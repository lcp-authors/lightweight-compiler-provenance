
centos-preinstalled/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010f7c <.init>:
   10f7c:	push	{r3, lr}
   10f80:	bl	11678 <__lxstat64@plt+0x430>
   10f84:	pop	{r3, pc}

Disassembly of section .plt:

00010f88 <fdopen@plt-0x14>:
   10f88:	push	{lr}		; (str lr, [sp, #-4]!)
   10f8c:	ldr	lr, [pc, #4]	; 10f98 <fdopen@plt-0x4>
   10f90:	add	lr, pc, lr
   10f94:	ldr	pc, [lr, #8]!
   10f98:	andeq	r7, r1, r8, rrx

00010f9c <fdopen@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #94208	; 0x17000
   10fa4:	ldr	pc, [ip, #104]!	; 0x68

00010fa8 <calloc@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #94208	; 0x17000
   10fb0:	ldr	pc, [ip, #96]!	; 0x60

00010fb4 <fputs_unlocked@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #94208	; 0x17000
   10fbc:	ldr	pc, [ip, #88]!	; 0x58

00010fc0 <raise@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #94208	; 0x17000
   10fc8:	ldr	pc, [ip, #80]!	; 0x50

00010fcc <strcmp@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #94208	; 0x17000
   10fd4:	ldr	pc, [ip, #72]!	; 0x48

00010fd8 <fflush@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #94208	; 0x17000
   10fe0:	ldr	pc, [ip, #64]!	; 0x40

00010fe4 <memmove@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #94208	; 0x17000
   10fec:	ldr	pc, [ip, #56]!	; 0x38

00010ff0 <free@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #94208	; 0x17000
   10ff8:	ldr	pc, [ip, #48]!	; 0x30

00010ffc <_exit@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #94208	; 0x17000
   11004:	ldr	pc, [ip, #40]!	; 0x28

00011008 <memcpy@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #94208	; 0x17000
   11010:	ldr	pc, [ip, #32]!

00011014 <mbsinit@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #94208	; 0x17000
   1101c:	ldr	pc, [ip, #24]!

00011020 <memcmp@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #94208	; 0x17000
   11028:	ldr	pc, [ip, #16]!

0001102c <dcgettext@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #94208	; 0x17000
   11034:	ldr	pc, [ip, #8]!

00011038 <__stack_chk_fail@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #94208	; 0x17000
   11040:	ldr	pc, [ip, #0]!

00011044 <realloc@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #90112	; 0x16000
   1104c:	ldr	pc, [ip, #4088]!	; 0xff8

00011050 <textdomain@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #90112	; 0x16000
   11058:	ldr	pc, [ip, #4080]!	; 0xff0

0001105c <__rawmemchr@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #90112	; 0x16000
   11064:	ldr	pc, [ip, #4072]!	; 0xfe8

00011068 <iswprint@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #90112	; 0x16000
   11070:	ldr	pc, [ip, #4064]!	; 0xfe0

00011074 <readlink@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #90112	; 0x16000
   1107c:	ldr	pc, [ip, #4056]!	; 0xfd8

00011080 <fwrite@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #90112	; 0x16000
   11088:	ldr	pc, [ip, #4048]!	; 0xfd0

0001108c <lseek64@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #90112	; 0x16000
   11094:	ldr	pc, [ip, #4040]!	; 0xfc8

00011098 <__ctype_get_mb_cur_max@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #90112	; 0x16000
   110a0:	ldr	pc, [ip, #4032]!	; 0xfc0

000110a4 <strcpy@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #90112	; 0x16000
   110ac:	ldr	pc, [ip, #4024]!	; 0xfb8

000110b0 <__fpending@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #90112	; 0x16000
   110b8:	ldr	pc, [ip, #4016]!	; 0xfb0

000110bc <mbrtowc@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #90112	; 0x16000
   110c4:	ldr	pc, [ip, #4008]!	; 0xfa8

000110c8 <error@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #90112	; 0x16000
   110d0:	ldr	pc, [ip, #4000]!	; 0xfa0

000110d4 <open64@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #90112	; 0x16000
   110dc:	ldr	pc, [ip, #3992]!	; 0xf98

000110e0 <getenv@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #90112	; 0x16000
   110e8:	ldr	pc, [ip, #3984]!	; 0xf90

000110ec <malloc@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #90112	; 0x16000
   110f4:	ldr	pc, [ip, #3976]!	; 0xf88

000110f8 <__libc_start_main@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #90112	; 0x16000
   11100:	ldr	pc, [ip, #3968]!	; 0xf80

00011104 <__freading@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #90112	; 0x16000
   1110c:	ldr	pc, [ip, #3960]!	; 0xf78

00011110 <__gmon_start__@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #90112	; 0x16000
   11118:	ldr	pc, [ip, #3952]!	; 0xf70

0001111c <getopt_long@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #90112	; 0x16000
   11124:	ldr	pc, [ip, #3944]!	; 0xf68

00011128 <__ctype_b_loc@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #90112	; 0x16000
   11130:	ldr	pc, [ip, #3936]!	; 0xf60

00011134 <getcwd@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #90112	; 0x16000
   1113c:	ldr	pc, [ip, #3928]!	; 0xf58

00011140 <exit@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #90112	; 0x16000
   11148:	ldr	pc, [ip, #3920]!	; 0xf50

0001114c <strlen@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #90112	; 0x16000
   11154:	ldr	pc, [ip, #3912]!	; 0xf48

00011158 <ungetc@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #90112	; 0x16000
   11160:	ldr	pc, [ip, #3904]!	; 0xf40

00011164 <__errno_location@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #90112	; 0x16000
   1116c:	ldr	pc, [ip, #3896]!	; 0xf38

00011170 <__cxa_atexit@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #90112	; 0x16000
   11178:	ldr	pc, [ip, #3888]!	; 0xf30

0001117c <memset@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #90112	; 0x16000
   11184:	ldr	pc, [ip, #3880]!	; 0xf28

00011188 <fscanf@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #90112	; 0x16000
   11190:	ldr	pc, [ip, #3872]!	; 0xf20

00011194 <__printf_chk@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #90112	; 0x16000
   1119c:	ldr	pc, [ip, #3864]!	; 0xf18

000111a0 <fileno@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #90112	; 0x16000
   111a8:	ldr	pc, [ip, #3856]!	; 0xf10

000111ac <__fprintf_chk@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #90112	; 0x16000
   111b4:	ldr	pc, [ip, #3848]!	; 0xf08

000111b8 <fclose@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #90112	; 0x16000
   111c0:	ldr	pc, [ip, #3840]!	; 0xf00

000111c4 <fseeko64@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #90112	; 0x16000
   111cc:	ldr	pc, [ip, #3832]!	; 0xef8

000111d0 <__uflow@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #90112	; 0x16000
   111d8:	ldr	pc, [ip, #3824]!	; 0xef0

000111dc <__overflow@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #90112	; 0x16000
   111e4:	ldr	pc, [ip, #3816]!	; 0xee8

000111e8 <setlocale@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #90112	; 0x16000
   111f0:	ldr	pc, [ip, #3808]!	; 0xee0

000111f4 <strrchr@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #90112	; 0x16000
   111fc:	ldr	pc, [ip, #3800]!	; 0xed8

00011200 <nl_langinfo@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #90112	; 0x16000
   11208:	ldr	pc, [ip, #3792]!	; 0xed0

0001120c <bindtextdomain@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #90112	; 0x16000
   11214:	ldr	pc, [ip, #3784]!	; 0xec8

00011218 <__xstat64@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #90112	; 0x16000
   11220:	ldr	pc, [ip, #3776]!	; 0xec0

00011224 <strncmp@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #90112	; 0x16000
   1122c:	ldr	pc, [ip, #3768]!	; 0xeb8

00011230 <abort@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #90112	; 0x16000
   11238:	ldr	pc, [ip, #3760]!	; 0xeb0

0001123c <close@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #90112	; 0x16000
   11244:	ldr	pc, [ip, #3752]!	; 0xea8

00011248 <__lxstat64@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #90112	; 0x16000
   11250:	ldr	pc, [ip, #3744]!	; 0xea0

Disassembly of section .text:

00011258 <close_stdout@@Base-0xe28>:
   11258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1125c:	mov	r5, r0
   11260:	sub	sp, sp, #36	; 0x24
   11264:	ldr	r0, [r1]
   11268:	mov	r4, r1
   1126c:	bl	134f8 <triple_free@@Base+0x1c>
   11270:	ldr	r1, [pc, #872]	; 115e0 <__lxstat64@plt+0x398>
   11274:	mov	r0, #6
   11278:	ldr	r6, [pc, #868]	; 115e4 <__lxstat64@plt+0x39c>
   1127c:	mov	r8, #0
   11280:	add	r1, pc, r1
   11284:	ldr	sl, [pc, #860]	; 115e8 <__lxstat64@plt+0x3a0>
   11288:	bl	111e8 <setlocale@plt>
   1128c:	add	r6, pc, r6
   11290:	ldr	r1, [pc, #852]	; 115ec <__lxstat64@plt+0x3a4>
   11294:	add	sl, pc, sl
   11298:	mov	r0, r6
   1129c:	ldr	r7, [pc, #844]	; 115f0 <__lxstat64@plt+0x3a8>
   112a0:	add	r1, pc, r1
   112a4:	mvn	fp, #0
   112a8:	bl	1120c <bindtextdomain@plt>
   112ac:	mov	r0, r6
   112b0:	bl	11050 <textdomain@plt>
   112b4:	ldr	r3, [pc, #824]	; 115f4 <__lxstat64@plt+0x3ac>
   112b8:	ldr	ip, [pc, #824]	; 115f8 <__lxstat64@plt+0x3b0>
   112bc:	add	r7, pc, r7
   112c0:	ldr	r6, [pc, #820]	; 115fc <__lxstat64@plt+0x3b4>
   112c4:	ldr	r0, [sl, r3]
   112c8:	add	ip, pc, ip
   112cc:	str	ip, [sp, #12]
   112d0:	add	r6, pc, r6
   112d4:	ldr	ip, [pc, #804]	; 11600 <__lxstat64@plt+0x3b8>
   112d8:	add	ip, pc, ip
   112dc:	str	ip, [sp, #16]
   112e0:	ldr	ip, [pc, #796]	; 11604 <__lxstat64@plt+0x3bc>
   112e4:	add	ip, pc, ip
   112e8:	str	ip, [sp, #20]
   112ec:	bl	16a4c <triple_free@@Base+0x3570>
   112f0:	mov	r9, #0
   112f4:	mov	r0, r5
   112f8:	str	r9, [sp]
   112fc:	mov	r1, r4
   11300:	mov	r2, r7
   11304:	mov	r3, r6
   11308:	bl	1111c <getopt_long@plt>
   1130c:	cmn	r0, #1
   11310:	beq	11434 <__lxstat64@plt+0x1ec>
   11314:	cmp	r0, #109	; 0x6d
   11318:	beq	1142c <__lxstat64@plt+0x1e4>
   1131c:	bgt	11344 <__lxstat64@plt+0xfc>
   11320:	cmn	r0, #2
   11324:	beq	11424 <__lxstat64@plt+0x1dc>
   11328:	ble	113dc <__lxstat64@plt+0x194>
   1132c:	cmp	r0, #101	; 0x65
   11330:	beq	11380 <__lxstat64@plt+0x138>
   11334:	cmp	r0, #102	; 0x66
   11338:	bne	113d4 <__lxstat64@plt+0x18c>
   1133c:	mov	fp, #1
   11340:	b	112f0 <__lxstat64@plt+0xa8>
   11344:	cmp	r0, #115	; 0x73
   11348:	beq	113a0 <__lxstat64@plt+0x158>
   1134c:	ble	11368 <__lxstat64@plt+0x120>
   11350:	cmp	r0, #118	; 0x76
   11354:	beq	11388 <__lxstat64@plt+0x140>
   11358:	cmp	r0, #122	; 0x7a
   1135c:	bne	113d4 <__lxstat64@plt+0x18c>
   11360:	mov	r8, #1
   11364:	b	112f0 <__lxstat64@plt+0xa8>
   11368:	cmp	r0, #110	; 0x6e
   1136c:	bne	11398 <__lxstat64@plt+0x150>
   11370:	ldr	ip, [sp, #20]
   11374:	mov	r3, #1
   11378:	strb	r3, [ip]
   1137c:	b	112f0 <__lxstat64@plt+0xa8>
   11380:	mov	fp, r9
   11384:	b	112f0 <__lxstat64@plt+0xa8>
   11388:	ldr	ip, [sp, #16]
   1138c:	mov	r3, #1
   11390:	strb	r3, [ip, #1]
   11394:	b	112f0 <__lxstat64@plt+0xa8>
   11398:	cmp	r0, #113	; 0x71
   1139c:	bne	113d4 <__lxstat64@plt+0x18c>
   113a0:	ldr	ip, [sp, #12]
   113a4:	mov	r3, #0
   113a8:	strb	r3, [ip, #1]
   113ac:	b	112f0 <__lxstat64@plt+0xa8>
   113b0:	ldr	r1, [pc, #592]	; 11608 <__lxstat64@plt+0x3c0>
   113b4:	mov	r2, #5
   113b8:	mov	r0, r9
   113bc:	add	r1, pc, r1
   113c0:	bl	1102c <dcgettext@plt>
   113c4:	mov	r1, r9
   113c8:	mov	r2, r0
   113cc:	mov	r0, r9
   113d0:	bl	110c8 <error@plt>
   113d4:	mov	r0, #1
   113d8:	bl	11770 <__lxstat64@plt+0x528>
   113dc:	cmn	r0, #3
   113e0:	bne	113d4 <__lxstat64@plt+0x18c>
   113e4:	ldr	r1, [pc, #544]	; 1160c <__lxstat64@plt+0x3c4>
   113e8:	ldr	r3, [pc, #544]	; 11610 <__lxstat64@plt+0x3c8>
   113ec:	ldr	r2, [pc, #544]	; 11614 <__lxstat64@plt+0x3cc>
   113f0:	ldr	r0, [sl, r1]
   113f4:	ldr	r3, [sl, r3]
   113f8:	add	r2, pc, r2
   113fc:	ldr	r1, [pc, #532]	; 11618 <__lxstat64@plt+0x3d0>
   11400:	ldr	r0, [r0]
   11404:	ldr	r3, [r3]
   11408:	add	r1, pc, r1
   1140c:	stm	sp, {r2, r9}
   11410:	ldr	r2, [pc, #516]	; 1161c <__lxstat64@plt+0x3d4>
   11414:	add	r2, pc, r2
   11418:	bl	15354 <triple_free@@Base+0x1e78>
   1141c:	mov	r0, r9
   11420:	bl	11140 <exit@plt>
   11424:	mov	r0, r9
   11428:	bl	11770 <__lxstat64@plt+0x528>
   1142c:	mov	fp, #2
   11430:	b	112f0 <__lxstat64@plt+0xa8>
   11434:	ldr	r3, [pc, #484]	; 11620 <__lxstat64@plt+0x3d8>
   11438:	ldr	r6, [sl, r3]
   1143c:	ldr	r3, [r6]
   11440:	cmp	r5, r3
   11444:	ble	113b0 <__lxstat64@plt+0x168>
   11448:	rsb	r2, r3, r5
   1144c:	cmp	r2, #1
   11450:	ble	11488 <__lxstat64@plt+0x240>
   11454:	ldr	r3, [pc, #456]	; 11624 <__lxstat64@plt+0x3dc>
   11458:	add	r3, pc, r3
   1145c:	ldrb	r3, [r3]
   11460:	cmp	r3, #0
   11464:	bne	115ac <__lxstat64@plt+0x364>
   11468:	ldr	r3, [r6]
   1146c:	mov	r9, #0
   11470:	ldr	r2, [pc, #432]	; 11628 <__lxstat64@plt+0x3e0>
   11474:	cmp	r5, r3
   11478:	strle	r9, [sp, #12]
   1147c:	add	r2, pc, r2
   11480:	strb	r9, [r2]
   11484:	ble	11590 <__lxstat64@plt+0x348>
   11488:	cmp	r8, #0
   1148c:	mov	ip, #0
   11490:	str	ip, [sp, #12]
   11494:	ldr	ip, [pc, #400]	; 1162c <__lxstat64@plt+0x3e4>
   11498:	moveq	r8, #10
   1149c:	movne	r8, #0
   114a0:	str	r8, [sp, #24]
   114a4:	add	ip, pc, ip
   114a8:	str	ip, [sp, #20]
   114ac:	uxtb	ip, r8
   114b0:	ldr	r8, [pc, #376]	; 11630 <__lxstat64@plt+0x3e8>
   114b4:	str	ip, [sp, #16]
   114b8:	ldr	ip, [pc, #372]	; 11634 <__lxstat64@plt+0x3ec>
   114bc:	add	r8, pc, r8
   114c0:	add	ip, pc, ip
   114c4:	str	ip, [sp, #28]
   114c8:	b	1152c <__lxstat64@plt+0x2e4>
   114cc:	ldr	r2, [pc, #312]	; 1160c <__lxstat64@plt+0x3c4>
   114d0:	mov	r0, r9
   114d4:	ldr	r7, [sl, r2]
   114d8:	ldr	r1, [r7]
   114dc:	bl	10fb4 <fputs_unlocked@plt>
   114e0:	ldrb	r2, [r8]
   114e4:	cmp	r2, #0
   114e8:	bne	11510 <__lxstat64@plt+0x2c8>
   114ec:	ldr	r0, [r7]
   114f0:	ldr	r2, [r0, #20]
   114f4:	ldr	r1, [r0, #24]
   114f8:	cmp	r2, r1
   114fc:	addcc	r1, r2, #1
   11500:	strcc	r1, [r0, #20]
   11504:	ldrcc	ip, [sp, #16]
   11508:	strbcc	ip, [r2]
   1150c:	bcs	115d4 <__lxstat64@plt+0x38c>
   11510:	mov	r0, r9
   11514:	bl	10ff0 <free@plt>
   11518:	ldr	r3, [r6]
   1151c:	add	r3, r3, #1
   11520:	str	r3, [r6]
   11524:	cmp	r5, r3
   11528:	ble	11590 <__lxstat64@plt+0x348>
   1152c:	ldr	r7, [r4, r3, lsl #2]
   11530:	cmn	fp, #1
   11534:	mov	r0, r7
   11538:	beq	1159c <__lxstat64@plt+0x354>
   1153c:	mov	r1, fp
   11540:	bl	11a50 <__lxstat64@plt+0x808>
   11544:	mov	r9, r0
   11548:	cmp	r9, #0
   1154c:	bne	114cc <__lxstat64@plt+0x284>
   11550:	ldr	ip, [sp, #20]
   11554:	ldrb	r2, [ip, #1]
   11558:	cmp	r2, #0
   1155c:	moveq	ip, #1
   11560:	streq	ip, [sp, #12]
   11564:	beq	11518 <__lxstat64@plt+0x2d0>
   11568:	bl	11164 <__errno_location@plt>
   1156c:	mov	r3, r7
   11570:	mov	ip, #1
   11574:	str	ip, [sp, #12]
   11578:	mov	r2, r0
   1157c:	mov	r0, r9
   11580:	ldr	r1, [r2]
   11584:	ldr	r2, [sp, #28]
   11588:	bl	110c8 <error@plt>
   1158c:	b	11518 <__lxstat64@plt+0x2d0>
   11590:	ldr	r0, [sp, #12]
   11594:	add	sp, sp, #36	; 0x24
   11598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1159c:	mov	r1, #63	; 0x3f
   115a0:	bl	1198c <__lxstat64@plt+0x744>
   115a4:	mov	r9, r0
   115a8:	b	11548 <__lxstat64@plt+0x300>
   115ac:	ldr	r1, [pc, #132]	; 11638 <__lxstat64@plt+0x3f0>
   115b0:	mov	r0, r9
   115b4:	mov	r2, #5
   115b8:	add	r1, pc, r1
   115bc:	bl	1102c <dcgettext@plt>
   115c0:	mov	r1, r9
   115c4:	mov	r2, r0
   115c8:	mov	r0, r9
   115cc:	bl	110c8 <error@plt>
   115d0:	b	11468 <__lxstat64@plt+0x220>
   115d4:	ldr	r1, [sp, #24]
   115d8:	bl	111dc <__overflow@plt>
   115dc:	b	11510 <__lxstat64@plt+0x2c8>
   115e0:	andeq	r5, r0, r8, ror sp
   115e4:	andeq	r5, r0, ip, lsr #25
   115e8:	andeq	r6, r1, r4, ror #26
   115ec:	andeq	r5, r0, ip, asr sp
   115f0:	andeq	r5, r0, r0, ror sp
   115f4:	andeq	r0, r0, ip, lsl #2
   115f8:			; <UNDEFINED> instruction: 0x00016eb5
   115fc:	andeq	r6, r1, ip, asr fp
   11600:	andeq	r6, r1, r5, lsr #29
   11604:	muleq	r1, r9, lr
   11608:	andeq	r5, r0, ip, ror ip
   1160c:	andeq	r0, r0, r0, lsr #2
   11610:	andeq	r0, r0, r4, lsl #2
   11614:	andeq	r5, r0, r4, lsr #24
   11618:	andeq	r5, r0, r8, lsl #24
   1161c:	andeq	r5, r0, r0, lsr #22
   11620:	andeq	r0, r0, r0, lsl #2
   11624:	andeq	r6, r1, r5, lsr #26
   11628:	andeq	r6, r1, r1, lsl #26
   1162c:	ldrdeq	r6, [r1], -r9
   11630:	andeq	r6, r1, r1, asr #25
   11634:	andeq	r5, r0, ip, asr #24
   11638:	muleq	r0, r0, sl
   1163c:	mov	fp, #0
   11640:	mov	lr, #0
   11644:	pop	{r1}		; (ldr r1, [sp], #4)
   11648:	mov	r2, sp
   1164c:	push	{r2}		; (str r2, [sp, #-4]!)
   11650:	push	{r0}		; (str r0, [sp, #-4]!)
   11654:	ldr	ip, [pc, #16]	; 1166c <__lxstat64@plt+0x424>
   11658:	push	{ip}		; (str ip, [sp, #-4]!)
   1165c:	ldr	r0, [pc, #12]	; 11670 <__lxstat64@plt+0x428>
   11660:	ldr	r3, [pc, #12]	; 11674 <__lxstat64@plt+0x42c>
   11664:	bl	110f8 <__libc_start_main@plt>
   11668:	bl	11230 <abort@plt>
   1166c:	andeq	r6, r1, r8, asr #20
   11670:	andeq	r1, r1, r8, asr r2
   11674:	andeq	r6, r1, r4, ror #19
   11678:	ldr	r3, [pc, #20]	; 11694 <__lxstat64@plt+0x44c>
   1167c:	ldr	r2, [pc, #20]	; 11698 <__lxstat64@plt+0x450>
   11680:	add	r3, pc, r3
   11684:	ldr	r2, [r3, r2]
   11688:	cmp	r2, #0
   1168c:	bxeq	lr
   11690:	b	11110 <__gmon_start__@plt>
   11694:	andeq	r6, r1, r8, ror r9
   11698:	andeq	r0, r0, r4, lsl r1
   1169c:	push	{r3, lr}
   116a0:	movw	r0, #33156	; 0x8184
   116a4:	ldr	r3, [pc, #36]	; 116d0 <__lxstat64@plt+0x488>
   116a8:	movt	r0, #2
   116ac:	rsb	r3, r0, r3
   116b0:	cmp	r3, #6
   116b4:	popls	{r3, pc}
   116b8:	movw	r3, #0
   116bc:	movt	r3, #0
   116c0:	cmp	r3, #0
   116c4:	popeq	{r3, pc}
   116c8:	blx	r3
   116cc:	pop	{r3, pc}
   116d0:	andeq	r8, r2, r7, lsl #3
   116d4:	push	{r3, lr}
   116d8:	movw	r0, #33156	; 0x8184
   116dc:	movw	r3, #33156	; 0x8184
   116e0:	movt	r0, #2
   116e4:	movt	r3, #2
   116e8:	rsb	r3, r0, r3
   116ec:	asr	r3, r3, #2
   116f0:	add	r3, r3, r3, lsr #31
   116f4:	asrs	r1, r3, #1
   116f8:	popeq	{r3, pc}
   116fc:	movw	r2, #0
   11700:	movt	r2, #0
   11704:	cmp	r2, #0
   11708:	popeq	{r3, pc}
   1170c:	blx	r2
   11710:	pop	{r3, pc}
   11714:	push	{r4, lr}
   11718:	movw	r4, #33156	; 0x8184
   1171c:	movt	r4, #2
   11720:	ldrb	r3, [r4]
   11724:	cmp	r3, #0
   11728:	popne	{r4, pc}
   1172c:	bl	1169c <__lxstat64@plt+0x454>
   11730:	mov	r3, #1
   11734:	strb	r3, [r4]
   11738:	pop	{r4, pc}
   1173c:	movw	r0, #32304	; 0x7e30
   11740:	movt	r0, #2
   11744:	push	{r3, lr}
   11748:	ldr	r3, [r0]
   1174c:	cmp	r3, #0
   11750:	beq	11768 <__lxstat64@plt+0x520>
   11754:	movw	r3, #0
   11758:	movt	r3, #0
   1175c:	cmp	r3, #0
   11760:	beq	11768 <__lxstat64@plt+0x520>
   11764:	blx	r3
   11768:	pop	{r3, lr}
   1176c:	b	116d4 <__lxstat64@plt+0x48c>
   11770:	push	{r4, r5, r6, lr}
   11774:	subs	r4, r0, #0
   11778:	ldr	r5, [pc, #456]	; 11948 <__lxstat64@plt+0x700>
   1177c:	add	r5, pc, r5
   11780:	beq	117c8 <__lxstat64@plt+0x580>
   11784:	ldr	r3, [pc, #448]	; 1194c <__lxstat64@plt+0x704>
   11788:	mov	r2, #5
   1178c:	ldr	r1, [pc, #444]	; 11950 <__lxstat64@plt+0x708>
   11790:	mov	r0, #0
   11794:	ldr	r3, [r5, r3]
   11798:	add	r1, pc, r1
   1179c:	ldr	r6, [r3]
   117a0:	bl	1102c <dcgettext@plt>
   117a4:	ldr	r3, [pc, #424]	; 11954 <__lxstat64@plt+0x70c>
   117a8:	mov	r1, #1
   117ac:	ldr	r3, [r5, r3]
   117b0:	ldr	r3, [r3]
   117b4:	mov	r2, r0
   117b8:	mov	r0, r6
   117bc:	bl	111ac <__fprintf_chk@plt>
   117c0:	mov	r0, r4
   117c4:	bl	11140 <exit@plt>
   117c8:	ldr	r1, [pc, #392]	; 11958 <__lxstat64@plt+0x710>
   117cc:	mov	r2, #5
   117d0:	add	r1, pc, r1
   117d4:	bl	1102c <dcgettext@plt>
   117d8:	ldr	r3, [pc, #372]	; 11954 <__lxstat64@plt+0x70c>
   117dc:	ldr	r6, [r5, r3]
   117e0:	ldr	r2, [r6]
   117e4:	mov	r1, r0
   117e8:	mov	r0, #1
   117ec:	bl	11194 <__printf_chk@plt>
   117f0:	ldr	r1, [pc, #356]	; 1195c <__lxstat64@plt+0x714>
   117f4:	mov	r2, #5
   117f8:	mov	r0, r4
   117fc:	add	r1, pc, r1
   11800:	bl	1102c <dcgettext@plt>
   11804:	ldr	r3, [pc, #340]	; 11960 <__lxstat64@plt+0x718>
   11808:	ldr	r5, [r5, r3]
   1180c:	ldr	r1, [r5]
   11810:	bl	10fb4 <fputs_unlocked@plt>
   11814:	ldr	r1, [pc, #328]	; 11964 <__lxstat64@plt+0x71c>
   11818:	mov	r2, #5
   1181c:	mov	r0, r4
   11820:	add	r1, pc, r1
   11824:	bl	1102c <dcgettext@plt>
   11828:	ldr	r1, [r5]
   1182c:	bl	10fb4 <fputs_unlocked@plt>
   11830:	ldr	r1, [pc, #304]	; 11968 <__lxstat64@plt+0x720>
   11834:	mov	r2, #5
   11838:	mov	r0, r4
   1183c:	add	r1, pc, r1
   11840:	bl	1102c <dcgettext@plt>
   11844:	ldr	r1, [r5]
   11848:	bl	10fb4 <fputs_unlocked@plt>
   1184c:	ldr	r1, [pc, #280]	; 1196c <__lxstat64@plt+0x724>
   11850:	mov	r2, #5
   11854:	mov	r0, r4
   11858:	add	r1, pc, r1
   1185c:	bl	1102c <dcgettext@plt>
   11860:	ldr	r1, [r5]
   11864:	bl	10fb4 <fputs_unlocked@plt>
   11868:	ldr	r1, [pc, #256]	; 11970 <__lxstat64@plt+0x728>
   1186c:	mov	r2, #5
   11870:	mov	r0, r4
   11874:	add	r1, pc, r1
   11878:	bl	1102c <dcgettext@plt>
   1187c:	ldr	r1, [r5]
   11880:	bl	10fb4 <fputs_unlocked@plt>
   11884:	ldr	r1, [pc, #232]	; 11974 <__lxstat64@plt+0x72c>
   11888:	mov	r2, #5
   1188c:	mov	r0, r4
   11890:	add	r1, pc, r1
   11894:	bl	1102c <dcgettext@plt>
   11898:	ldr	r2, [pc, #216]	; 11978 <__lxstat64@plt+0x730>
   1189c:	ldr	r3, [pc, #216]	; 1197c <__lxstat64@plt+0x734>
   118a0:	add	r2, pc, r2
   118a4:	add	r3, pc, r3
   118a8:	mov	r1, r0
   118ac:	mov	r0, #1
   118b0:	bl	11194 <__printf_chk@plt>
   118b4:	mov	r0, #5
   118b8:	mov	r1, r4
   118bc:	bl	111e8 <setlocale@plt>
   118c0:	cmp	r0, #0
   118c4:	beq	118e0 <__lxstat64@plt+0x698>
   118c8:	ldr	r1, [pc, #176]	; 11980 <__lxstat64@plt+0x738>
   118cc:	mov	r2, #3
   118d0:	add	r1, pc, r1
   118d4:	bl	11224 <strncmp@plt>
   118d8:	cmp	r0, #0
   118dc:	bne	11914 <__lxstat64@plt+0x6cc>
   118e0:	ldr	r1, [pc, #156]	; 11984 <__lxstat64@plt+0x73c>
   118e4:	mov	r2, #5
   118e8:	mov	r0, #0
   118ec:	add	r1, pc, r1
   118f0:	bl	1102c <dcgettext@plt>
   118f4:	mov	r5, r0
   118f8:	ldr	r0, [r6]
   118fc:	bl	12198 <close_stdout@@Base+0x118>
   11900:	mov	r1, r5
   11904:	mov	r2, r0
   11908:	mov	r0, #1
   1190c:	bl	11194 <__printf_chk@plt>
   11910:	b	117c0 <__lxstat64@plt+0x578>
   11914:	ldr	r1, [pc, #108]	; 11988 <__lxstat64@plt+0x740>
   11918:	mov	r2, #5
   1191c:	mov	r0, r4
   11920:	add	r1, pc, r1
   11924:	bl	1102c <dcgettext@plt>
   11928:	mov	r5, r0
   1192c:	ldr	r0, [r6]
   11930:	bl	12198 <close_stdout@@Base+0x118>
   11934:	mov	r1, r5
   11938:	mov	r2, r0
   1193c:	mov	r0, #1
   11940:	bl	11194 <__printf_chk@plt>
   11944:	b	118e0 <__lxstat64@plt+0x698>
   11948:	andeq	r6, r1, ip, ror r8
   1194c:	andeq	r0, r0, r8, lsl #2
   11950:	andeq	r5, r0, r8, ror #5
   11954:	andeq	r0, r0, ip, lsr #2
   11958:	ldrdeq	r5, [r0], -r8
   1195c:	andeq	r5, r0, ip, asr #5
   11960:	andeq	r0, r0, r0, lsr #2
   11964:	andeq	r5, r0, r0, ror #5
   11968:	andeq	r5, r0, ip, ror r4
   1196c:	andeq	r5, r0, ip, asr r6
   11970:	andeq	r5, r0, r0, ror r6
   11974:	andeq	r5, r0, ip, lsl #13
   11978:	muleq	r0, r4, r6
   1197c:	andeq	r5, r0, r0, lsr #13
   11980:	muleq	r0, ip, r6
   11984:	andeq	r5, r0, ip, asr #13
   11988:	andeq	r5, r0, r0, asr r6
   1198c:	cmp	r1, #1024	; 0x400
   11990:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11994:	addls	r4, r1, #1
   11998:	mov	r7, r0
   1199c:	movwhi	r4, #1025	; 0x401
   119a0:	mov	r0, r4
   119a4:	bl	110ec <malloc@plt>
   119a8:	mov	r2, r4
   119ac:	subs	r5, r0, #0
   119b0:	mov	r0, r7
   119b4:	mov	r1, r5
   119b8:	beq	11a30 <__lxstat64@plt+0x7e8>
   119bc:	bl	11074 <readlink@plt>
   119c0:	subs	r6, r0, #0
   119c4:	blt	11a08 <__lxstat64@plt+0x7c0>
   119c8:	cmp	r4, r6
   119cc:	mov	r0, r5
   119d0:	bhi	11a3c <__lxstat64@plt+0x7f4>
   119d4:	bl	10ff0 <free@plt>
   119d8:	cmn	r4, #-1073741823	; 0xc0000001
   119dc:	lslls	r4, r4, #1
   119e0:	bls	119a0 <__lxstat64@plt+0x758>
   119e4:	cmn	r4, #-2147483646	; 0x80000002
   119e8:	mvn	r4, #-2147483648	; 0x80000000
   119ec:	bls	119a0 <__lxstat64@plt+0x758>
   119f0:	bl	11164 <__errno_location@plt>
   119f4:	mov	r3, #0
   119f8:	mov	r2, #12
   119fc:	str	r2, [r0]
   11a00:	mov	r0, r3
   11a04:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11a08:	bl	11164 <__errno_location@plt>
   11a0c:	ldr	r9, [r0]
   11a10:	mov	r8, r0
   11a14:	cmp	r9, #34	; 0x22
   11a18:	beq	119c8 <__lxstat64@plt+0x780>
   11a1c:	mov	r0, r5
   11a20:	bl	10ff0 <free@plt>
   11a24:	str	r9, [r8]
   11a28:	mov	r3, #0
   11a2c:	b	11a34 <__lxstat64@plt+0x7ec>
   11a30:	mov	r3, r5
   11a34:	mov	r0, r3
   11a38:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11a3c:	mov	r3, r5
   11a40:	mov	r2, #0
   11a44:	mov	r0, r3
   11a48:	strb	r2, [r5, r6]
   11a4c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11a50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a54:	sub	sp, sp, #164	; 0xa4
   11a58:	ldr	r3, [pc, #1508]	; 12044 <__lxstat64@plt+0xdfc>
   11a5c:	and	r8, r1, #3
   11a60:	ldr	r2, [pc, #1504]	; 12048 <__lxstat64@plt+0xe00>
   11a64:	ubfx	r1, r1, #2, #1
   11a68:	add	r3, pc, r3
   11a6c:	str	r3, [sp, #32]
   11a70:	ldr	lr, [sp, #32]
   11a74:	sub	r3, r8, #1
   11a78:	str	r0, [sp, #28]
   11a7c:	ands	r5, r3, r8
   11a80:	str	r1, [sp, #16]
   11a84:	ldr	r2, [lr, r2]
   11a88:	str	r2, [sp, #36]	; 0x24
   11a8c:	ldr	r2, [r2]
   11a90:	str	r2, [sp, #156]	; 0x9c
   11a94:	bne	11fa4 <__lxstat64@plt+0xd5c>
   11a98:	ldr	r1, [sp, #28]
   11a9c:	cmp	r1, #0
   11aa0:	beq	12010 <__lxstat64@plt+0xdc8>
   11aa4:	ldr	r3, [sp, #28]
   11aa8:	ldrb	r4, [r3]
   11aac:	cmp	r4, #0
   11ab0:	beq	11fb8 <__lxstat64@plt+0xd70>
   11ab4:	cmp	r4, #47	; 0x2f
   11ab8:	beq	11efc <__lxstat64@plt+0xcb4>
   11abc:	bl	156d0 <triple_free@@Base+0x21f4>
   11ac0:	subs	r6, r0, #0
   11ac4:	beq	11cd0 <__lxstat64@plt+0xa88>
   11ac8:	mov	r1, r5
   11acc:	bl	1105c <__rawmemchr@plt>
   11ad0:	rsb	r5, r6, r0
   11ad4:	mov	r7, r0
   11ad8:	cmp	r5, #4096	; 0x1000
   11adc:	movge	r5, r0
   11ae0:	blt	11f28 <__lxstat64@plt+0xce0>
   11ae4:	ldr	r4, [sp, #28]
   11ae8:	mov	r3, #0
   11aec:	mov	sl, r3
   11af0:	add	lr, sp, #48	; 0x30
   11af4:	str	r3, [sp, #20]
   11af8:	str	r3, [sp, #44]	; 0x2c
   11afc:	str	r3, [sp, #40]	; 0x28
   11b00:	str	lr, [sp, #24]
   11b04:	ldrb	r1, [r4]
   11b08:	cmp	r1, #0
   11b0c:	beq	11c80 <__lxstat64@plt+0xa38>
   11b10:	cmp	r1, #47	; 0x2f
   11b14:	addeq	r4, r4, #1
   11b18:	bne	11dc0 <__lxstat64@plt+0xb78>
   11b1c:	mov	r9, r4
   11b20:	add	r4, r4, #1
   11b24:	ldrb	r1, [r9]
   11b28:	cmp	r1, #47	; 0x2f
   11b2c:	beq	11b1c <__lxstat64@plt+0x8d4>
   11b30:	cmp	r1, #0
   11b34:	moveq	r4, r9
   11b38:	beq	11b54 <__lxstat64@plt+0x90c>
   11b3c:	add	r3, r9, #1
   11b40:	mov	r4, r3
   11b44:	ldrb	r2, [r3], #1
   11b48:	cmp	r2, #47	; 0x2f
   11b4c:	cmpne	r2, #0
   11b50:	bne	11b40 <__lxstat64@plt+0x8f8>
   11b54:	cmp	r4, r9
   11b58:	beq	11c80 <__lxstat64@plt+0xa38>
   11b5c:	rsb	fp, r9, r4
   11b60:	cmp	fp, #1
   11b64:	beq	11cf0 <__lxstat64@plt+0xaa8>
   11b68:	cmp	fp, #2
   11b6c:	beq	11cfc <__lxstat64@plt+0xab4>
   11b70:	ldrb	r3, [r5, #-1]
   11b74:	cmp	r3, #47	; 0x2f
   11b78:	addne	r0, r5, #1
   11b7c:	moveq	r0, r5
   11b80:	add	r3, r0, fp
   11b84:	movne	r1, #47	; 0x2f
   11b88:	strbne	r1, [r5]
   11b8c:	cmp	r7, r3
   11b90:	bhi	11bc4 <__lxstat64@plt+0x97c>
   11b94:	rsb	r7, r6, r7
   11b98:	cmp	fp, #4096	; 0x1000
   11b9c:	addge	r7, r7, #1
   11ba0:	addlt	r7, r7, #4096	; 0x1000
   11ba4:	addge	r7, r7, fp
   11ba8:	rsb	r5, r6, r0
   11bac:	mov	r0, r6
   11bb0:	mov	r1, r7
   11bb4:	bl	154bc <triple_free@@Base+0x1fe0>
   11bb8:	mov	r6, r0
   11bbc:	add	r7, r0, r7
   11bc0:	add	r0, r0, r5
   11bc4:	subs	r3, r8, #2
   11bc8:	mov	r1, r9
   11bcc:	mov	r2, fp
   11bd0:	rsbs	r9, r3, #0
   11bd4:	adcs	r9, r9, r3
   11bd8:	bl	11008 <memcpy@plt>
   11bdc:	ldr	r3, [sp, #16]
   11be0:	tst	r3, r9
   11be4:	strb	sl, [r0, fp]
   11be8:	add	r5, r0, fp
   11bec:	bne	11c34 <__lxstat64@plt+0x9ec>
   11bf0:	ldr	lr, [sp, #16]
   11bf4:	mov	r0, #3
   11bf8:	mov	r1, r6
   11bfc:	add	r2, sp, #48	; 0x30
   11c00:	cmp	lr, #0
   11c04:	beq	11d54 <__lxstat64@plt+0xb0c>
   11c08:	bl	11218 <__xstat64@plt>
   11c0c:	adds	r0, r0, #0
   11c10:	movne	r0, #1
   11c14:	cmp	r0, #0
   11c18:	beq	11c5c <__lxstat64@plt+0xa14>
   11c1c:	bl	11164 <__errno_location@plt>
   11c20:	cmp	r8, #0
   11c24:	ldr	fp, [r0]
   11c28:	beq	11df4 <__lxstat64@plt+0xbac>
   11c2c:	cmp	r8, #1
   11c30:	beq	11dc8 <__lxstat64@plt+0xb80>
   11c34:	str	sl, [sp, #64]	; 0x40
   11c38:	ldrb	r3, [r4]
   11c3c:	cmp	r3, #0
   11c40:	beq	11b04 <__lxstat64@plt+0x8bc>
   11c44:	cmp	r8, #2
   11c48:	beq	11b04 <__lxstat64@plt+0x8bc>
   11c4c:	bl	11164 <__errno_location@plt>
   11c50:	mov	fp, #20
   11c54:	mov	r9, r0
   11c58:	b	11df8 <__lxstat64@plt+0xbb0>
   11c5c:	ldr	r3, [sp, #64]	; 0x40
   11c60:	and	r3, r3, #61440	; 0xf000
   11c64:	cmp	r3, #40960	; 0xa000
   11c68:	beq	11d64 <__lxstat64@plt+0xb1c>
   11c6c:	cmp	r3, #16384	; 0x4000
   11c70:	bne	11c38 <__lxstat64@plt+0x9f0>
   11c74:	ldrb	r1, [r4]
   11c78:	cmp	r1, #0
   11c7c:	bne	11b10 <__lxstat64@plt+0x8c8>
   11c80:	add	r3, r6, #1
   11c84:	cmp	r5, r3
   11c88:	bhi	11f18 <__lxstat64@plt+0xcd0>
   11c8c:	mov	r3, r5
   11c90:	mov	r2, #0
   11c94:	strb	r2, [r3], #1
   11c98:	cmp	r7, r3
   11c9c:	beq	11cb4 <__lxstat64@plt+0xa6c>
   11ca0:	rsb	r1, r6, r5
   11ca4:	mov	r0, r6
   11ca8:	add	r1, r1, #1
   11cac:	bl	154bc <triple_free@@Base+0x1fe0>
   11cb0:	mov	r6, r0
   11cb4:	ldr	r0, [sp, #40]	; 0x28
   11cb8:	bl	10ff0 <free@plt>
   11cbc:	ldr	r3, [sp, #20]
   11cc0:	cmp	r3, #0
   11cc4:	beq	11cd0 <__lxstat64@plt+0xa88>
   11cc8:	mov	r0, r3
   11ccc:	bl	12df8 <close_stdout@@Base+0xd78>
   11cd0:	ldr	r1, [sp, #36]	; 0x24
   11cd4:	mov	r0, r6
   11cd8:	ldr	r2, [sp, #156]	; 0x9c
   11cdc:	ldr	r3, [r1]
   11ce0:	cmp	r2, r3
   11ce4:	bne	12040 <__lxstat64@plt+0xdf8>
   11ce8:	add	sp, sp, #164	; 0xa4
   11cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cf0:	cmp	r1, #46	; 0x2e
   11cf4:	bne	11b70 <__lxstat64@plt+0x928>
   11cf8:	b	11b04 <__lxstat64@plt+0x8bc>
   11cfc:	cmp	r1, #46	; 0x2e
   11d00:	bne	11b70 <__lxstat64@plt+0x928>
   11d04:	ldrb	r3, [r9, #1]
   11d08:	cmp	r3, #46	; 0x2e
   11d0c:	bne	11b70 <__lxstat64@plt+0x928>
   11d10:	add	r3, r6, #1
   11d14:	cmp	r5, r3
   11d18:	bls	11b04 <__lxstat64@plt+0x8bc>
   11d1c:	sub	r3, r5, #1
   11d20:	cmp	r6, r3
   11d24:	bcs	12030 <__lxstat64@plt+0xde8>
   11d28:	ldrb	r2, [r5, #-2]
   11d2c:	mov	r5, r3
   11d30:	cmp	r2, #47	; 0x2f
   11d34:	beq	11b04 <__lxstat64@plt+0x8bc>
   11d38:	sub	r5, r5, #1
   11d3c:	cmp	r5, r6
   11d40:	beq	11b04 <__lxstat64@plt+0x8bc>
   11d44:	ldrb	r3, [r5, #-1]
   11d48:	cmp	r3, #47	; 0x2f
   11d4c:	bne	11d38 <__lxstat64@plt+0xaf0>
   11d50:	b	11b04 <__lxstat64@plt+0x8bc>
   11d54:	bl	11248 <__lxstat64@plt>
   11d58:	adds	r0, r0, #0
   11d5c:	movne	r0, #1
   11d60:	b	11c14 <__lxstat64@plt+0x9cc>
   11d64:	ldr	r3, [sp, #20]
   11d68:	cmp	r3, #0
   11d6c:	beq	11f68 <__lxstat64@plt+0xd20>
   11d70:	ldr	r0, [sp, #20]
   11d74:	add	r2, sp, #48	; 0x30
   11d78:	ldr	r1, [sp, #28]
   11d7c:	bl	122a4 <close_stdout@@Base+0x224>
   11d80:	cmp	r0, #0
   11d84:	beq	11e18 <__lxstat64@plt+0xbd0>
   11d88:	cmp	r9, #0
   11d8c:	bne	11b04 <__lxstat64@plt+0x8bc>
   11d90:	mov	fp, #40	; 0x28
   11d94:	ldr	r0, [sp, #40]	; 0x28
   11d98:	bl	10ff0 <free@plt>
   11d9c:	mov	r0, r6
   11da0:	bl	10ff0 <free@plt>
   11da4:	ldr	r0, [sp, #20]
   11da8:	bl	12df8 <close_stdout@@Base+0xd78>
   11dac:	bl	11164 <__errno_location@plt>
   11db0:	mov	r9, r0
   11db4:	str	fp, [r9]
   11db8:	mov	r6, #0
   11dbc:	b	11cd0 <__lxstat64@plt+0xa88>
   11dc0:	mov	r9, r4
   11dc4:	b	11b3c <__lxstat64@plt+0x8f4>
   11dc8:	ldrb	r3, [r4]
   11dcc:	cmp	r3, #47	; 0x2f
   11dd0:	bne	11de4 <__lxstat64@plt+0xb9c>
   11dd4:	mov	r2, r4
   11dd8:	ldrb	r3, [r2, #1]!
   11ddc:	cmp	r3, #47	; 0x2f
   11de0:	beq	11dd8 <__lxstat64@plt+0xb90>
   11de4:	cmp	r3, #0
   11de8:	bne	11df4 <__lxstat64@plt+0xbac>
   11dec:	cmp	fp, #2
   11df0:	beq	11b04 <__lxstat64@plt+0x8bc>
   11df4:	mov	r9, r0
   11df8:	ldr	r0, [sp, #40]	; 0x28
   11dfc:	bl	10ff0 <free@plt>
   11e00:	mov	r0, r6
   11e04:	bl	10ff0 <free@plt>
   11e08:	ldr	r3, [sp, #20]
   11e0c:	cmp	r3, #0
   11e10:	beq	11db4 <__lxstat64@plt+0xb6c>
   11e14:	b	11da4 <__lxstat64@plt+0xb5c>
   11e18:	ldr	r0, [sp, #20]
   11e1c:	add	r2, sp, #48	; 0x30
   11e20:	ldr	r1, [sp, #28]
   11e24:	bl	1223c <close_stdout@@Base+0x1bc>
   11e28:	mov	r0, r6
   11e2c:	ldr	r1, [sp, #96]	; 0x60
   11e30:	bl	1198c <__lxstat64@plt+0x744>
   11e34:	subs	fp, r0, #0
   11e38:	beq	11ff4 <__lxstat64@plt+0xdac>
   11e3c:	bl	1114c <strlen@plt>
   11e40:	mov	r9, r0
   11e44:	mov	r0, r4
   11e48:	bl	1114c <strlen@plt>
   11e4c:	ldr	r1, [sp, #44]	; 0x2c
   11e50:	cmp	r1, #0
   11e54:	add	r3, r9, r0
   11e58:	mov	r2, r0
   11e5c:	add	r3, r3, #1
   11e60:	beq	11f44 <__lxstat64@plt+0xcfc>
   11e64:	ldr	lr, [sp, #44]	; 0x2c
   11e68:	cmp	lr, r3
   11e6c:	bcc	11fcc <__lxstat64@plt+0xd84>
   11e70:	ldr	r3, [sp, #40]	; 0x28
   11e74:	mov	r1, r4
   11e78:	add	r2, r2, #1
   11e7c:	add	r0, r3, r9
   11e80:	bl	10fe4 <memmove@plt>
   11e84:	ldr	r0, [sp, #40]	; 0x28
   11e88:	mov	r1, fp
   11e8c:	mov	r2, r9
   11e90:	bl	11008 <memcpy@plt>
   11e94:	ldrb	r3, [fp]
   11e98:	cmp	r3, #47	; 0x2f
   11e9c:	addeq	r5, r6, #1
   11ea0:	strbeq	r3, [r6]
   11ea4:	str	r0, [sp, #28]
   11ea8:	beq	11eec <__lxstat64@plt+0xca4>
   11eac:	add	r3, r6, #1
   11eb0:	cmp	r5, r3
   11eb4:	bls	11eec <__lxstat64@plt+0xca4>
   11eb8:	sub	r3, r5, #1
   11ebc:	cmp	r6, r3
   11ec0:	bcs	12038 <__lxstat64@plt+0xdf0>
   11ec4:	ldrb	r2, [r5, #-2]
   11ec8:	mov	r5, r3
   11ecc:	cmp	r2, #47	; 0x2f
   11ed0:	beq	11eec <__lxstat64@plt+0xca4>
   11ed4:	sub	r5, r5, #1
   11ed8:	cmp	r5, r6
   11edc:	beq	11eec <__lxstat64@plt+0xca4>
   11ee0:	ldrb	r3, [r5, #-1]
   11ee4:	cmp	r3, #47	; 0x2f
   11ee8:	bne	11ed4 <__lxstat64@plt+0xc8c>
   11eec:	mov	r0, fp
   11ef0:	ldr	r4, [sp, #28]
   11ef4:	bl	10ff0 <free@plt>
   11ef8:	b	11b04 <__lxstat64@plt+0x8bc>
   11efc:	mov	r0, #4096	; 0x1000
   11f00:	bl	15464 <triple_free@@Base+0x1f88>
   11f04:	mov	r6, r0
   11f08:	strb	r4, [r0]
   11f0c:	add	r7, r0, #4096	; 0x1000
   11f10:	add	r5, r0, #1
   11f14:	b	11ae4 <__lxstat64@plt+0x89c>
   11f18:	ldrb	r3, [r5, #-1]
   11f1c:	cmp	r3, #47	; 0x2f
   11f20:	subeq	r5, r5, #1
   11f24:	b	11c8c <__lxstat64@plt+0xa44>
   11f28:	mov	r0, r6
   11f2c:	mov	r1, #4096	; 0x1000
   11f30:	bl	154bc <triple_free@@Base+0x1fe0>
   11f34:	mov	r6, r0
   11f38:	add	r5, r0, r5
   11f3c:	add	r7, r0, #4096	; 0x1000
   11f40:	b	11ae4 <__lxstat64@plt+0x89c>
   11f44:	cmp	r3, #4096	; 0x1000
   11f48:	movcc	r3, #4096	; 0x1000
   11f4c:	str	r2, [sp, #8]
   11f50:	str	r3, [sp, #44]	; 0x2c
   11f54:	mov	r0, r3
   11f58:	bl	15464 <triple_free@@Base+0x1f88>
   11f5c:	ldr	r2, [sp, #8]
   11f60:	str	r0, [sp, #40]	; 0x28
   11f64:	b	11e70 <__lxstat64@plt+0xc28>
   11f68:	ldr	lr, [sp, #32]
   11f6c:	mov	r1, r3
   11f70:	ldr	ip, [pc, #212]	; 1204c <__lxstat64@plt+0xe04>
   11f74:	mov	r0, #7
   11f78:	ldr	r2, [pc, #208]	; 12050 <__lxstat64@plt+0xe08>
   11f7c:	ldr	r3, [pc, #208]	; 12054 <__lxstat64@plt+0xe0c>
   11f80:	ldr	ip, [lr, ip]
   11f84:	ldr	r2, [lr, r2]
   11f88:	ldr	r3, [lr, r3]
   11f8c:	str	ip, [sp]
   11f90:	bl	12c14 <close_stdout@@Base+0xb94>
   11f94:	cmp	r0, #0
   11f98:	str	r0, [sp, #20]
   11f9c:	bne	11d70 <__lxstat64@plt+0xb28>
   11fa0:	bl	15678 <triple_free@@Base+0x219c>
   11fa4:	bl	11164 <__errno_location@plt>
   11fa8:	mov	r6, #0
   11fac:	mov	r3, #22
   11fb0:	str	r3, [r0]
   11fb4:	b	11cd0 <__lxstat64@plt+0xa88>
   11fb8:	bl	11164 <__errno_location@plt>
   11fbc:	mov	r6, r4
   11fc0:	mov	r3, #2
   11fc4:	str	r3, [r0]
   11fc8:	b	11cd0 <__lxstat64@plt+0xa88>
   11fcc:	mov	r1, r3
   11fd0:	ldr	r0, [sp, #40]	; 0x28
   11fd4:	str	r2, [sp, #8]
   11fd8:	str	r3, [sp, #12]
   11fdc:	bl	154bc <triple_free@@Base+0x1fe0>
   11fe0:	ldr	r3, [sp, #12]
   11fe4:	ldr	r2, [sp, #8]
   11fe8:	str	r3, [sp, #44]	; 0x2c
   11fec:	str	r0, [sp, #40]	; 0x28
   11ff0:	b	11e70 <__lxstat64@plt+0xc28>
   11ff4:	cmp	r9, #0
   11ff8:	beq	12024 <__lxstat64@plt+0xddc>
   11ffc:	bl	11164 <__errno_location@plt>
   12000:	ldr	fp, [r0]
   12004:	cmp	fp, #12
   12008:	bne	11b04 <__lxstat64@plt+0x8bc>
   1200c:	b	11d94 <__lxstat64@plt+0xb4c>
   12010:	bl	11164 <__errno_location@plt>
   12014:	ldr	r6, [sp, #28]
   12018:	mov	r3, #22
   1201c:	str	r3, [r0]
   12020:	b	11cd0 <__lxstat64@plt+0xa88>
   12024:	bl	11164 <__errno_location@plt>
   12028:	ldr	fp, [r0]
   1202c:	b	11d94 <__lxstat64@plt+0xb4c>
   12030:	mov	r5, r3
   12034:	b	11b04 <__lxstat64@plt+0x8bc>
   12038:	mov	r5, r3
   1203c:	b	11eec <__lxstat64@plt+0xca4>
   12040:	bl	11038 <__stack_chk_fail@plt>
   12044:	muleq	r1, r0, r5
   12048:	strdeq	r0, [r0], -r8
   1204c:	strdeq	r0, [r0], -ip
   12050:	andeq	r0, r0, r0, lsl r1
   12054:	andeq	r0, r0, ip, lsl r1
   12058:	ldr	r3, [pc, #8]	; 12068 <__lxstat64@plt+0xe20>
   1205c:	add	r3, pc, r3
   12060:	str	r0, [r3]
   12064:	bx	lr
   12068:	andeq	r6, r1, r4, lsr #2
   1206c:	ldr	r3, [pc, #8]	; 1207c <__lxstat64@plt+0xe34>
   12070:	add	r3, pc, r3
   12074:	strb	r0, [r3, #4]
   12078:	bx	lr
   1207c:	andeq	r6, r1, r0, lsl r1

00012080 <close_stdout@@Base>:
   12080:	push	{r4, r5, r6, r7, lr}
   12084:	sub	sp, sp, #12
   12088:	ldr	r4, [pc, #228]	; 12174 <close_stdout@@Base+0xf4>
   1208c:	ldr	r3, [pc, #228]	; 12178 <close_stdout@@Base+0xf8>
   12090:	add	r4, pc, r4
   12094:	ldr	r3, [r4, r3]
   12098:	ldr	r0, [r3]
   1209c:	bl	15704 <triple_free@@Base+0x2228>
   120a0:	cmp	r0, #0
   120a4:	beq	120cc <close_stdout@@Base+0x4c>
   120a8:	ldr	r3, [pc, #204]	; 1217c <close_stdout@@Base+0xfc>
   120ac:	add	r3, pc, r3
   120b0:	ldrb	r3, [r3, #4]
   120b4:	cmp	r3, #0
   120b8:	beq	120ec <close_stdout@@Base+0x6c>
   120bc:	bl	11164 <__errno_location@plt>
   120c0:	ldr	r3, [r0]
   120c4:	cmp	r3, #32
   120c8:	bne	120ec <close_stdout@@Base+0x6c>
   120cc:	ldr	r3, [pc, #172]	; 12180 <close_stdout@@Base+0x100>
   120d0:	ldr	r3, [r4, r3]
   120d4:	ldr	r0, [r3]
   120d8:	bl	15704 <triple_free@@Base+0x2228>
   120dc:	cmp	r0, #0
   120e0:	bne	12140 <close_stdout@@Base+0xc0>
   120e4:	add	sp, sp, #12
   120e8:	pop	{r4, r5, r6, r7, pc}
   120ec:	ldr	r1, [pc, #144]	; 12184 <close_stdout@@Base+0x104>
   120f0:	mov	r0, #0
   120f4:	mov	r2, #5
   120f8:	add	r1, pc, r1
   120fc:	bl	1102c <dcgettext@plt>
   12100:	ldr	r3, [pc, #128]	; 12188 <close_stdout@@Base+0x108>
   12104:	ldr	r5, [pc, r3]
   12108:	cmp	r5, #0
   1210c:	mov	r6, r0
   12110:	beq	12150 <close_stdout@@Base+0xd0>
   12114:	bl	11164 <__errno_location@plt>
   12118:	ldr	r7, [r0]
   1211c:	mov	r0, r5
   12120:	bl	14bf4 <triple_free@@Base+0x1718>
   12124:	ldr	r2, [pc, #96]	; 1218c <close_stdout@@Base+0x10c>
   12128:	str	r6, [sp]
   1212c:	mov	r1, r7
   12130:	add	r2, pc, r2
   12134:	mov	r3, r0
   12138:	mov	r0, #0
   1213c:	bl	110c8 <error@plt>
   12140:	ldr	r3, [pc, #72]	; 12190 <close_stdout@@Base+0x110>
   12144:	ldr	r3, [r4, r3]
   12148:	ldr	r0, [r3]
   1214c:	bl	10ffc <_exit@plt>
   12150:	bl	11164 <__errno_location@plt>
   12154:	ldr	r2, [pc, #56]	; 12194 <close_stdout@@Base+0x114>
   12158:	add	r2, pc, r2
   1215c:	mov	r3, r0
   12160:	mov	r0, r5
   12164:	ldr	r1, [r3]
   12168:	mov	r3, r6
   1216c:	bl	110c8 <error@plt>
   12170:	b	12140 <close_stdout@@Base+0xc0>
   12174:	andeq	r5, r1, r8, ror #30
   12178:	andeq	r0, r0, r0, lsr #2
   1217c:	ldrdeq	r6, [r1], -r4
   12180:	andeq	r0, r0, r8, lsl #2
   12184:	andeq	r5, r0, r4
   12188:	andeq	r6, r1, ip, ror r0
   1218c:	ldrdeq	r4, [r0], -r8
   12190:	andeq	r0, r0, r4, lsr #2
   12194:			; <UNDEFINED> instruction: 0x00004fb4
   12198:	ldrb	r3, [r0]
   1219c:	cmp	r3, #47	; 0x2f
   121a0:	bne	121bc <close_stdout@@Base+0x13c>
   121a4:	add	r2, r0, #1
   121a8:	mov	r0, r2
   121ac:	add	r2, r2, #1
   121b0:	ldrb	r3, [r0]
   121b4:	cmp	r3, #47	; 0x2f
   121b8:	beq	121a8 <close_stdout@@Base+0x128>
   121bc:	cmp	r3, #0
   121c0:	bxeq	lr
   121c4:	mov	r2, r0
   121c8:	mov	r1, #0
   121cc:	cmp	r3, #47	; 0x2f
   121d0:	moveq	r1, #1
   121d4:	beq	121e4 <close_stdout@@Base+0x164>
   121d8:	cmp	r1, #0
   121dc:	movne	r0, r2
   121e0:	movne	r1, #0
   121e4:	ldrb	r3, [r2, #1]!
   121e8:	cmp	r3, #0
   121ec:	bne	121cc <close_stdout@@Base+0x14c>
   121f0:	bx	lr
   121f4:	push	{r4, lr}
   121f8:	mov	r4, r0
   121fc:	bl	1114c <strlen@plt>
   12200:	cmp	r0, #1
   12204:	popls	{r4, pc}
   12208:	sub	r3, r0, #1
   1220c:	ldrb	r2, [r4, r3]
   12210:	cmp	r2, #47	; 0x2f
   12214:	popne	{r4, pc}
   12218:	mov	r0, r3
   1221c:	cmp	r0, #1
   12220:	sub	r3, r3, #1
   12224:	beq	12238 <close_stdout@@Base+0x1b8>
   12228:	ldrb	r2, [r4, r3]
   1222c:	cmp	r2, #47	; 0x2f
   12230:	popne	{r4, pc}
   12234:	b	12218 <close_stdout@@Base+0x198>
   12238:	pop	{r4, pc}
   1223c:	push	{r4, r5, r6, r7, r8, lr}
   12240:	subs	r8, r0, #0
   12244:	mov	r4, r1
   12248:	mov	r7, r2
   1224c:	popeq	{r4, r5, r6, r7, r8, pc}
   12250:	mov	r0, #24
   12254:	bl	15464 <triple_free@@Base+0x1f88>
   12258:	mov	r6, r0
   1225c:	mov	r0, r4
   12260:	bl	1565c <triple_free@@Base+0x2180>
   12264:	ldrd	r4, [r7]
   12268:	mov	r1, r6
   1226c:	str	r0, [r6]
   12270:	mov	r0, r8
   12274:	ldrd	r2, [r7, #96]	; 0x60
   12278:	strd	r4, [r6, #16]
   1227c:	strd	r2, [r6, #8]
   12280:	bl	1323c <close_stdout@@Base+0x11bc>
   12284:	cmp	r0, #0
   12288:	beq	122a0 <close_stdout@@Base+0x220>
   1228c:	cmp	r6, r0
   12290:	popeq	{r4, r5, r6, r7, r8, pc}
   12294:	mov	r0, r6
   12298:	pop	{r4, r5, r6, r7, r8, lr}
   1229c:	b	134dc <triple_free@@Base>
   122a0:	bl	15678 <triple_free@@Base+0x219c>
   122a4:	ldr	r3, [pc, #104]	; 12314 <close_stdout@@Base+0x294>
   122a8:	ldr	ip, [pc, #104]	; 12318 <close_stdout@@Base+0x298>
   122ac:	add	r3, pc, r3
   122b0:	push	{r4, r5, r6, r7, lr}
   122b4:	subs	r4, r0, #0
   122b8:	ldr	r6, [r3, ip]
   122bc:	sub	sp, sp, #36	; 0x24
   122c0:	mov	r7, r1
   122c4:	moveq	r0, r4
   122c8:	ldr	r3, [r6]
   122cc:	str	r3, [sp, #28]
   122d0:	beq	122f8 <close_stdout@@Base+0x278>
   122d4:	ldrd	r4, [r2, #96]	; 0x60
   122d8:	mov	r1, sp
   122dc:	ldrd	r2, [r2]
   122e0:	str	r7, [sp]
   122e4:	strd	r4, [sp, #8]
   122e8:	strd	r2, [sp, #16]
   122ec:	bl	12960 <close_stdout@@Base+0x8e0>
   122f0:	adds	r0, r0, #0
   122f4:	movne	r0, #1
   122f8:	ldr	r2, [sp, #28]
   122fc:	ldr	r3, [r6]
   12300:	cmp	r2, r3
   12304:	bne	12310 <close_stdout@@Base+0x290>
   12308:	add	sp, sp, #36	; 0x24
   1230c:	pop	{r4, r5, r6, r7, pc}
   12310:	bl	11038 <__stack_chk_fail@plt>
   12314:	andeq	r5, r1, ip, asr #26
   12318:	strdeq	r0, [r0], -r8
   1231c:	andeq	r0, r0, r0
   12320:	cmp	r0, #9
   12324:	push	{r4, r5, r6, r7, r8, lr}
   12328:	bhi	123bc <close_stdout@@Base+0x33c>
   1232c:	mov	r7, #11
   12330:	movw	r8, #43691	; 0xaaab
   12334:	movt	r8, #43690	; 0xaaaa
   12338:	cmp	r7, #9
   1233c:	bls	123b4 <close_stdout@@Base+0x334>
   12340:	umull	r2, r3, r8, r7
   12344:	lsr	r3, r3, #1
   12348:	add	r3, r3, r3, lsl #1
   1234c:	cmp	r7, r3
   12350:	beq	123a0 <close_stdout@@Base+0x320>
   12354:	mov	r6, #16
   12358:	mov	r5, #9
   1235c:	mov	r4, #3
   12360:	b	12370 <close_stdout@@Base+0x2f0>
   12364:	bl	16044 <triple_free@@Base+0x2b68>
   12368:	cmp	r1, #0
   1236c:	beq	123a0 <close_stdout@@Base+0x320>
   12370:	add	r5, r5, r6
   12374:	add	r4, r4, #2
   12378:	cmp	r5, r7
   1237c:	mov	r0, r7
   12380:	add	r6, r6, #8
   12384:	mov	r1, r4
   12388:	bcc	12364 <close_stdout@@Base+0x2e4>
   1238c:	mov	r1, r4
   12390:	mov	r0, r7
   12394:	bl	16044 <triple_free@@Base+0x2b68>
   12398:	cmp	r1, #0
   1239c:	bne	123ac <close_stdout@@Base+0x32c>
   123a0:	add	r7, r7, #2
   123a4:	cmn	r7, #1
   123a8:	bne	12338 <close_stdout@@Base+0x2b8>
   123ac:	mov	r0, r7
   123b0:	pop	{r4, r5, r6, r7, r8, pc}
   123b4:	mov	r4, #3
   123b8:	b	1238c <close_stdout@@Base+0x30c>
   123bc:	orr	r7, r0, #1
   123c0:	cmn	r7, #1
   123c4:	bne	12330 <close_stdout@@Base+0x2b0>
   123c8:	b	123ac <close_stdout@@Base+0x32c>
   123cc:	push	{r3, lr}
   123d0:	ror	r0, r0, #3
   123d4:	bl	16044 <triple_free@@Base+0x2b68>
   123d8:	mov	r0, r1
   123dc:	pop	{r3, pc}
   123e0:	subs	r3, r1, r0
   123e4:	rsbs	r0, r3, #0
   123e8:	adcs	r0, r0, r3
   123ec:	bx	lr
   123f0:	push	{r4, lr}
   123f4:	mov	r4, r0
   123f8:	ldr	r3, [r4, #24]
   123fc:	mov	r0, r1
   12400:	ldr	r1, [r4, #8]
   12404:	blx	r3
   12408:	ldr	r3, [r4, #8]
   1240c:	cmp	r0, r3
   12410:	bcs	12420 <close_stdout@@Base+0x3a0>
   12414:	ldr	r3, [r4]
   12418:	add	r0, r3, r0, lsl #3
   1241c:	pop	{r4, pc}
   12420:	bl	11230 <abort@plt>
   12424:	push	{r4, r5, r6, r7, r8, lr}
   12428:	mov	r7, r2
   1242c:	mov	r8, r3
   12430:	mov	r6, r0
   12434:	mov	r5, r1
   12438:	bl	123f0 <close_stdout@@Base+0x370>
   1243c:	str	r0, [r7]
   12440:	mov	r4, r0
   12444:	ldr	r2, [r0]
   12448:	cmp	r2, #0
   1244c:	beq	124e0 <close_stdout@@Base+0x460>
   12450:	cmp	r5, r2
   12454:	beq	12474 <close_stdout@@Base+0x3f4>
   12458:	mov	r1, r2
   1245c:	ldr	r3, [r6, #28]
   12460:	mov	r0, r5
   12464:	blx	r3
   12468:	cmp	r0, #0
   1246c:	beq	124d4 <close_stdout@@Base+0x454>
   12470:	ldr	r2, [r4]
   12474:	cmp	r8, #0
   12478:	beq	124a4 <close_stdout@@Base+0x424>
   1247c:	ldr	r3, [r4, #4]
   12480:	cmp	r3, #0
   12484:	streq	r3, [r4]
   12488:	ldmne	r3, {r0, r1}
   1248c:	movne	ip, #0
   12490:	stmne	r4, {r0, r1}
   12494:	strne	ip, [r3]
   12498:	ldrne	r1, [r6, #36]	; 0x24
   1249c:	strne	r1, [r3, #4]
   124a0:	strne	r3, [r6, #36]	; 0x24
   124a4:	mov	r0, r2
   124a8:	pop	{r4, r5, r6, r7, r8, pc}
   124ac:	ldr	r2, [ip]
   124b0:	cmp	r2, r5
   124b4:	beq	124f4 <close_stdout@@Base+0x474>
   124b8:	mov	r1, r2
   124bc:	mov	r0, r5
   124c0:	ldr	r2, [r6, #28]
   124c4:	blx	r2
   124c8:	cmp	r0, #0
   124cc:	bne	124ec <close_stdout@@Base+0x46c>
   124d0:	ldr	r4, [r4, #4]
   124d4:	ldr	ip, [r4, #4]
   124d8:	cmp	ip, #0
   124dc:	bne	124ac <close_stdout@@Base+0x42c>
   124e0:	mov	r2, #0
   124e4:	mov	r0, r2
   124e8:	pop	{r4, r5, r6, r7, r8, pc}
   124ec:	ldr	ip, [r4, #4]
   124f0:	ldr	r2, [ip]
   124f4:	cmp	r8, #0
   124f8:	beq	124a4 <close_stdout@@Base+0x424>
   124fc:	ldr	r1, [ip, #4]
   12500:	mov	r3, #0
   12504:	mov	r0, r2
   12508:	str	r1, [r4, #4]
   1250c:	str	r3, [ip]
   12510:	ldr	r3, [r6, #36]	; 0x24
   12514:	str	r3, [ip, #4]
   12518:	str	ip, [r6, #36]	; 0x24
   1251c:	pop	{r4, r5, r6, r7, r8, pc}
   12520:	ldr	r1, [pc, #176]	; 125d8 <close_stdout@@Base+0x558>
   12524:	mov	r2, r0
   12528:	ldr	r3, [r0]
   1252c:	add	r1, pc, r1
   12530:	cmp	r3, r1
   12534:	beq	125c4 <close_stdout@@Base+0x544>
   12538:	vldr	s15, [r3, #8]
   1253c:	vldr	s14, [pc, #136]	; 125cc <close_stdout@@Base+0x54c>
   12540:	vcmpe.f32	s15, s14
   12544:	vmrs	APSR_nzcv, fpscr
   12548:	ble	125b0 <close_stdout@@Base+0x530>
   1254c:	vldr	s13, [pc, #124]	; 125d0 <close_stdout@@Base+0x550>
   12550:	vcmpe.f32	s15, s13
   12554:	vmrs	APSR_nzcv, fpscr
   12558:	bpl	125b0 <close_stdout@@Base+0x530>
   1255c:	vldr	s13, [pc, #112]	; 125d4 <close_stdout@@Base+0x554>
   12560:	vldr	s12, [r3, #12]
   12564:	vcmpe.f32	s12, s13
   12568:	vmrs	APSR_nzcv, fpscr
   1256c:	ble	125b0 <close_stdout@@Base+0x530>
   12570:	vldr	s13, [r3]
   12574:	vcmpe.f32	s13, #0.0
   12578:	vmrs	APSR_nzcv, fpscr
   1257c:	blt	125b0 <close_stdout@@Base+0x530>
   12580:	vadd.f32	s14, s13, s14
   12584:	vldr	s12, [r3, #4]
   12588:	vcmpe.f32	s14, s12
   1258c:	vmrs	APSR_nzcv, fpscr
   12590:	bpl	125b0 <close_stdout@@Base+0x530>
   12594:	vmov.f32	s13, #112	; 0x3f800000  1.0
   12598:	vcmpe.f32	s12, s13
   1259c:	vmrs	APSR_nzcv, fpscr
   125a0:	bhi	125b0 <close_stdout@@Base+0x530>
   125a4:	vcmpe.f32	s15, s14
   125a8:	vmrs	APSR_nzcv, fpscr
   125ac:	bgt	125c4 <close_stdout@@Base+0x544>
   125b0:	ldr	r3, [pc, #36]	; 125dc <close_stdout@@Base+0x55c>
   125b4:	mov	r0, #0
   125b8:	add	r3, pc, r3
   125bc:	str	r3, [r2]
   125c0:	bx	lr
   125c4:	mov	r0, #1
   125c8:	bx	lr
   125cc:	stclcc	12, cr12, [ip, #820]	; 0x334
   125d0:	svccc	0x00666666
   125d4:	svccc	0x008ccccd
   125d8:	andeq	r4, r0, r4, ror #23
   125dc:	andeq	r4, r0, r8, asr fp
   125e0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125e4:	mov	r8, r1
   125e8:	ldr	r6, [r1]
   125ec:	mov	r5, r0
   125f0:	ldr	r3, [r1, #4]
   125f4:	mov	sl, r2
   125f8:	cmp	r6, r3
   125fc:	addcc	r6, r6, #8
   12600:	movcc	r9, #0
   12604:	bcs	126ac <close_stdout@@Base+0x62c>
   12608:	ldr	fp, [r6, #-8]
   1260c:	mov	r7, r6
   12610:	cmp	fp, #0
   12614:	beq	126a0 <close_stdout@@Base+0x620>
   12618:	ldr	r4, [r6, #-4]
   1261c:	cmp	r4, #0
   12620:	bne	12640 <close_stdout@@Base+0x5c0>
   12624:	b	12690 <close_stdout@@Base+0x610>
   12628:	ldr	r2, [r0, #4]
   1262c:	cmp	r3, #0
   12630:	str	r2, [r4, #4]
   12634:	str	r4, [r0, #4]
   12638:	mov	r4, r3
   1263c:	beq	1268c <close_stdout@@Base+0x60c>
   12640:	ldr	fp, [r4]
   12644:	mov	r0, r5
   12648:	mov	r1, fp
   1264c:	bl	123f0 <close_stdout@@Base+0x370>
   12650:	ldr	r3, [r4, #4]
   12654:	ldr	r2, [r0]
   12658:	cmp	r2, #0
   1265c:	bne	12628 <close_stdout@@Base+0x5a8>
   12660:	str	fp, [r0]
   12664:	cmp	r3, #0
   12668:	ldr	r1, [r5, #12]
   1266c:	add	r1, r1, #1
   12670:	str	r1, [r5, #12]
   12674:	str	r2, [r4]
   12678:	ldr	r2, [r5, #36]	; 0x24
   1267c:	str	r2, [r4, #4]
   12680:	str	r4, [r5, #36]	; 0x24
   12684:	mov	r4, r3
   12688:	bne	12640 <close_stdout@@Base+0x5c0>
   1268c:	ldr	fp, [r6, #-8]
   12690:	cmp	sl, #0
   12694:	str	r9, [r6, #-4]
   12698:	beq	126b4 <close_stdout@@Base+0x634>
   1269c:	ldr	r3, [r8, #4]
   126a0:	cmp	r3, r7
   126a4:	add	r6, r6, #8
   126a8:	bhi	12608 <close_stdout@@Base+0x588>
   126ac:	mov	r0, #1
   126b0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126b4:	mov	r0, r5
   126b8:	mov	r1, fp
   126bc:	bl	123f0 <close_stdout@@Base+0x370>
   126c0:	ldr	r3, [r0]
   126c4:	mov	r4, r0
   126c8:	cmp	r3, #0
   126cc:	beq	12718 <close_stdout@@Base+0x698>
   126d0:	ldr	r0, [r5, #36]	; 0x24
   126d4:	cmp	r0, #0
   126d8:	beq	1272c <close_stdout@@Base+0x6ac>
   126dc:	ldr	r2, [r0, #4]
   126e0:	str	r2, [r5, #36]	; 0x24
   126e4:	str	fp, [r0]
   126e8:	ldr	r2, [r4, #4]
   126ec:	str	r2, [r0, #4]
   126f0:	str	r0, [r4, #4]
   126f4:	str	r9, [r6, #-8]
   126f8:	add	r6, r6, #8
   126fc:	ldr	r3, [r8, #4]
   12700:	ldr	r2, [r8, #12]
   12704:	cmp	r3, r7
   12708:	sub	r2, r2, #1
   1270c:	str	r2, [r8, #12]
   12710:	bhi	12608 <close_stdout@@Base+0x588>
   12714:	b	126ac <close_stdout@@Base+0x62c>
   12718:	str	fp, [r0]
   1271c:	ldr	r3, [r5, #12]
   12720:	add	r3, r3, #1
   12724:	str	r3, [r5, #12]
   12728:	b	126f4 <close_stdout@@Base+0x674>
   1272c:	mov	r0, #8
   12730:	bl	110ec <malloc@plt>
   12734:	cmp	r0, #0
   12738:	bne	126e4 <close_stdout@@Base+0x664>
   1273c:	mov	r0, sl
   12740:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12744:	ldr	r0, [r0, #8]
   12748:	bx	lr
   1274c:	ldr	r0, [r0, #12]
   12750:	bx	lr
   12754:	ldr	r0, [r0, #16]
   12758:	bx	lr
   1275c:	ldr	r3, [r0]
   12760:	ldr	r2, [r0, #4]
   12764:	cmp	r3, r2
   12768:	bcs	127cc <close_stdout@@Base+0x74c>
   1276c:	add	r1, r3, #8
   12770:	add	r2, r2, #7
   12774:	rsb	r2, r1, r2
   12778:	add	r3, r3, #16
   1277c:	bic	r2, r2, #7
   12780:	mov	r0, #0
   12784:	add	ip, r3, r2
   12788:	ldr	r3, [r1, #-8]
   1278c:	cmp	r3, #0
   12790:	beq	127bc <close_stdout@@Base+0x73c>
   12794:	ldr	r3, [r1, #-4]
   12798:	mov	r2, #1
   1279c:	cmp	r3, #0
   127a0:	beq	127b4 <close_stdout@@Base+0x734>
   127a4:	ldr	r3, [r3, #4]
   127a8:	add	r2, r2, #1
   127ac:	cmp	r3, #0
   127b0:	bne	127a4 <close_stdout@@Base+0x724>
   127b4:	cmp	r0, r2
   127b8:	movcc	r0, r2
   127bc:	add	r1, r1, #8
   127c0:	cmp	r1, ip
   127c4:	bne	12788 <close_stdout@@Base+0x708>
   127c8:	bx	lr
   127cc:	mov	r0, #0
   127d0:	bx	lr
   127d4:	push	{r4}		; (str r4, [sp, #-4]!)
   127d8:	ldr	r3, [r0]
   127dc:	ldr	r2, [r0, #4]
   127e0:	cmp	r3, r2
   127e4:	bcs	12874 <close_stdout@@Base+0x7f4>
   127e8:	add	r2, r2, #7
   127ec:	add	r1, r3, #8
   127f0:	rsb	ip, r1, r2
   127f4:	add	r3, r3, #16
   127f8:	bic	ip, ip, #7
   127fc:	mov	r2, #0
   12800:	add	r4, r3, ip
   12804:	mov	ip, r2
   12808:	ldr	r3, [r1, #-8]
   1280c:	cmp	r3, #0
   12810:	beq	12838 <close_stdout@@Base+0x7b8>
   12814:	ldr	r3, [r1, #-4]
   12818:	add	ip, ip, #1
   1281c:	add	r2, r2, #1
   12820:	cmp	r3, #0
   12824:	beq	12838 <close_stdout@@Base+0x7b8>
   12828:	ldr	r3, [r3, #4]
   1282c:	add	r2, r2, #1
   12830:	cmp	r3, #0
   12834:	bne	12828 <close_stdout@@Base+0x7a8>
   12838:	add	r1, r1, #8
   1283c:	cmp	r1, r4
   12840:	bne	12808 <close_stdout@@Base+0x788>
   12844:	ldr	r3, [r0, #12]
   12848:	cmp	r3, ip
   1284c:	movne	r0, #0
   12850:	beq	1285c <close_stdout@@Base+0x7dc>
   12854:	pop	{r4}		; (ldr r4, [sp], #4)
   12858:	bx	lr
   1285c:	ldr	r0, [r0, #16]
   12860:	pop	{r4}		; (ldr r4, [sp], #4)
   12864:	subs	r3, r0, r2
   12868:	rsbs	r0, r3, #0
   1286c:	adcs	r0, r0, r3
   12870:	bx	lr
   12874:	mov	r2, #0
   12878:	mov	ip, r2
   1287c:	b	12844 <close_stdout@@Base+0x7c4>
   12880:	push	{r4, r5, r6, r7, r8, lr}
   12884:	sub	sp, sp, #8
   12888:	mov	r4, r1
   1288c:	mov	r5, r0
   12890:	bl	12754 <close_stdout@@Base+0x6d4>
   12894:	mov	r8, r0
   12898:	mov	r0, r5
   1289c:	bl	12744 <close_stdout@@Base+0x6c4>
   128a0:	mov	r6, r0
   128a4:	mov	r0, r5
   128a8:	bl	1274c <close_stdout@@Base+0x6cc>
   128ac:	mov	r7, r0
   128b0:	mov	r0, r5
   128b4:	bl	1275c <close_stdout@@Base+0x6dc>
   128b8:	ldr	r2, [pc, #144]	; 12950 <close_stdout@@Base+0x8d0>
   128bc:	mov	r3, r8
   128c0:	mov	r1, #1
   128c4:	add	r2, pc, r2
   128c8:	mov	r5, r0
   128cc:	mov	r0, r4
   128d0:	bl	111ac <__fprintf_chk@plt>
   128d4:	ldr	r2, [pc, #120]	; 12954 <close_stdout@@Base+0x8d4>
   128d8:	mov	r3, r6
   128dc:	mov	r0, r4
   128e0:	mov	r1, #1
   128e4:	add	r2, pc, r2
   128e8:	bl	111ac <__fprintf_chk@plt>
   128ec:	vmov	s15, r7
   128f0:	vldr	d5, [pc, #80]	; 12948 <close_stdout@@Base+0x8c8>
   128f4:	ldr	r2, [pc, #92]	; 12958 <close_stdout@@Base+0x8d8>
   128f8:	vcvt.f64.u32	d4, s15
   128fc:	mov	r3, r7
   12900:	vmov	s15, r6
   12904:	mov	r0, r4
   12908:	mov	r1, #1
   1290c:	add	r2, pc, r2
   12910:	vmul.f64	d5, d4, d5
   12914:	vcvt.f64.u32	d6, s15
   12918:	vdiv.f64	d7, d5, d6
   1291c:	vstr	d7, [sp]
   12920:	bl	111ac <__fprintf_chk@plt>
   12924:	ldr	r2, [pc, #48]	; 1295c <close_stdout@@Base+0x8dc>
   12928:	mov	r0, r4
   1292c:	mov	r3, r5
   12930:	mov	r1, #1
   12934:	add	r2, pc, r2
   12938:	add	sp, sp, #8
   1293c:	pop	{r4, r5, r6, r7, r8, lr}
   12940:	b	111ac <__fprintf_chk@plt>
   12944:	nop	{0}
   12948:	andeq	r0, r0, r0
   1294c:	subsmi	r0, r9, r0
   12950:	andeq	r4, r0, r0, ror #16
   12954:	andeq	r4, r0, r8, asr r8
   12958:	andeq	r4, r0, r8, asr #16
   1295c:	andeq	r4, r0, r4, asr #16
   12960:	push	{r4, r5, r6, lr}
   12964:	mov	r6, r0
   12968:	mov	r5, r1
   1296c:	bl	123f0 <close_stdout@@Base+0x370>
   12970:	ldr	r3, [r0]
   12974:	mov	r4, r0
   12978:	cmp	r3, #0
   1297c:	bne	12988 <close_stdout@@Base+0x908>
   12980:	b	129b4 <close_stdout@@Base+0x934>
   12984:	ldr	r3, [r4]
   12988:	cmp	r5, r3
   1298c:	mov	r1, r3
   12990:	mov	r0, r5
   12994:	beq	129c0 <close_stdout@@Base+0x940>
   12998:	ldr	r3, [r6, #28]
   1299c:	blx	r3
   129a0:	cmp	r0, #0
   129a4:	bne	129bc <close_stdout@@Base+0x93c>
   129a8:	ldr	r4, [r4, #4]
   129ac:	cmp	r4, #0
   129b0:	bne	12984 <close_stdout@@Base+0x904>
   129b4:	mov	r0, #0
   129b8:	pop	{r4, r5, r6, pc}
   129bc:	ldr	r3, [r4]
   129c0:	mov	r0, r3
   129c4:	pop	{r4, r5, r6, pc}
   129c8:	push	{r3, lr}
   129cc:	ldr	r3, [r0, #16]
   129d0:	cmp	r3, #0
   129d4:	beq	12a14 <close_stdout@@Base+0x994>
   129d8:	ldr	r3, [r0]
   129dc:	ldr	r2, [r0, #4]
   129e0:	cmp	r3, r2
   129e4:	bcs	12a10 <close_stdout@@Base+0x990>
   129e8:	ldr	r0, [r3]
   129ec:	cmp	r0, #0
   129f0:	beq	12a04 <close_stdout@@Base+0x984>
   129f4:	b	12a1c <close_stdout@@Base+0x99c>
   129f8:	ldr	r0, [r3]
   129fc:	cmp	r0, #0
   12a00:	popne	{r3, pc}
   12a04:	add	r3, r3, #8
   12a08:	cmp	r3, r2
   12a0c:	bcc	129f8 <close_stdout@@Base+0x978>
   12a10:	bl	11230 <abort@plt>
   12a14:	mov	r0, r3
   12a18:	pop	{r3, pc}
   12a1c:	pop	{r3, pc}
   12a20:	push	{r3, r4, r5, lr}
   12a24:	mov	r5, r0
   12a28:	mov	r4, r1
   12a2c:	bl	123f0 <close_stdout@@Base+0x370>
   12a30:	mov	r2, r0
   12a34:	mov	r3, r0
   12a38:	b	12a44 <close_stdout@@Base+0x9c4>
   12a3c:	cmp	r3, #0
   12a40:	beq	12a5c <close_stdout@@Base+0x9dc>
   12a44:	ldr	ip, [r3]
   12a48:	ldr	r3, [r3, #4]
   12a4c:	cmp	ip, r4
   12a50:	bne	12a3c <close_stdout@@Base+0x9bc>
   12a54:	cmp	r3, #0
   12a58:	bne	12a84 <close_stdout@@Base+0xa04>
   12a5c:	ldr	r3, [r5, #4]
   12a60:	b	12a70 <close_stdout@@Base+0x9f0>
   12a64:	ldr	r0, [r2]
   12a68:	cmp	r0, #0
   12a6c:	popne	{r3, r4, r5, pc}
   12a70:	add	r2, r2, #8
   12a74:	cmp	r2, r3
   12a78:	bcc	12a64 <close_stdout@@Base+0x9e4>
   12a7c:	mov	r0, #0
   12a80:	pop	{r3, r4, r5, pc}
   12a84:	ldr	r0, [r3]
   12a88:	pop	{r3, r4, r5, pc}
   12a8c:	push	{r4, r5, r6, r7}
   12a90:	mov	r6, r0
   12a94:	ldm	r0, {r5, ip}
   12a98:	cmp	ip, r5
   12a9c:	bls	12b20 <close_stdout@@Base+0xaa0>
   12aa0:	add	r5, r5, #8
   12aa4:	mov	r0, #0
   12aa8:	ldr	r3, [r5, #-8]
   12aac:	mov	r7, r5
   12ab0:	cmp	r3, #0
   12ab4:	beq	12b00 <close_stdout@@Base+0xa80>
   12ab8:	cmp	r2, r0
   12abc:	bls	12b0c <close_stdout@@Base+0xa8c>
   12ac0:	str	r3, [r1, r0, lsl #2]
   12ac4:	add	r4, r0, #1
   12ac8:	ldr	r3, [r5, #-4]
   12acc:	add	ip, r1, r0, lsl #2
   12ad0:	cmp	r3, #0
   12ad4:	beq	12b14 <close_stdout@@Base+0xa94>
   12ad8:	mov	r0, r4
   12adc:	cmp	r0, r2
   12ae0:	beq	12b0c <close_stdout@@Base+0xa8c>
   12ae4:	ldr	r4, [r3]
   12ae8:	add	r0, r0, #1
   12aec:	str	r4, [ip, #4]!
   12af0:	ldr	r3, [r3, #4]
   12af4:	cmp	r3, #0
   12af8:	bne	12adc <close_stdout@@Base+0xa5c>
   12afc:	ldr	ip, [r6, #4]
   12b00:	cmp	ip, r7
   12b04:	add	r5, r5, #8
   12b08:	bhi	12aa8 <close_stdout@@Base+0xa28>
   12b0c:	pop	{r4, r5, r6, r7}
   12b10:	bx	lr
   12b14:	ldr	ip, [r6, #4]
   12b18:	mov	r0, r4
   12b1c:	b	12b00 <close_stdout@@Base+0xa80>
   12b20:	mov	r0, #0
   12b24:	b	12b0c <close_stdout@@Base+0xa8c>
   12b28:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   12b2c:	mov	r7, r2
   12b30:	ldr	r8, [r0]
   12b34:	mov	r9, r0
   12b38:	ldr	r2, [r0, #4]
   12b3c:	mov	r6, r1
   12b40:	mov	r5, #0
   12b44:	cmp	r2, r8
   12b48:	bls	12b98 <close_stdout@@Base+0xb18>
   12b4c:	ldr	r3, [r8]
   12b50:	cmp	r3, #0
   12b54:	beq	12b8c <close_stdout@@Base+0xb0c>
   12b58:	mov	r0, r3
   12b5c:	mov	r4, r8
   12b60:	b	12b68 <close_stdout@@Base+0xae8>
   12b64:	ldr	r0, [r4]
   12b68:	mov	r1, r7
   12b6c:	blx	r6
   12b70:	cmp	r0, #0
   12b74:	beq	12b98 <close_stdout@@Base+0xb18>
   12b78:	ldr	r4, [r4, #4]
   12b7c:	add	r5, r5, #1
   12b80:	cmp	r4, #0
   12b84:	bne	12b64 <close_stdout@@Base+0xae4>
   12b88:	ldr	r2, [r9, #4]
   12b8c:	add	r8, r8, #8
   12b90:	cmp	r2, r8
   12b94:	bhi	12b4c <close_stdout@@Base+0xacc>
   12b98:	mov	r0, r5
   12b9c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12ba0:	push	{r3, r4, r5, lr}
   12ba4:	mov	r5, r1
   12ba8:	ldrb	r3, [r0]
   12bac:	cmp	r3, #0
   12bb0:	beq	12be0 <close_stdout@@Base+0xb60>
   12bb4:	mov	r4, r0
   12bb8:	mov	r1, #0
   12bbc:	rsb	r0, r1, r1, lsl #5
   12bc0:	mov	r1, r5
   12bc4:	add	r0, r3, r0
   12bc8:	bl	16044 <triple_free@@Base+0x2b68>
   12bcc:	ldrb	r3, [r4, #1]!
   12bd0:	cmp	r3, #0
   12bd4:	bne	12bbc <close_stdout@@Base+0xb3c>
   12bd8:	mov	r0, r1
   12bdc:	pop	{r3, r4, r5, pc}
   12be0:	mov	r1, r3
   12be4:	b	12bd8 <close_stdout@@Base+0xb58>
   12be8:	push	{r4}		; (str r4, [sp, #-4]!)
   12bec:	mov	ip, r0
   12bf0:	ldr	r4, [pc, #24]	; 12c10 <close_stdout@@Base+0xb90>
   12bf4:	add	r4, pc, r4
   12bf8:	ldm	r4!, {r0, r1, r2, r3}
   12bfc:	ldr	r4, [r4]
   12c00:	stmia	ip!, {r0, r1, r2, r3}
   12c04:	str	r4, [ip]
   12c08:	pop	{r4}		; (ldr r4, [sp], #4)
   12c0c:	bx	lr
   12c10:	andeq	r4, r0, ip, lsl r5
   12c14:	push	{r4, r5, r6, r7, r8, lr}
   12c18:	subs	r8, r2, #0
   12c1c:	mov	r7, r0
   12c20:	mov	r5, r1
   12c24:	mov	r6, r3
   12c28:	beq	12d1c <close_stdout@@Base+0xc9c>
   12c2c:	cmp	r6, #0
   12c30:	beq	12d10 <close_stdout@@Base+0xc90>
   12c34:	mov	r0, #40	; 0x28
   12c38:	bl	110ec <malloc@plt>
   12c3c:	subs	r4, r0, #0
   12c40:	beq	12d34 <close_stdout@@Base+0xcb4>
   12c44:	cmp	r5, #0
   12c48:	beq	12d28 <close_stdout@@Base+0xca8>
   12c4c:	mov	r0, r4
   12c50:	str	r5, [r0, #20]!
   12c54:	bl	12520 <close_stdout@@Base+0x4a0>
   12c58:	cmp	r0, #0
   12c5c:	beq	12d00 <close_stdout@@Base+0xc80>
   12c60:	ldrb	r3, [r5, #16]
   12c64:	vldr	s15, [r5, #8]
   12c68:	cmp	r3, #0
   12c6c:	bne	12c94 <close_stdout@@Base+0xc14>
   12c70:	vmov	s14, r7
   12c74:	vcvt.f32.u32	s13, s14
   12c78:	vldr	s14, [pc, #188]	; 12d3c <close_stdout@@Base+0xcbc>
   12c7c:	vdiv.f32	s15, s13, s15
   12c80:	vcmpe.f32	s15, s14
   12c84:	vmrs	APSR_nzcv, fpscr
   12c88:	bge	12cf8 <close_stdout@@Base+0xc78>
   12c8c:	vcvt.u32.f32	s15, s15
   12c90:	vmov	r7, s15
   12c94:	mov	r0, r7
   12c98:	bl	12320 <close_stdout@@Base+0x2a0>
   12c9c:	cmn	r0, #-1073741823	; 0xc0000001
   12ca0:	mov	r5, r0
   12ca4:	bhi	12cf8 <close_stdout@@Base+0xc78>
   12ca8:	cmp	r0, #0
   12cac:	str	r0, [r4, #8]
   12cb0:	beq	12d00 <close_stdout@@Base+0xc80>
   12cb4:	mov	r1, #8
   12cb8:	bl	10fa8 <calloc@plt>
   12cbc:	cmp	r0, #0
   12cc0:	str	r0, [r4]
   12cc4:	beq	12d00 <close_stdout@@Base+0xc80>
   12cc8:	ldr	r3, [sp, #24]
   12ccc:	mov	r2, #0
   12cd0:	add	r5, r0, r5, lsl #3
   12cd4:	str	r8, [r4, #24]
   12cd8:	str	r5, [r4, #4]
   12cdc:	mov	r0, r4
   12ce0:	str	r6, [r4, #28]
   12ce4:	str	r3, [r4, #32]
   12ce8:	str	r2, [r4, #12]
   12cec:	str	r2, [r4, #16]
   12cf0:	str	r2, [r4, #36]	; 0x24
   12cf4:	pop	{r4, r5, r6, r7, r8, pc}
   12cf8:	mov	r3, #0
   12cfc:	str	r3, [r4, #8]
   12d00:	mov	r0, r4
   12d04:	bl	10ff0 <free@plt>
   12d08:	mov	r0, #0
   12d0c:	pop	{r4, r5, r6, r7, r8, pc}
   12d10:	ldr	r6, [pc, #40]	; 12d40 <close_stdout@@Base+0xcc0>
   12d14:	add	r6, pc, r6
   12d18:	b	12c34 <close_stdout@@Base+0xbb4>
   12d1c:	ldr	r8, [pc, #32]	; 12d44 <close_stdout@@Base+0xcc4>
   12d20:	add	r8, pc, r8
   12d24:	b	12c2c <close_stdout@@Base+0xbac>
   12d28:	ldr	r5, [pc, #24]	; 12d48 <close_stdout@@Base+0xcc8>
   12d2c:	add	r5, pc, r5
   12d30:	b	12c4c <close_stdout@@Base+0xbcc>
   12d34:	mov	r0, r4
   12d38:	pop	{r4, r5, r6, r7, r8, pc}
   12d3c:	svcmi	0x00800000
   12d40:			; <UNDEFINED> instruction: 0xfffff6c4
   12d44:			; <UNDEFINED> instruction: 0xfffff6a4
   12d48:	andeq	r4, r0, r4, ror #7
   12d4c:	push	{r4, r5, r6, r7, r8, lr}
   12d50:	mov	r5, r0
   12d54:	ldr	r7, [r0]
   12d58:	ldr	r3, [r0, #4]
   12d5c:	cmp	r7, r3
   12d60:	addcc	r7, r7, #8
   12d64:	movcc	r6, #0
   12d68:	bcs	12de8 <close_stdout@@Base+0xd68>
   12d6c:	ldr	r2, [r7, #-8]
   12d70:	mov	r8, r7
   12d74:	cmp	r2, #0
   12d78:	beq	12ddc <close_stdout@@Base+0xd5c>
   12d7c:	ldr	r4, [r7, #-4]
   12d80:	cmp	r4, #0
   12d84:	beq	12dbc <close_stdout@@Base+0xd3c>
   12d88:	ldr	r3, [r5, #32]
   12d8c:	cmp	r3, #0
   12d90:	beq	12d9c <close_stdout@@Base+0xd1c>
   12d94:	ldr	r0, [r4]
   12d98:	blx	r3
   12d9c:	ldr	r3, [r4, #4]
   12da0:	str	r6, [r4]
   12da4:	ldr	r2, [r5, #36]	; 0x24
   12da8:	cmp	r3, #0
   12dac:	str	r2, [r4, #4]
   12db0:	str	r4, [r5, #36]	; 0x24
   12db4:	mov	r4, r3
   12db8:	bne	12d88 <close_stdout@@Base+0xd08>
   12dbc:	ldr	r3, [r5, #32]
   12dc0:	cmp	r3, #0
   12dc4:	beq	12dd0 <close_stdout@@Base+0xd50>
   12dc8:	ldr	r0, [r7, #-8]
   12dcc:	blx	r3
   12dd0:	str	r6, [r7, #-8]
   12dd4:	str	r6, [r7, #-4]
   12dd8:	ldr	r3, [r5, #4]
   12ddc:	cmp	r3, r8
   12de0:	add	r7, r7, #8
   12de4:	bhi	12d6c <close_stdout@@Base+0xcec>
   12de8:	mov	r3, #0
   12dec:	str	r3, [r5, #12]
   12df0:	str	r3, [r5, #16]
   12df4:	pop	{r4, r5, r6, r7, r8, pc}
   12df8:	push	{r3, r4, r5, r6, r7, lr}
   12dfc:	mov	r5, r0
   12e00:	ldr	r3, [r0, #32]
   12e04:	cmp	r3, #0
   12e08:	beq	12e18 <close_stdout@@Base+0xd98>
   12e0c:	ldr	r3, [r0, #16]
   12e10:	cmp	r3, #0
   12e14:	bne	12e94 <close_stdout@@Base+0xe14>
   12e18:	ldr	r3, [r5, #4]
   12e1c:	ldr	r6, [r5]
   12e20:	cmp	r6, r3
   12e24:	bcs	12e60 <close_stdout@@Base+0xde0>
   12e28:	add	r6, r6, #8
   12e2c:	ldr	r0, [r6, #-4]
   12e30:	mov	r7, r6
   12e34:	cmp	r0, #0
   12e38:	beq	12e54 <close_stdout@@Base+0xdd4>
   12e3c:	ldr	r4, [r0, #4]
   12e40:	bl	10ff0 <free@plt>
   12e44:	cmp	r4, #0
   12e48:	mov	r0, r4
   12e4c:	bne	12e3c <close_stdout@@Base+0xdbc>
   12e50:	ldr	r3, [r5, #4]
   12e54:	cmp	r7, r3
   12e58:	add	r6, r6, #8
   12e5c:	bcc	12e2c <close_stdout@@Base+0xdac>
   12e60:	ldr	r0, [r5, #36]	; 0x24
   12e64:	cmp	r0, #0
   12e68:	beq	12e80 <close_stdout@@Base+0xe00>
   12e6c:	ldr	r4, [r0, #4]
   12e70:	bl	10ff0 <free@plt>
   12e74:	cmp	r4, #0
   12e78:	mov	r0, r4
   12e7c:	bne	12e6c <close_stdout@@Base+0xdec>
   12e80:	ldr	r0, [r5]
   12e84:	bl	10ff0 <free@plt>
   12e88:	mov	r0, r5
   12e8c:	pop	{r3, r4, r5, r6, r7, lr}
   12e90:	b	10ff0 <free@plt>
   12e94:	ldr	r6, [r0]
   12e98:	ldr	r3, [r0, #4]
   12e9c:	cmp	r6, r3
   12ea0:	bcs	12e60 <close_stdout@@Base+0xde0>
   12ea4:	ldr	r0, [r6]
   12ea8:	cmp	r0, #0
   12eac:	movne	r4, r6
   12eb0:	bne	12ebc <close_stdout@@Base+0xe3c>
   12eb4:	b	12ed4 <close_stdout@@Base+0xe54>
   12eb8:	ldr	r0, [r4]
   12ebc:	ldr	r3, [r5, #32]
   12ec0:	blx	r3
   12ec4:	ldr	r4, [r4, #4]
   12ec8:	cmp	r4, #0
   12ecc:	bne	12eb8 <close_stdout@@Base+0xe38>
   12ed0:	ldr	r3, [r5, #4]
   12ed4:	add	r6, r6, #8
   12ed8:	cmp	r3, r6
   12edc:	bhi	12ea4 <close_stdout@@Base+0xe24>
   12ee0:	b	12e1c <close_stdout@@Base+0xd9c>
   12ee4:	ldr	r3, [pc, #392]	; 13074 <close_stdout@@Base+0xff4>
   12ee8:	ldr	r2, [pc, #392]	; 13078 <close_stdout@@Base+0xff8>
   12eec:	add	r3, pc, r3
   12ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ef4:	sub	sp, sp, #52	; 0x34
   12ef8:	ldr	r5, [r0, #20]
   12efc:	mov	r4, r0
   12f00:	ldr	r6, [r3, r2]
   12f04:	vldr	s15, [r5, #8]
   12f08:	ldrb	r2, [r5, #16]
   12f0c:	ldr	r3, [r6]
   12f10:	cmp	r2, #0
   12f14:	str	r3, [sp, #44]	; 0x2c
   12f18:	bne	12f40 <close_stdout@@Base+0xec0>
   12f1c:	vmov	s14, r1
   12f20:	vcvt.f32.u32	s13, s14
   12f24:	vldr	s14, [pc, #324]	; 13070 <close_stdout@@Base+0xff0>
   12f28:	vdiv.f32	s15, s13, s15
   12f2c:	vcmpe.f32	s15, s14
   12f30:	vmrs	APSR_nzcv, fpscr
   12f34:	bge	13038 <close_stdout@@Base+0xfb8>
   12f38:	vcvt.u32.f32	s15, s15
   12f3c:	vmov	r1, s15
   12f40:	mov	r0, r1
   12f44:	bl	12320 <close_stdout@@Base+0x2a0>
   12f48:	sub	r3, r0, #1
   12f4c:	mov	r7, r0
   12f50:	cmn	r3, #-1073741822	; 0xc0000002
   12f54:	bhi	13038 <close_stdout@@Base+0xfb8>
   12f58:	ldr	r3, [r4, #8]
   12f5c:	cmp	r3, r0
   12f60:	beq	13018 <close_stdout@@Base+0xf98>
   12f64:	mov	r1, #8
   12f68:	bl	10fa8 <calloc@plt>
   12f6c:	cmp	r0, #0
   12f70:	mov	r3, r0
   12f74:	str	r0, [sp, #4]
   12f78:	beq	13038 <close_stdout@@Base+0xfb8>
   12f7c:	ldr	fp, [r4, #24]
   12f80:	add	r8, sp, #4
   12f84:	ldr	sl, [r4, #28]
   12f88:	mov	ip, #0
   12f8c:	ldr	r9, [r4, #32]
   12f90:	mov	r0, r8
   12f94:	ldr	lr, [r4, #36]	; 0x24
   12f98:	mov	r2, ip
   12f9c:	mov	r1, r4
   12fa0:	add	r3, r3, r7, lsl #3
   12fa4:	str	r5, [sp, #24]
   12fa8:	str	r7, [sp, #12]
   12fac:	str	r3, [sp, #8]
   12fb0:	str	fp, [sp, #28]
   12fb4:	str	sl, [sp, #32]
   12fb8:	str	r9, [sp, #36]	; 0x24
   12fbc:	str	lr, [sp, #40]	; 0x28
   12fc0:	str	ip, [sp, #16]
   12fc4:	str	ip, [sp, #20]
   12fc8:	bl	125e0 <close_stdout@@Base+0x560>
   12fcc:	subs	r5, r0, #0
   12fd0:	bne	13040 <close_stdout@@Base+0xfc0>
   12fd4:	ldr	r3, [sp, #40]	; 0x28
   12fd8:	mov	r0, r4
   12fdc:	mov	r1, r8
   12fe0:	mov	r2, #1
   12fe4:	str	r3, [r4, #36]	; 0x24
   12fe8:	bl	125e0 <close_stdout@@Base+0x560>
   12fec:	cmp	r0, #0
   12ff0:	beq	1306c <close_stdout@@Base+0xfec>
   12ff4:	mov	r0, r4
   12ff8:	mov	r1, r8
   12ffc:	mov	r2, r5
   13000:	bl	125e0 <close_stdout@@Base+0x560>
   13004:	cmp	r0, #0
   13008:	beq	1306c <close_stdout@@Base+0xfec>
   1300c:	ldr	r0, [sp, #4]
   13010:	bl	10ff0 <free@plt>
   13014:	b	1301c <close_stdout@@Base+0xf9c>
   13018:	mov	r5, #1
   1301c:	ldr	r1, [sp, #44]	; 0x2c
   13020:	mov	r0, r5
   13024:	ldr	r3, [r6]
   13028:	cmp	r1, r3
   1302c:	bne	13068 <close_stdout@@Base+0xfe8>
   13030:	add	sp, sp, #52	; 0x34
   13034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13038:	mov	r5, #0
   1303c:	b	1301c <close_stdout@@Base+0xf9c>
   13040:	ldr	r0, [r4]
   13044:	bl	10ff0 <free@plt>
   13048:	add	r0, sp, #8
   1304c:	ldr	ip, [sp, #4]
   13050:	ldm	r0, {r0, r1, r2}
   13054:	ldr	r3, [sp, #40]	; 0x28
   13058:	str	ip, [r4]
   1305c:	stmib	r4, {r0, r1, r2}
   13060:	str	r3, [r4, #36]	; 0x24
   13064:	b	1301c <close_stdout@@Base+0xf9c>
   13068:	bl	11038 <__stack_chk_fail@plt>
   1306c:	bl	11230 <abort@plt>
   13070:	svcmi	0x00800000
   13074:	andeq	r5, r1, ip, lsl #2
   13078:	strdeq	r0, [r0], -r8
   1307c:	ldr	r3, [pc, #428]	; 13230 <close_stdout@@Base+0x11b0>
   13080:	ldr	ip, [pc, #428]	; 13234 <close_stdout@@Base+0x11b4>
   13084:	add	r3, pc, r3
   13088:	push	{r4, r5, r6, r7, r8, lr}
   1308c:	subs	r8, r1, #0
   13090:	ldr	r4, [r3, ip]
   13094:	sub	sp, sp, #8
   13098:	mov	r5, r2
   1309c:	mov	r6, r0
   130a0:	ldr	r3, [r4]
   130a4:	str	r3, [sp, #4]
   130a8:	beq	131e8 <close_stdout@@Base+0x1168>
   130ac:	mov	r3, #0
   130b0:	mov	r2, sp
   130b4:	bl	12424 <close_stdout@@Base+0x3a4>
   130b8:	cmp	r0, #0
   130bc:	beq	130e8 <close_stdout@@Base+0x1068>
   130c0:	cmp	r5, #0
   130c4:	moveq	r0, r5
   130c8:	strne	r0, [r5]
   130cc:	movne	r0, #0
   130d0:	ldr	r2, [sp, #4]
   130d4:	ldr	r3, [r4]
   130d8:	cmp	r2, r3
   130dc:	bne	13228 <close_stdout@@Base+0x11a8>
   130e0:	add	sp, sp, #8
   130e4:	pop	{r4, r5, r6, r7, r8, pc}
   130e8:	vldr	s11, [r6, #8]
   130ec:	vcvt.f32.u32	s14, s11
   130f0:	ldr	r3, [r6, #20]
   130f4:	vldr	s15, [r3, #8]
   130f8:	vldr	s13, [r6, #12]
   130fc:	vmul.f32	s15, s14, s15
   13100:	vcvt.f32.u32	s14, s13
   13104:	vcmpe.f32	s14, s15
   13108:	vmrs	APSR_nzcv, fpscr
   1310c:	bgt	1315c <close_stdout@@Base+0x10dc>
   13110:	ldr	r3, [sp]
   13114:	ldr	r2, [r3]
   13118:	cmp	r2, #0
   1311c:	beq	131ec <close_stdout@@Base+0x116c>
   13120:	ldr	r3, [r6, #36]	; 0x24
   13124:	cmp	r3, #0
   13128:	beq	13210 <close_stdout@@Base+0x1190>
   1312c:	ldr	r2, [r3, #4]
   13130:	str	r2, [r6, #36]	; 0x24
   13134:	str	r8, [r3]
   13138:	mov	r0, #1
   1313c:	ldr	r2, [sp]
   13140:	ldr	r1, [r2, #4]
   13144:	str	r1, [r3, #4]
   13148:	str	r3, [r2, #4]
   1314c:	ldr	r3, [r6, #16]
   13150:	add	r3, r3, r0
   13154:	str	r3, [r6, #16]
   13158:	b	130d0 <close_stdout@@Base+0x1050>
   1315c:	add	r0, r6, #20
   13160:	bl	12520 <close_stdout@@Base+0x4a0>
   13164:	vldr	s11, [r6, #8]
   13168:	vcvt.f32.u32	s15, s11
   1316c:	ldr	r3, [r6, #20]
   13170:	vldr	s14, [r3, #8]
   13174:	vldr	s11, [r6, #12]
   13178:	vmul.f32	s13, s14, s15
   1317c:	vcvt.f32.u32	s12, s11
   13180:	vcmpe.f32	s12, s13
   13184:	vmrs	APSR_nzcv, fpscr
   13188:	ble	13110 <close_stdout@@Base+0x1090>
   1318c:	ldrb	r2, [r3, #16]
   13190:	cmp	r2, #0
   13194:	vldreq	s13, [r3, #12]
   13198:	vldrne	s14, [r3, #12]
   1319c:	vmuleq.f32	s15, s15, s13
   131a0:	vmul.f32	s15, s14, s15
   131a4:	vldr	s14, [pc, #128]	; 1322c <close_stdout@@Base+0x11ac>
   131a8:	vcmpe.f32	s15, s14
   131ac:	vmrs	APSR_nzcv, fpscr
   131b0:	bge	13220 <close_stdout@@Base+0x11a0>
   131b4:	vcvt.u32.f32	s15, s15
   131b8:	mov	r0, r6
   131bc:	vmov	r1, s15
   131c0:	bl	12ee4 <close_stdout@@Base+0xe64>
   131c4:	cmp	r0, #0
   131c8:	beq	13220 <close_stdout@@Base+0x11a0>
   131cc:	mov	r2, sp
   131d0:	mov	r0, r6
   131d4:	mov	r1, r8
   131d8:	mov	r3, #0
   131dc:	bl	12424 <close_stdout@@Base+0x3a4>
   131e0:	cmp	r0, #0
   131e4:	beq	13110 <close_stdout@@Base+0x1090>
   131e8:	bl	11230 <abort@plt>
   131ec:	str	r8, [r3]
   131f0:	mov	r0, #1
   131f4:	ldr	r2, [r6, #16]
   131f8:	ldr	r3, [r6, #12]
   131fc:	add	r2, r2, r0
   13200:	str	r2, [r6, #16]
   13204:	add	r3, r3, r0
   13208:	str	r3, [r6, #12]
   1320c:	b	130d0 <close_stdout@@Base+0x1050>
   13210:	mov	r0, #8
   13214:	bl	110ec <malloc@plt>
   13218:	subs	r3, r0, #0
   1321c:	bne	13134 <close_stdout@@Base+0x10b4>
   13220:	mvn	r0, #0
   13224:	b	130d0 <close_stdout@@Base+0x1050>
   13228:	bl	11038 <__stack_chk_fail@plt>
   1322c:	svcmi	0x00800000
   13230:	andeq	r4, r1, r4, ror pc
   13234:	strdeq	r0, [r0], -r8
   13238:	b	1307c <close_stdout@@Base+0xffc>
   1323c:	ldr	r3, [pc, #100]	; 132a8 <close_stdout@@Base+0x1228>
   13240:	ldr	ip, [pc, #100]	; 132ac <close_stdout@@Base+0x122c>
   13244:	add	r3, pc, r3
   13248:	push	{r4, r5, lr}
   1324c:	sub	sp, sp, #12
   13250:	ldr	r4, [r3, ip]
   13254:	mov	r5, r1
   13258:	mov	r2, sp
   1325c:	ldr	r3, [r4]
   13260:	str	r3, [sp, #4]
   13264:	bl	1307c <close_stdout@@Base+0xffc>
   13268:	cmn	r0, #1
   1326c:	beq	1329c <close_stdout@@Base+0x121c>
   13270:	cmp	r0, #0
   13274:	movne	r0, r5
   13278:	beq	13294 <close_stdout@@Base+0x1214>
   1327c:	ldr	r2, [sp, #4]
   13280:	ldr	r3, [r4]
   13284:	cmp	r2, r3
   13288:	bne	132a4 <close_stdout@@Base+0x1224>
   1328c:	add	sp, sp, #12
   13290:	pop	{r4, r5, pc}
   13294:	ldr	r0, [sp]
   13298:	b	1327c <close_stdout@@Base+0x11fc>
   1329c:	mov	r0, #0
   132a0:	b	1327c <close_stdout@@Base+0x11fc>
   132a4:	bl	11038 <__stack_chk_fail@plt>
   132a8:			; <UNDEFINED> instruction: 0x00014db4
   132ac:	strdeq	r0, [r0], -r8
   132b0:	ldr	ip, [pc, #304]	; 133e8 <close_stdout@@Base+0x1368>
   132b4:	mov	r3, #1
   132b8:	push	{r4, r5, r6, r7, lr}
   132bc:	add	ip, pc, ip
   132c0:	ldr	lr, [pc, #292]	; 133ec <close_stdout@@Base+0x136c>
   132c4:	sub	sp, sp, #12
   132c8:	mov	r4, r0
   132cc:	mov	r2, sp
   132d0:	ldr	r5, [ip, lr]
   132d4:	ldr	ip, [r5]
   132d8:	str	ip, [sp, #4]
   132dc:	bl	12424 <close_stdout@@Base+0x3a4>
   132e0:	subs	r6, r0, #0
   132e4:	beq	13304 <close_stdout@@Base+0x1284>
   132e8:	ldr	r3, [sp]
   132ec:	ldr	r2, [r4, #16]
   132f0:	sub	r2, r2, #1
   132f4:	str	r2, [r4, #16]
   132f8:	ldr	r3, [r3]
   132fc:	cmp	r3, #0
   13300:	beq	13320 <close_stdout@@Base+0x12a0>
   13304:	ldr	r2, [sp, #4]
   13308:	mov	r0, r6
   1330c:	ldr	r3, [r5]
   13310:	cmp	r2, r3
   13314:	bne	133e4 <close_stdout@@Base+0x1364>
   13318:	add	sp, sp, #12
   1331c:	pop	{r4, r5, r6, r7, pc}
   13320:	vldr	s12, [r4, #8]
   13324:	vcvt.f32.u32	s14, s12
   13328:	ldr	r3, [r4, #12]
   1332c:	ldr	r2, [r4, #20]
   13330:	sub	r3, r3, #1
   13334:	str	r3, [r4, #12]
   13338:	vldr	s15, [r2]
   1333c:	vmov	s13, r3
   13340:	vmul.f32	s15, s14, s15
   13344:	vcvt.f32.u32	s14, s13
   13348:	vcmpe.f32	s14, s15
   1334c:	vmrs	APSR_nzcv, fpscr
   13350:	bpl	13304 <close_stdout@@Base+0x1284>
   13354:	add	r0, r4, #20
   13358:	bl	12520 <close_stdout@@Base+0x4a0>
   1335c:	vldr	s12, [r4, #8]
   13360:	vcvt.f32.u32	s15, s12
   13364:	ldr	r3, [r4, #20]
   13368:	vldr	s14, [r3]
   1336c:	vldr	s12, [r4, #12]
   13370:	vmul.f32	s14, s15, s14
   13374:	vcvt.f32.u32	s13, s12
   13378:	vcmpe.f32	s13, s14
   1337c:	vmrs	APSR_nzcv, fpscr
   13380:	bpl	13304 <close_stdout@@Base+0x1284>
   13384:	vldr	s14, [r3, #4]
   13388:	vmul.f32	s15, s15, s14
   1338c:	ldrb	r2, [r3, #16]
   13390:	mov	r0, r4
   13394:	cmp	r2, #0
   13398:	vldreq	s14, [r3, #8]
   1339c:	vmuleq.f32	s15, s15, s14
   133a0:	vcvt.u32.f32	s15, s15
   133a4:	vmov	r1, s15
   133a8:	bl	12ee4 <close_stdout@@Base+0xe64>
   133ac:	cmp	r0, #0
   133b0:	bne	13304 <close_stdout@@Base+0x1284>
   133b4:	ldr	r0, [r4, #36]	; 0x24
   133b8:	cmp	r0, #0
   133bc:	bne	133c8 <close_stdout@@Base+0x1348>
   133c0:	b	133d8 <close_stdout@@Base+0x1358>
   133c4:	mov	r0, r7
   133c8:	ldr	r7, [r0, #4]
   133cc:	bl	10ff0 <free@plt>
   133d0:	cmp	r7, #0
   133d4:	bne	133c4 <close_stdout@@Base+0x1344>
   133d8:	mov	r3, #0
   133dc:	str	r3, [r4, #36]	; 0x24
   133e0:	b	13304 <close_stdout@@Base+0x1284>
   133e4:	bl	11038 <__stack_chk_fail@plt>
   133e8:	andeq	r4, r1, ip, lsr sp
   133ec:	strdeq	r0, [r0], -r8

000133f0 <triple_hash@@Base>:
   133f0:	push	{r3, r4, r5, r6, r7, lr}
   133f4:	mov	r4, r0
   133f8:	ldr	r0, [r0]
   133fc:	mov	r6, r1
   13400:	bl	15854 <triple_free@@Base+0x2378>
   13404:	ldrd	r4, [r4, #8]
   13408:	mov	r2, r6
   1340c:	mov	r3, #0
   13410:	mov	r1, r5
   13414:	mov	r7, r5
   13418:	eor	r6, r4, r0
   1341c:	mov	r0, r6
   13420:	bl	16064 <triple_free@@Base+0x2b88>
   13424:	mov	r0, r2
   13428:	pop	{r3, r4, r5, r6, r7, pc}
   1342c:	push	{r3, lr}
   13430:	mov	r2, r1
   13434:	mov	r3, #0
   13438:	ldrd	r0, [r0, #8]
   1343c:	bl	16064 <triple_free@@Base+0x2b88>
   13440:	mov	r0, r2
   13444:	pop	{r3, pc}
   13448:	push	{r4, r5}
   1344c:	ldrd	r4, [r0, #8]
   13450:	ldrd	r2, [r1, #8]
   13454:	cmp	r5, r3
   13458:	cmpeq	r4, r2
   1345c:	beq	1346c <triple_hash@@Base+0x7c>
   13460:	mov	r0, #0
   13464:	pop	{r4, r5}
   13468:	bx	lr
   1346c:	ldrd	r4, [r0, #16]
   13470:	ldrd	r2, [r1, #16]
   13474:	cmp	r5, r3
   13478:	cmpeq	r4, r2
   1347c:	bne	13460 <triple_hash@@Base+0x70>
   13480:	ldr	r0, [r0]
   13484:	ldr	r1, [r1]
   13488:	pop	{r4, r5}
   1348c:	b	14d54 <triple_free@@Base+0x1878>

00013490 <triple_compare_ino_str@@Base>:
   13490:	push	{r3, r4, r5, lr}
   13494:	ldrd	r4, [r0, #8]
   13498:	ldrd	r2, [r1, #8]
   1349c:	cmp	r5, r3
   134a0:	cmpeq	r4, r2
   134a4:	beq	134b0 <triple_compare_ino_str@@Base+0x20>
   134a8:	mov	r0, #0
   134ac:	pop	{r3, r4, r5, pc}
   134b0:	ldrd	r4, [r0, #16]
   134b4:	ldrd	r2, [r1, #16]
   134b8:	cmp	r5, r3
   134bc:	cmpeq	r4, r2
   134c0:	bne	134a8 <triple_compare_ino_str@@Base+0x18>
   134c4:	ldr	r0, [r0]
   134c8:	ldr	r1, [r1]
   134cc:	bl	10fcc <strcmp@plt>
   134d0:	rsbs	r0, r0, #1
   134d4:	movcc	r0, #0
   134d8:	pop	{r3, r4, r5, pc}

000134dc <triple_free@@Base>:
   134dc:	push	{r4, lr}
   134e0:	mov	r4, r0
   134e4:	ldr	r0, [r0]
   134e8:	bl	10ff0 <free@plt>
   134ec:	mov	r0, r4
   134f0:	pop	{r4, lr}
   134f4:	b	10ff0 <free@plt>
   134f8:	push	{r3, r4, r5, r6, r7, lr}
   134fc:	subs	r4, r0, #0
   13500:	ldr	r5, [pc, #172]	; 135b4 <triple_free@@Base+0xd8>
   13504:	add	r5, pc, r5
   13508:	beq	13590 <triple_free@@Base+0xb4>
   1350c:	mov	r1, #47	; 0x2f
   13510:	bl	111f4 <strrchr@plt>
   13514:	subs	r6, r0, #0
   13518:	beq	13574 <triple_free@@Base+0x98>
   1351c:	add	r7, r6, #1
   13520:	rsb	r3, r4, r7
   13524:	cmp	r3, #6
   13528:	ble	13574 <triple_free@@Base+0x98>
   1352c:	ldr	r1, [pc, #132]	; 135b8 <triple_free@@Base+0xdc>
   13530:	sub	r0, r6, #6
   13534:	mov	r2, #7
   13538:	add	r1, pc, r1
   1353c:	bl	11224 <strncmp@plt>
   13540:	cmp	r0, #0
   13544:	bne	13574 <triple_free@@Base+0x98>
   13548:	ldr	r1, [pc, #108]	; 135bc <triple_free@@Base+0xe0>
   1354c:	mov	r0, r7
   13550:	mov	r2, #3
   13554:	add	r1, pc, r1
   13558:	bl	11224 <strncmp@plt>
   1355c:	cmp	r0, #0
   13560:	movne	r4, r7
   13564:	ldreq	r3, [pc, #84]	; 135c0 <triple_free@@Base+0xe4>
   13568:	addeq	r4, r6, #4
   1356c:	ldreq	r3, [r5, r3]
   13570:	streq	r4, [r3]
   13574:	ldr	r2, [pc, #72]	; 135c4 <triple_free@@Base+0xe8>
   13578:	ldr	r3, [pc, #72]	; 135c8 <triple_free@@Base+0xec>
   1357c:	ldr	r2, [r5, r2]
   13580:	str	r4, [r2]
   13584:	ldr	r3, [r5, r3]
   13588:	str	r4, [r3]
   1358c:	pop	{r3, r4, r5, r6, r7, pc}
   13590:	ldr	r3, [pc, #52]	; 135cc <triple_free@@Base+0xf0>
   13594:	mov	r1, #1
   13598:	ldr	r0, [pc, #48]	; 135d0 <triple_free@@Base+0xf4>
   1359c:	mov	r2, #55	; 0x37
   135a0:	ldr	r3, [r5, r3]
   135a4:	add	r0, pc, r0
   135a8:	ldr	r3, [r3]
   135ac:	bl	11080 <fwrite@plt>
   135b0:	bl	11230 <abort@plt>
   135b4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   135b8:	muleq	r0, r0, ip
   135bc:	andeq	r3, r0, ip, ror ip
   135c0:	andeq	r0, r0, r4, lsr r1
   135c4:	andeq	r0, r0, ip, lsr #2
   135c8:	andeq	r0, r0, r8, lsr #2
   135cc:	andeq	r0, r0, r8, lsl #2
   135d0:	andeq	r3, r0, ip, ror #23
   135d4:	push	{r3, lr}
   135d8:	mov	r3, r0
   135dc:	mov	r2, #0
   135e0:	cmp	r1, #8
   135e4:	str	r2, [r3], #4
   135e8:	add	r3, r3, #4
   135ec:	str	r2, [r0, #4]
   135f0:	str	r2, [r3], #4
   135f4:	str	r2, [r3], #4
   135f8:	str	r2, [r3], #4
   135fc:	str	r2, [r3], #4
   13600:	str	r2, [r3], #4
   13604:	str	r2, [r3], #4
   13608:	str	r2, [r3], #4
   1360c:	str	r2, [r3], #4
   13610:	str	r2, [r3], #4
   13614:	str	r2, [r3]
   13618:	beq	13624 <triple_free@@Base+0x148>
   1361c:	str	r1, [r0]
   13620:	pop	{r3, pc}
   13624:	bl	11230 <abort@plt>
   13628:	push	{r4, r5, r6, lr}
   1362c:	mov	r4, r0
   13630:	mov	r6, r1
   13634:	mov	r0, #0
   13638:	mov	r1, r4
   1363c:	mov	r2, #5
   13640:	bl	1102c <dcgettext@plt>
   13644:	cmp	r0, r4
   13648:	mov	r5, r0
   1364c:	beq	13654 <triple_free@@Base+0x178>
   13650:	pop	{r4, r5, r6, pc}
   13654:	bl	15890 <triple_free@@Base+0x23b4>
   13658:	ldrb	r3, [r0]
   1365c:	bic	r3, r3, #32
   13660:	cmp	r3, #85	; 0x55
   13664:	bne	136d8 <triple_free@@Base+0x1fc>
   13668:	ldrb	r3, [r0, #1]
   1366c:	bic	r3, r3, #32
   13670:	cmp	r3, #84	; 0x54
   13674:	bne	136c4 <triple_free@@Base+0x1e8>
   13678:	ldrb	r3, [r0, #2]
   1367c:	bic	r3, r3, #32
   13680:	cmp	r3, #70	; 0x46
   13684:	bne	136c4 <triple_free@@Base+0x1e8>
   13688:	ldrb	r3, [r0, #3]
   1368c:	cmp	r3, #45	; 0x2d
   13690:	bne	136c4 <triple_free@@Base+0x1e8>
   13694:	ldrb	r3, [r0, #4]
   13698:	cmp	r3, #56	; 0x38
   1369c:	bne	136c4 <triple_free@@Base+0x1e8>
   136a0:	ldrb	r3, [r0, #5]
   136a4:	cmp	r3, #0
   136a8:	bne	136c4 <triple_free@@Base+0x1e8>
   136ac:	ldrb	r3, [r5]
   136b0:	cmp	r3, #96	; 0x60
   136b4:	beq	13750 <triple_free@@Base+0x274>
   136b8:	ldr	r0, [pc, #180]	; 13774 <triple_free@@Base+0x298>
   136bc:	add	r0, pc, r0
   136c0:	pop	{r4, r5, r6, pc}
   136c4:	cmp	r6, #7
   136c8:	beq	1375c <triple_free@@Base+0x280>
   136cc:	ldr	r0, [pc, #164]	; 13778 <triple_free@@Base+0x29c>
   136d0:	add	r0, pc, r0
   136d4:	pop	{r4, r5, r6, pc}
   136d8:	cmp	r3, #71	; 0x47
   136dc:	bne	136c4 <triple_free@@Base+0x1e8>
   136e0:	ldrb	r3, [r0, #1]
   136e4:	bic	r3, r3, #32
   136e8:	cmp	r3, #66	; 0x42
   136ec:	bne	136c4 <triple_free@@Base+0x1e8>
   136f0:	ldrb	r3, [r0, #2]
   136f4:	cmp	r3, #49	; 0x31
   136f8:	bne	136c4 <triple_free@@Base+0x1e8>
   136fc:	ldrb	r3, [r0, #3]
   13700:	cmp	r3, #56	; 0x38
   13704:	bne	136c4 <triple_free@@Base+0x1e8>
   13708:	ldrb	r3, [r0, #4]
   1370c:	cmp	r3, #48	; 0x30
   13710:	bne	136c4 <triple_free@@Base+0x1e8>
   13714:	ldrb	r3, [r0, #5]
   13718:	cmp	r3, #51	; 0x33
   1371c:	bne	136c4 <triple_free@@Base+0x1e8>
   13720:	ldrb	r3, [r0, #6]
   13724:	cmp	r3, #48	; 0x30
   13728:	bne	136c4 <triple_free@@Base+0x1e8>
   1372c:	ldrb	r3, [r0, #7]
   13730:	cmp	r3, #0
   13734:	bne	136c4 <triple_free@@Base+0x1e8>
   13738:	ldrb	r3, [r5]
   1373c:	cmp	r3, #96	; 0x60
   13740:	beq	13768 <triple_free@@Base+0x28c>
   13744:	ldr	r0, [pc, #48]	; 1377c <triple_free@@Base+0x2a0>
   13748:	add	r0, pc, r0
   1374c:	pop	{r4, r5, r6, pc}
   13750:	ldr	r0, [pc, #40]	; 13780 <triple_free@@Base+0x2a4>
   13754:	add	r0, pc, r0
   13758:	pop	{r4, r5, r6, pc}
   1375c:	ldr	r0, [pc, #32]	; 13784 <triple_free@@Base+0x2a8>
   13760:	add	r0, pc, r0
   13764:	pop	{r4, r5, r6, pc}
   13768:	ldr	r0, [pc, #24]	; 13788 <triple_free@@Base+0x2ac>
   1376c:	add	r0, pc, r0
   13770:	pop	{r4, r5, r6, pc}
   13774:	andeq	r3, r0, r8, lsr fp
   13778:	andeq	r3, r0, ip, lsr #22
   1377c:			; <UNDEFINED> instruction: 0x00003ab0
   13780:			; <UNDEFINED> instruction: 0x00003ab4
   13784:	andeq	r3, r0, r0, lsr #21
   13788:	muleq	r0, r8, sl
   1378c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13790:	sub	sp, sp, #124	; 0x7c
   13794:	ldr	ip, [pc, #3304]	; 14484 <triple_free@@Base+0xfa8>
   13798:	mov	sl, r1
   1379c:	str	r0, [sp, #40]	; 0x28
   137a0:	mov	r8, r3
   137a4:	ldr	r0, [pc, #3292]	; 14488 <triple_free@@Base+0xfac>
   137a8:	add	ip, pc, ip
   137ac:	str	r2, [sp, #32]
   137b0:	ldr	r1, [sp, #164]	; 0xa4
   137b4:	mov	r3, ip
   137b8:	ldr	r0, [ip, r0]
   137bc:	ldr	r2, [sp, #172]	; 0xac
   137c0:	ubfx	r1, r1, #1, #1
   137c4:	str	r1, [sp, #36]	; 0x24
   137c8:	str	r0, [sp, #56]	; 0x38
   137cc:	ldr	r0, [sp, #168]	; 0xa8
   137d0:	ldr	r1, [sp, #176]	; 0xb0
   137d4:	str	r2, [sp, #72]	; 0x48
   137d8:	str	r0, [sp, #48]	; 0x30
   137dc:	ldr	r0, [sp, #56]	; 0x38
   137e0:	str	r1, [sp, #68]	; 0x44
   137e4:	ldr	r3, [r0]
   137e8:	str	r3, [sp, #116]	; 0x74
   137ec:	bl	11098 <__ctype_get_mb_cur_max@plt>
   137f0:	ldr	r2, [sp, #160]	; 0xa0
   137f4:	str	r0, [sp, #64]	; 0x40
   137f8:	cmp	r2, #8
   137fc:	addls	pc, pc, r2, lsl #2
   13800:	b	14360 <triple_free@@Base+0xe84>
   13804:	b	13828 <triple_free@@Base+0x34c>
   13808:	b	14078 <triple_free@@Base+0xb9c>
   1380c:	b	140a8 <triple_free@@Base+0xbcc>
   13810:	b	13f58 <triple_free@@Base+0xa7c>
   13814:	b	13f98 <triple_free@@Base+0xabc>
   13818:	b	13fc4 <triple_free@@Base+0xae8>
   1381c:	b	13fe4 <triple_free@@Base+0xb08>
   13820:	b	13fe4 <triple_free@@Base+0xb08>
   13824:	b	13fe4 <triple_free@@Base+0xb08>
   13828:	mov	r2, #0
   1382c:	str	r2, [sp, #36]	; 0x24
   13830:	mov	r9, r2
   13834:	str	r2, [sp, #24]
   13838:	str	r2, [sp, #28]
   1383c:	str	r2, [sp, #52]	; 0x34
   13840:	ldr	r0, [sp, #36]	; 0x24
   13844:	mov	fp, #0
   13848:	ldr	r1, [sp, #24]
   1384c:	eor	r2, r0, #1
   13850:	eor	r3, r1, #1
   13854:	and	r3, r2, r3
   13858:	and	r2, r1, r0
   1385c:	str	r3, [sp, #44]	; 0x2c
   13860:	str	r2, [sp, #76]	; 0x4c
   13864:	cmn	r8, #1
   13868:	beq	13be8 <triple_free@@Base+0x70c>
   1386c:	subs	r3, fp, r8
   13870:	movne	r3, #1
   13874:	cmp	r3, #0
   13878:	beq	13c00 <triple_free@@Base+0x724>
   1387c:	ldr	r3, [sp, #28]
   13880:	ldr	r0, [sp, #24]
   13884:	adds	r7, r3, #0
   13888:	movne	r7, #1
   1388c:	ands	r6, r7, r0
   13890:	bne	140ec <triple_free@@Base+0xc10>
   13894:	ldr	r1, [sp, #32]
   13898:	add	r5, r1, fp
   1389c:	ldrb	r4, [r5]
   138a0:	cmp	r4, #126	; 0x7e
   138a4:	addls	pc, pc, r4, lsl #2
   138a8:	b	13e6c <triple_free@@Base+0x990>
   138ac:	b	13d78 <triple_free@@Base+0x89c>
   138b0:	b	13e6c <triple_free@@Base+0x990>
   138b4:	b	13e6c <triple_free@@Base+0x990>
   138b8:	b	13e6c <triple_free@@Base+0x990>
   138bc:	b	13e6c <triple_free@@Base+0x990>
   138c0:	b	13e6c <triple_free@@Base+0x990>
   138c4:	b	13e6c <triple_free@@Base+0x990>
   138c8:	b	13d60 <triple_free@@Base+0x884>
   138cc:	b	13d48 <triple_free@@Base+0x86c>
   138d0:	b	13d70 <triple_free@@Base+0x894>
   138d4:	b	13d68 <triple_free@@Base+0x88c>
   138d8:	b	13d58 <triple_free@@Base+0x87c>
   138dc:	b	13d50 <triple_free@@Base+0x874>
   138e0:	b	13d14 <triple_free@@Base+0x838>
   138e4:	b	13e6c <triple_free@@Base+0x990>
   138e8:	b	13e6c <triple_free@@Base+0x990>
   138ec:	b	13e6c <triple_free@@Base+0x990>
   138f0:	b	13e6c <triple_free@@Base+0x990>
   138f4:	b	13e6c <triple_free@@Base+0x990>
   138f8:	b	13e6c <triple_free@@Base+0x990>
   138fc:	b	13e6c <triple_free@@Base+0x990>
   13900:	b	13e6c <triple_free@@Base+0x990>
   13904:	b	13e6c <triple_free@@Base+0x990>
   13908:	b	13e6c <triple_free@@Base+0x990>
   1390c:	b	13e6c <triple_free@@Base+0x990>
   13910:	b	13e6c <triple_free@@Base+0x990>
   13914:	b	13e6c <triple_free@@Base+0x990>
   13918:	b	13e6c <triple_free@@Base+0x990>
   1391c:	b	13e6c <triple_free@@Base+0x990>
   13920:	b	13e6c <triple_free@@Base+0x990>
   13924:	b	13e6c <triple_free@@Base+0x990>
   13928:	b	13e6c <triple_free@@Base+0x990>
   1392c:	b	13ca0 <triple_free@@Base+0x7c4>
   13930:	b	13ca0 <triple_free@@Base+0x7c4>
   13934:	b	13ca0 <triple_free@@Base+0x7c4>
   13938:	b	13c98 <triple_free@@Base+0x7bc>
   1393c:	b	13ca0 <triple_free@@Base+0x7c4>
   13940:	b	13b74 <triple_free@@Base+0x698>
   13944:	b	13ca0 <triple_free@@Base+0x7c4>
   13948:	b	13e14 <triple_free@@Base+0x938>
   1394c:	b	13ca0 <triple_free@@Base+0x7c4>
   13950:	b	13ca0 <triple_free@@Base+0x7c4>
   13954:	b	13ca0 <triple_free@@Base+0x7c4>
   13958:	b	13b74 <triple_free@@Base+0x698>
   1395c:	b	13b74 <triple_free@@Base+0x698>
   13960:	b	13b74 <triple_free@@Base+0x698>
   13964:	b	13b74 <triple_free@@Base+0x698>
   13968:	b	13b74 <triple_free@@Base+0x698>
   1396c:	b	13b74 <triple_free@@Base+0x698>
   13970:	b	13b74 <triple_free@@Base+0x698>
   13974:	b	13b74 <triple_free@@Base+0x698>
   13978:	b	13b74 <triple_free@@Base+0x698>
   1397c:	b	13b74 <triple_free@@Base+0x698>
   13980:	b	13b74 <triple_free@@Base+0x698>
   13984:	b	13b74 <triple_free@@Base+0x698>
   13988:	b	13b74 <triple_free@@Base+0x698>
   1398c:	b	13b74 <triple_free@@Base+0x698>
   13990:	b	13b74 <triple_free@@Base+0x698>
   13994:	b	13b74 <triple_free@@Base+0x698>
   13998:	b	13ca0 <triple_free@@Base+0x7c4>
   1399c:	b	13ca0 <triple_free@@Base+0x7c4>
   139a0:	b	13ca0 <triple_free@@Base+0x7c4>
   139a4:	b	13ca0 <triple_free@@Base+0x7c4>
   139a8:	b	13aa8 <triple_free@@Base+0x5cc>
   139ac:	b	13e6c <triple_free@@Base+0x990>
   139b0:	b	13b74 <triple_free@@Base+0x698>
   139b4:	b	13b74 <triple_free@@Base+0x698>
   139b8:	b	13b74 <triple_free@@Base+0x698>
   139bc:	b	13b74 <triple_free@@Base+0x698>
   139c0:	b	13b74 <triple_free@@Base+0x698>
   139c4:	b	13b74 <triple_free@@Base+0x698>
   139c8:	b	13b74 <triple_free@@Base+0x698>
   139cc:	b	13b74 <triple_free@@Base+0x698>
   139d0:	b	13b74 <triple_free@@Base+0x698>
   139d4:	b	13b74 <triple_free@@Base+0x698>
   139d8:	b	13b74 <triple_free@@Base+0x698>
   139dc:	b	13b74 <triple_free@@Base+0x698>
   139e0:	b	13b74 <triple_free@@Base+0x698>
   139e4:	b	13b74 <triple_free@@Base+0x698>
   139e8:	b	13b74 <triple_free@@Base+0x698>
   139ec:	b	13b74 <triple_free@@Base+0x698>
   139f0:	b	13b74 <triple_free@@Base+0x698>
   139f4:	b	13b74 <triple_free@@Base+0x698>
   139f8:	b	13b74 <triple_free@@Base+0x698>
   139fc:	b	13b74 <triple_free@@Base+0x698>
   13a00:	b	13b74 <triple_free@@Base+0x698>
   13a04:	b	13b74 <triple_free@@Base+0x698>
   13a08:	b	13b74 <triple_free@@Base+0x698>
   13a0c:	b	13b74 <triple_free@@Base+0x698>
   13a10:	b	13b74 <triple_free@@Base+0x698>
   13a14:	b	13b74 <triple_free@@Base+0x698>
   13a18:	b	13ca0 <triple_free@@Base+0x7c4>
   13a1c:	b	13df8 <triple_free@@Base+0x91c>
   13a20:	b	13b74 <triple_free@@Base+0x698>
   13a24:	b	13ca0 <triple_free@@Base+0x7c4>
   13a28:	b	13b74 <triple_free@@Base+0x698>
   13a2c:	b	13ca0 <triple_free@@Base+0x7c4>
   13a30:	b	13b74 <triple_free@@Base+0x698>
   13a34:	b	13b74 <triple_free@@Base+0x698>
   13a38:	b	13b74 <triple_free@@Base+0x698>
   13a3c:	b	13b74 <triple_free@@Base+0x698>
   13a40:	b	13b74 <triple_free@@Base+0x698>
   13a44:	b	13b74 <triple_free@@Base+0x698>
   13a48:	b	13b74 <triple_free@@Base+0x698>
   13a4c:	b	13b74 <triple_free@@Base+0x698>
   13a50:	b	13b74 <triple_free@@Base+0x698>
   13a54:	b	13b74 <triple_free@@Base+0x698>
   13a58:	b	13b74 <triple_free@@Base+0x698>
   13a5c:	b	13b74 <triple_free@@Base+0x698>
   13a60:	b	13b74 <triple_free@@Base+0x698>
   13a64:	b	13b74 <triple_free@@Base+0x698>
   13a68:	b	13b74 <triple_free@@Base+0x698>
   13a6c:	b	13b74 <triple_free@@Base+0x698>
   13a70:	b	13b74 <triple_free@@Base+0x698>
   13a74:	b	13b74 <triple_free@@Base+0x698>
   13a78:	b	13b74 <triple_free@@Base+0x698>
   13a7c:	b	13b74 <triple_free@@Base+0x698>
   13a80:	b	13b74 <triple_free@@Base+0x698>
   13a84:	b	13b74 <triple_free@@Base+0x698>
   13a88:	b	13b74 <triple_free@@Base+0x698>
   13a8c:	b	13b74 <triple_free@@Base+0x698>
   13a90:	b	13b74 <triple_free@@Base+0x698>
   13a94:	b	13b74 <triple_free@@Base+0x698>
   13a98:	b	13c80 <triple_free@@Base+0x7a4>
   13a9c:	b	13ca0 <triple_free@@Base+0x7c4>
   13aa0:	b	13c80 <triple_free@@Base+0x7a4>
   13aa4:	b	13c98 <triple_free@@Base+0x7bc>
   13aa8:	ldr	r3, [sp, #160]	; 0xa0
   13aac:	cmp	r3, #2
   13ab0:	beq	1433c <triple_free@@Base+0xe60>
   13ab4:	cmp	r3, #3
   13ab8:	bne	13b74 <triple_free@@Base+0x698>
   13abc:	ldr	r1, [sp, #164]	; 0xa4
   13ac0:	tst	r1, #4
   13ac4:	beq	13b74 <triple_free@@Base+0x698>
   13ac8:	add	r3, fp, #2
   13acc:	cmp	r8, r3
   13ad0:	bls	13b74 <triple_free@@Base+0x698>
   13ad4:	ldrb	r2, [r5, #1]
   13ad8:	mov	r1, #1
   13adc:	cmp	r2, #63	; 0x3f
   13ae0:	bne	13b74 <triple_free@@Base+0x698>
   13ae4:	ldr	r0, [sp, #32]
   13ae8:	ldrb	ip, [r0, r3]
   13aec:	sub	r0, ip, #33	; 0x21
   13af0:	uxtb	r0, r0
   13af4:	cmp	r0, #29
   13af8:	bhi	13b74 <triple_free@@Base+0x698>
   13afc:	lsl	r1, r1, r0
   13b00:	movw	r0, #20929	; 0x51c1
   13b04:	movt	r0, #14336	; 0x3800
   13b08:	and	r0, r1, r0
   13b0c:	cmp	r0, #0
   13b10:	beq	13b74 <triple_free@@Base+0x698>
   13b14:	ldr	r1, [sp, #36]	; 0x24
   13b18:	cmp	r1, #0
   13b1c:	bne	13cbc <triple_free@@Base+0x7e0>
   13b20:	cmp	r9, sl
   13b24:	mov	r4, ip
   13b28:	mov	fp, r3
   13b2c:	ldrcc	r0, [sp, #40]	; 0x28
   13b30:	strbcc	r2, [r0, r9]
   13b34:	add	r2, r9, #1
   13b38:	cmp	sl, r2
   13b3c:	ldrhi	r0, [sp, #40]	; 0x28
   13b40:	movhi	r1, #34	; 0x22
   13b44:	strbhi	r1, [r0, r2]
   13b48:	add	r2, r9, #2
   13b4c:	cmp	sl, r2
   13b50:	ldrhi	r0, [sp, #40]	; 0x28
   13b54:	movhi	r1, #34	; 0x22
   13b58:	strbhi	r1, [r0, r2]
   13b5c:	add	r2, r9, #3
   13b60:	cmp	sl, r2
   13b64:	add	r9, r9, #4
   13b68:	ldrhi	r0, [sp, #40]	; 0x28
   13b6c:	movhi	r1, #63	; 0x3f
   13b70:	strbhi	r1, [r0, r2]
   13b74:	ldr	r0, [sp, #44]	; 0x2c
   13b78:	cmp	r0, #0
   13b7c:	bne	13ba4 <triple_free@@Base+0x6c8>
   13b80:	ldr	r1, [sp, #48]	; 0x30
   13b84:	cmp	r1, #0
   13b88:	beq	13ba4 <triple_free@@Base+0x6c8>
   13b8c:	ubfx	r2, r4, #5, #8
   13b90:	and	r3, r4, #31
   13b94:	ldr	r2, [r1, r2, lsl #2]
   13b98:	lsr	r3, r2, r3
   13b9c:	tst	r3, #1
   13ba0:	bne	13bac <triple_free@@Base+0x6d0>
   13ba4:	cmp	r6, #0
   13ba8:	beq	13bcc <triple_free@@Base+0x6f0>
   13bac:	ldr	r2, [sp, #36]	; 0x24
   13bb0:	cmp	r2, #0
   13bb4:	bne	13cbc <triple_free@@Base+0x7e0>
   13bb8:	cmp	r9, sl
   13bbc:	ldrcc	r0, [sp, #40]	; 0x28
   13bc0:	movcc	r3, #92	; 0x5c
   13bc4:	strbcc	r3, [r0, r9]
   13bc8:	add	r9, r9, #1
   13bcc:	add	fp, fp, #1
   13bd0:	cmp	r9, sl
   13bd4:	ldrcc	r1, [sp, #40]	; 0x28
   13bd8:	strbcc	r4, [r1, r9]
   13bdc:	cmn	r8, #1
   13be0:	add	r9, r9, #1
   13be4:	bne	1386c <triple_free@@Base+0x390>
   13be8:	ldr	r2, [sp, #32]
   13bec:	ldrb	r3, [r2, fp]
   13bf0:	adds	r3, r3, #0
   13bf4:	movne	r3, #1
   13bf8:	cmp	r3, #0
   13bfc:	bne	1387c <triple_free@@Base+0x3a0>
   13c00:	ldr	r3, [sp, #160]	; 0xa0
   13c04:	cmp	r9, #0
   13c08:	cmpeq	r3, #2
   13c0c:	bne	13c1c <triple_free@@Base+0x740>
   13c10:	ldr	r0, [sp, #36]	; 0x24
   13c14:	cmp	r0, #0
   13c18:	bne	13cbc <triple_free@@Base+0x7e0>
   13c1c:	ldr	r1, [sp, #36]	; 0x24
   13c20:	ldr	r2, [sp, #52]	; 0x34
   13c24:	eor	r3, r1, #1
   13c28:	cmp	r2, #0
   13c2c:	moveq	r3, #0
   13c30:	andne	r3, r3, #1
   13c34:	cmp	r3, #0
   13c38:	beq	13c64 <triple_free@@Base+0x788>
   13c3c:	ldrb	r3, [r2]
   13c40:	cmp	r3, #0
   13c44:	beq	13c64 <triple_free@@Base+0x788>
   13c48:	ldr	r1, [sp, #40]	; 0x28
   13c4c:	cmp	sl, r9
   13c50:	strbhi	r3, [r1, r9]
   13c54:	ldrb	r3, [r2, #1]!
   13c58:	add	r9, r9, #1
   13c5c:	cmp	r3, #0
   13c60:	bne	13c4c <triple_free@@Base+0x770>
   13c64:	cmp	r9, sl
   13c68:	movcs	r0, r9
   13c6c:	ldrcc	r1, [sp, #40]	; 0x28
   13c70:	movcc	r3, #0
   13c74:	movcc	r0, r9
   13c78:	strbcc	r3, [r1, r9]
   13c7c:	b	13cf8 <triple_free@@Base+0x81c>
   13c80:	cmn	r8, #1
   13c84:	beq	1434c <triple_free@@Base+0xe70>
   13c88:	subs	r3, r8, #1
   13c8c:	movne	r3, #1
   13c90:	cmp	r3, #0
   13c94:	bne	13b74 <triple_free@@Base+0x698>
   13c98:	cmp	fp, #0
   13c9c:	bne	13b74 <triple_free@@Base+0x698>
   13ca0:	ldr	r3, [sp, #36]	; 0x24
   13ca4:	ldr	r0, [sp, #160]	; 0xa0
   13ca8:	cmp	r0, #2
   13cac:	movne	r3, #0
   13cb0:	andeq	r3, r3, #1
   13cb4:	cmp	r3, #0
   13cb8:	beq	13b74 <triple_free@@Base+0x698>
   13cbc:	ldr	r2, [sp, #164]	; 0xa4
   13cc0:	mov	ip, #0
   13cc4:	ldr	r0, [sp, #160]	; 0xa0
   13cc8:	bic	r3, r2, #2
   13ccc:	ldr	r1, [sp, #72]	; 0x48
   13cd0:	ldr	r2, [sp, #68]	; 0x44
   13cd4:	stm	sp, {r0, r3}
   13cd8:	mov	r3, r8
   13cdc:	str	r1, [sp, #12]
   13ce0:	mov	r1, sl
   13ce4:	str	r2, [sp, #16]
   13ce8:	ldr	r0, [sp, #40]	; 0x28
   13cec:	ldr	r2, [sp, #32]
   13cf0:	str	ip, [sp, #8]
   13cf4:	bl	1378c <triple_free@@Base+0x2b0>
   13cf8:	ldr	r1, [sp, #56]	; 0x38
   13cfc:	ldr	r2, [sp, #116]	; 0x74
   13d00:	ldr	r3, [r1]
   13d04:	cmp	r2, r3
   13d08:	bne	1443c <triple_free@@Base+0xf60>
   13d0c:	add	sp, sp, #124	; 0x7c
   13d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d14:	mov	r3, #114	; 0x72
   13d18:	ldr	r2, [sp, #36]	; 0x24
   13d1c:	ldr	r0, [sp, #160]	; 0xa0
   13d20:	cmp	r0, #2
   13d24:	movne	r2, #0
   13d28:	andeq	r2, r2, #1
   13d2c:	cmp	r2, #0
   13d30:	bne	13cbc <triple_free@@Base+0x7e0>
   13d34:	ldr	r1, [sp, #24]
   13d38:	cmp	r1, #0
   13d3c:	beq	13b74 <triple_free@@Base+0x698>
   13d40:	mov	r4, r3
   13d44:	b	13bac <triple_free@@Base+0x6d0>
   13d48:	mov	r3, #98	; 0x62
   13d4c:	b	13d34 <triple_free@@Base+0x858>
   13d50:	mov	r3, #102	; 0x66
   13d54:	b	13d34 <triple_free@@Base+0x858>
   13d58:	mov	r3, #118	; 0x76
   13d5c:	b	13d34 <triple_free@@Base+0x858>
   13d60:	mov	r3, #97	; 0x61
   13d64:	b	13d34 <triple_free@@Base+0x858>
   13d68:	mov	r3, #110	; 0x6e
   13d6c:	b	13d18 <triple_free@@Base+0x83c>
   13d70:	mov	r3, #116	; 0x74
   13d74:	b	13d18 <triple_free@@Base+0x83c>
   13d78:	ldr	r2, [sp, #24]
   13d7c:	cmp	r2, #0
   13d80:	beq	14328 <triple_free@@Base+0xe4c>
   13d84:	ldr	r3, [sp, #36]	; 0x24
   13d88:	cmp	r3, #0
   13d8c:	bne	13cbc <triple_free@@Base+0x7e0>
   13d90:	cmp	r9, sl
   13d94:	add	r2, r9, #1
   13d98:	ldrcc	r0, [sp, #40]	; 0x28
   13d9c:	movcc	r3, #92	; 0x5c
   13da0:	strbcc	r3, [r0, r9]
   13da4:	add	r3, fp, #1
   13da8:	cmp	r8, r3
   13dac:	bls	13dec <triple_free@@Base+0x910>
   13db0:	ldr	r1, [sp, #32]
   13db4:	ldrb	r3, [r1, r3]
   13db8:	sub	r3, r3, #48	; 0x30
   13dbc:	cmp	r3, #9
   13dc0:	bhi	13dec <triple_free@@Base+0x910>
   13dc4:	cmp	sl, r2
   13dc8:	ldrhi	r0, [sp, #40]	; 0x28
   13dcc:	movhi	r3, #48	; 0x30
   13dd0:	strbhi	r3, [r0, r2]
   13dd4:	add	r3, r9, #2
   13dd8:	cmp	sl, r3
   13ddc:	ldrhi	r1, [sp, #40]	; 0x28
   13de0:	movhi	r2, #48	; 0x30
   13de4:	strbhi	r2, [r1, r3]
   13de8:	add	r2, r9, #3
   13dec:	mov	r9, r2
   13df0:	mov	r4, #48	; 0x30
   13df4:	b	13b80 <triple_free@@Base+0x6a4>
   13df8:	ldr	r1, [sp, #76]	; 0x4c
   13dfc:	cmp	r1, #0
   13e00:	beq	13e0c <triple_free@@Base+0x930>
   13e04:	cmp	r7, #0
   13e08:	bne	13bcc <triple_free@@Base+0x6f0>
   13e0c:	mov	r3, r4
   13e10:	b	13d18 <triple_free@@Base+0x83c>
   13e14:	ldr	r1, [sp, #160]	; 0xa0
   13e18:	cmp	r1, #2
   13e1c:	bne	13b74 <triple_free@@Base+0x698>
   13e20:	ldr	r2, [sp, #36]	; 0x24
   13e24:	cmp	r2, #0
   13e28:	bne	13cbc <triple_free@@Base+0x7e0>
   13e2c:	cmp	r9, sl
   13e30:	ldrcc	r0, [sp, #40]	; 0x28
   13e34:	movcc	r3, #39	; 0x27
   13e38:	strbcc	r3, [r0, r9]
   13e3c:	add	r3, r9, #1
   13e40:	cmp	sl, r3
   13e44:	ldrhi	r1, [sp, #40]	; 0x28
   13e48:	movhi	r2, #92	; 0x5c
   13e4c:	strbhi	r2, [r1, r3]
   13e50:	add	r3, r9, #2
   13e54:	cmp	sl, r3
   13e58:	add	r9, r9, #3
   13e5c:	ldrhi	r0, [sp, #40]	; 0x28
   13e60:	movhi	r2, #39	; 0x27
   13e64:	strbhi	r2, [r0, r3]
   13e68:	b	13b74 <triple_free@@Base+0x698>
   13e6c:	ldr	r1, [sp, #64]	; 0x40
   13e70:	cmp	r1, #1
   13e74:	bne	1416c <triple_free@@Base+0xc90>
   13e78:	bl	11128 <__ctype_b_loc@plt>
   13e7c:	ldr	r2, [sp, #64]	; 0x40
   13e80:	sxth	r3, r4
   13e84:	str	r2, [sp, #60]	; 0x3c
   13e88:	lsl	r3, r3, #1
   13e8c:	ldr	r2, [r0]
   13e90:	ldrh	r2, [r2, r3]
   13e94:	eor	r2, r2, #16384	; 0x4000
   13e98:	ubfx	r2, r2, #14, #1
   13e9c:	ldr	r1, [sp, #24]
   13ea0:	ands	r2, r2, r1
   13ea4:	beq	13b74 <triple_free@@Base+0x698>
   13ea8:	ldr	r3, [sp, #60]	; 0x3c
   13eac:	mov	r0, #92	; 0x5c
   13eb0:	ldr	r7, [sp, #36]	; 0x24
   13eb4:	add	r1, r3, fp
   13eb8:	str	r8, [sp, #60]	; 0x3c
   13ebc:	ldr	r3, [sp, #40]	; 0x28
   13ec0:	b	13f24 <triple_free@@Base+0xa48>
   13ec4:	cmp	r7, #0
   13ec8:	bne	14364 <triple_free@@Base+0xe88>
   13ecc:	add	ip, r9, #1
   13ed0:	cmp	r9, sl
   13ed4:	strbcc	r0, [r3, r9]
   13ed8:	cmp	sl, ip
   13edc:	lsrhi	r8, r4, #6
   13ee0:	addhi	r8, r8, #48	; 0x30
   13ee4:	strbhi	r8, [r3, ip]
   13ee8:	add	ip, r9, #2
   13eec:	add	r9, r9, #3
   13ef0:	cmp	sl, ip
   13ef4:	ubfxhi	r8, r4, #3, #3
   13ef8:	and	r4, r4, #7
   13efc:	add	r4, r4, #48	; 0x30
   13f00:	addhi	r8, r8, #48	; 0x30
   13f04:	strbhi	r8, [r3, ip]
   13f08:	add	fp, fp, #1
   13f0c:	cmp	r1, fp
   13f10:	bls	13f50 <triple_free@@Base+0xa74>
   13f14:	cmp	r9, sl
   13f18:	strbcc	r4, [r3, r9]
   13f1c:	ldrb	r4, [r5, #1]!
   13f20:	add	r9, r9, #1
   13f24:	cmp	r2, #0
   13f28:	bne	13ec4 <triple_free@@Base+0x9e8>
   13f2c:	cmp	r6, #0
   13f30:	beq	13f08 <triple_free@@Base+0xa2c>
   13f34:	add	fp, fp, #1
   13f38:	cmp	r9, sl
   13f3c:	strbcc	r0, [r3, r9]
   13f40:	cmp	r1, fp
   13f44:	add	r9, r9, #1
   13f48:	mov	r6, #0
   13f4c:	bhi	13f14 <triple_free@@Base+0xa38>
   13f50:	ldr	r8, [sp, #60]	; 0x3c
   13f54:	b	13bd0 <triple_free@@Base+0x6f4>
   13f58:	ldr	r3, [sp, #36]	; 0x24
   13f5c:	cmp	r3, #0
   13f60:	bne	14464 <triple_free@@Base+0xf88>
   13f64:	cmp	sl, #0
   13f68:	beq	1437c <triple_free@@Base+0xea0>
   13f6c:	ldr	r1, [sp, #40]	; 0x28
   13f70:	mov	r0, #1
   13f74:	ldr	r2, [pc, #1296]	; 1448c <triple_free@@Base+0xfb0>
   13f78:	mov	r3, #34	; 0x22
   13f7c:	str	r0, [sp, #24]
   13f80:	mov	r9, r0
   13f84:	add	r2, pc, r2
   13f88:	str	r0, [sp, #28]
   13f8c:	strb	r3, [r1]
   13f90:	str	r2, [sp, #52]	; 0x34
   13f94:	b	13840 <triple_free@@Base+0x364>
   13f98:	ldr	r3, [pc, #1264]	; 14490 <triple_free@@Base+0xfb4>
   13f9c:	mov	r2, #1
   13fa0:	mov	r0, #3
   13fa4:	str	r2, [sp, #36]	; 0x24
   13fa8:	add	r3, pc, r3
   13fac:	str	r2, [sp, #24]
   13fb0:	str	r3, [sp, #52]	; 0x34
   13fb4:	mov	r9, #0
   13fb8:	str	r2, [sp, #28]
   13fbc:	str	r0, [sp, #160]	; 0xa0
   13fc0:	b	13840 <triple_free@@Base+0x364>
   13fc4:	mov	r0, #0
   13fc8:	mov	r1, #1
   13fcc:	str	r0, [sp, #36]	; 0x24
   13fd0:	mov	r9, r0
   13fd4:	str	r1, [sp, #24]
   13fd8:	str	r0, [sp, #28]
   13fdc:	str	r0, [sp, #52]	; 0x34
   13fe0:	b	13840 <triple_free@@Base+0x364>
   13fe4:	ldr	r3, [sp, #160]	; 0xa0
   13fe8:	cmp	r3, #8
   13fec:	beq	14018 <triple_free@@Base+0xb3c>
   13ff0:	ldr	r0, [pc, #1180]	; 14494 <triple_free@@Base+0xfb8>
   13ff4:	mov	r1, r3
   13ff8:	add	r0, pc, r0
   13ffc:	bl	13628 <triple_free@@Base+0x14c>
   14000:	ldr	r1, [sp, #160]	; 0xa0
   14004:	str	r0, [sp, #72]	; 0x48
   14008:	ldr	r0, [pc, #1160]	; 14498 <triple_free@@Base+0xfbc>
   1400c:	add	r0, pc, r0
   14010:	bl	13628 <triple_free@@Base+0x14c>
   14014:	str	r0, [sp, #68]	; 0x44
   14018:	ldr	r0, [sp, #36]	; 0x24
   1401c:	cmp	r0, #0
   14020:	movne	r9, #0
   14024:	bne	1405c <triple_free@@Base+0xb80>
   14028:	ldr	r1, [sp, #72]	; 0x48
   1402c:	ldrb	r3, [r1]
   14030:	cmp	r3, #0
   14034:	beq	14434 <triple_free@@Base+0xf58>
   14038:	mov	r2, r1
   1403c:	ldr	r1, [sp, #40]	; 0x28
   14040:	mov	r9, r0
   14044:	cmp	r9, sl
   14048:	strbcc	r3, [r1, r9]
   1404c:	ldrb	r3, [r2, #1]!
   14050:	add	r9, r9, #1
   14054:	cmp	r3, #0
   14058:	bne	14044 <triple_free@@Base+0xb68>
   1405c:	ldr	r0, [sp, #68]	; 0x44
   14060:	str	r0, [sp, #52]	; 0x34
   14064:	bl	1114c <strlen@plt>
   14068:	mov	r2, #1
   1406c:	str	r2, [sp, #24]
   14070:	str	r0, [sp, #28]
   14074:	b	13840 <triple_free@@Base+0x364>
   14078:	ldr	r3, [pc, #1052]	; 1449c <triple_free@@Base+0xfc0>
   1407c:	mov	r2, #0
   14080:	mov	r1, #1
   14084:	mov	r0, #2
   14088:	add	r3, pc, r3
   1408c:	str	r1, [sp, #36]	; 0x24
   14090:	str	r2, [sp, #24]
   14094:	mov	r9, r2
   14098:	str	r1, [sp, #28]
   1409c:	str	r3, [sp, #52]	; 0x34
   140a0:	str	r0, [sp, #160]	; 0xa0
   140a4:	b	13840 <triple_free@@Base+0x364>
   140a8:	ldr	r3, [sp, #36]	; 0x24
   140ac:	cmp	r3, #0
   140b0:	bne	14440 <triple_free@@Base+0xf64>
   140b4:	cmp	sl, #0
   140b8:	beq	1439c <triple_free@@Base+0xec0>
   140bc:	ldr	r1, [sp, #40]	; 0x28
   140c0:	mov	r3, #39	; 0x27
   140c4:	ldr	r2, [sp, #36]	; 0x24
   140c8:	mov	r0, #1
   140cc:	mov	r9, r0
   140d0:	str	r0, [sp, #28]
   140d4:	strb	r3, [r1]
   140d8:	ldr	r3, [pc, #960]	; 144a0 <triple_free@@Base+0xfc4>
   140dc:	str	r2, [sp, #24]
   140e0:	add	r3, pc, r3
   140e4:	str	r3, [sp, #52]	; 0x34
   140e8:	b	13840 <triple_free@@Base+0x364>
   140ec:	ldr	r2, [sp, #28]
   140f0:	cmp	r2, #1
   140f4:	add	r4, fp, r2
   140f8:	movls	r3, #0
   140fc:	movhi	r3, #1
   14100:	cmn	r8, #1
   14104:	movne	r3, #0
   14108:	cmp	r3, #0
   1410c:	beq	1411c <triple_free@@Base+0xc40>
   14110:	ldr	r0, [sp, #32]
   14114:	bl	1114c <strlen@plt>
   14118:	mov	r8, r0
   1411c:	cmp	r8, r4
   14120:	ldrcc	r3, [sp, #32]
   14124:	movcc	r6, #0
   14128:	addcc	r5, r3, fp
   1412c:	bcc	1389c <triple_free@@Base+0x3c0>
   14130:	ldr	r0, [sp, #32]
   14134:	ldr	r1, [sp, #52]	; 0x34
   14138:	add	r5, r0, fp
   1413c:	ldr	r2, [sp, #28]
   14140:	mov	r0, r5
   14144:	bl	11020 <memcmp@plt>
   14148:	cmp	r0, #0
   1414c:	bne	14164 <triple_free@@Base+0xc88>
   14150:	ldr	r1, [sp, #36]	; 0x24
   14154:	cmp	r1, #0
   14158:	bne	13cbc <triple_free@@Base+0x7e0>
   1415c:	mov	r6, #1
   14160:	b	1389c <triple_free@@Base+0x3c0>
   14164:	mov	r6, #0
   14168:	b	1389c <triple_free@@Base+0x3c0>
   1416c:	add	r7, sp, #108	; 0x6c
   14170:	cmn	r8, #1
   14174:	mov	r3, #0
   14178:	str	r3, [sp, #108]	; 0x6c
   1417c:	str	r3, [r7, #4]
   14180:	beq	1436c <triple_free@@Base+0xe90>
   14184:	mov	r1, #0
   14188:	ldr	r0, [sp, #32]
   1418c:	mov	ip, #1
   14190:	str	r9, [sp, #88]	; 0x58
   14194:	str	r6, [sp, #96]	; 0x60
   14198:	mov	r9, r1
   1419c:	str	r5, [sp, #100]	; 0x64
   141a0:	mov	r6, ip
   141a4:	mov	r5, r7
   141a8:	add	r3, sp, #104	; 0x68
   141ac:	sub	r0, r0, #1
   141b0:	str	r3, [sp, #80]	; 0x50
   141b4:	str	r0, [sp, #84]	; 0x54
   141b8:	str	r1, [sp, #60]	; 0x3c
   141bc:	str	r4, [sp, #92]	; 0x5c
   141c0:	ldr	r2, [sp, #32]
   141c4:	add	r7, r9, fp
   141c8:	add	r0, sp, #104	; 0x68
   141cc:	mov	r3, r5
   141d0:	add	r4, r2, r7
   141d4:	rsb	r2, r7, r8
   141d8:	mov	r1, r4
   141dc:	bl	110bc <mbrtowc@plt>
   141e0:	subs	r2, r0, #0
   141e4:	beq	142f0 <triple_free@@Base+0xe14>
   141e8:	cmn	r2, #1
   141ec:	beq	14418 <triple_free@@Base+0xf3c>
   141f0:	cmn	r2, #2
   141f4:	beq	143bc <triple_free@@Base+0xee0>
   141f8:	ldr	r3, [sp, #36]	; 0x24
   141fc:	ldr	r0, [sp, #160]	; 0xa0
   14200:	cmp	r0, #2
   14204:	movne	r3, #0
   14208:	andeq	r3, r3, #1
   1420c:	cmp	r3, #0
   14210:	beq	142cc <triple_free@@Base+0xdf0>
   14214:	cmp	r2, #1
   14218:	beq	142cc <triple_free@@Base+0xdf0>
   1421c:	ldr	r1, [sp, #84]	; 0x54
   14220:	add	r3, r1, r2
   14224:	add	r7, r3, r7
   14228:	ldrb	r3, [r4, #1]!
   1422c:	sub	r3, r3, #91	; 0x5b
   14230:	cmp	r3, #33	; 0x21
   14234:	addls	pc, pc, r3, lsl #2
   14238:	b	142c4 <triple_free@@Base+0xde8>
   1423c:	b	13cbc <triple_free@@Base+0x7e0>
   14240:	b	13cbc <triple_free@@Base+0x7e0>
   14244:	b	142c4 <triple_free@@Base+0xde8>
   14248:	b	13cbc <triple_free@@Base+0x7e0>
   1424c:	b	142c4 <triple_free@@Base+0xde8>
   14250:	b	13cbc <triple_free@@Base+0x7e0>
   14254:	b	142c4 <triple_free@@Base+0xde8>
   14258:	b	142c4 <triple_free@@Base+0xde8>
   1425c:	b	142c4 <triple_free@@Base+0xde8>
   14260:	b	142c4 <triple_free@@Base+0xde8>
   14264:	b	142c4 <triple_free@@Base+0xde8>
   14268:	b	142c4 <triple_free@@Base+0xde8>
   1426c:	b	142c4 <triple_free@@Base+0xde8>
   14270:	b	142c4 <triple_free@@Base+0xde8>
   14274:	b	142c4 <triple_free@@Base+0xde8>
   14278:	b	142c4 <triple_free@@Base+0xde8>
   1427c:	b	142c4 <triple_free@@Base+0xde8>
   14280:	b	142c4 <triple_free@@Base+0xde8>
   14284:	b	142c4 <triple_free@@Base+0xde8>
   14288:	b	142c4 <triple_free@@Base+0xde8>
   1428c:	b	142c4 <triple_free@@Base+0xde8>
   14290:	b	142c4 <triple_free@@Base+0xde8>
   14294:	b	142c4 <triple_free@@Base+0xde8>
   14298:	b	142c4 <triple_free@@Base+0xde8>
   1429c:	b	142c4 <triple_free@@Base+0xde8>
   142a0:	b	142c4 <triple_free@@Base+0xde8>
   142a4:	b	142c4 <triple_free@@Base+0xde8>
   142a8:	b	142c4 <triple_free@@Base+0xde8>
   142ac:	b	142c4 <triple_free@@Base+0xde8>
   142b0:	b	142c4 <triple_free@@Base+0xde8>
   142b4:	b	142c4 <triple_free@@Base+0xde8>
   142b8:	b	142c4 <triple_free@@Base+0xde8>
   142bc:	b	142c4 <triple_free@@Base+0xde8>
   142c0:	b	13cbc <triple_free@@Base+0x7e0>
   142c4:	cmp	r4, r7
   142c8:	bne	14228 <triple_free@@Base+0xd4c>
   142cc:	ldr	r0, [sp, #104]	; 0x68
   142d0:	add	r9, r9, r2
   142d4:	bl	11068 <iswprint@plt>
   142d8:	cmp	r0, #0
   142dc:	mov	r0, r5
   142e0:	moveq	r6, #0
   142e4:	bl	11014 <mbsinit@plt>
   142e8:	cmp	r0, #0
   142ec:	beq	141c0 <triple_free@@Base+0xce4>
   142f0:	mov	ip, r6
   142f4:	eor	r2, ip, #1
   142f8:	str	r9, [sp, #60]	; 0x3c
   142fc:	ldr	r4, [sp, #92]	; 0x5c
   14300:	uxtb	r2, r2
   14304:	ldr	r9, [sp, #88]	; 0x58
   14308:	ldr	r6, [sp, #96]	; 0x60
   1430c:	ldr	r5, [sp, #100]	; 0x64
   14310:	ldr	r3, [sp, #60]	; 0x3c
   14314:	cmp	r3, #1
   14318:	bls	13e9c <triple_free@@Base+0x9c0>
   1431c:	ldr	r0, [sp, #24]
   14320:	and	r2, r2, r0
   14324:	b	13ea8 <triple_free@@Base+0x9cc>
   14328:	ldr	r2, [sp, #164]	; 0xa4
   1432c:	tst	r2, #1
   14330:	addne	fp, fp, #1
   14334:	bne	13864 <triple_free@@Base+0x388>
   14338:	b	13b74 <triple_free@@Base+0x698>
   1433c:	ldr	r0, [sp, #36]	; 0x24
   14340:	cmp	r0, #0
   14344:	beq	13b74 <triple_free@@Base+0x698>
   14348:	b	13cbc <triple_free@@Base+0x7e0>
   1434c:	ldr	r2, [sp, #32]
   14350:	ldrb	r3, [r2, #1]
   14354:	adds	r3, r3, #0
   14358:	movne	r3, #1
   1435c:	b	13c90 <triple_free@@Base+0x7b4>
   14360:	bl	11230 <abort@plt>
   14364:	ldr	r8, [sp, #60]	; 0x3c
   14368:	b	13cbc <triple_free@@Base+0x7e0>
   1436c:	ldr	r0, [sp, #32]
   14370:	bl	1114c <strlen@plt>
   14374:	mov	r8, r0
   14378:	b	14184 <triple_free@@Base+0xca8>
   1437c:	ldr	r2, [pc, #288]	; 144a4 <triple_free@@Base+0xfc8>
   14380:	mov	r1, #1
   14384:	mov	r9, r1
   14388:	str	r1, [sp, #24]
   1438c:	add	r2, pc, r2
   14390:	str	r1, [sp, #28]
   14394:	str	r2, [sp, #52]	; 0x34
   14398:	b	13840 <triple_free@@Base+0x364>
   1439c:	ldr	r2, [pc, #260]	; 144a8 <triple_free@@Base+0xfcc>
   143a0:	mov	r3, #1
   143a4:	mov	r9, r3
   143a8:	str	r3, [sp, #28]
   143ac:	add	r2, pc, r2
   143b0:	str	sl, [sp, #24]
   143b4:	str	r2, [sp, #52]	; 0x34
   143b8:	b	13840 <triple_free@@Base+0x364>
   143bc:	cmp	r8, r7
   143c0:	str	r9, [sp, #60]	; 0x3c
   143c4:	mov	ip, r4
   143c8:	ldr	r6, [sp, #96]	; 0x60
   143cc:	ldr	r9, [sp, #88]	; 0x58
   143d0:	ldr	r4, [sp, #92]	; 0x5c
   143d4:	ldr	r5, [sp, #100]	; 0x64
   143d8:	bls	14410 <triple_free@@Base+0xf34>
   143dc:	ldrb	r3, [ip]
   143e0:	cmp	r3, #0
   143e4:	beq	14410 <triple_free@@Base+0xf34>
   143e8:	ldr	r3, [sp, #60]	; 0x3c
   143ec:	b	143fc <triple_free@@Base+0xf20>
   143f0:	ldrb	r2, [r5, r3]
   143f4:	cmp	r2, #0
   143f8:	beq	1440c <triple_free@@Base+0xf30>
   143fc:	add	r3, r3, #1
   14400:	add	r2, fp, r3
   14404:	cmp	r8, r2
   14408:	bhi	143f0 <triple_free@@Base+0xf14>
   1440c:	str	r3, [sp, #60]	; 0x3c
   14410:	mov	r2, #1
   14414:	b	14310 <triple_free@@Base+0xe34>
   14418:	str	r9, [sp, #60]	; 0x3c
   1441c:	mov	r2, #1
   14420:	ldr	r4, [sp, #92]	; 0x5c
   14424:	ldr	r6, [sp, #96]	; 0x60
   14428:	ldr	r9, [sp, #88]	; 0x58
   1442c:	ldr	r5, [sp, #100]	; 0x64
   14430:	b	14310 <triple_free@@Base+0xe34>
   14434:	ldr	r9, [sp, #36]	; 0x24
   14438:	b	1405c <triple_free@@Base+0xb80>
   1443c:	bl	11038 <__stack_chk_fail@plt>
   14440:	ldr	r1, [pc, #100]	; 144ac <triple_free@@Base+0xfd0>
   14444:	mov	r3, #0
   14448:	mov	r0, #1
   1444c:	str	r3, [sp, #24]
   14450:	add	r1, pc, r1
   14454:	str	r0, [sp, #28]
   14458:	mov	r9, r3
   1445c:	str	r1, [sp, #52]	; 0x34
   14460:	b	13840 <triple_free@@Base+0x364>
   14464:	ldr	r0, [pc, #68]	; 144b0 <triple_free@@Base+0xfd4>
   14468:	mov	r3, #1
   1446c:	mov	r9, #0
   14470:	str	r3, [sp, #24]
   14474:	add	r0, pc, r0
   14478:	str	r3, [sp, #28]
   1447c:	str	r0, [sp, #52]	; 0x34
   14480:	b	13840 <triple_free@@Base+0x364>
   14484:	andeq	r4, r1, r0, asr r8
   14488:	strdeq	r0, [r0], -r8
   1448c:	andeq	r3, r0, ip, ror r2
   14490:	andeq	r3, r0, r8, asr r2
   14494:	andeq	r3, r0, r4, lsl r2
   14498:	strdeq	r3, [r0], -r0
   1449c:	andeq	r3, r0, r4, ror r1
   144a0:	andeq	r3, r0, ip, lsl r1
   144a4:	andeq	r2, r0, r4, ror lr
   144a8:	andeq	r2, r0, r0, asr lr
   144ac:	andeq	r2, r0, ip, lsr #27
   144b0:	andeq	r2, r0, ip, lsl #27
   144b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144b8:	sub	sp, sp, #44	; 0x2c
   144bc:	mov	r6, r0
   144c0:	mov	r9, r1
   144c4:	mov	sl, r2
   144c8:	mov	r4, r3
   144cc:	bl	11164 <__errno_location@plt>
   144d0:	ldr	fp, [pc, #412]	; 14674 <triple_free@@Base+0x1198>
   144d4:	cmp	r6, #0
   144d8:	add	fp, pc, fp
   144dc:	ldr	r5, [fp]
   144e0:	ldr	r1, [r0]
   144e4:	mov	r8, r0
   144e8:	str	r1, [sp, #36]	; 0x24
   144ec:	blt	1466c <triple_free@@Base+0x1190>
   144f0:	ldr	r3, [pc, #384]	; 14678 <triple_free@@Base+0x119c>
   144f4:	add	r3, pc, r3
   144f8:	ldr	r3, [r3]
   144fc:	cmp	r6, r3
   14500:	bcc	14554 <triple_free@@Base+0x1078>
   14504:	add	r7, r6, #1
   14508:	cmn	r7, #-536870911	; 0xe0000001
   1450c:	bhi	14670 <triple_free@@Base+0x1194>
   14510:	add	r3, fp, #4
   14514:	cmp	r5, r3
   14518:	beq	14644 <triple_free@@Base+0x1168>
   1451c:	mov	r0, r5
   14520:	lsl	r1, r7, #3
   14524:	bl	154bc <triple_free@@Base+0x1fe0>
   14528:	mov	r5, r0
   1452c:	str	r0, [fp]
   14530:	ldr	fp, [pc, #324]	; 1467c <triple_free@@Base+0x11a0>
   14534:	mov	r1, #0
   14538:	add	fp, pc, fp
   1453c:	ldr	r0, [fp]
   14540:	rsb	r2, r0, r7
   14544:	add	r0, r5, r0, lsl #3
   14548:	lsl	r2, r2, #3
   1454c:	bl	1117c <memset@plt>
   14550:	str	r7, [fp]
   14554:	add	r2, r4, #8
   14558:	str	r2, [sp, #32]
   1455c:	ldr	r1, [r4]
   14560:	add	fp, r5, r6, lsl #3
   14564:	ldr	lr, [sp, #32]
   14568:	mov	r2, r9
   1456c:	ldr	r3, [r4, #4]
   14570:	ldr	ip, [r5, r6, lsl #3]
   14574:	ldr	r7, [fp, #4]
   14578:	orr	r3, r3, #1
   1457c:	str	r1, [sp]
   14580:	str	r3, [sp, #4]
   14584:	mov	r1, ip
   14588:	str	lr, [sp, #8]
   1458c:	mov	r0, r7
   14590:	ldr	lr, [r4, #40]	; 0x28
   14594:	str	r3, [sp, #28]
   14598:	mov	r3, sl
   1459c:	str	lr, [sp, #12]
   145a0:	ldr	lr, [r4, #44]	; 0x2c
   145a4:	str	ip, [sp, #24]
   145a8:	str	lr, [sp, #16]
   145ac:	bl	1378c <triple_free@@Base+0x2b0>
   145b0:	ldr	ip, [sp, #24]
   145b4:	cmp	ip, r0
   145b8:	bhi	14630 <triple_free@@Base+0x1154>
   145bc:	ldr	r3, [pc, #188]	; 14680 <triple_free@@Base+0x11a4>
   145c0:	add	r1, r0, #1
   145c4:	str	r1, [r5, r6, lsl #3]
   145c8:	add	r3, pc, r3
   145cc:	cmp	r7, r3
   145d0:	beq	145e4 <triple_free@@Base+0x1108>
   145d4:	mov	r0, r7
   145d8:	str	r1, [sp, #24]
   145dc:	bl	10ff0 <free@plt>
   145e0:	ldr	r1, [sp, #24]
   145e4:	mov	r0, r1
   145e8:	str	r1, [sp, #24]
   145ec:	bl	15464 <triple_free@@Base+0x1f88>
   145f0:	ldr	r3, [sp, #28]
   145f4:	ldr	lr, [sp, #32]
   145f8:	mov	r2, r9
   145fc:	str	r0, [fp, #4]
   14600:	mov	r7, r0
   14604:	ldr	ip, [r4]
   14608:	str	r3, [sp, #4]
   1460c:	mov	r3, sl
   14610:	str	lr, [sp, #8]
   14614:	str	ip, [sp]
   14618:	ldr	ip, [r4, #40]	; 0x28
   1461c:	ldr	r1, [sp, #24]
   14620:	str	ip, [sp, #12]
   14624:	ldr	ip, [r4, #44]	; 0x2c
   14628:	str	ip, [sp, #16]
   1462c:	bl	1378c <triple_free@@Base+0x2b0>
   14630:	ldr	r1, [sp, #36]	; 0x24
   14634:	mov	r0, r7
   14638:	str	r1, [r8]
   1463c:	add	sp, sp, #44	; 0x2c
   14640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14644:	lsl	r1, r7, #3
   14648:	mov	r0, #0
   1464c:	str	r3, [sp, #24]
   14650:	bl	154bc <triple_free@@Base+0x1fe0>
   14654:	ldr	r3, [sp, #24]
   14658:	mov	r5, r0
   1465c:	ldm	r3, {r0, r1}
   14660:	str	r5, [fp]
   14664:	stm	r5, {r0, r1}
   14668:	b	14530 <triple_free@@Base+0x1054>
   1466c:	bl	11230 <abort@plt>
   14670:	bl	15678 <triple_free@@Base+0x219c>
   14674:	muleq	r1, r8, ip
   14678:	andeq	r3, r1, r8, asr #24
   1467c:	andeq	r3, r1, r4, lsl #24
   14680:	andeq	r3, r1, r4, asr #23
   14684:	push	{r4, r5, r6, lr}
   14688:	mov	r5, r0
   1468c:	bl	11164 <__errno_location@plt>
   14690:	cmp	r5, #0
   14694:	mov	r1, #48	; 0x30
   14698:	mov	r4, r0
   1469c:	ldr	r0, [pc, #24]	; 146bc <triple_free@@Base+0x11e0>
   146a0:	ldr	r6, [r4]
   146a4:	add	r0, pc, r0
   146a8:	add	r0, r0, #256	; 0x100
   146ac:	movne	r0, r5
   146b0:	bl	15638 <triple_free@@Base+0x215c>
   146b4:	str	r6, [r4]
   146b8:	pop	{r4, r5, r6, pc}
   146bc:	andeq	r3, r1, r8, ror #21
   146c0:	cmp	r0, #0
   146c4:	beq	146d0 <triple_free@@Base+0x11f4>
   146c8:	ldr	r0, [r0]
   146cc:	bx	lr
   146d0:	ldr	r0, [pc, #12]	; 146e4 <triple_free@@Base+0x1208>
   146d4:	add	r0, pc, r0
   146d8:	add	r0, r0, #256	; 0x100
   146dc:	ldr	r0, [r0]
   146e0:	bx	lr
   146e4:			; <UNDEFINED> instruction: 0x00013ab8
   146e8:	cmp	r0, #0
   146ec:	beq	146f8 <triple_free@@Base+0x121c>
   146f0:	str	r1, [r0]
   146f4:	bx	lr
   146f8:	ldr	r0, [pc, #12]	; 1470c <triple_free@@Base+0x1230>
   146fc:	add	r0, pc, r0
   14700:	add	r0, r0, #256	; 0x100
   14704:	str	r1, [r0]
   14708:	bx	lr
   1470c:	muleq	r1, r0, sl
   14710:	cmp	r0, #0
   14714:	movne	r3, r0
   14718:	beq	14748 <triple_free@@Base+0x126c>
   1471c:	lsr	ip, r1, #5
   14720:	and	r1, r1, #31
   14724:	add	r3, r3, ip, lsl #2
   14728:	ldr	ip, [r3, #8]
   1472c:	lsr	r0, ip, r1
   14730:	eor	r2, r0, r2
   14734:	and	r0, r0, #1
   14738:	and	r2, r2, #1
   1473c:	eor	ip, ip, r2, lsl r1
   14740:	str	ip, [r3, #8]
   14744:	bx	lr
   14748:	ldr	r3, [pc, #8]	; 14758 <triple_free@@Base+0x127c>
   1474c:	add	r3, pc, r3
   14750:	add	r3, r3, #256	; 0x100
   14754:	b	1471c <triple_free@@Base+0x1240>
   14758:	andeq	r3, r1, r0, asr #20
   1475c:	subs	r3, r0, #0
   14760:	beq	14770 <triple_free@@Base+0x1294>
   14764:	ldr	r0, [r3, #4]
   14768:	str	r1, [r3, #4]
   1476c:	bx	lr
   14770:	ldr	r3, [pc, #8]	; 14780 <triple_free@@Base+0x12a4>
   14774:	add	r3, pc, r3
   14778:	add	r3, r3, #256	; 0x100
   1477c:	b	14764 <triple_free@@Base+0x1288>
   14780:	andeq	r3, r1, r8, lsl sl
   14784:	cmp	r0, #0
   14788:	push	{r3, lr}
   1478c:	beq	147b0 <triple_free@@Base+0x12d4>
   14790:	cmp	r2, #0
   14794:	cmpne	r1, #0
   14798:	mov	r3, #8
   1479c:	strne	r1, [r0, #40]	; 0x28
   147a0:	str	r3, [r0]
   147a4:	strne	r2, [r0, #44]	; 0x2c
   147a8:	popne	{r3, pc}
   147ac:	bl	11230 <abort@plt>
   147b0:	ldr	r0, [pc, #8]	; 147c0 <triple_free@@Base+0x12e4>
   147b4:	add	r0, pc, r0
   147b8:	add	r0, r0, #256	; 0x100
   147bc:	b	14790 <triple_free@@Base+0x12b4>
   147c0:	ldrdeq	r3, [r1], -r8
   147c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   147c8:	sub	sp, sp, #24
   147cc:	mov	r7, r0
   147d0:	mov	sl, r1
   147d4:	ldr	r4, [sp, #56]	; 0x38
   147d8:	mov	r9, r2
   147dc:	mov	r8, r3
   147e0:	cmp	r4, #0
   147e4:	beq	14838 <triple_free@@Base+0x135c>
   147e8:	bl	11164 <__errno_location@plt>
   147ec:	ldr	r3, [r4]
   147f0:	add	lr, r4, #8
   147f4:	mov	r1, sl
   147f8:	mov	r2, r9
   147fc:	ldr	r6, [r0]
   14800:	mov	r5, r0
   14804:	str	r3, [sp]
   14808:	mov	r0, r7
   1480c:	ldr	ip, [r4, #4]
   14810:	mov	r3, r8
   14814:	stmib	sp, {ip, lr}
   14818:	ldr	ip, [r4, #40]	; 0x28
   1481c:	str	ip, [sp, #12]
   14820:	ldr	ip, [r4, #44]	; 0x2c
   14824:	str	ip, [sp, #16]
   14828:	bl	1378c <triple_free@@Base+0x2b0>
   1482c:	str	r6, [r5]
   14830:	add	sp, sp, #24
   14834:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14838:	ldr	r4, [pc, #8]	; 14848 <triple_free@@Base+0x136c>
   1483c:	add	r4, pc, r4
   14840:	add	r4, r4, #256	; 0x100
   14844:	b	147e8 <triple_free@@Base+0x130c>
   14848:	andeq	r3, r1, r0, asr r9
   1484c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14850:	subs	r4, r3, #0
   14854:	sub	sp, sp, #36	; 0x24
   14858:	mov	r7, r0
   1485c:	mov	r6, r1
   14860:	mov	r5, r2
   14864:	beq	14920 <triple_free@@Base+0x1444>
   14868:	bl	11164 <__errno_location@plt>
   1486c:	ldr	r3, [r4]
   14870:	ldr	sl, [r4, #4]
   14874:	add	r9, r4, #8
   14878:	mov	r8, r0
   1487c:	mov	r0, #0
   14880:	ldr	r2, [r8]
   14884:	cmp	r5, r0
   14888:	orreq	sl, sl, #1
   1488c:	str	r9, [sp, #8]
   14890:	mov	r1, r0
   14894:	stm	sp, {r3, sl}
   14898:	mov	r3, r6
   1489c:	ldr	ip, [r4, #40]	; 0x28
   148a0:	str	r2, [sp, #28]
   148a4:	mov	r2, r7
   148a8:	str	ip, [sp, #12]
   148ac:	ldr	ip, [r4, #44]	; 0x2c
   148b0:	str	ip, [sp, #16]
   148b4:	bl	1378c <triple_free@@Base+0x2b0>
   148b8:	add	r1, r0, #1
   148bc:	mov	fp, r0
   148c0:	str	r1, [sp, #24]
   148c4:	mov	r0, r1
   148c8:	bl	15464 <triple_free@@Base+0x1f88>
   148cc:	ldr	lr, [r4]
   148d0:	str	sl, [sp, #4]
   148d4:	mov	r3, r6
   148d8:	str	r9, [sp, #8]
   148dc:	mov	r2, r7
   148e0:	str	lr, [sp]
   148e4:	ldr	lr, [r4, #40]	; 0x28
   148e8:	ldr	r1, [sp, #24]
   148ec:	str	lr, [sp, #12]
   148f0:	ldr	lr, [r4, #44]	; 0x2c
   148f4:	str	lr, [sp, #16]
   148f8:	str	r0, [sp, #24]
   148fc:	bl	1378c <triple_free@@Base+0x2b0>
   14900:	ldr	r3, [sp, #28]
   14904:	cmp	r5, #0
   14908:	str	r3, [r8]
   1490c:	ldr	ip, [sp, #24]
   14910:	strne	fp, [r5]
   14914:	mov	r0, ip
   14918:	add	sp, sp, #36	; 0x24
   1491c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14920:	ldr	r4, [pc, #8]	; 14930 <triple_free@@Base+0x1454>
   14924:	add	r4, pc, r4
   14928:	add	r4, r4, #256	; 0x100
   1492c:	b	14868 <triple_free@@Base+0x138c>
   14930:	andeq	r3, r1, r8, ror #16
   14934:	mov	r3, r2
   14938:	mov	r2, #0
   1493c:	b	1484c <triple_free@@Base+0x1370>
   14940:	ldr	r2, [pc, #152]	; 149e0 <triple_free@@Base+0x1504>
   14944:	push	{r3, r4, r5, r6, r7, lr}
   14948:	add	r2, pc, r2
   1494c:	ldr	r3, [pc, #144]	; 149e4 <triple_free@@Base+0x1508>
   14950:	ldr	r6, [r2]
   14954:	add	r3, pc, r3
   14958:	cmp	r6, #1
   1495c:	ldr	r7, [r3]
   14960:	movhi	r4, #1
   14964:	movhi	r5, r7
   14968:	bls	14984 <triple_free@@Base+0x14a8>
   1496c:	ldr	r0, [r5, #12]
   14970:	add	r4, r4, #1
   14974:	bl	10ff0 <free@plt>
   14978:	cmp	r4, r6
   1497c:	add	r5, r5, #8
   14980:	bne	1496c <triple_free@@Base+0x1490>
   14984:	ldr	r4, [pc, #92]	; 149e8 <triple_free@@Base+0x150c>
   14988:	ldr	r0, [r7, #4]
   1498c:	add	r4, pc, r4
   14990:	cmp	r0, r4
   14994:	beq	149ac <triple_free@@Base+0x14d0>
   14998:	bl	10ff0 <free@plt>
   1499c:	ldr	r3, [pc, #72]	; 149ec <triple_free@@Base+0x1510>
   149a0:	mov	r2, #256	; 0x100
   149a4:	add	r3, pc, r3
   149a8:	stmib	r3, {r2, r4}
   149ac:	ldr	r4, [pc, #60]	; 149f0 <triple_free@@Base+0x1514>
   149b0:	add	r4, pc, r4
   149b4:	add	r5, r4, #4
   149b8:	cmp	r7, r5
   149bc:	beq	149cc <triple_free@@Base+0x14f0>
   149c0:	mov	r0, r7
   149c4:	bl	10ff0 <free@plt>
   149c8:	str	r5, [r4]
   149cc:	ldr	r3, [pc, #32]	; 149f4 <triple_free@@Base+0x1518>
   149d0:	mov	r2, #1
   149d4:	add	r3, pc, r3
   149d8:	str	r2, [r3]
   149dc:	pop	{r3, r4, r5, r6, r7, pc}
   149e0:	strdeq	r3, [r1], -r4
   149e4:	andeq	r3, r1, ip, lsl r8
   149e8:	andeq	r3, r1, r0, lsl #16
   149ec:	andeq	r3, r1, ip, asr #15
   149f0:	andeq	r3, r1, r0, asr #15
   149f4:	andeq	r3, r1, r8, ror #14
   149f8:	ldr	r3, [pc, #12]	; 14a0c <triple_free@@Base+0x1530>
   149fc:	mvn	r2, #0
   14a00:	add	r3, pc, r3
   14a04:	add	r3, r3, #256	; 0x100
   14a08:	b	144b4 <triple_free@@Base+0xfd8>
   14a0c:	andeq	r3, r1, ip, lsl #15
   14a10:	ldr	r3, [pc, #8]	; 14a20 <triple_free@@Base+0x1544>
   14a14:	add	r3, pc, r3
   14a18:	add	r3, r3, #256	; 0x100
   14a1c:	b	144b4 <triple_free@@Base+0xfd8>
   14a20:	andeq	r3, r1, r8, ror r7
   14a24:	mov	r1, r0
   14a28:	mov	r0, #0
   14a2c:	b	149f8 <triple_free@@Base+0x151c>
   14a30:	mov	r2, r1
   14a34:	mov	r1, r0
   14a38:	mov	r0, #0
   14a3c:	b	14a10 <triple_free@@Base+0x1534>
   14a40:	ldr	r3, [pc, #92]	; 14aa4 <triple_free@@Base+0x15c8>
   14a44:	ldr	ip, [pc, #92]	; 14aa8 <triple_free@@Base+0x15cc>
   14a48:	add	r3, pc, r3
   14a4c:	push	{r4, r5, r6, r7, lr}
   14a50:	sub	sp, sp, #60	; 0x3c
   14a54:	ldr	r4, [r3, ip]
   14a58:	add	r5, sp, #4
   14a5c:	mov	r7, r2
   14a60:	mov	r6, r0
   14a64:	mov	r0, r5
   14a68:	ldr	r3, [r4]
   14a6c:	str	r3, [sp, #52]	; 0x34
   14a70:	bl	135d4 <triple_free@@Base+0xf8>
   14a74:	mov	r3, r5
   14a78:	mvn	r2, #0
   14a7c:	mov	r0, r6
   14a80:	mov	r1, r7
   14a84:	bl	144b4 <triple_free@@Base+0xfd8>
   14a88:	ldr	r2, [sp, #52]	; 0x34
   14a8c:	ldr	r3, [r4]
   14a90:	cmp	r2, r3
   14a94:	bne	14aa0 <triple_free@@Base+0x15c4>
   14a98:	add	sp, sp, #60	; 0x3c
   14a9c:	pop	{r4, r5, r6, r7, pc}
   14aa0:	bl	11038 <__stack_chk_fail@plt>
   14aa4:			; <UNDEFINED> instruction: 0x000135b0
   14aa8:	strdeq	r0, [r0], -r8
   14aac:	ldr	ip, [pc, #96]	; 14b14 <triple_free@@Base+0x1638>
   14ab0:	push	{r4, r5, r6, r7, r8, lr}
   14ab4:	add	ip, pc, ip
   14ab8:	ldr	lr, [pc, #88]	; 14b18 <triple_free@@Base+0x163c>
   14abc:	sub	sp, sp, #56	; 0x38
   14ac0:	mov	r8, r3
   14ac4:	add	r5, sp, #4
   14ac8:	mov	r7, r2
   14acc:	mov	r6, r0
   14ad0:	ldr	r4, [ip, lr]
   14ad4:	mov	r0, r5
   14ad8:	ldr	r3, [r4]
   14adc:	str	r3, [sp, #52]	; 0x34
   14ae0:	bl	135d4 <triple_free@@Base+0xf8>
   14ae4:	mov	r2, r8
   14ae8:	mov	r3, r5
   14aec:	mov	r0, r6
   14af0:	mov	r1, r7
   14af4:	bl	144b4 <triple_free@@Base+0xfd8>
   14af8:	ldr	r2, [sp, #52]	; 0x34
   14afc:	ldr	r3, [r4]
   14b00:	cmp	r2, r3
   14b04:	bne	14b10 <triple_free@@Base+0x1634>
   14b08:	add	sp, sp, #56	; 0x38
   14b0c:	pop	{r4, r5, r6, r7, r8, pc}
   14b10:	bl	11038 <__stack_chk_fail@plt>
   14b14:	andeq	r3, r1, r4, asr #10
   14b18:	strdeq	r0, [r0], -r8
   14b1c:	mov	r2, r1
   14b20:	mov	r1, r0
   14b24:	mov	r0, #0
   14b28:	b	14a40 <triple_free@@Base+0x1564>
   14b2c:	mov	ip, r1
   14b30:	mov	r3, r2
   14b34:	mov	r1, r0
   14b38:	mov	r2, ip
   14b3c:	mov	r0, #0
   14b40:	b	14aac <triple_free@@Base+0x15d0>
   14b44:	push	{r4, r5, r6, r7, r8, lr}
   14b48:	mov	r5, r2
   14b4c:	ldr	lr, [pc, #136]	; 14bdc <triple_free@@Base+0x1700>
   14b50:	mov	r7, r0
   14b54:	mov	r6, r1
   14b58:	ldr	r4, [pc, #128]	; 14be0 <triple_free@@Base+0x1704>
   14b5c:	add	lr, pc, lr
   14b60:	sub	sp, sp, #56	; 0x38
   14b64:	add	lr, lr, #256	; 0x100
   14b68:	ldr	r8, [pc, #116]	; 14be4 <triple_free@@Base+0x1708>
   14b6c:	add	r4, pc, r4
   14b70:	add	ip, sp, #4
   14b74:	ldm	lr!, {r0, r1, r2, r3}
   14b78:	ldr	r4, [r4, r8]
   14b7c:	stmia	ip!, {r0, r1, r2, r3}
   14b80:	ldm	lr!, {r0, r1, r2, r3}
   14b84:	ldr	r8, [r4]
   14b88:	stmia	ip!, {r0, r1, r2, r3}
   14b8c:	ldm	lr, {r0, r1, r2, r3}
   14b90:	str	r8, [sp, #52]	; 0x34
   14b94:	stm	ip, {r0, r1, r2, r3}
   14b98:	mov	r1, r5
   14b9c:	add	r5, sp, #4
   14ba0:	mov	r2, #1
   14ba4:	mov	r0, r5
   14ba8:	bl	14710 <triple_free@@Base+0x1234>
   14bac:	mov	r2, r6
   14bb0:	mov	r3, r5
   14bb4:	mov	r1, r7
   14bb8:	mov	r0, #0
   14bbc:	bl	144b4 <triple_free@@Base+0xfd8>
   14bc0:	ldr	r2, [sp, #52]	; 0x34
   14bc4:	ldr	r3, [r4]
   14bc8:	cmp	r2, r3
   14bcc:	bne	14bd8 <triple_free@@Base+0x16fc>
   14bd0:	add	sp, sp, #56	; 0x38
   14bd4:	pop	{r4, r5, r6, r7, r8, pc}
   14bd8:	bl	11038 <__stack_chk_fail@plt>
   14bdc:	andeq	r3, r1, r0, lsr r6
   14be0:	andeq	r3, r1, ip, lsl #9
   14be4:	strdeq	r0, [r0], -r8
   14be8:	mov	r2, r1
   14bec:	mvn	r1, #0
   14bf0:	b	14b44 <triple_free@@Base+0x1668>
   14bf4:	mov	r1, #58	; 0x3a
   14bf8:	b	14be8 <triple_free@@Base+0x170c>
   14bfc:	mov	r2, #58	; 0x3a
   14c00:	b	14b44 <triple_free@@Base+0x1668>
   14c04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14c08:	mov	r5, r2
   14c0c:	ldr	lr, [pc, #144]	; 14ca4 <triple_free@@Base+0x17c8>
   14c10:	mov	r8, r0
   14c14:	mov	r9, r1
   14c18:	mov	r7, r3
   14c1c:	add	lr, pc, lr
   14c20:	ldr	r4, [pc, #128]	; 14ca8 <triple_free@@Base+0x17cc>
   14c24:	add	lr, lr, #256	; 0x100
   14c28:	sub	sp, sp, #56	; 0x38
   14c2c:	ldr	sl, [pc, #120]	; 14cac <triple_free@@Base+0x17d0>
   14c30:	add	r4, pc, r4
   14c34:	ldm	lr!, {r0, r1, r2, r3}
   14c38:	add	ip, sp, #4
   14c3c:	ldr	r4, [r4, sl]
   14c40:	ldr	r6, [sp, #88]	; 0x58
   14c44:	stmia	ip!, {r0, r1, r2, r3}
   14c48:	ldm	lr!, {r0, r1, r2, r3}
   14c4c:	ldr	sl, [r4]
   14c50:	stmia	ip!, {r0, r1, r2, r3}
   14c54:	ldm	lr, {r0, r1, r2, r3}
   14c58:	str	sl, [sp, #52]	; 0x34
   14c5c:	stm	ip, {r0, r1, r2, r3}
   14c60:	mov	r2, r5
   14c64:	add	r5, sp, #4
   14c68:	mov	r1, r9
   14c6c:	mov	r0, r5
   14c70:	bl	14784 <triple_free@@Base+0x12a8>
   14c74:	mov	r2, r6
   14c78:	mov	r3, r5
   14c7c:	mov	r0, r8
   14c80:	mov	r1, r7
   14c84:	bl	144b4 <triple_free@@Base+0xfd8>
   14c88:	ldr	r2, [sp, #52]	; 0x34
   14c8c:	ldr	r3, [r4]
   14c90:	cmp	r2, r3
   14c94:	bne	14ca0 <triple_free@@Base+0x17c4>
   14c98:	add	sp, sp, #56	; 0x38
   14c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ca0:	bl	11038 <__stack_chk_fail@plt>
   14ca4:	andeq	r3, r1, r0, ror r5
   14ca8:	andeq	r3, r1, r8, asr #7
   14cac:	strdeq	r0, [r0], -r8
   14cb0:	push	{lr}		; (str lr, [sp, #-4]!)
   14cb4:	sub	sp, sp, #12
   14cb8:	mvn	ip, #0
   14cbc:	str	ip, [sp]
   14cc0:	bl	14c04 <triple_free@@Base+0x1728>
   14cc4:	add	sp, sp, #12
   14cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   14ccc:	mov	ip, r1
   14cd0:	mov	r3, r2
   14cd4:	mov	r1, r0
   14cd8:	mov	r2, ip
   14cdc:	mov	r0, #0
   14ce0:	b	14cb0 <triple_free@@Base+0x17d4>
   14ce4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ce8:	sub	sp, sp, #12
   14cec:	mov	lr, r1
   14cf0:	mov	ip, r2
   14cf4:	mov	r1, r0
   14cf8:	str	r3, [sp]
   14cfc:	mov	r2, lr
   14d00:	mov	r3, ip
   14d04:	mov	r0, #0
   14d08:	bl	14c04 <triple_free@@Base+0x1728>
   14d0c:	add	sp, sp, #12
   14d10:	pop	{pc}		; (ldr pc, [sp], #4)
   14d14:	ldr	r3, [pc, #12]	; 14d28 <triple_free@@Base+0x184c>
   14d18:	ldr	ip, [pc, #12]	; 14d2c <triple_free@@Base+0x1850>
   14d1c:	add	r3, pc, r3
   14d20:	ldr	r3, [r3, ip]
   14d24:	b	144b4 <triple_free@@Base+0xfd8>
   14d28:	ldrdeq	r3, [r1], -ip
   14d2c:	strdeq	r0, [r0], -r4
   14d30:	mov	r2, r1
   14d34:	mov	r1, r0
   14d38:	mov	r0, #0
   14d3c:	b	14d14 <triple_free@@Base+0x1838>
   14d40:	mvn	r2, #0
   14d44:	b	14d14 <triple_free@@Base+0x1838>
   14d48:	mov	r1, r0
   14d4c:	mov	r0, #0
   14d50:	b	14d40 <triple_free@@Base+0x1864>
   14d54:	ldr	r3, [pc, #344]	; 14eb4 <triple_free@@Base+0x19d8>
   14d58:	ldr	r2, [pc, #344]	; 14eb8 <triple_free@@Base+0x19dc>
   14d5c:	add	r3, pc, r3
   14d60:	push	{r4, r5, r6, r7, r8, r9, lr}
   14d64:	sub	sp, sp, #220	; 0xdc
   14d68:	ldr	r7, [r3, r2]
   14d6c:	mov	r9, r1
   14d70:	mov	r8, r0
   14d74:	ldr	r3, [r7]
   14d78:	str	r3, [sp, #212]	; 0xd4
   14d7c:	bl	12198 <close_stdout@@Base+0x118>
   14d80:	mov	r5, r0
   14d84:	mov	r0, r9
   14d88:	bl	12198 <close_stdout@@Base+0x118>
   14d8c:	mov	r4, r0
   14d90:	mov	r0, r5
   14d94:	bl	121f4 <close_stdout@@Base+0x174>
   14d98:	mov	r6, r0
   14d9c:	mov	r0, r4
   14da0:	bl	121f4 <close_stdout@@Base+0x174>
   14da4:	cmp	r6, r0
   14da8:	beq	14dcc <triple_free@@Base+0x18f0>
   14dac:	mov	r4, #0
   14db0:	ldr	r2, [sp, #212]	; 0xd4
   14db4:	mov	r0, r4
   14db8:	ldr	r3, [r7]
   14dbc:	cmp	r2, r3
   14dc0:	bne	14eb0 <triple_free@@Base+0x19d4>
   14dc4:	add	sp, sp, #220	; 0xdc
   14dc8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14dcc:	mov	r0, r5
   14dd0:	mov	r1, r4
   14dd4:	mov	r2, r6
   14dd8:	bl	11020 <memcmp@plt>
   14ddc:	cmp	r0, #0
   14de0:	bne	14dac <triple_free@@Base+0x18d0>
   14de4:	mov	r0, r8
   14de8:	bl	15784 <triple_free@@Base+0x22a8>
   14dec:	mov	r8, r0
   14df0:	mov	r0, r9
   14df4:	bl	15784 <triple_free@@Base+0x22a8>
   14df8:	mov	r1, r8
   14dfc:	mov	r2, sp
   14e00:	mov	r6, r0
   14e04:	mov	r0, #3
   14e08:	bl	11218 <__xstat64@plt>
   14e0c:	cmp	r0, #0
   14e10:	beq	14e30 <triple_free@@Base+0x1954>
   14e14:	bl	11164 <__errno_location@plt>
   14e18:	ldr	r2, [pc, #156]	; 14ebc <triple_free@@Base+0x19e0>
   14e1c:	mov	r3, r8
   14e20:	add	r2, pc, r2
   14e24:	ldr	r1, [r0]
   14e28:	mov	r0, #1
   14e2c:	bl	110c8 <error@plt>
   14e30:	mov	r0, #3
   14e34:	mov	r1, r6
   14e38:	add	r2, sp, #104	; 0x68
   14e3c:	bl	11218 <__xstat64@plt>
   14e40:	cmp	r0, #0
   14e44:	bne	14e74 <triple_free@@Base+0x1998>
   14e48:	ldrd	r4, [sp, #96]	; 0x60
   14e4c:	ldrd	r2, [sp, #200]	; 0xc8
   14e50:	cmp	r5, r3
   14e54:	cmpeq	r4, r2
   14e58:	movne	r4, #0
   14e5c:	beq	14e94 <triple_free@@Base+0x19b8>
   14e60:	mov	r0, r8
   14e64:	bl	10ff0 <free@plt>
   14e68:	mov	r0, r6
   14e6c:	bl	10ff0 <free@plt>
   14e70:	b	14db0 <triple_free@@Base+0x18d4>
   14e74:	bl	11164 <__errno_location@plt>
   14e78:	ldr	r2, [pc, #64]	; 14ec0 <triple_free@@Base+0x19e4>
   14e7c:	mov	r3, r6
   14e80:	add	r2, pc, r2
   14e84:	ldr	r1, [r0]
   14e88:	mov	r0, #1
   14e8c:	bl	110c8 <error@plt>
   14e90:	b	14e48 <triple_free@@Base+0x196c>
   14e94:	ldrd	r0, [sp]
   14e98:	ldrd	r2, [sp, #104]	; 0x68
   14e9c:	cmp	r1, r3
   14ea0:	cmpeq	r0, r2
   14ea4:	movne	r4, #0
   14ea8:	moveq	r4, #1
   14eac:	b	14e60 <triple_free@@Base+0x1984>
   14eb0:	bl	11038 <__stack_chk_fail@plt>
   14eb4:	muleq	r1, ip, r2
   14eb8:	strdeq	r0, [r0], -r8
   14ebc:	andeq	r2, r0, ip, ror #5
   14ec0:	andeq	r2, r0, ip, lsl #5
   14ec4:	push	{r4, r5, r6, r7, lr}
   14ec8:	cmp	r1, #0
   14ecc:	sub	sp, sp, #36	; 0x24
   14ed0:	ldr	r7, [pc, #896]	; 15258 <triple_free@@Base+0x1d7c>
   14ed4:	mov	ip, r3
   14ed8:	mov	r5, r0
   14edc:	add	r7, pc, r7
   14ee0:	ldr	r4, [sp, #56]	; 0x38
   14ee4:	ldr	r6, [sp, #60]	; 0x3c
   14ee8:	beq	1522c <triple_free@@Base+0x1d50>
   14eec:	str	r2, [sp]
   14ef0:	mov	r3, r1
   14ef4:	ldr	r2, [pc, #864]	; 1525c <triple_free@@Base+0x1d80>
   14ef8:	mov	r1, #1
   14efc:	str	ip, [sp, #4]
   14f00:	add	r2, pc, r2
   14f04:	bl	111ac <__fprintf_chk@plt>
   14f08:	ldr	r1, [pc, #848]	; 15260 <triple_free@@Base+0x1d84>
   14f0c:	mov	r2, #5
   14f10:	mov	r0, #0
   14f14:	add	r1, pc, r1
   14f18:	bl	1102c <dcgettext@plt>
   14f1c:	ldr	r2, [pc, #832]	; 15264 <triple_free@@Base+0x1d88>
   14f20:	movw	ip, #2013	; 0x7dd
   14f24:	mov	r1, #1
   14f28:	ldr	r2, [r7, r2]
   14f2c:	str	ip, [sp]
   14f30:	mov	r3, r0
   14f34:	mov	r0, r5
   14f38:	bl	111ac <__fprintf_chk@plt>
   14f3c:	ldr	r1, [pc, #804]	; 15268 <triple_free@@Base+0x1d8c>
   14f40:	mov	r0, #0
   14f44:	mov	r2, #5
   14f48:	add	r1, pc, r1
   14f4c:	bl	1102c <dcgettext@plt>
   14f50:	mov	r1, r5
   14f54:	bl	10fb4 <fputs_unlocked@plt>
   14f58:	cmp	r6, #9
   14f5c:	addls	pc, pc, r6, lsl #2
   14f60:	b	15248 <triple_free@@Base+0x1d6c>
   14f64:	b	14ff8 <triple_free@@Base+0x1b1c>
   14f68:	b	14ffc <triple_free@@Base+0x1b20>
   14f6c:	b	1502c <triple_free@@Base+0x1b50>
   14f70:	b	15060 <triple_free@@Base+0x1b84>
   14f74:	b	1509c <triple_free@@Base+0x1bc0>
   14f78:	b	150dc <triple_free@@Base+0x1c00>
   14f7c:	b	15124 <triple_free@@Base+0x1c48>
   14f80:	b	15174 <triple_free@@Base+0x1c98>
   14f84:	b	151cc <triple_free@@Base+0x1cf0>
   14f88:	b	14f8c <triple_free@@Base+0x1ab0>
   14f8c:	ldr	r1, [pc, #728]	; 1526c <triple_free@@Base+0x1d90>
   14f90:	mov	r0, #0
   14f94:	add	r1, pc, r1
   14f98:	mov	r2, #5
   14f9c:	bl	1102c <dcgettext@plt>
   14fa0:	ldm	r4, {r3, ip}
   14fa4:	mov	r1, #1
   14fa8:	str	ip, [sp]
   14fac:	ldr	ip, [r4, #8]
   14fb0:	str	ip, [sp, #4]
   14fb4:	ldr	ip, [r4, #12]
   14fb8:	str	ip, [sp, #8]
   14fbc:	ldr	ip, [r4, #16]
   14fc0:	str	ip, [sp, #12]
   14fc4:	ldr	ip, [r4, #20]
   14fc8:	str	ip, [sp, #16]
   14fcc:	ldr	ip, [r4, #24]
   14fd0:	str	ip, [sp, #20]
   14fd4:	ldr	ip, [r4, #28]
   14fd8:	str	ip, [sp, #24]
   14fdc:	ldr	ip, [r4, #32]
   14fe0:	str	ip, [sp, #28]
   14fe4:	mov	r2, r0
   14fe8:	mov	r0, r5
   14fec:	bl	111ac <__fprintf_chk@plt>
   14ff0:	add	sp, sp, #36	; 0x24
   14ff4:	pop	{r4, r5, r6, r7, pc}
   14ff8:	bl	11230 <abort@plt>
   14ffc:	ldr	r1, [pc, #620]	; 15270 <triple_free@@Base+0x1d94>
   15000:	mov	r2, #5
   15004:	mov	r0, #0
   15008:	add	r1, pc, r1
   1500c:	bl	1102c <dcgettext@plt>
   15010:	ldr	r3, [r4]
   15014:	mov	r1, #1
   15018:	mov	r2, r0
   1501c:	mov	r0, r5
   15020:	add	sp, sp, #36	; 0x24
   15024:	pop	{r4, r5, r6, r7, lr}
   15028:	b	111ac <__fprintf_chk@plt>
   1502c:	ldr	r1, [pc, #576]	; 15274 <triple_free@@Base+0x1d98>
   15030:	mov	r2, #5
   15034:	mov	r0, #0
   15038:	add	r1, pc, r1
   1503c:	bl	1102c <dcgettext@plt>
   15040:	ldm	r4, {r3, ip}
   15044:	mov	r1, #1
   15048:	str	ip, [sp, #56]	; 0x38
   1504c:	mov	r2, r0
   15050:	mov	r0, r5
   15054:	add	sp, sp, #36	; 0x24
   15058:	pop	{r4, r5, r6, r7, lr}
   1505c:	b	111ac <__fprintf_chk@plt>
   15060:	ldr	r1, [pc, #528]	; 15278 <triple_free@@Base+0x1d9c>
   15064:	mov	r2, #5
   15068:	mov	r0, #0
   1506c:	add	r1, pc, r1
   15070:	bl	1102c <dcgettext@plt>
   15074:	ldm	r4, {r3, ip}
   15078:	mov	r1, #1
   1507c:	str	ip, [sp, #56]	; 0x38
   15080:	ldr	ip, [r4, #8]
   15084:	str	ip, [sp, #60]	; 0x3c
   15088:	mov	r2, r0
   1508c:	mov	r0, r5
   15090:	add	sp, sp, #36	; 0x24
   15094:	pop	{r4, r5, r6, r7, lr}
   15098:	b	111ac <__fprintf_chk@plt>
   1509c:	ldr	r1, [pc, #472]	; 1527c <triple_free@@Base+0x1da0>
   150a0:	mov	r2, #5
   150a4:	mov	r0, #0
   150a8:	add	r1, pc, r1
   150ac:	bl	1102c <dcgettext@plt>
   150b0:	ldm	r4, {r3, ip}
   150b4:	mov	r1, #1
   150b8:	str	ip, [sp]
   150bc:	ldr	ip, [r4, #8]
   150c0:	str	ip, [sp, #4]
   150c4:	ldr	ip, [r4, #12]
   150c8:	str	ip, [sp, #8]
   150cc:	mov	r2, r0
   150d0:	mov	r0, r5
   150d4:	bl	111ac <__fprintf_chk@plt>
   150d8:	b	14ff0 <triple_free@@Base+0x1b14>
   150dc:	ldr	r1, [pc, #412]	; 15280 <triple_free@@Base+0x1da4>
   150e0:	mov	r2, #5
   150e4:	mov	r0, #0
   150e8:	add	r1, pc, r1
   150ec:	bl	1102c <dcgettext@plt>
   150f0:	ldm	r4, {r3, ip}
   150f4:	mov	r1, #1
   150f8:	str	ip, [sp]
   150fc:	ldr	ip, [r4, #8]
   15100:	str	ip, [sp, #4]
   15104:	ldr	ip, [r4, #12]
   15108:	str	ip, [sp, #8]
   1510c:	ldr	ip, [r4, #16]
   15110:	str	ip, [sp, #12]
   15114:	mov	r2, r0
   15118:	mov	r0, r5
   1511c:	bl	111ac <__fprintf_chk@plt>
   15120:	b	14ff0 <triple_free@@Base+0x1b14>
   15124:	ldr	r1, [pc, #344]	; 15284 <triple_free@@Base+0x1da8>
   15128:	mov	r2, #5
   1512c:	mov	r0, #0
   15130:	add	r1, pc, r1
   15134:	bl	1102c <dcgettext@plt>
   15138:	ldm	r4, {r3, ip}
   1513c:	mov	r1, #1
   15140:	str	ip, [sp]
   15144:	ldr	ip, [r4, #8]
   15148:	str	ip, [sp, #4]
   1514c:	ldr	ip, [r4, #12]
   15150:	str	ip, [sp, #8]
   15154:	ldr	ip, [r4, #16]
   15158:	str	ip, [sp, #12]
   1515c:	ldr	ip, [r4, #20]
   15160:	str	ip, [sp, #16]
   15164:	mov	r2, r0
   15168:	mov	r0, r5
   1516c:	bl	111ac <__fprintf_chk@plt>
   15170:	b	14ff0 <triple_free@@Base+0x1b14>
   15174:	ldr	r1, [pc, #268]	; 15288 <triple_free@@Base+0x1dac>
   15178:	mov	r2, #5
   1517c:	mov	r0, #0
   15180:	add	r1, pc, r1
   15184:	bl	1102c <dcgettext@plt>
   15188:	ldm	r4, {r3, ip}
   1518c:	mov	r1, #1
   15190:	str	ip, [sp]
   15194:	ldr	ip, [r4, #8]
   15198:	str	ip, [sp, #4]
   1519c:	ldr	ip, [r4, #12]
   151a0:	str	ip, [sp, #8]
   151a4:	ldr	ip, [r4, #16]
   151a8:	str	ip, [sp, #12]
   151ac:	ldr	ip, [r4, #20]
   151b0:	str	ip, [sp, #16]
   151b4:	ldr	ip, [r4, #24]
   151b8:	str	ip, [sp, #20]
   151bc:	mov	r2, r0
   151c0:	mov	r0, r5
   151c4:	bl	111ac <__fprintf_chk@plt>
   151c8:	b	14ff0 <triple_free@@Base+0x1b14>
   151cc:	ldr	r1, [pc, #184]	; 1528c <triple_free@@Base+0x1db0>
   151d0:	mov	r2, #5
   151d4:	mov	r0, #0
   151d8:	add	r1, pc, r1
   151dc:	bl	1102c <dcgettext@plt>
   151e0:	ldm	r4, {r3, ip}
   151e4:	mov	r1, #1
   151e8:	str	ip, [sp]
   151ec:	ldr	ip, [r4, #8]
   151f0:	str	ip, [sp, #4]
   151f4:	ldr	ip, [r4, #12]
   151f8:	str	ip, [sp, #8]
   151fc:	ldr	ip, [r4, #16]
   15200:	str	ip, [sp, #12]
   15204:	ldr	ip, [r4, #20]
   15208:	str	ip, [sp, #16]
   1520c:	ldr	ip, [r4, #24]
   15210:	str	ip, [sp, #20]
   15214:	ldr	ip, [r4, #28]
   15218:	str	ip, [sp, #24]
   1521c:	mov	r2, r0
   15220:	mov	r0, r5
   15224:	bl	111ac <__fprintf_chk@plt>
   15228:	b	14ff0 <triple_free@@Base+0x1b14>
   1522c:	str	r3, [sp]
   15230:	mov	r3, r2
   15234:	ldr	r2, [pc, #84]	; 15290 <triple_free@@Base+0x1db4>
   15238:	mov	r1, #1
   1523c:	add	r2, pc, r2
   15240:	bl	111ac <__fprintf_chk@plt>
   15244:	b	14f08 <triple_free@@Base+0x1a2c>
   15248:	ldr	r1, [pc, #68]	; 15294 <triple_free@@Base+0x1db8>
   1524c:	mov	r0, #0
   15250:	add	r1, pc, r1
   15254:	b	14f98 <triple_free@@Base+0x1abc>
   15258:	andeq	r3, r1, ip, lsl r1
   1525c:	andeq	r2, r0, r4, asr r3
   15260:	andeq	r2, r0, r4, asr r3
   15264:	andeq	r0, r0, r0, lsr r1
   15268:	andeq	r2, r0, r4, lsr #6
   1526c:			; <UNDEFINED> instruction: 0x000024b0
   15270:	andeq	r2, r0, r0, lsr r3
   15274:	andeq	r2, r0, r0, lsl r3
   15278:	strdeq	r2, [r0], -r4
   1527c:	ldrdeq	r2, [r0], -r4
   15280:			; <UNDEFINED> instruction: 0x000022b4
   15284:	muleq	r0, r0, r2
   15288:	andeq	r2, r0, r8, ror #4
   1528c:	andeq	r2, r0, ip, lsr r2
   15290:	andeq	r2, r0, r4, lsr #32
   15294:	andeq	r2, r0, r8, lsr #4
   15298:	push	{r4, r5, lr}
   1529c:	sub	sp, sp, #12
   152a0:	ldr	r5, [sp, #24]
   152a4:	ldr	ip, [r5]
   152a8:	cmp	ip, #0
   152ac:	beq	152c8 <triple_free@@Base+0x1dec>
   152b0:	mov	lr, r5
   152b4:	mov	ip, #0
   152b8:	ldr	r4, [lr, #4]!
   152bc:	add	ip, ip, #1
   152c0:	cmp	r4, #0
   152c4:	bne	152b8 <triple_free@@Base+0x1ddc>
   152c8:	stm	sp, {r5, ip}
   152cc:	bl	14ec4 <triple_free@@Base+0x19e8>
   152d0:	add	sp, sp, #12
   152d4:	pop	{r4, r5, pc}
   152d8:	push	{r4, r5, r6, r7, lr}
   152dc:	sub	sp, sp, #60	; 0x3c
   152e0:	ldr	r4, [pc, #100]	; 1534c <triple_free@@Base+0x1e70>
   152e4:	mov	ip, #0
   152e8:	ldr	r5, [pc, #96]	; 15350 <triple_free@@Base+0x1e74>
   152ec:	mov	lr, ip
   152f0:	add	r4, pc, r4
   152f4:	ldr	r6, [sp, #80]	; 0x50
   152f8:	ldr	r7, [r4, r5]
   152fc:	add	r5, sp, #12
   15300:	ldr	r4, [r7]
   15304:	str	r4, [sp, #52]	; 0x34
   15308:	ldr	r4, [r6, ip]
   1530c:	cmp	r4, #0
   15310:	str	r4, [r5, ip]
   15314:	beq	15328 <triple_free@@Base+0x1e4c>
   15318:	add	lr, lr, #1
   1531c:	add	ip, ip, #4
   15320:	cmp	lr, #10
   15324:	bne	15308 <triple_free@@Base+0x1e2c>
   15328:	stm	sp, {r5, lr}
   1532c:	bl	14ec4 <triple_free@@Base+0x19e8>
   15330:	ldr	r2, [sp, #52]	; 0x34
   15334:	ldr	r3, [r7]
   15338:	cmp	r2, r3
   1533c:	bne	15348 <triple_free@@Base+0x1e6c>
   15340:	add	sp, sp, #60	; 0x3c
   15344:	pop	{r4, r5, r6, r7, pc}
   15348:	bl	11038 <__stack_chk_fail@plt>
   1534c:	andeq	r2, r1, r8, lsl #26
   15350:	strdeq	r0, [r0], -r8
   15354:	push	{r3}		; (str r3, [sp, #-4]!)
   15358:	push	{r4, lr}
   1535c:	sub	sp, sp, #20
   15360:	ldr	lr, [pc, #72]	; 153b0 <triple_free@@Base+0x1ed4>
   15364:	add	ip, sp, #32
   15368:	ldr	r4, [pc, #68]	; 153b4 <triple_free@@Base+0x1ed8>
   1536c:	add	lr, pc, lr
   15370:	ldr	r3, [sp, #28]
   15374:	ldr	r4, [lr, r4]
   15378:	str	ip, [sp]
   1537c:	str	ip, [sp, #8]
   15380:	ldr	ip, [r4]
   15384:	str	ip, [sp, #12]
   15388:	bl	152d8 <triple_free@@Base+0x1dfc>
   1538c:	ldr	r2, [sp, #12]
   15390:	ldr	r3, [r4]
   15394:	cmp	r2, r3
   15398:	bne	153ac <triple_free@@Base+0x1ed0>
   1539c:	add	sp, sp, #20
   153a0:	pop	{r4, lr}
   153a4:	add	sp, sp, #4
   153a8:	bx	lr
   153ac:	bl	11038 <__stack_chk_fail@plt>
   153b0:	andeq	r2, r1, ip, lsl #25
   153b4:	strdeq	r0, [r0], -r8
   153b8:	ldr	r1, [pc, #132]	; 15444 <triple_free@@Base+0x1f68>
   153bc:	mov	r2, #5
   153c0:	push	{r4, lr}
   153c4:	add	r1, pc, r1
   153c8:	mov	r0, #0
   153cc:	ldr	r4, [pc, #116]	; 15448 <triple_free@@Base+0x1f6c>
   153d0:	bl	1102c <dcgettext@plt>
   153d4:	ldr	r2, [pc, #112]	; 1544c <triple_free@@Base+0x1f70>
   153d8:	add	r4, pc, r4
   153dc:	add	r2, pc, r2
   153e0:	mov	r1, r0
   153e4:	mov	r0, #1
   153e8:	bl	11194 <__printf_chk@plt>
   153ec:	ldr	r1, [pc, #92]	; 15450 <triple_free@@Base+0x1f74>
   153f0:	mov	r2, #5
   153f4:	mov	r0, #0
   153f8:	add	r1, pc, r1
   153fc:	bl	1102c <dcgettext@plt>
   15400:	ldr	r2, [pc, #76]	; 15454 <triple_free@@Base+0x1f78>
   15404:	ldr	r3, [pc, #76]	; 15458 <triple_free@@Base+0x1f7c>
   15408:	add	r2, pc, r2
   1540c:	add	r3, pc, r3
   15410:	mov	r1, r0
   15414:	mov	r0, #1
   15418:	bl	11194 <__printf_chk@plt>
   1541c:	ldr	r1, [pc, #56]	; 1545c <triple_free@@Base+0x1f80>
   15420:	mov	r0, #0
   15424:	mov	r2, #5
   15428:	add	r1, pc, r1
   1542c:	bl	1102c <dcgettext@plt>
   15430:	ldr	r3, [pc, #40]	; 15460 <triple_free@@Base+0x1f84>
   15434:	ldr	r3, [r4, r3]
   15438:	pop	{r4, lr}
   1543c:	ldr	r1, [r3]
   15440:	b	10fb4 <fputs_unlocked@plt>
   15444:	strdeq	r2, [r0], -r0
   15448:	andeq	r2, r1, r0, lsr #24
   1544c:	strdeq	r2, [r0], -r0
   15450:	andeq	r2, r0, ip, ror #1
   15454:	andeq	r1, r0, ip, lsr #22
   15458:	andeq	r1, r0, r8, lsr fp
   1545c:	ldrdeq	r2, [r0], -r0
   15460:	andeq	r0, r0, r0, lsr #2
   15464:	push	{r4, lr}
   15468:	mov	r4, r0
   1546c:	bl	110ec <malloc@plt>
   15470:	rsbs	r3, r0, #1
   15474:	movcc	r3, #0
   15478:	cmp	r4, #0
   1547c:	moveq	r3, #0
   15480:	cmp	r3, #0
   15484:	popeq	{r4, pc}
   15488:	bl	15678 <triple_free@@Base+0x219c>
   1548c:	push	{r3, r4, r5, lr}
   15490:	mov	r4, r0
   15494:	mvn	r0, #0
   15498:	mov	r5, r1
   1549c:	bl	15e58 <triple_free@@Base+0x297c>
   154a0:	cmp	r0, r4
   154a4:	bcc	154b4 <triple_free@@Base+0x1fd8>
   154a8:	mul	r0, r4, r5
   154ac:	pop	{r3, r4, r5, lr}
   154b0:	b	15464 <triple_free@@Base+0x1f88>
   154b4:	bl	15678 <triple_free@@Base+0x219c>
   154b8:	b	15464 <triple_free@@Base+0x1f88>
   154bc:	rsbs	r3, r1, #1
   154c0:	push	{r4, lr}
   154c4:	movcc	r3, #0
   154c8:	cmp	r0, #0
   154cc:	mov	r4, r1
   154d0:	moveq	r3, #0
   154d4:	cmp	r3, #0
   154d8:	bne	154fc <triple_free@@Base+0x2020>
   154dc:	bl	11044 <realloc@plt>
   154e0:	rsbs	r3, r0, #1
   154e4:	movcc	r3, #0
   154e8:	cmp	r4, #0
   154ec:	moveq	r3, #0
   154f0:	cmp	r3, #0
   154f4:	popeq	{r4, pc}
   154f8:	bl	15678 <triple_free@@Base+0x219c>
   154fc:	bl	10ff0 <free@plt>
   15500:	mov	r0, #0
   15504:	pop	{r4, pc}
   15508:	push	{r4, r5, r6, lr}
   1550c:	mov	r5, r1
   15510:	mov	r6, r0
   15514:	mov	r1, r2
   15518:	mvn	r0, #0
   1551c:	mov	r4, r2
   15520:	bl	15e58 <triple_free@@Base+0x297c>
   15524:	cmp	r0, r5
   15528:	bcc	1553c <triple_free@@Base+0x2060>
   1552c:	mov	r0, r6
   15530:	mul	r1, r5, r4
   15534:	pop	{r4, r5, r6, lr}
   15538:	b	154bc <triple_free@@Base+0x1fe0>
   1553c:	bl	15678 <triple_free@@Base+0x219c>
   15540:	push	{r3, r4, r5, r6, r7, lr}
   15544:	subs	r7, r0, #0
   15548:	mov	r5, r1
   1554c:	mov	r6, r2
   15550:	ldr	r4, [r1]
   15554:	beq	1558c <triple_free@@Base+0x20b0>
   15558:	movw	r0, #43690	; 0xaaaa
   1555c:	mov	r1, r2
   15560:	bfi	r0, r0, #16, #16
   15564:	bl	15e58 <triple_free@@Base+0x297c>
   15568:	cmp	r4, r0
   1556c:	addcc	r3, r4, #1
   15570:	addcc	r4, r4, r3, lsr #1
   15574:	bcs	155b0 <triple_free@@Base+0x20d4>
   15578:	str	r4, [r5]
   1557c:	mov	r0, r7
   15580:	mul	r1, r6, r4
   15584:	pop	{r3, r4, r5, r6, r7, lr}
   15588:	b	154bc <triple_free@@Base+0x1fe0>
   1558c:	cmp	r4, #0
   15590:	bne	15578 <triple_free@@Base+0x209c>
   15594:	mov	r0, #64	; 0x40
   15598:	mov	r1, r2
   1559c:	bl	15e58 <triple_free@@Base+0x297c>
   155a0:	cmp	r0, #0
   155a4:	movne	r4, r0
   155a8:	addeq	r4, r0, #1
   155ac:	b	15578 <triple_free@@Base+0x209c>
   155b0:	bl	15678 <triple_free@@Base+0x219c>
   155b4:	cmp	r0, #0
   155b8:	push	{r3, lr}
   155bc:	ldr	r3, [r1]
   155c0:	beq	155ec <triple_free@@Base+0x2110>
   155c4:	movw	r2, #43689	; 0xaaa9
   155c8:	movt	r2, #43690	; 0xaaaa
   155cc:	cmp	r3, r2
   155d0:	addls	r2, r3, #1
   155d4:	addls	r3, r3, r2, lsr #1
   155d8:	bhi	15604 <triple_free@@Base+0x2128>
   155dc:	str	r3, [r1]
   155e0:	mov	r1, r3
   155e4:	pop	{r3, lr}
   155e8:	b	154bc <triple_free@@Base+0x1fe0>
   155ec:	cmp	r3, #0
   155f0:	moveq	r3, #64	; 0x40
   155f4:	str	r3, [r1]
   155f8:	mov	r1, r3
   155fc:	pop	{r3, lr}
   15600:	b	154bc <triple_free@@Base+0x1fe0>
   15604:	bl	15678 <triple_free@@Base+0x219c>
   15608:	push	{r4, lr}
   1560c:	mov	r4, r0
   15610:	bl	15464 <triple_free@@Base+0x1f88>
   15614:	mov	r2, r4
   15618:	mov	r1, #0
   1561c:	pop	{r4, lr}
   15620:	b	1117c <memset@plt>
   15624:	push	{r3, lr}
   15628:	bl	10fa8 <calloc@plt>
   1562c:	cmp	r0, #0
   15630:	popne	{r3, pc}
   15634:	bl	15678 <triple_free@@Base+0x219c>
   15638:	push	{r3, r4, r5, lr}
   1563c:	mov	r4, r1
   15640:	mov	r5, r0
   15644:	mov	r0, r1
   15648:	bl	15464 <triple_free@@Base+0x1f88>
   1564c:	mov	r1, r5
   15650:	mov	r2, r4
   15654:	pop	{r3, r4, r5, lr}
   15658:	b	11008 <memcpy@plt>
   1565c:	push	{r4, lr}
   15660:	mov	r4, r0
   15664:	bl	1114c <strlen@plt>
   15668:	add	r1, r0, #1
   1566c:	mov	r0, r4
   15670:	pop	{r4, lr}
   15674:	b	15638 <triple_free@@Base+0x215c>
   15678:	ldr	r3, [pc, #64]	; 156c0 <triple_free@@Base+0x21e4>
   1567c:	mov	r2, #5
   15680:	ldr	ip, [pc, #60]	; 156c4 <triple_free@@Base+0x21e8>
   15684:	mov	r0, #0
   15688:	add	r3, pc, r3
   1568c:	ldr	r1, [pc, #52]	; 156c8 <triple_free@@Base+0x21ec>
   15690:	push	{r4, lr}
   15694:	add	r1, pc, r1
   15698:	ldr	r3, [r3, ip]
   1569c:	ldr	r4, [r3]
   156a0:	bl	1102c <dcgettext@plt>
   156a4:	ldr	r2, [pc, #32]	; 156cc <triple_free@@Base+0x21f0>
   156a8:	mov	r1, #0
   156ac:	add	r2, pc, r2
   156b0:	mov	r3, r0
   156b4:	mov	r0, r4
   156b8:	bl	110c8 <error@plt>
   156bc:	bl	11230 <abort@plt>
   156c0:	andeq	r2, r1, r0, ror r9
   156c4:	andeq	r0, r0, r4, lsr #2
   156c8:	ldrdeq	r1, [r0], -r4
   156cc:	andeq	r1, r0, r0, ror #20
   156d0:	mov	r0, #0
   156d4:	push	{r4, lr}
   156d8:	mov	r1, r0
   156dc:	bl	11134 <getcwd@plt>
   156e0:	subs	r4, r0, #0
   156e4:	beq	156f0 <triple_free@@Base+0x2214>
   156e8:	mov	r0, r4
   156ec:	pop	{r4, pc}
   156f0:	bl	11164 <__errno_location@plt>
   156f4:	ldr	r3, [r0]
   156f8:	cmp	r3, #12
   156fc:	bne	156e8 <triple_free@@Base+0x220c>
   15700:	bl	15678 <triple_free@@Base+0x219c>
   15704:	push	{r4, r5, r6, lr}
   15708:	mov	r4, r0
   1570c:	bl	110b0 <__fpending@plt>
   15710:	mov	r6, r0
   15714:	mov	r0, r4
   15718:	ldr	r4, [r4]
   1571c:	bl	15cb0 <triple_free@@Base+0x27d4>
   15720:	and	r4, r4, #32
   15724:	adds	r5, r0, #0
   15728:	movne	r5, #1
   1572c:	cmp	r4, #0
   15730:	bne	15750 <triple_free@@Base+0x2274>
   15734:	cmp	r5, #0
   15738:	beq	15748 <triple_free@@Base+0x226c>
   1573c:	cmp	r6, #0
   15740:	beq	1576c <triple_free@@Base+0x2290>
   15744:	mvn	r4, #0
   15748:	mov	r0, r4
   1574c:	pop	{r4, r5, r6, pc}
   15750:	cmp	r5, #0
   15754:	bne	15744 <triple_free@@Base+0x2268>
   15758:	bl	11164 <__errno_location@plt>
   1575c:	mvn	r4, #0
   15760:	str	r5, [r0]
   15764:	mov	r0, r4
   15768:	pop	{r4, r5, r6, pc}
   1576c:	bl	11164 <__errno_location@plt>
   15770:	ldr	r4, [r0]
   15774:	subs	r4, r4, #9
   15778:	mvnne	r4, #0
   1577c:	mov	r0, r4
   15780:	pop	{r4, r5, r6, pc}
   15784:	push	{r3, lr}
   15788:	bl	157fc <triple_free@@Base+0x2320>
   1578c:	cmp	r0, #0
   15790:	popne	{r3, pc}
   15794:	bl	15678 <triple_free@@Base+0x219c>
   15798:	push	{r3, r4, r5, lr}
   1579c:	mov	r4, r0
   157a0:	ldrb	r5, [r0]
   157a4:	subs	r3, r5, #47	; 0x2f
   157a8:	rsbs	r5, r3, #0
   157ac:	adcs	r5, r5, r3
   157b0:	bl	12198 <close_stdout@@Base+0x118>
   157b4:	rsb	r3, r4, r0
   157b8:	cmp	r3, r5
   157bc:	bls	157f4 <triple_free@@Base+0x2318>
   157c0:	sub	r0, r3, #1
   157c4:	ldrb	r2, [r4, r0]
   157c8:	cmp	r2, #47	; 0x2f
   157cc:	beq	157e4 <triple_free@@Base+0x2308>
   157d0:	b	157f4 <triple_free@@Base+0x2318>
   157d4:	ldrb	r2, [r4, r3]
   157d8:	cmp	r2, #47	; 0x2f
   157dc:	popne	{r3, r4, r5, pc}
   157e0:	mov	r0, r3
   157e4:	cmp	r5, r0
   157e8:	sub	r3, r0, #1
   157ec:	bcc	157d4 <triple_free@@Base+0x22f8>
   157f0:	pop	{r3, r4, r5, pc}
   157f4:	mov	r0, r3
   157f8:	pop	{r3, r4, r5, pc}
   157fc:	push	{r4, r5, r6, r7, r8, lr}
   15800:	mov	r8, r0
   15804:	bl	15798 <triple_free@@Base+0x22bc>
   15808:	rsbs	r6, r0, #1
   1580c:	add	r7, r0, #1
   15810:	mov	r4, r0
   15814:	movcc	r6, #0
   15818:	add	r0, r6, r7
   1581c:	bl	110ec <malloc@plt>
   15820:	subs	r5, r0, #0
   15824:	beq	1584c <triple_free@@Base+0x2370>
   15828:	mov	r2, r4
   1582c:	mov	r1, r8
   15830:	bl	11008 <memcpy@plt>
   15834:	cmp	r6, #0
   15838:	movne	r3, #46	; 0x2e
   1583c:	strbne	r3, [r5, r4]
   15840:	movne	r4, r7
   15844:	mov	r3, #0
   15848:	strb	r3, [r5, r4]
   1584c:	mov	r0, r5
   15850:	pop	{r4, r5, r6, r7, r8, pc}
   15854:	push	{r3, lr}
   15858:	ldrb	r3, [r0]
   1585c:	cmp	r3, #0
   15860:	beq	15888 <triple_free@@Base+0x23ac>
   15864:	mov	r2, r0
   15868:	mov	r0, #0
   1586c:	add	r0, r3, r0, ror #23
   15870:	ldrb	r3, [r2, #1]!
   15874:	cmp	r3, #0
   15878:	bne	1586c <triple_free@@Base+0x2390>
   1587c:	bl	16044 <triple_free@@Base+0x2b68>
   15880:	mov	r0, r1
   15884:	pop	{r3, pc}
   15888:	mov	r0, r3
   1588c:	pop	{r3, pc}
   15890:	ldr	r3, [pc, #984]	; 15c70 <triple_free@@Base+0x2794>
   15894:	mov	r0, #14
   15898:	ldr	r2, [pc, #980]	; 15c74 <triple_free@@Base+0x2798>
   1589c:	add	r3, pc, r3
   158a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158a4:	sub	sp, sp, #132	; 0x84
   158a8:	ldr	r6, [r3, r2]
   158ac:	ldr	r3, [r6]
   158b0:	str	r3, [sp, #124]	; 0x7c
   158b4:	bl	11200 <nl_langinfo@plt>
   158b8:	subs	r5, r0, #0
   158bc:	beq	15970 <triple_free@@Base+0x2494>
   158c0:	ldr	r3, [pc, #944]	; 15c78 <triple_free@@Base+0x279c>
   158c4:	ldr	r4, [pc, r3]
   158c8:	cmp	r4, #0
   158cc:	beq	1597c <triple_free@@Base+0x24a0>
   158d0:	ldrb	r7, [r4]
   158d4:	cmp	r7, #0
   158d8:	bne	1590c <triple_free@@Base+0x2430>
   158dc:	b	15944 <triple_free@@Base+0x2468>
   158e0:	mov	r0, r4
   158e4:	bl	1114c <strlen@plt>
   158e8:	add	r0, r0, #1
   158ec:	add	r7, r4, r0
   158f0:	mov	r0, r7
   158f4:	bl	1114c <strlen@plt>
   158f8:	add	r0, r0, #1
   158fc:	add	r4, r7, r0
   15900:	ldrb	r7, [r7, r0]
   15904:	cmp	r7, #0
   15908:	beq	15944 <triple_free@@Base+0x2468>
   1590c:	mov	r0, r5
   15910:	mov	r1, r4
   15914:	bl	10fcc <strcmp@plt>
   15918:	cmp	r0, #0
   1591c:	beq	15934 <triple_free@@Base+0x2458>
   15920:	cmp	r7, #42	; 0x2a
   15924:	bne	158e0 <triple_free@@Base+0x2404>
   15928:	ldrb	r3, [r4, #1]
   1592c:	cmp	r3, #0
   15930:	bne	158e0 <triple_free@@Base+0x2404>
   15934:	mov	r0, r4
   15938:	bl	1114c <strlen@plt>
   1593c:	add	r0, r0, #1
   15940:	add	r5, r4, r0
   15944:	ldrb	r3, [r5]
   15948:	cmp	r3, #0
   1594c:	ldreq	r5, [pc, #808]	; 15c7c <triple_free@@Base+0x27a0>
   15950:	addeq	r5, pc, r5
   15954:	ldr	r2, [sp, #124]	; 0x7c
   15958:	mov	r0, r5
   1595c:	ldr	r3, [r6]
   15960:	cmp	r2, r3
   15964:	bne	15c44 <triple_free@@Base+0x2768>
   15968:	add	sp, sp, #132	; 0x84
   1596c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15970:	ldr	r5, [pc, #776]	; 15c80 <triple_free@@Base+0x27a4>
   15974:	add	r5, pc, r5
   15978:	b	158c0 <triple_free@@Base+0x23e4>
   1597c:	ldr	r0, [pc, #768]	; 15c84 <triple_free@@Base+0x27a8>
   15980:	add	r0, pc, r0
   15984:	bl	110e0 <getenv@plt>
   15988:	subs	r8, r0, #0
   1598c:	beq	15c1c <triple_free@@Base+0x2740>
   15990:	ldrb	r3, [r8]
   15994:	cmp	r3, #0
   15998:	beq	15bb0 <triple_free@@Base+0x26d4>
   1599c:	bl	1114c <strlen@plt>
   159a0:	subs	sl, r0, #0
   159a4:	subne	r3, sl, #1
   159a8:	bne	15bc0 <triple_free@@Base+0x26e4>
   159ac:	mov	r9, #0
   159b0:	mov	fp, r9
   159b4:	add	r9, sl, r9
   159b8:	add	r0, r9, #14
   159bc:	bl	110ec <malloc@plt>
   159c0:	subs	r7, r0, #0
   159c4:	beq	15c10 <triple_free@@Base+0x2734>
   159c8:	mov	r1, r8
   159cc:	mov	r2, sl
   159d0:	bl	11008 <memcpy@plt>
   159d4:	cmp	fp, #0
   159d8:	add	ip, r7, r9
   159dc:	movne	r3, #47	; 0x2f
   159e0:	strbne	r3, [r7, sl]
   159e4:	ldr	r3, [pc, #668]	; 15c88 <triple_free@@Base+0x27ac>
   159e8:	add	r3, pc, r3
   159ec:	ldm	r3!, {r0, r1, r2}
   159f0:	ldrh	r3, [r3]
   159f4:	str	r0, [r7, r9]
   159f8:	mov	r0, r7
   159fc:	str	r1, [ip, #4]
   15a00:	mov	r1, #32768	; 0x8000
   15a04:	strh	r3, [ip, #12]
   15a08:	str	r2, [ip, #8]
   15a0c:	bl	110d4 <open64@plt>
   15a10:	subs	r8, r0, #0
   15a14:	blt	15bd8 <triple_free@@Base+0x26fc>
   15a18:	ldr	r1, [pc, #620]	; 15c8c <triple_free@@Base+0x27b0>
   15a1c:	add	r1, pc, r1
   15a20:	bl	10f9c <fdopen@plt>
   15a24:	subs	fp, r0, #0
   15a28:	beq	15c30 <triple_free@@Base+0x2754>
   15a2c:	ldr	r0, [pc, #604]	; 15c90 <triple_free@@Base+0x27b4>
   15a30:	add	sl, sp, #20
   15a34:	add	r9, sp, #72	; 0x48
   15a38:	mov	r8, #0
   15a3c:	add	r0, pc, r0
   15a40:	str	r0, [sp, #12]
   15a44:	ldr	r3, [fp, #4]
   15a48:	ldr	r2, [fp, #8]
   15a4c:	cmp	r3, r2
   15a50:	bcs	15b3c <triple_free@@Base+0x2660>
   15a54:	add	r2, r3, #1
   15a58:	str	r2, [fp, #4]
   15a5c:	ldrb	r0, [r3]
   15a60:	cmp	r0, #32
   15a64:	beq	15a44 <triple_free@@Base+0x2568>
   15a68:	sub	r3, r0, #9
   15a6c:	cmp	r3, #1
   15a70:	bls	15a44 <triple_free@@Base+0x2568>
   15a74:	cmp	r0, #35	; 0x23
   15a78:	beq	15b50 <triple_free@@Base+0x2674>
   15a7c:	mov	r1, fp
   15a80:	bl	11158 <ungetc@plt>
   15a84:	mov	r0, fp
   15a88:	ldr	r1, [sp, #12]
   15a8c:	mov	r2, sl
   15a90:	mov	r3, r9
   15a94:	bl	11188 <fscanf@plt>
   15a98:	cmp	r0, #1
   15a9c:	ble	15b80 <triple_free@@Base+0x26a4>
   15aa0:	mov	r0, sl
   15aa4:	bl	1114c <strlen@plt>
   15aa8:	str	r0, [sp, #8]
   15aac:	mov	r0, r9
   15ab0:	bl	1114c <strlen@plt>
   15ab4:	cmp	r8, #0
   15ab8:	mov	r2, r0
   15abc:	bne	15be4 <triple_free@@Base+0x2708>
   15ac0:	ldr	r3, [sp, #8]
   15ac4:	str	r2, [sp]
   15ac8:	add	r8, r0, r3
   15acc:	add	r0, r8, #3
   15ad0:	add	r8, r8, #2
   15ad4:	bl	110ec <malloc@plt>
   15ad8:	ldr	r2, [sp]
   15adc:	mov	r3, r0
   15ae0:	cmp	r3, #0
   15ae4:	beq	15c48 <triple_free@@Base+0x276c>
   15ae8:	ldr	r0, [sp, #8]
   15aec:	movw	r1, #65534	; 0xfffe
   15af0:	movt	r1, #65535	; 0xffff
   15af4:	rsb	r2, r2, r8
   15af8:	rsb	r1, r0, r1
   15afc:	stm	sp, {r2, r3}
   15b00:	add	r0, r1, r2
   15b04:	mov	r1, sl
   15b08:	add	r0, r3, r0
   15b0c:	mov	r4, r3
   15b10:	bl	110a4 <strcpy@plt>
   15b14:	ldr	r2, [sp]
   15b18:	ldr	r3, [sp, #4]
   15b1c:	mov	r1, r9
   15b20:	sub	r0, r2, #1
   15b24:	add	r0, r3, r0
   15b28:	bl	110a4 <strcpy@plt>
   15b2c:	ldr	r3, [fp, #4]
   15b30:	ldr	r2, [fp, #8]
   15b34:	cmp	r3, r2
   15b38:	bcc	15a54 <triple_free@@Base+0x2578>
   15b3c:	mov	r0, fp
   15b40:	bl	111d0 <__uflow@plt>
   15b44:	cmn	r0, #1
   15b48:	beq	15b80 <triple_free@@Base+0x26a4>
   15b4c:	b	15a60 <triple_free@@Base+0x2584>
   15b50:	ldr	r3, [fp, #4]
   15b54:	ldr	r2, [fp, #8]
   15b58:	cmp	r3, r2
   15b5c:	bcs	15c64 <triple_free@@Base+0x2788>
   15b60:	add	r2, r3, #1
   15b64:	str	r2, [fp, #4]
   15b68:	ldrb	r0, [r3]
   15b6c:	cmp	r0, #10
   15b70:	cmnne	r0, #1
   15b74:	bne	15b50 <triple_free@@Base+0x2674>
   15b78:	cmn	r0, #1
   15b7c:	bne	15a44 <triple_free@@Base+0x2568>
   15b80:	mov	r0, fp
   15b84:	bl	15cb0 <triple_free@@Base+0x27d4>
   15b88:	cmp	r8, #0
   15b8c:	beq	15bd8 <triple_free@@Base+0x26fc>
   15b90:	mov	r3, #0
   15b94:	strb	r3, [r4, r8]
   15b98:	mov	r0, r7
   15b9c:	bl	10ff0 <free@plt>
   15ba0:	ldr	r3, [pc, #236]	; 15c94 <triple_free@@Base+0x27b8>
   15ba4:	add	r3, pc, r3
   15ba8:	str	r4, [r3]
   15bac:	b	158d0 <triple_free@@Base+0x23f4>
   15bb0:	ldr	r8, [pc, #224]	; 15c98 <triple_free@@Base+0x27bc>
   15bb4:	mov	r3, #7
   15bb8:	mov	sl, #8
   15bbc:	add	r8, pc, r8
   15bc0:	ldrb	r3, [r8, r3]
   15bc4:	cmp	r3, #47	; 0x2f
   15bc8:	movne	r9, #1
   15bcc:	movne	fp, r9
   15bd0:	bne	159b4 <triple_free@@Base+0x24d8>
   15bd4:	b	159ac <triple_free@@Base+0x24d0>
   15bd8:	ldr	r4, [pc, #188]	; 15c9c <triple_free@@Base+0x27c0>
   15bdc:	add	r4, pc, r4
   15be0:	b	15b98 <triple_free@@Base+0x26bc>
   15be4:	ldr	r0, [sp, #8]
   15be8:	str	r2, [sp]
   15bec:	add	r3, r0, r2
   15bf0:	mov	r0, r4
   15bf4:	add	r8, r3, r8
   15bf8:	add	r1, r8, #3
   15bfc:	add	r8, r8, #2
   15c00:	bl	11044 <realloc@plt>
   15c04:	ldr	r2, [sp]
   15c08:	mov	r3, r0
   15c0c:	b	15ae0 <triple_free@@Base+0x2604>
   15c10:	ldr	r4, [pc, #136]	; 15ca0 <triple_free@@Base+0x27c4>
   15c14:	add	r4, pc, r4
   15c18:	b	15ba0 <triple_free@@Base+0x26c4>
   15c1c:	ldr	r8, [pc, #128]	; 15ca4 <triple_free@@Base+0x27c8>
   15c20:	mov	r3, #7
   15c24:	mov	sl, #8
   15c28:	add	r8, pc, r8
   15c2c:	b	15bc0 <triple_free@@Base+0x26e4>
   15c30:	ldr	r4, [pc, #112]	; 15ca8 <triple_free@@Base+0x27cc>
   15c34:	mov	r0, r8
   15c38:	add	r4, pc, r4
   15c3c:	bl	1123c <close@plt>
   15c40:	b	15b98 <triple_free@@Base+0x26bc>
   15c44:	bl	11038 <__stack_chk_fail@plt>
   15c48:	mov	r0, r4
   15c4c:	ldr	r4, [pc, #88]	; 15cac <triple_free@@Base+0x27d0>
   15c50:	bl	10ff0 <free@plt>
   15c54:	mov	r0, fp
   15c58:	add	r4, pc, r4
   15c5c:	bl	15cb0 <triple_free@@Base+0x27d4>
   15c60:	b	15b98 <triple_free@@Base+0x26bc>
   15c64:	mov	r0, fp
   15c68:	bl	111d0 <__uflow@plt>
   15c6c:	b	15b6c <triple_free@@Base+0x2690>
   15c70:	andeq	r2, r1, ip, asr r7
   15c74:	strdeq	r0, [r0], -r8
   15c78:	strdeq	r2, [r1], -r8
   15c7c:	andeq	r1, r0, r8, lsr ip
   15c80:	andeq	r1, r0, r4, lsl #13
   15c84:	andeq	r1, r0, r0, lsl ip
   15c88:			; <UNDEFINED> instruction: 0x00001bb8
   15c8c:	muleq	r0, r4, fp
   15c90:	andeq	r1, r0, r8, ror fp
   15c94:	andeq	r2, r1, r8, lsl r7
   15c98:	andeq	r1, r0, r0, asr #19
   15c9c:	andeq	r1, r0, ip, lsl r4
   15ca0:	andeq	r1, r0, r4, ror #7
   15ca4:	andeq	r1, r0, r4, asr r9
   15ca8:	andeq	r1, r0, r0, asr #7
   15cac:	andeq	r1, r0, r0, lsr #7
   15cb0:	push	{r4, r5, r6, lr}
   15cb4:	sub	sp, sp, #8
   15cb8:	mov	r4, r0
   15cbc:	bl	111a0 <fileno@plt>
   15cc0:	cmp	r0, #0
   15cc4:	mov	r0, r4
   15cc8:	blt	15d44 <triple_free@@Base+0x2868>
   15ccc:	bl	11104 <__freading@plt>
   15cd0:	cmp	r0, #0
   15cd4:	bne	15d10 <triple_free@@Base+0x2834>
   15cd8:	mov	r0, r4
   15cdc:	bl	15d50 <triple_free@@Base+0x2874>
   15ce0:	cmp	r0, #0
   15ce4:	beq	15d40 <triple_free@@Base+0x2864>
   15ce8:	bl	11164 <__errno_location@plt>
   15cec:	ldr	r6, [r0]
   15cf0:	mov	r5, r0
   15cf4:	mov	r0, r4
   15cf8:	bl	111b8 <fclose@plt>
   15cfc:	cmp	r6, #0
   15d00:	mvnne	r0, #0
   15d04:	strne	r6, [r5]
   15d08:	add	sp, sp, #8
   15d0c:	pop	{r4, r5, r6, pc}
   15d10:	mov	r0, r4
   15d14:	bl	111a0 <fileno@plt>
   15d18:	mov	r1, #1
   15d1c:	mov	r2, #0
   15d20:	mov	r3, #0
   15d24:	str	r1, [sp]
   15d28:	bl	1108c <lseek64@plt>
   15d2c:	mvn	r2, #0
   15d30:	mvn	r3, #0
   15d34:	cmp	r1, r3
   15d38:	cmpeq	r0, r2
   15d3c:	bne	15cd8 <triple_free@@Base+0x27fc>
   15d40:	mov	r0, r4
   15d44:	add	sp, sp, #8
   15d48:	pop	{r4, r5, r6, lr}
   15d4c:	b	111b8 <fclose@plt>
   15d50:	push	{r4, lr}
   15d54:	subs	r4, r0, #0
   15d58:	sub	sp, sp, #8
   15d5c:	beq	15d6c <triple_free@@Base+0x2890>
   15d60:	bl	11104 <__freading@plt>
   15d64:	cmp	r0, #0
   15d68:	bne	15d7c <triple_free@@Base+0x28a0>
   15d6c:	mov	r0, r4
   15d70:	add	sp, sp, #8
   15d74:	pop	{r4, lr}
   15d78:	b	10fd8 <fflush@plt>
   15d7c:	ldr	r3, [r4]
   15d80:	tst	r3, #256	; 0x100
   15d84:	beq	15d6c <triple_free@@Base+0x2890>
   15d88:	mov	r3, #1
   15d8c:	mov	r0, r4
   15d90:	str	r3, [sp]
   15d94:	mov	r2, #0
   15d98:	mov	r3, #0
   15d9c:	bl	15db0 <triple_free@@Base+0x28d4>
   15da0:	mov	r0, r4
   15da4:	add	sp, sp, #8
   15da8:	pop	{r4, lr}
   15dac:	b	10fd8 <fflush@plt>
   15db0:	push	{r4, r5, r6, r7, lr}
   15db4:	sub	sp, sp, #20
   15db8:	ldmib	r0, {r1, ip}
   15dbc:	mov	r6, r0
   15dc0:	ldr	r4, [sp, #40]	; 0x28
   15dc4:	cmp	ip, r1
   15dc8:	beq	15de0 <triple_free@@Base+0x2904>
   15dcc:	str	r4, [sp, #40]	; 0x28
   15dd0:	mov	r0, r6
   15dd4:	add	sp, sp, #20
   15dd8:	pop	{r4, r5, r6, r7, lr}
   15ddc:	b	111c4 <fseeko64@plt>
   15de0:	ldr	ip, [r0, #20]
   15de4:	ldr	r1, [r0, #16]
   15de8:	cmp	ip, r1
   15dec:	bne	15dcc <triple_free@@Base+0x28f0>
   15df0:	ldr	r7, [r0, #36]	; 0x24
   15df4:	cmp	r7, #0
   15df8:	bne	15dcc <triple_free@@Base+0x28f0>
   15dfc:	str	r2, [sp, #12]
   15e00:	mvn	r5, #0
   15e04:	str	r3, [sp, #8]
   15e08:	bl	111a0 <fileno@plt>
   15e0c:	str	r4, [sp]
   15e10:	mvn	r4, #0
   15e14:	ldr	r2, [sp, #12]
   15e18:	ldr	r3, [sp, #8]
   15e1c:	bl	1108c <lseek64@plt>
   15e20:	mov	r2, r0
   15e24:	mov	r3, r1
   15e28:	cmp	r3, r5
   15e2c:	cmpeq	r2, r4
   15e30:	beq	15e50 <triple_free@@Base+0x2974>
   15e34:	ldr	r1, [r6]
   15e38:	mov	r0, r7
   15e3c:	strd	r2, [r6, #80]	; 0x50
   15e40:	bic	r3, r1, #16
   15e44:	str	r3, [r6]
   15e48:	add	sp, sp, #20
   15e4c:	pop	{r4, r5, r6, r7, pc}
   15e50:	mvn	r0, #0
   15e54:	b	15e48 <triple_free@@Base+0x296c>
   15e58:	subs	r2, r1, #1
   15e5c:	bxeq	lr
   15e60:	bcc	16038 <triple_free@@Base+0x2b5c>
   15e64:	cmp	r0, r1
   15e68:	bls	1601c <triple_free@@Base+0x2b40>
   15e6c:	tst	r1, r2
   15e70:	beq	16028 <triple_free@@Base+0x2b4c>
   15e74:	clz	r3, r0
   15e78:	clz	r2, r1
   15e7c:	sub	r3, r2, r3
   15e80:	rsbs	r3, r3, #31
   15e84:	addne	r3, r3, r3, lsl #1
   15e88:	mov	r2, #0
   15e8c:	addne	pc, pc, r3, lsl #2
   15e90:	nop	{0}
   15e94:	cmp	r0, r1, lsl #31
   15e98:	adc	r2, r2, r2
   15e9c:	subcs	r0, r0, r1, lsl #31
   15ea0:	cmp	r0, r1, lsl #30
   15ea4:	adc	r2, r2, r2
   15ea8:	subcs	r0, r0, r1, lsl #30
   15eac:	cmp	r0, r1, lsl #29
   15eb0:	adc	r2, r2, r2
   15eb4:	subcs	r0, r0, r1, lsl #29
   15eb8:	cmp	r0, r1, lsl #28
   15ebc:	adc	r2, r2, r2
   15ec0:	subcs	r0, r0, r1, lsl #28
   15ec4:	cmp	r0, r1, lsl #27
   15ec8:	adc	r2, r2, r2
   15ecc:	subcs	r0, r0, r1, lsl #27
   15ed0:	cmp	r0, r1, lsl #26
   15ed4:	adc	r2, r2, r2
   15ed8:	subcs	r0, r0, r1, lsl #26
   15edc:	cmp	r0, r1, lsl #25
   15ee0:	adc	r2, r2, r2
   15ee4:	subcs	r0, r0, r1, lsl #25
   15ee8:	cmp	r0, r1, lsl #24
   15eec:	adc	r2, r2, r2
   15ef0:	subcs	r0, r0, r1, lsl #24
   15ef4:	cmp	r0, r1, lsl #23
   15ef8:	adc	r2, r2, r2
   15efc:	subcs	r0, r0, r1, lsl #23
   15f00:	cmp	r0, r1, lsl #22
   15f04:	adc	r2, r2, r2
   15f08:	subcs	r0, r0, r1, lsl #22
   15f0c:	cmp	r0, r1, lsl #21
   15f10:	adc	r2, r2, r2
   15f14:	subcs	r0, r0, r1, lsl #21
   15f18:	cmp	r0, r1, lsl #20
   15f1c:	adc	r2, r2, r2
   15f20:	subcs	r0, r0, r1, lsl #20
   15f24:	cmp	r0, r1, lsl #19
   15f28:	adc	r2, r2, r2
   15f2c:	subcs	r0, r0, r1, lsl #19
   15f30:	cmp	r0, r1, lsl #18
   15f34:	adc	r2, r2, r2
   15f38:	subcs	r0, r0, r1, lsl #18
   15f3c:	cmp	r0, r1, lsl #17
   15f40:	adc	r2, r2, r2
   15f44:	subcs	r0, r0, r1, lsl #17
   15f48:	cmp	r0, r1, lsl #16
   15f4c:	adc	r2, r2, r2
   15f50:	subcs	r0, r0, r1, lsl #16
   15f54:	cmp	r0, r1, lsl #15
   15f58:	adc	r2, r2, r2
   15f5c:	subcs	r0, r0, r1, lsl #15
   15f60:	cmp	r0, r1, lsl #14
   15f64:	adc	r2, r2, r2
   15f68:	subcs	r0, r0, r1, lsl #14
   15f6c:	cmp	r0, r1, lsl #13
   15f70:	adc	r2, r2, r2
   15f74:	subcs	r0, r0, r1, lsl #13
   15f78:	cmp	r0, r1, lsl #12
   15f7c:	adc	r2, r2, r2
   15f80:	subcs	r0, r0, r1, lsl #12
   15f84:	cmp	r0, r1, lsl #11
   15f88:	adc	r2, r2, r2
   15f8c:	subcs	r0, r0, r1, lsl #11
   15f90:	cmp	r0, r1, lsl #10
   15f94:	adc	r2, r2, r2
   15f98:	subcs	r0, r0, r1, lsl #10
   15f9c:	cmp	r0, r1, lsl #9
   15fa0:	adc	r2, r2, r2
   15fa4:	subcs	r0, r0, r1, lsl #9
   15fa8:	cmp	r0, r1, lsl #8
   15fac:	adc	r2, r2, r2
   15fb0:	subcs	r0, r0, r1, lsl #8
   15fb4:	cmp	r0, r1, lsl #7
   15fb8:	adc	r2, r2, r2
   15fbc:	subcs	r0, r0, r1, lsl #7
   15fc0:	cmp	r0, r1, lsl #6
   15fc4:	adc	r2, r2, r2
   15fc8:	subcs	r0, r0, r1, lsl #6
   15fcc:	cmp	r0, r1, lsl #5
   15fd0:	adc	r2, r2, r2
   15fd4:	subcs	r0, r0, r1, lsl #5
   15fd8:	cmp	r0, r1, lsl #4
   15fdc:	adc	r2, r2, r2
   15fe0:	subcs	r0, r0, r1, lsl #4
   15fe4:	cmp	r0, r1, lsl #3
   15fe8:	adc	r2, r2, r2
   15fec:	subcs	r0, r0, r1, lsl #3
   15ff0:	cmp	r0, r1, lsl #2
   15ff4:	adc	r2, r2, r2
   15ff8:	subcs	r0, r0, r1, lsl #2
   15ffc:	cmp	r0, r1, lsl #1
   16000:	adc	r2, r2, r2
   16004:	subcs	r0, r0, r1, lsl #1
   16008:	cmp	r0, r1
   1600c:	adc	r2, r2, r2
   16010:	subcs	r0, r0, r1
   16014:	mov	r0, r2
   16018:	bx	lr
   1601c:	moveq	r0, #1
   16020:	movne	r0, #0
   16024:	bx	lr
   16028:	clz	r2, r1
   1602c:	rsb	r2, r2, #31
   16030:	lsr	r0, r0, r2
   16034:	bx	lr
   16038:	cmp	r0, #0
   1603c:	mvnne	r0, #0
   16040:	b	160a0 <triple_free@@Base+0x2bc4>
   16044:	cmp	r1, #0
   16048:	beq	16038 <triple_free@@Base+0x2b5c>
   1604c:	push	{r0, r1, lr}
   16050:	bl	15e58 <triple_free@@Base+0x297c>
   16054:	pop	{r1, r2, lr}
   16058:	mul	r3, r2, r0
   1605c:	sub	r1, r1, r3
   16060:	bx	lr
   16064:	cmp	r3, #0
   16068:	cmpeq	r2, #0
   1606c:	bne	16084 <triple_free@@Base+0x2ba8>
   16070:	cmp	r1, #0
   16074:	cmpeq	r0, #0
   16078:	mvnne	r1, #0
   1607c:	mvnne	r0, #0
   16080:	b	160a0 <triple_free@@Base+0x2bc4>
   16084:	sub	sp, sp, #8
   16088:	push	{sp, lr}
   1608c:	bl	160ec <triple_free@@Base+0x2c10>
   16090:	ldr	lr, [sp, #4]
   16094:	add	sp, sp, #8
   16098:	pop	{r2, r3}
   1609c:	bx	lr
   160a0:	push	{r1, lr}
   160a4:	mov	r0, #8
   160a8:	bl	10fc0 <raise@plt>
   160ac:	pop	{r1, pc}
   160b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   160b4:	mov	r8, r2
   160b8:	mov	r6, r0
   160bc:	mov	r7, r1
   160c0:	mov	sl, r3
   160c4:	ldr	r9, [sp, #32]
   160c8:	bl	16128 <triple_free@@Base+0x2c4c>
   160cc:	umull	r4, r5, r8, r0
   160d0:	mul	r8, r8, r1
   160d4:	mla	r2, r0, sl, r8
   160d8:	add	r5, r2, r5
   160dc:	subs	r4, r6, r4
   160e0:	sbc	r5, r7, r5
   160e4:	strd	r4, [r9]
   160e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   160ec:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   160f0:	mov	r8, r2
   160f4:	mov	r6, r0
   160f8:	mov	r7, r1
   160fc:	mov	r5, r3
   16100:	ldr	r9, [sp, #32]
   16104:	bl	165b4 <triple_free@@Base+0x30d8>
   16108:	mul	r3, r0, r5
   1610c:	umull	r4, r5, r0, r8
   16110:	mla	r8, r8, r1, r3
   16114:	add	r5, r8, r5
   16118:	subs	r4, r6, r4
   1611c:	sbc	r5, r7, r5
   16120:	strd	r4, [r9]
   16124:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1612c:	rsbs	r4, r0, #0
   16130:	rsc	r5, r1, #0
   16134:	cmp	r1, #0
   16138:	mvn	r6, #0
   1613c:	sub	sp, sp, #12
   16140:	movge	r4, r0
   16144:	movge	r5, r1
   16148:	movge	r6, #0
   1614c:	cmp	r3, #0
   16150:	blt	16388 <triple_free@@Base+0x2eac>
   16154:	cmp	r3, #0
   16158:	mov	sl, r4
   1615c:	mov	ip, r5
   16160:	mov	r0, r2
   16164:	mov	r1, r3
   16168:	mov	r8, r2
   1616c:	mov	r7, r4
   16170:	mov	r9, r5
   16174:	bne	1626c <triple_free@@Base+0x2d90>
   16178:	cmp	r2, r5
   1617c:	bls	162a8 <triple_free@@Base+0x2dcc>
   16180:	clz	r3, r2
   16184:	cmp	r3, #0
   16188:	rsbne	r2, r3, #32
   1618c:	lslne	r8, r0, r3
   16190:	lsrne	r2, r4, r2
   16194:	lslne	r7, r4, r3
   16198:	orrne	r9, r2, r5, lsl r3
   1619c:	lsr	r4, r8, #16
   161a0:	uxth	sl, r8
   161a4:	mov	r1, r4
   161a8:	mov	r0, r9
   161ac:	bl	15e58 <triple_free@@Base+0x297c>
   161b0:	mov	r1, r4
   161b4:	mov	fp, r0
   161b8:	mov	r0, r9
   161bc:	bl	16044 <triple_free@@Base+0x2b68>
   161c0:	mul	r0, sl, fp
   161c4:	lsr	r2, r7, #16
   161c8:	orr	r1, r2, r1, lsl #16
   161cc:	cmp	r0, r1
   161d0:	bls	161f4 <triple_free@@Base+0x2d18>
   161d4:	adds	r1, r1, r8
   161d8:	sub	r3, fp, #1
   161dc:	bcs	161f0 <triple_free@@Base+0x2d14>
   161e0:	cmp	r0, r1
   161e4:	subhi	fp, fp, #2
   161e8:	addhi	r1, r1, r8
   161ec:	bhi	161f4 <triple_free@@Base+0x2d18>
   161f0:	mov	fp, r3
   161f4:	rsb	r9, r0, r1
   161f8:	mov	r1, r4
   161fc:	uxth	r7, r7
   16200:	mov	r0, r9
   16204:	bl	15e58 <triple_free@@Base+0x297c>
   16208:	mov	r1, r4
   1620c:	mov	r5, r0
   16210:	mov	r0, r9
   16214:	bl	16044 <triple_free@@Base+0x2b68>
   16218:	mul	sl, sl, r5
   1621c:	orr	r1, r7, r1, lsl #16
   16220:	cmp	sl, r1
   16224:	bls	16244 <triple_free@@Base+0x2d68>
   16228:	adds	r8, r1, r8
   1622c:	sub	r3, r5, #1
   16230:	bcs	16240 <triple_free@@Base+0x2d64>
   16234:	cmp	sl, r8
   16238:	subhi	r5, r5, #2
   1623c:	bhi	16244 <triple_free@@Base+0x2d68>
   16240:	mov	r5, r3
   16244:	orr	r3, r5, fp, lsl #16
   16248:	mov	r4, #0
   1624c:	cmp	r6, #0
   16250:	mov	r0, r3
   16254:	mov	r1, r4
   16258:	beq	16264 <triple_free@@Base+0x2d88>
   1625c:	rsbs	r0, r0, #0
   16260:	rsc	r1, r1, #0
   16264:	add	sp, sp, #12
   16268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1626c:	cmp	r3, r5
   16270:	movhi	r4, #0
   16274:	movhi	r3, r4
   16278:	bhi	1624c <triple_free@@Base+0x2d70>
   1627c:	clz	r5, r1
   16280:	cmp	r5, #0
   16284:	bne	16474 <triple_free@@Base+0x2f98>
   16288:	cmp	r1, ip
   1628c:	cmpcs	r2, sl
   16290:	movhi	r4, #0
   16294:	movls	r4, #1
   16298:	movls	r3, #1
   1629c:	movls	r4, r5
   162a0:	movhi	r3, r4
   162a4:	b	1624c <triple_free@@Base+0x2d70>
   162a8:	cmp	r2, #0
   162ac:	bne	162c0 <triple_free@@Base+0x2de4>
   162b0:	mov	r1, r2
   162b4:	mov	r0, #1
   162b8:	bl	15e58 <triple_free@@Base+0x297c>
   162bc:	mov	r8, r0
   162c0:	clz	r3, r8
   162c4:	cmp	r3, #0
   162c8:	bne	16398 <triple_free@@Base+0x2ebc>
   162cc:	rsb	r9, r8, r9
   162d0:	lsr	r5, r8, #16
   162d4:	uxth	sl, r8
   162d8:	mov	r4, #1
   162dc:	mov	r1, r5
   162e0:	mov	r0, r9
   162e4:	bl	15e58 <triple_free@@Base+0x297c>
   162e8:	mov	r1, r5
   162ec:	mov	fp, r0
   162f0:	mov	r0, r9
   162f4:	bl	16044 <triple_free@@Base+0x2b68>
   162f8:	mul	r0, sl, fp
   162fc:	lsr	r2, r7, #16
   16300:	orr	r1, r2, r1, lsl #16
   16304:	cmp	r0, r1
   16308:	bls	16328 <triple_free@@Base+0x2e4c>
   1630c:	adds	r1, r1, r8
   16310:	sub	r3, fp, #1
   16314:	bcs	16594 <triple_free@@Base+0x30b8>
   16318:	cmp	r0, r1
   1631c:	subhi	fp, fp, #2
   16320:	addhi	r1, r1, r8
   16324:	bls	16594 <triple_free@@Base+0x30b8>
   16328:	rsb	r2, r0, r1
   1632c:	mov	r1, r5
   16330:	str	r2, [sp]
   16334:	uxth	r7, r7
   16338:	mov	r0, r2
   1633c:	bl	15e58 <triple_free@@Base+0x297c>
   16340:	ldr	r2, [sp]
   16344:	mov	r1, r5
   16348:	mov	r9, r0
   1634c:	mov	r0, r2
   16350:	bl	16044 <triple_free@@Base+0x2b68>
   16354:	mul	sl, sl, r9
   16358:	orr	r1, r7, r1, lsl #16
   1635c:	cmp	sl, r1
   16360:	bls	16380 <triple_free@@Base+0x2ea4>
   16364:	adds	r8, r1, r8
   16368:	sub	r3, r9, #1
   1636c:	bcs	1637c <triple_free@@Base+0x2ea0>
   16370:	cmp	sl, r8
   16374:	subhi	r9, r9, #2
   16378:	bhi	16380 <triple_free@@Base+0x2ea4>
   1637c:	mov	r9, r3
   16380:	orr	r3, r9, fp, lsl #16
   16384:	b	1624c <triple_free@@Base+0x2d70>
   16388:	mvn	r6, r6
   1638c:	rsbs	r2, r2, #0
   16390:	rsc	r3, r3, #0
   16394:	b	16154 <triple_free@@Base+0x2c78>
   16398:	lsl	r8, r8, r3
   1639c:	rsb	fp, r3, #32
   163a0:	lsr	r4, r9, fp
   163a4:	lsr	fp, r7, fp
   163a8:	lsr	r5, r8, #16
   163ac:	orr	fp, fp, r9, lsl r3
   163b0:	mov	r0, r4
   163b4:	lsl	r7, r7, r3
   163b8:	mov	r1, r5
   163bc:	uxth	sl, r8
   163c0:	bl	15e58 <triple_free@@Base+0x297c>
   163c4:	mov	r1, r5
   163c8:	mov	r3, r0
   163cc:	mov	r0, r4
   163d0:	str	r3, [sp]
   163d4:	bl	16044 <triple_free@@Base+0x2b68>
   163d8:	ldr	r3, [sp]
   163dc:	lsr	r2, fp, #16
   163e0:	mul	r0, sl, r3
   163e4:	orr	r1, r2, r1, lsl #16
   163e8:	cmp	r0, r1
   163ec:	bls	1640c <triple_free@@Base+0x2f30>
   163f0:	adds	r1, r1, r8
   163f4:	sub	r2, r3, #1
   163f8:	bcs	165ac <triple_free@@Base+0x30d0>
   163fc:	cmp	r0, r1
   16400:	subhi	r3, r3, #2
   16404:	addhi	r1, r1, r8
   16408:	bls	165ac <triple_free@@Base+0x30d0>
   1640c:	rsb	r9, r0, r1
   16410:	mov	r1, r5
   16414:	str	r3, [sp]
   16418:	uxth	fp, fp
   1641c:	mov	r0, r9
   16420:	bl	15e58 <triple_free@@Base+0x297c>
   16424:	mov	r1, r5
   16428:	mov	r4, r0
   1642c:	mov	r0, r9
   16430:	bl	16044 <triple_free@@Base+0x2b68>
   16434:	mul	r9, sl, r4
   16438:	ldr	r3, [sp]
   1643c:	orr	r1, fp, r1, lsl #16
   16440:	cmp	r9, r1
   16444:	bls	16468 <triple_free@@Base+0x2f8c>
   16448:	adds	r1, r1, r8
   1644c:	sub	r2, r4, #1
   16450:	bcs	16464 <triple_free@@Base+0x2f88>
   16454:	cmp	r9, r1
   16458:	subhi	r4, r4, #2
   1645c:	addhi	r1, r1, r8
   16460:	bhi	16468 <triple_free@@Base+0x2f8c>
   16464:	mov	r4, r2
   16468:	rsb	r9, r9, r1
   1646c:	orr	r4, r4, r3, lsl #16
   16470:	b	162dc <triple_free@@Base+0x2e00>
   16474:	rsb	sl, r5, #32
   16478:	lsl	r3, r2, r5
   1647c:	lsr	r0, r2, sl
   16480:	lsr	r2, ip, sl
   16484:	orr	r4, r0, r1, lsl r5
   16488:	lsr	sl, r7, sl
   1648c:	mov	r0, r2
   16490:	orr	sl, sl, ip, lsl r5
   16494:	lsr	r9, r4, #16
   16498:	str	r3, [sp, #4]
   1649c:	str	r2, [sp]
   164a0:	uxth	fp, r4
   164a4:	mov	r1, r9
   164a8:	bl	15e58 <triple_free@@Base+0x297c>
   164ac:	ldr	r2, [sp]
   164b0:	mov	r1, r9
   164b4:	mov	r8, r0
   164b8:	mov	r0, r2
   164bc:	bl	16044 <triple_free@@Base+0x2b68>
   164c0:	mul	r0, fp, r8
   164c4:	lsr	r2, sl, #16
   164c8:	orr	r1, r2, r1, lsl #16
   164cc:	cmp	r0, r1
   164d0:	bls	164f0 <triple_free@@Base+0x3014>
   164d4:	adds	r1, r1, r4
   164d8:	sub	r2, r8, #1
   164dc:	bcs	165a4 <triple_free@@Base+0x30c8>
   164e0:	cmp	r0, r1
   164e4:	subhi	r8, r8, #2
   164e8:	addhi	r1, r1, r4
   164ec:	bls	165a4 <triple_free@@Base+0x30c8>
   164f0:	rsb	ip, r0, r1
   164f4:	mov	r1, r9
   164f8:	str	ip, [sp]
   164fc:	mov	r0, ip
   16500:	bl	15e58 <triple_free@@Base+0x297c>
   16504:	ldr	ip, [sp]
   16508:	mov	r1, r9
   1650c:	mov	r2, r0
   16510:	mov	r0, ip
   16514:	str	r2, [sp]
   16518:	bl	16044 <triple_free@@Base+0x2b68>
   1651c:	ldr	r2, [sp]
   16520:	uxth	ip, sl
   16524:	mul	fp, fp, r2
   16528:	orr	ip, ip, r1, lsl #16
   1652c:	cmp	fp, ip
   16530:	bls	16550 <triple_free@@Base+0x3074>
   16534:	adds	ip, ip, r4
   16538:	sub	r1, r2, #1
   1653c:	bcs	1659c <triple_free@@Base+0x30c0>
   16540:	cmp	fp, ip
   16544:	subhi	r2, r2, #2
   16548:	addhi	ip, ip, r4
   1654c:	bls	1659c <triple_free@@Base+0x30c0>
   16550:	ldr	r0, [sp, #4]
   16554:	orr	r1, r2, r8, lsl #16
   16558:	rsb	fp, fp, ip
   1655c:	umull	r2, r3, r1, r0
   16560:	cmp	fp, r3
   16564:	bcc	16588 <triple_free@@Base+0x30ac>
   16568:	movne	r4, #0
   1656c:	moveq	r4, #1
   16570:	cmp	r2, r7, lsl r5
   16574:	movls	r4, #0
   16578:	andhi	r4, r4, #1
   1657c:	cmp	r4, #0
   16580:	moveq	r3, r1
   16584:	beq	1624c <triple_free@@Base+0x2d70>
   16588:	sub	r3, r1, #1
   1658c:	mov	r4, #0
   16590:	b	1624c <triple_free@@Base+0x2d70>
   16594:	mov	fp, r3
   16598:	b	16328 <triple_free@@Base+0x2e4c>
   1659c:	mov	r2, r1
   165a0:	b	16550 <triple_free@@Base+0x3074>
   165a4:	mov	r8, r2
   165a8:	b	164f0 <triple_free@@Base+0x3014>
   165ac:	mov	r3, r2
   165b0:	b	1640c <triple_free@@Base+0x2f30>
   165b4:	cmp	r3, #0
   165b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165bc:	mov	r6, r0
   165c0:	sub	sp, sp, #12
   165c4:	mov	r5, r1
   165c8:	mov	r7, r0
   165cc:	mov	r4, r2
   165d0:	mov	r8, r1
   165d4:	bne	166b4 <triple_free@@Base+0x31d8>
   165d8:	cmp	r2, r1
   165dc:	bls	166f0 <triple_free@@Base+0x3214>
   165e0:	clz	r3, r2
   165e4:	cmp	r3, #0
   165e8:	rsbne	r8, r3, #32
   165ec:	lslne	r4, r2, r3
   165f0:	lsrne	r8, r0, r8
   165f4:	lslne	r7, r0, r3
   165f8:	orrne	r8, r8, r1, lsl r3
   165fc:	lsr	r5, r4, #16
   16600:	uxth	sl, r4
   16604:	mov	r1, r5
   16608:	mov	r0, r8
   1660c:	bl	15e58 <triple_free@@Base+0x297c>
   16610:	mov	r1, r5
   16614:	mov	r9, r0
   16618:	mov	r0, r8
   1661c:	bl	16044 <triple_free@@Base+0x2b68>
   16620:	mul	r0, sl, r9
   16624:	lsr	r3, r7, #16
   16628:	orr	r1, r3, r1, lsl #16
   1662c:	cmp	r0, r1
   16630:	bls	16654 <triple_free@@Base+0x3178>
   16634:	adds	r1, r1, r4
   16638:	sub	r2, r9, #1
   1663c:	bcs	16650 <triple_free@@Base+0x3174>
   16640:	cmp	r0, r1
   16644:	subhi	r9, r9, #2
   16648:	addhi	r1, r1, r4
   1664c:	bhi	16654 <triple_free@@Base+0x3178>
   16650:	mov	r9, r2
   16654:	rsb	r8, r0, r1
   16658:	mov	r1, r5
   1665c:	uxth	r7, r7
   16660:	mov	r0, r8
   16664:	bl	15e58 <triple_free@@Base+0x297c>
   16668:	mov	r1, r5
   1666c:	mov	r6, r0
   16670:	mov	r0, r8
   16674:	bl	16044 <triple_free@@Base+0x2b68>
   16678:	mul	sl, sl, r6
   1667c:	orr	r1, r7, r1, lsl #16
   16680:	cmp	sl, r1
   16684:	bls	166a0 <triple_free@@Base+0x31c4>
   16688:	adds	r4, r1, r4
   1668c:	sub	r3, r6, #1
   16690:	bcs	1699c <triple_free@@Base+0x34c0>
   16694:	cmp	sl, r4
   16698:	subhi	r6, r6, #2
   1669c:	bls	1699c <triple_free@@Base+0x34c0>
   166a0:	orr	r0, r6, r9, lsl #16
   166a4:	mov	r6, #0
   166a8:	mov	r1, r6
   166ac:	add	sp, sp, #12
   166b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166b4:	cmp	r3, r1
   166b8:	movhi	r6, #0
   166bc:	movhi	r0, r6
   166c0:	bhi	166a8 <triple_free@@Base+0x31cc>
   166c4:	clz	r7, r3
   166c8:	cmp	r7, #0
   166cc:	bne	167cc <triple_free@@Base+0x32f0>
   166d0:	cmp	r3, r1
   166d4:	cmpcs	r2, r6
   166d8:	movhi	r6, #0
   166dc:	movls	r6, #1
   166e0:	movls	r0, #1
   166e4:	movls	r6, r7
   166e8:	movhi	r0, r6
   166ec:	b	166a8 <triple_free@@Base+0x31cc>
   166f0:	cmp	r2, #0
   166f4:	bne	16708 <triple_free@@Base+0x322c>
   166f8:	mov	r1, r2
   166fc:	mov	r0, #1
   16700:	bl	15e58 <triple_free@@Base+0x297c>
   16704:	mov	r4, r0
   16708:	clz	r3, r4
   1670c:	cmp	r3, #0
   16710:	bne	168c8 <triple_free@@Base+0x33ec>
   16714:	rsb	r5, r4, r5
   16718:	lsr	r8, r4, #16
   1671c:	uxth	sl, r4
   16720:	mov	r6, #1
   16724:	mov	r1, r8
   16728:	mov	r0, r5
   1672c:	bl	15e58 <triple_free@@Base+0x297c>
   16730:	mov	r1, r8
   16734:	mov	r9, r0
   16738:	mov	r0, r5
   1673c:	bl	16044 <triple_free@@Base+0x2b68>
   16740:	mul	r0, sl, r9
   16744:	lsr	r3, r7, #16
   16748:	orr	r1, r3, r1, lsl #16
   1674c:	cmp	r0, r1
   16750:	bls	16770 <triple_free@@Base+0x3294>
   16754:	adds	r1, r1, r4
   16758:	sub	r2, r9, #1
   1675c:	bcs	169a4 <triple_free@@Base+0x34c8>
   16760:	cmp	r0, r1
   16764:	subhi	r9, r9, #2
   16768:	addhi	r1, r1, r4
   1676c:	bls	169a4 <triple_free@@Base+0x34c8>
   16770:	rsb	fp, r0, r1
   16774:	mov	r1, r8
   16778:	uxth	r7, r7
   1677c:	mov	r0, fp
   16780:	bl	15e58 <triple_free@@Base+0x297c>
   16784:	mov	r1, r8
   16788:	mov	r5, r0
   1678c:	mov	r0, fp
   16790:	bl	16044 <triple_free@@Base+0x2b68>
   16794:	mul	sl, sl, r5
   16798:	orr	r1, r7, r1, lsl #16
   1679c:	cmp	sl, r1
   167a0:	bls	167bc <triple_free@@Base+0x32e0>
   167a4:	adds	r4, r1, r4
   167a8:	sub	r3, r5, #1
   167ac:	bcs	169ac <triple_free@@Base+0x34d0>
   167b0:	cmp	sl, r4
   167b4:	subhi	r5, r5, #2
   167b8:	bls	169ac <triple_free@@Base+0x34d0>
   167bc:	orr	r0, r5, r9, lsl #16
   167c0:	mov	r1, r6
   167c4:	add	sp, sp, #12
   167c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167cc:	rsb	r1, r7, #32
   167d0:	lsl	r0, r2, r7
   167d4:	lsr	r2, r2, r1
   167d8:	lsr	fp, r5, r1
   167dc:	orr	r8, r2, r3, lsl r7
   167e0:	lsr	r1, r6, r1
   167e4:	str	r0, [sp, #4]
   167e8:	orr	r5, r1, r5, lsl r7
   167ec:	lsr	r9, r8, #16
   167f0:	mov	r0, fp
   167f4:	uxth	sl, r8
   167f8:	mov	r1, r9
   167fc:	bl	15e58 <triple_free@@Base+0x297c>
   16800:	mov	r1, r9
   16804:	mov	r4, r0
   16808:	mov	r0, fp
   1680c:	bl	16044 <triple_free@@Base+0x2b68>
   16810:	mul	r0, sl, r4
   16814:	lsr	ip, r5, #16
   16818:	orr	r1, ip, r1, lsl #16
   1681c:	cmp	r0, r1
   16820:	bls	16834 <triple_free@@Base+0x3358>
   16824:	adds	r1, r1, r8
   16828:	sub	r2, r4, #1
   1682c:	bcc	169c8 <triple_free@@Base+0x34ec>
   16830:	mov	r4, r2
   16834:	rsb	ip, r0, r1
   16838:	mov	r1, r9
   1683c:	str	ip, [sp]
   16840:	uxth	r5, r5
   16844:	mov	r0, ip
   16848:	bl	15e58 <triple_free@@Base+0x297c>
   1684c:	ldr	ip, [sp]
   16850:	mov	r1, r9
   16854:	mov	fp, r0
   16858:	mov	r0, ip
   1685c:	bl	16044 <triple_free@@Base+0x2b68>
   16860:	mul	sl, sl, fp
   16864:	orr	r1, r5, r1, lsl #16
   16868:	cmp	sl, r1
   1686c:	bls	16880 <triple_free@@Base+0x33a4>
   16870:	adds	r1, r1, r8
   16874:	sub	r2, fp, #1
   16878:	bcc	169b4 <triple_free@@Base+0x34d8>
   1687c:	mov	fp, r2
   16880:	ldr	r3, [sp, #4]
   16884:	orr	r0, fp, r4, lsl #16
   16888:	rsb	sl, sl, r1
   1688c:	umull	r4, r5, r0, r3
   16890:	cmp	sl, r5
   16894:	bcc	168b4 <triple_free@@Base+0x33d8>
   16898:	movne	r3, #0
   1689c:	moveq	r3, #1
   168a0:	cmp	r4, r6, lsl r7
   168a4:	movls	r6, #0
   168a8:	andhi	r6, r3, #1
   168ac:	cmp	r6, #0
   168b0:	beq	166a8 <triple_free@@Base+0x31cc>
   168b4:	mov	r6, #0
   168b8:	sub	r0, r0, #1
   168bc:	mov	r1, r6
   168c0:	add	sp, sp, #12
   168c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168c8:	lsl	r4, r4, r3
   168cc:	rsb	r9, r3, #32
   168d0:	lsr	r2, r5, r9
   168d4:	lsr	r9, r6, r9
   168d8:	lsr	r8, r4, #16
   168dc:	orr	r9, r9, r5, lsl r3
   168e0:	mov	r0, r2
   168e4:	lsl	r7, r6, r3
   168e8:	mov	r1, r8
   168ec:	str	r2, [sp]
   168f0:	bl	15e58 <triple_free@@Base+0x297c>
   168f4:	ldr	r2, [sp]
   168f8:	mov	r1, r8
   168fc:	uxth	sl, r4
   16900:	mov	fp, r0
   16904:	mov	r0, r2
   16908:	bl	16044 <triple_free@@Base+0x2b68>
   1690c:	mul	r0, sl, fp
   16910:	lsr	r3, r9, #16
   16914:	orr	r1, r3, r1, lsl #16
   16918:	cmp	r0, r1
   1691c:	bls	1693c <triple_free@@Base+0x3460>
   16920:	adds	r1, r1, r4
   16924:	sub	r3, fp, #1
   16928:	bcs	169dc <triple_free@@Base+0x3500>
   1692c:	cmp	r0, r1
   16930:	subhi	fp, fp, #2
   16934:	addhi	r1, r1, r4
   16938:	bls	169dc <triple_free@@Base+0x3500>
   1693c:	rsb	r5, r0, r1
   16940:	mov	r1, r8
   16944:	uxth	r9, r9
   16948:	mov	r0, r5
   1694c:	bl	15e58 <triple_free@@Base+0x297c>
   16950:	mov	r1, r8
   16954:	mov	r6, r0
   16958:	mov	r0, r5
   1695c:	bl	16044 <triple_free@@Base+0x2b68>
   16960:	mul	r5, sl, r6
   16964:	orr	r1, r9, r1, lsl #16
   16968:	cmp	r5, r1
   1696c:	bls	16990 <triple_free@@Base+0x34b4>
   16970:	adds	r1, r1, r4
   16974:	sub	r3, r6, #1
   16978:	bcs	1698c <triple_free@@Base+0x34b0>
   1697c:	cmp	r5, r1
   16980:	subhi	r6, r6, #2
   16984:	addhi	r1, r1, r4
   16988:	bhi	16990 <triple_free@@Base+0x34b4>
   1698c:	mov	r6, r3
   16990:	rsb	r5, r5, r1
   16994:	orr	r6, r6, fp, lsl #16
   16998:	b	16724 <triple_free@@Base+0x3248>
   1699c:	mov	r6, r3
   169a0:	b	166a0 <triple_free@@Base+0x31c4>
   169a4:	mov	r9, r2
   169a8:	b	16770 <triple_free@@Base+0x3294>
   169ac:	mov	r5, r3
   169b0:	b	167bc <triple_free@@Base+0x32e0>
   169b4:	cmp	sl, r1
   169b8:	subhi	fp, fp, #2
   169bc:	addhi	r1, r1, r8
   169c0:	bhi	16880 <triple_free@@Base+0x33a4>
   169c4:	b	1687c <triple_free@@Base+0x33a0>
   169c8:	cmp	r0, r1
   169cc:	subhi	r4, r4, #2
   169d0:	addhi	r1, r1, r8
   169d4:	bhi	16834 <triple_free@@Base+0x3358>
   169d8:	b	16830 <triple_free@@Base+0x3354>
   169dc:	mov	fp, r3
   169e0:	b	1693c <triple_free@@Base+0x3460>
   169e4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   169e8:	mov	r7, r0
   169ec:	ldr	r6, [pc, #76]	; 16a40 <triple_free@@Base+0x3564>
   169f0:	mov	r8, r1
   169f4:	ldr	r5, [pc, #72]	; 16a44 <triple_free@@Base+0x3568>
   169f8:	mov	r9, r2
   169fc:	add	r6, pc, r6
   16a00:	bl	10f7c <fdopen@plt-0x20>
   16a04:	add	r5, pc, r5
   16a08:	rsb	r6, r5, r6
   16a0c:	asrs	r6, r6, #2
   16a10:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   16a14:	sub	r5, r5, #4
   16a18:	mov	r4, #0
   16a1c:	add	r4, r4, #1
   16a20:	ldr	r3, [r5, #4]!
   16a24:	mov	r0, r7
   16a28:	mov	r1, r8
   16a2c:	mov	r2, r9
   16a30:	blx	r3
   16a34:	cmp	r4, r6
   16a38:	bne	16a1c <triple_free@@Base+0x3540>
   16a3c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16a40:	andeq	r1, r1, r8, lsr #8
   16a44:	andeq	r1, r1, ip, lsl r4
   16a48:	bx	lr
   16a4c:	ldr	r3, [pc, #28]	; 16a70 <triple_free@@Base+0x3594>
   16a50:	mov	r1, #0
   16a54:	ldr	r2, [pc, #24]	; 16a74 <triple_free@@Base+0x3598>
   16a58:	add	r3, pc, r3
   16a5c:	ldr	r3, [r3, r2]
   16a60:	cmp	r3, #0
   16a64:	ldrne	r2, [r3]
   16a68:	moveq	r2, r3
   16a6c:	b	11170 <__cxa_atexit@plt>
   16a70:	andeq	r1, r1, r0, lsr #11
   16a74:	andeq	r0, r0, r8, lsl r1

Disassembly of section .fini:

00016a78 <.fini>:
   16a78:	push	{r3, lr}
   16a7c:	pop	{r3, pc}
