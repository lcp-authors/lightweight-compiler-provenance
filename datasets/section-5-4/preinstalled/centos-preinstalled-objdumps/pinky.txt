
centos-preinstalled/pinky:     file format elf32-littlearm


Disassembly of section .init:

00011200 <.init>:
   11200:	push	{r3, lr}
   11204:	bl	11bc0 <close@plt+0x634>
   11208:	pop	{r3, pc}

Disassembly of section .plt:

0001120c <fdopen@plt-0x14>:
   1120c:	push	{lr}		; (str lr, [sp, #-4]!)
   11210:	ldr	lr, [pc, #4]	; 1121c <fdopen@plt-0x4>
   11214:	add	lr, pc, lr
   11218:	ldr	pc, [lr, #8]!
   1121c:	andeq	r6, r1, r4, ror #27

00011220 <fdopen@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #90112	; 0x16000
   11228:	ldr	pc, [ip, #3556]!	; 0xde4

0001122c <calloc@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #90112	; 0x16000
   11234:	ldr	pc, [ip, #3548]!	; 0xddc

00011238 <fputs_unlocked@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #90112	; 0x16000
   11240:	ldr	pc, [ip, #3540]!	; 0xdd4

00011244 <raise@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #90112	; 0x16000
   1124c:	ldr	pc, [ip, #3532]!	; 0xdcc

00011250 <getpwnam@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #90112	; 0x16000
   11258:	ldr	pc, [ip, #3524]!	; 0xdc4

0001125c <strcmp@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #90112	; 0x16000
   11264:	ldr	pc, [ip, #3516]!	; 0xdbc

00011268 <fflush@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #90112	; 0x16000
   11270:	ldr	pc, [ip, #3508]!	; 0xdb4

00011274 <utmpxname@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #90112	; 0x16000
   1127c:	ldr	pc, [ip, #3500]!	; 0xdac

00011280 <free@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #90112	; 0x16000
   11288:	ldr	pc, [ip, #3492]!	; 0xda4

0001128c <gai_strerror@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #90112	; 0x16000
   11294:	ldr	pc, [ip, #3484]!	; 0xd9c

00011298 <_exit@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #90112	; 0x16000
   112a0:	ldr	pc, [ip, #3476]!	; 0xd94

000112a4 <memcpy@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #90112	; 0x16000
   112ac:	ldr	pc, [ip, #3468]!	; 0xd8c

000112b0 <mbsinit@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #90112	; 0x16000
   112b8:	ldr	pc, [ip, #3460]!	; 0xd84

000112bc <time@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #90112	; 0x16000
   112c4:	ldr	pc, [ip, #3452]!	; 0xd7c

000112c8 <fwrite_unlocked@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #90112	; 0x16000
   112d0:	ldr	pc, [ip, #3444]!	; 0xd74

000112d4 <memcmp@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #90112	; 0x16000
   112dc:	ldr	pc, [ip, #3436]!	; 0xd6c

000112e0 <stpcpy@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #90112	; 0x16000
   112e8:	ldr	pc, [ip, #3428]!	; 0xd64

000112ec <dcgettext@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #90112	; 0x16000
   112f4:	ldr	pc, [ip, #3420]!	; 0xd5c

000112f8 <setutxent@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #90112	; 0x16000
   11300:	ldr	pc, [ip, #3412]!	; 0xd54

00011304 <__stack_chk_fail@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #90112	; 0x16000
   1130c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011310 <realloc@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #90112	; 0x16000
   11318:	ldr	pc, [ip, #3396]!	; 0xd44

0001131c <textdomain@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #90112	; 0x16000
   11324:	ldr	pc, [ip, #3388]!	; 0xd3c

00011328 <iswprint@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #90112	; 0x16000
   11330:	ldr	pc, [ip, #3380]!	; 0xd34

00011334 <fwrite@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #90112	; 0x16000
   1133c:	ldr	pc, [ip, #3372]!	; 0xd2c

00011340 <lseek64@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #90112	; 0x16000
   11348:	ldr	pc, [ip, #3364]!	; 0xd24

0001134c <__ctype_get_mb_cur_max@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #90112	; 0x16000
   11354:	ldr	pc, [ip, #3356]!	; 0xd1c

00011358 <strcpy@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #90112	; 0x16000
   11360:	ldr	pc, [ip, #3348]!	; 0xd14

00011364 <__fpending@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #90112	; 0x16000
   1136c:	ldr	pc, [ip, #3340]!	; 0xd0c

00011370 <mbrtowc@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #90112	; 0x16000
   11378:	ldr	pc, [ip, #3332]!	; 0xd04

0001137c <error@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #90112	; 0x16000
   11384:	ldr	pc, [ip, #3324]!	; 0xcfc

00011388 <open64@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #90112	; 0x16000
   11390:	ldr	pc, [ip, #3316]!	; 0xcf4

00011394 <getenv@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #90112	; 0x16000
   1139c:	ldr	pc, [ip, #3308]!	; 0xcec

000113a0 <malloc@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #90112	; 0x16000
   113a8:	ldr	pc, [ip, #3300]!	; 0xce4

000113ac <__libc_start_main@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #90112	; 0x16000
   113b4:	ldr	pc, [ip, #3292]!	; 0xcdc

000113b8 <strftime@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #90112	; 0x16000
   113c0:	ldr	pc, [ip, #3284]!	; 0xcd4

000113c4 <__freading@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #90112	; 0x16000
   113cc:	ldr	pc, [ip, #3276]!	; 0xccc

000113d0 <localtime@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #90112	; 0x16000
   113d8:	ldr	pc, [ip, #3268]!	; 0xcc4

000113dc <__ctype_toupper_loc@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #90112	; 0x16000
   113e4:	ldr	pc, [ip, #3260]!	; 0xcbc

000113e8 <__gmon_start__@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #90112	; 0x16000
   113f0:	ldr	pc, [ip, #3252]!	; 0xcb4

000113f4 <getopt_long@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #90112	; 0x16000
   113fc:	ldr	pc, [ip, #3244]!	; 0xcac

00011400 <kill@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #90112	; 0x16000
   11408:	ldr	pc, [ip, #3236]!	; 0xca4

0001140c <__ctype_b_loc@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #90112	; 0x16000
   11414:	ldr	pc, [ip, #3228]!	; 0xc9c

00011418 <exit@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #90112	; 0x16000
   11420:	ldr	pc, [ip, #3220]!	; 0xc94

00011424 <strlen@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #90112	; 0x16000
   1142c:	ldr	pc, [ip, #3212]!	; 0xc8c

00011430 <strchr@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #90112	; 0x16000
   11438:	ldr	pc, [ip, #3204]!	; 0xc84

0001143c <ungetc@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #90112	; 0x16000
   11444:	ldr	pc, [ip, #3196]!	; 0xc7c

00011448 <__errno_location@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #90112	; 0x16000
   11450:	ldr	pc, [ip, #3188]!	; 0xc74

00011454 <__sprintf_chk@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #90112	; 0x16000
   1145c:	ldr	pc, [ip, #3180]!	; 0xc6c

00011460 <__cxa_atexit@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #90112	; 0x16000
   11468:	ldr	pc, [ip, #3172]!	; 0xc64

0001146c <__strdup@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #90112	; 0x16000
   11474:	ldr	pc, [ip, #3164]!	; 0xc5c

00011478 <memset@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #90112	; 0x16000
   11480:	ldr	pc, [ip, #3156]!	; 0xc54

00011484 <strncpy@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #90112	; 0x16000
   1148c:	ldr	pc, [ip, #3148]!	; 0xc4c

00011490 <fscanf@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #90112	; 0x16000
   11498:	ldr	pc, [ip, #3140]!	; 0xc44

0001149c <__printf_chk@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #90112	; 0x16000
   114a4:	ldr	pc, [ip, #3132]!	; 0xc3c

000114a8 <fileno@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #90112	; 0x16000
   114b0:	ldr	pc, [ip, #3124]!	; 0xc34

000114b4 <__fprintf_chk@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #90112	; 0x16000
   114bc:	ldr	pc, [ip, #3116]!	; 0xc2c

000114c0 <fclose@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #90112	; 0x16000
   114c8:	ldr	pc, [ip, #3108]!	; 0xc24

000114cc <fseeko64@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #90112	; 0x16000
   114d4:	ldr	pc, [ip, #3100]!	; 0xc1c

000114d8 <__uflow@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #90112	; 0x16000
   114e0:	ldr	pc, [ip, #3092]!	; 0xc14

000114e4 <endutxent@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #90112	; 0x16000
   114ec:	ldr	pc, [ip, #3084]!	; 0xc0c

000114f0 <__overflow@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #90112	; 0x16000
   114f8:	ldr	pc, [ip, #3076]!	; 0xc04

000114fc <setlocale@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #90112	; 0x16000
   11504:	ldr	pc, [ip, #3068]!	; 0xbfc

00011508 <strrchr@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #90112	; 0x16000
   11510:	ldr	pc, [ip, #3060]!	; 0xbf4

00011514 <nl_langinfo@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #90112	; 0x16000
   1151c:	ldr	pc, [ip, #3052]!	; 0xbec

00011520 <fopen64@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #90112	; 0x16000
   11528:	ldr	pc, [ip, #3044]!	; 0xbe4

0001152c <freeaddrinfo@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #90112	; 0x16000
   11534:	ldr	pc, [ip, #3036]!	; 0xbdc

00011538 <getaddrinfo@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #90112	; 0x16000
   11540:	ldr	pc, [ip, #3028]!	; 0xbd4

00011544 <bindtextdomain@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #90112	; 0x16000
   1154c:	ldr	pc, [ip, #3020]!	; 0xbcc

00011550 <fread_unlocked@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #90112	; 0x16000
   11558:	ldr	pc, [ip, #3012]!	; 0xbc4

0001155c <__xstat64@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #90112	; 0x16000
   11564:	ldr	pc, [ip, #3004]!	; 0xbbc

00011568 <strncmp@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #90112	; 0x16000
   11570:	ldr	pc, [ip, #2996]!	; 0xbb4

00011574 <abort@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #90112	; 0x16000
   1157c:	ldr	pc, [ip, #2988]!	; 0xbac

00011580 <getutxent@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #90112	; 0x16000
   11588:	ldr	pc, [ip, #2980]!	; 0xba4

0001158c <close@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #90112	; 0x16000
   11594:	ldr	pc, [ip, #2972]!	; 0xb9c

Disassembly of section .text:

00011598 <close_stdout@@Base-0x1554>:
   11598:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1159c:	sub	sp, sp, #44	; 0x2c
   115a0:	ldr	r6, [pc, #1304]	; 11ac0 <close@plt+0x534>
   115a4:	mov	r5, r0
   115a8:	ldr	r3, [pc, #1300]	; 11ac4 <close@plt+0x538>
   115ac:	mov	r4, r1
   115b0:	add	r6, pc, r6
   115b4:	ldr	r0, [r1]
   115b8:	ldr	r9, [pc, #1288]	; 11ac8 <close@plt+0x53c>
   115bc:	ldr	r3, [r6, r3]
   115c0:	add	r9, pc, r9
   115c4:	ldr	r8, [pc, #1280]	; 11acc <close@plt+0x540>
   115c8:	ldr	r7, [pc, #1280]	; 11ad0 <close@plt+0x544>
   115cc:	ldr	r3, [r3]
   115d0:	add	r8, pc, r8
   115d4:	ldr	fp, [pc, #1272]	; 11ad4 <close@plt+0x548>
   115d8:	add	r7, pc, r7
   115dc:	ldr	sl, [pc, #1268]	; 11ad8 <close@plt+0x54c>
   115e0:	str	r3, [sp, #36]	; 0x24
   115e4:	bl	12dc8 <close_stdout@@Base+0x2dc>
   115e8:	ldr	r1, [pc, #1260]	; 11adc <close@plt+0x550>
   115ec:	mov	r0, #6
   115f0:	add	fp, pc, fp
   115f4:	add	sl, pc, sl
   115f8:	add	r1, pc, r1
   115fc:	bl	114fc <setlocale@plt>
   11600:	ldr	r1, [pc, #1240]	; 11ae0 <close@plt+0x554>
   11604:	mov	r0, r9
   11608:	add	r1, pc, r1
   1160c:	bl	11544 <bindtextdomain@plt>
   11610:	mov	r0, r9
   11614:	bl	1131c <textdomain@plt>
   11618:	ldr	r2, [pc, #1220]	; 11ae4 <close@plt+0x558>
   1161c:	ldr	r3, [pc, #1220]	; 11ae8 <close@plt+0x55c>
   11620:	add	r2, pc, r2
   11624:	str	r2, [sp, #16]
   11628:	ldr	r2, [pc, #1212]	; 11aec <close@plt+0x560>
   1162c:	add	r2, pc, r2
   11630:	str	r2, [sp, #20]
   11634:	ldr	r0, [r6, r3]
   11638:	bl	16218 <close_stdout@@Base+0x372c>
   1163c:	ldr	r2, [pc, #1196]	; 11af0 <close@plt+0x564>
   11640:	mov	r9, #0
   11644:	ldr	r3, [pc, #1192]	; 11af4 <close@plt+0x568>
   11648:	mov	r0, r5
   1164c:	str	r9, [sp]
   11650:	mov	r1, r4
   11654:	add	r2, pc, r2
   11658:	add	r3, pc, r3
   1165c:	bl	113f4 <getopt_long@plt>
   11660:	cmn	r0, #1
   11664:	beq	117d0 <close@plt+0x244>
   11668:	cmp	r0, #105	; 0x69
   1166c:	beq	117c4 <close@plt+0x238>
   11670:	bgt	11698 <close@plt+0x10c>
   11674:	cmp	r0, #98	; 0x62
   11678:	beq	117a4 <close@plt+0x218>
   1167c:	bgt	116c0 <close@plt+0x134>
   11680:	cmn	r0, #3
   11684:	beq	11720 <close@plt+0x194>
   11688:	cmn	r0, #2
   1168c:	bne	1179c <close@plt+0x210>
   11690:	mov	r0, r9
   11694:	bl	1279c <close@plt+0x1210>
   11698:	cmp	r0, #113	; 0x71
   1169c:	beq	117b4 <close@plt+0x228>
   116a0:	bgt	116e0 <close@plt+0x154>
   116a4:	cmp	r0, #108	; 0x6c
   116a8:	beq	11714 <close@plt+0x188>
   116ac:	cmp	r0, #112	; 0x70
   116b0:	bne	1179c <close@plt+0x210>
   116b4:	ldr	r2, [sp, #20]
   116b8:	strb	r9, [r2, #2]
   116bc:	b	1163c <close@plt+0xb0>
   116c0:	cmp	r0, #102	; 0x66
   116c4:	beq	116f8 <close@plt+0x16c>
   116c8:	cmp	r0, #104	; 0x68
   116cc:	bne	1179c <close@plt+0x210>
   116d0:	ldr	r3, [pc, #1056]	; 11af8 <close@plt+0x56c>
   116d4:	add	r3, pc, r3
   116d8:	strb	r9, [r3, #1]
   116dc:	b	1163c <close@plt+0xb0>
   116e0:	cmp	r0, #115	; 0x73
   116e4:	beq	11708 <close@plt+0x17c>
   116e8:	cmp	r0, #119	; 0x77
   116ec:	bne	1179c <close@plt+0x210>
   116f0:	strb	r9, [sl, #3]
   116f4:	b	1163c <close@plt+0xb0>
   116f8:	ldr	r3, [pc, #1020]	; 11afc <close@plt+0x570>
   116fc:	add	r3, pc, r3
   11700:	strb	r9, [r3, #7]
   11704:	b	1163c <close@plt+0xb0>
   11708:	mov	r3, #1
   1170c:	strb	r3, [fp, #6]
   11710:	b	1163c <close@plt+0xb0>
   11714:	ldr	r3, [sp, #16]
   11718:	strb	r9, [r3, #6]
   1171c:	b	1163c <close@plt+0xb0>
   11720:	ldr	r2, [pc, #984]	; 11b00 <close@plt+0x574>
   11724:	ldr	r3, [pc, #984]	; 11b04 <close@plt+0x578>
   11728:	ldr	r1, [pc, #984]	; 11b08 <close@plt+0x57c>
   1172c:	ldr	r0, [r6, r2]
   11730:	ldr	r3, [r6, r3]
   11734:	add	r1, pc, r1
   11738:	ldr	r2, [pc, #972]	; 11b0c <close@plt+0x580>
   1173c:	ldr	r0, [r0]
   11740:	ldr	r3, [r3]
   11744:	add	r2, pc, r2
   11748:	ldr	lr, [pc, #960]	; 11b10 <close@plt+0x584>
   1174c:	stmib	sp, {r1, r2}
   11750:	ldr	r1, [pc, #956]	; 11b14 <close@plt+0x588>
   11754:	add	lr, pc, lr
   11758:	ldr	r2, [pc, #952]	; 11b18 <close@plt+0x58c>
   1175c:	str	r9, [sp, #12]
   11760:	add	r1, pc, r1
   11764:	str	lr, [sp]
   11768:	add	r2, pc, r2
   1176c:	bl	14ab4 <close_stdout@@Base+0x1fc8>
   11770:	mov	r0, r9
   11774:	bl	11418 <exit@plt>
   11778:	ldr	r1, [pc, #924]	; 11b1c <close@plt+0x590>
   1177c:	mov	r2, #5
   11780:	mov	r0, r5
   11784:	add	r1, pc, r1
   11788:	bl	112ec <dcgettext@plt>
   1178c:	mov	r1, r5
   11790:	mov	r2, r0
   11794:	mov	r0, r5
   11798:	bl	1137c <error@plt>
   1179c:	mov	r0, #1
   117a0:	bl	1279c <close@plt+0x1210>
   117a4:	ldr	r3, [pc, #884]	; 11b20 <close@plt+0x594>
   117a8:	add	r3, pc, r3
   117ac:	strb	r9, [r3]
   117b0:	b	1163c <close@plt+0xb0>
   117b4:	strb	r9, [r7, #3]
   117b8:	strb	r9, [r7, #5]
   117bc:	strb	r9, [r7, #4]
   117c0:	b	1163c <close@plt+0xb0>
   117c4:	strb	r9, [r8, #3]
   117c8:	strb	r9, [r8, #5]
   117cc:	b	1163c <close@plt+0xb0>
   117d0:	ldr	r2, [pc, #844]	; 11b24 <close@plt+0x598>
   117d4:	ldr	r3, [pc, #844]	; 11b28 <close@plt+0x59c>
   117d8:	add	r3, pc, r3
   117dc:	ldr	r2, [r6, r2]
   117e0:	ldrb	r3, [r3, #6]
   117e4:	ldr	lr, [r2]
   117e8:	cmp	r3, r9
   117ec:	rsb	r5, lr, r5
   117f0:	beq	118f8 <close@plt+0x36c>
   117f4:	ldr	r7, [pc, #816]	; 11b2c <close@plt+0x5a0>
   117f8:	mov	r3, r9
   117fc:	add	r1, sp, #28
   11800:	add	r2, sp, #32
   11804:	add	r7, pc, r7
   11808:	add	r4, r4, lr, lsl #2
   1180c:	str	r9, [sp, #32]
   11810:	mov	r0, r7
   11814:	bl	15038 <close_stdout@@Base+0x254c>
   11818:	cmp	r0, #0
   1181c:	beq	1183c <close@plt+0x2b0>
   11820:	bl	11448 <__errno_location@plt>
   11824:	ldr	r2, [pc, #772]	; 11b30 <close@plt+0x5a4>
   11828:	mov	r3, r7
   1182c:	add	r2, pc, r2
   11830:	ldr	r1, [r0]
   11834:	mov	r0, #1
   11838:	bl	1137c <error@plt>
   1183c:	mov	r0, #2
   11840:	ldr	r8, [sp, #28]
   11844:	ldr	r9, [sp, #32]
   11848:	bl	12ca8 <close_stdout@@Base+0x1bc>
   1184c:	cmp	r0, #0
   11850:	beq	11928 <close@plt+0x39c>
   11854:	ldr	r3, [pc, #728]	; 11b34 <close@plt+0x5a8>
   11858:	mov	r1, #16
   1185c:	ldr	r2, [pc, #724]	; 11b38 <close@plt+0x5ac>
   11860:	add	r3, pc, r3
   11864:	add	r2, pc, r2
   11868:	str	r1, [r3, #60]	; 0x3c
   1186c:	str	r2, [r3, #56]	; 0x38
   11870:	ldr	r7, [pc, #708]	; 11b3c <close@plt+0x5b0>
   11874:	add	r7, pc, r7
   11878:	ldrb	r3, [r7, #7]
   1187c:	cmp	r3, #0
   11880:	bne	11948 <close@plt+0x3bc>
   11884:	add	r6, r9, #44	; 0x2c
   11888:	b	11894 <close@plt+0x308>
   1188c:	sub	r8, r8, #1
   11890:	add	r6, r6, #384	; 0x180
   11894:	cmp	r8, #0
   11898:	sub	r9, r6, #44	; 0x2c
   1189c:	beq	11920 <close@plt+0x394>
   118a0:	ldrb	r3, [r6]
   118a4:	cmp	r3, #0
   118a8:	beq	1188c <close@plt+0x300>
   118ac:	ldrsh	r3, [r6, #-44]	; 0xffffffd4
   118b0:	cmp	r3, #7
   118b4:	bne	1188c <close@plt+0x300>
   118b8:	cmp	r5, #0
   118bc:	movne	r7, #0
   118c0:	bne	118cc <close@plt+0x340>
   118c4:	b	118ec <close@plt+0x360>
   118c8:	add	r7, r7, #1
   118cc:	cmp	r5, r7
   118d0:	ble	1188c <close@plt+0x300>
   118d4:	mov	r0, r6
   118d8:	ldr	r1, [r4, r7, lsl #2]
   118dc:	mov	r2, #32
   118e0:	bl	11568 <strncmp@plt>
   118e4:	cmp	r0, #0
   118e8:	bne	118c8 <close@plt+0x33c>
   118ec:	mov	r0, r9
   118f0:	bl	12214 <close@plt+0xc88>
   118f4:	b	1188c <close@plt+0x300>
   118f8:	cmp	r5, r9
   118fc:	addne	r4, r4, lr, lsl #2
   11900:	movne	r6, r3
   11904:	bne	11918 <close@plt+0x38c>
   11908:	b	11778 <close@plt+0x1ec>
   1190c:	ldr	r0, [r4, r6, lsl #2]
   11910:	add	r6, r6, #1
   11914:	bl	11de0 <close@plt+0x854>
   11918:	cmp	r5, r6
   1191c:	bgt	1190c <close@plt+0x380>
   11920:	mov	r0, #0
   11924:	bl	11418 <exit@plt>
   11928:	ldr	r3, [pc, #528]	; 11b40 <close@plt+0x5b4>
   1192c:	mov	r1, #12
   11930:	ldr	r2, [pc, #524]	; 11b44 <close@plt+0x5b8>
   11934:	add	r3, pc, r3
   11938:	add	r2, pc, r2
   1193c:	str	r1, [r3, #60]	; 0x3c
   11940:	str	r2, [r3, #56]	; 0x38
   11944:	b	11870 <close@plt+0x2e4>
   11948:	ldr	r1, [pc, #504]	; 11b48 <close@plt+0x5bc>
   1194c:	mov	r2, #5
   11950:	mov	r0, #0
   11954:	add	r1, pc, r1
   11958:	bl	112ec <dcgettext@plt>
   1195c:	ldr	r1, [pc, #488]	; 11b4c <close@plt+0x5c0>
   11960:	add	r1, pc, r1
   11964:	mov	r2, r0
   11968:	mov	r0, #1
   1196c:	bl	1149c <__printf_chk@plt>
   11970:	ldrb	r3, [r7, #3]
   11974:	cmp	r3, #0
   11978:	bne	11a3c <close@plt+0x4b0>
   1197c:	ldr	r1, [pc, #460]	; 11b50 <close@plt+0x5c4>
   11980:	mov	r2, #5
   11984:	mov	r0, #0
   11988:	add	r1, pc, r1
   1198c:	bl	112ec <dcgettext@plt>
   11990:	ldr	r1, [pc, #444]	; 11b54 <close@plt+0x5c8>
   11994:	add	r1, pc, r1
   11998:	mov	r2, r0
   1199c:	mov	r0, #1
   119a0:	bl	1149c <__printf_chk@plt>
   119a4:	ldr	r3, [pc, #428]	; 11b58 <close@plt+0x5cc>
   119a8:	add	r3, pc, r3
   119ac:	ldrb	r3, [r3, #4]
   119b0:	cmp	r3, #0
   119b4:	bne	11a94 <close@plt+0x508>
   119b8:	ldr	r3, [pc, #412]	; 11b5c <close@plt+0x5d0>
   119bc:	mov	r2, #5
   119c0:	ldr	r1, [pc, #408]	; 11b60 <close@plt+0x5d4>
   119c4:	mov	r0, #0
   119c8:	add	r3, pc, r3
   119cc:	add	r1, pc, r1
   119d0:	ldr	r7, [r3, #60]	; 0x3c
   119d4:	bl	112ec <dcgettext@plt>
   119d8:	ldr	r1, [pc, #388]	; 11b64 <close@plt+0x5d8>
   119dc:	mov	r2, r7
   119e0:	add	r1, pc, r1
   119e4:	mov	r3, r0
   119e8:	mov	r0, #1
   119ec:	bl	1149c <__printf_chk@plt>
   119f0:	ldr	r3, [pc, #368]	; 11b68 <close@plt+0x5dc>
   119f4:	add	r3, pc, r3
   119f8:	ldrb	r3, [r3, #5]
   119fc:	cmp	r3, #0
   11a00:	bne	11a68 <close@plt+0x4dc>
   11a04:	ldr	r3, [pc, #244]	; 11b00 <close@plt+0x574>
   11a08:	ldr	r3, [r6, r3]
   11a0c:	ldr	r0, [r3]
   11a10:	ldr	r3, [r0, #20]
   11a14:	ldr	r2, [r0, #24]
   11a18:	cmp	r3, r2
   11a1c:	addcc	r1, r3, #1
   11a20:	strcc	r1, [r0, #20]
   11a24:	movcc	r2, #10
   11a28:	strbcc	r2, [r3]
   11a2c:	bcc	11884 <close@plt+0x2f8>
   11a30:	mov	r1, #10
   11a34:	bl	114f0 <__overflow@plt>
   11a38:	b	11884 <close@plt+0x2f8>
   11a3c:	ldr	r1, [pc, #296]	; 11b6c <close@plt+0x5e0>
   11a40:	mov	r2, #5
   11a44:	mov	r0, #0
   11a48:	add	r1, pc, r1
   11a4c:	bl	112ec <dcgettext@plt>
   11a50:	ldr	r1, [pc, #280]	; 11b70 <close@plt+0x5e4>
   11a54:	add	r1, pc, r1
   11a58:	mov	r2, r0
   11a5c:	mov	r0, #1
   11a60:	bl	1149c <__printf_chk@plt>
   11a64:	b	1197c <close@plt+0x3f0>
   11a68:	ldr	r1, [pc, #260]	; 11b74 <close@plt+0x5e8>
   11a6c:	mov	r2, #5
   11a70:	mov	r0, #0
   11a74:	add	r1, pc, r1
   11a78:	bl	112ec <dcgettext@plt>
   11a7c:	ldr	r1, [pc, #244]	; 11b78 <close@plt+0x5ec>
   11a80:	add	r1, pc, r1
   11a84:	mov	r2, r0
   11a88:	mov	r0, #1
   11a8c:	bl	1149c <__printf_chk@plt>
   11a90:	b	11a04 <close@plt+0x478>
   11a94:	ldr	r1, [pc, #224]	; 11b7c <close@plt+0x5f0>
   11a98:	mov	r2, #5
   11a9c:	mov	r0, #0
   11aa0:	add	r1, pc, r1
   11aa4:	bl	112ec <dcgettext@plt>
   11aa8:	ldr	r1, [pc, #208]	; 11b80 <close@plt+0x5f4>
   11aac:	add	r1, pc, r1
   11ab0:	mov	r2, r0
   11ab4:	mov	r0, #1
   11ab8:	bl	1149c <__printf_chk@plt>
   11abc:	b	119b8 <close@plt+0x42c>
   11ac0:	andeq	r6, r1, r8, asr #20
   11ac4:	andeq	r0, r0, r8, lsr r1
   11ac8:	andeq	r5, r0, r0, lsr r1
   11acc:	muleq	r1, r8, fp
   11ad0:	muleq	r1, r0, fp
   11ad4:	andeq	r6, r1, r8, ror fp
   11ad8:	andeq	r6, r1, r4, ror fp
   11adc:			; <UNDEFINED> instruction: 0x000051b8
   11ae0:	andeq	r5, r0, ip, lsr #3
   11ae4:	andeq	r6, r1, r8, asr #22
   11ae8:	andeq	r0, r0, r8, asr #2
   11aec:	andeq	r6, r1, ip, lsr fp
   11af0:	andeq	r5, r0, ip, lsr #3
   11af4:	andeq	r6, r1, r4, asr r8
   11af8:	muleq	r1, r4, sl
   11afc:	andeq	r6, r1, ip, ror #20
   11b00:	andeq	r0, r0, r4, asr r1
   11b04:	andeq	r0, r0, r0, asr #2
   11b08:	strheq	r5, [r0], -r0
   11b0c:	strheq	r5, [r0], -r0
   11b10:	andeq	r5, r0, ip, ror r0
   11b14:	andeq	r5, r0, r8, rrx
   11b18:	andeq	r4, r0, r4, lsl #31
   11b1c:	andeq	r5, r0, r8, lsl #1
   11b20:	andeq	r6, r1, r0, asr #19
   11b24:	andeq	r0, r0, ip, lsr r1
   11b28:	muleq	r1, r0, r9
   11b2c:	andeq	r4, r0, r0, asr #29
   11b30:	strheq	r5, [r0], -r8
   11b34:	andeq	r6, r1, ip, asr r9
   11b38:	andeq	r4, r0, ip, ror #31
   11b3c:	strdeq	r6, [r1], -r4
   11b40:	andeq	r6, r1, r8, lsl #17
   11b44:	andeq	r4, r0, r8, lsr #30
   11b48:	andeq	r4, r0, r8, lsl pc
   11b4c:	andeq	r4, r0, r4, lsl pc
   11b50:	andeq	r4, r0, r4, lsl #30
   11b54:	andeq	r4, r0, r0, lsl #30
   11b58:	andeq	r6, r1, r0, asr #15
   11b5c:	strdeq	r6, [r1], -r4
   11b60:	ldrdeq	r4, [r0], -r8
   11b64:	andeq	r4, r0, ip, asr #29
   11b68:	andeq	r6, r1, r4, ror r7
   11b6c:	andeq	r4, r0, r4, lsr lr
   11b70:	andeq	r4, r0, r0, lsr lr
   11b74:	andeq	r4, r0, r0, asr #28
   11b78:	strdeq	r4, [r0], -ip
   11b7c:	strdeq	r4, [r0], -ip
   11b80:	andeq	r4, r0, r4, ror r8
   11b84:	mov	fp, #0
   11b88:	mov	lr, #0
   11b8c:	pop	{r1}		; (ldr r1, [sp], #4)
   11b90:	mov	r2, sp
   11b94:	push	{r2}		; (str r2, [sp, #-4]!)
   11b98:	push	{r0}		; (str r0, [sp, #-4]!)
   11b9c:	ldr	ip, [pc, #16]	; 11bb4 <close@plt+0x628>
   11ba0:	push	{ip}		; (str ip, [sp, #-4]!)
   11ba4:	ldr	r0, [pc, #12]	; 11bb8 <close@plt+0x62c>
   11ba8:	ldr	r3, [pc, #12]	; 11bbc <close@plt+0x630>
   11bac:	bl	113ac <__libc_start_main@plt>
   11bb0:	bl	11574 <abort@plt>
   11bb4:	andeq	r6, r1, r4, lsl r2
   11bb8:	muleq	r1, r8, r5
   11bbc:			; <UNDEFINED> instruction: 0x000161b0
   11bc0:	ldr	r3, [pc, #20]	; 11bdc <close@plt+0x650>
   11bc4:	ldr	r2, [pc, #20]	; 11be0 <close@plt+0x654>
   11bc8:	add	r3, pc, r3
   11bcc:	ldr	r2, [r3, r2]
   11bd0:	cmp	r2, #0
   11bd4:	bxeq	lr
   11bd8:	b	113e8 <__gmon_start__@plt>
   11bdc:	andeq	r6, r1, r0, lsr r4
   11be0:	andeq	r0, r0, ip, asr #2
   11be4:	push	{r3, lr}
   11be8:	movw	r0, #33216	; 0x81c0
   11bec:	ldr	r3, [pc, #36]	; 11c18 <close@plt+0x68c>
   11bf0:	movt	r0, #2
   11bf4:	rsb	r3, r0, r3
   11bf8:	cmp	r3, #6
   11bfc:	popls	{r3, pc}
   11c00:	movw	r3, #0
   11c04:	movt	r3, #0
   11c08:	cmp	r3, #0
   11c0c:	popeq	{r3, pc}
   11c10:	blx	r3
   11c14:	pop	{r3, pc}
   11c18:	andeq	r8, r2, r3, asr #3
   11c1c:	push	{r3, lr}
   11c20:	movw	r0, #33216	; 0x81c0
   11c24:	movw	r3, #33216	; 0x81c0
   11c28:	movt	r0, #2
   11c2c:	movt	r3, #2
   11c30:	rsb	r3, r0, r3
   11c34:	asr	r3, r3, #2
   11c38:	add	r3, r3, r3, lsr #31
   11c3c:	asrs	r1, r3, #1
   11c40:	popeq	{r3, pc}
   11c44:	movw	r2, #0
   11c48:	movt	r2, #0
   11c4c:	cmp	r2, #0
   11c50:	popeq	{r3, pc}
   11c54:	blx	r2
   11c58:	pop	{r3, pc}
   11c5c:	push	{r4, lr}
   11c60:	movw	r4, #33216	; 0x81c0
   11c64:	movt	r4, #2
   11c68:	ldrb	r3, [r4]
   11c6c:	cmp	r3, #0
   11c70:	popne	{r4, pc}
   11c74:	bl	11be4 <close@plt+0x658>
   11c78:	mov	r3, #1
   11c7c:	strb	r3, [r4]
   11c80:	pop	{r4, pc}
   11c84:	movw	r0, #32432	; 0x7eb0
   11c88:	movt	r0, #2
   11c8c:	push	{r3, lr}
   11c90:	ldr	r3, [r0]
   11c94:	cmp	r3, #0
   11c98:	beq	11cb0 <close@plt+0x724>
   11c9c:	movw	r3, #0
   11ca0:	movt	r3, #0
   11ca4:	cmp	r3, #0
   11ca8:	beq	11cb0 <close@plt+0x724>
   11cac:	blx	r3
   11cb0:	pop	{r3, lr}
   11cb4:	b	11c1c <close@plt+0x690>
   11cb8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11cbc:	mov	r5, r0
   11cc0:	mov	r6, r1
   11cc4:	bl	11424 <strlen@plt>
   11cc8:	mov	r4, #0
   11ccc:	mov	r2, r5
   11cd0:	add	r7, r0, #1
   11cd4:	ldrb	r3, [r2], #1
   11cd8:	cmp	r3, #38	; 0x26
   11cdc:	addeq	r4, r4, #1
   11ce0:	beq	11cd4 <close@plt+0x748>
   11ce4:	cmp	r3, #0
   11ce8:	bne	11cd4 <close@plt+0x748>
   11cec:	cmp	r4, #0
   11cf0:	beq	11d28 <close@plt+0x79c>
   11cf4:	mov	r0, r6
   11cf8:	rsb	r7, r4, r7
   11cfc:	bl	11424 <strlen@plt>
   11d00:	mov	r1, r4
   11d04:	mov	r9, r0
   11d08:	mul	r8, r4, r0
   11d0c:	mvn	r0, #0
   11d10:	bl	15618 <close_stdout@@Base+0x2b2c>
   11d14:	add	r7, r7, r8
   11d18:	cmp	r9, r0
   11d1c:	bhi	11ddc <close@plt+0x850>
   11d20:	cmp	r8, r7
   11d24:	bhi	11ddc <close@plt+0x850>
   11d28:	mov	r0, r7
   11d2c:	bl	14bc4 <close_stdout@@Base+0x20d8>
   11d30:	ldrb	r3, [r5]
   11d34:	cmp	r3, #0
   11d38:	mov	r7, r0
   11d3c:	mov	r4, r0
   11d40:	bne	11d54 <close@plt+0x7c8>
   11d44:	b	11dcc <close@plt+0x840>
   11d48:	ldrb	r3, [r5, #1]!
   11d4c:	cmp	r3, #0
   11d50:	beq	11dcc <close@plt+0x840>
   11d54:	cmp	r3, #38	; 0x26
   11d58:	strbne	r3, [r4]
   11d5c:	addne	r4, r4, #1
   11d60:	bne	11d48 <close@plt+0x7bc>
   11d64:	bl	1140c <__ctype_b_loc@plt>
   11d68:	ldrb	r3, [r6]
   11d6c:	sxth	r8, r3
   11d70:	lsl	r2, r8, #1
   11d74:	ldr	r1, [r0]
   11d78:	ldrh	r2, [r1, r2]
   11d7c:	tst	r2, #512	; 0x200
   11d80:	moveq	r2, r6
   11d84:	beq	11da8 <close@plt+0x81c>
   11d88:	bl	113dc <__ctype_toupper_loc@plt>
   11d8c:	add	r3, r4, #1
   11d90:	add	r2, r6, #1
   11d94:	ldr	r1, [r0]
   11d98:	ldr	r1, [r1, r8, lsl #2]
   11d9c:	strb	r1, [r4]
   11da0:	mov	r4, r3
   11da4:	ldrb	r3, [r6, #1]
   11da8:	cmp	r3, #0
   11dac:	beq	11d48 <close@plt+0x7bc>
   11db0:	strb	r3, [r4], #1
   11db4:	ldrb	r3, [r2, #1]!
   11db8:	cmp	r3, #0
   11dbc:	bne	11db0 <close@plt+0x824>
   11dc0:	ldrb	r3, [r5, #1]!
   11dc4:	cmp	r3, #0
   11dc8:	bne	11d54 <close@plt+0x7c8>
   11dcc:	mov	r3, #0
   11dd0:	mov	r0, r7
   11dd4:	strb	r3, [r4]
   11dd8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11ddc:	bl	14dd8 <close_stdout@@Base+0x22ec>
   11de0:	push	{r4, r5, r6, r7, r8, r9, lr}
   11de4:	sub	sp, sp, #1024	; 0x400
   11de8:	ldr	r4, [pc, #972]	; 121bc <close@plt+0xc30>
   11dec:	sub	sp, sp, #12
   11df0:	ldr	r3, [pc, #968]	; 121c0 <close@plt+0xc34>
   11df4:	mov	r5, r0
   11df8:	add	r4, pc, r4
   11dfc:	ldr	r7, [r4, r3]
   11e00:	ldr	r3, [r7]
   11e04:	str	r3, [sp, #1028]	; 0x404
   11e08:	bl	11250 <getpwnam@plt>
   11e0c:	ldr	r1, [pc, #944]	; 121c4 <close@plt+0xc38>
   11e10:	mov	r2, #5
   11e14:	add	r1, pc, r1
   11e18:	mov	r6, r0
   11e1c:	mov	r0, #0
   11e20:	bl	112ec <dcgettext@plt>
   11e24:	mov	r1, r0
   11e28:	mov	r0, #1
   11e2c:	bl	1149c <__printf_chk@plt>
   11e30:	ldr	r1, [pc, #912]	; 121c8 <close@plt+0xc3c>
   11e34:	mov	r2, r5
   11e38:	mov	r0, #1
   11e3c:	add	r1, pc, r1
   11e40:	bl	1149c <__printf_chk@plt>
   11e44:	ldr	r1, [pc, #896]	; 121cc <close@plt+0xc40>
   11e48:	mov	r2, #5
   11e4c:	mov	r0, #0
   11e50:	add	r1, pc, r1
   11e54:	bl	112ec <dcgettext@plt>
   11e58:	mov	r1, r0
   11e5c:	mov	r0, #1
   11e60:	bl	1149c <__printf_chk@plt>
   11e64:	cmp	r6, #0
   11e68:	beq	12174 <close@plt+0xbe8>
   11e6c:	ldr	r5, [r6, #16]
   11e70:	mov	r1, #44	; 0x2c
   11e74:	mov	r0, r5
   11e78:	bl	11430 <strchr@plt>
   11e7c:	cmp	r0, #0
   11e80:	movne	r3, #0
   11e84:	strbne	r3, [r0]
   11e88:	ldrne	r5, [r6, #16]
   11e8c:	ldr	r1, [r6]
   11e90:	mov	r0, r5
   11e94:	bl	11cb8 <close@plt+0x72c>
   11e98:	ldr	r1, [pc, #816]	; 121d0 <close@plt+0xc44>
   11e9c:	add	r1, pc, r1
   11ea0:	mov	r2, r0
   11ea4:	mov	r5, r0
   11ea8:	mov	r0, #1
   11eac:	bl	1149c <__printf_chk@plt>
   11eb0:	mov	r0, r5
   11eb4:	bl	11280 <free@plt>
   11eb8:	ldr	r3, [pc, #788]	; 121d4 <close@plt+0xc48>
   11ebc:	ldr	r5, [r4, r3]
   11ec0:	ldr	r0, [r5]
   11ec4:	ldr	r3, [r0, #20]
   11ec8:	ldr	r2, [r0, #24]
   11ecc:	cmp	r3, r2
   11ed0:	addcc	r1, r3, #1
   11ed4:	movcc	r2, #10
   11ed8:	strcc	r1, [r0, #20]
   11edc:	strbcc	r2, [r3]
   11ee0:	bcs	121b0 <close@plt+0xc24>
   11ee4:	ldr	r3, [pc, #748]	; 121d8 <close@plt+0xc4c>
   11ee8:	add	r3, pc, r3
   11eec:	ldrb	r3, [r3]
   11ef0:	cmp	r3, #0
   11ef4:	bne	11f60 <close@plt+0x9d4>
   11ef8:	ldr	r3, [pc, #732]	; 121dc <close@plt+0xc50>
   11efc:	add	r3, pc, r3
   11f00:	ldrb	r3, [r3, #1]
   11f04:	cmp	r3, #0
   11f08:	bne	120b8 <close@plt+0xb2c>
   11f0c:	ldr	r3, [pc, #716]	; 121e0 <close@plt+0xc54>
   11f10:	add	r3, pc, r3
   11f14:	ldrb	r3, [r3, #2]
   11f18:	cmp	r3, #0
   11f1c:	bne	11ff8 <close@plt+0xa6c>
   11f20:	ldr	r0, [r5]
   11f24:	ldr	r3, [r0, #20]
   11f28:	ldr	r2, [r0, #24]
   11f2c:	cmp	r3, r2
   11f30:	addcc	r1, r3, #1
   11f34:	strcc	r1, [r0, #20]
   11f38:	movcc	r2, #10
   11f3c:	strbcc	r2, [r3]
   11f40:	bcs	121a4 <close@plt+0xc18>
   11f44:	ldr	r2, [sp, #1028]	; 0x404
   11f48:	ldr	r3, [r7]
   11f4c:	cmp	r2, r3
   11f50:	bne	121a0 <close@plt+0xc14>
   11f54:	add	sp, sp, #1024	; 0x400
   11f58:	add	sp, sp, #12
   11f5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11f60:	ldr	r1, [pc, #636]	; 121e4 <close@plt+0xc58>
   11f64:	mov	r2, #5
   11f68:	mov	r0, #0
   11f6c:	add	r1, pc, r1
   11f70:	bl	112ec <dcgettext@plt>
   11f74:	mov	r1, r0
   11f78:	mov	r0, #1
   11f7c:	bl	1149c <__printf_chk@plt>
   11f80:	ldr	r1, [pc, #608]	; 121e8 <close@plt+0xc5c>
   11f84:	ldr	r2, [r6, #20]
   11f88:	mov	r0, #1
   11f8c:	add	r1, pc, r1
   11f90:	bl	1149c <__printf_chk@plt>
   11f94:	ldr	r1, [pc, #592]	; 121ec <close@plt+0xc60>
   11f98:	mov	r2, #5
   11f9c:	mov	r0, #0
   11fa0:	add	r1, pc, r1
   11fa4:	bl	112ec <dcgettext@plt>
   11fa8:	mov	r1, r0
   11fac:	mov	r0, #1
   11fb0:	bl	1149c <__printf_chk@plt>
   11fb4:	ldr	r1, [pc, #564]	; 121f0 <close@plt+0xc64>
   11fb8:	ldr	r2, [r6, #24]
   11fbc:	mov	r0, #1
   11fc0:	add	r1, pc, r1
   11fc4:	bl	1149c <__printf_chk@plt>
   11fc8:	ldr	r0, [r5]
   11fcc:	ldr	r3, [r0, #20]
   11fd0:	ldr	r2, [r0, #24]
   11fd4:	cmp	r3, r2
   11fd8:	addcc	r1, r3, #1
   11fdc:	movcc	r2, #10
   11fe0:	strcc	r1, [r0, #20]
   11fe4:	strbcc	r2, [r3]
   11fe8:	bcc	11ef8 <close@plt+0x96c>
   11fec:	mov	r1, #10
   11ff0:	bl	114f0 <__overflow@plt>
   11ff4:	b	11ef8 <close@plt+0x96c>
   11ff8:	ldr	r0, [r6, #20]
   11ffc:	bl	11424 <strlen@plt>
   12000:	add	r0, r0, #7
   12004:	bl	14bc4 <close_stdout@@Base+0x20d8>
   12008:	ldr	r1, [r6, #20]
   1200c:	mov	r8, r0
   12010:	bl	112e0 <stpcpy@plt>
   12014:	ldr	r2, [pc, #472]	; 121f4 <close@plt+0xc68>
   12018:	ldr	r1, [pc, #472]	; 121f8 <close@plt+0xc6c>
   1201c:	add	r2, pc, r2
   12020:	add	r1, pc, r1
   12024:	ldrh	ip, [r2, #4]
   12028:	mov	r3, r0
   1202c:	ldr	r0, [r2]
   12030:	ldrb	r2, [r2, #6]
   12034:	strh	ip, [r3, #4]
   12038:	str	r0, [r3]
   1203c:	mov	r0, r8
   12040:	strb	r2, [r3, #6]
   12044:	bl	11520 <fopen64@plt>
   12048:	subs	r6, r0, #0
   1204c:	beq	120ac <close@plt+0xb20>
   12050:	ldr	r1, [pc, #420]	; 121fc <close@plt+0xc70>
   12054:	mov	r2, #5
   12058:	mov	r0, #0
   1205c:	add	r4, sp, #4
   12060:	add	r1, pc, r1
   12064:	bl	112ec <dcgettext@plt>
   12068:	mov	r1, r0
   1206c:	mov	r0, #1
   12070:	bl	1149c <__printf_chk@plt>
   12074:	b	12088 <close@plt+0xafc>
   12078:	mov	r0, r4
   1207c:	mov	r1, #1
   12080:	ldr	r3, [r5]
   12084:	bl	112c8 <fwrite_unlocked@plt>
   12088:	mov	r2, #1024	; 0x400
   1208c:	mov	r0, r4
   12090:	mov	r1, #1
   12094:	mov	r3, r6
   12098:	bl	11550 <fread_unlocked@plt>
   1209c:	subs	r2, r0, #0
   120a0:	bne	12078 <close@plt+0xaec>
   120a4:	mov	r0, r6
   120a8:	bl	14e30 <close_stdout@@Base+0x2344>
   120ac:	mov	r0, r8
   120b0:	bl	11280 <free@plt>
   120b4:	b	11f20 <close@plt+0x994>
   120b8:	ldr	r0, [r6, #20]
   120bc:	bl	11424 <strlen@plt>
   120c0:	add	r0, r0, #10
   120c4:	bl	14bc4 <close_stdout@@Base+0x20d8>
   120c8:	ldr	r1, [r6, #20]
   120cc:	mov	r9, r0
   120d0:	bl	112e0 <stpcpy@plt>
   120d4:	ldr	r3, [pc, #292]	; 12200 <close@plt+0xc74>
   120d8:	add	r3, pc, r3
   120dc:	mov	r2, r0
   120e0:	ldm	r3!, {r0, r1}
   120e4:	ldrh	r3, [r3]
   120e8:	str	r1, [r2, #4]
   120ec:	ldr	r1, [pc, #272]	; 12204 <close@plt+0xc78>
   120f0:	str	r0, [r2]
   120f4:	mov	r0, r9
   120f8:	strh	r3, [r2, #8]
   120fc:	add	r1, pc, r1
   12100:	bl	11520 <fopen64@plt>
   12104:	subs	r8, r0, #0
   12108:	beq	12168 <close@plt+0xbdc>
   1210c:	ldr	r1, [pc, #244]	; 12208 <close@plt+0xc7c>
   12110:	mov	r2, #5
   12114:	mov	r0, #0
   12118:	add	r4, sp, #4
   1211c:	add	r1, pc, r1
   12120:	bl	112ec <dcgettext@plt>
   12124:	mov	r1, r0
   12128:	mov	r0, #1
   1212c:	bl	1149c <__printf_chk@plt>
   12130:	b	12144 <close@plt+0xbb8>
   12134:	mov	r0, r4
   12138:	mov	r1, #1
   1213c:	ldr	r3, [r5]
   12140:	bl	112c8 <fwrite_unlocked@plt>
   12144:	mov	r2, #1024	; 0x400
   12148:	mov	r0, r4
   1214c:	mov	r1, #1
   12150:	mov	r3, r8
   12154:	bl	11550 <fread_unlocked@plt>
   12158:	subs	r2, r0, #0
   1215c:	bne	12134 <close@plt+0xba8>
   12160:	mov	r0, r8
   12164:	bl	14e30 <close_stdout@@Base+0x2344>
   12168:	mov	r0, r9
   1216c:	bl	11280 <free@plt>
   12170:	b	11f0c <close@plt+0x980>
   12174:	ldr	r1, [pc, #144]	; 1220c <close@plt+0xc80>
   12178:	mov	r0, r6
   1217c:	mov	r2, #5
   12180:	add	r1, pc, r1
   12184:	bl	112ec <dcgettext@plt>
   12188:	ldr	r1, [pc, #128]	; 12210 <close@plt+0xc84>
   1218c:	add	r1, pc, r1
   12190:	mov	r2, r0
   12194:	mov	r0, #1
   12198:	bl	1149c <__printf_chk@plt>
   1219c:	b	11f44 <close@plt+0x9b8>
   121a0:	bl	11304 <__stack_chk_fail@plt>
   121a4:	mov	r1, #10
   121a8:	bl	114f0 <__overflow@plt>
   121ac:	b	11f44 <close@plt+0x9b8>
   121b0:	mov	r1, #10
   121b4:	bl	114f0 <__overflow@plt>
   121b8:	b	11ee4 <close@plt+0x958>
   121bc:	andeq	r6, r1, r0, lsl #4
   121c0:	andeq	r0, r0, r8, lsr r1
   121c4:	andeq	r4, r0, r8, lsr r4
   121c8:	andeq	r4, r0, r0, lsr #8
   121cc:	andeq	r4, r0, r4, lsl r4
   121d0:	andeq	r4, r0, r0, ror #7
   121d4:	andeq	r0, r0, r4, asr r1
   121d8:	andeq	r6, r1, r0, lsl #5
   121dc:	andeq	r6, r1, ip, ror #4
   121e0:	andeq	r6, r1, r8, asr r2
   121e4:	andeq	r4, r0, r4, lsl r3
   121e8:	andeq	r4, r0, r0, lsl #6
   121ec:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   121f0:			; <UNDEFINED> instruction: 0x000042bc
   121f4:	muleq	r0, ip, r2
   121f8:	andeq	r4, r0, r8, lsl #5
   121fc:	andeq	r4, r0, r0, ror #4
   12200:	andeq	r4, r0, r4, asr #3
   12204:	andeq	r4, r0, ip, lsr #3
   12208:	muleq	r0, r0, r1
   1220c:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   12210:	strdeq	r4, [r0], -r0
   12214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12218:	sub	sp, sp, #436	; 0x1b4
   1221c:	ldr	r5, [pc, #1296]	; 12734 <close@plt+0x11a8>
   12220:	mov	r4, r0
   12224:	ldr	r3, [pc, #1292]	; 12738 <close@plt+0x11ac>
   12228:	add	r5, pc, r5
   1222c:	ldrb	r2, [r0, #8]
   12230:	ldr	r7, [r5, r3]
   12234:	cmp	r2, #47	; 0x2f
   12238:	ldr	r3, [r7]
   1223c:	str	r3, [sp, #428]	; 0x1ac
   12240:	beq	12714 <close@plt+0x1188>
   12244:	ldr	r3, [pc, #1264]	; 1273c <close@plt+0x11b0>
   12248:	add	r6, r0, #8
   1224c:	add	ip, r0, #40	; 0x28
   12250:	add	lr, sp, #128	; 0x80
   12254:	add	r3, pc, r3
   12258:	cmp	r6, ip
   1225c:	ldm	r3, {r0, r1}
   12260:	add	r3, lr, #5
   12264:	str	r0, [sp, #128]	; 0x80
   12268:	strh	r1, [sp, #132]	; 0x84
   1226c:	bcs	122a0 <close@plt+0xd14>
   12270:	cmp	r2, #0
   12274:	beq	122a0 <close@plt+0xd14>
   12278:	rsb	r0, r6, ip
   1227c:	mov	ip, r6
   12280:	add	r0, r3, r0
   12284:	b	12294 <close@plt+0xd08>
   12288:	ldrb	r2, [ip, #1]!
   1228c:	cmp	r2, #0
   12290:	beq	122a0 <close@plt+0xd14>
   12294:	strb	r2, [r3], #1
   12298:	cmp	r3, r0
   1229c:	bne	12288 <close@plt+0xcfc>
   122a0:	mov	r8, #0
   122a4:	mov	r1, lr
   122a8:	mov	r0, #3
   122ac:	add	r2, sp, #24
   122b0:	strb	r8, [r3]
   122b4:	bl	1155c <__xstat64@plt>
   122b8:	cmp	r0, r8
   122bc:	movne	r9, #63	; 0x3f
   122c0:	bne	122d8 <close@plt+0xd4c>
   122c4:	ldr	r3, [sp, #40]	; 0x28
   122c8:	ldr	r8, [sp, #96]	; 0x60
   122cc:	tst	r3, #16
   122d0:	moveq	r9, #42	; 0x2a
   122d4:	movne	r9, #32
   122d8:	add	fp, r4, #44	; 0x2c
   122dc:	ldr	r1, [pc, #1116]	; 12740 <close@plt+0x11b4>
   122e0:	mov	r0, #1
   122e4:	mov	r2, #32
   122e8:	mov	r3, fp
   122ec:	add	r1, pc, r1
   122f0:	bl	1149c <__printf_chk@plt>
   122f4:	ldr	r3, [pc, #1096]	; 12744 <close@plt+0x11b8>
   122f8:	add	r3, pc, r3
   122fc:	ldrb	r3, [r3, #3]
   12300:	cmp	r3, #0
   12304:	beq	123c0 <close@plt+0xe34>
   12308:	add	r0, r4, #76	; 0x4c
   1230c:	cmp	fp, r0
   12310:	bcs	126ac <close@plt+0x1120>
   12314:	ldrb	ip, [r4, #44]	; 0x2c
   12318:	add	sl, sp, #168	; 0xa8
   1231c:	cmp	ip, #0
   12320:	beq	126f8 <close@plt+0x116c>
   12324:	add	r0, r0, sl
   12328:	mov	r3, fp
   1232c:	add	r1, sl, #1
   12330:	rsb	r0, fp, r0
   12334:	b	12348 <close@plt+0xdbc>
   12338:	ldrb	ip, [r3, #1]!
   1233c:	add	r1, r1, #1
   12340:	cmp	ip, #0
   12344:	beq	12358 <close@plt+0xdcc>
   12348:	cmp	r1, r0
   1234c:	strb	ip, [r1, #-1]
   12350:	mov	r2, r1
   12354:	bne	12338 <close@plt+0xdac>
   12358:	mov	r0, sl
   1235c:	mov	sl, #0
   12360:	strb	sl, [r2]
   12364:	bl	11250 <getpwnam@plt>
   12368:	subs	fp, r0, #0
   1236c:	beq	126d0 <close@plt+0x1144>
   12370:	ldr	r3, [fp, #16]
   12374:	mov	r1, #44	; 0x2c
   12378:	mov	r0, r3
   1237c:	str	r3, [sp, #12]
   12380:	bl	11430 <strchr@plt>
   12384:	ldr	r3, [sp, #12]
   12388:	cmp	r0, #0
   1238c:	strbne	sl, [r0]
   12390:	ldr	r1, [fp]
   12394:	ldrne	r3, [fp, #16]
   12398:	mov	r0, r3
   1239c:	bl	11cb8 <close@plt+0x72c>
   123a0:	ldr	r1, [pc, #928]	; 12748 <close@plt+0x11bc>
   123a4:	add	r1, pc, r1
   123a8:	mov	sl, r0
   123ac:	mov	r2, r0
   123b0:	mov	r0, #1
   123b4:	bl	1149c <__printf_chk@plt>
   123b8:	mov	r0, sl
   123bc:	bl	11280 <free@plt>
   123c0:	ldr	r1, [pc, #900]	; 1274c <close@plt+0x11c0>
   123c4:	mov	r3, #32
   123c8:	str	r6, [sp]
   123cc:	mov	r2, r9
   123d0:	mov	r0, #1
   123d4:	add	r1, pc, r1
   123d8:	bl	1149c <__printf_chk@plt>
   123dc:	ldr	r3, [pc, #876]	; 12750 <close@plt+0x11c4>
   123e0:	add	r3, pc, r3
   123e4:	ldrb	r3, [r3, #4]
   123e8:	cmp	r3, #0
   123ec:	beq	12480 <close@plt+0xef4>
   123f0:	cmp	r8, #0
   123f4:	beq	125d4 <close@plt+0x1048>
   123f8:	ldr	r6, [pc, #852]	; 12754 <close@plt+0x11c8>
   123fc:	add	r6, pc, r6
   12400:	ldr	r3, [r6, #52]	; 0x34
   12404:	cmp	r3, #0
   12408:	beq	12634 <close@plt+0x10a8>
   1240c:	rsb	r8, r8, r3
   12410:	ldr	r2, [pc, #832]	; 12758 <close@plt+0x11cc>
   12414:	cmp	r8, #59	; 0x3b
   12418:	add	r2, pc, r2
   1241c:	ble	12470 <close@plt+0xee4>
   12420:	movw	r3, #20863	; 0x517f
   12424:	movt	r3, #1
   12428:	cmp	r8, r3
   1242c:	ble	12644 <close@plt+0x10b8>
   12430:	movw	r3, #17671	; 0x4507
   12434:	movt	r3, #49710	; 0xc22e
   12438:	ldr	r6, [pc, #796]	; 1275c <close@plt+0x11d0>
   1243c:	asr	ip, r8, #31
   12440:	smull	r2, r3, r3, r8
   12444:	add	r6, pc, r6
   12448:	mov	r2, #13
   1244c:	mov	r1, #1
   12450:	add	r8, r3, r8
   12454:	ldr	r3, [pc, #772]	; 12760 <close@plt+0x11d4>
   12458:	mov	r0, r6
   1245c:	rsb	ip, ip, r8, asr #16
   12460:	add	r3, pc, r3
   12464:	str	ip, [sp]
   12468:	bl	11454 <__sprintf_chk@plt>
   1246c:	mov	r2, r6
   12470:	ldr	r1, [pc, #748]	; 12764 <close@plt+0x11d8>
   12474:	mov	r0, #1
   12478:	add	r1, pc, r1
   1247c:	bl	1149c <__printf_chk@plt>
   12480:	ldr	r3, [r4, #340]	; 0x154
   12484:	add	r0, sp, #432	; 0x1b0
   12488:	str	r3, [r0, #-412]!	; 0xfffffe64
   1248c:	bl	113d0 <localtime@plt>
   12490:	subs	r3, r0, #0
   12494:	beq	12600 <close@plt+0x1074>
   12498:	ldr	r2, [pc, #712]	; 12768 <close@plt+0x11dc>
   1249c:	mov	r1, #33	; 0x21
   124a0:	add	r2, pc, r2
   124a4:	add	r6, r2, #16
   124a8:	ldr	r2, [r2, #56]	; 0x38
   124ac:	mov	r0, r6
   124b0:	bl	113b8 <strftime@plt>
   124b4:	mov	r2, r6
   124b8:	ldr	r1, [pc, #684]	; 1276c <close@plt+0x11e0>
   124bc:	mov	r0, #1
   124c0:	add	r1, pc, r1
   124c4:	bl	1149c <__printf_chk@plt>
   124c8:	ldr	r3, [pc, #672]	; 12770 <close@plt+0x11e4>
   124cc:	add	r3, pc, r3
   124d0:	ldrb	r3, [r3, #5]
   124d4:	cmp	r3, #0
   124d8:	beq	12590 <close@plt+0x1004>
   124dc:	ldrb	r2, [r4, #76]	; 0x4c
   124e0:	cmp	r2, #0
   124e4:	beq	12590 <close@plt+0x1004>
   124e8:	add	r1, r4, #76	; 0x4c
   124ec:	add	r4, r4, #332	; 0x14c
   124f0:	cmp	r1, r4
   124f4:	add	sl, sp, #168	; 0xa8
   124f8:	bcs	12700 <close@plt+0x1174>
   124fc:	add	r4, r4, sl
   12500:	add	r3, sl, #1
   12504:	rsb	r0, r1, r4
   12508:	b	1251c <close@plt+0xf90>
   1250c:	ldrb	r2, [r1, #1]!
   12510:	add	r3, r3, #1
   12514:	cmp	r2, #0
   12518:	beq	1252c <close@plt+0xfa0>
   1251c:	cmp	r3, r0
   12520:	strb	r2, [r3, #-1]
   12524:	mov	ip, r3
   12528:	bne	1250c <close@plt+0xf80>
   1252c:	mov	r4, #0
   12530:	mov	r0, sl
   12534:	mov	r1, #58	; 0x3a
   12538:	strb	r4, [ip]
   1253c:	bl	11430 <strchr@plt>
   12540:	cmp	r0, #0
   12544:	strbne	r4, [r0]
   12548:	ldrb	r3, [sp, #168]	; 0xa8
   1254c:	addne	r6, r0, #1
   12550:	moveq	r6, r0
   12554:	cmp	r3, #0
   12558:	bne	12620 <close@plt+0x1094>
   1255c:	mov	r4, sl
   12560:	cmp	r6, #0
   12564:	beq	126b8 <close@plt+0x112c>
   12568:	ldr	r1, [pc, #516]	; 12774 <close@plt+0x11e8>
   1256c:	mov	r3, r6
   12570:	mov	r0, #1
   12574:	mov	r2, r4
   12578:	add	r1, pc, r1
   1257c:	bl	1149c <__printf_chk@plt>
   12580:	cmp	r4, sl
   12584:	beq	12590 <close@plt+0x1004>
   12588:	mov	r0, r4
   1258c:	bl	11280 <free@plt>
   12590:	ldr	r3, [pc, #480]	; 12778 <close@plt+0x11ec>
   12594:	ldr	r3, [r5, r3]
   12598:	ldr	r0, [r3]
   1259c:	ldr	r3, [r0, #20]
   125a0:	ldr	r2, [r0, #24]
   125a4:	cmp	r3, r2
   125a8:	addcc	r1, r3, #1
   125ac:	strcc	r1, [r0, #20]
   125b0:	movcc	r2, #10
   125b4:	strbcc	r2, [r3]
   125b8:	bcs	12708 <close@plt+0x117c>
   125bc:	ldr	r2, [sp, #428]	; 0x1ac
   125c0:	ldr	r3, [r7]
   125c4:	cmp	r2, r3
   125c8:	bne	12730 <close@plt+0x11a4>
   125cc:	add	sp, sp, #436	; 0x1b4
   125d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125d4:	ldr	r1, [pc, #416]	; 1277c <close@plt+0x11f0>
   125d8:	mov	r0, r8
   125dc:	mov	r2, #5
   125e0:	add	r1, pc, r1
   125e4:	bl	112ec <dcgettext@plt>
   125e8:	ldr	r1, [pc, #400]	; 12780 <close@plt+0x11f4>
   125ec:	add	r1, pc, r1
   125f0:	mov	r2, r0
   125f4:	mov	r0, #1
   125f8:	bl	1149c <__printf_chk@plt>
   125fc:	b	12480 <close@plt+0xef4>
   12600:	ldr	r0, [sp, #20]
   12604:	ldr	r2, [pc, #376]	; 12784 <close@plt+0x11f8>
   12608:	add	r2, pc, r2
   1260c:	asr	r1, r0, #31
   12610:	add	r2, r2, #16
   12614:	bl	12d00 <close_stdout@@Base+0x214>
   12618:	mov	r2, r0
   1261c:	b	124b8 <close@plt+0xf2c>
   12620:	mov	r0, sl
   12624:	bl	12a9c <close@plt+0x1510>
   12628:	subs	r4, r0, #0
   1262c:	bne	12560 <close@plt+0xfd4>
   12630:	b	1255c <close@plt+0xfd0>
   12634:	add	r0, r6, #52	; 0x34
   12638:	bl	112bc <time@plt>
   1263c:	ldr	r3, [r6, #52]	; 0x34
   12640:	b	1240c <close@plt+0xe80>
   12644:	movw	r3, #46021	; 0xb3c5
   12648:	movt	r3, #37282	; 0x91a2
   1264c:	asr	r0, r8, #31
   12650:	mov	r9, #3600	; 0xe10
   12654:	smull	r2, r3, r3, r8
   12658:	movw	ip, #34953	; 0x8889
   1265c:	movt	ip, #34952	; 0x8888
   12660:	ldr	r6, [pc, #288]	; 12788 <close@plt+0x11fc>
   12664:	add	lr, r3, r8
   12668:	ldr	r3, [pc, #284]	; 1278c <close@plt+0x1200>
   1266c:	add	r6, pc, r6
   12670:	mov	r2, #13
   12674:	rsb	lr, r0, lr, asr #11
   12678:	str	lr, [sp]
   1267c:	mov	r1, #1
   12680:	add	r3, pc, r3
   12684:	mls	r8, r9, lr, r8
   12688:	mov	r0, r6
   1268c:	smull	lr, ip, ip, r8
   12690:	asr	lr, r8, #31
   12694:	add	ip, ip, r8
   12698:	rsb	ip, lr, ip, asr #5
   1269c:	str	ip, [sp, #4]
   126a0:	bl	11454 <__sprintf_chk@plt>
   126a4:	mov	r2, r6
   126a8:	b	12470 <close@plt+0xee4>
   126ac:	add	sl, sp, #168	; 0xa8
   126b0:	mov	r2, sl
   126b4:	b	12358 <close@plt+0xdcc>
   126b8:	ldr	r1, [pc, #208]	; 12790 <close@plt+0x1204>
   126bc:	mov	r2, r4
   126c0:	mov	r0, #1
   126c4:	add	r1, pc, r1
   126c8:	bl	1149c <__printf_chk@plt>
   126cc:	b	12580 <close@plt+0xff4>
   126d0:	ldr	r1, [pc, #188]	; 12794 <close@plt+0x1208>
   126d4:	mov	r2, #5
   126d8:	add	r1, pc, r1
   126dc:	bl	112ec <dcgettext@plt>
   126e0:	ldr	r1, [pc, #176]	; 12798 <close@plt+0x120c>
   126e4:	add	r1, pc, r1
   126e8:	mov	r2, r0
   126ec:	mov	r0, #1
   126f0:	bl	1149c <__printf_chk@plt>
   126f4:	b	123c0 <close@plt+0xe34>
   126f8:	mov	r2, sl
   126fc:	b	12358 <close@plt+0xdcc>
   12700:	mov	ip, sl
   12704:	b	1252c <close@plt+0xfa0>
   12708:	mov	r1, #10
   1270c:	bl	114f0 <__overflow@plt>
   12710:	b	125bc <close@plt+0x1030>
   12714:	add	r6, r0, #8
   12718:	add	ip, r0, #40	; 0x28
   1271c:	add	lr, sp, #128	; 0x80
   12720:	cmp	r6, ip
   12724:	mov	r3, lr
   12728:	bcc	12278 <close@plt+0xcec>
   1272c:	b	122a0 <close@plt+0xd14>
   12730:	bl	11304 <__stack_chk_fail@plt>
   12734:	ldrdeq	r5, [r1], -r0
   12738:	andeq	r0, r0, r8, lsr r1
   1273c:	andeq	r4, r0, ip, ror r0
   12740:	andeq	r3, r0, ip, ror #31
   12744:	andeq	r5, r1, r0, ror lr
   12748:	andeq	r3, r0, r0, asr pc
   1274c:	andeq	r3, r0, ip, lsr #30
   12750:	andeq	r5, r1, r8, lsl #27
   12754:	andeq	r5, r1, r0, asr #27
   12758:			; <UNDEFINED> instruction: 0x00003eb0
   1275c:	andeq	r5, r1, r8, ror sp
   12760:			; <UNDEFINED> instruction: 0x00003eb8
   12764:	andeq	r3, r0, r8, lsr #29
   12768:	andeq	r5, r1, ip, lsl sp
   1276c:			; <UNDEFINED> instruction: 0x00003dbc
   12770:	muleq	r1, ip, ip
   12774:			; <UNDEFINED> instruction: 0x00003db8
   12778:	andeq	r0, r0, r4, asr r1
   1277c:	andeq	r3, r0, r8, asr #26
   12780:	andeq	r3, r0, r4, lsr sp
   12784:			; <UNDEFINED> instruction: 0x00015bb4
   12788:	andeq	r5, r1, r0, asr fp
   1278c:	andeq	r3, r0, ip, lsl #25
   12790:			; <UNDEFINED> instruction: 0x00003bb8
   12794:	andeq	r3, r0, r8, lsl #24
   12798:	andeq	r3, r0, r8, lsl #24
   1279c:	push	{r4, r5, r6, lr}
   127a0:	subs	r4, r0, #0
   127a4:	ldr	r5, [pc, #468]	; 12980 <close@plt+0x13f4>
   127a8:	add	r5, pc, r5
   127ac:	beq	127f4 <close@plt+0x1268>
   127b0:	ldr	r3, [pc, #460]	; 12984 <close@plt+0x13f8>
   127b4:	mov	r2, #5
   127b8:	ldr	r1, [pc, #456]	; 12988 <close@plt+0x13fc>
   127bc:	mov	r0, #0
   127c0:	ldr	r3, [r5, r3]
   127c4:	add	r1, pc, r1
   127c8:	ldr	r6, [r3]
   127cc:	bl	112ec <dcgettext@plt>
   127d0:	ldr	r3, [pc, #436]	; 1298c <close@plt+0x1400>
   127d4:	mov	r1, #1
   127d8:	ldr	r3, [r5, r3]
   127dc:	ldr	r3, [r3]
   127e0:	mov	r2, r0
   127e4:	mov	r0, r6
   127e8:	bl	114b4 <__fprintf_chk@plt>
   127ec:	mov	r0, r4
   127f0:	bl	11418 <exit@plt>
   127f4:	ldr	r1, [pc, #404]	; 12990 <close@plt+0x1404>
   127f8:	mov	r2, #5
   127fc:	add	r1, pc, r1
   12800:	bl	112ec <dcgettext@plt>
   12804:	ldr	r3, [pc, #384]	; 1298c <close@plt+0x1400>
   12808:	ldr	r6, [r5, r3]
   1280c:	ldr	r2, [r6]
   12810:	mov	r1, r0
   12814:	mov	r0, #1
   12818:	bl	1149c <__printf_chk@plt>
   1281c:	ldr	r1, [pc, #368]	; 12994 <close@plt+0x1408>
   12820:	mov	r2, #5
   12824:	mov	r0, r4
   12828:	add	r1, pc, r1
   1282c:	bl	112ec <dcgettext@plt>
   12830:	ldr	r3, [pc, #352]	; 12998 <close@plt+0x140c>
   12834:	ldr	r5, [r5, r3]
   12838:	ldr	r1, [r5]
   1283c:	bl	11238 <fputs_unlocked@plt>
   12840:	ldr	r1, [pc, #340]	; 1299c <close@plt+0x1410>
   12844:	mov	r2, #5
   12848:	mov	r0, r4
   1284c:	add	r1, pc, r1
   12850:	bl	112ec <dcgettext@plt>
   12854:	ldr	r1, [r5]
   12858:	bl	11238 <fputs_unlocked@plt>
   1285c:	ldr	r1, [pc, #316]	; 129a0 <close@plt+0x1414>
   12860:	mov	r2, #5
   12864:	mov	r0, r4
   12868:	add	r1, pc, r1
   1286c:	bl	112ec <dcgettext@plt>
   12870:	ldr	r1, [r5]
   12874:	bl	11238 <fputs_unlocked@plt>
   12878:	ldr	r1, [pc, #292]	; 129a4 <close@plt+0x1418>
   1287c:	mov	r2, #5
   12880:	mov	r0, r4
   12884:	add	r1, pc, r1
   12888:	bl	112ec <dcgettext@plt>
   1288c:	ldr	r1, [r5]
   12890:	bl	11238 <fputs_unlocked@plt>
   12894:	ldr	r1, [pc, #268]	; 129a8 <close@plt+0x141c>
   12898:	mov	r2, #5
   1289c:	mov	r0, r4
   128a0:	add	r1, pc, r1
   128a4:	bl	112ec <dcgettext@plt>
   128a8:	ldr	r2, [pc, #252]	; 129ac <close@plt+0x1420>
   128ac:	add	r2, pc, r2
   128b0:	mov	r1, r0
   128b4:	mov	r0, #1
   128b8:	bl	1149c <__printf_chk@plt>
   128bc:	ldr	r1, [pc, #236]	; 129b0 <close@plt+0x1424>
   128c0:	mov	r2, #5
   128c4:	mov	r0, r4
   128c8:	add	r1, pc, r1
   128cc:	bl	112ec <dcgettext@plt>
   128d0:	ldr	r2, [pc, #220]	; 129b4 <close@plt+0x1428>
   128d4:	ldr	r3, [pc, #220]	; 129b8 <close@plt+0x142c>
   128d8:	add	r2, pc, r2
   128dc:	add	r3, pc, r3
   128e0:	mov	r1, r0
   128e4:	mov	r0, #1
   128e8:	bl	1149c <__printf_chk@plt>
   128ec:	mov	r0, #5
   128f0:	mov	r1, r4
   128f4:	bl	114fc <setlocale@plt>
   128f8:	cmp	r0, #0
   128fc:	beq	12918 <close@plt+0x138c>
   12900:	ldr	r1, [pc, #180]	; 129bc <close@plt+0x1430>
   12904:	mov	r2, #3
   12908:	add	r1, pc, r1
   1290c:	bl	11568 <strncmp@plt>
   12910:	cmp	r0, #0
   12914:	bne	1294c <close@plt+0x13c0>
   12918:	ldr	r1, [pc, #160]	; 129c0 <close@plt+0x1434>
   1291c:	mov	r2, #5
   12920:	mov	r0, #0
   12924:	add	r1, pc, r1
   12928:	bl	112ec <dcgettext@plt>
   1292c:	mov	r5, r0
   12930:	ldr	r0, [r6]
   12934:	bl	12c04 <close_stdout@@Base+0x118>
   12938:	mov	r1, r5
   1293c:	mov	r2, r0
   12940:	mov	r0, #1
   12944:	bl	1149c <__printf_chk@plt>
   12948:	b	127ec <close@plt+0x1260>
   1294c:	ldr	r1, [pc, #112]	; 129c4 <close@plt+0x1438>
   12950:	mov	r2, #5
   12954:	mov	r0, r4
   12958:	add	r1, pc, r1
   1295c:	bl	112ec <dcgettext@plt>
   12960:	mov	r5, r0
   12964:	ldr	r0, [r6]
   12968:	bl	12c04 <close_stdout@@Base+0x118>
   1296c:	mov	r1, r5
   12970:	mov	r2, r0
   12974:	mov	r0, #1
   12978:	bl	1149c <__printf_chk@plt>
   1297c:	b	12918 <close@plt+0x138c>
   12980:	andeq	r5, r1, r0, asr r8
   12984:	andeq	r0, r0, r4, asr #2
   12988:	andeq	r3, r0, r4, ror fp
   1298c:	andeq	r0, r0, r0, ror #2
   12990:	andeq	r3, r0, r4, ror #22
   12994:	andeq	r3, r0, ip, asr fp
   12998:	andeq	r0, r0, r4, asr r1
   1299c:	andeq	r3, r0, r0, lsl #25
   129a0:	muleq	r0, ip, sp
   129a4:			; <UNDEFINED> instruction: 0x00003db0
   129a8:	andeq	r3, r0, ip, asr #27
   129ac:	andeq	r3, r0, r8, lsl lr
   129b0:	andeq	r3, r0, ip, lsl #28
   129b4:	andeq	r3, r0, r4, lsl lr
   129b8:	andeq	r3, r0, r0, lsr #28
   129bc:	andeq	r3, r0, ip, lsl lr
   129c0:	andeq	r3, r0, ip, asr #28
   129c4:	ldrdeq	r3, [r0], -r0
   129c8:	ldr	r2, [pc, #192]	; 12a90 <close@plt+0x1504>
   129cc:	push	{r4, r5, r6, r7, lr}
   129d0:	add	r2, pc, r2
   129d4:	ldr	r5, [pc, #184]	; 12a94 <close@plt+0x1508>
   129d8:	sub	sp, sp, #12
   129dc:	ldr	ip, [pc, #180]	; 12a98 <close@plt+0x150c>
   129e0:	add	r3, sp, #8
   129e4:	mov	lr, #2
   129e8:	mov	r4, #0
   129ec:	ldr	r5, [r2, r5]
   129f0:	add	ip, pc, ip
   129f4:	str	r4, [r3, #-8]!
   129f8:	mov	r6, r1
   129fc:	mov	r2, ip
   12a00:	str	lr, [ip]
   12a04:	ldr	ip, [r5]
   12a08:	mov	r1, r4
   12a0c:	mov	r3, sp
   12a10:	mov	r7, r0
   12a14:	str	ip, [sp, #4]
   12a18:	bl	11538 <getaddrinfo@plt>
   12a1c:	cmp	r0, #0
   12a20:	bne	12a7c <close@plt+0x14f0>
   12a24:	ldr	r3, [sp]
   12a28:	ldr	r0, [r3, #24]
   12a2c:	cmp	r0, r4
   12a30:	moveq	r0, r7
   12a34:	bl	1146c <__strdup@plt>
   12a38:	rsbs	r3, r0, #1
   12a3c:	mov	r4, r0
   12a40:	ldr	r0, [sp]
   12a44:	movcc	r3, #0
   12a48:	cmp	r6, #0
   12a4c:	moveq	r3, #0
   12a50:	cmp	r3, #0
   12a54:	mvnne	r3, #9
   12a58:	strne	r3, [r6]
   12a5c:	bl	1152c <freeaddrinfo@plt>
   12a60:	ldr	r2, [sp, #4]
   12a64:	mov	r0, r4
   12a68:	ldr	r3, [r5]
   12a6c:	cmp	r2, r3
   12a70:	bne	12a8c <close@plt+0x1500>
   12a74:	add	sp, sp, #12
   12a78:	pop	{r4, r5, r6, r7, pc}
   12a7c:	cmp	r6, #0
   12a80:	strne	r0, [r6]
   12a84:	moveq	r4, r6
   12a88:	b	12a60 <close@plt+0x14d4>
   12a8c:	bl	11304 <__stack_chk_fail@plt>
   12a90:	andeq	r5, r1, r8, lsr #12
   12a94:	andeq	r0, r0, r8, lsr r1
   12a98:	andeq	r5, r1, ip, lsl #16
   12a9c:	ldr	r1, [pc, #8]	; 12aac <close@plt+0x1520>
   12aa0:	add	r1, pc, r1
   12aa4:	add	r1, r1, #32
   12aa8:	b	129c8 <close@plt+0x143c>
   12aac:	andeq	r5, r1, ip, asr r7
   12ab0:	ldr	r3, [pc, #8]	; 12ac0 <close@plt+0x1534>
   12ab4:	add	r3, pc, r3
   12ab8:	ldr	r0, [r3, #32]
   12abc:	b	1128c <gai_strerror@plt>
   12ac0:	andeq	r5, r1, r8, asr #14
   12ac4:	ldr	r3, [pc, #8]	; 12ad4 <close@plt+0x1548>
   12ac8:	add	r3, pc, r3
   12acc:	str	r0, [r3]
   12ad0:	bx	lr
   12ad4:	andeq	r5, r1, r8, asr r7
   12ad8:	ldr	r3, [pc, #8]	; 12ae8 <close@plt+0x155c>
   12adc:	add	r3, pc, r3
   12ae0:	strb	r0, [r3, #4]
   12ae4:	bx	lr
   12ae8:	andeq	r5, r1, r4, asr #14

00012aec <close_stdout@@Base>:
   12aec:	push	{r4, r5, r6, r7, lr}
   12af0:	sub	sp, sp, #12
   12af4:	ldr	r4, [pc, #228]	; 12be0 <close_stdout@@Base+0xf4>
   12af8:	ldr	r3, [pc, #228]	; 12be4 <close_stdout@@Base+0xf8>
   12afc:	add	r4, pc, r4
   12b00:	ldr	r3, [r4, r3]
   12b04:	ldr	r0, [r3]
   12b08:	bl	15178 <close_stdout@@Base+0x268c>
   12b0c:	cmp	r0, #0
   12b10:	beq	12b38 <close_stdout@@Base+0x4c>
   12b14:	ldr	r3, [pc, #204]	; 12be8 <close_stdout@@Base+0xfc>
   12b18:	add	r3, pc, r3
   12b1c:	ldrb	r3, [r3, #4]
   12b20:	cmp	r3, #0
   12b24:	beq	12b58 <close_stdout@@Base+0x6c>
   12b28:	bl	11448 <__errno_location@plt>
   12b2c:	ldr	r3, [r0]
   12b30:	cmp	r3, #32
   12b34:	bne	12b58 <close_stdout@@Base+0x6c>
   12b38:	ldr	r3, [pc, #172]	; 12bec <close_stdout@@Base+0x100>
   12b3c:	ldr	r3, [r4, r3]
   12b40:	ldr	r0, [r3]
   12b44:	bl	15178 <close_stdout@@Base+0x268c>
   12b48:	cmp	r0, #0
   12b4c:	bne	12bac <close_stdout@@Base+0xc0>
   12b50:	add	sp, sp, #12
   12b54:	pop	{r4, r5, r6, r7, pc}
   12b58:	ldr	r1, [pc, #144]	; 12bf0 <close_stdout@@Base+0x104>
   12b5c:	mov	r0, #0
   12b60:	mov	r2, #5
   12b64:	add	r1, pc, r1
   12b68:	bl	112ec <dcgettext@plt>
   12b6c:	ldr	r3, [pc, #128]	; 12bf4 <close_stdout@@Base+0x108>
   12b70:	ldr	r5, [pc, r3]
   12b74:	cmp	r5, #0
   12b78:	mov	r6, r0
   12b7c:	beq	12bbc <close_stdout@@Base+0xd0>
   12b80:	bl	11448 <__errno_location@plt>
   12b84:	ldr	r7, [r0]
   12b88:	mov	r0, r5
   12b8c:	bl	144c4 <close_stdout@@Base+0x19d8>
   12b90:	ldr	r2, [pc, #96]	; 12bf8 <close_stdout@@Base+0x10c>
   12b94:	str	r6, [sp]
   12b98:	mov	r1, r7
   12b9c:	add	r2, pc, r2
   12ba0:	mov	r3, r0
   12ba4:	mov	r0, #0
   12ba8:	bl	1137c <error@plt>
   12bac:	ldr	r3, [pc, #72]	; 12bfc <close_stdout@@Base+0x110>
   12bb0:	ldr	r3, [r4, r3]
   12bb4:	ldr	r0, [r3]
   12bb8:	bl	11298 <_exit@plt>
   12bbc:	bl	11448 <__errno_location@plt>
   12bc0:	ldr	r2, [pc, #56]	; 12c00 <close_stdout@@Base+0x114>
   12bc4:	add	r2, pc, r2
   12bc8:	mov	r3, r0
   12bcc:	mov	r0, r5
   12bd0:	ldr	r1, [r3]
   12bd4:	mov	r3, r6
   12bd8:	bl	1137c <error@plt>
   12bdc:	b	12bac <close_stdout@@Base+0xc0>
   12be0:	strdeq	r5, [r1], -ip
   12be4:	andeq	r0, r0, r4, asr r1
   12be8:	andeq	r5, r1, r8, lsl #14
   12bec:	andeq	r0, r0, r4, asr #2
   12bf0:	andeq	r3, r0, r0, ror sp
   12bf4:			; <UNDEFINED> instruction: 0x000156b0
   12bf8:	andeq	r3, r0, r4, asr #26
   12bfc:	andeq	r0, r0, r8, asr r1
   12c00:	andeq	r3, r0, r0, lsr #26
   12c04:	ldrb	r3, [r0]
   12c08:	cmp	r3, #47	; 0x2f
   12c0c:	bne	12c28 <close_stdout@@Base+0x13c>
   12c10:	add	r2, r0, #1
   12c14:	mov	r0, r2
   12c18:	add	r2, r2, #1
   12c1c:	ldrb	r3, [r0]
   12c20:	cmp	r3, #47	; 0x2f
   12c24:	beq	12c14 <close_stdout@@Base+0x128>
   12c28:	cmp	r3, #0
   12c2c:	bxeq	lr
   12c30:	mov	r2, r0
   12c34:	mov	r1, #0
   12c38:	cmp	r3, #47	; 0x2f
   12c3c:	moveq	r1, #1
   12c40:	beq	12c50 <close_stdout@@Base+0x164>
   12c44:	cmp	r1, #0
   12c48:	movne	r0, r2
   12c4c:	movne	r1, #0
   12c50:	ldrb	r3, [r2, #1]!
   12c54:	cmp	r3, #0
   12c58:	bne	12c38 <close_stdout@@Base+0x14c>
   12c5c:	bx	lr
   12c60:	push	{r4, lr}
   12c64:	mov	r4, r0
   12c68:	bl	11424 <strlen@plt>
   12c6c:	cmp	r0, #1
   12c70:	popls	{r4, pc}
   12c74:	sub	r3, r0, #1
   12c78:	ldrb	r2, [r4, r3]
   12c7c:	cmp	r2, #47	; 0x2f
   12c80:	popne	{r4, pc}
   12c84:	mov	r0, r3
   12c88:	cmp	r0, #1
   12c8c:	sub	r3, r3, #1
   12c90:	beq	12ca4 <close_stdout@@Base+0x1b8>
   12c94:	ldrb	r2, [r4, r3]
   12c98:	cmp	r2, #47	; 0x2f
   12c9c:	popne	{r4, pc}
   12ca0:	b	12c84 <close_stdout@@Base+0x198>
   12ca4:	pop	{r4, pc}
   12ca8:	push	{r3, lr}
   12cac:	mov	r1, #0
   12cb0:	bl	114fc <setlocale@plt>
   12cb4:	cmp	r0, #0
   12cb8:	beq	12cf4 <close_stdout@@Base+0x208>
   12cbc:	ldrb	r3, [r0]
   12cc0:	cmp	r3, #67	; 0x43
   12cc4:	bne	12cdc <close_stdout@@Base+0x1f0>
   12cc8:	ldrb	r3, [r0, #1]
   12ccc:	cmp	r3, #0
   12cd0:	bne	12cdc <close_stdout@@Base+0x1f0>
   12cd4:	mov	r0, r3
   12cd8:	pop	{r3, pc}
   12cdc:	ldr	r1, [pc, #24]	; 12cfc <close_stdout@@Base+0x210>
   12ce0:	add	r1, pc, r1
   12ce4:	bl	1125c <strcmp@plt>
   12ce8:	adds	r0, r0, #0
   12cec:	movne	r0, #1
   12cf0:	pop	{r3, pc}
   12cf4:	mov	r0, #1
   12cf8:	pop	{r3, pc}
   12cfc:	andeq	r3, r0, r8, lsl #24
   12d00:	push	{r4, r5, r6, r7, r8, lr}
   12d04:	mov	r4, r0
   12d08:	mov	r5, r1
   12d0c:	cmp	r4, #0
   12d10:	sbcs	r3, r5, #0
   12d14:	add	r6, r2, #19
   12d18:	mov	r3, #0
   12d1c:	strb	r3, [r2, #20]
   12d20:	blt	12d70 <close_stdout@@Base+0x284>
   12d24:	mov	r0, r4
   12d28:	mov	r1, r5
   12d2c:	mov	r2, #10
   12d30:	mov	r3, #0
   12d34:	bl	15824 <close_stdout@@Base+0x2d38>
   12d38:	mov	r7, r6
   12d3c:	mov	r0, r4
   12d40:	mov	r1, r5
   12d44:	mov	r3, #0
   12d48:	add	ip, r2, #48	; 0x30
   12d4c:	mov	r2, #10
   12d50:	strb	ip, [r6], #-1
   12d54:	bl	15824 <close_stdout@@Base+0x2d38>
   12d58:	mov	r4, r0
   12d5c:	mov	r5, r1
   12d60:	orrs	r3, r4, r5
   12d64:	bne	12d24 <close_stdout@@Base+0x238>
   12d68:	mov	r0, r7
   12d6c:	pop	{r4, r5, r6, r7, r8, pc}
   12d70:	mov	r0, r4
   12d74:	mov	r1, r5
   12d78:	mov	r2, #10
   12d7c:	mov	r3, #0
   12d80:	bl	15824 <close_stdout@@Base+0x2d38>
   12d84:	mov	r8, r6
   12d88:	mov	r0, r4
   12d8c:	mov	r1, r5
   12d90:	mov	r3, #0
   12d94:	rsb	ip, r2, #48	; 0x30
   12d98:	mov	r2, #10
   12d9c:	strb	ip, [r6], #-1
   12da0:	bl	15824 <close_stdout@@Base+0x2d38>
   12da4:	mov	r4, r0
   12da8:	mov	r5, r1
   12dac:	orrs	r3, r4, r5
   12db0:	bne	12d70 <close_stdout@@Base+0x284>
   12db4:	mov	r7, r6
   12db8:	mov	r3, #45	; 0x2d
   12dbc:	mov	r0, r7
   12dc0:	strb	r3, [r8, #-1]
   12dc4:	pop	{r4, r5, r6, r7, r8, pc}
   12dc8:	push	{r3, r4, r5, r6, r7, lr}
   12dcc:	subs	r4, r0, #0
   12dd0:	ldr	r5, [pc, #172]	; 12e84 <close_stdout@@Base+0x398>
   12dd4:	add	r5, pc, r5
   12dd8:	beq	12e60 <close_stdout@@Base+0x374>
   12ddc:	mov	r1, #47	; 0x2f
   12de0:	bl	11508 <strrchr@plt>
   12de4:	subs	r6, r0, #0
   12de8:	beq	12e44 <close_stdout@@Base+0x358>
   12dec:	add	r7, r6, #1
   12df0:	rsb	r3, r4, r7
   12df4:	cmp	r3, #6
   12df8:	ble	12e44 <close_stdout@@Base+0x358>
   12dfc:	ldr	r1, [pc, #132]	; 12e88 <close_stdout@@Base+0x39c>
   12e00:	sub	r0, r6, #6
   12e04:	mov	r2, #7
   12e08:	add	r1, pc, r1
   12e0c:	bl	11568 <strncmp@plt>
   12e10:	cmp	r0, #0
   12e14:	bne	12e44 <close_stdout@@Base+0x358>
   12e18:	ldr	r1, [pc, #108]	; 12e8c <close_stdout@@Base+0x3a0>
   12e1c:	mov	r0, r7
   12e20:	mov	r2, #3
   12e24:	add	r1, pc, r1
   12e28:	bl	11568 <strncmp@plt>
   12e2c:	cmp	r0, #0
   12e30:	movne	r4, r7
   12e34:	ldreq	r3, [pc, #84]	; 12e90 <close_stdout@@Base+0x3a4>
   12e38:	addeq	r4, r6, #4
   12e3c:	ldreq	r3, [r5, r3]
   12e40:	streq	r4, [r3]
   12e44:	ldr	r2, [pc, #72]	; 12e94 <close_stdout@@Base+0x3a8>
   12e48:	ldr	r3, [pc, #72]	; 12e98 <close_stdout@@Base+0x3ac>
   12e4c:	ldr	r2, [r5, r2]
   12e50:	str	r4, [r2]
   12e54:	ldr	r3, [r5, r3]
   12e58:	str	r4, [r3]
   12e5c:	pop	{r3, r4, r5, r6, r7, pc}
   12e60:	ldr	r3, [pc, #52]	; 12e9c <close_stdout@@Base+0x3b0>
   12e64:	mov	r1, #1
   12e68:	ldr	r0, [pc, #48]	; 12ea0 <close_stdout@@Base+0x3b4>
   12e6c:	mov	r2, #55	; 0x37
   12e70:	ldr	r3, [r5, r3]
   12e74:	add	r0, pc, r0
   12e78:	ldr	r3, [r3]
   12e7c:	bl	11334 <fwrite@plt>
   12e80:	bl	11574 <abort@plt>
   12e84:	andeq	r5, r1, r4, lsr #4
   12e88:	andeq	r3, r0, r0, lsr #22
   12e8c:	andeq	r3, r0, ip, lsl #22
   12e90:	andeq	r0, r0, r8, ror #2
   12e94:	andeq	r0, r0, r0, ror #2
   12e98:	andeq	r0, r0, ip, asr r1
   12e9c:	andeq	r0, r0, r4, asr #2
   12ea0:	andeq	r3, r0, ip, ror sl
   12ea4:	push	{r3, lr}
   12ea8:	mov	r3, r0
   12eac:	mov	r2, #0
   12eb0:	cmp	r1, #8
   12eb4:	str	r2, [r3], #4
   12eb8:	add	r3, r3, #4
   12ebc:	str	r2, [r0, #4]
   12ec0:	str	r2, [r3], #4
   12ec4:	str	r2, [r3], #4
   12ec8:	str	r2, [r3], #4
   12ecc:	str	r2, [r3], #4
   12ed0:	str	r2, [r3], #4
   12ed4:	str	r2, [r3], #4
   12ed8:	str	r2, [r3], #4
   12edc:	str	r2, [r3], #4
   12ee0:	str	r2, [r3], #4
   12ee4:	str	r2, [r3]
   12ee8:	beq	12ef4 <close_stdout@@Base+0x408>
   12eec:	str	r1, [r0]
   12ef0:	pop	{r3, pc}
   12ef4:	bl	11574 <abort@plt>
   12ef8:	push	{r4, r5, r6, lr}
   12efc:	mov	r4, r0
   12f00:	mov	r6, r1
   12f04:	mov	r0, #0
   12f08:	mov	r1, r4
   12f0c:	mov	r2, #5
   12f10:	bl	112ec <dcgettext@plt>
   12f14:	cmp	r0, r4
   12f18:	mov	r5, r0
   12f1c:	beq	12f24 <close_stdout@@Base+0x438>
   12f20:	pop	{r4, r5, r6, pc}
   12f24:	bl	151f8 <close_stdout@@Base+0x270c>
   12f28:	ldrb	r3, [r0]
   12f2c:	bic	r3, r3, #32
   12f30:	cmp	r3, #85	; 0x55
   12f34:	bne	12fa8 <close_stdout@@Base+0x4bc>
   12f38:	ldrb	r3, [r0, #1]
   12f3c:	bic	r3, r3, #32
   12f40:	cmp	r3, #84	; 0x54
   12f44:	bne	12f94 <close_stdout@@Base+0x4a8>
   12f48:	ldrb	r3, [r0, #2]
   12f4c:	bic	r3, r3, #32
   12f50:	cmp	r3, #70	; 0x46
   12f54:	bne	12f94 <close_stdout@@Base+0x4a8>
   12f58:	ldrb	r3, [r0, #3]
   12f5c:	cmp	r3, #45	; 0x2d
   12f60:	bne	12f94 <close_stdout@@Base+0x4a8>
   12f64:	ldrb	r3, [r0, #4]
   12f68:	cmp	r3, #56	; 0x38
   12f6c:	bne	12f94 <close_stdout@@Base+0x4a8>
   12f70:	ldrb	r3, [r0, #5]
   12f74:	cmp	r3, #0
   12f78:	bne	12f94 <close_stdout@@Base+0x4a8>
   12f7c:	ldrb	r3, [r5]
   12f80:	cmp	r3, #96	; 0x60
   12f84:	beq	13020 <close_stdout@@Base+0x534>
   12f88:	ldr	r0, [pc, #180]	; 13044 <close_stdout@@Base+0x558>
   12f8c:	add	r0, pc, r0
   12f90:	pop	{r4, r5, r6, pc}
   12f94:	cmp	r6, #7
   12f98:	beq	1302c <close_stdout@@Base+0x540>
   12f9c:	ldr	r0, [pc, #164]	; 13048 <close_stdout@@Base+0x55c>
   12fa0:	add	r0, pc, r0
   12fa4:	pop	{r4, r5, r6, pc}
   12fa8:	cmp	r3, #71	; 0x47
   12fac:	bne	12f94 <close_stdout@@Base+0x4a8>
   12fb0:	ldrb	r3, [r0, #1]
   12fb4:	bic	r3, r3, #32
   12fb8:	cmp	r3, #66	; 0x42
   12fbc:	bne	12f94 <close_stdout@@Base+0x4a8>
   12fc0:	ldrb	r3, [r0, #2]
   12fc4:	cmp	r3, #49	; 0x31
   12fc8:	bne	12f94 <close_stdout@@Base+0x4a8>
   12fcc:	ldrb	r3, [r0, #3]
   12fd0:	cmp	r3, #56	; 0x38
   12fd4:	bne	12f94 <close_stdout@@Base+0x4a8>
   12fd8:	ldrb	r3, [r0, #4]
   12fdc:	cmp	r3, #48	; 0x30
   12fe0:	bne	12f94 <close_stdout@@Base+0x4a8>
   12fe4:	ldrb	r3, [r0, #5]
   12fe8:	cmp	r3, #51	; 0x33
   12fec:	bne	12f94 <close_stdout@@Base+0x4a8>
   12ff0:	ldrb	r3, [r0, #6]
   12ff4:	cmp	r3, #48	; 0x30
   12ff8:	bne	12f94 <close_stdout@@Base+0x4a8>
   12ffc:	ldrb	r3, [r0, #7]
   13000:	cmp	r3, #0
   13004:	bne	12f94 <close_stdout@@Base+0x4a8>
   13008:	ldrb	r3, [r5]
   1300c:	cmp	r3, #96	; 0x60
   13010:	beq	13038 <close_stdout@@Base+0x54c>
   13014:	ldr	r0, [pc, #48]	; 1304c <close_stdout@@Base+0x560>
   13018:	add	r0, pc, r0
   1301c:	pop	{r4, r5, r6, pc}
   13020:	ldr	r0, [pc, #40]	; 13050 <close_stdout@@Base+0x564>
   13024:	add	r0, pc, r0
   13028:	pop	{r4, r5, r6, pc}
   1302c:	ldr	r0, [pc, #32]	; 13054 <close_stdout@@Base+0x568>
   13030:	add	r0, pc, r0
   13034:	pop	{r4, r5, r6, pc}
   13038:	ldr	r0, [pc, #24]	; 13058 <close_stdout@@Base+0x56c>
   1303c:	add	r0, pc, r0
   13040:	pop	{r4, r5, r6, pc}
   13044:	andeq	r3, r0, r8, asr #19
   13048:			; <UNDEFINED> instruction: 0x000039bc
   1304c:	andeq	r3, r0, r0, asr #18
   13050:	andeq	r3, r0, r4, asr #18
   13054:	andeq	r3, r0, r0, lsr r9
   13058:	andeq	r3, r0, r8, lsr #18
   1305c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13060:	sub	sp, sp, #124	; 0x7c
   13064:	ldr	ip, [pc, #3304]	; 13d54 <close_stdout@@Base+0x1268>
   13068:	mov	sl, r1
   1306c:	str	r0, [sp, #40]	; 0x28
   13070:	mov	r8, r3
   13074:	ldr	r0, [pc, #3292]	; 13d58 <close_stdout@@Base+0x126c>
   13078:	add	ip, pc, ip
   1307c:	str	r2, [sp, #32]
   13080:	ldr	r1, [sp, #164]	; 0xa4
   13084:	mov	r3, ip
   13088:	ldr	r0, [ip, r0]
   1308c:	ldr	r2, [sp, #172]	; 0xac
   13090:	ubfx	r1, r1, #1, #1
   13094:	str	r1, [sp, #36]	; 0x24
   13098:	str	r0, [sp, #56]	; 0x38
   1309c:	ldr	r0, [sp, #168]	; 0xa8
   130a0:	ldr	r1, [sp, #176]	; 0xb0
   130a4:	str	r2, [sp, #72]	; 0x48
   130a8:	str	r0, [sp, #48]	; 0x30
   130ac:	ldr	r0, [sp, #56]	; 0x38
   130b0:	str	r1, [sp, #68]	; 0x44
   130b4:	ldr	r3, [r0]
   130b8:	str	r3, [sp, #116]	; 0x74
   130bc:	bl	1134c <__ctype_get_mb_cur_max@plt>
   130c0:	ldr	r2, [sp, #160]	; 0xa0
   130c4:	str	r0, [sp, #64]	; 0x40
   130c8:	cmp	r2, #8
   130cc:	addls	pc, pc, r2, lsl #2
   130d0:	b	13c30 <close_stdout@@Base+0x1144>
   130d4:	b	130f8 <close_stdout@@Base+0x60c>
   130d8:	b	13948 <close_stdout@@Base+0xe5c>
   130dc:	b	13978 <close_stdout@@Base+0xe8c>
   130e0:	b	13828 <close_stdout@@Base+0xd3c>
   130e4:	b	13868 <close_stdout@@Base+0xd7c>
   130e8:	b	13894 <close_stdout@@Base+0xda8>
   130ec:	b	138b4 <close_stdout@@Base+0xdc8>
   130f0:	b	138b4 <close_stdout@@Base+0xdc8>
   130f4:	b	138b4 <close_stdout@@Base+0xdc8>
   130f8:	mov	r2, #0
   130fc:	str	r2, [sp, #36]	; 0x24
   13100:	mov	r9, r2
   13104:	str	r2, [sp, #24]
   13108:	str	r2, [sp, #28]
   1310c:	str	r2, [sp, #52]	; 0x34
   13110:	ldr	r0, [sp, #36]	; 0x24
   13114:	mov	fp, #0
   13118:	ldr	r1, [sp, #24]
   1311c:	eor	r2, r0, #1
   13120:	eor	r3, r1, #1
   13124:	and	r3, r2, r3
   13128:	and	r2, r1, r0
   1312c:	str	r3, [sp, #44]	; 0x2c
   13130:	str	r2, [sp, #76]	; 0x4c
   13134:	cmn	r8, #1
   13138:	beq	134b8 <close_stdout@@Base+0x9cc>
   1313c:	subs	r3, fp, r8
   13140:	movne	r3, #1
   13144:	cmp	r3, #0
   13148:	beq	134d0 <close_stdout@@Base+0x9e4>
   1314c:	ldr	r3, [sp, #28]
   13150:	ldr	r0, [sp, #24]
   13154:	adds	r7, r3, #0
   13158:	movne	r7, #1
   1315c:	ands	r6, r7, r0
   13160:	bne	139bc <close_stdout@@Base+0xed0>
   13164:	ldr	r1, [sp, #32]
   13168:	add	r5, r1, fp
   1316c:	ldrb	r4, [r5]
   13170:	cmp	r4, #126	; 0x7e
   13174:	addls	pc, pc, r4, lsl #2
   13178:	b	1373c <close_stdout@@Base+0xc50>
   1317c:	b	13648 <close_stdout@@Base+0xb5c>
   13180:	b	1373c <close_stdout@@Base+0xc50>
   13184:	b	1373c <close_stdout@@Base+0xc50>
   13188:	b	1373c <close_stdout@@Base+0xc50>
   1318c:	b	1373c <close_stdout@@Base+0xc50>
   13190:	b	1373c <close_stdout@@Base+0xc50>
   13194:	b	1373c <close_stdout@@Base+0xc50>
   13198:	b	13630 <close_stdout@@Base+0xb44>
   1319c:	b	13618 <close_stdout@@Base+0xb2c>
   131a0:	b	13640 <close_stdout@@Base+0xb54>
   131a4:	b	13638 <close_stdout@@Base+0xb4c>
   131a8:	b	13628 <close_stdout@@Base+0xb3c>
   131ac:	b	13620 <close_stdout@@Base+0xb34>
   131b0:	b	135e4 <close_stdout@@Base+0xaf8>
   131b4:	b	1373c <close_stdout@@Base+0xc50>
   131b8:	b	1373c <close_stdout@@Base+0xc50>
   131bc:	b	1373c <close_stdout@@Base+0xc50>
   131c0:	b	1373c <close_stdout@@Base+0xc50>
   131c4:	b	1373c <close_stdout@@Base+0xc50>
   131c8:	b	1373c <close_stdout@@Base+0xc50>
   131cc:	b	1373c <close_stdout@@Base+0xc50>
   131d0:	b	1373c <close_stdout@@Base+0xc50>
   131d4:	b	1373c <close_stdout@@Base+0xc50>
   131d8:	b	1373c <close_stdout@@Base+0xc50>
   131dc:	b	1373c <close_stdout@@Base+0xc50>
   131e0:	b	1373c <close_stdout@@Base+0xc50>
   131e4:	b	1373c <close_stdout@@Base+0xc50>
   131e8:	b	1373c <close_stdout@@Base+0xc50>
   131ec:	b	1373c <close_stdout@@Base+0xc50>
   131f0:	b	1373c <close_stdout@@Base+0xc50>
   131f4:	b	1373c <close_stdout@@Base+0xc50>
   131f8:	b	1373c <close_stdout@@Base+0xc50>
   131fc:	b	13570 <close_stdout@@Base+0xa84>
   13200:	b	13570 <close_stdout@@Base+0xa84>
   13204:	b	13570 <close_stdout@@Base+0xa84>
   13208:	b	13568 <close_stdout@@Base+0xa7c>
   1320c:	b	13570 <close_stdout@@Base+0xa84>
   13210:	b	13444 <close_stdout@@Base+0x958>
   13214:	b	13570 <close_stdout@@Base+0xa84>
   13218:	b	136e4 <close_stdout@@Base+0xbf8>
   1321c:	b	13570 <close_stdout@@Base+0xa84>
   13220:	b	13570 <close_stdout@@Base+0xa84>
   13224:	b	13570 <close_stdout@@Base+0xa84>
   13228:	b	13444 <close_stdout@@Base+0x958>
   1322c:	b	13444 <close_stdout@@Base+0x958>
   13230:	b	13444 <close_stdout@@Base+0x958>
   13234:	b	13444 <close_stdout@@Base+0x958>
   13238:	b	13444 <close_stdout@@Base+0x958>
   1323c:	b	13444 <close_stdout@@Base+0x958>
   13240:	b	13444 <close_stdout@@Base+0x958>
   13244:	b	13444 <close_stdout@@Base+0x958>
   13248:	b	13444 <close_stdout@@Base+0x958>
   1324c:	b	13444 <close_stdout@@Base+0x958>
   13250:	b	13444 <close_stdout@@Base+0x958>
   13254:	b	13444 <close_stdout@@Base+0x958>
   13258:	b	13444 <close_stdout@@Base+0x958>
   1325c:	b	13444 <close_stdout@@Base+0x958>
   13260:	b	13444 <close_stdout@@Base+0x958>
   13264:	b	13444 <close_stdout@@Base+0x958>
   13268:	b	13570 <close_stdout@@Base+0xa84>
   1326c:	b	13570 <close_stdout@@Base+0xa84>
   13270:	b	13570 <close_stdout@@Base+0xa84>
   13274:	b	13570 <close_stdout@@Base+0xa84>
   13278:	b	13378 <close_stdout@@Base+0x88c>
   1327c:	b	1373c <close_stdout@@Base+0xc50>
   13280:	b	13444 <close_stdout@@Base+0x958>
   13284:	b	13444 <close_stdout@@Base+0x958>
   13288:	b	13444 <close_stdout@@Base+0x958>
   1328c:	b	13444 <close_stdout@@Base+0x958>
   13290:	b	13444 <close_stdout@@Base+0x958>
   13294:	b	13444 <close_stdout@@Base+0x958>
   13298:	b	13444 <close_stdout@@Base+0x958>
   1329c:	b	13444 <close_stdout@@Base+0x958>
   132a0:	b	13444 <close_stdout@@Base+0x958>
   132a4:	b	13444 <close_stdout@@Base+0x958>
   132a8:	b	13444 <close_stdout@@Base+0x958>
   132ac:	b	13444 <close_stdout@@Base+0x958>
   132b0:	b	13444 <close_stdout@@Base+0x958>
   132b4:	b	13444 <close_stdout@@Base+0x958>
   132b8:	b	13444 <close_stdout@@Base+0x958>
   132bc:	b	13444 <close_stdout@@Base+0x958>
   132c0:	b	13444 <close_stdout@@Base+0x958>
   132c4:	b	13444 <close_stdout@@Base+0x958>
   132c8:	b	13444 <close_stdout@@Base+0x958>
   132cc:	b	13444 <close_stdout@@Base+0x958>
   132d0:	b	13444 <close_stdout@@Base+0x958>
   132d4:	b	13444 <close_stdout@@Base+0x958>
   132d8:	b	13444 <close_stdout@@Base+0x958>
   132dc:	b	13444 <close_stdout@@Base+0x958>
   132e0:	b	13444 <close_stdout@@Base+0x958>
   132e4:	b	13444 <close_stdout@@Base+0x958>
   132e8:	b	13570 <close_stdout@@Base+0xa84>
   132ec:	b	136c8 <close_stdout@@Base+0xbdc>
   132f0:	b	13444 <close_stdout@@Base+0x958>
   132f4:	b	13570 <close_stdout@@Base+0xa84>
   132f8:	b	13444 <close_stdout@@Base+0x958>
   132fc:	b	13570 <close_stdout@@Base+0xa84>
   13300:	b	13444 <close_stdout@@Base+0x958>
   13304:	b	13444 <close_stdout@@Base+0x958>
   13308:	b	13444 <close_stdout@@Base+0x958>
   1330c:	b	13444 <close_stdout@@Base+0x958>
   13310:	b	13444 <close_stdout@@Base+0x958>
   13314:	b	13444 <close_stdout@@Base+0x958>
   13318:	b	13444 <close_stdout@@Base+0x958>
   1331c:	b	13444 <close_stdout@@Base+0x958>
   13320:	b	13444 <close_stdout@@Base+0x958>
   13324:	b	13444 <close_stdout@@Base+0x958>
   13328:	b	13444 <close_stdout@@Base+0x958>
   1332c:	b	13444 <close_stdout@@Base+0x958>
   13330:	b	13444 <close_stdout@@Base+0x958>
   13334:	b	13444 <close_stdout@@Base+0x958>
   13338:	b	13444 <close_stdout@@Base+0x958>
   1333c:	b	13444 <close_stdout@@Base+0x958>
   13340:	b	13444 <close_stdout@@Base+0x958>
   13344:	b	13444 <close_stdout@@Base+0x958>
   13348:	b	13444 <close_stdout@@Base+0x958>
   1334c:	b	13444 <close_stdout@@Base+0x958>
   13350:	b	13444 <close_stdout@@Base+0x958>
   13354:	b	13444 <close_stdout@@Base+0x958>
   13358:	b	13444 <close_stdout@@Base+0x958>
   1335c:	b	13444 <close_stdout@@Base+0x958>
   13360:	b	13444 <close_stdout@@Base+0x958>
   13364:	b	13444 <close_stdout@@Base+0x958>
   13368:	b	13550 <close_stdout@@Base+0xa64>
   1336c:	b	13570 <close_stdout@@Base+0xa84>
   13370:	b	13550 <close_stdout@@Base+0xa64>
   13374:	b	13568 <close_stdout@@Base+0xa7c>
   13378:	ldr	r3, [sp, #160]	; 0xa0
   1337c:	cmp	r3, #2
   13380:	beq	13c0c <close_stdout@@Base+0x1120>
   13384:	cmp	r3, #3
   13388:	bne	13444 <close_stdout@@Base+0x958>
   1338c:	ldr	r1, [sp, #164]	; 0xa4
   13390:	tst	r1, #4
   13394:	beq	13444 <close_stdout@@Base+0x958>
   13398:	add	r3, fp, #2
   1339c:	cmp	r8, r3
   133a0:	bls	13444 <close_stdout@@Base+0x958>
   133a4:	ldrb	r2, [r5, #1]
   133a8:	mov	r1, #1
   133ac:	cmp	r2, #63	; 0x3f
   133b0:	bne	13444 <close_stdout@@Base+0x958>
   133b4:	ldr	r0, [sp, #32]
   133b8:	ldrb	ip, [r0, r3]
   133bc:	sub	r0, ip, #33	; 0x21
   133c0:	uxtb	r0, r0
   133c4:	cmp	r0, #29
   133c8:	bhi	13444 <close_stdout@@Base+0x958>
   133cc:	lsl	r1, r1, r0
   133d0:	movw	r0, #20929	; 0x51c1
   133d4:	movt	r0, #14336	; 0x3800
   133d8:	and	r0, r1, r0
   133dc:	cmp	r0, #0
   133e0:	beq	13444 <close_stdout@@Base+0x958>
   133e4:	ldr	r1, [sp, #36]	; 0x24
   133e8:	cmp	r1, #0
   133ec:	bne	1358c <close_stdout@@Base+0xaa0>
   133f0:	cmp	r9, sl
   133f4:	mov	r4, ip
   133f8:	mov	fp, r3
   133fc:	ldrcc	r0, [sp, #40]	; 0x28
   13400:	strbcc	r2, [r0, r9]
   13404:	add	r2, r9, #1
   13408:	cmp	sl, r2
   1340c:	ldrhi	r0, [sp, #40]	; 0x28
   13410:	movhi	r1, #34	; 0x22
   13414:	strbhi	r1, [r0, r2]
   13418:	add	r2, r9, #2
   1341c:	cmp	sl, r2
   13420:	ldrhi	r0, [sp, #40]	; 0x28
   13424:	movhi	r1, #34	; 0x22
   13428:	strbhi	r1, [r0, r2]
   1342c:	add	r2, r9, #3
   13430:	cmp	sl, r2
   13434:	add	r9, r9, #4
   13438:	ldrhi	r0, [sp, #40]	; 0x28
   1343c:	movhi	r1, #63	; 0x3f
   13440:	strbhi	r1, [r0, r2]
   13444:	ldr	r0, [sp, #44]	; 0x2c
   13448:	cmp	r0, #0
   1344c:	bne	13474 <close_stdout@@Base+0x988>
   13450:	ldr	r1, [sp, #48]	; 0x30
   13454:	cmp	r1, #0
   13458:	beq	13474 <close_stdout@@Base+0x988>
   1345c:	ubfx	r2, r4, #5, #8
   13460:	and	r3, r4, #31
   13464:	ldr	r2, [r1, r2, lsl #2]
   13468:	lsr	r3, r2, r3
   1346c:	tst	r3, #1
   13470:	bne	1347c <close_stdout@@Base+0x990>
   13474:	cmp	r6, #0
   13478:	beq	1349c <close_stdout@@Base+0x9b0>
   1347c:	ldr	r2, [sp, #36]	; 0x24
   13480:	cmp	r2, #0
   13484:	bne	1358c <close_stdout@@Base+0xaa0>
   13488:	cmp	r9, sl
   1348c:	ldrcc	r0, [sp, #40]	; 0x28
   13490:	movcc	r3, #92	; 0x5c
   13494:	strbcc	r3, [r0, r9]
   13498:	add	r9, r9, #1
   1349c:	add	fp, fp, #1
   134a0:	cmp	r9, sl
   134a4:	ldrcc	r1, [sp, #40]	; 0x28
   134a8:	strbcc	r4, [r1, r9]
   134ac:	cmn	r8, #1
   134b0:	add	r9, r9, #1
   134b4:	bne	1313c <close_stdout@@Base+0x650>
   134b8:	ldr	r2, [sp, #32]
   134bc:	ldrb	r3, [r2, fp]
   134c0:	adds	r3, r3, #0
   134c4:	movne	r3, #1
   134c8:	cmp	r3, #0
   134cc:	bne	1314c <close_stdout@@Base+0x660>
   134d0:	ldr	r3, [sp, #160]	; 0xa0
   134d4:	cmp	r9, #0
   134d8:	cmpeq	r3, #2
   134dc:	bne	134ec <close_stdout@@Base+0xa00>
   134e0:	ldr	r0, [sp, #36]	; 0x24
   134e4:	cmp	r0, #0
   134e8:	bne	1358c <close_stdout@@Base+0xaa0>
   134ec:	ldr	r1, [sp, #36]	; 0x24
   134f0:	ldr	r2, [sp, #52]	; 0x34
   134f4:	eor	r3, r1, #1
   134f8:	cmp	r2, #0
   134fc:	moveq	r3, #0
   13500:	andne	r3, r3, #1
   13504:	cmp	r3, #0
   13508:	beq	13534 <close_stdout@@Base+0xa48>
   1350c:	ldrb	r3, [r2]
   13510:	cmp	r3, #0
   13514:	beq	13534 <close_stdout@@Base+0xa48>
   13518:	ldr	r1, [sp, #40]	; 0x28
   1351c:	cmp	sl, r9
   13520:	strbhi	r3, [r1, r9]
   13524:	ldrb	r3, [r2, #1]!
   13528:	add	r9, r9, #1
   1352c:	cmp	r3, #0
   13530:	bne	1351c <close_stdout@@Base+0xa30>
   13534:	cmp	r9, sl
   13538:	movcs	r0, r9
   1353c:	ldrcc	r1, [sp, #40]	; 0x28
   13540:	movcc	r3, #0
   13544:	movcc	r0, r9
   13548:	strbcc	r3, [r1, r9]
   1354c:	b	135c8 <close_stdout@@Base+0xadc>
   13550:	cmn	r8, #1
   13554:	beq	13c1c <close_stdout@@Base+0x1130>
   13558:	subs	r3, r8, #1
   1355c:	movne	r3, #1
   13560:	cmp	r3, #0
   13564:	bne	13444 <close_stdout@@Base+0x958>
   13568:	cmp	fp, #0
   1356c:	bne	13444 <close_stdout@@Base+0x958>
   13570:	ldr	r3, [sp, #36]	; 0x24
   13574:	ldr	r0, [sp, #160]	; 0xa0
   13578:	cmp	r0, #2
   1357c:	movne	r3, #0
   13580:	andeq	r3, r3, #1
   13584:	cmp	r3, #0
   13588:	beq	13444 <close_stdout@@Base+0x958>
   1358c:	ldr	r2, [sp, #164]	; 0xa4
   13590:	mov	ip, #0
   13594:	ldr	r0, [sp, #160]	; 0xa0
   13598:	bic	r3, r2, #2
   1359c:	ldr	r1, [sp, #72]	; 0x48
   135a0:	ldr	r2, [sp, #68]	; 0x44
   135a4:	stm	sp, {r0, r3}
   135a8:	mov	r3, r8
   135ac:	str	r1, [sp, #12]
   135b0:	mov	r1, sl
   135b4:	str	r2, [sp, #16]
   135b8:	ldr	r0, [sp, #40]	; 0x28
   135bc:	ldr	r2, [sp, #32]
   135c0:	str	ip, [sp, #8]
   135c4:	bl	1305c <close_stdout@@Base+0x570>
   135c8:	ldr	r1, [sp, #56]	; 0x38
   135cc:	ldr	r2, [sp, #116]	; 0x74
   135d0:	ldr	r3, [r1]
   135d4:	cmp	r2, r3
   135d8:	bne	13d0c <close_stdout@@Base+0x1220>
   135dc:	add	sp, sp, #124	; 0x7c
   135e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135e4:	mov	r3, #114	; 0x72
   135e8:	ldr	r2, [sp, #36]	; 0x24
   135ec:	ldr	r0, [sp, #160]	; 0xa0
   135f0:	cmp	r0, #2
   135f4:	movne	r2, #0
   135f8:	andeq	r2, r2, #1
   135fc:	cmp	r2, #0
   13600:	bne	1358c <close_stdout@@Base+0xaa0>
   13604:	ldr	r1, [sp, #24]
   13608:	cmp	r1, #0
   1360c:	beq	13444 <close_stdout@@Base+0x958>
   13610:	mov	r4, r3
   13614:	b	1347c <close_stdout@@Base+0x990>
   13618:	mov	r3, #98	; 0x62
   1361c:	b	13604 <close_stdout@@Base+0xb18>
   13620:	mov	r3, #102	; 0x66
   13624:	b	13604 <close_stdout@@Base+0xb18>
   13628:	mov	r3, #118	; 0x76
   1362c:	b	13604 <close_stdout@@Base+0xb18>
   13630:	mov	r3, #97	; 0x61
   13634:	b	13604 <close_stdout@@Base+0xb18>
   13638:	mov	r3, #110	; 0x6e
   1363c:	b	135e8 <close_stdout@@Base+0xafc>
   13640:	mov	r3, #116	; 0x74
   13644:	b	135e8 <close_stdout@@Base+0xafc>
   13648:	ldr	r2, [sp, #24]
   1364c:	cmp	r2, #0
   13650:	beq	13bf8 <close_stdout@@Base+0x110c>
   13654:	ldr	r3, [sp, #36]	; 0x24
   13658:	cmp	r3, #0
   1365c:	bne	1358c <close_stdout@@Base+0xaa0>
   13660:	cmp	r9, sl
   13664:	add	r2, r9, #1
   13668:	ldrcc	r0, [sp, #40]	; 0x28
   1366c:	movcc	r3, #92	; 0x5c
   13670:	strbcc	r3, [r0, r9]
   13674:	add	r3, fp, #1
   13678:	cmp	r8, r3
   1367c:	bls	136bc <close_stdout@@Base+0xbd0>
   13680:	ldr	r1, [sp, #32]
   13684:	ldrb	r3, [r1, r3]
   13688:	sub	r3, r3, #48	; 0x30
   1368c:	cmp	r3, #9
   13690:	bhi	136bc <close_stdout@@Base+0xbd0>
   13694:	cmp	sl, r2
   13698:	ldrhi	r0, [sp, #40]	; 0x28
   1369c:	movhi	r3, #48	; 0x30
   136a0:	strbhi	r3, [r0, r2]
   136a4:	add	r3, r9, #2
   136a8:	cmp	sl, r3
   136ac:	ldrhi	r1, [sp, #40]	; 0x28
   136b0:	movhi	r2, #48	; 0x30
   136b4:	strbhi	r2, [r1, r3]
   136b8:	add	r2, r9, #3
   136bc:	mov	r9, r2
   136c0:	mov	r4, #48	; 0x30
   136c4:	b	13450 <close_stdout@@Base+0x964>
   136c8:	ldr	r1, [sp, #76]	; 0x4c
   136cc:	cmp	r1, #0
   136d0:	beq	136dc <close_stdout@@Base+0xbf0>
   136d4:	cmp	r7, #0
   136d8:	bne	1349c <close_stdout@@Base+0x9b0>
   136dc:	mov	r3, r4
   136e0:	b	135e8 <close_stdout@@Base+0xafc>
   136e4:	ldr	r1, [sp, #160]	; 0xa0
   136e8:	cmp	r1, #2
   136ec:	bne	13444 <close_stdout@@Base+0x958>
   136f0:	ldr	r2, [sp, #36]	; 0x24
   136f4:	cmp	r2, #0
   136f8:	bne	1358c <close_stdout@@Base+0xaa0>
   136fc:	cmp	r9, sl
   13700:	ldrcc	r0, [sp, #40]	; 0x28
   13704:	movcc	r3, #39	; 0x27
   13708:	strbcc	r3, [r0, r9]
   1370c:	add	r3, r9, #1
   13710:	cmp	sl, r3
   13714:	ldrhi	r1, [sp, #40]	; 0x28
   13718:	movhi	r2, #92	; 0x5c
   1371c:	strbhi	r2, [r1, r3]
   13720:	add	r3, r9, #2
   13724:	cmp	sl, r3
   13728:	add	r9, r9, #3
   1372c:	ldrhi	r0, [sp, #40]	; 0x28
   13730:	movhi	r2, #39	; 0x27
   13734:	strbhi	r2, [r0, r3]
   13738:	b	13444 <close_stdout@@Base+0x958>
   1373c:	ldr	r1, [sp, #64]	; 0x40
   13740:	cmp	r1, #1
   13744:	bne	13a3c <close_stdout@@Base+0xf50>
   13748:	bl	1140c <__ctype_b_loc@plt>
   1374c:	ldr	r2, [sp, #64]	; 0x40
   13750:	sxth	r3, r4
   13754:	str	r2, [sp, #60]	; 0x3c
   13758:	lsl	r3, r3, #1
   1375c:	ldr	r2, [r0]
   13760:	ldrh	r2, [r2, r3]
   13764:	eor	r2, r2, #16384	; 0x4000
   13768:	ubfx	r2, r2, #14, #1
   1376c:	ldr	r1, [sp, #24]
   13770:	ands	r2, r2, r1
   13774:	beq	13444 <close_stdout@@Base+0x958>
   13778:	ldr	r3, [sp, #60]	; 0x3c
   1377c:	mov	r0, #92	; 0x5c
   13780:	ldr	r7, [sp, #36]	; 0x24
   13784:	add	r1, r3, fp
   13788:	str	r8, [sp, #60]	; 0x3c
   1378c:	ldr	r3, [sp, #40]	; 0x28
   13790:	b	137f4 <close_stdout@@Base+0xd08>
   13794:	cmp	r7, #0
   13798:	bne	13c34 <close_stdout@@Base+0x1148>
   1379c:	add	ip, r9, #1
   137a0:	cmp	r9, sl
   137a4:	strbcc	r0, [r3, r9]
   137a8:	cmp	sl, ip
   137ac:	lsrhi	r8, r4, #6
   137b0:	addhi	r8, r8, #48	; 0x30
   137b4:	strbhi	r8, [r3, ip]
   137b8:	add	ip, r9, #2
   137bc:	add	r9, r9, #3
   137c0:	cmp	sl, ip
   137c4:	ubfxhi	r8, r4, #3, #3
   137c8:	and	r4, r4, #7
   137cc:	add	r4, r4, #48	; 0x30
   137d0:	addhi	r8, r8, #48	; 0x30
   137d4:	strbhi	r8, [r3, ip]
   137d8:	add	fp, fp, #1
   137dc:	cmp	r1, fp
   137e0:	bls	13820 <close_stdout@@Base+0xd34>
   137e4:	cmp	r9, sl
   137e8:	strbcc	r4, [r3, r9]
   137ec:	ldrb	r4, [r5, #1]!
   137f0:	add	r9, r9, #1
   137f4:	cmp	r2, #0
   137f8:	bne	13794 <close_stdout@@Base+0xca8>
   137fc:	cmp	r6, #0
   13800:	beq	137d8 <close_stdout@@Base+0xcec>
   13804:	add	fp, fp, #1
   13808:	cmp	r9, sl
   1380c:	strbcc	r0, [r3, r9]
   13810:	cmp	r1, fp
   13814:	add	r9, r9, #1
   13818:	mov	r6, #0
   1381c:	bhi	137e4 <close_stdout@@Base+0xcf8>
   13820:	ldr	r8, [sp, #60]	; 0x3c
   13824:	b	134a0 <close_stdout@@Base+0x9b4>
   13828:	ldr	r3, [sp, #36]	; 0x24
   1382c:	cmp	r3, #0
   13830:	bne	13d34 <close_stdout@@Base+0x1248>
   13834:	cmp	sl, #0
   13838:	beq	13c4c <close_stdout@@Base+0x1160>
   1383c:	ldr	r1, [sp, #40]	; 0x28
   13840:	mov	r0, #1
   13844:	ldr	r2, [pc, #1296]	; 13d5c <close_stdout@@Base+0x1270>
   13848:	mov	r3, #34	; 0x22
   1384c:	str	r0, [sp, #24]
   13850:	mov	r9, r0
   13854:	add	r2, pc, r2
   13858:	str	r0, [sp, #28]
   1385c:	strb	r3, [r1]
   13860:	str	r2, [sp, #52]	; 0x34
   13864:	b	13110 <close_stdout@@Base+0x624>
   13868:	ldr	r3, [pc, #1264]	; 13d60 <close_stdout@@Base+0x1274>
   1386c:	mov	r2, #1
   13870:	mov	r0, #3
   13874:	str	r2, [sp, #36]	; 0x24
   13878:	add	r3, pc, r3
   1387c:	str	r2, [sp, #24]
   13880:	str	r3, [sp, #52]	; 0x34
   13884:	mov	r9, #0
   13888:	str	r2, [sp, #28]
   1388c:	str	r0, [sp, #160]	; 0xa0
   13890:	b	13110 <close_stdout@@Base+0x624>
   13894:	mov	r0, #0
   13898:	mov	r1, #1
   1389c:	str	r0, [sp, #36]	; 0x24
   138a0:	mov	r9, r0
   138a4:	str	r1, [sp, #24]
   138a8:	str	r0, [sp, #28]
   138ac:	str	r0, [sp, #52]	; 0x34
   138b0:	b	13110 <close_stdout@@Base+0x624>
   138b4:	ldr	r3, [sp, #160]	; 0xa0
   138b8:	cmp	r3, #8
   138bc:	beq	138e8 <close_stdout@@Base+0xdfc>
   138c0:	ldr	r0, [pc, #1180]	; 13d64 <close_stdout@@Base+0x1278>
   138c4:	mov	r1, r3
   138c8:	add	r0, pc, r0
   138cc:	bl	12ef8 <close_stdout@@Base+0x40c>
   138d0:	ldr	r1, [sp, #160]	; 0xa0
   138d4:	str	r0, [sp, #72]	; 0x48
   138d8:	ldr	r0, [pc, #1160]	; 13d68 <close_stdout@@Base+0x127c>
   138dc:	add	r0, pc, r0
   138e0:	bl	12ef8 <close_stdout@@Base+0x40c>
   138e4:	str	r0, [sp, #68]	; 0x44
   138e8:	ldr	r0, [sp, #36]	; 0x24
   138ec:	cmp	r0, #0
   138f0:	movne	r9, #0
   138f4:	bne	1392c <close_stdout@@Base+0xe40>
   138f8:	ldr	r1, [sp, #72]	; 0x48
   138fc:	ldrb	r3, [r1]
   13900:	cmp	r3, #0
   13904:	beq	13d04 <close_stdout@@Base+0x1218>
   13908:	mov	r2, r1
   1390c:	ldr	r1, [sp, #40]	; 0x28
   13910:	mov	r9, r0
   13914:	cmp	r9, sl
   13918:	strbcc	r3, [r1, r9]
   1391c:	ldrb	r3, [r2, #1]!
   13920:	add	r9, r9, #1
   13924:	cmp	r3, #0
   13928:	bne	13914 <close_stdout@@Base+0xe28>
   1392c:	ldr	r0, [sp, #68]	; 0x44
   13930:	str	r0, [sp, #52]	; 0x34
   13934:	bl	11424 <strlen@plt>
   13938:	mov	r2, #1
   1393c:	str	r2, [sp, #24]
   13940:	str	r0, [sp, #28]
   13944:	b	13110 <close_stdout@@Base+0x624>
   13948:	ldr	r3, [pc, #1052]	; 13d6c <close_stdout@@Base+0x1280>
   1394c:	mov	r2, #0
   13950:	mov	r1, #1
   13954:	mov	r0, #2
   13958:	add	r3, pc, r3
   1395c:	str	r1, [sp, #36]	; 0x24
   13960:	str	r2, [sp, #24]
   13964:	mov	r9, r2
   13968:	str	r1, [sp, #28]
   1396c:	str	r3, [sp, #52]	; 0x34
   13970:	str	r0, [sp, #160]	; 0xa0
   13974:	b	13110 <close_stdout@@Base+0x624>
   13978:	ldr	r3, [sp, #36]	; 0x24
   1397c:	cmp	r3, #0
   13980:	bne	13d10 <close_stdout@@Base+0x1224>
   13984:	cmp	sl, #0
   13988:	beq	13c6c <close_stdout@@Base+0x1180>
   1398c:	ldr	r1, [sp, #40]	; 0x28
   13990:	mov	r3, #39	; 0x27
   13994:	ldr	r2, [sp, #36]	; 0x24
   13998:	mov	r0, #1
   1399c:	mov	r9, r0
   139a0:	str	r0, [sp, #28]
   139a4:	strb	r3, [r1]
   139a8:	ldr	r3, [pc, #960]	; 13d70 <close_stdout@@Base+0x1284>
   139ac:	str	r2, [sp, #24]
   139b0:	add	r3, pc, r3
   139b4:	str	r3, [sp, #52]	; 0x34
   139b8:	b	13110 <close_stdout@@Base+0x624>
   139bc:	ldr	r2, [sp, #28]
   139c0:	cmp	r2, #1
   139c4:	add	r4, fp, r2
   139c8:	movls	r3, #0
   139cc:	movhi	r3, #1
   139d0:	cmn	r8, #1
   139d4:	movne	r3, #0
   139d8:	cmp	r3, #0
   139dc:	beq	139ec <close_stdout@@Base+0xf00>
   139e0:	ldr	r0, [sp, #32]
   139e4:	bl	11424 <strlen@plt>
   139e8:	mov	r8, r0
   139ec:	cmp	r8, r4
   139f0:	ldrcc	r3, [sp, #32]
   139f4:	movcc	r6, #0
   139f8:	addcc	r5, r3, fp
   139fc:	bcc	1316c <close_stdout@@Base+0x680>
   13a00:	ldr	r0, [sp, #32]
   13a04:	ldr	r1, [sp, #52]	; 0x34
   13a08:	add	r5, r0, fp
   13a0c:	ldr	r2, [sp, #28]
   13a10:	mov	r0, r5
   13a14:	bl	112d4 <memcmp@plt>
   13a18:	cmp	r0, #0
   13a1c:	bne	13a34 <close_stdout@@Base+0xf48>
   13a20:	ldr	r1, [sp, #36]	; 0x24
   13a24:	cmp	r1, #0
   13a28:	bne	1358c <close_stdout@@Base+0xaa0>
   13a2c:	mov	r6, #1
   13a30:	b	1316c <close_stdout@@Base+0x680>
   13a34:	mov	r6, #0
   13a38:	b	1316c <close_stdout@@Base+0x680>
   13a3c:	add	r7, sp, #108	; 0x6c
   13a40:	cmn	r8, #1
   13a44:	mov	r3, #0
   13a48:	str	r3, [sp, #108]	; 0x6c
   13a4c:	str	r3, [r7, #4]
   13a50:	beq	13c3c <close_stdout@@Base+0x1150>
   13a54:	mov	r1, #0
   13a58:	ldr	r0, [sp, #32]
   13a5c:	mov	ip, #1
   13a60:	str	r9, [sp, #88]	; 0x58
   13a64:	str	r6, [sp, #96]	; 0x60
   13a68:	mov	r9, r1
   13a6c:	str	r5, [sp, #100]	; 0x64
   13a70:	mov	r6, ip
   13a74:	mov	r5, r7
   13a78:	add	r3, sp, #104	; 0x68
   13a7c:	sub	r0, r0, #1
   13a80:	str	r3, [sp, #80]	; 0x50
   13a84:	str	r0, [sp, #84]	; 0x54
   13a88:	str	r1, [sp, #60]	; 0x3c
   13a8c:	str	r4, [sp, #92]	; 0x5c
   13a90:	ldr	r2, [sp, #32]
   13a94:	add	r7, r9, fp
   13a98:	add	r0, sp, #104	; 0x68
   13a9c:	mov	r3, r5
   13aa0:	add	r4, r2, r7
   13aa4:	rsb	r2, r7, r8
   13aa8:	mov	r1, r4
   13aac:	bl	11370 <mbrtowc@plt>
   13ab0:	subs	r2, r0, #0
   13ab4:	beq	13bc0 <close_stdout@@Base+0x10d4>
   13ab8:	cmn	r2, #1
   13abc:	beq	13ce8 <close_stdout@@Base+0x11fc>
   13ac0:	cmn	r2, #2
   13ac4:	beq	13c8c <close_stdout@@Base+0x11a0>
   13ac8:	ldr	r3, [sp, #36]	; 0x24
   13acc:	ldr	r0, [sp, #160]	; 0xa0
   13ad0:	cmp	r0, #2
   13ad4:	movne	r3, #0
   13ad8:	andeq	r3, r3, #1
   13adc:	cmp	r3, #0
   13ae0:	beq	13b9c <close_stdout@@Base+0x10b0>
   13ae4:	cmp	r2, #1
   13ae8:	beq	13b9c <close_stdout@@Base+0x10b0>
   13aec:	ldr	r1, [sp, #84]	; 0x54
   13af0:	add	r3, r1, r2
   13af4:	add	r7, r3, r7
   13af8:	ldrb	r3, [r4, #1]!
   13afc:	sub	r3, r3, #91	; 0x5b
   13b00:	cmp	r3, #33	; 0x21
   13b04:	addls	pc, pc, r3, lsl #2
   13b08:	b	13b94 <close_stdout@@Base+0x10a8>
   13b0c:	b	1358c <close_stdout@@Base+0xaa0>
   13b10:	b	1358c <close_stdout@@Base+0xaa0>
   13b14:	b	13b94 <close_stdout@@Base+0x10a8>
   13b18:	b	1358c <close_stdout@@Base+0xaa0>
   13b1c:	b	13b94 <close_stdout@@Base+0x10a8>
   13b20:	b	1358c <close_stdout@@Base+0xaa0>
   13b24:	b	13b94 <close_stdout@@Base+0x10a8>
   13b28:	b	13b94 <close_stdout@@Base+0x10a8>
   13b2c:	b	13b94 <close_stdout@@Base+0x10a8>
   13b30:	b	13b94 <close_stdout@@Base+0x10a8>
   13b34:	b	13b94 <close_stdout@@Base+0x10a8>
   13b38:	b	13b94 <close_stdout@@Base+0x10a8>
   13b3c:	b	13b94 <close_stdout@@Base+0x10a8>
   13b40:	b	13b94 <close_stdout@@Base+0x10a8>
   13b44:	b	13b94 <close_stdout@@Base+0x10a8>
   13b48:	b	13b94 <close_stdout@@Base+0x10a8>
   13b4c:	b	13b94 <close_stdout@@Base+0x10a8>
   13b50:	b	13b94 <close_stdout@@Base+0x10a8>
   13b54:	b	13b94 <close_stdout@@Base+0x10a8>
   13b58:	b	13b94 <close_stdout@@Base+0x10a8>
   13b5c:	b	13b94 <close_stdout@@Base+0x10a8>
   13b60:	b	13b94 <close_stdout@@Base+0x10a8>
   13b64:	b	13b94 <close_stdout@@Base+0x10a8>
   13b68:	b	13b94 <close_stdout@@Base+0x10a8>
   13b6c:	b	13b94 <close_stdout@@Base+0x10a8>
   13b70:	b	13b94 <close_stdout@@Base+0x10a8>
   13b74:	b	13b94 <close_stdout@@Base+0x10a8>
   13b78:	b	13b94 <close_stdout@@Base+0x10a8>
   13b7c:	b	13b94 <close_stdout@@Base+0x10a8>
   13b80:	b	13b94 <close_stdout@@Base+0x10a8>
   13b84:	b	13b94 <close_stdout@@Base+0x10a8>
   13b88:	b	13b94 <close_stdout@@Base+0x10a8>
   13b8c:	b	13b94 <close_stdout@@Base+0x10a8>
   13b90:	b	1358c <close_stdout@@Base+0xaa0>
   13b94:	cmp	r4, r7
   13b98:	bne	13af8 <close_stdout@@Base+0x100c>
   13b9c:	ldr	r0, [sp, #104]	; 0x68
   13ba0:	add	r9, r9, r2
   13ba4:	bl	11328 <iswprint@plt>
   13ba8:	cmp	r0, #0
   13bac:	mov	r0, r5
   13bb0:	moveq	r6, #0
   13bb4:	bl	112b0 <mbsinit@plt>
   13bb8:	cmp	r0, #0
   13bbc:	beq	13a90 <close_stdout@@Base+0xfa4>
   13bc0:	mov	ip, r6
   13bc4:	eor	r2, ip, #1
   13bc8:	str	r9, [sp, #60]	; 0x3c
   13bcc:	ldr	r4, [sp, #92]	; 0x5c
   13bd0:	uxtb	r2, r2
   13bd4:	ldr	r9, [sp, #88]	; 0x58
   13bd8:	ldr	r6, [sp, #96]	; 0x60
   13bdc:	ldr	r5, [sp, #100]	; 0x64
   13be0:	ldr	r3, [sp, #60]	; 0x3c
   13be4:	cmp	r3, #1
   13be8:	bls	1376c <close_stdout@@Base+0xc80>
   13bec:	ldr	r0, [sp, #24]
   13bf0:	and	r2, r2, r0
   13bf4:	b	13778 <close_stdout@@Base+0xc8c>
   13bf8:	ldr	r2, [sp, #164]	; 0xa4
   13bfc:	tst	r2, #1
   13c00:	addne	fp, fp, #1
   13c04:	bne	13134 <close_stdout@@Base+0x648>
   13c08:	b	13444 <close_stdout@@Base+0x958>
   13c0c:	ldr	r0, [sp, #36]	; 0x24
   13c10:	cmp	r0, #0
   13c14:	beq	13444 <close_stdout@@Base+0x958>
   13c18:	b	1358c <close_stdout@@Base+0xaa0>
   13c1c:	ldr	r2, [sp, #32]
   13c20:	ldrb	r3, [r2, #1]
   13c24:	adds	r3, r3, #0
   13c28:	movne	r3, #1
   13c2c:	b	13560 <close_stdout@@Base+0xa74>
   13c30:	bl	11574 <abort@plt>
   13c34:	ldr	r8, [sp, #60]	; 0x3c
   13c38:	b	1358c <close_stdout@@Base+0xaa0>
   13c3c:	ldr	r0, [sp, #32]
   13c40:	bl	11424 <strlen@plt>
   13c44:	mov	r8, r0
   13c48:	b	13a54 <close_stdout@@Base+0xf68>
   13c4c:	ldr	r2, [pc, #288]	; 13d74 <close_stdout@@Base+0x1288>
   13c50:	mov	r1, #1
   13c54:	mov	r9, r1
   13c58:	str	r1, [sp, #24]
   13c5c:	add	r2, pc, r2
   13c60:	str	r1, [sp, #28]
   13c64:	str	r2, [sp, #52]	; 0x34
   13c68:	b	13110 <close_stdout@@Base+0x624>
   13c6c:	ldr	r2, [pc, #260]	; 13d78 <close_stdout@@Base+0x128c>
   13c70:	mov	r3, #1
   13c74:	mov	r9, r3
   13c78:	str	r3, [sp, #28]
   13c7c:	add	r2, pc, r2
   13c80:	str	sl, [sp, #24]
   13c84:	str	r2, [sp, #52]	; 0x34
   13c88:	b	13110 <close_stdout@@Base+0x624>
   13c8c:	cmp	r8, r7
   13c90:	str	r9, [sp, #60]	; 0x3c
   13c94:	mov	ip, r4
   13c98:	ldr	r6, [sp, #96]	; 0x60
   13c9c:	ldr	r9, [sp, #88]	; 0x58
   13ca0:	ldr	r4, [sp, #92]	; 0x5c
   13ca4:	ldr	r5, [sp, #100]	; 0x64
   13ca8:	bls	13ce0 <close_stdout@@Base+0x11f4>
   13cac:	ldrb	r3, [ip]
   13cb0:	cmp	r3, #0
   13cb4:	beq	13ce0 <close_stdout@@Base+0x11f4>
   13cb8:	ldr	r3, [sp, #60]	; 0x3c
   13cbc:	b	13ccc <close_stdout@@Base+0x11e0>
   13cc0:	ldrb	r2, [r5, r3]
   13cc4:	cmp	r2, #0
   13cc8:	beq	13cdc <close_stdout@@Base+0x11f0>
   13ccc:	add	r3, r3, #1
   13cd0:	add	r2, fp, r3
   13cd4:	cmp	r8, r2
   13cd8:	bhi	13cc0 <close_stdout@@Base+0x11d4>
   13cdc:	str	r3, [sp, #60]	; 0x3c
   13ce0:	mov	r2, #1
   13ce4:	b	13be0 <close_stdout@@Base+0x10f4>
   13ce8:	str	r9, [sp, #60]	; 0x3c
   13cec:	mov	r2, #1
   13cf0:	ldr	r4, [sp, #92]	; 0x5c
   13cf4:	ldr	r6, [sp, #96]	; 0x60
   13cf8:	ldr	r9, [sp, #88]	; 0x58
   13cfc:	ldr	r5, [sp, #100]	; 0x64
   13d00:	b	13be0 <close_stdout@@Base+0x10f4>
   13d04:	ldr	r9, [sp, #36]	; 0x24
   13d08:	b	1392c <close_stdout@@Base+0xe40>
   13d0c:	bl	11304 <__stack_chk_fail@plt>
   13d10:	ldr	r1, [pc, #100]	; 13d7c <close_stdout@@Base+0x1290>
   13d14:	mov	r3, #0
   13d18:	mov	r0, #1
   13d1c:	str	r3, [sp, #24]
   13d20:	add	r1, pc, r1
   13d24:	str	r0, [sp, #28]
   13d28:	mov	r9, r3
   13d2c:	str	r1, [sp, #52]	; 0x34
   13d30:	b	13110 <close_stdout@@Base+0x624>
   13d34:	ldr	r0, [pc, #68]	; 13d80 <close_stdout@@Base+0x1294>
   13d38:	mov	r3, #1
   13d3c:	mov	r9, #0
   13d40:	str	r3, [sp, #24]
   13d44:	add	r0, pc, r0
   13d48:	str	r3, [sp, #28]
   13d4c:	str	r0, [sp, #52]	; 0x34
   13d50:	b	13110 <close_stdout@@Base+0x624>
   13d54:	andeq	r4, r1, r0, lsl #31
   13d58:	andeq	r0, r0, r8, lsr r1
   13d5c:	andeq	r3, r0, ip, lsl #2
   13d60:	andeq	r3, r0, r8, ror #1
   13d64:	andeq	r3, r0, r4, lsr #1
   13d68:	andeq	r3, r0, r0, lsl #1
   13d6c:	andeq	r3, r0, r4
   13d70:	andeq	r2, r0, ip, lsr #31
   13d74:	andeq	r2, r0, r4, lsl #26
   13d78:	andeq	r2, r0, r0, ror #25
   13d7c:	andeq	r2, r0, ip, lsr ip
   13d80:	andeq	r2, r0, ip, lsl ip
   13d84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d88:	sub	sp, sp, #44	; 0x2c
   13d8c:	mov	r6, r0
   13d90:	mov	r9, r1
   13d94:	mov	sl, r2
   13d98:	mov	r4, r3
   13d9c:	bl	11448 <__errno_location@plt>
   13da0:	ldr	fp, [pc, #412]	; 13f44 <close_stdout@@Base+0x1458>
   13da4:	cmp	r6, #0
   13da8:	add	fp, pc, fp
   13dac:	ldr	r5, [fp]
   13db0:	ldr	r1, [r0]
   13db4:	mov	r8, r0
   13db8:	str	r1, [sp, #36]	; 0x24
   13dbc:	blt	13f3c <close_stdout@@Base+0x1450>
   13dc0:	ldr	r3, [pc, #384]	; 13f48 <close_stdout@@Base+0x145c>
   13dc4:	add	r3, pc, r3
   13dc8:	ldr	r3, [r3]
   13dcc:	cmp	r6, r3
   13dd0:	bcc	13e24 <close_stdout@@Base+0x1338>
   13dd4:	add	r7, r6, #1
   13dd8:	cmn	r7, #-536870911	; 0xe0000001
   13ddc:	bhi	13f40 <close_stdout@@Base+0x1454>
   13de0:	add	r3, fp, #4
   13de4:	cmp	r5, r3
   13de8:	beq	13f14 <close_stdout@@Base+0x1428>
   13dec:	mov	r0, r5
   13df0:	lsl	r1, r7, #3
   13df4:	bl	14c1c <close_stdout@@Base+0x2130>
   13df8:	mov	r5, r0
   13dfc:	str	r0, [fp]
   13e00:	ldr	fp, [pc, #324]	; 13f4c <close_stdout@@Base+0x1460>
   13e04:	mov	r1, #0
   13e08:	add	fp, pc, fp
   13e0c:	ldr	r0, [fp]
   13e10:	rsb	r2, r0, r7
   13e14:	add	r0, r5, r0, lsl #3
   13e18:	lsl	r2, r2, #3
   13e1c:	bl	11478 <memset@plt>
   13e20:	str	r7, [fp]
   13e24:	add	r2, r4, #8
   13e28:	str	r2, [sp, #32]
   13e2c:	ldr	r1, [r4]
   13e30:	add	fp, r5, r6, lsl #3
   13e34:	ldr	lr, [sp, #32]
   13e38:	mov	r2, r9
   13e3c:	ldr	r3, [r4, #4]
   13e40:	ldr	ip, [r5, r6, lsl #3]
   13e44:	ldr	r7, [fp, #4]
   13e48:	orr	r3, r3, #1
   13e4c:	str	r1, [sp]
   13e50:	str	r3, [sp, #4]
   13e54:	mov	r1, ip
   13e58:	str	lr, [sp, #8]
   13e5c:	mov	r0, r7
   13e60:	ldr	lr, [r4, #40]	; 0x28
   13e64:	str	r3, [sp, #28]
   13e68:	mov	r3, sl
   13e6c:	str	lr, [sp, #12]
   13e70:	ldr	lr, [r4, #44]	; 0x2c
   13e74:	str	ip, [sp, #24]
   13e78:	str	lr, [sp, #16]
   13e7c:	bl	1305c <close_stdout@@Base+0x570>
   13e80:	ldr	ip, [sp, #24]
   13e84:	cmp	ip, r0
   13e88:	bhi	13f00 <close_stdout@@Base+0x1414>
   13e8c:	ldr	r3, [pc, #188]	; 13f50 <close_stdout@@Base+0x1464>
   13e90:	add	r1, r0, #1
   13e94:	str	r1, [r5, r6, lsl #3]
   13e98:	add	r3, pc, r3
   13e9c:	cmp	r7, r3
   13ea0:	beq	13eb4 <close_stdout@@Base+0x13c8>
   13ea4:	mov	r0, r7
   13ea8:	str	r1, [sp, #24]
   13eac:	bl	11280 <free@plt>
   13eb0:	ldr	r1, [sp, #24]
   13eb4:	mov	r0, r1
   13eb8:	str	r1, [sp, #24]
   13ebc:	bl	14bc4 <close_stdout@@Base+0x20d8>
   13ec0:	ldr	r3, [sp, #28]
   13ec4:	ldr	lr, [sp, #32]
   13ec8:	mov	r2, r9
   13ecc:	str	r0, [fp, #4]
   13ed0:	mov	r7, r0
   13ed4:	ldr	ip, [r4]
   13ed8:	str	r3, [sp, #4]
   13edc:	mov	r3, sl
   13ee0:	str	lr, [sp, #8]
   13ee4:	str	ip, [sp]
   13ee8:	ldr	ip, [r4, #40]	; 0x28
   13eec:	ldr	r1, [sp, #24]
   13ef0:	str	ip, [sp, #12]
   13ef4:	ldr	ip, [r4, #44]	; 0x2c
   13ef8:	str	ip, [sp, #16]
   13efc:	bl	1305c <close_stdout@@Base+0x570>
   13f00:	ldr	r1, [sp, #36]	; 0x24
   13f04:	mov	r0, r7
   13f08:	str	r1, [r8]
   13f0c:	add	sp, sp, #44	; 0x2c
   13f10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f14:	lsl	r1, r7, #3
   13f18:	mov	r0, #0
   13f1c:	str	r3, [sp, #24]
   13f20:	bl	14c1c <close_stdout@@Base+0x2130>
   13f24:	ldr	r3, [sp, #24]
   13f28:	mov	r5, r0
   13f2c:	ldm	r3, {r0, r1}
   13f30:	str	r5, [fp]
   13f34:	stm	r5, {r0, r1}
   13f38:	b	13e00 <close_stdout@@Base+0x1314>
   13f3c:	bl	11574 <abort@plt>
   13f40:	bl	14dd8 <close_stdout@@Base+0x22ec>
   13f44:	andeq	r4, r1, r4, lsl #8
   13f48:			; <UNDEFINED> instruction: 0x000143b4
   13f4c:	andeq	r4, r1, r0, ror r3
   13f50:	muleq	r1, r4, r3
   13f54:	push	{r4, r5, r6, lr}
   13f58:	mov	r5, r0
   13f5c:	bl	11448 <__errno_location@plt>
   13f60:	cmp	r5, #0
   13f64:	mov	r1, #48	; 0x30
   13f68:	mov	r4, r0
   13f6c:	ldr	r0, [pc, #24]	; 13f8c <close_stdout@@Base+0x14a0>
   13f70:	ldr	r6, [r4]
   13f74:	add	r0, pc, r0
   13f78:	add	r0, r0, #256	; 0x100
   13f7c:	movne	r0, r5
   13f80:	bl	14d98 <close_stdout@@Base+0x22ac>
   13f84:	str	r6, [r4]
   13f88:	pop	{r4, r5, r6, pc}
   13f8c:			; <UNDEFINED> instruction: 0x000142b8
   13f90:	cmp	r0, #0
   13f94:	beq	13fa0 <close_stdout@@Base+0x14b4>
   13f98:	ldr	r0, [r0]
   13f9c:	bx	lr
   13fa0:	ldr	r0, [pc, #12]	; 13fb4 <close_stdout@@Base+0x14c8>
   13fa4:	add	r0, pc, r0
   13fa8:	add	r0, r0, #256	; 0x100
   13fac:	ldr	r0, [r0]
   13fb0:	bx	lr
   13fb4:	andeq	r4, r1, r8, lsl #5
   13fb8:	cmp	r0, #0
   13fbc:	beq	13fc8 <close_stdout@@Base+0x14dc>
   13fc0:	str	r1, [r0]
   13fc4:	bx	lr
   13fc8:	ldr	r0, [pc, #12]	; 13fdc <close_stdout@@Base+0x14f0>
   13fcc:	add	r0, pc, r0
   13fd0:	add	r0, r0, #256	; 0x100
   13fd4:	str	r1, [r0]
   13fd8:	bx	lr
   13fdc:	andeq	r4, r1, r0, ror #4
   13fe0:	cmp	r0, #0
   13fe4:	movne	r3, r0
   13fe8:	beq	14018 <close_stdout@@Base+0x152c>
   13fec:	lsr	ip, r1, #5
   13ff0:	and	r1, r1, #31
   13ff4:	add	r3, r3, ip, lsl #2
   13ff8:	ldr	ip, [r3, #8]
   13ffc:	lsr	r0, ip, r1
   14000:	eor	r2, r0, r2
   14004:	and	r0, r0, #1
   14008:	and	r2, r2, #1
   1400c:	eor	ip, ip, r2, lsl r1
   14010:	str	ip, [r3, #8]
   14014:	bx	lr
   14018:	ldr	r3, [pc, #8]	; 14028 <close_stdout@@Base+0x153c>
   1401c:	add	r3, pc, r3
   14020:	add	r3, r3, #256	; 0x100
   14024:	b	13fec <close_stdout@@Base+0x1500>
   14028:	andeq	r4, r1, r0, lsl r2
   1402c:	subs	r3, r0, #0
   14030:	beq	14040 <close_stdout@@Base+0x1554>
   14034:	ldr	r0, [r3, #4]
   14038:	str	r1, [r3, #4]
   1403c:	bx	lr
   14040:	ldr	r3, [pc, #8]	; 14050 <close_stdout@@Base+0x1564>
   14044:	add	r3, pc, r3
   14048:	add	r3, r3, #256	; 0x100
   1404c:	b	14034 <close_stdout@@Base+0x1548>
   14050:	andeq	r4, r1, r8, ror #3
   14054:	cmp	r0, #0
   14058:	push	{r3, lr}
   1405c:	beq	14080 <close_stdout@@Base+0x1594>
   14060:	cmp	r2, #0
   14064:	cmpne	r1, #0
   14068:	mov	r3, #8
   1406c:	strne	r1, [r0, #40]	; 0x28
   14070:	str	r3, [r0]
   14074:	strne	r2, [r0, #44]	; 0x2c
   14078:	popne	{r3, pc}
   1407c:	bl	11574 <abort@plt>
   14080:	ldr	r0, [pc, #8]	; 14090 <close_stdout@@Base+0x15a4>
   14084:	add	r0, pc, r0
   14088:	add	r0, r0, #256	; 0x100
   1408c:	b	14060 <close_stdout@@Base+0x1574>
   14090:	andeq	r4, r1, r8, lsr #3
   14094:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14098:	sub	sp, sp, #24
   1409c:	mov	r7, r0
   140a0:	mov	sl, r1
   140a4:	ldr	r4, [sp, #56]	; 0x38
   140a8:	mov	r9, r2
   140ac:	mov	r8, r3
   140b0:	cmp	r4, #0
   140b4:	beq	14108 <close_stdout@@Base+0x161c>
   140b8:	bl	11448 <__errno_location@plt>
   140bc:	ldr	r3, [r4]
   140c0:	add	lr, r4, #8
   140c4:	mov	r1, sl
   140c8:	mov	r2, r9
   140cc:	ldr	r6, [r0]
   140d0:	mov	r5, r0
   140d4:	str	r3, [sp]
   140d8:	mov	r0, r7
   140dc:	ldr	ip, [r4, #4]
   140e0:	mov	r3, r8
   140e4:	stmib	sp, {ip, lr}
   140e8:	ldr	ip, [r4, #40]	; 0x28
   140ec:	str	ip, [sp, #12]
   140f0:	ldr	ip, [r4, #44]	; 0x2c
   140f4:	str	ip, [sp, #16]
   140f8:	bl	1305c <close_stdout@@Base+0x570>
   140fc:	str	r6, [r5]
   14100:	add	sp, sp, #24
   14104:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14108:	ldr	r4, [pc, #8]	; 14118 <close_stdout@@Base+0x162c>
   1410c:	add	r4, pc, r4
   14110:	add	r4, r4, #256	; 0x100
   14114:	b	140b8 <close_stdout@@Base+0x15cc>
   14118:	andeq	r4, r1, r0, lsr #2
   1411c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14120:	subs	r4, r3, #0
   14124:	sub	sp, sp, #36	; 0x24
   14128:	mov	r7, r0
   1412c:	mov	r6, r1
   14130:	mov	r5, r2
   14134:	beq	141f0 <close_stdout@@Base+0x1704>
   14138:	bl	11448 <__errno_location@plt>
   1413c:	ldr	r3, [r4]
   14140:	ldr	sl, [r4, #4]
   14144:	add	r9, r4, #8
   14148:	mov	r8, r0
   1414c:	mov	r0, #0
   14150:	ldr	r2, [r8]
   14154:	cmp	r5, r0
   14158:	orreq	sl, sl, #1
   1415c:	str	r9, [sp, #8]
   14160:	mov	r1, r0
   14164:	stm	sp, {r3, sl}
   14168:	mov	r3, r6
   1416c:	ldr	ip, [r4, #40]	; 0x28
   14170:	str	r2, [sp, #28]
   14174:	mov	r2, r7
   14178:	str	ip, [sp, #12]
   1417c:	ldr	ip, [r4, #44]	; 0x2c
   14180:	str	ip, [sp, #16]
   14184:	bl	1305c <close_stdout@@Base+0x570>
   14188:	add	r1, r0, #1
   1418c:	mov	fp, r0
   14190:	str	r1, [sp, #24]
   14194:	mov	r0, r1
   14198:	bl	14bc4 <close_stdout@@Base+0x20d8>
   1419c:	ldr	lr, [r4]
   141a0:	str	sl, [sp, #4]
   141a4:	mov	r3, r6
   141a8:	str	r9, [sp, #8]
   141ac:	mov	r2, r7
   141b0:	str	lr, [sp]
   141b4:	ldr	lr, [r4, #40]	; 0x28
   141b8:	ldr	r1, [sp, #24]
   141bc:	str	lr, [sp, #12]
   141c0:	ldr	lr, [r4, #44]	; 0x2c
   141c4:	str	lr, [sp, #16]
   141c8:	str	r0, [sp, #24]
   141cc:	bl	1305c <close_stdout@@Base+0x570>
   141d0:	ldr	r3, [sp, #28]
   141d4:	cmp	r5, #0
   141d8:	str	r3, [r8]
   141dc:	ldr	ip, [sp, #24]
   141e0:	strne	fp, [r5]
   141e4:	mov	r0, ip
   141e8:	add	sp, sp, #36	; 0x24
   141ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141f0:	ldr	r4, [pc, #8]	; 14200 <close_stdout@@Base+0x1714>
   141f4:	add	r4, pc, r4
   141f8:	add	r4, r4, #256	; 0x100
   141fc:	b	14138 <close_stdout@@Base+0x164c>
   14200:	andeq	r4, r1, r8, lsr r0
   14204:	mov	r3, r2
   14208:	mov	r2, #0
   1420c:	b	1411c <close_stdout@@Base+0x1630>
   14210:	ldr	r2, [pc, #152]	; 142b0 <close_stdout@@Base+0x17c4>
   14214:	push	{r3, r4, r5, r6, r7, lr}
   14218:	add	r2, pc, r2
   1421c:	ldr	r3, [pc, #144]	; 142b4 <close_stdout@@Base+0x17c8>
   14220:	ldr	r6, [r2]
   14224:	add	r3, pc, r3
   14228:	cmp	r6, #1
   1422c:	ldr	r7, [r3]
   14230:	movhi	r4, #1
   14234:	movhi	r5, r7
   14238:	bls	14254 <close_stdout@@Base+0x1768>
   1423c:	ldr	r0, [r5, #12]
   14240:	add	r4, r4, #1
   14244:	bl	11280 <free@plt>
   14248:	cmp	r4, r6
   1424c:	add	r5, r5, #8
   14250:	bne	1423c <close_stdout@@Base+0x1750>
   14254:	ldr	r4, [pc, #92]	; 142b8 <close_stdout@@Base+0x17cc>
   14258:	ldr	r0, [r7, #4]
   1425c:	add	r4, pc, r4
   14260:	cmp	r0, r4
   14264:	beq	1427c <close_stdout@@Base+0x1790>
   14268:	bl	11280 <free@plt>
   1426c:	ldr	r3, [pc, #72]	; 142bc <close_stdout@@Base+0x17d0>
   14270:	mov	r2, #256	; 0x100
   14274:	add	r3, pc, r3
   14278:	stmib	r3, {r2, r4}
   1427c:	ldr	r4, [pc, #60]	; 142c0 <close_stdout@@Base+0x17d4>
   14280:	add	r4, pc, r4
   14284:	add	r5, r4, #4
   14288:	cmp	r7, r5
   1428c:	beq	1429c <close_stdout@@Base+0x17b0>
   14290:	mov	r0, r7
   14294:	bl	11280 <free@plt>
   14298:	str	r5, [r4]
   1429c:	ldr	r3, [pc, #32]	; 142c4 <close_stdout@@Base+0x17d8>
   142a0:	mov	r2, #1
   142a4:	add	r3, pc, r3
   142a8:	str	r2, [r3]
   142ac:	pop	{r3, r4, r5, r6, r7, pc}
   142b0:	andeq	r3, r1, r0, ror #30
   142b4:	andeq	r3, r1, r8, lsl #31
   142b8:	ldrdeq	r3, [r1], -r0
   142bc:	andeq	r3, r1, r8, lsr pc
   142c0:	andeq	r3, r1, ip, lsr #30
   142c4:	ldrdeq	r3, [r1], -r4
   142c8:	ldr	r3, [pc, #12]	; 142dc <close_stdout@@Base+0x17f0>
   142cc:	mvn	r2, #0
   142d0:	add	r3, pc, r3
   142d4:	add	r3, r3, #256	; 0x100
   142d8:	b	13d84 <close_stdout@@Base+0x1298>
   142dc:	andeq	r3, r1, ip, asr pc
   142e0:	ldr	r3, [pc, #8]	; 142f0 <close_stdout@@Base+0x1804>
   142e4:	add	r3, pc, r3
   142e8:	add	r3, r3, #256	; 0x100
   142ec:	b	13d84 <close_stdout@@Base+0x1298>
   142f0:	andeq	r3, r1, r8, asr #30
   142f4:	mov	r1, r0
   142f8:	mov	r0, #0
   142fc:	b	142c8 <close_stdout@@Base+0x17dc>
   14300:	mov	r2, r1
   14304:	mov	r1, r0
   14308:	mov	r0, #0
   1430c:	b	142e0 <close_stdout@@Base+0x17f4>
   14310:	ldr	r3, [pc, #92]	; 14374 <close_stdout@@Base+0x1888>
   14314:	ldr	ip, [pc, #92]	; 14378 <close_stdout@@Base+0x188c>
   14318:	add	r3, pc, r3
   1431c:	push	{r4, r5, r6, r7, lr}
   14320:	sub	sp, sp, #60	; 0x3c
   14324:	ldr	r4, [r3, ip]
   14328:	add	r5, sp, #4
   1432c:	mov	r7, r2
   14330:	mov	r6, r0
   14334:	mov	r0, r5
   14338:	ldr	r3, [r4]
   1433c:	str	r3, [sp, #52]	; 0x34
   14340:	bl	12ea4 <close_stdout@@Base+0x3b8>
   14344:	mov	r3, r5
   14348:	mvn	r2, #0
   1434c:	mov	r0, r6
   14350:	mov	r1, r7
   14354:	bl	13d84 <close_stdout@@Base+0x1298>
   14358:	ldr	r2, [sp, #52]	; 0x34
   1435c:	ldr	r3, [r4]
   14360:	cmp	r2, r3
   14364:	bne	14370 <close_stdout@@Base+0x1884>
   14368:	add	sp, sp, #60	; 0x3c
   1436c:	pop	{r4, r5, r6, r7, pc}
   14370:	bl	11304 <__stack_chk_fail@plt>
   14374:	andeq	r3, r1, r0, ror #25
   14378:	andeq	r0, r0, r8, lsr r1
   1437c:	ldr	ip, [pc, #96]	; 143e4 <close_stdout@@Base+0x18f8>
   14380:	push	{r4, r5, r6, r7, r8, lr}
   14384:	add	ip, pc, ip
   14388:	ldr	lr, [pc, #88]	; 143e8 <close_stdout@@Base+0x18fc>
   1438c:	sub	sp, sp, #56	; 0x38
   14390:	mov	r8, r3
   14394:	add	r5, sp, #4
   14398:	mov	r7, r2
   1439c:	mov	r6, r0
   143a0:	ldr	r4, [ip, lr]
   143a4:	mov	r0, r5
   143a8:	ldr	r3, [r4]
   143ac:	str	r3, [sp, #52]	; 0x34
   143b0:	bl	12ea4 <close_stdout@@Base+0x3b8>
   143b4:	mov	r2, r8
   143b8:	mov	r3, r5
   143bc:	mov	r0, r6
   143c0:	mov	r1, r7
   143c4:	bl	13d84 <close_stdout@@Base+0x1298>
   143c8:	ldr	r2, [sp, #52]	; 0x34
   143cc:	ldr	r3, [r4]
   143d0:	cmp	r2, r3
   143d4:	bne	143e0 <close_stdout@@Base+0x18f4>
   143d8:	add	sp, sp, #56	; 0x38
   143dc:	pop	{r4, r5, r6, r7, r8, pc}
   143e0:	bl	11304 <__stack_chk_fail@plt>
   143e4:	andeq	r3, r1, r4, ror ip
   143e8:	andeq	r0, r0, r8, lsr r1
   143ec:	mov	r2, r1
   143f0:	mov	r1, r0
   143f4:	mov	r0, #0
   143f8:	b	14310 <close_stdout@@Base+0x1824>
   143fc:	mov	ip, r1
   14400:	mov	r3, r2
   14404:	mov	r1, r0
   14408:	mov	r2, ip
   1440c:	mov	r0, #0
   14410:	b	1437c <close_stdout@@Base+0x1890>
   14414:	push	{r4, r5, r6, r7, r8, lr}
   14418:	mov	r5, r2
   1441c:	ldr	lr, [pc, #136]	; 144ac <close_stdout@@Base+0x19c0>
   14420:	mov	r7, r0
   14424:	mov	r6, r1
   14428:	ldr	r4, [pc, #128]	; 144b0 <close_stdout@@Base+0x19c4>
   1442c:	add	lr, pc, lr
   14430:	sub	sp, sp, #56	; 0x38
   14434:	add	lr, lr, #256	; 0x100
   14438:	ldr	r8, [pc, #116]	; 144b4 <close_stdout@@Base+0x19c8>
   1443c:	add	r4, pc, r4
   14440:	add	ip, sp, #4
   14444:	ldm	lr!, {r0, r1, r2, r3}
   14448:	ldr	r4, [r4, r8]
   1444c:	stmia	ip!, {r0, r1, r2, r3}
   14450:	ldm	lr!, {r0, r1, r2, r3}
   14454:	ldr	r8, [r4]
   14458:	stmia	ip!, {r0, r1, r2, r3}
   1445c:	ldm	lr, {r0, r1, r2, r3}
   14460:	str	r8, [sp, #52]	; 0x34
   14464:	stm	ip, {r0, r1, r2, r3}
   14468:	mov	r1, r5
   1446c:	add	r5, sp, #4
   14470:	mov	r2, #1
   14474:	mov	r0, r5
   14478:	bl	13fe0 <close_stdout@@Base+0x14f4>
   1447c:	mov	r2, r6
   14480:	mov	r3, r5
   14484:	mov	r1, r7
   14488:	mov	r0, #0
   1448c:	bl	13d84 <close_stdout@@Base+0x1298>
   14490:	ldr	r2, [sp, #52]	; 0x34
   14494:	ldr	r3, [r4]
   14498:	cmp	r2, r3
   1449c:	bne	144a8 <close_stdout@@Base+0x19bc>
   144a0:	add	sp, sp, #56	; 0x38
   144a4:	pop	{r4, r5, r6, r7, r8, pc}
   144a8:	bl	11304 <__stack_chk_fail@plt>
   144ac:	andeq	r3, r1, r0, lsl #28
   144b0:			; <UNDEFINED> instruction: 0x00013bbc
   144b4:	andeq	r0, r0, r8, lsr r1
   144b8:	mov	r2, r1
   144bc:	mvn	r1, #0
   144c0:	b	14414 <close_stdout@@Base+0x1928>
   144c4:	mov	r1, #58	; 0x3a
   144c8:	b	144b8 <close_stdout@@Base+0x19cc>
   144cc:	mov	r2, #58	; 0x3a
   144d0:	b	14414 <close_stdout@@Base+0x1928>
   144d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144d8:	mov	r5, r2
   144dc:	ldr	lr, [pc, #144]	; 14574 <close_stdout@@Base+0x1a88>
   144e0:	mov	r8, r0
   144e4:	mov	r9, r1
   144e8:	mov	r7, r3
   144ec:	add	lr, pc, lr
   144f0:	ldr	r4, [pc, #128]	; 14578 <close_stdout@@Base+0x1a8c>
   144f4:	add	lr, lr, #256	; 0x100
   144f8:	sub	sp, sp, #56	; 0x38
   144fc:	ldr	sl, [pc, #120]	; 1457c <close_stdout@@Base+0x1a90>
   14500:	add	r4, pc, r4
   14504:	ldm	lr!, {r0, r1, r2, r3}
   14508:	add	ip, sp, #4
   1450c:	ldr	r4, [r4, sl]
   14510:	ldr	r6, [sp, #88]	; 0x58
   14514:	stmia	ip!, {r0, r1, r2, r3}
   14518:	ldm	lr!, {r0, r1, r2, r3}
   1451c:	ldr	sl, [r4]
   14520:	stmia	ip!, {r0, r1, r2, r3}
   14524:	ldm	lr, {r0, r1, r2, r3}
   14528:	str	sl, [sp, #52]	; 0x34
   1452c:	stm	ip, {r0, r1, r2, r3}
   14530:	mov	r2, r5
   14534:	add	r5, sp, #4
   14538:	mov	r1, r9
   1453c:	mov	r0, r5
   14540:	bl	14054 <close_stdout@@Base+0x1568>
   14544:	mov	r2, r6
   14548:	mov	r3, r5
   1454c:	mov	r0, r8
   14550:	mov	r1, r7
   14554:	bl	13d84 <close_stdout@@Base+0x1298>
   14558:	ldr	r2, [sp, #52]	; 0x34
   1455c:	ldr	r3, [r4]
   14560:	cmp	r2, r3
   14564:	bne	14570 <close_stdout@@Base+0x1a84>
   14568:	add	sp, sp, #56	; 0x38
   1456c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14570:	bl	11304 <__stack_chk_fail@plt>
   14574:	andeq	r3, r1, r0, asr #26
   14578:	strdeq	r3, [r1], -r8
   1457c:	andeq	r0, r0, r8, lsr r1
   14580:	push	{lr}		; (str lr, [sp, #-4]!)
   14584:	sub	sp, sp, #12
   14588:	mvn	ip, #0
   1458c:	str	ip, [sp]
   14590:	bl	144d4 <close_stdout@@Base+0x19e8>
   14594:	add	sp, sp, #12
   14598:	pop	{pc}		; (ldr pc, [sp], #4)
   1459c:	mov	ip, r1
   145a0:	mov	r3, r2
   145a4:	mov	r1, r0
   145a8:	mov	r2, ip
   145ac:	mov	r0, #0
   145b0:	b	14580 <close_stdout@@Base+0x1a94>
   145b4:	push	{lr}		; (str lr, [sp, #-4]!)
   145b8:	sub	sp, sp, #12
   145bc:	mov	lr, r1
   145c0:	mov	ip, r2
   145c4:	mov	r1, r0
   145c8:	str	r3, [sp]
   145cc:	mov	r2, lr
   145d0:	mov	r3, ip
   145d4:	mov	r0, #0
   145d8:	bl	144d4 <close_stdout@@Base+0x19e8>
   145dc:	add	sp, sp, #12
   145e0:	pop	{pc}		; (ldr pc, [sp], #4)
   145e4:	ldr	r3, [pc, #12]	; 145f8 <close_stdout@@Base+0x1b0c>
   145e8:	ldr	ip, [pc, #12]	; 145fc <close_stdout@@Base+0x1b10>
   145ec:	add	r3, pc, r3
   145f0:	ldr	r3, [r3, ip]
   145f4:	b	13d84 <close_stdout@@Base+0x1298>
   145f8:	andeq	r3, r1, ip, lsl #20
   145fc:	andeq	r0, r0, r4, lsr r1
   14600:	mov	r2, r1
   14604:	mov	r1, r0
   14608:	mov	r0, #0
   1460c:	b	145e4 <close_stdout@@Base+0x1af8>
   14610:	mvn	r2, #0
   14614:	b	145e4 <close_stdout@@Base+0x1af8>
   14618:	mov	r1, r0
   1461c:	mov	r0, #0
   14620:	b	14610 <close_stdout@@Base+0x1b24>
   14624:	push	{r4, r5, r6, r7, lr}
   14628:	cmp	r1, #0
   1462c:	sub	sp, sp, #36	; 0x24
   14630:	ldr	r7, [pc, #896]	; 149b8 <close_stdout@@Base+0x1ecc>
   14634:	mov	ip, r3
   14638:	mov	r5, r0
   1463c:	add	r7, pc, r7
   14640:	ldr	r4, [sp, #56]	; 0x38
   14644:	ldr	r6, [sp, #60]	; 0x3c
   14648:	beq	1498c <close_stdout@@Base+0x1ea0>
   1464c:	str	r2, [sp]
   14650:	mov	r3, r1
   14654:	ldr	r2, [pc, #864]	; 149bc <close_stdout@@Base+0x1ed0>
   14658:	mov	r1, #1
   1465c:	str	ip, [sp, #4]
   14660:	add	r2, pc, r2
   14664:	bl	114b4 <__fprintf_chk@plt>
   14668:	ldr	r1, [pc, #848]	; 149c0 <close_stdout@@Base+0x1ed4>
   1466c:	mov	r2, #5
   14670:	mov	r0, #0
   14674:	add	r1, pc, r1
   14678:	bl	112ec <dcgettext@plt>
   1467c:	ldr	r2, [pc, #832]	; 149c4 <close_stdout@@Base+0x1ed8>
   14680:	movw	ip, #2013	; 0x7dd
   14684:	mov	r1, #1
   14688:	ldr	r2, [r7, r2]
   1468c:	str	ip, [sp]
   14690:	mov	r3, r0
   14694:	mov	r0, r5
   14698:	bl	114b4 <__fprintf_chk@plt>
   1469c:	ldr	r1, [pc, #804]	; 149c8 <close_stdout@@Base+0x1edc>
   146a0:	mov	r0, #0
   146a4:	mov	r2, #5
   146a8:	add	r1, pc, r1
   146ac:	bl	112ec <dcgettext@plt>
   146b0:	mov	r1, r5
   146b4:	bl	11238 <fputs_unlocked@plt>
   146b8:	cmp	r6, #9
   146bc:	addls	pc, pc, r6, lsl #2
   146c0:	b	149a8 <close_stdout@@Base+0x1ebc>
   146c4:	b	14758 <close_stdout@@Base+0x1c6c>
   146c8:	b	1475c <close_stdout@@Base+0x1c70>
   146cc:	b	1478c <close_stdout@@Base+0x1ca0>
   146d0:	b	147c0 <close_stdout@@Base+0x1cd4>
   146d4:	b	147fc <close_stdout@@Base+0x1d10>
   146d8:	b	1483c <close_stdout@@Base+0x1d50>
   146dc:	b	14884 <close_stdout@@Base+0x1d98>
   146e0:	b	148d4 <close_stdout@@Base+0x1de8>
   146e4:	b	1492c <close_stdout@@Base+0x1e40>
   146e8:	b	146ec <close_stdout@@Base+0x1c00>
   146ec:	ldr	r1, [pc, #728]	; 149cc <close_stdout@@Base+0x1ee0>
   146f0:	mov	r0, #0
   146f4:	add	r1, pc, r1
   146f8:	mov	r2, #5
   146fc:	bl	112ec <dcgettext@plt>
   14700:	ldm	r4, {r3, ip}
   14704:	mov	r1, #1
   14708:	str	ip, [sp]
   1470c:	ldr	ip, [r4, #8]
   14710:	str	ip, [sp, #4]
   14714:	ldr	ip, [r4, #12]
   14718:	str	ip, [sp, #8]
   1471c:	ldr	ip, [r4, #16]
   14720:	str	ip, [sp, #12]
   14724:	ldr	ip, [r4, #20]
   14728:	str	ip, [sp, #16]
   1472c:	ldr	ip, [r4, #24]
   14730:	str	ip, [sp, #20]
   14734:	ldr	ip, [r4, #28]
   14738:	str	ip, [sp, #24]
   1473c:	ldr	ip, [r4, #32]
   14740:	str	ip, [sp, #28]
   14744:	mov	r2, r0
   14748:	mov	r0, r5
   1474c:	bl	114b4 <__fprintf_chk@plt>
   14750:	add	sp, sp, #36	; 0x24
   14754:	pop	{r4, r5, r6, r7, pc}
   14758:	bl	11574 <abort@plt>
   1475c:	ldr	r1, [pc, #620]	; 149d0 <close_stdout@@Base+0x1ee4>
   14760:	mov	r2, #5
   14764:	mov	r0, #0
   14768:	add	r1, pc, r1
   1476c:	bl	112ec <dcgettext@plt>
   14770:	ldr	r3, [r4]
   14774:	mov	r1, #1
   14778:	mov	r2, r0
   1477c:	mov	r0, r5
   14780:	add	sp, sp, #36	; 0x24
   14784:	pop	{r4, r5, r6, r7, lr}
   14788:	b	114b4 <__fprintf_chk@plt>
   1478c:	ldr	r1, [pc, #576]	; 149d4 <close_stdout@@Base+0x1ee8>
   14790:	mov	r2, #5
   14794:	mov	r0, #0
   14798:	add	r1, pc, r1
   1479c:	bl	112ec <dcgettext@plt>
   147a0:	ldm	r4, {r3, ip}
   147a4:	mov	r1, #1
   147a8:	str	ip, [sp, #56]	; 0x38
   147ac:	mov	r2, r0
   147b0:	mov	r0, r5
   147b4:	add	sp, sp, #36	; 0x24
   147b8:	pop	{r4, r5, r6, r7, lr}
   147bc:	b	114b4 <__fprintf_chk@plt>
   147c0:	ldr	r1, [pc, #528]	; 149d8 <close_stdout@@Base+0x1eec>
   147c4:	mov	r2, #5
   147c8:	mov	r0, #0
   147cc:	add	r1, pc, r1
   147d0:	bl	112ec <dcgettext@plt>
   147d4:	ldm	r4, {r3, ip}
   147d8:	mov	r1, #1
   147dc:	str	ip, [sp, #56]	; 0x38
   147e0:	ldr	ip, [r4, #8]
   147e4:	str	ip, [sp, #60]	; 0x3c
   147e8:	mov	r2, r0
   147ec:	mov	r0, r5
   147f0:	add	sp, sp, #36	; 0x24
   147f4:	pop	{r4, r5, r6, r7, lr}
   147f8:	b	114b4 <__fprintf_chk@plt>
   147fc:	ldr	r1, [pc, #472]	; 149dc <close_stdout@@Base+0x1ef0>
   14800:	mov	r2, #5
   14804:	mov	r0, #0
   14808:	add	r1, pc, r1
   1480c:	bl	112ec <dcgettext@plt>
   14810:	ldm	r4, {r3, ip}
   14814:	mov	r1, #1
   14818:	str	ip, [sp]
   1481c:	ldr	ip, [r4, #8]
   14820:	str	ip, [sp, #4]
   14824:	ldr	ip, [r4, #12]
   14828:	str	ip, [sp, #8]
   1482c:	mov	r2, r0
   14830:	mov	r0, r5
   14834:	bl	114b4 <__fprintf_chk@plt>
   14838:	b	14750 <close_stdout@@Base+0x1c64>
   1483c:	ldr	r1, [pc, #412]	; 149e0 <close_stdout@@Base+0x1ef4>
   14840:	mov	r2, #5
   14844:	mov	r0, #0
   14848:	add	r1, pc, r1
   1484c:	bl	112ec <dcgettext@plt>
   14850:	ldm	r4, {r3, ip}
   14854:	mov	r1, #1
   14858:	str	ip, [sp]
   1485c:	ldr	ip, [r4, #8]
   14860:	str	ip, [sp, #4]
   14864:	ldr	ip, [r4, #12]
   14868:	str	ip, [sp, #8]
   1486c:	ldr	ip, [r4, #16]
   14870:	str	ip, [sp, #12]
   14874:	mov	r2, r0
   14878:	mov	r0, r5
   1487c:	bl	114b4 <__fprintf_chk@plt>
   14880:	b	14750 <close_stdout@@Base+0x1c64>
   14884:	ldr	r1, [pc, #344]	; 149e4 <close_stdout@@Base+0x1ef8>
   14888:	mov	r2, #5
   1488c:	mov	r0, #0
   14890:	add	r1, pc, r1
   14894:	bl	112ec <dcgettext@plt>
   14898:	ldm	r4, {r3, ip}
   1489c:	mov	r1, #1
   148a0:	str	ip, [sp]
   148a4:	ldr	ip, [r4, #8]
   148a8:	str	ip, [sp, #4]
   148ac:	ldr	ip, [r4, #12]
   148b0:	str	ip, [sp, #8]
   148b4:	ldr	ip, [r4, #16]
   148b8:	str	ip, [sp, #12]
   148bc:	ldr	ip, [r4, #20]
   148c0:	str	ip, [sp, #16]
   148c4:	mov	r2, r0
   148c8:	mov	r0, r5
   148cc:	bl	114b4 <__fprintf_chk@plt>
   148d0:	b	14750 <close_stdout@@Base+0x1c64>
   148d4:	ldr	r1, [pc, #268]	; 149e8 <close_stdout@@Base+0x1efc>
   148d8:	mov	r2, #5
   148dc:	mov	r0, #0
   148e0:	add	r1, pc, r1
   148e4:	bl	112ec <dcgettext@plt>
   148e8:	ldm	r4, {r3, ip}
   148ec:	mov	r1, #1
   148f0:	str	ip, [sp]
   148f4:	ldr	ip, [r4, #8]
   148f8:	str	ip, [sp, #4]
   148fc:	ldr	ip, [r4, #12]
   14900:	str	ip, [sp, #8]
   14904:	ldr	ip, [r4, #16]
   14908:	str	ip, [sp, #12]
   1490c:	ldr	ip, [r4, #20]
   14910:	str	ip, [sp, #16]
   14914:	ldr	ip, [r4, #24]
   14918:	str	ip, [sp, #20]
   1491c:	mov	r2, r0
   14920:	mov	r0, r5
   14924:	bl	114b4 <__fprintf_chk@plt>
   14928:	b	14750 <close_stdout@@Base+0x1c64>
   1492c:	ldr	r1, [pc, #184]	; 149ec <close_stdout@@Base+0x1f00>
   14930:	mov	r2, #5
   14934:	mov	r0, #0
   14938:	add	r1, pc, r1
   1493c:	bl	112ec <dcgettext@plt>
   14940:	ldm	r4, {r3, ip}
   14944:	mov	r1, #1
   14948:	str	ip, [sp]
   1494c:	ldr	ip, [r4, #8]
   14950:	str	ip, [sp, #4]
   14954:	ldr	ip, [r4, #12]
   14958:	str	ip, [sp, #8]
   1495c:	ldr	ip, [r4, #16]
   14960:	str	ip, [sp, #12]
   14964:	ldr	ip, [r4, #20]
   14968:	str	ip, [sp, #16]
   1496c:	ldr	ip, [r4, #24]
   14970:	str	ip, [sp, #20]
   14974:	ldr	ip, [r4, #28]
   14978:	str	ip, [sp, #24]
   1497c:	mov	r2, r0
   14980:	mov	r0, r5
   14984:	bl	114b4 <__fprintf_chk@plt>
   14988:	b	14750 <close_stdout@@Base+0x1c64>
   1498c:	str	r3, [sp]
   14990:	mov	r3, r2
   14994:	ldr	r2, [pc, #84]	; 149f0 <close_stdout@@Base+0x1f04>
   14998:	mov	r1, #1
   1499c:	add	r2, pc, r2
   149a0:	bl	114b4 <__fprintf_chk@plt>
   149a4:	b	14668 <close_stdout@@Base+0x1b7c>
   149a8:	ldr	r1, [pc, #68]	; 149f4 <close_stdout@@Base+0x1f08>
   149ac:	mov	r0, #0
   149b0:	add	r1, pc, r1
   149b4:	b	146f8 <close_stdout@@Base+0x1c0c>
   149b8:			; <UNDEFINED> instruction: 0x000139bc
   149bc:	andeq	r2, r0, r4, asr r3
   149c0:	andeq	r2, r0, r4, asr r3
   149c4:	andeq	r0, r0, r4, ror #2
   149c8:	andeq	r2, r0, r4, lsr #6
   149cc:			; <UNDEFINED> instruction: 0x000024b0
   149d0:	andeq	r2, r0, r0, lsr r3
   149d4:	andeq	r2, r0, r0, lsl r3
   149d8:	strdeq	r2, [r0], -r4
   149dc:	ldrdeq	r2, [r0], -r4
   149e0:			; <UNDEFINED> instruction: 0x000022b4
   149e4:	muleq	r0, r0, r2
   149e8:	andeq	r2, r0, r8, ror #4
   149ec:	andeq	r2, r0, ip, lsr r2
   149f0:	andeq	r2, r0, r4, lsr #32
   149f4:	andeq	r2, r0, r8, lsr #4
   149f8:	push	{r4, r5, lr}
   149fc:	sub	sp, sp, #12
   14a00:	ldr	r5, [sp, #24]
   14a04:	ldr	ip, [r5]
   14a08:	cmp	ip, #0
   14a0c:	beq	14a28 <close_stdout@@Base+0x1f3c>
   14a10:	mov	lr, r5
   14a14:	mov	ip, #0
   14a18:	ldr	r4, [lr, #4]!
   14a1c:	add	ip, ip, #1
   14a20:	cmp	r4, #0
   14a24:	bne	14a18 <close_stdout@@Base+0x1f2c>
   14a28:	stm	sp, {r5, ip}
   14a2c:	bl	14624 <close_stdout@@Base+0x1b38>
   14a30:	add	sp, sp, #12
   14a34:	pop	{r4, r5, pc}
   14a38:	push	{r4, r5, r6, r7, lr}
   14a3c:	sub	sp, sp, #60	; 0x3c
   14a40:	ldr	r4, [pc, #100]	; 14aac <close_stdout@@Base+0x1fc0>
   14a44:	mov	ip, #0
   14a48:	ldr	r5, [pc, #96]	; 14ab0 <close_stdout@@Base+0x1fc4>
   14a4c:	mov	lr, ip
   14a50:	add	r4, pc, r4
   14a54:	ldr	r6, [sp, #80]	; 0x50
   14a58:	ldr	r7, [r4, r5]
   14a5c:	add	r5, sp, #12
   14a60:	ldr	r4, [r7]
   14a64:	str	r4, [sp, #52]	; 0x34
   14a68:	ldr	r4, [r6, ip]
   14a6c:	cmp	r4, #0
   14a70:	str	r4, [r5, ip]
   14a74:	beq	14a88 <close_stdout@@Base+0x1f9c>
   14a78:	add	lr, lr, #1
   14a7c:	add	ip, ip, #4
   14a80:	cmp	lr, #10
   14a84:	bne	14a68 <close_stdout@@Base+0x1f7c>
   14a88:	stm	sp, {r5, lr}
   14a8c:	bl	14624 <close_stdout@@Base+0x1b38>
   14a90:	ldr	r2, [sp, #52]	; 0x34
   14a94:	ldr	r3, [r7]
   14a98:	cmp	r2, r3
   14a9c:	bne	14aa8 <close_stdout@@Base+0x1fbc>
   14aa0:	add	sp, sp, #60	; 0x3c
   14aa4:	pop	{r4, r5, r6, r7, pc}
   14aa8:	bl	11304 <__stack_chk_fail@plt>
   14aac:	andeq	r3, r1, r8, lsr #11
   14ab0:	andeq	r0, r0, r8, lsr r1
   14ab4:	push	{r3}		; (str r3, [sp, #-4]!)
   14ab8:	push	{r4, lr}
   14abc:	sub	sp, sp, #20
   14ac0:	ldr	lr, [pc, #72]	; 14b10 <close_stdout@@Base+0x2024>
   14ac4:	add	ip, sp, #32
   14ac8:	ldr	r4, [pc, #68]	; 14b14 <close_stdout@@Base+0x2028>
   14acc:	add	lr, pc, lr
   14ad0:	ldr	r3, [sp, #28]
   14ad4:	ldr	r4, [lr, r4]
   14ad8:	str	ip, [sp]
   14adc:	str	ip, [sp, #8]
   14ae0:	ldr	ip, [r4]
   14ae4:	str	ip, [sp, #12]
   14ae8:	bl	14a38 <close_stdout@@Base+0x1f4c>
   14aec:	ldr	r2, [sp, #12]
   14af0:	ldr	r3, [r4]
   14af4:	cmp	r2, r3
   14af8:	bne	14b0c <close_stdout@@Base+0x2020>
   14afc:	add	sp, sp, #20
   14b00:	pop	{r4, lr}
   14b04:	add	sp, sp, #4
   14b08:	bx	lr
   14b0c:	bl	11304 <__stack_chk_fail@plt>
   14b10:	andeq	r3, r1, ip, lsr #10
   14b14:	andeq	r0, r0, r8, lsr r1
   14b18:	ldr	r1, [pc, #132]	; 14ba4 <close_stdout@@Base+0x20b8>
   14b1c:	mov	r2, #5
   14b20:	push	{r4, lr}
   14b24:	add	r1, pc, r1
   14b28:	mov	r0, #0
   14b2c:	ldr	r4, [pc, #116]	; 14ba8 <close_stdout@@Base+0x20bc>
   14b30:	bl	112ec <dcgettext@plt>
   14b34:	ldr	r2, [pc, #112]	; 14bac <close_stdout@@Base+0x20c0>
   14b38:	add	r4, pc, r4
   14b3c:	add	r2, pc, r2
   14b40:	mov	r1, r0
   14b44:	mov	r0, #1
   14b48:	bl	1149c <__printf_chk@plt>
   14b4c:	ldr	r1, [pc, #92]	; 14bb0 <close_stdout@@Base+0x20c4>
   14b50:	mov	r2, #5
   14b54:	mov	r0, #0
   14b58:	add	r1, pc, r1
   14b5c:	bl	112ec <dcgettext@plt>
   14b60:	ldr	r2, [pc, #76]	; 14bb4 <close_stdout@@Base+0x20c8>
   14b64:	ldr	r3, [pc, #76]	; 14bb8 <close_stdout@@Base+0x20cc>
   14b68:	add	r2, pc, r2
   14b6c:	add	r3, pc, r3
   14b70:	mov	r1, r0
   14b74:	mov	r0, #1
   14b78:	bl	1149c <__printf_chk@plt>
   14b7c:	ldr	r1, [pc, #56]	; 14bbc <close_stdout@@Base+0x20d0>
   14b80:	mov	r0, #0
   14b84:	mov	r2, #5
   14b88:	add	r1, pc, r1
   14b8c:	bl	112ec <dcgettext@plt>
   14b90:	ldr	r3, [pc, #40]	; 14bc0 <close_stdout@@Base+0x20d4>
   14b94:	ldr	r3, [r4, r3]
   14b98:	pop	{r4, lr}
   14b9c:	ldr	r1, [r3]
   14ba0:	b	11238 <fputs_unlocked@plt>
   14ba4:	strdeq	r2, [r0], -r0
   14ba8:	andeq	r3, r1, r0, asr #9
   14bac:	strdeq	r2, [r0], -r0
   14bb0:	andeq	r2, r0, ip, ror #1
   14bb4:	andeq	r1, r0, r4, lsl #23
   14bb8:	muleq	r0, r0, fp
   14bbc:	ldrdeq	r2, [r0], -r0
   14bc0:	andeq	r0, r0, r4, asr r1
   14bc4:	push	{r4, lr}
   14bc8:	mov	r4, r0
   14bcc:	bl	113a0 <malloc@plt>
   14bd0:	rsbs	r3, r0, #1
   14bd4:	movcc	r3, #0
   14bd8:	cmp	r4, #0
   14bdc:	moveq	r3, #0
   14be0:	cmp	r3, #0
   14be4:	popeq	{r4, pc}
   14be8:	bl	14dd8 <close_stdout@@Base+0x22ec>
   14bec:	push	{r3, r4, r5, lr}
   14bf0:	mov	r4, r0
   14bf4:	mvn	r0, #0
   14bf8:	mov	r5, r1
   14bfc:	bl	15618 <close_stdout@@Base+0x2b2c>
   14c00:	cmp	r0, r4
   14c04:	bcc	14c14 <close_stdout@@Base+0x2128>
   14c08:	mul	r0, r4, r5
   14c0c:	pop	{r3, r4, r5, lr}
   14c10:	b	14bc4 <close_stdout@@Base+0x20d8>
   14c14:	bl	14dd8 <close_stdout@@Base+0x22ec>
   14c18:	b	14bc4 <close_stdout@@Base+0x20d8>
   14c1c:	rsbs	r3, r1, #1
   14c20:	push	{r4, lr}
   14c24:	movcc	r3, #0
   14c28:	cmp	r0, #0
   14c2c:	mov	r4, r1
   14c30:	moveq	r3, #0
   14c34:	cmp	r3, #0
   14c38:	bne	14c5c <close_stdout@@Base+0x2170>
   14c3c:	bl	11310 <realloc@plt>
   14c40:	rsbs	r3, r0, #1
   14c44:	movcc	r3, #0
   14c48:	cmp	r4, #0
   14c4c:	moveq	r3, #0
   14c50:	cmp	r3, #0
   14c54:	popeq	{r4, pc}
   14c58:	bl	14dd8 <close_stdout@@Base+0x22ec>
   14c5c:	bl	11280 <free@plt>
   14c60:	mov	r0, #0
   14c64:	pop	{r4, pc}
   14c68:	push	{r4, r5, r6, lr}
   14c6c:	mov	r5, r1
   14c70:	mov	r6, r0
   14c74:	mov	r1, r2
   14c78:	mvn	r0, #0
   14c7c:	mov	r4, r2
   14c80:	bl	15618 <close_stdout@@Base+0x2b2c>
   14c84:	cmp	r0, r5
   14c88:	bcc	14c9c <close_stdout@@Base+0x21b0>
   14c8c:	mov	r0, r6
   14c90:	mul	r1, r5, r4
   14c94:	pop	{r4, r5, r6, lr}
   14c98:	b	14c1c <close_stdout@@Base+0x2130>
   14c9c:	bl	14dd8 <close_stdout@@Base+0x22ec>
   14ca0:	push	{r3, r4, r5, r6, r7, lr}
   14ca4:	subs	r7, r0, #0
   14ca8:	mov	r5, r1
   14cac:	mov	r6, r2
   14cb0:	ldr	r4, [r1]
   14cb4:	beq	14cec <close_stdout@@Base+0x2200>
   14cb8:	movw	r0, #43690	; 0xaaaa
   14cbc:	mov	r1, r2
   14cc0:	bfi	r0, r0, #16, #16
   14cc4:	bl	15618 <close_stdout@@Base+0x2b2c>
   14cc8:	cmp	r4, r0
   14ccc:	addcc	r3, r4, #1
   14cd0:	addcc	r4, r4, r3, lsr #1
   14cd4:	bcs	14d10 <close_stdout@@Base+0x2224>
   14cd8:	str	r4, [r5]
   14cdc:	mov	r0, r7
   14ce0:	mul	r1, r6, r4
   14ce4:	pop	{r3, r4, r5, r6, r7, lr}
   14ce8:	b	14c1c <close_stdout@@Base+0x2130>
   14cec:	cmp	r4, #0
   14cf0:	bne	14cd8 <close_stdout@@Base+0x21ec>
   14cf4:	mov	r0, #64	; 0x40
   14cf8:	mov	r1, r2
   14cfc:	bl	15618 <close_stdout@@Base+0x2b2c>
   14d00:	cmp	r0, #0
   14d04:	movne	r4, r0
   14d08:	addeq	r4, r0, #1
   14d0c:	b	14cd8 <close_stdout@@Base+0x21ec>
   14d10:	bl	14dd8 <close_stdout@@Base+0x22ec>
   14d14:	cmp	r0, #0
   14d18:	push	{r3, lr}
   14d1c:	ldr	r3, [r1]
   14d20:	beq	14d4c <close_stdout@@Base+0x2260>
   14d24:	movw	r2, #43689	; 0xaaa9
   14d28:	movt	r2, #43690	; 0xaaaa
   14d2c:	cmp	r3, r2
   14d30:	addls	r2, r3, #1
   14d34:	addls	r3, r3, r2, lsr #1
   14d38:	bhi	14d64 <close_stdout@@Base+0x2278>
   14d3c:	str	r3, [r1]
   14d40:	mov	r1, r3
   14d44:	pop	{r3, lr}
   14d48:	b	14c1c <close_stdout@@Base+0x2130>
   14d4c:	cmp	r3, #0
   14d50:	moveq	r3, #64	; 0x40
   14d54:	str	r3, [r1]
   14d58:	mov	r1, r3
   14d5c:	pop	{r3, lr}
   14d60:	b	14c1c <close_stdout@@Base+0x2130>
   14d64:	bl	14dd8 <close_stdout@@Base+0x22ec>
   14d68:	push	{r4, lr}
   14d6c:	mov	r4, r0
   14d70:	bl	14bc4 <close_stdout@@Base+0x20d8>
   14d74:	mov	r2, r4
   14d78:	mov	r1, #0
   14d7c:	pop	{r4, lr}
   14d80:	b	11478 <memset@plt>
   14d84:	push	{r3, lr}
   14d88:	bl	1122c <calloc@plt>
   14d8c:	cmp	r0, #0
   14d90:	popne	{r3, pc}
   14d94:	bl	14dd8 <close_stdout@@Base+0x22ec>
   14d98:	push	{r3, r4, r5, lr}
   14d9c:	mov	r4, r1
   14da0:	mov	r5, r0
   14da4:	mov	r0, r1
   14da8:	bl	14bc4 <close_stdout@@Base+0x20d8>
   14dac:	mov	r1, r5
   14db0:	mov	r2, r4
   14db4:	pop	{r3, r4, r5, lr}
   14db8:	b	112a4 <memcpy@plt>
   14dbc:	push	{r4, lr}
   14dc0:	mov	r4, r0
   14dc4:	bl	11424 <strlen@plt>
   14dc8:	add	r1, r0, #1
   14dcc:	mov	r0, r4
   14dd0:	pop	{r4, lr}
   14dd4:	b	14d98 <close_stdout@@Base+0x22ac>
   14dd8:	ldr	r3, [pc, #64]	; 14e20 <close_stdout@@Base+0x2334>
   14ddc:	mov	r2, #5
   14de0:	ldr	ip, [pc, #60]	; 14e24 <close_stdout@@Base+0x2338>
   14de4:	mov	r0, #0
   14de8:	add	r3, pc, r3
   14dec:	ldr	r1, [pc, #52]	; 14e28 <close_stdout@@Base+0x233c>
   14df0:	push	{r4, lr}
   14df4:	add	r1, pc, r1
   14df8:	ldr	r3, [r3, ip]
   14dfc:	ldr	r4, [r3]
   14e00:	bl	112ec <dcgettext@plt>
   14e04:	ldr	r2, [pc, #32]	; 14e2c <close_stdout@@Base+0x2340>
   14e08:	mov	r1, #0
   14e0c:	add	r2, pc, r2
   14e10:	mov	r3, r0
   14e14:	mov	r0, r4
   14e18:	bl	1137c <error@plt>
   14e1c:	bl	11574 <abort@plt>
   14e20:	andeq	r3, r1, r0, lsl r2
   14e24:	andeq	r0, r0, r8, asr r1
   14e28:	ldrdeq	r1, [r0], -r4
   14e2c:	ldrdeq	r1, [r0], -r8
   14e30:	push	{r4, r5, r6, lr}
   14e34:	sub	sp, sp, #8
   14e38:	mov	r4, r0
   14e3c:	bl	114a8 <fileno@plt>
   14e40:	cmp	r0, #0
   14e44:	mov	r0, r4
   14e48:	blt	14ec4 <close_stdout@@Base+0x23d8>
   14e4c:	bl	113c4 <__freading@plt>
   14e50:	cmp	r0, #0
   14e54:	bne	14e90 <close_stdout@@Base+0x23a4>
   14e58:	mov	r0, r4
   14e5c:	bl	14ed0 <close_stdout@@Base+0x23e4>
   14e60:	cmp	r0, #0
   14e64:	beq	14ec0 <close_stdout@@Base+0x23d4>
   14e68:	bl	11448 <__errno_location@plt>
   14e6c:	ldr	r6, [r0]
   14e70:	mov	r5, r0
   14e74:	mov	r0, r4
   14e78:	bl	114c0 <fclose@plt>
   14e7c:	cmp	r6, #0
   14e80:	mvnne	r0, #0
   14e84:	strne	r6, [r5]
   14e88:	add	sp, sp, #8
   14e8c:	pop	{r4, r5, r6, pc}
   14e90:	mov	r0, r4
   14e94:	bl	114a8 <fileno@plt>
   14e98:	mov	r1, #1
   14e9c:	mov	r2, #0
   14ea0:	mov	r3, #0
   14ea4:	str	r1, [sp]
   14ea8:	bl	11340 <lseek64@plt>
   14eac:	mvn	r2, #0
   14eb0:	mvn	r3, #0
   14eb4:	cmp	r1, r3
   14eb8:	cmpeq	r0, r2
   14ebc:	bne	14e58 <close_stdout@@Base+0x236c>
   14ec0:	mov	r0, r4
   14ec4:	add	sp, sp, #8
   14ec8:	pop	{r4, r5, r6, lr}
   14ecc:	b	114c0 <fclose@plt>
   14ed0:	push	{r4, lr}
   14ed4:	subs	r4, r0, #0
   14ed8:	sub	sp, sp, #8
   14edc:	beq	14eec <close_stdout@@Base+0x2400>
   14ee0:	bl	113c4 <__freading@plt>
   14ee4:	cmp	r0, #0
   14ee8:	bne	14efc <close_stdout@@Base+0x2410>
   14eec:	mov	r0, r4
   14ef0:	add	sp, sp, #8
   14ef4:	pop	{r4, lr}
   14ef8:	b	11268 <fflush@plt>
   14efc:	ldr	r3, [r4]
   14f00:	tst	r3, #256	; 0x100
   14f04:	beq	14eec <close_stdout@@Base+0x2400>
   14f08:	mov	r3, #1
   14f0c:	mov	r0, r4
   14f10:	str	r3, [sp]
   14f14:	mov	r2, #0
   14f18:	mov	r3, #0
   14f1c:	bl	14f30 <close_stdout@@Base+0x2444>
   14f20:	mov	r0, r4
   14f24:	add	sp, sp, #8
   14f28:	pop	{r4, lr}
   14f2c:	b	11268 <fflush@plt>
   14f30:	push	{r4, r5, r6, r7, lr}
   14f34:	sub	sp, sp, #20
   14f38:	ldmib	r0, {r1, ip}
   14f3c:	mov	r6, r0
   14f40:	ldr	r4, [sp, #40]	; 0x28
   14f44:	cmp	ip, r1
   14f48:	beq	14f60 <close_stdout@@Base+0x2474>
   14f4c:	str	r4, [sp, #40]	; 0x28
   14f50:	mov	r0, r6
   14f54:	add	sp, sp, #20
   14f58:	pop	{r4, r5, r6, r7, lr}
   14f5c:	b	114cc <fseeko64@plt>
   14f60:	ldr	ip, [r0, #20]
   14f64:	ldr	r1, [r0, #16]
   14f68:	cmp	ip, r1
   14f6c:	bne	14f4c <close_stdout@@Base+0x2460>
   14f70:	ldr	r7, [r0, #36]	; 0x24
   14f74:	cmp	r7, #0
   14f78:	bne	14f4c <close_stdout@@Base+0x2460>
   14f7c:	str	r2, [sp, #12]
   14f80:	mvn	r5, #0
   14f84:	str	r3, [sp, #8]
   14f88:	bl	114a8 <fileno@plt>
   14f8c:	str	r4, [sp]
   14f90:	mvn	r4, #0
   14f94:	ldr	r2, [sp, #12]
   14f98:	ldr	r3, [sp, #8]
   14f9c:	bl	11340 <lseek64@plt>
   14fa0:	mov	r2, r0
   14fa4:	mov	r3, r1
   14fa8:	cmp	r3, r5
   14fac:	cmpeq	r2, r4
   14fb0:	beq	14fd0 <close_stdout@@Base+0x24e4>
   14fb4:	ldr	r1, [r6]
   14fb8:	mov	r0, r7
   14fbc:	strd	r2, [r6, #80]	; 0x50
   14fc0:	bic	r3, r1, #16
   14fc4:	str	r3, [r6]
   14fc8:	add	sp, sp, #20
   14fcc:	pop	{r4, r5, r6, r7, pc}
   14fd0:	mvn	r0, #0
   14fd4:	b	14fc8 <close_stdout@@Base+0x24dc>
   14fd8:	push	{r3, r4, r5, lr}
   14fdc:	mov	r5, r0
   14fe0:	mov	r0, #33	; 0x21
   14fe4:	bl	14bc4 <close_stdout@@Base+0x20d8>
   14fe8:	add	r1, r5, #44	; 0x2c
   14fec:	mov	r2, #32
   14ff0:	mov	r5, #0
   14ff4:	mov	r4, r0
   14ff8:	bl	11484 <strncpy@plt>
   14ffc:	mov	r0, r4
   15000:	strb	r5, [r4, #32]
   15004:	bl	11424 <strlen@plt>
   15008:	add	r0, r4, r0
   1500c:	cmp	r4, r0
   15010:	bcs	15020 <close_stdout@@Base+0x2534>
   15014:	ldrb	r3, [r0, #-1]
   15018:	cmp	r3, #32
   1501c:	beq	15028 <close_stdout@@Base+0x253c>
   15020:	mov	r0, r4
   15024:	pop	{r3, r4, r5, pc}
   15028:	strb	r5, [r0, #-1]!
   1502c:	cmp	r0, r4
   15030:	bne	15014 <close_stdout@@Base+0x2528>
   15034:	b	15020 <close_stdout@@Base+0x2534>
   15038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1503c:	sub	sp, sp, #12
   15040:	mov	r6, #0
   15044:	movw	r8, #50971	; 0xc71b
   15048:	movt	r8, #113	; 0x71
   1504c:	mov	r4, r3
   15050:	mov	sl, r1
   15054:	mov	r9, r2
   15058:	mov	r5, r6
   1505c:	bl	11274 <utmpxname@plt>
   15060:	mov	r7, r6
   15064:	and	r3, r4, #2
   15068:	and	r4, r4, #1
   1506c:	str	r3, [sp]
   15070:	bl	112f8 <setutxent@plt>
   15074:	str	r4, [sp, #4]
   15078:	mov	r4, r6
   1507c:	bl	11580 <getutxent@plt>
   15080:	subs	fp, r0, #0
   15084:	beq	150d4 <close_stdout@@Base+0x25e8>
   15088:	ldrb	r2, [fp, #44]	; 0x2c
   1508c:	ldrh	r1, [fp]
   15090:	cmp	r2, #0
   15094:	ldr	r0, [fp, #4]
   15098:	bne	150ec <close_stdout@@Base+0x2600>
   1509c:	ldr	r3, [sp]
   150a0:	cmp	r3, #0
   150a4:	bne	1507c <close_stdout@@Base+0x2590>
   150a8:	cmp	r5, r4
   150ac:	beq	15130 <close_stdout@@Base+0x2644>
   150b0:	mov	r1, fp
   150b4:	add	r0, r7, r6
   150b8:	mov	r2, #384	; 0x180
   150bc:	add	r4, r4, #1
   150c0:	bl	112a4 <memcpy@plt>
   150c4:	add	r6, r6, #384	; 0x180
   150c8:	bl	11580 <getutxent@plt>
   150cc:	subs	fp, r0, #0
   150d0:	bne	15088 <close_stdout@@Base+0x259c>
   150d4:	bl	114e4 <endutxent@plt>
   150d8:	str	r4, [sl]
   150dc:	mov	r0, fp
   150e0:	str	r7, [r9]
   150e4:	add	sp, sp, #12
   150e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150ec:	cmp	r1, #7
   150f0:	bne	1509c <close_stdout@@Base+0x25b0>
   150f4:	ldr	r3, [sp, #4]
   150f8:	cmp	r3, #0
   150fc:	beq	150a8 <close_stdout@@Base+0x25bc>
   15100:	cmp	r0, #0
   15104:	ble	150a8 <close_stdout@@Base+0x25bc>
   15108:	mov	r1, #0
   1510c:	bl	11400 <kill@plt>
   15110:	cmp	r0, #0
   15114:	bge	150a8 <close_stdout@@Base+0x25bc>
   15118:	bl	11448 <__errno_location@plt>
   1511c:	ldr	r2, [r0]
   15120:	cmp	r2, #3
   15124:	beq	1507c <close_stdout@@Base+0x2590>
   15128:	cmp	r5, r4
   1512c:	bne	150b0 <close_stdout@@Base+0x25c4>
   15130:	cmp	r7, #0
   15134:	beq	15160 <close_stdout@@Base+0x2674>
   15138:	cmp	r5, r8
   1513c:	bhi	15174 <close_stdout@@Base+0x2688>
   15140:	add	r2, r5, #1
   15144:	add	r5, r5, r2, lsr #1
   15148:	add	r1, r5, r5, lsl #1
   1514c:	lsl	r1, r1, #7
   15150:	mov	r0, r7
   15154:	bl	14c1c <close_stdout@@Base+0x2130>
   15158:	mov	r7, r0
   1515c:	b	150b0 <close_stdout@@Base+0x25c4>
   15160:	cmp	r5, #0
   15164:	moveq	r1, #384	; 0x180
   15168:	moveq	r5, #1
   1516c:	beq	15150 <close_stdout@@Base+0x2664>
   15170:	b	15148 <close_stdout@@Base+0x265c>
   15174:	bl	14dd8 <close_stdout@@Base+0x22ec>
   15178:	push	{r4, r5, r6, lr}
   1517c:	mov	r4, r0
   15180:	bl	11364 <__fpending@plt>
   15184:	mov	r6, r0
   15188:	mov	r0, r4
   1518c:	ldr	r4, [r4]
   15190:	bl	14e30 <close_stdout@@Base+0x2344>
   15194:	and	r4, r4, #32
   15198:	adds	r5, r0, #0
   1519c:	movne	r5, #1
   151a0:	cmp	r4, #0
   151a4:	bne	151c4 <close_stdout@@Base+0x26d8>
   151a8:	cmp	r5, #0
   151ac:	beq	151bc <close_stdout@@Base+0x26d0>
   151b0:	cmp	r6, #0
   151b4:	beq	151e0 <close_stdout@@Base+0x26f4>
   151b8:	mvn	r4, #0
   151bc:	mov	r0, r4
   151c0:	pop	{r4, r5, r6, pc}
   151c4:	cmp	r5, #0
   151c8:	bne	151b8 <close_stdout@@Base+0x26cc>
   151cc:	bl	11448 <__errno_location@plt>
   151d0:	mvn	r4, #0
   151d4:	str	r5, [r0]
   151d8:	mov	r0, r4
   151dc:	pop	{r4, r5, r6, pc}
   151e0:	bl	11448 <__errno_location@plt>
   151e4:	ldr	r4, [r0]
   151e8:	subs	r4, r4, #9
   151ec:	mvnne	r4, #0
   151f0:	mov	r0, r4
   151f4:	pop	{r4, r5, r6, pc}
   151f8:	ldr	r3, [pc, #984]	; 155d8 <close_stdout@@Base+0x2aec>
   151fc:	mov	r0, #14
   15200:	ldr	r2, [pc, #980]	; 155dc <close_stdout@@Base+0x2af0>
   15204:	add	r3, pc, r3
   15208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1520c:	sub	sp, sp, #132	; 0x84
   15210:	ldr	r6, [r3, r2]
   15214:	ldr	r3, [r6]
   15218:	str	r3, [sp, #124]	; 0x7c
   1521c:	bl	11514 <nl_langinfo@plt>
   15220:	subs	r5, r0, #0
   15224:	beq	152d8 <close_stdout@@Base+0x27ec>
   15228:	ldr	r3, [pc, #944]	; 155e0 <close_stdout@@Base+0x2af4>
   1522c:	ldr	r4, [pc, r3]
   15230:	cmp	r4, #0
   15234:	beq	152e4 <close_stdout@@Base+0x27f8>
   15238:	ldrb	r7, [r4]
   1523c:	cmp	r7, #0
   15240:	bne	15274 <close_stdout@@Base+0x2788>
   15244:	b	152ac <close_stdout@@Base+0x27c0>
   15248:	mov	r0, r4
   1524c:	bl	11424 <strlen@plt>
   15250:	add	r0, r0, #1
   15254:	add	r7, r4, r0
   15258:	mov	r0, r7
   1525c:	bl	11424 <strlen@plt>
   15260:	add	r0, r0, #1
   15264:	add	r4, r7, r0
   15268:	ldrb	r7, [r7, r0]
   1526c:	cmp	r7, #0
   15270:	beq	152ac <close_stdout@@Base+0x27c0>
   15274:	mov	r0, r5
   15278:	mov	r1, r4
   1527c:	bl	1125c <strcmp@plt>
   15280:	cmp	r0, #0
   15284:	beq	1529c <close_stdout@@Base+0x27b0>
   15288:	cmp	r7, #42	; 0x2a
   1528c:	bne	15248 <close_stdout@@Base+0x275c>
   15290:	ldrb	r3, [r4, #1]
   15294:	cmp	r3, #0
   15298:	bne	15248 <close_stdout@@Base+0x275c>
   1529c:	mov	r0, r4
   152a0:	bl	11424 <strlen@plt>
   152a4:	add	r0, r0, #1
   152a8:	add	r5, r4, r0
   152ac:	ldrb	r3, [r5]
   152b0:	cmp	r3, #0
   152b4:	ldreq	r5, [pc, #808]	; 155e4 <close_stdout@@Base+0x2af8>
   152b8:	addeq	r5, pc, r5
   152bc:	ldr	r2, [sp, #124]	; 0x7c
   152c0:	mov	r0, r5
   152c4:	ldr	r3, [r6]
   152c8:	cmp	r2, r3
   152cc:	bne	155ac <close_stdout@@Base+0x2ac0>
   152d0:	add	sp, sp, #132	; 0x84
   152d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152d8:	ldr	r5, [pc, #776]	; 155e8 <close_stdout@@Base+0x2afc>
   152dc:	add	r5, pc, r5
   152e0:	b	15228 <close_stdout@@Base+0x273c>
   152e4:	ldr	r0, [pc, #768]	; 155ec <close_stdout@@Base+0x2b00>
   152e8:	add	r0, pc, r0
   152ec:	bl	11394 <getenv@plt>
   152f0:	subs	r8, r0, #0
   152f4:	beq	15584 <close_stdout@@Base+0x2a98>
   152f8:	ldrb	r3, [r8]
   152fc:	cmp	r3, #0
   15300:	beq	15518 <close_stdout@@Base+0x2a2c>
   15304:	bl	11424 <strlen@plt>
   15308:	subs	sl, r0, #0
   1530c:	subne	r3, sl, #1
   15310:	bne	15528 <close_stdout@@Base+0x2a3c>
   15314:	mov	r9, #0
   15318:	mov	fp, r9
   1531c:	add	r9, sl, r9
   15320:	add	r0, r9, #14
   15324:	bl	113a0 <malloc@plt>
   15328:	subs	r7, r0, #0
   1532c:	beq	15578 <close_stdout@@Base+0x2a8c>
   15330:	mov	r1, r8
   15334:	mov	r2, sl
   15338:	bl	112a4 <memcpy@plt>
   1533c:	cmp	fp, #0
   15340:	add	ip, r7, r9
   15344:	movne	r3, #47	; 0x2f
   15348:	strbne	r3, [r7, sl]
   1534c:	ldr	r3, [pc, #668]	; 155f0 <close_stdout@@Base+0x2b04>
   15350:	add	r3, pc, r3
   15354:	ldm	r3!, {r0, r1, r2}
   15358:	ldrh	r3, [r3]
   1535c:	str	r0, [r7, r9]
   15360:	mov	r0, r7
   15364:	str	r1, [ip, #4]
   15368:	mov	r1, #32768	; 0x8000
   1536c:	strh	r3, [ip, #12]
   15370:	str	r2, [ip, #8]
   15374:	bl	11388 <open64@plt>
   15378:	subs	r8, r0, #0
   1537c:	blt	15540 <close_stdout@@Base+0x2a54>
   15380:	ldr	r1, [pc, #620]	; 155f4 <close_stdout@@Base+0x2b08>
   15384:	add	r1, pc, r1
   15388:	bl	11220 <fdopen@plt>
   1538c:	subs	fp, r0, #0
   15390:	beq	15598 <close_stdout@@Base+0x2aac>
   15394:	ldr	r0, [pc, #604]	; 155f8 <close_stdout@@Base+0x2b0c>
   15398:	add	sl, sp, #20
   1539c:	add	r9, sp, #72	; 0x48
   153a0:	mov	r8, #0
   153a4:	add	r0, pc, r0
   153a8:	str	r0, [sp, #12]
   153ac:	ldr	r3, [fp, #4]
   153b0:	ldr	r2, [fp, #8]
   153b4:	cmp	r3, r2
   153b8:	bcs	154a4 <close_stdout@@Base+0x29b8>
   153bc:	add	r2, r3, #1
   153c0:	str	r2, [fp, #4]
   153c4:	ldrb	r0, [r3]
   153c8:	cmp	r0, #32
   153cc:	beq	153ac <close_stdout@@Base+0x28c0>
   153d0:	sub	r3, r0, #9
   153d4:	cmp	r3, #1
   153d8:	bls	153ac <close_stdout@@Base+0x28c0>
   153dc:	cmp	r0, #35	; 0x23
   153e0:	beq	154b8 <close_stdout@@Base+0x29cc>
   153e4:	mov	r1, fp
   153e8:	bl	1143c <ungetc@plt>
   153ec:	mov	r0, fp
   153f0:	ldr	r1, [sp, #12]
   153f4:	mov	r2, sl
   153f8:	mov	r3, r9
   153fc:	bl	11490 <fscanf@plt>
   15400:	cmp	r0, #1
   15404:	ble	154e8 <close_stdout@@Base+0x29fc>
   15408:	mov	r0, sl
   1540c:	bl	11424 <strlen@plt>
   15410:	str	r0, [sp, #8]
   15414:	mov	r0, r9
   15418:	bl	11424 <strlen@plt>
   1541c:	cmp	r8, #0
   15420:	mov	r2, r0
   15424:	bne	1554c <close_stdout@@Base+0x2a60>
   15428:	ldr	r3, [sp, #8]
   1542c:	str	r2, [sp]
   15430:	add	r8, r0, r3
   15434:	add	r0, r8, #3
   15438:	add	r8, r8, #2
   1543c:	bl	113a0 <malloc@plt>
   15440:	ldr	r2, [sp]
   15444:	mov	r3, r0
   15448:	cmp	r3, #0
   1544c:	beq	155b0 <close_stdout@@Base+0x2ac4>
   15450:	ldr	r0, [sp, #8]
   15454:	movw	r1, #65534	; 0xfffe
   15458:	movt	r1, #65535	; 0xffff
   1545c:	rsb	r2, r2, r8
   15460:	rsb	r1, r0, r1
   15464:	stm	sp, {r2, r3}
   15468:	add	r0, r1, r2
   1546c:	mov	r1, sl
   15470:	add	r0, r3, r0
   15474:	mov	r4, r3
   15478:	bl	11358 <strcpy@plt>
   1547c:	ldr	r2, [sp]
   15480:	ldr	r3, [sp, #4]
   15484:	mov	r1, r9
   15488:	sub	r0, r2, #1
   1548c:	add	r0, r3, r0
   15490:	bl	11358 <strcpy@plt>
   15494:	ldr	r3, [fp, #4]
   15498:	ldr	r2, [fp, #8]
   1549c:	cmp	r3, r2
   154a0:	bcc	153bc <close_stdout@@Base+0x28d0>
   154a4:	mov	r0, fp
   154a8:	bl	114d8 <__uflow@plt>
   154ac:	cmn	r0, #1
   154b0:	beq	154e8 <close_stdout@@Base+0x29fc>
   154b4:	b	153c8 <close_stdout@@Base+0x28dc>
   154b8:	ldr	r3, [fp, #4]
   154bc:	ldr	r2, [fp, #8]
   154c0:	cmp	r3, r2
   154c4:	bcs	155cc <close_stdout@@Base+0x2ae0>
   154c8:	add	r2, r3, #1
   154cc:	str	r2, [fp, #4]
   154d0:	ldrb	r0, [r3]
   154d4:	cmp	r0, #10
   154d8:	cmnne	r0, #1
   154dc:	bne	154b8 <close_stdout@@Base+0x29cc>
   154e0:	cmn	r0, #1
   154e4:	bne	153ac <close_stdout@@Base+0x28c0>
   154e8:	mov	r0, fp
   154ec:	bl	14e30 <close_stdout@@Base+0x2344>
   154f0:	cmp	r8, #0
   154f4:	beq	15540 <close_stdout@@Base+0x2a54>
   154f8:	mov	r3, #0
   154fc:	strb	r3, [r4, r8]
   15500:	mov	r0, r7
   15504:	bl	11280 <free@plt>
   15508:	ldr	r3, [pc, #236]	; 155fc <close_stdout@@Base+0x2b10>
   1550c:	add	r3, pc, r3
   15510:	str	r4, [r3]
   15514:	b	15238 <close_stdout@@Base+0x274c>
   15518:	ldr	r8, [pc, #224]	; 15600 <close_stdout@@Base+0x2b14>
   1551c:	mov	r3, #7
   15520:	mov	sl, #8
   15524:	add	r8, pc, r8
   15528:	ldrb	r3, [r8, r3]
   1552c:	cmp	r3, #47	; 0x2f
   15530:	movne	r9, #1
   15534:	movne	fp, r9
   15538:	bne	1531c <close_stdout@@Base+0x2830>
   1553c:	b	15314 <close_stdout@@Base+0x2828>
   15540:	ldr	r4, [pc, #188]	; 15604 <close_stdout@@Base+0x2b18>
   15544:	add	r4, pc, r4
   15548:	b	15500 <close_stdout@@Base+0x2a14>
   1554c:	ldr	r0, [sp, #8]
   15550:	str	r2, [sp]
   15554:	add	r3, r0, r2
   15558:	mov	r0, r4
   1555c:	add	r8, r3, r8
   15560:	add	r1, r8, #3
   15564:	add	r8, r8, #2
   15568:	bl	11310 <realloc@plt>
   1556c:	ldr	r2, [sp]
   15570:	mov	r3, r0
   15574:	b	15448 <close_stdout@@Base+0x295c>
   15578:	ldr	r4, [pc, #136]	; 15608 <close_stdout@@Base+0x2b1c>
   1557c:	add	r4, pc, r4
   15580:	b	15508 <close_stdout@@Base+0x2a1c>
   15584:	ldr	r8, [pc, #128]	; 1560c <close_stdout@@Base+0x2b20>
   15588:	mov	r3, #7
   1558c:	mov	sl, #8
   15590:	add	r8, pc, r8
   15594:	b	15528 <close_stdout@@Base+0x2a3c>
   15598:	ldr	r4, [pc, #112]	; 15610 <close_stdout@@Base+0x2b24>
   1559c:	mov	r0, r8
   155a0:	add	r4, pc, r4
   155a4:	bl	1158c <close@plt>
   155a8:	b	15500 <close_stdout@@Base+0x2a14>
   155ac:	bl	11304 <__stack_chk_fail@plt>
   155b0:	mov	r0, r4
   155b4:	ldr	r4, [pc, #88]	; 15614 <close_stdout@@Base+0x2b28>
   155b8:	bl	11280 <free@plt>
   155bc:	mov	r0, fp
   155c0:	add	r4, pc, r4
   155c4:	bl	14e30 <close_stdout@@Base+0x2344>
   155c8:	b	15500 <close_stdout@@Base+0x2a14>
   155cc:	mov	r0, fp
   155d0:	bl	114d8 <__uflow@plt>
   155d4:	b	154d4 <close_stdout@@Base+0x29e8>
   155d8:	strdeq	r2, [r1], -r4
   155dc:	andeq	r0, r0, r8, lsr r1
   155e0:	andeq	r3, r1, r0, lsr r1
   155e4:	andeq	r1, r0, r0, lsr sl
   155e8:	ldrdeq	r1, [r0], -r4
   155ec:	andeq	r1, r0, r8, lsl #20
   155f0:			; <UNDEFINED> instruction: 0x000019b0
   155f4:	andeq	r0, r0, r4, lsr #30
   155f8:	andeq	r1, r0, ip, ror #18
   155fc:	andeq	r2, r1, r0, asr lr
   15600:			; <UNDEFINED> instruction: 0x000017b8
   15604:	andeq	r1, r0, ip, ror #4
   15608:	andeq	r1, r0, r4, lsr r2
   1560c:	andeq	r1, r0, ip, asr #14
   15610:	andeq	r1, r0, r0, lsl r2
   15614:	strdeq	r1, [r0], -r0
   15618:	subs	r2, r1, #1
   1561c:	bxeq	lr
   15620:	bcc	157f8 <close_stdout@@Base+0x2d0c>
   15624:	cmp	r0, r1
   15628:	bls	157dc <close_stdout@@Base+0x2cf0>
   1562c:	tst	r1, r2
   15630:	beq	157e8 <close_stdout@@Base+0x2cfc>
   15634:	clz	r3, r0
   15638:	clz	r2, r1
   1563c:	sub	r3, r2, r3
   15640:	rsbs	r3, r3, #31
   15644:	addne	r3, r3, r3, lsl #1
   15648:	mov	r2, #0
   1564c:	addne	pc, pc, r3, lsl #2
   15650:	nop	{0}
   15654:	cmp	r0, r1, lsl #31
   15658:	adc	r2, r2, r2
   1565c:	subcs	r0, r0, r1, lsl #31
   15660:	cmp	r0, r1, lsl #30
   15664:	adc	r2, r2, r2
   15668:	subcs	r0, r0, r1, lsl #30
   1566c:	cmp	r0, r1, lsl #29
   15670:	adc	r2, r2, r2
   15674:	subcs	r0, r0, r1, lsl #29
   15678:	cmp	r0, r1, lsl #28
   1567c:	adc	r2, r2, r2
   15680:	subcs	r0, r0, r1, lsl #28
   15684:	cmp	r0, r1, lsl #27
   15688:	adc	r2, r2, r2
   1568c:	subcs	r0, r0, r1, lsl #27
   15690:	cmp	r0, r1, lsl #26
   15694:	adc	r2, r2, r2
   15698:	subcs	r0, r0, r1, lsl #26
   1569c:	cmp	r0, r1, lsl #25
   156a0:	adc	r2, r2, r2
   156a4:	subcs	r0, r0, r1, lsl #25
   156a8:	cmp	r0, r1, lsl #24
   156ac:	adc	r2, r2, r2
   156b0:	subcs	r0, r0, r1, lsl #24
   156b4:	cmp	r0, r1, lsl #23
   156b8:	adc	r2, r2, r2
   156bc:	subcs	r0, r0, r1, lsl #23
   156c0:	cmp	r0, r1, lsl #22
   156c4:	adc	r2, r2, r2
   156c8:	subcs	r0, r0, r1, lsl #22
   156cc:	cmp	r0, r1, lsl #21
   156d0:	adc	r2, r2, r2
   156d4:	subcs	r0, r0, r1, lsl #21
   156d8:	cmp	r0, r1, lsl #20
   156dc:	adc	r2, r2, r2
   156e0:	subcs	r0, r0, r1, lsl #20
   156e4:	cmp	r0, r1, lsl #19
   156e8:	adc	r2, r2, r2
   156ec:	subcs	r0, r0, r1, lsl #19
   156f0:	cmp	r0, r1, lsl #18
   156f4:	adc	r2, r2, r2
   156f8:	subcs	r0, r0, r1, lsl #18
   156fc:	cmp	r0, r1, lsl #17
   15700:	adc	r2, r2, r2
   15704:	subcs	r0, r0, r1, lsl #17
   15708:	cmp	r0, r1, lsl #16
   1570c:	adc	r2, r2, r2
   15710:	subcs	r0, r0, r1, lsl #16
   15714:	cmp	r0, r1, lsl #15
   15718:	adc	r2, r2, r2
   1571c:	subcs	r0, r0, r1, lsl #15
   15720:	cmp	r0, r1, lsl #14
   15724:	adc	r2, r2, r2
   15728:	subcs	r0, r0, r1, lsl #14
   1572c:	cmp	r0, r1, lsl #13
   15730:	adc	r2, r2, r2
   15734:	subcs	r0, r0, r1, lsl #13
   15738:	cmp	r0, r1, lsl #12
   1573c:	adc	r2, r2, r2
   15740:	subcs	r0, r0, r1, lsl #12
   15744:	cmp	r0, r1, lsl #11
   15748:	adc	r2, r2, r2
   1574c:	subcs	r0, r0, r1, lsl #11
   15750:	cmp	r0, r1, lsl #10
   15754:	adc	r2, r2, r2
   15758:	subcs	r0, r0, r1, lsl #10
   1575c:	cmp	r0, r1, lsl #9
   15760:	adc	r2, r2, r2
   15764:	subcs	r0, r0, r1, lsl #9
   15768:	cmp	r0, r1, lsl #8
   1576c:	adc	r2, r2, r2
   15770:	subcs	r0, r0, r1, lsl #8
   15774:	cmp	r0, r1, lsl #7
   15778:	adc	r2, r2, r2
   1577c:	subcs	r0, r0, r1, lsl #7
   15780:	cmp	r0, r1, lsl #6
   15784:	adc	r2, r2, r2
   15788:	subcs	r0, r0, r1, lsl #6
   1578c:	cmp	r0, r1, lsl #5
   15790:	adc	r2, r2, r2
   15794:	subcs	r0, r0, r1, lsl #5
   15798:	cmp	r0, r1, lsl #4
   1579c:	adc	r2, r2, r2
   157a0:	subcs	r0, r0, r1, lsl #4
   157a4:	cmp	r0, r1, lsl #3
   157a8:	adc	r2, r2, r2
   157ac:	subcs	r0, r0, r1, lsl #3
   157b0:	cmp	r0, r1, lsl #2
   157b4:	adc	r2, r2, r2
   157b8:	subcs	r0, r0, r1, lsl #2
   157bc:	cmp	r0, r1, lsl #1
   157c0:	adc	r2, r2, r2
   157c4:	subcs	r0, r0, r1, lsl #1
   157c8:	cmp	r0, r1
   157cc:	adc	r2, r2, r2
   157d0:	subcs	r0, r0, r1
   157d4:	mov	r0, r2
   157d8:	bx	lr
   157dc:	moveq	r0, #1
   157e0:	movne	r0, #0
   157e4:	bx	lr
   157e8:	clz	r2, r1
   157ec:	rsb	r2, r2, #31
   157f0:	lsr	r0, r0, r2
   157f4:	bx	lr
   157f8:	cmp	r0, #0
   157fc:	mvnne	r0, #0
   15800:	b	1586c <close_stdout@@Base+0x2d80>
   15804:	cmp	r1, #0
   15808:	beq	157f8 <close_stdout@@Base+0x2d0c>
   1580c:	push	{r0, r1, lr}
   15810:	bl	15618 <close_stdout@@Base+0x2b2c>
   15814:	pop	{r1, r2, lr}
   15818:	mul	r3, r2, r0
   1581c:	sub	r1, r1, r3
   15820:	bx	lr
   15824:	cmp	r3, #0
   15828:	cmpeq	r2, #0
   1582c:	bne	15850 <close_stdout@@Base+0x2d64>
   15830:	cmp	r1, #0
   15834:	movlt	r1, #-2147483648	; 0x80000000
   15838:	movlt	r0, #0
   1583c:	blt	1584c <close_stdout@@Base+0x2d60>
   15840:	cmpeq	r0, #0
   15844:	mvnne	r1, #-2147483648	; 0x80000000
   15848:	mvnne	r0, #0
   1584c:	b	1586c <close_stdout@@Base+0x2d80>
   15850:	sub	sp, sp, #8
   15854:	push	{sp, lr}
   15858:	bl	1587c <close_stdout@@Base+0x2d90>
   1585c:	ldr	lr, [sp, #4]
   15860:	add	sp, sp, #8
   15864:	pop	{r2, r3}
   15868:	bx	lr
   1586c:	push	{r1, lr}
   15870:	mov	r0, #8
   15874:	bl	11244 <raise@plt>
   15878:	pop	{r1, pc}
   1587c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15880:	mov	r8, r2
   15884:	mov	r6, r0
   15888:	mov	r7, r1
   1588c:	mov	sl, r3
   15890:	ldr	r9, [sp, #32]
   15894:	bl	158f4 <close_stdout@@Base+0x2e08>
   15898:	umull	r4, r5, r8, r0
   1589c:	mul	r8, r8, r1
   158a0:	mla	r2, r0, sl, r8
   158a4:	add	r5, r2, r5
   158a8:	subs	r4, r6, r4
   158ac:	sbc	r5, r7, r5
   158b0:	strd	r4, [r9]
   158b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   158b8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   158bc:	mov	r8, r2
   158c0:	mov	r6, r0
   158c4:	mov	r7, r1
   158c8:	mov	r5, r3
   158cc:	ldr	r9, [sp, #32]
   158d0:	bl	15d80 <close_stdout@@Base+0x3294>
   158d4:	mul	r3, r0, r5
   158d8:	umull	r4, r5, r0, r8
   158dc:	mla	r8, r8, r1, r3
   158e0:	add	r5, r8, r5
   158e4:	subs	r4, r6, r4
   158e8:	sbc	r5, r7, r5
   158ec:	strd	r4, [r9]
   158f0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   158f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158f8:	rsbs	r4, r0, #0
   158fc:	rsc	r5, r1, #0
   15900:	cmp	r1, #0
   15904:	mvn	r6, #0
   15908:	sub	sp, sp, #12
   1590c:	movge	r4, r0
   15910:	movge	r5, r1
   15914:	movge	r6, #0
   15918:	cmp	r3, #0
   1591c:	blt	15b54 <close_stdout@@Base+0x3068>
   15920:	cmp	r3, #0
   15924:	mov	sl, r4
   15928:	mov	ip, r5
   1592c:	mov	r0, r2
   15930:	mov	r1, r3
   15934:	mov	r8, r2
   15938:	mov	r7, r4
   1593c:	mov	r9, r5
   15940:	bne	15a38 <close_stdout@@Base+0x2f4c>
   15944:	cmp	r2, r5
   15948:	bls	15a74 <close_stdout@@Base+0x2f88>
   1594c:	clz	r3, r2
   15950:	cmp	r3, #0
   15954:	rsbne	r2, r3, #32
   15958:	lslne	r8, r0, r3
   1595c:	lsrne	r2, r4, r2
   15960:	lslne	r7, r4, r3
   15964:	orrne	r9, r2, r5, lsl r3
   15968:	lsr	r4, r8, #16
   1596c:	uxth	sl, r8
   15970:	mov	r1, r4
   15974:	mov	r0, r9
   15978:	bl	15618 <close_stdout@@Base+0x2b2c>
   1597c:	mov	r1, r4
   15980:	mov	fp, r0
   15984:	mov	r0, r9
   15988:	bl	15804 <close_stdout@@Base+0x2d18>
   1598c:	mul	r0, sl, fp
   15990:	lsr	r2, r7, #16
   15994:	orr	r1, r2, r1, lsl #16
   15998:	cmp	r0, r1
   1599c:	bls	159c0 <close_stdout@@Base+0x2ed4>
   159a0:	adds	r1, r1, r8
   159a4:	sub	r3, fp, #1
   159a8:	bcs	159bc <close_stdout@@Base+0x2ed0>
   159ac:	cmp	r0, r1
   159b0:	subhi	fp, fp, #2
   159b4:	addhi	r1, r1, r8
   159b8:	bhi	159c0 <close_stdout@@Base+0x2ed4>
   159bc:	mov	fp, r3
   159c0:	rsb	r9, r0, r1
   159c4:	mov	r1, r4
   159c8:	uxth	r7, r7
   159cc:	mov	r0, r9
   159d0:	bl	15618 <close_stdout@@Base+0x2b2c>
   159d4:	mov	r1, r4
   159d8:	mov	r5, r0
   159dc:	mov	r0, r9
   159e0:	bl	15804 <close_stdout@@Base+0x2d18>
   159e4:	mul	sl, sl, r5
   159e8:	orr	r1, r7, r1, lsl #16
   159ec:	cmp	sl, r1
   159f0:	bls	15a10 <close_stdout@@Base+0x2f24>
   159f4:	adds	r8, r1, r8
   159f8:	sub	r3, r5, #1
   159fc:	bcs	15a0c <close_stdout@@Base+0x2f20>
   15a00:	cmp	sl, r8
   15a04:	subhi	r5, r5, #2
   15a08:	bhi	15a10 <close_stdout@@Base+0x2f24>
   15a0c:	mov	r5, r3
   15a10:	orr	r3, r5, fp, lsl #16
   15a14:	mov	r4, #0
   15a18:	cmp	r6, #0
   15a1c:	mov	r0, r3
   15a20:	mov	r1, r4
   15a24:	beq	15a30 <close_stdout@@Base+0x2f44>
   15a28:	rsbs	r0, r0, #0
   15a2c:	rsc	r1, r1, #0
   15a30:	add	sp, sp, #12
   15a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a38:	cmp	r3, r5
   15a3c:	movhi	r4, #0
   15a40:	movhi	r3, r4
   15a44:	bhi	15a18 <close_stdout@@Base+0x2f2c>
   15a48:	clz	r5, r1
   15a4c:	cmp	r5, #0
   15a50:	bne	15c40 <close_stdout@@Base+0x3154>
   15a54:	cmp	r1, ip
   15a58:	cmpcs	r2, sl
   15a5c:	movhi	r4, #0
   15a60:	movls	r4, #1
   15a64:	movls	r3, #1
   15a68:	movls	r4, r5
   15a6c:	movhi	r3, r4
   15a70:	b	15a18 <close_stdout@@Base+0x2f2c>
   15a74:	cmp	r2, #0
   15a78:	bne	15a8c <close_stdout@@Base+0x2fa0>
   15a7c:	mov	r1, r2
   15a80:	mov	r0, #1
   15a84:	bl	15618 <close_stdout@@Base+0x2b2c>
   15a88:	mov	r8, r0
   15a8c:	clz	r3, r8
   15a90:	cmp	r3, #0
   15a94:	bne	15b64 <close_stdout@@Base+0x3078>
   15a98:	rsb	r9, r8, r9
   15a9c:	lsr	r5, r8, #16
   15aa0:	uxth	sl, r8
   15aa4:	mov	r4, #1
   15aa8:	mov	r1, r5
   15aac:	mov	r0, r9
   15ab0:	bl	15618 <close_stdout@@Base+0x2b2c>
   15ab4:	mov	r1, r5
   15ab8:	mov	fp, r0
   15abc:	mov	r0, r9
   15ac0:	bl	15804 <close_stdout@@Base+0x2d18>
   15ac4:	mul	r0, sl, fp
   15ac8:	lsr	r2, r7, #16
   15acc:	orr	r1, r2, r1, lsl #16
   15ad0:	cmp	r0, r1
   15ad4:	bls	15af4 <close_stdout@@Base+0x3008>
   15ad8:	adds	r1, r1, r8
   15adc:	sub	r3, fp, #1
   15ae0:	bcs	15d60 <close_stdout@@Base+0x3274>
   15ae4:	cmp	r0, r1
   15ae8:	subhi	fp, fp, #2
   15aec:	addhi	r1, r1, r8
   15af0:	bls	15d60 <close_stdout@@Base+0x3274>
   15af4:	rsb	r2, r0, r1
   15af8:	mov	r1, r5
   15afc:	str	r2, [sp]
   15b00:	uxth	r7, r7
   15b04:	mov	r0, r2
   15b08:	bl	15618 <close_stdout@@Base+0x2b2c>
   15b0c:	ldr	r2, [sp]
   15b10:	mov	r1, r5
   15b14:	mov	r9, r0
   15b18:	mov	r0, r2
   15b1c:	bl	15804 <close_stdout@@Base+0x2d18>
   15b20:	mul	sl, sl, r9
   15b24:	orr	r1, r7, r1, lsl #16
   15b28:	cmp	sl, r1
   15b2c:	bls	15b4c <close_stdout@@Base+0x3060>
   15b30:	adds	r8, r1, r8
   15b34:	sub	r3, r9, #1
   15b38:	bcs	15b48 <close_stdout@@Base+0x305c>
   15b3c:	cmp	sl, r8
   15b40:	subhi	r9, r9, #2
   15b44:	bhi	15b4c <close_stdout@@Base+0x3060>
   15b48:	mov	r9, r3
   15b4c:	orr	r3, r9, fp, lsl #16
   15b50:	b	15a18 <close_stdout@@Base+0x2f2c>
   15b54:	mvn	r6, r6
   15b58:	rsbs	r2, r2, #0
   15b5c:	rsc	r3, r3, #0
   15b60:	b	15920 <close_stdout@@Base+0x2e34>
   15b64:	lsl	r8, r8, r3
   15b68:	rsb	fp, r3, #32
   15b6c:	lsr	r4, r9, fp
   15b70:	lsr	fp, r7, fp
   15b74:	lsr	r5, r8, #16
   15b78:	orr	fp, fp, r9, lsl r3
   15b7c:	mov	r0, r4
   15b80:	lsl	r7, r7, r3
   15b84:	mov	r1, r5
   15b88:	uxth	sl, r8
   15b8c:	bl	15618 <close_stdout@@Base+0x2b2c>
   15b90:	mov	r1, r5
   15b94:	mov	r3, r0
   15b98:	mov	r0, r4
   15b9c:	str	r3, [sp]
   15ba0:	bl	15804 <close_stdout@@Base+0x2d18>
   15ba4:	ldr	r3, [sp]
   15ba8:	lsr	r2, fp, #16
   15bac:	mul	r0, sl, r3
   15bb0:	orr	r1, r2, r1, lsl #16
   15bb4:	cmp	r0, r1
   15bb8:	bls	15bd8 <close_stdout@@Base+0x30ec>
   15bbc:	adds	r1, r1, r8
   15bc0:	sub	r2, r3, #1
   15bc4:	bcs	15d78 <close_stdout@@Base+0x328c>
   15bc8:	cmp	r0, r1
   15bcc:	subhi	r3, r3, #2
   15bd0:	addhi	r1, r1, r8
   15bd4:	bls	15d78 <close_stdout@@Base+0x328c>
   15bd8:	rsb	r9, r0, r1
   15bdc:	mov	r1, r5
   15be0:	str	r3, [sp]
   15be4:	uxth	fp, fp
   15be8:	mov	r0, r9
   15bec:	bl	15618 <close_stdout@@Base+0x2b2c>
   15bf0:	mov	r1, r5
   15bf4:	mov	r4, r0
   15bf8:	mov	r0, r9
   15bfc:	bl	15804 <close_stdout@@Base+0x2d18>
   15c00:	mul	r9, sl, r4
   15c04:	ldr	r3, [sp]
   15c08:	orr	r1, fp, r1, lsl #16
   15c0c:	cmp	r9, r1
   15c10:	bls	15c34 <close_stdout@@Base+0x3148>
   15c14:	adds	r1, r1, r8
   15c18:	sub	r2, r4, #1
   15c1c:	bcs	15c30 <close_stdout@@Base+0x3144>
   15c20:	cmp	r9, r1
   15c24:	subhi	r4, r4, #2
   15c28:	addhi	r1, r1, r8
   15c2c:	bhi	15c34 <close_stdout@@Base+0x3148>
   15c30:	mov	r4, r2
   15c34:	rsb	r9, r9, r1
   15c38:	orr	r4, r4, r3, lsl #16
   15c3c:	b	15aa8 <close_stdout@@Base+0x2fbc>
   15c40:	rsb	sl, r5, #32
   15c44:	lsl	r3, r2, r5
   15c48:	lsr	r0, r2, sl
   15c4c:	lsr	r2, ip, sl
   15c50:	orr	r4, r0, r1, lsl r5
   15c54:	lsr	sl, r7, sl
   15c58:	mov	r0, r2
   15c5c:	orr	sl, sl, ip, lsl r5
   15c60:	lsr	r9, r4, #16
   15c64:	str	r3, [sp, #4]
   15c68:	str	r2, [sp]
   15c6c:	uxth	fp, r4
   15c70:	mov	r1, r9
   15c74:	bl	15618 <close_stdout@@Base+0x2b2c>
   15c78:	ldr	r2, [sp]
   15c7c:	mov	r1, r9
   15c80:	mov	r8, r0
   15c84:	mov	r0, r2
   15c88:	bl	15804 <close_stdout@@Base+0x2d18>
   15c8c:	mul	r0, fp, r8
   15c90:	lsr	r2, sl, #16
   15c94:	orr	r1, r2, r1, lsl #16
   15c98:	cmp	r0, r1
   15c9c:	bls	15cbc <close_stdout@@Base+0x31d0>
   15ca0:	adds	r1, r1, r4
   15ca4:	sub	r2, r8, #1
   15ca8:	bcs	15d70 <close_stdout@@Base+0x3284>
   15cac:	cmp	r0, r1
   15cb0:	subhi	r8, r8, #2
   15cb4:	addhi	r1, r1, r4
   15cb8:	bls	15d70 <close_stdout@@Base+0x3284>
   15cbc:	rsb	ip, r0, r1
   15cc0:	mov	r1, r9
   15cc4:	str	ip, [sp]
   15cc8:	mov	r0, ip
   15ccc:	bl	15618 <close_stdout@@Base+0x2b2c>
   15cd0:	ldr	ip, [sp]
   15cd4:	mov	r1, r9
   15cd8:	mov	r2, r0
   15cdc:	mov	r0, ip
   15ce0:	str	r2, [sp]
   15ce4:	bl	15804 <close_stdout@@Base+0x2d18>
   15ce8:	ldr	r2, [sp]
   15cec:	uxth	ip, sl
   15cf0:	mul	fp, fp, r2
   15cf4:	orr	ip, ip, r1, lsl #16
   15cf8:	cmp	fp, ip
   15cfc:	bls	15d1c <close_stdout@@Base+0x3230>
   15d00:	adds	ip, ip, r4
   15d04:	sub	r1, r2, #1
   15d08:	bcs	15d68 <close_stdout@@Base+0x327c>
   15d0c:	cmp	fp, ip
   15d10:	subhi	r2, r2, #2
   15d14:	addhi	ip, ip, r4
   15d18:	bls	15d68 <close_stdout@@Base+0x327c>
   15d1c:	ldr	r0, [sp, #4]
   15d20:	orr	r1, r2, r8, lsl #16
   15d24:	rsb	fp, fp, ip
   15d28:	umull	r2, r3, r1, r0
   15d2c:	cmp	fp, r3
   15d30:	bcc	15d54 <close_stdout@@Base+0x3268>
   15d34:	movne	r4, #0
   15d38:	moveq	r4, #1
   15d3c:	cmp	r2, r7, lsl r5
   15d40:	movls	r4, #0
   15d44:	andhi	r4, r4, #1
   15d48:	cmp	r4, #0
   15d4c:	moveq	r3, r1
   15d50:	beq	15a18 <close_stdout@@Base+0x2f2c>
   15d54:	sub	r3, r1, #1
   15d58:	mov	r4, #0
   15d5c:	b	15a18 <close_stdout@@Base+0x2f2c>
   15d60:	mov	fp, r3
   15d64:	b	15af4 <close_stdout@@Base+0x3008>
   15d68:	mov	r2, r1
   15d6c:	b	15d1c <close_stdout@@Base+0x3230>
   15d70:	mov	r8, r2
   15d74:	b	15cbc <close_stdout@@Base+0x31d0>
   15d78:	mov	r3, r2
   15d7c:	b	15bd8 <close_stdout@@Base+0x30ec>
   15d80:	cmp	r3, #0
   15d84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d88:	mov	r6, r0
   15d8c:	sub	sp, sp, #12
   15d90:	mov	r5, r1
   15d94:	mov	r7, r0
   15d98:	mov	r4, r2
   15d9c:	mov	r8, r1
   15da0:	bne	15e80 <close_stdout@@Base+0x3394>
   15da4:	cmp	r2, r1
   15da8:	bls	15ebc <close_stdout@@Base+0x33d0>
   15dac:	clz	r3, r2
   15db0:	cmp	r3, #0
   15db4:	rsbne	r8, r3, #32
   15db8:	lslne	r4, r2, r3
   15dbc:	lsrne	r8, r0, r8
   15dc0:	lslne	r7, r0, r3
   15dc4:	orrne	r8, r8, r1, lsl r3
   15dc8:	lsr	r5, r4, #16
   15dcc:	uxth	sl, r4
   15dd0:	mov	r1, r5
   15dd4:	mov	r0, r8
   15dd8:	bl	15618 <close_stdout@@Base+0x2b2c>
   15ddc:	mov	r1, r5
   15de0:	mov	r9, r0
   15de4:	mov	r0, r8
   15de8:	bl	15804 <close_stdout@@Base+0x2d18>
   15dec:	mul	r0, sl, r9
   15df0:	lsr	r3, r7, #16
   15df4:	orr	r1, r3, r1, lsl #16
   15df8:	cmp	r0, r1
   15dfc:	bls	15e20 <close_stdout@@Base+0x3334>
   15e00:	adds	r1, r1, r4
   15e04:	sub	r2, r9, #1
   15e08:	bcs	15e1c <close_stdout@@Base+0x3330>
   15e0c:	cmp	r0, r1
   15e10:	subhi	r9, r9, #2
   15e14:	addhi	r1, r1, r4
   15e18:	bhi	15e20 <close_stdout@@Base+0x3334>
   15e1c:	mov	r9, r2
   15e20:	rsb	r8, r0, r1
   15e24:	mov	r1, r5
   15e28:	uxth	r7, r7
   15e2c:	mov	r0, r8
   15e30:	bl	15618 <close_stdout@@Base+0x2b2c>
   15e34:	mov	r1, r5
   15e38:	mov	r6, r0
   15e3c:	mov	r0, r8
   15e40:	bl	15804 <close_stdout@@Base+0x2d18>
   15e44:	mul	sl, sl, r6
   15e48:	orr	r1, r7, r1, lsl #16
   15e4c:	cmp	sl, r1
   15e50:	bls	15e6c <close_stdout@@Base+0x3380>
   15e54:	adds	r4, r1, r4
   15e58:	sub	r3, r6, #1
   15e5c:	bcs	16168 <close_stdout@@Base+0x367c>
   15e60:	cmp	sl, r4
   15e64:	subhi	r6, r6, #2
   15e68:	bls	16168 <close_stdout@@Base+0x367c>
   15e6c:	orr	r0, r6, r9, lsl #16
   15e70:	mov	r6, #0
   15e74:	mov	r1, r6
   15e78:	add	sp, sp, #12
   15e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e80:	cmp	r3, r1
   15e84:	movhi	r6, #0
   15e88:	movhi	r0, r6
   15e8c:	bhi	15e74 <close_stdout@@Base+0x3388>
   15e90:	clz	r7, r3
   15e94:	cmp	r7, #0
   15e98:	bne	15f98 <close_stdout@@Base+0x34ac>
   15e9c:	cmp	r3, r1
   15ea0:	cmpcs	r2, r6
   15ea4:	movhi	r6, #0
   15ea8:	movls	r6, #1
   15eac:	movls	r0, #1
   15eb0:	movls	r6, r7
   15eb4:	movhi	r0, r6
   15eb8:	b	15e74 <close_stdout@@Base+0x3388>
   15ebc:	cmp	r2, #0
   15ec0:	bne	15ed4 <close_stdout@@Base+0x33e8>
   15ec4:	mov	r1, r2
   15ec8:	mov	r0, #1
   15ecc:	bl	15618 <close_stdout@@Base+0x2b2c>
   15ed0:	mov	r4, r0
   15ed4:	clz	r3, r4
   15ed8:	cmp	r3, #0
   15edc:	bne	16094 <close_stdout@@Base+0x35a8>
   15ee0:	rsb	r5, r4, r5
   15ee4:	lsr	r8, r4, #16
   15ee8:	uxth	sl, r4
   15eec:	mov	r6, #1
   15ef0:	mov	r1, r8
   15ef4:	mov	r0, r5
   15ef8:	bl	15618 <close_stdout@@Base+0x2b2c>
   15efc:	mov	r1, r8
   15f00:	mov	r9, r0
   15f04:	mov	r0, r5
   15f08:	bl	15804 <close_stdout@@Base+0x2d18>
   15f0c:	mul	r0, sl, r9
   15f10:	lsr	r3, r7, #16
   15f14:	orr	r1, r3, r1, lsl #16
   15f18:	cmp	r0, r1
   15f1c:	bls	15f3c <close_stdout@@Base+0x3450>
   15f20:	adds	r1, r1, r4
   15f24:	sub	r2, r9, #1
   15f28:	bcs	16170 <close_stdout@@Base+0x3684>
   15f2c:	cmp	r0, r1
   15f30:	subhi	r9, r9, #2
   15f34:	addhi	r1, r1, r4
   15f38:	bls	16170 <close_stdout@@Base+0x3684>
   15f3c:	rsb	fp, r0, r1
   15f40:	mov	r1, r8
   15f44:	uxth	r7, r7
   15f48:	mov	r0, fp
   15f4c:	bl	15618 <close_stdout@@Base+0x2b2c>
   15f50:	mov	r1, r8
   15f54:	mov	r5, r0
   15f58:	mov	r0, fp
   15f5c:	bl	15804 <close_stdout@@Base+0x2d18>
   15f60:	mul	sl, sl, r5
   15f64:	orr	r1, r7, r1, lsl #16
   15f68:	cmp	sl, r1
   15f6c:	bls	15f88 <close_stdout@@Base+0x349c>
   15f70:	adds	r4, r1, r4
   15f74:	sub	r3, r5, #1
   15f78:	bcs	16178 <close_stdout@@Base+0x368c>
   15f7c:	cmp	sl, r4
   15f80:	subhi	r5, r5, #2
   15f84:	bls	16178 <close_stdout@@Base+0x368c>
   15f88:	orr	r0, r5, r9, lsl #16
   15f8c:	mov	r1, r6
   15f90:	add	sp, sp, #12
   15f94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f98:	rsb	r1, r7, #32
   15f9c:	lsl	r0, r2, r7
   15fa0:	lsr	r2, r2, r1
   15fa4:	lsr	fp, r5, r1
   15fa8:	orr	r8, r2, r3, lsl r7
   15fac:	lsr	r1, r6, r1
   15fb0:	str	r0, [sp, #4]
   15fb4:	orr	r5, r1, r5, lsl r7
   15fb8:	lsr	r9, r8, #16
   15fbc:	mov	r0, fp
   15fc0:	uxth	sl, r8
   15fc4:	mov	r1, r9
   15fc8:	bl	15618 <close_stdout@@Base+0x2b2c>
   15fcc:	mov	r1, r9
   15fd0:	mov	r4, r0
   15fd4:	mov	r0, fp
   15fd8:	bl	15804 <close_stdout@@Base+0x2d18>
   15fdc:	mul	r0, sl, r4
   15fe0:	lsr	ip, r5, #16
   15fe4:	orr	r1, ip, r1, lsl #16
   15fe8:	cmp	r0, r1
   15fec:	bls	16000 <close_stdout@@Base+0x3514>
   15ff0:	adds	r1, r1, r8
   15ff4:	sub	r2, r4, #1
   15ff8:	bcc	16194 <close_stdout@@Base+0x36a8>
   15ffc:	mov	r4, r2
   16000:	rsb	ip, r0, r1
   16004:	mov	r1, r9
   16008:	str	ip, [sp]
   1600c:	uxth	r5, r5
   16010:	mov	r0, ip
   16014:	bl	15618 <close_stdout@@Base+0x2b2c>
   16018:	ldr	ip, [sp]
   1601c:	mov	r1, r9
   16020:	mov	fp, r0
   16024:	mov	r0, ip
   16028:	bl	15804 <close_stdout@@Base+0x2d18>
   1602c:	mul	sl, sl, fp
   16030:	orr	r1, r5, r1, lsl #16
   16034:	cmp	sl, r1
   16038:	bls	1604c <close_stdout@@Base+0x3560>
   1603c:	adds	r1, r1, r8
   16040:	sub	r2, fp, #1
   16044:	bcc	16180 <close_stdout@@Base+0x3694>
   16048:	mov	fp, r2
   1604c:	ldr	r3, [sp, #4]
   16050:	orr	r0, fp, r4, lsl #16
   16054:	rsb	sl, sl, r1
   16058:	umull	r4, r5, r0, r3
   1605c:	cmp	sl, r5
   16060:	bcc	16080 <close_stdout@@Base+0x3594>
   16064:	movne	r3, #0
   16068:	moveq	r3, #1
   1606c:	cmp	r4, r6, lsl r7
   16070:	movls	r6, #0
   16074:	andhi	r6, r3, #1
   16078:	cmp	r6, #0
   1607c:	beq	15e74 <close_stdout@@Base+0x3388>
   16080:	mov	r6, #0
   16084:	sub	r0, r0, #1
   16088:	mov	r1, r6
   1608c:	add	sp, sp, #12
   16090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16094:	lsl	r4, r4, r3
   16098:	rsb	r9, r3, #32
   1609c:	lsr	r2, r5, r9
   160a0:	lsr	r9, r6, r9
   160a4:	lsr	r8, r4, #16
   160a8:	orr	r9, r9, r5, lsl r3
   160ac:	mov	r0, r2
   160b0:	lsl	r7, r6, r3
   160b4:	mov	r1, r8
   160b8:	str	r2, [sp]
   160bc:	bl	15618 <close_stdout@@Base+0x2b2c>
   160c0:	ldr	r2, [sp]
   160c4:	mov	r1, r8
   160c8:	uxth	sl, r4
   160cc:	mov	fp, r0
   160d0:	mov	r0, r2
   160d4:	bl	15804 <close_stdout@@Base+0x2d18>
   160d8:	mul	r0, sl, fp
   160dc:	lsr	r3, r9, #16
   160e0:	orr	r1, r3, r1, lsl #16
   160e4:	cmp	r0, r1
   160e8:	bls	16108 <close_stdout@@Base+0x361c>
   160ec:	adds	r1, r1, r4
   160f0:	sub	r3, fp, #1
   160f4:	bcs	161a8 <close_stdout@@Base+0x36bc>
   160f8:	cmp	r0, r1
   160fc:	subhi	fp, fp, #2
   16100:	addhi	r1, r1, r4
   16104:	bls	161a8 <close_stdout@@Base+0x36bc>
   16108:	rsb	r5, r0, r1
   1610c:	mov	r1, r8
   16110:	uxth	r9, r9
   16114:	mov	r0, r5
   16118:	bl	15618 <close_stdout@@Base+0x2b2c>
   1611c:	mov	r1, r8
   16120:	mov	r6, r0
   16124:	mov	r0, r5
   16128:	bl	15804 <close_stdout@@Base+0x2d18>
   1612c:	mul	r5, sl, r6
   16130:	orr	r1, r9, r1, lsl #16
   16134:	cmp	r5, r1
   16138:	bls	1615c <close_stdout@@Base+0x3670>
   1613c:	adds	r1, r1, r4
   16140:	sub	r3, r6, #1
   16144:	bcs	16158 <close_stdout@@Base+0x366c>
   16148:	cmp	r5, r1
   1614c:	subhi	r6, r6, #2
   16150:	addhi	r1, r1, r4
   16154:	bhi	1615c <close_stdout@@Base+0x3670>
   16158:	mov	r6, r3
   1615c:	rsb	r5, r5, r1
   16160:	orr	r6, r6, fp, lsl #16
   16164:	b	15ef0 <close_stdout@@Base+0x3404>
   16168:	mov	r6, r3
   1616c:	b	15e6c <close_stdout@@Base+0x3380>
   16170:	mov	r9, r2
   16174:	b	15f3c <close_stdout@@Base+0x3450>
   16178:	mov	r5, r3
   1617c:	b	15f88 <close_stdout@@Base+0x349c>
   16180:	cmp	sl, r1
   16184:	subhi	fp, fp, #2
   16188:	addhi	r1, r1, r8
   1618c:	bhi	1604c <close_stdout@@Base+0x3560>
   16190:	b	16048 <close_stdout@@Base+0x355c>
   16194:	cmp	r0, r1
   16198:	subhi	r4, r4, #2
   1619c:	addhi	r1, r1, r8
   161a0:	bhi	16000 <close_stdout@@Base+0x3514>
   161a4:	b	15ffc <close_stdout@@Base+0x3510>
   161a8:	mov	fp, r3
   161ac:	b	16108 <close_stdout@@Base+0x361c>
   161b0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   161b4:	mov	r7, r0
   161b8:	ldr	r6, [pc, #76]	; 1620c <close_stdout@@Base+0x3720>
   161bc:	mov	r8, r1
   161c0:	ldr	r5, [pc, #72]	; 16210 <close_stdout@@Base+0x3724>
   161c4:	mov	r9, r2
   161c8:	add	r6, pc, r6
   161cc:	bl	11200 <fdopen@plt-0x20>
   161d0:	add	r5, pc, r5
   161d4:	rsb	r6, r5, r6
   161d8:	asrs	r6, r6, #2
   161dc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   161e0:	sub	r5, r5, #4
   161e4:	mov	r4, #0
   161e8:	add	r4, r4, #1
   161ec:	ldr	r3, [r5, #4]!
   161f0:	mov	r0, r7
   161f4:	mov	r1, r8
   161f8:	mov	r2, r9
   161fc:	blx	r3
   16200:	cmp	r4, r6
   16204:	bne	161e8 <close_stdout@@Base+0x36fc>
   16208:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1620c:	ldrdeq	r1, [r1], -ip
   16210:	ldrdeq	r1, [r1], -r0
   16214:	bx	lr
   16218:	ldr	r3, [pc, #28]	; 1623c <close_stdout@@Base+0x3750>
   1621c:	mov	r1, #0
   16220:	ldr	r2, [pc, #24]	; 16240 <close_stdout@@Base+0x3754>
   16224:	add	r3, pc, r3
   16228:	ldr	r3, [r3, r2]
   1622c:	cmp	r3, #0
   16230:	ldrne	r2, [r3]
   16234:	moveq	r2, r3
   16238:	b	11460 <__cxa_atexit@plt>
   1623c:	ldrdeq	r1, [r1], -r4
   16240:	andeq	r0, r0, r0, asr r1

Disassembly of section .fini:

00016244 <.fini>:
   16244:	push	{r3, lr}
   16248:	pop	{r3, pc}
