
centos-preinstalled/fipscheck:     file format elf32-littlearm


Disassembly of section .init:

00010c04 <_init@@Base>:
   10c04:	push	{r3, lr}
   10c08:	bl	1103c <__errno_location@plt+0x268>
   10c0c:	pop	{r3, pc}

Disassembly of section .plt:

00010c10 <strerror@plt-0x14>:
   10c10:	push	{lr}		; (str lr, [sp, #-4]!)
   10c14:	ldr	lr, [pc, #4]	; 10c20 <_init@@Base+0x1c>
   10c18:	add	lr, pc, lr
   10c1c:	ldr	pc, [lr, #8]!
   10c20:	andeq	r1, r1, r0, ror #7

00010c24 <strerror@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #69632	; 0x11000
   10c2c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c30 <abort@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #69632	; 0x11000
   10c38:	ldr	pc, [ip, #984]!	; 0x3d8

00010c3c <EVP_sha256@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #69632	; 0x11000
   10c44:	ldr	pc, [ip, #976]!	; 0x3d0

00010c48 <__libc_start_main@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #69632	; 0x11000
   10c50:	ldr	pc, [ip, #968]!	; 0x3c8

00010c54 <HMAC_CTX_cleanup@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #69632	; 0x11000
   10c5c:	ldr	pc, [ip, #960]!	; 0x3c0

00010c60 <__gmon_start__@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #69632	; 0x11000
   10c68:	ldr	pc, [ip, #952]!	; 0x3b8

00010c6c <strncpy@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #69632	; 0x11000
   10c74:	ldr	pc, [ip, #944]!	; 0x3b0

00010c78 <fclose@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #69632	; 0x11000
   10c80:	ldr	pc, [ip, #936]!	; 0x3a8

00010c84 <fgets@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #69632	; 0x11000
   10c8c:	ldr	pc, [ip, #928]!	; 0x3a0

00010c90 <getenv@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #69632	; 0x11000
   10c98:	ldr	pc, [ip, #920]!	; 0x398

00010c9c <strchr@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #69632	; 0x11000
   10ca4:	ldr	pc, [ip, #912]!	; 0x390

00010ca8 <strcasecmp@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #69632	; 0x11000
   10cb0:	ldr	pc, [ip, #904]!	; 0x388

00010cb4 <HMAC_Init@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #69632	; 0x11000
   10cbc:	ldr	pc, [ip, #896]!	; 0x380

00010cc0 <stpcpy@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #69632	; 0x11000
   10cc8:	ldr	pc, [ip, #888]!	; 0x378

00010ccc <fopen@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #880]!	; 0x370

00010cd8 <strrchr@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #872]!	; 0x368

00010ce4 <free@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #864]!	; 0x360

00010cf0 <FIPS_mode@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #856]!	; 0x358

00010cfc <strlen@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #848]!	; 0x350

00010d08 <HMAC_Final@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #840]!	; 0x348

00010d14 <memcpy@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #832]!	; 0x340

00010d20 <FIPS_mode_set@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #824]!	; 0x338

00010d2c <strcpy@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #69632	; 0x11000
   10d34:	ldr	pc, [ip, #816]!	; 0x330

00010d38 <HMAC_Update@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #69632	; 0x11000
   10d40:	ldr	pc, [ip, #808]!	; 0x328

00010d44 <__syslog_chk@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #69632	; 0x11000
   10d4c:	ldr	pc, [ip, #800]!	; 0x320

00010d50 <fwrite@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #69632	; 0x11000
   10d58:	ldr	pc, [ip, #792]!	; 0x318

00010d5c <malloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #69632	; 0x11000
   10d64:	ldr	pc, [ip, #784]!	; 0x310

00010d68 <__stack_chk_fail@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #69632	; 0x11000
   10d70:	ldr	pc, [ip, #776]!	; 0x308

00010d74 <__fprintf_chk@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #69632	; 0x11000
   10d7c:	ldr	pc, [ip, #768]!	; 0x300

00010d80 <FIPSCHECK_kernel_fips_mode@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #69632	; 0x11000
   10d88:	ldr	pc, [ip, #760]!	; 0x2f8

00010d8c <FIPSCHECK_get_binary_path@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #69632	; 0x11000
   10d94:	ldr	pc, [ip, #752]!	; 0x2f0

00010d98 <HMAC_CTX_init@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #69632	; 0x11000
   10da0:	ldr	pc, [ip, #744]!	; 0x2e8

00010da4 <FIPSCHECK_get_library_path@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #69632	; 0x11000
   10dac:	ldr	pc, [ip, #736]!	; 0x2e0

00010db0 <fread@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #69632	; 0x11000
   10db8:	ldr	pc, [ip, #728]!	; 0x2d8

00010dbc <strcmp@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #69632	; 0x11000
   10dc4:	ldr	pc, [ip, #720]!	; 0x2d0

00010dc8 <__vasprintf_chk@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #69632	; 0x11000
   10dd0:	ldr	pc, [ip, #712]!	; 0x2c8

00010dd4 <__errno_location@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #69632	; 0x11000
   10ddc:	ldr	pc, [ip, #704]!	; 0x2c0

Disassembly of section .text:

00010de0 <.text>:
   10de0:	push	{r4, r5, r6, r7, r8, r9, lr}
   10de4:	movw	r4, #8360	; 0x20a8
   10de8:	movt	r4, #2
   10dec:	sub	sp, sp, #4096	; 0x1000
   10df0:	sub	sp, sp, #12
   10df4:	cmp	r0, #1
   10df8:	ldr	r3, [r4]
   10dfc:	add	r2, sp, #8192	; 0x2000
   10e00:	mov	r5, r0
   10e04:	mov	r7, r1
   10e08:	str	r3, [r2, #-4092]	; 0xfffff004
   10e0c:	ble	10e6c <__errno_location@plt+0x98>
   10e10:	bl	112dc <__errno_location@plt+0x508>
   10e14:	movw	r0, #6532	; 0x1984
   10e18:	movw	r1, #6552	; 0x1998
   10e1c:	add	r2, sp, #4
   10e20:	movt	r1, #1
   10e24:	movt	r0, #1
   10e28:	mov	r3, #4096	; 0x1000
   10e2c:	bl	10da4 <FIPSCHECK_get_library_path@plt>
   10e30:	subs	r1, r0, #0
   10e34:	beq	10ed0 <__errno_location@plt+0xfc>
   10e38:	movw	r0, #6580	; 0x19b4
   10e3c:	movt	r0, #1
   10e40:	bl	11364 <__errno_location@plt+0x590>
   10e44:	mov	r6, #10
   10e48:	add	r3, sp, #8192	; 0x2000
   10e4c:	mov	r0, r6
   10e50:	ldr	r2, [r3, #-4092]	; 0xfffff004
   10e54:	ldr	r3, [r4]
   10e58:	cmp	r2, r3
   10e5c:	bne	10ffc <__errno_location@plt+0x228>
   10e60:	add	sp, sp, #4096	; 0x1000
   10e64:	add	sp, sp, #12
   10e68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10e6c:	movw	r3, #8368	; 0x20b0
   10e70:	movt	r3, #2
   10e74:	mov	r1, #1
   10e78:	mov	r2, #53	; 0x35
   10e7c:	ldr	r3, [r3]
   10e80:	movw	r0, #6456	; 0x1938
   10e84:	movt	r0, #1
   10e88:	mov	r6, #2
   10e8c:	bl	10d50 <fwrite@plt>
   10e90:	movw	r3, #8364	; 0x20ac
   10e94:	movt	r3, #2
   10e98:	ldr	r5, [r3]
   10e9c:	bl	10d80 <FIPSCHECK_kernel_fips_mode@plt>
   10ea0:	movw	ip, #6452	; 0x1934
   10ea4:	movt	ip, #1
   10ea8:	movw	r3, #6448	; 0x1930
   10eac:	movw	r2, #6512	; 0x1970
   10eb0:	movt	r3, #1
   10eb4:	mov	r1, #1
   10eb8:	movt	r2, #1
   10ebc:	cmp	r0, #0
   10ec0:	mov	r0, r5
   10ec4:	moveq	r3, ip
   10ec8:	bl	10d74 <__fprintf_chk@plt>
   10ecc:	b	10e48 <__errno_location@plt+0x74>
   10ed0:	add	r0, sp, #4
   10ed4:	bl	11134 <__errno_location@plt+0x360>
   10ed8:	cmp	r0, #0
   10edc:	addne	r6, r0, #10
   10ee0:	bne	10e48 <__errno_location@plt+0x74>
   10ee4:	add	r0, sp, #4
   10ee8:	mov	r1, #4096	; 0x1000
   10eec:	bl	10d8c <FIPSCHECK_get_binary_path@plt>
   10ef0:	subs	r6, r0, #0
   10ef4:	beq	10f0c <__errno_location@plt+0x138>
   10ef8:	movw	r0, #6616	; 0x19d8
   10efc:	movt	r0, #1
   10f00:	bl	11364 <__errno_location@plt+0x590>
   10f04:	mov	r6, #20
   10f08:	b	10e48 <__errno_location@plt+0x74>
   10f0c:	mov	r1, r6
   10f10:	add	r0, sp, #4
   10f14:	bl	11134 <__errno_location@plt+0x360>
   10f18:	cmp	r0, #0
   10f1c:	addne	r6, r0, #20
   10f20:	bne	10e48 <__errno_location@plt+0x74>
   10f24:	mov	r9, r6
   10f28:	mov	r3, #1
   10f2c:	ldr	r2, [r7, r3, lsl #2]
   10f30:	lsl	r1, r3, #2
   10f34:	ldrb	r0, [r2]
   10f38:	cmp	r0, #45	; 0x2d
   10f3c:	bne	10f6c <__errno_location@plt+0x198>
   10f40:	ldrb	r0, [r2, #1]
   10f44:	cmp	r0, #115	; 0x73
   10f48:	bne	10f6c <__errno_location@plt+0x198>
   10f4c:	ldrb	r2, [r2, #2]
   10f50:	cmp	r2, #0
   10f54:	bne	10f6c <__errno_location@plt+0x198>
   10f58:	add	r3, r3, #1
   10f5c:	cmp	r5, r3
   10f60:	ble	10fcc <__errno_location@plt+0x1f8>
   10f64:	add	r1, r7, r1
   10f68:	ldr	r9, [r1, #4]
   10f6c:	add	r3, r3, #1
   10f70:	cmp	r5, r3
   10f74:	bgt	10f2c <__errno_location@plt+0x158>
   10f78:	mov	r8, #1
   10f7c:	b	10f9c <__errno_location@plt+0x1c8>
   10f80:	mov	r1, r9
   10f84:	bl	11134 <__errno_location@plt+0x360>
   10f88:	cmp	r0, #0
   10f8c:	bne	10ff4 <__errno_location@plt+0x220>
   10f90:	add	r8, r8, #1
   10f94:	cmp	r5, r8
   10f98:	ble	10e48 <__errno_location@plt+0x74>
   10f9c:	ldr	r0, [r7, r8, lsl #2]
   10fa0:	ldrb	r3, [r0]
   10fa4:	cmp	r3, #45	; 0x2d
   10fa8:	bne	10f80 <__errno_location@plt+0x1ac>
   10fac:	ldrb	r3, [r0, #1]
   10fb0:	cmp	r3, #115	; 0x73
   10fb4:	bne	10f80 <__errno_location@plt+0x1ac>
   10fb8:	ldrb	r3, [r0, #2]
   10fbc:	cmp	r3, #0
   10fc0:	bne	10f80 <__errno_location@plt+0x1ac>
   10fc4:	add	r8, r8, #1
   10fc8:	b	10f90 <__errno_location@plt+0x1bc>
   10fcc:	movw	r3, #8368	; 0x20b0
   10fd0:	movt	r3, #2
   10fd4:	movw	r0, #6652	; 0x19fc
   10fd8:	mov	r1, #1
   10fdc:	ldr	r3, [r3]
   10fe0:	mov	r2, #34	; 0x22
   10fe4:	movt	r0, #1
   10fe8:	mov	r6, #2
   10fec:	bl	10d50 <fwrite@plt>
   10ff0:	b	10e48 <__errno_location@plt+0x74>
   10ff4:	mov	r6, r0
   10ff8:	b	10e48 <__errno_location@plt+0x74>
   10ffc:	bl	10d68 <__stack_chk_fail@plt>
   11000:	mov	fp, #0
   11004:	mov	lr, #0
   11008:	pop	{r1}		; (ldr r1, [sp], #4)
   1100c:	mov	r2, sp
   11010:	push	{r2}		; (str r2, [sp, #-4]!)
   11014:	push	{r0}		; (str r0, [sp, #-4]!)
   11018:	ldr	ip, [pc, #16]	; 11030 <__errno_location@plt+0x25c>
   1101c:	push	{ip}		; (str ip, [sp, #-4]!)
   11020:	ldr	r0, [pc, #12]	; 11034 <__errno_location@plt+0x260>
   11024:	ldr	r3, [pc, #12]	; 11038 <__errno_location@plt+0x264>
   11028:	bl	10c48 <__libc_start_main@plt>
   1102c:	bl	10c30 <abort@plt>
   11030:	andeq	r1, r1, r0, ror r8
   11034:	andeq	r0, r1, r0, ror #27
   11038:	andeq	r1, r1, ip, lsl #16
   1103c:	ldr	r3, [pc, #20]	; 11058 <__errno_location@plt+0x284>
   11040:	ldr	r2, [pc, #20]	; 1105c <__errno_location@plt+0x288>
   11044:	add	r3, pc, r3
   11048:	ldr	r2, [r3, r2]
   1104c:	cmp	r2, #0
   11050:	bxeq	lr
   11054:	b	10c60 <__gmon_start__@plt>
   11058:			; <UNDEFINED> instruction: 0x00010fb4
   1105c:	andeq	r0, r0, r0, lsr #1
   11060:	push	{r3, lr}
   11064:	movw	r0, #8360	; 0x20a8
   11068:	ldr	r3, [pc, #36]	; 11094 <__errno_location@plt+0x2c0>
   1106c:	movt	r0, #2
   11070:	rsb	r3, r0, r3
   11074:	cmp	r3, #6
   11078:	popls	{r3, pc}
   1107c:	movw	r3, #0
   11080:	movt	r3, #0
   11084:	cmp	r3, #0
   11088:	popeq	{r3, pc}
   1108c:	blx	r3
   11090:	pop	{r3, pc}
   11094:	andeq	r2, r2, fp, lsr #1
   11098:	push	{r3, lr}
   1109c:	movw	r0, #8360	; 0x20a8
   110a0:	movw	r3, #8360	; 0x20a8
   110a4:	movt	r0, #2
   110a8:	movt	r3, #2
   110ac:	rsb	r3, r0, r3
   110b0:	asr	r3, r3, #2
   110b4:	add	r3, r3, r3, lsr #31
   110b8:	asrs	r1, r3, #1
   110bc:	popeq	{r3, pc}
   110c0:	movw	r2, #0
   110c4:	movt	r2, #0
   110c8:	cmp	r2, #0
   110cc:	popeq	{r3, pc}
   110d0:	blx	r2
   110d4:	pop	{r3, pc}
   110d8:	push	{r4, lr}
   110dc:	movw	r4, #8372	; 0x20b4
   110e0:	movt	r4, #2
   110e4:	ldrb	r3, [r4]
   110e8:	cmp	r3, #0
   110ec:	popne	{r4, pc}
   110f0:	bl	11060 <__errno_location@plt+0x28c>
   110f4:	mov	r3, #1
   110f8:	strb	r3, [r4]
   110fc:	pop	{r4, pc}
   11100:	movw	r0, #7916	; 0x1eec
   11104:	movt	r0, #2
   11108:	push	{r3, lr}
   1110c:	ldr	r3, [r0]
   11110:	cmp	r3, #0
   11114:	beq	1112c <__errno_location@plt+0x358>
   11118:	movw	r3, #0
   1111c:	movt	r3, #0
   11120:	cmp	r3, #0
   11124:	beq	1112c <__errno_location@plt+0x358>
   11128:	blx	r3
   1112c:	pop	{r3, lr}
   11130:	b	11098 <__errno_location@plt+0x2c4>
   11134:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11138:	movw	sl, #8360	; 0x20a8
   1113c:	movt	sl, #2
   11140:	sub	sp, sp, #1040	; 0x410
   11144:	movw	r4, #6276	; 0x1884
   11148:	mov	r8, r0
   1114c:	ldr	r3, [sl]
   11150:	movt	r4, #1
   11154:	mov	r9, r1
   11158:	str	r3, [sp, #1036]	; 0x40c
   1115c:	b	1119c <__errno_location@plt+0x3c8>
   11160:	movw	r1, #6804	; 0x1a94
   11164:	movt	r1, #1
   11168:	bl	10ccc <fopen@plt>
   1116c:	rsbs	r5, r0, #1
   11170:	mov	r7, r0
   11174:	movcc	r5, #0
   11178:	cmp	r4, #0
   1117c:	movne	r4, #0
   11180:	andeq	r4, r5, #1
   11184:	cmp	r4, #0
   11188:	bne	111dc <__errno_location@plt+0x408>
   1118c:	mov	r0, r6
   11190:	bl	10ce4 <free@plt>
   11194:	cmp	r5, #0
   11198:	beq	111fc <__errno_location@plt+0x428>
   1119c:	mov	r0, r8
   111a0:	mov	r1, r4
   111a4:	mov	r2, r9
   111a8:	bl	11700 <__errno_location@plt+0x92c>
   111ac:	subs	r6, r0, #0
   111b0:	bne	11160 <__errno_location@plt+0x38c>
   111b4:	movw	r0, #6296	; 0x1898
   111b8:	movt	r0, #1
   111bc:	bl	11364 <__errno_location@plt+0x590>
   111c0:	mov	r0, #5
   111c4:	ldr	r2, [sp, #1036]	; 0x40c
   111c8:	ldr	r3, [sl]
   111cc:	cmp	r2, r3
   111d0:	bne	112d8 <__errno_location@plt+0x504>
   111d4:	add	sp, sp, #1040	; 0x410
   111d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111dc:	mov	r1, r6
   111e0:	movw	r0, #6320	; 0x18b0
   111e4:	movt	r0, #1
   111e8:	bl	11364 <__errno_location@plt+0x590>
   111ec:	mov	r0, r6
   111f0:	bl	10ce4 <free@plt>
   111f4:	mov	r0, #3
   111f8:	b	111c4 <__errno_location@plt+0x3f0>
   111fc:	mov	r1, #1024	; 0x400
   11200:	mov	r2, r7
   11204:	add	r0, sp, #12
   11208:	bl	10c84 <fgets@plt>
   1120c:	cmp	r0, #0
   11210:	beq	112a4 <__errno_location@plt+0x4d0>
   11214:	mov	r1, #10
   11218:	add	r0, sp, #12
   1121c:	bl	10c9c <strchr@plt>
   11220:	add	r1, sp, #4
   11224:	add	r2, sp, #8
   11228:	mov	r3, #1
   1122c:	cmp	r0, #0
   11230:	strbne	r5, [r0]
   11234:	mov	r0, r8
   11238:	bl	11500 <__errno_location@plt+0x72c>
   1123c:	cmp	r0, #0
   11240:	movlt	r4, #4
   11244:	blt	1127c <__errno_location@plt+0x4a8>
   11248:	ldmib	sp, {r0, r1}
   1124c:	bl	11684 <__errno_location@plt+0x8b0>
   11250:	subs	r5, r0, #0
   11254:	beq	112bc <__errno_location@plt+0x4e8>
   11258:	add	r1, sp, #12
   1125c:	bl	10dbc <strcmp@plt>
   11260:	cmp	r0, #0
   11264:	moveq	r4, r0
   11268:	bne	1128c <__errno_location@plt+0x4b8>
   1126c:	ldr	r0, [sp, #4]
   11270:	bl	10ce4 <free@plt>
   11274:	mov	r0, r5
   11278:	bl	10ce4 <free@plt>
   1127c:	mov	r0, r7
   11280:	bl	10c78 <fclose@plt>
   11284:	mov	r0, r4
   11288:	b	111c4 <__errno_location@plt+0x3f0>
   1128c:	mov	r1, r8
   11290:	movw	r0, #6384	; 0x18f0
   11294:	movt	r0, #1
   11298:	mov	r4, #1
   1129c:	bl	11364 <__errno_location@plt+0x590>
   112a0:	b	1126c <__errno_location@plt+0x498>
   112a4:	mov	r1, r8
   112a8:	movw	r0, #6412	; 0x190c
   112ac:	movt	r0, #1
   112b0:	mov	r4, #1
   112b4:	bl	11364 <__errno_location@plt+0x590>
   112b8:	b	1127c <__errno_location@plt+0x4a8>
   112bc:	movw	r0, #6348	; 0x18cc
   112c0:	movt	r0, #1
   112c4:	bl	11364 <__errno_location@plt+0x590>
   112c8:	ldr	r0, [sp, #4]
   112cc:	bl	10ce4 <free@plt>
   112d0:	mov	r4, #5
   112d4:	b	1127c <__errno_location@plt+0x4a8>
   112d8:	bl	10d68 <__stack_chk_fail@plt>
   112dc:	push	{r4, lr}
   112e0:	movw	r0, #6768	; 0x1a70
   112e4:	movt	r0, #1
   112e8:	bl	10c90 <getenv@plt>
   112ec:	subs	r4, r0, #0
   112f0:	popeq	{r4, pc}
   112f4:	movw	r1, #6784	; 0x1a80
   112f8:	movt	r1, #1
   112fc:	bl	10ca8 <strcasecmp@plt>
   11300:	cmp	r0, #0
   11304:	beq	11350 <__errno_location@plt+0x57c>
   11308:	movw	r1, #6792	; 0x1a88
   1130c:	mov	r0, r4
   11310:	movt	r1, #1
   11314:	bl	10ca8 <strcasecmp@plt>
   11318:	cmp	r0, #0
   1131c:	bne	11334 <__errno_location@plt+0x560>
   11320:	movw	r3, #8376	; 0x20b8
   11324:	movt	r3, #2
   11328:	mov	r2, #2
   1132c:	str	r2, [r3]
   11330:	pop	{r4, pc}
   11334:	mov	r0, r4
   11338:	movw	r1, #6800	; 0x1a90
   1133c:	movt	r1, #1
   11340:	bl	10ca8 <strcasecmp@plt>
   11344:	cmp	r0, #0
   11348:	beq	11320 <__errno_location@plt+0x54c>
   1134c:	pop	{r4, pc}
   11350:	movw	r3, #8376	; 0x20b8
   11354:	movt	r3, #2
   11358:	mov	r2, #1
   1135c:	str	r2, [r3]
   11360:	pop	{r4, pc}
   11364:	push	{r0, r1, r2, r3}
   11368:	push	{r4, r5, r6, r7, r8, r9, lr}
   1136c:	movw	r4, #8360	; 0x20a8
   11370:	movt	r4, #2
   11374:	sub	sp, sp, #28
   11378:	movw	r5, #8376	; 0x20b8
   1137c:	movt	r5, #2
   11380:	ldr	r3, [r4]
   11384:	ldr	r8, [sp, #56]	; 0x38
   11388:	str	r3, [sp, #20]
   1138c:	bl	10dd4 <__errno_location@plt>
   11390:	ldr	r6, [r5]
   11394:	cmp	r6, #0
   11398:	ldr	r7, [r0]
   1139c:	bne	113c0 <__errno_location@plt+0x5ec>
   113a0:	ldr	r2, [sp, #20]
   113a4:	ldr	r3, [r4]
   113a8:	cmp	r2, r3
   113ac:	bne	114e8 <__errno_location@plt+0x714>
   113b0:	add	sp, sp, #28
   113b4:	pop	{r4, r5, r6, r7, r8, r9, lr}
   113b8:	add	sp, sp, #16
   113bc:	bx	lr
   113c0:	add	ip, sp, #60	; 0x3c
   113c4:	mov	r2, r8
   113c8:	add	r0, sp, #16
   113cc:	mov	r1, #1
   113d0:	mov	r3, ip
   113d4:	str	ip, [sp, #12]
   113d8:	bl	10dc8 <__vasprintf_chk@plt>
   113dc:	movw	r9, #6688	; 0x1a20
   113e0:	cmp	r0, #0
   113e4:	movtlt	r9, #1
   113e8:	movtge	r9, #1
   113ec:	ldrge	r8, [sp, #16]
   113f0:	strlt	r9, [sp, #16]
   113f4:	movlt	r8, r9
   113f8:	tst	r6, #1
   113fc:	beq	11450 <__errno_location@plt+0x67c>
   11400:	cmp	r7, #0
   11404:	beq	11498 <__errno_location@plt+0x6c4>
   11408:	mov	r0, r7
   1140c:	bl	10c24 <strerror@plt>
   11410:	mov	r3, r8
   11414:	movw	r2, #6808	; 0x1a98
   11418:	mov	r1, #1
   1141c:	movt	r2, #1
   11420:	str	r0, [sp]
   11424:	mov	r0, #3
   11428:	bl	10d44 <__syslog_chk@plt>
   1142c:	ldr	r3, [r5]
   11430:	ldr	r8, [sp, #16]
   11434:	tst	r3, #2
   11438:	bne	11460 <__errno_location@plt+0x68c>
   1143c:	cmp	r8, r9
   11440:	beq	113a0 <__errno_location@plt+0x5cc>
   11444:	mov	r0, r8
   11448:	bl	10ce4 <free@plt>
   1144c:	b	113a0 <__errno_location@plt+0x5cc>
   11450:	tst	r6, #2
   11454:	beq	1143c <__errno_location@plt+0x668>
   11458:	cmp	r7, #0
   1145c:	beq	114c0 <__errno_location@plt+0x6ec>
   11460:	movw	r3, #8368	; 0x20b0
   11464:	movt	r3, #2
   11468:	mov	r0, r7
   1146c:	ldr	r5, [r3]
   11470:	bl	10c24 <strerror@plt>
   11474:	mov	r3, r8
   11478:	movw	r2, #6820	; 0x1aa4
   1147c:	mov	r1, #1
   11480:	movt	r2, #1
   11484:	str	r0, [sp]
   11488:	mov	r0, r5
   1148c:	bl	10d74 <__fprintf_chk@plt>
   11490:	ldr	r8, [sp, #16]
   11494:	b	1143c <__errno_location@plt+0x668>
   11498:	mov	r3, r8
   1149c:	movw	r2, #6816	; 0x1aa0
   114a0:	mov	r0, #3
   114a4:	movt	r2, #1
   114a8:	mov	r1, #1
   114ac:	bl	10d44 <__syslog_chk@plt>
   114b0:	ldr	r3, [r5]
   114b4:	ldr	r8, [sp, #16]
   114b8:	tst	r3, #2
   114bc:	beq	1143c <__errno_location@plt+0x668>
   114c0:	movw	r1, #8368	; 0x20b0
   114c4:	movt	r1, #2
   114c8:	mov	r3, r8
   114cc:	movw	r2, #6840	; 0x1ab8
   114d0:	ldr	r0, [r1]
   114d4:	movt	r2, #1
   114d8:	mov	r1, #1
   114dc:	bl	10d74 <__fprintf_chk@plt>
   114e0:	ldr	r8, [sp, #16]
   114e4:	b	1143c <__errno_location@plt+0x668>
   114e8:	bl	10d68 <__stack_chk_fail@plt>
   114ec:	movw	r3, #8376	; 0x20b8
   114f0:	movt	r3, #2
   114f4:	mov	r2, #2
   114f8:	str	r2, [r3]
   114fc:	bx	lr
   11500:	push	{r4, r5, r6, r7, r8, r9, lr}
   11504:	movw	r6, #8360	; 0x20a8
   11508:	movt	r6, #2
   1150c:	sub	sp, sp, #16384	; 0x4000
   11510:	sub	sp, sp, #220	; 0xdc
   11514:	cmp	r3, #0
   11518:	ldr	r3, [r6]
   1151c:	mov	r9, r2
   11520:	add	r2, sp, #16384	; 0x4000
   11524:	mov	r4, r0
   11528:	mov	r8, r1
   1152c:	str	r3, [r2, #212]	; 0xd4
   11530:	beq	11540 <__errno_location@plt+0x76c>
   11534:	bl	10cf0 <FIPS_mode@plt>
   11538:	cmp	r0, #0
   1153c:	beq	11624 <__errno_location@plt+0x850>
   11540:	add	r0, sp, #4
   11544:	bl	10d98 <HMAC_CTX_init@plt>
   11548:	mov	r0, r4
   1154c:	movw	r1, #6804	; 0x1a94
   11550:	movt	r1, #1
   11554:	bl	10ccc <fopen@plt>
   11558:	subs	r5, r0, #0
   1155c:	beq	11648 <__errno_location@plt+0x874>
   11560:	bl	10c3c <EVP_sha256@plt>
   11564:	ldr	r1, [pc, #276]	; 11680 <__errno_location@plt+0x8ac>
   11568:	mov	r2, #32
   1156c:	mov	r3, r0
   11570:	add	r0, sp, #4
   11574:	bl	10cb4 <HMAC_Init@plt>
   11578:	b	1158c <__errno_location@plt+0x7b8>
   1157c:	mov	r2, r4
   11580:	add	r0, sp, #4
   11584:	add	r1, sp, #212	; 0xd4
   11588:	bl	10d38 <HMAC_Update@plt>
   1158c:	add	r0, sp, #212	; 0xd4
   11590:	mov	r1, #1
   11594:	mov	r2, #16384	; 0x4000
   11598:	mov	r3, r5
   1159c:	bl	10db0 <fread@plt>
   115a0:	subs	r4, r0, #0
   115a4:	bne	1157c <__errno_location@plt+0x7a8>
   115a8:	mov	r2, sp
   115ac:	add	r1, sp, #212	; 0xd4
   115b0:	add	r0, sp, #4
   115b4:	bl	10d08 <HMAC_Final@plt>
   115b8:	add	r2, sp, #16384	; 0x4000
   115bc:	add	r2, r2, #216	; 0xd8
   115c0:	movw	r3, #48936	; 0xbf28
   115c4:	movt	r3, #65535	; 0xffff
   115c8:	ldr	r7, [r2, r3]
   115cc:	mov	r0, r7
   115d0:	bl	10d5c <malloc@plt>
   115d4:	cmp	r0, #0
   115d8:	str	r0, [r8]
   115dc:	beq	11668 <__errno_location@plt+0x894>
   115e0:	str	r7, [r9]
   115e4:	add	r1, sp, #212	; 0xd4
   115e8:	mov	r2, r7
   115ec:	bl	10d14 <memcpy@plt>
   115f0:	add	r0, sp, #4
   115f4:	bl	10c54 <HMAC_CTX_cleanup@plt>
   115f8:	mov	r0, r5
   115fc:	bl	10c78 <fclose@plt>
   11600:	mov	r0, r4
   11604:	add	r3, sp, #16384	; 0x4000
   11608:	ldr	r2, [r3, #212]	; 0xd4
   1160c:	ldr	r3, [r6]
   11610:	cmp	r2, r3
   11614:	bne	1167c <__errno_location@plt+0x8a8>
   11618:	add	sp, sp, #16384	; 0x4000
   1161c:	add	sp, sp, #220	; 0xdc
   11620:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11624:	mov	r0, #1
   11628:	bl	10d20 <FIPS_mode_set@plt>
   1162c:	cmp	r0, #0
   11630:	bne	11540 <__errno_location@plt+0x76c>
   11634:	movw	r0, #6856	; 0x1ac8
   11638:	movt	r0, #1
   1163c:	bl	11364 <__errno_location@plt+0x590>
   11640:	mvn	r0, #0
   11644:	b	11604 <__errno_location@plt+0x830>
   11648:	mov	r1, r4
   1164c:	movw	r0, #6880	; 0x1ae0
   11650:	movt	r0, #1
   11654:	bl	11364 <__errno_location@plt+0x590>
   11658:	add	r0, sp, #4
   1165c:	bl	10c54 <HMAC_CTX_cleanup@plt>
   11660:	mvn	r0, #0
   11664:	b	11604 <__errno_location@plt+0x830>
   11668:	movw	r0, #6900	; 0x1af4
   1166c:	movt	r0, #1
   11670:	bl	11364 <__errno_location@plt+0x590>
   11674:	mvn	r4, #0
   11678:	b	115f0 <__errno_location@plt+0x81c>
   1167c:	bl	10d68 <__stack_chk_fail@plt>
   11680:	andeq	r1, r1, r8, lsr sl
   11684:	push	{r4, r5, r6, lr}
   11688:	lsl	r6, r1, #1
   1168c:	mov	r4, r0
   11690:	add	r0, r6, #1
   11694:	mov	r5, r1
   11698:	bl	10d5c <malloc@plt>
   1169c:	cmp	r0, #0
   116a0:	popeq	{r4, r5, r6, pc}
   116a4:	cmp	r5, #0
   116a8:	beq	116f8 <__errno_location@plt+0x924>
   116ac:	movw	ip, #6688	; 0x1a20
   116b0:	add	r1, r4, r5
   116b4:	movt	ip, #1
   116b8:	mov	r3, r0
   116bc:	ldrb	r2, [r4], #1
   116c0:	add	r3, r3, #2
   116c4:	and	r5, r2, #15
   116c8:	cmp	r4, r1
   116cc:	add	r5, ip, r5
   116d0:	add	r2, ip, r2, lsr #4
   116d4:	ldrb	r5, [r5, #60]	; 0x3c
   116d8:	ldrb	r2, [r2, #60]	; 0x3c
   116dc:	strb	r5, [r3, #-1]
   116e0:	strb	r2, [r3, #-2]
   116e4:	bne	116bc <__errno_location@plt+0x8e8>
   116e8:	add	r6, r0, r6
   116ec:	mov	r3, #0
   116f0:	strb	r3, [r6]
   116f4:	pop	{r4, r5, r6, pc}
   116f8:	mov	r6, r0
   116fc:	b	116ec <__errno_location@plt+0x918>
   11700:	push	{r4, r5, r6, r7, r8, lr}
   11704:	subs	r5, r2, #0
   11708:	mov	r8, r0
   1170c:	mov	r4, r1
   11710:	beq	117ac <__errno_location@plt+0x9d8>
   11714:	mov	r0, r5
   11718:	bl	10cfc <strlen@plt>
   1171c:	mov	r6, r0
   11720:	mov	r0, r8
   11724:	mov	r1, #47	; 0x2f
   11728:	bl	10cd8 <strrchr@plt>
   1172c:	cmp	r0, #0
   11730:	addne	r7, r0, #1
   11734:	moveq	r7, r8
   11738:	cmp	r4, #0
   1173c:	beq	117bc <__errno_location@plt+0x9e8>
   11740:	mov	r0, r7
   11744:	add	r6, r6, #2
   11748:	bl	10cfc <strlen@plt>
   1174c:	mov	r8, r0
   11750:	mov	r0, r4
   11754:	bl	10cfc <strlen@plt>
   11758:	add	r8, r6, r8
   1175c:	add	r0, r8, r0
   11760:	bl	10d5c <malloc@plt>
   11764:	subs	r6, r0, #0
   11768:	beq	11804 <__errno_location@plt+0xa30>
   1176c:	mov	r1, r4
   11770:	bl	10cc0 <stpcpy@plt>
   11774:	cmp	r6, r0
   11778:	beq	11794 <__errno_location@plt+0x9c0>
   1177c:	ldrb	r3, [r0, #-1]
   11780:	cmp	r3, #47	; 0x2f
   11784:	movwne	r3, #6940	; 0x1b1c
   11788:	movtne	r3, #1
   1178c:	ldrhne	r3, [r3]
   11790:	strhne	r3, [r0], #1
   11794:	mov	r1, r7
   11798:	bl	10cc0 <stpcpy@plt>
   1179c:	mov	r1, r5
   117a0:	bl	10d2c <strcpy@plt>
   117a4:	mov	r0, r6
   117a8:	pop	{r4, r5, r6, r7, r8, pc}
   117ac:	movw	r5, #6928	; 0x1b10
   117b0:	mov	r6, #5
   117b4:	movt	r5, #1
   117b8:	b	11720 <__errno_location@plt+0x94c>
   117bc:	mov	r0, r8
   117c0:	add	r6, r6, #3
   117c4:	bl	10cfc <strlen@plt>
   117c8:	add	r0, r6, r0
   117cc:	bl	10d5c <malloc@plt>
   117d0:	subs	r6, r0, #0
   117d4:	beq	11804 <__errno_location@plt+0xa30>
   117d8:	rsb	r4, r8, r7
   117dc:	mov	r1, r8
   117e0:	mov	r2, r4
   117e4:	bl	10c6c <strncpy@plt>
   117e8:	movw	r3, #6936	; 0x1b18
   117ec:	movt	r3, #1
   117f0:	add	r0, r6, r4
   117f4:	add	r0, r0, #1
   117f8:	ldrh	r3, [r3]
   117fc:	strh	r3, [r6, r4]
   11800:	b	11794 <__errno_location@plt+0x9c0>
   11804:	mov	r0, #0
   11808:	pop	{r4, r5, r6, r7, r8, pc}
   1180c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11810:	mov	r7, r0
   11814:	ldr	r6, [pc, #76]	; 11868 <__errno_location@plt+0xa94>
   11818:	mov	r8, r1
   1181c:	ldr	r5, [pc, #72]	; 1186c <__errno_location@plt+0xa98>
   11820:	mov	r9, r2
   11824:	add	r6, pc, r6
   11828:	bl	10c04 <_init@@Base>
   1182c:	add	r5, pc, r5
   11830:	rsb	r6, r5, r6
   11834:	asrs	r6, r6, #2
   11838:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1183c:	sub	r5, r5, #4
   11840:	mov	r4, #0
   11844:	add	r4, r4, #1
   11848:	ldr	r3, [r5, #4]!
   1184c:	mov	r0, r7
   11850:	mov	r1, r8
   11854:	mov	r2, r9
   11858:	blx	r3
   1185c:	cmp	r4, r6
   11860:	bne	11844 <__errno_location@plt+0xa70>
   11864:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11868:			; <UNDEFINED> instruction: 0x000106bc
   1186c:			; <UNDEFINED> instruction: 0x000106b0
   11870:	bx	lr

Disassembly of section .fini:

00011874 <_fini@@Base>:
   11874:	push	{r3, lr}
   11878:	pop	{r3, pc}
