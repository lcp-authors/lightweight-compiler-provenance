
centos-preinstalled/seq:     file format elf32-littlearm


Disassembly of section .init:

0001104c <.init>:
   1104c:	push	{r3, lr}
   11050:	bl	121c0 <strspn@plt+0xe84>
   11054:	pop	{r3, pc}

Disassembly of section .plt:

00011058 <fdopen@plt-0x14>:
   11058:	push	{lr}		; (str lr, [sp, #-4]!)
   1105c:	ldr	lr, [pc, #4]	; 11068 <fdopen@plt-0x4>
   11060:	add	lr, pc, lr
   11064:	ldr	pc, [lr, #8]!
   11068:	muleq	r1, r8, pc	; <UNPREDICTABLE>

0001106c <fdopen@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #94208	; 0x17000
   11074:	ldr	pc, [ip, #3992]!	; 0xf98

00011078 <calloc@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #94208	; 0x17000
   11080:	ldr	pc, [ip, #3984]!	; 0xf90

00011084 <fputs_unlocked@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #94208	; 0x17000
   1108c:	ldr	pc, [ip, #3976]!	; 0xf88

00011090 <raise@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #94208	; 0x17000
   11098:	ldr	pc, [ip, #3968]!	; 0xf80

0001109c <strcmp@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #94208	; 0x17000
   110a4:	ldr	pc, [ip, #3960]!	; 0xf78

000110a8 <strtol@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #94208	; 0x17000
   110b0:	ldr	pc, [ip, #3952]!	; 0xf70

000110b4 <fflush@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #94208	; 0x17000
   110bc:	ldr	pc, [ip, #3944]!	; 0xf68

000110c0 <free@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #94208	; 0x17000
   110c8:	ldr	pc, [ip, #3936]!	; 0xf60

000110cc <_exit@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #94208	; 0x17000
   110d4:	ldr	pc, [ip, #3928]!	; 0xf58

000110d8 <memcpy@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #94208	; 0x17000
   110e0:	ldr	pc, [ip, #3920]!	; 0xf50

000110e4 <mbsinit@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #94208	; 0x17000
   110ec:	ldr	pc, [ip, #3912]!	; 0xf48

000110f0 <fwrite_unlocked@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #94208	; 0x17000
   110f8:	ldr	pc, [ip, #3904]!	; 0xf40

000110fc <memcmp@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #94208	; 0x17000
   11104:	ldr	pc, [ip, #3896]!	; 0xf38

00011108 <fputc_unlocked@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #94208	; 0x17000
   11110:	ldr	pc, [ip, #3888]!	; 0xf30

00011114 <dcgettext@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #94208	; 0x17000
   1111c:	ldr	pc, [ip, #3880]!	; 0xf28

00011120 <__stack_chk_fail@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #94208	; 0x17000
   11128:	ldr	pc, [ip, #3872]!	; 0xf20

0001112c <realloc@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #94208	; 0x17000
   11134:	ldr	pc, [ip, #3864]!	; 0xf18

00011138 <textdomain@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #94208	; 0x17000
   11140:	ldr	pc, [ip, #3856]!	; 0xf10

00011144 <iswprint@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #94208	; 0x17000
   1114c:	ldr	pc, [ip, #3848]!	; 0xf08

00011150 <fwrite@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #94208	; 0x17000
   11158:	ldr	pc, [ip, #3840]!	; 0xf00

0001115c <lseek64@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #94208	; 0x17000
   11164:	ldr	pc, [ip, #3832]!	; 0xef8

00011168 <__ctype_get_mb_cur_max@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #94208	; 0x17000
   11170:	ldr	pc, [ip, #3824]!	; 0xef0

00011174 <strcpy@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #94208	; 0x17000
   1117c:	ldr	pc, [ip, #3816]!	; 0xee8

00011180 <__fpending@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #94208	; 0x17000
   11188:	ldr	pc, [ip, #3808]!	; 0xee0

0001118c <mbrtowc@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #94208	; 0x17000
   11194:	ldr	pc, [ip, #3800]!	; 0xed8

00011198 <error@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #94208	; 0x17000
   111a0:	ldr	pc, [ip, #3792]!	; 0xed0

000111a4 <open64@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #94208	; 0x17000
   111ac:	ldr	pc, [ip, #3784]!	; 0xec8

000111b0 <getenv@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #94208	; 0x17000
   111b8:	ldr	pc, [ip, #3776]!	; 0xec0

000111bc <strtold_l@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #94208	; 0x17000
   111c4:	ldr	pc, [ip, #3768]!	; 0xeb8

000111c8 <malloc@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #94208	; 0x17000
   111d0:	ldr	pc, [ip, #3760]!	; 0xeb0

000111d4 <__libc_start_main@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #94208	; 0x17000
   111dc:	ldr	pc, [ip, #3752]!	; 0xea8

000111e0 <__freading@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #94208	; 0x17000
   111e8:	ldr	pc, [ip, #3744]!	; 0xea0

000111ec <__gmon_start__@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #94208	; 0x17000
   111f4:	ldr	pc, [ip, #3736]!	; 0xe98

000111f8 <mempcpy@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #94208	; 0x17000
   11200:	ldr	pc, [ip, #3728]!	; 0xe90

00011204 <getopt_long@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #94208	; 0x17000
   1120c:	ldr	pc, [ip, #3720]!	; 0xe88

00011210 <__ctype_b_loc@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #94208	; 0x17000
   11218:	ldr	pc, [ip, #3712]!	; 0xe80

0001121c <exit@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #94208	; 0x17000
   11224:	ldr	pc, [ip, #3704]!	; 0xe78

00011228 <strlen@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #94208	; 0x17000
   11230:	ldr	pc, [ip, #3696]!	; 0xe70

00011234 <strchr@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #94208	; 0x17000
   1123c:	ldr	pc, [ip, #3688]!	; 0xe68

00011240 <ungetc@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #94208	; 0x17000
   11248:	ldr	pc, [ip, #3680]!	; 0xe60

0001124c <__errno_location@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #94208	; 0x17000
   11254:	ldr	pc, [ip, #3672]!	; 0xe58

00011258 <__sprintf_chk@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #94208	; 0x17000
   11260:	ldr	pc, [ip, #3664]!	; 0xe50

00011264 <__cxa_atexit@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #94208	; 0x17000
   1126c:	ldr	pc, [ip, #3656]!	; 0xe48

00011270 <memset@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #94208	; 0x17000
   11278:	ldr	pc, [ip, #3648]!	; 0xe40

0001127c <fscanf@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #94208	; 0x17000
   11284:	ldr	pc, [ip, #3640]!	; 0xe38

00011288 <__printf_chk@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #94208	; 0x17000
   11290:	ldr	pc, [ip, #3632]!	; 0xe30

00011294 <fileno@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #94208	; 0x17000
   1129c:	ldr	pc, [ip, #3624]!	; 0xe28

000112a0 <__fprintf_chk@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #94208	; 0x17000
   112a8:	ldr	pc, [ip, #3616]!	; 0xe20

000112ac <fclose@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #94208	; 0x17000
   112b4:	ldr	pc, [ip, #3608]!	; 0xe18

000112b8 <fseeko64@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #94208	; 0x17000
   112c0:	ldr	pc, [ip, #3600]!	; 0xe10

000112c4 <__uflow@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #94208	; 0x17000
   112cc:	ldr	pc, [ip, #3592]!	; 0xe08

000112d0 <setlocale@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #94208	; 0x17000
   112d8:	ldr	pc, [ip, #3584]!	; 0xe00

000112dc <strrchr@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #94208	; 0x17000
   112e4:	ldr	pc, [ip, #3576]!	; 0xdf8

000112e8 <nl_langinfo@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #94208	; 0x17000
   112f0:	ldr	pc, [ip, #3568]!	; 0xdf0

000112f4 <newlocale@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #94208	; 0x17000
   112fc:	ldr	pc, [ip, #3560]!	; 0xde8

00011300 <bindtextdomain@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #94208	; 0x17000
   11308:	ldr	pc, [ip, #3552]!	; 0xde0

0001130c <strncmp@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #94208	; 0x17000
   11314:	ldr	pc, [ip, #3544]!	; 0xdd8

00011318 <abort@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #94208	; 0x17000
   11320:	ldr	pc, [ip, #3536]!	; 0xdd0

00011324 <close@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #94208	; 0x17000
   1132c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011330 <__snprintf_chk@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #94208	; 0x17000
   11338:	ldr	pc, [ip, #3520]!	; 0xdc0

0001133c <strspn@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #94208	; 0x17000
   11344:	ldr	pc, [ip, #3512]!	; 0xdb8

Disassembly of section .text:

00011348 <c_strtold@@Base-0x14b8>:
   11348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1134c:	mov	r2, r0
   11350:	ldr	fp, [pc, #572]	; 11594 <strspn@plt+0x258>
   11354:	sub	sp, sp, #28
   11358:	add	fp, pc, fp
   1135c:	mov	r4, r2
   11360:	add	r2, r2, #1
   11364:	ldrb	r3, [r4]
   11368:	cmp	r3, #48	; 0x30
   1136c:	beq	1135c <strspn@plt+0x20>
   11370:	cmp	r3, #0
   11374:	bne	11380 <strspn@plt+0x44>
   11378:	cmp	r0, r4
   1137c:	subne	r4, r4, #1
   11380:	mov	r2, r1
   11384:	mov	r7, r2
   11388:	add	r2, r2, #1
   1138c:	ldrb	r3, [r7]
   11390:	cmp	r3, #48	; 0x30
   11394:	beq	11384 <strspn@plt+0x48>
   11398:	cmp	r3, #0
   1139c:	bne	113a8 <strspn@plt+0x6c>
   113a0:	cmp	r1, r7
   113a4:	subne	r7, r7, #1
   113a8:	mov	r0, r4
   113ac:	bl	11228 <strlen@plt>
   113b0:	mov	r6, r0
   113b4:	mov	r0, r7
   113b8:	bl	11228 <strlen@plt>
   113bc:	cmp	r0, r6
   113c0:	movcs	r9, r0
   113c4:	movcc	r9, r6
   113c8:	mov	r8, r0
   113cc:	add	r5, r9, #1
   113d0:	mov	r0, r5
   113d4:	bl	1485c <close_stdout@@Base+0x1fb8>
   113d8:	mov	r1, r4
   113dc:	str	r0, [sp, #12]
   113e0:	rsb	r0, r6, r9
   113e4:	ldr	r2, [sp, #12]
   113e8:	add	r0, r2, r0
   113ec:	add	r2, r6, #1
   113f0:	bl	110d8 <memcpy@plt>
   113f4:	mov	r4, r0
   113f8:	mov	r0, r5
   113fc:	bl	1485c <close_stdout@@Base+0x1fb8>
   11400:	mov	r1, r7
   11404:	add	r2, r8, #1
   11408:	str	r0, [sp, #16]
   1140c:	rsb	r0, r8, r9
   11410:	ldr	r3, [sp, #16]
   11414:	add	r0, r3, r0
   11418:	bl	110d8 <memcpy@plt>
   1141c:	cmp	r8, r6
   11420:	str	r0, [sp, #8]
   11424:	mvnhi	r0, #0
   11428:	bhi	11440 <strspn@plt+0x104>
   1142c:	movcc	r0, #1
   11430:	bcc	11440 <strspn@plt+0x104>
   11434:	mov	r0, r4
   11438:	ldr	r1, [sp, #8]
   1143c:	bl	1109c <strcmp@plt>
   11440:	cmp	r0, #0
   11444:	movgt	r0, #0
   11448:	movle	r0, #1
   1144c:	cmp	r0, #0
   11450:	str	r0, [sp, #20]
   11454:	beq	11578 <strspn@plt+0x23c>
   11458:	mov	r7, #40	; 0x28
   1145c:	ldr	sl, [pc, #308]	; 11598 <strspn@plt+0x25c>
   11460:	mul	r7, r7, r5
   11464:	mvn	r9, r9
   11468:	add	sl, pc, sl
   1146c:	mov	r5, #48	; 0x30
   11470:	mov	r0, r7
   11474:	bl	1485c <close_stdout@@Base+0x1fb8>
   11478:	mov	r1, r4
   1147c:	mov	r2, r6
   11480:	add	r3, r0, r7
   11484:	str	r0, [sp, #4]
   11488:	str	r3, [sp]
   1148c:	bl	111f8 <mempcpy@plt>
   11490:	ldr	r3, [sp]
   11494:	add	r9, r3, r9
   11498:	mov	r7, r0
   1149c:	cmp	r8, r6
   114a0:	bls	11530 <strspn@plt+0x1f4>
   114a4:	ldr	r2, [sl]
   114a8:	sub	r3, r6, #1
   114ac:	add	r3, r4, r3
   114b0:	add	r0, r7, #1
   114b4:	ldrb	r2, [r2]
   114b8:	strb	r2, [r7]
   114bc:	mov	r2, r3
   114c0:	ldrb	ip, [r3], #-1
   114c4:	cmp	ip, #56	; 0x38
   114c8:	addls	ip, ip, #1
   114cc:	strbls	ip, [r2]
   114d0:	bls	114f0 <strspn@plt+0x1b4>
   114d4:	cmp	r3, r4
   114d8:	strb	r5, [r3, #1]
   114dc:	bcs	114bc <strspn@plt+0x180>
   114e0:	mov	r2, #49	; 0x31
   114e4:	add	r6, r6, #1
   114e8:	strb	r2, [r4, #-1]
   114ec:	sub	r4, r4, #1
   114f0:	mov	r1, r4
   114f4:	mov	r2, r6
   114f8:	bl	111f8 <mempcpy@plt>
   114fc:	cmp	r0, r9
   11500:	mov	r7, r0
   11504:	bls	1149c <strspn@plt+0x160>
   11508:	ldr	r3, [pc, #140]	; 1159c <strspn@plt+0x260>
   1150c:	ldr	r2, [sp, #4]
   11510:	ldr	r3, [fp, r3]
   11514:	rsb	r1, r2, r0
   11518:	mov	r0, r2
   1151c:	mov	r2, #1
   11520:	mov	r7, r0
   11524:	ldr	r3, [r3]
   11528:	bl	110f0 <fwrite_unlocked@plt>
   1152c:	b	1149c <strspn@plt+0x160>
   11530:	bcs	11560 <strspn@plt+0x224>
   11534:	ldr	r3, [pc, #96]	; 1159c <strspn@plt+0x260>
   11538:	mov	r1, r7
   1153c:	mov	r2, #10
   11540:	strb	r2, [r1], #1
   11544:	ldr	r0, [sp, #4]
   11548:	mov	r2, #1
   1154c:	ldr	r3, [fp, r3]
   11550:	rsb	r1, r0, r1
   11554:	ldr	r3, [r3]
   11558:	bl	110f0 <fwrite_unlocked@plt>
   1155c:	b	11578 <strspn@plt+0x23c>
   11560:	mov	r0, r4
   11564:	ldr	r1, [sp, #8]
   11568:	bl	1109c <strcmp@plt>
   1156c:	cmp	r0, #0
   11570:	blt	114a4 <strspn@plt+0x168>
   11574:	b	11534 <strspn@plt+0x1f8>
   11578:	ldr	r0, [sp, #12]
   1157c:	bl	110c0 <free@plt>
   11580:	ldr	r0, [sp, #16]
   11584:	bl	110c0 <free@plt>
   11588:	ldr	r0, [sp, #20]
   1158c:	add	sp, sp, #28
   11590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11594:	andeq	r7, r1, r0, lsr #25
   11598:	andeq	r7, r1, r0, lsr #26
   1159c:	andeq	r0, r0, r4, lsr #2
   115a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115a4:	vpush	{d8-d13}
   115a8:	sub	sp, sp, #92	; 0x5c
   115ac:	ldr	r4, [pc, #2840]	; 120cc <strspn@plt+0xd90>
   115b0:	mov	r8, r0
   115b4:	ldr	r3, [pc, #2836]	; 120d0 <strspn@plt+0xd94>
   115b8:	mov	fp, r1
   115bc:	add	r4, pc, r4
   115c0:	ldr	ip, [pc, #2828]	; 120d4 <strspn@plt+0xd98>
   115c4:	ldr	r0, [r1]
   115c8:	ldr	r3, [r4, r3]
   115cc:	add	ip, pc, ip
   115d0:	str	ip, [sp, #20]
   115d4:	ldr	ip, [pc, #2812]	; 120d8 <strspn@plt+0xd9c>
   115d8:	ldr	r3, [r3]
   115dc:	add	ip, pc, ip
   115e0:	str	ip, [sp, #24]
   115e4:	ldr	r5, [pc, #2800]	; 120dc <strspn@plt+0xda0>
   115e8:	str	r3, [sp, #84]	; 0x54
   115ec:	bl	12a60 <close_stdout@@Base+0x1bc>
   115f0:	ldr	r1, [pc, #2792]	; 120e0 <strspn@plt+0xda4>
   115f4:	mov	r0, #6
   115f8:	add	r5, pc, r5
   115fc:	ldr	r7, [pc, #2784]	; 120e4 <strspn@plt+0xda8>
   11600:	add	r1, pc, r1
   11604:	ldr	r6, [pc, #2780]	; 120e8 <strspn@plt+0xdac>
   11608:	bl	112d0 <setlocale@plt>
   1160c:	ldr	r1, [pc, #2776]	; 120ec <strspn@plt+0xdb0>
   11610:	mov	r0, r5
   11614:	add	r7, pc, r7
   11618:	add	r1, pc, r1
   1161c:	add	r6, pc, r6
   11620:	bl	11300 <bindtextdomain@plt>
   11624:	mov	r0, r5
   11628:	bl	11138 <textdomain@plt>
   1162c:	ldr	r3, [pc, #2748]	; 120f0 <strspn@plt+0xdb4>
   11630:	ldr	r0, [r4, r3]
   11634:	bl	17148 <close_stdout@@Base+0x48a4>
   11638:	ldr	r3, [pc, #2740]	; 120f4 <strspn@plt+0xdb8>
   1163c:	ldr	r1, [pc, #2740]	; 120f8 <strspn@plt+0xdbc>
   11640:	mov	r2, #0
   11644:	add	r3, pc, r3
   11648:	ldr	r0, [pc, #2732]	; 120fc <strspn@plt+0xdc0>
   1164c:	mov	sl, r2
   11650:	mov	r5, r2
   11654:	add	r0, pc, r0
   11658:	strb	r2, [r3, #32]
   1165c:	str	r0, [r3]
   11660:	ldr	r3, [r4, r1]
   11664:	str	r3, [sp, #16]
   11668:	ldr	ip, [sp, #16]
   1166c:	ldr	r3, [ip]
   11670:	cmp	r3, r8
   11674:	bge	1179c <strspn@plt+0x460>
   11678:	ldr	r3, [fp, r3, lsl #2]
   1167c:	ldrb	r2, [r3]
   11680:	cmp	r2, #45	; 0x2d
   11684:	bne	116a0 <strspn@plt+0x364>
   11688:	ldrb	r3, [r3, #1]
   1168c:	cmp	r3, #46	; 0x2e
   11690:	beq	1179c <strspn@plt+0x460>
   11694:	sub	r3, r3, #48	; 0x30
   11698:	cmp	r3, #9
   1169c:	bls	1179c <strspn@plt+0x460>
   116a0:	str	r5, [sp]
   116a4:	mov	r0, r8
   116a8:	mov	r1, fp
   116ac:	mov	r2, r7
   116b0:	mov	r3, r6
   116b4:	mov	r9, #0
   116b8:	bl	11204 <getopt_long@plt>
   116bc:	cmn	r0, #1
   116c0:	beq	1179c <strspn@plt+0x460>
   116c4:	cmp	r0, #102	; 0x66
   116c8:	beq	1178c <strspn@plt+0x450>
   116cc:	bgt	116e8 <strspn@plt+0x3ac>
   116d0:	cmn	r0, #3
   116d4:	beq	11708 <strspn@plt+0x3cc>
   116d8:	cmn	r0, #2
   116dc:	bne	11784 <strspn@plt+0x448>
   116e0:	mov	r0, r9
   116e4:	bl	12304 <strspn@plt+0xfc8>
   116e8:	cmp	r0, #115	; 0x73
   116ec:	beq	11748 <strspn@plt+0x40c>
   116f0:	cmp	r0, #119	; 0x77
   116f4:	bne	11784 <strspn@plt+0x448>
   116f8:	ldr	ip, [sp, #24]
   116fc:	mov	r1, #1
   11700:	strb	r1, [ip, #32]
   11704:	b	11668 <strspn@plt+0x32c>
   11708:	ldr	r1, [pc, #2544]	; 12100 <strspn@plt+0xdc4>
   1170c:	ldr	r3, [pc, #2544]	; 12104 <strspn@plt+0xdc8>
   11710:	ldr	r2, [pc, #2544]	; 12108 <strspn@plt+0xdcc>
   11714:	ldr	r0, [r4, r1]
   11718:	ldr	r3, [r4, r3]
   1171c:	add	r2, pc, r2
   11720:	ldr	r1, [pc, #2532]	; 1210c <strspn@plt+0xdd0>
   11724:	ldr	r0, [r0]
   11728:	ldr	r3, [r3]
   1172c:	add	r1, pc, r1
   11730:	stm	sp, {r2, r9}
   11734:	ldr	r2, [pc, #2516]	; 12110 <strspn@plt+0xdd4>
   11738:	add	r2, pc, r2
   1173c:	bl	1474c <close_stdout@@Base+0x1ea8>
   11740:	mov	r0, r9
   11744:	bl	1121c <exit@plt>
   11748:	ldr	r3, [pc, #2500]	; 12114 <strspn@plt+0xdd8>
   1174c:	ldr	ip, [sp, #20]
   11750:	ldr	r3, [r4, r3]
   11754:	ldr	r3, [r3]
   11758:	str	r3, [ip]
   1175c:	b	11668 <strspn@plt+0x32c>
   11760:	ldr	r1, [pc, #2480]	; 12118 <strspn@plt+0xddc>
   11764:	mov	r2, #5
   11768:	ldr	r0, [sp, #24]
   1176c:	add	r1, pc, r1
   11770:	bl	11114 <dcgettext@plt>
   11774:	mov	r2, r0
   11778:	ldr	r0, [sp, #24]
   1177c:	mov	r1, r0
   11780:	bl	11198 <error@plt>
   11784:	mov	r0, #1
   11788:	bl	12304 <strspn@plt+0xfc8>
   1178c:	ldr	r3, [pc, #2432]	; 12114 <strspn@plt+0xdd8>
   11790:	ldr	r3, [r4, r3]
   11794:	ldr	sl, [r3]
   11798:	b	11668 <strspn@plt+0x32c>
   1179c:	ldr	ip, [sp, #16]
   117a0:	ldr	r3, [ip]
   117a4:	subs	r3, r8, r3
   117a8:	str	r3, [sp, #24]
   117ac:	beq	11760 <strspn@plt+0x424>
   117b0:	ldr	ip, [sp, #24]
   117b4:	cmp	ip, #3
   117b8:	bhi	11ce4 <strspn@plt+0x9a8>
   117bc:	cmp	sl, #0
   117c0:	beq	1184c <strspn@plt+0x510>
   117c4:	ldr	r9, [pc, #2384]	; 1211c <strspn@plt+0xde0>
   117c8:	mov	r7, #1
   117cc:	mov	r5, #0
   117d0:	str	r8, [sp, #28]
   117d4:	add	r9, pc, r9
   117d8:	str	r4, [sp, #32]
   117dc:	b	117ec <strspn@plt+0x4b0>
   117e0:	mov	r3, #1
   117e4:	add	r5, r5, r3
   117e8:	add	r7, r7, #1
   117ec:	ldrb	r6, [sl, r5]
   117f0:	sub	r3, r7, #1
   117f4:	add	r4, sl, r5
   117f8:	cmp	r6, #37	; 0x25
   117fc:	beq	11ae4 <strspn@plt+0x7a8>
   11800:	cmp	r6, #0
   11804:	bne	117e0 <strspn@plt+0x4a4>
   11808:	mov	r1, r9
   1180c:	mov	r2, #5
   11810:	mov	r0, r6
   11814:	bl	11114 <dcgettext@plt>
   11818:	mov	r8, r0
   1181c:	mov	r0, sl
   11820:	bl	142b0 <close_stdout@@Base+0x1a0c>
   11824:	mov	r2, r8
   11828:	mov	r1, r6
   1182c:	mov	r3, r0
   11830:	mov	r0, #1
   11834:	bl	11198 <error@plt>
   11838:	ldrb	r3, [r4]
   1183c:	cmp	r3, #37	; 0x25
   11840:	bne	117e0 <strspn@plt+0x4a4>
   11844:	mov	r3, #2
   11848:	b	117e4 <strspn@plt+0x4a8>
   1184c:	mov	r5, sl
   11850:	mov	r9, sl
   11854:	str	sl, [sp, #20]
   11858:	ldr	ip, [sp, #16]
   1185c:	ldr	r6, [ip]
   11860:	ldr	r7, [fp, r6, lsl #2]
   11864:	lsl	sl, r6, #2
   11868:	mov	r0, r7
   1186c:	bl	122b8 <strspn@plt+0xf7c>
   11870:	cmp	r0, #0
   11874:	beq	118f4 <strspn@plt+0x5b8>
   11878:	ldr	ip, [sp, #24]
   1187c:	cmp	ip, #1
   11880:	beq	118d8 <strspn@plt+0x59c>
   11884:	add	r3, fp, sl
   11888:	ldr	sl, [r3, #4]
   1188c:	str	r3, [sp, #12]
   11890:	mov	r0, sl
   11894:	bl	122b8 <strspn@plt+0xf7c>
   11898:	ldr	r3, [sp, #12]
   1189c:	cmp	r0, #0
   118a0:	beq	118f4 <strspn@plt+0x5b8>
   118a4:	ldr	ip, [sp, #24]
   118a8:	cmp	ip, #3
   118ac:	bne	118d8 <strspn@plt+0x59c>
   118b0:	ldrb	r2, [sl]
   118b4:	cmp	r2, #49	; 0x31
   118b8:	bne	118f4 <strspn@plt+0x5b8>
   118bc:	ldrb	r2, [sl, #1]
   118c0:	cmp	r2, #0
   118c4:	bne	118f4 <strspn@plt+0x5b8>
   118c8:	ldr	r0, [r3, #8]
   118cc:	bl	122b8 <strspn@plt+0xf7c>
   118d0:	cmp	r0, #0
   118d4:	beq	118f4 <strspn@plt+0x5b8>
   118d8:	ldr	r3, [pc, #2112]	; 12120 <strspn@plt+0xde4>
   118dc:	add	r3, pc, r3
   118e0:	ldrb	r2, [r3, #32]
   118e4:	cmp	r2, #0
   118e8:	bne	118f4 <strspn@plt+0x5b8>
   118ec:	cmp	r5, #0
   118f0:	beq	11f40 <strspn@plt+0xc04>
   118f4:	ldr	ip, [sp, #16]
   118f8:	add	r6, sp, #64	; 0x40
   118fc:	mov	r0, r6
   11900:	ldr	r3, [ip]
   11904:	add	r2, r3, #1
   11908:	str	r2, [ip]
   1190c:	ldr	r1, [fp, r3, lsl #2]
   11910:	bl	1256c <strspn@plt+0x1230>
   11914:	ldr	ip, [sp, #16]
   11918:	vldr	d12, [sp, #64]	; 0x40
   1191c:	ldr	r7, [sp, #72]	; 0x48
   11920:	ldr	sl, [sp, #76]	; 0x4c
   11924:	ldr	r3, [ip]
   11928:	cmp	r8, r3
   1192c:	bgt	11d2c <strspn@plt+0x9f0>
   11930:	cmp	sl, #0
   11934:	vmov.f64	d11, d12
   11938:	beq	120bc <strspn@plt+0xd80>
   1193c:	mov	r2, sl
   11940:	mov	sl, #0
   11944:	vmov.f64	d12, #112	; 0x3f800000  1.0
   11948:	mov	r8, r7
   1194c:	mov	r3, sl
   11950:	mov	r7, #1
   11954:	vmov.f64	d9, d12
   11958:	cmp	r5, #0
   1195c:	beq	11e88 <strspn@plt+0xb4c>
   11960:	vcmpe.f64	d9, #0.0
   11964:	vmrs	APSR_nzcv, fpscr
   11968:	bmi	11d78 <strspn@plt+0xa3c>
   1196c:	vcmpe.f64	d11, d12
   11970:	vmrs	APSR_nzcv, fpscr
   11974:	movpl	r3, #0
   11978:	movmi	r3, #1
   1197c:	cmp	r3, #0
   11980:	bne	11adc <strspn@plt+0x7a0>
   11984:	mov	r0, #1
   11988:	mov	r1, r5
   1198c:	vmov	r2, r3, d12
   11990:	bl	11288 <__printf_chk@plt>
   11994:	ldr	r8, [pc, #1928]	; 12124 <strspn@plt+0xde8>
   11998:	vmov	r6, r7, d12
   1199c:	add	r8, pc, r8
   119a0:	vmov.f64	d10, #112	; 0x3f800000  1.0
   119a4:	vmov.f64	d13, d10
   119a8:	vmov.f64	d8, d12
   119ac:	vmla.f64	d8, d9, d10
   119b0:	vcmpe.f64	d9, #0.0
   119b4:	vmrs	APSR_nzcv, fpscr
   119b8:	vcmpe.f64	d11, d8
   119bc:	bmi	11c34 <strspn@plt+0x8f8>
   119c0:	vmrs	APSR_nzcv, fpscr
   119c4:	movpl	r3, #0
   119c8:	movmi	r3, #1
   119cc:	cmp	r3, #0
   119d0:	beq	11c04 <strspn@plt+0x8c8>
   119d4:	ldr	r1, [pc, #1868]	; 12128 <strspn@plt+0xdec>
   119d8:	mov	r0, #1
   119dc:	add	r1, pc, r1
   119e0:	bl	112d0 <setlocale@plt>
   119e4:	mov	r1, r5
   119e8:	vmov	r2, r3, d8
   119ec:	add	r0, sp, #48	; 0x30
   119f0:	bl	14b98 <close_stdout@@Base+0x22f4>
   119f4:	ldr	r1, [pc, #1840]	; 1212c <strspn@plt+0xdf0>
   119f8:	add	r1, pc, r1
   119fc:	mov	r8, r0
   11a00:	mov	r0, #1
   11a04:	bl	112d0 <setlocale@plt>
   11a08:	cmp	r8, #0
   11a0c:	blt	12018 <strspn@plt+0xcdc>
   11a10:	ldr	r0, [sp, #48]	; 0x30
   11a14:	rsb	r9, r9, r8
   11a18:	ldr	r3, [pc, #1808]	; 12130 <strspn@plt+0xdf4>
   11a1c:	mov	r8, #0
   11a20:	ldr	ip, [sp, #20]
   11a24:	mov	r1, r8
   11a28:	strb	r8, [r0, r9]
   11a2c:	add	r2, sp, #56	; 0x38
   11a30:	ldr	r0, [sp, #48]	; 0x30
   11a34:	ldr	r3, [r4, r3]
   11a38:	add	r0, r0, ip
   11a3c:	bl	14ac8 <close_stdout@@Base+0x2224>
   11a40:	cmp	r0, r8
   11a44:	beq	11c44 <strspn@plt+0x908>
   11a48:	vldr	d7, [sp, #56]	; 0x38
   11a4c:	vcmp.f64	d11, d7
   11a50:	vmrs	APSR_nzcv, fpscr
   11a54:	bne	11c44 <strspn@plt+0x908>
   11a58:	add	r0, sp, #88	; 0x58
   11a5c:	mov	r2, r6
   11a60:	mov	r3, r7
   11a64:	mov	r1, r5
   11a68:	str	r8, [r0, #-36]!	; 0xffffffdc
   11a6c:	bl	14b98 <close_stdout@@Base+0x22f4>
   11a70:	cmp	r0, r8
   11a74:	blt	12018 <strspn@plt+0xcdc>
   11a78:	ldr	r6, [sp, #52]	; 0x34
   11a7c:	ldr	r1, [sp, #48]	; 0x30
   11a80:	mov	r0, r6
   11a84:	bl	1109c <strcmp@plt>
   11a88:	mov	r7, r0
   11a8c:	mov	r0, r6
   11a90:	bl	110c0 <free@plt>
   11a94:	ldr	r0, [sp, #48]	; 0x30
   11a98:	bl	110c0 <free@plt>
   11a9c:	cmp	r7, r8
   11aa0:	beq	11c4c <strspn@plt+0x910>
   11aa4:	ldr	r2, [pc, #1620]	; 12100 <strspn@plt+0xdc4>
   11aa8:	ldr	r3, [pc, #1668]	; 12134 <strspn@plt+0xdf8>
   11aac:	ldr	r4, [r4, r2]
   11ab0:	add	r3, pc, r3
   11ab4:	ldr	r0, [r3]
   11ab8:	ldr	r1, [r4]
   11abc:	bl	11084 <fputs_unlocked@plt>
   11ac0:	mov	r1, r5
   11ac4:	mov	r0, #1
   11ac8:	vmov	r2, r3, d8
   11acc:	bl	11288 <__printf_chk@plt>
   11ad0:	ldr	r1, [r4]
   11ad4:	mov	r0, #10
   11ad8:	bl	11108 <fputc_unlocked@plt>
   11adc:	mov	r0, #0
   11ae0:	bl	1121c <exit@plt>
   11ae4:	add	r6, r5, #1
   11ae8:	add	r0, sl, r6
   11aec:	ldrb	r2, [sl, r6]
   11af0:	cmp	r2, #37	; 0x25
   11af4:	beq	11844 <strspn@plt+0x508>
   11af8:	ldr	r1, [pc, #1592]	; 12138 <strspn@plt+0xdfc>
   11afc:	str	r3, [sp, #20]
   11b00:	add	r1, pc, r1
   11b04:	ldr	r5, [pc, #1584]	; 1213c <strspn@plt+0xe00>
   11b08:	bl	1133c <strspn@plt>
   11b0c:	ldr	r8, [sp, #28]
   11b10:	add	r5, pc, r5
   11b14:	ldr	r4, [sp, #32]
   11b18:	mov	r1, r5
   11b1c:	add	r6, r6, r0
   11b20:	add	r0, sl, r6
   11b24:	bl	1133c <strspn@plt>
   11b28:	add	r7, r6, r0
   11b2c:	ldrb	r3, [sl, r7]
   11b30:	cmp	r3, #46	; 0x2e
   11b34:	beq	11dc4 <strspn@plt+0xa88>
   11b38:	ldrb	r5, [sl, r7]
   11b3c:	cmp	r5, #76	; 0x4c
   11b40:	movne	r5, r7
   11b44:	addeq	r5, r7, #1
   11b48:	add	ip, sl, r5
   11b4c:	str	ip, [sp, #28]
   11b50:	ldrb	r6, [sl, r5]
   11b54:	cmp	r6, #0
   11b58:	beq	11d8c <strspn@plt+0xa50>
   11b5c:	ldr	ip, [sp, #28]
   11b60:	ldr	r0, [pc, #1496]	; 12140 <strspn@plt+0xe04>
   11b64:	ldrb	r1, [ip]
   11b68:	add	r0, pc, r0
   11b6c:	bl	11234 <strchr@plt>
   11b70:	subs	r6, r0, #0
   11b74:	beq	11f00 <strspn@plt+0xbc4>
   11b78:	ldr	ip, [pc, #1476]	; 12144 <strspn@plt+0xe08>
   11b7c:	add	r5, r5, #1
   11b80:	mov	r9, #0
   11b84:	str	r4, [sp, #36]	; 0x24
   11b88:	add	ip, pc, ip
   11b8c:	str	ip, [sp, #32]
   11b90:	b	11bb0 <strspn@plt+0x874>
   11b94:	cmp	r3, #0
   11b98:	beq	11c58 <strspn@plt+0x91c>
   11b9c:	add	r9, r9, #1
   11ba0:	cmp	r3, #37	; 0x25
   11ba4:	movne	r3, #1
   11ba8:	moveq	r3, #2
   11bac:	add	r5, r5, r3
   11bb0:	ldrb	r3, [sl, r5]
   11bb4:	add	r6, sl, r5
   11bb8:	cmp	r3, #37	; 0x25
   11bbc:	bne	11b94 <strspn@plt+0x858>
   11bc0:	ldrb	r2, [r6, #1]
   11bc4:	cmp	r2, #37	; 0x25
   11bc8:	beq	11b9c <strspn@plt+0x860>
   11bcc:	ldr	r1, [sp, #32]
   11bd0:	mov	r2, #5
   11bd4:	mov	r0, #0
   11bd8:	bl	11114 <dcgettext@plt>
   11bdc:	mov	r4, r0
   11be0:	mov	r0, sl
   11be4:	bl	142b0 <close_stdout@@Base+0x1a0c>
   11be8:	mov	r2, r4
   11bec:	mov	r1, #0
   11bf0:	mov	r3, r0
   11bf4:	mov	r0, #1
   11bf8:	bl	11198 <error@plt>
   11bfc:	ldrb	r3, [r6]
   11c00:	b	11ba0 <strspn@plt+0x864>
   11c04:	ldr	r3, [pc, #1268]	; 12100 <strspn@plt+0xdc4>
   11c08:	ldr	r0, [r8]
   11c0c:	vmov	r6, r7, d8
   11c10:	ldr	r3, [r4, r3]
   11c14:	ldr	r1, [r3]
   11c18:	bl	11084 <fputs_unlocked@plt>
   11c1c:	mov	r0, #1
   11c20:	mov	r1, r5
   11c24:	vmov	r2, r3, d8
   11c28:	bl	11288 <__printf_chk@plt>
   11c2c:	vadd.f64	d10, d10, d13
   11c30:	b	119a8 <strspn@plt+0x66c>
   11c34:	vmrs	APSR_nzcv, fpscr
   11c38:	movle	r3, #0
   11c3c:	movgt	r3, #1
   11c40:	b	119cc <strspn@plt+0x690>
   11c44:	ldr	r0, [sp, #48]	; 0x30
   11c48:	bl	110c0 <free@plt>
   11c4c:	ldr	r3, [pc, #1196]	; 12100 <strspn@plt+0xdc4>
   11c50:	ldr	r4, [r4, r3]
   11c54:	b	11ad0 <strspn@plt+0x794>
   11c58:	add	r0, r5, #2
   11c5c:	str	r3, [sp, #12]
   11c60:	ldr	r4, [sp, #36]	; 0x24
   11c64:	bl	1485c <close_stdout@@Base+0x1fb8>
   11c68:	mov	r1, sl
   11c6c:	mov	r2, r7
   11c70:	mov	r5, r0
   11c74:	bl	110d8 <memcpy@plt>
   11c78:	add	r0, r7, #1
   11c7c:	mov	r2, #76	; 0x4c
   11c80:	ldr	r1, [sp, #28]
   11c84:	add	r0, r5, r0
   11c88:	strb	r2, [r5, r7]
   11c8c:	bl	11174 <strcpy@plt>
   11c90:	cmp	r5, #0
   11c94:	ldr	r3, [sp, #12]
   11c98:	beq	11858 <strspn@plt+0x51c>
   11c9c:	ldr	r2, [pc, #1188]	; 12148 <strspn@plt+0xe0c>
   11ca0:	add	r2, pc, r2
   11ca4:	ldrb	r2, [r2, #32]
   11ca8:	cmp	r2, #0
   11cac:	beq	11858 <strspn@plt+0x51c>
   11cb0:	ldr	r1, [pc, #1172]	; 1214c <strspn@plt+0xe10>
   11cb4:	mov	r0, r3
   11cb8:	mov	r2, #5
   11cbc:	str	r3, [sp, #12]
   11cc0:	add	r1, pc, r1
   11cc4:	bl	11114 <dcgettext@plt>
   11cc8:	ldr	r3, [sp, #12]
   11ccc:	mov	r1, r3
   11cd0:	mov	r2, r0
   11cd4:	mov	r0, r3
   11cd8:	bl	11198 <error@plt>
   11cdc:	mov	r0, #1
   11ce0:	bl	12304 <strspn@plt+0xfc8>
   11ce4:	ldr	r1, [pc, #1124]	; 12150 <strspn@plt+0xe14>
   11ce8:	mov	r2, #5
   11cec:	mov	r0, #0
   11cf0:	add	r1, pc, r1
   11cf4:	bl	11114 <dcgettext@plt>
   11cf8:	ldr	ip, [sp, #16]
   11cfc:	ldr	r3, [ip]
   11d00:	add	r3, r3, #3
   11d04:	mov	r4, r0
   11d08:	ldr	r0, [fp, r3, lsl #2]
   11d0c:	bl	142b0 <close_stdout@@Base+0x1a0c>
   11d10:	mov	r2, r4
   11d14:	mov	r3, r0
   11d18:	mov	r0, #0
   11d1c:	mov	r1, r0
   11d20:	bl	11198 <error@plt>
   11d24:	mov	r0, #1
   11d28:	bl	12304 <strspn@plt+0xfc8>
   11d2c:	add	r2, r3, #1
   11d30:	str	r2, [ip]
   11d34:	ldr	r1, [fp, r3, lsl #2]
   11d38:	mov	r0, r6
   11d3c:	bl	1256c <strspn@plt+0x1230>
   11d40:	ldr	ip, [sp, #16]
   11d44:	vldr	d9, [sp, #64]	; 0x40
   11d48:	ldr	r3, [sp, #76]	; 0x4c
   11d4c:	ldr	r2, [ip]
   11d50:	cmp	r8, r2
   11d54:	ldr	r8, [sp, #72]	; 0x48
   11d58:	bgt	11ddc <strspn@plt+0xaa0>
   11d5c:	cmp	sl, #0
   11d60:	beq	12040 <strspn@plt+0xd04>
   11d64:	mov	r2, r3
   11d68:	vmov.f64	d11, d9
   11d6c:	mov	r3, #0
   11d70:	vmov.f64	d9, #112	; 0x3f800000  1.0
   11d74:	b	11958 <strspn@plt+0x61c>
   11d78:	vcmpe.f64	d11, d12
   11d7c:	vmrs	APSR_nzcv, fpscr
   11d80:	movle	r3, #0
   11d84:	movgt	r3, #1
   11d88:	b	1197c <strspn@plt+0x640>
   11d8c:	ldr	r1, [pc, #960]	; 12154 <strspn@plt+0xe18>
   11d90:	mov	r2, #5
   11d94:	mov	r0, r6
   11d98:	add	r1, pc, r1
   11d9c:	bl	11114 <dcgettext@plt>
   11da0:	mov	r9, r0
   11da4:	mov	r0, sl
   11da8:	bl	142b0 <close_stdout@@Base+0x1a0c>
   11dac:	mov	r2, r9
   11db0:	mov	r1, r6
   11db4:	mov	r3, r0
   11db8:	mov	r0, #1
   11dbc:	bl	11198 <error@plt>
   11dc0:	b	11b5c <strspn@plt+0x820>
   11dc4:	add	r7, r7, #1
   11dc8:	mov	r1, r5
   11dcc:	add	r0, sl, r7
   11dd0:	bl	1133c <strspn@plt>
   11dd4:	add	r7, r0, r7
   11dd8:	b	11b38 <strspn@plt+0x7fc>
   11ddc:	add	r1, r2, #1
   11de0:	str	r1, [ip]
   11de4:	ldr	r1, [fp, r2, lsl #2]
   11de8:	mov	r0, r6
   11dec:	str	r3, [sp, #12]
   11df0:	bl	1256c <strspn@plt+0x1230>
   11df4:	cmp	sl, #0
   11df8:	vldr	d11, [sp, #64]	; 0x40
   11dfc:	ldr	r8, [sp, #72]	; 0x48
   11e00:	ldr	r2, [sp, #76]	; 0x4c
   11e04:	ldr	r3, [sp, #12]
   11e08:	bne	11958 <strspn@plt+0x61c>
   11e0c:	cmp	r3, #0
   11e10:	bne	11958 <strspn@plt+0x61c>
   11e14:	cmp	r2, #0
   11e18:	bne	11e68 <strspn@plt+0xb2c>
   11e1c:	vcmpe.f64	d12, #0.0
   11e20:	vmrs	APSR_nzcv, fpscr
   11e24:	blt	11e7c <strspn@plt+0xb40>
   11e28:	vmov.f64	d7, #112	; 0x3f800000  1.0
   11e2c:	vcmp.f64	d9, d7
   11e30:	vmrs	APSR_nzcv, fpscr
   11e34:	bne	11e7c <strspn@plt+0xb40>
   11e38:	vcmpe.f64	d11, #0.0
   11e3c:	vmrs	APSR_nzcv, fpscr
   11e40:	blt	11fc8 <strspn@plt+0xc8c>
   11e44:	ldr	r3, [pc, #780]	; 12158 <strspn@plt+0xe1c>
   11e48:	add	r3, pc, r3
   11e4c:	ldrb	r2, [r3, #32]
   11e50:	cmp	r2, #0
   11e54:	bne	11e74 <strspn@plt+0xb38>
   11e58:	cmp	r5, #0
   11e5c:	beq	1201c <strspn@plt+0xce0>
   11e60:	vmov.f64	d9, #112	; 0x3f800000  1.0
   11e64:	b	1196c <strspn@plt+0x630>
   11e68:	mov	sl, #0
   11e6c:	mov	r3, sl
   11e70:	b	11958 <strspn@plt+0x61c>
   11e74:	vmov.f64	d9, #112	; 0x3f800000  1.0
   11e78:	mov	r2, #0
   11e7c:	mov	sl, r2
   11e80:	mov	r3, r2
   11e84:	b	11958 <strspn@plt+0x61c>
   11e88:	cmp	r3, sl
   11e8c:	movlt	r3, sl
   11e90:	cmn	r3, #-2147483647	; 0x80000001
   11e94:	beq	11fdc <strspn@plt+0xca0>
   11e98:	cmn	r2, #-2147483647	; 0x80000001
   11e9c:	beq	1200c <strspn@plt+0xcd0>
   11ea0:	ldr	r5, [pc, #692]	; 1215c <strspn@plt+0xe20>
   11ea4:	add	r5, pc, r5
   11ea8:	ldrb	r1, [r5, #32]
   11eac:	cmp	r1, #0
   11eb0:	beq	11fe8 <strspn@plt+0xcac>
   11eb4:	cmp	r2, #0
   11eb8:	rsb	r1, r2, r3
   11ebc:	rsb	r2, sl, r3
   11ec0:	add	r8, r1, r8
   11ec4:	add	r7, r2, r7
   11ec8:	beq	11f80 <strspn@plt+0xc44>
   11ecc:	cmp	r3, #0
   11ed0:	subeq	r8, r8, #1
   11ed4:	beq	11ee4 <strspn@plt+0xba8>
   11ed8:	cmp	sl, #0
   11edc:	bne	11ee4 <strspn@plt+0xba8>
   11ee0:	add	r7, r7, #1
   11ee4:	cmp	r8, r7
   11ee8:	movcs	r7, r8
   11eec:	cmp	r7, #0
   11ef0:	bge	11f98 <strspn@plt+0xc5c>
   11ef4:	ldr	r5, [pc, #612]	; 12160 <strspn@plt+0xe24>
   11ef8:	add	r5, pc, r5
   11efc:	b	11960 <strspn@plt+0x624>
   11f00:	ldr	r1, [pc, #604]	; 12164 <strspn@plt+0xe28>
   11f04:	mov	r2, #5
   11f08:	add	r1, pc, r1
   11f0c:	bl	11114 <dcgettext@plt>
   11f10:	mov	r9, r0
   11f14:	mov	r0, sl
   11f18:	bl	142b0 <close_stdout@@Base+0x1a0c>
   11f1c:	ldr	ip, [sp, #28]
   11f20:	mov	r2, r9
   11f24:	mov	r1, r6
   11f28:	ldrb	lr, [ip]
   11f2c:	str	lr, [sp]
   11f30:	mov	r3, r0
   11f34:	mov	r0, #1
   11f38:	bl	11198 <error@plt>
   11f3c:	b	11b78 <strspn@plt+0x83c>
   11f40:	ldr	r0, [r3]
   11f44:	bl	11228 <strlen@plt>
   11f48:	cmp	r0, #1
   11f4c:	bne	118f4 <strspn@plt+0x5b8>
   11f50:	ldr	ip, [sp, #24]
   11f54:	cmp	ip, #1
   11f58:	beq	120b0 <strspn@plt+0xd74>
   11f5c:	ldr	ip, [sp, #24]
   11f60:	mov	r0, r7
   11f64:	add	r3, ip, r6
   11f68:	sub	r3, r3, #-1073741823	; 0xc0000001
   11f6c:	ldr	r1, [fp, r3, lsl #2]
   11f70:	bl	11348 <strspn@plt+0xc>
   11f74:	cmp	r0, #0
   11f78:	beq	118f4 <strspn@plt+0x5b8>
   11f7c:	b	11adc <strspn@plt+0x7a0>
   11f80:	cmp	r3, #0
   11f84:	beq	11ee4 <strspn@plt+0xba8>
   11f88:	cmp	sl, #0
   11f8c:	add	r8, r8, #1
   11f90:	bne	11ee4 <strspn@plt+0xba8>
   11f94:	b	11ee0 <strspn@plt+0xba4>
   11f98:	ldr	r5, [pc, #456]	; 12168 <strspn@plt+0xe2c>
   11f9c:	mov	r1, #1
   11fa0:	str	r3, [sp, #4]
   11fa4:	mov	r2, #28
   11fa8:	add	r5, pc, r5
   11fac:	ldr	r3, [pc, #440]	; 1216c <strspn@plt+0xe30>
   11fb0:	add	r5, r5, #4
   11fb4:	str	r7, [sp]
   11fb8:	add	r3, pc, r3
   11fbc:	mov	r0, r5
   11fc0:	bl	11258 <__sprintf_chk@plt>
   11fc4:	b	11960 <strspn@plt+0x624>
   11fc8:	mov	r2, #0
   11fcc:	vmov.f64	d9, #112	; 0x3f800000  1.0
   11fd0:	mov	sl, r2
   11fd4:	mov	r3, r2
   11fd8:	b	11958 <strspn@plt+0x61c>
   11fdc:	ldr	r5, [pc, #396]	; 12170 <strspn@plt+0xe34>
   11fe0:	add	r5, pc, r5
   11fe4:	b	11960 <strspn@plt+0x624>
   11fe8:	add	r5, r5, #4
   11fec:	str	r3, [sp]
   11ff0:	ldr	r3, [pc, #380]	; 12174 <strspn@plt+0xe38>
   11ff4:	mov	r1, #1
   11ff8:	mov	r2, #28
   11ffc:	mov	r0, r5
   12000:	add	r3, pc, r3
   12004:	bl	11258 <__sprintf_chk@plt>
   12008:	b	11960 <strspn@plt+0x624>
   1200c:	ldr	r5, [pc, #356]	; 12178 <strspn@plt+0xe3c>
   12010:	add	r5, pc, r5
   12014:	b	11960 <strspn@plt+0x624>
   12018:	bl	14a70 <close_stdout@@Base+0x21cc>
   1201c:	ldr	r0, [r3]
   12020:	bl	11228 <strlen@plt>
   12024:	cmp	r0, #1
   12028:	beq	12050 <strspn@plt+0xd14>
   1202c:	mov	sl, #0
   12030:	vmov.f64	d9, #112	; 0x3f800000  1.0
   12034:	mov	r3, sl
   12038:	mov	r2, sl
   1203c:	b	11ea0 <strspn@plt+0xb64>
   12040:	vmov.f64	d11, d9
   12044:	mov	r2, r3
   12048:	vmov.f64	d9, #112	; 0x3f800000  1.0
   1204c:	b	11e14 <strspn@plt+0xad8>
   12050:	ldr	r5, [pc, #292]	; 1217c <strspn@plt+0xe40>
   12054:	add	r0, sp, #40	; 0x28
   12058:	vmov	r2, r3, d12
   1205c:	add	r5, pc, r5
   12060:	mov	r1, r5
   12064:	bl	14b98 <close_stdout@@Base+0x22f4>
   12068:	cmp	r0, #0
   1206c:	blt	12018 <strspn@plt+0xcdc>
   12070:	mov	r1, r5
   12074:	add	r0, sp, #44	; 0x2c
   12078:	vmov	r2, r3, d11
   1207c:	bl	14b98 <close_stdout@@Base+0x22f4>
   12080:	cmp	r0, #0
   12084:	blt	12018 <strspn@plt+0xcdc>
   12088:	ldr	r0, [sp, #40]	; 0x28
   1208c:	ldr	r1, [sp, #44]	; 0x2c
   12090:	bl	11348 <strspn@plt+0xc>
   12094:	cmp	r0, #0
   12098:	bne	11adc <strspn@plt+0x7a0>
   1209c:	ldr	r0, [sp, #40]	; 0x28
   120a0:	bl	110c0 <free@plt>
   120a4:	ldr	r0, [sp, #44]	; 0x2c
   120a8:	bl	110c0 <free@plt>
   120ac:	b	1202c <strspn@plt+0xcf0>
   120b0:	ldr	r7, [pc, #200]	; 12180 <strspn@plt+0xe44>
   120b4:	add	r7, pc, r7
   120b8:	b	11f5c <strspn@plt+0xc20>
   120bc:	mov	r8, r7
   120c0:	vmov.f64	d12, #112	; 0x3f800000  1.0
   120c4:	mov	r7, #1
   120c8:	b	11e38 <strspn@plt+0xafc>
   120cc:	andeq	r7, r1, ip, lsr sl
   120d0:	andeq	r0, r0, r8, lsl #2
   120d4:			; <UNDEFINED> instruction: 0x00017bbc
   120d8:	andeq	r7, r1, ip, lsr #23
   120dc:	andeq	r6, r0, ip, lsl #1
   120e0:	andeq	r6, r0, r4, asr #2
   120e4:	andeq	r6, r0, r4, ror r1
   120e8:	andeq	r7, r1, r0, ror #16
   120ec:	andeq	r6, r0, ip, asr r1
   120f0:	andeq	r0, r0, r8, lsl r1
   120f4:	andeq	r7, r1, r4, asr #22
   120f8:	andeq	r0, r0, ip, lsl #2
   120fc:	strdeq	r5, [r0], -ip
   12100:	andeq	r0, r0, r4, lsr #2
   12104:	andeq	r0, r0, r0, lsl r1
   12108:	andeq	r6, r0, r8, ror r0
   1210c:	andeq	r6, r0, r4, rrx
   12110:	andeq	r5, r0, r8, asr #30
   12114:	andeq	r0, r0, ip, lsr r1
   12118:	andeq	r6, r0, r8, lsr r0
   1211c:	strdeq	r5, [r0], -r4
   12120:	andeq	r7, r1, ip, lsr #17
   12124:	andeq	r7, r1, ip, ror #15
   12128:	andeq	r5, r0, ip, ror #29
   1212c:	andeq	r5, r0, ip, asr #26
   12130:	andeq	r0, r0, r4, lsl #2
   12134:	ldrdeq	r7, [r1], -r8
   12138:	andeq	r5, r0, r8, ror #25
   1213c:	andeq	r5, r0, ip, ror #12
   12140:	andeq	r5, r0, r0, lsr #25
   12144:			; <UNDEFINED> instruction: 0x00005cb4
   12148:	andeq	r7, r1, r8, ror #9
   1214c:	andeq	r5, r0, r4, lsr #23
   12150:	andeq	r5, r0, r4, asr #21
   12154:	andeq	r5, r0, r8, asr sl
   12158:	andeq	r7, r1, r0, asr #6
   1215c:	andeq	r7, r1, r4, ror #5
   12160:	andeq	r5, r0, r8, ror r8
   12164:	andeq	r5, r0, ip, lsl #18
   12168:	andeq	r7, r1, r0, ror #3
   1216c:	strdeq	r5, [r0], -ip
   12170:	muleq	r0, r0, r7
   12174:	andeq	r5, r0, r0, asr #17
   12178:	andeq	r5, r0, r0, ror #14
   1217c:	andeq	r5, r0, r0, asr r8
   12180:			; <UNDEFINED> instruction: 0x000056b8
   12184:	mov	fp, #0
   12188:	mov	lr, #0
   1218c:	pop	{r1}		; (ldr r1, [sp], #4)
   12190:	mov	r2, sp
   12194:	push	{r2}		; (str r2, [sp, #-4]!)
   12198:	push	{r0}		; (str r0, [sp, #-4]!)
   1219c:	ldr	ip, [pc, #16]	; 121b4 <strspn@plt+0xe78>
   121a0:	push	{ip}		; (str ip, [sp, #-4]!)
   121a4:	ldr	r0, [pc, #12]	; 121b8 <strspn@plt+0xe7c>
   121a8:	ldr	r3, [pc, #12]	; 121bc <strspn@plt+0xe80>
   121ac:	bl	111d4 <__libc_start_main@plt>
   121b0:	bl	11318 <abort@plt>
   121b4:	andeq	r7, r1, r4, asr #2
   121b8:	andeq	r1, r1, r0, lsr #11
   121bc:	andeq	r7, r1, r0, ror #1
   121c0:	ldr	r3, [pc, #20]	; 121dc <strspn@plt+0xea0>
   121c4:	ldr	r2, [pc, #20]	; 121e0 <strspn@plt+0xea4>
   121c8:	add	r3, pc, r3
   121cc:	ldr	r2, [r3, r2]
   121d0:	cmp	r2, #0
   121d4:	bxeq	lr
   121d8:	b	111ec <__gmon_start__@plt>
   121dc:	andeq	r6, r1, r0, lsr lr
   121e0:	andeq	r0, r0, ip, lsl r1
   121e4:	push	{r3, lr}
   121e8:	movw	r0, #37260	; 0x918c
   121ec:	ldr	r3, [pc, #36]	; 12218 <strspn@plt+0xedc>
   121f0:	movt	r0, #2
   121f4:	rsb	r3, r0, r3
   121f8:	cmp	r3, #6
   121fc:	popls	{r3, pc}
   12200:	movw	r3, #0
   12204:	movt	r3, #0
   12208:	cmp	r3, #0
   1220c:	popeq	{r3, pc}
   12210:	blx	r3
   12214:	pop	{r3, pc}
   12218:	andeq	r9, r2, pc, lsl #3
   1221c:	push	{r3, lr}
   12220:	movw	r0, #37260	; 0x918c
   12224:	movw	r3, #37260	; 0x918c
   12228:	movt	r0, #2
   1222c:	movt	r3, #2
   12230:	rsb	r3, r0, r3
   12234:	asr	r3, r3, #2
   12238:	add	r3, r3, r3, lsr #31
   1223c:	asrs	r1, r3, #1
   12240:	popeq	{r3, pc}
   12244:	movw	r2, #0
   12248:	movt	r2, #0
   1224c:	cmp	r2, #0
   12250:	popeq	{r3, pc}
   12254:	blx	r2
   12258:	pop	{r3, pc}
   1225c:	push	{r4, lr}
   12260:	movw	r4, #37260	; 0x918c
   12264:	movt	r4, #2
   12268:	ldrb	r3, [r4]
   1226c:	cmp	r3, #0
   12270:	popne	{r4, pc}
   12274:	bl	121e4 <strspn@plt+0xea8>
   12278:	mov	r3, #1
   1227c:	strb	r3, [r4]
   12280:	pop	{r4, pc}
   12284:	movw	r0, #36480	; 0x8e80
   12288:	movt	r0, #2
   1228c:	push	{r3, lr}
   12290:	ldr	r3, [r0]
   12294:	cmp	r3, #0
   12298:	beq	122b0 <strspn@plt+0xf74>
   1229c:	movw	r3, #0
   122a0:	movt	r3, #0
   122a4:	cmp	r3, #0
   122a8:	beq	122b0 <strspn@plt+0xf74>
   122ac:	blx	r3
   122b0:	pop	{r3, lr}
   122b4:	b	1221c <strspn@plt+0xee0>
   122b8:	push	{r3, r4, r5, lr}
   122bc:	mov	r4, r0
   122c0:	bl	11228 <strlen@plt>
   122c4:	ldrb	r3, [r4]
   122c8:	sub	r3, r3, #48	; 0x30
   122cc:	cmp	r3, #9
   122d0:	mov	r5, r0
   122d4:	bhi	122f8 <strspn@plt+0xfbc>
   122d8:	ldr	r1, [pc, #32]	; 12300 <strspn@plt+0xfc4>
   122dc:	mov	r0, r4
   122e0:	add	r1, pc, r1
   122e4:	bl	1133c <strspn@plt>
   122e8:	subs	r3, r5, r0
   122ec:	rsbs	r0, r3, #0
   122f0:	adcs	r0, r0, r3
   122f4:	pop	{r3, r4, r5, pc}
   122f8:	mov	r0, #0
   122fc:	pop	{r3, r4, r5, pc}
   12300:	muleq	r0, ip, lr
   12304:	push	{r4, r5, r6, lr}
   12308:	subs	r4, r0, #0
   1230c:	ldr	r5, [pc, #524]	; 12520 <strspn@plt+0x11e4>
   12310:	sub	sp, sp, #8
   12314:	add	r5, pc, r5
   12318:	beq	12360 <strspn@plt+0x1024>
   1231c:	ldr	r3, [pc, #512]	; 12524 <strspn@plt+0x11e8>
   12320:	mov	r2, #5
   12324:	ldr	r1, [pc, #508]	; 12528 <strspn@plt+0x11ec>
   12328:	mov	r0, #0
   1232c:	ldr	r3, [r5, r3]
   12330:	add	r1, pc, r1
   12334:	ldr	r6, [r3]
   12338:	bl	11114 <dcgettext@plt>
   1233c:	ldr	r3, [pc, #488]	; 1252c <strspn@plt+0x11f0>
   12340:	mov	r1, #1
   12344:	ldr	r3, [r5, r3]
   12348:	ldr	r3, [r3]
   1234c:	mov	r2, r0
   12350:	mov	r0, r6
   12354:	bl	112a0 <__fprintf_chk@plt>
   12358:	mov	r0, r4
   1235c:	bl	1121c <exit@plt>
   12360:	ldr	r1, [pc, #456]	; 12530 <strspn@plt+0x11f4>
   12364:	mov	r2, #5
   12368:	add	r1, pc, r1
   1236c:	bl	11114 <dcgettext@plt>
   12370:	ldr	r3, [pc, #436]	; 1252c <strspn@plt+0x11f0>
   12374:	ldr	r6, [r5, r3]
   12378:	ldr	r3, [r6]
   1237c:	mov	r2, r3
   12380:	str	r3, [sp]
   12384:	mov	r1, r0
   12388:	mov	r0, #1
   1238c:	bl	11288 <__printf_chk@plt>
   12390:	ldr	r1, [pc, #412]	; 12534 <strspn@plt+0x11f8>
   12394:	mov	r2, #5
   12398:	mov	r0, r4
   1239c:	add	r1, pc, r1
   123a0:	bl	11114 <dcgettext@plt>
   123a4:	ldr	r3, [pc, #396]	; 12538 <strspn@plt+0x11fc>
   123a8:	ldr	r5, [r5, r3]
   123ac:	ldr	r1, [r5]
   123b0:	bl	11084 <fputs_unlocked@plt>
   123b4:	ldr	r1, [pc, #384]	; 1253c <strspn@plt+0x1200>
   123b8:	mov	r2, #5
   123bc:	mov	r0, r4
   123c0:	add	r1, pc, r1
   123c4:	bl	11114 <dcgettext@plt>
   123c8:	ldr	r1, [r5]
   123cc:	bl	11084 <fputs_unlocked@plt>
   123d0:	ldr	r1, [pc, #360]	; 12540 <strspn@plt+0x1204>
   123d4:	mov	r2, #5
   123d8:	mov	r0, r4
   123dc:	add	r1, pc, r1
   123e0:	bl	11114 <dcgettext@plt>
   123e4:	ldr	r1, [r5]
   123e8:	bl	11084 <fputs_unlocked@plt>
   123ec:	ldr	r1, [pc, #336]	; 12544 <strspn@plt+0x1208>
   123f0:	mov	r2, #5
   123f4:	mov	r0, r4
   123f8:	add	r1, pc, r1
   123fc:	bl	11114 <dcgettext@plt>
   12400:	ldr	r1, [r5]
   12404:	bl	11084 <fputs_unlocked@plt>
   12408:	ldr	r1, [pc, #312]	; 12548 <strspn@plt+0x120c>
   1240c:	mov	r2, #5
   12410:	mov	r0, r4
   12414:	add	r1, pc, r1
   12418:	bl	11114 <dcgettext@plt>
   1241c:	ldr	r1, [r5]
   12420:	bl	11084 <fputs_unlocked@plt>
   12424:	ldr	r1, [pc, #288]	; 1254c <strspn@plt+0x1210>
   12428:	mov	r2, #5
   1242c:	mov	r0, r4
   12430:	add	r1, pc, r1
   12434:	bl	11114 <dcgettext@plt>
   12438:	ldr	r1, [r5]
   1243c:	bl	11084 <fputs_unlocked@plt>
   12440:	ldr	r1, [pc, #264]	; 12550 <strspn@plt+0x1214>
   12444:	mov	r2, #5
   12448:	mov	r0, r4
   1244c:	add	r1, pc, r1
   12450:	bl	11114 <dcgettext@plt>
   12454:	ldr	r1, [r5]
   12458:	bl	11084 <fputs_unlocked@plt>
   1245c:	ldr	r1, [pc, #240]	; 12554 <strspn@plt+0x1218>
   12460:	mov	r2, #5
   12464:	mov	r0, r4
   12468:	add	r1, pc, r1
   1246c:	bl	11114 <dcgettext@plt>
   12470:	ldr	r2, [pc, #224]	; 12558 <strspn@plt+0x121c>
   12474:	ldr	r3, [pc, #224]	; 1255c <strspn@plt+0x1220>
   12478:	add	r2, pc, r2
   1247c:	add	r3, pc, r3
   12480:	mov	r1, r0
   12484:	mov	r0, #1
   12488:	bl	11288 <__printf_chk@plt>
   1248c:	mov	r0, #5
   12490:	mov	r1, r4
   12494:	bl	112d0 <setlocale@plt>
   12498:	cmp	r0, #0
   1249c:	beq	124b8 <strspn@plt+0x117c>
   124a0:	ldr	r1, [pc, #184]	; 12560 <strspn@plt+0x1224>
   124a4:	mov	r2, #3
   124a8:	add	r1, pc, r1
   124ac:	bl	1130c <strncmp@plt>
   124b0:	cmp	r0, #0
   124b4:	bne	124ec <strspn@plt+0x11b0>
   124b8:	ldr	r1, [pc, #164]	; 12564 <strspn@plt+0x1228>
   124bc:	mov	r2, #5
   124c0:	mov	r0, #0
   124c4:	add	r1, pc, r1
   124c8:	bl	11114 <dcgettext@plt>
   124cc:	mov	r5, r0
   124d0:	ldr	r0, [r6]
   124d4:	bl	129bc <close_stdout@@Base+0x118>
   124d8:	mov	r1, r5
   124dc:	mov	r2, r0
   124e0:	mov	r0, #1
   124e4:	bl	11288 <__printf_chk@plt>
   124e8:	b	12358 <strspn@plt+0x101c>
   124ec:	ldr	r1, [pc, #116]	; 12568 <strspn@plt+0x122c>
   124f0:	mov	r2, #5
   124f4:	mov	r0, r4
   124f8:	add	r1, pc, r1
   124fc:	bl	11114 <dcgettext@plt>
   12500:	mov	r5, r0
   12504:	ldr	r0, [r6]
   12508:	bl	129bc <close_stdout@@Base+0x118>
   1250c:	mov	r1, r5
   12510:	mov	r2, r0
   12514:	mov	r0, #1
   12518:	bl	11288 <__printf_chk@plt>
   1251c:	b	124b8 <strspn@plt+0x117c>
   12520:	andeq	r6, r1, r4, ror #25
   12524:	andeq	r0, r0, r4, lsl r1
   12528:	andeq	r4, r0, r8, asr lr
   1252c:	andeq	r0, r0, r0, lsr r1
   12530:	andeq	r4, r0, r8, asr #28
   12534:	andeq	r4, r0, ip, ror lr
   12538:	andeq	r0, r0, r4, lsr #2
   1253c:	muleq	r0, r4, lr
   12540:	andeq	r4, r0, r4, asr #29
   12544:	andeq	r4, r0, ip, ror pc
   12548:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   1254c:	andeq	r4, r0, ip, lsr #31
   12550:	andeq	r5, r0, ip, asr #2
   12554:	andeq	r5, r0, r0, lsl #4
   12558:	andeq	r5, r0, r8, lsl #4
   1255c:	andeq	r5, r0, r4, lsl r2
   12560:	andeq	r5, r0, r0, lsl r2
   12564:	andeq	r5, r0, r0, asr #4
   12568:	andeq	r5, r0, r4, asr #3
   1256c:	ldr	ip, [pc, #636]	; 127f0 <strspn@plt+0x14b4>
   12570:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12574:	add	ip, pc, ip
   12578:	ldr	lr, [pc, #628]	; 127f4 <strspn@plt+0x14b8>
   1257c:	sub	sp, sp, #24
   12580:	ldr	r3, [pc, #624]	; 127f8 <strspn@plt+0x14bc>
   12584:	mov	r4, r1
   12588:	mov	r6, r0
   1258c:	mov	r2, sp
   12590:	ldr	r8, [ip, lr]
   12594:	mov	r0, r1
   12598:	mov	r1, #0
   1259c:	mov	r7, sp
   125a0:	ldr	lr, [r8]
   125a4:	str	lr, [sp, #20]
   125a8:	ldr	r3, [ip, r3]
   125ac:	bl	14ac8 <close_stdout@@Base+0x2224>
   125b0:	subs	r5, r0, #0
   125b4:	beq	127b4 <strspn@plt+0x1478>
   125b8:	bl	11210 <__ctype_b_loc@plt>
   125bc:	mov	r1, r4
   125c0:	ldr	r2, [r0]
   125c4:	mov	r4, r1
   125c8:	add	r1, r1, #1
   125cc:	ldrb	r5, [r4]
   125d0:	lsl	r3, r5, #1
   125d4:	ldrh	r3, [r2, r3]
   125d8:	tst	r3, #8192	; 0x2000
   125dc:	bne	125c4 <strspn@plt+0x1288>
   125e0:	cmp	r5, #43	; 0x2b
   125e4:	beq	125c4 <strspn@plt+0x1288>
   125e8:	mov	r0, r4
   125ec:	bl	11228 <strlen@plt>
   125f0:	cmp	r5, #0
   125f4:	mvn	r3, #-2147483648	; 0x80000000
   125f8:	str	r3, [sp, #12]
   125fc:	mov	r9, r0
   12600:	str	r0, [sp, #8]
   12604:	beq	12634 <strspn@plt+0x12f8>
   12608:	and	r5, r5, #223	; 0xdf
   1260c:	cmp	r5, #88	; 0x58
   12610:	beq	12724 <strspn@plt+0x13e8>
   12614:	mov	r2, r4
   12618:	b	12628 <strspn@plt+0x12ec>
   1261c:	and	r3, r3, #223	; 0xdf
   12620:	cmp	r3, #88	; 0x58
   12624:	beq	12724 <strspn@plt+0x13e8>
   12628:	ldrb	r3, [r2, #1]!
   1262c:	cmp	r3, #0
   12630:	bne	1261c <strspn@plt+0x12e0>
   12634:	vldr	d6, [pc, #428]	; 127e8 <strspn@plt+0x14ac>
   12638:	vldr	d7, [sp]
   1263c:	vmul.f64	d7, d7, d6
   12640:	vcmp.f64	d7, d6
   12644:	vmrs	APSR_nzcv, fpscr
   12648:	bne	12724 <strspn@plt+0x13e8>
   1264c:	mov	r0, r4
   12650:	mov	r1, #46	; 0x2e
   12654:	bl	11234 <strchr@plt>
   12658:	subs	r5, r0, #0
   1265c:	streq	r5, [sp, #12]
   12660:	beq	126d4 <strspn@plt+0x1398>
   12664:	ldrb	r3, [r5, #1]
   12668:	add	r1, r5, #1
   1266c:	mov	r2, #0
   12670:	cmp	r3, #0
   12674:	beq	127a8 <strspn@plt+0x146c>
   12678:	and	r3, r3, #223	; 0xdf
   1267c:	cmp	r3, #69	; 0x45
   12680:	bne	12694 <strspn@plt+0x1358>
   12684:	b	127a8 <strspn@plt+0x146c>
   12688:	and	r3, r3, #223	; 0xdf
   1268c:	cmp	r3, #69	; 0x45
   12690:	beq	126a4 <strspn@plt+0x1368>
   12694:	ldrb	r3, [r1, #1]!
   12698:	add	r2, r2, #1
   1269c:	cmp	r3, #0
   126a0:	bne	12688 <strspn@plt+0x134c>
   126a4:	cmp	r2, #0
   126a8:	strge	r2, [sp, #12]
   126ac:	cmp	r4, r5
   126b0:	moveq	r3, #1
   126b4:	beq	126cc <strspn@plt+0x1390>
   126b8:	ldrb	r3, [r5, #-1]
   126bc:	sub	r3, r3, #48	; 0x30
   126c0:	cmp	r3, #9
   126c4:	movls	r3, #0
   126c8:	movhi	r3, #1
   126cc:	add	r9, r3, r9
   126d0:	str	r9, [sp, #8]
   126d4:	mov	r0, r4
   126d8:	mov	r1, #101	; 0x65
   126dc:	bl	11234 <strchr@plt>
   126e0:	subs	r9, r0, #0
   126e4:	beq	12788 <strspn@plt+0x144c>
   126e8:	add	r0, r9, #1
   126ec:	mov	r1, #0
   126f0:	mov	r2, #10
   126f4:	bl	110a8 <strtol@plt>
   126f8:	ldr	r3, [sp, #12]
   126fc:	subs	sl, r0, #0
   12700:	mov	r0, r4
   12704:	blt	12748 <strspn@plt+0x140c>
   12708:	bl	11228 <strlen@plt>
   1270c:	ldr	r3, [sp, #8]
   12710:	rsb	r4, r9, r4
   12714:	rsb	r3, r4, r3
   12718:	rsb	r3, r0, r3
   1271c:	add	r3, r3, sl
   12720:	str	r3, [sp, #8]
   12724:	ldm	r7, {r0, r1, r2, r3}
   12728:	ldr	r4, [sp, #20]
   1272c:	ldr	ip, [r8]
   12730:	cmp	r4, ip
   12734:	stm	r6, {r0, r1, r2, r3}
   12738:	mov	r0, r6
   1273c:	bne	127e0 <strspn@plt+0x14a4>
   12740:	add	sp, sp, #24
   12744:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12748:	rsb	r3, sl, r3
   1274c:	str	r3, [sp, #12]
   12750:	bl	11228 <strlen@plt>
   12754:	ldr	r3, [sp, #8]
   12758:	rsb	r4, r9, r4
   1275c:	cmp	r5, #0
   12760:	rsb	r3, r4, r3
   12764:	rsb	sl, sl, #0
   12768:	rsb	r0, r0, r3
   1276c:	beq	127a0 <strspn@plt+0x1464>
   12770:	add	r5, r5, #1
   12774:	cmp	r9, r5
   12778:	beq	127a0 <strspn@plt+0x1464>
   1277c:	str	r0, [sp, #8]
   12780:	ldr	r3, [sp, #8]
   12784:	b	1271c <strspn@plt+0x13e0>
   12788:	mov	r0, r4
   1278c:	mov	r1, #69	; 0x45
   12790:	bl	11234 <strchr@plt>
   12794:	subs	r9, r0, #0
   12798:	beq	12724 <strspn@plt+0x13e8>
   1279c:	b	126e8 <strspn@plt+0x13ac>
   127a0:	add	r0, r0, #1
   127a4:	b	1277c <strspn@plt+0x1440>
   127a8:	mvn	r3, #0
   127ac:	str	r2, [sp, #12]
   127b0:	b	126cc <strspn@plt+0x1390>
   127b4:	ldr	r1, [pc, #64]	; 127fc <strspn@plt+0x14c0>
   127b8:	mov	r2, #5
   127bc:	add	r1, pc, r1
   127c0:	bl	11114 <dcgettext@plt>
   127c4:	mov	r1, r5
   127c8:	mov	r3, r4
   127cc:	mov	r2, r0
   127d0:	mov	r0, r5
   127d4:	bl	11198 <error@plt>
   127d8:	mov	r0, #1
   127dc:	bl	12304 <strspn@plt+0xfc8>
   127e0:	bl	11120 <__stack_chk_fail@plt>
   127e4:	nop	{0}
	...
   127f0:	andeq	r6, r1, r4, lsl #21
   127f4:	andeq	r0, r0, r8, lsl #2
   127f8:	andeq	r0, r0, r4, lsl #2
   127fc:	andeq	r4, r0, ip, lsl #31

00012800 <c_strtold@@Base>:
   12800:	push	{r4, r5, r6, lr}
   12804:	mov	r6, r0
   12808:	ldr	r5, [pc, #96]	; 12870 <c_strtold@@Base+0x70>
   1280c:	mov	r4, r1
   12810:	add	r5, pc, r5
   12814:	ldr	r2, [r5]
   12818:	cmp	r2, #0
   1281c:	beq	12850 <c_strtold@@Base+0x50>
   12820:	ldr	r3, [pc, #76]	; 12874 <c_strtold@@Base+0x74>
   12824:	ldr	r2, [pc, r3]
   12828:	cmp	r2, #0
   1282c:	beq	12840 <c_strtold@@Base+0x40>
   12830:	mov	r0, r6
   12834:	mov	r1, r4
   12838:	pop	{r4, r5, r6, lr}
   1283c:	b	111bc <strtold_l@plt>
   12840:	cmp	r4, #0
   12844:	vldr	d0, [pc, #28]	; 12868 <c_strtold@@Base+0x68>
   12848:	strne	r6, [r4]
   1284c:	pop	{r4, r5, r6, pc}
   12850:	ldr	r1, [pc, #32]	; 12878 <c_strtold@@Base+0x78>
   12854:	movw	r0, #8127	; 0x1fbf
   12858:	add	r1, pc, r1
   1285c:	bl	112f4 <newlocale@plt>
   12860:	str	r0, [r5]
   12864:	b	12820 <c_strtold@@Base+0x20>
	...
   12870:	muleq	r1, ip, r9
   12874:	andeq	r6, r1, r8, lsl #19
   12878:	andeq	r5, r0, r0, ror r0
   1287c:	ldr	r3, [pc, #8]	; 1288c <c_strtold@@Base+0x8c>
   12880:	add	r3, pc, r3
   12884:	str	r0, [r3]
   12888:	bx	lr
   1288c:	andeq	r6, r1, r0, lsr r9
   12890:	ldr	r3, [pc, #8]	; 128a0 <c_strtold@@Base+0xa0>
   12894:	add	r3, pc, r3
   12898:	strb	r0, [r3, #4]
   1289c:	bx	lr
   128a0:	andeq	r6, r1, ip, lsl r9

000128a4 <close_stdout@@Base>:
   128a4:	push	{r4, r5, r6, r7, lr}
   128a8:	sub	sp, sp, #12
   128ac:	ldr	r4, [pc, #228]	; 12998 <close_stdout@@Base+0xf4>
   128b0:	ldr	r3, [pc, #228]	; 1299c <close_stdout@@Base+0xf8>
   128b4:	add	r4, pc, r4
   128b8:	ldr	r3, [r4, r3]
   128bc:	ldr	r0, [r3]
   128c0:	bl	14c94 <close_stdout@@Base+0x23f0>
   128c4:	cmp	r0, #0
   128c8:	beq	128f0 <close_stdout@@Base+0x4c>
   128cc:	ldr	r3, [pc, #204]	; 129a0 <close_stdout@@Base+0xfc>
   128d0:	add	r3, pc, r3
   128d4:	ldrb	r3, [r3, #4]
   128d8:	cmp	r3, #0
   128dc:	beq	12910 <close_stdout@@Base+0x6c>
   128e0:	bl	1124c <__errno_location@plt>
   128e4:	ldr	r3, [r0]
   128e8:	cmp	r3, #32
   128ec:	bne	12910 <close_stdout@@Base+0x6c>
   128f0:	ldr	r3, [pc, #172]	; 129a4 <close_stdout@@Base+0x100>
   128f4:	ldr	r3, [r4, r3]
   128f8:	ldr	r0, [r3]
   128fc:	bl	14c94 <close_stdout@@Base+0x23f0>
   12900:	cmp	r0, #0
   12904:	bne	12964 <close_stdout@@Base+0xc0>
   12908:	add	sp, sp, #12
   1290c:	pop	{r4, r5, r6, r7, pc}
   12910:	ldr	r1, [pc, #144]	; 129a8 <close_stdout@@Base+0x104>
   12914:	mov	r0, #0
   12918:	mov	r2, #5
   1291c:	add	r1, pc, r1
   12920:	bl	11114 <dcgettext@plt>
   12924:	ldr	r3, [pc, #128]	; 129ac <close_stdout@@Base+0x108>
   12928:	ldr	r5, [pc, r3]
   1292c:	cmp	r5, #0
   12930:	mov	r6, r0
   12934:	beq	12974 <close_stdout@@Base+0xd0>
   12938:	bl	1124c <__errno_location@plt>
   1293c:	ldr	r7, [r0]
   12940:	mov	r0, r5
   12944:	bl	1415c <close_stdout@@Base+0x18b8>
   12948:	ldr	r2, [pc, #96]	; 129b0 <close_stdout@@Base+0x10c>
   1294c:	str	r6, [sp]
   12950:	mov	r1, r7
   12954:	add	r2, pc, r2
   12958:	mov	r3, r0
   1295c:	mov	r0, #0
   12960:	bl	11198 <error@plt>
   12964:	ldr	r3, [pc, #72]	; 129b4 <close_stdout@@Base+0x110>
   12968:	ldr	r3, [r4, r3]
   1296c:	ldr	r0, [r3]
   12970:	bl	110cc <_exit@plt>
   12974:	bl	1124c <__errno_location@plt>
   12978:	ldr	r2, [pc, #56]	; 129b8 <close_stdout@@Base+0x114>
   1297c:	add	r2, pc, r2
   12980:	mov	r3, r0
   12984:	mov	r0, r5
   12988:	ldr	r1, [r3]
   1298c:	mov	r3, r6
   12990:	bl	11198 <error@plt>
   12994:	b	12964 <close_stdout@@Base+0xc0>
   12998:	andeq	r6, r1, r4, asr #14
   1299c:	andeq	r0, r0, r4, lsr #2
   129a0:	andeq	r6, r1, r0, ror #17
   129a4:	andeq	r0, r0, r4, lsl r1
   129a8:	andeq	r4, r0, r8, ror #31
   129ac:	andeq	r6, r1, r8, lsl #17
   129b0:			; <UNDEFINED> instruction: 0x00004fbc
   129b4:	andeq	r0, r0, r8, lsr #2
   129b8:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   129bc:	ldrb	r3, [r0]
   129c0:	cmp	r3, #47	; 0x2f
   129c4:	bne	129e0 <close_stdout@@Base+0x13c>
   129c8:	add	r2, r0, #1
   129cc:	mov	r0, r2
   129d0:	add	r2, r2, #1
   129d4:	ldrb	r3, [r0]
   129d8:	cmp	r3, #47	; 0x2f
   129dc:	beq	129cc <close_stdout@@Base+0x128>
   129e0:	cmp	r3, #0
   129e4:	bxeq	lr
   129e8:	mov	r2, r0
   129ec:	mov	r1, #0
   129f0:	cmp	r3, #47	; 0x2f
   129f4:	moveq	r1, #1
   129f8:	beq	12a08 <close_stdout@@Base+0x164>
   129fc:	cmp	r1, #0
   12a00:	movne	r0, r2
   12a04:	movne	r1, #0
   12a08:	ldrb	r3, [r2, #1]!
   12a0c:	cmp	r3, #0
   12a10:	bne	129f0 <close_stdout@@Base+0x14c>
   12a14:	bx	lr
   12a18:	push	{r4, lr}
   12a1c:	mov	r4, r0
   12a20:	bl	11228 <strlen@plt>
   12a24:	cmp	r0, #1
   12a28:	popls	{r4, pc}
   12a2c:	sub	r3, r0, #1
   12a30:	ldrb	r2, [r4, r3]
   12a34:	cmp	r2, #47	; 0x2f
   12a38:	popne	{r4, pc}
   12a3c:	mov	r0, r3
   12a40:	cmp	r0, #1
   12a44:	sub	r3, r3, #1
   12a48:	beq	12a5c <close_stdout@@Base+0x1b8>
   12a4c:	ldrb	r2, [r4, r3]
   12a50:	cmp	r2, #47	; 0x2f
   12a54:	popne	{r4, pc}
   12a58:	b	12a3c <close_stdout@@Base+0x198>
   12a5c:	pop	{r4, pc}
   12a60:	push	{r3, r4, r5, r6, r7, lr}
   12a64:	subs	r4, r0, #0
   12a68:	ldr	r5, [pc, #172]	; 12b1c <close_stdout@@Base+0x278>
   12a6c:	add	r5, pc, r5
   12a70:	beq	12af8 <close_stdout@@Base+0x254>
   12a74:	mov	r1, #47	; 0x2f
   12a78:	bl	112dc <strrchr@plt>
   12a7c:	subs	r6, r0, #0
   12a80:	beq	12adc <close_stdout@@Base+0x238>
   12a84:	add	r7, r6, #1
   12a88:	rsb	r3, r4, r7
   12a8c:	cmp	r3, #6
   12a90:	ble	12adc <close_stdout@@Base+0x238>
   12a94:	ldr	r1, [pc, #132]	; 12b20 <close_stdout@@Base+0x27c>
   12a98:	sub	r0, r6, #6
   12a9c:	mov	r2, #7
   12aa0:	add	r1, pc, r1
   12aa4:	bl	1130c <strncmp@plt>
   12aa8:	cmp	r0, #0
   12aac:	bne	12adc <close_stdout@@Base+0x238>
   12ab0:	ldr	r1, [pc, #108]	; 12b24 <close_stdout@@Base+0x280>
   12ab4:	mov	r0, r7
   12ab8:	mov	r2, #3
   12abc:	add	r1, pc, r1
   12ac0:	bl	1130c <strncmp@plt>
   12ac4:	cmp	r0, #0
   12ac8:	movne	r4, r7
   12acc:	ldreq	r3, [pc, #84]	; 12b28 <close_stdout@@Base+0x284>
   12ad0:	addeq	r4, r6, #4
   12ad4:	ldreq	r3, [r5, r3]
   12ad8:	streq	r4, [r3]
   12adc:	ldr	r2, [pc, #72]	; 12b2c <close_stdout@@Base+0x288>
   12ae0:	ldr	r3, [pc, #72]	; 12b30 <close_stdout@@Base+0x28c>
   12ae4:	ldr	r2, [r5, r2]
   12ae8:	str	r4, [r2]
   12aec:	ldr	r3, [r5, r3]
   12af0:	str	r4, [r3]
   12af4:	pop	{r3, r4, r5, r6, r7, pc}
   12af8:	ldr	r3, [pc, #52]	; 12b34 <close_stdout@@Base+0x290>
   12afc:	mov	r1, #1
   12b00:	ldr	r0, [pc, #48]	; 12b38 <close_stdout@@Base+0x294>
   12b04:	mov	r2, #55	; 0x37
   12b08:	ldr	r3, [r5, r3]
   12b0c:	add	r0, pc, r0
   12b10:	ldr	r3, [r3]
   12b14:	bl	11150 <fwrite@plt>
   12b18:	bl	11318 <abort@plt>
   12b1c:	andeq	r6, r1, ip, lsl #11
   12b20:			; <UNDEFINED> instruction: 0x00004eb0
   12b24:	muleq	r0, ip, lr
   12b28:	andeq	r0, r0, r8, lsr r1
   12b2c:	andeq	r0, r0, r0, lsr r1
   12b30:	andeq	r0, r0, ip, lsr #2
   12b34:	andeq	r0, r0, r4, lsl r1
   12b38:	andeq	r4, r0, ip, lsl #28
   12b3c:	push	{r3, lr}
   12b40:	mov	r3, r0
   12b44:	mov	r2, #0
   12b48:	cmp	r1, #8
   12b4c:	str	r2, [r3], #4
   12b50:	add	r3, r3, #4
   12b54:	str	r2, [r0, #4]
   12b58:	str	r2, [r3], #4
   12b5c:	str	r2, [r3], #4
   12b60:	str	r2, [r3], #4
   12b64:	str	r2, [r3], #4
   12b68:	str	r2, [r3], #4
   12b6c:	str	r2, [r3], #4
   12b70:	str	r2, [r3], #4
   12b74:	str	r2, [r3], #4
   12b78:	str	r2, [r3], #4
   12b7c:	str	r2, [r3]
   12b80:	beq	12b8c <close_stdout@@Base+0x2e8>
   12b84:	str	r1, [r0]
   12b88:	pop	{r3, pc}
   12b8c:	bl	11318 <abort@plt>
   12b90:	push	{r4, r5, r6, lr}
   12b94:	mov	r4, r0
   12b98:	mov	r6, r1
   12b9c:	mov	r0, #0
   12ba0:	mov	r1, r4
   12ba4:	mov	r2, #5
   12ba8:	bl	11114 <dcgettext@plt>
   12bac:	cmp	r0, r4
   12bb0:	mov	r5, r0
   12bb4:	beq	12bbc <close_stdout@@Base+0x318>
   12bb8:	pop	{r4, r5, r6, pc}
   12bbc:	bl	14d14 <close_stdout@@Base+0x2470>
   12bc0:	ldrb	r3, [r0]
   12bc4:	bic	r3, r3, #32
   12bc8:	cmp	r3, #85	; 0x55
   12bcc:	bne	12c40 <close_stdout@@Base+0x39c>
   12bd0:	ldrb	r3, [r0, #1]
   12bd4:	bic	r3, r3, #32
   12bd8:	cmp	r3, #84	; 0x54
   12bdc:	bne	12c2c <close_stdout@@Base+0x388>
   12be0:	ldrb	r3, [r0, #2]
   12be4:	bic	r3, r3, #32
   12be8:	cmp	r3, #70	; 0x46
   12bec:	bne	12c2c <close_stdout@@Base+0x388>
   12bf0:	ldrb	r3, [r0, #3]
   12bf4:	cmp	r3, #45	; 0x2d
   12bf8:	bne	12c2c <close_stdout@@Base+0x388>
   12bfc:	ldrb	r3, [r0, #4]
   12c00:	cmp	r3, #56	; 0x38
   12c04:	bne	12c2c <close_stdout@@Base+0x388>
   12c08:	ldrb	r3, [r0, #5]
   12c0c:	cmp	r3, #0
   12c10:	bne	12c2c <close_stdout@@Base+0x388>
   12c14:	ldrb	r3, [r5]
   12c18:	cmp	r3, #96	; 0x60
   12c1c:	beq	12cb8 <close_stdout@@Base+0x414>
   12c20:	ldr	r0, [pc, #180]	; 12cdc <close_stdout@@Base+0x438>
   12c24:	add	r0, pc, r0
   12c28:	pop	{r4, r5, r6, pc}
   12c2c:	cmp	r6, #7
   12c30:	beq	12cc4 <close_stdout@@Base+0x420>
   12c34:	ldr	r0, [pc, #164]	; 12ce0 <close_stdout@@Base+0x43c>
   12c38:	add	r0, pc, r0
   12c3c:	pop	{r4, r5, r6, pc}
   12c40:	cmp	r3, #71	; 0x47
   12c44:	bne	12c2c <close_stdout@@Base+0x388>
   12c48:	ldrb	r3, [r0, #1]
   12c4c:	bic	r3, r3, #32
   12c50:	cmp	r3, #66	; 0x42
   12c54:	bne	12c2c <close_stdout@@Base+0x388>
   12c58:	ldrb	r3, [r0, #2]
   12c5c:	cmp	r3, #49	; 0x31
   12c60:	bne	12c2c <close_stdout@@Base+0x388>
   12c64:	ldrb	r3, [r0, #3]
   12c68:	cmp	r3, #56	; 0x38
   12c6c:	bne	12c2c <close_stdout@@Base+0x388>
   12c70:	ldrb	r3, [r0, #4]
   12c74:	cmp	r3, #48	; 0x30
   12c78:	bne	12c2c <close_stdout@@Base+0x388>
   12c7c:	ldrb	r3, [r0, #5]
   12c80:	cmp	r3, #51	; 0x33
   12c84:	bne	12c2c <close_stdout@@Base+0x388>
   12c88:	ldrb	r3, [r0, #6]
   12c8c:	cmp	r3, #48	; 0x30
   12c90:	bne	12c2c <close_stdout@@Base+0x388>
   12c94:	ldrb	r3, [r0, #7]
   12c98:	cmp	r3, #0
   12c9c:	bne	12c2c <close_stdout@@Base+0x388>
   12ca0:	ldrb	r3, [r5]
   12ca4:	cmp	r3, #96	; 0x60
   12ca8:	beq	12cd0 <close_stdout@@Base+0x42c>
   12cac:	ldr	r0, [pc, #48]	; 12ce4 <close_stdout@@Base+0x440>
   12cb0:	add	r0, pc, r0
   12cb4:	pop	{r4, r5, r6, pc}
   12cb8:	ldr	r0, [pc, #40]	; 12ce8 <close_stdout@@Base+0x444>
   12cbc:	add	r0, pc, r0
   12cc0:	pop	{r4, r5, r6, pc}
   12cc4:	ldr	r0, [pc, #32]	; 12cec <close_stdout@@Base+0x448>
   12cc8:	add	r0, pc, r0
   12ccc:	pop	{r4, r5, r6, pc}
   12cd0:	ldr	r0, [pc, #24]	; 12cf0 <close_stdout@@Base+0x44c>
   12cd4:	add	r0, pc, r0
   12cd8:	pop	{r4, r5, r6, pc}
   12cdc:	andeq	r4, r0, r8, asr sp
   12ce0:	andeq	r4, r0, ip, asr #26
   12ce4:	ldrdeq	r4, [r0], -r0
   12ce8:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   12cec:	andeq	r4, r0, r0, asr #25
   12cf0:			; <UNDEFINED> instruction: 0x00004cb8
   12cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cf8:	sub	sp, sp, #124	; 0x7c
   12cfc:	ldr	ip, [pc, #3304]	; 139ec <close_stdout@@Base+0x1148>
   12d00:	mov	sl, r1
   12d04:	str	r0, [sp, #40]	; 0x28
   12d08:	mov	r8, r3
   12d0c:	ldr	r0, [pc, #3292]	; 139f0 <close_stdout@@Base+0x114c>
   12d10:	add	ip, pc, ip
   12d14:	str	r2, [sp, #32]
   12d18:	ldr	r1, [sp, #164]	; 0xa4
   12d1c:	mov	r3, ip
   12d20:	ldr	r0, [ip, r0]
   12d24:	ldr	r2, [sp, #172]	; 0xac
   12d28:	ubfx	r1, r1, #1, #1
   12d2c:	str	r1, [sp, #36]	; 0x24
   12d30:	str	r0, [sp, #56]	; 0x38
   12d34:	ldr	r0, [sp, #168]	; 0xa8
   12d38:	ldr	r1, [sp, #176]	; 0xb0
   12d3c:	str	r2, [sp, #72]	; 0x48
   12d40:	str	r0, [sp, #48]	; 0x30
   12d44:	ldr	r0, [sp, #56]	; 0x38
   12d48:	str	r1, [sp, #68]	; 0x44
   12d4c:	ldr	r3, [r0]
   12d50:	str	r3, [sp, #116]	; 0x74
   12d54:	bl	11168 <__ctype_get_mb_cur_max@plt>
   12d58:	ldr	r2, [sp, #160]	; 0xa0
   12d5c:	str	r0, [sp, #64]	; 0x40
   12d60:	cmp	r2, #8
   12d64:	addls	pc, pc, r2, lsl #2
   12d68:	b	138c8 <close_stdout@@Base+0x1024>
   12d6c:	b	12d90 <close_stdout@@Base+0x4ec>
   12d70:	b	135e0 <close_stdout@@Base+0xd3c>
   12d74:	b	13610 <close_stdout@@Base+0xd6c>
   12d78:	b	134c0 <close_stdout@@Base+0xc1c>
   12d7c:	b	13500 <close_stdout@@Base+0xc5c>
   12d80:	b	1352c <close_stdout@@Base+0xc88>
   12d84:	b	1354c <close_stdout@@Base+0xca8>
   12d88:	b	1354c <close_stdout@@Base+0xca8>
   12d8c:	b	1354c <close_stdout@@Base+0xca8>
   12d90:	mov	r2, #0
   12d94:	str	r2, [sp, #36]	; 0x24
   12d98:	mov	r9, r2
   12d9c:	str	r2, [sp, #24]
   12da0:	str	r2, [sp, #28]
   12da4:	str	r2, [sp, #52]	; 0x34
   12da8:	ldr	r0, [sp, #36]	; 0x24
   12dac:	mov	fp, #0
   12db0:	ldr	r1, [sp, #24]
   12db4:	eor	r2, r0, #1
   12db8:	eor	r3, r1, #1
   12dbc:	and	r3, r2, r3
   12dc0:	and	r2, r1, r0
   12dc4:	str	r3, [sp, #44]	; 0x2c
   12dc8:	str	r2, [sp, #76]	; 0x4c
   12dcc:	cmn	r8, #1
   12dd0:	beq	13150 <close_stdout@@Base+0x8ac>
   12dd4:	subs	r3, fp, r8
   12dd8:	movne	r3, #1
   12ddc:	cmp	r3, #0
   12de0:	beq	13168 <close_stdout@@Base+0x8c4>
   12de4:	ldr	r3, [sp, #28]
   12de8:	ldr	r0, [sp, #24]
   12dec:	adds	r7, r3, #0
   12df0:	movne	r7, #1
   12df4:	ands	r6, r7, r0
   12df8:	bne	13654 <close_stdout@@Base+0xdb0>
   12dfc:	ldr	r1, [sp, #32]
   12e00:	add	r5, r1, fp
   12e04:	ldrb	r4, [r5]
   12e08:	cmp	r4, #126	; 0x7e
   12e0c:	addls	pc, pc, r4, lsl #2
   12e10:	b	133d4 <close_stdout@@Base+0xb30>
   12e14:	b	132e0 <close_stdout@@Base+0xa3c>
   12e18:	b	133d4 <close_stdout@@Base+0xb30>
   12e1c:	b	133d4 <close_stdout@@Base+0xb30>
   12e20:	b	133d4 <close_stdout@@Base+0xb30>
   12e24:	b	133d4 <close_stdout@@Base+0xb30>
   12e28:	b	133d4 <close_stdout@@Base+0xb30>
   12e2c:	b	133d4 <close_stdout@@Base+0xb30>
   12e30:	b	132c8 <close_stdout@@Base+0xa24>
   12e34:	b	132b0 <close_stdout@@Base+0xa0c>
   12e38:	b	132d8 <close_stdout@@Base+0xa34>
   12e3c:	b	132d0 <close_stdout@@Base+0xa2c>
   12e40:	b	132c0 <close_stdout@@Base+0xa1c>
   12e44:	b	132b8 <close_stdout@@Base+0xa14>
   12e48:	b	1327c <close_stdout@@Base+0x9d8>
   12e4c:	b	133d4 <close_stdout@@Base+0xb30>
   12e50:	b	133d4 <close_stdout@@Base+0xb30>
   12e54:	b	133d4 <close_stdout@@Base+0xb30>
   12e58:	b	133d4 <close_stdout@@Base+0xb30>
   12e5c:	b	133d4 <close_stdout@@Base+0xb30>
   12e60:	b	133d4 <close_stdout@@Base+0xb30>
   12e64:	b	133d4 <close_stdout@@Base+0xb30>
   12e68:	b	133d4 <close_stdout@@Base+0xb30>
   12e6c:	b	133d4 <close_stdout@@Base+0xb30>
   12e70:	b	133d4 <close_stdout@@Base+0xb30>
   12e74:	b	133d4 <close_stdout@@Base+0xb30>
   12e78:	b	133d4 <close_stdout@@Base+0xb30>
   12e7c:	b	133d4 <close_stdout@@Base+0xb30>
   12e80:	b	133d4 <close_stdout@@Base+0xb30>
   12e84:	b	133d4 <close_stdout@@Base+0xb30>
   12e88:	b	133d4 <close_stdout@@Base+0xb30>
   12e8c:	b	133d4 <close_stdout@@Base+0xb30>
   12e90:	b	133d4 <close_stdout@@Base+0xb30>
   12e94:	b	13208 <close_stdout@@Base+0x964>
   12e98:	b	13208 <close_stdout@@Base+0x964>
   12e9c:	b	13208 <close_stdout@@Base+0x964>
   12ea0:	b	13200 <close_stdout@@Base+0x95c>
   12ea4:	b	13208 <close_stdout@@Base+0x964>
   12ea8:	b	130dc <close_stdout@@Base+0x838>
   12eac:	b	13208 <close_stdout@@Base+0x964>
   12eb0:	b	1337c <close_stdout@@Base+0xad8>
   12eb4:	b	13208 <close_stdout@@Base+0x964>
   12eb8:	b	13208 <close_stdout@@Base+0x964>
   12ebc:	b	13208 <close_stdout@@Base+0x964>
   12ec0:	b	130dc <close_stdout@@Base+0x838>
   12ec4:	b	130dc <close_stdout@@Base+0x838>
   12ec8:	b	130dc <close_stdout@@Base+0x838>
   12ecc:	b	130dc <close_stdout@@Base+0x838>
   12ed0:	b	130dc <close_stdout@@Base+0x838>
   12ed4:	b	130dc <close_stdout@@Base+0x838>
   12ed8:	b	130dc <close_stdout@@Base+0x838>
   12edc:	b	130dc <close_stdout@@Base+0x838>
   12ee0:	b	130dc <close_stdout@@Base+0x838>
   12ee4:	b	130dc <close_stdout@@Base+0x838>
   12ee8:	b	130dc <close_stdout@@Base+0x838>
   12eec:	b	130dc <close_stdout@@Base+0x838>
   12ef0:	b	130dc <close_stdout@@Base+0x838>
   12ef4:	b	130dc <close_stdout@@Base+0x838>
   12ef8:	b	130dc <close_stdout@@Base+0x838>
   12efc:	b	130dc <close_stdout@@Base+0x838>
   12f00:	b	13208 <close_stdout@@Base+0x964>
   12f04:	b	13208 <close_stdout@@Base+0x964>
   12f08:	b	13208 <close_stdout@@Base+0x964>
   12f0c:	b	13208 <close_stdout@@Base+0x964>
   12f10:	b	13010 <close_stdout@@Base+0x76c>
   12f14:	b	133d4 <close_stdout@@Base+0xb30>
   12f18:	b	130dc <close_stdout@@Base+0x838>
   12f1c:	b	130dc <close_stdout@@Base+0x838>
   12f20:	b	130dc <close_stdout@@Base+0x838>
   12f24:	b	130dc <close_stdout@@Base+0x838>
   12f28:	b	130dc <close_stdout@@Base+0x838>
   12f2c:	b	130dc <close_stdout@@Base+0x838>
   12f30:	b	130dc <close_stdout@@Base+0x838>
   12f34:	b	130dc <close_stdout@@Base+0x838>
   12f38:	b	130dc <close_stdout@@Base+0x838>
   12f3c:	b	130dc <close_stdout@@Base+0x838>
   12f40:	b	130dc <close_stdout@@Base+0x838>
   12f44:	b	130dc <close_stdout@@Base+0x838>
   12f48:	b	130dc <close_stdout@@Base+0x838>
   12f4c:	b	130dc <close_stdout@@Base+0x838>
   12f50:	b	130dc <close_stdout@@Base+0x838>
   12f54:	b	130dc <close_stdout@@Base+0x838>
   12f58:	b	130dc <close_stdout@@Base+0x838>
   12f5c:	b	130dc <close_stdout@@Base+0x838>
   12f60:	b	130dc <close_stdout@@Base+0x838>
   12f64:	b	130dc <close_stdout@@Base+0x838>
   12f68:	b	130dc <close_stdout@@Base+0x838>
   12f6c:	b	130dc <close_stdout@@Base+0x838>
   12f70:	b	130dc <close_stdout@@Base+0x838>
   12f74:	b	130dc <close_stdout@@Base+0x838>
   12f78:	b	130dc <close_stdout@@Base+0x838>
   12f7c:	b	130dc <close_stdout@@Base+0x838>
   12f80:	b	13208 <close_stdout@@Base+0x964>
   12f84:	b	13360 <close_stdout@@Base+0xabc>
   12f88:	b	130dc <close_stdout@@Base+0x838>
   12f8c:	b	13208 <close_stdout@@Base+0x964>
   12f90:	b	130dc <close_stdout@@Base+0x838>
   12f94:	b	13208 <close_stdout@@Base+0x964>
   12f98:	b	130dc <close_stdout@@Base+0x838>
   12f9c:	b	130dc <close_stdout@@Base+0x838>
   12fa0:	b	130dc <close_stdout@@Base+0x838>
   12fa4:	b	130dc <close_stdout@@Base+0x838>
   12fa8:	b	130dc <close_stdout@@Base+0x838>
   12fac:	b	130dc <close_stdout@@Base+0x838>
   12fb0:	b	130dc <close_stdout@@Base+0x838>
   12fb4:	b	130dc <close_stdout@@Base+0x838>
   12fb8:	b	130dc <close_stdout@@Base+0x838>
   12fbc:	b	130dc <close_stdout@@Base+0x838>
   12fc0:	b	130dc <close_stdout@@Base+0x838>
   12fc4:	b	130dc <close_stdout@@Base+0x838>
   12fc8:	b	130dc <close_stdout@@Base+0x838>
   12fcc:	b	130dc <close_stdout@@Base+0x838>
   12fd0:	b	130dc <close_stdout@@Base+0x838>
   12fd4:	b	130dc <close_stdout@@Base+0x838>
   12fd8:	b	130dc <close_stdout@@Base+0x838>
   12fdc:	b	130dc <close_stdout@@Base+0x838>
   12fe0:	b	130dc <close_stdout@@Base+0x838>
   12fe4:	b	130dc <close_stdout@@Base+0x838>
   12fe8:	b	130dc <close_stdout@@Base+0x838>
   12fec:	b	130dc <close_stdout@@Base+0x838>
   12ff0:	b	130dc <close_stdout@@Base+0x838>
   12ff4:	b	130dc <close_stdout@@Base+0x838>
   12ff8:	b	130dc <close_stdout@@Base+0x838>
   12ffc:	b	130dc <close_stdout@@Base+0x838>
   13000:	b	131e8 <close_stdout@@Base+0x944>
   13004:	b	13208 <close_stdout@@Base+0x964>
   13008:	b	131e8 <close_stdout@@Base+0x944>
   1300c:	b	13200 <close_stdout@@Base+0x95c>
   13010:	ldr	r3, [sp, #160]	; 0xa0
   13014:	cmp	r3, #2
   13018:	beq	138a4 <close_stdout@@Base+0x1000>
   1301c:	cmp	r3, #3
   13020:	bne	130dc <close_stdout@@Base+0x838>
   13024:	ldr	r1, [sp, #164]	; 0xa4
   13028:	tst	r1, #4
   1302c:	beq	130dc <close_stdout@@Base+0x838>
   13030:	add	r3, fp, #2
   13034:	cmp	r8, r3
   13038:	bls	130dc <close_stdout@@Base+0x838>
   1303c:	ldrb	r2, [r5, #1]
   13040:	mov	r1, #1
   13044:	cmp	r2, #63	; 0x3f
   13048:	bne	130dc <close_stdout@@Base+0x838>
   1304c:	ldr	r0, [sp, #32]
   13050:	ldrb	ip, [r0, r3]
   13054:	sub	r0, ip, #33	; 0x21
   13058:	uxtb	r0, r0
   1305c:	cmp	r0, #29
   13060:	bhi	130dc <close_stdout@@Base+0x838>
   13064:	lsl	r1, r1, r0
   13068:	movw	r0, #20929	; 0x51c1
   1306c:	movt	r0, #14336	; 0x3800
   13070:	and	r0, r1, r0
   13074:	cmp	r0, #0
   13078:	beq	130dc <close_stdout@@Base+0x838>
   1307c:	ldr	r1, [sp, #36]	; 0x24
   13080:	cmp	r1, #0
   13084:	bne	13224 <close_stdout@@Base+0x980>
   13088:	cmp	r9, sl
   1308c:	mov	r4, ip
   13090:	mov	fp, r3
   13094:	ldrcc	r0, [sp, #40]	; 0x28
   13098:	strbcc	r2, [r0, r9]
   1309c:	add	r2, r9, #1
   130a0:	cmp	sl, r2
   130a4:	ldrhi	r0, [sp, #40]	; 0x28
   130a8:	movhi	r1, #34	; 0x22
   130ac:	strbhi	r1, [r0, r2]
   130b0:	add	r2, r9, #2
   130b4:	cmp	sl, r2
   130b8:	ldrhi	r0, [sp, #40]	; 0x28
   130bc:	movhi	r1, #34	; 0x22
   130c0:	strbhi	r1, [r0, r2]
   130c4:	add	r2, r9, #3
   130c8:	cmp	sl, r2
   130cc:	add	r9, r9, #4
   130d0:	ldrhi	r0, [sp, #40]	; 0x28
   130d4:	movhi	r1, #63	; 0x3f
   130d8:	strbhi	r1, [r0, r2]
   130dc:	ldr	r0, [sp, #44]	; 0x2c
   130e0:	cmp	r0, #0
   130e4:	bne	1310c <close_stdout@@Base+0x868>
   130e8:	ldr	r1, [sp, #48]	; 0x30
   130ec:	cmp	r1, #0
   130f0:	beq	1310c <close_stdout@@Base+0x868>
   130f4:	ubfx	r2, r4, #5, #8
   130f8:	and	r3, r4, #31
   130fc:	ldr	r2, [r1, r2, lsl #2]
   13100:	lsr	r3, r2, r3
   13104:	tst	r3, #1
   13108:	bne	13114 <close_stdout@@Base+0x870>
   1310c:	cmp	r6, #0
   13110:	beq	13134 <close_stdout@@Base+0x890>
   13114:	ldr	r2, [sp, #36]	; 0x24
   13118:	cmp	r2, #0
   1311c:	bne	13224 <close_stdout@@Base+0x980>
   13120:	cmp	r9, sl
   13124:	ldrcc	r0, [sp, #40]	; 0x28
   13128:	movcc	r3, #92	; 0x5c
   1312c:	strbcc	r3, [r0, r9]
   13130:	add	r9, r9, #1
   13134:	add	fp, fp, #1
   13138:	cmp	r9, sl
   1313c:	ldrcc	r1, [sp, #40]	; 0x28
   13140:	strbcc	r4, [r1, r9]
   13144:	cmn	r8, #1
   13148:	add	r9, r9, #1
   1314c:	bne	12dd4 <close_stdout@@Base+0x530>
   13150:	ldr	r2, [sp, #32]
   13154:	ldrb	r3, [r2, fp]
   13158:	adds	r3, r3, #0
   1315c:	movne	r3, #1
   13160:	cmp	r3, #0
   13164:	bne	12de4 <close_stdout@@Base+0x540>
   13168:	ldr	r3, [sp, #160]	; 0xa0
   1316c:	cmp	r9, #0
   13170:	cmpeq	r3, #2
   13174:	bne	13184 <close_stdout@@Base+0x8e0>
   13178:	ldr	r0, [sp, #36]	; 0x24
   1317c:	cmp	r0, #0
   13180:	bne	13224 <close_stdout@@Base+0x980>
   13184:	ldr	r1, [sp, #36]	; 0x24
   13188:	ldr	r2, [sp, #52]	; 0x34
   1318c:	eor	r3, r1, #1
   13190:	cmp	r2, #0
   13194:	moveq	r3, #0
   13198:	andne	r3, r3, #1
   1319c:	cmp	r3, #0
   131a0:	beq	131cc <close_stdout@@Base+0x928>
   131a4:	ldrb	r3, [r2]
   131a8:	cmp	r3, #0
   131ac:	beq	131cc <close_stdout@@Base+0x928>
   131b0:	ldr	r1, [sp, #40]	; 0x28
   131b4:	cmp	sl, r9
   131b8:	strbhi	r3, [r1, r9]
   131bc:	ldrb	r3, [r2, #1]!
   131c0:	add	r9, r9, #1
   131c4:	cmp	r3, #0
   131c8:	bne	131b4 <close_stdout@@Base+0x910>
   131cc:	cmp	r9, sl
   131d0:	movcs	r0, r9
   131d4:	ldrcc	r1, [sp, #40]	; 0x28
   131d8:	movcc	r3, #0
   131dc:	movcc	r0, r9
   131e0:	strbcc	r3, [r1, r9]
   131e4:	b	13260 <close_stdout@@Base+0x9bc>
   131e8:	cmn	r8, #1
   131ec:	beq	138b4 <close_stdout@@Base+0x1010>
   131f0:	subs	r3, r8, #1
   131f4:	movne	r3, #1
   131f8:	cmp	r3, #0
   131fc:	bne	130dc <close_stdout@@Base+0x838>
   13200:	cmp	fp, #0
   13204:	bne	130dc <close_stdout@@Base+0x838>
   13208:	ldr	r3, [sp, #36]	; 0x24
   1320c:	ldr	r0, [sp, #160]	; 0xa0
   13210:	cmp	r0, #2
   13214:	movne	r3, #0
   13218:	andeq	r3, r3, #1
   1321c:	cmp	r3, #0
   13220:	beq	130dc <close_stdout@@Base+0x838>
   13224:	ldr	r2, [sp, #164]	; 0xa4
   13228:	mov	ip, #0
   1322c:	ldr	r0, [sp, #160]	; 0xa0
   13230:	bic	r3, r2, #2
   13234:	ldr	r1, [sp, #72]	; 0x48
   13238:	ldr	r2, [sp, #68]	; 0x44
   1323c:	stm	sp, {r0, r3}
   13240:	mov	r3, r8
   13244:	str	r1, [sp, #12]
   13248:	mov	r1, sl
   1324c:	str	r2, [sp, #16]
   13250:	ldr	r0, [sp, #40]	; 0x28
   13254:	ldr	r2, [sp, #32]
   13258:	str	ip, [sp, #8]
   1325c:	bl	12cf4 <close_stdout@@Base+0x450>
   13260:	ldr	r1, [sp, #56]	; 0x38
   13264:	ldr	r2, [sp, #116]	; 0x74
   13268:	ldr	r3, [r1]
   1326c:	cmp	r2, r3
   13270:	bne	139a4 <close_stdout@@Base+0x1100>
   13274:	add	sp, sp, #124	; 0x7c
   13278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1327c:	mov	r3, #114	; 0x72
   13280:	ldr	r2, [sp, #36]	; 0x24
   13284:	ldr	r0, [sp, #160]	; 0xa0
   13288:	cmp	r0, #2
   1328c:	movne	r2, #0
   13290:	andeq	r2, r2, #1
   13294:	cmp	r2, #0
   13298:	bne	13224 <close_stdout@@Base+0x980>
   1329c:	ldr	r1, [sp, #24]
   132a0:	cmp	r1, #0
   132a4:	beq	130dc <close_stdout@@Base+0x838>
   132a8:	mov	r4, r3
   132ac:	b	13114 <close_stdout@@Base+0x870>
   132b0:	mov	r3, #98	; 0x62
   132b4:	b	1329c <close_stdout@@Base+0x9f8>
   132b8:	mov	r3, #102	; 0x66
   132bc:	b	1329c <close_stdout@@Base+0x9f8>
   132c0:	mov	r3, #118	; 0x76
   132c4:	b	1329c <close_stdout@@Base+0x9f8>
   132c8:	mov	r3, #97	; 0x61
   132cc:	b	1329c <close_stdout@@Base+0x9f8>
   132d0:	mov	r3, #110	; 0x6e
   132d4:	b	13280 <close_stdout@@Base+0x9dc>
   132d8:	mov	r3, #116	; 0x74
   132dc:	b	13280 <close_stdout@@Base+0x9dc>
   132e0:	ldr	r2, [sp, #24]
   132e4:	cmp	r2, #0
   132e8:	beq	13890 <close_stdout@@Base+0xfec>
   132ec:	ldr	r3, [sp, #36]	; 0x24
   132f0:	cmp	r3, #0
   132f4:	bne	13224 <close_stdout@@Base+0x980>
   132f8:	cmp	r9, sl
   132fc:	add	r2, r9, #1
   13300:	ldrcc	r0, [sp, #40]	; 0x28
   13304:	movcc	r3, #92	; 0x5c
   13308:	strbcc	r3, [r0, r9]
   1330c:	add	r3, fp, #1
   13310:	cmp	r8, r3
   13314:	bls	13354 <close_stdout@@Base+0xab0>
   13318:	ldr	r1, [sp, #32]
   1331c:	ldrb	r3, [r1, r3]
   13320:	sub	r3, r3, #48	; 0x30
   13324:	cmp	r3, #9
   13328:	bhi	13354 <close_stdout@@Base+0xab0>
   1332c:	cmp	sl, r2
   13330:	ldrhi	r0, [sp, #40]	; 0x28
   13334:	movhi	r3, #48	; 0x30
   13338:	strbhi	r3, [r0, r2]
   1333c:	add	r3, r9, #2
   13340:	cmp	sl, r3
   13344:	ldrhi	r1, [sp, #40]	; 0x28
   13348:	movhi	r2, #48	; 0x30
   1334c:	strbhi	r2, [r1, r3]
   13350:	add	r2, r9, #3
   13354:	mov	r9, r2
   13358:	mov	r4, #48	; 0x30
   1335c:	b	130e8 <close_stdout@@Base+0x844>
   13360:	ldr	r1, [sp, #76]	; 0x4c
   13364:	cmp	r1, #0
   13368:	beq	13374 <close_stdout@@Base+0xad0>
   1336c:	cmp	r7, #0
   13370:	bne	13134 <close_stdout@@Base+0x890>
   13374:	mov	r3, r4
   13378:	b	13280 <close_stdout@@Base+0x9dc>
   1337c:	ldr	r1, [sp, #160]	; 0xa0
   13380:	cmp	r1, #2
   13384:	bne	130dc <close_stdout@@Base+0x838>
   13388:	ldr	r2, [sp, #36]	; 0x24
   1338c:	cmp	r2, #0
   13390:	bne	13224 <close_stdout@@Base+0x980>
   13394:	cmp	r9, sl
   13398:	ldrcc	r0, [sp, #40]	; 0x28
   1339c:	movcc	r3, #39	; 0x27
   133a0:	strbcc	r3, [r0, r9]
   133a4:	add	r3, r9, #1
   133a8:	cmp	sl, r3
   133ac:	ldrhi	r1, [sp, #40]	; 0x28
   133b0:	movhi	r2, #92	; 0x5c
   133b4:	strbhi	r2, [r1, r3]
   133b8:	add	r3, r9, #2
   133bc:	cmp	sl, r3
   133c0:	add	r9, r9, #3
   133c4:	ldrhi	r0, [sp, #40]	; 0x28
   133c8:	movhi	r2, #39	; 0x27
   133cc:	strbhi	r2, [r0, r3]
   133d0:	b	130dc <close_stdout@@Base+0x838>
   133d4:	ldr	r1, [sp, #64]	; 0x40
   133d8:	cmp	r1, #1
   133dc:	bne	136d4 <close_stdout@@Base+0xe30>
   133e0:	bl	11210 <__ctype_b_loc@plt>
   133e4:	ldr	r2, [sp, #64]	; 0x40
   133e8:	sxth	r3, r4
   133ec:	str	r2, [sp, #60]	; 0x3c
   133f0:	lsl	r3, r3, #1
   133f4:	ldr	r2, [r0]
   133f8:	ldrh	r2, [r2, r3]
   133fc:	eor	r2, r2, #16384	; 0x4000
   13400:	ubfx	r2, r2, #14, #1
   13404:	ldr	r1, [sp, #24]
   13408:	ands	r2, r2, r1
   1340c:	beq	130dc <close_stdout@@Base+0x838>
   13410:	ldr	r3, [sp, #60]	; 0x3c
   13414:	mov	r0, #92	; 0x5c
   13418:	ldr	r7, [sp, #36]	; 0x24
   1341c:	add	r1, r3, fp
   13420:	str	r8, [sp, #60]	; 0x3c
   13424:	ldr	r3, [sp, #40]	; 0x28
   13428:	b	1348c <close_stdout@@Base+0xbe8>
   1342c:	cmp	r7, #0
   13430:	bne	138cc <close_stdout@@Base+0x1028>
   13434:	add	ip, r9, #1
   13438:	cmp	r9, sl
   1343c:	strbcc	r0, [r3, r9]
   13440:	cmp	sl, ip
   13444:	lsrhi	r8, r4, #6
   13448:	addhi	r8, r8, #48	; 0x30
   1344c:	strbhi	r8, [r3, ip]
   13450:	add	ip, r9, #2
   13454:	add	r9, r9, #3
   13458:	cmp	sl, ip
   1345c:	ubfxhi	r8, r4, #3, #3
   13460:	and	r4, r4, #7
   13464:	add	r4, r4, #48	; 0x30
   13468:	addhi	r8, r8, #48	; 0x30
   1346c:	strbhi	r8, [r3, ip]
   13470:	add	fp, fp, #1
   13474:	cmp	r1, fp
   13478:	bls	134b8 <close_stdout@@Base+0xc14>
   1347c:	cmp	r9, sl
   13480:	strbcc	r4, [r3, r9]
   13484:	ldrb	r4, [r5, #1]!
   13488:	add	r9, r9, #1
   1348c:	cmp	r2, #0
   13490:	bne	1342c <close_stdout@@Base+0xb88>
   13494:	cmp	r6, #0
   13498:	beq	13470 <close_stdout@@Base+0xbcc>
   1349c:	add	fp, fp, #1
   134a0:	cmp	r9, sl
   134a4:	strbcc	r0, [r3, r9]
   134a8:	cmp	r1, fp
   134ac:	add	r9, r9, #1
   134b0:	mov	r6, #0
   134b4:	bhi	1347c <close_stdout@@Base+0xbd8>
   134b8:	ldr	r8, [sp, #60]	; 0x3c
   134bc:	b	13138 <close_stdout@@Base+0x894>
   134c0:	ldr	r3, [sp, #36]	; 0x24
   134c4:	cmp	r3, #0
   134c8:	bne	139cc <close_stdout@@Base+0x1128>
   134cc:	cmp	sl, #0
   134d0:	beq	138e4 <close_stdout@@Base+0x1040>
   134d4:	ldr	r1, [sp, #40]	; 0x28
   134d8:	mov	r0, #1
   134dc:	ldr	r2, [pc, #1296]	; 139f4 <close_stdout@@Base+0x1150>
   134e0:	mov	r3, #34	; 0x22
   134e4:	str	r0, [sp, #24]
   134e8:	mov	r9, r0
   134ec:	add	r2, pc, r2
   134f0:	str	r0, [sp, #28]
   134f4:	strb	r3, [r1]
   134f8:	str	r2, [sp, #52]	; 0x34
   134fc:	b	12da8 <close_stdout@@Base+0x504>
   13500:	ldr	r3, [pc, #1264]	; 139f8 <close_stdout@@Base+0x1154>
   13504:	mov	r2, #1
   13508:	mov	r0, #3
   1350c:	str	r2, [sp, #36]	; 0x24
   13510:	add	r3, pc, r3
   13514:	str	r2, [sp, #24]
   13518:	str	r3, [sp, #52]	; 0x34
   1351c:	mov	r9, #0
   13520:	str	r2, [sp, #28]
   13524:	str	r0, [sp, #160]	; 0xa0
   13528:	b	12da8 <close_stdout@@Base+0x504>
   1352c:	mov	r0, #0
   13530:	mov	r1, #1
   13534:	str	r0, [sp, #36]	; 0x24
   13538:	mov	r9, r0
   1353c:	str	r1, [sp, #24]
   13540:	str	r0, [sp, #28]
   13544:	str	r0, [sp, #52]	; 0x34
   13548:	b	12da8 <close_stdout@@Base+0x504>
   1354c:	ldr	r3, [sp, #160]	; 0xa0
   13550:	cmp	r3, #8
   13554:	beq	13580 <close_stdout@@Base+0xcdc>
   13558:	ldr	r0, [pc, #1180]	; 139fc <close_stdout@@Base+0x1158>
   1355c:	mov	r1, r3
   13560:	add	r0, pc, r0
   13564:	bl	12b90 <close_stdout@@Base+0x2ec>
   13568:	ldr	r1, [sp, #160]	; 0xa0
   1356c:	str	r0, [sp, #72]	; 0x48
   13570:	ldr	r0, [pc, #1160]	; 13a00 <close_stdout@@Base+0x115c>
   13574:	add	r0, pc, r0
   13578:	bl	12b90 <close_stdout@@Base+0x2ec>
   1357c:	str	r0, [sp, #68]	; 0x44
   13580:	ldr	r0, [sp, #36]	; 0x24
   13584:	cmp	r0, #0
   13588:	movne	r9, #0
   1358c:	bne	135c4 <close_stdout@@Base+0xd20>
   13590:	ldr	r1, [sp, #72]	; 0x48
   13594:	ldrb	r3, [r1]
   13598:	cmp	r3, #0
   1359c:	beq	1399c <close_stdout@@Base+0x10f8>
   135a0:	mov	r2, r1
   135a4:	ldr	r1, [sp, #40]	; 0x28
   135a8:	mov	r9, r0
   135ac:	cmp	r9, sl
   135b0:	strbcc	r3, [r1, r9]
   135b4:	ldrb	r3, [r2, #1]!
   135b8:	add	r9, r9, #1
   135bc:	cmp	r3, #0
   135c0:	bne	135ac <close_stdout@@Base+0xd08>
   135c4:	ldr	r0, [sp, #68]	; 0x44
   135c8:	str	r0, [sp, #52]	; 0x34
   135cc:	bl	11228 <strlen@plt>
   135d0:	mov	r2, #1
   135d4:	str	r2, [sp, #24]
   135d8:	str	r0, [sp, #28]
   135dc:	b	12da8 <close_stdout@@Base+0x504>
   135e0:	ldr	r3, [pc, #1052]	; 13a04 <close_stdout@@Base+0x1160>
   135e4:	mov	r2, #0
   135e8:	mov	r1, #1
   135ec:	mov	r0, #2
   135f0:	add	r3, pc, r3
   135f4:	str	r1, [sp, #36]	; 0x24
   135f8:	str	r2, [sp, #24]
   135fc:	mov	r9, r2
   13600:	str	r1, [sp, #28]
   13604:	str	r3, [sp, #52]	; 0x34
   13608:	str	r0, [sp, #160]	; 0xa0
   1360c:	b	12da8 <close_stdout@@Base+0x504>
   13610:	ldr	r3, [sp, #36]	; 0x24
   13614:	cmp	r3, #0
   13618:	bne	139a8 <close_stdout@@Base+0x1104>
   1361c:	cmp	sl, #0
   13620:	beq	13904 <close_stdout@@Base+0x1060>
   13624:	ldr	r1, [sp, #40]	; 0x28
   13628:	mov	r3, #39	; 0x27
   1362c:	ldr	r2, [sp, #36]	; 0x24
   13630:	mov	r0, #1
   13634:	mov	r9, r0
   13638:	str	r0, [sp, #28]
   1363c:	strb	r3, [r1]
   13640:	ldr	r3, [pc, #960]	; 13a08 <close_stdout@@Base+0x1164>
   13644:	str	r2, [sp, #24]
   13648:	add	r3, pc, r3
   1364c:	str	r3, [sp, #52]	; 0x34
   13650:	b	12da8 <close_stdout@@Base+0x504>
   13654:	ldr	r2, [sp, #28]
   13658:	cmp	r2, #1
   1365c:	add	r4, fp, r2
   13660:	movls	r3, #0
   13664:	movhi	r3, #1
   13668:	cmn	r8, #1
   1366c:	movne	r3, #0
   13670:	cmp	r3, #0
   13674:	beq	13684 <close_stdout@@Base+0xde0>
   13678:	ldr	r0, [sp, #32]
   1367c:	bl	11228 <strlen@plt>
   13680:	mov	r8, r0
   13684:	cmp	r8, r4
   13688:	ldrcc	r3, [sp, #32]
   1368c:	movcc	r6, #0
   13690:	addcc	r5, r3, fp
   13694:	bcc	12e04 <close_stdout@@Base+0x560>
   13698:	ldr	r0, [sp, #32]
   1369c:	ldr	r1, [sp, #52]	; 0x34
   136a0:	add	r5, r0, fp
   136a4:	ldr	r2, [sp, #28]
   136a8:	mov	r0, r5
   136ac:	bl	110fc <memcmp@plt>
   136b0:	cmp	r0, #0
   136b4:	bne	136cc <close_stdout@@Base+0xe28>
   136b8:	ldr	r1, [sp, #36]	; 0x24
   136bc:	cmp	r1, #0
   136c0:	bne	13224 <close_stdout@@Base+0x980>
   136c4:	mov	r6, #1
   136c8:	b	12e04 <close_stdout@@Base+0x560>
   136cc:	mov	r6, #0
   136d0:	b	12e04 <close_stdout@@Base+0x560>
   136d4:	add	r7, sp, #108	; 0x6c
   136d8:	cmn	r8, #1
   136dc:	mov	r3, #0
   136e0:	str	r3, [sp, #108]	; 0x6c
   136e4:	str	r3, [r7, #4]
   136e8:	beq	138d4 <close_stdout@@Base+0x1030>
   136ec:	mov	r1, #0
   136f0:	ldr	r0, [sp, #32]
   136f4:	mov	ip, #1
   136f8:	str	r9, [sp, #88]	; 0x58
   136fc:	str	r6, [sp, #96]	; 0x60
   13700:	mov	r9, r1
   13704:	str	r5, [sp, #100]	; 0x64
   13708:	mov	r6, ip
   1370c:	mov	r5, r7
   13710:	add	r3, sp, #104	; 0x68
   13714:	sub	r0, r0, #1
   13718:	str	r3, [sp, #80]	; 0x50
   1371c:	str	r0, [sp, #84]	; 0x54
   13720:	str	r1, [sp, #60]	; 0x3c
   13724:	str	r4, [sp, #92]	; 0x5c
   13728:	ldr	r2, [sp, #32]
   1372c:	add	r7, r9, fp
   13730:	add	r0, sp, #104	; 0x68
   13734:	mov	r3, r5
   13738:	add	r4, r2, r7
   1373c:	rsb	r2, r7, r8
   13740:	mov	r1, r4
   13744:	bl	1118c <mbrtowc@plt>
   13748:	subs	r2, r0, #0
   1374c:	beq	13858 <close_stdout@@Base+0xfb4>
   13750:	cmn	r2, #1
   13754:	beq	13980 <close_stdout@@Base+0x10dc>
   13758:	cmn	r2, #2
   1375c:	beq	13924 <close_stdout@@Base+0x1080>
   13760:	ldr	r3, [sp, #36]	; 0x24
   13764:	ldr	r0, [sp, #160]	; 0xa0
   13768:	cmp	r0, #2
   1376c:	movne	r3, #0
   13770:	andeq	r3, r3, #1
   13774:	cmp	r3, #0
   13778:	beq	13834 <close_stdout@@Base+0xf90>
   1377c:	cmp	r2, #1
   13780:	beq	13834 <close_stdout@@Base+0xf90>
   13784:	ldr	r1, [sp, #84]	; 0x54
   13788:	add	r3, r1, r2
   1378c:	add	r7, r3, r7
   13790:	ldrb	r3, [r4, #1]!
   13794:	sub	r3, r3, #91	; 0x5b
   13798:	cmp	r3, #33	; 0x21
   1379c:	addls	pc, pc, r3, lsl #2
   137a0:	b	1382c <close_stdout@@Base+0xf88>
   137a4:	b	13224 <close_stdout@@Base+0x980>
   137a8:	b	13224 <close_stdout@@Base+0x980>
   137ac:	b	1382c <close_stdout@@Base+0xf88>
   137b0:	b	13224 <close_stdout@@Base+0x980>
   137b4:	b	1382c <close_stdout@@Base+0xf88>
   137b8:	b	13224 <close_stdout@@Base+0x980>
   137bc:	b	1382c <close_stdout@@Base+0xf88>
   137c0:	b	1382c <close_stdout@@Base+0xf88>
   137c4:	b	1382c <close_stdout@@Base+0xf88>
   137c8:	b	1382c <close_stdout@@Base+0xf88>
   137cc:	b	1382c <close_stdout@@Base+0xf88>
   137d0:	b	1382c <close_stdout@@Base+0xf88>
   137d4:	b	1382c <close_stdout@@Base+0xf88>
   137d8:	b	1382c <close_stdout@@Base+0xf88>
   137dc:	b	1382c <close_stdout@@Base+0xf88>
   137e0:	b	1382c <close_stdout@@Base+0xf88>
   137e4:	b	1382c <close_stdout@@Base+0xf88>
   137e8:	b	1382c <close_stdout@@Base+0xf88>
   137ec:	b	1382c <close_stdout@@Base+0xf88>
   137f0:	b	1382c <close_stdout@@Base+0xf88>
   137f4:	b	1382c <close_stdout@@Base+0xf88>
   137f8:	b	1382c <close_stdout@@Base+0xf88>
   137fc:	b	1382c <close_stdout@@Base+0xf88>
   13800:	b	1382c <close_stdout@@Base+0xf88>
   13804:	b	1382c <close_stdout@@Base+0xf88>
   13808:	b	1382c <close_stdout@@Base+0xf88>
   1380c:	b	1382c <close_stdout@@Base+0xf88>
   13810:	b	1382c <close_stdout@@Base+0xf88>
   13814:	b	1382c <close_stdout@@Base+0xf88>
   13818:	b	1382c <close_stdout@@Base+0xf88>
   1381c:	b	1382c <close_stdout@@Base+0xf88>
   13820:	b	1382c <close_stdout@@Base+0xf88>
   13824:	b	1382c <close_stdout@@Base+0xf88>
   13828:	b	13224 <close_stdout@@Base+0x980>
   1382c:	cmp	r4, r7
   13830:	bne	13790 <close_stdout@@Base+0xeec>
   13834:	ldr	r0, [sp, #104]	; 0x68
   13838:	add	r9, r9, r2
   1383c:	bl	11144 <iswprint@plt>
   13840:	cmp	r0, #0
   13844:	mov	r0, r5
   13848:	moveq	r6, #0
   1384c:	bl	110e4 <mbsinit@plt>
   13850:	cmp	r0, #0
   13854:	beq	13728 <close_stdout@@Base+0xe84>
   13858:	mov	ip, r6
   1385c:	eor	r2, ip, #1
   13860:	str	r9, [sp, #60]	; 0x3c
   13864:	ldr	r4, [sp, #92]	; 0x5c
   13868:	uxtb	r2, r2
   1386c:	ldr	r9, [sp, #88]	; 0x58
   13870:	ldr	r6, [sp, #96]	; 0x60
   13874:	ldr	r5, [sp, #100]	; 0x64
   13878:	ldr	r3, [sp, #60]	; 0x3c
   1387c:	cmp	r3, #1
   13880:	bls	13404 <close_stdout@@Base+0xb60>
   13884:	ldr	r0, [sp, #24]
   13888:	and	r2, r2, r0
   1388c:	b	13410 <close_stdout@@Base+0xb6c>
   13890:	ldr	r2, [sp, #164]	; 0xa4
   13894:	tst	r2, #1
   13898:	addne	fp, fp, #1
   1389c:	bne	12dcc <close_stdout@@Base+0x528>
   138a0:	b	130dc <close_stdout@@Base+0x838>
   138a4:	ldr	r0, [sp, #36]	; 0x24
   138a8:	cmp	r0, #0
   138ac:	beq	130dc <close_stdout@@Base+0x838>
   138b0:	b	13224 <close_stdout@@Base+0x980>
   138b4:	ldr	r2, [sp, #32]
   138b8:	ldrb	r3, [r2, #1]
   138bc:	adds	r3, r3, #0
   138c0:	movne	r3, #1
   138c4:	b	131f8 <close_stdout@@Base+0x954>
   138c8:	bl	11318 <abort@plt>
   138cc:	ldr	r8, [sp, #60]	; 0x3c
   138d0:	b	13224 <close_stdout@@Base+0x980>
   138d4:	ldr	r0, [sp, #32]
   138d8:	bl	11228 <strlen@plt>
   138dc:	mov	r8, r0
   138e0:	b	136ec <close_stdout@@Base+0xe48>
   138e4:	ldr	r2, [pc, #288]	; 13a0c <close_stdout@@Base+0x1168>
   138e8:	mov	r1, #1
   138ec:	mov	r9, r1
   138f0:	str	r1, [sp, #24]
   138f4:	add	r2, pc, r2
   138f8:	str	r1, [sp, #28]
   138fc:	str	r2, [sp, #52]	; 0x34
   13900:	b	12da8 <close_stdout@@Base+0x504>
   13904:	ldr	r2, [pc, #260]	; 13a10 <close_stdout@@Base+0x116c>
   13908:	mov	r3, #1
   1390c:	mov	r9, r3
   13910:	str	r3, [sp, #28]
   13914:	add	r2, pc, r2
   13918:	str	sl, [sp, #24]
   1391c:	str	r2, [sp, #52]	; 0x34
   13920:	b	12da8 <close_stdout@@Base+0x504>
   13924:	cmp	r8, r7
   13928:	str	r9, [sp, #60]	; 0x3c
   1392c:	mov	ip, r4
   13930:	ldr	r6, [sp, #96]	; 0x60
   13934:	ldr	r9, [sp, #88]	; 0x58
   13938:	ldr	r4, [sp, #92]	; 0x5c
   1393c:	ldr	r5, [sp, #100]	; 0x64
   13940:	bls	13978 <close_stdout@@Base+0x10d4>
   13944:	ldrb	r3, [ip]
   13948:	cmp	r3, #0
   1394c:	beq	13978 <close_stdout@@Base+0x10d4>
   13950:	ldr	r3, [sp, #60]	; 0x3c
   13954:	b	13964 <close_stdout@@Base+0x10c0>
   13958:	ldrb	r2, [r5, r3]
   1395c:	cmp	r2, #0
   13960:	beq	13974 <close_stdout@@Base+0x10d0>
   13964:	add	r3, r3, #1
   13968:	add	r2, fp, r3
   1396c:	cmp	r8, r2
   13970:	bhi	13958 <close_stdout@@Base+0x10b4>
   13974:	str	r3, [sp, #60]	; 0x3c
   13978:	mov	r2, #1
   1397c:	b	13878 <close_stdout@@Base+0xfd4>
   13980:	str	r9, [sp, #60]	; 0x3c
   13984:	mov	r2, #1
   13988:	ldr	r4, [sp, #92]	; 0x5c
   1398c:	ldr	r6, [sp, #96]	; 0x60
   13990:	ldr	r9, [sp, #88]	; 0x58
   13994:	ldr	r5, [sp, #100]	; 0x64
   13998:	b	13878 <close_stdout@@Base+0xfd4>
   1399c:	ldr	r9, [sp, #36]	; 0x24
   139a0:	b	135c4 <close_stdout@@Base+0xd20>
   139a4:	bl	11120 <__stack_chk_fail@plt>
   139a8:	ldr	r1, [pc, #100]	; 13a14 <close_stdout@@Base+0x1170>
   139ac:	mov	r3, #0
   139b0:	mov	r0, #1
   139b4:	str	r3, [sp, #24]
   139b8:	add	r1, pc, r1
   139bc:	str	r0, [sp, #28]
   139c0:	mov	r9, r3
   139c4:	str	r1, [sp, #52]	; 0x34
   139c8:	b	12da8 <close_stdout@@Base+0x504>
   139cc:	ldr	r0, [pc, #68]	; 13a18 <close_stdout@@Base+0x1174>
   139d0:	mov	r3, #1
   139d4:	mov	r9, #0
   139d8:	str	r3, [sp, #24]
   139dc:	add	r0, pc, r0
   139e0:	str	r3, [sp, #28]
   139e4:	str	r0, [sp, #52]	; 0x34
   139e8:	b	12da8 <close_stdout@@Base+0x504>
   139ec:	andeq	r6, r1, r8, ror #5
   139f0:	andeq	r0, r0, r8, lsl #2
   139f4:	muleq	r0, ip, r4
   139f8:	andeq	r4, r0, r8, ror r4
   139fc:	andeq	r4, r0, r4, lsr r4
   13a00:	andeq	r4, r0, r0, lsl r4
   13a04:	muleq	r0, r4, r3
   13a08:	andeq	r4, r0, ip, lsr r3
   13a0c:	muleq	r0, r4, r0
   13a10:	andeq	r4, r0, r0, ror r0
   13a14:	andeq	r3, r0, ip, asr #31
   13a18:	andeq	r3, r0, ip, lsr #31
   13a1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a20:	sub	sp, sp, #44	; 0x2c
   13a24:	mov	r6, r0
   13a28:	mov	r9, r1
   13a2c:	mov	sl, r2
   13a30:	mov	r4, r3
   13a34:	bl	1124c <__errno_location@plt>
   13a38:	ldr	fp, [pc, #412]	; 13bdc <close_stdout@@Base+0x1338>
   13a3c:	cmp	r6, #0
   13a40:	add	fp, pc, fp
   13a44:	ldr	r5, [fp]
   13a48:	ldr	r1, [r0]
   13a4c:	mov	r8, r0
   13a50:	str	r1, [sp, #36]	; 0x24
   13a54:	blt	13bd4 <close_stdout@@Base+0x1330>
   13a58:	ldr	r3, [pc, #384]	; 13be0 <close_stdout@@Base+0x133c>
   13a5c:	add	r3, pc, r3
   13a60:	ldr	r3, [r3]
   13a64:	cmp	r6, r3
   13a68:	bcc	13abc <close_stdout@@Base+0x1218>
   13a6c:	add	r7, r6, #1
   13a70:	cmn	r7, #-536870911	; 0xe0000001
   13a74:	bhi	13bd8 <close_stdout@@Base+0x1334>
   13a78:	add	r3, fp, #4
   13a7c:	cmp	r5, r3
   13a80:	beq	13bac <close_stdout@@Base+0x1308>
   13a84:	mov	r0, r5
   13a88:	lsl	r1, r7, #3
   13a8c:	bl	148b4 <close_stdout@@Base+0x2010>
   13a90:	mov	r5, r0
   13a94:	str	r0, [fp]
   13a98:	ldr	fp, [pc, #324]	; 13be4 <close_stdout@@Base+0x1340>
   13a9c:	mov	r1, #0
   13aa0:	add	fp, pc, fp
   13aa4:	ldr	r0, [fp]
   13aa8:	rsb	r2, r0, r7
   13aac:	add	r0, r5, r0, lsl #3
   13ab0:	lsl	r2, r2, #3
   13ab4:	bl	11270 <memset@plt>
   13ab8:	str	r7, [fp]
   13abc:	add	r2, r4, #8
   13ac0:	str	r2, [sp, #32]
   13ac4:	ldr	r1, [r4]
   13ac8:	add	fp, r5, r6, lsl #3
   13acc:	ldr	lr, [sp, #32]
   13ad0:	mov	r2, r9
   13ad4:	ldr	r3, [r4, #4]
   13ad8:	ldr	ip, [r5, r6, lsl #3]
   13adc:	ldr	r7, [fp, #4]
   13ae0:	orr	r3, r3, #1
   13ae4:	str	r1, [sp]
   13ae8:	str	r3, [sp, #4]
   13aec:	mov	r1, ip
   13af0:	str	lr, [sp, #8]
   13af4:	mov	r0, r7
   13af8:	ldr	lr, [r4, #40]	; 0x28
   13afc:	str	r3, [sp, #28]
   13b00:	mov	r3, sl
   13b04:	str	lr, [sp, #12]
   13b08:	ldr	lr, [r4, #44]	; 0x2c
   13b0c:	str	ip, [sp, #24]
   13b10:	str	lr, [sp, #16]
   13b14:	bl	12cf4 <close_stdout@@Base+0x450>
   13b18:	ldr	ip, [sp, #24]
   13b1c:	cmp	ip, r0
   13b20:	bhi	13b98 <close_stdout@@Base+0x12f4>
   13b24:	ldr	r3, [pc, #188]	; 13be8 <close_stdout@@Base+0x1344>
   13b28:	add	r1, r0, #1
   13b2c:	str	r1, [r5, r6, lsl #3]
   13b30:	add	r3, pc, r3
   13b34:	cmp	r7, r3
   13b38:	beq	13b4c <close_stdout@@Base+0x12a8>
   13b3c:	mov	r0, r7
   13b40:	str	r1, [sp, #24]
   13b44:	bl	110c0 <free@plt>
   13b48:	ldr	r1, [sp, #24]
   13b4c:	mov	r0, r1
   13b50:	str	r1, [sp, #24]
   13b54:	bl	1485c <close_stdout@@Base+0x1fb8>
   13b58:	ldr	r3, [sp, #28]
   13b5c:	ldr	lr, [sp, #32]
   13b60:	mov	r2, r9
   13b64:	str	r0, [fp, #4]
   13b68:	mov	r7, r0
   13b6c:	ldr	ip, [r4]
   13b70:	str	r3, [sp, #4]
   13b74:	mov	r3, sl
   13b78:	str	lr, [sp, #8]
   13b7c:	str	ip, [sp]
   13b80:	ldr	ip, [r4, #40]	; 0x28
   13b84:	ldr	r1, [sp, #24]
   13b88:	str	ip, [sp, #12]
   13b8c:	ldr	ip, [r4, #44]	; 0x2c
   13b90:	str	ip, [sp, #16]
   13b94:	bl	12cf4 <close_stdout@@Base+0x450>
   13b98:	ldr	r1, [sp, #36]	; 0x24
   13b9c:	mov	r0, r7
   13ba0:	str	r1, [r8]
   13ba4:	add	sp, sp, #44	; 0x2c
   13ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bac:	lsl	r1, r7, #3
   13bb0:	mov	r0, #0
   13bb4:	str	r3, [sp, #24]
   13bb8:	bl	148b4 <close_stdout@@Base+0x2010>
   13bbc:	ldr	r3, [sp, #24]
   13bc0:	mov	r5, r0
   13bc4:	ldm	r3, {r0, r1}
   13bc8:	str	r5, [fp]
   13bcc:	stm	r5, {r0, r1}
   13bd0:	b	13a98 <close_stdout@@Base+0x11f4>
   13bd4:	bl	11318 <abort@plt>
   13bd8:	bl	14a70 <close_stdout@@Base+0x21cc>
   13bdc:	andeq	r5, r1, r8, lsr r7
   13be0:	andeq	r5, r1, r8, ror #13
   13be4:	andeq	r5, r1, r4, lsr #13
   13be8:	andeq	r5, r1, ip, lsl #13
   13bec:	push	{r4, r5, r6, lr}
   13bf0:	mov	r5, r0
   13bf4:	bl	1124c <__errno_location@plt>
   13bf8:	cmp	r5, #0
   13bfc:	mov	r1, #48	; 0x30
   13c00:	mov	r4, r0
   13c04:	ldr	r0, [pc, #24]	; 13c24 <close_stdout@@Base+0x1380>
   13c08:	ldr	r6, [r4]
   13c0c:	add	r0, pc, r0
   13c10:	add	r0, r0, #256	; 0x100
   13c14:	movne	r0, r5
   13c18:	bl	14a30 <close_stdout@@Base+0x218c>
   13c1c:	str	r6, [r4]
   13c20:	pop	{r4, r5, r6, pc}
   13c24:			; <UNDEFINED> instruction: 0x000155b0
   13c28:	cmp	r0, #0
   13c2c:	beq	13c38 <close_stdout@@Base+0x1394>
   13c30:	ldr	r0, [r0]
   13c34:	bx	lr
   13c38:	ldr	r0, [pc, #12]	; 13c4c <close_stdout@@Base+0x13a8>
   13c3c:	add	r0, pc, r0
   13c40:	add	r0, r0, #256	; 0x100
   13c44:	ldr	r0, [r0]
   13c48:	bx	lr
   13c4c:	andeq	r5, r1, r0, lsl #11
   13c50:	cmp	r0, #0
   13c54:	beq	13c60 <close_stdout@@Base+0x13bc>
   13c58:	str	r1, [r0]
   13c5c:	bx	lr
   13c60:	ldr	r0, [pc, #12]	; 13c74 <close_stdout@@Base+0x13d0>
   13c64:	add	r0, pc, r0
   13c68:	add	r0, r0, #256	; 0x100
   13c6c:	str	r1, [r0]
   13c70:	bx	lr
   13c74:	andeq	r5, r1, r8, asr r5
   13c78:	cmp	r0, #0
   13c7c:	movne	r3, r0
   13c80:	beq	13cb0 <close_stdout@@Base+0x140c>
   13c84:	lsr	ip, r1, #5
   13c88:	and	r1, r1, #31
   13c8c:	add	r3, r3, ip, lsl #2
   13c90:	ldr	ip, [r3, #8]
   13c94:	lsr	r0, ip, r1
   13c98:	eor	r2, r0, r2
   13c9c:	and	r0, r0, #1
   13ca0:	and	r2, r2, #1
   13ca4:	eor	ip, ip, r2, lsl r1
   13ca8:	str	ip, [r3, #8]
   13cac:	bx	lr
   13cb0:	ldr	r3, [pc, #8]	; 13cc0 <close_stdout@@Base+0x141c>
   13cb4:	add	r3, pc, r3
   13cb8:	add	r3, r3, #256	; 0x100
   13cbc:	b	13c84 <close_stdout@@Base+0x13e0>
   13cc0:	andeq	r5, r1, r8, lsl #10
   13cc4:	subs	r3, r0, #0
   13cc8:	beq	13cd8 <close_stdout@@Base+0x1434>
   13ccc:	ldr	r0, [r3, #4]
   13cd0:	str	r1, [r3, #4]
   13cd4:	bx	lr
   13cd8:	ldr	r3, [pc, #8]	; 13ce8 <close_stdout@@Base+0x1444>
   13cdc:	add	r3, pc, r3
   13ce0:	add	r3, r3, #256	; 0x100
   13ce4:	b	13ccc <close_stdout@@Base+0x1428>
   13ce8:	andeq	r5, r1, r0, ror #9
   13cec:	cmp	r0, #0
   13cf0:	push	{r3, lr}
   13cf4:	beq	13d18 <close_stdout@@Base+0x1474>
   13cf8:	cmp	r2, #0
   13cfc:	cmpne	r1, #0
   13d00:	mov	r3, #8
   13d04:	strne	r1, [r0, #40]	; 0x28
   13d08:	str	r3, [r0]
   13d0c:	strne	r2, [r0, #44]	; 0x2c
   13d10:	popne	{r3, pc}
   13d14:	bl	11318 <abort@plt>
   13d18:	ldr	r0, [pc, #8]	; 13d28 <close_stdout@@Base+0x1484>
   13d1c:	add	r0, pc, r0
   13d20:	add	r0, r0, #256	; 0x100
   13d24:	b	13cf8 <close_stdout@@Base+0x1454>
   13d28:	andeq	r5, r1, r0, lsr #9
   13d2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d30:	sub	sp, sp, #24
   13d34:	mov	r7, r0
   13d38:	mov	sl, r1
   13d3c:	ldr	r4, [sp, #56]	; 0x38
   13d40:	mov	r9, r2
   13d44:	mov	r8, r3
   13d48:	cmp	r4, #0
   13d4c:	beq	13da0 <close_stdout@@Base+0x14fc>
   13d50:	bl	1124c <__errno_location@plt>
   13d54:	ldr	r3, [r4]
   13d58:	add	lr, r4, #8
   13d5c:	mov	r1, sl
   13d60:	mov	r2, r9
   13d64:	ldr	r6, [r0]
   13d68:	mov	r5, r0
   13d6c:	str	r3, [sp]
   13d70:	mov	r0, r7
   13d74:	ldr	ip, [r4, #4]
   13d78:	mov	r3, r8
   13d7c:	stmib	sp, {ip, lr}
   13d80:	ldr	ip, [r4, #40]	; 0x28
   13d84:	str	ip, [sp, #12]
   13d88:	ldr	ip, [r4, #44]	; 0x2c
   13d8c:	str	ip, [sp, #16]
   13d90:	bl	12cf4 <close_stdout@@Base+0x450>
   13d94:	str	r6, [r5]
   13d98:	add	sp, sp, #24
   13d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13da0:	ldr	r4, [pc, #8]	; 13db0 <close_stdout@@Base+0x150c>
   13da4:	add	r4, pc, r4
   13da8:	add	r4, r4, #256	; 0x100
   13dac:	b	13d50 <close_stdout@@Base+0x14ac>
   13db0:	andeq	r5, r1, r8, lsl r4
   13db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13db8:	subs	r4, r3, #0
   13dbc:	sub	sp, sp, #36	; 0x24
   13dc0:	mov	r7, r0
   13dc4:	mov	r6, r1
   13dc8:	mov	r5, r2
   13dcc:	beq	13e88 <close_stdout@@Base+0x15e4>
   13dd0:	bl	1124c <__errno_location@plt>
   13dd4:	ldr	r3, [r4]
   13dd8:	ldr	sl, [r4, #4]
   13ddc:	add	r9, r4, #8
   13de0:	mov	r8, r0
   13de4:	mov	r0, #0
   13de8:	ldr	r2, [r8]
   13dec:	cmp	r5, r0
   13df0:	orreq	sl, sl, #1
   13df4:	str	r9, [sp, #8]
   13df8:	mov	r1, r0
   13dfc:	stm	sp, {r3, sl}
   13e00:	mov	r3, r6
   13e04:	ldr	ip, [r4, #40]	; 0x28
   13e08:	str	r2, [sp, #28]
   13e0c:	mov	r2, r7
   13e10:	str	ip, [sp, #12]
   13e14:	ldr	ip, [r4, #44]	; 0x2c
   13e18:	str	ip, [sp, #16]
   13e1c:	bl	12cf4 <close_stdout@@Base+0x450>
   13e20:	add	r1, r0, #1
   13e24:	mov	fp, r0
   13e28:	str	r1, [sp, #24]
   13e2c:	mov	r0, r1
   13e30:	bl	1485c <close_stdout@@Base+0x1fb8>
   13e34:	ldr	lr, [r4]
   13e38:	str	sl, [sp, #4]
   13e3c:	mov	r3, r6
   13e40:	str	r9, [sp, #8]
   13e44:	mov	r2, r7
   13e48:	str	lr, [sp]
   13e4c:	ldr	lr, [r4, #40]	; 0x28
   13e50:	ldr	r1, [sp, #24]
   13e54:	str	lr, [sp, #12]
   13e58:	ldr	lr, [r4, #44]	; 0x2c
   13e5c:	str	lr, [sp, #16]
   13e60:	str	r0, [sp, #24]
   13e64:	bl	12cf4 <close_stdout@@Base+0x450>
   13e68:	ldr	r3, [sp, #28]
   13e6c:	cmp	r5, #0
   13e70:	str	r3, [r8]
   13e74:	ldr	ip, [sp, #24]
   13e78:	strne	fp, [r5]
   13e7c:	mov	r0, ip
   13e80:	add	sp, sp, #36	; 0x24
   13e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e88:	ldr	r4, [pc, #8]	; 13e98 <close_stdout@@Base+0x15f4>
   13e8c:	add	r4, pc, r4
   13e90:	add	r4, r4, #256	; 0x100
   13e94:	b	13dd0 <close_stdout@@Base+0x152c>
   13e98:	andeq	r5, r1, r0, lsr r3
   13e9c:	mov	r3, r2
   13ea0:	mov	r2, #0
   13ea4:	b	13db4 <close_stdout@@Base+0x1510>
   13ea8:	ldr	r2, [pc, #152]	; 13f48 <close_stdout@@Base+0x16a4>
   13eac:	push	{r3, r4, r5, r6, r7, lr}
   13eb0:	add	r2, pc, r2
   13eb4:	ldr	r3, [pc, #144]	; 13f4c <close_stdout@@Base+0x16a8>
   13eb8:	ldr	r6, [r2]
   13ebc:	add	r3, pc, r3
   13ec0:	cmp	r6, #1
   13ec4:	ldr	r7, [r3]
   13ec8:	movhi	r4, #1
   13ecc:	movhi	r5, r7
   13ed0:	bls	13eec <close_stdout@@Base+0x1648>
   13ed4:	ldr	r0, [r5, #12]
   13ed8:	add	r4, r4, #1
   13edc:	bl	110c0 <free@plt>
   13ee0:	cmp	r4, r6
   13ee4:	add	r5, r5, #8
   13ee8:	bne	13ed4 <close_stdout@@Base+0x1630>
   13eec:	ldr	r4, [pc, #92]	; 13f50 <close_stdout@@Base+0x16ac>
   13ef0:	ldr	r0, [r7, #4]
   13ef4:	add	r4, pc, r4
   13ef8:	cmp	r0, r4
   13efc:	beq	13f14 <close_stdout@@Base+0x1670>
   13f00:	bl	110c0 <free@plt>
   13f04:	ldr	r3, [pc, #72]	; 13f54 <close_stdout@@Base+0x16b0>
   13f08:	mov	r2, #256	; 0x100
   13f0c:	add	r3, pc, r3
   13f10:	stmib	r3, {r2, r4}
   13f14:	ldr	r4, [pc, #60]	; 13f58 <close_stdout@@Base+0x16b4>
   13f18:	add	r4, pc, r4
   13f1c:	add	r5, r4, #4
   13f20:	cmp	r7, r5
   13f24:	beq	13f34 <close_stdout@@Base+0x1690>
   13f28:	mov	r0, r7
   13f2c:	bl	110c0 <free@plt>
   13f30:	str	r5, [r4]
   13f34:	ldr	r3, [pc, #32]	; 13f5c <close_stdout@@Base+0x16b8>
   13f38:	mov	r2, #1
   13f3c:	add	r3, pc, r3
   13f40:	str	r2, [r3]
   13f44:	pop	{r3, r4, r5, r6, r7, pc}
   13f48:	muleq	r1, r4, r2
   13f4c:			; <UNDEFINED> instruction: 0x000152bc
   13f50:	andeq	r5, r1, r8, asr #5
   13f54:	andeq	r5, r1, ip, ror #4
   13f58:	andeq	r5, r1, r0, ror #4
   13f5c:	andeq	r5, r1, r8, lsl #4
   13f60:	ldr	r3, [pc, #12]	; 13f74 <close_stdout@@Base+0x16d0>
   13f64:	mvn	r2, #0
   13f68:	add	r3, pc, r3
   13f6c:	add	r3, r3, #256	; 0x100
   13f70:	b	13a1c <close_stdout@@Base+0x1178>
   13f74:	andeq	r5, r1, r4, asr r2
   13f78:	ldr	r3, [pc, #8]	; 13f88 <close_stdout@@Base+0x16e4>
   13f7c:	add	r3, pc, r3
   13f80:	add	r3, r3, #256	; 0x100
   13f84:	b	13a1c <close_stdout@@Base+0x1178>
   13f88:	andeq	r5, r1, r0, asr #4
   13f8c:	mov	r1, r0
   13f90:	mov	r0, #0
   13f94:	b	13f60 <close_stdout@@Base+0x16bc>
   13f98:	mov	r2, r1
   13f9c:	mov	r1, r0
   13fa0:	mov	r0, #0
   13fa4:	b	13f78 <close_stdout@@Base+0x16d4>
   13fa8:	ldr	r3, [pc, #92]	; 1400c <close_stdout@@Base+0x1768>
   13fac:	ldr	ip, [pc, #92]	; 14010 <close_stdout@@Base+0x176c>
   13fb0:	add	r3, pc, r3
   13fb4:	push	{r4, r5, r6, r7, lr}
   13fb8:	sub	sp, sp, #60	; 0x3c
   13fbc:	ldr	r4, [r3, ip]
   13fc0:	add	r5, sp, #4
   13fc4:	mov	r7, r2
   13fc8:	mov	r6, r0
   13fcc:	mov	r0, r5
   13fd0:	ldr	r3, [r4]
   13fd4:	str	r3, [sp, #52]	; 0x34
   13fd8:	bl	12b3c <close_stdout@@Base+0x298>
   13fdc:	mov	r3, r5
   13fe0:	mvn	r2, #0
   13fe4:	mov	r0, r6
   13fe8:	mov	r1, r7
   13fec:	bl	13a1c <close_stdout@@Base+0x1178>
   13ff0:	ldr	r2, [sp, #52]	; 0x34
   13ff4:	ldr	r3, [r4]
   13ff8:	cmp	r2, r3
   13ffc:	bne	14008 <close_stdout@@Base+0x1764>
   14000:	add	sp, sp, #60	; 0x3c
   14004:	pop	{r4, r5, r6, r7, pc}
   14008:	bl	11120 <__stack_chk_fail@plt>
   1400c:	andeq	r5, r1, r8, asr #32
   14010:	andeq	r0, r0, r8, lsl #2
   14014:	ldr	ip, [pc, #96]	; 1407c <close_stdout@@Base+0x17d8>
   14018:	push	{r4, r5, r6, r7, r8, lr}
   1401c:	add	ip, pc, ip
   14020:	ldr	lr, [pc, #88]	; 14080 <close_stdout@@Base+0x17dc>
   14024:	sub	sp, sp, #56	; 0x38
   14028:	mov	r8, r3
   1402c:	add	r5, sp, #4
   14030:	mov	r7, r2
   14034:	mov	r6, r0
   14038:	ldr	r4, [ip, lr]
   1403c:	mov	r0, r5
   14040:	ldr	r3, [r4]
   14044:	str	r3, [sp, #52]	; 0x34
   14048:	bl	12b3c <close_stdout@@Base+0x298>
   1404c:	mov	r2, r8
   14050:	mov	r3, r5
   14054:	mov	r0, r6
   14058:	mov	r1, r7
   1405c:	bl	13a1c <close_stdout@@Base+0x1178>
   14060:	ldr	r2, [sp, #52]	; 0x34
   14064:	ldr	r3, [r4]
   14068:	cmp	r2, r3
   1406c:	bne	14078 <close_stdout@@Base+0x17d4>
   14070:	add	sp, sp, #56	; 0x38
   14074:	pop	{r4, r5, r6, r7, r8, pc}
   14078:	bl	11120 <__stack_chk_fail@plt>
   1407c:	ldrdeq	r4, [r1], -ip
   14080:	andeq	r0, r0, r8, lsl #2
   14084:	mov	r2, r1
   14088:	mov	r1, r0
   1408c:	mov	r0, #0
   14090:	b	13fa8 <close_stdout@@Base+0x1704>
   14094:	mov	ip, r1
   14098:	mov	r3, r2
   1409c:	mov	r1, r0
   140a0:	mov	r2, ip
   140a4:	mov	r0, #0
   140a8:	b	14014 <close_stdout@@Base+0x1770>
   140ac:	push	{r4, r5, r6, r7, r8, lr}
   140b0:	mov	r5, r2
   140b4:	ldr	lr, [pc, #136]	; 14144 <close_stdout@@Base+0x18a0>
   140b8:	mov	r7, r0
   140bc:	mov	r6, r1
   140c0:	ldr	r4, [pc, #128]	; 14148 <close_stdout@@Base+0x18a4>
   140c4:	add	lr, pc, lr
   140c8:	sub	sp, sp, #56	; 0x38
   140cc:	add	lr, lr, #256	; 0x100
   140d0:	ldr	r8, [pc, #116]	; 1414c <close_stdout@@Base+0x18a8>
   140d4:	add	r4, pc, r4
   140d8:	add	ip, sp, #4
   140dc:	ldm	lr!, {r0, r1, r2, r3}
   140e0:	ldr	r4, [r4, r8]
   140e4:	stmia	ip!, {r0, r1, r2, r3}
   140e8:	ldm	lr!, {r0, r1, r2, r3}
   140ec:	ldr	r8, [r4]
   140f0:	stmia	ip!, {r0, r1, r2, r3}
   140f4:	ldm	lr, {r0, r1, r2, r3}
   140f8:	str	r8, [sp, #52]	; 0x34
   140fc:	stm	ip, {r0, r1, r2, r3}
   14100:	mov	r1, r5
   14104:	add	r5, sp, #4
   14108:	mov	r2, #1
   1410c:	mov	r0, r5
   14110:	bl	13c78 <close_stdout@@Base+0x13d4>
   14114:	mov	r2, r6
   14118:	mov	r3, r5
   1411c:	mov	r1, r7
   14120:	mov	r0, #0
   14124:	bl	13a1c <close_stdout@@Base+0x1178>
   14128:	ldr	r2, [sp, #52]	; 0x34
   1412c:	ldr	r3, [r4]
   14130:	cmp	r2, r3
   14134:	bne	14140 <close_stdout@@Base+0x189c>
   14138:	add	sp, sp, #56	; 0x38
   1413c:	pop	{r4, r5, r6, r7, r8, pc}
   14140:	bl	11120 <__stack_chk_fail@plt>
   14144:	strdeq	r5, [r1], -r8
   14148:	andeq	r4, r1, r4, lsr #30
   1414c:	andeq	r0, r0, r8, lsl #2
   14150:	mov	r2, r1
   14154:	mvn	r1, #0
   14158:	b	140ac <close_stdout@@Base+0x1808>
   1415c:	mov	r1, #58	; 0x3a
   14160:	b	14150 <close_stdout@@Base+0x18ac>
   14164:	mov	r2, #58	; 0x3a
   14168:	b	140ac <close_stdout@@Base+0x1808>
   1416c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14170:	mov	r5, r2
   14174:	ldr	lr, [pc, #144]	; 1420c <close_stdout@@Base+0x1968>
   14178:	mov	r8, r0
   1417c:	mov	r9, r1
   14180:	mov	r7, r3
   14184:	add	lr, pc, lr
   14188:	ldr	r4, [pc, #128]	; 14210 <close_stdout@@Base+0x196c>
   1418c:	add	lr, lr, #256	; 0x100
   14190:	sub	sp, sp, #56	; 0x38
   14194:	ldr	sl, [pc, #120]	; 14214 <close_stdout@@Base+0x1970>
   14198:	add	r4, pc, r4
   1419c:	ldm	lr!, {r0, r1, r2, r3}
   141a0:	add	ip, sp, #4
   141a4:	ldr	r4, [r4, sl]
   141a8:	ldr	r6, [sp, #88]	; 0x58
   141ac:	stmia	ip!, {r0, r1, r2, r3}
   141b0:	ldm	lr!, {r0, r1, r2, r3}
   141b4:	ldr	sl, [r4]
   141b8:	stmia	ip!, {r0, r1, r2, r3}
   141bc:	ldm	lr, {r0, r1, r2, r3}
   141c0:	str	sl, [sp, #52]	; 0x34
   141c4:	stm	ip, {r0, r1, r2, r3}
   141c8:	mov	r2, r5
   141cc:	add	r5, sp, #4
   141d0:	mov	r1, r9
   141d4:	mov	r0, r5
   141d8:	bl	13cec <close_stdout@@Base+0x1448>
   141dc:	mov	r2, r6
   141e0:	mov	r3, r5
   141e4:	mov	r0, r8
   141e8:	mov	r1, r7
   141ec:	bl	13a1c <close_stdout@@Base+0x1178>
   141f0:	ldr	r2, [sp, #52]	; 0x34
   141f4:	ldr	r3, [r4]
   141f8:	cmp	r2, r3
   141fc:	bne	14208 <close_stdout@@Base+0x1964>
   14200:	add	sp, sp, #56	; 0x38
   14204:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14208:	bl	11120 <__stack_chk_fail@plt>
   1420c:	andeq	r5, r1, r8, lsr r0
   14210:	andeq	r4, r1, r0, ror #28
   14214:	andeq	r0, r0, r8, lsl #2
   14218:	push	{lr}		; (str lr, [sp, #-4]!)
   1421c:	sub	sp, sp, #12
   14220:	mvn	ip, #0
   14224:	str	ip, [sp]
   14228:	bl	1416c <close_stdout@@Base+0x18c8>
   1422c:	add	sp, sp, #12
   14230:	pop	{pc}		; (ldr pc, [sp], #4)
   14234:	mov	ip, r1
   14238:	mov	r3, r2
   1423c:	mov	r1, r0
   14240:	mov	r2, ip
   14244:	mov	r0, #0
   14248:	b	14218 <close_stdout@@Base+0x1974>
   1424c:	push	{lr}		; (str lr, [sp, #-4]!)
   14250:	sub	sp, sp, #12
   14254:	mov	lr, r1
   14258:	mov	ip, r2
   1425c:	mov	r1, r0
   14260:	str	r3, [sp]
   14264:	mov	r2, lr
   14268:	mov	r3, ip
   1426c:	mov	r0, #0
   14270:	bl	1416c <close_stdout@@Base+0x18c8>
   14274:	add	sp, sp, #12
   14278:	pop	{pc}		; (ldr pc, [sp], #4)
   1427c:	ldr	r3, [pc, #12]	; 14290 <close_stdout@@Base+0x19ec>
   14280:	ldr	ip, [pc, #12]	; 14294 <close_stdout@@Base+0x19f0>
   14284:	add	r3, pc, r3
   14288:	ldr	r3, [r3, ip]
   1428c:	b	13a1c <close_stdout@@Base+0x1178>
   14290:	andeq	r4, r1, r4, ror sp
   14294:	andeq	r0, r0, r0, lsl #2
   14298:	mov	r2, r1
   1429c:	mov	r1, r0
   142a0:	mov	r0, #0
   142a4:	b	1427c <close_stdout@@Base+0x19d8>
   142a8:	mvn	r2, #0
   142ac:	b	1427c <close_stdout@@Base+0x19d8>
   142b0:	mov	r1, r0
   142b4:	mov	r0, #0
   142b8:	b	142a8 <close_stdout@@Base+0x1a04>
   142bc:	push	{r4, r5, r6, r7, lr}
   142c0:	cmp	r1, #0
   142c4:	sub	sp, sp, #36	; 0x24
   142c8:	ldr	r7, [pc, #896]	; 14650 <close_stdout@@Base+0x1dac>
   142cc:	mov	ip, r3
   142d0:	mov	r5, r0
   142d4:	add	r7, pc, r7
   142d8:	ldr	r4, [sp, #56]	; 0x38
   142dc:	ldr	r6, [sp, #60]	; 0x3c
   142e0:	beq	14624 <close_stdout@@Base+0x1d80>
   142e4:	str	r2, [sp]
   142e8:	mov	r3, r1
   142ec:	ldr	r2, [pc, #864]	; 14654 <close_stdout@@Base+0x1db0>
   142f0:	mov	r1, #1
   142f4:	str	ip, [sp, #4]
   142f8:	add	r2, pc, r2
   142fc:	bl	112a0 <__fprintf_chk@plt>
   14300:	ldr	r1, [pc, #848]	; 14658 <close_stdout@@Base+0x1db4>
   14304:	mov	r2, #5
   14308:	mov	r0, #0
   1430c:	add	r1, pc, r1
   14310:	bl	11114 <dcgettext@plt>
   14314:	ldr	r2, [pc, #832]	; 1465c <close_stdout@@Base+0x1db8>
   14318:	movw	ip, #2013	; 0x7dd
   1431c:	mov	r1, #1
   14320:	ldr	r2, [r7, r2]
   14324:	str	ip, [sp]
   14328:	mov	r3, r0
   1432c:	mov	r0, r5
   14330:	bl	112a0 <__fprintf_chk@plt>
   14334:	ldr	r1, [pc, #804]	; 14660 <close_stdout@@Base+0x1dbc>
   14338:	mov	r0, #0
   1433c:	mov	r2, #5
   14340:	add	r1, pc, r1
   14344:	bl	11114 <dcgettext@plt>
   14348:	mov	r1, r5
   1434c:	bl	11084 <fputs_unlocked@plt>
   14350:	cmp	r6, #9
   14354:	addls	pc, pc, r6, lsl #2
   14358:	b	14640 <close_stdout@@Base+0x1d9c>
   1435c:	b	143f0 <close_stdout@@Base+0x1b4c>
   14360:	b	143f4 <close_stdout@@Base+0x1b50>
   14364:	b	14424 <close_stdout@@Base+0x1b80>
   14368:	b	14458 <close_stdout@@Base+0x1bb4>
   1436c:	b	14494 <close_stdout@@Base+0x1bf0>
   14370:	b	144d4 <close_stdout@@Base+0x1c30>
   14374:	b	1451c <close_stdout@@Base+0x1c78>
   14378:	b	1456c <close_stdout@@Base+0x1cc8>
   1437c:	b	145c4 <close_stdout@@Base+0x1d20>
   14380:	b	14384 <close_stdout@@Base+0x1ae0>
   14384:	ldr	r1, [pc, #728]	; 14664 <close_stdout@@Base+0x1dc0>
   14388:	mov	r0, #0
   1438c:	add	r1, pc, r1
   14390:	mov	r2, #5
   14394:	bl	11114 <dcgettext@plt>
   14398:	ldm	r4, {r3, ip}
   1439c:	mov	r1, #1
   143a0:	str	ip, [sp]
   143a4:	ldr	ip, [r4, #8]
   143a8:	str	ip, [sp, #4]
   143ac:	ldr	ip, [r4, #12]
   143b0:	str	ip, [sp, #8]
   143b4:	ldr	ip, [r4, #16]
   143b8:	str	ip, [sp, #12]
   143bc:	ldr	ip, [r4, #20]
   143c0:	str	ip, [sp, #16]
   143c4:	ldr	ip, [r4, #24]
   143c8:	str	ip, [sp, #20]
   143cc:	ldr	ip, [r4, #28]
   143d0:	str	ip, [sp, #24]
   143d4:	ldr	ip, [r4, #32]
   143d8:	str	ip, [sp, #28]
   143dc:	mov	r2, r0
   143e0:	mov	r0, r5
   143e4:	bl	112a0 <__fprintf_chk@plt>
   143e8:	add	sp, sp, #36	; 0x24
   143ec:	pop	{r4, r5, r6, r7, pc}
   143f0:	bl	11318 <abort@plt>
   143f4:	ldr	r1, [pc, #620]	; 14668 <close_stdout@@Base+0x1dc4>
   143f8:	mov	r2, #5
   143fc:	mov	r0, #0
   14400:	add	r1, pc, r1
   14404:	bl	11114 <dcgettext@plt>
   14408:	ldr	r3, [r4]
   1440c:	mov	r1, #1
   14410:	mov	r2, r0
   14414:	mov	r0, r5
   14418:	add	sp, sp, #36	; 0x24
   1441c:	pop	{r4, r5, r6, r7, lr}
   14420:	b	112a0 <__fprintf_chk@plt>
   14424:	ldr	r1, [pc, #576]	; 1466c <close_stdout@@Base+0x1dc8>
   14428:	mov	r2, #5
   1442c:	mov	r0, #0
   14430:	add	r1, pc, r1
   14434:	bl	11114 <dcgettext@plt>
   14438:	ldm	r4, {r3, ip}
   1443c:	mov	r1, #1
   14440:	str	ip, [sp, #56]	; 0x38
   14444:	mov	r2, r0
   14448:	mov	r0, r5
   1444c:	add	sp, sp, #36	; 0x24
   14450:	pop	{r4, r5, r6, r7, lr}
   14454:	b	112a0 <__fprintf_chk@plt>
   14458:	ldr	r1, [pc, #528]	; 14670 <close_stdout@@Base+0x1dcc>
   1445c:	mov	r2, #5
   14460:	mov	r0, #0
   14464:	add	r1, pc, r1
   14468:	bl	11114 <dcgettext@plt>
   1446c:	ldm	r4, {r3, ip}
   14470:	mov	r1, #1
   14474:	str	ip, [sp, #56]	; 0x38
   14478:	ldr	ip, [r4, #8]
   1447c:	str	ip, [sp, #60]	; 0x3c
   14480:	mov	r2, r0
   14484:	mov	r0, r5
   14488:	add	sp, sp, #36	; 0x24
   1448c:	pop	{r4, r5, r6, r7, lr}
   14490:	b	112a0 <__fprintf_chk@plt>
   14494:	ldr	r1, [pc, #472]	; 14674 <close_stdout@@Base+0x1dd0>
   14498:	mov	r2, #5
   1449c:	mov	r0, #0
   144a0:	add	r1, pc, r1
   144a4:	bl	11114 <dcgettext@plt>
   144a8:	ldm	r4, {r3, ip}
   144ac:	mov	r1, #1
   144b0:	str	ip, [sp]
   144b4:	ldr	ip, [r4, #8]
   144b8:	str	ip, [sp, #4]
   144bc:	ldr	ip, [r4, #12]
   144c0:	str	ip, [sp, #8]
   144c4:	mov	r2, r0
   144c8:	mov	r0, r5
   144cc:	bl	112a0 <__fprintf_chk@plt>
   144d0:	b	143e8 <close_stdout@@Base+0x1b44>
   144d4:	ldr	r1, [pc, #412]	; 14678 <close_stdout@@Base+0x1dd4>
   144d8:	mov	r2, #5
   144dc:	mov	r0, #0
   144e0:	add	r1, pc, r1
   144e4:	bl	11114 <dcgettext@plt>
   144e8:	ldm	r4, {r3, ip}
   144ec:	mov	r1, #1
   144f0:	str	ip, [sp]
   144f4:	ldr	ip, [r4, #8]
   144f8:	str	ip, [sp, #4]
   144fc:	ldr	ip, [r4, #12]
   14500:	str	ip, [sp, #8]
   14504:	ldr	ip, [r4, #16]
   14508:	str	ip, [sp, #12]
   1450c:	mov	r2, r0
   14510:	mov	r0, r5
   14514:	bl	112a0 <__fprintf_chk@plt>
   14518:	b	143e8 <close_stdout@@Base+0x1b44>
   1451c:	ldr	r1, [pc, #344]	; 1467c <close_stdout@@Base+0x1dd8>
   14520:	mov	r2, #5
   14524:	mov	r0, #0
   14528:	add	r1, pc, r1
   1452c:	bl	11114 <dcgettext@plt>
   14530:	ldm	r4, {r3, ip}
   14534:	mov	r1, #1
   14538:	str	ip, [sp]
   1453c:	ldr	ip, [r4, #8]
   14540:	str	ip, [sp, #4]
   14544:	ldr	ip, [r4, #12]
   14548:	str	ip, [sp, #8]
   1454c:	ldr	ip, [r4, #16]
   14550:	str	ip, [sp, #12]
   14554:	ldr	ip, [r4, #20]
   14558:	str	ip, [sp, #16]
   1455c:	mov	r2, r0
   14560:	mov	r0, r5
   14564:	bl	112a0 <__fprintf_chk@plt>
   14568:	b	143e8 <close_stdout@@Base+0x1b44>
   1456c:	ldr	r1, [pc, #268]	; 14680 <close_stdout@@Base+0x1ddc>
   14570:	mov	r2, #5
   14574:	mov	r0, #0
   14578:	add	r1, pc, r1
   1457c:	bl	11114 <dcgettext@plt>
   14580:	ldm	r4, {r3, ip}
   14584:	mov	r1, #1
   14588:	str	ip, [sp]
   1458c:	ldr	ip, [r4, #8]
   14590:	str	ip, [sp, #4]
   14594:	ldr	ip, [r4, #12]
   14598:	str	ip, [sp, #8]
   1459c:	ldr	ip, [r4, #16]
   145a0:	str	ip, [sp, #12]
   145a4:	ldr	ip, [r4, #20]
   145a8:	str	ip, [sp, #16]
   145ac:	ldr	ip, [r4, #24]
   145b0:	str	ip, [sp, #20]
   145b4:	mov	r2, r0
   145b8:	mov	r0, r5
   145bc:	bl	112a0 <__fprintf_chk@plt>
   145c0:	b	143e8 <close_stdout@@Base+0x1b44>
   145c4:	ldr	r1, [pc, #184]	; 14684 <close_stdout@@Base+0x1de0>
   145c8:	mov	r2, #5
   145cc:	mov	r0, #0
   145d0:	add	r1, pc, r1
   145d4:	bl	11114 <dcgettext@plt>
   145d8:	ldm	r4, {r3, ip}
   145dc:	mov	r1, #1
   145e0:	str	ip, [sp]
   145e4:	ldr	ip, [r4, #8]
   145e8:	str	ip, [sp, #4]
   145ec:	ldr	ip, [r4, #12]
   145f0:	str	ip, [sp, #8]
   145f4:	ldr	ip, [r4, #16]
   145f8:	str	ip, [sp, #12]
   145fc:	ldr	ip, [r4, #20]
   14600:	str	ip, [sp, #16]
   14604:	ldr	ip, [r4, #24]
   14608:	str	ip, [sp, #20]
   1460c:	ldr	ip, [r4, #28]
   14610:	str	ip, [sp, #24]
   14614:	mov	r2, r0
   14618:	mov	r0, r5
   1461c:	bl	112a0 <__fprintf_chk@plt>
   14620:	b	143e8 <close_stdout@@Base+0x1b44>
   14624:	str	r3, [sp]
   14628:	mov	r3, r2
   1462c:	ldr	r2, [pc, #84]	; 14688 <close_stdout@@Base+0x1de4>
   14630:	mov	r1, #1
   14634:	add	r2, pc, r2
   14638:	bl	112a0 <__fprintf_chk@plt>
   1463c:	b	14300 <close_stdout@@Base+0x1a5c>
   14640:	ldr	r1, [pc, #68]	; 1468c <close_stdout@@Base+0x1de8>
   14644:	mov	r0, #0
   14648:	add	r1, pc, r1
   1464c:	b	14390 <close_stdout@@Base+0x1aec>
   14650:	andeq	r4, r1, r4, lsr #26
   14654:	andeq	r3, r0, r4, ror #13
   14658:	andeq	r3, r0, r4, ror #13
   1465c:	andeq	r0, r0, r4, lsr r1
   14660:			; <UNDEFINED> instruction: 0x000036b4
   14664:	andeq	r3, r0, r0, asr #16
   14668:	andeq	r3, r0, r0, asr #13
   1466c:	andeq	r3, r0, r0, lsr #13
   14670:	andeq	r3, r0, r4, lsl #13
   14674:	andeq	r3, r0, r4, ror #12
   14678:	andeq	r3, r0, r4, asr #12
   1467c:	andeq	r3, r0, r0, lsr #12
   14680:	strdeq	r3, [r0], -r8
   14684:	andeq	r3, r0, ip, asr #11
   14688:			; <UNDEFINED> instruction: 0x000033b4
   1468c:			; <UNDEFINED> instruction: 0x000035b8
   14690:	push	{r4, r5, lr}
   14694:	sub	sp, sp, #12
   14698:	ldr	r5, [sp, #24]
   1469c:	ldr	ip, [r5]
   146a0:	cmp	ip, #0
   146a4:	beq	146c0 <close_stdout@@Base+0x1e1c>
   146a8:	mov	lr, r5
   146ac:	mov	ip, #0
   146b0:	ldr	r4, [lr, #4]!
   146b4:	add	ip, ip, #1
   146b8:	cmp	r4, #0
   146bc:	bne	146b0 <close_stdout@@Base+0x1e0c>
   146c0:	stm	sp, {r5, ip}
   146c4:	bl	142bc <close_stdout@@Base+0x1a18>
   146c8:	add	sp, sp, #12
   146cc:	pop	{r4, r5, pc}
   146d0:	push	{r4, r5, r6, r7, lr}
   146d4:	sub	sp, sp, #60	; 0x3c
   146d8:	ldr	r4, [pc, #100]	; 14744 <close_stdout@@Base+0x1ea0>
   146dc:	mov	ip, #0
   146e0:	ldr	r5, [pc, #96]	; 14748 <close_stdout@@Base+0x1ea4>
   146e4:	mov	lr, ip
   146e8:	add	r4, pc, r4
   146ec:	ldr	r6, [sp, #80]	; 0x50
   146f0:	ldr	r7, [r4, r5]
   146f4:	add	r5, sp, #12
   146f8:	ldr	r4, [r7]
   146fc:	str	r4, [sp, #52]	; 0x34
   14700:	ldr	r4, [r6, ip]
   14704:	cmp	r4, #0
   14708:	str	r4, [r5, ip]
   1470c:	beq	14720 <close_stdout@@Base+0x1e7c>
   14710:	add	lr, lr, #1
   14714:	add	ip, ip, #4
   14718:	cmp	lr, #10
   1471c:	bne	14700 <close_stdout@@Base+0x1e5c>
   14720:	stm	sp, {r5, lr}
   14724:	bl	142bc <close_stdout@@Base+0x1a18>
   14728:	ldr	r2, [sp, #52]	; 0x34
   1472c:	ldr	r3, [r7]
   14730:	cmp	r2, r3
   14734:	bne	14740 <close_stdout@@Base+0x1e9c>
   14738:	add	sp, sp, #60	; 0x3c
   1473c:	pop	{r4, r5, r6, r7, pc}
   14740:	bl	11120 <__stack_chk_fail@plt>
   14744:	andeq	r4, r1, r0, lsl r9
   14748:	andeq	r0, r0, r8, lsl #2
   1474c:	push	{r3}		; (str r3, [sp, #-4]!)
   14750:	push	{r4, lr}
   14754:	sub	sp, sp, #20
   14758:	ldr	lr, [pc, #72]	; 147a8 <close_stdout@@Base+0x1f04>
   1475c:	add	ip, sp, #32
   14760:	ldr	r4, [pc, #68]	; 147ac <close_stdout@@Base+0x1f08>
   14764:	add	lr, pc, lr
   14768:	ldr	r3, [sp, #28]
   1476c:	ldr	r4, [lr, r4]
   14770:	str	ip, [sp]
   14774:	str	ip, [sp, #8]
   14778:	ldr	ip, [r4]
   1477c:	str	ip, [sp, #12]
   14780:	bl	146d0 <close_stdout@@Base+0x1e2c>
   14784:	ldr	r2, [sp, #12]
   14788:	ldr	r3, [r4]
   1478c:	cmp	r2, r3
   14790:	bne	147a4 <close_stdout@@Base+0x1f00>
   14794:	add	sp, sp, #20
   14798:	pop	{r4, lr}
   1479c:	add	sp, sp, #4
   147a0:	bx	lr
   147a4:	bl	11120 <__stack_chk_fail@plt>
   147a8:	muleq	r1, r4, r8
   147ac:	andeq	r0, r0, r8, lsl #2
   147b0:	ldr	r1, [pc, #132]	; 1483c <close_stdout@@Base+0x1f98>
   147b4:	mov	r2, #5
   147b8:	push	{r4, lr}
   147bc:	add	r1, pc, r1
   147c0:	mov	r0, #0
   147c4:	ldr	r4, [pc, #116]	; 14840 <close_stdout@@Base+0x1f9c>
   147c8:	bl	11114 <dcgettext@plt>
   147cc:	ldr	r2, [pc, #112]	; 14844 <close_stdout@@Base+0x1fa0>
   147d0:	add	r4, pc, r4
   147d4:	add	r2, pc, r2
   147d8:	mov	r1, r0
   147dc:	mov	r0, #1
   147e0:	bl	11288 <__printf_chk@plt>
   147e4:	ldr	r1, [pc, #92]	; 14848 <close_stdout@@Base+0x1fa4>
   147e8:	mov	r2, #5
   147ec:	mov	r0, #0
   147f0:	add	r1, pc, r1
   147f4:	bl	11114 <dcgettext@plt>
   147f8:	ldr	r2, [pc, #76]	; 1484c <close_stdout@@Base+0x1fa8>
   147fc:	ldr	r3, [pc, #76]	; 14850 <close_stdout@@Base+0x1fac>
   14800:	add	r2, pc, r2
   14804:	add	r3, pc, r3
   14808:	mov	r1, r0
   1480c:	mov	r0, #1
   14810:	bl	11288 <__printf_chk@plt>
   14814:	ldr	r1, [pc, #56]	; 14854 <close_stdout@@Base+0x1fb0>
   14818:	mov	r0, #0
   1481c:	mov	r2, #5
   14820:	add	r1, pc, r1
   14824:	bl	11114 <dcgettext@plt>
   14828:	ldr	r3, [pc, #40]	; 14858 <close_stdout@@Base+0x1fb4>
   1482c:	ldr	r3, [r4, r3]
   14830:	pop	{r4, lr}
   14834:	ldr	r1, [r3]
   14838:	b	11084 <fputs_unlocked@plt>
   1483c:	andeq	r3, r0, r0, lsl #9
   14840:	andeq	r4, r1, r8, lsr #16
   14844:	andeq	r3, r0, r0, lsl #9
   14848:	andeq	r3, r0, ip, ror r4
   1484c:	andeq	r2, r0, r0, lsl #29
   14850:	andeq	r2, r0, ip, lsl #29
   14854:	andeq	r3, r0, r0, ror #8
   14858:	andeq	r0, r0, r4, lsr #2
   1485c:	push	{r4, lr}
   14860:	mov	r4, r0
   14864:	bl	111c8 <malloc@plt>
   14868:	rsbs	r3, r0, #1
   1486c:	movcc	r3, #0
   14870:	cmp	r4, #0
   14874:	moveq	r3, #0
   14878:	cmp	r3, #0
   1487c:	popeq	{r4, pc}
   14880:	bl	14a70 <close_stdout@@Base+0x21cc>
   14884:	push	{r3, r4, r5, lr}
   14888:	mov	r4, r0
   1488c:	mvn	r0, #0
   14890:	mov	r5, r1
   14894:	bl	16ec4 <close_stdout@@Base+0x4620>
   14898:	cmp	r0, r4
   1489c:	bcc	148ac <close_stdout@@Base+0x2008>
   148a0:	mul	r0, r4, r5
   148a4:	pop	{r3, r4, r5, lr}
   148a8:	b	1485c <close_stdout@@Base+0x1fb8>
   148ac:	bl	14a70 <close_stdout@@Base+0x21cc>
   148b0:	b	1485c <close_stdout@@Base+0x1fb8>
   148b4:	rsbs	r3, r1, #1
   148b8:	push	{r4, lr}
   148bc:	movcc	r3, #0
   148c0:	cmp	r0, #0
   148c4:	mov	r4, r1
   148c8:	moveq	r3, #0
   148cc:	cmp	r3, #0
   148d0:	bne	148f4 <close_stdout@@Base+0x2050>
   148d4:	bl	1112c <realloc@plt>
   148d8:	rsbs	r3, r0, #1
   148dc:	movcc	r3, #0
   148e0:	cmp	r4, #0
   148e4:	moveq	r3, #0
   148e8:	cmp	r3, #0
   148ec:	popeq	{r4, pc}
   148f0:	bl	14a70 <close_stdout@@Base+0x21cc>
   148f4:	bl	110c0 <free@plt>
   148f8:	mov	r0, #0
   148fc:	pop	{r4, pc}
   14900:	push	{r4, r5, r6, lr}
   14904:	mov	r5, r1
   14908:	mov	r6, r0
   1490c:	mov	r1, r2
   14910:	mvn	r0, #0
   14914:	mov	r4, r2
   14918:	bl	16ec4 <close_stdout@@Base+0x4620>
   1491c:	cmp	r0, r5
   14920:	bcc	14934 <close_stdout@@Base+0x2090>
   14924:	mov	r0, r6
   14928:	mul	r1, r5, r4
   1492c:	pop	{r4, r5, r6, lr}
   14930:	b	148b4 <close_stdout@@Base+0x2010>
   14934:	bl	14a70 <close_stdout@@Base+0x21cc>
   14938:	push	{r3, r4, r5, r6, r7, lr}
   1493c:	subs	r7, r0, #0
   14940:	mov	r5, r1
   14944:	mov	r6, r2
   14948:	ldr	r4, [r1]
   1494c:	beq	14984 <close_stdout@@Base+0x20e0>
   14950:	movw	r0, #43690	; 0xaaaa
   14954:	mov	r1, r2
   14958:	bfi	r0, r0, #16, #16
   1495c:	bl	16ec4 <close_stdout@@Base+0x4620>
   14960:	cmp	r4, r0
   14964:	addcc	r3, r4, #1
   14968:	addcc	r4, r4, r3, lsr #1
   1496c:	bcs	149a8 <close_stdout@@Base+0x2104>
   14970:	str	r4, [r5]
   14974:	mov	r0, r7
   14978:	mul	r1, r6, r4
   1497c:	pop	{r3, r4, r5, r6, r7, lr}
   14980:	b	148b4 <close_stdout@@Base+0x2010>
   14984:	cmp	r4, #0
   14988:	bne	14970 <close_stdout@@Base+0x20cc>
   1498c:	mov	r0, #64	; 0x40
   14990:	mov	r1, r2
   14994:	bl	16ec4 <close_stdout@@Base+0x4620>
   14998:	cmp	r0, #0
   1499c:	movne	r4, r0
   149a0:	addeq	r4, r0, #1
   149a4:	b	14970 <close_stdout@@Base+0x20cc>
   149a8:	bl	14a70 <close_stdout@@Base+0x21cc>
   149ac:	cmp	r0, #0
   149b0:	push	{r3, lr}
   149b4:	ldr	r3, [r1]
   149b8:	beq	149e4 <close_stdout@@Base+0x2140>
   149bc:	movw	r2, #43689	; 0xaaa9
   149c0:	movt	r2, #43690	; 0xaaaa
   149c4:	cmp	r3, r2
   149c8:	addls	r2, r3, #1
   149cc:	addls	r3, r3, r2, lsr #1
   149d0:	bhi	149fc <close_stdout@@Base+0x2158>
   149d4:	str	r3, [r1]
   149d8:	mov	r1, r3
   149dc:	pop	{r3, lr}
   149e0:	b	148b4 <close_stdout@@Base+0x2010>
   149e4:	cmp	r3, #0
   149e8:	moveq	r3, #64	; 0x40
   149ec:	str	r3, [r1]
   149f0:	mov	r1, r3
   149f4:	pop	{r3, lr}
   149f8:	b	148b4 <close_stdout@@Base+0x2010>
   149fc:	bl	14a70 <close_stdout@@Base+0x21cc>
   14a00:	push	{r4, lr}
   14a04:	mov	r4, r0
   14a08:	bl	1485c <close_stdout@@Base+0x1fb8>
   14a0c:	mov	r2, r4
   14a10:	mov	r1, #0
   14a14:	pop	{r4, lr}
   14a18:	b	11270 <memset@plt>
   14a1c:	push	{r3, lr}
   14a20:	bl	11078 <calloc@plt>
   14a24:	cmp	r0, #0
   14a28:	popne	{r3, pc}
   14a2c:	bl	14a70 <close_stdout@@Base+0x21cc>
   14a30:	push	{r3, r4, r5, lr}
   14a34:	mov	r4, r1
   14a38:	mov	r5, r0
   14a3c:	mov	r0, r1
   14a40:	bl	1485c <close_stdout@@Base+0x1fb8>
   14a44:	mov	r1, r5
   14a48:	mov	r2, r4
   14a4c:	pop	{r3, r4, r5, lr}
   14a50:	b	110d8 <memcpy@plt>
   14a54:	push	{r4, lr}
   14a58:	mov	r4, r0
   14a5c:	bl	11228 <strlen@plt>
   14a60:	add	r1, r0, #1
   14a64:	mov	r0, r4
   14a68:	pop	{r4, lr}
   14a6c:	b	14a30 <close_stdout@@Base+0x218c>
   14a70:	ldr	r3, [pc, #64]	; 14ab8 <close_stdout@@Base+0x2214>
   14a74:	mov	r2, #5
   14a78:	ldr	ip, [pc, #60]	; 14abc <close_stdout@@Base+0x2218>
   14a7c:	mov	r0, #0
   14a80:	add	r3, pc, r3
   14a84:	ldr	r1, [pc, #52]	; 14ac0 <close_stdout@@Base+0x221c>
   14a88:	push	{r4, lr}
   14a8c:	add	r1, pc, r1
   14a90:	ldr	r3, [r3, ip]
   14a94:	ldr	r4, [r3]
   14a98:	bl	11114 <dcgettext@plt>
   14a9c:	ldr	r2, [pc, #32]	; 14ac4 <close_stdout@@Base+0x2220>
   14aa0:	mov	r1, #0
   14aa4:	add	r2, pc, r2
   14aa8:	mov	r3, r0
   14aac:	mov	r0, r4
   14ab0:	bl	11198 <error@plt>
   14ab4:	bl	11318 <abort@plt>
   14ab8:	andeq	r4, r1, r8, ror r5
   14abc:	andeq	r0, r0, r8, lsr #2
   14ac0:	andeq	r3, r0, r4, ror #4
   14ac4:	andeq	r2, r0, r0, ror lr
   14ac8:	ldr	ip, [pc, #192]	; 14b90 <close_stdout@@Base+0x22ec>
   14acc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14ad0:	mov	r6, r0
   14ad4:	ldr	r0, [pc, #184]	; 14b94 <close_stdout@@Base+0x22f0>
   14ad8:	add	ip, pc, ip
   14adc:	mov	sl, r3
   14ae0:	sub	sp, sp, #8
   14ae4:	mov	r9, r2
   14ae8:	mov	r4, r1
   14aec:	ldr	r5, [ip, r0]
   14af0:	mov	r1, ip
   14af4:	mov	r8, #0
   14af8:	ldr	r3, [r5]
   14afc:	str	r3, [sp, #4]
   14b00:	bl	1124c <__errno_location@plt>
   14b04:	mov	r1, sp
   14b08:	mov	r7, r0
   14b0c:	mov	r0, r6
   14b10:	str	r8, [r7]
   14b14:	blx	sl
   14b18:	ldr	r3, [sp]
   14b1c:	cmp	r3, r6
   14b20:	beq	14b70 <close_stdout@@Base+0x22cc>
   14b24:	cmp	r4, r8
   14b28:	beq	14b78 <close_stdout@@Base+0x22d4>
   14b2c:	vcmp.f64	d0, #0.0
   14b30:	vmrs	APSR_nzcv, fpscr
   14b34:	moveq	r0, #1
   14b38:	bne	14b60 <close_stdout@@Base+0x22bc>
   14b3c:	cmp	r4, #0
   14b40:	strne	r3, [r4]
   14b44:	ldr	r2, [sp, #4]
   14b48:	vstr	d0, [r9]
   14b4c:	ldr	r3, [r5]
   14b50:	cmp	r2, r3
   14b54:	bne	14b8c <close_stdout@@Base+0x22e8>
   14b58:	add	sp, sp, #8
   14b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b60:	ldr	r0, [r7]
   14b64:	subs	r0, r0, #34	; 0x22
   14b68:	movne	r0, #1
   14b6c:	b	14b3c <close_stdout@@Base+0x2298>
   14b70:	mov	r0, r8
   14b74:	b	14b3c <close_stdout@@Base+0x2298>
   14b78:	ldrb	r2, [r3]
   14b7c:	cmp	r2, r8
   14b80:	movne	r0, r4
   14b84:	bne	14b44 <close_stdout@@Base+0x22a0>
   14b88:	b	14b2c <close_stdout@@Base+0x2288>
   14b8c:	bl	11120 <__stack_chk_fail@plt>
   14b90:	andeq	r4, r1, r0, lsr #10
   14b94:	andeq	r0, r0, r8, lsl #2
   14b98:	ldr	ip, [pc, #84]	; 14bf4 <close_stdout@@Base+0x2350>
   14b9c:	push	{r1, r2, r3}
   14ba0:	add	ip, pc, ip
   14ba4:	push	{r4, lr}
   14ba8:	sub	sp, sp, #12
   14bac:	ldr	lr, [pc, #68]	; 14bf8 <close_stdout@@Base+0x2354>
   14bb0:	add	r3, sp, #24
   14bb4:	ldr	r1, [sp, #20]
   14bb8:	mov	r2, r3
   14bbc:	ldr	r4, [ip, lr]
   14bc0:	str	r3, [sp]
   14bc4:	ldr	r3, [r4]
   14bc8:	str	r3, [sp, #4]
   14bcc:	bl	14bfc <close_stdout@@Base+0x2358>
   14bd0:	ldr	r2, [sp, #4]
   14bd4:	ldr	r3, [r4]
   14bd8:	cmp	r2, r3
   14bdc:	bne	14bf0 <close_stdout@@Base+0x234c>
   14be0:	add	sp, sp, #12
   14be4:	pop	{r4, lr}
   14be8:	add	sp, sp, #12
   14bec:	bx	lr
   14bf0:	bl	11120 <__stack_chk_fail@plt>
   14bf4:	andeq	r4, r1, r8, asr r4
   14bf8:	andeq	r0, r0, r8, lsl #2
   14bfc:	ldr	ip, [pc, #136]	; 14c8c <close_stdout@@Base+0x23e8>
   14c00:	mov	r3, r2
   14c04:	push	{r4, r5, lr}
   14c08:	add	ip, pc, ip
   14c0c:	ldr	lr, [pc, #124]	; 14c90 <close_stdout@@Base+0x23ec>
   14c10:	sub	sp, sp, #12
   14c14:	mov	r2, r1
   14c18:	mov	r5, r0
   14c1c:	mov	r1, sp
   14c20:	mov	r0, #0
   14c24:	ldr	r4, [ip, lr]
   14c28:	ldr	ip, [r4]
   14c2c:	str	ip, [sp, #4]
   14c30:	bl	152dc <close_stdout@@Base+0x2a38>
   14c34:	subs	r2, r0, #0
   14c38:	beq	14c68 <close_stdout@@Base+0x23c4>
   14c3c:	ldr	r3, [sp]
   14c40:	cmp	r3, #0
   14c44:	strge	r2, [r5]
   14c48:	blt	14c70 <close_stdout@@Base+0x23cc>
   14c4c:	ldr	r2, [sp, #4]
   14c50:	mov	r0, r3
   14c54:	ldr	r3, [r4]
   14c58:	cmp	r2, r3
   14c5c:	bne	14c88 <close_stdout@@Base+0x23e4>
   14c60:	add	sp, sp, #12
   14c64:	pop	{r4, r5, pc}
   14c68:	mvn	r3, #0
   14c6c:	b	14c4c <close_stdout@@Base+0x23a8>
   14c70:	bl	110c0 <free@plt>
   14c74:	bl	1124c <__errno_location@plt>
   14c78:	mov	r2, #75	; 0x4b
   14c7c:	mvn	r3, #0
   14c80:	str	r2, [r0]
   14c84:	b	14c4c <close_stdout@@Base+0x23a8>
   14c88:	bl	11120 <__stack_chk_fail@plt>
   14c8c:	strdeq	r4, [r1], -r0
   14c90:	andeq	r0, r0, r8, lsl #2
   14c94:	push	{r4, r5, r6, lr}
   14c98:	mov	r4, r0
   14c9c:	bl	11180 <__fpending@plt>
   14ca0:	mov	r6, r0
   14ca4:	mov	r0, r4
   14ca8:	ldr	r4, [r4]
   14cac:	bl	15134 <close_stdout@@Base+0x2890>
   14cb0:	and	r4, r4, #32
   14cb4:	adds	r5, r0, #0
   14cb8:	movne	r5, #1
   14cbc:	cmp	r4, #0
   14cc0:	bne	14ce0 <close_stdout@@Base+0x243c>
   14cc4:	cmp	r5, #0
   14cc8:	beq	14cd8 <close_stdout@@Base+0x2434>
   14ccc:	cmp	r6, #0
   14cd0:	beq	14cfc <close_stdout@@Base+0x2458>
   14cd4:	mvn	r4, #0
   14cd8:	mov	r0, r4
   14cdc:	pop	{r4, r5, r6, pc}
   14ce0:	cmp	r5, #0
   14ce4:	bne	14cd4 <close_stdout@@Base+0x2430>
   14ce8:	bl	1124c <__errno_location@plt>
   14cec:	mvn	r4, #0
   14cf0:	str	r5, [r0]
   14cf4:	mov	r0, r4
   14cf8:	pop	{r4, r5, r6, pc}
   14cfc:	bl	1124c <__errno_location@plt>
   14d00:	ldr	r4, [r0]
   14d04:	subs	r4, r4, #9
   14d08:	mvnne	r4, #0
   14d0c:	mov	r0, r4
   14d10:	pop	{r4, r5, r6, pc}
   14d14:	ldr	r3, [pc, #984]	; 150f4 <close_stdout@@Base+0x2850>
   14d18:	mov	r0, #14
   14d1c:	ldr	r2, [pc, #980]	; 150f8 <close_stdout@@Base+0x2854>
   14d20:	add	r3, pc, r3
   14d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d28:	sub	sp, sp, #132	; 0x84
   14d2c:	ldr	r6, [r3, r2]
   14d30:	ldr	r3, [r6]
   14d34:	str	r3, [sp, #124]	; 0x7c
   14d38:	bl	112e8 <nl_langinfo@plt>
   14d3c:	subs	r5, r0, #0
   14d40:	beq	14df4 <close_stdout@@Base+0x2550>
   14d44:	ldr	r3, [pc, #944]	; 150fc <close_stdout@@Base+0x2858>
   14d48:	ldr	r4, [pc, r3]
   14d4c:	cmp	r4, #0
   14d50:	beq	14e00 <close_stdout@@Base+0x255c>
   14d54:	ldrb	r7, [r4]
   14d58:	cmp	r7, #0
   14d5c:	bne	14d90 <close_stdout@@Base+0x24ec>
   14d60:	b	14dc8 <close_stdout@@Base+0x2524>
   14d64:	mov	r0, r4
   14d68:	bl	11228 <strlen@plt>
   14d6c:	add	r0, r0, #1
   14d70:	add	r7, r4, r0
   14d74:	mov	r0, r7
   14d78:	bl	11228 <strlen@plt>
   14d7c:	add	r0, r0, #1
   14d80:	add	r4, r7, r0
   14d84:	ldrb	r7, [r7, r0]
   14d88:	cmp	r7, #0
   14d8c:	beq	14dc8 <close_stdout@@Base+0x2524>
   14d90:	mov	r0, r5
   14d94:	mov	r1, r4
   14d98:	bl	1109c <strcmp@plt>
   14d9c:	cmp	r0, #0
   14da0:	beq	14db8 <close_stdout@@Base+0x2514>
   14da4:	cmp	r7, #42	; 0x2a
   14da8:	bne	14d64 <close_stdout@@Base+0x24c0>
   14dac:	ldrb	r3, [r4, #1]
   14db0:	cmp	r3, #0
   14db4:	bne	14d64 <close_stdout@@Base+0x24c0>
   14db8:	mov	r0, r4
   14dbc:	bl	11228 <strlen@plt>
   14dc0:	add	r0, r0, #1
   14dc4:	add	r5, r4, r0
   14dc8:	ldrb	r3, [r5]
   14dcc:	cmp	r3, #0
   14dd0:	ldreq	r5, [pc, #808]	; 15100 <close_stdout@@Base+0x285c>
   14dd4:	addeq	r5, pc, r5
   14dd8:	ldr	r2, [sp, #124]	; 0x7c
   14ddc:	mov	r0, r5
   14de0:	ldr	r3, [r6]
   14de4:	cmp	r2, r3
   14de8:	bne	150c8 <close_stdout@@Base+0x2824>
   14dec:	add	sp, sp, #132	; 0x84
   14df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14df4:	ldr	r5, [pc, #776]	; 15104 <close_stdout@@Base+0x2860>
   14df8:	add	r5, pc, r5
   14dfc:	b	14d44 <close_stdout@@Base+0x24a0>
   14e00:	ldr	r0, [pc, #768]	; 15108 <close_stdout@@Base+0x2864>
   14e04:	add	r0, pc, r0
   14e08:	bl	111b0 <getenv@plt>
   14e0c:	subs	r8, r0, #0
   14e10:	beq	150a0 <close_stdout@@Base+0x27fc>
   14e14:	ldrb	r3, [r8]
   14e18:	cmp	r3, #0
   14e1c:	beq	15034 <close_stdout@@Base+0x2790>
   14e20:	bl	11228 <strlen@plt>
   14e24:	subs	sl, r0, #0
   14e28:	subne	r3, sl, #1
   14e2c:	bne	15044 <close_stdout@@Base+0x27a0>
   14e30:	mov	r9, #0
   14e34:	mov	fp, r9
   14e38:	add	r9, sl, r9
   14e3c:	add	r0, r9, #14
   14e40:	bl	111c8 <malloc@plt>
   14e44:	subs	r7, r0, #0
   14e48:	beq	15094 <close_stdout@@Base+0x27f0>
   14e4c:	mov	r1, r8
   14e50:	mov	r2, sl
   14e54:	bl	110d8 <memcpy@plt>
   14e58:	cmp	fp, #0
   14e5c:	add	ip, r7, r9
   14e60:	movne	r3, #47	; 0x2f
   14e64:	strbne	r3, [r7, sl]
   14e68:	ldr	r3, [pc, #668]	; 1510c <close_stdout@@Base+0x2868>
   14e6c:	add	r3, pc, r3
   14e70:	ldm	r3!, {r0, r1, r2}
   14e74:	ldrh	r3, [r3]
   14e78:	str	r0, [r7, r9]
   14e7c:	mov	r0, r7
   14e80:	str	r1, [ip, #4]
   14e84:	mov	r1, #32768	; 0x8000
   14e88:	strh	r3, [ip, #12]
   14e8c:	str	r2, [ip, #8]
   14e90:	bl	111a4 <open64@plt>
   14e94:	subs	r8, r0, #0
   14e98:	blt	1505c <close_stdout@@Base+0x27b8>
   14e9c:	ldr	r1, [pc, #620]	; 15110 <close_stdout@@Base+0x286c>
   14ea0:	add	r1, pc, r1
   14ea4:	bl	1106c <fdopen@plt>
   14ea8:	subs	fp, r0, #0
   14eac:	beq	150b4 <close_stdout@@Base+0x2810>
   14eb0:	ldr	r0, [pc, #604]	; 15114 <close_stdout@@Base+0x2870>
   14eb4:	add	sl, sp, #20
   14eb8:	add	r9, sp, #72	; 0x48
   14ebc:	mov	r8, #0
   14ec0:	add	r0, pc, r0
   14ec4:	str	r0, [sp, #12]
   14ec8:	ldr	r3, [fp, #4]
   14ecc:	ldr	r2, [fp, #8]
   14ed0:	cmp	r3, r2
   14ed4:	bcs	14fc0 <close_stdout@@Base+0x271c>
   14ed8:	add	r2, r3, #1
   14edc:	str	r2, [fp, #4]
   14ee0:	ldrb	r0, [r3]
   14ee4:	cmp	r0, #32
   14ee8:	beq	14ec8 <close_stdout@@Base+0x2624>
   14eec:	sub	r3, r0, #9
   14ef0:	cmp	r3, #1
   14ef4:	bls	14ec8 <close_stdout@@Base+0x2624>
   14ef8:	cmp	r0, #35	; 0x23
   14efc:	beq	14fd4 <close_stdout@@Base+0x2730>
   14f00:	mov	r1, fp
   14f04:	bl	11240 <ungetc@plt>
   14f08:	mov	r0, fp
   14f0c:	ldr	r1, [sp, #12]
   14f10:	mov	r2, sl
   14f14:	mov	r3, r9
   14f18:	bl	1127c <fscanf@plt>
   14f1c:	cmp	r0, #1
   14f20:	ble	15004 <close_stdout@@Base+0x2760>
   14f24:	mov	r0, sl
   14f28:	bl	11228 <strlen@plt>
   14f2c:	str	r0, [sp, #8]
   14f30:	mov	r0, r9
   14f34:	bl	11228 <strlen@plt>
   14f38:	cmp	r8, #0
   14f3c:	mov	r2, r0
   14f40:	bne	15068 <close_stdout@@Base+0x27c4>
   14f44:	ldr	r3, [sp, #8]
   14f48:	str	r2, [sp]
   14f4c:	add	r8, r0, r3
   14f50:	add	r0, r8, #3
   14f54:	add	r8, r8, #2
   14f58:	bl	111c8 <malloc@plt>
   14f5c:	ldr	r2, [sp]
   14f60:	mov	r3, r0
   14f64:	cmp	r3, #0
   14f68:	beq	150cc <close_stdout@@Base+0x2828>
   14f6c:	ldr	r0, [sp, #8]
   14f70:	movw	r1, #65534	; 0xfffe
   14f74:	movt	r1, #65535	; 0xffff
   14f78:	rsb	r2, r2, r8
   14f7c:	rsb	r1, r0, r1
   14f80:	stm	sp, {r2, r3}
   14f84:	add	r0, r1, r2
   14f88:	mov	r1, sl
   14f8c:	add	r0, r3, r0
   14f90:	mov	r4, r3
   14f94:	bl	11174 <strcpy@plt>
   14f98:	ldr	r2, [sp]
   14f9c:	ldr	r3, [sp, #4]
   14fa0:	mov	r1, r9
   14fa4:	sub	r0, r2, #1
   14fa8:	add	r0, r3, r0
   14fac:	bl	11174 <strcpy@plt>
   14fb0:	ldr	r3, [fp, #4]
   14fb4:	ldr	r2, [fp, #8]
   14fb8:	cmp	r3, r2
   14fbc:	bcc	14ed8 <close_stdout@@Base+0x2634>
   14fc0:	mov	r0, fp
   14fc4:	bl	112c4 <__uflow@plt>
   14fc8:	cmn	r0, #1
   14fcc:	beq	15004 <close_stdout@@Base+0x2760>
   14fd0:	b	14ee4 <close_stdout@@Base+0x2640>
   14fd4:	ldr	r3, [fp, #4]
   14fd8:	ldr	r2, [fp, #8]
   14fdc:	cmp	r3, r2
   14fe0:	bcs	150e8 <close_stdout@@Base+0x2844>
   14fe4:	add	r2, r3, #1
   14fe8:	str	r2, [fp, #4]
   14fec:	ldrb	r0, [r3]
   14ff0:	cmp	r0, #10
   14ff4:	cmnne	r0, #1
   14ff8:	bne	14fd4 <close_stdout@@Base+0x2730>
   14ffc:	cmn	r0, #1
   15000:	bne	14ec8 <close_stdout@@Base+0x2624>
   15004:	mov	r0, fp
   15008:	bl	15134 <close_stdout@@Base+0x2890>
   1500c:	cmp	r8, #0
   15010:	beq	1505c <close_stdout@@Base+0x27b8>
   15014:	mov	r3, #0
   15018:	strb	r3, [r4, r8]
   1501c:	mov	r0, r7
   15020:	bl	110c0 <free@plt>
   15024:	ldr	r3, [pc, #236]	; 15118 <close_stdout@@Base+0x2874>
   15028:	add	r3, pc, r3
   1502c:	str	r4, [r3]
   15030:	b	14d54 <close_stdout@@Base+0x24b0>
   15034:	ldr	r8, [pc, #224]	; 1511c <close_stdout@@Base+0x2878>
   15038:	mov	r3, #7
   1503c:	mov	sl, #8
   15040:	add	r8, pc, r8
   15044:	ldrb	r3, [r8, r3]
   15048:	cmp	r3, #47	; 0x2f
   1504c:	movne	r9, #1
   15050:	movne	fp, r9
   15054:	bne	14e38 <close_stdout@@Base+0x2594>
   15058:	b	14e30 <close_stdout@@Base+0x258c>
   1505c:	ldr	r4, [pc, #188]	; 15120 <close_stdout@@Base+0x287c>
   15060:	add	r4, pc, r4
   15064:	b	1501c <close_stdout@@Base+0x2778>
   15068:	ldr	r0, [sp, #8]
   1506c:	str	r2, [sp]
   15070:	add	r3, r0, r2
   15074:	mov	r0, r4
   15078:	add	r8, r3, r8
   1507c:	add	r1, r8, #3
   15080:	add	r8, r8, #2
   15084:	bl	1112c <realloc@plt>
   15088:	ldr	r2, [sp]
   1508c:	mov	r3, r0
   15090:	b	14f64 <close_stdout@@Base+0x26c0>
   15094:	ldr	r4, [pc, #136]	; 15124 <close_stdout@@Base+0x2880>
   15098:	add	r4, pc, r4
   1509c:	b	15024 <close_stdout@@Base+0x2780>
   150a0:	ldr	r8, [pc, #128]	; 15128 <close_stdout@@Base+0x2884>
   150a4:	mov	r3, #7
   150a8:	mov	sl, #8
   150ac:	add	r8, pc, r8
   150b0:	b	15044 <close_stdout@@Base+0x27a0>
   150b4:	ldr	r4, [pc, #112]	; 1512c <close_stdout@@Base+0x2888>
   150b8:	mov	r0, r8
   150bc:	add	r4, pc, r4
   150c0:	bl	11324 <close@plt>
   150c4:	b	1501c <close_stdout@@Base+0x2778>
   150c8:	bl	11120 <__stack_chk_fail@plt>
   150cc:	mov	r0, r4
   150d0:	ldr	r4, [pc, #88]	; 15130 <close_stdout@@Base+0x288c>
   150d4:	bl	110c0 <free@plt>
   150d8:	mov	r0, fp
   150dc:	add	r4, pc, r4
   150e0:	bl	15134 <close_stdout@@Base+0x2890>
   150e4:	b	1501c <close_stdout@@Base+0x2778>
   150e8:	mov	r0, fp
   150ec:	bl	112c4 <__uflow@plt>
   150f0:	b	14ff0 <close_stdout@@Base+0x274c>
   150f4:	ldrdeq	r4, [r1], -r8
   150f8:	andeq	r0, r0, r8, lsl #2
   150fc:	andeq	r4, r1, r4, lsr #11
   15100:	andeq	r2, r0, ip, lsr pc
   15104:	andeq	r2, r0, ip, asr #18
   15108:	andeq	r2, r0, r4, lsl pc
   1510c:			; <UNDEFINED> instruction: 0x00002ebc
   15110:	andeq	r2, r0, r8, asr #20
   15114:	andeq	r2, r0, r8, ror lr
   15118:	andeq	r4, r1, r4, asr #5
   1511c:	andeq	r2, r0, r4, asr #25
   15120:	andeq	r2, r0, r4, ror #13
   15124:	andeq	r2, r0, ip, lsr #13
   15128:	andeq	r2, r0, r8, asr ip
   1512c:	andeq	r2, r0, r8, lsl #13
   15130:	andeq	r2, r0, r8, ror #12
   15134:	push	{r4, r5, r6, lr}
   15138:	sub	sp, sp, #8
   1513c:	mov	r4, r0
   15140:	bl	11294 <fileno@plt>
   15144:	cmp	r0, #0
   15148:	mov	r0, r4
   1514c:	blt	151c8 <close_stdout@@Base+0x2924>
   15150:	bl	111e0 <__freading@plt>
   15154:	cmp	r0, #0
   15158:	bne	15194 <close_stdout@@Base+0x28f0>
   1515c:	mov	r0, r4
   15160:	bl	151d4 <close_stdout@@Base+0x2930>
   15164:	cmp	r0, #0
   15168:	beq	151c4 <close_stdout@@Base+0x2920>
   1516c:	bl	1124c <__errno_location@plt>
   15170:	ldr	r6, [r0]
   15174:	mov	r5, r0
   15178:	mov	r0, r4
   1517c:	bl	112ac <fclose@plt>
   15180:	cmp	r6, #0
   15184:	mvnne	r0, #0
   15188:	strne	r6, [r5]
   1518c:	add	sp, sp, #8
   15190:	pop	{r4, r5, r6, pc}
   15194:	mov	r0, r4
   15198:	bl	11294 <fileno@plt>
   1519c:	mov	r1, #1
   151a0:	mov	r2, #0
   151a4:	mov	r3, #0
   151a8:	str	r1, [sp]
   151ac:	bl	1115c <lseek64@plt>
   151b0:	mvn	r2, #0
   151b4:	mvn	r3, #0
   151b8:	cmp	r1, r3
   151bc:	cmpeq	r0, r2
   151c0:	bne	1515c <close_stdout@@Base+0x28b8>
   151c4:	mov	r0, r4
   151c8:	add	sp, sp, #8
   151cc:	pop	{r4, r5, r6, lr}
   151d0:	b	112ac <fclose@plt>
   151d4:	push	{r4, lr}
   151d8:	subs	r4, r0, #0
   151dc:	sub	sp, sp, #8
   151e0:	beq	151f0 <close_stdout@@Base+0x294c>
   151e4:	bl	111e0 <__freading@plt>
   151e8:	cmp	r0, #0
   151ec:	bne	15200 <close_stdout@@Base+0x295c>
   151f0:	mov	r0, r4
   151f4:	add	sp, sp, #8
   151f8:	pop	{r4, lr}
   151fc:	b	110b4 <fflush@plt>
   15200:	ldr	r3, [r4]
   15204:	tst	r3, #256	; 0x100
   15208:	beq	151f0 <close_stdout@@Base+0x294c>
   1520c:	mov	r3, #1
   15210:	mov	r0, r4
   15214:	str	r3, [sp]
   15218:	mov	r2, #0
   1521c:	mov	r3, #0
   15220:	bl	15234 <close_stdout@@Base+0x2990>
   15224:	mov	r0, r4
   15228:	add	sp, sp, #8
   1522c:	pop	{r4, lr}
   15230:	b	110b4 <fflush@plt>
   15234:	push	{r4, r5, r6, r7, lr}
   15238:	sub	sp, sp, #20
   1523c:	ldmib	r0, {r1, ip}
   15240:	mov	r6, r0
   15244:	ldr	r4, [sp, #40]	; 0x28
   15248:	cmp	ip, r1
   1524c:	beq	15264 <close_stdout@@Base+0x29c0>
   15250:	str	r4, [sp, #40]	; 0x28
   15254:	mov	r0, r6
   15258:	add	sp, sp, #20
   1525c:	pop	{r4, r5, r6, r7, lr}
   15260:	b	112b8 <fseeko64@plt>
   15264:	ldr	ip, [r0, #20]
   15268:	ldr	r1, [r0, #16]
   1526c:	cmp	ip, r1
   15270:	bne	15250 <close_stdout@@Base+0x29ac>
   15274:	ldr	r7, [r0, #36]	; 0x24
   15278:	cmp	r7, #0
   1527c:	bne	15250 <close_stdout@@Base+0x29ac>
   15280:	str	r2, [sp, #12]
   15284:	mvn	r5, #0
   15288:	str	r3, [sp, #8]
   1528c:	bl	11294 <fileno@plt>
   15290:	str	r4, [sp]
   15294:	mvn	r4, #0
   15298:	ldr	r2, [sp, #12]
   1529c:	ldr	r3, [sp, #8]
   152a0:	bl	1115c <lseek64@plt>
   152a4:	mov	r2, r0
   152a8:	mov	r3, r1
   152ac:	cmp	r3, r5
   152b0:	cmpeq	r2, r4
   152b4:	beq	152d4 <close_stdout@@Base+0x2a30>
   152b8:	ldr	r1, [r6]
   152bc:	mov	r0, r7
   152c0:	strd	r2, [r6, #80]	; 0x50
   152c4:	bic	r3, r1, #16
   152c8:	str	r3, [r6]
   152cc:	add	sp, sp, #20
   152d0:	pop	{r4, r5, r6, r7, pc}
   152d4:	mvn	r0, #0
   152d8:	b	152cc <close_stdout@@Base+0x2a28>
   152dc:	ldr	ip, [pc, #3636]	; 16118 <close_stdout@@Base+0x3874>
   152e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152e4:	add	fp, sp, #32
   152e8:	ldr	lr, [pc, #3628]	; 1611c <close_stdout@@Base+0x3878>
   152ec:	sub	sp, sp, #564	; 0x234
   152f0:	add	ip, pc, ip
   152f4:	str	r0, [fp, #-504]	; 0xfffffe08
   152f8:	sub	r4, fp, #484	; 0x1e4
   152fc:	str	r1, [fp, #-536]	; 0xfffffde8
   15300:	mov	r0, r2
   15304:	ldr	lr, [ip, lr]
   15308:	mov	r5, r2
   1530c:	sub	r1, fp, #364	; 0x16c
   15310:	mov	r2, r4
   15314:	mov	r6, r3
   15318:	ldr	ip, [lr]
   1531c:	str	lr, [fp, #-528]	; 0xfffffdf0
   15320:	str	ip, [fp, #-40]	; 0xffffffd8
   15324:	bl	16270 <close_stdout@@Base+0x39cc>
   15328:	cmp	r0, #0
   1532c:	blt	15e1c <close_stdout@@Base+0x3578>
   15330:	mov	r0, r6
   15334:	mov	r1, r4
   15338:	bl	16120 <close_stdout@@Base+0x387c>
   1533c:	cmp	r0, #0
   15340:	blt	15edc <close_stdout@@Base+0x3638>
   15344:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   15348:	ldr	r2, [fp, #-352]	; 0xfffffea0
   1534c:	add	r3, r3, #7
   15350:	cmp	r3, #6
   15354:	mvnls	r3, #0
   15358:	adds	r3, r3, r2
   1535c:	bcs	15678 <close_stdout@@Base+0x2dd4>
   15360:	adds	r0, r3, #6
   15364:	bcs	15678 <close_stdout@@Base+0x2dd4>
   15368:	cmp	r0, #4000	; 0xfa0
   1536c:	bcs	15dc0 <close_stdout@@Base+0x351c>
   15370:	add	r3, r3, #20
   15374:	mov	r1, #0
   15378:	bic	r3, r3, #7
   1537c:	str	r1, [fp, #-548]	; 0xfffffddc
   15380:	sub	sp, sp, r3
   15384:	add	r2, sp, #32
   15388:	str	r2, [fp, #-512]	; 0xfffffe00
   1538c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15390:	sub	r2, fp, #496	; 0x1f0
   15394:	str	r2, [fp, #-532]	; 0xfffffdec
   15398:	mov	ip, #0
   1539c:	cmp	r3, #0
   153a0:	ldr	r3, [fp, #-360]	; 0xfffffe98
   153a4:	ldr	r2, [fp, #-504]	; 0xfffffe08
   153a8:	mov	r6, ip
   153ac:	ldrne	r1, [fp, #-536]	; 0xfffffde8
   153b0:	add	r7, r3, #44	; 0x2c
   153b4:	ldreq	r4, [fp, #-504]	; 0xfffffe08
   153b8:	str	ip, [fp, #-520]	; 0xfffffdf8
   153bc:	ldrne	r4, [r1]
   153c0:	ldr	sl, [r7, #-44]	; 0xffffffd4
   153c4:	sub	r3, r7, #44	; 0x2c
   153c8:	str	r3, [fp, #-540]	; 0xfffffde4
   153cc:	cmp	sl, r5
   153d0:	beq	15c8c <close_stdout@@Base+0x33e8>
   153d4:	rsb	r3, r5, sl
   153d8:	adds	r9, r3, r6
   153dc:	mvncs	r9, #0
   153e0:	cmp	r4, r9
   153e4:	bcs	15c1c <close_stdout@@Base+0x3378>
   153e8:	cmp	r4, #0
   153ec:	beq	15ae8 <close_stdout@@Base+0x3244>
   153f0:	blt	15f18 <close_stdout@@Base+0x3674>
   153f4:	lsl	r4, r4, #1
   153f8:	cmp	r4, r9
   153fc:	movcc	r4, r9
   15400:	cmn	r4, #1
   15404:	beq	15f18 <close_stdout@@Base+0x3674>
   15408:	ldr	r1, [fp, #-504]	; 0xfffffe08
   1540c:	subs	lr, r2, r1
   15410:	rsbs	r8, lr, #0
   15414:	adcs	r8, r8, lr
   15418:	cmp	r2, r1
   1541c:	cmpne	r2, #0
   15420:	bne	15af0 <close_stdout@@Base+0x324c>
   15424:	mov	r0, r4
   15428:	str	r2, [fp, #-560]	; 0xfffffdd0
   1542c:	str	r3, [fp, #-556]	; 0xfffffdd4
   15430:	bl	111c8 <malloc@plt>
   15434:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   15438:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   1543c:	mov	sl, r0
   15440:	cmp	sl, #0
   15444:	beq	15f18 <close_stdout@@Base+0x3674>
   15448:	cmp	r6, #0
   1544c:	moveq	r8, #0
   15450:	andne	r8, r8, #1
   15454:	cmp	r8, #0
   15458:	bne	15c70 <close_stdout@@Base+0x33cc>
   1545c:	add	r0, sl, r6
   15460:	mov	r1, r5
   15464:	mov	r2, r3
   15468:	bl	110d8 <memcpy@plt>
   1546c:	ldr	r3, [fp, #-364]	; 0xfffffe94
   15470:	ldr	r2, [fp, #-520]	; 0xfffffdf8
   15474:	cmp	r3, r2
   15478:	beq	15f2c <close_stdout@@Base+0x3688>
   1547c:	ldrb	r3, [r7, #-8]
   15480:	cmp	r3, #37	; 0x25
   15484:	beq	15b14 <close_stdout@@Base+0x3270>
   15488:	ldr	r2, [r7, #-4]
   1548c:	cmn	r2, #1
   15490:	beq	15dfc <close_stdout@@Base+0x3558>
   15494:	cmp	r3, #110	; 0x6e
   15498:	beq	15c40 <close_stdout@@Base+0x339c>
   1549c:	ldr	r1, [fp, #-480]	; 0xfffffe20
   154a0:	ldr	r3, [r7, #-36]	; 0xffffffdc
   154a4:	ldr	r8, [r1, r2, lsl #4]
   154a8:	tst	r3, #1
   154ac:	ldr	r1, [fp, #-512]	; 0xfffffe00
   154b0:	mov	r2, #37	; 0x25
   154b4:	addeq	r5, r1, #1
   154b8:	strb	r2, [r1]
   154bc:	ldrne	r2, [fp, #-512]	; 0xfffffe00
   154c0:	ldrne	r1, [fp, #-512]	; 0xfffffe00
   154c4:	addne	r5, r2, #2
   154c8:	movne	r2, #39	; 0x27
   154cc:	strbne	r2, [r1, #1]
   154d0:	tst	r3, #2
   154d4:	movne	r2, #45	; 0x2d
   154d8:	strbne	r2, [r5]
   154dc:	addne	r5, r5, #1
   154e0:	tst	r3, #4
   154e4:	movne	r2, #43	; 0x2b
   154e8:	strbne	r2, [r5]
   154ec:	addne	r5, r5, #1
   154f0:	tst	r3, #8
   154f4:	movne	r2, #32
   154f8:	strbne	r2, [r5]
   154fc:	addne	r5, r5, #1
   15500:	tst	r3, #16
   15504:	movne	r2, #35	; 0x23
   15508:	strbne	r2, [r5]
   1550c:	addne	r5, r5, #1
   15510:	tst	r3, #64	; 0x40
   15514:	movne	r2, #73	; 0x49
   15518:	strbne	r2, [r5]
   1551c:	addne	r5, r5, #1
   15520:	tst	r3, #32
   15524:	movne	r3, #48	; 0x30
   15528:	strbne	r3, [r5]
   1552c:	ldr	r1, [r7, #-32]	; 0xffffffe0
   15530:	addne	r5, r5, #1
   15534:	ldr	r2, [r7, #-28]	; 0xffffffe4
   15538:	cmp	r1, r2
   1553c:	beq	15550 <close_stdout@@Base+0x2cac>
   15540:	rsb	r2, r1, r2
   15544:	mov	r0, r5
   15548:	add	r5, r5, r2
   1554c:	bl	110d8 <memcpy@plt>
   15550:	ldr	r1, [r7, #-20]	; 0xffffffec
   15554:	ldr	r2, [r7, #-16]
   15558:	cmp	r1, r2
   1555c:	beq	15570 <close_stdout@@Base+0x2ccc>
   15560:	rsb	r2, r1, r2
   15564:	mov	r0, r5
   15568:	add	r5, r5, r2
   1556c:	bl	110d8 <memcpy@plt>
   15570:	sub	r3, r8, #7
   15574:	cmp	r3, #9
   15578:	bhi	155a0 <close_stdout@@Base+0x2cfc>
   1557c:	mov	r2, #1
   15580:	lsl	r3, r2, r3
   15584:	movw	r2, #643	; 0x283
   15588:	and	r2, r3, r2
   1558c:	cmp	r2, #0
   15590:	beq	15c98 <close_stdout@@Base+0x33f4>
   15594:	mov	r3, #108	; 0x6c
   15598:	add	r5, r5, #1
   1559c:	strb	r3, [r5, #-1]
   155a0:	ldrb	r3, [r7, #-8]
   155a4:	mov	r1, #0
   155a8:	strb	r1, [r5, #1]
   155ac:	strb	r3, [r5]
   155b0:	ldr	r3, [r7, #-24]	; 0xffffffe8
   155b4:	cmn	r3, #1
   155b8:	beq	15db8 <close_stdout@@Base+0x3514>
   155bc:	ldr	r2, [fp, #-480]	; 0xfffffe20
   155c0:	add	r1, r2, r3, lsl #4
   155c4:	ldr	r3, [r2, r3, lsl #4]
   155c8:	cmp	r3, #5
   155cc:	bne	15dfc <close_stdout@@Base+0x3558>
   155d0:	ldr	r3, [r1, #8]
   155d4:	mov	r6, #1
   155d8:	str	r3, [fp, #-492]	; 0xfffffe14
   155dc:	ldr	r3, [r7, #-12]
   155e0:	cmn	r3, #1
   155e4:	beq	15610 <close_stdout@@Base+0x2d6c>
   155e8:	ldr	r2, [fp, #-480]	; 0xfffffe20
   155ec:	add	r1, r2, r3, lsl #4
   155f0:	ldr	r3, [r2, r3, lsl #4]
   155f4:	cmp	r3, #5
   155f8:	bne	15dfc <close_stdout@@Base+0x3558>
   155fc:	ldr	r2, [r1, #8]
   15600:	sub	r1, fp, #36	; 0x24
   15604:	add	r3, r1, r6, lsl #2
   15608:	add	r6, r6, #1
   1560c:	str	r2, [r3, #-456]	; 0xfffffe38
   15610:	adds	r2, r9, #2
   15614:	str	r2, [fp, #-524]	; 0xfffffdf4
   15618:	mov	r3, r2
   1561c:	mvncs	r3, #0
   15620:	cmp	r4, r3
   15624:	bcs	15760 <close_stdout@@Base+0x2ebc>
   15628:	cmp	r4, #0
   1562c:	beq	156d8 <close_stdout@@Base+0x2e34>
   15630:	blt	16104 <close_stdout@@Base+0x3860>
   15634:	cmp	r9, r2
   15638:	lsl	r4, r4, #1
   1563c:	bls	156e8 <close_stdout@@Base+0x2e44>
   15640:	str	sl, [fp, #-560]	; 0xfffffdd0
   15644:	bl	1124c <__errno_location@plt>
   15648:	str	r0, [fp, #-516]	; 0xfffffdfc
   1564c:	mov	r2, sl
   15650:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15654:	cmp	r2, #0
   15658:	cmpne	r2, r3
   1565c:	bne	160a4 <close_stdout@@Base+0x3800>
   15660:	ldr	r1, [fp, #-548]	; 0xfffffddc
   15664:	cmp	r1, #0
   15668:	beq	15678 <close_stdout@@Base+0x2dd4>
   1566c:	mov	r0, r1
   15670:	bl	110c0 <free@plt>
   15674:	b	15680 <close_stdout@@Base+0x2ddc>
   15678:	bl	1124c <__errno_location@plt>
   1567c:	str	r0, [fp, #-516]	; 0xfffffdfc
   15680:	ldr	r0, [fp, #-360]	; 0xfffffe98
   15684:	sub	r3, fp, #348	; 0x15c
   15688:	cmp	r0, r3
   1568c:	beq	15694 <close_stdout@@Base+0x2df0>
   15690:	bl	110c0 <free@plt>
   15694:	ldr	r0, [fp, #-480]	; 0xfffffe20
   15698:	sub	r3, fp, #476	; 0x1dc
   1569c:	cmp	r0, r3
   156a0:	beq	156a8 <close_stdout@@Base+0x2e04>
   156a4:	bl	110c0 <free@plt>
   156a8:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   156ac:	mov	r3, #0
   156b0:	mov	r2, #12
   156b4:	str	r2, [r1]
   156b8:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   156bc:	mov	r0, r3
   156c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   156c4:	ldr	r3, [r1]
   156c8:	cmp	r2, r3
   156cc:	bne	16100 <close_stdout@@Base+0x385c>
   156d0:	sub	sp, fp, #32
   156d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156d8:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   156dc:	cmp	r9, r3
   156e0:	bhi	15640 <close_stdout@@Base+0x2d9c>
   156e4:	mov	r4, #12
   156e8:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   156ec:	cmp	r3, r4
   156f0:	movcs	r4, r3
   156f4:	cmn	r4, #1
   156f8:	beq	15640 <close_stdout@@Base+0x2d9c>
   156fc:	ldr	r1, [fp, #-504]	; 0xfffffe08
   15700:	subs	r0, sl, r1
   15704:	rsbs	r2, r0, #0
   15708:	adcs	r2, r2, r0
   1570c:	cmp	sl, r1
   15710:	cmpne	sl, #0
   15714:	bne	15de0 <close_stdout@@Base+0x353c>
   15718:	mov	r0, r4
   1571c:	str	r2, [fp, #-560]	; 0xfffffdd0
   15720:	bl	111c8 <malloc@plt>
   15724:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   15728:	mov	r3, r0
   1572c:	cmp	r3, #0
   15730:	beq	15640 <close_stdout@@Base+0x2d9c>
   15734:	cmp	r9, #0
   15738:	moveq	r2, #0
   1573c:	andne	r2, r2, #1
   15740:	cmp	r2, #0
   15744:	moveq	sl, r3
   15748:	beq	15760 <close_stdout@@Base+0x2ebc>
   1574c:	mov	r1, sl
   15750:	mov	r0, r3
   15754:	mov	r2, r9
   15758:	mov	sl, r3
   1575c:	bl	110d8 <memcpy@plt>
   15760:	mov	r2, #0
   15764:	strb	r2, [sl, r9]
   15768:	sub	r8, r8, #1
   1576c:	str	r8, [fp, #-508]	; 0xfffffe04
   15770:	bl	1124c <__errno_location@plt>
   15774:	rsb	ip, r9, r4
   15778:	str	r5, [fp, #-544]	; 0xfffffde0
   1577c:	mov	r5, ip
   15780:	ldr	r3, [r0]
   15784:	str	r0, [fp, #-516]	; 0xfffffdfc
   15788:	str	r3, [fp, #-552]	; 0xfffffdd8
   1578c:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   15790:	mvn	r1, #0
   15794:	cmp	r5, #0
   15798:	str	r1, [fp, #-496]	; 0xfffffe10
   1579c:	ldr	r1, [fp, #-508]	; 0xfffffe04
   157a0:	mov	r3, #0
   157a4:	movge	r8, r5
   157a8:	mvnlt	r8, #-2147483648	; 0x80000000
   157ac:	str	r3, [r2]
   157b0:	cmp	r1, #16
   157b4:	addls	pc, pc, r1, lsl #2
   157b8:	b	15dfc <close_stdout@@Base+0x3558>
   157bc:	b	15cf0 <close_stdout@@Base+0x344c>
   157c0:	b	15bd0 <close_stdout@@Base+0x332c>
   157c4:	b	15cd4 <close_stdout@@Base+0x3430>
   157c8:	b	15cb8 <close_stdout@@Base+0x3414>
   157cc:	b	15800 <close_stdout@@Base+0x2f5c>
   157d0:	b	15800 <close_stdout@@Base+0x2f5c>
   157d4:	b	15800 <close_stdout@@Base+0x2f5c>
   157d8:	b	15800 <close_stdout@@Base+0x2f5c>
   157dc:	b	15958 <close_stdout@@Base+0x30b4>
   157e0:	b	15958 <close_stdout@@Base+0x30b4>
   157e4:	b	159b4 <close_stdout@@Base+0x3110>
   157e8:	b	159b4 <close_stdout@@Base+0x3110>
   157ec:	b	15800 <close_stdout@@Base+0x2f5c>
   157f0:	b	15800 <close_stdout@@Base+0x2f5c>
   157f4:	b	15800 <close_stdout@@Base+0x2f5c>
   157f8:	b	15800 <close_stdout@@Base+0x2f5c>
   157fc:	b	15800 <close_stdout@@Base+0x2f5c>
   15800:	ldr	r2, [r7, #-4]
   15804:	cmp	r6, #1
   15808:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1580c:	add	r3, r3, r2, lsl #4
   15810:	ldr	r3, [r3, #8]
   15814:	beq	15be8 <close_stdout@@Base+0x3344>
   15818:	cmp	r6, #2
   1581c:	bne	15a10 <close_stdout@@Base+0x316c>
   15820:	ldr	r2, [fp, #-512]	; 0xfffffe00
   15824:	add	r0, sl, r9
   15828:	ldr	lr, [fp, #-492]	; 0xfffffe14
   1582c:	mov	r1, r8
   15830:	ldr	ip, [fp, #-488]	; 0xfffffe18
   15834:	str	r2, [sp]
   15838:	mov	r2, #1
   1583c:	str	r3, [sp, #12]
   15840:	sub	r3, fp, #496	; 0x1f0
   15844:	str	lr, [sp, #4]
   15848:	str	r3, [sp, #16]
   1584c:	mvn	r3, #0
   15850:	str	ip, [sp, #8]
   15854:	bl	11330 <__snprintf_chk@plt>
   15858:	ldr	r3, [fp, #-496]	; 0xfffffe10
   1585c:	cmp	r3, #0
   15860:	blt	15a44 <close_stdout@@Base+0x31a0>
   15864:	cmp	r8, r3
   15868:	bls	1587c <close_stdout@@Base+0x2fd8>
   1586c:	add	r2, sl, r3
   15870:	ldrb	r2, [r2, r9]
   15874:	cmp	r2, #0
   15878:	bne	15dfc <close_stdout@@Base+0x3558>
   1587c:	cmp	r0, r3
   15880:	movle	r0, r3
   15884:	ble	1588c <close_stdout@@Base+0x2fe8>
   15888:	str	r0, [fp, #-496]	; 0xfffffe10
   1588c:	add	r3, r0, #1
   15890:	cmp	r8, r3
   15894:	bhi	1602c <close_stdout@@Base+0x3788>
   15898:	cmn	r8, #-2147483647	; 0x80000001
   1589c:	beq	16044 <close_stdout@@Base+0x37a0>
   158a0:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   158a4:	add	r0, r0, r2
   158a8:	cmp	r9, r0
   158ac:	mvnhi	r0, #0
   158b0:	cmp	r4, #0
   158b4:	mvnlt	r0, #0
   158b8:	blt	158c8 <close_stdout@@Base+0x3024>
   158bc:	lsl	r3, r4, #1
   158c0:	cmp	r0, r3
   158c4:	movcc	r0, r3
   158c8:	cmp	r4, r0
   158cc:	bcs	1578c <close_stdout@@Base+0x2ee8>
   158d0:	cmp	r4, #0
   158d4:	beq	15c24 <close_stdout@@Base+0x3380>
   158d8:	blt	1564c <close_stdout@@Base+0x2da8>
   158dc:	lsl	r4, r4, #1
   158e0:	cmp	r4, r0
   158e4:	movcc	r4, r0
   158e8:	cmn	r4, #1
   158ec:	beq	1564c <close_stdout@@Base+0x2da8>
   158f0:	ldr	r3, [fp, #-504]	; 0xfffffe08
   158f4:	subs	r2, sl, r3
   158f8:	rsbs	r5, r2, #0
   158fc:	adcs	r5, r5, r2
   15900:	cmp	sl, r3
   15904:	cmpne	sl, #0
   15908:	bne	15c2c <close_stdout@@Base+0x3388>
   1590c:	mov	r0, r4
   15910:	bl	111c8 <malloc@plt>
   15914:	mov	r3, r0
   15918:	cmp	r3, #0
   1591c:	beq	1564c <close_stdout@@Base+0x2da8>
   15920:	cmp	r9, #0
   15924:	moveq	r5, #0
   15928:	andne	r5, r5, #1
   1592c:	cmp	r5, #0
   15930:	rsbeq	r5, r9, r4
   15934:	moveq	sl, r3
   15938:	beq	1578c <close_stdout@@Base+0x2ee8>
   1593c:	mov	r1, sl
   15940:	mov	r0, r3
   15944:	mov	r2, r9
   15948:	mov	sl, r3
   1594c:	rsb	r5, r9, r4
   15950:	bl	110d8 <memcpy@plt>
   15954:	b	1578c <close_stdout@@Base+0x2ee8>
   15958:	ldr	r2, [r7, #-4]
   1595c:	cmp	r6, #1
   15960:	ldr	r3, [fp, #-480]	; 0xfffffe20
   15964:	add	r3, r3, r2, lsl #4
   15968:	ldrd	r2, [r3, #8]
   1596c:	beq	15d84 <close_stdout@@Base+0x34e0>
   15970:	cmp	r6, #2
   15974:	bne	15e60 <close_stdout@@Base+0x35bc>
   15978:	ldr	r1, [fp, #-512]	; 0xfffffe00
   1597c:	add	r0, sl, r9
   15980:	ldr	lr, [fp, #-492]	; 0xfffffe14
   15984:	ldr	ip, [fp, #-488]	; 0xfffffe18
   15988:	strd	r2, [sp, #16]
   1598c:	sub	r2, fp, #496	; 0x1f0
   15990:	str	r1, [sp]
   15994:	mvn	r3, #0
   15998:	str	r2, [sp, #24]
   1599c:	mov	r1, r8
   159a0:	mov	r2, #1
   159a4:	str	lr, [sp, #4]
   159a8:	str	ip, [sp, #8]
   159ac:	bl	11330 <__snprintf_chk@plt>
   159b0:	b	15858 <close_stdout@@Base+0x2fb4>
   159b4:	ldr	r2, [r7, #-4]
   159b8:	cmp	r6, #1
   159bc:	ldr	r3, [fp, #-480]	; 0xfffffe20
   159c0:	add	r3, r3, r2, lsl #4
   159c4:	ldrd	r0, [r3, #8]
   159c8:	beq	15d50 <close_stdout@@Base+0x34ac>
   159cc:	cmp	r6, #2
   159d0:	bne	15e34 <close_stdout@@Base+0x3590>
   159d4:	ldr	r3, [fp, #-492]	; 0xfffffe14
   159d8:	ldr	r2, [fp, #-512]	; 0xfffffe00
   159dc:	ldr	lr, [fp, #-488]	; 0xfffffe18
   159e0:	strd	r0, [sp, #16]
   159e4:	add	r0, sl, r9
   159e8:	str	r2, [sp]
   159ec:	mov	r1, r8
   159f0:	sub	r2, fp, #496	; 0x1f0
   159f4:	str	r3, [sp, #4]
   159f8:	str	r2, [sp, #24]
   159fc:	mvn	r3, #0
   15a00:	mov	r2, #1
   15a04:	str	lr, [sp, #8]
   15a08:	bl	11330 <__snprintf_chk@plt>
   15a0c:	b	15858 <close_stdout@@Base+0x2fb4>
   15a10:	ldr	r1, [fp, #-512]	; 0xfffffe00
   15a14:	sub	r2, fp, #496	; 0x1f0
   15a18:	str	r3, [sp, #4]
   15a1c:	add	r0, sl, r9
   15a20:	str	r2, [sp, #8]
   15a24:	mvn	r3, #0
   15a28:	str	r1, [sp]
   15a2c:	mov	r2, #1
   15a30:	mov	r1, r8
   15a34:	bl	11330 <__snprintf_chk@plt>
   15a38:	ldr	r3, [fp, #-496]	; 0xfffffe10
   15a3c:	cmp	r3, #0
   15a40:	bge	15864 <close_stdout@@Base+0x2fc0>
   15a44:	ldr	r1, [fp, #-544]	; 0xfffffde0
   15a48:	ldrb	r3, [r1, #1]
   15a4c:	cmp	r3, #0
   15a50:	movne	r2, #0
   15a54:	strbne	r2, [r1, #1]
   15a58:	bne	1578c <close_stdout@@Base+0x2ee8>
   15a5c:	cmp	r0, #0
   15a60:	bge	15888 <close_stdout@@Base+0x2fe4>
   15a64:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15a68:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   15a6c:	cmp	sl, #0
   15a70:	cmpne	r3, sl
   15a74:	ldr	r4, [r1]
   15a78:	bne	15ed0 <close_stdout@@Base+0x362c>
   15a7c:	ldr	r2, [fp, #-548]	; 0xfffffddc
   15a80:	cmp	r2, #0
   15a84:	beq	15a90 <close_stdout@@Base+0x31ec>
   15a88:	mov	r0, r2
   15a8c:	bl	110c0 <free@plt>
   15a90:	ldr	r0, [fp, #-360]	; 0xfffffe98
   15a94:	sub	r3, fp, #348	; 0x15c
   15a98:	cmp	r0, r3
   15a9c:	beq	15aa4 <close_stdout@@Base+0x3200>
   15aa0:	bl	110c0 <free@plt>
   15aa4:	ldr	r0, [fp, #-480]	; 0xfffffe20
   15aa8:	sub	r3, fp, #476	; 0x1dc
   15aac:	cmp	r0, r3
   15ab0:	beq	15ab8 <close_stdout@@Base+0x3214>
   15ab4:	bl	110c0 <free@plt>
   15ab8:	cmp	r4, #0
   15abc:	bne	15ad8 <close_stdout@@Base+0x3234>
   15ac0:	ldr	r3, [fp, #-540]	; 0xfffffde4
   15ac4:	ldrb	r4, [r3, #36]	; 0x24
   15ac8:	and	r4, r4, #239	; 0xef
   15acc:	cmp	r4, #99	; 0x63
   15ad0:	movne	r4, #22
   15ad4:	moveq	r4, #84	; 0x54
   15ad8:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   15adc:	mov	r3, #0
   15ae0:	str	r4, [r1]
   15ae4:	b	156b8 <close_stdout@@Base+0x2e14>
   15ae8:	mov	r4, #12
   15aec:	b	153f8 <close_stdout@@Base+0x2b54>
   15af0:	mov	r0, r2
   15af4:	mov	r1, r4
   15af8:	str	r2, [fp, #-560]	; 0xfffffdd0
   15afc:	str	r3, [fp, #-556]	; 0xfffffdd4
   15b00:	bl	1112c <realloc@plt>
   15b04:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   15b08:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   15b0c:	mov	sl, r0
   15b10:	b	15440 <close_stdout@@Base+0x2b9c>
   15b14:	ldr	r3, [r7, #-4]
   15b18:	cmn	r3, #1
   15b1c:	bne	15dfc <close_stdout@@Base+0x3558>
   15b20:	adds	r6, r9, #1
   15b24:	mvncs	r6, #0
   15b28:	cmp	r4, r6
   15b2c:	bcs	15bac <close_stdout@@Base+0x3308>
   15b30:	cmp	r4, #0
   15b34:	beq	15e00 <close_stdout@@Base+0x355c>
   15b38:	blt	15640 <close_stdout@@Base+0x2d9c>
   15b3c:	lsl	r4, r4, #1
   15b40:	cmp	r4, r6
   15b44:	movcc	r4, r6
   15b48:	cmn	r4, #1
   15b4c:	beq	15640 <close_stdout@@Base+0x2d9c>
   15b50:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15b54:	subs	ip, sl, r3
   15b58:	rsbs	r5, ip, #0
   15b5c:	adcs	r5, r5, ip
   15b60:	cmp	sl, r3
   15b64:	cmpne	sl, #0
   15b68:	bne	15e08 <close_stdout@@Base+0x3564>
   15b6c:	mov	r0, r4
   15b70:	bl	111c8 <malloc@plt>
   15b74:	mov	r3, r0
   15b78:	cmp	r3, #0
   15b7c:	beq	15640 <close_stdout@@Base+0x2d9c>
   15b80:	cmp	r9, #0
   15b84:	moveq	r5, #0
   15b88:	andne	r5, r5, #1
   15b8c:	cmp	r5, #0
   15b90:	moveq	sl, r3
   15b94:	beq	15bac <close_stdout@@Base+0x3308>
   15b98:	mov	r1, sl
   15b9c:	mov	r0, r3
   15ba0:	mov	r2, r9
   15ba4:	mov	sl, r3
   15ba8:	bl	110d8 <memcpy@plt>
   15bac:	mov	r2, sl
   15bb0:	mov	r1, #37	; 0x25
   15bb4:	strb	r1, [sl, r9]
   15bb8:	ldr	r1, [fp, #-520]	; 0xfffffdf8
   15bbc:	add	r7, r7, #44	; 0x2c
   15bc0:	ldr	r5, [r7, #-84]	; 0xffffffac
   15bc4:	add	r1, r1, #1
   15bc8:	str	r1, [fp, #-520]	; 0xfffffdf8
   15bcc:	b	153c0 <close_stdout@@Base+0x2b1c>
   15bd0:	ldr	r2, [r7, #-4]
   15bd4:	cmp	r6, #1
   15bd8:	ldr	r3, [fp, #-480]	; 0xfffffe20
   15bdc:	add	r3, r3, r2, lsl #4
   15be0:	ldrb	r3, [r3, #8]
   15be4:	bne	15818 <close_stdout@@Base+0x2f74>
   15be8:	ldr	r1, [fp, #-512]	; 0xfffffe00
   15bec:	add	r0, sl, r9
   15bf0:	ldr	lr, [fp, #-492]	; 0xfffffe14
   15bf4:	mov	r2, r6
   15bf8:	str	r3, [sp, #8]
   15bfc:	sub	r3, fp, #496	; 0x1f0
   15c00:	str	r1, [sp]
   15c04:	mov	r1, r8
   15c08:	str	r3, [sp, #12]
   15c0c:	mvn	r3, #0
   15c10:	str	lr, [sp, #4]
   15c14:	bl	11330 <__snprintf_chk@plt>
   15c18:	b	15858 <close_stdout@@Base+0x2fb4>
   15c1c:	mov	sl, r2
   15c20:	b	1545c <close_stdout@@Base+0x2bb8>
   15c24:	mov	r4, #12
   15c28:	b	158e0 <close_stdout@@Base+0x303c>
   15c2c:	mov	r0, sl
   15c30:	mov	r1, r4
   15c34:	bl	1112c <realloc@plt>
   15c38:	mov	r3, r0
   15c3c:	b	15918 <close_stdout@@Base+0x3074>
   15c40:	ldr	r3, [fp, #-480]	; 0xfffffe20
   15c44:	add	r1, r3, r2, lsl #4
   15c48:	ldr	r3, [r3, r2, lsl #4]
   15c4c:	sub	r3, r3, #18
   15c50:	cmp	r3, #4
   15c54:	addls	pc, pc, r3, lsl #2
   15c58:	b	15dfc <close_stdout@@Base+0x3558>
   15c5c:	b	15e8c <close_stdout@@Base+0x35e8>
   15c60:	b	15ea0 <close_stdout@@Base+0x35fc>
   15c64:	b	15d3c <close_stdout@@Base+0x3498>
   15c68:	b	15d3c <close_stdout@@Base+0x3498>
   15c6c:	b	15eb4 <close_stdout@@Base+0x3610>
   15c70:	mov	r1, r2
   15c74:	mov	r0, sl
   15c78:	mov	r2, r6
   15c7c:	str	r3, [fp, #-556]	; 0xfffffdd4
   15c80:	bl	110d8 <memcpy@plt>
   15c84:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   15c88:	b	1545c <close_stdout@@Base+0x2bb8>
   15c8c:	mov	r9, r6
   15c90:	mov	sl, r2
   15c94:	b	1546c <close_stdout@@Base+0x2bc8>
   15c98:	tst	r3, #32
   15c9c:	bne	15e24 <close_stdout@@Base+0x3580>
   15ca0:	tst	r3, #12
   15ca4:	beq	155a0 <close_stdout@@Base+0x2cfc>
   15ca8:	mov	r3, #108	; 0x6c
   15cac:	add	r5, r5, #1
   15cb0:	strb	r3, [r5, #-1]
   15cb4:	b	15594 <close_stdout@@Base+0x2cf0>
   15cb8:	ldr	r2, [r7, #-4]
   15cbc:	cmp	r6, #1
   15cc0:	ldr	r3, [fp, #-480]	; 0xfffffe20
   15cc4:	add	r3, r3, r2, lsl #4
   15cc8:	ldrh	r3, [r3, #8]
   15ccc:	bne	15818 <close_stdout@@Base+0x2f74>
   15cd0:	b	15be8 <close_stdout@@Base+0x3344>
   15cd4:	ldr	r2, [r7, #-4]
   15cd8:	cmp	r6, #1
   15cdc:	ldr	r3, [fp, #-480]	; 0xfffffe20
   15ce0:	add	r3, r3, r2, lsl #4
   15ce4:	ldrsh	r3, [r3, #8]
   15ce8:	bne	15818 <close_stdout@@Base+0x2f74>
   15cec:	b	15be8 <close_stdout@@Base+0x3344>
   15cf0:	ldr	r2, [r7, #-4]
   15cf4:	cmp	r6, #1
   15cf8:	ldr	r3, [fp, #-480]	; 0xfffffe20
   15cfc:	add	r3, r3, r2, lsl #4
   15d00:	ldrsb	r3, [r3, #8]
   15d04:	beq	15be8 <close_stdout@@Base+0x3344>
   15d08:	cmp	r6, #2
   15d0c:	beq	15820 <close_stdout@@Base+0x2f7c>
   15d10:	ldr	r2, [fp, #-512]	; 0xfffffe00
   15d14:	add	r0, sl, r9
   15d18:	str	r3, [sp, #4]
   15d1c:	mov	r1, r8
   15d20:	sub	r3, fp, #496	; 0x1f0
   15d24:	str	r3, [sp, #8]
   15d28:	str	r2, [sp]
   15d2c:	mvn	r3, #0
   15d30:	mov	r2, #1
   15d34:	bl	11330 <__snprintf_chk@plt>
   15d38:	b	15858 <close_stdout@@Base+0x2fb4>
   15d3c:	ldr	r3, [r1, #8]
   15d40:	mov	r2, sl
   15d44:	mov	r6, r9
   15d48:	str	r9, [r3]
   15d4c:	b	15bb8 <close_stdout@@Base+0x3314>
   15d50:	ldr	r3, [fp, #-492]	; 0xfffffe14
   15d54:	ldr	r2, [fp, #-512]	; 0xfffffe00
   15d58:	strd	r0, [sp, #8]
   15d5c:	sub	r1, fp, #496	; 0x1f0
   15d60:	str	r3, [sp, #4]
   15d64:	add	r0, sl, r9
   15d68:	str	r2, [sp]
   15d6c:	mvn	r3, #0
   15d70:	str	r1, [sp, #16]
   15d74:	mov	r2, r6
   15d78:	mov	r1, r8
   15d7c:	bl	11330 <__snprintf_chk@plt>
   15d80:	b	15858 <close_stdout@@Base+0x2fb4>
   15d84:	ldr	r1, [fp, #-512]	; 0xfffffe00
   15d88:	add	r0, sl, r9
   15d8c:	ldr	lr, [fp, #-492]	; 0xfffffe14
   15d90:	strd	r2, [sp, #8]
   15d94:	sub	r3, fp, #496	; 0x1f0
   15d98:	str	r1, [sp]
   15d9c:	mov	r2, r6
   15da0:	str	r3, [sp, #16]
   15da4:	mov	r1, r8
   15da8:	mvn	r3, #0
   15dac:	str	lr, [sp, #4]
   15db0:	bl	11330 <__snprintf_chk@plt>
   15db4:	b	15858 <close_stdout@@Base+0x2fb4>
   15db8:	mov	r6, #0
   15dbc:	b	155dc <close_stdout@@Base+0x2d38>
   15dc0:	cmn	r0, #1
   15dc4:	beq	15678 <close_stdout@@Base+0x2dd4>
   15dc8:	bl	111c8 <malloc@plt>
   15dcc:	cmp	r0, #0
   15dd0:	str	r0, [fp, #-512]	; 0xfffffe00
   15dd4:	beq	15678 <close_stdout@@Base+0x2dd4>
   15dd8:	str	r0, [fp, #-548]	; 0xfffffddc
   15ddc:	b	1538c <close_stdout@@Base+0x2ae8>
   15de0:	mov	r0, sl
   15de4:	mov	r1, r4
   15de8:	str	r2, [fp, #-560]	; 0xfffffdd0
   15dec:	bl	1112c <realloc@plt>
   15df0:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   15df4:	mov	r3, r0
   15df8:	b	1572c <close_stdout@@Base+0x2e88>
   15dfc:	bl	11318 <abort@plt>
   15e00:	mov	r4, #12
   15e04:	b	15b40 <close_stdout@@Base+0x329c>
   15e08:	mov	r0, sl
   15e0c:	mov	r1, r4
   15e10:	bl	1112c <realloc@plt>
   15e14:	mov	r3, r0
   15e18:	b	15b78 <close_stdout@@Base+0x32d4>
   15e1c:	mov	r3, #0
   15e20:	b	156b8 <close_stdout@@Base+0x2e14>
   15e24:	mov	r3, #76	; 0x4c
   15e28:	add	r5, r5, #1
   15e2c:	strb	r3, [r5, #-1]
   15e30:	b	155a0 <close_stdout@@Base+0x2cfc>
   15e34:	ldr	r3, [fp, #-512]	; 0xfffffe00
   15e38:	mov	r2, #1
   15e3c:	strd	r0, [sp, #8]
   15e40:	sub	r1, fp, #496	; 0x1f0
   15e44:	add	r0, sl, r9
   15e48:	str	r1, [sp, #16]
   15e4c:	str	r3, [sp]
   15e50:	mov	r1, r8
   15e54:	mvn	r3, #0
   15e58:	bl	11330 <__snprintf_chk@plt>
   15e5c:	b	15858 <close_stdout@@Base+0x2fb4>
   15e60:	ldr	r1, [fp, #-512]	; 0xfffffe00
   15e64:	add	r0, sl, r9
   15e68:	strd	r2, [sp, #8]
   15e6c:	sub	r2, fp, #496	; 0x1f0
   15e70:	mvn	r3, #0
   15e74:	str	r2, [sp, #16]
   15e78:	str	r1, [sp]
   15e7c:	mov	r2, #1
   15e80:	mov	r1, r8
   15e84:	bl	11330 <__snprintf_chk@plt>
   15e88:	b	15858 <close_stdout@@Base+0x2fb4>
   15e8c:	ldr	r3, [r1, #8]
   15e90:	mov	r2, sl
   15e94:	mov	r6, r9
   15e98:	strb	r9, [r3]
   15e9c:	b	15bb8 <close_stdout@@Base+0x3314>
   15ea0:	ldr	r3, [r1, #8]
   15ea4:	mov	r2, sl
   15ea8:	mov	r6, r9
   15eac:	strh	r9, [r3]
   15eb0:	b	15bb8 <close_stdout@@Base+0x3314>
   15eb4:	ldr	r3, [r1, #8]
   15eb8:	mov	r2, sl
   15ebc:	mov	r1, #0
   15ec0:	mov	r6, r9
   15ec4:	str	r9, [r3]
   15ec8:	str	r1, [r3, #4]
   15ecc:	b	15bb8 <close_stdout@@Base+0x3314>
   15ed0:	mov	r0, sl
   15ed4:	bl	110c0 <free@plt>
   15ed8:	b	15a7c <close_stdout@@Base+0x31d8>
   15edc:	ldr	r0, [fp, #-360]	; 0xfffffe98
   15ee0:	sub	r3, fp, #348	; 0x15c
   15ee4:	cmp	r0, r3
   15ee8:	beq	15ef0 <close_stdout@@Base+0x364c>
   15eec:	bl	110c0 <free@plt>
   15ef0:	ldr	r0, [fp, #-480]	; 0xfffffe20
   15ef4:	sub	r3, fp, #476	; 0x1dc
   15ef8:	cmp	r0, r3
   15efc:	beq	15f04 <close_stdout@@Base+0x3660>
   15f00:	bl	110c0 <free@plt>
   15f04:	bl	1124c <__errno_location@plt>
   15f08:	mov	r2, #22
   15f0c:	mov	r3, #0
   15f10:	str	r2, [r0]
   15f14:	b	156b8 <close_stdout@@Base+0x2e14>
   15f18:	str	r2, [fp, #-560]	; 0xfffffdd0
   15f1c:	bl	1124c <__errno_location@plt>
   15f20:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   15f24:	str	r0, [fp, #-516]	; 0xfffffdfc
   15f28:	b	15650 <close_stdout@@Base+0x2dac>
   15f2c:	adds	r5, r9, #1
   15f30:	movcc	r3, r5
   15f34:	mvncs	r3, #0
   15f38:	cmp	r3, r4
   15f3c:	bls	15fc4 <close_stdout@@Base+0x3720>
   15f40:	cmp	r4, #0
   15f44:	moveq	r4, #12
   15f48:	beq	15f54 <close_stdout@@Base+0x36b0>
   15f4c:	lslge	r4, r4, #1
   15f50:	mvnlt	r4, #0
   15f54:	cmp	r5, r9
   15f58:	movcs	r3, r5
   15f5c:	mvncc	r3, #0
   15f60:	cmp	r4, r3
   15f64:	bcs	15f74 <close_stdout@@Base+0x36d0>
   15f68:	cmp	r5, r9
   15f6c:	bcc	15640 <close_stdout@@Base+0x2d9c>
   15f70:	mov	r4, r5
   15f74:	cmn	r4, #1
   15f78:	beq	15640 <close_stdout@@Base+0x2d9c>
   15f7c:	ldr	r2, [fp, #-504]	; 0xfffffe08
   15f80:	subs	r3, sl, r2
   15f84:	rsbs	r6, r3, #0
   15f88:	adcs	r6, r6, r3
   15f8c:	cmp	sl, r2
   15f90:	cmpne	sl, #0
   15f94:	bne	160d4 <close_stdout@@Base+0x3830>
   15f98:	mov	r0, r4
   15f9c:	bl	111c8 <malloc@plt>
   15fa0:	mov	r3, r0
   15fa4:	cmp	r3, #0
   15fa8:	beq	15640 <close_stdout@@Base+0x2d9c>
   15fac:	cmp	r9, #0
   15fb0:	moveq	r6, #0
   15fb4:	andne	r6, r6, #1
   15fb8:	cmp	r6, #0
   15fbc:	moveq	sl, r3
   15fc0:	bne	160e8 <close_stdout@@Base+0x3844>
   15fc4:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15fc8:	cmp	sl, r3
   15fcc:	mov	r3, #0
   15fd0:	strb	r3, [sl, r9]
   15fd4:	beq	15fe0 <close_stdout@@Base+0x373c>
   15fd8:	cmp	r4, r5
   15fdc:	bhi	160bc <close_stdout@@Base+0x3818>
   15fe0:	ldr	r1, [fp, #-548]	; 0xfffffddc
   15fe4:	cmp	r1, #0
   15fe8:	beq	15ff4 <close_stdout@@Base+0x3750>
   15fec:	mov	r0, r1
   15ff0:	bl	110c0 <free@plt>
   15ff4:	ldr	r0, [fp, #-360]	; 0xfffffe98
   15ff8:	sub	r3, fp, #348	; 0x15c
   15ffc:	cmp	r0, r3
   16000:	beq	16008 <close_stdout@@Base+0x3764>
   16004:	bl	110c0 <free@plt>
   16008:	ldr	r0, [fp, #-480]	; 0xfffffe20
   1600c:	sub	r3, fp, #476	; 0x1dc
   16010:	cmp	r0, r3
   16014:	beq	1601c <close_stdout@@Base+0x3778>
   16018:	bl	110c0 <free@plt>
   1601c:	ldr	r2, [fp, #-536]	; 0xfffffde8
   16020:	mov	r3, sl
   16024:	str	r9, [r2]
   16028:	b	156b8 <close_stdout@@Base+0x2e14>
   1602c:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   16030:	add	r6, r0, r9
   16034:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   16038:	str	r1, [r2]
   1603c:	mov	r2, sl
   16040:	b	15bb8 <close_stdout@@Base+0x3314>
   16044:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16048:	cmp	sl, #0
   1604c:	cmpne	sl, r3
   16050:	bne	160b0 <close_stdout@@Base+0x380c>
   16054:	ldr	r3, [fp, #-548]	; 0xfffffddc
   16058:	cmp	r3, #0
   1605c:	beq	16068 <close_stdout@@Base+0x37c4>
   16060:	mov	r0, r3
   16064:	bl	110c0 <free@plt>
   16068:	ldr	r0, [fp, #-360]	; 0xfffffe98
   1606c:	sub	r3, fp, #348	; 0x15c
   16070:	cmp	r0, r3
   16074:	beq	1607c <close_stdout@@Base+0x37d8>
   16078:	bl	110c0 <free@plt>
   1607c:	ldr	r0, [fp, #-480]	; 0xfffffe20
   16080:	sub	r3, fp, #476	; 0x1dc
   16084:	cmp	r0, r3
   16088:	beq	16090 <close_stdout@@Base+0x37ec>
   1608c:	bl	110c0 <free@plt>
   16090:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   16094:	mov	r2, #75	; 0x4b
   16098:	mov	r3, #0
   1609c:	str	r2, [r1]
   160a0:	b	156b8 <close_stdout@@Base+0x2e14>
   160a4:	mov	r0, r2
   160a8:	bl	110c0 <free@plt>
   160ac:	b	15660 <close_stdout@@Base+0x2dbc>
   160b0:	mov	r0, sl
   160b4:	bl	110c0 <free@plt>
   160b8:	b	16054 <close_stdout@@Base+0x37b0>
   160bc:	mov	r0, sl
   160c0:	mov	r1, r5
   160c4:	bl	1112c <realloc@plt>
   160c8:	cmp	r0, #0
   160cc:	movne	sl, r0
   160d0:	b	15fe0 <close_stdout@@Base+0x373c>
   160d4:	mov	r0, sl
   160d8:	mov	r1, r4
   160dc:	bl	1112c <realloc@plt>
   160e0:	mov	r3, r0
   160e4:	b	15fa4 <close_stdout@@Base+0x3700>
   160e8:	mov	r1, sl
   160ec:	mov	r0, r3
   160f0:	mov	r2, r9
   160f4:	mov	sl, r3
   160f8:	bl	110d8 <memcpy@plt>
   160fc:	b	15fc4 <close_stdout@@Base+0x3720>
   16100:	bl	11120 <__stack_chk_fail@plt>
   16104:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   16108:	cmp	r9, r2
   1610c:	bhi	15640 <close_stdout@@Base+0x2d9c>
   16110:	mvn	r4, #0
   16114:	b	156e8 <close_stdout@@Base+0x2e44>
   16118:	andeq	r3, r1, r8, lsl #26
   1611c:	andeq	r0, r0, r8, lsl #2
   16120:	push	{r4, r5, r6}
   16124:	ldm	r1, {r3, ip}
   16128:	cmp	r3, #0
   1612c:	beq	161d4 <close_stdout@@Base+0x3930>
   16130:	ldr	r6, [pc, #304]	; 16268 <close_stdout@@Base+0x39c4>
   16134:	add	ip, ip, #16
   16138:	ldr	r5, [pc, #300]	; 1626c <close_stdout@@Base+0x39c8>
   1613c:	mov	r4, #0
   16140:	add	r6, pc, r6
   16144:	add	r5, pc, r5
   16148:	ldr	r3, [ip, #-16]
   1614c:	sub	r3, r3, #1
   16150:	cmp	r3, #21
   16154:	addls	pc, pc, r3, lsl #2
   16158:	b	16260 <close_stdout@@Base+0x39bc>
   1615c:	b	16220 <close_stdout@@Base+0x397c>
   16160:	b	16220 <close_stdout@@Base+0x397c>
   16164:	b	16210 <close_stdout@@Base+0x396c>
   16168:	b	16210 <close_stdout@@Base+0x396c>
   1616c:	b	161b4 <close_stdout@@Base+0x3910>
   16170:	b	161b4 <close_stdout@@Base+0x3910>
   16174:	b	161b4 <close_stdout@@Base+0x3910>
   16178:	b	161b4 <close_stdout@@Base+0x3910>
   1617c:	b	161e0 <close_stdout@@Base+0x393c>
   16180:	b	161e0 <close_stdout@@Base+0x393c>
   16184:	b	161f8 <close_stdout@@Base+0x3954>
   16188:	b	161f8 <close_stdout@@Base+0x3954>
   1618c:	b	161b4 <close_stdout@@Base+0x3910>
   16190:	b	161b4 <close_stdout@@Base+0x3910>
   16194:	b	16230 <close_stdout@@Base+0x398c>
   16198:	b	16248 <close_stdout@@Base+0x39a4>
   1619c:	b	161b4 <close_stdout@@Base+0x3910>
   161a0:	b	161b4 <close_stdout@@Base+0x3910>
   161a4:	b	161b4 <close_stdout@@Base+0x3910>
   161a8:	b	161b4 <close_stdout@@Base+0x3910>
   161ac:	b	161b4 <close_stdout@@Base+0x3910>
   161b0:	b	161b4 <close_stdout@@Base+0x3910>
   161b4:	ldr	r3, [r0]
   161b8:	add	r0, r0, #4
   161bc:	str	r3, [ip, #-8]
   161c0:	ldr	r3, [r1]
   161c4:	add	r4, r4, #1
   161c8:	add	ip, ip, #16
   161cc:	cmp	r3, r4
   161d0:	bhi	16148 <close_stdout@@Base+0x38a4>
   161d4:	mov	r0, #0
   161d8:	pop	{r4, r5, r6}
   161dc:	bx	lr
   161e0:	add	r3, r0, #7
   161e4:	bic	r3, r3, #7
   161e8:	add	r0, r3, #8
   161ec:	ldrd	r2, [r3]
   161f0:	strd	r2, [ip, #-8]
   161f4:	b	161c0 <close_stdout@@Base+0x391c>
   161f8:	add	r0, r0, #7
   161fc:	bic	r0, r0, #7
   16200:	add	r0, r0, #8
   16204:	ldrd	r2, [r0, #-8]
   16208:	strd	r2, [ip, #-8]
   1620c:	b	161c0 <close_stdout@@Base+0x391c>
   16210:	ldr	r3, [r0]
   16214:	add	r0, r0, #4
   16218:	strh	r3, [ip, #-8]
   1621c:	b	161c0 <close_stdout@@Base+0x391c>
   16220:	ldr	r3, [r0]
   16224:	add	r0, r0, #4
   16228:	strb	r3, [ip, #-8]
   1622c:	b	161c0 <close_stdout@@Base+0x391c>
   16230:	ldr	r3, [r0]
   16234:	add	r0, r0, #4
   16238:	cmp	r3, #0
   1623c:	str	r3, [ip, #-8]
   16240:	streq	r5, [ip, #-8]
   16244:	b	161c0 <close_stdout@@Base+0x391c>
   16248:	ldr	r3, [r0]
   1624c:	add	r0, r0, #4
   16250:	cmp	r3, #0
   16254:	str	r3, [ip, #-8]
   16258:	streq	r6, [ip, #-8]
   1625c:	b	161c0 <close_stdout@@Base+0x391c>
   16260:	mvn	r0, #0
   16264:	b	161d8 <close_stdout@@Base+0x3934>
   16268:	andeq	r1, r0, r4, lsl #24
   1626c:	andeq	r1, r0, ip, lsl ip
   16270:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16274:	mov	r7, r1
   16278:	sub	sp, sp, #44	; 0x2c
   1627c:	mov	r5, r2
   16280:	movw	sl, #39321	; 0x9999
   16284:	mov	r2, r7
   16288:	movt	sl, #6553	; 0x1999
   1628c:	mov	r3, #0
   16290:	str	r3, [r2], #16
   16294:	mov	r1, #7
   16298:	str	r2, [r7, #4]
   1629c:	mov	r9, r0
   162a0:	str	r2, [sp, #16]
   162a4:	mov	r2, r5
   162a8:	str	r3, [r2], #8
   162ac:	mov	r6, r3
   162b0:	str	r2, [r5, #4]
   162b4:	movw	r0, #29789	; 0x745d
   162b8:	str	r3, [sp, #8]
   162bc:	movt	r0, #1489	; 0x5d1
   162c0:	str	r1, [sp, #20]
   162c4:	mov	ip, sl
   162c8:	str	r3, [sp, #24]
   162cc:	str	r3, [sp, #36]	; 0x24
   162d0:	mov	r3, #7
   162d4:	str	r2, [sp, #12]
   162d8:	str	r3, [sp, #28]
   162dc:	ldr	r1, [r7]
   162e0:	ldr	r3, [r7, #4]
   162e4:	str	r0, [sp, #32]
   162e8:	b	162f4 <close_stdout@@Base+0x3a50>
   162ec:	cmp	r0, #37	; 0x25
   162f0:	beq	16334 <close_stdout@@Base+0x3a90>
   162f4:	mov	r8, r9
   162f8:	ldrb	r0, [r9], #1
   162fc:	cmp	r0, #0
   16300:	mov	r2, r9
   16304:	bne	162ec <close_stdout@@Base+0x3a48>
   16308:	mov	r4, #44	; 0x2c
   1630c:	mov	r2, r0
   16310:	mul	r1, r4, r1
   16314:	str	r8, [r3, r1]
   16318:	ldr	r3, [sp, #24]
   1631c:	str	r3, [r7, #8]
   16320:	ldr	r3, [sp, #8]
   16324:	str	r3, [r7, #12]
   16328:	mov	r0, r2
   1632c:	add	sp, sp, #44	; 0x2c
   16330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16334:	mov	r0, #44	; 0x2c
   16338:	mul	r1, r0, r1
   1633c:	add	r4, r3, r1
   16340:	str	r8, [r3, r1]
   16344:	mvn	r1, #0
   16348:	str	r6, [r4, #8]
   1634c:	str	r1, [r4, #20]
   16350:	str	r1, [r4, #32]
   16354:	str	r1, [r4, #40]	; 0x28
   16358:	str	r6, [r4, #12]
   1635c:	str	r6, [r4, #16]
   16360:	str	r6, [r4, #24]
   16364:	str	r6, [r4, #28]
   16368:	ldrb	r3, [r8, #1]
   1636c:	sub	sl, r3, #48	; 0x30
   16370:	uxtb	r1, sl
   16374:	cmp	r1, #9
   16378:	bls	1670c <close_stdout@@Base+0x3e68>
   1637c:	mvn	r8, #0
   16380:	b	163c4 <close_stdout@@Base+0x3b20>
   16384:	cmp	r3, #45	; 0x2d
   16388:	beq	163e0 <close_stdout@@Base+0x3b3c>
   1638c:	cmp	r3, #43	; 0x2b
   16390:	beq	163f0 <close_stdout@@Base+0x3b4c>
   16394:	cmp	r3, #32
   16398:	beq	16400 <close_stdout@@Base+0x3b5c>
   1639c:	cmp	r3, #35	; 0x23
   163a0:	beq	16410 <close_stdout@@Base+0x3b6c>
   163a4:	cmp	r3, #48	; 0x30
   163a8:	beq	16420 <close_stdout@@Base+0x3b7c>
   163ac:	cmp	r3, #73	; 0x49
   163b0:	bne	16430 <close_stdout@@Base+0x3b8c>
   163b4:	ldr	r3, [r4, #8]
   163b8:	orr	r3, r3, #64	; 0x40
   163bc:	str	r3, [r4, #8]
   163c0:	ldrb	r3, [r2, #1]!
   163c4:	cmp	r3, #39	; 0x27
   163c8:	mov	r9, r2
   163cc:	bne	16384 <close_stdout@@Base+0x3ae0>
   163d0:	ldr	r3, [r4, #8]
   163d4:	orr	r3, r3, #1
   163d8:	str	r3, [r4, #8]
   163dc:	b	163c0 <close_stdout@@Base+0x3b1c>
   163e0:	ldr	r3, [r4, #8]
   163e4:	orr	r3, r3, #2
   163e8:	str	r3, [r4, #8]
   163ec:	b	163c0 <close_stdout@@Base+0x3b1c>
   163f0:	ldr	r3, [r4, #8]
   163f4:	orr	r3, r3, #4
   163f8:	str	r3, [r4, #8]
   163fc:	b	163c0 <close_stdout@@Base+0x3b1c>
   16400:	ldr	r3, [r4, #8]
   16404:	orr	r3, r3, #8
   16408:	str	r3, [r4, #8]
   1640c:	b	163c0 <close_stdout@@Base+0x3b1c>
   16410:	ldr	r3, [r4, #8]
   16414:	orr	r3, r3, #16
   16418:	str	r3, [r4, #8]
   1641c:	b	163c0 <close_stdout@@Base+0x3b1c>
   16420:	ldr	r3, [r4, #8]
   16424:	orr	r3, r3, #32
   16428:	str	r3, [r4, #8]
   1642c:	b	163c0 <close_stdout@@Base+0x3b1c>
   16430:	cmp	r3, #42	; 0x2a
   16434:	beq	168a8 <close_stdout@@Base+0x4004>
   16438:	sub	r1, r3, #48	; 0x30
   1643c:	uxtb	r1, r1
   16440:	cmp	r1, #9
   16444:	bls	16784 <close_stdout@@Base+0x3ee0>
   16448:	cmp	r3, #46	; 0x2e
   1644c:	beq	167d8 <close_stdout@@Base+0x3f34>
   16450:	mov	sl, #0
   16454:	mov	r0, #1
   16458:	b	16464 <close_stdout@@Base+0x3bc0>
   1645c:	ldrb	r3, [r2, #1]
   16460:	add	r9, r9, #1
   16464:	cmp	r3, #104	; 0x68
   16468:	mov	r2, r9
   1646c:	andeq	r3, sl, #1
   16470:	orreq	sl, sl, r0, lsl r3
   16474:	beq	1645c <close_stdout@@Base+0x3bb8>
   16478:	cmp	r3, #76	; 0x4c
   1647c:	orreq	sl, sl, #4
   16480:	beq	1645c <close_stdout@@Base+0x3bb8>
   16484:	cmp	r3, #108	; 0x6c
   16488:	addeq	sl, sl, #8
   1648c:	beq	1645c <close_stdout@@Base+0x3bb8>
   16490:	cmp	r3, #106	; 0x6a
   16494:	addeq	sl, sl, #16
   16498:	beq	1645c <close_stdout@@Base+0x3bb8>
   1649c:	and	r1, r3, #223	; 0xdf
   164a0:	cmp	r1, #90	; 0x5a
   164a4:	beq	1645c <close_stdout@@Base+0x3bb8>
   164a8:	cmp	r3, #116	; 0x74
   164ac:	beq	1645c <close_stdout@@Base+0x3bb8>
   164b0:	sub	r2, r3, #37	; 0x25
   164b4:	add	r9, r9, #1
   164b8:	mov	fp, r3
   164bc:	cmp	r2, #83	; 0x53
   164c0:	addls	pc, pc, r2, lsl #2
   164c4:	b	16be8 <close_stdout@@Base+0x4344>
   164c8:	b	16678 <close_stdout@@Base+0x3dd4>
   164cc:	b	16be8 <close_stdout@@Base+0x4344>
   164d0:	b	16be8 <close_stdout@@Base+0x4344>
   164d4:	b	16be8 <close_stdout@@Base+0x4344>
   164d8:	b	16be8 <close_stdout@@Base+0x4344>
   164dc:	b	16be8 <close_stdout@@Base+0x4344>
   164e0:	b	16be8 <close_stdout@@Base+0x4344>
   164e4:	b	16be8 <close_stdout@@Base+0x4344>
   164e8:	b	16be8 <close_stdout@@Base+0x4344>
   164ec:	b	16be8 <close_stdout@@Base+0x4344>
   164f0:	b	16be8 <close_stdout@@Base+0x4344>
   164f4:	b	16be8 <close_stdout@@Base+0x4344>
   164f8:	b	16be8 <close_stdout@@Base+0x4344>
   164fc:	b	16be8 <close_stdout@@Base+0x4344>
   16500:	b	16be8 <close_stdout@@Base+0x4344>
   16504:	b	16be8 <close_stdout@@Base+0x4344>
   16508:	b	16be8 <close_stdout@@Base+0x4344>
   1650c:	b	16be8 <close_stdout@@Base+0x4344>
   16510:	b	16be8 <close_stdout@@Base+0x4344>
   16514:	b	16be8 <close_stdout@@Base+0x4344>
   16518:	b	16be8 <close_stdout@@Base+0x4344>
   1651c:	b	16be8 <close_stdout@@Base+0x4344>
   16520:	b	16be8 <close_stdout@@Base+0x4344>
   16524:	b	16be8 <close_stdout@@Base+0x4344>
   16528:	b	16be8 <close_stdout@@Base+0x4344>
   1652c:	b	16be8 <close_stdout@@Base+0x4344>
   16530:	b	16be8 <close_stdout@@Base+0x4344>
   16534:	b	16be8 <close_stdout@@Base+0x4344>
   16538:	b	169c4 <close_stdout@@Base+0x4120>
   1653c:	b	16be8 <close_stdout@@Base+0x4344>
   16540:	b	169e8 <close_stdout@@Base+0x4144>
   16544:	b	16be8 <close_stdout@@Base+0x4344>
   16548:	b	169c4 <close_stdout@@Base+0x4120>
   1654c:	b	169c4 <close_stdout@@Base+0x4120>
   16550:	b	169c4 <close_stdout@@Base+0x4120>
   16554:	b	16be8 <close_stdout@@Base+0x4344>
   16558:	b	16be8 <close_stdout@@Base+0x4344>
   1655c:	b	16be8 <close_stdout@@Base+0x4344>
   16560:	b	16be8 <close_stdout@@Base+0x4344>
   16564:	b	16be8 <close_stdout@@Base+0x4344>
   16568:	b	16be8 <close_stdout@@Base+0x4344>
   1656c:	b	16be8 <close_stdout@@Base+0x4344>
   16570:	b	16be8 <close_stdout@@Base+0x4344>
   16574:	b	16be8 <close_stdout@@Base+0x4344>
   16578:	b	16be8 <close_stdout@@Base+0x4344>
   1657c:	b	16be8 <close_stdout@@Base+0x4344>
   16580:	b	169f4 <close_stdout@@Base+0x4150>
   16584:	b	16be8 <close_stdout@@Base+0x4344>
   16588:	b	16be8 <close_stdout@@Base+0x4344>
   1658c:	b	16be8 <close_stdout@@Base+0x4344>
   16590:	b	16be8 <close_stdout@@Base+0x4344>
   16594:	b	16a00 <close_stdout@@Base+0x415c>
   16598:	b	16be8 <close_stdout@@Base+0x4344>
   1659c:	b	16be8 <close_stdout@@Base+0x4344>
   165a0:	b	16be8 <close_stdout@@Base+0x4344>
   165a4:	b	16be8 <close_stdout@@Base+0x4344>
   165a8:	b	16be8 <close_stdout@@Base+0x4344>
   165ac:	b	16be8 <close_stdout@@Base+0x4344>
   165b0:	b	16be8 <close_stdout@@Base+0x4344>
   165b4:	b	16be8 <close_stdout@@Base+0x4344>
   165b8:	b	169c4 <close_stdout@@Base+0x4120>
   165bc:	b	16be8 <close_stdout@@Base+0x4344>
   165c0:	b	16a88 <close_stdout@@Base+0x41e4>
   165c4:	b	16a44 <close_stdout@@Base+0x41a0>
   165c8:	b	169c4 <close_stdout@@Base+0x4120>
   165cc:	b	169c4 <close_stdout@@Base+0x4120>
   165d0:	b	169c4 <close_stdout@@Base+0x4120>
   165d4:	b	16be8 <close_stdout@@Base+0x4344>
   165d8:	b	16a44 <close_stdout@@Base+0x41a0>
   165dc:	b	16be8 <close_stdout@@Base+0x4344>
   165e0:	b	16be8 <close_stdout@@Base+0x4344>
   165e4:	b	16be8 <close_stdout@@Base+0x4344>
   165e8:	b	16be8 <close_stdout@@Base+0x4344>
   165ec:	b	16a98 <close_stdout@@Base+0x41f4>
   165f0:	b	16a00 <close_stdout@@Base+0x415c>
   165f4:	b	16618 <close_stdout@@Base+0x3d74>
   165f8:	b	16be8 <close_stdout@@Base+0x4344>
   165fc:	b	16be8 <close_stdout@@Base+0x4344>
   16600:	b	169b4 <close_stdout@@Base+0x4110>
   16604:	b	16be8 <close_stdout@@Base+0x4344>
   16608:	b	16a00 <close_stdout@@Base+0x415c>
   1660c:	b	16be8 <close_stdout@@Base+0x4344>
   16610:	b	16be8 <close_stdout@@Base+0x4344>
   16614:	b	16a00 <close_stdout@@Base+0x415c>
   16618:	mov	sl, #17
   1661c:	cmn	r8, #1
   16620:	strne	r8, [r4, #40]	; 0x28
   16624:	beq	16d44 <close_stdout@@Base+0x44a0>
   16628:	ldr	r3, [sp, #20]
   1662c:	cmp	r3, r8
   16630:	bls	16c70 <close_stdout@@Base+0x43cc>
   16634:	ldr	r0, [r5, #4]
   16638:	ldr	r3, [r5]
   1663c:	cmp	r3, r8
   16640:	bhi	16660 <close_stdout@@Base+0x3dbc>
   16644:	add	r2, r3, #1
   16648:	str	r2, [r5]
   1664c:	str	r6, [r0, r3, lsl #4]
   16650:	ldr	r3, [r5]
   16654:	ldr	r0, [r5, #4]
   16658:	cmp	r3, r8
   1665c:	bls	16644 <close_stdout@@Base+0x3da0>
   16660:	ldr	r3, [r0, r8, lsl #4]
   16664:	cmp	r3, #0
   16668:	streq	sl, [r0, r8, lsl #4]
   1666c:	beq	16678 <close_stdout@@Base+0x3dd4>
   16670:	cmp	sl, r3
   16674:	bne	16bec <close_stdout@@Base+0x4348>
   16678:	strb	fp, [r4, #36]	; 0x24
   1667c:	str	r9, [r4, #4]
   16680:	ldr	r1, [r7]
   16684:	ldr	r3, [sp, #28]
   16688:	add	r1, r1, #1
   1668c:	str	r1, [r7]
   16690:	cmp	r3, r1
   16694:	bhi	1677c <close_stdout@@Base+0x3ed8>
   16698:	ldr	r3, [sp, #28]
   1669c:	cmp	r3, #0
   166a0:	blt	16868 <close_stdout@@Base+0x3fc4>
   166a4:	ldr	r3, [sp, #28]
   166a8:	ldr	r0, [sp, #32]
   166ac:	lsl	r3, r3, #1
   166b0:	str	r3, [sp, #28]
   166b4:	cmp	r3, r0
   166b8:	bhi	16868 <close_stdout@@Base+0x3fc4>
   166bc:	mov	r2, #44	; 0x2c
   166c0:	ldr	r0, [r7, #4]
   166c4:	mul	r1, r2, r3
   166c8:	ldr	r3, [sp, #16]
   166cc:	cmp	r3, r0
   166d0:	beq	16d64 <close_stdout@@Base+0x44c0>
   166d4:	str	ip, [sp, #4]
   166d8:	bl	1112c <realloc@plt>
   166dc:	ldr	ip, [sp, #4]
   166e0:	mov	r4, r0
   166e4:	cmp	r4, #0
   166e8:	beq	16868 <close_stdout@@Base+0x3fc4>
   166ec:	ldr	r3, [r7, #4]
   166f0:	ldr	r0, [sp, #16]
   166f4:	cmp	r0, r3
   166f8:	beq	16e20 <close_stdout@@Base+0x457c>
   166fc:	ldr	r1, [r7]
   16700:	mov	r3, r4
   16704:	str	r4, [r7, #4]
   16708:	b	162f4 <close_stdout@@Base+0x3a50>
   1670c:	mov	r0, r9
   16710:	ldrb	r1, [r0, #1]!
   16714:	sub	r8, r1, #48	; 0x30
   16718:	cmp	r8, #9
   1671c:	bls	16710 <close_stdout@@Base+0x3e6c>
   16720:	cmp	r1, #36	; 0x24
   16724:	bne	1637c <close_stdout@@Base+0x3ad8>
   16728:	mov	r8, #0
   1672c:	b	16734 <close_stdout@@Base+0x3e90>
   16730:	mov	r9, r2
   16734:	add	r3, r8, r8, lsl #2
   16738:	cmp	r8, ip
   1673c:	mvn	r8, #0
   16740:	add	r2, r9, #1
   16744:	lslls	r8, r3, #1
   16748:	adds	r8, r8, sl
   1674c:	ldrb	sl, [r9, #1]
   16750:	sub	sl, sl, #48	; 0x30
   16754:	mvncs	r8, #0
   16758:	uxtb	r3, sl
   1675c:	cmp	r3, #9
   16760:	bls	16730 <close_stdout@@Base+0x3e8c>
   16764:	sub	r8, r8, #1
   16768:	cmn	r8, #3
   1676c:	bhi	16be8 <close_stdout@@Base+0x4344>
   16770:	add	r2, r2, #1
   16774:	ldrb	r3, [r9, #2]
   16778:	b	163c4 <close_stdout@@Base+0x3b20>
   1677c:	ldr	r3, [r7, #4]
   16780:	b	162f4 <close_stdout@@Base+0x3a50>
   16784:	str	r2, [r4, #12]
   16788:	ldrb	r3, [r2]
   1678c:	sub	r3, r3, #48	; 0x30
   16790:	cmp	r3, #9
   16794:	bhi	16e18 <close_stdout@@Base+0x4574>
   16798:	add	r3, r2, #1
   1679c:	mov	r9, r3
   167a0:	add	r3, r3, #1
   167a4:	ldrb	r1, [r9]
   167a8:	sub	r1, r1, #48	; 0x30
   167ac:	cmp	r1, #9
   167b0:	bls	1679c <close_stdout@@Base+0x3ef8>
   167b4:	rsb	r2, r2, r9
   167b8:	ldr	r3, [sp, #24]
   167bc:	str	r9, [r4, #16]
   167c0:	cmp	r3, r2
   167c4:	movcc	r3, r2
   167c8:	str	r3, [sp, #24]
   167cc:	ldrb	r3, [r9]
   167d0:	cmp	r3, #46	; 0x2e
   167d4:	bne	16450 <close_stdout@@Base+0x3bac>
   167d8:	ldrb	r3, [r9, #1]
   167dc:	str	r9, [r4, #24]
   167e0:	cmp	r3, #42	; 0x2a
   167e4:	beq	16ad0 <close_stdout@@Base+0x422c>
   167e8:	ldrb	r3, [r9, #1]
   167ec:	add	r2, r9, #1
   167f0:	sub	r3, r3, #48	; 0x30
   167f4:	cmp	r3, #9
   167f8:	bhi	16818 <close_stdout@@Base+0x3f74>
   167fc:	add	r3, r9, #2
   16800:	mov	r2, r3
   16804:	add	r3, r3, #1
   16808:	ldrb	r1, [r2]
   1680c:	sub	r1, r1, #48	; 0x30
   16810:	cmp	r1, #9
   16814:	bls	16800 <close_stdout@@Base+0x3f5c>
   16818:	ldr	r0, [sp, #8]
   1681c:	rsb	r9, r9, r2
   16820:	str	r2, [r4, #28]
   16824:	cmp	r0, r9
   16828:	movcc	r0, r9
   1682c:	ldrb	r3, [r2]
   16830:	str	r0, [sp, #8]
   16834:	mov	r9, r2
   16838:	b	16450 <close_stdout@@Base+0x3bac>
   1683c:	ldr	r3, [sp, #20]
   16840:	cmp	r3, #0
   16844:	lslge	r3, r3, #1
   16848:	mvnlt	r3, #0
   1684c:	str	r3, [sp, #20]
   16850:	ldr	r3, [sp, #20]
   16854:	cmp	r3, sl
   16858:	bhi	16cf4 <close_stdout@@Base+0x4450>
   1685c:	adds	r3, sl, #1
   16860:	str	r3, [sp, #20]
   16864:	bcc	16cf4 <close_stdout@@Base+0x4450>
   16868:	ldr	r2, [r5, #4]
   1686c:	ldr	r3, [sp, #12]
   16870:	cmp	r3, r2
   16874:	beq	16880 <close_stdout@@Base+0x3fdc>
   16878:	mov	r0, r2
   1687c:	bl	110c0 <free@plt>
   16880:	ldr	r0, [r7, #4]
   16884:	ldr	r3, [sp, #16]
   16888:	cmp	r3, r0
   1688c:	beq	16894 <close_stdout@@Base+0x3ff0>
   16890:	bl	110c0 <free@plt>
   16894:	bl	1124c <__errno_location@plt>
   16898:	mov	r3, #12
   1689c:	mvn	r2, #0
   168a0:	str	r3, [r0]
   168a4:	b	16328 <close_stdout@@Base+0x3a84>
   168a8:	ldr	r3, [sp, #24]
   168ac:	add	r9, r2, #1
   168b0:	str	r2, [r4, #12]
   168b4:	str	r9, [r4, #16]
   168b8:	cmp	r3, #0
   168bc:	ldrb	sl, [r2, #1]
   168c0:	moveq	r3, #1
   168c4:	str	r3, [sp, #24]
   168c8:	sub	sl, sl, #48	; 0x30
   168cc:	uxtb	r3, sl
   168d0:	cmp	r3, #9
   168d4:	bls	16948 <close_stdout@@Base+0x40a4>
   168d8:	ldr	r3, [sp, #36]	; 0x24
   168dc:	cmn	r3, #1
   168e0:	str	r3, [r4, #20]
   168e4:	add	r3, r3, #1
   168e8:	beq	16be8 <close_stdout@@Base+0x4344>
   168ec:	ldr	sl, [sp, #36]	; 0x24
   168f0:	str	r3, [sp, #36]	; 0x24
   168f4:	ldr	r3, [sp, #20]
   168f8:	cmp	r3, sl
   168fc:	bls	1683c <close_stdout@@Base+0x3f98>
   16900:	ldr	r0, [r5, #4]
   16904:	ldr	r3, [r5]
   16908:	cmp	r3, sl
   1690c:	bhi	1692c <close_stdout@@Base+0x4088>
   16910:	add	r2, r3, #1
   16914:	str	r2, [r5]
   16918:	str	r6, [r0, r3, lsl #4]
   1691c:	ldr	r3, [r5]
   16920:	ldr	r0, [r5, #4]
   16924:	cmp	r3, sl
   16928:	bls	16910 <close_stdout@@Base+0x406c>
   1692c:	ldr	r3, [r0, sl, lsl #4]
   16930:	cmp	r3, #0
   16934:	bne	16ce8 <close_stdout@@Base+0x4444>
   16938:	mov	r1, #5
   1693c:	str	r1, [r0, sl, lsl #4]
   16940:	ldrb	r3, [r9]
   16944:	b	16448 <close_stdout@@Base+0x3ba4>
   16948:	mov	r1, r9
   1694c:	ldrb	r3, [r1, #1]!
   16950:	sub	r0, r3, #48	; 0x30
   16954:	cmp	r0, #9
   16958:	bls	1694c <close_stdout@@Base+0x40a8>
   1695c:	cmp	r3, #36	; 0x24
   16960:	bne	168d8 <close_stdout@@Base+0x4034>
   16964:	add	r2, r2, #2
   16968:	mov	r3, #0
   1696c:	add	r1, r3, r3, lsl #2
   16970:	cmp	r3, ip
   16974:	mvn	r3, #0
   16978:	lslls	r3, r1, #1
   1697c:	adds	r3, r3, sl
   16980:	ldrb	sl, [r2], #1
   16984:	sub	sl, sl, #48	; 0x30
   16988:	mvncs	r3, #0
   1698c:	uxtb	r1, sl
   16990:	cmp	r1, #9
   16994:	bls	1696c <close_stdout@@Base+0x40c8>
   16998:	sub	r3, r3, #1
   1699c:	cmn	r3, #3
   169a0:	bhi	16be8 <close_stdout@@Base+0x4344>
   169a4:	str	r3, [r4, #20]
   169a8:	mov	r9, r2
   169ac:	mov	sl, r3
   169b0:	b	168f4 <close_stdout@@Base+0x4050>
   169b4:	cmp	sl, #7
   169b8:	movle	sl, #15
   169bc:	movgt	sl, #16
   169c0:	b	1661c <close_stdout@@Base+0x3d78>
   169c4:	cmp	sl, #15
   169c8:	movgt	fp, r3
   169cc:	movgt	sl, #12
   169d0:	bgt	1661c <close_stdout@@Base+0x3d78>
   169d4:	tst	sl, #4
   169d8:	mov	fp, r3
   169dc:	moveq	sl, #11
   169e0:	movne	sl, #12
   169e4:	b	1661c <close_stdout@@Base+0x3d78>
   169e8:	mov	sl, #14
   169ec:	mov	fp, #99	; 0x63
   169f0:	b	1661c <close_stdout@@Base+0x3d78>
   169f4:	mov	sl, #16
   169f8:	mov	fp, #115	; 0x73
   169fc:	b	1661c <close_stdout@@Base+0x3d78>
   16a00:	cmp	sl, #15
   16a04:	bgt	16c24 <close_stdout@@Base+0x4380>
   16a08:	tst	sl, #4
   16a0c:	bne	16c24 <close_stdout@@Base+0x4380>
   16a10:	cmp	sl, #7
   16a14:	movgt	fp, r3
   16a18:	movgt	sl, #8
   16a1c:	bgt	1661c <close_stdout@@Base+0x3d78>
   16a20:	tst	sl, #2
   16a24:	movne	fp, r3
   16a28:	movne	sl, #2
   16a2c:	bne	1661c <close_stdout@@Base+0x3d78>
   16a30:	tst	sl, #1
   16a34:	mov	fp, r3
   16a38:	moveq	sl, #6
   16a3c:	movne	sl, #4
   16a40:	b	1661c <close_stdout@@Base+0x3d78>
   16a44:	cmp	sl, #15
   16a48:	bgt	16c30 <close_stdout@@Base+0x438c>
   16a4c:	tst	sl, #4
   16a50:	bne	16c30 <close_stdout@@Base+0x438c>
   16a54:	cmp	sl, #7
   16a58:	movgt	fp, r3
   16a5c:	movgt	sl, #7
   16a60:	bgt	1661c <close_stdout@@Base+0x3d78>
   16a64:	tst	sl, #2
   16a68:	movne	fp, r3
   16a6c:	movne	sl, #1
   16a70:	bne	1661c <close_stdout@@Base+0x3d78>
   16a74:	tst	sl, #1
   16a78:	mov	fp, r3
   16a7c:	moveq	sl, #5
   16a80:	movne	sl, #3
   16a84:	b	1661c <close_stdout@@Base+0x3d78>
   16a88:	cmp	sl, #7
   16a8c:	movle	sl, #13
   16a90:	movgt	sl, #14
   16a94:	b	1661c <close_stdout@@Base+0x3d78>
   16a98:	cmp	sl, #15
   16a9c:	bgt	16c3c <close_stdout@@Base+0x4398>
   16aa0:	tst	sl, #4
   16aa4:	bne	16c3c <close_stdout@@Base+0x4398>
   16aa8:	cmp	sl, #7
   16aac:	movgt	sl, #21
   16ab0:	bgt	1661c <close_stdout@@Base+0x3d78>
   16ab4:	tst	sl, #2
   16ab8:	movne	sl, #18
   16abc:	bne	1661c <close_stdout@@Base+0x3d78>
   16ac0:	tst	sl, #1
   16ac4:	moveq	sl, #20
   16ac8:	movne	sl, #19
   16acc:	b	1661c <close_stdout@@Base+0x3d78>
   16ad0:	ldr	r3, [sp, #8]
   16ad4:	add	sl, r9, #2
   16ad8:	str	sl, [r4, #28]
   16adc:	ldrb	r0, [r9, #2]
   16ae0:	cmp	r3, #1
   16ae4:	sub	r0, r0, #48	; 0x30
   16ae8:	movls	r3, #2
   16aec:	str	r3, [sp, #8]
   16af0:	uxtb	r3, r0
   16af4:	cmp	r3, #9
   16af8:	bhi	16c44 <close_stdout@@Base+0x43a0>
   16afc:	mov	r2, sl
   16b00:	ldrb	r3, [r2, #1]!
   16b04:	sub	r1, r3, #48	; 0x30
   16b08:	cmp	r1, #9
   16b0c:	bls	16b00 <close_stdout@@Base+0x425c>
   16b10:	cmp	r3, #36	; 0x24
   16b14:	bne	16c44 <close_stdout@@Base+0x43a0>
   16b18:	add	r9, r9, #3
   16b1c:	mov	r3, #0
   16b20:	add	r2, r3, r3, lsl #2
   16b24:	cmp	r3, ip
   16b28:	mvn	r3, #0
   16b2c:	lslls	r3, r2, #1
   16b30:	adds	r3, r3, r0
   16b34:	ldrb	r0, [r9], #1
   16b38:	sub	r0, r0, #48	; 0x30
   16b3c:	mvncs	r3, #0
   16b40:	uxtb	r2, r0
   16b44:	cmp	r2, #9
   16b48:	bls	16b20 <close_stdout@@Base+0x427c>
   16b4c:	sub	r3, r3, #1
   16b50:	cmn	r3, #3
   16b54:	bhi	16be8 <close_stdout@@Base+0x4344>
   16b58:	mov	sl, r9
   16b5c:	mov	r9, r3
   16b60:	str	r3, [r4, #32]
   16b64:	ldr	r3, [sp, #20]
   16b68:	cmp	r3, r9
   16b6c:	bhi	16d7c <close_stdout@@Base+0x44d8>
   16b70:	ldr	r3, [sp, #20]
   16b74:	cmp	r3, #0
   16b78:	blt	16868 <close_stdout@@Base+0x3fc4>
   16b7c:	lsl	r3, r3, #1
   16b80:	str	r3, [sp, #20]
   16b84:	cmp	r3, r9
   16b88:	bhi	16b98 <close_stdout@@Base+0x42f4>
   16b8c:	adds	r3, r9, #1
   16b90:	str	r3, [sp, #20]
   16b94:	bcs	16868 <close_stdout@@Base+0x3fc4>
   16b98:	ldr	r3, [sp, #20]
   16b9c:	cmn	r3, #-268435455	; 0xf0000001
   16ba0:	bhi	16868 <close_stdout@@Base+0x3fc4>
   16ba4:	ldr	r0, [r5, #4]
   16ba8:	lsl	r1, r3, #4
   16bac:	ldr	r3, [sp, #12]
   16bb0:	cmp	r3, r0
   16bb4:	beq	16e80 <close_stdout@@Base+0x45dc>
   16bb8:	str	ip, [sp, #4]
   16bbc:	bl	1112c <realloc@plt>
   16bc0:	ldr	r2, [r5, #4]
   16bc4:	ldr	ip, [sp, #4]
   16bc8:	subs	r3, r0, #0
   16bcc:	beq	1686c <close_stdout@@Base+0x3fc8>
   16bd0:	ldr	r0, [sp, #12]
   16bd4:	cmp	r0, r2
   16bd8:	beq	16e98 <close_stdout@@Base+0x45f4>
   16bdc:	mov	r0, r3
   16be0:	str	r3, [r5, #4]
   16be4:	b	16d80 <close_stdout@@Base+0x44dc>
   16be8:	ldr	r0, [r5, #4]
   16bec:	ldr	r3, [sp, #12]
   16bf0:	cmp	r3, r0
   16bf4:	beq	16bfc <close_stdout@@Base+0x4358>
   16bf8:	bl	110c0 <free@plt>
   16bfc:	ldr	r0, [r7, #4]
   16c00:	ldr	r3, [sp, #16]
   16c04:	cmp	r3, r0
   16c08:	beq	16c10 <close_stdout@@Base+0x436c>
   16c0c:	bl	110c0 <free@plt>
   16c10:	bl	1124c <__errno_location@plt>
   16c14:	mov	r3, #22
   16c18:	mvn	r2, #0
   16c1c:	str	r3, [r0]
   16c20:	b	16328 <close_stdout@@Base+0x3a84>
   16c24:	mov	fp, r3
   16c28:	mov	sl, #10
   16c2c:	b	1661c <close_stdout@@Base+0x3d78>
   16c30:	mov	fp, r3
   16c34:	mov	sl, #9
   16c38:	b	1661c <close_stdout@@Base+0x3d78>
   16c3c:	mov	sl, #22
   16c40:	b	1661c <close_stdout@@Base+0x3d78>
   16c44:	ldr	r9, [r4, #32]
   16c48:	cmn	r9, #1
   16c4c:	bne	16b64 <close_stdout@@Base+0x42c0>
   16c50:	ldr	r3, [sp, #36]	; 0x24
   16c54:	cmn	r3, #1
   16c58:	str	r3, [r4, #32]
   16c5c:	add	r3, r3, #1
   16c60:	beq	16be8 <close_stdout@@Base+0x4344>
   16c64:	ldr	r9, [sp, #36]	; 0x24
   16c68:	str	r3, [sp, #36]	; 0x24
   16c6c:	b	16b64 <close_stdout@@Base+0x42c0>
   16c70:	ldr	r3, [sp, #20]
   16c74:	cmp	r3, #0
   16c78:	blt	16868 <close_stdout@@Base+0x3fc4>
   16c7c:	lsl	r3, r3, #1
   16c80:	str	r3, [sp, #20]
   16c84:	cmp	r3, r8
   16c88:	bhi	16c98 <close_stdout@@Base+0x43f4>
   16c8c:	adds	r3, r8, #1
   16c90:	str	r3, [sp, #20]
   16c94:	bcs	16868 <close_stdout@@Base+0x3fc4>
   16c98:	ldr	r3, [sp, #20]
   16c9c:	cmn	r3, #-268435455	; 0xf0000001
   16ca0:	bhi	16868 <close_stdout@@Base+0x3fc4>
   16ca4:	ldr	r0, [r5, #4]
   16ca8:	lsl	r1, r3, #4
   16cac:	ldr	r3, [sp, #12]
   16cb0:	cmp	r3, r0
   16cb4:	beq	16ddc <close_stdout@@Base+0x4538>
   16cb8:	str	ip, [sp, #4]
   16cbc:	bl	1112c <realloc@plt>
   16cc0:	ldr	r2, [r5, #4]
   16cc4:	ldr	ip, [sp, #4]
   16cc8:	subs	r3, r0, #0
   16ccc:	beq	1686c <close_stdout@@Base+0x3fc8>
   16cd0:	ldr	r0, [sp, #12]
   16cd4:	cmp	r0, r2
   16cd8:	beq	16df4 <close_stdout@@Base+0x4550>
   16cdc:	mov	r0, r3
   16ce0:	str	r3, [r5, #4]
   16ce4:	b	16638 <close_stdout@@Base+0x3d94>
   16ce8:	cmp	r3, #5
   16cec:	beq	167cc <close_stdout@@Base+0x3f28>
   16cf0:	b	16bec <close_stdout@@Base+0x4348>
   16cf4:	ldr	r3, [sp, #20]
   16cf8:	cmn	r3, #-268435455	; 0xf0000001
   16cfc:	bhi	16868 <close_stdout@@Base+0x3fc4>
   16d00:	ldr	r0, [r5, #4]
   16d04:	lsl	r1, r3, #4
   16d08:	ldr	r3, [sp, #12]
   16d0c:	cmp	r3, r0
   16d10:	beq	16e44 <close_stdout@@Base+0x45a0>
   16d14:	str	ip, [sp, #4]
   16d18:	bl	1112c <realloc@plt>
   16d1c:	ldr	r2, [r5, #4]
   16d20:	ldr	ip, [sp, #4]
   16d24:	subs	r3, r0, #0
   16d28:	beq	1686c <close_stdout@@Base+0x3fc8>
   16d2c:	ldr	r0, [sp, #12]
   16d30:	cmp	r0, r2
   16d34:	beq	16e5c <close_stdout@@Base+0x45b8>
   16d38:	mov	r0, r3
   16d3c:	str	r3, [r5, #4]
   16d40:	b	16904 <close_stdout@@Base+0x4060>
   16d44:	ldr	r3, [sp, #36]	; 0x24
   16d48:	cmn	r3, #1
   16d4c:	str	r3, [r4, #40]	; 0x28
   16d50:	add	r3, r3, #1
   16d54:	beq	16be8 <close_stdout@@Base+0x4344>
   16d58:	ldr	r8, [sp, #36]	; 0x24
   16d5c:	str	r3, [sp, #36]	; 0x24
   16d60:	b	16628 <close_stdout@@Base+0x3d84>
   16d64:	mov	r0, r1
   16d68:	str	ip, [sp, #4]
   16d6c:	bl	111c8 <malloc@plt>
   16d70:	ldr	ip, [sp, #4]
   16d74:	mov	r4, r0
   16d78:	b	166e4 <close_stdout@@Base+0x3e40>
   16d7c:	ldr	r0, [r5, #4]
   16d80:	ldr	r3, [r5]
   16d84:	cmp	r3, r9
   16d88:	bhi	16da8 <close_stdout@@Base+0x4504>
   16d8c:	add	r2, r3, #1
   16d90:	str	r2, [r5]
   16d94:	str	r6, [r0, r3, lsl #4]
   16d98:	ldr	r3, [r5]
   16d9c:	ldr	r0, [r5, #4]
   16da0:	cmp	r3, r9
   16da4:	bls	16d8c <close_stdout@@Base+0x44e8>
   16da8:	ldr	r3, [r0, r9, lsl #4]
   16dac:	cmp	r3, #0
   16db0:	bne	16dc8 <close_stdout@@Base+0x4524>
   16db4:	mov	r1, #5
   16db8:	str	r1, [r0, r9, lsl #4]
   16dbc:	mov	r9, sl
   16dc0:	ldrb	r3, [sl]
   16dc4:	b	16450 <close_stdout@@Base+0x3bac>
   16dc8:	cmp	r3, #5
   16dcc:	bne	16bec <close_stdout@@Base+0x4348>
   16dd0:	ldrb	r3, [sl]
   16dd4:	mov	r9, sl
   16dd8:	b	16450 <close_stdout@@Base+0x3bac>
   16ddc:	mov	r0, r1
   16de0:	str	ip, [sp, #4]
   16de4:	bl	111c8 <malloc@plt>
   16de8:	ldr	ip, [sp, #4]
   16dec:	subs	r3, r0, #0
   16df0:	beq	16ebc <close_stdout@@Base+0x4618>
   16df4:	ldr	r2, [r5]
   16df8:	mov	r0, r3
   16dfc:	ldr	r1, [sp, #12]
   16e00:	str	ip, [sp, #4]
   16e04:	lsl	r2, r2, #4
   16e08:	bl	110d8 <memcpy@plt>
   16e0c:	ldr	ip, [sp, #4]
   16e10:	mov	r3, r0
   16e14:	b	16cdc <close_stdout@@Base+0x4438>
   16e18:	mov	r2, #0
   16e1c:	b	167b8 <close_stdout@@Base+0x3f14>
   16e20:	ldr	r2, [r7]
   16e24:	mov	r3, #44	; 0x2c
   16e28:	mov	r0, r4
   16e2c:	ldr	r1, [sp, #16]
   16e30:	str	ip, [sp, #4]
   16e34:	mul	r2, r3, r2
   16e38:	bl	110d8 <memcpy@plt>
   16e3c:	ldr	ip, [sp, #4]
   16e40:	b	166fc <close_stdout@@Base+0x3e58>
   16e44:	mov	r0, r1
   16e48:	str	ip, [sp, #4]
   16e4c:	bl	111c8 <malloc@plt>
   16e50:	ldr	ip, [sp, #4]
   16e54:	subs	r3, r0, #0
   16e58:	beq	16ebc <close_stdout@@Base+0x4618>
   16e5c:	ldr	r2, [r5]
   16e60:	mov	r0, r3
   16e64:	ldr	r1, [sp, #12]
   16e68:	str	ip, [sp, #4]
   16e6c:	lsl	r2, r2, #4
   16e70:	bl	110d8 <memcpy@plt>
   16e74:	ldr	ip, [sp, #4]
   16e78:	mov	r3, r0
   16e7c:	b	16d38 <close_stdout@@Base+0x4494>
   16e80:	mov	r0, r1
   16e84:	str	ip, [sp, #4]
   16e88:	bl	111c8 <malloc@plt>
   16e8c:	ldr	ip, [sp, #4]
   16e90:	subs	r3, r0, #0
   16e94:	beq	16ebc <close_stdout@@Base+0x4618>
   16e98:	ldr	r2, [r5]
   16e9c:	mov	r0, r3
   16ea0:	ldr	r1, [sp, #12]
   16ea4:	str	ip, [sp, #4]
   16ea8:	lsl	r2, r2, #4
   16eac:	bl	110d8 <memcpy@plt>
   16eb0:	ldr	ip, [sp, #4]
   16eb4:	mov	r3, r0
   16eb8:	b	16bdc <close_stdout@@Base+0x4338>
   16ebc:	ldr	r2, [sp, #12]
   16ec0:	b	1686c <close_stdout@@Base+0x3fc8>
   16ec4:	subs	r2, r1, #1
   16ec8:	bxeq	lr
   16ecc:	bcc	170a4 <close_stdout@@Base+0x4800>
   16ed0:	cmp	r0, r1
   16ed4:	bls	17088 <close_stdout@@Base+0x47e4>
   16ed8:	tst	r1, r2
   16edc:	beq	17094 <close_stdout@@Base+0x47f0>
   16ee0:	clz	r3, r0
   16ee4:	clz	r2, r1
   16ee8:	sub	r3, r2, r3
   16eec:	rsbs	r3, r3, #31
   16ef0:	addne	r3, r3, r3, lsl #1
   16ef4:	mov	r2, #0
   16ef8:	addne	pc, pc, r3, lsl #2
   16efc:	nop	{0}
   16f00:	cmp	r0, r1, lsl #31
   16f04:	adc	r2, r2, r2
   16f08:	subcs	r0, r0, r1, lsl #31
   16f0c:	cmp	r0, r1, lsl #30
   16f10:	adc	r2, r2, r2
   16f14:	subcs	r0, r0, r1, lsl #30
   16f18:	cmp	r0, r1, lsl #29
   16f1c:	adc	r2, r2, r2
   16f20:	subcs	r0, r0, r1, lsl #29
   16f24:	cmp	r0, r1, lsl #28
   16f28:	adc	r2, r2, r2
   16f2c:	subcs	r0, r0, r1, lsl #28
   16f30:	cmp	r0, r1, lsl #27
   16f34:	adc	r2, r2, r2
   16f38:	subcs	r0, r0, r1, lsl #27
   16f3c:	cmp	r0, r1, lsl #26
   16f40:	adc	r2, r2, r2
   16f44:	subcs	r0, r0, r1, lsl #26
   16f48:	cmp	r0, r1, lsl #25
   16f4c:	adc	r2, r2, r2
   16f50:	subcs	r0, r0, r1, lsl #25
   16f54:	cmp	r0, r1, lsl #24
   16f58:	adc	r2, r2, r2
   16f5c:	subcs	r0, r0, r1, lsl #24
   16f60:	cmp	r0, r1, lsl #23
   16f64:	adc	r2, r2, r2
   16f68:	subcs	r0, r0, r1, lsl #23
   16f6c:	cmp	r0, r1, lsl #22
   16f70:	adc	r2, r2, r2
   16f74:	subcs	r0, r0, r1, lsl #22
   16f78:	cmp	r0, r1, lsl #21
   16f7c:	adc	r2, r2, r2
   16f80:	subcs	r0, r0, r1, lsl #21
   16f84:	cmp	r0, r1, lsl #20
   16f88:	adc	r2, r2, r2
   16f8c:	subcs	r0, r0, r1, lsl #20
   16f90:	cmp	r0, r1, lsl #19
   16f94:	adc	r2, r2, r2
   16f98:	subcs	r0, r0, r1, lsl #19
   16f9c:	cmp	r0, r1, lsl #18
   16fa0:	adc	r2, r2, r2
   16fa4:	subcs	r0, r0, r1, lsl #18
   16fa8:	cmp	r0, r1, lsl #17
   16fac:	adc	r2, r2, r2
   16fb0:	subcs	r0, r0, r1, lsl #17
   16fb4:	cmp	r0, r1, lsl #16
   16fb8:	adc	r2, r2, r2
   16fbc:	subcs	r0, r0, r1, lsl #16
   16fc0:	cmp	r0, r1, lsl #15
   16fc4:	adc	r2, r2, r2
   16fc8:	subcs	r0, r0, r1, lsl #15
   16fcc:	cmp	r0, r1, lsl #14
   16fd0:	adc	r2, r2, r2
   16fd4:	subcs	r0, r0, r1, lsl #14
   16fd8:	cmp	r0, r1, lsl #13
   16fdc:	adc	r2, r2, r2
   16fe0:	subcs	r0, r0, r1, lsl #13
   16fe4:	cmp	r0, r1, lsl #12
   16fe8:	adc	r2, r2, r2
   16fec:	subcs	r0, r0, r1, lsl #12
   16ff0:	cmp	r0, r1, lsl #11
   16ff4:	adc	r2, r2, r2
   16ff8:	subcs	r0, r0, r1, lsl #11
   16ffc:	cmp	r0, r1, lsl #10
   17000:	adc	r2, r2, r2
   17004:	subcs	r0, r0, r1, lsl #10
   17008:	cmp	r0, r1, lsl #9
   1700c:	adc	r2, r2, r2
   17010:	subcs	r0, r0, r1, lsl #9
   17014:	cmp	r0, r1, lsl #8
   17018:	adc	r2, r2, r2
   1701c:	subcs	r0, r0, r1, lsl #8
   17020:	cmp	r0, r1, lsl #7
   17024:	adc	r2, r2, r2
   17028:	subcs	r0, r0, r1, lsl #7
   1702c:	cmp	r0, r1, lsl #6
   17030:	adc	r2, r2, r2
   17034:	subcs	r0, r0, r1, lsl #6
   17038:	cmp	r0, r1, lsl #5
   1703c:	adc	r2, r2, r2
   17040:	subcs	r0, r0, r1, lsl #5
   17044:	cmp	r0, r1, lsl #4
   17048:	adc	r2, r2, r2
   1704c:	subcs	r0, r0, r1, lsl #4
   17050:	cmp	r0, r1, lsl #3
   17054:	adc	r2, r2, r2
   17058:	subcs	r0, r0, r1, lsl #3
   1705c:	cmp	r0, r1, lsl #2
   17060:	adc	r2, r2, r2
   17064:	subcs	r0, r0, r1, lsl #2
   17068:	cmp	r0, r1, lsl #1
   1706c:	adc	r2, r2, r2
   17070:	subcs	r0, r0, r1, lsl #1
   17074:	cmp	r0, r1
   17078:	adc	r2, r2, r2
   1707c:	subcs	r0, r0, r1
   17080:	mov	r0, r2
   17084:	bx	lr
   17088:	moveq	r0, #1
   1708c:	movne	r0, #0
   17090:	bx	lr
   17094:	clz	r2, r1
   17098:	rsb	r2, r2, #31
   1709c:	lsr	r0, r0, r2
   170a0:	bx	lr
   170a4:	cmp	r0, #0
   170a8:	mvnne	r0, #0
   170ac:	b	170d0 <close_stdout@@Base+0x482c>
   170b0:	cmp	r1, #0
   170b4:	beq	170a4 <close_stdout@@Base+0x4800>
   170b8:	push	{r0, r1, lr}
   170bc:	bl	16ec4 <close_stdout@@Base+0x4620>
   170c0:	pop	{r1, r2, lr}
   170c4:	mul	r3, r2, r0
   170c8:	sub	r1, r1, r3
   170cc:	bx	lr
   170d0:	push	{r1, lr}
   170d4:	mov	r0, #8
   170d8:	bl	11090 <raise@plt>
   170dc:	pop	{r1, pc}
   170e0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   170e4:	mov	r7, r0
   170e8:	ldr	r6, [pc, #76]	; 1713c <close_stdout@@Base+0x4898>
   170ec:	mov	r8, r1
   170f0:	ldr	r5, [pc, #72]	; 17140 <close_stdout@@Base+0x489c>
   170f4:	mov	r9, r2
   170f8:	add	r6, pc, r6
   170fc:	bl	1104c <fdopen@plt-0x20>
   17100:	add	r5, pc, r5
   17104:	rsb	r6, r5, r6
   17108:	asrs	r6, r6, #2
   1710c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   17110:	sub	r5, r5, #4
   17114:	mov	r4, #0
   17118:	add	r4, r4, #1
   1711c:	ldr	r3, [r5, #4]!
   17120:	mov	r0, r7
   17124:	mov	r1, r8
   17128:	mov	r2, r9
   1712c:	blx	r3
   17130:	cmp	r4, r6
   17134:	bne	17118 <close_stdout@@Base+0x4874>
   17138:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1713c:	andeq	r1, r1, ip, ror sp
   17140:	andeq	r1, r1, r0, ror sp
   17144:	bx	lr
   17148:	ldr	r3, [pc, #28]	; 1716c <close_stdout@@Base+0x48c8>
   1714c:	mov	r1, #0
   17150:	ldr	r2, [pc, #24]	; 17170 <close_stdout@@Base+0x48cc>
   17154:	add	r3, pc, r3
   17158:	ldr	r3, [r3, r2]
   1715c:	cmp	r3, #0
   17160:	ldrne	r2, [r3]
   17164:	moveq	r2, r3
   17168:	b	11264 <__cxa_atexit@plt>
   1716c:	andeq	r1, r1, r4, lsr #29
   17170:	andeq	r0, r0, r0, lsr #2

Disassembly of section .fini:

00017174 <.fini>:
   17174:	push	{r3, lr}
   17178:	pop	{r3, pc}
