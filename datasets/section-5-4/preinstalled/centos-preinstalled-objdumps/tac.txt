
centos-preinstalled/tac:     file format elf32-littlearm


Disassembly of section .init:

00011074 <.init>:
   11074:	push	{r3, lr}
   11078:	bl	11c68 <close@plt+0x8ec>
   1107c:	pop	{r3, pc}

Disassembly of section .plt:

00011080 <fdopen@plt-0x14>:
   11080:	push	{lr}		; (str lr, [sp, #-4]!)
   11084:	ldr	lr, [pc, #4]	; 11090 <fdopen@plt-0x4>
   11088:	add	lr, pc, lr
   1108c:	ldr	pc, [lr, #8]!
   11090:	andeq	r5, r1, r0, ror pc

00011094 <fdopen@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #86016	; 0x15000
   1109c:	ldr	pc, [ip, #3952]!	; 0xf70

000110a0 <calloc@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #86016	; 0x15000
   110a8:	ldr	pc, [ip, #3944]!	; 0xf68

000110ac <fputs_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #86016	; 0x15000
   110b4:	ldr	pc, [ip, #3936]!	; 0xf60

000110b8 <raise@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #86016	; 0x15000
   110c0:	ldr	pc, [ip, #3928]!	; 0xf58

000110c4 <strcmp@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #86016	; 0x15000
   110cc:	ldr	pc, [ip, #3920]!	; 0xf50

000110d0 <read@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #86016	; 0x15000
   110d8:	ldr	pc, [ip, #3912]!	; 0xf48

000110dc <fflush@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #86016	; 0x15000
   110e4:	ldr	pc, [ip, #3904]!	; 0xf40

000110e8 <memmove@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #86016	; 0x15000
   110f0:	ldr	pc, [ip, #3896]!	; 0xf38

000110f4 <free@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #86016	; 0x15000
   110fc:	ldr	pc, [ip, #3888]!	; 0xf30

00011100 <_exit@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #86016	; 0x15000
   11108:	ldr	pc, [ip, #3880]!	; 0xf28

0001110c <memcpy@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #86016	; 0x15000
   11114:	ldr	pc, [ip, #3872]!	; 0xf20

00011118 <mbsinit@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #86016	; 0x15000
   11120:	ldr	pc, [ip, #3864]!	; 0xf18

00011124 <ftruncate64@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #86016	; 0x15000
   1112c:	ldr	pc, [ip, #3856]!	; 0xf10

00011130 <fwrite_unlocked@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #86016	; 0x15000
   11138:	ldr	pc, [ip, #3848]!	; 0xf08

0001113c <memcmp@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #86016	; 0x15000
   11144:	ldr	pc, [ip, #3840]!	; 0xf00

00011148 <dcgettext@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #86016	; 0x15000
   11150:	ldr	pc, [ip, #3832]!	; 0xef8

00011154 <__stack_chk_fail@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #86016	; 0x15000
   1115c:	ldr	pc, [ip, #3824]!	; 0xef0

00011160 <unlink@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #86016	; 0x15000
   11168:	ldr	pc, [ip, #3816]!	; 0xee8

0001116c <realloc@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #86016	; 0x15000
   11174:	ldr	pc, [ip, #3808]!	; 0xee0

00011178 <textdomain@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #86016	; 0x15000
   11180:	ldr	pc, [ip, #3800]!	; 0xed8

00011184 <fflush_unlocked@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #86016	; 0x15000
   1118c:	ldr	pc, [ip, #3792]!	; 0xed0

00011190 <iswprint@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #86016	; 0x15000
   11198:	ldr	pc, [ip, #3784]!	; 0xec8

0001119c <fwrite@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #86016	; 0x15000
   111a4:	ldr	pc, [ip, #3776]!	; 0xec0

000111a8 <lseek64@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #86016	; 0x15000
   111b0:	ldr	pc, [ip, #3768]!	; 0xeb8

000111b4 <__ctype_get_mb_cur_max@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #86016	; 0x15000
   111bc:	ldr	pc, [ip, #3760]!	; 0xeb0

000111c0 <strcpy@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #86016	; 0x15000
   111c8:	ldr	pc, [ip, #3752]!	; 0xea8

000111cc <__fpending@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #86016	; 0x15000
   111d4:	ldr	pc, [ip, #3744]!	; 0xea0

000111d8 <mbrtowc@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #86016	; 0x15000
   111e0:	ldr	pc, [ip, #3736]!	; 0xe98

000111e4 <error@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #86016	; 0x15000
   111ec:	ldr	pc, [ip, #3728]!	; 0xe90

000111f0 <open64@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #86016	; 0x15000
   111f8:	ldr	pc, [ip, #3720]!	; 0xe88

000111fc <getenv@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #86016	; 0x15000
   11204:	ldr	pc, [ip, #3712]!	; 0xe80

00011208 <mkstemp64@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #86016	; 0x15000
   11210:	ldr	pc, [ip, #3704]!	; 0xe78

00011214 <malloc@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #86016	; 0x15000
   1121c:	ldr	pc, [ip, #3696]!	; 0xe70

00011220 <__libc_start_main@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #86016	; 0x15000
   11228:	ldr	pc, [ip, #3688]!	; 0xe68

0001122c <__freading@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #86016	; 0x15000
   11234:	ldr	pc, [ip, #3680]!	; 0xe60

00011238 <__gmon_start__@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #86016	; 0x15000
   11240:	ldr	pc, [ip, #3672]!	; 0xe58

00011244 <mempcpy@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #86016	; 0x15000
   1124c:	ldr	pc, [ip, #3664]!	; 0xe50

00011250 <getopt_long@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #86016	; 0x15000
   11258:	ldr	pc, [ip, #3656]!	; 0xe48

0001125c <__ctype_b_loc@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #86016	; 0x15000
   11264:	ldr	pc, [ip, #3648]!	; 0xe40

00011268 <exit@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #86016	; 0x15000
   11270:	ldr	pc, [ip, #3640]!	; 0xe38

00011274 <strlen@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #86016	; 0x15000
   1127c:	ldr	pc, [ip, #3632]!	; 0xe30

00011280 <re_search@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #86016	; 0x15000
   11288:	ldr	pc, [ip, #3624]!	; 0xe28

0001128c <ungetc@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #86016	; 0x15000
   11294:	ldr	pc, [ip, #3616]!	; 0xe20

00011298 <fcntl@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #86016	; 0x15000
   112a0:	ldr	pc, [ip, #3608]!	; 0xe18

000112a4 <__errno_location@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #86016	; 0x15000
   112ac:	ldr	pc, [ip, #3600]!	; 0xe10

000112b0 <__cxa_atexit@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #86016	; 0x15000
   112b8:	ldr	pc, [ip, #3592]!	; 0xe08

000112bc <memset@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #86016	; 0x15000
   112c4:	ldr	pc, [ip, #3584]!	; 0xe00

000112c8 <fscanf@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #86016	; 0x15000
   112d0:	ldr	pc, [ip, #3576]!	; 0xdf8

000112d4 <__printf_chk@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #86016	; 0x15000
   112dc:	ldr	pc, [ip, #3568]!	; 0xdf0

000112e0 <fileno@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #86016	; 0x15000
   112e8:	ldr	pc, [ip, #3560]!	; 0xde8

000112ec <__fprintf_chk@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #86016	; 0x15000
   112f4:	ldr	pc, [ip, #3552]!	; 0xde0

000112f8 <fclose@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #86016	; 0x15000
   11300:	ldr	pc, [ip, #3544]!	; 0xdd8

00011304 <fseeko64@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #86016	; 0x15000
   1130c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011310 <__uflow@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #86016	; 0x15000
   11318:	ldr	pc, [ip, #3528]!	; 0xdc8

0001131c <setlocale@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #86016	; 0x15000
   11324:	ldr	pc, [ip, #3520]!	; 0xdc0

00011328 <strrchr@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #86016	; 0x15000
   11330:	ldr	pc, [ip, #3512]!	; 0xdb8

00011334 <nl_langinfo@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #86016	; 0x15000
   1133c:	ldr	pc, [ip, #3504]!	; 0xdb0

00011340 <bindtextdomain@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #86016	; 0x15000
   11348:	ldr	pc, [ip, #3496]!	; 0xda8

0001134c <isatty@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #86016	; 0x15000
   11354:	ldr	pc, [ip, #3488]!	; 0xda0

00011358 <re_compile_pattern@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #86016	; 0x15000
   11360:	ldr	pc, [ip, #3480]!	; 0xd98

00011364 <strncmp@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #86016	; 0x15000
   1136c:	ldr	pc, [ip, #3472]!	; 0xd90

00011370 <abort@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #86016	; 0x15000
   11378:	ldr	pc, [ip, #3464]!	; 0xd88

0001137c <close@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #86016	; 0x15000
   11384:	ldr	pc, [ip, #3456]!	; 0xd80

Disassembly of section .text:

00011388 <close_stdout@@Base-0x1284>:
   11388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1138c:	mov	r6, r0
   11390:	sub	sp, sp, #52	; 0x34
   11394:	ldr	r0, [r1]
   11398:	mov	r4, r1
   1139c:	bl	128a4 <close_stdout@@Base+0x298>
   113a0:	ldr	r1, [pc, #1984]	; 11b68 <close@plt+0x7ec>
   113a4:	mov	r0, #6
   113a8:	ldr	r5, [pc, #1980]	; 11b6c <close@plt+0x7f0>
   113ac:	add	r1, pc, r1
   113b0:	ldr	r7, [pc, #1976]	; 11b70 <close@plt+0x7f4>
   113b4:	bl	1131c <setlocale@plt>
   113b8:	add	r5, pc, r5
   113bc:	ldr	r1, [pc, #1968]	; 11b74 <close@plt+0x7f8>
   113c0:	add	r7, pc, r7
   113c4:	mov	r0, r5
   113c8:	ldr	r8, [pc, #1960]	; 11b78 <close@plt+0x7fc>
   113cc:	add	r1, pc, r1
   113d0:	ldr	fp, [pc, #1956]	; 11b7c <close@plt+0x800>
   113d4:	bl	11340 <bindtextdomain@plt>
   113d8:	mov	r0, r5
   113dc:	ldr	r5, [pc, #1948]	; 11b80 <close@plt+0x804>
   113e0:	bl	11178 <textdomain@plt>
   113e4:	ldr	r3, [pc, #1944]	; 11b84 <close@plt+0x808>
   113e8:	add	r8, pc, r8
   113ec:	add	r5, pc, r5
   113f0:	ldr	r2, [pc, #1936]	; 11b88 <close@plt+0x80c>
   113f4:	ldr	sl, [pc, #1936]	; 11b8c <close@plt+0x810>
   113f8:	add	fp, pc, fp
   113fc:	ldr	r0, [r5, r3]
   11400:	add	r2, pc, r2
   11404:	ldr	r3, [pc, #1924]	; 11b90 <close@plt+0x814>
   11408:	add	sl, pc, sl
   1140c:	str	r2, [sp, #28]
   11410:	add	r7, r7, #8
   11414:	add	r3, pc, r3
   11418:	str	r3, [sp, #32]
   1141c:	bl	15d80 <close_stdout@@Base+0x3774>
   11420:	ldr	r3, [pc, #1900]	; 11b94 <close@plt+0x818>
   11424:	ldr	r1, [pc, #1900]	; 11b98 <close@plt+0x81c>
   11428:	mov	r2, #1
   1142c:	add	r3, pc, r3
   11430:	add	r1, pc, r1
   11434:	str	r2, [r3, #28]
   11438:	str	r1, [r3, #12]
   1143c:	strb	r2, [r3, #80]	; 0x50
   11440:	mov	r9, #0
   11444:	mov	r0, r6
   11448:	str	r9, [sp]
   1144c:	mov	r1, r4
   11450:	mov	r2, r8
   11454:	mov	r3, r7
   11458:	bl	11250 <getopt_long@plt>
   1145c:	cmn	r0, #1
   11460:	beq	1153c <close@plt+0x1c0>
   11464:	cmp	r0, #98	; 0x62
   11468:	beq	11534 <close@plt+0x1b8>
   1146c:	bgt	11488 <close@plt+0x10c>
   11470:	cmn	r0, #3
   11474:	beq	114dc <close@plt+0x160>
   11478:	cmn	r0, #2
   1147c:	bne	1152c <close@plt+0x1b0>
   11480:	mov	r0, r9
   11484:	bl	123c8 <close@plt+0x104c>
   11488:	cmp	r0, #114	; 0x72
   1148c:	beq	11524 <close@plt+0x1a8>
   11490:	cmp	r0, #115	; 0x73
   11494:	bne	1152c <close@plt+0x1b0>
   11498:	ldr	r3, [pc, #1788]	; 11b9c <close@plt+0x820>
   1149c:	ldr	r2, [sp, #28]
   114a0:	ldr	r3, [r5, r3]
   114a4:	ldr	r3, [r3]
   114a8:	ldrb	r9, [r3]
   114ac:	str	r3, [r2, #12]
   114b0:	cmp	r9, #0
   114b4:	bne	11440 <close@plt+0xc4>
   114b8:	ldr	r1, [sp, #32]
   114bc:	mov	r0, r9
   114c0:	mov	r2, #5
   114c4:	bl	11148 <dcgettext@plt>
   114c8:	mov	r1, r9
   114cc:	mov	r2, r0
   114d0:	mov	r0, #1
   114d4:	bl	111e4 <error@plt>
   114d8:	b	11440 <close@plt+0xc4>
   114dc:	ldr	r2, [pc, #1724]	; 11ba0 <close@plt+0x824>
   114e0:	ldr	r3, [pc, #1724]	; 11ba4 <close@plt+0x828>
   114e4:	ldr	r1, [pc, #1724]	; 11ba8 <close@plt+0x82c>
   114e8:	ldr	r0, [r5, r2]
   114ec:	ldr	r3, [r5, r3]
   114f0:	add	r1, pc, r1
   114f4:	ldr	r2, [pc, #1712]	; 11bac <close@plt+0x830>
   114f8:	ldr	r0, [r0]
   114fc:	add	r2, pc, r2
   11500:	ldr	r3, [r3]
   11504:	stm	sp, {r1, r2, r9}
   11508:	ldr	r1, [pc, #1696]	; 11bb0 <close@plt+0x834>
   1150c:	ldr	r2, [pc, #1696]	; 11bb4 <close@plt+0x838>
   11510:	add	r1, pc, r1
   11514:	add	r2, pc, r2
   11518:	bl	1463c <close_stdout@@Base+0x2030>
   1151c:	mov	r0, r9
   11520:	bl	11268 <exit@plt>
   11524:	str	r9, [sl, #28]
   11528:	b	11440 <close@plt+0xc4>
   1152c:	mov	r0, #1
   11530:	bl	123c8 <close@plt+0x104c>
   11534:	strb	r9, [fp, #80]	; 0x50
   11538:	b	11440 <close@plt+0xc4>
   1153c:	ldr	r7, [pc, #1652]	; 11bb8 <close@plt+0x83c>
   11540:	add	r7, pc, r7
   11544:	ldr	r8, [r7, #28]
   11548:	cmp	r8, r9
   1154c:	beq	115c8 <close@plt+0x24c>
   11550:	ldr	r0, [r7, #12]
   11554:	bl	11274 <strlen@plt>
   11558:	str	r0, [r7, #28]
   1155c:	str	r0, [r7, #16]
   11560:	ldr	r2, [pc, #1620]	; 11bbc <close@plt+0x840>
   11564:	mov	r3, #8192	; 0x2000
   11568:	add	r2, pc, r2
   1156c:	ldr	r2, [r2, #28]
   11570:	b	11580 <close@plt+0x204>
   11574:	cmp	r3, #0
   11578:	blt	115b8 <close@plt+0x23c>
   1157c:	lsl	r3, r3, #1
   11580:	cmp	r2, r3, lsr #1
   11584:	bcs	11574 <close@plt+0x1f8>
   11588:	add	r2, r2, #1
   1158c:	ldr	r7, [pc, #1580]	; 11bc0 <close@plt+0x844>
   11590:	add	r2, r2, r3
   11594:	add	r7, pc, r7
   11598:	cmp	r2, r3
   1159c:	lsl	r0, r2, #1
   115a0:	str	r3, [r7, #20]
   115a4:	str	r0, [r7, #76]	; 0x4c
   115a8:	bls	115b4 <close@plt+0x238>
   115ac:	cmp	r2, r0
   115b0:	bcc	11618 <close@plt+0x29c>
   115b4:	bl	14960 <close_stdout@@Base+0x2354>
   115b8:	ldr	r2, [pc, #1540]	; 11bc4 <close@plt+0x848>
   115bc:	add	r2, pc, r2
   115c0:	str	r3, [r2, #20]
   115c4:	b	115b4 <close@plt+0x238>
   115c8:	ldr	r9, [r7, #12]
   115cc:	add	r3, r7, #84	; 0x54
   115d0:	str	r8, [r7, #32]
   115d4:	str	r3, [r7, #48]	; 0x30
   115d8:	mov	r0, r9
   115dc:	str	r8, [r7, #36]	; 0x24
   115e0:	str	r8, [r7, #52]	; 0x34
   115e4:	bl	11274 <strlen@plt>
   115e8:	add	r2, r7, #32
   115ec:	mov	r1, r0
   115f0:	mov	r0, r9
   115f4:	bl	11358 <re_compile_pattern@plt>
   115f8:	subs	r3, r0, #0
   115fc:	beq	11560 <close@plt+0x1e4>
   11600:	ldr	r2, [pc, #1472]	; 11bc8 <close@plt+0x84c>
   11604:	mov	r1, r8
   11608:	mov	r0, #1
   1160c:	add	r2, pc, r2
   11610:	bl	111e4 <error@plt>
   11614:	b	11560 <close@plt+0x1e4>
   11618:	bl	1474c <close_stdout@@Base+0x2140>
   1161c:	ldr	r9, [r7, #28]
   11620:	cmp	r9, #0
   11624:	mov	r8, r0
   11628:	str	r0, [r7, #24]
   1162c:	addeq	r8, r0, #1
   11630:	streq	r8, [r7, #24]
   11634:	bne	11a8c <close@plt+0x710>
   11638:	ldr	r3, [pc, #1420]	; 11bcc <close@plt+0x850>
   1163c:	ldr	r3, [r5, r3]
   11640:	ldr	r3, [r3]
   11644:	cmp	r6, r3
   11648:	addgt	r3, r4, r3, lsl #2
   1164c:	ldrle	r3, [pc, #1404]	; 11bd0 <close@plt+0x854>
   11650:	addle	r3, pc, r3
   11654:	sub	r8, r3, #4
   11658:	ldr	r9, [pc, #1396]	; 11bd4 <close@plt+0x858>
   1165c:	ldr	r3, [pc, #1396]	; 11bd8 <close@plt+0x85c>
   11660:	mov	fp, #1
   11664:	ldr	r4, [pc, #1392]	; 11bdc <close@plt+0x860>
   11668:	add	r9, pc, r9
   1166c:	add	r3, pc, r3
   11670:	ldr	r2, [pc, #1384]	; 11be0 <close@plt+0x864>
   11674:	str	r3, [sp, #40]	; 0x28
   11678:	add	r4, pc, r4
   1167c:	ldr	r3, [pc, #1376]	; 11be4 <close@plt+0x868>
   11680:	add	r2, pc, r2
   11684:	str	r2, [sp, #32]
   11688:	add	r3, pc, r3
   1168c:	str	r3, [sp, #44]	; 0x2c
   11690:	ldr	r7, [r8, #4]!
   11694:	cmp	r7, #0
   11698:	beq	119e0 <close@plt+0x664>
   1169c:	ldrb	r3, [r7]
   116a0:	cmp	r3, #45	; 0x2d
   116a4:	bne	117e8 <close@plt+0x46c>
   116a8:	ldrb	r5, [r7, #1]
   116ac:	cmp	r5, #0
   116b0:	bne	117e8 <close@plt+0x46c>
   116b4:	ldr	ip, [pc, #1324]	; 11be8 <close@plt+0x86c>
   116b8:	mov	r0, r5
   116bc:	ldr	r1, [pc, #1320]	; 11bec <close@plt+0x870>
   116c0:	mov	r2, #5
   116c4:	add	ip, pc, ip
   116c8:	mov	r3, #1
   116cc:	add	r1, pc, r1
   116d0:	str	r3, [sp, #28]
   116d4:	strb	r3, [ip, #340]	; 0x154
   116d8:	bl	11148 <dcgettext@plt>
   116dc:	mov	r7, r0
   116e0:	mov	r3, #2
   116e4:	mov	r0, r5
   116e8:	str	r3, [sp]
   116ec:	mov	r2, #0
   116f0:	mov	r3, #0
   116f4:	bl	111a8 <lseek64@plt>
   116f8:	cmp	r0, #0
   116fc:	sbcs	r3, r1, #0
   11700:	blt	11714 <close@plt+0x398>
   11704:	mov	r0, r5
   11708:	bl	1134c <isatty@plt>
   1170c:	cmp	r0, #0
   11710:	beq	118e4 <close@plt+0x568>
   11714:	ldr	r3, [r9, #344]	; 0x158
   11718:	cmp	r3, #0
   1171c:	beq	11974 <close@plt+0x5f8>
   11720:	mov	r1, #0
   11724:	mov	r2, #0
   11728:	str	r1, [sp]
   1172c:	mov	r3, #0
   11730:	ldr	r0, [r9, #348]	; 0x15c
   11734:	bl	14ab8 <close_stdout@@Base+0x24ac>
   11738:	cmp	r0, #0
   1173c:	blt	11898 <close@plt+0x51c>
   11740:	ldr	r0, [r9, #348]	; 0x15c
   11744:	bl	112e0 <fileno@plt>
   11748:	mov	r2, #0
   1174c:	mov	r3, #0
   11750:	bl	11124 <ftruncate64@plt>
   11754:	cmp	r0, #0
   11758:	blt	11898 <close@plt+0x51c>
   1175c:	ldr	r3, [sp, #32]
   11760:	ldr	r2, [r3, #344]	; 0x158
   11764:	ldr	r6, [r3, #348]	; 0x15c
   11768:	str	r2, [sp, #36]	; 0x24
   1176c:	b	11794 <close@plt+0x418>
   11770:	cmn	sl, #1
   11774:	beq	118f8 <close@plt+0x57c>
   11778:	ldr	r0, [r4, #24]
   1177c:	mov	r1, #1
   11780:	mov	r2, sl
   11784:	mov	r3, r6
   11788:	bl	11130 <fwrite_unlocked@plt>
   1178c:	cmp	sl, r0
   11790:	bne	11948 <close@plt+0x5cc>
   11794:	mov	r0, r5
   11798:	ldr	r1, [r4, #24]
   1179c:	ldr	r2, [r4, #20]
   117a0:	bl	14100 <close_stdout@@Base+0x1af4>
   117a4:	subs	sl, r0, #0
   117a8:	bne	11770 <close@plt+0x3f4>
   117ac:	mov	r0, r6
   117b0:	bl	11184 <fflush_unlocked@plt>
   117b4:	cmp	r0, #0
   117b8:	bne	11a14 <close@plt+0x698>
   117bc:	mov	r0, r6
   117c0:	bl	112e0 <fileno@plt>
   117c4:	ldr	r1, [sp, #36]	; 0x24
   117c8:	bl	11e68 <close@plt+0xaec>
   117cc:	mov	r6, r0
   117d0:	ldr	r3, [sp, #28]
   117d4:	cmp	r3, #0
   117d8:	beq	11848 <close@plt+0x4cc>
   117dc:	mov	r0, r6
   117e0:	and	fp, r0, fp
   117e4:	b	11690 <close@plt+0x314>
   117e8:	mov	r0, r7
   117ec:	mov	r1, #0
   117f0:	bl	111f0 <open64@plt>
   117f4:	subs	r5, r0, #0
   117f8:	movge	r2, #0
   117fc:	strge	r2, [sp, #28]
   11800:	bge	116e0 <close@plt+0x364>
   11804:	bl	112a4 <__errno_location@plt>
   11808:	ldr	r1, [pc, #992]	; 11bf0 <close@plt+0x874>
   1180c:	mov	r2, #5
   11810:	add	r1, pc, r1
   11814:	ldr	r5, [r0]
   11818:	mov	r0, #0
   1181c:	bl	11148 <dcgettext@plt>
   11820:	mov	r6, r0
   11824:	mov	r0, r7
   11828:	bl	140f4 <close_stdout@@Base+0x1ae8>
   1182c:	mov	r1, r5
   11830:	mov	r2, r6
   11834:	mov	r3, r0
   11838:	mov	r0, #0
   1183c:	bl	111e4 <error@plt>
   11840:	mov	r0, #0
   11844:	b	117e0 <close@plt+0x464>
   11848:	mov	r0, r5
   1184c:	bl	1137c <close@plt>
   11850:	cmp	r0, #0
   11854:	beq	117dc <close@plt+0x460>
   11858:	bl	112a4 <__errno_location@plt>
   1185c:	ldr	r1, [sp, #40]	; 0x28
   11860:	mov	r2, #5
   11864:	ldr	r5, [r0]
   11868:	ldr	r0, [sp, #28]
   1186c:	bl	11148 <dcgettext@plt>
   11870:	mov	r6, r0
   11874:	mov	r0, r7
   11878:	bl	13fa0 <close_stdout@@Base+0x1994>
   1187c:	mov	r1, r5
   11880:	mov	r2, r6
   11884:	mov	r3, r0
   11888:	ldr	r0, [sp, #28]
   1188c:	bl	111e4 <error@plt>
   11890:	ldr	r0, [sp, #28]
   11894:	b	117e0 <close@plt+0x464>
   11898:	bl	112a4 <__errno_location@plt>
   1189c:	ldr	r1, [pc, #848]	; 11bf4 <close@plt+0x878>
   118a0:	mov	r2, #5
   118a4:	add	r1, pc, r1
   118a8:	ldr	r6, [r0]
   118ac:	mov	r0, #0
   118b0:	bl	11148 <dcgettext@plt>
   118b4:	ldr	r3, [pc, #828]	; 11bf8 <close@plt+0x87c>
   118b8:	add	r3, pc, r3
   118bc:	mov	sl, r0
   118c0:	ldr	r0, [r3, #344]	; 0x158
   118c4:	bl	140f4 <close_stdout@@Base+0x1ae8>
   118c8:	mov	r1, r6
   118cc:	mov	r2, sl
   118d0:	mov	r3, r0
   118d4:	mov	r0, #0
   118d8:	bl	111e4 <error@plt>
   118dc:	mov	r6, #0
   118e0:	b	117d0 <close@plt+0x454>
   118e4:	mov	r0, r5
   118e8:	mov	r1, r7
   118ec:	bl	11e68 <close@plt+0xaec>
   118f0:	mov	r6, r0
   118f4:	b	117d0 <close@plt+0x454>
   118f8:	bl	112a4 <__errno_location@plt>
   118fc:	ldr	r1, [pc, #760]	; 11bfc <close@plt+0x880>
   11900:	mov	r2, #5
   11904:	add	r1, pc, r1
   11908:	ldr	ip, [r0]
   1190c:	mov	r0, #0
   11910:	str	ip, [sp, #20]
   11914:	bl	11148 <dcgettext@plt>
   11918:	mov	sl, r0
   1191c:	mov	r0, r7
   11920:	bl	13fa0 <close_stdout@@Base+0x1994>
   11924:	ldr	ip, [sp, #20]
   11928:	mov	r2, sl
   1192c:	mov	r1, ip
   11930:	mov	r3, r0
   11934:	mov	r0, #0
   11938:	bl	111e4 <error@plt>
   1193c:	mov	r0, r6
   11940:	bl	149b8 <close_stdout@@Base+0x23ac>
   11944:	b	118dc <close@plt+0x560>
   11948:	bl	112a4 <__errno_location@plt>
   1194c:	ldr	r1, [pc, #684]	; 11c00 <close@plt+0x884>
   11950:	mov	r2, #5
   11954:	add	r1, pc, r1
   11958:	ldr	ip, [r0]
   1195c:	mov	r0, #0
   11960:	str	ip, [sp, #20]
   11964:	bl	11148 <dcgettext@plt>
   11968:	mov	sl, r0
   1196c:	ldr	r0, [sp, #36]	; 0x24
   11970:	b	11920 <close@plt+0x5a4>
   11974:	ldr	r0, [pc, #648]	; 11c04 <close@plt+0x888>
   11978:	add	r0, pc, r0
   1197c:	bl	111fc <getenv@plt>
   11980:	subs	sl, r0, #0
   11984:	beq	11b00 <close@plt+0x784>
   11988:	ldr	r1, [pc, #632]	; 11c08 <close@plt+0x88c>
   1198c:	mov	r2, #0
   11990:	mov	r0, sl
   11994:	ldr	r6, [pc, #624]	; 11c0c <close@plt+0x890>
   11998:	add	r1, pc, r1
   1199c:	bl	127c8 <close_stdout@@Base+0x1bc>
   119a0:	add	r6, pc, r6
   119a4:	str	r0, [r6, #344]	; 0x158
   119a8:	bl	14160 <close_stdout@@Base+0x1b54>
   119ac:	subs	r2, r0, #0
   119b0:	str	r2, [sp, #36]	; 0x24
   119b4:	blt	11aa4 <close@plt+0x728>
   119b8:	ldr	r1, [pc, #592]	; 11c10 <close@plt+0x894>
   119bc:	add	r1, pc, r1
   119c0:	bl	11094 <fdopen@plt>
   119c4:	cmp	r0, #0
   119c8:	mov	sl, r0
   119cc:	str	r0, [r6, #348]	; 0x15c
   119d0:	beq	11b0c <close@plt+0x790>
   119d4:	ldr	r0, [r6, #344]	; 0x158
   119d8:	bl	11160 <unlink@plt>
   119dc:	b	1175c <close@plt+0x3e0>
   119e0:	mov	r0, r7
   119e4:	mov	r1, r7
   119e8:	bl	11d60 <close@plt+0x9e4>
   119ec:	ldr	r3, [pc, #544]	; 11c14 <close@plt+0x898>
   119f0:	add	r3, pc, r3
   119f4:	ldrb	r3, [r3, #340]	; 0x154
   119f8:	cmp	r3, #0
   119fc:	bne	11a5c <close@plt+0x6e0>
   11a00:	cmp	fp, #0
   11a04:	movne	r0, #0
   11a08:	bne	11a10 <close@plt+0x694>
   11a0c:	mov	r0, #1
   11a10:	bl	11268 <exit@plt>
   11a14:	bl	112a4 <__errno_location@plt>
   11a18:	ldr	r1, [sp, #44]	; 0x2c
   11a1c:	mov	r2, #5
   11a20:	ldr	ip, [r0]
   11a24:	mov	r0, sl
   11a28:	str	ip, [sp, #20]
   11a2c:	bl	11148 <dcgettext@plt>
   11a30:	mov	r2, r0
   11a34:	ldr	r0, [sp, #36]	; 0x24
   11a38:	str	r2, [sp, #24]
   11a3c:	bl	13fa0 <close_stdout@@Base+0x1994>
   11a40:	ldr	ip, [sp, #20]
   11a44:	ldr	r2, [sp, #24]
   11a48:	mov	r1, ip
   11a4c:	mov	r3, r0
   11a50:	mov	r0, sl
   11a54:	bl	111e4 <error@plt>
   11a58:	b	1193c <close@plt+0x5c0>
   11a5c:	mov	r0, r7
   11a60:	bl	1137c <close@plt>
   11a64:	cmp	r0, #0
   11a68:	bge	11a00 <close@plt+0x684>
   11a6c:	bl	112a4 <__errno_location@plt>
   11a70:	ldr	r2, [pc, #416]	; 11c18 <close@plt+0x89c>
   11a74:	add	r2, pc, r2
   11a78:	mov	r3, r0
   11a7c:	mov	r0, r7
   11a80:	ldr	r1, [r3]
   11a84:	bl	111e4 <error@plt>
   11a88:	b	11a0c <close@plt+0x690>
   11a8c:	ldr	r1, [r7, #12]
   11a90:	add	r2, r9, #1
   11a94:	bl	1110c <memcpy@plt>
   11a98:	add	r8, r8, r9
   11a9c:	str	r8, [r7, #24]
   11aa0:	b	11638 <close@plt+0x2bc>
   11aa4:	bl	112a4 <__errno_location@plt>
   11aa8:	ldr	r1, [pc, #364]	; 11c1c <close@plt+0x8a0>
   11aac:	mov	r2, #5
   11ab0:	add	r1, pc, r1
   11ab4:	ldr	r6, [r0]
   11ab8:	mov	r0, #0
   11abc:	bl	11148 <dcgettext@plt>
   11ac0:	mov	r2, r0
   11ac4:	mov	r0, sl
   11ac8:	str	r2, [sp, #24]
   11acc:	bl	140f4 <close_stdout@@Base+0x1ae8>
   11ad0:	mov	r1, r6
   11ad4:	ldr	r2, [sp, #24]
   11ad8:	mov	r3, r0
   11adc:	mov	r0, #0
   11ae0:	bl	111e4 <error@plt>
   11ae4:	ldr	r6, [pc, #308]	; 11c20 <close@plt+0x8a4>
   11ae8:	add	r6, pc, r6
   11aec:	ldr	r0, [r6, #344]	; 0x158
   11af0:	bl	110f4 <free@plt>
   11af4:	mov	r3, #0
   11af8:	str	r3, [r6, #344]	; 0x158
   11afc:	b	118dc <close@plt+0x560>
   11b00:	ldr	sl, [pc, #284]	; 11c24 <close@plt+0x8a8>
   11b04:	add	sl, pc, sl
   11b08:	b	11988 <close@plt+0x60c>
   11b0c:	bl	112a4 <__errno_location@plt>
   11b10:	ldr	r1, [pc, #272]	; 11c28 <close@plt+0x8ac>
   11b14:	mov	r2, #5
   11b18:	add	r1, pc, r1
   11b1c:	ldr	ip, [r0]
   11b20:	mov	r0, sl
   11b24:	str	ip, [sp, #20]
   11b28:	bl	11148 <dcgettext@plt>
   11b2c:	mov	r2, r0
   11b30:	ldr	r0, [r6, #344]	; 0x158
   11b34:	str	r2, [sp, #24]
   11b38:	bl	140f4 <close_stdout@@Base+0x1ae8>
   11b3c:	ldr	ip, [sp, #20]
   11b40:	ldr	r2, [sp, #24]
   11b44:	mov	r1, ip
   11b48:	mov	r3, r0
   11b4c:	mov	r0, sl
   11b50:	bl	111e4 <error@plt>
   11b54:	ldr	r0, [sp, #36]	; 0x24
   11b58:	bl	1137c <close@plt>
   11b5c:	ldr	r0, [r6, #344]	; 0x158
   11b60:	bl	11160 <unlink@plt>
   11b64:	b	11ae4 <close@plt+0x768>
   11b68:	andeq	r4, r0, r8, lsl #27
   11b6c:			; <UNDEFINED> instruction: 0x00004cbc
   11b70:			; <UNDEFINED> instruction: 0x00015ab4
   11b74:	andeq	r4, r0, r4, ror sp
   11b78:	andeq	r4, r0, r8, lsr #27
   11b7c:	andeq	r7, r1, ip, lsl #27
   11b80:	andeq	r5, r1, ip, lsl #24
   11b84:	andeq	r0, r0, ip, lsl r1
   11b88:	andeq	r7, r1, r4, lsl #27
   11b8c:	andeq	r7, r1, ip, ror sp
   11b90:	andeq	r4, r0, r0, asr #26
   11b94:	andeq	r7, r1, r8, asr sp
   11b98:			; <UNDEFINED> instruction: 0x00004bbc
   11b9c:	andeq	r0, r0, r0, asr #2
   11ba0:	andeq	r0, r0, r8, lsr #2
   11ba4:	andeq	r0, r0, r4, lsl r1
   11ba8:	andeq	r4, r0, r4, lsl #25
   11bac:	andeq	r4, r0, r4, lsl #25
   11bb0:	andeq	r4, r0, r0, ror #24
   11bb4:	andeq	r4, r0, ip, asr fp
   11bb8:	andeq	r7, r1, r4, asr #24
   11bbc:	andeq	r7, r1, ip, lsl ip
   11bc0:	strdeq	r7, [r1], -r0
   11bc4:	andeq	r7, r1, r8, asr #23
   11bc8:	andeq	r4, r0, r8, lsl #25
   11bcc:	andeq	r0, r0, r0, lsl r1
   11bd0:	andeq	r5, r1, r4, lsr #16
   11bd4:	andeq	r7, r1, ip, lsl fp
   11bd8:	andeq	r4, r0, r8, asr r7
   11bdc:	andeq	r7, r1, ip, lsl #22
   11be0:	andeq	r7, r1, r4, lsl #22
   11be4:	andeq	r4, r0, r0, asr #23
   11be8:	andeq	r7, r1, r0, asr #21
   11bec:	andeq	r4, r0, ip, asr #21
   11bf0:	muleq	r0, r8, r9
   11bf4:	andeq	r4, r0, r4, lsl #19
   11bf8:	andeq	r7, r1, ip, asr #17
   11bfc:	andeq	r4, r0, r0, asr #9
   11c00:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   11c04:	andeq	r4, r0, r0, asr r8
   11c08:	andeq	r4, r0, r8, lsr r8
   11c0c:	andeq	r7, r1, r4, ror #15
   11c10:	andeq	r4, r0, r8, asr #16
   11c14:	muleq	r1, r4, r7
   11c18:	andeq	r4, r0, r4, ror #15
   11c1c:	andeq	r4, r0, ip, lsr #14
   11c20:	muleq	r1, ip, r6
   11c24:	andeq	r4, r0, r4, lsr r6
   11c28:	strdeq	r4, [r0], -r0
   11c2c:	mov	fp, #0
   11c30:	mov	lr, #0
   11c34:	pop	{r1}		; (ldr r1, [sp], #4)
   11c38:	mov	r2, sp
   11c3c:	push	{r2}		; (str r2, [sp, #-4]!)
   11c40:	push	{r0}		; (str r0, [sp, #-4]!)
   11c44:	ldr	ip, [pc, #16]	; 11c5c <close@plt+0x8e0>
   11c48:	push	{ip}		; (str ip, [sp, #-4]!)
   11c4c:	ldr	r0, [pc, #12]	; 11c60 <close@plt+0x8e4>
   11c50:	ldr	r3, [pc, #12]	; 11c64 <close@plt+0x8e8>
   11c54:	bl	11220 <__libc_start_main@plt>
   11c58:	bl	11370 <abort@plt>
   11c5c:	andeq	r5, r1, ip, ror sp
   11c60:	andeq	r1, r1, r8, lsl #7
   11c64:	andeq	r5, r1, r8, lsl sp
   11c68:	ldr	r3, [pc, #20]	; 11c84 <close@plt+0x908>
   11c6c:	ldr	r2, [pc, #20]	; 11c88 <close@plt+0x90c>
   11c70:	add	r3, pc, r3
   11c74:	ldr	r2, [r3, r2]
   11c78:	cmp	r2, #0
   11c7c:	bxeq	lr
   11c80:	b	11238 <__gmon_start__@plt>
   11c84:	andeq	r5, r1, r8, lsl #7
   11c88:	andeq	r0, r0, r0, lsr #2
   11c8c:	push	{r3, lr}
   11c90:	movw	r0, #29072	; 0x7190
   11c94:	ldr	r3, [pc, #36]	; 11cc0 <close@plt+0x944>
   11c98:	movt	r0, #2
   11c9c:	rsb	r3, r0, r3
   11ca0:	cmp	r3, #6
   11ca4:	popls	{r3, pc}
   11ca8:	movw	r3, #0
   11cac:	movt	r3, #0
   11cb0:	cmp	r3, #0
   11cb4:	popeq	{r3, pc}
   11cb8:	blx	r3
   11cbc:	pop	{r3, pc}
   11cc0:	muleq	r2, r3, r1
   11cc4:	push	{r3, lr}
   11cc8:	movw	r0, #29072	; 0x7190
   11ccc:	movw	r3, #29072	; 0x7190
   11cd0:	movt	r0, #2
   11cd4:	movt	r3, #2
   11cd8:	rsb	r3, r0, r3
   11cdc:	asr	r3, r3, #2
   11ce0:	add	r3, r3, r3, lsr #31
   11ce4:	asrs	r1, r3, #1
   11ce8:	popeq	{r3, pc}
   11cec:	movw	r2, #0
   11cf0:	movt	r2, #0
   11cf4:	cmp	r2, #0
   11cf8:	popeq	{r3, pc}
   11cfc:	blx	r2
   11d00:	pop	{r3, pc}
   11d04:	push	{r4, lr}
   11d08:	movw	r4, #29072	; 0x7190
   11d0c:	movt	r4, #2
   11d10:	ldrb	r3, [r4]
   11d14:	cmp	r3, #0
   11d18:	popne	{r4, pc}
   11d1c:	bl	11c8c <close@plt+0x910>
   11d20:	mov	r3, #1
   11d24:	strb	r3, [r4]
   11d28:	pop	{r4, pc}
   11d2c:	movw	r0, #28280	; 0x6e78
   11d30:	movt	r0, #2
   11d34:	push	{r3, lr}
   11d38:	ldr	r3, [r0]
   11d3c:	cmp	r3, #0
   11d40:	beq	11d58 <close@plt+0x9dc>
   11d44:	movw	r3, #0
   11d48:	movt	r3, #0
   11d4c:	cmp	r3, #0
   11d50:	beq	11d58 <close@plt+0x9dc>
   11d54:	blx	r3
   11d58:	pop	{r3, lr}
   11d5c:	b	11cc4 <close@plt+0x948>
   11d60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d64:	cmp	r0, #0
   11d68:	ldr	sl, [pc, #220]	; 11e4c <close@plt+0xad0>
   11d6c:	mov	r5, r0
   11d70:	rsb	r6, r0, r1
   11d74:	ldr	r3, [pc, #212]	; 11e50 <close@plt+0xad4>
   11d78:	add	sl, pc, sl
   11d7c:	add	r3, pc, r3
   11d80:	ldr	r0, [sl, #8]
   11d84:	rsb	r4, r0, #8192	; 0x2000
   11d88:	beq	11e10 <close@plt+0xa94>
   11d8c:	cmp	r6, r4
   11d90:	bcc	11e38 <close@plt+0xabc>
   11d94:	ldr	r2, [pc, #184]	; 11e54 <close@plt+0xad8>
   11d98:	mov	r9, #0
   11d9c:	ldr	r7, [pc, #180]	; 11e58 <close@plt+0xadc>
   11da0:	ldr	r8, [r3, r2]
   11da4:	add	r7, pc, r7
   11da8:	mov	r1, r5
   11dac:	mov	r2, r4
   11db0:	add	r0, r7, r0
   11db4:	rsb	r6, r4, r6
   11db8:	bl	1110c <memcpy@plt>
   11dbc:	mov	r0, r7
   11dc0:	mov	r1, #1
   11dc4:	mov	r2, #8192	; 0x2000
   11dc8:	ldr	r3, [r8]
   11dcc:	add	r5, r5, r4
   11dd0:	bl	11130 <fwrite_unlocked@plt>
   11dd4:	cmp	r6, #8192	; 0x2000
   11dd8:	mov	r4, #8192	; 0x2000
   11ddc:	mov	r0, #0
   11de0:	str	r9, [sl, #8]
   11de4:	bcs	11da8 <close@plt+0xa2c>
   11de8:	mov	r0, r7
   11dec:	mov	r4, #0
   11df0:	mov	r2, r6
   11df4:	mov	r1, r5
   11df8:	bl	1110c <memcpy@plt>
   11dfc:	ldr	r3, [pc, #88]	; 11e5c <close@plt+0xae0>
   11e00:	add	r6, r6, r4
   11e04:	add	r3, pc, r3
   11e08:	str	r6, [r3, #8]
   11e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e10:	ldr	ip, [pc, #60]	; 11e54 <close@plt+0xad8>
   11e14:	mov	r2, r0
   11e18:	ldr	r0, [pc, #64]	; 11e60 <close@plt+0xae4>
   11e1c:	mov	r1, #1
   11e20:	ldr	r3, [r3, ip]
   11e24:	add	r0, pc, r0
   11e28:	ldr	r3, [r3]
   11e2c:	bl	11130 <fwrite_unlocked@plt>
   11e30:	str	r5, [sl, #8]
   11e34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e38:	ldr	r3, [pc, #36]	; 11e64 <close@plt+0xae8>
   11e3c:	mov	r4, r0
   11e40:	add	r3, pc, r3
   11e44:	add	r0, r3, r0
   11e48:	b	11df0 <close@plt+0xa74>
   11e4c:	andeq	r7, r1, ip, lsl #8
   11e50:	andeq	r5, r1, ip, ror r2
   11e54:	andeq	r0, r0, r8, lsr #2
   11e58:	andeq	r5, r1, r8, ror #7
   11e5c:	andeq	r7, r1, r0, lsl #7
   11e60:	andeq	r5, r1, r8, ror #6
   11e64:	andeq	r5, r1, ip, asr #6
   11e68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e6c:	sub	sp, sp, #60	; 0x3c
   11e70:	ldr	r4, [pc, #1300]	; 1238c <close@plt+0x1010>
   11e74:	mov	ip, #2
   11e78:	str	r1, [sp, #48]	; 0x30
   11e7c:	mov	r2, #0
   11e80:	add	r4, pc, r4
   11e84:	mov	r3, #0
   11e88:	str	r0, [sp, #20]
   11e8c:	ldr	r1, [r4, #12]
   11e90:	ldr	r6, [r4, #16]
   11e94:	ldrb	r5, [r1]
   11e98:	str	ip, [sp]
   11e9c:	str	r1, [sp, #32]
   11ea0:	bl	111a8 <lseek64@plt>
   11ea4:	mov	r8, r0
   11ea8:	mov	r9, r1
   11eac:	cmp	r8, #1
   11eb0:	sbcs	r2, r9, #0
   11eb4:	blt	1233c <close@plt+0xfc0>
   11eb8:	ldr	r4, [r4, #20]
   11ebc:	mov	fp, #0
   11ec0:	mov	r3, fp
   11ec4:	mov	r7, #0
   11ec8:	mov	r2, r4
   11ecc:	mov	sl, r4
   11ed0:	bl	1538c <close_stdout@@Base+0x2d80>
   11ed4:	mov	r0, r8
   11ed8:	mov	r1, r9
   11edc:	str	r7, [sp]
   11ee0:	cmp	r2, #0
   11ee4:	movne	sl, r2
   11ee8:	movne	r4, r2
   11eec:	movne	fp, #0
   11ef0:	subs	r0, r0, sl
   11ef4:	sbc	r1, r1, fp
   11ef8:	strd	r0, [sp, #8]
   11efc:	mov	r2, r0
   11f00:	mov	r3, r1
   11f04:	ldr	r0, [sp, #20]
   11f08:	bl	111a8 <lseek64@plt>
   11f0c:	cmp	r0, #0
   11f10:	sbcs	r2, r1, #0
   11f14:	blt	12348 <close@plt+0xfcc>
   11f18:	ldr	r7, [pc, #1136]	; 12390 <close@plt+0x1014>
   11f1c:	mov	r2, r4
   11f20:	ldr	r0, [sp, #20]
   11f24:	add	r7, pc, r7
   11f28:	ldr	r1, [r7, #24]
   11f2c:	bl	14100 <close_stdout@@Base+0x1af4>
   11f30:	cmp	r4, r0
   11f34:	bne	122a0 <close@plt+0xf24>
   11f38:	ldr	ip, [pc, #1108]	; 12394 <close@plt+0x1018>
   11f3c:	sub	r6, r6, #1
   11f40:	ldr	r3, [r7, #28]
   11f44:	add	ip, pc, ip
   11f48:	str	ip, [sp, #24]
   11f4c:	mov	ip, #1
   11f50:	str	ip, [sp, #28]
   11f54:	ldr	ip, [sp, #24]
   11f58:	cmp	r3, #0
   11f5c:	ldr	r8, [r7, #24]
   11f60:	add	ip, ip, #32
   11f64:	str	ip, [sp, #36]	; 0x24
   11f68:	ldr	ip, [pc, #1064]	; 12398 <close@plt+0x101c>
   11f6c:	add	r9, r8, r4
   11f70:	ldr	sl, [pc, #1060]	; 1239c <close@plt+0x1020>
   11f74:	rsbne	r4, r6, r9
   11f78:	add	ip, pc, ip
   11f7c:	str	ip, [sp, #52]	; 0x34
   11f80:	ldr	ip, [pc, #1048]	; 123a0 <close@plt+0x1024>
   11f84:	add	sl, pc, sl
   11f88:	moveq	r4, r9
   11f8c:	add	ip, pc, ip
   11f90:	str	ip, [sp, #40]	; 0x28
   11f94:	ldr	ip, [pc, #1032]	; 123a4 <close@plt+0x1028>
   11f98:	add	ip, pc, ip
   11f9c:	str	ip, [sp, #44]	; 0x2c
   11fa0:	cmp	r3, #0
   11fa4:	bne	1214c <close@plt+0xdd0>
   11fa8:	rsb	fp, r8, r4
   11fac:	rsb	r7, fp, #1
   11fb0:	cmp	r7, #1
   11fb4:	ble	12210 <close@plt+0xe94>
   11fb8:	ldr	r1, [sp, #40]	; 0x28
   11fbc:	mov	r2, #5
   11fc0:	mov	r0, #0
   11fc4:	bl	11148 <dcgettext@plt>
   11fc8:	mov	r1, #0
   11fcc:	mov	r2, r0
   11fd0:	mov	r0, #1
   11fd4:	bl	111e4 <error@plt>
   11fd8:	ldr	ip, [sp, #44]	; 0x2c
   11fdc:	ldr	r8, [ip, #24]
   11fe0:	ldr	ip, [sp, #24]
   11fe4:	mov	r2, fp
   11fe8:	str	r7, [sp]
   11fec:	mov	r1, r8
   11ff0:	add	r0, ip, #64	; 0x40
   11ff4:	sub	r3, fp, #1
   11ff8:	str	r0, [sp, #4]
   11ffc:	ldr	r0, [sp, #36]	; 0x24
   12000:	bl	11280 <re_search@plt>
   12004:	cmn	r0, #1
   12008:	beq	12254 <close@plt+0xed8>
   1200c:	cmn	r0, #2
   12010:	beq	122e8 <close@plt+0xf6c>
   12014:	ldr	ip, [sp, #24]
   12018:	ldr	r3, [ip, #68]	; 0x44
   1201c:	ldr	r2, [ip, #72]	; 0x48
   12020:	ldr	r8, [ip, #24]
   12024:	ldr	r3, [r3]
   12028:	ldr	r2, [r2]
   1202c:	add	r4, r8, r3
   12030:	rsb	r3, r3, r2
   12034:	str	r3, [ip, #16]
   12038:	cmp	r4, r8
   1203c:	bcs	12198 <close@plt+0xe1c>
   12040:	ldrd	r0, [sp, #8]
   12044:	orrs	r1, r0, r1
   12048:	beq	12314 <close@plt+0xf98>
   1204c:	ldr	r4, [pc, #852]	; 123a8 <close@plt+0x102c>
   12050:	rsb	r9, r8, r9
   12054:	add	r4, pc, r4
   12058:	ldr	r2, [r4, #20]
   1205c:	cmp	r9, r2
   12060:	bls	120a4 <close@plt+0xd28>
   12064:	ldr	r7, [r4, #28]
   12068:	lsl	r3, r2, #1
   1206c:	str	r3, [r4, #20]
   12070:	add	r1, r7, #2
   12074:	ldr	r3, [r4, #76]	; 0x4c
   12078:	cmp	r7, #0
   1207c:	add	r1, r1, r2, lsl #2
   12080:	str	r1, [r4, #76]	; 0x4c
   12084:	moveq	r7, #1
   12088:	cmp	r3, r1
   1208c:	bhi	12388 <close@plt+0x100c>
   12090:	rsb	r0, r7, r8
   12094:	bl	147a4 <close_stdout@@Base+0x2198>
   12098:	ldr	r2, [r4, #20]
   1209c:	add	r0, r0, r7
   120a0:	str	r0, [r4, #24]
   120a4:	ldrd	r0, [sp, #8]
   120a8:	mov	r3, #0
   120ac:	cmp	r0, r2
   120b0:	sbcs	r1, r1, r3
   120b4:	blt	121f0 <close@plt+0xe74>
   120b8:	ldrd	r0, [sp, #8]
   120bc:	subs	r0, r0, r2
   120c0:	sbc	r1, r1, r3
   120c4:	strd	r0, [sp, #8]
   120c8:	ldrd	r2, [sp, #8]
   120cc:	mov	r4, #0
   120d0:	ldr	r0, [sp, #20]
   120d4:	str	r4, [sp]
   120d8:	bl	111a8 <lseek64@plt>
   120dc:	cmp	r0, #0
   120e0:	sbcs	r3, r1, #0
   120e4:	blt	12260 <close@plt+0xee4>
   120e8:	ldr	r7, [pc, #700]	; 123ac <close@plt+0x1030>
   120ec:	mov	r2, r9
   120f0:	add	r7, pc, r7
   120f4:	ldr	r8, [r7, #24]
   120f8:	ldr	fp, [r7, #20]
   120fc:	add	r4, r8, fp
   12100:	mov	r1, r8
   12104:	add	r9, r9, fp
   12108:	mov	r0, r4
   1210c:	add	r9, r8, r9
   12110:	bl	110e8 <memmove@plt>
   12114:	ldr	r3, [r7, #28]
   12118:	mov	r1, r8
   1211c:	mov	r2, fp
   12120:	cmp	r3, #0
   12124:	ldr	r0, [sp, #20]
   12128:	moveq	r4, r9
   1212c:	bl	14100 <close_stdout@@Base+0x1af4>
   12130:	ldr	r3, [r7, #20]
   12134:	cmp	r0, r3
   12138:	bne	1232c <close@plt+0xfb0>
   1213c:	ldr	r3, [r7, #28]
   12140:	ldr	r8, [r7, #24]
   12144:	cmp	r3, #0
   12148:	beq	11fa8 <close@plt+0xc2c>
   1214c:	ldr	ip, [sp, #32]
   12150:	mov	r0, r4
   12154:	add	r7, ip, #1
   12158:	b	12160 <close@plt+0xde4>
   1215c:	mov	r0, fp
   12160:	ldrb	r3, [r0, #-1]
   12164:	sub	fp, r0, #1
   12168:	cmp	r3, r5
   1216c:	mov	r4, fp
   12170:	bne	1215c <close@plt+0xde0>
   12174:	cmp	r6, #0
   12178:	beq	12038 <close@plt+0xcbc>
   1217c:	mov	r1, r7
   12180:	mov	r2, r6
   12184:	bl	11364 <strncmp@plt>
   12188:	cmp	r0, #0
   1218c:	bne	1215c <close@plt+0xde0>
   12190:	cmp	r4, r8
   12194:	bcc	12040 <close@plt+0xcc4>
   12198:	ldrb	r3, [sl, #80]	; 0x50
   1219c:	cmp	r3, #0
   121a0:	beq	1221c <close@plt+0xea0>
   121a4:	ldr	ip, [sp, #28]
   121a8:	ldr	r7, [sl, #16]
   121ac:	eor	r3, ip, #1
   121b0:	add	r7, r4, r7
   121b4:	cmp	r7, r9
   121b8:	orrne	r3, r3, #1
   121bc:	cmp	r3, #0
   121c0:	streq	r3, [sp, #28]
   121c4:	moveq	r9, r7
   121c8:	bne	12234 <close@plt+0xeb8>
   121cc:	ldr	r2, [pc, #476]	; 123b0 <close@plt+0x1034>
   121d0:	add	r2, pc, r2
   121d4:	ldr	r3, [r2, #28]
   121d8:	cmp	r3, #0
   121dc:	beq	11fa8 <close@plt+0xc2c>
   121e0:	ldr	r2, [r2, #16]
   121e4:	rsb	r2, r2, #1
   121e8:	add	r4, r4, r2
   121ec:	b	11fa0 <close@plt+0xc24>
   121f0:	ldr	r3, [pc, #444]	; 123b4 <close@plt+0x1038>
   121f4:	mov	r2, #0
   121f8:	ldr	r1, [sp, #8]
   121fc:	add	r3, pc, r3
   12200:	str	r1, [r3, #20]
   12204:	mov	r3, #0
   12208:	strd	r2, [sp, #8]
   1220c:	b	120c8 <close@plt+0xd4c>
   12210:	bne	11fe0 <close@plt+0xc64>
   12214:	sub	r4, r8, #1
   12218:	b	12038 <close@plt+0xcbc>
   1221c:	mov	r1, r9
   12220:	mov	r0, r4
   12224:	bl	11d60 <close@plt+0x9e4>
   12228:	mov	r9, r4
   1222c:	ldr	r8, [sl, #24]
   12230:	b	121cc <close@plt+0xe50>
   12234:	mov	r1, r9
   12238:	mov	r0, r7
   1223c:	bl	11d60 <close@plt+0x9e4>
   12240:	mov	r9, r7
   12244:	mov	ip, #0
   12248:	ldr	r8, [sl, #24]
   1224c:	str	ip, [sp, #28]
   12250:	b	121cc <close@plt+0xe50>
   12254:	ldr	ip, [sp, #24]
   12258:	ldr	r8, [ip, #24]
   1225c:	b	12214 <close@plt+0xe98>
   12260:	bl	112a4 <__errno_location@plt>
   12264:	ldr	r1, [pc, #332]	; 123b8 <close@plt+0x103c>
   12268:	mov	r2, #5
   1226c:	add	r1, pc, r1
   12270:	ldr	r7, [r0]
   12274:	mov	r0, r4
   12278:	bl	11148 <dcgettext@plt>
   1227c:	mov	r8, r0
   12280:	ldr	r0, [sp, #48]	; 0x30
   12284:	bl	13fa0 <close_stdout@@Base+0x1994>
   12288:	mov	r1, r7
   1228c:	mov	r2, r8
   12290:	mov	r3, r0
   12294:	mov	r0, r4
   12298:	bl	111e4 <error@plt>
   1229c:	b	120e8 <close@plt+0xd6c>
   122a0:	bl	112a4 <__errno_location@plt>
   122a4:	ldr	r1, [pc, #272]	; 123bc <close@plt+0x1040>
   122a8:	add	r1, pc, r1
   122ac:	ldr	r4, [r0]
   122b0:	mov	r2, #5
   122b4:	mov	r0, #0
   122b8:	bl	11148 <dcgettext@plt>
   122bc:	mov	r5, r0
   122c0:	ldr	r0, [sp, #48]	; 0x30
   122c4:	bl	13fa0 <close_stdout@@Base+0x1994>
   122c8:	mov	r1, r4
   122cc:	mov	r2, r5
   122d0:	mov	r3, r0
   122d4:	mov	r0, #0
   122d8:	bl	111e4 <error@plt>
   122dc:	mov	r0, #0
   122e0:	add	sp, sp, #60	; 0x3c
   122e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122e8:	ldr	r1, [sp, #52]	; 0x34
   122ec:	mov	r2, #5
   122f0:	mov	r0, #0
   122f4:	bl	11148 <dcgettext@plt>
   122f8:	mov	r1, #0
   122fc:	mov	r2, r0
   12300:	mov	r0, #1
   12304:	bl	111e4 <error@plt>
   12308:	ldr	ip, [sp, #24]
   1230c:	ldr	r8, [ip, #24]
   12310:	b	12038 <close@plt+0xcbc>
   12314:	mov	r0, r8
   12318:	mov	r1, r9
   1231c:	bl	11d60 <close@plt+0x9e4>
   12320:	mov	r0, #1
   12324:	add	sp, sp, #60	; 0x3c
   12328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1232c:	bl	112a4 <__errno_location@plt>
   12330:	ldr	r1, [pc, #136]	; 123c0 <close@plt+0x1044>
   12334:	add	r1, pc, r1
   12338:	b	122ac <close@plt+0xf30>
   1233c:	mov	r0, #1
   12340:	add	sp, sp, #60	; 0x3c
   12344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12348:	bl	112a4 <__errno_location@plt>
   1234c:	ldr	r1, [pc, #112]	; 123c4 <close@plt+0x1048>
   12350:	mov	r2, #5
   12354:	add	r1, pc, r1
   12358:	ldr	r8, [r0]
   1235c:	mov	r0, r7
   12360:	bl	11148 <dcgettext@plt>
   12364:	mov	r9, r0
   12368:	ldr	r0, [sp, #48]	; 0x30
   1236c:	bl	13fa0 <close_stdout@@Base+0x1994>
   12370:	mov	r1, r8
   12374:	mov	r2, r9
   12378:	mov	r3, r0
   1237c:	mov	r0, r7
   12380:	bl	111e4 <error@plt>
   12384:	b	11f18 <close@plt+0xb9c>
   12388:	bl	14960 <close_stdout@@Base+0x2354>
   1238c:	andeq	r7, r1, r4, lsl #6
   12390:	andeq	r7, r1, r0, ror #4
   12394:	andeq	r7, r1, r0, asr #4
   12398:	andeq	r3, r0, r0, ror lr
   1239c:	andeq	r7, r1, r0, lsl #4
   123a0:	andeq	r3, r0, r8, asr #28
   123a4:	andeq	r7, r1, ip, ror #3
   123a8:	andeq	r7, r1, r0, lsr r1
   123ac:	muleq	r1, r4, r0
   123b0:			; <UNDEFINED> instruction: 0x00016fb4
   123b4:	andeq	r6, r1, r8, lsl #31
   123b8:	andeq	r3, r0, r8, asr #22
   123bc:	andeq	r3, r0, ip, lsl fp
   123c0:	muleq	r0, r0, sl
   123c4:	andeq	r3, r0, r0, ror #20
   123c8:	push	{r4, r5, r6, lr}
   123cc:	subs	r4, r0, #0
   123d0:	ldr	r5, [pc, #456]	; 125a0 <close@plt+0x1224>
   123d4:	add	r5, pc, r5
   123d8:	beq	12420 <close@plt+0x10a4>
   123dc:	ldr	r3, [pc, #448]	; 125a4 <close@plt+0x1228>
   123e0:	mov	r2, #5
   123e4:	ldr	r1, [pc, #444]	; 125a8 <close@plt+0x122c>
   123e8:	mov	r0, #0
   123ec:	ldr	r3, [r5, r3]
   123f0:	add	r1, pc, r1
   123f4:	ldr	r6, [r3]
   123f8:	bl	11148 <dcgettext@plt>
   123fc:	ldr	r3, [pc, #424]	; 125ac <close@plt+0x1230>
   12400:	mov	r1, #1
   12404:	ldr	r3, [r5, r3]
   12408:	ldr	r3, [r3]
   1240c:	mov	r2, r0
   12410:	mov	r0, r6
   12414:	bl	112ec <__fprintf_chk@plt>
   12418:	mov	r0, r4
   1241c:	bl	11268 <exit@plt>
   12420:	ldr	r1, [pc, #392]	; 125b0 <close@plt+0x1234>
   12424:	mov	r2, #5
   12428:	add	r1, pc, r1
   1242c:	bl	11148 <dcgettext@plt>
   12430:	ldr	r3, [pc, #372]	; 125ac <close@plt+0x1230>
   12434:	ldr	r6, [r5, r3]
   12438:	ldr	r2, [r6]
   1243c:	mov	r1, r0
   12440:	mov	r0, #1
   12444:	bl	112d4 <__printf_chk@plt>
   12448:	ldr	r1, [pc, #356]	; 125b4 <close@plt+0x1238>
   1244c:	mov	r2, #5
   12450:	mov	r0, r4
   12454:	add	r1, pc, r1
   12458:	bl	11148 <dcgettext@plt>
   1245c:	ldr	r3, [pc, #340]	; 125b8 <close@plt+0x123c>
   12460:	ldr	r5, [r5, r3]
   12464:	ldr	r1, [r5]
   12468:	bl	110ac <fputs_unlocked@plt>
   1246c:	ldr	r1, [pc, #328]	; 125bc <close@plt+0x1240>
   12470:	mov	r2, #5
   12474:	mov	r0, r4
   12478:	add	r1, pc, r1
   1247c:	bl	11148 <dcgettext@plt>
   12480:	ldr	r1, [r5]
   12484:	bl	110ac <fputs_unlocked@plt>
   12488:	ldr	r1, [pc, #304]	; 125c0 <close@plt+0x1244>
   1248c:	mov	r2, #5
   12490:	mov	r0, r4
   12494:	add	r1, pc, r1
   12498:	bl	11148 <dcgettext@plt>
   1249c:	ldr	r1, [r5]
   124a0:	bl	110ac <fputs_unlocked@plt>
   124a4:	ldr	r1, [pc, #280]	; 125c4 <close@plt+0x1248>
   124a8:	mov	r2, #5
   124ac:	mov	r0, r4
   124b0:	add	r1, pc, r1
   124b4:	bl	11148 <dcgettext@plt>
   124b8:	ldr	r1, [r5]
   124bc:	bl	110ac <fputs_unlocked@plt>
   124c0:	ldr	r1, [pc, #256]	; 125c8 <close@plt+0x124c>
   124c4:	mov	r2, #5
   124c8:	mov	r0, r4
   124cc:	add	r1, pc, r1
   124d0:	bl	11148 <dcgettext@plt>
   124d4:	ldr	r1, [r5]
   124d8:	bl	110ac <fputs_unlocked@plt>
   124dc:	ldr	r1, [pc, #232]	; 125cc <close@plt+0x1250>
   124e0:	mov	r2, #5
   124e4:	mov	r0, r4
   124e8:	add	r1, pc, r1
   124ec:	bl	11148 <dcgettext@plt>
   124f0:	ldr	r2, [pc, #216]	; 125d0 <close@plt+0x1254>
   124f4:	ldr	r3, [pc, #216]	; 125d4 <close@plt+0x1258>
   124f8:	add	r2, pc, r2
   124fc:	add	r3, pc, r3
   12500:	mov	r1, r0
   12504:	mov	r0, #1
   12508:	bl	112d4 <__printf_chk@plt>
   1250c:	mov	r0, #5
   12510:	mov	r1, r4
   12514:	bl	1131c <setlocale@plt>
   12518:	cmp	r0, #0
   1251c:	beq	12538 <close@plt+0x11bc>
   12520:	ldr	r1, [pc, #176]	; 125d8 <close@plt+0x125c>
   12524:	mov	r2, #3
   12528:	add	r1, pc, r1
   1252c:	bl	11364 <strncmp@plt>
   12530:	cmp	r0, #0
   12534:	bne	1256c <close@plt+0x11f0>
   12538:	ldr	r1, [pc, #156]	; 125dc <close@plt+0x1260>
   1253c:	mov	r2, #5
   12540:	mov	r0, #0
   12544:	add	r1, pc, r1
   12548:	bl	11148 <dcgettext@plt>
   1254c:	mov	r5, r0
   12550:	ldr	r0, [r6]
   12554:	bl	12724 <close_stdout@@Base+0x118>
   12558:	mov	r1, r5
   1255c:	mov	r2, r0
   12560:	mov	r0, #1
   12564:	bl	112d4 <__printf_chk@plt>
   12568:	b	12418 <close@plt+0x109c>
   1256c:	ldr	r1, [pc, #108]	; 125e0 <close@plt+0x1264>
   12570:	mov	r2, #5
   12574:	mov	r0, r4
   12578:	add	r1, pc, r1
   1257c:	bl	11148 <dcgettext@plt>
   12580:	mov	r5, r0
   12584:	ldr	r0, [r6]
   12588:	bl	12724 <close_stdout@@Base+0x118>
   1258c:	mov	r1, r5
   12590:	mov	r2, r0
   12594:	mov	r0, #1
   12598:	bl	112d4 <__printf_chk@plt>
   1259c:	b	12538 <close@plt+0x11bc>
   125a0:	andeq	r4, r1, r4, lsr #24
   125a4:	andeq	r0, r0, r8, lsl r1
   125a8:	andeq	r3, r0, ip, lsl sl
   125ac:	andeq	r0, r0, r4, lsr r1
   125b0:	andeq	r3, r0, ip, lsl #20
   125b4:	andeq	r3, r0, r4, lsl #20
   125b8:	andeq	r0, r0, r8, lsr #2
   125bc:	andeq	r3, r0, ip, asr #20
   125c0:	andeq	r3, r0, ip, ror sl
   125c4:	andeq	r3, r0, r0, asr #22
   125c8:	andeq	r3, r0, r4, asr fp
   125cc:	andeq	r3, r0, r0, ror fp
   125d0:	andeq	r3, r0, r8, ror fp
   125d4:	andeq	r3, r0, r4, lsl #23
   125d8:	andeq	r3, r0, r0, lsl #23
   125dc:			; <UNDEFINED> instruction: 0x00003bb0
   125e0:	andeq	r3, r0, r4, lsr fp
   125e4:	ldr	r3, [pc, #8]	; 125f4 <close@plt+0x1278>
   125e8:	add	r3, pc, r3
   125ec:	str	r0, [r3]
   125f0:	bx	lr
   125f4:	strdeq	r6, [r1], -ip
   125f8:	ldr	r3, [pc, #8]	; 12608 <close@plt+0x128c>
   125fc:	add	r3, pc, r3
   12600:	strb	r0, [r3, #4]
   12604:	bx	lr
   12608:	andeq	r6, r1, r8, ror #25

0001260c <close_stdout@@Base>:
   1260c:	push	{r4, r5, r6, r7, lr}
   12610:	sub	sp, sp, #12
   12614:	ldr	r4, [pc, #228]	; 12700 <close_stdout@@Base+0xf4>
   12618:	ldr	r3, [pc, #228]	; 12704 <close_stdout@@Base+0xf8>
   1261c:	add	r4, pc, r4
   12620:	ldr	r3, [r4, r3]
   12624:	ldr	r0, [r3]
   12628:	bl	14b60 <close_stdout@@Base+0x2554>
   1262c:	cmp	r0, #0
   12630:	beq	12658 <close_stdout@@Base+0x4c>
   12634:	ldr	r3, [pc, #204]	; 12708 <close_stdout@@Base+0xfc>
   12638:	add	r3, pc, r3
   1263c:	ldrb	r3, [r3, #4]
   12640:	cmp	r3, #0
   12644:	beq	12678 <close_stdout@@Base+0x6c>
   12648:	bl	112a4 <__errno_location@plt>
   1264c:	ldr	r3, [r0]
   12650:	cmp	r3, #32
   12654:	bne	12678 <close_stdout@@Base+0x6c>
   12658:	ldr	r3, [pc, #172]	; 1270c <close_stdout@@Base+0x100>
   1265c:	ldr	r3, [r4, r3]
   12660:	ldr	r0, [r3]
   12664:	bl	14b60 <close_stdout@@Base+0x2554>
   12668:	cmp	r0, #0
   1266c:	bne	126cc <close_stdout@@Base+0xc0>
   12670:	add	sp, sp, #12
   12674:	pop	{r4, r5, r6, r7, pc}
   12678:	ldr	r1, [pc, #144]	; 12710 <close_stdout@@Base+0x104>
   1267c:	mov	r0, #0
   12680:	mov	r2, #5
   12684:	add	r1, pc, r1
   12688:	bl	11148 <dcgettext@plt>
   1268c:	ldr	r3, [pc, #128]	; 12714 <close_stdout@@Base+0x108>
   12690:	ldr	r5, [pc, r3]
   12694:	cmp	r5, #0
   12698:	mov	r6, r0
   1269c:	beq	126dc <close_stdout@@Base+0xd0>
   126a0:	bl	112a4 <__errno_location@plt>
   126a4:	ldr	r7, [r0]
   126a8:	mov	r0, r5
   126ac:	bl	13fa0 <close_stdout@@Base+0x1994>
   126b0:	ldr	r2, [pc, #96]	; 12718 <close_stdout@@Base+0x10c>
   126b4:	str	r6, [sp]
   126b8:	mov	r1, r7
   126bc:	add	r2, pc, r2
   126c0:	mov	r3, r0
   126c4:	mov	r0, #0
   126c8:	bl	111e4 <error@plt>
   126cc:	ldr	r3, [pc, #72]	; 1271c <close_stdout@@Base+0x110>
   126d0:	ldr	r3, [r4, r3]
   126d4:	ldr	r0, [r3]
   126d8:	bl	11100 <_exit@plt>
   126dc:	bl	112a4 <__errno_location@plt>
   126e0:	ldr	r2, [pc, #56]	; 12720 <close_stdout@@Base+0x114>
   126e4:	add	r2, pc, r2
   126e8:	mov	r3, r0
   126ec:	mov	r0, r5
   126f0:	ldr	r1, [r3]
   126f4:	mov	r3, r6
   126f8:	bl	111e4 <error@plt>
   126fc:	b	126cc <close_stdout@@Base+0xc0>
   12700:	ldrdeq	r4, [r1], -ip
   12704:	andeq	r0, r0, r8, lsr #2
   12708:	andeq	r6, r1, ip, lsr #25
   1270c:	andeq	r0, r0, r8, lsl r1
   12710:	andeq	r3, r0, r8, asr #23
   12714:	andeq	r6, r1, r4, asr ip
   12718:	ldrdeq	r3, [r0], -r4
   1271c:	andeq	r0, r0, ip, lsr #2
   12720:			; <UNDEFINED> instruction: 0x00003bb0
   12724:	ldrb	r3, [r0]
   12728:	cmp	r3, #47	; 0x2f
   1272c:	bne	12748 <close_stdout@@Base+0x13c>
   12730:	add	r2, r0, #1
   12734:	mov	r0, r2
   12738:	add	r2, r2, #1
   1273c:	ldrb	r3, [r0]
   12740:	cmp	r3, #47	; 0x2f
   12744:	beq	12734 <close_stdout@@Base+0x128>
   12748:	cmp	r3, #0
   1274c:	bxeq	lr
   12750:	mov	r2, r0
   12754:	mov	r1, #0
   12758:	cmp	r3, #47	; 0x2f
   1275c:	moveq	r1, #1
   12760:	beq	12770 <close_stdout@@Base+0x164>
   12764:	cmp	r1, #0
   12768:	movne	r0, r2
   1276c:	movne	r1, #0
   12770:	ldrb	r3, [r2, #1]!
   12774:	cmp	r3, #0
   12778:	bne	12758 <close_stdout@@Base+0x14c>
   1277c:	bx	lr
   12780:	push	{r4, lr}
   12784:	mov	r4, r0
   12788:	bl	11274 <strlen@plt>
   1278c:	cmp	r0, #1
   12790:	popls	{r4, pc}
   12794:	sub	r3, r0, #1
   12798:	ldrb	r2, [r4, r3]
   1279c:	cmp	r2, #47	; 0x2f
   127a0:	popne	{r4, pc}
   127a4:	mov	r0, r3
   127a8:	cmp	r0, #1
   127ac:	sub	r3, r3, #1
   127b0:	beq	127c4 <close_stdout@@Base+0x1b8>
   127b4:	ldrb	r2, [r4, r3]
   127b8:	cmp	r2, #47	; 0x2f
   127bc:	popne	{r4, pc}
   127c0:	b	127a4 <close_stdout@@Base+0x198>
   127c4:	pop	{r4, pc}
   127c8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127cc:	mov	r4, r1
   127d0:	mov	r8, r2
   127d4:	mov	fp, r0
   127d8:	bl	12724 <close_stdout@@Base+0x118>
   127dc:	mov	sl, r0
   127e0:	bl	12780 <close_stdout@@Base+0x174>
   127e4:	rsb	r7, fp, sl
   127e8:	cmp	r0, #0
   127ec:	add	r7, r7, r0
   127f0:	moveq	sl, r0
   127f4:	beq	12808 <close_stdout@@Base+0x1fc>
   127f8:	add	sl, sl, r0
   127fc:	ldrb	sl, [sl, #-1]
   12800:	subs	sl, sl, #47	; 0x2f
   12804:	movne	sl, #1
   12808:	ldrb	r3, [r4]
   1280c:	cmp	r3, #47	; 0x2f
   12810:	movne	r5, r4
   12814:	beq	12888 <close_stdout@@Base+0x27c>
   12818:	mov	r0, r5
   1281c:	bl	11274 <strlen@plt>
   12820:	mov	r6, r0
   12824:	add	r0, r7, #1
   12828:	add	r0, r0, sl
   1282c:	add	r0, r0, r6
   12830:	bl	11214 <malloc@plt>
   12834:	subs	r9, r0, #0
   12838:	beq	12880 <close_stdout@@Base+0x274>
   1283c:	mov	r2, r7
   12840:	mov	r1, fp
   12844:	bl	11244 <mempcpy@plt>
   12848:	cmp	r8, #0
   1284c:	mov	r2, #47	; 0x2f
   12850:	strb	r2, [r0], sl
   12854:	beq	1286c <close_stdout@@Base+0x260>
   12858:	ldrb	r2, [r4]
   1285c:	cmp	r2, #47	; 0x2f
   12860:	movne	r2, r0
   12864:	subeq	r2, r0, #1
   12868:	str	r2, [r8]
   1286c:	mov	r1, r5
   12870:	mov	r2, r6
   12874:	bl	11244 <mempcpy@plt>
   12878:	mov	r3, #0
   1287c:	strb	r3, [r0]
   12880:	mov	r0, r9
   12884:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12888:	add	r3, r4, #1
   1288c:	mov	r5, r3
   12890:	add	r3, r3, #1
   12894:	ldrb	r2, [r5]
   12898:	cmp	r2, #47	; 0x2f
   1289c:	bne	12818 <close_stdout@@Base+0x20c>
   128a0:	b	1288c <close_stdout@@Base+0x280>
   128a4:	push	{r3, r4, r5, r6, r7, lr}
   128a8:	subs	r4, r0, #0
   128ac:	ldr	r5, [pc, #172]	; 12960 <close_stdout@@Base+0x354>
   128b0:	add	r5, pc, r5
   128b4:	beq	1293c <close_stdout@@Base+0x330>
   128b8:	mov	r1, #47	; 0x2f
   128bc:	bl	11328 <strrchr@plt>
   128c0:	subs	r6, r0, #0
   128c4:	beq	12920 <close_stdout@@Base+0x314>
   128c8:	add	r7, r6, #1
   128cc:	rsb	r3, r4, r7
   128d0:	cmp	r3, #6
   128d4:	ble	12920 <close_stdout@@Base+0x314>
   128d8:	ldr	r1, [pc, #132]	; 12964 <close_stdout@@Base+0x358>
   128dc:	sub	r0, r6, #6
   128e0:	mov	r2, #7
   128e4:	add	r1, pc, r1
   128e8:	bl	11364 <strncmp@plt>
   128ec:	cmp	r0, #0
   128f0:	bne	12920 <close_stdout@@Base+0x314>
   128f4:	ldr	r1, [pc, #108]	; 12968 <close_stdout@@Base+0x35c>
   128f8:	mov	r0, r7
   128fc:	mov	r2, #3
   12900:	add	r1, pc, r1
   12904:	bl	11364 <strncmp@plt>
   12908:	cmp	r0, #0
   1290c:	movne	r4, r7
   12910:	ldreq	r3, [pc, #84]	; 1296c <close_stdout@@Base+0x360>
   12914:	addeq	r4, r6, #4
   12918:	ldreq	r3, [r5, r3]
   1291c:	streq	r4, [r3]
   12920:	ldr	r2, [pc, #72]	; 12970 <close_stdout@@Base+0x364>
   12924:	ldr	r3, [pc, #72]	; 12974 <close_stdout@@Base+0x368>
   12928:	ldr	r2, [r5, r2]
   1292c:	str	r4, [r2]
   12930:	ldr	r3, [r5, r3]
   12934:	str	r4, [r3]
   12938:	pop	{r3, r4, r5, r6, r7, pc}
   1293c:	ldr	r3, [pc, #52]	; 12978 <close_stdout@@Base+0x36c>
   12940:	mov	r1, #1
   12944:	ldr	r0, [pc, #48]	; 1297c <close_stdout@@Base+0x370>
   12948:	mov	r2, #55	; 0x37
   1294c:	ldr	r3, [r5, r3]
   12950:	add	r0, pc, r0
   12954:	ldr	r3, [r3]
   12958:	bl	1119c <fwrite@plt>
   1295c:	bl	11370 <abort@plt>
   12960:	andeq	r4, r1, r8, asr #14
   12964:	andeq	r3, r0, ip, ror #19
   12968:	ldrdeq	r3, [r0], -r8
   1296c:	andeq	r0, r0, ip, lsr r1
   12970:	andeq	r0, r0, r4, lsr r1
   12974:	andeq	r0, r0, r0, lsr r1
   12978:	andeq	r0, r0, r8, lsl r1
   1297c:	andeq	r3, r0, r8, asr #18
   12980:	push	{r3, lr}
   12984:	mov	r3, r0
   12988:	mov	r2, #0
   1298c:	cmp	r1, #8
   12990:	str	r2, [r3], #4
   12994:	add	r3, r3, #4
   12998:	str	r2, [r0, #4]
   1299c:	str	r2, [r3], #4
   129a0:	str	r2, [r3], #4
   129a4:	str	r2, [r3], #4
   129a8:	str	r2, [r3], #4
   129ac:	str	r2, [r3], #4
   129b0:	str	r2, [r3], #4
   129b4:	str	r2, [r3], #4
   129b8:	str	r2, [r3], #4
   129bc:	str	r2, [r3], #4
   129c0:	str	r2, [r3]
   129c4:	beq	129d0 <close_stdout@@Base+0x3c4>
   129c8:	str	r1, [r0]
   129cc:	pop	{r3, pc}
   129d0:	bl	11370 <abort@plt>
   129d4:	push	{r4, r5, r6, lr}
   129d8:	mov	r4, r0
   129dc:	mov	r6, r1
   129e0:	mov	r0, #0
   129e4:	mov	r1, r4
   129e8:	mov	r2, #5
   129ec:	bl	11148 <dcgettext@plt>
   129f0:	cmp	r0, r4
   129f4:	mov	r5, r0
   129f8:	beq	12a00 <close_stdout@@Base+0x3f4>
   129fc:	pop	{r4, r5, r6, pc}
   12a00:	bl	14be0 <close_stdout@@Base+0x25d4>
   12a04:	ldrb	r3, [r0]
   12a08:	bic	r3, r3, #32
   12a0c:	cmp	r3, #85	; 0x55
   12a10:	bne	12a84 <close_stdout@@Base+0x478>
   12a14:	ldrb	r3, [r0, #1]
   12a18:	bic	r3, r3, #32
   12a1c:	cmp	r3, #84	; 0x54
   12a20:	bne	12a70 <close_stdout@@Base+0x464>
   12a24:	ldrb	r3, [r0, #2]
   12a28:	bic	r3, r3, #32
   12a2c:	cmp	r3, #70	; 0x46
   12a30:	bne	12a70 <close_stdout@@Base+0x464>
   12a34:	ldrb	r3, [r0, #3]
   12a38:	cmp	r3, #45	; 0x2d
   12a3c:	bne	12a70 <close_stdout@@Base+0x464>
   12a40:	ldrb	r3, [r0, #4]
   12a44:	cmp	r3, #56	; 0x38
   12a48:	bne	12a70 <close_stdout@@Base+0x464>
   12a4c:	ldrb	r3, [r0, #5]
   12a50:	cmp	r3, #0
   12a54:	bne	12a70 <close_stdout@@Base+0x464>
   12a58:	ldrb	r3, [r5]
   12a5c:	cmp	r3, #96	; 0x60
   12a60:	beq	12afc <close_stdout@@Base+0x4f0>
   12a64:	ldr	r0, [pc, #180]	; 12b20 <close_stdout@@Base+0x514>
   12a68:	add	r0, pc, r0
   12a6c:	pop	{r4, r5, r6, pc}
   12a70:	cmp	r6, #7
   12a74:	beq	12b08 <close_stdout@@Base+0x4fc>
   12a78:	ldr	r0, [pc, #164]	; 12b24 <close_stdout@@Base+0x518>
   12a7c:	add	r0, pc, r0
   12a80:	pop	{r4, r5, r6, pc}
   12a84:	cmp	r3, #71	; 0x47
   12a88:	bne	12a70 <close_stdout@@Base+0x464>
   12a8c:	ldrb	r3, [r0, #1]
   12a90:	bic	r3, r3, #32
   12a94:	cmp	r3, #66	; 0x42
   12a98:	bne	12a70 <close_stdout@@Base+0x464>
   12a9c:	ldrb	r3, [r0, #2]
   12aa0:	cmp	r3, #49	; 0x31
   12aa4:	bne	12a70 <close_stdout@@Base+0x464>
   12aa8:	ldrb	r3, [r0, #3]
   12aac:	cmp	r3, #56	; 0x38
   12ab0:	bne	12a70 <close_stdout@@Base+0x464>
   12ab4:	ldrb	r3, [r0, #4]
   12ab8:	cmp	r3, #48	; 0x30
   12abc:	bne	12a70 <close_stdout@@Base+0x464>
   12ac0:	ldrb	r3, [r0, #5]
   12ac4:	cmp	r3, #51	; 0x33
   12ac8:	bne	12a70 <close_stdout@@Base+0x464>
   12acc:	ldrb	r3, [r0, #6]
   12ad0:	cmp	r3, #48	; 0x30
   12ad4:	bne	12a70 <close_stdout@@Base+0x464>
   12ad8:	ldrb	r3, [r0, #7]
   12adc:	cmp	r3, #0
   12ae0:	bne	12a70 <close_stdout@@Base+0x464>
   12ae4:	ldrb	r3, [r5]
   12ae8:	cmp	r3, #96	; 0x60
   12aec:	beq	12b14 <close_stdout@@Base+0x508>
   12af0:	ldr	r0, [pc, #48]	; 12b28 <close_stdout@@Base+0x51c>
   12af4:	add	r0, pc, r0
   12af8:	pop	{r4, r5, r6, pc}
   12afc:	ldr	r0, [pc, #40]	; 12b2c <close_stdout@@Base+0x520>
   12b00:	add	r0, pc, r0
   12b04:	pop	{r4, r5, r6, pc}
   12b08:	ldr	r0, [pc, #32]	; 12b30 <close_stdout@@Base+0x524>
   12b0c:	add	r0, pc, r0
   12b10:	pop	{r4, r5, r6, pc}
   12b14:	ldr	r0, [pc, #24]	; 12b34 <close_stdout@@Base+0x528>
   12b18:	add	r0, pc, r0
   12b1c:	pop	{r4, r5, r6, pc}
   12b20:	muleq	r0, r4, r8
   12b24:	andeq	r3, r0, r8, lsl #17
   12b28:	andeq	r3, r0, ip, lsl #16
   12b2c:	andeq	r3, r0, r0, lsl r8
   12b30:	strdeq	r3, [r0], -ip
   12b34:	strdeq	r3, [r0], -r4
   12b38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b3c:	sub	sp, sp, #124	; 0x7c
   12b40:	ldr	ip, [pc, #3304]	; 13830 <close_stdout@@Base+0x1224>
   12b44:	mov	sl, r1
   12b48:	str	r0, [sp, #40]	; 0x28
   12b4c:	mov	r8, r3
   12b50:	ldr	r0, [pc, #3292]	; 13834 <close_stdout@@Base+0x1228>
   12b54:	add	ip, pc, ip
   12b58:	str	r2, [sp, #32]
   12b5c:	ldr	r1, [sp, #164]	; 0xa4
   12b60:	mov	r3, ip
   12b64:	ldr	r0, [ip, r0]
   12b68:	ldr	r2, [sp, #172]	; 0xac
   12b6c:	ubfx	r1, r1, #1, #1
   12b70:	str	r1, [sp, #36]	; 0x24
   12b74:	str	r0, [sp, #56]	; 0x38
   12b78:	ldr	r0, [sp, #168]	; 0xa8
   12b7c:	ldr	r1, [sp, #176]	; 0xb0
   12b80:	str	r2, [sp, #72]	; 0x48
   12b84:	str	r0, [sp, #48]	; 0x30
   12b88:	ldr	r0, [sp, #56]	; 0x38
   12b8c:	str	r1, [sp, #68]	; 0x44
   12b90:	ldr	r3, [r0]
   12b94:	str	r3, [sp, #116]	; 0x74
   12b98:	bl	111b4 <__ctype_get_mb_cur_max@plt>
   12b9c:	ldr	r2, [sp, #160]	; 0xa0
   12ba0:	str	r0, [sp, #64]	; 0x40
   12ba4:	cmp	r2, #8
   12ba8:	addls	pc, pc, r2, lsl #2
   12bac:	b	1370c <close_stdout@@Base+0x1100>
   12bb0:	b	12bd4 <close_stdout@@Base+0x5c8>
   12bb4:	b	13424 <close_stdout@@Base+0xe18>
   12bb8:	b	13454 <close_stdout@@Base+0xe48>
   12bbc:	b	13304 <close_stdout@@Base+0xcf8>
   12bc0:	b	13344 <close_stdout@@Base+0xd38>
   12bc4:	b	13370 <close_stdout@@Base+0xd64>
   12bc8:	b	13390 <close_stdout@@Base+0xd84>
   12bcc:	b	13390 <close_stdout@@Base+0xd84>
   12bd0:	b	13390 <close_stdout@@Base+0xd84>
   12bd4:	mov	r2, #0
   12bd8:	str	r2, [sp, #36]	; 0x24
   12bdc:	mov	r9, r2
   12be0:	str	r2, [sp, #24]
   12be4:	str	r2, [sp, #28]
   12be8:	str	r2, [sp, #52]	; 0x34
   12bec:	ldr	r0, [sp, #36]	; 0x24
   12bf0:	mov	fp, #0
   12bf4:	ldr	r1, [sp, #24]
   12bf8:	eor	r2, r0, #1
   12bfc:	eor	r3, r1, #1
   12c00:	and	r3, r2, r3
   12c04:	and	r2, r1, r0
   12c08:	str	r3, [sp, #44]	; 0x2c
   12c0c:	str	r2, [sp, #76]	; 0x4c
   12c10:	cmn	r8, #1
   12c14:	beq	12f94 <close_stdout@@Base+0x988>
   12c18:	subs	r3, fp, r8
   12c1c:	movne	r3, #1
   12c20:	cmp	r3, #0
   12c24:	beq	12fac <close_stdout@@Base+0x9a0>
   12c28:	ldr	r3, [sp, #28]
   12c2c:	ldr	r0, [sp, #24]
   12c30:	adds	r7, r3, #0
   12c34:	movne	r7, #1
   12c38:	ands	r6, r7, r0
   12c3c:	bne	13498 <close_stdout@@Base+0xe8c>
   12c40:	ldr	r1, [sp, #32]
   12c44:	add	r5, r1, fp
   12c48:	ldrb	r4, [r5]
   12c4c:	cmp	r4, #126	; 0x7e
   12c50:	addls	pc, pc, r4, lsl #2
   12c54:	b	13218 <close_stdout@@Base+0xc0c>
   12c58:	b	13124 <close_stdout@@Base+0xb18>
   12c5c:	b	13218 <close_stdout@@Base+0xc0c>
   12c60:	b	13218 <close_stdout@@Base+0xc0c>
   12c64:	b	13218 <close_stdout@@Base+0xc0c>
   12c68:	b	13218 <close_stdout@@Base+0xc0c>
   12c6c:	b	13218 <close_stdout@@Base+0xc0c>
   12c70:	b	13218 <close_stdout@@Base+0xc0c>
   12c74:	b	1310c <close_stdout@@Base+0xb00>
   12c78:	b	130f4 <close_stdout@@Base+0xae8>
   12c7c:	b	1311c <close_stdout@@Base+0xb10>
   12c80:	b	13114 <close_stdout@@Base+0xb08>
   12c84:	b	13104 <close_stdout@@Base+0xaf8>
   12c88:	b	130fc <close_stdout@@Base+0xaf0>
   12c8c:	b	130c0 <close_stdout@@Base+0xab4>
   12c90:	b	13218 <close_stdout@@Base+0xc0c>
   12c94:	b	13218 <close_stdout@@Base+0xc0c>
   12c98:	b	13218 <close_stdout@@Base+0xc0c>
   12c9c:	b	13218 <close_stdout@@Base+0xc0c>
   12ca0:	b	13218 <close_stdout@@Base+0xc0c>
   12ca4:	b	13218 <close_stdout@@Base+0xc0c>
   12ca8:	b	13218 <close_stdout@@Base+0xc0c>
   12cac:	b	13218 <close_stdout@@Base+0xc0c>
   12cb0:	b	13218 <close_stdout@@Base+0xc0c>
   12cb4:	b	13218 <close_stdout@@Base+0xc0c>
   12cb8:	b	13218 <close_stdout@@Base+0xc0c>
   12cbc:	b	13218 <close_stdout@@Base+0xc0c>
   12cc0:	b	13218 <close_stdout@@Base+0xc0c>
   12cc4:	b	13218 <close_stdout@@Base+0xc0c>
   12cc8:	b	13218 <close_stdout@@Base+0xc0c>
   12ccc:	b	13218 <close_stdout@@Base+0xc0c>
   12cd0:	b	13218 <close_stdout@@Base+0xc0c>
   12cd4:	b	13218 <close_stdout@@Base+0xc0c>
   12cd8:	b	1304c <close_stdout@@Base+0xa40>
   12cdc:	b	1304c <close_stdout@@Base+0xa40>
   12ce0:	b	1304c <close_stdout@@Base+0xa40>
   12ce4:	b	13044 <close_stdout@@Base+0xa38>
   12ce8:	b	1304c <close_stdout@@Base+0xa40>
   12cec:	b	12f20 <close_stdout@@Base+0x914>
   12cf0:	b	1304c <close_stdout@@Base+0xa40>
   12cf4:	b	131c0 <close_stdout@@Base+0xbb4>
   12cf8:	b	1304c <close_stdout@@Base+0xa40>
   12cfc:	b	1304c <close_stdout@@Base+0xa40>
   12d00:	b	1304c <close_stdout@@Base+0xa40>
   12d04:	b	12f20 <close_stdout@@Base+0x914>
   12d08:	b	12f20 <close_stdout@@Base+0x914>
   12d0c:	b	12f20 <close_stdout@@Base+0x914>
   12d10:	b	12f20 <close_stdout@@Base+0x914>
   12d14:	b	12f20 <close_stdout@@Base+0x914>
   12d18:	b	12f20 <close_stdout@@Base+0x914>
   12d1c:	b	12f20 <close_stdout@@Base+0x914>
   12d20:	b	12f20 <close_stdout@@Base+0x914>
   12d24:	b	12f20 <close_stdout@@Base+0x914>
   12d28:	b	12f20 <close_stdout@@Base+0x914>
   12d2c:	b	12f20 <close_stdout@@Base+0x914>
   12d30:	b	12f20 <close_stdout@@Base+0x914>
   12d34:	b	12f20 <close_stdout@@Base+0x914>
   12d38:	b	12f20 <close_stdout@@Base+0x914>
   12d3c:	b	12f20 <close_stdout@@Base+0x914>
   12d40:	b	12f20 <close_stdout@@Base+0x914>
   12d44:	b	1304c <close_stdout@@Base+0xa40>
   12d48:	b	1304c <close_stdout@@Base+0xa40>
   12d4c:	b	1304c <close_stdout@@Base+0xa40>
   12d50:	b	1304c <close_stdout@@Base+0xa40>
   12d54:	b	12e54 <close_stdout@@Base+0x848>
   12d58:	b	13218 <close_stdout@@Base+0xc0c>
   12d5c:	b	12f20 <close_stdout@@Base+0x914>
   12d60:	b	12f20 <close_stdout@@Base+0x914>
   12d64:	b	12f20 <close_stdout@@Base+0x914>
   12d68:	b	12f20 <close_stdout@@Base+0x914>
   12d6c:	b	12f20 <close_stdout@@Base+0x914>
   12d70:	b	12f20 <close_stdout@@Base+0x914>
   12d74:	b	12f20 <close_stdout@@Base+0x914>
   12d78:	b	12f20 <close_stdout@@Base+0x914>
   12d7c:	b	12f20 <close_stdout@@Base+0x914>
   12d80:	b	12f20 <close_stdout@@Base+0x914>
   12d84:	b	12f20 <close_stdout@@Base+0x914>
   12d88:	b	12f20 <close_stdout@@Base+0x914>
   12d8c:	b	12f20 <close_stdout@@Base+0x914>
   12d90:	b	12f20 <close_stdout@@Base+0x914>
   12d94:	b	12f20 <close_stdout@@Base+0x914>
   12d98:	b	12f20 <close_stdout@@Base+0x914>
   12d9c:	b	12f20 <close_stdout@@Base+0x914>
   12da0:	b	12f20 <close_stdout@@Base+0x914>
   12da4:	b	12f20 <close_stdout@@Base+0x914>
   12da8:	b	12f20 <close_stdout@@Base+0x914>
   12dac:	b	12f20 <close_stdout@@Base+0x914>
   12db0:	b	12f20 <close_stdout@@Base+0x914>
   12db4:	b	12f20 <close_stdout@@Base+0x914>
   12db8:	b	12f20 <close_stdout@@Base+0x914>
   12dbc:	b	12f20 <close_stdout@@Base+0x914>
   12dc0:	b	12f20 <close_stdout@@Base+0x914>
   12dc4:	b	1304c <close_stdout@@Base+0xa40>
   12dc8:	b	131a4 <close_stdout@@Base+0xb98>
   12dcc:	b	12f20 <close_stdout@@Base+0x914>
   12dd0:	b	1304c <close_stdout@@Base+0xa40>
   12dd4:	b	12f20 <close_stdout@@Base+0x914>
   12dd8:	b	1304c <close_stdout@@Base+0xa40>
   12ddc:	b	12f20 <close_stdout@@Base+0x914>
   12de0:	b	12f20 <close_stdout@@Base+0x914>
   12de4:	b	12f20 <close_stdout@@Base+0x914>
   12de8:	b	12f20 <close_stdout@@Base+0x914>
   12dec:	b	12f20 <close_stdout@@Base+0x914>
   12df0:	b	12f20 <close_stdout@@Base+0x914>
   12df4:	b	12f20 <close_stdout@@Base+0x914>
   12df8:	b	12f20 <close_stdout@@Base+0x914>
   12dfc:	b	12f20 <close_stdout@@Base+0x914>
   12e00:	b	12f20 <close_stdout@@Base+0x914>
   12e04:	b	12f20 <close_stdout@@Base+0x914>
   12e08:	b	12f20 <close_stdout@@Base+0x914>
   12e0c:	b	12f20 <close_stdout@@Base+0x914>
   12e10:	b	12f20 <close_stdout@@Base+0x914>
   12e14:	b	12f20 <close_stdout@@Base+0x914>
   12e18:	b	12f20 <close_stdout@@Base+0x914>
   12e1c:	b	12f20 <close_stdout@@Base+0x914>
   12e20:	b	12f20 <close_stdout@@Base+0x914>
   12e24:	b	12f20 <close_stdout@@Base+0x914>
   12e28:	b	12f20 <close_stdout@@Base+0x914>
   12e2c:	b	12f20 <close_stdout@@Base+0x914>
   12e30:	b	12f20 <close_stdout@@Base+0x914>
   12e34:	b	12f20 <close_stdout@@Base+0x914>
   12e38:	b	12f20 <close_stdout@@Base+0x914>
   12e3c:	b	12f20 <close_stdout@@Base+0x914>
   12e40:	b	12f20 <close_stdout@@Base+0x914>
   12e44:	b	1302c <close_stdout@@Base+0xa20>
   12e48:	b	1304c <close_stdout@@Base+0xa40>
   12e4c:	b	1302c <close_stdout@@Base+0xa20>
   12e50:	b	13044 <close_stdout@@Base+0xa38>
   12e54:	ldr	r3, [sp, #160]	; 0xa0
   12e58:	cmp	r3, #2
   12e5c:	beq	136e8 <close_stdout@@Base+0x10dc>
   12e60:	cmp	r3, #3
   12e64:	bne	12f20 <close_stdout@@Base+0x914>
   12e68:	ldr	r1, [sp, #164]	; 0xa4
   12e6c:	tst	r1, #4
   12e70:	beq	12f20 <close_stdout@@Base+0x914>
   12e74:	add	r3, fp, #2
   12e78:	cmp	r8, r3
   12e7c:	bls	12f20 <close_stdout@@Base+0x914>
   12e80:	ldrb	r2, [r5, #1]
   12e84:	mov	r1, #1
   12e88:	cmp	r2, #63	; 0x3f
   12e8c:	bne	12f20 <close_stdout@@Base+0x914>
   12e90:	ldr	r0, [sp, #32]
   12e94:	ldrb	ip, [r0, r3]
   12e98:	sub	r0, ip, #33	; 0x21
   12e9c:	uxtb	r0, r0
   12ea0:	cmp	r0, #29
   12ea4:	bhi	12f20 <close_stdout@@Base+0x914>
   12ea8:	lsl	r1, r1, r0
   12eac:	movw	r0, #20929	; 0x51c1
   12eb0:	movt	r0, #14336	; 0x3800
   12eb4:	and	r0, r1, r0
   12eb8:	cmp	r0, #0
   12ebc:	beq	12f20 <close_stdout@@Base+0x914>
   12ec0:	ldr	r1, [sp, #36]	; 0x24
   12ec4:	cmp	r1, #0
   12ec8:	bne	13068 <close_stdout@@Base+0xa5c>
   12ecc:	cmp	r9, sl
   12ed0:	mov	r4, ip
   12ed4:	mov	fp, r3
   12ed8:	ldrcc	r0, [sp, #40]	; 0x28
   12edc:	strbcc	r2, [r0, r9]
   12ee0:	add	r2, r9, #1
   12ee4:	cmp	sl, r2
   12ee8:	ldrhi	r0, [sp, #40]	; 0x28
   12eec:	movhi	r1, #34	; 0x22
   12ef0:	strbhi	r1, [r0, r2]
   12ef4:	add	r2, r9, #2
   12ef8:	cmp	sl, r2
   12efc:	ldrhi	r0, [sp, #40]	; 0x28
   12f00:	movhi	r1, #34	; 0x22
   12f04:	strbhi	r1, [r0, r2]
   12f08:	add	r2, r9, #3
   12f0c:	cmp	sl, r2
   12f10:	add	r9, r9, #4
   12f14:	ldrhi	r0, [sp, #40]	; 0x28
   12f18:	movhi	r1, #63	; 0x3f
   12f1c:	strbhi	r1, [r0, r2]
   12f20:	ldr	r0, [sp, #44]	; 0x2c
   12f24:	cmp	r0, #0
   12f28:	bne	12f50 <close_stdout@@Base+0x944>
   12f2c:	ldr	r1, [sp, #48]	; 0x30
   12f30:	cmp	r1, #0
   12f34:	beq	12f50 <close_stdout@@Base+0x944>
   12f38:	ubfx	r2, r4, #5, #8
   12f3c:	and	r3, r4, #31
   12f40:	ldr	r2, [r1, r2, lsl #2]
   12f44:	lsr	r3, r2, r3
   12f48:	tst	r3, #1
   12f4c:	bne	12f58 <close_stdout@@Base+0x94c>
   12f50:	cmp	r6, #0
   12f54:	beq	12f78 <close_stdout@@Base+0x96c>
   12f58:	ldr	r2, [sp, #36]	; 0x24
   12f5c:	cmp	r2, #0
   12f60:	bne	13068 <close_stdout@@Base+0xa5c>
   12f64:	cmp	r9, sl
   12f68:	ldrcc	r0, [sp, #40]	; 0x28
   12f6c:	movcc	r3, #92	; 0x5c
   12f70:	strbcc	r3, [r0, r9]
   12f74:	add	r9, r9, #1
   12f78:	add	fp, fp, #1
   12f7c:	cmp	r9, sl
   12f80:	ldrcc	r1, [sp, #40]	; 0x28
   12f84:	strbcc	r4, [r1, r9]
   12f88:	cmn	r8, #1
   12f8c:	add	r9, r9, #1
   12f90:	bne	12c18 <close_stdout@@Base+0x60c>
   12f94:	ldr	r2, [sp, #32]
   12f98:	ldrb	r3, [r2, fp]
   12f9c:	adds	r3, r3, #0
   12fa0:	movne	r3, #1
   12fa4:	cmp	r3, #0
   12fa8:	bne	12c28 <close_stdout@@Base+0x61c>
   12fac:	ldr	r3, [sp, #160]	; 0xa0
   12fb0:	cmp	r9, #0
   12fb4:	cmpeq	r3, #2
   12fb8:	bne	12fc8 <close_stdout@@Base+0x9bc>
   12fbc:	ldr	r0, [sp, #36]	; 0x24
   12fc0:	cmp	r0, #0
   12fc4:	bne	13068 <close_stdout@@Base+0xa5c>
   12fc8:	ldr	r1, [sp, #36]	; 0x24
   12fcc:	ldr	r2, [sp, #52]	; 0x34
   12fd0:	eor	r3, r1, #1
   12fd4:	cmp	r2, #0
   12fd8:	moveq	r3, #0
   12fdc:	andne	r3, r3, #1
   12fe0:	cmp	r3, #0
   12fe4:	beq	13010 <close_stdout@@Base+0xa04>
   12fe8:	ldrb	r3, [r2]
   12fec:	cmp	r3, #0
   12ff0:	beq	13010 <close_stdout@@Base+0xa04>
   12ff4:	ldr	r1, [sp, #40]	; 0x28
   12ff8:	cmp	sl, r9
   12ffc:	strbhi	r3, [r1, r9]
   13000:	ldrb	r3, [r2, #1]!
   13004:	add	r9, r9, #1
   13008:	cmp	r3, #0
   1300c:	bne	12ff8 <close_stdout@@Base+0x9ec>
   13010:	cmp	r9, sl
   13014:	movcs	r0, r9
   13018:	ldrcc	r1, [sp, #40]	; 0x28
   1301c:	movcc	r3, #0
   13020:	movcc	r0, r9
   13024:	strbcc	r3, [r1, r9]
   13028:	b	130a4 <close_stdout@@Base+0xa98>
   1302c:	cmn	r8, #1
   13030:	beq	136f8 <close_stdout@@Base+0x10ec>
   13034:	subs	r3, r8, #1
   13038:	movne	r3, #1
   1303c:	cmp	r3, #0
   13040:	bne	12f20 <close_stdout@@Base+0x914>
   13044:	cmp	fp, #0
   13048:	bne	12f20 <close_stdout@@Base+0x914>
   1304c:	ldr	r3, [sp, #36]	; 0x24
   13050:	ldr	r0, [sp, #160]	; 0xa0
   13054:	cmp	r0, #2
   13058:	movne	r3, #0
   1305c:	andeq	r3, r3, #1
   13060:	cmp	r3, #0
   13064:	beq	12f20 <close_stdout@@Base+0x914>
   13068:	ldr	r2, [sp, #164]	; 0xa4
   1306c:	mov	ip, #0
   13070:	ldr	r0, [sp, #160]	; 0xa0
   13074:	bic	r3, r2, #2
   13078:	ldr	r1, [sp, #72]	; 0x48
   1307c:	ldr	r2, [sp, #68]	; 0x44
   13080:	stm	sp, {r0, r3}
   13084:	mov	r3, r8
   13088:	str	r1, [sp, #12]
   1308c:	mov	r1, sl
   13090:	str	r2, [sp, #16]
   13094:	ldr	r0, [sp, #40]	; 0x28
   13098:	ldr	r2, [sp, #32]
   1309c:	str	ip, [sp, #8]
   130a0:	bl	12b38 <close_stdout@@Base+0x52c>
   130a4:	ldr	r1, [sp, #56]	; 0x38
   130a8:	ldr	r2, [sp, #116]	; 0x74
   130ac:	ldr	r3, [r1]
   130b0:	cmp	r2, r3
   130b4:	bne	137e8 <close_stdout@@Base+0x11dc>
   130b8:	add	sp, sp, #124	; 0x7c
   130bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130c0:	mov	r3, #114	; 0x72
   130c4:	ldr	r2, [sp, #36]	; 0x24
   130c8:	ldr	r0, [sp, #160]	; 0xa0
   130cc:	cmp	r0, #2
   130d0:	movne	r2, #0
   130d4:	andeq	r2, r2, #1
   130d8:	cmp	r2, #0
   130dc:	bne	13068 <close_stdout@@Base+0xa5c>
   130e0:	ldr	r1, [sp, #24]
   130e4:	cmp	r1, #0
   130e8:	beq	12f20 <close_stdout@@Base+0x914>
   130ec:	mov	r4, r3
   130f0:	b	12f58 <close_stdout@@Base+0x94c>
   130f4:	mov	r3, #98	; 0x62
   130f8:	b	130e0 <close_stdout@@Base+0xad4>
   130fc:	mov	r3, #102	; 0x66
   13100:	b	130e0 <close_stdout@@Base+0xad4>
   13104:	mov	r3, #118	; 0x76
   13108:	b	130e0 <close_stdout@@Base+0xad4>
   1310c:	mov	r3, #97	; 0x61
   13110:	b	130e0 <close_stdout@@Base+0xad4>
   13114:	mov	r3, #110	; 0x6e
   13118:	b	130c4 <close_stdout@@Base+0xab8>
   1311c:	mov	r3, #116	; 0x74
   13120:	b	130c4 <close_stdout@@Base+0xab8>
   13124:	ldr	r2, [sp, #24]
   13128:	cmp	r2, #0
   1312c:	beq	136d4 <close_stdout@@Base+0x10c8>
   13130:	ldr	r3, [sp, #36]	; 0x24
   13134:	cmp	r3, #0
   13138:	bne	13068 <close_stdout@@Base+0xa5c>
   1313c:	cmp	r9, sl
   13140:	add	r2, r9, #1
   13144:	ldrcc	r0, [sp, #40]	; 0x28
   13148:	movcc	r3, #92	; 0x5c
   1314c:	strbcc	r3, [r0, r9]
   13150:	add	r3, fp, #1
   13154:	cmp	r8, r3
   13158:	bls	13198 <close_stdout@@Base+0xb8c>
   1315c:	ldr	r1, [sp, #32]
   13160:	ldrb	r3, [r1, r3]
   13164:	sub	r3, r3, #48	; 0x30
   13168:	cmp	r3, #9
   1316c:	bhi	13198 <close_stdout@@Base+0xb8c>
   13170:	cmp	sl, r2
   13174:	ldrhi	r0, [sp, #40]	; 0x28
   13178:	movhi	r3, #48	; 0x30
   1317c:	strbhi	r3, [r0, r2]
   13180:	add	r3, r9, #2
   13184:	cmp	sl, r3
   13188:	ldrhi	r1, [sp, #40]	; 0x28
   1318c:	movhi	r2, #48	; 0x30
   13190:	strbhi	r2, [r1, r3]
   13194:	add	r2, r9, #3
   13198:	mov	r9, r2
   1319c:	mov	r4, #48	; 0x30
   131a0:	b	12f2c <close_stdout@@Base+0x920>
   131a4:	ldr	r1, [sp, #76]	; 0x4c
   131a8:	cmp	r1, #0
   131ac:	beq	131b8 <close_stdout@@Base+0xbac>
   131b0:	cmp	r7, #0
   131b4:	bne	12f78 <close_stdout@@Base+0x96c>
   131b8:	mov	r3, r4
   131bc:	b	130c4 <close_stdout@@Base+0xab8>
   131c0:	ldr	r1, [sp, #160]	; 0xa0
   131c4:	cmp	r1, #2
   131c8:	bne	12f20 <close_stdout@@Base+0x914>
   131cc:	ldr	r2, [sp, #36]	; 0x24
   131d0:	cmp	r2, #0
   131d4:	bne	13068 <close_stdout@@Base+0xa5c>
   131d8:	cmp	r9, sl
   131dc:	ldrcc	r0, [sp, #40]	; 0x28
   131e0:	movcc	r3, #39	; 0x27
   131e4:	strbcc	r3, [r0, r9]
   131e8:	add	r3, r9, #1
   131ec:	cmp	sl, r3
   131f0:	ldrhi	r1, [sp, #40]	; 0x28
   131f4:	movhi	r2, #92	; 0x5c
   131f8:	strbhi	r2, [r1, r3]
   131fc:	add	r3, r9, #2
   13200:	cmp	sl, r3
   13204:	add	r9, r9, #3
   13208:	ldrhi	r0, [sp, #40]	; 0x28
   1320c:	movhi	r2, #39	; 0x27
   13210:	strbhi	r2, [r0, r3]
   13214:	b	12f20 <close_stdout@@Base+0x914>
   13218:	ldr	r1, [sp, #64]	; 0x40
   1321c:	cmp	r1, #1
   13220:	bne	13518 <close_stdout@@Base+0xf0c>
   13224:	bl	1125c <__ctype_b_loc@plt>
   13228:	ldr	r2, [sp, #64]	; 0x40
   1322c:	sxth	r3, r4
   13230:	str	r2, [sp, #60]	; 0x3c
   13234:	lsl	r3, r3, #1
   13238:	ldr	r2, [r0]
   1323c:	ldrh	r2, [r2, r3]
   13240:	eor	r2, r2, #16384	; 0x4000
   13244:	ubfx	r2, r2, #14, #1
   13248:	ldr	r1, [sp, #24]
   1324c:	ands	r2, r2, r1
   13250:	beq	12f20 <close_stdout@@Base+0x914>
   13254:	ldr	r3, [sp, #60]	; 0x3c
   13258:	mov	r0, #92	; 0x5c
   1325c:	ldr	r7, [sp, #36]	; 0x24
   13260:	add	r1, r3, fp
   13264:	str	r8, [sp, #60]	; 0x3c
   13268:	ldr	r3, [sp, #40]	; 0x28
   1326c:	b	132d0 <close_stdout@@Base+0xcc4>
   13270:	cmp	r7, #0
   13274:	bne	13710 <close_stdout@@Base+0x1104>
   13278:	add	ip, r9, #1
   1327c:	cmp	r9, sl
   13280:	strbcc	r0, [r3, r9]
   13284:	cmp	sl, ip
   13288:	lsrhi	r8, r4, #6
   1328c:	addhi	r8, r8, #48	; 0x30
   13290:	strbhi	r8, [r3, ip]
   13294:	add	ip, r9, #2
   13298:	add	r9, r9, #3
   1329c:	cmp	sl, ip
   132a0:	ubfxhi	r8, r4, #3, #3
   132a4:	and	r4, r4, #7
   132a8:	add	r4, r4, #48	; 0x30
   132ac:	addhi	r8, r8, #48	; 0x30
   132b0:	strbhi	r8, [r3, ip]
   132b4:	add	fp, fp, #1
   132b8:	cmp	r1, fp
   132bc:	bls	132fc <close_stdout@@Base+0xcf0>
   132c0:	cmp	r9, sl
   132c4:	strbcc	r4, [r3, r9]
   132c8:	ldrb	r4, [r5, #1]!
   132cc:	add	r9, r9, #1
   132d0:	cmp	r2, #0
   132d4:	bne	13270 <close_stdout@@Base+0xc64>
   132d8:	cmp	r6, #0
   132dc:	beq	132b4 <close_stdout@@Base+0xca8>
   132e0:	add	fp, fp, #1
   132e4:	cmp	r9, sl
   132e8:	strbcc	r0, [r3, r9]
   132ec:	cmp	r1, fp
   132f0:	add	r9, r9, #1
   132f4:	mov	r6, #0
   132f8:	bhi	132c0 <close_stdout@@Base+0xcb4>
   132fc:	ldr	r8, [sp, #60]	; 0x3c
   13300:	b	12f7c <close_stdout@@Base+0x970>
   13304:	ldr	r3, [sp, #36]	; 0x24
   13308:	cmp	r3, #0
   1330c:	bne	13810 <close_stdout@@Base+0x1204>
   13310:	cmp	sl, #0
   13314:	beq	13728 <close_stdout@@Base+0x111c>
   13318:	ldr	r1, [sp, #40]	; 0x28
   1331c:	mov	r0, #1
   13320:	ldr	r2, [pc, #1296]	; 13838 <close_stdout@@Base+0x122c>
   13324:	mov	r3, #34	; 0x22
   13328:	str	r0, [sp, #24]
   1332c:	mov	r9, r0
   13330:	add	r2, pc, r2
   13334:	str	r0, [sp, #28]
   13338:	strb	r3, [r1]
   1333c:	str	r2, [sp, #52]	; 0x34
   13340:	b	12bec <close_stdout@@Base+0x5e0>
   13344:	ldr	r3, [pc, #1264]	; 1383c <close_stdout@@Base+0x1230>
   13348:	mov	r2, #1
   1334c:	mov	r0, #3
   13350:	str	r2, [sp, #36]	; 0x24
   13354:	add	r3, pc, r3
   13358:	str	r2, [sp, #24]
   1335c:	str	r3, [sp, #52]	; 0x34
   13360:	mov	r9, #0
   13364:	str	r2, [sp, #28]
   13368:	str	r0, [sp, #160]	; 0xa0
   1336c:	b	12bec <close_stdout@@Base+0x5e0>
   13370:	mov	r0, #0
   13374:	mov	r1, #1
   13378:	str	r0, [sp, #36]	; 0x24
   1337c:	mov	r9, r0
   13380:	str	r1, [sp, #24]
   13384:	str	r0, [sp, #28]
   13388:	str	r0, [sp, #52]	; 0x34
   1338c:	b	12bec <close_stdout@@Base+0x5e0>
   13390:	ldr	r3, [sp, #160]	; 0xa0
   13394:	cmp	r3, #8
   13398:	beq	133c4 <close_stdout@@Base+0xdb8>
   1339c:	ldr	r0, [pc, #1180]	; 13840 <close_stdout@@Base+0x1234>
   133a0:	mov	r1, r3
   133a4:	add	r0, pc, r0
   133a8:	bl	129d4 <close_stdout@@Base+0x3c8>
   133ac:	ldr	r1, [sp, #160]	; 0xa0
   133b0:	str	r0, [sp, #72]	; 0x48
   133b4:	ldr	r0, [pc, #1160]	; 13844 <close_stdout@@Base+0x1238>
   133b8:	add	r0, pc, r0
   133bc:	bl	129d4 <close_stdout@@Base+0x3c8>
   133c0:	str	r0, [sp, #68]	; 0x44
   133c4:	ldr	r0, [sp, #36]	; 0x24
   133c8:	cmp	r0, #0
   133cc:	movne	r9, #0
   133d0:	bne	13408 <close_stdout@@Base+0xdfc>
   133d4:	ldr	r1, [sp, #72]	; 0x48
   133d8:	ldrb	r3, [r1]
   133dc:	cmp	r3, #0
   133e0:	beq	137e0 <close_stdout@@Base+0x11d4>
   133e4:	mov	r2, r1
   133e8:	ldr	r1, [sp, #40]	; 0x28
   133ec:	mov	r9, r0
   133f0:	cmp	r9, sl
   133f4:	strbcc	r3, [r1, r9]
   133f8:	ldrb	r3, [r2, #1]!
   133fc:	add	r9, r9, #1
   13400:	cmp	r3, #0
   13404:	bne	133f0 <close_stdout@@Base+0xde4>
   13408:	ldr	r0, [sp, #68]	; 0x44
   1340c:	str	r0, [sp, #52]	; 0x34
   13410:	bl	11274 <strlen@plt>
   13414:	mov	r2, #1
   13418:	str	r2, [sp, #24]
   1341c:	str	r0, [sp, #28]
   13420:	b	12bec <close_stdout@@Base+0x5e0>
   13424:	ldr	r3, [pc, #1052]	; 13848 <close_stdout@@Base+0x123c>
   13428:	mov	r2, #0
   1342c:	mov	r1, #1
   13430:	mov	r0, #2
   13434:	add	r3, pc, r3
   13438:	str	r1, [sp, #36]	; 0x24
   1343c:	str	r2, [sp, #24]
   13440:	mov	r9, r2
   13444:	str	r1, [sp, #28]
   13448:	str	r3, [sp, #52]	; 0x34
   1344c:	str	r0, [sp, #160]	; 0xa0
   13450:	b	12bec <close_stdout@@Base+0x5e0>
   13454:	ldr	r3, [sp, #36]	; 0x24
   13458:	cmp	r3, #0
   1345c:	bne	137ec <close_stdout@@Base+0x11e0>
   13460:	cmp	sl, #0
   13464:	beq	13748 <close_stdout@@Base+0x113c>
   13468:	ldr	r1, [sp, #40]	; 0x28
   1346c:	mov	r3, #39	; 0x27
   13470:	ldr	r2, [sp, #36]	; 0x24
   13474:	mov	r0, #1
   13478:	mov	r9, r0
   1347c:	str	r0, [sp, #28]
   13480:	strb	r3, [r1]
   13484:	ldr	r3, [pc, #960]	; 1384c <close_stdout@@Base+0x1240>
   13488:	str	r2, [sp, #24]
   1348c:	add	r3, pc, r3
   13490:	str	r3, [sp, #52]	; 0x34
   13494:	b	12bec <close_stdout@@Base+0x5e0>
   13498:	ldr	r2, [sp, #28]
   1349c:	cmp	r2, #1
   134a0:	add	r4, fp, r2
   134a4:	movls	r3, #0
   134a8:	movhi	r3, #1
   134ac:	cmn	r8, #1
   134b0:	movne	r3, #0
   134b4:	cmp	r3, #0
   134b8:	beq	134c8 <close_stdout@@Base+0xebc>
   134bc:	ldr	r0, [sp, #32]
   134c0:	bl	11274 <strlen@plt>
   134c4:	mov	r8, r0
   134c8:	cmp	r8, r4
   134cc:	ldrcc	r3, [sp, #32]
   134d0:	movcc	r6, #0
   134d4:	addcc	r5, r3, fp
   134d8:	bcc	12c48 <close_stdout@@Base+0x63c>
   134dc:	ldr	r0, [sp, #32]
   134e0:	ldr	r1, [sp, #52]	; 0x34
   134e4:	add	r5, r0, fp
   134e8:	ldr	r2, [sp, #28]
   134ec:	mov	r0, r5
   134f0:	bl	1113c <memcmp@plt>
   134f4:	cmp	r0, #0
   134f8:	bne	13510 <close_stdout@@Base+0xf04>
   134fc:	ldr	r1, [sp, #36]	; 0x24
   13500:	cmp	r1, #0
   13504:	bne	13068 <close_stdout@@Base+0xa5c>
   13508:	mov	r6, #1
   1350c:	b	12c48 <close_stdout@@Base+0x63c>
   13510:	mov	r6, #0
   13514:	b	12c48 <close_stdout@@Base+0x63c>
   13518:	add	r7, sp, #108	; 0x6c
   1351c:	cmn	r8, #1
   13520:	mov	r3, #0
   13524:	str	r3, [sp, #108]	; 0x6c
   13528:	str	r3, [r7, #4]
   1352c:	beq	13718 <close_stdout@@Base+0x110c>
   13530:	mov	r1, #0
   13534:	ldr	r0, [sp, #32]
   13538:	mov	ip, #1
   1353c:	str	r9, [sp, #88]	; 0x58
   13540:	str	r6, [sp, #96]	; 0x60
   13544:	mov	r9, r1
   13548:	str	r5, [sp, #100]	; 0x64
   1354c:	mov	r6, ip
   13550:	mov	r5, r7
   13554:	add	r3, sp, #104	; 0x68
   13558:	sub	r0, r0, #1
   1355c:	str	r3, [sp, #80]	; 0x50
   13560:	str	r0, [sp, #84]	; 0x54
   13564:	str	r1, [sp, #60]	; 0x3c
   13568:	str	r4, [sp, #92]	; 0x5c
   1356c:	ldr	r2, [sp, #32]
   13570:	add	r7, r9, fp
   13574:	add	r0, sp, #104	; 0x68
   13578:	mov	r3, r5
   1357c:	add	r4, r2, r7
   13580:	rsb	r2, r7, r8
   13584:	mov	r1, r4
   13588:	bl	111d8 <mbrtowc@plt>
   1358c:	subs	r2, r0, #0
   13590:	beq	1369c <close_stdout@@Base+0x1090>
   13594:	cmn	r2, #1
   13598:	beq	137c4 <close_stdout@@Base+0x11b8>
   1359c:	cmn	r2, #2
   135a0:	beq	13768 <close_stdout@@Base+0x115c>
   135a4:	ldr	r3, [sp, #36]	; 0x24
   135a8:	ldr	r0, [sp, #160]	; 0xa0
   135ac:	cmp	r0, #2
   135b0:	movne	r3, #0
   135b4:	andeq	r3, r3, #1
   135b8:	cmp	r3, #0
   135bc:	beq	13678 <close_stdout@@Base+0x106c>
   135c0:	cmp	r2, #1
   135c4:	beq	13678 <close_stdout@@Base+0x106c>
   135c8:	ldr	r1, [sp, #84]	; 0x54
   135cc:	add	r3, r1, r2
   135d0:	add	r7, r3, r7
   135d4:	ldrb	r3, [r4, #1]!
   135d8:	sub	r3, r3, #91	; 0x5b
   135dc:	cmp	r3, #33	; 0x21
   135e0:	addls	pc, pc, r3, lsl #2
   135e4:	b	13670 <close_stdout@@Base+0x1064>
   135e8:	b	13068 <close_stdout@@Base+0xa5c>
   135ec:	b	13068 <close_stdout@@Base+0xa5c>
   135f0:	b	13670 <close_stdout@@Base+0x1064>
   135f4:	b	13068 <close_stdout@@Base+0xa5c>
   135f8:	b	13670 <close_stdout@@Base+0x1064>
   135fc:	b	13068 <close_stdout@@Base+0xa5c>
   13600:	b	13670 <close_stdout@@Base+0x1064>
   13604:	b	13670 <close_stdout@@Base+0x1064>
   13608:	b	13670 <close_stdout@@Base+0x1064>
   1360c:	b	13670 <close_stdout@@Base+0x1064>
   13610:	b	13670 <close_stdout@@Base+0x1064>
   13614:	b	13670 <close_stdout@@Base+0x1064>
   13618:	b	13670 <close_stdout@@Base+0x1064>
   1361c:	b	13670 <close_stdout@@Base+0x1064>
   13620:	b	13670 <close_stdout@@Base+0x1064>
   13624:	b	13670 <close_stdout@@Base+0x1064>
   13628:	b	13670 <close_stdout@@Base+0x1064>
   1362c:	b	13670 <close_stdout@@Base+0x1064>
   13630:	b	13670 <close_stdout@@Base+0x1064>
   13634:	b	13670 <close_stdout@@Base+0x1064>
   13638:	b	13670 <close_stdout@@Base+0x1064>
   1363c:	b	13670 <close_stdout@@Base+0x1064>
   13640:	b	13670 <close_stdout@@Base+0x1064>
   13644:	b	13670 <close_stdout@@Base+0x1064>
   13648:	b	13670 <close_stdout@@Base+0x1064>
   1364c:	b	13670 <close_stdout@@Base+0x1064>
   13650:	b	13670 <close_stdout@@Base+0x1064>
   13654:	b	13670 <close_stdout@@Base+0x1064>
   13658:	b	13670 <close_stdout@@Base+0x1064>
   1365c:	b	13670 <close_stdout@@Base+0x1064>
   13660:	b	13670 <close_stdout@@Base+0x1064>
   13664:	b	13670 <close_stdout@@Base+0x1064>
   13668:	b	13670 <close_stdout@@Base+0x1064>
   1366c:	b	13068 <close_stdout@@Base+0xa5c>
   13670:	cmp	r4, r7
   13674:	bne	135d4 <close_stdout@@Base+0xfc8>
   13678:	ldr	r0, [sp, #104]	; 0x68
   1367c:	add	r9, r9, r2
   13680:	bl	11190 <iswprint@plt>
   13684:	cmp	r0, #0
   13688:	mov	r0, r5
   1368c:	moveq	r6, #0
   13690:	bl	11118 <mbsinit@plt>
   13694:	cmp	r0, #0
   13698:	beq	1356c <close_stdout@@Base+0xf60>
   1369c:	mov	ip, r6
   136a0:	eor	r2, ip, #1
   136a4:	str	r9, [sp, #60]	; 0x3c
   136a8:	ldr	r4, [sp, #92]	; 0x5c
   136ac:	uxtb	r2, r2
   136b0:	ldr	r9, [sp, #88]	; 0x58
   136b4:	ldr	r6, [sp, #96]	; 0x60
   136b8:	ldr	r5, [sp, #100]	; 0x64
   136bc:	ldr	r3, [sp, #60]	; 0x3c
   136c0:	cmp	r3, #1
   136c4:	bls	13248 <close_stdout@@Base+0xc3c>
   136c8:	ldr	r0, [sp, #24]
   136cc:	and	r2, r2, r0
   136d0:	b	13254 <close_stdout@@Base+0xc48>
   136d4:	ldr	r2, [sp, #164]	; 0xa4
   136d8:	tst	r2, #1
   136dc:	addne	fp, fp, #1
   136e0:	bne	12c10 <close_stdout@@Base+0x604>
   136e4:	b	12f20 <close_stdout@@Base+0x914>
   136e8:	ldr	r0, [sp, #36]	; 0x24
   136ec:	cmp	r0, #0
   136f0:	beq	12f20 <close_stdout@@Base+0x914>
   136f4:	b	13068 <close_stdout@@Base+0xa5c>
   136f8:	ldr	r2, [sp, #32]
   136fc:	ldrb	r3, [r2, #1]
   13700:	adds	r3, r3, #0
   13704:	movne	r3, #1
   13708:	b	1303c <close_stdout@@Base+0xa30>
   1370c:	bl	11370 <abort@plt>
   13710:	ldr	r8, [sp, #60]	; 0x3c
   13714:	b	13068 <close_stdout@@Base+0xa5c>
   13718:	ldr	r0, [sp, #32]
   1371c:	bl	11274 <strlen@plt>
   13720:	mov	r8, r0
   13724:	b	13530 <close_stdout@@Base+0xf24>
   13728:	ldr	r2, [pc, #288]	; 13850 <close_stdout@@Base+0x1244>
   1372c:	mov	r1, #1
   13730:	mov	r9, r1
   13734:	str	r1, [sp, #24]
   13738:	add	r2, pc, r2
   1373c:	str	r1, [sp, #28]
   13740:	str	r2, [sp, #52]	; 0x34
   13744:	b	12bec <close_stdout@@Base+0x5e0>
   13748:	ldr	r2, [pc, #260]	; 13854 <close_stdout@@Base+0x1248>
   1374c:	mov	r3, #1
   13750:	mov	r9, r3
   13754:	str	r3, [sp, #28]
   13758:	add	r2, pc, r2
   1375c:	str	sl, [sp, #24]
   13760:	str	r2, [sp, #52]	; 0x34
   13764:	b	12bec <close_stdout@@Base+0x5e0>
   13768:	cmp	r8, r7
   1376c:	str	r9, [sp, #60]	; 0x3c
   13770:	mov	ip, r4
   13774:	ldr	r6, [sp, #96]	; 0x60
   13778:	ldr	r9, [sp, #88]	; 0x58
   1377c:	ldr	r4, [sp, #92]	; 0x5c
   13780:	ldr	r5, [sp, #100]	; 0x64
   13784:	bls	137bc <close_stdout@@Base+0x11b0>
   13788:	ldrb	r3, [ip]
   1378c:	cmp	r3, #0
   13790:	beq	137bc <close_stdout@@Base+0x11b0>
   13794:	ldr	r3, [sp, #60]	; 0x3c
   13798:	b	137a8 <close_stdout@@Base+0x119c>
   1379c:	ldrb	r2, [r5, r3]
   137a0:	cmp	r2, #0
   137a4:	beq	137b8 <close_stdout@@Base+0x11ac>
   137a8:	add	r3, r3, #1
   137ac:	add	r2, fp, r3
   137b0:	cmp	r8, r2
   137b4:	bhi	1379c <close_stdout@@Base+0x1190>
   137b8:	str	r3, [sp, #60]	; 0x3c
   137bc:	mov	r2, #1
   137c0:	b	136bc <close_stdout@@Base+0x10b0>
   137c4:	str	r9, [sp, #60]	; 0x3c
   137c8:	mov	r2, #1
   137cc:	ldr	r4, [sp, #92]	; 0x5c
   137d0:	ldr	r6, [sp, #96]	; 0x60
   137d4:	ldr	r9, [sp, #88]	; 0x58
   137d8:	ldr	r5, [sp, #100]	; 0x64
   137dc:	b	136bc <close_stdout@@Base+0x10b0>
   137e0:	ldr	r9, [sp, #36]	; 0x24
   137e4:	b	13408 <close_stdout@@Base+0xdfc>
   137e8:	bl	11154 <__stack_chk_fail@plt>
   137ec:	ldr	r1, [pc, #100]	; 13858 <close_stdout@@Base+0x124c>
   137f0:	mov	r3, #0
   137f4:	mov	r0, #1
   137f8:	str	r3, [sp, #24]
   137fc:	add	r1, pc, r1
   13800:	str	r0, [sp, #28]
   13804:	mov	r9, r3
   13808:	str	r1, [sp, #52]	; 0x34
   1380c:	b	12bec <close_stdout@@Base+0x5e0>
   13810:	ldr	r0, [pc, #68]	; 1385c <close_stdout@@Base+0x1250>
   13814:	mov	r3, #1
   13818:	mov	r9, #0
   1381c:	str	r3, [sp, #24]
   13820:	add	r0, pc, r0
   13824:	str	r3, [sp, #28]
   13828:	str	r0, [sp, #52]	; 0x34
   1382c:	b	12bec <close_stdout@@Base+0x5e0>
   13830:	andeq	r4, r1, r4, lsr #9
   13834:	andeq	r0, r0, ip, lsl #2
   13838:	ldrdeq	r2, [r0], -r8
   1383c:			; <UNDEFINED> instruction: 0x00002fb4
   13840:	andeq	r2, r0, r0, ror pc
   13844:	andeq	r2, r0, ip, asr #30
   13848:	ldrdeq	r2, [r0], -r0
   1384c:	andeq	r2, r0, r8, ror lr
   13850:	ldrdeq	r2, [r0], -r0
   13854:	andeq	r2, r0, ip, lsr #23
   13858:	andeq	r2, r0, r8, lsl #22
   1385c:	andeq	r2, r0, r8, ror #21
   13860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13864:	sub	sp, sp, #44	; 0x2c
   13868:	mov	r6, r0
   1386c:	mov	r9, r1
   13870:	mov	sl, r2
   13874:	mov	r4, r3
   13878:	bl	112a4 <__errno_location@plt>
   1387c:	ldr	fp, [pc, #412]	; 13a20 <close_stdout@@Base+0x1414>
   13880:	cmp	r6, #0
   13884:	add	fp, pc, fp
   13888:	ldr	r5, [fp]
   1388c:	ldr	r1, [r0]
   13890:	mov	r8, r0
   13894:	str	r1, [sp, #36]	; 0x24
   13898:	blt	13a18 <close_stdout@@Base+0x140c>
   1389c:	ldr	r3, [pc, #384]	; 13a24 <close_stdout@@Base+0x1418>
   138a0:	add	r3, pc, r3
   138a4:	ldr	r3, [r3]
   138a8:	cmp	r6, r3
   138ac:	bcc	13900 <close_stdout@@Base+0x12f4>
   138b0:	add	r7, r6, #1
   138b4:	cmn	r7, #-536870911	; 0xe0000001
   138b8:	bhi	13a1c <close_stdout@@Base+0x1410>
   138bc:	add	r3, fp, #4
   138c0:	cmp	r5, r3
   138c4:	beq	139f0 <close_stdout@@Base+0x13e4>
   138c8:	mov	r0, r5
   138cc:	lsl	r1, r7, #3
   138d0:	bl	147a4 <close_stdout@@Base+0x2198>
   138d4:	mov	r5, r0
   138d8:	str	r0, [fp]
   138dc:	ldr	fp, [pc, #324]	; 13a28 <close_stdout@@Base+0x141c>
   138e0:	mov	r1, #0
   138e4:	add	fp, pc, fp
   138e8:	ldr	r0, [fp]
   138ec:	rsb	r2, r0, r7
   138f0:	add	r0, r5, r0, lsl #3
   138f4:	lsl	r2, r2, #3
   138f8:	bl	112bc <memset@plt>
   138fc:	str	r7, [fp]
   13900:	add	r2, r4, #8
   13904:	str	r2, [sp, #32]
   13908:	ldr	r1, [r4]
   1390c:	add	fp, r5, r6, lsl #3
   13910:	ldr	lr, [sp, #32]
   13914:	mov	r2, r9
   13918:	ldr	r3, [r4, #4]
   1391c:	ldr	ip, [r5, r6, lsl #3]
   13920:	ldr	r7, [fp, #4]
   13924:	orr	r3, r3, #1
   13928:	str	r1, [sp]
   1392c:	str	r3, [sp, #4]
   13930:	mov	r1, ip
   13934:	str	lr, [sp, #8]
   13938:	mov	r0, r7
   1393c:	ldr	lr, [r4, #40]	; 0x28
   13940:	str	r3, [sp, #28]
   13944:	mov	r3, sl
   13948:	str	lr, [sp, #12]
   1394c:	ldr	lr, [r4, #44]	; 0x2c
   13950:	str	ip, [sp, #24]
   13954:	str	lr, [sp, #16]
   13958:	bl	12b38 <close_stdout@@Base+0x52c>
   1395c:	ldr	ip, [sp, #24]
   13960:	cmp	ip, r0
   13964:	bhi	139dc <close_stdout@@Base+0x13d0>
   13968:	ldr	r3, [pc, #188]	; 13a2c <close_stdout@@Base+0x1420>
   1396c:	add	r1, r0, #1
   13970:	str	r1, [r5, r6, lsl #3]
   13974:	add	r3, pc, r3
   13978:	cmp	r7, r3
   1397c:	beq	13990 <close_stdout@@Base+0x1384>
   13980:	mov	r0, r7
   13984:	str	r1, [sp, #24]
   13988:	bl	110f4 <free@plt>
   1398c:	ldr	r1, [sp, #24]
   13990:	mov	r0, r1
   13994:	str	r1, [sp, #24]
   13998:	bl	1474c <close_stdout@@Base+0x2140>
   1399c:	ldr	r3, [sp, #28]
   139a0:	ldr	lr, [sp, #32]
   139a4:	mov	r2, r9
   139a8:	str	r0, [fp, #4]
   139ac:	mov	r7, r0
   139b0:	ldr	ip, [r4]
   139b4:	str	r3, [sp, #4]
   139b8:	mov	r3, sl
   139bc:	str	lr, [sp, #8]
   139c0:	str	ip, [sp]
   139c4:	ldr	ip, [r4, #40]	; 0x28
   139c8:	ldr	r1, [sp, #24]
   139cc:	str	ip, [sp, #12]
   139d0:	ldr	ip, [r4, #44]	; 0x2c
   139d4:	str	ip, [sp, #16]
   139d8:	bl	12b38 <close_stdout@@Base+0x52c>
   139dc:	ldr	r1, [sp, #36]	; 0x24
   139e0:	mov	r0, r7
   139e4:	str	r1, [r8]
   139e8:	add	sp, sp, #44	; 0x2c
   139ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139f0:	lsl	r1, r7, #3
   139f4:	mov	r0, #0
   139f8:	str	r3, [sp, #24]
   139fc:	bl	147a4 <close_stdout@@Base+0x2198>
   13a00:	ldr	r3, [sp, #24]
   13a04:	mov	r5, r0
   13a08:	ldm	r3, {r0, r1}
   13a0c:	str	r5, [fp]
   13a10:	stm	r5, {r0, r1}
   13a14:	b	138dc <close_stdout@@Base+0x12d0>
   13a18:	bl	11370 <abort@plt>
   13a1c:	bl	14960 <close_stdout@@Base+0x2354>
   13a20:	strdeq	r3, [r1], -r8
   13a24:	andeq	r3, r1, r8, lsr #17
   13a28:	andeq	r3, r1, r4, ror #16
   13a2c:	andeq	r5, r1, ip, ror r9
   13a30:	push	{r4, r5, r6, lr}
   13a34:	mov	r5, r0
   13a38:	bl	112a4 <__errno_location@plt>
   13a3c:	cmp	r5, #0
   13a40:	mov	r1, #48	; 0x30
   13a44:	mov	r4, r0
   13a48:	ldr	r0, [pc, #24]	; 13a68 <close_stdout@@Base+0x145c>
   13a4c:	ldr	r6, [r4]
   13a50:	add	r0, pc, r0
   13a54:	add	r0, r0, #256	; 0x100
   13a58:	movne	r0, r5
   13a5c:	bl	14920 <close_stdout@@Base+0x2314>
   13a60:	str	r6, [r4]
   13a64:	pop	{r4, r5, r6, pc}
   13a68:	andeq	r5, r1, r0, lsr #17
   13a6c:	cmp	r0, #0
   13a70:	beq	13a7c <close_stdout@@Base+0x1470>
   13a74:	ldr	r0, [r0]
   13a78:	bx	lr
   13a7c:	ldr	r0, [pc, #12]	; 13a90 <close_stdout@@Base+0x1484>
   13a80:	add	r0, pc, r0
   13a84:	add	r0, r0, #256	; 0x100
   13a88:	ldr	r0, [r0]
   13a8c:	bx	lr
   13a90:	andeq	r5, r1, r0, ror r8
   13a94:	cmp	r0, #0
   13a98:	beq	13aa4 <close_stdout@@Base+0x1498>
   13a9c:	str	r1, [r0]
   13aa0:	bx	lr
   13aa4:	ldr	r0, [pc, #12]	; 13ab8 <close_stdout@@Base+0x14ac>
   13aa8:	add	r0, pc, r0
   13aac:	add	r0, r0, #256	; 0x100
   13ab0:	str	r1, [r0]
   13ab4:	bx	lr
   13ab8:	andeq	r5, r1, r8, asr #16
   13abc:	cmp	r0, #0
   13ac0:	movne	r3, r0
   13ac4:	beq	13af4 <close_stdout@@Base+0x14e8>
   13ac8:	lsr	ip, r1, #5
   13acc:	and	r1, r1, #31
   13ad0:	add	r3, r3, ip, lsl #2
   13ad4:	ldr	ip, [r3, #8]
   13ad8:	lsr	r0, ip, r1
   13adc:	eor	r2, r0, r2
   13ae0:	and	r0, r0, #1
   13ae4:	and	r2, r2, #1
   13ae8:	eor	ip, ip, r2, lsl r1
   13aec:	str	ip, [r3, #8]
   13af0:	bx	lr
   13af4:	ldr	r3, [pc, #8]	; 13b04 <close_stdout@@Base+0x14f8>
   13af8:	add	r3, pc, r3
   13afc:	add	r3, r3, #256	; 0x100
   13b00:	b	13ac8 <close_stdout@@Base+0x14bc>
   13b04:	strdeq	r5, [r1], -r8
   13b08:	subs	r3, r0, #0
   13b0c:	beq	13b1c <close_stdout@@Base+0x1510>
   13b10:	ldr	r0, [r3, #4]
   13b14:	str	r1, [r3, #4]
   13b18:	bx	lr
   13b1c:	ldr	r3, [pc, #8]	; 13b2c <close_stdout@@Base+0x1520>
   13b20:	add	r3, pc, r3
   13b24:	add	r3, r3, #256	; 0x100
   13b28:	b	13b10 <close_stdout@@Base+0x1504>
   13b2c:	ldrdeq	r5, [r1], -r0
   13b30:	cmp	r0, #0
   13b34:	push	{r3, lr}
   13b38:	beq	13b5c <close_stdout@@Base+0x1550>
   13b3c:	cmp	r2, #0
   13b40:	cmpne	r1, #0
   13b44:	mov	r3, #8
   13b48:	strne	r1, [r0, #40]	; 0x28
   13b4c:	str	r3, [r0]
   13b50:	strne	r2, [r0, #44]	; 0x2c
   13b54:	popne	{r3, pc}
   13b58:	bl	11370 <abort@plt>
   13b5c:	ldr	r0, [pc, #8]	; 13b6c <close_stdout@@Base+0x1560>
   13b60:	add	r0, pc, r0
   13b64:	add	r0, r0, #256	; 0x100
   13b68:	b	13b3c <close_stdout@@Base+0x1530>
   13b6c:	muleq	r1, r0, r7
   13b70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b74:	sub	sp, sp, #24
   13b78:	mov	r7, r0
   13b7c:	mov	sl, r1
   13b80:	ldr	r4, [sp, #56]	; 0x38
   13b84:	mov	r9, r2
   13b88:	mov	r8, r3
   13b8c:	cmp	r4, #0
   13b90:	beq	13be4 <close_stdout@@Base+0x15d8>
   13b94:	bl	112a4 <__errno_location@plt>
   13b98:	ldr	r3, [r4]
   13b9c:	add	lr, r4, #8
   13ba0:	mov	r1, sl
   13ba4:	mov	r2, r9
   13ba8:	ldr	r6, [r0]
   13bac:	mov	r5, r0
   13bb0:	str	r3, [sp]
   13bb4:	mov	r0, r7
   13bb8:	ldr	ip, [r4, #4]
   13bbc:	mov	r3, r8
   13bc0:	stmib	sp, {ip, lr}
   13bc4:	ldr	ip, [r4, #40]	; 0x28
   13bc8:	str	ip, [sp, #12]
   13bcc:	ldr	ip, [r4, #44]	; 0x2c
   13bd0:	str	ip, [sp, #16]
   13bd4:	bl	12b38 <close_stdout@@Base+0x52c>
   13bd8:	str	r6, [r5]
   13bdc:	add	sp, sp, #24
   13be0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13be4:	ldr	r4, [pc, #8]	; 13bf4 <close_stdout@@Base+0x15e8>
   13be8:	add	r4, pc, r4
   13bec:	add	r4, r4, #256	; 0x100
   13bf0:	b	13b94 <close_stdout@@Base+0x1588>
   13bf4:	andeq	r5, r1, r8, lsl #14
   13bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bfc:	subs	r4, r3, #0
   13c00:	sub	sp, sp, #36	; 0x24
   13c04:	mov	r7, r0
   13c08:	mov	r6, r1
   13c0c:	mov	r5, r2
   13c10:	beq	13ccc <close_stdout@@Base+0x16c0>
   13c14:	bl	112a4 <__errno_location@plt>
   13c18:	ldr	r3, [r4]
   13c1c:	ldr	sl, [r4, #4]
   13c20:	add	r9, r4, #8
   13c24:	mov	r8, r0
   13c28:	mov	r0, #0
   13c2c:	ldr	r2, [r8]
   13c30:	cmp	r5, r0
   13c34:	orreq	sl, sl, #1
   13c38:	str	r9, [sp, #8]
   13c3c:	mov	r1, r0
   13c40:	stm	sp, {r3, sl}
   13c44:	mov	r3, r6
   13c48:	ldr	ip, [r4, #40]	; 0x28
   13c4c:	str	r2, [sp, #28]
   13c50:	mov	r2, r7
   13c54:	str	ip, [sp, #12]
   13c58:	ldr	ip, [r4, #44]	; 0x2c
   13c5c:	str	ip, [sp, #16]
   13c60:	bl	12b38 <close_stdout@@Base+0x52c>
   13c64:	add	r1, r0, #1
   13c68:	mov	fp, r0
   13c6c:	str	r1, [sp, #24]
   13c70:	mov	r0, r1
   13c74:	bl	1474c <close_stdout@@Base+0x2140>
   13c78:	ldr	lr, [r4]
   13c7c:	str	sl, [sp, #4]
   13c80:	mov	r3, r6
   13c84:	str	r9, [sp, #8]
   13c88:	mov	r2, r7
   13c8c:	str	lr, [sp]
   13c90:	ldr	lr, [r4, #40]	; 0x28
   13c94:	ldr	r1, [sp, #24]
   13c98:	str	lr, [sp, #12]
   13c9c:	ldr	lr, [r4, #44]	; 0x2c
   13ca0:	str	lr, [sp, #16]
   13ca4:	str	r0, [sp, #24]
   13ca8:	bl	12b38 <close_stdout@@Base+0x52c>
   13cac:	ldr	r3, [sp, #28]
   13cb0:	cmp	r5, #0
   13cb4:	str	r3, [r8]
   13cb8:	ldr	ip, [sp, #24]
   13cbc:	strne	fp, [r5]
   13cc0:	mov	r0, ip
   13cc4:	add	sp, sp, #36	; 0x24
   13cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ccc:	ldr	r4, [pc, #8]	; 13cdc <close_stdout@@Base+0x16d0>
   13cd0:	add	r4, pc, r4
   13cd4:	add	r4, r4, #256	; 0x100
   13cd8:	b	13c14 <close_stdout@@Base+0x1608>
   13cdc:	andeq	r5, r1, r0, lsr #12
   13ce0:	mov	r3, r2
   13ce4:	mov	r2, #0
   13ce8:	b	13bf8 <close_stdout@@Base+0x15ec>
   13cec:	ldr	r2, [pc, #152]	; 13d8c <close_stdout@@Base+0x1780>
   13cf0:	push	{r3, r4, r5, r6, r7, lr}
   13cf4:	add	r2, pc, r2
   13cf8:	ldr	r3, [pc, #144]	; 13d90 <close_stdout@@Base+0x1784>
   13cfc:	ldr	r6, [r2]
   13d00:	add	r3, pc, r3
   13d04:	cmp	r6, #1
   13d08:	ldr	r7, [r3]
   13d0c:	movhi	r4, #1
   13d10:	movhi	r5, r7
   13d14:	bls	13d30 <close_stdout@@Base+0x1724>
   13d18:	ldr	r0, [r5, #12]
   13d1c:	add	r4, r4, #1
   13d20:	bl	110f4 <free@plt>
   13d24:	cmp	r4, r6
   13d28:	add	r5, r5, #8
   13d2c:	bne	13d18 <close_stdout@@Base+0x170c>
   13d30:	ldr	r4, [pc, #92]	; 13d94 <close_stdout@@Base+0x1788>
   13d34:	ldr	r0, [r7, #4]
   13d38:	add	r4, pc, r4
   13d3c:	cmp	r0, r4
   13d40:	beq	13d58 <close_stdout@@Base+0x174c>
   13d44:	bl	110f4 <free@plt>
   13d48:	ldr	r3, [pc, #72]	; 13d98 <close_stdout@@Base+0x178c>
   13d4c:	mov	r2, #256	; 0x100
   13d50:	add	r3, pc, r3
   13d54:	stmib	r3, {r2, r4}
   13d58:	ldr	r4, [pc, #60]	; 13d9c <close_stdout@@Base+0x1790>
   13d5c:	add	r4, pc, r4
   13d60:	add	r5, r4, #4
   13d64:	cmp	r7, r5
   13d68:	beq	13d78 <close_stdout@@Base+0x176c>
   13d6c:	mov	r0, r7
   13d70:	bl	110f4 <free@plt>
   13d74:	str	r5, [r4]
   13d78:	ldr	r3, [pc, #32]	; 13da0 <close_stdout@@Base+0x1794>
   13d7c:	mov	r2, #1
   13d80:	add	r3, pc, r3
   13d84:	str	r2, [r3]
   13d88:	pop	{r3, r4, r5, r6, r7, pc}
   13d8c:	andeq	r3, r1, r4, asr r4
   13d90:	andeq	r3, r1, ip, ror r4
   13d94:			; <UNDEFINED> instruction: 0x000155b8
   13d98:	andeq	r3, r1, ip, lsr #8
   13d9c:	andeq	r3, r1, r0, lsr #8
   13da0:	andeq	r3, r1, r8, asr #7
   13da4:	ldr	r3, [pc, #12]	; 13db8 <close_stdout@@Base+0x17ac>
   13da8:	mvn	r2, #0
   13dac:	add	r3, pc, r3
   13db0:	add	r3, r3, #256	; 0x100
   13db4:	b	13860 <close_stdout@@Base+0x1254>
   13db8:	andeq	r5, r1, r4, asr #10
   13dbc:	ldr	r3, [pc, #8]	; 13dcc <close_stdout@@Base+0x17c0>
   13dc0:	add	r3, pc, r3
   13dc4:	add	r3, r3, #256	; 0x100
   13dc8:	b	13860 <close_stdout@@Base+0x1254>
   13dcc:	andeq	r5, r1, r0, lsr r5
   13dd0:	mov	r1, r0
   13dd4:	mov	r0, #0
   13dd8:	b	13da4 <close_stdout@@Base+0x1798>
   13ddc:	mov	r2, r1
   13de0:	mov	r1, r0
   13de4:	mov	r0, #0
   13de8:	b	13dbc <close_stdout@@Base+0x17b0>
   13dec:	ldr	r3, [pc, #92]	; 13e50 <close_stdout@@Base+0x1844>
   13df0:	ldr	ip, [pc, #92]	; 13e54 <close_stdout@@Base+0x1848>
   13df4:	add	r3, pc, r3
   13df8:	push	{r4, r5, r6, r7, lr}
   13dfc:	sub	sp, sp, #60	; 0x3c
   13e00:	ldr	r4, [r3, ip]
   13e04:	add	r5, sp, #4
   13e08:	mov	r7, r2
   13e0c:	mov	r6, r0
   13e10:	mov	r0, r5
   13e14:	ldr	r3, [r4]
   13e18:	str	r3, [sp, #52]	; 0x34
   13e1c:	bl	12980 <close_stdout@@Base+0x374>
   13e20:	mov	r3, r5
   13e24:	mvn	r2, #0
   13e28:	mov	r0, r6
   13e2c:	mov	r1, r7
   13e30:	bl	13860 <close_stdout@@Base+0x1254>
   13e34:	ldr	r2, [sp, #52]	; 0x34
   13e38:	ldr	r3, [r4]
   13e3c:	cmp	r2, r3
   13e40:	bne	13e4c <close_stdout@@Base+0x1840>
   13e44:	add	sp, sp, #60	; 0x3c
   13e48:	pop	{r4, r5, r6, r7, pc}
   13e4c:	bl	11154 <__stack_chk_fail@plt>
   13e50:	andeq	r3, r1, r4, lsl #4
   13e54:	andeq	r0, r0, ip, lsl #2
   13e58:	ldr	ip, [pc, #96]	; 13ec0 <close_stdout@@Base+0x18b4>
   13e5c:	push	{r4, r5, r6, r7, r8, lr}
   13e60:	add	ip, pc, ip
   13e64:	ldr	lr, [pc, #88]	; 13ec4 <close_stdout@@Base+0x18b8>
   13e68:	sub	sp, sp, #56	; 0x38
   13e6c:	mov	r8, r3
   13e70:	add	r5, sp, #4
   13e74:	mov	r7, r2
   13e78:	mov	r6, r0
   13e7c:	ldr	r4, [ip, lr]
   13e80:	mov	r0, r5
   13e84:	ldr	r3, [r4]
   13e88:	str	r3, [sp, #52]	; 0x34
   13e8c:	bl	12980 <close_stdout@@Base+0x374>
   13e90:	mov	r2, r8
   13e94:	mov	r3, r5
   13e98:	mov	r0, r6
   13e9c:	mov	r1, r7
   13ea0:	bl	13860 <close_stdout@@Base+0x1254>
   13ea4:	ldr	r2, [sp, #52]	; 0x34
   13ea8:	ldr	r3, [r4]
   13eac:	cmp	r2, r3
   13eb0:	bne	13ebc <close_stdout@@Base+0x18b0>
   13eb4:	add	sp, sp, #56	; 0x38
   13eb8:	pop	{r4, r5, r6, r7, r8, pc}
   13ebc:	bl	11154 <__stack_chk_fail@plt>
   13ec0:	muleq	r1, r8, r1
   13ec4:	andeq	r0, r0, ip, lsl #2
   13ec8:	mov	r2, r1
   13ecc:	mov	r1, r0
   13ed0:	mov	r0, #0
   13ed4:	b	13dec <close_stdout@@Base+0x17e0>
   13ed8:	mov	ip, r1
   13edc:	mov	r3, r2
   13ee0:	mov	r1, r0
   13ee4:	mov	r2, ip
   13ee8:	mov	r0, #0
   13eec:	b	13e58 <close_stdout@@Base+0x184c>
   13ef0:	push	{r4, r5, r6, r7, r8, lr}
   13ef4:	mov	r5, r2
   13ef8:	ldr	lr, [pc, #136]	; 13f88 <close_stdout@@Base+0x197c>
   13efc:	mov	r7, r0
   13f00:	mov	r6, r1
   13f04:	ldr	r4, [pc, #128]	; 13f8c <close_stdout@@Base+0x1980>
   13f08:	add	lr, pc, lr
   13f0c:	sub	sp, sp, #56	; 0x38
   13f10:	add	lr, lr, #256	; 0x100
   13f14:	ldr	r8, [pc, #116]	; 13f90 <close_stdout@@Base+0x1984>
   13f18:	add	r4, pc, r4
   13f1c:	add	ip, sp, #4
   13f20:	ldm	lr!, {r0, r1, r2, r3}
   13f24:	ldr	r4, [r4, r8]
   13f28:	stmia	ip!, {r0, r1, r2, r3}
   13f2c:	ldm	lr!, {r0, r1, r2, r3}
   13f30:	ldr	r8, [r4]
   13f34:	stmia	ip!, {r0, r1, r2, r3}
   13f38:	ldm	lr, {r0, r1, r2, r3}
   13f3c:	str	r8, [sp, #52]	; 0x34
   13f40:	stm	ip, {r0, r1, r2, r3}
   13f44:	mov	r1, r5
   13f48:	add	r5, sp, #4
   13f4c:	mov	r2, #1
   13f50:	mov	r0, r5
   13f54:	bl	13abc <close_stdout@@Base+0x14b0>
   13f58:	mov	r2, r6
   13f5c:	mov	r3, r5
   13f60:	mov	r1, r7
   13f64:	mov	r0, #0
   13f68:	bl	13860 <close_stdout@@Base+0x1254>
   13f6c:	ldr	r2, [sp, #52]	; 0x34
   13f70:	ldr	r3, [r4]
   13f74:	cmp	r2, r3
   13f78:	bne	13f84 <close_stdout@@Base+0x1978>
   13f7c:	add	sp, sp, #56	; 0x38
   13f80:	pop	{r4, r5, r6, r7, r8, pc}
   13f84:	bl	11154 <__stack_chk_fail@plt>
   13f88:	andeq	r5, r1, r8, ror #7
   13f8c:	andeq	r3, r1, r0, ror #1
   13f90:	andeq	r0, r0, ip, lsl #2
   13f94:	mov	r2, r1
   13f98:	mvn	r1, #0
   13f9c:	b	13ef0 <close_stdout@@Base+0x18e4>
   13fa0:	mov	r1, #58	; 0x3a
   13fa4:	b	13f94 <close_stdout@@Base+0x1988>
   13fa8:	mov	r2, #58	; 0x3a
   13fac:	b	13ef0 <close_stdout@@Base+0x18e4>
   13fb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13fb4:	mov	r5, r2
   13fb8:	ldr	lr, [pc, #144]	; 14050 <close_stdout@@Base+0x1a44>
   13fbc:	mov	r8, r0
   13fc0:	mov	r9, r1
   13fc4:	mov	r7, r3
   13fc8:	add	lr, pc, lr
   13fcc:	ldr	r4, [pc, #128]	; 14054 <close_stdout@@Base+0x1a48>
   13fd0:	add	lr, lr, #256	; 0x100
   13fd4:	sub	sp, sp, #56	; 0x38
   13fd8:	ldr	sl, [pc, #120]	; 14058 <close_stdout@@Base+0x1a4c>
   13fdc:	add	r4, pc, r4
   13fe0:	ldm	lr!, {r0, r1, r2, r3}
   13fe4:	add	ip, sp, #4
   13fe8:	ldr	r4, [r4, sl]
   13fec:	ldr	r6, [sp, #88]	; 0x58
   13ff0:	stmia	ip!, {r0, r1, r2, r3}
   13ff4:	ldm	lr!, {r0, r1, r2, r3}
   13ff8:	ldr	sl, [r4]
   13ffc:	stmia	ip!, {r0, r1, r2, r3}
   14000:	ldm	lr, {r0, r1, r2, r3}
   14004:	str	sl, [sp, #52]	; 0x34
   14008:	stm	ip, {r0, r1, r2, r3}
   1400c:	mov	r2, r5
   14010:	add	r5, sp, #4
   14014:	mov	r1, r9
   14018:	mov	r0, r5
   1401c:	bl	13b30 <close_stdout@@Base+0x1524>
   14020:	mov	r2, r6
   14024:	mov	r3, r5
   14028:	mov	r0, r8
   1402c:	mov	r1, r7
   14030:	bl	13860 <close_stdout@@Base+0x1254>
   14034:	ldr	r2, [sp, #52]	; 0x34
   14038:	ldr	r3, [r4]
   1403c:	cmp	r2, r3
   14040:	bne	1404c <close_stdout@@Base+0x1a40>
   14044:	add	sp, sp, #56	; 0x38
   14048:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1404c:	bl	11154 <__stack_chk_fail@plt>
   14050:	andeq	r5, r1, r8, lsr #6
   14054:	andeq	r3, r1, ip, lsl r0
   14058:	andeq	r0, r0, ip, lsl #2
   1405c:	push	{lr}		; (str lr, [sp, #-4]!)
   14060:	sub	sp, sp, #12
   14064:	mvn	ip, #0
   14068:	str	ip, [sp]
   1406c:	bl	13fb0 <close_stdout@@Base+0x19a4>
   14070:	add	sp, sp, #12
   14074:	pop	{pc}		; (ldr pc, [sp], #4)
   14078:	mov	ip, r1
   1407c:	mov	r3, r2
   14080:	mov	r1, r0
   14084:	mov	r2, ip
   14088:	mov	r0, #0
   1408c:	b	1405c <close_stdout@@Base+0x1a50>
   14090:	push	{lr}		; (str lr, [sp, #-4]!)
   14094:	sub	sp, sp, #12
   14098:	mov	lr, r1
   1409c:	mov	ip, r2
   140a0:	mov	r1, r0
   140a4:	str	r3, [sp]
   140a8:	mov	r2, lr
   140ac:	mov	r3, ip
   140b0:	mov	r0, #0
   140b4:	bl	13fb0 <close_stdout@@Base+0x19a4>
   140b8:	add	sp, sp, #12
   140bc:	pop	{pc}		; (ldr pc, [sp], #4)
   140c0:	ldr	r3, [pc, #12]	; 140d4 <close_stdout@@Base+0x1ac8>
   140c4:	ldr	ip, [pc, #12]	; 140d8 <close_stdout@@Base+0x1acc>
   140c8:	add	r3, pc, r3
   140cc:	ldr	r3, [r3, ip]
   140d0:	b	13860 <close_stdout@@Base+0x1254>
   140d4:	andeq	r2, r1, r0, lsr pc
   140d8:	andeq	r0, r0, r8, lsl #2
   140dc:	mov	r2, r1
   140e0:	mov	r1, r0
   140e4:	mov	r0, #0
   140e8:	b	140c0 <close_stdout@@Base+0x1ab4>
   140ec:	mvn	r2, #0
   140f0:	b	140c0 <close_stdout@@Base+0x1ab4>
   140f4:	mov	r1, r0
   140f8:	mov	r0, #0
   140fc:	b	140ec <close_stdout@@Base+0x1ae0>
   14100:	push	{r4, r5, r6, r7, r8, lr}
   14104:	mov	r8, #57344	; 0xe000
   14108:	movt	r8, #32767	; 0x7fff
   1410c:	mov	r7, r0
   14110:	mov	r6, r1
   14114:	mov	r4, r2
   14118:	mov	r0, r7
   1411c:	mov	r1, r6
   14120:	mov	r2, r4
   14124:	bl	110d0 <read@plt>
   14128:	subs	r5, r0, #0
   1412c:	bge	14158 <close_stdout@@Base+0x1b4c>
   14130:	bl	112a4 <__errno_location@plt>
   14134:	ldr	r3, [r0]
   14138:	cmp	r3, #4
   1413c:	beq	14118 <close_stdout@@Base+0x1b0c>
   14140:	cmp	r3, #22
   14144:	bne	14158 <close_stdout@@Base+0x1b4c>
   14148:	cmp	r4, r8
   1414c:	mov	r4, #57344	; 0xe000
   14150:	movt	r4, #32767	; 0x7fff
   14154:	bhi	14118 <close_stdout@@Base+0x1b0c>
   14158:	mov	r0, r5
   1415c:	pop	{r4, r5, r6, r7, r8, pc}
   14160:	push	{r3, lr}
   14164:	bl	11208 <mkstemp64@plt>
   14168:	pop	{r3, lr}
   1416c:	b	14170 <close_stdout@@Base+0x1b64>
   14170:	cmp	r0, #2
   14174:	push	{r3, r4, r5, r6, r7, lr}
   14178:	mov	r4, r0
   1417c:	bhi	141a4 <close_stdout@@Base+0x1b98>
   14180:	bl	15000 <close_stdout@@Base+0x29f4>
   14184:	mov	r7, r0
   14188:	bl	112a4 <__errno_location@plt>
   1418c:	ldr	r6, [r0]
   14190:	mov	r5, r0
   14194:	mov	r0, r4
   14198:	mov	r4, r7
   1419c:	bl	1137c <close@plt>
   141a0:	str	r6, [r5]
   141a4:	mov	r0, r4
   141a8:	pop	{r3, r4, r5, r6, r7, pc}
   141ac:	push	{r4, r5, r6, r7, lr}
   141b0:	cmp	r1, #0
   141b4:	sub	sp, sp, #36	; 0x24
   141b8:	ldr	r7, [pc, #896]	; 14540 <close_stdout@@Base+0x1f34>
   141bc:	mov	ip, r3
   141c0:	mov	r5, r0
   141c4:	add	r7, pc, r7
   141c8:	ldr	r4, [sp, #56]	; 0x38
   141cc:	ldr	r6, [sp, #60]	; 0x3c
   141d0:	beq	14514 <close_stdout@@Base+0x1f08>
   141d4:	str	r2, [sp]
   141d8:	mov	r3, r1
   141dc:	ldr	r2, [pc, #864]	; 14544 <close_stdout@@Base+0x1f38>
   141e0:	mov	r1, #1
   141e4:	str	ip, [sp, #4]
   141e8:	add	r2, pc, r2
   141ec:	bl	112ec <__fprintf_chk@plt>
   141f0:	ldr	r1, [pc, #848]	; 14548 <close_stdout@@Base+0x1f3c>
   141f4:	mov	r2, #5
   141f8:	mov	r0, #0
   141fc:	add	r1, pc, r1
   14200:	bl	11148 <dcgettext@plt>
   14204:	ldr	r2, [pc, #832]	; 1454c <close_stdout@@Base+0x1f40>
   14208:	movw	ip, #2013	; 0x7dd
   1420c:	mov	r1, #1
   14210:	ldr	r2, [r7, r2]
   14214:	str	ip, [sp]
   14218:	mov	r3, r0
   1421c:	mov	r0, r5
   14220:	bl	112ec <__fprintf_chk@plt>
   14224:	ldr	r1, [pc, #804]	; 14550 <close_stdout@@Base+0x1f44>
   14228:	mov	r0, #0
   1422c:	mov	r2, #5
   14230:	add	r1, pc, r1
   14234:	bl	11148 <dcgettext@plt>
   14238:	mov	r1, r5
   1423c:	bl	110ac <fputs_unlocked@plt>
   14240:	cmp	r6, #9
   14244:	addls	pc, pc, r6, lsl #2
   14248:	b	14530 <close_stdout@@Base+0x1f24>
   1424c:	b	142e0 <close_stdout@@Base+0x1cd4>
   14250:	b	142e4 <close_stdout@@Base+0x1cd8>
   14254:	b	14314 <close_stdout@@Base+0x1d08>
   14258:	b	14348 <close_stdout@@Base+0x1d3c>
   1425c:	b	14384 <close_stdout@@Base+0x1d78>
   14260:	b	143c4 <close_stdout@@Base+0x1db8>
   14264:	b	1440c <close_stdout@@Base+0x1e00>
   14268:	b	1445c <close_stdout@@Base+0x1e50>
   1426c:	b	144b4 <close_stdout@@Base+0x1ea8>
   14270:	b	14274 <close_stdout@@Base+0x1c68>
   14274:	ldr	r1, [pc, #728]	; 14554 <close_stdout@@Base+0x1f48>
   14278:	mov	r0, #0
   1427c:	add	r1, pc, r1
   14280:	mov	r2, #5
   14284:	bl	11148 <dcgettext@plt>
   14288:	ldm	r4, {r3, ip}
   1428c:	mov	r1, #1
   14290:	str	ip, [sp]
   14294:	ldr	ip, [r4, #8]
   14298:	str	ip, [sp, #4]
   1429c:	ldr	ip, [r4, #12]
   142a0:	str	ip, [sp, #8]
   142a4:	ldr	ip, [r4, #16]
   142a8:	str	ip, [sp, #12]
   142ac:	ldr	ip, [r4, #20]
   142b0:	str	ip, [sp, #16]
   142b4:	ldr	ip, [r4, #24]
   142b8:	str	ip, [sp, #20]
   142bc:	ldr	ip, [r4, #28]
   142c0:	str	ip, [sp, #24]
   142c4:	ldr	ip, [r4, #32]
   142c8:	str	ip, [sp, #28]
   142cc:	mov	r2, r0
   142d0:	mov	r0, r5
   142d4:	bl	112ec <__fprintf_chk@plt>
   142d8:	add	sp, sp, #36	; 0x24
   142dc:	pop	{r4, r5, r6, r7, pc}
   142e0:	bl	11370 <abort@plt>
   142e4:	ldr	r1, [pc, #620]	; 14558 <close_stdout@@Base+0x1f4c>
   142e8:	mov	r2, #5
   142ec:	mov	r0, #0
   142f0:	add	r1, pc, r1
   142f4:	bl	11148 <dcgettext@plt>
   142f8:	ldr	r3, [r4]
   142fc:	mov	r1, #1
   14300:	mov	r2, r0
   14304:	mov	r0, r5
   14308:	add	sp, sp, #36	; 0x24
   1430c:	pop	{r4, r5, r6, r7, lr}
   14310:	b	112ec <__fprintf_chk@plt>
   14314:	ldr	r1, [pc, #576]	; 1455c <close_stdout@@Base+0x1f50>
   14318:	mov	r2, #5
   1431c:	mov	r0, #0
   14320:	add	r1, pc, r1
   14324:	bl	11148 <dcgettext@plt>
   14328:	ldm	r4, {r3, ip}
   1432c:	mov	r1, #1
   14330:	str	ip, [sp, #56]	; 0x38
   14334:	mov	r2, r0
   14338:	mov	r0, r5
   1433c:	add	sp, sp, #36	; 0x24
   14340:	pop	{r4, r5, r6, r7, lr}
   14344:	b	112ec <__fprintf_chk@plt>
   14348:	ldr	r1, [pc, #528]	; 14560 <close_stdout@@Base+0x1f54>
   1434c:	mov	r2, #5
   14350:	mov	r0, #0
   14354:	add	r1, pc, r1
   14358:	bl	11148 <dcgettext@plt>
   1435c:	ldm	r4, {r3, ip}
   14360:	mov	r1, #1
   14364:	str	ip, [sp, #56]	; 0x38
   14368:	ldr	ip, [r4, #8]
   1436c:	str	ip, [sp, #60]	; 0x3c
   14370:	mov	r2, r0
   14374:	mov	r0, r5
   14378:	add	sp, sp, #36	; 0x24
   1437c:	pop	{r4, r5, r6, r7, lr}
   14380:	b	112ec <__fprintf_chk@plt>
   14384:	ldr	r1, [pc, #472]	; 14564 <close_stdout@@Base+0x1f58>
   14388:	mov	r2, #5
   1438c:	mov	r0, #0
   14390:	add	r1, pc, r1
   14394:	bl	11148 <dcgettext@plt>
   14398:	ldm	r4, {r3, ip}
   1439c:	mov	r1, #1
   143a0:	str	ip, [sp]
   143a4:	ldr	ip, [r4, #8]
   143a8:	str	ip, [sp, #4]
   143ac:	ldr	ip, [r4, #12]
   143b0:	str	ip, [sp, #8]
   143b4:	mov	r2, r0
   143b8:	mov	r0, r5
   143bc:	bl	112ec <__fprintf_chk@plt>
   143c0:	b	142d8 <close_stdout@@Base+0x1ccc>
   143c4:	ldr	r1, [pc, #412]	; 14568 <close_stdout@@Base+0x1f5c>
   143c8:	mov	r2, #5
   143cc:	mov	r0, #0
   143d0:	add	r1, pc, r1
   143d4:	bl	11148 <dcgettext@plt>
   143d8:	ldm	r4, {r3, ip}
   143dc:	mov	r1, #1
   143e0:	str	ip, [sp]
   143e4:	ldr	ip, [r4, #8]
   143e8:	str	ip, [sp, #4]
   143ec:	ldr	ip, [r4, #12]
   143f0:	str	ip, [sp, #8]
   143f4:	ldr	ip, [r4, #16]
   143f8:	str	ip, [sp, #12]
   143fc:	mov	r2, r0
   14400:	mov	r0, r5
   14404:	bl	112ec <__fprintf_chk@plt>
   14408:	b	142d8 <close_stdout@@Base+0x1ccc>
   1440c:	ldr	r1, [pc, #344]	; 1456c <close_stdout@@Base+0x1f60>
   14410:	mov	r2, #5
   14414:	mov	r0, #0
   14418:	add	r1, pc, r1
   1441c:	bl	11148 <dcgettext@plt>
   14420:	ldm	r4, {r3, ip}
   14424:	mov	r1, #1
   14428:	str	ip, [sp]
   1442c:	ldr	ip, [r4, #8]
   14430:	str	ip, [sp, #4]
   14434:	ldr	ip, [r4, #12]
   14438:	str	ip, [sp, #8]
   1443c:	ldr	ip, [r4, #16]
   14440:	str	ip, [sp, #12]
   14444:	ldr	ip, [r4, #20]
   14448:	str	ip, [sp, #16]
   1444c:	mov	r2, r0
   14450:	mov	r0, r5
   14454:	bl	112ec <__fprintf_chk@plt>
   14458:	b	142d8 <close_stdout@@Base+0x1ccc>
   1445c:	ldr	r1, [pc, #268]	; 14570 <close_stdout@@Base+0x1f64>
   14460:	mov	r2, #5
   14464:	mov	r0, #0
   14468:	add	r1, pc, r1
   1446c:	bl	11148 <dcgettext@plt>
   14470:	ldm	r4, {r3, ip}
   14474:	mov	r1, #1
   14478:	str	ip, [sp]
   1447c:	ldr	ip, [r4, #8]
   14480:	str	ip, [sp, #4]
   14484:	ldr	ip, [r4, #12]
   14488:	str	ip, [sp, #8]
   1448c:	ldr	ip, [r4, #16]
   14490:	str	ip, [sp, #12]
   14494:	ldr	ip, [r4, #20]
   14498:	str	ip, [sp, #16]
   1449c:	ldr	ip, [r4, #24]
   144a0:	str	ip, [sp, #20]
   144a4:	mov	r2, r0
   144a8:	mov	r0, r5
   144ac:	bl	112ec <__fprintf_chk@plt>
   144b0:	b	142d8 <close_stdout@@Base+0x1ccc>
   144b4:	ldr	r1, [pc, #184]	; 14574 <close_stdout@@Base+0x1f68>
   144b8:	mov	r2, #5
   144bc:	mov	r0, #0
   144c0:	add	r1, pc, r1
   144c4:	bl	11148 <dcgettext@plt>
   144c8:	ldm	r4, {r3, ip}
   144cc:	mov	r1, #1
   144d0:	str	ip, [sp]
   144d4:	ldr	ip, [r4, #8]
   144d8:	str	ip, [sp, #4]
   144dc:	ldr	ip, [r4, #12]
   144e0:	str	ip, [sp, #8]
   144e4:	ldr	ip, [r4, #16]
   144e8:	str	ip, [sp, #12]
   144ec:	ldr	ip, [r4, #20]
   144f0:	str	ip, [sp, #16]
   144f4:	ldr	ip, [r4, #24]
   144f8:	str	ip, [sp, #20]
   144fc:	ldr	ip, [r4, #28]
   14500:	str	ip, [sp, #24]
   14504:	mov	r2, r0
   14508:	mov	r0, r5
   1450c:	bl	112ec <__fprintf_chk@plt>
   14510:	b	142d8 <close_stdout@@Base+0x1ccc>
   14514:	str	r3, [sp]
   14518:	mov	r3, r2
   1451c:	ldr	r2, [pc, #84]	; 14578 <close_stdout@@Base+0x1f6c>
   14520:	mov	r1, #1
   14524:	add	r2, pc, r2
   14528:	bl	112ec <__fprintf_chk@plt>
   1452c:	b	141f0 <close_stdout@@Base+0x1be4>
   14530:	ldr	r1, [pc, #68]	; 1457c <close_stdout@@Base+0x1f70>
   14534:	mov	r0, #0
   14538:	add	r1, pc, r1
   1453c:	b	14280 <close_stdout@@Base+0x1c74>
   14540:	andeq	r2, r1, r4, lsr lr
   14544:	andeq	r2, r0, r4, ror r1
   14548:	andeq	r2, r0, r4, ror r1
   1454c:	andeq	r0, r0, r8, lsr r1
   14550:	andeq	r2, r0, r4, asr #2
   14554:	ldrdeq	r2, [r0], -r0
   14558:	andeq	r2, r0, r0, asr r1
   1455c:	andeq	r2, r0, r0, lsr r1
   14560:	andeq	r2, r0, r4, lsl r1
   14564:	strdeq	r2, [r0], -r4
   14568:	ldrdeq	r2, [r0], -r4
   1456c:	strheq	r2, [r0], -r0
   14570:	andeq	r2, r0, r8, lsl #1
   14574:	andeq	r2, r0, ip, asr r0
   14578:	andeq	r1, r0, r4, asr #28
   1457c:	andeq	r2, r0, r8, asr #32
   14580:	push	{r4, r5, lr}
   14584:	sub	sp, sp, #12
   14588:	ldr	r5, [sp, #24]
   1458c:	ldr	ip, [r5]
   14590:	cmp	ip, #0
   14594:	beq	145b0 <close_stdout@@Base+0x1fa4>
   14598:	mov	lr, r5
   1459c:	mov	ip, #0
   145a0:	ldr	r4, [lr, #4]!
   145a4:	add	ip, ip, #1
   145a8:	cmp	r4, #0
   145ac:	bne	145a0 <close_stdout@@Base+0x1f94>
   145b0:	stm	sp, {r5, ip}
   145b4:	bl	141ac <close_stdout@@Base+0x1ba0>
   145b8:	add	sp, sp, #12
   145bc:	pop	{r4, r5, pc}
   145c0:	push	{r4, r5, r6, r7, lr}
   145c4:	sub	sp, sp, #60	; 0x3c
   145c8:	ldr	r4, [pc, #100]	; 14634 <close_stdout@@Base+0x2028>
   145cc:	mov	ip, #0
   145d0:	ldr	r5, [pc, #96]	; 14638 <close_stdout@@Base+0x202c>
   145d4:	mov	lr, ip
   145d8:	add	r4, pc, r4
   145dc:	ldr	r6, [sp, #80]	; 0x50
   145e0:	ldr	r7, [r4, r5]
   145e4:	add	r5, sp, #12
   145e8:	ldr	r4, [r7]
   145ec:	str	r4, [sp, #52]	; 0x34
   145f0:	ldr	r4, [r6, ip]
   145f4:	cmp	r4, #0
   145f8:	str	r4, [r5, ip]
   145fc:	beq	14610 <close_stdout@@Base+0x2004>
   14600:	add	lr, lr, #1
   14604:	add	ip, ip, #4
   14608:	cmp	lr, #10
   1460c:	bne	145f0 <close_stdout@@Base+0x1fe4>
   14610:	stm	sp, {r5, lr}
   14614:	bl	141ac <close_stdout@@Base+0x1ba0>
   14618:	ldr	r2, [sp, #52]	; 0x34
   1461c:	ldr	r3, [r7]
   14620:	cmp	r2, r3
   14624:	bne	14630 <close_stdout@@Base+0x2024>
   14628:	add	sp, sp, #60	; 0x3c
   1462c:	pop	{r4, r5, r6, r7, pc}
   14630:	bl	11154 <__stack_chk_fail@plt>
   14634:	andeq	r2, r1, r0, lsr #20
   14638:	andeq	r0, r0, ip, lsl #2
   1463c:	push	{r3}		; (str r3, [sp, #-4]!)
   14640:	push	{r4, lr}
   14644:	sub	sp, sp, #20
   14648:	ldr	lr, [pc, #72]	; 14698 <close_stdout@@Base+0x208c>
   1464c:	add	ip, sp, #32
   14650:	ldr	r4, [pc, #68]	; 1469c <close_stdout@@Base+0x2090>
   14654:	add	lr, pc, lr
   14658:	ldr	r3, [sp, #28]
   1465c:	ldr	r4, [lr, r4]
   14660:	str	ip, [sp]
   14664:	str	ip, [sp, #8]
   14668:	ldr	ip, [r4]
   1466c:	str	ip, [sp, #12]
   14670:	bl	145c0 <close_stdout@@Base+0x1fb4>
   14674:	ldr	r2, [sp, #12]
   14678:	ldr	r3, [r4]
   1467c:	cmp	r2, r3
   14680:	bne	14694 <close_stdout@@Base+0x2088>
   14684:	add	sp, sp, #20
   14688:	pop	{r4, lr}
   1468c:	add	sp, sp, #4
   14690:	bx	lr
   14694:	bl	11154 <__stack_chk_fail@plt>
   14698:	andeq	r2, r1, r4, lsr #19
   1469c:	andeq	r0, r0, ip, lsl #2
   146a0:	ldr	r1, [pc, #132]	; 1472c <close_stdout@@Base+0x2120>
   146a4:	mov	r2, #5
   146a8:	push	{r4, lr}
   146ac:	add	r1, pc, r1
   146b0:	mov	r0, #0
   146b4:	ldr	r4, [pc, #116]	; 14730 <close_stdout@@Base+0x2124>
   146b8:	bl	11148 <dcgettext@plt>
   146bc:	ldr	r2, [pc, #112]	; 14734 <close_stdout@@Base+0x2128>
   146c0:	add	r4, pc, r4
   146c4:	add	r2, pc, r2
   146c8:	mov	r1, r0
   146cc:	mov	r0, #1
   146d0:	bl	112d4 <__printf_chk@plt>
   146d4:	ldr	r1, [pc, #92]	; 14738 <close_stdout@@Base+0x212c>
   146d8:	mov	r2, #5
   146dc:	mov	r0, #0
   146e0:	add	r1, pc, r1
   146e4:	bl	11148 <dcgettext@plt>
   146e8:	ldr	r2, [pc, #76]	; 1473c <close_stdout@@Base+0x2130>
   146ec:	ldr	r3, [pc, #76]	; 14740 <close_stdout@@Base+0x2134>
   146f0:	add	r2, pc, r2
   146f4:	add	r3, pc, r3
   146f8:	mov	r1, r0
   146fc:	mov	r0, #1
   14700:	bl	112d4 <__printf_chk@plt>
   14704:	ldr	r1, [pc, #56]	; 14744 <close_stdout@@Base+0x2138>
   14708:	mov	r0, #0
   1470c:	mov	r2, #5
   14710:	add	r1, pc, r1
   14714:	bl	11148 <dcgettext@plt>
   14718:	ldr	r3, [pc, #40]	; 14748 <close_stdout@@Base+0x213c>
   1471c:	ldr	r3, [r4, r3]
   14720:	pop	{r4, lr}
   14724:	ldr	r1, [r3]
   14728:	b	110ac <fputs_unlocked@plt>
   1472c:	andeq	r1, r0, r0, lsl pc
   14730:	andeq	r2, r1, r8, lsr r9
   14734:	andeq	r1, r0, r0, lsl pc
   14738:	andeq	r1, r0, ip, lsl #30
   1473c:	andeq	r1, r0, r0, lsl #19
   14740:	andeq	r1, r0, ip, lsl #19
   14744:	strdeq	r1, [r0], -r0
   14748:	andeq	r0, r0, r8, lsr #2
   1474c:	push	{r4, lr}
   14750:	mov	r4, r0
   14754:	bl	11214 <malloc@plt>
   14758:	rsbs	r3, r0, #1
   1475c:	movcc	r3, #0
   14760:	cmp	r4, #0
   14764:	moveq	r3, #0
   14768:	cmp	r3, #0
   1476c:	popeq	{r4, pc}
   14770:	bl	14960 <close_stdout@@Base+0x2354>
   14774:	push	{r3, r4, r5, lr}
   14778:	mov	r4, r0
   1477c:	mvn	r0, #0
   14780:	mov	r5, r1
   14784:	bl	15180 <close_stdout@@Base+0x2b74>
   14788:	cmp	r0, r4
   1478c:	bcc	1479c <close_stdout@@Base+0x2190>
   14790:	mul	r0, r4, r5
   14794:	pop	{r3, r4, r5, lr}
   14798:	b	1474c <close_stdout@@Base+0x2140>
   1479c:	bl	14960 <close_stdout@@Base+0x2354>
   147a0:	b	1474c <close_stdout@@Base+0x2140>
   147a4:	rsbs	r3, r1, #1
   147a8:	push	{r4, lr}
   147ac:	movcc	r3, #0
   147b0:	cmp	r0, #0
   147b4:	mov	r4, r1
   147b8:	moveq	r3, #0
   147bc:	cmp	r3, #0
   147c0:	bne	147e4 <close_stdout@@Base+0x21d8>
   147c4:	bl	1116c <realloc@plt>
   147c8:	rsbs	r3, r0, #1
   147cc:	movcc	r3, #0
   147d0:	cmp	r4, #0
   147d4:	moveq	r3, #0
   147d8:	cmp	r3, #0
   147dc:	popeq	{r4, pc}
   147e0:	bl	14960 <close_stdout@@Base+0x2354>
   147e4:	bl	110f4 <free@plt>
   147e8:	mov	r0, #0
   147ec:	pop	{r4, pc}
   147f0:	push	{r4, r5, r6, lr}
   147f4:	mov	r5, r1
   147f8:	mov	r6, r0
   147fc:	mov	r1, r2
   14800:	mvn	r0, #0
   14804:	mov	r4, r2
   14808:	bl	15180 <close_stdout@@Base+0x2b74>
   1480c:	cmp	r0, r5
   14810:	bcc	14824 <close_stdout@@Base+0x2218>
   14814:	mov	r0, r6
   14818:	mul	r1, r5, r4
   1481c:	pop	{r4, r5, r6, lr}
   14820:	b	147a4 <close_stdout@@Base+0x2198>
   14824:	bl	14960 <close_stdout@@Base+0x2354>
   14828:	push	{r3, r4, r5, r6, r7, lr}
   1482c:	subs	r7, r0, #0
   14830:	mov	r5, r1
   14834:	mov	r6, r2
   14838:	ldr	r4, [r1]
   1483c:	beq	14874 <close_stdout@@Base+0x2268>
   14840:	movw	r0, #43690	; 0xaaaa
   14844:	mov	r1, r2
   14848:	bfi	r0, r0, #16, #16
   1484c:	bl	15180 <close_stdout@@Base+0x2b74>
   14850:	cmp	r4, r0
   14854:	addcc	r3, r4, #1
   14858:	addcc	r4, r4, r3, lsr #1
   1485c:	bcs	14898 <close_stdout@@Base+0x228c>
   14860:	str	r4, [r5]
   14864:	mov	r0, r7
   14868:	mul	r1, r6, r4
   1486c:	pop	{r3, r4, r5, r6, r7, lr}
   14870:	b	147a4 <close_stdout@@Base+0x2198>
   14874:	cmp	r4, #0
   14878:	bne	14860 <close_stdout@@Base+0x2254>
   1487c:	mov	r0, #64	; 0x40
   14880:	mov	r1, r2
   14884:	bl	15180 <close_stdout@@Base+0x2b74>
   14888:	cmp	r0, #0
   1488c:	movne	r4, r0
   14890:	addeq	r4, r0, #1
   14894:	b	14860 <close_stdout@@Base+0x2254>
   14898:	bl	14960 <close_stdout@@Base+0x2354>
   1489c:	cmp	r0, #0
   148a0:	push	{r3, lr}
   148a4:	ldr	r3, [r1]
   148a8:	beq	148d4 <close_stdout@@Base+0x22c8>
   148ac:	movw	r2, #43689	; 0xaaa9
   148b0:	movt	r2, #43690	; 0xaaaa
   148b4:	cmp	r3, r2
   148b8:	addls	r2, r3, #1
   148bc:	addls	r3, r3, r2, lsr #1
   148c0:	bhi	148ec <close_stdout@@Base+0x22e0>
   148c4:	str	r3, [r1]
   148c8:	mov	r1, r3
   148cc:	pop	{r3, lr}
   148d0:	b	147a4 <close_stdout@@Base+0x2198>
   148d4:	cmp	r3, #0
   148d8:	moveq	r3, #64	; 0x40
   148dc:	str	r3, [r1]
   148e0:	mov	r1, r3
   148e4:	pop	{r3, lr}
   148e8:	b	147a4 <close_stdout@@Base+0x2198>
   148ec:	bl	14960 <close_stdout@@Base+0x2354>
   148f0:	push	{r4, lr}
   148f4:	mov	r4, r0
   148f8:	bl	1474c <close_stdout@@Base+0x2140>
   148fc:	mov	r2, r4
   14900:	mov	r1, #0
   14904:	pop	{r4, lr}
   14908:	b	112bc <memset@plt>
   1490c:	push	{r3, lr}
   14910:	bl	110a0 <calloc@plt>
   14914:	cmp	r0, #0
   14918:	popne	{r3, pc}
   1491c:	bl	14960 <close_stdout@@Base+0x2354>
   14920:	push	{r3, r4, r5, lr}
   14924:	mov	r4, r1
   14928:	mov	r5, r0
   1492c:	mov	r0, r1
   14930:	bl	1474c <close_stdout@@Base+0x2140>
   14934:	mov	r1, r5
   14938:	mov	r2, r4
   1493c:	pop	{r3, r4, r5, lr}
   14940:	b	1110c <memcpy@plt>
   14944:	push	{r4, lr}
   14948:	mov	r4, r0
   1494c:	bl	11274 <strlen@plt>
   14950:	add	r1, r0, #1
   14954:	mov	r0, r4
   14958:	pop	{r4, lr}
   1495c:	b	14920 <close_stdout@@Base+0x2314>
   14960:	ldr	r3, [pc, #64]	; 149a8 <close_stdout@@Base+0x239c>
   14964:	mov	r2, #5
   14968:	ldr	ip, [pc, #60]	; 149ac <close_stdout@@Base+0x23a0>
   1496c:	mov	r0, #0
   14970:	add	r3, pc, r3
   14974:	ldr	r1, [pc, #52]	; 149b0 <close_stdout@@Base+0x23a4>
   14978:	push	{r4, lr}
   1497c:	add	r1, pc, r1
   14980:	ldr	r3, [r3, ip]
   14984:	ldr	r4, [r3]
   14988:	bl	11148 <dcgettext@plt>
   1498c:	ldr	r2, [pc, #32]	; 149b4 <close_stdout@@Base+0x23a8>
   14990:	mov	r1, #0
   14994:	add	r2, pc, r2
   14998:	mov	r3, r0
   1499c:	mov	r0, r4
   149a0:	bl	111e4 <error@plt>
   149a4:	bl	11370 <abort@plt>
   149a8:	andeq	r2, r1, r8, lsl #13
   149ac:	andeq	r0, r0, ip, lsr #2
   149b0:	strdeq	r1, [r0], -r4
   149b4:	andeq	r1, r0, r0, lsl #18
   149b8:	push	{r4, r5, r6, lr}
   149bc:	sub	sp, sp, #8
   149c0:	mov	r4, r0
   149c4:	bl	112e0 <fileno@plt>
   149c8:	cmp	r0, #0
   149cc:	mov	r0, r4
   149d0:	blt	14a4c <close_stdout@@Base+0x2440>
   149d4:	bl	1122c <__freading@plt>
   149d8:	cmp	r0, #0
   149dc:	bne	14a18 <close_stdout@@Base+0x240c>
   149e0:	mov	r0, r4
   149e4:	bl	14a58 <close_stdout@@Base+0x244c>
   149e8:	cmp	r0, #0
   149ec:	beq	14a48 <close_stdout@@Base+0x243c>
   149f0:	bl	112a4 <__errno_location@plt>
   149f4:	ldr	r6, [r0]
   149f8:	mov	r5, r0
   149fc:	mov	r0, r4
   14a00:	bl	112f8 <fclose@plt>
   14a04:	cmp	r6, #0
   14a08:	mvnne	r0, #0
   14a0c:	strne	r6, [r5]
   14a10:	add	sp, sp, #8
   14a14:	pop	{r4, r5, r6, pc}
   14a18:	mov	r0, r4
   14a1c:	bl	112e0 <fileno@plt>
   14a20:	mov	r1, #1
   14a24:	mov	r2, #0
   14a28:	mov	r3, #0
   14a2c:	str	r1, [sp]
   14a30:	bl	111a8 <lseek64@plt>
   14a34:	mvn	r2, #0
   14a38:	mvn	r3, #0
   14a3c:	cmp	r1, r3
   14a40:	cmpeq	r0, r2
   14a44:	bne	149e0 <close_stdout@@Base+0x23d4>
   14a48:	mov	r0, r4
   14a4c:	add	sp, sp, #8
   14a50:	pop	{r4, r5, r6, lr}
   14a54:	b	112f8 <fclose@plt>
   14a58:	push	{r4, lr}
   14a5c:	subs	r4, r0, #0
   14a60:	sub	sp, sp, #8
   14a64:	beq	14a74 <close_stdout@@Base+0x2468>
   14a68:	bl	1122c <__freading@plt>
   14a6c:	cmp	r0, #0
   14a70:	bne	14a84 <close_stdout@@Base+0x2478>
   14a74:	mov	r0, r4
   14a78:	add	sp, sp, #8
   14a7c:	pop	{r4, lr}
   14a80:	b	110dc <fflush@plt>
   14a84:	ldr	r3, [r4]
   14a88:	tst	r3, #256	; 0x100
   14a8c:	beq	14a74 <close_stdout@@Base+0x2468>
   14a90:	mov	r3, #1
   14a94:	mov	r0, r4
   14a98:	str	r3, [sp]
   14a9c:	mov	r2, #0
   14aa0:	mov	r3, #0
   14aa4:	bl	14ab8 <close_stdout@@Base+0x24ac>
   14aa8:	mov	r0, r4
   14aac:	add	sp, sp, #8
   14ab0:	pop	{r4, lr}
   14ab4:	b	110dc <fflush@plt>
   14ab8:	push	{r4, r5, r6, r7, lr}
   14abc:	sub	sp, sp, #20
   14ac0:	ldmib	r0, {r1, ip}
   14ac4:	mov	r6, r0
   14ac8:	ldr	r4, [sp, #40]	; 0x28
   14acc:	cmp	ip, r1
   14ad0:	beq	14ae8 <close_stdout@@Base+0x24dc>
   14ad4:	str	r4, [sp, #40]	; 0x28
   14ad8:	mov	r0, r6
   14adc:	add	sp, sp, #20
   14ae0:	pop	{r4, r5, r6, r7, lr}
   14ae4:	b	11304 <fseeko64@plt>
   14ae8:	ldr	ip, [r0, #20]
   14aec:	ldr	r1, [r0, #16]
   14af0:	cmp	ip, r1
   14af4:	bne	14ad4 <close_stdout@@Base+0x24c8>
   14af8:	ldr	r7, [r0, #36]	; 0x24
   14afc:	cmp	r7, #0
   14b00:	bne	14ad4 <close_stdout@@Base+0x24c8>
   14b04:	str	r2, [sp, #12]
   14b08:	mvn	r5, #0
   14b0c:	str	r3, [sp, #8]
   14b10:	bl	112e0 <fileno@plt>
   14b14:	str	r4, [sp]
   14b18:	mvn	r4, #0
   14b1c:	ldr	r2, [sp, #12]
   14b20:	ldr	r3, [sp, #8]
   14b24:	bl	111a8 <lseek64@plt>
   14b28:	mov	r2, r0
   14b2c:	mov	r3, r1
   14b30:	cmp	r3, r5
   14b34:	cmpeq	r2, r4
   14b38:	beq	14b58 <close_stdout@@Base+0x254c>
   14b3c:	ldr	r1, [r6]
   14b40:	mov	r0, r7
   14b44:	strd	r2, [r6, #80]	; 0x50
   14b48:	bic	r3, r1, #16
   14b4c:	str	r3, [r6]
   14b50:	add	sp, sp, #20
   14b54:	pop	{r4, r5, r6, r7, pc}
   14b58:	mvn	r0, #0
   14b5c:	b	14b50 <close_stdout@@Base+0x2544>
   14b60:	push	{r4, r5, r6, lr}
   14b64:	mov	r4, r0
   14b68:	bl	111cc <__fpending@plt>
   14b6c:	mov	r6, r0
   14b70:	mov	r0, r4
   14b74:	ldr	r4, [r4]
   14b78:	bl	149b8 <close_stdout@@Base+0x23ac>
   14b7c:	and	r4, r4, #32
   14b80:	adds	r5, r0, #0
   14b84:	movne	r5, #1
   14b88:	cmp	r4, #0
   14b8c:	bne	14bac <close_stdout@@Base+0x25a0>
   14b90:	cmp	r5, #0
   14b94:	beq	14ba4 <close_stdout@@Base+0x2598>
   14b98:	cmp	r6, #0
   14b9c:	beq	14bc8 <close_stdout@@Base+0x25bc>
   14ba0:	mvn	r4, #0
   14ba4:	mov	r0, r4
   14ba8:	pop	{r4, r5, r6, pc}
   14bac:	cmp	r5, #0
   14bb0:	bne	14ba0 <close_stdout@@Base+0x2594>
   14bb4:	bl	112a4 <__errno_location@plt>
   14bb8:	mvn	r4, #0
   14bbc:	str	r5, [r0]
   14bc0:	mov	r0, r4
   14bc4:	pop	{r4, r5, r6, pc}
   14bc8:	bl	112a4 <__errno_location@plt>
   14bcc:	ldr	r4, [r0]
   14bd0:	subs	r4, r4, #9
   14bd4:	mvnne	r4, #0
   14bd8:	mov	r0, r4
   14bdc:	pop	{r4, r5, r6, pc}
   14be0:	ldr	r3, [pc, #984]	; 14fc0 <close_stdout@@Base+0x29b4>
   14be4:	mov	r0, #14
   14be8:	ldr	r2, [pc, #980]	; 14fc4 <close_stdout@@Base+0x29b8>
   14bec:	add	r3, pc, r3
   14bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bf4:	sub	sp, sp, #132	; 0x84
   14bf8:	ldr	r6, [r3, r2]
   14bfc:	ldr	r3, [r6]
   14c00:	str	r3, [sp, #124]	; 0x7c
   14c04:	bl	11334 <nl_langinfo@plt>
   14c08:	subs	r5, r0, #0
   14c0c:	beq	14cc0 <close_stdout@@Base+0x26b4>
   14c10:	ldr	r3, [pc, #944]	; 14fc8 <close_stdout@@Base+0x29bc>
   14c14:	ldr	r4, [pc, r3]
   14c18:	cmp	r4, #0
   14c1c:	beq	14ccc <close_stdout@@Base+0x26c0>
   14c20:	ldrb	r7, [r4]
   14c24:	cmp	r7, #0
   14c28:	bne	14c5c <close_stdout@@Base+0x2650>
   14c2c:	b	14c94 <close_stdout@@Base+0x2688>
   14c30:	mov	r0, r4
   14c34:	bl	11274 <strlen@plt>
   14c38:	add	r0, r0, #1
   14c3c:	add	r7, r4, r0
   14c40:	mov	r0, r7
   14c44:	bl	11274 <strlen@plt>
   14c48:	add	r0, r0, #1
   14c4c:	add	r4, r7, r0
   14c50:	ldrb	r7, [r7, r0]
   14c54:	cmp	r7, #0
   14c58:	beq	14c94 <close_stdout@@Base+0x2688>
   14c5c:	mov	r0, r5
   14c60:	mov	r1, r4
   14c64:	bl	110c4 <strcmp@plt>
   14c68:	cmp	r0, #0
   14c6c:	beq	14c84 <close_stdout@@Base+0x2678>
   14c70:	cmp	r7, #42	; 0x2a
   14c74:	bne	14c30 <close_stdout@@Base+0x2624>
   14c78:	ldrb	r3, [r4, #1]
   14c7c:	cmp	r3, #0
   14c80:	bne	14c30 <close_stdout@@Base+0x2624>
   14c84:	mov	r0, r4
   14c88:	bl	11274 <strlen@plt>
   14c8c:	add	r0, r0, #1
   14c90:	add	r5, r4, r0
   14c94:	ldrb	r3, [r5]
   14c98:	cmp	r3, #0
   14c9c:	ldreq	r5, [pc, #808]	; 14fcc <close_stdout@@Base+0x29c0>
   14ca0:	addeq	r5, pc, r5
   14ca4:	ldr	r2, [sp, #124]	; 0x7c
   14ca8:	mov	r0, r5
   14cac:	ldr	r3, [r6]
   14cb0:	cmp	r2, r3
   14cb4:	bne	14f94 <close_stdout@@Base+0x2988>
   14cb8:	add	sp, sp, #132	; 0x84
   14cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cc0:	ldr	r5, [pc, #776]	; 14fd0 <close_stdout@@Base+0x29c4>
   14cc4:	add	r5, pc, r5
   14cc8:	b	14c10 <close_stdout@@Base+0x2604>
   14ccc:	ldr	r0, [pc, #768]	; 14fd4 <close_stdout@@Base+0x29c8>
   14cd0:	add	r0, pc, r0
   14cd4:	bl	111fc <getenv@plt>
   14cd8:	subs	r8, r0, #0
   14cdc:	beq	14f6c <close_stdout@@Base+0x2960>
   14ce0:	ldrb	r3, [r8]
   14ce4:	cmp	r3, #0
   14ce8:	beq	14f00 <close_stdout@@Base+0x28f4>
   14cec:	bl	11274 <strlen@plt>
   14cf0:	subs	sl, r0, #0
   14cf4:	subne	r3, sl, #1
   14cf8:	bne	14f10 <close_stdout@@Base+0x2904>
   14cfc:	mov	r9, #0
   14d00:	mov	fp, r9
   14d04:	add	r9, sl, r9
   14d08:	add	r0, r9, #14
   14d0c:	bl	11214 <malloc@plt>
   14d10:	subs	r7, r0, #0
   14d14:	beq	14f60 <close_stdout@@Base+0x2954>
   14d18:	mov	r1, r8
   14d1c:	mov	r2, sl
   14d20:	bl	1110c <memcpy@plt>
   14d24:	cmp	fp, #0
   14d28:	add	ip, r7, r9
   14d2c:	movne	r3, #47	; 0x2f
   14d30:	strbne	r3, [r7, sl]
   14d34:	ldr	r3, [pc, #668]	; 14fd8 <close_stdout@@Base+0x29cc>
   14d38:	add	r3, pc, r3
   14d3c:	ldm	r3!, {r0, r1, r2}
   14d40:	ldrh	r3, [r3]
   14d44:	str	r0, [r7, r9]
   14d48:	mov	r0, r7
   14d4c:	str	r1, [ip, #4]
   14d50:	mov	r1, #32768	; 0x8000
   14d54:	strh	r3, [ip, #12]
   14d58:	str	r2, [ip, #8]
   14d5c:	bl	111f0 <open64@plt>
   14d60:	subs	r8, r0, #0
   14d64:	blt	14f28 <close_stdout@@Base+0x291c>
   14d68:	ldr	r1, [pc, #620]	; 14fdc <close_stdout@@Base+0x29d0>
   14d6c:	add	r1, pc, r1
   14d70:	bl	11094 <fdopen@plt>
   14d74:	subs	fp, r0, #0
   14d78:	beq	14f80 <close_stdout@@Base+0x2974>
   14d7c:	ldr	r0, [pc, #604]	; 14fe0 <close_stdout@@Base+0x29d4>
   14d80:	add	sl, sp, #20
   14d84:	add	r9, sp, #72	; 0x48
   14d88:	mov	r8, #0
   14d8c:	add	r0, pc, r0
   14d90:	str	r0, [sp, #12]
   14d94:	ldr	r3, [fp, #4]
   14d98:	ldr	r2, [fp, #8]
   14d9c:	cmp	r3, r2
   14da0:	bcs	14e8c <close_stdout@@Base+0x2880>
   14da4:	add	r2, r3, #1
   14da8:	str	r2, [fp, #4]
   14dac:	ldrb	r0, [r3]
   14db0:	cmp	r0, #32
   14db4:	beq	14d94 <close_stdout@@Base+0x2788>
   14db8:	sub	r3, r0, #9
   14dbc:	cmp	r3, #1
   14dc0:	bls	14d94 <close_stdout@@Base+0x2788>
   14dc4:	cmp	r0, #35	; 0x23
   14dc8:	beq	14ea0 <close_stdout@@Base+0x2894>
   14dcc:	mov	r1, fp
   14dd0:	bl	1128c <ungetc@plt>
   14dd4:	mov	r0, fp
   14dd8:	ldr	r1, [sp, #12]
   14ddc:	mov	r2, sl
   14de0:	mov	r3, r9
   14de4:	bl	112c8 <fscanf@plt>
   14de8:	cmp	r0, #1
   14dec:	ble	14ed0 <close_stdout@@Base+0x28c4>
   14df0:	mov	r0, sl
   14df4:	bl	11274 <strlen@plt>
   14df8:	str	r0, [sp, #8]
   14dfc:	mov	r0, r9
   14e00:	bl	11274 <strlen@plt>
   14e04:	cmp	r8, #0
   14e08:	mov	r2, r0
   14e0c:	bne	14f34 <close_stdout@@Base+0x2928>
   14e10:	ldr	r3, [sp, #8]
   14e14:	str	r2, [sp]
   14e18:	add	r8, r0, r3
   14e1c:	add	r0, r8, #3
   14e20:	add	r8, r8, #2
   14e24:	bl	11214 <malloc@plt>
   14e28:	ldr	r2, [sp]
   14e2c:	mov	r3, r0
   14e30:	cmp	r3, #0
   14e34:	beq	14f98 <close_stdout@@Base+0x298c>
   14e38:	ldr	r0, [sp, #8]
   14e3c:	movw	r1, #65534	; 0xfffe
   14e40:	movt	r1, #65535	; 0xffff
   14e44:	rsb	r2, r2, r8
   14e48:	rsb	r1, r0, r1
   14e4c:	stm	sp, {r2, r3}
   14e50:	add	r0, r1, r2
   14e54:	mov	r1, sl
   14e58:	add	r0, r3, r0
   14e5c:	mov	r4, r3
   14e60:	bl	111c0 <strcpy@plt>
   14e64:	ldr	r2, [sp]
   14e68:	ldr	r3, [sp, #4]
   14e6c:	mov	r1, r9
   14e70:	sub	r0, r2, #1
   14e74:	add	r0, r3, r0
   14e78:	bl	111c0 <strcpy@plt>
   14e7c:	ldr	r3, [fp, #4]
   14e80:	ldr	r2, [fp, #8]
   14e84:	cmp	r3, r2
   14e88:	bcc	14da4 <close_stdout@@Base+0x2798>
   14e8c:	mov	r0, fp
   14e90:	bl	11310 <__uflow@plt>
   14e94:	cmn	r0, #1
   14e98:	beq	14ed0 <close_stdout@@Base+0x28c4>
   14e9c:	b	14db0 <close_stdout@@Base+0x27a4>
   14ea0:	ldr	r3, [fp, #4]
   14ea4:	ldr	r2, [fp, #8]
   14ea8:	cmp	r3, r2
   14eac:	bcs	14fb4 <close_stdout@@Base+0x29a8>
   14eb0:	add	r2, r3, #1
   14eb4:	str	r2, [fp, #4]
   14eb8:	ldrb	r0, [r3]
   14ebc:	cmp	r0, #10
   14ec0:	cmnne	r0, #1
   14ec4:	bne	14ea0 <close_stdout@@Base+0x2894>
   14ec8:	cmn	r0, #1
   14ecc:	bne	14d94 <close_stdout@@Base+0x2788>
   14ed0:	mov	r0, fp
   14ed4:	bl	149b8 <close_stdout@@Base+0x23ac>
   14ed8:	cmp	r8, #0
   14edc:	beq	14f28 <close_stdout@@Base+0x291c>
   14ee0:	mov	r3, #0
   14ee4:	strb	r3, [r4, r8]
   14ee8:	mov	r0, r7
   14eec:	bl	110f4 <free@plt>
   14ef0:	ldr	r3, [pc, #236]	; 14fe4 <close_stdout@@Base+0x29d8>
   14ef4:	add	r3, pc, r3
   14ef8:	str	r4, [r3]
   14efc:	b	14c20 <close_stdout@@Base+0x2614>
   14f00:	ldr	r8, [pc, #224]	; 14fe8 <close_stdout@@Base+0x29dc>
   14f04:	mov	r3, #7
   14f08:	mov	sl, #8
   14f0c:	add	r8, pc, r8
   14f10:	ldrb	r3, [r8, r3]
   14f14:	cmp	r3, #47	; 0x2f
   14f18:	movne	r9, #1
   14f1c:	movne	fp, r9
   14f20:	bne	14d04 <close_stdout@@Base+0x26f8>
   14f24:	b	14cfc <close_stdout@@Base+0x26f0>
   14f28:	ldr	r4, [pc, #188]	; 14fec <close_stdout@@Base+0x29e0>
   14f2c:	add	r4, pc, r4
   14f30:	b	14ee8 <close_stdout@@Base+0x28dc>
   14f34:	ldr	r0, [sp, #8]
   14f38:	str	r2, [sp]
   14f3c:	add	r3, r0, r2
   14f40:	mov	r0, r4
   14f44:	add	r8, r3, r8
   14f48:	add	r1, r8, #3
   14f4c:	add	r8, r8, #2
   14f50:	bl	1116c <realloc@plt>
   14f54:	ldr	r2, [sp]
   14f58:	mov	r3, r0
   14f5c:	b	14e30 <close_stdout@@Base+0x2824>
   14f60:	ldr	r4, [pc, #136]	; 14ff0 <close_stdout@@Base+0x29e4>
   14f64:	add	r4, pc, r4
   14f68:	b	14ef0 <close_stdout@@Base+0x28e4>
   14f6c:	ldr	r8, [pc, #128]	; 14ff4 <close_stdout@@Base+0x29e8>
   14f70:	mov	r3, #7
   14f74:	mov	sl, #8
   14f78:	add	r8, pc, r8
   14f7c:	b	14f10 <close_stdout@@Base+0x2904>
   14f80:	ldr	r4, [pc, #112]	; 14ff8 <close_stdout@@Base+0x29ec>
   14f84:	mov	r0, r8
   14f88:	add	r4, pc, r4
   14f8c:	bl	1137c <close@plt>
   14f90:	b	14ee8 <close_stdout@@Base+0x28dc>
   14f94:	bl	11154 <__stack_chk_fail@plt>
   14f98:	mov	r0, r4
   14f9c:	ldr	r4, [pc, #88]	; 14ffc <close_stdout@@Base+0x29f0>
   14fa0:	bl	110f4 <free@plt>
   14fa4:	mov	r0, fp
   14fa8:	add	r4, pc, r4
   14fac:	bl	149b8 <close_stdout@@Base+0x23ac>
   14fb0:	b	14ee8 <close_stdout@@Base+0x28dc>
   14fb4:	mov	r0, fp
   14fb8:	bl	11310 <__uflow@plt>
   14fbc:	b	14ebc <close_stdout@@Base+0x28b0>
   14fc0:	andeq	r2, r1, ip, lsl #8
   14fc4:	andeq	r0, r0, ip, lsl #2
   14fc8:	andeq	r4, r1, ip, lsl #16
   14fcc:	strdeq	r1, [r0], -r0
   14fd0:	andeq	r1, r0, r0, ror r4
   14fd4:	andeq	r1, r0, r8, asr #19
   14fd8:	andeq	r1, r0, r0, ror r9
   14fdc:	andeq	r1, r0, r8, lsl #10
   14fe0:	andeq	r1, r0, ip, lsr #18
   14fe4:	andeq	r4, r1, ip, lsr #10
   14fe8:	andeq	r1, r0, r8, ror r7
   14fec:	andeq	r1, r0, r8, lsl #4
   14ff0:	ldrdeq	r1, [r0], -r0
   14ff4:	andeq	r1, r0, ip, lsl #14
   14ff8:	andeq	r1, r0, ip, lsr #3
   14ffc:	andeq	r1, r0, ip, lsl #3
   15000:	mov	r1, #0
   15004:	mov	r2, #3
   15008:	b	1500c <close_stdout@@Base+0x2a00>
   1500c:	push	{r1, r2, r3}
   15010:	movw	ip, #1030	; 0x406
   15014:	ldr	r3, [pc, #336]	; 1516c <close_stdout@@Base+0x2b60>
   15018:	push	{r4, r5, r6, r7, r8, lr}
   1501c:	add	r3, pc, r3
   15020:	ldr	lr, [pc, #328]	; 15170 <close_stdout@@Base+0x2b64>
   15024:	sub	sp, sp, #12
   15028:	add	r2, sp, #40	; 0x28
   1502c:	mov	r6, r0
   15030:	ldr	r1, [sp, #36]	; 0x24
   15034:	ldr	r4, [r3, lr]
   15038:	cmp	r1, ip
   1503c:	str	r2, [sp]
   15040:	ldr	r3, [r4]
   15044:	str	r3, [sp, #4]
   15048:	bne	150cc <close_stdout@@Base+0x2ac0>
   1504c:	ldr	r8, [pc, #288]	; 15174 <close_stdout@@Base+0x2b68>
   15050:	add	r3, sp, #44	; 0x2c
   15054:	str	r3, [sp]
   15058:	add	r8, pc, r8
   1505c:	ldr	r7, [sp, #40]	; 0x28
   15060:	ldr	r3, [r8]
   15064:	mov	r2, r7
   15068:	cmp	r3, #0
   1506c:	blt	15158 <close_stdout@@Base+0x2b4c>
   15070:	bl	11298 <fcntl@plt>
   15074:	subs	r5, r0, #0
   15078:	blt	150dc <close_stdout@@Base+0x2ad0>
   1507c:	ldr	r3, [pc, #244]	; 15178 <close_stdout@@Base+0x2b6c>
   15080:	mov	r2, #1
   15084:	add	r3, pc, r3
   15088:	str	r2, [r3]
   1508c:	cmp	r5, #0
   15090:	blt	150a8 <close_stdout@@Base+0x2a9c>
   15094:	ldr	r3, [pc, #224]	; 1517c <close_stdout@@Base+0x2b70>
   15098:	add	r3, pc, r3
   1509c:	ldr	r3, [r3]
   150a0:	cmn	r3, #1
   150a4:	beq	1510c <close_stdout@@Base+0x2b00>
   150a8:	ldr	r2, [sp, #4]
   150ac:	mov	r0, r5
   150b0:	ldr	r3, [r4]
   150b4:	cmp	r2, r3
   150b8:	bne	15168 <close_stdout@@Base+0x2b5c>
   150bc:	add	sp, sp, #12
   150c0:	pop	{r4, r5, r6, r7, r8, lr}
   150c4:	add	sp, sp, #12
   150c8:	bx	lr
   150cc:	ldr	r2, [sp, #40]	; 0x28
   150d0:	bl	11298 <fcntl@plt>
   150d4:	mov	r5, r0
   150d8:	b	150a8 <close_stdout@@Base+0x2a9c>
   150dc:	bl	112a4 <__errno_location@plt>
   150e0:	ldr	r3, [r0]
   150e4:	cmp	r3, #22
   150e8:	bne	1507c <close_stdout@@Base+0x2a70>
   150ec:	mov	r0, r6
   150f0:	mov	r2, r7
   150f4:	mov	r1, #0
   150f8:	bl	1500c <close_stdout@@Base+0x2a00>
   150fc:	subs	r5, r0, #0
   15100:	blt	150a8 <close_stdout@@Base+0x2a9c>
   15104:	mvn	r3, #0
   15108:	str	r3, [r8]
   1510c:	mov	r0, r5
   15110:	mov	r1, #1
   15114:	bl	11298 <fcntl@plt>
   15118:	subs	r2, r0, #0
   1511c:	blt	15138 <close_stdout@@Base+0x2b2c>
   15120:	orr	r2, r2, #1
   15124:	mov	r0, r5
   15128:	mov	r1, #2
   1512c:	bl	11298 <fcntl@plt>
   15130:	cmn	r0, #1
   15134:	bne	150a8 <close_stdout@@Base+0x2a9c>
   15138:	bl	112a4 <__errno_location@plt>
   1513c:	ldr	r7, [r0]
   15140:	mov	r6, r0
   15144:	mov	r0, r5
   15148:	mvn	r5, #0
   1514c:	bl	1137c <close@plt>
   15150:	str	r7, [r6]
   15154:	b	150a8 <close_stdout@@Base+0x2a9c>
   15158:	mov	r1, #0
   1515c:	bl	1500c <close_stdout@@Base+0x2a00>
   15160:	mov	r5, r0
   15164:	b	1508c <close_stdout@@Base+0x2a80>
   15168:	bl	11154 <__stack_chk_fail@plt>
   1516c:	ldrdeq	r1, [r1], -ip
   15170:	andeq	r0, r0, ip, lsl #2
   15174:	andeq	r4, r1, ip, asr #7
   15178:	andeq	r4, r1, r0, lsr #7
   1517c:	andeq	r4, r1, ip, lsl #7
   15180:	subs	r2, r1, #1
   15184:	bxeq	lr
   15188:	bcc	15360 <close_stdout@@Base+0x2d54>
   1518c:	cmp	r0, r1
   15190:	bls	15344 <close_stdout@@Base+0x2d38>
   15194:	tst	r1, r2
   15198:	beq	15350 <close_stdout@@Base+0x2d44>
   1519c:	clz	r3, r0
   151a0:	clz	r2, r1
   151a4:	sub	r3, r2, r3
   151a8:	rsbs	r3, r3, #31
   151ac:	addne	r3, r3, r3, lsl #1
   151b0:	mov	r2, #0
   151b4:	addne	pc, pc, r3, lsl #2
   151b8:	nop	{0}
   151bc:	cmp	r0, r1, lsl #31
   151c0:	adc	r2, r2, r2
   151c4:	subcs	r0, r0, r1, lsl #31
   151c8:	cmp	r0, r1, lsl #30
   151cc:	adc	r2, r2, r2
   151d0:	subcs	r0, r0, r1, lsl #30
   151d4:	cmp	r0, r1, lsl #29
   151d8:	adc	r2, r2, r2
   151dc:	subcs	r0, r0, r1, lsl #29
   151e0:	cmp	r0, r1, lsl #28
   151e4:	adc	r2, r2, r2
   151e8:	subcs	r0, r0, r1, lsl #28
   151ec:	cmp	r0, r1, lsl #27
   151f0:	adc	r2, r2, r2
   151f4:	subcs	r0, r0, r1, lsl #27
   151f8:	cmp	r0, r1, lsl #26
   151fc:	adc	r2, r2, r2
   15200:	subcs	r0, r0, r1, lsl #26
   15204:	cmp	r0, r1, lsl #25
   15208:	adc	r2, r2, r2
   1520c:	subcs	r0, r0, r1, lsl #25
   15210:	cmp	r0, r1, lsl #24
   15214:	adc	r2, r2, r2
   15218:	subcs	r0, r0, r1, lsl #24
   1521c:	cmp	r0, r1, lsl #23
   15220:	adc	r2, r2, r2
   15224:	subcs	r0, r0, r1, lsl #23
   15228:	cmp	r0, r1, lsl #22
   1522c:	adc	r2, r2, r2
   15230:	subcs	r0, r0, r1, lsl #22
   15234:	cmp	r0, r1, lsl #21
   15238:	adc	r2, r2, r2
   1523c:	subcs	r0, r0, r1, lsl #21
   15240:	cmp	r0, r1, lsl #20
   15244:	adc	r2, r2, r2
   15248:	subcs	r0, r0, r1, lsl #20
   1524c:	cmp	r0, r1, lsl #19
   15250:	adc	r2, r2, r2
   15254:	subcs	r0, r0, r1, lsl #19
   15258:	cmp	r0, r1, lsl #18
   1525c:	adc	r2, r2, r2
   15260:	subcs	r0, r0, r1, lsl #18
   15264:	cmp	r0, r1, lsl #17
   15268:	adc	r2, r2, r2
   1526c:	subcs	r0, r0, r1, lsl #17
   15270:	cmp	r0, r1, lsl #16
   15274:	adc	r2, r2, r2
   15278:	subcs	r0, r0, r1, lsl #16
   1527c:	cmp	r0, r1, lsl #15
   15280:	adc	r2, r2, r2
   15284:	subcs	r0, r0, r1, lsl #15
   15288:	cmp	r0, r1, lsl #14
   1528c:	adc	r2, r2, r2
   15290:	subcs	r0, r0, r1, lsl #14
   15294:	cmp	r0, r1, lsl #13
   15298:	adc	r2, r2, r2
   1529c:	subcs	r0, r0, r1, lsl #13
   152a0:	cmp	r0, r1, lsl #12
   152a4:	adc	r2, r2, r2
   152a8:	subcs	r0, r0, r1, lsl #12
   152ac:	cmp	r0, r1, lsl #11
   152b0:	adc	r2, r2, r2
   152b4:	subcs	r0, r0, r1, lsl #11
   152b8:	cmp	r0, r1, lsl #10
   152bc:	adc	r2, r2, r2
   152c0:	subcs	r0, r0, r1, lsl #10
   152c4:	cmp	r0, r1, lsl #9
   152c8:	adc	r2, r2, r2
   152cc:	subcs	r0, r0, r1, lsl #9
   152d0:	cmp	r0, r1, lsl #8
   152d4:	adc	r2, r2, r2
   152d8:	subcs	r0, r0, r1, lsl #8
   152dc:	cmp	r0, r1, lsl #7
   152e0:	adc	r2, r2, r2
   152e4:	subcs	r0, r0, r1, lsl #7
   152e8:	cmp	r0, r1, lsl #6
   152ec:	adc	r2, r2, r2
   152f0:	subcs	r0, r0, r1, lsl #6
   152f4:	cmp	r0, r1, lsl #5
   152f8:	adc	r2, r2, r2
   152fc:	subcs	r0, r0, r1, lsl #5
   15300:	cmp	r0, r1, lsl #4
   15304:	adc	r2, r2, r2
   15308:	subcs	r0, r0, r1, lsl #4
   1530c:	cmp	r0, r1, lsl #3
   15310:	adc	r2, r2, r2
   15314:	subcs	r0, r0, r1, lsl #3
   15318:	cmp	r0, r1, lsl #2
   1531c:	adc	r2, r2, r2
   15320:	subcs	r0, r0, r1, lsl #2
   15324:	cmp	r0, r1, lsl #1
   15328:	adc	r2, r2, r2
   1532c:	subcs	r0, r0, r1, lsl #1
   15330:	cmp	r0, r1
   15334:	adc	r2, r2, r2
   15338:	subcs	r0, r0, r1
   1533c:	mov	r0, r2
   15340:	bx	lr
   15344:	moveq	r0, #1
   15348:	movne	r0, #0
   1534c:	bx	lr
   15350:	clz	r2, r1
   15354:	rsb	r2, r2, #31
   15358:	lsr	r0, r0, r2
   1535c:	bx	lr
   15360:	cmp	r0, #0
   15364:	mvnne	r0, #0
   15368:	b	153d4 <close_stdout@@Base+0x2dc8>
   1536c:	cmp	r1, #0
   15370:	beq	15360 <close_stdout@@Base+0x2d54>
   15374:	push	{r0, r1, lr}
   15378:	bl	15180 <close_stdout@@Base+0x2b74>
   1537c:	pop	{r1, r2, lr}
   15380:	mul	r3, r2, r0
   15384:	sub	r1, r1, r3
   15388:	bx	lr
   1538c:	cmp	r3, #0
   15390:	cmpeq	r2, #0
   15394:	bne	153b8 <close_stdout@@Base+0x2dac>
   15398:	cmp	r1, #0
   1539c:	movlt	r1, #-2147483648	; 0x80000000
   153a0:	movlt	r0, #0
   153a4:	blt	153b4 <close_stdout@@Base+0x2da8>
   153a8:	cmpeq	r0, #0
   153ac:	mvnne	r1, #-2147483648	; 0x80000000
   153b0:	mvnne	r0, #0
   153b4:	b	153d4 <close_stdout@@Base+0x2dc8>
   153b8:	sub	sp, sp, #8
   153bc:	push	{sp, lr}
   153c0:	bl	153e4 <close_stdout@@Base+0x2dd8>
   153c4:	ldr	lr, [sp, #4]
   153c8:	add	sp, sp, #8
   153cc:	pop	{r2, r3}
   153d0:	bx	lr
   153d4:	push	{r1, lr}
   153d8:	mov	r0, #8
   153dc:	bl	110b8 <raise@plt>
   153e0:	pop	{r1, pc}
   153e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   153e8:	mov	r8, r2
   153ec:	mov	r6, r0
   153f0:	mov	r7, r1
   153f4:	mov	sl, r3
   153f8:	ldr	r9, [sp, #32]
   153fc:	bl	1545c <close_stdout@@Base+0x2e50>
   15400:	umull	r4, r5, r8, r0
   15404:	mul	r8, r8, r1
   15408:	mla	r2, r0, sl, r8
   1540c:	add	r5, r2, r5
   15410:	subs	r4, r6, r4
   15414:	sbc	r5, r7, r5
   15418:	strd	r4, [r9]
   1541c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15420:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15424:	mov	r8, r2
   15428:	mov	r6, r0
   1542c:	mov	r7, r1
   15430:	mov	r5, r3
   15434:	ldr	r9, [sp, #32]
   15438:	bl	158e8 <close_stdout@@Base+0x32dc>
   1543c:	mul	r3, r0, r5
   15440:	umull	r4, r5, r0, r8
   15444:	mla	r8, r8, r1, r3
   15448:	add	r5, r8, r5
   1544c:	subs	r4, r6, r4
   15450:	sbc	r5, r7, r5
   15454:	strd	r4, [r9]
   15458:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1545c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15460:	rsbs	r4, r0, #0
   15464:	rsc	r5, r1, #0
   15468:	cmp	r1, #0
   1546c:	mvn	r6, #0
   15470:	sub	sp, sp, #12
   15474:	movge	r4, r0
   15478:	movge	r5, r1
   1547c:	movge	r6, #0
   15480:	cmp	r3, #0
   15484:	blt	156bc <close_stdout@@Base+0x30b0>
   15488:	cmp	r3, #0
   1548c:	mov	sl, r4
   15490:	mov	ip, r5
   15494:	mov	r0, r2
   15498:	mov	r1, r3
   1549c:	mov	r8, r2
   154a0:	mov	r7, r4
   154a4:	mov	r9, r5
   154a8:	bne	155a0 <close_stdout@@Base+0x2f94>
   154ac:	cmp	r2, r5
   154b0:	bls	155dc <close_stdout@@Base+0x2fd0>
   154b4:	clz	r3, r2
   154b8:	cmp	r3, #0
   154bc:	rsbne	r2, r3, #32
   154c0:	lslne	r8, r0, r3
   154c4:	lsrne	r2, r4, r2
   154c8:	lslne	r7, r4, r3
   154cc:	orrne	r9, r2, r5, lsl r3
   154d0:	lsr	r4, r8, #16
   154d4:	uxth	sl, r8
   154d8:	mov	r1, r4
   154dc:	mov	r0, r9
   154e0:	bl	15180 <close_stdout@@Base+0x2b74>
   154e4:	mov	r1, r4
   154e8:	mov	fp, r0
   154ec:	mov	r0, r9
   154f0:	bl	1536c <close_stdout@@Base+0x2d60>
   154f4:	mul	r0, sl, fp
   154f8:	lsr	r2, r7, #16
   154fc:	orr	r1, r2, r1, lsl #16
   15500:	cmp	r0, r1
   15504:	bls	15528 <close_stdout@@Base+0x2f1c>
   15508:	adds	r1, r1, r8
   1550c:	sub	r3, fp, #1
   15510:	bcs	15524 <close_stdout@@Base+0x2f18>
   15514:	cmp	r0, r1
   15518:	subhi	fp, fp, #2
   1551c:	addhi	r1, r1, r8
   15520:	bhi	15528 <close_stdout@@Base+0x2f1c>
   15524:	mov	fp, r3
   15528:	rsb	r9, r0, r1
   1552c:	mov	r1, r4
   15530:	uxth	r7, r7
   15534:	mov	r0, r9
   15538:	bl	15180 <close_stdout@@Base+0x2b74>
   1553c:	mov	r1, r4
   15540:	mov	r5, r0
   15544:	mov	r0, r9
   15548:	bl	1536c <close_stdout@@Base+0x2d60>
   1554c:	mul	sl, sl, r5
   15550:	orr	r1, r7, r1, lsl #16
   15554:	cmp	sl, r1
   15558:	bls	15578 <close_stdout@@Base+0x2f6c>
   1555c:	adds	r8, r1, r8
   15560:	sub	r3, r5, #1
   15564:	bcs	15574 <close_stdout@@Base+0x2f68>
   15568:	cmp	sl, r8
   1556c:	subhi	r5, r5, #2
   15570:	bhi	15578 <close_stdout@@Base+0x2f6c>
   15574:	mov	r5, r3
   15578:	orr	r3, r5, fp, lsl #16
   1557c:	mov	r4, #0
   15580:	cmp	r6, #0
   15584:	mov	r0, r3
   15588:	mov	r1, r4
   1558c:	beq	15598 <close_stdout@@Base+0x2f8c>
   15590:	rsbs	r0, r0, #0
   15594:	rsc	r1, r1, #0
   15598:	add	sp, sp, #12
   1559c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155a0:	cmp	r3, r5
   155a4:	movhi	r4, #0
   155a8:	movhi	r3, r4
   155ac:	bhi	15580 <close_stdout@@Base+0x2f74>
   155b0:	clz	r5, r1
   155b4:	cmp	r5, #0
   155b8:	bne	157a8 <close_stdout@@Base+0x319c>
   155bc:	cmp	r1, ip
   155c0:	cmpcs	r2, sl
   155c4:	movhi	r4, #0
   155c8:	movls	r4, #1
   155cc:	movls	r3, #1
   155d0:	movls	r4, r5
   155d4:	movhi	r3, r4
   155d8:	b	15580 <close_stdout@@Base+0x2f74>
   155dc:	cmp	r2, #0
   155e0:	bne	155f4 <close_stdout@@Base+0x2fe8>
   155e4:	mov	r1, r2
   155e8:	mov	r0, #1
   155ec:	bl	15180 <close_stdout@@Base+0x2b74>
   155f0:	mov	r8, r0
   155f4:	clz	r3, r8
   155f8:	cmp	r3, #0
   155fc:	bne	156cc <close_stdout@@Base+0x30c0>
   15600:	rsb	r9, r8, r9
   15604:	lsr	r5, r8, #16
   15608:	uxth	sl, r8
   1560c:	mov	r4, #1
   15610:	mov	r1, r5
   15614:	mov	r0, r9
   15618:	bl	15180 <close_stdout@@Base+0x2b74>
   1561c:	mov	r1, r5
   15620:	mov	fp, r0
   15624:	mov	r0, r9
   15628:	bl	1536c <close_stdout@@Base+0x2d60>
   1562c:	mul	r0, sl, fp
   15630:	lsr	r2, r7, #16
   15634:	orr	r1, r2, r1, lsl #16
   15638:	cmp	r0, r1
   1563c:	bls	1565c <close_stdout@@Base+0x3050>
   15640:	adds	r1, r1, r8
   15644:	sub	r3, fp, #1
   15648:	bcs	158c8 <close_stdout@@Base+0x32bc>
   1564c:	cmp	r0, r1
   15650:	subhi	fp, fp, #2
   15654:	addhi	r1, r1, r8
   15658:	bls	158c8 <close_stdout@@Base+0x32bc>
   1565c:	rsb	r2, r0, r1
   15660:	mov	r1, r5
   15664:	str	r2, [sp]
   15668:	uxth	r7, r7
   1566c:	mov	r0, r2
   15670:	bl	15180 <close_stdout@@Base+0x2b74>
   15674:	ldr	r2, [sp]
   15678:	mov	r1, r5
   1567c:	mov	r9, r0
   15680:	mov	r0, r2
   15684:	bl	1536c <close_stdout@@Base+0x2d60>
   15688:	mul	sl, sl, r9
   1568c:	orr	r1, r7, r1, lsl #16
   15690:	cmp	sl, r1
   15694:	bls	156b4 <close_stdout@@Base+0x30a8>
   15698:	adds	r8, r1, r8
   1569c:	sub	r3, r9, #1
   156a0:	bcs	156b0 <close_stdout@@Base+0x30a4>
   156a4:	cmp	sl, r8
   156a8:	subhi	r9, r9, #2
   156ac:	bhi	156b4 <close_stdout@@Base+0x30a8>
   156b0:	mov	r9, r3
   156b4:	orr	r3, r9, fp, lsl #16
   156b8:	b	15580 <close_stdout@@Base+0x2f74>
   156bc:	mvn	r6, r6
   156c0:	rsbs	r2, r2, #0
   156c4:	rsc	r3, r3, #0
   156c8:	b	15488 <close_stdout@@Base+0x2e7c>
   156cc:	lsl	r8, r8, r3
   156d0:	rsb	fp, r3, #32
   156d4:	lsr	r4, r9, fp
   156d8:	lsr	fp, r7, fp
   156dc:	lsr	r5, r8, #16
   156e0:	orr	fp, fp, r9, lsl r3
   156e4:	mov	r0, r4
   156e8:	lsl	r7, r7, r3
   156ec:	mov	r1, r5
   156f0:	uxth	sl, r8
   156f4:	bl	15180 <close_stdout@@Base+0x2b74>
   156f8:	mov	r1, r5
   156fc:	mov	r3, r0
   15700:	mov	r0, r4
   15704:	str	r3, [sp]
   15708:	bl	1536c <close_stdout@@Base+0x2d60>
   1570c:	ldr	r3, [sp]
   15710:	lsr	r2, fp, #16
   15714:	mul	r0, sl, r3
   15718:	orr	r1, r2, r1, lsl #16
   1571c:	cmp	r0, r1
   15720:	bls	15740 <close_stdout@@Base+0x3134>
   15724:	adds	r1, r1, r8
   15728:	sub	r2, r3, #1
   1572c:	bcs	158e0 <close_stdout@@Base+0x32d4>
   15730:	cmp	r0, r1
   15734:	subhi	r3, r3, #2
   15738:	addhi	r1, r1, r8
   1573c:	bls	158e0 <close_stdout@@Base+0x32d4>
   15740:	rsb	r9, r0, r1
   15744:	mov	r1, r5
   15748:	str	r3, [sp]
   1574c:	uxth	fp, fp
   15750:	mov	r0, r9
   15754:	bl	15180 <close_stdout@@Base+0x2b74>
   15758:	mov	r1, r5
   1575c:	mov	r4, r0
   15760:	mov	r0, r9
   15764:	bl	1536c <close_stdout@@Base+0x2d60>
   15768:	mul	r9, sl, r4
   1576c:	ldr	r3, [sp]
   15770:	orr	r1, fp, r1, lsl #16
   15774:	cmp	r9, r1
   15778:	bls	1579c <close_stdout@@Base+0x3190>
   1577c:	adds	r1, r1, r8
   15780:	sub	r2, r4, #1
   15784:	bcs	15798 <close_stdout@@Base+0x318c>
   15788:	cmp	r9, r1
   1578c:	subhi	r4, r4, #2
   15790:	addhi	r1, r1, r8
   15794:	bhi	1579c <close_stdout@@Base+0x3190>
   15798:	mov	r4, r2
   1579c:	rsb	r9, r9, r1
   157a0:	orr	r4, r4, r3, lsl #16
   157a4:	b	15610 <close_stdout@@Base+0x3004>
   157a8:	rsb	sl, r5, #32
   157ac:	lsl	r3, r2, r5
   157b0:	lsr	r0, r2, sl
   157b4:	lsr	r2, ip, sl
   157b8:	orr	r4, r0, r1, lsl r5
   157bc:	lsr	sl, r7, sl
   157c0:	mov	r0, r2
   157c4:	orr	sl, sl, ip, lsl r5
   157c8:	lsr	r9, r4, #16
   157cc:	str	r3, [sp, #4]
   157d0:	str	r2, [sp]
   157d4:	uxth	fp, r4
   157d8:	mov	r1, r9
   157dc:	bl	15180 <close_stdout@@Base+0x2b74>
   157e0:	ldr	r2, [sp]
   157e4:	mov	r1, r9
   157e8:	mov	r8, r0
   157ec:	mov	r0, r2
   157f0:	bl	1536c <close_stdout@@Base+0x2d60>
   157f4:	mul	r0, fp, r8
   157f8:	lsr	r2, sl, #16
   157fc:	orr	r1, r2, r1, lsl #16
   15800:	cmp	r0, r1
   15804:	bls	15824 <close_stdout@@Base+0x3218>
   15808:	adds	r1, r1, r4
   1580c:	sub	r2, r8, #1
   15810:	bcs	158d8 <close_stdout@@Base+0x32cc>
   15814:	cmp	r0, r1
   15818:	subhi	r8, r8, #2
   1581c:	addhi	r1, r1, r4
   15820:	bls	158d8 <close_stdout@@Base+0x32cc>
   15824:	rsb	ip, r0, r1
   15828:	mov	r1, r9
   1582c:	str	ip, [sp]
   15830:	mov	r0, ip
   15834:	bl	15180 <close_stdout@@Base+0x2b74>
   15838:	ldr	ip, [sp]
   1583c:	mov	r1, r9
   15840:	mov	r2, r0
   15844:	mov	r0, ip
   15848:	str	r2, [sp]
   1584c:	bl	1536c <close_stdout@@Base+0x2d60>
   15850:	ldr	r2, [sp]
   15854:	uxth	ip, sl
   15858:	mul	fp, fp, r2
   1585c:	orr	ip, ip, r1, lsl #16
   15860:	cmp	fp, ip
   15864:	bls	15884 <close_stdout@@Base+0x3278>
   15868:	adds	ip, ip, r4
   1586c:	sub	r1, r2, #1
   15870:	bcs	158d0 <close_stdout@@Base+0x32c4>
   15874:	cmp	fp, ip
   15878:	subhi	r2, r2, #2
   1587c:	addhi	ip, ip, r4
   15880:	bls	158d0 <close_stdout@@Base+0x32c4>
   15884:	ldr	r0, [sp, #4]
   15888:	orr	r1, r2, r8, lsl #16
   1588c:	rsb	fp, fp, ip
   15890:	umull	r2, r3, r1, r0
   15894:	cmp	fp, r3
   15898:	bcc	158bc <close_stdout@@Base+0x32b0>
   1589c:	movne	r4, #0
   158a0:	moveq	r4, #1
   158a4:	cmp	r2, r7, lsl r5
   158a8:	movls	r4, #0
   158ac:	andhi	r4, r4, #1
   158b0:	cmp	r4, #0
   158b4:	moveq	r3, r1
   158b8:	beq	15580 <close_stdout@@Base+0x2f74>
   158bc:	sub	r3, r1, #1
   158c0:	mov	r4, #0
   158c4:	b	15580 <close_stdout@@Base+0x2f74>
   158c8:	mov	fp, r3
   158cc:	b	1565c <close_stdout@@Base+0x3050>
   158d0:	mov	r2, r1
   158d4:	b	15884 <close_stdout@@Base+0x3278>
   158d8:	mov	r8, r2
   158dc:	b	15824 <close_stdout@@Base+0x3218>
   158e0:	mov	r3, r2
   158e4:	b	15740 <close_stdout@@Base+0x3134>
   158e8:	cmp	r3, #0
   158ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158f0:	mov	r6, r0
   158f4:	sub	sp, sp, #12
   158f8:	mov	r5, r1
   158fc:	mov	r7, r0
   15900:	mov	r4, r2
   15904:	mov	r8, r1
   15908:	bne	159e8 <close_stdout@@Base+0x33dc>
   1590c:	cmp	r2, r1
   15910:	bls	15a24 <close_stdout@@Base+0x3418>
   15914:	clz	r3, r2
   15918:	cmp	r3, #0
   1591c:	rsbne	r8, r3, #32
   15920:	lslne	r4, r2, r3
   15924:	lsrne	r8, r0, r8
   15928:	lslne	r7, r0, r3
   1592c:	orrne	r8, r8, r1, lsl r3
   15930:	lsr	r5, r4, #16
   15934:	uxth	sl, r4
   15938:	mov	r1, r5
   1593c:	mov	r0, r8
   15940:	bl	15180 <close_stdout@@Base+0x2b74>
   15944:	mov	r1, r5
   15948:	mov	r9, r0
   1594c:	mov	r0, r8
   15950:	bl	1536c <close_stdout@@Base+0x2d60>
   15954:	mul	r0, sl, r9
   15958:	lsr	r3, r7, #16
   1595c:	orr	r1, r3, r1, lsl #16
   15960:	cmp	r0, r1
   15964:	bls	15988 <close_stdout@@Base+0x337c>
   15968:	adds	r1, r1, r4
   1596c:	sub	r2, r9, #1
   15970:	bcs	15984 <close_stdout@@Base+0x3378>
   15974:	cmp	r0, r1
   15978:	subhi	r9, r9, #2
   1597c:	addhi	r1, r1, r4
   15980:	bhi	15988 <close_stdout@@Base+0x337c>
   15984:	mov	r9, r2
   15988:	rsb	r8, r0, r1
   1598c:	mov	r1, r5
   15990:	uxth	r7, r7
   15994:	mov	r0, r8
   15998:	bl	15180 <close_stdout@@Base+0x2b74>
   1599c:	mov	r1, r5
   159a0:	mov	r6, r0
   159a4:	mov	r0, r8
   159a8:	bl	1536c <close_stdout@@Base+0x2d60>
   159ac:	mul	sl, sl, r6
   159b0:	orr	r1, r7, r1, lsl #16
   159b4:	cmp	sl, r1
   159b8:	bls	159d4 <close_stdout@@Base+0x33c8>
   159bc:	adds	r4, r1, r4
   159c0:	sub	r3, r6, #1
   159c4:	bcs	15cd0 <close_stdout@@Base+0x36c4>
   159c8:	cmp	sl, r4
   159cc:	subhi	r6, r6, #2
   159d0:	bls	15cd0 <close_stdout@@Base+0x36c4>
   159d4:	orr	r0, r6, r9, lsl #16
   159d8:	mov	r6, #0
   159dc:	mov	r1, r6
   159e0:	add	sp, sp, #12
   159e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159e8:	cmp	r3, r1
   159ec:	movhi	r6, #0
   159f0:	movhi	r0, r6
   159f4:	bhi	159dc <close_stdout@@Base+0x33d0>
   159f8:	clz	r7, r3
   159fc:	cmp	r7, #0
   15a00:	bne	15b00 <close_stdout@@Base+0x34f4>
   15a04:	cmp	r3, r1
   15a08:	cmpcs	r2, r6
   15a0c:	movhi	r6, #0
   15a10:	movls	r6, #1
   15a14:	movls	r0, #1
   15a18:	movls	r6, r7
   15a1c:	movhi	r0, r6
   15a20:	b	159dc <close_stdout@@Base+0x33d0>
   15a24:	cmp	r2, #0
   15a28:	bne	15a3c <close_stdout@@Base+0x3430>
   15a2c:	mov	r1, r2
   15a30:	mov	r0, #1
   15a34:	bl	15180 <close_stdout@@Base+0x2b74>
   15a38:	mov	r4, r0
   15a3c:	clz	r3, r4
   15a40:	cmp	r3, #0
   15a44:	bne	15bfc <close_stdout@@Base+0x35f0>
   15a48:	rsb	r5, r4, r5
   15a4c:	lsr	r8, r4, #16
   15a50:	uxth	sl, r4
   15a54:	mov	r6, #1
   15a58:	mov	r1, r8
   15a5c:	mov	r0, r5
   15a60:	bl	15180 <close_stdout@@Base+0x2b74>
   15a64:	mov	r1, r8
   15a68:	mov	r9, r0
   15a6c:	mov	r0, r5
   15a70:	bl	1536c <close_stdout@@Base+0x2d60>
   15a74:	mul	r0, sl, r9
   15a78:	lsr	r3, r7, #16
   15a7c:	orr	r1, r3, r1, lsl #16
   15a80:	cmp	r0, r1
   15a84:	bls	15aa4 <close_stdout@@Base+0x3498>
   15a88:	adds	r1, r1, r4
   15a8c:	sub	r2, r9, #1
   15a90:	bcs	15cd8 <close_stdout@@Base+0x36cc>
   15a94:	cmp	r0, r1
   15a98:	subhi	r9, r9, #2
   15a9c:	addhi	r1, r1, r4
   15aa0:	bls	15cd8 <close_stdout@@Base+0x36cc>
   15aa4:	rsb	fp, r0, r1
   15aa8:	mov	r1, r8
   15aac:	uxth	r7, r7
   15ab0:	mov	r0, fp
   15ab4:	bl	15180 <close_stdout@@Base+0x2b74>
   15ab8:	mov	r1, r8
   15abc:	mov	r5, r0
   15ac0:	mov	r0, fp
   15ac4:	bl	1536c <close_stdout@@Base+0x2d60>
   15ac8:	mul	sl, sl, r5
   15acc:	orr	r1, r7, r1, lsl #16
   15ad0:	cmp	sl, r1
   15ad4:	bls	15af0 <close_stdout@@Base+0x34e4>
   15ad8:	adds	r4, r1, r4
   15adc:	sub	r3, r5, #1
   15ae0:	bcs	15ce0 <close_stdout@@Base+0x36d4>
   15ae4:	cmp	sl, r4
   15ae8:	subhi	r5, r5, #2
   15aec:	bls	15ce0 <close_stdout@@Base+0x36d4>
   15af0:	orr	r0, r5, r9, lsl #16
   15af4:	mov	r1, r6
   15af8:	add	sp, sp, #12
   15afc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b00:	rsb	r1, r7, #32
   15b04:	lsl	r0, r2, r7
   15b08:	lsr	r2, r2, r1
   15b0c:	lsr	fp, r5, r1
   15b10:	orr	r8, r2, r3, lsl r7
   15b14:	lsr	r1, r6, r1
   15b18:	str	r0, [sp, #4]
   15b1c:	orr	r5, r1, r5, lsl r7
   15b20:	lsr	r9, r8, #16
   15b24:	mov	r0, fp
   15b28:	uxth	sl, r8
   15b2c:	mov	r1, r9
   15b30:	bl	15180 <close_stdout@@Base+0x2b74>
   15b34:	mov	r1, r9
   15b38:	mov	r4, r0
   15b3c:	mov	r0, fp
   15b40:	bl	1536c <close_stdout@@Base+0x2d60>
   15b44:	mul	r0, sl, r4
   15b48:	lsr	ip, r5, #16
   15b4c:	orr	r1, ip, r1, lsl #16
   15b50:	cmp	r0, r1
   15b54:	bls	15b68 <close_stdout@@Base+0x355c>
   15b58:	adds	r1, r1, r8
   15b5c:	sub	r2, r4, #1
   15b60:	bcc	15cfc <close_stdout@@Base+0x36f0>
   15b64:	mov	r4, r2
   15b68:	rsb	ip, r0, r1
   15b6c:	mov	r1, r9
   15b70:	str	ip, [sp]
   15b74:	uxth	r5, r5
   15b78:	mov	r0, ip
   15b7c:	bl	15180 <close_stdout@@Base+0x2b74>
   15b80:	ldr	ip, [sp]
   15b84:	mov	r1, r9
   15b88:	mov	fp, r0
   15b8c:	mov	r0, ip
   15b90:	bl	1536c <close_stdout@@Base+0x2d60>
   15b94:	mul	sl, sl, fp
   15b98:	orr	r1, r5, r1, lsl #16
   15b9c:	cmp	sl, r1
   15ba0:	bls	15bb4 <close_stdout@@Base+0x35a8>
   15ba4:	adds	r1, r1, r8
   15ba8:	sub	r2, fp, #1
   15bac:	bcc	15ce8 <close_stdout@@Base+0x36dc>
   15bb0:	mov	fp, r2
   15bb4:	ldr	r3, [sp, #4]
   15bb8:	orr	r0, fp, r4, lsl #16
   15bbc:	rsb	sl, sl, r1
   15bc0:	umull	r4, r5, r0, r3
   15bc4:	cmp	sl, r5
   15bc8:	bcc	15be8 <close_stdout@@Base+0x35dc>
   15bcc:	movne	r3, #0
   15bd0:	moveq	r3, #1
   15bd4:	cmp	r4, r6, lsl r7
   15bd8:	movls	r6, #0
   15bdc:	andhi	r6, r3, #1
   15be0:	cmp	r6, #0
   15be4:	beq	159dc <close_stdout@@Base+0x33d0>
   15be8:	mov	r6, #0
   15bec:	sub	r0, r0, #1
   15bf0:	mov	r1, r6
   15bf4:	add	sp, sp, #12
   15bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bfc:	lsl	r4, r4, r3
   15c00:	rsb	r9, r3, #32
   15c04:	lsr	r2, r5, r9
   15c08:	lsr	r9, r6, r9
   15c0c:	lsr	r8, r4, #16
   15c10:	orr	r9, r9, r5, lsl r3
   15c14:	mov	r0, r2
   15c18:	lsl	r7, r6, r3
   15c1c:	mov	r1, r8
   15c20:	str	r2, [sp]
   15c24:	bl	15180 <close_stdout@@Base+0x2b74>
   15c28:	ldr	r2, [sp]
   15c2c:	mov	r1, r8
   15c30:	uxth	sl, r4
   15c34:	mov	fp, r0
   15c38:	mov	r0, r2
   15c3c:	bl	1536c <close_stdout@@Base+0x2d60>
   15c40:	mul	r0, sl, fp
   15c44:	lsr	r3, r9, #16
   15c48:	orr	r1, r3, r1, lsl #16
   15c4c:	cmp	r0, r1
   15c50:	bls	15c70 <close_stdout@@Base+0x3664>
   15c54:	adds	r1, r1, r4
   15c58:	sub	r3, fp, #1
   15c5c:	bcs	15d10 <close_stdout@@Base+0x3704>
   15c60:	cmp	r0, r1
   15c64:	subhi	fp, fp, #2
   15c68:	addhi	r1, r1, r4
   15c6c:	bls	15d10 <close_stdout@@Base+0x3704>
   15c70:	rsb	r5, r0, r1
   15c74:	mov	r1, r8
   15c78:	uxth	r9, r9
   15c7c:	mov	r0, r5
   15c80:	bl	15180 <close_stdout@@Base+0x2b74>
   15c84:	mov	r1, r8
   15c88:	mov	r6, r0
   15c8c:	mov	r0, r5
   15c90:	bl	1536c <close_stdout@@Base+0x2d60>
   15c94:	mul	r5, sl, r6
   15c98:	orr	r1, r9, r1, lsl #16
   15c9c:	cmp	r5, r1
   15ca0:	bls	15cc4 <close_stdout@@Base+0x36b8>
   15ca4:	adds	r1, r1, r4
   15ca8:	sub	r3, r6, #1
   15cac:	bcs	15cc0 <close_stdout@@Base+0x36b4>
   15cb0:	cmp	r5, r1
   15cb4:	subhi	r6, r6, #2
   15cb8:	addhi	r1, r1, r4
   15cbc:	bhi	15cc4 <close_stdout@@Base+0x36b8>
   15cc0:	mov	r6, r3
   15cc4:	rsb	r5, r5, r1
   15cc8:	orr	r6, r6, fp, lsl #16
   15ccc:	b	15a58 <close_stdout@@Base+0x344c>
   15cd0:	mov	r6, r3
   15cd4:	b	159d4 <close_stdout@@Base+0x33c8>
   15cd8:	mov	r9, r2
   15cdc:	b	15aa4 <close_stdout@@Base+0x3498>
   15ce0:	mov	r5, r3
   15ce4:	b	15af0 <close_stdout@@Base+0x34e4>
   15ce8:	cmp	sl, r1
   15cec:	subhi	fp, fp, #2
   15cf0:	addhi	r1, r1, r8
   15cf4:	bhi	15bb4 <close_stdout@@Base+0x35a8>
   15cf8:	b	15bb0 <close_stdout@@Base+0x35a4>
   15cfc:	cmp	r0, r1
   15d00:	subhi	r4, r4, #2
   15d04:	addhi	r1, r1, r8
   15d08:	bhi	15b68 <close_stdout@@Base+0x355c>
   15d0c:	b	15b64 <close_stdout@@Base+0x3558>
   15d10:	mov	fp, r3
   15d14:	b	15c70 <close_stdout@@Base+0x3664>
   15d18:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15d1c:	mov	r7, r0
   15d20:	ldr	r6, [pc, #76]	; 15d74 <close_stdout@@Base+0x3768>
   15d24:	mov	r8, r1
   15d28:	ldr	r5, [pc, #72]	; 15d78 <close_stdout@@Base+0x376c>
   15d2c:	mov	r9, r2
   15d30:	add	r6, pc, r6
   15d34:	bl	11074 <fdopen@plt-0x20>
   15d38:	add	r5, pc, r5
   15d3c:	rsb	r6, r5, r6
   15d40:	asrs	r6, r6, #2
   15d44:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   15d48:	sub	r5, r5, #4
   15d4c:	mov	r4, #0
   15d50:	add	r4, r4, #1
   15d54:	ldr	r3, [r5, #4]!
   15d58:	mov	r0, r7
   15d5c:	mov	r1, r8
   15d60:	mov	r2, r9
   15d64:	blx	r3
   15d68:	cmp	r4, r6
   15d6c:	bne	15d50 <close_stdout@@Base+0x3744>
   15d70:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15d74:	andeq	r1, r1, ip, lsr r1
   15d78:	andeq	r1, r1, r0, lsr r1
   15d7c:	bx	lr
   15d80:	ldr	r3, [pc, #28]	; 15da4 <close_stdout@@Base+0x3798>
   15d84:	mov	r1, #0
   15d88:	ldr	r2, [pc, #24]	; 15da8 <close_stdout@@Base+0x379c>
   15d8c:	add	r3, pc, r3
   15d90:	ldr	r3, [r3, r2]
   15d94:	cmp	r3, #0
   15d98:	ldrne	r2, [r3]
   15d9c:	moveq	r2, r3
   15da0:	b	112b0 <__cxa_atexit@plt>
   15da4:	andeq	r1, r1, ip, ror #4
   15da8:	andeq	r0, r0, r4, lsr #2

Disassembly of section .fini:

00015dac <.fini>:
   15dac:	push	{r3, lr}
   15db0:	pop	{r3, pc}
