
centos-preinstalled/cat:     file format elf32-littlearm


Disassembly of section .init:

000111c8 <.init>:
   111c8:	push	{r3, lr}
   111cc:	bl	122e8 <__assert_fail@plt+0xdac>
   111d0:	pop	{r3, pc}

Disassembly of section .plt:

000111d4 <fdopen@plt-0x14>:
   111d4:	push	{lr}		; (str lr, [sp, #-4]!)
   111d8:	ldr	lr, [pc, #4]	; 111e4 <fdopen@plt-0x4>
   111dc:	add	lr, pc, lr
   111e0:	ldr	pc, [lr, #8]!
   111e4:	andeq	r8, r1, ip, lsl lr

000111e8 <fdopen@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #24, 20	; 0x18000
   111f0:	ldr	pc, [ip, #3612]!	; 0xe1c

000111f4 <calloc@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #24, 20	; 0x18000
   111fc:	ldr	pc, [ip, #3604]!	; 0xe14

00011200 <fputs_unlocked@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #24, 20	; 0x18000
   11208:	ldr	pc, [ip, #3596]!	; 0xe0c

0001120c <raise@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #24, 20	; 0x18000
   11214:	ldr	pc, [ip, #3588]!	; 0xe04

00011218 <iconv_close@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #24, 20	; 0x18000
   11220:	ldr	pc, [ip, #3580]!	; 0xdfc

00011224 <iconv@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #24, 20	; 0x18000
   1122c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011230 <strcmp@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #24, 20	; 0x18000
   11238:	ldr	pc, [ip, #3564]!	; 0xdec

0001123c <posix_fadvise64@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #24, 20	; 0x18000
   11244:	ldr	pc, [ip, #3556]!	; 0xde4

00011248 <read@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #24, 20	; 0x18000
   11250:	ldr	pc, [ip, #3548]!	; 0xddc

00011254 <fflush@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #24, 20	; 0x18000
   1125c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011260 <wcwidth@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #24, 20	; 0x18000
   11268:	ldr	pc, [ip, #3532]!	; 0xdcc

0001126c <memmove@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #24, 20	; 0x18000
   11274:	ldr	pc, [ip, #3524]!	; 0xdc4

00011278 <free@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #24, 20	; 0x18000
   11280:	ldr	pc, [ip, #3516]!	; 0xdbc

00011284 <_exit@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #24, 20	; 0x18000
   1128c:	ldr	pc, [ip, #3508]!	; 0xdb4

00011290 <memcpy@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #24, 20	; 0x18000
   11298:	ldr	pc, [ip, #3500]!	; 0xdac

0001129c <mbsinit@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #24, 20	; 0x18000
   112a4:	ldr	pc, [ip, #3492]!	; 0xda4

000112a8 <memcmp@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #24, 20	; 0x18000
   112b0:	ldr	pc, [ip, #3484]!	; 0xd9c

000112b4 <stpcpy@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #24, 20	; 0x18000
   112bc:	ldr	pc, [ip, #3476]!	; 0xd94

000112c0 <dcgettext@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #24, 20	; 0x18000
   112c8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112cc <__stack_chk_fail@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #24, 20	; 0x18000
   112d4:	ldr	pc, [ip, #3460]!	; 0xd84

000112d8 <realloc@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #24, 20	; 0x18000
   112e0:	ldr	pc, [ip, #3452]!	; 0xd7c

000112e4 <textdomain@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #24, 20	; 0x18000
   112ec:	ldr	pc, [ip, #3444]!	; 0xd74

000112f0 <iswcntrl@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #24, 20	; 0x18000
   112f8:	ldr	pc, [ip, #3436]!	; 0xd6c

000112fc <iswprint@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #24, 20	; 0x18000
   11304:	ldr	pc, [ip, #3428]!	; 0xd64

00011308 <__fxstat64@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #24, 20	; 0x18000
   11310:	ldr	pc, [ip, #3420]!	; 0xd5c

00011314 <fwrite@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #24, 20	; 0x18000
   1131c:	ldr	pc, [ip, #3412]!	; 0xd54

00011320 <ioctl@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #24, 20	; 0x18000
   11328:	ldr	pc, [ip, #3404]!	; 0xd4c

0001132c <lseek64@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #24, 20	; 0x18000
   11334:	ldr	pc, [ip, #3396]!	; 0xd44

00011338 <__ctype_get_mb_cur_max@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #24, 20	; 0x18000
   11340:	ldr	pc, [ip, #3388]!	; 0xd3c

00011344 <strcpy@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #24, 20	; 0x18000
   1134c:	ldr	pc, [ip, #3380]!	; 0xd34

00011350 <__fpending@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #24, 20	; 0x18000
   11358:	ldr	pc, [ip, #3372]!	; 0xd2c

0001135c <mbrtowc@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #24, 20	; 0x18000
   11364:	ldr	pc, [ip, #3364]!	; 0xd24

00011368 <error@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #24, 20	; 0x18000
   11370:	ldr	pc, [ip, #3356]!	; 0xd1c

00011374 <open64@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #24, 20	; 0x18000
   1137c:	ldr	pc, [ip, #3348]!	; 0xd14

00011380 <getenv@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #24, 20	; 0x18000
   11388:	ldr	pc, [ip, #3340]!	; 0xd0c

0001138c <malloc@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #24, 20	; 0x18000
   11394:	ldr	pc, [ip, #3332]!	; 0xd04

00011398 <iconv_open@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #24, 20	; 0x18000
   113a0:	ldr	pc, [ip, #3324]!	; 0xcfc

000113a4 <__libc_start_main@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #24, 20	; 0x18000
   113ac:	ldr	pc, [ip, #3316]!	; 0xcf4

000113b0 <__freading@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #24, 20	; 0x18000
   113b8:	ldr	pc, [ip, #3308]!	; 0xcec

000113bc <__gmon_start__@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #24, 20	; 0x18000
   113c4:	ldr	pc, [ip, #3300]!	; 0xce4

000113c8 <getopt_long@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #24, 20	; 0x18000
   113d0:	ldr	pc, [ip, #3292]!	; 0xcdc

000113d4 <__ctype_b_loc@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #24, 20	; 0x18000
   113dc:	ldr	pc, [ip, #3284]!	; 0xcd4

000113e0 <exit@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #24, 20	; 0x18000
   113e8:	ldr	pc, [ip, #3276]!	; 0xccc

000113ec <iswspace@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #24, 20	; 0x18000
   113f4:	ldr	pc, [ip, #3268]!	; 0xcc4

000113f8 <strlen@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #24, 20	; 0x18000
   11400:	ldr	pc, [ip, #3260]!	; 0xcbc

00011404 <strchr@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #24, 20	; 0x18000
   1140c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011410 <getpagesize@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #24, 20	; 0x18000
   11418:	ldr	pc, [ip, #3244]!	; 0xcac

0001141c <ungetc@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #24, 20	; 0x18000
   11424:	ldr	pc, [ip, #3236]!	; 0xca4

00011428 <__errno_location@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #24, 20	; 0x18000
   11430:	ldr	pc, [ip, #3228]!	; 0xc9c

00011434 <iswalnum@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #24, 20	; 0x18000
   1143c:	ldr	pc, [ip, #3220]!	; 0xc94

00011440 <__sprintf_chk@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #24, 20	; 0x18000
   11448:	ldr	pc, [ip, #3212]!	; 0xc8c

0001144c <__cxa_atexit@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #24, 20	; 0x18000
   11454:	ldr	pc, [ip, #3204]!	; 0xc84

00011458 <__strdup@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #24, 20	; 0x18000
   11460:	ldr	pc, [ip, #3196]!	; 0xc7c

00011464 <memset@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #24, 20	; 0x18000
   1146c:	ldr	pc, [ip, #3188]!	; 0xc74

00011470 <fscanf@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #24, 20	; 0x18000
   11478:	ldr	pc, [ip, #3180]!	; 0xc6c

0001147c <__printf_chk@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #24, 20	; 0x18000
   11484:	ldr	pc, [ip, #3172]!	; 0xc64

00011488 <write@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #24, 20	; 0x18000
   11490:	ldr	pc, [ip, #3164]!	; 0xc5c

00011494 <fileno@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #24, 20	; 0x18000
   1149c:	ldr	pc, [ip, #3156]!	; 0xc54

000114a0 <__fprintf_chk@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #24, 20	; 0x18000
   114a8:	ldr	pc, [ip, #3148]!	; 0xc4c

000114ac <memchr@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #24, 20	; 0x18000
   114b4:	ldr	pc, [ip, #3140]!	; 0xc44

000114b8 <fclose@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #24, 20	; 0x18000
   114c0:	ldr	pc, [ip, #3132]!	; 0xc3c

000114c4 <strnlen@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #24, 20	; 0x18000
   114cc:	ldr	pc, [ip, #3124]!	; 0xc34

000114d0 <fseeko64@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #24, 20	; 0x18000
   114d8:	ldr	pc, [ip, #3116]!	; 0xc2c

000114dc <__uflow@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #24, 20	; 0x18000
   114e4:	ldr	pc, [ip, #3108]!	; 0xc24

000114e8 <setlocale@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #24, 20	; 0x18000
   114f0:	ldr	pc, [ip, #3100]!	; 0xc1c

000114f4 <strrchr@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #24, 20	; 0x18000
   114fc:	ldr	pc, [ip, #3092]!	; 0xc14

00011500 <nl_langinfo@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #24, 20	; 0x18000
   11508:	ldr	pc, [ip, #3084]!	; 0xc0c

0001150c <bindtextdomain@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #24, 20	; 0x18000
   11514:	ldr	pc, [ip, #3076]!	; 0xc04

00011518 <strncmp@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #24, 20	; 0x18000
   11520:	ldr	pc, [ip, #3068]!	; 0xbfc

00011524 <abort@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #24, 20	; 0x18000
   1152c:	ldr	pc, [ip, #3060]!	; 0xbf4

00011530 <close@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #24, 20	; 0x18000
   11538:	ldr	pc, [ip, #3052]!	; 0xbec

0001153c <__assert_fail@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #24, 20	; 0x18000
   11544:	ldr	pc, [ip, #3044]!	; 0xbe4

Disassembly of section .text:

00011548 <close_stdout@@Base-0x11b4>:
   11548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1154c:	sub	sp, sp, #276	; 0x114
   11550:	ldr	r6, [pc, #3212]	; 121e4 <__assert_fail@plt+0xca8>
   11554:	mov	sl, #0
   11558:	ldr	r3, [pc, #3208]	; 121e8 <__assert_fail@plt+0xcac>
   1155c:	mov	r4, r1
   11560:	add	r6, pc, r6
   11564:	str	r0, [sp, #68]	; 0x44
   11568:	str	sl, [sp, #36]	; 0x24
   1156c:	mov	r7, sl
   11570:	str	sl, [sp, #56]	; 0x38
   11574:	ldr	r3, [r6, r3]
   11578:	str	sl, [sp, #64]	; 0x40
   1157c:	str	sl, [sp, #100]	; 0x64
   11580:	ldr	r3, [r3]
   11584:	str	sl, [sp, #40]	; 0x28
   11588:	ldr	r5, [pc, #3164]	; 121ec <__assert_fail@plt+0xcb0>
   1158c:	str	r3, [sp, #268]	; 0x10c
   11590:	bl	11410 <getpagesize@plt>
   11594:	add	r5, pc, r5
   11598:	ldr	r8, [pc, #3152]	; 121f0 <__assert_fail@plt+0xcb4>
   1159c:	ldr	r9, [pc, #3152]	; 121f4 <__assert_fail@plt+0xcb8>
   115a0:	add	r8, pc, r8
   115a4:	add	r9, pc, r9
   115a8:	str	r0, [sp, #88]	; 0x58
   115ac:	ldr	r0, [r4]
   115b0:	bl	12968 <close_stdout@@Base+0x26c>
   115b4:	ldr	r1, [pc, #3132]	; 121f8 <__assert_fail@plt+0xcbc>
   115b8:	mov	r0, #6
   115bc:	add	r1, pc, r1
   115c0:	bl	114e8 <setlocale@plt>
   115c4:	ldr	r1, [pc, #3120]	; 121fc <__assert_fail@plt+0xcc0>
   115c8:	mov	r0, r5
   115cc:	add	r1, pc, r1
   115d0:	bl	1150c <bindtextdomain@plt>
   115d4:	mov	r0, r5
   115d8:	bl	112e4 <textdomain@plt>
   115dc:	ldr	r3, [pc, #3100]	; 12200 <__assert_fail@plt+0xcc4>
   115e0:	ldr	r0, [r6, r3]
   115e4:	bl	187b8 <close_stdout@@Base+0x60bc>
   115e8:	str	r7, [sp]
   115ec:	mov	r1, r4
   115f0:	ldr	r0, [sp, #68]	; 0x44
   115f4:	mov	r2, r8
   115f8:	mov	r3, r9
   115fc:	mov	r5, #0
   11600:	bl	113c8 <getopt_long@plt>
   11604:	cmn	r0, #1
   11608:	beq	1175c <__assert_fail@plt+0x220>
   1160c:	cmp	r0, #98	; 0x62
   11610:	beq	11734 <__assert_fail@plt+0x1f8>
   11614:	ble	11644 <__assert_fail@plt+0x108>
   11618:	cmp	r0, #115	; 0x73
   1161c:	beq	11728 <__assert_fail@plt+0x1ec>
   11620:	ble	11680 <__assert_fail@plt+0x144>
   11624:	cmp	r0, #117	; 0x75
   11628:	beq	115e8 <__assert_fail@plt+0xac>
   1162c:	blt	1171c <__assert_fail@plt+0x1e0>
   11630:	cmp	r0, #118	; 0x76
   11634:	bne	11744 <__assert_fail@plt+0x208>
   11638:	mov	ip, #1
   1163c:	str	ip, [sp, #36]	; 0x24
   11640:	b	115e8 <__assert_fail@plt+0xac>
   11644:	cmp	r0, #65	; 0x41
   11648:	beq	1174c <__assert_fail@plt+0x210>
   1164c:	bgt	11668 <__assert_fail@plt+0x12c>
   11650:	cmn	r0, #3
   11654:	beq	116ac <__assert_fail@plt+0x170>
   11658:	cmn	r0, #2
   1165c:	bne	11744 <__assert_fail@plt+0x208>
   11660:	mov	r0, r5
   11664:	bl	1248c <__assert_fail@plt+0xf50>
   11668:	cmp	r0, #69	; 0x45
   1166c:	beq	11710 <__assert_fail@plt+0x1d4>
   11670:	cmp	r0, #84	; 0x54
   11674:	bne	11744 <__assert_fail@plt+0x208>
   11678:	mov	sl, #1
   1167c:	b	115e8 <__assert_fail@plt+0xac>
   11680:	cmp	r0, #101	; 0x65
   11684:	beq	1169c <__assert_fail@plt+0x160>
   11688:	cmp	r0, #110	; 0x6e
   1168c:	bne	11744 <__assert_fail@plt+0x208>
   11690:	mov	ip, #1
   11694:	str	ip, [sp, #40]	; 0x28
   11698:	b	115e8 <__assert_fail@plt+0xac>
   1169c:	mov	ip, #1
   116a0:	str	ip, [sp, #36]	; 0x24
   116a4:	str	ip, [sp, #56]	; 0x38
   116a8:	b	115e8 <__assert_fail@plt+0xac>
   116ac:	ldr	r2, [pc, #2896]	; 12204 <__assert_fail@plt+0xcc8>
   116b0:	ldr	r3, [pc, #2896]	; 12208 <__assert_fail@plt+0xccc>
   116b4:	ldr	r0, [pc, #2896]	; 1220c <__assert_fail@plt+0xcd0>
   116b8:	ldr	r2, [r6, r2]
   116bc:	ldr	r3, [r6, r3]
   116c0:	add	r0, pc, r0
   116c4:	ldr	r1, [pc, #2884]	; 12210 <__assert_fail@plt+0xcd4>
   116c8:	ldr	r4, [r2]
   116cc:	add	r1, pc, r1
   116d0:	ldr	r6, [r3]
   116d4:	bl	1335c <close_stdout@@Base+0xc60>
   116d8:	ldr	r2, [pc, #2868]	; 12214 <__assert_fail@plt+0xcd8>
   116dc:	ldr	r1, [pc, #2868]	; 12218 <__assert_fail@plt+0xcdc>
   116e0:	add	r2, pc, r2
   116e4:	str	r2, [sp, #4]
   116e8:	ldr	r2, [pc, #2860]	; 1221c <__assert_fail@plt+0xce0>
   116ec:	mov	r3, r6
   116f0:	str	r5, [sp, #8]
   116f4:	add	r1, pc, r1
   116f8:	add	r2, pc, r2
   116fc:	str	r0, [sp]
   11700:	mov	r0, r4
   11704:	bl	158bc <close_stdout@@Base+0x31c0>
   11708:	mov	r0, r5
   1170c:	bl	113e0 <exit@plt>
   11710:	mov	ip, #1
   11714:	str	ip, [sp, #56]	; 0x38
   11718:	b	115e8 <__assert_fail@plt+0xac>
   1171c:	mov	sl, #1
   11720:	str	sl, [sp, #36]	; 0x24
   11724:	b	115e8 <__assert_fail@plt+0xac>
   11728:	mov	ip, #1
   1172c:	str	ip, [sp, #64]	; 0x40
   11730:	b	115e8 <__assert_fail@plt+0xac>
   11734:	mov	ip, #1
   11738:	str	ip, [sp, #100]	; 0x64
   1173c:	str	ip, [sp, #40]	; 0x28
   11740:	b	115e8 <__assert_fail@plt+0xac>
   11744:	mov	r0, #1
   11748:	bl	1248c <__assert_fail@plt+0xf50>
   1174c:	mov	sl, #1
   11750:	str	sl, [sp, #36]	; 0x24
   11754:	str	sl, [sp, #56]	; 0x38
   11758:	b	115e8 <__assert_fail@plt+0xac>
   1175c:	add	ip, sp, #160	; 0xa0
   11760:	mov	r0, #3
   11764:	mov	r1, #1
   11768:	str	ip, [sp, #116]	; 0x74
   1176c:	mov	r2, ip
   11770:	bl	11308 <__fxstat64@plt>
   11774:	cmp	r0, r5
   11778:	blt	12160 <__assert_fail@plt+0xc24>
   1177c:	ldr	r3, [sp, #216]	; 0xd8
   11780:	mov	r2, #0
   11784:	ldr	r1, [sp, #176]	; 0xb0
   11788:	movt	r2, #8191	; 0x1fff
   1178c:	sub	r0, r3, #65536	; 0x10000
   11790:	ldr	lr, [sp, #56]	; 0x38
   11794:	cmp	r0, r2
   11798:	and	r1, r1, #61440	; 0xf000
   1179c:	movls	r9, r3
   117a0:	movhi	r9, #65536	; 0x10000
   117a4:	cmp	r1, #32768	; 0x8000
   117a8:	ldr	r3, [sp, #40]	; 0x28
   117ac:	ldrdeq	r0, [sp, #160]	; 0xa0
   117b0:	moveq	ip, #1
   117b4:	movne	ip, #0
   117b8:	streq	ip, [sp, #112]	; 0x70
   117bc:	strne	ip, [sp, #112]	; 0x70
   117c0:	eor	r2, r3, #1
   117c4:	strdeq	r0, [sp, #136]	; 0x88
   117c8:	addeq	r1, sp, #256	; 0x100
   117cc:	eor	ip, lr, #1
   117d0:	ldr	r3, [pc, #2632]	; 12220 <__assert_fail@plt+0xce4>
   117d4:	ldrdeq	r0, [r1]
   117d8:	and	r2, ip, r2
   117dc:	ldr	ip, [sp, #36]	; 0x24
   117e0:	eor	lr, sl, #1
   117e4:	str	r2, [sp, #124]	; 0x7c
   117e8:	strdeq	r0, [sp, #144]	; 0x90
   117ec:	eor	r2, ip, #1
   117f0:	ldr	r1, [pc, #2604]	; 12224 <__assert_fail@plt+0xce8>
   117f4:	and	r2, r2, lr
   117f8:	ldr	r0, [pc, #2600]	; 12228 <__assert_fail@plt+0xcec>
   117fc:	mov	ip, #0
   11800:	add	r1, pc, r1
   11804:	str	lr, [sp, #60]	; 0x3c
   11808:	add	r0, pc, r0
   1180c:	str	r2, [sp, #132]	; 0x84
   11810:	str	r0, [r1]
   11814:	ldr	r3, [r6, r3]
   11818:	str	ip, [sp, #120]	; 0x78
   1181c:	ldr	ip, [pc, #2568]	; 1222c <__assert_fail@plt+0xcf0>
   11820:	ldr	r3, [r3]
   11824:	add	ip, pc, ip
   11828:	str	ip, [sp, #108]	; 0x6c
   1182c:	mov	ip, #1
   11830:	str	ip, [sp, #76]	; 0x4c
   11834:	add	r4, r4, r3, lsl #2
   11838:	str	r3, [sp, #80]	; 0x50
   1183c:	str	r4, [sp, #92]	; 0x5c
   11840:	ldr	ip, [sp, #80]	; 0x50
   11844:	ldr	lr, [sp, #68]	; 0x44
   11848:	cmp	ip, lr
   1184c:	bge	121d8 <__assert_fail@plt+0xc9c>
   11850:	ldr	ip, [sp, #92]	; 0x5c
   11854:	ldr	r2, [pc, #2516]	; 12230 <__assert_fail@plt+0xcf4>
   11858:	ldr	r3, [ip]
   1185c:	add	r2, pc, r2
   11860:	mov	r0, r3
   11864:	str	r3, [r2]
   11868:	ldrb	r3, [r0]
   1186c:	cmp	r3, #45	; 0x2d
   11870:	beq	11db0 <__assert_fail@plt+0x874>
   11874:	mov	r1, #0
   11878:	ldr	r5, [pc, #2484]	; 12234 <__assert_fail@plt+0xcf8>
   1187c:	bl	11374 <open64@plt>
   11880:	add	r5, pc, r5
   11884:	cmp	r0, #0
   11888:	mov	r4, r0
   1188c:	str	r0, [r5, #4]
   11890:	blt	120ac <__assert_fail@plt+0xb70>
   11894:	mov	r0, #3
   11898:	mov	r1, r4
   1189c:	add	r2, sp, #160	; 0xa0
   118a0:	bl	11308 <__fxstat64@plt>
   118a4:	cmp	r0, #0
   118a8:	blt	11fc8 <__assert_fail@plt+0xa8c>
   118ac:	ldr	r1, [sp, #216]	; 0xd8
   118b0:	mov	ip, #0
   118b4:	movt	ip, #8191	; 0x1fff
   118b8:	mov	r2, #0
   118bc:	sub	lr, r1, #65536	; 0x10000
   118c0:	mov	r3, #0
   118c4:	cmp	lr, ip
   118c8:	mov	r0, r4
   118cc:	strd	r2, [sp]
   118d0:	movhi	r1, #65536	; 0x10000
   118d4:	str	r1, [sp, #44]	; 0x2c
   118d8:	mov	r1, #2
   118dc:	str	r1, [sp, #8]
   118e0:	bl	128b8 <close_stdout@@Base+0x1bc>
   118e4:	ldr	ip, [sp, #112]	; 0x70
   118e8:	cmp	ip, #0
   118ec:	beq	11904 <__assert_fail@plt+0x3c8>
   118f0:	ldrd	r2, [sp, #160]	; 0xa0
   118f4:	ldrd	r0, [sp, #136]	; 0x88
   118f8:	cmp	r3, r1
   118fc:	cmpeq	r2, r0
   11900:	beq	11f6c <__assert_fail@plt+0xa30>
   11904:	ldr	ip, [sp, #124]	; 0x7c
   11908:	cmp	ip, #0
   1190c:	beq	1192c <__assert_fail@plt+0x3f0>
   11910:	ldr	ip, [sp, #132]	; 0x84
   11914:	cmp	ip, #0
   11918:	mov	r6, ip
   1191c:	beq	1192c <__assert_fail@plt+0x3f0>
   11920:	ldr	ip, [sp, #64]	; 0x40
   11924:	cmp	ip, #0
   11928:	beq	11ff8 <__assert_fail@plt+0xabc>
   1192c:	ldr	lr, [sp, #88]	; 0x58
   11930:	ldr	ip, [sp, #44]	; 0x2c
   11934:	sub	r4, lr, #1
   11938:	ldr	r7, [pc, #2296]	; 12238 <__assert_fail@plt+0xcfc>
   1193c:	add	r0, ip, lr
   11940:	bl	159cc <close_stdout@@Base+0x32d0>
   11944:	ldr	ip, [sp, #88]	; 0x58
   11948:	mov	r3, #1
   1194c:	str	r3, [sp, #48]	; 0x30
   11950:	add	r7, pc, r7
   11954:	str	r0, [sp, #96]	; 0x60
   11958:	add	r0, ip, #18
   1195c:	ldr	ip, [sp, #96]	; 0x60
   11960:	add	r0, r0, r9
   11964:	add	r8, ip, r4
   11968:	ldr	ip, [sp, #44]	; 0x2c
   1196c:	add	r0, r0, ip, lsl #2
   11970:	bl	159cc <close_stdout@@Base+0x32d0>
   11974:	ldr	r1, [sp, #88]	; 0x58
   11978:	str	r0, [sp, #128]	; 0x80
   1197c:	mov	r0, r8
   11980:	bl	18720 <close_stdout@@Base+0x6024>
   11984:	ldr	ip, [sp, #128]	; 0x80
   11988:	ldr	r3, [pc, #2220]	; 1223c <__assert_fail@plt+0xd00>
   1198c:	add	r4, ip, r4
   11990:	ldr	ip, [pc, #2216]	; 12240 <__assert_fail@plt+0xd04>
   11994:	add	r3, pc, r3
   11998:	str	r3, [sp, #104]	; 0x68
   1199c:	mov	r0, r4
   119a0:	add	ip, pc, ip
   119a4:	str	ip, [sp, #84]	; 0x54
   119a8:	rsb	r8, r1, r8
   119ac:	ldr	r1, [sp, #88]	; 0x58
   119b0:	str	r8, [sp, #24]
   119b4:	bl	18720 <close_stdout@@Base+0x6024>
   119b8:	ldr	r8, [sp, #24]
   119bc:	ldr	r3, [pc, #2176]	; 12244 <__assert_fail@plt+0xd08>
   119c0:	add	ip, r8, #1
   119c4:	str	ip, [sp, #52]	; 0x34
   119c8:	ldr	ip, [sp, #100]	; 0x64
   119cc:	add	r3, pc, r3
   119d0:	ldr	r6, [sp, #52]	; 0x34
   119d4:	eor	r2, ip, #1
   119d8:	ldr	ip, [sp, #40]	; 0x28
   119dc:	ldr	fp, [r3, #8]
   119e0:	and	r2, ip, r2
   119e4:	str	r8, [sp, #28]
   119e8:	str	r2, [sp, #72]	; 0x48
   119ec:	rsb	r4, r1, r4
   119f0:	str	r4, [sp, #20]
   119f4:	add	r3, r4, r9
   119f8:	str	r3, [sp, #32]
   119fc:	mov	r5, r4
   11a00:	ldr	ip, [sp, #32]
   11a04:	cmp	ip, r5
   11a08:	bhi	11a74 <__assert_fail@plt+0x538>
   11a0c:	ldr	r4, [sp, #20]
   11a10:	mov	r0, #1
   11a14:	mov	r1, r4
   11a18:	mov	r2, r9
   11a1c:	bl	128f8 <close_stdout@@Base+0x1fc>
   11a20:	cmp	r9, r0
   11a24:	beq	11a50 <__assert_fail@plt+0x514>
   11a28:	bl	11428 <__errno_location@plt>
   11a2c:	mov	r1, r7
   11a30:	mov	r2, #5
   11a34:	ldr	r8, [r0]
   11a38:	mov	r0, #0
   11a3c:	bl	112c0 <dcgettext@plt>
   11a40:	mov	r1, r8
   11a44:	mov	r2, r0
   11a48:	mov	r0, #1
   11a4c:	bl	11368 <error@plt>
   11a50:	add	r4, r4, r9
   11a54:	rsb	r3, r4, r5
   11a58:	cmp	r9, r3
   11a5c:	bls	11a10 <__assert_fail@plt+0x4d4>
   11a60:	ldr	r0, [sp, #20]
   11a64:	mov	r1, r4
   11a68:	mov	r2, r3
   11a6c:	add	r5, r0, r3
   11a70:	bl	1126c <memmove@plt>
   11a74:	ldr	r3, [sp, #28]
   11a78:	cmp	r6, r3
   11a7c:	bls	11bf0 <__assert_fail@plt+0x6b4>
   11a80:	ldr	ip, [sp, #48]	; 0x30
   11a84:	mov	r6, #0
   11a88:	str	r6, [sp, #156]	; 0x9c
   11a8c:	cmp	ip, #0
   11a90:	bne	11cdc <__assert_fail@plt+0x7a0>
   11a94:	ldr	ip, [sp, #20]
   11a98:	subs	r4, r5, ip
   11a9c:	bne	11d14 <__assert_fail@plt+0x7d8>
   11aa0:	ldr	r3, [sp, #84]	; 0x54
   11aa4:	ldr	r0, [r3, #4]
   11aa8:	ldr	r1, [sp, #24]
   11aac:	ldr	r2, [sp, #44]	; 0x2c
   11ab0:	bl	14d8c <close_stdout@@Base+0x2690>
   11ab4:	cmn	r0, #1
   11ab8:	beq	11dd8 <__assert_fail@plt+0x89c>
   11abc:	cmp	r0, #0
   11ac0:	beq	11ebc <__assert_fail@plt+0x980>
   11ac4:	ldr	ip, [sp, #24]
   11ac8:	mov	r3, #10
   11acc:	ldr	r6, [sp, #52]	; 0x34
   11ad0:	add	ip, ip, r0
   11ad4:	str	ip, [sp, #28]
   11ad8:	ldr	ip, [sp, #24]
   11adc:	strb	r3, [ip, r0]
   11ae0:	mov	r3, ip
   11ae4:	ldrb	r4, [r3]
   11ae8:	cmp	r4, #10
   11aec:	beq	11a00 <__assert_fail@plt+0x4c4>
   11af0:	ldr	ip, [sp, #40]	; 0x28
   11af4:	cmp	fp, #0
   11af8:	movlt	ip, #0
   11afc:	andge	ip, ip, #1
   11b00:	cmp	ip, #0
   11b04:	bne	11cbc <__assert_fail@plt+0x780>
   11b08:	ldr	ip, [sp, #36]	; 0x24
   11b0c:	cmp	ip, #0
   11b10:	beq	11c74 <__assert_fail@plt+0x738>
   11b14:	ldr	ip, [sp, #60]	; 0x3c
   11b18:	mov	r1, #94	; 0x5e
   11b1c:	mov	r0, #9
   11b20:	mov	lr, #77	; 0x4d
   11b24:	mov	fp, #63	; 0x3f
   11b28:	uxtb	r2, ip
   11b2c:	mov	ip, #45	; 0x2d
   11b30:	b	11b7c <__assert_fail@plt+0x640>
   11b34:	cmp	r4, #126	; 0x7e
   11b38:	strbls	r4, [r5]
   11b3c:	addls	r5, r5, #1
   11b40:	bls	11b78 <__assert_fail@plt+0x63c>
   11b44:	cmp	r4, #127	; 0x7f
   11b48:	beq	11bd4 <__assert_fail@plt+0x698>
   11b4c:	cmp	r4, #159	; 0x9f
   11b50:	strb	lr, [r5]
   11b54:	strb	ip, [r5, #1]
   11b58:	bls	11bc0 <__assert_fail@plt+0x684>
   11b5c:	cmp	r4, #255	; 0xff
   11b60:	strbeq	r1, [r5, #2]
   11b64:	subne	r4, r4, #128	; 0x80
   11b68:	strbeq	fp, [r5, #3]
   11b6c:	strbne	r4, [r5, #2]
   11b70:	addeq	r5, r5, #4
   11b74:	addne	r5, r5, #3
   11b78:	ldrb	r4, [r6], #1
   11b7c:	cmp	r4, #31
   11b80:	bhi	11b34 <__assert_fail@plt+0x5f8>
   11b84:	cmp	r4, #9
   11b88:	movne	r3, #0
   11b8c:	andeq	r3, r2, #1
   11b90:	cmp	r3, #0
   11b94:	strbne	r0, [r5]
   11b98:	addne	r5, r5, #1
   11b9c:	bne	11b78 <__assert_fail@plt+0x63c>
   11ba0:	cmp	r4, #10
   11ba4:	beq	11be8 <__assert_fail@plt+0x6ac>
   11ba8:	mov	r3, r5
   11bac:	add	r4, r4, #64	; 0x40
   11bb0:	strb	r1, [r3], #2
   11bb4:	strb	r4, [r5, #1]
   11bb8:	mov	r5, r3
   11bbc:	b	11b78 <__assert_fail@plt+0x63c>
   11bc0:	sub	r4, r4, #64	; 0x40
   11bc4:	strb	r1, [r5, #2]
   11bc8:	strb	r4, [r5, #3]
   11bcc:	add	r5, r5, #4
   11bd0:	b	11b78 <__assert_fail@plt+0x63c>
   11bd4:	mov	r3, r5
   11bd8:	strb	r1, [r3], #2
   11bdc:	strb	fp, [r5, #1]
   11be0:	mov	r5, r3
   11be4:	b	11b78 <__assert_fail@plt+0x63c>
   11be8:	mvn	fp, #0
   11bec:	b	11a00 <__assert_fail@plt+0x4c4>
   11bf0:	add	fp, fp, #1
   11bf4:	cmp	fp, #0
   11bf8:	ble	11c44 <__assert_fail@plt+0x708>
   11bfc:	cmp	fp, #1
   11c00:	beq	11c20 <__assert_fail@plt+0x6e4>
   11c04:	ldr	ip, [sp, #64]	; 0x40
   11c08:	cmp	ip, #0
   11c0c:	ldrbne	r4, [r6]
   11c10:	movne	fp, #2
   11c14:	addne	r6, r6, #1
   11c18:	bne	11ae8 <__assert_fail@plt+0x5ac>
   11c1c:	mov	fp, #2
   11c20:	ldr	r3, [sp, #72]	; 0x48
   11c24:	cmp	r3, #0
   11c28:	beq	11c44 <__assert_fail@plt+0x708>
   11c2c:	bl	123e0 <__assert_fail@plt+0xea4>
   11c30:	ldr	ip, [sp, #104]	; 0x68
   11c34:	mov	r0, r5
   11c38:	ldr	r1, [ip, #4]
   11c3c:	bl	112b4 <stpcpy@plt>
   11c40:	mov	r5, r0
   11c44:	ldr	ip, [sp, #56]	; 0x38
   11c48:	mov	r1, #10
   11c4c:	cmp	ip, #0
   11c50:	addne	r2, r5, #1
   11c54:	moveq	r2, r5
   11c58:	movne	r3, #36	; 0x24
   11c5c:	strbne	r3, [r5]
   11c60:	mov	r3, r6
   11c64:	add	r5, r2, #1
   11c68:	add	r6, r6, #1
   11c6c:	strb	r1, [r2]
   11c70:	b	11ae4 <__assert_fail@plt+0x5a8>
   11c74:	mov	r1, #94	; 0x5e
   11c78:	mov	r2, #73	; 0x49
   11c7c:	b	11c94 <__assert_fail@plt+0x758>
   11c80:	mov	r3, r5
   11c84:	strb	r1, [r3], #2
   11c88:	strb	r2, [r5, #1]
   11c8c:	mov	r5, r3
   11c90:	ldrb	r4, [r6], #1
   11c94:	cmp	r4, #9
   11c98:	movne	r3, #0
   11c9c:	andeq	r3, sl, #1
   11ca0:	cmp	r3, #0
   11ca4:	bne	11c80 <__assert_fail@plt+0x744>
   11ca8:	cmp	r4, #10
   11cac:	beq	11be8 <__assert_fail@plt+0x6ac>
   11cb0:	strb	r4, [r5]
   11cb4:	add	r5, r5, #1
   11cb8:	b	11c90 <__assert_fail@plt+0x754>
   11cbc:	bl	123e0 <__assert_fail@plt+0xea4>
   11cc0:	ldr	r3, [pc, #1408]	; 12248 <__assert_fail@plt+0xd0c>
   11cc4:	mov	r0, r5
   11cc8:	add	r3, pc, r3
   11ccc:	ldr	r1, [r3, #4]
   11cd0:	bl	112b4 <stpcpy@plt>
   11cd4:	mov	r5, r0
   11cd8:	b	11b08 <__assert_fail@plt+0x5cc>
   11cdc:	ldr	r8, [pc, #1384]	; 1224c <__assert_fail@plt+0xd10>
   11ce0:	movw	r1, #21531	; 0x541b
   11ce4:	add	r2, sp, #156	; 0x9c
   11ce8:	add	r8, pc, r8
   11cec:	ldr	r4, [r8, #4]
   11cf0:	mov	r0, r4
   11cf4:	bl	11320 <ioctl@plt>
   11cf8:	cmp	r0, r6
   11cfc:	blt	11d6c <__assert_fail@plt+0x830>
   11d00:	ldr	r2, [sp, #156]	; 0x9c
   11d04:	cmp	r2, #0
   11d08:	movne	r0, r4
   11d0c:	bne	11aa8 <__assert_fail@plt+0x56c>
   11d10:	b	11a94 <__assert_fail@plt+0x558>
   11d14:	mov	r0, #1
   11d18:	ldr	r1, [sp, #20]
   11d1c:	mov	r2, r4
   11d20:	bl	128f8 <close_stdout@@Base+0x1fc>
   11d24:	cmp	r4, r0
   11d28:	beq	11d58 <__assert_fail@plt+0x81c>
   11d2c:	bl	11428 <__errno_location@plt>
   11d30:	ldr	r1, [pc, #1304]	; 12250 <__assert_fail@plt+0xd14>
   11d34:	mov	r2, #5
   11d38:	add	r1, pc, r1
   11d3c:	ldr	r4, [r0]
   11d40:	mov	r0, #0
   11d44:	bl	112c0 <dcgettext@plt>
   11d48:	mov	r1, r4
   11d4c:	mov	r2, r0
   11d50:	mov	r0, #1
   11d54:	bl	11368 <error@plt>
   11d58:	ldr	r3, [pc, #1268]	; 12254 <__assert_fail@plt+0xd18>
   11d5c:	ldr	r5, [sp, #20]
   11d60:	add	r3, pc, r3
   11d64:	ldr	r0, [r3, #4]
   11d68:	b	11aa8 <__assert_fail@plt+0x56c>
   11d6c:	bl	11428 <__errno_location@plt>
   11d70:	ldr	ip, [r0]
   11d74:	cmp	ip, #25
   11d78:	cmpne	ip, #95	; 0x5f
   11d7c:	movne	r2, #0
   11d80:	moveq	r2, #1
   11d84:	beq	11da8 <__assert_fail@plt+0x86c>
   11d88:	cmp	ip, #22
   11d8c:	beq	11da0 <__assert_fail@plt+0x864>
   11d90:	cmp	ip, #19
   11d94:	beq	11da0 <__assert_fail@plt+0x864>
   11d98:	cmp	ip, #38	; 0x26
   11d9c:	bne	12190 <__assert_fail@plt+0xc54>
   11da0:	str	r2, [sp, #48]	; 0x30
   11da4:	b	11d00 <__assert_fail@plt+0x7c4>
   11da8:	str	r6, [sp, #48]	; 0x30
   11dac:	b	11d00 <__assert_fail@plt+0x7c4>
   11db0:	ldrb	r3, [r0, #1]
   11db4:	cmp	r3, #0
   11db8:	bne	11874 <__assert_fail@plt+0x338>
   11dbc:	ldr	r2, [pc, #1172]	; 12258 <__assert_fail@plt+0xd1c>
   11dc0:	mov	ip, #1
   11dc4:	mov	r4, r3
   11dc8:	str	ip, [sp, #120]	; 0x78
   11dcc:	add	r2, pc, r2
   11dd0:	str	r3, [r2, #4]
   11dd4:	b	11894 <__assert_fail@plt+0x358>
   11dd8:	bl	11428 <__errno_location@plt>
   11ddc:	ldr	r3, [pc, #1144]	; 1225c <__assert_fail@plt+0xd20>
   11de0:	ldr	r2, [pc, #1144]	; 12260 <__assert_fail@plt+0xd24>
   11de4:	add	r3, pc, r3
   11de8:	add	r2, pc, r2
   11dec:	ldr	r3, [r3]
   11df0:	mov	r4, r0
   11df4:	mov	r0, #0
   11df8:	ldr	r1, [r4]
   11dfc:	bl	11368 <error@plt>
   11e00:	ldr	ip, [sp, #20]
   11e04:	subs	r5, r5, ip
   11e08:	bne	11ee0 <__assert_fail@plt+0x9a4>
   11e0c:	ldr	r3, [pc, #1104]	; 12264 <__assert_fail@plt+0xd28>
   11e10:	mov	r4, #0
   11e14:	add	r3, pc, r3
   11e18:	str	fp, [r3, #8]
   11e1c:	ldr	ip, [sp, #76]	; 0x4c
   11e20:	ldr	r0, [sp, #128]	; 0x80
   11e24:	and	ip, r4, ip
   11e28:	str	ip, [sp, #76]	; 0x4c
   11e2c:	bl	11278 <free@plt>
   11e30:	ldr	r0, [sp, #96]	; 0x60
   11e34:	bl	11278 <free@plt>
   11e38:	ldr	r3, [pc, #1064]	; 12268 <__assert_fail@plt+0xd2c>
   11e3c:	add	r3, pc, r3
   11e40:	ldr	r3, [r3]
   11e44:	ldrb	r2, [r3]
   11e48:	cmp	r2, #45	; 0x2d
   11e4c:	beq	11eac <__assert_fail@plt+0x970>
   11e50:	ldr	r4, [pc, #1044]	; 1226c <__assert_fail@plt+0xd30>
   11e54:	add	r4, pc, r4
   11e58:	ldr	r0, [r4, #4]
   11e5c:	bl	11530 <close@plt>
   11e60:	cmp	r0, #0
   11e64:	blt	120fc <__assert_fail@plt+0xbc0>
   11e68:	ldr	ip, [sp, #80]	; 0x50
   11e6c:	add	ip, ip, #1
   11e70:	str	ip, [sp, #80]	; 0x50
   11e74:	ldr	ip, [sp, #92]	; 0x5c
   11e78:	ldr	lr, [sp, #80]	; 0x50
   11e7c:	add	ip, ip, #4
   11e80:	str	ip, [sp, #92]	; 0x5c
   11e84:	ldr	ip, [sp, #68]	; 0x44
   11e88:	cmp	ip, lr
   11e8c:	bgt	11840 <__assert_fail@plt+0x304>
   11e90:	ldr	ip, [sp, #120]	; 0x78
   11e94:	cmp	ip, #0
   11e98:	bne	12120 <__assert_fail@plt+0xbe4>
   11e9c:	ldr	ip, [sp, #76]	; 0x4c
   11ea0:	rsbs	r0, ip, #1
   11ea4:	movcc	r0, #0
   11ea8:	bl	113e0 <exit@plt>
   11eac:	ldrb	r3, [r3, #1]
   11eb0:	cmp	r3, #0
   11eb4:	beq	11e68 <__assert_fail@plt+0x92c>
   11eb8:	b	11e50 <__assert_fail@plt+0x914>
   11ebc:	ldr	ip, [sp, #20]
   11ec0:	mov	r4, r0
   11ec4:	subs	r5, r5, ip
   11ec8:	bne	11f24 <__assert_fail@plt+0x9e8>
   11ecc:	ldr	r3, [pc, #924]	; 12270 <__assert_fail@plt+0xd34>
   11ed0:	mov	r4, #1
   11ed4:	add	r3, pc, r3
   11ed8:	str	fp, [r3, #8]
   11edc:	b	11e1c <__assert_fail@plt+0x8e0>
   11ee0:	mov	r1, ip
   11ee4:	mov	r0, #1
   11ee8:	mov	r2, r5
   11eec:	bl	128f8 <close_stdout@@Base+0x1fc>
   11ef0:	cmp	r5, r0
   11ef4:	beq	11e0c <__assert_fail@plt+0x8d0>
   11ef8:	ldr	r1, [pc, #884]	; 12274 <__assert_fail@plt+0xd38>
   11efc:	mov	r2, #5
   11f00:	mov	r0, #0
   11f04:	ldr	r4, [r4]
   11f08:	add	r1, pc, r1
   11f0c:	bl	112c0 <dcgettext@plt>
   11f10:	mov	r1, r4
   11f14:	mov	r2, r0
   11f18:	mov	r0, #1
   11f1c:	bl	11368 <error@plt>
   11f20:	b	11e0c <__assert_fail@plt+0x8d0>
   11f24:	mov	r1, ip
   11f28:	mov	r0, #1
   11f2c:	mov	r2, r5
   11f30:	bl	128f8 <close_stdout@@Base+0x1fc>
   11f34:	cmp	r5, r0
   11f38:	beq	11ecc <__assert_fail@plt+0x990>
   11f3c:	bl	11428 <__errno_location@plt>
   11f40:	ldr	r1, [pc, #816]	; 12278 <__assert_fail@plt+0xd3c>
   11f44:	mov	r2, #5
   11f48:	add	r1, pc, r1
   11f4c:	ldr	r5, [r0]
   11f50:	mov	r0, r4
   11f54:	bl	112c0 <dcgettext@plt>
   11f58:	mov	r1, r5
   11f5c:	mov	r2, r0
   11f60:	mov	r0, #1
   11f64:	bl	11368 <error@plt>
   11f68:	b	11ecc <__assert_fail@plt+0x990>
   11f6c:	add	r1, sp, #256	; 0x100
   11f70:	ldrd	r2, [r1]
   11f74:	ldrd	r0, [sp, #144]	; 0x90
   11f78:	cmp	r3, r1
   11f7c:	cmpeq	r2, r0
   11f80:	bne	11904 <__assert_fail@plt+0x3c8>
   11f84:	ldr	r4, [pc, #752]	; 1227c <__assert_fail@plt+0xd40>
   11f88:	add	r4, pc, r4
   11f8c:	ldr	r3, [r4, #4]
   11f90:	cmp	r3, #0
   11f94:	beq	11904 <__assert_fail@plt+0x3c8>
   11f98:	ldr	r1, [pc, #736]	; 12280 <__assert_fail@plt+0xd44>
   11f9c:	mov	r0, #0
   11fa0:	mov	r2, #5
   11fa4:	str	r0, [sp, #76]	; 0x4c
   11fa8:	add	r1, pc, r1
   11fac:	bl	112c0 <dcgettext@plt>
   11fb0:	ldr	r3, [r4]
   11fb4:	mov	r2, r0
   11fb8:	mov	r0, #0
   11fbc:	mov	r1, r0
   11fc0:	bl	11368 <error@plt>
   11fc4:	b	11e38 <__assert_fail@plt+0x8fc>
   11fc8:	bl	11428 <__errno_location@plt>
   11fcc:	ldr	r3, [pc, #688]	; 12284 <__assert_fail@plt+0xd48>
   11fd0:	add	r3, pc, r3
   11fd4:	ldr	r3, [r3]
   11fd8:	mov	r2, r0
   11fdc:	mov	r0, #0
   11fe0:	ldr	r1, [r2]
   11fe4:	ldr	r2, [pc, #668]	; 12288 <__assert_fail@plt+0xd4c>
   11fe8:	str	r0, [sp, #76]	; 0x4c
   11fec:	add	r2, pc, r2
   11ff0:	bl	11368 <error@plt>
   11ff4:	b	11e38 <__assert_fail@plt+0x8fc>
   11ff8:	ldr	ip, [sp, #88]	; 0x58
   11ffc:	ldr	r5, [sp, #44]	; 0x2c
   12000:	sub	r4, ip, #1
   12004:	ldr	r7, [pc, #640]	; 1228c <__assert_fail@plt+0xd50>
   12008:	cmp	r5, r9
   1200c:	movcc	r5, r9
   12010:	add	r0, r5, r4
   12014:	add	r7, pc, r7
   12018:	bl	159cc <close_stdout@@Base+0x32d0>
   1201c:	ldr	r1, [sp, #88]	; 0x58
   12020:	add	r4, r0, r4
   12024:	str	r0, [sp, #96]	; 0x60
   12028:	mov	r0, r4
   1202c:	bl	18720 <close_stdout@@Base+0x6024>
   12030:	rsb	r4, r1, r4
   12034:	b	12058 <__assert_fail@plt+0xb1c>
   12038:	cmp	r0, #0
   1203c:	beq	1209c <__assert_fail@plt+0xb60>
   12040:	mov	r0, #1
   12044:	mov	r1, r4
   12048:	mov	r2, r8
   1204c:	bl	128f8 <close_stdout@@Base+0x1fc>
   12050:	cmp	r8, r0
   12054:	bne	120d0 <__assert_fail@plt+0xb94>
   12058:	ldr	ip, [sp, #108]	; 0x6c
   1205c:	mov	r1, r4
   12060:	mov	r2, r5
   12064:	ldr	r0, [ip, #4]
   12068:	bl	14d8c <close_stdout@@Base+0x2690>
   1206c:	cmn	r0, #1
   12070:	mov	r8, r0
   12074:	bne	12038 <__assert_fail@plt+0xafc>
   12078:	bl	11428 <__errno_location@plt>
   1207c:	ldr	ip, [sp, #108]	; 0x6c
   12080:	ldr	r2, [pc, #520]	; 12290 <__assert_fail@plt+0xd54>
   12084:	ldr	r3, [ip]
   12088:	add	r2, pc, r2
   1208c:	ldr	r1, [r0]
   12090:	mov	r0, #0
   12094:	mov	r6, r0
   12098:	bl	11368 <error@plt>
   1209c:	ldr	ip, [sp, #76]	; 0x4c
   120a0:	and	ip, r6, ip
   120a4:	str	ip, [sp, #76]	; 0x4c
   120a8:	b	11e30 <__assert_fail@plt+0x8f4>
   120ac:	bl	11428 <__errno_location@plt>
   120b0:	ldr	r2, [pc, #476]	; 12294 <__assert_fail@plt+0xd58>
   120b4:	ldr	r3, [r5]
   120b8:	add	r2, pc, r2
   120bc:	ldr	r1, [r0]
   120c0:	mov	r0, #0
   120c4:	str	r0, [sp, #76]	; 0x4c
   120c8:	bl	11368 <error@plt>
   120cc:	b	11e68 <__assert_fail@plt+0x92c>
   120d0:	bl	11428 <__errno_location@plt>
   120d4:	mov	r1, r7
   120d8:	mov	r2, #5
   120dc:	ldr	r8, [r0]
   120e0:	mov	r0, #0
   120e4:	bl	112c0 <dcgettext@plt>
   120e8:	mov	r1, r8
   120ec:	mov	r2, r0
   120f0:	mov	r0, #1
   120f4:	bl	11368 <error@plt>
   120f8:	b	12058 <__assert_fail@plt+0xb1c>
   120fc:	bl	11428 <__errno_location@plt>
   12100:	ldr	r2, [pc, #400]	; 12298 <__assert_fail@plt+0xd5c>
   12104:	ldr	r3, [r4]
   12108:	add	r2, pc, r2
   1210c:	ldr	r1, [r0]
   12110:	mov	r0, #0
   12114:	str	r0, [sp, #76]	; 0x4c
   12118:	bl	11368 <error@plt>
   1211c:	b	11e68 <__assert_fail@plt+0x92c>
   12120:	mov	r0, #0
   12124:	bl	11530 <close@plt>
   12128:	cmp	r0, #0
   1212c:	bge	11e9c <__assert_fail@plt+0x960>
   12130:	bl	11428 <__errno_location@plt>
   12134:	ldr	r1, [pc, #352]	; 1229c <__assert_fail@plt+0xd60>
   12138:	mov	r2, #5
   1213c:	add	r1, pc, r1
   12140:	ldr	r4, [r0]
   12144:	mov	r0, #0
   12148:	bl	112c0 <dcgettext@plt>
   1214c:	mov	r1, r4
   12150:	mov	r2, r0
   12154:	mov	r0, #1
   12158:	bl	11368 <error@plt>
   1215c:	b	11e9c <__assert_fail@plt+0x960>
   12160:	bl	11428 <__errno_location@plt>
   12164:	ldr	r1, [pc, #308]	; 122a0 <__assert_fail@plt+0xd64>
   12168:	mov	r2, #5
   1216c:	add	r1, pc, r1
   12170:	ldr	r7, [r0]
   12174:	mov	r0, r5
   12178:	bl	112c0 <dcgettext@plt>
   1217c:	mov	r1, r7
   12180:	mov	r2, r0
   12184:	mov	r0, #1
   12188:	bl	11368 <error@plt>
   1218c:	b	1177c <__assert_fail@plt+0x240>
   12190:	ldr	r1, [pc, #268]	; 122a4 <__assert_fail@plt+0xd68>
   12194:	mov	r4, r2
   12198:	mov	r0, r2
   1219c:	mov	r2, #5
   121a0:	add	r1, pc, r1
   121a4:	str	ip, [sp, #16]
   121a8:	bl	112c0 <dcgettext@plt>
   121ac:	mov	r5, r0
   121b0:	ldr	r0, [r8]
   121b4:	bl	14d80 <close_stdout@@Base+0x2684>
   121b8:	ldr	ip, [sp, #16]
   121bc:	mov	r2, r5
   121c0:	mov	r1, ip
   121c4:	mov	r3, r0
   121c8:	mov	r0, r4
   121cc:	bl	11368 <error@plt>
   121d0:	str	fp, [r8, #8]
   121d4:	b	11e1c <__assert_fail@plt+0x8e0>
   121d8:	ldr	r3, [pc, #200]	; 122a8 <__assert_fail@plt+0xd6c>
   121dc:	ldr	r0, [pc, r3]
   121e0:	b	11868 <__assert_fail@plt+0x32c>
   121e4:	muleq	r1, r8, sl
   121e8:	andeq	r0, r0, r4, lsr r1
   121ec:	andeq	r7, r0, ip, asr #12
   121f0:	andeq	r7, r0, r8, asr r7
   121f4:	muleq	r1, r8, r8
   121f8:	andeq	r7, r0, r4, ror #13
   121fc:	ldrdeq	r7, [r0], -r8
   12200:	andeq	r0, r0, r4, asr #2
   12204:	andeq	r0, r0, r0, asr r1
   12208:	andeq	r0, r0, ip, lsr r1
   1220c:	strdeq	r7, [r0], -r8
   12210:	andeq	r7, r0, r0, lsl #12
   12214:	andeq	r7, r0, r4, lsl #12
   12218:	andeq	r7, r0, ip, ror #11
   1221c:	andeq	r7, r0, r4, ror #9
   12220:	andeq	r0, r0, r8, lsr r1
   12224:	andeq	r8, r1, ip, asr #19
   12228:	andeq	r7, r0, ip, lsl #10
   1222c:	andeq	r8, r1, r8, lsr #19
   12230:	andeq	r8, r1, r0, ror r9
   12234:	andeq	r8, r1, ip, asr #18
   12238:	andeq	r7, r0, r8, ror #7
   1223c:	andeq	r8, r1, r4, ror #15
   12240:	andeq	r8, r1, ip, lsr #16
   12244:	andeq	r8, r1, r0, lsl #16
   12248:			; <UNDEFINED> instruction: 0x000184b0
   1224c:	andeq	r8, r1, r4, ror #9
   12250:	andeq	r7, r0, r0
   12254:	andeq	r8, r1, ip, ror #8
   12258:	andeq	r8, r1, r0, lsl #8
   1225c:	andeq	r8, r1, r8, ror #7
   12260:	andeq	r7, r0, r8
   12264:			; <UNDEFINED> instruction: 0x000183b8
   12268:	muleq	r1, r0, r3
   1226c:	andeq	r8, r1, r8, ror r3
   12270:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12274:	andeq	r6, r0, r0, lsr lr
   12278:	strdeq	r6, [r0], -r0
   1227c:	andeq	r8, r1, r4, asr #4
   12280:	andeq	r6, r0, r0, ror sp
   12284:	strdeq	r8, [r1], -ip
   12288:	andeq	r6, r0, r4, lsl #28
   1228c:	andeq	r6, r0, r4, lsr #26
   12290:	andeq	r6, r0, r8, ror #26
   12294:	andeq	r6, r0, r8, lsr sp
   12298:	andeq	r6, r0, r8, ror #25
   1229c:	andeq	r6, r0, r0, lsr #24
   122a0:	muleq	r0, r8, fp
   122a4:	andeq	r6, r0, r4, lsr #23
   122a8:	strdeq	r7, [r1], -r0
   122ac:	mov	fp, #0
   122b0:	mov	lr, #0
   122b4:	pop	{r1}		; (ldr r1, [sp], #4)
   122b8:	mov	r2, sp
   122bc:	push	{r2}		; (str r2, [sp, #-4]!)
   122c0:	push	{r0}		; (str r0, [sp, #-4]!)
   122c4:	ldr	ip, [pc, #16]	; 122dc <__assert_fail@plt+0xda0>
   122c8:	push	{ip}		; (str ip, [sp, #-4]!)
   122cc:	ldr	r0, [pc, #12]	; 122e0 <__assert_fail@plt+0xda4>
   122d0:	ldr	r3, [pc, #12]	; 122e4 <__assert_fail@plt+0xda8>
   122d4:	bl	113a4 <__libc_start_main@plt>
   122d8:	bl	11524 <abort@plt>
   122dc:			; <UNDEFINED> instruction: 0x000187b4
   122e0:	andeq	r1, r1, r8, asr #10
   122e4:	andeq	r8, r1, r0, asr r7
   122e8:	ldr	r3, [pc, #20]	; 12304 <__assert_fail@plt+0xdc8>
   122ec:	ldr	r2, [pc, #20]	; 12308 <__assert_fail@plt+0xdcc>
   122f0:	add	r3, pc, r3
   122f4:	ldr	r2, [r3, r2]
   122f8:	cmp	r2, #0
   122fc:	bxeq	lr
   12300:	b	113bc <__gmon_start__@plt>
   12304:	andeq	r7, r1, r8, lsl #26
   12308:	andeq	r0, r0, r8, asr #2
   1230c:	push	{r3, lr}
   12310:	movw	r0, #41424	; 0xa1d0
   12314:	ldr	r3, [pc, #36]	; 12340 <__assert_fail@plt+0xe04>
   12318:	movt	r0, #2
   1231c:	rsb	r3, r0, r3
   12320:	cmp	r3, #6
   12324:	popls	{r3, pc}
   12328:	movw	r3, #0
   1232c:	movt	r3, #0
   12330:	cmp	r3, #0
   12334:	popeq	{r3, pc}
   12338:	blx	r3
   1233c:	pop	{r3, pc}
   12340:	ldrdeq	sl, [r2], -r3
   12344:	push	{r3, lr}
   12348:	movw	r0, #41424	; 0xa1d0
   1234c:	movw	r3, #41424	; 0xa1d0
   12350:	movt	r0, #2
   12354:	movt	r3, #2
   12358:	rsb	r3, r0, r3
   1235c:	asr	r3, r3, #2
   12360:	add	r3, r3, r3, lsr #31
   12364:	asrs	r1, r3, #1
   12368:	popeq	{r3, pc}
   1236c:	movw	r2, #0
   12370:	movt	r2, #0
   12374:	cmp	r2, #0
   12378:	popeq	{r3, pc}
   1237c:	blx	r2
   12380:	pop	{r3, pc}
   12384:	push	{r4, lr}
   12388:	movw	r4, #41424	; 0xa1d0
   1238c:	movt	r4, #2
   12390:	ldrb	r3, [r4]
   12394:	cmp	r3, #0
   12398:	popne	{r4, pc}
   1239c:	bl	1230c <__assert_fail@plt+0xdd0>
   123a0:	mov	r3, #1
   123a4:	strb	r3, [r4]
   123a8:	pop	{r4, pc}
   123ac:	movw	r0, #40512	; 0x9e40
   123b0:	movt	r0, #2
   123b4:	push	{r3, lr}
   123b8:	ldr	r3, [r0]
   123bc:	cmp	r3, #0
   123c0:	beq	123d8 <__assert_fail@plt+0xe9c>
   123c4:	movw	r3, #0
   123c8:	movt	r3, #0
   123cc:	cmp	r3, #0
   123d0:	beq	123d8 <__assert_fail@plt+0xe9c>
   123d4:	blx	r3
   123d8:	pop	{r3, lr}
   123dc:	b	12344 <__assert_fail@plt+0xe08>
   123e0:	ldr	r2, [pc, #144]	; 12478 <__assert_fail@plt+0xf3c>
   123e4:	mov	ip, #48	; 0x30
   123e8:	ldr	r3, [pc, #140]	; 1247c <__assert_fail@plt+0xf40>
   123ec:	add	r2, pc, r2
   123f0:	add	r3, pc, r3
   123f4:	ldr	r1, [r2]
   123f8:	add	r3, r3, #17
   123fc:	b	1240c <__assert_fail@plt+0xed0>
   12400:	cmp	r1, r3
   12404:	strb	ip, [r3, #1]
   12408:	bhi	12428 <__assert_fail@plt+0xeec>
   1240c:	mov	r0, r3
   12410:	ldrb	r2, [r3], #-1
   12414:	cmp	r2, #56	; 0x38
   12418:	bhi	12400 <__assert_fail@plt+0xec4>
   1241c:	add	r2, r2, #1
   12420:	strb	r2, [r0]
   12424:	bx	lr
   12428:	ldr	r3, [pc, #80]	; 12480 <__assert_fail@plt+0xf44>
   1242c:	add	r3, pc, r3
   12430:	cmp	r1, r3
   12434:	movls	r2, #62	; 0x3e
   12438:	strbls	r2, [r3]
   1243c:	bls	1245c <__assert_fail@plt+0xf20>
   12440:	ldr	r2, [pc, #60]	; 12484 <__assert_fail@plt+0xf48>
   12444:	sub	r3, r1, #1
   12448:	mov	r0, #49	; 0x31
   1244c:	strb	r0, [r1, #-1]
   12450:	add	r2, pc, r2
   12454:	mov	r1, r3
   12458:	str	r3, [r2]
   1245c:	ldr	r3, [pc, #36]	; 12488 <__assert_fail@plt+0xf4c>
   12460:	add	r3, pc, r3
   12464:	ldr	r2, [r3, #4]
   12468:	cmp	r2, r1
   1246c:	subhi	r2, r2, #1
   12470:	strhi	r2, [r3, #4]
   12474:	bx	lr
   12478:	andeq	r7, r1, ip, lsl #27
   1247c:	andeq	r7, r1, r4, ror sp
   12480:	andeq	r7, r1, r8, lsr sp
   12484:	andeq	r7, r1, r8, lsr #26
   12488:	andeq	r7, r1, r8, lsl sp
   1248c:	push	{r4, r5, r6, lr}
   12490:	subs	r4, r0, #0
   12494:	ldr	r5, [pc, #496]	; 1268c <__assert_fail@plt+0x1150>
   12498:	add	r5, pc, r5
   1249c:	beq	124e4 <__assert_fail@plt+0xfa8>
   124a0:	ldr	r3, [pc, #488]	; 12690 <__assert_fail@plt+0x1154>
   124a4:	mov	r2, #5
   124a8:	ldr	r1, [pc, #484]	; 12694 <__assert_fail@plt+0x1158>
   124ac:	mov	r0, #0
   124b0:	ldr	r3, [r5, r3]
   124b4:	add	r1, pc, r1
   124b8:	ldr	r6, [r3]
   124bc:	bl	112c0 <dcgettext@plt>
   124c0:	ldr	r3, [pc, #464]	; 12698 <__assert_fail@plt+0x115c>
   124c4:	mov	r1, #1
   124c8:	ldr	r3, [r5, r3]
   124cc:	ldr	r3, [r3]
   124d0:	mov	r2, r0
   124d4:	mov	r0, r6
   124d8:	bl	114a0 <__fprintf_chk@plt>
   124dc:	mov	r0, r4
   124e0:	bl	113e0 <exit@plt>
   124e4:	ldr	r1, [pc, #432]	; 1269c <__assert_fail@plt+0x1160>
   124e8:	mov	r2, #5
   124ec:	add	r1, pc, r1
   124f0:	bl	112c0 <dcgettext@plt>
   124f4:	ldr	r3, [pc, #412]	; 12698 <__assert_fail@plt+0x115c>
   124f8:	ldr	r6, [r5, r3]
   124fc:	ldr	r2, [r6]
   12500:	mov	r1, r0
   12504:	mov	r0, #1
   12508:	bl	1147c <__printf_chk@plt>
   1250c:	ldr	r1, [pc, #396]	; 126a0 <__assert_fail@plt+0x1164>
   12510:	mov	r2, #5
   12514:	mov	r0, r4
   12518:	add	r1, pc, r1
   1251c:	bl	112c0 <dcgettext@plt>
   12520:	ldr	r3, [pc, #380]	; 126a4 <__assert_fail@plt+0x1168>
   12524:	ldr	r5, [r5, r3]
   12528:	ldr	r1, [r5]
   1252c:	bl	11200 <fputs_unlocked@plt>
   12530:	ldr	r1, [pc, #368]	; 126a8 <__assert_fail@plt+0x116c>
   12534:	mov	r2, #5
   12538:	mov	r0, r4
   1253c:	add	r1, pc, r1
   12540:	bl	112c0 <dcgettext@plt>
   12544:	ldr	r1, [r5]
   12548:	bl	11200 <fputs_unlocked@plt>
   1254c:	ldr	r1, [pc, #344]	; 126ac <__assert_fail@plt+0x1170>
   12550:	mov	r2, #5
   12554:	mov	r0, r4
   12558:	add	r1, pc, r1
   1255c:	bl	112c0 <dcgettext@plt>
   12560:	ldr	r1, [r5]
   12564:	bl	11200 <fputs_unlocked@plt>
   12568:	ldr	r1, [pc, #320]	; 126b0 <__assert_fail@plt+0x1174>
   1256c:	mov	r2, #5
   12570:	mov	r0, r4
   12574:	add	r1, pc, r1
   12578:	bl	112c0 <dcgettext@plt>
   1257c:	ldr	r1, [r5]
   12580:	bl	11200 <fputs_unlocked@plt>
   12584:	ldr	r1, [pc, #296]	; 126b4 <__assert_fail@plt+0x1178>
   12588:	mov	r2, #5
   1258c:	mov	r0, r4
   12590:	add	r1, pc, r1
   12594:	bl	112c0 <dcgettext@plt>
   12598:	ldr	r1, [r5]
   1259c:	bl	11200 <fputs_unlocked@plt>
   125a0:	ldr	r1, [pc, #272]	; 126b8 <__assert_fail@plt+0x117c>
   125a4:	mov	r2, #5
   125a8:	mov	r0, r4
   125ac:	add	r1, pc, r1
   125b0:	bl	112c0 <dcgettext@plt>
   125b4:	ldr	r2, [r6]
   125b8:	mov	r3, r2
   125bc:	mov	r1, r0
   125c0:	mov	r0, #1
   125c4:	bl	1147c <__printf_chk@plt>
   125c8:	ldr	r1, [pc, #236]	; 126bc <__assert_fail@plt+0x1180>
   125cc:	mov	r2, #5
   125d0:	mov	r0, r4
   125d4:	add	r1, pc, r1
   125d8:	bl	112c0 <dcgettext@plt>
   125dc:	ldr	r2, [pc, #220]	; 126c0 <__assert_fail@plt+0x1184>
   125e0:	ldr	r3, [pc, #220]	; 126c4 <__assert_fail@plt+0x1188>
   125e4:	add	r2, pc, r2
   125e8:	add	r3, pc, r3
   125ec:	mov	r1, r0
   125f0:	mov	r0, #1
   125f4:	bl	1147c <__printf_chk@plt>
   125f8:	mov	r0, #5
   125fc:	mov	r1, r4
   12600:	bl	114e8 <setlocale@plt>
   12604:	cmp	r0, #0
   12608:	beq	12624 <__assert_fail@plt+0x10e8>
   1260c:	ldr	r1, [pc, #180]	; 126c8 <__assert_fail@plt+0x118c>
   12610:	mov	r2, #3
   12614:	add	r1, pc, r1
   12618:	bl	11518 <strncmp@plt>
   1261c:	cmp	r0, #0
   12620:	bne	12658 <__assert_fail@plt+0x111c>
   12624:	ldr	r1, [pc, #160]	; 126cc <__assert_fail@plt+0x1190>
   12628:	mov	r2, #5
   1262c:	mov	r0, #0
   12630:	add	r1, pc, r1
   12634:	bl	112c0 <dcgettext@plt>
   12638:	mov	r5, r0
   1263c:	ldr	r0, [r6]
   12640:	bl	12814 <close_stdout@@Base+0x118>
   12644:	mov	r1, r5
   12648:	mov	r2, r0
   1264c:	mov	r0, #1
   12650:	bl	1147c <__printf_chk@plt>
   12654:	b	124dc <__assert_fail@plt+0xfa0>
   12658:	ldr	r1, [pc, #112]	; 126d0 <__assert_fail@plt+0x1194>
   1265c:	mov	r2, #5
   12660:	mov	r0, r4
   12664:	add	r1, pc, r1
   12668:	bl	112c0 <dcgettext@plt>
   1266c:	mov	r5, r0
   12670:	ldr	r0, [r6]
   12674:	bl	12814 <close_stdout@@Base+0x118>
   12678:	mov	r1, r5
   1267c:	mov	r2, r0
   12680:	mov	r0, #1
   12684:	bl	1147c <__printf_chk@plt>
   12688:	b	12624 <__assert_fail@plt+0x10e8>
   1268c:	andeq	r7, r1, r0, ror #22
   12690:	andeq	r0, r0, r0, asr #2
   12694:	andeq	r6, r0, r8, lsr r3
   12698:	andeq	r0, r0, ip, asr r1
   1269c:	andeq	r6, r0, r8, lsr #6
   126a0:	andeq	r6, r0, r0, lsr #6
   126a4:	andeq	r0, r0, r0, asr r1
   126a8:	andeq	r6, r0, r8, lsl #9
   126ac:	andeq	r6, r0, r0, asr #10
   126b0:	andeq	r6, r0, r4, asr r5
   126b4:	andeq	r6, r0, r0, ror r5
   126b8:	andeq	r6, r0, ip, lsl #11
   126bc:	strdeq	r6, [r0], -r0
   126c0:	strdeq	r6, [r0], -r8
   126c4:	andeq	r6, r0, r4, lsl #12
   126c8:	andeq	r6, r0, r0, lsl #12
   126cc:	andeq	r6, r0, r0, lsr r6
   126d0:			; <UNDEFINED> instruction: 0x000065b4
   126d4:	ldr	r3, [pc, #8]	; 126e4 <__assert_fail@plt+0x11a8>
   126d8:	add	r3, pc, r3
   126dc:	str	r0, [r3]
   126e0:	bx	lr
   126e4:	andeq	r7, r1, r0, lsl #22
   126e8:	ldr	r3, [pc, #8]	; 126f8 <__assert_fail@plt+0x11bc>
   126ec:	add	r3, pc, r3
   126f0:	strb	r0, [r3, #4]
   126f4:	bx	lr
   126f8:	andeq	r7, r1, ip, ror #21

000126fc <close_stdout@@Base>:
   126fc:	push	{r4, r5, r6, r7, lr}
   12700:	sub	sp, sp, #12
   12704:	ldr	r4, [pc, #228]	; 127f0 <close_stdout@@Base+0xf4>
   12708:	ldr	r3, [pc, #228]	; 127f4 <close_stdout@@Base+0xf8>
   1270c:	add	r4, pc, r4
   12710:	ldr	r3, [r4, r3]
   12714:	ldr	r0, [r3]
   12718:	bl	15d3c <close_stdout@@Base+0x3640>
   1271c:	cmp	r0, #0
   12720:	beq	12748 <close_stdout@@Base+0x4c>
   12724:	ldr	r3, [pc, #204]	; 127f8 <close_stdout@@Base+0xfc>
   12728:	add	r3, pc, r3
   1272c:	ldrb	r3, [r3, #4]
   12730:	cmp	r3, #0
   12734:	beq	12768 <close_stdout@@Base+0x6c>
   12738:	bl	11428 <__errno_location@plt>
   1273c:	ldr	r3, [r0]
   12740:	cmp	r3, #32
   12744:	bne	12768 <close_stdout@@Base+0x6c>
   12748:	ldr	r3, [pc, #172]	; 127fc <close_stdout@@Base+0x100>
   1274c:	ldr	r3, [r4, r3]
   12750:	ldr	r0, [r3]
   12754:	bl	15d3c <close_stdout@@Base+0x3640>
   12758:	cmp	r0, #0
   1275c:	bne	127bc <close_stdout@@Base+0xc0>
   12760:	add	sp, sp, #12
   12764:	pop	{r4, r5, r6, r7, pc}
   12768:	ldr	r1, [pc, #144]	; 12800 <close_stdout@@Base+0x104>
   1276c:	mov	r0, #0
   12770:	mov	r2, #5
   12774:	add	r1, pc, r1
   12778:	bl	112c0 <dcgettext@plt>
   1277c:	ldr	r3, [pc, #128]	; 12804 <close_stdout@@Base+0x108>
   12780:	ldr	r5, [pc, r3]
   12784:	cmp	r5, #0
   12788:	mov	r6, r0
   1278c:	beq	127cc <close_stdout@@Base+0xd0>
   12790:	bl	11428 <__errno_location@plt>
   12794:	ldr	r7, [r0]
   12798:	mov	r0, r5
   1279c:	bl	14c2c <close_stdout@@Base+0x2530>
   127a0:	ldr	r2, [pc, #96]	; 12808 <close_stdout@@Base+0x10c>
   127a4:	str	r6, [sp]
   127a8:	mov	r1, r7
   127ac:	add	r2, pc, r2
   127b0:	mov	r3, r0
   127b4:	mov	r0, #0
   127b8:	bl	11368 <error@plt>
   127bc:	ldr	r3, [pc, #72]	; 1280c <close_stdout@@Base+0x110>
   127c0:	ldr	r3, [r4, r3]
   127c4:	ldr	r0, [r3]
   127c8:	bl	11284 <_exit@plt>
   127cc:	bl	11428 <__errno_location@plt>
   127d0:	ldr	r2, [pc, #56]	; 12810 <close_stdout@@Base+0x114>
   127d4:	add	r2, pc, r2
   127d8:	mov	r3, r0
   127dc:	mov	r0, r5
   127e0:	ldr	r1, [r3]
   127e4:	mov	r3, r6
   127e8:	bl	11368 <error@plt>
   127ec:	b	127bc <close_stdout@@Base+0xc0>
   127f0:	andeq	r7, r1, ip, ror #17
   127f4:	andeq	r0, r0, r0, asr r1
   127f8:			; <UNDEFINED> instruction: 0x00017ab0
   127fc:	andeq	r0, r0, r0, asr #2
   12800:	andeq	r6, r0, r4, asr #11
   12804:	andeq	r7, r1, r8, asr sl
   12808:	andeq	r6, r0, r0, asr #12
   1280c:	andeq	r0, r0, r4, asr r1
   12810:	andeq	r6, r0, ip, lsl r6
   12814:	ldrb	r3, [r0]
   12818:	cmp	r3, #47	; 0x2f
   1281c:	bne	12838 <close_stdout@@Base+0x13c>
   12820:	add	r2, r0, #1
   12824:	mov	r0, r2
   12828:	add	r2, r2, #1
   1282c:	ldrb	r3, [r0]
   12830:	cmp	r3, #47	; 0x2f
   12834:	beq	12824 <close_stdout@@Base+0x128>
   12838:	cmp	r3, #0
   1283c:	bxeq	lr
   12840:	mov	r2, r0
   12844:	mov	r1, #0
   12848:	cmp	r3, #47	; 0x2f
   1284c:	moveq	r1, #1
   12850:	beq	12860 <close_stdout@@Base+0x164>
   12854:	cmp	r1, #0
   12858:	movne	r0, r2
   1285c:	movne	r1, #0
   12860:	ldrb	r3, [r2, #1]!
   12864:	cmp	r3, #0
   12868:	bne	12848 <close_stdout@@Base+0x14c>
   1286c:	bx	lr
   12870:	push	{r4, lr}
   12874:	mov	r4, r0
   12878:	bl	113f8 <strlen@plt>
   1287c:	cmp	r0, #1
   12880:	popls	{r4, pc}
   12884:	sub	r3, r0, #1
   12888:	ldrb	r2, [r4, r3]
   1288c:	cmp	r2, #47	; 0x2f
   12890:	popne	{r4, pc}
   12894:	mov	r0, r3
   12898:	cmp	r0, #1
   1289c:	sub	r3, r3, #1
   128a0:	beq	128b4 <close_stdout@@Base+0x1b8>
   128a4:	ldrb	r2, [r4, r3]
   128a8:	cmp	r2, #47	; 0x2f
   128ac:	popne	{r4, pc}
   128b0:	b	12894 <close_stdout@@Base+0x198>
   128b4:	pop	{r4, pc}
   128b8:	b	1123c <posix_fadvise64@plt>
   128bc:	cmp	r0, #0
   128c0:	push	{r4, r5, r6, lr}
   128c4:	mov	r6, r1
   128c8:	sub	sp, sp, #16
   128cc:	beq	128f0 <close_stdout@@Base+0x1f4>
   128d0:	mov	r4, #0
   128d4:	mov	r5, #0
   128d8:	bl	11494 <fileno@plt>
   128dc:	str	r6, [sp, #8]
   128e0:	mov	r2, r4
   128e4:	mov	r3, r5
   128e8:	strd	r4, [sp]
   128ec:	bl	128b8 <close_stdout@@Base+0x1bc>
   128f0:	add	sp, sp, #16
   128f4:	pop	{r4, r5, r6, pc}
   128f8:	push	{r3, r4, r5, r6, r7, lr}
   128fc:	subs	r4, r2, #0
   12900:	mov	r7, r0
   12904:	mov	r5, r1
   12908:	beq	12960 <close_stdout@@Base+0x264>
   1290c:	mov	r6, #0
   12910:	b	12928 <close_stdout@@Base+0x22c>
   12914:	cmp	r0, #0
   12918:	beq	1294c <close_stdout@@Base+0x250>
   1291c:	subs	r4, r4, r0
   12920:	add	r6, r6, r0
   12924:	beq	12944 <close_stdout@@Base+0x248>
   12928:	mov	r1, r5
   1292c:	mov	r0, r7
   12930:	mov	r2, r4
   12934:	bl	14dec <close_stdout@@Base+0x26f0>
   12938:	cmn	r0, #1
   1293c:	add	r5, r5, r0
   12940:	bne	12914 <close_stdout@@Base+0x218>
   12944:	mov	r0, r6
   12948:	pop	{r3, r4, r5, r6, r7, pc}
   1294c:	bl	11428 <__errno_location@plt>
   12950:	mov	r3, #28
   12954:	str	r3, [r0]
   12958:	mov	r0, r6
   1295c:	pop	{r3, r4, r5, r6, r7, pc}
   12960:	mov	r6, r4
   12964:	b	12944 <close_stdout@@Base+0x248>
   12968:	push	{r3, r4, r5, r6, r7, lr}
   1296c:	subs	r4, r0, #0
   12970:	ldr	r5, [pc, #172]	; 12a24 <close_stdout@@Base+0x328>
   12974:	add	r5, pc, r5
   12978:	beq	12a00 <close_stdout@@Base+0x304>
   1297c:	mov	r1, #47	; 0x2f
   12980:	bl	114f4 <strrchr@plt>
   12984:	subs	r6, r0, #0
   12988:	beq	129e4 <close_stdout@@Base+0x2e8>
   1298c:	add	r7, r6, #1
   12990:	rsb	r3, r4, r7
   12994:	cmp	r3, #6
   12998:	ble	129e4 <close_stdout@@Base+0x2e8>
   1299c:	ldr	r1, [pc, #132]	; 12a28 <close_stdout@@Base+0x32c>
   129a0:	sub	r0, r6, #6
   129a4:	mov	r2, #7
   129a8:	add	r1, pc, r1
   129ac:	bl	11518 <strncmp@plt>
   129b0:	cmp	r0, #0
   129b4:	bne	129e4 <close_stdout@@Base+0x2e8>
   129b8:	ldr	r1, [pc, #108]	; 12a2c <close_stdout@@Base+0x330>
   129bc:	mov	r0, r7
   129c0:	mov	r2, #3
   129c4:	add	r1, pc, r1
   129c8:	bl	11518 <strncmp@plt>
   129cc:	cmp	r0, #0
   129d0:	movne	r4, r7
   129d4:	ldreq	r3, [pc, #84]	; 12a30 <close_stdout@@Base+0x334>
   129d8:	addeq	r4, r6, #4
   129dc:	ldreq	r3, [r5, r3]
   129e0:	streq	r4, [r3]
   129e4:	ldr	r2, [pc, #72]	; 12a34 <close_stdout@@Base+0x338>
   129e8:	ldr	r3, [pc, #72]	; 12a38 <close_stdout@@Base+0x33c>
   129ec:	ldr	r2, [r5, r2]
   129f0:	str	r4, [r2]
   129f4:	ldr	r3, [r5, r3]
   129f8:	str	r4, [r3]
   129fc:	pop	{r3, r4, r5, r6, r7, pc}
   12a00:	ldr	r3, [pc, #52]	; 12a3c <close_stdout@@Base+0x340>
   12a04:	mov	r1, #1
   12a08:	ldr	r0, [pc, #48]	; 12a40 <close_stdout@@Base+0x344>
   12a0c:	mov	r2, #55	; 0x37
   12a10:	ldr	r3, [r5, r3]
   12a14:	add	r0, pc, r0
   12a18:	ldr	r3, [r3]
   12a1c:	bl	11314 <fwrite@plt>
   12a20:	bl	11524 <abort@plt>
   12a24:	andeq	r7, r1, r4, lsl #13
   12a28:	andeq	r6, r0, r4, lsl #9
   12a2c:	andeq	r6, r0, r0, ror r4
   12a30:	andeq	r0, r0, r4, ror #2
   12a34:	andeq	r0, r0, ip, asr r1
   12a38:	andeq	r0, r0, r8, asr r1
   12a3c:	andeq	r0, r0, r0, asr #2
   12a40:	andeq	r6, r0, r0, ror #7
   12a44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a48:	sub	sp, sp, #156	; 0x9c
   12a4c:	ldr	r7, [pc, #2116]	; 13298 <close_stdout@@Base+0xb9c>
   12a50:	add	r2, sp, #120	; 0x78
   12a54:	ldr	r3, [pc, #2112]	; 1329c <close_stdout@@Base+0xba0>
   12a58:	mov	fp, r0
   12a5c:	add	r7, pc, r7
   12a60:	mov	r0, r1
   12a64:	mov	r1, #2
   12a68:	add	r6, sp, #40	; 0x28
   12a6c:	ldr	r3, [r7, r3]
   12a70:	add	r9, sp, #96	; 0x60
   12a74:	str	r2, [sp, #16]
   12a78:	mov	r4, #1
   12a7c:	mov	r5, #0
   12a80:	str	r3, [sp, #28]
   12a84:	add	r3, sp, #64	; 0x40
   12a88:	ldr	r2, [sp, #28]
   12a8c:	str	r3, [sp, #12]
   12a90:	ldr	r3, [r2]
   12a94:	str	r3, [sp, #148]	; 0x94
   12a98:	bl	14e78 <close_stdout@@Base+0x277c>
   12a9c:	str	r0, [sp, #20]
   12aa0:	ldrb	r3, [fp]
   12aa4:	cmp	r3, #0
   12aa8:	beq	130a0 <close_stdout@@Base+0x9a4>
   12aac:	mov	r0, fp
   12ab0:	ldr	r1, [sp, #20]
   12ab4:	bl	16d34 <close_stdout@@Base+0x4638>
   12ab8:	subs	r8, r0, #0
   12abc:	beq	130a0 <close_stdout@@Base+0x9a4>
   12ac0:	bl	11338 <__ctype_get_mb_cur_max@plt>
   12ac4:	cmp	r0, #1
   12ac8:	bls	13020 <close_stdout@@Base+0x924>
   12acc:	cmp	fp, r8
   12ad0:	str	r5, [r6, #4]
   12ad4:	str	fp, [sp, #52]	; 0x34
   12ad8:	addcc	sl, sp, #64	; 0x40
   12adc:	strb	r5, [sp, #36]	; 0x24
   12ae0:	str	r5, [r6]
   12ae4:	strb	r5, [sp, #48]	; 0x30
   12ae8:	strcc	r9, [sp, #24]
   12aec:	bcs	130c0 <close_stdout@@Base+0x9c4>
   12af0:	ldrb	r3, [sp, #36]	; 0x24
   12af4:	cmp	r3, #0
   12af8:	bne	12b58 <close_stdout@@Base+0x45c>
   12afc:	ldr	r2, [pc, #1948]	; 132a0 <close_stdout@@Base+0xba4>
   12b00:	ldrb	r3, [fp]
   12b04:	ldr	r1, [r7, r2]
   12b08:	and	r2, r3, #31
   12b0c:	lsr	r3, r3, #5
   12b10:	ldr	r3, [r1, r3, lsl #2]
   12b14:	lsr	r3, r3, r2
   12b18:	tst	r3, #1
   12b1c:	beq	12b44 <close_stdout@@Base+0x448>
   12b20:	str	r4, [sp, #56]	; 0x38
   12b24:	ldrb	r2, [fp]
   12b28:	strb	r4, [sp, #60]	; 0x3c
   12b2c:	strb	r4, [sp, #48]	; 0x30
   12b30:	mov	r9, r2
   12b34:	cmp	r9, #0
   12b38:	str	r2, [sp, #64]	; 0x40
   12b3c:	bne	12bdc <close_stdout@@Base+0x4e0>
   12b40:	bl	11524 <abort@plt>
   12b44:	mov	r0, r6
   12b48:	bl	1129c <mbsinit@plt>
   12b4c:	cmp	r0, #0
   12b50:	beq	13254 <close_stdout@@Base+0xb58>
   12b54:	strb	r4, [sp, #36]	; 0x24
   12b58:	bl	11338 <__ctype_get_mb_cur_max@plt>
   12b5c:	mov	r1, r0
   12b60:	mov	r0, fp
   12b64:	bl	14e4c <close_stdout@@Base+0x2750>
   12b68:	mov	r1, fp
   12b6c:	mov	r3, r6
   12b70:	mov	r2, r0
   12b74:	mov	r0, sl
   12b78:	bl	1135c <mbrtowc@plt>
   12b7c:	cmn	r0, #1
   12b80:	str	r0, [sp, #56]	; 0x38
   12b84:	beq	12fc8 <close_stdout@@Base+0x8cc>
   12b88:	cmn	r0, #2
   12b8c:	beq	12ff8 <close_stdout@@Base+0x8fc>
   12b90:	cmp	r0, #0
   12b94:	bne	12ff0 <close_stdout@@Base+0x8f4>
   12b98:	ldr	fp, [sp, #52]	; 0x34
   12b9c:	str	r4, [sp, #56]	; 0x38
   12ba0:	ldrb	r3, [fp]
   12ba4:	cmp	r3, #0
   12ba8:	bne	13278 <close_stdout@@Base+0xb7c>
   12bac:	ldr	r2, [sp, #64]	; 0x40
   12bb0:	cmp	r2, #0
   12bb4:	bne	12fa8 <close_stdout@@Base+0x8ac>
   12bb8:	mov	r9, r2
   12bbc:	mov	r0, r6
   12bc0:	strb	r4, [sp, #60]	; 0x3c
   12bc4:	bl	1129c <mbsinit@plt>
   12bc8:	strb	r4, [sp, #48]	; 0x30
   12bcc:	cmp	r0, #0
   12bd0:	strbne	r5, [sp, #36]	; 0x24
   12bd4:	cmp	r9, #0
   12bd8:	beq	12b40 <close_stdout@@Base+0x444>
   12bdc:	ldr	fp, [sp, #52]	; 0x34
   12be0:	ldr	r3, [sp, #56]	; 0x38
   12be4:	strb	r5, [sp, #48]	; 0x30
   12be8:	add	fp, fp, r3
   12bec:	ldrb	r3, [sp, #60]	; 0x3c
   12bf0:	cmp	r8, fp
   12bf4:	str	fp, [sp, #52]	; 0x34
   12bf8:	bhi	12af0 <close_stdout@@Base+0x3f4>
   12bfc:	cmp	r3, #0
   12c00:	mov	r2, r9
   12c04:	ldr	r9, [sp, #24]
   12c08:	beq	130c0 <close_stdout@@Base+0x9c4>
   12c0c:	mov	r0, r2
   12c10:	bl	11434 <iswalnum@plt>
   12c14:	rsbs	r0, r0, #1
   12c18:	movcc	r0, #0
   12c1c:	str	r0, [sp, #24]
   12c20:	strb	r5, [sp, #92]	; 0x5c
   12c24:	ldrb	r2, [sp, #92]	; 0x5c
   12c28:	ldr	fp, [sp, #20]
   12c2c:	cmp	r2, #0
   12c30:	str	r5, [r6, #4]
   12c34:	str	r5, [r9, #4]
   12c38:	str	r8, [sp, #52]	; 0x34
   12c3c:	strb	r5, [sp, #36]	; 0x24
   12c40:	str	r5, [r6]
   12c44:	strb	r5, [sp, #48]	; 0x30
   12c48:	str	fp, [sp, #108]	; 0x6c
   12c4c:	str	r5, [r9]
   12c50:	strb	r5, [sp, #104]	; 0x68
   12c54:	bne	12e10 <close_stdout@@Base+0x714>
   12c58:	ldr	r1, [pc, #1600]	; 132a0 <close_stdout@@Base+0xba4>
   12c5c:	ldrb	r2, [fp]
   12c60:	ldr	r0, [r7, r1]
   12c64:	and	r1, r2, #31
   12c68:	lsr	r2, r2, #5
   12c6c:	ldr	r2, [r0, r2, lsl #2]
   12c70:	lsr	r2, r2, r1
   12c74:	tst	r2, #1
   12c78:	beq	12f70 <close_stdout@@Base+0x874>
   12c7c:	str	r4, [sp, #112]	; 0x70
   12c80:	ldrb	r3, [fp]
   12c84:	strb	r4, [sp, #116]	; 0x74
   12c88:	mov	fp, r3
   12c8c:	str	r3, [sp, #120]	; 0x78
   12c90:	cmp	fp, #0
   12c94:	strb	r4, [sp, #104]	; 0x68
   12c98:	mov	r3, #1
   12c9c:	bne	12dc4 <close_stdout@@Base+0x6c8>
   12ca0:	ldrb	ip, [sp, #48]	; 0x30
   12ca4:	cmp	ip, #0
   12ca8:	bne	13014 <close_stdout@@Base+0x918>
   12cac:	ldrb	r2, [sp, #36]	; 0x24
   12cb0:	ldr	sl, [sp, #52]	; 0x34
   12cb4:	cmp	r2, #0
   12cb8:	bne	13164 <close_stdout@@Base+0xa68>
   12cbc:	ldr	r1, [pc, #1500]	; 132a0 <close_stdout@@Base+0xba4>
   12cc0:	ldrb	r2, [sl]
   12cc4:	ldr	r0, [r7, r1]
   12cc8:	and	r1, r2, #31
   12ccc:	lsr	r2, r2, #5
   12cd0:	ldr	r2, [r0, r2, lsl #2]
   12cd4:	lsr	r2, r2, r1
   12cd8:	tst	r2, #1
   12cdc:	beq	13140 <close_stdout@@Base+0xa44>
   12ce0:	str	r3, [sp, #56]	; 0x38
   12ce4:	mov	ip, r3
   12ce8:	ldrb	r2, [sl]
   12cec:	strb	r3, [sp, #60]	; 0x3c
   12cf0:	mov	r3, r2
   12cf4:	str	r2, [sp, #64]	; 0x40
   12cf8:	strb	r4, [sp, #48]	; 0x30
   12cfc:	cmp	ip, #0
   12d00:	beq	12d0c <close_stdout@@Base+0x610>
   12d04:	cmp	r3, #0
   12d08:	beq	12d28 <close_stdout@@Base+0x62c>
   12d0c:	ldrb	r2, [sp, #60]	; 0x3c
   12d10:	cmp	r2, #0
   12d14:	beq	12d28 <close_stdout@@Base+0x62c>
   12d18:	mov	r0, r3
   12d1c:	bl	11434 <iswalnum@plt>
   12d20:	cmp	r0, #0
   12d24:	bne	12d34 <close_stdout@@Base+0x638>
   12d28:	ldr	r2, [sp, #24]
   12d2c:	cmp	r2, #0
   12d30:	bne	1324c <close_stdout@@Base+0xb50>
   12d34:	ldr	r2, [pc, #1380]	; 132a0 <close_stdout@@Base+0xba4>
   12d38:	str	r5, [r6, #4]
   12d3c:	str	r8, [sp, #52]	; 0x34
   12d40:	strb	r5, [sp, #36]	; 0x24
   12d44:	str	r5, [r6]
   12d48:	strb	r5, [sp, #48]	; 0x30
   12d4c:	ldrb	r3, [r8]
   12d50:	ldr	r1, [r7, r2]
   12d54:	and	r2, r3, #31
   12d58:	lsr	r3, r3, #5
   12d5c:	ldr	r3, [r1, r3, lsl #2]
   12d60:	lsr	r3, r3, r2
   12d64:	tst	r3, #1
   12d68:	beq	130cc <close_stdout@@Base+0x9d0>
   12d6c:	str	r4, [sp, #56]	; 0x38
   12d70:	ldrb	fp, [r8]
   12d74:	strb	r4, [sp, #60]	; 0x3c
   12d78:	str	fp, [sp, #64]	; 0x40
   12d7c:	cmp	fp, #0
   12d80:	strb	r4, [sp, #48]	; 0x30
   12d84:	bne	130b4 <close_stdout@@Base+0x9b8>
   12d88:	ldr	r0, [sp, #20]
   12d8c:	bl	11278 <free@plt>
   12d90:	ldr	r1, [sp, #28]
   12d94:	ldr	r2, [sp, #148]	; 0x94
   12d98:	mov	r0, fp
   12d9c:	ldr	r3, [r1]
   12da0:	cmp	r2, r3
   12da4:	bne	13274 <close_stdout@@Base+0xb78>
   12da8:	add	sp, sp, #156	; 0x9c
   12dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12db0:	ldr	r0, [sp, #108]	; 0x6c
   12db4:	bl	113f8 <strlen@plt>
   12db8:	strb	r5, [sp, #116]	; 0x74
   12dbc:	str	r0, [sp, #112]	; 0x70
   12dc0:	strb	r4, [sp, #104]	; 0x68
   12dc4:	ldrb	fp, [sp, #48]	; 0x30
   12dc8:	cmp	fp, #0
   12dcc:	beq	12e74 <close_stdout@@Base+0x778>
   12dd0:	ldrb	fp, [sp, #60]	; 0x3c
   12dd4:	cmp	fp, #0
   12dd8:	bne	12ec8 <close_stdout@@Base+0x7cc>
   12ddc:	ldr	r1, [sp, #52]	; 0x34
   12de0:	ldr	r2, [sp, #56]	; 0x38
   12de4:	ldr	fp, [sp, #108]	; 0x6c
   12de8:	add	r1, r1, r2
   12dec:	ldr	r2, [sp, #112]	; 0x70
   12df0:	strb	r5, [sp, #48]	; 0x30
   12df4:	add	fp, fp, r2
   12df8:	ldrb	r2, [sp, #92]	; 0x5c
   12dfc:	strb	r5, [sp, #104]	; 0x68
   12e00:	cmp	r2, #0
   12e04:	str	r1, [sp, #52]	; 0x34
   12e08:	str	fp, [sp, #108]	; 0x6c
   12e0c:	beq	12c58 <close_stdout@@Base+0x55c>
   12e10:	bl	11338 <__ctype_get_mb_cur_max@plt>
   12e14:	mov	r1, r0
   12e18:	mov	r0, fp
   12e1c:	bl	14e4c <close_stdout@@Base+0x2750>
   12e20:	mov	r1, fp
   12e24:	mov	r3, r9
   12e28:	mov	r2, r0
   12e2c:	add	r0, sp, #120	; 0x78
   12e30:	bl	1135c <mbrtowc@plt>
   12e34:	cmn	r0, #1
   12e38:	str	r0, [sp, #112]	; 0x70
   12e3c:	strbeq	r5, [sp, #116]	; 0x74
   12e40:	streq	r4, [sp, #112]	; 0x70
   12e44:	beq	12dc0 <close_stdout@@Base+0x6c4>
   12e48:	cmn	r0, #2
   12e4c:	beq	12db0 <close_stdout@@Base+0x6b4>
   12e50:	cmp	r0, #0
   12e54:	beq	12f88 <close_stdout@@Base+0x88c>
   12e58:	ldr	fp, [sp, #120]	; 0x78
   12e5c:	mov	r0, r9
   12e60:	strb	r4, [sp, #116]	; 0x74
   12e64:	bl	1129c <mbsinit@plt>
   12e68:	cmp	r0, #0
   12e6c:	strbne	r5, [sp, #92]	; 0x5c
   12e70:	b	12c90 <close_stdout@@Base+0x594>
   12e74:	ldrb	r3, [sp, #36]	; 0x24
   12e78:	ldr	sl, [sp, #52]	; 0x34
   12e7c:	cmp	r3, #0
   12e80:	bne	12eec <close_stdout@@Base+0x7f0>
   12e84:	ldr	r1, [pc, #1044]	; 132a0 <close_stdout@@Base+0xba4>
   12e88:	ldrb	r2, [sl]
   12e8c:	ldr	r0, [r7, r1]
   12e90:	and	r1, r2, #31
   12e94:	lsr	r2, r2, #5
   12e98:	ldr	r2, [r0, r2, lsl #2]
   12e9c:	lsr	r2, r2, r1
   12ea0:	tst	r2, #1
   12ea4:	beq	12ed8 <close_stdout@@Base+0x7dc>
   12ea8:	str	r4, [sp, #56]	; 0x38
   12eac:	mov	fp, #1
   12eb0:	ldrb	r3, [sl]
   12eb4:	strb	r4, [sp, #60]	; 0x3c
   12eb8:	str	r3, [sp, #64]	; 0x40
   12ebc:	cmp	fp, #0
   12ec0:	strb	r4, [sp, #48]	; 0x30
   12ec4:	beq	12ddc <close_stdout@@Base+0x6e0>
   12ec8:	ldr	r3, [sp, #64]	; 0x40
   12ecc:	cmp	r3, #0
   12ed0:	bne	12ddc <close_stdout@@Base+0x6e0>
   12ed4:	b	12b40 <close_stdout@@Base+0x444>
   12ed8:	mov	r0, r6
   12edc:	bl	1129c <mbsinit@plt>
   12ee0:	cmp	r0, #0
   12ee4:	beq	13254 <close_stdout@@Base+0xb58>
   12ee8:	strb	r4, [sp, #36]	; 0x24
   12eec:	bl	11338 <__ctype_get_mb_cur_max@plt>
   12ef0:	mov	r1, r0
   12ef4:	mov	r0, sl
   12ef8:	bl	14e4c <close_stdout@@Base+0x2750>
   12efc:	mov	r1, sl
   12f00:	mov	r3, r6
   12f04:	mov	r2, r0
   12f08:	add	r0, sp, #64	; 0x40
   12f0c:	bl	1135c <mbrtowc@plt>
   12f10:	cmn	r0, #1
   12f14:	str	r0, [sp, #56]	; 0x38
   12f18:	strbeq	r5, [sp, #60]	; 0x3c
   12f1c:	streq	r4, [sp, #56]	; 0x38
   12f20:	beq	12ebc <close_stdout@@Base+0x7c0>
   12f24:	cmn	r0, #2
   12f28:	beq	12fdc <close_stdout@@Base+0x8e0>
   12f2c:	cmp	r0, #0
   12f30:	bne	12f54 <close_stdout@@Base+0x858>
   12f34:	ldr	r3, [sp, #52]	; 0x34
   12f38:	str	r4, [sp, #56]	; 0x38
   12f3c:	ldrb	r3, [r3]
   12f40:	cmp	r3, #0
   12f44:	bne	13278 <close_stdout@@Base+0xb7c>
   12f48:	ldr	r3, [sp, #64]	; 0x40
   12f4c:	cmp	r3, #0
   12f50:	bne	12fa8 <close_stdout@@Base+0x8ac>
   12f54:	mov	r0, r6
   12f58:	strb	r4, [sp, #60]	; 0x3c
   12f5c:	bl	1129c <mbsinit@plt>
   12f60:	mov	fp, #1
   12f64:	cmp	r0, #0
   12f68:	strbne	r5, [sp, #36]	; 0x24
   12f6c:	b	12ebc <close_stdout@@Base+0x7c0>
   12f70:	mov	r0, r9
   12f74:	bl	1129c <mbsinit@plt>
   12f78:	cmp	r0, #0
   12f7c:	beq	13254 <close_stdout@@Base+0xb58>
   12f80:	strb	r4, [sp, #92]	; 0x5c
   12f84:	b	12e10 <close_stdout@@Base+0x714>
   12f88:	ldr	r3, [sp, #108]	; 0x6c
   12f8c:	str	r4, [sp, #112]	; 0x70
   12f90:	ldrb	r3, [r3]
   12f94:	cmp	r3, #0
   12f98:	bne	13278 <close_stdout@@Base+0xb7c>
   12f9c:	ldr	fp, [sp, #120]	; 0x78
   12fa0:	cmp	fp, #0
   12fa4:	beq	12e5c <close_stdout@@Base+0x760>
   12fa8:	ldr	r0, [pc, #756]	; 132a4 <close_stdout@@Base+0xba8>
   12fac:	mov	r2, #179	; 0xb3
   12fb0:	ldr	r1, [pc, #752]	; 132a8 <close_stdout@@Base+0xbac>
   12fb4:	ldr	r3, [pc, #752]	; 132ac <close_stdout@@Base+0xbb0>
   12fb8:	add	r0, pc, r0
   12fbc:	add	r1, pc, r1
   12fc0:	add	r3, pc, r3
   12fc4:	bl	1153c <__assert_fail@plt>
   12fc8:	str	r4, [sp, #56]	; 0x38
   12fcc:	strb	r5, [sp, #60]	; 0x3c
   12fd0:	ldr	r9, [sp, #64]	; 0x40
   12fd4:	ldr	fp, [sp, #52]	; 0x34
   12fd8:	b	12be0 <close_stdout@@Base+0x4e4>
   12fdc:	ldr	r0, [sp, #52]	; 0x34
   12fe0:	bl	113f8 <strlen@plt>
   12fe4:	strb	r5, [sp, #60]	; 0x3c
   12fe8:	str	r0, [sp, #56]	; 0x38
   12fec:	b	12ebc <close_stdout@@Base+0x7c0>
   12ff0:	ldr	r9, [sp, #64]	; 0x40
   12ff4:	b	12bbc <close_stdout@@Base+0x4c0>
   12ff8:	ldr	fp, [sp, #52]	; 0x34
   12ffc:	mov	r0, fp
   13000:	bl	113f8 <strlen@plt>
   13004:	strb	r5, [sp, #60]	; 0x3c
   13008:	ldr	r9, [sp, #64]	; 0x40
   1300c:	str	r0, [sp, #56]	; 0x38
   13010:	b	12be0 <close_stdout@@Base+0x4e4>
   13014:	ldr	r3, [sp, #64]	; 0x40
   13018:	ldrb	ip, [sp, #60]	; 0x3c
   1301c:	b	12cfc <close_stdout@@Base+0x600>
   13020:	cmp	fp, r8
   13024:	movcs	fp, #1
   13028:	bcs	13048 <close_stdout@@Base+0x94c>
   1302c:	bl	113d4 <__ctype_b_loc@plt>
   13030:	ldrb	r3, [r8, #-1]
   13034:	lsl	r3, r3, #1
   13038:	ldr	r2, [r0]
   1303c:	ldrh	fp, [r2, r3]
   13040:	eor	fp, fp, #8
   13044:	ubfx	fp, fp, #3, #1
   13048:	ldr	r0, [sp, #20]
   1304c:	bl	113f8 <strlen@plt>
   13050:	ldrb	r3, [r8, r0]
   13054:	cmp	r3, #0
   13058:	beq	1307c <close_stdout@@Base+0x980>
   1305c:	str	r3, [sp, #8]
   13060:	bl	113d4 <__ctype_b_loc@plt>
   13064:	ldr	r3, [sp, #8]
   13068:	lsl	r3, r3, #1
   1306c:	ldr	r2, [r0]
   13070:	ldrh	r3, [r2, r3]
   13074:	tst	r3, #8
   13078:	bne	13084 <close_stdout@@Base+0x988>
   1307c:	cmp	fp, #0
   13080:	bne	1324c <close_stdout@@Base+0xb50>
   13084:	ldrb	r3, [r8]
   13088:	cmp	r3, #0
   1308c:	beq	130a0 <close_stdout@@Base+0x9a4>
   13090:	add	fp, r8, #1
   13094:	ldrb	r3, [fp]
   13098:	cmp	r3, #0
   1309c:	bne	12aac <close_stdout@@Base+0x3b0>
   130a0:	mov	fp, #0
   130a4:	b	12d88 <close_stdout@@Base+0x68c>
   130a8:	ldr	r0, [sp, #52]	; 0x34
   130ac:	bl	113f8 <strlen@plt>
   130b0:	str	r0, [sp, #56]	; 0x38
   130b4:	ldr	fp, [sp, #56]	; 0x38
   130b8:	add	fp, r8, fp
   130bc:	b	12aa0 <close_stdout@@Base+0x3a4>
   130c0:	mov	r3, #1
   130c4:	str	r3, [sp, #24]
   130c8:	b	12c20 <close_stdout@@Base+0x524>
   130cc:	mov	r0, r6
   130d0:	bl	1129c <mbsinit@plt>
   130d4:	cmp	r0, #0
   130d8:	beq	13254 <close_stdout@@Base+0xb58>
   130dc:	strb	r4, [sp, #36]	; 0x24
   130e0:	bl	11338 <__ctype_get_mb_cur_max@plt>
   130e4:	mov	r1, r0
   130e8:	mov	r0, r8
   130ec:	bl	14e4c <close_stdout@@Base+0x2750>
   130f0:	mov	r1, r8
   130f4:	mov	r3, r6
   130f8:	mov	r2, r0
   130fc:	add	r0, sp, #64	; 0x40
   13100:	bl	1135c <mbrtowc@plt>
   13104:	cmn	r0, #1
   13108:	str	r0, [sp, #56]	; 0x38
   1310c:	streq	r4, [sp, #56]	; 0x38
   13110:	beq	130b4 <close_stdout@@Base+0x9b8>
   13114:	cmn	r0, #2
   13118:	beq	130a8 <close_stdout@@Base+0x9ac>
   1311c:	cmp	r0, #0
   13120:	beq	131d0 <close_stdout@@Base+0xad4>
   13124:	ldr	fp, [sp, #64]	; 0x40
   13128:	mov	r0, r6
   1312c:	strb	r4, [sp, #60]	; 0x3c
   13130:	bl	1129c <mbsinit@plt>
   13134:	cmp	r0, #0
   13138:	strbne	r5, [sp, #36]	; 0x24
   1313c:	b	12d7c <close_stdout@@Base+0x680>
   13140:	mov	r0, r6
   13144:	str	r3, [sp, #8]
   13148:	str	ip, [sp, #4]
   1314c:	bl	1129c <mbsinit@plt>
   13150:	ldr	r3, [sp, #8]
   13154:	ldr	ip, [sp, #4]
   13158:	cmp	r0, #0
   1315c:	beq	13254 <close_stdout@@Base+0xb58>
   13160:	strb	r3, [sp, #36]	; 0x24
   13164:	str	ip, [sp, #4]
   13168:	bl	11338 <__ctype_get_mb_cur_max@plt>
   1316c:	mov	r1, r0
   13170:	mov	r0, sl
   13174:	bl	14e4c <close_stdout@@Base+0x2750>
   13178:	mov	r1, sl
   1317c:	mov	r3, r6
   13180:	mov	r2, r0
   13184:	add	r0, sp, #64	; 0x40
   13188:	bl	1135c <mbrtowc@plt>
   1318c:	ldr	ip, [sp, #4]
   13190:	cmn	r0, #1
   13194:	str	r0, [sp, #56]	; 0x38
   13198:	beq	1321c <close_stdout@@Base+0xb20>
   1319c:	cmn	r0, #2
   131a0:	beq	1322c <close_stdout@@Base+0xb30>
   131a4:	cmp	r0, #0
   131a8:	bne	131f4 <close_stdout@@Base+0xaf8>
   131ac:	ldr	r3, [sp, #52]	; 0x34
   131b0:	str	r4, [sp, #56]	; 0x38
   131b4:	ldrb	r3, [r3]
   131b8:	cmp	r3, #0
   131bc:	bne	13278 <close_stdout@@Base+0xb7c>
   131c0:	ldr	r3, [sp, #64]	; 0x40
   131c4:	cmp	r3, #0
   131c8:	beq	131f8 <close_stdout@@Base+0xafc>
   131cc:	b	12fa8 <close_stdout@@Base+0x8ac>
   131d0:	ldr	r3, [sp, #52]	; 0x34
   131d4:	str	r4, [sp, #56]	; 0x38
   131d8:	ldrb	r3, [r3]
   131dc:	cmp	r3, #0
   131e0:	bne	13278 <close_stdout@@Base+0xb7c>
   131e4:	ldr	fp, [sp, #64]	; 0x40
   131e8:	cmp	fp, #0
   131ec:	beq	13128 <close_stdout@@Base+0xa2c>
   131f0:	b	12fa8 <close_stdout@@Base+0x8ac>
   131f4:	ldr	r3, [sp, #64]	; 0x40
   131f8:	mov	r0, r6
   131fc:	str	r3, [sp, #8]
   13200:	strb	r4, [sp, #60]	; 0x3c
   13204:	bl	1129c <mbsinit@plt>
   13208:	ldr	r3, [sp, #8]
   1320c:	mov	ip, #1
   13210:	cmp	r0, #0
   13214:	strbne	r5, [sp, #36]	; 0x24
   13218:	b	12cf8 <close_stdout@@Base+0x5fc>
   1321c:	str	r4, [sp, #56]	; 0x38
   13220:	strb	r5, [sp, #60]	; 0x3c
   13224:	ldr	r3, [sp, #64]	; 0x40
   13228:	b	12cf8 <close_stdout@@Base+0x5fc>
   1322c:	ldr	r0, [sp, #52]	; 0x34
   13230:	str	ip, [sp, #4]
   13234:	bl	113f8 <strlen@plt>
   13238:	strb	r5, [sp, #60]	; 0x3c
   1323c:	ldr	r3, [sp, #64]	; 0x40
   13240:	ldr	ip, [sp, #4]
   13244:	str	r0, [sp, #56]	; 0x38
   13248:	b	12cf8 <close_stdout@@Base+0x5fc>
   1324c:	mov	fp, #1
   13250:	b	12d88 <close_stdout@@Base+0x68c>
   13254:	ldr	r0, [pc, #84]	; 132b0 <close_stdout@@Base+0xbb4>
   13258:	mov	r2, #150	; 0x96
   1325c:	ldr	r1, [pc, #80]	; 132b4 <close_stdout@@Base+0xbb8>
   13260:	ldr	r3, [pc, #80]	; 132b8 <close_stdout@@Base+0xbbc>
   13264:	add	r0, pc, r0
   13268:	add	r1, pc, r1
   1326c:	add	r3, pc, r3
   13270:	bl	1153c <__assert_fail@plt>
   13274:	bl	112cc <__stack_chk_fail@plt>
   13278:	ldr	r0, [pc, #60]	; 132bc <close_stdout@@Base+0xbc0>
   1327c:	mov	r2, #178	; 0xb2
   13280:	ldr	r1, [pc, #56]	; 132c0 <close_stdout@@Base+0xbc4>
   13284:	ldr	r3, [pc, #56]	; 132c4 <close_stdout@@Base+0xbc8>
   13288:	add	r0, pc, r0
   1328c:	add	r1, pc, r1
   13290:	add	r3, pc, r3
   13294:	bl	1153c <__assert_fail@plt>
   13298:	muleq	r1, ip, r5
   1329c:	andeq	r0, r0, r4, lsr r1
   132a0:	andeq	r0, r0, r0, lsr r1
   132a4:	ldrdeq	r5, [r0], -r4
   132a8:	andeq	r5, r0, r8, lsr #29
   132ac:	andeq	r5, r0, r8, ror lr
   132b0:	andeq	r5, r0, r8, ror #23
   132b4:	strdeq	r5, [r0], -ip
   132b8:	andeq	r5, r0, ip, asr #23
   132bc:	andeq	r5, r0, ip, ror #23
   132c0:	ldrdeq	r5, [r0], -r8
   132c4:	andeq	r5, r0, r8, lsr #23
   132c8:	push	{r4, r5, r6, lr}
   132cc:	mov	r1, r0
   132d0:	mov	r4, r0
   132d4:	sub	sp, sp, #8
   132d8:	mov	r2, #5
   132dc:	mov	r0, #0
   132e0:	bl	112c0 <dcgettext@plt>
   132e4:	cmp	r0, r4
   132e8:	mov	r5, r0
   132ec:	moveq	r0, r0
   132f0:	beq	13308 <close_stdout@@Base+0xc0c>
   132f4:	mov	r1, r4
   132f8:	bl	12a44 <close_stdout@@Base+0x348>
   132fc:	cmp	r0, #0
   13300:	mov	r0, r5
   13304:	beq	13310 <close_stdout@@Base+0xc14>
   13308:	add	sp, sp, #8
   1330c:	pop	{r4, r5, r6, pc}
   13310:	bl	113f8 <strlen@plt>
   13314:	mov	r6, r0
   13318:	mov	r0, r4
   1331c:	bl	113f8 <strlen@plt>
   13320:	add	r0, r6, r0
   13324:	add	r0, r0, #4
   13328:	bl	159cc <close_stdout@@Base+0x32d0>
   1332c:	ldr	r3, [pc, #36]	; 13358 <close_stdout@@Base+0xc5c>
   13330:	str	r5, [sp]
   13334:	mov	r1, #1
   13338:	str	r4, [sp, #4]
   1333c:	mvn	r2, #0
   13340:	add	r3, pc, r3
   13344:	mov	r6, r0
   13348:	bl	11440 <__sprintf_chk@plt>
   1334c:	mov	r0, r6
   13350:	add	sp, sp, #8
   13354:	pop	{r4, r5, r6, pc}
   13358:	andeq	r5, r0, r0, ror #22
   1335c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13360:	mov	r6, r0
   13364:	sub	sp, sp, #12
   13368:	mov	r2, #5
   1336c:	mov	r4, r1
   13370:	mov	r0, #0
   13374:	mov	r1, r6
   13378:	ldr	r7, [pc, #640]	; 13600 <close_stdout@@Base+0xf04>
   1337c:	bl	112c0 <dcgettext@plt>
   13380:	add	r7, pc, r7
   13384:	mov	r8, r0
   13388:	bl	15dbc <close_stdout@@Base+0x36c0>
   1338c:	mov	r1, r7
   13390:	mov	r9, r0
   13394:	bl	15ccc <close_stdout@@Base+0x35d0>
   13398:	cmp	r0, #0
   1339c:	moveq	r5, r0
   133a0:	moveq	r9, r4
   133a4:	bne	133f0 <close_stdout@@Base+0xcf4>
   133a8:	cmp	r4, #0
   133ac:	movne	sl, r4
   133b0:	movne	r7, #0
   133b4:	beq	134a8 <close_stdout@@Base+0xdac>
   133b8:	mov	r0, r8
   133bc:	mov	r1, r6
   133c0:	bl	11230 <strcmp@plt>
   133c4:	cmp	r0, #0
   133c8:	bne	134c0 <close_stdout@@Base+0xdc4>
   133cc:	cmp	r5, r4
   133d0:	cmpne	r5, #0
   133d4:	bne	13550 <close_stdout@@Base+0xe54>
   133d8:	cmp	r7, r4
   133dc:	cmpne	r7, #0
   133e0:	moveq	r0, r4
   133e4:	bne	1353c <close_stdout@@Base+0xe40>
   133e8:	add	sp, sp, #12
   133ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133f0:	mov	r2, r9
   133f4:	mov	r1, r7
   133f8:	mov	r0, r4
   133fc:	bl	15ca0 <close_stdout@@Base+0x35a4>
   13400:	mov	r5, r0
   13404:	mov	r0, r9
   13408:	bl	113f8 <strlen@plt>
   1340c:	mov	fp, r0
   13410:	add	r0, r0, #11
   13414:	bl	159cc <close_stdout@@Base+0x32d0>
   13418:	mov	r1, r9
   1341c:	mov	r2, fp
   13420:	mov	sl, r0
   13424:	bl	11290 <memcpy@plt>
   13428:	ldr	r3, [pc, #468]	; 13604 <close_stdout@@Base+0xf08>
   1342c:	add	ip, sl, fp
   13430:	mov	r2, sl
   13434:	add	r3, pc, r3
   13438:	ldm	r3!, {r0, r1}
   1343c:	ldrh	lr, [r3]
   13440:	ldrb	r3, [r3, #2]
   13444:	str	r0, [sl, fp]
   13448:	mov	r0, r4
   1344c:	str	r1, [ip, #4]
   13450:	mov	r1, r7
   13454:	strh	lr, [ip, #8]
   13458:	strb	r3, [ip, #10]
   1345c:	bl	15ca0 <close_stdout@@Base+0x35a4>
   13460:	mov	r9, r0
   13464:	mov	r0, sl
   13468:	bl	11278 <free@plt>
   1346c:	cmp	r9, #0
   13470:	beq	135e0 <close_stdout@@Base+0xee4>
   13474:	mov	r0, r9
   13478:	mov	r1, #63	; 0x3f
   1347c:	bl	11404 <strchr@plt>
   13480:	cmp	r0, #0
   13484:	beq	135c8 <close_stdout@@Base+0xecc>
   13488:	mov	r0, r9
   1348c:	mov	r4, r5
   13490:	bl	11278 <free@plt>
   13494:	cmp	r4, #0
   13498:	mov	r9, #0
   1349c:	movne	sl, r4
   134a0:	movne	r7, #0
   134a4:	bne	133b8 <close_stdout@@Base+0xcbc>
   134a8:	cmp	r9, #0
   134ac:	beq	135e8 <close_stdout@@Base+0xeec>
   134b0:	mov	r7, r4
   134b4:	mov	sl, #0
   134b8:	mov	r4, r9
   134bc:	b	133b8 <close_stdout@@Base+0xcbc>
   134c0:	mov	r1, r6
   134c4:	mov	r0, r8
   134c8:	bl	12a44 <close_stdout@@Base+0x348>
   134cc:	cmp	r0, #0
   134d0:	bne	1350c <close_stdout@@Base+0xe10>
   134d4:	cmp	sl, #0
   134d8:	beq	134f0 <close_stdout@@Base+0xdf4>
   134dc:	mov	r1, sl
   134e0:	mov	r0, r8
   134e4:	bl	12a44 <close_stdout@@Base+0x348>
   134e8:	cmp	r0, #0
   134ec:	bne	1350c <close_stdout@@Base+0xe10>
   134f0:	cmp	r9, #0
   134f4:	beq	1355c <close_stdout@@Base+0xe60>
   134f8:	mov	r1, r9
   134fc:	mov	r0, r8
   13500:	bl	12a44 <close_stdout@@Base+0x348>
   13504:	cmp	r0, #0
   13508:	beq	1355c <close_stdout@@Base+0xe60>
   1350c:	cmp	r5, #0
   13510:	beq	1351c <close_stdout@@Base+0xe20>
   13514:	mov	r0, r5
   13518:	bl	11278 <free@plt>
   1351c:	cmp	r7, #0
   13520:	moveq	r0, r8
   13524:	beq	133e8 <close_stdout@@Base+0xcec>
   13528:	mov	r0, r7
   1352c:	bl	11278 <free@plt>
   13530:	mov	r0, r8
   13534:	add	sp, sp, #12
   13538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1353c:	mov	r0, r7
   13540:	bl	11278 <free@plt>
   13544:	mov	r0, r4
   13548:	add	sp, sp, #12
   1354c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13550:	mov	r0, r5
   13554:	bl	11278 <free@plt>
   13558:	b	133d8 <close_stdout@@Base+0xcdc>
   1355c:	mov	r0, r8
   13560:	bl	113f8 <strlen@plt>
   13564:	mov	r6, r0
   13568:	mov	r0, r4
   1356c:	bl	113f8 <strlen@plt>
   13570:	add	r0, r6, r0
   13574:	add	r0, r0, #4
   13578:	bl	159cc <close_stdout@@Base+0x32d0>
   1357c:	ldr	r3, [pc, #132]	; 13608 <close_stdout@@Base+0xf0c>
   13580:	str	r8, [sp]
   13584:	mov	r1, #1
   13588:	str	r4, [sp, #4]
   1358c:	mvn	r2, #0
   13590:	add	r3, pc, r3
   13594:	mov	r6, r0
   13598:	bl	11440 <__sprintf_chk@plt>
   1359c:	cmp	r5, #0
   135a0:	beq	135ac <close_stdout@@Base+0xeb0>
   135a4:	mov	r0, r5
   135a8:	bl	11278 <free@plt>
   135ac:	cmp	r7, #0
   135b0:	moveq	r0, r6
   135b4:	beq	133e8 <close_stdout@@Base+0xcec>
   135b8:	mov	r0, r7
   135bc:	bl	11278 <free@plt>
   135c0:	mov	r0, r6
   135c4:	b	133e8 <close_stdout@@Base+0xcec>
   135c8:	cmp	r5, #0
   135cc:	beq	135f8 <close_stdout@@Base+0xefc>
   135d0:	mov	sl, r5
   135d4:	mov	r7, r9
   135d8:	mov	r4, r5
   135dc:	b	133b8 <close_stdout@@Base+0xcbc>
   135e0:	mov	r4, r5
   135e4:	b	133a8 <close_stdout@@Base+0xcac>
   135e8:	mov	sl, r9
   135ec:	mov	r7, r9
   135f0:	mov	r4, r6
   135f4:	b	133b8 <close_stdout@@Base+0xcbc>
   135f8:	mov	r4, r9
   135fc:	b	134b0 <close_stdout@@Base+0xdb4>
   13600:	andeq	r5, r0, r8, lsr #22
   13604:	andeq	r5, r0, ip, ror sl
   13608:	andeq	r5, r0, r0, lsl r9
   1360c:	push	{r3, lr}
   13610:	mov	r3, r0
   13614:	mov	r2, #0
   13618:	cmp	r1, #8
   1361c:	str	r2, [r3], #4
   13620:	add	r3, r3, #4
   13624:	str	r2, [r0, #4]
   13628:	str	r2, [r3], #4
   1362c:	str	r2, [r3], #4
   13630:	str	r2, [r3], #4
   13634:	str	r2, [r3], #4
   13638:	str	r2, [r3], #4
   1363c:	str	r2, [r3], #4
   13640:	str	r2, [r3], #4
   13644:	str	r2, [r3], #4
   13648:	str	r2, [r3], #4
   1364c:	str	r2, [r3]
   13650:	beq	1365c <close_stdout@@Base+0xf60>
   13654:	str	r1, [r0]
   13658:	pop	{r3, pc}
   1365c:	bl	11524 <abort@plt>
   13660:	push	{r4, r5, r6, lr}
   13664:	mov	r4, r0
   13668:	mov	r6, r1
   1366c:	mov	r0, #0
   13670:	mov	r1, r4
   13674:	mov	r2, #5
   13678:	bl	112c0 <dcgettext@plt>
   1367c:	cmp	r0, r4
   13680:	mov	r5, r0
   13684:	beq	1368c <close_stdout@@Base+0xf90>
   13688:	pop	{r4, r5, r6, pc}
   1368c:	bl	15dbc <close_stdout@@Base+0x36c0>
   13690:	ldrb	r3, [r0]
   13694:	bic	r3, r3, #32
   13698:	cmp	r3, #85	; 0x55
   1369c:	bne	13710 <close_stdout@@Base+0x1014>
   136a0:	ldrb	r3, [r0, #1]
   136a4:	bic	r3, r3, #32
   136a8:	cmp	r3, #84	; 0x54
   136ac:	bne	136fc <close_stdout@@Base+0x1000>
   136b0:	ldrb	r3, [r0, #2]
   136b4:	bic	r3, r3, #32
   136b8:	cmp	r3, #70	; 0x46
   136bc:	bne	136fc <close_stdout@@Base+0x1000>
   136c0:	ldrb	r3, [r0, #3]
   136c4:	cmp	r3, #45	; 0x2d
   136c8:	bne	136fc <close_stdout@@Base+0x1000>
   136cc:	ldrb	r3, [r0, #4]
   136d0:	cmp	r3, #56	; 0x38
   136d4:	bne	136fc <close_stdout@@Base+0x1000>
   136d8:	ldrb	r3, [r0, #5]
   136dc:	cmp	r3, #0
   136e0:	bne	136fc <close_stdout@@Base+0x1000>
   136e4:	ldrb	r3, [r5]
   136e8:	cmp	r3, #96	; 0x60
   136ec:	beq	13788 <close_stdout@@Base+0x108c>
   136f0:	ldr	r0, [pc, #180]	; 137ac <close_stdout@@Base+0x10b0>
   136f4:	add	r0, pc, r0
   136f8:	pop	{r4, r5, r6, pc}
   136fc:	cmp	r6, #7
   13700:	beq	13794 <close_stdout@@Base+0x1098>
   13704:	ldr	r0, [pc, #164]	; 137b0 <close_stdout@@Base+0x10b4>
   13708:	add	r0, pc, r0
   1370c:	pop	{r4, r5, r6, pc}
   13710:	cmp	r3, #71	; 0x47
   13714:	bne	136fc <close_stdout@@Base+0x1000>
   13718:	ldrb	r3, [r0, #1]
   1371c:	bic	r3, r3, #32
   13720:	cmp	r3, #66	; 0x42
   13724:	bne	136fc <close_stdout@@Base+0x1000>
   13728:	ldrb	r3, [r0, #2]
   1372c:	cmp	r3, #49	; 0x31
   13730:	bne	136fc <close_stdout@@Base+0x1000>
   13734:	ldrb	r3, [r0, #3]
   13738:	cmp	r3, #56	; 0x38
   1373c:	bne	136fc <close_stdout@@Base+0x1000>
   13740:	ldrb	r3, [r0, #4]
   13744:	cmp	r3, #48	; 0x30
   13748:	bne	136fc <close_stdout@@Base+0x1000>
   1374c:	ldrb	r3, [r0, #5]
   13750:	cmp	r3, #51	; 0x33
   13754:	bne	136fc <close_stdout@@Base+0x1000>
   13758:	ldrb	r3, [r0, #6]
   1375c:	cmp	r3, #48	; 0x30
   13760:	bne	136fc <close_stdout@@Base+0x1000>
   13764:	ldrb	r3, [r0, #7]
   13768:	cmp	r3, #0
   1376c:	bne	136fc <close_stdout@@Base+0x1000>
   13770:	ldrb	r3, [r5]
   13774:	cmp	r3, #96	; 0x60
   13778:	beq	137a0 <close_stdout@@Base+0x10a4>
   1377c:	ldr	r0, [pc, #48]	; 137b4 <close_stdout@@Base+0x10b8>
   13780:	add	r0, pc, r0
   13784:	pop	{r4, r5, r6, pc}
   13788:	ldr	r0, [pc, #40]	; 137b8 <close_stdout@@Base+0x10bc>
   1378c:	add	r0, pc, r0
   13790:	pop	{r4, r5, r6, pc}
   13794:	ldr	r0, [pc, #32]	; 137bc <close_stdout@@Base+0x10c0>
   13798:	add	r0, pc, r0
   1379c:	pop	{r4, r5, r6, pc}
   137a0:	ldr	r0, [pc, #24]	; 137c0 <close_stdout@@Base+0x10c4>
   137a4:	add	r0, pc, r0
   137a8:	pop	{r4, r5, r6, pc}
   137ac:	andeq	r5, r0, r8, ror #15
   137b0:	ldrdeq	r5, [r0], -ip
   137b4:	andeq	r5, r0, r0, ror #14
   137b8:	andeq	r5, r0, r4, ror #14
   137bc:	andeq	r5, r0, r0, asr r7
   137c0:	andeq	r5, r0, r8, asr #14
   137c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137c8:	sub	sp, sp, #124	; 0x7c
   137cc:	ldr	ip, [pc, #3304]	; 144bc <close_stdout@@Base+0x1dc0>
   137d0:	mov	sl, r1
   137d4:	str	r0, [sp, #40]	; 0x28
   137d8:	mov	r8, r3
   137dc:	ldr	r0, [pc, #3292]	; 144c0 <close_stdout@@Base+0x1dc4>
   137e0:	add	ip, pc, ip
   137e4:	str	r2, [sp, #32]
   137e8:	ldr	r1, [sp, #164]	; 0xa4
   137ec:	mov	r3, ip
   137f0:	ldr	r0, [ip, r0]
   137f4:	ldr	r2, [sp, #172]	; 0xac
   137f8:	ubfx	r1, r1, #1, #1
   137fc:	str	r1, [sp, #36]	; 0x24
   13800:	str	r0, [sp, #56]	; 0x38
   13804:	ldr	r0, [sp, #168]	; 0xa8
   13808:	ldr	r1, [sp, #176]	; 0xb0
   1380c:	str	r2, [sp, #72]	; 0x48
   13810:	str	r0, [sp, #48]	; 0x30
   13814:	ldr	r0, [sp, #56]	; 0x38
   13818:	str	r1, [sp, #68]	; 0x44
   1381c:	ldr	r3, [r0]
   13820:	str	r3, [sp, #116]	; 0x74
   13824:	bl	11338 <__ctype_get_mb_cur_max@plt>
   13828:	ldr	r2, [sp, #160]	; 0xa0
   1382c:	str	r0, [sp, #64]	; 0x40
   13830:	cmp	r2, #8
   13834:	addls	pc, pc, r2, lsl #2
   13838:	b	14398 <close_stdout@@Base+0x1c9c>
   1383c:	b	13860 <close_stdout@@Base+0x1164>
   13840:	b	140b0 <close_stdout@@Base+0x19b4>
   13844:	b	140e0 <close_stdout@@Base+0x19e4>
   13848:	b	13f90 <close_stdout@@Base+0x1894>
   1384c:	b	13fd0 <close_stdout@@Base+0x18d4>
   13850:	b	13ffc <close_stdout@@Base+0x1900>
   13854:	b	1401c <close_stdout@@Base+0x1920>
   13858:	b	1401c <close_stdout@@Base+0x1920>
   1385c:	b	1401c <close_stdout@@Base+0x1920>
   13860:	mov	r2, #0
   13864:	str	r2, [sp, #36]	; 0x24
   13868:	mov	r9, r2
   1386c:	str	r2, [sp, #24]
   13870:	str	r2, [sp, #28]
   13874:	str	r2, [sp, #52]	; 0x34
   13878:	ldr	r0, [sp, #36]	; 0x24
   1387c:	mov	fp, #0
   13880:	ldr	r1, [sp, #24]
   13884:	eor	r2, r0, #1
   13888:	eor	r3, r1, #1
   1388c:	and	r3, r2, r3
   13890:	and	r2, r1, r0
   13894:	str	r3, [sp, #44]	; 0x2c
   13898:	str	r2, [sp, #76]	; 0x4c
   1389c:	cmn	r8, #1
   138a0:	beq	13c20 <close_stdout@@Base+0x1524>
   138a4:	subs	r3, fp, r8
   138a8:	movne	r3, #1
   138ac:	cmp	r3, #0
   138b0:	beq	13c38 <close_stdout@@Base+0x153c>
   138b4:	ldr	r3, [sp, #28]
   138b8:	ldr	r0, [sp, #24]
   138bc:	adds	r7, r3, #0
   138c0:	movne	r7, #1
   138c4:	ands	r6, r7, r0
   138c8:	bne	14124 <close_stdout@@Base+0x1a28>
   138cc:	ldr	r1, [sp, #32]
   138d0:	add	r5, r1, fp
   138d4:	ldrb	r4, [r5]
   138d8:	cmp	r4, #126	; 0x7e
   138dc:	addls	pc, pc, r4, lsl #2
   138e0:	b	13ea4 <close_stdout@@Base+0x17a8>
   138e4:	b	13db0 <close_stdout@@Base+0x16b4>
   138e8:	b	13ea4 <close_stdout@@Base+0x17a8>
   138ec:	b	13ea4 <close_stdout@@Base+0x17a8>
   138f0:	b	13ea4 <close_stdout@@Base+0x17a8>
   138f4:	b	13ea4 <close_stdout@@Base+0x17a8>
   138f8:	b	13ea4 <close_stdout@@Base+0x17a8>
   138fc:	b	13ea4 <close_stdout@@Base+0x17a8>
   13900:	b	13d98 <close_stdout@@Base+0x169c>
   13904:	b	13d80 <close_stdout@@Base+0x1684>
   13908:	b	13da8 <close_stdout@@Base+0x16ac>
   1390c:	b	13da0 <close_stdout@@Base+0x16a4>
   13910:	b	13d90 <close_stdout@@Base+0x1694>
   13914:	b	13d88 <close_stdout@@Base+0x168c>
   13918:	b	13d4c <close_stdout@@Base+0x1650>
   1391c:	b	13ea4 <close_stdout@@Base+0x17a8>
   13920:	b	13ea4 <close_stdout@@Base+0x17a8>
   13924:	b	13ea4 <close_stdout@@Base+0x17a8>
   13928:	b	13ea4 <close_stdout@@Base+0x17a8>
   1392c:	b	13ea4 <close_stdout@@Base+0x17a8>
   13930:	b	13ea4 <close_stdout@@Base+0x17a8>
   13934:	b	13ea4 <close_stdout@@Base+0x17a8>
   13938:	b	13ea4 <close_stdout@@Base+0x17a8>
   1393c:	b	13ea4 <close_stdout@@Base+0x17a8>
   13940:	b	13ea4 <close_stdout@@Base+0x17a8>
   13944:	b	13ea4 <close_stdout@@Base+0x17a8>
   13948:	b	13ea4 <close_stdout@@Base+0x17a8>
   1394c:	b	13ea4 <close_stdout@@Base+0x17a8>
   13950:	b	13ea4 <close_stdout@@Base+0x17a8>
   13954:	b	13ea4 <close_stdout@@Base+0x17a8>
   13958:	b	13ea4 <close_stdout@@Base+0x17a8>
   1395c:	b	13ea4 <close_stdout@@Base+0x17a8>
   13960:	b	13ea4 <close_stdout@@Base+0x17a8>
   13964:	b	13cd8 <close_stdout@@Base+0x15dc>
   13968:	b	13cd8 <close_stdout@@Base+0x15dc>
   1396c:	b	13cd8 <close_stdout@@Base+0x15dc>
   13970:	b	13cd0 <close_stdout@@Base+0x15d4>
   13974:	b	13cd8 <close_stdout@@Base+0x15dc>
   13978:	b	13bac <close_stdout@@Base+0x14b0>
   1397c:	b	13cd8 <close_stdout@@Base+0x15dc>
   13980:	b	13e4c <close_stdout@@Base+0x1750>
   13984:	b	13cd8 <close_stdout@@Base+0x15dc>
   13988:	b	13cd8 <close_stdout@@Base+0x15dc>
   1398c:	b	13cd8 <close_stdout@@Base+0x15dc>
   13990:	b	13bac <close_stdout@@Base+0x14b0>
   13994:	b	13bac <close_stdout@@Base+0x14b0>
   13998:	b	13bac <close_stdout@@Base+0x14b0>
   1399c:	b	13bac <close_stdout@@Base+0x14b0>
   139a0:	b	13bac <close_stdout@@Base+0x14b0>
   139a4:	b	13bac <close_stdout@@Base+0x14b0>
   139a8:	b	13bac <close_stdout@@Base+0x14b0>
   139ac:	b	13bac <close_stdout@@Base+0x14b0>
   139b0:	b	13bac <close_stdout@@Base+0x14b0>
   139b4:	b	13bac <close_stdout@@Base+0x14b0>
   139b8:	b	13bac <close_stdout@@Base+0x14b0>
   139bc:	b	13bac <close_stdout@@Base+0x14b0>
   139c0:	b	13bac <close_stdout@@Base+0x14b0>
   139c4:	b	13bac <close_stdout@@Base+0x14b0>
   139c8:	b	13bac <close_stdout@@Base+0x14b0>
   139cc:	b	13bac <close_stdout@@Base+0x14b0>
   139d0:	b	13cd8 <close_stdout@@Base+0x15dc>
   139d4:	b	13cd8 <close_stdout@@Base+0x15dc>
   139d8:	b	13cd8 <close_stdout@@Base+0x15dc>
   139dc:	b	13cd8 <close_stdout@@Base+0x15dc>
   139e0:	b	13ae0 <close_stdout@@Base+0x13e4>
   139e4:	b	13ea4 <close_stdout@@Base+0x17a8>
   139e8:	b	13bac <close_stdout@@Base+0x14b0>
   139ec:	b	13bac <close_stdout@@Base+0x14b0>
   139f0:	b	13bac <close_stdout@@Base+0x14b0>
   139f4:	b	13bac <close_stdout@@Base+0x14b0>
   139f8:	b	13bac <close_stdout@@Base+0x14b0>
   139fc:	b	13bac <close_stdout@@Base+0x14b0>
   13a00:	b	13bac <close_stdout@@Base+0x14b0>
   13a04:	b	13bac <close_stdout@@Base+0x14b0>
   13a08:	b	13bac <close_stdout@@Base+0x14b0>
   13a0c:	b	13bac <close_stdout@@Base+0x14b0>
   13a10:	b	13bac <close_stdout@@Base+0x14b0>
   13a14:	b	13bac <close_stdout@@Base+0x14b0>
   13a18:	b	13bac <close_stdout@@Base+0x14b0>
   13a1c:	b	13bac <close_stdout@@Base+0x14b0>
   13a20:	b	13bac <close_stdout@@Base+0x14b0>
   13a24:	b	13bac <close_stdout@@Base+0x14b0>
   13a28:	b	13bac <close_stdout@@Base+0x14b0>
   13a2c:	b	13bac <close_stdout@@Base+0x14b0>
   13a30:	b	13bac <close_stdout@@Base+0x14b0>
   13a34:	b	13bac <close_stdout@@Base+0x14b0>
   13a38:	b	13bac <close_stdout@@Base+0x14b0>
   13a3c:	b	13bac <close_stdout@@Base+0x14b0>
   13a40:	b	13bac <close_stdout@@Base+0x14b0>
   13a44:	b	13bac <close_stdout@@Base+0x14b0>
   13a48:	b	13bac <close_stdout@@Base+0x14b0>
   13a4c:	b	13bac <close_stdout@@Base+0x14b0>
   13a50:	b	13cd8 <close_stdout@@Base+0x15dc>
   13a54:	b	13e30 <close_stdout@@Base+0x1734>
   13a58:	b	13bac <close_stdout@@Base+0x14b0>
   13a5c:	b	13cd8 <close_stdout@@Base+0x15dc>
   13a60:	b	13bac <close_stdout@@Base+0x14b0>
   13a64:	b	13cd8 <close_stdout@@Base+0x15dc>
   13a68:	b	13bac <close_stdout@@Base+0x14b0>
   13a6c:	b	13bac <close_stdout@@Base+0x14b0>
   13a70:	b	13bac <close_stdout@@Base+0x14b0>
   13a74:	b	13bac <close_stdout@@Base+0x14b0>
   13a78:	b	13bac <close_stdout@@Base+0x14b0>
   13a7c:	b	13bac <close_stdout@@Base+0x14b0>
   13a80:	b	13bac <close_stdout@@Base+0x14b0>
   13a84:	b	13bac <close_stdout@@Base+0x14b0>
   13a88:	b	13bac <close_stdout@@Base+0x14b0>
   13a8c:	b	13bac <close_stdout@@Base+0x14b0>
   13a90:	b	13bac <close_stdout@@Base+0x14b0>
   13a94:	b	13bac <close_stdout@@Base+0x14b0>
   13a98:	b	13bac <close_stdout@@Base+0x14b0>
   13a9c:	b	13bac <close_stdout@@Base+0x14b0>
   13aa0:	b	13bac <close_stdout@@Base+0x14b0>
   13aa4:	b	13bac <close_stdout@@Base+0x14b0>
   13aa8:	b	13bac <close_stdout@@Base+0x14b0>
   13aac:	b	13bac <close_stdout@@Base+0x14b0>
   13ab0:	b	13bac <close_stdout@@Base+0x14b0>
   13ab4:	b	13bac <close_stdout@@Base+0x14b0>
   13ab8:	b	13bac <close_stdout@@Base+0x14b0>
   13abc:	b	13bac <close_stdout@@Base+0x14b0>
   13ac0:	b	13bac <close_stdout@@Base+0x14b0>
   13ac4:	b	13bac <close_stdout@@Base+0x14b0>
   13ac8:	b	13bac <close_stdout@@Base+0x14b0>
   13acc:	b	13bac <close_stdout@@Base+0x14b0>
   13ad0:	b	13cb8 <close_stdout@@Base+0x15bc>
   13ad4:	b	13cd8 <close_stdout@@Base+0x15dc>
   13ad8:	b	13cb8 <close_stdout@@Base+0x15bc>
   13adc:	b	13cd0 <close_stdout@@Base+0x15d4>
   13ae0:	ldr	r3, [sp, #160]	; 0xa0
   13ae4:	cmp	r3, #2
   13ae8:	beq	14374 <close_stdout@@Base+0x1c78>
   13aec:	cmp	r3, #3
   13af0:	bne	13bac <close_stdout@@Base+0x14b0>
   13af4:	ldr	r1, [sp, #164]	; 0xa4
   13af8:	tst	r1, #4
   13afc:	beq	13bac <close_stdout@@Base+0x14b0>
   13b00:	add	r3, fp, #2
   13b04:	cmp	r8, r3
   13b08:	bls	13bac <close_stdout@@Base+0x14b0>
   13b0c:	ldrb	r2, [r5, #1]
   13b10:	mov	r1, #1
   13b14:	cmp	r2, #63	; 0x3f
   13b18:	bne	13bac <close_stdout@@Base+0x14b0>
   13b1c:	ldr	r0, [sp, #32]
   13b20:	ldrb	ip, [r0, r3]
   13b24:	sub	r0, ip, #33	; 0x21
   13b28:	uxtb	r0, r0
   13b2c:	cmp	r0, #29
   13b30:	bhi	13bac <close_stdout@@Base+0x14b0>
   13b34:	lsl	r1, r1, r0
   13b38:	movw	r0, #20929	; 0x51c1
   13b3c:	movt	r0, #14336	; 0x3800
   13b40:	and	r0, r1, r0
   13b44:	cmp	r0, #0
   13b48:	beq	13bac <close_stdout@@Base+0x14b0>
   13b4c:	ldr	r1, [sp, #36]	; 0x24
   13b50:	cmp	r1, #0
   13b54:	bne	13cf4 <close_stdout@@Base+0x15f8>
   13b58:	cmp	r9, sl
   13b5c:	mov	r4, ip
   13b60:	mov	fp, r3
   13b64:	ldrcc	r0, [sp, #40]	; 0x28
   13b68:	strbcc	r2, [r0, r9]
   13b6c:	add	r2, r9, #1
   13b70:	cmp	sl, r2
   13b74:	ldrhi	r0, [sp, #40]	; 0x28
   13b78:	movhi	r1, #34	; 0x22
   13b7c:	strbhi	r1, [r0, r2]
   13b80:	add	r2, r9, #2
   13b84:	cmp	sl, r2
   13b88:	ldrhi	r0, [sp, #40]	; 0x28
   13b8c:	movhi	r1, #34	; 0x22
   13b90:	strbhi	r1, [r0, r2]
   13b94:	add	r2, r9, #3
   13b98:	cmp	sl, r2
   13b9c:	add	r9, r9, #4
   13ba0:	ldrhi	r0, [sp, #40]	; 0x28
   13ba4:	movhi	r1, #63	; 0x3f
   13ba8:	strbhi	r1, [r0, r2]
   13bac:	ldr	r0, [sp, #44]	; 0x2c
   13bb0:	cmp	r0, #0
   13bb4:	bne	13bdc <close_stdout@@Base+0x14e0>
   13bb8:	ldr	r1, [sp, #48]	; 0x30
   13bbc:	cmp	r1, #0
   13bc0:	beq	13bdc <close_stdout@@Base+0x14e0>
   13bc4:	ubfx	r2, r4, #5, #8
   13bc8:	and	r3, r4, #31
   13bcc:	ldr	r2, [r1, r2, lsl #2]
   13bd0:	lsr	r3, r2, r3
   13bd4:	tst	r3, #1
   13bd8:	bne	13be4 <close_stdout@@Base+0x14e8>
   13bdc:	cmp	r6, #0
   13be0:	beq	13c04 <close_stdout@@Base+0x1508>
   13be4:	ldr	r2, [sp, #36]	; 0x24
   13be8:	cmp	r2, #0
   13bec:	bne	13cf4 <close_stdout@@Base+0x15f8>
   13bf0:	cmp	r9, sl
   13bf4:	ldrcc	r0, [sp, #40]	; 0x28
   13bf8:	movcc	r3, #92	; 0x5c
   13bfc:	strbcc	r3, [r0, r9]
   13c00:	add	r9, r9, #1
   13c04:	add	fp, fp, #1
   13c08:	cmp	r9, sl
   13c0c:	ldrcc	r1, [sp, #40]	; 0x28
   13c10:	strbcc	r4, [r1, r9]
   13c14:	cmn	r8, #1
   13c18:	add	r9, r9, #1
   13c1c:	bne	138a4 <close_stdout@@Base+0x11a8>
   13c20:	ldr	r2, [sp, #32]
   13c24:	ldrb	r3, [r2, fp]
   13c28:	adds	r3, r3, #0
   13c2c:	movne	r3, #1
   13c30:	cmp	r3, #0
   13c34:	bne	138b4 <close_stdout@@Base+0x11b8>
   13c38:	ldr	r3, [sp, #160]	; 0xa0
   13c3c:	cmp	r9, #0
   13c40:	cmpeq	r3, #2
   13c44:	bne	13c54 <close_stdout@@Base+0x1558>
   13c48:	ldr	r0, [sp, #36]	; 0x24
   13c4c:	cmp	r0, #0
   13c50:	bne	13cf4 <close_stdout@@Base+0x15f8>
   13c54:	ldr	r1, [sp, #36]	; 0x24
   13c58:	ldr	r2, [sp, #52]	; 0x34
   13c5c:	eor	r3, r1, #1
   13c60:	cmp	r2, #0
   13c64:	moveq	r3, #0
   13c68:	andne	r3, r3, #1
   13c6c:	cmp	r3, #0
   13c70:	beq	13c9c <close_stdout@@Base+0x15a0>
   13c74:	ldrb	r3, [r2]
   13c78:	cmp	r3, #0
   13c7c:	beq	13c9c <close_stdout@@Base+0x15a0>
   13c80:	ldr	r1, [sp, #40]	; 0x28
   13c84:	cmp	sl, r9
   13c88:	strbhi	r3, [r1, r9]
   13c8c:	ldrb	r3, [r2, #1]!
   13c90:	add	r9, r9, #1
   13c94:	cmp	r3, #0
   13c98:	bne	13c84 <close_stdout@@Base+0x1588>
   13c9c:	cmp	r9, sl
   13ca0:	movcs	r0, r9
   13ca4:	ldrcc	r1, [sp, #40]	; 0x28
   13ca8:	movcc	r3, #0
   13cac:	movcc	r0, r9
   13cb0:	strbcc	r3, [r1, r9]
   13cb4:	b	13d30 <close_stdout@@Base+0x1634>
   13cb8:	cmn	r8, #1
   13cbc:	beq	14384 <close_stdout@@Base+0x1c88>
   13cc0:	subs	r3, r8, #1
   13cc4:	movne	r3, #1
   13cc8:	cmp	r3, #0
   13ccc:	bne	13bac <close_stdout@@Base+0x14b0>
   13cd0:	cmp	fp, #0
   13cd4:	bne	13bac <close_stdout@@Base+0x14b0>
   13cd8:	ldr	r3, [sp, #36]	; 0x24
   13cdc:	ldr	r0, [sp, #160]	; 0xa0
   13ce0:	cmp	r0, #2
   13ce4:	movne	r3, #0
   13ce8:	andeq	r3, r3, #1
   13cec:	cmp	r3, #0
   13cf0:	beq	13bac <close_stdout@@Base+0x14b0>
   13cf4:	ldr	r2, [sp, #164]	; 0xa4
   13cf8:	mov	ip, #0
   13cfc:	ldr	r0, [sp, #160]	; 0xa0
   13d00:	bic	r3, r2, #2
   13d04:	ldr	r1, [sp, #72]	; 0x48
   13d08:	ldr	r2, [sp, #68]	; 0x44
   13d0c:	stm	sp, {r0, r3}
   13d10:	mov	r3, r8
   13d14:	str	r1, [sp, #12]
   13d18:	mov	r1, sl
   13d1c:	str	r2, [sp, #16]
   13d20:	ldr	r0, [sp, #40]	; 0x28
   13d24:	ldr	r2, [sp, #32]
   13d28:	str	ip, [sp, #8]
   13d2c:	bl	137c4 <close_stdout@@Base+0x10c8>
   13d30:	ldr	r1, [sp, #56]	; 0x38
   13d34:	ldr	r2, [sp, #116]	; 0x74
   13d38:	ldr	r3, [r1]
   13d3c:	cmp	r2, r3
   13d40:	bne	14474 <close_stdout@@Base+0x1d78>
   13d44:	add	sp, sp, #124	; 0x7c
   13d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d4c:	mov	r3, #114	; 0x72
   13d50:	ldr	r2, [sp, #36]	; 0x24
   13d54:	ldr	r0, [sp, #160]	; 0xa0
   13d58:	cmp	r0, #2
   13d5c:	movne	r2, #0
   13d60:	andeq	r2, r2, #1
   13d64:	cmp	r2, #0
   13d68:	bne	13cf4 <close_stdout@@Base+0x15f8>
   13d6c:	ldr	r1, [sp, #24]
   13d70:	cmp	r1, #0
   13d74:	beq	13bac <close_stdout@@Base+0x14b0>
   13d78:	mov	r4, r3
   13d7c:	b	13be4 <close_stdout@@Base+0x14e8>
   13d80:	mov	r3, #98	; 0x62
   13d84:	b	13d6c <close_stdout@@Base+0x1670>
   13d88:	mov	r3, #102	; 0x66
   13d8c:	b	13d6c <close_stdout@@Base+0x1670>
   13d90:	mov	r3, #118	; 0x76
   13d94:	b	13d6c <close_stdout@@Base+0x1670>
   13d98:	mov	r3, #97	; 0x61
   13d9c:	b	13d6c <close_stdout@@Base+0x1670>
   13da0:	mov	r3, #110	; 0x6e
   13da4:	b	13d50 <close_stdout@@Base+0x1654>
   13da8:	mov	r3, #116	; 0x74
   13dac:	b	13d50 <close_stdout@@Base+0x1654>
   13db0:	ldr	r2, [sp, #24]
   13db4:	cmp	r2, #0
   13db8:	beq	14360 <close_stdout@@Base+0x1c64>
   13dbc:	ldr	r3, [sp, #36]	; 0x24
   13dc0:	cmp	r3, #0
   13dc4:	bne	13cf4 <close_stdout@@Base+0x15f8>
   13dc8:	cmp	r9, sl
   13dcc:	add	r2, r9, #1
   13dd0:	ldrcc	r0, [sp, #40]	; 0x28
   13dd4:	movcc	r3, #92	; 0x5c
   13dd8:	strbcc	r3, [r0, r9]
   13ddc:	add	r3, fp, #1
   13de0:	cmp	r8, r3
   13de4:	bls	13e24 <close_stdout@@Base+0x1728>
   13de8:	ldr	r1, [sp, #32]
   13dec:	ldrb	r3, [r1, r3]
   13df0:	sub	r3, r3, #48	; 0x30
   13df4:	cmp	r3, #9
   13df8:	bhi	13e24 <close_stdout@@Base+0x1728>
   13dfc:	cmp	sl, r2
   13e00:	ldrhi	r0, [sp, #40]	; 0x28
   13e04:	movhi	r3, #48	; 0x30
   13e08:	strbhi	r3, [r0, r2]
   13e0c:	add	r3, r9, #2
   13e10:	cmp	sl, r3
   13e14:	ldrhi	r1, [sp, #40]	; 0x28
   13e18:	movhi	r2, #48	; 0x30
   13e1c:	strbhi	r2, [r1, r3]
   13e20:	add	r2, r9, #3
   13e24:	mov	r9, r2
   13e28:	mov	r4, #48	; 0x30
   13e2c:	b	13bb8 <close_stdout@@Base+0x14bc>
   13e30:	ldr	r1, [sp, #76]	; 0x4c
   13e34:	cmp	r1, #0
   13e38:	beq	13e44 <close_stdout@@Base+0x1748>
   13e3c:	cmp	r7, #0
   13e40:	bne	13c04 <close_stdout@@Base+0x1508>
   13e44:	mov	r3, r4
   13e48:	b	13d50 <close_stdout@@Base+0x1654>
   13e4c:	ldr	r1, [sp, #160]	; 0xa0
   13e50:	cmp	r1, #2
   13e54:	bne	13bac <close_stdout@@Base+0x14b0>
   13e58:	ldr	r2, [sp, #36]	; 0x24
   13e5c:	cmp	r2, #0
   13e60:	bne	13cf4 <close_stdout@@Base+0x15f8>
   13e64:	cmp	r9, sl
   13e68:	ldrcc	r0, [sp, #40]	; 0x28
   13e6c:	movcc	r3, #39	; 0x27
   13e70:	strbcc	r3, [r0, r9]
   13e74:	add	r3, r9, #1
   13e78:	cmp	sl, r3
   13e7c:	ldrhi	r1, [sp, #40]	; 0x28
   13e80:	movhi	r2, #92	; 0x5c
   13e84:	strbhi	r2, [r1, r3]
   13e88:	add	r3, r9, #2
   13e8c:	cmp	sl, r3
   13e90:	add	r9, r9, #3
   13e94:	ldrhi	r0, [sp, #40]	; 0x28
   13e98:	movhi	r2, #39	; 0x27
   13e9c:	strbhi	r2, [r0, r3]
   13ea0:	b	13bac <close_stdout@@Base+0x14b0>
   13ea4:	ldr	r1, [sp, #64]	; 0x40
   13ea8:	cmp	r1, #1
   13eac:	bne	141a4 <close_stdout@@Base+0x1aa8>
   13eb0:	bl	113d4 <__ctype_b_loc@plt>
   13eb4:	ldr	r2, [sp, #64]	; 0x40
   13eb8:	sxth	r3, r4
   13ebc:	str	r2, [sp, #60]	; 0x3c
   13ec0:	lsl	r3, r3, #1
   13ec4:	ldr	r2, [r0]
   13ec8:	ldrh	r2, [r2, r3]
   13ecc:	eor	r2, r2, #16384	; 0x4000
   13ed0:	ubfx	r2, r2, #14, #1
   13ed4:	ldr	r1, [sp, #24]
   13ed8:	ands	r2, r2, r1
   13edc:	beq	13bac <close_stdout@@Base+0x14b0>
   13ee0:	ldr	r3, [sp, #60]	; 0x3c
   13ee4:	mov	r0, #92	; 0x5c
   13ee8:	ldr	r7, [sp, #36]	; 0x24
   13eec:	add	r1, r3, fp
   13ef0:	str	r8, [sp, #60]	; 0x3c
   13ef4:	ldr	r3, [sp, #40]	; 0x28
   13ef8:	b	13f5c <close_stdout@@Base+0x1860>
   13efc:	cmp	r7, #0
   13f00:	bne	1439c <close_stdout@@Base+0x1ca0>
   13f04:	add	ip, r9, #1
   13f08:	cmp	r9, sl
   13f0c:	strbcc	r0, [r3, r9]
   13f10:	cmp	sl, ip
   13f14:	lsrhi	r8, r4, #6
   13f18:	addhi	r8, r8, #48	; 0x30
   13f1c:	strbhi	r8, [r3, ip]
   13f20:	add	ip, r9, #2
   13f24:	add	r9, r9, #3
   13f28:	cmp	sl, ip
   13f2c:	ubfxhi	r8, r4, #3, #3
   13f30:	and	r4, r4, #7
   13f34:	add	r4, r4, #48	; 0x30
   13f38:	addhi	r8, r8, #48	; 0x30
   13f3c:	strbhi	r8, [r3, ip]
   13f40:	add	fp, fp, #1
   13f44:	cmp	r1, fp
   13f48:	bls	13f88 <close_stdout@@Base+0x188c>
   13f4c:	cmp	r9, sl
   13f50:	strbcc	r4, [r3, r9]
   13f54:	ldrb	r4, [r5, #1]!
   13f58:	add	r9, r9, #1
   13f5c:	cmp	r2, #0
   13f60:	bne	13efc <close_stdout@@Base+0x1800>
   13f64:	cmp	r6, #0
   13f68:	beq	13f40 <close_stdout@@Base+0x1844>
   13f6c:	add	fp, fp, #1
   13f70:	cmp	r9, sl
   13f74:	strbcc	r0, [r3, r9]
   13f78:	cmp	r1, fp
   13f7c:	add	r9, r9, #1
   13f80:	mov	r6, #0
   13f84:	bhi	13f4c <close_stdout@@Base+0x1850>
   13f88:	ldr	r8, [sp, #60]	; 0x3c
   13f8c:	b	13c08 <close_stdout@@Base+0x150c>
   13f90:	ldr	r3, [sp, #36]	; 0x24
   13f94:	cmp	r3, #0
   13f98:	bne	1449c <close_stdout@@Base+0x1da0>
   13f9c:	cmp	sl, #0
   13fa0:	beq	143b4 <close_stdout@@Base+0x1cb8>
   13fa4:	ldr	r1, [sp, #40]	; 0x28
   13fa8:	mov	r0, #1
   13fac:	ldr	r2, [pc, #1296]	; 144c4 <close_stdout@@Base+0x1dc8>
   13fb0:	mov	r3, #34	; 0x22
   13fb4:	str	r0, [sp, #24]
   13fb8:	mov	r9, r0
   13fbc:	add	r2, pc, r2
   13fc0:	str	r0, [sp, #28]
   13fc4:	strb	r3, [r1]
   13fc8:	str	r2, [sp, #52]	; 0x34
   13fcc:	b	13878 <close_stdout@@Base+0x117c>
   13fd0:	ldr	r3, [pc, #1264]	; 144c8 <close_stdout@@Base+0x1dcc>
   13fd4:	mov	r2, #1
   13fd8:	mov	r0, #3
   13fdc:	str	r2, [sp, #36]	; 0x24
   13fe0:	add	r3, pc, r3
   13fe4:	str	r2, [sp, #24]
   13fe8:	str	r3, [sp, #52]	; 0x34
   13fec:	mov	r9, #0
   13ff0:	str	r2, [sp, #28]
   13ff4:	str	r0, [sp, #160]	; 0xa0
   13ff8:	b	13878 <close_stdout@@Base+0x117c>
   13ffc:	mov	r0, #0
   14000:	mov	r1, #1
   14004:	str	r0, [sp, #36]	; 0x24
   14008:	mov	r9, r0
   1400c:	str	r1, [sp, #24]
   14010:	str	r0, [sp, #28]
   14014:	str	r0, [sp, #52]	; 0x34
   14018:	b	13878 <close_stdout@@Base+0x117c>
   1401c:	ldr	r3, [sp, #160]	; 0xa0
   14020:	cmp	r3, #8
   14024:	beq	14050 <close_stdout@@Base+0x1954>
   14028:	ldr	r0, [pc, #1180]	; 144cc <close_stdout@@Base+0x1dd0>
   1402c:	mov	r1, r3
   14030:	add	r0, pc, r0
   14034:	bl	13660 <close_stdout@@Base+0xf64>
   14038:	ldr	r1, [sp, #160]	; 0xa0
   1403c:	str	r0, [sp, #72]	; 0x48
   14040:	ldr	r0, [pc, #1160]	; 144d0 <close_stdout@@Base+0x1dd4>
   14044:	add	r0, pc, r0
   14048:	bl	13660 <close_stdout@@Base+0xf64>
   1404c:	str	r0, [sp, #68]	; 0x44
   14050:	ldr	r0, [sp, #36]	; 0x24
   14054:	cmp	r0, #0
   14058:	movne	r9, #0
   1405c:	bne	14094 <close_stdout@@Base+0x1998>
   14060:	ldr	r1, [sp, #72]	; 0x48
   14064:	ldrb	r3, [r1]
   14068:	cmp	r3, #0
   1406c:	beq	1446c <close_stdout@@Base+0x1d70>
   14070:	mov	r2, r1
   14074:	ldr	r1, [sp, #40]	; 0x28
   14078:	mov	r9, r0
   1407c:	cmp	r9, sl
   14080:	strbcc	r3, [r1, r9]
   14084:	ldrb	r3, [r2, #1]!
   14088:	add	r9, r9, #1
   1408c:	cmp	r3, #0
   14090:	bne	1407c <close_stdout@@Base+0x1980>
   14094:	ldr	r0, [sp, #68]	; 0x44
   14098:	str	r0, [sp, #52]	; 0x34
   1409c:	bl	113f8 <strlen@plt>
   140a0:	mov	r2, #1
   140a4:	str	r2, [sp, #24]
   140a8:	str	r0, [sp, #28]
   140ac:	b	13878 <close_stdout@@Base+0x117c>
   140b0:	ldr	r3, [pc, #1052]	; 144d4 <close_stdout@@Base+0x1dd8>
   140b4:	mov	r2, #0
   140b8:	mov	r1, #1
   140bc:	mov	r0, #2
   140c0:	add	r3, pc, r3
   140c4:	str	r1, [sp, #36]	; 0x24
   140c8:	str	r2, [sp, #24]
   140cc:	mov	r9, r2
   140d0:	str	r1, [sp, #28]
   140d4:	str	r3, [sp, #52]	; 0x34
   140d8:	str	r0, [sp, #160]	; 0xa0
   140dc:	b	13878 <close_stdout@@Base+0x117c>
   140e0:	ldr	r3, [sp, #36]	; 0x24
   140e4:	cmp	r3, #0
   140e8:	bne	14478 <close_stdout@@Base+0x1d7c>
   140ec:	cmp	sl, #0
   140f0:	beq	143d4 <close_stdout@@Base+0x1cd8>
   140f4:	ldr	r1, [sp, #40]	; 0x28
   140f8:	mov	r3, #39	; 0x27
   140fc:	ldr	r2, [sp, #36]	; 0x24
   14100:	mov	r0, #1
   14104:	mov	r9, r0
   14108:	str	r0, [sp, #28]
   1410c:	strb	r3, [r1]
   14110:	ldr	r3, [pc, #960]	; 144d8 <close_stdout@@Base+0x1ddc>
   14114:	str	r2, [sp, #24]
   14118:	add	r3, pc, r3
   1411c:	str	r3, [sp, #52]	; 0x34
   14120:	b	13878 <close_stdout@@Base+0x117c>
   14124:	ldr	r2, [sp, #28]
   14128:	cmp	r2, #1
   1412c:	add	r4, fp, r2
   14130:	movls	r3, #0
   14134:	movhi	r3, #1
   14138:	cmn	r8, #1
   1413c:	movne	r3, #0
   14140:	cmp	r3, #0
   14144:	beq	14154 <close_stdout@@Base+0x1a58>
   14148:	ldr	r0, [sp, #32]
   1414c:	bl	113f8 <strlen@plt>
   14150:	mov	r8, r0
   14154:	cmp	r8, r4
   14158:	ldrcc	r3, [sp, #32]
   1415c:	movcc	r6, #0
   14160:	addcc	r5, r3, fp
   14164:	bcc	138d4 <close_stdout@@Base+0x11d8>
   14168:	ldr	r0, [sp, #32]
   1416c:	ldr	r1, [sp, #52]	; 0x34
   14170:	add	r5, r0, fp
   14174:	ldr	r2, [sp, #28]
   14178:	mov	r0, r5
   1417c:	bl	112a8 <memcmp@plt>
   14180:	cmp	r0, #0
   14184:	bne	1419c <close_stdout@@Base+0x1aa0>
   14188:	ldr	r1, [sp, #36]	; 0x24
   1418c:	cmp	r1, #0
   14190:	bne	13cf4 <close_stdout@@Base+0x15f8>
   14194:	mov	r6, #1
   14198:	b	138d4 <close_stdout@@Base+0x11d8>
   1419c:	mov	r6, #0
   141a0:	b	138d4 <close_stdout@@Base+0x11d8>
   141a4:	add	r7, sp, #108	; 0x6c
   141a8:	cmn	r8, #1
   141ac:	mov	r3, #0
   141b0:	str	r3, [sp, #108]	; 0x6c
   141b4:	str	r3, [r7, #4]
   141b8:	beq	143a4 <close_stdout@@Base+0x1ca8>
   141bc:	mov	r1, #0
   141c0:	ldr	r0, [sp, #32]
   141c4:	mov	ip, #1
   141c8:	str	r9, [sp, #88]	; 0x58
   141cc:	str	r6, [sp, #96]	; 0x60
   141d0:	mov	r9, r1
   141d4:	str	r5, [sp, #100]	; 0x64
   141d8:	mov	r6, ip
   141dc:	mov	r5, r7
   141e0:	add	r3, sp, #104	; 0x68
   141e4:	sub	r0, r0, #1
   141e8:	str	r3, [sp, #80]	; 0x50
   141ec:	str	r0, [sp, #84]	; 0x54
   141f0:	str	r1, [sp, #60]	; 0x3c
   141f4:	str	r4, [sp, #92]	; 0x5c
   141f8:	ldr	r2, [sp, #32]
   141fc:	add	r7, r9, fp
   14200:	add	r0, sp, #104	; 0x68
   14204:	mov	r3, r5
   14208:	add	r4, r2, r7
   1420c:	rsb	r2, r7, r8
   14210:	mov	r1, r4
   14214:	bl	1135c <mbrtowc@plt>
   14218:	subs	r2, r0, #0
   1421c:	beq	14328 <close_stdout@@Base+0x1c2c>
   14220:	cmn	r2, #1
   14224:	beq	14450 <close_stdout@@Base+0x1d54>
   14228:	cmn	r2, #2
   1422c:	beq	143f4 <close_stdout@@Base+0x1cf8>
   14230:	ldr	r3, [sp, #36]	; 0x24
   14234:	ldr	r0, [sp, #160]	; 0xa0
   14238:	cmp	r0, #2
   1423c:	movne	r3, #0
   14240:	andeq	r3, r3, #1
   14244:	cmp	r3, #0
   14248:	beq	14304 <close_stdout@@Base+0x1c08>
   1424c:	cmp	r2, #1
   14250:	beq	14304 <close_stdout@@Base+0x1c08>
   14254:	ldr	r1, [sp, #84]	; 0x54
   14258:	add	r3, r1, r2
   1425c:	add	r7, r3, r7
   14260:	ldrb	r3, [r4, #1]!
   14264:	sub	r3, r3, #91	; 0x5b
   14268:	cmp	r3, #33	; 0x21
   1426c:	addls	pc, pc, r3, lsl #2
   14270:	b	142fc <close_stdout@@Base+0x1c00>
   14274:	b	13cf4 <close_stdout@@Base+0x15f8>
   14278:	b	13cf4 <close_stdout@@Base+0x15f8>
   1427c:	b	142fc <close_stdout@@Base+0x1c00>
   14280:	b	13cf4 <close_stdout@@Base+0x15f8>
   14284:	b	142fc <close_stdout@@Base+0x1c00>
   14288:	b	13cf4 <close_stdout@@Base+0x15f8>
   1428c:	b	142fc <close_stdout@@Base+0x1c00>
   14290:	b	142fc <close_stdout@@Base+0x1c00>
   14294:	b	142fc <close_stdout@@Base+0x1c00>
   14298:	b	142fc <close_stdout@@Base+0x1c00>
   1429c:	b	142fc <close_stdout@@Base+0x1c00>
   142a0:	b	142fc <close_stdout@@Base+0x1c00>
   142a4:	b	142fc <close_stdout@@Base+0x1c00>
   142a8:	b	142fc <close_stdout@@Base+0x1c00>
   142ac:	b	142fc <close_stdout@@Base+0x1c00>
   142b0:	b	142fc <close_stdout@@Base+0x1c00>
   142b4:	b	142fc <close_stdout@@Base+0x1c00>
   142b8:	b	142fc <close_stdout@@Base+0x1c00>
   142bc:	b	142fc <close_stdout@@Base+0x1c00>
   142c0:	b	142fc <close_stdout@@Base+0x1c00>
   142c4:	b	142fc <close_stdout@@Base+0x1c00>
   142c8:	b	142fc <close_stdout@@Base+0x1c00>
   142cc:	b	142fc <close_stdout@@Base+0x1c00>
   142d0:	b	142fc <close_stdout@@Base+0x1c00>
   142d4:	b	142fc <close_stdout@@Base+0x1c00>
   142d8:	b	142fc <close_stdout@@Base+0x1c00>
   142dc:	b	142fc <close_stdout@@Base+0x1c00>
   142e0:	b	142fc <close_stdout@@Base+0x1c00>
   142e4:	b	142fc <close_stdout@@Base+0x1c00>
   142e8:	b	142fc <close_stdout@@Base+0x1c00>
   142ec:	b	142fc <close_stdout@@Base+0x1c00>
   142f0:	b	142fc <close_stdout@@Base+0x1c00>
   142f4:	b	142fc <close_stdout@@Base+0x1c00>
   142f8:	b	13cf4 <close_stdout@@Base+0x15f8>
   142fc:	cmp	r4, r7
   14300:	bne	14260 <close_stdout@@Base+0x1b64>
   14304:	ldr	r0, [sp, #104]	; 0x68
   14308:	add	r9, r9, r2
   1430c:	bl	112fc <iswprint@plt>
   14310:	cmp	r0, #0
   14314:	mov	r0, r5
   14318:	moveq	r6, #0
   1431c:	bl	1129c <mbsinit@plt>
   14320:	cmp	r0, #0
   14324:	beq	141f8 <close_stdout@@Base+0x1afc>
   14328:	mov	ip, r6
   1432c:	eor	r2, ip, #1
   14330:	str	r9, [sp, #60]	; 0x3c
   14334:	ldr	r4, [sp, #92]	; 0x5c
   14338:	uxtb	r2, r2
   1433c:	ldr	r9, [sp, #88]	; 0x58
   14340:	ldr	r6, [sp, #96]	; 0x60
   14344:	ldr	r5, [sp, #100]	; 0x64
   14348:	ldr	r3, [sp, #60]	; 0x3c
   1434c:	cmp	r3, #1
   14350:	bls	13ed4 <close_stdout@@Base+0x17d8>
   14354:	ldr	r0, [sp, #24]
   14358:	and	r2, r2, r0
   1435c:	b	13ee0 <close_stdout@@Base+0x17e4>
   14360:	ldr	r2, [sp, #164]	; 0xa4
   14364:	tst	r2, #1
   14368:	addne	fp, fp, #1
   1436c:	bne	1389c <close_stdout@@Base+0x11a0>
   14370:	b	13bac <close_stdout@@Base+0x14b0>
   14374:	ldr	r0, [sp, #36]	; 0x24
   14378:	cmp	r0, #0
   1437c:	beq	13bac <close_stdout@@Base+0x14b0>
   14380:	b	13cf4 <close_stdout@@Base+0x15f8>
   14384:	ldr	r2, [sp, #32]
   14388:	ldrb	r3, [r2, #1]
   1438c:	adds	r3, r3, #0
   14390:	movne	r3, #1
   14394:	b	13cc8 <close_stdout@@Base+0x15cc>
   14398:	bl	11524 <abort@plt>
   1439c:	ldr	r8, [sp, #60]	; 0x3c
   143a0:	b	13cf4 <close_stdout@@Base+0x15f8>
   143a4:	ldr	r0, [sp, #32]
   143a8:	bl	113f8 <strlen@plt>
   143ac:	mov	r8, r0
   143b0:	b	141bc <close_stdout@@Base+0x1ac0>
   143b4:	ldr	r2, [pc, #288]	; 144dc <close_stdout@@Base+0x1de0>
   143b8:	mov	r1, #1
   143bc:	mov	r9, r1
   143c0:	str	r1, [sp, #24]
   143c4:	add	r2, pc, r2
   143c8:	str	r1, [sp, #28]
   143cc:	str	r2, [sp, #52]	; 0x34
   143d0:	b	13878 <close_stdout@@Base+0x117c>
   143d4:	ldr	r2, [pc, #260]	; 144e0 <close_stdout@@Base+0x1de4>
   143d8:	mov	r3, #1
   143dc:	mov	r9, r3
   143e0:	str	r3, [sp, #28]
   143e4:	add	r2, pc, r2
   143e8:	str	sl, [sp, #24]
   143ec:	str	r2, [sp, #52]	; 0x34
   143f0:	b	13878 <close_stdout@@Base+0x117c>
   143f4:	cmp	r8, r7
   143f8:	str	r9, [sp, #60]	; 0x3c
   143fc:	mov	ip, r4
   14400:	ldr	r6, [sp, #96]	; 0x60
   14404:	ldr	r9, [sp, #88]	; 0x58
   14408:	ldr	r4, [sp, #92]	; 0x5c
   1440c:	ldr	r5, [sp, #100]	; 0x64
   14410:	bls	14448 <close_stdout@@Base+0x1d4c>
   14414:	ldrb	r3, [ip]
   14418:	cmp	r3, #0
   1441c:	beq	14448 <close_stdout@@Base+0x1d4c>
   14420:	ldr	r3, [sp, #60]	; 0x3c
   14424:	b	14434 <close_stdout@@Base+0x1d38>
   14428:	ldrb	r2, [r5, r3]
   1442c:	cmp	r2, #0
   14430:	beq	14444 <close_stdout@@Base+0x1d48>
   14434:	add	r3, r3, #1
   14438:	add	r2, fp, r3
   1443c:	cmp	r8, r2
   14440:	bhi	14428 <close_stdout@@Base+0x1d2c>
   14444:	str	r3, [sp, #60]	; 0x3c
   14448:	mov	r2, #1
   1444c:	b	14348 <close_stdout@@Base+0x1c4c>
   14450:	str	r9, [sp, #60]	; 0x3c
   14454:	mov	r2, #1
   14458:	ldr	r4, [sp, #92]	; 0x5c
   1445c:	ldr	r6, [sp, #96]	; 0x60
   14460:	ldr	r9, [sp, #88]	; 0x58
   14464:	ldr	r5, [sp, #100]	; 0x64
   14468:	b	14348 <close_stdout@@Base+0x1c4c>
   1446c:	ldr	r9, [sp, #36]	; 0x24
   14470:	b	14094 <close_stdout@@Base+0x1998>
   14474:	bl	112cc <__stack_chk_fail@plt>
   14478:	ldr	r1, [pc, #100]	; 144e4 <close_stdout@@Base+0x1de8>
   1447c:	mov	r3, #0
   14480:	mov	r0, #1
   14484:	str	r3, [sp, #24]
   14488:	add	r1, pc, r1
   1448c:	str	r0, [sp, #28]
   14490:	mov	r9, r3
   14494:	str	r1, [sp, #52]	; 0x34
   14498:	b	13878 <close_stdout@@Base+0x117c>
   1449c:	ldr	r0, [pc, #68]	; 144e8 <close_stdout@@Base+0x1dec>
   144a0:	mov	r3, #1
   144a4:	mov	r9, #0
   144a8:	str	r3, [sp, #24]
   144ac:	add	r0, pc, r0
   144b0:	str	r3, [sp, #28]
   144b4:	str	r0, [sp, #52]	; 0x34
   144b8:	b	13878 <close_stdout@@Base+0x117c>
   144bc:	andeq	r6, r1, r8, lsl r8
   144c0:	andeq	r0, r0, r4, lsr r1
   144c4:	andeq	r4, r0, ip, lsr #30
   144c8:	andeq	r4, r0, r8, lsl #30
   144cc:	andeq	r4, r0, r4, asr #29
   144d0:	andeq	r4, r0, r0, lsr #29
   144d4:	andeq	r4, r0, r4, lsr #28
   144d8:	andeq	r4, r0, ip, asr #27
   144dc:	andeq	r4, r0, r4, lsr #22
   144e0:	andeq	r4, r0, r0, lsl #22
   144e4:	andeq	r4, r0, ip, asr sl
   144e8:	andeq	r4, r0, ip, lsr sl
   144ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144f0:	sub	sp, sp, #44	; 0x2c
   144f4:	mov	r6, r0
   144f8:	mov	r9, r1
   144fc:	mov	sl, r2
   14500:	mov	r4, r3
   14504:	bl	11428 <__errno_location@plt>
   14508:	ldr	fp, [pc, #412]	; 146ac <close_stdout@@Base+0x1fb0>
   1450c:	cmp	r6, #0
   14510:	add	fp, pc, fp
   14514:	ldr	r5, [fp]
   14518:	ldr	r1, [r0]
   1451c:	mov	r8, r0
   14520:	str	r1, [sp, #36]	; 0x24
   14524:	blt	146a4 <close_stdout@@Base+0x1fa8>
   14528:	ldr	r3, [pc, #384]	; 146b0 <close_stdout@@Base+0x1fb4>
   1452c:	add	r3, pc, r3
   14530:	ldr	r3, [r3]
   14534:	cmp	r6, r3
   14538:	bcc	1458c <close_stdout@@Base+0x1e90>
   1453c:	add	r7, r6, #1
   14540:	cmn	r7, #-536870911	; 0xe0000001
   14544:	bhi	146a8 <close_stdout@@Base+0x1fac>
   14548:	add	r3, fp, #4
   1454c:	cmp	r5, r3
   14550:	beq	1467c <close_stdout@@Base+0x1f80>
   14554:	mov	r0, r5
   14558:	lsl	r1, r7, #3
   1455c:	bl	15a24 <close_stdout@@Base+0x3328>
   14560:	mov	r5, r0
   14564:	str	r0, [fp]
   14568:	ldr	fp, [pc, #324]	; 146b4 <close_stdout@@Base+0x1fb8>
   1456c:	mov	r1, #0
   14570:	add	fp, pc, fp
   14574:	ldr	r0, [fp]
   14578:	rsb	r2, r0, r7
   1457c:	add	r0, r5, r0, lsl #3
   14580:	lsl	r2, r2, #3
   14584:	bl	11464 <memset@plt>
   14588:	str	r7, [fp]
   1458c:	add	r2, r4, #8
   14590:	str	r2, [sp, #32]
   14594:	ldr	r1, [r4]
   14598:	add	fp, r5, r6, lsl #3
   1459c:	ldr	lr, [sp, #32]
   145a0:	mov	r2, r9
   145a4:	ldr	r3, [r4, #4]
   145a8:	ldr	ip, [r5, r6, lsl #3]
   145ac:	ldr	r7, [fp, #4]
   145b0:	orr	r3, r3, #1
   145b4:	str	r1, [sp]
   145b8:	str	r3, [sp, #4]
   145bc:	mov	r1, ip
   145c0:	str	lr, [sp, #8]
   145c4:	mov	r0, r7
   145c8:	ldr	lr, [r4, #40]	; 0x28
   145cc:	str	r3, [sp, #28]
   145d0:	mov	r3, sl
   145d4:	str	lr, [sp, #12]
   145d8:	ldr	lr, [r4, #44]	; 0x2c
   145dc:	str	ip, [sp, #24]
   145e0:	str	lr, [sp, #16]
   145e4:	bl	137c4 <close_stdout@@Base+0x10c8>
   145e8:	ldr	ip, [sp, #24]
   145ec:	cmp	ip, r0
   145f0:	bhi	14668 <close_stdout@@Base+0x1f6c>
   145f4:	ldr	r3, [pc, #188]	; 146b8 <close_stdout@@Base+0x1fbc>
   145f8:	add	r1, r0, #1
   145fc:	str	r1, [r5, r6, lsl #3]
   14600:	add	r3, pc, r3
   14604:	cmp	r7, r3
   14608:	beq	1461c <close_stdout@@Base+0x1f20>
   1460c:	mov	r0, r7
   14610:	str	r1, [sp, #24]
   14614:	bl	11278 <free@plt>
   14618:	ldr	r1, [sp, #24]
   1461c:	mov	r0, r1
   14620:	str	r1, [sp, #24]
   14624:	bl	159cc <close_stdout@@Base+0x32d0>
   14628:	ldr	r3, [sp, #28]
   1462c:	ldr	lr, [sp, #32]
   14630:	mov	r2, r9
   14634:	str	r0, [fp, #4]
   14638:	mov	r7, r0
   1463c:	ldr	ip, [r4]
   14640:	str	r3, [sp, #4]
   14644:	mov	r3, sl
   14648:	str	lr, [sp, #8]
   1464c:	str	ip, [sp]
   14650:	ldr	ip, [r4, #40]	; 0x28
   14654:	ldr	r1, [sp, #24]
   14658:	str	ip, [sp, #12]
   1465c:	ldr	ip, [r4, #44]	; 0x2c
   14660:	str	ip, [sp, #16]
   14664:	bl	137c4 <close_stdout@@Base+0x10c8>
   14668:	ldr	r1, [sp, #36]	; 0x24
   1466c:	mov	r0, r7
   14670:	str	r1, [r8]
   14674:	add	sp, sp, #44	; 0x2c
   14678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1467c:	lsl	r1, r7, #3
   14680:	mov	r0, #0
   14684:	str	r3, [sp, #24]
   14688:	bl	15a24 <close_stdout@@Base+0x3328>
   1468c:	ldr	r3, [sp, #24]
   14690:	mov	r5, r0
   14694:	ldm	r3, {r0, r1}
   14698:	str	r5, [fp]
   1469c:	stm	r5, {r0, r1}
   146a0:	b	14568 <close_stdout@@Base+0x1e6c>
   146a4:	bl	11524 <abort@plt>
   146a8:	bl	15be0 <close_stdout@@Base+0x34e4>
   146ac:	andeq	r5, r1, ip, lsr #25
   146b0:	andeq	r5, r1, ip, asr ip
   146b4:	andeq	r5, r1, r8, lsl ip
   146b8:	andeq	r5, r1, r4, ror #23
   146bc:	push	{r4, r5, r6, lr}
   146c0:	mov	r5, r0
   146c4:	bl	11428 <__errno_location@plt>
   146c8:	cmp	r5, #0
   146cc:	mov	r1, #48	; 0x30
   146d0:	mov	r4, r0
   146d4:	ldr	r0, [pc, #24]	; 146f4 <close_stdout@@Base+0x1ff8>
   146d8:	ldr	r6, [r4]
   146dc:	add	r0, pc, r0
   146e0:	add	r0, r0, #256	; 0x100
   146e4:	movne	r0, r5
   146e8:	bl	15ba0 <close_stdout@@Base+0x34a4>
   146ec:	str	r6, [r4]
   146f0:	pop	{r4, r5, r6, pc}
   146f4:	andeq	r5, r1, r8, lsl #22
   146f8:	cmp	r0, #0
   146fc:	beq	14708 <close_stdout@@Base+0x200c>
   14700:	ldr	r0, [r0]
   14704:	bx	lr
   14708:	ldr	r0, [pc, #12]	; 1471c <close_stdout@@Base+0x2020>
   1470c:	add	r0, pc, r0
   14710:	add	r0, r0, #256	; 0x100
   14714:	ldr	r0, [r0]
   14718:	bx	lr
   1471c:	ldrdeq	r5, [r1], -r8
   14720:	cmp	r0, #0
   14724:	beq	14730 <close_stdout@@Base+0x2034>
   14728:	str	r1, [r0]
   1472c:	bx	lr
   14730:	ldr	r0, [pc, #12]	; 14744 <close_stdout@@Base+0x2048>
   14734:	add	r0, pc, r0
   14738:	add	r0, r0, #256	; 0x100
   1473c:	str	r1, [r0]
   14740:	bx	lr
   14744:			; <UNDEFINED> instruction: 0x00015ab0
   14748:	cmp	r0, #0
   1474c:	movne	r3, r0
   14750:	beq	14780 <close_stdout@@Base+0x2084>
   14754:	lsr	ip, r1, #5
   14758:	and	r1, r1, #31
   1475c:	add	r3, r3, ip, lsl #2
   14760:	ldr	ip, [r3, #8]
   14764:	lsr	r0, ip, r1
   14768:	eor	r2, r0, r2
   1476c:	and	r0, r0, #1
   14770:	and	r2, r2, #1
   14774:	eor	ip, ip, r2, lsl r1
   14778:	str	ip, [r3, #8]
   1477c:	bx	lr
   14780:	ldr	r3, [pc, #8]	; 14790 <close_stdout@@Base+0x2094>
   14784:	add	r3, pc, r3
   14788:	add	r3, r3, #256	; 0x100
   1478c:	b	14754 <close_stdout@@Base+0x2058>
   14790:	andeq	r5, r1, r0, ror #20
   14794:	subs	r3, r0, #0
   14798:	beq	147a8 <close_stdout@@Base+0x20ac>
   1479c:	ldr	r0, [r3, #4]
   147a0:	str	r1, [r3, #4]
   147a4:	bx	lr
   147a8:	ldr	r3, [pc, #8]	; 147b8 <close_stdout@@Base+0x20bc>
   147ac:	add	r3, pc, r3
   147b0:	add	r3, r3, #256	; 0x100
   147b4:	b	1479c <close_stdout@@Base+0x20a0>
   147b8:	andeq	r5, r1, r8, lsr sl
   147bc:	cmp	r0, #0
   147c0:	push	{r3, lr}
   147c4:	beq	147e8 <close_stdout@@Base+0x20ec>
   147c8:	cmp	r2, #0
   147cc:	cmpne	r1, #0
   147d0:	mov	r3, #8
   147d4:	strne	r1, [r0, #40]	; 0x28
   147d8:	str	r3, [r0]
   147dc:	strne	r2, [r0, #44]	; 0x2c
   147e0:	popne	{r3, pc}
   147e4:	bl	11524 <abort@plt>
   147e8:	ldr	r0, [pc, #8]	; 147f8 <close_stdout@@Base+0x20fc>
   147ec:	add	r0, pc, r0
   147f0:	add	r0, r0, #256	; 0x100
   147f4:	b	147c8 <close_stdout@@Base+0x20cc>
   147f8:	strdeq	r5, [r1], -r8
   147fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14800:	sub	sp, sp, #24
   14804:	mov	r7, r0
   14808:	mov	sl, r1
   1480c:	ldr	r4, [sp, #56]	; 0x38
   14810:	mov	r9, r2
   14814:	mov	r8, r3
   14818:	cmp	r4, #0
   1481c:	beq	14870 <close_stdout@@Base+0x2174>
   14820:	bl	11428 <__errno_location@plt>
   14824:	ldr	r3, [r4]
   14828:	add	lr, r4, #8
   1482c:	mov	r1, sl
   14830:	mov	r2, r9
   14834:	ldr	r6, [r0]
   14838:	mov	r5, r0
   1483c:	str	r3, [sp]
   14840:	mov	r0, r7
   14844:	ldr	ip, [r4, #4]
   14848:	mov	r3, r8
   1484c:	stmib	sp, {ip, lr}
   14850:	ldr	ip, [r4, #40]	; 0x28
   14854:	str	ip, [sp, #12]
   14858:	ldr	ip, [r4, #44]	; 0x2c
   1485c:	str	ip, [sp, #16]
   14860:	bl	137c4 <close_stdout@@Base+0x10c8>
   14864:	str	r6, [r5]
   14868:	add	sp, sp, #24
   1486c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14870:	ldr	r4, [pc, #8]	; 14880 <close_stdout@@Base+0x2184>
   14874:	add	r4, pc, r4
   14878:	add	r4, r4, #256	; 0x100
   1487c:	b	14820 <close_stdout@@Base+0x2124>
   14880:	andeq	r5, r1, r0, ror r9
   14884:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14888:	subs	r4, r3, #0
   1488c:	sub	sp, sp, #36	; 0x24
   14890:	mov	r7, r0
   14894:	mov	r6, r1
   14898:	mov	r5, r2
   1489c:	beq	14958 <close_stdout@@Base+0x225c>
   148a0:	bl	11428 <__errno_location@plt>
   148a4:	ldr	r3, [r4]
   148a8:	ldr	sl, [r4, #4]
   148ac:	add	r9, r4, #8
   148b0:	mov	r8, r0
   148b4:	mov	r0, #0
   148b8:	ldr	r2, [r8]
   148bc:	cmp	r5, r0
   148c0:	orreq	sl, sl, #1
   148c4:	str	r9, [sp, #8]
   148c8:	mov	r1, r0
   148cc:	stm	sp, {r3, sl}
   148d0:	mov	r3, r6
   148d4:	ldr	ip, [r4, #40]	; 0x28
   148d8:	str	r2, [sp, #28]
   148dc:	mov	r2, r7
   148e0:	str	ip, [sp, #12]
   148e4:	ldr	ip, [r4, #44]	; 0x2c
   148e8:	str	ip, [sp, #16]
   148ec:	bl	137c4 <close_stdout@@Base+0x10c8>
   148f0:	add	r1, r0, #1
   148f4:	mov	fp, r0
   148f8:	str	r1, [sp, #24]
   148fc:	mov	r0, r1
   14900:	bl	159cc <close_stdout@@Base+0x32d0>
   14904:	ldr	lr, [r4]
   14908:	str	sl, [sp, #4]
   1490c:	mov	r3, r6
   14910:	str	r9, [sp, #8]
   14914:	mov	r2, r7
   14918:	str	lr, [sp]
   1491c:	ldr	lr, [r4, #40]	; 0x28
   14920:	ldr	r1, [sp, #24]
   14924:	str	lr, [sp, #12]
   14928:	ldr	lr, [r4, #44]	; 0x2c
   1492c:	str	lr, [sp, #16]
   14930:	str	r0, [sp, #24]
   14934:	bl	137c4 <close_stdout@@Base+0x10c8>
   14938:	ldr	r3, [sp, #28]
   1493c:	cmp	r5, #0
   14940:	str	r3, [r8]
   14944:	ldr	ip, [sp, #24]
   14948:	strne	fp, [r5]
   1494c:	mov	r0, ip
   14950:	add	sp, sp, #36	; 0x24
   14954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14958:	ldr	r4, [pc, #8]	; 14968 <close_stdout@@Base+0x226c>
   1495c:	add	r4, pc, r4
   14960:	add	r4, r4, #256	; 0x100
   14964:	b	148a0 <close_stdout@@Base+0x21a4>
   14968:	andeq	r5, r1, r8, lsl #17
   1496c:	mov	r3, r2
   14970:	mov	r2, #0
   14974:	b	14884 <close_stdout@@Base+0x2188>
   14978:	ldr	r2, [pc, #152]	; 14a18 <close_stdout@@Base+0x231c>
   1497c:	push	{r3, r4, r5, r6, r7, lr}
   14980:	add	r2, pc, r2
   14984:	ldr	r3, [pc, #144]	; 14a1c <close_stdout@@Base+0x2320>
   14988:	ldr	r6, [r2]
   1498c:	add	r3, pc, r3
   14990:	cmp	r6, #1
   14994:	ldr	r7, [r3]
   14998:	movhi	r4, #1
   1499c:	movhi	r5, r7
   149a0:	bls	149bc <close_stdout@@Base+0x22c0>
   149a4:	ldr	r0, [r5, #12]
   149a8:	add	r4, r4, #1
   149ac:	bl	11278 <free@plt>
   149b0:	cmp	r4, r6
   149b4:	add	r5, r5, #8
   149b8:	bne	149a4 <close_stdout@@Base+0x22a8>
   149bc:	ldr	r4, [pc, #92]	; 14a20 <close_stdout@@Base+0x2324>
   149c0:	ldr	r0, [r7, #4]
   149c4:	add	r4, pc, r4
   149c8:	cmp	r0, r4
   149cc:	beq	149e4 <close_stdout@@Base+0x22e8>
   149d0:	bl	11278 <free@plt>
   149d4:	ldr	r3, [pc, #72]	; 14a24 <close_stdout@@Base+0x2328>
   149d8:	mov	r2, #256	; 0x100
   149dc:	add	r3, pc, r3
   149e0:	stmib	r3, {r2, r4}
   149e4:	ldr	r4, [pc, #60]	; 14a28 <close_stdout@@Base+0x232c>
   149e8:	add	r4, pc, r4
   149ec:	add	r5, r4, #4
   149f0:	cmp	r7, r5
   149f4:	beq	14a04 <close_stdout@@Base+0x2308>
   149f8:	mov	r0, r7
   149fc:	bl	11278 <free@plt>
   14a00:	str	r5, [r4]
   14a04:	ldr	r3, [pc, #32]	; 14a2c <close_stdout@@Base+0x2330>
   14a08:	mov	r2, #1
   14a0c:	add	r3, pc, r3
   14a10:	str	r2, [r3]
   14a14:	pop	{r3, r4, r5, r6, r7, pc}
   14a18:	andeq	r5, r1, r8, lsl #16
   14a1c:	andeq	r5, r1, r0, lsr r8
   14a20:	andeq	r5, r1, r0, lsr #16
   14a24:	andeq	r5, r1, r0, ror #15
   14a28:	ldrdeq	r5, [r1], -r4
   14a2c:	andeq	r5, r1, ip, ror r7
   14a30:	ldr	r3, [pc, #12]	; 14a44 <close_stdout@@Base+0x2348>
   14a34:	mvn	r2, #0
   14a38:	add	r3, pc, r3
   14a3c:	add	r3, r3, #256	; 0x100
   14a40:	b	144ec <close_stdout@@Base+0x1df0>
   14a44:	andeq	r5, r1, ip, lsr #15
   14a48:	ldr	r3, [pc, #8]	; 14a58 <close_stdout@@Base+0x235c>
   14a4c:	add	r3, pc, r3
   14a50:	add	r3, r3, #256	; 0x100
   14a54:	b	144ec <close_stdout@@Base+0x1df0>
   14a58:	muleq	r1, r8, r7
   14a5c:	mov	r1, r0
   14a60:	mov	r0, #0
   14a64:	b	14a30 <close_stdout@@Base+0x2334>
   14a68:	mov	r2, r1
   14a6c:	mov	r1, r0
   14a70:	mov	r0, #0
   14a74:	b	14a48 <close_stdout@@Base+0x234c>
   14a78:	ldr	r3, [pc, #92]	; 14adc <close_stdout@@Base+0x23e0>
   14a7c:	ldr	ip, [pc, #92]	; 14ae0 <close_stdout@@Base+0x23e4>
   14a80:	add	r3, pc, r3
   14a84:	push	{r4, r5, r6, r7, lr}
   14a88:	sub	sp, sp, #60	; 0x3c
   14a8c:	ldr	r4, [r3, ip]
   14a90:	add	r5, sp, #4
   14a94:	mov	r7, r2
   14a98:	mov	r6, r0
   14a9c:	mov	r0, r5
   14aa0:	ldr	r3, [r4]
   14aa4:	str	r3, [sp, #52]	; 0x34
   14aa8:	bl	1360c <close_stdout@@Base+0xf10>
   14aac:	mov	r3, r5
   14ab0:	mvn	r2, #0
   14ab4:	mov	r0, r6
   14ab8:	mov	r1, r7
   14abc:	bl	144ec <close_stdout@@Base+0x1df0>
   14ac0:	ldr	r2, [sp, #52]	; 0x34
   14ac4:	ldr	r3, [r4]
   14ac8:	cmp	r2, r3
   14acc:	bne	14ad8 <close_stdout@@Base+0x23dc>
   14ad0:	add	sp, sp, #60	; 0x3c
   14ad4:	pop	{r4, r5, r6, r7, pc}
   14ad8:	bl	112cc <__stack_chk_fail@plt>
   14adc:	andeq	r5, r1, r8, ror r5
   14ae0:	andeq	r0, r0, r4, lsr r1
   14ae4:	ldr	ip, [pc, #96]	; 14b4c <close_stdout@@Base+0x2450>
   14ae8:	push	{r4, r5, r6, r7, r8, lr}
   14aec:	add	ip, pc, ip
   14af0:	ldr	lr, [pc, #88]	; 14b50 <close_stdout@@Base+0x2454>
   14af4:	sub	sp, sp, #56	; 0x38
   14af8:	mov	r8, r3
   14afc:	add	r5, sp, #4
   14b00:	mov	r7, r2
   14b04:	mov	r6, r0
   14b08:	ldr	r4, [ip, lr]
   14b0c:	mov	r0, r5
   14b10:	ldr	r3, [r4]
   14b14:	str	r3, [sp, #52]	; 0x34
   14b18:	bl	1360c <close_stdout@@Base+0xf10>
   14b1c:	mov	r2, r8
   14b20:	mov	r3, r5
   14b24:	mov	r0, r6
   14b28:	mov	r1, r7
   14b2c:	bl	144ec <close_stdout@@Base+0x1df0>
   14b30:	ldr	r2, [sp, #52]	; 0x34
   14b34:	ldr	r3, [r4]
   14b38:	cmp	r2, r3
   14b3c:	bne	14b48 <close_stdout@@Base+0x244c>
   14b40:	add	sp, sp, #56	; 0x38
   14b44:	pop	{r4, r5, r6, r7, r8, pc}
   14b48:	bl	112cc <__stack_chk_fail@plt>
   14b4c:	andeq	r5, r1, ip, lsl #10
   14b50:	andeq	r0, r0, r4, lsr r1
   14b54:	mov	r2, r1
   14b58:	mov	r1, r0
   14b5c:	mov	r0, #0
   14b60:	b	14a78 <close_stdout@@Base+0x237c>
   14b64:	mov	ip, r1
   14b68:	mov	r3, r2
   14b6c:	mov	r1, r0
   14b70:	mov	r2, ip
   14b74:	mov	r0, #0
   14b78:	b	14ae4 <close_stdout@@Base+0x23e8>
   14b7c:	push	{r4, r5, r6, r7, r8, lr}
   14b80:	mov	r5, r2
   14b84:	ldr	lr, [pc, #136]	; 14c14 <close_stdout@@Base+0x2518>
   14b88:	mov	r7, r0
   14b8c:	mov	r6, r1
   14b90:	ldr	r4, [pc, #128]	; 14c18 <close_stdout@@Base+0x251c>
   14b94:	add	lr, pc, lr
   14b98:	sub	sp, sp, #56	; 0x38
   14b9c:	add	lr, lr, #256	; 0x100
   14ba0:	ldr	r8, [pc, #116]	; 14c1c <close_stdout@@Base+0x2520>
   14ba4:	add	r4, pc, r4
   14ba8:	add	ip, sp, #4
   14bac:	ldm	lr!, {r0, r1, r2, r3}
   14bb0:	ldr	r4, [r4, r8]
   14bb4:	stmia	ip!, {r0, r1, r2, r3}
   14bb8:	ldm	lr!, {r0, r1, r2, r3}
   14bbc:	ldr	r8, [r4]
   14bc0:	stmia	ip!, {r0, r1, r2, r3}
   14bc4:	ldm	lr, {r0, r1, r2, r3}
   14bc8:	str	r8, [sp, #52]	; 0x34
   14bcc:	stm	ip, {r0, r1, r2, r3}
   14bd0:	mov	r1, r5
   14bd4:	add	r5, sp, #4
   14bd8:	mov	r2, #1
   14bdc:	mov	r0, r5
   14be0:	bl	14748 <close_stdout@@Base+0x204c>
   14be4:	mov	r2, r6
   14be8:	mov	r3, r5
   14bec:	mov	r1, r7
   14bf0:	mov	r0, #0
   14bf4:	bl	144ec <close_stdout@@Base+0x1df0>
   14bf8:	ldr	r2, [sp, #52]	; 0x34
   14bfc:	ldr	r3, [r4]
   14c00:	cmp	r2, r3
   14c04:	bne	14c10 <close_stdout@@Base+0x2514>
   14c08:	add	sp, sp, #56	; 0x38
   14c0c:	pop	{r4, r5, r6, r7, r8, pc}
   14c10:	bl	112cc <__stack_chk_fail@plt>
   14c14:	andeq	r5, r1, r0, asr r6
   14c18:	andeq	r5, r1, r4, asr r4
   14c1c:	andeq	r0, r0, r4, lsr r1
   14c20:	mov	r2, r1
   14c24:	mvn	r1, #0
   14c28:	b	14b7c <close_stdout@@Base+0x2480>
   14c2c:	mov	r1, #58	; 0x3a
   14c30:	b	14c20 <close_stdout@@Base+0x2524>
   14c34:	mov	r2, #58	; 0x3a
   14c38:	b	14b7c <close_stdout@@Base+0x2480>
   14c3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14c40:	mov	r5, r2
   14c44:	ldr	lr, [pc, #144]	; 14cdc <close_stdout@@Base+0x25e0>
   14c48:	mov	r8, r0
   14c4c:	mov	r9, r1
   14c50:	mov	r7, r3
   14c54:	add	lr, pc, lr
   14c58:	ldr	r4, [pc, #128]	; 14ce0 <close_stdout@@Base+0x25e4>
   14c5c:	add	lr, lr, #256	; 0x100
   14c60:	sub	sp, sp, #56	; 0x38
   14c64:	ldr	sl, [pc, #120]	; 14ce4 <close_stdout@@Base+0x25e8>
   14c68:	add	r4, pc, r4
   14c6c:	ldm	lr!, {r0, r1, r2, r3}
   14c70:	add	ip, sp, #4
   14c74:	ldr	r4, [r4, sl]
   14c78:	ldr	r6, [sp, #88]	; 0x58
   14c7c:	stmia	ip!, {r0, r1, r2, r3}
   14c80:	ldm	lr!, {r0, r1, r2, r3}
   14c84:	ldr	sl, [r4]
   14c88:	stmia	ip!, {r0, r1, r2, r3}
   14c8c:	ldm	lr, {r0, r1, r2, r3}
   14c90:	str	sl, [sp, #52]	; 0x34
   14c94:	stm	ip, {r0, r1, r2, r3}
   14c98:	mov	r2, r5
   14c9c:	add	r5, sp, #4
   14ca0:	mov	r1, r9
   14ca4:	mov	r0, r5
   14ca8:	bl	147bc <close_stdout@@Base+0x20c0>
   14cac:	mov	r2, r6
   14cb0:	mov	r3, r5
   14cb4:	mov	r0, r8
   14cb8:	mov	r1, r7
   14cbc:	bl	144ec <close_stdout@@Base+0x1df0>
   14cc0:	ldr	r2, [sp, #52]	; 0x34
   14cc4:	ldr	r3, [r4]
   14cc8:	cmp	r2, r3
   14ccc:	bne	14cd8 <close_stdout@@Base+0x25dc>
   14cd0:	add	sp, sp, #56	; 0x38
   14cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14cd8:	bl	112cc <__stack_chk_fail@plt>
   14cdc:	muleq	r1, r0, r5
   14ce0:	muleq	r1, r0, r3
   14ce4:	andeq	r0, r0, r4, lsr r1
   14ce8:	push	{lr}		; (str lr, [sp, #-4]!)
   14cec:	sub	sp, sp, #12
   14cf0:	mvn	ip, #0
   14cf4:	str	ip, [sp]
   14cf8:	bl	14c3c <close_stdout@@Base+0x2540>
   14cfc:	add	sp, sp, #12
   14d00:	pop	{pc}		; (ldr pc, [sp], #4)
   14d04:	mov	ip, r1
   14d08:	mov	r3, r2
   14d0c:	mov	r1, r0
   14d10:	mov	r2, ip
   14d14:	mov	r0, #0
   14d18:	b	14ce8 <close_stdout@@Base+0x25ec>
   14d1c:	push	{lr}		; (str lr, [sp, #-4]!)
   14d20:	sub	sp, sp, #12
   14d24:	mov	lr, r1
   14d28:	mov	ip, r2
   14d2c:	mov	r1, r0
   14d30:	str	r3, [sp]
   14d34:	mov	r2, lr
   14d38:	mov	r3, ip
   14d3c:	mov	r0, #0
   14d40:	bl	14c3c <close_stdout@@Base+0x2540>
   14d44:	add	sp, sp, #12
   14d48:	pop	{pc}		; (ldr pc, [sp], #4)
   14d4c:	ldr	r3, [pc, #12]	; 14d60 <close_stdout@@Base+0x2664>
   14d50:	ldr	ip, [pc, #12]	; 14d64 <close_stdout@@Base+0x2668>
   14d54:	add	r3, pc, r3
   14d58:	ldr	r3, [r3, ip]
   14d5c:	b	144ec <close_stdout@@Base+0x1df0>
   14d60:	andeq	r5, r1, r4, lsr #5
   14d64:	andeq	r0, r0, ip, lsr #2
   14d68:	mov	r2, r1
   14d6c:	mov	r1, r0
   14d70:	mov	r0, #0
   14d74:	b	14d4c <close_stdout@@Base+0x2650>
   14d78:	mvn	r2, #0
   14d7c:	b	14d4c <close_stdout@@Base+0x2650>
   14d80:	mov	r1, r0
   14d84:	mov	r0, #0
   14d88:	b	14d78 <close_stdout@@Base+0x267c>
   14d8c:	push	{r4, r5, r6, r7, r8, lr}
   14d90:	mov	r8, #57344	; 0xe000
   14d94:	movt	r8, #32767	; 0x7fff
   14d98:	mov	r7, r0
   14d9c:	mov	r6, r1
   14da0:	mov	r4, r2
   14da4:	mov	r0, r7
   14da8:	mov	r1, r6
   14dac:	mov	r2, r4
   14db0:	bl	11248 <read@plt>
   14db4:	subs	r5, r0, #0
   14db8:	bge	14de4 <close_stdout@@Base+0x26e8>
   14dbc:	bl	11428 <__errno_location@plt>
   14dc0:	ldr	r3, [r0]
   14dc4:	cmp	r3, #4
   14dc8:	beq	14da4 <close_stdout@@Base+0x26a8>
   14dcc:	cmp	r3, #22
   14dd0:	bne	14de4 <close_stdout@@Base+0x26e8>
   14dd4:	cmp	r4, r8
   14dd8:	mov	r4, #57344	; 0xe000
   14ddc:	movt	r4, #32767	; 0x7fff
   14de0:	bhi	14da4 <close_stdout@@Base+0x26a8>
   14de4:	mov	r0, r5
   14de8:	pop	{r4, r5, r6, r7, r8, pc}
   14dec:	push	{r4, r5, r6, r7, r8, lr}
   14df0:	mov	r8, #57344	; 0xe000
   14df4:	movt	r8, #32767	; 0x7fff
   14df8:	mov	r7, r0
   14dfc:	mov	r6, r1
   14e00:	mov	r4, r2
   14e04:	mov	r0, r7
   14e08:	mov	r1, r6
   14e0c:	mov	r2, r4
   14e10:	bl	11488 <write@plt>
   14e14:	subs	r5, r0, #0
   14e18:	bge	14e44 <close_stdout@@Base+0x2748>
   14e1c:	bl	11428 <__errno_location@plt>
   14e20:	ldr	r3, [r0]
   14e24:	cmp	r3, #4
   14e28:	beq	14e04 <close_stdout@@Base+0x2708>
   14e2c:	cmp	r3, #22
   14e30:	bne	14e44 <close_stdout@@Base+0x2748>
   14e34:	cmp	r4, r8
   14e38:	mov	r4, #57344	; 0xe000
   14e3c:	movt	r4, #32767	; 0x7fff
   14e40:	bhi	14e04 <close_stdout@@Base+0x2708>
   14e44:	mov	r0, r5
   14e48:	pop	{r4, r5, r6, r7, r8, pc}
   14e4c:	push	{r3, r4, r5, lr}
   14e50:	mov	r4, r1
   14e54:	mov	r2, r4
   14e58:	mov	r1, #0
   14e5c:	mov	r5, r0
   14e60:	bl	114ac <memchr@plt>
   14e64:	cmp	r0, #0
   14e68:	rsbne	r0, r5, r0
   14e6c:	addne	r0, r0, #1
   14e70:	moveq	r0, r4
   14e74:	pop	{r3, r4, r5, pc}
   14e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e7c:	sub	sp, sp, #84	; 0x54
   14e80:	ldr	r5, [pc, #1396]	; 153fc <close_stdout@@Base+0x2d00>
   14e84:	mov	sl, r1
   14e88:	ldr	r3, [pc, #1392]	; 15400 <close_stdout@@Base+0x2d04>
   14e8c:	add	r5, pc, r5
   14e90:	ldr	r3, [r5, r3]
   14e94:	str	r3, [sp, #12]
   14e98:	ldr	r3, [r3]
   14e9c:	str	r3, [sp, #76]	; 0x4c
   14ea0:	bl	11458 <__strdup@plt>
   14ea4:	cmp	r0, #0
   14ea8:	str	r0, [sp]
   14eac:	beq	153d8 <close_stdout@@Base+0x2cdc>
   14eb0:	bl	11338 <__ctype_get_mb_cur_max@plt>
   14eb4:	cmp	r0, #1
   14eb8:	bls	1515c <close_stdout@@Base+0x2a60>
   14ebc:	cmp	sl, #0
   14ec0:	bne	1521c <close_stdout@@Base+0x2b20>
   14ec4:	add	r4, sp, #24
   14ec8:	ldr	r0, [sp]
   14ecc:	mov	fp, #0
   14ed0:	str	r0, [sp, #36]	; 0x24
   14ed4:	bl	113f8 <strlen@plt>
   14ed8:	ldr	r1, [sp]
   14edc:	str	fp, [sp, #24]
   14ee0:	strb	fp, [sp, #20]
   14ee4:	str	fp, [r4, #4]
   14ee8:	strb	fp, [sp, #32]
   14eec:	add	r9, r1, r0
   14ef0:	str	r9, [sp, #16]
   14ef4:	cmp	r1, r9
   14ef8:	bcs	1512c <close_stdout@@Base+0x2a30>
   14efc:	add	r1, sp, #48	; 0x30
   14f00:	str	r1, [sp, #4]
   14f04:	ldrb	r1, [sp, #20]
   14f08:	mov	r8, fp
   14f0c:	ldr	r3, [sp]
   14f10:	mov	r7, #1
   14f14:	cmp	r1, #0
   14f18:	mov	ip, r3
   14f1c:	bne	14fc0 <close_stdout@@Base+0x28c4>
   14f20:	ldr	r2, [pc, #1244]	; 15404 <close_stdout@@Base+0x2d08>
   14f24:	ldrb	r3, [ip]
   14f28:	ldr	r1, [r5, r2]
   14f2c:	and	r2, r3, #31
   14f30:	lsr	r3, r3, #5
   14f34:	ldr	r3, [r1, r3, lsl #2]
   14f38:	lsr	r3, r3, r2
   14f3c:	tst	r3, #1
   14f40:	beq	15070 <close_stdout@@Base+0x2974>
   14f44:	str	r7, [sp, #40]	; 0x28
   14f48:	mov	r6, #1
   14f4c:	ldrb	r2, [ip]
   14f50:	ldr	r9, [sp, #16]
   14f54:	ldr	sl, [sp, #36]	; 0x24
   14f58:	strb	r7, [sp, #44]	; 0x2c
   14f5c:	str	r2, [sp, #48]	; 0x30
   14f60:	cmp	fp, #0
   14f64:	strb	r7, [sp, #32]
   14f68:	beq	15048 <close_stdout@@Base+0x294c>
   14f6c:	cmp	fp, #1
   14f70:	beq	15088 <close_stdout@@Base+0x298c>
   14f74:	cmp	fp, #2
   14f78:	bne	15068 <close_stdout@@Base+0x296c>
   14f7c:	ldrb	r2, [sp, #44]	; 0x2c
   14f80:	cmp	r2, #0
   14f84:	beq	15068 <close_stdout@@Base+0x296c>
   14f88:	ldr	r0, [sp, #48]	; 0x30
   14f8c:	bl	113ec <iswspace@plt>
   14f90:	cmp	r0, #0
   14f94:	movne	fp, #2
   14f98:	moveq	fp, #1
   14f9c:	add	ip, sl, r6
   14fa0:	strb	r8, [sp, #32]
   14fa4:	cmp	ip, r9
   14fa8:	str	ip, [sp, #36]	; 0x24
   14fac:	mov	r1, #0
   14fb0:	bcs	1514c <close_stdout@@Base+0x2a50>
   14fb4:	ldrb	r1, [sp, #20]
   14fb8:	cmp	r1, #0
   14fbc:	beq	14f20 <close_stdout@@Base+0x2824>
   14fc0:	ldr	r1, [sp, #36]	; 0x24
   14fc4:	add	r0, sp, #48	; 0x30
   14fc8:	mov	r3, r4
   14fcc:	rsb	r2, r1, r9
   14fd0:	bl	1135c <mbrtowc@plt>
   14fd4:	cmn	r0, #1
   14fd8:	str	r0, [sp, #40]	; 0x28
   14fdc:	beq	150b8 <close_stdout@@Base+0x29bc>
   14fe0:	cmn	r0, #2
   14fe4:	beq	150d0 <close_stdout@@Base+0x29d4>
   14fe8:	cmp	r0, #0
   14fec:	ldr	r6, [sp, #36]	; 0x24
   14ff0:	bne	15010 <close_stdout@@Base+0x2914>
   14ff4:	str	r7, [sp, #40]	; 0x28
   14ff8:	ldrb	r3, [r6]
   14ffc:	cmp	r3, #0
   15000:	bne	153dc <close_stdout@@Base+0x2ce0>
   15004:	ldr	r3, [sp, #48]	; 0x30
   15008:	cmp	r3, #0
   1500c:	bne	153b8 <close_stdout@@Base+0x2cbc>
   15010:	mov	r0, r4
   15014:	strb	r7, [sp, #44]	; 0x2c
   15018:	bl	1129c <mbsinit@plt>
   1501c:	strb	r7, [sp, #32]
   15020:	cmp	r0, #0
   15024:	strbne	r8, [sp, #20]
   15028:	moveq	sl, r6
   1502c:	movne	sl, r6
   15030:	ldreq	r9, [sp, #16]
   15034:	ldreq	r6, [sp, #40]	; 0x28
   15038:	ldrne	r9, [sp, #16]
   1503c:	ldrne	r6, [sp, #40]	; 0x28
   15040:	cmp	fp, #0
   15044:	bne	14f6c <close_stdout@@Base+0x2870>
   15048:	ldrb	r2, [sp, #44]	; 0x2c
   1504c:	cmp	r2, #0
   15050:	beq	15068 <close_stdout@@Base+0x296c>
   15054:	ldr	r0, [sp, #48]	; 0x30
   15058:	bl	113ec <iswspace@plt>
   1505c:	rsbs	fp, r0, #1
   15060:	movcc	fp, #0
   15064:	b	14f9c <close_stdout@@Base+0x28a0>
   15068:	mov	fp, #1
   1506c:	b	14f9c <close_stdout@@Base+0x28a0>
   15070:	mov	r0, r4
   15074:	bl	1129c <mbsinit@plt>
   15078:	cmp	r0, #0
   1507c:	beq	15394 <close_stdout@@Base+0x2c98>
   15080:	strb	r7, [sp, #20]
   15084:	b	14fc0 <close_stdout@@Base+0x28c4>
   15088:	ldrb	r2, [sp, #44]	; 0x2c
   1508c:	cmp	r2, #0
   15090:	beq	14f9c <close_stdout@@Base+0x28a0>
   15094:	ldr	r0, [sp, #48]	; 0x30
   15098:	bl	113ec <iswspace@plt>
   1509c:	ldr	r2, [sp, #8]
   150a0:	cmp	r0, #0
   150a4:	movne	r2, sl
   150a8:	moveq	fp, #1
   150ac:	movne	fp, #2
   150b0:	str	r2, [sp, #8]
   150b4:	b	14f9c <close_stdout@@Base+0x28a0>
   150b8:	str	r7, [sp, #40]	; 0x28
   150bc:	mov	r6, #1
   150c0:	strb	r8, [sp, #44]	; 0x2c
   150c4:	ldr	r9, [sp, #16]
   150c8:	ldr	sl, [sp, #36]	; 0x24
   150cc:	b	14f60 <close_stdout@@Base+0x2864>
   150d0:	ldr	ip, [sp, #36]	; 0x24
   150d4:	ldr	r9, [sp, #16]
   150d8:	strb	r8, [sp, #44]	; 0x2c
   150dc:	rsb	r3, ip, r9
   150e0:	mov	sl, ip
   150e4:	str	r3, [sp, #40]	; 0x28
   150e8:	mov	r6, r3
   150ec:	b	14f60 <close_stdout@@Base+0x2864>
   150f0:	ldr	fp, [sp, #36]	; 0x24
   150f4:	mov	r2, #1
   150f8:	mov	r3, #0
   150fc:	str	r2, [sp, #40]	; 0x28
   15100:	strb	r3, [sp, #44]	; 0x2c
   15104:	mov	r3, #1
   15108:	strb	r3, [sp, #32]
   1510c:	mov	r0, fp
   15110:	bl	113f8 <strlen@plt>
   15114:	mov	r1, fp
   15118:	add	r2, r0, #1
   1511c:	ldr	r0, [sp]
   15120:	bl	1126c <memmove@plt>
   15124:	cmp	sl, #1
   15128:	bne	14ec8 <close_stdout@@Base+0x27cc>
   1512c:	ldr	r1, [sp, #12]
   15130:	ldr	r2, [sp, #76]	; 0x4c
   15134:	ldr	r0, [sp]
   15138:	ldr	r3, [r1]
   1513c:	cmp	r2, r3
   15140:	bne	153b4 <close_stdout@@Base+0x2cb8>
   15144:	add	sp, sp, #84	; 0x54
   15148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1514c:	cmp	fp, #2
   15150:	ldreq	r3, [sp, #8]
   15154:	strbeq	r1, [r3]
   15158:	b	1512c <close_stdout@@Base+0x2a30>
   1515c:	cmp	sl, #0
   15160:	beq	151c8 <close_stdout@@Base+0x2acc>
   15164:	ldr	r2, [sp]
   15168:	ldrb	r4, [r2]
   1516c:	cmp	r4, #0
   15170:	beq	15384 <close_stdout@@Base+0x2c88>
   15174:	bl	113d4 <__ctype_b_loc@plt>
   15178:	ldr	r3, [sp]
   1517c:	ldr	r1, [r0]
   15180:	b	15194 <close_stdout@@Base+0x2a98>
   15184:	ldrb	r4, [r3, #1]
   15188:	add	r3, r3, #1
   1518c:	cmp	r4, #0
   15190:	beq	1537c <close_stdout@@Base+0x2c80>
   15194:	lsl	r4, r4, #1
   15198:	mov	r5, r3
   1519c:	ldrh	r2, [r1, r4]
   151a0:	tst	r2, #8192	; 0x2000
   151a4:	bne	15184 <close_stdout@@Base+0x2a88>
   151a8:	mov	r0, r5
   151ac:	bl	113f8 <strlen@plt>
   151b0:	mov	r1, r5
   151b4:	add	r2, r0, #1
   151b8:	ldr	r0, [sp]
   151bc:	bl	1126c <memmove@plt>
   151c0:	cmp	sl, #1
   151c4:	beq	1512c <close_stdout@@Base+0x2a30>
   151c8:	ldr	r0, [sp]
   151cc:	bl	113f8 <strlen@plt>
   151d0:	ldr	r1, [sp]
   151d4:	sub	r0, r0, #1
   151d8:	adds	r4, r1, r0
   151dc:	bcs	1512c <close_stdout@@Base+0x2a30>
   151e0:	bl	113d4 <__ctype_b_loc@plt>
   151e4:	mov	r3, r4
   151e8:	mov	ip, #0
   151ec:	ldr	r4, [sp]
   151f0:	b	15200 <close_stdout@@Base+0x2b04>
   151f4:	cmp	r4, r3
   151f8:	strb	ip, [r3, #1]
   151fc:	bhi	1512c <close_stdout@@Base+0x2a30>
   15200:	ldrb	r2, [r3], #-1
   15204:	ldr	r1, [r0]
   15208:	lsl	r2, r2, #1
   1520c:	ldrh	r2, [r1, r2]
   15210:	tst	r2, #8192	; 0x2000
   15214:	bne	151f4 <close_stdout@@Base+0x2af8>
   15218:	b	1512c <close_stdout@@Base+0x2a30>
   1521c:	ldr	r0, [sp]
   15220:	add	r4, sp, #24
   15224:	mov	r8, #0
   15228:	str	r0, [sp, #36]	; 0x24
   1522c:	bl	113f8 <strlen@plt>
   15230:	ldr	r3, [sp]
   15234:	str	r8, [sp, #24]
   15238:	strb	r8, [sp, #20]
   1523c:	str	r8, [r4, #4]
   15240:	strb	r8, [sp, #32]
   15244:	add	r2, r3, r0
   15248:	str	r2, [sp, #16]
   1524c:	cmp	r3, r2
   15250:	bcs	1538c <close_stdout@@Base+0x2c90>
   15254:	mov	fp, r3
   15258:	add	r9, sp, #48	; 0x30
   1525c:	mov	r7, #1
   15260:	mov	r6, r2
   15264:	b	152d0 <close_stdout@@Base+0x2bd4>
   15268:	ldr	r2, [pc, #404]	; 15404 <close_stdout@@Base+0x2d08>
   1526c:	ldrb	r3, [fp]
   15270:	ldr	r1, [r5, r2]
   15274:	and	r2, r3, #31
   15278:	lsr	r3, r3, #5
   1527c:	ldr	r3, [r1, r3, lsl #2]
   15280:	lsr	r3, r3, r2
   15284:	tst	r3, #1
   15288:	beq	15344 <close_stdout@@Base+0x2c48>
   1528c:	str	r7, [sp, #40]	; 0x28
   15290:	ldrb	r6, [fp]
   15294:	ldr	fp, [sp, #36]	; 0x24
   15298:	strb	r7, [sp, #44]	; 0x2c
   1529c:	str	r6, [sp, #48]	; 0x30
   152a0:	mov	r0, r6
   152a4:	strb	r7, [sp, #32]
   152a8:	bl	113ec <iswspace@plt>
   152ac:	cmp	r0, #0
   152b0:	beq	1510c <close_stdout@@Base+0x2a10>
   152b4:	ldr	r3, [sp, #40]	; 0x28
   152b8:	ldr	r6, [sp, #16]
   152bc:	add	fp, fp, r3
   152c0:	strb	r8, [sp, #32]
   152c4:	cmp	r6, fp
   152c8:	str	fp, [sp, #36]	; 0x24
   152cc:	bls	1510c <close_stdout@@Base+0x2a10>
   152d0:	ldrb	r3, [sp, #20]
   152d4:	cmp	r3, #0
   152d8:	beq	15268 <close_stdout@@Base+0x2b6c>
   152dc:	ldr	r1, [sp, #36]	; 0x24
   152e0:	mov	r0, r9
   152e4:	mov	r3, r4
   152e8:	rsb	r2, r1, r6
   152ec:	bl	1135c <mbrtowc@plt>
   152f0:	cmn	r0, #1
   152f4:	str	r0, [sp, #40]	; 0x28
   152f8:	beq	150f0 <close_stdout@@Base+0x29f4>
   152fc:	cmn	r0, #2
   15300:	ldr	fp, [sp, #36]	; 0x24
   15304:	beq	15364 <close_stdout@@Base+0x2c68>
   15308:	cmp	r0, #0
   1530c:	bne	1535c <close_stdout@@Base+0x2c60>
   15310:	str	r7, [sp, #40]	; 0x28
   15314:	ldrb	r3, [fp]
   15318:	cmp	r3, #0
   1531c:	bne	153dc <close_stdout@@Base+0x2ce0>
   15320:	ldr	r6, [sp, #48]	; 0x30
   15324:	cmp	r6, #0
   15328:	bne	153b8 <close_stdout@@Base+0x2cbc>
   1532c:	mov	r0, r4
   15330:	strb	r7, [sp, #44]	; 0x2c
   15334:	bl	1129c <mbsinit@plt>
   15338:	cmp	r0, #0
   1533c:	strbne	r8, [sp, #20]
   15340:	b	152a0 <close_stdout@@Base+0x2ba4>
   15344:	mov	r0, r4
   15348:	bl	1129c <mbsinit@plt>
   1534c:	cmp	r0, #0
   15350:	beq	15394 <close_stdout@@Base+0x2c98>
   15354:	strb	r7, [sp, #20]
   15358:	b	152dc <close_stdout@@Base+0x2be0>
   1535c:	ldr	r6, [sp, #48]	; 0x30
   15360:	b	1532c <close_stdout@@Base+0x2c30>
   15364:	ldr	r3, [sp, #16]
   15368:	mov	r2, #0
   1536c:	strb	r2, [sp, #44]	; 0x2c
   15370:	rsb	r3, fp, r3
   15374:	str	r3, [sp, #40]	; 0x28
   15378:	b	15104 <close_stdout@@Base+0x2a08>
   1537c:	mov	r5, r3
   15380:	b	151a8 <close_stdout@@Base+0x2aac>
   15384:	ldr	r5, [sp]
   15388:	b	151a8 <close_stdout@@Base+0x2aac>
   1538c:	ldr	fp, [sp]
   15390:	b	1510c <close_stdout@@Base+0x2a10>
   15394:	ldr	r0, [pc, #108]	; 15408 <close_stdout@@Base+0x2d0c>
   15398:	mov	r2, #142	; 0x8e
   1539c:	ldr	r1, [pc, #104]	; 1540c <close_stdout@@Base+0x2d10>
   153a0:	ldr	r3, [pc, #104]	; 15410 <close_stdout@@Base+0x2d14>
   153a4:	add	r0, pc, r0
   153a8:	add	r1, pc, r1
   153ac:	add	r3, pc, r3
   153b0:	bl	1153c <__assert_fail@plt>
   153b4:	bl	112cc <__stack_chk_fail@plt>
   153b8:	ldr	r0, [pc, #84]	; 15414 <close_stdout@@Base+0x2d18>
   153bc:	mov	r2, #170	; 0xaa
   153c0:	ldr	r1, [pc, #80]	; 15418 <close_stdout@@Base+0x2d1c>
   153c4:	ldr	r3, [pc, #80]	; 1541c <close_stdout@@Base+0x2d20>
   153c8:	add	r0, pc, r0
   153cc:	add	r1, pc, r1
   153d0:	add	r3, pc, r3
   153d4:	bl	1153c <__assert_fail@plt>
   153d8:	bl	15be0 <close_stdout@@Base+0x34e4>
   153dc:	ldr	r0, [pc, #60]	; 15420 <close_stdout@@Base+0x2d24>
   153e0:	mov	r2, #169	; 0xa9
   153e4:	ldr	r1, [pc, #56]	; 15424 <close_stdout@@Base+0x2d28>
   153e8:	ldr	r3, [pc, #56]	; 15428 <close_stdout@@Base+0x2d2c>
   153ec:	add	r0, pc, r0
   153f0:	add	r1, pc, r1
   153f4:	add	r3, pc, r3
   153f8:	bl	1153c <__assert_fail@plt>
   153fc:	andeq	r5, r1, ip, ror #2
   15400:	andeq	r0, r0, r4, lsr r1
   15404:	andeq	r0, r0, r0, lsr r1
   15408:	andeq	r3, r0, r8, lsr #21
   1540c:	andeq	r3, r0, r8, lsr #23
   15410:	muleq	r0, r0, fp
   15414:	andeq	r3, r0, r4, asr #21
   15418:	andeq	r3, r0, r4, lsl #23
   1541c:	andeq	r3, r0, ip, ror #22
   15420:	andeq	r3, r0, r8, lsl #21
   15424:	andeq	r3, r0, r0, ror #22
   15428:	andeq	r3, r0, r8, asr #22
   1542c:	push	{r4, r5, r6, r7, lr}
   15430:	cmp	r1, #0
   15434:	sub	sp, sp, #36	; 0x24
   15438:	ldr	r7, [pc, #896]	; 157c0 <close_stdout@@Base+0x30c4>
   1543c:	mov	ip, r3
   15440:	mov	r5, r0
   15444:	add	r7, pc, r7
   15448:	ldr	r4, [sp, #56]	; 0x38
   1544c:	ldr	r6, [sp, #60]	; 0x3c
   15450:	beq	15794 <close_stdout@@Base+0x3098>
   15454:	str	r2, [sp]
   15458:	mov	r3, r1
   1545c:	ldr	r2, [pc, #864]	; 157c4 <close_stdout@@Base+0x30c8>
   15460:	mov	r1, #1
   15464:	str	ip, [sp, #4]
   15468:	add	r2, pc, r2
   1546c:	bl	114a0 <__fprintf_chk@plt>
   15470:	ldr	r1, [pc, #848]	; 157c8 <close_stdout@@Base+0x30cc>
   15474:	mov	r2, #5
   15478:	mov	r0, #0
   1547c:	add	r1, pc, r1
   15480:	bl	112c0 <dcgettext@plt>
   15484:	ldr	r2, [pc, #832]	; 157cc <close_stdout@@Base+0x30d0>
   15488:	movw	ip, #2013	; 0x7dd
   1548c:	mov	r1, #1
   15490:	ldr	r2, [r7, r2]
   15494:	str	ip, [sp]
   15498:	mov	r3, r0
   1549c:	mov	r0, r5
   154a0:	bl	114a0 <__fprintf_chk@plt>
   154a4:	ldr	r1, [pc, #804]	; 157d0 <close_stdout@@Base+0x30d4>
   154a8:	mov	r0, #0
   154ac:	mov	r2, #5
   154b0:	add	r1, pc, r1
   154b4:	bl	112c0 <dcgettext@plt>
   154b8:	mov	r1, r5
   154bc:	bl	11200 <fputs_unlocked@plt>
   154c0:	cmp	r6, #9
   154c4:	addls	pc, pc, r6, lsl #2
   154c8:	b	157b0 <close_stdout@@Base+0x30b4>
   154cc:	b	15560 <close_stdout@@Base+0x2e64>
   154d0:	b	15564 <close_stdout@@Base+0x2e68>
   154d4:	b	15594 <close_stdout@@Base+0x2e98>
   154d8:	b	155c8 <close_stdout@@Base+0x2ecc>
   154dc:	b	15604 <close_stdout@@Base+0x2f08>
   154e0:	b	15644 <close_stdout@@Base+0x2f48>
   154e4:	b	1568c <close_stdout@@Base+0x2f90>
   154e8:	b	156dc <close_stdout@@Base+0x2fe0>
   154ec:	b	15734 <close_stdout@@Base+0x3038>
   154f0:	b	154f4 <close_stdout@@Base+0x2df8>
   154f4:	ldr	r1, [pc, #728]	; 157d4 <close_stdout@@Base+0x30d8>
   154f8:	mov	r0, #0
   154fc:	add	r1, pc, r1
   15500:	mov	r2, #5
   15504:	bl	112c0 <dcgettext@plt>
   15508:	ldm	r4, {r3, ip}
   1550c:	mov	r1, #1
   15510:	str	ip, [sp]
   15514:	ldr	ip, [r4, #8]
   15518:	str	ip, [sp, #4]
   1551c:	ldr	ip, [r4, #12]
   15520:	str	ip, [sp, #8]
   15524:	ldr	ip, [r4, #16]
   15528:	str	ip, [sp, #12]
   1552c:	ldr	ip, [r4, #20]
   15530:	str	ip, [sp, #16]
   15534:	ldr	ip, [r4, #24]
   15538:	str	ip, [sp, #20]
   1553c:	ldr	ip, [r4, #28]
   15540:	str	ip, [sp, #24]
   15544:	ldr	ip, [r4, #32]
   15548:	str	ip, [sp, #28]
   1554c:	mov	r2, r0
   15550:	mov	r0, r5
   15554:	bl	114a0 <__fprintf_chk@plt>
   15558:	add	sp, sp, #36	; 0x24
   1555c:	pop	{r4, r5, r6, r7, pc}
   15560:	bl	11524 <abort@plt>
   15564:	ldr	r1, [pc, #620]	; 157d8 <close_stdout@@Base+0x30dc>
   15568:	mov	r2, #5
   1556c:	mov	r0, #0
   15570:	add	r1, pc, r1
   15574:	bl	112c0 <dcgettext@plt>
   15578:	ldr	r3, [r4]
   1557c:	mov	r1, #1
   15580:	mov	r2, r0
   15584:	mov	r0, r5
   15588:	add	sp, sp, #36	; 0x24
   1558c:	pop	{r4, r5, r6, r7, lr}
   15590:	b	114a0 <__fprintf_chk@plt>
   15594:	ldr	r1, [pc, #576]	; 157dc <close_stdout@@Base+0x30e0>
   15598:	mov	r2, #5
   1559c:	mov	r0, #0
   155a0:	add	r1, pc, r1
   155a4:	bl	112c0 <dcgettext@plt>
   155a8:	ldm	r4, {r3, ip}
   155ac:	mov	r1, #1
   155b0:	str	ip, [sp, #56]	; 0x38
   155b4:	mov	r2, r0
   155b8:	mov	r0, r5
   155bc:	add	sp, sp, #36	; 0x24
   155c0:	pop	{r4, r5, r6, r7, lr}
   155c4:	b	114a0 <__fprintf_chk@plt>
   155c8:	ldr	r1, [pc, #528]	; 157e0 <close_stdout@@Base+0x30e4>
   155cc:	mov	r2, #5
   155d0:	mov	r0, #0
   155d4:	add	r1, pc, r1
   155d8:	bl	112c0 <dcgettext@plt>
   155dc:	ldm	r4, {r3, ip}
   155e0:	mov	r1, #1
   155e4:	str	ip, [sp, #56]	; 0x38
   155e8:	ldr	ip, [r4, #8]
   155ec:	str	ip, [sp, #60]	; 0x3c
   155f0:	mov	r2, r0
   155f4:	mov	r0, r5
   155f8:	add	sp, sp, #36	; 0x24
   155fc:	pop	{r4, r5, r6, r7, lr}
   15600:	b	114a0 <__fprintf_chk@plt>
   15604:	ldr	r1, [pc, #472]	; 157e4 <close_stdout@@Base+0x30e8>
   15608:	mov	r2, #5
   1560c:	mov	r0, #0
   15610:	add	r1, pc, r1
   15614:	bl	112c0 <dcgettext@plt>
   15618:	ldm	r4, {r3, ip}
   1561c:	mov	r1, #1
   15620:	str	ip, [sp]
   15624:	ldr	ip, [r4, #8]
   15628:	str	ip, [sp, #4]
   1562c:	ldr	ip, [r4, #12]
   15630:	str	ip, [sp, #8]
   15634:	mov	r2, r0
   15638:	mov	r0, r5
   1563c:	bl	114a0 <__fprintf_chk@plt>
   15640:	b	15558 <close_stdout@@Base+0x2e5c>
   15644:	ldr	r1, [pc, #412]	; 157e8 <close_stdout@@Base+0x30ec>
   15648:	mov	r2, #5
   1564c:	mov	r0, #0
   15650:	add	r1, pc, r1
   15654:	bl	112c0 <dcgettext@plt>
   15658:	ldm	r4, {r3, ip}
   1565c:	mov	r1, #1
   15660:	str	ip, [sp]
   15664:	ldr	ip, [r4, #8]
   15668:	str	ip, [sp, #4]
   1566c:	ldr	ip, [r4, #12]
   15670:	str	ip, [sp, #8]
   15674:	ldr	ip, [r4, #16]
   15678:	str	ip, [sp, #12]
   1567c:	mov	r2, r0
   15680:	mov	r0, r5
   15684:	bl	114a0 <__fprintf_chk@plt>
   15688:	b	15558 <close_stdout@@Base+0x2e5c>
   1568c:	ldr	r1, [pc, #344]	; 157ec <close_stdout@@Base+0x30f0>
   15690:	mov	r2, #5
   15694:	mov	r0, #0
   15698:	add	r1, pc, r1
   1569c:	bl	112c0 <dcgettext@plt>
   156a0:	ldm	r4, {r3, ip}
   156a4:	mov	r1, #1
   156a8:	str	ip, [sp]
   156ac:	ldr	ip, [r4, #8]
   156b0:	str	ip, [sp, #4]
   156b4:	ldr	ip, [r4, #12]
   156b8:	str	ip, [sp, #8]
   156bc:	ldr	ip, [r4, #16]
   156c0:	str	ip, [sp, #12]
   156c4:	ldr	ip, [r4, #20]
   156c8:	str	ip, [sp, #16]
   156cc:	mov	r2, r0
   156d0:	mov	r0, r5
   156d4:	bl	114a0 <__fprintf_chk@plt>
   156d8:	b	15558 <close_stdout@@Base+0x2e5c>
   156dc:	ldr	r1, [pc, #268]	; 157f0 <close_stdout@@Base+0x30f4>
   156e0:	mov	r2, #5
   156e4:	mov	r0, #0
   156e8:	add	r1, pc, r1
   156ec:	bl	112c0 <dcgettext@plt>
   156f0:	ldm	r4, {r3, ip}
   156f4:	mov	r1, #1
   156f8:	str	ip, [sp]
   156fc:	ldr	ip, [r4, #8]
   15700:	str	ip, [sp, #4]
   15704:	ldr	ip, [r4, #12]
   15708:	str	ip, [sp, #8]
   1570c:	ldr	ip, [r4, #16]
   15710:	str	ip, [sp, #12]
   15714:	ldr	ip, [r4, #20]
   15718:	str	ip, [sp, #16]
   1571c:	ldr	ip, [r4, #24]
   15720:	str	ip, [sp, #20]
   15724:	mov	r2, r0
   15728:	mov	r0, r5
   1572c:	bl	114a0 <__fprintf_chk@plt>
   15730:	b	15558 <close_stdout@@Base+0x2e5c>
   15734:	ldr	r1, [pc, #184]	; 157f4 <close_stdout@@Base+0x30f8>
   15738:	mov	r2, #5
   1573c:	mov	r0, #0
   15740:	add	r1, pc, r1
   15744:	bl	112c0 <dcgettext@plt>
   15748:	ldm	r4, {r3, ip}
   1574c:	mov	r1, #1
   15750:	str	ip, [sp]
   15754:	ldr	ip, [r4, #8]
   15758:	str	ip, [sp, #4]
   1575c:	ldr	ip, [r4, #12]
   15760:	str	ip, [sp, #8]
   15764:	ldr	ip, [r4, #16]
   15768:	str	ip, [sp, #12]
   1576c:	ldr	ip, [r4, #20]
   15770:	str	ip, [sp, #16]
   15774:	ldr	ip, [r4, #24]
   15778:	str	ip, [sp, #20]
   1577c:	ldr	ip, [r4, #28]
   15780:	str	ip, [sp, #24]
   15784:	mov	r2, r0
   15788:	mov	r0, r5
   1578c:	bl	114a0 <__fprintf_chk@plt>
   15790:	b	15558 <close_stdout@@Base+0x2e5c>
   15794:	str	r3, [sp]
   15798:	mov	r3, r2
   1579c:	ldr	r2, [pc, #84]	; 157f8 <close_stdout@@Base+0x30fc>
   157a0:	mov	r1, #1
   157a4:	add	r2, pc, r2
   157a8:	bl	114a0 <__fprintf_chk@plt>
   157ac:	b	15470 <close_stdout@@Base+0x2d74>
   157b0:	ldr	r1, [pc, #68]	; 157fc <close_stdout@@Base+0x3100>
   157b4:	mov	r0, #0
   157b8:	add	r1, pc, r1
   157bc:	b	15500 <close_stdout@@Base+0x2e04>
   157c0:			; <UNDEFINED> instruction: 0x00014bb4
   157c4:	strdeq	r3, [r0], -r8
   157c8:	strdeq	r3, [r0], -r8
   157cc:	andeq	r0, r0, r0, ror #2
   157d0:	andeq	r3, r0, r8, asr #21
   157d4:	andeq	r3, r0, r4, asr ip
   157d8:	ldrdeq	r3, [r0], -r4
   157dc:			; <UNDEFINED> instruction: 0x00003ab4
   157e0:	muleq	r0, r8, sl
   157e4:	andeq	r3, r0, r8, ror sl
   157e8:	andeq	r3, r0, r8, asr sl
   157ec:	andeq	r3, r0, r4, lsr sl
   157f0:	andeq	r3, r0, ip, lsl #20
   157f4:	andeq	r3, r0, r0, ror #19
   157f8:	andeq	r3, r0, r8, asr #15
   157fc:	andeq	r3, r0, ip, asr #19
   15800:	push	{r4, r5, lr}
   15804:	sub	sp, sp, #12
   15808:	ldr	r5, [sp, #24]
   1580c:	ldr	ip, [r5]
   15810:	cmp	ip, #0
   15814:	beq	15830 <close_stdout@@Base+0x3134>
   15818:	mov	lr, r5
   1581c:	mov	ip, #0
   15820:	ldr	r4, [lr, #4]!
   15824:	add	ip, ip, #1
   15828:	cmp	r4, #0
   1582c:	bne	15820 <close_stdout@@Base+0x3124>
   15830:	stm	sp, {r5, ip}
   15834:	bl	1542c <close_stdout@@Base+0x2d30>
   15838:	add	sp, sp, #12
   1583c:	pop	{r4, r5, pc}
   15840:	push	{r4, r5, r6, r7, lr}
   15844:	sub	sp, sp, #60	; 0x3c
   15848:	ldr	r4, [pc, #100]	; 158b4 <close_stdout@@Base+0x31b8>
   1584c:	mov	ip, #0
   15850:	ldr	r5, [pc, #96]	; 158b8 <close_stdout@@Base+0x31bc>
   15854:	mov	lr, ip
   15858:	add	r4, pc, r4
   1585c:	ldr	r6, [sp, #80]	; 0x50
   15860:	ldr	r7, [r4, r5]
   15864:	add	r5, sp, #12
   15868:	ldr	r4, [r7]
   1586c:	str	r4, [sp, #52]	; 0x34
   15870:	ldr	r4, [r6, ip]
   15874:	cmp	r4, #0
   15878:	str	r4, [r5, ip]
   1587c:	beq	15890 <close_stdout@@Base+0x3194>
   15880:	add	lr, lr, #1
   15884:	add	ip, ip, #4
   15888:	cmp	lr, #10
   1588c:	bne	15870 <close_stdout@@Base+0x3174>
   15890:	stm	sp, {r5, lr}
   15894:	bl	1542c <close_stdout@@Base+0x2d30>
   15898:	ldr	r2, [sp, #52]	; 0x34
   1589c:	ldr	r3, [r7]
   158a0:	cmp	r2, r3
   158a4:	bne	158b0 <close_stdout@@Base+0x31b4>
   158a8:	add	sp, sp, #60	; 0x3c
   158ac:	pop	{r4, r5, r6, r7, pc}
   158b0:	bl	112cc <__stack_chk_fail@plt>
   158b4:	andeq	r4, r1, r0, lsr #15
   158b8:	andeq	r0, r0, r4, lsr r1
   158bc:	push	{r3}		; (str r3, [sp, #-4]!)
   158c0:	push	{r4, lr}
   158c4:	sub	sp, sp, #20
   158c8:	ldr	lr, [pc, #72]	; 15918 <close_stdout@@Base+0x321c>
   158cc:	add	ip, sp, #32
   158d0:	ldr	r4, [pc, #68]	; 1591c <close_stdout@@Base+0x3220>
   158d4:	add	lr, pc, lr
   158d8:	ldr	r3, [sp, #28]
   158dc:	ldr	r4, [lr, r4]
   158e0:	str	ip, [sp]
   158e4:	str	ip, [sp, #8]
   158e8:	ldr	ip, [r4]
   158ec:	str	ip, [sp, #12]
   158f0:	bl	15840 <close_stdout@@Base+0x3144>
   158f4:	ldr	r2, [sp, #12]
   158f8:	ldr	r3, [r4]
   158fc:	cmp	r2, r3
   15900:	bne	15914 <close_stdout@@Base+0x3218>
   15904:	add	sp, sp, #20
   15908:	pop	{r4, lr}
   1590c:	add	sp, sp, #4
   15910:	bx	lr
   15914:	bl	112cc <__stack_chk_fail@plt>
   15918:	andeq	r4, r1, r4, lsr #14
   1591c:	andeq	r0, r0, r4, lsr r1
   15920:	ldr	r1, [pc, #132]	; 159ac <close_stdout@@Base+0x32b0>
   15924:	mov	r2, #5
   15928:	push	{r4, lr}
   1592c:	add	r1, pc, r1
   15930:	mov	r0, #0
   15934:	ldr	r4, [pc, #116]	; 159b0 <close_stdout@@Base+0x32b4>
   15938:	bl	112c0 <dcgettext@plt>
   1593c:	ldr	r2, [pc, #112]	; 159b4 <close_stdout@@Base+0x32b8>
   15940:	add	r4, pc, r4
   15944:	add	r2, pc, r2
   15948:	mov	r1, r0
   1594c:	mov	r0, #1
   15950:	bl	1147c <__printf_chk@plt>
   15954:	ldr	r1, [pc, #92]	; 159b8 <close_stdout@@Base+0x32bc>
   15958:	mov	r2, #5
   1595c:	mov	r0, #0
   15960:	add	r1, pc, r1
   15964:	bl	112c0 <dcgettext@plt>
   15968:	ldr	r2, [pc, #76]	; 159bc <close_stdout@@Base+0x32c0>
   1596c:	ldr	r3, [pc, #76]	; 159c0 <close_stdout@@Base+0x32c4>
   15970:	add	r2, pc, r2
   15974:	add	r3, pc, r3
   15978:	mov	r1, r0
   1597c:	mov	r0, #1
   15980:	bl	1147c <__printf_chk@plt>
   15984:	ldr	r1, [pc, #56]	; 159c4 <close_stdout@@Base+0x32c8>
   15988:	mov	r0, #0
   1598c:	mov	r2, #5
   15990:	add	r1, pc, r1
   15994:	bl	112c0 <dcgettext@plt>
   15998:	ldr	r3, [pc, #40]	; 159c8 <close_stdout@@Base+0x32cc>
   1599c:	ldr	r3, [r4, r3]
   159a0:	pop	{r4, lr}
   159a4:	ldr	r1, [r3]
   159a8:	b	11200 <fputs_unlocked@plt>
   159ac:	muleq	r0, r4, r8
   159b0:			; <UNDEFINED> instruction: 0x000146b8
   159b4:	muleq	r0, r4, r8
   159b8:	muleq	r0, r0, r8
   159bc:	andeq	r3, r0, ip, ror #4
   159c0:	andeq	r3, r0, r8, ror r2
   159c4:	andeq	r3, r0, r4, ror r8
   159c8:	andeq	r0, r0, r0, asr r1
   159cc:	push	{r4, lr}
   159d0:	mov	r4, r0
   159d4:	bl	1138c <malloc@plt>
   159d8:	rsbs	r3, r0, #1
   159dc:	movcc	r3, #0
   159e0:	cmp	r4, #0
   159e4:	moveq	r3, #0
   159e8:	cmp	r3, #0
   159ec:	popeq	{r4, pc}
   159f0:	bl	15be0 <close_stdout@@Base+0x34e4>
   159f4:	push	{r3, r4, r5, lr}
   159f8:	mov	r4, r0
   159fc:	mvn	r0, #0
   15a00:	mov	r5, r1
   15a04:	bl	18534 <close_stdout@@Base+0x5e38>
   15a08:	cmp	r0, r4
   15a0c:	bcc	15a1c <close_stdout@@Base+0x3320>
   15a10:	mul	r0, r4, r5
   15a14:	pop	{r3, r4, r5, lr}
   15a18:	b	159cc <close_stdout@@Base+0x32d0>
   15a1c:	bl	15be0 <close_stdout@@Base+0x34e4>
   15a20:	b	159cc <close_stdout@@Base+0x32d0>
   15a24:	rsbs	r3, r1, #1
   15a28:	push	{r4, lr}
   15a2c:	movcc	r3, #0
   15a30:	cmp	r0, #0
   15a34:	mov	r4, r1
   15a38:	moveq	r3, #0
   15a3c:	cmp	r3, #0
   15a40:	bne	15a64 <close_stdout@@Base+0x3368>
   15a44:	bl	112d8 <realloc@plt>
   15a48:	rsbs	r3, r0, #1
   15a4c:	movcc	r3, #0
   15a50:	cmp	r4, #0
   15a54:	moveq	r3, #0
   15a58:	cmp	r3, #0
   15a5c:	popeq	{r4, pc}
   15a60:	bl	15be0 <close_stdout@@Base+0x34e4>
   15a64:	bl	11278 <free@plt>
   15a68:	mov	r0, #0
   15a6c:	pop	{r4, pc}
   15a70:	push	{r4, r5, r6, lr}
   15a74:	mov	r5, r1
   15a78:	mov	r6, r0
   15a7c:	mov	r1, r2
   15a80:	mvn	r0, #0
   15a84:	mov	r4, r2
   15a88:	bl	18534 <close_stdout@@Base+0x5e38>
   15a8c:	cmp	r0, r5
   15a90:	bcc	15aa4 <close_stdout@@Base+0x33a8>
   15a94:	mov	r0, r6
   15a98:	mul	r1, r5, r4
   15a9c:	pop	{r4, r5, r6, lr}
   15aa0:	b	15a24 <close_stdout@@Base+0x3328>
   15aa4:	bl	15be0 <close_stdout@@Base+0x34e4>
   15aa8:	push	{r3, r4, r5, r6, r7, lr}
   15aac:	subs	r7, r0, #0
   15ab0:	mov	r5, r1
   15ab4:	mov	r6, r2
   15ab8:	ldr	r4, [r1]
   15abc:	beq	15af4 <close_stdout@@Base+0x33f8>
   15ac0:	movw	r0, #43690	; 0xaaaa
   15ac4:	mov	r1, r2
   15ac8:	bfi	r0, r0, #16, #16
   15acc:	bl	18534 <close_stdout@@Base+0x5e38>
   15ad0:	cmp	r4, r0
   15ad4:	addcc	r3, r4, #1
   15ad8:	addcc	r4, r4, r3, lsr #1
   15adc:	bcs	15b18 <close_stdout@@Base+0x341c>
   15ae0:	str	r4, [r5]
   15ae4:	mov	r0, r7
   15ae8:	mul	r1, r6, r4
   15aec:	pop	{r3, r4, r5, r6, r7, lr}
   15af0:	b	15a24 <close_stdout@@Base+0x3328>
   15af4:	cmp	r4, #0
   15af8:	bne	15ae0 <close_stdout@@Base+0x33e4>
   15afc:	mov	r0, #64	; 0x40
   15b00:	mov	r1, r2
   15b04:	bl	18534 <close_stdout@@Base+0x5e38>
   15b08:	cmp	r0, #0
   15b0c:	movne	r4, r0
   15b10:	addeq	r4, r0, #1
   15b14:	b	15ae0 <close_stdout@@Base+0x33e4>
   15b18:	bl	15be0 <close_stdout@@Base+0x34e4>
   15b1c:	cmp	r0, #0
   15b20:	push	{r3, lr}
   15b24:	ldr	r3, [r1]
   15b28:	beq	15b54 <close_stdout@@Base+0x3458>
   15b2c:	movw	r2, #43689	; 0xaaa9
   15b30:	movt	r2, #43690	; 0xaaaa
   15b34:	cmp	r3, r2
   15b38:	addls	r2, r3, #1
   15b3c:	addls	r3, r3, r2, lsr #1
   15b40:	bhi	15b6c <close_stdout@@Base+0x3470>
   15b44:	str	r3, [r1]
   15b48:	mov	r1, r3
   15b4c:	pop	{r3, lr}
   15b50:	b	15a24 <close_stdout@@Base+0x3328>
   15b54:	cmp	r3, #0
   15b58:	moveq	r3, #64	; 0x40
   15b5c:	str	r3, [r1]
   15b60:	mov	r1, r3
   15b64:	pop	{r3, lr}
   15b68:	b	15a24 <close_stdout@@Base+0x3328>
   15b6c:	bl	15be0 <close_stdout@@Base+0x34e4>
   15b70:	push	{r4, lr}
   15b74:	mov	r4, r0
   15b78:	bl	159cc <close_stdout@@Base+0x32d0>
   15b7c:	mov	r2, r4
   15b80:	mov	r1, #0
   15b84:	pop	{r4, lr}
   15b88:	b	11464 <memset@plt>
   15b8c:	push	{r3, lr}
   15b90:	bl	111f4 <calloc@plt>
   15b94:	cmp	r0, #0
   15b98:	popne	{r3, pc}
   15b9c:	bl	15be0 <close_stdout@@Base+0x34e4>
   15ba0:	push	{r3, r4, r5, lr}
   15ba4:	mov	r4, r1
   15ba8:	mov	r5, r0
   15bac:	mov	r0, r1
   15bb0:	bl	159cc <close_stdout@@Base+0x32d0>
   15bb4:	mov	r1, r5
   15bb8:	mov	r2, r4
   15bbc:	pop	{r3, r4, r5, lr}
   15bc0:	b	11290 <memcpy@plt>
   15bc4:	push	{r4, lr}
   15bc8:	mov	r4, r0
   15bcc:	bl	113f8 <strlen@plt>
   15bd0:	add	r1, r0, #1
   15bd4:	mov	r0, r4
   15bd8:	pop	{r4, lr}
   15bdc:	b	15ba0 <close_stdout@@Base+0x34a4>
   15be0:	ldr	r3, [pc, #64]	; 15c28 <close_stdout@@Base+0x352c>
   15be4:	mov	r2, #5
   15be8:	ldr	ip, [pc, #60]	; 15c2c <close_stdout@@Base+0x3530>
   15bec:	mov	r0, #0
   15bf0:	add	r3, pc, r3
   15bf4:	ldr	r1, [pc, #52]	; 15c30 <close_stdout@@Base+0x3534>
   15bf8:	push	{r4, lr}
   15bfc:	add	r1, pc, r1
   15c00:	ldr	r3, [r3, ip]
   15c04:	ldr	r4, [r3]
   15c08:	bl	112c0 <dcgettext@plt>
   15c0c:	ldr	r2, [pc, #32]	; 15c34 <close_stdout@@Base+0x3538>
   15c10:	mov	r1, #0
   15c14:	add	r2, pc, r2
   15c18:	mov	r3, r0
   15c1c:	mov	r0, r4
   15c20:	bl	11368 <error@plt>
   15c24:	bl	11524 <abort@plt>
   15c28:	andeq	r4, r1, r8, lsl #8
   15c2c:	andeq	r0, r0, r4, asr r1
   15c30:	andeq	r3, r0, r8, ror r6
   15c34:	ldrdeq	r3, [r0], -ip
   15c38:	push	{r4, lr}
   15c3c:	sub	sp, sp, #8
   15c40:	ldr	ip, [sp, #16]
   15c44:	str	ip, [sp]
   15c48:	bl	179e8 <close_stdout@@Base+0x52ec>
   15c4c:	subs	r4, r0, #0
   15c50:	blt	15c60 <close_stdout@@Base+0x3564>
   15c54:	mov	r0, r4
   15c58:	add	sp, sp, #8
   15c5c:	pop	{r4, pc}
   15c60:	bl	11428 <__errno_location@plt>
   15c64:	ldr	r3, [r0]
   15c68:	cmp	r3, #12
   15c6c:	bne	15c54 <close_stdout@@Base+0x3558>
   15c70:	bl	15be0 <close_stdout@@Base+0x34e4>
   15c74:	push	{r4, lr}
   15c78:	bl	17d4c <close_stdout@@Base+0x5650>
   15c7c:	subs	r4, r0, #0
   15c80:	beq	15c8c <close_stdout@@Base+0x3590>
   15c84:	mov	r0, r4
   15c88:	pop	{r4, pc}
   15c8c:	bl	11428 <__errno_location@plt>
   15c90:	ldr	r3, [r0]
   15c94:	cmp	r3, #12
   15c98:	bne	15c84 <close_stdout@@Base+0x3588>
   15c9c:	bl	15be0 <close_stdout@@Base+0x34e4>
   15ca0:	push	{r4, lr}
   15ca4:	bl	17f68 <close_stdout@@Base+0x586c>
   15ca8:	subs	r4, r0, #0
   15cac:	beq	15cb8 <close_stdout@@Base+0x35bc>
   15cb0:	mov	r0, r4
   15cb4:	pop	{r4, pc}
   15cb8:	bl	11428 <__errno_location@plt>
   15cbc:	ldr	r3, [r0]
   15cc0:	cmp	r3, #12
   15cc4:	bne	15cb0 <close_stdout@@Base+0x35b4>
   15cc8:	bl	15be0 <close_stdout@@Base+0x34e4>
   15ccc:	cmp	r0, r1
   15cd0:	push	{r4}		; (str r4, [sp, #-4]!)
   15cd4:	beq	15d30 <close_stdout@@Base+0x3634>
   15cd8:	sub	r4, r0, #1
   15cdc:	sub	r1, r1, #1
   15ce0:	b	15cec <close_stdout@@Base+0x35f0>
   15ce4:	cmp	r2, ip
   15ce8:	bne	15d24 <close_stdout@@Base+0x3628>
   15cec:	ldrb	r3, [r4, #1]!
   15cf0:	sub	r0, r3, #65	; 0x41
   15cf4:	add	r2, r3, #32
   15cf8:	cmp	r0, #25
   15cfc:	movhi	r2, r3
   15d00:	ldrb	r3, [r1, #1]!
   15d04:	uxtb	r2, r2
   15d08:	sub	r0, r3, #65	; 0x41
   15d0c:	add	ip, r3, #32
   15d10:	cmp	r0, #25
   15d14:	movhi	ip, r3
   15d18:	cmp	r2, #0
   15d1c:	uxtb	ip, ip
   15d20:	bne	15ce4 <close_stdout@@Base+0x35e8>
   15d24:	rsb	r0, ip, r2
   15d28:	pop	{r4}		; (ldr r4, [sp], #4)
   15d2c:	bx	lr
   15d30:	mov	r0, #0
   15d34:	pop	{r4}		; (ldr r4, [sp], #4)
   15d38:	bx	lr
   15d3c:	push	{r4, r5, r6, lr}
   15d40:	mov	r4, r0
   15d44:	bl	11350 <__fpending@plt>
   15d48:	mov	r6, r0
   15d4c:	mov	r0, r4
   15d50:	ldr	r4, [r4]
   15d54:	bl	18050 <close_stdout@@Base+0x5954>
   15d58:	and	r4, r4, #32
   15d5c:	adds	r5, r0, #0
   15d60:	movne	r5, #1
   15d64:	cmp	r4, #0
   15d68:	bne	15d88 <close_stdout@@Base+0x368c>
   15d6c:	cmp	r5, #0
   15d70:	beq	15d80 <close_stdout@@Base+0x3684>
   15d74:	cmp	r6, #0
   15d78:	beq	15da4 <close_stdout@@Base+0x36a8>
   15d7c:	mvn	r4, #0
   15d80:	mov	r0, r4
   15d84:	pop	{r4, r5, r6, pc}
   15d88:	cmp	r5, #0
   15d8c:	bne	15d7c <close_stdout@@Base+0x3680>
   15d90:	bl	11428 <__errno_location@plt>
   15d94:	mvn	r4, #0
   15d98:	str	r5, [r0]
   15d9c:	mov	r0, r4
   15da0:	pop	{r4, r5, r6, pc}
   15da4:	bl	11428 <__errno_location@plt>
   15da8:	ldr	r4, [r0]
   15dac:	subs	r4, r4, #9
   15db0:	mvnne	r4, #0
   15db4:	mov	r0, r4
   15db8:	pop	{r4, r5, r6, pc}
   15dbc:	ldr	r3, [pc, #984]	; 1619c <close_stdout@@Base+0x3aa0>
   15dc0:	mov	r0, #14
   15dc4:	ldr	r2, [pc, #980]	; 161a0 <close_stdout@@Base+0x3aa4>
   15dc8:	add	r3, pc, r3
   15dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15dd0:	sub	sp, sp, #132	; 0x84
   15dd4:	ldr	r6, [r3, r2]
   15dd8:	ldr	r3, [r6]
   15ddc:	str	r3, [sp, #124]	; 0x7c
   15de0:	bl	11500 <nl_langinfo@plt>
   15de4:	subs	r5, r0, #0
   15de8:	beq	15e9c <close_stdout@@Base+0x37a0>
   15dec:	ldr	r3, [pc, #944]	; 161a4 <close_stdout@@Base+0x3aa8>
   15df0:	ldr	r4, [pc, r3]
   15df4:	cmp	r4, #0
   15df8:	beq	15ea8 <close_stdout@@Base+0x37ac>
   15dfc:	ldrb	r7, [r4]
   15e00:	cmp	r7, #0
   15e04:	bne	15e38 <close_stdout@@Base+0x373c>
   15e08:	b	15e70 <close_stdout@@Base+0x3774>
   15e0c:	mov	r0, r4
   15e10:	bl	113f8 <strlen@plt>
   15e14:	add	r0, r0, #1
   15e18:	add	r7, r4, r0
   15e1c:	mov	r0, r7
   15e20:	bl	113f8 <strlen@plt>
   15e24:	add	r0, r0, #1
   15e28:	add	r4, r7, r0
   15e2c:	ldrb	r7, [r7, r0]
   15e30:	cmp	r7, #0
   15e34:	beq	15e70 <close_stdout@@Base+0x3774>
   15e38:	mov	r0, r5
   15e3c:	mov	r1, r4
   15e40:	bl	11230 <strcmp@plt>
   15e44:	cmp	r0, #0
   15e48:	beq	15e60 <close_stdout@@Base+0x3764>
   15e4c:	cmp	r7, #42	; 0x2a
   15e50:	bne	15e0c <close_stdout@@Base+0x3710>
   15e54:	ldrb	r3, [r4, #1]
   15e58:	cmp	r3, #0
   15e5c:	bne	15e0c <close_stdout@@Base+0x3710>
   15e60:	mov	r0, r4
   15e64:	bl	113f8 <strlen@plt>
   15e68:	add	r0, r0, #1
   15e6c:	add	r5, r4, r0
   15e70:	ldrb	r3, [r5]
   15e74:	cmp	r3, #0
   15e78:	ldreq	r5, [pc, #808]	; 161a8 <close_stdout@@Base+0x3aac>
   15e7c:	addeq	r5, pc, r5
   15e80:	ldr	r2, [sp, #124]	; 0x7c
   15e84:	mov	r0, r5
   15e88:	ldr	r3, [r6]
   15e8c:	cmp	r2, r3
   15e90:	bne	16170 <close_stdout@@Base+0x3a74>
   15e94:	add	sp, sp, #132	; 0x84
   15e98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e9c:	ldr	r5, [pc, #776]	; 161ac <close_stdout@@Base+0x3ab0>
   15ea0:	add	r5, pc, r5
   15ea4:	b	15dec <close_stdout@@Base+0x36f0>
   15ea8:	ldr	r0, [pc, #768]	; 161b0 <close_stdout@@Base+0x3ab4>
   15eac:	add	r0, pc, r0
   15eb0:	bl	11380 <getenv@plt>
   15eb4:	subs	r8, r0, #0
   15eb8:	beq	16148 <close_stdout@@Base+0x3a4c>
   15ebc:	ldrb	r3, [r8]
   15ec0:	cmp	r3, #0
   15ec4:	beq	160dc <close_stdout@@Base+0x39e0>
   15ec8:	bl	113f8 <strlen@plt>
   15ecc:	subs	sl, r0, #0
   15ed0:	subne	r3, sl, #1
   15ed4:	bne	160ec <close_stdout@@Base+0x39f0>
   15ed8:	mov	r9, #0
   15edc:	mov	fp, r9
   15ee0:	add	r9, sl, r9
   15ee4:	add	r0, r9, #14
   15ee8:	bl	1138c <malloc@plt>
   15eec:	subs	r7, r0, #0
   15ef0:	beq	1613c <close_stdout@@Base+0x3a40>
   15ef4:	mov	r1, r8
   15ef8:	mov	r2, sl
   15efc:	bl	11290 <memcpy@plt>
   15f00:	cmp	fp, #0
   15f04:	add	ip, r7, r9
   15f08:	movne	r3, #47	; 0x2f
   15f0c:	strbne	r3, [r7, sl]
   15f10:	ldr	r3, [pc, #668]	; 161b4 <close_stdout@@Base+0x3ab8>
   15f14:	add	r3, pc, r3
   15f18:	ldm	r3!, {r0, r1, r2}
   15f1c:	ldrh	r3, [r3]
   15f20:	str	r0, [r7, r9]
   15f24:	mov	r0, r7
   15f28:	str	r1, [ip, #4]
   15f2c:	mov	r1, #32768	; 0x8000
   15f30:	strh	r3, [ip, #12]
   15f34:	str	r2, [ip, #8]
   15f38:	bl	11374 <open64@plt>
   15f3c:	subs	r8, r0, #0
   15f40:	blt	16104 <close_stdout@@Base+0x3a08>
   15f44:	ldr	r1, [pc, #620]	; 161b8 <close_stdout@@Base+0x3abc>
   15f48:	add	r1, pc, r1
   15f4c:	bl	111e8 <fdopen@plt>
   15f50:	subs	fp, r0, #0
   15f54:	beq	1615c <close_stdout@@Base+0x3a60>
   15f58:	ldr	r0, [pc, #604]	; 161bc <close_stdout@@Base+0x3ac0>
   15f5c:	add	sl, sp, #20
   15f60:	add	r9, sp, #72	; 0x48
   15f64:	mov	r8, #0
   15f68:	add	r0, pc, r0
   15f6c:	str	r0, [sp, #12]
   15f70:	ldr	r3, [fp, #4]
   15f74:	ldr	r2, [fp, #8]
   15f78:	cmp	r3, r2
   15f7c:	bcs	16068 <close_stdout@@Base+0x396c>
   15f80:	add	r2, r3, #1
   15f84:	str	r2, [fp, #4]
   15f88:	ldrb	r0, [r3]
   15f8c:	cmp	r0, #32
   15f90:	beq	15f70 <close_stdout@@Base+0x3874>
   15f94:	sub	r3, r0, #9
   15f98:	cmp	r3, #1
   15f9c:	bls	15f70 <close_stdout@@Base+0x3874>
   15fa0:	cmp	r0, #35	; 0x23
   15fa4:	beq	1607c <close_stdout@@Base+0x3980>
   15fa8:	mov	r1, fp
   15fac:	bl	1141c <ungetc@plt>
   15fb0:	mov	r0, fp
   15fb4:	ldr	r1, [sp, #12]
   15fb8:	mov	r2, sl
   15fbc:	mov	r3, r9
   15fc0:	bl	11470 <fscanf@plt>
   15fc4:	cmp	r0, #1
   15fc8:	ble	160ac <close_stdout@@Base+0x39b0>
   15fcc:	mov	r0, sl
   15fd0:	bl	113f8 <strlen@plt>
   15fd4:	str	r0, [sp, #8]
   15fd8:	mov	r0, r9
   15fdc:	bl	113f8 <strlen@plt>
   15fe0:	cmp	r8, #0
   15fe4:	mov	r2, r0
   15fe8:	bne	16110 <close_stdout@@Base+0x3a14>
   15fec:	ldr	r3, [sp, #8]
   15ff0:	str	r2, [sp]
   15ff4:	add	r8, r0, r3
   15ff8:	add	r0, r8, #3
   15ffc:	add	r8, r8, #2
   16000:	bl	1138c <malloc@plt>
   16004:	ldr	r2, [sp]
   16008:	mov	r3, r0
   1600c:	cmp	r3, #0
   16010:	beq	16174 <close_stdout@@Base+0x3a78>
   16014:	ldr	r0, [sp, #8]
   16018:	movw	r1, #65534	; 0xfffe
   1601c:	movt	r1, #65535	; 0xffff
   16020:	rsb	r2, r2, r8
   16024:	rsb	r1, r0, r1
   16028:	stm	sp, {r2, r3}
   1602c:	add	r0, r1, r2
   16030:	mov	r1, sl
   16034:	add	r0, r3, r0
   16038:	mov	r4, r3
   1603c:	bl	11344 <strcpy@plt>
   16040:	ldr	r2, [sp]
   16044:	ldr	r3, [sp, #4]
   16048:	mov	r1, r9
   1604c:	sub	r0, r2, #1
   16050:	add	r0, r3, r0
   16054:	bl	11344 <strcpy@plt>
   16058:	ldr	r3, [fp, #4]
   1605c:	ldr	r2, [fp, #8]
   16060:	cmp	r3, r2
   16064:	bcc	15f80 <close_stdout@@Base+0x3884>
   16068:	mov	r0, fp
   1606c:	bl	114dc <__uflow@plt>
   16070:	cmn	r0, #1
   16074:	beq	160ac <close_stdout@@Base+0x39b0>
   16078:	b	15f8c <close_stdout@@Base+0x3890>
   1607c:	ldr	r3, [fp, #4]
   16080:	ldr	r2, [fp, #8]
   16084:	cmp	r3, r2
   16088:	bcs	16190 <close_stdout@@Base+0x3a94>
   1608c:	add	r2, r3, #1
   16090:	str	r2, [fp, #4]
   16094:	ldrb	r0, [r3]
   16098:	cmp	r0, #10
   1609c:	cmnne	r0, #1
   160a0:	bne	1607c <close_stdout@@Base+0x3980>
   160a4:	cmn	r0, #1
   160a8:	bne	15f70 <close_stdout@@Base+0x3874>
   160ac:	mov	r0, fp
   160b0:	bl	18050 <close_stdout@@Base+0x5954>
   160b4:	cmp	r8, #0
   160b8:	beq	16104 <close_stdout@@Base+0x3a08>
   160bc:	mov	r3, #0
   160c0:	strb	r3, [r4, r8]
   160c4:	mov	r0, r7
   160c8:	bl	11278 <free@plt>
   160cc:	ldr	r3, [pc, #236]	; 161c0 <close_stdout@@Base+0x3ac4>
   160d0:	add	r3, pc, r3
   160d4:	str	r4, [r3]
   160d8:	b	15dfc <close_stdout@@Base+0x3700>
   160dc:	ldr	r8, [pc, #224]	; 161c4 <close_stdout@@Base+0x3ac8>
   160e0:	mov	r3, #7
   160e4:	mov	sl, #8
   160e8:	add	r8, pc, r8
   160ec:	ldrb	r3, [r8, r3]
   160f0:	cmp	r3, #47	; 0x2f
   160f4:	movne	r9, #1
   160f8:	movne	fp, r9
   160fc:	bne	15ee0 <close_stdout@@Base+0x37e4>
   16100:	b	15ed8 <close_stdout@@Base+0x37dc>
   16104:	ldr	r4, [pc, #188]	; 161c8 <close_stdout@@Base+0x3acc>
   16108:	add	r4, pc, r4
   1610c:	b	160c4 <close_stdout@@Base+0x39c8>
   16110:	ldr	r0, [sp, #8]
   16114:	str	r2, [sp]
   16118:	add	r3, r0, r2
   1611c:	mov	r0, r4
   16120:	add	r8, r3, r8
   16124:	add	r1, r8, #3
   16128:	add	r8, r8, #2
   1612c:	bl	112d8 <realloc@plt>
   16130:	ldr	r2, [sp]
   16134:	mov	r3, r0
   16138:	b	1600c <close_stdout@@Base+0x3910>
   1613c:	ldr	r4, [pc, #136]	; 161cc <close_stdout@@Base+0x3ad0>
   16140:	add	r4, pc, r4
   16144:	b	160cc <close_stdout@@Base+0x39d0>
   16148:	ldr	r8, [pc, #128]	; 161d0 <close_stdout@@Base+0x3ad4>
   1614c:	mov	r3, #7
   16150:	mov	sl, #8
   16154:	add	r8, pc, r8
   16158:	b	160ec <close_stdout@@Base+0x39f0>
   1615c:	ldr	r4, [pc, #112]	; 161d4 <close_stdout@@Base+0x3ad8>
   16160:	mov	r0, r8
   16164:	add	r4, pc, r4
   16168:	bl	11530 <close@plt>
   1616c:	b	160c4 <close_stdout@@Base+0x39c8>
   16170:	bl	112cc <__stack_chk_fail@plt>
   16174:	mov	r0, r4
   16178:	ldr	r4, [pc, #88]	; 161d8 <close_stdout@@Base+0x3adc>
   1617c:	bl	11278 <free@plt>
   16180:	mov	r0, fp
   16184:	add	r4, pc, r4
   16188:	bl	18050 <close_stdout@@Base+0x5954>
   1618c:	b	160c4 <close_stdout@@Base+0x39c8>
   16190:	mov	r0, fp
   16194:	bl	114dc <__uflow@plt>
   16198:	b	16098 <close_stdout@@Base+0x399c>
   1619c:	andeq	r4, r1, r0, lsr r2
   161a0:	andeq	r0, r0, r4, lsr r1
   161a4:	andeq	r4, r1, r4, lsr #10
   161a8:	andeq	r3, r0, r8, lsl r4
   161ac:	andeq	r2, r0, r0, lsl #28
   161b0:	strdeq	r3, [r0], -r0
   161b4:	muleq	r0, r8, r3
   161b8:	andeq	r3, r0, r4, ror r3
   161bc:	andeq	r3, r0, r8, asr r3
   161c0:	andeq	r4, r1, r4, asr #4
   161c4:	andeq	r3, r0, r0, lsr #3
   161c8:	muleq	r0, r8, fp
   161cc:	andeq	r2, r0, r0, ror #22
   161d0:	andeq	r3, r0, r4, lsr r1
   161d4:	andeq	r2, r0, ip, lsr fp
   161d8:	andeq	r2, r0, ip, lsl fp
   161dc:	push	{r4, lr}
   161e0:	mov	r4, r0
   161e4:	bl	11260 <wcwidth@plt>
   161e8:	cmp	r0, #0
   161ec:	popge	{r4, pc}
   161f0:	mov	r0, r4
   161f4:	bl	112f0 <iswcntrl@plt>
   161f8:	rsbs	r0, r0, #1
   161fc:	movcc	r0, #0
   16200:	pop	{r4, pc}
   16204:	push	{r3, r4, r5, lr}
   16208:	mov	r3, r1
   1620c:	mov	r4, r1
   16210:	ldr	r1, [r3], #16
   16214:	mov	r5, r0
   16218:	cmp	r1, r3
   1621c:	strne	r1, [r0]
   16220:	beq	16244 <close_stdout@@Base+0x3b48>
   16224:	ldr	r3, [r4, #4]
   16228:	str	r3, [r5, #4]
   1622c:	ldrb	r3, [r4, #8]
   16230:	cmp	r3, #0
   16234:	strb	r3, [r5, #8]
   16238:	ldrne	r3, [r4, #12]
   1623c:	strne	r3, [r5, #12]
   16240:	pop	{r3, r4, r5, pc}
   16244:	add	r3, r0, #16
   16248:	ldr	r2, [r4, #4]
   1624c:	mov	r0, r3
   16250:	bl	11290 <memcpy@plt>
   16254:	str	r0, [r5]
   16258:	b	16224 <close_stdout@@Base+0x3b28>
   1625c:	ldr	r3, [pc, #32]	; 16284 <close_stdout@@Base+0x3b88>
   16260:	lsr	r2, r0, #5
   16264:	ldr	r1, [pc, #28]	; 16288 <close_stdout@@Base+0x3b8c>
   16268:	and	r0, r0, #31
   1626c:	add	r3, pc, r3
   16270:	ldr	r3, [r3, r1]
   16274:	ldr	r3, [r3, r2, lsl #2]
   16278:	lsr	r0, r3, r0
   1627c:	and	r0, r0, #1
   16280:	bx	lr
   16284:	andeq	r3, r1, ip, lsl #27
   16288:	andeq	r0, r0, r0, lsr r1
   1628c:	ldr	ip, [pc, #380]	; 16410 <close_stdout@@Base+0x3d14>
   16290:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16294:	mov	r7, r2
   16298:	add	fp, sp, #28
   1629c:	ldr	r2, [pc, #368]	; 16414 <close_stdout@@Base+0x3d18>
   162a0:	sub	sp, sp, #8
   162a4:	add	ip, pc, ip
   162a8:	mov	r8, r3
   162ac:	mov	r3, ip
   162b0:	cmn	r7, #-1073741823	; 0xc0000001
   162b4:	ldr	r5, [ip, r2]
   162b8:	mov	r6, r0
   162bc:	mov	r4, r1
   162c0:	ldr	r3, [r5]
   162c4:	str	r3, [fp, #-32]	; 0xffffffe0
   162c8:	bls	162e8 <close_stdout@@Base+0x3bec>
   162cc:	mov	r0, #0
   162d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   162d4:	ldr	r3, [r5]
   162d8:	cmp	r2, r3
   162dc:	bne	1640c <close_stdout@@Base+0x3d10>
   162e0:	sub	sp, fp, #28
   162e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   162e8:	lsl	r0, r7, #2
   162ec:	movw	r3, #4023	; 0xfb7
   162f0:	cmp	r0, r3
   162f4:	bls	163c0 <close_stdout@@Base+0x3cc4>
   162f8:	bl	181f8 <close_stdout@@Base+0x5afc>
   162fc:	cmp	r0, #0
   16300:	beq	162cc <close_stdout@@Base+0x3bd0>
   16304:	cmp	r7, #2
   16308:	mov	r3, #1
   1630c:	str	r3, [r0, #4]
   16310:	movhi	r9, r4
   16314:	movhi	r2, r0
   16318:	movhi	ip, #0
   1631c:	movhi	r3, #2
   16320:	bls	1636c <close_stdout@@Base+0x3c70>
   16324:	ldrb	r1, [r9, #1]!
   16328:	ldrb	lr, [r4, ip]
   1632c:	cmp	lr, r1
   16330:	bne	1634c <close_stdout@@Base+0x3c50>
   16334:	b	163d4 <close_stdout@@Base+0x3cd8>
   16338:	ldr	lr, [r0, ip, lsl #2]
   1633c:	rsb	ip, lr, ip
   16340:	ldrb	lr, [r4, ip]
   16344:	cmp	lr, r1
   16348:	beq	163d4 <close_stdout@@Base+0x3cd8>
   1634c:	cmp	ip, #0
   16350:	bne	16338 <close_stdout@@Base+0x3c3c>
   16354:	mov	ip, #0
   16358:	str	r3, [r2, #8]
   1635c:	add	r3, r3, #1
   16360:	add	r2, r2, #4
   16364:	cmp	r3, r7
   16368:	bne	16324 <close_stdout@@Base+0x3c28>
   1636c:	mov	r2, #0
   16370:	str	r2, [r8]
   16374:	ldrb	r3, [r6]
   16378:	mov	ip, r6
   1637c:	cmp	r3, #0
   16380:	beq	163b4 <close_stdout@@Base+0x3cb8>
   16384:	ldrb	r1, [r4, r2]
   16388:	cmp	r1, r3
   1638c:	beq	163e4 <close_stdout@@Base+0x3ce8>
   16390:	cmp	r2, #0
   16394:	addeq	r6, r6, #1
   16398:	ldrne	r1, [r0, r2, lsl #2]
   1639c:	ldrbeq	r3, [ip, #1]
   163a0:	addeq	ip, ip, #1
   163a4:	addne	r6, r6, r1
   163a8:	rsbne	r2, r1, r2
   163ac:	cmp	r3, #0
   163b0:	bne	16384 <close_stdout@@Base+0x3c88>
   163b4:	bl	18260 <close_stdout@@Base+0x5b64>
   163b8:	mov	r0, #1
   163bc:	b	162d0 <close_stdout@@Base+0x3bd4>
   163c0:	add	r3, r0, #22
   163c4:	bic	r3, r3, #7
   163c8:	sub	sp, sp, r3
   163cc:	add	r0, sp, #8
   163d0:	b	162fc <close_stdout@@Base+0x3c00>
   163d4:	add	ip, ip, #1
   163d8:	rsb	r1, ip, r3
   163dc:	str	r1, [r2, #8]
   163e0:	b	1635c <close_stdout@@Base+0x3c60>
   163e4:	add	r2, r2, #1
   163e8:	add	r1, ip, #1
   163ec:	cmp	r7, r2
   163f0:	ldrbne	r3, [ip, #1]
   163f4:	movne	ip, r1
   163f8:	bne	1637c <close_stdout@@Base+0x3c80>
   163fc:	str	r6, [r8]
   16400:	bl	18260 <close_stdout@@Base+0x5b64>
   16404:	mov	r0, #1
   16408:	b	162d0 <close_stdout@@Base+0x3bd4>
   1640c:	bl	112cc <__stack_chk_fail@plt>
   16410:	andeq	r3, r1, r4, asr sp
   16414:	andeq	r0, r0, r4, lsr r1
   16418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1641c:	add	fp, sp, #32
   16420:	ldr	r8, [pc, #2268]	; 16d04 <close_stdout@@Base+0x4608>
   16424:	sub	sp, sp, #220	; 0xdc
   16428:	ldr	r3, [pc, #2264]	; 16d08 <close_stdout@@Base+0x460c>
   1642c:	add	r8, pc, r8
   16430:	str	r0, [fp, #-232]	; 0xffffff18
   16434:	str	r2, [fp, #-248]	; 0xffffff08
   16438:	mov	r0, r1
   1643c:	ldr	r3, [r8, r3]
   16440:	mov	r4, r1
   16444:	str	r3, [fp, #-244]	; 0xffffff0c
   16448:	ldr	r3, [r3]
   1644c:	str	r3, [fp, #-40]	; 0xffffffd8
   16450:	bl	182e8 <close_stdout@@Base+0x5bec>
   16454:	movw	r3, #29789	; 0x745d
   16458:	movt	r3, #1489	; 0x5d1
   1645c:	cmp	r0, r3
   16460:	str	r0, [fp, #-224]	; 0xffffff20
   16464:	bls	16488 <close_stdout@@Base+0x3d8c>
   16468:	mov	r0, #0
   1646c:	ldr	r1, [fp, #-244]	; 0xffffff0c
   16470:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16474:	ldr	r3, [r1]
   16478:	cmp	r2, r3
   1647c:	bne	16ce0 <close_stdout@@Base+0x45e4>
   16480:	sub	sp, fp, #32
   16484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16488:	ldr	r1, [fp, #-224]	; 0xffffff20
   1648c:	mov	r0, #44	; 0x2c
   16490:	movw	r3, #4023	; 0xfb7
   16494:	mul	r0, r0, r1
   16498:	cmp	r0, r3
   1649c:	bls	16868 <close_stdout@@Base+0x416c>
   164a0:	bl	181f8 <close_stdout@@Base+0x5afc>
   164a4:	str	r0, [fp, #-236]	; 0xffffff14
   164a8:	ldr	r3, [fp, #-236]	; 0xffffff14
   164ac:	cmp	r3, #0
   164b0:	beq	16468 <close_stdout@@Base+0x3d6c>
   164b4:	mov	r2, #0
   164b8:	ldr	r0, [fp, #-224]	; 0xffffff20
   164bc:	str	r2, [fp, #-200]	; 0xffffff38
   164c0:	mov	r5, r2
   164c4:	strb	r2, [fp, #-208]	; 0xffffff30
   164c8:	add	sl, r3, #16
   164cc:	str	r2, [fp, #-204]	; 0xffffff34
   164d0:	add	r9, r0, r0, lsl #2
   164d4:	strb	r2, [fp, #-196]	; 0xffffff3c
   164d8:	sub	ip, fp, #204	; 0xcc
   164dc:	ldrb	r2, [fp, #-208]	; 0xffffff30
   164e0:	mov	r7, r4
   164e4:	add	r9, r3, r9, lsl #3
   164e8:	str	r4, [fp, #-192]	; 0xffffff40
   164ec:	cmp	r2, #0
   164f0:	sub	r1, fp, #180	; 0xb4
   164f4:	str	r9, [fp, #-220]	; 0xffffff24
   164f8:	mov	r4, #1
   164fc:	mov	r9, sl
   16500:	str	r1, [fp, #-216]	; 0xffffff28
   16504:	mov	sl, r7
   16508:	sub	r6, fp, #176	; 0xb0
   1650c:	mov	r7, ip
   16510:	bne	168e4 <close_stdout@@Base+0x41e8>
   16514:	ldr	r1, [pc, #2032]	; 16d0c <close_stdout@@Base+0x4610>
   16518:	ldrb	r2, [sl]
   1651c:	ldr	r0, [r8, r1]
   16520:	and	r1, r2, #31
   16524:	lsr	r2, r2, #5
   16528:	ldr	r2, [r0, r2, lsl #2]
   1652c:	lsr	r2, r2, r1
   16530:	tst	r2, #1
   16534:	beq	16948 <close_stdout@@Base+0x424c>
   16538:	str	r4, [fp, #-188]	; 0xffffff44
   1653c:	ldrb	r3, [sl]
   16540:	strb	r4, [fp, #-184]	; 0xffffff48
   16544:	mov	sl, r3
   16548:	str	r3, [fp, #-180]	; 0xffffff4c
   1654c:	cmp	sl, #0
   16550:	strb	r4, [fp, #-196]	; 0xffffff3c
   16554:	mov	r2, #1
   16558:	bne	16894 <close_stdout@@Base+0x4198>
   1655c:	ldr	r0, [fp, #-224]	; 0xffffff20
   16560:	ldr	r9, [fp, #-220]	; 0xffffff24
   16564:	cmp	r0, #2
   16568:	str	r2, [r9, #4]
   1656c:	bls	16638 <close_stdout@@Base+0x3f3c>
   16570:	ldr	r7, [fp, #-236]	; 0xffffff14
   16574:	mov	r6, r9
   16578:	str	r8, [fp, #-216]	; 0xffffff28
   1657c:	mov	r4, sl
   16580:	mov	r8, r9
   16584:	mov	r5, #2
   16588:	mov	r9, r7
   1658c:	ldrb	sl, [r7, #48]	; 0x30
   16590:	b	165cc <close_stdout@@Base+0x3ed0>
   16594:	ldrb	r2, [r3, #8]
   16598:	cmp	r2, #0
   1659c:	beq	165dc <close_stdout@@Base+0x3ee0>
   165a0:	ldr	r0, [r7, #52]	; 0x34
   165a4:	ldr	r3, [r3, #12]
   165a8:	subs	r1, r0, r3
   165ac:	rsbs	r0, r1, #0
   165b0:	adcs	r0, r0, r1
   165b4:	cmp	r0, #0
   165b8:	bne	1660c <close_stdout@@Base+0x3f10>
   165bc:	cmp	r4, #0
   165c0:	beq	16b20 <close_stdout@@Base+0x4424>
   165c4:	ldr	r3, [r8, r4, lsl #2]
   165c8:	rsb	r4, r3, r4
   165cc:	add	r3, r4, r4, lsl #2
   165d0:	cmp	sl, #0
   165d4:	add	r3, r9, r3, lsl #3
   165d8:	bne	16594 <close_stdout@@Base+0x3e98>
   165dc:	ldr	r2, [r7, #44]	; 0x2c
   165e0:	ldr	r1, [r3, #4]
   165e4:	cmp	r2, r1
   165e8:	movne	r0, #0
   165ec:	bne	165b4 <close_stdout@@Base+0x3eb8>
   165f0:	ldr	r1, [r3]
   165f4:	ldr	r0, [r7, #40]	; 0x28
   165f8:	bl	112a8 <memcmp@plt>
   165fc:	rsbs	r0, r0, #1
   16600:	movcc	r0, #0
   16604:	cmp	r0, #0
   16608:	beq	165bc <close_stdout@@Base+0x3ec0>
   1660c:	add	r4, r4, #1
   16610:	rsb	r2, r4, r5
   16614:	str	r2, [r6, #8]
   16618:	ldr	r2, [fp, #-224]	; 0xffffff20
   1661c:	add	r5, r5, #1
   16620:	add	r7, r7, #40	; 0x28
   16624:	add	r6, r6, #4
   16628:	cmp	r5, r2
   1662c:	bne	1658c <close_stdout@@Base+0x3e90>
   16630:	mov	r9, r8
   16634:	ldr	r8, [fp, #-216]	; 0xffffff28
   16638:	ldr	r1, [fp, #-232]	; 0xffffff18
   1663c:	mov	r3, #0
   16640:	ldr	r2, [fp, #-248]	; 0xffffff08
   16644:	sub	r7, fp, #148	; 0x94
   16648:	mov	r4, r3
   1664c:	mov	r6, r3
   16650:	mov	r5, #1
   16654:	sub	r0, fp, #92	; 0x5c
   16658:	str	r1, [fp, #-136]	; 0xffffff78
   1665c:	str	r0, [fp, #-228]	; 0xffffff1c
   16660:	sub	r0, fp, #68	; 0x44
   16664:	str	r1, [fp, #-80]	; 0xffffffb0
   16668:	sub	r1, fp, #124	; 0x7c
   1666c:	str	r3, [fp, #-148]	; 0xffffff6c
   16670:	strb	r3, [fp, #-140]	; 0xffffff74
   16674:	str	r3, [fp, #-220]	; 0xffffff24
   16678:	str	r3, [r2]
   1667c:	strb	r3, [fp, #-152]	; 0xffffff68
   16680:	str	r0, [fp, #-232]	; 0xffffff18
   16684:	str	r1, [fp, #-216]	; 0xffffff28
   16688:	strb	r3, [fp, #-96]	; 0xffffffa0
   1668c:	str	r3, [fp, #-92]	; 0xffffffa4
   16690:	strb	r3, [fp, #-84]	; 0xffffffac
   16694:	str	r3, [r7, #4]
   16698:	str	r3, [fp, #-88]	; 0xffffffa8
   1669c:	str	r9, [fp, #-240]	; 0xffffff10
   166a0:	cmp	r4, #0
   166a4:	beq	16714 <close_stdout@@Base+0x4018>
   166a8:	ldrb	r4, [fp, #-72]	; 0xffffffb8
   166ac:	cmp	r4, #0
   166b0:	bne	16768 <close_stdout@@Base+0x406c>
   166b4:	ldr	r2, [fp, #-220]	; 0xffffff24
   166b8:	ldr	r3, [fp, #-236]	; 0xffffff14
   166bc:	add	r1, r2, r2, lsl #2
   166c0:	add	r1, r3, r1, lsl #3
   166c4:	ldr	r2, [r1, #4]
   166c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   166cc:	cmp	r2, r3
   166d0:	movne	r0, #0
   166d4:	beq	16b08 <close_stdout@@Base+0x440c>
   166d8:	mov	r3, r0
   166dc:	cmp	r3, #0
   166e0:	ldr	r2, [fp, #-220]	; 0xffffff24
   166e4:	beq	167ac <close_stdout@@Base+0x40b0>
   166e8:	ldr	r0, [fp, #-224]	; 0xffffff20
   166ec:	add	r2, r2, #1
   166f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   166f4:	str	r2, [fp, #-220]	; 0xffffff24
   166f8:	cmp	r0, r2
   166fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16700:	strb	r6, [fp, #-84]	; 0xffffffac
   16704:	add	r3, r3, r2
   16708:	str	r3, [fp, #-80]	; 0xffffffb0
   1670c:	beq	16c90 <close_stdout@@Base+0x4594>
   16710:	mov	r4, #0
   16714:	ldrb	r3, [fp, #-96]	; 0xffffffa0
   16718:	cmp	r3, #0
   1671c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16720:	bne	16a28 <close_stdout@@Base+0x432c>
   16724:	ldr	r1, [pc, #1504]	; 16d0c <close_stdout@@Base+0x4610>
   16728:	ldrb	r2, [r3]
   1672c:	ldr	r0, [r8, r1]
   16730:	and	r1, r2, #31
   16734:	lsr	r2, r2, #5
   16738:	ldr	r2, [r0, r2, lsl #2]
   1673c:	lsr	r2, r2, r1
   16740:	tst	r2, #1
   16744:	beq	16a0c <close_stdout@@Base+0x4310>
   16748:	str	r5, [fp, #-76]	; 0xffffffb4
   1674c:	mov	r4, #1
   16750:	ldrb	r3, [r3]
   16754:	strb	r5, [fp, #-72]	; 0xffffffb8
   16758:	str	r3, [fp, #-68]	; 0xffffffbc
   1675c:	cmp	r4, #0
   16760:	strb	r5, [fp, #-84]	; 0xffffffac
   16764:	beq	166b4 <close_stdout@@Base+0x3fb8>
   16768:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1676c:	cmp	r2, #0
   16770:	beq	16c9c <close_stdout@@Base+0x45a0>
   16774:	ldr	r3, [fp, #-220]	; 0xffffff24
   16778:	ldr	r0, [fp, #-236]	; 0xffffff14
   1677c:	add	r1, r3, r3, lsl #2
   16780:	add	r1, r0, r1, lsl #3
   16784:	ldrb	r3, [r1, #8]
   16788:	cmp	r3, #0
   1678c:	beq	166c4 <close_stdout@@Base+0x3fc8>
   16790:	ldr	r3, [r1, #12]
   16794:	subs	r2, r2, r3
   16798:	rsbs	r3, r2, #0
   1679c:	adcs	r3, r3, r2
   167a0:	ldr	r2, [fp, #-220]	; 0xffffff24
   167a4:	cmp	r3, #0
   167a8:	bne	166e8 <close_stdout@@Base+0x3fec>
   167ac:	cmp	r2, #0
   167b0:	beq	16ab8 <close_stdout@@Base+0x43bc>
   167b4:	ldr	r3, [fp, #-240]	; 0xffffff10
   167b8:	ldr	r4, [r3, r2, lsl #2]
   167bc:	cmp	r4, #0
   167c0:	rsb	r2, r4, r2
   167c4:	str	r2, [fp, #-220]	; 0xffffff24
   167c8:	beq	16b00 <close_stdout@@Base+0x4404>
   167cc:	ldrb	sl, [fp, #-140]	; 0xffffff74
   167d0:	cmp	sl, #0
   167d4:	beq	16804 <close_stdout@@Base+0x4108>
   167d8:	ldrb	sl, [fp, #-128]	; 0xffffff80
   167dc:	cmp	sl, #0
   167e0:	bne	16858 <close_stdout@@Base+0x415c>
   167e4:	ldr	r2, [fp, #-136]	; 0xffffff78
   167e8:	subs	r4, r4, #1
   167ec:	ldr	r3, [fp, #-132]	; 0xffffff7c
   167f0:	strb	r6, [fp, #-140]	; 0xffffff74
   167f4:	movne	sl, #0
   167f8:	add	r3, r2, r3
   167fc:	str	r3, [fp, #-136]	; 0xffffff78
   16800:	beq	16b00 <close_stdout@@Base+0x4404>
   16804:	ldrb	r3, [fp, #-152]	; 0xffffff68
   16808:	ldr	r9, [fp, #-136]	; 0xffffff78
   1680c:	cmp	r3, #0
   16810:	bne	16974 <close_stdout@@Base+0x4278>
   16814:	ldr	r1, [pc, #1264]	; 16d0c <close_stdout@@Base+0x4610>
   16818:	ldrb	r2, [r9]
   1681c:	ldr	r0, [r8, r1]
   16820:	and	r1, r2, #31
   16824:	lsr	r2, r2, #5
   16828:	ldr	r2, [r0, r2, lsl #2]
   1682c:	lsr	r2, r2, r1
   16830:	tst	r2, #1
   16834:	beq	16960 <close_stdout@@Base+0x4264>
   16838:	str	r5, [fp, #-132]	; 0xffffff7c
   1683c:	mov	sl, #1
   16840:	ldrb	r3, [r9]
   16844:	strb	r5, [fp, #-128]	; 0xffffff80
   16848:	str	r3, [fp, #-124]	; 0xffffff84
   1684c:	cmp	sl, #0
   16850:	strb	r5, [fp, #-140]	; 0xffffff74
   16854:	beq	167e4 <close_stdout@@Base+0x40e8>
   16858:	ldr	r3, [fp, #-124]	; 0xffffff84
   1685c:	cmp	r3, #0
   16860:	bne	167e4 <close_stdout@@Base+0x40e8>
   16864:	bl	11524 <abort@plt>
   16868:	add	r3, r0, #22
   1686c:	bic	r3, r3, #7
   16870:	sub	sp, sp, r3
   16874:	add	r2, sp, #8
   16878:	str	r2, [fp, #-236]	; 0xffffff14
   1687c:	b	164a8 <close_stdout@@Base+0x3dac>
   16880:	ldr	r0, [fp, #-192]	; 0xffffff40
   16884:	bl	113f8 <strlen@plt>
   16888:	strb	r5, [fp, #-184]	; 0xffffff48
   1688c:	str	r0, [fp, #-188]	; 0xffffff44
   16890:	strb	r4, [fp, #-196]	; 0xffffff3c
   16894:	ldr	r3, [fp, #-192]	; 0xffffff40
   16898:	cmp	r3, r6
   1689c:	strne	r3, [r9, #-16]
   168a0:	beq	16bcc <close_stdout@@Base+0x44d0>
   168a4:	ldr	r3, [fp, #-188]	; 0xffffff44
   168a8:	add	r9, r9, #40	; 0x28
   168ac:	str	r3, [r9, #-52]	; 0xffffffcc
   168b0:	ldrb	r3, [fp, #-184]	; 0xffffff48
   168b4:	cmp	r3, #0
   168b8:	strb	r3, [r9, #-48]	; 0xffffffd0
   168bc:	ldrne	r3, [fp, #-180]	; 0xffffff4c
   168c0:	strne	r3, [r9, #-44]	; 0xffffffd4
   168c4:	ldr	sl, [fp, #-192]	; 0xffffff40
   168c8:	ldr	r2, [fp, #-188]	; 0xffffff44
   168cc:	strb	r5, [fp, #-196]	; 0xffffff3c
   168d0:	add	sl, sl, r2
   168d4:	ldrb	r2, [fp, #-208]	; 0xffffff30
   168d8:	str	sl, [fp, #-192]	; 0xffffff40
   168dc:	cmp	r2, #0
   168e0:	beq	16514 <close_stdout@@Base+0x3e18>
   168e4:	bl	11338 <__ctype_get_mb_cur_max@plt>
   168e8:	mov	r1, r0
   168ec:	mov	r0, sl
   168f0:	bl	14e4c <close_stdout@@Base+0x2750>
   168f4:	mov	r1, sl
   168f8:	mov	r3, r7
   168fc:	mov	r2, r0
   16900:	sub	r0, fp, #180	; 0xb4
   16904:	bl	1135c <mbrtowc@plt>
   16908:	cmn	r0, #1
   1690c:	str	r0, [fp, #-188]	; 0xffffff44
   16910:	strbeq	r5, [fp, #-184]	; 0xffffff48
   16914:	streq	r4, [fp, #-188]	; 0xffffff44
   16918:	beq	16890 <close_stdout@@Base+0x4194>
   1691c:	cmn	r0, #2
   16920:	beq	16880 <close_stdout@@Base+0x4184>
   16924:	cmp	r0, #0
   16928:	beq	16b28 <close_stdout@@Base+0x442c>
   1692c:	ldr	sl, [fp, #-180]	; 0xffffff4c
   16930:	mov	r0, r7
   16934:	strb	r4, [fp, #-184]	; 0xffffff48
   16938:	bl	1129c <mbsinit@plt>
   1693c:	cmp	r0, #0
   16940:	strbne	r5, [fp, #-208]	; 0xffffff30
   16944:	b	1654c <close_stdout@@Base+0x3e50>
   16948:	mov	r0, r7
   1694c:	bl	1129c <mbsinit@plt>
   16950:	cmp	r0, #0
   16954:	beq	16cc0 <close_stdout@@Base+0x45c4>
   16958:	strb	r4, [fp, #-208]	; 0xffffff30
   1695c:	b	168e4 <close_stdout@@Base+0x41e8>
   16960:	mov	r0, r7
   16964:	bl	1129c <mbsinit@plt>
   16968:	cmp	r0, #0
   1696c:	beq	16cc0 <close_stdout@@Base+0x45c4>
   16970:	strb	r5, [fp, #-152]	; 0xffffff68
   16974:	bl	11338 <__ctype_get_mb_cur_max@plt>
   16978:	mov	r1, r0
   1697c:	mov	r0, r9
   16980:	bl	14e4c <close_stdout@@Base+0x2750>
   16984:	mov	r1, r9
   16988:	mov	r3, r7
   1698c:	mov	r2, r0
   16990:	sub	r0, fp, #124	; 0x7c
   16994:	bl	1135c <mbrtowc@plt>
   16998:	cmn	r0, #1
   1699c:	str	r0, [fp, #-132]	; 0xffffff7c
   169a0:	strbeq	r6, [fp, #-128]	; 0xffffff80
   169a4:	streq	r5, [fp, #-132]	; 0xffffff7c
   169a8:	beq	1684c <close_stdout@@Base+0x4150>
   169ac:	cmn	r0, #2
   169b0:	beq	169f8 <close_stdout@@Base+0x42fc>
   169b4:	cmp	r0, #0
   169b8:	bne	169dc <close_stdout@@Base+0x42e0>
   169bc:	ldr	r3, [fp, #-136]	; 0xffffff78
   169c0:	str	r5, [fp, #-132]	; 0xffffff7c
   169c4:	ldrb	r3, [r3]
   169c8:	cmp	r3, #0
   169cc:	bne	16ce4 <close_stdout@@Base+0x45e8>
   169d0:	ldr	r3, [fp, #-124]	; 0xffffff84
   169d4:	cmp	r3, #0
   169d8:	bne	16b48 <close_stdout@@Base+0x444c>
   169dc:	mov	r0, r7
   169e0:	strb	r5, [fp, #-128]	; 0xffffff80
   169e4:	bl	1129c <mbsinit@plt>
   169e8:	mov	sl, #1
   169ec:	cmp	r0, #0
   169f0:	strbne	r6, [fp, #-152]	; 0xffffff68
   169f4:	b	1684c <close_stdout@@Base+0x4150>
   169f8:	ldr	r0, [fp, #-136]	; 0xffffff78
   169fc:	bl	113f8 <strlen@plt>
   16a00:	strb	r6, [fp, #-128]	; 0xffffff80
   16a04:	str	r0, [fp, #-132]	; 0xffffff7c
   16a08:	b	1684c <close_stdout@@Base+0x4150>
   16a0c:	sub	r0, fp, #92	; 0x5c
   16a10:	str	r3, [fp, #-252]	; 0xffffff04
   16a14:	bl	1129c <mbsinit@plt>
   16a18:	ldr	r3, [fp, #-252]	; 0xffffff04
   16a1c:	cmp	r0, #0
   16a20:	beq	16cc0 <close_stdout@@Base+0x45c4>
   16a24:	strb	r5, [fp, #-96]	; 0xffffffa0
   16a28:	str	r3, [fp, #-252]	; 0xffffff04
   16a2c:	bl	11338 <__ctype_get_mb_cur_max@plt>
   16a30:	ldr	r3, [fp, #-252]	; 0xffffff04
   16a34:	mov	r1, r0
   16a38:	mov	r0, r3
   16a3c:	bl	14e4c <close_stdout@@Base+0x2750>
   16a40:	ldr	r3, [fp, #-252]	; 0xffffff04
   16a44:	mov	r1, r3
   16a48:	sub	r3, fp, #92	; 0x5c
   16a4c:	mov	r2, r0
   16a50:	sub	r0, fp, #68	; 0x44
   16a54:	bl	1135c <mbrtowc@plt>
   16a58:	cmn	r0, #1
   16a5c:	str	r0, [fp, #-76]	; 0xffffffb4
   16a60:	strbeq	r6, [fp, #-72]	; 0xffffffb8
   16a64:	streq	r5, [fp, #-76]	; 0xffffffb4
   16a68:	beq	1675c <close_stdout@@Base+0x4060>
   16a6c:	cmn	r0, #2
   16a70:	beq	16c7c <close_stdout@@Base+0x4580>
   16a74:	cmp	r0, #0
   16a78:	bne	16a9c <close_stdout@@Base+0x43a0>
   16a7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16a80:	str	r5, [fp, #-76]	; 0xffffffb4
   16a84:	ldrb	r3, [r3]
   16a88:	cmp	r3, #0
   16a8c:	bne	16ce4 <close_stdout@@Base+0x45e8>
   16a90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16a94:	cmp	r3, #0
   16a98:	bne	16b48 <close_stdout@@Base+0x444c>
   16a9c:	sub	r0, fp, #92	; 0x5c
   16aa0:	strb	r5, [fp, #-72]	; 0xffffffb8
   16aa4:	bl	1129c <mbsinit@plt>
   16aa8:	mov	r4, #1
   16aac:	cmp	r0, #0
   16ab0:	strbne	r6, [fp, #-96]	; 0xffffffa0
   16ab4:	b	1675c <close_stdout@@Base+0x4060>
   16ab8:	ldrb	r4, [fp, #-140]	; 0xffffff74
   16abc:	cmp	r4, #0
   16ac0:	beq	16b68 <close_stdout@@Base+0x446c>
   16ac4:	ldrb	r4, [fp, #-128]	; 0xffffff80
   16ac8:	cmp	r4, #0
   16acc:	bne	16bbc <close_stdout@@Base+0x44c0>
   16ad0:	ldr	r1, [fp, #-136]	; 0xffffff78
   16ad4:	mov	r4, #0
   16ad8:	ldr	r2, [fp, #-132]	; 0xffffff7c
   16adc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16ae0:	add	r2, r1, r2
   16ae4:	str	r2, [fp, #-136]	; 0xffffff78
   16ae8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16aec:	strb	r6, [fp, #-140]	; 0xffffff74
   16af0:	add	r3, r3, r2
   16af4:	strb	r6, [fp, #-84]	; 0xffffffac
   16af8:	str	r3, [fp, #-80]	; 0xffffffb0
   16afc:	b	16714 <close_stdout@@Base+0x4018>
   16b00:	ldrb	r4, [fp, #-84]	; 0xffffffac
   16b04:	b	166a0 <close_stdout@@Base+0x3fa4>
   16b08:	ldr	r0, [r1]
   16b0c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   16b10:	bl	112a8 <memcmp@plt>
   16b14:	rsbs	r0, r0, #1
   16b18:	movcc	r0, #0
   16b1c:	b	166d8 <close_stdout@@Base+0x3fdc>
   16b20:	str	r5, [r6, #8]
   16b24:	b	16618 <close_stdout@@Base+0x3f1c>
   16b28:	ldr	r3, [fp, #-192]	; 0xffffff40
   16b2c:	str	r4, [fp, #-188]	; 0xffffff44
   16b30:	ldrb	r3, [r3]
   16b34:	cmp	r3, #0
   16b38:	bne	16ce4 <close_stdout@@Base+0x45e8>
   16b3c:	ldr	sl, [fp, #-180]	; 0xffffff4c
   16b40:	cmp	sl, #0
   16b44:	beq	16930 <close_stdout@@Base+0x4234>
   16b48:	ldr	r0, [pc, #448]	; 16d10 <close_stdout@@Base+0x4614>
   16b4c:	mov	r2, #179	; 0xb3
   16b50:	ldr	r1, [pc, #444]	; 16d14 <close_stdout@@Base+0x4618>
   16b54:	ldr	r3, [pc, #444]	; 16d18 <close_stdout@@Base+0x461c>
   16b58:	add	r0, pc, r0
   16b5c:	add	r1, pc, r1
   16b60:	add	r3, pc, r3
   16b64:	bl	1153c <__assert_fail@plt>
   16b68:	ldrb	r3, [fp, #-152]	; 0xffffff68
   16b6c:	ldr	sl, [fp, #-136]	; 0xffffff78
   16b70:	cmp	r3, #0
   16b74:	bne	16bf8 <close_stdout@@Base+0x44fc>
   16b78:	ldr	r1, [pc, #396]	; 16d0c <close_stdout@@Base+0x4610>
   16b7c:	ldrb	r2, [sl]
   16b80:	ldr	r0, [r8, r1]
   16b84:	and	r1, r2, #31
   16b88:	lsr	r2, r2, #5
   16b8c:	ldr	r2, [r0, r2, lsl #2]
   16b90:	lsr	r2, r2, r1
   16b94:	tst	r2, #1
   16b98:	beq	16be4 <close_stdout@@Base+0x44e8>
   16b9c:	str	r5, [fp, #-132]	; 0xffffff7c
   16ba0:	mov	r4, #1
   16ba4:	ldrb	r3, [sl]
   16ba8:	strb	r5, [fp, #-128]	; 0xffffff80
   16bac:	str	r3, [fp, #-124]	; 0xffffff84
   16bb0:	cmp	r4, #0
   16bb4:	strb	r5, [fp, #-140]	; 0xffffff74
   16bb8:	beq	16ad0 <close_stdout@@Base+0x43d4>
   16bbc:	ldr	r3, [fp, #-124]	; 0xffffff84
   16bc0:	cmp	r3, #0
   16bc4:	bne	16ad0 <close_stdout@@Base+0x43d4>
   16bc8:	b	16864 <close_stdout@@Base+0x4168>
   16bcc:	mov	r0, r9
   16bd0:	mov	r1, r6
   16bd4:	ldr	r2, [fp, #-188]	; 0xffffff44
   16bd8:	bl	11290 <memcpy@plt>
   16bdc:	str	r9, [r9, #-16]
   16be0:	b	168a4 <close_stdout@@Base+0x41a8>
   16be4:	mov	r0, r7
   16be8:	bl	1129c <mbsinit@plt>
   16bec:	cmp	r0, #0
   16bf0:	beq	16cc0 <close_stdout@@Base+0x45c4>
   16bf4:	strb	r5, [fp, #-152]	; 0xffffff68
   16bf8:	bl	11338 <__ctype_get_mb_cur_max@plt>
   16bfc:	mov	r1, r0
   16c00:	mov	r0, sl
   16c04:	bl	14e4c <close_stdout@@Base+0x2750>
   16c08:	mov	r1, sl
   16c0c:	mov	r3, r7
   16c10:	mov	r2, r0
   16c14:	sub	r0, fp, #124	; 0x7c
   16c18:	bl	1135c <mbrtowc@plt>
   16c1c:	cmn	r0, #1
   16c20:	str	r0, [fp, #-132]	; 0xffffff7c
   16c24:	strbeq	r6, [fp, #-128]	; 0xffffff80
   16c28:	streq	r5, [fp, #-132]	; 0xffffff7c
   16c2c:	beq	16bb0 <close_stdout@@Base+0x44b4>
   16c30:	cmn	r0, #2
   16c34:	beq	16cac <close_stdout@@Base+0x45b0>
   16c38:	cmp	r0, #0
   16c3c:	bne	16c60 <close_stdout@@Base+0x4564>
   16c40:	ldr	r3, [fp, #-136]	; 0xffffff78
   16c44:	str	r5, [fp, #-132]	; 0xffffff7c
   16c48:	ldrb	r3, [r3]
   16c4c:	cmp	r3, #0
   16c50:	bne	16ce4 <close_stdout@@Base+0x45e8>
   16c54:	ldr	r3, [fp, #-124]	; 0xffffff84
   16c58:	cmp	r3, #0
   16c5c:	bne	16b48 <close_stdout@@Base+0x444c>
   16c60:	mov	r0, r7
   16c64:	strb	r5, [fp, #-128]	; 0xffffff80
   16c68:	bl	1129c <mbsinit@plt>
   16c6c:	mov	r4, #1
   16c70:	cmp	r0, #0
   16c74:	strbne	r6, [fp, #-152]	; 0xffffff68
   16c78:	b	16bb0 <close_stdout@@Base+0x44b4>
   16c7c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   16c80:	bl	113f8 <strlen@plt>
   16c84:	strb	r6, [fp, #-72]	; 0xffffffb8
   16c88:	str	r0, [fp, #-76]	; 0xffffffb4
   16c8c:	b	1675c <close_stdout@@Base+0x4060>
   16c90:	ldr	r3, [fp, #-136]	; 0xffffff78
   16c94:	ldr	r1, [fp, #-248]	; 0xffffff08
   16c98:	str	r3, [r1]
   16c9c:	ldr	r0, [fp, #-236]	; 0xffffff14
   16ca0:	bl	18260 <close_stdout@@Base+0x5b64>
   16ca4:	mov	r0, #1
   16ca8:	b	1646c <close_stdout@@Base+0x3d70>
   16cac:	ldr	r0, [fp, #-136]	; 0xffffff78
   16cb0:	bl	113f8 <strlen@plt>
   16cb4:	strb	r6, [fp, #-128]	; 0xffffff80
   16cb8:	str	r0, [fp, #-132]	; 0xffffff7c
   16cbc:	b	16bb0 <close_stdout@@Base+0x44b4>
   16cc0:	ldr	r0, [pc, #84]	; 16d1c <close_stdout@@Base+0x4620>
   16cc4:	mov	r2, #150	; 0x96
   16cc8:	ldr	r1, [pc, #80]	; 16d20 <close_stdout@@Base+0x4624>
   16ccc:	ldr	r3, [pc, #80]	; 16d24 <close_stdout@@Base+0x4628>
   16cd0:	add	r0, pc, r0
   16cd4:	add	r1, pc, r1
   16cd8:	add	r3, pc, r3
   16cdc:	bl	1153c <__assert_fail@plt>
   16ce0:	bl	112cc <__stack_chk_fail@plt>
   16ce4:	ldr	r0, [pc, #60]	; 16d28 <close_stdout@@Base+0x462c>
   16ce8:	mov	r2, #178	; 0xb2
   16cec:	ldr	r1, [pc, #56]	; 16d2c <close_stdout@@Base+0x4630>
   16cf0:	ldr	r3, [pc, #56]	; 16d30 <close_stdout@@Base+0x4634>
   16cf4:	add	r0, pc, r0
   16cf8:	add	r1, pc, r1
   16cfc:	add	r3, pc, r3
   16d00:	bl	1153c <__assert_fail@plt>
   16d04:	andeq	r3, r1, ip, asr #23
   16d08:	andeq	r0, r0, r4, lsr r1
   16d0c:	andeq	r0, r0, r0, lsr r1
   16d10:	andeq	r2, r0, r4, lsr r3
   16d14:	andeq	r2, r0, r8, lsl #6
   16d18:	andeq	r2, r0, ip, lsl #15
   16d1c:	andeq	r2, r0, ip, ror r1
   16d20:	muleq	r0, r0, r1
   16d24:	andeq	r2, r0, r4, lsl r6
   16d28:	andeq	r2, r0, r0, lsl #3
   16d2c:	andeq	r2, r0, ip, ror #2
   16d30:	strdeq	r2, [r0], -r0
   16d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d38:	sub	sp, sp, #348	; 0x15c
   16d3c:	ldr	r4, [pc, #3188]	; 179b8 <close_stdout@@Base+0x52bc>
   16d40:	ldr	r3, [pc, #3188]	; 179bc <close_stdout@@Base+0x52c0>
   16d44:	add	r4, pc, r4
   16d48:	str	r0, [sp, #16]
   16d4c:	str	r1, [sp, #4]
   16d50:	ldr	r3, [r4, r3]
   16d54:	str	r3, [sp, #20]
   16d58:	ldr	r3, [r3]
   16d5c:	str	r3, [sp, #340]	; 0x154
   16d60:	bl	11338 <__ctype_get_mb_cur_max@plt>
   16d64:	cmp	r0, #1
   16d68:	bls	16f4c <close_stdout@@Base+0x4850>
   16d6c:	ldr	r0, [sp, #4]
   16d70:	add	r5, sp, #64	; 0x40
   16d74:	ldr	ip, [pc, #3140]	; 179c0 <close_stdout@@Base+0x52c4>
   16d78:	mov	r2, #0
   16d7c:	str	r2, [r5, #4]
   16d80:	ldrb	r1, [r0]
   16d84:	str	r0, [sp, #76]	; 0x4c
   16d88:	strb	r2, [sp, #60]	; 0x3c
   16d8c:	and	r3, r1, #31
   16d90:	str	r2, [sp, #64]	; 0x40
   16d94:	lsr	r0, r1, #5
   16d98:	strb	r2, [sp, #72]	; 0x48
   16d9c:	ldr	r6, [r4, ip]
   16da0:	ldr	r2, [r6, r0, lsl #2]
   16da4:	lsr	r3, r2, r3
   16da8:	ands	r4, r3, #1
   16dac:	beq	16e9c <close_stdout@@Base+0x47a0>
   16db0:	mov	r4, r1
   16db4:	cmp	r4, #0
   16db8:	mov	r3, #1
   16dbc:	str	r1, [sp, #88]	; 0x58
   16dc0:	str	r3, [sp, #80]	; 0x50
   16dc4:	strb	r3, [sp, #84]	; 0x54
   16dc8:	mov	r3, #1
   16dcc:	strb	r3, [sp, #72]	; 0x48
   16dd0:	beq	16f2c <close_stdout@@Base+0x4830>
   16dd4:	add	r2, sp, #120	; 0x78
   16dd8:	add	r0, sp, #176	; 0xb0
   16ddc:	str	r2, [sp, #8]
   16de0:	mov	r3, #0
   16de4:	ldr	r2, [sp, #4]
   16de8:	mov	r9, r3
   16dec:	str	r0, [sp, #44]	; 0x2c
   16df0:	mov	r5, r3
   16df4:	ldr	r0, [sp, #16]
   16df8:	mov	r4, #1
   16dfc:	mov	r1, #1
   16e00:	str	r2, [sp, #132]	; 0x84
   16e04:	str	r1, [sp, #32]
   16e08:	add	r2, sp, #200	; 0xc8
   16e0c:	str	r0, [sp, #188]	; 0xbc
   16e10:	mov	r8, r0
   16e14:	add	r1, sp, #144	; 0x90
   16e18:	add	r0, sp, #56	; 0x38
   16e1c:	str	r3, [sp, #28]
   16e20:	strb	r3, [sp, #116]	; 0x74
   16e24:	str	r3, [sp, #12]
   16e28:	str	r3, [sp, #120]	; 0x78
   16e2c:	strb	r3, [sp, #128]	; 0x80
   16e30:	strb	r3, [sp, #172]	; 0xac
   16e34:	str	r3, [sp, #176]	; 0xb0
   16e38:	str	r2, [sp, #48]	; 0x30
   16e3c:	strb	r3, [sp, #184]	; 0xb8
   16e40:	str	r0, [sp, #52]	; 0x34
   16e44:	str	r3, [sp, #124]	; 0x7c
   16e48:	str	r1, [sp, #24]
   16e4c:	str	r3, [sp, #180]	; 0xb4
   16e50:	ldrb	r3, [sp, #172]	; 0xac
   16e54:	cmp	r3, #0
   16e58:	bne	170b4 <close_stdout@@Base+0x49b8>
   16e5c:	ldrb	r3, [r8]
   16e60:	and	r2, r3, #31
   16e64:	lsr	r3, r3, #5
   16e68:	ldr	r3, [r6, r3, lsl #2]
   16e6c:	lsr	r3, r3, r2
   16e70:	tst	r3, #1
   16e74:	beq	170a0 <close_stdout@@Base+0x49a4>
   16e78:	str	r4, [sp, #192]	; 0xc0
   16e7c:	ldrb	r7, [r8]
   16e80:	strb	r4, [sp, #196]	; 0xc4
   16e84:	cmp	r7, #0
   16e88:	strb	r4, [sp, #184]	; 0xb8
   16e8c:	str	r7, [sp, #200]	; 0xc8
   16e90:	bne	17120 <close_stdout@@Base+0x4a24>
   16e94:	mov	r0, r7
   16e98:	b	16f30 <close_stdout@@Base+0x4834>
   16e9c:	mov	r0, r5
   16ea0:	bl	1129c <mbsinit@plt>
   16ea4:	cmp	r0, #0
   16ea8:	beq	17974 <close_stdout@@Base+0x5278>
   16eac:	mov	r7, #1
   16eb0:	strb	r7, [sp, #60]	; 0x3c
   16eb4:	bl	11338 <__ctype_get_mb_cur_max@plt>
   16eb8:	mov	r1, r0
   16ebc:	ldr	r0, [sp, #4]
   16ec0:	bl	14e4c <close_stdout@@Base+0x2750>
   16ec4:	ldr	r1, [sp, #4]
   16ec8:	mov	r3, r5
   16ecc:	mov	r2, r0
   16ed0:	add	r0, sp, #88	; 0x58
   16ed4:	bl	1135c <mbrtowc@plt>
   16ed8:	cmn	r0, #1
   16edc:	str	r0, [sp, #80]	; 0x50
   16ee0:	strbeq	r4, [sp, #84]	; 0x54
   16ee4:	streq	r7, [sp, #80]	; 0x50
   16ee8:	beq	17138 <close_stdout@@Base+0x4a3c>
   16eec:	cmn	r0, #2
   16ef0:	beq	17128 <close_stdout@@Base+0x4a2c>
   16ef4:	cmp	r0, #0
   16ef8:	beq	178b0 <close_stdout@@Base+0x51b4>
   16efc:	ldr	r4, [sp, #88]	; 0x58
   16f00:	mov	r0, r5
   16f04:	mov	r3, #1
   16f08:	strb	r3, [sp, #84]	; 0x54
   16f0c:	bl	1129c <mbsinit@plt>
   16f10:	cmp	r0, #0
   16f14:	movne	r3, #0
   16f18:	strbne	r3, [sp, #60]	; 0x3c
   16f1c:	cmp	r4, #0
   16f20:	mov	r3, #1
   16f24:	strb	r3, [sp, #72]	; 0x48
   16f28:	bne	16dd4 <close_stdout@@Base+0x46d8>
   16f2c:	ldr	r0, [sp, #16]
   16f30:	ldr	r1, [sp, #20]
   16f34:	ldr	r2, [sp, #340]	; 0x154
   16f38:	ldr	r3, [r1]
   16f3c:	cmp	r2, r3
   16f40:	bne	17994 <close_stdout@@Base+0x5298>
   16f44:	add	sp, sp, #348	; 0x15c
   16f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f4c:	ldr	r2, [sp, #4]
   16f50:	ldrb	r8, [r2]
   16f54:	cmp	r8, #0
   16f58:	beq	16f2c <close_stdout@@Base+0x4830>
   16f5c:	ldr	r3, [sp, #16]
   16f60:	ldrb	sl, [r3]
   16f64:	cmp	sl, #0
   16f68:	beq	17428 <close_stdout@@Base+0x4d2c>
   16f6c:	cmp	sl, r8
   16f70:	mov	r4, #0
   16f74:	mov	r5, r4
   16f78:	mov	r9, r4
   16f7c:	add	r0, sp, #56	; 0x38
   16f80:	add	r7, r3, #1
   16f84:	mov	r6, r3
   16f88:	mov	fp, r2
   16f8c:	mov	r1, #1
   16f90:	str	r0, [sp, #8]
   16f94:	add	r4, r4, #1
   16f98:	beq	1703c <close_stdout@@Base+0x4940>
   16f9c:	ldrb	sl, [r6, #1]
   16fa0:	cmp	sl, #0
   16fa4:	beq	17428 <close_stdout@@Base+0x4d2c>
   16fa8:	add	r5, r5, #1
   16fac:	cmp	r4, #9
   16fb0:	movls	r3, #0
   16fb4:	andhi	r3, r1, #1
   16fb8:	cmp	r3, #0
   16fbc:	beq	17028 <close_stdout@@Base+0x492c>
   16fc0:	add	r3, r4, r4, lsl #2
   16fc4:	cmp	r5, r3
   16fc8:	bcc	17024 <close_stdout@@Base+0x4928>
   16fcc:	cmp	fp, #0
   16fd0:	beq	16ff0 <close_stdout@@Base+0x48f4>
   16fd4:	rsb	r1, r9, r5
   16fd8:	mov	r0, fp
   16fdc:	bl	114c4 <strnlen@plt>
   16fe0:	mov	r9, r5
   16fe4:	ldrb	r3, [fp, r0]!
   16fe8:	cmp	r3, #0
   16fec:	bne	17024 <close_stdout@@Base+0x4928>
   16ff0:	ldr	r0, [sp, #4]
   16ff4:	bl	113f8 <strlen@plt>
   16ff8:	ldr	r1, [sp, #4]
   16ffc:	add	r3, sp, #56	; 0x38
   17000:	mov	r2, r0
   17004:	mov	r0, r7
   17008:	bl	1628c <close_stdout@@Base+0x3b90>
   1700c:	cmp	r0, #0
   17010:	bne	1796c <close_stdout@@Base+0x5270>
   17014:	mov	fp, r0
   17018:	ldrb	sl, [r6, #1]
   1701c:	mov	r1, r0
   17020:	b	17028 <close_stdout@@Base+0x492c>
   17024:	mov	r1, #1
   17028:	cmp	sl, r8
   1702c:	add	r7, r7, #1
   17030:	add	r6, r6, #1
   17034:	add	r4, r4, #1
   17038:	bne	16f9c <close_stdout@@Base+0x48a0>
   1703c:	ldr	r2, [sp, #4]
   17040:	ldrb	r3, [r2, #1]
   17044:	cmp	r3, #0
   17048:	beq	17098 <close_stdout@@Base+0x499c>
   1704c:	ldrb	sl, [r6, #1]
   17050:	cmp	sl, #0
   17054:	beq	17428 <close_stdout@@Base+0x4d2c>
   17058:	cmp	r3, sl
   1705c:	add	r3, r5, #2
   17060:	bne	174c4 <close_stdout@@Base+0x4dc8>
   17064:	rsb	r0, r5, #0
   17068:	add	r5, r2, r0
   1706c:	add	r0, r6, r0
   17070:	b	1708c <close_stdout@@Base+0x4990>
   17074:	ldrb	ip, [r0, r3]
   17078:	cmp	ip, #0
   1707c:	beq	17428 <close_stdout@@Base+0x4d2c>
   17080:	cmp	r2, ip
   17084:	add	r3, r3, #1
   17088:	bne	174c4 <close_stdout@@Base+0x4dc8>
   1708c:	ldrb	r2, [r5, r3]
   17090:	cmp	r2, #0
   17094:	bne	17074 <close_stdout@@Base+0x4978>
   17098:	mov	r0, r6
   1709c:	b	16f30 <close_stdout@@Base+0x4834>
   170a0:	add	r0, sp, #176	; 0xb0
   170a4:	bl	1129c <mbsinit@plt>
   170a8:	cmp	r0, #0
   170ac:	beq	17974 <close_stdout@@Base+0x5278>
   170b0:	strb	r4, [sp, #172]	; 0xac
   170b4:	bl	11338 <__ctype_get_mb_cur_max@plt>
   170b8:	mov	r1, r0
   170bc:	mov	r0, r8
   170c0:	bl	14e4c <close_stdout@@Base+0x2750>
   170c4:	mov	r1, r8
   170c8:	add	r3, sp, #176	; 0xb0
   170cc:	mov	r2, r0
   170d0:	add	r0, sp, #200	; 0xc8
   170d4:	bl	1135c <mbrtowc@plt>
   170d8:	cmn	r0, #1
   170dc:	str	r0, [sp, #192]	; 0xc0
   170e0:	strbeq	r5, [sp, #196]	; 0xc4
   170e4:	streq	r4, [sp, #192]	; 0xc0
   170e8:	beq	17154 <close_stdout@@Base+0x4a58>
   170ec:	cmn	r0, #2
   170f0:	beq	17144 <close_stdout@@Base+0x4a48>
   170f4:	cmp	r0, #0
   170f8:	beq	1788c <close_stdout@@Base+0x5190>
   170fc:	ldr	r7, [sp, #200]	; 0xc8
   17100:	add	r0, sp, #176	; 0xb0
   17104:	strb	r4, [sp, #196]	; 0xc4
   17108:	bl	1129c <mbsinit@plt>
   1710c:	strb	r4, [sp, #184]	; 0xb8
   17110:	cmp	r0, #0
   17114:	strbne	r5, [sp, #172]	; 0xac
   17118:	cmp	r7, #0
   1711c:	beq	16e94 <close_stdout@@Base+0x4798>
   17120:	mov	r3, #1
   17124:	b	1715c <close_stdout@@Base+0x4a60>
   17128:	ldr	r0, [sp, #76]	; 0x4c
   1712c:	bl	113f8 <strlen@plt>
   17130:	strb	r4, [sp, #84]	; 0x54
   17134:	str	r0, [sp, #80]	; 0x50
   17138:	mov	r3, #1
   1713c:	strb	r3, [sp, #72]	; 0x48
   17140:	b	16dd4 <close_stdout@@Base+0x46d8>
   17144:	ldr	r0, [sp, #188]	; 0xbc
   17148:	bl	113f8 <strlen@plt>
   1714c:	strb	r5, [sp, #196]	; 0xc4
   17150:	str	r0, [sp, #192]	; 0xc0
   17154:	mov	r3, #0
   17158:	strb	r4, [sp, #184]	; 0xb8
   1715c:	ldr	r8, [sp, #32]
   17160:	ldr	r2, [sp, #12]
   17164:	cmp	r2, #9
   17168:	movls	r8, #0
   1716c:	andhi	r8, r8, #1
   17170:	cmp	r8, #0
   17174:	beq	1724c <close_stdout@@Base+0x4b50>
   17178:	ldr	r1, [sp, #12]
   1717c:	add	r2, r1, r1, lsl #2
   17180:	cmp	r9, r2
   17184:	bcc	1741c <close_stdout@@Base+0x4d20>
   17188:	ldr	r2, [sp, #28]
   1718c:	subs	r7, r9, r2
   17190:	beq	17224 <close_stdout@@Base+0x4b28>
   17194:	ldrb	sl, [sp, #128]	; 0x80
   17198:	cmp	sl, #0
   1719c:	beq	171cc <close_stdout@@Base+0x4ad0>
   171a0:	ldrb	sl, [sp, #140]	; 0x8c
   171a4:	cmp	sl, #0
   171a8:	bne	17218 <close_stdout@@Base+0x4b1c>
   171ac:	ldr	sl, [sp, #132]	; 0x84
   171b0:	subs	r7, r7, #1
   171b4:	ldr	r3, [sp, #136]	; 0x88
   171b8:	strb	r5, [sp, #128]	; 0x80
   171bc:	add	sl, sl, r3
   171c0:	str	sl, [sp, #132]	; 0x84
   171c4:	beq	174f0 <close_stdout@@Base+0x4df4>
   171c8:	mov	sl, #0
   171cc:	ldrb	r3, [sp, #116]	; 0x74
   171d0:	ldr	fp, [sp, #132]	; 0x84
   171d4:	cmp	r3, #0
   171d8:	bne	172bc <close_stdout@@Base+0x4bc0>
   171dc:	ldrb	r3, [fp]
   171e0:	and	r2, r3, #31
   171e4:	lsr	r3, r3, #5
   171e8:	ldr	r3, [r6, r3, lsl #2]
   171ec:	lsr	r3, r3, r2
   171f0:	tst	r3, #1
   171f4:	beq	172a8 <close_stdout@@Base+0x4bac>
   171f8:	str	r4, [sp, #136]	; 0x88
   171fc:	mov	sl, r8
   17200:	ldrb	r3, [fp]
   17204:	strb	r4, [sp, #140]	; 0x8c
   17208:	str	r3, [sp, #144]	; 0x90
   1720c:	cmp	sl, #0
   17210:	strb	r4, [sp, #128]	; 0x80
   17214:	beq	171ac <close_stdout@@Base+0x4ab0>
   17218:	ldr	r3, [sp, #144]	; 0x90
   1721c:	cmp	r3, #0
   17220:	bne	171ac <close_stdout@@Base+0x4ab0>
   17224:	ldrb	r3, [sp, #128]	; 0x80
   17228:	cmp	r3, #0
   1722c:	ldrbne	r8, [sp, #140]	; 0x8c
   17230:	beq	174ec <close_stdout@@Base+0x4df0>
   17234:	cmp	r8, #0
   17238:	bne	174cc <close_stdout@@Base+0x4dd0>
   1723c:	ldrb	r3, [sp, #196]	; 0xc4
   17240:	mov	r0, #1
   17244:	str	r9, [sp, #28]
   17248:	str	r0, [sp, #32]
   1724c:	cmp	r3, #0
   17250:	ldr	r3, [sp, #12]
   17254:	add	r7, r9, #1
   17258:	add	r3, r3, #1
   1725c:	str	r3, [sp, #12]
   17260:	beq	17340 <close_stdout@@Base+0x4c44>
   17264:	ldrb	r3, [sp, #84]	; 0x54
   17268:	cmp	r3, #0
   1726c:	beq	17340 <close_stdout@@Base+0x4c44>
   17270:	ldr	r0, [sp, #200]	; 0xc8
   17274:	ldr	r3, [sp, #88]	; 0x58
   17278:	subs	r3, r0, r3
   1727c:	rsbs	r0, r3, #0
   17280:	adcs	r0, r0, r3
   17284:	cmp	r0, #0
   17288:	bne	17370 <close_stdout@@Base+0x4c74>
   1728c:	ldr	r8, [sp, #188]	; 0xbc
   17290:	mov	r9, r7
   17294:	ldr	r3, [sp, #192]	; 0xc0
   17298:	strb	r5, [sp, #184]	; 0xb8
   1729c:	add	r8, r8, r3
   172a0:	str	r8, [sp, #188]	; 0xbc
   172a4:	b	16e50 <close_stdout@@Base+0x4754>
   172a8:	add	r0, sp, #120	; 0x78
   172ac:	bl	1129c <mbsinit@plt>
   172b0:	cmp	r0, #0
   172b4:	beq	17974 <close_stdout@@Base+0x5278>
   172b8:	strb	r4, [sp, #116]	; 0x74
   172bc:	bl	11338 <__ctype_get_mb_cur_max@plt>
   172c0:	mov	r1, r0
   172c4:	mov	r0, fp
   172c8:	bl	14e4c <close_stdout@@Base+0x2750>
   172cc:	mov	r1, fp
   172d0:	add	r3, sp, #120	; 0x78
   172d4:	mov	r2, r0
   172d8:	add	r0, sp, #144	; 0x90
   172dc:	bl	1135c <mbrtowc@plt>
   172e0:	cmn	r0, #1
   172e4:	str	r0, [sp, #136]	; 0x88
   172e8:	strbeq	r5, [sp, #140]	; 0x8c
   172ec:	streq	r4, [sp, #136]	; 0x88
   172f0:	beq	1720c <close_stdout@@Base+0x4b10>
   172f4:	cmn	r0, #2
   172f8:	beq	17408 <close_stdout@@Base+0x4d0c>
   172fc:	cmp	r0, #0
   17300:	bne	17324 <close_stdout@@Base+0x4c28>
   17304:	ldr	r3, [sp, #132]	; 0x84
   17308:	str	r4, [sp, #136]	; 0x88
   1730c:	ldrb	r3, [r3]
   17310:	cmp	r3, #0
   17314:	bne	17998 <close_stdout@@Base+0x529c>
   17318:	ldr	r3, [sp, #144]	; 0x90
   1731c:	cmp	r3, #0
   17320:	bne	174a4 <close_stdout@@Base+0x4da8>
   17324:	add	r0, sp, #120	; 0x78
   17328:	strb	r4, [sp, #140]	; 0x8c
   1732c:	bl	1129c <mbsinit@plt>
   17330:	mov	sl, r8
   17334:	cmp	r0, #0
   17338:	strbne	r5, [sp, #116]	; 0x74
   1733c:	b	1720c <close_stdout@@Base+0x4b10>
   17340:	ldr	r2, [sp, #192]	; 0xc0
   17344:	ldr	r3, [sp, #80]	; 0x50
   17348:	cmp	r2, r3
   1734c:	movne	r0, #0
   17350:	bne	17284 <close_stdout@@Base+0x4b88>
   17354:	ldr	r0, [sp, #188]	; 0xbc
   17358:	ldr	r1, [sp, #76]	; 0x4c
   1735c:	bl	112a8 <memcmp@plt>
   17360:	rsbs	r0, r0, #1
   17364:	movcc	r0, #0
   17368:	cmp	r0, #0
   1736c:	beq	1728c <close_stdout@@Base+0x4b90>
   17370:	ldr	r0, [sp, #4]
   17374:	add	r7, sp, #172	; 0xac
   17378:	add	ip, sp, #228	; 0xe4
   1737c:	add	r8, sp, #288	; 0x120
   17380:	str	r0, [sp, #300]	; 0x12c
   17384:	ldm	r7!, {r0, r1, r2, r3}
   17388:	stmia	ip!, {r0, r1, r2, r3}
   1738c:	ldm	r7!, {r0, r1, r2, r3}
   17390:	strb	r5, [sp, #240]	; 0xf0
   17394:	stmia	ip!, {r0, r1, r2, r3}
   17398:	ldm	r7!, {r0, r1, r2, r3}
   1739c:	ldr	sl, [sp, #244]	; 0xf4
   173a0:	stmia	ip!, {r0, r1, r2, r3}
   173a4:	ldm	r7, {r0, r1}
   173a8:	ldr	r3, [sp, #248]	; 0xf8
   173ac:	stm	ip, {r0, r1}
   173b0:	add	r3, sl, r3
   173b4:	str	r3, [sp, #244]	; 0xf4
   173b8:	ldr	r1, [sp, #4]
   173bc:	str	r5, [sp, #288]	; 0x120
   173c0:	strb	r5, [sp, #296]	; 0x128
   173c4:	ldrb	r3, [r1]
   173c8:	strb	r5, [sp, #284]	; 0x11c
   173cc:	and	r2, r3, #31
   173d0:	str	r5, [r8, #4]
   173d4:	lsr	r1, r3, #5
   173d8:	ldr	r7, [r6, r1, lsl #2]
   173dc:	lsr	r7, r7, r2
   173e0:	ands	r7, r7, #1
   173e4:	beq	17430 <close_stdout@@Base+0x4d34>
   173e8:	mov	r7, r3
   173ec:	str	r4, [sp, #304]	; 0x130
   173f0:	str	r3, [sp, #312]	; 0x138
   173f4:	strb	r4, [sp, #308]	; 0x134
   173f8:	cmp	r7, #0
   173fc:	strb	r4, [sp, #296]	; 0x128
   17400:	bne	175b4 <close_stdout@@Base+0x4eb8>
   17404:	bl	11524 <abort@plt>
   17408:	ldr	r0, [sp, #132]	; 0x84
   1740c:	bl	113f8 <strlen@plt>
   17410:	strb	r5, [sp, #140]	; 0x8c
   17414:	str	r0, [sp, #136]	; 0x88
   17418:	b	1720c <close_stdout@@Base+0x4b10>
   1741c:	mov	r2, #1
   17420:	str	r2, [sp, #32]
   17424:	b	1724c <close_stdout@@Base+0x4b50>
   17428:	mov	r0, #0
   1742c:	b	16f30 <close_stdout@@Base+0x4834>
   17430:	mov	r0, r8
   17434:	bl	1129c <mbsinit@plt>
   17438:	cmp	r0, #0
   1743c:	beq	17974 <close_stdout@@Base+0x5278>
   17440:	strb	r4, [sp, #284]	; 0x11c
   17444:	bl	11338 <__ctype_get_mb_cur_max@plt>
   17448:	mov	r1, r0
   1744c:	ldr	r0, [sp, #4]
   17450:	bl	14e4c <close_stdout@@Base+0x2750>
   17454:	ldr	r1, [sp, #4]
   17458:	mov	r3, r8
   1745c:	mov	r2, r0
   17460:	add	r0, sp, #312	; 0x138
   17464:	bl	1135c <mbrtowc@plt>
   17468:	cmn	r0, #1
   1746c:	str	r0, [sp, #304]	; 0x130
   17470:	beq	17944 <close_stdout@@Base+0x5248>
   17474:	cmn	r0, #2
   17478:	beq	17954 <close_stdout@@Base+0x5258>
   1747c:	cmp	r0, #0
   17480:	bne	17910 <close_stdout@@Base+0x5214>
   17484:	ldr	fp, [sp, #300]	; 0x12c
   17488:	str	r4, [sp, #304]	; 0x130
   1748c:	ldrb	r3, [fp]
   17490:	cmp	r3, #0
   17494:	bne	17998 <close_stdout@@Base+0x529c>
   17498:	ldr	r7, [sp, #312]	; 0x138
   1749c:	cmp	r7, #0
   174a0:	beq	17914 <close_stdout@@Base+0x5218>
   174a4:	ldr	r0, [pc, #1304]	; 179c4 <close_stdout@@Base+0x52c8>
   174a8:	mov	r2, #179	; 0xb3
   174ac:	ldr	r1, [pc, #1300]	; 179c8 <close_stdout@@Base+0x52cc>
   174b0:	ldr	r3, [pc, #1300]	; 179cc <close_stdout@@Base+0x52d0>
   174b4:	add	r0, pc, r0
   174b8:	add	r1, pc, r1
   174bc:	add	r3, pc, r3
   174c0:	bl	1153c <__assert_fail@plt>
   174c4:	mov	r5, r3
   174c8:	b	16fac <close_stdout@@Base+0x48b0>
   174cc:	ldr	r3, [sp, #144]	; 0x90
   174d0:	cmp	r3, #0
   174d4:	beq	178d4 <close_stdout@@Base+0x51d8>
   174d8:	mov	r1, #1
   174dc:	ldrb	r3, [sp, #196]	; 0xc4
   174e0:	str	r9, [sp, #28]
   174e4:	str	r1, [sp, #32]
   174e8:	b	1724c <close_stdout@@Base+0x4b50>
   174ec:	ldr	sl, [sp, #132]	; 0x84
   174f0:	ldrb	r3, [sp, #116]	; 0x74
   174f4:	cmp	r3, #0
   174f8:	bne	1752c <close_stdout@@Base+0x4e30>
   174fc:	ldrb	r3, [sl]
   17500:	and	r2, r3, #31
   17504:	lsr	r3, r3, #5
   17508:	ldr	r3, [r6, r3, lsl #2]
   1750c:	lsr	r3, r3, r2
   17510:	tst	r3, #1
   17514:	bne	178fc <close_stdout@@Base+0x5200>
   17518:	add	r0, sp, #120	; 0x78
   1751c:	bl	1129c <mbsinit@plt>
   17520:	cmp	r0, #0
   17524:	beq	17974 <close_stdout@@Base+0x5278>
   17528:	strb	r4, [sp, #116]	; 0x74
   1752c:	bl	11338 <__ctype_get_mb_cur_max@plt>
   17530:	mov	r1, r0
   17534:	mov	r0, sl
   17538:	bl	14e4c <close_stdout@@Base+0x2750>
   1753c:	mov	r1, sl
   17540:	add	r3, sp, #120	; 0x78
   17544:	mov	r2, r0
   17548:	add	r0, sp, #144	; 0x90
   1754c:	bl	1135c <mbrtowc@plt>
   17550:	cmn	r0, #1
   17554:	str	r0, [sp, #136]	; 0x88
   17558:	strbeq	r5, [sp, #140]	; 0x8c
   1755c:	streq	r4, [sp, #136]	; 0x88
   17560:	moveq	r8, #0
   17564:	beq	175ac <close_stdout@@Base+0x4eb0>
   17568:	cmn	r0, #2
   1756c:	beq	1792c <close_stdout@@Base+0x5230>
   17570:	cmp	r0, #0
   17574:	bne	17598 <close_stdout@@Base+0x4e9c>
   17578:	ldr	r3, [sp, #132]	; 0x84
   1757c:	str	r4, [sp, #136]	; 0x88
   17580:	ldrb	r3, [r3]
   17584:	cmp	r3, #0
   17588:	bne	17998 <close_stdout@@Base+0x529c>
   1758c:	ldr	r3, [sp, #144]	; 0x90
   17590:	cmp	r3, #0
   17594:	bne	174a4 <close_stdout@@Base+0x4da8>
   17598:	add	r0, sp, #120	; 0x78
   1759c:	strb	r4, [sp, #140]	; 0x8c
   175a0:	bl	1129c <mbsinit@plt>
   175a4:	cmp	r0, #0
   175a8:	strbne	r5, [sp, #116]	; 0x74
   175ac:	strb	r4, [sp, #128]	; 0x80
   175b0:	b	17234 <close_stdout@@Base+0x4b38>
   175b4:	ldr	fp, [sp, #300]	; 0x12c
   175b8:	ldr	r2, [sp, #304]	; 0x130
   175bc:	add	r7, r9, #2
   175c0:	add	r3, sp, #312	; 0x138
   175c4:	add	r0, sp, #256	; 0x100
   175c8:	add	fp, fp, r2
   175cc:	ldrb	r2, [sp, #284]	; 0x11c
   175d0:	strb	r5, [sp, #296]	; 0x128
   175d4:	add	r9, sp, #232	; 0xe8
   175d8:	cmp	r2, #0
   175dc:	str	r3, [sp, #36]	; 0x24
   175e0:	str	r0, [sp, #40]	; 0x28
   175e4:	str	fp, [sp, #300]	; 0x12c
   175e8:	bne	176b4 <close_stdout@@Base+0x4fb8>
   175ec:	ldrb	r2, [fp]
   175f0:	and	r1, r2, #31
   175f4:	lsr	r2, r2, #5
   175f8:	ldr	r2, [r6, r2, lsl #2]
   175fc:	lsr	r2, r2, r1
   17600:	tst	r2, #1
   17604:	beq	1783c <close_stdout@@Base+0x5140>
   17608:	str	r4, [sp, #304]	; 0x130
   1760c:	ldrb	r3, [fp]
   17610:	strb	r4, [sp, #308]	; 0x134
   17614:	mov	fp, r3
   17618:	str	r3, [sp, #312]	; 0x138
   1761c:	cmp	fp, #0
   17620:	strb	r4, [sp, #296]	; 0x128
   17624:	bne	17644 <close_stdout@@Base+0x4f48>
   17628:	ldr	r0, [sp, #188]	; 0xbc
   1762c:	b	16f30 <close_stdout@@Base+0x4834>
   17630:	ldr	r0, [sp, #300]	; 0x12c
   17634:	bl	113f8 <strlen@plt>
   17638:	strb	r5, [sp, #308]	; 0x134
   1763c:	str	r0, [sp, #304]	; 0x130
   17640:	strb	r4, [sp, #296]	; 0x128
   17644:	ldrb	fp, [sp, #240]	; 0xf0
   17648:	cmp	fp, #0
   1764c:	beq	17718 <close_stdout@@Base+0x501c>
   17650:	ldrb	fp, [sp, #252]	; 0xfc
   17654:	cmp	fp, #0
   17658:	bne	17764 <close_stdout@@Base+0x5068>
   1765c:	ldr	r2, [sp, #248]	; 0xf8
   17660:	ldr	r3, [sp, #304]	; 0x130
   17664:	cmp	r2, r3
   17668:	movne	r0, #1
   1766c:	beq	17824 <close_stdout@@Base+0x5128>
   17670:	cmp	r0, #0
   17674:	add	r3, r7, #1
   17678:	bne	1728c <close_stdout@@Base+0x4b90>
   1767c:	ldr	r1, [sp, #244]	; 0xf4
   17680:	mov	r7, r3
   17684:	ldr	r2, [sp, #248]	; 0xf8
   17688:	ldr	fp, [sp, #300]	; 0x12c
   1768c:	add	r1, r1, r2
   17690:	ldr	r2, [sp, #304]	; 0x130
   17694:	strb	r0, [sp, #240]	; 0xf0
   17698:	add	fp, fp, r2
   1769c:	ldrb	r2, [sp, #284]	; 0x11c
   176a0:	strb	r0, [sp, #296]	; 0x128
   176a4:	cmp	r2, #0
   176a8:	str	r1, [sp, #244]	; 0xf4
   176ac:	str	fp, [sp, #300]	; 0x12c
   176b0:	beq	175ec <close_stdout@@Base+0x4ef0>
   176b4:	bl	11338 <__ctype_get_mb_cur_max@plt>
   176b8:	mov	r1, r0
   176bc:	mov	r0, fp
   176c0:	bl	14e4c <close_stdout@@Base+0x2750>
   176c4:	mov	r1, fp
   176c8:	mov	r3, r8
   176cc:	mov	r2, r0
   176d0:	add	r0, sp, #312	; 0x138
   176d4:	bl	1135c <mbrtowc@plt>
   176d8:	cmn	r0, #1
   176dc:	str	r0, [sp, #304]	; 0x130
   176e0:	strbeq	r5, [sp, #308]	; 0x134
   176e4:	streq	r4, [sp, #304]	; 0x130
   176e8:	beq	17640 <close_stdout@@Base+0x4f44>
   176ec:	cmn	r0, #2
   176f0:	beq	17630 <close_stdout@@Base+0x4f34>
   176f4:	cmp	r0, #0
   176f8:	beq	17854 <close_stdout@@Base+0x5158>
   176fc:	ldr	fp, [sp, #312]	; 0x138
   17700:	mov	r0, r8
   17704:	strb	r4, [sp, #308]	; 0x134
   17708:	bl	1129c <mbsinit@plt>
   1770c:	cmp	r0, #0
   17710:	strbne	r5, [sp, #284]	; 0x11c
   17714:	b	1761c <close_stdout@@Base+0x4f20>
   17718:	ldrb	r3, [sp, #228]	; 0xe4
   1771c:	ldr	sl, [sp, #244]	; 0xf4
   17720:	cmp	r3, #0
   17724:	bne	177a0 <close_stdout@@Base+0x50a4>
   17728:	ldrb	r2, [sl]
   1772c:	and	r1, r2, #31
   17730:	lsr	r2, r2, #5
   17734:	ldr	r2, [r6, r2, lsl #2]
   17738:	lsr	r2, r2, r1
   1773c:	tst	r2, #1
   17740:	beq	1778c <close_stdout@@Base+0x5090>
   17744:	str	r4, [sp, #248]	; 0xf8
   17748:	mov	fp, #1
   1774c:	ldrb	r3, [sl]
   17750:	strb	r4, [sp, #252]	; 0xfc
   17754:	str	r3, [sp, #256]	; 0x100
   17758:	cmp	fp, #0
   1775c:	strb	r4, [sp, #240]	; 0xf0
   17760:	beq	1765c <close_stdout@@Base+0x4f60>
   17764:	ldr	r0, [sp, #256]	; 0x100
   17768:	cmp	r0, #0
   1776c:	beq	16f30 <close_stdout@@Base+0x4834>
   17770:	ldrb	r3, [sp, #308]	; 0x134
   17774:	cmp	r3, #0
   17778:	beq	1765c <close_stdout@@Base+0x4f60>
   1777c:	ldr	r3, [sp, #312]	; 0x138
   17780:	subs	r0, r0, r3
   17784:	movne	r0, #1
   17788:	b	17670 <close_stdout@@Base+0x4f74>
   1778c:	mov	r0, r9
   17790:	bl	1129c <mbsinit@plt>
   17794:	cmp	r0, #0
   17798:	beq	17974 <close_stdout@@Base+0x5278>
   1779c:	strb	r4, [sp, #228]	; 0xe4
   177a0:	bl	11338 <__ctype_get_mb_cur_max@plt>
   177a4:	mov	r1, r0
   177a8:	mov	r0, sl
   177ac:	bl	14e4c <close_stdout@@Base+0x2750>
   177b0:	mov	r1, sl
   177b4:	mov	r3, r9
   177b8:	mov	r2, r0
   177bc:	add	r0, sp, #256	; 0x100
   177c0:	bl	1135c <mbrtowc@plt>
   177c4:	cmn	r0, #1
   177c8:	str	r0, [sp, #248]	; 0xf8
   177cc:	strbeq	r5, [sp, #252]	; 0xfc
   177d0:	streq	r4, [sp, #248]	; 0xf8
   177d4:	beq	17758 <close_stdout@@Base+0x505c>
   177d8:	cmn	r0, #2
   177dc:	beq	17878 <close_stdout@@Base+0x517c>
   177e0:	cmp	r0, #0
   177e4:	bne	17808 <close_stdout@@Base+0x510c>
   177e8:	ldr	r3, [sp, #244]	; 0xf4
   177ec:	str	r4, [sp, #248]	; 0xf8
   177f0:	ldrb	r3, [r3]
   177f4:	cmp	r3, #0
   177f8:	bne	17998 <close_stdout@@Base+0x529c>
   177fc:	ldr	r3, [sp, #256]	; 0x100
   17800:	cmp	r3, #0
   17804:	bne	174a4 <close_stdout@@Base+0x4da8>
   17808:	mov	r0, r9
   1780c:	strb	r4, [sp, #252]	; 0xfc
   17810:	bl	1129c <mbsinit@plt>
   17814:	mov	fp, #1
   17818:	cmp	r0, #0
   1781c:	strbne	r5, [sp, #228]	; 0xe4
   17820:	b	17758 <close_stdout@@Base+0x505c>
   17824:	ldr	r0, [sp, #244]	; 0xf4
   17828:	ldr	r1, [sp, #300]	; 0x12c
   1782c:	bl	112a8 <memcmp@plt>
   17830:	adds	r0, r0, #0
   17834:	movne	r0, #1
   17838:	b	17670 <close_stdout@@Base+0x4f74>
   1783c:	mov	r0, r8
   17840:	bl	1129c <mbsinit@plt>
   17844:	cmp	r0, #0
   17848:	beq	17974 <close_stdout@@Base+0x5278>
   1784c:	strb	r4, [sp, #284]	; 0x11c
   17850:	b	176b4 <close_stdout@@Base+0x4fb8>
   17854:	ldr	r3, [sp, #300]	; 0x12c
   17858:	str	r4, [sp, #304]	; 0x130
   1785c:	ldrb	r3, [r3]
   17860:	cmp	r3, #0
   17864:	bne	17998 <close_stdout@@Base+0x529c>
   17868:	ldr	fp, [sp, #312]	; 0x138
   1786c:	cmp	fp, #0
   17870:	beq	17700 <close_stdout@@Base+0x5004>
   17874:	b	174a4 <close_stdout@@Base+0x4da8>
   17878:	ldr	r0, [sp, #244]	; 0xf4
   1787c:	bl	113f8 <strlen@plt>
   17880:	strb	r5, [sp, #252]	; 0xfc
   17884:	str	r0, [sp, #248]	; 0xf8
   17888:	b	17758 <close_stdout@@Base+0x505c>
   1788c:	ldr	r3, [sp, #188]	; 0xbc
   17890:	str	r4, [sp, #192]	; 0xc0
   17894:	ldrb	r3, [r3]
   17898:	cmp	r3, #0
   1789c:	bne	17998 <close_stdout@@Base+0x529c>
   178a0:	ldr	r7, [sp, #200]	; 0xc8
   178a4:	cmp	r7, #0
   178a8:	beq	17100 <close_stdout@@Base+0x4a04>
   178ac:	b	174a4 <close_stdout@@Base+0x4da8>
   178b0:	ldr	r3, [sp, #76]	; 0x4c
   178b4:	str	r7, [sp, #80]	; 0x50
   178b8:	ldrb	r3, [r3]
   178bc:	cmp	r3, #0
   178c0:	bne	17998 <close_stdout@@Base+0x529c>
   178c4:	ldr	r4, [sp, #88]	; 0x58
   178c8:	cmp	r4, #0
   178cc:	beq	16f00 <close_stdout@@Base+0x4804>
   178d0:	b	174a4 <close_stdout@@Base+0x4da8>
   178d4:	ldr	r0, [sp, #16]
   178d8:	add	r2, sp, #56	; 0x38
   178dc:	ldr	r1, [sp, #4]
   178e0:	bl	16418 <close_stdout@@Base+0x3d1c>
   178e4:	cmp	r0, #0
   178e8:	bne	1796c <close_stdout@@Base+0x5270>
   178ec:	str	r0, [sp, #32]
   178f0:	ldrb	r3, [sp, #196]	; 0xc4
   178f4:	str	r9, [sp, #28]
   178f8:	b	1724c <close_stdout@@Base+0x4b50>
   178fc:	str	r4, [sp, #136]	; 0x88
   17900:	ldrb	r3, [sl]
   17904:	strb	r4, [sp, #140]	; 0x8c
   17908:	str	r3, [sp, #144]	; 0x90
   1790c:	b	175ac <close_stdout@@Base+0x4eb0>
   17910:	ldr	r7, [sp, #312]	; 0x138
   17914:	mov	r0, r8
   17918:	strb	r4, [sp, #308]	; 0x134
   1791c:	bl	1129c <mbsinit@plt>
   17920:	cmp	r0, #0
   17924:	strbne	r5, [sp, #284]	; 0x11c
   17928:	b	173f8 <close_stdout@@Base+0x4cfc>
   1792c:	ldr	r0, [sp, #132]	; 0x84
   17930:	mov	r8, #0
   17934:	bl	113f8 <strlen@plt>
   17938:	strb	r5, [sp, #140]	; 0x8c
   1793c:	str	r0, [sp, #136]	; 0x88
   17940:	b	175ac <close_stdout@@Base+0x4eb0>
   17944:	str	r4, [sp, #304]	; 0x130
   17948:	strb	r7, [sp, #308]	; 0x134
   1794c:	ldr	fp, [sp, #300]	; 0x12c
   17950:	b	175b8 <close_stdout@@Base+0x4ebc>
   17954:	ldr	fp, [sp, #300]	; 0x12c
   17958:	mov	r0, fp
   1795c:	bl	113f8 <strlen@plt>
   17960:	strb	r7, [sp, #308]	; 0x134
   17964:	str	r0, [sp, #304]	; 0x130
   17968:	b	175b8 <close_stdout@@Base+0x4ebc>
   1796c:	ldr	r0, [sp, #56]	; 0x38
   17970:	b	16f30 <close_stdout@@Base+0x4834>
   17974:	ldr	r0, [pc, #84]	; 179d0 <close_stdout@@Base+0x52d4>
   17978:	mov	r2, #150	; 0x96
   1797c:	ldr	r1, [pc, #80]	; 179d4 <close_stdout@@Base+0x52d8>
   17980:	ldr	r3, [pc, #80]	; 179d8 <close_stdout@@Base+0x52dc>
   17984:	add	r0, pc, r0
   17988:	add	r1, pc, r1
   1798c:	add	r3, pc, r3
   17990:	bl	1153c <__assert_fail@plt>
   17994:	bl	112cc <__stack_chk_fail@plt>
   17998:	ldr	r0, [pc, #60]	; 179dc <close_stdout@@Base+0x52e0>
   1799c:	mov	r2, #178	; 0xb2
   179a0:	ldr	r1, [pc, #56]	; 179e0 <close_stdout@@Base+0x52e4>
   179a4:	ldr	r3, [pc, #56]	; 179e4 <close_stdout@@Base+0x52e8>
   179a8:	add	r0, pc, r0
   179ac:	add	r1, pc, r1
   179b0:	add	r3, pc, r3
   179b4:	bl	1153c <__assert_fail@plt>
   179b8:			; <UNDEFINED> instruction: 0x000132b4
   179bc:	andeq	r0, r0, r4, lsr r1
   179c0:	andeq	r0, r0, r0, lsr r1
   179c4:	ldrdeq	r1, [r0], -r8
   179c8:	andeq	r1, r0, ip, lsr #19
   179cc:	andeq	r1, r0, r0, lsr lr
   179d0:	andeq	r1, r0, r8, asr #9
   179d4:	ldrdeq	r1, [r0], -ip
   179d8:	andeq	r1, r0, r0, ror #18
   179dc:	andeq	r1, r0, ip, asr #9
   179e0:			; <UNDEFINED> instruction: 0x000014b8
   179e4:	andeq	r1, r0, ip, lsr r9
   179e8:	ldr	ip, [pc, #852]	; 17d44 <close_stdout@@Base+0x5648>
   179ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179f0:	mov	r6, r2
   179f4:	sub	sp, sp, #4160	; 0x1040
   179f8:	ldr	r2, [pc, #840]	; 17d48 <close_stdout@@Base+0x564c>
   179fc:	sub	sp, sp, #4
   17a00:	add	ip, pc, ip
   17a04:	mov	r5, #0
   17a08:	movw	fp, #61424	; 0xeff0
   17a0c:	str	r0, [sp, #24]
   17a10:	mov	r0, r6
   17a14:	str	r1, [sp, #16]
   17a18:	mov	r1, r5
   17a1c:	str	r3, [sp, #32]
   17a20:	mov	r3, r5
   17a24:	ldr	r2, [ip, r2]
   17a28:	add	ip, sp, #8192	; 0x2000
   17a2c:	str	r5, [sp]
   17a30:	movt	fp, #65535	; 0xffff
   17a34:	ldr	ip, [ip, #-3992]	; 0xfffff068
   17a38:	str	r2, [sp, #20]
   17a3c:	mov	r2, r5
   17a40:	ldr	lr, [sp, #20]
   17a44:	str	ip, [sp, #28]
   17a48:	ldr	ip, [lr]
   17a4c:	add	lr, sp, #8192	; 0x2000
   17a50:	str	ip, [lr, #-4036]	; 0xfffff03c
   17a54:	bl	11224 <iconv@plt>
   17a58:	ldr	ip, [sp, #16]
   17a5c:	add	lr, sp, #4160	; 0x1040
   17a60:	movw	r3, #61420	; 0xefec
   17a64:	cmp	ip, r5
   17a68:	ldr	ip, [sp, #24]
   17a6c:	movt	r3, #65535	; 0xffff
   17a70:	str	ip, [lr, r3]
   17a74:	ldr	ip, [sp, #16]
   17a78:	str	ip, [lr, fp]
   17a7c:	beq	17d20 <close_stdout@@Base+0x5624>
   17a80:	movw	r9, #61432	; 0xeff8
   17a84:	movt	r9, #65535	; 0xffff
   17a88:	movw	sl, #61428	; 0xeff4
   17a8c:	movt	sl, #65535	; 0xffff
   17a90:	mov	r3, r9
   17a94:	add	ip, sp, #64	; 0x40
   17a98:	mov	r9, sl
   17a9c:	str	ip, [sp, #36]	; 0x24
   17aa0:	add	r4, sp, #60	; 0x3c
   17aa4:	add	ip, sp, #44	; 0x2c
   17aa8:	add	r7, sp, #52	; 0x34
   17aac:	str	ip, [sp, #8]
   17ab0:	add	r8, sp, #56	; 0x38
   17ab4:	add	ip, sp, #48	; 0x30
   17ab8:	mov	sl, r3
   17abc:	str	ip, [sp, #12]
   17ac0:	b	17ae0 <close_stdout@@Base+0x53e4>
   17ac4:	add	lr, sp, #4160	; 0x1040
   17ac8:	ldr	r2, [lr, fp]
   17acc:	ldr	r3, [lr, r9]
   17ad0:	cmp	r2, #0
   17ad4:	rsb	r3, r4, r3
   17ad8:	add	r5, r5, r3
   17adc:	beq	17b28 <close_stdout@@Base+0x542c>
   17ae0:	add	lr, sp, #4160	; 0x1040
   17ae4:	str	r8, [sp]
   17ae8:	mov	ip, #4096	; 0x1000
   17aec:	mov	r0, r6
   17af0:	add	r1, sp, #44	; 0x2c
   17af4:	add	r2, sp, #48	; 0x30
   17af8:	mov	r3, r7
   17afc:	str	r4, [lr, r9]
   17b00:	str	ip, [lr, sl]
   17b04:	bl	11224 <iconv@plt>
   17b08:	cmn	r0, #1
   17b0c:	bne	17ac4 <close_stdout@@Base+0x53c8>
   17b10:	bl	11428 <__errno_location@plt>
   17b14:	ldr	r3, [r0]
   17b18:	cmp	r3, #7
   17b1c:	beq	17ac4 <close_stdout@@Base+0x53c8>
   17b20:	cmp	r3, #22
   17b24:	bne	17d18 <close_stdout@@Base+0x561c>
   17b28:	add	lr, sp, #4160	; 0x1040
   17b2c:	movw	r9, #61428	; 0xeff4
   17b30:	movw	r3, #61432	; 0xeff8
   17b34:	movt	r9, #65535	; 0xffff
   17b38:	movt	r3, #65535	; 0xffff
   17b3c:	mov	r1, #0
   17b40:	str	r8, [sp]
   17b44:	mov	ip, #4096	; 0x1000
   17b48:	mov	r2, r1
   17b4c:	str	ip, [lr, r3]
   17b50:	mov	r0, r6
   17b54:	str	r4, [lr, r9]
   17b58:	mov	r3, r7
   17b5c:	bl	11224 <iconv@plt>
   17b60:	cmn	r0, #1
   17b64:	beq	17d18 <close_stdout@@Base+0x561c>
   17b68:	add	r0, sp, #4160	; 0x1040
   17b6c:	ldr	r3, [r0, r9]
   17b70:	rsb	r4, r4, r3
   17b74:	adds	r5, r5, r4
   17b78:	beq	17cc8 <close_stdout@@Base+0x55cc>
   17b7c:	ldr	ip, [sp, #32]
   17b80:	ldr	r4, [ip]
   17b84:	cmp	r4, #0
   17b88:	beq	17ca4 <close_stdout@@Base+0x55a8>
   17b8c:	ldr	ip, [sp, #28]
   17b90:	ldr	r3, [ip]
   17b94:	cmp	r5, r3
   17b98:	bhi	17ca4 <close_stdout@@Base+0x55a8>
   17b9c:	mov	r3, #0
   17ba0:	mov	r0, r6
   17ba4:	mov	r1, r3
   17ba8:	mov	r2, r3
   17bac:	str	r3, [sp]
   17bb0:	movw	sl, #61424	; 0xeff0
   17bb4:	bl	11224 <iconv@plt>
   17bb8:	ldr	ip, [sp, #24]
   17bbc:	add	lr, sp, #4160	; 0x1040
   17bc0:	movw	r3, #61420	; 0xefec
   17bc4:	movt	r3, #65535	; 0xffff
   17bc8:	movt	sl, #65535	; 0xffff
   17bcc:	movw	r1, #61428	; 0xeff4
   17bd0:	movw	r2, #61432	; 0xeff8
   17bd4:	str	ip, [lr, r3]
   17bd8:	movt	r1, #65535	; 0xffff
   17bdc:	ldr	ip, [sp, #16]
   17be0:	movt	r2, #65535	; 0xffff
   17be4:	str	r4, [lr, r1]
   17be8:	str	r5, [lr, r2]
   17bec:	str	ip, [lr, sl]
   17bf0:	mov	r3, ip
   17bf4:	ldr	ip, [sp, #36]	; 0x24
   17bf8:	sub	fp, ip, #20
   17bfc:	sub	r9, ip, #16
   17c00:	b	17c2c <close_stdout@@Base+0x5530>
   17c04:	str	r8, [sp]
   17c08:	mov	r0, r6
   17c0c:	mov	r1, fp
   17c10:	mov	r2, r9
   17c14:	mov	r3, r7
   17c18:	bl	11224 <iconv@plt>
   17c1c:	cmn	r0, #1
   17c20:	beq	17cd8 <close_stdout@@Base+0x55dc>
   17c24:	add	lr, sp, #4160	; 0x1040
   17c28:	ldr	r3, [lr, sl]
   17c2c:	cmp	r3, #0
   17c30:	bne	17c04 <close_stdout@@Base+0x5508>
   17c34:	mov	r1, #0
   17c38:	str	r8, [sp]
   17c3c:	mov	r0, r6
   17c40:	mov	r3, r7
   17c44:	mov	r2, r1
   17c48:	bl	11224 <iconv@plt>
   17c4c:	cmn	r0, #1
   17c50:	beq	17ce8 <close_stdout@@Base+0x55ec>
   17c54:	movw	r3, #61432	; 0xeff8
   17c58:	add	r0, sp, #4160	; 0x1040
   17c5c:	movt	r3, #65535	; 0xffff
   17c60:	ldr	r3, [r0, r3]
   17c64:	cmp	r3, #0
   17c68:	bne	17d3c <close_stdout@@Base+0x5640>
   17c6c:	ldr	ip, [sp, #32]
   17c70:	str	r4, [ip]
   17c74:	ldr	ip, [sp, #28]
   17c78:	str	r5, [ip]
   17c7c:	ldr	ip, [sp, #20]
   17c80:	add	r0, sp, #8192	; 0x2000
   17c84:	ldr	r2, [r0, #-4036]	; 0xfffff03c
   17c88:	mov	r0, r3
   17c8c:	ldr	r3, [ip]
   17c90:	cmp	r2, r3
   17c94:	bne	17d40 <close_stdout@@Base+0x5644>
   17c98:	add	sp, sp, #4160	; 0x1040
   17c9c:	add	sp, sp, #4
   17ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ca4:	mov	r0, r5
   17ca8:	bl	1138c <malloc@plt>
   17cac:	subs	r4, r0, #0
   17cb0:	bne	17b9c <close_stdout@@Base+0x54a0>
   17cb4:	bl	11428 <__errno_location@plt>
   17cb8:	mov	r2, #12
   17cbc:	mvn	r3, #0
   17cc0:	str	r2, [r0]
   17cc4:	b	17c7c <close_stdout@@Base+0x5580>
   17cc8:	ldr	ip, [sp, #28]
   17ccc:	mov	r3, r5
   17cd0:	str	r5, [ip]
   17cd4:	b	17c7c <close_stdout@@Base+0x5580>
   17cd8:	bl	11428 <__errno_location@plt>
   17cdc:	ldr	r3, [r0]
   17ce0:	cmp	r3, #22
   17ce4:	beq	17c34 <close_stdout@@Base+0x5538>
   17ce8:	ldr	ip, [sp, #32]
   17cec:	ldr	r3, [ip]
   17cf0:	cmp	r3, r4
   17cf4:	beq	17d18 <close_stdout@@Base+0x561c>
   17cf8:	bl	11428 <__errno_location@plt>
   17cfc:	ldr	r6, [r0]
   17d00:	mov	r5, r0
   17d04:	mov	r0, r4
   17d08:	bl	11278 <free@plt>
   17d0c:	mvn	r3, #0
   17d10:	str	r6, [r5]
   17d14:	b	17c7c <close_stdout@@Base+0x5580>
   17d18:	mvn	r3, #0
   17d1c:	b	17c7c <close_stdout@@Base+0x5580>
   17d20:	add	ip, sp, #64	; 0x40
   17d24:	add	r4, sp, #60	; 0x3c
   17d28:	str	ip, [sp, #36]	; 0x24
   17d2c:	add	r7, sp, #52	; 0x34
   17d30:	add	r8, sp, #56	; 0x38
   17d34:	ldr	r5, [sp, #16]
   17d38:	b	17b28 <close_stdout@@Base+0x542c>
   17d3c:	bl	11524 <abort@plt>
   17d40:	bl	112cc <__stack_chk_fail@plt>
   17d44:	strdeq	r2, [r1], -r8
   17d48:	andeq	r0, r0, r4, lsr r1
   17d4c:	ldr	r3, [pc, #524]	; 17f60 <close_stdout@@Base+0x5864>
   17d50:	ldr	r2, [pc, #524]	; 17f64 <close_stdout@@Base+0x5868>
   17d54:	add	r3, pc, r3
   17d58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d5c:	sub	sp, sp, #52	; 0x34
   17d60:	ldr	r2, [r3, r2]
   17d64:	mov	r6, r1
   17d68:	str	r0, [sp, #28]
   17d6c:	ldr	r3, [r2]
   17d70:	str	r2, [sp, #20]
   17d74:	str	r3, [sp, #44]	; 0x2c
   17d78:	bl	113f8 <strlen@plt>
   17d7c:	cmp	r0, #4096	; 0x1000
   17d80:	mov	fp, r0
   17d84:	lslcc	fp, r0, #4
   17d88:	str	r0, [sp, #32]
   17d8c:	add	r5, fp, #1
   17d90:	mov	r0, r5
   17d94:	bl	1138c <malloc@plt>
   17d98:	subs	r4, r0, #0
   17d9c:	beq	17f4c <close_stdout@@Base+0x5850>
   17da0:	mov	r3, #0
   17da4:	add	r2, sp, #32
   17da8:	mov	r1, r3
   17dac:	str	r2, [sp, #16]
   17db0:	str	r3, [sp]
   17db4:	mov	r2, r3
   17db8:	mov	r0, r6
   17dbc:	add	sl, sp, #28
   17dc0:	bl	11224 <iconv@plt>
   17dc4:	add	r8, sp, #36	; 0x24
   17dc8:	add	r7, sp, #40	; 0x28
   17dcc:	str	r4, [sp, #36]	; 0x24
   17dd0:	str	fp, [sp, #40]	; 0x28
   17dd4:	b	17e38 <close_stdout@@Base+0x573c>
   17dd8:	bl	11428 <__errno_location@plt>
   17ddc:	ldr	r3, [r0]
   17de0:	mov	fp, r0
   17de4:	cmp	r3, #22
   17de8:	beq	17eb4 <close_stdout@@Base+0x57b8>
   17dec:	cmp	r3, #7
   17df0:	bne	17f14 <close_stdout@@Base+0x5818>
   17df4:	lsl	r9, r5, #1
   17df8:	ldr	r1, [sp, #36]	; 0x24
   17dfc:	cmp	r5, r9
   17e00:	rsb	r5, r4, r1
   17e04:	bcs	17f0c <close_stdout@@Base+0x5810>
   17e08:	mov	r0, r4
   17e0c:	mov	r1, r9
   17e10:	bl	112d8 <realloc@plt>
   17e14:	cmp	r0, #0
   17e18:	beq	17f0c <close_stdout@@Base+0x5810>
   17e1c:	sub	r1, r9, #1
   17e20:	add	r2, r0, r5
   17e24:	mov	r4, r0
   17e28:	rsb	r5, r5, r1
   17e2c:	str	r5, [sp, #40]	; 0x28
   17e30:	mov	r5, r9
   17e34:	str	r2, [sp, #36]	; 0x24
   17e38:	str	r7, [sp]
   17e3c:	mov	r0, r6
   17e40:	mov	r1, sl
   17e44:	add	r2, sp, #32
   17e48:	mov	r3, r8
   17e4c:	bl	11224 <iconv@plt>
   17e50:	cmn	r0, #1
   17e54:	beq	17dd8 <close_stdout@@Base+0x56dc>
   17e58:	b	17eb4 <close_stdout@@Base+0x57b8>
   17e5c:	bl	11428 <__errno_location@plt>
   17e60:	ldr	r3, [r0]
   17e64:	mov	fp, r0
   17e68:	cmp	r3, #7
   17e6c:	bne	17f14 <close_stdout@@Base+0x5818>
   17e70:	lsl	r9, r5, #1
   17e74:	ldr	r3, [sp, #36]	; 0x24
   17e78:	cmp	r5, r9
   17e7c:	rsb	r5, r4, r3
   17e80:	bcs	17f0c <close_stdout@@Base+0x5810>
   17e84:	mov	r0, r4
   17e88:	mov	r1, r9
   17e8c:	bl	112d8 <realloc@plt>
   17e90:	cmp	r0, #0
   17e94:	beq	17f0c <close_stdout@@Base+0x5810>
   17e98:	sub	r2, r9, #1
   17e9c:	add	r3, r0, r5
   17ea0:	mov	r4, r0
   17ea4:	rsb	r5, r5, r2
   17ea8:	str	r5, [sp, #40]	; 0x28
   17eac:	mov	r5, r9
   17eb0:	str	r3, [sp, #36]	; 0x24
   17eb4:	mov	r1, #0
   17eb8:	str	r7, [sp]
   17ebc:	mov	r2, r1
   17ec0:	mov	r0, r6
   17ec4:	mov	r3, r8
   17ec8:	bl	11224 <iconv@plt>
   17ecc:	cmn	r0, #1
   17ed0:	beq	17e5c <close_stdout@@Base+0x5760>
   17ed4:	ldr	r3, [sp, #36]	; 0x24
   17ed8:	mov	r2, #0
   17edc:	add	r1, r3, #1
   17ee0:	str	r1, [sp, #36]	; 0x24
   17ee4:	strb	r2, [r3]
   17ee8:	ldr	r1, [sp, #36]	; 0x24
   17eec:	rsb	r1, r4, r1
   17ef0:	cmp	r1, r5
   17ef4:	bcs	17f2c <close_stdout@@Base+0x5830>
   17ef8:	mov	r0, r4
   17efc:	bl	112d8 <realloc@plt>
   17f00:	cmp	r0, #0
   17f04:	movne	r4, r0
   17f08:	b	17f2c <close_stdout@@Base+0x5830>
   17f0c:	mov	r3, #12
   17f10:	str	r3, [fp]
   17f14:	mov	r0, r4
   17f18:	str	r3, [sp, #12]
   17f1c:	bl	11278 <free@plt>
   17f20:	ldr	r3, [sp, #12]
   17f24:	mov	r4, #0
   17f28:	str	r3, [fp]
   17f2c:	ldr	r1, [sp, #20]
   17f30:	mov	r0, r4
   17f34:	ldr	r2, [sp, #44]	; 0x2c
   17f38:	ldr	r3, [r1]
   17f3c:	cmp	r2, r3
   17f40:	bne	17f5c <close_stdout@@Base+0x5860>
   17f44:	add	sp, sp, #52	; 0x34
   17f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f4c:	bl	11428 <__errno_location@plt>
   17f50:	mov	r3, #12
   17f54:	str	r3, [r0]
   17f58:	b	17f2c <close_stdout@@Base+0x5830>
   17f5c:	bl	112cc <__stack_chk_fail@plt>
   17f60:	andeq	r2, r1, r4, lsr #5
   17f64:	andeq	r0, r0, r4, lsr r1
   17f68:	push	{r3, r4, r5, r6, r7, lr}
   17f6c:	mov	r4, r0
   17f70:	ldrb	r3, [r0]
   17f74:	mov	r5, r1
   17f78:	mov	r6, r2
   17f7c:	cmp	r3, #0
   17f80:	beq	17f98 <close_stdout@@Base+0x589c>
   17f84:	mov	r0, r1
   17f88:	mov	r1, r2
   17f8c:	bl	15ccc <close_stdout@@Base+0x35d0>
   17f90:	cmp	r0, #0
   17f94:	bne	17fb4 <close_stdout@@Base+0x58b8>
   17f98:	mov	r0, r4
   17f9c:	bl	11458 <__strdup@plt>
   17fa0:	subs	r4, r0, #0
   17fa4:	beq	18010 <close_stdout@@Base+0x5914>
   17fa8:	mov	r3, r4
   17fac:	mov	r0, r3
   17fb0:	pop	{r3, r4, r5, r6, r7, pc}
   17fb4:	mov	r1, r5
   17fb8:	mov	r0, r6
   17fbc:	bl	11398 <iconv_open@plt>
   17fc0:	cmn	r0, #1
   17fc4:	mov	r5, r0
   17fc8:	beq	18028 <close_stdout@@Base+0x592c>
   17fcc:	mov	r0, r4
   17fd0:	mov	r1, r5
   17fd4:	bl	17d4c <close_stdout@@Base+0x5650>
   17fd8:	subs	r4, r0, #0
   17fdc:	beq	18030 <close_stdout@@Base+0x5934>
   17fe0:	mov	r0, r5
   17fe4:	bl	11218 <iconv_close@plt>
   17fe8:	cmp	r0, #0
   17fec:	bge	17fa8 <close_stdout@@Base+0x58ac>
   17ff0:	bl	11428 <__errno_location@plt>
   17ff4:	ldr	r6, [r0]
   17ff8:	mov	r5, r0
   17ffc:	mov	r0, r4
   18000:	bl	11278 <free@plt>
   18004:	mov	r3, #0
   18008:	str	r6, [r5]
   1800c:	b	17fac <close_stdout@@Base+0x58b0>
   18010:	bl	11428 <__errno_location@plt>
   18014:	mov	r3, r4
   18018:	mov	r2, #12
   1801c:	str	r2, [r0]
   18020:	mov	r0, r3
   18024:	pop	{r3, r4, r5, r6, r7, pc}
   18028:	mov	r3, #0
   1802c:	b	17fac <close_stdout@@Base+0x58b0>
   18030:	bl	11428 <__errno_location@plt>
   18034:	ldr	r7, [r0]
   18038:	mov	r6, r0
   1803c:	mov	r0, r5
   18040:	bl	11218 <iconv_close@plt>
   18044:	mov	r3, r4
   18048:	str	r7, [r6]
   1804c:	b	17fac <close_stdout@@Base+0x58b0>
   18050:	push	{r4, r5, r6, lr}
   18054:	sub	sp, sp, #8
   18058:	mov	r4, r0
   1805c:	bl	11494 <fileno@plt>
   18060:	cmp	r0, #0
   18064:	mov	r0, r4
   18068:	blt	180e4 <close_stdout@@Base+0x59e8>
   1806c:	bl	113b0 <__freading@plt>
   18070:	cmp	r0, #0
   18074:	bne	180b0 <close_stdout@@Base+0x59b4>
   18078:	mov	r0, r4
   1807c:	bl	180f0 <close_stdout@@Base+0x59f4>
   18080:	cmp	r0, #0
   18084:	beq	180e0 <close_stdout@@Base+0x59e4>
   18088:	bl	11428 <__errno_location@plt>
   1808c:	ldr	r6, [r0]
   18090:	mov	r5, r0
   18094:	mov	r0, r4
   18098:	bl	114b8 <fclose@plt>
   1809c:	cmp	r6, #0
   180a0:	mvnne	r0, #0
   180a4:	strne	r6, [r5]
   180a8:	add	sp, sp, #8
   180ac:	pop	{r4, r5, r6, pc}
   180b0:	mov	r0, r4
   180b4:	bl	11494 <fileno@plt>
   180b8:	mov	r1, #1
   180bc:	mov	r2, #0
   180c0:	mov	r3, #0
   180c4:	str	r1, [sp]
   180c8:	bl	1132c <lseek64@plt>
   180cc:	mvn	r2, #0
   180d0:	mvn	r3, #0
   180d4:	cmp	r1, r3
   180d8:	cmpeq	r0, r2
   180dc:	bne	18078 <close_stdout@@Base+0x597c>
   180e0:	mov	r0, r4
   180e4:	add	sp, sp, #8
   180e8:	pop	{r4, r5, r6, lr}
   180ec:	b	114b8 <fclose@plt>
   180f0:	push	{r4, lr}
   180f4:	subs	r4, r0, #0
   180f8:	sub	sp, sp, #8
   180fc:	beq	1810c <close_stdout@@Base+0x5a10>
   18100:	bl	113b0 <__freading@plt>
   18104:	cmp	r0, #0
   18108:	bne	1811c <close_stdout@@Base+0x5a20>
   1810c:	mov	r0, r4
   18110:	add	sp, sp, #8
   18114:	pop	{r4, lr}
   18118:	b	11254 <fflush@plt>
   1811c:	ldr	r3, [r4]
   18120:	tst	r3, #256	; 0x100
   18124:	beq	1810c <close_stdout@@Base+0x5a10>
   18128:	mov	r3, #1
   1812c:	mov	r0, r4
   18130:	str	r3, [sp]
   18134:	mov	r2, #0
   18138:	mov	r3, #0
   1813c:	bl	18150 <close_stdout@@Base+0x5a54>
   18140:	mov	r0, r4
   18144:	add	sp, sp, #8
   18148:	pop	{r4, lr}
   1814c:	b	11254 <fflush@plt>
   18150:	push	{r4, r5, r6, r7, lr}
   18154:	sub	sp, sp, #20
   18158:	ldmib	r0, {r1, ip}
   1815c:	mov	r6, r0
   18160:	ldr	r4, [sp, #40]	; 0x28
   18164:	cmp	ip, r1
   18168:	beq	18180 <close_stdout@@Base+0x5a84>
   1816c:	str	r4, [sp, #40]	; 0x28
   18170:	mov	r0, r6
   18174:	add	sp, sp, #20
   18178:	pop	{r4, r5, r6, r7, lr}
   1817c:	b	114d0 <fseeko64@plt>
   18180:	ldr	ip, [r0, #20]
   18184:	ldr	r1, [r0, #16]
   18188:	cmp	ip, r1
   1818c:	bne	1816c <close_stdout@@Base+0x5a70>
   18190:	ldr	r7, [r0, #36]	; 0x24
   18194:	cmp	r7, #0
   18198:	bne	1816c <close_stdout@@Base+0x5a70>
   1819c:	str	r2, [sp, #12]
   181a0:	mvn	r5, #0
   181a4:	str	r3, [sp, #8]
   181a8:	bl	11494 <fileno@plt>
   181ac:	str	r4, [sp]
   181b0:	mvn	r4, #0
   181b4:	ldr	r2, [sp, #12]
   181b8:	ldr	r3, [sp, #8]
   181bc:	bl	1132c <lseek64@plt>
   181c0:	mov	r2, r0
   181c4:	mov	r3, r1
   181c8:	cmp	r3, r5
   181cc:	cmpeq	r2, r4
   181d0:	beq	181f0 <close_stdout@@Base+0x5af4>
   181d4:	ldr	r1, [r6]
   181d8:	mov	r0, r7
   181dc:	strd	r2, [r6, #80]	; 0x50
   181e0:	bic	r3, r1, #16
   181e4:	str	r3, [r6]
   181e8:	add	sp, sp, #20
   181ec:	pop	{r4, r5, r6, r7, pc}
   181f0:	mvn	r0, #0
   181f4:	b	181e8 <close_stdout@@Base+0x5aec>
   181f8:	adds	r0, r0, #8
   181fc:	push	{r3, r4, r5, lr}
   18200:	bcs	18254 <close_stdout@@Base+0x5b58>
   18204:	bl	1138c <malloc@plt>
   18208:	subs	r1, r0, #0
   1820c:	beq	18254 <close_stdout@@Base+0x5b58>
   18210:	add	r2, r1, #8
   18214:	movw	r3, #65281	; 0xff01
   18218:	movt	r3, #65280	; 0xff00
   1821c:	ldr	ip, [pc, #56]	; 1825c <close_stdout@@Base+0x5b60>
   18220:	movw	r4, #64330	; 0xfb4a
   18224:	movt	r4, #5141	; 0x1415
   18228:	umull	r5, r3, r3, r2
   1822c:	add	ip, pc, ip
   18230:	str	r4, [r1, #4]
   18234:	mov	r0, r2
   18238:	lsr	r3, r3, #8
   1823c:	add	r3, r3, r3, lsl #8
   18240:	rsb	r3, r3, r2
   18244:	ldr	r4, [ip, r3, lsl #2]
   18248:	str	r2, [ip, r3, lsl #2]
   1824c:	str	r4, [r1]
   18250:	pop	{r3, r4, r5, pc}
   18254:	mov	r0, #0
   18258:	pop	{r3, r4, r5, pc}
   1825c:	andeq	r2, r1, ip, ror #1
   18260:	cmp	r0, #0
   18264:	bxeq	lr
   18268:	ldr	r2, [r0, #-4]
   1826c:	movw	r3, #64330	; 0xfb4a
   18270:	movt	r3, #5141	; 0x1415
   18274:	cmp	r2, r3
   18278:	bxne	lr
   1827c:	movw	r3, #65281	; 0xff01
   18280:	movt	r3, #65280	; 0xff00
   18284:	ldr	r1, [pc, #88]	; 182e4 <close_stdout@@Base+0x5be8>
   18288:	umull	r2, r3, r3, r0
   1828c:	add	r1, pc, r1
   18290:	lsr	r3, r3, #8
   18294:	add	r3, r3, r3, lsl #8
   18298:	rsb	r3, r3, r0
   1829c:	ldr	r2, [r1, r3, lsl #2]
   182a0:	cmp	r2, #0
   182a4:	bxeq	lr
   182a8:	cmp	r0, r2
   182ac:	addeq	r2, r1, r3, lsl #2
   182b0:	bne	182c4 <close_stdout@@Base+0x5bc8>
   182b4:	b	182d8 <close_stdout@@Base+0x5bdc>
   182b8:	cmp	r0, r3
   182bc:	beq	182d4 <close_stdout@@Base+0x5bd8>
   182c0:	mov	r2, r3
   182c4:	ldr	r3, [r2, #-8]
   182c8:	cmp	r3, #0
   182cc:	bne	182b8 <close_stdout@@Base+0x5bbc>
   182d0:	bx	lr
   182d4:	sub	r2, r2, #8
   182d8:	ldr	ip, [r0, #-8]!
   182dc:	str	ip, [r2]
   182e0:	b	11278 <free@plt>
   182e4:	andeq	r2, r1, ip, lsl #1
   182e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182ec:	sub	sp, sp, #76	; 0x4c
   182f0:	ldr	r8, [pc, #524]	; 18504 <close_stdout@@Base+0x5e08>
   182f4:	mov	sl, r0
   182f8:	ldr	r3, [pc, #520]	; 18508 <close_stdout@@Base+0x5e0c>
   182fc:	add	r8, pc, r8
   18300:	ldr	r3, [r8, r3]
   18304:	str	r3, [sp, #4]
   18308:	ldr	r3, [r3]
   1830c:	str	r3, [sp, #68]	; 0x44
   18310:	bl	11338 <__ctype_get_mb_cur_max@plt>
   18314:	cmp	r0, #1
   18318:	bls	184b4 <close_stdout@@Base+0x5db8>
   1831c:	mov	r3, #0
   18320:	add	r7, sp, #16
   18324:	add	r9, sp, #40	; 0x28
   18328:	mov	fp, r3
   1832c:	mov	r4, sl
   18330:	mov	r6, r3
   18334:	mov	r5, #1
   18338:	str	r3, [sp, #16]
   1833c:	strb	r3, [sp, #24]
   18340:	str	sl, [sp, #28]
   18344:	strb	r3, [sp, #12]
   18348:	str	r3, [r7, #4]
   1834c:	ldrb	r2, [sp, #12]
   18350:	cmp	r2, #0
   18354:	bne	183cc <close_stdout@@Base+0x5cd0>
   18358:	ldr	r2, [pc, #428]	; 1850c <close_stdout@@Base+0x5e10>
   1835c:	ldrb	r3, [r4]
   18360:	ldr	r1, [r8, r2]
   18364:	and	r2, r3, #31
   18368:	lsr	r3, r3, #5
   1836c:	ldr	r3, [r1, r3, lsl #2]
   18370:	lsr	r3, r3, r2
   18374:	tst	r3, #1
   18378:	beq	183b8 <close_stdout@@Base+0x5cbc>
   1837c:	str	r5, [sp, #32]
   18380:	ldrb	r4, [r4]
   18384:	strb	r5, [sp, #36]	; 0x24
   18388:	cmp	r4, #0
   1838c:	strb	r5, [sp, #24]
   18390:	str	r4, [sp, #40]	; 0x28
   18394:	bne	18430 <close_stdout@@Base+0x5d34>
   18398:	mov	r0, fp
   1839c:	ldr	r1, [sp, #4]
   183a0:	ldr	r2, [sp, #68]	; 0x44
   183a4:	ldr	r3, [r1]
   183a8:	cmp	r2, r3
   183ac:	bne	184e0 <close_stdout@@Base+0x5de4>
   183b0:	add	sp, sp, #76	; 0x4c
   183b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183b8:	mov	r0, r7
   183bc:	bl	1129c <mbsinit@plt>
   183c0:	cmp	r0, #0
   183c4:	beq	184c0 <close_stdout@@Base+0x5dc4>
   183c8:	strb	r5, [sp, #12]
   183cc:	bl	11338 <__ctype_get_mb_cur_max@plt>
   183d0:	mov	r1, r0
   183d4:	mov	r0, r4
   183d8:	bl	14e4c <close_stdout@@Base+0x2750>
   183dc:	mov	r1, r4
   183e0:	mov	r3, r7
   183e4:	mov	r2, r0
   183e8:	mov	r0, r9
   183ec:	bl	1135c <mbrtowc@plt>
   183f0:	cmn	r0, #1
   183f4:	str	r0, [sp, #32]
   183f8:	beq	1844c <close_stdout@@Base+0x5d50>
   183fc:	cmn	r0, #2
   18400:	beq	1849c <close_stdout@@Base+0x5da0>
   18404:	cmp	r0, #0
   18408:	beq	1845c <close_stdout@@Base+0x5d60>
   1840c:	ldr	r4, [sp, #40]	; 0x28
   18410:	mov	r0, r7
   18414:	strb	r5, [sp, #36]	; 0x24
   18418:	bl	1129c <mbsinit@plt>
   1841c:	strb	r5, [sp, #24]
   18420:	cmp	r0, #0
   18424:	strbne	r6, [sp, #12]
   18428:	cmp	r4, #0
   1842c:	beq	18398 <close_stdout@@Base+0x5c9c>
   18430:	ldr	r4, [sp, #28]
   18434:	ldr	r3, [sp, #32]
   18438:	add	fp, fp, #1
   1843c:	strb	r6, [sp, #24]
   18440:	add	r4, r4, r3
   18444:	str	r4, [sp, #28]
   18448:	b	1834c <close_stdout@@Base+0x5c50>
   1844c:	str	r5, [sp, #32]
   18450:	strb	r6, [sp, #36]	; 0x24
   18454:	ldr	r4, [sp, #28]
   18458:	b	18434 <close_stdout@@Base+0x5d38>
   1845c:	ldr	r4, [sp, #28]
   18460:	str	r5, [sp, #32]
   18464:	ldrb	r3, [r4]
   18468:	cmp	r3, #0
   1846c:	bne	184e4 <close_stdout@@Base+0x5de8>
   18470:	ldr	r4, [sp, #40]	; 0x28
   18474:	cmp	r4, #0
   18478:	beq	18410 <close_stdout@@Base+0x5d14>
   1847c:	ldr	r0, [pc, #140]	; 18510 <close_stdout@@Base+0x5e14>
   18480:	mov	r2, #179	; 0xb3
   18484:	ldr	r1, [pc, #136]	; 18514 <close_stdout@@Base+0x5e18>
   18488:	ldr	r3, [pc, #136]	; 18518 <close_stdout@@Base+0x5e1c>
   1848c:	add	r0, pc, r0
   18490:	add	r1, pc, r1
   18494:	add	r3, pc, r3
   18498:	bl	1153c <__assert_fail@plt>
   1849c:	ldr	r4, [sp, #28]
   184a0:	mov	r0, r4
   184a4:	bl	113f8 <strlen@plt>
   184a8:	strb	r6, [sp, #36]	; 0x24
   184ac:	str	r0, [sp, #32]
   184b0:	b	18434 <close_stdout@@Base+0x5d38>
   184b4:	mov	r0, sl
   184b8:	bl	113f8 <strlen@plt>
   184bc:	b	1839c <close_stdout@@Base+0x5ca0>
   184c0:	ldr	r0, [pc, #84]	; 1851c <close_stdout@@Base+0x5e20>
   184c4:	mov	r2, #150	; 0x96
   184c8:	ldr	r1, [pc, #80]	; 18520 <close_stdout@@Base+0x5e24>
   184cc:	ldr	r3, [pc, #80]	; 18524 <close_stdout@@Base+0x5e28>
   184d0:	add	r0, pc, r0
   184d4:	add	r1, pc, r1
   184d8:	add	r3, pc, r3
   184dc:	bl	1153c <__assert_fail@plt>
   184e0:	bl	112cc <__stack_chk_fail@plt>
   184e4:	ldr	r0, [pc, #60]	; 18528 <close_stdout@@Base+0x5e2c>
   184e8:	mov	r2, #178	; 0xb2
   184ec:	ldr	r1, [pc, #56]	; 1852c <close_stdout@@Base+0x5e30>
   184f0:	ldr	r3, [pc, #56]	; 18530 <close_stdout@@Base+0x5e34>
   184f4:	add	r0, pc, r0
   184f8:	add	r1, pc, r1
   184fc:	add	r3, pc, r3
   18500:	bl	1153c <__assert_fail@plt>
   18504:	strdeq	r1, [r1], -ip
   18508:	andeq	r0, r0, r4, lsr r1
   1850c:	andeq	r0, r0, r0, lsr r1
   18510:	andeq	r0, r0, r0, lsl #20
   18514:	ldrdeq	r0, [r0], -r4
   18518:	andeq	r0, r0, ip, ror #28
   1851c:	andeq	r0, r0, ip, ror r9
   18520:	muleq	r0, r0, r9
   18524:	andeq	r0, r0, r8, lsr #28
   18528:	andeq	r0, r0, r0, lsl #19
   1852c:	andeq	r0, r0, ip, ror #18
   18530:	andeq	r0, r0, r4, lsl #28
   18534:	subs	r2, r1, #1
   18538:	bxeq	lr
   1853c:	bcc	18714 <close_stdout@@Base+0x6018>
   18540:	cmp	r0, r1
   18544:	bls	186f8 <close_stdout@@Base+0x5ffc>
   18548:	tst	r1, r2
   1854c:	beq	18704 <close_stdout@@Base+0x6008>
   18550:	clz	r3, r0
   18554:	clz	r2, r1
   18558:	sub	r3, r2, r3
   1855c:	rsbs	r3, r3, #31
   18560:	addne	r3, r3, r3, lsl #1
   18564:	mov	r2, #0
   18568:	addne	pc, pc, r3, lsl #2
   1856c:	nop	{0}
   18570:	cmp	r0, r1, lsl #31
   18574:	adc	r2, r2, r2
   18578:	subcs	r0, r0, r1, lsl #31
   1857c:	cmp	r0, r1, lsl #30
   18580:	adc	r2, r2, r2
   18584:	subcs	r0, r0, r1, lsl #30
   18588:	cmp	r0, r1, lsl #29
   1858c:	adc	r2, r2, r2
   18590:	subcs	r0, r0, r1, lsl #29
   18594:	cmp	r0, r1, lsl #28
   18598:	adc	r2, r2, r2
   1859c:	subcs	r0, r0, r1, lsl #28
   185a0:	cmp	r0, r1, lsl #27
   185a4:	adc	r2, r2, r2
   185a8:	subcs	r0, r0, r1, lsl #27
   185ac:	cmp	r0, r1, lsl #26
   185b0:	adc	r2, r2, r2
   185b4:	subcs	r0, r0, r1, lsl #26
   185b8:	cmp	r0, r1, lsl #25
   185bc:	adc	r2, r2, r2
   185c0:	subcs	r0, r0, r1, lsl #25
   185c4:	cmp	r0, r1, lsl #24
   185c8:	adc	r2, r2, r2
   185cc:	subcs	r0, r0, r1, lsl #24
   185d0:	cmp	r0, r1, lsl #23
   185d4:	adc	r2, r2, r2
   185d8:	subcs	r0, r0, r1, lsl #23
   185dc:	cmp	r0, r1, lsl #22
   185e0:	adc	r2, r2, r2
   185e4:	subcs	r0, r0, r1, lsl #22
   185e8:	cmp	r0, r1, lsl #21
   185ec:	adc	r2, r2, r2
   185f0:	subcs	r0, r0, r1, lsl #21
   185f4:	cmp	r0, r1, lsl #20
   185f8:	adc	r2, r2, r2
   185fc:	subcs	r0, r0, r1, lsl #20
   18600:	cmp	r0, r1, lsl #19
   18604:	adc	r2, r2, r2
   18608:	subcs	r0, r0, r1, lsl #19
   1860c:	cmp	r0, r1, lsl #18
   18610:	adc	r2, r2, r2
   18614:	subcs	r0, r0, r1, lsl #18
   18618:	cmp	r0, r1, lsl #17
   1861c:	adc	r2, r2, r2
   18620:	subcs	r0, r0, r1, lsl #17
   18624:	cmp	r0, r1, lsl #16
   18628:	adc	r2, r2, r2
   1862c:	subcs	r0, r0, r1, lsl #16
   18630:	cmp	r0, r1, lsl #15
   18634:	adc	r2, r2, r2
   18638:	subcs	r0, r0, r1, lsl #15
   1863c:	cmp	r0, r1, lsl #14
   18640:	adc	r2, r2, r2
   18644:	subcs	r0, r0, r1, lsl #14
   18648:	cmp	r0, r1, lsl #13
   1864c:	adc	r2, r2, r2
   18650:	subcs	r0, r0, r1, lsl #13
   18654:	cmp	r0, r1, lsl #12
   18658:	adc	r2, r2, r2
   1865c:	subcs	r0, r0, r1, lsl #12
   18660:	cmp	r0, r1, lsl #11
   18664:	adc	r2, r2, r2
   18668:	subcs	r0, r0, r1, lsl #11
   1866c:	cmp	r0, r1, lsl #10
   18670:	adc	r2, r2, r2
   18674:	subcs	r0, r0, r1, lsl #10
   18678:	cmp	r0, r1, lsl #9
   1867c:	adc	r2, r2, r2
   18680:	subcs	r0, r0, r1, lsl #9
   18684:	cmp	r0, r1, lsl #8
   18688:	adc	r2, r2, r2
   1868c:	subcs	r0, r0, r1, lsl #8
   18690:	cmp	r0, r1, lsl #7
   18694:	adc	r2, r2, r2
   18698:	subcs	r0, r0, r1, lsl #7
   1869c:	cmp	r0, r1, lsl #6
   186a0:	adc	r2, r2, r2
   186a4:	subcs	r0, r0, r1, lsl #6
   186a8:	cmp	r0, r1, lsl #5
   186ac:	adc	r2, r2, r2
   186b0:	subcs	r0, r0, r1, lsl #5
   186b4:	cmp	r0, r1, lsl #4
   186b8:	adc	r2, r2, r2
   186bc:	subcs	r0, r0, r1, lsl #4
   186c0:	cmp	r0, r1, lsl #3
   186c4:	adc	r2, r2, r2
   186c8:	subcs	r0, r0, r1, lsl #3
   186cc:	cmp	r0, r1, lsl #2
   186d0:	adc	r2, r2, r2
   186d4:	subcs	r0, r0, r1, lsl #2
   186d8:	cmp	r0, r1, lsl #1
   186dc:	adc	r2, r2, r2
   186e0:	subcs	r0, r0, r1, lsl #1
   186e4:	cmp	r0, r1
   186e8:	adc	r2, r2, r2
   186ec:	subcs	r0, r0, r1
   186f0:	mov	r0, r2
   186f4:	bx	lr
   186f8:	moveq	r0, #1
   186fc:	movne	r0, #0
   18700:	bx	lr
   18704:	clz	r2, r1
   18708:	rsb	r2, r2, #31
   1870c:	lsr	r0, r0, r2
   18710:	bx	lr
   18714:	cmp	r0, #0
   18718:	mvnne	r0, #0
   1871c:	b	18740 <close_stdout@@Base+0x6044>
   18720:	cmp	r1, #0
   18724:	beq	18714 <close_stdout@@Base+0x6018>
   18728:	push	{r0, r1, lr}
   1872c:	bl	18534 <close_stdout@@Base+0x5e38>
   18730:	pop	{r1, r2, lr}
   18734:	mul	r3, r2, r0
   18738:	sub	r1, r1, r3
   1873c:	bx	lr
   18740:	push	{r1, lr}
   18744:	mov	r0, #8
   18748:	bl	1120c <raise@plt>
   1874c:	pop	{r1, pc}
   18750:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   18754:	mov	r7, r0
   18758:	ldr	r6, [pc, #76]	; 187ac <close_stdout@@Base+0x60b0>
   1875c:	mov	r8, r1
   18760:	ldr	r5, [pc, #72]	; 187b0 <close_stdout@@Base+0x60b4>
   18764:	mov	r9, r2
   18768:	add	r6, pc, r6
   1876c:	bl	111c8 <fdopen@plt-0x20>
   18770:	add	r5, pc, r5
   18774:	rsb	r6, r5, r6
   18778:	asrs	r6, r6, #2
   1877c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   18780:	sub	r5, r5, #4
   18784:	mov	r4, #0
   18788:	add	r4, r4, #1
   1878c:	ldr	r3, [r5, #4]!
   18790:	mov	r0, r7
   18794:	mov	r1, r8
   18798:	mov	r2, r9
   1879c:	blx	r3
   187a0:	cmp	r4, r6
   187a4:	bne	18788 <close_stdout@@Base+0x608c>
   187a8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   187ac:	andeq	r1, r1, ip, asr #13
   187b0:	andeq	r1, r1, r0, asr #13
   187b4:	bx	lr
   187b8:	ldr	r3, [pc, #28]	; 187dc <close_stdout@@Base+0x60e0>
   187bc:	mov	r1, #0
   187c0:	ldr	r2, [pc, #24]	; 187e0 <close_stdout@@Base+0x60e4>
   187c4:	add	r3, pc, r3
   187c8:	ldr	r3, [r3, r2]
   187cc:	cmp	r3, #0
   187d0:	ldrne	r2, [r3]
   187d4:	moveq	r2, r3
   187d8:	b	1144c <__cxa_atexit@plt>
   187dc:	andeq	r1, r1, r4, lsr r8
   187e0:	andeq	r0, r0, ip, asr #2

Disassembly of section .fini:

000187e4 <.fini>:
   187e4:	push	{r3, lr}
   187e8:	pop	{r3, pc}
