
centos-preinstalled/sha1sum:     file format elf32-littlearm


Disassembly of section .init:

0001115c <_init@@Base>:
   1115c:	push	{r3, lr}
   11160:	bl	12674 <fscanf@plt+0x11ec>
   11164:	pop	{r3, pc}

Disassembly of section .plt:

00011168 <fileno@plt-0x14>:
   11168:	push	{lr}		; (str lr, [sp, #-4]!)
   1116c:	ldr	lr, [pc, #4]	; 11178 <_init@@Base+0x1c>
   11170:	add	lr, pc, lr
   11174:	ldr	pc, [lr, #8]!
   11178:	andeq	r6, r1, r8, lsl #29

0001117c <fileno@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #90112	; 0x16000
   11184:	ldr	pc, [ip, #3720]!	; 0xe88

00011188 <abort@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #90112	; 0x16000
   11190:	ldr	pc, [ip, #3712]!	; 0xe80

00011194 <memcmp@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #90112	; 0x16000
   1119c:	ldr	pc, [ip, #3704]!	; 0xe78

000111a0 <__libc_start_main@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #90112	; 0x16000
   111a8:	ldr	pc, [ip, #3696]!	; 0xe70

000111ac <__gmon_start__@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #90112	; 0x16000
   111b4:	ldr	pc, [ip, #3688]!	; 0xe68

000111b8 <fread_unlocked@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #90112	; 0x16000
   111c0:	ldr	pc, [ip, #3680]!	; 0xe60

000111c4 <__ctype_get_mb_cur_max@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #90112	; 0x16000
   111cc:	ldr	pc, [ip, #3672]!	; 0xe58

000111d0 <fclose@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #90112	; 0x16000
   111d8:	ldr	pc, [ip, #3664]!	; 0xe50

000111dc <getenv@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #90112	; 0x16000
   111e4:	ldr	pc, [ip, #3656]!	; 0xe48

000111e8 <__printf_chk@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #90112	; 0x16000
   111f0:	ldr	pc, [ip, #3648]!	; 0xe40

000111f4 <strchr@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #90112	; 0x16000
   111fc:	ldr	pc, [ip, #3640]!	; 0xe38

00011200 <__cxa_atexit@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #90112	; 0x16000
   11208:	ldr	pc, [ip, #3632]!	; 0xe30

0001120c <__fpending@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #90112	; 0x16000
   11214:	ldr	pc, [ip, #3624]!	; 0xe28

00011218 <calloc@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #90112	; 0x16000
   11220:	ldr	pc, [ip, #3616]!	; 0xe20

00011224 <__uflow@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #90112	; 0x16000
   1122c:	ldr	pc, [ip, #3608]!	; 0xe18

00011230 <memset@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #90112	; 0x16000
   11238:	ldr	pc, [ip, #3600]!	; 0xe10

0001123c <strrchr@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #90112	; 0x16000
   11244:	ldr	pc, [ip, #3592]!	; 0xe08

00011248 <ungetc@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #90112	; 0x16000
   11250:	ldr	pc, [ip, #3584]!	; 0xe00

00011254 <bindtextdomain@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #90112	; 0x16000
   1125c:	ldr	pc, [ip, #3576]!	; 0xdf8

00011260 <mbrtowc@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #90112	; 0x16000
   11268:	ldr	pc, [ip, #3568]!	; 0xdf0

0001126c <__overflow@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #90112	; 0x16000
   11274:	ldr	pc, [ip, #3560]!	; 0xde8

00011278 <SHA1_Init@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #90112	; 0x16000
   11280:	ldr	pc, [ip, #3552]!	; 0xde0

00011284 <_exit@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #90112	; 0x16000
   1128c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011290 <free@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #90112	; 0x16000
   11298:	ldr	pc, [ip, #3536]!	; 0xdd0

0001129c <getopt_long@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #90112	; 0x16000
   112a4:	ldr	pc, [ip, #3528]!	; 0xdc8

000112a8 <dcgettext@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #90112	; 0x16000
   112b0:	ldr	pc, [ip, #3520]!	; 0xdc0

000112b4 <fputs_unlocked@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #90112	; 0x16000
   112bc:	ldr	pc, [ip, #3512]!	; 0xdb8

000112c0 <fwrite_unlocked@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #90112	; 0x16000
   112c8:	ldr	pc, [ip, #3504]!	; 0xdb0

000112cc <fflush@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #90112	; 0x16000
   112d4:	ldr	pc, [ip, #3496]!	; 0xda8

000112d8 <strlen@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #90112	; 0x16000
   112e0:	ldr	pc, [ip, #3488]!	; 0xda0

000112e4 <posix_fadvise64@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #90112	; 0x16000
   112ec:	ldr	pc, [ip, #3480]!	; 0xd98

000112f0 <memcpy@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #90112	; 0x16000
   112f8:	ldr	pc, [ip, #3472]!	; 0xd90

000112fc <setlocale@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #90112	; 0x16000
   11304:	ldr	pc, [ip, #3464]!	; 0xd88

00011308 <fopen64@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #90112	; 0x16000
   11310:	ldr	pc, [ip, #3456]!	; 0xd80

00011314 <mbsinit@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #90112	; 0x16000
   1131c:	ldr	pc, [ip, #3448]!	; 0xd78

00011320 <__ctype_tolower_loc@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #90112	; 0x16000
   11328:	ldr	pc, [ip, #3440]!	; 0xd70

0001132c <strcpy@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #90112	; 0x16000
   11334:	ldr	pc, [ip, #3432]!	; 0xd68

00011338 <fseeko64@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #90112	; 0x16000
   11340:	ldr	pc, [ip, #3424]!	; 0xd60

00011344 <open64@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #90112	; 0x16000
   1134c:	ldr	pc, [ip, #3416]!	; 0xd58

00011350 <dcngettext@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #90112	; 0x16000
   11358:	ldr	pc, [ip, #3408]!	; 0xd50

0001135c <raise@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #90112	; 0x16000
   11364:	ldr	pc, [ip, #3400]!	; 0xd48

00011368 <fdopen@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #90112	; 0x16000
   11370:	ldr	pc, [ip, #3392]!	; 0xd40

00011374 <close@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #90112	; 0x16000
   1137c:	ldr	pc, [ip, #3384]!	; 0xd38

00011380 <fwrite@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #90112	; 0x16000
   11388:	ldr	pc, [ip, #3376]!	; 0xd30

0001138c <setvbuf@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #90112	; 0x16000
   11394:	ldr	pc, [ip, #3368]!	; 0xd28

00011398 <__ctype_b_loc@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #90112	; 0x16000
   113a0:	ldr	pc, [ip, #3360]!	; 0xd20

000113a4 <lseek64@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #90112	; 0x16000
   113ac:	ldr	pc, [ip, #3352]!	; 0xd18

000113b0 <malloc@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #90112	; 0x16000
   113b8:	ldr	pc, [ip, #3344]!	; 0xd10

000113bc <error@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #90112	; 0x16000
   113c4:	ldr	pc, [ip, #3336]!	; 0xd08

000113c8 <nl_langinfo@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #90112	; 0x16000
   113d0:	ldr	pc, [ip, #3328]!	; 0xd00

000113d4 <__stack_chk_fail@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #90112	; 0x16000
   113dc:	ldr	pc, [ip, #3320]!	; 0xcf8

000113e0 <__fprintf_chk@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #90112	; 0x16000
   113e8:	ldr	pc, [ip, #3312]!	; 0xcf0

000113ec <__getdelim@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #90112	; 0x16000
   113f4:	ldr	pc, [ip, #3304]!	; 0xce8

000113f8 <SHA1@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #90112	; 0x16000
   11400:	ldr	pc, [ip, #3296]!	; 0xce0

00011404 <textdomain@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #90112	; 0x16000
   1140c:	ldr	pc, [ip, #3288]!	; 0xcd8

00011410 <__freading@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #90112	; 0x16000
   11418:	ldr	pc, [ip, #3280]!	; 0xcd0

0001141c <fcntl@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #90112	; 0x16000
   11424:	ldr	pc, [ip, #3272]!	; 0xcc8

00011428 <strncmp@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #90112	; 0x16000
   11430:	ldr	pc, [ip, #3264]!	; 0xcc0

00011434 <realloc@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #90112	; 0x16000
   1143c:	ldr	pc, [ip, #3256]!	; 0xcb8

00011440 <SHA1_Update@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #90112	; 0x16000
   11448:	ldr	pc, [ip, #3248]!	; 0xcb0

0001144c <iswprint@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #90112	; 0x16000
   11454:	ldr	pc, [ip, #3240]!	; 0xca8

00011458 <strcmp@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #90112	; 0x16000
   11460:	ldr	pc, [ip, #3232]!	; 0xca0

00011464 <SHA1_Final@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #90112	; 0x16000
   1146c:	ldr	pc, [ip, #3224]!	; 0xc98

00011470 <exit@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #90112	; 0x16000
   11478:	ldr	pc, [ip, #3216]!	; 0xc90

0001147c <__errno_location@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #90112	; 0x16000
   11484:	ldr	pc, [ip, #3208]!	; 0xc88

00011488 <fscanf@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #90112	; 0x16000
   11490:	ldr	pc, [ip, #3200]!	; 0xc80

Disassembly of section .text:

00011494 <close_stdout@@Base-0x18c0>:
   11494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11498:	sub	sp, sp, #220	; 0xdc
   1149c:	ldr	sl, [pc, #4072]	; 1248c <fscanf@plt+0x1004>
   114a0:	mov	r4, #0
   114a4:	ldr	r3, [pc, #4068]	; 12490 <fscanf@plt+0x1008>
   114a8:	mov	r6, r1
   114ac:	add	sl, pc, sl
   114b0:	str	r0, [sp, #24]
   114b4:	str	r4, [sp, #28]
   114b8:	mvn	r5, #0
   114bc:	str	r4, [sp, #44]	; 0x2c
   114c0:	ldr	r3, [sl, r3]
   114c4:	ldr	r0, [r1]
   114c8:	str	r5, [sp, #16]
   114cc:	ldr	r3, [r3]
   114d0:	ldr	r7, [pc, #4028]	; 12494 <fscanf@plt+0x100c>
   114d4:	ldr	r5, [pc, #4028]	; 12498 <fscanf@plt+0x1010>
   114d8:	str	r3, [sp, #212]	; 0xd4
   114dc:	bl	131c0 <close_stdout@@Base+0x46c>
   114e0:	ldr	r1, [pc, #4020]	; 1249c <fscanf@plt+0x1014>
   114e4:	mov	r0, #6
   114e8:	add	r7, pc, r7
   114ec:	ldr	r4, [pc, #4012]	; 124a0 <fscanf@plt+0x1018>
   114f0:	add	r1, pc, r1
   114f4:	ldr	r9, [pc, #4008]	; 124a4 <fscanf@plt+0x101c>
   114f8:	bl	112fc <setlocale@plt>
   114fc:	ldr	r1, [pc, #4004]	; 124a8 <fscanf@plt+0x1020>
   11500:	mov	r0, r7
   11504:	ldr	r8, [pc, #4000]	; 124ac <fscanf@plt+0x1024>
   11508:	add	r1, pc, r1
   1150c:	add	r5, pc, r5
   11510:	bl	11254 <bindtextdomain@plt>
   11514:	mov	r0, r7
   11518:	bl	11404 <textdomain@plt>
   1151c:	ldr	r3, [pc, #3980]	; 124b0 <fscanf@plt+0x1028>
   11520:	ldr	r7, [pc, #3980]	; 124b4 <fscanf@plt+0x102c>
   11524:	add	r4, pc, r4
   11528:	add	r9, pc, r9
   1152c:	add	r8, pc, r8
   11530:	add	r7, pc, r7
   11534:	str	r7, [sp, #32]
   11538:	ldr	r0, [sl, r3]
   1153c:	bl	165e4 <close_stdout@@Base+0x3890>
   11540:	ldr	r0, [pc, #3952]	; 124b8 <fscanf@plt+0x1030>
   11544:	mov	r1, #0
   11548:	mov	r2, #1
   1154c:	mov	r3, r1
   11550:	ldr	r7, [pc, #3940]	; 124bc <fscanf@plt+0x1034>
   11554:	ldr	r0, [sl, r0]
   11558:	add	r7, pc, r7
   1155c:	str	r0, [sp, #40]	; 0x28
   11560:	ldr	r0, [r0]
   11564:	bl	1138c <setvbuf@plt>
   11568:	mov	fp, #0
   1156c:	ldr	r0, [sp, #24]
   11570:	str	fp, [sp]
   11574:	mov	r1, r6
   11578:	mov	r2, r5
   1157c:	mov	r3, r4
   11580:	bl	1129c <getopt_long@plt>
   11584:	cmn	r0, #1
   11588:	beq	116f8 <fscanf@plt+0x270>
   1158c:	cmp	r0, #116	; 0x74
   11590:	beq	116f0 <fscanf@plt+0x268>
   11594:	ble	115cc <fscanf@plt+0x144>
   11598:	movw	r3, #257	; 0x101
   1159c:	cmp	r0, r3
   115a0:	beq	116d4 <fscanf@plt+0x24c>
   115a4:	bgt	115f4 <fscanf@plt+0x16c>
   115a8:	cmp	r0, #119	; 0x77
   115ac:	beq	11638 <fscanf@plt+0x1b0>
   115b0:	cmp	r0, #256	; 0x100
   115b4:	bne	116cc <fscanf@plt+0x244>
   115b8:	mov	r3, #1
   115bc:	strb	fp, [r7, #2]
   115c0:	strb	fp, [r7, #3]
   115c4:	strb	r3, [r7, #1]
   115c8:	b	11568 <fscanf@plt+0xe0>
   115cc:	cmn	r0, #2
   115d0:	beq	116e8 <fscanf@plt+0x260>
   115d4:	ble	1164c <fscanf@plt+0x1c4>
   115d8:	cmp	r0, #98	; 0x62
   115dc:	beq	1162c <fscanf@plt+0x1a4>
   115e0:	cmp	r0, #99	; 0x63
   115e4:	bne	116cc <fscanf@plt+0x244>
   115e8:	mov	ip, #1
   115ec:	str	ip, [sp, #44]	; 0x2c
   115f0:	b	11568 <fscanf@plt+0xe0>
   115f4:	movw	r3, #258	; 0x102
   115f8:	cmp	r0, r3
   115fc:	beq	1161c <fscanf@plt+0x194>
   11600:	add	r3, r3, #1
   11604:	cmp	r0, r3
   11608:	bne	116cc <fscanf@plt+0x244>
   1160c:	mov	ip, #1
   11610:	str	ip, [sp, #28]
   11614:	str	ip, [sp, #16]
   11618:	b	11568 <fscanf@plt+0xe0>
   1161c:	ldr	ip, [sp, #32]
   11620:	mov	r3, #1
   11624:	strb	r3, [ip, #4]
   11628:	b	11568 <fscanf@plt+0xe0>
   1162c:	mov	ip, #1
   11630:	str	ip, [sp, #16]
   11634:	b	11568 <fscanf@plt+0xe0>
   11638:	mov	r3, #1
   1163c:	strb	fp, [r8, #1]
   11640:	strb	fp, [r8, #3]
   11644:	strb	r3, [r8, #2]
   11648:	b	11568 <fscanf@plt+0xe0>
   1164c:	cmn	r0, #3
   11650:	bne	116cc <fscanf@plt+0x244>
   11654:	ldr	r3, [pc, #3684]	; 124c0 <fscanf@plt+0x1038>
   11658:	ldr	r4, [sp, #40]	; 0x28
   1165c:	ldr	r1, [pc, #3680]	; 124c4 <fscanf@plt+0x103c>
   11660:	ldr	r3, [sl, r3]
   11664:	ldr	r2, [pc, #3676]	; 124c8 <fscanf@plt+0x1040>
   11668:	add	r1, pc, r1
   1166c:	ldr	r0, [r4]
   11670:	ldr	r3, [r3]
   11674:	add	r2, pc, r2
   11678:	ldr	ip, [pc, #3660]	; 124cc <fscanf@plt+0x1044>
   1167c:	stmib	sp, {r1, r2}
   11680:	ldr	r1, [pc, #3656]	; 124d0 <fscanf@plt+0x1048>
   11684:	add	ip, pc, ip
   11688:	ldr	r2, [pc, #3652]	; 124d4 <fscanf@plt+0x104c>
   1168c:	str	fp, [sp, #12]
   11690:	add	r1, pc, r1
   11694:	str	ip, [sp]
   11698:	add	r2, pc, r2
   1169c:	bl	14eb8 <close_stdout@@Base+0x2164>
   116a0:	mov	r0, fp
   116a4:	bl	11470 <exit@plt>
   116a8:	ldr	r1, [pc, #3624]	; 124d8 <fscanf@plt+0x1050>
   116ac:	mov	r2, #5
   116b0:	mov	r0, fp
   116b4:	add	r1, pc, r1
   116b8:	bl	112a8 <dcgettext@plt>
   116bc:	mov	r1, fp
   116c0:	mov	r2, r0
   116c4:	mov	r0, fp
   116c8:	bl	113bc <error@plt>
   116cc:	mov	r0, #1
   116d0:	bl	12a5c <fscanf@plt+0x15d4>
   116d4:	mov	r3, #1
   116d8:	strb	fp, [r9, #1]
   116dc:	strb	fp, [r9, #2]
   116e0:	strb	r3, [r9, #3]
   116e4:	b	11568 <fscanf@plt+0xe0>
   116e8:	mov	r0, fp
   116ec:	bl	12a5c <fscanf@plt+0x15d4>
   116f0:	str	fp, [sp, #16]
   116f4:	b	11568 <fscanf@plt+0xe0>
   116f8:	ldr	r4, [sp, #28]
   116fc:	mov	r1, #42	; 0x2a
   11700:	ldr	r5, [sp, #16]
   11704:	mov	r2, #40	; 0x28
   11708:	ldr	r3, [pc, #3532]	; 124dc <fscanf@plt+0x1054>
   1170c:	cmp	r5, fp
   11710:	movne	r4, #0
   11714:	andeq	r4, r4, #1
   11718:	add	r3, pc, r3
   1171c:	cmp	r4, fp
   11720:	str	r1, [r3, #8]
   11724:	str	r2, [r3, #12]
   11728:	bne	116a8 <fscanf@plt+0x220>
   1172c:	ldr	r7, [sp, #44]	; 0x2c
   11730:	ldr	ip, [sp, #28]
   11734:	ands	r5, r7, ip
   11738:	bne	117c4 <fscanf@plt+0x33c>
   1173c:	ldr	r2, [sp, #44]	; 0x2c
   11740:	ldr	r4, [sp, #16]
   11744:	cmp	r4, #0
   11748:	movlt	r2, #0
   1174c:	andge	r2, r2, #1
   11750:	cmp	r2, #0
   11754:	bne	12320 <fscanf@plt+0xe98>
   11758:	ldrb	r2, [r3, #1]
   1175c:	cmp	r2, #0
   11760:	beq	117f0 <fscanf@plt+0x368>
   11764:	ldr	r5, [sp, #44]	; 0x2c
   11768:	cmp	r5, #0
   1176c:	beq	123e4 <fscanf@plt+0xf5c>
   11770:	ldrb	r3, [r3, #3]
   11774:	cmp	r3, #0
   11778:	bne	11808 <fscanf@plt+0x380>
   1177c:	ldr	r3, [pc, #3420]	; 124e0 <fscanf@plt+0x1058>
   11780:	ldr	r4, [sp, #44]	; 0x2c
   11784:	add	r3, pc, r3
   11788:	eor	r2, r4, #1
   1178c:	ldrb	r3, [r3, #4]
   11790:	tst	r2, r3
   11794:	beq	11808 <fscanf@plt+0x380>
   11798:	ldr	r1, [pc, #3396]	; 124e4 <fscanf@plt+0x105c>
   1179c:	mov	r2, #5
   117a0:	mov	r0, #0
   117a4:	add	r1, pc, r1
   117a8:	bl	112a8 <dcgettext@plt>
   117ac:	mov	r2, r0
   117b0:	mov	r0, #0
   117b4:	mov	r1, r0
   117b8:	bl	113bc <error@plt>
   117bc:	mov	r0, #1
   117c0:	bl	12a5c <fscanf@plt+0x15d4>
   117c4:	ldr	r1, [pc, #3356]	; 124e8 <fscanf@plt+0x1060>
   117c8:	mov	r2, #5
   117cc:	mov	r0, r4
   117d0:	add	r1, pc, r1
   117d4:	bl	112a8 <dcgettext@plt>
   117d8:	mov	r1, r4
   117dc:	mov	r2, r0
   117e0:	mov	r0, r4
   117e4:	bl	113bc <error@plt>
   117e8:	mov	r0, #1
   117ec:	bl	12a5c <fscanf@plt+0x15d4>
   117f0:	ldrb	r2, [r3, #2]
   117f4:	cmp	r2, #0
   117f8:	beq	121dc <fscanf@plt+0xd54>
   117fc:	ldr	r7, [sp, #44]	; 0x2c
   11800:	cmp	r7, #0
   11804:	beq	12454 <fscanf@plt+0xfcc>
   11808:	ldr	r5, [sp, #16]
   1180c:	ldr	r3, [pc, #3288]	; 124ec <fscanf@plt+0x1064>
   11810:	cmn	r5, #1
   11814:	ldr	ip, [sp, #24]
   11818:	moveq	r5, #0
   1181c:	str	r5, [sp, #16]
   11820:	ldr	r3, [sl, r3]
   11824:	str	r3, [sp, #88]	; 0x58
   11828:	ldr	r3, [r3]
   1182c:	cmp	r3, ip
   11830:	beq	1243c <fscanf@plt+0xfb4>
   11834:	ldr	r4, [sp, #16]
   11838:	mov	r5, #1
   1183c:	str	sl, [sp, #128]	; 0x80
   11840:	cmp	r4, #0
   11844:	ldr	sl, [sp, #48]	; 0x30
   11848:	str	r5, [sp, #120]	; 0x78
   1184c:	movne	r4, #42	; 0x2a
   11850:	moveq	r4, #32
   11854:	uxtb	ip, r4
   11858:	str	r4, [sp, #144]	; 0x90
   1185c:	ldr	r7, [pc, #3212]	; 124f0 <fscanf@plt+0x1068>
   11860:	ldr	r4, [pc, #3212]	; 124f4 <fscanf@plt+0x106c>
   11864:	ldr	r5, [pc, #3212]	; 124f8 <fscanf@plt+0x1070>
   11868:	add	r7, pc, r7
   1186c:	add	r4, pc, r4
   11870:	str	r7, [sp, #132]	; 0x84
   11874:	add	r5, pc, r5
   11878:	str	ip, [sp, #148]	; 0x94
   1187c:	str	r4, [sp, #136]	; 0x88
   11880:	str	r5, [sp, #140]	; 0x8c
   11884:	str	r6, [sp, #124]	; 0x7c
   11888:	ldr	r6, [sp, #88]	; 0x58
   1188c:	ldr	r7, [sp, #24]
   11890:	ldr	r3, [r6]
   11894:	cmp	r7, r3
   11898:	ble	122f8 <fscanf@plt+0xe70>
   1189c:	ldr	r7, [sp, #124]	; 0x7c
   118a0:	ldr	r6, [sp, #44]	; 0x2c
   118a4:	ldr	r3, [r7, r3, lsl #2]
   118a8:	cmp	r6, #0
   118ac:	str	r3, [sp, #68]	; 0x44
   118b0:	beq	11cac <fscanf@plt+0x824>
   118b4:	ldrb	r3, [r3]
   118b8:	cmp	r3, #45	; 0x2d
   118bc:	bne	12040 <fscanf@plt+0xbb8>
   118c0:	ldr	ip, [sp, #68]	; 0x44
   118c4:	ldrb	r0, [ip, #1]
   118c8:	cmp	r0, #0
   118cc:	bne	12040 <fscanf@plt+0xbb8>
   118d0:	ldr	r3, [pc, #3108]	; 124fc <fscanf@plt+0x1074>
   118d4:	mov	r2, #5
   118d8:	ldr	r1, [pc, #3104]	; 12500 <fscanf@plt+0x1078>
   118dc:	mov	r4, #1
   118e0:	add	r3, pc, r3
   118e4:	add	r1, pc, r1
   118e8:	strb	r4, [r3]
   118ec:	bl	112a8 <dcgettext@plt>
   118f0:	str	r4, [sp, #92]	; 0x5c
   118f4:	ldr	r3, [pc, #3080]	; 12504 <fscanf@plt+0x107c>
   118f8:	ldr	r4, [sp, #128]	; 0x80
   118fc:	str	r0, [sp, #68]	; 0x44
   11900:	ldr	r3, [r4, r3]
   11904:	ldr	r9, [r3]
   11908:	mov	r6, #0
   1190c:	mov	r7, #0
   11910:	strd	r6, [sp, #80]	; 0x50
   11914:	add	ip, sp, #160	; 0xa0
   11918:	strd	r6, [sp, #112]	; 0x70
   1191c:	mov	r4, #1
   11920:	strd	r6, [sp, #96]	; 0x60
   11924:	mov	r5, #0
   11928:	strd	r6, [sp, #32]
   1192c:	mov	r3, #0
   11930:	strd	r6, [sp, #16]
   11934:	add	r7, sp, #156	; 0x9c
   11938:	ldr	r6, [pc, #3016]	; 12508 <fscanf@plt+0x1080>
   1193c:	str	r7, [sp, #48]	; 0x30
   11940:	add	r6, pc, r6
   11944:	str	ip, [sp, #52]	; 0x34
   11948:	str	r6, [sp, #64]	; 0x40
   1194c:	ldr	r7, [pc, #3000]	; 1250c <fscanf@plt+0x1084>
   11950:	ldr	ip, [pc, #3000]	; 12510 <fscanf@plt+0x1088>
   11954:	ldr	r6, [pc, #3000]	; 12514 <fscanf@plt+0x108c>
   11958:	add	r7, pc, r7
   1195c:	add	ip, pc, ip
   11960:	str	r3, [sp, #156]	; 0x9c
   11964:	add	r6, pc, r6
   11968:	str	r3, [sp, #160]	; 0xa0
   1196c:	str	r7, [sp, #72]	; 0x48
   11970:	str	ip, [sp, #104]	; 0x68
   11974:	str	r6, [sp, #108]	; 0x6c
   11978:	add	r0, sp, #156	; 0x9c
   1197c:	add	r1, sp, #160	; 0xa0
   11980:	mov	r2, #10
   11984:	mov	r3, r9
   11988:	bl	113ec <__getdelim@plt>
   1198c:	subs	fp, r0, #0
   11990:	ble	11e44 <fscanf@plt+0x9bc>
   11994:	ldr	r7, [sp, #156]	; 0x9c
   11998:	ldrb	r2, [r7]
   1199c:	cmp	r2, #35	; 0x23
   119a0:	beq	11b44 <fscanf@plt+0x6bc>
   119a4:	add	r2, r7, fp
   119a8:	ldrb	r2, [r2, #-1]
   119ac:	cmp	r2, #10
   119b0:	subeq	fp, fp, #1
   119b4:	moveq	r2, #0
   119b8:	strbeq	r2, [r7, fp]
   119bc:	ldreq	r7, [sp, #156]	; 0x9c
   119c0:	ldrb	r2, [r7]
   119c4:	cmp	r2, #32
   119c8:	cmpne	r2, #9
   119cc:	movne	r6, #0
   119d0:	moveq	r6, #1
   119d4:	bne	119f4 <fscanf@plt+0x56c>
   119d8:	mov	r1, r7
   119dc:	mov	r6, #0
   119e0:	ldrb	r2, [r1, #1]!
   119e4:	add	r6, r6, #1
   119e8:	cmp	r2, #32
   119ec:	cmpne	r2, #9
   119f0:	beq	119e0 <fscanf@plt+0x558>
   119f4:	cmp	r2, #92	; 0x5c
   119f8:	ldr	r1, [sp, #64]	; 0x40
   119fc:	addeq	r6, r6, #1
   11a00:	mov	r2, #4
   11a04:	add	r8, r7, r6
   11a08:	moveq	ip, #1
   11a0c:	movne	r3, #0
   11a10:	streq	ip, [sp, #56]	; 0x38
   11a14:	mov	r0, r8
   11a18:	strne	r3, [sp, #56]	; 0x38
   11a1c:	bl	11428 <strncmp@plt>
   11a20:	cmp	r0, #0
   11a24:	bne	11a48 <fscanf@plt+0x5c0>
   11a28:	ldrb	r2, [r8, #4]
   11a2c:	cmp	r2, #32
   11a30:	addeq	r6, r6, #1
   11a34:	add	r2, r6, #4
   11a38:	ldrb	r1, [r7, r2]
   11a3c:	cmp	r1, #40	; 0x28
   11a40:	beq	12180 <fscanf@plt+0xcf8>
   11a44:	add	r8, r7, r6
   11a48:	ldr	r2, [pc, #2760]	; 12518 <fscanf@plt+0x1090>
   11a4c:	rsb	r1, r6, fp
   11a50:	ldrb	lr, [r8]
   11a54:	mov	r0, r8
   11a58:	add	r2, pc, r2
   11a5c:	ldr	ip, [r2, #8]
   11a60:	cmp	lr, #92	; 0x5c
   11a64:	addeq	ip, ip, #1
   11a68:	cmp	r1, ip
   11a6c:	bcc	11b8c <fscanf@plt+0x704>
   11a70:	ldr	r2, [r2, #12]
   11a74:	add	r6, r6, r2
   11a78:	ldrb	r2, [r7, r6]
   11a7c:	cmp	r2, #9
   11a80:	cmpne	r2, #32
   11a84:	moveq	r2, #0
   11a88:	movne	r2, #1
   11a8c:	bne	11b90 <fscanf@plt+0x708>
   11a90:	add	r1, r6, #1
   11a94:	strb	r2, [r7, r6]
   11a98:	rsb	r2, r1, fp
   11a9c:	cmp	r2, #1
   11aa0:	beq	11c8c <fscanf@plt+0x804>
   11aa4:	ldrb	r2, [r7, r1]
   11aa8:	cmp	r2, #42	; 0x2a
   11aac:	cmpne	r2, #32
   11ab0:	moveq	r2, #0
   11ab4:	movne	r2, #1
   11ab8:	bne	11c8c <fscanf@plt+0x804>
   11abc:	ldr	r0, [pc, #2648]	; 1251c <fscanf@plt+0x1094>
   11ac0:	add	r0, pc, r0
   11ac4:	ldr	ip, [r0]
   11ac8:	cmp	ip, #1
   11acc:	strne	r2, [r0]
   11ad0:	addne	r1, r6, #2
   11ad4:	ldr	r3, [sp, #56]	; 0x38
   11ad8:	add	r7, r7, r1
   11adc:	str	r7, [sp, #76]	; 0x4c
   11ae0:	cmp	r3, #0
   11ae4:	moveq	sl, r8
   11ae8:	bne	1201c <fscanf@plt+0xb94>
   11aec:	ldr	r6, [sp, #92]	; 0x5c
   11af0:	cmp	r6, #0
   11af4:	beq	11b98 <fscanf@plt+0x710>
   11af8:	ldr	r7, [sp, #76]	; 0x4c
   11afc:	ldrb	r3, [r7]
   11b00:	cmp	r3, #45	; 0x2d
   11b04:	bne	11b98 <fscanf@plt+0x710>
   11b08:	ldrb	r3, [r7, #1]
   11b0c:	cmp	r3, #0
   11b10:	bne	11b98 <fscanf@plt+0x710>
   11b14:	ldr	ip, [sp, #72]	; 0x48
   11b18:	ldrd	r6, [sp, #16]
   11b1c:	ldrb	r3, [ip, #2]
   11b20:	adds	r6, r6, #1
   11b24:	adc	r7, r7, #0
   11b28:	strd	r6, [sp, #16]
   11b2c:	cmp	r3, #0
   11b30:	bne	11c58 <fscanf@plt+0x7d0>
   11b34:	ldrd	r6, [sp, #32]
   11b38:	adds	r6, r6, #1
   11b3c:	adc	r7, r7, #0
   11b40:	strd	r6, [sp, #32]
   11b44:	ldr	r3, [r9]
   11b48:	ands	r6, r3, #48	; 0x30
   11b4c:	bne	11e44 <fscanf@plt+0x9bc>
   11b50:	adds	r4, r4, #1
   11b54:	adc	r5, r5, #0
   11b58:	orrs	r7, r4, r5
   11b5c:	bne	11978 <fscanf@plt+0x4f0>
   11b60:	ldr	r1, [pc, #2488]	; 12520 <fscanf@plt+0x1098>
   11b64:	mov	r0, r6
   11b68:	mov	r2, #5
   11b6c:	add	r1, pc, r1
   11b70:	bl	112a8 <dcgettext@plt>
   11b74:	mov	r1, r6
   11b78:	ldr	r3, [sp, #68]	; 0x44
   11b7c:	mov	r2, r0
   11b80:	mov	r0, #1
   11b84:	bl	113bc <error@plt>
   11b88:	b	11978 <fscanf@plt+0x4f0>
   11b8c:	mov	r0, sl
   11b90:	mov	sl, r0
   11b94:	b	11b14 <fscanf@plt+0x68c>
   11b98:	ldr	r3, [pc, #2436]	; 12524 <fscanf@plt+0x109c>
   11b9c:	add	r3, pc, r3
   11ba0:	ldr	r6, [r3, #12]
   11ba4:	cmp	r6, #0
   11ba8:	beq	1234c <fscanf@plt+0xec4>
   11bac:	bl	11398 <__ctype_b_loc@plt>
   11bb0:	add	r1, sl, r6
   11bb4:	mov	r3, sl
   11bb8:	ldr	r0, [r0]
   11bbc:	ldrb	r2, [r3], #1
   11bc0:	lsl	r2, r2, #1
   11bc4:	ldrh	r2, [r0, r2]
   11bc8:	tst	r2, #4096	; 0x1000
   11bcc:	beq	11b14 <fscanf@plt+0x68c>
   11bd0:	cmp	r3, r1
   11bd4:	mov	r2, r3
   11bd8:	bne	11bbc <fscanf@plt+0x734>
   11bdc:	ldrb	r8, [r2]
   11be0:	cmp	r8, #0
   11be4:	bne	11b14 <fscanf@plt+0x68c>
   11be8:	ldrd	r2, [sp, #96]	; 0x60
   11bec:	add	r6, sp, #188	; 0xbc
   11bf0:	ldr	r0, [sp, #76]	; 0x4c
   11bf4:	adds	r2, r2, #1
   11bf8:	mov	r1, r6
   11bfc:	adc	r3, r3, #0
   11c00:	strd	r2, [sp, #96]	; 0x60
   11c04:	bl	128fc <fscanf@plt+0x1474>
   11c08:	cmp	r0, #0
   11c0c:	bne	12084 <fscanf@plt+0xbfc>
   11c10:	ldr	r3, [pc, #2320]	; 12528 <fscanf@plt+0x10a0>
   11c14:	ldrd	r6, [sp, #112]	; 0x70
   11c18:	add	r3, pc, r3
   11c1c:	adds	r6, r6, #1
   11c20:	ldrb	r3, [r3, #1]
   11c24:	adc	r7, r7, #0
   11c28:	strd	r6, [sp, #112]	; 0x70
   11c2c:	cmp	r3, #0
   11c30:	bne	11b44 <fscanf@plt+0x6bc>
   11c34:	ldr	r1, [pc, #2288]	; 1252c <fscanf@plt+0x10a4>
   11c38:	mov	r2, #5
   11c3c:	add	r1, pc, r1
   11c40:	bl	112a8 <dcgettext@plt>
   11c44:	ldr	r2, [sp, #76]	; 0x4c
   11c48:	mov	r1, r0
   11c4c:	mov	r0, #1
   11c50:	bl	111e8 <__printf_chk@plt>
   11c54:	b	11b44 <fscanf@plt+0x6bc>
   11c58:	ldr	r1, [sp, #104]	; 0x68
   11c5c:	mov	r2, #5
   11c60:	mov	r0, #0
   11c64:	bl	112a8 <dcgettext@plt>
   11c68:	ldr	r7, [sp, #108]	; 0x6c
   11c6c:	strd	r4, [sp]
   11c70:	ldr	r3, [sp, #68]	; 0x44
   11c74:	str	r7, [sp, #8]
   11c78:	mov	r2, r0
   11c7c:	mov	r0, #0
   11c80:	mov	r1, r0
   11c84:	bl	113bc <error@plt>
   11c88:	b	11b34 <fscanf@plt+0x6ac>
   11c8c:	ldr	r2, [pc, #2204]	; 12530 <fscanf@plt+0x10a8>
   11c90:	add	r2, pc, r2
   11c94:	ldr	ip, [r2]
   11c98:	cmp	ip, #0
   11c9c:	movne	r0, #1
   11ca0:	strne	r0, [r2]
   11ca4:	bne	11ad4 <fscanf@plt+0x64c>
   11ca8:	b	11b90 <fscanf@plt+0x708>
   11cac:	add	r4, sp, #164	; 0xa4
   11cb0:	ldr	r0, [sp, #68]	; 0x44
   11cb4:	mov	r1, r4
   11cb8:	bl	128fc <fscanf@plt+0x1474>
   11cbc:	cmp	r0, #0
   11cc0:	ldreq	r4, [sp, #44]	; 0x2c
   11cc4:	streq	r4, [sp, #120]	; 0x78
   11cc8:	beq	11e30 <fscanf@plt+0x9a8>
   11ccc:	ldr	r0, [sp, #68]	; 0x44
   11cd0:	mov	r1, #92	; 0x5c
   11cd4:	bl	111f4 <strchr@plt>
   11cd8:	cmp	r0, #0
   11cdc:	beq	123b8 <fscanf@plt+0xf30>
   11ce0:	ldr	r5, [sp, #28]
   11ce4:	cmp	r5, #0
   11ce8:	beq	12228 <fscanf@plt+0xda0>
   11cec:	ldr	ip, [sp, #40]	; 0x28
   11cf0:	ldr	r0, [ip]
   11cf4:	ldr	r3, [r0, #20]
   11cf8:	ldr	r2, [r0, #24]
   11cfc:	cmp	r3, r2
   11d00:	bcs	1247c <fscanf@plt+0xff4>
   11d04:	mov	r5, #1
   11d08:	add	r2, r3, r5
   11d0c:	str	r2, [r0, #20]
   11d10:	mov	r2, #92	; 0x5c
   11d14:	strb	r2, [r3]
   11d18:	ldr	r6, [sp, #40]	; 0x28
   11d1c:	mov	r1, #1
   11d20:	ldr	r0, [pc, #2060]	; 12534 <fscanf@plt+0x10ac>
   11d24:	mov	r2, #4
   11d28:	ldr	r3, [r6]
   11d2c:	add	r0, pc, r0
   11d30:	bl	112c0 <fwrite_unlocked@plt>
   11d34:	ldr	r0, [pc, #2044]	; 12538 <fscanf@plt+0x10b0>
   11d38:	mov	r2, #2
   11d3c:	ldr	r3, [r6]
   11d40:	mov	r1, #1
   11d44:	add	r0, pc, r0
   11d48:	bl	112c0 <fwrite_unlocked@plt>
   11d4c:	ldr	r0, [sp, #68]	; 0x44
   11d50:	mov	r1, r5
   11d54:	bl	12818 <fscanf@plt+0x1390>
   11d58:	ldr	r0, [pc, #2012]	; 1253c <fscanf@plt+0x10b4>
   11d5c:	mov	r1, #1
   11d60:	mov	r2, #4
   11d64:	add	r0, pc, r0
   11d68:	ldr	r3, [r6]
   11d6c:	bl	112c0 <fwrite_unlocked@plt>
   11d70:	mov	r6, #0
   11d74:	ldr	r7, [sp, #132]	; 0x84
   11d78:	ldr	r8, [sp, #136]	; 0x88
   11d7c:	b	11d94 <fscanf@plt+0x90c>
   11d80:	mov	r0, #1
   11d84:	ldrb	r2, [r4, r6]
   11d88:	mov	r1, r8
   11d8c:	add	r6, r6, r0
   11d90:	bl	111e8 <__printf_chk@plt>
   11d94:	ldr	r3, [r7, #12]
   11d98:	cmp	r6, r3, lsr #1
   11d9c:	bcc	11d80 <fscanf@plt+0x8f8>
   11da0:	ldr	ip, [sp, #28]
   11da4:	cmp	ip, #0
   11da8:	bne	11e08 <fscanf@plt+0x980>
   11dac:	ldr	r4, [sp, #40]	; 0x28
   11db0:	ldr	r0, [r4]
   11db4:	ldr	r2, [r0, #24]
   11db8:	ldr	r3, [r0, #20]
   11dbc:	cmp	r3, r2
   11dc0:	addcc	r2, r3, #1
   11dc4:	strcc	r2, [r0, #20]
   11dc8:	movcc	r2, #32
   11dcc:	strbcc	r2, [r3]
   11dd0:	bcs	125bc <fscanf@plt+0x1134>
   11dd4:	ldr	r6, [sp, #40]	; 0x28
   11dd8:	ldr	r0, [r6]
   11ddc:	ldr	r3, [r0, #20]
   11de0:	ldr	r2, [r0, #24]
   11de4:	cmp	r3, r2
   11de8:	addcc	r2, r3, #1
   11dec:	strcc	r2, [r0, #20]
   11df0:	ldrcc	r7, [sp, #148]	; 0x94
   11df4:	strbcc	r7, [r3]
   11df8:	bcs	125b0 <fscanf@plt+0x1128>
   11dfc:	ldr	r0, [sp, #68]	; 0x44
   11e00:	mov	r1, r5
   11e04:	bl	12818 <fscanf@plt+0x1390>
   11e08:	ldr	ip, [sp, #40]	; 0x28
   11e0c:	ldr	r0, [ip]
   11e10:	ldr	r2, [r0, #24]
   11e14:	ldr	r3, [r0, #20]
   11e18:	cmp	r3, r2
   11e1c:	addcc	r2, r3, #1
   11e20:	strcc	r2, [r0, #20]
   11e24:	movcc	r2, #10
   11e28:	strbcc	r2, [r3]
   11e2c:	bcs	1262c <fscanf@plt+0x11a4>
   11e30:	ldr	r5, [sp, #88]	; 0x58
   11e34:	ldr	r3, [r5]
   11e38:	add	r3, r3, #1
   11e3c:	str	r3, [r5]
   11e40:	b	11888 <fscanf@plt+0x400>
   11e44:	ldr	r0, [sp, #156]	; 0x9c
   11e48:	bl	11290 <free@plt>
   11e4c:	ldr	r3, [r9]
   11e50:	tst	r3, #32
   11e54:	bne	122c8 <fscanf@plt+0xe40>
   11e58:	ldr	r7, [sp, #92]	; 0x5c
   11e5c:	cmp	r7, #0
   11e60:	beq	12258 <fscanf@plt+0xdd0>
   11e64:	ldrd	r4, [sp, #96]	; 0x60
   11e68:	orrs	r5, r4, r5
   11e6c:	beq	12290 <fscanf@plt+0xe08>
   11e70:	ldr	r3, [pc, #1736]	; 12540 <fscanf@plt+0x10b8>
   11e74:	add	r3, pc, r3
   11e78:	ldrb	r3, [r3, #1]
   11e7c:	cmp	r3, #0
   11e80:	bne	12140 <fscanf@plt+0xcb8>
   11e84:	ldrd	r6, [sp, #16]
   11e88:	orrs	r7, r6, r7
   11e8c:	beq	11f04 <fscanf@plt+0xa7c>
   11e90:	ldrd	r4, [sp, #16]
   11e94:	mov	r3, #0
   11e98:	mvn	r2, #0
   11e9c:	cmp	r5, r3
   11ea0:	cmpeq	r4, r2
   11ea4:	ldrls	r3, [sp, #16]
   11ea8:	bls	11ecc <fscanf@plt+0xa44>
   11eac:	mov	r0, r4
   11eb0:	mov	r1, r5
   11eb4:	movw	r2, #16960	; 0x4240
   11eb8:	mov	r3, #0
   11ebc:	movt	r2, #15
   11ec0:	bl	15bfc <close_stdout@@Base+0x2ea8>
   11ec4:	add	r2, r2, #999424	; 0xf4000
   11ec8:	add	r3, r2, #576	; 0x240
   11ecc:	mov	r2, #5
   11ed0:	ldr	r1, [pc, #1644]	; 12544 <fscanf@plt+0x10bc>
   11ed4:	str	r2, [sp]
   11ed8:	mov	r0, #0
   11edc:	ldr	r2, [pc, #1636]	; 12548 <fscanf@plt+0x10c0>
   11ee0:	add	r1, pc, r1
   11ee4:	add	r2, pc, r2
   11ee8:	bl	11350 <dcngettext@plt>
   11eec:	ldrd	r6, [sp, #16]
   11ef0:	strd	r6, [sp]
   11ef4:	mov	r2, r0
   11ef8:	mov	r0, #0
   11efc:	mov	r1, r0
   11f00:	bl	113bc <error@plt>
   11f04:	ldrd	r4, [sp, #112]	; 0x70
   11f08:	orrs	r5, r4, r5
   11f0c:	beq	11f84 <fscanf@plt+0xafc>
   11f10:	ldrd	r6, [sp, #112]	; 0x70
   11f14:	mov	r3, #0
   11f18:	mvn	r2, #0
   11f1c:	cmp	r7, r3
   11f20:	cmpeq	r6, r2
   11f24:	ldrls	r3, [sp, #112]	; 0x70
   11f28:	bls	11f4c <fscanf@plt+0xac4>
   11f2c:	mov	r0, r6
   11f30:	mov	r1, r7
   11f34:	movw	r2, #16960	; 0x4240
   11f38:	mov	r3, #0
   11f3c:	movt	r2, #15
   11f40:	bl	15bfc <close_stdout@@Base+0x2ea8>
   11f44:	add	r2, r2, #999424	; 0xf4000
   11f48:	add	r3, r2, #576	; 0x240
   11f4c:	mov	r2, #5
   11f50:	ldr	r1, [pc, #1524]	; 1254c <fscanf@plt+0x10c4>
   11f54:	str	r2, [sp]
   11f58:	mov	r0, #0
   11f5c:	ldr	r2, [pc, #1516]	; 12550 <fscanf@plt+0x10c8>
   11f60:	add	r1, pc, r1
   11f64:	add	r2, pc, r2
   11f68:	bl	11350 <dcngettext@plt>
   11f6c:	ldrd	r4, [sp, #112]	; 0x70
   11f70:	strd	r4, [sp]
   11f74:	mov	r2, r0
   11f78:	mov	r0, #0
   11f7c:	mov	r1, r0
   11f80:	bl	113bc <error@plt>
   11f84:	ldrd	r6, [sp, #80]	; 0x50
   11f88:	orrs	r7, r6, r7
   11f8c:	beq	1214c <fscanf@plt+0xcc4>
   11f90:	ldrd	r6, [sp, #80]	; 0x50
   11f94:	mov	r3, #0
   11f98:	mvn	r2, #0
   11f9c:	cmp	r7, r3
   11fa0:	cmpeq	r6, r2
   11fa4:	ldrls	r3, [sp, #80]	; 0x50
   11fa8:	bls	11fcc <fscanf@plt+0xb44>
   11fac:	mov	r0, r6
   11fb0:	mov	r1, r7
   11fb4:	movw	r2, #16960	; 0x4240
   11fb8:	mov	r3, #0
   11fbc:	movt	r2, #15
   11fc0:	bl	15bfc <close_stdout@@Base+0x2ea8>
   11fc4:	add	r2, r2, #999424	; 0xf4000
   11fc8:	add	r3, r2, #576	; 0x240
   11fcc:	mov	r2, #5
   11fd0:	ldr	r1, [pc, #1404]	; 12554 <fscanf@plt+0x10cc>
   11fd4:	str	r2, [sp]
   11fd8:	mov	r0, #0
   11fdc:	ldr	r2, [pc, #1396]	; 12558 <fscanf@plt+0x10d0>
   11fe0:	add	r1, pc, r1
   11fe4:	add	r2, pc, r2
   11fe8:	bl	11350 <dcngettext@plt>
   11fec:	ldrd	r4, [sp, #80]	; 0x50
   11ff0:	strd	r4, [sp]
   11ff4:	mov	r2, r0
   11ff8:	mov	r0, #0
   11ffc:	mov	r1, r0
   12000:	bl	113bc <error@plt>
   12004:	mov	r9, #0
   12008:	ldr	r6, [sp, #120]	; 0x78
   1200c:	and	r9, r9, r6
   12010:	uxtb	r9, r9
   12014:	str	r9, [sp, #120]	; 0x78
   12018:	b	11e30 <fscanf@plt+0x9a8>
   1201c:	rsb	r1, r1, fp
   12020:	mov	r0, r7
   12024:	bl	1276c <fscanf@plt+0x12e4>
   12028:	mov	sl, r8
   1202c:	adds	r0, r0, #0
   12030:	movne	r0, #1
   12034:	cmp	r0, #0
   12038:	bne	11aec <fscanf@plt+0x664>
   1203c:	b	11b14 <fscanf@plt+0x68c>
   12040:	ldr	r1, [pc, #1300]	; 1255c <fscanf@plt+0x10d4>
   12044:	ldr	r0, [sp, #68]	; 0x44
   12048:	add	r1, pc, r1
   1204c:	bl	13124 <close_stdout@@Base+0x3d0>
   12050:	subs	r9, r0, #0
   12054:	movne	r5, #0
   12058:	strne	r5, [sp, #92]	; 0x5c
   1205c:	bne	11908 <fscanf@plt+0x480>
   12060:	bl	1147c <__errno_location@plt>
   12064:	ldr	r2, [pc, #1268]	; 12560 <fscanf@plt+0x10d8>
   12068:	add	r2, pc, r2
   1206c:	mov	r3, r0
   12070:	mov	r0, r9
   12074:	ldr	r1, [r3]
   12078:	ldr	r3, [sp, #68]	; 0x44
   1207c:	bl	113bc <error@plt>
   12080:	b	12008 <fscanf@plt+0xb80>
   12084:	ldr	r3, [pc, #1240]	; 12564 <fscanf@plt+0x10dc>
   12088:	add	fp, sl, #1
   1208c:	strd	r4, [sp, #56]	; 0x38
   12090:	add	r3, pc, r3
   12094:	mov	r4, fp
   12098:	mov	fp, r6
   1209c:	ldr	r6, [sp, #140]	; 0x8c
   120a0:	ldr	r7, [r3, #12]
   120a4:	lsr	r7, r7, #1
   120a8:	b	120e8 <fscanf@plt+0xc60>
   120ac:	bl	11320 <__ctype_tolower_loc@plt>
   120b0:	ldrb	lr, [r4, #-1]
   120b4:	ldrb	r3, [fp, r8]
   120b8:	ldrb	ip, [r6, r3, lsr #4]
   120bc:	ldr	r2, [r0]
   120c0:	ldr	r0, [r2, lr, lsl #2]
   120c4:	cmp	r0, ip
   120c8:	bne	125c8 <fscanf@plt+0x1140>
   120cc:	ldrb	r0, [r4], #2
   120d0:	and	r3, r3, #15
   120d4:	ldrb	r3, [r6, r3]
   120d8:	ldr	r2, [r2, r0, lsl #2]
   120dc:	cmp	r2, r3
   120e0:	bne	125c8 <fscanf@plt+0x1140>
   120e4:	add	r8, r8, #1
   120e8:	cmp	r8, r7
   120ec:	bne	120ac <fscanf@plt+0xc24>
   120f0:	ldr	r3, [pc, #1136]	; 12568 <fscanf@plt+0x10e0>
   120f4:	ldrd	r4, [sp, #56]	; 0x38
   120f8:	add	r3, pc, r3
   120fc:	ldrb	r2, [r3, #1]
   12100:	cmp	r2, #0
   12104:	bne	11b44 <fscanf@plt+0x6bc>
   12108:	ldrb	r0, [r3, #3]
   1210c:	cmp	r0, #0
   12110:	bne	11b44 <fscanf@plt+0x6bc>
   12114:	ldr	r1, [pc, #1104]	; 1256c <fscanf@plt+0x10e4>
   12118:	mov	r2, #5
   1211c:	add	r1, pc, r1
   12120:	bl	112a8 <dcgettext@plt>
   12124:	ldr	r1, [pc, #1092]	; 12570 <fscanf@plt+0x10e8>
   12128:	ldr	r2, [sp, #76]	; 0x4c
   1212c:	add	r1, pc, r1
   12130:	mov	r3, r0
   12134:	mov	r0, #1
   12138:	bl	111e8 <__printf_chk@plt>
   1213c:	b	11b44 <fscanf@plt+0x6bc>
   12140:	ldrd	r6, [sp, #80]	; 0x50
   12144:	orrs	r7, r6, r7
   12148:	bne	12004 <fscanf@plt+0xb7c>
   1214c:	ldrd	r4, [sp, #112]	; 0x70
   12150:	orrs	r5, r4, r5
   12154:	bne	12004 <fscanf@plt+0xb7c>
   12158:	ldr	r3, [pc, #1044]	; 12574 <fscanf@plt+0x10ec>
   1215c:	add	r3, pc, r3
   12160:	ldrb	r3, [r3, #4]
   12164:	cmp	r3, #0
   12168:	beq	12178 <fscanf@plt+0xcf0>
   1216c:	ldrd	r4, [sp, #32]
   12170:	orrs	r5, r4, r5
   12174:	bne	12004 <fscanf@plt+0xb7c>
   12178:	mov	r9, #1
   1217c:	b	12008 <fscanf@plt+0xb80>
   12180:	rsb	r3, r2, fp
   12184:	cmp	r3, #1
   12188:	ldreq	r7, [sp, #76]	; 0x4c
   1218c:	moveq	r0, #0
   12190:	beq	121d4 <fscanf@plt+0xd4c>
   12194:	add	r6, r6, #5
   12198:	sub	r8, r3, #2
   1219c:	add	r7, r7, r6
   121a0:	b	121b8 <fscanf@plt+0xd30>
   121a4:	ldrb	r3, [r7, r8]
   121a8:	add	r6, r7, r8
   121ac:	cmp	r3, #41	; 0x29
   121b0:	beq	12358 <fscanf@plt+0xed0>
   121b4:	sub	r8, r8, #1
   121b8:	cmp	r8, #0
   121bc:	bne	121a4 <fscanf@plt+0xd1c>
   121c0:	ldrb	r3, [r7]
   121c4:	cmp	r3, #41	; 0x29
   121c8:	ldrne	r7, [sp, #76]	; 0x4c
   121cc:	movne	r0, r8
   121d0:	beq	12354 <fscanf@plt+0xecc>
   121d4:	str	r7, [sp, #76]	; 0x4c
   121d8:	b	12034 <fscanf@plt+0xbac>
   121dc:	ldrb	r3, [r3, #3]
   121e0:	cmp	r3, #0
   121e4:	beq	1177c <fscanf@plt+0x2f4>
   121e8:	ldr	ip, [sp, #44]	; 0x2c
   121ec:	cmp	ip, #0
   121f0:	bne	11808 <fscanf@plt+0x380>
   121f4:	ldr	r1, [pc, #892]	; 12578 <fscanf@plt+0x10f0>
   121f8:	mov	r0, ip
   121fc:	add	r1, pc, r1
   12200:	mov	r2, #5
   12204:	bl	112a8 <dcgettext@plt>
   12208:	mov	r2, r0
   1220c:	ldr	r0, [sp, #44]	; 0x2c
   12210:	mov	r1, r0
   12214:	bl	113bc <error@plt>
   12218:	mov	r0, #1
   1221c:	bl	12a5c <fscanf@plt+0x15d4>
   12220:	cmp	r5, #0
   12224:	beq	11d70 <fscanf@plt+0x8e8>
   12228:	ldr	r7, [sp, #40]	; 0x28
   1222c:	ldr	r0, [r7]
   12230:	ldr	r3, [r0, #20]
   12234:	ldr	r2, [r0, #24]
   12238:	cmp	r3, r2
   1223c:	bcs	1261c <fscanf@plt+0x1194>
   12240:	mov	r5, #1
   12244:	add	r2, r3, r5
   12248:	str	r2, [r0, #20]
   1224c:	mov	r2, #92	; 0x5c
   12250:	strb	r2, [r3]
   12254:	b	11d70 <fscanf@plt+0x8e8>
   12258:	mov	r0, r9
   1225c:	bl	15234 <close_stdout@@Base+0x24e0>
   12260:	cmp	r0, #0
   12264:	beq	11e64 <fscanf@plt+0x9dc>
   12268:	bl	1147c <__errno_location@plt>
   1226c:	ldr	r2, [pc, #776]	; 1257c <fscanf@plt+0x10f4>
   12270:	add	r2, pc, r2
   12274:	mov	r3, r0
   12278:	ldr	r0, [sp, #92]	; 0x5c
   1227c:	ldr	r1, [r3]
   12280:	ldr	r3, [sp, #68]	; 0x44
   12284:	bl	113bc <error@plt>
   12288:	ldr	r9, [sp, #92]	; 0x5c
   1228c:	b	12008 <fscanf@plt+0xb80>
   12290:	ldr	r1, [pc, #744]	; 12580 <fscanf@plt+0x10f8>
   12294:	mov	r2, #5
   12298:	mov	r0, #0
   1229c:	add	r1, pc, r1
   122a0:	bl	112a8 <dcgettext@plt>
   122a4:	ldr	ip, [pc, #728]	; 12584 <fscanf@plt+0x10fc>
   122a8:	ldr	r3, [sp, #68]	; 0x44
   122ac:	add	ip, pc, ip
   122b0:	str	ip, [sp]
   122b4:	mov	r2, r0
   122b8:	mov	r0, #0
   122bc:	mov	r1, r0
   122c0:	bl	113bc <error@plt>
   122c4:	b	12004 <fscanf@plt+0xb7c>
   122c8:	ldr	r1, [pc, #696]	; 12588 <fscanf@plt+0x1100>
   122cc:	mov	r2, #5
   122d0:	mov	r0, #0
   122d4:	mov	r9, #0
   122d8:	add	r1, pc, r1
   122dc:	bl	112a8 <dcgettext@plt>
   122e0:	ldr	r3, [sp, #68]	; 0x44
   122e4:	mov	r2, r0
   122e8:	mov	r0, #0
   122ec:	mov	r1, r0
   122f0:	bl	113bc <error@plt>
   122f4:	b	12008 <fscanf@plt+0xb80>
   122f8:	ldr	r3, [pc, #652]	; 1258c <fscanf@plt+0x1104>
   122fc:	ldr	sl, [sp, #128]	; 0x80
   12300:	add	r3, pc, r3
   12304:	ldrb	r3, [r3]
   12308:	cmp	r3, #0
   1230c:	bne	123f4 <fscanf@plt+0xf6c>
   12310:	ldr	ip, [sp, #120]	; 0x78
   12314:	rsbs	r0, ip, #1
   12318:	movcc	r0, #0
   1231c:	bl	11470 <exit@plt>
   12320:	ldr	r1, [pc, #616]	; 12590 <fscanf@plt+0x1108>
   12324:	mov	r2, #5
   12328:	mov	r0, r5
   1232c:	add	r1, pc, r1
   12330:	bl	112a8 <dcgettext@plt>
   12334:	mov	r1, r5
   12338:	mov	r2, r0
   1233c:	mov	r0, r5
   12340:	bl	113bc <error@plt>
   12344:	mov	r0, #1
   12348:	bl	12a5c <fscanf@plt+0x15d4>
   1234c:	mov	r2, sl
   12350:	b	11bdc <fscanf@plt+0x754>
   12354:	mov	r6, r7
   12358:	ldr	ip, [sp, #56]	; 0x38
   1235c:	cmp	ip, #0
   12360:	bne	12464 <fscanf@plt+0xfdc>
   12364:	mov	r3, #0
   12368:	add	r8, r8, #1
   1236c:	strb	r3, [r6]
   12370:	b	12378 <fscanf@plt+0xef0>
   12374:	add	r8, r8, #1
   12378:	ldrb	r3, [r7, r8]
   1237c:	cmp	r3, #32
   12380:	cmpne	r3, #9
   12384:	movne	r0, #0
   12388:	moveq	r0, #1
   1238c:	beq	12374 <fscanf@plt+0xeec>
   12390:	cmp	r3, #61	; 0x3d
   12394:	bne	121d4 <fscanf@plt+0xd4c>
   12398:	add	sl, r7, r8
   1239c:	ldrb	r3, [sl, #1]
   123a0:	add	sl, sl, #1
   123a4:	cmp	r3, #32
   123a8:	cmpne	r3, #9
   123ac:	beq	1239c <fscanf@plt+0xf14>
   123b0:	mov	r0, #1
   123b4:	b	121d4 <fscanf@plt+0xd4c>
   123b8:	ldr	r0, [sp, #68]	; 0x44
   123bc:	mov	r1, #10
   123c0:	bl	111f4 <strchr@plt>
   123c4:	ldr	r7, [sp, #28]
   123c8:	adds	r5, r0, #0
   123cc:	movne	r5, #1
   123d0:	cmp	r7, #0
   123d4:	beq	12220 <fscanf@plt+0xd98>
   123d8:	cmp	r5, #0
   123dc:	beq	11d18 <fscanf@plt+0x890>
   123e0:	b	11cec <fscanf@plt+0x864>
   123e4:	ldr	r1, [pc, #424]	; 12594 <fscanf@plt+0x110c>
   123e8:	mov	r0, r5
   123ec:	add	r1, pc, r1
   123f0:	b	12200 <fscanf@plt+0xd78>
   123f4:	ldr	r3, [pc, #264]	; 12504 <fscanf@plt+0x107c>
   123f8:	ldr	r3, [sl, r3]
   123fc:	ldr	r0, [r3]
   12400:	bl	15234 <close_stdout@@Base+0x24e0>
   12404:	cmn	r0, #1
   12408:	bne	12310 <fscanf@plt+0xe88>
   1240c:	bl	1147c <__errno_location@plt>
   12410:	ldr	r1, [pc, #384]	; 12598 <fscanf@plt+0x1110>
   12414:	mov	r2, #5
   12418:	add	r1, pc, r1
   1241c:	ldr	r4, [r0]
   12420:	mov	r0, #0
   12424:	bl	112a8 <dcgettext@plt>
   12428:	mov	r1, r4
   1242c:	mov	r2, r0
   12430:	mov	r0, #1
   12434:	bl	113bc <error@plt>
   12438:	b	12310 <fscanf@plt+0xe88>
   1243c:	ldr	r2, [pc, #344]	; 1259c <fscanf@plt+0x1114>
   12440:	add	ip, ip, #1
   12444:	str	ip, [sp, #24]
   12448:	add	r2, pc, r2
   1244c:	str	r2, [r6, r3, lsl #2]
   12450:	b	11834 <fscanf@plt+0x3ac>
   12454:	ldr	r1, [pc, #324]	; 125a0 <fscanf@plt+0x1118>
   12458:	mov	r0, r7
   1245c:	add	r1, pc, r1
   12460:	b	12200 <fscanf@plt+0xd78>
   12464:	mov	r0, r7
   12468:	mov	r1, r8
   1246c:	bl	1276c <fscanf@plt+0x12e4>
   12470:	cmp	r0, #0
   12474:	bne	12364 <fscanf@plt+0xedc>
   12478:	b	121d4 <fscanf@plt+0xd4c>
   1247c:	mov	r1, #92	; 0x5c
   12480:	mov	r5, #1
   12484:	bl	1126c <__overflow@plt>
   12488:	b	11d18 <fscanf@plt+0x890>
   1248c:	andeq	r6, r1, ip, asr #22
   12490:	andeq	r0, r0, r8, lsr #2
   12494:	andeq	r5, r0, ip, lsr #12
   12498:	andeq	r5, r0, r8, lsl r7
   1249c:	andeq	r5, r0, ip, lsl #9
   124a0:	andeq	r6, r1, r0, lsl #18
   124a4:	andeq	r6, r1, r4, ror ip
   124a8:	ldrdeq	r5, [r0], -r0
   124ac:	andeq	r6, r1, r0, ror ip
   124b0:	andeq	r0, r0, ip, lsr r1
   124b4:	andeq	r6, r1, ip, ror #24
   124b8:	andeq	r0, r0, r0, asr #2
   124bc:	andeq	r6, r1, r4, asr #24
   124c0:	andeq	r0, r0, ip, asr #2
   124c4:	muleq	r0, ip, r5
   124c8:	andeq	r5, r0, r0, lsr #11
   124cc:	andeq	r5, r0, r0, ror r5
   124d0:	andeq	r5, r0, ip, asr r5
   124d4:	andeq	r5, r0, r8, ror r4
   124d8:	andeq	r5, r0, r8, ror r5
   124dc:	andeq	r6, r1, r4, lsl #21
   124e0:	andeq	r6, r1, r8, lsl sl
   124e4:	strdeq	r5, [r0], -r4
   124e8:	andeq	r5, r0, r0, lsl #9
   124ec:	andeq	r0, r0, ip, lsl r1
   124f0:	andeq	r6, r1, r4, lsr r9
   124f4:	andeq	r5, r0, r4, ror #14
   124f8:	andeq	r4, r0, r4, lsr #27
   124fc:			; <UNDEFINED> instruction: 0x000168bc
   12500:	strdeq	r5, [r0], -r8
   12504:	andeq	r0, r0, r4, lsr r1
   12508:	muleq	r0, ip, sp
   1250c:	andeq	r6, r1, r4, asr #16
   12510:	andeq	r5, r0, ip, lsr #9
   12514:	andeq	r4, r0, r8, ror sp
   12518:	andeq	r6, r1, r4, asr #14
   1251c:	andeq	r6, r1, ip, lsl #13
   12520:	andeq	r5, r0, r0, lsl #5
   12524:	andeq	r6, r1, r0, lsl #12
   12528:	andeq	r6, r1, r4, lsl #11
   1252c:	strdeq	r5, [r0], -ip
   12530:			; <UNDEFINED> instruction: 0x000164bc
   12534:			; <UNDEFINED> instruction: 0x000049b0
   12538:	andeq	r5, r0, r0, lsl #5
   1253c:	andeq	r5, r0, r4, ror #4
   12540:	andeq	r6, r1, r8, lsr #6
   12544:	andeq	r4, r0, ip, asr #31
   12548:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1254c:	andeq	r4, r0, r8, lsr #31
   12550:	ldrdeq	r4, [r0], -r0
   12554:	andeq	r4, r0, r4, lsl #31
   12558:			; <UNDEFINED> instruction: 0x00004fb0
   1255c:	andeq	r4, r0, r8, ror #11
   12560:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   12564:	andeq	r6, r1, ip, lsl #2
   12568:	andeq	r6, r1, r4, lsr #1
   1256c:	andeq	r4, r0, r8, asr #26
   12570:	andeq	r4, r0, r0, lsr sp
   12574:	andeq	r6, r1, r0, asr #32
   12578:	andeq	r4, r0, ip, asr fp
   1257c:	andeq	r4, r0, ip, asr #27
   12580:	ldrdeq	r4, [r0], -ip
   12584:	andeq	r4, r0, r0, lsr r4
   12588:	muleq	r0, r0, fp
   1258c:	muleq	r1, ip, lr
   12590:	andeq	r4, r0, r0, ror #18
   12594:	andeq	r4, r0, ip, ror #17
   12598:	andeq	r4, r0, r4, asr #19
   1259c:	muleq	r0, r0, r9
   125a0:			; <UNDEFINED> instruction: 0x000048bc
   125a4:	andeq	r5, r1, ip, asr #23
   125a8:	andeq	r4, r0, ip, asr r8
   125ac:	andeq	r4, r0, r4, asr r8
   125b0:	ldr	r1, [sp, #144]	; 0x90
   125b4:	bl	1126c <__overflow@plt>
   125b8:	b	11dfc <fscanf@plt+0x974>
   125bc:	mov	r1, #32
   125c0:	bl	1126c <__overflow@plt>
   125c4:	b	11dd4 <fscanf@plt+0x94c>
   125c8:	ldr	r3, [pc, #-44]	; 125a4 <fscanf@plt+0x111c>
   125cc:	ldrd	r6, [sp, #80]	; 0x50
   125d0:	add	r3, pc, r3
   125d4:	ldrd	r4, [sp, #56]	; 0x38
   125d8:	adds	r6, r6, #1
   125dc:	ldrb	r0, [r3, #1]
   125e0:	adc	r7, r7, #0
   125e4:	strd	r6, [sp, #80]	; 0x50
   125e8:	cmp	r0, #0
   125ec:	bne	11b44 <fscanf@plt+0x6bc>
   125f0:	ldr	r1, [pc, #-80]	; 125a8 <fscanf@plt+0x1120>
   125f4:	mov	r2, #5
   125f8:	add	r1, pc, r1
   125fc:	bl	112a8 <dcgettext@plt>
   12600:	ldr	r1, [pc, #-92]	; 125ac <fscanf@plt+0x1124>
   12604:	ldr	r2, [sp, #76]	; 0x4c
   12608:	add	r1, pc, r1
   1260c:	mov	r3, r0
   12610:	mov	r0, #1
   12614:	bl	111e8 <__printf_chk@plt>
   12618:	b	11b44 <fscanf@plt+0x6bc>
   1261c:	mov	r1, #92	; 0x5c
   12620:	mov	r5, #1
   12624:	bl	1126c <__overflow@plt>
   12628:	b	11d70 <fscanf@plt+0x8e8>
   1262c:	mov	r1, #10
   12630:	bl	1126c <__overflow@plt>
   12634:	b	11e30 <fscanf@plt+0x9a8>
   12638:	mov	fp, #0
   1263c:	mov	lr, #0
   12640:	pop	{r1}		; (ldr r1, [sp], #4)
   12644:	mov	r2, sp
   12648:	push	{r2}		; (str r2, [sp, #-4]!)
   1264c:	push	{r0}		; (str r0, [sp, #-4]!)
   12650:	ldr	ip, [pc, #16]	; 12668 <fscanf@plt+0x11e0>
   12654:	push	{ip}		; (str ip, [sp, #-4]!)
   12658:	ldr	r0, [pc, #12]	; 1266c <fscanf@plt+0x11e4>
   1265c:	ldr	r3, [pc, #12]	; 12670 <fscanf@plt+0x11e8>
   12660:	bl	111a0 <__libc_start_main@plt>
   12664:	bl	11188 <abort@plt>
   12668:	andeq	r6, r1, r0, ror #11
   1266c:	muleq	r1, r4, r4
   12670:	andeq	r6, r1, ip, ror r5
   12674:	ldr	r3, [pc, #20]	; 12690 <fscanf@plt+0x1208>
   12678:	ldr	r2, [pc, #20]	; 12694 <fscanf@plt+0x120c>
   1267c:	add	r3, pc, r3
   12680:	ldr	r2, [r3, r2]
   12684:	cmp	r2, #0
   12688:	bxeq	lr
   1268c:	b	111ac <__gmon_start__@plt>
   12690:	andeq	r5, r1, ip, ror r9
   12694:	andeq	r0, r0, r4, lsl r1
   12698:	push	{r3, lr}
   1269c:	movw	r0, #33184	; 0x81a0
   126a0:	ldr	r3, [pc, #36]	; 126cc <fscanf@plt+0x1244>
   126a4:	movt	r0, #2
   126a8:	rsb	r3, r0, r3
   126ac:	cmp	r3, #6
   126b0:	popls	{r3, pc}
   126b4:	movw	r3, #0
   126b8:	movt	r3, #0
   126bc:	cmp	r3, #0
   126c0:	popeq	{r3, pc}
   126c4:	blx	r3
   126c8:	pop	{r3, pc}
   126cc:	andeq	r8, r2, r3, lsr #3
   126d0:	push	{r3, lr}
   126d4:	movw	r0, #33184	; 0x81a0
   126d8:	movw	r3, #33184	; 0x81a0
   126dc:	movt	r0, #2
   126e0:	movt	r3, #2
   126e4:	rsb	r3, r0, r3
   126e8:	asr	r3, r3, #2
   126ec:	add	r3, r3, r3, lsr #31
   126f0:	asrs	r1, r3, #1
   126f4:	popeq	{r3, pc}
   126f8:	movw	r2, #0
   126fc:	movt	r2, #0
   12700:	cmp	r2, #0
   12704:	popeq	{r3, pc}
   12708:	blx	r2
   1270c:	pop	{r3, pc}
   12710:	push	{r4, lr}
   12714:	movw	r4, #33184	; 0x81a0
   12718:	movt	r4, #2
   1271c:	ldrb	r3, [r4]
   12720:	cmp	r3, #0
   12724:	popne	{r4, pc}
   12728:	bl	12698 <fscanf@plt+0x1210>
   1272c:	mov	r3, #1
   12730:	strb	r3, [r4]
   12734:	pop	{r4, pc}
   12738:	movw	r0, #32296	; 0x7e28
   1273c:	movt	r0, #2
   12740:	push	{r3, lr}
   12744:	ldr	r3, [r0]
   12748:	cmp	r3, #0
   1274c:	beq	12764 <fscanf@plt+0x12dc>
   12750:	movw	r3, #0
   12754:	movt	r3, #0
   12758:	cmp	r3, #0
   1275c:	beq	12764 <fscanf@plt+0x12dc>
   12760:	blx	r3
   12764:	pop	{r3, lr}
   12768:	b	126d0 <fscanf@plt+0x1248>
   1276c:	cmp	r1, #0
   12770:	push	{r4, r5, r6}
   12774:	beq	127ec <fscanf@plt+0x1364>
   12778:	add	ip, r0, #1
   1277c:	sub	r5, r1, #1
   12780:	mov	r3, #0
   12784:	mov	r6, #10
   12788:	ldrb	r2, [r0, r3]
   1278c:	cmp	r2, #0
   12790:	beq	127f4 <fscanf@plt+0x136c>
   12794:	cmp	r2, #92	; 0x5c
   12798:	mov	r4, ip
   1279c:	bne	127c8 <fscanf@plt+0x1340>
   127a0:	cmp	r5, r3
   127a4:	add	r3, r3, #1
   127a8:	beq	1280c <fscanf@plt+0x1384>
   127ac:	ldrb	r2, [r0, r3]
   127b0:	cmp	r2, #92	; 0x5c
   127b4:	beq	12800 <fscanf@plt+0x1378>
   127b8:	cmp	r2, #110	; 0x6e
   127bc:	bne	1280c <fscanf@plt+0x1384>
   127c0:	strb	r6, [ip, #-1]
   127c4:	b	127cc <fscanf@plt+0x1344>
   127c8:	strb	r2, [ip, #-1]
   127cc:	add	r3, r3, #1
   127d0:	add	ip, ip, #1
   127d4:	cmp	r1, r3
   127d8:	bhi	12788 <fscanf@plt+0x1300>
   127dc:	add	r1, r0, r1
   127e0:	cmp	r4, r1
   127e4:	movcc	r3, #0
   127e8:	strbcc	r3, [r4]
   127ec:	pop	{r4, r5, r6}
   127f0:	bx	lr
   127f4:	mov	r0, r2
   127f8:	pop	{r4, r5, r6}
   127fc:	bx	lr
   12800:	strb	r2, [ip, #-1]
   12804:	mov	r4, ip
   12808:	b	127cc <fscanf@plt+0x1344>
   1280c:	mov	r0, #0
   12810:	pop	{r4, r5, r6}
   12814:	bx	lr
   12818:	cmp	r1, #0
   1281c:	ldr	r2, [pc, #200]	; 128ec <fscanf@plt+0x1464>
   12820:	push	{r3, r4, r5, r6, r7, lr}
   12824:	add	r2, pc, r2
   12828:	mov	r4, r0
   1282c:	beq	128d8 <fscanf@plt+0x1450>
   12830:	ldrb	r3, [r0]
   12834:	cmp	r3, #0
   12838:	popeq	{r3, r4, r5, r6, r7, pc}
   1283c:	ldr	r1, [pc, #172]	; 128f0 <fscanf@plt+0x1468>
   12840:	ldr	r7, [pc, #172]	; 128f4 <fscanf@plt+0x146c>
   12844:	ldr	r6, [pc, #172]	; 128f8 <fscanf@plt+0x1470>
   12848:	add	r7, pc, r7
   1284c:	ldr	r5, [r2, r1]
   12850:	add	r6, pc, r6
   12854:	b	1286c <fscanf@plt+0x13e4>
   12858:	ldr	r3, [r5]
   1285c:	bl	112c0 <fwrite_unlocked@plt>
   12860:	ldrb	r3, [r4, #1]!
   12864:	cmp	r3, #0
   12868:	beq	128d4 <fscanf@plt+0x144c>
   1286c:	cmp	r3, #10
   12870:	beq	128b4 <fscanf@plt+0x142c>
   12874:	cmp	r3, #92	; 0x5c
   12878:	mov	r0, r6
   1287c:	mov	r1, #1
   12880:	mov	r2, #2
   12884:	beq	12858 <fscanf@plt+0x13d0>
   12888:	ldr	r0, [r5]
   1288c:	ldr	r1, [r0, #20]
   12890:	ldr	r2, [r0, #24]
   12894:	add	ip, r1, #1
   12898:	cmp	r1, r2
   1289c:	strcc	ip, [r0, #20]
   128a0:	strbcc	r3, [r1]
   128a4:	bcc	12860 <fscanf@plt+0x13d8>
   128a8:	mov	r1, r3
   128ac:	bl	1126c <__overflow@plt>
   128b0:	b	12860 <fscanf@plt+0x13d8>
   128b4:	ldr	r3, [r5]
   128b8:	mov	r0, r7
   128bc:	mov	r1, #1
   128c0:	mov	r2, #2
   128c4:	bl	112c0 <fwrite_unlocked@plt>
   128c8:	ldrb	r3, [r4, #1]!
   128cc:	cmp	r3, #0
   128d0:	bne	1286c <fscanf@plt+0x13e4>
   128d4:	pop	{r3, r4, r5, r6, r7, pc}
   128d8:	ldr	r3, [pc, #16]	; 128f0 <fscanf@plt+0x1468>
   128dc:	ldr	r3, [r2, r3]
   128e0:	ldr	r1, [r3]
   128e4:	pop	{r3, r4, r5, r6, r7, lr}
   128e8:	b	112b4 <fputs_unlocked@plt>
   128ec:	ldrdeq	r5, [r1], -r4
   128f0:	andeq	r0, r0, r0, asr #2
   128f4:	andeq	r3, r0, r0, ror #27
   128f8:	ldrdeq	r3, [r0], -ip
   128fc:	push	{r3, r4, r5, r6, r7, lr}
   12900:	mov	r5, r0
   12904:	ldrb	r3, [r0]
   12908:	mov	r7, r1
   1290c:	ldr	r6, [pc, #300]	; 12a40 <fscanf@plt+0x15b8>
   12910:	cmp	r3, #45	; 0x2d
   12914:	add	r6, pc, r6
   12918:	beq	12984 <fscanf@plt+0x14fc>
   1291c:	ldr	r1, [pc, #288]	; 12a44 <fscanf@plt+0x15bc>
   12920:	mov	r0, r5
   12924:	add	r1, pc, r1
   12928:	bl	13124 <close_stdout@@Base+0x3d0>
   1292c:	subs	r4, r0, #0
   12930:	beq	12a1c <fscanf@plt+0x1594>
   12934:	mov	r1, #2
   12938:	bl	130e8 <close_stdout@@Base+0x394>
   1293c:	mov	r1, r7
   12940:	mov	r0, r4
   12944:	bl	12f38 <close_stdout@@Base+0x1e4>
   12948:	subs	r7, r0, #0
   1294c:	bne	129d4 <fscanf@plt+0x154c>
   12950:	mov	r0, r4
   12954:	bl	15234 <close_stdout@@Base+0x24e0>
   12958:	cmp	r0, #0
   1295c:	beq	129cc <fscanf@plt+0x1544>
   12960:	bl	1147c <__errno_location@plt>
   12964:	ldr	r2, [pc, #220]	; 12a48 <fscanf@plt+0x15c0>
   12968:	mov	r3, r5
   1296c:	add	r2, pc, r2
   12970:	ldr	r1, [r0]
   12974:	mov	r0, r7
   12978:	bl	113bc <error@plt>
   1297c:	mov	r0, r7
   12980:	pop	{r3, r4, r5, r6, r7, pc}
   12984:	ldrb	r3, [r0, #1]
   12988:	cmp	r3, #0
   1298c:	bne	1291c <fscanf@plt+0x1494>
   12990:	ldr	r2, [pc, #180]	; 12a4c <fscanf@plt+0x15c4>
   12994:	mov	r0, #1
   12998:	ldr	r3, [pc, #176]	; 12a50 <fscanf@plt+0x15c8>
   1299c:	mov	r1, #2
   129a0:	add	r2, pc, r2
   129a4:	strb	r0, [r2]
   129a8:	ldr	r6, [r6, r3]
   129ac:	ldr	r4, [r6]
   129b0:	mov	r0, r4
   129b4:	bl	130e8 <close_stdout@@Base+0x394>
   129b8:	mov	r0, r4
   129bc:	mov	r1, r7
   129c0:	bl	12f38 <close_stdout@@Base+0x1e4>
   129c4:	cmp	r0, #0
   129c8:	bne	129dc <fscanf@plt+0x1554>
   129cc:	mov	r0, #1
   129d0:	pop	{r3, r4, r5, r6, r7, pc}
   129d4:	ldr	r3, [pc, #116]	; 12a50 <fscanf@plt+0x15c8>
   129d8:	ldr	r6, [r6, r3]
   129dc:	bl	1147c <__errno_location@plt>
   129e0:	ldr	r2, [pc, #108]	; 12a54 <fscanf@plt+0x15cc>
   129e4:	mov	r3, r5
   129e8:	add	r2, pc, r2
   129ec:	ldr	r1, [r0]
   129f0:	mov	r0, #0
   129f4:	bl	113bc <error@plt>
   129f8:	ldr	r3, [r6]
   129fc:	cmp	r4, r3
   12a00:	beq	12a14 <fscanf@plt+0x158c>
   12a04:	mov	r0, r4
   12a08:	bl	15234 <close_stdout@@Base+0x24e0>
   12a0c:	mov	r0, #0
   12a10:	pop	{r3, r4, r5, r6, r7, pc}
   12a14:	mov	r0, #0
   12a18:	pop	{r3, r4, r5, r6, r7, pc}
   12a1c:	bl	1147c <__errno_location@plt>
   12a20:	ldr	r2, [pc, #48]	; 12a58 <fscanf@plt+0x15d0>
   12a24:	mov	r3, r5
   12a28:	add	r2, pc, r2
   12a2c:	ldr	r1, [r0]
   12a30:	mov	r0, r4
   12a34:	bl	113bc <error@plt>
   12a38:	mov	r0, r4
   12a3c:	pop	{r3, r4, r5, r6, r7, pc}
   12a40:	andeq	r5, r1, r4, ror #13
   12a44:	andeq	r3, r0, ip, lsl #26
   12a48:	ldrdeq	r4, [r0], -r0
   12a4c:	strdeq	r5, [r1], -ip
   12a50:	andeq	r0, r0, r4, lsr r1
   12a54:	andeq	r4, r0, r4, asr r6
   12a58:	andeq	r4, r0, r4, lsl r6
   12a5c:	push	{r4, r5, r6, r7, lr}
   12a60:	subs	r4, r0, #0
   12a64:	ldr	r5, [pc, #612]	; 12cd0 <fscanf@plt+0x1848>
   12a68:	sub	sp, sp, #12
   12a6c:	add	r5, pc, r5
   12a70:	beq	12ab8 <fscanf@plt+0x1630>
   12a74:	ldr	r3, [pc, #600]	; 12cd4 <fscanf@plt+0x184c>
   12a78:	mov	r2, #5
   12a7c:	ldr	r1, [pc, #596]	; 12cd8 <fscanf@plt+0x1850>
   12a80:	mov	r0, #0
   12a84:	ldr	r3, [r5, r3]
   12a88:	add	r1, pc, r1
   12a8c:	ldr	r6, [r3]
   12a90:	bl	112a8 <dcgettext@plt>
   12a94:	ldr	r3, [pc, #576]	; 12cdc <fscanf@plt+0x1854>
   12a98:	mov	r1, #1
   12a9c:	ldr	r3, [r5, r3]
   12aa0:	ldr	r3, [r3]
   12aa4:	mov	r2, r0
   12aa8:	mov	r0, r6
   12aac:	bl	113e0 <__fprintf_chk@plt>
   12ab0:	mov	r0, r4
   12ab4:	bl	11470 <exit@plt>
   12ab8:	ldr	r1, [pc, #544]	; 12ce0 <fscanf@plt+0x1858>
   12abc:	mov	r2, #5
   12ac0:	ldr	r7, [pc, #540]	; 12ce4 <fscanf@plt+0x185c>
   12ac4:	add	r1, pc, r1
   12ac8:	bl	112a8 <dcgettext@plt>
   12acc:	ldr	r3, [pc, #520]	; 12cdc <fscanf@plt+0x1854>
   12ad0:	add	r7, pc, r7
   12ad4:	mov	r2, #160	; 0xa0
   12ad8:	ldr	r6, [r5, r3]
   12adc:	mov	r3, r7
   12ae0:	str	r2, [sp]
   12ae4:	ldr	r2, [r6]
   12ae8:	mov	r1, r0
   12aec:	mov	r0, #1
   12af0:	bl	111e8 <__printf_chk@plt>
   12af4:	ldr	r1, [pc, #492]	; 12ce8 <fscanf@plt+0x1860>
   12af8:	mov	r2, #5
   12afc:	mov	r0, r4
   12b00:	add	r1, pc, r1
   12b04:	bl	112a8 <dcgettext@plt>
   12b08:	ldr	r3, [pc, #476]	; 12cec <fscanf@plt+0x1864>
   12b0c:	ldr	r5, [r5, r3]
   12b10:	ldr	r1, [r5]
   12b14:	bl	112b4 <fputs_unlocked@plt>
   12b18:	ldr	r1, [pc, #464]	; 12cf0 <fscanf@plt+0x1868>
   12b1c:	mov	r2, #5
   12b20:	mov	r0, r4
   12b24:	add	r1, pc, r1
   12b28:	bl	112a8 <dcgettext@plt>
   12b2c:	mov	r2, r7
   12b30:	mov	r1, r0
   12b34:	mov	r0, #1
   12b38:	bl	111e8 <__printf_chk@plt>
   12b3c:	ldr	r1, [pc, #432]	; 12cf4 <fscanf@plt+0x186c>
   12b40:	mov	r2, #5
   12b44:	mov	r0, r4
   12b48:	add	r1, pc, r1
   12b4c:	bl	112a8 <dcgettext@plt>
   12b50:	ldr	r1, [r5]
   12b54:	bl	112b4 <fputs_unlocked@plt>
   12b58:	ldr	r1, [pc, #408]	; 12cf8 <fscanf@plt+0x1870>
   12b5c:	mov	r2, #5
   12b60:	mov	r0, r4
   12b64:	add	r1, pc, r1
   12b68:	bl	112a8 <dcgettext@plt>
   12b6c:	ldr	r1, [r5]
   12b70:	bl	112b4 <fputs_unlocked@plt>
   12b74:	ldr	r1, [pc, #384]	; 12cfc <fscanf@plt+0x1874>
   12b78:	mov	r2, #5
   12b7c:	mov	r0, r4
   12b80:	add	r1, pc, r1
   12b84:	bl	112a8 <dcgettext@plt>
   12b88:	ldr	r1, [r5]
   12b8c:	bl	112b4 <fputs_unlocked@plt>
   12b90:	ldr	r1, [pc, #360]	; 12d00 <fscanf@plt+0x1878>
   12b94:	mov	r2, #5
   12b98:	mov	r0, r4
   12b9c:	add	r1, pc, r1
   12ba0:	bl	112a8 <dcgettext@plt>
   12ba4:	ldr	r1, [r5]
   12ba8:	bl	112b4 <fputs_unlocked@plt>
   12bac:	ldr	r1, [pc, #336]	; 12d04 <fscanf@plt+0x187c>
   12bb0:	mov	r2, #5
   12bb4:	mov	r0, r4
   12bb8:	add	r1, pc, r1
   12bbc:	bl	112a8 <dcgettext@plt>
   12bc0:	ldr	r1, [r5]
   12bc4:	bl	112b4 <fputs_unlocked@plt>
   12bc8:	ldr	r1, [pc, #312]	; 12d08 <fscanf@plt+0x1880>
   12bcc:	mov	r2, #5
   12bd0:	mov	r0, r4
   12bd4:	add	r1, pc, r1
   12bd8:	bl	112a8 <dcgettext@plt>
   12bdc:	ldr	r1, [r5]
   12be0:	bl	112b4 <fputs_unlocked@plt>
   12be4:	ldr	r1, [pc, #288]	; 12d0c <fscanf@plt+0x1884>
   12be8:	mov	r2, #5
   12bec:	mov	r0, r4
   12bf0:	add	r1, pc, r1
   12bf4:	bl	112a8 <dcgettext@plt>
   12bf8:	ldr	r2, [pc, #272]	; 12d10 <fscanf@plt+0x1888>
   12bfc:	add	r2, pc, r2
   12c00:	mov	r1, r0
   12c04:	mov	r0, #1
   12c08:	bl	111e8 <__printf_chk@plt>
   12c0c:	ldr	r1, [pc, #256]	; 12d14 <fscanf@plt+0x188c>
   12c10:	mov	r2, #5
   12c14:	mov	r0, r4
   12c18:	add	r1, pc, r1
   12c1c:	bl	112a8 <dcgettext@plt>
   12c20:	ldr	r2, [pc, #240]	; 12d18 <fscanf@plt+0x1890>
   12c24:	ldr	r3, [pc, #240]	; 12d1c <fscanf@plt+0x1894>
   12c28:	add	r2, pc, r2
   12c2c:	add	r3, pc, r3
   12c30:	mov	r1, r0
   12c34:	mov	r0, #1
   12c38:	bl	111e8 <__printf_chk@plt>
   12c3c:	mov	r0, #5
   12c40:	mov	r1, r4
   12c44:	bl	112fc <setlocale@plt>
   12c48:	cmp	r0, #0
   12c4c:	beq	12c68 <fscanf@plt+0x17e0>
   12c50:	ldr	r1, [pc, #200]	; 12d20 <fscanf@plt+0x1898>
   12c54:	mov	r2, #3
   12c58:	add	r1, pc, r1
   12c5c:	bl	11428 <strncmp@plt>
   12c60:	cmp	r0, #0
   12c64:	bne	12c9c <fscanf@plt+0x1814>
   12c68:	ldr	r1, [pc, #180]	; 12d24 <fscanf@plt+0x189c>
   12c6c:	mov	r2, #5
   12c70:	mov	r0, #0
   12c74:	add	r1, pc, r1
   12c78:	bl	112a8 <dcgettext@plt>
   12c7c:	mov	r5, r0
   12c80:	ldr	r0, [r6]
   12c84:	bl	13040 <close_stdout@@Base+0x2ec>
   12c88:	mov	r1, r5
   12c8c:	mov	r2, r0
   12c90:	mov	r0, #1
   12c94:	bl	111e8 <__printf_chk@plt>
   12c98:	b	12ab0 <fscanf@plt+0x1628>
   12c9c:	ldr	r1, [pc, #132]	; 12d28 <fscanf@plt+0x18a0>
   12ca0:	mov	r2, #5
   12ca4:	mov	r0, r4
   12ca8:	add	r1, pc, r1
   12cac:	bl	112a8 <dcgettext@plt>
   12cb0:	mov	r5, r0
   12cb4:	ldr	r0, [r6]
   12cb8:	bl	13040 <close_stdout@@Base+0x2ec>
   12cbc:	mov	r1, r5
   12cc0:	mov	r2, r0
   12cc4:	mov	r0, #1
   12cc8:	bl	111e8 <__printf_chk@plt>
   12ccc:	b	12c68 <fscanf@plt+0x17e0>
   12cd0:	andeq	r5, r1, ip, lsl #11
   12cd4:	andeq	r0, r0, r4, asr #2
   12cd8:	andeq	r3, r0, ip, lsr #23
   12cdc:	andeq	r0, r0, r8, asr #2
   12ce0:	muleq	r0, r8, fp
   12ce4:	andeq	r3, r0, ip, lsl #24
   12ce8:	andeq	r3, r0, r4, ror #23
   12cec:	andeq	r0, r0, r0, asr #2
   12cf0:	andeq	r3, r0, ip, ror #23
   12cf4:	andeq	r3, r0, ip, lsl #24
   12cf8:	andeq	r3, r0, r4, lsr #24
   12cfc:	andeq	r3, r0, ip, lsr ip
   12d00:	andeq	r3, r0, r4, ror ip
   12d04:	andeq	r3, r0, r8, asr #27
   12d08:	ldrdeq	r3, [r0], -ip
   12d0c:	strdeq	r3, [r0], -r8
   12d10:	strdeq	r3, [r0], -r0
   12d14:	andeq	r3, r0, r0, ror #29
   12d18:	andeq	r3, r0, r8, ror #29
   12d1c:	strdeq	r3, [r0], -r4
   12d20:	strdeq	r3, [r0], -r0
   12d24:	andeq	r3, r0, r0, lsr #30
   12d28:	andeq	r3, r0, r4, lsr #29
   12d2c:	ldr	r3, [pc, #8]	; 12d3c <fscanf@plt+0x18b4>
   12d30:	add	r3, pc, r3
   12d34:	str	r0, [r3]
   12d38:	bx	lr
   12d3c:	andeq	r5, r1, ip, ror r4
   12d40:	ldr	r3, [pc, #8]	; 12d50 <fscanf@plt+0x18c8>
   12d44:	add	r3, pc, r3
   12d48:	strb	r0, [r3, #4]
   12d4c:	bx	lr
   12d50:	andeq	r5, r1, r8, ror #8

00012d54 <close_stdout@@Base>:
   12d54:	push	{r4, r5, r6, r7, lr}
   12d58:	sub	sp, sp, #12
   12d5c:	ldr	r4, [pc, #228]	; 12e48 <close_stdout@@Base+0xf4>
   12d60:	ldr	r3, [pc, #228]	; 12e4c <close_stdout@@Base+0xf8>
   12d64:	add	r4, pc, r4
   12d68:	ldr	r3, [r4, r3]
   12d6c:	ldr	r0, [r3]
   12d70:	bl	15550 <close_stdout@@Base+0x27fc>
   12d74:	cmp	r0, #0
   12d78:	beq	12da0 <close_stdout@@Base+0x4c>
   12d7c:	ldr	r3, [pc, #204]	; 12e50 <close_stdout@@Base+0xfc>
   12d80:	add	r3, pc, r3
   12d84:	ldrb	r3, [r3, #4]
   12d88:	cmp	r3, #0
   12d8c:	beq	12dc0 <close_stdout@@Base+0x6c>
   12d90:	bl	1147c <__errno_location@plt>
   12d94:	ldr	r3, [r0]
   12d98:	cmp	r3, #32
   12d9c:	bne	12dc0 <close_stdout@@Base+0x6c>
   12da0:	ldr	r3, [pc, #172]	; 12e54 <close_stdout@@Base+0x100>
   12da4:	ldr	r3, [r4, r3]
   12da8:	ldr	r0, [r3]
   12dac:	bl	15550 <close_stdout@@Base+0x27fc>
   12db0:	cmp	r0, #0
   12db4:	bne	12e14 <close_stdout@@Base+0xc0>
   12db8:	add	sp, sp, #12
   12dbc:	pop	{r4, r5, r6, r7, pc}
   12dc0:	ldr	r1, [pc, #144]	; 12e58 <close_stdout@@Base+0x104>
   12dc4:	mov	r0, #0
   12dc8:	mov	r2, #5
   12dcc:	add	r1, pc, r1
   12dd0:	bl	112a8 <dcgettext@plt>
   12dd4:	ldr	r3, [pc, #128]	; 12e5c <close_stdout@@Base+0x108>
   12dd8:	ldr	r5, [pc, r3]
   12ddc:	cmp	r5, #0
   12de0:	mov	r6, r0
   12de4:	beq	12e24 <close_stdout@@Base+0xd0>
   12de8:	bl	1147c <__errno_location@plt>
   12dec:	ldr	r7, [r0]
   12df0:	mov	r0, r5
   12df4:	bl	148bc <close_stdout@@Base+0x1b68>
   12df8:	ldr	r2, [pc, #96]	; 12e60 <close_stdout@@Base+0x10c>
   12dfc:	str	r6, [sp]
   12e00:	mov	r1, r7
   12e04:	add	r2, pc, r2
   12e08:	mov	r3, r0
   12e0c:	mov	r0, #0
   12e10:	bl	113bc <error@plt>
   12e14:	ldr	r3, [pc, #72]	; 12e64 <close_stdout@@Base+0x110>
   12e18:	ldr	r3, [r4, r3]
   12e1c:	ldr	r0, [r3]
   12e20:	bl	11284 <_exit@plt>
   12e24:	bl	1147c <__errno_location@plt>
   12e28:	ldr	r2, [pc, #56]	; 12e68 <close_stdout@@Base+0x114>
   12e2c:	add	r2, pc, r2
   12e30:	mov	r3, r0
   12e34:	mov	r0, r5
   12e38:	ldr	r1, [r3]
   12e3c:	mov	r3, r6
   12e40:	bl	113bc <error@plt>
   12e44:	b	12e14 <close_stdout@@Base+0xc0>
   12e48:	muleq	r1, r4, r2
   12e4c:	andeq	r0, r0, r0, asr #2
   12e50:	andeq	r5, r1, ip, lsr #8
   12e54:	andeq	r0, r0, r4, asr #2
   12e58:	andeq	r4, r0, r0, ror #4
   12e5c:	ldrdeq	r5, [r1], -r4
   12e60:	andeq	r4, r0, r4, lsr r2
   12e64:	andeq	r0, r0, r4, lsr #2
   12e68:	andeq	r4, r0, r0, lsl r2
   12e6c:	b	11278 <SHA1_Init@plt>
   12e70:	mov	ip, r0
   12e74:	mov	r3, r1
   12e78:	mov	r0, r2
   12e7c:	mov	r1, ip
   12e80:	mov	r2, r3
   12e84:	b	11440 <SHA1_Update@plt>
   12e88:	mov	ip, r0
   12e8c:	mov	r3, r1
   12e90:	mov	r0, r2
   12e94:	mov	r1, ip
   12e98:	mov	r2, r3
   12e9c:	b	11440 <SHA1_Update@plt>
   12ea0:	mov	r3, r0
   12ea4:	mov	r0, r1
   12ea8:	push	{r4, lr}
   12eac:	mov	r4, r1
   12eb0:	mov	r1, r3
   12eb4:	bl	11464 <SHA1_Final@plt>
   12eb8:	mov	r0, r4
   12ebc:	pop	{r4, pc}
   12ec0:	b	113f8 <SHA1@plt>
   12ec4:	ldr	ip, [pc, #100]	; 12f30 <close_stdout@@Base+0x1dc>
   12ec8:	mov	r2, r0
   12ecc:	push	{r4, r5, lr}
   12ed0:	add	ip, pc, ip
   12ed4:	ldr	lr, [pc, #88]	; 12f34 <close_stdout@@Base+0x1e0>
   12ed8:	sub	sp, sp, #108	; 0x6c
   12edc:	add	r3, sp, #4
   12ee0:	mov	r5, r1
   12ee4:	mov	r1, r2
   12ee8:	mov	r2, #96	; 0x60
   12eec:	ldr	r4, [ip, lr]
   12ef0:	mov	r0, r3
   12ef4:	ldr	ip, [r4]
   12ef8:	str	ip, [sp, #100]	; 0x64
   12efc:	bl	112f0 <memcpy@plt>
   12f00:	mov	r3, r0
   12f04:	mov	r0, r5
   12f08:	mov	r1, r3
   12f0c:	bl	11464 <SHA1_Final@plt>
   12f10:	ldr	r2, [sp, #100]	; 0x64
   12f14:	ldr	r3, [r4]
   12f18:	mov	r0, r5
   12f1c:	cmp	r2, r3
   12f20:	bne	12f2c <close_stdout@@Base+0x1d8>
   12f24:	add	sp, sp, #108	; 0x6c
   12f28:	pop	{r4, r5, pc}
   12f2c:	bl	113d4 <__stack_chk_fail@plt>
   12f30:	andeq	r5, r1, r8, lsr #2
   12f34:	andeq	r0, r0, r8, lsr #2
   12f38:	ldr	r3, [pc, #248]	; 13038 <close_stdout@@Base+0x2e4>
   12f3c:	ldr	r2, [pc, #248]	; 1303c <close_stdout@@Base+0x2e8>
   12f40:	add	r3, pc, r3
   12f44:	push	{r4, r5, r6, r7, r8, r9, lr}
   12f48:	sub	sp, sp, #108	; 0x6c
   12f4c:	ldr	r8, [r3, r2]
   12f50:	mov	r5, r0
   12f54:	movw	r0, #32840	; 0x8048
   12f58:	mov	r9, r1
   12f5c:	ldr	r3, [r8]
   12f60:	str	r3, [sp, #100]	; 0x64
   12f64:	bl	113b0 <malloc@plt>
   12f68:	subs	r6, r0, #0
   12f6c:	moveq	r0, #1
   12f70:	beq	12fd8 <close_stdout@@Base+0x284>
   12f74:	add	r7, sp, #4
   12f78:	mov	r4, #0
   12f7c:	mov	r0, r7
   12f80:	bl	11278 <SHA1_Init@plt>
   12f84:	add	r0, r6, r4
   12f88:	rsb	r2, r4, #32768	; 0x8000
   12f8c:	mov	r1, #1
   12f90:	mov	r3, r5
   12f94:	bl	111b8 <fread_unlocked@plt>
   12f98:	add	r4, r4, r0
   12f9c:	cmp	r4, #32768	; 0x8000
   12fa0:	beq	12ff0 <close_stdout@@Base+0x29c>
   12fa4:	cmp	r0, #0
   12fa8:	ldr	r3, [r5]
   12fac:	beq	1301c <close_stdout@@Base+0x2c8>
   12fb0:	tst	r3, #16
   12fb4:	beq	12f84 <close_stdout@@Base+0x230>
   12fb8:	cmp	r4, #0
   12fbc:	bne	13008 <close_stdout@@Base+0x2b4>
   12fc0:	mov	r1, r7
   12fc4:	mov	r0, r9
   12fc8:	bl	11464 <SHA1_Final@plt>
   12fcc:	mov	r0, r6
   12fd0:	bl	11290 <free@plt>
   12fd4:	mov	r0, #0
   12fd8:	ldr	r2, [sp, #100]	; 0x64
   12fdc:	ldr	r3, [r8]
   12fe0:	cmp	r2, r3
   12fe4:	bne	13034 <close_stdout@@Base+0x2e0>
   12fe8:	add	sp, sp, #108	; 0x6c
   12fec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12ff0:	mov	r2, r4
   12ff4:	mov	r0, r7
   12ff8:	mov	r1, r6
   12ffc:	mov	r4, #0
   13000:	bl	11440 <SHA1_Update@plt>
   13004:	b	12f84 <close_stdout@@Base+0x230>
   13008:	mov	r2, r4
   1300c:	mov	r0, r7
   13010:	mov	r1, r6
   13014:	bl	11440 <SHA1_Update@plt>
   13018:	b	12fc0 <close_stdout@@Base+0x26c>
   1301c:	tst	r3, #32
   13020:	beq	12fb8 <close_stdout@@Base+0x264>
   13024:	mov	r0, r6
   13028:	bl	11290 <free@plt>
   1302c:	mov	r0, #1
   13030:	b	12fd8 <close_stdout@@Base+0x284>
   13034:	bl	113d4 <__stack_chk_fail@plt>
   13038:	strheq	r5, [r1], -r8
   1303c:	andeq	r0, r0, r8, lsr #2
   13040:	ldrb	r3, [r0]
   13044:	cmp	r3, #47	; 0x2f
   13048:	bne	13064 <close_stdout@@Base+0x310>
   1304c:	add	r2, r0, #1
   13050:	mov	r0, r2
   13054:	add	r2, r2, #1
   13058:	ldrb	r3, [r0]
   1305c:	cmp	r3, #47	; 0x2f
   13060:	beq	13050 <close_stdout@@Base+0x2fc>
   13064:	cmp	r3, #0
   13068:	bxeq	lr
   1306c:	mov	r2, r0
   13070:	mov	r1, #0
   13074:	cmp	r3, #47	; 0x2f
   13078:	moveq	r1, #1
   1307c:	beq	1308c <close_stdout@@Base+0x338>
   13080:	cmp	r1, #0
   13084:	movne	r0, r2
   13088:	movne	r1, #0
   1308c:	ldrb	r3, [r2, #1]!
   13090:	cmp	r3, #0
   13094:	bne	13074 <close_stdout@@Base+0x320>
   13098:	bx	lr
   1309c:	push	{r4, lr}
   130a0:	mov	r4, r0
   130a4:	bl	112d8 <strlen@plt>
   130a8:	cmp	r0, #1
   130ac:	popls	{r4, pc}
   130b0:	sub	r3, r0, #1
   130b4:	ldrb	r2, [r4, r3]
   130b8:	cmp	r2, #47	; 0x2f
   130bc:	popne	{r4, pc}
   130c0:	mov	r0, r3
   130c4:	cmp	r0, #1
   130c8:	sub	r3, r3, #1
   130cc:	beq	130e0 <close_stdout@@Base+0x38c>
   130d0:	ldrb	r2, [r4, r3]
   130d4:	cmp	r2, #47	; 0x2f
   130d8:	popne	{r4, pc}
   130dc:	b	130c0 <close_stdout@@Base+0x36c>
   130e0:	pop	{r4, pc}
   130e4:	b	112e4 <posix_fadvise64@plt>
   130e8:	cmp	r0, #0
   130ec:	push	{r4, r5, r6, lr}
   130f0:	mov	r6, r1
   130f4:	sub	sp, sp, #16
   130f8:	beq	1311c <close_stdout@@Base+0x3c8>
   130fc:	mov	r4, #0
   13100:	mov	r5, #0
   13104:	bl	1117c <fileno@plt>
   13108:	str	r6, [sp, #8]
   1310c:	mov	r2, r4
   13110:	mov	r3, r5
   13114:	strd	r4, [sp]
   13118:	bl	130e4 <close_stdout@@Base+0x390>
   1311c:	add	sp, sp, #16
   13120:	pop	{r4, r5, r6, pc}
   13124:	push	{r4, r5, r6, lr}
   13128:	mov	r5, r1
   1312c:	bl	11308 <fopen64@plt>
   13130:	subs	r4, r0, #0
   13134:	beq	13144 <close_stdout@@Base+0x3f0>
   13138:	bl	1117c <fileno@plt>
   1313c:	cmp	r0, #2
   13140:	bls	1314c <close_stdout@@Base+0x3f8>
   13144:	mov	r0, r4
   13148:	pop	{r4, r5, r6, pc}
   1314c:	bl	14a1c <close_stdout@@Base+0x1cc8>
   13150:	subs	r6, r0, #0
   13154:	blt	13180 <close_stdout@@Base+0x42c>
   13158:	mov	r0, r4
   1315c:	bl	15234 <close_stdout@@Base+0x24e0>
   13160:	cmp	r0, #0
   13164:	bne	131a0 <close_stdout@@Base+0x44c>
   13168:	mov	r1, r5
   1316c:	mov	r0, r6
   13170:	bl	11368 <fdopen@plt>
   13174:	cmp	r0, #0
   13178:	beq	131a0 <close_stdout@@Base+0x44c>
   1317c:	pop	{r4, r5, r6, pc}
   13180:	bl	1147c <__errno_location@plt>
   13184:	ldr	r6, [r0]
   13188:	mov	r5, r0
   1318c:	mov	r0, r4
   13190:	bl	15234 <close_stdout@@Base+0x24e0>
   13194:	mov	r0, #0
   13198:	str	r6, [r5]
   1319c:	pop	{r4, r5, r6, pc}
   131a0:	bl	1147c <__errno_location@plt>
   131a4:	ldr	r5, [r0]
   131a8:	mov	r4, r0
   131ac:	mov	r0, r6
   131b0:	bl	11374 <close@plt>
   131b4:	mov	r0, #0
   131b8:	str	r5, [r4]
   131bc:	pop	{r4, r5, r6, pc}
   131c0:	push	{r3, r4, r5, r6, r7, lr}
   131c4:	subs	r4, r0, #0
   131c8:	ldr	r5, [pc, #172]	; 1327c <close_stdout@@Base+0x528>
   131cc:	add	r5, pc, r5
   131d0:	beq	13258 <close_stdout@@Base+0x504>
   131d4:	mov	r1, #47	; 0x2f
   131d8:	bl	1123c <strrchr@plt>
   131dc:	subs	r6, r0, #0
   131e0:	beq	1323c <close_stdout@@Base+0x4e8>
   131e4:	add	r7, r6, #1
   131e8:	rsb	r3, r4, r7
   131ec:	cmp	r3, #6
   131f0:	ble	1323c <close_stdout@@Base+0x4e8>
   131f4:	ldr	r1, [pc, #132]	; 13280 <close_stdout@@Base+0x52c>
   131f8:	sub	r0, r6, #6
   131fc:	mov	r2, #7
   13200:	add	r1, pc, r1
   13204:	bl	11428 <strncmp@plt>
   13208:	cmp	r0, #0
   1320c:	bne	1323c <close_stdout@@Base+0x4e8>
   13210:	ldr	r1, [pc, #108]	; 13284 <close_stdout@@Base+0x530>
   13214:	mov	r0, r7
   13218:	mov	r2, #3
   1321c:	add	r1, pc, r1
   13220:	bl	11428 <strncmp@plt>
   13224:	cmp	r0, #0
   13228:	movne	r4, r7
   1322c:	ldreq	r3, [pc, #84]	; 13288 <close_stdout@@Base+0x534>
   13230:	addeq	r4, r6, #4
   13234:	ldreq	r3, [r5, r3]
   13238:	streq	r4, [r3]
   1323c:	ldr	r2, [pc, #72]	; 1328c <close_stdout@@Base+0x538>
   13240:	ldr	r3, [pc, #72]	; 13290 <close_stdout@@Base+0x53c>
   13244:	ldr	r2, [r5, r2]
   13248:	str	r4, [r2]
   1324c:	ldr	r3, [r5, r3]
   13250:	str	r4, [r3]
   13254:	pop	{r3, r4, r5, r6, r7, pc}
   13258:	ldr	r3, [pc, #52]	; 13294 <close_stdout@@Base+0x540>
   1325c:	mov	r1, #1
   13260:	ldr	r0, [pc, #48]	; 13298 <close_stdout@@Base+0x544>
   13264:	mov	r2, #55	; 0x37
   13268:	ldr	r3, [r5, r3]
   1326c:	add	r0, pc, r0
   13270:	ldr	r3, [r3]
   13274:	bl	11380 <fwrite@plt>
   13278:	bl	11188 <abort@plt>
   1327c:	andeq	r4, r1, ip, lsr #28
   13280:	andeq	r3, r0, r8, ror lr
   13284:	andeq	r3, r0, r4, ror #28
   13288:	andeq	r0, r0, r8, lsr r1
   1328c:	andeq	r0, r0, r8, asr #2
   13290:	andeq	r0, r0, r0, lsr r1
   13294:	andeq	r0, r0, r4, asr #2
   13298:	ldrdeq	r3, [r0], -r4
   1329c:	push	{r3, lr}
   132a0:	mov	r3, r0
   132a4:	mov	r2, #0
   132a8:	cmp	r1, #8
   132ac:	str	r2, [r3], #4
   132b0:	add	r3, r3, #4
   132b4:	str	r2, [r0, #4]
   132b8:	str	r2, [r3], #4
   132bc:	str	r2, [r3], #4
   132c0:	str	r2, [r3], #4
   132c4:	str	r2, [r3], #4
   132c8:	str	r2, [r3], #4
   132cc:	str	r2, [r3], #4
   132d0:	str	r2, [r3], #4
   132d4:	str	r2, [r3], #4
   132d8:	str	r2, [r3], #4
   132dc:	str	r2, [r3]
   132e0:	beq	132ec <close_stdout@@Base+0x598>
   132e4:	str	r1, [r0]
   132e8:	pop	{r3, pc}
   132ec:	bl	11188 <abort@plt>
   132f0:	push	{r4, r5, r6, lr}
   132f4:	mov	r4, r0
   132f8:	mov	r6, r1
   132fc:	mov	r0, #0
   13300:	mov	r1, r4
   13304:	mov	r2, #5
   13308:	bl	112a8 <dcgettext@plt>
   1330c:	cmp	r0, r4
   13310:	mov	r5, r0
   13314:	beq	1331c <close_stdout@@Base+0x5c8>
   13318:	pop	{r4, r5, r6, pc}
   1331c:	bl	155d0 <close_stdout@@Base+0x287c>
   13320:	ldrb	r3, [r0]
   13324:	bic	r3, r3, #32
   13328:	cmp	r3, #85	; 0x55
   1332c:	bne	133a0 <close_stdout@@Base+0x64c>
   13330:	ldrb	r3, [r0, #1]
   13334:	bic	r3, r3, #32
   13338:	cmp	r3, #84	; 0x54
   1333c:	bne	1338c <close_stdout@@Base+0x638>
   13340:	ldrb	r3, [r0, #2]
   13344:	bic	r3, r3, #32
   13348:	cmp	r3, #70	; 0x46
   1334c:	bne	1338c <close_stdout@@Base+0x638>
   13350:	ldrb	r3, [r0, #3]
   13354:	cmp	r3, #45	; 0x2d
   13358:	bne	1338c <close_stdout@@Base+0x638>
   1335c:	ldrb	r3, [r0, #4]
   13360:	cmp	r3, #56	; 0x38
   13364:	bne	1338c <close_stdout@@Base+0x638>
   13368:	ldrb	r3, [r0, #5]
   1336c:	cmp	r3, #0
   13370:	bne	1338c <close_stdout@@Base+0x638>
   13374:	ldrb	r3, [r5]
   13378:	cmp	r3, #96	; 0x60
   1337c:	beq	13418 <close_stdout@@Base+0x6c4>
   13380:	ldr	r0, [pc, #180]	; 1343c <close_stdout@@Base+0x6e8>
   13384:	add	r0, pc, r0
   13388:	pop	{r4, r5, r6, pc}
   1338c:	cmp	r6, #7
   13390:	beq	13424 <close_stdout@@Base+0x6d0>
   13394:	ldr	r0, [pc, #164]	; 13440 <close_stdout@@Base+0x6ec>
   13398:	add	r0, pc, r0
   1339c:	pop	{r4, r5, r6, pc}
   133a0:	cmp	r3, #71	; 0x47
   133a4:	bne	1338c <close_stdout@@Base+0x638>
   133a8:	ldrb	r3, [r0, #1]
   133ac:	bic	r3, r3, #32
   133b0:	cmp	r3, #66	; 0x42
   133b4:	bne	1338c <close_stdout@@Base+0x638>
   133b8:	ldrb	r3, [r0, #2]
   133bc:	cmp	r3, #49	; 0x31
   133c0:	bne	1338c <close_stdout@@Base+0x638>
   133c4:	ldrb	r3, [r0, #3]
   133c8:	cmp	r3, #56	; 0x38
   133cc:	bne	1338c <close_stdout@@Base+0x638>
   133d0:	ldrb	r3, [r0, #4]
   133d4:	cmp	r3, #48	; 0x30
   133d8:	bne	1338c <close_stdout@@Base+0x638>
   133dc:	ldrb	r3, [r0, #5]
   133e0:	cmp	r3, #51	; 0x33
   133e4:	bne	1338c <close_stdout@@Base+0x638>
   133e8:	ldrb	r3, [r0, #6]
   133ec:	cmp	r3, #48	; 0x30
   133f0:	bne	1338c <close_stdout@@Base+0x638>
   133f4:	ldrb	r3, [r0, #7]
   133f8:	cmp	r3, #0
   133fc:	bne	1338c <close_stdout@@Base+0x638>
   13400:	ldrb	r3, [r5]
   13404:	cmp	r3, #96	; 0x60
   13408:	beq	13430 <close_stdout@@Base+0x6dc>
   1340c:	ldr	r0, [pc, #48]	; 13444 <close_stdout@@Base+0x6f0>
   13410:	add	r0, pc, r0
   13414:	pop	{r4, r5, r6, pc}
   13418:	ldr	r0, [pc, #40]	; 13448 <close_stdout@@Base+0x6f4>
   1341c:	add	r0, pc, r0
   13420:	pop	{r4, r5, r6, pc}
   13424:	ldr	r0, [pc, #32]	; 1344c <close_stdout@@Base+0x6f8>
   13428:	add	r0, pc, r0
   1342c:	pop	{r4, r5, r6, pc}
   13430:	ldr	r0, [pc, #24]	; 13450 <close_stdout@@Base+0x6fc>
   13434:	add	r0, pc, r0
   13438:	pop	{r4, r5, r6, pc}
   1343c:	andeq	r3, r0, r0, lsr #26
   13440:	andeq	r3, r0, r4, lsl sp
   13444:	muleq	r0, r8, ip
   13448:	muleq	r0, ip, ip
   1344c:	andeq	r3, r0, r8, lsl #25
   13450:	andeq	r3, r0, r0, lsl #25
   13454:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13458:	sub	sp, sp, #124	; 0x7c
   1345c:	ldr	ip, [pc, #3304]	; 1414c <close_stdout@@Base+0x13f8>
   13460:	mov	sl, r1
   13464:	str	r0, [sp, #40]	; 0x28
   13468:	mov	r8, r3
   1346c:	ldr	r0, [pc, #3292]	; 14150 <close_stdout@@Base+0x13fc>
   13470:	add	ip, pc, ip
   13474:	str	r2, [sp, #32]
   13478:	ldr	r1, [sp, #164]	; 0xa4
   1347c:	mov	r3, ip
   13480:	ldr	r0, [ip, r0]
   13484:	ldr	r2, [sp, #172]	; 0xac
   13488:	ubfx	r1, r1, #1, #1
   1348c:	str	r1, [sp, #36]	; 0x24
   13490:	str	r0, [sp, #56]	; 0x38
   13494:	ldr	r0, [sp, #168]	; 0xa8
   13498:	ldr	r1, [sp, #176]	; 0xb0
   1349c:	str	r2, [sp, #72]	; 0x48
   134a0:	str	r0, [sp, #48]	; 0x30
   134a4:	ldr	r0, [sp, #56]	; 0x38
   134a8:	str	r1, [sp, #68]	; 0x44
   134ac:	ldr	r3, [r0]
   134b0:	str	r3, [sp, #116]	; 0x74
   134b4:	bl	111c4 <__ctype_get_mb_cur_max@plt>
   134b8:	ldr	r2, [sp, #160]	; 0xa0
   134bc:	str	r0, [sp, #64]	; 0x40
   134c0:	cmp	r2, #8
   134c4:	addls	pc, pc, r2, lsl #2
   134c8:	b	14028 <close_stdout@@Base+0x12d4>
   134cc:	b	134f0 <close_stdout@@Base+0x79c>
   134d0:	b	13d40 <close_stdout@@Base+0xfec>
   134d4:	b	13d70 <close_stdout@@Base+0x101c>
   134d8:	b	13c20 <close_stdout@@Base+0xecc>
   134dc:	b	13c60 <close_stdout@@Base+0xf0c>
   134e0:	b	13c8c <close_stdout@@Base+0xf38>
   134e4:	b	13cac <close_stdout@@Base+0xf58>
   134e8:	b	13cac <close_stdout@@Base+0xf58>
   134ec:	b	13cac <close_stdout@@Base+0xf58>
   134f0:	mov	r2, #0
   134f4:	str	r2, [sp, #36]	; 0x24
   134f8:	mov	r9, r2
   134fc:	str	r2, [sp, #24]
   13500:	str	r2, [sp, #28]
   13504:	str	r2, [sp, #52]	; 0x34
   13508:	ldr	r0, [sp, #36]	; 0x24
   1350c:	mov	fp, #0
   13510:	ldr	r1, [sp, #24]
   13514:	eor	r2, r0, #1
   13518:	eor	r3, r1, #1
   1351c:	and	r3, r2, r3
   13520:	and	r2, r1, r0
   13524:	str	r3, [sp, #44]	; 0x2c
   13528:	str	r2, [sp, #76]	; 0x4c
   1352c:	cmn	r8, #1
   13530:	beq	138b0 <close_stdout@@Base+0xb5c>
   13534:	subs	r3, fp, r8
   13538:	movne	r3, #1
   1353c:	cmp	r3, #0
   13540:	beq	138c8 <close_stdout@@Base+0xb74>
   13544:	ldr	r3, [sp, #28]
   13548:	ldr	r0, [sp, #24]
   1354c:	adds	r7, r3, #0
   13550:	movne	r7, #1
   13554:	ands	r6, r7, r0
   13558:	bne	13db4 <close_stdout@@Base+0x1060>
   1355c:	ldr	r1, [sp, #32]
   13560:	add	r5, r1, fp
   13564:	ldrb	r4, [r5]
   13568:	cmp	r4, #126	; 0x7e
   1356c:	addls	pc, pc, r4, lsl #2
   13570:	b	13b34 <close_stdout@@Base+0xde0>
   13574:	b	13a40 <close_stdout@@Base+0xcec>
   13578:	b	13b34 <close_stdout@@Base+0xde0>
   1357c:	b	13b34 <close_stdout@@Base+0xde0>
   13580:	b	13b34 <close_stdout@@Base+0xde0>
   13584:	b	13b34 <close_stdout@@Base+0xde0>
   13588:	b	13b34 <close_stdout@@Base+0xde0>
   1358c:	b	13b34 <close_stdout@@Base+0xde0>
   13590:	b	13a28 <close_stdout@@Base+0xcd4>
   13594:	b	13a10 <close_stdout@@Base+0xcbc>
   13598:	b	13a38 <close_stdout@@Base+0xce4>
   1359c:	b	13a30 <close_stdout@@Base+0xcdc>
   135a0:	b	13a20 <close_stdout@@Base+0xccc>
   135a4:	b	13a18 <close_stdout@@Base+0xcc4>
   135a8:	b	139dc <close_stdout@@Base+0xc88>
   135ac:	b	13b34 <close_stdout@@Base+0xde0>
   135b0:	b	13b34 <close_stdout@@Base+0xde0>
   135b4:	b	13b34 <close_stdout@@Base+0xde0>
   135b8:	b	13b34 <close_stdout@@Base+0xde0>
   135bc:	b	13b34 <close_stdout@@Base+0xde0>
   135c0:	b	13b34 <close_stdout@@Base+0xde0>
   135c4:	b	13b34 <close_stdout@@Base+0xde0>
   135c8:	b	13b34 <close_stdout@@Base+0xde0>
   135cc:	b	13b34 <close_stdout@@Base+0xde0>
   135d0:	b	13b34 <close_stdout@@Base+0xde0>
   135d4:	b	13b34 <close_stdout@@Base+0xde0>
   135d8:	b	13b34 <close_stdout@@Base+0xde0>
   135dc:	b	13b34 <close_stdout@@Base+0xde0>
   135e0:	b	13b34 <close_stdout@@Base+0xde0>
   135e4:	b	13b34 <close_stdout@@Base+0xde0>
   135e8:	b	13b34 <close_stdout@@Base+0xde0>
   135ec:	b	13b34 <close_stdout@@Base+0xde0>
   135f0:	b	13b34 <close_stdout@@Base+0xde0>
   135f4:	b	13968 <close_stdout@@Base+0xc14>
   135f8:	b	13968 <close_stdout@@Base+0xc14>
   135fc:	b	13968 <close_stdout@@Base+0xc14>
   13600:	b	13960 <close_stdout@@Base+0xc0c>
   13604:	b	13968 <close_stdout@@Base+0xc14>
   13608:	b	1383c <close_stdout@@Base+0xae8>
   1360c:	b	13968 <close_stdout@@Base+0xc14>
   13610:	b	13adc <close_stdout@@Base+0xd88>
   13614:	b	13968 <close_stdout@@Base+0xc14>
   13618:	b	13968 <close_stdout@@Base+0xc14>
   1361c:	b	13968 <close_stdout@@Base+0xc14>
   13620:	b	1383c <close_stdout@@Base+0xae8>
   13624:	b	1383c <close_stdout@@Base+0xae8>
   13628:	b	1383c <close_stdout@@Base+0xae8>
   1362c:	b	1383c <close_stdout@@Base+0xae8>
   13630:	b	1383c <close_stdout@@Base+0xae8>
   13634:	b	1383c <close_stdout@@Base+0xae8>
   13638:	b	1383c <close_stdout@@Base+0xae8>
   1363c:	b	1383c <close_stdout@@Base+0xae8>
   13640:	b	1383c <close_stdout@@Base+0xae8>
   13644:	b	1383c <close_stdout@@Base+0xae8>
   13648:	b	1383c <close_stdout@@Base+0xae8>
   1364c:	b	1383c <close_stdout@@Base+0xae8>
   13650:	b	1383c <close_stdout@@Base+0xae8>
   13654:	b	1383c <close_stdout@@Base+0xae8>
   13658:	b	1383c <close_stdout@@Base+0xae8>
   1365c:	b	1383c <close_stdout@@Base+0xae8>
   13660:	b	13968 <close_stdout@@Base+0xc14>
   13664:	b	13968 <close_stdout@@Base+0xc14>
   13668:	b	13968 <close_stdout@@Base+0xc14>
   1366c:	b	13968 <close_stdout@@Base+0xc14>
   13670:	b	13770 <close_stdout@@Base+0xa1c>
   13674:	b	13b34 <close_stdout@@Base+0xde0>
   13678:	b	1383c <close_stdout@@Base+0xae8>
   1367c:	b	1383c <close_stdout@@Base+0xae8>
   13680:	b	1383c <close_stdout@@Base+0xae8>
   13684:	b	1383c <close_stdout@@Base+0xae8>
   13688:	b	1383c <close_stdout@@Base+0xae8>
   1368c:	b	1383c <close_stdout@@Base+0xae8>
   13690:	b	1383c <close_stdout@@Base+0xae8>
   13694:	b	1383c <close_stdout@@Base+0xae8>
   13698:	b	1383c <close_stdout@@Base+0xae8>
   1369c:	b	1383c <close_stdout@@Base+0xae8>
   136a0:	b	1383c <close_stdout@@Base+0xae8>
   136a4:	b	1383c <close_stdout@@Base+0xae8>
   136a8:	b	1383c <close_stdout@@Base+0xae8>
   136ac:	b	1383c <close_stdout@@Base+0xae8>
   136b0:	b	1383c <close_stdout@@Base+0xae8>
   136b4:	b	1383c <close_stdout@@Base+0xae8>
   136b8:	b	1383c <close_stdout@@Base+0xae8>
   136bc:	b	1383c <close_stdout@@Base+0xae8>
   136c0:	b	1383c <close_stdout@@Base+0xae8>
   136c4:	b	1383c <close_stdout@@Base+0xae8>
   136c8:	b	1383c <close_stdout@@Base+0xae8>
   136cc:	b	1383c <close_stdout@@Base+0xae8>
   136d0:	b	1383c <close_stdout@@Base+0xae8>
   136d4:	b	1383c <close_stdout@@Base+0xae8>
   136d8:	b	1383c <close_stdout@@Base+0xae8>
   136dc:	b	1383c <close_stdout@@Base+0xae8>
   136e0:	b	13968 <close_stdout@@Base+0xc14>
   136e4:	b	13ac0 <close_stdout@@Base+0xd6c>
   136e8:	b	1383c <close_stdout@@Base+0xae8>
   136ec:	b	13968 <close_stdout@@Base+0xc14>
   136f0:	b	1383c <close_stdout@@Base+0xae8>
   136f4:	b	13968 <close_stdout@@Base+0xc14>
   136f8:	b	1383c <close_stdout@@Base+0xae8>
   136fc:	b	1383c <close_stdout@@Base+0xae8>
   13700:	b	1383c <close_stdout@@Base+0xae8>
   13704:	b	1383c <close_stdout@@Base+0xae8>
   13708:	b	1383c <close_stdout@@Base+0xae8>
   1370c:	b	1383c <close_stdout@@Base+0xae8>
   13710:	b	1383c <close_stdout@@Base+0xae8>
   13714:	b	1383c <close_stdout@@Base+0xae8>
   13718:	b	1383c <close_stdout@@Base+0xae8>
   1371c:	b	1383c <close_stdout@@Base+0xae8>
   13720:	b	1383c <close_stdout@@Base+0xae8>
   13724:	b	1383c <close_stdout@@Base+0xae8>
   13728:	b	1383c <close_stdout@@Base+0xae8>
   1372c:	b	1383c <close_stdout@@Base+0xae8>
   13730:	b	1383c <close_stdout@@Base+0xae8>
   13734:	b	1383c <close_stdout@@Base+0xae8>
   13738:	b	1383c <close_stdout@@Base+0xae8>
   1373c:	b	1383c <close_stdout@@Base+0xae8>
   13740:	b	1383c <close_stdout@@Base+0xae8>
   13744:	b	1383c <close_stdout@@Base+0xae8>
   13748:	b	1383c <close_stdout@@Base+0xae8>
   1374c:	b	1383c <close_stdout@@Base+0xae8>
   13750:	b	1383c <close_stdout@@Base+0xae8>
   13754:	b	1383c <close_stdout@@Base+0xae8>
   13758:	b	1383c <close_stdout@@Base+0xae8>
   1375c:	b	1383c <close_stdout@@Base+0xae8>
   13760:	b	13948 <close_stdout@@Base+0xbf4>
   13764:	b	13968 <close_stdout@@Base+0xc14>
   13768:	b	13948 <close_stdout@@Base+0xbf4>
   1376c:	b	13960 <close_stdout@@Base+0xc0c>
   13770:	ldr	r3, [sp, #160]	; 0xa0
   13774:	cmp	r3, #2
   13778:	beq	14004 <close_stdout@@Base+0x12b0>
   1377c:	cmp	r3, #3
   13780:	bne	1383c <close_stdout@@Base+0xae8>
   13784:	ldr	r1, [sp, #164]	; 0xa4
   13788:	tst	r1, #4
   1378c:	beq	1383c <close_stdout@@Base+0xae8>
   13790:	add	r3, fp, #2
   13794:	cmp	r8, r3
   13798:	bls	1383c <close_stdout@@Base+0xae8>
   1379c:	ldrb	r2, [r5, #1]
   137a0:	mov	r1, #1
   137a4:	cmp	r2, #63	; 0x3f
   137a8:	bne	1383c <close_stdout@@Base+0xae8>
   137ac:	ldr	r0, [sp, #32]
   137b0:	ldrb	ip, [r0, r3]
   137b4:	sub	r0, ip, #33	; 0x21
   137b8:	uxtb	r0, r0
   137bc:	cmp	r0, #29
   137c0:	bhi	1383c <close_stdout@@Base+0xae8>
   137c4:	lsl	r1, r1, r0
   137c8:	movw	r0, #20929	; 0x51c1
   137cc:	movt	r0, #14336	; 0x3800
   137d0:	and	r0, r1, r0
   137d4:	cmp	r0, #0
   137d8:	beq	1383c <close_stdout@@Base+0xae8>
   137dc:	ldr	r1, [sp, #36]	; 0x24
   137e0:	cmp	r1, #0
   137e4:	bne	13984 <close_stdout@@Base+0xc30>
   137e8:	cmp	r9, sl
   137ec:	mov	r4, ip
   137f0:	mov	fp, r3
   137f4:	ldrcc	r0, [sp, #40]	; 0x28
   137f8:	strbcc	r2, [r0, r9]
   137fc:	add	r2, r9, #1
   13800:	cmp	sl, r2
   13804:	ldrhi	r0, [sp, #40]	; 0x28
   13808:	movhi	r1, #34	; 0x22
   1380c:	strbhi	r1, [r0, r2]
   13810:	add	r2, r9, #2
   13814:	cmp	sl, r2
   13818:	ldrhi	r0, [sp, #40]	; 0x28
   1381c:	movhi	r1, #34	; 0x22
   13820:	strbhi	r1, [r0, r2]
   13824:	add	r2, r9, #3
   13828:	cmp	sl, r2
   1382c:	add	r9, r9, #4
   13830:	ldrhi	r0, [sp, #40]	; 0x28
   13834:	movhi	r1, #63	; 0x3f
   13838:	strbhi	r1, [r0, r2]
   1383c:	ldr	r0, [sp, #44]	; 0x2c
   13840:	cmp	r0, #0
   13844:	bne	1386c <close_stdout@@Base+0xb18>
   13848:	ldr	r1, [sp, #48]	; 0x30
   1384c:	cmp	r1, #0
   13850:	beq	1386c <close_stdout@@Base+0xb18>
   13854:	ubfx	r2, r4, #5, #8
   13858:	and	r3, r4, #31
   1385c:	ldr	r2, [r1, r2, lsl #2]
   13860:	lsr	r3, r2, r3
   13864:	tst	r3, #1
   13868:	bne	13874 <close_stdout@@Base+0xb20>
   1386c:	cmp	r6, #0
   13870:	beq	13894 <close_stdout@@Base+0xb40>
   13874:	ldr	r2, [sp, #36]	; 0x24
   13878:	cmp	r2, #0
   1387c:	bne	13984 <close_stdout@@Base+0xc30>
   13880:	cmp	r9, sl
   13884:	ldrcc	r0, [sp, #40]	; 0x28
   13888:	movcc	r3, #92	; 0x5c
   1388c:	strbcc	r3, [r0, r9]
   13890:	add	r9, r9, #1
   13894:	add	fp, fp, #1
   13898:	cmp	r9, sl
   1389c:	ldrcc	r1, [sp, #40]	; 0x28
   138a0:	strbcc	r4, [r1, r9]
   138a4:	cmn	r8, #1
   138a8:	add	r9, r9, #1
   138ac:	bne	13534 <close_stdout@@Base+0x7e0>
   138b0:	ldr	r2, [sp, #32]
   138b4:	ldrb	r3, [r2, fp]
   138b8:	adds	r3, r3, #0
   138bc:	movne	r3, #1
   138c0:	cmp	r3, #0
   138c4:	bne	13544 <close_stdout@@Base+0x7f0>
   138c8:	ldr	r3, [sp, #160]	; 0xa0
   138cc:	cmp	r9, #0
   138d0:	cmpeq	r3, #2
   138d4:	bne	138e4 <close_stdout@@Base+0xb90>
   138d8:	ldr	r0, [sp, #36]	; 0x24
   138dc:	cmp	r0, #0
   138e0:	bne	13984 <close_stdout@@Base+0xc30>
   138e4:	ldr	r1, [sp, #36]	; 0x24
   138e8:	ldr	r2, [sp, #52]	; 0x34
   138ec:	eor	r3, r1, #1
   138f0:	cmp	r2, #0
   138f4:	moveq	r3, #0
   138f8:	andne	r3, r3, #1
   138fc:	cmp	r3, #0
   13900:	beq	1392c <close_stdout@@Base+0xbd8>
   13904:	ldrb	r3, [r2]
   13908:	cmp	r3, #0
   1390c:	beq	1392c <close_stdout@@Base+0xbd8>
   13910:	ldr	r1, [sp, #40]	; 0x28
   13914:	cmp	sl, r9
   13918:	strbhi	r3, [r1, r9]
   1391c:	ldrb	r3, [r2, #1]!
   13920:	add	r9, r9, #1
   13924:	cmp	r3, #0
   13928:	bne	13914 <close_stdout@@Base+0xbc0>
   1392c:	cmp	r9, sl
   13930:	movcs	r0, r9
   13934:	ldrcc	r1, [sp, #40]	; 0x28
   13938:	movcc	r3, #0
   1393c:	movcc	r0, r9
   13940:	strbcc	r3, [r1, r9]
   13944:	b	139c0 <close_stdout@@Base+0xc6c>
   13948:	cmn	r8, #1
   1394c:	beq	14014 <close_stdout@@Base+0x12c0>
   13950:	subs	r3, r8, #1
   13954:	movne	r3, #1
   13958:	cmp	r3, #0
   1395c:	bne	1383c <close_stdout@@Base+0xae8>
   13960:	cmp	fp, #0
   13964:	bne	1383c <close_stdout@@Base+0xae8>
   13968:	ldr	r3, [sp, #36]	; 0x24
   1396c:	ldr	r0, [sp, #160]	; 0xa0
   13970:	cmp	r0, #2
   13974:	movne	r3, #0
   13978:	andeq	r3, r3, #1
   1397c:	cmp	r3, #0
   13980:	beq	1383c <close_stdout@@Base+0xae8>
   13984:	ldr	r2, [sp, #164]	; 0xa4
   13988:	mov	ip, #0
   1398c:	ldr	r0, [sp, #160]	; 0xa0
   13990:	bic	r3, r2, #2
   13994:	ldr	r1, [sp, #72]	; 0x48
   13998:	ldr	r2, [sp, #68]	; 0x44
   1399c:	stm	sp, {r0, r3}
   139a0:	mov	r3, r8
   139a4:	str	r1, [sp, #12]
   139a8:	mov	r1, sl
   139ac:	str	r2, [sp, #16]
   139b0:	ldr	r0, [sp, #40]	; 0x28
   139b4:	ldr	r2, [sp, #32]
   139b8:	str	ip, [sp, #8]
   139bc:	bl	13454 <close_stdout@@Base+0x700>
   139c0:	ldr	r1, [sp, #56]	; 0x38
   139c4:	ldr	r2, [sp, #116]	; 0x74
   139c8:	ldr	r3, [r1]
   139cc:	cmp	r2, r3
   139d0:	bne	14104 <close_stdout@@Base+0x13b0>
   139d4:	add	sp, sp, #124	; 0x7c
   139d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139dc:	mov	r3, #114	; 0x72
   139e0:	ldr	r2, [sp, #36]	; 0x24
   139e4:	ldr	r0, [sp, #160]	; 0xa0
   139e8:	cmp	r0, #2
   139ec:	movne	r2, #0
   139f0:	andeq	r2, r2, #1
   139f4:	cmp	r2, #0
   139f8:	bne	13984 <close_stdout@@Base+0xc30>
   139fc:	ldr	r1, [sp, #24]
   13a00:	cmp	r1, #0
   13a04:	beq	1383c <close_stdout@@Base+0xae8>
   13a08:	mov	r4, r3
   13a0c:	b	13874 <close_stdout@@Base+0xb20>
   13a10:	mov	r3, #98	; 0x62
   13a14:	b	139fc <close_stdout@@Base+0xca8>
   13a18:	mov	r3, #102	; 0x66
   13a1c:	b	139fc <close_stdout@@Base+0xca8>
   13a20:	mov	r3, #118	; 0x76
   13a24:	b	139fc <close_stdout@@Base+0xca8>
   13a28:	mov	r3, #97	; 0x61
   13a2c:	b	139fc <close_stdout@@Base+0xca8>
   13a30:	mov	r3, #110	; 0x6e
   13a34:	b	139e0 <close_stdout@@Base+0xc8c>
   13a38:	mov	r3, #116	; 0x74
   13a3c:	b	139e0 <close_stdout@@Base+0xc8c>
   13a40:	ldr	r2, [sp, #24]
   13a44:	cmp	r2, #0
   13a48:	beq	13ff0 <close_stdout@@Base+0x129c>
   13a4c:	ldr	r3, [sp, #36]	; 0x24
   13a50:	cmp	r3, #0
   13a54:	bne	13984 <close_stdout@@Base+0xc30>
   13a58:	cmp	r9, sl
   13a5c:	add	r2, r9, #1
   13a60:	ldrcc	r0, [sp, #40]	; 0x28
   13a64:	movcc	r3, #92	; 0x5c
   13a68:	strbcc	r3, [r0, r9]
   13a6c:	add	r3, fp, #1
   13a70:	cmp	r8, r3
   13a74:	bls	13ab4 <close_stdout@@Base+0xd60>
   13a78:	ldr	r1, [sp, #32]
   13a7c:	ldrb	r3, [r1, r3]
   13a80:	sub	r3, r3, #48	; 0x30
   13a84:	cmp	r3, #9
   13a88:	bhi	13ab4 <close_stdout@@Base+0xd60>
   13a8c:	cmp	sl, r2
   13a90:	ldrhi	r0, [sp, #40]	; 0x28
   13a94:	movhi	r3, #48	; 0x30
   13a98:	strbhi	r3, [r0, r2]
   13a9c:	add	r3, r9, #2
   13aa0:	cmp	sl, r3
   13aa4:	ldrhi	r1, [sp, #40]	; 0x28
   13aa8:	movhi	r2, #48	; 0x30
   13aac:	strbhi	r2, [r1, r3]
   13ab0:	add	r2, r9, #3
   13ab4:	mov	r9, r2
   13ab8:	mov	r4, #48	; 0x30
   13abc:	b	13848 <close_stdout@@Base+0xaf4>
   13ac0:	ldr	r1, [sp, #76]	; 0x4c
   13ac4:	cmp	r1, #0
   13ac8:	beq	13ad4 <close_stdout@@Base+0xd80>
   13acc:	cmp	r7, #0
   13ad0:	bne	13894 <close_stdout@@Base+0xb40>
   13ad4:	mov	r3, r4
   13ad8:	b	139e0 <close_stdout@@Base+0xc8c>
   13adc:	ldr	r1, [sp, #160]	; 0xa0
   13ae0:	cmp	r1, #2
   13ae4:	bne	1383c <close_stdout@@Base+0xae8>
   13ae8:	ldr	r2, [sp, #36]	; 0x24
   13aec:	cmp	r2, #0
   13af0:	bne	13984 <close_stdout@@Base+0xc30>
   13af4:	cmp	r9, sl
   13af8:	ldrcc	r0, [sp, #40]	; 0x28
   13afc:	movcc	r3, #39	; 0x27
   13b00:	strbcc	r3, [r0, r9]
   13b04:	add	r3, r9, #1
   13b08:	cmp	sl, r3
   13b0c:	ldrhi	r1, [sp, #40]	; 0x28
   13b10:	movhi	r2, #92	; 0x5c
   13b14:	strbhi	r2, [r1, r3]
   13b18:	add	r3, r9, #2
   13b1c:	cmp	sl, r3
   13b20:	add	r9, r9, #3
   13b24:	ldrhi	r0, [sp, #40]	; 0x28
   13b28:	movhi	r2, #39	; 0x27
   13b2c:	strbhi	r2, [r0, r3]
   13b30:	b	1383c <close_stdout@@Base+0xae8>
   13b34:	ldr	r1, [sp, #64]	; 0x40
   13b38:	cmp	r1, #1
   13b3c:	bne	13e34 <close_stdout@@Base+0x10e0>
   13b40:	bl	11398 <__ctype_b_loc@plt>
   13b44:	ldr	r2, [sp, #64]	; 0x40
   13b48:	sxth	r3, r4
   13b4c:	str	r2, [sp, #60]	; 0x3c
   13b50:	lsl	r3, r3, #1
   13b54:	ldr	r2, [r0]
   13b58:	ldrh	r2, [r2, r3]
   13b5c:	eor	r2, r2, #16384	; 0x4000
   13b60:	ubfx	r2, r2, #14, #1
   13b64:	ldr	r1, [sp, #24]
   13b68:	ands	r2, r2, r1
   13b6c:	beq	1383c <close_stdout@@Base+0xae8>
   13b70:	ldr	r3, [sp, #60]	; 0x3c
   13b74:	mov	r0, #92	; 0x5c
   13b78:	ldr	r7, [sp, #36]	; 0x24
   13b7c:	add	r1, r3, fp
   13b80:	str	r8, [sp, #60]	; 0x3c
   13b84:	ldr	r3, [sp, #40]	; 0x28
   13b88:	b	13bec <close_stdout@@Base+0xe98>
   13b8c:	cmp	r7, #0
   13b90:	bne	1402c <close_stdout@@Base+0x12d8>
   13b94:	add	ip, r9, #1
   13b98:	cmp	r9, sl
   13b9c:	strbcc	r0, [r3, r9]
   13ba0:	cmp	sl, ip
   13ba4:	lsrhi	r8, r4, #6
   13ba8:	addhi	r8, r8, #48	; 0x30
   13bac:	strbhi	r8, [r3, ip]
   13bb0:	add	ip, r9, #2
   13bb4:	add	r9, r9, #3
   13bb8:	cmp	sl, ip
   13bbc:	ubfxhi	r8, r4, #3, #3
   13bc0:	and	r4, r4, #7
   13bc4:	add	r4, r4, #48	; 0x30
   13bc8:	addhi	r8, r8, #48	; 0x30
   13bcc:	strbhi	r8, [r3, ip]
   13bd0:	add	fp, fp, #1
   13bd4:	cmp	r1, fp
   13bd8:	bls	13c18 <close_stdout@@Base+0xec4>
   13bdc:	cmp	r9, sl
   13be0:	strbcc	r4, [r3, r9]
   13be4:	ldrb	r4, [r5, #1]!
   13be8:	add	r9, r9, #1
   13bec:	cmp	r2, #0
   13bf0:	bne	13b8c <close_stdout@@Base+0xe38>
   13bf4:	cmp	r6, #0
   13bf8:	beq	13bd0 <close_stdout@@Base+0xe7c>
   13bfc:	add	fp, fp, #1
   13c00:	cmp	r9, sl
   13c04:	strbcc	r0, [r3, r9]
   13c08:	cmp	r1, fp
   13c0c:	add	r9, r9, #1
   13c10:	mov	r6, #0
   13c14:	bhi	13bdc <close_stdout@@Base+0xe88>
   13c18:	ldr	r8, [sp, #60]	; 0x3c
   13c1c:	b	13898 <close_stdout@@Base+0xb44>
   13c20:	ldr	r3, [sp, #36]	; 0x24
   13c24:	cmp	r3, #0
   13c28:	bne	1412c <close_stdout@@Base+0x13d8>
   13c2c:	cmp	sl, #0
   13c30:	beq	14044 <close_stdout@@Base+0x12f0>
   13c34:	ldr	r1, [sp, #40]	; 0x28
   13c38:	mov	r0, #1
   13c3c:	ldr	r2, [pc, #1296]	; 14154 <close_stdout@@Base+0x1400>
   13c40:	mov	r3, #34	; 0x22
   13c44:	str	r0, [sp, #24]
   13c48:	mov	r9, r0
   13c4c:	add	r2, pc, r2
   13c50:	str	r0, [sp, #28]
   13c54:	strb	r3, [r1]
   13c58:	str	r2, [sp, #52]	; 0x34
   13c5c:	b	13508 <close_stdout@@Base+0x7b4>
   13c60:	ldr	r3, [pc, #1264]	; 14158 <close_stdout@@Base+0x1404>
   13c64:	mov	r2, #1
   13c68:	mov	r0, #3
   13c6c:	str	r2, [sp, #36]	; 0x24
   13c70:	add	r3, pc, r3
   13c74:	str	r2, [sp, #24]
   13c78:	str	r3, [sp, #52]	; 0x34
   13c7c:	mov	r9, #0
   13c80:	str	r2, [sp, #28]
   13c84:	str	r0, [sp, #160]	; 0xa0
   13c88:	b	13508 <close_stdout@@Base+0x7b4>
   13c8c:	mov	r0, #0
   13c90:	mov	r1, #1
   13c94:	str	r0, [sp, #36]	; 0x24
   13c98:	mov	r9, r0
   13c9c:	str	r1, [sp, #24]
   13ca0:	str	r0, [sp, #28]
   13ca4:	str	r0, [sp, #52]	; 0x34
   13ca8:	b	13508 <close_stdout@@Base+0x7b4>
   13cac:	ldr	r3, [sp, #160]	; 0xa0
   13cb0:	cmp	r3, #8
   13cb4:	beq	13ce0 <close_stdout@@Base+0xf8c>
   13cb8:	ldr	r0, [pc, #1180]	; 1415c <close_stdout@@Base+0x1408>
   13cbc:	mov	r1, r3
   13cc0:	add	r0, pc, r0
   13cc4:	bl	132f0 <close_stdout@@Base+0x59c>
   13cc8:	ldr	r1, [sp, #160]	; 0xa0
   13ccc:	str	r0, [sp, #72]	; 0x48
   13cd0:	ldr	r0, [pc, #1160]	; 14160 <close_stdout@@Base+0x140c>
   13cd4:	add	r0, pc, r0
   13cd8:	bl	132f0 <close_stdout@@Base+0x59c>
   13cdc:	str	r0, [sp, #68]	; 0x44
   13ce0:	ldr	r0, [sp, #36]	; 0x24
   13ce4:	cmp	r0, #0
   13ce8:	movne	r9, #0
   13cec:	bne	13d24 <close_stdout@@Base+0xfd0>
   13cf0:	ldr	r1, [sp, #72]	; 0x48
   13cf4:	ldrb	r3, [r1]
   13cf8:	cmp	r3, #0
   13cfc:	beq	140fc <close_stdout@@Base+0x13a8>
   13d00:	mov	r2, r1
   13d04:	ldr	r1, [sp, #40]	; 0x28
   13d08:	mov	r9, r0
   13d0c:	cmp	r9, sl
   13d10:	strbcc	r3, [r1, r9]
   13d14:	ldrb	r3, [r2, #1]!
   13d18:	add	r9, r9, #1
   13d1c:	cmp	r3, #0
   13d20:	bne	13d0c <close_stdout@@Base+0xfb8>
   13d24:	ldr	r0, [sp, #68]	; 0x44
   13d28:	str	r0, [sp, #52]	; 0x34
   13d2c:	bl	112d8 <strlen@plt>
   13d30:	mov	r2, #1
   13d34:	str	r2, [sp, #24]
   13d38:	str	r0, [sp, #28]
   13d3c:	b	13508 <close_stdout@@Base+0x7b4>
   13d40:	ldr	r3, [pc, #1052]	; 14164 <close_stdout@@Base+0x1410>
   13d44:	mov	r2, #0
   13d48:	mov	r1, #1
   13d4c:	mov	r0, #2
   13d50:	add	r3, pc, r3
   13d54:	str	r1, [sp, #36]	; 0x24
   13d58:	str	r2, [sp, #24]
   13d5c:	mov	r9, r2
   13d60:	str	r1, [sp, #28]
   13d64:	str	r3, [sp, #52]	; 0x34
   13d68:	str	r0, [sp, #160]	; 0xa0
   13d6c:	b	13508 <close_stdout@@Base+0x7b4>
   13d70:	ldr	r3, [sp, #36]	; 0x24
   13d74:	cmp	r3, #0
   13d78:	bne	14108 <close_stdout@@Base+0x13b4>
   13d7c:	cmp	sl, #0
   13d80:	beq	14064 <close_stdout@@Base+0x1310>
   13d84:	ldr	r1, [sp, #40]	; 0x28
   13d88:	mov	r3, #39	; 0x27
   13d8c:	ldr	r2, [sp, #36]	; 0x24
   13d90:	mov	r0, #1
   13d94:	mov	r9, r0
   13d98:	str	r0, [sp, #28]
   13d9c:	strb	r3, [r1]
   13da0:	ldr	r3, [pc, #960]	; 14168 <close_stdout@@Base+0x1414>
   13da4:	str	r2, [sp, #24]
   13da8:	add	r3, pc, r3
   13dac:	str	r3, [sp, #52]	; 0x34
   13db0:	b	13508 <close_stdout@@Base+0x7b4>
   13db4:	ldr	r2, [sp, #28]
   13db8:	cmp	r2, #1
   13dbc:	add	r4, fp, r2
   13dc0:	movls	r3, #0
   13dc4:	movhi	r3, #1
   13dc8:	cmn	r8, #1
   13dcc:	movne	r3, #0
   13dd0:	cmp	r3, #0
   13dd4:	beq	13de4 <close_stdout@@Base+0x1090>
   13dd8:	ldr	r0, [sp, #32]
   13ddc:	bl	112d8 <strlen@plt>
   13de0:	mov	r8, r0
   13de4:	cmp	r8, r4
   13de8:	ldrcc	r3, [sp, #32]
   13dec:	movcc	r6, #0
   13df0:	addcc	r5, r3, fp
   13df4:	bcc	13564 <close_stdout@@Base+0x810>
   13df8:	ldr	r0, [sp, #32]
   13dfc:	ldr	r1, [sp, #52]	; 0x34
   13e00:	add	r5, r0, fp
   13e04:	ldr	r2, [sp, #28]
   13e08:	mov	r0, r5
   13e0c:	bl	11194 <memcmp@plt>
   13e10:	cmp	r0, #0
   13e14:	bne	13e2c <close_stdout@@Base+0x10d8>
   13e18:	ldr	r1, [sp, #36]	; 0x24
   13e1c:	cmp	r1, #0
   13e20:	bne	13984 <close_stdout@@Base+0xc30>
   13e24:	mov	r6, #1
   13e28:	b	13564 <close_stdout@@Base+0x810>
   13e2c:	mov	r6, #0
   13e30:	b	13564 <close_stdout@@Base+0x810>
   13e34:	add	r7, sp, #108	; 0x6c
   13e38:	cmn	r8, #1
   13e3c:	mov	r3, #0
   13e40:	str	r3, [sp, #108]	; 0x6c
   13e44:	str	r3, [r7, #4]
   13e48:	beq	14034 <close_stdout@@Base+0x12e0>
   13e4c:	mov	r1, #0
   13e50:	ldr	r0, [sp, #32]
   13e54:	mov	ip, #1
   13e58:	str	r9, [sp, #88]	; 0x58
   13e5c:	str	r6, [sp, #96]	; 0x60
   13e60:	mov	r9, r1
   13e64:	str	r5, [sp, #100]	; 0x64
   13e68:	mov	r6, ip
   13e6c:	mov	r5, r7
   13e70:	add	r3, sp, #104	; 0x68
   13e74:	sub	r0, r0, #1
   13e78:	str	r3, [sp, #80]	; 0x50
   13e7c:	str	r0, [sp, #84]	; 0x54
   13e80:	str	r1, [sp, #60]	; 0x3c
   13e84:	str	r4, [sp, #92]	; 0x5c
   13e88:	ldr	r2, [sp, #32]
   13e8c:	add	r7, r9, fp
   13e90:	add	r0, sp, #104	; 0x68
   13e94:	mov	r3, r5
   13e98:	add	r4, r2, r7
   13e9c:	rsb	r2, r7, r8
   13ea0:	mov	r1, r4
   13ea4:	bl	11260 <mbrtowc@plt>
   13ea8:	subs	r2, r0, #0
   13eac:	beq	13fb8 <close_stdout@@Base+0x1264>
   13eb0:	cmn	r2, #1
   13eb4:	beq	140e0 <close_stdout@@Base+0x138c>
   13eb8:	cmn	r2, #2
   13ebc:	beq	14084 <close_stdout@@Base+0x1330>
   13ec0:	ldr	r3, [sp, #36]	; 0x24
   13ec4:	ldr	r0, [sp, #160]	; 0xa0
   13ec8:	cmp	r0, #2
   13ecc:	movne	r3, #0
   13ed0:	andeq	r3, r3, #1
   13ed4:	cmp	r3, #0
   13ed8:	beq	13f94 <close_stdout@@Base+0x1240>
   13edc:	cmp	r2, #1
   13ee0:	beq	13f94 <close_stdout@@Base+0x1240>
   13ee4:	ldr	r1, [sp, #84]	; 0x54
   13ee8:	add	r3, r1, r2
   13eec:	add	r7, r3, r7
   13ef0:	ldrb	r3, [r4, #1]!
   13ef4:	sub	r3, r3, #91	; 0x5b
   13ef8:	cmp	r3, #33	; 0x21
   13efc:	addls	pc, pc, r3, lsl #2
   13f00:	b	13f8c <close_stdout@@Base+0x1238>
   13f04:	b	13984 <close_stdout@@Base+0xc30>
   13f08:	b	13984 <close_stdout@@Base+0xc30>
   13f0c:	b	13f8c <close_stdout@@Base+0x1238>
   13f10:	b	13984 <close_stdout@@Base+0xc30>
   13f14:	b	13f8c <close_stdout@@Base+0x1238>
   13f18:	b	13984 <close_stdout@@Base+0xc30>
   13f1c:	b	13f8c <close_stdout@@Base+0x1238>
   13f20:	b	13f8c <close_stdout@@Base+0x1238>
   13f24:	b	13f8c <close_stdout@@Base+0x1238>
   13f28:	b	13f8c <close_stdout@@Base+0x1238>
   13f2c:	b	13f8c <close_stdout@@Base+0x1238>
   13f30:	b	13f8c <close_stdout@@Base+0x1238>
   13f34:	b	13f8c <close_stdout@@Base+0x1238>
   13f38:	b	13f8c <close_stdout@@Base+0x1238>
   13f3c:	b	13f8c <close_stdout@@Base+0x1238>
   13f40:	b	13f8c <close_stdout@@Base+0x1238>
   13f44:	b	13f8c <close_stdout@@Base+0x1238>
   13f48:	b	13f8c <close_stdout@@Base+0x1238>
   13f4c:	b	13f8c <close_stdout@@Base+0x1238>
   13f50:	b	13f8c <close_stdout@@Base+0x1238>
   13f54:	b	13f8c <close_stdout@@Base+0x1238>
   13f58:	b	13f8c <close_stdout@@Base+0x1238>
   13f5c:	b	13f8c <close_stdout@@Base+0x1238>
   13f60:	b	13f8c <close_stdout@@Base+0x1238>
   13f64:	b	13f8c <close_stdout@@Base+0x1238>
   13f68:	b	13f8c <close_stdout@@Base+0x1238>
   13f6c:	b	13f8c <close_stdout@@Base+0x1238>
   13f70:	b	13f8c <close_stdout@@Base+0x1238>
   13f74:	b	13f8c <close_stdout@@Base+0x1238>
   13f78:	b	13f8c <close_stdout@@Base+0x1238>
   13f7c:	b	13f8c <close_stdout@@Base+0x1238>
   13f80:	b	13f8c <close_stdout@@Base+0x1238>
   13f84:	b	13f8c <close_stdout@@Base+0x1238>
   13f88:	b	13984 <close_stdout@@Base+0xc30>
   13f8c:	cmp	r4, r7
   13f90:	bne	13ef0 <close_stdout@@Base+0x119c>
   13f94:	ldr	r0, [sp, #104]	; 0x68
   13f98:	add	r9, r9, r2
   13f9c:	bl	1144c <iswprint@plt>
   13fa0:	cmp	r0, #0
   13fa4:	mov	r0, r5
   13fa8:	moveq	r6, #0
   13fac:	bl	11314 <mbsinit@plt>
   13fb0:	cmp	r0, #0
   13fb4:	beq	13e88 <close_stdout@@Base+0x1134>
   13fb8:	mov	ip, r6
   13fbc:	eor	r2, ip, #1
   13fc0:	str	r9, [sp, #60]	; 0x3c
   13fc4:	ldr	r4, [sp, #92]	; 0x5c
   13fc8:	uxtb	r2, r2
   13fcc:	ldr	r9, [sp, #88]	; 0x58
   13fd0:	ldr	r6, [sp, #96]	; 0x60
   13fd4:	ldr	r5, [sp, #100]	; 0x64
   13fd8:	ldr	r3, [sp, #60]	; 0x3c
   13fdc:	cmp	r3, #1
   13fe0:	bls	13b64 <close_stdout@@Base+0xe10>
   13fe4:	ldr	r0, [sp, #24]
   13fe8:	and	r2, r2, r0
   13fec:	b	13b70 <close_stdout@@Base+0xe1c>
   13ff0:	ldr	r2, [sp, #164]	; 0xa4
   13ff4:	tst	r2, #1
   13ff8:	addne	fp, fp, #1
   13ffc:	bne	1352c <close_stdout@@Base+0x7d8>
   14000:	b	1383c <close_stdout@@Base+0xae8>
   14004:	ldr	r0, [sp, #36]	; 0x24
   14008:	cmp	r0, #0
   1400c:	beq	1383c <close_stdout@@Base+0xae8>
   14010:	b	13984 <close_stdout@@Base+0xc30>
   14014:	ldr	r2, [sp, #32]
   14018:	ldrb	r3, [r2, #1]
   1401c:	adds	r3, r3, #0
   14020:	movne	r3, #1
   14024:	b	13958 <close_stdout@@Base+0xc04>
   14028:	bl	11188 <abort@plt>
   1402c:	ldr	r8, [sp, #60]	; 0x3c
   14030:	b	13984 <close_stdout@@Base+0xc30>
   14034:	ldr	r0, [sp, #32]
   14038:	bl	112d8 <strlen@plt>
   1403c:	mov	r8, r0
   14040:	b	13e4c <close_stdout@@Base+0x10f8>
   14044:	ldr	r2, [pc, #288]	; 1416c <close_stdout@@Base+0x1418>
   14048:	mov	r1, #1
   1404c:	mov	r9, r1
   14050:	str	r1, [sp, #24]
   14054:	add	r2, pc, r2
   14058:	str	r1, [sp, #28]
   1405c:	str	r2, [sp, #52]	; 0x34
   14060:	b	13508 <close_stdout@@Base+0x7b4>
   14064:	ldr	r2, [pc, #260]	; 14170 <close_stdout@@Base+0x141c>
   14068:	mov	r3, #1
   1406c:	mov	r9, r3
   14070:	str	r3, [sp, #28]
   14074:	add	r2, pc, r2
   14078:	str	sl, [sp, #24]
   1407c:	str	r2, [sp, #52]	; 0x34
   14080:	b	13508 <close_stdout@@Base+0x7b4>
   14084:	cmp	r8, r7
   14088:	str	r9, [sp, #60]	; 0x3c
   1408c:	mov	ip, r4
   14090:	ldr	r6, [sp, #96]	; 0x60
   14094:	ldr	r9, [sp, #88]	; 0x58
   14098:	ldr	r4, [sp, #92]	; 0x5c
   1409c:	ldr	r5, [sp, #100]	; 0x64
   140a0:	bls	140d8 <close_stdout@@Base+0x1384>
   140a4:	ldrb	r3, [ip]
   140a8:	cmp	r3, #0
   140ac:	beq	140d8 <close_stdout@@Base+0x1384>
   140b0:	ldr	r3, [sp, #60]	; 0x3c
   140b4:	b	140c4 <close_stdout@@Base+0x1370>
   140b8:	ldrb	r2, [r5, r3]
   140bc:	cmp	r2, #0
   140c0:	beq	140d4 <close_stdout@@Base+0x1380>
   140c4:	add	r3, r3, #1
   140c8:	add	r2, fp, r3
   140cc:	cmp	r8, r2
   140d0:	bhi	140b8 <close_stdout@@Base+0x1364>
   140d4:	str	r3, [sp, #60]	; 0x3c
   140d8:	mov	r2, #1
   140dc:	b	13fd8 <close_stdout@@Base+0x1284>
   140e0:	str	r9, [sp, #60]	; 0x3c
   140e4:	mov	r2, #1
   140e8:	ldr	r4, [sp, #92]	; 0x5c
   140ec:	ldr	r6, [sp, #96]	; 0x60
   140f0:	ldr	r9, [sp, #88]	; 0x58
   140f4:	ldr	r5, [sp, #100]	; 0x64
   140f8:	b	13fd8 <close_stdout@@Base+0x1284>
   140fc:	ldr	r9, [sp, #36]	; 0x24
   14100:	b	13d24 <close_stdout@@Base+0xfd0>
   14104:	bl	113d4 <__stack_chk_fail@plt>
   14108:	ldr	r1, [pc, #100]	; 14174 <close_stdout@@Base+0x1420>
   1410c:	mov	r3, #0
   14110:	mov	r0, #1
   14114:	str	r3, [sp, #24]
   14118:	add	r1, pc, r1
   1411c:	str	r0, [sp, #28]
   14120:	mov	r9, r3
   14124:	str	r1, [sp, #52]	; 0x34
   14128:	b	13508 <close_stdout@@Base+0x7b4>
   1412c:	ldr	r0, [pc, #68]	; 14178 <close_stdout@@Base+0x1424>
   14130:	mov	r3, #1
   14134:	mov	r9, #0
   14138:	str	r3, [sp, #24]
   1413c:	add	r0, pc, r0
   14140:	str	r3, [sp, #28]
   14144:	str	r0, [sp, #52]	; 0x34
   14148:	b	13508 <close_stdout@@Base+0x7b4>
   1414c:	andeq	r4, r1, r8, lsl #23
   14150:	andeq	r0, r0, r8, lsr #2
   14154:	andeq	r3, r0, r4, ror #8
   14158:	andeq	r3, r0, r0, asr #8
   1415c:	strdeq	r3, [r0], -ip
   14160:	ldrdeq	r3, [r0], -r8
   14164:	andeq	r3, r0, ip, asr r3
   14168:	andeq	r3, r0, r4, lsl #6
   1416c:	andeq	r3, r0, ip, asr r0
   14170:	andeq	r3, r0, r8, lsr r0
   14174:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   14178:	andeq	r2, r0, r4, ror pc
   1417c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14180:	sub	sp, sp, #44	; 0x2c
   14184:	mov	r6, r0
   14188:	mov	r9, r1
   1418c:	mov	sl, r2
   14190:	mov	r4, r3
   14194:	bl	1147c <__errno_location@plt>
   14198:	ldr	fp, [pc, #412]	; 1433c <close_stdout@@Base+0x15e8>
   1419c:	cmp	r6, #0
   141a0:	add	fp, pc, fp
   141a4:	ldr	r5, [fp]
   141a8:	ldr	r1, [r0]
   141ac:	mov	r8, r0
   141b0:	str	r1, [sp, #36]	; 0x24
   141b4:	blt	14334 <close_stdout@@Base+0x15e0>
   141b8:	ldr	r3, [pc, #384]	; 14340 <close_stdout@@Base+0x15ec>
   141bc:	add	r3, pc, r3
   141c0:	ldr	r3, [r3]
   141c4:	cmp	r6, r3
   141c8:	bcc	1421c <close_stdout@@Base+0x14c8>
   141cc:	add	r7, r6, #1
   141d0:	cmn	r7, #-536870911	; 0xe0000001
   141d4:	bhi	14338 <close_stdout@@Base+0x15e4>
   141d8:	add	r3, fp, #4
   141dc:	cmp	r5, r3
   141e0:	beq	1430c <close_stdout@@Base+0x15b8>
   141e4:	mov	r0, r5
   141e8:	lsl	r1, r7, #3
   141ec:	bl	15020 <close_stdout@@Base+0x22cc>
   141f0:	mov	r5, r0
   141f4:	str	r0, [fp]
   141f8:	ldr	fp, [pc, #324]	; 14344 <close_stdout@@Base+0x15f0>
   141fc:	mov	r1, #0
   14200:	add	fp, pc, fp
   14204:	ldr	r0, [fp]
   14208:	rsb	r2, r0, r7
   1420c:	add	r0, r5, r0, lsl #3
   14210:	lsl	r2, r2, #3
   14214:	bl	11230 <memset@plt>
   14218:	str	r7, [fp]
   1421c:	add	r2, r4, #8
   14220:	str	r2, [sp, #32]
   14224:	ldr	r1, [r4]
   14228:	add	fp, r5, r6, lsl #3
   1422c:	ldr	lr, [sp, #32]
   14230:	mov	r2, r9
   14234:	ldr	r3, [r4, #4]
   14238:	ldr	ip, [r5, r6, lsl #3]
   1423c:	ldr	r7, [fp, #4]
   14240:	orr	r3, r3, #1
   14244:	str	r1, [sp]
   14248:	str	r3, [sp, #4]
   1424c:	mov	r1, ip
   14250:	str	lr, [sp, #8]
   14254:	mov	r0, r7
   14258:	ldr	lr, [r4, #40]	; 0x28
   1425c:	str	r3, [sp, #28]
   14260:	mov	r3, sl
   14264:	str	lr, [sp, #12]
   14268:	ldr	lr, [r4, #44]	; 0x2c
   1426c:	str	ip, [sp, #24]
   14270:	str	lr, [sp, #16]
   14274:	bl	13454 <close_stdout@@Base+0x700>
   14278:	ldr	ip, [sp, #24]
   1427c:	cmp	ip, r0
   14280:	bhi	142f8 <close_stdout@@Base+0x15a4>
   14284:	ldr	r3, [pc, #188]	; 14348 <close_stdout@@Base+0x15f4>
   14288:	add	r1, r0, #1
   1428c:	str	r1, [r5, r6, lsl #3]
   14290:	add	r3, pc, r3
   14294:	cmp	r7, r3
   14298:	beq	142ac <close_stdout@@Base+0x1558>
   1429c:	mov	r0, r7
   142a0:	str	r1, [sp, #24]
   142a4:	bl	11290 <free@plt>
   142a8:	ldr	r1, [sp, #24]
   142ac:	mov	r0, r1
   142b0:	str	r1, [sp, #24]
   142b4:	bl	14fc8 <close_stdout@@Base+0x2274>
   142b8:	ldr	r3, [sp, #28]
   142bc:	ldr	lr, [sp, #32]
   142c0:	mov	r2, r9
   142c4:	str	r0, [fp, #4]
   142c8:	mov	r7, r0
   142cc:	ldr	ip, [r4]
   142d0:	str	r3, [sp, #4]
   142d4:	mov	r3, sl
   142d8:	str	lr, [sp, #8]
   142dc:	str	ip, [sp]
   142e0:	ldr	ip, [r4, #40]	; 0x28
   142e4:	ldr	r1, [sp, #24]
   142e8:	str	ip, [sp, #12]
   142ec:	ldr	ip, [r4, #44]	; 0x2c
   142f0:	str	ip, [sp, #16]
   142f4:	bl	13454 <close_stdout@@Base+0x700>
   142f8:	ldr	r1, [sp, #36]	; 0x24
   142fc:	mov	r0, r7
   14300:	str	r1, [r8]
   14304:	add	sp, sp, #44	; 0x2c
   14308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1430c:	lsl	r1, r7, #3
   14310:	mov	r0, #0
   14314:	str	r3, [sp, #24]
   14318:	bl	15020 <close_stdout@@Base+0x22cc>
   1431c:	ldr	r3, [sp, #24]
   14320:	mov	r5, r0
   14324:	ldm	r3, {r0, r1}
   14328:	str	r5, [fp]
   1432c:	stm	r5, {r0, r1}
   14330:	b	141f8 <close_stdout@@Base+0x14a4>
   14334:	bl	11188 <abort@plt>
   14338:	bl	151dc <close_stdout@@Base+0x2488>
   1433c:	andeq	r3, r1, ip, ror #31
   14340:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14344:	andeq	r3, r1, r8, asr pc
   14348:	andeq	r3, r1, r8, lsr #30
   1434c:	push	{r4, r5, r6, lr}
   14350:	mov	r5, r0
   14354:	bl	1147c <__errno_location@plt>
   14358:	cmp	r5, #0
   1435c:	mov	r1, #48	; 0x30
   14360:	mov	r4, r0
   14364:	ldr	r0, [pc, #24]	; 14384 <close_stdout@@Base+0x1630>
   14368:	ldr	r6, [r4]
   1436c:	add	r0, pc, r0
   14370:	add	r0, r0, #256	; 0x100
   14374:	movne	r0, r5
   14378:	bl	1519c <close_stdout@@Base+0x2448>
   1437c:	str	r6, [r4]
   14380:	pop	{r4, r5, r6, pc}
   14384:	andeq	r3, r1, ip, asr #28
   14388:	cmp	r0, #0
   1438c:	beq	14398 <close_stdout@@Base+0x1644>
   14390:	ldr	r0, [r0]
   14394:	bx	lr
   14398:	ldr	r0, [pc, #12]	; 143ac <close_stdout@@Base+0x1658>
   1439c:	add	r0, pc, r0
   143a0:	add	r0, r0, #256	; 0x100
   143a4:	ldr	r0, [r0]
   143a8:	bx	lr
   143ac:	andeq	r3, r1, ip, lsl lr
   143b0:	cmp	r0, #0
   143b4:	beq	143c0 <close_stdout@@Base+0x166c>
   143b8:	str	r1, [r0]
   143bc:	bx	lr
   143c0:	ldr	r0, [pc, #12]	; 143d4 <close_stdout@@Base+0x1680>
   143c4:	add	r0, pc, r0
   143c8:	add	r0, r0, #256	; 0x100
   143cc:	str	r1, [r0]
   143d0:	bx	lr
   143d4:	strdeq	r3, [r1], -r4
   143d8:	cmp	r0, #0
   143dc:	movne	r3, r0
   143e0:	beq	14410 <close_stdout@@Base+0x16bc>
   143e4:	lsr	ip, r1, #5
   143e8:	and	r1, r1, #31
   143ec:	add	r3, r3, ip, lsl #2
   143f0:	ldr	ip, [r3, #8]
   143f4:	lsr	r0, ip, r1
   143f8:	eor	r2, r0, r2
   143fc:	and	r0, r0, #1
   14400:	and	r2, r2, #1
   14404:	eor	ip, ip, r2, lsl r1
   14408:	str	ip, [r3, #8]
   1440c:	bx	lr
   14410:	ldr	r3, [pc, #8]	; 14420 <close_stdout@@Base+0x16cc>
   14414:	add	r3, pc, r3
   14418:	add	r3, r3, #256	; 0x100
   1441c:	b	143e4 <close_stdout@@Base+0x1690>
   14420:	andeq	r3, r1, r4, lsr #27
   14424:	subs	r3, r0, #0
   14428:	beq	14438 <close_stdout@@Base+0x16e4>
   1442c:	ldr	r0, [r3, #4]
   14430:	str	r1, [r3, #4]
   14434:	bx	lr
   14438:	ldr	r3, [pc, #8]	; 14448 <close_stdout@@Base+0x16f4>
   1443c:	add	r3, pc, r3
   14440:	add	r3, r3, #256	; 0x100
   14444:	b	1442c <close_stdout@@Base+0x16d8>
   14448:	andeq	r3, r1, ip, ror sp
   1444c:	cmp	r0, #0
   14450:	push	{r3, lr}
   14454:	beq	14478 <close_stdout@@Base+0x1724>
   14458:	cmp	r2, #0
   1445c:	cmpne	r1, #0
   14460:	mov	r3, #8
   14464:	strne	r1, [r0, #40]	; 0x28
   14468:	str	r3, [r0]
   1446c:	strne	r2, [r0, #44]	; 0x2c
   14470:	popne	{r3, pc}
   14474:	bl	11188 <abort@plt>
   14478:	ldr	r0, [pc, #8]	; 14488 <close_stdout@@Base+0x1734>
   1447c:	add	r0, pc, r0
   14480:	add	r0, r0, #256	; 0x100
   14484:	b	14458 <close_stdout@@Base+0x1704>
   14488:	andeq	r3, r1, ip, lsr sp
   1448c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14490:	sub	sp, sp, #24
   14494:	mov	r7, r0
   14498:	mov	sl, r1
   1449c:	ldr	r4, [sp, #56]	; 0x38
   144a0:	mov	r9, r2
   144a4:	mov	r8, r3
   144a8:	cmp	r4, #0
   144ac:	beq	14500 <close_stdout@@Base+0x17ac>
   144b0:	bl	1147c <__errno_location@plt>
   144b4:	ldr	r3, [r4]
   144b8:	add	lr, r4, #8
   144bc:	mov	r1, sl
   144c0:	mov	r2, r9
   144c4:	ldr	r6, [r0]
   144c8:	mov	r5, r0
   144cc:	str	r3, [sp]
   144d0:	mov	r0, r7
   144d4:	ldr	ip, [r4, #4]
   144d8:	mov	r3, r8
   144dc:	stmib	sp, {ip, lr}
   144e0:	ldr	ip, [r4, #40]	; 0x28
   144e4:	str	ip, [sp, #12]
   144e8:	ldr	ip, [r4, #44]	; 0x2c
   144ec:	str	ip, [sp, #16]
   144f0:	bl	13454 <close_stdout@@Base+0x700>
   144f4:	str	r6, [r5]
   144f8:	add	sp, sp, #24
   144fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14500:	ldr	r4, [pc, #8]	; 14510 <close_stdout@@Base+0x17bc>
   14504:	add	r4, pc, r4
   14508:	add	r4, r4, #256	; 0x100
   1450c:	b	144b0 <close_stdout@@Base+0x175c>
   14510:			; <UNDEFINED> instruction: 0x00013cb4
   14514:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14518:	subs	r4, r3, #0
   1451c:	sub	sp, sp, #36	; 0x24
   14520:	mov	r7, r0
   14524:	mov	r6, r1
   14528:	mov	r5, r2
   1452c:	beq	145e8 <close_stdout@@Base+0x1894>
   14530:	bl	1147c <__errno_location@plt>
   14534:	ldr	r3, [r4]
   14538:	ldr	sl, [r4, #4]
   1453c:	add	r9, r4, #8
   14540:	mov	r8, r0
   14544:	mov	r0, #0
   14548:	ldr	r2, [r8]
   1454c:	cmp	r5, r0
   14550:	orreq	sl, sl, #1
   14554:	str	r9, [sp, #8]
   14558:	mov	r1, r0
   1455c:	stm	sp, {r3, sl}
   14560:	mov	r3, r6
   14564:	ldr	ip, [r4, #40]	; 0x28
   14568:	str	r2, [sp, #28]
   1456c:	mov	r2, r7
   14570:	str	ip, [sp, #12]
   14574:	ldr	ip, [r4, #44]	; 0x2c
   14578:	str	ip, [sp, #16]
   1457c:	bl	13454 <close_stdout@@Base+0x700>
   14580:	add	r1, r0, #1
   14584:	mov	fp, r0
   14588:	str	r1, [sp, #24]
   1458c:	mov	r0, r1
   14590:	bl	14fc8 <close_stdout@@Base+0x2274>
   14594:	ldr	lr, [r4]
   14598:	str	sl, [sp, #4]
   1459c:	mov	r3, r6
   145a0:	str	r9, [sp, #8]
   145a4:	mov	r2, r7
   145a8:	str	lr, [sp]
   145ac:	ldr	lr, [r4, #40]	; 0x28
   145b0:	ldr	r1, [sp, #24]
   145b4:	str	lr, [sp, #12]
   145b8:	ldr	lr, [r4, #44]	; 0x2c
   145bc:	str	lr, [sp, #16]
   145c0:	str	r0, [sp, #24]
   145c4:	bl	13454 <close_stdout@@Base+0x700>
   145c8:	ldr	r3, [sp, #28]
   145cc:	cmp	r5, #0
   145d0:	str	r3, [r8]
   145d4:	ldr	ip, [sp, #24]
   145d8:	strne	fp, [r5]
   145dc:	mov	r0, ip
   145e0:	add	sp, sp, #36	; 0x24
   145e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145e8:	ldr	r4, [pc, #8]	; 145f8 <close_stdout@@Base+0x18a4>
   145ec:	add	r4, pc, r4
   145f0:	add	r4, r4, #256	; 0x100
   145f4:	b	14530 <close_stdout@@Base+0x17dc>
   145f8:	andeq	r3, r1, ip, asr #23
   145fc:	mov	r3, r2
   14600:	mov	r2, #0
   14604:	b	14514 <close_stdout@@Base+0x17c0>
   14608:	ldr	r2, [pc, #152]	; 146a8 <close_stdout@@Base+0x1954>
   1460c:	push	{r3, r4, r5, r6, r7, lr}
   14610:	add	r2, pc, r2
   14614:	ldr	r3, [pc, #144]	; 146ac <close_stdout@@Base+0x1958>
   14618:	ldr	r6, [r2]
   1461c:	add	r3, pc, r3
   14620:	cmp	r6, #1
   14624:	ldr	r7, [r3]
   14628:	movhi	r4, #1
   1462c:	movhi	r5, r7
   14630:	bls	1464c <close_stdout@@Base+0x18f8>
   14634:	ldr	r0, [r5, #12]
   14638:	add	r4, r4, #1
   1463c:	bl	11290 <free@plt>
   14640:	cmp	r4, r6
   14644:	add	r5, r5, #8
   14648:	bne	14634 <close_stdout@@Base+0x18e0>
   1464c:	ldr	r4, [pc, #92]	; 146b0 <close_stdout@@Base+0x195c>
   14650:	ldr	r0, [r7, #4]
   14654:	add	r4, pc, r4
   14658:	cmp	r0, r4
   1465c:	beq	14674 <close_stdout@@Base+0x1920>
   14660:	bl	11290 <free@plt>
   14664:	ldr	r3, [pc, #72]	; 146b4 <close_stdout@@Base+0x1960>
   14668:	mov	r2, #256	; 0x100
   1466c:	add	r3, pc, r3
   14670:	stmib	r3, {r2, r4}
   14674:	ldr	r4, [pc, #60]	; 146b8 <close_stdout@@Base+0x1964>
   14678:	add	r4, pc, r4
   1467c:	add	r5, r4, #4
   14680:	cmp	r7, r5
   14684:	beq	14694 <close_stdout@@Base+0x1940>
   14688:	mov	r0, r7
   1468c:	bl	11290 <free@plt>
   14690:	str	r5, [r4]
   14694:	ldr	r3, [pc, #32]	; 146bc <close_stdout@@Base+0x1968>
   14698:	mov	r2, #1
   1469c:	add	r3, pc, r3
   146a0:	str	r2, [r3]
   146a4:	pop	{r3, r4, r5, r6, r7, pc}
   146a8:	andeq	r3, r1, r8, asr #22
   146ac:	andeq	r3, r1, r0, ror fp
   146b0:	andeq	r3, r1, r4, ror #22
   146b4:	andeq	r3, r1, r0, lsr #22
   146b8:	andeq	r3, r1, r4, lsl fp
   146bc:			; <UNDEFINED> instruction: 0x00013abc
   146c0:	ldr	r3, [pc, #12]	; 146d4 <close_stdout@@Base+0x1980>
   146c4:	mvn	r2, #0
   146c8:	add	r3, pc, r3
   146cc:	add	r3, r3, #256	; 0x100
   146d0:	b	1417c <close_stdout@@Base+0x1428>
   146d4:	strdeq	r3, [r1], -r0
   146d8:	ldr	r3, [pc, #8]	; 146e8 <close_stdout@@Base+0x1994>
   146dc:	add	r3, pc, r3
   146e0:	add	r3, r3, #256	; 0x100
   146e4:	b	1417c <close_stdout@@Base+0x1428>
   146e8:	ldrdeq	r3, [r1], -ip
   146ec:	mov	r1, r0
   146f0:	mov	r0, #0
   146f4:	b	146c0 <close_stdout@@Base+0x196c>
   146f8:	mov	r2, r1
   146fc:	mov	r1, r0
   14700:	mov	r0, #0
   14704:	b	146d8 <close_stdout@@Base+0x1984>
   14708:	ldr	r3, [pc, #92]	; 1476c <close_stdout@@Base+0x1a18>
   1470c:	ldr	ip, [pc, #92]	; 14770 <close_stdout@@Base+0x1a1c>
   14710:	add	r3, pc, r3
   14714:	push	{r4, r5, r6, r7, lr}
   14718:	sub	sp, sp, #60	; 0x3c
   1471c:	ldr	r4, [r3, ip]
   14720:	add	r5, sp, #4
   14724:	mov	r7, r2
   14728:	mov	r6, r0
   1472c:	mov	r0, r5
   14730:	ldr	r3, [r4]
   14734:	str	r3, [sp, #52]	; 0x34
   14738:	bl	1329c <close_stdout@@Base+0x548>
   1473c:	mov	r3, r5
   14740:	mvn	r2, #0
   14744:	mov	r0, r6
   14748:	mov	r1, r7
   1474c:	bl	1417c <close_stdout@@Base+0x1428>
   14750:	ldr	r2, [sp, #52]	; 0x34
   14754:	ldr	r3, [r4]
   14758:	cmp	r2, r3
   1475c:	bne	14768 <close_stdout@@Base+0x1a14>
   14760:	add	sp, sp, #60	; 0x3c
   14764:	pop	{r4, r5, r6, r7, pc}
   14768:	bl	113d4 <__stack_chk_fail@plt>
   1476c:	andeq	r3, r1, r8, ror #17
   14770:	andeq	r0, r0, r8, lsr #2
   14774:	ldr	ip, [pc, #96]	; 147dc <close_stdout@@Base+0x1a88>
   14778:	push	{r4, r5, r6, r7, r8, lr}
   1477c:	add	ip, pc, ip
   14780:	ldr	lr, [pc, #88]	; 147e0 <close_stdout@@Base+0x1a8c>
   14784:	sub	sp, sp, #56	; 0x38
   14788:	mov	r8, r3
   1478c:	add	r5, sp, #4
   14790:	mov	r7, r2
   14794:	mov	r6, r0
   14798:	ldr	r4, [ip, lr]
   1479c:	mov	r0, r5
   147a0:	ldr	r3, [r4]
   147a4:	str	r3, [sp, #52]	; 0x34
   147a8:	bl	1329c <close_stdout@@Base+0x548>
   147ac:	mov	r2, r8
   147b0:	mov	r3, r5
   147b4:	mov	r0, r6
   147b8:	mov	r1, r7
   147bc:	bl	1417c <close_stdout@@Base+0x1428>
   147c0:	ldr	r2, [sp, #52]	; 0x34
   147c4:	ldr	r3, [r4]
   147c8:	cmp	r2, r3
   147cc:	bne	147d8 <close_stdout@@Base+0x1a84>
   147d0:	add	sp, sp, #56	; 0x38
   147d4:	pop	{r4, r5, r6, r7, r8, pc}
   147d8:	bl	113d4 <__stack_chk_fail@plt>
   147dc:	andeq	r3, r1, ip, ror r8
   147e0:	andeq	r0, r0, r8, lsr #2
   147e4:	mov	r2, r1
   147e8:	mov	r1, r0
   147ec:	mov	r0, #0
   147f0:	b	14708 <close_stdout@@Base+0x19b4>
   147f4:	mov	ip, r1
   147f8:	mov	r3, r2
   147fc:	mov	r1, r0
   14800:	mov	r2, ip
   14804:	mov	r0, #0
   14808:	b	14774 <close_stdout@@Base+0x1a20>
   1480c:	push	{r4, r5, r6, r7, r8, lr}
   14810:	mov	r5, r2
   14814:	ldr	lr, [pc, #136]	; 148a4 <close_stdout@@Base+0x1b50>
   14818:	mov	r7, r0
   1481c:	mov	r6, r1
   14820:	ldr	r4, [pc, #128]	; 148a8 <close_stdout@@Base+0x1b54>
   14824:	add	lr, pc, lr
   14828:	sub	sp, sp, #56	; 0x38
   1482c:	add	lr, lr, #256	; 0x100
   14830:	ldr	r8, [pc, #116]	; 148ac <close_stdout@@Base+0x1b58>
   14834:	add	r4, pc, r4
   14838:	add	ip, sp, #4
   1483c:	ldm	lr!, {r0, r1, r2, r3}
   14840:	ldr	r4, [r4, r8]
   14844:	stmia	ip!, {r0, r1, r2, r3}
   14848:	ldm	lr!, {r0, r1, r2, r3}
   1484c:	ldr	r8, [r4]
   14850:	stmia	ip!, {r0, r1, r2, r3}
   14854:	ldm	lr, {r0, r1, r2, r3}
   14858:	str	r8, [sp, #52]	; 0x34
   1485c:	stm	ip, {r0, r1, r2, r3}
   14860:	mov	r1, r5
   14864:	add	r5, sp, #4
   14868:	mov	r2, #1
   1486c:	mov	r0, r5
   14870:	bl	143d8 <close_stdout@@Base+0x1684>
   14874:	mov	r2, r6
   14878:	mov	r3, r5
   1487c:	mov	r1, r7
   14880:	mov	r0, #0
   14884:	bl	1417c <close_stdout@@Base+0x1428>
   14888:	ldr	r2, [sp, #52]	; 0x34
   1488c:	ldr	r3, [r4]
   14890:	cmp	r2, r3
   14894:	bne	148a0 <close_stdout@@Base+0x1b4c>
   14898:	add	sp, sp, #56	; 0x38
   1489c:	pop	{r4, r5, r6, r7, r8, pc}
   148a0:	bl	113d4 <__stack_chk_fail@plt>
   148a4:	muleq	r1, r4, r9
   148a8:	andeq	r3, r1, r4, asr #15
   148ac:	andeq	r0, r0, r8, lsr #2
   148b0:	mov	r2, r1
   148b4:	mvn	r1, #0
   148b8:	b	1480c <close_stdout@@Base+0x1ab8>
   148bc:	mov	r1, #58	; 0x3a
   148c0:	b	148b0 <close_stdout@@Base+0x1b5c>
   148c4:	mov	r2, #58	; 0x3a
   148c8:	b	1480c <close_stdout@@Base+0x1ab8>
   148cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   148d0:	mov	r5, r2
   148d4:	ldr	lr, [pc, #144]	; 1496c <close_stdout@@Base+0x1c18>
   148d8:	mov	r8, r0
   148dc:	mov	r9, r1
   148e0:	mov	r7, r3
   148e4:	add	lr, pc, lr
   148e8:	ldr	r4, [pc, #128]	; 14970 <close_stdout@@Base+0x1c1c>
   148ec:	add	lr, lr, #256	; 0x100
   148f0:	sub	sp, sp, #56	; 0x38
   148f4:	ldr	sl, [pc, #120]	; 14974 <close_stdout@@Base+0x1c20>
   148f8:	add	r4, pc, r4
   148fc:	ldm	lr!, {r0, r1, r2, r3}
   14900:	add	ip, sp, #4
   14904:	ldr	r4, [r4, sl]
   14908:	ldr	r6, [sp, #88]	; 0x58
   1490c:	stmia	ip!, {r0, r1, r2, r3}
   14910:	ldm	lr!, {r0, r1, r2, r3}
   14914:	ldr	sl, [r4]
   14918:	stmia	ip!, {r0, r1, r2, r3}
   1491c:	ldm	lr, {r0, r1, r2, r3}
   14920:	str	sl, [sp, #52]	; 0x34
   14924:	stm	ip, {r0, r1, r2, r3}
   14928:	mov	r2, r5
   1492c:	add	r5, sp, #4
   14930:	mov	r1, r9
   14934:	mov	r0, r5
   14938:	bl	1444c <close_stdout@@Base+0x16f8>
   1493c:	mov	r2, r6
   14940:	mov	r3, r5
   14944:	mov	r0, r8
   14948:	mov	r1, r7
   1494c:	bl	1417c <close_stdout@@Base+0x1428>
   14950:	ldr	r2, [sp, #52]	; 0x34
   14954:	ldr	r3, [r4]
   14958:	cmp	r2, r3
   1495c:	bne	14968 <close_stdout@@Base+0x1c14>
   14960:	add	sp, sp, #56	; 0x38
   14964:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14968:	bl	113d4 <__stack_chk_fail@plt>
   1496c:	ldrdeq	r3, [r1], -r4
   14970:	andeq	r3, r1, r0, lsl #14
   14974:	andeq	r0, r0, r8, lsr #2
   14978:	push	{lr}		; (str lr, [sp, #-4]!)
   1497c:	sub	sp, sp, #12
   14980:	mvn	ip, #0
   14984:	str	ip, [sp]
   14988:	bl	148cc <close_stdout@@Base+0x1b78>
   1498c:	add	sp, sp, #12
   14990:	pop	{pc}		; (ldr pc, [sp], #4)
   14994:	mov	ip, r1
   14998:	mov	r3, r2
   1499c:	mov	r1, r0
   149a0:	mov	r2, ip
   149a4:	mov	r0, #0
   149a8:	b	14978 <close_stdout@@Base+0x1c24>
   149ac:	push	{lr}		; (str lr, [sp, #-4]!)
   149b0:	sub	sp, sp, #12
   149b4:	mov	lr, r1
   149b8:	mov	ip, r2
   149bc:	mov	r1, r0
   149c0:	str	r3, [sp]
   149c4:	mov	r2, lr
   149c8:	mov	r3, ip
   149cc:	mov	r0, #0
   149d0:	bl	148cc <close_stdout@@Base+0x1b78>
   149d4:	add	sp, sp, #12
   149d8:	pop	{pc}		; (ldr pc, [sp], #4)
   149dc:	ldr	r3, [pc, #12]	; 149f0 <close_stdout@@Base+0x1c9c>
   149e0:	ldr	ip, [pc, #12]	; 149f4 <close_stdout@@Base+0x1ca0>
   149e4:	add	r3, pc, r3
   149e8:	ldr	r3, [r3, ip]
   149ec:	b	1417c <close_stdout@@Base+0x1428>
   149f0:	andeq	r3, r1, r4, lsl r6
   149f4:	andeq	r0, r0, r8, lsl r1
   149f8:	mov	r2, r1
   149fc:	mov	r1, r0
   14a00:	mov	r0, #0
   14a04:	b	149dc <close_stdout@@Base+0x1c88>
   14a08:	mvn	r2, #0
   14a0c:	b	149dc <close_stdout@@Base+0x1c88>
   14a10:	mov	r1, r0
   14a14:	mov	r0, #0
   14a18:	b	14a08 <close_stdout@@Base+0x1cb4>
   14a1c:	mov	r1, #0
   14a20:	mov	r2, #3
   14a24:	b	152d4 <close_stdout@@Base+0x2580>
   14a28:	push	{r4, r5, r6, r7, lr}
   14a2c:	cmp	r1, #0
   14a30:	sub	sp, sp, #36	; 0x24
   14a34:	ldr	r7, [pc, #896]	; 14dbc <close_stdout@@Base+0x2068>
   14a38:	mov	ip, r3
   14a3c:	mov	r5, r0
   14a40:	add	r7, pc, r7
   14a44:	ldr	r4, [sp, #56]	; 0x38
   14a48:	ldr	r6, [sp, #60]	; 0x3c
   14a4c:	beq	14d90 <close_stdout@@Base+0x203c>
   14a50:	str	r2, [sp]
   14a54:	mov	r3, r1
   14a58:	ldr	r2, [pc, #864]	; 14dc0 <close_stdout@@Base+0x206c>
   14a5c:	mov	r1, #1
   14a60:	str	ip, [sp, #4]
   14a64:	add	r2, pc, r2
   14a68:	bl	113e0 <__fprintf_chk@plt>
   14a6c:	ldr	r1, [pc, #848]	; 14dc4 <close_stdout@@Base+0x2070>
   14a70:	mov	r2, #5
   14a74:	mov	r0, #0
   14a78:	add	r1, pc, r1
   14a7c:	bl	112a8 <dcgettext@plt>
   14a80:	ldr	r2, [pc, #832]	; 14dc8 <close_stdout@@Base+0x2074>
   14a84:	movw	ip, #2013	; 0x7dd
   14a88:	mov	r1, #1
   14a8c:	ldr	r2, [r7, r2]
   14a90:	str	ip, [sp]
   14a94:	mov	r3, r0
   14a98:	mov	r0, r5
   14a9c:	bl	113e0 <__fprintf_chk@plt>
   14aa0:	ldr	r1, [pc, #804]	; 14dcc <close_stdout@@Base+0x2078>
   14aa4:	mov	r0, #0
   14aa8:	mov	r2, #5
   14aac:	add	r1, pc, r1
   14ab0:	bl	112a8 <dcgettext@plt>
   14ab4:	mov	r1, r5
   14ab8:	bl	112b4 <fputs_unlocked@plt>
   14abc:	cmp	r6, #9
   14ac0:	addls	pc, pc, r6, lsl #2
   14ac4:	b	14dac <close_stdout@@Base+0x2058>
   14ac8:	b	14b5c <close_stdout@@Base+0x1e08>
   14acc:	b	14b60 <close_stdout@@Base+0x1e0c>
   14ad0:	b	14b90 <close_stdout@@Base+0x1e3c>
   14ad4:	b	14bc4 <close_stdout@@Base+0x1e70>
   14ad8:	b	14c00 <close_stdout@@Base+0x1eac>
   14adc:	b	14c40 <close_stdout@@Base+0x1eec>
   14ae0:	b	14c88 <close_stdout@@Base+0x1f34>
   14ae4:	b	14cd8 <close_stdout@@Base+0x1f84>
   14ae8:	b	14d30 <close_stdout@@Base+0x1fdc>
   14aec:	b	14af0 <close_stdout@@Base+0x1d9c>
   14af0:	ldr	r1, [pc, #728]	; 14dd0 <close_stdout@@Base+0x207c>
   14af4:	mov	r0, #0
   14af8:	add	r1, pc, r1
   14afc:	mov	r2, #5
   14b00:	bl	112a8 <dcgettext@plt>
   14b04:	ldm	r4, {r3, ip}
   14b08:	mov	r1, #1
   14b0c:	str	ip, [sp]
   14b10:	ldr	ip, [r4, #8]
   14b14:	str	ip, [sp, #4]
   14b18:	ldr	ip, [r4, #12]
   14b1c:	str	ip, [sp, #8]
   14b20:	ldr	ip, [r4, #16]
   14b24:	str	ip, [sp, #12]
   14b28:	ldr	ip, [r4, #20]
   14b2c:	str	ip, [sp, #16]
   14b30:	ldr	ip, [r4, #24]
   14b34:	str	ip, [sp, #20]
   14b38:	ldr	ip, [r4, #28]
   14b3c:	str	ip, [sp, #24]
   14b40:	ldr	ip, [r4, #32]
   14b44:	str	ip, [sp, #28]
   14b48:	mov	r2, r0
   14b4c:	mov	r0, r5
   14b50:	bl	113e0 <__fprintf_chk@plt>
   14b54:	add	sp, sp, #36	; 0x24
   14b58:	pop	{r4, r5, r6, r7, pc}
   14b5c:	bl	11188 <abort@plt>
   14b60:	ldr	r1, [pc, #620]	; 14dd4 <close_stdout@@Base+0x2080>
   14b64:	mov	r2, #5
   14b68:	mov	r0, #0
   14b6c:	add	r1, pc, r1
   14b70:	bl	112a8 <dcgettext@plt>
   14b74:	ldr	r3, [r4]
   14b78:	mov	r1, #1
   14b7c:	mov	r2, r0
   14b80:	mov	r0, r5
   14b84:	add	sp, sp, #36	; 0x24
   14b88:	pop	{r4, r5, r6, r7, lr}
   14b8c:	b	113e0 <__fprintf_chk@plt>
   14b90:	ldr	r1, [pc, #576]	; 14dd8 <close_stdout@@Base+0x2084>
   14b94:	mov	r2, #5
   14b98:	mov	r0, #0
   14b9c:	add	r1, pc, r1
   14ba0:	bl	112a8 <dcgettext@plt>
   14ba4:	ldm	r4, {r3, ip}
   14ba8:	mov	r1, #1
   14bac:	str	ip, [sp, #56]	; 0x38
   14bb0:	mov	r2, r0
   14bb4:	mov	r0, r5
   14bb8:	add	sp, sp, #36	; 0x24
   14bbc:	pop	{r4, r5, r6, r7, lr}
   14bc0:	b	113e0 <__fprintf_chk@plt>
   14bc4:	ldr	r1, [pc, #528]	; 14ddc <close_stdout@@Base+0x2088>
   14bc8:	mov	r2, #5
   14bcc:	mov	r0, #0
   14bd0:	add	r1, pc, r1
   14bd4:	bl	112a8 <dcgettext@plt>
   14bd8:	ldm	r4, {r3, ip}
   14bdc:	mov	r1, #1
   14be0:	str	ip, [sp, #56]	; 0x38
   14be4:	ldr	ip, [r4, #8]
   14be8:	str	ip, [sp, #60]	; 0x3c
   14bec:	mov	r2, r0
   14bf0:	mov	r0, r5
   14bf4:	add	sp, sp, #36	; 0x24
   14bf8:	pop	{r4, r5, r6, r7, lr}
   14bfc:	b	113e0 <__fprintf_chk@plt>
   14c00:	ldr	r1, [pc, #472]	; 14de0 <close_stdout@@Base+0x208c>
   14c04:	mov	r2, #5
   14c08:	mov	r0, #0
   14c0c:	add	r1, pc, r1
   14c10:	bl	112a8 <dcgettext@plt>
   14c14:	ldm	r4, {r3, ip}
   14c18:	mov	r1, #1
   14c1c:	str	ip, [sp]
   14c20:	ldr	ip, [r4, #8]
   14c24:	str	ip, [sp, #4]
   14c28:	ldr	ip, [r4, #12]
   14c2c:	str	ip, [sp, #8]
   14c30:	mov	r2, r0
   14c34:	mov	r0, r5
   14c38:	bl	113e0 <__fprintf_chk@plt>
   14c3c:	b	14b54 <close_stdout@@Base+0x1e00>
   14c40:	ldr	r1, [pc, #412]	; 14de4 <close_stdout@@Base+0x2090>
   14c44:	mov	r2, #5
   14c48:	mov	r0, #0
   14c4c:	add	r1, pc, r1
   14c50:	bl	112a8 <dcgettext@plt>
   14c54:	ldm	r4, {r3, ip}
   14c58:	mov	r1, #1
   14c5c:	str	ip, [sp]
   14c60:	ldr	ip, [r4, #8]
   14c64:	str	ip, [sp, #4]
   14c68:	ldr	ip, [r4, #12]
   14c6c:	str	ip, [sp, #8]
   14c70:	ldr	ip, [r4, #16]
   14c74:	str	ip, [sp, #12]
   14c78:	mov	r2, r0
   14c7c:	mov	r0, r5
   14c80:	bl	113e0 <__fprintf_chk@plt>
   14c84:	b	14b54 <close_stdout@@Base+0x1e00>
   14c88:	ldr	r1, [pc, #344]	; 14de8 <close_stdout@@Base+0x2094>
   14c8c:	mov	r2, #5
   14c90:	mov	r0, #0
   14c94:	add	r1, pc, r1
   14c98:	bl	112a8 <dcgettext@plt>
   14c9c:	ldm	r4, {r3, ip}
   14ca0:	mov	r1, #1
   14ca4:	str	ip, [sp]
   14ca8:	ldr	ip, [r4, #8]
   14cac:	str	ip, [sp, #4]
   14cb0:	ldr	ip, [r4, #12]
   14cb4:	str	ip, [sp, #8]
   14cb8:	ldr	ip, [r4, #16]
   14cbc:	str	ip, [sp, #12]
   14cc0:	ldr	ip, [r4, #20]
   14cc4:	str	ip, [sp, #16]
   14cc8:	mov	r2, r0
   14ccc:	mov	r0, r5
   14cd0:	bl	113e0 <__fprintf_chk@plt>
   14cd4:	b	14b54 <close_stdout@@Base+0x1e00>
   14cd8:	ldr	r1, [pc, #268]	; 14dec <close_stdout@@Base+0x2098>
   14cdc:	mov	r2, #5
   14ce0:	mov	r0, #0
   14ce4:	add	r1, pc, r1
   14ce8:	bl	112a8 <dcgettext@plt>
   14cec:	ldm	r4, {r3, ip}
   14cf0:	mov	r1, #1
   14cf4:	str	ip, [sp]
   14cf8:	ldr	ip, [r4, #8]
   14cfc:	str	ip, [sp, #4]
   14d00:	ldr	ip, [r4, #12]
   14d04:	str	ip, [sp, #8]
   14d08:	ldr	ip, [r4, #16]
   14d0c:	str	ip, [sp, #12]
   14d10:	ldr	ip, [r4, #20]
   14d14:	str	ip, [sp, #16]
   14d18:	ldr	ip, [r4, #24]
   14d1c:	str	ip, [sp, #20]
   14d20:	mov	r2, r0
   14d24:	mov	r0, r5
   14d28:	bl	113e0 <__fprintf_chk@plt>
   14d2c:	b	14b54 <close_stdout@@Base+0x1e00>
   14d30:	ldr	r1, [pc, #184]	; 14df0 <close_stdout@@Base+0x209c>
   14d34:	mov	r2, #5
   14d38:	mov	r0, #0
   14d3c:	add	r1, pc, r1
   14d40:	bl	112a8 <dcgettext@plt>
   14d44:	ldm	r4, {r3, ip}
   14d48:	mov	r1, #1
   14d4c:	str	ip, [sp]
   14d50:	ldr	ip, [r4, #8]
   14d54:	str	ip, [sp, #4]
   14d58:	ldr	ip, [r4, #12]
   14d5c:	str	ip, [sp, #8]
   14d60:	ldr	ip, [r4, #16]
   14d64:	str	ip, [sp, #12]
   14d68:	ldr	ip, [r4, #20]
   14d6c:	str	ip, [sp, #16]
   14d70:	ldr	ip, [r4, #24]
   14d74:	str	ip, [sp, #20]
   14d78:	ldr	ip, [r4, #28]
   14d7c:	str	ip, [sp, #24]
   14d80:	mov	r2, r0
   14d84:	mov	r0, r5
   14d88:	bl	113e0 <__fprintf_chk@plt>
   14d8c:	b	14b54 <close_stdout@@Base+0x1e00>
   14d90:	str	r3, [sp]
   14d94:	mov	r3, r2
   14d98:	ldr	r2, [pc, #84]	; 14df4 <close_stdout@@Base+0x20a0>
   14d9c:	mov	r1, #1
   14da0:	add	r2, pc, r2
   14da4:	bl	113e0 <__fprintf_chk@plt>
   14da8:	b	14a6c <close_stdout@@Base+0x1d18>
   14dac:	ldr	r1, [pc, #68]	; 14df8 <close_stdout@@Base+0x20a4>
   14db0:	mov	r0, #0
   14db4:	add	r1, pc, r1
   14db8:	b	14afc <close_stdout@@Base+0x1da8>
   14dbc:			; <UNDEFINED> instruction: 0x000135b8
   14dc0:	andeq	r2, r0, r0, lsr #13
   14dc4:	andeq	r2, r0, r0, lsr #13
   14dc8:	andeq	r0, r0, ip, lsr #2
   14dcc:	andeq	r2, r0, r0, ror r6
   14dd0:	strdeq	r2, [r0], -ip
   14dd4:	andeq	r2, r0, ip, ror r6
   14dd8:	andeq	r2, r0, ip, asr r6
   14ddc:	andeq	r2, r0, r0, asr #12
   14de0:	andeq	r2, r0, r0, lsr #12
   14de4:	andeq	r2, r0, r0, lsl #12
   14de8:	ldrdeq	r2, [r0], -ip
   14dec:			; <UNDEFINED> instruction: 0x000025b4
   14df0:	andeq	r2, r0, r8, lsl #11
   14df4:	andeq	r2, r0, r0, ror r3
   14df8:	andeq	r2, r0, r4, ror r5
   14dfc:	push	{r4, r5, lr}
   14e00:	sub	sp, sp, #12
   14e04:	ldr	r5, [sp, #24]
   14e08:	ldr	ip, [r5]
   14e0c:	cmp	ip, #0
   14e10:	beq	14e2c <close_stdout@@Base+0x20d8>
   14e14:	mov	lr, r5
   14e18:	mov	ip, #0
   14e1c:	ldr	r4, [lr, #4]!
   14e20:	add	ip, ip, #1
   14e24:	cmp	r4, #0
   14e28:	bne	14e1c <close_stdout@@Base+0x20c8>
   14e2c:	stm	sp, {r5, ip}
   14e30:	bl	14a28 <close_stdout@@Base+0x1cd4>
   14e34:	add	sp, sp, #12
   14e38:	pop	{r4, r5, pc}
   14e3c:	push	{r4, r5, r6, r7, lr}
   14e40:	sub	sp, sp, #60	; 0x3c
   14e44:	ldr	r4, [pc, #100]	; 14eb0 <close_stdout@@Base+0x215c>
   14e48:	mov	ip, #0
   14e4c:	ldr	r5, [pc, #96]	; 14eb4 <close_stdout@@Base+0x2160>
   14e50:	mov	lr, ip
   14e54:	add	r4, pc, r4
   14e58:	ldr	r6, [sp, #80]	; 0x50
   14e5c:	ldr	r7, [r4, r5]
   14e60:	add	r5, sp, #12
   14e64:	ldr	r4, [r7]
   14e68:	str	r4, [sp, #52]	; 0x34
   14e6c:	ldr	r4, [r6, ip]
   14e70:	cmp	r4, #0
   14e74:	str	r4, [r5, ip]
   14e78:	beq	14e8c <close_stdout@@Base+0x2138>
   14e7c:	add	lr, lr, #1
   14e80:	add	ip, ip, #4
   14e84:	cmp	lr, #10
   14e88:	bne	14e6c <close_stdout@@Base+0x2118>
   14e8c:	stm	sp, {r5, lr}
   14e90:	bl	14a28 <close_stdout@@Base+0x1cd4>
   14e94:	ldr	r2, [sp, #52]	; 0x34
   14e98:	ldr	r3, [r7]
   14e9c:	cmp	r2, r3
   14ea0:	bne	14eac <close_stdout@@Base+0x2158>
   14ea4:	add	sp, sp, #60	; 0x3c
   14ea8:	pop	{r4, r5, r6, r7, pc}
   14eac:	bl	113d4 <__stack_chk_fail@plt>
   14eb0:	andeq	r3, r1, r4, lsr #3
   14eb4:	andeq	r0, r0, r8, lsr #2
   14eb8:	push	{r3}		; (str r3, [sp, #-4]!)
   14ebc:	push	{r4, lr}
   14ec0:	sub	sp, sp, #20
   14ec4:	ldr	lr, [pc, #72]	; 14f14 <close_stdout@@Base+0x21c0>
   14ec8:	add	ip, sp, #32
   14ecc:	ldr	r4, [pc, #68]	; 14f18 <close_stdout@@Base+0x21c4>
   14ed0:	add	lr, pc, lr
   14ed4:	ldr	r3, [sp, #28]
   14ed8:	ldr	r4, [lr, r4]
   14edc:	str	ip, [sp]
   14ee0:	str	ip, [sp, #8]
   14ee4:	ldr	ip, [r4]
   14ee8:	str	ip, [sp, #12]
   14eec:	bl	14e3c <close_stdout@@Base+0x20e8>
   14ef0:	ldr	r2, [sp, #12]
   14ef4:	ldr	r3, [r4]
   14ef8:	cmp	r2, r3
   14efc:	bne	14f10 <close_stdout@@Base+0x21bc>
   14f00:	add	sp, sp, #20
   14f04:	pop	{r4, lr}
   14f08:	add	sp, sp, #4
   14f0c:	bx	lr
   14f10:	bl	113d4 <__stack_chk_fail@plt>
   14f14:	andeq	r3, r1, r8, lsr #2
   14f18:	andeq	r0, r0, r8, lsr #2
   14f1c:	ldr	r1, [pc, #132]	; 14fa8 <close_stdout@@Base+0x2254>
   14f20:	mov	r2, #5
   14f24:	push	{r4, lr}
   14f28:	add	r1, pc, r1
   14f2c:	mov	r0, #0
   14f30:	ldr	r4, [pc, #116]	; 14fac <close_stdout@@Base+0x2258>
   14f34:	bl	112a8 <dcgettext@plt>
   14f38:	ldr	r2, [pc, #112]	; 14fb0 <close_stdout@@Base+0x225c>
   14f3c:	add	r4, pc, r4
   14f40:	add	r2, pc, r2
   14f44:	mov	r1, r0
   14f48:	mov	r0, #1
   14f4c:	bl	111e8 <__printf_chk@plt>
   14f50:	ldr	r1, [pc, #92]	; 14fb4 <close_stdout@@Base+0x2260>
   14f54:	mov	r2, #5
   14f58:	mov	r0, #0
   14f5c:	add	r1, pc, r1
   14f60:	bl	112a8 <dcgettext@plt>
   14f64:	ldr	r2, [pc, #76]	; 14fb8 <close_stdout@@Base+0x2264>
   14f68:	ldr	r3, [pc, #76]	; 14fbc <close_stdout@@Base+0x2268>
   14f6c:	add	r2, pc, r2
   14f70:	add	r3, pc, r3
   14f74:	mov	r1, r0
   14f78:	mov	r0, #1
   14f7c:	bl	111e8 <__printf_chk@plt>
   14f80:	ldr	r1, [pc, #56]	; 14fc0 <close_stdout@@Base+0x226c>
   14f84:	mov	r0, #0
   14f88:	mov	r2, #5
   14f8c:	add	r1, pc, r1
   14f90:	bl	112a8 <dcgettext@plt>
   14f94:	ldr	r3, [pc, #40]	; 14fc4 <close_stdout@@Base+0x2270>
   14f98:	ldr	r3, [r4, r3]
   14f9c:	pop	{r4, lr}
   14fa0:	ldr	r1, [r3]
   14fa4:	b	112b4 <fputs_unlocked@plt>
   14fa8:	andeq	r2, r0, ip, lsr r4
   14fac:	strheq	r3, [r1], -ip
   14fb0:	andeq	r2, r0, ip, lsr r4
   14fb4:	andeq	r2, r0, r8, lsr r4
   14fb8:	andeq	r1, r0, r4, lsr #23
   14fbc:			; <UNDEFINED> instruction: 0x00001bb0
   14fc0:	andeq	r2, r0, ip, lsl r4
   14fc4:	andeq	r0, r0, r0, asr #2
   14fc8:	push	{r4, lr}
   14fcc:	mov	r4, r0
   14fd0:	bl	113b0 <malloc@plt>
   14fd4:	rsbs	r3, r0, #1
   14fd8:	movcc	r3, #0
   14fdc:	cmp	r4, #0
   14fe0:	moveq	r3, #0
   14fe4:	cmp	r3, #0
   14fe8:	popeq	{r4, pc}
   14fec:	bl	151dc <close_stdout@@Base+0x2488>
   14ff0:	push	{r3, r4, r5, lr}
   14ff4:	mov	r4, r0
   14ff8:	mvn	r0, #0
   14ffc:	mov	r5, r1
   15000:	bl	159f0 <close_stdout@@Base+0x2c9c>
   15004:	cmp	r0, r4
   15008:	bcc	15018 <close_stdout@@Base+0x22c4>
   1500c:	mul	r0, r4, r5
   15010:	pop	{r3, r4, r5, lr}
   15014:	b	14fc8 <close_stdout@@Base+0x2274>
   15018:	bl	151dc <close_stdout@@Base+0x2488>
   1501c:	b	14fc8 <close_stdout@@Base+0x2274>
   15020:	rsbs	r3, r1, #1
   15024:	push	{r4, lr}
   15028:	movcc	r3, #0
   1502c:	cmp	r0, #0
   15030:	mov	r4, r1
   15034:	moveq	r3, #0
   15038:	cmp	r3, #0
   1503c:	bne	15060 <close_stdout@@Base+0x230c>
   15040:	bl	11434 <realloc@plt>
   15044:	rsbs	r3, r0, #1
   15048:	movcc	r3, #0
   1504c:	cmp	r4, #0
   15050:	moveq	r3, #0
   15054:	cmp	r3, #0
   15058:	popeq	{r4, pc}
   1505c:	bl	151dc <close_stdout@@Base+0x2488>
   15060:	bl	11290 <free@plt>
   15064:	mov	r0, #0
   15068:	pop	{r4, pc}
   1506c:	push	{r4, r5, r6, lr}
   15070:	mov	r5, r1
   15074:	mov	r6, r0
   15078:	mov	r1, r2
   1507c:	mvn	r0, #0
   15080:	mov	r4, r2
   15084:	bl	159f0 <close_stdout@@Base+0x2c9c>
   15088:	cmp	r0, r5
   1508c:	bcc	150a0 <close_stdout@@Base+0x234c>
   15090:	mov	r0, r6
   15094:	mul	r1, r5, r4
   15098:	pop	{r4, r5, r6, lr}
   1509c:	b	15020 <close_stdout@@Base+0x22cc>
   150a0:	bl	151dc <close_stdout@@Base+0x2488>
   150a4:	push	{r3, r4, r5, r6, r7, lr}
   150a8:	subs	r7, r0, #0
   150ac:	mov	r5, r1
   150b0:	mov	r6, r2
   150b4:	ldr	r4, [r1]
   150b8:	beq	150f0 <close_stdout@@Base+0x239c>
   150bc:	movw	r0, #43690	; 0xaaaa
   150c0:	mov	r1, r2
   150c4:	bfi	r0, r0, #16, #16
   150c8:	bl	159f0 <close_stdout@@Base+0x2c9c>
   150cc:	cmp	r4, r0
   150d0:	addcc	r3, r4, #1
   150d4:	addcc	r4, r4, r3, lsr #1
   150d8:	bcs	15114 <close_stdout@@Base+0x23c0>
   150dc:	str	r4, [r5]
   150e0:	mov	r0, r7
   150e4:	mul	r1, r6, r4
   150e8:	pop	{r3, r4, r5, r6, r7, lr}
   150ec:	b	15020 <close_stdout@@Base+0x22cc>
   150f0:	cmp	r4, #0
   150f4:	bne	150dc <close_stdout@@Base+0x2388>
   150f8:	mov	r0, #64	; 0x40
   150fc:	mov	r1, r2
   15100:	bl	159f0 <close_stdout@@Base+0x2c9c>
   15104:	cmp	r0, #0
   15108:	movne	r4, r0
   1510c:	addeq	r4, r0, #1
   15110:	b	150dc <close_stdout@@Base+0x2388>
   15114:	bl	151dc <close_stdout@@Base+0x2488>
   15118:	cmp	r0, #0
   1511c:	push	{r3, lr}
   15120:	ldr	r3, [r1]
   15124:	beq	15150 <close_stdout@@Base+0x23fc>
   15128:	movw	r2, #43689	; 0xaaa9
   1512c:	movt	r2, #43690	; 0xaaaa
   15130:	cmp	r3, r2
   15134:	addls	r2, r3, #1
   15138:	addls	r3, r3, r2, lsr #1
   1513c:	bhi	15168 <close_stdout@@Base+0x2414>
   15140:	str	r3, [r1]
   15144:	mov	r1, r3
   15148:	pop	{r3, lr}
   1514c:	b	15020 <close_stdout@@Base+0x22cc>
   15150:	cmp	r3, #0
   15154:	moveq	r3, #64	; 0x40
   15158:	str	r3, [r1]
   1515c:	mov	r1, r3
   15160:	pop	{r3, lr}
   15164:	b	15020 <close_stdout@@Base+0x22cc>
   15168:	bl	151dc <close_stdout@@Base+0x2488>
   1516c:	push	{r4, lr}
   15170:	mov	r4, r0
   15174:	bl	14fc8 <close_stdout@@Base+0x2274>
   15178:	mov	r2, r4
   1517c:	mov	r1, #0
   15180:	pop	{r4, lr}
   15184:	b	11230 <memset@plt>
   15188:	push	{r3, lr}
   1518c:	bl	11218 <calloc@plt>
   15190:	cmp	r0, #0
   15194:	popne	{r3, pc}
   15198:	bl	151dc <close_stdout@@Base+0x2488>
   1519c:	push	{r3, r4, r5, lr}
   151a0:	mov	r4, r1
   151a4:	mov	r5, r0
   151a8:	mov	r0, r1
   151ac:	bl	14fc8 <close_stdout@@Base+0x2274>
   151b0:	mov	r1, r5
   151b4:	mov	r2, r4
   151b8:	pop	{r3, r4, r5, lr}
   151bc:	b	112f0 <memcpy@plt>
   151c0:	push	{r4, lr}
   151c4:	mov	r4, r0
   151c8:	bl	112d8 <strlen@plt>
   151cc:	add	r1, r0, #1
   151d0:	mov	r0, r4
   151d4:	pop	{r4, lr}
   151d8:	b	1519c <close_stdout@@Base+0x2448>
   151dc:	ldr	r3, [pc, #64]	; 15224 <close_stdout@@Base+0x24d0>
   151e0:	mov	r2, #5
   151e4:	ldr	ip, [pc, #60]	; 15228 <close_stdout@@Base+0x24d4>
   151e8:	mov	r0, #0
   151ec:	add	r3, pc, r3
   151f0:	ldr	r1, [pc, #52]	; 1522c <close_stdout@@Base+0x24d8>
   151f4:	push	{r4, lr}
   151f8:	add	r1, pc, r1
   151fc:	ldr	r3, [r3, ip]
   15200:	ldr	r4, [r3]
   15204:	bl	112a8 <dcgettext@plt>
   15208:	ldr	r2, [pc, #32]	; 15230 <close_stdout@@Base+0x24dc>
   1520c:	mov	r1, #0
   15210:	add	r2, pc, r2
   15214:	mov	r3, r0
   15218:	mov	r0, r4
   1521c:	bl	113bc <error@plt>
   15220:	bl	11188 <abort@plt>
   15224:	andeq	r2, r1, ip, lsl #28
   15228:	andeq	r0, r0, r4, lsr #2
   1522c:	andeq	r2, r0, r0, lsr #4
   15230:	andeq	r1, r0, ip, lsr #28
   15234:	push	{r4, r5, r6, lr}
   15238:	sub	sp, sp, #8
   1523c:	mov	r4, r0
   15240:	bl	1117c <fileno@plt>
   15244:	cmp	r0, #0
   15248:	mov	r0, r4
   1524c:	blt	152c8 <close_stdout@@Base+0x2574>
   15250:	bl	11410 <__freading@plt>
   15254:	cmp	r0, #0
   15258:	bne	15294 <close_stdout@@Base+0x2540>
   1525c:	mov	r0, r4
   15260:	bl	15448 <close_stdout@@Base+0x26f4>
   15264:	cmp	r0, #0
   15268:	beq	152c4 <close_stdout@@Base+0x2570>
   1526c:	bl	1147c <__errno_location@plt>
   15270:	ldr	r6, [r0]
   15274:	mov	r5, r0
   15278:	mov	r0, r4
   1527c:	bl	111d0 <fclose@plt>
   15280:	cmp	r6, #0
   15284:	mvnne	r0, #0
   15288:	strne	r6, [r5]
   1528c:	add	sp, sp, #8
   15290:	pop	{r4, r5, r6, pc}
   15294:	mov	r0, r4
   15298:	bl	1117c <fileno@plt>
   1529c:	mov	r1, #1
   152a0:	mov	r2, #0
   152a4:	mov	r3, #0
   152a8:	str	r1, [sp]
   152ac:	bl	113a4 <lseek64@plt>
   152b0:	mvn	r2, #0
   152b4:	mvn	r3, #0
   152b8:	cmp	r1, r3
   152bc:	cmpeq	r0, r2
   152c0:	bne	1525c <close_stdout@@Base+0x2508>
   152c4:	mov	r0, r4
   152c8:	add	sp, sp, #8
   152cc:	pop	{r4, r5, r6, lr}
   152d0:	b	111d0 <fclose@plt>
   152d4:	push	{r1, r2, r3}
   152d8:	movw	ip, #1030	; 0x406
   152dc:	ldr	r3, [pc, #336]	; 15434 <close_stdout@@Base+0x26e0>
   152e0:	push	{r4, r5, r6, r7, r8, lr}
   152e4:	add	r3, pc, r3
   152e8:	ldr	lr, [pc, #328]	; 15438 <close_stdout@@Base+0x26e4>
   152ec:	sub	sp, sp, #12
   152f0:	add	r2, sp, #40	; 0x28
   152f4:	mov	r6, r0
   152f8:	ldr	r1, [sp, #36]	; 0x24
   152fc:	ldr	r4, [r3, lr]
   15300:	cmp	r1, ip
   15304:	str	r2, [sp]
   15308:	ldr	r3, [r4]
   1530c:	str	r3, [sp, #4]
   15310:	bne	15394 <close_stdout@@Base+0x2640>
   15314:	ldr	r8, [pc, #288]	; 1543c <close_stdout@@Base+0x26e8>
   15318:	add	r3, sp, #44	; 0x2c
   1531c:	str	r3, [sp]
   15320:	add	r8, pc, r8
   15324:	ldr	r7, [sp, #40]	; 0x28
   15328:	ldr	r3, [r8]
   1532c:	mov	r2, r7
   15330:	cmp	r3, #0
   15334:	blt	15420 <close_stdout@@Base+0x26cc>
   15338:	bl	1141c <fcntl@plt>
   1533c:	subs	r5, r0, #0
   15340:	blt	153a4 <close_stdout@@Base+0x2650>
   15344:	ldr	r3, [pc, #244]	; 15440 <close_stdout@@Base+0x26ec>
   15348:	mov	r2, #1
   1534c:	add	r3, pc, r3
   15350:	str	r2, [r3]
   15354:	cmp	r5, #0
   15358:	blt	15370 <close_stdout@@Base+0x261c>
   1535c:	ldr	r3, [pc, #224]	; 15444 <close_stdout@@Base+0x26f0>
   15360:	add	r3, pc, r3
   15364:	ldr	r3, [r3]
   15368:	cmn	r3, #1
   1536c:	beq	153d4 <close_stdout@@Base+0x2680>
   15370:	ldr	r2, [sp, #4]
   15374:	mov	r0, r5
   15378:	ldr	r3, [r4]
   1537c:	cmp	r2, r3
   15380:	bne	15430 <close_stdout@@Base+0x26dc>
   15384:	add	sp, sp, #12
   15388:	pop	{r4, r5, r6, r7, r8, lr}
   1538c:	add	sp, sp, #12
   15390:	bx	lr
   15394:	ldr	r2, [sp, #40]	; 0x28
   15398:	bl	1141c <fcntl@plt>
   1539c:	mov	r5, r0
   153a0:	b	15370 <close_stdout@@Base+0x261c>
   153a4:	bl	1147c <__errno_location@plt>
   153a8:	ldr	r3, [r0]
   153ac:	cmp	r3, #22
   153b0:	bne	15344 <close_stdout@@Base+0x25f0>
   153b4:	mov	r0, r6
   153b8:	mov	r2, r7
   153bc:	mov	r1, #0
   153c0:	bl	152d4 <close_stdout@@Base+0x2580>
   153c4:	subs	r5, r0, #0
   153c8:	blt	15370 <close_stdout@@Base+0x261c>
   153cc:	mvn	r3, #0
   153d0:	str	r3, [r8]
   153d4:	mov	r0, r5
   153d8:	mov	r1, #1
   153dc:	bl	1141c <fcntl@plt>
   153e0:	subs	r2, r0, #0
   153e4:	blt	15400 <close_stdout@@Base+0x26ac>
   153e8:	orr	r2, r2, #1
   153ec:	mov	r0, r5
   153f0:	mov	r1, #2
   153f4:	bl	1141c <fcntl@plt>
   153f8:	cmn	r0, #1
   153fc:	bne	15370 <close_stdout@@Base+0x261c>
   15400:	bl	1147c <__errno_location@plt>
   15404:	ldr	r7, [r0]
   15408:	mov	r6, r0
   1540c:	mov	r0, r5
   15410:	mvn	r5, #0
   15414:	bl	11374 <close@plt>
   15418:	str	r7, [r6]
   1541c:	b	15370 <close_stdout@@Base+0x261c>
   15420:	mov	r1, #0
   15424:	bl	152d4 <close_stdout@@Base+0x2580>
   15428:	mov	r5, r0
   1542c:	b	15354 <close_stdout@@Base+0x2600>
   15430:	bl	113d4 <__stack_chk_fail@plt>
   15434:	andeq	r2, r1, r4, lsl sp
   15438:	andeq	r0, r0, r8, lsr #2
   1543c:	andeq	r2, r1, r8, asr #31
   15440:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15444:	andeq	r2, r1, r8, lsl #31
   15448:	push	{r4, lr}
   1544c:	subs	r4, r0, #0
   15450:	sub	sp, sp, #8
   15454:	beq	15464 <close_stdout@@Base+0x2710>
   15458:	bl	11410 <__freading@plt>
   1545c:	cmp	r0, #0
   15460:	bne	15474 <close_stdout@@Base+0x2720>
   15464:	mov	r0, r4
   15468:	add	sp, sp, #8
   1546c:	pop	{r4, lr}
   15470:	b	112cc <fflush@plt>
   15474:	ldr	r3, [r4]
   15478:	tst	r3, #256	; 0x100
   1547c:	beq	15464 <close_stdout@@Base+0x2710>
   15480:	mov	r3, #1
   15484:	mov	r0, r4
   15488:	str	r3, [sp]
   1548c:	mov	r2, #0
   15490:	mov	r3, #0
   15494:	bl	154a8 <close_stdout@@Base+0x2754>
   15498:	mov	r0, r4
   1549c:	add	sp, sp, #8
   154a0:	pop	{r4, lr}
   154a4:	b	112cc <fflush@plt>
   154a8:	push	{r4, r5, r6, r7, lr}
   154ac:	sub	sp, sp, #20
   154b0:	ldmib	r0, {r1, ip}
   154b4:	mov	r6, r0
   154b8:	ldr	r4, [sp, #40]	; 0x28
   154bc:	cmp	ip, r1
   154c0:	beq	154d8 <close_stdout@@Base+0x2784>
   154c4:	str	r4, [sp, #40]	; 0x28
   154c8:	mov	r0, r6
   154cc:	add	sp, sp, #20
   154d0:	pop	{r4, r5, r6, r7, lr}
   154d4:	b	11338 <fseeko64@plt>
   154d8:	ldr	ip, [r0, #20]
   154dc:	ldr	r1, [r0, #16]
   154e0:	cmp	ip, r1
   154e4:	bne	154c4 <close_stdout@@Base+0x2770>
   154e8:	ldr	r7, [r0, #36]	; 0x24
   154ec:	cmp	r7, #0
   154f0:	bne	154c4 <close_stdout@@Base+0x2770>
   154f4:	str	r2, [sp, #12]
   154f8:	mvn	r5, #0
   154fc:	str	r3, [sp, #8]
   15500:	bl	1117c <fileno@plt>
   15504:	str	r4, [sp]
   15508:	mvn	r4, #0
   1550c:	ldr	r2, [sp, #12]
   15510:	ldr	r3, [sp, #8]
   15514:	bl	113a4 <lseek64@plt>
   15518:	mov	r2, r0
   1551c:	mov	r3, r1
   15520:	cmp	r3, r5
   15524:	cmpeq	r2, r4
   15528:	beq	15548 <close_stdout@@Base+0x27f4>
   1552c:	ldr	r1, [r6]
   15530:	mov	r0, r7
   15534:	strd	r2, [r6, #80]	; 0x50
   15538:	bic	r3, r1, #16
   1553c:	str	r3, [r6]
   15540:	add	sp, sp, #20
   15544:	pop	{r4, r5, r6, r7, pc}
   15548:	mvn	r0, #0
   1554c:	b	15540 <close_stdout@@Base+0x27ec>
   15550:	push	{r4, r5, r6, lr}
   15554:	mov	r4, r0
   15558:	bl	1120c <__fpending@plt>
   1555c:	mov	r6, r0
   15560:	mov	r0, r4
   15564:	ldr	r4, [r4]
   15568:	bl	15234 <close_stdout@@Base+0x24e0>
   1556c:	and	r4, r4, #32
   15570:	adds	r5, r0, #0
   15574:	movne	r5, #1
   15578:	cmp	r4, #0
   1557c:	bne	1559c <close_stdout@@Base+0x2848>
   15580:	cmp	r5, #0
   15584:	beq	15594 <close_stdout@@Base+0x2840>
   15588:	cmp	r6, #0
   1558c:	beq	155b8 <close_stdout@@Base+0x2864>
   15590:	mvn	r4, #0
   15594:	mov	r0, r4
   15598:	pop	{r4, r5, r6, pc}
   1559c:	cmp	r5, #0
   155a0:	bne	15590 <close_stdout@@Base+0x283c>
   155a4:	bl	1147c <__errno_location@plt>
   155a8:	mvn	r4, #0
   155ac:	str	r5, [r0]
   155b0:	mov	r0, r4
   155b4:	pop	{r4, r5, r6, pc}
   155b8:	bl	1147c <__errno_location@plt>
   155bc:	ldr	r4, [r0]
   155c0:	subs	r4, r4, #9
   155c4:	mvnne	r4, #0
   155c8:	mov	r0, r4
   155cc:	pop	{r4, r5, r6, pc}
   155d0:	ldr	r3, [pc, #984]	; 159b0 <close_stdout@@Base+0x2c5c>
   155d4:	mov	r0, #14
   155d8:	ldr	r2, [pc, #980]	; 159b4 <close_stdout@@Base+0x2c60>
   155dc:	add	r3, pc, r3
   155e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155e4:	sub	sp, sp, #132	; 0x84
   155e8:	ldr	r6, [r3, r2]
   155ec:	ldr	r3, [r6]
   155f0:	str	r3, [sp, #124]	; 0x7c
   155f4:	bl	113c8 <nl_langinfo@plt>
   155f8:	subs	r5, r0, #0
   155fc:	beq	156b0 <close_stdout@@Base+0x295c>
   15600:	ldr	r3, [pc, #944]	; 159b8 <close_stdout@@Base+0x2c64>
   15604:	ldr	r4, [pc, r3]
   15608:	cmp	r4, #0
   1560c:	beq	156bc <close_stdout@@Base+0x2968>
   15610:	ldrb	r7, [r4]
   15614:	cmp	r7, #0
   15618:	bne	1564c <close_stdout@@Base+0x28f8>
   1561c:	b	15684 <close_stdout@@Base+0x2930>
   15620:	mov	r0, r4
   15624:	bl	112d8 <strlen@plt>
   15628:	add	r0, r0, #1
   1562c:	add	r7, r4, r0
   15630:	mov	r0, r7
   15634:	bl	112d8 <strlen@plt>
   15638:	add	r0, r0, #1
   1563c:	add	r4, r7, r0
   15640:	ldrb	r7, [r7, r0]
   15644:	cmp	r7, #0
   15648:	beq	15684 <close_stdout@@Base+0x2930>
   1564c:	mov	r0, r5
   15650:	mov	r1, r4
   15654:	bl	11458 <strcmp@plt>
   15658:	cmp	r0, #0
   1565c:	beq	15674 <close_stdout@@Base+0x2920>
   15660:	cmp	r7, #42	; 0x2a
   15664:	bne	15620 <close_stdout@@Base+0x28cc>
   15668:	ldrb	r3, [r4, #1]
   1566c:	cmp	r3, #0
   15670:	bne	15620 <close_stdout@@Base+0x28cc>
   15674:	mov	r0, r4
   15678:	bl	112d8 <strlen@plt>
   1567c:	add	r0, r0, #1
   15680:	add	r5, r4, r0
   15684:	ldrb	r3, [r5]
   15688:	cmp	r3, #0
   1568c:	ldreq	r5, [pc, #808]	; 159bc <close_stdout@@Base+0x2c68>
   15690:	addeq	r5, pc, r5
   15694:	ldr	r2, [sp, #124]	; 0x7c
   15698:	mov	r0, r5
   1569c:	ldr	r3, [r6]
   156a0:	cmp	r2, r3
   156a4:	bne	15984 <close_stdout@@Base+0x2c30>
   156a8:	add	sp, sp, #132	; 0x84
   156ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156b0:	ldr	r5, [pc, #776]	; 159c0 <close_stdout@@Base+0x2c6c>
   156b4:	add	r5, pc, r5
   156b8:	b	15600 <close_stdout@@Base+0x28ac>
   156bc:	ldr	r0, [pc, #768]	; 159c4 <close_stdout@@Base+0x2c70>
   156c0:	add	r0, pc, r0
   156c4:	bl	111dc <getenv@plt>
   156c8:	subs	r8, r0, #0
   156cc:	beq	1595c <close_stdout@@Base+0x2c08>
   156d0:	ldrb	r3, [r8]
   156d4:	cmp	r3, #0
   156d8:	beq	158f0 <close_stdout@@Base+0x2b9c>
   156dc:	bl	112d8 <strlen@plt>
   156e0:	subs	sl, r0, #0
   156e4:	subne	r3, sl, #1
   156e8:	bne	15900 <close_stdout@@Base+0x2bac>
   156ec:	mov	r9, #0
   156f0:	mov	fp, r9
   156f4:	add	r9, sl, r9
   156f8:	add	r0, r9, #14
   156fc:	bl	113b0 <malloc@plt>
   15700:	subs	r7, r0, #0
   15704:	beq	15950 <close_stdout@@Base+0x2bfc>
   15708:	mov	r1, r8
   1570c:	mov	r2, sl
   15710:	bl	112f0 <memcpy@plt>
   15714:	cmp	fp, #0
   15718:	add	ip, r7, r9
   1571c:	movne	r3, #47	; 0x2f
   15720:	strbne	r3, [r7, sl]
   15724:	ldr	r3, [pc, #668]	; 159c8 <close_stdout@@Base+0x2c74>
   15728:	add	r3, pc, r3
   1572c:	ldm	r3!, {r0, r1, r2}
   15730:	ldrh	r3, [r3]
   15734:	str	r0, [r7, r9]
   15738:	mov	r0, r7
   1573c:	str	r1, [ip, #4]
   15740:	mov	r1, #32768	; 0x8000
   15744:	strh	r3, [ip, #12]
   15748:	str	r2, [ip, #8]
   1574c:	bl	11344 <open64@plt>
   15750:	subs	r8, r0, #0
   15754:	blt	15918 <close_stdout@@Base+0x2bc4>
   15758:	ldr	r1, [pc, #620]	; 159cc <close_stdout@@Base+0x2c78>
   1575c:	add	r1, pc, r1
   15760:	bl	11368 <fdopen@plt>
   15764:	subs	fp, r0, #0
   15768:	beq	15970 <close_stdout@@Base+0x2c1c>
   1576c:	ldr	r0, [pc, #604]	; 159d0 <close_stdout@@Base+0x2c7c>
   15770:	add	sl, sp, #20
   15774:	add	r9, sp, #72	; 0x48
   15778:	mov	r8, #0
   1577c:	add	r0, pc, r0
   15780:	str	r0, [sp, #12]
   15784:	ldr	r3, [fp, #4]
   15788:	ldr	r2, [fp, #8]
   1578c:	cmp	r3, r2
   15790:	bcs	1587c <close_stdout@@Base+0x2b28>
   15794:	add	r2, r3, #1
   15798:	str	r2, [fp, #4]
   1579c:	ldrb	r0, [r3]
   157a0:	cmp	r0, #32
   157a4:	beq	15784 <close_stdout@@Base+0x2a30>
   157a8:	sub	r3, r0, #9
   157ac:	cmp	r3, #1
   157b0:	bls	15784 <close_stdout@@Base+0x2a30>
   157b4:	cmp	r0, #35	; 0x23
   157b8:	beq	15890 <close_stdout@@Base+0x2b3c>
   157bc:	mov	r1, fp
   157c0:	bl	11248 <ungetc@plt>
   157c4:	mov	r0, fp
   157c8:	ldr	r1, [sp, #12]
   157cc:	mov	r2, sl
   157d0:	mov	r3, r9
   157d4:	bl	11488 <fscanf@plt>
   157d8:	cmp	r0, #1
   157dc:	ble	158c0 <close_stdout@@Base+0x2b6c>
   157e0:	mov	r0, sl
   157e4:	bl	112d8 <strlen@plt>
   157e8:	str	r0, [sp, #8]
   157ec:	mov	r0, r9
   157f0:	bl	112d8 <strlen@plt>
   157f4:	cmp	r8, #0
   157f8:	mov	r2, r0
   157fc:	bne	15924 <close_stdout@@Base+0x2bd0>
   15800:	ldr	r3, [sp, #8]
   15804:	str	r2, [sp]
   15808:	add	r8, r0, r3
   1580c:	add	r0, r8, #3
   15810:	add	r8, r8, #2
   15814:	bl	113b0 <malloc@plt>
   15818:	ldr	r2, [sp]
   1581c:	mov	r3, r0
   15820:	cmp	r3, #0
   15824:	beq	15988 <close_stdout@@Base+0x2c34>
   15828:	ldr	r0, [sp, #8]
   1582c:	movw	r1, #65534	; 0xfffe
   15830:	movt	r1, #65535	; 0xffff
   15834:	rsb	r2, r2, r8
   15838:	rsb	r1, r0, r1
   1583c:	stm	sp, {r2, r3}
   15840:	add	r0, r1, r2
   15844:	mov	r1, sl
   15848:	add	r0, r3, r0
   1584c:	mov	r4, r3
   15850:	bl	1132c <strcpy@plt>
   15854:	ldr	r2, [sp]
   15858:	ldr	r3, [sp, #4]
   1585c:	mov	r1, r9
   15860:	sub	r0, r2, #1
   15864:	add	r0, r3, r0
   15868:	bl	1132c <strcpy@plt>
   1586c:	ldr	r3, [fp, #4]
   15870:	ldr	r2, [fp, #8]
   15874:	cmp	r3, r2
   15878:	bcc	15794 <close_stdout@@Base+0x2a40>
   1587c:	mov	r0, fp
   15880:	bl	11224 <__uflow@plt>
   15884:	cmn	r0, #1
   15888:	beq	158c0 <close_stdout@@Base+0x2b6c>
   1588c:	b	157a0 <close_stdout@@Base+0x2a4c>
   15890:	ldr	r3, [fp, #4]
   15894:	ldr	r2, [fp, #8]
   15898:	cmp	r3, r2
   1589c:	bcs	159a4 <close_stdout@@Base+0x2c50>
   158a0:	add	r2, r3, #1
   158a4:	str	r2, [fp, #4]
   158a8:	ldrb	r0, [r3]
   158ac:	cmp	r0, #10
   158b0:	cmnne	r0, #1
   158b4:	bne	15890 <close_stdout@@Base+0x2b3c>
   158b8:	cmn	r0, #1
   158bc:	bne	15784 <close_stdout@@Base+0x2a30>
   158c0:	mov	r0, fp
   158c4:	bl	15234 <close_stdout@@Base+0x24e0>
   158c8:	cmp	r8, #0
   158cc:	beq	15918 <close_stdout@@Base+0x2bc4>
   158d0:	mov	r3, #0
   158d4:	strb	r3, [r4, r8]
   158d8:	mov	r0, r7
   158dc:	bl	11290 <free@plt>
   158e0:	ldr	r3, [pc, #236]	; 159d4 <close_stdout@@Base+0x2c80>
   158e4:	add	r3, pc, r3
   158e8:	str	r4, [r3]
   158ec:	b	15610 <close_stdout@@Base+0x28bc>
   158f0:	ldr	r8, [pc, #224]	; 159d8 <close_stdout@@Base+0x2c84>
   158f4:	mov	r3, #7
   158f8:	mov	sl, #8
   158fc:	add	r8, pc, r8
   15900:	ldrb	r3, [r8, r3]
   15904:	cmp	r3, #47	; 0x2f
   15908:	movne	r9, #1
   1590c:	movne	fp, r9
   15910:	bne	156f4 <close_stdout@@Base+0x29a0>
   15914:	b	156ec <close_stdout@@Base+0x2998>
   15918:	ldr	r4, [pc, #188]	; 159dc <close_stdout@@Base+0x2c88>
   1591c:	add	r4, pc, r4
   15920:	b	158d8 <close_stdout@@Base+0x2b84>
   15924:	ldr	r0, [sp, #8]
   15928:	str	r2, [sp]
   1592c:	add	r3, r0, r2
   15930:	mov	r0, r4
   15934:	add	r8, r3, r8
   15938:	add	r1, r8, #3
   1593c:	add	r8, r8, #2
   15940:	bl	11434 <realloc@plt>
   15944:	ldr	r2, [sp]
   15948:	mov	r3, r0
   1594c:	b	15820 <close_stdout@@Base+0x2acc>
   15950:	ldr	r4, [pc, #136]	; 159e0 <close_stdout@@Base+0x2c8c>
   15954:	add	r4, pc, r4
   15958:	b	158e0 <close_stdout@@Base+0x2b8c>
   1595c:	ldr	r8, [pc, #128]	; 159e4 <close_stdout@@Base+0x2c90>
   15960:	mov	r3, #7
   15964:	mov	sl, #8
   15968:	add	r8, pc, r8
   1596c:	b	15900 <close_stdout@@Base+0x2bac>
   15970:	ldr	r4, [pc, #112]	; 159e8 <close_stdout@@Base+0x2c94>
   15974:	mov	r0, r8
   15978:	add	r4, pc, r4
   1597c:	bl	11374 <close@plt>
   15980:	b	158d8 <close_stdout@@Base+0x2b84>
   15984:	bl	113d4 <__stack_chk_fail@plt>
   15988:	mov	r0, r4
   1598c:	ldr	r4, [pc, #88]	; 159ec <close_stdout@@Base+0x2c98>
   15990:	bl	11290 <free@plt>
   15994:	mov	r0, fp
   15998:	add	r4, pc, r4
   1599c:	bl	15234 <close_stdout@@Base+0x24e0>
   159a0:	b	158d8 <close_stdout@@Base+0x2b84>
   159a4:	mov	r0, fp
   159a8:	bl	11224 <__uflow@plt>
   159ac:	b	158ac <close_stdout@@Base+0x2b58>
   159b0:	andeq	r2, r1, ip, lsl sl
   159b4:	andeq	r0, r0, r8, lsr #2
   159b8:	andeq	r2, r1, r8, ror #25
   159bc:	andeq	r1, r0, r8, lsr #27
   159c0:	andeq	r1, r0, r8, asr #5
   159c4:	andeq	r1, r0, r0, lsl #27
   159c8:	andeq	r1, r0, r8, lsr #26
   159cc:	ldrdeq	r0, [r0], -r4
   159d0:	andeq	r1, r0, r4, ror #25
   159d4:	andeq	r2, r1, r8, lsl #20
   159d8:	andeq	r1, r0, r0, lsr fp
   159dc:	andeq	r1, r0, r0, rrx
   159e0:	andeq	r1, r0, r8, lsr #32
   159e4:	andeq	r1, r0, r4, asr #21
   159e8:	andeq	r1, r0, r4
   159ec:	andeq	r0, r0, r4, ror #31
   159f0:	subs	r2, r1, #1
   159f4:	bxeq	lr
   159f8:	bcc	15bd0 <close_stdout@@Base+0x2e7c>
   159fc:	cmp	r0, r1
   15a00:	bls	15bb4 <close_stdout@@Base+0x2e60>
   15a04:	tst	r1, r2
   15a08:	beq	15bc0 <close_stdout@@Base+0x2e6c>
   15a0c:	clz	r3, r0
   15a10:	clz	r2, r1
   15a14:	sub	r3, r2, r3
   15a18:	rsbs	r3, r3, #31
   15a1c:	addne	r3, r3, r3, lsl #1
   15a20:	mov	r2, #0
   15a24:	addne	pc, pc, r3, lsl #2
   15a28:	nop	{0}
   15a2c:	cmp	r0, r1, lsl #31
   15a30:	adc	r2, r2, r2
   15a34:	subcs	r0, r0, r1, lsl #31
   15a38:	cmp	r0, r1, lsl #30
   15a3c:	adc	r2, r2, r2
   15a40:	subcs	r0, r0, r1, lsl #30
   15a44:	cmp	r0, r1, lsl #29
   15a48:	adc	r2, r2, r2
   15a4c:	subcs	r0, r0, r1, lsl #29
   15a50:	cmp	r0, r1, lsl #28
   15a54:	adc	r2, r2, r2
   15a58:	subcs	r0, r0, r1, lsl #28
   15a5c:	cmp	r0, r1, lsl #27
   15a60:	adc	r2, r2, r2
   15a64:	subcs	r0, r0, r1, lsl #27
   15a68:	cmp	r0, r1, lsl #26
   15a6c:	adc	r2, r2, r2
   15a70:	subcs	r0, r0, r1, lsl #26
   15a74:	cmp	r0, r1, lsl #25
   15a78:	adc	r2, r2, r2
   15a7c:	subcs	r0, r0, r1, lsl #25
   15a80:	cmp	r0, r1, lsl #24
   15a84:	adc	r2, r2, r2
   15a88:	subcs	r0, r0, r1, lsl #24
   15a8c:	cmp	r0, r1, lsl #23
   15a90:	adc	r2, r2, r2
   15a94:	subcs	r0, r0, r1, lsl #23
   15a98:	cmp	r0, r1, lsl #22
   15a9c:	adc	r2, r2, r2
   15aa0:	subcs	r0, r0, r1, lsl #22
   15aa4:	cmp	r0, r1, lsl #21
   15aa8:	adc	r2, r2, r2
   15aac:	subcs	r0, r0, r1, lsl #21
   15ab0:	cmp	r0, r1, lsl #20
   15ab4:	adc	r2, r2, r2
   15ab8:	subcs	r0, r0, r1, lsl #20
   15abc:	cmp	r0, r1, lsl #19
   15ac0:	adc	r2, r2, r2
   15ac4:	subcs	r0, r0, r1, lsl #19
   15ac8:	cmp	r0, r1, lsl #18
   15acc:	adc	r2, r2, r2
   15ad0:	subcs	r0, r0, r1, lsl #18
   15ad4:	cmp	r0, r1, lsl #17
   15ad8:	adc	r2, r2, r2
   15adc:	subcs	r0, r0, r1, lsl #17
   15ae0:	cmp	r0, r1, lsl #16
   15ae4:	adc	r2, r2, r2
   15ae8:	subcs	r0, r0, r1, lsl #16
   15aec:	cmp	r0, r1, lsl #15
   15af0:	adc	r2, r2, r2
   15af4:	subcs	r0, r0, r1, lsl #15
   15af8:	cmp	r0, r1, lsl #14
   15afc:	adc	r2, r2, r2
   15b00:	subcs	r0, r0, r1, lsl #14
   15b04:	cmp	r0, r1, lsl #13
   15b08:	adc	r2, r2, r2
   15b0c:	subcs	r0, r0, r1, lsl #13
   15b10:	cmp	r0, r1, lsl #12
   15b14:	adc	r2, r2, r2
   15b18:	subcs	r0, r0, r1, lsl #12
   15b1c:	cmp	r0, r1, lsl #11
   15b20:	adc	r2, r2, r2
   15b24:	subcs	r0, r0, r1, lsl #11
   15b28:	cmp	r0, r1, lsl #10
   15b2c:	adc	r2, r2, r2
   15b30:	subcs	r0, r0, r1, lsl #10
   15b34:	cmp	r0, r1, lsl #9
   15b38:	adc	r2, r2, r2
   15b3c:	subcs	r0, r0, r1, lsl #9
   15b40:	cmp	r0, r1, lsl #8
   15b44:	adc	r2, r2, r2
   15b48:	subcs	r0, r0, r1, lsl #8
   15b4c:	cmp	r0, r1, lsl #7
   15b50:	adc	r2, r2, r2
   15b54:	subcs	r0, r0, r1, lsl #7
   15b58:	cmp	r0, r1, lsl #6
   15b5c:	adc	r2, r2, r2
   15b60:	subcs	r0, r0, r1, lsl #6
   15b64:	cmp	r0, r1, lsl #5
   15b68:	adc	r2, r2, r2
   15b6c:	subcs	r0, r0, r1, lsl #5
   15b70:	cmp	r0, r1, lsl #4
   15b74:	adc	r2, r2, r2
   15b78:	subcs	r0, r0, r1, lsl #4
   15b7c:	cmp	r0, r1, lsl #3
   15b80:	adc	r2, r2, r2
   15b84:	subcs	r0, r0, r1, lsl #3
   15b88:	cmp	r0, r1, lsl #2
   15b8c:	adc	r2, r2, r2
   15b90:	subcs	r0, r0, r1, lsl #2
   15b94:	cmp	r0, r1, lsl #1
   15b98:	adc	r2, r2, r2
   15b9c:	subcs	r0, r0, r1, lsl #1
   15ba0:	cmp	r0, r1
   15ba4:	adc	r2, r2, r2
   15ba8:	subcs	r0, r0, r1
   15bac:	mov	r0, r2
   15bb0:	bx	lr
   15bb4:	moveq	r0, #1
   15bb8:	movne	r0, #0
   15bbc:	bx	lr
   15bc0:	clz	r2, r1
   15bc4:	rsb	r2, r2, #31
   15bc8:	lsr	r0, r0, r2
   15bcc:	bx	lr
   15bd0:	cmp	r0, #0
   15bd4:	mvnne	r0, #0
   15bd8:	b	15c38 <close_stdout@@Base+0x2ee4>
   15bdc:	cmp	r1, #0
   15be0:	beq	15bd0 <close_stdout@@Base+0x2e7c>
   15be4:	push	{r0, r1, lr}
   15be8:	bl	159f0 <close_stdout@@Base+0x2c9c>
   15bec:	pop	{r1, r2, lr}
   15bf0:	mul	r3, r2, r0
   15bf4:	sub	r1, r1, r3
   15bf8:	bx	lr
   15bfc:	cmp	r3, #0
   15c00:	cmpeq	r2, #0
   15c04:	bne	15c1c <close_stdout@@Base+0x2ec8>
   15c08:	cmp	r1, #0
   15c0c:	cmpeq	r0, #0
   15c10:	mvnne	r1, #0
   15c14:	mvnne	r0, #0
   15c18:	b	15c38 <close_stdout@@Base+0x2ee4>
   15c1c:	sub	sp, sp, #8
   15c20:	push	{sp, lr}
   15c24:	bl	15c84 <close_stdout@@Base+0x2f30>
   15c28:	ldr	lr, [sp, #4]
   15c2c:	add	sp, sp, #8
   15c30:	pop	{r2, r3}
   15c34:	bx	lr
   15c38:	push	{r1, lr}
   15c3c:	mov	r0, #8
   15c40:	bl	1135c <raise@plt>
   15c44:	pop	{r1, pc}
   15c48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15c4c:	mov	r8, r2
   15c50:	mov	r6, r0
   15c54:	mov	r7, r1
   15c58:	mov	sl, r3
   15c5c:	ldr	r9, [sp, #32]
   15c60:	bl	15cc0 <close_stdout@@Base+0x2f6c>
   15c64:	umull	r4, r5, r8, r0
   15c68:	mul	r8, r8, r1
   15c6c:	mla	r2, r0, sl, r8
   15c70:	add	r5, r2, r5
   15c74:	subs	r4, r6, r4
   15c78:	sbc	r5, r7, r5
   15c7c:	strd	r4, [r9]
   15c80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c84:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15c88:	mov	r8, r2
   15c8c:	mov	r6, r0
   15c90:	mov	r7, r1
   15c94:	mov	r5, r3
   15c98:	ldr	r9, [sp, #32]
   15c9c:	bl	1614c <close_stdout@@Base+0x33f8>
   15ca0:	mul	r3, r0, r5
   15ca4:	umull	r4, r5, r0, r8
   15ca8:	mla	r8, r8, r1, r3
   15cac:	add	r5, r8, r5
   15cb0:	subs	r4, r6, r4
   15cb4:	sbc	r5, r7, r5
   15cb8:	strd	r4, [r9]
   15cbc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15cc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cc4:	rsbs	r4, r0, #0
   15cc8:	rsc	r5, r1, #0
   15ccc:	cmp	r1, #0
   15cd0:	mvn	r6, #0
   15cd4:	sub	sp, sp, #12
   15cd8:	movge	r4, r0
   15cdc:	movge	r5, r1
   15ce0:	movge	r6, #0
   15ce4:	cmp	r3, #0
   15ce8:	blt	15f20 <close_stdout@@Base+0x31cc>
   15cec:	cmp	r3, #0
   15cf0:	mov	sl, r4
   15cf4:	mov	ip, r5
   15cf8:	mov	r0, r2
   15cfc:	mov	r1, r3
   15d00:	mov	r8, r2
   15d04:	mov	r7, r4
   15d08:	mov	r9, r5
   15d0c:	bne	15e04 <close_stdout@@Base+0x30b0>
   15d10:	cmp	r2, r5
   15d14:	bls	15e40 <close_stdout@@Base+0x30ec>
   15d18:	clz	r3, r2
   15d1c:	cmp	r3, #0
   15d20:	rsbne	r2, r3, #32
   15d24:	lslne	r8, r0, r3
   15d28:	lsrne	r2, r4, r2
   15d2c:	lslne	r7, r4, r3
   15d30:	orrne	r9, r2, r5, lsl r3
   15d34:	lsr	r4, r8, #16
   15d38:	uxth	sl, r8
   15d3c:	mov	r1, r4
   15d40:	mov	r0, r9
   15d44:	bl	159f0 <close_stdout@@Base+0x2c9c>
   15d48:	mov	r1, r4
   15d4c:	mov	fp, r0
   15d50:	mov	r0, r9
   15d54:	bl	15bdc <close_stdout@@Base+0x2e88>
   15d58:	mul	r0, sl, fp
   15d5c:	lsr	r2, r7, #16
   15d60:	orr	r1, r2, r1, lsl #16
   15d64:	cmp	r0, r1
   15d68:	bls	15d8c <close_stdout@@Base+0x3038>
   15d6c:	adds	r1, r1, r8
   15d70:	sub	r3, fp, #1
   15d74:	bcs	15d88 <close_stdout@@Base+0x3034>
   15d78:	cmp	r0, r1
   15d7c:	subhi	fp, fp, #2
   15d80:	addhi	r1, r1, r8
   15d84:	bhi	15d8c <close_stdout@@Base+0x3038>
   15d88:	mov	fp, r3
   15d8c:	rsb	r9, r0, r1
   15d90:	mov	r1, r4
   15d94:	uxth	r7, r7
   15d98:	mov	r0, r9
   15d9c:	bl	159f0 <close_stdout@@Base+0x2c9c>
   15da0:	mov	r1, r4
   15da4:	mov	r5, r0
   15da8:	mov	r0, r9
   15dac:	bl	15bdc <close_stdout@@Base+0x2e88>
   15db0:	mul	sl, sl, r5
   15db4:	orr	r1, r7, r1, lsl #16
   15db8:	cmp	sl, r1
   15dbc:	bls	15ddc <close_stdout@@Base+0x3088>
   15dc0:	adds	r8, r1, r8
   15dc4:	sub	r3, r5, #1
   15dc8:	bcs	15dd8 <close_stdout@@Base+0x3084>
   15dcc:	cmp	sl, r8
   15dd0:	subhi	r5, r5, #2
   15dd4:	bhi	15ddc <close_stdout@@Base+0x3088>
   15dd8:	mov	r5, r3
   15ddc:	orr	r3, r5, fp, lsl #16
   15de0:	mov	r4, #0
   15de4:	cmp	r6, #0
   15de8:	mov	r0, r3
   15dec:	mov	r1, r4
   15df0:	beq	15dfc <close_stdout@@Base+0x30a8>
   15df4:	rsbs	r0, r0, #0
   15df8:	rsc	r1, r1, #0
   15dfc:	add	sp, sp, #12
   15e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e04:	cmp	r3, r5
   15e08:	movhi	r4, #0
   15e0c:	movhi	r3, r4
   15e10:	bhi	15de4 <close_stdout@@Base+0x3090>
   15e14:	clz	r5, r1
   15e18:	cmp	r5, #0
   15e1c:	bne	1600c <close_stdout@@Base+0x32b8>
   15e20:	cmp	r1, ip
   15e24:	cmpcs	r2, sl
   15e28:	movhi	r4, #0
   15e2c:	movls	r4, #1
   15e30:	movls	r3, #1
   15e34:	movls	r4, r5
   15e38:	movhi	r3, r4
   15e3c:	b	15de4 <close_stdout@@Base+0x3090>
   15e40:	cmp	r2, #0
   15e44:	bne	15e58 <close_stdout@@Base+0x3104>
   15e48:	mov	r1, r2
   15e4c:	mov	r0, #1
   15e50:	bl	159f0 <close_stdout@@Base+0x2c9c>
   15e54:	mov	r8, r0
   15e58:	clz	r3, r8
   15e5c:	cmp	r3, #0
   15e60:	bne	15f30 <close_stdout@@Base+0x31dc>
   15e64:	rsb	r9, r8, r9
   15e68:	lsr	r5, r8, #16
   15e6c:	uxth	sl, r8
   15e70:	mov	r4, #1
   15e74:	mov	r1, r5
   15e78:	mov	r0, r9
   15e7c:	bl	159f0 <close_stdout@@Base+0x2c9c>
   15e80:	mov	r1, r5
   15e84:	mov	fp, r0
   15e88:	mov	r0, r9
   15e8c:	bl	15bdc <close_stdout@@Base+0x2e88>
   15e90:	mul	r0, sl, fp
   15e94:	lsr	r2, r7, #16
   15e98:	orr	r1, r2, r1, lsl #16
   15e9c:	cmp	r0, r1
   15ea0:	bls	15ec0 <close_stdout@@Base+0x316c>
   15ea4:	adds	r1, r1, r8
   15ea8:	sub	r3, fp, #1
   15eac:	bcs	1612c <close_stdout@@Base+0x33d8>
   15eb0:	cmp	r0, r1
   15eb4:	subhi	fp, fp, #2
   15eb8:	addhi	r1, r1, r8
   15ebc:	bls	1612c <close_stdout@@Base+0x33d8>
   15ec0:	rsb	r2, r0, r1
   15ec4:	mov	r1, r5
   15ec8:	str	r2, [sp]
   15ecc:	uxth	r7, r7
   15ed0:	mov	r0, r2
   15ed4:	bl	159f0 <close_stdout@@Base+0x2c9c>
   15ed8:	ldr	r2, [sp]
   15edc:	mov	r1, r5
   15ee0:	mov	r9, r0
   15ee4:	mov	r0, r2
   15ee8:	bl	15bdc <close_stdout@@Base+0x2e88>
   15eec:	mul	sl, sl, r9
   15ef0:	orr	r1, r7, r1, lsl #16
   15ef4:	cmp	sl, r1
   15ef8:	bls	15f18 <close_stdout@@Base+0x31c4>
   15efc:	adds	r8, r1, r8
   15f00:	sub	r3, r9, #1
   15f04:	bcs	15f14 <close_stdout@@Base+0x31c0>
   15f08:	cmp	sl, r8
   15f0c:	subhi	r9, r9, #2
   15f10:	bhi	15f18 <close_stdout@@Base+0x31c4>
   15f14:	mov	r9, r3
   15f18:	orr	r3, r9, fp, lsl #16
   15f1c:	b	15de4 <close_stdout@@Base+0x3090>
   15f20:	mvn	r6, r6
   15f24:	rsbs	r2, r2, #0
   15f28:	rsc	r3, r3, #0
   15f2c:	b	15cec <close_stdout@@Base+0x2f98>
   15f30:	lsl	r8, r8, r3
   15f34:	rsb	fp, r3, #32
   15f38:	lsr	r4, r9, fp
   15f3c:	lsr	fp, r7, fp
   15f40:	lsr	r5, r8, #16
   15f44:	orr	fp, fp, r9, lsl r3
   15f48:	mov	r0, r4
   15f4c:	lsl	r7, r7, r3
   15f50:	mov	r1, r5
   15f54:	uxth	sl, r8
   15f58:	bl	159f0 <close_stdout@@Base+0x2c9c>
   15f5c:	mov	r1, r5
   15f60:	mov	r3, r0
   15f64:	mov	r0, r4
   15f68:	str	r3, [sp]
   15f6c:	bl	15bdc <close_stdout@@Base+0x2e88>
   15f70:	ldr	r3, [sp]
   15f74:	lsr	r2, fp, #16
   15f78:	mul	r0, sl, r3
   15f7c:	orr	r1, r2, r1, lsl #16
   15f80:	cmp	r0, r1
   15f84:	bls	15fa4 <close_stdout@@Base+0x3250>
   15f88:	adds	r1, r1, r8
   15f8c:	sub	r2, r3, #1
   15f90:	bcs	16144 <close_stdout@@Base+0x33f0>
   15f94:	cmp	r0, r1
   15f98:	subhi	r3, r3, #2
   15f9c:	addhi	r1, r1, r8
   15fa0:	bls	16144 <close_stdout@@Base+0x33f0>
   15fa4:	rsb	r9, r0, r1
   15fa8:	mov	r1, r5
   15fac:	str	r3, [sp]
   15fb0:	uxth	fp, fp
   15fb4:	mov	r0, r9
   15fb8:	bl	159f0 <close_stdout@@Base+0x2c9c>
   15fbc:	mov	r1, r5
   15fc0:	mov	r4, r0
   15fc4:	mov	r0, r9
   15fc8:	bl	15bdc <close_stdout@@Base+0x2e88>
   15fcc:	mul	r9, sl, r4
   15fd0:	ldr	r3, [sp]
   15fd4:	orr	r1, fp, r1, lsl #16
   15fd8:	cmp	r9, r1
   15fdc:	bls	16000 <close_stdout@@Base+0x32ac>
   15fe0:	adds	r1, r1, r8
   15fe4:	sub	r2, r4, #1
   15fe8:	bcs	15ffc <close_stdout@@Base+0x32a8>
   15fec:	cmp	r9, r1
   15ff0:	subhi	r4, r4, #2
   15ff4:	addhi	r1, r1, r8
   15ff8:	bhi	16000 <close_stdout@@Base+0x32ac>
   15ffc:	mov	r4, r2
   16000:	rsb	r9, r9, r1
   16004:	orr	r4, r4, r3, lsl #16
   16008:	b	15e74 <close_stdout@@Base+0x3120>
   1600c:	rsb	sl, r5, #32
   16010:	lsl	r3, r2, r5
   16014:	lsr	r0, r2, sl
   16018:	lsr	r2, ip, sl
   1601c:	orr	r4, r0, r1, lsl r5
   16020:	lsr	sl, r7, sl
   16024:	mov	r0, r2
   16028:	orr	sl, sl, ip, lsl r5
   1602c:	lsr	r9, r4, #16
   16030:	str	r3, [sp, #4]
   16034:	str	r2, [sp]
   16038:	uxth	fp, r4
   1603c:	mov	r1, r9
   16040:	bl	159f0 <close_stdout@@Base+0x2c9c>
   16044:	ldr	r2, [sp]
   16048:	mov	r1, r9
   1604c:	mov	r8, r0
   16050:	mov	r0, r2
   16054:	bl	15bdc <close_stdout@@Base+0x2e88>
   16058:	mul	r0, fp, r8
   1605c:	lsr	r2, sl, #16
   16060:	orr	r1, r2, r1, lsl #16
   16064:	cmp	r0, r1
   16068:	bls	16088 <close_stdout@@Base+0x3334>
   1606c:	adds	r1, r1, r4
   16070:	sub	r2, r8, #1
   16074:	bcs	1613c <close_stdout@@Base+0x33e8>
   16078:	cmp	r0, r1
   1607c:	subhi	r8, r8, #2
   16080:	addhi	r1, r1, r4
   16084:	bls	1613c <close_stdout@@Base+0x33e8>
   16088:	rsb	ip, r0, r1
   1608c:	mov	r1, r9
   16090:	str	ip, [sp]
   16094:	mov	r0, ip
   16098:	bl	159f0 <close_stdout@@Base+0x2c9c>
   1609c:	ldr	ip, [sp]
   160a0:	mov	r1, r9
   160a4:	mov	r2, r0
   160a8:	mov	r0, ip
   160ac:	str	r2, [sp]
   160b0:	bl	15bdc <close_stdout@@Base+0x2e88>
   160b4:	ldr	r2, [sp]
   160b8:	uxth	ip, sl
   160bc:	mul	fp, fp, r2
   160c0:	orr	ip, ip, r1, lsl #16
   160c4:	cmp	fp, ip
   160c8:	bls	160e8 <close_stdout@@Base+0x3394>
   160cc:	adds	ip, ip, r4
   160d0:	sub	r1, r2, #1
   160d4:	bcs	16134 <close_stdout@@Base+0x33e0>
   160d8:	cmp	fp, ip
   160dc:	subhi	r2, r2, #2
   160e0:	addhi	ip, ip, r4
   160e4:	bls	16134 <close_stdout@@Base+0x33e0>
   160e8:	ldr	r0, [sp, #4]
   160ec:	orr	r1, r2, r8, lsl #16
   160f0:	rsb	fp, fp, ip
   160f4:	umull	r2, r3, r1, r0
   160f8:	cmp	fp, r3
   160fc:	bcc	16120 <close_stdout@@Base+0x33cc>
   16100:	movne	r4, #0
   16104:	moveq	r4, #1
   16108:	cmp	r2, r7, lsl r5
   1610c:	movls	r4, #0
   16110:	andhi	r4, r4, #1
   16114:	cmp	r4, #0
   16118:	moveq	r3, r1
   1611c:	beq	15de4 <close_stdout@@Base+0x3090>
   16120:	sub	r3, r1, #1
   16124:	mov	r4, #0
   16128:	b	15de4 <close_stdout@@Base+0x3090>
   1612c:	mov	fp, r3
   16130:	b	15ec0 <close_stdout@@Base+0x316c>
   16134:	mov	r2, r1
   16138:	b	160e8 <close_stdout@@Base+0x3394>
   1613c:	mov	r8, r2
   16140:	b	16088 <close_stdout@@Base+0x3334>
   16144:	mov	r3, r2
   16148:	b	15fa4 <close_stdout@@Base+0x3250>
   1614c:	cmp	r3, #0
   16150:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16154:	mov	r6, r0
   16158:	sub	sp, sp, #12
   1615c:	mov	r5, r1
   16160:	mov	r7, r0
   16164:	mov	r4, r2
   16168:	mov	r8, r1
   1616c:	bne	1624c <close_stdout@@Base+0x34f8>
   16170:	cmp	r2, r1
   16174:	bls	16288 <close_stdout@@Base+0x3534>
   16178:	clz	r3, r2
   1617c:	cmp	r3, #0
   16180:	rsbne	r8, r3, #32
   16184:	lslne	r4, r2, r3
   16188:	lsrne	r8, r0, r8
   1618c:	lslne	r7, r0, r3
   16190:	orrne	r8, r8, r1, lsl r3
   16194:	lsr	r5, r4, #16
   16198:	uxth	sl, r4
   1619c:	mov	r1, r5
   161a0:	mov	r0, r8
   161a4:	bl	159f0 <close_stdout@@Base+0x2c9c>
   161a8:	mov	r1, r5
   161ac:	mov	r9, r0
   161b0:	mov	r0, r8
   161b4:	bl	15bdc <close_stdout@@Base+0x2e88>
   161b8:	mul	r0, sl, r9
   161bc:	lsr	r3, r7, #16
   161c0:	orr	r1, r3, r1, lsl #16
   161c4:	cmp	r0, r1
   161c8:	bls	161ec <close_stdout@@Base+0x3498>
   161cc:	adds	r1, r1, r4
   161d0:	sub	r2, r9, #1
   161d4:	bcs	161e8 <close_stdout@@Base+0x3494>
   161d8:	cmp	r0, r1
   161dc:	subhi	r9, r9, #2
   161e0:	addhi	r1, r1, r4
   161e4:	bhi	161ec <close_stdout@@Base+0x3498>
   161e8:	mov	r9, r2
   161ec:	rsb	r8, r0, r1
   161f0:	mov	r1, r5
   161f4:	uxth	r7, r7
   161f8:	mov	r0, r8
   161fc:	bl	159f0 <close_stdout@@Base+0x2c9c>
   16200:	mov	r1, r5
   16204:	mov	r6, r0
   16208:	mov	r0, r8
   1620c:	bl	15bdc <close_stdout@@Base+0x2e88>
   16210:	mul	sl, sl, r6
   16214:	orr	r1, r7, r1, lsl #16
   16218:	cmp	sl, r1
   1621c:	bls	16238 <close_stdout@@Base+0x34e4>
   16220:	adds	r4, r1, r4
   16224:	sub	r3, r6, #1
   16228:	bcs	16534 <close_stdout@@Base+0x37e0>
   1622c:	cmp	sl, r4
   16230:	subhi	r6, r6, #2
   16234:	bls	16534 <close_stdout@@Base+0x37e0>
   16238:	orr	r0, r6, r9, lsl #16
   1623c:	mov	r6, #0
   16240:	mov	r1, r6
   16244:	add	sp, sp, #12
   16248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1624c:	cmp	r3, r1
   16250:	movhi	r6, #0
   16254:	movhi	r0, r6
   16258:	bhi	16240 <close_stdout@@Base+0x34ec>
   1625c:	clz	r7, r3
   16260:	cmp	r7, #0
   16264:	bne	16364 <close_stdout@@Base+0x3610>
   16268:	cmp	r3, r1
   1626c:	cmpcs	r2, r6
   16270:	movhi	r6, #0
   16274:	movls	r6, #1
   16278:	movls	r0, #1
   1627c:	movls	r6, r7
   16280:	movhi	r0, r6
   16284:	b	16240 <close_stdout@@Base+0x34ec>
   16288:	cmp	r2, #0
   1628c:	bne	162a0 <close_stdout@@Base+0x354c>
   16290:	mov	r1, r2
   16294:	mov	r0, #1
   16298:	bl	159f0 <close_stdout@@Base+0x2c9c>
   1629c:	mov	r4, r0
   162a0:	clz	r3, r4
   162a4:	cmp	r3, #0
   162a8:	bne	16460 <close_stdout@@Base+0x370c>
   162ac:	rsb	r5, r4, r5
   162b0:	lsr	r8, r4, #16
   162b4:	uxth	sl, r4
   162b8:	mov	r6, #1
   162bc:	mov	r1, r8
   162c0:	mov	r0, r5
   162c4:	bl	159f0 <close_stdout@@Base+0x2c9c>
   162c8:	mov	r1, r8
   162cc:	mov	r9, r0
   162d0:	mov	r0, r5
   162d4:	bl	15bdc <close_stdout@@Base+0x2e88>
   162d8:	mul	r0, sl, r9
   162dc:	lsr	r3, r7, #16
   162e0:	orr	r1, r3, r1, lsl #16
   162e4:	cmp	r0, r1
   162e8:	bls	16308 <close_stdout@@Base+0x35b4>
   162ec:	adds	r1, r1, r4
   162f0:	sub	r2, r9, #1
   162f4:	bcs	1653c <close_stdout@@Base+0x37e8>
   162f8:	cmp	r0, r1
   162fc:	subhi	r9, r9, #2
   16300:	addhi	r1, r1, r4
   16304:	bls	1653c <close_stdout@@Base+0x37e8>
   16308:	rsb	fp, r0, r1
   1630c:	mov	r1, r8
   16310:	uxth	r7, r7
   16314:	mov	r0, fp
   16318:	bl	159f0 <close_stdout@@Base+0x2c9c>
   1631c:	mov	r1, r8
   16320:	mov	r5, r0
   16324:	mov	r0, fp
   16328:	bl	15bdc <close_stdout@@Base+0x2e88>
   1632c:	mul	sl, sl, r5
   16330:	orr	r1, r7, r1, lsl #16
   16334:	cmp	sl, r1
   16338:	bls	16354 <close_stdout@@Base+0x3600>
   1633c:	adds	r4, r1, r4
   16340:	sub	r3, r5, #1
   16344:	bcs	16544 <close_stdout@@Base+0x37f0>
   16348:	cmp	sl, r4
   1634c:	subhi	r5, r5, #2
   16350:	bls	16544 <close_stdout@@Base+0x37f0>
   16354:	orr	r0, r5, r9, lsl #16
   16358:	mov	r1, r6
   1635c:	add	sp, sp, #12
   16360:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16364:	rsb	r1, r7, #32
   16368:	lsl	r0, r2, r7
   1636c:	lsr	r2, r2, r1
   16370:	lsr	fp, r5, r1
   16374:	orr	r8, r2, r3, lsl r7
   16378:	lsr	r1, r6, r1
   1637c:	str	r0, [sp, #4]
   16380:	orr	r5, r1, r5, lsl r7
   16384:	lsr	r9, r8, #16
   16388:	mov	r0, fp
   1638c:	uxth	sl, r8
   16390:	mov	r1, r9
   16394:	bl	159f0 <close_stdout@@Base+0x2c9c>
   16398:	mov	r1, r9
   1639c:	mov	r4, r0
   163a0:	mov	r0, fp
   163a4:	bl	15bdc <close_stdout@@Base+0x2e88>
   163a8:	mul	r0, sl, r4
   163ac:	lsr	ip, r5, #16
   163b0:	orr	r1, ip, r1, lsl #16
   163b4:	cmp	r0, r1
   163b8:	bls	163cc <close_stdout@@Base+0x3678>
   163bc:	adds	r1, r1, r8
   163c0:	sub	r2, r4, #1
   163c4:	bcc	16560 <close_stdout@@Base+0x380c>
   163c8:	mov	r4, r2
   163cc:	rsb	ip, r0, r1
   163d0:	mov	r1, r9
   163d4:	str	ip, [sp]
   163d8:	uxth	r5, r5
   163dc:	mov	r0, ip
   163e0:	bl	159f0 <close_stdout@@Base+0x2c9c>
   163e4:	ldr	ip, [sp]
   163e8:	mov	r1, r9
   163ec:	mov	fp, r0
   163f0:	mov	r0, ip
   163f4:	bl	15bdc <close_stdout@@Base+0x2e88>
   163f8:	mul	sl, sl, fp
   163fc:	orr	r1, r5, r1, lsl #16
   16400:	cmp	sl, r1
   16404:	bls	16418 <close_stdout@@Base+0x36c4>
   16408:	adds	r1, r1, r8
   1640c:	sub	r2, fp, #1
   16410:	bcc	1654c <close_stdout@@Base+0x37f8>
   16414:	mov	fp, r2
   16418:	ldr	r3, [sp, #4]
   1641c:	orr	r0, fp, r4, lsl #16
   16420:	rsb	sl, sl, r1
   16424:	umull	r4, r5, r0, r3
   16428:	cmp	sl, r5
   1642c:	bcc	1644c <close_stdout@@Base+0x36f8>
   16430:	movne	r3, #0
   16434:	moveq	r3, #1
   16438:	cmp	r4, r6, lsl r7
   1643c:	movls	r6, #0
   16440:	andhi	r6, r3, #1
   16444:	cmp	r6, #0
   16448:	beq	16240 <close_stdout@@Base+0x34ec>
   1644c:	mov	r6, #0
   16450:	sub	r0, r0, #1
   16454:	mov	r1, r6
   16458:	add	sp, sp, #12
   1645c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16460:	lsl	r4, r4, r3
   16464:	rsb	r9, r3, #32
   16468:	lsr	r2, r5, r9
   1646c:	lsr	r9, r6, r9
   16470:	lsr	r8, r4, #16
   16474:	orr	r9, r9, r5, lsl r3
   16478:	mov	r0, r2
   1647c:	lsl	r7, r6, r3
   16480:	mov	r1, r8
   16484:	str	r2, [sp]
   16488:	bl	159f0 <close_stdout@@Base+0x2c9c>
   1648c:	ldr	r2, [sp]
   16490:	mov	r1, r8
   16494:	uxth	sl, r4
   16498:	mov	fp, r0
   1649c:	mov	r0, r2
   164a0:	bl	15bdc <close_stdout@@Base+0x2e88>
   164a4:	mul	r0, sl, fp
   164a8:	lsr	r3, r9, #16
   164ac:	orr	r1, r3, r1, lsl #16
   164b0:	cmp	r0, r1
   164b4:	bls	164d4 <close_stdout@@Base+0x3780>
   164b8:	adds	r1, r1, r4
   164bc:	sub	r3, fp, #1
   164c0:	bcs	16574 <close_stdout@@Base+0x3820>
   164c4:	cmp	r0, r1
   164c8:	subhi	fp, fp, #2
   164cc:	addhi	r1, r1, r4
   164d0:	bls	16574 <close_stdout@@Base+0x3820>
   164d4:	rsb	r5, r0, r1
   164d8:	mov	r1, r8
   164dc:	uxth	r9, r9
   164e0:	mov	r0, r5
   164e4:	bl	159f0 <close_stdout@@Base+0x2c9c>
   164e8:	mov	r1, r8
   164ec:	mov	r6, r0
   164f0:	mov	r0, r5
   164f4:	bl	15bdc <close_stdout@@Base+0x2e88>
   164f8:	mul	r5, sl, r6
   164fc:	orr	r1, r9, r1, lsl #16
   16500:	cmp	r5, r1
   16504:	bls	16528 <close_stdout@@Base+0x37d4>
   16508:	adds	r1, r1, r4
   1650c:	sub	r3, r6, #1
   16510:	bcs	16524 <close_stdout@@Base+0x37d0>
   16514:	cmp	r5, r1
   16518:	subhi	r6, r6, #2
   1651c:	addhi	r1, r1, r4
   16520:	bhi	16528 <close_stdout@@Base+0x37d4>
   16524:	mov	r6, r3
   16528:	rsb	r5, r5, r1
   1652c:	orr	r6, r6, fp, lsl #16
   16530:	b	162bc <close_stdout@@Base+0x3568>
   16534:	mov	r6, r3
   16538:	b	16238 <close_stdout@@Base+0x34e4>
   1653c:	mov	r9, r2
   16540:	b	16308 <close_stdout@@Base+0x35b4>
   16544:	mov	r5, r3
   16548:	b	16354 <close_stdout@@Base+0x3600>
   1654c:	cmp	sl, r1
   16550:	subhi	fp, fp, #2
   16554:	addhi	r1, r1, r8
   16558:	bhi	16418 <close_stdout@@Base+0x36c4>
   1655c:	b	16414 <close_stdout@@Base+0x36c0>
   16560:	cmp	r0, r1
   16564:	subhi	r4, r4, #2
   16568:	addhi	r1, r1, r8
   1656c:	bhi	163cc <close_stdout@@Base+0x3678>
   16570:	b	163c8 <close_stdout@@Base+0x3674>
   16574:	mov	fp, r3
   16578:	b	164d4 <close_stdout@@Base+0x3780>
   1657c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   16580:	mov	r7, r0
   16584:	ldr	r6, [pc, #76]	; 165d8 <close_stdout@@Base+0x3884>
   16588:	mov	r8, r1
   1658c:	ldr	r5, [pc, #72]	; 165dc <close_stdout@@Base+0x3888>
   16590:	mov	r9, r2
   16594:	add	r6, pc, r6
   16598:	bl	1115c <_init@@Base>
   1659c:	add	r5, pc, r5
   165a0:	rsb	r6, r5, r6
   165a4:	asrs	r6, r6, #2
   165a8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   165ac:	sub	r5, r5, #4
   165b0:	mov	r4, #0
   165b4:	add	r4, r4, #1
   165b8:	ldr	r3, [r5, #4]!
   165bc:	mov	r0, r7
   165c0:	mov	r1, r8
   165c4:	mov	r2, r9
   165c8:	blx	r3
   165cc:	cmp	r4, r6
   165d0:	bne	165b4 <close_stdout@@Base+0x3860>
   165d4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   165d8:	andeq	r1, r1, r8, lsl #17
   165dc:	andeq	r1, r1, ip, ror r8
   165e0:	bx	lr
   165e4:	ldr	r3, [pc, #28]	; 16608 <close_stdout@@Base+0x38b4>
   165e8:	mov	r1, #0
   165ec:	ldr	r2, [pc, #24]	; 1660c <close_stdout@@Base+0x38b8>
   165f0:	add	r3, pc, r3
   165f4:	ldr	r3, [r3, r2]
   165f8:	cmp	r3, #0
   165fc:	ldrne	r2, [r3]
   16600:	moveq	r2, r3
   16604:	b	11200 <__cxa_atexit@plt>
   16608:	andeq	r1, r1, r8, lsl #20
   1660c:	andeq	r0, r0, r0, lsr #2

Disassembly of section .fini:

00016610 <_fini@@Base>:
   16610:	push	{r3, lr}
   16614:	pop	{r3, pc}
