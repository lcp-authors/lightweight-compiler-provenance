
centos-preinstalled/gtf:     file format elf32-littlearm


Disassembly of section .init:

0001079c <_init@@Base>:
   1079c:	push	{r3, lr}
   107a0:	bl	1094c <abort@plt+0xb8>
   107a4:	pop	{r3, pc}

Disassembly of section .plt:

000107a8 <calloc@plt-0x14>:
   107a8:	push	{lr}		; (str lr, [sp, #-4]!)
   107ac:	ldr	lr, [pc, #4]	; 107b8 <_init@@Base+0x1c>
   107b0:	add	lr, pc, lr
   107b4:	ldr	pc, [lr, #8]!
   107b8:	andeq	r1, r1, r8, asr #16

000107bc <calloc@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2120]!	; 0x848

000107c8 <strcmp@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2112]!	; 0x840

000107d4 <strtol@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2104]!	; 0x838

000107e0 <free@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2096]!	; 0x830

000107ec <rintf@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2088]!	; 0x828

000107f8 <fwrite@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2080]!	; 0x820

00010804 <puts@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2072]!	; 0x818

00010810 <malloc@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2064]!	; 0x810

0001081c <__libc_start_main@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2056]!	; 0x808

00010828 <__gmon_start__@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2048]!	; 0x800

00010834 <exit@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2040]!	; 0x7f8

00010840 <putchar@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #2032]!	; 0x7f0

0001084c <__printf_chk@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #2024]!	; 0x7e8

00010858 <strtod@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #2016]!	; 0x7e0

00010864 <rint@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #2008]!	; 0x7d8

00010870 <__fprintf_chk@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #69632	; 0x11000
   10878:	ldr	pc, [ip, #2000]!	; 0x7d0

0001087c <lrint@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #69632	; 0x11000
   10884:	ldr	pc, [ip, #1992]!	; 0x7c8

00010888 <fputc@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #69632	; 0x11000
   10890:	ldr	pc, [ip, #1984]!	; 0x7c0

00010894 <abort@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #69632	; 0x11000
   1089c:	ldr	pc, [ip, #1976]!	; 0x7b8

Disassembly of section .text:

000108a0 <.text>:
   108a0:	push	{r3, r4, r5, lr}
   108a4:	bl	114a0 <abort@plt+0xc0c>
   108a8:	subs	r4, r0, #0
   108ac:	beq	10908 <abort@plt+0x74>
   108b0:	mov	r2, #0
   108b4:	ldr	r0, [r4]
   108b8:	mov	r3, r2
   108bc:	ldr	r1, [r4, #4]
   108c0:	vldr	s0, [r4, #16]
   108c4:	bl	10c88 <abort@plt+0x3f4>
   108c8:	subs	r5, r0, #0
   108cc:	beq	10908 <abort@plt+0x74>
   108d0:	ldr	r3, [r4, #8]
   108d4:	cmp	r3, #0
   108d8:	bne	10900 <abort@plt+0x6c>
   108dc:	ldr	r3, [r4, #12]
   108e0:	cmp	r3, #0
   108e4:	beq	108f0 <abort@plt+0x5c>
   108e8:	mov	r0, r5
   108ec:	bl	10b58 <abort@plt+0x2c4>
   108f0:	mov	r0, r5
   108f4:	bl	107e0 <free@plt>
   108f8:	mov	r0, #0
   108fc:	pop	{r3, r4, r5, pc}
   10900:	bl	10a90 <abort@plt+0x1fc>
   10904:	b	108dc <abort@plt+0x48>
   10908:	mov	r0, #1
   1090c:	bl	10834 <exit@plt>
   10910:	mov	fp, #0
   10914:	mov	lr, #0
   10918:	pop	{r1}		; (ldr r1, [sp], #4)
   1091c:	mov	r2, sp
   10920:	push	{r2}		; (str r2, [sp, #-4]!)
   10924:	push	{r0}		; (str r0, [sp, #-4]!)
   10928:	ldr	ip, [pc, #16]	; 10940 <abort@plt+0xac>
   1092c:	push	{ip}		; (str ip, [sp, #-4]!)
   10930:	ldr	r0, [pc, #12]	; 10944 <abort@plt+0xb0>
   10934:	ldr	r3, [pc, #12]	; 10948 <abort@plt+0xb4>
   10938:	bl	1081c <__libc_start_main@plt>
   1093c:	bl	10894 <abort@plt>
   10940:	andeq	r1, r1, ip, asr #15
   10944:	andeq	r0, r1, r0, lsr #17
   10948:	andeq	r1, r1, r8, ror #14
   1094c:	ldr	r3, [pc, #20]	; 10968 <abort@plt+0xd4>
   10950:	ldr	r2, [pc, #20]	; 1096c <abort@plt+0xd8>
   10954:	add	r3, pc, r3
   10958:	ldr	r2, [r3, r2]
   1095c:	cmp	r2, #0
   10960:	bxeq	lr
   10964:	b	10828 <__gmon_start__@plt>
   10968:	andeq	r1, r1, r4, lsr #13
   1096c:	andeq	r0, r0, r8, asr r0
   10970:	push	{r3, lr}
   10974:	movw	r0, #8288	; 0x2060
   10978:	ldr	r3, [pc, #36]	; 109a4 <abort@plt+0x110>
   1097c:	movt	r0, #2
   10980:	rsb	r3, r0, r3
   10984:	cmp	r3, #6
   10988:	popls	{r3, pc}
   1098c:	movw	r3, #0
   10990:	movt	r3, #0
   10994:	cmp	r3, #0
   10998:	popeq	{r3, pc}
   1099c:	blx	r3
   109a0:	pop	{r3, pc}
   109a4:	andeq	r2, r2, r3, rrx
   109a8:	push	{r3, lr}
   109ac:	movw	r0, #8288	; 0x2060
   109b0:	movw	r3, #8288	; 0x2060
   109b4:	movt	r0, #2
   109b8:	movt	r3, #2
   109bc:	rsb	r3, r0, r3
   109c0:	asr	r3, r3, #2
   109c4:	add	r3, r3, r3, lsr #31
   109c8:	asrs	r1, r3, #1
   109cc:	popeq	{r3, pc}
   109d0:	movw	r2, #0
   109d4:	movt	r2, #0
   109d8:	cmp	r2, #0
   109dc:	popeq	{r3, pc}
   109e0:	blx	r2
   109e4:	pop	{r3, pc}
   109e8:	push	{r4, lr}
   109ec:	movw	r4, #8292	; 0x2064
   109f0:	movt	r4, #2
   109f4:	ldrb	r3, [r4]
   109f8:	cmp	r3, #0
   109fc:	popne	{r4, pc}
   10a00:	bl	10970 <abort@plt+0xdc>
   10a04:	mov	r3, #1
   10a08:	strb	r3, [r4]
   10a0c:	pop	{r4, pc}
   10a10:	movw	r0, #7924	; 0x1ef4
   10a14:	movt	r0, #2
   10a18:	push	{r3, lr}
   10a1c:	ldr	r3, [r0]
   10a20:	cmp	r3, #0
   10a24:	beq	10a3c <abort@plt+0x1a8>
   10a28:	movw	r3, #0
   10a2c:	movt	r3, #0
   10a30:	cmp	r3, #0
   10a34:	beq	10a3c <abort@plt+0x1a8>
   10a38:	blx	r3
   10a3c:	pop	{r3, lr}
   10a40:	b	109a8 <abort@plt+0x114>
   10a44:	andeq	r0, r0, r0
   10a48:	vcvt.f64.f32	d0, s0
   10a4c:	mov	r3, r1
   10a50:	push	{lr}		; (str lr, [sp, #-4]!)
   10a54:	mov	r2, r0
   10a58:	sub	sp, sp, #12
   10a5c:	movw	r1, #6112	; 0x17e0
   10a60:	mov	r0, #1
   10a64:	movt	r1, #1
   10a68:	vstr	d0, [sp]
   10a6c:	bl	1084c <__printf_chk@plt>
   10a70:	add	sp, sp, #12
   10a74:	pop	{pc}		; (ldr pc, [sp], #4)
   10a78:	movw	r3, #8296	; 0x2068
   10a7c:	movt	r3, #2
   10a80:	ldr	r3, [r3]
   10a84:	cmp	r3, #0
   10a88:	bxeq	lr
   10a8c:	b	10a48 <abort@plt+0x1b4>
   10a90:	push	{r4, lr}
   10a94:	mov	r4, r0
   10a98:	sub	sp, sp, #48	; 0x30
   10a9c:	mov	r0, #10
   10aa0:	bl	10840 <putchar@plt>
   10aa4:	vldr	s14, [r4, #40]	; 0x28
   10aa8:	vcvt.f64.f32	d7, s14
   10aac:	ldr	r3, [r4, #16]
   10ab0:	ldr	r2, [r4]
   10ab4:	movw	r1, #6132	; 0x17f4
   10ab8:	mov	r0, #1
   10abc:	movt	r1, #1
   10ac0:	vstr	d7, [sp]
   10ac4:	vldr	s14, [r4, #36]	; 0x24
   10ac8:	vcvt.f64.f32	d7, s14
   10acc:	vstr	d7, [sp, #8]
   10ad0:	vldr	s14, [r4, #32]
   10ad4:	vcvt.f64.f32	d7, s14
   10ad8:	vstr	d7, [sp, #16]
   10adc:	bl	1084c <__printf_chk@plt>
   10ae0:	vldr	s14, [r4, #40]	; 0x28
   10ae4:	vcvt.f64.f32	d7, s14
   10ae8:	ldr	ip, [r4, #16]
   10aec:	ldr	lr, [r4]
   10af0:	movw	r1, #6192	; 0x1830
   10af4:	mov	r0, #1
   10af8:	movt	r1, #1
   10afc:	mov	r3, ip
   10b00:	mov	r2, lr
   10b04:	vstr	d7, [sp]
   10b08:	vldr	s14, [r4, #32]
   10b0c:	vcvt.f64.f32	d7, s14
   10b10:	str	lr, [sp, #16]
   10b14:	vstr	d7, [sp, #8]
   10b18:	ldr	lr, [r4, #4]
   10b1c:	str	lr, [sp, #20]
   10b20:	ldr	lr, [r4, #8]
   10b24:	str	lr, [sp, #24]
   10b28:	ldr	lr, [r4, #12]
   10b2c:	str	ip, [sp, #32]
   10b30:	str	lr, [sp, #28]
   10b34:	ldr	ip, [r4, #20]
   10b38:	str	ip, [sp, #36]	; 0x24
   10b3c:	ldr	ip, [r4, #24]
   10b40:	str	ip, [sp, #40]	; 0x28
   10b44:	ldr	ip, [r4, #28]
   10b48:	str	ip, [sp, #44]	; 0x2c
   10b4c:	bl	1084c <__printf_chk@plt>
   10b50:	add	sp, sp, #48	; 0x30
   10b54:	pop	{r4, pc}
   10b58:	push	{r4, r5, r6, r7, r8, lr}
   10b5c:	mov	r4, r0
   10b60:	sub	sp, sp, #24
   10b64:	mov	r0, #10
   10b68:	bl	10840 <putchar@plt>
   10b6c:	vldr	s14, [r4, #40]	; 0x28
   10b70:	vcvt.f64.f32	d7, s14
   10b74:	ldr	r3, [r4, #16]
   10b78:	ldr	r2, [r4]
   10b7c:	movw	r1, #6268	; 0x187c
   10b80:	mov	r0, #1
   10b84:	movt	r1, #1
   10b88:	vstr	d7, [sp]
   10b8c:	bl	1084c <__printf_chk@plt>
   10b90:	vldr	s14, [r4, #36]	; 0x24
   10b94:	vcvt.f64.f32	d7, s14
   10b98:	vldr	s13, [r4, #32]
   10b9c:	movw	r1, #6304	; 0x18a0
   10ba0:	mov	r0, #1
   10ba4:	movt	r1, #1
   10ba8:	vcvt.f64.f32	d5, s13
   10bac:	vstr	d7, [sp]
   10bb0:	vldr	s14, [r4, #40]	; 0x28
   10bb4:	vcvt.f64.f32	d7, s14
   10bb8:	vmov	r2, r3, d5
   10bbc:	vstr	d7, [sp, #8]
   10bc0:	bl	1084c <__printf_chk@plt>
   10bc4:	ldr	r2, [r4]
   10bc8:	ldr	r3, [r4, #16]
   10bcc:	movw	r1, #6352	; 0x18d0
   10bd0:	mov	r0, #1
   10bd4:	movt	r1, #1
   10bd8:	stm	sp, {r2, r3}
   10bdc:	bl	1084c <__printf_chk@plt>
   10be0:	vldr	s14, [r4, #32]
   10be4:	vcvt.f64.f32	d7, s14
   10be8:	vldr	d0, [pc, #144]	; 10c80 <abort@plt+0x3ec>
   10bec:	vdiv.f64	d0, d0, d7
   10bf0:	bl	1087c <lrint@plt>
   10bf4:	ldr	r5, [r4, #4]
   10bf8:	ldr	r6, [r4]
   10bfc:	movw	r1, #6384	; 0x18f0
   10c00:	ldr	r3, [r4, #8]
   10c04:	movt	r1, #1
   10c08:	ldr	lr, [r4, #24]
   10c0c:	rsb	r6, r6, r5
   10c10:	ldr	ip, [r4, #20]
   10c14:	rsb	r5, r5, r3
   10c18:	ldr	r8, [r4, #12]
   10c1c:	str	r6, [sp]
   10c20:	rsb	r6, ip, lr
   10c24:	ldr	r7, [r4, #28]
   10c28:	rsb	r3, r3, r8
   10c2c:	rsb	lr, lr, r7
   10c30:	str	lr, [sp, #4]
   10c34:	ldr	lr, [r4, #16]
   10c38:	str	r5, [sp, #12]
   10c3c:	rsb	ip, lr, ip
   10c40:	str	r6, [sp, #16]
   10c44:	str	ip, [sp, #8]
   10c48:	mov	r2, r0
   10c4c:	mov	r0, #1
   10c50:	bl	1084c <__printf_chk@plt>
   10c54:	movw	r0, #6420	; 0x1914
   10c58:	movt	r0, #1
   10c5c:	bl	10804 <puts@plt>
   10c60:	movw	r0, #6436	; 0x1924
   10c64:	movt	r0, #1
   10c68:	bl	10804 <puts@plt>
   10c6c:	movw	r0, #6452	; 0x1934
   10c70:	movt	r0, #1
   10c74:	add	sp, sp, #24
   10c78:	pop	{r4, r5, r6, r7, r8, lr}
   10c7c:	b	10804 <puts@plt>
   10c80:	andeq	r0, r0, r0
   10c84:	smlawbmi	lr, r0, r4, r8
   10c88:	push	{r4, r5, r6, r7, r8, lr}
   10c8c:	vpush	{d8-d15}
   10c90:	mov	r5, r0
   10c94:	mov	r0, #44	; 0x2c
   10c98:	mov	r7, r3
   10c9c:	mov	r8, r1
   10ca0:	vmov.f32	s28, s0
   10ca4:	mov	r6, r2
   10ca8:	bl	10810 <malloc@plt>
   10cac:	vmov	s15, r5
   10cb0:	movw	r5, #8296	; 0x2068
   10cb4:	movt	r5, #2
   10cb8:	vcvt.f32.s32	s12, s15
   10cbc:	vmov.f64	d0, #64	; 0x3e000000  0.125
   10cc0:	vcvt.f64.f32	d6, s12
   10cc4:	vmul.f64	d0, d6, d0
   10cc8:	mov	r4, r0
   10ccc:	bl	10864 <rint@plt>
   10cd0:	ldr	r3, [r5]
   10cd4:	cmp	r3, #0
   10cd8:	vmov.f64	d7, #32	; 0x41000000  8.0
   10cdc:	vmul.f64	d0, d0, d7
   10ce0:	vcvt.f32.f64	s25, d0
   10ce4:	bne	10fe4 <abort@plt+0x750>
   10ce8:	vmov	s15, r8
   10cec:	cmp	r6, #0
   10cf0:	vcvt.f32.s32	s0, s15
   10cf4:	beq	10fd8 <abort@plt+0x744>
   10cf8:	bl	107ec <rintf@plt>
   10cfc:	vmov.f64	d7, #96	; 0x3f000000  0.5
   10d00:	vcvt.f64.f32	d0, s0
   10d04:	vmul.f64	d7, d0, d7
   10d08:	vcvt.f32.f64	s24, d7
   10d0c:	ldr	r3, [r5]
   10d10:	movw	r8, #8296	; 0x2068
   10d14:	movt	r8, #2
   10d18:	cmp	r3, #0
   10d1c:	bne	1144c <abort@plt+0xbb8>
   10d20:	cmp	r6, #0
   10d24:	vcvtne.f64.f32	d7, s28
   10d28:	vaddne.f64	d7, d7, d7
   10d2c:	vmoveq.f32	s31, s28
   10d30:	vcvtne.f32.f64	s31, d7
   10d34:	cmp	r3, #0
   10d38:	bne	11434 <abort@plt+0xba0>
   10d3c:	cmp	r7, #0
   10d40:	bne	1141c <abort@plt+0xb88>
   10d44:	vldr	s18, [pc, #1004]	; 11138 <abort@plt+0x8a4>
   10d48:	ldr	r3, [r5]
   10d4c:	cmp	r3, #0
   10d50:	bne	11404 <abort@plt+0xb70>
   10d54:	cmp	r7, #0
   10d58:	bne	113ec <abort@plt+0xb58>
   10d5c:	vldr	s19, [pc, #980]	; 11138 <abort@plt+0x8a4>
   10d60:	ldr	r3, [r5]
   10d64:	movw	r8, #8296	; 0x2068
   10d68:	movt	r8, #2
   10d6c:	cmp	r3, #0
   10d70:	bne	113d0 <abort@plt+0xb3c>
   10d74:	vmov.f32	s15, #96	; 0x3f000000  0.5
   10d78:	cmp	r6, #0
   10d7c:	vldr	s26, [pc, #948]	; 11138 <abort@plt+0x8a4>
   10d80:	vmovne.f32	s26, s15
   10d84:	cmp	r3, #0
   10d88:	bne	1135c <abort@plt+0xac8>
   10d8c:	vldr	d4, [pc, #868]	; 110f8 <abort@plt+0x864>
   10d90:	vldr	d6, [pc, #872]	; 11100 <abort@plt+0x86c>
   10d94:	vmov.f64	d5, #112	; 0x3f800000  1.0
   10d98:	vcvt.f64.f32	d7, s31
   10d9c:	vdiv.f64	d7, d5, d7
   10da0:	vadd.f32	s10, s18, s18
   10da4:	vmov.f32	s11, #112	; 0x3f800000  1.0
   10da8:	vadd.f32	s10, s24, s10
   10dac:	vadd.f32	s10, s10, s11
   10db0:	vadd.f32	s10, s26, s10
   10db4:	vsub.f64	d7, d7, d4
   10db8:	vcvt.f64.f32	d5, s10
   10dbc:	vdiv.f64	d7, d7, d5
   10dc0:	vmul.f64	d7, d7, d6
   10dc4:	vcvt.f32.f64	s30, d7
   10dc8:	vldr	d0, [pc, #824]	; 11108 <abort@plt+0x874>
   10dcc:	movw	r8, #8296	; 0x2068
   10dd0:	movt	r8, #2
   10dd4:	vcvt.f64.f32	d8, s30
   10dd8:	vdiv.f64	d0, d0, d8
   10ddc:	bl	10864 <rint@plt>
   10de0:	ldr	r3, [r5]
   10de4:	cmp	r3, #0
   10de8:	vcvt.f32.f64	s20, d0
   10dec:	bne	1124c <abort@plt+0x9b8>
   10df0:	vadd.f32	s27, s24, s18
   10df4:	vadd.f32	s27, s19, s27
   10df8:	vadd.f32	s27, s27, s20
   10dfc:	vmov.f32	s15, #112	; 0x3f800000  1.0
   10e00:	vadd.f32	s27, s26, s27
   10e04:	vadd.f32	s27, s27, s15
   10e08:	vldr	d7, [pc, #752]	; 11100 <abort@plt+0x86c>
   10e0c:	vmov.f64	d6, #112	; 0x3f800000  1.0
   10e10:	vdiv.f64	d8, d6, d8
   10e14:	vcvt.f64.f32	d9, s27
   10e18:	vdiv.f64	d8, d8, d9
   10e1c:	vmul.f64	d8, d8, d7
   10e20:	vcvt.f32.f64	s16, d8
   10e24:	vdiv.f32	s16, s31, s16
   10e28:	vdiv.f32	s29, s30, s16
   10e2c:	vldr	d7, [pc, #716]	; 11100 <abort@plt+0x86c>
   10e30:	mov	r3, #0
   10e34:	vmov.f64	d6, #112	; 0x3f800000  1.0
   10e38:	vcvt.f64.f32	d8, s29
   10e3c:	vdiv.f64	d6, d6, d8
   10e40:	vdiv.f64	d9, d6, d9
   10e44:	vmul.f64	d9, d9, d7
   10e48:	vcvt.f32.f64	s18, d9
   10e4c:	cmp	r6, #0
   10e50:	vmovne.f64	d7, #96	; 0x3f000000  0.5
   10e54:	vcvtne.f64.f32	d9, s18
   10e58:	vmulne.f64	d9, d9, d7
   10e5c:	vcvtne.f32.f64	s18, d9
   10e60:	cmp	r3, #0
   10e64:	bne	11234 <abort@plt+0x9a0>
   10e68:	cmp	r7, #0
   10e6c:	bne	11204 <abort@plt+0x970>
   10e70:	vldr	s18, [pc, #704]	; 11138 <abort@plt+0x8a4>
   10e74:	ldr	r3, [r5]
   10e78:	cmp	r3, #0
   10e7c:	bne	111ec <abort@plt+0x958>
   10e80:	cmp	r7, #0
   10e84:	bne	111bc <abort@plt+0x928>
   10e88:	vldr	s20, [pc, #680]	; 11138 <abort@plt+0x8a4>
   10e8c:	ldr	r3, [r5]
   10e90:	movw	r6, #8296	; 0x2068
   10e94:	movt	r6, #2
   10e98:	cmp	r3, #0
   10e9c:	vaddeq.f32	s19, s18, s25
   10ea0:	vaddeq.f32	s19, s20, s19
   10ea4:	bne	11140 <abort@plt+0x8ac>
   10ea8:	vldr	d6, [pc, #608]	; 11110 <abort@plt+0x87c>
   10eac:	vldr	d7, [pc, #612]	; 11118 <abort@plt+0x884>
   10eb0:	vmul.f64	d8, d8, d6
   10eb4:	vdiv.f64	d8, d8, d7
   10eb8:	vmov.f64	d6, #62	; 0x41f00000  30.0
   10ebc:	vsub.f64	d6, d6, d8
   10ec0:	vcvt.f32.f64	s16, d6
   10ec4:	vldr	d5, [pc, #596]	; 11120 <abort@plt+0x88c>
   10ec8:	vldr	d7, [pc, #600]	; 11128 <abort@plt+0x894>
   10ecc:	movw	r6, #8296	; 0x2068
   10ed0:	movt	r6, #2
   10ed4:	vmul.f32	s0, s19, s16
   10ed8:	vcvt.f64.f32	d6, s16
   10edc:	vsub.f64	d6, d5, d6
   10ee0:	vcvt.f64.f32	d0, s0
   10ee4:	vdiv.f64	d0, d0, d6
   10ee8:	vmul.f64	d0, d0, d7
   10eec:	bl	10864 <rint@plt>
   10ef0:	ldr	r3, [r5]
   10ef4:	cmp	r3, #0
   10ef8:	vmov.f64	d7, #48	; 0x41800000  16.0
   10efc:	vmul.f64	d0, d0, d7
   10f00:	vcvt.f32.f64	s18, d0
   10f04:	vaddeq.f32	s16, s19, s18
   10f08:	bne	11070 <abort@plt+0x7dc>
   10f0c:	vdiv.f32	s17, s16, s29
   10f10:	vldr	s15, [pc, #548]	; 1113c <abort@plt+0x8a8>
   10f14:	vdiv.f32	s29, s15, s29
   10f18:	vldr	d7, [pc, #528]	; 11130 <abort@plt+0x89c>
   10f1c:	movw	r6, #8296	; 0x2068
   10f20:	movt	r6, #2
   10f24:	vcvt.f64.f32	d0, s16
   10f28:	vmul.f64	d0, d0, d7
   10f2c:	vmov.f64	d6, #64	; 0x3e000000  0.125
   10f30:	vmul.f64	d0, d0, d6
   10f34:	bl	10864 <rint@plt>
   10f38:	ldr	r3, [r5]
   10f3c:	cmp	r3, #0
   10f40:	vmov.f64	d7, #32	; 0x41000000  8.0
   10f44:	vmul.f64	d0, d0, d7
   10f48:	vcvt.f32.f64	s20, d0
   10f4c:	bne	10ffc <abort@plt+0x768>
   10f50:	vmov.f64	d6, #96	; 0x3f000000  0.5
   10f54:	vcvt.f64.f32	d9, s18
   10f58:	vcvt.f64.f32	d7, s20
   10f5c:	vnmls.f64	d7, d9, d6
   10f60:	vcvt.f32.f64	s18, d7
   10f64:	vmov.f32	s15, #112	; 0x3f800000  1.0
   10f68:	vadd.f32	s26, s26, s15
   10f6c:	vstr	s17, [r4, #32]
   10f70:	vstr	s29, [r4, #36]	; 0x24
   10f74:	vstr	s28, [r4, #40]	; 0x28
   10f78:	mov	r0, r4
   10f7c:	vadd.f32	s15, s25, s18
   10f80:	vadd.f32	s26, s24, s26
   10f84:	vmov.f32	s13, #8	; 0x40400000  3.0
   10f88:	vadd.f32	s20, s20, s15
   10f8c:	vadd.f32	s13, s26, s13
   10f90:	vcvt.s32.f32	s20, s20
   10f94:	vcvt.s32.f32	s26, s26
   10f98:	vstr	s20, [r4, #8]
   10f9c:	vcvt.s32.f32	s25, s25
   10fa0:	vstr	s26, [r4, #20]
   10fa4:	vcvt.s32.f32	s16, s16
   10fa8:	vstr	s25, [r4]
   10fac:	vcvt.s32.f32	s24, s24
   10fb0:	vstr	s16, [r4, #12]
   10fb4:	vcvt.s32.f32	s27, s27
   10fb8:	vstr	s24, [r4, #16]
   10fbc:	vcvt.s32.f32	s13, s13
   10fc0:	vstr	s27, [r4, #28]
   10fc4:	vpop	{d8-d15}
   10fc8:	vcvt.s32.f32	s15, s15
   10fcc:	vstr	s13, [r4, #24]
   10fd0:	vstr	s15, [r4, #4]
   10fd4:	pop	{r4, r5, r6, r7, r8, pc}
   10fd8:	bl	107ec <rintf@plt>
   10fdc:	vmov.f32	s24, s0
   10fe0:	b	10d0c <abort@plt+0x478>
   10fe4:	movw	r1, #6464	; 0x1940
   10fe8:	mov	r0, #1
   10fec:	movt	r1, #1
   10ff0:	vmov.f32	s0, s25
   10ff4:	bl	10a48 <abort@plt+0x1b4>
   10ff8:	b	10ce8 <abort@plt+0x454>
   10ffc:	movw	r1, #6856	; 0x1ac8
   11000:	mov	r0, #17
   11004:	movt	r1, #1
   11008:	vmov.f32	s0, s20
   1100c:	bl	10a48 <abort@plt+0x1b4>
   11010:	ldr	r3, [r6]
   11014:	cmp	r3, #0
   11018:	vmov.f64	d6, #96	; 0x3f000000  0.5
   1101c:	vcvt.f64.f32	d9, s18
   11020:	vcvt.f64.f32	d7, s20
   11024:	vnmls.f64	d7, d9, d6
   11028:	vcvt.f32.f64	s18, d7
   1102c:	beq	10f64 <abort@plt+0x6d0>
   11030:	movw	r1, #6876	; 0x1adc
   11034:	mov	r0, #18
   11038:	movt	r1, #1
   1103c:	vmov.f32	s0, s18
   11040:	bl	10a48 <abort@plt+0x1b4>
   11044:	ldr	r3, [r6]
   11048:	cmp	r3, #0
   1104c:	vmov.f32	s15, #112	; 0x3f800000  1.0
   11050:	vadd.f32	s26, s26, s15
   11054:	beq	10f6c <abort@plt+0x6d8>
   11058:	movw	r1, #6904	; 0x1af8
   1105c:	mov	r0, #36	; 0x24
   11060:	movt	r1, #1
   11064:	vmov.f32	s0, s26
   11068:	bl	10a48 <abort@plt+0x1b4>
   1106c:	b	10f6c <abort@plt+0x6d8>
   11070:	movw	r1, #6792	; 0x1a88
   11074:	mov	r0, #19
   11078:	movt	r1, #1
   1107c:	vmov.f32	s0, s18
   11080:	bl	10a48 <abort@plt+0x1b4>
   11084:	ldr	r3, [r6]
   11088:	cmp	r3, #0
   1108c:	vadd.f32	s16, s19, s18
   11090:	beq	10f0c <abort@plt+0x678>
   11094:	movw	r1, #6812	; 0x1a9c
   11098:	mov	r0, #20
   1109c:	movt	r1, #1
   110a0:	vmov.f32	s0, s16
   110a4:	bl	10a48 <abort@plt+0x1b4>
   110a8:	ldr	r3, [r6]
   110ac:	cmp	r3, #0
   110b0:	vdiv.f32	s17, s16, s29
   110b4:	beq	10f10 <abort@plt+0x67c>
   110b8:	movw	r1, #6828	; 0x1aac
   110bc:	mov	r0, #21
   110c0:	movt	r1, #1
   110c4:	vmov.f32	s0, s17
   110c8:	bl	10a48 <abort@plt+0x1b4>
   110cc:	ldr	r3, [r6]
   110d0:	vldr	s15, [pc, #100]	; 1113c <abort@plt+0x8a8>
   110d4:	cmp	r3, #0
   110d8:	vdiv.f32	s29, s15, s29
   110dc:	beq	10f18 <abort@plt+0x684>
   110e0:	movw	r1, #6844	; 0x1abc
   110e4:	mov	r0, #22
   110e8:	movt	r1, #1
   110ec:	vmov.f32	s0, s29
   110f0:	bl	10a48 <abort@plt+0x1b4>
   110f4:	b	10f18 <abort@plt+0x684>
   110f8:			; <UNDEFINED> instruction: 0x01a36e2f
   110fc:	svccc	0x004205bc
   11100:	andeq	r0, r0, r0
   11104:	smlawbmi	lr, r0, r4, r8
   11108:	andeq	r0, r0, r0
   1110c:	addmi	r3, r1, r0
   11110:	andeq	r0, r0, r0
   11114:	rsbsmi	ip, r2, r0
   11118:	andeq	r0, r0, r0
   1111c:	addmi	r4, pc, r0
   11120:	andeq	r0, r0, r0
   11124:	subsmi	r0, r9, r0
   11128:	andeq	r0, r0, r0
   1112c:	svccc	0x00b00000
   11130:			; <UNDEFINED> instruction: 0x47ae147b
   11134:	svccc	0x00b47ae1
   11138:	andeq	r0, r0, r0
   1113c:	ldrbtmi	r0, [sl], #-0
   11140:	movw	r1, #6724	; 0x1a44
   11144:	mov	r0, #16
   11148:	movt	r1, #1
   1114c:	vmov.f32	s0, s20
   11150:	bl	10a48 <abort@plt+0x1b4>
   11154:	ldr	r3, [r6]
   11158:	cmp	r3, #0
   1115c:	vadd.f32	s19, s18, s25
   11160:	vadd.f32	s19, s20, s19
   11164:	beq	10ea8 <abort@plt+0x614>
   11168:	movw	r1, #6748	; 0x1a5c
   1116c:	mov	r0, #17
   11170:	movt	r1, #1
   11174:	vmov.f32	s0, s19
   11178:	bl	10a48 <abort@plt+0x1b4>
   1117c:	vldr	d6, [pc, #740]	; 11468 <abort@plt+0xbd4>
   11180:	vldr	d7, [pc, #744]	; 11470 <abort@plt+0xbdc>
   11184:	ldr	r3, [r6]
   11188:	vmul.f64	d8, d8, d6
   1118c:	cmp	r3, #0
   11190:	vdiv.f64	d8, d8, d7
   11194:	vmov.f64	d6, #62	; 0x41f00000  30.0
   11198:	vsub.f64	d6, d6, d8
   1119c:	vcvt.f32.f64	s16, d6
   111a0:	beq	10ec4 <abort@plt+0x630>
   111a4:	movw	r1, #6772	; 0x1a74
   111a8:	mov	r0, #18
   111ac:	movt	r1, #1
   111b0:	vmov.f32	s0, s16
   111b4:	bl	10a48 <abort@plt+0x1b4>
   111b8:	b	10ec4 <abort@plt+0x630>
   111bc:	vcvt.f64.f32	d0, s25
   111c0:	vldr	d6, [pc, #688]	; 11478 <abort@plt+0xbe4>
   111c4:	vldr	d7, [pc, #692]	; 11480 <abort@plt+0xbec>
   111c8:	vmul.f64	d0, d0, d6
   111cc:	vdiv.f64	d0, d0, d7
   111d0:	vmov.f64	d6, #64	; 0x3e000000  0.125
   111d4:	vmul.f64	d0, d0, d6
   111d8:	bl	10864 <rint@plt>
   111dc:	vmov.f64	d7, #32	; 0x41000000  8.0
   111e0:	vmul.f64	d0, d0, d7
   111e4:	vcvt.f32.f64	s20, d0
   111e8:	b	10e8c <abort@plt+0x5f8>
   111ec:	movw	r1, #6700	; 0x1a2c
   111f0:	mov	r0, #15
   111f4:	movt	r1, #1
   111f8:	vmov.f32	s0, s18
   111fc:	bl	10a48 <abort@plt+0x1b4>
   11200:	b	10e80 <abort@plt+0x5ec>
   11204:	vcvt.f64.f32	d0, s25
   11208:	vldr	d6, [pc, #616]	; 11478 <abort@plt+0xbe4>
   1120c:	vldr	d7, [pc, #620]	; 11480 <abort@plt+0xbec>
   11210:	vmul.f64	d0, d0, d6
   11214:	vdiv.f64	d0, d0, d7
   11218:	vmov.f64	d7, #64	; 0x3e000000  0.125
   1121c:	vmul.f64	d0, d0, d7
   11220:	bl	10864 <rint@plt>
   11224:	vmov.f64	d7, #32	; 0x41000000  8.0
   11228:	vmul.f64	d0, d0, d7
   1122c:	vcvt.f32.f64	s18, d0
   11230:	b	10e74 <abort@plt+0x5e0>
   11234:	vmov.f32	s0, s18
   11238:	movw	r1, #6684	; 0x1a1c
   1123c:	mov	r0, #14
   11240:	movt	r1, #1
   11244:	bl	10a48 <abort@plt+0x1b4>
   11248:	b	10e68 <abort@plt+0x5d4>
   1124c:	vmov.f32	s0, s20
   11250:	movw	r1, #6592	; 0x19c0
   11254:	mov	r0, #8
   11258:	movt	r1, #1
   1125c:	bl	10a48 <abort@plt+0x1b4>
   11260:	ldr	r3, [r8]
   11264:	vmov.f32	s0, #8	; 0x40400000  3.0
   11268:	cmp	r3, #0
   1126c:	vsub.f32	s0, s20, s0
   11270:	beq	10df0 <abort@plt+0x55c>
   11274:	movw	r1, #6604	; 0x19cc
   11278:	mov	r0, #9
   1127c:	movt	r1, #1
   11280:	bl	10a48 <abort@plt+0x1b4>
   11284:	ldr	r3, [r8]
   11288:	cmp	r3, #0
   1128c:	vadd.f32	s27, s24, s18
   11290:	vadd.f32	s27, s19, s27
   11294:	vadd.f32	s27, s27, s20
   11298:	vmov.f32	s15, #112	; 0x3f800000  1.0
   1129c:	vadd.f32	s27, s26, s27
   112a0:	vadd.f32	s27, s27, s15
   112a4:	beq	10e08 <abort@plt+0x574>
   112a8:	movw	r1, #6620	; 0x19dc
   112ac:	mov	r0, #10
   112b0:	movt	r1, #1
   112b4:	vldr	d10, [pc, #460]	; 11488 <abort@plt+0xbf4>
   112b8:	vmov.f64	d11, #112	; 0x3f800000  1.0
   112bc:	vmov.f32	s0, s27
   112c0:	bl	10a48 <abort@plt+0x1b4>
   112c4:	ldr	r3, [r8]
   112c8:	cmp	r3, #0
   112cc:	vdiv.f64	d8, d11, d8
   112d0:	vcvt.f64.f32	d9, s27
   112d4:	vdiv.f64	d8, d8, d9
   112d8:	vmul.f64	d8, d8, d10
   112dc:	vcvt.f32.f64	s16, d8
   112e0:	beq	10e24 <abort@plt+0x590>
   112e4:	movw	r1, #6636	; 0x19ec
   112e8:	mov	r0, #11
   112ec:	movt	r1, #1
   112f0:	vmov.f32	s0, s16
   112f4:	bl	10a48 <abort@plt+0x1b4>
   112f8:	ldr	r3, [r8]
   112fc:	cmp	r3, #0
   11300:	vdiv.f32	s16, s31, s16
   11304:	vdiv.f32	s29, s30, s16
   11308:	beq	10e2c <abort@plt+0x598>
   1130c:	movw	r1, #6656	; 0x1a00
   11310:	mov	r0, #12
   11314:	movt	r1, #1
   11318:	vmov.f32	s0, s29
   1131c:	bl	10a48 <abort@plt+0x1b4>
   11320:	ldr	r3, [r8]
   11324:	cmp	r3, #0
   11328:	vcvt.f64.f32	d8, s29
   1132c:	vdiv.f64	d11, d11, d8
   11330:	vdiv.f64	d9, d11, d9
   11334:	vmul.f64	d10, d9, d10
   11338:	vcvt.f32.f64	s18, d10
   1133c:	beq	10e4c <abort@plt+0x5b8>
   11340:	movw	r1, #6668	; 0x1a0c
   11344:	mov	r0, #13
   11348:	movt	r1, #1
   1134c:	vmov.f32	s0, s18
   11350:	bl	10a48 <abort@plt+0x1b4>
   11354:	ldr	r3, [r8]
   11358:	b	10e4c <abort@plt+0x5b8>
   1135c:	movw	r1, #6564	; 0x19a4
   11360:	mov	r0, #6
   11364:	movt	r1, #1
   11368:	vmov.f32	s0, s26
   1136c:	bl	10a48 <abort@plt+0x1b4>
   11370:	vldr	d4, [pc, #280]	; 11490 <abort@plt+0xbfc>
   11374:	vldr	d6, [pc, #268]	; 11488 <abort@plt+0xbf4>
   11378:	ldr	r3, [r5]
   1137c:	vmov.f64	d5, #112	; 0x3f800000  1.0
   11380:	cmp	r3, #0
   11384:	vcvt.f64.f32	d7, s31
   11388:	vdiv.f64	d7, d5, d7
   1138c:	vadd.f32	s10, s18, s18
   11390:	vmov.f32	s11, #112	; 0x3f800000  1.0
   11394:	vadd.f32	s10, s24, s10
   11398:	vadd.f32	s10, s10, s11
   1139c:	vadd.f32	s10, s26, s10
   113a0:	vsub.f64	d7, d7, d4
   113a4:	vcvt.f64.f32	d5, s10
   113a8:	vdiv.f64	d7, d7, d5
   113ac:	vmul.f64	d7, d7, d6
   113b0:	vcvt.f32.f64	s30, d7
   113b4:	beq	10dc8 <abort@plt+0x534>
   113b8:	movw	r1, #6576	; 0x19b0
   113bc:	mov	r0, #7
   113c0:	movt	r1, #1
   113c4:	vmov.f32	s0, s30
   113c8:	bl	10a48 <abort@plt+0x1b4>
   113cc:	b	10dc8 <abort@plt+0x534>
   113d0:	movw	r1, #6540	; 0x198c
   113d4:	mov	r0, #5
   113d8:	movt	r1, #1
   113dc:	vmov.f32	s0, s19
   113e0:	bl	10a48 <abort@plt+0x1b4>
   113e4:	ldr	r3, [r8]
   113e8:	b	10d74 <abort@plt+0x4e0>
   113ec:	vcvt.f64.f32	d0, s24
   113f0:	vldr	d7, [pc, #160]	; 11498 <abort@plt+0xc04>
   113f4:	vmul.f64	d0, d0, d7
   113f8:	bl	10864 <rint@plt>
   113fc:	vcvt.f32.f64	s19, d0
   11400:	b	10d60 <abort@plt+0x4cc>
   11404:	movw	r1, #6516	; 0x1974
   11408:	mov	r0, #4
   1140c:	movt	r1, #1
   11410:	vmov.f32	s0, s18
   11414:	bl	10a48 <abort@plt+0x1b4>
   11418:	b	10d54 <abort@plt+0x4c0>
   1141c:	vcvt.f64.f32	d0, s24
   11420:	vldr	d7, [pc, #112]	; 11498 <abort@plt+0xc04>
   11424:	vmul.f64	d0, d0, d7
   11428:	bl	10864 <rint@plt>
   1142c:	vcvt.f32.f64	s18, d0
   11430:	b	10d48 <abort@plt+0x4b4>
   11434:	movw	r1, #6496	; 0x1960
   11438:	mov	r0, #3
   1143c:	movt	r1, #1
   11440:	vmov.f32	s0, s31
   11444:	bl	10a48 <abort@plt+0x1b4>
   11448:	b	10d3c <abort@plt+0x4a8>
   1144c:	movw	r1, #6480	; 0x1950
   11450:	mov	r0, #2
   11454:	movt	r1, #1
   11458:	vmov.f32	s0, s24
   1145c:	bl	10a48 <abort@plt+0x1b4>
   11460:	ldr	r3, [r8]
   11464:	b	10d20 <abort@plt+0x48c>
   11468:	andeq	r0, r0, r0
   1146c:	rsbsmi	ip, r2, r0
   11470:	andeq	r0, r0, r0
   11474:	addmi	r4, pc, r0
   11478:	stclgt	12, cr12, [ip], {205}	; 0xcd
   1147c:	svccc	0x00fccccc
   11480:	andeq	r0, r0, r0
   11484:	subsmi	r0, r9, r0
   11488:	andeq	r0, r0, r0
   1148c:	smlawbmi	lr, r0, r4, r8
   11490:			; <UNDEFINED> instruction: 0x01a36e2f
   11494:	svccc	0x004205bc
   11498:	stclhi	15, cr13, [pc, #-240]	; 113b0 <abort@plt+0xb1c>
   1149c:	svccc	0x00926e97
   114a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114a4:	sub	sp, sp, #12
   114a8:	mov	r8, r0
   114ac:	mov	r0, #1
   114b0:	str	r1, [sp, #4]
   114b4:	mov	r1, #20
   114b8:	bl	107bc <calloc@plt>
   114bc:	cmp	r8, #3
   114c0:	mov	fp, r0
   114c4:	ble	1167c <abort@plt+0xde8>
   114c8:	ldr	r3, [sp, #4]
   114cc:	mov	r1, #0
   114d0:	mov	r2, #10
   114d4:	ldr	r0, [r3, #4]
   114d8:	bl	107d4 <strtol@plt>
   114dc:	ldr	r3, [sp, #4]
   114e0:	mov	r1, #0
   114e4:	mov	r2, #10
   114e8:	str	r0, [fp]
   114ec:	ldr	r0, [r3, #8]
   114f0:	bl	107d4 <strtol@plt>
   114f4:	ldr	r3, [sp, #4]
   114f8:	mov	r1, #0
   114fc:	str	r0, [fp, #4]
   11500:	ldr	r0, [r3, #12]
   11504:	bl	10858 <strtod@plt>
   11508:	cmp	r8, #4
   1150c:	vcvt.f32.f64	s0, d0
   11510:	vstr	s0, [fp, #16]
   11514:	beq	11568 <abort@plt+0xcd4>
   11518:	ldr	r3, [sp, #4]
   1151c:	movw	sl, #8296	; 0x2068
   11520:	movt	sl, #2
   11524:	mov	r4, #4
   11528:	add	r6, r3, #12
   1152c:	mov	r9, #1
   11530:	ldr	r5, [r6, #4]!
   11534:	ldrb	r3, [r5]
   11538:	cmp	r3, #45	; 0x2d
   1153c:	beq	115a0 <abort@plt+0xd0c>
   11540:	movw	r1, #7488	; 0x1d40
   11544:	mov	r0, r5
   11548:	movt	r1, #1
   1154c:	bl	107c8 <strcmp@plt>
   11550:	cmp	r0, #0
   11554:	bne	115fc <abort@plt+0xd68>
   11558:	str	r9, [sl]
   1155c:	add	r4, r4, #1
   11560:	cmp	r4, r8
   11564:	bne	11530 <abort@plt+0xc9c>
   11568:	ldr	r3, [fp, #12]
   1156c:	cmp	r3, #0
   11570:	bne	11594 <abort@plt+0xd00>
   11574:	ldr	r3, [fp, #8]
   11578:	cmp	r3, #0
   1157c:	bne	11594 <abort@plt+0xd00>
   11580:	mov	r3, #1
   11584:	mov	r0, fp
   11588:	str	r3, [fp, #8]
   1158c:	add	sp, sp, #12
   11590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11594:	mov	r0, fp
   11598:	add	sp, sp, #12
   1159c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115a0:	ldrb	r7, [r5, #1]
   115a4:	cmp	r7, #118	; 0x76
   115a8:	beq	115ec <abort@plt+0xd58>
   115ac:	movw	r1, #7488	; 0x1d40
   115b0:	mov	r0, r5
   115b4:	movt	r1, #1
   115b8:	bl	107c8 <strcmp@plt>
   115bc:	cmp	r0, #0
   115c0:	beq	11558 <abort@plt+0xcc4>
   115c4:	cmp	r7, #102	; 0x66
   115c8:	beq	11634 <abort@plt+0xda0>
   115cc:	movw	r1, #6932	; 0x1b14
   115d0:	mov	r0, r5
   115d4:	movt	r1, #1
   115d8:	bl	107c8 <strcmp@plt>
   115dc:	cmp	r0, #0
   115e0:	bne	11648 <abort@plt+0xdb4>
   115e4:	str	r9, [fp, #12]
   115e8:	b	1155c <abort@plt+0xcc8>
   115ec:	ldrb	r3, [r5, #2]
   115f0:	cmp	r3, #0
   115f4:	beq	11558 <abort@plt+0xcc4>
   115f8:	b	115ac <abort@plt+0xd18>
   115fc:	movw	r1, #6932	; 0x1b14
   11600:	mov	r0, r5
   11604:	movt	r1, #1
   11608:	bl	107c8 <strcmp@plt>
   1160c:	cmp	r0, #0
   11610:	beq	115e4 <abort@plt+0xd50>
   11614:	movw	r1, #6944	; 0x1b20
   11618:	mov	r0, r5
   1161c:	movt	r1, #1
   11620:	bl	107c8 <strcmp@plt>
   11624:	cmp	r0, #0
   11628:	bne	11664 <abort@plt+0xdd0>
   1162c:	str	r9, [fp, #8]
   11630:	b	1155c <abort@plt+0xcc8>
   11634:	ldrb	r3, [r5, #2]
   11638:	cmp	r3, #0
   1163c:	bne	115cc <abort@plt+0xd38>
   11640:	str	r9, [fp, #12]
   11644:	b	1155c <abort@plt+0xcc8>
   11648:	cmp	r7, #120	; 0x78
   1164c:	bne	11614 <abort@plt+0xd80>
   11650:	ldrb	r3, [r5, #2]
   11654:	cmp	r3, #0
   11658:	bne	11614 <abort@plt+0xd80>
   1165c:	str	r9, [fp, #8]
   11660:	b	1155c <abort@plt+0xcc8>
   11664:	mov	r0, r5
   11668:	movw	r1, #6956	; 0x1b2c
   1166c:	movt	r1, #1
   11670:	bl	107c8 <strcmp@plt>
   11674:	cmp	r0, #0
   11678:	beq	1162c <abort@plt+0xd98>
   1167c:	movw	r4, #8288	; 0x2060
   11680:	movt	r4, #2
   11684:	mov	r0, #10
   11688:	ldr	r1, [r4]
   1168c:	bl	10888 <fputc@plt>
   11690:	ldr	r2, [sp, #4]
   11694:	ldr	r0, [r4]
   11698:	mov	r1, #1
   1169c:	ldr	r3, [r2]
   116a0:	movw	r2, #6968	; 0x1b38
   116a4:	movt	r2, #1
   116a8:	bl	10870 <__fprintf_chk@plt>
   116ac:	ldr	r1, [r4]
   116b0:	mov	r0, #10
   116b4:	bl	10888 <fputc@plt>
   116b8:	ldr	r3, [r4]
   116bc:	mov	r1, #1
   116c0:	mov	r2, #61	; 0x3d
   116c4:	movw	r0, #7036	; 0x1b7c
   116c8:	movt	r0, #1
   116cc:	bl	107f8 <fwrite@plt>
   116d0:	ldr	r3, [r4]
   116d4:	mov	r1, #1
   116d8:	mov	r2, #59	; 0x3b
   116dc:	movw	r0, #7100	; 0x1bbc
   116e0:	movt	r0, #1
   116e4:	bl	107f8 <fwrite@plt>
   116e8:	ldr	r3, [r4]
   116ec:	mov	r1, #1
   116f0:	mov	r2, #52	; 0x34
   116f4:	movw	r0, #7160	; 0x1bf8
   116f8:	movt	r0, #1
   116fc:	bl	107f8 <fwrite@plt>
   11700:	ldr	r3, [r4]
   11704:	mov	r1, #1
   11708:	mov	r2, #79	; 0x4f
   1170c:	movw	r0, #7216	; 0x1c30
   11710:	movt	r0, #1
   11714:	bl	107f8 <fwrite@plt>
   11718:	ldr	r3, [r4]
   1171c:	mov	r1, #1
   11720:	mov	r2, #58	; 0x3a
   11724:	movw	r0, #7296	; 0x1c80
   11728:	movt	r0, #1
   1172c:	bl	107f8 <fwrite@plt>
   11730:	ldr	r3, [r4]
   11734:	mov	r2, #129	; 0x81
   11738:	mov	r1, #1
   1173c:	movw	r0, #7356	; 0x1cbc
   11740:	movt	r0, #1
   11744:	bl	107f8 <fwrite@plt>
   11748:	ldr	r1, [r4]
   1174c:	mov	r0, #10
   11750:	bl	10888 <fputc@plt>
   11754:	mov	r0, fp
   11758:	bl	107e0 <free@plt>
   1175c:	mov	r0, #0
   11760:	add	sp, sp, #12
   11764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11768:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1176c:	mov	r7, r0
   11770:	ldr	r6, [pc, #76]	; 117c4 <abort@plt+0xf30>
   11774:	mov	r8, r1
   11778:	ldr	r5, [pc, #72]	; 117c8 <abort@plt+0xf34>
   1177c:	mov	r9, r2
   11780:	add	r6, pc, r6
   11784:	bl	1079c <_init@@Base>
   11788:	add	r5, pc, r5
   1178c:	rsb	r6, r5, r6
   11790:	asrs	r6, r6, #2
   11794:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11798:	sub	r5, r5, #4
   1179c:	mov	r4, #0
   117a0:	add	r4, r4, #1
   117a4:	ldr	r3, [r5, #4]!
   117a8:	mov	r0, r7
   117ac:	mov	r1, r8
   117b0:	mov	r2, r9
   117b4:	blx	r3
   117b8:	cmp	r4, r6
   117bc:	bne	117a0 <abort@plt+0xf0c>
   117c0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   117c4:	andeq	r0, r1, r8, ror #14
   117c8:	andeq	r0, r1, ip, asr r7
   117cc:	bx	lr

Disassembly of section .fini:

000117d0 <_fini@@Base>:
   117d0:	push	{r3, lr}
   117d4:	pop	{r3, pc}
