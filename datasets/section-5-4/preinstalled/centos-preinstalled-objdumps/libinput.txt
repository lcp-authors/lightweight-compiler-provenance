
centos-preinstalled/libinput:     file format elf32-littlearm


Disassembly of section .init:

00011628 <_init@@Base>:
   11628:	push	{r3, lr}
   1162c:	bl	11ab0 <libinput_log_set_handler@plt+0x12c>
   11630:	pop	{r3, pc}

Disassembly of section .plt:

00011634 <strerror@plt-0x14>:
   11634:	push	{lr}		; (str lr, [sp, #-4]!)
   11638:	ldr	lr, [pc, #4]	; 11644 <_init@@Base+0x1c>
   1163c:	add	lr, pc, lr
   11640:	ldr	pc, [lr, #8]!
   11644:			; <UNDEFINED> instruction: 0x000129bc

00011648 <strerror@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #73728	; 0x12000
   11650:	ldr	pc, [ip, #2492]!	; 0x9bc

00011654 <abort@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #73728	; 0x12000
   1165c:	ldr	pc, [ip, #2484]!	; 0x9b4

00011660 <libinput_udev_assign_seat@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #73728	; 0x12000
   11668:	ldr	pc, [ip, #2476]!	; 0x9ac

0001166c <__xstat@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #73728	; 0x12000
   11674:	ldr	pc, [ip, #2468]!	; 0x9a4

00011678 <__libc_start_main@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #73728	; 0x12000
   11680:	ldr	pc, [ip, #2460]!	; 0x99c

00011684 <udev_device_get_property_value@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #73728	; 0x12000
   1168c:	ldr	pc, [ip, #2452]!	; 0x994

00011690 <__gmon_start__@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #73728	; 0x12000
   11698:	ldr	pc, [ip, #2444]!	; 0x98c

0001169c <getenv@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #73728	; 0x12000
   116a4:	ldr	pc, [ip, #2436]!	; 0x984

000116a8 <__printf_chk@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #73728	; 0x12000
   116b0:	ldr	pc, [ip, #2428]!	; 0x97c

000116b4 <udev_device_get_sysname@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #73728	; 0x12000
   116bc:	ldr	pc, [ip, #2420]!	; 0x974

000116c0 <strtod@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #73728	; 0x12000
   116c8:	ldr	pc, [ip, #2412]!	; 0x96c

000116cc <udev_enumerate_scan_devices@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #73728	; 0x12000
   116d4:	ldr	pc, [ip, #2404]!	; 0x964

000116d8 <libinput_device_config_scroll_set_natural_scroll_enabled@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #73728	; 0x12000
   116e0:	ldr	pc, [ip, #2396]!	; 0x95c

000116e4 <memset@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #73728	; 0x12000
   116ec:	ldr	pc, [ip, #2388]!	; 0x954

000116f0 <libevdev_event_code_from_name@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #73728	; 0x12000
   116f8:	ldr	pc, [ip, #2380]!	; 0x94c

000116fc <libinput_device_config_tap_set_drag_enabled@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #73728	; 0x12000
   11704:	ldr	pc, [ip, #2372]!	; 0x944

00011708 <execvp@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #73728	; 0x12000
   11710:	ldr	pc, [ip, #2364]!	; 0x93c

00011714 <udev_list_entry_get_next@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #73728	; 0x12000
   1171c:	ldr	pc, [ip, #2356]!	; 0x934

00011720 <__assert_fail@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #73728	; 0x12000
   11728:	ldr	pc, [ip, #2348]!	; 0x92c

0001172c <libinput_path_add_device@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #73728	; 0x12000
   11734:	ldr	pc, [ip, #2340]!	; 0x924

00011738 <libinput_device_config_tap_set_drag_lock_enabled@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #73728	; 0x12000
   11740:	ldr	pc, [ip, #2332]!	; 0x91c

00011744 <libinput_device_config_scroll_set_method@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #73728	; 0x12000
   1174c:	ldr	pc, [ip, #2324]!	; 0x914

00011750 <udev_new@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #73728	; 0x12000
   11758:	ldr	pc, [ip, #2316]!	; 0x90c

0001175c <libinput_device_config_accel_set_speed@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #73728	; 0x12000
   11764:	ldr	pc, [ip, #2308]!	; 0x904

00011768 <free@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #73728	; 0x12000
   11770:	ldr	pc, [ip, #2300]!	; 0x8fc

00011774 <getopt_long@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #73728	; 0x12000
   1177c:	ldr	pc, [ip, #2292]!	; 0x8f4

00011780 <libinput_path_create_context@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #73728	; 0x12000
   11788:	ldr	pc, [ip, #2284]!	; 0x8ec

0001178c <libinput_log_set_priority@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #73728	; 0x12000
   11794:	ldr	pc, [ip, #2276]!	; 0x8e4

00011798 <libinput_device_config_left_handed_set@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #73728	; 0x12000
   117a0:	ldr	pc, [ip, #2268]!	; 0x8dc

000117a4 <ioctl@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #73728	; 0x12000
   117ac:	ldr	pc, [ip, #2260]!	; 0x8d4

000117b0 <isatty@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #73728	; 0x12000
   117b8:	ldr	pc, [ip, #2252]!	; 0x8cc

000117bc <libinput_device_config_accel_set_profile@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #73728	; 0x12000
   117c4:	ldr	pc, [ip, #2244]!	; 0x8c4

000117c8 <libinput_device_config_accel_is_available@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #73728	; 0x12000
   117d0:	ldr	pc, [ip, #2236]!	; 0x8bc

000117d4 <udev_enumerate_add_match_subsystem@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #73728	; 0x12000
   117dc:	ldr	pc, [ip, #2228]!	; 0x8b4

000117e0 <udev_device_new_from_syspath@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #73728	; 0x12000
   117e8:	ldr	pc, [ip, #2220]!	; 0x8ac

000117ec <udev_device_unref@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #73728	; 0x12000
   117f4:	ldr	pc, [ip, #2212]!	; 0x8a4

000117f8 <libinput_device_config_tap_set_enabled@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #73728	; 0x12000
   11800:	ldr	pc, [ip, #2204]!	; 0x89c

00011804 <__vfprintf_chk@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #73728	; 0x12000
   1180c:	ldr	pc, [ip, #2196]!	; 0x894

00011810 <libinput_device_config_tap_set_button_map@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #73728	; 0x12000
   11818:	ldr	pc, [ip, #2188]!	; 0x88c

0001181c <libinput_udev_create_context@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #73728	; 0x12000
   11824:	ldr	pc, [ip, #2180]!	; 0x884

00011828 <__snprintf_chk@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #73728	; 0x12000
   11830:	ldr	pc, [ip, #2172]!	; 0x87c

00011834 <udev_device_get_devnode@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #73728	; 0x12000
   1183c:	ldr	pc, [ip, #2164]!	; 0x874

00011840 <udev_unref@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #73728	; 0x12000
   11848:	ldr	pc, [ip, #2156]!	; 0x86c

0001184c <close@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #73728	; 0x12000
   11854:	ldr	pc, [ip, #2148]!	; 0x864

00011858 <udev_enumerate_get_list_entry@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #73728	; 0x12000
   11860:	ldr	pc, [ip, #2140]!	; 0x85c

00011864 <fwrite@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #73728	; 0x12000
   1186c:	ldr	pc, [ip, #2132]!	; 0x854

00011870 <libinput_device_config_dwt_set_enabled@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #73728	; 0x12000
   11878:	ldr	pc, [ip, #2124]!	; 0x84c

0001187c <libinput_device_config_send_events_set_mode@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #73728	; 0x12000
   11884:	ldr	pc, [ip, #2116]!	; 0x844

00011888 <libinput_device_get_name@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #73728	; 0x12000
   11890:	ldr	pc, [ip, #2108]!	; 0x83c

00011894 <libinput_device_config_send_events_get_modes@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #73728	; 0x12000
   1189c:	ldr	pc, [ip, #2100]!	; 0x834

000118a0 <udev_enumerate_new@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #73728	; 0x12000
   118a8:	ldr	pc, [ip, #2092]!	; 0x82c

000118ac <libinput_device_config_middle_emulation_set_enabled@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #73728	; 0x12000
   118b4:	ldr	pc, [ip, #2084]!	; 0x824

000118b8 <__stack_chk_fail@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #73728	; 0x12000
   118c0:	ldr	pc, [ip, #2076]!	; 0x81c

000118c4 <__fprintf_chk@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #73728	; 0x12000
   118cc:	ldr	pc, [ip, #2068]!	; 0x814

000118d0 <udev_device_new_from_devnum@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #73728	; 0x12000
   118d8:	ldr	pc, [ip, #2060]!	; 0x80c

000118dc <libinput_device_config_scroll_set_button@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #73728	; 0x12000
   118e4:	ldr	pc, [ip, #2052]!	; 0x804

000118e8 <fnmatch@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #73728	; 0x12000
   118f0:	ldr	pc, [ip, #2044]!	; 0x7fc

000118f4 <udev_list_entry_get_name@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #73728	; 0x12000
   118fc:	ldr	pc, [ip, #2036]!	; 0x7f4

00011900 <puts@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #73728	; 0x12000
   11908:	ldr	pc, [ip, #2028]!	; 0x7ec

0001190c <libinput_device_config_click_set_method@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #73728	; 0x12000
   11914:	ldr	pc, [ip, #2020]!	; 0x7e4

00011918 <libinput_unref@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #73728	; 0x12000
   11920:	ldr	pc, [ip, #2012]!	; 0x7dc

00011924 <snprintf@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #73728	; 0x12000
   1192c:	ldr	pc, [ip, #2004]!	; 0x7d4

00011930 <strncmp@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #73728	; 0x12000
   11938:	ldr	pc, [ip, #1996]!	; 0x7cc

0001193c <__strdup@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #73728	; 0x12000
   11944:	ldr	pc, [ip, #1988]!	; 0x7c4

00011948 <udev_enumerate_unref@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #73728	; 0x12000
   11950:	ldr	pc, [ip, #1980]!	; 0x7bc

00011954 <setenv@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #73728	; 0x12000
   1195c:	ldr	pc, [ip, #1972]!	; 0x7b4

00011960 <strcmp@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #73728	; 0x12000
   11968:	ldr	pc, [ip, #1964]!	; 0x7ac

0001196c <__errno_location@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #73728	; 0x12000
   11974:	ldr	pc, [ip, #1956]!	; 0x7a4

00011978 <__open_2@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #73728	; 0x12000
   11980:	ldr	pc, [ip, #1948]!	; 0x79c

00011984 <libinput_log_set_handler@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #73728	; 0x12000
   1198c:	ldr	pc, [ip, #1940]!	; 0x794

Disassembly of section .text:

00011990 <.text>:
   11990:	push	{r4, r5, r6, r7, lr}
   11994:	movw	r4, #16760	; 0x4178
   11998:	movt	r4, #2
   1199c:	sub	sp, sp, #20
   119a0:	add	r3, sp, #16
   119a4:	mov	r5, #0
   119a8:	ldr	ip, [r4]
   119ac:	movw	r2, #10828	; 0x2a4c
   119b0:	str	r5, [r3, #-8]!
   119b4:	movt	r2, #1
   119b8:	str	r3, [sp]
   119bc:	movw	r3, #16696	; 0x4138
   119c0:	movt	r3, #2
   119c4:	str	ip, [sp, #12]
   119c8:	mov	r6, r0
   119cc:	mov	r7, r1
   119d0:	bl	11774 <getopt_long@plt>
   119d4:	cmn	r0, #1
   119d8:	beq	11a30 <libinput_log_set_handler@plt+0xac>
   119dc:	cmp	r0, #2
   119e0:	beq	11a1c <libinput_log_set_handler@plt+0x98>
   119e4:	cmp	r0, #104	; 0x68
   119e8:	beq	11a5c <libinput_log_set_handler@plt+0xd8>
   119ec:	cmp	r0, #1
   119f0:	beq	11a5c <libinput_log_set_handler@plt+0xd8>
   119f4:	movw	r0, #10832	; 0x2a50
   119f8:	movt	r0, #1
   119fc:	bl	11900 <puts@plt>
   11a00:	mov	r0, #1
   11a04:	ldr	r2, [sp, #12]
   11a08:	ldr	r3, [r4]
   11a0c:	cmp	r2, r3
   11a10:	bne	11a70 <libinput_log_set_handler@plt+0xec>
   11a14:	add	sp, sp, #20
   11a18:	pop	{r4, r5, r6, r7, pc}
   11a1c:	movw	r0, #11276	; 0x2c0c
   11a20:	movt	r0, #1
   11a24:	bl	11900 <puts@plt>
   11a28:	mov	r0, r5
   11a2c:	b	11a04 <libinput_log_set_handler@plt+0x80>
   11a30:	movw	r3, #16752	; 0x4170
   11a34:	movt	r3, #2
   11a38:	ldr	r2, [r3]
   11a3c:	cmp	r6, r2
   11a40:	ble	119f4 <libinput_log_set_handler@plt+0x70>
   11a44:	rsb	r1, r2, r6
   11a48:	movw	r0, #11284	; 0x2c14
   11a4c:	add	r2, r7, r2, lsl #2
   11a50:	movt	r0, #1
   11a54:	bl	12824 <libinput_log_set_handler@plt+0xea0>
   11a58:	b	11a04 <libinput_log_set_handler@plt+0x80>
   11a5c:	movw	r0, #10832	; 0x2a50
   11a60:	movt	r0, #1
   11a64:	bl	11900 <puts@plt>
   11a68:	mov	r0, #0
   11a6c:	b	11a04 <libinput_log_set_handler@plt+0x80>
   11a70:	bl	118b8 <__stack_chk_fail@plt>
   11a74:	mov	fp, #0
   11a78:	mov	lr, #0
   11a7c:	pop	{r1}		; (ldr r1, [sp], #4)
   11a80:	mov	r2, sp
   11a84:	push	{r2}		; (str r2, [sp, #-4]!)
   11a88:	push	{r0}		; (str r0, [sp, #-4]!)
   11a8c:	ldr	ip, [pc, #16]	; 11aa4 <libinput_log_set_handler@plt+0x120>
   11a90:	push	{ip}		; (str ip, [sp, #-4]!)
   11a94:	ldr	r0, [pc, #12]	; 11aa8 <libinput_log_set_handler@plt+0x124>
   11a98:	ldr	r3, [pc, #12]	; 11aac <libinput_log_set_handler@plt+0x128>
   11a9c:	bl	11678 <__libc_start_main@plt>
   11aa0:	bl	11654 <abort@plt>
   11aa4:	andeq	r2, r1, r8, lsr sl
   11aa8:	muleq	r1, r0, r9
   11aac:	ldrdeq	r2, [r1], -r4
   11ab0:	ldr	r3, [pc, #20]	; 11acc <libinput_log_set_handler@plt+0x148>
   11ab4:	ldr	r2, [pc, #20]	; 11ad0 <libinput_log_set_handler@plt+0x14c>
   11ab8:	add	r3, pc, r3
   11abc:	ldr	r2, [r3, r2]
   11ac0:	cmp	r2, #0
   11ac4:	bxeq	lr
   11ac8:	b	11690 <__gmon_start__@plt>
   11acc:	andeq	r2, r1, r0, asr #10
   11ad0:	andeq	r0, r0, r4, lsr #2
   11ad4:	push	{r3, lr}
   11ad8:	movw	r0, #16748	; 0x416c
   11adc:	ldr	r3, [pc, #36]	; 11b08 <libinput_log_set_handler@plt+0x184>
   11ae0:	movt	r0, #2
   11ae4:	rsb	r3, r0, r3
   11ae8:	cmp	r3, #6
   11aec:	popls	{r3, pc}
   11af0:	movw	r3, #0
   11af4:	movt	r3, #0
   11af8:	cmp	r3, #0
   11afc:	popeq	{r3, pc}
   11b00:	blx	r3
   11b04:	pop	{r3, pc}
   11b08:	andeq	r4, r2, pc, ror #2
   11b0c:	push	{r3, lr}
   11b10:	movw	r0, #16748	; 0x416c
   11b14:	movw	r3, #16748	; 0x416c
   11b18:	movt	r0, #2
   11b1c:	movt	r3, #2
   11b20:	rsb	r3, r0, r3
   11b24:	asr	r3, r3, #2
   11b28:	add	r3, r3, r3, lsr #31
   11b2c:	asrs	r1, r3, #1
   11b30:	popeq	{r3, pc}
   11b34:	movw	r2, #0
   11b38:	movt	r2, #0
   11b3c:	cmp	r2, #0
   11b40:	popeq	{r3, pc}
   11b44:	blx	r2
   11b48:	pop	{r3, pc}
   11b4c:	push	{r4, lr}
   11b50:	movw	r4, #16764	; 0x417c
   11b54:	movt	r4, #2
   11b58:	ldrb	r3, [r4]
   11b5c:	cmp	r3, #0
   11b60:	popne	{r4, pc}
   11b64:	bl	11ad4 <libinput_log_set_handler@plt+0x150>
   11b68:	mov	r3, #1
   11b6c:	strb	r3, [r4]
   11b70:	pop	{r4, pc}
   11b74:	movw	r0, #16068	; 0x3ec4
   11b78:	movt	r0, #2
   11b7c:	push	{r3, lr}
   11b80:	ldr	r3, [r0]
   11b84:	cmp	r3, #0
   11b88:	beq	11ba0 <libinput_log_set_handler@plt+0x21c>
   11b8c:	movw	r3, #0
   11b90:	movt	r3, #0
   11b94:	cmp	r3, #0
   11b98:	beq	11ba0 <libinput_log_set_handler@plt+0x21c>
   11b9c:	blx	r3
   11ba0:	pop	{r3, lr}
   11ba4:	b	11b0c <libinput_log_set_handler@plt+0x188>
   11ba8:	b	1184c <close@plt>
   11bac:	push	{r4, r5, r6, r7, lr}
   11bb0:	sub	sp, sp, #12
   11bb4:	mov	r6, r2
   11bb8:	mov	r7, r0
   11bbc:	bl	11978 <__open_2@plt>
   11bc0:	ldr	r4, [pc, #184]	; 11c80 <libinput_log_set_handler@plt+0x2fc>
   11bc4:	add	r4, pc, r4
   11bc8:	subs	r5, r0, #0
   11bcc:	blt	11c38 <libinput_log_set_handler@plt+0x2b4>
   11bd0:	ldrb	r2, [r6]
   11bd4:	cmp	r2, #0
   11bd8:	bne	11be8 <libinput_log_set_handler@plt+0x264>
   11bdc:	mov	r0, r5
   11be0:	add	sp, sp, #12
   11be4:	pop	{r4, r5, r6, r7, pc}
   11be8:	movw	r1, #17808	; 0x4590
   11bec:	mov	r2, #1
   11bf0:	movt	r1, #16388	; 0x4004
   11bf4:	bl	117a4 <ioctl@plt>
   11bf8:	cmn	r0, #1
   11bfc:	bne	11bdc <libinput_log_set_handler@plt+0x258>
   11c00:	ldr	r3, [pc, #124]	; 11c84 <libinput_log_set_handler@plt+0x300>
   11c04:	ldr	r3, [r4, r3]
   11c08:	ldr	r4, [r3]
   11c0c:	bl	1196c <__errno_location@plt>
   11c10:	ldr	r0, [r0]
   11c14:	bl	11648 <strerror@plt>
   11c18:	ldr	r2, [pc, #104]	; 11c88 <libinput_log_set_handler@plt+0x304>
   11c1c:	mov	r3, r7
   11c20:	mov	r1, #1
   11c24:	add	r2, pc, r2
   11c28:	str	r0, [sp]
   11c2c:	mov	r0, r4
   11c30:	bl	118c4 <__fprintf_chk@plt>
   11c34:	b	11bdc <libinput_log_set_handler@plt+0x258>
   11c38:	ldr	r3, [pc, #68]	; 11c84 <libinput_log_set_handler@plt+0x300>
   11c3c:	ldr	r3, [r4, r3]
   11c40:	ldr	r5, [r3]
   11c44:	bl	1196c <__errno_location@plt>
   11c48:	mov	r4, r0
   11c4c:	ldr	r0, [r0]
   11c50:	bl	11648 <strerror@plt>
   11c54:	ldr	r2, [pc, #48]	; 11c8c <libinput_log_set_handler@plt+0x308>
   11c58:	mov	r3, r7
   11c5c:	mov	r1, #1
   11c60:	add	r2, pc, r2
   11c64:	str	r0, [sp]
   11c68:	mov	r0, r5
   11c6c:	bl	118c4 <__fprintf_chk@plt>
   11c70:	ldr	r0, [r4]
   11c74:	rsb	r0, r0, #0
   11c78:	add	sp, sp, #12
   11c7c:	pop	{r4, r5, r6, r7, pc}
   11c80:	andeq	r2, r1, r4, lsr r4
   11c84:	andeq	r0, r0, r0, lsr r1
   11c88:	andeq	r1, r0, r0, lsr r0
   11c8c:	ldrdeq	r0, [r0], -ip
   11c90:	ldr	r3, [pc, #168]	; 11d40 <libinput_log_set_handler@plt+0x3bc>
   11c94:	ldr	r2, [pc, #168]	; 11d44 <libinput_log_set_handler@plt+0x3c0>
   11c98:	add	r3, pc, r3
   11c9c:	ldr	r0, [pc, #164]	; 11d48 <libinput_log_set_handler@plt+0x3c4>
   11ca0:	push	{r4, r5, lr}
   11ca4:	sub	sp, sp, #4096	; 0x1000
   11ca8:	ldr	r4, [r3, r2]
   11cac:	sub	sp, sp, #28
   11cb0:	add	r2, sp, #8192	; 0x2000
   11cb4:	add	r0, pc, r0
   11cb8:	ldr	r3, [r4]
   11cbc:	str	r3, [r2, #-4076]	; 0xfffff014
   11cc0:	bl	1169c <getenv@plt>
   11cc4:	cmp	r0, #0
   11cc8:	beq	11d30 <libinput_log_set_handler@plt+0x3ac>
   11ccc:	add	r5, sp, #20
   11cd0:	ldr	r2, [pc, #116]	; 11d4c <libinput_log_set_handler@plt+0x3c8>
   11cd4:	ldr	r3, [pc, #116]	; 11d50 <libinput_log_set_handler@plt+0x3cc>
   11cd8:	mov	r1, #4096	; 0x1000
   11cdc:	add	r2, pc, r2
   11ce0:	str	r0, [sp, #8]
   11ce4:	add	r3, pc, r3
   11ce8:	mov	r0, r5
   11cec:	stm	sp, {r2, r3}
   11cf0:	mov	r3, r1
   11cf4:	mov	r2, #1
   11cf8:	bl	11828 <__snprintf_chk@plt>
   11cfc:	ldr	r0, [pc, #80]	; 11d54 <libinput_log_set_handler@plt+0x3d0>
   11d00:	mov	r2, #1
   11d04:	mov	r1, r5
   11d08:	add	r0, pc, r0
   11d0c:	bl	11954 <setenv@plt>
   11d10:	add	r3, sp, #8192	; 0x2000
   11d14:	ldr	r2, [r3, #-4076]	; 0xfffff014
   11d18:	ldr	r3, [r4]
   11d1c:	cmp	r2, r3
   11d20:	bne	11d3c <libinput_log_set_handler@plt+0x3b8>
   11d24:	add	sp, sp, #4096	; 0x1000
   11d28:	add	sp, sp, #28
   11d2c:	pop	{r4, r5, pc}
   11d30:	ldr	r0, [pc, #32]	; 11d58 <libinput_log_set_handler@plt+0x3d4>
   11d34:	add	r0, pc, r0
   11d38:	b	11ccc <libinput_log_set_handler@plt+0x348>
   11d3c:	bl	118b8 <__stack_chk_fail@plt>
   11d40:	andeq	r2, r1, r0, ror #6
   11d44:	andeq	r0, r0, r8, lsr #2
   11d48:	andeq	r0, r0, r8, asr #31
   11d4c:	andeq	r0, r0, r8, lsr #31
   11d50:	andeq	r0, r0, r8, lsr #31
   11d54:	andeq	r0, r0, r4, ror pc
   11d58:	andeq	r1, r0, ip, lsl #3
   11d5c:	push	{r4, r5, r6, lr}
   11d60:	mov	r5, r1
   11d64:	ldr	r6, [pc, #292]	; 11e90 <libinput_log_set_handler@plt+0x50c>
   11d68:	sub	sp, sp, #8
   11d6c:	ldr	r4, [pc, #288]	; 11e94 <libinput_log_set_handler@plt+0x510>
   11d70:	add	r6, pc, r6
   11d74:	add	r4, pc, r4
   11d78:	ldr	r0, [r6]
   11d7c:	cmn	r0, #1
   11d80:	beq	11e20 <libinput_log_set_handler@plt+0x49c>
   11d84:	cmp	r0, #0
   11d88:	beq	11dd8 <libinput_log_set_handler@plt+0x454>
   11d8c:	cmp	r5, #29
   11d90:	bhi	11db8 <libinput_log_set_handler@plt+0x434>
   11d94:	cmp	r5, #19
   11d98:	bhi	11e44 <libinput_log_set_handler@plt+0x4c0>
   11d9c:	ldr	r0, [pc, #244]	; 11e98 <libinput_log_set_handler@plt+0x514>
   11da0:	mov	r1, #1
   11da4:	ldr	r0, [r4, r0]
   11da8:	ldr	r0, [r0]
   11dac:	bl	11804 <__vfprintf_chk@plt>
   11db0:	add	sp, sp, #8
   11db4:	pop	{r4, r5, r6, pc}
   11db8:	ldr	r1, [pc, #220]	; 11e9c <libinput_log_set_handler@plt+0x518>
   11dbc:	mov	r0, #1
   11dc0:	str	r2, [sp, #4]
   11dc4:	add	r1, pc, r1
   11dc8:	str	r3, [sp]
   11dcc:	bl	116a8 <__printf_chk@plt>
   11dd0:	ldr	r2, [sp, #4]
   11dd4:	ldr	r3, [sp]
   11dd8:	ldr	r0, [pc, #184]	; 11e98 <libinput_log_set_handler@plt+0x514>
   11ddc:	mov	r1, #1
   11de0:	ldr	r0, [r4, r0]
   11de4:	ldr	r0, [r0]
   11de8:	bl	11804 <__vfprintf_chk@plt>
   11dec:	ldr	r3, [pc, #172]	; 11ea0 <libinput_log_set_handler@plt+0x51c>
   11df0:	add	r3, pc, r3
   11df4:	ldr	r3, [r3]
   11df8:	cmp	r3, #0
   11dfc:	beq	11db0 <libinput_log_set_handler@plt+0x42c>
   11e00:	cmp	r5, #19
   11e04:	bls	11db0 <libinput_log_set_handler@plt+0x42c>
   11e08:	ldr	r1, [pc, #148]	; 11ea4 <libinput_log_set_handler@plt+0x520>
   11e0c:	mov	r0, #1
   11e10:	add	r1, pc, r1
   11e14:	add	sp, sp, #8
   11e18:	pop	{r4, r5, r6, lr}
   11e1c:	b	116a8 <__printf_chk@plt>
   11e20:	mov	r0, #1
   11e24:	str	r2, [sp, #4]
   11e28:	str	r3, [sp]
   11e2c:	bl	117b0 <isatty@plt>
   11e30:	ldr	r2, [sp, #4]
   11e34:	ldr	r3, [sp]
   11e38:	mov	r1, r0
   11e3c:	str	r1, [r6]
   11e40:	b	11d84 <libinput_log_set_handler@plt+0x400>
   11e44:	ldr	r1, [pc, #92]	; 11ea8 <libinput_log_set_handler@plt+0x524>
   11e48:	mov	r0, #1
   11e4c:	str	r2, [sp, #4]
   11e50:	add	r1, pc, r1
   11e54:	str	r3, [sp]
   11e58:	bl	116a8 <__printf_chk@plt>
   11e5c:	ldr	r0, [pc, #52]	; 11e98 <libinput_log_set_handler@plt+0x514>
   11e60:	ldr	r3, [sp]
   11e64:	mov	r1, #1
   11e68:	ldr	r2, [sp, #4]
   11e6c:	ldr	r0, [r4, r0]
   11e70:	ldr	r0, [r0]
   11e74:	bl	11804 <__vfprintf_chk@plt>
   11e78:	ldr	r3, [pc, #44]	; 11eac <libinput_log_set_handler@plt+0x528>
   11e7c:	add	r3, pc, r3
   11e80:	ldr	r3, [r3]
   11e84:	cmp	r3, #0
   11e88:	bne	11e08 <libinput_log_set_handler@plt+0x484>
   11e8c:	b	11db0 <libinput_log_set_handler@plt+0x42c>
   11e90:	strdeq	r2, [r1], -r0
   11e94:	andeq	r2, r1, r4, lsl #5
   11e98:	andeq	r0, r0, ip, lsr #2
   11e9c:	andeq	r0, r0, r0, ror #29
   11ea0:	andeq	r2, r1, r0, ror r3
   11ea4:	andeq	r0, r0, r8, lsr #29
   11ea8:	andeq	r0, r0, ip, asr lr
   11eac:	andeq	r2, r1, r4, ror #5
   11eb0:	push	{r4, lr}
   11eb4:	mov	r1, #0
   11eb8:	mov	r4, r0
   11ebc:	mov	r2, #120	; 0x78
   11ec0:	bl	116e4 <memset@plt>
   11ec4:	mvn	r3, #0
   11ec8:	str	r3, [r4]
   11ecc:	str	r3, [r4, #32]
   11ed0:	str	r3, [r4, #4]
   11ed4:	str	r3, [r4, #8]
   11ed8:	str	r3, [r4, #12]
   11edc:	str	r3, [r4, #16]
   11ee0:	str	r3, [r4, #20]
   11ee4:	str	r3, [r4, #48]	; 0x30
   11ee8:	str	r3, [r4, #24]
   11eec:	str	r3, [r4, #28]
   11ef0:	str	r3, [r4, #36]	; 0x24
   11ef4:	pop	{r4, pc}
   11ef8:	push	{r4, r5, r6, lr}
   11efc:	sub	r0, r0, #256	; 0x100
   11f00:	ldr	r4, [pc, #908]	; 12294 <libinput_log_set_handler@plt+0x910>
   11f04:	mov	r6, r1
   11f08:	mov	r5, r2
   11f0c:	add	r4, pc, r4
   11f10:	cmp	r0, #20
   11f14:	addls	pc, pc, r0, lsl #2
   11f18:	b	11ff8 <libinput_log_set_handler@plt+0x674>
   11f1c:	b	121f0 <libinput_log_set_handler@plt+0x86c>
   11f20:	b	121a0 <libinput_log_set_handler@plt+0x81c>
   11f24:	b	12154 <libinput_log_set_handler@plt+0x7d0>
   11f28:	b	12144 <libinput_log_set_handler@plt+0x7c0>
   11f2c:	b	12138 <libinput_log_set_handler@plt+0x7b4>
   11f30:	b	12128 <libinput_log_set_handler@plt+0x7a4>
   11f34:	b	1211c <libinput_log_set_handler@plt+0x798>
   11f38:	b	1210c <libinput_log_set_handler@plt+0x788>
   11f3c:	b	121d8 <libinput_log_set_handler@plt+0x854>
   11f40:	b	121c8 <libinput_log_set_handler@plt+0x844>
   11f44:	b	121bc <libinput_log_set_handler@plt+0x838>
   11f48:	b	121ac <libinput_log_set_handler@plt+0x828>
   11f4c:	b	12100 <libinput_log_set_handler@plt+0x77c>
   11f50:	b	120f0 <libinput_log_set_handler@plt+0x76c>
   11f54:	b	121e4 <libinput_log_set_handler@plt+0x860>
   11f58:	b	12094 <libinput_log_set_handler@plt+0x710>
   11f5c:	b	12020 <libinput_log_set_handler@plt+0x69c>
   11f60:	b	11fdc <libinput_log_set_handler@plt+0x658>
   11f64:	b	12000 <libinput_log_set_handler@plt+0x67c>
   11f68:	b	11f98 <libinput_log_set_handler@plt+0x614>
   11f6c:	b	11f70 <libinput_log_set_handler@plt+0x5ec>
   11f70:	cmp	r1, #0
   11f74:	beq	12200 <libinput_log_set_handler@plt+0x87c>
   11f78:	add	r0, r2, #56	; 0x38
   11f7c:	ldr	r2, [pc, #788]	; 12298 <libinput_log_set_handler@plt+0x914>
   11f80:	mov	r3, r1
   11f84:	mov	r1, #64	; 0x40
   11f88:	add	r2, pc, r2
   11f8c:	bl	11924 <snprintf@plt>
   11f90:	mov	r0, #0
   11f94:	pop	{r4, r5, r6, pc}
   11f98:	cmp	r1, #0
   11f9c:	beq	12200 <libinput_log_set_handler@plt+0x87c>
   11fa0:	mov	r0, r1
   11fa4:	ldr	r1, [pc, #752]	; 1229c <libinput_log_set_handler@plt+0x918>
   11fa8:	add	r1, pc, r1
   11fac:	bl	11960 <strcmp@plt>
   11fb0:	cmp	r0, #0
   11fb4:	beq	12208 <libinput_log_set_handler@plt+0x884>
   11fb8:	ldr	r1, [pc, #736]	; 122a0 <libinput_log_set_handler@plt+0x91c>
   11fbc:	mov	r0, r6
   11fc0:	add	r1, pc, r1
   11fc4:	bl	11960 <strcmp@plt>
   11fc8:	cmp	r0, #0
   11fcc:	bne	12200 <libinput_log_set_handler@plt+0x87c>
   11fd0:	mov	r3, #1
   11fd4:	str	r3, [r5, #52]	; 0x34
   11fd8:	pop	{r4, r5, r6, pc}
   11fdc:	cmp	r1, #0
   11fe0:	mov	r0, #1
   11fe4:	beq	12244 <libinput_log_set_handler@plt+0x8c0>
   11fe8:	bl	116f0 <libevdev_event_code_from_name@plt>
   11fec:	cmn	r0, #1
   11ff0:	str	r0, [r5, #36]	; 0x24
   11ff4:	beq	1226c <libinput_log_set_handler@plt+0x8e8>
   11ff8:	mov	r0, #0
   11ffc:	pop	{r4, r5, r6, pc}
   12000:	cmp	r1, #0
   12004:	beq	12200 <libinput_log_set_handler@plt+0x87c>
   12008:	mov	r0, r1
   1200c:	mov	r1, #0
   12010:	bl	116c0 <strtod@plt>
   12014:	mov	r0, #0
   12018:	vstr	d0, [r5, #40]	; 0x28
   1201c:	pop	{r4, r5, r6, pc}
   12020:	cmp	r1, #0
   12024:	beq	12200 <libinput_log_set_handler@plt+0x87c>
   12028:	mov	r0, r1
   1202c:	ldr	r1, [pc, #624]	; 122a4 <libinput_log_set_handler@plt+0x920>
   12030:	add	r1, pc, r1
   12034:	bl	11960 <strcmp@plt>
   12038:	cmp	r0, #0
   1203c:	beq	12214 <libinput_log_set_handler@plt+0x890>
   12040:	ldr	r1, [pc, #608]	; 122a8 <libinput_log_set_handler@plt+0x924>
   12044:	mov	r0, r6
   12048:	add	r1, pc, r1
   1204c:	bl	11960 <strcmp@plt>
   12050:	cmp	r0, #0
   12054:	beq	12248 <libinput_log_set_handler@plt+0x8c4>
   12058:	ldr	r1, [pc, #588]	; 122ac <libinput_log_set_handler@plt+0x928>
   1205c:	mov	r0, r6
   12060:	add	r1, pc, r1
   12064:	bl	11960 <strcmp@plt>
   12068:	cmp	r0, #0
   1206c:	beq	12260 <libinput_log_set_handler@plt+0x8dc>
   12070:	ldr	r1, [pc, #568]	; 122b0 <libinput_log_set_handler@plt+0x92c>
   12074:	mov	r0, r6
   12078:	add	r1, pc, r1
   1207c:	bl	11960 <strcmp@plt>
   12080:	cmp	r0, #0
   12084:	bne	12200 <libinput_log_set_handler@plt+0x87c>
   12088:	mov	r3, #4
   1208c:	str	r3, [r5, #28]
   12090:	pop	{r4, r5, r6, pc}
   12094:	cmp	r1, #0
   12098:	beq	12200 <libinput_log_set_handler@plt+0x87c>
   1209c:	mov	r0, r1
   120a0:	ldr	r1, [pc, #524]	; 122b4 <libinput_log_set_handler@plt+0x930>
   120a4:	add	r1, pc, r1
   120a8:	bl	11960 <strcmp@plt>
   120ac:	cmp	r0, #0
   120b0:	beq	1221c <libinput_log_set_handler@plt+0x898>
   120b4:	ldr	r1, [pc, #508]	; 122b8 <libinput_log_set_handler@plt+0x934>
   120b8:	mov	r0, r6
   120bc:	add	r1, pc, r1
   120c0:	bl	11960 <strcmp@plt>
   120c4:	cmp	r0, #0
   120c8:	beq	12254 <libinput_log_set_handler@plt+0x8d0>
   120cc:	ldr	r1, [pc, #488]	; 122bc <libinput_log_set_handler@plt+0x938>
   120d0:	mov	r0, r6
   120d4:	add	r1, pc, r1
   120d8:	bl	11960 <strcmp@plt>
   120dc:	cmp	r0, #0
   120e0:	bne	12200 <libinput_log_set_handler@plt+0x87c>
   120e4:	mov	r3, #1
   120e8:	str	r3, [r5, #24]
   120ec:	pop	{r4, r5, r6, pc}
   120f0:	mov	r3, #1
   120f4:	mov	r0, #0
   120f8:	str	r3, [r2, #48]	; 0x30
   120fc:	pop	{r4, r5, r6, pc}
   12100:	mov	r0, #0
   12104:	str	r0, [r2, #20]
   12108:	pop	{r4, r5, r6, pc}
   1210c:	mov	r3, #1
   12110:	mov	r0, #0
   12114:	str	r3, [r2, #12]
   12118:	pop	{r4, r5, r6, pc}
   1211c:	mov	r0, #0
   12120:	str	r0, [r2, #8]
   12124:	pop	{r4, r5, r6, pc}
   12128:	mov	r3, #1
   1212c:	mov	r0, #0
   12130:	str	r3, [r2, #8]
   12134:	pop	{r4, r5, r6, pc}
   12138:	mov	r0, #0
   1213c:	str	r0, [r2, #4]
   12140:	pop	{r4, r5, r6, pc}
   12144:	mov	r3, #1
   12148:	mov	r0, #0
   1214c:	str	r3, [r2, #4]
   12150:	pop	{r4, r5, r6, pc}
   12154:	cmp	r1, #0
   12158:	beq	12200 <libinput_log_set_handler@plt+0x87c>
   1215c:	ldrb	r3, [r1]
   12160:	cmp	r3, #108	; 0x6c
   12164:	bne	12200 <libinput_log_set_handler@plt+0x87c>
   12168:	ldrb	r3, [r1, #1]
   1216c:	cmp	r3, #114	; 0x72
   12170:	beq	12224 <libinput_log_set_handler@plt+0x8a0>
   12174:	cmp	r3, #109	; 0x6d
   12178:	bne	12200 <libinput_log_set_handler@plt+0x87c>
   1217c:	ldrb	r3, [r1, #2]
   12180:	cmp	r3, #114	; 0x72
   12184:	bne	12200 <libinput_log_set_handler@plt+0x87c>
   12188:	ldrb	r0, [r1, #3]
   1218c:	cmp	r0, #0
   12190:	bne	12200 <libinput_log_set_handler@plt+0x87c>
   12194:	mov	r3, #1
   12198:	str	r3, [r2, #32]
   1219c:	pop	{r4, r5, r6, pc}
   121a0:	mov	r0, #0
   121a4:	str	r0, [r2]
   121a8:	pop	{r4, r5, r6, pc}
   121ac:	mov	r3, #1
   121b0:	mov	r0, #0
   121b4:	str	r3, [r2, #20]
   121b8:	pop	{r4, r5, r6, pc}
   121bc:	mov	r0, #0
   121c0:	str	r0, [r2, #16]
   121c4:	pop	{r4, r5, r6, pc}
   121c8:	mov	r3, #1
   121cc:	mov	r0, #0
   121d0:	str	r3, [r2, #16]
   121d4:	pop	{r4, r5, r6, pc}
   121d8:	mov	r0, #0
   121dc:	str	r0, [r2, #12]
   121e0:	pop	{r4, r5, r6, pc}
   121e4:	mov	r0, #0
   121e8:	str	r0, [r2, #48]	; 0x30
   121ec:	pop	{r4, r5, r6, pc}
   121f0:	mov	r3, #1
   121f4:	mov	r0, #0
   121f8:	str	r3, [r2]
   121fc:	pop	{r4, r5, r6, pc}
   12200:	mov	r0, #1
   12204:	pop	{r4, r5, r6, pc}
   12208:	mov	r3, #2
   1220c:	str	r3, [r5, #52]	; 0x34
   12210:	pop	{r4, r5, r6, pc}
   12214:	str	r0, [r5, #28]
   12218:	pop	{r4, r5, r6, pc}
   1221c:	str	r0, [r5, #24]
   12220:	pop	{r4, r5, r6, pc}
   12224:	ldrb	r3, [r1, #2]
   12228:	cmp	r3, #109	; 0x6d
   1222c:	bne	12200 <libinput_log_set_handler@plt+0x87c>
   12230:	ldrb	r0, [r1, #3]
   12234:	cmp	r0, #0
   12238:	bne	12200 <libinput_log_set_handler@plt+0x87c>
   1223c:	str	r0, [r2, #32]
   12240:	pop	{r4, r5, r6, pc}
   12244:	pop	{r4, r5, r6, pc}
   12248:	mov	r3, #1
   1224c:	str	r3, [r5, #28]
   12250:	pop	{r4, r5, r6, pc}
   12254:	mov	r3, #2
   12258:	str	r3, [r5, #24]
   1225c:	pop	{r4, r5, r6, pc}
   12260:	mov	r3, #2
   12264:	str	r3, [r5, #28]
   12268:	pop	{r4, r5, r6, pc}
   1226c:	ldr	r0, [pc, #76]	; 122c0 <libinput_log_set_handler@plt+0x93c>
   12270:	mov	r3, r6
   12274:	ldr	r2, [pc, #72]	; 122c4 <libinput_log_set_handler@plt+0x940>
   12278:	mov	r1, #1
   1227c:	ldr	r0, [r4, r0]
   12280:	add	r2, pc, r2
   12284:	ldr	r0, [r0]
   12288:	bl	118c4 <__fprintf_chk@plt>
   1228c:	mov	r0, #1
   12290:	pop	{r4, r5, r6, pc}
   12294:	andeq	r2, r1, ip, ror #1
   12298:	muleq	r0, ip, sp
   1229c:	andeq	r0, r0, r8, ror #26
   122a0:	andeq	r0, r0, ip, asr sp
   122a4:	muleq	r0, r0, ip
   122a8:	muleq	r0, r8, ip
   122ac:	andeq	r0, r0, ip, lsl #25
   122b0:	andeq	r0, r0, ip, ror ip
   122b4:	andeq	r0, r0, ip, lsl ip
   122b8:	andeq	r0, r0, ip, lsl #24
   122bc:	andeq	r0, r0, r0, lsl #24
   122c0:	andeq	r0, r0, r0, lsr r1
   122c4:	andeq	r0, r0, ip, ror sl
   122c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   122cc:	subs	r9, r0, #0
   122d0:	ldr	r4, [pc, #476]	; 124b4 <libinput_log_set_handler@plt+0xb30>
   122d4:	sub	sp, sp, #8
   122d8:	ldr	ip, [pc, #472]	; 124b8 <libinput_log_set_handler@plt+0xb34>
   122dc:	mov	r7, r1
   122e0:	add	r4, pc, r4
   122e4:	mov	r8, r2
   122e8:	ldr	r5, [r4, ip]
   122ec:	ldr	ip, [r5]
   122f0:	str	ip, [sp, #4]
   122f4:	beq	12370 <libinput_log_set_handler@plt+0x9ec>
   122f8:	cmp	r9, #1
   122fc:	bne	1236c <libinput_log_set_handler@plt+0x9e8>
   12300:	strb	r3, [sp, #2]
   12304:	bl	11750 <udev_new@plt>
   12308:	subs	sl, r0, #0
   1230c:	beq	12464 <libinput_log_set_handler@plt+0xae0>
   12310:	ldr	r0, [pc, #420]	; 124bc <libinput_log_set_handler@plt+0xb38>
   12314:	add	r1, sp, #2
   12318:	mov	r2, sl
   1231c:	add	r0, pc, r0
   12320:	bl	1181c <libinput_udev_create_context@plt>
   12324:	subs	r6, r0, #0
   12328:	beq	12440 <libinput_log_set_handler@plt+0xabc>
   1232c:	cmp	r8, #0
   12330:	bne	12424 <libinput_log_set_handler@plt+0xaa0>
   12334:	mov	r1, r7
   12338:	mov	r0, r6
   1233c:	bl	11660 <libinput_udev_assign_seat@plt>
   12340:	cmp	r0, #0
   12344:	bne	123f4 <libinput_log_set_handler@plt+0xa70>
   12348:	mov	r0, sl
   1234c:	bl	11840 <udev_unref@plt>
   12350:	ldr	r2, [sp, #4]
   12354:	mov	r0, r6
   12358:	ldr	r3, [r5]
   1235c:	cmp	r2, r3
   12360:	bne	124b0 <libinput_log_set_handler@plt+0xb2c>
   12364:	add	sp, sp, #8
   12368:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1236c:	bl	11654 <abort@plt>
   12370:	add	r1, sp, #8
   12374:	ldr	r0, [pc, #324]	; 124c0 <libinput_log_set_handler@plt+0xb3c>
   12378:	strb	r3, [r1, #-5]!
   1237c:	add	r0, pc, r0
   12380:	bl	11780 <libinput_path_create_context@plt>
   12384:	subs	r6, r0, #0
   12388:	beq	1248c <libinput_log_set_handler@plt+0xb08>
   1238c:	cmp	r8, #0
   12390:	bne	123d8 <libinput_log_set_handler@plt+0xa54>
   12394:	mov	r0, r6
   12398:	mov	r1, r7
   1239c:	bl	1172c <libinput_path_add_device@plt>
   123a0:	subs	r8, r0, #0
   123a4:	bne	12350 <libinput_log_set_handler@plt+0x9cc>
   123a8:	ldr	r0, [pc, #276]	; 124c4 <libinput_log_set_handler@plt+0xb40>
   123ac:	mov	r3, r7
   123b0:	ldr	r2, [pc, #272]	; 124c8 <libinput_log_set_handler@plt+0xb44>
   123b4:	mov	r1, #1
   123b8:	ldr	r0, [r4, r0]
   123bc:	add	r2, pc, r2
   123c0:	ldr	r0, [r0]
   123c4:	bl	118c4 <__fprintf_chk@plt>
   123c8:	mov	r0, r6
   123cc:	bl	11918 <libinput_unref@plt>
   123d0:	mov	r6, r8
   123d4:	b	12350 <libinput_log_set_handler@plt+0x9cc>
   123d8:	ldr	r1, [pc, #236]	; 124cc <libinput_log_set_handler@plt+0xb48>
   123dc:	add	r1, pc, r1
   123e0:	bl	11984 <libinput_log_set_handler@plt>
   123e4:	mov	r0, r6
   123e8:	mov	r1, #10
   123ec:	bl	1178c <libinput_log_set_priority@plt>
   123f0:	b	12394 <libinput_log_set_handler@plt+0xa10>
   123f4:	ldr	r3, [pc, #200]	; 124c4 <libinput_log_set_handler@plt+0xb40>
   123f8:	mov	r1, #1
   123fc:	ldr	r0, [pc, #204]	; 124d0 <libinput_log_set_handler@plt+0xb4c>
   12400:	mov	r2, #19
   12404:	ldr	r3, [r4, r3]
   12408:	add	r0, pc, r0
   1240c:	ldr	r3, [r3]
   12410:	bl	11864 <fwrite@plt>
   12414:	mov	r0, r6
   12418:	bl	11918 <libinput_unref@plt>
   1241c:	mov	r6, #0
   12420:	b	12348 <libinput_log_set_handler@plt+0x9c4>
   12424:	ldr	r1, [pc, #168]	; 124d4 <libinput_log_set_handler@plt+0xb50>
   12428:	add	r1, pc, r1
   1242c:	bl	11984 <libinput_log_set_handler@plt>
   12430:	mov	r0, r6
   12434:	mov	r1, #10
   12438:	bl	1178c <libinput_log_set_priority@plt>
   1243c:	b	12334 <libinput_log_set_handler@plt+0x9b0>
   12440:	ldr	r3, [pc, #124]	; 124c4 <libinput_log_set_handler@plt+0xb40>
   12444:	mov	r1, r9
   12448:	ldr	r0, [pc, #136]	; 124d8 <libinput_log_set_handler@plt+0xb54>
   1244c:	mov	r2, #39	; 0x27
   12450:	ldr	r3, [r4, r3]
   12454:	add	r0, pc, r0
   12458:	ldr	r3, [r3]
   1245c:	bl	11864 <fwrite@plt>
   12460:	b	12348 <libinput_log_set_handler@plt+0x9c4>
   12464:	ldr	r3, [pc, #88]	; 124c4 <libinput_log_set_handler@plt+0xb40>
   12468:	mov	r1, r9
   1246c:	ldr	r0, [pc, #104]	; 124dc <libinput_log_set_handler@plt+0xb58>
   12470:	mov	r2, #26
   12474:	mov	r6, sl
   12478:	ldr	r3, [r4, r3]
   1247c:	add	r0, pc, r0
   12480:	ldr	r3, [r3]
   12484:	bl	11864 <fwrite@plt>
   12488:	b	12350 <libinput_log_set_handler@plt+0x9cc>
   1248c:	ldr	r0, [pc, #48]	; 124c4 <libinput_log_set_handler@plt+0xb40>
   12490:	mov	r3, r7
   12494:	ldr	r2, [pc, #68]	; 124e0 <libinput_log_set_handler@plt+0xb5c>
   12498:	mov	r1, #1
   1249c:	ldr	r0, [r4, r0]
   124a0:	add	r2, pc, r2
   124a4:	ldr	r0, [r0]
   124a8:	bl	118c4 <__fprintf_chk@plt>
   124ac:	b	12350 <libinput_log_set_handler@plt+0x9cc>
   124b0:	bl	118b8 <__stack_chk_fail@plt>
   124b4:	andeq	r1, r1, r8, lsl sp
   124b8:	andeq	r0, r0, r8, lsr #2
   124bc:	andeq	r1, r1, r4, lsr #23
   124c0:	andeq	r1, r1, r4, asr #22
   124c4:	andeq	r0, r0, r0, lsr r1
   124c8:	andeq	r0, r0, ip, ror #19
   124cc:			; <UNDEFINED> instruction: 0xfffff978
   124d0:	andeq	r0, r0, r4, ror #18
   124d4:			; <UNDEFINED> instruction: 0xfffff92c
   124d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   124dc:	andeq	r0, r0, ip, lsr #17
   124e0:	andeq	r0, r0, r0, ror #17
   124e4:	push	{r3, r4, r5, lr}
   124e8:	mov	r4, r1
   124ec:	ldr	r1, [r1]
   124f0:	mov	r5, r0
   124f4:	cmn	r1, #1
   124f8:	beq	12500 <libinput_log_set_handler@plt+0xb7c>
   124fc:	bl	117f8 <libinput_device_config_tap_set_enabled@plt>
   12500:	ldr	r1, [r4, #32]
   12504:	cmn	r1, #1
   12508:	beq	12514 <libinput_log_set_handler@plt+0xb90>
   1250c:	mov	r0, r5
   12510:	bl	11810 <libinput_device_config_tap_set_button_map@plt>
   12514:	ldr	r1, [r4, #4]
   12518:	cmn	r1, #1
   1251c:	beq	12528 <libinput_log_set_handler@plt+0xba4>
   12520:	mov	r0, r5
   12524:	bl	116fc <libinput_device_config_tap_set_drag_enabled@plt>
   12528:	ldr	r1, [r4, #8]
   1252c:	cmn	r1, #1
   12530:	beq	1253c <libinput_log_set_handler@plt+0xbb8>
   12534:	mov	r0, r5
   12538:	bl	11738 <libinput_device_config_tap_set_drag_lock_enabled@plt>
   1253c:	ldr	r1, [r4, #12]
   12540:	cmn	r1, #1
   12544:	beq	12550 <libinput_log_set_handler@plt+0xbcc>
   12548:	mov	r0, r5
   1254c:	bl	116d8 <libinput_device_config_scroll_set_natural_scroll_enabled@plt>
   12550:	ldr	r1, [r4, #16]
   12554:	cmn	r1, #1
   12558:	beq	12564 <libinput_log_set_handler@plt+0xbe0>
   1255c:	mov	r0, r5
   12560:	bl	11798 <libinput_device_config_left_handed_set@plt>
   12564:	ldr	r1, [r4, #20]
   12568:	cmn	r1, #1
   1256c:	beq	12578 <libinput_log_set_handler@plt+0xbf4>
   12570:	mov	r0, r5
   12574:	bl	118ac <libinput_device_config_middle_emulation_set_enabled@plt>
   12578:	ldr	r1, [r4, #48]	; 0x30
   1257c:	cmn	r1, #1
   12580:	beq	1258c <libinput_log_set_handler@plt+0xc08>
   12584:	mov	r0, r5
   12588:	bl	11870 <libinput_device_config_dwt_set_enabled@plt>
   1258c:	ldr	r1, [r4, #24]
   12590:	cmn	r1, #1
   12594:	beq	125a0 <libinput_log_set_handler@plt+0xc1c>
   12598:	mov	r0, r5
   1259c:	bl	1190c <libinput_device_config_click_set_method@plt>
   125a0:	ldr	r1, [r4, #28]
   125a4:	cmn	r1, #1
   125a8:	beq	125b4 <libinput_log_set_handler@plt+0xc30>
   125ac:	mov	r0, r5
   125b0:	bl	11744 <libinput_device_config_scroll_set_method@plt>
   125b4:	ldr	r1, [r4, #36]	; 0x24
   125b8:	cmn	r1, #1
   125bc:	beq	125c8 <libinput_log_set_handler@plt+0xc44>
   125c0:	mov	r0, r5
   125c4:	bl	118dc <libinput_device_config_scroll_set_button@plt>
   125c8:	mov	r0, r5
   125cc:	bl	117c8 <libinput_device_config_accel_is_available@plt>
   125d0:	cmp	r0, #0
   125d4:	bne	12618 <libinput_log_set_handler@plt+0xc94>
   125d8:	mov	r0, r5
   125dc:	bl	11894 <libinput_device_config_send_events_get_modes@plt>
   125e0:	tst	r0, #1
   125e4:	popeq	{r3, r4, r5, pc}
   125e8:	mov	r0, r5
   125ec:	bl	11888 <libinput_device_get_name@plt>
   125f0:	mov	r2, #0
   125f4:	mov	r1, r0
   125f8:	add	r0, r4, #56	; 0x38
   125fc:	bl	118e8 <fnmatch@plt>
   12600:	cmp	r0, #1
   12604:	popeq	{r3, r4, r5, pc}
   12608:	mov	r0, r5
   1260c:	mov	r1, #1
   12610:	pop	{r3, r4, r5, lr}
   12614:	b	1187c <libinput_device_config_send_events_set_mode@plt>
   12618:	mov	r0, r5
   1261c:	vldr	d0, [r4, #40]	; 0x28
   12620:	bl	1175c <libinput_device_config_accel_set_speed@plt>
   12624:	ldr	r1, [r4, #52]	; 0x34
   12628:	cmp	r1, #0
   1262c:	beq	125d8 <libinput_log_set_handler@plt+0xc54>
   12630:	mov	r0, r5
   12634:	bl	117bc <libinput_device_config_accel_set_profile@plt>
   12638:	b	125d8 <libinput_log_set_handler@plt+0xc54>
   1263c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12640:	mov	sl, r1
   12644:	mov	fp, r0
   12648:	bl	11750 <udev_new@plt>
   1264c:	mov	r6, r0
   12650:	bl	118a0 <udev_enumerate_new@plt>
   12654:	ldr	r1, [pc, #268]	; 12768 <libinput_log_set_handler@plt+0xde4>
   12658:	add	r1, pc, r1
   1265c:	mov	r8, r0
   12660:	bl	117d4 <udev_enumerate_add_match_subsystem@plt>
   12664:	mov	r0, r8
   12668:	bl	116cc <udev_enumerate_scan_devices@plt>
   1266c:	mov	r0, r8
   12670:	bl	11858 <udev_enumerate_get_list_entry@plt>
   12674:	subs	r4, r0, #0
   12678:	beq	1274c <libinput_log_set_handler@plt+0xdc8>
   1267c:	ldr	r7, [pc, #232]	; 1276c <libinput_log_set_handler@plt+0xde8>
   12680:	ldr	r9, [pc, #232]	; 12770 <libinput_log_set_handler@plt+0xdec>
   12684:	add	r7, pc, r7
   12688:	add	r9, pc, r9
   1268c:	mov	r0, r4
   12690:	bl	118f4 <udev_list_entry_get_name@plt>
   12694:	mov	r1, r0
   12698:	mov	r0, r6
   1269c:	bl	117e0 <udev_device_new_from_syspath@plt>
   126a0:	subs	r5, r0, #0
   126a4:	beq	1273c <libinput_log_set_handler@plt+0xdb8>
   126a8:	bl	116b4 <udev_device_get_sysname@plt>
   126ac:	mov	r2, #5
   126b0:	mov	r1, r0
   126b4:	mov	r0, r7
   126b8:	bl	11930 <strncmp@plt>
   126bc:	cmp	r0, #0
   126c0:	mov	r0, r5
   126c4:	bne	12738 <libinput_log_set_handler@plt+0xdb4>
   126c8:	mov	r1, r9
   126cc:	bl	11684 <udev_device_get_property_value@plt>
   126d0:	cmp	r0, #0
   126d4:	mov	r0, r5
   126d8:	beq	12738 <libinput_log_set_handler@plt+0xdb4>
   126dc:	bl	11834 <udev_device_get_devnode@plt>
   126e0:	cmp	r0, #0
   126e4:	beq	12734 <libinput_log_set_handler@plt+0xdb0>
   126e8:	bl	1193c <__strdup@plt>
   126ec:	subs	r4, r0, #0
   126f0:	beq	12764 <libinput_log_set_handler@plt+0xde0>
   126f4:	mov	r0, r5
   126f8:	bl	117ec <udev_device_unref@plt>
   126fc:	mov	r0, r8
   12700:	bl	11948 <udev_enumerate_unref@plt>
   12704:	mov	r0, r6
   12708:	bl	11840 <udev_unref@plt>
   1270c:	ldr	r2, [pc, #96]	; 12774 <libinput_log_set_handler@plt+0xdf0>
   12710:	mov	r1, sl
   12714:	mov	r3, r4
   12718:	add	r2, pc, r2
   1271c:	mov	r0, fp
   12720:	bl	11924 <snprintf@plt>
   12724:	mov	r0, r4
   12728:	bl	11768 <free@plt>
   1272c:	mov	r0, #1
   12730:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12734:	mov	r0, r5
   12738:	bl	117ec <udev_device_unref@plt>
   1273c:	mov	r0, r4
   12740:	bl	11714 <udev_list_entry_get_next@plt>
   12744:	subs	r4, r0, #0
   12748:	bne	1268c <libinput_log_set_handler@plt+0xd08>
   1274c:	mov	r0, r8
   12750:	bl	11948 <udev_enumerate_unref@plt>
   12754:	mov	r0, r6
   12758:	bl	11840 <udev_unref@plt>
   1275c:	mov	r0, #0
   12760:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12764:	bl	11654 <abort@plt>
   12768:	andeq	r0, r0, r4, asr #12
   1276c:	andeq	r0, r0, r8, asr #14
   12770:	andeq	r0, r0, ip, asr #14
   12774:	andeq	r0, r0, ip, lsl #12
   12778:	ldr	r3, [pc, #152]	; 12818 <libinput_log_set_handler@plt+0xe94>
   1277c:	mov	r1, r0
   12780:	ldr	ip, [pc, #148]	; 1281c <libinput_log_set_handler@plt+0xe98>
   12784:	mov	r0, #3
   12788:	add	r3, pc, r3
   1278c:	push	{r4, r5, r6, r7, lr}
   12790:	sub	sp, sp, #100	; 0x64
   12794:	ldr	r4, [r3, ip]
   12798:	mov	r2, sp
   1279c:	ldr	r3, [r4]
   127a0:	str	r3, [sp, #92]	; 0x5c
   127a4:	bl	1166c <__xstat@plt>
   127a8:	cmp	r0, #0
   127ac:	movlt	r0, #0
   127b0:	blt	127fc <libinput_log_set_handler@plt+0xe78>
   127b4:	bl	11750 <udev_new@plt>
   127b8:	mov	r1, #99	; 0x63
   127bc:	ldrd	r2, [sp, #32]
   127c0:	mov	r6, r0
   127c4:	bl	118d0 <udev_device_new_from_devnum@plt>
   127c8:	subs	r7, r0, #0
   127cc:	moveq	r5, r7
   127d0:	beq	127f0 <libinput_log_set_handler@plt+0xe6c>
   127d4:	ldr	r1, [pc, #68]	; 12820 <libinput_log_set_handler@plt+0xe9c>
   127d8:	add	r1, pc, r1
   127dc:	bl	11684 <udev_device_get_property_value@plt>
   127e0:	adds	r5, r0, #0
   127e4:	mov	r0, r7
   127e8:	movne	r5, #1
   127ec:	bl	117ec <udev_device_unref@plt>
   127f0:	mov	r0, r6
   127f4:	bl	11840 <udev_unref@plt>
   127f8:	mov	r0, r5
   127fc:	ldr	r2, [sp, #92]	; 0x5c
   12800:	ldr	r3, [r4]
   12804:	cmp	r2, r3
   12808:	bne	12814 <libinput_log_set_handler@plt+0xe90>
   1280c:	add	sp, sp, #100	; 0x64
   12810:	pop	{r4, r5, r6, r7, pc}
   12814:	bl	118b8 <__stack_chk_fail@plt>
   12818:	andeq	r1, r1, r0, ror r8
   1281c:	andeq	r0, r0, r8, lsr #2
   12820:	strdeq	r0, [r0], -ip
   12824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12828:	sub	sp, sp, #412	; 0x19c
   1282c:	ldr	r5, [pc, #376]	; 129ac <libinput_log_set_handler@plt+0x1028>
   12830:	add	r6, sp, #20
   12834:	ldr	r3, [pc, #372]	; 129b0 <libinput_log_set_handler@plt+0x102c>
   12838:	mov	r4, r1
   1283c:	add	r5, pc, r5
   12840:	mov	fp, r0
   12844:	mov	sl, r2
   12848:	mov	r0, r6
   1284c:	ldr	r7, [r5, r3]
   12850:	mov	r1, #0
   12854:	mov	r2, #256	; 0x100
   12858:	ldr	r3, [r7]
   1285c:	str	r3, [sp, #404]	; 0x194
   12860:	bl	116e4 <memset@plt>
   12864:	cmp	r4, #63	; 0x3f
   12868:	bhi	1298c <libinput_log_set_handler@plt+0x1008>
   1286c:	ldr	r8, [sl]
   12870:	add	r9, sp, #276	; 0x114
   12874:	ldr	r2, [pc, #312]	; 129b4 <libinput_log_set_handler@plt+0x1030>
   12878:	mov	r1, #128	; 0x80
   1287c:	str	fp, [sp, #4]
   12880:	mov	r0, r9
   12884:	add	r2, pc, r2
   12888:	str	r8, [sp, #8]
   1288c:	str	r2, [sp]
   12890:	mov	r3, r1
   12894:	mov	r2, #1
   12898:	bl	11828 <__snprintf_chk@plt>
   1289c:	cmp	r0, #127	; 0x7f
   128a0:	bgt	12940 <libinput_log_set_handler@plt+0xfbc>
   128a4:	cmp	r4, #1
   128a8:	str	r9, [sp, #20]
   128ac:	movgt	r2, sl
   128b0:	subgt	r3, r2, #4
   128b4:	addgt	r4, r3, r4, lsl #2
   128b8:	movgt	ip, r6
   128bc:	ble	128d0 <libinput_log_set_handler@plt+0xf4c>
   128c0:	ldr	lr, [r2, #4]!
   128c4:	cmp	r2, r4
   128c8:	str	lr, [ip, #4]!
   128cc:	bne	128c0 <libinput_log_set_handler@plt+0xf3c>
   128d0:	bl	11c90 <libinput_log_set_handler@plt+0x30c>
   128d4:	mov	r0, r9
   128d8:	mov	r1, r6
   128dc:	bl	11708 <execvp@plt>
   128e0:	cmp	r0, #0
   128e4:	beq	12924 <libinput_log_set_handler@plt+0xfa0>
   128e8:	bl	1196c <__errno_location@plt>
   128ec:	ldr	r0, [r0]
   128f0:	cmp	r0, #2
   128f4:	beq	12964 <libinput_log_set_handler@plt+0xfe0>
   128f8:	ldr	r3, [pc, #184]	; 129b8 <libinput_log_set_handler@plt+0x1034>
   128fc:	ldr	r3, [r5, r3]
   12900:	ldr	r4, [r3]
   12904:	bl	11648 <strerror@plt>
   12908:	ldr	r2, [pc, #172]	; 129bc <libinput_log_set_handler@plt+0x1038>
   1290c:	mov	r3, r8
   12910:	mov	r1, #1
   12914:	add	r2, pc, r2
   12918:	str	r0, [sp]
   1291c:	mov	r0, r4
   12920:	bl	118c4 <__fprintf_chk@plt>
   12924:	ldr	r2, [sp, #404]	; 0x194
   12928:	mov	r0, #1
   1292c:	ldr	r3, [r7]
   12930:	cmp	r2, r3
   12934:	bne	12988 <libinput_log_set_handler@plt+0x1004>
   12938:	add	sp, sp, #412	; 0x19c
   1293c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12940:	ldr	r3, [pc, #112]	; 129b8 <libinput_log_set_handler@plt+0x1034>
   12944:	mov	r1, #1
   12948:	ldr	r0, [pc, #112]	; 129c0 <libinput_log_set_handler@plt+0x103c>
   1294c:	mov	r2, #28
   12950:	ldr	r3, [r5, r3]
   12954:	add	r0, pc, r0
   12958:	ldr	r3, [r3]
   1295c:	bl	11864 <fwrite@plt>
   12960:	b	12924 <libinput_log_set_handler@plt+0xfa0>
   12964:	ldr	r0, [pc, #76]	; 129b8 <libinput_log_set_handler@plt+0x1034>
   12968:	mov	r3, r8
   1296c:	ldr	r2, [pc, #80]	; 129c4 <libinput_log_set_handler@plt+0x1040>
   12970:	mov	r1, #1
   12974:	ldr	r0, [r5, r0]
   12978:	add	r2, pc, r2
   1297c:	ldr	r0, [r0]
   12980:	bl	118c4 <__fprintf_chk@plt>
   12984:	b	12924 <libinput_log_set_handler@plt+0xfa0>
   12988:	bl	118b8 <__stack_chk_fail@plt>
   1298c:	ldr	r0, [pc, #52]	; 129c8 <libinput_log_set_handler@plt+0x1044>
   12990:	mov	r2, #492	; 0x1ec
   12994:	ldr	r1, [pc, #48]	; 129cc <libinput_log_set_handler@plt+0x1048>
   12998:	ldr	r3, [pc, #48]	; 129d0 <libinput_log_set_handler@plt+0x104c>
   1299c:	add	r0, pc, r0
   129a0:	add	r1, pc, r1
   129a4:	add	r3, pc, r3
   129a8:	bl	11720 <__assert_fail@plt>
   129ac:			; <UNDEFINED> instruction: 0x000117bc
   129b0:	andeq	r0, r0, r8, lsr #2
   129b4:	andeq	r0, r0, r8, lsr #11
   129b8:	andeq	r0, r0, r0, lsr r1
   129bc:	muleq	r0, r0, r5
   129c0:	andeq	r0, r0, r0, ror #9
   129c4:	ldrdeq	r0, [r0], -ip
   129c8:	andeq	r0, r0, ip, asr #8
   129cc:	andeq	r0, r0, r0, lsl #9
   129d0:	andeq	r0, r0, r4, lsl #5
   129d4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   129d8:	mov	r7, r0
   129dc:	ldr	r6, [pc, #76]	; 12a30 <libinput_log_set_handler@plt+0x10ac>
   129e0:	mov	r8, r1
   129e4:	ldr	r5, [pc, #72]	; 12a34 <libinput_log_set_handler@plt+0x10b0>
   129e8:	mov	r9, r2
   129ec:	add	r6, pc, r6
   129f0:	bl	11628 <_init@@Base>
   129f4:	add	r5, pc, r5
   129f8:	rsb	r6, r5, r6
   129fc:	asrs	r6, r6, #2
   12a00:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   12a04:	sub	r5, r5, #4
   12a08:	mov	r4, #0
   12a0c:	add	r4, r4, #1
   12a10:	ldr	r3, [r5, #4]!
   12a14:	mov	r0, r7
   12a18:	mov	r1, r8
   12a1c:	mov	r2, r9
   12a20:	blx	r3
   12a24:	cmp	r4, r6
   12a28:	bne	12a0c <libinput_log_set_handler@plt+0x1088>
   12a2c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12a30:	andeq	r1, r1, ip, asr #9
   12a34:	andeq	r1, r1, r0, asr #9
   12a38:	bx	lr

Disassembly of section .fini:

00012a3c <_fini@@Base>:
   12a3c:	push	{r3, lr}
   12a40:	pop	{r3, pc}
