
centos-preinstalled/sg_requests:     file format elf32-littlearm


Disassembly of section .init:

00010a30 <_init@@Base>:
   10a30:	push	{r3, lr}
   10a34:	bl	1159c <abort@plt+0xa20>
   10a38:	pop	{r3, pc}

Disassembly of section .plt:

00010a3c <raise@plt-0x14>:
   10a3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a40:	ldr	lr, [pc, #4]	; 10a4c <_init@@Base+0x1c>
   10a44:	add	lr, pc, lr
   10a48:	ldr	pc, [lr, #8]!
   10a4c:			; <UNDEFINED> instruction: 0x000125b4

00010a50 <raise@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #73728	; 0x12000
   10a58:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a5c <sg_set_binary_mode@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #73728	; 0x12000
   10a64:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a68 <dStrHex@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #73728	; 0x12000
   10a70:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a74 <sg_cmds_close_device@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #73728	; 0x12000
   10a7c:	ldr	pc, [ip, #1436]!	; 0x59c

00010a80 <sleep@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #73728	; 0x12000
   10a88:	ldr	pc, [ip, #1428]!	; 0x594

00010a8c <__stack_chk_fail@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #73728	; 0x12000
   10a94:	ldr	pc, [ip, #1420]!	; 0x58c

00010a98 <sg_print_sense@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #73728	; 0x12000
   10aa0:	ldr	pc, [ip, #1412]!	; 0x584

00010aa4 <perror@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #73728	; 0x12000
   10aac:	ldr	pc, [ip, #1404]!	; 0x57c

00010ab0 <fwrite@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #73728	; 0x12000
   10ab8:	ldr	pc, [ip, #1396]!	; 0x574

00010abc <dStrHexErr@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #73728	; 0x12000
   10ac4:	ldr	pc, [ip, #1388]!	; 0x56c

00010ac8 <gettimeofday@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #73728	; 0x12000
   10ad0:	ldr	pc, [ip, #1380]!	; 0x564

00010ad4 <__libc_start_main@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #73728	; 0x12000
   10adc:	ldr	pc, [ip, #1372]!	; 0x55c

00010ae0 <__gmon_start__@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #73728	; 0x12000
   10ae8:	ldr	pc, [ip, #1364]!	; 0x554

00010aec <getopt_long@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1356]!	; 0x54c

00010af8 <sg_get_sense_progress_fld@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1348]!	; 0x544

00010b04 <sg_scsi_normalize_sense@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1340]!	; 0x53c

00010b10 <memset@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1332]!	; 0x534

00010b1c <putchar@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1324]!	; 0x52c

00010b28 <__printf_chk@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1316]!	; 0x524

00010b34 <__fprintf_chk@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1308]!	; 0x51c

00010b40 <sg_ll_request_sense@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1300]!	; 0x514

00010b4c <safe_strerror@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #73728	; 0x12000
   10b54:	ldr	pc, [ip, #1292]!	; 0x50c

00010b58 <sg_err_category_sense@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #73728	; 0x12000
   10b60:	ldr	pc, [ip, #1284]!	; 0x504

00010b64 <sg_get_num@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #73728	; 0x12000
   10b6c:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b70 <sg_cmds_open_device@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #73728	; 0x12000
   10b78:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b7c <abort@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #73728	; 0x12000
   10b84:	ldr	pc, [ip, #1260]!	; 0x4ec

Disassembly of section .text:

00010b88 <.text>:
   10b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b8c:	vpush	{d8}
   10b90:	movw	r6, #12608	; 0x3140
   10b94:	movt	r6, #2
   10b98:	sub	sp, sp, #332	; 0x14c
   10b9c:	mov	r4, #0
   10ba0:	movw	sl, #12624	; 0x3150
   10ba4:	ldr	r3, [r6]
   10ba8:	movt	sl, #2
   10bac:	add	r8, sp, #60	; 0x3c
   10bb0:	mov	r5, r0
   10bb4:	mov	r7, r1
   10bb8:	mov	fp, r4
   10bbc:	mov	r9, r4
   10bc0:	mov	ip, #1
   10bc4:	str	r4, [sp, #32]
   10bc8:	str	r4, [sp, #36]	; 0x24
   10bcc:	str	r4, [sp, #16]
   10bd0:	str	r4, [sp, #12]
   10bd4:	str	r4, [sp, #20]
   10bd8:	str	r4, [sp, #24]
   10bdc:	str	ip, [sp, #28]
   10be0:	str	r3, [sp, #324]	; 0x144
   10be4:	str	r8, [sp]
   10be8:	movw	r2, #6492	; 0x195c
   10bec:	movw	r3, #12412	; 0x307c
   10bf0:	movt	r2, #1
   10bf4:	movt	r3, #2
   10bf8:	mov	r0, r5
   10bfc:	mov	r1, r7
   10c00:	str	r9, [sp, #60]	; 0x3c
   10c04:	bl	10aec <getopt_long@plt>
   10c08:	cmn	r0, #1
   10c0c:	beq	10e78 <abort@plt+0x2fc>
   10c10:	sub	r3, r0, #63	; 0x3f
   10c14:	cmp	r3, #55	; 0x37
   10c18:	ldrls	pc, [pc, r3, lsl #2]
   10c1c:	b	10e38 <abort@plt+0x2bc>
   10c20:	strdeq	r0, [r1], -ip
   10c24:	andeq	r0, r1, r8, lsr lr
   10c28:	andeq	r0, r1, r8, lsr lr
   10c2c:	andeq	r0, r1, r8, lsr lr
   10c30:	andeq	r0, r1, r8, lsr lr
   10c34:	andeq	r0, r1, r8, lsr lr
   10c38:	andeq	r0, r1, r8, lsr lr
   10c3c:	andeq	r0, r1, r8, lsr lr
   10c40:	andeq	r0, r1, r8, lsr lr
   10c44:	andeq	r0, r1, ip, ror #27
   10c48:	andeq	r0, r1, r8, lsr lr
   10c4c:	andeq	r0, r1, r8, lsr lr
   10c50:	andeq	r0, r1, r8, lsr lr
   10c54:	andeq	r0, r1, r8, lsr lr
   10c58:	andeq	r0, r1, r8, lsr lr
   10c5c:	andeq	r0, r1, r8, lsr lr
   10c60:	andeq	r0, r1, r8, lsr lr
   10c64:	andeq	r0, r1, r8, lsr lr
   10c68:	andeq	r0, r1, r8, lsr lr
   10c6c:	andeq	r0, r1, r8, lsr lr
   10c70:	andeq	r0, r1, r8, lsr lr
   10c74:	andeq	r0, r1, r8, lsr lr
   10c78:	andeq	r0, r1, r8, lsr lr
   10c7c:	andeq	r0, r1, r8, lsr #27
   10c80:	andeq	r0, r1, r8, lsr lr
   10c84:	andeq	r0, r1, r8, lsr lr
   10c88:	andeq	r0, r1, r8, lsr lr
   10c8c:	andeq	r0, r1, r8, lsr lr
   10c90:	andeq	r0, r1, r8, lsr lr
   10c94:	andeq	r0, r1, r8, lsr lr
   10c98:	andeq	r0, r1, r8, lsr lr
   10c9c:	andeq	r0, r1, r8, lsr lr
   10ca0:	andeq	r0, r1, r8, lsr lr
   10ca4:	andeq	r0, r1, r8, lsr lr
   10ca8:	andeq	r0, r1, r8, lsr lr
   10cac:	andeq	r0, r1, r8, lsr lr
   10cb0:	andeq	r0, r1, r8, lsr lr
   10cb4:	muleq	r1, ip, sp
   10cb8:	andeq	r0, r1, r8, lsr lr
   10cbc:	andeq	r0, r1, r8, lsr lr
   10cc0:	andeq	r0, r1, r8, lsr lr
   10cc4:	strdeq	r0, [r1], -ip
   10cc8:	andeq	r0, r1, r8, lsr lr
   10ccc:	andeq	r0, r1, r8, lsr lr
   10cd0:	andeq	r0, r1, r8, lsr lr
   10cd4:	andeq	r0, r1, r8, lsr lr
   10cd8:	andeq	r0, r1, r0, ror #26
   10cdc:	andeq	r0, r1, r4, lsr #26
   10ce0:	andeq	r0, r1, r8, lsr lr
   10ce4:	andeq	r0, r1, ip, lsl sp
   10ce8:	andeq	r0, r1, r8, lsr lr
   10cec:	andeq	r0, r1, ip, lsl #26
   10cf0:	andeq	r0, r1, r0, lsl #26
   10cf4:	andeq	r0, r1, ip, lsr #28
   10cf8:	andeq	r0, r1, r8, lsr lr
   10cfc:	andeq	r0, r1, r4, lsr #28
   10d00:	mov	ip, #1
   10d04:	str	ip, [sp, #36]	; 0x24
   10d08:	b	10be4 <abort@plt+0x68>
   10d0c:	ldr	ip, [sp, #16]
   10d10:	add	ip, ip, #1
   10d14:	str	ip, [sp, #16]
   10d18:	b	10be4 <abort@plt+0x68>
   10d1c:	add	fp, fp, #1
   10d20:	b	10be4 <abort@plt+0x68>
   10d24:	ldr	r0, [sl]
   10d28:	bl	10b64 <sg_get_num@plt>
   10d2c:	cmp	r0, #0
   10d30:	str	r0, [sp, #28]
   10d34:	bgt	10be4 <abort@plt+0x68>
   10d38:	movw	r3, #12620	; 0x314c
   10d3c:	movt	r3, #2
   10d40:	movw	r0, #7548	; 0x1d7c
   10d44:	mov	r1, #1
   10d48:	ldr	r3, [r3]
   10d4c:	movt	r0, #1
   10d50:	mov	r2, #24
   10d54:	bl	10ab0 <fwrite@plt>
   10d58:	mov	r0, #1
   10d5c:	b	10dd0 <abort@plt+0x254>
   10d60:	ldr	r0, [sl]
   10d64:	bl	10b64 <sg_get_num@plt>
   10d68:	cmp	r0, #255	; 0xff
   10d6c:	str	r0, [sp, #12]
   10d70:	bls	10be4 <abort@plt+0x68>
   10d74:	movw	r3, #12620	; 0x314c
   10d78:	movt	r3, #2
   10d7c:	movw	r2, #7500	; 0x1d4c
   10d80:	mov	r1, #1
   10d84:	ldr	r0, [r3]
   10d88:	movt	r2, #1
   10d8c:	mov	r3, #255	; 0xff
   10d90:	bl	10b34 <__fprintf_chk@plt>
   10d94:	mov	r0, #1
   10d98:	b	10dd0 <abort@plt+0x254>
   10d9c:	mov	ip, #1
   10da0:	str	ip, [sp, #24]
   10da4:	b	10be4 <abort@plt+0x68>
   10da8:	movw	r1, #12620	; 0x314c
   10dac:	movt	r1, #2
   10db0:	movw	r2, #7576	; 0x1d98
   10db4:	movw	r3, #7604	; 0x1db4
   10db8:	ldr	r0, [r1]
   10dbc:	movt	r2, #1
   10dc0:	movt	r3, #1
   10dc4:	mov	r1, #1
   10dc8:	bl	10b34 <__fprintf_chk@plt>
   10dcc:	mov	r0, #0
   10dd0:	ldr	r2, [sp, #324]	; 0x144
   10dd4:	ldr	r3, [r6]
   10dd8:	cmp	r2, r3
   10ddc:	bne	11500 <abort@plt+0x984>
   10de0:	add	sp, sp, #332	; 0x14c
   10de4:	vpop	{d8}
   10de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10dec:	ldr	ip, [sp, #20]
   10df0:	add	ip, ip, #1
   10df4:	str	ip, [sp, #20]
   10df8:	b	10be4 <abort@plt+0x68>
   10dfc:	movw	r3, #12620	; 0x314c
   10e00:	movt	r3, #2
   10e04:	movw	r0, #6508	; 0x196c
   10e08:	mov	r1, #1
   10e0c:	ldr	r3, [r3]
   10e10:	movt	r0, #1
   10e14:	movw	r2, #990	; 0x3de
   10e18:	bl	10ab0 <fwrite@plt>
   10e1c:	mov	r0, #0
   10e20:	b	10dd0 <abort@plt+0x254>
   10e24:	add	r4, r4, #1
   10e28:	b	10be4 <abort@plt+0x68>
   10e2c:	mov	ip, #1
   10e30:	str	ip, [sp, #32]
   10e34:	b	10be4 <abort@plt+0x68>
   10e38:	movw	r4, #12620	; 0x314c
   10e3c:	movt	r4, #2
   10e40:	mov	r3, r0
   10e44:	movw	r2, #7620	; 0x1dc4
   10e48:	ldr	r0, [r4]
   10e4c:	movt	r2, #1
   10e50:	mov	r1, #1
   10e54:	bl	10b34 <__fprintf_chk@plt>
   10e58:	ldr	r3, [r4]
   10e5c:	movw	r0, #6508	; 0x196c
   10e60:	mov	r1, #1
   10e64:	movt	r0, #1
   10e68:	movw	r2, #990	; 0x3de
   10e6c:	bl	10ab0 <fwrite@plt>
   10e70:	mov	r0, #1
   10e74:	b	10dd0 <abort@plt+0x254>
   10e78:	movw	r9, #12616	; 0x3148
   10e7c:	movt	r9, #2
   10e80:	ldr	r2, [r9]
   10e84:	cmp	r5, r2
   10e88:	movle	sl, #0
   10e8c:	ble	10ee4 <abort@plt+0x368>
   10e90:	add	r3, r2, #1
   10e94:	ldr	sl, [r7, r2, lsl #2]
   10e98:	cmp	r5, r3
   10e9c:	str	r3, [r9]
   10ea0:	ble	10ee4 <abort@plt+0x368>
   10ea4:	movw	r8, #12620	; 0x314c
   10ea8:	movt	r8, #2
   10eac:	ldr	r3, [r7, r3, lsl #2]
   10eb0:	movw	r2, #7656	; 0x1de8
   10eb4:	ldr	r0, [r8]
   10eb8:	movt	r2, #1
   10ebc:	mov	r1, #1
   10ec0:	movw	r4, #12620	; 0x314c
   10ec4:	bl	10b34 <__fprintf_chk@plt>
   10ec8:	ldr	r3, [r9]
   10ecc:	movt	r4, #2
   10ed0:	add	r3, r3, #1
   10ed4:	str	r3, [r9]
   10ed8:	cmp	r5, r3
   10edc:	bgt	10eac <abort@plt+0x330>
   10ee0:	b	10e58 <abort@plt+0x2dc>
   10ee4:	ldr	ip, [sp, #12]
   10ee8:	cmp	ip, #0
   10eec:	moveq	ip, #252	; 0xfc
   10ef0:	cmp	sl, #0
   10ef4:	str	ip, [sp, #12]
   10ef8:	beq	113c4 <abort@plt+0x848>
   10efc:	ldr	ip, [sp, #16]
   10f00:	cmp	ip, #0
   10f04:	bne	1104c <abort@plt+0x4d0>
   10f08:	mov	r0, sl
   10f0c:	mov	r1, #1
   10f10:	mov	r2, r4
   10f14:	bl	10b70 <sg_cmds_open_device@plt>
   10f18:	subs	r9, r0, #0
   10f1c:	blt	11248 <abort@plt+0x6cc>
   10f20:	cmp	fp, #0
   10f24:	beq	11070 <abort@plt+0x4f4>
   10f28:	movw	ip, #12620	; 0x314c
   10f2c:	ldr	fp, [sp, #12]
   10f30:	movt	ip, #2
   10f34:	mov	r7, #0
   10f38:	str	ip, [sp, #16]
   10f3c:	add	r5, sp, #68	; 0x44
   10f40:	mov	r8, #1
   10f44:	str	r6, [sp, #12]
   10f48:	b	10f54 <abort@plt+0x3d8>
   10f4c:	mov	r0, #30
   10f50:	bl	10a80 <sleep@plt>
   10f54:	mov	r1, #0
   10f58:	mov	r2, #256	; 0x100
   10f5c:	mov	r0, r5
   10f60:	bl	10b10 <memset@plt>
   10f64:	str	r8, [sp]
   10f68:	str	r4, [sp, #4]
   10f6c:	mov	r0, r9
   10f70:	ldr	r1, [sp, #24]
   10f74:	mov	r2, r5
   10f78:	mov	r3, fp
   10f7c:	bl	10b40 <sg_ll_request_sense@plt>
   10f80:	subs	sl, r0, #0
   10f84:	bne	11280 <abort@plt+0x704>
   10f88:	ldrb	ip, [sp, #75]	; 0x4b
   10f8c:	cmp	r4, #1
   10f90:	add	r6, ip, #8
   10f94:	ble	10fc4 <abort@plt+0x448>
   10f98:	ldr	ip, [sp, #16]
   10f9c:	mov	r1, #1
   10fa0:	mov	r2, #22
   10fa4:	movw	r0, #7964	; 0x1f1c
   10fa8:	movt	r0, #1
   10fac:	ldr	r3, [ip]
   10fb0:	bl	10ab0 <fwrite@plt>
   10fb4:	mov	r0, r5
   10fb8:	mov	r1, r6
   10fbc:	mov	r2, #1
   10fc0:	bl	10abc <dStrHexErr@plt>
   10fc4:	add	r2, sp, #328	; 0x148
   10fc8:	mvn	r3, #0
   10fcc:	mov	r1, r6
   10fd0:	mov	r0, r5
   10fd4:	str	r3, [r2, #-280]!	; 0xfffffee8
   10fd8:	bl	10af8 <sg_get_sense_progress_fld@plt>
   10fdc:	ldr	r3, [sp, #48]	; 0x30
   10fe0:	cmp	r3, #0
   10fe4:	blt	112e0 <abort@plt+0x764>
   10fe8:	mov	r2, #100	; 0x64
   10fec:	mov	r1, #656	; 0x290
   10ff0:	mul	r3, r2, r3
   10ff4:	add	r7, r7, #1
   10ff8:	uxth	r0, r3
   10ffc:	asr	r6, r3, #16
   11000:	bl	11694 <abort@plt+0xb18>
   11004:	movw	r1, #8032	; 0x1f60
   11008:	mov	r2, r6
   1100c:	movt	r1, #1
   11010:	mov	r3, r0
   11014:	mov	r0, #1
   11018:	bl	10b28 <__printf_chk@plt>
   1101c:	ldr	ip, [sp, #28]
   11020:	cmp	r7, ip
   11024:	blt	10f4c <abort@plt+0x3d0>
   11028:	ldr	r6, [sp, #12]
   1102c:	mov	r0, r9
   11030:	bl	10a74 <sg_cmds_close_device@plt>
   11034:	cmp	r0, #0
   11038:	blt	11328 <abort@plt+0x7ac>
   1103c:	cmp	sl, #0
   11040:	movge	r0, sl
   11044:	movlt	r0, #99	; 0x63
   11048:	b	10dd0 <abort@plt+0x254>
   1104c:	mov	r0, #1
   11050:	bl	10a5c <sg_set_binary_mode@plt>
   11054:	cmp	r0, #0
   11058:	bge	10f08 <abort@plt+0x38c>
   1105c:	movw	r0, #7712	; 0x1e20
   11060:	movt	r0, #1
   11064:	bl	10aa4 <perror@plt>
   11068:	mov	r0, #15
   1106c:	b	10dd0 <abort@plt+0x254>
   11070:	ldr	ip, [sp, #32]
   11074:	cmp	ip, #0
   11078:	bne	11310 <abort@plt+0x794>
   1107c:	add	r5, sp, #68	; 0x44
   11080:	movw	ip, #12620	; 0x314c
   11084:	movt	ip, #2
   11088:	str	ip, [sp, #44]	; 0x2c
   1108c:	mov	ip, #0
   11090:	str	ip, [sp, #40]	; 0x28
   11094:	mov	r1, #0
   11098:	mov	r2, #256	; 0x100
   1109c:	mov	r0, r5
   110a0:	bl	10b10 <memset@plt>
   110a4:	mov	r2, #1
   110a8:	mov	r0, r9
   110ac:	stm	sp, {r2, r4}
   110b0:	ldr	r1, [sp, #24]
   110b4:	mov	r2, r5
   110b8:	ldr	r3, [sp, #12]
   110bc:	bl	10b40 <sg_ll_request_sense@plt>
   110c0:	subs	sl, r0, #0
   110c4:	bne	111ec <abort@plt+0x670>
   110c8:	ldr	ip, [sp, #16]
   110cc:	ldrb	r7, [sp, #75]	; 0x4b
   110d0:	cmp	ip, #0
   110d4:	add	r7, r7, #8
   110d8:	bne	11364 <abort@plt+0x7e8>
   110dc:	ldr	ip, [sp, #20]
   110e0:	cmp	ip, #0
   110e4:	bne	11380 <abort@plt+0x804>
   110e8:	ldr	ip, [sp, #28]
   110ec:	cmp	ip, #1
   110f0:	beq	11430 <abort@plt+0x8b4>
   110f4:	ldr	ip, [sp, #40]	; 0x28
   110f8:	ldr	r2, [sp, #28]
   110fc:	add	ip, ip, #1
   11100:	str	ip, [sp, #40]	; 0x28
   11104:	cmp	ip, r2
   11108:	blt	11094 <abort@plt+0x518>
   1110c:	ldr	ip, [sp, #36]	; 0x24
   11110:	cmp	ip, #0
   11114:	beq	11138 <abort@plt+0x5bc>
   11118:	ldrb	r4, [sp, #75]	; 0x4b
   1111c:	mov	r0, r5
   11120:	add	r4, r4, #8
   11124:	mov	r1, r4
   11128:	bl	10b58 <sg_err_category_sense@plt>
   1112c:	cmp	r0, #20
   11130:	mov	sl, r0
   11134:	beq	114c8 <abort@plt+0x94c>
   11138:	ldr	ip, [sp, #32]
   1113c:	cmp	ip, #0
   11140:	beq	1102c <abort@plt+0x4b0>
   11144:	ldr	r3, [sp, #52]	; 0x34
   11148:	cmp	r3, #0
   1114c:	bne	1115c <abort@plt+0x5e0>
   11150:	ldr	r3, [sp, #56]	; 0x38
   11154:	cmp	r3, #0
   11158:	beq	1102c <abort@plt+0x4b0>
   1115c:	mov	r1, #0
   11160:	mov	r0, r8
   11164:	bl	10ac8 <gettimeofday@plt>
   11168:	ldr	r3, [sp, #56]	; 0x38
   1116c:	ldr	ip, [sp, #64]	; 0x40
   11170:	vldr	d7, [pc, #984]	; 11550 <abort@plt+0x9d4>
   11174:	ldr	r2, [sp, #60]	; 0x3c
   11178:	movw	r1, #8136	; 0x1fc8
   1117c:	subs	ip, ip, r3
   11180:	ldr	r3, [sp, #52]	; 0x34
   11184:	addmi	ip, ip, #999424	; 0xf4000
   11188:	mov	r0, #1
   1118c:	rsb	r2, r3, r2
   11190:	addmi	ip, ip, #576	; 0x240
   11194:	submi	r2, r2, #1
   11198:	movt	r1, #1
   1119c:	mov	r3, ip
   111a0:	vmov	s11, r2
   111a4:	vcvt.f64.s32	d8, s11
   111a8:	vmov	s11, ip
   111ac:	vcvt.f64.s32	d6, s11
   111b0:	vmla.f64	d8, d6, d7
   111b4:	bl	10b28 <__printf_chk@plt>
   111b8:	vldr	d7, [pc, #920]	; 11558 <abort@plt+0x9dc>
   111bc:	vcmpe.f64	d8, d7
   111c0:	vmrs	APSR_nzcv, fpscr
   111c4:	ble	113b8 <abort@plt+0x83c>
   111c8:	vldr	s12, [sp, #28]
   111cc:	vcvt.f64.s32	d7, s12
   111d0:	movw	r1, #8180	; 0x1ff4
   111d4:	mov	r0, #1
   111d8:	movt	r1, #1
   111dc:	vdiv.f64	d6, d7, d8
   111e0:	vmov	r2, r3, d6
   111e4:	bl	10b28 <__printf_chk@plt>
   111e8:	b	1102c <abort@plt+0x4b0>
   111ec:	cmp	sl, #9
   111f0:	beq	113e8 <abort@plt+0x86c>
   111f4:	cmp	sl, #5
   111f8:	beq	1140c <abort@plt+0x890>
   111fc:	cmp	sl, #11
   11200:	beq	11394 <abort@plt+0x818>
   11204:	movw	r5, #12620	; 0x314c
   11208:	movt	r5, #2
   1120c:	movw	r0, #7872	; 0x1ec0
   11210:	mov	r1, #1
   11214:	ldr	r3, [r5]
   11218:	movt	r0, #1
   1121c:	mov	r2, #42	; 0x2a
   11220:	bl	10ab0 <fwrite@plt>
   11224:	cmp	r4, #0
   11228:	bne	11138 <abort@plt+0x5bc>
   1122c:	ldr	r3, [r5]
   11230:	movw	r0, #7916	; 0x1eec
   11234:	mov	r1, #1
   11238:	mov	r2, #45	; 0x2d
   1123c:	movt	r0, #1
   11240:	bl	10ab0 <fwrite@plt>
   11244:	b	11138 <abort@plt+0x5bc>
   11248:	movw	r3, #12620	; 0x314c
   1124c:	movt	r3, #2
   11250:	rsb	r0, r9, #0
   11254:	ldr	r4, [r3]
   11258:	bl	10b4c <safe_strerror@plt>
   1125c:	mov	r3, sl
   11260:	movw	r2, #7732	; 0x1e34
   11264:	mov	r1, #1
   11268:	movt	r2, #1
   1126c:	str	r0, [sp]
   11270:	mov	r0, r4
   11274:	bl	10b34 <__fprintf_chk@plt>
   11278:	mov	r0, #15
   1127c:	b	10dd0 <abort@plt+0x254>
   11280:	cmp	sl, #9
   11284:	ldr	r6, [sp, #12]
   11288:	beq	11528 <abort@plt+0x9ac>
   1128c:	cmp	sl, #5
   11290:	beq	11504 <abort@plt+0x988>
   11294:	cmp	sl, #11
   11298:	beq	114a4 <abort@plt+0x928>
   1129c:	movw	r5, #12620	; 0x314c
   112a0:	movt	r5, #2
   112a4:	movw	r0, #7872	; 0x1ec0
   112a8:	mov	r1, #1
   112ac:	ldr	r3, [r5]
   112b0:	movt	r0, #1
   112b4:	mov	r2, #42	; 0x2a
   112b8:	bl	10ab0 <fwrite@plt>
   112bc:	cmp	r4, #0
   112c0:	bne	1102c <abort@plt+0x4b0>
   112c4:	ldr	r3, [r5]
   112c8:	movw	r0, #7916	; 0x1eec
   112cc:	mov	r1, #1
   112d0:	mov	r2, #45	; 0x2d
   112d4:	movt	r0, #1
   112d8:	bl	10ab0 <fwrite@plt>
   112dc:	b	1102c <abort@plt+0x4b0>
   112e0:	cmp	r4, #1
   112e4:	ldr	r6, [sp, #12]
   112e8:	ble	1102c <abort@plt+0x4b0>
   112ec:	movw	r1, #12620	; 0x314c
   112f0:	movt	r1, #2
   112f4:	add	r3, r7, #1
   112f8:	movw	r2, #7988	; 0x1f34
   112fc:	ldr	r0, [r1]
   11300:	movt	r2, #1
   11304:	mov	r1, #1
   11308:	bl	10b34 <__fprintf_chk@plt>
   1130c:	b	1102c <abort@plt+0x4b0>
   11310:	mov	r1, fp
   11314:	add	r0, sp, #52	; 0x34
   11318:	str	fp, [sp, #52]	; 0x34
   1131c:	str	fp, [sp, #56]	; 0x38
   11320:	bl	10ac8 <gettimeofday@plt>
   11324:	b	1107c <abort@plt+0x500>
   11328:	movw	r3, #12620	; 0x314c
   1132c:	movt	r3, #2
   11330:	rsb	r0, r0, #0
   11334:	ldr	r4, [r3]
   11338:	bl	10b4c <safe_strerror@plt>
   1133c:	movw	r2, #8204	; 0x200c
   11340:	mov	r1, #1
   11344:	movt	r2, #1
   11348:	mov	r3, r0
   1134c:	mov	r0, r4
   11350:	bl	10b34 <__fprintf_chk@plt>
   11354:	cmp	sl, #0
   11358:	bne	1103c <abort@plt+0x4c0>
   1135c:	mov	r0, #15
   11360:	b	10dd0 <abort@plt+0x254>
   11364:	mov	fp, sl
   11368:	ldrb	r0, [r5, fp]
   1136c:	add	fp, fp, #1
   11370:	bl	10b1c <putchar@plt>
   11374:	cmp	r7, fp
   11378:	bgt	11368 <abort@plt+0x7ec>
   1137c:	b	110f4 <abort@plt+0x578>
   11380:	mov	r1, r7
   11384:	mov	r0, r5
   11388:	mov	r2, #1
   1138c:	bl	10a68 <dStrHex@plt>
   11390:	b	110f4 <abort@plt+0x578>
   11394:	movw	r3, #12620	; 0x314c
   11398:	movt	r3, #2
   1139c:	movw	r0, #7840	; 0x1ea0
   113a0:	mov	r1, #1
   113a4:	ldr	r3, [r3]
   113a8:	mov	r2, #31
   113ac:	movt	r0, #1
   113b0:	bl	10ab0 <fwrite@plt>
   113b4:	b	11138 <abort@plt+0x5bc>
   113b8:	mov	r0, #10
   113bc:	bl	10b1c <putchar@plt>
   113c0:	b	1102c <abort@plt+0x4b0>
   113c4:	movw	r4, #12620	; 0x314c
   113c8:	movt	r4, #2
   113cc:	movw	r0, #7688	; 0x1e08
   113d0:	mov	r1, #1
   113d4:	ldr	r3, [r4]
   113d8:	mov	r2, #21
   113dc:	movt	r0, #1
   113e0:	bl	10ab0 <fwrite@plt>
   113e4:	b	10e58 <abort@plt+0x2dc>
   113e8:	movw	r3, #12620	; 0x314c
   113ec:	movt	r3, #2
   113f0:	movw	r0, #7768	; 0x1e58
   113f4:	mov	r1, #1
   113f8:	ldr	r3, [r3]
   113fc:	mov	r2, #36	; 0x24
   11400:	movt	r0, #1
   11404:	bl	10ab0 <fwrite@plt>
   11408:	b	11138 <abort@plt+0x5bc>
   1140c:	movw	r3, #12620	; 0x314c
   11410:	movt	r3, #2
   11414:	movw	r0, #7808	; 0x1e80
   11418:	mov	r1, #1
   1141c:	ldr	r3, [r3]
   11420:	mov	r2, #31
   11424:	movt	r0, #1
   11428:	bl	10ab0 <fwrite@plt>
   1142c:	b	11138 <abort@plt+0x5bc>
   11430:	mov	r1, ip
   11434:	ldr	ip, [sp, #44]	; 0x2c
   11438:	mov	r2, #37	; 0x25
   1143c:	movw	r0, #8072	; 0x1f88
   11440:	movt	r0, #1
   11444:	ldr	r3, [ip]
   11448:	movw	ip, #12620	; 0x314c
   1144c:	str	ip, [sp, #8]
   11450:	bl	10ab0 <fwrite@plt>
   11454:	mov	r0, sl
   11458:	mov	r1, r5
   1145c:	mov	r2, r7
   11460:	mov	r3, sl
   11464:	bl	10a98 <sg_print_sense@plt>
   11468:	ldr	ip, [sp, #8]
   1146c:	cmp	r4, #1
   11470:	movt	ip, #2
   11474:	ble	110f4 <abort@plt+0x578>
   11478:	ldr	r1, [sp, #28]
   1147c:	mov	r2, #23
   11480:	ldr	r3, [ip]
   11484:	movw	r0, #8112	; 0x1fb0
   11488:	movt	r0, #1
   1148c:	bl	10ab0 <fwrite@plt>
   11490:	mov	r0, r5
   11494:	mov	r1, r7
   11498:	ldr	r2, [sp, #28]
   1149c:	bl	10abc <dStrHexErr@plt>
   114a0:	b	1110c <abort@plt+0x590>
   114a4:	movw	r3, #12620	; 0x314c
   114a8:	movt	r3, #2
   114ac:	movw	r0, #7840	; 0x1ea0
   114b0:	mov	r1, #1
   114b4:	ldr	r3, [r3]
   114b8:	mov	r2, #31
   114bc:	movt	r0, #1
   114c0:	bl	10ab0 <fwrite@plt>
   114c4:	b	1102c <abort@plt+0x4b0>
   114c8:	mov	r0, r5
   114cc:	mov	r1, r4
   114d0:	mov	r2, r8
   114d4:	bl	10b04 <sg_scsi_normalize_sense@plt>
   114d8:	cmp	r0, #0
   114dc:	beq	11138 <abort@plt+0x5bc>
   114e0:	ldrb	r3, [sp, #62]	; 0x3e
   114e4:	cmp	r3, #0
   114e8:	bne	11138 <abort@plt+0x5bc>
   114ec:	ldrb	sl, [sp, #63]	; 0x3f
   114f0:	cmp	sl, #0
   114f4:	movne	sl, #20
   114f8:	moveq	sl, #0
   114fc:	b	11138 <abort@plt+0x5bc>
   11500:	bl	10a8c <__stack_chk_fail@plt>
   11504:	movw	r3, #12620	; 0x314c
   11508:	movt	r3, #2
   1150c:	movw	r0, #7808	; 0x1e80
   11510:	mov	r1, #1
   11514:	ldr	r3, [r3]
   11518:	mov	r2, #31
   1151c:	movt	r0, #1
   11520:	bl	10ab0 <fwrite@plt>
   11524:	b	1102c <abort@plt+0x4b0>
   11528:	movw	r3, #12620	; 0x314c
   1152c:	movt	r3, #2
   11530:	movw	r0, #7768	; 0x1e58
   11534:	mov	r1, #1
   11538:	ldr	r3, [r3]
   1153c:	mov	r2, #36	; 0x24
   11540:	movt	r0, #1
   11544:	bl	10ab0 <fwrite@plt>
   11548:	b	1102c <abort@plt+0x4b0>
   1154c:	nop	{0}
   11550:	adcsge	lr, r5, sp, lsl #27
   11554:	mrccc	6, 5, ip, cr0, cr7, {7}
   11558:	stmiahi	r3!, {r0, r4, r5, r6, r7, fp, sp, lr}^
   1155c:	mcrcc	8, 7, pc, cr4, cr5, {5}	; <UNPREDICTABLE>
   11560:	mov	fp, #0
   11564:	mov	lr, #0
   11568:	pop	{r1}		; (ldr r1, [sp], #4)
   1156c:	mov	r2, sp
   11570:	push	{r2}		; (str r2, [sp, #-4]!)
   11574:	push	{r0}		; (str r0, [sp, #-4]!)
   11578:	ldr	ip, [pc, #16]	; 11590 <abort@plt+0xa14>
   1157c:	push	{ip}		; (str ip, [sp, #-4]!)
   11580:	ldr	r0, [pc, #12]	; 11594 <abort@plt+0xa18>
   11584:	ldr	r3, [pc, #12]	; 11598 <abort@plt+0xa1c>
   11588:	bl	10ad4 <__libc_start_main@plt>
   1158c:	bl	10b7c <abort@plt>
   11590:	andeq	r1, r1, r8, asr #18
   11594:	andeq	r0, r1, r8, lsl #23
   11598:	andeq	r1, r1, r4, ror #17
   1159c:	ldr	r3, [pc, #20]	; 115b8 <abort@plt+0xa3c>
   115a0:	ldr	r2, [pc, #20]	; 115bc <abort@plt+0xa40>
   115a4:	add	r3, pc, r3
   115a8:	ldr	r2, [r3, r2]
   115ac:	cmp	r2, #0
   115b0:	bxeq	lr
   115b4:	b	10ae0 <__gmon_start__@plt>
   115b8:	andeq	r1, r1, r4, asr sl
   115bc:	andeq	r0, r0, r4, ror r0
   115c0:	push	{r3, lr}
   115c4:	movw	r0, #12604	; 0x313c
   115c8:	ldr	r3, [pc, #36]	; 115f4 <abort@plt+0xa78>
   115cc:	movt	r0, #2
   115d0:	rsb	r3, r0, r3
   115d4:	cmp	r3, #6
   115d8:	popls	{r3, pc}
   115dc:	movw	r3, #0
   115e0:	movt	r3, #0
   115e4:	cmp	r3, #0
   115e8:	popeq	{r3, pc}
   115ec:	blx	r3
   115f0:	pop	{r3, pc}
   115f4:	andeq	r3, r2, pc, lsr r1
   115f8:	push	{r3, lr}
   115fc:	movw	r0, #12604	; 0x313c
   11600:	movw	r3, #12604	; 0x313c
   11604:	movt	r0, #2
   11608:	movt	r3, #2
   1160c:	rsb	r3, r0, r3
   11610:	asr	r3, r3, #2
   11614:	add	r3, r3, r3, lsr #31
   11618:	asrs	r1, r3, #1
   1161c:	popeq	{r3, pc}
   11620:	movw	r2, #0
   11624:	movt	r2, #0
   11628:	cmp	r2, #0
   1162c:	popeq	{r3, pc}
   11630:	blx	r2
   11634:	pop	{r3, pc}
   11638:	push	{r4, lr}
   1163c:	movw	r4, #12628	; 0x3154
   11640:	movt	r4, #2
   11644:	ldrb	r3, [r4]
   11648:	cmp	r3, #0
   1164c:	popne	{r4, pc}
   11650:	bl	115c0 <abort@plt+0xa44>
   11654:	mov	r3, #1
   11658:	strb	r3, [r4]
   1165c:	pop	{r4, pc}
   11660:	movw	r0, #12028	; 0x2efc
   11664:	movt	r0, #2
   11668:	push	{r3, lr}
   1166c:	ldr	r3, [r0]
   11670:	cmp	r3, #0
   11674:	beq	1168c <abort@plt+0xb10>
   11678:	movw	r3, #0
   1167c:	movt	r3, #0
   11680:	cmp	r3, #0
   11684:	beq	1168c <abort@plt+0xb10>
   11688:	blx	r3
   1168c:	pop	{r3, lr}
   11690:	b	115f8 <abort@plt+0xa7c>
   11694:	cmp	r1, #0
   11698:	beq	118a4 <abort@plt+0xd28>
   1169c:	eor	ip, r0, r1
   116a0:	rsbmi	r1, r1, #0
   116a4:	subs	r2, r1, #1
   116a8:	beq	11870 <abort@plt+0xcf4>
   116ac:	movs	r3, r0
   116b0:	rsbmi	r3, r0, #0
   116b4:	cmp	r3, r1
   116b8:	bls	1187c <abort@plt+0xd00>
   116bc:	tst	r1, r2
   116c0:	beq	1188c <abort@plt+0xd10>
   116c4:	clz	r2, r3
   116c8:	clz	r0, r1
   116cc:	sub	r2, r0, r2
   116d0:	rsbs	r2, r2, #31
   116d4:	addne	r2, r2, r2, lsl #1
   116d8:	mov	r0, #0
   116dc:	addne	pc, pc, r2, lsl #2
   116e0:	nop	{0}
   116e4:	cmp	r3, r1, lsl #31
   116e8:	adc	r0, r0, r0
   116ec:	subcs	r3, r3, r1, lsl #31
   116f0:	cmp	r3, r1, lsl #30
   116f4:	adc	r0, r0, r0
   116f8:	subcs	r3, r3, r1, lsl #30
   116fc:	cmp	r3, r1, lsl #29
   11700:	adc	r0, r0, r0
   11704:	subcs	r3, r3, r1, lsl #29
   11708:	cmp	r3, r1, lsl #28
   1170c:	adc	r0, r0, r0
   11710:	subcs	r3, r3, r1, lsl #28
   11714:	cmp	r3, r1, lsl #27
   11718:	adc	r0, r0, r0
   1171c:	subcs	r3, r3, r1, lsl #27
   11720:	cmp	r3, r1, lsl #26
   11724:	adc	r0, r0, r0
   11728:	subcs	r3, r3, r1, lsl #26
   1172c:	cmp	r3, r1, lsl #25
   11730:	adc	r0, r0, r0
   11734:	subcs	r3, r3, r1, lsl #25
   11738:	cmp	r3, r1, lsl #24
   1173c:	adc	r0, r0, r0
   11740:	subcs	r3, r3, r1, lsl #24
   11744:	cmp	r3, r1, lsl #23
   11748:	adc	r0, r0, r0
   1174c:	subcs	r3, r3, r1, lsl #23
   11750:	cmp	r3, r1, lsl #22
   11754:	adc	r0, r0, r0
   11758:	subcs	r3, r3, r1, lsl #22
   1175c:	cmp	r3, r1, lsl #21
   11760:	adc	r0, r0, r0
   11764:	subcs	r3, r3, r1, lsl #21
   11768:	cmp	r3, r1, lsl #20
   1176c:	adc	r0, r0, r0
   11770:	subcs	r3, r3, r1, lsl #20
   11774:	cmp	r3, r1, lsl #19
   11778:	adc	r0, r0, r0
   1177c:	subcs	r3, r3, r1, lsl #19
   11780:	cmp	r3, r1, lsl #18
   11784:	adc	r0, r0, r0
   11788:	subcs	r3, r3, r1, lsl #18
   1178c:	cmp	r3, r1, lsl #17
   11790:	adc	r0, r0, r0
   11794:	subcs	r3, r3, r1, lsl #17
   11798:	cmp	r3, r1, lsl #16
   1179c:	adc	r0, r0, r0
   117a0:	subcs	r3, r3, r1, lsl #16
   117a4:	cmp	r3, r1, lsl #15
   117a8:	adc	r0, r0, r0
   117ac:	subcs	r3, r3, r1, lsl #15
   117b0:	cmp	r3, r1, lsl #14
   117b4:	adc	r0, r0, r0
   117b8:	subcs	r3, r3, r1, lsl #14
   117bc:	cmp	r3, r1, lsl #13
   117c0:	adc	r0, r0, r0
   117c4:	subcs	r3, r3, r1, lsl #13
   117c8:	cmp	r3, r1, lsl #12
   117cc:	adc	r0, r0, r0
   117d0:	subcs	r3, r3, r1, lsl #12
   117d4:	cmp	r3, r1, lsl #11
   117d8:	adc	r0, r0, r0
   117dc:	subcs	r3, r3, r1, lsl #11
   117e0:	cmp	r3, r1, lsl #10
   117e4:	adc	r0, r0, r0
   117e8:	subcs	r3, r3, r1, lsl #10
   117ec:	cmp	r3, r1, lsl #9
   117f0:	adc	r0, r0, r0
   117f4:	subcs	r3, r3, r1, lsl #9
   117f8:	cmp	r3, r1, lsl #8
   117fc:	adc	r0, r0, r0
   11800:	subcs	r3, r3, r1, lsl #8
   11804:	cmp	r3, r1, lsl #7
   11808:	adc	r0, r0, r0
   1180c:	subcs	r3, r3, r1, lsl #7
   11810:	cmp	r3, r1, lsl #6
   11814:	adc	r0, r0, r0
   11818:	subcs	r3, r3, r1, lsl #6
   1181c:	cmp	r3, r1, lsl #5
   11820:	adc	r0, r0, r0
   11824:	subcs	r3, r3, r1, lsl #5
   11828:	cmp	r3, r1, lsl #4
   1182c:	adc	r0, r0, r0
   11830:	subcs	r3, r3, r1, lsl #4
   11834:	cmp	r3, r1, lsl #3
   11838:	adc	r0, r0, r0
   1183c:	subcs	r3, r3, r1, lsl #3
   11840:	cmp	r3, r1, lsl #2
   11844:	adc	r0, r0, r0
   11848:	subcs	r3, r3, r1, lsl #2
   1184c:	cmp	r3, r1, lsl #1
   11850:	adc	r0, r0, r0
   11854:	subcs	r3, r3, r1, lsl #1
   11858:	cmp	r3, r1
   1185c:	adc	r0, r0, r0
   11860:	subcs	r3, r3, r1
   11864:	cmp	ip, #0
   11868:	rsbmi	r0, r0, #0
   1186c:	bx	lr
   11870:	teq	ip, r0
   11874:	rsbmi	r0, r0, #0
   11878:	bx	lr
   1187c:	movcc	r0, #0
   11880:	asreq	r0, ip, #31
   11884:	orreq	r0, r0, #1
   11888:	bx	lr
   1188c:	clz	r2, r1
   11890:	rsb	r2, r2, #31
   11894:	cmp	ip, #0
   11898:	lsr	r0, r3, r2
   1189c:	rsbmi	r0, r0, #0
   118a0:	bx	lr
   118a4:	cmp	r0, #0
   118a8:	mvngt	r0, #-2147483648	; 0x80000000
   118ac:	movlt	r0, #-2147483648	; 0x80000000
   118b0:	b	118d4 <abort@plt+0xd58>
   118b4:	cmp	r1, #0
   118b8:	beq	118a4 <abort@plt+0xd28>
   118bc:	push	{r0, r1, lr}
   118c0:	bl	1169c <abort@plt+0xb20>
   118c4:	pop	{r1, r2, lr}
   118c8:	mul	r3, r2, r0
   118cc:	sub	r1, r1, r3
   118d0:	bx	lr
   118d4:	push	{r1, lr}
   118d8:	mov	r0, #8
   118dc:	bl	10a50 <raise@plt>
   118e0:	pop	{r1, pc}
   118e4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   118e8:	mov	r7, r0
   118ec:	ldr	r6, [pc, #76]	; 11940 <abort@plt+0xdc4>
   118f0:	mov	r8, r1
   118f4:	ldr	r5, [pc, #72]	; 11944 <abort@plt+0xdc8>
   118f8:	mov	r9, r2
   118fc:	add	r6, pc, r6
   11900:	bl	10a30 <_init@@Base>
   11904:	add	r5, pc, r5
   11908:	rsb	r6, r5, r6
   1190c:	asrs	r6, r6, #2
   11910:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11914:	sub	r5, r5, #4
   11918:	mov	r4, #0
   1191c:	add	r4, r4, #1
   11920:	ldr	r3, [r5, #4]!
   11924:	mov	r0, r7
   11928:	mov	r1, r8
   1192c:	mov	r2, r9
   11930:	blx	r3
   11934:	cmp	r4, r6
   11938:	bne	1191c <abort@plt+0xda0>
   1193c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11940:	strdeq	r1, [r1], -r4
   11944:	andeq	r1, r1, r8, ror #11
   11948:	bx	lr

Disassembly of section .fini:

0001194c <_fini@@Base>:
   1194c:	push	{r3, lr}
   11950:	pop	{r3, pc}
