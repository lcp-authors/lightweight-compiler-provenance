
centos-preinstalled/mountpoint:     file format elf32-littlearm


Disassembly of section .init:

00010c68 <_init@@Base>:
   10c68:	push	{r3, lr}
   10c6c:	bl	11270 <__snprintf_chk@plt+0x444>
   10c70:	pop	{r3, pc}

Disassembly of section .plt:

00010c74 <mnt_new_table_from_file@plt-0x14>:
   10c74:	push	{lr}		; (str lr, [sp, #-4]!)
   10c78:	ldr	lr, [pc, #4]	; 10c84 <_init@@Base+0x1c>
   10c7c:	add	lr, pc, lr
   10c80:	ldr	pc, [lr, #8]!
   10c84:	andeq	r1, r1, ip, ror r3

00010c88 <mnt_new_table_from_file@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #69632	; 0x11000
   10c90:	ldr	pc, [ip, #892]!	; 0x37c

00010c94 <free@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #69632	; 0x11000
   10c9c:	ldr	pc, [ip, #884]!	; 0x374

00010ca0 <ferror@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #69632	; 0x11000
   10ca8:	ldr	pc, [ip, #876]!	; 0x36c

00010cac <_exit@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #69632	; 0x11000
   10cb4:	ldr	pc, [ip, #868]!	; 0x364

00010cb8 <dcgettext@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #69632	; 0x11000
   10cc0:	ldr	pc, [ip, #860]!	; 0x35c

00010cc4 <__stack_chk_fail@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #69632	; 0x11000
   10ccc:	ldr	pc, [ip, #852]!	; 0x354

00010cd0 <textdomain@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #69632	; 0x11000
   10cd8:	ldr	pc, [ip, #844]!	; 0x34c

00010cdc <err@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #69632	; 0x11000
   10ce4:	ldr	pc, [ip, #836]!	; 0x344

00010ce8 <__fpending@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #69632	; 0x11000
   10cf0:	ldr	pc, [ip, #828]!	; 0x33c

00010cf4 <mnt_fs_get_target@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #69632	; 0x11000
   10cfc:	ldr	pc, [ip, #820]!	; 0x334

00010d00 <__libc_start_main@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #69632	; 0x11000
   10d08:	ldr	pc, [ip, #812]!	; 0x32c

00010d0c <mnt_free_cache@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #69632	; 0x11000
   10d14:	ldr	pc, [ip, #804]!	; 0x324

00010d18 <__gmon_start__@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #69632	; 0x11000
   10d20:	ldr	pc, [ip, #796]!	; 0x31c

00010d24 <getopt_long@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #69632	; 0x11000
   10d2c:	ldr	pc, [ip, #788]!	; 0x314

00010d30 <exit@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #69632	; 0x11000
   10d38:	ldr	pc, [ip, #780]!	; 0x30c

00010d3c <warnx@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #69632	; 0x11000
   10d44:	ldr	pc, [ip, #772]!	; 0x304

00010d48 <mnt_init_debug@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #69632	; 0x11000
   10d50:	ldr	pc, [ip, #764]!	; 0x2fc

00010d54 <mnt_new_cache@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #69632	; 0x11000
   10d5c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d60 <__errno_location@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #69632	; 0x11000
   10d68:	ldr	pc, [ip, #748]!	; 0x2ec

00010d6c <mnt_resolve_path@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #69632	; 0x11000
   10d74:	ldr	pc, [ip, #740]!	; 0x2e4

00010d78 <__cxa_atexit@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #69632	; 0x11000
   10d80:	ldr	pc, [ip, #732]!	; 0x2dc

00010d84 <__printf_chk@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #69632	; 0x11000
   10d8c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d90 <mnt_table_set_cache@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #69632	; 0x11000
   10d98:	ldr	pc, [ip, #716]!	; 0x2cc

00010d9c <__fprintf_chk@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #69632	; 0x11000
   10da4:	ldr	pc, [ip, #708]!	; 0x2c4

00010da8 <mnt_table_find_target@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #69632	; 0x11000
   10db0:	ldr	pc, [ip, #700]!	; 0x2bc

00010db4 <fclose@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #69632	; 0x11000
   10dbc:	ldr	pc, [ip, #692]!	; 0x2b4

00010dc0 <mnt_fs_get_devno@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #69632	; 0x11000
   10dc8:	ldr	pc, [ip, #684]!	; 0x2ac

00010dcc <setlocale@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #69632	; 0x11000
   10dd4:	ldr	pc, [ip, #676]!	; 0x2a4

00010dd8 <errx@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #69632	; 0x11000
   10de0:	ldr	pc, [ip, #668]!	; 0x29c

00010de4 <warn@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #69632	; 0x11000
   10dec:	ldr	pc, [ip, #660]!	; 0x294

00010df0 <bindtextdomain@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #69632	; 0x11000
   10df8:	ldr	pc, [ip, #652]!	; 0x28c

00010dfc <mnt_free_table@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #69632	; 0x11000
   10e04:	ldr	pc, [ip, #644]!	; 0x284

00010e08 <__xstat64@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #69632	; 0x11000
   10e10:	ldr	pc, [ip, #636]!	; 0x27c

00010e14 <fputs@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #69632	; 0x11000
   10e1c:	ldr	pc, [ip, #628]!	; 0x274

00010e20 <abort@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #69632	; 0x11000
   10e28:	ldr	pc, [ip, #620]!	; 0x26c

00010e2c <__snprintf_chk@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #69632	; 0x11000
   10e34:	ldr	pc, [ip, #612]!	; 0x264

Disassembly of section .text:

00010e38 <.text>:
   10e38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e3c:	movw	r4, #8368	; 0x20b0
   10e40:	movt	r4, #2
   10e44:	sub	sp, sp, #140	; 0x8c
   10e48:	mov	r8, r1
   10e4c:	mov	r7, r0
   10e50:	ldr	r3, [r4]
   10e54:	movw	r1, #6264	; 0x1878
   10e58:	mov	r0, #6
   10e5c:	movt	r1, #1
   10e60:	mov	r5, #0
   10e64:	movw	r6, #8392	; 0x20c8
   10e68:	str	r3, [sp, #132]	; 0x84
   10e6c:	bl	10dcc <setlocale@plt>
   10e70:	movw	r0, #6720	; 0x1a40
   10e74:	movw	r1, #6732	; 0x1a4c
   10e78:	movt	r0, #1
   10e7c:	movt	r1, #1
   10e80:	bl	10df0 <bindtextdomain@plt>
   10e84:	movw	r0, #6720	; 0x1a40
   10e88:	movt	r0, #1
   10e8c:	movt	r6, #2
   10e90:	bl	10cd0 <textdomain@plt>
   10e94:	movw	r0, #5680	; 0x1630
   10e98:	movt	r0, #1
   10e9c:	mov	sl, r5
   10ea0:	bl	117d4 <__snprintf_chk@plt+0x9a8>
   10ea4:	mov	r0, r5
   10ea8:	bl	10d48 <mnt_init_debug@plt>
   10eac:	mov	r9, r5
   10eb0:	mov	fp, #1
   10eb4:	str	r9, [sp]
   10eb8:	movw	r2, #6784	; 0x1a80
   10ebc:	movw	r3, #6160	; 0x1810
   10ec0:	movt	r2, #1
   10ec4:	movt	r3, #1
   10ec8:	mov	r0, r7
   10ecc:	mov	r1, r8
   10ed0:	bl	10d24 <getopt_long@plt>
   10ed4:	cmn	r0, #1
   10ed8:	mov	r3, r0
   10edc:	beq	11004 <__snprintf_chk@plt+0x1d8>
   10ee0:	sub	r3, r3, #86	; 0x56
   10ee4:	cmp	r3, #34	; 0x22
   10ee8:	ldrls	pc, [pc, r3, lsl #2]
   10eec:	b	10ff4 <__snprintf_chk@plt+0x1c8>
   10ef0:	andeq	r0, r1, r4, lsr #31
   10ef4:	strdeq	r0, [r1], -r4
   10ef8:	strdeq	r0, [r1], -r4
   10efc:	strdeq	r0, [r1], -r4
   10f00:	strdeq	r0, [r1], -r4
   10f04:	strdeq	r0, [r1], -r4
   10f08:	strdeq	r0, [r1], -r4
   10f0c:	strdeq	r0, [r1], -r4
   10f10:	strdeq	r0, [r1], -r4
   10f14:	strdeq	r0, [r1], -r4
   10f18:	strdeq	r0, [r1], -r4
   10f1c:	strdeq	r0, [r1], -r4
   10f20:	strdeq	r0, [r1], -r4
   10f24:	strdeq	r0, [r1], -r4
   10f28:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   10f2c:	strdeq	r0, [r1], -r4
   10f30:	strdeq	r0, [r1], -r4
   10f34:	strdeq	r0, [r1], -r4
   10f38:	andeq	r0, r1, ip, lsl #31
   10f3c:	strdeq	r0, [r1], -r4
   10f40:	strdeq	r0, [r1], -r4
   10f44:	strdeq	r0, [r1], -r4
   10f48:	strdeq	r0, [r1], -r4
   10f4c:	strdeq	r0, [r1], -r4
   10f50:	strdeq	r0, [r1], -r4
   10f54:	strdeq	r0, [r1], -r4
   10f58:	strdeq	r0, [r1], -r4
   10f5c:	andeq	r0, r1, r4, lsl #31
   10f60:	strdeq	r0, [r1], -r4
   10f64:	strdeq	r0, [r1], -r4
   10f68:	strdeq	r0, [r1], -r4
   10f6c:	strdeq	r0, [r1], -r4
   10f70:	strdeq	r0, [r1], -r4
   10f74:	strdeq	r0, [r1], -r4
   10f78:	andeq	r0, r1, ip, ror pc
   10f7c:	mov	r5, #1
   10f80:	b	10eb4 <__snprintf_chk@plt+0x88>
   10f84:	str	fp, [r6]
   10f88:	b	10eb4 <__snprintf_chk@plt+0x88>
   10f8c:	movw	r3, #8384	; 0x20c0
   10f90:	movt	r3, #2
   10f94:	ldr	r0, [r3]
   10f98:	bl	11368 <__snprintf_chk@plt+0x53c>
   10f9c:	mov	sl, #1
   10fa0:	b	10eb4 <__snprintf_chk@plt+0x88>
   10fa4:	mov	r2, #5
   10fa8:	movw	r1, #6752	; 0x1a60
   10fac:	mov	r0, #0
   10fb0:	movt	r1, #1
   10fb4:	bl	10cb8 <dcgettext@plt>
   10fb8:	movw	r2, #8360	; 0x20a8
   10fbc:	movt	r2, #2
   10fc0:	movw	r3, #6764	; 0x1a6c
   10fc4:	movt	r3, #1
   10fc8:	ldr	r2, [r2]
   10fcc:	mov	r1, r0
   10fd0:	mov	r0, #1
   10fd4:	bl	10d84 <__printf_chk@plt>
   10fd8:	mov	r0, #0
   10fdc:	ldr	r2, [sp, #132]	; 0x84
   10fe0:	ldr	r3, [r4]
   10fe4:	cmp	r2, r3
   10fe8:	bne	111b8 <__snprintf_chk@plt+0x38c>
   10fec:	add	sp, sp, #140	; 0x8c
   10ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ff4:	movw	r3, #8380	; 0x20bc
   10ff8:	movt	r3, #2
   10ffc:	ldr	r0, [r3]
   11000:	bl	11368 <__snprintf_chk@plt+0x53c>
   11004:	movw	ip, #8376	; 0x20b8
   11008:	movt	ip, #2
   1100c:	ldr	r2, [ip]
   11010:	add	r1, r2, #1
   11014:	cmp	r1, r7
   11018:	bne	10ff4 <__snprintf_chk@plt+0x1c8>
   1101c:	ldr	r6, [r8, r2, lsl #2]
   11020:	mov	r0, #3
   11024:	add	r2, sp, #24
   11028:	str	r7, [ip]
   1102c:	str	r3, [sp, #12]
   11030:	mov	r1, r6
   11034:	bl	10e08 <__xstat64@plt>
   11038:	ldr	r3, [sp, #12]
   1103c:	subs	r7, r0, #0
   11040:	beq	11060 <__snprintf_chk@plt+0x234>
   11044:	movw	r3, #8392	; 0x20c8
   11048:	movt	r3, #2
   1104c:	ldr	r3, [r3]
   11050:	cmp	r3, #0
   11054:	beq	11220 <__snprintf_chk@plt+0x3f4>
   11058:	mov	r0, #1
   1105c:	b	10fdc <__snprintf_chk@plt+0x1b0>
   11060:	cmp	r5, #0
   11064:	bne	110ac <__snprintf_chk@plt+0x280>
   11068:	ldr	r3, [sp, #40]	; 0x28
   1106c:	and	r3, r3, #61440	; 0xf000
   11070:	cmp	r3, #16384	; 0x4000
   11074:	beq	110dc <__snprintf_chk@plt+0x2b0>
   11078:	movw	r3, #8392	; 0x20c8
   1107c:	movt	r3, #2
   11080:	ldr	r3, [r3]
   11084:	cmp	r3, #0
   11088:	bne	11058 <__snprintf_chk@plt+0x22c>
   1108c:	mov	r2, #5
   11090:	movw	r1, #6828	; 0x1aac
   11094:	movt	r1, #1
   11098:	bl	10cb8 <dcgettext@plt>
   1109c:	mov	r2, r6
   110a0:	mov	r1, r0
   110a4:	mov	r0, #1
   110a8:	bl	10dd8 <errx@plt>
   110ac:	ldr	r2, [sp, #40]	; 0x28
   110b0:	and	r2, r2, #61440	; 0xf000
   110b4:	cmp	r2, #24576	; 0x6000
   110b8:	beq	11174 <__snprintf_chk@plt+0x348>
   110bc:	movw	r2, #8392	; 0x20c8
   110c0:	movt	r2, #2
   110c4:	ldr	r2, [r2]
   110c8:	cmp	r2, #0
   110cc:	beq	1112c <__snprintf_chk@plt+0x300>
   110d0:	adds	r0, r3, #0
   110d4:	movne	r0, #1
   110d8:	b	10fdc <__snprintf_chk@plt+0x1b0>
   110dc:	mov	r0, r6
   110e0:	add	r1, sp, #16
   110e4:	bl	11490 <__snprintf_chk@plt+0x664>
   110e8:	cmp	r0, #0
   110ec:	beq	11150 <__snprintf_chk@plt+0x324>
   110f0:	movw	r3, #8392	; 0x20c8
   110f4:	movt	r3, #2
   110f8:	ldr	r3, [r3]
   110fc:	cmp	r3, #0
   11100:	bne	11058 <__snprintf_chk@plt+0x22c>
   11104:	mov	r0, r5
   11108:	mov	r2, #5
   1110c:	movw	r1, #6848	; 0x1ac0
   11110:	movt	r1, #1
   11114:	bl	10cb8 <dcgettext@plt>
   11118:	mov	r2, r6
   1111c:	mov	r1, r0
   11120:	mov	r0, #1
   11124:	bl	10d84 <__printf_chk@plt>
   11128:	b	11058 <__snprintf_chk@plt+0x22c>
   1112c:	mov	r2, #5
   11130:	movw	r1, #6796	; 0x1a8c
   11134:	movt	r1, #1
   11138:	str	r3, [sp, #12]
   1113c:	bl	10cb8 <dcgettext@plt>
   11140:	mov	r1, r6
   11144:	bl	10d3c <warnx@plt>
   11148:	ldr	r3, [sp, #12]
   1114c:	b	110d0 <__snprintf_chk@plt+0x2a4>
   11150:	cmp	sl, #0
   11154:	bne	111bc <__snprintf_chk@plt+0x390>
   11158:	movw	r3, #8392	; 0x20c8
   1115c:	movt	r3, #2
   11160:	ldr	r3, [r3]
   11164:	cmp	r3, #0
   11168:	beq	111fc <__snprintf_chk@plt+0x3d0>
   1116c:	mov	r3, #0
   11170:	b	110d0 <__snprintf_chk@plt+0x2a4>
   11174:	ldr	ip, [sp, #56]	; 0x38
   11178:	movw	r1, #6820	; 0x1aa4
   1117c:	ldr	lr, [sp, #60]	; 0x3c
   11180:	movt	r1, #1
   11184:	ubfx	r5, ip, #8, #12
   11188:	mov	r0, #1
   1118c:	lsr	r3, ip, #12
   11190:	bic	r2, lr, #4080	; 0xff0
   11194:	orr	r3, r3, lr, lsl #20
   11198:	uxtb	ip, ip
   1119c:	bic	r2, r2, #15
   111a0:	bic	r3, r3, #255	; 0xff
   111a4:	orr	r3, r3, ip
   111a8:	orr	r2, r2, r5
   111ac:	bl	10d84 <__printf_chk@plt>
   111b0:	mov	r3, r7
   111b4:	b	110d0 <__snprintf_chk@plt+0x2a4>
   111b8:	bl	10cc4 <__stack_chk_fail@plt>
   111bc:	ldr	ip, [sp, #16]
   111c0:	movw	r1, #6820	; 0x1aa4
   111c4:	ldr	lr, [sp, #20]
   111c8:	movt	r1, #1
   111cc:	ubfx	r5, ip, #8, #12
   111d0:	mov	r0, #1
   111d4:	lsr	r3, ip, #12
   111d8:	bic	r2, lr, #4080	; 0xff0
   111dc:	orr	r3, r3, lr, lsl #20
   111e0:	uxtb	ip, ip
   111e4:	bic	r2, r2, #15
   111e8:	bic	r3, r3, #255	; 0xff
   111ec:	orr	r3, r3, ip
   111f0:	orr	r2, r2, r5
   111f4:	bl	10d84 <__printf_chk@plt>
   111f8:	b	1116c <__snprintf_chk@plt+0x340>
   111fc:	mov	r2, #5
   11200:	movw	r1, #6872	; 0x1ad8
   11204:	movt	r1, #1
   11208:	bl	10cb8 <dcgettext@plt>
   1120c:	mov	r2, r6
   11210:	mov	r1, r0
   11214:	mov	r0, #1
   11218:	bl	10d84 <__printf_chk@plt>
   1121c:	b	1116c <__snprintf_chk@plt+0x340>
   11220:	movw	r1, #6792	; 0x1a88
   11224:	mov	r2, r6
   11228:	mov	r0, #1
   1122c:	movt	r1, #1
   11230:	bl	10cdc <err@plt>
   11234:	mov	fp, #0
   11238:	mov	lr, #0
   1123c:	pop	{r1}		; (ldr r1, [sp], #4)
   11240:	mov	r2, sp
   11244:	push	{r2}		; (str r2, [sp, #-4]!)
   11248:	push	{r0}		; (str r0, [sp, #-4]!)
   1124c:	ldr	ip, [pc, #16]	; 11264 <__snprintf_chk@plt+0x438>
   11250:	push	{ip}		; (str ip, [sp, #-4]!)
   11254:	ldr	r0, [pc, #12]	; 11268 <__snprintf_chk@plt+0x43c>
   11258:	ldr	r3, [pc, #12]	; 1126c <__snprintf_chk@plt+0x440>
   1125c:	bl	10d00 <__libc_start_main@plt>
   11260:	bl	10e20 <abort@plt>
   11264:	ldrdeq	r1, [r1], -r0
   11268:	andeq	r0, r1, r8, lsr lr
   1126c:	andeq	r1, r1, ip, ror #14
   11270:	ldr	r3, [pc, #20]	; 1128c <__snprintf_chk@plt+0x460>
   11274:	ldr	r2, [pc, #20]	; 11290 <__snprintf_chk@plt+0x464>
   11278:	add	r3, pc, r3
   1127c:	ldr	r2, [r3, r2]
   11280:	cmp	r2, #0
   11284:	bxeq	lr
   11288:	b	10d18 <__gmon_start__@plt>
   1128c:	andeq	r0, r1, r0, lsl #27
   11290:	muleq	r0, ip, r0
   11294:	push	{r3, lr}
   11298:	movw	r0, #8360	; 0x20a8
   1129c:	ldr	r3, [pc, #36]	; 112c8 <__snprintf_chk@plt+0x49c>
   112a0:	movt	r0, #2
   112a4:	rsb	r3, r0, r3
   112a8:	cmp	r3, #6
   112ac:	popls	{r3, pc}
   112b0:	movw	r3, #0
   112b4:	movt	r3, #0
   112b8:	cmp	r3, #0
   112bc:	popeq	{r3, pc}
   112c0:	blx	r3
   112c4:	pop	{r3, pc}
   112c8:	andeq	r2, r2, fp, lsr #1
   112cc:	push	{r3, lr}
   112d0:	movw	r0, #8360	; 0x20a8
   112d4:	movw	r3, #8360	; 0x20a8
   112d8:	movt	r0, #2
   112dc:	movt	r3, #2
   112e0:	rsb	r3, r0, r3
   112e4:	asr	r3, r3, #2
   112e8:	add	r3, r3, r3, lsr #31
   112ec:	asrs	r1, r3, #1
   112f0:	popeq	{r3, pc}
   112f4:	movw	r2, #0
   112f8:	movt	r2, #0
   112fc:	cmp	r2, #0
   11300:	popeq	{r3, pc}
   11304:	blx	r2
   11308:	pop	{r3, pc}
   1130c:	push	{r4, lr}
   11310:	movw	r4, #8388	; 0x20c4
   11314:	movt	r4, #2
   11318:	ldrb	r3, [r4]
   1131c:	cmp	r3, #0
   11320:	popne	{r4, pc}
   11324:	bl	11294 <__snprintf_chk@plt+0x468>
   11328:	mov	r3, #1
   1132c:	strb	r3, [r4]
   11330:	pop	{r4, pc}
   11334:	movw	r0, #7908	; 0x1ee4
   11338:	movt	r0, #2
   1133c:	push	{r3, lr}
   11340:	ldr	r3, [r0]
   11344:	cmp	r3, #0
   11348:	beq	11360 <__snprintf_chk@plt+0x534>
   1134c:	movw	r3, #0
   11350:	movt	r3, #0
   11354:	cmp	r3, #0
   11358:	beq	11360 <__snprintf_chk@plt+0x534>
   1135c:	blx	r3
   11360:	pop	{r3, lr}
   11364:	b	112cc <__snprintf_chk@plt+0x4a0>
   11368:	push	{r4, lr}
   1136c:	mov	r2, #5
   11370:	mov	r4, r0
   11374:	movw	r1, #6256	; 0x1870
   11378:	mov	r0, #0
   1137c:	movt	r1, #1
   11380:	bl	10cb8 <dcgettext@plt>
   11384:	mov	r1, r4
   11388:	bl	10e14 <fputs@plt>
   1138c:	mov	r2, #5
   11390:	movw	r1, #6268	; 0x187c
   11394:	mov	r0, #0
   11398:	movt	r1, #1
   1139c:	bl	10cb8 <dcgettext@plt>
   113a0:	movw	r3, #8360	; 0x20a8
   113a4:	movt	r3, #2
   113a8:	mov	r1, #1
   113ac:	ldr	r3, [r3]
   113b0:	mov	r2, r0
   113b4:	mov	r0, r4
   113b8:	bl	10d9c <__fprintf_chk@plt>
   113bc:	mov	r2, #5
   113c0:	movw	r1, #6324	; 0x18b4
   113c4:	mov	r0, #0
   113c8:	movt	r1, #1
   113cc:	bl	10cb8 <dcgettext@plt>
   113d0:	mov	r1, r4
   113d4:	bl	10e14 <fputs@plt>
   113d8:	mov	r2, #5
   113dc:	movw	r1, #6336	; 0x18c0
   113e0:	mov	r0, #0
   113e4:	movt	r1, #1
   113e8:	bl	10cb8 <dcgettext@plt>
   113ec:	mov	r1, r4
   113f0:	bl	10e14 <fputs@plt>
   113f4:	mov	r2, #5
   113f8:	movw	r1, #6528	; 0x1980
   113fc:	mov	r0, #0
   11400:	movt	r1, #1
   11404:	bl	10cb8 <dcgettext@plt>
   11408:	mov	r1, r4
   1140c:	bl	10e14 <fputs@plt>
   11410:	mov	r2, #5
   11414:	movw	r1, #6532	; 0x1984
   11418:	mov	r0, #0
   1141c:	movt	r1, #1
   11420:	bl	10cb8 <dcgettext@plt>
   11424:	mov	r1, r4
   11428:	bl	10e14 <fputs@plt>
   1142c:	mov	r2, #5
   11430:	movw	r1, #6576	; 0x19b0
   11434:	mov	r0, #0
   11438:	movt	r1, #1
   1143c:	bl	10cb8 <dcgettext@plt>
   11440:	mov	r1, r4
   11444:	bl	10e14 <fputs@plt>
   11448:	mov	r2, #5
   1144c:	movw	r1, #6632	; 0x19e8
   11450:	mov	r0, #0
   11454:	movt	r1, #1
   11458:	bl	10cb8 <dcgettext@plt>
   1145c:	movw	r3, #6660	; 0x1a04
   11460:	mov	r1, #1
   11464:	movt	r3, #1
   11468:	mov	r2, r0
   1146c:	mov	r0, r4
   11470:	bl	10d9c <__fprintf_chk@plt>
   11474:	movw	r3, #8380	; 0x20bc
   11478:	movt	r3, #2
   1147c:	ldr	r0, [r3]
   11480:	subs	r3, r4, r0
   11484:	rsbs	r0, r3, #0
   11488:	adcs	r0, r0, r3
   1148c:	bl	10d30 <exit@plt>
   11490:	push	{r4, r5, r6, r7, r8, r9, lr}
   11494:	movw	r6, #8368	; 0x20b0
   11498:	movt	r6, #2
   1149c:	sub	sp, sp, #4288	; 0x10c0
   114a0:	sub	sp, sp, #36	; 0x24
   114a4:	mov	r8, r0
   114a8:	ldr	r3, [r6]
   114ac:	add	r2, sp, #8192	; 0x2000
   114b0:	movw	r0, #6676	; 0x1a14
   114b4:	movt	r0, #1
   114b8:	mov	r7, r1
   114bc:	str	r3, [r2, #-3876]	; 0xfffff0dc
   114c0:	bl	10c88 <mnt_new_table_from_file@plt>
   114c4:	subs	r4, r0, #0
   114c8:	beq	11550 <__snprintf_chk@plt+0x724>
   114cc:	bl	10d54 <mnt_new_cache@plt>
   114d0:	mov	r5, r0
   114d4:	mov	r0, r4
   114d8:	mov	r1, r5
   114dc:	bl	10d90 <mnt_table_set_cache@plt>
   114e0:	mov	r1, r8
   114e4:	mov	r0, r4
   114e8:	mov	r2, #1
   114ec:	bl	10da8 <mnt_table_find_target@plt>
   114f0:	subs	r8, r0, #0
   114f4:	beq	11548 <__snprintf_chk@plt+0x71c>
   114f8:	bl	10cf4 <mnt_fs_get_target@plt>
   114fc:	cmp	r0, #0
   11500:	beq	11548 <__snprintf_chk@plt+0x71c>
   11504:	mov	r0, r8
   11508:	mov	r8, #0
   1150c:	bl	10dc0 <mnt_fs_get_devno@plt>
   11510:	strd	r0, [r7]
   11514:	mov	r0, r4
   11518:	bl	10dfc <mnt_free_table@plt>
   1151c:	mov	r0, r5
   11520:	bl	10d0c <mnt_free_cache@plt>
   11524:	mov	r0, r8
   11528:	add	r3, sp, #8192	; 0x2000
   1152c:	ldr	r2, [r3, #-3876]	; 0xfffff0dc
   11530:	ldr	r3, [r6]
   11534:	cmp	r2, r3
   11538:	bne	1162c <__snprintf_chk@plt+0x800>
   1153c:	add	sp, sp, #4288	; 0x10c0
   11540:	add	sp, sp, #36	; 0x24
   11544:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11548:	mvn	r8, #0
   1154c:	b	11514 <__snprintf_chk@plt+0x6e8>
   11550:	mov	r1, r8
   11554:	mov	r0, #3
   11558:	add	r2, sp, #112	; 0x70
   1155c:	bl	10e08 <__xstat64@plt>
   11560:	subs	r1, r0, #0
   11564:	beq	11570 <__snprintf_chk@plt+0x744>
   11568:	mvn	r0, #0
   1156c:	b	11528 <__snprintf_chk@plt+0x6fc>
   11570:	mov	r0, r8
   11574:	bl	10d6c <mnt_resolve_path@plt>
   11578:	mov	r1, #4096	; 0x1000
   1157c:	mov	r3, r1
   11580:	movw	r2, #6700	; 0x1a2c
   11584:	movt	r2, #1
   11588:	str	r2, [sp]
   1158c:	mov	r2, #1
   11590:	cmp	r0, #0
   11594:	mov	r4, r0
   11598:	movne	r8, r0
   1159c:	add	r0, sp, #220	; 0xdc
   115a0:	str	r8, [sp, #4]
   115a4:	bl	10e2c <__snprintf_chk@plt>
   115a8:	mov	r5, r0
   115ac:	mov	r0, r4
   115b0:	bl	10c94 <free@plt>
   115b4:	cmp	r5, #0
   115b8:	blt	11568 <__snprintf_chk@plt+0x73c>
   115bc:	add	r5, r5, #1
   115c0:	cmp	r5, #4096	; 0x1000
   115c4:	bhi	11568 <__snprintf_chk@plt+0x73c>
   115c8:	add	r1, sp, #220	; 0xdc
   115cc:	mov	r0, #3
   115d0:	add	r2, sp, #8
   115d4:	bl	10e08 <__xstat64@plt>
   115d8:	cmp	r0, #0
   115dc:	bne	11568 <__snprintf_chk@plt+0x73c>
   115e0:	add	ip, sp, #4288	; 0x10c0
   115e4:	movw	r3, #61328	; 0xef90
   115e8:	add	ip, ip, #32
   115ec:	movw	r1, #61224	; 0xef28
   115f0:	movt	r3, #65535	; 0xffff
   115f4:	movt	r1, #65535	; 0xffff
   115f8:	ldrd	r2, [r3, ip]
   115fc:	ldrd	r4, [ip, r1]
   11600:	cmp	r3, r5
   11604:	cmpeq	r2, r4
   11608:	beq	11614 <__snprintf_chk@plt+0x7e8>
   1160c:	strd	r2, [r7]
   11610:	b	11528 <__snprintf_chk@plt+0x6fc>
   11614:	ldrd	r8, [sp, #208]	; 0xd0
   11618:	ldrd	r4, [sp, #104]	; 0x68
   1161c:	cmp	r9, r5
   11620:	cmpeq	r8, r4
   11624:	bne	11568 <__snprintf_chk@plt+0x73c>
   11628:	b	1160c <__snprintf_chk@plt+0x7e0>
   1162c:	bl	10cc4 <__stack_chk_fail@plt>
   11630:	movw	r3, #8384	; 0x20c0
   11634:	movt	r3, #2
   11638:	push	{r4, r5, r6, lr}
   1163c:	ldr	r4, [r3]
   11640:	mov	r0, r4
   11644:	bl	10ce8 <__fpending@plt>
   11648:	mov	r6, r0
   1164c:	mov	r0, r4
   11650:	bl	10ca0 <ferror@plt>
   11654:	mov	r5, r0
   11658:	mov	r0, r4
   1165c:	bl	10db4 <fclose@plt>
   11660:	adds	r4, r0, #0
   11664:	movne	r4, #1
   11668:	cmp	r5, #0
   1166c:	bne	116e4 <__snprintf_chk@plt+0x8b8>
   11670:	cmp	r4, #0
   11674:	beq	11690 <__snprintf_chk@plt+0x864>
   11678:	cmp	r6, #0
   1167c:	beq	11734 <__snprintf_chk@plt+0x908>
   11680:	bl	10d60 <__errno_location@plt>
   11684:	ldr	r3, [r0]
   11688:	cmp	r3, #32
   1168c:	bne	11748 <__snprintf_chk@plt+0x91c>
   11690:	movw	r3, #8380	; 0x20bc
   11694:	movt	r3, #2
   11698:	ldr	r4, [r3]
   1169c:	mov	r0, r4
   116a0:	bl	10ce8 <__fpending@plt>
   116a4:	mov	r6, r0
   116a8:	mov	r0, r4
   116ac:	bl	10ca0 <ferror@plt>
   116b0:	mov	r5, r0
   116b4:	mov	r0, r4
   116b8:	bl	10db4 <fclose@plt>
   116bc:	adds	r4, r0, #0
   116c0:	movne	r4, #1
   116c4:	cmp	r5, #0
   116c8:	beq	11710 <__snprintf_chk@plt+0x8e4>
   116cc:	cmp	r4, #0
   116d0:	bne	116dc <__snprintf_chk@plt+0x8b0>
   116d4:	bl	10d60 <__errno_location@plt>
   116d8:	str	r4, [r0]
   116dc:	mov	r0, #1
   116e0:	bl	10cac <_exit@plt>
   116e4:	cmp	r4, #0
   116e8:	bne	11680 <__snprintf_chk@plt+0x854>
   116ec:	bl	10d60 <__errno_location@plt>
   116f0:	str	r4, [r0]
   116f4:	mov	r2, #5
   116f8:	movw	r1, #6708	; 0x1a34
   116fc:	mov	r0, #0
   11700:	movt	r1, #1
   11704:	bl	10cb8 <dcgettext@plt>
   11708:	bl	10d3c <warnx@plt>
   1170c:	b	116dc <__snprintf_chk@plt+0x8b0>
   11710:	cmp	r4, #0
   11714:	popeq	{r4, r5, r6, pc}
   11718:	cmp	r6, #0
   1171c:	bne	116dc <__snprintf_chk@plt+0x8b0>
   11720:	bl	10d60 <__errno_location@plt>
   11724:	ldr	r3, [r0]
   11728:	cmp	r3, #9
   1172c:	bne	116dc <__snprintf_chk@plt+0x8b0>
   11730:	pop	{r4, r5, r6, pc}
   11734:	bl	10d60 <__errno_location@plt>
   11738:	ldr	r3, [r0]
   1173c:	cmp	r3, #9
   11740:	bne	11688 <__snprintf_chk@plt+0x85c>
   11744:	b	11690 <__snprintf_chk@plt+0x864>
   11748:	cmp	r3, #0
   1174c:	beq	116f4 <__snprintf_chk@plt+0x8c8>
   11750:	mov	r2, #5
   11754:	movw	r1, #6708	; 0x1a34
   11758:	mov	r0, #0
   1175c:	movt	r1, #1
   11760:	bl	10cb8 <dcgettext@plt>
   11764:	bl	10de4 <warn@plt>
   11768:	b	116dc <__snprintf_chk@plt+0x8b0>
   1176c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11770:	mov	r7, r0
   11774:	ldr	r6, [pc, #76]	; 117c8 <__snprintf_chk@plt+0x99c>
   11778:	mov	r8, r1
   1177c:	ldr	r5, [pc, #72]	; 117cc <__snprintf_chk@plt+0x9a0>
   11780:	mov	r9, r2
   11784:	add	r6, pc, r6
   11788:	bl	10c68 <_init@@Base>
   1178c:	add	r5, pc, r5
   11790:	rsb	r6, r5, r6
   11794:	asrs	r6, r6, #2
   11798:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1179c:	sub	r5, r5, #4
   117a0:	mov	r4, #0
   117a4:	add	r4, r4, #1
   117a8:	ldr	r3, [r5, #4]!
   117ac:	mov	r0, r7
   117b0:	mov	r1, r8
   117b4:	mov	r2, r9
   117b8:	blx	r3
   117bc:	cmp	r4, r6
   117c0:	bne	117a4 <__snprintf_chk@plt+0x978>
   117c4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   117c8:	andeq	r0, r1, r4, asr r7
   117cc:	andeq	r0, r1, r8, asr #14
   117d0:	bx	lr
   117d4:	ldr	r3, [pc, #28]	; 117f8 <__snprintf_chk@plt+0x9cc>
   117d8:	mov	r1, #0
   117dc:	ldr	r2, [pc, #24]	; 117fc <__snprintf_chk@plt+0x9d0>
   117e0:	add	r3, pc, r3
   117e4:	ldr	r3, [r3, r2]
   117e8:	cmp	r3, #0
   117ec:	ldrne	r2, [r3]
   117f0:	moveq	r2, r3
   117f4:	b	10d78 <__cxa_atexit@plt>
   117f8:	andeq	r0, r1, r8, lsl r8
   117fc:	andeq	r0, r0, r0, lsr #1

Disassembly of section .fini:

00011800 <_fini@@Base>:
   11800:	push	{r3, lr}
   11804:	pop	{r3, pc}
