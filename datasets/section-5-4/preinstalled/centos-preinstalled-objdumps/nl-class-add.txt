
centos-preinstalled/nl-class-add:     file format elf32-littlearm


Disassembly of section .init:

00010ae8 <.init>:
   10ae8:	push	{r3, lr}
   10aec:	bl	1102c <exit@plt+0x3bc>
   10af0:	pop	{r3, pc}

Disassembly of section .plt:

00010af4 <abort@plt-0x14>:
   10af4:	push	{lr}		; (str lr, [sp, #-4]!)
   10af8:	ldr	lr, [pc, #4]	; 10b04 <abort@plt-0x4>
   10afc:	add	lr, pc, lr
   10b00:	ldr	pc, [lr, #8]!
   10b04:	strdeq	r1, [r1], -ip

00010b08 <abort@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b14 <nl_cli_fatal@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b20 <__libc_start_main@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b2c <__gmon_start__@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b38 <__printf_chk@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b44 <nl_cli_tc_parse_parent@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b50 <nl_cli_print_version@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b5c <nl_cli_alloc_socket@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b68 <free@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b74 <getopt_long@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b80 <rtnl_tc_get_ifindex@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b8c <rtnl_tc_get_ops@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b98 <nl_cli_tc_parse_linktype@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1180]!	; 0x49c

00010ba4 <nl_cli_tc_parse_overhead@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #69632	; 0x11000
   10bac:	ldr	pc, [ip, #1172]!	; 0x494

00010bb0 <rtnl_class_add@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #69632	; 0x11000
   10bb8:	ldr	pc, [ip, #1164]!	; 0x48c

00010bbc <nl_cli_link_alloc_cache@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #69632	; 0x11000
   10bc4:	ldr	pc, [ip, #1156]!	; 0x484

00010bc8 <nl_cli_tc_parse_mtu@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #69632	; 0x11000
   10bd0:	ldr	pc, [ip, #1148]!	; 0x47c

00010bd4 <__stack_chk_fail@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #69632	; 0x11000
   10bdc:	ldr	pc, [ip, #1140]!	; 0x474

00010be0 <nl_cli_tc_lookup@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #69632	; 0x11000
   10be8:	ldr	pc, [ip, #1132]!	; 0x46c

00010bec <rtnl_tc_set_kind@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #69632	; 0x11000
   10bf4:	ldr	pc, [ip, #1124]!	; 0x464

00010bf8 <nl_cli_class_alloc@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #69632	; 0x11000
   10c00:	ldr	pc, [ip, #1116]!	; 0x45c

00010c04 <rtnl_tc_get_parent@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #69632	; 0x11000
   10c0c:	ldr	pc, [ip, #1108]!	; 0x454

00010c10 <nl_object_dump@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #69632	; 0x11000
   10c18:	ldr	pc, [ip, #1100]!	; 0x44c

00010c1c <puts@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #69632	; 0x11000
   10c24:	ldr	pc, [ip, #1092]!	; 0x444

00010c28 <nl_geterror@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #69632	; 0x11000
   10c30:	ldr	pc, [ip, #1084]!	; 0x43c

00010c34 <nl_cli_connect@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #69632	; 0x11000
   10c3c:	ldr	pc, [ip, #1076]!	; 0x434

00010c40 <nl_cli_tc_parse_mpu@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #69632	; 0x11000
   10c48:	ldr	pc, [ip, #1068]!	; 0x42c

00010c4c <nl_cli_tc_parse_dev@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #69632	; 0x11000
   10c54:	ldr	pc, [ip, #1060]!	; 0x424

00010c58 <__strdup@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #69632	; 0x11000
   10c60:	ldr	pc, [ip, #1052]!	; 0x41c

00010c64 <nl_cli_tc_parse_handle@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #69632	; 0x11000
   10c6c:	ldr	pc, [ip, #1044]!	; 0x414

00010c70 <exit@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #69632	; 0x11000
   10c78:	ldr	pc, [ip, #1036]!	; 0x40c

Disassembly of section .text:

00010c7c <.text>:
   10c7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c80:	movw	r3, #8556	; 0x216c
   10c84:	movw	r9, #8552	; 0x2168
   10c88:	movt	r3, #2
   10c8c:	movt	r9, #2
   10c90:	mov	r4, r1
   10c94:	ldr	r1, [r3]
   10c98:	sub	sp, sp, #92	; 0x5c
   10c9c:	ldr	r2, [r9]
   10ca0:	mov	r7, #0
   10ca4:	mov	r3, #1
   10ca8:	str	r7, [sp, #36]	; 0x24
   10cac:	str	r3, [sp, #32]
   10cb0:	mov	r5, r0
   10cb4:	str	r2, [sp, #84]	; 0x54
   10cb8:	movw	r8, #8560	; 0x2170
   10cbc:	str	r1, [sp, #60]	; 0x3c
   10cc0:	movw	sl, #8568	; 0x2178
   10cc4:	str	r7, [sp, #40]	; 0x28
   10cc8:	movt	r8, #2
   10ccc:	str	r7, [sp, #44]	; 0x2c
   10cd0:	movt	sl, #2
   10cd4:	str	r7, [sp, #48]	; 0x30
   10cd8:	add	r6, sp, #28
   10cdc:	str	r7, [sp, #52]	; 0x34
   10ce0:	mov	fp, #1536	; 0x600
   10ce4:	str	r7, [sp, #12]
   10ce8:	str	r7, [sp, #56]	; 0x38
   10cec:	str	r7, [sp, #64]	; 0x40
   10cf0:	str	r7, [sp, #68]	; 0x44
   10cf4:	str	r7, [sp, #72]	; 0x48
   10cf8:	str	r7, [sp, #76]	; 0x4c
   10cfc:	str	r7, [sp, #80]	; 0x50
   10d00:	bl	10b5c <nl_cli_alloc_socket@plt>
   10d04:	mov	r1, r7
   10d08:	str	r0, [sp, #16]
   10d0c:	bl	10c34 <nl_cli_connect@plt>
   10d10:	ldr	r0, [sp, #16]
   10d14:	bl	10bbc <nl_cli_link_alloc_cache@plt>
   10d18:	str	r0, [sp, #20]
   10d1c:	bl	10bf8 <nl_cli_class_alloc@plt>
   10d20:	mov	r7, r0
   10d24:	str	r6, [sp]
   10d28:	movw	r2, #5552	; 0x15b0
   10d2c:	movw	r3, #8336	; 0x2090
   10d30:	movt	r2, #1
   10d34:	movt	r3, #2
   10d38:	mov	r0, r5
   10d3c:	mov	r1, r4
   10d40:	mov	ip, #0
   10d44:	str	ip, [sp, #28]
   10d48:	bl	10b74 <getopt_long@plt>
   10d4c:	cmn	r0, #1
   10d50:	beq	10e68 <exit@plt+0x1f8>
   10d54:	cmp	r0, #118	; 0x76
   10d58:	beq	10e2c <exit@plt+0x1bc>
   10d5c:	ble	10da4 <exit@plt+0x134>
   10d60:	movw	r3, #259	; 0x103
   10d64:	cmp	r0, r3
   10d68:	beq	10e44 <exit@plt+0x1d4>
   10d6c:	cmp	r0, #260	; 0x104
   10d70:	blt	10dc4 <exit@plt+0x154>
   10d74:	movw	r3, #261	; 0x105
   10d78:	cmp	r0, r3
   10d7c:	beq	10e0c <exit@plt+0x19c>
   10d80:	cmp	r0, #260	; 0x104
   10d84:	ble	10dfc <exit@plt+0x18c>
   10d88:	add	r3, r3, #1
   10d8c:	cmp	r0, r3
   10d90:	bne	10d24 <exit@plt+0xb4>
   10d94:	mov	r0, r7
   10d98:	ldr	r1, [r8]
   10d9c:	bl	10b98 <nl_cli_tc_parse_linktype@plt>
   10da0:	b	10d24 <exit@plt+0xb4>
   10da4:	cmp	r0, #105	; 0x69
   10da8:	beq	10e34 <exit@plt+0x1c4>
   10dac:	bgt	10de4 <exit@plt+0x174>
   10db0:	cmp	r0, #100	; 0x64
   10db4:	beq	10e54 <exit@plt+0x1e4>
   10db8:	cmp	r0, #104	; 0x68
   10dbc:	bne	10d24 <exit@plt+0xb4>
   10dc0:	bl	11124 <exit@plt+0x4b4>
   10dc4:	movw	r3, #257	; 0x101
   10dc8:	cmp	r0, r3
   10dcc:	moveq	fp, #1024	; 0x400
   10dd0:	beq	10d24 <exit@plt+0xb4>
   10dd4:	add	r3, r3, #1
   10dd8:	cmp	r0, r3
   10ddc:	moveq	fp, #0
   10de0:	b	10d24 <exit@plt+0xb4>
   10de4:	cmp	r0, #112	; 0x70
   10de8:	beq	10e1c <exit@plt+0x1ac>
   10dec:	cmp	r0, #113	; 0x71
   10df0:	moveq	r3, #1
   10df4:	streq	r3, [sl]
   10df8:	b	10d24 <exit@plt+0xb4>
   10dfc:	mov	r0, r7
   10e00:	ldr	r1, [r8]
   10e04:	bl	10c40 <nl_cli_tc_parse_mpu@plt>
   10e08:	b	10d24 <exit@plt+0xb4>
   10e0c:	mov	r0, r7
   10e10:	ldr	r1, [r8]
   10e14:	bl	10ba4 <nl_cli_tc_parse_overhead@plt>
   10e18:	b	10d24 <exit@plt+0xb4>
   10e1c:	mov	r0, r7
   10e20:	ldr	r1, [r8]
   10e24:	bl	10b44 <nl_cli_tc_parse_parent@plt>
   10e28:	b	10d24 <exit@plt+0xb4>
   10e2c:	bl	10b50 <nl_cli_print_version@plt>
   10e30:	b	10d24 <exit@plt+0xb4>
   10e34:	ldr	r0, [r8]
   10e38:	bl	10c58 <__strdup@plt>
   10e3c:	str	r0, [sp, #12]
   10e40:	b	10d24 <exit@plt+0xb4>
   10e44:	mov	r0, r7
   10e48:	ldr	r1, [r8]
   10e4c:	bl	10bc8 <nl_cli_tc_parse_mtu@plt>
   10e50:	b	10d24 <exit@plt+0xb4>
   10e54:	mov	r0, r7
   10e58:	ldr	r1, [sp, #20]
   10e5c:	ldr	r2, [r8]
   10e60:	bl	10c4c <nl_cli_tc_parse_dev@plt>
   10e64:	b	10d24 <exit@plt+0xb4>
   10e68:	movw	r6, #8544	; 0x2160
   10e6c:	movt	r6, #2
   10e70:	ldr	r3, [r6]
   10e74:	cmp	r5, r3
   10e78:	ble	10dc0 <exit@plt+0x150>
   10e7c:	mov	r0, r7
   10e80:	bl	10b80 <rtnl_tc_get_ifindex@plt>
   10e84:	cmp	r0, #0
   10e88:	beq	10f58 <exit@plt+0x2e8>
   10e8c:	mov	r0, r7
   10e90:	bl	10c04 <rtnl_tc_get_parent@plt>
   10e94:	cmp	r0, #0
   10e98:	beq	10f8c <exit@plt+0x31c>
   10e9c:	ldr	r3, [sp, #12]
   10ea0:	cmp	r3, #0
   10ea4:	beq	10ec0 <exit@plt+0x250>
   10ea8:	mov	r0, r7
   10eac:	mov	r1, r3
   10eb0:	mov	r2, #1
   10eb4:	bl	10c64 <nl_cli_tc_parse_handle@plt>
   10eb8:	ldr	r0, [sp, #12]
   10ebc:	bl	10b68 <free@plt>
   10ec0:	ldr	r3, [r6]
   10ec4:	mov	r0, r7
   10ec8:	add	r2, r3, #1
   10ecc:	str	r2, [r6]
   10ed0:	ldr	r6, [r4, r3, lsl #2]
   10ed4:	mov	r1, r6
   10ed8:	bl	10bec <rtnl_tc_set_kind@plt>
   10edc:	mov	r0, r7
   10ee0:	bl	10b8c <rtnl_tc_get_ops@plt>
   10ee4:	subs	r8, r0, #0
   10ee8:	beq	10fd4 <exit@plt+0x364>
   10eec:	mov	r0, r8
   10ef0:	bl	10be0 <nl_cli_tc_lookup@plt>
   10ef4:	subs	r8, r0, #0
   10ef8:	beq	10fbc <exit@plt+0x34c>
   10efc:	ldr	r3, [r8, #12]
   10f00:	mov	r1, r5
   10f04:	mov	r2, r4
   10f08:	mov	r0, r7
   10f0c:	blx	r3
   10f10:	movw	r3, #8568	; 0x2178
   10f14:	movt	r3, #2
   10f18:	ldr	r3, [r3]
   10f1c:	cmp	r3, #0
   10f20:	beq	10f6c <exit@plt+0x2fc>
   10f24:	ldr	r0, [sp, #16]
   10f28:	mov	r1, r7
   10f2c:	mov	r2, fp
   10f30:	bl	10bb0 <rtnl_class_add@plt>
   10f34:	cmp	r0, #0
   10f38:	blt	10fa0 <exit@plt+0x330>
   10f3c:	ldr	r2, [sp, #84]	; 0x54
   10f40:	mov	r0, #0
   10f44:	ldr	r3, [r9]
   10f48:	cmp	r2, r3
   10f4c:	bne	10fec <exit@plt+0x37c>
   10f50:	add	sp, sp, #92	; 0x5c
   10f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f58:	movw	r1, #5564	; 0x15bc
   10f5c:	mov	r0, #22
   10f60:	movt	r1, #1
   10f64:	bl	10b14 <nl_cli_fatal@plt>
   10f68:	b	10e8c <exit@plt+0x21c>
   10f6c:	movw	r1, #5708	; 0x164c
   10f70:	mov	r0, #1
   10f74:	movt	r1, #1
   10f78:	bl	10b38 <__printf_chk@plt>
   10f7c:	mov	r0, r7
   10f80:	add	r1, sp, #32
   10f84:	bl	10c10 <nl_object_dump@plt>
   10f88:	b	10f24 <exit@plt+0x2b4>
   10f8c:	movw	r1, #5612	; 0x15ec
   10f90:	mov	r0, #22
   10f94:	movt	r1, #1
   10f98:	bl	10b14 <nl_cli_fatal@plt>
   10f9c:	b	10e9c <exit@plt+0x22c>
   10fa0:	bl	10c28 <nl_geterror@plt>
   10fa4:	movw	r1, #5716	; 0x1654
   10fa8:	movt	r1, #1
   10fac:	mov	r2, r0
   10fb0:	mov	r0, #22
   10fb4:	bl	10b14 <nl_cli_fatal@plt>
   10fb8:	b	10f3c <exit@plt+0x2cc>
   10fbc:	mov	r2, r6
   10fc0:	movw	r1, #5676	; 0x162c
   10fc4:	mov	r0, #95	; 0x5f
   10fc8:	movt	r1, #1
   10fcc:	bl	10b14 <nl_cli_fatal@plt>
   10fd0:	b	10efc <exit@plt+0x28c>
   10fd4:	movw	r1, #5656	; 0x1618
   10fd8:	mov	r0, #2
   10fdc:	movt	r1, #1
   10fe0:	mov	r2, r6
   10fe4:	bl	10b14 <nl_cli_fatal@plt>
   10fe8:	b	10eec <exit@plt+0x27c>
   10fec:	bl	10bd4 <__stack_chk_fail@plt>
   10ff0:	mov	fp, #0
   10ff4:	mov	lr, #0
   10ff8:	pop	{r1}		; (ldr r1, [sp], #4)
   10ffc:	mov	r2, sp
   11000:	push	{r2}		; (str r2, [sp, #-4]!)
   11004:	push	{r0}		; (str r0, [sp, #-4]!)
   11008:	ldr	ip, [pc, #16]	; 11020 <exit@plt+0x3b0>
   1100c:	push	{ip}		; (str ip, [sp, #-4]!)
   11010:	ldr	r0, [pc, #12]	; 11024 <exit@plt+0x3b4>
   11014:	ldr	r3, [pc, #12]	; 11028 <exit@plt+0x3b8>
   11018:	bl	10b20 <__libc_start_main@plt>
   1101c:	bl	10b08 <abort@plt>
   11020:	andeq	r1, r1, r0, lsr #3
   11024:	andeq	r0, r1, ip, ror ip
   11028:	andeq	r1, r1, ip, lsr r1
   1102c:	ldr	r3, [pc, #20]	; 11048 <exit@plt+0x3d8>
   11030:	ldr	r2, [pc, #20]	; 1104c <exit@plt+0x3dc>
   11034:	add	r3, pc, r3
   11038:	ldr	r2, [r3, r2]
   1103c:	cmp	r2, #0
   11040:	bxeq	lr
   11044:	b	10b2c <__gmon_start__@plt>
   11048:	andeq	r0, r1, r4, asr #31
   1104c:	andeq	r0, r0, r8, lsl #1
   11050:	push	{r3, lr}
   11054:	movw	r0, #8544	; 0x2160
   11058:	ldr	r3, [pc, #36]	; 11084 <exit@plt+0x414>
   1105c:	movt	r0, #2
   11060:	rsb	r3, r0, r3
   11064:	cmp	r3, #6
   11068:	popls	{r3, pc}
   1106c:	movw	r3, #0
   11070:	movt	r3, #0
   11074:	cmp	r3, #0
   11078:	popeq	{r3, pc}
   1107c:	blx	r3
   11080:	pop	{r3, pc}
   11084:	andeq	r2, r2, r3, ror #2
   11088:	push	{r3, lr}
   1108c:	movw	r0, #8544	; 0x2160
   11090:	movw	r3, #8544	; 0x2160
   11094:	movt	r0, #2
   11098:	movt	r3, #2
   1109c:	rsb	r3, r0, r3
   110a0:	asr	r3, r3, #2
   110a4:	add	r3, r3, r3, lsr #31
   110a8:	asrs	r1, r3, #1
   110ac:	popeq	{r3, pc}
   110b0:	movw	r2, #0
   110b4:	movt	r2, #0
   110b8:	cmp	r2, #0
   110bc:	popeq	{r3, pc}
   110c0:	blx	r2
   110c4:	pop	{r3, pc}
   110c8:	push	{r4, lr}
   110cc:	movw	r4, #8564	; 0x2174
   110d0:	movt	r4, #2
   110d4:	ldrb	r3, [r4]
   110d8:	cmp	r3, #0
   110dc:	popne	{r4, pc}
   110e0:	bl	11050 <exit@plt+0x3e0>
   110e4:	mov	r3, #1
   110e8:	strb	r3, [r4]
   110ec:	pop	{r4, pc}
   110f0:	movw	r0, #7868	; 0x1ebc
   110f4:	movt	r0, #2
   110f8:	push	{r3, lr}
   110fc:	ldr	r3, [r0]
   11100:	cmp	r3, #0
   11104:	beq	1111c <exit@plt+0x4ac>
   11108:	movw	r3, #0
   1110c:	movt	r3, #0
   11110:	cmp	r3, #0
   11114:	beq	1111c <exit@plt+0x4ac>
   11118:	blx	r3
   1111c:	pop	{r3, lr}
   11120:	b	11088 <exit@plt+0x418>
   11124:	push	{r3, lr}
   11128:	movw	r0, #4532	; 0x11b4
   1112c:	movt	r0, #1
   11130:	bl	10c1c <puts@plt>
   11134:	mov	r0, #0
   11138:	bl	10c70 <exit@plt>
   1113c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11140:	mov	r7, r0
   11144:	ldr	r6, [pc, #76]	; 11198 <exit@plt+0x528>
   11148:	mov	r8, r1
   1114c:	ldr	r5, [pc, #72]	; 1119c <exit@plt+0x52c>
   11150:	mov	r9, r2
   11154:	add	r6, pc, r6
   11158:	bl	10ae8 <abort@plt-0x20>
   1115c:	add	r5, pc, r5
   11160:	rsb	r6, r5, r6
   11164:	asrs	r6, r6, #2
   11168:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1116c:	sub	r5, r5, #4
   11170:	mov	r4, #0
   11174:	add	r4, r4, #1
   11178:	ldr	r3, [r5, #4]!
   1117c:	mov	r0, r7
   11180:	mov	r1, r8
   11184:	mov	r2, r9
   11188:	blx	r3
   1118c:	cmp	r4, r6
   11190:	bne	11174 <exit@plt+0x504>
   11194:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11198:	andeq	r0, r1, ip, asr sp
   1119c:	andeq	r0, r1, r0, asr sp
   111a0:	bx	lr

Disassembly of section .fini:

000111a4 <.fini>:
   111a4:	push	{r3, lr}
   111a8:	pop	{r3, pc}
