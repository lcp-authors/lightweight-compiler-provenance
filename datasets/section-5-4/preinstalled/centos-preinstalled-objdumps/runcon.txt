
centos-preinstalled/runcon:     file format elf32-littlearm


Disassembly of section .init:

00011290 <_init@@Base>:
   11290:	push	{r3, lr}
   11294:	bl	11ed4 <close@plt+0x900>
   11298:	pop	{r3, pc}

Disassembly of section .plt:

0001129c <fdopen@plt-0x14>:
   1129c:	push	{lr}		; (str lr, [sp, #-4]!)
   112a0:	ldr	lr, [pc, #4]	; 112ac <_init@@Base+0x1c>
   112a4:	add	lr, pc, lr
   112a8:	ldr	pc, [lr, #8]!
   112ac:	andeq	r4, r1, r4, asr sp

000112b0 <fdopen@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #20, 20	; 0x14000
   112b8:	ldr	pc, [ip, #3412]!	; 0xd54

000112bc <calloc@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #20, 20	; 0x14000
   112c4:	ldr	pc, [ip, #3404]!	; 0xd4c

000112c8 <fputs_unlocked@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #20, 20	; 0x14000
   112d0:	ldr	pc, [ip, #3396]!	; 0xd44

000112d4 <raise@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #20, 20	; 0x14000
   112dc:	ldr	pc, [ip, #3388]!	; 0xd3c

000112e0 <is_selinux_enabled@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #20, 20	; 0x14000
   112e8:	ldr	pc, [ip, #3380]!	; 0xd34

000112ec <strcmp@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #20, 20	; 0x14000
   112f4:	ldr	pc, [ip, #3372]!	; 0xd2c

000112f8 <fflush@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #20, 20	; 0x14000
   11300:	ldr	pc, [ip, #3364]!	; 0xd24

00011304 <free@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #20, 20	; 0x14000
   1130c:	ldr	pc, [ip, #3356]!	; 0xd1c

00011310 <_exit@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #20, 20	; 0x14000
   11318:	ldr	pc, [ip, #3348]!	; 0xd14

0001131c <memcpy@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #20, 20	; 0x14000
   11324:	ldr	pc, [ip, #3340]!	; 0xd0c

00011328 <execvp@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #20, 20	; 0x14000
   11330:	ldr	pc, [ip, #3332]!	; 0xd04

00011334 <mbsinit@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #20, 20	; 0x14000
   1133c:	ldr	pc, [ip, #3324]!	; 0xcfc

00011340 <context_new@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #20, 20	; 0x14000
   11348:	ldr	pc, [ip, #3316]!	; 0xcf4

0001134c <memcmp@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #20, 20	; 0x14000
   11354:	ldr	pc, [ip, #3308]!	; 0xcec

00011358 <context_role_set@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #20, 20	; 0x14000
   11360:	ldr	pc, [ip, #3300]!	; 0xce4

00011364 <dcgettext@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #20, 20	; 0x14000
   1136c:	ldr	pc, [ip, #3292]!	; 0xcdc

00011370 <__stack_chk_fail@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #20, 20	; 0x14000
   11378:	ldr	pc, [ip, #3284]!	; 0xcd4

0001137c <context_type_set@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #20, 20	; 0x14000
   11384:	ldr	pc, [ip, #3276]!	; 0xccc

00011388 <realloc@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #20, 20	; 0x14000
   11390:	ldr	pc, [ip, #3268]!	; 0xcc4

00011394 <fgetfilecon@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #20, 20	; 0x14000
   1139c:	ldr	pc, [ip, #3260]!	; 0xcbc

000113a0 <textdomain@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #20, 20	; 0x14000
   113a8:	ldr	pc, [ip, #3252]!	; 0xcb4

000113ac <iswprint@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #20, 20	; 0x14000
   113b4:	ldr	pc, [ip, #3244]!	; 0xcac

000113b8 <fwrite@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #20, 20	; 0x14000
   113c0:	ldr	pc, [ip, #3236]!	; 0xca4

000113c4 <lseek64@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #20, 20	; 0x14000
   113cc:	ldr	pc, [ip, #3228]!	; 0xc9c

000113d0 <__ctype_get_mb_cur_max@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #20, 20	; 0x14000
   113d8:	ldr	pc, [ip, #3220]!	; 0xc94

000113dc <strcpy@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #20, 20	; 0x14000
   113e4:	ldr	pc, [ip, #3212]!	; 0xc8c

000113e8 <getcon@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #20, 20	; 0x14000
   113f0:	ldr	pc, [ip, #3204]!	; 0xc84

000113f4 <__fpending@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #20, 20	; 0x14000
   113fc:	ldr	pc, [ip, #3196]!	; 0xc7c

00011400 <mbrtowc@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #20, 20	; 0x14000
   11408:	ldr	pc, [ip, #3188]!	; 0xc74

0001140c <error@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #20, 20	; 0x14000
   11414:	ldr	pc, [ip, #3180]!	; 0xc6c

00011418 <security_check_context@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #20, 20	; 0x14000
   11420:	ldr	pc, [ip, #3172]!	; 0xc64

00011424 <open64@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #20, 20	; 0x14000
   1142c:	ldr	pc, [ip, #3164]!	; 0xc5c

00011430 <getenv@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #20, 20	; 0x14000
   11438:	ldr	pc, [ip, #3156]!	; 0xc54

0001143c <lgetfilecon@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #20, 20	; 0x14000
   11444:	ldr	pc, [ip, #3148]!	; 0xc4c

00011448 <malloc@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #20, 20	; 0x14000
   11450:	ldr	pc, [ip, #3140]!	; 0xc44

00011454 <__libc_start_main@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #20, 20	; 0x14000
   1145c:	ldr	pc, [ip, #3132]!	; 0xc3c

00011460 <__freading@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #20, 20	; 0x14000
   11468:	ldr	pc, [ip, #3124]!	; 0xc34

0001146c <__gmon_start__@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #20, 20	; 0x14000
   11474:	ldr	pc, [ip, #3116]!	; 0xc2c

00011478 <getopt_long@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #20, 20	; 0x14000
   11480:	ldr	pc, [ip, #3108]!	; 0xc24

00011484 <__ctype_b_loc@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #20, 20	; 0x14000
   1148c:	ldr	pc, [ip, #3100]!	; 0xc1c

00011490 <exit@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #20, 20	; 0x14000
   11498:	ldr	pc, [ip, #3092]!	; 0xc14

0001149c <context_user_set@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #20, 20	; 0x14000
   114a4:	ldr	pc, [ip, #3084]!	; 0xc0c

000114a8 <getfilecon@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #20, 20	; 0x14000
   114b0:	ldr	pc, [ip, #3076]!	; 0xc04

000114b4 <strlen@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #20, 20	; 0x14000
   114bc:	ldr	pc, [ip, #3068]!	; 0xbfc

000114c0 <ungetc@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #20, 20	; 0x14000
   114c8:	ldr	pc, [ip, #3060]!	; 0xbf4

000114cc <__errno_location@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #20, 20	; 0x14000
   114d4:	ldr	pc, [ip, #3052]!	; 0xbec

000114d8 <__cxa_atexit@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #20, 20	; 0x14000
   114e0:	ldr	pc, [ip, #3044]!	; 0xbe4

000114e4 <memset@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #20, 20	; 0x14000
   114ec:	ldr	pc, [ip, #3036]!	; 0xbdc

000114f0 <fscanf@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #20, 20	; 0x14000
   114f8:	ldr	pc, [ip, #3028]!	; 0xbd4

000114fc <__printf_chk@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #20, 20	; 0x14000
   11504:	ldr	pc, [ip, #3020]!	; 0xbcc

00011508 <fileno@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #20, 20	; 0x14000
   11510:	ldr	pc, [ip, #3012]!	; 0xbc4

00011514 <__fprintf_chk@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #20, 20	; 0x14000
   1151c:	ldr	pc, [ip, #3004]!	; 0xbbc

00011520 <fclose@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #20, 20	; 0x14000
   11528:	ldr	pc, [ip, #2996]!	; 0xbb4

0001152c <fseeko64@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #20, 20	; 0x14000
   11534:	ldr	pc, [ip, #2988]!	; 0xbac

00011538 <__uflow@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #20, 20	; 0x14000
   11540:	ldr	pc, [ip, #2980]!	; 0xba4

00011544 <__overflow@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #20, 20	; 0x14000
   1154c:	ldr	pc, [ip, #2972]!	; 0xb9c

00011550 <setlocale@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #20, 20	; 0x14000
   11558:	ldr	pc, [ip, #2964]!	; 0xb94

0001155c <strrchr@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #20, 20	; 0x14000
   11564:	ldr	pc, [ip, #2956]!	; 0xb8c

00011568 <nl_langinfo@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #20, 20	; 0x14000
   11570:	ldr	pc, [ip, #2948]!	; 0xb84

00011574 <security_compute_create@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #20, 20	; 0x14000
   1157c:	ldr	pc, [ip, #2940]!	; 0xb7c

00011580 <freecon@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #20, 20	; 0x14000
   11588:	ldr	pc, [ip, #2932]!	; 0xb74

0001158c <bindtextdomain@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #20, 20	; 0x14000
   11594:	ldr	pc, [ip, #2924]!	; 0xb6c

00011598 <context_range_set@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #20, 20	; 0x14000
   115a0:	ldr	pc, [ip, #2916]!	; 0xb64

000115a4 <setexeccon@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #20, 20	; 0x14000
   115ac:	ldr	pc, [ip, #2908]!	; 0xb5c

000115b0 <context_str@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #20, 20	; 0x14000
   115b8:	ldr	pc, [ip, #2900]!	; 0xb54

000115bc <strncmp@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #20, 20	; 0x14000
   115c4:	ldr	pc, [ip, #2892]!	; 0xb4c

000115c8 <abort@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #20, 20	; 0x14000
   115d0:	ldr	pc, [ip, #2884]!	; 0xb44

000115d4 <close@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #20, 20	; 0x14000
   115dc:	ldr	pc, [ip, #2876]!	; 0xb3c

Disassembly of section .text:

000115e0 <close_stdout@@Base-0xc34>:
   115e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115e4:	sub	sp, sp, #68	; 0x44
   115e8:	ldr	r4, [pc, #2072]	; 11e08 <close@plt+0x834>
   115ec:	mov	r3, #0
   115f0:	ldr	r2, [pc, #2068]	; 11e0c <close@plt+0x838>
   115f4:	mov	r7, r0
   115f8:	add	r4, pc, r4
   115fc:	ldr	r0, [r1]
   11600:	mov	r5, r3
   11604:	mov	r6, r1
   11608:	ldr	r2, [r4, r2]
   1160c:	add	sl, sp, #56	; 0x38
   11610:	str	r3, [sp, #44]	; 0x2c
   11614:	str	r3, [sp, #20]
   11618:	ldr	r2, [r2]
   1161c:	str	r3, [sp, #48]	; 0x30
   11620:	str	r3, [sp, #12]
   11624:	str	r3, [sp, #16]
   11628:	str	r3, [sp, #52]	; 0x34
   1162c:	str	r3, [sp, #8]
   11630:	str	r2, [sp, #60]	; 0x3c
   11634:	bl	123d0 <close_stdout@@Base+0x1bc>
   11638:	ldr	r1, [pc, #2000]	; 11e10 <close@plt+0x83c>
   1163c:	mov	r0, #6
   11640:	ldr	r8, [pc, #1996]	; 11e14 <close@plt+0x840>
   11644:	add	r1, pc, r1
   11648:	ldr	r9, [pc, #1992]	; 11e18 <close@plt+0x844>
   1164c:	bl	11550 <setlocale@plt>
   11650:	add	r8, pc, r8
   11654:	ldr	r1, [pc, #1984]	; 11e1c <close@plt+0x848>
   11658:	add	r9, pc, r9
   1165c:	mov	r0, r8
   11660:	add	r1, pc, r1
   11664:	bl	1158c <bindtextdomain@plt>
   11668:	mov	r0, r8
   1166c:	bl	113a0 <textdomain@plt>
   11670:	ldr	r3, [pc, #1960]	; 11e20 <close@plt+0x84c>
   11674:	ldr	r1, [pc, #1960]	; 11e24 <close@plt+0x850>
   11678:	ldr	r8, [pc, #1960]	; 11e28 <close@plt+0x854>
   1167c:	add	r1, pc, r1
   11680:	ldr	r2, [pc, #1956]	; 11e2c <close@plt+0x858>
   11684:	str	r1, [sp, #24]
   11688:	add	r8, pc, r8
   1168c:	ldr	r0, [r4, r3]
   11690:	add	r2, pc, r2
   11694:	ldr	r3, [pc, #1940]	; 11e30 <close@plt+0x85c>
   11698:	ldr	r1, [pc, #1940]	; 11e34 <close@plt+0x860>
   1169c:	add	r3, pc, r3
   116a0:	str	r2, [sp, #28]
   116a4:	add	r1, pc, r1
   116a8:	str	r3, [sp, #32]
   116ac:	str	r1, [sp, #36]	; 0x24
   116b0:	bl	14db8 <close_stdout@@Base+0x2ba4>
   116b4:	str	sl, [sp]
   116b8:	mov	r0, r7
   116bc:	mov	r1, r6
   116c0:	mov	r2, r9
   116c4:	mov	r3, r8
   116c8:	mov	fp, #0
   116cc:	str	fp, [sp, #56]	; 0x38
   116d0:	bl	11478 <getopt_long@plt>
   116d4:	cmn	r0, #1
   116d8:	beq	11870 <close@plt+0x29c>
   116dc:	cmp	r0, #108	; 0x6c
   116e0:	beq	11830 <close@plt+0x25c>
   116e4:	bgt	11740 <close@plt+0x16c>
   116e8:	cmn	r0, #2
   116ec:	beq	117a8 <close@plt+0x1d4>
   116f0:	cmp	r0, #99	; 0x63
   116f4:	beq	117a0 <close@plt+0x1cc>
   116f8:	cmn	r0, #3
   116fc:	bne	11758 <close@plt+0x184>
   11700:	ldr	r1, [pc, #1840]	; 11e38 <close@plt+0x864>
   11704:	ldr	r3, [pc, #1840]	; 11e3c <close@plt+0x868>
   11708:	ldr	r2, [pc, #1840]	; 11e40 <close@plt+0x86c>
   1170c:	ldr	r0, [r4, r1]
   11710:	ldr	r3, [r4, r3]
   11714:	add	r2, pc, r2
   11718:	ldr	r1, [pc, #1828]	; 11e44 <close@plt+0x870>
   1171c:	ldr	r0, [r0]
   11720:	ldr	r3, [r3]
   11724:	add	r1, pc, r1
   11728:	stm	sp, {r2, fp}
   1172c:	ldr	r2, [pc, #1812]	; 11e48 <close@plt+0x874>
   11730:	add	r2, pc, r2
   11734:	bl	140bc <close_stdout@@Base+0x1ea8>
   11738:	mov	r0, fp
   1173c:	bl	11490 <exit@plt>
   11740:	cmp	r0, #116	; 0x74
   11744:	beq	117b0 <close@plt+0x1dc>
   11748:	cmp	r0, #117	; 0x75
   1174c:	beq	11760 <close@plt+0x18c>
   11750:	cmp	r0, #114	; 0x72
   11754:	beq	117f0 <close@plt+0x21c>
   11758:	mov	r0, #1
   1175c:	bl	11fcc <close@plt+0x9f8>
   11760:	ldr	r1, [sp, #12]
   11764:	cmp	r1, #0
   11768:	beq	1178c <close@plt+0x1b8>
   1176c:	ldr	r1, [sp, #32]
   11770:	mov	r2, #5
   11774:	mov	r0, fp
   11778:	bl	11364 <dcgettext@plt>
   1177c:	mov	r1, fp
   11780:	mov	r2, r0
   11784:	mov	r0, #1
   11788:	bl	1140c <error@plt>
   1178c:	ldr	r3, [pc, #1720]	; 11e4c <close@plt+0x878>
   11790:	ldr	r3, [r4, r3]
   11794:	ldr	r3, [r3]
   11798:	str	r3, [sp, #12]
   1179c:	b	116b4 <close@plt+0xe0>
   117a0:	mov	r5, #1
   117a4:	b	116b4 <close@plt+0xe0>
   117a8:	mov	r0, fp
   117ac:	bl	11fcc <close@plt+0x9f8>
   117b0:	ldr	r3, [sp, #20]
   117b4:	cmp	r3, #0
   117b8:	beq	117dc <close@plt+0x208>
   117bc:	ldr	r1, [sp, #28]
   117c0:	mov	r2, #5
   117c4:	mov	r0, fp
   117c8:	bl	11364 <dcgettext@plt>
   117cc:	mov	r1, fp
   117d0:	mov	r2, r0
   117d4:	mov	r0, #1
   117d8:	bl	1140c <error@plt>
   117dc:	ldr	r3, [pc, #1640]	; 11e4c <close@plt+0x878>
   117e0:	ldr	r3, [r4, r3]
   117e4:	ldr	r3, [r3]
   117e8:	str	r3, [sp, #20]
   117ec:	b	116b4 <close@plt+0xe0>
   117f0:	ldr	r2, [sp, #8]
   117f4:	cmp	r2, #0
   117f8:	beq	1181c <close@plt+0x248>
   117fc:	ldr	r1, [sp, #36]	; 0x24
   11800:	mov	r2, #5
   11804:	mov	r0, fp
   11808:	bl	11364 <dcgettext@plt>
   1180c:	mov	r1, fp
   11810:	mov	r2, r0
   11814:	mov	r0, #1
   11818:	bl	1140c <error@plt>
   1181c:	ldr	r3, [pc, #1576]	; 11e4c <close@plt+0x878>
   11820:	ldr	r3, [r4, r3]
   11824:	ldr	r3, [r3]
   11828:	str	r3, [sp, #8]
   1182c:	b	116b4 <close@plt+0xe0>
   11830:	ldr	r2, [sp, #16]
   11834:	cmp	r2, #0
   11838:	beq	1185c <close@plt+0x288>
   1183c:	ldr	r1, [sp, #24]
   11840:	mov	r2, #5
   11844:	mov	r0, fp
   11848:	bl	11364 <dcgettext@plt>
   1184c:	mov	r1, fp
   11850:	mov	r2, r0
   11854:	mov	r0, #1
   11858:	bl	1140c <error@plt>
   1185c:	ldr	r3, [pc, #1512]	; 11e4c <close@plt+0x878>
   11860:	ldr	r3, [r4, r3]
   11864:	ldr	r3, [r3]
   11868:	str	r3, [sp, #16]
   1186c:	b	116b4 <close@plt+0xe0>
   11870:	ldr	r3, [pc, #1496]	; 11e50 <close@plt+0x87c>
   11874:	ldr	r8, [r4, r3]
   11878:	ldr	r3, [r8]
   1187c:	cmp	r7, r3
   11880:	beq	11a0c <close@plt+0x438>
   11884:	ldr	r1, [sp, #12]
   11888:	ldr	r2, [sp, #8]
   1188c:	cmp	r1, #0
   11890:	cmpeq	r2, #0
   11894:	movne	r9, #0
   11898:	moveq	r9, #1
   1189c:	bne	11904 <close@plt+0x330>
   118a0:	ldr	r1, [sp, #20]
   118a4:	ldr	r2, [sp, #16]
   118a8:	cmp	r1, #0
   118ac:	cmpeq	r2, #0
   118b0:	movne	r9, #0
   118b4:	moveq	r9, #1
   118b8:	bne	11904 <close@plt+0x330>
   118bc:	cmp	r5, #0
   118c0:	bne	11900 <close@plt+0x32c>
   118c4:	cmp	r7, r3
   118c8:	addgt	r2, r3, #1
   118cc:	strgt	r2, [r8]
   118d0:	ldrgt	r9, [r6, r3, lsl #2]
   118d4:	bgt	11904 <close@plt+0x330>
   118d8:	ldr	r1, [pc, #1396]	; 11e54 <close@plt+0x880>
   118dc:	mov	r0, r5
   118e0:	mov	r2, #5
   118e4:	add	r1, pc, r1
   118e8:	bl	11364 <dcgettext@plt>
   118ec:	mov	r1, r5
   118f0:	mov	r2, r0
   118f4:	mov	r0, r5
   118f8:	bl	1140c <error@plt>
   118fc:	b	11758 <close@plt+0x184>
   11900:	mov	r9, fp
   11904:	ldr	r3, [r8]
   11908:	cmp	r7, r3
   1190c:	bgt	1193c <close@plt+0x368>
   11910:	ldr	r1, [pc, #1344]	; 11e58 <close@plt+0x884>
   11914:	mov	r2, #5
   11918:	mov	r0, #0
   1191c:	add	r1, pc, r1
   11920:	bl	11364 <dcgettext@plt>
   11924:	mov	r2, r0
   11928:	mov	r0, #0
   1192c:	mov	r1, r0
   11930:	bl	1140c <error@plt>
   11934:	mov	r0, #1
   11938:	bl	11fcc <close@plt+0x9f8>
   1193c:	bl	112e0 <is_selinux_enabled@plt>
   11940:	cmp	r0, #1
   11944:	beq	11978 <close@plt+0x3a4>
   11948:	ldr	r1, [pc, #1292]	; 11e5c <close@plt+0x888>
   1194c:	mov	r2, #5
   11950:	mov	r0, #0
   11954:	add	r1, pc, r1
   11958:	bl	11364 <dcgettext@plt>
   1195c:	ldr	r3, [pc, #1276]	; 11e60 <close@plt+0x88c>
   11960:	mov	r1, #0
   11964:	ldr	r3, [r4, r3]
   11968:	ldr	r3, [r3]
   1196c:	mov	r2, r0
   11970:	mov	r0, #1
   11974:	bl	1140c <error@plt>
   11978:	cmp	r9, #0
   1197c:	beq	11aa0 <close@plt+0x4cc>
   11980:	mov	r0, r9
   11984:	bl	11340 <context_new@plt>
   11988:	subs	r4, r0, #0
   1198c:	beq	11bbc <close@plt+0x5e8>
   11990:	mov	r0, r4
   11994:	bl	115b0 <context_str@plt>
   11998:	bl	11418 <security_check_context@plt>
   1199c:	cmp	r0, #0
   119a0:	blt	11b78 <close@plt+0x5a4>
   119a4:	mov	r0, r4
   119a8:	bl	115b0 <context_str@plt>
   119ac:	bl	115a4 <setexeccon@plt>
   119b0:	cmp	r0, #0
   119b4:	bne	11a5c <close@plt+0x488>
   119b8:	ldr	r0, [sp, #44]	; 0x2c
   119bc:	cmp	r0, #0
   119c0:	beq	119c8 <close@plt+0x3f4>
   119c4:	bl	11580 <freecon@plt>
   119c8:	ldr	r1, [r8]
   119cc:	ldr	r0, [r6, r1, lsl #2]
   119d0:	add	r1, r6, r1, lsl #2
   119d4:	bl	11328 <execvp@plt>
   119d8:	bl	114cc <__errno_location@plt>
   119dc:	ldr	r3, [r8]
   119e0:	ldr	r2, [pc, #1148]	; 11e64 <close@plt+0x890>
   119e4:	ldr	r3, [r6, r3, lsl #2]
   119e8:	add	r2, pc, r2
   119ec:	ldr	r1, [r0]
   119f0:	mov	r0, #0
   119f4:	cmp	r1, #2
   119f8:	movne	r4, #126	; 0x7e
   119fc:	moveq	r4, #127	; 0x7f
   11a00:	bl	1140c <error@plt>
   11a04:	mov	r0, r4
   11a08:	bl	11490 <exit@plt>
   11a0c:	add	r0, sp, #44	; 0x2c
   11a10:	bl	113e8 <getcon@plt>
   11a14:	cmp	r0, #0
   11a18:	blt	11bfc <close@plt+0x628>
   11a1c:	ldr	r3, [pc, #1044]	; 11e38 <close@plt+0x864>
   11a20:	ldr	r0, [sp, #44]	; 0x2c
   11a24:	ldr	r4, [r4, r3]
   11a28:	ldr	r1, [r4]
   11a2c:	bl	112c8 <fputs_unlocked@plt>
   11a30:	ldr	r0, [r4]
   11a34:	ldr	r3, [r0, #20]
   11a38:	ldr	r2, [r0, #24]
   11a3c:	cmp	r3, r2
   11a40:	addcc	r1, r3, #1
   11a44:	movcc	r2, #10
   11a48:	strcc	r1, [r0, #20]
   11a4c:	strbcc	r2, [r3]
   11a50:	bcs	11dfc <close@plt+0x828>
   11a54:	mov	r0, #0
   11a58:	bl	11490 <exit@plt>
   11a5c:	bl	114cc <__errno_location@plt>
   11a60:	ldr	r1, [pc, #1024]	; 11e68 <close@plt+0x894>
   11a64:	mov	r2, #5
   11a68:	add	r1, pc, r1
   11a6c:	ldr	r5, [r0]
   11a70:	mov	r0, #0
   11a74:	bl	11364 <dcgettext@plt>
   11a78:	mov	r7, r0
   11a7c:	mov	r0, r4
   11a80:	bl	115b0 <context_str@plt>
   11a84:	bl	13c20 <close_stdout@@Base+0x1a0c>
   11a88:	mov	r1, r5
   11a8c:	mov	r2, r7
   11a90:	mov	r3, r0
   11a94:	mov	r0, #1
   11a98:	bl	1140c <error@plt>
   11a9c:	b	119b8 <close@plt+0x3e4>
   11aa0:	add	r0, sp, #44	; 0x2c
   11aa4:	bl	113e8 <getcon@plt>
   11aa8:	cmp	r0, #0
   11aac:	blt	11d18 <close@plt+0x744>
   11ab0:	cmp	r5, #0
   11ab4:	bne	11c2c <close@plt+0x658>
   11ab8:	ldr	r0, [sp, #44]	; 0x2c
   11abc:	bl	11340 <context_new@plt>
   11ac0:	subs	r4, r0, #0
   11ac4:	beq	11dbc <close@plt+0x7e8>
   11ac8:	ldr	r3, [sp, #12]
   11acc:	cmp	r3, #0
   11ad0:	beq	11ae8 <close@plt+0x514>
   11ad4:	mov	r0, r4
   11ad8:	mov	r1, r3
   11adc:	bl	1149c <context_user_set@plt>
   11ae0:	cmp	r0, #0
   11ae4:	bne	11ce4 <close@plt+0x710>
   11ae8:	ldr	r1, [sp, #20]
   11aec:	cmp	r1, #0
   11af0:	beq	11b04 <close@plt+0x530>
   11af4:	mov	r0, r4
   11af8:	bl	1137c <context_type_set@plt>
   11afc:	cmp	r0, #0
   11b00:	bne	11c7c <close@plt+0x6a8>
   11b04:	ldr	r2, [sp, #16]
   11b08:	cmp	r2, #0
   11b0c:	beq	11b24 <close@plt+0x550>
   11b10:	mov	r0, r4
   11b14:	mov	r1, r2
   11b18:	bl	11598 <context_range_set@plt>
   11b1c:	cmp	r0, #0
   11b20:	bne	11cb0 <close@plt+0x6dc>
   11b24:	ldr	r3, [sp, #8]
   11b28:	cmp	r3, #0
   11b2c:	beq	11990 <close@plt+0x3bc>
   11b30:	mov	r0, r4
   11b34:	mov	r1, r3
   11b38:	bl	11358 <context_role_set@plt>
   11b3c:	cmp	r0, #0
   11b40:	beq	11990 <close@plt+0x3bc>
   11b44:	bl	114cc <__errno_location@plt>
   11b48:	ldr	r1, [pc, #796]	; 11e6c <close@plt+0x898>
   11b4c:	mov	r2, #5
   11b50:	add	r1, pc, r1
   11b54:	ldr	r5, [r0]
   11b58:	mov	r0, #0
   11b5c:	bl	11364 <dcgettext@plt>
   11b60:	ldr	r3, [sp, #8]
   11b64:	mov	r1, r5
   11b68:	mov	r2, r0
   11b6c:	mov	r0, #1
   11b70:	bl	1140c <error@plt>
   11b74:	b	11990 <close@plt+0x3bc>
   11b78:	bl	114cc <__errno_location@plt>
   11b7c:	ldr	r1, [pc, #748]	; 11e70 <close@plt+0x89c>
   11b80:	mov	r2, #5
   11b84:	add	r1, pc, r1
   11b88:	ldr	r5, [r0]
   11b8c:	mov	r0, #0
   11b90:	bl	11364 <dcgettext@plt>
   11b94:	mov	r7, r0
   11b98:	mov	r0, r4
   11b9c:	bl	115b0 <context_str@plt>
   11ba0:	bl	13acc <close_stdout@@Base+0x18b8>
   11ba4:	mov	r1, r5
   11ba8:	mov	r2, r7
   11bac:	mov	r3, r0
   11bb0:	mov	r0, #1
   11bb4:	bl	1140c <error@plt>
   11bb8:	b	119a4 <close@plt+0x3d0>
   11bbc:	bl	114cc <__errno_location@plt>
   11bc0:	ldr	r1, [pc, #684]	; 11e74 <close@plt+0x8a0>
   11bc4:	mov	r2, #5
   11bc8:	add	r1, pc, r1
   11bcc:	ldr	r5, [r0]
   11bd0:	mov	r0, r4
   11bd4:	bl	11364 <dcgettext@plt>
   11bd8:	mov	r7, r0
   11bdc:	mov	r0, r9
   11be0:	bl	13acc <close_stdout@@Base+0x18b8>
   11be4:	mov	r1, r5
   11be8:	mov	r2, r7
   11bec:	mov	r3, r0
   11bf0:	mov	r0, #1
   11bf4:	bl	1140c <error@plt>
   11bf8:	b	11990 <close@plt+0x3bc>
   11bfc:	bl	114cc <__errno_location@plt>
   11c00:	ldr	r1, [pc, #624]	; 11e78 <close@plt+0x8a4>
   11c04:	mov	r2, #5
   11c08:	add	r1, pc, r1
   11c0c:	ldr	r5, [r0]
   11c10:	mov	r0, fp
   11c14:	bl	11364 <dcgettext@plt>
   11c18:	mov	r1, r5
   11c1c:	mov	r2, r0
   11c20:	mov	r0, #1
   11c24:	bl	1140c <error@plt>
   11c28:	b	11a1c <close@plt+0x448>
   11c2c:	ldr	r3, [r8]
   11c30:	add	r1, sp, #48	; 0x30
   11c34:	ldr	r0, [r6, r3, lsl #2]
   11c38:	bl	144a4 <close_stdout@@Base+0x2290>
   11c3c:	cmn	r0, #1
   11c40:	beq	11d78 <close@plt+0x7a4>
   11c44:	ldr	r0, [sp, #44]	; 0x2c
   11c48:	mov	r2, #2
   11c4c:	ldr	r1, [sp, #48]	; 0x30
   11c50:	add	r3, sp, #52	; 0x34
   11c54:	bl	11574 <security_compute_create@plt>
   11c58:	cmp	r0, #0
   11c5c:	bne	11d48 <close@plt+0x774>
   11c60:	ldr	r0, [sp, #48]	; 0x30
   11c64:	bl	11580 <freecon@plt>
   11c68:	ldr	r0, [sp, #44]	; 0x2c
   11c6c:	bl	11580 <freecon@plt>
   11c70:	ldr	r3, [sp, #52]	; 0x34
   11c74:	str	r3, [sp, #44]	; 0x2c
   11c78:	b	11ab8 <close@plt+0x4e4>
   11c7c:	bl	114cc <__errno_location@plt>
   11c80:	ldr	r1, [pc, #500]	; 11e7c <close@plt+0x8a8>
   11c84:	mov	r2, #5
   11c88:	add	r1, pc, r1
   11c8c:	ldr	r5, [r0]
   11c90:	mov	r0, #0
   11c94:	bl	11364 <dcgettext@plt>
   11c98:	ldr	r3, [sp, #20]
   11c9c:	mov	r1, r5
   11ca0:	mov	r2, r0
   11ca4:	mov	r0, #1
   11ca8:	bl	1140c <error@plt>
   11cac:	b	11b04 <close@plt+0x530>
   11cb0:	bl	114cc <__errno_location@plt>
   11cb4:	ldr	r1, [pc, #452]	; 11e80 <close@plt+0x8ac>
   11cb8:	mov	r2, #5
   11cbc:	add	r1, pc, r1
   11cc0:	ldr	r5, [r0]
   11cc4:	mov	r0, #0
   11cc8:	bl	11364 <dcgettext@plt>
   11ccc:	ldr	r3, [sp, #16]
   11cd0:	mov	r1, r5
   11cd4:	mov	r2, r0
   11cd8:	mov	r0, #1
   11cdc:	bl	1140c <error@plt>
   11ce0:	b	11b24 <close@plt+0x550>
   11ce4:	bl	114cc <__errno_location@plt>
   11ce8:	ldr	r1, [pc, #404]	; 11e84 <close@plt+0x8b0>
   11cec:	mov	r2, #5
   11cf0:	add	r1, pc, r1
   11cf4:	ldr	r5, [r0]
   11cf8:	mov	r0, #0
   11cfc:	bl	11364 <dcgettext@plt>
   11d00:	ldr	r3, [sp, #12]
   11d04:	mov	r1, r5
   11d08:	mov	r2, r0
   11d0c:	mov	r0, #1
   11d10:	bl	1140c <error@plt>
   11d14:	b	11ae8 <close@plt+0x514>
   11d18:	bl	114cc <__errno_location@plt>
   11d1c:	ldr	r1, [pc, #356]	; 11e88 <close@plt+0x8b4>
   11d20:	mov	r2, #5
   11d24:	add	r1, pc, r1
   11d28:	ldr	r4, [r0]
   11d2c:	mov	r0, r9
   11d30:	bl	11364 <dcgettext@plt>
   11d34:	mov	r1, r4
   11d38:	mov	r2, r0
   11d3c:	mov	r0, #1
   11d40:	bl	1140c <error@plt>
   11d44:	b	11ab0 <close@plt+0x4dc>
   11d48:	bl	114cc <__errno_location@plt>
   11d4c:	ldr	r1, [pc, #312]	; 11e8c <close@plt+0x8b8>
   11d50:	mov	r2, #5
   11d54:	add	r1, pc, r1
   11d58:	ldr	r4, [r0]
   11d5c:	mov	r0, #0
   11d60:	bl	11364 <dcgettext@plt>
   11d64:	mov	r1, r4
   11d68:	mov	r2, r0
   11d6c:	mov	r0, #1
   11d70:	bl	1140c <error@plt>
   11d74:	b	11c60 <close@plt+0x68c>
   11d78:	bl	114cc <__errno_location@plt>
   11d7c:	ldr	r1, [pc, #268]	; 11e90 <close@plt+0x8bc>
   11d80:	mov	r2, #5
   11d84:	add	r1, pc, r1
   11d88:	ldr	r4, [r0]
   11d8c:	mov	r0, #0
   11d90:	bl	11364 <dcgettext@plt>
   11d94:	ldr	r3, [r8]
   11d98:	mov	r5, r0
   11d9c:	ldr	r0, [r6, r3, lsl #2]
   11da0:	bl	13c20 <close_stdout@@Base+0x1a0c>
   11da4:	mov	r1, r4
   11da8:	mov	r2, r5
   11dac:	mov	r3, r0
   11db0:	mov	r0, #1
   11db4:	bl	1140c <error@plt>
   11db8:	b	11c44 <close@plt+0x670>
   11dbc:	bl	114cc <__errno_location@plt>
   11dc0:	ldr	r1, [pc, #204]	; 11e94 <close@plt+0x8c0>
   11dc4:	mov	r2, #5
   11dc8:	add	r1, pc, r1
   11dcc:	ldr	r5, [r0]
   11dd0:	mov	r0, r4
   11dd4:	bl	11364 <dcgettext@plt>
   11dd8:	mov	r7, r0
   11ddc:	ldr	r0, [sp, #44]	; 0x2c
   11de0:	bl	13acc <close_stdout@@Base+0x18b8>
   11de4:	mov	r1, r5
   11de8:	mov	r2, r7
   11dec:	mov	r3, r0
   11df0:	mov	r0, #1
   11df4:	bl	1140c <error@plt>
   11df8:	b	11ac8 <close@plt+0x4f4>
   11dfc:	mov	r1, #10
   11e00:	bl	11544 <__overflow@plt>
   11e04:	b	11a54 <close@plt+0x480>
   11e08:	andeq	r4, r1, r0, lsl #20
   11e0c:	andeq	r0, r0, r0, lsr #2
   11e10:	andeq	r3, r0, r8, asr fp
   11e14:	andeq	r3, r0, ip, lsl #21
   11e18:	andeq	r3, r0, ip, asr fp
   11e1c:	andeq	r3, r0, r0, asr #22
   11e20:	andeq	r0, r0, r0, lsr r1
   11e24:	andeq	r3, r0, r4, ror fp
   11e28:	andeq	r4, r1, ip, asr #15
   11e2c:	andeq	r3, r0, r0, asr #22
   11e30:	andeq	r3, r0, r4, asr #22
   11e34:	andeq	r3, r0, ip, lsl fp
   11e38:	andeq	r0, r0, ip, lsr r1
   11e3c:	andeq	r0, r0, r8, lsr #2
   11e40:	strdeq	r3, [r0], -ip
   11e44:	andeq	r3, r0, r4, ror #21
   11e48:	andeq	r3, r0, r8, lsr #19
   11e4c:	andeq	r0, r0, r4, asr r1
   11e50:	andeq	r0, r0, r4, lsr #2
   11e54:	andeq	r3, r0, ip, asr r9
   11e58:	andeq	r3, r0, r4, asr r9
   11e5c:	andeq	r3, r0, r4, lsr r9
   11e60:	andeq	r0, r0, r8, asr #2
   11e64:	andeq	r3, r0, r0, lsr sl
   11e68:	andeq	r3, r0, ip, lsr r9
   11e6c:	andeq	r3, r0, r4, lsr #16
   11e70:	andeq	r3, r0, ip, lsl #16
   11e74:	andeq	r3, r0, r8, ror #13
   11e78:	andeq	r3, r0, r8, lsl r6
   11e7c:			; <UNDEFINED> instruction: 0x000036b4
   11e80:	muleq	r0, ip, r6
   11e84:	andeq	r3, r0, r0, lsr r6
   11e88:	strdeq	r3, [r0], -ip
   11e8c:	andeq	r3, r0, ip, lsr #11
   11e90:	andeq	r3, r0, r4, asr r5
   11e94:	andeq	r3, r0, r8, ror #9
   11e98:	mov	fp, #0
   11e9c:	mov	lr, #0
   11ea0:	pop	{r1}		; (ldr r1, [sp], #4)
   11ea4:	mov	r2, sp
   11ea8:	push	{r2}		; (str r2, [sp, #-4]!)
   11eac:	push	{r0}		; (str r0, [sp, #-4]!)
   11eb0:	ldr	ip, [pc, #16]	; 11ec8 <close@plt+0x8f4>
   11eb4:	push	{ip}		; (str ip, [sp, #-4]!)
   11eb8:	ldr	r0, [pc, #12]	; 11ecc <close@plt+0x8f8>
   11ebc:	ldr	r3, [pc, #12]	; 11ed0 <close@plt+0x8fc>
   11ec0:	bl	11454 <__libc_start_main@plt>
   11ec4:	bl	115c8 <abort@plt>
   11ec8:			; <UNDEFINED> instruction: 0x00014db4
   11ecc:	andeq	r1, r1, r0, ror #11
   11ed0:	andeq	r4, r1, r0, asr sp
   11ed4:	ldr	r3, [pc, #20]	; 11ef0 <close@plt+0x91c>
   11ed8:	ldr	r2, [pc, #20]	; 11ef4 <close@plt+0x920>
   11edc:	add	r3, pc, r3
   11ee0:	ldr	r2, [r3, r2]
   11ee4:	cmp	r2, #0
   11ee8:	bxeq	lr
   11eec:	b	1146c <__gmon_start__@plt>
   11ef0:	andeq	r4, r1, ip, lsl r1
   11ef4:	andeq	r0, r0, r4, lsr r1
   11ef8:	push	{r3, lr}
   11efc:	movw	r0, #24996	; 0x61a4
   11f00:	ldr	r3, [pc, #36]	; 11f2c <close@plt+0x958>
   11f04:	movt	r0, #2
   11f08:	rsb	r3, r0, r3
   11f0c:	cmp	r3, #6
   11f10:	popls	{r3, pc}
   11f14:	movw	r3, #0
   11f18:	movt	r3, #0
   11f1c:	cmp	r3, #0
   11f20:	popeq	{r3, pc}
   11f24:	blx	r3
   11f28:	pop	{r3, pc}
   11f2c:	andeq	r6, r2, r7, lsr #3
   11f30:	push	{r3, lr}
   11f34:	movw	r0, #24996	; 0x61a4
   11f38:	movw	r3, #24996	; 0x61a4
   11f3c:	movt	r0, #2
   11f40:	movt	r3, #2
   11f44:	rsb	r3, r0, r3
   11f48:	asr	r3, r3, #2
   11f4c:	add	r3, r3, r3, lsr #31
   11f50:	asrs	r1, r3, #1
   11f54:	popeq	{r3, pc}
   11f58:	movw	r2, #0
   11f5c:	movt	r2, #0
   11f60:	cmp	r2, #0
   11f64:	popeq	{r3, pc}
   11f68:	blx	r2
   11f6c:	pop	{r3, pc}
   11f70:	push	{r4, lr}
   11f74:	movw	r4, #24996	; 0x61a4
   11f78:	movt	r4, #2
   11f7c:	ldrb	r3, [r4]
   11f80:	cmp	r3, #0
   11f84:	popne	{r4, pc}
   11f88:	bl	11ef8 <close@plt+0x924>
   11f8c:	mov	r3, #1
   11f90:	strb	r3, [r4]
   11f94:	pop	{r4, pc}
   11f98:	movw	r0, #24152	; 0x5e58
   11f9c:	movt	r0, #2
   11fa0:	push	{r3, lr}
   11fa4:	ldr	r3, [r0]
   11fa8:	cmp	r3, #0
   11fac:	beq	11fc4 <close@plt+0x9f0>
   11fb0:	movw	r3, #0
   11fb4:	movt	r3, #0
   11fb8:	cmp	r3, #0
   11fbc:	beq	11fc4 <close@plt+0x9f0>
   11fc0:	blx	r3
   11fc4:	pop	{r3, lr}
   11fc8:	b	11f30 <close@plt+0x95c>
   11fcc:	push	{r4, r5, r6, lr}
   11fd0:	subs	r4, r0, #0
   11fd4:	ldr	r5, [pc, #460]	; 121a8 <close@plt+0xbd4>
   11fd8:	add	r5, pc, r5
   11fdc:	beq	12024 <close@plt+0xa50>
   11fe0:	ldr	r3, [pc, #452]	; 121ac <close@plt+0xbd8>
   11fe4:	mov	r2, #5
   11fe8:	ldr	r1, [pc, #448]	; 121b0 <close@plt+0xbdc>
   11fec:	mov	r0, #0
   11ff0:	ldr	r3, [r5, r3]
   11ff4:	add	r1, pc, r1
   11ff8:	ldr	r6, [r3]
   11ffc:	bl	11364 <dcgettext@plt>
   12000:	ldr	r3, [pc, #428]	; 121b4 <close@plt+0xbe0>
   12004:	mov	r1, #1
   12008:	ldr	r3, [r5, r3]
   1200c:	ldr	r3, [r3]
   12010:	mov	r2, r0
   12014:	mov	r0, r6
   12018:	bl	11514 <__fprintf_chk@plt>
   1201c:	mov	r0, r4
   12020:	bl	11490 <exit@plt>
   12024:	ldr	r1, [pc, #396]	; 121b8 <close@plt+0xbe4>
   12028:	mov	r2, #5
   1202c:	add	r1, pc, r1
   12030:	bl	11364 <dcgettext@plt>
   12034:	ldr	r3, [pc, #376]	; 121b4 <close@plt+0xbe0>
   12038:	ldr	r6, [r5, r3]
   1203c:	ldr	r2, [r6]
   12040:	mov	r3, r2
   12044:	mov	r1, r0
   12048:	mov	r0, #1
   1204c:	bl	114fc <__printf_chk@plt>
   12050:	ldr	r1, [pc, #356]	; 121bc <close@plt+0xbe8>
   12054:	mov	r2, #5
   12058:	mov	r0, r4
   1205c:	add	r1, pc, r1
   12060:	bl	11364 <dcgettext@plt>
   12064:	ldr	r3, [pc, #340]	; 121c0 <close@plt+0xbec>
   12068:	ldr	r5, [r5, r3]
   1206c:	ldr	r1, [r5]
   12070:	bl	112c8 <fputs_unlocked@plt>
   12074:	ldr	r1, [pc, #328]	; 121c4 <close@plt+0xbf0>
   12078:	mov	r2, #5
   1207c:	mov	r0, r4
   12080:	add	r1, pc, r1
   12084:	bl	11364 <dcgettext@plt>
   12088:	ldr	r1, [r5]
   1208c:	bl	112c8 <fputs_unlocked@plt>
   12090:	ldr	r1, [pc, #304]	; 121c8 <close@plt+0xbf4>
   12094:	mov	r2, #5
   12098:	mov	r0, r4
   1209c:	add	r1, pc, r1
   120a0:	bl	11364 <dcgettext@plt>
   120a4:	ldr	r1, [r5]
   120a8:	bl	112c8 <fputs_unlocked@plt>
   120ac:	ldr	r1, [pc, #280]	; 121cc <close@plt+0xbf8>
   120b0:	mov	r2, #5
   120b4:	mov	r0, r4
   120b8:	add	r1, pc, r1
   120bc:	bl	11364 <dcgettext@plt>
   120c0:	ldr	r1, [r5]
   120c4:	bl	112c8 <fputs_unlocked@plt>
   120c8:	ldr	r1, [pc, #256]	; 121d0 <close@plt+0xbfc>
   120cc:	mov	r2, #5
   120d0:	mov	r0, r4
   120d4:	add	r1, pc, r1
   120d8:	bl	11364 <dcgettext@plt>
   120dc:	ldr	r1, [r5]
   120e0:	bl	112c8 <fputs_unlocked@plt>
   120e4:	ldr	r1, [pc, #232]	; 121d4 <close@plt+0xc00>
   120e8:	mov	r2, #5
   120ec:	mov	r0, r4
   120f0:	add	r1, pc, r1
   120f4:	bl	11364 <dcgettext@plt>
   120f8:	ldr	r2, [pc, #216]	; 121d8 <close@plt+0xc04>
   120fc:	ldr	r3, [pc, #216]	; 121dc <close@plt+0xc08>
   12100:	add	r2, pc, r2
   12104:	add	r3, pc, r3
   12108:	mov	r1, r0
   1210c:	mov	r0, #1
   12110:	bl	114fc <__printf_chk@plt>
   12114:	mov	r0, #5
   12118:	mov	r1, r4
   1211c:	bl	11550 <setlocale@plt>
   12120:	cmp	r0, #0
   12124:	beq	12140 <close@plt+0xb6c>
   12128:	ldr	r1, [pc, #176]	; 121e0 <close@plt+0xc0c>
   1212c:	mov	r2, #3
   12130:	add	r1, pc, r1
   12134:	bl	115bc <strncmp@plt>
   12138:	cmp	r0, #0
   1213c:	bne	12174 <close@plt+0xba0>
   12140:	ldr	r1, [pc, #156]	; 121e4 <close@plt+0xc10>
   12144:	mov	r2, #5
   12148:	mov	r0, #0
   1214c:	add	r1, pc, r1
   12150:	bl	11364 <dcgettext@plt>
   12154:	mov	r5, r0
   12158:	ldr	r0, [r6]
   1215c:	bl	1232c <close_stdout@@Base+0x118>
   12160:	mov	r1, r5
   12164:	mov	r2, r0
   12168:	mov	r0, #1
   1216c:	bl	114fc <__printf_chk@plt>
   12170:	b	1201c <close@plt+0xa48>
   12174:	ldr	r1, [pc, #108]	; 121e8 <close@plt+0xc14>
   12178:	mov	r2, #5
   1217c:	mov	r0, r4
   12180:	add	r1, pc, r1
   12184:	bl	11364 <dcgettext@plt>
   12188:	mov	r5, r0
   1218c:	ldr	r0, [r6]
   12190:	bl	1232c <close_stdout@@Base+0x118>
   12194:	mov	r1, r5
   12198:	mov	r2, r0
   1219c:	mov	r0, #1
   121a0:	bl	114fc <__printf_chk@plt>
   121a4:	b	12140 <close@plt+0xb6c>
   121a8:	andeq	r4, r1, r0, lsr #32
   121ac:	andeq	r0, r0, ip, lsr #2
   121b0:	strdeq	r2, [r0], -r8
   121b4:	andeq	r0, r0, r8, asr #2
   121b8:	andeq	r2, r0, r8, ror #27
   121bc:	andeq	r2, r0, r4, lsr #28
   121c0:	andeq	r0, r0, ip, lsr r1
   121c4:	andeq	r2, r0, r0, lsl #29
   121c8:			; <UNDEFINED> instruction: 0x00002eb0
   121cc:	andeq	r2, r0, r0, lsr #31
   121d0:			; <UNDEFINED> instruction: 0x00002fb4
   121d4:	ldrdeq	r2, [r0], -r0
   121d8:	ldrdeq	r2, [r0], -r8
   121dc:	andeq	r2, r0, r4, ror #31
   121e0:	andeq	r2, r0, r0, ror #31
   121e4:	andeq	r3, r0, r0, lsl r0
   121e8:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   121ec:	ldr	r3, [pc, #8]	; 121fc <close@plt+0xc28>
   121f0:	add	r3, pc, r3
   121f4:	str	r0, [r3]
   121f8:	bx	lr
   121fc:			; <UNDEFINED> instruction: 0x00013fb0
   12200:	ldr	r3, [pc, #8]	; 12210 <close@plt+0xc3c>
   12204:	add	r3, pc, r3
   12208:	strb	r0, [r3, #4]
   1220c:	bx	lr
   12210:	muleq	r1, ip, pc	; <UNPREDICTABLE>

00012214 <close_stdout@@Base>:
   12214:	push	{r4, r5, r6, r7, lr}
   12218:	sub	sp, sp, #12
   1221c:	ldr	r4, [pc, #228]	; 12308 <close_stdout@@Base+0xf4>
   12220:	ldr	r3, [pc, #228]	; 1230c <close_stdout@@Base+0xf8>
   12224:	add	r4, pc, r4
   12228:	ldr	r3, [r4, r3]
   1222c:	ldr	r0, [r3]
   12230:	bl	144ec <close_stdout@@Base+0x22d8>
   12234:	cmp	r0, #0
   12238:	beq	12260 <close_stdout@@Base+0x4c>
   1223c:	ldr	r3, [pc, #204]	; 12310 <close_stdout@@Base+0xfc>
   12240:	add	r3, pc, r3
   12244:	ldrb	r3, [r3, #4]
   12248:	cmp	r3, #0
   1224c:	beq	12280 <close_stdout@@Base+0x6c>
   12250:	bl	114cc <__errno_location@plt>
   12254:	ldr	r3, [r0]
   12258:	cmp	r3, #32
   1225c:	bne	12280 <close_stdout@@Base+0x6c>
   12260:	ldr	r3, [pc, #172]	; 12314 <close_stdout@@Base+0x100>
   12264:	ldr	r3, [r4, r3]
   12268:	ldr	r0, [r3]
   1226c:	bl	144ec <close_stdout@@Base+0x22d8>
   12270:	cmp	r0, #0
   12274:	bne	122d4 <close_stdout@@Base+0xc0>
   12278:	add	sp, sp, #12
   1227c:	pop	{r4, r5, r6, r7, pc}
   12280:	ldr	r1, [pc, #144]	; 12318 <close_stdout@@Base+0x104>
   12284:	mov	r0, #0
   12288:	mov	r2, #5
   1228c:	add	r1, pc, r1
   12290:	bl	11364 <dcgettext@plt>
   12294:	ldr	r3, [pc, #128]	; 1231c <close_stdout@@Base+0x108>
   12298:	ldr	r5, [pc, r3]
   1229c:	cmp	r5, #0
   122a0:	mov	r6, r0
   122a4:	beq	122e4 <close_stdout@@Base+0xd0>
   122a8:	bl	114cc <__errno_location@plt>
   122ac:	ldr	r7, [r0]
   122b0:	mov	r0, r5
   122b4:	bl	13acc <close_stdout@@Base+0x18b8>
   122b8:	ldr	r2, [pc, #96]	; 12320 <close_stdout@@Base+0x10c>
   122bc:	str	r6, [sp]
   122c0:	mov	r1, r7
   122c4:	add	r2, pc, r2
   122c8:	mov	r3, r0
   122cc:	mov	r0, #0
   122d0:	bl	1140c <error@plt>
   122d4:	ldr	r3, [pc, #72]	; 12324 <close_stdout@@Base+0x110>
   122d8:	ldr	r3, [r4, r3]
   122dc:	ldr	r0, [r3]
   122e0:	bl	11310 <_exit@plt>
   122e4:	bl	114cc <__errno_location@plt>
   122e8:	ldr	r2, [pc, #56]	; 12328 <close_stdout@@Base+0x114>
   122ec:	add	r2, pc, r2
   122f0:	mov	r3, r0
   122f4:	mov	r0, r5
   122f8:	ldr	r1, [r3]
   122fc:	mov	r3, r6
   12300:	bl	1140c <error@plt>
   12304:	b	122d4 <close_stdout@@Base+0xc0>
   12308:	ldrdeq	r3, [r1], -r4
   1230c:	andeq	r0, r0, ip, lsr r1
   12310:	andeq	r3, r1, r0, ror #30
   12314:	andeq	r0, r0, ip, lsr #2
   12318:	andeq	r3, r0, ip, ror r1
   1231c:	andeq	r3, r1, r8, lsl #30
   12320:	andeq	r3, r0, r0, asr r1
   12324:	andeq	r0, r0, r0, asr #2
   12328:	andeq	r3, r0, ip, lsr #2
   1232c:	ldrb	r3, [r0]
   12330:	cmp	r3, #47	; 0x2f
   12334:	bne	12350 <close_stdout@@Base+0x13c>
   12338:	add	r2, r0, #1
   1233c:	mov	r0, r2
   12340:	add	r2, r2, #1
   12344:	ldrb	r3, [r0]
   12348:	cmp	r3, #47	; 0x2f
   1234c:	beq	1233c <close_stdout@@Base+0x128>
   12350:	cmp	r3, #0
   12354:	bxeq	lr
   12358:	mov	r2, r0
   1235c:	mov	r1, #0
   12360:	cmp	r3, #47	; 0x2f
   12364:	moveq	r1, #1
   12368:	beq	12378 <close_stdout@@Base+0x164>
   1236c:	cmp	r1, #0
   12370:	movne	r0, r2
   12374:	movne	r1, #0
   12378:	ldrb	r3, [r2, #1]!
   1237c:	cmp	r3, #0
   12380:	bne	12360 <close_stdout@@Base+0x14c>
   12384:	bx	lr
   12388:	push	{r4, lr}
   1238c:	mov	r4, r0
   12390:	bl	114b4 <strlen@plt>
   12394:	cmp	r0, #1
   12398:	popls	{r4, pc}
   1239c:	sub	r3, r0, #1
   123a0:	ldrb	r2, [r4, r3]
   123a4:	cmp	r2, #47	; 0x2f
   123a8:	popne	{r4, pc}
   123ac:	mov	r0, r3
   123b0:	cmp	r0, #1
   123b4:	sub	r3, r3, #1
   123b8:	beq	123cc <close_stdout@@Base+0x1b8>
   123bc:	ldrb	r2, [r4, r3]
   123c0:	cmp	r2, #47	; 0x2f
   123c4:	popne	{r4, pc}
   123c8:	b	123ac <close_stdout@@Base+0x198>
   123cc:	pop	{r4, pc}
   123d0:	push	{r3, r4, r5, r6, r7, lr}
   123d4:	subs	r4, r0, #0
   123d8:	ldr	r5, [pc, #172]	; 1248c <close_stdout@@Base+0x278>
   123dc:	add	r5, pc, r5
   123e0:	beq	12468 <close_stdout@@Base+0x254>
   123e4:	mov	r1, #47	; 0x2f
   123e8:	bl	1155c <strrchr@plt>
   123ec:	subs	r6, r0, #0
   123f0:	beq	1244c <close_stdout@@Base+0x238>
   123f4:	add	r7, r6, #1
   123f8:	rsb	r3, r4, r7
   123fc:	cmp	r3, #6
   12400:	ble	1244c <close_stdout@@Base+0x238>
   12404:	ldr	r1, [pc, #132]	; 12490 <close_stdout@@Base+0x27c>
   12408:	sub	r0, r6, #6
   1240c:	mov	r2, #7
   12410:	add	r1, pc, r1
   12414:	bl	115bc <strncmp@plt>
   12418:	cmp	r0, #0
   1241c:	bne	1244c <close_stdout@@Base+0x238>
   12420:	ldr	r1, [pc, #108]	; 12494 <close_stdout@@Base+0x280>
   12424:	mov	r0, r7
   12428:	mov	r2, #3
   1242c:	add	r1, pc, r1
   12430:	bl	115bc <strncmp@plt>
   12434:	cmp	r0, #0
   12438:	movne	r4, r7
   1243c:	ldreq	r3, [pc, #84]	; 12498 <close_stdout@@Base+0x284>
   12440:	addeq	r4, r6, #4
   12444:	ldreq	r3, [r5, r3]
   12448:	streq	r4, [r3]
   1244c:	ldr	r2, [pc, #72]	; 1249c <close_stdout@@Base+0x288>
   12450:	ldr	r3, [pc, #72]	; 124a0 <close_stdout@@Base+0x28c>
   12454:	ldr	r2, [r5, r2]
   12458:	str	r4, [r2]
   1245c:	ldr	r3, [r5, r3]
   12460:	str	r4, [r3]
   12464:	pop	{r3, r4, r5, r6, r7, pc}
   12468:	ldr	r3, [pc, #52]	; 124a4 <close_stdout@@Base+0x290>
   1246c:	mov	r1, #1
   12470:	ldr	r0, [pc, #48]	; 124a8 <close_stdout@@Base+0x294>
   12474:	mov	r2, #55	; 0x37
   12478:	ldr	r3, [r5, r3]
   1247c:	add	r0, pc, r0
   12480:	ldr	r3, [r3]
   12484:	bl	113b8 <fwrite@plt>
   12488:	bl	115c8 <abort@plt>
   1248c:	andeq	r3, r1, ip, lsl ip
   12490:	andeq	r3, r0, r4, asr #32
   12494:	andeq	r3, r0, r0, lsr r0
   12498:	andeq	r0, r0, r0, asr r1
   1249c:	andeq	r0, r0, r8, asr #2
   124a0:	andeq	r0, r0, r4, asr #2
   124a4:	andeq	r0, r0, ip, lsr #2
   124a8:	andeq	r2, r0, r0, lsr #31
   124ac:	push	{r3, lr}
   124b0:	mov	r3, r0
   124b4:	mov	r2, #0
   124b8:	cmp	r1, #8
   124bc:	str	r2, [r3], #4
   124c0:	add	r3, r3, #4
   124c4:	str	r2, [r0, #4]
   124c8:	str	r2, [r3], #4
   124cc:	str	r2, [r3], #4
   124d0:	str	r2, [r3], #4
   124d4:	str	r2, [r3], #4
   124d8:	str	r2, [r3], #4
   124dc:	str	r2, [r3], #4
   124e0:	str	r2, [r3], #4
   124e4:	str	r2, [r3], #4
   124e8:	str	r2, [r3], #4
   124ec:	str	r2, [r3]
   124f0:	beq	124fc <close_stdout@@Base+0x2e8>
   124f4:	str	r1, [r0]
   124f8:	pop	{r3, pc}
   124fc:	bl	115c8 <abort@plt>
   12500:	push	{r4, r5, r6, lr}
   12504:	mov	r4, r0
   12508:	mov	r6, r1
   1250c:	mov	r0, #0
   12510:	mov	r1, r4
   12514:	mov	r2, #5
   12518:	bl	11364 <dcgettext@plt>
   1251c:	cmp	r0, r4
   12520:	mov	r5, r0
   12524:	beq	1252c <close_stdout@@Base+0x318>
   12528:	pop	{r4, r5, r6, pc}
   1252c:	bl	1456c <close_stdout@@Base+0x2358>
   12530:	ldrb	r3, [r0]
   12534:	bic	r3, r3, #32
   12538:	cmp	r3, #85	; 0x55
   1253c:	bne	125b0 <close_stdout@@Base+0x39c>
   12540:	ldrb	r3, [r0, #1]
   12544:	bic	r3, r3, #32
   12548:	cmp	r3, #84	; 0x54
   1254c:	bne	1259c <close_stdout@@Base+0x388>
   12550:	ldrb	r3, [r0, #2]
   12554:	bic	r3, r3, #32
   12558:	cmp	r3, #70	; 0x46
   1255c:	bne	1259c <close_stdout@@Base+0x388>
   12560:	ldrb	r3, [r0, #3]
   12564:	cmp	r3, #45	; 0x2d
   12568:	bne	1259c <close_stdout@@Base+0x388>
   1256c:	ldrb	r3, [r0, #4]
   12570:	cmp	r3, #56	; 0x38
   12574:	bne	1259c <close_stdout@@Base+0x388>
   12578:	ldrb	r3, [r0, #5]
   1257c:	cmp	r3, #0
   12580:	bne	1259c <close_stdout@@Base+0x388>
   12584:	ldrb	r3, [r5]
   12588:	cmp	r3, #96	; 0x60
   1258c:	beq	12628 <close_stdout@@Base+0x414>
   12590:	ldr	r0, [pc, #180]	; 1264c <close_stdout@@Base+0x438>
   12594:	add	r0, pc, r0
   12598:	pop	{r4, r5, r6, pc}
   1259c:	cmp	r6, #7
   125a0:	beq	12634 <close_stdout@@Base+0x420>
   125a4:	ldr	r0, [pc, #164]	; 12650 <close_stdout@@Base+0x43c>
   125a8:	add	r0, pc, r0
   125ac:	pop	{r4, r5, r6, pc}
   125b0:	cmp	r3, #71	; 0x47
   125b4:	bne	1259c <close_stdout@@Base+0x388>
   125b8:	ldrb	r3, [r0, #1]
   125bc:	bic	r3, r3, #32
   125c0:	cmp	r3, #66	; 0x42
   125c4:	bne	1259c <close_stdout@@Base+0x388>
   125c8:	ldrb	r3, [r0, #2]
   125cc:	cmp	r3, #49	; 0x31
   125d0:	bne	1259c <close_stdout@@Base+0x388>
   125d4:	ldrb	r3, [r0, #3]
   125d8:	cmp	r3, #56	; 0x38
   125dc:	bne	1259c <close_stdout@@Base+0x388>
   125e0:	ldrb	r3, [r0, #4]
   125e4:	cmp	r3, #48	; 0x30
   125e8:	bne	1259c <close_stdout@@Base+0x388>
   125ec:	ldrb	r3, [r0, #5]
   125f0:	cmp	r3, #51	; 0x33
   125f4:	bne	1259c <close_stdout@@Base+0x388>
   125f8:	ldrb	r3, [r0, #6]
   125fc:	cmp	r3, #48	; 0x30
   12600:	bne	1259c <close_stdout@@Base+0x388>
   12604:	ldrb	r3, [r0, #7]
   12608:	cmp	r3, #0
   1260c:	bne	1259c <close_stdout@@Base+0x388>
   12610:	ldrb	r3, [r5]
   12614:	cmp	r3, #96	; 0x60
   12618:	beq	12640 <close_stdout@@Base+0x42c>
   1261c:	ldr	r0, [pc, #48]	; 12654 <close_stdout@@Base+0x440>
   12620:	add	r0, pc, r0
   12624:	pop	{r4, r5, r6, pc}
   12628:	ldr	r0, [pc, #40]	; 12658 <close_stdout@@Base+0x444>
   1262c:	add	r0, pc, r0
   12630:	pop	{r4, r5, r6, pc}
   12634:	ldr	r0, [pc, #32]	; 1265c <close_stdout@@Base+0x448>
   12638:	add	r0, pc, r0
   1263c:	pop	{r4, r5, r6, pc}
   12640:	ldr	r0, [pc, #24]	; 12660 <close_stdout@@Base+0x44c>
   12644:	add	r0, pc, r0
   12648:	pop	{r4, r5, r6, pc}
   1264c:	andeq	r2, r0, ip, ror #29
   12650:	andeq	r2, r0, r0, ror #29
   12654:	andeq	r2, r0, r4, ror #28
   12658:	andeq	r2, r0, r8, ror #28
   1265c:	andeq	r2, r0, r4, asr lr
   12660:	andeq	r2, r0, ip, asr #28
   12664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12668:	sub	sp, sp, #124	; 0x7c
   1266c:	ldr	ip, [pc, #3304]	; 1335c <close_stdout@@Base+0x1148>
   12670:	mov	sl, r1
   12674:	str	r0, [sp, #40]	; 0x28
   12678:	mov	r8, r3
   1267c:	ldr	r0, [pc, #3292]	; 13360 <close_stdout@@Base+0x114c>
   12680:	add	ip, pc, ip
   12684:	str	r2, [sp, #32]
   12688:	ldr	r1, [sp, #164]	; 0xa4
   1268c:	mov	r3, ip
   12690:	ldr	r0, [ip, r0]
   12694:	ldr	r2, [sp, #172]	; 0xac
   12698:	ubfx	r1, r1, #1, #1
   1269c:	str	r1, [sp, #36]	; 0x24
   126a0:	str	r0, [sp, #56]	; 0x38
   126a4:	ldr	r0, [sp, #168]	; 0xa8
   126a8:	ldr	r1, [sp, #176]	; 0xb0
   126ac:	str	r2, [sp, #72]	; 0x48
   126b0:	str	r0, [sp, #48]	; 0x30
   126b4:	ldr	r0, [sp, #56]	; 0x38
   126b8:	str	r1, [sp, #68]	; 0x44
   126bc:	ldr	r3, [r0]
   126c0:	str	r3, [sp, #116]	; 0x74
   126c4:	bl	113d0 <__ctype_get_mb_cur_max@plt>
   126c8:	ldr	r2, [sp, #160]	; 0xa0
   126cc:	str	r0, [sp, #64]	; 0x40
   126d0:	cmp	r2, #8
   126d4:	addls	pc, pc, r2, lsl #2
   126d8:	b	13238 <close_stdout@@Base+0x1024>
   126dc:	b	12700 <close_stdout@@Base+0x4ec>
   126e0:	b	12f50 <close_stdout@@Base+0xd3c>
   126e4:	b	12f80 <close_stdout@@Base+0xd6c>
   126e8:	b	12e30 <close_stdout@@Base+0xc1c>
   126ec:	b	12e70 <close_stdout@@Base+0xc5c>
   126f0:	b	12e9c <close_stdout@@Base+0xc88>
   126f4:	b	12ebc <close_stdout@@Base+0xca8>
   126f8:	b	12ebc <close_stdout@@Base+0xca8>
   126fc:	b	12ebc <close_stdout@@Base+0xca8>
   12700:	mov	r2, #0
   12704:	str	r2, [sp, #36]	; 0x24
   12708:	mov	r9, r2
   1270c:	str	r2, [sp, #24]
   12710:	str	r2, [sp, #28]
   12714:	str	r2, [sp, #52]	; 0x34
   12718:	ldr	r0, [sp, #36]	; 0x24
   1271c:	mov	fp, #0
   12720:	ldr	r1, [sp, #24]
   12724:	eor	r2, r0, #1
   12728:	eor	r3, r1, #1
   1272c:	and	r3, r2, r3
   12730:	and	r2, r1, r0
   12734:	str	r3, [sp, #44]	; 0x2c
   12738:	str	r2, [sp, #76]	; 0x4c
   1273c:	cmn	r8, #1
   12740:	beq	12ac0 <close_stdout@@Base+0x8ac>
   12744:	subs	r3, fp, r8
   12748:	movne	r3, #1
   1274c:	cmp	r3, #0
   12750:	beq	12ad8 <close_stdout@@Base+0x8c4>
   12754:	ldr	r3, [sp, #28]
   12758:	ldr	r0, [sp, #24]
   1275c:	adds	r7, r3, #0
   12760:	movne	r7, #1
   12764:	ands	r6, r7, r0
   12768:	bne	12fc4 <close_stdout@@Base+0xdb0>
   1276c:	ldr	r1, [sp, #32]
   12770:	add	r5, r1, fp
   12774:	ldrb	r4, [r5]
   12778:	cmp	r4, #126	; 0x7e
   1277c:	addls	pc, pc, r4, lsl #2
   12780:	b	12d44 <close_stdout@@Base+0xb30>
   12784:	b	12c50 <close_stdout@@Base+0xa3c>
   12788:	b	12d44 <close_stdout@@Base+0xb30>
   1278c:	b	12d44 <close_stdout@@Base+0xb30>
   12790:	b	12d44 <close_stdout@@Base+0xb30>
   12794:	b	12d44 <close_stdout@@Base+0xb30>
   12798:	b	12d44 <close_stdout@@Base+0xb30>
   1279c:	b	12d44 <close_stdout@@Base+0xb30>
   127a0:	b	12c38 <close_stdout@@Base+0xa24>
   127a4:	b	12c20 <close_stdout@@Base+0xa0c>
   127a8:	b	12c48 <close_stdout@@Base+0xa34>
   127ac:	b	12c40 <close_stdout@@Base+0xa2c>
   127b0:	b	12c30 <close_stdout@@Base+0xa1c>
   127b4:	b	12c28 <close_stdout@@Base+0xa14>
   127b8:	b	12bec <close_stdout@@Base+0x9d8>
   127bc:	b	12d44 <close_stdout@@Base+0xb30>
   127c0:	b	12d44 <close_stdout@@Base+0xb30>
   127c4:	b	12d44 <close_stdout@@Base+0xb30>
   127c8:	b	12d44 <close_stdout@@Base+0xb30>
   127cc:	b	12d44 <close_stdout@@Base+0xb30>
   127d0:	b	12d44 <close_stdout@@Base+0xb30>
   127d4:	b	12d44 <close_stdout@@Base+0xb30>
   127d8:	b	12d44 <close_stdout@@Base+0xb30>
   127dc:	b	12d44 <close_stdout@@Base+0xb30>
   127e0:	b	12d44 <close_stdout@@Base+0xb30>
   127e4:	b	12d44 <close_stdout@@Base+0xb30>
   127e8:	b	12d44 <close_stdout@@Base+0xb30>
   127ec:	b	12d44 <close_stdout@@Base+0xb30>
   127f0:	b	12d44 <close_stdout@@Base+0xb30>
   127f4:	b	12d44 <close_stdout@@Base+0xb30>
   127f8:	b	12d44 <close_stdout@@Base+0xb30>
   127fc:	b	12d44 <close_stdout@@Base+0xb30>
   12800:	b	12d44 <close_stdout@@Base+0xb30>
   12804:	b	12b78 <close_stdout@@Base+0x964>
   12808:	b	12b78 <close_stdout@@Base+0x964>
   1280c:	b	12b78 <close_stdout@@Base+0x964>
   12810:	b	12b70 <close_stdout@@Base+0x95c>
   12814:	b	12b78 <close_stdout@@Base+0x964>
   12818:	b	12a4c <close_stdout@@Base+0x838>
   1281c:	b	12b78 <close_stdout@@Base+0x964>
   12820:	b	12cec <close_stdout@@Base+0xad8>
   12824:	b	12b78 <close_stdout@@Base+0x964>
   12828:	b	12b78 <close_stdout@@Base+0x964>
   1282c:	b	12b78 <close_stdout@@Base+0x964>
   12830:	b	12a4c <close_stdout@@Base+0x838>
   12834:	b	12a4c <close_stdout@@Base+0x838>
   12838:	b	12a4c <close_stdout@@Base+0x838>
   1283c:	b	12a4c <close_stdout@@Base+0x838>
   12840:	b	12a4c <close_stdout@@Base+0x838>
   12844:	b	12a4c <close_stdout@@Base+0x838>
   12848:	b	12a4c <close_stdout@@Base+0x838>
   1284c:	b	12a4c <close_stdout@@Base+0x838>
   12850:	b	12a4c <close_stdout@@Base+0x838>
   12854:	b	12a4c <close_stdout@@Base+0x838>
   12858:	b	12a4c <close_stdout@@Base+0x838>
   1285c:	b	12a4c <close_stdout@@Base+0x838>
   12860:	b	12a4c <close_stdout@@Base+0x838>
   12864:	b	12a4c <close_stdout@@Base+0x838>
   12868:	b	12a4c <close_stdout@@Base+0x838>
   1286c:	b	12a4c <close_stdout@@Base+0x838>
   12870:	b	12b78 <close_stdout@@Base+0x964>
   12874:	b	12b78 <close_stdout@@Base+0x964>
   12878:	b	12b78 <close_stdout@@Base+0x964>
   1287c:	b	12b78 <close_stdout@@Base+0x964>
   12880:	b	12980 <close_stdout@@Base+0x76c>
   12884:	b	12d44 <close_stdout@@Base+0xb30>
   12888:	b	12a4c <close_stdout@@Base+0x838>
   1288c:	b	12a4c <close_stdout@@Base+0x838>
   12890:	b	12a4c <close_stdout@@Base+0x838>
   12894:	b	12a4c <close_stdout@@Base+0x838>
   12898:	b	12a4c <close_stdout@@Base+0x838>
   1289c:	b	12a4c <close_stdout@@Base+0x838>
   128a0:	b	12a4c <close_stdout@@Base+0x838>
   128a4:	b	12a4c <close_stdout@@Base+0x838>
   128a8:	b	12a4c <close_stdout@@Base+0x838>
   128ac:	b	12a4c <close_stdout@@Base+0x838>
   128b0:	b	12a4c <close_stdout@@Base+0x838>
   128b4:	b	12a4c <close_stdout@@Base+0x838>
   128b8:	b	12a4c <close_stdout@@Base+0x838>
   128bc:	b	12a4c <close_stdout@@Base+0x838>
   128c0:	b	12a4c <close_stdout@@Base+0x838>
   128c4:	b	12a4c <close_stdout@@Base+0x838>
   128c8:	b	12a4c <close_stdout@@Base+0x838>
   128cc:	b	12a4c <close_stdout@@Base+0x838>
   128d0:	b	12a4c <close_stdout@@Base+0x838>
   128d4:	b	12a4c <close_stdout@@Base+0x838>
   128d8:	b	12a4c <close_stdout@@Base+0x838>
   128dc:	b	12a4c <close_stdout@@Base+0x838>
   128e0:	b	12a4c <close_stdout@@Base+0x838>
   128e4:	b	12a4c <close_stdout@@Base+0x838>
   128e8:	b	12a4c <close_stdout@@Base+0x838>
   128ec:	b	12a4c <close_stdout@@Base+0x838>
   128f0:	b	12b78 <close_stdout@@Base+0x964>
   128f4:	b	12cd0 <close_stdout@@Base+0xabc>
   128f8:	b	12a4c <close_stdout@@Base+0x838>
   128fc:	b	12b78 <close_stdout@@Base+0x964>
   12900:	b	12a4c <close_stdout@@Base+0x838>
   12904:	b	12b78 <close_stdout@@Base+0x964>
   12908:	b	12a4c <close_stdout@@Base+0x838>
   1290c:	b	12a4c <close_stdout@@Base+0x838>
   12910:	b	12a4c <close_stdout@@Base+0x838>
   12914:	b	12a4c <close_stdout@@Base+0x838>
   12918:	b	12a4c <close_stdout@@Base+0x838>
   1291c:	b	12a4c <close_stdout@@Base+0x838>
   12920:	b	12a4c <close_stdout@@Base+0x838>
   12924:	b	12a4c <close_stdout@@Base+0x838>
   12928:	b	12a4c <close_stdout@@Base+0x838>
   1292c:	b	12a4c <close_stdout@@Base+0x838>
   12930:	b	12a4c <close_stdout@@Base+0x838>
   12934:	b	12a4c <close_stdout@@Base+0x838>
   12938:	b	12a4c <close_stdout@@Base+0x838>
   1293c:	b	12a4c <close_stdout@@Base+0x838>
   12940:	b	12a4c <close_stdout@@Base+0x838>
   12944:	b	12a4c <close_stdout@@Base+0x838>
   12948:	b	12a4c <close_stdout@@Base+0x838>
   1294c:	b	12a4c <close_stdout@@Base+0x838>
   12950:	b	12a4c <close_stdout@@Base+0x838>
   12954:	b	12a4c <close_stdout@@Base+0x838>
   12958:	b	12a4c <close_stdout@@Base+0x838>
   1295c:	b	12a4c <close_stdout@@Base+0x838>
   12960:	b	12a4c <close_stdout@@Base+0x838>
   12964:	b	12a4c <close_stdout@@Base+0x838>
   12968:	b	12a4c <close_stdout@@Base+0x838>
   1296c:	b	12a4c <close_stdout@@Base+0x838>
   12970:	b	12b58 <close_stdout@@Base+0x944>
   12974:	b	12b78 <close_stdout@@Base+0x964>
   12978:	b	12b58 <close_stdout@@Base+0x944>
   1297c:	b	12b70 <close_stdout@@Base+0x95c>
   12980:	ldr	r3, [sp, #160]	; 0xa0
   12984:	cmp	r3, #2
   12988:	beq	13214 <close_stdout@@Base+0x1000>
   1298c:	cmp	r3, #3
   12990:	bne	12a4c <close_stdout@@Base+0x838>
   12994:	ldr	r1, [sp, #164]	; 0xa4
   12998:	tst	r1, #4
   1299c:	beq	12a4c <close_stdout@@Base+0x838>
   129a0:	add	r3, fp, #2
   129a4:	cmp	r8, r3
   129a8:	bls	12a4c <close_stdout@@Base+0x838>
   129ac:	ldrb	r2, [r5, #1]
   129b0:	mov	r1, #1
   129b4:	cmp	r2, #63	; 0x3f
   129b8:	bne	12a4c <close_stdout@@Base+0x838>
   129bc:	ldr	r0, [sp, #32]
   129c0:	ldrb	ip, [r0, r3]
   129c4:	sub	r0, ip, #33	; 0x21
   129c8:	uxtb	r0, r0
   129cc:	cmp	r0, #29
   129d0:	bhi	12a4c <close_stdout@@Base+0x838>
   129d4:	lsl	r1, r1, r0
   129d8:	movw	r0, #20929	; 0x51c1
   129dc:	movt	r0, #14336	; 0x3800
   129e0:	and	r0, r1, r0
   129e4:	cmp	r0, #0
   129e8:	beq	12a4c <close_stdout@@Base+0x838>
   129ec:	ldr	r1, [sp, #36]	; 0x24
   129f0:	cmp	r1, #0
   129f4:	bne	12b94 <close_stdout@@Base+0x980>
   129f8:	cmp	r9, sl
   129fc:	mov	r4, ip
   12a00:	mov	fp, r3
   12a04:	ldrcc	r0, [sp, #40]	; 0x28
   12a08:	strbcc	r2, [r0, r9]
   12a0c:	add	r2, r9, #1
   12a10:	cmp	sl, r2
   12a14:	ldrhi	r0, [sp, #40]	; 0x28
   12a18:	movhi	r1, #34	; 0x22
   12a1c:	strbhi	r1, [r0, r2]
   12a20:	add	r2, r9, #2
   12a24:	cmp	sl, r2
   12a28:	ldrhi	r0, [sp, #40]	; 0x28
   12a2c:	movhi	r1, #34	; 0x22
   12a30:	strbhi	r1, [r0, r2]
   12a34:	add	r2, r9, #3
   12a38:	cmp	sl, r2
   12a3c:	add	r9, r9, #4
   12a40:	ldrhi	r0, [sp, #40]	; 0x28
   12a44:	movhi	r1, #63	; 0x3f
   12a48:	strbhi	r1, [r0, r2]
   12a4c:	ldr	r0, [sp, #44]	; 0x2c
   12a50:	cmp	r0, #0
   12a54:	bne	12a7c <close_stdout@@Base+0x868>
   12a58:	ldr	r1, [sp, #48]	; 0x30
   12a5c:	cmp	r1, #0
   12a60:	beq	12a7c <close_stdout@@Base+0x868>
   12a64:	ubfx	r2, r4, #5, #8
   12a68:	and	r3, r4, #31
   12a6c:	ldr	r2, [r1, r2, lsl #2]
   12a70:	lsr	r3, r2, r3
   12a74:	tst	r3, #1
   12a78:	bne	12a84 <close_stdout@@Base+0x870>
   12a7c:	cmp	r6, #0
   12a80:	beq	12aa4 <close_stdout@@Base+0x890>
   12a84:	ldr	r2, [sp, #36]	; 0x24
   12a88:	cmp	r2, #0
   12a8c:	bne	12b94 <close_stdout@@Base+0x980>
   12a90:	cmp	r9, sl
   12a94:	ldrcc	r0, [sp, #40]	; 0x28
   12a98:	movcc	r3, #92	; 0x5c
   12a9c:	strbcc	r3, [r0, r9]
   12aa0:	add	r9, r9, #1
   12aa4:	add	fp, fp, #1
   12aa8:	cmp	r9, sl
   12aac:	ldrcc	r1, [sp, #40]	; 0x28
   12ab0:	strbcc	r4, [r1, r9]
   12ab4:	cmn	r8, #1
   12ab8:	add	r9, r9, #1
   12abc:	bne	12744 <close_stdout@@Base+0x530>
   12ac0:	ldr	r2, [sp, #32]
   12ac4:	ldrb	r3, [r2, fp]
   12ac8:	adds	r3, r3, #0
   12acc:	movne	r3, #1
   12ad0:	cmp	r3, #0
   12ad4:	bne	12754 <close_stdout@@Base+0x540>
   12ad8:	ldr	r3, [sp, #160]	; 0xa0
   12adc:	cmp	r9, #0
   12ae0:	cmpeq	r3, #2
   12ae4:	bne	12af4 <close_stdout@@Base+0x8e0>
   12ae8:	ldr	r0, [sp, #36]	; 0x24
   12aec:	cmp	r0, #0
   12af0:	bne	12b94 <close_stdout@@Base+0x980>
   12af4:	ldr	r1, [sp, #36]	; 0x24
   12af8:	ldr	r2, [sp, #52]	; 0x34
   12afc:	eor	r3, r1, #1
   12b00:	cmp	r2, #0
   12b04:	moveq	r3, #0
   12b08:	andne	r3, r3, #1
   12b0c:	cmp	r3, #0
   12b10:	beq	12b3c <close_stdout@@Base+0x928>
   12b14:	ldrb	r3, [r2]
   12b18:	cmp	r3, #0
   12b1c:	beq	12b3c <close_stdout@@Base+0x928>
   12b20:	ldr	r1, [sp, #40]	; 0x28
   12b24:	cmp	sl, r9
   12b28:	strbhi	r3, [r1, r9]
   12b2c:	ldrb	r3, [r2, #1]!
   12b30:	add	r9, r9, #1
   12b34:	cmp	r3, #0
   12b38:	bne	12b24 <close_stdout@@Base+0x910>
   12b3c:	cmp	r9, sl
   12b40:	movcs	r0, r9
   12b44:	ldrcc	r1, [sp, #40]	; 0x28
   12b48:	movcc	r3, #0
   12b4c:	movcc	r0, r9
   12b50:	strbcc	r3, [r1, r9]
   12b54:	b	12bd0 <close_stdout@@Base+0x9bc>
   12b58:	cmn	r8, #1
   12b5c:	beq	13224 <close_stdout@@Base+0x1010>
   12b60:	subs	r3, r8, #1
   12b64:	movne	r3, #1
   12b68:	cmp	r3, #0
   12b6c:	bne	12a4c <close_stdout@@Base+0x838>
   12b70:	cmp	fp, #0
   12b74:	bne	12a4c <close_stdout@@Base+0x838>
   12b78:	ldr	r3, [sp, #36]	; 0x24
   12b7c:	ldr	r0, [sp, #160]	; 0xa0
   12b80:	cmp	r0, #2
   12b84:	movne	r3, #0
   12b88:	andeq	r3, r3, #1
   12b8c:	cmp	r3, #0
   12b90:	beq	12a4c <close_stdout@@Base+0x838>
   12b94:	ldr	r2, [sp, #164]	; 0xa4
   12b98:	mov	ip, #0
   12b9c:	ldr	r0, [sp, #160]	; 0xa0
   12ba0:	bic	r3, r2, #2
   12ba4:	ldr	r1, [sp, #72]	; 0x48
   12ba8:	ldr	r2, [sp, #68]	; 0x44
   12bac:	stm	sp, {r0, r3}
   12bb0:	mov	r3, r8
   12bb4:	str	r1, [sp, #12]
   12bb8:	mov	r1, sl
   12bbc:	str	r2, [sp, #16]
   12bc0:	ldr	r0, [sp, #40]	; 0x28
   12bc4:	ldr	r2, [sp, #32]
   12bc8:	str	ip, [sp, #8]
   12bcc:	bl	12664 <close_stdout@@Base+0x450>
   12bd0:	ldr	r1, [sp, #56]	; 0x38
   12bd4:	ldr	r2, [sp, #116]	; 0x74
   12bd8:	ldr	r3, [r1]
   12bdc:	cmp	r2, r3
   12be0:	bne	13314 <close_stdout@@Base+0x1100>
   12be4:	add	sp, sp, #124	; 0x7c
   12be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bec:	mov	r3, #114	; 0x72
   12bf0:	ldr	r2, [sp, #36]	; 0x24
   12bf4:	ldr	r0, [sp, #160]	; 0xa0
   12bf8:	cmp	r0, #2
   12bfc:	movne	r2, #0
   12c00:	andeq	r2, r2, #1
   12c04:	cmp	r2, #0
   12c08:	bne	12b94 <close_stdout@@Base+0x980>
   12c0c:	ldr	r1, [sp, #24]
   12c10:	cmp	r1, #0
   12c14:	beq	12a4c <close_stdout@@Base+0x838>
   12c18:	mov	r4, r3
   12c1c:	b	12a84 <close_stdout@@Base+0x870>
   12c20:	mov	r3, #98	; 0x62
   12c24:	b	12c0c <close_stdout@@Base+0x9f8>
   12c28:	mov	r3, #102	; 0x66
   12c2c:	b	12c0c <close_stdout@@Base+0x9f8>
   12c30:	mov	r3, #118	; 0x76
   12c34:	b	12c0c <close_stdout@@Base+0x9f8>
   12c38:	mov	r3, #97	; 0x61
   12c3c:	b	12c0c <close_stdout@@Base+0x9f8>
   12c40:	mov	r3, #110	; 0x6e
   12c44:	b	12bf0 <close_stdout@@Base+0x9dc>
   12c48:	mov	r3, #116	; 0x74
   12c4c:	b	12bf0 <close_stdout@@Base+0x9dc>
   12c50:	ldr	r2, [sp, #24]
   12c54:	cmp	r2, #0
   12c58:	beq	13200 <close_stdout@@Base+0xfec>
   12c5c:	ldr	r3, [sp, #36]	; 0x24
   12c60:	cmp	r3, #0
   12c64:	bne	12b94 <close_stdout@@Base+0x980>
   12c68:	cmp	r9, sl
   12c6c:	add	r2, r9, #1
   12c70:	ldrcc	r0, [sp, #40]	; 0x28
   12c74:	movcc	r3, #92	; 0x5c
   12c78:	strbcc	r3, [r0, r9]
   12c7c:	add	r3, fp, #1
   12c80:	cmp	r8, r3
   12c84:	bls	12cc4 <close_stdout@@Base+0xab0>
   12c88:	ldr	r1, [sp, #32]
   12c8c:	ldrb	r3, [r1, r3]
   12c90:	sub	r3, r3, #48	; 0x30
   12c94:	cmp	r3, #9
   12c98:	bhi	12cc4 <close_stdout@@Base+0xab0>
   12c9c:	cmp	sl, r2
   12ca0:	ldrhi	r0, [sp, #40]	; 0x28
   12ca4:	movhi	r3, #48	; 0x30
   12ca8:	strbhi	r3, [r0, r2]
   12cac:	add	r3, r9, #2
   12cb0:	cmp	sl, r3
   12cb4:	ldrhi	r1, [sp, #40]	; 0x28
   12cb8:	movhi	r2, #48	; 0x30
   12cbc:	strbhi	r2, [r1, r3]
   12cc0:	add	r2, r9, #3
   12cc4:	mov	r9, r2
   12cc8:	mov	r4, #48	; 0x30
   12ccc:	b	12a58 <close_stdout@@Base+0x844>
   12cd0:	ldr	r1, [sp, #76]	; 0x4c
   12cd4:	cmp	r1, #0
   12cd8:	beq	12ce4 <close_stdout@@Base+0xad0>
   12cdc:	cmp	r7, #0
   12ce0:	bne	12aa4 <close_stdout@@Base+0x890>
   12ce4:	mov	r3, r4
   12ce8:	b	12bf0 <close_stdout@@Base+0x9dc>
   12cec:	ldr	r1, [sp, #160]	; 0xa0
   12cf0:	cmp	r1, #2
   12cf4:	bne	12a4c <close_stdout@@Base+0x838>
   12cf8:	ldr	r2, [sp, #36]	; 0x24
   12cfc:	cmp	r2, #0
   12d00:	bne	12b94 <close_stdout@@Base+0x980>
   12d04:	cmp	r9, sl
   12d08:	ldrcc	r0, [sp, #40]	; 0x28
   12d0c:	movcc	r3, #39	; 0x27
   12d10:	strbcc	r3, [r0, r9]
   12d14:	add	r3, r9, #1
   12d18:	cmp	sl, r3
   12d1c:	ldrhi	r1, [sp, #40]	; 0x28
   12d20:	movhi	r2, #92	; 0x5c
   12d24:	strbhi	r2, [r1, r3]
   12d28:	add	r3, r9, #2
   12d2c:	cmp	sl, r3
   12d30:	add	r9, r9, #3
   12d34:	ldrhi	r0, [sp, #40]	; 0x28
   12d38:	movhi	r2, #39	; 0x27
   12d3c:	strbhi	r2, [r0, r3]
   12d40:	b	12a4c <close_stdout@@Base+0x838>
   12d44:	ldr	r1, [sp, #64]	; 0x40
   12d48:	cmp	r1, #1
   12d4c:	bne	13044 <close_stdout@@Base+0xe30>
   12d50:	bl	11484 <__ctype_b_loc@plt>
   12d54:	ldr	r2, [sp, #64]	; 0x40
   12d58:	sxth	r3, r4
   12d5c:	str	r2, [sp, #60]	; 0x3c
   12d60:	lsl	r3, r3, #1
   12d64:	ldr	r2, [r0]
   12d68:	ldrh	r2, [r2, r3]
   12d6c:	eor	r2, r2, #16384	; 0x4000
   12d70:	ubfx	r2, r2, #14, #1
   12d74:	ldr	r1, [sp, #24]
   12d78:	ands	r2, r2, r1
   12d7c:	beq	12a4c <close_stdout@@Base+0x838>
   12d80:	ldr	r3, [sp, #60]	; 0x3c
   12d84:	mov	r0, #92	; 0x5c
   12d88:	ldr	r7, [sp, #36]	; 0x24
   12d8c:	add	r1, r3, fp
   12d90:	str	r8, [sp, #60]	; 0x3c
   12d94:	ldr	r3, [sp, #40]	; 0x28
   12d98:	b	12dfc <close_stdout@@Base+0xbe8>
   12d9c:	cmp	r7, #0
   12da0:	bne	1323c <close_stdout@@Base+0x1028>
   12da4:	add	ip, r9, #1
   12da8:	cmp	r9, sl
   12dac:	strbcc	r0, [r3, r9]
   12db0:	cmp	sl, ip
   12db4:	lsrhi	r8, r4, #6
   12db8:	addhi	r8, r8, #48	; 0x30
   12dbc:	strbhi	r8, [r3, ip]
   12dc0:	add	ip, r9, #2
   12dc4:	add	r9, r9, #3
   12dc8:	cmp	sl, ip
   12dcc:	ubfxhi	r8, r4, #3, #3
   12dd0:	and	r4, r4, #7
   12dd4:	add	r4, r4, #48	; 0x30
   12dd8:	addhi	r8, r8, #48	; 0x30
   12ddc:	strbhi	r8, [r3, ip]
   12de0:	add	fp, fp, #1
   12de4:	cmp	r1, fp
   12de8:	bls	12e28 <close_stdout@@Base+0xc14>
   12dec:	cmp	r9, sl
   12df0:	strbcc	r4, [r3, r9]
   12df4:	ldrb	r4, [r5, #1]!
   12df8:	add	r9, r9, #1
   12dfc:	cmp	r2, #0
   12e00:	bne	12d9c <close_stdout@@Base+0xb88>
   12e04:	cmp	r6, #0
   12e08:	beq	12de0 <close_stdout@@Base+0xbcc>
   12e0c:	add	fp, fp, #1
   12e10:	cmp	r9, sl
   12e14:	strbcc	r0, [r3, r9]
   12e18:	cmp	r1, fp
   12e1c:	add	r9, r9, #1
   12e20:	mov	r6, #0
   12e24:	bhi	12dec <close_stdout@@Base+0xbd8>
   12e28:	ldr	r8, [sp, #60]	; 0x3c
   12e2c:	b	12aa8 <close_stdout@@Base+0x894>
   12e30:	ldr	r3, [sp, #36]	; 0x24
   12e34:	cmp	r3, #0
   12e38:	bne	1333c <close_stdout@@Base+0x1128>
   12e3c:	cmp	sl, #0
   12e40:	beq	13254 <close_stdout@@Base+0x1040>
   12e44:	ldr	r1, [sp, #40]	; 0x28
   12e48:	mov	r0, #1
   12e4c:	ldr	r2, [pc, #1296]	; 13364 <close_stdout@@Base+0x1150>
   12e50:	mov	r3, #34	; 0x22
   12e54:	str	r0, [sp, #24]
   12e58:	mov	r9, r0
   12e5c:	add	r2, pc, r2
   12e60:	str	r0, [sp, #28]
   12e64:	strb	r3, [r1]
   12e68:	str	r2, [sp, #52]	; 0x34
   12e6c:	b	12718 <close_stdout@@Base+0x504>
   12e70:	ldr	r3, [pc, #1264]	; 13368 <close_stdout@@Base+0x1154>
   12e74:	mov	r2, #1
   12e78:	mov	r0, #3
   12e7c:	str	r2, [sp, #36]	; 0x24
   12e80:	add	r3, pc, r3
   12e84:	str	r2, [sp, #24]
   12e88:	str	r3, [sp, #52]	; 0x34
   12e8c:	mov	r9, #0
   12e90:	str	r2, [sp, #28]
   12e94:	str	r0, [sp, #160]	; 0xa0
   12e98:	b	12718 <close_stdout@@Base+0x504>
   12e9c:	mov	r0, #0
   12ea0:	mov	r1, #1
   12ea4:	str	r0, [sp, #36]	; 0x24
   12ea8:	mov	r9, r0
   12eac:	str	r1, [sp, #24]
   12eb0:	str	r0, [sp, #28]
   12eb4:	str	r0, [sp, #52]	; 0x34
   12eb8:	b	12718 <close_stdout@@Base+0x504>
   12ebc:	ldr	r3, [sp, #160]	; 0xa0
   12ec0:	cmp	r3, #8
   12ec4:	beq	12ef0 <close_stdout@@Base+0xcdc>
   12ec8:	ldr	r0, [pc, #1180]	; 1336c <close_stdout@@Base+0x1158>
   12ecc:	mov	r1, r3
   12ed0:	add	r0, pc, r0
   12ed4:	bl	12500 <close_stdout@@Base+0x2ec>
   12ed8:	ldr	r1, [sp, #160]	; 0xa0
   12edc:	str	r0, [sp, #72]	; 0x48
   12ee0:	ldr	r0, [pc, #1160]	; 13370 <close_stdout@@Base+0x115c>
   12ee4:	add	r0, pc, r0
   12ee8:	bl	12500 <close_stdout@@Base+0x2ec>
   12eec:	str	r0, [sp, #68]	; 0x44
   12ef0:	ldr	r0, [sp, #36]	; 0x24
   12ef4:	cmp	r0, #0
   12ef8:	movne	r9, #0
   12efc:	bne	12f34 <close_stdout@@Base+0xd20>
   12f00:	ldr	r1, [sp, #72]	; 0x48
   12f04:	ldrb	r3, [r1]
   12f08:	cmp	r3, #0
   12f0c:	beq	1330c <close_stdout@@Base+0x10f8>
   12f10:	mov	r2, r1
   12f14:	ldr	r1, [sp, #40]	; 0x28
   12f18:	mov	r9, r0
   12f1c:	cmp	r9, sl
   12f20:	strbcc	r3, [r1, r9]
   12f24:	ldrb	r3, [r2, #1]!
   12f28:	add	r9, r9, #1
   12f2c:	cmp	r3, #0
   12f30:	bne	12f1c <close_stdout@@Base+0xd08>
   12f34:	ldr	r0, [sp, #68]	; 0x44
   12f38:	str	r0, [sp, #52]	; 0x34
   12f3c:	bl	114b4 <strlen@plt>
   12f40:	mov	r2, #1
   12f44:	str	r2, [sp, #24]
   12f48:	str	r0, [sp, #28]
   12f4c:	b	12718 <close_stdout@@Base+0x504>
   12f50:	ldr	r3, [pc, #1052]	; 13374 <close_stdout@@Base+0x1160>
   12f54:	mov	r2, #0
   12f58:	mov	r1, #1
   12f5c:	mov	r0, #2
   12f60:	add	r3, pc, r3
   12f64:	str	r1, [sp, #36]	; 0x24
   12f68:	str	r2, [sp, #24]
   12f6c:	mov	r9, r2
   12f70:	str	r1, [sp, #28]
   12f74:	str	r3, [sp, #52]	; 0x34
   12f78:	str	r0, [sp, #160]	; 0xa0
   12f7c:	b	12718 <close_stdout@@Base+0x504>
   12f80:	ldr	r3, [sp, #36]	; 0x24
   12f84:	cmp	r3, #0
   12f88:	bne	13318 <close_stdout@@Base+0x1104>
   12f8c:	cmp	sl, #0
   12f90:	beq	13274 <close_stdout@@Base+0x1060>
   12f94:	ldr	r1, [sp, #40]	; 0x28
   12f98:	mov	r3, #39	; 0x27
   12f9c:	ldr	r2, [sp, #36]	; 0x24
   12fa0:	mov	r0, #1
   12fa4:	mov	r9, r0
   12fa8:	str	r0, [sp, #28]
   12fac:	strb	r3, [r1]
   12fb0:	ldr	r3, [pc, #960]	; 13378 <close_stdout@@Base+0x1164>
   12fb4:	str	r2, [sp, #24]
   12fb8:	add	r3, pc, r3
   12fbc:	str	r3, [sp, #52]	; 0x34
   12fc0:	b	12718 <close_stdout@@Base+0x504>
   12fc4:	ldr	r2, [sp, #28]
   12fc8:	cmp	r2, #1
   12fcc:	add	r4, fp, r2
   12fd0:	movls	r3, #0
   12fd4:	movhi	r3, #1
   12fd8:	cmn	r8, #1
   12fdc:	movne	r3, #0
   12fe0:	cmp	r3, #0
   12fe4:	beq	12ff4 <close_stdout@@Base+0xde0>
   12fe8:	ldr	r0, [sp, #32]
   12fec:	bl	114b4 <strlen@plt>
   12ff0:	mov	r8, r0
   12ff4:	cmp	r8, r4
   12ff8:	ldrcc	r3, [sp, #32]
   12ffc:	movcc	r6, #0
   13000:	addcc	r5, r3, fp
   13004:	bcc	12774 <close_stdout@@Base+0x560>
   13008:	ldr	r0, [sp, #32]
   1300c:	ldr	r1, [sp, #52]	; 0x34
   13010:	add	r5, r0, fp
   13014:	ldr	r2, [sp, #28]
   13018:	mov	r0, r5
   1301c:	bl	1134c <memcmp@plt>
   13020:	cmp	r0, #0
   13024:	bne	1303c <close_stdout@@Base+0xe28>
   13028:	ldr	r1, [sp, #36]	; 0x24
   1302c:	cmp	r1, #0
   13030:	bne	12b94 <close_stdout@@Base+0x980>
   13034:	mov	r6, #1
   13038:	b	12774 <close_stdout@@Base+0x560>
   1303c:	mov	r6, #0
   13040:	b	12774 <close_stdout@@Base+0x560>
   13044:	add	r7, sp, #108	; 0x6c
   13048:	cmn	r8, #1
   1304c:	mov	r3, #0
   13050:	str	r3, [sp, #108]	; 0x6c
   13054:	str	r3, [r7, #4]
   13058:	beq	13244 <close_stdout@@Base+0x1030>
   1305c:	mov	r1, #0
   13060:	ldr	r0, [sp, #32]
   13064:	mov	ip, #1
   13068:	str	r9, [sp, #88]	; 0x58
   1306c:	str	r6, [sp, #96]	; 0x60
   13070:	mov	r9, r1
   13074:	str	r5, [sp, #100]	; 0x64
   13078:	mov	r6, ip
   1307c:	mov	r5, r7
   13080:	add	r3, sp, #104	; 0x68
   13084:	sub	r0, r0, #1
   13088:	str	r3, [sp, #80]	; 0x50
   1308c:	str	r0, [sp, #84]	; 0x54
   13090:	str	r1, [sp, #60]	; 0x3c
   13094:	str	r4, [sp, #92]	; 0x5c
   13098:	ldr	r2, [sp, #32]
   1309c:	add	r7, r9, fp
   130a0:	add	r0, sp, #104	; 0x68
   130a4:	mov	r3, r5
   130a8:	add	r4, r2, r7
   130ac:	rsb	r2, r7, r8
   130b0:	mov	r1, r4
   130b4:	bl	11400 <mbrtowc@plt>
   130b8:	subs	r2, r0, #0
   130bc:	beq	131c8 <close_stdout@@Base+0xfb4>
   130c0:	cmn	r2, #1
   130c4:	beq	132f0 <close_stdout@@Base+0x10dc>
   130c8:	cmn	r2, #2
   130cc:	beq	13294 <close_stdout@@Base+0x1080>
   130d0:	ldr	r3, [sp, #36]	; 0x24
   130d4:	ldr	r0, [sp, #160]	; 0xa0
   130d8:	cmp	r0, #2
   130dc:	movne	r3, #0
   130e0:	andeq	r3, r3, #1
   130e4:	cmp	r3, #0
   130e8:	beq	131a4 <close_stdout@@Base+0xf90>
   130ec:	cmp	r2, #1
   130f0:	beq	131a4 <close_stdout@@Base+0xf90>
   130f4:	ldr	r1, [sp, #84]	; 0x54
   130f8:	add	r3, r1, r2
   130fc:	add	r7, r3, r7
   13100:	ldrb	r3, [r4, #1]!
   13104:	sub	r3, r3, #91	; 0x5b
   13108:	cmp	r3, #33	; 0x21
   1310c:	addls	pc, pc, r3, lsl #2
   13110:	b	1319c <close_stdout@@Base+0xf88>
   13114:	b	12b94 <close_stdout@@Base+0x980>
   13118:	b	12b94 <close_stdout@@Base+0x980>
   1311c:	b	1319c <close_stdout@@Base+0xf88>
   13120:	b	12b94 <close_stdout@@Base+0x980>
   13124:	b	1319c <close_stdout@@Base+0xf88>
   13128:	b	12b94 <close_stdout@@Base+0x980>
   1312c:	b	1319c <close_stdout@@Base+0xf88>
   13130:	b	1319c <close_stdout@@Base+0xf88>
   13134:	b	1319c <close_stdout@@Base+0xf88>
   13138:	b	1319c <close_stdout@@Base+0xf88>
   1313c:	b	1319c <close_stdout@@Base+0xf88>
   13140:	b	1319c <close_stdout@@Base+0xf88>
   13144:	b	1319c <close_stdout@@Base+0xf88>
   13148:	b	1319c <close_stdout@@Base+0xf88>
   1314c:	b	1319c <close_stdout@@Base+0xf88>
   13150:	b	1319c <close_stdout@@Base+0xf88>
   13154:	b	1319c <close_stdout@@Base+0xf88>
   13158:	b	1319c <close_stdout@@Base+0xf88>
   1315c:	b	1319c <close_stdout@@Base+0xf88>
   13160:	b	1319c <close_stdout@@Base+0xf88>
   13164:	b	1319c <close_stdout@@Base+0xf88>
   13168:	b	1319c <close_stdout@@Base+0xf88>
   1316c:	b	1319c <close_stdout@@Base+0xf88>
   13170:	b	1319c <close_stdout@@Base+0xf88>
   13174:	b	1319c <close_stdout@@Base+0xf88>
   13178:	b	1319c <close_stdout@@Base+0xf88>
   1317c:	b	1319c <close_stdout@@Base+0xf88>
   13180:	b	1319c <close_stdout@@Base+0xf88>
   13184:	b	1319c <close_stdout@@Base+0xf88>
   13188:	b	1319c <close_stdout@@Base+0xf88>
   1318c:	b	1319c <close_stdout@@Base+0xf88>
   13190:	b	1319c <close_stdout@@Base+0xf88>
   13194:	b	1319c <close_stdout@@Base+0xf88>
   13198:	b	12b94 <close_stdout@@Base+0x980>
   1319c:	cmp	r4, r7
   131a0:	bne	13100 <close_stdout@@Base+0xeec>
   131a4:	ldr	r0, [sp, #104]	; 0x68
   131a8:	add	r9, r9, r2
   131ac:	bl	113ac <iswprint@plt>
   131b0:	cmp	r0, #0
   131b4:	mov	r0, r5
   131b8:	moveq	r6, #0
   131bc:	bl	11334 <mbsinit@plt>
   131c0:	cmp	r0, #0
   131c4:	beq	13098 <close_stdout@@Base+0xe84>
   131c8:	mov	ip, r6
   131cc:	eor	r2, ip, #1
   131d0:	str	r9, [sp, #60]	; 0x3c
   131d4:	ldr	r4, [sp, #92]	; 0x5c
   131d8:	uxtb	r2, r2
   131dc:	ldr	r9, [sp, #88]	; 0x58
   131e0:	ldr	r6, [sp, #96]	; 0x60
   131e4:	ldr	r5, [sp, #100]	; 0x64
   131e8:	ldr	r3, [sp, #60]	; 0x3c
   131ec:	cmp	r3, #1
   131f0:	bls	12d74 <close_stdout@@Base+0xb60>
   131f4:	ldr	r0, [sp, #24]
   131f8:	and	r2, r2, r0
   131fc:	b	12d80 <close_stdout@@Base+0xb6c>
   13200:	ldr	r2, [sp, #164]	; 0xa4
   13204:	tst	r2, #1
   13208:	addne	fp, fp, #1
   1320c:	bne	1273c <close_stdout@@Base+0x528>
   13210:	b	12a4c <close_stdout@@Base+0x838>
   13214:	ldr	r0, [sp, #36]	; 0x24
   13218:	cmp	r0, #0
   1321c:	beq	12a4c <close_stdout@@Base+0x838>
   13220:	b	12b94 <close_stdout@@Base+0x980>
   13224:	ldr	r2, [sp, #32]
   13228:	ldrb	r3, [r2, #1]
   1322c:	adds	r3, r3, #0
   13230:	movne	r3, #1
   13234:	b	12b68 <close_stdout@@Base+0x954>
   13238:	bl	115c8 <abort@plt>
   1323c:	ldr	r8, [sp, #60]	; 0x3c
   13240:	b	12b94 <close_stdout@@Base+0x980>
   13244:	ldr	r0, [sp, #32]
   13248:	bl	114b4 <strlen@plt>
   1324c:	mov	r8, r0
   13250:	b	1305c <close_stdout@@Base+0xe48>
   13254:	ldr	r2, [pc, #288]	; 1337c <close_stdout@@Base+0x1168>
   13258:	mov	r1, #1
   1325c:	mov	r9, r1
   13260:	str	r1, [sp, #24]
   13264:	add	r2, pc, r2
   13268:	str	r1, [sp, #28]
   1326c:	str	r2, [sp, #52]	; 0x34
   13270:	b	12718 <close_stdout@@Base+0x504>
   13274:	ldr	r2, [pc, #260]	; 13380 <close_stdout@@Base+0x116c>
   13278:	mov	r3, #1
   1327c:	mov	r9, r3
   13280:	str	r3, [sp, #28]
   13284:	add	r2, pc, r2
   13288:	str	sl, [sp, #24]
   1328c:	str	r2, [sp, #52]	; 0x34
   13290:	b	12718 <close_stdout@@Base+0x504>
   13294:	cmp	r8, r7
   13298:	str	r9, [sp, #60]	; 0x3c
   1329c:	mov	ip, r4
   132a0:	ldr	r6, [sp, #96]	; 0x60
   132a4:	ldr	r9, [sp, #88]	; 0x58
   132a8:	ldr	r4, [sp, #92]	; 0x5c
   132ac:	ldr	r5, [sp, #100]	; 0x64
   132b0:	bls	132e8 <close_stdout@@Base+0x10d4>
   132b4:	ldrb	r3, [ip]
   132b8:	cmp	r3, #0
   132bc:	beq	132e8 <close_stdout@@Base+0x10d4>
   132c0:	ldr	r3, [sp, #60]	; 0x3c
   132c4:	b	132d4 <close_stdout@@Base+0x10c0>
   132c8:	ldrb	r2, [r5, r3]
   132cc:	cmp	r2, #0
   132d0:	beq	132e4 <close_stdout@@Base+0x10d0>
   132d4:	add	r3, r3, #1
   132d8:	add	r2, fp, r3
   132dc:	cmp	r8, r2
   132e0:	bhi	132c8 <close_stdout@@Base+0x10b4>
   132e4:	str	r3, [sp, #60]	; 0x3c
   132e8:	mov	r2, #1
   132ec:	b	131e8 <close_stdout@@Base+0xfd4>
   132f0:	str	r9, [sp, #60]	; 0x3c
   132f4:	mov	r2, #1
   132f8:	ldr	r4, [sp, #92]	; 0x5c
   132fc:	ldr	r6, [sp, #96]	; 0x60
   13300:	ldr	r9, [sp, #88]	; 0x58
   13304:	ldr	r5, [sp, #100]	; 0x64
   13308:	b	131e8 <close_stdout@@Base+0xfd4>
   1330c:	ldr	r9, [sp, #36]	; 0x24
   13310:	b	12f34 <close_stdout@@Base+0xd20>
   13314:	bl	11370 <__stack_chk_fail@plt>
   13318:	ldr	r1, [pc, #100]	; 13384 <close_stdout@@Base+0x1170>
   1331c:	mov	r3, #0
   13320:	mov	r0, #1
   13324:	str	r3, [sp, #24]
   13328:	add	r1, pc, r1
   1332c:	str	r0, [sp, #28]
   13330:	mov	r9, r3
   13334:	str	r1, [sp, #52]	; 0x34
   13338:	b	12718 <close_stdout@@Base+0x504>
   1333c:	ldr	r0, [pc, #68]	; 13388 <close_stdout@@Base+0x1174>
   13340:	mov	r3, #1
   13344:	mov	r9, #0
   13348:	str	r3, [sp, #24]
   1334c:	add	r0, pc, r0
   13350:	str	r3, [sp, #28]
   13354:	str	r0, [sp, #52]	; 0x34
   13358:	b	12718 <close_stdout@@Base+0x504>
   1335c:	andeq	r3, r1, r8, ror r9
   13360:	andeq	r0, r0, r0, lsr #2
   13364:	andeq	r2, r0, r0, lsr r6
   13368:	andeq	r2, r0, ip, lsl #12
   1336c:	andeq	r2, r0, r8, asr #11
   13370:	andeq	r2, r0, r4, lsr #11
   13374:	andeq	r2, r0, r8, lsr #10
   13378:	ldrdeq	r2, [r0], -r0
   1337c:	andeq	r2, r0, r8, lsr #4
   13380:	andeq	r2, r0, r4, lsl #4
   13384:	andeq	r2, r0, r0, ror #2
   13388:	andeq	r2, r0, r0, asr #2
   1338c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13390:	sub	sp, sp, #44	; 0x2c
   13394:	mov	r6, r0
   13398:	mov	r9, r1
   1339c:	mov	sl, r2
   133a0:	mov	r4, r3
   133a4:	bl	114cc <__errno_location@plt>
   133a8:	ldr	fp, [pc, #412]	; 1354c <close_stdout@@Base+0x1338>
   133ac:	cmp	r6, #0
   133b0:	add	fp, pc, fp
   133b4:	ldr	r5, [fp]
   133b8:	ldr	r1, [r0]
   133bc:	mov	r8, r0
   133c0:	str	r1, [sp, #36]	; 0x24
   133c4:	blt	13544 <close_stdout@@Base+0x1330>
   133c8:	ldr	r3, [pc, #384]	; 13550 <close_stdout@@Base+0x133c>
   133cc:	add	r3, pc, r3
   133d0:	ldr	r3, [r3]
   133d4:	cmp	r6, r3
   133d8:	bcc	1342c <close_stdout@@Base+0x1218>
   133dc:	add	r7, r6, #1
   133e0:	cmn	r7, #-536870911	; 0xe0000001
   133e4:	bhi	13548 <close_stdout@@Base+0x1334>
   133e8:	add	r3, fp, #4
   133ec:	cmp	r5, r3
   133f0:	beq	1351c <close_stdout@@Base+0x1308>
   133f4:	mov	r0, r5
   133f8:	lsl	r1, r7, #3
   133fc:	bl	14224 <close_stdout@@Base+0x2010>
   13400:	mov	r5, r0
   13404:	str	r0, [fp]
   13408:	ldr	fp, [pc, #324]	; 13554 <close_stdout@@Base+0x1340>
   1340c:	mov	r1, #0
   13410:	add	fp, pc, fp
   13414:	ldr	r0, [fp]
   13418:	rsb	r2, r0, r7
   1341c:	add	r0, r5, r0, lsl #3
   13420:	lsl	r2, r2, #3
   13424:	bl	114e4 <memset@plt>
   13428:	str	r7, [fp]
   1342c:	add	r2, r4, #8
   13430:	str	r2, [sp, #32]
   13434:	ldr	r1, [r4]
   13438:	add	fp, r5, r6, lsl #3
   1343c:	ldr	lr, [sp, #32]
   13440:	mov	r2, r9
   13444:	ldr	r3, [r4, #4]
   13448:	ldr	ip, [r5, r6, lsl #3]
   1344c:	ldr	r7, [fp, #4]
   13450:	orr	r3, r3, #1
   13454:	str	r1, [sp]
   13458:	str	r3, [sp, #4]
   1345c:	mov	r1, ip
   13460:	str	lr, [sp, #8]
   13464:	mov	r0, r7
   13468:	ldr	lr, [r4, #40]	; 0x28
   1346c:	str	r3, [sp, #28]
   13470:	mov	r3, sl
   13474:	str	lr, [sp, #12]
   13478:	ldr	lr, [r4, #44]	; 0x2c
   1347c:	str	ip, [sp, #24]
   13480:	str	lr, [sp, #16]
   13484:	bl	12664 <close_stdout@@Base+0x450>
   13488:	ldr	ip, [sp, #24]
   1348c:	cmp	ip, r0
   13490:	bhi	13508 <close_stdout@@Base+0x12f4>
   13494:	ldr	r3, [pc, #188]	; 13558 <close_stdout@@Base+0x1344>
   13498:	add	r1, r0, #1
   1349c:	str	r1, [r5, r6, lsl #3]
   134a0:	add	r3, pc, r3
   134a4:	cmp	r7, r3
   134a8:	beq	134bc <close_stdout@@Base+0x12a8>
   134ac:	mov	r0, r7
   134b0:	str	r1, [sp, #24]
   134b4:	bl	11304 <free@plt>
   134b8:	ldr	r1, [sp, #24]
   134bc:	mov	r0, r1
   134c0:	str	r1, [sp, #24]
   134c4:	bl	141cc <close_stdout@@Base+0x1fb8>
   134c8:	ldr	r3, [sp, #28]
   134cc:	ldr	lr, [sp, #32]
   134d0:	mov	r2, r9
   134d4:	str	r0, [fp, #4]
   134d8:	mov	r7, r0
   134dc:	ldr	ip, [r4]
   134e0:	str	r3, [sp, #4]
   134e4:	mov	r3, sl
   134e8:	str	lr, [sp, #8]
   134ec:	str	ip, [sp]
   134f0:	ldr	ip, [r4, #40]	; 0x28
   134f4:	ldr	r1, [sp, #24]
   134f8:	str	ip, [sp, #12]
   134fc:	ldr	ip, [r4, #44]	; 0x2c
   13500:	str	ip, [sp, #16]
   13504:	bl	12664 <close_stdout@@Base+0x450>
   13508:	ldr	r1, [sp, #36]	; 0x24
   1350c:	mov	r0, r7
   13510:	str	r1, [r8]
   13514:	add	sp, sp, #44	; 0x2c
   13518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1351c:	lsl	r1, r7, #3
   13520:	mov	r0, #0
   13524:	str	r3, [sp, #24]
   13528:	bl	14224 <close_stdout@@Base+0x2010>
   1352c:	ldr	r3, [sp, #24]
   13530:	mov	r5, r0
   13534:	ldm	r3, {r0, r1}
   13538:	str	r5, [fp]
   1353c:	stm	r5, {r0, r1}
   13540:	b	13408 <close_stdout@@Base+0x11f4>
   13544:	bl	115c8 <abort@plt>
   13548:	bl	143e0 <close_stdout@@Base+0x21cc>
   1354c:	andeq	r2, r1, r0, ror #27
   13550:	muleq	r1, r0, sp
   13554:	andeq	r2, r1, ip, asr #26
   13558:	andeq	r2, r1, ip, lsl #26
   1355c:	push	{r4, r5, r6, lr}
   13560:	mov	r5, r0
   13564:	bl	114cc <__errno_location@plt>
   13568:	cmp	r5, #0
   1356c:	mov	r1, #48	; 0x30
   13570:	mov	r4, r0
   13574:	ldr	r0, [pc, #24]	; 13594 <close_stdout@@Base+0x1380>
   13578:	ldr	r6, [r4]
   1357c:	add	r0, pc, r0
   13580:	add	r0, r0, #256	; 0x100
   13584:	movne	r0, r5
   13588:	bl	143a0 <close_stdout@@Base+0x218c>
   1358c:	str	r6, [r4]
   13590:	pop	{r4, r5, r6, pc}
   13594:	andeq	r2, r1, r0, lsr ip
   13598:	cmp	r0, #0
   1359c:	beq	135a8 <close_stdout@@Base+0x1394>
   135a0:	ldr	r0, [r0]
   135a4:	bx	lr
   135a8:	ldr	r0, [pc, #12]	; 135bc <close_stdout@@Base+0x13a8>
   135ac:	add	r0, pc, r0
   135b0:	add	r0, r0, #256	; 0x100
   135b4:	ldr	r0, [r0]
   135b8:	bx	lr
   135bc:	andeq	r2, r1, r0, lsl #24
   135c0:	cmp	r0, #0
   135c4:	beq	135d0 <close_stdout@@Base+0x13bc>
   135c8:	str	r1, [r0]
   135cc:	bx	lr
   135d0:	ldr	r0, [pc, #12]	; 135e4 <close_stdout@@Base+0x13d0>
   135d4:	add	r0, pc, r0
   135d8:	add	r0, r0, #256	; 0x100
   135dc:	str	r1, [r0]
   135e0:	bx	lr
   135e4:	ldrdeq	r2, [r1], -r8
   135e8:	cmp	r0, #0
   135ec:	movne	r3, r0
   135f0:	beq	13620 <close_stdout@@Base+0x140c>
   135f4:	lsr	ip, r1, #5
   135f8:	and	r1, r1, #31
   135fc:	add	r3, r3, ip, lsl #2
   13600:	ldr	ip, [r3, #8]
   13604:	lsr	r0, ip, r1
   13608:	eor	r2, r0, r2
   1360c:	and	r0, r0, #1
   13610:	and	r2, r2, #1
   13614:	eor	ip, ip, r2, lsl r1
   13618:	str	ip, [r3, #8]
   1361c:	bx	lr
   13620:	ldr	r3, [pc, #8]	; 13630 <close_stdout@@Base+0x141c>
   13624:	add	r3, pc, r3
   13628:	add	r3, r3, #256	; 0x100
   1362c:	b	135f4 <close_stdout@@Base+0x13e0>
   13630:	andeq	r2, r1, r8, lsl #23
   13634:	subs	r3, r0, #0
   13638:	beq	13648 <close_stdout@@Base+0x1434>
   1363c:	ldr	r0, [r3, #4]
   13640:	str	r1, [r3, #4]
   13644:	bx	lr
   13648:	ldr	r3, [pc, #8]	; 13658 <close_stdout@@Base+0x1444>
   1364c:	add	r3, pc, r3
   13650:	add	r3, r3, #256	; 0x100
   13654:	b	1363c <close_stdout@@Base+0x1428>
   13658:	andeq	r2, r1, r0, ror #22
   1365c:	cmp	r0, #0
   13660:	push	{r3, lr}
   13664:	beq	13688 <close_stdout@@Base+0x1474>
   13668:	cmp	r2, #0
   1366c:	cmpne	r1, #0
   13670:	mov	r3, #8
   13674:	strne	r1, [r0, #40]	; 0x28
   13678:	str	r3, [r0]
   1367c:	strne	r2, [r0, #44]	; 0x2c
   13680:	popne	{r3, pc}
   13684:	bl	115c8 <abort@plt>
   13688:	ldr	r0, [pc, #8]	; 13698 <close_stdout@@Base+0x1484>
   1368c:	add	r0, pc, r0
   13690:	add	r0, r0, #256	; 0x100
   13694:	b	13668 <close_stdout@@Base+0x1454>
   13698:	andeq	r2, r1, r0, lsr #22
   1369c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136a0:	sub	sp, sp, #24
   136a4:	mov	r7, r0
   136a8:	mov	sl, r1
   136ac:	ldr	r4, [sp, #56]	; 0x38
   136b0:	mov	r9, r2
   136b4:	mov	r8, r3
   136b8:	cmp	r4, #0
   136bc:	beq	13710 <close_stdout@@Base+0x14fc>
   136c0:	bl	114cc <__errno_location@plt>
   136c4:	ldr	r3, [r4]
   136c8:	add	lr, r4, #8
   136cc:	mov	r1, sl
   136d0:	mov	r2, r9
   136d4:	ldr	r6, [r0]
   136d8:	mov	r5, r0
   136dc:	str	r3, [sp]
   136e0:	mov	r0, r7
   136e4:	ldr	ip, [r4, #4]
   136e8:	mov	r3, r8
   136ec:	stmib	sp, {ip, lr}
   136f0:	ldr	ip, [r4, #40]	; 0x28
   136f4:	str	ip, [sp, #12]
   136f8:	ldr	ip, [r4, #44]	; 0x2c
   136fc:	str	ip, [sp, #16]
   13700:	bl	12664 <close_stdout@@Base+0x450>
   13704:	str	r6, [r5]
   13708:	add	sp, sp, #24
   1370c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13710:	ldr	r4, [pc, #8]	; 13720 <close_stdout@@Base+0x150c>
   13714:	add	r4, pc, r4
   13718:	add	r4, r4, #256	; 0x100
   1371c:	b	136c0 <close_stdout@@Base+0x14ac>
   13720:	muleq	r1, r8, sl
   13724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13728:	subs	r4, r3, #0
   1372c:	sub	sp, sp, #36	; 0x24
   13730:	mov	r7, r0
   13734:	mov	r6, r1
   13738:	mov	r5, r2
   1373c:	beq	137f8 <close_stdout@@Base+0x15e4>
   13740:	bl	114cc <__errno_location@plt>
   13744:	ldr	r3, [r4]
   13748:	ldr	sl, [r4, #4]
   1374c:	add	r9, r4, #8
   13750:	mov	r8, r0
   13754:	mov	r0, #0
   13758:	ldr	r2, [r8]
   1375c:	cmp	r5, r0
   13760:	orreq	sl, sl, #1
   13764:	str	r9, [sp, #8]
   13768:	mov	r1, r0
   1376c:	stm	sp, {r3, sl}
   13770:	mov	r3, r6
   13774:	ldr	ip, [r4, #40]	; 0x28
   13778:	str	r2, [sp, #28]
   1377c:	mov	r2, r7
   13780:	str	ip, [sp, #12]
   13784:	ldr	ip, [r4, #44]	; 0x2c
   13788:	str	ip, [sp, #16]
   1378c:	bl	12664 <close_stdout@@Base+0x450>
   13790:	add	r1, r0, #1
   13794:	mov	fp, r0
   13798:	str	r1, [sp, #24]
   1379c:	mov	r0, r1
   137a0:	bl	141cc <close_stdout@@Base+0x1fb8>
   137a4:	ldr	lr, [r4]
   137a8:	str	sl, [sp, #4]
   137ac:	mov	r3, r6
   137b0:	str	r9, [sp, #8]
   137b4:	mov	r2, r7
   137b8:	str	lr, [sp]
   137bc:	ldr	lr, [r4, #40]	; 0x28
   137c0:	ldr	r1, [sp, #24]
   137c4:	str	lr, [sp, #12]
   137c8:	ldr	lr, [r4, #44]	; 0x2c
   137cc:	str	lr, [sp, #16]
   137d0:	str	r0, [sp, #24]
   137d4:	bl	12664 <close_stdout@@Base+0x450>
   137d8:	ldr	r3, [sp, #28]
   137dc:	cmp	r5, #0
   137e0:	str	r3, [r8]
   137e4:	ldr	ip, [sp, #24]
   137e8:	strne	fp, [r5]
   137ec:	mov	r0, ip
   137f0:	add	sp, sp, #36	; 0x24
   137f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137f8:	ldr	r4, [pc, #8]	; 13808 <close_stdout@@Base+0x15f4>
   137fc:	add	r4, pc, r4
   13800:	add	r4, r4, #256	; 0x100
   13804:	b	13740 <close_stdout@@Base+0x152c>
   13808:			; <UNDEFINED> instruction: 0x000129b0
   1380c:	mov	r3, r2
   13810:	mov	r2, #0
   13814:	b	13724 <close_stdout@@Base+0x1510>
   13818:	ldr	r2, [pc, #152]	; 138b8 <close_stdout@@Base+0x16a4>
   1381c:	push	{r3, r4, r5, r6, r7, lr}
   13820:	add	r2, pc, r2
   13824:	ldr	r3, [pc, #144]	; 138bc <close_stdout@@Base+0x16a8>
   13828:	ldr	r6, [r2]
   1382c:	add	r3, pc, r3
   13830:	cmp	r6, #1
   13834:	ldr	r7, [r3]
   13838:	movhi	r4, #1
   1383c:	movhi	r5, r7
   13840:	bls	1385c <close_stdout@@Base+0x1648>
   13844:	ldr	r0, [r5, #12]
   13848:	add	r4, r4, #1
   1384c:	bl	11304 <free@plt>
   13850:	cmp	r4, r6
   13854:	add	r5, r5, #8
   13858:	bne	13844 <close_stdout@@Base+0x1630>
   1385c:	ldr	r4, [pc, #92]	; 138c0 <close_stdout@@Base+0x16ac>
   13860:	ldr	r0, [r7, #4]
   13864:	add	r4, pc, r4
   13868:	cmp	r0, r4
   1386c:	beq	13884 <close_stdout@@Base+0x1670>
   13870:	bl	11304 <free@plt>
   13874:	ldr	r3, [pc, #72]	; 138c4 <close_stdout@@Base+0x16b0>
   13878:	mov	r2, #256	; 0x100
   1387c:	add	r3, pc, r3
   13880:	stmib	r3, {r2, r4}
   13884:	ldr	r4, [pc, #60]	; 138c8 <close_stdout@@Base+0x16b4>
   13888:	add	r4, pc, r4
   1388c:	add	r5, r4, #4
   13890:	cmp	r7, r5
   13894:	beq	138a4 <close_stdout@@Base+0x1690>
   13898:	mov	r0, r7
   1389c:	bl	11304 <free@plt>
   138a0:	str	r5, [r4]
   138a4:	ldr	r3, [pc, #32]	; 138cc <close_stdout@@Base+0x16b8>
   138a8:	mov	r2, #1
   138ac:	add	r3, pc, r3
   138b0:	str	r2, [r3]
   138b4:	pop	{r3, r4, r5, r6, r7, pc}
   138b8:	andeq	r2, r1, ip, lsr r9
   138bc:	andeq	r2, r1, r4, ror #18
   138c0:	andeq	r2, r1, r8, asr #18
   138c4:	andeq	r2, r1, r4, lsl r9
   138c8:	andeq	r2, r1, r8, lsl #18
   138cc:			; <UNDEFINED> instruction: 0x000128b0
   138d0:	ldr	r3, [pc, #12]	; 138e4 <close_stdout@@Base+0x16d0>
   138d4:	mvn	r2, #0
   138d8:	add	r3, pc, r3
   138dc:	add	r3, r3, #256	; 0x100
   138e0:	b	1338c <close_stdout@@Base+0x1178>
   138e4:	ldrdeq	r2, [r1], -r4
   138e8:	ldr	r3, [pc, #8]	; 138f8 <close_stdout@@Base+0x16e4>
   138ec:	add	r3, pc, r3
   138f0:	add	r3, r3, #256	; 0x100
   138f4:	b	1338c <close_stdout@@Base+0x1178>
   138f8:	andeq	r2, r1, r0, asr #17
   138fc:	mov	r1, r0
   13900:	mov	r0, #0
   13904:	b	138d0 <close_stdout@@Base+0x16bc>
   13908:	mov	r2, r1
   1390c:	mov	r1, r0
   13910:	mov	r0, #0
   13914:	b	138e8 <close_stdout@@Base+0x16d4>
   13918:	ldr	r3, [pc, #92]	; 1397c <close_stdout@@Base+0x1768>
   1391c:	ldr	ip, [pc, #92]	; 13980 <close_stdout@@Base+0x176c>
   13920:	add	r3, pc, r3
   13924:	push	{r4, r5, r6, r7, lr}
   13928:	sub	sp, sp, #60	; 0x3c
   1392c:	ldr	r4, [r3, ip]
   13930:	add	r5, sp, #4
   13934:	mov	r7, r2
   13938:	mov	r6, r0
   1393c:	mov	r0, r5
   13940:	ldr	r3, [r4]
   13944:	str	r3, [sp, #52]	; 0x34
   13948:	bl	124ac <close_stdout@@Base+0x298>
   1394c:	mov	r3, r5
   13950:	mvn	r2, #0
   13954:	mov	r0, r6
   13958:	mov	r1, r7
   1395c:	bl	1338c <close_stdout@@Base+0x1178>
   13960:	ldr	r2, [sp, #52]	; 0x34
   13964:	ldr	r3, [r4]
   13968:	cmp	r2, r3
   1396c:	bne	13978 <close_stdout@@Base+0x1764>
   13970:	add	sp, sp, #60	; 0x3c
   13974:	pop	{r4, r5, r6, r7, pc}
   13978:	bl	11370 <__stack_chk_fail@plt>
   1397c:	ldrdeq	r2, [r1], -r8
   13980:	andeq	r0, r0, r0, lsr #2
   13984:	ldr	ip, [pc, #96]	; 139ec <close_stdout@@Base+0x17d8>
   13988:	push	{r4, r5, r6, r7, r8, lr}
   1398c:	add	ip, pc, ip
   13990:	ldr	lr, [pc, #88]	; 139f0 <close_stdout@@Base+0x17dc>
   13994:	sub	sp, sp, #56	; 0x38
   13998:	mov	r8, r3
   1399c:	add	r5, sp, #4
   139a0:	mov	r7, r2
   139a4:	mov	r6, r0
   139a8:	ldr	r4, [ip, lr]
   139ac:	mov	r0, r5
   139b0:	ldr	r3, [r4]
   139b4:	str	r3, [sp, #52]	; 0x34
   139b8:	bl	124ac <close_stdout@@Base+0x298>
   139bc:	mov	r2, r8
   139c0:	mov	r3, r5
   139c4:	mov	r0, r6
   139c8:	mov	r1, r7
   139cc:	bl	1338c <close_stdout@@Base+0x1178>
   139d0:	ldr	r2, [sp, #52]	; 0x34
   139d4:	ldr	r3, [r4]
   139d8:	cmp	r2, r3
   139dc:	bne	139e8 <close_stdout@@Base+0x17d4>
   139e0:	add	sp, sp, #56	; 0x38
   139e4:	pop	{r4, r5, r6, r7, r8, pc}
   139e8:	bl	11370 <__stack_chk_fail@plt>
   139ec:	andeq	r2, r1, ip, ror #12
   139f0:	andeq	r0, r0, r0, lsr #2
   139f4:	mov	r2, r1
   139f8:	mov	r1, r0
   139fc:	mov	r0, #0
   13a00:	b	13918 <close_stdout@@Base+0x1704>
   13a04:	mov	ip, r1
   13a08:	mov	r3, r2
   13a0c:	mov	r1, r0
   13a10:	mov	r2, ip
   13a14:	mov	r0, #0
   13a18:	b	13984 <close_stdout@@Base+0x1770>
   13a1c:	push	{r4, r5, r6, r7, r8, lr}
   13a20:	mov	r5, r2
   13a24:	ldr	lr, [pc, #136]	; 13ab4 <close_stdout@@Base+0x18a0>
   13a28:	mov	r7, r0
   13a2c:	mov	r6, r1
   13a30:	ldr	r4, [pc, #128]	; 13ab8 <close_stdout@@Base+0x18a4>
   13a34:	add	lr, pc, lr
   13a38:	sub	sp, sp, #56	; 0x38
   13a3c:	add	lr, lr, #256	; 0x100
   13a40:	ldr	r8, [pc, #116]	; 13abc <close_stdout@@Base+0x18a8>
   13a44:	add	r4, pc, r4
   13a48:	add	ip, sp, #4
   13a4c:	ldm	lr!, {r0, r1, r2, r3}
   13a50:	ldr	r4, [r4, r8]
   13a54:	stmia	ip!, {r0, r1, r2, r3}
   13a58:	ldm	lr!, {r0, r1, r2, r3}
   13a5c:	ldr	r8, [r4]
   13a60:	stmia	ip!, {r0, r1, r2, r3}
   13a64:	ldm	lr, {r0, r1, r2, r3}
   13a68:	str	r8, [sp, #52]	; 0x34
   13a6c:	stm	ip, {r0, r1, r2, r3}
   13a70:	mov	r1, r5
   13a74:	add	r5, sp, #4
   13a78:	mov	r2, #1
   13a7c:	mov	r0, r5
   13a80:	bl	135e8 <close_stdout@@Base+0x13d4>
   13a84:	mov	r2, r6
   13a88:	mov	r3, r5
   13a8c:	mov	r1, r7
   13a90:	mov	r0, #0
   13a94:	bl	1338c <close_stdout@@Base+0x1178>
   13a98:	ldr	r2, [sp, #52]	; 0x34
   13a9c:	ldr	r3, [r4]
   13aa0:	cmp	r2, r3
   13aa4:	bne	13ab0 <close_stdout@@Base+0x189c>
   13aa8:	add	sp, sp, #56	; 0x38
   13aac:	pop	{r4, r5, r6, r7, r8, pc}
   13ab0:	bl	11370 <__stack_chk_fail@plt>
   13ab4:	andeq	r2, r1, r8, ror r7
   13ab8:			; <UNDEFINED> instruction: 0x000125b4
   13abc:	andeq	r0, r0, r0, lsr #2
   13ac0:	mov	r2, r1
   13ac4:	mvn	r1, #0
   13ac8:	b	13a1c <close_stdout@@Base+0x1808>
   13acc:	mov	r1, #58	; 0x3a
   13ad0:	b	13ac0 <close_stdout@@Base+0x18ac>
   13ad4:	mov	r2, #58	; 0x3a
   13ad8:	b	13a1c <close_stdout@@Base+0x1808>
   13adc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ae0:	mov	r5, r2
   13ae4:	ldr	lr, [pc, #144]	; 13b7c <close_stdout@@Base+0x1968>
   13ae8:	mov	r8, r0
   13aec:	mov	r9, r1
   13af0:	mov	r7, r3
   13af4:	add	lr, pc, lr
   13af8:	ldr	r4, [pc, #128]	; 13b80 <close_stdout@@Base+0x196c>
   13afc:	add	lr, lr, #256	; 0x100
   13b00:	sub	sp, sp, #56	; 0x38
   13b04:	ldr	sl, [pc, #120]	; 13b84 <close_stdout@@Base+0x1970>
   13b08:	add	r4, pc, r4
   13b0c:	ldm	lr!, {r0, r1, r2, r3}
   13b10:	add	ip, sp, #4
   13b14:	ldr	r4, [r4, sl]
   13b18:	ldr	r6, [sp, #88]	; 0x58
   13b1c:	stmia	ip!, {r0, r1, r2, r3}
   13b20:	ldm	lr!, {r0, r1, r2, r3}
   13b24:	ldr	sl, [r4]
   13b28:	stmia	ip!, {r0, r1, r2, r3}
   13b2c:	ldm	lr, {r0, r1, r2, r3}
   13b30:	str	sl, [sp, #52]	; 0x34
   13b34:	stm	ip, {r0, r1, r2, r3}
   13b38:	mov	r2, r5
   13b3c:	add	r5, sp, #4
   13b40:	mov	r1, r9
   13b44:	mov	r0, r5
   13b48:	bl	1365c <close_stdout@@Base+0x1448>
   13b4c:	mov	r2, r6
   13b50:	mov	r3, r5
   13b54:	mov	r0, r8
   13b58:	mov	r1, r7
   13b5c:	bl	1338c <close_stdout@@Base+0x1178>
   13b60:	ldr	r2, [sp, #52]	; 0x34
   13b64:	ldr	r3, [r4]
   13b68:	cmp	r2, r3
   13b6c:	bne	13b78 <close_stdout@@Base+0x1964>
   13b70:	add	sp, sp, #56	; 0x38
   13b74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b78:	bl	11370 <__stack_chk_fail@plt>
   13b7c:			; <UNDEFINED> instruction: 0x000126b8
   13b80:	strdeq	r2, [r1], -r0
   13b84:	andeq	r0, r0, r0, lsr #2
   13b88:	push	{lr}		; (str lr, [sp, #-4]!)
   13b8c:	sub	sp, sp, #12
   13b90:	mvn	ip, #0
   13b94:	str	ip, [sp]
   13b98:	bl	13adc <close_stdout@@Base+0x18c8>
   13b9c:	add	sp, sp, #12
   13ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ba4:	mov	ip, r1
   13ba8:	mov	r3, r2
   13bac:	mov	r1, r0
   13bb0:	mov	r2, ip
   13bb4:	mov	r0, #0
   13bb8:	b	13b88 <close_stdout@@Base+0x1974>
   13bbc:	push	{lr}		; (str lr, [sp, #-4]!)
   13bc0:	sub	sp, sp, #12
   13bc4:	mov	lr, r1
   13bc8:	mov	ip, r2
   13bcc:	mov	r1, r0
   13bd0:	str	r3, [sp]
   13bd4:	mov	r2, lr
   13bd8:	mov	r3, ip
   13bdc:	mov	r0, #0
   13be0:	bl	13adc <close_stdout@@Base+0x18c8>
   13be4:	add	sp, sp, #12
   13be8:	pop	{pc}		; (ldr pc, [sp], #4)
   13bec:	ldr	r3, [pc, #12]	; 13c00 <close_stdout@@Base+0x19ec>
   13bf0:	ldr	ip, [pc, #12]	; 13c04 <close_stdout@@Base+0x19f0>
   13bf4:	add	r3, pc, r3
   13bf8:	ldr	r3, [r3, ip]
   13bfc:	b	1338c <close_stdout@@Base+0x1178>
   13c00:	andeq	r2, r1, r4, lsl #8
   13c04:	andeq	r0, r0, ip, lsl r1
   13c08:	mov	r2, r1
   13c0c:	mov	r1, r0
   13c10:	mov	r0, #0
   13c14:	b	13bec <close_stdout@@Base+0x19d8>
   13c18:	mvn	r2, #0
   13c1c:	b	13bec <close_stdout@@Base+0x19d8>
   13c20:	mov	r1, r0
   13c24:	mov	r0, #0
   13c28:	b	13c18 <close_stdout@@Base+0x1a04>
   13c2c:	push	{r4, r5, r6, r7, lr}
   13c30:	cmp	r1, #0
   13c34:	sub	sp, sp, #36	; 0x24
   13c38:	ldr	r7, [pc, #896]	; 13fc0 <close_stdout@@Base+0x1dac>
   13c3c:	mov	ip, r3
   13c40:	mov	r5, r0
   13c44:	add	r7, pc, r7
   13c48:	ldr	r4, [sp, #56]	; 0x38
   13c4c:	ldr	r6, [sp, #60]	; 0x3c
   13c50:	beq	13f94 <close_stdout@@Base+0x1d80>
   13c54:	str	r2, [sp]
   13c58:	mov	r3, r1
   13c5c:	ldr	r2, [pc, #864]	; 13fc4 <close_stdout@@Base+0x1db0>
   13c60:	mov	r1, #1
   13c64:	str	ip, [sp, #4]
   13c68:	add	r2, pc, r2
   13c6c:	bl	11514 <__fprintf_chk@plt>
   13c70:	ldr	r1, [pc, #848]	; 13fc8 <close_stdout@@Base+0x1db4>
   13c74:	mov	r2, #5
   13c78:	mov	r0, #0
   13c7c:	add	r1, pc, r1
   13c80:	bl	11364 <dcgettext@plt>
   13c84:	ldr	r2, [pc, #832]	; 13fcc <close_stdout@@Base+0x1db8>
   13c88:	movw	ip, #2013	; 0x7dd
   13c8c:	mov	r1, #1
   13c90:	ldr	r2, [r7, r2]
   13c94:	str	ip, [sp]
   13c98:	mov	r3, r0
   13c9c:	mov	r0, r5
   13ca0:	bl	11514 <__fprintf_chk@plt>
   13ca4:	ldr	r1, [pc, #804]	; 13fd0 <close_stdout@@Base+0x1dbc>
   13ca8:	mov	r0, #0
   13cac:	mov	r2, #5
   13cb0:	add	r1, pc, r1
   13cb4:	bl	11364 <dcgettext@plt>
   13cb8:	mov	r1, r5
   13cbc:	bl	112c8 <fputs_unlocked@plt>
   13cc0:	cmp	r6, #9
   13cc4:	addls	pc, pc, r6, lsl #2
   13cc8:	b	13fb0 <close_stdout@@Base+0x1d9c>
   13ccc:	b	13d60 <close_stdout@@Base+0x1b4c>
   13cd0:	b	13d64 <close_stdout@@Base+0x1b50>
   13cd4:	b	13d94 <close_stdout@@Base+0x1b80>
   13cd8:	b	13dc8 <close_stdout@@Base+0x1bb4>
   13cdc:	b	13e04 <close_stdout@@Base+0x1bf0>
   13ce0:	b	13e44 <close_stdout@@Base+0x1c30>
   13ce4:	b	13e8c <close_stdout@@Base+0x1c78>
   13ce8:	b	13edc <close_stdout@@Base+0x1cc8>
   13cec:	b	13f34 <close_stdout@@Base+0x1d20>
   13cf0:	b	13cf4 <close_stdout@@Base+0x1ae0>
   13cf4:	ldr	r1, [pc, #728]	; 13fd4 <close_stdout@@Base+0x1dc0>
   13cf8:	mov	r0, #0
   13cfc:	add	r1, pc, r1
   13d00:	mov	r2, #5
   13d04:	bl	11364 <dcgettext@plt>
   13d08:	ldm	r4, {r3, ip}
   13d0c:	mov	r1, #1
   13d10:	str	ip, [sp]
   13d14:	ldr	ip, [r4, #8]
   13d18:	str	ip, [sp, #4]
   13d1c:	ldr	ip, [r4, #12]
   13d20:	str	ip, [sp, #8]
   13d24:	ldr	ip, [r4, #16]
   13d28:	str	ip, [sp, #12]
   13d2c:	ldr	ip, [r4, #20]
   13d30:	str	ip, [sp, #16]
   13d34:	ldr	ip, [r4, #24]
   13d38:	str	ip, [sp, #20]
   13d3c:	ldr	ip, [r4, #28]
   13d40:	str	ip, [sp, #24]
   13d44:	ldr	ip, [r4, #32]
   13d48:	str	ip, [sp, #28]
   13d4c:	mov	r2, r0
   13d50:	mov	r0, r5
   13d54:	bl	11514 <__fprintf_chk@plt>
   13d58:	add	sp, sp, #36	; 0x24
   13d5c:	pop	{r4, r5, r6, r7, pc}
   13d60:	bl	115c8 <abort@plt>
   13d64:	ldr	r1, [pc, #620]	; 13fd8 <close_stdout@@Base+0x1dc4>
   13d68:	mov	r2, #5
   13d6c:	mov	r0, #0
   13d70:	add	r1, pc, r1
   13d74:	bl	11364 <dcgettext@plt>
   13d78:	ldr	r3, [r4]
   13d7c:	mov	r1, #1
   13d80:	mov	r2, r0
   13d84:	mov	r0, r5
   13d88:	add	sp, sp, #36	; 0x24
   13d8c:	pop	{r4, r5, r6, r7, lr}
   13d90:	b	11514 <__fprintf_chk@plt>
   13d94:	ldr	r1, [pc, #576]	; 13fdc <close_stdout@@Base+0x1dc8>
   13d98:	mov	r2, #5
   13d9c:	mov	r0, #0
   13da0:	add	r1, pc, r1
   13da4:	bl	11364 <dcgettext@plt>
   13da8:	ldm	r4, {r3, ip}
   13dac:	mov	r1, #1
   13db0:	str	ip, [sp, #56]	; 0x38
   13db4:	mov	r2, r0
   13db8:	mov	r0, r5
   13dbc:	add	sp, sp, #36	; 0x24
   13dc0:	pop	{r4, r5, r6, r7, lr}
   13dc4:	b	11514 <__fprintf_chk@plt>
   13dc8:	ldr	r1, [pc, #528]	; 13fe0 <close_stdout@@Base+0x1dcc>
   13dcc:	mov	r2, #5
   13dd0:	mov	r0, #0
   13dd4:	add	r1, pc, r1
   13dd8:	bl	11364 <dcgettext@plt>
   13ddc:	ldm	r4, {r3, ip}
   13de0:	mov	r1, #1
   13de4:	str	ip, [sp, #56]	; 0x38
   13de8:	ldr	ip, [r4, #8]
   13dec:	str	ip, [sp, #60]	; 0x3c
   13df0:	mov	r2, r0
   13df4:	mov	r0, r5
   13df8:	add	sp, sp, #36	; 0x24
   13dfc:	pop	{r4, r5, r6, r7, lr}
   13e00:	b	11514 <__fprintf_chk@plt>
   13e04:	ldr	r1, [pc, #472]	; 13fe4 <close_stdout@@Base+0x1dd0>
   13e08:	mov	r2, #5
   13e0c:	mov	r0, #0
   13e10:	add	r1, pc, r1
   13e14:	bl	11364 <dcgettext@plt>
   13e18:	ldm	r4, {r3, ip}
   13e1c:	mov	r1, #1
   13e20:	str	ip, [sp]
   13e24:	ldr	ip, [r4, #8]
   13e28:	str	ip, [sp, #4]
   13e2c:	ldr	ip, [r4, #12]
   13e30:	str	ip, [sp, #8]
   13e34:	mov	r2, r0
   13e38:	mov	r0, r5
   13e3c:	bl	11514 <__fprintf_chk@plt>
   13e40:	b	13d58 <close_stdout@@Base+0x1b44>
   13e44:	ldr	r1, [pc, #412]	; 13fe8 <close_stdout@@Base+0x1dd4>
   13e48:	mov	r2, #5
   13e4c:	mov	r0, #0
   13e50:	add	r1, pc, r1
   13e54:	bl	11364 <dcgettext@plt>
   13e58:	ldm	r4, {r3, ip}
   13e5c:	mov	r1, #1
   13e60:	str	ip, [sp]
   13e64:	ldr	ip, [r4, #8]
   13e68:	str	ip, [sp, #4]
   13e6c:	ldr	ip, [r4, #12]
   13e70:	str	ip, [sp, #8]
   13e74:	ldr	ip, [r4, #16]
   13e78:	str	ip, [sp, #12]
   13e7c:	mov	r2, r0
   13e80:	mov	r0, r5
   13e84:	bl	11514 <__fprintf_chk@plt>
   13e88:	b	13d58 <close_stdout@@Base+0x1b44>
   13e8c:	ldr	r1, [pc, #344]	; 13fec <close_stdout@@Base+0x1dd8>
   13e90:	mov	r2, #5
   13e94:	mov	r0, #0
   13e98:	add	r1, pc, r1
   13e9c:	bl	11364 <dcgettext@plt>
   13ea0:	ldm	r4, {r3, ip}
   13ea4:	mov	r1, #1
   13ea8:	str	ip, [sp]
   13eac:	ldr	ip, [r4, #8]
   13eb0:	str	ip, [sp, #4]
   13eb4:	ldr	ip, [r4, #12]
   13eb8:	str	ip, [sp, #8]
   13ebc:	ldr	ip, [r4, #16]
   13ec0:	str	ip, [sp, #12]
   13ec4:	ldr	ip, [r4, #20]
   13ec8:	str	ip, [sp, #16]
   13ecc:	mov	r2, r0
   13ed0:	mov	r0, r5
   13ed4:	bl	11514 <__fprintf_chk@plt>
   13ed8:	b	13d58 <close_stdout@@Base+0x1b44>
   13edc:	ldr	r1, [pc, #268]	; 13ff0 <close_stdout@@Base+0x1ddc>
   13ee0:	mov	r2, #5
   13ee4:	mov	r0, #0
   13ee8:	add	r1, pc, r1
   13eec:	bl	11364 <dcgettext@plt>
   13ef0:	ldm	r4, {r3, ip}
   13ef4:	mov	r1, #1
   13ef8:	str	ip, [sp]
   13efc:	ldr	ip, [r4, #8]
   13f00:	str	ip, [sp, #4]
   13f04:	ldr	ip, [r4, #12]
   13f08:	str	ip, [sp, #8]
   13f0c:	ldr	ip, [r4, #16]
   13f10:	str	ip, [sp, #12]
   13f14:	ldr	ip, [r4, #20]
   13f18:	str	ip, [sp, #16]
   13f1c:	ldr	ip, [r4, #24]
   13f20:	str	ip, [sp, #20]
   13f24:	mov	r2, r0
   13f28:	mov	r0, r5
   13f2c:	bl	11514 <__fprintf_chk@plt>
   13f30:	b	13d58 <close_stdout@@Base+0x1b44>
   13f34:	ldr	r1, [pc, #184]	; 13ff4 <close_stdout@@Base+0x1de0>
   13f38:	mov	r2, #5
   13f3c:	mov	r0, #0
   13f40:	add	r1, pc, r1
   13f44:	bl	11364 <dcgettext@plt>
   13f48:	ldm	r4, {r3, ip}
   13f4c:	mov	r1, #1
   13f50:	str	ip, [sp]
   13f54:	ldr	ip, [r4, #8]
   13f58:	str	ip, [sp, #4]
   13f5c:	ldr	ip, [r4, #12]
   13f60:	str	ip, [sp, #8]
   13f64:	ldr	ip, [r4, #16]
   13f68:	str	ip, [sp, #12]
   13f6c:	ldr	ip, [r4, #20]
   13f70:	str	ip, [sp, #16]
   13f74:	ldr	ip, [r4, #24]
   13f78:	str	ip, [sp, #20]
   13f7c:	ldr	ip, [r4, #28]
   13f80:	str	ip, [sp, #24]
   13f84:	mov	r2, r0
   13f88:	mov	r0, r5
   13f8c:	bl	11514 <__fprintf_chk@plt>
   13f90:	b	13d58 <close_stdout@@Base+0x1b44>
   13f94:	str	r3, [sp]
   13f98:	mov	r3, r2
   13f9c:	ldr	r2, [pc, #84]	; 13ff8 <close_stdout@@Base+0x1de4>
   13fa0:	mov	r1, #1
   13fa4:	add	r2, pc, r2
   13fa8:	bl	11514 <__fprintf_chk@plt>
   13fac:	b	13c70 <close_stdout@@Base+0x1a5c>
   13fb0:	ldr	r1, [pc, #68]	; 13ffc <close_stdout@@Base+0x1de8>
   13fb4:	mov	r0, #0
   13fb8:	add	r1, pc, r1
   13fbc:	b	13d00 <close_stdout@@Base+0x1aec>
   13fc0:			; <UNDEFINED> instruction: 0x000123b4
   13fc4:	andeq	r1, r0, r8, ror r8
   13fc8:	andeq	r1, r0, r8, ror r8
   13fcc:	andeq	r0, r0, ip, asr #2
   13fd0:	andeq	r1, r0, r8, asr #16
   13fd4:	ldrdeq	r1, [r0], -r4
   13fd8:	andeq	r1, r0, r4, asr r8
   13fdc:	andeq	r1, r0, r4, lsr r8
   13fe0:	andeq	r1, r0, r8, lsl r8
   13fe4:	strdeq	r1, [r0], -r8
   13fe8:	ldrdeq	r1, [r0], -r8
   13fec:			; <UNDEFINED> instruction: 0x000017b4
   13ff0:	andeq	r1, r0, ip, lsl #15
   13ff4:	andeq	r1, r0, r0, ror #14
   13ff8:	andeq	r1, r0, r8, asr #10
   13ffc:	andeq	r1, r0, ip, asr #14
   14000:	push	{r4, r5, lr}
   14004:	sub	sp, sp, #12
   14008:	ldr	r5, [sp, #24]
   1400c:	ldr	ip, [r5]
   14010:	cmp	ip, #0
   14014:	beq	14030 <close_stdout@@Base+0x1e1c>
   14018:	mov	lr, r5
   1401c:	mov	ip, #0
   14020:	ldr	r4, [lr, #4]!
   14024:	add	ip, ip, #1
   14028:	cmp	r4, #0
   1402c:	bne	14020 <close_stdout@@Base+0x1e0c>
   14030:	stm	sp, {r5, ip}
   14034:	bl	13c2c <close_stdout@@Base+0x1a18>
   14038:	add	sp, sp, #12
   1403c:	pop	{r4, r5, pc}
   14040:	push	{r4, r5, r6, r7, lr}
   14044:	sub	sp, sp, #60	; 0x3c
   14048:	ldr	r4, [pc, #100]	; 140b4 <close_stdout@@Base+0x1ea0>
   1404c:	mov	ip, #0
   14050:	ldr	r5, [pc, #96]	; 140b8 <close_stdout@@Base+0x1ea4>
   14054:	mov	lr, ip
   14058:	add	r4, pc, r4
   1405c:	ldr	r6, [sp, #80]	; 0x50
   14060:	ldr	r7, [r4, r5]
   14064:	add	r5, sp, #12
   14068:	ldr	r4, [r7]
   1406c:	str	r4, [sp, #52]	; 0x34
   14070:	ldr	r4, [r6, ip]
   14074:	cmp	r4, #0
   14078:	str	r4, [r5, ip]
   1407c:	beq	14090 <close_stdout@@Base+0x1e7c>
   14080:	add	lr, lr, #1
   14084:	add	ip, ip, #4
   14088:	cmp	lr, #10
   1408c:	bne	14070 <close_stdout@@Base+0x1e5c>
   14090:	stm	sp, {r5, lr}
   14094:	bl	13c2c <close_stdout@@Base+0x1a18>
   14098:	ldr	r2, [sp, #52]	; 0x34
   1409c:	ldr	r3, [r7]
   140a0:	cmp	r2, r3
   140a4:	bne	140b0 <close_stdout@@Base+0x1e9c>
   140a8:	add	sp, sp, #60	; 0x3c
   140ac:	pop	{r4, r5, r6, r7, pc}
   140b0:	bl	11370 <__stack_chk_fail@plt>
   140b4:	andeq	r1, r1, r0, lsr #31
   140b8:	andeq	r0, r0, r0, lsr #2
   140bc:	push	{r3}		; (str r3, [sp, #-4]!)
   140c0:	push	{r4, lr}
   140c4:	sub	sp, sp, #20
   140c8:	ldr	lr, [pc, #72]	; 14118 <close_stdout@@Base+0x1f04>
   140cc:	add	ip, sp, #32
   140d0:	ldr	r4, [pc, #68]	; 1411c <close_stdout@@Base+0x1f08>
   140d4:	add	lr, pc, lr
   140d8:	ldr	r3, [sp, #28]
   140dc:	ldr	r4, [lr, r4]
   140e0:	str	ip, [sp]
   140e4:	str	ip, [sp, #8]
   140e8:	ldr	ip, [r4]
   140ec:	str	ip, [sp, #12]
   140f0:	bl	14040 <close_stdout@@Base+0x1e2c>
   140f4:	ldr	r2, [sp, #12]
   140f8:	ldr	r3, [r4]
   140fc:	cmp	r2, r3
   14100:	bne	14114 <close_stdout@@Base+0x1f00>
   14104:	add	sp, sp, #20
   14108:	pop	{r4, lr}
   1410c:	add	sp, sp, #4
   14110:	bx	lr
   14114:	bl	11370 <__stack_chk_fail@plt>
   14118:	andeq	r1, r1, r4, lsr #30
   1411c:	andeq	r0, r0, r0, lsr #2
   14120:	ldr	r1, [pc, #132]	; 141ac <close_stdout@@Base+0x1f98>
   14124:	mov	r2, #5
   14128:	push	{r4, lr}
   1412c:	add	r1, pc, r1
   14130:	mov	r0, #0
   14134:	ldr	r4, [pc, #116]	; 141b0 <close_stdout@@Base+0x1f9c>
   14138:	bl	11364 <dcgettext@plt>
   1413c:	ldr	r2, [pc, #112]	; 141b4 <close_stdout@@Base+0x1fa0>
   14140:	add	r4, pc, r4
   14144:	add	r2, pc, r2
   14148:	mov	r1, r0
   1414c:	mov	r0, #1
   14150:	bl	114fc <__printf_chk@plt>
   14154:	ldr	r1, [pc, #92]	; 141b8 <close_stdout@@Base+0x1fa4>
   14158:	mov	r2, #5
   1415c:	mov	r0, #0
   14160:	add	r1, pc, r1
   14164:	bl	11364 <dcgettext@plt>
   14168:	ldr	r2, [pc, #76]	; 141bc <close_stdout@@Base+0x1fa8>
   1416c:	ldr	r3, [pc, #76]	; 141c0 <close_stdout@@Base+0x1fac>
   14170:	add	r2, pc, r2
   14174:	add	r3, pc, r3
   14178:	mov	r1, r0
   1417c:	mov	r0, #1
   14180:	bl	114fc <__printf_chk@plt>
   14184:	ldr	r1, [pc, #56]	; 141c4 <close_stdout@@Base+0x1fb0>
   14188:	mov	r0, #0
   1418c:	mov	r2, #5
   14190:	add	r1, pc, r1
   14194:	bl	11364 <dcgettext@plt>
   14198:	ldr	r3, [pc, #40]	; 141c8 <close_stdout@@Base+0x1fb4>
   1419c:	ldr	r3, [r4, r3]
   141a0:	pop	{r4, lr}
   141a4:	ldr	r1, [r3]
   141a8:	b	112c8 <fputs_unlocked@plt>
   141ac:	andeq	r1, r0, r4, lsl r6
   141b0:			; <UNDEFINED> instruction: 0x00011eb8
   141b4:	andeq	r1, r0, r4, lsl r6
   141b8:	andeq	r1, r0, r0, lsl r6
   141bc:	andeq	r0, r0, r8, ror #30
   141c0:	andeq	r0, r0, r4, ror pc
   141c4:	strdeq	r1, [r0], -r4
   141c8:	andeq	r0, r0, ip, lsr r1
   141cc:	push	{r4, lr}
   141d0:	mov	r4, r0
   141d4:	bl	11448 <malloc@plt>
   141d8:	rsbs	r3, r0, #1
   141dc:	movcc	r3, #0
   141e0:	cmp	r4, #0
   141e4:	moveq	r3, #0
   141e8:	cmp	r3, #0
   141ec:	popeq	{r4, pc}
   141f0:	bl	143e0 <close_stdout@@Base+0x21cc>
   141f4:	push	{r3, r4, r5, lr}
   141f8:	mov	r4, r0
   141fc:	mvn	r0, #0
   14200:	mov	r5, r1
   14204:	bl	14b34 <close_stdout@@Base+0x2920>
   14208:	cmp	r0, r4
   1420c:	bcc	1421c <close_stdout@@Base+0x2008>
   14210:	mul	r0, r4, r5
   14214:	pop	{r3, r4, r5, lr}
   14218:	b	141cc <close_stdout@@Base+0x1fb8>
   1421c:	bl	143e0 <close_stdout@@Base+0x21cc>
   14220:	b	141cc <close_stdout@@Base+0x1fb8>
   14224:	rsbs	r3, r1, #1
   14228:	push	{r4, lr}
   1422c:	movcc	r3, #0
   14230:	cmp	r0, #0
   14234:	mov	r4, r1
   14238:	moveq	r3, #0
   1423c:	cmp	r3, #0
   14240:	bne	14264 <close_stdout@@Base+0x2050>
   14244:	bl	11388 <realloc@plt>
   14248:	rsbs	r3, r0, #1
   1424c:	movcc	r3, #0
   14250:	cmp	r4, #0
   14254:	moveq	r3, #0
   14258:	cmp	r3, #0
   1425c:	popeq	{r4, pc}
   14260:	bl	143e0 <close_stdout@@Base+0x21cc>
   14264:	bl	11304 <free@plt>
   14268:	mov	r0, #0
   1426c:	pop	{r4, pc}
   14270:	push	{r4, r5, r6, lr}
   14274:	mov	r5, r1
   14278:	mov	r6, r0
   1427c:	mov	r1, r2
   14280:	mvn	r0, #0
   14284:	mov	r4, r2
   14288:	bl	14b34 <close_stdout@@Base+0x2920>
   1428c:	cmp	r0, r5
   14290:	bcc	142a4 <close_stdout@@Base+0x2090>
   14294:	mov	r0, r6
   14298:	mul	r1, r5, r4
   1429c:	pop	{r4, r5, r6, lr}
   142a0:	b	14224 <close_stdout@@Base+0x2010>
   142a4:	bl	143e0 <close_stdout@@Base+0x21cc>
   142a8:	push	{r3, r4, r5, r6, r7, lr}
   142ac:	subs	r7, r0, #0
   142b0:	mov	r5, r1
   142b4:	mov	r6, r2
   142b8:	ldr	r4, [r1]
   142bc:	beq	142f4 <close_stdout@@Base+0x20e0>
   142c0:	movw	r0, #43690	; 0xaaaa
   142c4:	mov	r1, r2
   142c8:	bfi	r0, r0, #16, #16
   142cc:	bl	14b34 <close_stdout@@Base+0x2920>
   142d0:	cmp	r4, r0
   142d4:	addcc	r3, r4, #1
   142d8:	addcc	r4, r4, r3, lsr #1
   142dc:	bcs	14318 <close_stdout@@Base+0x2104>
   142e0:	str	r4, [r5]
   142e4:	mov	r0, r7
   142e8:	mul	r1, r6, r4
   142ec:	pop	{r3, r4, r5, r6, r7, lr}
   142f0:	b	14224 <close_stdout@@Base+0x2010>
   142f4:	cmp	r4, #0
   142f8:	bne	142e0 <close_stdout@@Base+0x20cc>
   142fc:	mov	r0, #64	; 0x40
   14300:	mov	r1, r2
   14304:	bl	14b34 <close_stdout@@Base+0x2920>
   14308:	cmp	r0, #0
   1430c:	movne	r4, r0
   14310:	addeq	r4, r0, #1
   14314:	b	142e0 <close_stdout@@Base+0x20cc>
   14318:	bl	143e0 <close_stdout@@Base+0x21cc>
   1431c:	cmp	r0, #0
   14320:	push	{r3, lr}
   14324:	ldr	r3, [r1]
   14328:	beq	14354 <close_stdout@@Base+0x2140>
   1432c:	movw	r2, #43689	; 0xaaa9
   14330:	movt	r2, #43690	; 0xaaaa
   14334:	cmp	r3, r2
   14338:	addls	r2, r3, #1
   1433c:	addls	r3, r3, r2, lsr #1
   14340:	bhi	1436c <close_stdout@@Base+0x2158>
   14344:	str	r3, [r1]
   14348:	mov	r1, r3
   1434c:	pop	{r3, lr}
   14350:	b	14224 <close_stdout@@Base+0x2010>
   14354:	cmp	r3, #0
   14358:	moveq	r3, #64	; 0x40
   1435c:	str	r3, [r1]
   14360:	mov	r1, r3
   14364:	pop	{r3, lr}
   14368:	b	14224 <close_stdout@@Base+0x2010>
   1436c:	bl	143e0 <close_stdout@@Base+0x21cc>
   14370:	push	{r4, lr}
   14374:	mov	r4, r0
   14378:	bl	141cc <close_stdout@@Base+0x1fb8>
   1437c:	mov	r2, r4
   14380:	mov	r1, #0
   14384:	pop	{r4, lr}
   14388:	b	114e4 <memset@plt>
   1438c:	push	{r3, lr}
   14390:	bl	112bc <calloc@plt>
   14394:	cmp	r0, #0
   14398:	popne	{r3, pc}
   1439c:	bl	143e0 <close_stdout@@Base+0x21cc>
   143a0:	push	{r3, r4, r5, lr}
   143a4:	mov	r4, r1
   143a8:	mov	r5, r0
   143ac:	mov	r0, r1
   143b0:	bl	141cc <close_stdout@@Base+0x1fb8>
   143b4:	mov	r1, r5
   143b8:	mov	r2, r4
   143bc:	pop	{r3, r4, r5, lr}
   143c0:	b	1131c <memcpy@plt>
   143c4:	push	{r4, lr}
   143c8:	mov	r4, r0
   143cc:	bl	114b4 <strlen@plt>
   143d0:	add	r1, r0, #1
   143d4:	mov	r0, r4
   143d8:	pop	{r4, lr}
   143dc:	b	143a0 <close_stdout@@Base+0x218c>
   143e0:	ldr	r3, [pc, #64]	; 14428 <close_stdout@@Base+0x2214>
   143e4:	mov	r2, #5
   143e8:	ldr	ip, [pc, #60]	; 1442c <close_stdout@@Base+0x2218>
   143ec:	mov	r0, #0
   143f0:	add	r3, pc, r3
   143f4:	ldr	r1, [pc, #52]	; 14430 <close_stdout@@Base+0x221c>
   143f8:	push	{r4, lr}
   143fc:	add	r1, pc, r1
   14400:	ldr	r3, [r3, ip]
   14404:	ldr	r4, [r3]
   14408:	bl	11364 <dcgettext@plt>
   1440c:	ldr	r2, [pc, #32]	; 14434 <close_stdout@@Base+0x2220>
   14410:	mov	r1, #0
   14414:	add	r2, pc, r2
   14418:	mov	r3, r0
   1441c:	mov	r0, r4
   14420:	bl	1140c <error@plt>
   14424:	bl	115c8 <abort@plt>
   14428:	andeq	r1, r1, r8, lsl #24
   1442c:	andeq	r0, r0, r0, asr #2
   14430:	strdeq	r1, [r0], -r8
   14434:	andeq	r1, r0, r4
   14438:	push	{r3, r4, r5, lr}
   1443c:	subs	r4, r0, #0
   14440:	beq	1448c <close_stdout@@Base+0x2278>
   14444:	cmp	r4, #10
   14448:	beq	14454 <close_stdout@@Base+0x2240>
   1444c:	mov	r0, r4
   14450:	pop	{r3, r4, r5, pc}
   14454:	ldr	r5, [r1]
   14458:	ldr	r1, [pc, #64]	; 144a0 <close_stdout@@Base+0x228c>
   1445c:	mov	r0, r5
   14460:	add	r1, pc, r1
   14464:	bl	112ec <strcmp@plt>
   14468:	cmp	r0, #0
   1446c:	bne	1444c <close_stdout@@Base+0x2238>
   14470:	mov	r0, r5
   14474:	mvn	r4, #0
   14478:	bl	11580 <freecon@plt>
   1447c:	bl	114cc <__errno_location@plt>
   14480:	mov	r3, #61	; 0x3d
   14484:	str	r3, [r0]
   14488:	b	1444c <close_stdout@@Base+0x2238>
   1448c:	bl	114cc <__errno_location@plt>
   14490:	mvn	r4, #0
   14494:	mov	r3, #95	; 0x5f
   14498:	str	r3, [r0]
   1449c:	b	1444c <close_stdout@@Base+0x2238>
   144a0:	andeq	r1, r0, r8, lsr #7
   144a4:	push	{r4, lr}
   144a8:	mov	r4, r1
   144ac:	bl	114a8 <getfilecon@plt>
   144b0:	mov	r1, r4
   144b4:	pop	{r4, lr}
   144b8:	b	14438 <close_stdout@@Base+0x2224>
   144bc:	push	{r4, lr}
   144c0:	mov	r4, r1
   144c4:	bl	1143c <lgetfilecon@plt>
   144c8:	mov	r1, r4
   144cc:	pop	{r4, lr}
   144d0:	b	14438 <close_stdout@@Base+0x2224>
   144d4:	push	{r4, lr}
   144d8:	mov	r4, r1
   144dc:	bl	11394 <fgetfilecon@plt>
   144e0:	mov	r1, r4
   144e4:	pop	{r4, lr}
   144e8:	b	14438 <close_stdout@@Base+0x2224>
   144ec:	push	{r4, r5, r6, lr}
   144f0:	mov	r4, r0
   144f4:	bl	113f4 <__fpending@plt>
   144f8:	mov	r6, r0
   144fc:	mov	r0, r4
   14500:	ldr	r4, [r4]
   14504:	bl	1498c <close_stdout@@Base+0x2778>
   14508:	and	r4, r4, #32
   1450c:	adds	r5, r0, #0
   14510:	movne	r5, #1
   14514:	cmp	r4, #0
   14518:	bne	14538 <close_stdout@@Base+0x2324>
   1451c:	cmp	r5, #0
   14520:	beq	14530 <close_stdout@@Base+0x231c>
   14524:	cmp	r6, #0
   14528:	beq	14554 <close_stdout@@Base+0x2340>
   1452c:	mvn	r4, #0
   14530:	mov	r0, r4
   14534:	pop	{r4, r5, r6, pc}
   14538:	cmp	r5, #0
   1453c:	bne	1452c <close_stdout@@Base+0x2318>
   14540:	bl	114cc <__errno_location@plt>
   14544:	mvn	r4, #0
   14548:	str	r5, [r0]
   1454c:	mov	r0, r4
   14550:	pop	{r4, r5, r6, pc}
   14554:	bl	114cc <__errno_location@plt>
   14558:	ldr	r4, [r0]
   1455c:	subs	r4, r4, #9
   14560:	mvnne	r4, #0
   14564:	mov	r0, r4
   14568:	pop	{r4, r5, r6, pc}
   1456c:	ldr	r3, [pc, #984]	; 1494c <close_stdout@@Base+0x2738>
   14570:	mov	r0, #14
   14574:	ldr	r2, [pc, #980]	; 14950 <close_stdout@@Base+0x273c>
   14578:	add	r3, pc, r3
   1457c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14580:	sub	sp, sp, #132	; 0x84
   14584:	ldr	r6, [r3, r2]
   14588:	ldr	r3, [r6]
   1458c:	str	r3, [sp, #124]	; 0x7c
   14590:	bl	11568 <nl_langinfo@plt>
   14594:	subs	r5, r0, #0
   14598:	beq	1464c <close_stdout@@Base+0x2438>
   1459c:	ldr	r3, [pc, #944]	; 14954 <close_stdout@@Base+0x2740>
   145a0:	ldr	r4, [pc, r3]
   145a4:	cmp	r4, #0
   145a8:	beq	14658 <close_stdout@@Base+0x2444>
   145ac:	ldrb	r7, [r4]
   145b0:	cmp	r7, #0
   145b4:	bne	145e8 <close_stdout@@Base+0x23d4>
   145b8:	b	14620 <close_stdout@@Base+0x240c>
   145bc:	mov	r0, r4
   145c0:	bl	114b4 <strlen@plt>
   145c4:	add	r0, r0, #1
   145c8:	add	r7, r4, r0
   145cc:	mov	r0, r7
   145d0:	bl	114b4 <strlen@plt>
   145d4:	add	r0, r0, #1
   145d8:	add	r4, r7, r0
   145dc:	ldrb	r7, [r7, r0]
   145e0:	cmp	r7, #0
   145e4:	beq	14620 <close_stdout@@Base+0x240c>
   145e8:	mov	r0, r5
   145ec:	mov	r1, r4
   145f0:	bl	112ec <strcmp@plt>
   145f4:	cmp	r0, #0
   145f8:	beq	14610 <close_stdout@@Base+0x23fc>
   145fc:	cmp	r7, #42	; 0x2a
   14600:	bne	145bc <close_stdout@@Base+0x23a8>
   14604:	ldrb	r3, [r4, #1]
   14608:	cmp	r3, #0
   1460c:	bne	145bc <close_stdout@@Base+0x23a8>
   14610:	mov	r0, r4
   14614:	bl	114b4 <strlen@plt>
   14618:	add	r0, r0, #1
   1461c:	add	r5, r4, r0
   14620:	ldrb	r3, [r5]
   14624:	cmp	r3, #0
   14628:	ldreq	r5, [pc, #808]	; 14958 <close_stdout@@Base+0x2744>
   1462c:	addeq	r5, pc, r5
   14630:	ldr	r2, [sp, #124]	; 0x7c
   14634:	mov	r0, r5
   14638:	ldr	r3, [r6]
   1463c:	cmp	r2, r3
   14640:	bne	14920 <close_stdout@@Base+0x270c>
   14644:	add	sp, sp, #132	; 0x84
   14648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1464c:	ldr	r5, [pc, #776]	; 1495c <close_stdout@@Base+0x2748>
   14650:	add	r5, pc, r5
   14654:	b	1459c <close_stdout@@Base+0x2388>
   14658:	ldr	r0, [pc, #768]	; 14960 <close_stdout@@Base+0x274c>
   1465c:	add	r0, pc, r0
   14660:	bl	11430 <getenv@plt>
   14664:	subs	r8, r0, #0
   14668:	beq	148f8 <close_stdout@@Base+0x26e4>
   1466c:	ldrb	r3, [r8]
   14670:	cmp	r3, #0
   14674:	beq	1488c <close_stdout@@Base+0x2678>
   14678:	bl	114b4 <strlen@plt>
   1467c:	subs	sl, r0, #0
   14680:	subne	r3, sl, #1
   14684:	bne	1489c <close_stdout@@Base+0x2688>
   14688:	mov	r9, #0
   1468c:	mov	fp, r9
   14690:	add	r9, sl, r9
   14694:	add	r0, r9, #14
   14698:	bl	11448 <malloc@plt>
   1469c:	subs	r7, r0, #0
   146a0:	beq	148ec <close_stdout@@Base+0x26d8>
   146a4:	mov	r1, r8
   146a8:	mov	r2, sl
   146ac:	bl	1131c <memcpy@plt>
   146b0:	cmp	fp, #0
   146b4:	add	ip, r7, r9
   146b8:	movne	r3, #47	; 0x2f
   146bc:	strbne	r3, [r7, sl]
   146c0:	ldr	r3, [pc, #668]	; 14964 <close_stdout@@Base+0x2750>
   146c4:	add	r3, pc, r3
   146c8:	ldm	r3!, {r0, r1, r2}
   146cc:	ldrh	r3, [r3]
   146d0:	str	r0, [r7, r9]
   146d4:	mov	r0, r7
   146d8:	str	r1, [ip, #4]
   146dc:	mov	r1, #32768	; 0x8000
   146e0:	strh	r3, [ip, #12]
   146e4:	str	r2, [ip, #8]
   146e8:	bl	11424 <open64@plt>
   146ec:	subs	r8, r0, #0
   146f0:	blt	148b4 <close_stdout@@Base+0x26a0>
   146f4:	ldr	r1, [pc, #620]	; 14968 <close_stdout@@Base+0x2754>
   146f8:	add	r1, pc, r1
   146fc:	bl	112b0 <fdopen@plt>
   14700:	subs	fp, r0, #0
   14704:	beq	1490c <close_stdout@@Base+0x26f8>
   14708:	ldr	r0, [pc, #604]	; 1496c <close_stdout@@Base+0x2758>
   1470c:	add	sl, sp, #20
   14710:	add	r9, sp, #72	; 0x48
   14714:	mov	r8, #0
   14718:	add	r0, pc, r0
   1471c:	str	r0, [sp, #12]
   14720:	ldr	r3, [fp, #4]
   14724:	ldr	r2, [fp, #8]
   14728:	cmp	r3, r2
   1472c:	bcs	14818 <close_stdout@@Base+0x2604>
   14730:	add	r2, r3, #1
   14734:	str	r2, [fp, #4]
   14738:	ldrb	r0, [r3]
   1473c:	cmp	r0, #32
   14740:	beq	14720 <close_stdout@@Base+0x250c>
   14744:	sub	r3, r0, #9
   14748:	cmp	r3, #1
   1474c:	bls	14720 <close_stdout@@Base+0x250c>
   14750:	cmp	r0, #35	; 0x23
   14754:	beq	1482c <close_stdout@@Base+0x2618>
   14758:	mov	r1, fp
   1475c:	bl	114c0 <ungetc@plt>
   14760:	mov	r0, fp
   14764:	ldr	r1, [sp, #12]
   14768:	mov	r2, sl
   1476c:	mov	r3, r9
   14770:	bl	114f0 <fscanf@plt>
   14774:	cmp	r0, #1
   14778:	ble	1485c <close_stdout@@Base+0x2648>
   1477c:	mov	r0, sl
   14780:	bl	114b4 <strlen@plt>
   14784:	str	r0, [sp, #8]
   14788:	mov	r0, r9
   1478c:	bl	114b4 <strlen@plt>
   14790:	cmp	r8, #0
   14794:	mov	r2, r0
   14798:	bne	148c0 <close_stdout@@Base+0x26ac>
   1479c:	ldr	r3, [sp, #8]
   147a0:	str	r2, [sp]
   147a4:	add	r8, r0, r3
   147a8:	add	r0, r8, #3
   147ac:	add	r8, r8, #2
   147b0:	bl	11448 <malloc@plt>
   147b4:	ldr	r2, [sp]
   147b8:	mov	r3, r0
   147bc:	cmp	r3, #0
   147c0:	beq	14924 <close_stdout@@Base+0x2710>
   147c4:	ldr	r0, [sp, #8]
   147c8:	movw	r1, #65534	; 0xfffe
   147cc:	movt	r1, #65535	; 0xffff
   147d0:	rsb	r2, r2, r8
   147d4:	rsb	r1, r0, r1
   147d8:	stm	sp, {r2, r3}
   147dc:	add	r0, r1, r2
   147e0:	mov	r1, sl
   147e4:	add	r0, r3, r0
   147e8:	mov	r4, r3
   147ec:	bl	113dc <strcpy@plt>
   147f0:	ldr	r2, [sp]
   147f4:	ldr	r3, [sp, #4]
   147f8:	mov	r1, r9
   147fc:	sub	r0, r2, #1
   14800:	add	r0, r3, r0
   14804:	bl	113dc <strcpy@plt>
   14808:	ldr	r3, [fp, #4]
   1480c:	ldr	r2, [fp, #8]
   14810:	cmp	r3, r2
   14814:	bcc	14730 <close_stdout@@Base+0x251c>
   14818:	mov	r0, fp
   1481c:	bl	11538 <__uflow@plt>
   14820:	cmn	r0, #1
   14824:	beq	1485c <close_stdout@@Base+0x2648>
   14828:	b	1473c <close_stdout@@Base+0x2528>
   1482c:	ldr	r3, [fp, #4]
   14830:	ldr	r2, [fp, #8]
   14834:	cmp	r3, r2
   14838:	bcs	14940 <close_stdout@@Base+0x272c>
   1483c:	add	r2, r3, #1
   14840:	str	r2, [fp, #4]
   14844:	ldrb	r0, [r3]
   14848:	cmp	r0, #10
   1484c:	cmnne	r0, #1
   14850:	bne	1482c <close_stdout@@Base+0x2618>
   14854:	cmn	r0, #1
   14858:	bne	14720 <close_stdout@@Base+0x250c>
   1485c:	mov	r0, fp
   14860:	bl	1498c <close_stdout@@Base+0x2778>
   14864:	cmp	r8, #0
   14868:	beq	148b4 <close_stdout@@Base+0x26a0>
   1486c:	mov	r3, #0
   14870:	strb	r3, [r4, r8]
   14874:	mov	r0, r7
   14878:	bl	11304 <free@plt>
   1487c:	ldr	r3, [pc, #236]	; 14970 <close_stdout@@Base+0x275c>
   14880:	add	r3, pc, r3
   14884:	str	r4, [r3]
   14888:	b	145ac <close_stdout@@Base+0x2398>
   1488c:	ldr	r8, [pc, #224]	; 14974 <close_stdout@@Base+0x2760>
   14890:	mov	r3, #7
   14894:	mov	sl, #8
   14898:	add	r8, pc, r8
   1489c:	ldrb	r3, [r8, r3]
   148a0:	cmp	r3, #47	; 0x2f
   148a4:	movne	r9, #1
   148a8:	movne	fp, r9
   148ac:	bne	14690 <close_stdout@@Base+0x247c>
   148b0:	b	14688 <close_stdout@@Base+0x2474>
   148b4:	ldr	r4, [pc, #188]	; 14978 <close_stdout@@Base+0x2764>
   148b8:	add	r4, pc, r4
   148bc:	b	14874 <close_stdout@@Base+0x2660>
   148c0:	ldr	r0, [sp, #8]
   148c4:	str	r2, [sp]
   148c8:	add	r3, r0, r2
   148cc:	mov	r0, r4
   148d0:	add	r8, r3, r8
   148d4:	add	r1, r8, #3
   148d8:	add	r8, r8, #2
   148dc:	bl	11388 <realloc@plt>
   148e0:	ldr	r2, [sp]
   148e4:	mov	r3, r0
   148e8:	b	147bc <close_stdout@@Base+0x25a8>
   148ec:	ldr	r4, [pc, #136]	; 1497c <close_stdout@@Base+0x2768>
   148f0:	add	r4, pc, r4
   148f4:	b	1487c <close_stdout@@Base+0x2668>
   148f8:	ldr	r8, [pc, #128]	; 14980 <close_stdout@@Base+0x276c>
   148fc:	mov	r3, #7
   14900:	mov	sl, #8
   14904:	add	r8, pc, r8
   14908:	b	1489c <close_stdout@@Base+0x2688>
   1490c:	ldr	r4, [pc, #112]	; 14984 <close_stdout@@Base+0x2770>
   14910:	mov	r0, r8
   14914:	add	r4, pc, r4
   14918:	bl	115d4 <close@plt>
   1491c:	b	14874 <close_stdout@@Base+0x2660>
   14920:	bl	11370 <__stack_chk_fail@plt>
   14924:	mov	r0, r4
   14928:	ldr	r4, [pc, #88]	; 14988 <close_stdout@@Base+0x2774>
   1492c:	bl	11304 <free@plt>
   14930:	mov	r0, fp
   14934:	add	r4, pc, r4
   14938:	bl	1498c <close_stdout@@Base+0x2778>
   1493c:	b	14874 <close_stdout@@Base+0x2660>
   14940:	mov	r0, fp
   14944:	bl	11538 <__uflow@plt>
   14948:	b	14848 <close_stdout@@Base+0x2634>
   1494c:	andeq	r1, r1, r0, lsl #21
   14950:	andeq	r0, r0, r0, lsr #2
   14954:	andeq	r1, r1, ip, lsr sp
   14958:	strdeq	r1, [r0], -r4
   1495c:	andeq	r0, r0, ip, asr #22
   14960:	andeq	r1, r0, ip, asr #3
   14964:	andeq	r1, r0, r4, ror r1
   14968:	andeq	r0, r0, r4, lsr #22
   1496c:	andeq	r1, r0, r0, lsr r1
   14970:	andeq	r1, r1, ip, asr sl
   14974:	andeq	r0, r0, ip, ror pc
   14978:	andeq	r0, r0, r4, ror #17
   1497c:	andeq	r0, r0, ip, lsr #17
   14980:	andeq	r0, r0, r0, lsl pc
   14984:	andeq	r0, r0, r8, lsl #17
   14988:	andeq	r0, r0, r8, ror #16
   1498c:	push	{r4, r5, r6, lr}
   14990:	sub	sp, sp, #8
   14994:	mov	r4, r0
   14998:	bl	11508 <fileno@plt>
   1499c:	cmp	r0, #0
   149a0:	mov	r0, r4
   149a4:	blt	14a20 <close_stdout@@Base+0x280c>
   149a8:	bl	11460 <__freading@plt>
   149ac:	cmp	r0, #0
   149b0:	bne	149ec <close_stdout@@Base+0x27d8>
   149b4:	mov	r0, r4
   149b8:	bl	14a2c <close_stdout@@Base+0x2818>
   149bc:	cmp	r0, #0
   149c0:	beq	14a1c <close_stdout@@Base+0x2808>
   149c4:	bl	114cc <__errno_location@plt>
   149c8:	ldr	r6, [r0]
   149cc:	mov	r5, r0
   149d0:	mov	r0, r4
   149d4:	bl	11520 <fclose@plt>
   149d8:	cmp	r6, #0
   149dc:	mvnne	r0, #0
   149e0:	strne	r6, [r5]
   149e4:	add	sp, sp, #8
   149e8:	pop	{r4, r5, r6, pc}
   149ec:	mov	r0, r4
   149f0:	bl	11508 <fileno@plt>
   149f4:	mov	r1, #1
   149f8:	mov	r2, #0
   149fc:	mov	r3, #0
   14a00:	str	r1, [sp]
   14a04:	bl	113c4 <lseek64@plt>
   14a08:	mvn	r2, #0
   14a0c:	mvn	r3, #0
   14a10:	cmp	r1, r3
   14a14:	cmpeq	r0, r2
   14a18:	bne	149b4 <close_stdout@@Base+0x27a0>
   14a1c:	mov	r0, r4
   14a20:	add	sp, sp, #8
   14a24:	pop	{r4, r5, r6, lr}
   14a28:	b	11520 <fclose@plt>
   14a2c:	push	{r4, lr}
   14a30:	subs	r4, r0, #0
   14a34:	sub	sp, sp, #8
   14a38:	beq	14a48 <close_stdout@@Base+0x2834>
   14a3c:	bl	11460 <__freading@plt>
   14a40:	cmp	r0, #0
   14a44:	bne	14a58 <close_stdout@@Base+0x2844>
   14a48:	mov	r0, r4
   14a4c:	add	sp, sp, #8
   14a50:	pop	{r4, lr}
   14a54:	b	112f8 <fflush@plt>
   14a58:	ldr	r3, [r4]
   14a5c:	tst	r3, #256	; 0x100
   14a60:	beq	14a48 <close_stdout@@Base+0x2834>
   14a64:	mov	r3, #1
   14a68:	mov	r0, r4
   14a6c:	str	r3, [sp]
   14a70:	mov	r2, #0
   14a74:	mov	r3, #0
   14a78:	bl	14a8c <close_stdout@@Base+0x2878>
   14a7c:	mov	r0, r4
   14a80:	add	sp, sp, #8
   14a84:	pop	{r4, lr}
   14a88:	b	112f8 <fflush@plt>
   14a8c:	push	{r4, r5, r6, r7, lr}
   14a90:	sub	sp, sp, #20
   14a94:	ldmib	r0, {r1, ip}
   14a98:	mov	r6, r0
   14a9c:	ldr	r4, [sp, #40]	; 0x28
   14aa0:	cmp	ip, r1
   14aa4:	beq	14abc <close_stdout@@Base+0x28a8>
   14aa8:	str	r4, [sp, #40]	; 0x28
   14aac:	mov	r0, r6
   14ab0:	add	sp, sp, #20
   14ab4:	pop	{r4, r5, r6, r7, lr}
   14ab8:	b	1152c <fseeko64@plt>
   14abc:	ldr	ip, [r0, #20]
   14ac0:	ldr	r1, [r0, #16]
   14ac4:	cmp	ip, r1
   14ac8:	bne	14aa8 <close_stdout@@Base+0x2894>
   14acc:	ldr	r7, [r0, #36]	; 0x24
   14ad0:	cmp	r7, #0
   14ad4:	bne	14aa8 <close_stdout@@Base+0x2894>
   14ad8:	str	r2, [sp, #12]
   14adc:	mvn	r5, #0
   14ae0:	str	r3, [sp, #8]
   14ae4:	bl	11508 <fileno@plt>
   14ae8:	str	r4, [sp]
   14aec:	mvn	r4, #0
   14af0:	ldr	r2, [sp, #12]
   14af4:	ldr	r3, [sp, #8]
   14af8:	bl	113c4 <lseek64@plt>
   14afc:	mov	r2, r0
   14b00:	mov	r3, r1
   14b04:	cmp	r3, r5
   14b08:	cmpeq	r2, r4
   14b0c:	beq	14b2c <close_stdout@@Base+0x2918>
   14b10:	ldr	r1, [r6]
   14b14:	mov	r0, r7
   14b18:	strd	r2, [r6, #80]	; 0x50
   14b1c:	bic	r3, r1, #16
   14b20:	str	r3, [r6]
   14b24:	add	sp, sp, #20
   14b28:	pop	{r4, r5, r6, r7, pc}
   14b2c:	mvn	r0, #0
   14b30:	b	14b24 <close_stdout@@Base+0x2910>
   14b34:	subs	r2, r1, #1
   14b38:	bxeq	lr
   14b3c:	bcc	14d14 <close_stdout@@Base+0x2b00>
   14b40:	cmp	r0, r1
   14b44:	bls	14cf8 <close_stdout@@Base+0x2ae4>
   14b48:	tst	r1, r2
   14b4c:	beq	14d04 <close_stdout@@Base+0x2af0>
   14b50:	clz	r3, r0
   14b54:	clz	r2, r1
   14b58:	sub	r3, r2, r3
   14b5c:	rsbs	r3, r3, #31
   14b60:	addne	r3, r3, r3, lsl #1
   14b64:	mov	r2, #0
   14b68:	addne	pc, pc, r3, lsl #2
   14b6c:	nop	{0}
   14b70:	cmp	r0, r1, lsl #31
   14b74:	adc	r2, r2, r2
   14b78:	subcs	r0, r0, r1, lsl #31
   14b7c:	cmp	r0, r1, lsl #30
   14b80:	adc	r2, r2, r2
   14b84:	subcs	r0, r0, r1, lsl #30
   14b88:	cmp	r0, r1, lsl #29
   14b8c:	adc	r2, r2, r2
   14b90:	subcs	r0, r0, r1, lsl #29
   14b94:	cmp	r0, r1, lsl #28
   14b98:	adc	r2, r2, r2
   14b9c:	subcs	r0, r0, r1, lsl #28
   14ba0:	cmp	r0, r1, lsl #27
   14ba4:	adc	r2, r2, r2
   14ba8:	subcs	r0, r0, r1, lsl #27
   14bac:	cmp	r0, r1, lsl #26
   14bb0:	adc	r2, r2, r2
   14bb4:	subcs	r0, r0, r1, lsl #26
   14bb8:	cmp	r0, r1, lsl #25
   14bbc:	adc	r2, r2, r2
   14bc0:	subcs	r0, r0, r1, lsl #25
   14bc4:	cmp	r0, r1, lsl #24
   14bc8:	adc	r2, r2, r2
   14bcc:	subcs	r0, r0, r1, lsl #24
   14bd0:	cmp	r0, r1, lsl #23
   14bd4:	adc	r2, r2, r2
   14bd8:	subcs	r0, r0, r1, lsl #23
   14bdc:	cmp	r0, r1, lsl #22
   14be0:	adc	r2, r2, r2
   14be4:	subcs	r0, r0, r1, lsl #22
   14be8:	cmp	r0, r1, lsl #21
   14bec:	adc	r2, r2, r2
   14bf0:	subcs	r0, r0, r1, lsl #21
   14bf4:	cmp	r0, r1, lsl #20
   14bf8:	adc	r2, r2, r2
   14bfc:	subcs	r0, r0, r1, lsl #20
   14c00:	cmp	r0, r1, lsl #19
   14c04:	adc	r2, r2, r2
   14c08:	subcs	r0, r0, r1, lsl #19
   14c0c:	cmp	r0, r1, lsl #18
   14c10:	adc	r2, r2, r2
   14c14:	subcs	r0, r0, r1, lsl #18
   14c18:	cmp	r0, r1, lsl #17
   14c1c:	adc	r2, r2, r2
   14c20:	subcs	r0, r0, r1, lsl #17
   14c24:	cmp	r0, r1, lsl #16
   14c28:	adc	r2, r2, r2
   14c2c:	subcs	r0, r0, r1, lsl #16
   14c30:	cmp	r0, r1, lsl #15
   14c34:	adc	r2, r2, r2
   14c38:	subcs	r0, r0, r1, lsl #15
   14c3c:	cmp	r0, r1, lsl #14
   14c40:	adc	r2, r2, r2
   14c44:	subcs	r0, r0, r1, lsl #14
   14c48:	cmp	r0, r1, lsl #13
   14c4c:	adc	r2, r2, r2
   14c50:	subcs	r0, r0, r1, lsl #13
   14c54:	cmp	r0, r1, lsl #12
   14c58:	adc	r2, r2, r2
   14c5c:	subcs	r0, r0, r1, lsl #12
   14c60:	cmp	r0, r1, lsl #11
   14c64:	adc	r2, r2, r2
   14c68:	subcs	r0, r0, r1, lsl #11
   14c6c:	cmp	r0, r1, lsl #10
   14c70:	adc	r2, r2, r2
   14c74:	subcs	r0, r0, r1, lsl #10
   14c78:	cmp	r0, r1, lsl #9
   14c7c:	adc	r2, r2, r2
   14c80:	subcs	r0, r0, r1, lsl #9
   14c84:	cmp	r0, r1, lsl #8
   14c88:	adc	r2, r2, r2
   14c8c:	subcs	r0, r0, r1, lsl #8
   14c90:	cmp	r0, r1, lsl #7
   14c94:	adc	r2, r2, r2
   14c98:	subcs	r0, r0, r1, lsl #7
   14c9c:	cmp	r0, r1, lsl #6
   14ca0:	adc	r2, r2, r2
   14ca4:	subcs	r0, r0, r1, lsl #6
   14ca8:	cmp	r0, r1, lsl #5
   14cac:	adc	r2, r2, r2
   14cb0:	subcs	r0, r0, r1, lsl #5
   14cb4:	cmp	r0, r1, lsl #4
   14cb8:	adc	r2, r2, r2
   14cbc:	subcs	r0, r0, r1, lsl #4
   14cc0:	cmp	r0, r1, lsl #3
   14cc4:	adc	r2, r2, r2
   14cc8:	subcs	r0, r0, r1, lsl #3
   14ccc:	cmp	r0, r1, lsl #2
   14cd0:	adc	r2, r2, r2
   14cd4:	subcs	r0, r0, r1, lsl #2
   14cd8:	cmp	r0, r1, lsl #1
   14cdc:	adc	r2, r2, r2
   14ce0:	subcs	r0, r0, r1, lsl #1
   14ce4:	cmp	r0, r1
   14ce8:	adc	r2, r2, r2
   14cec:	subcs	r0, r0, r1
   14cf0:	mov	r0, r2
   14cf4:	bx	lr
   14cf8:	moveq	r0, #1
   14cfc:	movne	r0, #0
   14d00:	bx	lr
   14d04:	clz	r2, r1
   14d08:	rsb	r2, r2, #31
   14d0c:	lsr	r0, r0, r2
   14d10:	bx	lr
   14d14:	cmp	r0, #0
   14d18:	mvnne	r0, #0
   14d1c:	b	14d40 <close_stdout@@Base+0x2b2c>
   14d20:	cmp	r1, #0
   14d24:	beq	14d14 <close_stdout@@Base+0x2b00>
   14d28:	push	{r0, r1, lr}
   14d2c:	bl	14b34 <close_stdout@@Base+0x2920>
   14d30:	pop	{r1, r2, lr}
   14d34:	mul	r3, r2, r0
   14d38:	sub	r1, r1, r3
   14d3c:	bx	lr
   14d40:	push	{r1, lr}
   14d44:	mov	r0, #8
   14d48:	bl	112d4 <raise@plt>
   14d4c:	pop	{r1, pc}
   14d50:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14d54:	mov	r7, r0
   14d58:	ldr	r6, [pc, #76]	; 14dac <close_stdout@@Base+0x2b98>
   14d5c:	mov	r8, r1
   14d60:	ldr	r5, [pc, #72]	; 14db0 <close_stdout@@Base+0x2b9c>
   14d64:	mov	r9, r2
   14d68:	add	r6, pc, r6
   14d6c:	bl	11290 <_init@@Base>
   14d70:	add	r5, pc, r5
   14d74:	rsb	r6, r5, r6
   14d78:	asrs	r6, r6, #2
   14d7c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   14d80:	sub	r5, r5, #4
   14d84:	mov	r4, #0
   14d88:	add	r4, r4, #1
   14d8c:	ldr	r3, [r5, #4]!
   14d90:	mov	r0, r7
   14d94:	mov	r1, r8
   14d98:	mov	r2, r9
   14d9c:	blx	r3
   14da0:	cmp	r4, r6
   14da4:	bne	14d88 <close_stdout@@Base+0x2b74>
   14da8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14dac:	andeq	r1, r1, r4, ror #1
   14db0:	ldrdeq	r1, [r1], -r8
   14db4:	bx	lr
   14db8:	ldr	r3, [pc, #28]	; 14ddc <close_stdout@@Base+0x2bc8>
   14dbc:	mov	r1, #0
   14dc0:	ldr	r2, [pc, #24]	; 14de0 <close_stdout@@Base+0x2bcc>
   14dc4:	add	r3, pc, r3
   14dc8:	ldr	r3, [r3, r2]
   14dcc:	cmp	r3, #0
   14dd0:	ldrne	r2, [r3]
   14dd4:	moveq	r2, r3
   14dd8:	b	114d8 <__cxa_atexit@plt>
   14ddc:	andeq	r1, r1, r4, lsr r2
   14de0:	andeq	r0, r0, r8, lsr r1

Disassembly of section .fini:

00014de4 <_fini@@Base>:
   14de4:	push	{r3, lr}
   14de8:	pop	{r3, pc}
