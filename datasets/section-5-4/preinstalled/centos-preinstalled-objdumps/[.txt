
centos-preinstalled/[:     file format elf32-littlearm


Disassembly of section .init:

00010f14 <.init>:
   10f14:	push	{r3, lr}
   10f18:	bl	1142c <__lxstat64@plt+0x240>
   10f1c:	pop	{r3, pc}

Disassembly of section .plt:

00010f20 <fdopen@plt-0x14>:
   10f20:	push	{lr}		; (str lr, [sp, #-4]!)
   10f24:	ldr	lr, [pc, #4]	; 10f30 <fdopen@plt-0x4>
   10f28:	add	lr, pc, lr
   10f2c:	ldr	pc, [lr, #8]!
   10f30:	ldrdeq	r7, [r1], -r0

00010f34 <fdopen@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #94208	; 0x17000
   10f3c:	ldr	pc, [ip, #208]!	; 0xd0

00010f40 <calloc@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #94208	; 0x17000
   10f48:	ldr	pc, [ip, #200]!	; 0xc8

00010f4c <fputs_unlocked@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #94208	; 0x17000
   10f54:	ldr	pc, [ip, #192]!	; 0xc0

00010f58 <raise@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #94208	; 0x17000
   10f60:	ldr	pc, [ip, #184]!	; 0xb8

00010f64 <strcmp@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #94208	; 0x17000
   10f6c:	ldr	pc, [ip, #176]!	; 0xb0

00010f70 <strtol@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #94208	; 0x17000
   10f78:	ldr	pc, [ip, #168]!	; 0xa8

00010f7c <fflush@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #94208	; 0x17000
   10f84:	ldr	pc, [ip, #160]!	; 0xa0

00010f88 <free@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #94208	; 0x17000
   10f90:	ldr	pc, [ip, #152]!	; 0x98

00010f94 <_exit@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #94208	; 0x17000
   10f9c:	ldr	pc, [ip, #144]!	; 0x90

00010fa0 <memcpy@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #94208	; 0x17000
   10fa8:	ldr	pc, [ip, #136]!	; 0x88

00010fac <mbsinit@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #94208	; 0x17000
   10fb4:	ldr	pc, [ip, #128]!	; 0x80

00010fb8 <memcmp@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #94208	; 0x17000
   10fc0:	ldr	pc, [ip, #120]!	; 0x78

00010fc4 <dcgettext@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #94208	; 0x17000
   10fcc:	ldr	pc, [ip, #112]!	; 0x70

00010fd0 <__stack_chk_fail@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #94208	; 0x17000
   10fd8:	ldr	pc, [ip, #104]!	; 0x68

00010fdc <realloc@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #94208	; 0x17000
   10fe4:	ldr	pc, [ip, #96]!	; 0x60

00010fe8 <textdomain@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #94208	; 0x17000
   10ff0:	ldr	pc, [ip, #88]!	; 0x58

00010ff4 <geteuid@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #94208	; 0x17000
   10ffc:	ldr	pc, [ip, #80]!	; 0x50

00011000 <fflush_unlocked@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #94208	; 0x17000
   11008:	ldr	pc, [ip, #72]!	; 0x48

0001100c <iswprint@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #94208	; 0x17000
   11014:	ldr	pc, [ip, #64]!	; 0x40

00011018 <getegid@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #94208	; 0x17000
   11020:	ldr	pc, [ip, #56]!	; 0x38

00011024 <fwrite@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #94208	; 0x17000
   1102c:	ldr	pc, [ip, #48]!	; 0x30

00011030 <lseek64@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #94208	; 0x17000
   11038:	ldr	pc, [ip, #40]!	; 0x28

0001103c <__ctype_get_mb_cur_max@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #94208	; 0x17000
   11044:	ldr	pc, [ip, #32]!

00011048 <strcpy@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #94208	; 0x17000
   11050:	ldr	pc, [ip, #24]!

00011054 <__fpending@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #94208	; 0x17000
   1105c:	ldr	pc, [ip, #16]!

00011060 <mbrtowc@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #94208	; 0x17000
   11068:	ldr	pc, [ip, #8]!

0001106c <error@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #94208	; 0x17000
   11074:	ldr	pc, [ip, #0]!

00011078 <open64@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #90112	; 0x16000
   11080:	ldr	pc, [ip, #4088]!	; 0xff8

00011084 <getenv@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #90112	; 0x16000
   1108c:	ldr	pc, [ip, #4080]!	; 0xff0

00011090 <malloc@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #90112	; 0x16000
   11098:	ldr	pc, [ip, #4072]!	; 0xfe8

0001109c <__libc_start_main@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #90112	; 0x16000
   110a4:	ldr	pc, [ip, #4064]!	; 0xfe0

000110a8 <__freading@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #90112	; 0x16000
   110b0:	ldr	pc, [ip, #4056]!	; 0xfd8

000110b4 <__gmon_start__@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #90112	; 0x16000
   110bc:	ldr	pc, [ip, #4048]!	; 0xfd0

000110c0 <__ctype_b_loc@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #90112	; 0x16000
   110c8:	ldr	pc, [ip, #4040]!	; 0xfc8

000110cc <exit@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #90112	; 0x16000
   110d4:	ldr	pc, [ip, #4032]!	; 0xfc0

000110d8 <strlen@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #90112	; 0x16000
   110e0:	ldr	pc, [ip, #4024]!	; 0xfb8

000110e4 <ungetc@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #90112	; 0x16000
   110ec:	ldr	pc, [ip, #4016]!	; 0xfb0

000110f0 <__errno_location@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #90112	; 0x16000
   110f8:	ldr	pc, [ip, #4008]!	; 0xfa8

000110fc <__cxa_atexit@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #90112	; 0x16000
   11104:	ldr	pc, [ip, #4000]!	; 0xfa0

00011108 <memset@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #90112	; 0x16000
   11110:	ldr	pc, [ip, #3992]!	; 0xf98

00011114 <fscanf@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #90112	; 0x16000
   1111c:	ldr	pc, [ip, #3984]!	; 0xf90

00011120 <__printf_chk@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #90112	; 0x16000
   11128:	ldr	pc, [ip, #3976]!	; 0xf88

0001112c <fileno@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #90112	; 0x16000
   11134:	ldr	pc, [ip, #3968]!	; 0xf80

00011138 <__fprintf_chk@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #90112	; 0x16000
   11140:	ldr	pc, [ip, #3960]!	; 0xf78

00011144 <fclose@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #90112	; 0x16000
   1114c:	ldr	pc, [ip, #3952]!	; 0xf70

00011150 <fseeko64@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #90112	; 0x16000
   11158:	ldr	pc, [ip, #3944]!	; 0xf68

0001115c <__uflow@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #90112	; 0x16000
   11164:	ldr	pc, [ip, #3936]!	; 0xf60

00011168 <__overflow@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #90112	; 0x16000
   11170:	ldr	pc, [ip, #3928]!	; 0xf58

00011174 <setlocale@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #90112	; 0x16000
   1117c:	ldr	pc, [ip, #3920]!	; 0xf50

00011180 <strrchr@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #90112	; 0x16000
   11188:	ldr	pc, [ip, #3912]!	; 0xf48

0001118c <nl_langinfo@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #90112	; 0x16000
   11194:	ldr	pc, [ip, #3904]!	; 0xf40

00011198 <euidaccess@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #90112	; 0x16000
   111a0:	ldr	pc, [ip, #3896]!	; 0xf38

000111a4 <bindtextdomain@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #90112	; 0x16000
   111ac:	ldr	pc, [ip, #3888]!	; 0xf30

000111b0 <__xstat64@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #90112	; 0x16000
   111b8:	ldr	pc, [ip, #3880]!	; 0xf28

000111bc <isatty@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #90112	; 0x16000
   111c4:	ldr	pc, [ip, #3872]!	; 0xf20

000111c8 <strncmp@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #90112	; 0x16000
   111d0:	ldr	pc, [ip, #3864]!	; 0xf18

000111d4 <abort@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #90112	; 0x16000
   111dc:	ldr	pc, [ip, #3856]!	; 0xf10

000111e0 <close@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #90112	; 0x16000
   111e8:	ldr	pc, [ip, #3848]!	; 0xf08

000111ec <__lxstat64@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #90112	; 0x16000
   111f4:	ldr	pc, [ip, #3840]!	; 0xf00

Disassembly of section .text:

000111f8 <close_stdout@@Base-0x1f34>:
   111f8:	push	{r4, r5, r6, r7, lr}
   111fc:	mov	r4, r0
   11200:	sub	sp, sp, #20
   11204:	ldr	r0, [r1]
   11208:	mov	r6, r1
   1120c:	bl	1334c <close_stdout@@Base+0x220>
   11210:	ldr	r1, [pc, #400]	; 113a8 <__lxstat64@plt+0x1bc>
   11214:	mov	r0, #6
   11218:	ldr	r5, [pc, #396]	; 113ac <__lxstat64@plt+0x1c0>
   1121c:	add	r1, pc, r1
   11220:	bl	11174 <setlocale@plt>
   11224:	add	r5, pc, r5
   11228:	ldr	r1, [pc, #384]	; 113b0 <__lxstat64@plt+0x1c4>
   1122c:	mov	r0, r5
   11230:	add	r1, pc, r1
   11234:	bl	111a4 <bindtextdomain@plt>
   11238:	mov	r0, r5
   1123c:	ldr	r5, [pc, #368]	; 113b4 <__lxstat64@plt+0x1c8>
   11240:	bl	10fe8 <textdomain@plt>
   11244:	ldr	r2, [pc, #364]	; 113b8 <__lxstat64@plt+0x1cc>
   11248:	mov	r1, #2
   1124c:	add	r5, pc, r5
   11250:	ldr	r3, [pc, #356]	; 113bc <__lxstat64@plt+0x1d0>
   11254:	ldr	r2, [r5, r2]
   11258:	str	r1, [r2]
   1125c:	ldr	r0, [r5, r3]
   11260:	bl	168d4 <close_stdout@@Base+0x37a8>
   11264:	ldr	r3, [pc, #340]	; 113c0 <__lxstat64@plt+0x1d4>
   11268:	cmp	r4, #2
   1126c:	add	r3, pc, r3
   11270:	str	r6, [r3]
   11274:	beq	1131c <__lxstat64@plt+0x130>
   11278:	cmp	r4, #1
   1127c:	ble	11300 <__lxstat64@plt+0x114>
   11280:	sub	r3, r4, #-1073741823	; 0xc0000001
   11284:	ldr	r3, [r6, r3, lsl #2]
   11288:	ldrb	r2, [r3]
   1128c:	cmp	r2, #93	; 0x5d
   11290:	bne	11300 <__lxstat64@plt+0x114>
   11294:	ldrb	r6, [r3, #1]
   11298:	cmp	r6, #0
   1129c:	bne	11300 <__lxstat64@plt+0x114>
   112a0:	ldr	r5, [pc, #284]	; 113c4 <__lxstat64@plt+0x1d8>
   112a4:	sub	r0, r4, #1
   112a8:	cmp	r0, #1
   112ac:	mov	r2, #1
   112b0:	add	r5, pc, r5
   112b4:	stmib	r5, {r0, r2}
   112b8:	beq	113a0 <__lxstat64@plt+0x1b4>
   112bc:	sub	r0, r4, #2
   112c0:	bl	1289c <__lxstat64@plt+0x16b0>
   112c4:	ldmib	r5, {r3, r4}
   112c8:	cmp	r4, r3
   112cc:	beq	11398 <__lxstat64@plt+0x1ac>
   112d0:	ldr	r1, [pc, #240]	; 113c8 <__lxstat64@plt+0x1dc>
   112d4:	mov	r0, r6
   112d8:	mov	r2, #5
   112dc:	add	r1, pc, r1
   112e0:	bl	10fc4 <dcgettext@plt>
   112e4:	ldr	r3, [r5]
   112e8:	mov	r6, r0
   112ec:	ldr	r0, [r3, r4, lsl #2]
   112f0:	bl	14b9c <close_stdout@@Base+0x1a70>
   112f4:	mov	r1, r0
   112f8:	mov	r0, r6
   112fc:	bl	116ec <__lxstat64@plt+0x500>
   11300:	ldr	r1, [pc, #196]	; 113cc <__lxstat64@plt+0x1e0>
   11304:	mov	r0, #0
   11308:	mov	r2, #5
   1130c:	add	r1, pc, r1
   11310:	bl	10fc4 <dcgettext@plt>
   11314:	mov	r1, #0
   11318:	bl	116ec <__lxstat64@plt+0x500>
   1131c:	ldr	r7, [r6, #4]
   11320:	ldr	r1, [pc, #168]	; 113d0 <__lxstat64@plt+0x1e4>
   11324:	mov	r0, r7
   11328:	add	r1, pc, r1
   1132c:	bl	10f64 <strcmp@plt>
   11330:	cmp	r0, #0
   11334:	beq	113a4 <__lxstat64@plt+0x1b8>
   11338:	ldr	r1, [pc, #148]	; 113d4 <__lxstat64@plt+0x1e8>
   1133c:	mov	r0, r7
   11340:	add	r1, pc, r1
   11344:	bl	10f64 <strcmp@plt>
   11348:	subs	r7, r0, #0
   1134c:	bne	11280 <__lxstat64@plt+0x94>
   11350:	ldr	r2, [pc, #128]	; 113d8 <__lxstat64@plt+0x1ec>
   11354:	ldr	r3, [pc, #128]	; 113dc <__lxstat64@plt+0x1f0>
   11358:	ldr	r1, [pc, #128]	; 113e0 <__lxstat64@plt+0x1f4>
   1135c:	ldr	r0, [r5, r2]
   11360:	ldr	r3, [r5, r3]
   11364:	add	r1, pc, r1
   11368:	ldr	r2, [pc, #116]	; 113e4 <__lxstat64@plt+0x1f8>
   1136c:	ldr	r0, [r0]
   11370:	add	r2, pc, r2
   11374:	ldr	r3, [r3]
   11378:	stm	sp, {r1, r2, r7}
   1137c:	ldr	r1, [pc, #100]	; 113e8 <__lxstat64@plt+0x1fc>
   11380:	ldr	r2, [pc, #100]	; 113ec <__lxstat64@plt+0x200>
   11384:	add	r1, pc, r1
   11388:	add	r2, pc, r2
   1138c:	bl	1531c <close_stdout@@Base+0x21f0>
   11390:	mov	r0, r7
   11394:	bl	110cc <exit@plt>
   11398:	rsbs	r0, r0, #1
   1139c:	movcc	r0, #0
   113a0:	bl	110cc <exit@plt>
   113a4:	bl	12d84 <__lxstat64@plt+0x1b98>
   113a8:	muleq	r0, r8, r8
   113ac:	andeq	r6, r0, r0, lsl #8
   113b0:			; <UNDEFINED> instruction: 0x000064b8
   113b4:	andeq	r6, r1, ip, lsr #27
   113b8:	andeq	r0, r0, r8, lsl r1
   113bc:	andeq	r0, r0, r8, lsl #2
   113c0:	andeq	r6, r1, r8, lsl #30
   113c4:	andeq	r6, r1, r4, asr #29
   113c8:	andeq	r6, r0, r8, ror #8
   113cc:	andeq	r6, r0, ip, lsr #8
   113d0:	ldrdeq	r6, [r0], -r4
   113d4:	andeq	r6, r0, r4, asr #7
   113d8:	andeq	r0, r0, r4, lsl r1
   113dc:	andeq	r0, r0, r0, lsl #2
   113e0:	andeq	r6, r0, ip, lsr #7
   113e4:			; <UNDEFINED> instruction: 0x000063b4
   113e8:	andeq	r6, r0, r0, lsl #5
   113ec:	muleq	r0, r8, r2
   113f0:	mov	fp, #0
   113f4:	mov	lr, #0
   113f8:	pop	{r1}		; (ldr r1, [sp], #4)
   113fc:	mov	r2, sp
   11400:	push	{r2}		; (str r2, [sp, #-4]!)
   11404:	push	{r0}		; (str r0, [sp, #-4]!)
   11408:	ldr	ip, [pc, #16]	; 11420 <__lxstat64@plt+0x234>
   1140c:	push	{ip}		; (str ip, [sp, #-4]!)
   11410:	ldr	r0, [pc, #12]	; 11424 <__lxstat64@plt+0x238>
   11414:	ldr	r3, [pc, #12]	; 11428 <__lxstat64@plt+0x23c>
   11418:	bl	1109c <__libc_start_main@plt>
   1141c:	bl	111d4 <abort@plt>
   11420:	ldrdeq	r6, [r1], -r0
   11424:	strdeq	r1, [r1], -r8
   11428:	andeq	r6, r1, ip, ror #16
   1142c:	ldr	r3, [pc, #20]	; 11448 <__lxstat64@plt+0x25c>
   11430:	ldr	r2, [pc, #20]	; 1144c <__lxstat64@plt+0x260>
   11434:	add	r3, pc, r3
   11438:	ldr	r2, [r3, r2]
   1143c:	cmp	r2, #0
   11440:	bxeq	lr
   11444:	b	110b4 <__gmon_start__@plt>
   11448:	andeq	r6, r1, r4, asr #23
   1144c:	andeq	r0, r0, ip, lsl #2
   11450:	push	{r3, lr}
   11454:	movw	r0, #33144	; 0x8178
   11458:	ldr	r3, [pc, #36]	; 11484 <__lxstat64@plt+0x298>
   1145c:	movt	r0, #2
   11460:	rsb	r3, r0, r3
   11464:	cmp	r3, #6
   11468:	popls	{r3, pc}
   1146c:	movw	r3, #0
   11470:	movt	r3, #0
   11474:	cmp	r3, #0
   11478:	popeq	{r3, pc}
   1147c:	blx	r3
   11480:	pop	{r3, pc}
   11484:	andeq	r8, r2, fp, ror r1
   11488:	push	{r3, lr}
   1148c:	movw	r0, #33144	; 0x8178
   11490:	movw	r3, #33144	; 0x8178
   11494:	movt	r0, #2
   11498:	movt	r3, #2
   1149c:	rsb	r3, r0, r3
   114a0:	asr	r3, r3, #2
   114a4:	add	r3, r3, r3, lsr #31
   114a8:	asrs	r1, r3, #1
   114ac:	popeq	{r3, pc}
   114b0:	movw	r2, #0
   114b4:	movt	r2, #0
   114b8:	cmp	r2, #0
   114bc:	popeq	{r3, pc}
   114c0:	blx	r2
   114c4:	pop	{r3, pc}
   114c8:	push	{r4, lr}
   114cc:	movw	r4, #33144	; 0x8178
   114d0:	movt	r4, #2
   114d4:	ldrb	r3, [r4]
   114d8:	cmp	r3, #0
   114dc:	popne	{r4, pc}
   114e0:	bl	11450 <__lxstat64@plt+0x264>
   114e4:	mov	r3, #1
   114e8:	strb	r3, [r4]
   114ec:	pop	{r4, pc}
   114f0:	movw	r0, #32480	; 0x7ee0
   114f4:	movt	r0, #2
   114f8:	push	{r3, lr}
   114fc:	ldr	r3, [r0]
   11500:	cmp	r3, #0
   11504:	beq	1151c <__lxstat64@plt+0x330>
   11508:	movw	r3, #0
   1150c:	movt	r3, #0
   11510:	cmp	r3, #0
   11514:	beq	1151c <__lxstat64@plt+0x330>
   11518:	blx	r3
   1151c:	pop	{r3, lr}
   11520:	b	11488 <__lxstat64@plt+0x29c>
   11524:	ldrb	r3, [r0]
   11528:	subs	r2, r3, #61	; 0x3d
   1152c:	bne	11544 <__lxstat64@plt+0x358>
   11530:	ldrb	r1, [r0, #1]
   11534:	cmp	r1, #0
   11538:	bne	11544 <__lxstat64@plt+0x358>
   1153c:	mov	r0, #1
   11540:	bx	lr
   11544:	cmp	r3, #33	; 0x21
   11548:	bne	11564 <__lxstat64@plt+0x378>
   1154c:	ldrb	r1, [r0, #1]
   11550:	cmp	r1, #61	; 0x3d
   11554:	bne	11564 <__lxstat64@plt+0x378>
   11558:	ldrb	r1, [r0, #2]
   1155c:	cmp	r1, #0
   11560:	beq	1153c <__lxstat64@plt+0x350>
   11564:	cmp	r2, #0
   11568:	bne	11584 <__lxstat64@plt+0x398>
   1156c:	ldrb	r2, [r0, #1]
   11570:	cmp	r2, #61	; 0x3d
   11574:	bne	11584 <__lxstat64@plt+0x398>
   11578:	ldrb	r1, [r0, #2]
   1157c:	cmp	r1, #0
   11580:	beq	1153c <__lxstat64@plt+0x350>
   11584:	subs	r3, r3, #45	; 0x2d
   11588:	bne	115c0 <__lxstat64@plt+0x3d4>
   1158c:	ldrb	r3, [r0, #1]
   11590:	cmp	r3, #110	; 0x6e
   11594:	beq	115cc <__lxstat64@plt+0x3e0>
   11598:	cmp	r3, #111	; 0x6f
   1159c:	bne	11600 <__lxstat64@plt+0x414>
   115a0:	ldrb	r1, [r0, #2]
   115a4:	cmp	r1, #116	; 0x74
   115a8:	beq	115d8 <__lxstat64@plt+0x3ec>
   115ac:	subs	r3, r3, #103	; 0x67
   115b0:	bne	115c0 <__lxstat64@plt+0x3d4>
   115b4:	ldrb	r1, [r0, #2]
   115b8:	subs	r3, r1, #101	; 0x65
   115bc:	ldrbeq	r3, [r0, #3]
   115c0:	rsbs	r0, r3, #1
   115c4:	movcc	r0, #0
   115c8:	bx	lr
   115cc:	ldrb	r1, [r0, #2]
   115d0:	cmp	r1, #116	; 0x74
   115d4:	bne	115f4 <__lxstat64@plt+0x408>
   115d8:	ldrb	r2, [r0, #3]
   115dc:	cmp	r2, #0
   115e0:	bne	115ac <__lxstat64@plt+0x3c0>
   115e4:	b	1153c <__lxstat64@plt+0x350>
   115e8:	cmp	r3, #110	; 0x6e
   115ec:	bne	11620 <__lxstat64@plt+0x434>
   115f0:	ldrb	r1, [r0, #2]
   115f4:	cmp	r1, #101	; 0x65
   115f8:	bne	115ac <__lxstat64@plt+0x3c0>
   115fc:	b	115d8 <__lxstat64@plt+0x3ec>
   11600:	cmp	r3, #101	; 0x65
   11604:	bne	115e8 <__lxstat64@plt+0x3fc>
   11608:	ldrb	r1, [r0, #2]
   1160c:	cmp	r1, #102	; 0x66
   11610:	beq	115d8 <__lxstat64@plt+0x3ec>
   11614:	cmp	r1, #113	; 0x71
   11618:	beq	115d8 <__lxstat64@plt+0x3ec>
   1161c:	b	115ac <__lxstat64@plt+0x3c0>
   11620:	cmp	r3, #108	; 0x6c
   11624:	bne	11650 <__lxstat64@plt+0x464>
   11628:	ldrb	r3, [r0, #2]
   1162c:	cmp	r3, #116	; 0x74
   11630:	beq	1163c <__lxstat64@plt+0x450>
   11634:	cmp	r3, #101	; 0x65
   11638:	bne	11648 <__lxstat64@plt+0x45c>
   1163c:	ldrb	r3, [r0, #3]
   11640:	cmp	r3, #0
   11644:	beq	1153c <__lxstat64@plt+0x350>
   11648:	mov	r3, #5
   1164c:	b	115c0 <__lxstat64@plt+0x3d4>
   11650:	cmp	r3, #103	; 0x67
   11654:	bne	115ac <__lxstat64@plt+0x3c0>
   11658:	ldrb	r1, [r0, #2]
   1165c:	cmp	r1, #116	; 0x74
   11660:	bne	115b8 <__lxstat64@plt+0x3cc>
   11664:	ldrb	r3, [r0, #3]
   11668:	cmp	r3, #0
   1166c:	bne	115b8 <__lxstat64@plt+0x3cc>
   11670:	b	1153c <__lxstat64@plt+0x350>
   11674:	ldr	r3, [pc, #104]	; 116e4 <__lxstat64@plt+0x4f8>
   11678:	mov	r2, r0
   1167c:	ldr	ip, [pc, #100]	; 116e8 <__lxstat64@plt+0x4fc>
   11680:	mov	r0, #3
   11684:	add	r3, pc, r3
   11688:	push	{r4, r5, lr}
   1168c:	sub	sp, sp, #116	; 0x74
   11690:	ldr	r4, [r3, ip]
   11694:	mov	r5, r1
   11698:	mov	r1, r2
   1169c:	mov	r2, sp
   116a0:	ldr	r3, [r4]
   116a4:	str	r3, [sp, #108]	; 0x6c
   116a8:	bl	111b0 <__xstat64@plt>
   116ac:	rsbs	r0, r0, #1
   116b0:	movcc	r0, #0
   116b4:	cmp	r0, #0
   116b8:	ldrne	r2, [sp, #84]	; 0x54
   116bc:	ldrne	r3, [sp, #80]	; 0x50
   116c0:	strne	r2, [r5, #4]
   116c4:	strne	r3, [r5]
   116c8:	ldr	r2, [sp, #108]	; 0x6c
   116cc:	ldr	r3, [r4]
   116d0:	cmp	r2, r3
   116d4:	bne	116e0 <__lxstat64@plt+0x4f4>
   116d8:	add	sp, sp, #116	; 0x74
   116dc:	pop	{r4, r5, pc}
   116e0:	bl	10fd0 <__stack_chk_fail@plt>
   116e4:	andeq	r6, r1, r4, ror r9
   116e8:	strdeq	r0, [r0], -ip
   116ec:	ldr	ip, [pc, #140]	; 11780 <__lxstat64@plt+0x594>
   116f0:	ldr	r3, [pc, #140]	; 11784 <__lxstat64@plt+0x598>
   116f4:	push	{r4, r5, r6, lr}
   116f8:	mov	r6, r0
   116fc:	ldr	r0, [pc, #132]	; 11788 <__lxstat64@plt+0x59c>
   11700:	add	ip, pc, ip
   11704:	add	r3, pc, r3
   11708:	ldr	r2, [pc, #124]	; 1178c <__lxstat64@plt+0x5a0>
   1170c:	mov	r5, r1
   11710:	mov	r1, #1
   11714:	ldr	r4, [ip, r0]
   11718:	add	r2, pc, r2
   1171c:	ldr	r3, [r3]
   11720:	ldr	r0, [r4]
   11724:	ldr	r3, [r3]
   11728:	bl	11138 <__fprintf_chk@plt>
   1172c:	mov	r1, #1
   11730:	mov	r2, r6
   11734:	mov	r3, r5
   11738:	ldr	r0, [r4]
   1173c:	bl	11138 <__fprintf_chk@plt>
   11740:	ldr	r0, [r4]
   11744:	ldr	r3, [r0, #20]
   11748:	ldr	r2, [r0, #24]
   1174c:	cmp	r3, r2
   11750:	addcc	r1, r3, #1
   11754:	movcc	r2, #10
   11758:	strcc	r1, [r0, #20]
   1175c:	strbcc	r2, [r3]
   11760:	bcs	11774 <__lxstat64@plt+0x588>
   11764:	ldr	r0, [r4]
   11768:	bl	11000 <fflush_unlocked@plt>
   1176c:	mov	r0, #2
   11770:	bl	110cc <exit@plt>
   11774:	mov	r1, #10
   11778:	bl	11168 <__overflow@plt>
   1177c:	b	11764 <__lxstat64@plt+0x578>
   11780:	strdeq	r6, [r1], -r8
   11784:	andeq	r6, r1, r0, ror sl
   11788:	andeq	r0, r0, r4, lsl #2
   1178c:	strdeq	r5, [r0], -r0
   11790:	push	{r3, r4, r5, lr}
   11794:	mov	r4, r0
   11798:	bl	110c0 <__ctype_b_loc@plt>
   1179c:	mov	r3, r4
   117a0:	ldr	ip, [r0]
   117a4:	mov	r0, r3
   117a8:	add	r3, r3, #1
   117ac:	ldrb	r2, [r0]
   117b0:	lsl	r1, r2, #1
   117b4:	ldrh	r1, [ip, r1]
   117b8:	tst	r1, #1
   117bc:	bne	117a4 <__lxstat64@plt+0x5b8>
   117c0:	cmp	r2, #43	; 0x2b
   117c4:	moveq	r0, r3
   117c8:	beq	117d8 <__lxstat64@plt+0x5ec>
   117cc:	cmp	r2, #45	; 0x2d
   117d0:	movne	r3, r0
   117d4:	addeq	r3, r0, #1
   117d8:	ldrb	r2, [r3]
   117dc:	add	r5, r3, #1
   117e0:	sub	r2, r2, #48	; 0x30
   117e4:	cmp	r2, #9
   117e8:	bhi	11844 <__lxstat64@plt+0x658>
   117ec:	ldrb	r2, [r3, #1]
   117f0:	sub	r1, r2, #48	; 0x30
   117f4:	cmp	r1, #9
   117f8:	bhi	11814 <__lxstat64@plt+0x628>
   117fc:	add	r3, r3, #2
   11800:	mov	r5, r3
   11804:	ldrb	r2, [r3], #1
   11808:	sub	r1, r2, #48	; 0x30
   1180c:	cmp	r1, #9
   11810:	bls	11800 <__lxstat64@plt+0x614>
   11814:	lsl	r3, r2, #1
   11818:	ldrh	r3, [ip, r3]
   1181c:	tst	r3, #1
   11820:	beq	1183c <__lxstat64@plt+0x650>
   11824:	mov	r3, r5
   11828:	ldrb	r2, [r3, #1]!
   1182c:	lsl	r1, r2, #1
   11830:	ldrh	r1, [ip, r1]
   11834:	tst	r1, #1
   11838:	bne	11828 <__lxstat64@plt+0x63c>
   1183c:	cmp	r2, #0
   11840:	popeq	{r3, r4, r5, pc}
   11844:	ldr	r1, [pc, #36]	; 11870 <__lxstat64@plt+0x684>
   11848:	mov	r2, #5
   1184c:	mov	r0, #0
   11850:	add	r1, pc, r1
   11854:	bl	10fc4 <dcgettext@plt>
   11858:	mov	r5, r0
   1185c:	mov	r0, r4
   11860:	bl	14b9c <close_stdout@@Base+0x1a70>
   11864:	mov	r1, r0
   11868:	mov	r0, r5
   1186c:	bl	116ec <__lxstat64@plt+0x500>
   11870:	andeq	r5, r0, r0, asr #1
   11874:	ldr	r1, [pc, #60]	; 118b8 <__lxstat64@plt+0x6cc>
   11878:	mov	r2, #5
   1187c:	push	{r4, lr}
   11880:	add	r1, pc, r1
   11884:	mov	r0, #0
   11888:	bl	10fc4 <dcgettext@plt>
   1188c:	ldr	r3, [pc, #40]	; 118bc <__lxstat64@plt+0x6d0>
   11890:	add	r3, pc, r3
   11894:	ldr	r2, [r3, #4]
   11898:	ldr	r3, [r3]
   1189c:	sub	r2, r2, #-1073741823	; 0xc0000001
   118a0:	mov	r4, r0
   118a4:	ldr	r0, [r3, r2, lsl #2]
   118a8:	bl	14b9c <close_stdout@@Base+0x1a70>
   118ac:	mov	r1, r0
   118b0:	mov	r0, r4
   118b4:	bl	116ec <__lxstat64@plt+0x500>
   118b8:	andeq	r5, r0, r4, lsr #1
   118bc:	andeq	r6, r1, r4, ror #17
   118c0:	push	{r3, lr}
   118c4:	cmp	r0, #0
   118c8:	ldr	r3, [pc, #32]	; 118f0 <__lxstat64@plt+0x704>
   118cc:	add	r3, pc, r3
   118d0:	ldr	r2, [r3, #8]
   118d4:	add	r2, r2, #1
   118d8:	str	r2, [r3, #8]
   118dc:	popeq	{r3, pc}
   118e0:	ldr	r3, [r3, #4]
   118e4:	cmp	r2, r3
   118e8:	poplt	{r3, pc}
   118ec:	bl	11874 <__lxstat64@plt+0x688>
   118f0:	andeq	r6, r1, r8, lsr #17
   118f4:	ldr	r2, [pc, #1776]	; 11fec <__lxstat64@plt+0xe00>
   118f8:	ldr	r3, [pc, #1776]	; 11ff0 <__lxstat64@plt+0xe04>
   118fc:	add	r2, pc, r2
   11900:	ldr	r0, [pc, #1772]	; 11ff4 <__lxstat64@plt+0xe08>
   11904:	push	{r4, r5, r6, r7, lr}
   11908:	add	r3, pc, r3
   1190c:	ldr	r1, [r2, #8]
   11910:	sub	sp, sp, #116	; 0x74
   11914:	ldr	r2, [r2]
   11918:	ldr	r4, [r3, r0]
   1191c:	ldr	r3, [r2, r1, lsl #2]
   11920:	ldr	r2, [r4]
   11924:	ldrb	r3, [r3, #1]
   11928:	str	r2, [sp, #108]	; 0x6c
   1192c:	sub	r3, r3, #71	; 0x47
   11930:	cmp	r3, #51	; 0x33
   11934:	addls	pc, pc, r3, lsl #2
   11938:	b	11a0c <__lxstat64@plt+0x820>
   1193c:	b	11dec <__lxstat64@plt+0xc00>
   11940:	b	11a0c <__lxstat64@plt+0x820>
   11944:	b	11a0c <__lxstat64@plt+0x820>
   11948:	b	11a0c <__lxstat64@plt+0x820>
   1194c:	b	11a0c <__lxstat64@plt+0x820>
   11950:	b	11d9c <__lxstat64@plt+0xbb0>
   11954:	b	11a0c <__lxstat64@plt+0x820>
   11958:	b	11a0c <__lxstat64@plt+0x820>
   1195c:	b	11d38 <__lxstat64@plt+0xb4c>
   11960:	b	11a0c <__lxstat64@plt+0x820>
   11964:	b	11a0c <__lxstat64@plt+0x820>
   11968:	b	11a0c <__lxstat64@plt+0x820>
   1196c:	b	11ce8 <__lxstat64@plt+0xafc>
   11970:	b	11a0c <__lxstat64@plt+0x820>
   11974:	b	11a0c <__lxstat64@plt+0x820>
   11978:	b	11a0c <__lxstat64@plt+0x820>
   1197c:	b	11a0c <__lxstat64@plt+0x820>
   11980:	b	11a0c <__lxstat64@plt+0x820>
   11984:	b	11a0c <__lxstat64@plt+0x820>
   11988:	b	11a0c <__lxstat64@plt+0x820>
   1198c:	b	11a0c <__lxstat64@plt+0x820>
   11990:	b	11a0c <__lxstat64@plt+0x820>
   11994:	b	11a0c <__lxstat64@plt+0x820>
   11998:	b	11a0c <__lxstat64@plt+0x820>
   1199c:	b	11a0c <__lxstat64@plt+0x820>
   119a0:	b	11a0c <__lxstat64@plt+0x820>
   119a4:	b	11cac <__lxstat64@plt+0xac0>
   119a8:	b	11c5c <__lxstat64@plt+0xa70>
   119ac:	b	11c0c <__lxstat64@plt+0xa20>
   119b0:	b	11bbc <__lxstat64@plt+0x9d0>
   119b4:	b	11cac <__lxstat64@plt+0xac0>
   119b8:	b	11f30 <__lxstat64@plt+0xd44>
   119bc:	b	11eec <__lxstat64@plt+0xd00>
   119c0:	b	11d9c <__lxstat64@plt+0xbb0>
   119c4:	b	11a0c <__lxstat64@plt+0x820>
   119c8:	b	11a0c <__lxstat64@plt+0x820>
   119cc:	b	11f80 <__lxstat64@plt+0xd94>
   119d0:	b	11a0c <__lxstat64@plt+0x820>
   119d4:	b	11a0c <__lxstat64@plt+0x820>
   119d8:	b	11e50 <__lxstat64@plt+0xc64>
   119dc:	b	11a0c <__lxstat64@plt+0x820>
   119e0:	b	11e9c <__lxstat64@plt+0xcb0>
   119e4:	b	11a0c <__lxstat64@plt+0x820>
   119e8:	b	11e84 <__lxstat64@plt+0xc98>
   119ec:	b	11b6c <__lxstat64@plt+0x980>
   119f0:	b	11afc <__lxstat64@plt+0x910>
   119f4:	b	11ab8 <__lxstat64@plt+0x8cc>
   119f8:	b	11a0c <__lxstat64@plt+0x820>
   119fc:	b	11a94 <__lxstat64@plt+0x8a8>
   11a00:	b	11a5c <__lxstat64@plt+0x870>
   11a04:	b	11a0c <__lxstat64@plt+0x820>
   11a08:	b	11a28 <__lxstat64@plt+0x83c>
   11a0c:	mov	r0, #0
   11a10:	ldr	r2, [sp, #108]	; 0x6c
   11a14:	ldr	r3, [r4]
   11a18:	cmp	r2, r3
   11a1c:	bne	11fe8 <__lxstat64@plt+0xdfc>
   11a20:	add	sp, sp, #116	; 0x74
   11a24:	pop	{r4, r5, r6, r7, pc}
   11a28:	mov	r0, #1
   11a2c:	bl	118c0 <__lxstat64@plt+0x6d4>
   11a30:	ldr	r3, [pc, #1472]	; 11ff8 <__lxstat64@plt+0xe0c>
   11a34:	add	r3, pc, r3
   11a38:	ldr	r2, [r3, #8]
   11a3c:	ldr	r1, [r3]
   11a40:	add	r0, r2, #1
   11a44:	str	r0, [r3, #8]
   11a48:	ldr	r3, [r1, r2, lsl #2]
   11a4c:	ldrb	r0, [r3]
   11a50:	rsbs	r0, r0, #1
   11a54:	movcc	r0, #0
   11a58:	b	11a10 <__lxstat64@plt+0x824>
   11a5c:	mov	r0, #1
   11a60:	bl	118c0 <__lxstat64@plt+0x6d4>
   11a64:	ldr	r3, [pc, #1424]	; 11ffc <__lxstat64@plt+0xe10>
   11a68:	mov	r1, #1
   11a6c:	add	r3, pc, r3
   11a70:	ldr	r2, [r3, #8]
   11a74:	ldr	r0, [r3]
   11a78:	add	ip, r2, r1
   11a7c:	str	ip, [r3, #8]
   11a80:	ldr	r0, [r0, r2, lsl #2]
   11a84:	bl	11198 <euidaccess@plt>
   11a88:	rsbs	r0, r0, #1
   11a8c:	movcc	r0, #0
   11a90:	b	11a10 <__lxstat64@plt+0x824>
   11a94:	mov	r0, #1
   11a98:	bl	118c0 <__lxstat64@plt+0x6d4>
   11a9c:	ldr	r3, [pc, #1372]	; 12000 <__lxstat64@plt+0xe14>
   11aa0:	mov	r1, #2
   11aa4:	add	r3, pc, r3
   11aa8:	ldr	r2, [r3, #8]
   11aac:	ldr	r0, [r3]
   11ab0:	add	ip, r2, #1
   11ab4:	b	11a7c <__lxstat64@plt+0x890>
   11ab8:	mov	r0, #1
   11abc:	bl	118c0 <__lxstat64@plt+0x6d4>
   11ac0:	ldr	r3, [pc, #1340]	; 12004 <__lxstat64@plt+0xe18>
   11ac4:	mov	r0, #3
   11ac8:	mov	r2, sp
   11acc:	add	r3, pc, r3
   11ad0:	ldr	r1, [r3, #8]
   11ad4:	ldr	ip, [r3]
   11ad8:	add	lr, r1, #1
   11adc:	str	lr, [r3, #8]
   11ae0:	ldr	r1, [ip, r1, lsl #2]
   11ae4:	bl	111b0 <__xstat64@plt>
   11ae8:	cmp	r0, #0
   11aec:	bne	11a0c <__lxstat64@plt+0x820>
   11af0:	ldr	r0, [sp, #16]
   11af4:	ubfx	r0, r0, #11, #1
   11af8:	b	11a10 <__lxstat64@plt+0x824>
   11afc:	mov	r0, #1
   11b00:	mov	r5, #0
   11b04:	bl	118c0 <__lxstat64@plt+0x6d4>
   11b08:	ldr	r3, [pc, #1272]	; 12008 <__lxstat64@plt+0xe1c>
   11b0c:	add	r3, pc, r3
   11b10:	ldr	r2, [r3, #8]
   11b14:	ldr	r1, [r3]
   11b18:	add	r0, r2, #1
   11b1c:	str	r0, [r3, #8]
   11b20:	ldr	r0, [r1, r2, lsl #2]
   11b24:	bl	11790 <__lxstat64@plt+0x5a4>
   11b28:	mov	r7, r0
   11b2c:	bl	110f0 <__errno_location@plt>
   11b30:	mov	r1, r5
   11b34:	mov	r2, #10
   11b38:	mov	r6, r0
   11b3c:	str	r5, [r0]
   11b40:	mov	r0, r7
   11b44:	bl	10f70 <strtol@plt>
   11b48:	ldr	r3, [r6]
   11b4c:	cmp	r3, #34	; 0x22
   11b50:	beq	11fd0 <__lxstat64@plt+0xde4>
   11b54:	cmp	r0, r5
   11b58:	blt	11fd0 <__lxstat64@plt+0xde4>
   11b5c:	bl	111bc <isatty@plt>
   11b60:	subs	r0, r0, r5
   11b64:	movne	r0, #1
   11b68:	b	11a10 <__lxstat64@plt+0x824>
   11b6c:	mov	r0, #1
   11b70:	bl	118c0 <__lxstat64@plt+0x6d4>
   11b74:	ldr	r3, [pc, #1168]	; 1200c <__lxstat64@plt+0xe20>
   11b78:	mov	r0, #3
   11b7c:	mov	r2, sp
   11b80:	add	r3, pc, r3
   11b84:	ldr	r1, [r3, #8]
   11b88:	ldr	ip, [r3]
   11b8c:	add	lr, r1, #1
   11b90:	str	lr, [r3, #8]
   11b94:	ldr	r1, [ip, r1, lsl #2]
   11b98:	bl	111b0 <__xstat64@plt>
   11b9c:	cmp	r0, #0
   11ba0:	bne	11a0c <__lxstat64@plt+0x820>
   11ba4:	ldrd	r2, [sp, #48]	; 0x30
   11ba8:	cmp	r2, #1
   11bac:	sbcs	r1, r3, #0
   11bb0:	movlt	r0, #0
   11bb4:	movge	r0, #1
   11bb8:	b	11a10 <__lxstat64@plt+0x824>
   11bbc:	mov	r0, #1
   11bc0:	bl	118c0 <__lxstat64@plt+0x6d4>
   11bc4:	ldr	r3, [pc, #1092]	; 12010 <__lxstat64@plt+0xe24>
   11bc8:	mov	r0, #3
   11bcc:	mov	r2, sp
   11bd0:	add	r3, pc, r3
   11bd4:	ldr	r1, [r3, #8]
   11bd8:	ldr	ip, [r3]
   11bdc:	add	lr, r1, #1
   11be0:	str	lr, [r3, #8]
   11be4:	ldr	r1, [ip, r1, lsl #2]
   11be8:	bl	111b0 <__xstat64@plt>
   11bec:	cmp	r0, #0
   11bf0:	bne	11a0c <__lxstat64@plt+0x820>
   11bf4:	ldr	r0, [sp, #16]
   11bf8:	and	r0, r0, #61440	; 0xf000
   11bfc:	subs	r6, r0, #16384	; 0x4000
   11c00:	rsbs	r0, r6, #0
   11c04:	adcs	r0, r0, r6
   11c08:	b	11a10 <__lxstat64@plt+0x824>
   11c0c:	mov	r0, #1
   11c10:	bl	118c0 <__lxstat64@plt+0x6d4>
   11c14:	ldr	r3, [pc, #1016]	; 12014 <__lxstat64@plt+0xe28>
   11c18:	mov	r0, #3
   11c1c:	mov	r2, sp
   11c20:	add	r3, pc, r3
   11c24:	ldr	r1, [r3, #8]
   11c28:	ldr	ip, [r3]
   11c2c:	add	lr, r1, #1
   11c30:	str	lr, [r3, #8]
   11c34:	ldr	r1, [ip, r1, lsl #2]
   11c38:	bl	111b0 <__xstat64@plt>
   11c3c:	cmp	r0, #0
   11c40:	bne	11a0c <__lxstat64@plt+0x820>
   11c44:	ldr	r0, [sp, #16]
   11c48:	and	r0, r0, #61440	; 0xf000
   11c4c:	subs	ip, r0, #8192	; 0x2000
   11c50:	rsbs	r0, ip, #0
   11c54:	adcs	r0, r0, ip
   11c58:	b	11a10 <__lxstat64@plt+0x824>
   11c5c:	mov	r0, #1
   11c60:	bl	118c0 <__lxstat64@plt+0x6d4>
   11c64:	ldr	r3, [pc, #940]	; 12018 <__lxstat64@plt+0xe2c>
   11c68:	mov	r0, #3
   11c6c:	mov	r2, sp
   11c70:	add	r3, pc, r3
   11c74:	ldr	r1, [r3, #8]
   11c78:	ldr	ip, [r3]
   11c7c:	add	lr, r1, #1
   11c80:	str	lr, [r3, #8]
   11c84:	ldr	r1, [ip, r1, lsl #2]
   11c88:	bl	111b0 <__xstat64@plt>
   11c8c:	cmp	r0, #0
   11c90:	bne	11a0c <__lxstat64@plt+0x820>
   11c94:	ldr	r0, [sp, #16]
   11c98:	and	r0, r0, #61440	; 0xf000
   11c9c:	subs	r1, r0, #24576	; 0x6000
   11ca0:	rsbs	r0, r1, #0
   11ca4:	adcs	r0, r0, r1
   11ca8:	b	11a10 <__lxstat64@plt+0x824>
   11cac:	mov	r0, #1
   11cb0:	bl	118c0 <__lxstat64@plt+0x6d4>
   11cb4:	ldr	r3, [pc, #864]	; 1201c <__lxstat64@plt+0xe30>
   11cb8:	mov	r0, #3
   11cbc:	mov	r2, sp
   11cc0:	add	r3, pc, r3
   11cc4:	ldr	r1, [r3, #8]
   11cc8:	ldr	ip, [r3]
   11ccc:	add	lr, r1, #1
   11cd0:	str	lr, [r3, #8]
   11cd4:	ldr	r1, [ip, r1, lsl #2]
   11cd8:	bl	111b0 <__xstat64@plt>
   11cdc:	rsbs	r0, r0, #1
   11ce0:	movcc	r0, #0
   11ce4:	b	11a10 <__lxstat64@plt+0x824>
   11ce8:	mov	r0, #1
   11cec:	bl	118c0 <__lxstat64@plt+0x6d4>
   11cf0:	ldr	r3, [pc, #808]	; 12020 <__lxstat64@plt+0xe34>
   11cf4:	mov	r0, #3
   11cf8:	mov	r2, sp
   11cfc:	add	r3, pc, r3
   11d00:	ldr	r1, [r3, #8]
   11d04:	ldr	ip, [r3]
   11d08:	add	lr, r1, #1
   11d0c:	str	lr, [r3, #8]
   11d10:	ldr	r1, [ip, r1, lsl #2]
   11d14:	bl	111b0 <__xstat64@plt>
   11d18:	cmp	r0, #0
   11d1c:	bne	11a0c <__lxstat64@plt+0x820>
   11d20:	ldr	r0, [sp, #16]
   11d24:	and	r0, r0, #61440	; 0xf000
   11d28:	subs	r5, r0, #49152	; 0xc000
   11d2c:	rsbs	r0, r5, #0
   11d30:	adcs	r0, r0, r5
   11d34:	b	11a10 <__lxstat64@plt+0x824>
   11d38:	mov	r0, #1
   11d3c:	bl	118c0 <__lxstat64@plt+0x6d4>
   11d40:	ldr	r3, [pc, #732]	; 12024 <__lxstat64@plt+0xe38>
   11d44:	mov	r0, #3
   11d48:	mov	r2, sp
   11d4c:	add	r3, pc, r3
   11d50:	ldr	r1, [r3, #8]
   11d54:	ldr	ip, [r3]
   11d58:	add	lr, r1, #1
   11d5c:	str	lr, [r3, #8]
   11d60:	ldr	r1, [ip, r1, lsl #2]
   11d64:	bl	111b0 <__xstat64@plt>
   11d68:	subs	r5, r0, #0
   11d6c:	bne	11a0c <__lxstat64@plt+0x820>
   11d70:	bl	110f0 <__errno_location@plt>
   11d74:	str	r5, [r0]
   11d78:	mov	r6, r0
   11d7c:	bl	10ff4 <geteuid@plt>
   11d80:	cmn	r0, #1
   11d84:	beq	11fd8 <__lxstat64@plt+0xdec>
   11d88:	ldr	r3, [sp, #24]
   11d8c:	subs	r2, r0, r3
   11d90:	rsbs	r0, r2, #0
   11d94:	adcs	r0, r0, r2
   11d98:	b	11a10 <__lxstat64@plt+0x824>
   11d9c:	mov	r0, #1
   11da0:	bl	118c0 <__lxstat64@plt+0x6d4>
   11da4:	ldr	r3, [pc, #636]	; 12028 <__lxstat64@plt+0xe3c>
   11da8:	mov	r0, #3
   11dac:	mov	r2, sp
   11db0:	add	r3, pc, r3
   11db4:	ldr	r1, [r3, #8]
   11db8:	ldr	ip, [r3]
   11dbc:	add	lr, r1, #1
   11dc0:	str	lr, [r3, #8]
   11dc4:	ldr	r1, [ip, r1, lsl #2]
   11dc8:	bl	111ec <__lxstat64@plt>
   11dcc:	cmp	r0, #0
   11dd0:	bne	11a0c <__lxstat64@plt+0x820>
   11dd4:	ldr	r0, [sp, #16]
   11dd8:	and	r0, r0, #61440	; 0xf000
   11ddc:	subs	r3, r0, #40960	; 0xa000
   11de0:	rsbs	r0, r3, #0
   11de4:	adcs	r0, r0, r3
   11de8:	b	11a10 <__lxstat64@plt+0x824>
   11dec:	mov	r0, #1
   11df0:	bl	118c0 <__lxstat64@plt+0x6d4>
   11df4:	ldr	r3, [pc, #560]	; 1202c <__lxstat64@plt+0xe40>
   11df8:	mov	r0, #3
   11dfc:	mov	r2, sp
   11e00:	add	r3, pc, r3
   11e04:	ldr	r1, [r3, #8]
   11e08:	ldr	ip, [r3]
   11e0c:	add	lr, r1, #1
   11e10:	str	lr, [r3, #8]
   11e14:	ldr	r1, [ip, r1, lsl #2]
   11e18:	bl	111b0 <__xstat64@plt>
   11e1c:	subs	r5, r0, #0
   11e20:	bne	11a0c <__lxstat64@plt+0x820>
   11e24:	bl	110f0 <__errno_location@plt>
   11e28:	str	r5, [r0]
   11e2c:	mov	r6, r0
   11e30:	bl	11018 <getegid@plt>
   11e34:	cmn	r0, #1
   11e38:	beq	11fc4 <__lxstat64@plt+0xdd8>
   11e3c:	ldr	r3, [sp, #28]
   11e40:	subs	r3, r0, r3
   11e44:	rsbs	r0, r3, #0
   11e48:	adcs	r0, r0, r3
   11e4c:	b	11a10 <__lxstat64@plt+0x824>
   11e50:	mov	r0, #1
   11e54:	bl	118c0 <__lxstat64@plt+0x6d4>
   11e58:	ldr	r3, [pc, #464]	; 12030 <__lxstat64@plt+0xe44>
   11e5c:	add	r3, pc, r3
   11e60:	ldr	r2, [r3, #8]
   11e64:	ldr	r1, [r3]
   11e68:	add	r0, r2, #1
   11e6c:	str	r0, [r3, #8]
   11e70:	ldr	r3, [r1, r2, lsl #2]
   11e74:	ldrb	r0, [r3]
   11e78:	adds	r0, r0, #0
   11e7c:	movne	r0, #1
   11e80:	b	11a10 <__lxstat64@plt+0x824>
   11e84:	mov	r0, #1
   11e88:	bl	118c0 <__lxstat64@plt+0x6d4>
   11e8c:	ldr	r3, [pc, #416]	; 12034 <__lxstat64@plt+0xe48>
   11e90:	mov	r1, #4
   11e94:	add	r3, pc, r3
   11e98:	b	11aa8 <__lxstat64@plt+0x8bc>
   11e9c:	mov	r0, #1
   11ea0:	bl	118c0 <__lxstat64@plt+0x6d4>
   11ea4:	ldr	r3, [pc, #396]	; 12038 <__lxstat64@plt+0xe4c>
   11ea8:	mov	r0, #3
   11eac:	mov	r2, sp
   11eb0:	add	r3, pc, r3
   11eb4:	ldr	r1, [r3, #8]
   11eb8:	ldr	ip, [r3]
   11ebc:	add	lr, r1, #1
   11ec0:	str	lr, [r3, #8]
   11ec4:	ldr	r1, [ip, r1, lsl #2]
   11ec8:	bl	111b0 <__xstat64@plt>
   11ecc:	cmp	r0, #0
   11ed0:	bne	11a0c <__lxstat64@plt+0x820>
   11ed4:	ldr	r0, [sp, #16]
   11ed8:	and	r0, r0, #61440	; 0xf000
   11edc:	subs	r2, r0, #4096	; 0x1000
   11ee0:	rsbs	r0, r2, #0
   11ee4:	adcs	r0, r0, r2
   11ee8:	b	11a10 <__lxstat64@plt+0x824>
   11eec:	mov	r0, #1
   11ef0:	bl	118c0 <__lxstat64@plt+0x6d4>
   11ef4:	ldr	r3, [pc, #320]	; 1203c <__lxstat64@plt+0xe50>
   11ef8:	mov	r0, #3
   11efc:	mov	r2, sp
   11f00:	add	r3, pc, r3
   11f04:	ldr	r1, [r3, #8]
   11f08:	ldr	ip, [r3]
   11f0c:	add	lr, r1, #1
   11f10:	str	lr, [r3, #8]
   11f14:	ldr	r1, [ip, r1, lsl #2]
   11f18:	bl	111b0 <__xstat64@plt>
   11f1c:	cmp	r0, #0
   11f20:	bne	11a0c <__lxstat64@plt+0x820>
   11f24:	ldr	r0, [sp, #16]
   11f28:	ubfx	r0, r0, #10, #1
   11f2c:	b	11a10 <__lxstat64@plt+0x824>
   11f30:	mov	r0, #1
   11f34:	bl	118c0 <__lxstat64@plt+0x6d4>
   11f38:	ldr	r3, [pc, #256]	; 12040 <__lxstat64@plt+0xe54>
   11f3c:	mov	r0, #3
   11f40:	mov	r2, sp
   11f44:	add	r3, pc, r3
   11f48:	ldr	r1, [r3, #8]
   11f4c:	ldr	ip, [r3]
   11f50:	add	lr, r1, #1
   11f54:	str	lr, [r3, #8]
   11f58:	ldr	r1, [ip, r1, lsl #2]
   11f5c:	bl	111b0 <__xstat64@plt>
   11f60:	cmp	r0, #0
   11f64:	bne	11a0c <__lxstat64@plt+0x820>
   11f68:	ldr	r0, [sp, #16]
   11f6c:	and	r0, r0, #61440	; 0xf000
   11f70:	subs	r7, r0, #32768	; 0x8000
   11f74:	rsbs	r0, r7, #0
   11f78:	adcs	r0, r0, r7
   11f7c:	b	11a10 <__lxstat64@plt+0x824>
   11f80:	mov	r0, #1
   11f84:	bl	118c0 <__lxstat64@plt+0x6d4>
   11f88:	ldr	r3, [pc, #180]	; 12044 <__lxstat64@plt+0xe58>
   11f8c:	mov	r0, #3
   11f90:	mov	r2, sp
   11f94:	add	r3, pc, r3
   11f98:	ldr	r1, [r3, #8]
   11f9c:	ldr	ip, [r3]
   11fa0:	add	lr, r1, #1
   11fa4:	str	lr, [r3, #8]
   11fa8:	ldr	r1, [ip, r1, lsl #2]
   11fac:	bl	111b0 <__xstat64@plt>
   11fb0:	cmp	r0, #0
   11fb4:	bne	11a0c <__lxstat64@plt+0x820>
   11fb8:	ldr	r0, [sp, #16]
   11fbc:	ubfx	r0, r0, #9, #1
   11fc0:	b	11a10 <__lxstat64@plt+0x824>
   11fc4:	ldr	r2, [r6]
   11fc8:	cmp	r2, #0
   11fcc:	beq	11e3c <__lxstat64@plt+0xc50>
   11fd0:	mov	r0, r5
   11fd4:	b	11a10 <__lxstat64@plt+0x824>
   11fd8:	ldr	r2, [r6]
   11fdc:	cmp	r2, #0
   11fe0:	bne	11fd0 <__lxstat64@plt+0xde4>
   11fe4:	b	11d88 <__lxstat64@plt+0xb9c>
   11fe8:	bl	10fd0 <__stack_chk_fail@plt>
   11fec:	andeq	r6, r1, r8, ror r8
   11ff0:	strdeq	r6, [r1], -r0
   11ff4:	strdeq	r0, [r0], -ip
   11ff8:	andeq	r6, r1, r0, asr #14
   11ffc:	andeq	r6, r1, r8, lsl #14
   12000:	ldrdeq	r6, [r1], -r0
   12004:	andeq	r6, r1, r8, lsr #13
   12008:	andeq	r6, r1, r8, ror #12
   1200c:	strdeq	r6, [r1], -r4
   12010:	andeq	r6, r1, r4, lsr #11
   12014:	andeq	r6, r1, r4, asr r5
   12018:	andeq	r6, r1, r4, lsl #10
   1201c:			; <UNDEFINED> instruction: 0x000164b4
   12020:	andeq	r6, r1, r8, ror r4
   12024:	andeq	r6, r1, r8, lsr #8
   12028:	andeq	r6, r1, r4, asr #7
   1202c:	andeq	r6, r1, r4, ror r3
   12030:	andeq	r6, r1, r8, lsl r3
   12034:	andeq	r6, r1, r0, ror #5
   12038:	andeq	r6, r1, r4, asr #5
   1203c:	andeq	r6, r1, r4, ror r2
   12040:	andeq	r6, r1, r0, lsr r2
   12044:	andeq	r6, r1, r0, ror #3
   12048:	ldr	r3, [pc, #1288]	; 12558 <__lxstat64@plt+0x136c>
   1204c:	ldr	r2, [pc, #1288]	; 1255c <__lxstat64@plt+0x1370>
   12050:	add	r3, pc, r3
   12054:	push	{r4, r5, r6, r7, r8, r9, lr}
   12058:	subs	r7, r0, #0
   1205c:	ldr	r6, [r3, r2]
   12060:	sub	sp, sp, #268	; 0x10c
   12064:	ldr	r3, [r6]
   12068:	str	r3, [sp, #260]	; 0x104
   1206c:	bne	12158 <__lxstat64@plt+0xf6c>
   12070:	ldr	r5, [pc, #1256]	; 12560 <__lxstat64@plt+0x1374>
   12074:	add	r5, pc, r5
   12078:	ldmib	r5, {r3, r4}
   1207c:	sub	r3, r3, #2
   12080:	add	r4, r4, #1
   12084:	cmp	r4, r3
   12088:	ldr	r3, [r5]
   1208c:	bge	120a4 <__lxstat64@plt+0xeb8>
   12090:	add	r2, r4, #1
   12094:	ldr	r2, [r3, r2, lsl #2]
   12098:	ldrb	r1, [r2]
   1209c:	cmp	r1, #45	; 0x2d
   120a0:	beq	12130 <__lxstat64@plt+0xf44>
   120a4:	mov	r8, #0
   120a8:	ldr	r2, [r3, r4, lsl #2]
   120ac:	lsl	r4, r4, #2
   120b0:	add	r5, r3, r4
   120b4:	ldrb	r1, [r2]
   120b8:	cmp	r1, #45	; 0x2d
   120bc:	beq	12164 <__lxstat64@plt+0xf78>
   120c0:	cmp	r1, #61	; 0x3d
   120c4:	beq	12274 <__lxstat64@plt+0x1088>
   120c8:	cmp	r1, #33	; 0x21
   120cc:	bne	12288 <__lxstat64@plt+0x109c>
   120d0:	ldrb	r1, [r2, #1]
   120d4:	cmp	r1, #61	; 0x3d
   120d8:	bne	12288 <__lxstat64@plt+0x109c>
   120dc:	ldrb	r2, [r2, #2]
   120e0:	cmp	r2, #0
   120e4:	bne	12288 <__lxstat64@plt+0x109c>
   120e8:	ldr	r5, [pc, #1140]	; 12564 <__lxstat64@plt+0x1378>
   120ec:	add	r5, pc, r5
   120f0:	ldr	r4, [r5, #8]
   120f4:	add	r2, r3, r4, lsl #2
   120f8:	ldr	r0, [r3, r4, lsl #2]
   120fc:	add	r4, r4, #3
   12100:	ldr	r1, [r2, #8]
   12104:	bl	10f64 <strcmp@plt>
   12108:	str	r4, [r5, #8]
   1210c:	adds	r7, r0, #0
   12110:	movne	r7, #1
   12114:	ldr	r2, [sp, #260]	; 0x104
   12118:	mov	r0, r7
   1211c:	ldr	r3, [r6]
   12120:	cmp	r2, r3
   12124:	bne	12500 <__lxstat64@plt+0x1314>
   12128:	add	sp, sp, #268	; 0x10c
   1212c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12130:	ldrb	r1, [r2, #1]
   12134:	cmp	r1, #108	; 0x6c
   12138:	bne	120a4 <__lxstat64@plt+0xeb8>
   1213c:	ldrb	r0, [r2, #2]
   12140:	cmp	r0, #0
   12144:	bne	120a4 <__lxstat64@plt+0xeb8>
   12148:	bl	118c0 <__lxstat64@plt+0x6d4>
   1214c:	mov	r8, #1
   12150:	ldr	r3, [r5]
   12154:	b	120a8 <__lxstat64@plt+0xebc>
   12158:	mov	r0, #0
   1215c:	bl	118c0 <__lxstat64@plt+0x6d4>
   12160:	b	12070 <__lxstat64@plt+0xe84>
   12164:	ldrb	r3, [r2, #1]
   12168:	cmp	r3, #108	; 0x6c
   1216c:	cmpne	r3, #103	; 0x67
   12170:	bne	12234 <__lxstat64@plt+0x1048>
   12174:	ldrb	r0, [r2, #2]
   12178:	cmp	r0, #101	; 0x65
   1217c:	cmpne	r0, #116	; 0x74
   12180:	bne	12234 <__lxstat64@plt+0x1048>
   12184:	ldrb	r9, [r2, #3]
   12188:	cmp	r9, #0
   1218c:	bne	12490 <__lxstat64@plt+0x12a4>
   12190:	cmp	r7, #0
   12194:	ldr	r0, [r5, #-4]
   12198:	bne	1249c <__lxstat64@plt+0x12b0>
   1219c:	bl	11790 <__lxstat64@plt+0x5a4>
   121a0:	mov	r5, r0
   121a4:	cmp	r8, #0
   121a8:	beq	124bc <__lxstat64@plt+0x12d0>
   121ac:	ldr	r3, [pc, #948]	; 12568 <__lxstat64@plt+0x137c>
   121b0:	add	r3, pc, r3
   121b4:	ldr	r3, [r3]
   121b8:	add	r3, r3, r4
   121bc:	ldr	r0, [r3, #8]
   121c0:	bl	110d8 <strlen@plt>
   121c4:	mov	r1, #0
   121c8:	add	r2, sp, #236	; 0xec
   121cc:	bl	132e8 <close_stdout@@Base+0x1bc>
   121d0:	mov	r1, r0
   121d4:	mov	r0, r5
   121d8:	bl	14ba8 <close_stdout@@Base+0x1a7c>
   121dc:	ldr	r3, [pc, #904]	; 1256c <__lxstat64@plt+0x1380>
   121e0:	add	r3, pc, r3
   121e4:	ldr	r2, [r3]
   121e8:	ldr	r1, [r3, #8]
   121ec:	ldr	r2, [r2, r4]
   121f0:	add	r1, r1, #3
   121f4:	str	r1, [r3, #8]
   121f8:	ldrb	r7, [r2, #2]
   121fc:	ldrb	r3, [r2, #1]
   12200:	subs	r1, r7, #101	; 0x65
   12204:	rsbs	r2, r1, #0
   12208:	adcs	r2, r2, r1
   1220c:	cmp	r3, #108	; 0x6c
   12210:	beq	124dc <__lxstat64@plt+0x12f0>
   12214:	cmp	r3, #103	; 0x67
   12218:	beq	124ec <__lxstat64@plt+0x1300>
   1221c:	adds	r7, r0, #0
   12220:	movne	r7, #1
   12224:	subs	r3, r7, r2
   12228:	rsbs	r7, r3, #0
   1222c:	adcs	r7, r7, r3
   12230:	b	12114 <__lxstat64@plt+0xf28>
   12234:	cmp	r3, #101	; 0x65
   12238:	beq	122c8 <__lxstat64@plt+0x10dc>
   1223c:	cmp	r3, #110	; 0x6e
   12240:	beq	123f8 <__lxstat64@plt+0x120c>
   12244:	cmp	r3, #111	; 0x6f
   12248:	beq	12374 <__lxstat64@plt+0x1188>
   1224c:	cmp	r3, #101	; 0x65
   12250:	ldrbeq	r1, [r2, #2]
   12254:	beq	122d8 <__lxstat64@plt+0x10ec>
   12258:	ldr	r1, [pc, #784]	; 12570 <__lxstat64@plt+0x1384>
   1225c:	mov	r0, #0
   12260:	mov	r2, #5
   12264:	add	r1, pc, r1
   12268:	bl	10fc4 <dcgettext@plt>
   1226c:	ldr	r1, [r5]
   12270:	bl	116ec <__lxstat64@plt+0x500>
   12274:	ldrb	r1, [r2, #1]
   12278:	cmp	r1, #0
   1227c:	beq	12298 <__lxstat64@plt+0x10ac>
   12280:	cmp	r1, #61	; 0x3d
   12284:	beq	1228c <__lxstat64@plt+0x10a0>
   12288:	bl	111d4 <abort@plt>
   1228c:	ldrb	r2, [r2, #2]
   12290:	cmp	r2, #0
   12294:	bne	12288 <__lxstat64@plt+0x109c>
   12298:	ldr	r5, [pc, #724]	; 12574 <__lxstat64@plt+0x1388>
   1229c:	add	r5, pc, r5
   122a0:	ldr	r4, [r5, #8]
   122a4:	add	r2, r3, r4, lsl #2
   122a8:	ldr	r0, [r3, r4, lsl #2]
   122ac:	add	r4, r4, #3
   122b0:	ldr	r1, [r2, #8]
   122b4:	bl	10f64 <strcmp@plt>
   122b8:	str	r4, [r5, #8]
   122bc:	rsbs	r7, r0, #1
   122c0:	movcc	r7, #0
   122c4:	b	12114 <__lxstat64@plt+0xf28>
   122c8:	ldrb	r0, [r2, #2]
   122cc:	cmp	r0, #113	; 0x71
   122d0:	mov	r1, r0
   122d4:	beq	12184 <__lxstat64@plt+0xf98>
   122d8:	cmp	r1, #102	; 0x66
   122dc:	bne	12258 <__lxstat64@plt+0x106c>
   122e0:	ldrb	r4, [r2, #3]
   122e4:	cmp	r4, #0
   122e8:	bne	12258 <__lxstat64@plt+0x106c>
   122ec:	ldr	r3, [pc, #644]	; 12578 <__lxstat64@plt+0x138c>
   122f0:	orrs	r7, r8, r7
   122f4:	add	r3, pc, r3
   122f8:	ldr	r2, [r3, #8]
   122fc:	add	r2, r2, #3
   12300:	str	r2, [r3, #8]
   12304:	bne	12520 <__lxstat64@plt+0x1334>
   12308:	mov	r0, #3
   1230c:	ldr	r1, [r5, #-4]
   12310:	mov	r2, sp
   12314:	bl	111b0 <__xstat64@plt>
   12318:	cmp	r0, #0
   1231c:	bne	12114 <__lxstat64@plt+0xf28>
   12320:	ldr	r1, [r5, #4]
   12324:	mov	r0, #3
   12328:	add	r2, sp, #104	; 0x68
   1232c:	bl	111b0 <__xstat64@plt>
   12330:	cmp	r0, #0
   12334:	bne	12114 <__lxstat64@plt+0xf28>
   12338:	movw	r1, #65272	; 0xfef8
   1233c:	add	r0, sp, #264	; 0x108
   12340:	movt	r1, #65535	; 0xffff
   12344:	ldrd	r2, [sp, #104]	; 0x68
   12348:	ldrd	r4, [r0, r1]
   1234c:	cmp	r5, r3
   12350:	cmpeq	r4, r2
   12354:	bne	12114 <__lxstat64@plt+0xf28>
   12358:	ldrd	r0, [sp, #96]	; 0x60
   1235c:	ldrd	r2, [sp, #200]	; 0xc8
   12360:	cmp	r1, r3
   12364:	cmpeq	r0, r2
   12368:	movne	r7, #0
   1236c:	moveq	r7, #1
   12370:	b	12114 <__lxstat64@plt+0xf28>
   12374:	ldrb	r3, [r2, #2]
   12378:	cmp	r3, #116	; 0x74
   1237c:	bne	12258 <__lxstat64@plt+0x106c>
   12380:	ldrb	r4, [r2, #3]
   12384:	cmp	r4, #0
   12388:	bne	12258 <__lxstat64@plt+0x106c>
   1238c:	ldr	r3, [pc, #488]	; 1257c <__lxstat64@plt+0x1390>
   12390:	orrs	r7, r8, r7
   12394:	add	r3, pc, r3
   12398:	ldr	r2, [r3, #8]
   1239c:	add	r2, r2, #3
   123a0:	str	r2, [r3, #8]
   123a4:	bne	1253c <__lxstat64@plt+0x1350>
   123a8:	mov	r1, sp
   123ac:	ldr	r0, [r5, #-4]
   123b0:	bl	11674 <__lxstat64@plt+0x488>
   123b4:	add	r1, sp, #104	; 0x68
   123b8:	mov	r4, r0
   123bc:	ldr	r0, [r5, #4]
   123c0:	bl	11674 <__lxstat64@plt+0x488>
   123c4:	cmp	r0, #0
   123c8:	beq	12114 <__lxstat64@plt+0xf28>
   123cc:	cmp	r4, #0
   123d0:	beq	124b4 <__lxstat64@plt+0x12c8>
   123d4:	ldr	r3, [sp]
   123d8:	ldr	r2, [sp, #104]	; 0x68
   123dc:	ldr	r1, [sp, #4]
   123e0:	cmp	r2, r3
   123e4:	ldr	r3, [sp, #108]	; 0x6c
   123e8:	bgt	124b4 <__lxstat64@plt+0x12c8>
   123ec:	rsbge	r3, r3, r1
   123f0:	lsrge	r7, r3, #31
   123f4:	b	12114 <__lxstat64@plt+0xf28>
   123f8:	ldrb	r0, [r2, #2]
   123fc:	cmp	r0, #101	; 0x65
   12400:	beq	12184 <__lxstat64@plt+0xf98>
   12404:	cmp	r0, #116	; 0x74
   12408:	bne	12258 <__lxstat64@plt+0x106c>
   1240c:	ldrb	r4, [r2, #3]
   12410:	cmp	r4, #0
   12414:	bne	12258 <__lxstat64@plt+0x106c>
   12418:	ldr	r3, [pc, #352]	; 12580 <__lxstat64@plt+0x1394>
   1241c:	orrs	r7, r8, r7
   12420:	add	r3, pc, r3
   12424:	ldr	r2, [r3, #8]
   12428:	add	r2, r2, #3
   1242c:	str	r2, [r3, #8]
   12430:	bne	12504 <__lxstat64@plt+0x1318>
   12434:	mov	r1, sp
   12438:	ldr	r0, [r5, #-4]
   1243c:	bl	11674 <__lxstat64@plt+0x488>
   12440:	add	r1, sp, #104	; 0x68
   12444:	mov	r4, r0
   12448:	ldr	r0, [r5, #4]
   1244c:	bl	11674 <__lxstat64@plt+0x488>
   12450:	cmp	r4, #0
   12454:	beq	12114 <__lxstat64@plt+0xf28>
   12458:	cmp	r0, #0
   1245c:	beq	124b4 <__lxstat64@plt+0x12c8>
   12460:	ldr	r3, [sp]
   12464:	ldr	r2, [sp, #104]	; 0x68
   12468:	ldr	r1, [sp, #4]
   1246c:	cmp	r2, r3
   12470:	ldr	r3, [sp, #108]	; 0x6c
   12474:	bgt	12114 <__lxstat64@plt+0xf28>
   12478:	blt	124b4 <__lxstat64@plt+0x12c8>
   1247c:	rsb	r3, r3, r1
   12480:	cmp	r3, #0
   12484:	movle	r7, #0
   12488:	movgt	r7, #1
   1248c:	b	12114 <__lxstat64@plt+0xf28>
   12490:	cmp	r3, #110	; 0x6e
   12494:	bne	12244 <__lxstat64@plt+0x1058>
   12498:	b	12404 <__lxstat64@plt+0x1218>
   1249c:	bl	110d8 <strlen@plt>
   124a0:	mov	r1, r9
   124a4:	add	r2, sp, #212	; 0xd4
   124a8:	bl	132e8 <close_stdout@@Base+0x1bc>
   124ac:	mov	r5, r0
   124b0:	b	121a4 <__lxstat64@plt+0xfb8>
   124b4:	mov	r7, #1
   124b8:	b	12114 <__lxstat64@plt+0xf28>
   124bc:	ldr	r3, [pc, #192]	; 12584 <__lxstat64@plt+0x1398>
   124c0:	add	r3, pc, r3
   124c4:	ldr	r3, [r3]
   124c8:	add	r3, r3, r4
   124cc:	ldr	r0, [r3, #4]
   124d0:	bl	11790 <__lxstat64@plt+0x5a4>
   124d4:	mov	r1, r0
   124d8:	b	121d4 <__lxstat64@plt+0xfe8>
   124dc:	cmp	r0, r2
   124e0:	movge	r7, #0
   124e4:	movlt	r7, #1
   124e8:	b	12114 <__lxstat64@plt+0xf28>
   124ec:	rsb	r2, r2, #0
   124f0:	cmp	r0, r2
   124f4:	movle	r7, #0
   124f8:	movgt	r7, #1
   124fc:	b	12114 <__lxstat64@plt+0xf28>
   12500:	bl	10fd0 <__stack_chk_fail@plt>
   12504:	ldr	r1, [pc, #124]	; 12588 <__lxstat64@plt+0x139c>
   12508:	mov	r0, r4
   1250c:	mov	r2, #5
   12510:	add	r1, pc, r1
   12514:	bl	10fc4 <dcgettext@plt>
   12518:	mov	r1, r4
   1251c:	bl	116ec <__lxstat64@plt+0x500>
   12520:	ldr	r1, [pc, #100]	; 1258c <__lxstat64@plt+0x13a0>
   12524:	mov	r0, r4
   12528:	mov	r2, #5
   1252c:	add	r1, pc, r1
   12530:	bl	10fc4 <dcgettext@plt>
   12534:	mov	r1, r4
   12538:	bl	116ec <__lxstat64@plt+0x500>
   1253c:	ldr	r1, [pc, #76]	; 12590 <__lxstat64@plt+0x13a4>
   12540:	mov	r0, r4
   12544:	mov	r2, #5
   12548:	add	r1, pc, r1
   1254c:	bl	10fc4 <dcgettext@plt>
   12550:	mov	r1, r4
   12554:	bl	116ec <__lxstat64@plt+0x500>
   12558:	andeq	r5, r1, r8, lsr #31
   1255c:	strdeq	r0, [r0], -ip
   12560:	andeq	r6, r1, r0, lsl #2
   12564:	andeq	r6, r1, r8, lsl #1
   12568:	andeq	r5, r1, r4, asr #31
   1256c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12570:	andeq	r4, r0, r4, lsr #14
   12574:	ldrdeq	r5, [r1], -r8
   12578:	andeq	r5, r1, r0, lsl #29
   1257c:	andeq	r5, r1, r0, ror #27
   12580:	andeq	r5, r1, r4, asr sp
   12584:			; <UNDEFINED> instruction: 0x00015cb4
   12588:	andeq	r4, r0, r0, lsr r4
   1258c:	andeq	r4, r0, ip, lsr #8
   12590:	andeq	r4, r0, r8, lsr #8
   12594:	ldrb	r3, [r0, #1]
   12598:	sub	r3, r3, #71	; 0x47
   1259c:	cmp	r3, #51	; 0x33
   125a0:	addls	pc, pc, r3, lsl #2
   125a4:	b	12678 <__lxstat64@plt+0x148c>
   125a8:	b	12680 <__lxstat64@plt+0x1494>
   125ac:	b	12678 <__lxstat64@plt+0x148c>
   125b0:	b	12678 <__lxstat64@plt+0x148c>
   125b4:	b	12678 <__lxstat64@plt+0x148c>
   125b8:	b	12678 <__lxstat64@plt+0x148c>
   125bc:	b	12680 <__lxstat64@plt+0x1494>
   125c0:	b	12678 <__lxstat64@plt+0x148c>
   125c4:	b	12680 <__lxstat64@plt+0x1494>
   125c8:	b	12680 <__lxstat64@plt+0x1494>
   125cc:	b	12678 <__lxstat64@plt+0x148c>
   125d0:	b	12678 <__lxstat64@plt+0x148c>
   125d4:	b	12678 <__lxstat64@plt+0x148c>
   125d8:	b	12680 <__lxstat64@plt+0x1494>
   125dc:	b	12678 <__lxstat64@plt+0x148c>
   125e0:	b	12678 <__lxstat64@plt+0x148c>
   125e4:	b	12678 <__lxstat64@plt+0x148c>
   125e8:	b	12678 <__lxstat64@plt+0x148c>
   125ec:	b	12678 <__lxstat64@plt+0x148c>
   125f0:	b	12678 <__lxstat64@plt+0x148c>
   125f4:	b	12678 <__lxstat64@plt+0x148c>
   125f8:	b	12678 <__lxstat64@plt+0x148c>
   125fc:	b	12678 <__lxstat64@plt+0x148c>
   12600:	b	12678 <__lxstat64@plt+0x148c>
   12604:	b	12678 <__lxstat64@plt+0x148c>
   12608:	b	12678 <__lxstat64@plt+0x148c>
   1260c:	b	12678 <__lxstat64@plt+0x148c>
   12610:	b	12680 <__lxstat64@plt+0x1494>
   12614:	b	12680 <__lxstat64@plt+0x1494>
   12618:	b	12680 <__lxstat64@plt+0x1494>
   1261c:	b	12680 <__lxstat64@plt+0x1494>
   12620:	b	12680 <__lxstat64@plt+0x1494>
   12624:	b	12680 <__lxstat64@plt+0x1494>
   12628:	b	12680 <__lxstat64@plt+0x1494>
   1262c:	b	12680 <__lxstat64@plt+0x1494>
   12630:	b	12678 <__lxstat64@plt+0x148c>
   12634:	b	12678 <__lxstat64@plt+0x148c>
   12638:	b	12680 <__lxstat64@plt+0x1494>
   1263c:	b	12678 <__lxstat64@plt+0x148c>
   12640:	b	12678 <__lxstat64@plt+0x148c>
   12644:	b	12680 <__lxstat64@plt+0x1494>
   12648:	b	12680 <__lxstat64@plt+0x1494>
   1264c:	b	12680 <__lxstat64@plt+0x1494>
   12650:	b	12678 <__lxstat64@plt+0x148c>
   12654:	b	12680 <__lxstat64@plt+0x1494>
   12658:	b	12680 <__lxstat64@plt+0x1494>
   1265c:	b	12680 <__lxstat64@plt+0x1494>
   12660:	b	12680 <__lxstat64@plt+0x1494>
   12664:	b	12678 <__lxstat64@plt+0x148c>
   12668:	b	12680 <__lxstat64@plt+0x1494>
   1266c:	b	12680 <__lxstat64@plt+0x1494>
   12670:	b	12678 <__lxstat64@plt+0x148c>
   12674:	b	12680 <__lxstat64@plt+0x1494>
   12678:	mov	r0, #0
   1267c:	bx	lr
   12680:	mov	r0, #1
   12684:	bx	lr
   12688:	push	{r4, r5, r6, lr}
   1268c:	ldr	r4, [pc, #156]	; 12730 <__lxstat64@plt+0x1544>
   12690:	add	r4, pc, r4
   12694:	ldr	r6, [r4, #8]
   12698:	ldr	r5, [r4]
   1269c:	ldr	r0, [r5, r6, lsl #2]
   126a0:	ldrb	r3, [r0]
   126a4:	cmp	r3, #33	; 0x21
   126a8:	bne	126bc <__lxstat64@plt+0x14d0>
   126ac:	ldrb	r0, [r0, #1]
   126b0:	cmp	r0, #0
   126b4:	beq	126f0 <__lxstat64@plt+0x1504>
   126b8:	bl	11874 <__lxstat64@plt+0x688>
   126bc:	cmp	r3, #45	; 0x2d
   126c0:	bne	126b8 <__lxstat64@plt+0x14cc>
   126c4:	ldrb	r3, [r0, #1]
   126c8:	cmp	r3, #0
   126cc:	beq	126b8 <__lxstat64@plt+0x14cc>
   126d0:	ldrb	r3, [r0, #2]
   126d4:	cmp	r3, #0
   126d8:	bne	126b8 <__lxstat64@plt+0x14cc>
   126dc:	bl	12594 <__lxstat64@plt+0x13a8>
   126e0:	cmp	r0, #0
   126e4:	beq	12718 <__lxstat64@plt+0x152c>
   126e8:	pop	{r4, r5, r6, lr}
   126ec:	b	118f4 <__lxstat64@plt+0x708>
   126f0:	bl	118c0 <__lxstat64@plt+0x6d4>
   126f4:	ldr	r3, [r4, #8]
   126f8:	ldr	r2, [r4]
   126fc:	add	r1, r3, #1
   12700:	str	r1, [r4, #8]
   12704:	ldr	r3, [r2, r3, lsl #2]
   12708:	ldrb	r0, [r3]
   1270c:	rsbs	r0, r0, #1
   12710:	movcc	r0, #0
   12714:	pop	{r4, r5, r6, pc}
   12718:	ldr	r1, [pc, #20]	; 12734 <__lxstat64@plt+0x1548>
   1271c:	mov	r2, #5
   12720:	add	r1, pc, r1
   12724:	bl	10fc4 <dcgettext@plt>
   12728:	ldr	r1, [r5, r6, lsl #2]
   1272c:	bl	116ec <__lxstat64@plt+0x500>
   12730:	andeq	r5, r1, r4, ror #21
   12734:	andeq	r4, r0, r0, lsl #5
   12738:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1273c:	ldr	r4, [pc, #332]	; 12890 <__lxstat64@plt+0x16a4>
   12740:	add	r4, pc, r4
   12744:	ldr	r8, [r4, #8]
   12748:	ldr	r5, [r4]
   1274c:	add	r7, r8, #1
   12750:	ldr	r6, [r5, r7, lsl #2]
   12754:	lsl	r9, r7, #2
   12758:	mov	r0, r6
   1275c:	bl	11524 <__lxstat64@plt+0x338>
   12760:	cmp	r0, #0
   12764:	bne	12854 <__lxstat64@plt+0x1668>
   12768:	sub	r1, r9, #4
   1276c:	ldr	r3, [r5, r1]
   12770:	ldrb	r2, [r3]
   12774:	cmp	r2, #33	; 0x21
   12778:	bne	127b0 <__lxstat64@plt+0x15c4>
   1277c:	ldrb	r3, [r3, #1]
   12780:	cmp	r3, #0
   12784:	beq	12870 <__lxstat64@plt+0x1684>
   12788:	ldrb	r3, [r6]
   1278c:	cmp	r3, #45	; 0x2d
   12790:	beq	12818 <__lxstat64@plt+0x162c>
   12794:	ldr	r1, [pc, #248]	; 12894 <__lxstat64@plt+0x16a8>
   12798:	mov	r0, #0
   1279c:	mov	r2, #5
   127a0:	add	r1, pc, r1
   127a4:	bl	10fc4 <dcgettext@plt>
   127a8:	ldr	r1, [r5, r7, lsl #2]
   127ac:	bl	116ec <__lxstat64@plt+0x500>
   127b0:	cmp	r2, #40	; 0x28
   127b4:	bne	12788 <__lxstat64@plt+0x159c>
   127b8:	ldrb	r3, [r3, #1]
   127bc:	cmp	r3, #0
   127c0:	bne	12788 <__lxstat64@plt+0x159c>
   127c4:	add	r1, r5, r1
   127c8:	ldr	r3, [r1, #8]
   127cc:	ldrb	r2, [r3]
   127d0:	cmp	r2, #41	; 0x29
   127d4:	bne	12788 <__lxstat64@plt+0x159c>
   127d8:	ldrb	r9, [r3, #1]
   127dc:	cmp	r9, #0
   127e0:	bne	12788 <__lxstat64@plt+0x159c>
   127e4:	bl	118c0 <__lxstat64@plt+0x6d4>
   127e8:	ldr	r3, [r4, #8]
   127ec:	ldr	r2, [r4]
   127f0:	mov	r0, r9
   127f4:	add	r1, r3, #1
   127f8:	str	r1, [r4, #8]
   127fc:	ldr	r3, [r2, r3, lsl #2]
   12800:	ldrb	r4, [r3]
   12804:	adds	r4, r4, #0
   12808:	movne	r4, #1
   1280c:	bl	118c0 <__lxstat64@plt+0x6d4>
   12810:	mov	r0, r4
   12814:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12818:	ldrb	r3, [r6, #1]
   1281c:	cmp	r3, #97	; 0x61
   12820:	beq	12860 <__lxstat64@plt+0x1674>
   12824:	cmp	r3, #111	; 0x6f
   12828:	bne	12794 <__lxstat64@plt+0x15a8>
   1282c:	ldrb	r3, [r6, #2]
   12830:	cmp	r3, #0
   12834:	bne	12794 <__lxstat64@plt+0x15a8>
   12838:	ldr	r3, [pc, #88]	; 12898 <__lxstat64@plt+0x16ac>
   1283c:	add	r3, pc, r3
   12840:	ldr	r3, [r3, #4]
   12844:	cmp	r8, r3
   12848:	bge	1288c <__lxstat64@plt+0x16a0>
   1284c:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   12850:	b	129e0 <__lxstat64@plt+0x17f4>
   12854:	mov	r0, #0
   12858:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   1285c:	b	12048 <__lxstat64@plt+0xe5c>
   12860:	ldrb	r3, [r6, #2]
   12864:	cmp	r3, #0
   12868:	bne	12794 <__lxstat64@plt+0x15a8>
   1286c:	b	12838 <__lxstat64@plt+0x164c>
   12870:	mov	r0, #1
   12874:	bl	118c0 <__lxstat64@plt+0x6d4>
   12878:	bl	12688 <__lxstat64@plt+0x149c>
   1287c:	eor	r0, r0, #1
   12880:	uxtb	r4, r0
   12884:	mov	r0, r4
   12888:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1288c:	bl	11874 <__lxstat64@plt+0x688>
   12890:	andeq	r5, r1, r4, lsr sl
   12894:	andeq	r4, r0, ip, lsl r2
   12898:	andeq	r5, r1, r8, lsr r9
   1289c:	push	{r3, r4, r5, lr}
   128a0:	sub	r3, r0, #1
   128a4:	cmp	r3, #3
   128a8:	addls	pc, pc, r3, lsl #2
   128ac:	b	12974 <__lxstat64@plt+0x1788>
   128b0:	b	12944 <__lxstat64@plt+0x1758>
   128b4:	b	1293c <__lxstat64@plt+0x1750>
   128b8:	b	12934 <__lxstat64@plt+0x1748>
   128bc:	b	128c0 <__lxstat64@plt+0x16d4>
   128c0:	ldr	r3, [pc, #264]	; 129d0 <__lxstat64@plt+0x17e4>
   128c4:	add	r3, pc, r3
   128c8:	ldr	r0, [r3]
   128cc:	ldr	r3, [r3, #8]
   128d0:	ldr	r2, [r0, r3, lsl #2]
   128d4:	lsl	ip, r3, #2
   128d8:	ldrb	r1, [r2]
   128dc:	cmp	r1, #33	; 0x21
   128e0:	beq	129a4 <__lxstat64@plt+0x17b8>
   128e4:	cmp	r1, #40	; 0x28
   128e8:	bne	12988 <__lxstat64@plt+0x179c>
   128ec:	ldrb	r2, [r2, #1]
   128f0:	cmp	r2, #0
   128f4:	bne	12988 <__lxstat64@plt+0x179c>
   128f8:	add	r0, r0, ip
   128fc:	ldr	r2, [r0, #12]
   12900:	ldrb	r1, [r2]
   12904:	cmp	r1, #41	; 0x29
   12908:	bne	12988 <__lxstat64@plt+0x179c>
   1290c:	ldrb	r5, [r2, #1]
   12910:	cmp	r5, #0
   12914:	bne	12988 <__lxstat64@plt+0x179c>
   12918:	mov	r0, r5
   1291c:	bl	118c0 <__lxstat64@plt+0x6d4>
   12920:	bl	12688 <__lxstat64@plt+0x149c>
   12924:	mov	r4, r0
   12928:	mov	r0, r5
   1292c:	bl	118c0 <__lxstat64@plt+0x6d4>
   12930:	b	1296c <__lxstat64@plt+0x1780>
   12934:	pop	{r3, r4, r5, lr}
   12938:	b	12738 <__lxstat64@plt+0x154c>
   1293c:	pop	{r3, r4, r5, lr}
   12940:	b	12688 <__lxstat64@plt+0x149c>
   12944:	ldr	r3, [pc, #136]	; 129d4 <__lxstat64@plt+0x17e8>
   12948:	add	r3, pc, r3
   1294c:	ldr	r2, [r3, #8]
   12950:	ldr	r1, [r3]
   12954:	add	r0, r2, #1
   12958:	str	r0, [r3, #8]
   1295c:	ldr	r3, [r1, r2, lsl #2]
   12960:	ldrb	r4, [r3]
   12964:	adds	r4, r4, #0
   12968:	movne	r4, #1
   1296c:	mov	r0, r4
   12970:	pop	{r3, r4, r5, pc}
   12974:	cmp	r0, #0
   12978:	ble	129c8 <__lxstat64@plt+0x17dc>
   1297c:	ldr	r3, [pc, #84]	; 129d8 <__lxstat64@plt+0x17ec>
   12980:	add	r3, pc, r3
   12984:	ldr	r3, [r3, #8]
   12988:	ldr	r2, [pc, #76]	; 129dc <__lxstat64@plt+0x17f0>
   1298c:	add	r2, pc, r2
   12990:	ldr	r2, [r2, #4]
   12994:	cmp	r3, r2
   12998:	bge	129cc <__lxstat64@plt+0x17e0>
   1299c:	pop	{r3, r4, r5, lr}
   129a0:	b	129e0 <__lxstat64@plt+0x17f4>
   129a4:	ldrb	r2, [r2, #1]
   129a8:	cmp	r2, #0
   129ac:	bne	12988 <__lxstat64@plt+0x179c>
   129b0:	mov	r0, #1
   129b4:	bl	118c0 <__lxstat64@plt+0x6d4>
   129b8:	bl	12738 <__lxstat64@plt+0x154c>
   129bc:	eor	r0, r0, #1
   129c0:	uxtb	r4, r0
   129c4:	b	1296c <__lxstat64@plt+0x1780>
   129c8:	bl	111d4 <abort@plt>
   129cc:	bl	11874 <__lxstat64@plt+0x688>
   129d0:			; <UNDEFINED> instruction: 0x000158b0
   129d4:	andeq	r5, r1, ip, lsr #16
   129d8:	strdeq	r5, [r1], -r4
   129dc:	andeq	r5, r1, r8, ror #15
   129e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129e4:	sub	sp, sp, #28
   129e8:	ldr	r7, [pc, #884]	; 12d64 <__lxstat64@plt+0x1b78>
   129ec:	mov	r1, #0
   129f0:	ldr	sl, [pc, #880]	; 12d68 <__lxstat64@plt+0x1b7c>
   129f4:	ldr	r8, [pc, #880]	; 12d6c <__lxstat64@plt+0x1b80>
   129f8:	add	r7, pc, r7
   129fc:	ldr	r2, [pc, #876]	; 12d70 <__lxstat64@plt+0x1b84>
   12a00:	add	sl, pc, sl
   12a04:	ldr	r3, [pc, #872]	; 12d74 <__lxstat64@plt+0x1b88>
   12a08:	add	r8, pc, r8
   12a0c:	add	r2, pc, r2
   12a10:	str	r1, [sp, #12]
   12a14:	add	r3, pc, r3
   12a18:	str	r2, [sp, #16]
   12a1c:	str	r3, [sp, #20]
   12a20:	mov	r9, #1
   12a24:	ldmib	r7, {r2, r4}
   12a28:	cmp	r4, r2
   12a2c:	bge	12a94 <__lxstat64@plt+0x18a8>
   12a30:	ldr	r3, [r7]
   12a34:	add	fp, r3, r4, lsl #2
   12a38:	ldr	r5, [r3, r4, lsl #2]
   12a3c:	ldrb	r1, [r5]
   12a40:	cmp	r1, #33	; 0x21
   12a44:	bne	12a98 <__lxstat64@plt+0x18ac>
   12a48:	ldrb	r6, [r5, #1]
   12a4c:	cmp	r6, #0
   12a50:	beq	12a7c <__lxstat64@plt+0x1890>
   12a54:	b	12bf0 <__lxstat64@plt+0x1a04>
   12a58:	ldr	r3, [sl]
   12a5c:	add	fp, r3, r4, lsl #2
   12a60:	ldr	r5, [r3, r4, lsl #2]
   12a64:	ldrb	r1, [r5]
   12a68:	cmp	r1, #33	; 0x21
   12a6c:	bne	12a9c <__lxstat64@plt+0x18b0>
   12a70:	ldrb	r1, [r5, #1]
   12a74:	cmp	r1, #0
   12a78:	bne	12bf4 <__lxstat64@plt+0x1a08>
   12a7c:	mov	r0, #1
   12a80:	eor	r6, r6, r0
   12a84:	bl	118c0 <__lxstat64@plt+0x6d4>
   12a88:	ldmib	sl, {r2, r4}
   12a8c:	cmp	r4, r2
   12a90:	blt	12a58 <__lxstat64@plt+0x186c>
   12a94:	bl	11874 <__lxstat64@plt+0x688>
   12a98:	mov	r6, #0
   12a9c:	cmp	r1, #40	; 0x28
   12aa0:	bne	12ae0 <__lxstat64@plt+0x18f4>
   12aa4:	ldrb	r0, [r5, #1]
   12aa8:	cmp	r0, #0
   12aac:	beq	12c20 <__lxstat64@plt+0x1a34>
   12ab0:	rsb	r2, r4, r2
   12ab4:	cmp	r2, #3
   12ab8:	bgt	12b28 <__lxstat64@plt+0x193c>
   12abc:	cmp	r2, #3
   12ac0:	beq	12b28 <__lxstat64@plt+0x193c>
   12ac4:	cmp	r1, #45	; 0x2d
   12ac8:	beq	12b4c <__lxstat64@plt+0x1960>
   12acc:	mov	r0, #0
   12ad0:	subs	r4, r1, r0
   12ad4:	movne	r4, #1
   12ad8:	bl	118c0 <__lxstat64@plt+0x6d4>
   12adc:	b	12b7c <__lxstat64@plt+0x1990>
   12ae0:	rsb	r2, r4, r2
   12ae4:	cmp	r2, #3
   12ae8:	ble	12abc <__lxstat64@plt+0x18d0>
   12aec:	cmp	r1, #45	; 0x2d
   12af0:	bne	12b28 <__lxstat64@plt+0x193c>
   12af4:	ldrb	r2, [r5, #1]
   12af8:	cmp	r2, #108	; 0x6c
   12afc:	bne	12b28 <__lxstat64@plt+0x193c>
   12b00:	ldrb	r2, [r5, #2]
   12b04:	cmp	r2, #0
   12b08:	bne	12b28 <__lxstat64@plt+0x193c>
   12b0c:	add	r2, r4, #2
   12b10:	ldr	r0, [r3, r2, lsl #2]
   12b14:	stmib	sp, {r1, r3}
   12b18:	bl	11524 <__lxstat64@plt+0x338>
   12b1c:	ldmib	sp, {r1, r3}
   12b20:	cmp	r0, #0
   12b24:	bne	12ce0 <__lxstat64@plt+0x1af4>
   12b28:	add	r4, r4, #1
   12b2c:	ldr	r0, [r3, r4, lsl #2]
   12b30:	str	r1, [sp, #4]
   12b34:	bl	11524 <__lxstat64@plt+0x338>
   12b38:	ldr	r1, [sp, #4]
   12b3c:	cmp	r0, #0
   12b40:	bne	12c10 <__lxstat64@plt+0x1a24>
   12b44:	cmp	r1, #45	; 0x2d
   12b48:	bne	12acc <__lxstat64@plt+0x18e0>
   12b4c:	ldrb	r3, [r5, #1]
   12b50:	cmp	r3, #0
   12b54:	beq	12acc <__lxstat64@plt+0x18e0>
   12b58:	ldrb	r3, [r5, #2]
   12b5c:	cmp	r3, #0
   12b60:	bne	12acc <__lxstat64@plt+0x18e0>
   12b64:	mov	r0, r5
   12b68:	bl	12594 <__lxstat64@plt+0x13a8>
   12b6c:	cmp	r0, #0
   12b70:	beq	12d4c <__lxstat64@plt+0x1b60>
   12b74:	bl	118f4 <__lxstat64@plt+0x708>
   12b78:	mov	r4, r0
   12b7c:	ldr	r3, [r8, #8]
   12b80:	eor	r6, r6, r4
   12b84:	ldr	r2, [r8, #4]
   12b88:	and	r9, r9, r6
   12b8c:	cmp	r3, r2
   12b90:	bge	12cf0 <__lxstat64@plt+0x1b04>
   12b94:	ldr	r2, [r8]
   12b98:	ldr	r2, [r2, r3, lsl #2]
   12b9c:	ldrb	r3, [r2]
   12ba0:	cmp	r3, #45	; 0x2d
   12ba4:	bne	12bd8 <__lxstat64@plt+0x19ec>
   12ba8:	ldrb	r1, [r2, #1]
   12bac:	cmp	r1, #97	; 0x61
   12bb0:	beq	12bfc <__lxstat64@plt+0x1a10>
   12bb4:	ldr	r3, [sp, #12]
   12bb8:	cmp	r1, #111	; 0x6f
   12bbc:	orr	r9, r3, r9
   12bc0:	uxtb	r9, r9
   12bc4:	str	r9, [sp, #12]
   12bc8:	beq	12d00 <__lxstat64@plt+0x1b14>
   12bcc:	ldr	r0, [sp, #12]
   12bd0:	add	sp, sp, #28
   12bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bd8:	ldr	r3, [sp, #12]
   12bdc:	orr	r3, r3, r9
   12be0:	str	r3, [sp, #12]
   12be4:	ldr	r0, [sp, #12]
   12be8:	add	sp, sp, #28
   12bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bf0:	mov	r6, #0
   12bf4:	mov	r1, #33	; 0x21
   12bf8:	b	12ab0 <__lxstat64@plt+0x18c4>
   12bfc:	ldrb	r0, [r2, #2]
   12c00:	cmp	r0, #0
   12c04:	bne	12d1c <__lxstat64@plt+0x1b30>
   12c08:	bl	118c0 <__lxstat64@plt+0x6d4>
   12c0c:	b	12a24 <__lxstat64@plt+0x1838>
   12c10:	mov	r0, #0
   12c14:	bl	12048 <__lxstat64@plt+0xe5c>
   12c18:	mov	r4, r0
   12c1c:	b	12b7c <__lxstat64@plt+0x1990>
   12c20:	mov	r0, #1
   12c24:	bl	118c0 <__lxstat64@plt+0x6d4>
   12c28:	ldr	r2, [sp, #16]
   12c2c:	ldr	r1, [r2, #8]
   12c30:	ldr	lr, [r2, #4]
   12c34:	add	r3, r1, #1
   12c38:	cmp	lr, r3
   12c3c:	ble	12d14 <__lxstat64@plt+0x1b28>
   12c40:	ldr	ip, [r2]
   12c44:	rsb	lr, r1, lr
   12c48:	mov	r0, #1
   12c4c:	ldr	r3, [ip, r3, lsl #2]
   12c50:	ldrb	r2, [r3]
   12c54:	cmp	r2, #41	; 0x29
   12c58:	bne	12c68 <__lxstat64@plt+0x1a7c>
   12c5c:	ldrb	r3, [r3, #1]
   12c60:	cmp	r3, #0
   12c64:	beq	12c80 <__lxstat64@plt+0x1a94>
   12c68:	cmp	r0, #4
   12c6c:	beq	12cd8 <__lxstat64@plt+0x1aec>
   12c70:	add	r0, r0, #1
   12c74:	cmp	r0, lr
   12c78:	add	r3, r1, r0
   12c7c:	bne	12c4c <__lxstat64@plt+0x1a60>
   12c80:	bl	1289c <__lxstat64@plt+0x16b0>
   12c84:	ldr	r3, [sp, #20]
   12c88:	ldr	r2, [r3, #8]
   12c8c:	ldr	r3, [r3]
   12c90:	add	r5, r3, r2, lsl #2
   12c94:	ldr	r2, [r3, r2, lsl #2]
   12c98:	cmp	r2, #0
   12c9c:	mov	r4, r0
   12ca0:	beq	12d2c <__lxstat64@plt+0x1b40>
   12ca4:	ldrb	r3, [r2]
   12ca8:	cmp	r3, #41	; 0x29
   12cac:	bne	12cbc <__lxstat64@plt+0x1ad0>
   12cb0:	ldrb	r0, [r2, #1]
   12cb4:	cmp	r0, #0
   12cb8:	beq	12ad8 <__lxstat64@plt+0x18ec>
   12cbc:	ldr	r1, [pc, #180]	; 12d78 <__lxstat64@plt+0x1b8c>
   12cc0:	mov	r0, #0
   12cc4:	mov	r2, #5
   12cc8:	add	r1, pc, r1
   12ccc:	bl	10fc4 <dcgettext@plt>
   12cd0:	ldr	r1, [r5]
   12cd4:	bl	116ec <__lxstat64@plt+0x500>
   12cd8:	mov	r0, lr
   12cdc:	b	12c80 <__lxstat64@plt+0x1a94>
   12ce0:	mov	r0, #1
   12ce4:	bl	12048 <__lxstat64@plt+0xe5c>
   12ce8:	mov	r4, r0
   12cec:	b	12b7c <__lxstat64@plt+0x1990>
   12cf0:	ldr	r2, [sp, #12]
   12cf4:	orr	r2, r2, r9
   12cf8:	str	r2, [sp, #12]
   12cfc:	b	12bcc <__lxstat64@plt+0x19e0>
   12d00:	ldrb	r0, [r2, #2]
   12d04:	cmp	r0, #0
   12d08:	bne	12bcc <__lxstat64@plt+0x19e0>
   12d0c:	bl	118c0 <__lxstat64@plt+0x6d4>
   12d10:	b	12a20 <__lxstat64@plt+0x1834>
   12d14:	mov	r0, #1
   12d18:	b	12c80 <__lxstat64@plt+0x1a94>
   12d1c:	ldr	r1, [sp, #12]
   12d20:	orr	r1, r1, r9
   12d24:	str	r1, [sp, #12]
   12d28:	b	12bcc <__lxstat64@plt+0x19e0>
   12d2c:	ldr	r1, [pc, #72]	; 12d7c <__lxstat64@plt+0x1b90>
   12d30:	mov	r4, r2
   12d34:	mov	r0, r2
   12d38:	mov	r2, #5
   12d3c:	add	r1, pc, r1
   12d40:	bl	10fc4 <dcgettext@plt>
   12d44:	mov	r1, r4
   12d48:	bl	116ec <__lxstat64@plt+0x500>
   12d4c:	ldr	r1, [pc, #44]	; 12d80 <__lxstat64@plt+0x1b94>
   12d50:	mov	r2, #5
   12d54:	add	r1, pc, r1
   12d58:	bl	10fc4 <dcgettext@plt>
   12d5c:	ldr	r1, [fp]
   12d60:	bl	116ec <__lxstat64@plt+0x500>
   12d64:	andeq	r5, r1, ip, ror r7
   12d68:	andeq	r5, r1, r4, ror r7
   12d6c:	andeq	r5, r1, ip, ror #14
   12d70:	andeq	r5, r1, r8, ror #14
   12d74:	andeq	r5, r1, r0, ror #14
   12d78:	andeq	r3, r0, r4, lsr #26
   12d7c:	andeq	r3, r0, r0, lsr #25
   12d80:	andeq	r3, r0, ip, asr #24
   12d84:	push	{r3, r4, r5, r6, r7, lr}
   12d88:	subs	r4, r0, #0
   12d8c:	ldr	r6, [pc, #768]	; 13094 <__lxstat64@plt+0x1ea8>
   12d90:	add	r6, pc, r6
   12d94:	beq	12ddc <__lxstat64@plt+0x1bf0>
   12d98:	ldr	r3, [pc, #760]	; 13098 <__lxstat64@plt+0x1eac>
   12d9c:	mov	r2, #5
   12da0:	ldr	r1, [pc, #756]	; 1309c <__lxstat64@plt+0x1eb0>
   12da4:	mov	r0, #0
   12da8:	ldr	r3, [r6, r3]
   12dac:	add	r1, pc, r1
   12db0:	ldr	r5, [r3]
   12db4:	bl	10fc4 <dcgettext@plt>
   12db8:	ldr	r3, [pc, #736]	; 130a0 <__lxstat64@plt+0x1eb4>
   12dbc:	mov	r1, #1
   12dc0:	ldr	r3, [r6, r3]
   12dc4:	ldr	r3, [r3]
   12dc8:	mov	r2, r0
   12dcc:	mov	r0, r5
   12dd0:	bl	11138 <__fprintf_chk@plt>
   12dd4:	mov	r0, r4
   12dd8:	bl	110cc <exit@plt>
   12ddc:	ldr	r1, [pc, #704]	; 130a4 <__lxstat64@plt+0x1eb8>
   12de0:	mov	r2, #5
   12de4:	add	r1, pc, r1
   12de8:	bl	10fc4 <dcgettext@plt>
   12dec:	ldr	r3, [pc, #692]	; 130a8 <__lxstat64@plt+0x1ebc>
   12df0:	ldr	r5, [r6, r3]
   12df4:	ldr	r1, [r5]
   12df8:	bl	10f4c <fputs_unlocked@plt>
   12dfc:	ldr	r1, [pc, #680]	; 130ac <__lxstat64@plt+0x1ec0>
   12e00:	mov	r2, #5
   12e04:	mov	r0, r4
   12e08:	add	r1, pc, r1
   12e0c:	bl	10fc4 <dcgettext@plt>
   12e10:	ldr	r1, [r5]
   12e14:	bl	10f4c <fputs_unlocked@plt>
   12e18:	ldr	r1, [pc, #656]	; 130b0 <__lxstat64@plt+0x1ec4>
   12e1c:	mov	r2, #5
   12e20:	mov	r0, r4
   12e24:	add	r1, pc, r1
   12e28:	bl	10fc4 <dcgettext@plt>
   12e2c:	ldr	r1, [r5]
   12e30:	bl	10f4c <fputs_unlocked@plt>
   12e34:	ldr	r1, [pc, #632]	; 130b4 <__lxstat64@plt+0x1ec8>
   12e38:	mov	r2, #5
   12e3c:	mov	r0, r4
   12e40:	add	r1, pc, r1
   12e44:	bl	10fc4 <dcgettext@plt>
   12e48:	ldr	r1, [r5]
   12e4c:	bl	10f4c <fputs_unlocked@plt>
   12e50:	ldr	r1, [pc, #608]	; 130b8 <__lxstat64@plt+0x1ecc>
   12e54:	mov	r2, #5
   12e58:	mov	r0, r4
   12e5c:	add	r1, pc, r1
   12e60:	bl	10fc4 <dcgettext@plt>
   12e64:	ldr	r1, [r5]
   12e68:	bl	10f4c <fputs_unlocked@plt>
   12e6c:	ldr	r1, [pc, #584]	; 130bc <__lxstat64@plt+0x1ed0>
   12e70:	mov	r2, #5
   12e74:	mov	r0, r4
   12e78:	add	r1, pc, r1
   12e7c:	bl	10fc4 <dcgettext@plt>
   12e80:	ldr	r1, [r5]
   12e84:	bl	10f4c <fputs_unlocked@plt>
   12e88:	ldr	r1, [pc, #560]	; 130c0 <__lxstat64@plt+0x1ed4>
   12e8c:	mov	r2, #5
   12e90:	mov	r0, r4
   12e94:	add	r1, pc, r1
   12e98:	bl	10fc4 <dcgettext@plt>
   12e9c:	ldr	r1, [r5]
   12ea0:	bl	10f4c <fputs_unlocked@plt>
   12ea4:	ldr	r1, [pc, #536]	; 130c4 <__lxstat64@plt+0x1ed8>
   12ea8:	mov	r2, #5
   12eac:	mov	r0, r4
   12eb0:	add	r1, pc, r1
   12eb4:	bl	10fc4 <dcgettext@plt>
   12eb8:	ldr	r1, [r5]
   12ebc:	bl	10f4c <fputs_unlocked@plt>
   12ec0:	ldr	r1, [pc, #512]	; 130c8 <__lxstat64@plt+0x1edc>
   12ec4:	mov	r2, #5
   12ec8:	mov	r0, r4
   12ecc:	add	r1, pc, r1
   12ed0:	bl	10fc4 <dcgettext@plt>
   12ed4:	ldr	r1, [r5]
   12ed8:	bl	10f4c <fputs_unlocked@plt>
   12edc:	ldr	r1, [pc, #488]	; 130cc <__lxstat64@plt+0x1ee0>
   12ee0:	mov	r2, #5
   12ee4:	mov	r0, r4
   12ee8:	add	r1, pc, r1
   12eec:	bl	10fc4 <dcgettext@plt>
   12ef0:	ldr	r1, [r5]
   12ef4:	bl	10f4c <fputs_unlocked@plt>
   12ef8:	ldr	r1, [pc, #464]	; 130d0 <__lxstat64@plt+0x1ee4>
   12efc:	mov	r2, #5
   12f00:	mov	r0, r4
   12f04:	add	r1, pc, r1
   12f08:	bl	10fc4 <dcgettext@plt>
   12f0c:	ldr	r1, [r5]
   12f10:	bl	10f4c <fputs_unlocked@plt>
   12f14:	ldr	r1, [pc, #440]	; 130d4 <__lxstat64@plt+0x1ee8>
   12f18:	mov	r2, #5
   12f1c:	mov	r0, r4
   12f20:	add	r1, pc, r1
   12f24:	bl	10fc4 <dcgettext@plt>
   12f28:	ldr	r1, [r5]
   12f2c:	bl	10f4c <fputs_unlocked@plt>
   12f30:	ldr	r1, [pc, #416]	; 130d8 <__lxstat64@plt+0x1eec>
   12f34:	mov	r2, #5
   12f38:	mov	r0, r4
   12f3c:	add	r1, pc, r1
   12f40:	bl	10fc4 <dcgettext@plt>
   12f44:	ldr	r1, [r5]
   12f48:	bl	10f4c <fputs_unlocked@plt>
   12f4c:	ldr	r1, [pc, #392]	; 130dc <__lxstat64@plt+0x1ef0>
   12f50:	mov	r2, #5
   12f54:	mov	r0, r4
   12f58:	add	r1, pc, r1
   12f5c:	bl	10fc4 <dcgettext@plt>
   12f60:	ldr	r1, [r5]
   12f64:	bl	10f4c <fputs_unlocked@plt>
   12f68:	ldr	r1, [pc, #368]	; 130e0 <__lxstat64@plt+0x1ef4>
   12f6c:	mov	r2, #5
   12f70:	mov	r0, r4
   12f74:	add	r1, pc, r1
   12f78:	bl	10fc4 <dcgettext@plt>
   12f7c:	ldr	r1, [r5]
   12f80:	bl	10f4c <fputs_unlocked@plt>
   12f84:	ldr	r1, [pc, #344]	; 130e4 <__lxstat64@plt+0x1ef8>
   12f88:	mov	r2, #5
   12f8c:	mov	r0, r4
   12f90:	add	r1, pc, r1
   12f94:	bl	10fc4 <dcgettext@plt>
   12f98:	ldr	r1, [pc, #328]	; 130e8 <__lxstat64@plt+0x1efc>
   12f9c:	mov	r2, #5
   12fa0:	add	r1, pc, r1
   12fa4:	mov	r5, r0
   12fa8:	mov	r0, r4
   12fac:	bl	10fc4 <dcgettext@plt>
   12fb0:	mov	r1, r5
   12fb4:	mov	r2, r0
   12fb8:	mov	r0, #1
   12fbc:	bl	11120 <__printf_chk@plt>
   12fc0:	ldr	r1, [pc, #292]	; 130ec <__lxstat64@plt+0x1f00>
   12fc4:	mov	r2, #5
   12fc8:	mov	r0, r4
   12fcc:	add	r1, pc, r1
   12fd0:	bl	10fc4 <dcgettext@plt>
   12fd4:	ldr	r2, [pc, #276]	; 130f0 <__lxstat64@plt+0x1f04>
   12fd8:	ldr	r3, [pc, #276]	; 130f4 <__lxstat64@plt+0x1f08>
   12fdc:	add	r2, pc, r2
   12fe0:	add	r3, pc, r3
   12fe4:	mov	r1, r0
   12fe8:	mov	r0, #1
   12fec:	bl	11120 <__printf_chk@plt>
   12ff0:	mov	r0, #5
   12ff4:	mov	r1, r4
   12ff8:	bl	11174 <setlocale@plt>
   12ffc:	cmp	r0, #0
   13000:	beq	1301c <__lxstat64@plt+0x1e30>
   13004:	ldr	r1, [pc, #236]	; 130f8 <__lxstat64@plt+0x1f0c>
   13008:	mov	r2, #3
   1300c:	add	r1, pc, r1
   13010:	bl	111c8 <strncmp@plt>
   13014:	cmp	r0, #0
   13018:	bne	13058 <__lxstat64@plt+0x1e6c>
   1301c:	ldr	r3, [pc, #124]	; 130a0 <__lxstat64@plt+0x1eb4>
   13020:	ldr	r5, [r6, r3]
   13024:	ldr	r1, [pc, #208]	; 130fc <__lxstat64@plt+0x1f10>
   13028:	mov	r2, #5
   1302c:	mov	r0, #0
   13030:	add	r1, pc, r1
   13034:	bl	10fc4 <dcgettext@plt>
   13038:	mov	r6, r0
   1303c:	ldr	r0, [r5]
   13040:	bl	13244 <close_stdout@@Base+0x118>
   13044:	mov	r1, r6
   13048:	mov	r2, r0
   1304c:	mov	r0, #1
   13050:	bl	11120 <__printf_chk@plt>
   13054:	b	12dd4 <__lxstat64@plt+0x1be8>
   13058:	ldr	r1, [pc, #160]	; 13100 <__lxstat64@plt+0x1f14>
   1305c:	mov	r2, #5
   13060:	mov	r0, r4
   13064:	add	r1, pc, r1
   13068:	bl	10fc4 <dcgettext@plt>
   1306c:	ldr	r3, [pc, #44]	; 130a0 <__lxstat64@plt+0x1eb4>
   13070:	ldr	r5, [r6, r3]
   13074:	mov	r7, r0
   13078:	ldr	r0, [r5]
   1307c:	bl	13244 <close_stdout@@Base+0x118>
   13080:	mov	r1, r7
   13084:	mov	r2, r0
   13088:	mov	r0, #1
   1308c:	bl	11120 <__printf_chk@plt>
   13090:	b	13024 <__lxstat64@plt+0x1e38>
   13094:	andeq	r5, r1, r8, ror #4
   13098:	andeq	r0, r0, r4, lsl #2
   1309c:	andeq	r3, r0, r8, asr ip
   130a0:	andeq	r0, r0, r0, lsr #2
   130a4:	andeq	r3, r0, r8, asr #24
   130a8:	andeq	r0, r0, r4, lsl r1
   130ac:	andeq	r3, r0, ip, ror ip
   130b0:	muleq	r0, r4, ip
   130b4:	andeq	r3, r0, r8, lsr #25
   130b8:	andeq	r3, r0, r4, asr #25
   130bc:	andeq	r3, r0, r0, lsr #26
   130c0:	andeq	r3, r0, r0, lsl #28
   130c4:	andeq	r3, r0, r0, ror #29
   130c8:	andeq	r4, r0, ip, lsr r0
   130cc:	andeq	r4, r0, r0, ror #1
   130d0:	andeq	r4, r0, r0, ror r1
   130d4:	andeq	r4, r0, r8, ror #4
   130d8:	andeq	r4, r0, r0, ror r3
   130dc:	andeq	r4, r0, r4, ror r4
   130e0:	andeq	r4, r0, ip, lsr r5
   130e4:	andeq	r4, r0, r8, lsr #11
   130e8:	andeq	r4, r0, r8, asr r6
   130ec:	andeq	r4, r0, ip, lsr r6
   130f0:	andeq	r4, r0, r4, asr #12
   130f4:	andeq	r4, r0, r0, asr r6
   130f8:	andeq	r4, r0, ip, asr #12
   130fc:	andeq	r4, r0, r4, ror r6
   13100:	strdeq	r4, [r0], -r8
   13104:	ldr	r3, [pc, #8]	; 13114 <__lxstat64@plt+0x1f28>
   13108:	add	r3, pc, r3
   1310c:	str	r0, [r3]
   13110:	bx	lr
   13114:	andeq	r5, r1, r8, ror r0
   13118:	ldr	r3, [pc, #8]	; 13128 <__lxstat64@plt+0x1f3c>
   1311c:	add	r3, pc, r3
   13120:	strb	r0, [r3, #4]
   13124:	bx	lr
   13128:	andeq	r5, r1, r4, rrx

0001312c <close_stdout@@Base>:
   1312c:	push	{r4, r5, r6, r7, lr}
   13130:	sub	sp, sp, #12
   13134:	ldr	r4, [pc, #228]	; 13220 <close_stdout@@Base+0xf4>
   13138:	ldr	r3, [pc, #228]	; 13224 <close_stdout@@Base+0xf8>
   1313c:	add	r4, pc, r4
   13140:	ldr	r3, [r4, r3]
   13144:	ldr	r0, [r3]
   13148:	bl	15698 <close_stdout@@Base+0x256c>
   1314c:	cmp	r0, #0
   13150:	beq	13178 <close_stdout@@Base+0x4c>
   13154:	ldr	r3, [pc, #204]	; 13228 <close_stdout@@Base+0xfc>
   13158:	add	r3, pc, r3
   1315c:	ldrb	r3, [r3, #4]
   13160:	cmp	r3, #0
   13164:	beq	13198 <close_stdout@@Base+0x6c>
   13168:	bl	110f0 <__errno_location@plt>
   1316c:	ldr	r3, [r0]
   13170:	cmp	r3, #32
   13174:	bne	13198 <close_stdout@@Base+0x6c>
   13178:	ldr	r3, [pc, #172]	; 1322c <close_stdout@@Base+0x100>
   1317c:	ldr	r3, [r4, r3]
   13180:	ldr	r0, [r3]
   13184:	bl	15698 <close_stdout@@Base+0x256c>
   13188:	cmp	r0, #0
   1318c:	bne	131ec <close_stdout@@Base+0xc0>
   13190:	add	sp, sp, #12
   13194:	pop	{r4, r5, r6, r7, pc}
   13198:	ldr	r1, [pc, #144]	; 13230 <close_stdout@@Base+0x104>
   1319c:	mov	r0, #0
   131a0:	mov	r2, #5
   131a4:	add	r1, pc, r1
   131a8:	bl	10fc4 <dcgettext@plt>
   131ac:	ldr	r3, [pc, #128]	; 13234 <close_stdout@@Base+0x108>
   131b0:	ldr	r5, [pc, r3]
   131b4:	cmp	r5, #0
   131b8:	mov	r6, r0
   131bc:	beq	131fc <close_stdout@@Base+0xd0>
   131c0:	bl	110f0 <__errno_location@plt>
   131c4:	ldr	r7, [r0]
   131c8:	mov	r0, r5
   131cc:	bl	14a48 <close_stdout@@Base+0x191c>
   131d0:	ldr	r2, [pc, #96]	; 13238 <close_stdout@@Base+0x10c>
   131d4:	str	r6, [sp]
   131d8:	mov	r1, r7
   131dc:	add	r2, pc, r2
   131e0:	mov	r3, r0
   131e4:	mov	r0, #0
   131e8:	bl	1106c <error@plt>
   131ec:	ldr	r3, [pc, #72]	; 1323c <close_stdout@@Base+0x110>
   131f0:	ldr	r3, [r4, r3]
   131f4:	ldr	r0, [r3]
   131f8:	bl	10f94 <_exit@plt>
   131fc:	bl	110f0 <__errno_location@plt>
   13200:	ldr	r2, [pc, #56]	; 13240 <close_stdout@@Base+0x114>
   13204:	add	r2, pc, r2
   13208:	mov	r3, r0
   1320c:	mov	r0, r5
   13210:	ldr	r1, [r3]
   13214:	mov	r3, r6
   13218:	bl	1106c <error@plt>
   1321c:	b	131ec <close_stdout@@Base+0xc0>
   13220:			; <UNDEFINED> instruction: 0x00014ebc
   13224:	andeq	r0, r0, r4, lsl r1
   13228:	andeq	r5, r1, r8, lsr #32
   1322c:	andeq	r0, r0, r4, lsl #2
   13230:			; <UNDEFINED> instruction: 0x000045bc
   13234:	ldrdeq	r4, [r1], -r0
   13238:	muleq	r0, r0, r5
   1323c:	andeq	r0, r0, r8, lsl r1
   13240:	andeq	r4, r0, ip, ror #10
   13244:	ldrb	r3, [r0]
   13248:	cmp	r3, #47	; 0x2f
   1324c:	bne	13268 <close_stdout@@Base+0x13c>
   13250:	add	r2, r0, #1
   13254:	mov	r0, r2
   13258:	add	r2, r2, #1
   1325c:	ldrb	r3, [r0]
   13260:	cmp	r3, #47	; 0x2f
   13264:	beq	13254 <close_stdout@@Base+0x128>
   13268:	cmp	r3, #0
   1326c:	bxeq	lr
   13270:	mov	r2, r0
   13274:	mov	r1, #0
   13278:	cmp	r3, #47	; 0x2f
   1327c:	moveq	r1, #1
   13280:	beq	13290 <close_stdout@@Base+0x164>
   13284:	cmp	r1, #0
   13288:	movne	r0, r2
   1328c:	movne	r1, #0
   13290:	ldrb	r3, [r2, #1]!
   13294:	cmp	r3, #0
   13298:	bne	13278 <close_stdout@@Base+0x14c>
   1329c:	bx	lr
   132a0:	push	{r4, lr}
   132a4:	mov	r4, r0
   132a8:	bl	110d8 <strlen@plt>
   132ac:	cmp	r0, #1
   132b0:	popls	{r4, pc}
   132b4:	sub	r3, r0, #1
   132b8:	ldrb	r2, [r4, r3]
   132bc:	cmp	r2, #47	; 0x2f
   132c0:	popne	{r4, pc}
   132c4:	mov	r0, r3
   132c8:	cmp	r0, #1
   132cc:	sub	r3, r3, #1
   132d0:	beq	132e4 <close_stdout@@Base+0x1b8>
   132d4:	ldrb	r2, [r4, r3]
   132d8:	cmp	r2, #47	; 0x2f
   132dc:	popne	{r4, pc}
   132e0:	b	132c4 <close_stdout@@Base+0x198>
   132e4:	pop	{r4, pc}
   132e8:	push	{r3, r4, r5, r6, r7, lr}
   132ec:	add	r6, r2, #19
   132f0:	mov	r4, r0
   132f4:	mov	r5, r1
   132f8:	mov	r3, #0
   132fc:	strb	r3, [r2, #20]
   13300:	mov	r0, r4
   13304:	mov	r1, r5
   13308:	mov	r2, #10
   1330c:	mov	r3, #0
   13310:	bl	15eec <close_stdout@@Base+0x2dc0>
   13314:	mov	r7, r6
   13318:	mov	r0, r4
   1331c:	mov	r1, r5
   13320:	mov	r3, #0
   13324:	add	ip, r2, #48	; 0x30
   13328:	mov	r2, #10
   1332c:	strb	ip, [r6], #-1
   13330:	bl	15eec <close_stdout@@Base+0x2dc0>
   13334:	mov	r4, r0
   13338:	mov	r5, r1
   1333c:	orrs	r3, r4, r5
   13340:	bne	13300 <close_stdout@@Base+0x1d4>
   13344:	mov	r0, r7
   13348:	pop	{r3, r4, r5, r6, r7, pc}
   1334c:	push	{r3, r4, r5, r6, r7, lr}
   13350:	subs	r4, r0, #0
   13354:	ldr	r5, [pc, #172]	; 13408 <close_stdout@@Base+0x2dc>
   13358:	add	r5, pc, r5
   1335c:	beq	133e4 <close_stdout@@Base+0x2b8>
   13360:	mov	r1, #47	; 0x2f
   13364:	bl	11180 <strrchr@plt>
   13368:	subs	r6, r0, #0
   1336c:	beq	133c8 <close_stdout@@Base+0x29c>
   13370:	add	r7, r6, #1
   13374:	rsb	r3, r4, r7
   13378:	cmp	r3, #6
   1337c:	ble	133c8 <close_stdout@@Base+0x29c>
   13380:	ldr	r1, [pc, #132]	; 1340c <close_stdout@@Base+0x2e0>
   13384:	sub	r0, r6, #6
   13388:	mov	r2, #7
   1338c:	add	r1, pc, r1
   13390:	bl	111c8 <strncmp@plt>
   13394:	cmp	r0, #0
   13398:	bne	133c8 <close_stdout@@Base+0x29c>
   1339c:	ldr	r1, [pc, #108]	; 13410 <close_stdout@@Base+0x2e4>
   133a0:	mov	r0, r7
   133a4:	mov	r2, #3
   133a8:	add	r1, pc, r1
   133ac:	bl	111c8 <strncmp@plt>
   133b0:	cmp	r0, #0
   133b4:	movne	r4, r7
   133b8:	ldreq	r3, [pc, #84]	; 13414 <close_stdout@@Base+0x2e8>
   133bc:	addeq	r4, r6, #4
   133c0:	ldreq	r3, [r5, r3]
   133c4:	streq	r4, [r3]
   133c8:	ldr	r2, [pc, #72]	; 13418 <close_stdout@@Base+0x2ec>
   133cc:	ldr	r3, [pc, #72]	; 1341c <close_stdout@@Base+0x2f0>
   133d0:	ldr	r2, [r5, r2]
   133d4:	str	r4, [r2]
   133d8:	ldr	r3, [r5, r3]
   133dc:	str	r4, [r3]
   133e0:	pop	{r3, r4, r5, r6, r7, pc}
   133e4:	ldr	r3, [pc, #52]	; 13420 <close_stdout@@Base+0x2f4>
   133e8:	mov	r1, #1
   133ec:	ldr	r0, [pc, #48]	; 13424 <close_stdout@@Base+0x2f8>
   133f0:	mov	r2, #55	; 0x37
   133f4:	ldr	r3, [r5, r3]
   133f8:	add	r0, pc, r0
   133fc:	ldr	r3, [r3]
   13400:	bl	11024 <fwrite@plt>
   13404:	bl	111d4 <abort@plt>
   13408:	andeq	r4, r1, r0, lsr #25
   1340c:	andeq	r4, r0, r0, lsr #8
   13410:	andeq	r4, r0, ip, lsl #8
   13414:	andeq	r0, r0, r8, lsr #2
   13418:	andeq	r0, r0, r0, lsr #2
   1341c:	andeq	r0, r0, ip, lsl r1
   13420:	andeq	r0, r0, r4, lsl #2
   13424:	andeq	r4, r0, ip, ror r3
   13428:	push	{r3, lr}
   1342c:	mov	r3, r0
   13430:	mov	r2, #0
   13434:	cmp	r1, #8
   13438:	str	r2, [r3], #4
   1343c:	add	r3, r3, #4
   13440:	str	r2, [r0, #4]
   13444:	str	r2, [r3], #4
   13448:	str	r2, [r3], #4
   1344c:	str	r2, [r3], #4
   13450:	str	r2, [r3], #4
   13454:	str	r2, [r3], #4
   13458:	str	r2, [r3], #4
   1345c:	str	r2, [r3], #4
   13460:	str	r2, [r3], #4
   13464:	str	r2, [r3], #4
   13468:	str	r2, [r3]
   1346c:	beq	13478 <close_stdout@@Base+0x34c>
   13470:	str	r1, [r0]
   13474:	pop	{r3, pc}
   13478:	bl	111d4 <abort@plt>
   1347c:	push	{r4, r5, r6, lr}
   13480:	mov	r4, r0
   13484:	mov	r6, r1
   13488:	mov	r0, #0
   1348c:	mov	r1, r4
   13490:	mov	r2, #5
   13494:	bl	10fc4 <dcgettext@plt>
   13498:	cmp	r0, r4
   1349c:	mov	r5, r0
   134a0:	beq	134a8 <close_stdout@@Base+0x37c>
   134a4:	pop	{r4, r5, r6, pc}
   134a8:	bl	15718 <close_stdout@@Base+0x25ec>
   134ac:	ldrb	r3, [r0]
   134b0:	bic	r3, r3, #32
   134b4:	cmp	r3, #85	; 0x55
   134b8:	bne	1352c <close_stdout@@Base+0x400>
   134bc:	ldrb	r3, [r0, #1]
   134c0:	bic	r3, r3, #32
   134c4:	cmp	r3, #84	; 0x54
   134c8:	bne	13518 <close_stdout@@Base+0x3ec>
   134cc:	ldrb	r3, [r0, #2]
   134d0:	bic	r3, r3, #32
   134d4:	cmp	r3, #70	; 0x46
   134d8:	bne	13518 <close_stdout@@Base+0x3ec>
   134dc:	ldrb	r3, [r0, #3]
   134e0:	cmp	r3, #45	; 0x2d
   134e4:	bne	13518 <close_stdout@@Base+0x3ec>
   134e8:	ldrb	r3, [r0, #4]
   134ec:	cmp	r3, #56	; 0x38
   134f0:	bne	13518 <close_stdout@@Base+0x3ec>
   134f4:	ldrb	r3, [r0, #5]
   134f8:	cmp	r3, #0
   134fc:	bne	13518 <close_stdout@@Base+0x3ec>
   13500:	ldrb	r3, [r5]
   13504:	cmp	r3, #96	; 0x60
   13508:	beq	135a4 <close_stdout@@Base+0x478>
   1350c:	ldr	r0, [pc, #180]	; 135c8 <close_stdout@@Base+0x49c>
   13510:	add	r0, pc, r0
   13514:	pop	{r4, r5, r6, pc}
   13518:	cmp	r6, #7
   1351c:	beq	135b0 <close_stdout@@Base+0x484>
   13520:	ldr	r0, [pc, #164]	; 135cc <close_stdout@@Base+0x4a0>
   13524:	add	r0, pc, r0
   13528:	pop	{r4, r5, r6, pc}
   1352c:	cmp	r3, #71	; 0x47
   13530:	bne	13518 <close_stdout@@Base+0x3ec>
   13534:	ldrb	r3, [r0, #1]
   13538:	bic	r3, r3, #32
   1353c:	cmp	r3, #66	; 0x42
   13540:	bne	13518 <close_stdout@@Base+0x3ec>
   13544:	ldrb	r3, [r0, #2]
   13548:	cmp	r3, #49	; 0x31
   1354c:	bne	13518 <close_stdout@@Base+0x3ec>
   13550:	ldrb	r3, [r0, #3]
   13554:	cmp	r3, #56	; 0x38
   13558:	bne	13518 <close_stdout@@Base+0x3ec>
   1355c:	ldrb	r3, [r0, #4]
   13560:	cmp	r3, #48	; 0x30
   13564:	bne	13518 <close_stdout@@Base+0x3ec>
   13568:	ldrb	r3, [r0, #5]
   1356c:	cmp	r3, #51	; 0x33
   13570:	bne	13518 <close_stdout@@Base+0x3ec>
   13574:	ldrb	r3, [r0, #6]
   13578:	cmp	r3, #48	; 0x30
   1357c:	bne	13518 <close_stdout@@Base+0x3ec>
   13580:	ldrb	r3, [r0, #7]
   13584:	cmp	r3, #0
   13588:	bne	13518 <close_stdout@@Base+0x3ec>
   1358c:	ldrb	r3, [r5]
   13590:	cmp	r3, #96	; 0x60
   13594:	beq	135bc <close_stdout@@Base+0x490>
   13598:	ldr	r0, [pc, #48]	; 135d0 <close_stdout@@Base+0x4a4>
   1359c:	add	r0, pc, r0
   135a0:	pop	{r4, r5, r6, pc}
   135a4:	ldr	r0, [pc, #40]	; 135d4 <close_stdout@@Base+0x4a8>
   135a8:	add	r0, pc, r0
   135ac:	pop	{r4, r5, r6, pc}
   135b0:	ldr	r0, [pc, #32]	; 135d8 <close_stdout@@Base+0x4ac>
   135b4:	add	r0, pc, r0
   135b8:	pop	{r4, r5, r6, pc}
   135bc:	ldr	r0, [pc, #24]	; 135dc <close_stdout@@Base+0x4b0>
   135c0:	add	r0, pc, r0
   135c4:	pop	{r4, r5, r6, pc}
   135c8:	andeq	r4, r0, r8, asr #5
   135cc:			; <UNDEFINED> instruction: 0x000042bc
   135d0:	andeq	r4, r0, r0, asr #4
   135d4:	andeq	r4, r0, r4, asr #4
   135d8:	andeq	r4, r0, r0, lsr r2
   135dc:	andeq	r4, r0, r8, lsr #4
   135e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135e4:	sub	sp, sp, #124	; 0x7c
   135e8:	ldr	ip, [pc, #3304]	; 142d8 <close_stdout@@Base+0x11ac>
   135ec:	mov	sl, r1
   135f0:	str	r0, [sp, #40]	; 0x28
   135f4:	mov	r8, r3
   135f8:	ldr	r0, [pc, #3292]	; 142dc <close_stdout@@Base+0x11b0>
   135fc:	add	ip, pc, ip
   13600:	str	r2, [sp, #32]
   13604:	ldr	r1, [sp, #164]	; 0xa4
   13608:	mov	r3, ip
   1360c:	ldr	r0, [ip, r0]
   13610:	ldr	r2, [sp, #172]	; 0xac
   13614:	ubfx	r1, r1, #1, #1
   13618:	str	r1, [sp, #36]	; 0x24
   1361c:	str	r0, [sp, #56]	; 0x38
   13620:	ldr	r0, [sp, #168]	; 0xa8
   13624:	ldr	r1, [sp, #176]	; 0xb0
   13628:	str	r2, [sp, #72]	; 0x48
   1362c:	str	r0, [sp, #48]	; 0x30
   13630:	ldr	r0, [sp, #56]	; 0x38
   13634:	str	r1, [sp, #68]	; 0x44
   13638:	ldr	r3, [r0]
   1363c:	str	r3, [sp, #116]	; 0x74
   13640:	bl	1103c <__ctype_get_mb_cur_max@plt>
   13644:	ldr	r2, [sp, #160]	; 0xa0
   13648:	str	r0, [sp, #64]	; 0x40
   1364c:	cmp	r2, #8
   13650:	addls	pc, pc, r2, lsl #2
   13654:	b	141b4 <close_stdout@@Base+0x1088>
   13658:	b	1367c <close_stdout@@Base+0x550>
   1365c:	b	13ecc <close_stdout@@Base+0xda0>
   13660:	b	13efc <close_stdout@@Base+0xdd0>
   13664:	b	13dac <close_stdout@@Base+0xc80>
   13668:	b	13dec <close_stdout@@Base+0xcc0>
   1366c:	b	13e18 <close_stdout@@Base+0xcec>
   13670:	b	13e38 <close_stdout@@Base+0xd0c>
   13674:	b	13e38 <close_stdout@@Base+0xd0c>
   13678:	b	13e38 <close_stdout@@Base+0xd0c>
   1367c:	mov	r2, #0
   13680:	str	r2, [sp, #36]	; 0x24
   13684:	mov	r9, r2
   13688:	str	r2, [sp, #24]
   1368c:	str	r2, [sp, #28]
   13690:	str	r2, [sp, #52]	; 0x34
   13694:	ldr	r0, [sp, #36]	; 0x24
   13698:	mov	fp, #0
   1369c:	ldr	r1, [sp, #24]
   136a0:	eor	r2, r0, #1
   136a4:	eor	r3, r1, #1
   136a8:	and	r3, r2, r3
   136ac:	and	r2, r1, r0
   136b0:	str	r3, [sp, #44]	; 0x2c
   136b4:	str	r2, [sp, #76]	; 0x4c
   136b8:	cmn	r8, #1
   136bc:	beq	13a3c <close_stdout@@Base+0x910>
   136c0:	subs	r3, fp, r8
   136c4:	movne	r3, #1
   136c8:	cmp	r3, #0
   136cc:	beq	13a54 <close_stdout@@Base+0x928>
   136d0:	ldr	r3, [sp, #28]
   136d4:	ldr	r0, [sp, #24]
   136d8:	adds	r7, r3, #0
   136dc:	movne	r7, #1
   136e0:	ands	r6, r7, r0
   136e4:	bne	13f40 <close_stdout@@Base+0xe14>
   136e8:	ldr	r1, [sp, #32]
   136ec:	add	r5, r1, fp
   136f0:	ldrb	r4, [r5]
   136f4:	cmp	r4, #126	; 0x7e
   136f8:	addls	pc, pc, r4, lsl #2
   136fc:	b	13cc0 <close_stdout@@Base+0xb94>
   13700:	b	13bcc <close_stdout@@Base+0xaa0>
   13704:	b	13cc0 <close_stdout@@Base+0xb94>
   13708:	b	13cc0 <close_stdout@@Base+0xb94>
   1370c:	b	13cc0 <close_stdout@@Base+0xb94>
   13710:	b	13cc0 <close_stdout@@Base+0xb94>
   13714:	b	13cc0 <close_stdout@@Base+0xb94>
   13718:	b	13cc0 <close_stdout@@Base+0xb94>
   1371c:	b	13bb4 <close_stdout@@Base+0xa88>
   13720:	b	13b9c <close_stdout@@Base+0xa70>
   13724:	b	13bc4 <close_stdout@@Base+0xa98>
   13728:	b	13bbc <close_stdout@@Base+0xa90>
   1372c:	b	13bac <close_stdout@@Base+0xa80>
   13730:	b	13ba4 <close_stdout@@Base+0xa78>
   13734:	b	13b68 <close_stdout@@Base+0xa3c>
   13738:	b	13cc0 <close_stdout@@Base+0xb94>
   1373c:	b	13cc0 <close_stdout@@Base+0xb94>
   13740:	b	13cc0 <close_stdout@@Base+0xb94>
   13744:	b	13cc0 <close_stdout@@Base+0xb94>
   13748:	b	13cc0 <close_stdout@@Base+0xb94>
   1374c:	b	13cc0 <close_stdout@@Base+0xb94>
   13750:	b	13cc0 <close_stdout@@Base+0xb94>
   13754:	b	13cc0 <close_stdout@@Base+0xb94>
   13758:	b	13cc0 <close_stdout@@Base+0xb94>
   1375c:	b	13cc0 <close_stdout@@Base+0xb94>
   13760:	b	13cc0 <close_stdout@@Base+0xb94>
   13764:	b	13cc0 <close_stdout@@Base+0xb94>
   13768:	b	13cc0 <close_stdout@@Base+0xb94>
   1376c:	b	13cc0 <close_stdout@@Base+0xb94>
   13770:	b	13cc0 <close_stdout@@Base+0xb94>
   13774:	b	13cc0 <close_stdout@@Base+0xb94>
   13778:	b	13cc0 <close_stdout@@Base+0xb94>
   1377c:	b	13cc0 <close_stdout@@Base+0xb94>
   13780:	b	13af4 <close_stdout@@Base+0x9c8>
   13784:	b	13af4 <close_stdout@@Base+0x9c8>
   13788:	b	13af4 <close_stdout@@Base+0x9c8>
   1378c:	b	13aec <close_stdout@@Base+0x9c0>
   13790:	b	13af4 <close_stdout@@Base+0x9c8>
   13794:	b	139c8 <close_stdout@@Base+0x89c>
   13798:	b	13af4 <close_stdout@@Base+0x9c8>
   1379c:	b	13c68 <close_stdout@@Base+0xb3c>
   137a0:	b	13af4 <close_stdout@@Base+0x9c8>
   137a4:	b	13af4 <close_stdout@@Base+0x9c8>
   137a8:	b	13af4 <close_stdout@@Base+0x9c8>
   137ac:	b	139c8 <close_stdout@@Base+0x89c>
   137b0:	b	139c8 <close_stdout@@Base+0x89c>
   137b4:	b	139c8 <close_stdout@@Base+0x89c>
   137b8:	b	139c8 <close_stdout@@Base+0x89c>
   137bc:	b	139c8 <close_stdout@@Base+0x89c>
   137c0:	b	139c8 <close_stdout@@Base+0x89c>
   137c4:	b	139c8 <close_stdout@@Base+0x89c>
   137c8:	b	139c8 <close_stdout@@Base+0x89c>
   137cc:	b	139c8 <close_stdout@@Base+0x89c>
   137d0:	b	139c8 <close_stdout@@Base+0x89c>
   137d4:	b	139c8 <close_stdout@@Base+0x89c>
   137d8:	b	139c8 <close_stdout@@Base+0x89c>
   137dc:	b	139c8 <close_stdout@@Base+0x89c>
   137e0:	b	139c8 <close_stdout@@Base+0x89c>
   137e4:	b	139c8 <close_stdout@@Base+0x89c>
   137e8:	b	139c8 <close_stdout@@Base+0x89c>
   137ec:	b	13af4 <close_stdout@@Base+0x9c8>
   137f0:	b	13af4 <close_stdout@@Base+0x9c8>
   137f4:	b	13af4 <close_stdout@@Base+0x9c8>
   137f8:	b	13af4 <close_stdout@@Base+0x9c8>
   137fc:	b	138fc <close_stdout@@Base+0x7d0>
   13800:	b	13cc0 <close_stdout@@Base+0xb94>
   13804:	b	139c8 <close_stdout@@Base+0x89c>
   13808:	b	139c8 <close_stdout@@Base+0x89c>
   1380c:	b	139c8 <close_stdout@@Base+0x89c>
   13810:	b	139c8 <close_stdout@@Base+0x89c>
   13814:	b	139c8 <close_stdout@@Base+0x89c>
   13818:	b	139c8 <close_stdout@@Base+0x89c>
   1381c:	b	139c8 <close_stdout@@Base+0x89c>
   13820:	b	139c8 <close_stdout@@Base+0x89c>
   13824:	b	139c8 <close_stdout@@Base+0x89c>
   13828:	b	139c8 <close_stdout@@Base+0x89c>
   1382c:	b	139c8 <close_stdout@@Base+0x89c>
   13830:	b	139c8 <close_stdout@@Base+0x89c>
   13834:	b	139c8 <close_stdout@@Base+0x89c>
   13838:	b	139c8 <close_stdout@@Base+0x89c>
   1383c:	b	139c8 <close_stdout@@Base+0x89c>
   13840:	b	139c8 <close_stdout@@Base+0x89c>
   13844:	b	139c8 <close_stdout@@Base+0x89c>
   13848:	b	139c8 <close_stdout@@Base+0x89c>
   1384c:	b	139c8 <close_stdout@@Base+0x89c>
   13850:	b	139c8 <close_stdout@@Base+0x89c>
   13854:	b	139c8 <close_stdout@@Base+0x89c>
   13858:	b	139c8 <close_stdout@@Base+0x89c>
   1385c:	b	139c8 <close_stdout@@Base+0x89c>
   13860:	b	139c8 <close_stdout@@Base+0x89c>
   13864:	b	139c8 <close_stdout@@Base+0x89c>
   13868:	b	139c8 <close_stdout@@Base+0x89c>
   1386c:	b	13af4 <close_stdout@@Base+0x9c8>
   13870:	b	13c4c <close_stdout@@Base+0xb20>
   13874:	b	139c8 <close_stdout@@Base+0x89c>
   13878:	b	13af4 <close_stdout@@Base+0x9c8>
   1387c:	b	139c8 <close_stdout@@Base+0x89c>
   13880:	b	13af4 <close_stdout@@Base+0x9c8>
   13884:	b	139c8 <close_stdout@@Base+0x89c>
   13888:	b	139c8 <close_stdout@@Base+0x89c>
   1388c:	b	139c8 <close_stdout@@Base+0x89c>
   13890:	b	139c8 <close_stdout@@Base+0x89c>
   13894:	b	139c8 <close_stdout@@Base+0x89c>
   13898:	b	139c8 <close_stdout@@Base+0x89c>
   1389c:	b	139c8 <close_stdout@@Base+0x89c>
   138a0:	b	139c8 <close_stdout@@Base+0x89c>
   138a4:	b	139c8 <close_stdout@@Base+0x89c>
   138a8:	b	139c8 <close_stdout@@Base+0x89c>
   138ac:	b	139c8 <close_stdout@@Base+0x89c>
   138b0:	b	139c8 <close_stdout@@Base+0x89c>
   138b4:	b	139c8 <close_stdout@@Base+0x89c>
   138b8:	b	139c8 <close_stdout@@Base+0x89c>
   138bc:	b	139c8 <close_stdout@@Base+0x89c>
   138c0:	b	139c8 <close_stdout@@Base+0x89c>
   138c4:	b	139c8 <close_stdout@@Base+0x89c>
   138c8:	b	139c8 <close_stdout@@Base+0x89c>
   138cc:	b	139c8 <close_stdout@@Base+0x89c>
   138d0:	b	139c8 <close_stdout@@Base+0x89c>
   138d4:	b	139c8 <close_stdout@@Base+0x89c>
   138d8:	b	139c8 <close_stdout@@Base+0x89c>
   138dc:	b	139c8 <close_stdout@@Base+0x89c>
   138e0:	b	139c8 <close_stdout@@Base+0x89c>
   138e4:	b	139c8 <close_stdout@@Base+0x89c>
   138e8:	b	139c8 <close_stdout@@Base+0x89c>
   138ec:	b	13ad4 <close_stdout@@Base+0x9a8>
   138f0:	b	13af4 <close_stdout@@Base+0x9c8>
   138f4:	b	13ad4 <close_stdout@@Base+0x9a8>
   138f8:	b	13aec <close_stdout@@Base+0x9c0>
   138fc:	ldr	r3, [sp, #160]	; 0xa0
   13900:	cmp	r3, #2
   13904:	beq	14190 <close_stdout@@Base+0x1064>
   13908:	cmp	r3, #3
   1390c:	bne	139c8 <close_stdout@@Base+0x89c>
   13910:	ldr	r1, [sp, #164]	; 0xa4
   13914:	tst	r1, #4
   13918:	beq	139c8 <close_stdout@@Base+0x89c>
   1391c:	add	r3, fp, #2
   13920:	cmp	r8, r3
   13924:	bls	139c8 <close_stdout@@Base+0x89c>
   13928:	ldrb	r2, [r5, #1]
   1392c:	mov	r1, #1
   13930:	cmp	r2, #63	; 0x3f
   13934:	bne	139c8 <close_stdout@@Base+0x89c>
   13938:	ldr	r0, [sp, #32]
   1393c:	ldrb	ip, [r0, r3]
   13940:	sub	r0, ip, #33	; 0x21
   13944:	uxtb	r0, r0
   13948:	cmp	r0, #29
   1394c:	bhi	139c8 <close_stdout@@Base+0x89c>
   13950:	lsl	r1, r1, r0
   13954:	movw	r0, #20929	; 0x51c1
   13958:	movt	r0, #14336	; 0x3800
   1395c:	and	r0, r1, r0
   13960:	cmp	r0, #0
   13964:	beq	139c8 <close_stdout@@Base+0x89c>
   13968:	ldr	r1, [sp, #36]	; 0x24
   1396c:	cmp	r1, #0
   13970:	bne	13b10 <close_stdout@@Base+0x9e4>
   13974:	cmp	r9, sl
   13978:	mov	r4, ip
   1397c:	mov	fp, r3
   13980:	ldrcc	r0, [sp, #40]	; 0x28
   13984:	strbcc	r2, [r0, r9]
   13988:	add	r2, r9, #1
   1398c:	cmp	sl, r2
   13990:	ldrhi	r0, [sp, #40]	; 0x28
   13994:	movhi	r1, #34	; 0x22
   13998:	strbhi	r1, [r0, r2]
   1399c:	add	r2, r9, #2
   139a0:	cmp	sl, r2
   139a4:	ldrhi	r0, [sp, #40]	; 0x28
   139a8:	movhi	r1, #34	; 0x22
   139ac:	strbhi	r1, [r0, r2]
   139b0:	add	r2, r9, #3
   139b4:	cmp	sl, r2
   139b8:	add	r9, r9, #4
   139bc:	ldrhi	r0, [sp, #40]	; 0x28
   139c0:	movhi	r1, #63	; 0x3f
   139c4:	strbhi	r1, [r0, r2]
   139c8:	ldr	r0, [sp, #44]	; 0x2c
   139cc:	cmp	r0, #0
   139d0:	bne	139f8 <close_stdout@@Base+0x8cc>
   139d4:	ldr	r1, [sp, #48]	; 0x30
   139d8:	cmp	r1, #0
   139dc:	beq	139f8 <close_stdout@@Base+0x8cc>
   139e0:	ubfx	r2, r4, #5, #8
   139e4:	and	r3, r4, #31
   139e8:	ldr	r2, [r1, r2, lsl #2]
   139ec:	lsr	r3, r2, r3
   139f0:	tst	r3, #1
   139f4:	bne	13a00 <close_stdout@@Base+0x8d4>
   139f8:	cmp	r6, #0
   139fc:	beq	13a20 <close_stdout@@Base+0x8f4>
   13a00:	ldr	r2, [sp, #36]	; 0x24
   13a04:	cmp	r2, #0
   13a08:	bne	13b10 <close_stdout@@Base+0x9e4>
   13a0c:	cmp	r9, sl
   13a10:	ldrcc	r0, [sp, #40]	; 0x28
   13a14:	movcc	r3, #92	; 0x5c
   13a18:	strbcc	r3, [r0, r9]
   13a1c:	add	r9, r9, #1
   13a20:	add	fp, fp, #1
   13a24:	cmp	r9, sl
   13a28:	ldrcc	r1, [sp, #40]	; 0x28
   13a2c:	strbcc	r4, [r1, r9]
   13a30:	cmn	r8, #1
   13a34:	add	r9, r9, #1
   13a38:	bne	136c0 <close_stdout@@Base+0x594>
   13a3c:	ldr	r2, [sp, #32]
   13a40:	ldrb	r3, [r2, fp]
   13a44:	adds	r3, r3, #0
   13a48:	movne	r3, #1
   13a4c:	cmp	r3, #0
   13a50:	bne	136d0 <close_stdout@@Base+0x5a4>
   13a54:	ldr	r3, [sp, #160]	; 0xa0
   13a58:	cmp	r9, #0
   13a5c:	cmpeq	r3, #2
   13a60:	bne	13a70 <close_stdout@@Base+0x944>
   13a64:	ldr	r0, [sp, #36]	; 0x24
   13a68:	cmp	r0, #0
   13a6c:	bne	13b10 <close_stdout@@Base+0x9e4>
   13a70:	ldr	r1, [sp, #36]	; 0x24
   13a74:	ldr	r2, [sp, #52]	; 0x34
   13a78:	eor	r3, r1, #1
   13a7c:	cmp	r2, #0
   13a80:	moveq	r3, #0
   13a84:	andne	r3, r3, #1
   13a88:	cmp	r3, #0
   13a8c:	beq	13ab8 <close_stdout@@Base+0x98c>
   13a90:	ldrb	r3, [r2]
   13a94:	cmp	r3, #0
   13a98:	beq	13ab8 <close_stdout@@Base+0x98c>
   13a9c:	ldr	r1, [sp, #40]	; 0x28
   13aa0:	cmp	sl, r9
   13aa4:	strbhi	r3, [r1, r9]
   13aa8:	ldrb	r3, [r2, #1]!
   13aac:	add	r9, r9, #1
   13ab0:	cmp	r3, #0
   13ab4:	bne	13aa0 <close_stdout@@Base+0x974>
   13ab8:	cmp	r9, sl
   13abc:	movcs	r0, r9
   13ac0:	ldrcc	r1, [sp, #40]	; 0x28
   13ac4:	movcc	r3, #0
   13ac8:	movcc	r0, r9
   13acc:	strbcc	r3, [r1, r9]
   13ad0:	b	13b4c <close_stdout@@Base+0xa20>
   13ad4:	cmn	r8, #1
   13ad8:	beq	141a0 <close_stdout@@Base+0x1074>
   13adc:	subs	r3, r8, #1
   13ae0:	movne	r3, #1
   13ae4:	cmp	r3, #0
   13ae8:	bne	139c8 <close_stdout@@Base+0x89c>
   13aec:	cmp	fp, #0
   13af0:	bne	139c8 <close_stdout@@Base+0x89c>
   13af4:	ldr	r3, [sp, #36]	; 0x24
   13af8:	ldr	r0, [sp, #160]	; 0xa0
   13afc:	cmp	r0, #2
   13b00:	movne	r3, #0
   13b04:	andeq	r3, r3, #1
   13b08:	cmp	r3, #0
   13b0c:	beq	139c8 <close_stdout@@Base+0x89c>
   13b10:	ldr	r2, [sp, #164]	; 0xa4
   13b14:	mov	ip, #0
   13b18:	ldr	r0, [sp, #160]	; 0xa0
   13b1c:	bic	r3, r2, #2
   13b20:	ldr	r1, [sp, #72]	; 0x48
   13b24:	ldr	r2, [sp, #68]	; 0x44
   13b28:	stm	sp, {r0, r3}
   13b2c:	mov	r3, r8
   13b30:	str	r1, [sp, #12]
   13b34:	mov	r1, sl
   13b38:	str	r2, [sp, #16]
   13b3c:	ldr	r0, [sp, #40]	; 0x28
   13b40:	ldr	r2, [sp, #32]
   13b44:	str	ip, [sp, #8]
   13b48:	bl	135e0 <close_stdout@@Base+0x4b4>
   13b4c:	ldr	r1, [sp, #56]	; 0x38
   13b50:	ldr	r2, [sp, #116]	; 0x74
   13b54:	ldr	r3, [r1]
   13b58:	cmp	r2, r3
   13b5c:	bne	14290 <close_stdout@@Base+0x1164>
   13b60:	add	sp, sp, #124	; 0x7c
   13b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b68:	mov	r3, #114	; 0x72
   13b6c:	ldr	r2, [sp, #36]	; 0x24
   13b70:	ldr	r0, [sp, #160]	; 0xa0
   13b74:	cmp	r0, #2
   13b78:	movne	r2, #0
   13b7c:	andeq	r2, r2, #1
   13b80:	cmp	r2, #0
   13b84:	bne	13b10 <close_stdout@@Base+0x9e4>
   13b88:	ldr	r1, [sp, #24]
   13b8c:	cmp	r1, #0
   13b90:	beq	139c8 <close_stdout@@Base+0x89c>
   13b94:	mov	r4, r3
   13b98:	b	13a00 <close_stdout@@Base+0x8d4>
   13b9c:	mov	r3, #98	; 0x62
   13ba0:	b	13b88 <close_stdout@@Base+0xa5c>
   13ba4:	mov	r3, #102	; 0x66
   13ba8:	b	13b88 <close_stdout@@Base+0xa5c>
   13bac:	mov	r3, #118	; 0x76
   13bb0:	b	13b88 <close_stdout@@Base+0xa5c>
   13bb4:	mov	r3, #97	; 0x61
   13bb8:	b	13b88 <close_stdout@@Base+0xa5c>
   13bbc:	mov	r3, #110	; 0x6e
   13bc0:	b	13b6c <close_stdout@@Base+0xa40>
   13bc4:	mov	r3, #116	; 0x74
   13bc8:	b	13b6c <close_stdout@@Base+0xa40>
   13bcc:	ldr	r2, [sp, #24]
   13bd0:	cmp	r2, #0
   13bd4:	beq	1417c <close_stdout@@Base+0x1050>
   13bd8:	ldr	r3, [sp, #36]	; 0x24
   13bdc:	cmp	r3, #0
   13be0:	bne	13b10 <close_stdout@@Base+0x9e4>
   13be4:	cmp	r9, sl
   13be8:	add	r2, r9, #1
   13bec:	ldrcc	r0, [sp, #40]	; 0x28
   13bf0:	movcc	r3, #92	; 0x5c
   13bf4:	strbcc	r3, [r0, r9]
   13bf8:	add	r3, fp, #1
   13bfc:	cmp	r8, r3
   13c00:	bls	13c40 <close_stdout@@Base+0xb14>
   13c04:	ldr	r1, [sp, #32]
   13c08:	ldrb	r3, [r1, r3]
   13c0c:	sub	r3, r3, #48	; 0x30
   13c10:	cmp	r3, #9
   13c14:	bhi	13c40 <close_stdout@@Base+0xb14>
   13c18:	cmp	sl, r2
   13c1c:	ldrhi	r0, [sp, #40]	; 0x28
   13c20:	movhi	r3, #48	; 0x30
   13c24:	strbhi	r3, [r0, r2]
   13c28:	add	r3, r9, #2
   13c2c:	cmp	sl, r3
   13c30:	ldrhi	r1, [sp, #40]	; 0x28
   13c34:	movhi	r2, #48	; 0x30
   13c38:	strbhi	r2, [r1, r3]
   13c3c:	add	r2, r9, #3
   13c40:	mov	r9, r2
   13c44:	mov	r4, #48	; 0x30
   13c48:	b	139d4 <close_stdout@@Base+0x8a8>
   13c4c:	ldr	r1, [sp, #76]	; 0x4c
   13c50:	cmp	r1, #0
   13c54:	beq	13c60 <close_stdout@@Base+0xb34>
   13c58:	cmp	r7, #0
   13c5c:	bne	13a20 <close_stdout@@Base+0x8f4>
   13c60:	mov	r3, r4
   13c64:	b	13b6c <close_stdout@@Base+0xa40>
   13c68:	ldr	r1, [sp, #160]	; 0xa0
   13c6c:	cmp	r1, #2
   13c70:	bne	139c8 <close_stdout@@Base+0x89c>
   13c74:	ldr	r2, [sp, #36]	; 0x24
   13c78:	cmp	r2, #0
   13c7c:	bne	13b10 <close_stdout@@Base+0x9e4>
   13c80:	cmp	r9, sl
   13c84:	ldrcc	r0, [sp, #40]	; 0x28
   13c88:	movcc	r3, #39	; 0x27
   13c8c:	strbcc	r3, [r0, r9]
   13c90:	add	r3, r9, #1
   13c94:	cmp	sl, r3
   13c98:	ldrhi	r1, [sp, #40]	; 0x28
   13c9c:	movhi	r2, #92	; 0x5c
   13ca0:	strbhi	r2, [r1, r3]
   13ca4:	add	r3, r9, #2
   13ca8:	cmp	sl, r3
   13cac:	add	r9, r9, #3
   13cb0:	ldrhi	r0, [sp, #40]	; 0x28
   13cb4:	movhi	r2, #39	; 0x27
   13cb8:	strbhi	r2, [r0, r3]
   13cbc:	b	139c8 <close_stdout@@Base+0x89c>
   13cc0:	ldr	r1, [sp, #64]	; 0x40
   13cc4:	cmp	r1, #1
   13cc8:	bne	13fc0 <close_stdout@@Base+0xe94>
   13ccc:	bl	110c0 <__ctype_b_loc@plt>
   13cd0:	ldr	r2, [sp, #64]	; 0x40
   13cd4:	sxth	r3, r4
   13cd8:	str	r2, [sp, #60]	; 0x3c
   13cdc:	lsl	r3, r3, #1
   13ce0:	ldr	r2, [r0]
   13ce4:	ldrh	r2, [r2, r3]
   13ce8:	eor	r2, r2, #16384	; 0x4000
   13cec:	ubfx	r2, r2, #14, #1
   13cf0:	ldr	r1, [sp, #24]
   13cf4:	ands	r2, r2, r1
   13cf8:	beq	139c8 <close_stdout@@Base+0x89c>
   13cfc:	ldr	r3, [sp, #60]	; 0x3c
   13d00:	mov	r0, #92	; 0x5c
   13d04:	ldr	r7, [sp, #36]	; 0x24
   13d08:	add	r1, r3, fp
   13d0c:	str	r8, [sp, #60]	; 0x3c
   13d10:	ldr	r3, [sp, #40]	; 0x28
   13d14:	b	13d78 <close_stdout@@Base+0xc4c>
   13d18:	cmp	r7, #0
   13d1c:	bne	141b8 <close_stdout@@Base+0x108c>
   13d20:	add	ip, r9, #1
   13d24:	cmp	r9, sl
   13d28:	strbcc	r0, [r3, r9]
   13d2c:	cmp	sl, ip
   13d30:	lsrhi	r8, r4, #6
   13d34:	addhi	r8, r8, #48	; 0x30
   13d38:	strbhi	r8, [r3, ip]
   13d3c:	add	ip, r9, #2
   13d40:	add	r9, r9, #3
   13d44:	cmp	sl, ip
   13d48:	ubfxhi	r8, r4, #3, #3
   13d4c:	and	r4, r4, #7
   13d50:	add	r4, r4, #48	; 0x30
   13d54:	addhi	r8, r8, #48	; 0x30
   13d58:	strbhi	r8, [r3, ip]
   13d5c:	add	fp, fp, #1
   13d60:	cmp	r1, fp
   13d64:	bls	13da4 <close_stdout@@Base+0xc78>
   13d68:	cmp	r9, sl
   13d6c:	strbcc	r4, [r3, r9]
   13d70:	ldrb	r4, [r5, #1]!
   13d74:	add	r9, r9, #1
   13d78:	cmp	r2, #0
   13d7c:	bne	13d18 <close_stdout@@Base+0xbec>
   13d80:	cmp	r6, #0
   13d84:	beq	13d5c <close_stdout@@Base+0xc30>
   13d88:	add	fp, fp, #1
   13d8c:	cmp	r9, sl
   13d90:	strbcc	r0, [r3, r9]
   13d94:	cmp	r1, fp
   13d98:	add	r9, r9, #1
   13d9c:	mov	r6, #0
   13da0:	bhi	13d68 <close_stdout@@Base+0xc3c>
   13da4:	ldr	r8, [sp, #60]	; 0x3c
   13da8:	b	13a24 <close_stdout@@Base+0x8f8>
   13dac:	ldr	r3, [sp, #36]	; 0x24
   13db0:	cmp	r3, #0
   13db4:	bne	142b8 <close_stdout@@Base+0x118c>
   13db8:	cmp	sl, #0
   13dbc:	beq	141d0 <close_stdout@@Base+0x10a4>
   13dc0:	ldr	r1, [sp, #40]	; 0x28
   13dc4:	mov	r0, #1
   13dc8:	ldr	r2, [pc, #1296]	; 142e0 <close_stdout@@Base+0x11b4>
   13dcc:	mov	r3, #34	; 0x22
   13dd0:	str	r0, [sp, #24]
   13dd4:	mov	r9, r0
   13dd8:	add	r2, pc, r2
   13ddc:	str	r0, [sp, #28]
   13de0:	strb	r3, [r1]
   13de4:	str	r2, [sp, #52]	; 0x34
   13de8:	b	13694 <close_stdout@@Base+0x568>
   13dec:	ldr	r3, [pc, #1264]	; 142e4 <close_stdout@@Base+0x11b8>
   13df0:	mov	r2, #1
   13df4:	mov	r0, #3
   13df8:	str	r2, [sp, #36]	; 0x24
   13dfc:	add	r3, pc, r3
   13e00:	str	r2, [sp, #24]
   13e04:	str	r3, [sp, #52]	; 0x34
   13e08:	mov	r9, #0
   13e0c:	str	r2, [sp, #28]
   13e10:	str	r0, [sp, #160]	; 0xa0
   13e14:	b	13694 <close_stdout@@Base+0x568>
   13e18:	mov	r0, #0
   13e1c:	mov	r1, #1
   13e20:	str	r0, [sp, #36]	; 0x24
   13e24:	mov	r9, r0
   13e28:	str	r1, [sp, #24]
   13e2c:	str	r0, [sp, #28]
   13e30:	str	r0, [sp, #52]	; 0x34
   13e34:	b	13694 <close_stdout@@Base+0x568>
   13e38:	ldr	r3, [sp, #160]	; 0xa0
   13e3c:	cmp	r3, #8
   13e40:	beq	13e6c <close_stdout@@Base+0xd40>
   13e44:	ldr	r0, [pc, #1180]	; 142e8 <close_stdout@@Base+0x11bc>
   13e48:	mov	r1, r3
   13e4c:	add	r0, pc, r0
   13e50:	bl	1347c <close_stdout@@Base+0x350>
   13e54:	ldr	r1, [sp, #160]	; 0xa0
   13e58:	str	r0, [sp, #72]	; 0x48
   13e5c:	ldr	r0, [pc, #1160]	; 142ec <close_stdout@@Base+0x11c0>
   13e60:	add	r0, pc, r0
   13e64:	bl	1347c <close_stdout@@Base+0x350>
   13e68:	str	r0, [sp, #68]	; 0x44
   13e6c:	ldr	r0, [sp, #36]	; 0x24
   13e70:	cmp	r0, #0
   13e74:	movne	r9, #0
   13e78:	bne	13eb0 <close_stdout@@Base+0xd84>
   13e7c:	ldr	r1, [sp, #72]	; 0x48
   13e80:	ldrb	r3, [r1]
   13e84:	cmp	r3, #0
   13e88:	beq	14288 <close_stdout@@Base+0x115c>
   13e8c:	mov	r2, r1
   13e90:	ldr	r1, [sp, #40]	; 0x28
   13e94:	mov	r9, r0
   13e98:	cmp	r9, sl
   13e9c:	strbcc	r3, [r1, r9]
   13ea0:	ldrb	r3, [r2, #1]!
   13ea4:	add	r9, r9, #1
   13ea8:	cmp	r3, #0
   13eac:	bne	13e98 <close_stdout@@Base+0xd6c>
   13eb0:	ldr	r0, [sp, #68]	; 0x44
   13eb4:	str	r0, [sp, #52]	; 0x34
   13eb8:	bl	110d8 <strlen@plt>
   13ebc:	mov	r2, #1
   13ec0:	str	r2, [sp, #24]
   13ec4:	str	r0, [sp, #28]
   13ec8:	b	13694 <close_stdout@@Base+0x568>
   13ecc:	ldr	r3, [pc, #1052]	; 142f0 <close_stdout@@Base+0x11c4>
   13ed0:	mov	r2, #0
   13ed4:	mov	r1, #1
   13ed8:	mov	r0, #2
   13edc:	add	r3, pc, r3
   13ee0:	str	r1, [sp, #36]	; 0x24
   13ee4:	str	r2, [sp, #24]
   13ee8:	mov	r9, r2
   13eec:	str	r1, [sp, #28]
   13ef0:	str	r3, [sp, #52]	; 0x34
   13ef4:	str	r0, [sp, #160]	; 0xa0
   13ef8:	b	13694 <close_stdout@@Base+0x568>
   13efc:	ldr	r3, [sp, #36]	; 0x24
   13f00:	cmp	r3, #0
   13f04:	bne	14294 <close_stdout@@Base+0x1168>
   13f08:	cmp	sl, #0
   13f0c:	beq	141f0 <close_stdout@@Base+0x10c4>
   13f10:	ldr	r1, [sp, #40]	; 0x28
   13f14:	mov	r3, #39	; 0x27
   13f18:	ldr	r2, [sp, #36]	; 0x24
   13f1c:	mov	r0, #1
   13f20:	mov	r9, r0
   13f24:	str	r0, [sp, #28]
   13f28:	strb	r3, [r1]
   13f2c:	ldr	r3, [pc, #960]	; 142f4 <close_stdout@@Base+0x11c8>
   13f30:	str	r2, [sp, #24]
   13f34:	add	r3, pc, r3
   13f38:	str	r3, [sp, #52]	; 0x34
   13f3c:	b	13694 <close_stdout@@Base+0x568>
   13f40:	ldr	r2, [sp, #28]
   13f44:	cmp	r2, #1
   13f48:	add	r4, fp, r2
   13f4c:	movls	r3, #0
   13f50:	movhi	r3, #1
   13f54:	cmn	r8, #1
   13f58:	movne	r3, #0
   13f5c:	cmp	r3, #0
   13f60:	beq	13f70 <close_stdout@@Base+0xe44>
   13f64:	ldr	r0, [sp, #32]
   13f68:	bl	110d8 <strlen@plt>
   13f6c:	mov	r8, r0
   13f70:	cmp	r8, r4
   13f74:	ldrcc	r3, [sp, #32]
   13f78:	movcc	r6, #0
   13f7c:	addcc	r5, r3, fp
   13f80:	bcc	136f0 <close_stdout@@Base+0x5c4>
   13f84:	ldr	r0, [sp, #32]
   13f88:	ldr	r1, [sp, #52]	; 0x34
   13f8c:	add	r5, r0, fp
   13f90:	ldr	r2, [sp, #28]
   13f94:	mov	r0, r5
   13f98:	bl	10fb8 <memcmp@plt>
   13f9c:	cmp	r0, #0
   13fa0:	bne	13fb8 <close_stdout@@Base+0xe8c>
   13fa4:	ldr	r1, [sp, #36]	; 0x24
   13fa8:	cmp	r1, #0
   13fac:	bne	13b10 <close_stdout@@Base+0x9e4>
   13fb0:	mov	r6, #1
   13fb4:	b	136f0 <close_stdout@@Base+0x5c4>
   13fb8:	mov	r6, #0
   13fbc:	b	136f0 <close_stdout@@Base+0x5c4>
   13fc0:	add	r7, sp, #108	; 0x6c
   13fc4:	cmn	r8, #1
   13fc8:	mov	r3, #0
   13fcc:	str	r3, [sp, #108]	; 0x6c
   13fd0:	str	r3, [r7, #4]
   13fd4:	beq	141c0 <close_stdout@@Base+0x1094>
   13fd8:	mov	r1, #0
   13fdc:	ldr	r0, [sp, #32]
   13fe0:	mov	ip, #1
   13fe4:	str	r9, [sp, #88]	; 0x58
   13fe8:	str	r6, [sp, #96]	; 0x60
   13fec:	mov	r9, r1
   13ff0:	str	r5, [sp, #100]	; 0x64
   13ff4:	mov	r6, ip
   13ff8:	mov	r5, r7
   13ffc:	add	r3, sp, #104	; 0x68
   14000:	sub	r0, r0, #1
   14004:	str	r3, [sp, #80]	; 0x50
   14008:	str	r0, [sp, #84]	; 0x54
   1400c:	str	r1, [sp, #60]	; 0x3c
   14010:	str	r4, [sp, #92]	; 0x5c
   14014:	ldr	r2, [sp, #32]
   14018:	add	r7, r9, fp
   1401c:	add	r0, sp, #104	; 0x68
   14020:	mov	r3, r5
   14024:	add	r4, r2, r7
   14028:	rsb	r2, r7, r8
   1402c:	mov	r1, r4
   14030:	bl	11060 <mbrtowc@plt>
   14034:	subs	r2, r0, #0
   14038:	beq	14144 <close_stdout@@Base+0x1018>
   1403c:	cmn	r2, #1
   14040:	beq	1426c <close_stdout@@Base+0x1140>
   14044:	cmn	r2, #2
   14048:	beq	14210 <close_stdout@@Base+0x10e4>
   1404c:	ldr	r3, [sp, #36]	; 0x24
   14050:	ldr	r0, [sp, #160]	; 0xa0
   14054:	cmp	r0, #2
   14058:	movne	r3, #0
   1405c:	andeq	r3, r3, #1
   14060:	cmp	r3, #0
   14064:	beq	14120 <close_stdout@@Base+0xff4>
   14068:	cmp	r2, #1
   1406c:	beq	14120 <close_stdout@@Base+0xff4>
   14070:	ldr	r1, [sp, #84]	; 0x54
   14074:	add	r3, r1, r2
   14078:	add	r7, r3, r7
   1407c:	ldrb	r3, [r4, #1]!
   14080:	sub	r3, r3, #91	; 0x5b
   14084:	cmp	r3, #33	; 0x21
   14088:	addls	pc, pc, r3, lsl #2
   1408c:	b	14118 <close_stdout@@Base+0xfec>
   14090:	b	13b10 <close_stdout@@Base+0x9e4>
   14094:	b	13b10 <close_stdout@@Base+0x9e4>
   14098:	b	14118 <close_stdout@@Base+0xfec>
   1409c:	b	13b10 <close_stdout@@Base+0x9e4>
   140a0:	b	14118 <close_stdout@@Base+0xfec>
   140a4:	b	13b10 <close_stdout@@Base+0x9e4>
   140a8:	b	14118 <close_stdout@@Base+0xfec>
   140ac:	b	14118 <close_stdout@@Base+0xfec>
   140b0:	b	14118 <close_stdout@@Base+0xfec>
   140b4:	b	14118 <close_stdout@@Base+0xfec>
   140b8:	b	14118 <close_stdout@@Base+0xfec>
   140bc:	b	14118 <close_stdout@@Base+0xfec>
   140c0:	b	14118 <close_stdout@@Base+0xfec>
   140c4:	b	14118 <close_stdout@@Base+0xfec>
   140c8:	b	14118 <close_stdout@@Base+0xfec>
   140cc:	b	14118 <close_stdout@@Base+0xfec>
   140d0:	b	14118 <close_stdout@@Base+0xfec>
   140d4:	b	14118 <close_stdout@@Base+0xfec>
   140d8:	b	14118 <close_stdout@@Base+0xfec>
   140dc:	b	14118 <close_stdout@@Base+0xfec>
   140e0:	b	14118 <close_stdout@@Base+0xfec>
   140e4:	b	14118 <close_stdout@@Base+0xfec>
   140e8:	b	14118 <close_stdout@@Base+0xfec>
   140ec:	b	14118 <close_stdout@@Base+0xfec>
   140f0:	b	14118 <close_stdout@@Base+0xfec>
   140f4:	b	14118 <close_stdout@@Base+0xfec>
   140f8:	b	14118 <close_stdout@@Base+0xfec>
   140fc:	b	14118 <close_stdout@@Base+0xfec>
   14100:	b	14118 <close_stdout@@Base+0xfec>
   14104:	b	14118 <close_stdout@@Base+0xfec>
   14108:	b	14118 <close_stdout@@Base+0xfec>
   1410c:	b	14118 <close_stdout@@Base+0xfec>
   14110:	b	14118 <close_stdout@@Base+0xfec>
   14114:	b	13b10 <close_stdout@@Base+0x9e4>
   14118:	cmp	r4, r7
   1411c:	bne	1407c <close_stdout@@Base+0xf50>
   14120:	ldr	r0, [sp, #104]	; 0x68
   14124:	add	r9, r9, r2
   14128:	bl	1100c <iswprint@plt>
   1412c:	cmp	r0, #0
   14130:	mov	r0, r5
   14134:	moveq	r6, #0
   14138:	bl	10fac <mbsinit@plt>
   1413c:	cmp	r0, #0
   14140:	beq	14014 <close_stdout@@Base+0xee8>
   14144:	mov	ip, r6
   14148:	eor	r2, ip, #1
   1414c:	str	r9, [sp, #60]	; 0x3c
   14150:	ldr	r4, [sp, #92]	; 0x5c
   14154:	uxtb	r2, r2
   14158:	ldr	r9, [sp, #88]	; 0x58
   1415c:	ldr	r6, [sp, #96]	; 0x60
   14160:	ldr	r5, [sp, #100]	; 0x64
   14164:	ldr	r3, [sp, #60]	; 0x3c
   14168:	cmp	r3, #1
   1416c:	bls	13cf0 <close_stdout@@Base+0xbc4>
   14170:	ldr	r0, [sp, #24]
   14174:	and	r2, r2, r0
   14178:	b	13cfc <close_stdout@@Base+0xbd0>
   1417c:	ldr	r2, [sp, #164]	; 0xa4
   14180:	tst	r2, #1
   14184:	addne	fp, fp, #1
   14188:	bne	136b8 <close_stdout@@Base+0x58c>
   1418c:	b	139c8 <close_stdout@@Base+0x89c>
   14190:	ldr	r0, [sp, #36]	; 0x24
   14194:	cmp	r0, #0
   14198:	beq	139c8 <close_stdout@@Base+0x89c>
   1419c:	b	13b10 <close_stdout@@Base+0x9e4>
   141a0:	ldr	r2, [sp, #32]
   141a4:	ldrb	r3, [r2, #1]
   141a8:	adds	r3, r3, #0
   141ac:	movne	r3, #1
   141b0:	b	13ae4 <close_stdout@@Base+0x9b8>
   141b4:	bl	111d4 <abort@plt>
   141b8:	ldr	r8, [sp, #60]	; 0x3c
   141bc:	b	13b10 <close_stdout@@Base+0x9e4>
   141c0:	ldr	r0, [sp, #32]
   141c4:	bl	110d8 <strlen@plt>
   141c8:	mov	r8, r0
   141cc:	b	13fd8 <close_stdout@@Base+0xeac>
   141d0:	ldr	r2, [pc, #288]	; 142f8 <close_stdout@@Base+0x11cc>
   141d4:	mov	r1, #1
   141d8:	mov	r9, r1
   141dc:	str	r1, [sp, #24]
   141e0:	add	r2, pc, r2
   141e4:	str	r1, [sp, #28]
   141e8:	str	r2, [sp, #52]	; 0x34
   141ec:	b	13694 <close_stdout@@Base+0x568>
   141f0:	ldr	r2, [pc, #260]	; 142fc <close_stdout@@Base+0x11d0>
   141f4:	mov	r3, #1
   141f8:	mov	r9, r3
   141fc:	str	r3, [sp, #28]
   14200:	add	r2, pc, r2
   14204:	str	sl, [sp, #24]
   14208:	str	r2, [sp, #52]	; 0x34
   1420c:	b	13694 <close_stdout@@Base+0x568>
   14210:	cmp	r8, r7
   14214:	str	r9, [sp, #60]	; 0x3c
   14218:	mov	ip, r4
   1421c:	ldr	r6, [sp, #96]	; 0x60
   14220:	ldr	r9, [sp, #88]	; 0x58
   14224:	ldr	r4, [sp, #92]	; 0x5c
   14228:	ldr	r5, [sp, #100]	; 0x64
   1422c:	bls	14264 <close_stdout@@Base+0x1138>
   14230:	ldrb	r3, [ip]
   14234:	cmp	r3, #0
   14238:	beq	14264 <close_stdout@@Base+0x1138>
   1423c:	ldr	r3, [sp, #60]	; 0x3c
   14240:	b	14250 <close_stdout@@Base+0x1124>
   14244:	ldrb	r2, [r5, r3]
   14248:	cmp	r2, #0
   1424c:	beq	14260 <close_stdout@@Base+0x1134>
   14250:	add	r3, r3, #1
   14254:	add	r2, fp, r3
   14258:	cmp	r8, r2
   1425c:	bhi	14244 <close_stdout@@Base+0x1118>
   14260:	str	r3, [sp, #60]	; 0x3c
   14264:	mov	r2, #1
   14268:	b	14164 <close_stdout@@Base+0x1038>
   1426c:	str	r9, [sp, #60]	; 0x3c
   14270:	mov	r2, #1
   14274:	ldr	r4, [sp, #92]	; 0x5c
   14278:	ldr	r6, [sp, #96]	; 0x60
   1427c:	ldr	r9, [sp, #88]	; 0x58
   14280:	ldr	r5, [sp, #100]	; 0x64
   14284:	b	14164 <close_stdout@@Base+0x1038>
   14288:	ldr	r9, [sp, #36]	; 0x24
   1428c:	b	13eb0 <close_stdout@@Base+0xd84>
   14290:	bl	10fd0 <__stack_chk_fail@plt>
   14294:	ldr	r1, [pc, #100]	; 14300 <close_stdout@@Base+0x11d4>
   14298:	mov	r3, #0
   1429c:	mov	r0, #1
   142a0:	str	r3, [sp, #24]
   142a4:	add	r1, pc, r1
   142a8:	str	r0, [sp, #28]
   142ac:	mov	r9, r3
   142b0:	str	r1, [sp, #52]	; 0x34
   142b4:	b	13694 <close_stdout@@Base+0x568>
   142b8:	ldr	r0, [pc, #68]	; 14304 <close_stdout@@Base+0x11d8>
   142bc:	mov	r3, #1
   142c0:	mov	r9, #0
   142c4:	str	r3, [sp, #24]
   142c8:	add	r0, pc, r0
   142cc:	str	r3, [sp, #28]
   142d0:	str	r0, [sp, #52]	; 0x34
   142d4:	b	13694 <close_stdout@@Base+0x568>
   142d8:	strdeq	r4, [r1], -ip
   142dc:	strdeq	r0, [r0], -ip
   142e0:	andeq	r3, r0, ip, lsl #20
   142e4:	andeq	r3, r0, r8, ror #19
   142e8:	andeq	r3, r0, r4, lsr #19
   142ec:	andeq	r3, r0, r0, lsl #19
   142f0:	andeq	r3, r0, r4, lsl #18
   142f4:	andeq	r3, r0, ip, lsr #17
   142f8:	andeq	r3, r0, r4, lsl #12
   142fc:	andeq	r3, r0, r0, ror #11
   14300:	andeq	r3, r0, ip, lsr r5
   14304:	andeq	r3, r0, ip, lsl r5
   14308:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1430c:	sub	sp, sp, #44	; 0x2c
   14310:	mov	r6, r0
   14314:	mov	r9, r1
   14318:	mov	sl, r2
   1431c:	mov	r4, r3
   14320:	bl	110f0 <__errno_location@plt>
   14324:	ldr	fp, [pc, #412]	; 144c8 <close_stdout@@Base+0x139c>
   14328:	cmp	r6, #0
   1432c:	add	fp, pc, fp
   14330:	ldr	r5, [fp]
   14334:	ldr	r1, [r0]
   14338:	mov	r8, r0
   1433c:	str	r1, [sp, #36]	; 0x24
   14340:	blt	144c0 <close_stdout@@Base+0x1394>
   14344:	ldr	r3, [pc, #384]	; 144cc <close_stdout@@Base+0x13a0>
   14348:	add	r3, pc, r3
   1434c:	ldr	r3, [r3]
   14350:	cmp	r6, r3
   14354:	bcc	143a8 <close_stdout@@Base+0x127c>
   14358:	add	r7, r6, #1
   1435c:	cmn	r7, #-536870911	; 0xe0000001
   14360:	bhi	144c4 <close_stdout@@Base+0x1398>
   14364:	add	r3, fp, #4
   14368:	cmp	r5, r3
   1436c:	beq	14498 <close_stdout@@Base+0x136c>
   14370:	mov	r0, r5
   14374:	lsl	r1, r7, #3
   14378:	bl	15484 <close_stdout@@Base+0x2358>
   1437c:	mov	r5, r0
   14380:	str	r0, [fp]
   14384:	ldr	fp, [pc, #324]	; 144d0 <close_stdout@@Base+0x13a4>
   14388:	mov	r1, #0
   1438c:	add	fp, pc, fp
   14390:	ldr	r0, [fp]
   14394:	rsb	r2, r0, r7
   14398:	add	r0, r5, r0, lsl #3
   1439c:	lsl	r2, r2, #3
   143a0:	bl	11108 <memset@plt>
   143a4:	str	r7, [fp]
   143a8:	add	r2, r4, #8
   143ac:	str	r2, [sp, #32]
   143b0:	ldr	r1, [r4]
   143b4:	add	fp, r5, r6, lsl #3
   143b8:	ldr	lr, [sp, #32]
   143bc:	mov	r2, r9
   143c0:	ldr	r3, [r4, #4]
   143c4:	ldr	ip, [r5, r6, lsl #3]
   143c8:	ldr	r7, [fp, #4]
   143cc:	orr	r3, r3, #1
   143d0:	str	r1, [sp]
   143d4:	str	r3, [sp, #4]
   143d8:	mov	r1, ip
   143dc:	str	lr, [sp, #8]
   143e0:	mov	r0, r7
   143e4:	ldr	lr, [r4, #40]	; 0x28
   143e8:	str	r3, [sp, #28]
   143ec:	mov	r3, sl
   143f0:	str	lr, [sp, #12]
   143f4:	ldr	lr, [r4, #44]	; 0x2c
   143f8:	str	ip, [sp, #24]
   143fc:	str	lr, [sp, #16]
   14400:	bl	135e0 <close_stdout@@Base+0x4b4>
   14404:	ldr	ip, [sp, #24]
   14408:	cmp	ip, r0
   1440c:	bhi	14484 <close_stdout@@Base+0x1358>
   14410:	ldr	r3, [pc, #188]	; 144d4 <close_stdout@@Base+0x13a8>
   14414:	add	r1, r0, #1
   14418:	str	r1, [r5, r6, lsl #3]
   1441c:	add	r3, pc, r3
   14420:	cmp	r7, r3
   14424:	beq	14438 <close_stdout@@Base+0x130c>
   14428:	mov	r0, r7
   1442c:	str	r1, [sp, #24]
   14430:	bl	10f88 <free@plt>
   14434:	ldr	r1, [sp, #24]
   14438:	mov	r0, r1
   1443c:	str	r1, [sp, #24]
   14440:	bl	1542c <close_stdout@@Base+0x2300>
   14444:	ldr	r3, [sp, #28]
   14448:	ldr	lr, [sp, #32]
   1444c:	mov	r2, r9
   14450:	str	r0, [fp, #4]
   14454:	mov	r7, r0
   14458:	ldr	ip, [r4]
   1445c:	str	r3, [sp, #4]
   14460:	mov	r3, sl
   14464:	str	lr, [sp, #8]
   14468:	str	ip, [sp]
   1446c:	ldr	ip, [r4, #40]	; 0x28
   14470:	ldr	r1, [sp, #24]
   14474:	str	ip, [sp, #12]
   14478:	ldr	ip, [r4, #44]	; 0x2c
   1447c:	str	ip, [sp, #16]
   14480:	bl	135e0 <close_stdout@@Base+0x4b4>
   14484:	ldr	r1, [sp, #36]	; 0x24
   14488:	mov	r0, r7
   1448c:	str	r1, [r8]
   14490:	add	sp, sp, #44	; 0x2c
   14494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14498:	lsl	r1, r7, #3
   1449c:	mov	r0, #0
   144a0:	str	r3, [sp, #24]
   144a4:	bl	15484 <close_stdout@@Base+0x2358>
   144a8:	ldr	r3, [sp, #24]
   144ac:	mov	r5, r0
   144b0:	ldm	r3, {r0, r1}
   144b4:	str	r5, [fp]
   144b8:	stm	r5, {r0, r1}
   144bc:	b	14384 <close_stdout@@Base+0x1258>
   144c0:	bl	111d4 <abort@plt>
   144c4:	bl	15640 <close_stdout@@Base+0x2514>
   144c8:	andeq	r3, r1, r8, lsr lr
   144cc:	andeq	r3, r1, r8, ror #27
   144d0:	andeq	r3, r1, r4, lsr #27
   144d4:	andeq	r3, r1, r0, ror sp
   144d8:	push	{r4, r5, r6, lr}
   144dc:	mov	r5, r0
   144e0:	bl	110f0 <__errno_location@plt>
   144e4:	cmp	r5, #0
   144e8:	mov	r1, #48	; 0x30
   144ec:	mov	r4, r0
   144f0:	ldr	r0, [pc, #24]	; 14510 <close_stdout@@Base+0x13e4>
   144f4:	ldr	r6, [r4]
   144f8:	add	r0, pc, r0
   144fc:	add	r0, r0, #256	; 0x100
   14500:	movne	r0, r5
   14504:	bl	15600 <close_stdout@@Base+0x24d4>
   14508:	str	r6, [r4]
   1450c:	pop	{r4, r5, r6, pc}
   14510:	muleq	r1, r4, ip
   14514:	cmp	r0, #0
   14518:	beq	14524 <close_stdout@@Base+0x13f8>
   1451c:	ldr	r0, [r0]
   14520:	bx	lr
   14524:	ldr	r0, [pc, #12]	; 14538 <close_stdout@@Base+0x140c>
   14528:	add	r0, pc, r0
   1452c:	add	r0, r0, #256	; 0x100
   14530:	ldr	r0, [r0]
   14534:	bx	lr
   14538:	andeq	r3, r1, r4, ror #24
   1453c:	cmp	r0, #0
   14540:	beq	1454c <close_stdout@@Base+0x1420>
   14544:	str	r1, [r0]
   14548:	bx	lr
   1454c:	ldr	r0, [pc, #12]	; 14560 <close_stdout@@Base+0x1434>
   14550:	add	r0, pc, r0
   14554:	add	r0, r0, #256	; 0x100
   14558:	str	r1, [r0]
   1455c:	bx	lr
   14560:	andeq	r3, r1, ip, lsr ip
   14564:	cmp	r0, #0
   14568:	movne	r3, r0
   1456c:	beq	1459c <close_stdout@@Base+0x1470>
   14570:	lsr	ip, r1, #5
   14574:	and	r1, r1, #31
   14578:	add	r3, r3, ip, lsl #2
   1457c:	ldr	ip, [r3, #8]
   14580:	lsr	r0, ip, r1
   14584:	eor	r2, r0, r2
   14588:	and	r0, r0, #1
   1458c:	and	r2, r2, #1
   14590:	eor	ip, ip, r2, lsl r1
   14594:	str	ip, [r3, #8]
   14598:	bx	lr
   1459c:	ldr	r3, [pc, #8]	; 145ac <close_stdout@@Base+0x1480>
   145a0:	add	r3, pc, r3
   145a4:	add	r3, r3, #256	; 0x100
   145a8:	b	14570 <close_stdout@@Base+0x1444>
   145ac:	andeq	r3, r1, ip, ror #23
   145b0:	subs	r3, r0, #0
   145b4:	beq	145c4 <close_stdout@@Base+0x1498>
   145b8:	ldr	r0, [r3, #4]
   145bc:	str	r1, [r3, #4]
   145c0:	bx	lr
   145c4:	ldr	r3, [pc, #8]	; 145d4 <close_stdout@@Base+0x14a8>
   145c8:	add	r3, pc, r3
   145cc:	add	r3, r3, #256	; 0x100
   145d0:	b	145b8 <close_stdout@@Base+0x148c>
   145d4:	andeq	r3, r1, r4, asr #23
   145d8:	cmp	r0, #0
   145dc:	push	{r3, lr}
   145e0:	beq	14604 <close_stdout@@Base+0x14d8>
   145e4:	cmp	r2, #0
   145e8:	cmpne	r1, #0
   145ec:	mov	r3, #8
   145f0:	strne	r1, [r0, #40]	; 0x28
   145f4:	str	r3, [r0]
   145f8:	strne	r2, [r0, #44]	; 0x2c
   145fc:	popne	{r3, pc}
   14600:	bl	111d4 <abort@plt>
   14604:	ldr	r0, [pc, #8]	; 14614 <close_stdout@@Base+0x14e8>
   14608:	add	r0, pc, r0
   1460c:	add	r0, r0, #256	; 0x100
   14610:	b	145e4 <close_stdout@@Base+0x14b8>
   14614:	andeq	r3, r1, r4, lsl #23
   14618:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1461c:	sub	sp, sp, #24
   14620:	mov	r7, r0
   14624:	mov	sl, r1
   14628:	ldr	r4, [sp, #56]	; 0x38
   1462c:	mov	r9, r2
   14630:	mov	r8, r3
   14634:	cmp	r4, #0
   14638:	beq	1468c <close_stdout@@Base+0x1560>
   1463c:	bl	110f0 <__errno_location@plt>
   14640:	ldr	r3, [r4]
   14644:	add	lr, r4, #8
   14648:	mov	r1, sl
   1464c:	mov	r2, r9
   14650:	ldr	r6, [r0]
   14654:	mov	r5, r0
   14658:	str	r3, [sp]
   1465c:	mov	r0, r7
   14660:	ldr	ip, [r4, #4]
   14664:	mov	r3, r8
   14668:	stmib	sp, {ip, lr}
   1466c:	ldr	ip, [r4, #40]	; 0x28
   14670:	str	ip, [sp, #12]
   14674:	ldr	ip, [r4, #44]	; 0x2c
   14678:	str	ip, [sp, #16]
   1467c:	bl	135e0 <close_stdout@@Base+0x4b4>
   14680:	str	r6, [r5]
   14684:	add	sp, sp, #24
   14688:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1468c:	ldr	r4, [pc, #8]	; 1469c <close_stdout@@Base+0x1570>
   14690:	add	r4, pc, r4
   14694:	add	r4, r4, #256	; 0x100
   14698:	b	1463c <close_stdout@@Base+0x1510>
   1469c:	strdeq	r3, [r1], -ip
   146a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146a4:	subs	r4, r3, #0
   146a8:	sub	sp, sp, #36	; 0x24
   146ac:	mov	r7, r0
   146b0:	mov	r6, r1
   146b4:	mov	r5, r2
   146b8:	beq	14774 <close_stdout@@Base+0x1648>
   146bc:	bl	110f0 <__errno_location@plt>
   146c0:	ldr	r3, [r4]
   146c4:	ldr	sl, [r4, #4]
   146c8:	add	r9, r4, #8
   146cc:	mov	r8, r0
   146d0:	mov	r0, #0
   146d4:	ldr	r2, [r8]
   146d8:	cmp	r5, r0
   146dc:	orreq	sl, sl, #1
   146e0:	str	r9, [sp, #8]
   146e4:	mov	r1, r0
   146e8:	stm	sp, {r3, sl}
   146ec:	mov	r3, r6
   146f0:	ldr	ip, [r4, #40]	; 0x28
   146f4:	str	r2, [sp, #28]
   146f8:	mov	r2, r7
   146fc:	str	ip, [sp, #12]
   14700:	ldr	ip, [r4, #44]	; 0x2c
   14704:	str	ip, [sp, #16]
   14708:	bl	135e0 <close_stdout@@Base+0x4b4>
   1470c:	add	r1, r0, #1
   14710:	mov	fp, r0
   14714:	str	r1, [sp, #24]
   14718:	mov	r0, r1
   1471c:	bl	1542c <close_stdout@@Base+0x2300>
   14720:	ldr	lr, [r4]
   14724:	str	sl, [sp, #4]
   14728:	mov	r3, r6
   1472c:	str	r9, [sp, #8]
   14730:	mov	r2, r7
   14734:	str	lr, [sp]
   14738:	ldr	lr, [r4, #40]	; 0x28
   1473c:	ldr	r1, [sp, #24]
   14740:	str	lr, [sp, #12]
   14744:	ldr	lr, [r4, #44]	; 0x2c
   14748:	str	lr, [sp, #16]
   1474c:	str	r0, [sp, #24]
   14750:	bl	135e0 <close_stdout@@Base+0x4b4>
   14754:	ldr	r3, [sp, #28]
   14758:	cmp	r5, #0
   1475c:	str	r3, [r8]
   14760:	ldr	ip, [sp, #24]
   14764:	strne	fp, [r5]
   14768:	mov	r0, ip
   1476c:	add	sp, sp, #36	; 0x24
   14770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14774:	ldr	r4, [pc, #8]	; 14784 <close_stdout@@Base+0x1658>
   14778:	add	r4, pc, r4
   1477c:	add	r4, r4, #256	; 0x100
   14780:	b	146bc <close_stdout@@Base+0x1590>
   14784:	andeq	r3, r1, r4, lsl sl
   14788:	mov	r3, r2
   1478c:	mov	r2, #0
   14790:	b	146a0 <close_stdout@@Base+0x1574>
   14794:	ldr	r2, [pc, #152]	; 14834 <close_stdout@@Base+0x1708>
   14798:	push	{r3, r4, r5, r6, r7, lr}
   1479c:	add	r2, pc, r2
   147a0:	ldr	r3, [pc, #144]	; 14838 <close_stdout@@Base+0x170c>
   147a4:	ldr	r6, [r2]
   147a8:	add	r3, pc, r3
   147ac:	cmp	r6, #1
   147b0:	ldr	r7, [r3]
   147b4:	movhi	r4, #1
   147b8:	movhi	r5, r7
   147bc:	bls	147d8 <close_stdout@@Base+0x16ac>
   147c0:	ldr	r0, [r5, #12]
   147c4:	add	r4, r4, #1
   147c8:	bl	10f88 <free@plt>
   147cc:	cmp	r4, r6
   147d0:	add	r5, r5, #8
   147d4:	bne	147c0 <close_stdout@@Base+0x1694>
   147d8:	ldr	r4, [pc, #92]	; 1483c <close_stdout@@Base+0x1710>
   147dc:	ldr	r0, [r7, #4]
   147e0:	add	r4, pc, r4
   147e4:	cmp	r0, r4
   147e8:	beq	14800 <close_stdout@@Base+0x16d4>
   147ec:	bl	10f88 <free@plt>
   147f0:	ldr	r3, [pc, #72]	; 14840 <close_stdout@@Base+0x1714>
   147f4:	mov	r2, #256	; 0x100
   147f8:	add	r3, pc, r3
   147fc:	stmib	r3, {r2, r4}
   14800:	ldr	r4, [pc, #60]	; 14844 <close_stdout@@Base+0x1718>
   14804:	add	r4, pc, r4
   14808:	add	r5, r4, #4
   1480c:	cmp	r7, r5
   14810:	beq	14820 <close_stdout@@Base+0x16f4>
   14814:	mov	r0, r7
   14818:	bl	10f88 <free@plt>
   1481c:	str	r5, [r4]
   14820:	ldr	r3, [pc, #32]	; 14848 <close_stdout@@Base+0x171c>
   14824:	mov	r2, #1
   14828:	add	r3, pc, r3
   1482c:	str	r2, [r3]
   14830:	pop	{r3, r4, r5, r6, r7, pc}
   14834:	muleq	r1, r4, r9
   14838:			; <UNDEFINED> instruction: 0x000139bc
   1483c:	andeq	r3, r1, ip, lsr #19
   14840:	andeq	r3, r1, ip, ror #18
   14844:	andeq	r3, r1, r0, ror #18
   14848:	andeq	r3, r1, r8, lsl #18
   1484c:	ldr	r3, [pc, #12]	; 14860 <close_stdout@@Base+0x1734>
   14850:	mvn	r2, #0
   14854:	add	r3, pc, r3
   14858:	add	r3, r3, #256	; 0x100
   1485c:	b	14308 <close_stdout@@Base+0x11dc>
   14860:	andeq	r3, r1, r8, lsr r9
   14864:	ldr	r3, [pc, #8]	; 14874 <close_stdout@@Base+0x1748>
   14868:	add	r3, pc, r3
   1486c:	add	r3, r3, #256	; 0x100
   14870:	b	14308 <close_stdout@@Base+0x11dc>
   14874:	andeq	r3, r1, r4, lsr #18
   14878:	mov	r1, r0
   1487c:	mov	r0, #0
   14880:	b	1484c <close_stdout@@Base+0x1720>
   14884:	mov	r2, r1
   14888:	mov	r1, r0
   1488c:	mov	r0, #0
   14890:	b	14864 <close_stdout@@Base+0x1738>
   14894:	ldr	r3, [pc, #92]	; 148f8 <close_stdout@@Base+0x17cc>
   14898:	ldr	ip, [pc, #92]	; 148fc <close_stdout@@Base+0x17d0>
   1489c:	add	r3, pc, r3
   148a0:	push	{r4, r5, r6, r7, lr}
   148a4:	sub	sp, sp, #60	; 0x3c
   148a8:	ldr	r4, [r3, ip]
   148ac:	add	r5, sp, #4
   148b0:	mov	r7, r2
   148b4:	mov	r6, r0
   148b8:	mov	r0, r5
   148bc:	ldr	r3, [r4]
   148c0:	str	r3, [sp, #52]	; 0x34
   148c4:	bl	13428 <close_stdout@@Base+0x2fc>
   148c8:	mov	r3, r5
   148cc:	mvn	r2, #0
   148d0:	mov	r0, r6
   148d4:	mov	r1, r7
   148d8:	bl	14308 <close_stdout@@Base+0x11dc>
   148dc:	ldr	r2, [sp, #52]	; 0x34
   148e0:	ldr	r3, [r4]
   148e4:	cmp	r2, r3
   148e8:	bne	148f4 <close_stdout@@Base+0x17c8>
   148ec:	add	sp, sp, #60	; 0x3c
   148f0:	pop	{r4, r5, r6, r7, pc}
   148f4:	bl	10fd0 <__stack_chk_fail@plt>
   148f8:	andeq	r3, r1, ip, asr r7
   148fc:	strdeq	r0, [r0], -ip
   14900:	ldr	ip, [pc, #96]	; 14968 <close_stdout@@Base+0x183c>
   14904:	push	{r4, r5, r6, r7, r8, lr}
   14908:	add	ip, pc, ip
   1490c:	ldr	lr, [pc, #88]	; 1496c <close_stdout@@Base+0x1840>
   14910:	sub	sp, sp, #56	; 0x38
   14914:	mov	r8, r3
   14918:	add	r5, sp, #4
   1491c:	mov	r7, r2
   14920:	mov	r6, r0
   14924:	ldr	r4, [ip, lr]
   14928:	mov	r0, r5
   1492c:	ldr	r3, [r4]
   14930:	str	r3, [sp, #52]	; 0x34
   14934:	bl	13428 <close_stdout@@Base+0x2fc>
   14938:	mov	r2, r8
   1493c:	mov	r3, r5
   14940:	mov	r0, r6
   14944:	mov	r1, r7
   14948:	bl	14308 <close_stdout@@Base+0x11dc>
   1494c:	ldr	r2, [sp, #52]	; 0x34
   14950:	ldr	r3, [r4]
   14954:	cmp	r2, r3
   14958:	bne	14964 <close_stdout@@Base+0x1838>
   1495c:	add	sp, sp, #56	; 0x38
   14960:	pop	{r4, r5, r6, r7, r8, pc}
   14964:	bl	10fd0 <__stack_chk_fail@plt>
   14968:	strdeq	r3, [r1], -r0
   1496c:	strdeq	r0, [r0], -ip
   14970:	mov	r2, r1
   14974:	mov	r1, r0
   14978:	mov	r0, #0
   1497c:	b	14894 <close_stdout@@Base+0x1768>
   14980:	mov	ip, r1
   14984:	mov	r3, r2
   14988:	mov	r1, r0
   1498c:	mov	r2, ip
   14990:	mov	r0, #0
   14994:	b	14900 <close_stdout@@Base+0x17d4>
   14998:	push	{r4, r5, r6, r7, r8, lr}
   1499c:	mov	r5, r2
   149a0:	ldr	lr, [pc, #136]	; 14a30 <close_stdout@@Base+0x1904>
   149a4:	mov	r7, r0
   149a8:	mov	r6, r1
   149ac:	ldr	r4, [pc, #128]	; 14a34 <close_stdout@@Base+0x1908>
   149b0:	add	lr, pc, lr
   149b4:	sub	sp, sp, #56	; 0x38
   149b8:	add	lr, lr, #256	; 0x100
   149bc:	ldr	r8, [pc, #116]	; 14a38 <close_stdout@@Base+0x190c>
   149c0:	add	r4, pc, r4
   149c4:	add	ip, sp, #4
   149c8:	ldm	lr!, {r0, r1, r2, r3}
   149cc:	ldr	r4, [r4, r8]
   149d0:	stmia	ip!, {r0, r1, r2, r3}
   149d4:	ldm	lr!, {r0, r1, r2, r3}
   149d8:	ldr	r8, [r4]
   149dc:	stmia	ip!, {r0, r1, r2, r3}
   149e0:	ldm	lr, {r0, r1, r2, r3}
   149e4:	str	r8, [sp, #52]	; 0x34
   149e8:	stm	ip, {r0, r1, r2, r3}
   149ec:	mov	r1, r5
   149f0:	add	r5, sp, #4
   149f4:	mov	r2, #1
   149f8:	mov	r0, r5
   149fc:	bl	14564 <close_stdout@@Base+0x1438>
   14a00:	mov	r2, r6
   14a04:	mov	r3, r5
   14a08:	mov	r1, r7
   14a0c:	mov	r0, #0
   14a10:	bl	14308 <close_stdout@@Base+0x11dc>
   14a14:	ldr	r2, [sp, #52]	; 0x34
   14a18:	ldr	r3, [r4]
   14a1c:	cmp	r2, r3
   14a20:	bne	14a2c <close_stdout@@Base+0x1900>
   14a24:	add	sp, sp, #56	; 0x38
   14a28:	pop	{r4, r5, r6, r7, r8, pc}
   14a2c:	bl	10fd0 <__stack_chk_fail@plt>
   14a30:	ldrdeq	r3, [r1], -ip
   14a34:	andeq	r3, r1, r8, lsr r6
   14a38:	strdeq	r0, [r0], -ip
   14a3c:	mov	r2, r1
   14a40:	mvn	r1, #0
   14a44:	b	14998 <close_stdout@@Base+0x186c>
   14a48:	mov	r1, #58	; 0x3a
   14a4c:	b	14a3c <close_stdout@@Base+0x1910>
   14a50:	mov	r2, #58	; 0x3a
   14a54:	b	14998 <close_stdout@@Base+0x186c>
   14a58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a5c:	mov	r5, r2
   14a60:	ldr	lr, [pc, #144]	; 14af8 <close_stdout@@Base+0x19cc>
   14a64:	mov	r8, r0
   14a68:	mov	r9, r1
   14a6c:	mov	r7, r3
   14a70:	add	lr, pc, lr
   14a74:	ldr	r4, [pc, #128]	; 14afc <close_stdout@@Base+0x19d0>
   14a78:	add	lr, lr, #256	; 0x100
   14a7c:	sub	sp, sp, #56	; 0x38
   14a80:	ldr	sl, [pc, #120]	; 14b00 <close_stdout@@Base+0x19d4>
   14a84:	add	r4, pc, r4
   14a88:	ldm	lr!, {r0, r1, r2, r3}
   14a8c:	add	ip, sp, #4
   14a90:	ldr	r4, [r4, sl]
   14a94:	ldr	r6, [sp, #88]	; 0x58
   14a98:	stmia	ip!, {r0, r1, r2, r3}
   14a9c:	ldm	lr!, {r0, r1, r2, r3}
   14aa0:	ldr	sl, [r4]
   14aa4:	stmia	ip!, {r0, r1, r2, r3}
   14aa8:	ldm	lr, {r0, r1, r2, r3}
   14aac:	str	sl, [sp, #52]	; 0x34
   14ab0:	stm	ip, {r0, r1, r2, r3}
   14ab4:	mov	r2, r5
   14ab8:	add	r5, sp, #4
   14abc:	mov	r1, r9
   14ac0:	mov	r0, r5
   14ac4:	bl	145d8 <close_stdout@@Base+0x14ac>
   14ac8:	mov	r2, r6
   14acc:	mov	r3, r5
   14ad0:	mov	r0, r8
   14ad4:	mov	r1, r7
   14ad8:	bl	14308 <close_stdout@@Base+0x11dc>
   14adc:	ldr	r2, [sp, #52]	; 0x34
   14ae0:	ldr	r3, [r4]
   14ae4:	cmp	r2, r3
   14ae8:	bne	14af4 <close_stdout@@Base+0x19c8>
   14aec:	add	sp, sp, #56	; 0x38
   14af0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14af4:	bl	10fd0 <__stack_chk_fail@plt>
   14af8:	andeq	r3, r1, ip, lsl r7
   14afc:	andeq	r3, r1, r4, ror r5
   14b00:	strdeq	r0, [r0], -ip
   14b04:	push	{lr}		; (str lr, [sp, #-4]!)
   14b08:	sub	sp, sp, #12
   14b0c:	mvn	ip, #0
   14b10:	str	ip, [sp]
   14b14:	bl	14a58 <close_stdout@@Base+0x192c>
   14b18:	add	sp, sp, #12
   14b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b20:	mov	ip, r1
   14b24:	mov	r3, r2
   14b28:	mov	r1, r0
   14b2c:	mov	r2, ip
   14b30:	mov	r0, #0
   14b34:	b	14b04 <close_stdout@@Base+0x19d8>
   14b38:	push	{lr}		; (str lr, [sp, #-4]!)
   14b3c:	sub	sp, sp, #12
   14b40:	mov	lr, r1
   14b44:	mov	ip, r2
   14b48:	mov	r1, r0
   14b4c:	str	r3, [sp]
   14b50:	mov	r2, lr
   14b54:	mov	r3, ip
   14b58:	mov	r0, #0
   14b5c:	bl	14a58 <close_stdout@@Base+0x192c>
   14b60:	add	sp, sp, #12
   14b64:	pop	{pc}		; (ldr pc, [sp], #4)
   14b68:	ldr	r3, [pc, #12]	; 14b7c <close_stdout@@Base+0x1a50>
   14b6c:	ldr	ip, [pc, #12]	; 14b80 <close_stdout@@Base+0x1a54>
   14b70:	add	r3, pc, r3
   14b74:	ldr	r3, [r3, ip]
   14b78:	b	14308 <close_stdout@@Base+0x11dc>
   14b7c:	andeq	r3, r1, r8, lsl #9
   14b80:	strdeq	r0, [r0], -r8
   14b84:	mov	r2, r1
   14b88:	mov	r1, r0
   14b8c:	mov	r0, #0
   14b90:	b	14b68 <close_stdout@@Base+0x1a3c>
   14b94:	mvn	r2, #0
   14b98:	b	14b68 <close_stdout@@Base+0x1a3c>
   14b9c:	mov	r1, r0
   14ba0:	mov	r0, #0
   14ba4:	b	14b94 <close_stdout@@Base+0x1a68>
   14ba8:	push	{r4, r5, r6}
   14bac:	ldrb	r3, [r0]
   14bb0:	ldrb	r2, [r1]
   14bb4:	cmp	r3, #45	; 0x2d
   14bb8:	beq	14c88 <close_stdout@@Base+0x1b5c>
   14bbc:	cmp	r2, #45	; 0x2d
   14bc0:	beq	14c34 <close_stdout@@Base+0x1b08>
   14bc4:	cmp	r3, #48	; 0x30
   14bc8:	beq	14d34 <close_stdout@@Base+0x1c08>
   14bcc:	cmp	r2, #48	; 0x30
   14bd0:	bne	14be8 <close_stdout@@Base+0x1abc>
   14bd4:	add	ip, r1, #1
   14bd8:	mov	r1, ip
   14bdc:	ldrb	r2, [ip], #1
   14be0:	cmp	r2, #48	; 0x30
   14be4:	beq	14bd8 <close_stdout@@Base+0x1aac>
   14be8:	cmp	r2, r3
   14bec:	bne	14d64 <close_stdout@@Base+0x1c38>
   14bf0:	sub	r2, r2, #48	; 0x30
   14bf4:	cmp	r2, #9
   14bf8:	bhi	14de0 <close_stdout@@Base+0x1cb4>
   14bfc:	add	r4, r0, #1
   14c00:	add	ip, r1, #1
   14c04:	ldrb	r3, [r4]
   14c08:	mov	r0, r4
   14c0c:	ldrb	r2, [ip]
   14c10:	mov	r1, ip
   14c14:	add	r4, r4, #1
   14c18:	add	ip, ip, #1
   14c1c:	cmp	r3, r2
   14c20:	sub	r5, r3, #48	; 0x30
   14c24:	bne	14df4 <close_stdout@@Base+0x1cc8>
   14c28:	cmp	r5, #9
   14c2c:	bls	14c04 <close_stdout@@Base+0x1ad8>
   14c30:	b	14dd8 <close_stdout@@Base+0x1cac>
   14c34:	ldrb	r2, [r1, #1]!
   14c38:	cmp	r2, #48	; 0x30
   14c3c:	beq	14c34 <close_stdout@@Base+0x1b08>
   14c40:	sub	r2, r2, #48	; 0x30
   14c44:	cmp	r2, #9
   14c48:	bls	14c7c <close_stdout@@Base+0x1b50>
   14c4c:	cmp	r3, #48	; 0x30
   14c50:	beq	14c6c <close_stdout@@Base+0x1b40>
   14c54:	sub	r3, r3, #48	; 0x30
   14c58:	cmp	r3, #9
   14c5c:	movhi	r0, #0
   14c60:	movls	r0, #1
   14c64:	pop	{r4, r5, r6}
   14c68:	bx	lr
   14c6c:	ldrb	r3, [r0, #1]!
   14c70:	b	14c4c <close_stdout@@Base+0x1b20>
   14c74:	cmp	r5, #0
   14c78:	beq	14dd8 <close_stdout@@Base+0x1cac>
   14c7c:	mov	r0, #1
   14c80:	pop	{r4, r5, r6}
   14c84:	bx	lr
   14c88:	mov	ip, r0
   14c8c:	ldrb	r4, [ip, #1]
   14c90:	add	ip, ip, #1
   14c94:	cmp	r4, #48	; 0x30
   14c98:	beq	14c8c <close_stdout@@Base+0x1b60>
   14c9c:	cmp	r2, #45	; 0x2d
   14ca0:	beq	14cd0 <close_stdout@@Base+0x1ba4>
   14ca4:	sub	r4, r4, #48	; 0x30
   14ca8:	cmp	r4, #9
   14cac:	bls	14d5c <close_stdout@@Base+0x1c30>
   14cb0:	cmp	r2, #48	; 0x30
   14cb4:	beq	14d2c <close_stdout@@Base+0x1c00>
   14cb8:	sub	r2, r2, #48	; 0x30
   14cbc:	cmp	r2, #9
   14cc0:	movhi	r0, #0
   14cc4:	mvnls	r0, #0
   14cc8:	pop	{r4, r5, r6}
   14ccc:	bx	lr
   14cd0:	ldrb	r3, [r1, #1]
   14cd4:	add	r1, r1, #1
   14cd8:	cmp	r3, #48	; 0x30
   14cdc:	beq	14cd0 <close_stdout@@Base+0x1ba4>
   14ce0:	cmp	r4, r3
   14ce4:	bne	14e7c <close_stdout@@Base+0x1d50>
   14ce8:	sub	r4, r4, #48	; 0x30
   14cec:	cmp	r4, #9
   14cf0:	bhi	14dd8 <close_stdout@@Base+0x1cac>
   14cf4:	add	r2, ip, #1
   14cf8:	add	r3, r1, #1
   14cfc:	ldrb	r4, [r2]
   14d00:	mov	ip, r2
   14d04:	ldrb	r5, [r3]
   14d08:	mov	r1, r3
   14d0c:	add	r2, r2, #1
   14d10:	add	r3, r3, #1
   14d14:	cmp	r4, r5
   14d18:	sub	r0, r4, #48	; 0x30
   14d1c:	bne	14dfc <close_stdout@@Base+0x1cd0>
   14d20:	cmp	r0, #9
   14d24:	bls	14cfc <close_stdout@@Base+0x1bd0>
   14d28:	b	14dd8 <close_stdout@@Base+0x1cac>
   14d2c:	ldrb	r2, [r1, #1]!
   14d30:	b	14cb0 <close_stdout@@Base+0x1b84>
   14d34:	add	ip, r0, #1
   14d38:	mov	r0, ip
   14d3c:	ldrb	r3, [ip], #1
   14d40:	cmp	r3, #48	; 0x30
   14d44:	beq	14d38 <close_stdout@@Base+0x1c0c>
   14d48:	cmp	r2, #48	; 0x30
   14d4c:	bne	14be8 <close_stdout@@Base+0x1abc>
   14d50:	b	14bd4 <close_stdout@@Base+0x1aa8>
   14d54:	cmp	r3, #0
   14d58:	beq	14dd8 <close_stdout@@Base+0x1cac>
   14d5c:	mvn	r0, #0
   14d60:	b	14c64 <close_stdout@@Base+0x1b38>
   14d64:	sub	ip, r3, #48	; 0x30
   14d68:	cmp	ip, #9
   14d6c:	rsb	r3, r2, r3
   14d70:	subhi	r2, r2, #48	; 0x30
   14d74:	bhi	14de4 <close_stdout@@Base+0x1cb8>
   14d78:	mov	ip, r0
   14d7c:	ldrb	r4, [ip, #1]!
   14d80:	sub	r4, r4, #48	; 0x30
   14d84:	rsb	r5, r0, ip
   14d88:	cmp	r4, #9
   14d8c:	bls	14d7c <close_stdout@@Base+0x1c50>
   14d90:	sub	r2, r2, #48	; 0x30
   14d94:	cmp	r2, #9
   14d98:	bhi	14c74 <close_stdout@@Base+0x1b48>
   14d9c:	mov	r2, r1
   14da0:	ldrb	r0, [r2, #1]!
   14da4:	sub	r0, r0, #48	; 0x30
   14da8:	rsb	ip, r1, r2
   14dac:	cmp	r0, #9
   14db0:	bls	14da0 <close_stdout@@Base+0x1c74>
   14db4:	cmp	ip, r5
   14db8:	beq	14dcc <close_stdout@@Base+0x1ca0>
   14dbc:	cmp	r5, ip
   14dc0:	mvncc	r0, #0
   14dc4:	movcs	r0, #1
   14dc8:	b	14c64 <close_stdout@@Base+0x1b38>
   14dcc:	cmp	r5, #0
   14dd0:	movne	r0, r3
   14dd4:	bne	14c64 <close_stdout@@Base+0x1b38>
   14dd8:	mov	r0, #0
   14ddc:	b	14c64 <close_stdout@@Base+0x1b38>
   14de0:	mov	r3, #0
   14de4:	cmp	r2, #9
   14de8:	movls	r5, #0
   14dec:	bls	14d9c <close_stdout@@Base+0x1c70>
   14df0:	b	14dd8 <close_stdout@@Base+0x1cac>
   14df4:	mov	ip, r5
   14df8:	b	14d68 <close_stdout@@Base+0x1c3c>
   14dfc:	rsb	r0, r4, r5
   14e00:	sub	r4, r4, #48	; 0x30
   14e04:	sub	r5, r5, #48	; 0x30
   14e08:	cmp	r4, #9
   14e0c:	bhi	14e6c <close_stdout@@Base+0x1d40>
   14e10:	mov	r4, ip
   14e14:	ldrb	r6, [r4, #1]!
   14e18:	sub	r6, r6, #48	; 0x30
   14e1c:	rsb	r3, ip, r4
   14e20:	cmp	r6, #9
   14e24:	bls	14e14 <close_stdout@@Base+0x1ce8>
   14e28:	cmp	r5, #9
   14e2c:	bhi	14d54 <close_stdout@@Base+0x1c28>
   14e30:	mov	ip, r1
   14e34:	ldrb	r4, [ip, #1]!
   14e38:	sub	r4, r4, #48	; 0x30
   14e3c:	rsb	r2, r1, ip
   14e40:	cmp	r4, #9
   14e44:	bls	14e34 <close_stdout@@Base+0x1d08>
   14e48:	cmp	r2, r3
   14e4c:	beq	14e60 <close_stdout@@Base+0x1d34>
   14e50:	cmp	r3, r2
   14e54:	movcc	r0, #1
   14e58:	mvncs	r0, #0
   14e5c:	b	14c64 <close_stdout@@Base+0x1b38>
   14e60:	cmp	r3, #0
   14e64:	bne	14c64 <close_stdout@@Base+0x1b38>
   14e68:	b	14dd8 <close_stdout@@Base+0x1cac>
   14e6c:	cmp	r5, #9
   14e70:	movls	r3, #0
   14e74:	bls	14e30 <close_stdout@@Base+0x1d04>
   14e78:	b	14dd8 <close_stdout@@Base+0x1cac>
   14e7c:	rsb	r0, r4, r3
   14e80:	sub	r5, r3, #48	; 0x30
   14e84:	sub	r4, r4, #48	; 0x30
   14e88:	b	14e08 <close_stdout@@Base+0x1cdc>
   14e8c:	push	{r4, r5, r6, r7, lr}
   14e90:	cmp	r1, #0
   14e94:	sub	sp, sp, #36	; 0x24
   14e98:	ldr	r7, [pc, #896]	; 15220 <close_stdout@@Base+0x20f4>
   14e9c:	mov	ip, r3
   14ea0:	mov	r5, r0
   14ea4:	add	r7, pc, r7
   14ea8:	ldr	r4, [sp, #56]	; 0x38
   14eac:	ldr	r6, [sp, #60]	; 0x3c
   14eb0:	beq	151f4 <close_stdout@@Base+0x20c8>
   14eb4:	str	r2, [sp]
   14eb8:	mov	r3, r1
   14ebc:	ldr	r2, [pc, #864]	; 15224 <close_stdout@@Base+0x20f8>
   14ec0:	mov	r1, #1
   14ec4:	str	ip, [sp, #4]
   14ec8:	add	r2, pc, r2
   14ecc:	bl	11138 <__fprintf_chk@plt>
   14ed0:	ldr	r1, [pc, #848]	; 15228 <close_stdout@@Base+0x20fc>
   14ed4:	mov	r2, #5
   14ed8:	mov	r0, #0
   14edc:	add	r1, pc, r1
   14ee0:	bl	10fc4 <dcgettext@plt>
   14ee4:	ldr	r2, [pc, #832]	; 1522c <close_stdout@@Base+0x2100>
   14ee8:	movw	ip, #2013	; 0x7dd
   14eec:	mov	r1, #1
   14ef0:	ldr	r2, [r7, r2]
   14ef4:	str	ip, [sp]
   14ef8:	mov	r3, r0
   14efc:	mov	r0, r5
   14f00:	bl	11138 <__fprintf_chk@plt>
   14f04:	ldr	r1, [pc, #804]	; 15230 <close_stdout@@Base+0x2104>
   14f08:	mov	r0, #0
   14f0c:	mov	r2, #5
   14f10:	add	r1, pc, r1
   14f14:	bl	10fc4 <dcgettext@plt>
   14f18:	mov	r1, r5
   14f1c:	bl	10f4c <fputs_unlocked@plt>
   14f20:	cmp	r6, #9
   14f24:	addls	pc, pc, r6, lsl #2
   14f28:	b	15210 <close_stdout@@Base+0x20e4>
   14f2c:	b	14fc0 <close_stdout@@Base+0x1e94>
   14f30:	b	14fc4 <close_stdout@@Base+0x1e98>
   14f34:	b	14ff4 <close_stdout@@Base+0x1ec8>
   14f38:	b	15028 <close_stdout@@Base+0x1efc>
   14f3c:	b	15064 <close_stdout@@Base+0x1f38>
   14f40:	b	150a4 <close_stdout@@Base+0x1f78>
   14f44:	b	150ec <close_stdout@@Base+0x1fc0>
   14f48:	b	1513c <close_stdout@@Base+0x2010>
   14f4c:	b	15194 <close_stdout@@Base+0x2068>
   14f50:	b	14f54 <close_stdout@@Base+0x1e28>
   14f54:	ldr	r1, [pc, #728]	; 15234 <close_stdout@@Base+0x2108>
   14f58:	mov	r0, #0
   14f5c:	add	r1, pc, r1
   14f60:	mov	r2, #5
   14f64:	bl	10fc4 <dcgettext@plt>
   14f68:	ldm	r4, {r3, ip}
   14f6c:	mov	r1, #1
   14f70:	str	ip, [sp]
   14f74:	ldr	ip, [r4, #8]
   14f78:	str	ip, [sp, #4]
   14f7c:	ldr	ip, [r4, #12]
   14f80:	str	ip, [sp, #8]
   14f84:	ldr	ip, [r4, #16]
   14f88:	str	ip, [sp, #12]
   14f8c:	ldr	ip, [r4, #20]
   14f90:	str	ip, [sp, #16]
   14f94:	ldr	ip, [r4, #24]
   14f98:	str	ip, [sp, #20]
   14f9c:	ldr	ip, [r4, #28]
   14fa0:	str	ip, [sp, #24]
   14fa4:	ldr	ip, [r4, #32]
   14fa8:	str	ip, [sp, #28]
   14fac:	mov	r2, r0
   14fb0:	mov	r0, r5
   14fb4:	bl	11138 <__fprintf_chk@plt>
   14fb8:	add	sp, sp, #36	; 0x24
   14fbc:	pop	{r4, r5, r6, r7, pc}
   14fc0:	bl	111d4 <abort@plt>
   14fc4:	ldr	r1, [pc, #620]	; 15238 <close_stdout@@Base+0x210c>
   14fc8:	mov	r2, #5
   14fcc:	mov	r0, #0
   14fd0:	add	r1, pc, r1
   14fd4:	bl	10fc4 <dcgettext@plt>
   14fd8:	ldr	r3, [r4]
   14fdc:	mov	r1, #1
   14fe0:	mov	r2, r0
   14fe4:	mov	r0, r5
   14fe8:	add	sp, sp, #36	; 0x24
   14fec:	pop	{r4, r5, r6, r7, lr}
   14ff0:	b	11138 <__fprintf_chk@plt>
   14ff4:	ldr	r1, [pc, #576]	; 1523c <close_stdout@@Base+0x2110>
   14ff8:	mov	r2, #5
   14ffc:	mov	r0, #0
   15000:	add	r1, pc, r1
   15004:	bl	10fc4 <dcgettext@plt>
   15008:	ldm	r4, {r3, ip}
   1500c:	mov	r1, #1
   15010:	str	ip, [sp, #56]	; 0x38
   15014:	mov	r2, r0
   15018:	mov	r0, r5
   1501c:	add	sp, sp, #36	; 0x24
   15020:	pop	{r4, r5, r6, r7, lr}
   15024:	b	11138 <__fprintf_chk@plt>
   15028:	ldr	r1, [pc, #528]	; 15240 <close_stdout@@Base+0x2114>
   1502c:	mov	r2, #5
   15030:	mov	r0, #0
   15034:	add	r1, pc, r1
   15038:	bl	10fc4 <dcgettext@plt>
   1503c:	ldm	r4, {r3, ip}
   15040:	mov	r1, #1
   15044:	str	ip, [sp, #56]	; 0x38
   15048:	ldr	ip, [r4, #8]
   1504c:	str	ip, [sp, #60]	; 0x3c
   15050:	mov	r2, r0
   15054:	mov	r0, r5
   15058:	add	sp, sp, #36	; 0x24
   1505c:	pop	{r4, r5, r6, r7, lr}
   15060:	b	11138 <__fprintf_chk@plt>
   15064:	ldr	r1, [pc, #472]	; 15244 <close_stdout@@Base+0x2118>
   15068:	mov	r2, #5
   1506c:	mov	r0, #0
   15070:	add	r1, pc, r1
   15074:	bl	10fc4 <dcgettext@plt>
   15078:	ldm	r4, {r3, ip}
   1507c:	mov	r1, #1
   15080:	str	ip, [sp]
   15084:	ldr	ip, [r4, #8]
   15088:	str	ip, [sp, #4]
   1508c:	ldr	ip, [r4, #12]
   15090:	str	ip, [sp, #8]
   15094:	mov	r2, r0
   15098:	mov	r0, r5
   1509c:	bl	11138 <__fprintf_chk@plt>
   150a0:	b	14fb8 <close_stdout@@Base+0x1e8c>
   150a4:	ldr	r1, [pc, #412]	; 15248 <close_stdout@@Base+0x211c>
   150a8:	mov	r2, #5
   150ac:	mov	r0, #0
   150b0:	add	r1, pc, r1
   150b4:	bl	10fc4 <dcgettext@plt>
   150b8:	ldm	r4, {r3, ip}
   150bc:	mov	r1, #1
   150c0:	str	ip, [sp]
   150c4:	ldr	ip, [r4, #8]
   150c8:	str	ip, [sp, #4]
   150cc:	ldr	ip, [r4, #12]
   150d0:	str	ip, [sp, #8]
   150d4:	ldr	ip, [r4, #16]
   150d8:	str	ip, [sp, #12]
   150dc:	mov	r2, r0
   150e0:	mov	r0, r5
   150e4:	bl	11138 <__fprintf_chk@plt>
   150e8:	b	14fb8 <close_stdout@@Base+0x1e8c>
   150ec:	ldr	r1, [pc, #344]	; 1524c <close_stdout@@Base+0x2120>
   150f0:	mov	r2, #5
   150f4:	mov	r0, #0
   150f8:	add	r1, pc, r1
   150fc:	bl	10fc4 <dcgettext@plt>
   15100:	ldm	r4, {r3, ip}
   15104:	mov	r1, #1
   15108:	str	ip, [sp]
   1510c:	ldr	ip, [r4, #8]
   15110:	str	ip, [sp, #4]
   15114:	ldr	ip, [r4, #12]
   15118:	str	ip, [sp, #8]
   1511c:	ldr	ip, [r4, #16]
   15120:	str	ip, [sp, #12]
   15124:	ldr	ip, [r4, #20]
   15128:	str	ip, [sp, #16]
   1512c:	mov	r2, r0
   15130:	mov	r0, r5
   15134:	bl	11138 <__fprintf_chk@plt>
   15138:	b	14fb8 <close_stdout@@Base+0x1e8c>
   1513c:	ldr	r1, [pc, #268]	; 15250 <close_stdout@@Base+0x2124>
   15140:	mov	r2, #5
   15144:	mov	r0, #0
   15148:	add	r1, pc, r1
   1514c:	bl	10fc4 <dcgettext@plt>
   15150:	ldm	r4, {r3, ip}
   15154:	mov	r1, #1
   15158:	str	ip, [sp]
   1515c:	ldr	ip, [r4, #8]
   15160:	str	ip, [sp, #4]
   15164:	ldr	ip, [r4, #12]
   15168:	str	ip, [sp, #8]
   1516c:	ldr	ip, [r4, #16]
   15170:	str	ip, [sp, #12]
   15174:	ldr	ip, [r4, #20]
   15178:	str	ip, [sp, #16]
   1517c:	ldr	ip, [r4, #24]
   15180:	str	ip, [sp, #20]
   15184:	mov	r2, r0
   15188:	mov	r0, r5
   1518c:	bl	11138 <__fprintf_chk@plt>
   15190:	b	14fb8 <close_stdout@@Base+0x1e8c>
   15194:	ldr	r1, [pc, #184]	; 15254 <close_stdout@@Base+0x2128>
   15198:	mov	r2, #5
   1519c:	mov	r0, #0
   151a0:	add	r1, pc, r1
   151a4:	bl	10fc4 <dcgettext@plt>
   151a8:	ldm	r4, {r3, ip}
   151ac:	mov	r1, #1
   151b0:	str	ip, [sp]
   151b4:	ldr	ip, [r4, #8]
   151b8:	str	ip, [sp, #4]
   151bc:	ldr	ip, [r4, #12]
   151c0:	str	ip, [sp, #8]
   151c4:	ldr	ip, [r4, #16]
   151c8:	str	ip, [sp, #12]
   151cc:	ldr	ip, [r4, #20]
   151d0:	str	ip, [sp, #16]
   151d4:	ldr	ip, [r4, #24]
   151d8:	str	ip, [sp, #20]
   151dc:	ldr	ip, [r4, #28]
   151e0:	str	ip, [sp, #24]
   151e4:	mov	r2, r0
   151e8:	mov	r0, r5
   151ec:	bl	11138 <__fprintf_chk@plt>
   151f0:	b	14fb8 <close_stdout@@Base+0x1e8c>
   151f4:	str	r3, [sp]
   151f8:	mov	r3, r2
   151fc:	ldr	r2, [pc, #84]	; 15258 <close_stdout@@Base+0x212c>
   15200:	mov	r1, #1
   15204:	add	r2, pc, r2
   15208:	bl	11138 <__fprintf_chk@plt>
   1520c:	b	14ed0 <close_stdout@@Base+0x1da4>
   15210:	ldr	r1, [pc, #68]	; 1525c <close_stdout@@Base+0x2130>
   15214:	mov	r0, #0
   15218:	add	r1, pc, r1
   1521c:	b	14f60 <close_stdout@@Base+0x1e34>
   15220:	andeq	r3, r1, r4, asr r1
   15224:	andeq	r2, r0, r0, ror r9
   15228:	andeq	r2, r0, r0, ror r9
   1522c:	andeq	r0, r0, r4, lsr #2
   15230:	andeq	r2, r0, r0, asr #18
   15234:	andeq	r2, r0, ip, asr #21
   15238:	andeq	r2, r0, ip, asr #18
   1523c:	andeq	r2, r0, ip, lsr #18
   15240:	andeq	r2, r0, r0, lsl r9
   15244:	strdeq	r2, [r0], -r0
   15248:	ldrdeq	r2, [r0], -r0
   1524c:	andeq	r2, r0, ip, lsr #17
   15250:	andeq	r2, r0, r4, lsl #17
   15254:	andeq	r2, r0, r8, asr r8
   15258:	andeq	r2, r0, r0, asr #12
   1525c:	andeq	r2, r0, r4, asr #16
   15260:	push	{r4, r5, lr}
   15264:	sub	sp, sp, #12
   15268:	ldr	r5, [sp, #24]
   1526c:	ldr	ip, [r5]
   15270:	cmp	ip, #0
   15274:	beq	15290 <close_stdout@@Base+0x2164>
   15278:	mov	lr, r5
   1527c:	mov	ip, #0
   15280:	ldr	r4, [lr, #4]!
   15284:	add	ip, ip, #1
   15288:	cmp	r4, #0
   1528c:	bne	15280 <close_stdout@@Base+0x2154>
   15290:	stm	sp, {r5, ip}
   15294:	bl	14e8c <close_stdout@@Base+0x1d60>
   15298:	add	sp, sp, #12
   1529c:	pop	{r4, r5, pc}
   152a0:	push	{r4, r5, r6, r7, lr}
   152a4:	sub	sp, sp, #60	; 0x3c
   152a8:	ldr	r4, [pc, #100]	; 15314 <close_stdout@@Base+0x21e8>
   152ac:	mov	ip, #0
   152b0:	ldr	r5, [pc, #96]	; 15318 <close_stdout@@Base+0x21ec>
   152b4:	mov	lr, ip
   152b8:	add	r4, pc, r4
   152bc:	ldr	r6, [sp, #80]	; 0x50
   152c0:	ldr	r7, [r4, r5]
   152c4:	add	r5, sp, #12
   152c8:	ldr	r4, [r7]
   152cc:	str	r4, [sp, #52]	; 0x34
   152d0:	ldr	r4, [r6, ip]
   152d4:	cmp	r4, #0
   152d8:	str	r4, [r5, ip]
   152dc:	beq	152f0 <close_stdout@@Base+0x21c4>
   152e0:	add	lr, lr, #1
   152e4:	add	ip, ip, #4
   152e8:	cmp	lr, #10
   152ec:	bne	152d0 <close_stdout@@Base+0x21a4>
   152f0:	stm	sp, {r5, lr}
   152f4:	bl	14e8c <close_stdout@@Base+0x1d60>
   152f8:	ldr	r2, [sp, #52]	; 0x34
   152fc:	ldr	r3, [r7]
   15300:	cmp	r2, r3
   15304:	bne	15310 <close_stdout@@Base+0x21e4>
   15308:	add	sp, sp, #60	; 0x3c
   1530c:	pop	{r4, r5, r6, r7, pc}
   15310:	bl	10fd0 <__stack_chk_fail@plt>
   15314:	andeq	r2, r1, r0, asr #26
   15318:	strdeq	r0, [r0], -ip
   1531c:	push	{r3}		; (str r3, [sp, #-4]!)
   15320:	push	{r4, lr}
   15324:	sub	sp, sp, #20
   15328:	ldr	lr, [pc, #72]	; 15378 <close_stdout@@Base+0x224c>
   1532c:	add	ip, sp, #32
   15330:	ldr	r4, [pc, #68]	; 1537c <close_stdout@@Base+0x2250>
   15334:	add	lr, pc, lr
   15338:	ldr	r3, [sp, #28]
   1533c:	ldr	r4, [lr, r4]
   15340:	str	ip, [sp]
   15344:	str	ip, [sp, #8]
   15348:	ldr	ip, [r4]
   1534c:	str	ip, [sp, #12]
   15350:	bl	152a0 <close_stdout@@Base+0x2174>
   15354:	ldr	r2, [sp, #12]
   15358:	ldr	r3, [r4]
   1535c:	cmp	r2, r3
   15360:	bne	15374 <close_stdout@@Base+0x2248>
   15364:	add	sp, sp, #20
   15368:	pop	{r4, lr}
   1536c:	add	sp, sp, #4
   15370:	bx	lr
   15374:	bl	10fd0 <__stack_chk_fail@plt>
   15378:	andeq	r2, r1, r4, asr #25
   1537c:	strdeq	r0, [r0], -ip
   15380:	ldr	r1, [pc, #132]	; 1540c <close_stdout@@Base+0x22e0>
   15384:	mov	r2, #5
   15388:	push	{r4, lr}
   1538c:	add	r1, pc, r1
   15390:	mov	r0, #0
   15394:	ldr	r4, [pc, #116]	; 15410 <close_stdout@@Base+0x22e4>
   15398:	bl	10fc4 <dcgettext@plt>
   1539c:	ldr	r2, [pc, #112]	; 15414 <close_stdout@@Base+0x22e8>
   153a0:	add	r4, pc, r4
   153a4:	add	r2, pc, r2
   153a8:	mov	r1, r0
   153ac:	mov	r0, #1
   153b0:	bl	11120 <__printf_chk@plt>
   153b4:	ldr	r1, [pc, #92]	; 15418 <close_stdout@@Base+0x22ec>
   153b8:	mov	r2, #5
   153bc:	mov	r0, #0
   153c0:	add	r1, pc, r1
   153c4:	bl	10fc4 <dcgettext@plt>
   153c8:	ldr	r2, [pc, #76]	; 1541c <close_stdout@@Base+0x22f0>
   153cc:	ldr	r3, [pc, #76]	; 15420 <close_stdout@@Base+0x22f4>
   153d0:	add	r2, pc, r2
   153d4:	add	r3, pc, r3
   153d8:	mov	r1, r0
   153dc:	mov	r0, #1
   153e0:	bl	11120 <__printf_chk@plt>
   153e4:	ldr	r1, [pc, #56]	; 15424 <close_stdout@@Base+0x22f8>
   153e8:	mov	r0, #0
   153ec:	mov	r2, #5
   153f0:	add	r1, pc, r1
   153f4:	bl	10fc4 <dcgettext@plt>
   153f8:	ldr	r3, [pc, #40]	; 15428 <close_stdout@@Base+0x22fc>
   153fc:	ldr	r3, [r4, r3]
   15400:	pop	{r4, lr}
   15404:	ldr	r1, [r3]
   15408:	b	10f4c <fputs_unlocked@plt>
   1540c:	andeq	r2, r0, ip, lsl #14
   15410:	andeq	r2, r1, r8, asr ip
   15414:	andeq	r2, r0, ip, lsl #14
   15418:	andeq	r2, r0, r8, lsl #14
   1541c:	andeq	r2, r0, r0, asr r2
   15420:	andeq	r2, r0, ip, asr r2
   15424:	andeq	r2, r0, ip, ror #13
   15428:	andeq	r0, r0, r4, lsl r1
   1542c:	push	{r4, lr}
   15430:	mov	r4, r0
   15434:	bl	11090 <malloc@plt>
   15438:	rsbs	r3, r0, #1
   1543c:	movcc	r3, #0
   15440:	cmp	r4, #0
   15444:	moveq	r3, #0
   15448:	cmp	r3, #0
   1544c:	popeq	{r4, pc}
   15450:	bl	15640 <close_stdout@@Base+0x2514>
   15454:	push	{r3, r4, r5, lr}
   15458:	mov	r4, r0
   1545c:	mvn	r0, #0
   15460:	mov	r5, r1
   15464:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   15468:	cmp	r0, r4
   1546c:	bcc	1547c <close_stdout@@Base+0x2350>
   15470:	mul	r0, r4, r5
   15474:	pop	{r3, r4, r5, lr}
   15478:	b	1542c <close_stdout@@Base+0x2300>
   1547c:	bl	15640 <close_stdout@@Base+0x2514>
   15480:	b	1542c <close_stdout@@Base+0x2300>
   15484:	rsbs	r3, r1, #1
   15488:	push	{r4, lr}
   1548c:	movcc	r3, #0
   15490:	cmp	r0, #0
   15494:	mov	r4, r1
   15498:	moveq	r3, #0
   1549c:	cmp	r3, #0
   154a0:	bne	154c4 <close_stdout@@Base+0x2398>
   154a4:	bl	10fdc <realloc@plt>
   154a8:	rsbs	r3, r0, #1
   154ac:	movcc	r3, #0
   154b0:	cmp	r4, #0
   154b4:	moveq	r3, #0
   154b8:	cmp	r3, #0
   154bc:	popeq	{r4, pc}
   154c0:	bl	15640 <close_stdout@@Base+0x2514>
   154c4:	bl	10f88 <free@plt>
   154c8:	mov	r0, #0
   154cc:	pop	{r4, pc}
   154d0:	push	{r4, r5, r6, lr}
   154d4:	mov	r5, r1
   154d8:	mov	r6, r0
   154dc:	mov	r1, r2
   154e0:	mvn	r0, #0
   154e4:	mov	r4, r2
   154e8:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   154ec:	cmp	r0, r5
   154f0:	bcc	15504 <close_stdout@@Base+0x23d8>
   154f4:	mov	r0, r6
   154f8:	mul	r1, r5, r4
   154fc:	pop	{r4, r5, r6, lr}
   15500:	b	15484 <close_stdout@@Base+0x2358>
   15504:	bl	15640 <close_stdout@@Base+0x2514>
   15508:	push	{r3, r4, r5, r6, r7, lr}
   1550c:	subs	r7, r0, #0
   15510:	mov	r5, r1
   15514:	mov	r6, r2
   15518:	ldr	r4, [r1]
   1551c:	beq	15554 <close_stdout@@Base+0x2428>
   15520:	movw	r0, #43690	; 0xaaaa
   15524:	mov	r1, r2
   15528:	bfi	r0, r0, #16, #16
   1552c:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   15530:	cmp	r4, r0
   15534:	addcc	r3, r4, #1
   15538:	addcc	r4, r4, r3, lsr #1
   1553c:	bcs	15578 <close_stdout@@Base+0x244c>
   15540:	str	r4, [r5]
   15544:	mov	r0, r7
   15548:	mul	r1, r6, r4
   1554c:	pop	{r3, r4, r5, r6, r7, lr}
   15550:	b	15484 <close_stdout@@Base+0x2358>
   15554:	cmp	r4, #0
   15558:	bne	15540 <close_stdout@@Base+0x2414>
   1555c:	mov	r0, #64	; 0x40
   15560:	mov	r1, r2
   15564:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   15568:	cmp	r0, #0
   1556c:	movne	r4, r0
   15570:	addeq	r4, r0, #1
   15574:	b	15540 <close_stdout@@Base+0x2414>
   15578:	bl	15640 <close_stdout@@Base+0x2514>
   1557c:	cmp	r0, #0
   15580:	push	{r3, lr}
   15584:	ldr	r3, [r1]
   15588:	beq	155b4 <close_stdout@@Base+0x2488>
   1558c:	movw	r2, #43689	; 0xaaa9
   15590:	movt	r2, #43690	; 0xaaaa
   15594:	cmp	r3, r2
   15598:	addls	r2, r3, #1
   1559c:	addls	r3, r3, r2, lsr #1
   155a0:	bhi	155cc <close_stdout@@Base+0x24a0>
   155a4:	str	r3, [r1]
   155a8:	mov	r1, r3
   155ac:	pop	{r3, lr}
   155b0:	b	15484 <close_stdout@@Base+0x2358>
   155b4:	cmp	r3, #0
   155b8:	moveq	r3, #64	; 0x40
   155bc:	str	r3, [r1]
   155c0:	mov	r1, r3
   155c4:	pop	{r3, lr}
   155c8:	b	15484 <close_stdout@@Base+0x2358>
   155cc:	bl	15640 <close_stdout@@Base+0x2514>
   155d0:	push	{r4, lr}
   155d4:	mov	r4, r0
   155d8:	bl	1542c <close_stdout@@Base+0x2300>
   155dc:	mov	r2, r4
   155e0:	mov	r1, #0
   155e4:	pop	{r4, lr}
   155e8:	b	11108 <memset@plt>
   155ec:	push	{r3, lr}
   155f0:	bl	10f40 <calloc@plt>
   155f4:	cmp	r0, #0
   155f8:	popne	{r3, pc}
   155fc:	bl	15640 <close_stdout@@Base+0x2514>
   15600:	push	{r3, r4, r5, lr}
   15604:	mov	r4, r1
   15608:	mov	r5, r0
   1560c:	mov	r0, r1
   15610:	bl	1542c <close_stdout@@Base+0x2300>
   15614:	mov	r1, r5
   15618:	mov	r2, r4
   1561c:	pop	{r3, r4, r5, lr}
   15620:	b	10fa0 <memcpy@plt>
   15624:	push	{r4, lr}
   15628:	mov	r4, r0
   1562c:	bl	110d8 <strlen@plt>
   15630:	add	r1, r0, #1
   15634:	mov	r0, r4
   15638:	pop	{r4, lr}
   1563c:	b	15600 <close_stdout@@Base+0x24d4>
   15640:	ldr	r3, [pc, #64]	; 15688 <close_stdout@@Base+0x255c>
   15644:	mov	r2, #5
   15648:	ldr	ip, [pc, #60]	; 1568c <close_stdout@@Base+0x2560>
   1564c:	mov	r0, #0
   15650:	add	r3, pc, r3
   15654:	ldr	r1, [pc, #52]	; 15690 <close_stdout@@Base+0x2564>
   15658:	push	{r4, lr}
   1565c:	add	r1, pc, r1
   15660:	ldr	r3, [r3, ip]
   15664:	ldr	r4, [r3]
   15668:	bl	10fc4 <dcgettext@plt>
   1566c:	ldr	r2, [pc, #32]	; 15694 <close_stdout@@Base+0x2568>
   15670:	mov	r1, #0
   15674:	add	r2, pc, r2
   15678:	mov	r3, r0
   1567c:	mov	r0, r4
   15680:	bl	1106c <error@plt>
   15684:	bl	111d4 <abort@plt>
   15688:	andeq	r2, r1, r8, lsr #19
   1568c:	andeq	r0, r0, r8, lsl r1
   15690:	strdeq	r2, [r0], -r0
   15694:	strdeq	r2, [r0], -ip
   15698:	push	{r4, r5, r6, lr}
   1569c:	mov	r4, r0
   156a0:	bl	11054 <__fpending@plt>
   156a4:	mov	r6, r0
   156a8:	mov	r0, r4
   156ac:	ldr	r4, [r4]
   156b0:	bl	15b38 <close_stdout@@Base+0x2a0c>
   156b4:	and	r4, r4, #32
   156b8:	adds	r5, r0, #0
   156bc:	movne	r5, #1
   156c0:	cmp	r4, #0
   156c4:	bne	156e4 <close_stdout@@Base+0x25b8>
   156c8:	cmp	r5, #0
   156cc:	beq	156dc <close_stdout@@Base+0x25b0>
   156d0:	cmp	r6, #0
   156d4:	beq	15700 <close_stdout@@Base+0x25d4>
   156d8:	mvn	r4, #0
   156dc:	mov	r0, r4
   156e0:	pop	{r4, r5, r6, pc}
   156e4:	cmp	r5, #0
   156e8:	bne	156d8 <close_stdout@@Base+0x25ac>
   156ec:	bl	110f0 <__errno_location@plt>
   156f0:	mvn	r4, #0
   156f4:	str	r5, [r0]
   156f8:	mov	r0, r4
   156fc:	pop	{r4, r5, r6, pc}
   15700:	bl	110f0 <__errno_location@plt>
   15704:	ldr	r4, [r0]
   15708:	subs	r4, r4, #9
   1570c:	mvnne	r4, #0
   15710:	mov	r0, r4
   15714:	pop	{r4, r5, r6, pc}
   15718:	ldr	r3, [pc, #984]	; 15af8 <close_stdout@@Base+0x29cc>
   1571c:	mov	r0, #14
   15720:	ldr	r2, [pc, #980]	; 15afc <close_stdout@@Base+0x29d0>
   15724:	add	r3, pc, r3
   15728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1572c:	sub	sp, sp, #132	; 0x84
   15730:	ldr	r6, [r3, r2]
   15734:	ldr	r3, [r6]
   15738:	str	r3, [sp, #124]	; 0x7c
   1573c:	bl	1118c <nl_langinfo@plt>
   15740:	subs	r5, r0, #0
   15744:	beq	157f8 <close_stdout@@Base+0x26cc>
   15748:	ldr	r3, [pc, #944]	; 15b00 <close_stdout@@Base+0x29d4>
   1574c:	ldr	r4, [pc, r3]
   15750:	cmp	r4, #0
   15754:	beq	15804 <close_stdout@@Base+0x26d8>
   15758:	ldrb	r7, [r4]
   1575c:	cmp	r7, #0
   15760:	bne	15794 <close_stdout@@Base+0x2668>
   15764:	b	157cc <close_stdout@@Base+0x26a0>
   15768:	mov	r0, r4
   1576c:	bl	110d8 <strlen@plt>
   15770:	add	r0, r0, #1
   15774:	add	r7, r4, r0
   15778:	mov	r0, r7
   1577c:	bl	110d8 <strlen@plt>
   15780:	add	r0, r0, #1
   15784:	add	r4, r7, r0
   15788:	ldrb	r7, [r7, r0]
   1578c:	cmp	r7, #0
   15790:	beq	157cc <close_stdout@@Base+0x26a0>
   15794:	mov	r0, r5
   15798:	mov	r1, r4
   1579c:	bl	10f64 <strcmp@plt>
   157a0:	cmp	r0, #0
   157a4:	beq	157bc <close_stdout@@Base+0x2690>
   157a8:	cmp	r7, #42	; 0x2a
   157ac:	bne	15768 <close_stdout@@Base+0x263c>
   157b0:	ldrb	r3, [r4, #1]
   157b4:	cmp	r3, #0
   157b8:	bne	15768 <close_stdout@@Base+0x263c>
   157bc:	mov	r0, r4
   157c0:	bl	110d8 <strlen@plt>
   157c4:	add	r0, r0, #1
   157c8:	add	r5, r4, r0
   157cc:	ldrb	r3, [r5]
   157d0:	cmp	r3, #0
   157d4:	ldreq	r5, [pc, #808]	; 15b04 <close_stdout@@Base+0x29d8>
   157d8:	addeq	r5, pc, r5
   157dc:	ldr	r2, [sp, #124]	; 0x7c
   157e0:	mov	r0, r5
   157e4:	ldr	r3, [r6]
   157e8:	cmp	r2, r3
   157ec:	bne	15acc <close_stdout@@Base+0x29a0>
   157f0:	add	sp, sp, #132	; 0x84
   157f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157f8:	ldr	r5, [pc, #776]	; 15b08 <close_stdout@@Base+0x29dc>
   157fc:	add	r5, pc, r5
   15800:	b	15748 <close_stdout@@Base+0x261c>
   15804:	ldr	r0, [pc, #768]	; 15b0c <close_stdout@@Base+0x29e0>
   15808:	add	r0, pc, r0
   1580c:	bl	11084 <getenv@plt>
   15810:	subs	r8, r0, #0
   15814:	beq	15aa4 <close_stdout@@Base+0x2978>
   15818:	ldrb	r3, [r8]
   1581c:	cmp	r3, #0
   15820:	beq	15a38 <close_stdout@@Base+0x290c>
   15824:	bl	110d8 <strlen@plt>
   15828:	subs	sl, r0, #0
   1582c:	subne	r3, sl, #1
   15830:	bne	15a48 <close_stdout@@Base+0x291c>
   15834:	mov	r9, #0
   15838:	mov	fp, r9
   1583c:	add	r9, sl, r9
   15840:	add	r0, r9, #14
   15844:	bl	11090 <malloc@plt>
   15848:	subs	r7, r0, #0
   1584c:	beq	15a98 <close_stdout@@Base+0x296c>
   15850:	mov	r1, r8
   15854:	mov	r2, sl
   15858:	bl	10fa0 <memcpy@plt>
   1585c:	cmp	fp, #0
   15860:	add	ip, r7, r9
   15864:	movne	r3, #47	; 0x2f
   15868:	strbne	r3, [r7, sl]
   1586c:	ldr	r3, [pc, #668]	; 15b10 <close_stdout@@Base+0x29e4>
   15870:	add	r3, pc, r3
   15874:	ldm	r3!, {r0, r1, r2}
   15878:	ldrh	r3, [r3]
   1587c:	str	r0, [r7, r9]
   15880:	mov	r0, r7
   15884:	str	r1, [ip, #4]
   15888:	mov	r1, #32768	; 0x8000
   1588c:	strh	r3, [ip, #12]
   15890:	str	r2, [ip, #8]
   15894:	bl	11078 <open64@plt>
   15898:	subs	r8, r0, #0
   1589c:	blt	15a60 <close_stdout@@Base+0x2934>
   158a0:	ldr	r1, [pc, #620]	; 15b14 <close_stdout@@Base+0x29e8>
   158a4:	add	r1, pc, r1
   158a8:	bl	10f34 <fdopen@plt>
   158ac:	subs	fp, r0, #0
   158b0:	beq	15ab8 <close_stdout@@Base+0x298c>
   158b4:	ldr	r0, [pc, #604]	; 15b18 <close_stdout@@Base+0x29ec>
   158b8:	add	sl, sp, #20
   158bc:	add	r9, sp, #72	; 0x48
   158c0:	mov	r8, #0
   158c4:	add	r0, pc, r0
   158c8:	str	r0, [sp, #12]
   158cc:	ldr	r3, [fp, #4]
   158d0:	ldr	r2, [fp, #8]
   158d4:	cmp	r3, r2
   158d8:	bcs	159c4 <close_stdout@@Base+0x2898>
   158dc:	add	r2, r3, #1
   158e0:	str	r2, [fp, #4]
   158e4:	ldrb	r0, [r3]
   158e8:	cmp	r0, #32
   158ec:	beq	158cc <close_stdout@@Base+0x27a0>
   158f0:	sub	r3, r0, #9
   158f4:	cmp	r3, #1
   158f8:	bls	158cc <close_stdout@@Base+0x27a0>
   158fc:	cmp	r0, #35	; 0x23
   15900:	beq	159d8 <close_stdout@@Base+0x28ac>
   15904:	mov	r1, fp
   15908:	bl	110e4 <ungetc@plt>
   1590c:	mov	r0, fp
   15910:	ldr	r1, [sp, #12]
   15914:	mov	r2, sl
   15918:	mov	r3, r9
   1591c:	bl	11114 <fscanf@plt>
   15920:	cmp	r0, #1
   15924:	ble	15a08 <close_stdout@@Base+0x28dc>
   15928:	mov	r0, sl
   1592c:	bl	110d8 <strlen@plt>
   15930:	str	r0, [sp, #8]
   15934:	mov	r0, r9
   15938:	bl	110d8 <strlen@plt>
   1593c:	cmp	r8, #0
   15940:	mov	r2, r0
   15944:	bne	15a6c <close_stdout@@Base+0x2940>
   15948:	ldr	r3, [sp, #8]
   1594c:	str	r2, [sp]
   15950:	add	r8, r0, r3
   15954:	add	r0, r8, #3
   15958:	add	r8, r8, #2
   1595c:	bl	11090 <malloc@plt>
   15960:	ldr	r2, [sp]
   15964:	mov	r3, r0
   15968:	cmp	r3, #0
   1596c:	beq	15ad0 <close_stdout@@Base+0x29a4>
   15970:	ldr	r0, [sp, #8]
   15974:	movw	r1, #65534	; 0xfffe
   15978:	movt	r1, #65535	; 0xffff
   1597c:	rsb	r2, r2, r8
   15980:	rsb	r1, r0, r1
   15984:	stm	sp, {r2, r3}
   15988:	add	r0, r1, r2
   1598c:	mov	r1, sl
   15990:	add	r0, r3, r0
   15994:	mov	r4, r3
   15998:	bl	11048 <strcpy@plt>
   1599c:	ldr	r2, [sp]
   159a0:	ldr	r3, [sp, #4]
   159a4:	mov	r1, r9
   159a8:	sub	r0, r2, #1
   159ac:	add	r0, r3, r0
   159b0:	bl	11048 <strcpy@plt>
   159b4:	ldr	r3, [fp, #4]
   159b8:	ldr	r2, [fp, #8]
   159bc:	cmp	r3, r2
   159c0:	bcc	158dc <close_stdout@@Base+0x27b0>
   159c4:	mov	r0, fp
   159c8:	bl	1115c <__uflow@plt>
   159cc:	cmn	r0, #1
   159d0:	beq	15a08 <close_stdout@@Base+0x28dc>
   159d4:	b	158e8 <close_stdout@@Base+0x27bc>
   159d8:	ldr	r3, [fp, #4]
   159dc:	ldr	r2, [fp, #8]
   159e0:	cmp	r3, r2
   159e4:	bcs	15aec <close_stdout@@Base+0x29c0>
   159e8:	add	r2, r3, #1
   159ec:	str	r2, [fp, #4]
   159f0:	ldrb	r0, [r3]
   159f4:	cmp	r0, #10
   159f8:	cmnne	r0, #1
   159fc:	bne	159d8 <close_stdout@@Base+0x28ac>
   15a00:	cmn	r0, #1
   15a04:	bne	158cc <close_stdout@@Base+0x27a0>
   15a08:	mov	r0, fp
   15a0c:	bl	15b38 <close_stdout@@Base+0x2a0c>
   15a10:	cmp	r8, #0
   15a14:	beq	15a60 <close_stdout@@Base+0x2934>
   15a18:	mov	r3, #0
   15a1c:	strb	r3, [r4, r8]
   15a20:	mov	r0, r7
   15a24:	bl	10f88 <free@plt>
   15a28:	ldr	r3, [pc, #236]	; 15b1c <close_stdout@@Base+0x29f0>
   15a2c:	add	r3, pc, r3
   15a30:	str	r4, [r3]
   15a34:	b	15758 <close_stdout@@Base+0x262c>
   15a38:	ldr	r8, [pc, #224]	; 15b20 <close_stdout@@Base+0x29f4>
   15a3c:	mov	r3, #7
   15a40:	mov	sl, #8
   15a44:	add	r8, pc, r8
   15a48:	ldrb	r3, [r8, r3]
   15a4c:	cmp	r3, #47	; 0x2f
   15a50:	movne	r9, #1
   15a54:	movne	fp, r9
   15a58:	bne	1583c <close_stdout@@Base+0x2710>
   15a5c:	b	15834 <close_stdout@@Base+0x2708>
   15a60:	ldr	r4, [pc, #188]	; 15b24 <close_stdout@@Base+0x29f8>
   15a64:	add	r4, pc, r4
   15a68:	b	15a20 <close_stdout@@Base+0x28f4>
   15a6c:	ldr	r0, [sp, #8]
   15a70:	str	r2, [sp]
   15a74:	add	r3, r0, r2
   15a78:	mov	r0, r4
   15a7c:	add	r8, r3, r8
   15a80:	add	r1, r8, #3
   15a84:	add	r8, r8, #2
   15a88:	bl	10fdc <realloc@plt>
   15a8c:	ldr	r2, [sp]
   15a90:	mov	r3, r0
   15a94:	b	15968 <close_stdout@@Base+0x283c>
   15a98:	ldr	r4, [pc, #136]	; 15b28 <close_stdout@@Base+0x29fc>
   15a9c:	add	r4, pc, r4
   15aa0:	b	15a28 <close_stdout@@Base+0x28fc>
   15aa4:	ldr	r8, [pc, #128]	; 15b2c <close_stdout@@Base+0x2a00>
   15aa8:	mov	r3, #7
   15aac:	mov	sl, #8
   15ab0:	add	r8, pc, r8
   15ab4:	b	15a48 <close_stdout@@Base+0x291c>
   15ab8:	ldr	r4, [pc, #112]	; 15b30 <close_stdout@@Base+0x2a04>
   15abc:	mov	r0, r8
   15ac0:	add	r4, pc, r4
   15ac4:	bl	111e0 <close@plt>
   15ac8:	b	15a20 <close_stdout@@Base+0x28f4>
   15acc:	bl	10fd0 <__stack_chk_fail@plt>
   15ad0:	mov	r0, r4
   15ad4:	ldr	r4, [pc, #88]	; 15b34 <close_stdout@@Base+0x2a08>
   15ad8:	bl	10f88 <free@plt>
   15adc:	mov	r0, fp
   15ae0:	add	r4, pc, r4
   15ae4:	bl	15b38 <close_stdout@@Base+0x2a0c>
   15ae8:	b	15a20 <close_stdout@@Base+0x28f4>
   15aec:	mov	r0, fp
   15af0:	bl	1115c <__uflow@plt>
   15af4:	b	159f4 <close_stdout@@Base+0x28c8>
   15af8:	ldrdeq	r2, [r1], -r4
   15afc:	strdeq	r0, [r0], -ip
   15b00:	andeq	r2, r1, r0, ror fp
   15b04:	muleq	r0, r4, r3
   15b08:			; <UNDEFINED> instruction: 0x000012b8
   15b0c:	andeq	r2, r0, ip, ror #6
   15b10:	andeq	r2, r0, r4, lsl r3
   15b14:	strdeq	r2, [r0], -r0
   15b18:	ldrdeq	r2, [r0], -r4
   15b1c:	muleq	r1, r0, r8
   15b20:	andeq	r2, r0, ip, lsl r1
   15b24:	andeq	r1, r0, r0, asr r0
   15b28:	andeq	r1, r0, r8, lsl r0
   15b2c:	strheq	r2, [r0], -r0
   15b30:	strdeq	r0, [r0], -r4
   15b34:	ldrdeq	r0, [r0], -r4
   15b38:	push	{r4, r5, r6, lr}
   15b3c:	sub	sp, sp, #8
   15b40:	mov	r4, r0
   15b44:	bl	1112c <fileno@plt>
   15b48:	cmp	r0, #0
   15b4c:	mov	r0, r4
   15b50:	blt	15bcc <close_stdout@@Base+0x2aa0>
   15b54:	bl	110a8 <__freading@plt>
   15b58:	cmp	r0, #0
   15b5c:	bne	15b98 <close_stdout@@Base+0x2a6c>
   15b60:	mov	r0, r4
   15b64:	bl	15bd8 <close_stdout@@Base+0x2aac>
   15b68:	cmp	r0, #0
   15b6c:	beq	15bc8 <close_stdout@@Base+0x2a9c>
   15b70:	bl	110f0 <__errno_location@plt>
   15b74:	ldr	r6, [r0]
   15b78:	mov	r5, r0
   15b7c:	mov	r0, r4
   15b80:	bl	11144 <fclose@plt>
   15b84:	cmp	r6, #0
   15b88:	mvnne	r0, #0
   15b8c:	strne	r6, [r5]
   15b90:	add	sp, sp, #8
   15b94:	pop	{r4, r5, r6, pc}
   15b98:	mov	r0, r4
   15b9c:	bl	1112c <fileno@plt>
   15ba0:	mov	r1, #1
   15ba4:	mov	r2, #0
   15ba8:	mov	r3, #0
   15bac:	str	r1, [sp]
   15bb0:	bl	11030 <lseek64@plt>
   15bb4:	mvn	r2, #0
   15bb8:	mvn	r3, #0
   15bbc:	cmp	r1, r3
   15bc0:	cmpeq	r0, r2
   15bc4:	bne	15b60 <close_stdout@@Base+0x2a34>
   15bc8:	mov	r0, r4
   15bcc:	add	sp, sp, #8
   15bd0:	pop	{r4, r5, r6, lr}
   15bd4:	b	11144 <fclose@plt>
   15bd8:	push	{r4, lr}
   15bdc:	subs	r4, r0, #0
   15be0:	sub	sp, sp, #8
   15be4:	beq	15bf4 <close_stdout@@Base+0x2ac8>
   15be8:	bl	110a8 <__freading@plt>
   15bec:	cmp	r0, #0
   15bf0:	bne	15c04 <close_stdout@@Base+0x2ad8>
   15bf4:	mov	r0, r4
   15bf8:	add	sp, sp, #8
   15bfc:	pop	{r4, lr}
   15c00:	b	10f7c <fflush@plt>
   15c04:	ldr	r3, [r4]
   15c08:	tst	r3, #256	; 0x100
   15c0c:	beq	15bf4 <close_stdout@@Base+0x2ac8>
   15c10:	mov	r3, #1
   15c14:	mov	r0, r4
   15c18:	str	r3, [sp]
   15c1c:	mov	r2, #0
   15c20:	mov	r3, #0
   15c24:	bl	15c38 <close_stdout@@Base+0x2b0c>
   15c28:	mov	r0, r4
   15c2c:	add	sp, sp, #8
   15c30:	pop	{r4, lr}
   15c34:	b	10f7c <fflush@plt>
   15c38:	push	{r4, r5, r6, r7, lr}
   15c3c:	sub	sp, sp, #20
   15c40:	ldmib	r0, {r1, ip}
   15c44:	mov	r6, r0
   15c48:	ldr	r4, [sp, #40]	; 0x28
   15c4c:	cmp	ip, r1
   15c50:	beq	15c68 <close_stdout@@Base+0x2b3c>
   15c54:	str	r4, [sp, #40]	; 0x28
   15c58:	mov	r0, r6
   15c5c:	add	sp, sp, #20
   15c60:	pop	{r4, r5, r6, r7, lr}
   15c64:	b	11150 <fseeko64@plt>
   15c68:	ldr	ip, [r0, #20]
   15c6c:	ldr	r1, [r0, #16]
   15c70:	cmp	ip, r1
   15c74:	bne	15c54 <close_stdout@@Base+0x2b28>
   15c78:	ldr	r7, [r0, #36]	; 0x24
   15c7c:	cmp	r7, #0
   15c80:	bne	15c54 <close_stdout@@Base+0x2b28>
   15c84:	str	r2, [sp, #12]
   15c88:	mvn	r5, #0
   15c8c:	str	r3, [sp, #8]
   15c90:	bl	1112c <fileno@plt>
   15c94:	str	r4, [sp]
   15c98:	mvn	r4, #0
   15c9c:	ldr	r2, [sp, #12]
   15ca0:	ldr	r3, [sp, #8]
   15ca4:	bl	11030 <lseek64@plt>
   15ca8:	mov	r2, r0
   15cac:	mov	r3, r1
   15cb0:	cmp	r3, r5
   15cb4:	cmpeq	r2, r4
   15cb8:	beq	15cd8 <close_stdout@@Base+0x2bac>
   15cbc:	ldr	r1, [r6]
   15cc0:	mov	r0, r7
   15cc4:	strd	r2, [r6, #80]	; 0x50
   15cc8:	bic	r3, r1, #16
   15ccc:	str	r3, [r6]
   15cd0:	add	sp, sp, #20
   15cd4:	pop	{r4, r5, r6, r7, pc}
   15cd8:	mvn	r0, #0
   15cdc:	b	15cd0 <close_stdout@@Base+0x2ba4>
   15ce0:	subs	r2, r1, #1
   15ce4:	bxeq	lr
   15ce8:	bcc	15ec0 <close_stdout@@Base+0x2d94>
   15cec:	cmp	r0, r1
   15cf0:	bls	15ea4 <close_stdout@@Base+0x2d78>
   15cf4:	tst	r1, r2
   15cf8:	beq	15eb0 <close_stdout@@Base+0x2d84>
   15cfc:	clz	r3, r0
   15d00:	clz	r2, r1
   15d04:	sub	r3, r2, r3
   15d08:	rsbs	r3, r3, #31
   15d0c:	addne	r3, r3, r3, lsl #1
   15d10:	mov	r2, #0
   15d14:	addne	pc, pc, r3, lsl #2
   15d18:	nop	{0}
   15d1c:	cmp	r0, r1, lsl #31
   15d20:	adc	r2, r2, r2
   15d24:	subcs	r0, r0, r1, lsl #31
   15d28:	cmp	r0, r1, lsl #30
   15d2c:	adc	r2, r2, r2
   15d30:	subcs	r0, r0, r1, lsl #30
   15d34:	cmp	r0, r1, lsl #29
   15d38:	adc	r2, r2, r2
   15d3c:	subcs	r0, r0, r1, lsl #29
   15d40:	cmp	r0, r1, lsl #28
   15d44:	adc	r2, r2, r2
   15d48:	subcs	r0, r0, r1, lsl #28
   15d4c:	cmp	r0, r1, lsl #27
   15d50:	adc	r2, r2, r2
   15d54:	subcs	r0, r0, r1, lsl #27
   15d58:	cmp	r0, r1, lsl #26
   15d5c:	adc	r2, r2, r2
   15d60:	subcs	r0, r0, r1, lsl #26
   15d64:	cmp	r0, r1, lsl #25
   15d68:	adc	r2, r2, r2
   15d6c:	subcs	r0, r0, r1, lsl #25
   15d70:	cmp	r0, r1, lsl #24
   15d74:	adc	r2, r2, r2
   15d78:	subcs	r0, r0, r1, lsl #24
   15d7c:	cmp	r0, r1, lsl #23
   15d80:	adc	r2, r2, r2
   15d84:	subcs	r0, r0, r1, lsl #23
   15d88:	cmp	r0, r1, lsl #22
   15d8c:	adc	r2, r2, r2
   15d90:	subcs	r0, r0, r1, lsl #22
   15d94:	cmp	r0, r1, lsl #21
   15d98:	adc	r2, r2, r2
   15d9c:	subcs	r0, r0, r1, lsl #21
   15da0:	cmp	r0, r1, lsl #20
   15da4:	adc	r2, r2, r2
   15da8:	subcs	r0, r0, r1, lsl #20
   15dac:	cmp	r0, r1, lsl #19
   15db0:	adc	r2, r2, r2
   15db4:	subcs	r0, r0, r1, lsl #19
   15db8:	cmp	r0, r1, lsl #18
   15dbc:	adc	r2, r2, r2
   15dc0:	subcs	r0, r0, r1, lsl #18
   15dc4:	cmp	r0, r1, lsl #17
   15dc8:	adc	r2, r2, r2
   15dcc:	subcs	r0, r0, r1, lsl #17
   15dd0:	cmp	r0, r1, lsl #16
   15dd4:	adc	r2, r2, r2
   15dd8:	subcs	r0, r0, r1, lsl #16
   15ddc:	cmp	r0, r1, lsl #15
   15de0:	adc	r2, r2, r2
   15de4:	subcs	r0, r0, r1, lsl #15
   15de8:	cmp	r0, r1, lsl #14
   15dec:	adc	r2, r2, r2
   15df0:	subcs	r0, r0, r1, lsl #14
   15df4:	cmp	r0, r1, lsl #13
   15df8:	adc	r2, r2, r2
   15dfc:	subcs	r0, r0, r1, lsl #13
   15e00:	cmp	r0, r1, lsl #12
   15e04:	adc	r2, r2, r2
   15e08:	subcs	r0, r0, r1, lsl #12
   15e0c:	cmp	r0, r1, lsl #11
   15e10:	adc	r2, r2, r2
   15e14:	subcs	r0, r0, r1, lsl #11
   15e18:	cmp	r0, r1, lsl #10
   15e1c:	adc	r2, r2, r2
   15e20:	subcs	r0, r0, r1, lsl #10
   15e24:	cmp	r0, r1, lsl #9
   15e28:	adc	r2, r2, r2
   15e2c:	subcs	r0, r0, r1, lsl #9
   15e30:	cmp	r0, r1, lsl #8
   15e34:	adc	r2, r2, r2
   15e38:	subcs	r0, r0, r1, lsl #8
   15e3c:	cmp	r0, r1, lsl #7
   15e40:	adc	r2, r2, r2
   15e44:	subcs	r0, r0, r1, lsl #7
   15e48:	cmp	r0, r1, lsl #6
   15e4c:	adc	r2, r2, r2
   15e50:	subcs	r0, r0, r1, lsl #6
   15e54:	cmp	r0, r1, lsl #5
   15e58:	adc	r2, r2, r2
   15e5c:	subcs	r0, r0, r1, lsl #5
   15e60:	cmp	r0, r1, lsl #4
   15e64:	adc	r2, r2, r2
   15e68:	subcs	r0, r0, r1, lsl #4
   15e6c:	cmp	r0, r1, lsl #3
   15e70:	adc	r2, r2, r2
   15e74:	subcs	r0, r0, r1, lsl #3
   15e78:	cmp	r0, r1, lsl #2
   15e7c:	adc	r2, r2, r2
   15e80:	subcs	r0, r0, r1, lsl #2
   15e84:	cmp	r0, r1, lsl #1
   15e88:	adc	r2, r2, r2
   15e8c:	subcs	r0, r0, r1, lsl #1
   15e90:	cmp	r0, r1
   15e94:	adc	r2, r2, r2
   15e98:	subcs	r0, r0, r1
   15e9c:	mov	r0, r2
   15ea0:	bx	lr
   15ea4:	moveq	r0, #1
   15ea8:	movne	r0, #0
   15eac:	bx	lr
   15eb0:	clz	r2, r1
   15eb4:	rsb	r2, r2, #31
   15eb8:	lsr	r0, r0, r2
   15ebc:	bx	lr
   15ec0:	cmp	r0, #0
   15ec4:	mvnne	r0, #0
   15ec8:	b	15f28 <close_stdout@@Base+0x2dfc>
   15ecc:	cmp	r1, #0
   15ed0:	beq	15ec0 <close_stdout@@Base+0x2d94>
   15ed4:	push	{r0, r1, lr}
   15ed8:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   15edc:	pop	{r1, r2, lr}
   15ee0:	mul	r3, r2, r0
   15ee4:	sub	r1, r1, r3
   15ee8:	bx	lr
   15eec:	cmp	r3, #0
   15ef0:	cmpeq	r2, #0
   15ef4:	bne	15f0c <close_stdout@@Base+0x2de0>
   15ef8:	cmp	r1, #0
   15efc:	cmpeq	r0, #0
   15f00:	mvnne	r1, #0
   15f04:	mvnne	r0, #0
   15f08:	b	15f28 <close_stdout@@Base+0x2dfc>
   15f0c:	sub	sp, sp, #8
   15f10:	push	{sp, lr}
   15f14:	bl	15f74 <close_stdout@@Base+0x2e48>
   15f18:	ldr	lr, [sp, #4]
   15f1c:	add	sp, sp, #8
   15f20:	pop	{r2, r3}
   15f24:	bx	lr
   15f28:	push	{r1, lr}
   15f2c:	mov	r0, #8
   15f30:	bl	10f58 <raise@plt>
   15f34:	pop	{r1, pc}
   15f38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15f3c:	mov	r8, r2
   15f40:	mov	r6, r0
   15f44:	mov	r7, r1
   15f48:	mov	sl, r3
   15f4c:	ldr	r9, [sp, #32]
   15f50:	bl	15fb0 <close_stdout@@Base+0x2e84>
   15f54:	umull	r4, r5, r8, r0
   15f58:	mul	r8, r8, r1
   15f5c:	mla	r2, r0, sl, r8
   15f60:	add	r5, r2, r5
   15f64:	subs	r4, r6, r4
   15f68:	sbc	r5, r7, r5
   15f6c:	strd	r4, [r9]
   15f70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f74:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15f78:	mov	r8, r2
   15f7c:	mov	r6, r0
   15f80:	mov	r7, r1
   15f84:	mov	r5, r3
   15f88:	ldr	r9, [sp, #32]
   15f8c:	bl	1643c <close_stdout@@Base+0x3310>
   15f90:	mul	r3, r0, r5
   15f94:	umull	r4, r5, r0, r8
   15f98:	mla	r8, r8, r1, r3
   15f9c:	add	r5, r8, r5
   15fa0:	subs	r4, r6, r4
   15fa4:	sbc	r5, r7, r5
   15fa8:	strd	r4, [r9]
   15fac:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fb4:	rsbs	r4, r0, #0
   15fb8:	rsc	r5, r1, #0
   15fbc:	cmp	r1, #0
   15fc0:	mvn	r6, #0
   15fc4:	sub	sp, sp, #12
   15fc8:	movge	r4, r0
   15fcc:	movge	r5, r1
   15fd0:	movge	r6, #0
   15fd4:	cmp	r3, #0
   15fd8:	blt	16210 <close_stdout@@Base+0x30e4>
   15fdc:	cmp	r3, #0
   15fe0:	mov	sl, r4
   15fe4:	mov	ip, r5
   15fe8:	mov	r0, r2
   15fec:	mov	r1, r3
   15ff0:	mov	r8, r2
   15ff4:	mov	r7, r4
   15ff8:	mov	r9, r5
   15ffc:	bne	160f4 <close_stdout@@Base+0x2fc8>
   16000:	cmp	r2, r5
   16004:	bls	16130 <close_stdout@@Base+0x3004>
   16008:	clz	r3, r2
   1600c:	cmp	r3, #0
   16010:	rsbne	r2, r3, #32
   16014:	lslne	r8, r0, r3
   16018:	lsrne	r2, r4, r2
   1601c:	lslne	r7, r4, r3
   16020:	orrne	r9, r2, r5, lsl r3
   16024:	lsr	r4, r8, #16
   16028:	uxth	sl, r8
   1602c:	mov	r1, r4
   16030:	mov	r0, r9
   16034:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   16038:	mov	r1, r4
   1603c:	mov	fp, r0
   16040:	mov	r0, r9
   16044:	bl	15ecc <close_stdout@@Base+0x2da0>
   16048:	mul	r0, sl, fp
   1604c:	lsr	r2, r7, #16
   16050:	orr	r1, r2, r1, lsl #16
   16054:	cmp	r0, r1
   16058:	bls	1607c <close_stdout@@Base+0x2f50>
   1605c:	adds	r1, r1, r8
   16060:	sub	r3, fp, #1
   16064:	bcs	16078 <close_stdout@@Base+0x2f4c>
   16068:	cmp	r0, r1
   1606c:	subhi	fp, fp, #2
   16070:	addhi	r1, r1, r8
   16074:	bhi	1607c <close_stdout@@Base+0x2f50>
   16078:	mov	fp, r3
   1607c:	rsb	r9, r0, r1
   16080:	mov	r1, r4
   16084:	uxth	r7, r7
   16088:	mov	r0, r9
   1608c:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   16090:	mov	r1, r4
   16094:	mov	r5, r0
   16098:	mov	r0, r9
   1609c:	bl	15ecc <close_stdout@@Base+0x2da0>
   160a0:	mul	sl, sl, r5
   160a4:	orr	r1, r7, r1, lsl #16
   160a8:	cmp	sl, r1
   160ac:	bls	160cc <close_stdout@@Base+0x2fa0>
   160b0:	adds	r8, r1, r8
   160b4:	sub	r3, r5, #1
   160b8:	bcs	160c8 <close_stdout@@Base+0x2f9c>
   160bc:	cmp	sl, r8
   160c0:	subhi	r5, r5, #2
   160c4:	bhi	160cc <close_stdout@@Base+0x2fa0>
   160c8:	mov	r5, r3
   160cc:	orr	r3, r5, fp, lsl #16
   160d0:	mov	r4, #0
   160d4:	cmp	r6, #0
   160d8:	mov	r0, r3
   160dc:	mov	r1, r4
   160e0:	beq	160ec <close_stdout@@Base+0x2fc0>
   160e4:	rsbs	r0, r0, #0
   160e8:	rsc	r1, r1, #0
   160ec:	add	sp, sp, #12
   160f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160f4:	cmp	r3, r5
   160f8:	movhi	r4, #0
   160fc:	movhi	r3, r4
   16100:	bhi	160d4 <close_stdout@@Base+0x2fa8>
   16104:	clz	r5, r1
   16108:	cmp	r5, #0
   1610c:	bne	162fc <close_stdout@@Base+0x31d0>
   16110:	cmp	r1, ip
   16114:	cmpcs	r2, sl
   16118:	movhi	r4, #0
   1611c:	movls	r4, #1
   16120:	movls	r3, #1
   16124:	movls	r4, r5
   16128:	movhi	r3, r4
   1612c:	b	160d4 <close_stdout@@Base+0x2fa8>
   16130:	cmp	r2, #0
   16134:	bne	16148 <close_stdout@@Base+0x301c>
   16138:	mov	r1, r2
   1613c:	mov	r0, #1
   16140:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   16144:	mov	r8, r0
   16148:	clz	r3, r8
   1614c:	cmp	r3, #0
   16150:	bne	16220 <close_stdout@@Base+0x30f4>
   16154:	rsb	r9, r8, r9
   16158:	lsr	r5, r8, #16
   1615c:	uxth	sl, r8
   16160:	mov	r4, #1
   16164:	mov	r1, r5
   16168:	mov	r0, r9
   1616c:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   16170:	mov	r1, r5
   16174:	mov	fp, r0
   16178:	mov	r0, r9
   1617c:	bl	15ecc <close_stdout@@Base+0x2da0>
   16180:	mul	r0, sl, fp
   16184:	lsr	r2, r7, #16
   16188:	orr	r1, r2, r1, lsl #16
   1618c:	cmp	r0, r1
   16190:	bls	161b0 <close_stdout@@Base+0x3084>
   16194:	adds	r1, r1, r8
   16198:	sub	r3, fp, #1
   1619c:	bcs	1641c <close_stdout@@Base+0x32f0>
   161a0:	cmp	r0, r1
   161a4:	subhi	fp, fp, #2
   161a8:	addhi	r1, r1, r8
   161ac:	bls	1641c <close_stdout@@Base+0x32f0>
   161b0:	rsb	r2, r0, r1
   161b4:	mov	r1, r5
   161b8:	str	r2, [sp]
   161bc:	uxth	r7, r7
   161c0:	mov	r0, r2
   161c4:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   161c8:	ldr	r2, [sp]
   161cc:	mov	r1, r5
   161d0:	mov	r9, r0
   161d4:	mov	r0, r2
   161d8:	bl	15ecc <close_stdout@@Base+0x2da0>
   161dc:	mul	sl, sl, r9
   161e0:	orr	r1, r7, r1, lsl #16
   161e4:	cmp	sl, r1
   161e8:	bls	16208 <close_stdout@@Base+0x30dc>
   161ec:	adds	r8, r1, r8
   161f0:	sub	r3, r9, #1
   161f4:	bcs	16204 <close_stdout@@Base+0x30d8>
   161f8:	cmp	sl, r8
   161fc:	subhi	r9, r9, #2
   16200:	bhi	16208 <close_stdout@@Base+0x30dc>
   16204:	mov	r9, r3
   16208:	orr	r3, r9, fp, lsl #16
   1620c:	b	160d4 <close_stdout@@Base+0x2fa8>
   16210:	mvn	r6, r6
   16214:	rsbs	r2, r2, #0
   16218:	rsc	r3, r3, #0
   1621c:	b	15fdc <close_stdout@@Base+0x2eb0>
   16220:	lsl	r8, r8, r3
   16224:	rsb	fp, r3, #32
   16228:	lsr	r4, r9, fp
   1622c:	lsr	fp, r7, fp
   16230:	lsr	r5, r8, #16
   16234:	orr	fp, fp, r9, lsl r3
   16238:	mov	r0, r4
   1623c:	lsl	r7, r7, r3
   16240:	mov	r1, r5
   16244:	uxth	sl, r8
   16248:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   1624c:	mov	r1, r5
   16250:	mov	r3, r0
   16254:	mov	r0, r4
   16258:	str	r3, [sp]
   1625c:	bl	15ecc <close_stdout@@Base+0x2da0>
   16260:	ldr	r3, [sp]
   16264:	lsr	r2, fp, #16
   16268:	mul	r0, sl, r3
   1626c:	orr	r1, r2, r1, lsl #16
   16270:	cmp	r0, r1
   16274:	bls	16294 <close_stdout@@Base+0x3168>
   16278:	adds	r1, r1, r8
   1627c:	sub	r2, r3, #1
   16280:	bcs	16434 <close_stdout@@Base+0x3308>
   16284:	cmp	r0, r1
   16288:	subhi	r3, r3, #2
   1628c:	addhi	r1, r1, r8
   16290:	bls	16434 <close_stdout@@Base+0x3308>
   16294:	rsb	r9, r0, r1
   16298:	mov	r1, r5
   1629c:	str	r3, [sp]
   162a0:	uxth	fp, fp
   162a4:	mov	r0, r9
   162a8:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   162ac:	mov	r1, r5
   162b0:	mov	r4, r0
   162b4:	mov	r0, r9
   162b8:	bl	15ecc <close_stdout@@Base+0x2da0>
   162bc:	mul	r9, sl, r4
   162c0:	ldr	r3, [sp]
   162c4:	orr	r1, fp, r1, lsl #16
   162c8:	cmp	r9, r1
   162cc:	bls	162f0 <close_stdout@@Base+0x31c4>
   162d0:	adds	r1, r1, r8
   162d4:	sub	r2, r4, #1
   162d8:	bcs	162ec <close_stdout@@Base+0x31c0>
   162dc:	cmp	r9, r1
   162e0:	subhi	r4, r4, #2
   162e4:	addhi	r1, r1, r8
   162e8:	bhi	162f0 <close_stdout@@Base+0x31c4>
   162ec:	mov	r4, r2
   162f0:	rsb	r9, r9, r1
   162f4:	orr	r4, r4, r3, lsl #16
   162f8:	b	16164 <close_stdout@@Base+0x3038>
   162fc:	rsb	sl, r5, #32
   16300:	lsl	r3, r2, r5
   16304:	lsr	r0, r2, sl
   16308:	lsr	r2, ip, sl
   1630c:	orr	r4, r0, r1, lsl r5
   16310:	lsr	sl, r7, sl
   16314:	mov	r0, r2
   16318:	orr	sl, sl, ip, lsl r5
   1631c:	lsr	r9, r4, #16
   16320:	str	r3, [sp, #4]
   16324:	str	r2, [sp]
   16328:	uxth	fp, r4
   1632c:	mov	r1, r9
   16330:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   16334:	ldr	r2, [sp]
   16338:	mov	r1, r9
   1633c:	mov	r8, r0
   16340:	mov	r0, r2
   16344:	bl	15ecc <close_stdout@@Base+0x2da0>
   16348:	mul	r0, fp, r8
   1634c:	lsr	r2, sl, #16
   16350:	orr	r1, r2, r1, lsl #16
   16354:	cmp	r0, r1
   16358:	bls	16378 <close_stdout@@Base+0x324c>
   1635c:	adds	r1, r1, r4
   16360:	sub	r2, r8, #1
   16364:	bcs	1642c <close_stdout@@Base+0x3300>
   16368:	cmp	r0, r1
   1636c:	subhi	r8, r8, #2
   16370:	addhi	r1, r1, r4
   16374:	bls	1642c <close_stdout@@Base+0x3300>
   16378:	rsb	ip, r0, r1
   1637c:	mov	r1, r9
   16380:	str	ip, [sp]
   16384:	mov	r0, ip
   16388:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   1638c:	ldr	ip, [sp]
   16390:	mov	r1, r9
   16394:	mov	r2, r0
   16398:	mov	r0, ip
   1639c:	str	r2, [sp]
   163a0:	bl	15ecc <close_stdout@@Base+0x2da0>
   163a4:	ldr	r2, [sp]
   163a8:	uxth	ip, sl
   163ac:	mul	fp, fp, r2
   163b0:	orr	ip, ip, r1, lsl #16
   163b4:	cmp	fp, ip
   163b8:	bls	163d8 <close_stdout@@Base+0x32ac>
   163bc:	adds	ip, ip, r4
   163c0:	sub	r1, r2, #1
   163c4:	bcs	16424 <close_stdout@@Base+0x32f8>
   163c8:	cmp	fp, ip
   163cc:	subhi	r2, r2, #2
   163d0:	addhi	ip, ip, r4
   163d4:	bls	16424 <close_stdout@@Base+0x32f8>
   163d8:	ldr	r0, [sp, #4]
   163dc:	orr	r1, r2, r8, lsl #16
   163e0:	rsb	fp, fp, ip
   163e4:	umull	r2, r3, r1, r0
   163e8:	cmp	fp, r3
   163ec:	bcc	16410 <close_stdout@@Base+0x32e4>
   163f0:	movne	r4, #0
   163f4:	moveq	r4, #1
   163f8:	cmp	r2, r7, lsl r5
   163fc:	movls	r4, #0
   16400:	andhi	r4, r4, #1
   16404:	cmp	r4, #0
   16408:	moveq	r3, r1
   1640c:	beq	160d4 <close_stdout@@Base+0x2fa8>
   16410:	sub	r3, r1, #1
   16414:	mov	r4, #0
   16418:	b	160d4 <close_stdout@@Base+0x2fa8>
   1641c:	mov	fp, r3
   16420:	b	161b0 <close_stdout@@Base+0x3084>
   16424:	mov	r2, r1
   16428:	b	163d8 <close_stdout@@Base+0x32ac>
   1642c:	mov	r8, r2
   16430:	b	16378 <close_stdout@@Base+0x324c>
   16434:	mov	r3, r2
   16438:	b	16294 <close_stdout@@Base+0x3168>
   1643c:	cmp	r3, #0
   16440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16444:	mov	r6, r0
   16448:	sub	sp, sp, #12
   1644c:	mov	r5, r1
   16450:	mov	r7, r0
   16454:	mov	r4, r2
   16458:	mov	r8, r1
   1645c:	bne	1653c <close_stdout@@Base+0x3410>
   16460:	cmp	r2, r1
   16464:	bls	16578 <close_stdout@@Base+0x344c>
   16468:	clz	r3, r2
   1646c:	cmp	r3, #0
   16470:	rsbne	r8, r3, #32
   16474:	lslne	r4, r2, r3
   16478:	lsrne	r8, r0, r8
   1647c:	lslne	r7, r0, r3
   16480:	orrne	r8, r8, r1, lsl r3
   16484:	lsr	r5, r4, #16
   16488:	uxth	sl, r4
   1648c:	mov	r1, r5
   16490:	mov	r0, r8
   16494:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   16498:	mov	r1, r5
   1649c:	mov	r9, r0
   164a0:	mov	r0, r8
   164a4:	bl	15ecc <close_stdout@@Base+0x2da0>
   164a8:	mul	r0, sl, r9
   164ac:	lsr	r3, r7, #16
   164b0:	orr	r1, r3, r1, lsl #16
   164b4:	cmp	r0, r1
   164b8:	bls	164dc <close_stdout@@Base+0x33b0>
   164bc:	adds	r1, r1, r4
   164c0:	sub	r2, r9, #1
   164c4:	bcs	164d8 <close_stdout@@Base+0x33ac>
   164c8:	cmp	r0, r1
   164cc:	subhi	r9, r9, #2
   164d0:	addhi	r1, r1, r4
   164d4:	bhi	164dc <close_stdout@@Base+0x33b0>
   164d8:	mov	r9, r2
   164dc:	rsb	r8, r0, r1
   164e0:	mov	r1, r5
   164e4:	uxth	r7, r7
   164e8:	mov	r0, r8
   164ec:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   164f0:	mov	r1, r5
   164f4:	mov	r6, r0
   164f8:	mov	r0, r8
   164fc:	bl	15ecc <close_stdout@@Base+0x2da0>
   16500:	mul	sl, sl, r6
   16504:	orr	r1, r7, r1, lsl #16
   16508:	cmp	sl, r1
   1650c:	bls	16528 <close_stdout@@Base+0x33fc>
   16510:	adds	r4, r1, r4
   16514:	sub	r3, r6, #1
   16518:	bcs	16824 <close_stdout@@Base+0x36f8>
   1651c:	cmp	sl, r4
   16520:	subhi	r6, r6, #2
   16524:	bls	16824 <close_stdout@@Base+0x36f8>
   16528:	orr	r0, r6, r9, lsl #16
   1652c:	mov	r6, #0
   16530:	mov	r1, r6
   16534:	add	sp, sp, #12
   16538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1653c:	cmp	r3, r1
   16540:	movhi	r6, #0
   16544:	movhi	r0, r6
   16548:	bhi	16530 <close_stdout@@Base+0x3404>
   1654c:	clz	r7, r3
   16550:	cmp	r7, #0
   16554:	bne	16654 <close_stdout@@Base+0x3528>
   16558:	cmp	r3, r1
   1655c:	cmpcs	r2, r6
   16560:	movhi	r6, #0
   16564:	movls	r6, #1
   16568:	movls	r0, #1
   1656c:	movls	r6, r7
   16570:	movhi	r0, r6
   16574:	b	16530 <close_stdout@@Base+0x3404>
   16578:	cmp	r2, #0
   1657c:	bne	16590 <close_stdout@@Base+0x3464>
   16580:	mov	r1, r2
   16584:	mov	r0, #1
   16588:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   1658c:	mov	r4, r0
   16590:	clz	r3, r4
   16594:	cmp	r3, #0
   16598:	bne	16750 <close_stdout@@Base+0x3624>
   1659c:	rsb	r5, r4, r5
   165a0:	lsr	r8, r4, #16
   165a4:	uxth	sl, r4
   165a8:	mov	r6, #1
   165ac:	mov	r1, r8
   165b0:	mov	r0, r5
   165b4:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   165b8:	mov	r1, r8
   165bc:	mov	r9, r0
   165c0:	mov	r0, r5
   165c4:	bl	15ecc <close_stdout@@Base+0x2da0>
   165c8:	mul	r0, sl, r9
   165cc:	lsr	r3, r7, #16
   165d0:	orr	r1, r3, r1, lsl #16
   165d4:	cmp	r0, r1
   165d8:	bls	165f8 <close_stdout@@Base+0x34cc>
   165dc:	adds	r1, r1, r4
   165e0:	sub	r2, r9, #1
   165e4:	bcs	1682c <close_stdout@@Base+0x3700>
   165e8:	cmp	r0, r1
   165ec:	subhi	r9, r9, #2
   165f0:	addhi	r1, r1, r4
   165f4:	bls	1682c <close_stdout@@Base+0x3700>
   165f8:	rsb	fp, r0, r1
   165fc:	mov	r1, r8
   16600:	uxth	r7, r7
   16604:	mov	r0, fp
   16608:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   1660c:	mov	r1, r8
   16610:	mov	r5, r0
   16614:	mov	r0, fp
   16618:	bl	15ecc <close_stdout@@Base+0x2da0>
   1661c:	mul	sl, sl, r5
   16620:	orr	r1, r7, r1, lsl #16
   16624:	cmp	sl, r1
   16628:	bls	16644 <close_stdout@@Base+0x3518>
   1662c:	adds	r4, r1, r4
   16630:	sub	r3, r5, #1
   16634:	bcs	16834 <close_stdout@@Base+0x3708>
   16638:	cmp	sl, r4
   1663c:	subhi	r5, r5, #2
   16640:	bls	16834 <close_stdout@@Base+0x3708>
   16644:	orr	r0, r5, r9, lsl #16
   16648:	mov	r1, r6
   1664c:	add	sp, sp, #12
   16650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16654:	rsb	r1, r7, #32
   16658:	lsl	r0, r2, r7
   1665c:	lsr	r2, r2, r1
   16660:	lsr	fp, r5, r1
   16664:	orr	r8, r2, r3, lsl r7
   16668:	lsr	r1, r6, r1
   1666c:	str	r0, [sp, #4]
   16670:	orr	r5, r1, r5, lsl r7
   16674:	lsr	r9, r8, #16
   16678:	mov	r0, fp
   1667c:	uxth	sl, r8
   16680:	mov	r1, r9
   16684:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   16688:	mov	r1, r9
   1668c:	mov	r4, r0
   16690:	mov	r0, fp
   16694:	bl	15ecc <close_stdout@@Base+0x2da0>
   16698:	mul	r0, sl, r4
   1669c:	lsr	ip, r5, #16
   166a0:	orr	r1, ip, r1, lsl #16
   166a4:	cmp	r0, r1
   166a8:	bls	166bc <close_stdout@@Base+0x3590>
   166ac:	adds	r1, r1, r8
   166b0:	sub	r2, r4, #1
   166b4:	bcc	16850 <close_stdout@@Base+0x3724>
   166b8:	mov	r4, r2
   166bc:	rsb	ip, r0, r1
   166c0:	mov	r1, r9
   166c4:	str	ip, [sp]
   166c8:	uxth	r5, r5
   166cc:	mov	r0, ip
   166d0:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   166d4:	ldr	ip, [sp]
   166d8:	mov	r1, r9
   166dc:	mov	fp, r0
   166e0:	mov	r0, ip
   166e4:	bl	15ecc <close_stdout@@Base+0x2da0>
   166e8:	mul	sl, sl, fp
   166ec:	orr	r1, r5, r1, lsl #16
   166f0:	cmp	sl, r1
   166f4:	bls	16708 <close_stdout@@Base+0x35dc>
   166f8:	adds	r1, r1, r8
   166fc:	sub	r2, fp, #1
   16700:	bcc	1683c <close_stdout@@Base+0x3710>
   16704:	mov	fp, r2
   16708:	ldr	r3, [sp, #4]
   1670c:	orr	r0, fp, r4, lsl #16
   16710:	rsb	sl, sl, r1
   16714:	umull	r4, r5, r0, r3
   16718:	cmp	sl, r5
   1671c:	bcc	1673c <close_stdout@@Base+0x3610>
   16720:	movne	r3, #0
   16724:	moveq	r3, #1
   16728:	cmp	r4, r6, lsl r7
   1672c:	movls	r6, #0
   16730:	andhi	r6, r3, #1
   16734:	cmp	r6, #0
   16738:	beq	16530 <close_stdout@@Base+0x3404>
   1673c:	mov	r6, #0
   16740:	sub	r0, r0, #1
   16744:	mov	r1, r6
   16748:	add	sp, sp, #12
   1674c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16750:	lsl	r4, r4, r3
   16754:	rsb	r9, r3, #32
   16758:	lsr	r2, r5, r9
   1675c:	lsr	r9, r6, r9
   16760:	lsr	r8, r4, #16
   16764:	orr	r9, r9, r5, lsl r3
   16768:	mov	r0, r2
   1676c:	lsl	r7, r6, r3
   16770:	mov	r1, r8
   16774:	str	r2, [sp]
   16778:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   1677c:	ldr	r2, [sp]
   16780:	mov	r1, r8
   16784:	uxth	sl, r4
   16788:	mov	fp, r0
   1678c:	mov	r0, r2
   16790:	bl	15ecc <close_stdout@@Base+0x2da0>
   16794:	mul	r0, sl, fp
   16798:	lsr	r3, r9, #16
   1679c:	orr	r1, r3, r1, lsl #16
   167a0:	cmp	r0, r1
   167a4:	bls	167c4 <close_stdout@@Base+0x3698>
   167a8:	adds	r1, r1, r4
   167ac:	sub	r3, fp, #1
   167b0:	bcs	16864 <close_stdout@@Base+0x3738>
   167b4:	cmp	r0, r1
   167b8:	subhi	fp, fp, #2
   167bc:	addhi	r1, r1, r4
   167c0:	bls	16864 <close_stdout@@Base+0x3738>
   167c4:	rsb	r5, r0, r1
   167c8:	mov	r1, r8
   167cc:	uxth	r9, r9
   167d0:	mov	r0, r5
   167d4:	bl	15ce0 <close_stdout@@Base+0x2bb4>
   167d8:	mov	r1, r8
   167dc:	mov	r6, r0
   167e0:	mov	r0, r5
   167e4:	bl	15ecc <close_stdout@@Base+0x2da0>
   167e8:	mul	r5, sl, r6
   167ec:	orr	r1, r9, r1, lsl #16
   167f0:	cmp	r5, r1
   167f4:	bls	16818 <close_stdout@@Base+0x36ec>
   167f8:	adds	r1, r1, r4
   167fc:	sub	r3, r6, #1
   16800:	bcs	16814 <close_stdout@@Base+0x36e8>
   16804:	cmp	r5, r1
   16808:	subhi	r6, r6, #2
   1680c:	addhi	r1, r1, r4
   16810:	bhi	16818 <close_stdout@@Base+0x36ec>
   16814:	mov	r6, r3
   16818:	rsb	r5, r5, r1
   1681c:	orr	r6, r6, fp, lsl #16
   16820:	b	165ac <close_stdout@@Base+0x3480>
   16824:	mov	r6, r3
   16828:	b	16528 <close_stdout@@Base+0x33fc>
   1682c:	mov	r9, r2
   16830:	b	165f8 <close_stdout@@Base+0x34cc>
   16834:	mov	r5, r3
   16838:	b	16644 <close_stdout@@Base+0x3518>
   1683c:	cmp	sl, r1
   16840:	subhi	fp, fp, #2
   16844:	addhi	r1, r1, r8
   16848:	bhi	16708 <close_stdout@@Base+0x35dc>
   1684c:	b	16704 <close_stdout@@Base+0x35d8>
   16850:	cmp	r0, r1
   16854:	subhi	r4, r4, #2
   16858:	addhi	r1, r1, r8
   1685c:	bhi	166bc <close_stdout@@Base+0x3590>
   16860:	b	166b8 <close_stdout@@Base+0x358c>
   16864:	mov	fp, r3
   16868:	b	167c4 <close_stdout@@Base+0x3698>
   1686c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   16870:	mov	r7, r0
   16874:	ldr	r6, [pc, #76]	; 168c8 <close_stdout@@Base+0x379c>
   16878:	mov	r8, r1
   1687c:	ldr	r5, [pc, #72]	; 168cc <close_stdout@@Base+0x37a0>
   16880:	mov	r9, r2
   16884:	add	r6, pc, r6
   16888:	bl	10f14 <fdopen@plt-0x20>
   1688c:	add	r5, pc, r5
   16890:	rsb	r6, r5, r6
   16894:	asrs	r6, r6, #2
   16898:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1689c:	sub	r5, r5, #4
   168a0:	mov	r4, #0
   168a4:	add	r4, r4, #1
   168a8:	ldr	r3, [r5, #4]!
   168ac:	mov	r0, r7
   168b0:	mov	r1, r8
   168b4:	mov	r2, r9
   168b8:	blx	r3
   168bc:	cmp	r4, r6
   168c0:	bne	168a4 <close_stdout@@Base+0x3778>
   168c4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   168c8:	andeq	r1, r1, r0, asr r6
   168cc:	andeq	r1, r1, r4, asr #12
   168d0:	bx	lr
   168d4:	ldr	r3, [pc, #28]	; 168f8 <close_stdout@@Base+0x37cc>
   168d8:	mov	r1, #0
   168dc:	ldr	r2, [pc, #24]	; 168fc <close_stdout@@Base+0x37d0>
   168e0:	add	r3, pc, r3
   168e4:	ldr	r3, [r3, r2]
   168e8:	cmp	r3, #0
   168ec:	ldrne	r2, [r3]
   168f0:	moveq	r2, r3
   168f4:	b	110fc <__cxa_atexit@plt>
   168f8:	andeq	r1, r1, r8, lsl r7
   168fc:	andeq	r0, r0, r0, lsl r1

Disassembly of section .fini:

00016900 <.fini>:
   16900:	push	{r3, lr}
   16904:	pop	{r3, pc}
