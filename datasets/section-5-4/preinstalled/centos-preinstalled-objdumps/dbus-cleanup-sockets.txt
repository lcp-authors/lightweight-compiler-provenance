
centos-preinstalled/dbus-cleanup-sockets:     file format elf32-littlearm


Disassembly of section .init:

00000878 <.init>:
 878:	push	{r3, lr}
 87c:	bl	1238 <main@@Base+0x838>
 880:	pop	{r3, pc}

Disassembly of section .plt:

00000884 <strcmp@plt-0x14>:
 884:	push	{lr}		; (str lr, [sp, #-4]!)
 888:	ldr	lr, [pc, #4]	; 894 <strcmp@plt-0x4>
 88c:	add	lr, pc, lr
 890:	ldr	pc, [lr, #8]!
 894:	andeq	r1, r1, r0, asr #13

00000898 <strcmp@plt>:
 898:	add	ip, pc, #0, 12
 89c:	add	ip, ip, #69632	; 0x11000
 8a0:	ldr	pc, [ip, #1728]!	; 0x6c0

000008a4 <__cxa_finalize@plt>:
 8a4:	add	ip, pc, #0, 12
 8a8:	add	ip, ip, #69632	; 0x11000
 8ac:	ldr	pc, [ip, #1720]!	; 0x6b8

000008b0 <free@plt>:
 8b0:	add	ip, pc, #0, 12
 8b4:	add	ip, ip, #69632	; 0x11000
 8b8:	ldr	pc, [ip, #1712]!	; 0x6b0

000008bc <sleep@plt>:
 8bc:	add	ip, pc, #0, 12
 8c0:	add	ip, ip, #69632	; 0x11000
 8c4:	ldr	pc, [ip, #1704]!	; 0x6a8

000008c8 <__stack_chk_fail@plt>:
 8c8:	add	ip, pc, #0, 12
 8cc:	add	ip, ip, #69632	; 0x11000
 8d0:	ldr	pc, [ip, #1696]!	; 0x6a0

000008d4 <unlink@plt>:
 8d4:	add	ip, pc, #0, 12
 8d8:	add	ip, ip, #69632	; 0x11000
 8dc:	ldr	pc, [ip, #1688]!	; 0x698

000008e0 <realloc@plt>:
 8e0:	add	ip, pc, #0, 12
 8e4:	add	ip, ip, #69632	; 0x11000
 8e8:	ldr	pc, [ip, #1680]!	; 0x690

000008ec <fwrite@plt>:
 8ec:	add	ip, pc, #0, 12
 8f0:	add	ip, ip, #69632	; 0x11000
 8f4:	ldr	pc, [ip, #1672]!	; 0x688

000008f8 <strcat@plt>:
 8f8:	add	ip, pc, #0, 12
 8fc:	add	ip, ip, #69632	; 0x11000
 900:	ldr	pc, [ip, #1664]!	; 0x680

00000904 <strcpy@plt>:
 904:	add	ip, pc, #0, 12
 908:	add	ip, ip, #69632	; 0x11000
 90c:	ldr	pc, [ip, #1656]!	; 0x678

00000910 <opendir@plt>:
 910:	add	ip, pc, #0, 12
 914:	add	ip, ip, #69632	; 0x11000
 918:	ldr	pc, [ip, #1648]!	; 0x670

0000091c <malloc@plt>:
 91c:	add	ip, pc, #0, 12
 920:	add	ip, ip, #69632	; 0x11000
 924:	ldr	pc, [ip, #1640]!	; 0x668

00000928 <__libc_start_main@plt>:
 928:	add	ip, pc, #0, 12
 92c:	add	ip, ip, #69632	; 0x11000
 930:	ldr	pc, [ip, #1632]!	; 0x660

00000934 <strerror@plt>:
 934:	add	ip, pc, #0, 12
 938:	add	ip, ip, #69632	; 0x11000
 93c:	ldr	pc, [ip, #1624]!	; 0x658

00000940 <__gmon_start__@plt>:
 940:	add	ip, pc, #0, 12
 944:	add	ip, ip, #69632	; 0x11000
 948:	ldr	pc, [ip, #1616]!	; 0x650

0000094c <exit@plt>:
 94c:	add	ip, pc, #0, 12
 950:	add	ip, ip, #69632	; 0x11000
 954:	ldr	pc, [ip, #1608]!	; 0x648

00000958 <strlen@plt>:
 958:	add	ip, pc, #0, 12
 95c:	add	ip, ip, #69632	; 0x11000
 960:	ldr	pc, [ip, #1600]!	; 0x640

00000964 <fcntl@plt>:
 964:	add	ip, pc, #0, 12
 968:	add	ip, ip, #69632	; 0x11000
 96c:	ldr	pc, [ip, #1592]!	; 0x638

00000970 <__errno_location@plt>:
 970:	add	ip, pc, #0, 12
 974:	add	ip, ip, #69632	; 0x11000
 978:	ldr	pc, [ip, #1584]!	; 0x630

0000097c <memset@plt>:
 97c:	add	ip, pc, #0, 12
 980:	add	ip, ip, #69632	; 0x11000
 984:	ldr	pc, [ip, #1576]!	; 0x628

00000988 <strncpy@plt>:
 988:	add	ip, pc, #0, 12
 98c:	add	ip, ip, #69632	; 0x11000
 990:	ldr	pc, [ip, #1568]!	; 0x620

00000994 <__printf_chk@plt>:
 994:	add	ip, pc, #0, 12
 998:	add	ip, ip, #69632	; 0x11000
 99c:	ldr	pc, [ip, #1560]!	; 0x618

000009a0 <__fprintf_chk@plt>:
 9a0:	add	ip, pc, #0, 12
 9a4:	add	ip, ip, #69632	; 0x11000
 9a8:	ldr	pc, [ip, #1552]!	; 0x610

000009ac <readdir64@plt>:
 9ac:	add	ip, pc, #0, 12
 9b0:	add	ip, ip, #69632	; 0x11000
 9b4:	ldr	pc, [ip, #1544]!	; 0x608

000009b8 <socket@plt>:
 9b8:	add	ip, pc, #0, 12
 9bc:	add	ip, ip, #69632	; 0x11000
 9c0:	ldr	pc, [ip, #1536]!	; 0x600

000009c4 <strncmp@plt>:
 9c4:	add	ip, pc, #0, 12
 9c8:	add	ip, ip, #69632	; 0x11000
 9cc:	ldr	pc, [ip, #1528]!	; 0x5f8

000009d0 <abort@plt>:
 9d0:	add	ip, pc, #0, 12
 9d4:	add	ip, ip, #69632	; 0x11000
 9d8:	ldr	pc, [ip, #1520]!	; 0x5f0

000009dc <close@plt>:
 9dc:	add	ip, pc, #0, 12
 9e0:	add	ip, ip, #69632	; 0x11000
 9e4:	ldr	pc, [ip, #1512]!	; 0x5e8

000009e8 <connect@plt>:
 9e8:	add	ip, pc, #0, 12
 9ec:	add	ip, ip, #69632	; 0x11000
 9f0:	ldr	pc, [ip, #1504]!	; 0x5e0

000009f4 <closedir@plt>:
 9f4:	add	ip, pc, #0, 12
 9f8:	add	ip, ip, #69632	; 0x11000
 9fc:	ldr	pc, [ip, #1496]!	; 0x5d8

Disassembly of section .text:

00000a00 <main@@Base>:
     a00:	ldr	ip, [pc, #1900]	; 1174 <main@@Base+0x774>
     a04:	cmp	r0, #1
     a08:	ldr	r3, [pc, #1896]	; 1178 <main@@Base+0x778>
     a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     a10:	add	ip, pc, ip
     a14:	sub	sp, sp, #180	; 0xb4
     a18:	mov	r8, r0
     a1c:	str	ip, [sp, #28]
     a20:	ldr	r3, [ip, r3]
     a24:	str	r3, [sp, #32]
     a28:	ldr	r3, [r3]
     a2c:	str	r3, [sp, #172]	; 0xac
     a30:	ble	10a4 <main@@Base+0x6a4>
     a34:	ldr	r2, [pc, #1856]	; 117c <main@@Base+0x77c>
     a38:	mov	r9, #0
     a3c:	ldr	r3, [pc, #1852]	; 1180 <main@@Base+0x780>
     a40:	mov	r5, r1
     a44:	add	r2, pc, r2
     a48:	mov	r6, r9
     a4c:	add	r3, pc, r3
     a50:	str	r2, [sp, #20]
     a54:	str	r3, [sp, #16]
     a58:	mov	r4, #1
     a5c:	b	a90 <main@@Base+0x90>
     a60:	cmp	r7, #0
     a64:	bne	b14 <main@@Base+0x114>
     a68:	ldrb	r3, [fp, #1]
     a6c:	cmp	r3, #45	; 0x2d
     a70:	bne	b14 <main@@Base+0x114>
     a74:	ldrb	r3, [fp, #2]
     a78:	cmp	r3, #0
     a7c:	bne	b14 <main@@Base+0x114>
     a80:	mov	r6, #1
     a84:	add	r4, r4, #1
     a88:	cmp	r4, r8
     a8c:	beq	b24 <main@@Base+0x124>
     a90:	ldr	fp, [r5, #4]!
     a94:	ldr	r1, [sp, #20]
     a98:	mov	r0, fp
     a9c:	bl	898 <strcmp@plt>
     aa0:	cmp	r0, #0
     aa4:	beq	b0c <main@@Base+0x10c>
     aa8:	ldrb	sl, [fp]
     aac:	subs	r7, sl, #45	; 0x2d
     ab0:	bne	acc <main@@Base+0xcc>
     ab4:	ldrb	r3, [fp, #1]
     ab8:	cmp	r3, #104	; 0x68
     abc:	bne	af8 <main@@Base+0xf8>
     ac0:	ldrb	r3, [fp, #2]
     ac4:	cmp	r3, #0
     ac8:	beq	b0c <main@@Base+0x10c>
     acc:	mov	r0, fp
     ad0:	ldr	r1, [sp, #16]
     ad4:	bl	898 <strcmp@plt>
     ad8:	cmp	r0, #0
     adc:	beq	1078 <main@@Base+0x678>
     ae0:	cmp	r6, #0
     ae4:	beq	a60 <main@@Base+0x60>
     ae8:	cmp	r9, #0
     aec:	bne	10b0 <main@@Base+0x6b0>
     af0:	mov	r9, fp
     af4:	b	a80 <main@@Base+0x80>
     af8:	cmp	r3, #63	; 0x3f
     afc:	bne	acc <main@@Base+0xcc>
     b00:	ldrb	r3, [fp, #2]
     b04:	cmp	r3, #0
     b08:	bne	acc <main@@Base+0xcc>
     b0c:	mov	r0, #0
     b10:	bl	13bc <main@@Base+0x9bc>
     b14:	cmp	sl, #45	; 0x2d
     b18:	bne	a84 <main@@Base+0x84>
     b1c:	mov	r0, #1
     b20:	bl	13bc <main@@Base+0x9bc>
     b24:	cmp	r9, #0
     b28:	beq	f28 <main@@Base+0x528>
     b2c:	mov	r0, #8
     b30:	bl	1400 <main@@Base+0xa00>
     b34:	str	r0, [sp, #20]
     b38:	mov	r0, r9
     b3c:	bl	910 <opendir@plt>
     b40:	subs	r6, r0, #0
     b44:	beq	110c <main@@Base+0x70c>
     b48:	ldr	r7, [pc, #1588]	; 1184 <main@@Base+0x784>
     b4c:	mov	sl, #0
     b50:	ldr	ip, [pc, #1584]	; 1188 <main@@Base+0x788>
     b54:	mov	r3, #2
     b58:	add	r7, pc, r7
     b5c:	str	r3, [sp, #16]
     b60:	add	ip, pc, ip
     b64:	str	ip, [sp, #24]
     b68:	mov	r0, r6
     b6c:	bl	9ac <readdir64@plt>
     b70:	cmp	r0, #0
     b74:	beq	c28 <main@@Base+0x228>
     b78:	add	r4, r0, #19
     b7c:	mov	r1, r7
     b80:	mov	r2, #5
     b84:	mov	r0, r4
     b88:	bl	9c4 <strncmp@plt>
     b8c:	subs	r8, r0, #0
     b90:	bne	b68 <main@@Base+0x168>
     b94:	mov	r0, #16
     b98:	bl	1400 <main@@Base+0xa00>
     b9c:	mov	r5, r0
     ba0:	mov	r0, r9
     ba4:	bl	958 <strlen@plt>
     ba8:	mov	fp, r0
     bac:	mov	r0, r4
     bb0:	bl	958 <strlen@plt>
     bb4:	add	r0, fp, r0
     bb8:	add	r0, r0, #2
     bbc:	bl	1400 <main@@Base+0xa00>
     bc0:	mov	r1, r9
     bc4:	str	r0, [r5]
     bc8:	bl	904 <strcpy@plt>
     bcc:	ldr	fp, [r5]
     bd0:	mov	r0, fp
     bd4:	bl	958 <strlen@plt>
     bd8:	ldr	ip, [sp, #24]
     bdc:	mov	r1, r4
     be0:	ldrh	r3, [ip]
     be4:	strh	r3, [fp, r0]
     be8:	ldr	r0, [r5]
     bec:	bl	8f8 <strcat@plt>
     bf0:	ldr	r3, [sp, #16]
     bf4:	mvn	ip, #0
     bf8:	str	r8, [r5, #8]
     bfc:	cmp	r3, sl
     c00:	str	ip, [r5, #4]
     c04:	str	r8, [r5, #12]
     c08:	beq	ee8 <main@@Base+0x4e8>
     c0c:	ldr	ip, [sp, #20]
     c10:	mov	r0, r6
     c14:	str	r5, [ip, sl, lsl #2]
     c18:	add	sl, sl, #1
     c1c:	bl	9ac <readdir64@plt>
     c20:	cmp	r0, #0
     c24:	bne	b78 <main@@Base+0x178>
     c28:	ldr	ip, [pc, #1372]	; 118c <main@@Base+0x78c>
     c2c:	mov	r0, r6
     c30:	add	ip, pc, ip
     c34:	str	ip, [sp, #40]	; 0x28
     c38:	bl	9f4 <closedir@plt>
     c3c:	ldr	ip, [pc, #1356]	; 1190 <main@@Base+0x790>
     c40:	str	r9, [sp, #48]	; 0x30
     c44:	ldr	r9, [sp, #28]
     c48:	add	ip, pc, ip
     c4c:	str	ip, [sp, #44]	; 0x2c
     c50:	ldr	ip, [pc, #1340]	; 1194 <main@@Base+0x794>
     c54:	add	ip, pc, ip
     c58:	str	ip, [sp, #52]	; 0x34
     c5c:	cmp	sl, #0
     c60:	beq	fa4 <main@@Base+0x5a4>
     c64:	ldr	ip, [sp, #20]
     c68:	ldr	r4, [ip]
     c6c:	ldr	r3, [r4, #4]
     c70:	cmp	r3, #0
     c74:	bge	10dc <main@@Base+0x6dc>
     c78:	ldr	ip, [pc, #1304]	; 1198 <main@@Base+0x798>
     c7c:	mov	r8, #0
     c80:	ldr	r6, [sp, #20]
     c84:	mov	r5, #1
     c88:	add	ip, pc, ip
     c8c:	str	ip, [sp, #16]
     c90:	ldr	ip, [pc, #1284]	; 119c <main@@Base+0x79c>
     c94:	add	ip, pc, ip
     c98:	str	ip, [sp, #36]	; 0x24
     c9c:	ldr	ip, [pc, #1276]	; 11a0 <main@@Base+0x7a0>
     ca0:	add	ip, pc, ip
     ca4:	str	ip, [sp, #24]
     ca8:	b	cc8 <main@@Base+0x2c8>
     cac:	cmp	r5, sl
     cb0:	beq	db8 <main@@Base+0x3b8>
     cb4:	ldr	r4, [r6, #4]!
     cb8:	add	r5, r5, #1
     cbc:	ldr	r3, [r4, #4]
     cc0:	cmp	r3, #0
     cc4:	bge	10dc <main@@Base+0x6dc>
     cc8:	ldr	fp, [r4, #8]
     ccc:	cmp	fp, #0
     cd0:	bne	cac <main@@Base+0x2ac>
     cd4:	ldr	r3, [r4, #12]
     cd8:	cmp	r3, #5
     cdc:	bgt	dec <main@@Base+0x3ec>
     ce0:	mov	r0, #1
     ce4:	mov	r2, fp
     ce8:	add	r3, r3, r0
     cec:	mov	r1, r0
     cf0:	str	r3, [r4, #12]
     cf4:	bl	9b8 <socket@plt>
     cf8:	cmp	r0, #0
     cfc:	str	r0, [r4, #4]
     d00:	blt	e6c <main@@Base+0x46c>
     d04:	mov	r1, #4
     d08:	mov	r2, #2048	; 0x800
     d0c:	bl	964 <fcntl@plt>
     d10:	cmp	r0, #0
     d14:	blt	ea8 <main@@Base+0x4a8>
     d18:	add	r7, sp, #60	; 0x3c
     d1c:	mov	r1, fp
     d20:	mov	r2, #110	; 0x6e
     d24:	mov	r0, r7
     d28:	bl	97c <memset@plt>
     d2c:	mov	r3, #1
     d30:	add	r0, sp, #62	; 0x3e
     d34:	strh	r3, [sp, #60]	; 0x3c
     d38:	mov	r2, #107	; 0x6b
     d3c:	ldr	r1, [r4]
     d40:	bl	988 <strncpy@plt>
     d44:	b	d58 <main@@Base+0x358>
     d48:	bl	970 <__errno_location@plt>
     d4c:	ldr	r3, [r0]
     d50:	cmp	r3, #4
     d54:	bne	e14 <main@@Base+0x414>
     d58:	ldr	r0, [r4, #4]
     d5c:	mov	r1, r7
     d60:	mov	r2, #110	; 0x6e
     d64:	bl	9e8 <connect@plt>
     d68:	cmp	r0, #0
     d6c:	blt	d48 <main@@Base+0x348>
     d70:	ldr	ip, [sp, #16]
     d74:	ldr	r1, [sp, #16]
     d78:	ldr	r3, [ip, #4]
     d7c:	mov	ip, #3
     d80:	add	r3, r3, #1
     d84:	str	r3, [r1, #4]
     d88:	str	ip, [r4, #8]
     d8c:	ldr	r0, [r4, #4]
     d90:	cmp	r0, #0
     d94:	blt	da4 <main@@Base+0x3a4>
     d98:	bl	9dc <close@plt>
     d9c:	mvn	r3, #0
     da0:	str	r3, [r4, #4]
     da4:	ldr	r3, [r4, #8]
     da8:	cmp	r3, #0
     dac:	addeq	r8, r8, #1
     db0:	cmp	r5, sl
     db4:	bne	cb4 <main@@Base+0x2b4>
     db8:	cmp	r8, #0
     dbc:	beq	114c <main@@Base+0x74c>
     dc0:	ldr	r3, [pc, #988]	; 11a4 <main@@Base+0x7a4>
     dc4:	mov	r1, #1
     dc8:	ldr	r0, [pc, #984]	; 11a8 <main@@Base+0x7a8>
     dcc:	mov	r2, #65	; 0x41
     dd0:	ldr	r3, [r9, r3]
     dd4:	add	r0, pc, r0
     dd8:	ldr	r3, [r3]
     ddc:	bl	8ec <fwrite@plt>
     de0:	mov	r0, #2
     de4:	bl	8bc <sleep@plt>
     de8:	b	c5c <main@@Base+0x25c>
     dec:	ldr	r0, [pc, #944]	; 11a4 <main@@Base+0x7a4>
     df0:	mov	r1, #1
     df4:	ldr	r2, [pc, #944]	; 11ac <main@@Base+0x7ac>
     df8:	ldr	r3, [r4]
     dfc:	ldr	r0, [r9, r0]
     e00:	add	r2, pc, r2
     e04:	ldr	r0, [r0]
     e08:	bl	9a0 <__fprintf_chk@plt>
     e0c:	mov	ip, #1
     e10:	b	d88 <main@@Base+0x388>
     e14:	cmp	r3, #111	; 0x6f
     e18:	mov	r2, r0
     e1c:	mov	r0, r3
     e20:	beq	f34 <main@@Base+0x534>
     e24:	cmp	r3, #115	; 0x73
     e28:	beq	ea0 <main@@Base+0x4a0>
     e2c:	cmp	r3, #11
     e30:	beq	ea0 <main@@Base+0x4a0>
     e34:	ldr	r2, [pc, #872]	; 11a4 <main@@Base+0x7a4>
     e38:	ldr	r3, [r4]
     e3c:	ldr	r2, [r9, r2]
     e40:	ldr	r7, [r2]
     e44:	str	r3, [sp, #12]
     e48:	bl	934 <strerror@plt>
     e4c:	ldr	r3, [sp, #12]
     e50:	mov	r1, #1
     e54:	ldr	r2, [sp, #52]	; 0x34
     e58:	str	r0, [sp]
     e5c:	mov	r0, r7
     e60:	bl	9a0 <__fprintf_chk@plt>
     e64:	mov	ip, #1
     e68:	b	d88 <main@@Base+0x388>
     e6c:	ldr	r3, [pc, #816]	; 11a4 <main@@Base+0x7a4>
     e70:	ldr	r3, [r9, r3]
     e74:	ldr	r7, [r3]
     e78:	bl	970 <__errno_location@plt>
     e7c:	ldr	r0, [r0]
     e80:	bl	934 <strerror@plt>
     e84:	mov	r1, #1
     e88:	ldr	r2, [sp, #24]
     e8c:	mov	r3, r0
     e90:	mov	r0, r7
     e94:	bl	9a0 <__fprintf_chk@plt>
     e98:	mov	ip, fp
     e9c:	b	d88 <main@@Base+0x388>
     ea0:	mov	ip, #0
     ea4:	b	d88 <main@@Base+0x388>
     ea8:	ldr	r2, [pc, #756]	; 11a4 <main@@Base+0x7a4>
     eac:	ldr	r3, [r4]
     eb0:	ldr	r2, [r9, r2]
     eb4:	ldr	r7, [r2]
     eb8:	str	r3, [sp, #12]
     ebc:	bl	970 <__errno_location@plt>
     ec0:	ldr	r0, [r0]
     ec4:	bl	934 <strerror@plt>
     ec8:	ldr	r3, [sp, #12]
     ecc:	mov	r1, #1
     ed0:	ldr	r2, [sp, #36]	; 0x24
     ed4:	str	r0, [sp]
     ed8:	mov	r0, r7
     edc:	bl	9a0 <__fprintf_chk@plt>
     ee0:	mov	ip, fp
     ee4:	b	d88 <main@@Base+0x388>
     ee8:	lsl	r3, r3, #1
     eec:	ldr	r0, [sp, #20]
     ef0:	str	r3, [sp, #16]
     ef4:	lsls	r4, r3, #2
     ef8:	beq	106c <main@@Base+0x66c>
     efc:	mov	r1, r4
     f00:	bl	8e0 <realloc@plt>
     f04:	cmp	r0, #0
     f08:	str	r0, [sp, #20]
     f0c:	bne	c0c <main@@Base+0x20c>
     f10:	ldr	r2, [pc, #664]	; 11b0 <main@@Base+0x7b0>
     f14:	mov	r3, r4
     f18:	ldr	r0, [pc, #644]	; 11a4 <main@@Base+0x7a4>
     f1c:	mov	r1, #1
     f20:	add	r2, pc, r2
     f24:	b	10f0 <main@@Base+0x6f0>
     f28:	ldr	r9, [pc, #644]	; 11b4 <main@@Base+0x7b4>
     f2c:	add	r9, pc, r9
     f30:	b	b2c <main@@Base+0x12c>
     f34:	ldr	ip, [sp, #40]	; 0x28
     f38:	ldr	r0, [r4]
     f3c:	ldr	r3, [ip, #8]
     f40:	add	r3, r3, #1
     f44:	str	r3, [ip, #8]
     f48:	str	r2, [sp, #12]
     f4c:	bl	8d4 <unlink@plt>
     f50:	ldr	r2, [sp, #12]
     f54:	cmp	r0, #0
     f58:	movge	r3, #4
     f5c:	strge	r3, [r4, #8]
     f60:	bge	d8c <main@@Base+0x38c>
     f64:	ldr	r1, [pc, #568]	; 11a4 <main@@Base+0x7a4>
     f68:	ldr	r0, [r2]
     f6c:	ldr	r3, [r4]
     f70:	ldr	r2, [r9, r1]
     f74:	ldr	r7, [r2]
     f78:	str	r3, [sp, #12]
     f7c:	bl	934 <strerror@plt>
     f80:	ldr	r3, [sp, #12]
     f84:	mov	r1, #1
     f88:	ldr	r2, [sp, #44]	; 0x2c
     f8c:	str	r0, [sp]
     f90:	mov	r0, r7
     f94:	bl	9a0 <__fprintf_chk@plt>
     f98:	mov	r3, #1
     f9c:	str	r3, [r4, #8]
     fa0:	b	d8c <main@@Base+0x38c>
     fa4:	ldr	r3, [pc, #524]	; 11b8 <main@@Base+0x7b8>
     fa8:	ldr	ip, [sp, #20]
     fac:	add	r3, pc, r3
     fb0:	ldr	r9, [sp, #48]	; 0x30
     fb4:	cmp	ip, #0
     fb8:	ldmib	r3, {r0, r1}
     fbc:	ldr	r2, [r3]
     fc0:	rsb	r0, r0, #0
     fc4:	rsb	r1, r1, r0
     fc8:	add	r2, r1, r2
     fcc:	str	r2, [r3]
     fd0:	beq	1020 <main@@Base+0x620>
     fd4:	mov	r4, #0
     fd8:	ldr	r6, [sp, #20]
     fdc:	b	1010 <main@@Base+0x610>
     fe0:	ldr	r5, [r6, r4, lsl #2]
     fe4:	cmp	r5, #0
     fe8:	beq	100c <main@@Base+0x60c>
     fec:	ldr	r0, [r5]
     ff0:	bl	8b0 <free@plt>
     ff4:	ldr	r0, [r5, #4]
     ff8:	cmp	r0, #0
     ffc:	blt	1004 <main@@Base+0x604>
    1000:	bl	9dc <close@plt>
    1004:	mov	r0, r5
    1008:	bl	8b0 <free@plt>
    100c:	add	r4, r4, #1
    1010:	cmp	r4, sl
    1014:	blt	fe0 <main@@Base+0x5e0>
    1018:	ldr	r0, [sp, #20]
    101c:	bl	8b0 <free@plt>
    1020:	ldr	r2, [pc, #404]	; 11bc <main@@Base+0x7bc>
    1024:	mov	r3, r9
    1028:	ldr	r1, [pc, #400]	; 11c0 <main@@Base+0x7c0>
    102c:	mov	r0, #1
    1030:	add	r2, pc, r2
    1034:	add	r1, pc, r1
    1038:	ldm	r2, {ip, lr}
    103c:	ldr	r2, [r2, #8]
    1040:	str	ip, [sp, #4]
    1044:	str	lr, [sp]
    1048:	bl	994 <__printf_chk@plt>
    104c:	ldr	ip, [sp, #32]
    1050:	ldr	r2, [sp, #172]	; 0xac
    1054:	mov	r0, #0
    1058:	ldr	r3, [ip]
    105c:	cmp	r2, r3
    1060:	bne	1108 <main@@Base+0x708>
    1064:	add	sp, sp, #180	; 0xb4
    1068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    106c:	str	r4, [sp, #20]
    1070:	bl	8b0 <free@plt>
    1074:	b	c0c <main@@Base+0x20c>
    1078:	ldr	r1, [pc, #324]	; 11c4 <main@@Base+0x7c4>
    107c:	mov	r3, r0
    1080:	ldr	r2, [pc, #320]	; 11c8 <main@@Base+0x7c8>
    1084:	mov	r0, #1
    1088:	add	r1, pc, r1
    108c:	str	r3, [sp, #12]
    1090:	add	r2, pc, r2
    1094:	bl	994 <__printf_chk@plt>
    1098:	ldr	r3, [sp, #12]
    109c:	mov	r0, r3
    10a0:	bl	94c <exit@plt>
    10a4:	ldr	r9, [pc, #288]	; 11cc <main@@Base+0x7cc>
    10a8:	add	r9, pc, r9
    10ac:	b	b2c <main@@Base+0x12c>
    10b0:	ldr	ip, [sp, #28]
    10b4:	mov	r1, #1
    10b8:	ldr	r3, [pc, #228]	; 11a4 <main@@Base+0x7a4>
    10bc:	mov	r2, #59	; 0x3b
    10c0:	ldr	r0, [pc, #264]	; 11d0 <main@@Base+0x7d0>
    10c4:	ldr	r3, [ip, r3]
    10c8:	add	r0, pc, r0
    10cc:	ldr	r3, [r3]
    10d0:	bl	8ec <fwrite@plt>
    10d4:	mov	r0, #1
    10d8:	bl	94c <exit@plt>
    10dc:	ldr	r2, [pc, #240]	; 11d4 <main@@Base+0x7d4>
    10e0:	mov	r1, #1
    10e4:	ldr	r0, [pc, #184]	; 11a4 <main@@Base+0x7a4>
    10e8:	ldr	r3, [r4, #8]
    10ec:	add	r2, pc, r2
    10f0:	ldr	ip, [sp, #28]
    10f4:	ldr	r0, [ip, r0]
    10f8:	ldr	r0, [r0]
    10fc:	bl	9a0 <__fprintf_chk@plt>
    1100:	mov	r0, #1
    1104:	bl	94c <exit@plt>
    1108:	bl	8c8 <__stack_chk_fail@plt>
    110c:	ldr	ip, [sp, #28]
    1110:	ldr	r3, [pc, #140]	; 11a4 <main@@Base+0x7a4>
    1114:	ldr	r3, [ip, r3]
    1118:	ldr	r4, [r3]
    111c:	bl	970 <__errno_location@plt>
    1120:	ldr	r0, [r0]
    1124:	bl	934 <strerror@plt>
    1128:	ldr	r2, [pc, #168]	; 11d8 <main@@Base+0x7d8>
    112c:	mov	r3, r9
    1130:	mov	r1, #1
    1134:	add	r2, pc, r2
    1138:	str	r0, [sp]
    113c:	mov	r0, r4
    1140:	bl	9a0 <__fprintf_chk@plt>
    1144:	mov	r0, #1
    1148:	bl	94c <exit@plt>
    114c:	ldr	r3, [pc, #136]	; 11dc <main@@Base+0x7dc>
    1150:	ldr	r9, [sp, #48]	; 0x30
    1154:	add	r3, pc, r3
    1158:	ldmib	r3, {r0, r1}
    115c:	ldr	r2, [r3]
    1160:	rsb	r0, r0, sl
    1164:	rsb	r1, r1, r0
    1168:	add	r2, r1, r2
    116c:	str	r2, [r3]
    1170:	b	fd4 <main@@Base+0x5d4>
    1174:	andeq	r1, r1, ip, lsr r5
    1178:	muleq	r0, r0, r0
    117c:	andeq	r0, r0, r4, ror #21
    1180:	andeq	r0, r0, r4, ror #21
    1184:	andeq	r0, r0, r8, asr #22
    1188:	andeq	r0, r0, r8, asr #22
    118c:	ldrdeq	r1, [r1], -r0
    1190:	andeq	r0, r0, r8, lsl #24
    1194:	andeq	r0, r0, r4, asr #23
    1198:	andeq	r1, r1, r8, ror r3
    119c:	andeq	r0, r0, r4, asr fp
    11a0:	andeq	r0, r0, ip, lsl #22
    11a4:	muleq	r0, r4, r0
    11a8:	strdeq	r0, [r0], -ip
    11ac:	andeq	r0, r0, r0, asr r9
    11b0:	andeq	r0, r0, ip, lsl #15
    11b4:	strdeq	r0, [r0], -r4
    11b8:	andeq	r1, r1, r4, asr r0
    11bc:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    11c0:	andeq	r0, r0, r0, asr #16
    11c4:			; <UNDEFINED> instruction: 0x000004b4
    11c8:	andeq	r0, r0, r8, lsr #11
    11cc:	andeq	r0, r0, r8, ror r4
    11d0:	andeq	r0, r0, r8, ror r5
    11d4:	andeq	r0, r0, r8, lsr #12
    11d8:	andeq	r0, r0, r8, asr #10
    11dc:	andeq	r0, r1, ip, lsr #29
    11e0:	mov	fp, #0
    11e4:	mov	lr, #0
    11e8:	pop	{r1}		; (ldr r1, [sp], #4)
    11ec:	mov	r2, sp
    11f0:	push	{r2}		; (str r2, [sp, #-4]!)
    11f4:	push	{r0}		; (str r0, [sp, #-4]!)
    11f8:	ldr	sl, [pc, #40]	; 1228 <main@@Base+0x828>
    11fc:	add	r3, pc, #36	; 0x24
    1200:	add	sl, sl, r3
    1204:	ldr	ip, [pc, #32]	; 122c <main@@Base+0x82c>
    1208:	ldr	ip, [sl, ip]
    120c:	push	{ip}		; (str ip, [sp, #-4]!)
    1210:	ldr	r3, [pc, #24]	; 1230 <main@@Base+0x830>
    1214:	ldr	r3, [sl, r3]
    1218:	ldr	r0, [pc, #20]	; 1234 <main@@Base+0x834>
    121c:	ldr	r0, [sl, r0]
    1220:	bl	928 <__libc_start_main@plt>
    1224:	bl	9d0 <abort@plt>
    1228:	andeq	r0, r1, ip, lsr #26
    122c:	andeq	r0, r0, r4, lsl #1
    1230:	muleq	r0, ip, r0
    1234:	andeq	r0, r0, r0, lsr #1
    1238:	ldr	r3, [pc, #20]	; 1254 <main@@Base+0x854>
    123c:	ldr	r2, [pc, #20]	; 1258 <main@@Base+0x858>
    1240:	add	r3, pc, r3
    1244:	ldr	r2, [r3, r2]
    1248:	cmp	r2, #0
    124c:	bxeq	lr
    1250:	b	940 <__gmon_start__@plt>
    1254:	andeq	r0, r1, ip, lsl #26
    1258:	muleq	r0, r8, r0
    125c:	ldr	r2, [pc, #60]	; 12a0 <main@@Base+0x8a0>
    1260:	ldr	r0, [pc, #60]	; 12a4 <main@@Base+0x8a4>
    1264:	add	r2, pc, r2
    1268:	add	r0, pc, r0
    126c:	add	r2, r2, #3
    1270:	rsb	r2, r0, r2
    1274:	push	{r3, lr}
    1278:	cmp	r2, #6
    127c:	ldr	r3, [pc, #36]	; 12a8 <main@@Base+0x8a8>
    1280:	add	r3, pc, r3
    1284:	popls	{r3, pc}
    1288:	ldr	r2, [pc, #28]	; 12ac <main@@Base+0x8ac>
    128c:	ldr	r3, [r3, r2]
    1290:	cmp	r3, #0
    1294:	popeq	{r3, pc}
    1298:	blx	r3
    129c:	pop	{r3, pc}
    12a0:	muleq	r1, r8, sp
    12a4:	muleq	r1, r4, sp
    12a8:	andeq	r0, r1, ip, asr #25
    12ac:	andeq	r0, r0, ip, lsl #1
    12b0:	push	{r3, lr}
    12b4:	ldr	r0, [pc, #64]	; 12fc <main@@Base+0x8fc>
    12b8:	ldr	r3, [pc, #64]	; 1300 <main@@Base+0x900>
    12bc:	add	r0, pc, r0
    12c0:	ldr	r2, [pc, #60]	; 1304 <main@@Base+0x904>
    12c4:	add	r3, pc, r3
    12c8:	rsb	r3, r0, r3
    12cc:	add	r2, pc, r2
    12d0:	asr	r3, r3, #2
    12d4:	add	r3, r3, r3, lsr #31
    12d8:	asrs	r3, r3, #1
    12dc:	popeq	{r3, pc}
    12e0:	ldr	r1, [pc, #32]	; 1308 <main@@Base+0x908>
    12e4:	ldr	r2, [r2, r1]
    12e8:	cmp	r2, #0
    12ec:	popeq	{r3, pc}
    12f0:	mov	r1, r3
    12f4:	blx	r2
    12f8:	pop	{r3, pc}
    12fc:	andeq	r0, r1, r0, asr #26
    1300:	andeq	r0, r1, r8, lsr sp
    1304:	andeq	r0, r1, r0, lsl #25
    1308:	andeq	r0, r0, r8, lsr #1
    130c:	ldr	r2, [pc, #76]	; 1360 <main@@Base+0x960>
    1310:	push	{r3, lr}
    1314:	add	r2, pc, r2
    1318:	ldr	r3, [pc, #68]	; 1364 <main@@Base+0x964>
    131c:	ldrb	r2, [r2]
    1320:	add	r3, pc, r3
    1324:	cmp	r2, #0
    1328:	popne	{r3, pc}
    132c:	ldr	r2, [pc, #52]	; 1368 <main@@Base+0x968>
    1330:	ldr	r3, [r3, r2]
    1334:	cmp	r3, #0
    1338:	beq	1348 <main@@Base+0x948>
    133c:	ldr	r0, [pc, #40]	; 136c <main@@Base+0x96c>
    1340:	add	r0, pc, r0
    1344:	bl	8a4 <__cxa_finalize@plt>
    1348:	bl	125c <main@@Base+0x85c>
    134c:	ldr	r3, [pc, #28]	; 1370 <main@@Base+0x970>
    1350:	mov	r2, #1
    1354:	add	r3, pc, r3
    1358:	strb	r2, [r3]
    135c:	pop	{r3, pc}
    1360:	andeq	r0, r1, r8, ror #25
    1364:	andeq	r0, r1, ip, lsr #24
    1368:	andeq	r0, r0, r8, lsl #1
    136c:	andeq	r0, r1, r0, lsl #22
    1370:	andeq	r0, r1, r8, lsr #25
    1374:	ldr	r0, [pc, #52]	; 13b0 <main@@Base+0x9b0>
    1378:	push	{r3, lr}
    137c:	add	r0, pc, r0
    1380:	ldr	r3, [pc, #44]	; 13b4 <main@@Base+0x9b4>
    1384:	ldr	r2, [r0]
    1388:	add	r3, pc, r3
    138c:	cmp	r2, #0
    1390:	beq	13a8 <main@@Base+0x9a8>
    1394:	ldr	r2, [pc, #28]	; 13b8 <main@@Base+0x9b8>
    1398:	ldr	r3, [r3, r2]
    139c:	cmp	r3, #0
    13a0:	beq	13a8 <main@@Base+0x9a8>
    13a4:	blx	r3
    13a8:	pop	{r3, lr}
    13ac:	b	12b0 <main@@Base+0x8b0>
    13b0:	andeq	r0, r1, r0, asr #21
    13b4:	andeq	r0, r1, r4, asr #23
    13b8:	andeq	r0, r0, r4, lsr #1
    13bc:	ldr	r3, [pc, #48]	; 13f4 <main@@Base+0x9f4>
    13c0:	mov	r1, #1
    13c4:	ldr	ip, [pc, #44]	; 13f8 <main@@Base+0x9f8>
    13c8:	mov	r2, #54	; 0x36
    13cc:	add	r3, pc, r3
    13d0:	push	{r4, lr}
    13d4:	mov	r4, r0
    13d8:	ldr	r3, [r3, ip]
    13dc:	ldr	r0, [pc, #24]	; 13fc <main@@Base+0x9fc>
    13e0:	ldr	r3, [r3]
    13e4:	add	r0, pc, r0
    13e8:	bl	8ec <fwrite@plt>
    13ec:	mov	r0, r4
    13f0:	bl	94c <exit@plt>
    13f4:	andeq	r0, r1, r0, lsl #23
    13f8:	muleq	r0, r4, r0
    13fc:	andeq	r0, r0, r4, ror #1
    1400:	push	{r3, r4, r5, lr}
    1404:	subs	r5, r0, #0
    1408:	ldr	r4, [pc, #64]	; 1450 <main@@Base+0xa50>
    140c:	add	r4, pc, r4
    1410:	beq	1448 <main@@Base+0xa48>
    1414:	bl	91c <malloc@plt>
    1418:	cmp	r0, #0
    141c:	popne	{r3, r4, r5, pc}
    1420:	ldr	r0, [pc, #44]	; 1454 <main@@Base+0xa54>
    1424:	mov	r3, r5
    1428:	ldr	r2, [pc, #40]	; 1458 <main@@Base+0xa58>
    142c:	mov	r1, #1
    1430:	ldr	r0, [r4, r0]
    1434:	add	r2, pc, r2
    1438:	ldr	r0, [r0]
    143c:	bl	9a0 <__fprintf_chk@plt>
    1440:	mov	r0, #1
    1444:	bl	94c <exit@plt>
    1448:	mov	r0, r5
    144c:	pop	{r3, r4, r5, pc}
    1450:	andeq	r0, r1, r0, asr #22
    1454:	muleq	r0, r4, r0
    1458:	andeq	r0, r0, ip, asr #1

0000145c <__libc_csu_init@@Base>:
    145c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    1460:	mov	r7, r0
    1464:	ldr	r6, [pc, #76]	; 14b8 <__libc_csu_init@@Base+0x5c>
    1468:	mov	r8, r1
    146c:	ldr	r5, [pc, #72]	; 14bc <__libc_csu_init@@Base+0x60>
    1470:	mov	r9, r2
    1474:	add	r6, pc, r6
    1478:	bl	878 <strcmp@plt-0x20>
    147c:	add	r5, pc, r5
    1480:	rsb	r6, r5, r6
    1484:	asrs	r6, r6, #2
    1488:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    148c:	sub	r5, r5, #4
    1490:	mov	r4, #0
    1494:	add	r4, r4, #1
    1498:	ldr	r3, [r5, #4]!
    149c:	mov	r0, r7
    14a0:	mov	r1, r8
    14a4:	mov	r2, r9
    14a8:	blx	r3
    14ac:	cmp	r4, r6
    14b0:	bne	1494 <__libc_csu_init@@Base+0x38>
    14b4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    14b8:	andeq	r0, r1, r4, asr #19
    14bc:			; <UNDEFINED> instruction: 0x000109b8

000014c0 <__libc_csu_fini@@Base>:
    14c0:	bx	lr

Disassembly of section .fini:

000014c4 <.fini>:
    14c4:	push	{r3, lr}
    14c8:	pop	{r3, pc}
