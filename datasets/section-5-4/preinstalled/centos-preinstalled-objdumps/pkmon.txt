
centos-preinstalled/pkmon:     file format elf32-littlearm


Disassembly of section .init:

00001048 <_init@@Base>:
    1048:	push	{r3, lr}
    104c:	bl	17f8 <main@@Base+0x4e4>
    1050:	pop	{r3, pc}

Disassembly of section .plt:

00001054 <pk_results_get_error_code@plt-0x14>:
    1054:	push	{lr}		; (str lr, [sp, #-4]!)
    1058:	ldr	lr, [pc, #4]	; 1064 <_init@@Base+0x1c>
    105c:	add	lr, pc, lr
    1060:	ldr	pc, [lr, #8]!
    1064:	muleq	r1, ip, pc	; <UNPREDICTABLE>

00001068 <pk_results_get_error_code@plt>:
    1068:	add	ip, pc, #0, 12
    106c:	add	ip, ip, #69632	; 0x11000
    1070:	ldr	pc, [ip, #3996]!	; 0xf9c

00001074 <g_free@plt>:
    1074:	add	ip, pc, #0, 12
    1078:	add	ip, ip, #69632	; 0x11000
    107c:	ldr	pc, [ip, #3988]!	; 0xf94

00001080 <abort@plt>:
    1080:	add	ip, pc, #0, 12
    1084:	add	ip, ip, #69632	; 0x11000
    1088:	ldr	pc, [ip, #3980]!	; 0xf8c

0000108c <__gcc_personality_v0@plt>:
    108c:	add	ip, pc, #0, 12
    1090:	add	ip, ip, #69632	; 0x11000
    1094:	ldr	pc, [ip, #3972]!	; 0xf84

00001098 <pk_info_enum_to_string@plt>:
    1098:	add	ip, pc, #0, 12
    109c:	add	ip, ip, #69632	; 0x11000
    10a0:	ldr	pc, [ip, #3964]!	; 0xf7c

000010a4 <__libc_start_main@plt>:
    10a4:	add	ip, pc, #0, 12
    10a8:	add	ip, ip, #69632	; 0x11000
    10ac:	ldr	pc, [ip, #3956]!	; 0xf74

000010b0 <g_print@plt>:
    10b0:	add	ip, pc, #0, 12
    10b4:	add	ip, ip, #69632	; 0x11000
    10b8:	ldr	pc, [ip, #3948]!	; 0xf6c

000010bc <g_option_context_free@plt>:
    10bc:	add	ip, pc, #0, 12
    10c0:	add	ip, ip, #69632	; 0x11000
    10c4:	ldr	pc, [ip, #3940]!	; 0xf64

000010c8 <__gmon_start__@plt>:
    10c8:	add	ip, pc, #0, 12
    10cc:	add	ip, ip, #69632	; 0x11000
    10d0:	ldr	pc, [ip, #3932]!	; 0xf5c

000010d4 <g_object_unref@plt>:
    10d4:	add	ip, pc, #0, 12
    10d8:	add	ip, ip, #69632	; 0x11000
    10dc:	ldr	pc, [ip, #3924]!	; 0xf54

000010e0 <pk_transaction_list_get_ids@plt>:
    10e0:	add	ip, pc, #0, 12
    10e4:	add	ip, ip, #69632	; 0x11000
    10e8:	ldr	pc, [ip, #3916]!	; 0xf4c

000010ec <g_ptr_array_foreach@plt>:
    10ec:	add	ip, pc, #0, 12
    10f0:	add	ip, ip, #69632	; 0x11000
    10f4:	ldr	pc, [ip, #3908]!	; 0xf44

000010f8 <pk_debug_is_verbose@plt>:
    10f8:	add	ip, pc, #0, 12
    10fc:	add	ip, ip, #69632	; 0x11000
    1100:	ldr	pc, [ip, #3900]!	; 0xf3c

00001104 <g_option_context_add_main_entries@plt>:
    1104:	add	ip, pc, #0, 12
    1108:	add	ip, ip, #69632	; 0x11000
    110c:	ldr	pc, [ip, #3892]!	; 0xf34

00001110 <bindtextdomain@plt>:
    1110:	add	ip, pc, #0, 12
    1114:	add	ip, ip, #69632	; 0x11000
    1118:	ldr	pc, [ip, #3884]!	; 0xf2c

0000111c <pk_control_new@plt>:
    111c:	add	ip, pc, #0, 12
    1120:	add	ip, ip, #69632	; 0x11000
    1124:	ldr	pc, [ip, #3876]!	; 0xf24

00001128 <g_main_loop_new@plt>:
    1128:	add	ip, pc, #0, 12
    112c:	add	ip, ip, #69632	; 0x11000
    1130:	ldr	pc, [ip, #3868]!	; 0xf1c

00001134 <pk_error_enum_to_string@plt>:
    1134:	add	ip, pc, #0, 12
    1138:	add	ip, ip, #69632	; 0x11000
    113c:	ldr	pc, [ip, #3860]!	; 0xf14

00001140 <pk_error_get_code@plt>:
    1140:	add	ip, pc, #0, 12
    1144:	add	ip, ip, #69632	; 0x11000
    1148:	ldr	pc, [ip, #3852]!	; 0xf0c

0000114c <pk_client_new@plt>:
    114c:	add	ip, pc, #0, 12
    1150:	add	ip, ip, #69632	; 0x11000
    1154:	ldr	pc, [ip, #3844]!	; 0xf04

00001158 <bind_textdomain_codeset@plt>:
    1158:	add	ip, pc, #0, 12
    115c:	add	ip, ip, #69632	; 0x11000
    1160:	ldr	pc, [ip, #3836]!	; 0xefc

00001164 <dcgettext@plt>:
    1164:	add	ip, pc, #0, 12
    1168:	add	ip, ip, #69632	; 0x11000
    116c:	ldr	pc, [ip, #3828]!	; 0xef4

00001170 <pk_network_enum_to_string@plt>:
    1170:	add	ip, pc, #0, 12
    1174:	add	ip, ip, #69632	; 0x11000
    1178:	ldr	pc, [ip, #3820]!	; 0xeec

0000117c <g_option_context_set_summary@plt>:
    117c:	add	ip, pc, #0, 12
    1180:	add	ip, ip, #69632	; 0x11000
    1184:	ldr	pc, [ip, #3812]!	; 0xee4

00001188 <pk_debug_get_option_group@plt>:
    1188:	add	ip, pc, #0, 12
    118c:	add	ip, ip, #69632	; 0x11000
    1190:	ldr	pc, [ip, #3804]!	; 0xedc

00001194 <g_option_context_parse@plt>:
    1194:	add	ip, pc, #0, 12
    1198:	add	ip, ip, #69632	; 0x11000
    119c:	ldr	pc, [ip, #3796]!	; 0xed4

000011a0 <g_object_get@plt>:
    11a0:	add	ip, pc, #0, 12
    11a4:	add	ip, ip, #69632	; 0x11000
    11a8:	ldr	pc, [ip, #3788]!	; 0xecc

000011ac <setlocale@plt>:
    11ac:	add	ip, pc, #0, 12
    11b0:	add	ip, ip, #69632	; 0x11000
    11b4:	ldr	pc, [ip, #3780]!	; 0xec4

000011b8 <pk_item_progress_get_package_id@plt>:
    11b8:	add	ip, pc, #0, 12
    11bc:	add	ip, ip, #69632	; 0x11000
    11c0:	ldr	pc, [ip, #3772]!	; 0xebc

000011c4 <g_option_context_add_group@plt>:
    11c4:	add	ip, pc, #0, 12
    11c8:	add	ip, ip, #69632	; 0x11000
    11cc:	ldr	pc, [ip, #3764]!	; 0xeb4

000011d0 <pk_control_get_properties_async@plt>:
    11d0:	add	ip, pc, #0, 12
    11d4:	add	ip, ip, #69632	; 0x11000
    11d8:	ldr	pc, [ip, #3756]!	; 0xeac

000011dc <pk_error_get_details@plt>:
    11dc:	add	ip, pc, #0, 12
    11e0:	add	ip, ip, #69632	; 0x11000
    11e4:	ldr	pc, [ip, #3748]!	; 0xea4

000011e8 <g_signal_connect_data@plt>:
    11e8:	add	ip, pc, #0, 12
    11ec:	add	ip, ip, #69632	; 0x11000
    11f0:	ldr	pc, [ip, #3740]!	; 0xe9c

000011f4 <__stack_chk_fail@plt>:
    11f4:	add	ip, pc, #0, 12
    11f8:	add	ip, ip, #69632	; 0x11000
    11fc:	ldr	pc, [ip, #3732]!	; 0xe94

00001200 <pk_item_progress_get_status@plt>:
    1200:	add	ip, pc, #0, 12
    1204:	add	ip, ip, #69632	; 0x11000
    1208:	ldr	pc, [ip, #3724]!	; 0xe8c

0000120c <pk_transaction_list_new@plt>:
    120c:	add	ip, pc, #0, 12
    1210:	add	ip, ip, #69632	; 0x11000
    1214:	ldr	pc, [ip, #3716]!	; 0xe84

00001218 <pk_exit_enum_to_string@plt>:
    1218:	add	ip, pc, #0, 12
    121c:	add	ip, ip, #69632	; 0x11000
    1220:	ldr	pc, [ip, #3708]!	; 0xe7c

00001224 <pk_control_get_daemon_state_async@plt>:
    1224:	add	ip, pc, #0, 12
    1228:	add	ip, ip, #69632	; 0x11000
    122c:	ldr	pc, [ip, #3700]!	; 0xe74

00001230 <pk_control_get_daemon_state_finish@plt>:
    1230:	add	ip, pc, #0, 12
    1234:	add	ip, ip, #69632	; 0x11000
    1238:	ldr	pc, [ip, #3692]!	; 0xe6c

0000123c <pk_results_get_exit_code@plt>:
    123c:	add	ip, pc, #0, 12
    1240:	add	ip, ip, #69632	; 0x11000
    1244:	ldr	pc, [ip, #3684]!	; 0xe64

00001248 <pk_client_generic_finish@plt>:
    1248:	add	ip, pc, #0, 12
    124c:	add	ip, ip, #69632	; 0x11000
    1250:	ldr	pc, [ip, #3676]!	; 0xe5c

00001254 <textdomain@plt>:
    1254:	add	ip, pc, #0, 12
    1258:	add	ip, ip, #69632	; 0x11000
    125c:	ldr	pc, [ip, #3668]!	; 0xe54

00001260 <pk_role_enum_to_string@plt>:
    1260:	add	ip, pc, #0, 12
    1264:	add	ip, ip, #69632	; 0x11000
    1268:	ldr	pc, [ip, #3660]!	; 0xe4c

0000126c <g_option_context_new@plt>:
    126c:	add	ip, pc, #0, 12
    1270:	add	ip, ip, #69632	; 0x11000
    1274:	ldr	pc, [ip, #3652]!	; 0xe44

00001278 <g_error_free@plt>:
    1278:	add	ip, pc, #0, 12
    127c:	add	ip, ip, #69632	; 0x11000
    1280:	ldr	pc, [ip, #3644]!	; 0xe3c

00001284 <g_strfreev@plt>:
    1284:	add	ip, pc, #0, 12
    1288:	add	ip, ip, #69632	; 0x11000
    128c:	ldr	pc, [ip, #3636]!	; 0xe34

00001290 <g_ptr_array_unref@plt>:
    1290:	add	ip, pc, #0, 12
    1294:	add	ip, ip, #69632	; 0x11000
    1298:	ldr	pc, [ip, #3628]!	; 0xe2c

0000129c <pk_media_type_enum_to_string@plt>:
    129c:	add	ip, pc, #0, 12
    12a0:	add	ip, ip, #69632	; 0x11000
    12a4:	ldr	pc, [ip, #3620]!	; 0xe24

000012a8 <g_main_loop_run@plt>:
    12a8:	add	ip, pc, #0, 12
    12ac:	add	ip, ip, #69632	; 0x11000
    12b0:	ldr	pc, [ip, #3612]!	; 0xe1c

000012b4 <_Unwind_Resume@plt>:
    12b4:	add	ip, pc, #0, 12
    12b8:	add	ip, ip, #69632	; 0x11000
    12bc:	ldr	pc, [ip, #3604]!	; 0xe14

000012c0 <pk_control_get_properties_finish@plt>:
    12c0:	add	ip, pc, #0, 12
    12c4:	add	ip, ip, #69632	; 0x11000
    12c8:	ldr	pc, [ip, #3596]!	; 0xe0c

000012cc <g_log@plt>:
    12cc:	add	ip, pc, #0, 12
    12d0:	add	ip, ip, #69632	; 0x11000
    12d4:	ldr	pc, [ip, #3588]!	; 0xe04

000012d8 <pk_status_enum_to_string@plt>:
    12d8:	add	ip, pc, #0, 12
    12dc:	add	ip, ip, #69632	; 0x11000
    12e0:	ldr	pc, [ip, #3580]!	; 0xdfc

000012e4 <pk_client_adopt_async@plt>:
    12e4:	add	ip, pc, #0, 12
    12e8:	add	ip, ip, #69632	; 0x11000
    12ec:	ldr	pc, [ip, #3572]!	; 0xdf4

000012f0 <__cxa_finalize@plt>:
    12f0:	add	ip, pc, #0, 12
    12f4:	add	ip, ip, #69632	; 0x11000
    12f8:	ldr	pc, [ip, #3564]!	; 0xdec

000012fc <pk_results_get_media_change_required_array@plt>:
    12fc:	add	ip, pc, #0, 12
    1300:	add	ip, ip, #69632	; 0x11000
    1304:	ldr	pc, [ip, #3556]!	; 0xde4

00001308 <pk_item_progress_get_percentage@plt>:
    1308:	add	ip, pc, #0, 12
    130c:	add	ip, ip, #69632	; 0x11000
    1310:	ldr	pc, [ip, #3548]!	; 0xddc

Disassembly of section .text:

00001314 <main@@Base>:
    1314:	ldr	r3, [pc, #1028]	; 1720 <main@@Base+0x40c>
    1318:	mov	r2, #5
    131c:	ldr	ip, [pc, #1024]	; 1724 <main@@Base+0x410>
    1320:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1324:	add	r3, pc, r3
    1328:	sub	sp, sp, #84	; 0x54
    132c:	mov	r4, #0
    1330:	ldr	r5, [pc, #1008]	; 1728 <main@@Base+0x414>
    1334:	str	r0, [sp, #12]
    1338:	mov	r0, r4
    133c:	str	r1, [sp, #8]
    1340:	add	r5, pc, r5
    1344:	ldr	r9, [r3, ip]
    1348:	ldr	r1, [pc, #988]	; 172c <main@@Base+0x418>
    134c:	ldr	ip, [pc, #988]	; 1730 <main@@Base+0x41c>
    1350:	ldr	r3, [r9]
    1354:	add	r1, pc, r1
    1358:	add	ip, pc, ip
    135c:	str	r4, [sp, #16]
    1360:	str	ip, [sp, #20]
    1364:	str	r3, [sp, #76]	; 0x4c
    1368:	add	r3, sp, #16
    136c:	str	r4, [sp, #24]
    1370:	str	r3, [sp, #36]	; 0x24
    1374:	str	r4, [sp, #28]
    1378:	str	r4, [sp, #32]
    137c:	str	r4, [sp, #40]	; 0x28
    1380:	str	r4, [sp, #44]	; 0x2c
    1384:	str	r4, [sp, #48]	; 0x30
    1388:	str	r4, [sp, #52]	; 0x34
    138c:	str	r4, [sp, #56]	; 0x38
    1390:	str	r4, [sp, #60]	; 0x3c
    1394:	str	r4, [sp, #64]	; 0x40
    1398:	str	r4, [sp, #68]	; 0x44
    139c:	str	r4, [sp, #72]	; 0x48
    13a0:	bl	1164 <dcgettext@plt>
    13a4:	ldr	r1, [pc, #904]	; 1734 <main@@Base+0x420>
    13a8:	add	r1, pc, r1
    13ac:	str	r0, [sp, #40]	; 0x28
    13b0:	mov	r0, #6
    13b4:	bl	11ac <setlocale@plt>
    13b8:	ldr	r1, [pc, #888]	; 1738 <main@@Base+0x424>
    13bc:	mov	r0, r5
    13c0:	add	r1, pc, r1
    13c4:	bl	1110 <bindtextdomain@plt>
    13c8:	ldr	r1, [pc, #876]	; 173c <main@@Base+0x428>
    13cc:	mov	r0, r5
    13d0:	add	r1, pc, r1
    13d4:	bl	1158 <bind_textdomain_codeset@plt>
    13d8:	mov	r0, r5
    13dc:	bl	1254 <textdomain@plt>
    13e0:	mov	r0, r4
    13e4:	bl	126c <g_option_context_new@plt>
    13e8:	ldr	r1, [pc, #848]	; 1740 <main@@Base+0x42c>
    13ec:	mov	r4, r0
    13f0:	mov	r2, #5
    13f4:	mov	r0, #0
    13f8:	add	r1, pc, r1
    13fc:	bl	1164 <dcgettext@plt>
    1400:	mov	r1, r0
    1404:	mov	r0, r4
    1408:	bl	117c <g_option_context_set_summary@plt>
    140c:	mov	r0, r4
    1410:	add	r1, sp, #20
    1414:	mov	r2, #0
    1418:	bl	1104 <g_option_context_add_main_entries@plt>
    141c:	bl	1188 <pk_debug_get_option_group@plt>
    1420:	mov	r1, r0
    1424:	mov	r0, r4
    1428:	bl	11c4 <g_option_context_add_group@plt>
    142c:	mov	r0, r4
    1430:	add	r1, sp, #12
    1434:	add	r2, sp, #8
    1438:	mov	r3, #0
    143c:	bl	1194 <g_option_context_parse@plt>
    1440:	mov	r0, r4
    1444:	bl	10bc <g_option_context_free@plt>
    1448:	ldr	r0, [sp, #16]
    144c:	cmp	r0, #0
    1450:	beq	14b0 <main@@Base+0x19c>
    1454:	ldr	r0, [pc, #744]	; 1744 <main@@Base+0x430>
    1458:	add	r0, pc, r0
    145c:	bl	10b0 <g_print@plt>
    1460:	mov	r8, #0
    1464:	mov	r7, r8
    1468:	ldr	r3, [pc, #728]	; 1748 <main@@Base+0x434>
    146c:	ldr	r0, [pc, r3]
    1470:	bl	10d4 <g_object_unref@plt>
    1474:	cmp	r8, #0
    1478:	beq	1484 <main@@Base+0x170>
    147c:	mov	r0, r8
    1480:	bl	10d4 <g_object_unref@plt>
    1484:	cmp	r7, #0
    1488:	beq	1494 <main@@Base+0x180>
    148c:	mov	r0, r7
    1490:	bl	10d4 <g_object_unref@plt>
    1494:	ldr	r2, [sp, #76]	; 0x4c
    1498:	mov	r0, #0
    149c:	ldr	r3, [r9]
    14a0:	cmp	r2, r3
    14a4:	bne	16b4 <main@@Base+0x3a0>
    14a8:	add	sp, sp, #84	; 0x54
    14ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    14b0:	mov	r1, r0
    14b4:	bl	1128 <g_main_loop_new@plt>
    14b8:	mov	fp, r0
    14bc:	bl	111c <pk_control_new@plt>
    14c0:	mov	r2, #0
    14c4:	ldr	r1, [pc, #640]	; 174c <main@@Base+0x438>
    14c8:	str	r2, [sp]
    14cc:	mov	r3, r2
    14d0:	str	r2, [sp, #4]
    14d4:	add	r1, pc, r1
    14d8:	ldr	r2, [pc, #624]	; 1750 <main@@Base+0x43c>
    14dc:	mov	r7, r0
    14e0:	add	r2, pc, r2
    14e4:	bl	11e8 <g_signal_connect_data@plt>
    14e8:	mov	r2, #0
    14ec:	ldr	r1, [pc, #608]	; 1754 <main@@Base+0x440>
    14f0:	str	r2, [sp]
    14f4:	mov	r3, r2
    14f8:	str	r2, [sp, #4]
    14fc:	mov	r0, r7
    1500:	ldr	r2, [pc, #592]	; 1758 <main@@Base+0x444>
    1504:	add	r1, pc, r1
    1508:	add	r2, pc, r2
    150c:	bl	11e8 <g_signal_connect_data@plt>
    1510:	mov	r2, #0
    1514:	ldr	r1, [pc, #576]	; 175c <main@@Base+0x448>
    1518:	str	r2, [sp]
    151c:	mov	r3, r2
    1520:	str	r2, [sp, #4]
    1524:	mov	r0, r7
    1528:	ldr	r2, [pc, #560]	; 1760 <main@@Base+0x44c>
    152c:	add	r1, pc, r1
    1530:	add	r2, pc, r2
    1534:	bl	11e8 <g_signal_connect_data@plt>
    1538:	mov	r2, #0
    153c:	ldr	r1, [pc, #544]	; 1764 <main@@Base+0x450>
    1540:	str	r2, [sp]
    1544:	mov	r3, r2
    1548:	str	r2, [sp, #4]
    154c:	mov	r0, r7
    1550:	ldr	r2, [pc, #528]	; 1768 <main@@Base+0x454>
    1554:	add	r1, pc, r1
    1558:	add	r2, pc, r2
    155c:	bl	11e8 <g_signal_connect_data@plt>
    1560:	mov	r2, #0
    1564:	ldr	r1, [pc, #512]	; 176c <main@@Base+0x458>
    1568:	str	r2, [sp]
    156c:	mov	r3, r2
    1570:	str	r2, [sp, #4]
    1574:	mov	r0, r7
    1578:	ldr	r2, [pc, #496]	; 1770 <main@@Base+0x45c>
    157c:	add	r1, pc, r1
    1580:	add	r2, pc, r2
    1584:	bl	11e8 <g_signal_connect_data@plt>
    1588:	mov	r2, #0
    158c:	ldr	r1, [pc, #480]	; 1774 <main@@Base+0x460>
    1590:	str	r2, [sp]
    1594:	mov	r3, r2
    1598:	str	r2, [sp, #4]
    159c:	mov	r0, r7
    15a0:	ldr	r2, [pc, #464]	; 1778 <main@@Base+0x464>
    15a4:	add	r1, pc, r1
    15a8:	add	r2, pc, r2
    15ac:	bl	11e8 <g_signal_connect_data@plt>
    15b0:	ldr	r2, [pc, #452]	; 177c <main@@Base+0x468>
    15b4:	mov	r1, #0
    15b8:	mov	r0, r7
    15bc:	mov	r3, r1
    15c0:	add	r2, pc, r2
    15c4:	bl	11d0 <pk_control_get_properties_async@plt>
    15c8:	bl	120c <pk_transaction_list_new@plt>
    15cc:	mov	r2, #0
    15d0:	ldr	r1, [pc, #424]	; 1780 <main@@Base+0x46c>
    15d4:	str	r2, [sp]
    15d8:	mov	r3, r2
    15dc:	str	r2, [sp, #4]
    15e0:	add	r1, pc, r1
    15e4:	ldr	r2, [pc, #408]	; 1784 <main@@Base+0x470>
    15e8:	mov	r8, r0
    15ec:	add	r2, pc, r2
    15f0:	bl	11e8 <g_signal_connect_data@plt>
    15f4:	mov	r2, #0
    15f8:	ldr	r1, [pc, #392]	; 1788 <main@@Base+0x474>
    15fc:	str	r2, [sp]
    1600:	mov	r3, r2
    1604:	str	r2, [sp, #4]
    1608:	mov	r0, r8
    160c:	ldr	r2, [pc, #376]	; 178c <main@@Base+0x478>
    1610:	add	r1, pc, r1
    1614:	add	r2, pc, r2
    1618:	bl	11e8 <g_signal_connect_data@plt>
    161c:	bl	114c <pk_client_new@plt>
    1620:	ldr	r3, [pc, #360]	; 1790 <main@@Base+0x47c>
    1624:	add	r3, pc, r3
    1628:	str	r0, [r3]
    162c:	mov	r0, r8
    1630:	bl	10e0 <pk_transaction_list_get_ids@plt>
    1634:	ldr	r3, [r0]
    1638:	mov	sl, r0
    163c:	cmp	r3, #0
    1640:	beq	1674 <main@@Base+0x360>
    1644:	ldr	r5, [pc, #328]	; 1794 <main@@Base+0x480>
    1648:	mov	r4, r0
    164c:	ldr	r6, [pc, #324]	; 1798 <main@@Base+0x484>
    1650:	add	r5, pc, r5
    1654:	add	r6, pc, r6
    1658:	mov	r0, r5
    165c:	mov	r1, #16
    1660:	mov	r2, r6
    1664:	bl	12cc <g_log@plt>
    1668:	ldr	r3, [r4, #4]!
    166c:	cmp	r3, #0
    1670:	bne	1658 <main@@Base+0x344>
    1674:	mov	r0, sl
    1678:	bl	1284 <g_strfreev@plt>
    167c:	mov	r0, r8
    1680:	bl	199c <main@@Base+0x688>
    1684:	bl	10f8 <pk_debug_is_verbose@plt>
    1688:	cmp	r0, #0
    168c:	beq	16a8 <main@@Base+0x394>
    1690:	ldr	r2, [pc, #260]	; 179c <main@@Base+0x488>
    1694:	mov	r1, #0
    1698:	mov	r0, r7
    169c:	mov	r3, r1
    16a0:	add	r2, pc, r2
    16a4:	bl	1224 <pk_control_get_daemon_state_async@plt>
    16a8:	mov	r0, fp
    16ac:	bl	12a8 <g_main_loop_run@plt>
    16b0:	b	1468 <main@@Base+0x154>
    16b4:	bl	11f4 <__stack_chk_fail@plt>
    16b8:	mov	r4, r0
    16bc:	cmp	r7, #0
    16c0:	beq	16cc <main@@Base+0x3b8>
    16c4:	mov	r0, r7
    16c8:	bl	10d4 <g_object_unref@plt>
    16cc:	mov	r0, r4
    16d0:	bl	12b4 <_Unwind_Resume@plt>
    16d4:	mov	r4, r0
    16d8:	mov	r7, #0
    16dc:	b	16bc <main@@Base+0x3a8>
    16e0:	b	16d4 <main@@Base+0x3c0>
    16e4:	cmp	r8, #0
    16e8:	mov	r4, r0
    16ec:	beq	16bc <main@@Base+0x3a8>
    16f0:	mov	r0, r8
    16f4:	bl	10d4 <g_object_unref@plt>
    16f8:	b	16bc <main@@Base+0x3a8>
    16fc:	b	16d4 <main@@Base+0x3c0>
    1700:	b	16b8 <main@@Base+0x3a4>
    1704:	b	16d4 <main@@Base+0x3c0>
    1708:	b	16d4 <main@@Base+0x3c0>
    170c:	b	16d4 <main@@Base+0x3c0>
    1710:	b	16d4 <main@@Base+0x3c0>
    1714:	b	16d4 <main@@Base+0x3c0>
    1718:	b	16d4 <main@@Base+0x3c0>
    171c:	b	16d4 <main@@Base+0x3c0>
    1720:	ldrdeq	r1, [r1], -r4
    1724:	andeq	r0, r0, r8, lsl #2
    1728:	ldrdeq	r1, [r0], -r0
    172c:	andeq	r1, r0, r4, lsr #10
    1730:	andeq	r1, r0, r8, lsl r5
    1734:	andeq	r1, r0, ip, asr r2
    1738:	ldrdeq	r1, [r0], -ip
    173c:	andeq	r1, r0, r0, ror #9
    1740:	andeq	r1, r0, r0, asr #9
    1744:	andeq	r1, r0, r4, ror r4
    1748:	andeq	r1, r1, r8, lsr #25
    174c:	andeq	r1, r0, r0, lsl #8
    1750:	andeq	r0, r0, r4, lsr #9
    1754:	andeq	r1, r0, r4, ror #7
    1758:	andeq	r0, r0, ip, ror #8
    175c:	andeq	r1, r0, ip, asr #7
    1760:	andeq	r0, r0, ip, ror #31
    1764:	andeq	r1, r0, r0, asr #7
    1768:	andeq	r0, r0, r8, lsl #12
    176c:	andeq	r1, r0, r8, lsr #7
    1770:	andeq	r0, r0, r0, ror r5
    1774:	muleq	r0, r4, r3
    1778:	strdeq	r0, [r0], -ip
    177c:	andeq	r0, r0, r0, lsr #26
    1780:	andeq	r1, r0, r0, ror r3
    1784:	andeq	r0, r0, r0, lsl #9
    1788:	andeq	r1, r0, r8, asr #6
    178c:	andeq	r0, r0, r0, lsr #8
    1790:	strdeq	r1, [r1], -r0
    1794:	andeq	r0, r0, r0, asr #31
    1798:	andeq	r1, r0, ip, lsl #6
    179c:	andeq	r0, r0, ip, ror sp
    17a0:	mov	fp, #0
    17a4:	mov	lr, #0
    17a8:	pop	{r1}		; (ldr r1, [sp], #4)
    17ac:	mov	r2, sp
    17b0:	push	{r2}		; (str r2, [sp, #-4]!)
    17b4:	push	{r0}		; (str r0, [sp, #-4]!)
    17b8:	ldr	sl, [pc, #40]	; 17e8 <main@@Base+0x4d4>
    17bc:	add	r3, pc, #36	; 0x24
    17c0:	add	sl, sl, r3
    17c4:	ldr	ip, [pc, #32]	; 17ec <main@@Base+0x4d8>
    17c8:	ldr	ip, [sl, ip]
    17cc:	push	{ip}		; (str ip, [sp, #-4]!)
    17d0:	ldr	r3, [pc, #24]	; 17f0 <main@@Base+0x4dc>
    17d4:	ldr	r3, [sl, r3]
    17d8:	ldr	r0, [pc, #20]	; 17f4 <main@@Base+0x4e0>
    17dc:	ldr	r0, [sl, r0]
    17e0:	bl	10a4 <__libc_start_main@plt>
    17e4:	bl	1080 <abort@plt>
    17e8:	andeq	r1, r1, r8, lsl r8
    17ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    17f0:	andeq	r0, r0, r4, lsl #2
    17f4:	andeq	r0, r0, r0, lsl r1
    17f8:	ldr	r3, [pc, #20]	; 1814 <main@@Base+0x500>
    17fc:	ldr	r2, [pc, #20]	; 1818 <main@@Base+0x504>
    1800:	add	r3, pc, r3
    1804:	ldr	r2, [r3, r2]
    1808:	cmp	r2, #0
    180c:	bxeq	lr
    1810:	b	10c8 <__gmon_start__@plt>
    1814:	strdeq	r1, [r1], -r8
    1818:	strdeq	r0, [r0], -r4
    181c:	ldr	r2, [pc, #60]	; 1860 <main@@Base+0x54c>
    1820:	ldr	r0, [pc, #60]	; 1864 <main@@Base+0x550>
    1824:	add	r2, pc, r2
    1828:	add	r0, pc, r0
    182c:	add	r2, r2, #3
    1830:	rsb	r2, r0, r2
    1834:	push	{r3, lr}
    1838:	cmp	r2, #6
    183c:	ldr	r3, [pc, #36]	; 1868 <main@@Base+0x554>
    1840:	add	r3, pc, r3
    1844:	popls	{r3, pc}
    1848:	ldr	r2, [pc, #28]	; 186c <main@@Base+0x558>
    184c:	ldr	r3, [r3, r2]
    1850:	cmp	r3, #0
    1854:	popeq	{r3, pc}
    1858:	blx	r3
    185c:	pop	{r3, pc}
    1860:	andeq	r1, r1, ip, ror #17
    1864:	andeq	r1, r1, r8, ror #17
    1868:			; <UNDEFINED> instruction: 0x000117b8
    186c:	strdeq	r0, [r0], -ip
    1870:	push	{r3, lr}
    1874:	ldr	r0, [pc, #64]	; 18bc <main@@Base+0x5a8>
    1878:	ldr	r3, [pc, #64]	; 18c0 <main@@Base+0x5ac>
    187c:	add	r0, pc, r0
    1880:	ldr	r2, [pc, #60]	; 18c4 <main@@Base+0x5b0>
    1884:	add	r3, pc, r3
    1888:	rsb	r3, r0, r3
    188c:	add	r2, pc, r2
    1890:	asr	r3, r3, #2
    1894:	add	r3, r3, r3, lsr #31
    1898:	asrs	r3, r3, #1
    189c:	popeq	{r3, pc}
    18a0:	ldr	r1, [pc, #32]	; 18c8 <main@@Base+0x5b4>
    18a4:	ldr	r2, [r2, r1]
    18a8:	cmp	r2, #0
    18ac:	popeq	{r3, pc}
    18b0:	mov	r1, r3
    18b4:	blx	r2
    18b8:	pop	{r3, pc}
    18bc:	muleq	r1, r4, r8
    18c0:	andeq	r1, r1, ip, lsl #17
    18c4:	andeq	r1, r1, ip, ror #14
    18c8:	andeq	r0, r0, r0, lsl #2
    18cc:	ldr	r2, [pc, #76]	; 1920 <main@@Base+0x60c>
    18d0:	push	{r3, lr}
    18d4:	add	r2, pc, r2
    18d8:	ldr	r3, [pc, #68]	; 1924 <main@@Base+0x610>
    18dc:	ldrb	r2, [r2]
    18e0:	add	r3, pc, r3
    18e4:	cmp	r2, #0
    18e8:	popne	{r3, pc}
    18ec:	ldr	r2, [pc, #52]	; 1928 <main@@Base+0x614>
    18f0:	ldr	r3, [r3, r2]
    18f4:	cmp	r3, #0
    18f8:	beq	1908 <main@@Base+0x5f4>
    18fc:	ldr	r0, [pc, #40]	; 192c <main@@Base+0x618>
    1900:	add	r0, pc, r0
    1904:	bl	12f0 <__cxa_finalize@plt>
    1908:	bl	181c <main@@Base+0x508>
    190c:	ldr	r3, [pc, #28]	; 1930 <main@@Base+0x61c>
    1910:	mov	r2, #1
    1914:	add	r3, pc, r3
    1918:	strb	r2, [r3]
    191c:	pop	{r3, pc}
    1920:	andeq	r1, r1, ip, lsr r8
    1924:	andeq	r1, r1, r8, lsl r7
    1928:	andeq	r0, r0, ip, lsl #2
    192c:	andeq	r1, r1, ip, asr #11
    1930:	strdeq	r1, [r1], -ip
    1934:	ldr	r0, [pc, #52]	; 1970 <main@@Base+0x65c>
    1938:	push	{r3, lr}
    193c:	add	r0, pc, r0
    1940:	ldr	r3, [pc, #44]	; 1974 <main@@Base+0x660>
    1944:	ldr	r2, [r0]
    1948:	add	r3, pc, r3
    194c:	cmp	r2, #0
    1950:	beq	1968 <main@@Base+0x654>
    1954:	ldr	r2, [pc, #28]	; 1978 <main@@Base+0x664>
    1958:	ldr	r3, [r3, r2]
    195c:	cmp	r3, #0
    1960:	beq	1968 <main@@Base+0x654>
    1964:	blx	r3
    1968:	pop	{r3, lr}
    196c:	b	1870 <main@@Base+0x55c>
    1970:	andeq	r1, r1, ip, lsl #11
    1974:			; <UNDEFINED> instruction: 0x000116b0
    1978:	strdeq	r0, [r0], -r8
    197c:	ldr	r0, [pc, #4]	; 1988 <main@@Base+0x674>
    1980:	add	r0, pc, r0
    1984:	b	10b0 <g_print@plt>
    1988:	andeq	r0, r0, r4, asr #24
    198c:	ldr	r0, [pc, #4]	; 1998 <main@@Base+0x684>
    1990:	add	r0, pc, r0
    1994:	b	10b0 <g_print@plt>
    1998:	andeq	r0, r0, r8, asr #24
    199c:	push	{r3, r4, r5, r6, r7, lr}
    19a0:	bl	10e0 <pk_transaction_list_get_ids@plt>
    19a4:	mov	r7, r0
    19a8:	ldr	r0, [pc, #128]	; 1a30 <main@@Base+0x71c>
    19ac:	add	r0, pc, r0
    19b0:	bl	10b0 <g_print@plt>
    19b4:	ldr	r3, [r7]
    19b8:	cmp	r3, #0
    19bc:	beq	19fc <main@@Base+0x6e8>
    19c0:	ldr	r6, [pc, #108]	; 1a34 <main@@Base+0x720>
    19c4:	sub	r5, r7, #4
    19c8:	mov	r4, #0
    19cc:	add	r6, pc, r6
    19d0:	b	19e4 <main@@Base+0x6d0>
    19d4:	add	r4, r4, #1
    19d8:	mov	r0, r6
    19dc:	mov	r1, r4
    19e0:	bl	10b0 <g_print@plt>
    19e4:	ldr	r2, [r5, #4]!
    19e8:	cmp	r2, #0
    19ec:	bne	19d4 <main@@Base+0x6c0>
    19f0:	mov	r0, r7
    19f4:	pop	{r3, r4, r5, r6, r7, lr}
    19f8:	b	1284 <g_strfreev@plt>
    19fc:	ldr	r0, [pc, #52]	; 1a38 <main@@Base+0x724>
    1a00:	add	r0, pc, r0
    1a04:	bl	10b0 <g_print@plt>
    1a08:	b	19f0 <main@@Base+0x6dc>
    1a0c:	mov	r4, r0
    1a10:	mov	r0, r7
    1a14:	bl	1284 <g_strfreev@plt>
    1a18:	mov	r0, r4
    1a1c:	bl	12b4 <_Unwind_Resume@plt>
    1a20:	cmp	r7, #0
    1a24:	mov	r4, r0
    1a28:	bne	1a10 <main@@Base+0x6fc>
    1a2c:	b	1a18 <main@@Base+0x704>
    1a30:	andeq	r0, r0, r0, asr #24
    1a34:	andeq	r0, r0, ip, lsr ip
    1a38:	strdeq	r0, [r0], -ip
    1a3c:	push	{r4, lr}
    1a40:	mov	r4, r0
    1a44:	ldr	r2, [pc, #32]	; 1a6c <main@@Base+0x758>
    1a48:	mov	r3, r1
    1a4c:	ldr	r0, [pc, #28]	; 1a70 <main@@Base+0x75c>
    1a50:	mov	r1, #128	; 0x80
    1a54:	add	r2, pc, r2
    1a58:	add	r0, pc, r0
    1a5c:	bl	12cc <g_log@plt>
    1a60:	mov	r0, r4
    1a64:	pop	{r4, lr}
    1a68:	b	199c <main@@Base+0x688>
    1a6c:	andeq	r0, r0, r8, asr #23
    1a70:			; <UNDEFINED> instruction: 0x00000bb8
    1a74:	push	{r4, r5, r6, lr}
    1a78:	mov	r4, r2
    1a7c:	mov	r6, r0
    1a80:	ldr	r2, [pc, #92]	; 1ae4 <main@@Base+0x7d0>
    1a84:	ldr	r0, [pc, #92]	; 1ae8 <main@@Base+0x7d4>
    1a88:	sub	sp, sp, #16
    1a8c:	mov	r5, r1
    1a90:	mov	r3, r1
    1a94:	add	r0, pc, r0
    1a98:	mov	r1, #128	; 0x80
    1a9c:	add	r2, pc, r2
    1aa0:	bl	12cc <g_log@plt>
    1aa4:	ldr	r0, [pc, #64]	; 1aec <main@@Base+0x7d8>
    1aa8:	ldr	r3, [pc, #64]	; 1af0 <main@@Base+0x7dc>
    1aac:	mov	r1, r5
    1ab0:	add	r0, pc, r0
    1ab4:	str	r4, [sp]
    1ab8:	add	r3, pc, r3
    1abc:	mov	r2, #0
    1ac0:	ldr	r0, [r0]
    1ac4:	stmib	sp, {r3, r4}
    1ac8:	ldr	r3, [pc, #36]	; 1af4 <main@@Base+0x7e0>
    1acc:	add	r3, pc, r3
    1ad0:	bl	12e4 <pk_client_adopt_async@plt>
    1ad4:	mov	r0, r6
    1ad8:	add	sp, sp, #16
    1adc:	pop	{r4, r5, r6, lr}
    1ae0:	b	199c <main@@Base+0x688>
    1ae4:	andeq	r0, r0, ip, lsl #23
    1ae8:	andeq	r0, r0, ip, ror fp
    1aec:	andeq	r1, r1, r4, ror #12
    1af0:	andeq	r0, r0, r0, lsl r2
    1af4:	muleq	r0, r4, r4
    1af8:	ldr	ip, [pc, #88]	; 1b58 <main@@Base+0x844>
    1afc:	mov	r3, #0
    1b00:	push	{r4, lr}
    1b04:	add	ip, pc, ip
    1b08:	ldr	lr, [pc, #76]	; 1b5c <main@@Base+0x848>
    1b0c:	sub	sp, sp, #8
    1b10:	ldr	r1, [pc, #72]	; 1b60 <main@@Base+0x84c>
    1b14:	mov	r2, sp
    1b18:	ldr	r4, [ip, lr]
    1b1c:	add	r1, pc, r1
    1b20:	ldr	ip, [r4]
    1b24:	str	ip, [sp, #4]
    1b28:	bl	11a0 <g_object_get@plt>
    1b2c:	ldr	r0, [pc, #48]	; 1b64 <main@@Base+0x850>
    1b30:	ldr	r1, [sp]
    1b34:	add	r0, pc, r0
    1b38:	bl	10b0 <g_print@plt>
    1b3c:	ldr	r2, [sp, #4]
    1b40:	ldr	r3, [r4]
    1b44:	cmp	r2, r3
    1b48:	bne	1b54 <main@@Base+0x840>
    1b4c:	add	sp, sp, #8
    1b50:	pop	{r4, pc}
    1b54:	bl	11f4 <__stack_chk_fail@plt>
    1b58:	strdeq	r1, [r1], -r4
    1b5c:	andeq	r0, r0, r8, lsl #2
    1b60:	andeq	r0, r0, r0, lsl lr
    1b64:	andeq	r0, r0, r0, lsl #22
    1b68:	ldr	ip, [pc, #88]	; 1bc8 <main@@Base+0x8b4>
    1b6c:	mov	r3, #0
    1b70:	push	{r4, lr}
    1b74:	add	ip, pc, ip
    1b78:	ldr	lr, [pc, #76]	; 1bcc <main@@Base+0x8b8>
    1b7c:	sub	sp, sp, #8
    1b80:	ldr	r1, [pc, #72]	; 1bd0 <main@@Base+0x8bc>
    1b84:	mov	r2, sp
    1b88:	ldr	r4, [ip, lr]
    1b8c:	add	r1, pc, r1
    1b90:	ldr	ip, [r4]
    1b94:	str	ip, [sp, #4]
    1b98:	bl	11a0 <g_object_get@plt>
    1b9c:	ldr	r0, [pc, #48]	; 1bd4 <main@@Base+0x8c0>
    1ba0:	ldr	r1, [sp]
    1ba4:	add	r0, pc, r0
    1ba8:	bl	10b0 <g_print@plt>
    1bac:	ldr	r2, [sp, #4]
    1bb0:	ldr	r3, [r4]
    1bb4:	cmp	r2, r3
    1bb8:	bne	1bc4 <main@@Base+0x8b0>
    1bbc:	add	sp, sp, #8
    1bc0:	pop	{r4, pc}
    1bc4:	bl	11f4 <__stack_chk_fail@plt>
    1bc8:	andeq	r1, r1, r4, lsl #9
    1bcc:	andeq	r0, r0, r8, lsl #2
    1bd0:	muleq	r0, r0, sp
    1bd4:	andeq	r0, r0, r8, lsr #21
    1bd8:	ldr	r3, [pc, #216]	; 1cb8 <main@@Base+0x9a4>
    1bdc:	mov	ip, #0
    1be0:	ldr	r2, [pc, #212]	; 1cbc <main@@Base+0x9a8>
    1be4:	add	r3, pc, r3
    1be8:	push	{r4, r5, lr}
    1bec:	sub	sp, sp, #36	; 0x24
    1bf0:	ldr	r4, [r3, r2]
    1bf4:	mov	r5, r1
    1bf8:	ldr	lr, [pc, #192]	; 1cc0 <main@@Base+0x9ac>
    1bfc:	add	r3, sp, #20
    1c00:	ldr	r1, [pc, #188]	; 1cc4 <main@@Base+0x9b0>
    1c04:	add	r2, sp, #16
    1c08:	add	lr, pc, lr
    1c0c:	str	ip, [sp, #12]
    1c10:	str	lr, [sp, #4]
    1c14:	add	r1, pc, r1
    1c18:	ldr	lr, [r4]
    1c1c:	str	r3, [sp]
    1c20:	add	r3, sp, #24
    1c24:	str	r3, [sp, #8]
    1c28:	ldr	r3, [pc, #152]	; 1cc8 <main@@Base+0x9b4>
    1c2c:	str	lr, [sp, #28]
    1c30:	add	r3, pc, r3
    1c34:	str	ip, [sp, #20]
    1c38:	str	ip, [sp, #24]
    1c3c:	bl	11a0 <g_object_get@plt>
    1c40:	ldr	r0, [sp, #16]
    1c44:	bl	129c <pk_media_type_enum_to_string@plt>
    1c48:	ldr	ip, [sp, #24]
    1c4c:	mov	r2, r0
    1c50:	ldr	r0, [pc, #116]	; 1ccc <main@@Base+0x9b8>
    1c54:	mov	r1, r5
    1c58:	ldr	r3, [sp, #20]
    1c5c:	add	r0, pc, r0
    1c60:	str	ip, [sp]
    1c64:	bl	10b0 <g_print@plt>
    1c68:	ldr	r0, [sp, #24]
    1c6c:	bl	1074 <g_free@plt>
    1c70:	ldr	r0, [sp, #20]
    1c74:	bl	1074 <g_free@plt>
    1c78:	ldr	r2, [sp, #28]
    1c7c:	ldr	r3, [r4]
    1c80:	cmp	r2, r3
    1c84:	bne	1c90 <main@@Base+0x97c>
    1c88:	add	sp, sp, #36	; 0x24
    1c8c:	pop	{r4, r5, pc}
    1c90:	bl	11f4 <__stack_chk_fail@plt>
    1c94:	mov	r4, r0
    1c98:	ldr	r0, [sp, #20]
    1c9c:	bl	1074 <g_free@plt>
    1ca0:	mov	r0, r4
    1ca4:	bl	12b4 <_Unwind_Resume@plt>
    1ca8:	mov	r4, r0
    1cac:	ldr	r0, [sp, #24]
    1cb0:	bl	1074 <g_free@plt>
    1cb4:	b	1c98 <main@@Base+0x984>
    1cb8:	andeq	r1, r1, r4, lsl r4
    1cbc:	andeq	r0, r0, r8, lsl #2
    1cc0:	andeq	r0, r0, r0, ror sl
    1cc4:	andeq	r0, r0, ip, asr #20
    1cc8:	andeq	r0, r0, ip, lsr sl
    1ccc:	andeq	r0, r0, r8, lsr #20
    1cd0:	ldr	r0, [pc, #616]	; 1f40 <main@@Base+0xc2c>
    1cd4:	mov	r3, #0
    1cd8:	push	{r4, r5, r6, r7, r8, r9, lr}
    1cdc:	add	r0, pc, r0
    1ce0:	ldr	lr, [pc, #604]	; 1f44 <main@@Base+0xc30>
    1ce4:	sub	sp, sp, #20
    1ce8:	ldr	ip, [pc, #600]	; 1f48 <main@@Base+0xc34>
    1cec:	mov	r2, sp
    1cf0:	ldr	r6, [r0, lr]
    1cf4:	add	ip, pc, ip
    1cf8:	str	r3, [sp]
    1cfc:	ldr	r0, [ip]
    1d00:	ldr	ip, [r6]
    1d04:	str	r3, [sp, #4]
    1d08:	str	r3, [sp, #8]
    1d0c:	str	ip, [sp, #12]
    1d10:	bl	1248 <pk_client_generic_finish@plt>
    1d14:	subs	r4, r0, #0
    1d18:	beq	1e30 <main@@Base+0xb1c>
    1d1c:	ldr	r1, [pc, #552]	; 1f4c <main@@Base+0xc38>
    1d20:	add	r2, sp, #8
    1d24:	mov	r3, #0
    1d28:	add	r1, pc, r1
    1d2c:	bl	11a0 <g_object_get@plt>
    1d30:	ldr	r1, [pc, #536]	; 1f50 <main@@Base+0xc3c>
    1d34:	add	r2, sp, #4
    1d38:	ldr	r0, [sp, #8]
    1d3c:	mov	r3, #0
    1d40:	add	r1, pc, r1
    1d44:	bl	11a0 <g_object_get@plt>
    1d48:	mov	r0, r4
    1d4c:	bl	123c <pk_results_get_exit_code@plt>
    1d50:	ldr	r5, [sp, #4]
    1d54:	bl	1218 <pk_exit_enum_to_string@plt>
    1d58:	mov	r2, r0
    1d5c:	ldr	r0, [pc, #496]	; 1f54 <main@@Base+0xc40>
    1d60:	mov	r1, r5
    1d64:	add	r0, pc, r0
    1d68:	bl	10b0 <g_print@plt>
    1d6c:	mov	r0, r4
    1d70:	bl	12fc <pk_results_get_media_change_required_array@plt>
    1d74:	ldr	r1, [pc, #476]	; 1f58 <main@@Base+0xc44>
    1d78:	mov	r7, r0
    1d7c:	ldr	r2, [sp, #4]
    1d80:	add	r1, pc, r1
    1d84:	bl	10ec <g_ptr_array_foreach@plt>
    1d88:	mov	r0, r4
    1d8c:	bl	1068 <pk_results_get_error_code@plt>
    1d90:	subs	r5, r0, #0
    1d94:	beq	1dc8 <main@@Base+0xab4>
    1d98:	ldr	r9, [sp, #4]
    1d9c:	bl	1140 <pk_error_get_code@plt>
    1da0:	bl	1134 <pk_error_enum_to_string@plt>
    1da4:	mov	r8, r0
    1da8:	mov	r0, r5
    1dac:	bl	11dc <pk_error_get_details@plt>
    1db0:	mov	r3, r0
    1db4:	ldr	r0, [pc, #416]	; 1f5c <main@@Base+0xc48>
    1db8:	mov	r1, r9
    1dbc:	mov	r2, r8
    1dc0:	add	r0, pc, r0
    1dc4:	bl	10b0 <g_print@plt>
    1dc8:	cmp	r7, #0
    1dcc:	beq	1dd8 <main@@Base+0xac4>
    1dd0:	mov	r0, r7
    1dd4:	bl	1290 <g_ptr_array_unref@plt>
    1dd8:	mov	r0, r4
    1ddc:	bl	10d4 <g_object_unref@plt>
    1de0:	ldr	r0, [sp, #8]
    1de4:	cmp	r0, #0
    1de8:	beq	1df0 <main@@Base+0xadc>
    1dec:	bl	10d4 <g_object_unref@plt>
    1df0:	cmp	r5, #0
    1df4:	beq	1e00 <main@@Base+0xaec>
    1df8:	mov	r0, r5
    1dfc:	bl	10d4 <g_object_unref@plt>
    1e00:	ldr	r0, [sp, #4]
    1e04:	bl	1074 <g_free@plt>
    1e08:	ldr	r0, [sp]
    1e0c:	cmp	r0, #0
    1e10:	beq	1e18 <main@@Base+0xb04>
    1e14:	bl	1278 <g_error_free@plt>
    1e18:	ldr	r2, [sp, #12]
    1e1c:	ldr	r3, [r6]
    1e20:	cmp	r2, r3
    1e24:	bne	1e64 <main@@Base+0xb50>
    1e28:	add	sp, sp, #20
    1e2c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1e30:	ldr	r3, [sp]
    1e34:	mov	r1, #16
    1e38:	ldr	r0, [pc, #288]	; 1f60 <main@@Base+0xc4c>
    1e3c:	ldr	r2, [pc, #288]	; 1f64 <main@@Base+0xc50>
    1e40:	add	r0, pc, r0
    1e44:	ldr	r3, [r3, #8]
    1e48:	add	r2, pc, r2
    1e4c:	bl	12cc <g_log@plt>
    1e50:	ldr	r0, [sp, #8]
    1e54:	cmp	r0, #0
    1e58:	beq	1e00 <main@@Base+0xaec>
    1e5c:	bl	10d4 <g_object_unref@plt>
    1e60:	b	1e00 <main@@Base+0xaec>
    1e64:	bl	11f4 <__stack_chk_fail@plt>
    1e68:	mov	r4, r0
    1e6c:	ldr	r0, [sp, #4]
    1e70:	bl	1074 <g_free@plt>
    1e74:	ldr	r0, [sp]
    1e78:	cmp	r0, #0
    1e7c:	beq	1e84 <main@@Base+0xb70>
    1e80:	bl	1278 <g_error_free@plt>
    1e84:	mov	r0, r4
    1e88:	bl	12b4 <_Unwind_Resume@plt>
    1e8c:	mov	r6, r0
    1e90:	mov	r5, #0
    1e94:	cmp	r4, #0
    1e98:	beq	1ea4 <main@@Base+0xb90>
    1e9c:	mov	r0, r4
    1ea0:	bl	10d4 <g_object_unref@plt>
    1ea4:	mov	r4, r6
    1ea8:	ldr	r0, [sp, #8]
    1eac:	cmp	r0, #0
    1eb0:	beq	1eb8 <main@@Base+0xba4>
    1eb4:	bl	10d4 <g_object_unref@plt>
    1eb8:	cmp	r5, #0
    1ebc:	beq	1e6c <main@@Base+0xb58>
    1ec0:	mov	r0, r5
    1ec4:	bl	10d4 <g_object_unref@plt>
    1ec8:	b	1e6c <main@@Base+0xb58>
    1ecc:	mov	r6, r0
    1ed0:	mov	r5, #0
    1ed4:	cmp	r7, #0
    1ed8:	beq	1e94 <main@@Base+0xb80>
    1edc:	mov	r0, r7
    1ee0:	bl	1290 <g_ptr_array_unref@plt>
    1ee4:	b	1e94 <main@@Base+0xb80>
    1ee8:	b	1ecc <main@@Base+0xbb8>
    1eec:	b	1e8c <main@@Base+0xb78>
    1ef0:	b	1e8c <main@@Base+0xb78>
    1ef4:	b	1e8c <main@@Base+0xb78>
    1ef8:	b	1e8c <main@@Base+0xb78>
    1efc:	b	1e8c <main@@Base+0xb78>
    1f00:	b	1e8c <main@@Base+0xb78>
    1f04:	mov	r4, r0
    1f08:	b	1eb8 <main@@Base+0xba4>
    1f0c:	mov	r4, r0
    1f10:	b	1ea8 <main@@Base+0xb94>
    1f14:	mov	r6, r0
    1f18:	b	1e9c <main@@Base+0xb88>
    1f1c:	mov	r6, r0
    1f20:	b	1ed4 <main@@Base+0xbc0>
    1f24:	mov	r4, r0
    1f28:	b	1e74 <main@@Base+0xb60>
    1f2c:	b	1e68 <main@@Base+0xb54>
    1f30:	mov	r5, #0
    1f34:	mov	r6, r0
    1f38:	mov	r4, r5
    1f3c:	b	1e94 <main@@Base+0xb80>
    1f40:	andeq	r1, r1, ip, lsl r3
    1f44:	andeq	r0, r0, r8, lsl #2
    1f48:	andeq	r1, r1, r0, lsr #8
    1f4c:	muleq	r0, r8, r9
    1f50:	andeq	r0, r0, ip, lsl #19
    1f54:	andeq	r0, r0, r8, ror r9
    1f58:			; <UNDEFINED> instruction: 0xfffffe50
    1f5c:	andeq	r0, r0, r0, lsr r9
    1f60:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1f64:	andeq	r0, r0, r4, ror #16
    1f68:	ldr	r3, [pc, #808]	; 2298 <main@@Base+0xf84>
    1f6c:	mov	ip, #0
    1f70:	ldr	r2, [pc, #804]	; 229c <main@@Base+0xf88>
    1f74:	add	r3, pc, r3
    1f78:	push	{r4, r5, r6, r7, r8, lr}
    1f7c:	mov	r4, r1
    1f80:	ldr	r5, [r3, r2]
    1f84:	sub	sp, sp, #104	; 0x68
    1f88:	ldr	r1, [pc, #784]	; 22a0 <main@@Base+0xf8c>
    1f8c:	ldr	r3, [pc, #784]	; 22a4 <main@@Base+0xf90>
    1f90:	ldr	lr, [r5]
    1f94:	add	r1, pc, r1
    1f98:	add	r3, pc, r3
    1f9c:	ldr	r8, [pc, #772]	; 22a8 <main@@Base+0xf94>
    1fa0:	ldr	r7, [pc, #772]	; 22ac <main@@Base+0xf98>
    1fa4:	ldr	r6, [pc, #772]	; 22b0 <main@@Base+0xf9c>
    1fa8:	add	r8, pc, r8
    1fac:	ldr	r2, [pc, #768]	; 22b4 <main@@Base+0xfa0>
    1fb0:	add	r7, pc, r7
    1fb4:	str	r1, [sp, #28]
    1fb8:	add	r6, pc, r6
    1fbc:	str	r3, [sp, #44]	; 0x2c
    1fc0:	add	r3, sp, #60	; 0x3c
    1fc4:	ldr	r1, [pc, #748]	; 22b8 <main@@Base+0xfa4>
    1fc8:	add	r2, pc, r2
    1fcc:	str	r3, [sp]
    1fd0:	add	r3, sp, #68	; 0x44
    1fd4:	str	r3, [sp, #8]
    1fd8:	add	r3, sp, #72	; 0x48
    1fdc:	str	r3, [sp, #16]
    1fe0:	add	r3, sp, #96	; 0x60
    1fe4:	str	r3, [sp, #24]
    1fe8:	add	r3, sp, #92	; 0x5c
    1fec:	str	r3, [sp, #32]
    1ff0:	add	r3, sp, #76	; 0x4c
    1ff4:	str	r3, [sp, #40]	; 0x28
    1ff8:	add	r3, sp, #88	; 0x58
    1ffc:	str	r3, [sp, #48]	; 0x30
    2000:	add	r1, pc, r1
    2004:	ldr	r3, [pc, #688]	; 22bc <main@@Base+0xfa8>
    2008:	str	r2, [sp, #36]	; 0x24
    200c:	add	r2, sp, #56	; 0x38
    2010:	str	r8, [sp, #4]
    2014:	add	r3, pc, r3
    2018:	str	r7, [sp, #12]
    201c:	str	r6, [sp, #20]
    2020:	str	ip, [sp, #52]	; 0x34
    2024:	str	lr, [sp, #100]	; 0x64
    2028:	str	ip, [sp, #76]	; 0x4c
    202c:	str	ip, [sp, #80]	; 0x50
    2030:	str	ip, [sp, #84]	; 0x54
    2034:	str	ip, [sp, #88]	; 0x58
    2038:	str	ip, [sp, #92]	; 0x5c
    203c:	str	ip, [sp, #96]	; 0x60
    2040:	bl	11a0 <g_object_get@plt>
    2044:	ldr	r6, [sp, #88]	; 0x58
    2048:	cmp	r6, #0
    204c:	beq	2088 <main@@Base+0xd74>
    2050:	cmp	r4, #5
    2054:	beq	2168 <main@@Base+0xe54>
    2058:	cmp	r4, #0
    205c:	beq	20e0 <main@@Base+0xdcc>
    2060:	cmp	r4, #12
    2064:	beq	20f8 <main@@Base+0xde4>
    2068:	cmp	r4, #2
    206c:	beq	2188 <main@@Base+0xe74>
    2070:	cmp	r4, #3
    2074:	beq	21a0 <main@@Base+0xe8c>
    2078:	cmp	r4, #4
    207c:	beq	21fc <main@@Base+0xee8>
    2080:	cmp	r4, #13
    2084:	beq	21b8 <main@@Base+0xea4>
    2088:	ldr	r0, [sp, #96]	; 0x60
    208c:	cmp	r0, #0
    2090:	beq	2098 <main@@Base+0xd84>
    2094:	bl	10d4 <g_object_unref@plt>
    2098:	ldr	r0, [sp, #92]	; 0x5c
    209c:	cmp	r0, #0
    20a0:	beq	20a8 <main@@Base+0xd94>
    20a4:	bl	10d4 <g_object_unref@plt>
    20a8:	ldr	r0, [sp, #88]	; 0x58
    20ac:	bl	1074 <g_free@plt>
    20b0:	ldr	r0, [sp, #84]	; 0x54
    20b4:	bl	1074 <g_free@plt>
    20b8:	ldr	r0, [sp, #80]	; 0x50
    20bc:	bl	1074 <g_free@plt>
    20c0:	ldr	r0, [sp, #76]	; 0x4c
    20c4:	bl	1074 <g_free@plt>
    20c8:	ldr	r2, [sp, #100]	; 0x64
    20cc:	ldr	r3, [r5]
    20d0:	cmp	r2, r3
    20d4:	bne	221c <main@@Base+0xf08>
    20d8:	add	sp, sp, #104	; 0x68
    20dc:	pop	{r4, r5, r6, r7, r8, pc}
    20e0:	ldr	r0, [pc, #472]	; 22c0 <main@@Base+0xfac>
    20e4:	mov	r1, r6
    20e8:	ldr	r2, [sp, #76]	; 0x4c
    20ec:	add	r0, pc, r0
    20f0:	bl	10b0 <g_print@plt>
    20f4:	b	2088 <main@@Base+0xd74>
    20f8:	add	r3, sp, #80	; 0x50
    20fc:	add	r1, sp, #84	; 0x54
    2100:	ldr	r2, [pc, #444]	; 22c4 <main@@Base+0xfb0>
    2104:	str	r3, [sp]
    2108:	mov	r3, #0
    210c:	str	r1, [sp, #8]
    2110:	add	r2, pc, r2
    2114:	str	r3, [sp, #12]
    2118:	ldr	r1, [pc, #424]	; 22c8 <main@@Base+0xfb4>
    211c:	ldr	r3, [pc, #424]	; 22cc <main@@Base+0xfb8>
    2120:	str	r2, [sp, #4]
    2124:	add	r1, pc, r1
    2128:	ldr	r0, [sp, #96]	; 0x60
    212c:	add	r2, sp, #64	; 0x40
    2130:	add	r3, pc, r3
    2134:	bl	11a0 <g_object_get@plt>
    2138:	ldr	r0, [sp, #64]	; 0x40
    213c:	ldr	r4, [sp, #88]	; 0x58
    2140:	bl	1098 <pk_info_enum_to_string@plt>
    2144:	ldr	ip, [sp, #84]	; 0x54
    2148:	mov	r2, r0
    214c:	ldr	r0, [pc, #380]	; 22d0 <main@@Base+0xfbc>
    2150:	mov	r1, r4
    2154:	ldr	r3, [sp, #80]	; 0x50
    2158:	add	r0, pc, r0
    215c:	str	ip, [sp]
    2160:	bl	10b0 <g_print@plt>
    2164:	b	2088 <main@@Base+0xd74>
    2168:	ldr	r0, [sp, #56]	; 0x38
    216c:	bl	1260 <pk_role_enum_to_string@plt>
    2170:	mov	r2, r0
    2174:	ldr	r0, [pc, #344]	; 22d4 <main@@Base+0xfc0>
    2178:	mov	r1, r6
    217c:	add	r0, pc, r0
    2180:	bl	10b0 <g_print@plt>
    2184:	b	2088 <main@@Base+0xd74>
    2188:	ldr	r0, [pc, #328]	; 22d8 <main@@Base+0xfc4>
    218c:	mov	r1, r6
    2190:	ldr	r2, [sp, #68]	; 0x44
    2194:	add	r0, pc, r0
    2198:	bl	10b0 <g_print@plt>
    219c:	b	2088 <main@@Base+0xd74>
    21a0:	ldr	r0, [pc, #308]	; 22dc <main@@Base+0xfc8>
    21a4:	mov	r1, r6
    21a8:	ldr	r2, [sp, #72]	; 0x48
    21ac:	add	r0, pc, r0
    21b0:	bl	10b0 <g_print@plt>
    21b4:	b	2088 <main@@Base+0xd74>
    21b8:	ldr	r0, [sp, #92]	; 0x5c
    21bc:	bl	11b8 <pk_item_progress_get_package_id@plt>
    21c0:	mov	r7, r0
    21c4:	ldr	r0, [sp, #92]	; 0x5c
    21c8:	bl	1308 <pk_item_progress_get_percentage@plt>
    21cc:	mov	r4, r0
    21d0:	ldr	r0, [sp, #92]	; 0x5c
    21d4:	bl	1200 <pk_item_progress_get_status@plt>
    21d8:	bl	12d8 <pk_status_enum_to_string@plt>
    21dc:	str	r0, [sp]
    21e0:	mov	r1, r6
    21e4:	ldr	r0, [pc, #244]	; 22e0 <main@@Base+0xfcc>
    21e8:	mov	r2, r7
    21ec:	mov	r3, r4
    21f0:	add	r0, pc, r0
    21f4:	bl	10b0 <g_print@plt>
    21f8:	b	2088 <main@@Base+0xd74>
    21fc:	ldr	r0, [sp, #60]	; 0x3c
    2200:	bl	12d8 <pk_status_enum_to_string@plt>
    2204:	mov	r2, r0
    2208:	ldr	r0, [pc, #212]	; 22e4 <main@@Base+0xfd0>
    220c:	mov	r1, r6
    2210:	add	r0, pc, r0
    2214:	bl	10b0 <g_print@plt>
    2218:	b	2088 <main@@Base+0xd74>
    221c:	bl	11f4 <__stack_chk_fail@plt>
    2220:	ldr	r3, [sp, #96]	; 0x60
    2224:	mov	r4, r0
    2228:	cmp	r3, #0
    222c:	beq	2238 <main@@Base+0xf24>
    2230:	mov	r0, r3
    2234:	bl	10d4 <g_object_unref@plt>
    2238:	ldr	r0, [sp, #92]	; 0x5c
    223c:	cmp	r0, #0
    2240:	beq	2248 <main@@Base+0xf34>
    2244:	bl	10d4 <g_object_unref@plt>
    2248:	ldr	r0, [sp, #88]	; 0x58
    224c:	bl	1074 <g_free@plt>
    2250:	ldr	r0, [sp, #84]	; 0x54
    2254:	bl	1074 <g_free@plt>
    2258:	ldr	r0, [sp, #80]	; 0x50
    225c:	bl	1074 <g_free@plt>
    2260:	ldr	r0, [sp, #76]	; 0x4c
    2264:	bl	1074 <g_free@plt>
    2268:	mov	r0, r4
    226c:	bl	12b4 <_Unwind_Resume@plt>
    2270:	mov	r4, r0
    2274:	b	2260 <main@@Base+0xf4c>
    2278:	mov	r4, r0
    227c:	b	2258 <main@@Base+0xf44>
    2280:	mov	r4, r0
    2284:	b	2250 <main@@Base+0xf3c>
    2288:	mov	r4, r0
    228c:	b	2248 <main@@Base+0xf34>
    2290:	mov	r4, r0
    2294:	b	2238 <main@@Base+0xf24>
    2298:	andeq	r1, r1, r4, lsl #1
    229c:	andeq	r0, r0, r8, lsl #2
    22a0:	andeq	r0, r0, r8, lsr #15
    22a4:	andeq	r0, r0, r4, lsr r7
    22a8:	andeq	r0, r0, r0, ror r7
    22ac:	andeq	r0, r0, r4, ror r7
    22b0:	andeq	r0, r0, ip, ror r7
    22b4:	andeq	r0, r0, r4, lsl #15
    22b8:	andeq	r0, r0, r8, lsl #14
    22bc:	strdeq	r0, [r0], -ip
    22c0:	andeq	r0, r0, r0, lsl #13
    22c4:	andeq	r0, r0, r8, ror r6
    22c8:	andeq	r0, r0, ip, asr r6
    22cc:	andeq	r0, r0, ip, lsl r6
    22d0:	andeq	r0, r0, r8, lsr r6
    22d4:	ldrdeq	r0, [r0], -ip
    22d8:	andeq	r0, r0, r8, lsl r6
    22dc:	andeq	r0, r0, r4, lsl r6
    22e0:	strdeq	r0, [r0], -r8
    22e4:	andeq	r0, r0, r4, asr #11
    22e8:	ldr	r3, [pc, #172]	; 239c <main@@Base+0x1088>
    22ec:	mov	ip, #0
    22f0:	push	{r4, lr}
    22f4:	add	r3, pc, r3
    22f8:	ldr	lr, [pc, #160]	; 23a0 <main@@Base+0x108c>
    22fc:	sub	sp, sp, #8
    2300:	add	r2, sp, #8
    2304:	ldr	r4, [r3, lr]
    2308:	str	ip, [r2, #-8]!
    230c:	mov	r2, sp
    2310:	ldr	r3, [r4]
    2314:	str	r3, [sp, #4]
    2318:	bl	12c0 <pk_control_get_properties_finish@plt>
    231c:	cmp	r0, #0
    2320:	beq	234c <main@@Base+0x1038>
    2324:	ldr	r0, [sp]
    2328:	cmp	r0, #0
    232c:	beq	2334 <main@@Base+0x1020>
    2330:	bl	1278 <g_error_free@plt>
    2334:	ldr	r2, [sp, #4]
    2338:	ldr	r3, [r4]
    233c:	cmp	r2, r3
    2340:	bne	2378 <main@@Base+0x1064>
    2344:	add	sp, sp, #8
    2348:	pop	{r4, pc}
    234c:	ldr	r1, [pc, #80]	; 23a4 <main@@Base+0x1090>
    2350:	mov	r2, #5
    2354:	add	r1, pc, r1
    2358:	bl	1164 <dcgettext@plt>
    235c:	ldr	r3, [sp]
    2360:	ldr	r2, [r3, #8]
    2364:	mov	r1, r0
    2368:	ldr	r0, [pc, #56]	; 23a8 <main@@Base+0x1094>
    236c:	add	r0, pc, r0
    2370:	bl	10b0 <g_print@plt>
    2374:	b	2324 <main@@Base+0x1010>
    2378:	bl	11f4 <__stack_chk_fail@plt>
    237c:	ldr	r3, [sp]
    2380:	mov	r4, r0
    2384:	cmp	r3, #0
    2388:	beq	2394 <main@@Base+0x1080>
    238c:	mov	r0, r3
    2390:	bl	1278 <g_error_free@plt>
    2394:	mov	r0, r4
    2398:	bl	12b4 <_Unwind_Resume@plt>
    239c:	andeq	r0, r1, r4, lsl #26
    23a0:	andeq	r0, r0, r8, lsl #2
    23a4:			; <UNDEFINED> instruction: 0x000004b4
    23a8:			; <UNDEFINED> instruction: 0x000004b8
    23ac:	ldr	ip, [pc, #96]	; 2414 <main@@Base+0x1100>
    23b0:	mov	r3, #0
    23b4:	push	{r4, lr}
    23b8:	add	ip, pc, ip
    23bc:	ldr	lr, [pc, #84]	; 2418 <main@@Base+0x1104>
    23c0:	sub	sp, sp, #8
    23c4:	ldr	r1, [pc, #80]	; 241c <main@@Base+0x1108>
    23c8:	mov	r2, sp
    23cc:	ldr	r4, [ip, lr]
    23d0:	add	r1, pc, r1
    23d4:	ldr	ip, [r4]
    23d8:	str	ip, [sp, #4]
    23dc:	bl	11a0 <g_object_get@plt>
    23e0:	ldr	r0, [sp]
    23e4:	bl	1170 <pk_network_enum_to_string@plt>
    23e8:	mov	r1, r0
    23ec:	ldr	r0, [pc, #44]	; 2420 <main@@Base+0x110c>
    23f0:	add	r0, pc, r0
    23f4:	bl	10b0 <g_print@plt>
    23f8:	ldr	r2, [sp, #4]
    23fc:	ldr	r3, [r4]
    2400:	cmp	r2, r3
    2404:	bne	2410 <main@@Base+0x10fc>
    2408:	add	sp, sp, #8
    240c:	pop	{r4, pc}
    2410:	bl	11f4 <__stack_chk_fail@plt>
    2414:	andeq	r0, r1, r0, asr #24
    2418:	andeq	r0, r0, r8, lsl #2
    241c:	andeq	r0, r0, r0, ror r5
    2420:	andeq	r0, r0, ip, lsr r4
    2424:	ldr	r3, [pc, #228]	; 2510 <main@@Base+0x11fc>
    2428:	mov	ip, #0
    242c:	push	{r4, r5, lr}
    2430:	add	r3, pc, r3
    2434:	ldr	lr, [pc, #216]	; 2514 <main@@Base+0x1200>
    2438:	sub	sp, sp, #12
    243c:	add	r2, sp, #8
    2440:	ldr	r4, [r3, lr]
    2444:	str	ip, [r2, #-8]!
    2448:	mov	r2, sp
    244c:	ldr	r3, [r4]
    2450:	str	r3, [sp, #4]
    2454:	bl	1230 <pk_control_get_daemon_state_finish@plt>
    2458:	subs	r5, r0, #0
    245c:	beq	24a0 <main@@Base+0x118c>
    2460:	ldr	r0, [pc, #176]	; 2518 <main@@Base+0x1204>
    2464:	mov	r1, r5
    2468:	add	r0, pc, r0
    246c:	bl	10b0 <g_print@plt>
    2470:	mov	r0, r5
    2474:	bl	1074 <g_free@plt>
    2478:	ldr	r0, [sp]
    247c:	cmp	r0, #0
    2480:	beq	2488 <main@@Base+0x1174>
    2484:	bl	1278 <g_error_free@plt>
    2488:	ldr	r2, [sp, #4]
    248c:	ldr	r3, [r4]
    2490:	cmp	r2, r3
    2494:	bne	24d4 <main@@Base+0x11c0>
    2498:	add	sp, sp, #12
    249c:	pop	{r4, r5, pc}
    24a0:	ldr	r1, [pc, #116]	; 251c <main@@Base+0x1208>
    24a4:	mov	r2, #5
    24a8:	add	r1, pc, r1
    24ac:	bl	1164 <dcgettext@plt>
    24b0:	ldr	r3, [sp]
    24b4:	ldr	r2, [r3, #8]
    24b8:	mov	r1, r0
    24bc:	ldr	r0, [pc, #92]	; 2520 <main@@Base+0x120c>
    24c0:	add	r0, pc, r0
    24c4:	bl	10b0 <g_print@plt>
    24c8:	mov	r0, #0
    24cc:	bl	1074 <g_free@plt>
    24d0:	b	2478 <main@@Base+0x1164>
    24d4:	bl	11f4 <__stack_chk_fail@plt>
    24d8:	mov	r4, r0
    24dc:	ldr	r0, [sp]
    24e0:	cmp	r0, #0
    24e4:	beq	24ec <main@@Base+0x11d8>
    24e8:	bl	1278 <g_error_free@plt>
    24ec:	mov	r0, r4
    24f0:	bl	12b4 <_Unwind_Resume@plt>
    24f4:	mov	r4, r0
    24f8:	mov	r0, r5
    24fc:	bl	1074 <g_free@plt>
    2500:	b	24dc <main@@Base+0x11c8>
    2504:	mov	r4, r0
    2508:	mov	r5, #0
    250c:	b	24f8 <main@@Base+0x11e4>
    2510:	andeq	r0, r1, r8, asr #23
    2514:	andeq	r0, r0, r8, lsl #2
    2518:	strdeq	r0, [r0], -r4
    251c:	muleq	r0, r8, r3
    2520:	andeq	r0, r0, r4, ror #6
    2524:	push	{r4, lr}
    2528:	mov	r4, r0
    252c:	bl	10f8 <pk_debug_is_verbose@plt>
    2530:	cmp	r0, #0
    2534:	popeq	{r4, pc}
    2538:	ldr	r2, [pc, #20]	; 2554 <main@@Base+0x1240>
    253c:	mov	r1, #0
    2540:	mov	r0, r4
    2544:	mov	r3, r1
    2548:	add	r2, pc, r2
    254c:	pop	{r4, lr}
    2550:	b	1224 <pk_control_get_daemon_state_async@plt>
    2554:			; <UNDEFINED> instruction: 0xfffffed4

00002558 <__libc_csu_init@@Base>:
    2558:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    255c:	mov	r7, r0
    2560:	ldr	r6, [pc, #76]	; 25b4 <__libc_csu_init@@Base+0x5c>
    2564:	mov	r8, r1
    2568:	ldr	r5, [pc, #72]	; 25b8 <__libc_csu_init@@Base+0x60>
    256c:	mov	r9, r2
    2570:	add	r6, pc, r6
    2574:	bl	1048 <_init@@Base>
    2578:	add	r5, pc, r5
    257c:	rsb	r6, r5, r6
    2580:	asrs	r6, r6, #2
    2584:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    2588:	sub	r5, r5, #4
    258c:	mov	r4, #0
    2590:	add	r4, r4, #1
    2594:	ldr	r3, [r5, #4]!
    2598:	mov	r0, r7
    259c:	mov	r1, r8
    25a0:	mov	r2, r9
    25a4:	blx	r3
    25a8:	cmp	r4, r6
    25ac:	bne	2590 <__libc_csu_init@@Base+0x38>
    25b0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    25b4:	andeq	r0, r1, r4, asr r9
    25b8:	andeq	r0, r1, r8, asr #18

000025bc <__libc_csu_fini@@Base>:
    25bc:	bx	lr

Disassembly of section .fini:

000025c0 <_fini@@Base>:
    25c0:	push	{r3, lr}
    25c4:	pop	{r3, pc}
