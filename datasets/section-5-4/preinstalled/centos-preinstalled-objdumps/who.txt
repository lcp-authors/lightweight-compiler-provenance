
centos-preinstalled/who:     file format elf32-littlearm


Disassembly of section .init:

000111a4 <.init>:
   111a4:	push	{r3, lr}
   111a8:	bl	11a2c <__snprintf_chk@plt+0x514>
   111ac:	pop	{r3, pc}

Disassembly of section .plt:

000111b0 <fdopen@plt-0x14>:
   111b0:	push	{lr}		; (str lr, [sp, #-4]!)
   111b4:	ldr	lr, [pc, #4]	; 111c0 <fdopen@plt-0x4>
   111b8:	add	lr, pc, lr
   111bc:	ldr	pc, [lr, #8]!
   111c0:	andeq	r8, r1, r0, asr #28

000111c4 <fdopen@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #24, 20	; 0x18000
   111cc:	ldr	pc, [ip, #3648]!	; 0xe40

000111d0 <calloc@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #24, 20	; 0x18000
   111d8:	ldr	pc, [ip, #3640]!	; 0xe38

000111dc <fputs_unlocked@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #24, 20	; 0x18000
   111e4:	ldr	pc, [ip, #3632]!	; 0xe30

000111e8 <raise@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #24, 20	; 0x18000
   111f0:	ldr	pc, [ip, #3624]!	; 0xe28

000111f4 <strcmp@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #24, 20	; 0x18000
   111fc:	ldr	pc, [ip, #3616]!	; 0xe20

00011200 <fflush@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #24, 20	; 0x18000
   11208:	ldr	pc, [ip, #3608]!	; 0xe18

0001120c <utmpxname@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #24, 20	; 0x18000
   11214:	ldr	pc, [ip, #3600]!	; 0xe10

00011218 <free@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #24, 20	; 0x18000
   11220:	ldr	pc, [ip, #3592]!	; 0xe08

00011224 <gai_strerror@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #24, 20	; 0x18000
   1122c:	ldr	pc, [ip, #3584]!	; 0xe00

00011230 <_exit@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #24, 20	; 0x18000
   11238:	ldr	pc, [ip, #3576]!	; 0xdf8

0001123c <memcpy@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #24, 20	; 0x18000
   11244:	ldr	pc, [ip, #3568]!	; 0xdf0

00011248 <mbsinit@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #24, 20	; 0x18000
   11250:	ldr	pc, [ip, #3560]!	; 0xde8

00011254 <time@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #24, 20	; 0x18000
   1125c:	ldr	pc, [ip, #3552]!	; 0xde0

00011260 <memcmp@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #24, 20	; 0x18000
   11268:	ldr	pc, [ip, #3544]!	; 0xdd8

0001126c <dcgettext@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #24, 20	; 0x18000
   11274:	ldr	pc, [ip, #3536]!	; 0xdd0

00011278 <setutxent@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #24, 20	; 0x18000
   11280:	ldr	pc, [ip, #3528]!	; 0xdc8

00011284 <__stack_chk_fail@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #24, 20	; 0x18000
   1128c:	ldr	pc, [ip, #3520]!	; 0xdc0

00011290 <realloc@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #24, 20	; 0x18000
   11298:	ldr	pc, [ip, #3512]!	; 0xdb8

0001129c <textdomain@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #24, 20	; 0x18000
   112a4:	ldr	pc, [ip, #3504]!	; 0xdb0

000112a8 <iswprint@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #24, 20	; 0x18000
   112b0:	ldr	pc, [ip, #3496]!	; 0xda8

000112b4 <fwrite@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #24, 20	; 0x18000
   112bc:	ldr	pc, [ip, #3488]!	; 0xda0

000112c0 <lseek64@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #24, 20	; 0x18000
   112c8:	ldr	pc, [ip, #3480]!	; 0xd98

000112cc <__ctype_get_mb_cur_max@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #24, 20	; 0x18000
   112d4:	ldr	pc, [ip, #3472]!	; 0xd90

000112d8 <strcpy@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #24, 20	; 0x18000
   112e0:	ldr	pc, [ip, #3464]!	; 0xd88

000112e4 <__fpending@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #24, 20	; 0x18000
   112ec:	ldr	pc, [ip, #3456]!	; 0xd80

000112f0 <mbrtowc@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #24, 20	; 0x18000
   112f8:	ldr	pc, [ip, #3448]!	; 0xd78

000112fc <error@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #24, 20	; 0x18000
   11304:	ldr	pc, [ip, #3440]!	; 0xd70

00011308 <open64@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #24, 20	; 0x18000
   11310:	ldr	pc, [ip, #3432]!	; 0xd68

00011314 <getenv@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #24, 20	; 0x18000
   1131c:	ldr	pc, [ip, #3424]!	; 0xd60

00011320 <puts@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #24, 20	; 0x18000
   11328:	ldr	pc, [ip, #3416]!	; 0xd58

0001132c <malloc@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #24, 20	; 0x18000
   11334:	ldr	pc, [ip, #3408]!	; 0xd50

00011338 <__libc_start_main@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #24, 20	; 0x18000
   11340:	ldr	pc, [ip, #3400]!	; 0xd48

00011344 <strftime@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #24, 20	; 0x18000
   1134c:	ldr	pc, [ip, #3392]!	; 0xd40

00011350 <__freading@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #24, 20	; 0x18000
   11358:	ldr	pc, [ip, #3384]!	; 0xd38

0001135c <localtime@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #24, 20	; 0x18000
   11364:	ldr	pc, [ip, #3376]!	; 0xd30

00011368 <__gmon_start__@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #24, 20	; 0x18000
   11370:	ldr	pc, [ip, #3368]!	; 0xd28

00011374 <getopt_long@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #24, 20	; 0x18000
   1137c:	ldr	pc, [ip, #3360]!	; 0xd20

00011380 <kill@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #24, 20	; 0x18000
   11388:	ldr	pc, [ip, #3352]!	; 0xd18

0001138c <__ctype_b_loc@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #24, 20	; 0x18000
   11394:	ldr	pc, [ip, #3344]!	; 0xd10

00011398 <exit@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #24, 20	; 0x18000
   113a0:	ldr	pc, [ip, #3336]!	; 0xd08

000113a4 <ttyname@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #24, 20	; 0x18000
   113ac:	ldr	pc, [ip, #3328]!	; 0xd00

000113b0 <strlen@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #24, 20	; 0x18000
   113b8:	ldr	pc, [ip, #3320]!	; 0xcf8

000113bc <strchr@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #24, 20	; 0x18000
   113c4:	ldr	pc, [ip, #3312]!	; 0xcf0

000113c8 <ungetc@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #24, 20	; 0x18000
   113d0:	ldr	pc, [ip, #3304]!	; 0xce8

000113d4 <__errno_location@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #24, 20	; 0x18000
   113dc:	ldr	pc, [ip, #3296]!	; 0xce0

000113e0 <__sprintf_chk@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #24, 20	; 0x18000
   113e8:	ldr	pc, [ip, #3288]!	; 0xcd8

000113ec <__cxa_atexit@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #24, 20	; 0x18000
   113f4:	ldr	pc, [ip, #3280]!	; 0xcd0

000113f8 <__strdup@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #24, 20	; 0x18000
   11400:	ldr	pc, [ip, #3272]!	; 0xcc8

00011404 <memset@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #24, 20	; 0x18000
   1140c:	ldr	pc, [ip, #3264]!	; 0xcc0

00011410 <strncpy@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #24, 20	; 0x18000
   11418:	ldr	pc, [ip, #3256]!	; 0xcb8

0001141c <fscanf@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #24, 20	; 0x18000
   11424:	ldr	pc, [ip, #3248]!	; 0xcb0

00011428 <__printf_chk@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #24, 20	; 0x18000
   11430:	ldr	pc, [ip, #3240]!	; 0xca8

00011434 <fileno@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #24, 20	; 0x18000
   1143c:	ldr	pc, [ip, #3232]!	; 0xca0

00011440 <__fprintf_chk@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #24, 20	; 0x18000
   11448:	ldr	pc, [ip, #3224]!	; 0xc98

0001144c <fclose@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #24, 20	; 0x18000
   11454:	ldr	pc, [ip, #3216]!	; 0xc90

00011458 <fseeko64@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #24, 20	; 0x18000
   11460:	ldr	pc, [ip, #3208]!	; 0xc88

00011464 <__uflow@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #24, 20	; 0x18000
   1146c:	ldr	pc, [ip, #3200]!	; 0xc80

00011470 <endutxent@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #24, 20	; 0x18000
   11478:	ldr	pc, [ip, #3192]!	; 0xc78

0001147c <setlocale@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #24, 20	; 0x18000
   11484:	ldr	pc, [ip, #3184]!	; 0xc70

00011488 <strrchr@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #24, 20	; 0x18000
   11490:	ldr	pc, [ip, #3176]!	; 0xc68

00011494 <nl_langinfo@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #24, 20	; 0x18000
   1149c:	ldr	pc, [ip, #3168]!	; 0xc60

000114a0 <freeaddrinfo@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #24, 20	; 0x18000
   114a8:	ldr	pc, [ip, #3160]!	; 0xc58

000114ac <getaddrinfo@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #24, 20	; 0x18000
   114b4:	ldr	pc, [ip, #3152]!	; 0xc50

000114b8 <bindtextdomain@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #24, 20	; 0x18000
   114c0:	ldr	pc, [ip, #3144]!	; 0xc48

000114c4 <strncat@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #24, 20	; 0x18000
   114cc:	ldr	pc, [ip, #3136]!	; 0xc40

000114d0 <__xstat64@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #24, 20	; 0x18000
   114d8:	ldr	pc, [ip, #3128]!	; 0xc38

000114dc <strncmp@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #24, 20	; 0x18000
   114e4:	ldr	pc, [ip, #3120]!	; 0xc30

000114e8 <abort@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #24, 20	; 0x18000
   114f0:	ldr	pc, [ip, #3112]!	; 0xc28

000114f4 <getutxent@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #24, 20	; 0x18000
   114fc:	ldr	pc, [ip, #3104]!	; 0xc20

00011500 <close@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #24, 20	; 0x18000
   11508:	ldr	pc, [ip, #3096]!	; 0xc18

0001150c <getgrnam@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #24, 20	; 0x18000
   11514:	ldr	pc, [ip, #3088]!	; 0xc10

00011518 <__snprintf_chk@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #24, 20	; 0x18000
   11520:	ldr	pc, [ip, #3080]!	; 0xc08

Disassembly of section .text:

00011524 <close_stdout@@Base-0x1c4c>:
   11524:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11528:	mov	r5, r0
   1152c:	sub	sp, sp, #36	; 0x24
   11530:	ldr	r0, [r1]
   11534:	mov	r4, r1
   11538:	bl	1344c <close_stdout@@Base+0x2dc>
   1153c:	ldr	r1, [pc, #1044]	; 11958 <__snprintf_chk@plt+0x440>
   11540:	mov	r0, #6
   11544:	ldr	r6, [pc, #1040]	; 1195c <__snprintf_chk@plt+0x444>
   11548:	mov	r7, #1
   1154c:	add	r1, pc, r1
   11550:	ldr	fp, [pc, #1032]	; 11960 <__snprintf_chk@plt+0x448>
   11554:	bl	1147c <setlocale@plt>
   11558:	add	r6, pc, r6
   1155c:	ldr	r1, [pc, #1024]	; 11964 <__snprintf_chk@plt+0x44c>
   11560:	add	fp, pc, fp
   11564:	mov	r0, r6
   11568:	ldr	sl, [pc, #1016]	; 11968 <__snprintf_chk@plt+0x450>
   1156c:	add	r1, pc, r1
   11570:	ldr	r8, [pc, #1012]	; 1196c <__snprintf_chk@plt+0x454>
   11574:	bl	114b8 <bindtextdomain@plt>
   11578:	mov	r0, r6
   1157c:	ldr	r6, [pc, #1004]	; 11970 <__snprintf_chk@plt+0x458>
   11580:	bl	1129c <textdomain@plt>
   11584:	ldr	r3, [pc, #1000]	; 11974 <__snprintf_chk@plt+0x45c>
   11588:	add	sl, pc, sl
   1158c:	add	r6, pc, r6
   11590:	ldr	r2, [pc, #992]	; 11978 <__snprintf_chk@plt+0x460>
   11594:	add	r8, pc, r8
   11598:	ldr	r0, [r6, r3]
   1159c:	add	r2, pc, r2
   115a0:	ldr	r3, [pc, #980]	; 1197c <__snprintf_chk@plt+0x464>
   115a4:	str	r2, [sp, #20]
   115a8:	add	r3, pc, r3
   115ac:	str	r3, [sp, #24]
   115b0:	bl	18580 <close_stdout@@Base+0x5410>
   115b4:	ldr	r2, [pc, #964]	; 11980 <__snprintf_chk@plt+0x468>
   115b8:	add	r2, pc, r2
   115bc:	str	r2, [sp, #28]
   115c0:	ldr	r2, [pc, #956]	; 11984 <__snprintf_chk@plt+0x46c>
   115c4:	mov	r9, #0
   115c8:	ldr	r3, [pc, #952]	; 11988 <__snprintf_chk@plt+0x470>
   115cc:	mov	r0, r5
   115d0:	str	r9, [sp]
   115d4:	mov	r1, r4
   115d8:	add	r2, pc, r2
   115dc:	add	r3, pc, r3
   115e0:	bl	11374 <getopt_long@plt>
   115e4:	cmn	r0, #1
   115e8:	beq	11830 <__snprintf_chk@plt+0x318>
   115ec:	cmp	r0, #109	; 0x6d
   115f0:	beq	1179c <__snprintf_chk@plt+0x284>
   115f4:	bgt	1163c <__snprintf_chk@plt+0x124>
   115f8:	cmp	r0, #84	; 0x54
   115fc:	beq	11710 <__snprintf_chk@plt+0x1f8>
   11600:	ble	11674 <__snprintf_chk@plt+0x15c>
   11604:	cmp	r0, #98	; 0x62
   11608:	beq	11784 <__snprintf_chk@plt+0x26c>
   1160c:	ble	1171c <__snprintf_chk@plt+0x204>
   11610:	cmp	r0, #100	; 0x64
   11614:	beq	116c0 <__snprintf_chk@plt+0x1a8>
   11618:	cmp	r0, #108	; 0x6c
   1161c:	bne	1168c <__snprintf_chk@plt+0x174>
   11620:	ldr	r3, [pc, #868]	; 1198c <__snprintf_chk@plt+0x474>
   11624:	mov	r2, #1
   11628:	mov	r7, r9
   1162c:	add	r3, pc, r3
   11630:	strb	r2, [r3, #87]	; 0x57
   11634:	strb	r2, [r3]
   11638:	b	115c0 <__snprintf_chk@plt+0xa8>
   1163c:	cmp	r0, #115	; 0x73
   11640:	beq	11760 <__snprintf_chk@plt+0x248>
   11644:	ble	11694 <__snprintf_chk@plt+0x17c>
   11648:	cmp	r0, #117	; 0x75
   1164c:	beq	1181c <__snprintf_chk@plt+0x304>
   11650:	blt	11808 <__snprintf_chk@plt+0x2f0>
   11654:	cmp	r0, #119	; 0x77
   11658:	beq	11710 <__snprintf_chk@plt+0x1f8>
   1165c:	cmp	r0, #256	; 0x100
   11660:	bne	1168c <__snprintf_chk@plt+0x174>
   11664:	ldr	r2, [sp, #28]
   11668:	mov	r3, #1
   1166c:	strb	r3, [r2, #58]	; 0x3a
   11670:	b	115c0 <__snprintf_chk@plt+0xa8>
   11674:	cmn	r0, #2
   11678:	beq	11800 <__snprintf_chk@plt+0x2e8>
   1167c:	cmp	r0, #72	; 0x48
   11680:	beq	116fc <__snprintf_chk@plt+0x1e4>
   11684:	cmn	r0, #3
   11688:	beq	117a8 <__snprintf_chk@plt+0x290>
   1168c:	mov	r0, #1
   11690:	bl	12d94 <__snprintf_chk@plt+0x187c>
   11694:	cmp	r0, #113	; 0x71
   11698:	beq	11770 <__snprintf_chk@plt+0x258>
   1169c:	bgt	116e0 <__snprintf_chk@plt+0x1c8>
   116a0:	cmp	r0, #112	; 0x70
   116a4:	bne	1168c <__snprintf_chk@plt+0x174>
   116a8:	ldr	r3, [pc, #736]	; 11990 <__snprintf_chk@plt+0x478>
   116ac:	mov	r2, #1
   116b0:	mov	r7, r9
   116b4:	add	r3, pc, r3
   116b8:	strb	r2, [r3, #86]	; 0x56
   116bc:	b	115c0 <__snprintf_chk@plt+0xa8>
   116c0:	ldr	r3, [pc, #716]	; 11994 <__snprintf_chk@plt+0x47c>
   116c4:	mov	r2, #1
   116c8:	mov	r7, r9
   116cc:	add	r3, pc, r3
   116d0:	strb	r2, [r3, #88]	; 0x58
   116d4:	strb	r2, [r3]
   116d8:	strb	r2, [r3, #2]
   116dc:	b	115c0 <__snprintf_chk@plt+0xa8>
   116e0:	ldr	r3, [pc, #688]	; 11998 <__snprintf_chk@plt+0x480>
   116e4:	mov	r2, #1
   116e8:	mov	r7, r9
   116ec:	add	r3, pc, r3
   116f0:	strb	r2, [r3, #72]	; 0x48
   116f4:	strb	r2, [r3]
   116f8:	b	115c0 <__snprintf_chk@plt+0xa8>
   116fc:	ldr	r3, [pc, #664]	; 1199c <__snprintf_chk@plt+0x484>
   11700:	mov	r2, #1
   11704:	add	r3, pc, r3
   11708:	strb	r2, [r3, #69]	; 0x45
   1170c:	b	115c0 <__snprintf_chk@plt+0xa8>
   11710:	mov	r3, #1
   11714:	strb	r3, [sl, #3]
   11718:	b	115c0 <__snprintf_chk@plt+0xa8>
   1171c:	cmp	r0, #97	; 0x61
   11720:	bne	1168c <__snprintf_chk@plt+0x174>
   11724:	ldr	r3, [pc, #628]	; 119a0 <__snprintf_chk@plt+0x488>
   11728:	mov	r2, #1
   1172c:	mov	r7, r9
   11730:	add	r3, pc, r3
   11734:	strb	r2, [r3, #84]	; 0x54
   11738:	strb	r2, [r3, #88]	; 0x58
   1173c:	strb	r2, [r3, #87]	; 0x57
   11740:	strb	r2, [r3, #86]	; 0x56
   11744:	strb	r2, [r3, #72]	; 0x48
   11748:	strb	r2, [r3, #85]	; 0x55
   1174c:	strb	r2, [r3, #71]	; 0x47
   11750:	strb	r2, [r3, #3]
   11754:	strb	r2, [r3]
   11758:	strb	r2, [r3, #2]
   1175c:	b	115c0 <__snprintf_chk@plt+0xa8>
   11760:	ldr	r2, [sp, #20]
   11764:	mov	r3, #1
   11768:	strb	r3, [r2, #1]
   1176c:	b	115c0 <__snprintf_chk@plt+0xa8>
   11770:	ldr	r3, [pc, #556]	; 119a4 <__snprintf_chk@plt+0x48c>
   11774:	mov	r2, #1
   11778:	add	r3, pc, r3
   1177c:	strb	r2, [r3, #68]	; 0x44
   11780:	b	115c0 <__snprintf_chk@plt+0xa8>
   11784:	ldr	r3, [pc, #540]	; 119a8 <__snprintf_chk@plt+0x490>
   11788:	mov	r2, #1
   1178c:	mov	r7, r9
   11790:	add	r3, pc, r3
   11794:	strb	r2, [r3, #84]	; 0x54
   11798:	b	115c0 <__snprintf_chk@plt+0xa8>
   1179c:	mov	r3, #1
   117a0:	strb	r3, [fp, #70]	; 0x46
   117a4:	b	115c0 <__snprintf_chk@plt+0xa8>
   117a8:	ldr	r2, [pc, #508]	; 119ac <__snprintf_chk@plt+0x494>
   117ac:	ldr	r3, [pc, #508]	; 119b0 <__snprintf_chk@plt+0x498>
   117b0:	ldr	r1, [pc, #508]	; 119b4 <__snprintf_chk@plt+0x49c>
   117b4:	ldr	r0, [r6, r2]
   117b8:	ldr	r3, [r6, r3]
   117bc:	add	r1, pc, r1
   117c0:	ldr	r2, [pc, #496]	; 119b8 <__snprintf_chk@plt+0x4a0>
   117c4:	ldr	r0, [r0]
   117c8:	ldr	r3, [r3]
   117cc:	add	r2, pc, r2
   117d0:	ldr	lr, [pc, #484]	; 119bc <__snprintf_chk@plt+0x4a4>
   117d4:	stmib	sp, {r1, r2}
   117d8:	ldr	r1, [pc, #480]	; 119c0 <__snprintf_chk@plt+0x4a8>
   117dc:	add	lr, pc, lr
   117e0:	ldr	r2, [pc, #476]	; 119c4 <__snprintf_chk@plt+0x4ac>
   117e4:	str	r9, [sp, #12]
   117e8:	add	r1, pc, r1
   117ec:	str	lr, [sp]
   117f0:	add	r2, pc, r2
   117f4:	bl	15138 <close_stdout@@Base+0x1fc8>
   117f8:	mov	r0, r9
   117fc:	bl	11398 <exit@plt>
   11800:	mov	r0, r9
   11804:	bl	12d94 <__snprintf_chk@plt+0x187c>
   11808:	ldr	r2, [sp, #24]
   1180c:	mov	r3, #1
   11810:	mov	r7, r9
   11814:	strb	r3, [r2, #85]	; 0x55
   11818:	b	115c0 <__snprintf_chk@plt+0xa8>
   1181c:	mov	r3, #1
   11820:	mov	r7, r9
   11824:	strb	r3, [r8, #71]	; 0x47
   11828:	strb	r3, [r8]
   1182c:	b	115c0 <__snprintf_chk@plt+0xa8>
   11830:	cmp	r7, r9
   11834:	beq	1184c <__snprintf_chk@plt+0x334>
   11838:	ldr	r3, [pc, #392]	; 119c8 <__snprintf_chk@plt+0x4b0>
   1183c:	mov	r2, #1
   11840:	add	r3, pc, r3
   11844:	strb	r2, [r3, #71]	; 0x47
   11848:	strb	r2, [r3, #1]
   1184c:	ldr	r3, [pc, #376]	; 119cc <__snprintf_chk@plt+0x4b4>
   11850:	mov	r0, #2
   11854:	add	r3, pc, r3
   11858:	ldrb	r2, [r3, #2]
   1185c:	cmp	r2, #0
   11860:	movne	r2, #0
   11864:	strbne	r2, [r3, #1]
   11868:	bl	1332c <close_stdout@@Base+0x1bc>
   1186c:	cmp	r0, #0
   11870:	beq	118e8 <__snprintf_chk@plt+0x3d0>
   11874:	ldr	r3, [pc, #340]	; 119d0 <__snprintf_chk@plt+0x4b8>
   11878:	mov	r1, #16
   1187c:	ldr	r2, [pc, #336]	; 119d4 <__snprintf_chk@plt+0x4bc>
   11880:	add	r3, pc, r3
   11884:	add	r2, pc, r2
   11888:	str	r1, [r3, #4]
   1188c:	str	r2, [r3, #44]	; 0x2c
   11890:	ldr	r3, [pc, #320]	; 119d8 <__snprintf_chk@plt+0x4c0>
   11894:	ldr	r6, [r6, r3]
   11898:	ldr	r3, [r6]
   1189c:	rsb	r5, r3, r5
   118a0:	add	r5, r5, #1
   118a4:	cmp	r5, #3
   118a8:	addls	pc, pc, r5, lsl #2
   118ac:	b	11918 <__snprintf_chk@plt+0x400>
   118b0:	b	118d0 <__snprintf_chk@plt+0x3b8>
   118b4:	b	118d0 <__snprintf_chk@plt+0x3b8>
   118b8:	b	11908 <__snprintf_chk@plt+0x3f0>
   118bc:	b	118c0 <__snprintf_chk@plt+0x3a8>
   118c0:	ldr	r3, [pc, #276]	; 119dc <__snprintf_chk@plt+0x4c4>
   118c4:	mov	r2, #1
   118c8:	add	r3, pc, r3
   118cc:	strb	r2, [r3, #70]	; 0x46
   118d0:	ldr	r0, [pc, #264]	; 119e0 <__snprintf_chk@plt+0x4c8>
   118d4:	mov	r1, #1
   118d8:	add	r0, pc, r0
   118dc:	bl	12410 <__snprintf_chk@plt+0xef8>
   118e0:	mov	r0, #0
   118e4:	bl	11398 <exit@plt>
   118e8:	ldr	r3, [pc, #244]	; 119e4 <__snprintf_chk@plt+0x4cc>
   118ec:	mov	r1, #12
   118f0:	ldr	r2, [pc, #240]	; 119e8 <__snprintf_chk@plt+0x4d0>
   118f4:	add	r3, pc, r3
   118f8:	add	r2, pc, r2
   118fc:	str	r1, [r3, #4]
   11900:	str	r2, [r3, #44]	; 0x2c
   11904:	b	11890 <__snprintf_chk@plt+0x378>
   11908:	ldr	r0, [r4, r3, lsl #2]
   1190c:	mov	r1, #0
   11910:	bl	12410 <__snprintf_chk@plt+0xef8>
   11914:	b	118e0 <__snprintf_chk@plt+0x3c8>
   11918:	ldr	r1, [pc, #204]	; 119ec <__snprintf_chk@plt+0x4d4>
   1191c:	mov	r2, #5
   11920:	mov	r0, #0
   11924:	add	r1, pc, r1
   11928:	bl	1126c <dcgettext@plt>
   1192c:	ldr	r3, [r6]
   11930:	add	r3, r3, #2
   11934:	mov	r5, r0
   11938:	ldr	r0, [r4, r3, lsl #2]
   1193c:	bl	14c9c <close_stdout@@Base+0x1b2c>
   11940:	mov	r2, r5
   11944:	mov	r3, r0
   11948:	mov	r0, #0
   1194c:	mov	r1, r0
   11950:	bl	112fc <error@plt>
   11954:	b	1168c <__snprintf_chk@plt+0x174>
   11958:	andeq	r7, r0, r0, asr r7
   1195c:	andeq	r7, r0, r4, lsl #13
   11960:	andeq	r8, r1, r4, asr ip
   11964:	andeq	r7, r0, r4, lsr r7
   11968:	andeq	r8, r1, ip, lsr #24
   1196c:	andeq	r8, r1, r0, lsr #24
   11970:	andeq	r8, r1, ip, ror #20
   11974:	andeq	r0, r0, r0, asr #2
   11978:	andeq	r8, r1, r8, lsl ip
   1197c:	andeq	r8, r1, ip, lsl #24
   11980:	strdeq	r8, [r1], -ip
   11984:	andeq	r7, r0, r4, lsl r7
   11988:	andeq	r8, r1, r0, ror #15
   1198c:	andeq	r8, r1, r8, lsl #23
   11990:	andeq	r8, r1, r0, lsl #22
   11994:	andeq	r8, r1, r8, ror #21
   11998:	andeq	r8, r1, r8, asr #21
   1199c:			; <UNDEFINED> instruction: 0x00018ab0
   119a0:	andeq	r8, r1, r4, lsl #21
   119a4:	andeq	r8, r1, ip, lsr sl
   119a8:	andeq	r8, r1, r4, lsr #20
   119ac:	andeq	r0, r0, ip, asr #2
   119b0:	andeq	r0, r0, r8, lsr r1
   119b4:	andeq	r7, r0, r0, lsl r5
   119b8:	andeq	r7, r0, r0, lsl r5
   119bc:	ldrdeq	r7, [r0], -ip
   119c0:	andeq	r7, r0, ip, asr #9
   119c4:	andeq	r7, r0, r8, ror #7
   119c8:	andeq	r8, r1, r4, ror r9
   119cc:	andeq	r8, r1, r0, ror #18
   119d0:	andeq	r8, r1, r4, lsr r9
   119d4:	andeq	r7, r0, r8, ror r4
   119d8:	andeq	r0, r0, r4, lsr r1
   119dc:	andeq	r8, r1, ip, ror #17
   119e0:	andeq	r7, r0, r8, asr #5
   119e4:	andeq	r8, r1, r0, asr #17
   119e8:	andeq	r7, r0, r4, lsl r4
   119ec:	strdeq	r7, [r0], -r4
   119f0:	mov	fp, #0
   119f4:	mov	lr, #0
   119f8:	pop	{r1}		; (ldr r1, [sp], #4)
   119fc:	mov	r2, sp
   11a00:	push	{r2}		; (str r2, [sp, #-4]!)
   11a04:	push	{r0}		; (str r0, [sp, #-4]!)
   11a08:	ldr	ip, [pc, #16]	; 11a20 <__snprintf_chk@plt+0x508>
   11a0c:	push	{ip}		; (str ip, [sp, #-4]!)
   11a10:	ldr	r0, [pc, #12]	; 11a24 <__snprintf_chk@plt+0x50c>
   11a14:	ldr	r3, [pc, #12]	; 11a28 <__snprintf_chk@plt+0x510>
   11a18:	bl	11338 <__libc_start_main@plt>
   11a1c:	bl	114e8 <abort@plt>
   11a20:	andeq	r8, r1, ip, ror r5
   11a24:	andeq	r1, r1, r4, lsr #10
   11a28:	andeq	r8, r1, r8, lsl r5
   11a2c:	ldr	r3, [pc, #20]	; 11a48 <__snprintf_chk@plt+0x530>
   11a30:	ldr	r2, [pc, #20]	; 11a4c <__snprintf_chk@plt+0x534>
   11a34:	add	r3, pc, r3
   11a38:	ldr	r2, [r3, r2]
   11a3c:	cmp	r2, #0
   11a40:	bxeq	lr
   11a44:	b	11368 <__gmon_start__@plt>
   11a48:	andeq	r8, r1, r4, asr #11
   11a4c:	andeq	r0, r0, r4, asr #2
   11a50:	push	{r3, lr}
   11a54:	movw	r0, #41400	; 0xa1b8
   11a58:	ldr	r3, [pc, #36]	; 11a84 <__snprintf_chk@plt+0x56c>
   11a5c:	movt	r0, #2
   11a60:	rsb	r3, r0, r3
   11a64:	cmp	r3, #6
   11a68:	popls	{r3, pc}
   11a6c:	movw	r3, #0
   11a70:	movt	r3, #0
   11a74:	cmp	r3, #0
   11a78:	popeq	{r3, pc}
   11a7c:	blx	r3
   11a80:	pop	{r3, pc}
   11a84:			; <UNDEFINED> instruction: 0x0002a1bb
   11a88:	push	{r3, lr}
   11a8c:	movw	r0, #41400	; 0xa1b8
   11a90:	movw	r3, #41400	; 0xa1b8
   11a94:	movt	r0, #2
   11a98:	movt	r3, #2
   11a9c:	rsb	r3, r0, r3
   11aa0:	asr	r3, r3, #2
   11aa4:	add	r3, r3, r3, lsr #31
   11aa8:	asrs	r1, r3, #1
   11aac:	popeq	{r3, pc}
   11ab0:	movw	r2, #0
   11ab4:	movt	r2, #0
   11ab8:	cmp	r2, #0
   11abc:	popeq	{r3, pc}
   11ac0:	blx	r2
   11ac4:	pop	{r3, pc}
   11ac8:	push	{r4, lr}
   11acc:	movw	r4, #41400	; 0xa1b8
   11ad0:	movt	r4, #2
   11ad4:	ldrb	r3, [r4]
   11ad8:	cmp	r3, #0
   11adc:	popne	{r4, pc}
   11ae0:	bl	11a50 <__snprintf_chk@plt+0x538>
   11ae4:	mov	r3, #1
   11ae8:	strb	r3, [r4]
   11aec:	pop	{r4, pc}
   11af0:	movw	r0, #40384	; 0x9dc0
   11af4:	movt	r0, #2
   11af8:	push	{r3, lr}
   11afc:	ldr	r3, [r0]
   11b00:	cmp	r3, #0
   11b04:	beq	11b1c <__snprintf_chk@plt+0x604>
   11b08:	movw	r3, #0
   11b0c:	movt	r3, #0
   11b10:	cmp	r3, #0
   11b14:	beq	11b1c <__snprintf_chk@plt+0x604>
   11b18:	blx	r3
   11b1c:	pop	{r3, lr}
   11b20:	b	11a88 <__snprintf_chk@plt+0x570>
   11b24:	ldr	ip, [pc, #616]	; 11d94 <__snprintf_chk@plt+0x87c>
   11b28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b2c:	mov	sl, r0
   11b30:	ldr	r0, [pc, #608]	; 11d98 <__snprintf_chk@plt+0x880>
   11b34:	add	ip, pc, ip
   11b38:	mov	r7, r1
   11b3c:	ldr	r1, [pc, #600]	; 11d9c <__snprintf_chk@plt+0x884>
   11b40:	sub	sp, sp, #100	; 0x64
   11b44:	ldr	r5, [pc, #596]	; 11da0 <__snprintf_chk@plt+0x888>
   11b48:	ldr	r0, [ip, r0]
   11b4c:	add	r1, pc, r1
   11b50:	mov	r9, r3
   11b54:	mov	r3, ip
   11b58:	strb	r2, [r1, #1]
   11b5c:	add	r5, pc, r5
   11b60:	ldr	r2, [r0]
   11b64:	ldr	ip, [sp, #140]	; 0x8c
   11b68:	ldrb	r3, [r5]
   11b6c:	str	r2, [sp, #92]	; 0x5c
   11b70:	add	r2, sp, #144	; 0x90
   11b74:	str	ip, [sp, #48]	; 0x30
   11b78:	cmp	r3, #0
   11b7c:	ldm	r2, {r2, r6, fp, ip}
   11b80:	str	r0, [sp, #44]	; 0x2c
   11b84:	ldr	r8, [sp, #136]	; 0x88
   11b88:	str	ip, [sp, #52]	; 0x34
   11b8c:	beq	11be0 <__snprintf_chk@plt+0x6c8>
   11b90:	ldrb	r4, [r5, #1]
   11b94:	cmp	r4, #0
   11b98:	bne	11d40 <__snprintf_chk@plt+0x828>
   11b9c:	mov	r0, r2
   11ba0:	str	r2, [sp, #40]	; 0x28
   11ba4:	bl	113b0 <strlen@plt>
   11ba8:	ldr	r2, [sp, #40]	; 0x28
   11bac:	cmp	r0, #10
   11bb0:	movhi	r3, r4
   11bb4:	bhi	11be4 <__snprintf_chk@plt+0x6cc>
   11bb8:	add	r4, sp, #64	; 0x40
   11bbc:	ldr	r3, [pc, #480]	; 11da4 <__snprintf_chk@plt+0x88c>
   11bc0:	str	r2, [sp]
   11bc4:	mov	r1, #1
   11bc8:	add	r3, pc, r3
   11bcc:	mov	r2, #12
   11bd0:	mov	r0, r4
   11bd4:	bl	113e0 <__sprintf_chk@plt>
   11bd8:	ldrb	r3, [r5, #1]
   11bdc:	b	11bf0 <__snprintf_chk@plt+0x6d8>
   11be0:	ldrb	r3, [r5, #1]
   11be4:	add	r4, sp, #96	; 0x60
   11be8:	mov	r2, #0
   11bec:	strb	r2, [r4, #-32]!	; 0xffffffe0
   11bf0:	cmp	r3, #0
   11bf4:	bne	11c08 <__snprintf_chk@plt+0x6f0>
   11bf8:	mov	r0, r6
   11bfc:	bl	113b0 <strlen@plt>
   11c00:	cmp	r0, #11
   11c04:	bls	11d68 <__snprintf_chk@plt+0x850>
   11c08:	add	r5, sp, #96	; 0x60
   11c0c:	mov	r3, #0
   11c10:	strb	r3, [r5, #-20]!	; 0xffffffec
   11c14:	ldr	r3, [pc, #396]	; 11da8 <__snprintf_chk@plt+0x890>
   11c18:	add	r3, pc, r3
   11c1c:	ldrb	r3, [r3, #2]
   11c20:	cmp	r3, #0
   11c24:	moveq	r0, #1
   11c28:	beq	11c40 <__snprintf_chk@plt+0x728>
   11c2c:	ldr	r0, [sp, #52]	; 0x34
   11c30:	bl	113b0 <strlen@plt>
   11c34:	cmp	r0, #11
   11c38:	addhi	r0, r0, #2
   11c3c:	movls	r0, #14
   11c40:	bl	15248 <close_stdout@@Base+0x20d8>
   11c44:	ldr	r3, [pc, #352]	; 11dac <__snprintf_chk@plt+0x894>
   11c48:	add	r3, pc, r3
   11c4c:	ldrb	r3, [r3, #2]
   11c50:	cmp	r3, #0
   11c54:	mov	r6, r0
   11c58:	strbeq	r3, [r0]
   11c5c:	bne	11d48 <__snprintf_chk@plt+0x830>
   11c60:	ldr	r2, [pc, #328]	; 11db0 <__snprintf_chk@plt+0x898>
   11c64:	cmp	r7, #0
   11c68:	ldr	r3, [pc, #324]	; 11db4 <__snprintf_chk@plt+0x89c>
   11c6c:	add	r2, pc, r2
   11c70:	ldr	r0, [pc, #320]	; 11db8 <__snprintf_chk@plt+0x8a0>
   11c74:	add	r3, pc, r3
   11c78:	movne	r3, r7
   11c7c:	ldrb	r2, [r2, #3]
   11c80:	add	r0, pc, r0
   11c84:	cmp	r2, #0
   11c88:	ldreq	r0, [pc, #300]	; 11dbc <__snprintf_chk@plt+0x8a4>
   11c8c:	addeq	r0, pc, r0
   11c90:	ldr	r1, [pc, #296]	; 11dc0 <__snprintf_chk@plt+0x8a8>
   11c94:	mov	r2, sl
   11c98:	stm	sp, {r0, r9}
   11c9c:	add	r0, sp, #60	; 0x3c
   11ca0:	add	r1, pc, r1
   11ca4:	ldr	ip, [sp, #48]	; 0x30
   11ca8:	ldr	r1, [r1, #4]
   11cac:	str	r8, [sp, #8]
   11cb0:	str	ip, [sp, #16]
   11cb4:	str	r1, [sp, #12]
   11cb8:	ldr	r1, [pc, #260]	; 11dc4 <__snprintf_chk@plt+0x8ac>
   11cbc:	str	r4, [sp, #20]
   11cc0:	str	r5, [sp, #24]
   11cc4:	add	r1, pc, r1
   11cc8:	str	fp, [sp, #28]
   11ccc:	str	r6, [sp, #32]
   11cd0:	bl	154b4 <close_stdout@@Base+0x2344>
   11cd4:	cmn	r0, #1
   11cd8:	beq	11d8c <__snprintf_chk@plt+0x874>
   11cdc:	ldr	r4, [sp, #60]	; 0x3c
   11ce0:	mov	r0, r4
   11ce4:	bl	113b0 <strlen@plt>
   11ce8:	add	r0, r4, r0
   11cec:	sub	r3, r0, #1
   11cf0:	mov	r2, r3
   11cf4:	sub	r3, r3, #1
   11cf8:	ldrb	r1, [r2]
   11cfc:	cmp	r1, #32
   11d00:	beq	11cf0 <__snprintf_chk@plt+0x7d8>
   11d04:	mov	r3, #0
   11d08:	strb	r3, [r2, #1]
   11d0c:	ldr	r0, [sp, #60]	; 0x3c
   11d10:	bl	11320 <puts@plt>
   11d14:	ldr	r0, [sp, #60]	; 0x3c
   11d18:	bl	11218 <free@plt>
   11d1c:	ldr	ip, [sp, #44]	; 0x2c
   11d20:	ldr	r2, [sp, #92]	; 0x5c
   11d24:	ldr	r3, [ip]
   11d28:	cmp	r2, r3
   11d2c:	bne	11d90 <__snprintf_chk@plt+0x878>
   11d30:	mov	r0, r6
   11d34:	add	sp, sp, #100	; 0x64
   11d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d3c:	b	11218 <free@plt>
   11d40:	mov	r3, #1
   11d44:	b	11be4 <__snprintf_chk@plt+0x6cc>
   11d48:	ldr	ip, [sp, #52]	; 0x34
   11d4c:	mov	r1, #1
   11d50:	ldr	r3, [pc, #112]	; 11dc8 <__snprintf_chk@plt+0x8b0>
   11d54:	mvn	r2, #0
   11d58:	str	ip, [sp]
   11d5c:	add	r3, pc, r3
   11d60:	bl	113e0 <__sprintf_chk@plt>
   11d64:	b	11c60 <__snprintf_chk@plt+0x748>
   11d68:	add	r5, sp, #76	; 0x4c
   11d6c:	ldr	r3, [pc, #88]	; 11dcc <__snprintf_chk@plt+0x8b4>
   11d70:	str	r6, [sp]
   11d74:	mov	r1, #1
   11d78:	mov	r2, #13
   11d7c:	mov	r0, r5
   11d80:	add	r3, pc, r3
   11d84:	bl	113e0 <__sprintf_chk@plt>
   11d88:	b	11c14 <__snprintf_chk@plt+0x6fc>
   11d8c:	bl	1545c <close_stdout@@Base+0x22ec>
   11d90:	bl	11284 <__stack_chk_fail@plt>
   11d94:	andeq	r8, r1, r4, asr #9
   11d98:	andeq	r0, r0, r0, lsr r1
   11d9c:	andeq	r8, r1, r4, lsl r6
   11da0:	andeq	r8, r1, r8, asr r6
   11da4:	strdeq	r6, [r0], -r4
   11da8:	muleq	r1, ip, r5
   11dac:	andeq	r8, r1, ip, ror #10
   11db0:	andeq	r8, r1, r8, asr #10
   11db4:	andeq	r6, r0, r0, asr #18
   11db8:	andeq	r8, r1, r0, ror #9
   11dbc:	andeq	r7, r0, r0, lsl r0
   11dc0:	andeq	r8, r1, r4, lsl r5
   11dc4:	andeq	r6, r0, r0, lsl r9
   11dc8:	andeq	r6, r0, r0, ror r8
   11dcc:	andeq	r6, r0, r4, asr #16
   11dd0:	push	{r4, r5, r6, lr}
   11dd4:	mov	r2, #5
   11dd8:	ldr	r5, [pc, #84]	; 11e34 <__snprintf_chk@plt+0x91c>
   11ddc:	mov	r6, r0
   11de0:	mov	r0, #0
   11de4:	add	r5, pc, r5
   11de8:	mov	r1, r5
   11dec:	bl	1126c <dcgettext@plt>
   11df0:	bl	113b0 <strlen@plt>
   11df4:	add	r0, r0, #5
   11df8:	bl	15248 <close_stdout@@Base+0x20d8>
   11dfc:	mov	r1, r5
   11e00:	mov	r2, #5
   11e04:	mov	r4, r0
   11e08:	mov	r0, #0
   11e0c:	bl	1126c <dcgettext@plt>
   11e10:	mov	r1, r0
   11e14:	mov	r0, r4
   11e18:	bl	112d8 <strcpy@plt>
   11e1c:	mov	r0, r4
   11e20:	add	r1, r6, #40	; 0x28
   11e24:	mov	r2, #4
   11e28:	bl	114c4 <strncat@plt>
   11e2c:	mov	r0, r4
   11e30:	pop	{r4, r5, r6, pc}
   11e34:	andeq	r6, r0, r4, lsl r8
   11e38:	ldr	r2, [pc, #136]	; 11ec8 <__snprintf_chk@plt+0x9b0>
   11e3c:	ldr	r1, [pc, #136]	; 11ecc <__snprintf_chk@plt+0x9b4>
   11e40:	add	r2, pc, r2
   11e44:	push	{r4, r5, lr}
   11e48:	sub	sp, sp, #12
   11e4c:	ldr	r4, [r2, r1]
   11e50:	add	r3, sp, #8
   11e54:	str	r0, [r3, #-8]!
   11e58:	mov	r0, sp
   11e5c:	ldr	r3, [r4]
   11e60:	str	r3, [sp, #4]
   11e64:	bl	1135c <localtime@plt>
   11e68:	subs	r3, r0, #0
   11e6c:	beq	11ea8 <__snprintf_chk@plt+0x990>
   11e70:	ldr	r2, [pc, #88]	; 11ed0 <__snprintf_chk@plt+0x9b8>
   11e74:	mov	r1, #33	; 0x21
   11e78:	add	r2, pc, r2
   11e7c:	add	r5, r2, #8
   11e80:	ldr	r2, [r2, #44]	; 0x2c
   11e84:	mov	r0, r5
   11e88:	bl	11344 <strftime@plt>
   11e8c:	mov	r0, r5
   11e90:	ldr	r2, [sp, #4]
   11e94:	ldr	r3, [r4]
   11e98:	cmp	r2, r3
   11e9c:	bne	11ec4 <__snprintf_chk@plt+0x9ac>
   11ea0:	add	sp, sp, #12
   11ea4:	pop	{r4, r5, pc}
   11ea8:	ldr	r0, [sp]
   11eac:	ldr	r2, [pc, #32]	; 11ed4 <__snprintf_chk@plt+0x9bc>
   11eb0:	add	r2, pc, r2
   11eb4:	asr	r1, r0, #31
   11eb8:	add	r2, r2, #8
   11ebc:	bl	13384 <close_stdout@@Base+0x214>
   11ec0:	b	11e90 <__snprintf_chk@plt+0x978>
   11ec4:	bl	11284 <__stack_chk_fail@plt>
   11ec8:			; <UNDEFINED> instruction: 0x000181b8
   11ecc:	andeq	r0, r0, r0, lsr r1
   11ed0:	andeq	r8, r1, ip, lsr r3
   11ed4:	andeq	r8, r1, r4, lsl #6
   11ed8:	ldr	r3, [pc, #1244]	; 123bc <__snprintf_chk@plt+0xea4>
   11edc:	ldr	r2, [pc, #1244]	; 123c0 <__snprintf_chk@plt+0xea8>
   11ee0:	add	r3, pc, r3
   11ee4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ee8:	sub	sp, sp, #476	; 0x1dc
   11eec:	ldr	r2, [r3, r2]
   11ef0:	add	r6, sp, #156	; 0x9c
   11ef4:	ldr	ip, [r0, #4]
   11ef8:	mov	r4, r0
   11efc:	ldr	r3, [pc, #1216]	; 123c4 <__snprintf_chk@plt+0xeac>
   11f00:	mov	r8, r1
   11f04:	str	r2, [sp, #36]	; 0x24
   11f08:	mov	r0, r6
   11f0c:	ldr	lr, [sp, #36]	; 0x24
   11f10:	mov	r2, #12
   11f14:	str	ip, [sp]
   11f18:	mov	r1, #1
   11f1c:	add	r3, pc, r3
   11f20:	ldr	ip, [lr]
   11f24:	str	ip, [sp, #468]	; 0x1d4
   11f28:	bl	113e0 <__sprintf_chk@plt>
   11f2c:	ldrb	r2, [r4, #8]
   11f30:	cmp	r2, #47	; 0x2f
   11f34:	beq	1239c <__snprintf_chk@plt+0xe84>
   11f38:	ldr	r3, [pc, #1160]	; 123c8 <__snprintf_chk@plt+0xeb0>
   11f3c:	add	r5, r4, #8
   11f40:	add	ip, r4, #40	; 0x28
   11f44:	add	lr, sp, #168	; 0xa8
   11f48:	add	r3, pc, r3
   11f4c:	cmp	r5, ip
   11f50:	ldm	r3, {r0, r1}
   11f54:	add	r3, lr, #5
   11f58:	str	r0, [sp, #168]	; 0xa8
   11f5c:	strh	r1, [sp, #172]	; 0xac
   11f60:	bcs	11f94 <__snprintf_chk@plt+0xa7c>
   11f64:	cmp	r2, #0
   11f68:	beq	11f94 <__snprintf_chk@plt+0xa7c>
   11f6c:	rsb	r0, r5, ip
   11f70:	mov	ip, r5
   11f74:	add	r0, r3, r0
   11f78:	b	11f88 <__snprintf_chk@plt+0xa70>
   11f7c:	ldrb	r2, [ip, #1]!
   11f80:	cmp	r2, #0
   11f84:	beq	11f94 <__snprintf_chk@plt+0xa7c>
   11f88:	strb	r2, [r3], #1
   11f8c:	cmp	r3, r0
   11f90:	bne	11f7c <__snprintf_chk@plt+0xa64>
   11f94:	mov	ip, #0
   11f98:	mov	r1, lr
   11f9c:	mov	r0, #3
   11fa0:	add	r2, sp, #40	; 0x28
   11fa4:	strb	ip, [r3]
   11fa8:	bl	114d0 <__xstat64@plt>
   11fac:	cmp	r0, #0
   11fb0:	movne	r9, #63	; 0x3f
   11fb4:	beq	12174 <__snprintf_chk@plt+0xc5c>
   11fb8:	add	r8, sp, #472	; 0x1d8
   11fbc:	movw	r3, #8224	; 0x2020
   11fc0:	movt	r3, #63	; 0x3f
   11fc4:	str	r3, [r8, #-328]!	; 0xfffffeb8
   11fc8:	ldrb	r2, [r4, #76]	; 0x4c
   11fcc:	cmp	r2, #0
   11fd0:	beq	120d8 <__snprintf_chk@plt+0xbc0>
   11fd4:	add	r1, r4, #76	; 0x4c
   11fd8:	add	r0, r4, #332	; 0x14c
   11fdc:	cmp	r1, r0
   11fe0:	add	sl, sp, #208	; 0xd0
   11fe4:	bcs	12304 <__snprintf_chk@plt+0xdec>
   11fe8:	add	r0, r0, sl
   11fec:	add	r3, sl, #1
   11ff0:	rsb	r0, r1, r0
   11ff4:	b	12008 <__snprintf_chk@plt+0xaf0>
   11ff8:	ldrb	r2, [r1, #1]!
   11ffc:	add	r3, r3, #1
   12000:	cmp	r2, #0
   12004:	beq	12018 <__snprintf_chk@plt+0xb00>
   12008:	cmp	r3, r0
   1200c:	strb	r2, [r3, #-1]
   12010:	mov	ip, r3
   12014:	bne	11ff8 <__snprintf_chk@plt+0xae0>
   12018:	mov	fp, #0
   1201c:	mov	r0, sl
   12020:	strb	fp, [ip]
   12024:	mov	r1, #58	; 0x3a
   12028:	bl	113bc <strchr@plt>
   1202c:	cmp	r0, #0
   12030:	strbne	fp, [r0]
   12034:	ldrb	r3, [sp, #208]	; 0xd0
   12038:	addne	fp, r0, #1
   1203c:	moveq	fp, r0
   12040:	cmp	r3, #0
   12044:	beq	1205c <__snprintf_chk@plt+0xb44>
   12048:	ldr	r3, [pc, #892]	; 123cc <__snprintf_chk@plt+0xeb4>
   1204c:	add	r3, pc, r3
   12050:	ldrb	r3, [r3, #58]	; 0x3a
   12054:	cmp	r3, #0
   12058:	bne	12264 <__snprintf_chk@plt+0xd4c>
   1205c:	mov	r7, sl
   12060:	cmp	fp, #0
   12064:	mov	r0, r7
   12068:	beq	122bc <__snprintf_chk@plt+0xda4>
   1206c:	ldr	r3, [pc, #860]	; 123d0 <__snprintf_chk@plt+0xeb8>
   12070:	add	r3, pc, r3
   12074:	str	r3, [sp, #28]
   12078:	bl	113b0 <strlen@plt>
   1207c:	mov	r2, r0
   12080:	mov	r0, fp
   12084:	str	r2, [sp, #32]
   12088:	bl	113b0 <strlen@plt>
   1208c:	ldr	r3, [sp, #28]
   12090:	ldr	r2, [sp, #32]
   12094:	ldr	r1, [r3, #60]	; 0x3c
   12098:	add	r0, r2, r0
   1209c:	add	r2, r0, #4
   120a0:	ldr	r0, [r3, #64]	; 0x40
   120a4:	cmp	r2, r1
   120a8:	bhi	12290 <__snprintf_chk@plt+0xd78>
   120ac:	ldr	r3, [pc, #800]	; 123d4 <__snprintf_chk@plt+0xebc>
   120b0:	mov	r1, #1
   120b4:	stm	sp, {r7, fp}
   120b8:	mvn	r2, #0
   120bc:	add	r3, pc, r3
   120c0:	bl	113e0 <__sprintf_chk@plt>
   120c4:	cmp	r7, sl
   120c8:	beq	120f8 <__snprintf_chk@plt+0xbe0>
   120cc:	mov	r0, r7
   120d0:	bl	11218 <free@plt>
   120d4:	b	120f8 <__snprintf_chk@plt+0xbe0>
   120d8:	ldr	sl, [pc, #760]	; 123d8 <__snprintf_chk@plt+0xec0>
   120dc:	add	sl, pc, sl
   120e0:	ldr	r3, [sl, #60]	; 0x3c
   120e4:	cmp	r3, #0
   120e8:	beq	1222c <__snprintf_chk@plt+0xd14>
   120ec:	ldr	r2, [sl, #64]	; 0x40
   120f0:	mov	r3, #0
   120f4:	strb	r3, [r2]
   120f8:	ldr	r0, [r4, #340]	; 0x154
   120fc:	add	r4, r4, #44	; 0x2c
   12100:	bl	11e38 <__snprintf_chk@plt+0x920>
   12104:	ldr	r3, [pc, #720]	; 123dc <__snprintf_chk@plt+0xec4>
   12108:	ldr	lr, [pc, #720]	; 123e0 <__snprintf_chk@plt+0xec8>
   1210c:	mov	r1, r4
   12110:	add	r3, pc, r3
   12114:	ldr	ip, [pc, #712]	; 123e4 <__snprintf_chk@plt+0xecc>
   12118:	add	lr, pc, lr
   1211c:	ldr	r3, [r3, #64]	; 0x40
   12120:	add	ip, pc, ip
   12124:	str	r5, [sp]
   12128:	cmp	r3, #0
   1212c:	str	r8, [sp, #8]
   12130:	str	r6, [sp, #12]
   12134:	movne	lr, r3
   12138:	str	ip, [sp, #20]
   1213c:	str	lr, [sp, #16]
   12140:	mov	r2, r0
   12144:	mov	r0, #32
   12148:	str	r2, [sp, #4]
   1214c:	mov	r3, r0
   12150:	mov	r2, r9
   12154:	bl	11b24 <__snprintf_chk@plt+0x60c>
   12158:	ldr	r1, [sp, #36]	; 0x24
   1215c:	ldr	r2, [sp, #468]	; 0x1d4
   12160:	ldr	r3, [r1]
   12164:	cmp	r2, r3
   12168:	bne	123b8 <__snprintf_chk@plt+0xea0>
   1216c:	add	sp, sp, #476	; 0x1dc
   12170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12174:	ldr	r0, [pc, #620]	; 123e8 <__snprintf_chk@plt+0xed0>
   12178:	add	r0, pc, r0
   1217c:	bl	1150c <getgrnam@plt>
   12180:	cmp	r0, #0
   12184:	beq	12198 <__snprintf_chk@plt+0xc80>
   12188:	ldr	r3, [r0, #8]
   1218c:	ldr	r2, [sp, #68]	; 0x44
   12190:	cmp	r2, r3
   12194:	beq	12250 <__snprintf_chk@plt+0xd38>
   12198:	mov	r9, #45	; 0x2d
   1219c:	ldr	sl, [sp, #112]	; 0x70
   121a0:	cmp	sl, #0
   121a4:	beq	11fb8 <__snprintf_chk@plt+0xaa0>
   121a8:	ldr	r0, [pc, #572]	; 123ec <__snprintf_chk@plt+0xed4>
   121ac:	add	r0, pc, r0
   121b0:	ldr	r3, [r0, #4]
   121b4:	cmp	r3, #-2147483648	; 0x80000000
   121b8:	beq	122f8 <__snprintf_chk@plt+0xde0>
   121bc:	cmp	sl, r8
   121c0:	ble	12278 <__snprintf_chk@plt+0xd60>
   121c4:	ldr	r2, [pc, #548]	; 123f0 <__snprintf_chk@plt+0xed8>
   121c8:	movw	r3, #44673	; 0xae81
   121cc:	movt	r3, #65534	; 0xfffe
   121d0:	add	r2, pc, r2
   121d4:	ldr	r2, [r2, #4]
   121d8:	add	r3, r2, r3
   121dc:	cmp	sl, r3
   121e0:	blt	12278 <__snprintf_chk@plt+0xd60>
   121e4:	cmp	sl, r2
   121e8:	bgt	12278 <__snprintf_chk@plt+0xd60>
   121ec:	rsb	sl, sl, r2
   121f0:	ldr	r0, [pc, #508]	; 123f4 <__snprintf_chk@plt+0xedc>
   121f4:	cmp	sl, #59	; 0x3b
   121f8:	add	r0, pc, r0
   121fc:	bgt	1230c <__snprintf_chk@plt+0xdf4>
   12200:	add	r8, sp, #144	; 0x90
   12204:	mov	r3, #10
   12208:	str	r3, [sp]
   1220c:	mov	r1, #1
   12210:	ldr	r3, [pc, #480]	; 123f8 <__snprintf_chk@plt+0xee0>
   12214:	mov	r2, #11
   12218:	str	r0, [sp, #4]
   1221c:	mov	r0, r8
   12220:	add	r3, pc, r3
   12224:	bl	113e0 <__sprintf_chk@plt>
   12228:	b	11fc8 <__snprintf_chk@plt+0xab0>
   1222c:	mov	fp, #1
   12230:	ldr	r0, [sl, #64]	; 0x40
   12234:	str	fp, [sl, #60]	; 0x3c
   12238:	bl	11218 <free@plt>
   1223c:	mov	r0, fp
   12240:	bl	15248 <close_stdout@@Base+0x20d8>
   12244:	mov	r2, r0
   12248:	str	r0, [sl, #64]	; 0x40
   1224c:	b	120f0 <__snprintf_chk@plt+0xbd8>
   12250:	ldr	r3, [sp, #56]	; 0x38
   12254:	tst	r3, #16
   12258:	movne	r9, #43	; 0x2b
   1225c:	moveq	r9, #45	; 0x2d
   12260:	b	1219c <__snprintf_chk@plt+0xc84>
   12264:	mov	r0, sl
   12268:	bl	13120 <__snprintf_chk@plt+0x1c08>
   1226c:	subs	r7, r0, #0
   12270:	bne	12060 <__snprintf_chk@plt+0xb48>
   12274:	b	1205c <__snprintf_chk@plt+0xb44>
   12278:	ldr	r1, [pc, #380]	; 123fc <__snprintf_chk@plt+0xee4>
   1227c:	mov	r2, #5
   12280:	mov	r0, #0
   12284:	add	r1, pc, r1
   12288:	bl	1126c <dcgettext@plt>
   1228c:	b	12200 <__snprintf_chk@plt+0xce8>
   12290:	str	r2, [r3, #60]	; 0x3c
   12294:	str	r3, [sp, #28]
   12298:	str	r2, [sp, #32]
   1229c:	bl	11218 <free@plt>
   122a0:	ldr	r2, [sp, #32]
   122a4:	mov	r0, r2
   122a8:	bl	15248 <close_stdout@@Base+0x20d8>
   122ac:	ldr	r3, [sp, #28]
   122b0:	mov	r2, r0
   122b4:	str	r2, [r3, #64]	; 0x40
   122b8:	b	120ac <__snprintf_chk@plt+0xb94>
   122bc:	bl	113b0 <strlen@plt>
   122c0:	ldr	fp, [pc, #312]	; 12400 <__snprintf_chk@plt+0xee8>
   122c4:	add	fp, pc, fp
   122c8:	ldr	r2, [fp, #60]	; 0x3c
   122cc:	add	r3, r0, #3
   122d0:	ldr	r0, [fp, #64]	; 0x40
   122d4:	cmp	r3, r2
   122d8:	bhi	12378 <__snprintf_chk@plt+0xe60>
   122dc:	ldr	r3, [pc, #288]	; 12404 <__snprintf_chk@plt+0xeec>
   122e0:	mov	r1, #1
   122e4:	str	r7, [sp]
   122e8:	mvn	r2, #0
   122ec:	add	r3, pc, r3
   122f0:	bl	113e0 <__sprintf_chk@plt>
   122f4:	b	120c4 <__snprintf_chk@plt+0xbac>
   122f8:	add	r0, r0, #4
   122fc:	bl	11254 <time@plt>
   12300:	b	121bc <__snprintf_chk@plt+0xca4>
   12304:	mov	ip, sl
   12308:	b	12018 <__snprintf_chk@plt+0xb00>
   1230c:	movw	r3, #46021	; 0xb3c5
   12310:	movt	r3, #37282	; 0x91a2
   12314:	asr	r0, sl, #31
   12318:	mov	fp, #3600	; 0xe10
   1231c:	smull	r1, r3, r3, sl
   12320:	movw	ip, #34953	; 0x8889
   12324:	movt	ip, #34952	; 0x8888
   12328:	ldr	r8, [pc, #216]	; 12408 <__snprintf_chk@plt+0xef0>
   1232c:	add	lr, r3, sl
   12330:	ldr	r3, [pc, #212]	; 1240c <__snprintf_chk@plt+0xef4>
   12334:	add	r8, pc, r8
   12338:	mov	r1, #1
   1233c:	rsb	lr, r0, lr, asr #11
   12340:	str	lr, [sp]
   12344:	add	r8, r8, #48	; 0x30
   12348:	mov	r2, #10
   1234c:	mls	sl, fp, lr, sl
   12350:	add	r3, pc, r3
   12354:	mov	r0, r8
   12358:	smull	lr, ip, ip, sl
   1235c:	asr	lr, sl, #31
   12360:	add	ip, ip, sl
   12364:	rsb	ip, lr, ip, asr #5
   12368:	str	ip, [sp, #4]
   1236c:	bl	113e0 <__sprintf_chk@plt>
   12370:	mov	r0, r8
   12374:	b	12200 <__snprintf_chk@plt+0xce8>
   12378:	str	r3, [fp, #60]	; 0x3c
   1237c:	str	r3, [sp, #28]
   12380:	bl	11218 <free@plt>
   12384:	ldr	r3, [sp, #28]
   12388:	mov	r0, r3
   1238c:	bl	15248 <close_stdout@@Base+0x20d8>
   12390:	mov	r3, r0
   12394:	str	r3, [fp, #64]	; 0x40
   12398:	b	122dc <__snprintf_chk@plt+0xdc4>
   1239c:	add	r5, r4, #8
   123a0:	add	ip, r4, #40	; 0x28
   123a4:	add	lr, sp, #168	; 0xa8
   123a8:	cmp	r5, ip
   123ac:	mov	r3, lr
   123b0:	bcc	11f6c <__snprintf_chk@plt+0xa54>
   123b4:	b	11f94 <__snprintf_chk@plt+0xa7c>
   123b8:	bl	11284 <__stack_chk_fail@plt>
   123bc:	andeq	r8, r1, r8, lsl r1
   123c0:	andeq	r0, r0, r0, lsr r1
   123c4:	andeq	r6, r0, r8, ror #13
   123c8:	andeq	r6, r0, r0, asr #13
   123cc:	andeq	r8, r1, r8, ror #2
   123d0:	andeq	r8, r1, r4, asr #2
   123d4:	andeq	r6, r0, r4, ror r5
   123d8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   123dc:	andeq	r8, r1, r4, lsr #1
   123e0:	andeq	r6, r0, r4, lsl #23
   123e4:	andeq	r6, r0, ip, ror fp
   123e8:	muleq	r0, r8, r4
   123ec:			; <UNDEFINED> instruction: 0x00017fb4
   123f0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   123f4:	andeq	r6, r0, r4, lsl #8
   123f8:	andeq	r6, r0, r8, lsl #8
   123fc:	muleq	r0, ip, r3
   12400:	strdeq	r7, [r1], -r0
   12404:	andeq	r6, r0, ip, asr #6
   12408:	andeq	r7, r1, r0, lsl #29
   1240c:	andeq	r6, r0, r4, asr #5
   12410:	ldr	ip, [pc, #2216]	; 12cc0 <__snprintf_chk@plt+0x17a8>
   12414:	mov	r3, r1
   12418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1241c:	add	ip, pc, ip
   12420:	ldr	lr, [pc, #2204]	; 12cc4 <__snprintf_chk@plt+0x17ac>
   12424:	sub	sp, sp, #100	; 0x64
   12428:	add	r1, sp, #72	; 0x48
   1242c:	add	r2, sp, #76	; 0x4c
   12430:	mov	r4, r0
   12434:	ldr	lr, [ip, lr]
   12438:	ldr	ip, [lr]
   1243c:	str	lr, [sp, #36]	; 0x24
   12440:	str	ip, [sp, #92]	; 0x5c
   12444:	bl	15578 <close_stdout@@Base+0x2408>
   12448:	cmp	r0, #0
   1244c:	bne	12914 <__snprintf_chk@plt+0x13fc>
   12450:	ldr	r3, [pc, #2160]	; 12cc8 <__snprintf_chk@plt+0x17b0>
   12454:	add	r3, pc, r3
   12458:	ldrb	r4, [r3, #68]	; 0x44
   1245c:	cmp	r4, #0
   12460:	bne	12764 <__snprintf_chk@plt+0x124c>
   12464:	ldrb	r3, [r3, #69]	; 0x45
   12468:	ldr	r5, [sp, #72]	; 0x48
   1246c:	cmp	r3, #0
   12470:	ldr	r7, [sp, #76]	; 0x4c
   12474:	bne	12b10 <__snprintf_chk@plt+0x15f8>
   12478:	ldr	r3, [pc, #2124]	; 12ccc <__snprintf_chk@plt+0x17b4>
   1247c:	add	r3, pc, r3
   12480:	ldrb	r3, [r3, #70]	; 0x46
   12484:	cmp	r3, #0
   12488:	bne	12ae4 <__snprintf_chk@plt+0x15cc>
   1248c:	cmp	r5, #0
   12490:	beq	12740 <__snprintf_chk@plt+0x1228>
   12494:	ldr	r1, [pc, #2100]	; 12cd0 <__snprintf_chk@plt+0x17b8>
   12498:	add	r6, r7, #384	; 0x180
   1249c:	ldr	r3, [pc, #2096]	; 12cd4 <__snprintf_chk@plt+0x17bc>
   124a0:	add	r4, r7, #8
   124a4:	add	r1, pc, r1
   124a8:	str	r1, [sp, #56]	; 0x38
   124ac:	ldr	r1, [pc, #2084]	; 12cd8 <__snprintf_chk@plt+0x17c0>
   124b0:	add	r3, pc, r3
   124b4:	ldr	lr, [pc, #2080]	; 12cdc <__snprintf_chk@plt+0x17c4>
   124b8:	mov	r8, r6
   124bc:	add	r1, pc, r1
   124c0:	str	r3, [sp, #48]	; 0x30
   124c4:	str	r1, [sp, #64]	; 0x40
   124c8:	add	lr, pc, lr
   124cc:	ldr	r3, [pc, #2060]	; 12ce0 <__snprintf_chk@plt+0x17c8>
   124d0:	ldr	r1, [pc, #2060]	; 12ce4 <__snprintf_chk@plt+0x17cc>
   124d4:	str	lr, [sp, #60]	; 0x3c
   124d8:	add	r3, pc, r3
   124dc:	mov	lr, #-2147483648	; 0x80000000
   124e0:	add	r1, pc, r1
   124e4:	str	r3, [sp, #68]	; 0x44
   124e8:	str	lr, [sp, #40]	; 0x28
   124ec:	str	r1, [sp, #52]	; 0x34
   124f0:	b	12534 <__snprintf_chk@plt+0x101c>
   124f4:	mov	r0, fp
   124f8:	mov	r1, r4
   124fc:	mov	r2, #32
   12500:	bl	114dc <strncmp@plt>
   12504:	cmp	r0, #0
   12508:	beq	12548 <__snprintf_chk@plt+0x1030>
   1250c:	ldrsh	r3, [r4, #-8]
   12510:	cmp	r3, #2
   12514:	add	r8, r8, #384	; 0x180
   12518:	add	r4, r4, #384	; 0x180
   1251c:	ldreq	r7, [r7, #340]	; 0x154
   12520:	streq	r7, [sp, #40]	; 0x28
   12524:	subs	r5, r5, #1
   12528:	mov	r7, r6
   1252c:	beq	12740 <__snprintf_chk@plt+0x1228>
   12530:	add	r6, r6, #384	; 0x180
   12534:	ldr	r3, [pc, #1964]	; 12ce8 <__snprintf_chk@plt+0x17d0>
   12538:	add	r3, pc, r3
   1253c:	ldrb	r3, [r3, #70]	; 0x46
   12540:	cmp	r3, #0
   12544:	bne	124f4 <__snprintf_chk@plt+0xfdc>
   12548:	ldr	r3, [pc, #1948]	; 12cec <__snprintf_chk@plt+0x17d4>
   1254c:	add	r3, pc, r3
   12550:	ldrb	r3, [r3, #71]	; 0x47
   12554:	cmp	r3, #0
   12558:	beq	12710 <__snprintf_chk@plt+0x11f8>
   1255c:	ldrb	r3, [r7, #44]	; 0x2c
   12560:	cmp	r3, #0
   12564:	ldrh	r3, [r4, #-8]
   12568:	beq	12574 <__snprintf_chk@plt+0x105c>
   1256c:	cmp	r3, #7
   12570:	beq	12c00 <__snprintf_chk@plt+0x16e8>
   12574:	ldr	r2, [pc, #1908]	; 12cf0 <__snprintf_chk@plt+0x17d8>
   12578:	sxth	r3, r3
   1257c:	add	r2, pc, r2
   12580:	ldrb	r2, [r2, #72]	; 0x48
   12584:	cmp	r2, #0
   12588:	beq	12594 <__snprintf_chk@plt+0x107c>
   1258c:	cmp	r3, #1
   12590:	beq	127b8 <__snprintf_chk@plt+0x12a0>
   12594:	ldr	r2, [pc, #1880]	; 12cf4 <__snprintf_chk@plt+0x17dc>
   12598:	add	r2, pc, r2
   1259c:	ldrb	r2, [r2, #84]	; 0x54
   125a0:	cmp	r2, #0
   125a4:	beq	125b0 <__snprintf_chk@plt+0x1098>
   125a8:	cmp	r3, #2
   125ac:	beq	12934 <__snprintf_chk@plt+0x141c>
   125b0:	ldr	r2, [pc, #1856]	; 12cf8 <__snprintf_chk@plt+0x17e0>
   125b4:	add	r2, pc, r2
   125b8:	ldrb	r2, [r2, #85]	; 0x55
   125bc:	cmp	r2, #0
   125c0:	beq	125cc <__snprintf_chk@plt+0x10b4>
   125c4:	cmp	r3, #3
   125c8:	beq	129c4 <__snprintf_chk@plt+0x14ac>
   125cc:	ldr	r2, [pc, #1832]	; 12cfc <__snprintf_chk@plt+0x17e4>
   125d0:	add	r2, pc, r2
   125d4:	ldrb	r2, [r2, #86]	; 0x56
   125d8:	cmp	r2, #0
   125dc:	beq	125e8 <__snprintf_chk@plt+0x10d0>
   125e0:	cmp	r3, #5
   125e4:	beq	129f0 <__snprintf_chk@plt+0x14d8>
   125e8:	ldr	r2, [pc, #1808]	; 12d00 <__snprintf_chk@plt+0x17e8>
   125ec:	add	r2, pc, r2
   125f0:	ldrb	r2, [r2, #87]	; 0x57
   125f4:	cmp	r2, #0
   125f8:	beq	12604 <__snprintf_chk@plt+0x10ec>
   125fc:	cmp	r3, #6
   12600:	beq	12a6c <__snprintf_chk@plt+0x1554>
   12604:	ldr	r9, [pc, #1784]	; 12d04 <__snprintf_chk@plt+0x17ec>
   12608:	add	r9, pc, r9
   1260c:	ldrb	r2, [r9, #88]	; 0x58
   12610:	cmp	r2, #0
   12614:	beq	12510 <__snprintf_chk@plt+0xff8>
   12618:	cmp	r3, #8
   1261c:	bne	12510 <__snprintf_chk@plt+0xff8>
   12620:	mov	r0, r7
   12624:	add	r3, sp, #80	; 0x50
   12628:	str	r3, [sp, #44]	; 0x2c
   1262c:	bl	11dd0 <__snprintf_chk@plt+0x8b8>
   12630:	ldr	ip, [r4, #-4]
   12634:	mov	r1, #1
   12638:	ldr	r3, [sp, #56]	; 0x38
   1263c:	mov	r2, #12
   12640:	str	ip, [sp]
   12644:	mov	sl, r0
   12648:	add	r0, sp, #80	; 0x50
   1264c:	bl	113e0 <__sprintf_chk@plt>
   12650:	ldr	r3, [r9, #92]	; 0x5c
   12654:	cmp	r3, #0
   12658:	beq	12c14 <__snprintf_chk@plt+0x16fc>
   1265c:	ldr	lr, [sp, #48]	; 0x30
   12660:	mov	r2, #5
   12664:	ldr	r1, [sp, #60]	; 0x3c
   12668:	mov	r0, #0
   1266c:	ldr	r9, [lr, #92]	; 0x5c
   12670:	bl	1126c <dcgettext@plt>
   12674:	ldrsh	r3, [r8, #-52]	; 0xffffffcc
   12678:	mov	r2, #5
   1267c:	ldr	r1, [sp, #64]	; 0x40
   12680:	str	r3, [sp, #28]
   12684:	mov	ip, r0
   12688:	mov	r0, #0
   1268c:	str	ip, [sp, #32]
   12690:	bl	1126c <dcgettext@plt>
   12694:	ldr	ip, [sp, #32]
   12698:	mov	r1, #1
   1269c:	ldr	r3, [sp, #28]
   126a0:	mvn	r2, #0
   126a4:	str	ip, [sp]
   126a8:	str	r3, [sp, #4]
   126ac:	ldr	r3, [sp, #68]	; 0x44
   126b0:	str	r0, [sp, #8]
   126b4:	mov	r0, r9
   126b8:	ldrsh	ip, [r8, #-50]	; 0xffffffce
   126bc:	str	ip, [sp, #12]
   126c0:	bl	113e0 <__sprintf_chk@plt>
   126c4:	ldr	r0, [r7, #340]	; 0x154
   126c8:	bl	11e38 <__snprintf_chk@plt+0x920>
   126cc:	ldr	r1, [sp, #52]	; 0x34
   126d0:	ldr	lr, [sp, #48]	; 0x30
   126d4:	add	r3, sp, #80	; 0x50
   126d8:	str	r4, [sp]
   126dc:	mov	r2, #32
   126e0:	str	r3, [sp, #12]
   126e4:	mov	r3, r2
   126e8:	str	r1, [sp, #8]
   126ec:	str	sl, [sp, #16]
   126f0:	str	r0, [sp, #4]
   126f4:	mvn	r0, #0
   126f8:	ldr	ip, [lr, #92]	; 0x5c
   126fc:	str	ip, [sp, #20]
   12700:	bl	11b24 <__snprintf_chk@plt+0x60c>
   12704:	mov	r0, sl
   12708:	bl	11218 <free@plt>
   1270c:	b	1250c <__snprintf_chk@plt+0xff4>
   12710:	ldrh	r3, [r4, #-8]
   12714:	b	12574 <__snprintf_chk@plt+0x105c>
   12718:	mov	r6, r5
   1271c:	ldr	r1, [pc, #1508]	; 12d08 <__snprintf_chk@plt+0x17f0>
   12720:	mov	r2, #5
   12724:	mov	r0, #0
   12728:	add	r1, pc, r1
   1272c:	bl	1126c <dcgettext@plt>
   12730:	mov	r2, r6
   12734:	mov	r1, r0
   12738:	mov	r0, #1
   1273c:	bl	11428 <__printf_chk@plt>
   12740:	ldr	r0, [sp, #76]	; 0x4c
   12744:	bl	11218 <free@plt>
   12748:	ldr	r1, [sp, #36]	; 0x24
   1274c:	ldr	r2, [sp, #92]	; 0x5c
   12750:	ldr	r3, [r1]
   12754:	cmp	r2, r3
   12758:	bne	12cbc <__snprintf_chk@plt+0x17a4>
   1275c:	add	sp, sp, #100	; 0x64
   12760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12764:	ldr	r5, [sp, #72]	; 0x48
   12768:	ldr	r4, [sp, #76]	; 0x4c
   1276c:	cmp	r5, #0
   12770:	beq	12718 <__snprintf_chk@plt+0x1200>
   12774:	ldr	r7, [pc, #1424]	; 12d0c <__snprintf_chk@plt+0x17f4>
   12778:	mov	r6, #0
   1277c:	ldr	r8, [pc, #1420]	; 12d10 <__snprintf_chk@plt+0x17f8>
   12780:	ldr	r9, [pc, #1420]	; 12d14 <__snprintf_chk@plt+0x17fc>
   12784:	add	r7, pc, r7
   12788:	add	r8, pc, r8
   1278c:	add	r9, pc, r9
   12790:	ldrb	r3, [r4, #44]	; 0x2c
   12794:	cmp	r3, #0
   12798:	beq	127a8 <__snprintf_chk@plt+0x1290>
   1279c:	ldrsh	r3, [r4]
   127a0:	cmp	r3, #7
   127a4:	beq	12990 <__snprintf_chk@plt+0x1478>
   127a8:	subs	r5, r5, #1
   127ac:	add	r4, r4, #384	; 0x180
   127b0:	bne	12790 <__snprintf_chk@plt+0x1278>
   127b4:	b	1271c <__snprintf_chk@plt+0x1204>
   127b8:	ldr	r9, [r4, #-4]
   127bc:	mov	r3, #255	; 0xff
   127c0:	ldr	sl, [pc, #1360]	; 12d18 <__snprintf_chk@plt+0x1800>
   127c4:	movt	r3, #32768	; 0x8000
   127c8:	cmp	r9, #0
   127cc:	add	r2, r9, #255	; 0xff
   127d0:	and	r3, r9, r3
   127d4:	add	sl, pc, sl
   127d8:	movlt	r9, r2
   127dc:	cmp	r3, #0
   127e0:	sublt	r3, r3, #1
   127e4:	ldr	r0, [sl, #76]	; 0x4c
   127e8:	ubfx	r9, r9, #8, #8
   127ec:	mvnlt	r3, r3, lsl #24
   127f0:	mvnlt	r3, r3, lsr #24
   127f4:	addlt	r3, r3, #1
   127f8:	cmp	r0, #0
   127fc:	beq	12c90 <__snprintf_chk@plt+0x1778>
   12800:	ldr	sl, [pc, #1300]	; 12d1c <__snprintf_chk@plt+0x1804>
   12804:	mov	r2, #5
   12808:	ldr	r1, [pc, #1296]	; 12d20 <__snprintf_chk@plt+0x1808>
   1280c:	mov	r0, #0
   12810:	add	sl, pc, sl
   12814:	add	r1, pc, r1
   12818:	ldr	ip, [sl, #76]	; 0x4c
   1281c:	str	r3, [sp, #28]
   12820:	str	ip, [sp, #32]
   12824:	bl	1126c <dcgettext@plt>
   12828:	ldr	r3, [sp, #28]
   1282c:	mov	r1, #1
   12830:	ldr	ip, [sp, #32]
   12834:	mvn	r2, #0
   12838:	uxtb	r3, r3
   1283c:	str	r3, [sp, #4]
   12840:	ldr	r3, [pc, #1244]	; 12d24 <__snprintf_chk@plt+0x180c>
   12844:	add	r3, pc, r3
   12848:	str	r0, [sp]
   1284c:	mov	r0, ip
   12850:	bl	113e0 <__sprintf_chk@plt>
   12854:	ldr	r0, [sl, #80]	; 0x50
   12858:	cmp	r0, #0
   1285c:	beq	12c6c <__snprintf_chk@plt+0x1754>
   12860:	ldr	sl, [pc, #1216]	; 12d28 <__snprintf_chk@plt+0x1810>
   12864:	mov	r2, #5
   12868:	ldr	r1, [pc, #1212]	; 12d2c <__snprintf_chk@plt+0x1814>
   1286c:	mov	r0, #0
   12870:	add	sl, pc, sl
   12874:	add	r1, pc, r1
   12878:	ldr	ip, [sl, #80]	; 0x50
   1287c:	str	ip, [sp, #32]
   12880:	bl	1126c <dcgettext@plt>
   12884:	cmp	r9, #78	; 0x4e
   12888:	ldr	ip, [sp, #32]
   1288c:	mvn	r2, #0
   12890:	mov	r1, #1
   12894:	movne	r3, r9
   12898:	moveq	r3, #83	; 0x53
   1289c:	sub	r9, r9, #32
   128a0:	str	r3, [sp, #4]
   128a4:	ldr	r3, [pc, #1156]	; 12d30 <__snprintf_chk@plt+0x1818>
   128a8:	str	r0, [sp]
   128ac:	mov	r0, ip
   128b0:	add	r3, pc, r3
   128b4:	bl	113e0 <__sprintf_chk@plt>
   128b8:	ldr	r3, [sl, #76]	; 0x4c
   128bc:	ldr	r0, [r7, #340]	; 0x154
   128c0:	str	r3, [sp, #28]
   128c4:	bl	11e38 <__snprintf_chk@plt+0x920>
   128c8:	cmp	r9, #94	; 0x5e
   128cc:	ldr	r3, [sp, #28]
   128d0:	ldrls	ip, [sl, #80]	; 0x50
   128d4:	mov	r2, r0
   128d8:	bhi	12bf4 <__snprintf_chk@plt+0x16dc>
   128dc:	ldr	r1, [pc, #1104]	; 12d34 <__snprintf_chk@plt+0x181c>
   128e0:	mvn	r0, #0
   128e4:	str	r3, [sp]
   128e8:	mov	r3, r0
   128ec:	add	r1, pc, r1
   128f0:	str	r2, [sp, #4]
   128f4:	str	ip, [sp, #16]
   128f8:	mov	r2, #32
   128fc:	str	r1, [sp, #8]
   12900:	str	r1, [sp, #12]
   12904:	str	r1, [sp, #20]
   12908:	bl	11b24 <__snprintf_chk@plt+0x60c>
   1290c:	ldrsh	r3, [r4, #-8]
   12910:	b	12510 <__snprintf_chk@plt+0xff8>
   12914:	bl	113d4 <__errno_location@plt>
   12918:	ldr	r2, [pc, #1048]	; 12d38 <__snprintf_chk@plt+0x1820>
   1291c:	mov	r3, r4
   12920:	add	r2, pc, r2
   12924:	ldr	r1, [r0]
   12928:	mov	r0, #1
   1292c:	bl	112fc <error@plt>
   12930:	b	12450 <__snprintf_chk@plt+0xf38>
   12934:	ldr	r1, [pc, #1024]	; 12d3c <__snprintf_chk@plt+0x1824>
   12938:	mov	r2, #5
   1293c:	mov	r0, #0
   12940:	add	r1, pc, r1
   12944:	bl	1126c <dcgettext@plt>
   12948:	mov	r9, r0
   1294c:	ldr	r0, [r7, #340]	; 0x154
   12950:	bl	11e38 <__snprintf_chk@plt+0x920>
   12954:	ldr	r3, [pc, #996]	; 12d40 <__snprintf_chk@plt+0x1828>
   12958:	add	r3, pc, r3
   1295c:	str	r0, [sp, #4]
   12960:	mvn	r0, #0
   12964:	str	r3, [sp, #8]
   12968:	mov	r1, r3
   1296c:	str	r3, [sp, #12]
   12970:	mov	r2, #32
   12974:	str	r3, [sp, #16]
   12978:	str	r3, [sp, #20]
   1297c:	mov	r3, r0
   12980:	str	r9, [sp]
   12984:	bl	11b24 <__snprintf_chk@plt+0x60c>
   12988:	ldrsh	r3, [r4, #-8]
   1298c:	b	12510 <__snprintf_chk@plt+0xff8>
   12990:	mov	r0, r4
   12994:	add	r6, r6, #1
   12998:	bl	15518 <close_stdout@@Base+0x23a8>
   1299c:	mov	r2, r7
   129a0:	mov	r1, r8
   129a4:	mov	r7, r9
   129a8:	mov	r3, r0
   129ac:	mov	sl, r0
   129b0:	mov	r0, #1
   129b4:	bl	11428 <__printf_chk@plt>
   129b8:	mov	r0, sl
   129bc:	bl	11218 <free@plt>
   129c0:	b	127a8 <__snprintf_chk@plt+0x1290>
   129c4:	ldr	r1, [pc, #888]	; 12d44 <__snprintf_chk@plt+0x182c>
   129c8:	mov	r2, #5
   129cc:	mov	r0, #0
   129d0:	add	r1, pc, r1
   129d4:	bl	1126c <dcgettext@plt>
   129d8:	mov	r9, r0
   129dc:	ldr	r0, [r7, #340]	; 0x154
   129e0:	bl	11e38 <__snprintf_chk@plt+0x920>
   129e4:	ldr	r3, [pc, #860]	; 12d48 <__snprintf_chk@plt+0x1830>
   129e8:	add	r3, pc, r3
   129ec:	b	1295c <__snprintf_chk@plt+0x1444>
   129f0:	mov	r0, r7
   129f4:	add	sl, sp, #80	; 0x50
   129f8:	bl	11dd0 <__snprintf_chk@plt+0x8b8>
   129fc:	ldr	ip, [r4, #-4]
   12a00:	ldr	r3, [pc, #836]	; 12d4c <__snprintf_chk@plt+0x1834>
   12a04:	mov	r1, #1
   12a08:	mov	r2, #12
   12a0c:	add	r3, pc, r3
   12a10:	str	ip, [sp]
   12a14:	mov	r9, r0
   12a18:	mov	r0, sl
   12a1c:	bl	113e0 <__sprintf_chk@plt>
   12a20:	ldr	r0, [r7, #340]	; 0x154
   12a24:	bl	11e38 <__snprintf_chk@plt+0x920>
   12a28:	ldr	ip, [pc, #800]	; 12d50 <__snprintf_chk@plt+0x1838>
   12a2c:	mov	r2, #32
   12a30:	str	sl, [sp, #12]
   12a34:	add	ip, pc, ip
   12a38:	mov	r3, r2
   12a3c:	str	r9, [sp, #16]
   12a40:	mov	r1, ip
   12a44:	str	r4, [sp]
   12a48:	str	ip, [sp, #8]
   12a4c:	str	ip, [sp, #20]
   12a50:	str	r0, [sp, #4]
   12a54:	mvn	r0, #0
   12a58:	bl	11b24 <__snprintf_chk@plt+0x60c>
   12a5c:	mov	r0, r9
   12a60:	bl	11218 <free@plt>
   12a64:	ldrsh	r3, [r4, #-8]
   12a68:	b	12510 <__snprintf_chk@plt+0xff8>
   12a6c:	mov	r0, r7
   12a70:	add	sl, sp, #80	; 0x50
   12a74:	bl	11dd0 <__snprintf_chk@plt+0x8b8>
   12a78:	ldr	ip, [r4, #-4]
   12a7c:	ldr	r3, [pc, #720]	; 12d54 <__snprintf_chk@plt+0x183c>
   12a80:	mov	r1, #1
   12a84:	mov	r2, #12
   12a88:	add	r3, pc, r3
   12a8c:	str	ip, [sp]
   12a90:	mov	r9, r0
   12a94:	mov	r0, sl
   12a98:	bl	113e0 <__sprintf_chk@plt>
   12a9c:	ldr	r1, [pc, #692]	; 12d58 <__snprintf_chk@plt+0x1840>
   12aa0:	mov	r2, #5
   12aa4:	mov	r0, #0
   12aa8:	add	r1, pc, r1
   12aac:	bl	1126c <dcgettext@plt>
   12ab0:	mov	r1, r0
   12ab4:	ldr	r0, [r7, #340]	; 0x154
   12ab8:	str	r1, [sp, #32]
   12abc:	bl	11e38 <__snprintf_chk@plt+0x920>
   12ac0:	ldr	ip, [pc, #660]	; 12d5c <__snprintf_chk@plt+0x1844>
   12ac4:	mov	r2, #32
   12ac8:	str	sl, [sp, #12]
   12acc:	mov	r3, r2
   12ad0:	add	ip, pc, ip
   12ad4:	str	r9, [sp, #16]
   12ad8:	ldr	r1, [sp, #32]
   12adc:	str	r4, [sp]
   12ae0:	b	12a48 <__snprintf_chk@plt+0x1530>
   12ae4:	mov	r0, #0
   12ae8:	bl	113a4 <ttyname@plt>
   12aec:	subs	fp, r0, #0
   12af0:	beq	12740 <__snprintf_chk@plt+0x1228>
   12af4:	ldr	r1, [pc, #612]	; 12d60 <__snprintf_chk@plt+0x1848>
   12af8:	mov	r2, #5
   12afc:	add	r1, pc, r1
   12b00:	bl	114dc <strncmp@plt>
   12b04:	cmp	r0, #0
   12b08:	addeq	fp, fp, #5
   12b0c:	b	1248c <__snprintf_chk@plt+0xf74>
   12b10:	ldr	r1, [pc, #588]	; 12d64 <__snprintf_chk@plt+0x184c>
   12b14:	mov	r0, r4
   12b18:	mov	r2, #5
   12b1c:	add	r1, pc, r1
   12b20:	bl	1126c <dcgettext@plt>
   12b24:	ldr	r1, [pc, #572]	; 12d68 <__snprintf_chk@plt+0x1850>
   12b28:	mov	r2, #5
   12b2c:	add	r1, pc, r1
   12b30:	mov	sl, r0
   12b34:	mov	r0, r4
   12b38:	bl	1126c <dcgettext@plt>
   12b3c:	ldr	r1, [pc, #552]	; 12d6c <__snprintf_chk@plt+0x1854>
   12b40:	mov	r2, #5
   12b44:	add	r1, pc, r1
   12b48:	mov	r3, r0
   12b4c:	mov	r0, r4
   12b50:	str	r3, [sp, #28]
   12b54:	bl	1126c <dcgettext@plt>
   12b58:	ldr	r1, [pc, #528]	; 12d70 <__snprintf_chk@plt+0x1858>
   12b5c:	mov	r2, #5
   12b60:	add	r1, pc, r1
   12b64:	mov	ip, r0
   12b68:	mov	r0, r4
   12b6c:	str	ip, [sp, #32]
   12b70:	bl	1126c <dcgettext@plt>
   12b74:	ldr	r1, [pc, #504]	; 12d74 <__snprintf_chk@plt+0x185c>
   12b78:	mov	r2, #5
   12b7c:	add	r1, pc, r1
   12b80:	mov	r9, r0
   12b84:	mov	r0, r4
   12b88:	bl	1126c <dcgettext@plt>
   12b8c:	ldr	r1, [pc, #484]	; 12d78 <__snprintf_chk@plt+0x1860>
   12b90:	mov	r2, #5
   12b94:	add	r1, pc, r1
   12b98:	mov	r8, r0
   12b9c:	mov	r0, r4
   12ba0:	bl	1126c <dcgettext@plt>
   12ba4:	ldr	r1, [pc, #464]	; 12d7c <__snprintf_chk@plt+0x1864>
   12ba8:	mov	r2, #5
   12bac:	add	r1, pc, r1
   12bb0:	mov	r6, r0
   12bb4:	mov	r0, r4
   12bb8:	bl	1126c <dcgettext@plt>
   12bbc:	ldr	r3, [sp, #28]
   12bc0:	ldr	ip, [sp, #32]
   12bc4:	mov	r1, sl
   12bc8:	str	r9, [sp, #8]
   12bcc:	mov	r2, #32
   12bd0:	str	r3, [sp]
   12bd4:	str	ip, [sp, #4]
   12bd8:	str	r8, [sp, #12]
   12bdc:	str	r6, [sp, #16]
   12be0:	str	r0, [sp, #20]
   12be4:	mvn	r0, #0
   12be8:	mov	r3, r0
   12bec:	bl	11b24 <__snprintf_chk@plt+0x60c>
   12bf0:	b	12478 <__snprintf_chk@plt+0xf60>
   12bf4:	ldr	ip, [pc, #388]	; 12d80 <__snprintf_chk@plt+0x1868>
   12bf8:	add	ip, pc, ip
   12bfc:	b	128dc <__snprintf_chk@plt+0x13c4>
   12c00:	mov	r0, r7
   12c04:	ldr	r1, [sp, #40]	; 0x28
   12c08:	bl	11ed8 <__snprintf_chk@plt+0x9c0>
   12c0c:	ldrsh	r3, [r4, #-8]
   12c10:	b	12510 <__snprintf_chk@plt+0xff8>
   12c14:	ldr	r1, [pc, #360]	; 12d84 <__snprintf_chk@plt+0x186c>
   12c18:	mov	r0, r3
   12c1c:	mov	r2, #5
   12c20:	str	r3, [sp, #28]
   12c24:	add	r1, pc, r1
   12c28:	bl	1126c <dcgettext@plt>
   12c2c:	bl	113b0 <strlen@plt>
   12c30:	ldr	r3, [sp, #28]
   12c34:	ldr	r1, [pc, #332]	; 12d88 <__snprintf_chk@plt+0x1870>
   12c38:	mov	r2, #5
   12c3c:	add	r1, pc, r1
   12c40:	mov	ip, r0
   12c44:	mov	r0, r3
   12c48:	str	ip, [sp, #32]
   12c4c:	bl	1126c <dcgettext@plt>
   12c50:	bl	113b0 <strlen@plt>
   12c54:	ldr	ip, [sp, #32]
   12c58:	add	r0, ip, r0
   12c5c:	add	r0, r0, #14
   12c60:	bl	15248 <close_stdout@@Base+0x20d8>
   12c64:	str	r0, [r9, #92]	; 0x5c
   12c68:	b	1265c <__snprintf_chk@plt+0x1144>
   12c6c:	ldr	r1, [pc, #280]	; 12d8c <__snprintf_chk@plt+0x1874>
   12c70:	mov	r2, #5
   12c74:	add	r1, pc, r1
   12c78:	bl	1126c <dcgettext@plt>
   12c7c:	bl	113b0 <strlen@plt>
   12c80:	add	r0, r0, #2
   12c84:	bl	15248 <close_stdout@@Base+0x20d8>
   12c88:	str	r0, [sl, #80]	; 0x50
   12c8c:	b	12860 <__snprintf_chk@plt+0x1348>
   12c90:	ldr	r1, [pc, #248]	; 12d90 <__snprintf_chk@plt+0x1878>
   12c94:	mov	r2, #5
   12c98:	str	r3, [sp, #28]
   12c9c:	add	r1, pc, r1
   12ca0:	bl	1126c <dcgettext@plt>
   12ca4:	bl	113b0 <strlen@plt>
   12ca8:	add	r0, r0, #3
   12cac:	bl	15248 <close_stdout@@Base+0x20d8>
   12cb0:	str	r0, [sl, #76]	; 0x4c
   12cb4:	ldr	r3, [sp, #28]
   12cb8:	b	12800 <__snprintf_chk@plt+0x12e8>
   12cbc:	bl	11284 <__stack_chk_fail@plt>
   12cc0:	ldrdeq	r7, [r1], -ip
   12cc4:	andeq	r0, r0, r0, lsr r1
   12cc8:	andeq	r7, r1, r0, ror #26
   12ccc:	andeq	r7, r1, r8, lsr sp
   12cd0:	andeq	r6, r0, r0, ror #2
   12cd4:	andeq	r7, r1, r4, lsl #26
   12cd8:	andeq	r6, r0, r0, lsr #4
   12cdc:	andeq	r6, r0, ip, lsl #4
   12ce0:	andeq	r6, r0, ip, lsl #4
   12ce4:			; <UNDEFINED> instruction: 0x000067bc
   12ce8:	andeq	r7, r1, ip, ror ip
   12cec:	andeq	r7, r1, r8, ror #24
   12cf0:	andeq	r7, r1, r8, lsr ip
   12cf4:	andeq	r7, r1, ip, lsl ip
   12cf8:	andeq	r7, r1, r0, lsl #24
   12cfc:	andeq	r7, r1, r4, ror #23
   12d00:	andeq	r7, r1, r8, asr #23
   12d04:	andeq	r7, r1, ip, lsr #23
   12d08:	andeq	r5, r0, r0, lsr #30
   12d0c:	andeq	r6, r0, r8, lsl r5
   12d10:			; <UNDEFINED> instruction: 0x00005eb8
   12d14:	andeq	r5, r0, r4, ror lr
   12d18:	andeq	r7, r1, r0, ror #19
   12d1c:	andeq	r7, r1, r4, lsr #19
   12d20:	andeq	r5, r0, r8, ror lr
   12d24:	andeq	r5, r0, r4, asr lr
   12d28:	andeq	r7, r1, r4, asr #18
   12d2c:	andeq	r5, r0, ip, lsr #28
   12d30:	strdeq	r5, [r0], -r8
   12d34:			; <UNDEFINED> instruction: 0x000063b0
   12d38:			; <UNDEFINED> instruction: 0x000064b0
   12d3c:	andeq	r5, r0, r0, ror sp
   12d40:	andeq	r6, r0, r4, asr #6
   12d44:	andeq	r5, r0, ip, ror #25
   12d48:			; <UNDEFINED> instruction: 0x000062b4
   12d4c:	strdeq	r5, [r0], -r8
   12d50:	andeq	r6, r0, r8, ror #4
   12d54:	andeq	r5, r0, ip, ror fp
   12d58:	andeq	r5, r0, r4, lsr #24
   12d5c:	andeq	r6, r0, ip, asr #3
   12d60:	andeq	r5, r0, ip, lsl #22
   12d64:	andeq	r5, r0, ip, lsr fp
   12d68:	andeq	r5, r0, r4, lsr fp
   12d6c:	andeq	r5, r0, r4, lsr #22
   12d70:	andeq	r5, r0, r0, lsl fp
   12d74:	strdeq	r5, [r0], -ip
   12d78:	andeq	r5, r0, r8, ror #21
   12d7c:	ldrdeq	r5, [r0], -r8
   12d80:	andeq	r6, r0, r4, lsr #1
   12d84:			; <UNDEFINED> instruction: 0x00005ab0
   12d88:	andeq	r5, r0, r0, lsr #21
   12d8c:	andeq	r5, r0, ip, lsr #20
   12d90:	strdeq	r5, [r0], -r0
   12d94:	push	{r4, r5, r6, lr}
   12d98:	subs	r4, r0, #0
   12d9c:	ldr	r5, [pc, #588]	; 12ff0 <__snprintf_chk@plt+0x1ad8>
   12da0:	add	r5, pc, r5
   12da4:	beq	12dec <__snprintf_chk@plt+0x18d4>
   12da8:	ldr	r3, [pc, #580]	; 12ff4 <__snprintf_chk@plt+0x1adc>
   12dac:	mov	r2, #5
   12db0:	ldr	r1, [pc, #576]	; 12ff8 <__snprintf_chk@plt+0x1ae0>
   12db4:	mov	r0, #0
   12db8:	ldr	r3, [r5, r3]
   12dbc:	add	r1, pc, r1
   12dc0:	ldr	r6, [r3]
   12dc4:	bl	1126c <dcgettext@plt>
   12dc8:	ldr	r3, [pc, #556]	; 12ffc <__snprintf_chk@plt+0x1ae4>
   12dcc:	mov	r1, #1
   12dd0:	ldr	r3, [r5, r3]
   12dd4:	ldr	r3, [r3]
   12dd8:	mov	r2, r0
   12ddc:	mov	r0, r6
   12de0:	bl	11440 <__fprintf_chk@plt>
   12de4:	mov	r0, r4
   12de8:	bl	11398 <exit@plt>
   12dec:	ldr	r1, [pc, #524]	; 13000 <__snprintf_chk@plt+0x1ae8>
   12df0:	mov	r2, #5
   12df4:	add	r1, pc, r1
   12df8:	bl	1126c <dcgettext@plt>
   12dfc:	ldr	r3, [pc, #504]	; 12ffc <__snprintf_chk@plt+0x1ae4>
   12e00:	ldr	r6, [r5, r3]
   12e04:	ldr	r2, [r6]
   12e08:	mov	r1, r0
   12e0c:	mov	r0, #1
   12e10:	bl	11428 <__printf_chk@plt>
   12e14:	ldr	r1, [pc, #488]	; 13004 <__snprintf_chk@plt+0x1aec>
   12e18:	mov	r2, #5
   12e1c:	mov	r0, r4
   12e20:	add	r1, pc, r1
   12e24:	bl	1126c <dcgettext@plt>
   12e28:	ldr	r3, [pc, #472]	; 13008 <__snprintf_chk@plt+0x1af0>
   12e2c:	ldr	r5, [r5, r3]
   12e30:	ldr	r1, [r5]
   12e34:	bl	111dc <fputs_unlocked@plt>
   12e38:	ldr	r1, [pc, #460]	; 1300c <__snprintf_chk@plt+0x1af4>
   12e3c:	mov	r2, #5
   12e40:	mov	r0, r4
   12e44:	add	r1, pc, r1
   12e48:	bl	1126c <dcgettext@plt>
   12e4c:	ldr	r1, [r5]
   12e50:	bl	111dc <fputs_unlocked@plt>
   12e54:	ldr	r1, [pc, #436]	; 13010 <__snprintf_chk@plt+0x1af8>
   12e58:	mov	r2, #5
   12e5c:	mov	r0, r4
   12e60:	add	r1, pc, r1
   12e64:	bl	1126c <dcgettext@plt>
   12e68:	ldr	r1, [r5]
   12e6c:	bl	111dc <fputs_unlocked@plt>
   12e70:	ldr	r1, [pc, #412]	; 13014 <__snprintf_chk@plt+0x1afc>
   12e74:	mov	r2, #5
   12e78:	mov	r0, r4
   12e7c:	add	r1, pc, r1
   12e80:	bl	1126c <dcgettext@plt>
   12e84:	ldr	r1, [r5]
   12e88:	bl	111dc <fputs_unlocked@plt>
   12e8c:	ldr	r1, [pc, #388]	; 13018 <__snprintf_chk@plt+0x1b00>
   12e90:	mov	r2, #5
   12e94:	mov	r0, r4
   12e98:	add	r1, pc, r1
   12e9c:	bl	1126c <dcgettext@plt>
   12ea0:	ldr	r1, [r5]
   12ea4:	bl	111dc <fputs_unlocked@plt>
   12ea8:	ldr	r1, [pc, #364]	; 1301c <__snprintf_chk@plt+0x1b04>
   12eac:	mov	r2, #5
   12eb0:	mov	r0, r4
   12eb4:	add	r1, pc, r1
   12eb8:	bl	1126c <dcgettext@plt>
   12ebc:	ldr	r1, [r5]
   12ec0:	bl	111dc <fputs_unlocked@plt>
   12ec4:	ldr	r1, [pc, #340]	; 13020 <__snprintf_chk@plt+0x1b08>
   12ec8:	mov	r2, #5
   12ecc:	mov	r0, r4
   12ed0:	add	r1, pc, r1
   12ed4:	bl	1126c <dcgettext@plt>
   12ed8:	ldr	r1, [r5]
   12edc:	bl	111dc <fputs_unlocked@plt>
   12ee0:	ldr	r1, [pc, #316]	; 13024 <__snprintf_chk@plt+0x1b0c>
   12ee4:	mov	r2, #5
   12ee8:	mov	r0, r4
   12eec:	add	r1, pc, r1
   12ef0:	bl	1126c <dcgettext@plt>
   12ef4:	ldr	r1, [r5]
   12ef8:	bl	111dc <fputs_unlocked@plt>
   12efc:	ldr	r1, [pc, #292]	; 13028 <__snprintf_chk@plt+0x1b10>
   12f00:	mov	r2, #5
   12f04:	mov	r0, r4
   12f08:	add	r1, pc, r1
   12f0c:	bl	1126c <dcgettext@plt>
   12f10:	ldr	r2, [pc, #276]	; 1302c <__snprintf_chk@plt+0x1b14>
   12f14:	ldr	r3, [pc, #276]	; 13030 <__snprintf_chk@plt+0x1b18>
   12f18:	add	r2, pc, r2
   12f1c:	add	r3, pc, r3
   12f20:	mov	r1, r0
   12f24:	mov	r0, #1
   12f28:	bl	11428 <__printf_chk@plt>
   12f2c:	ldr	r1, [pc, #256]	; 13034 <__snprintf_chk@plt+0x1b1c>
   12f30:	mov	r2, #5
   12f34:	mov	r0, r4
   12f38:	add	r1, pc, r1
   12f3c:	bl	1126c <dcgettext@plt>
   12f40:	ldr	r2, [pc, #240]	; 13038 <__snprintf_chk@plt+0x1b20>
   12f44:	ldr	r3, [pc, #240]	; 1303c <__snprintf_chk@plt+0x1b24>
   12f48:	add	r2, pc, r2
   12f4c:	add	r3, pc, r3
   12f50:	mov	r1, r0
   12f54:	mov	r0, #1
   12f58:	bl	11428 <__printf_chk@plt>
   12f5c:	mov	r0, #5
   12f60:	mov	r1, r4
   12f64:	bl	1147c <setlocale@plt>
   12f68:	cmp	r0, #0
   12f6c:	beq	12f88 <__snprintf_chk@plt+0x1a70>
   12f70:	ldr	r1, [pc, #200]	; 13040 <__snprintf_chk@plt+0x1b28>
   12f74:	mov	r2, #3
   12f78:	add	r1, pc, r1
   12f7c:	bl	114dc <strncmp@plt>
   12f80:	cmp	r0, #0
   12f84:	bne	12fbc <__snprintf_chk@plt+0x1aa4>
   12f88:	ldr	r1, [pc, #180]	; 13044 <__snprintf_chk@plt+0x1b2c>
   12f8c:	mov	r2, #5
   12f90:	mov	r0, #0
   12f94:	add	r1, pc, r1
   12f98:	bl	1126c <dcgettext@plt>
   12f9c:	mov	r5, r0
   12fa0:	ldr	r0, [r6]
   12fa4:	bl	13288 <close_stdout@@Base+0x118>
   12fa8:	mov	r1, r5
   12fac:	mov	r2, r0
   12fb0:	mov	r0, #1
   12fb4:	bl	11428 <__printf_chk@plt>
   12fb8:	b	12de4 <__snprintf_chk@plt+0x18cc>
   12fbc:	ldr	r1, [pc, #132]	; 13048 <__snprintf_chk@plt+0x1b30>
   12fc0:	mov	r2, #5
   12fc4:	mov	r0, r4
   12fc8:	add	r1, pc, r1
   12fcc:	bl	1126c <dcgettext@plt>
   12fd0:	mov	r5, r0
   12fd4:	ldr	r0, [r6]
   12fd8:	bl	13288 <close_stdout@@Base+0x118>
   12fdc:	mov	r1, r5
   12fe0:	mov	r2, r0
   12fe4:	mov	r0, #1
   12fe8:	bl	11428 <__printf_chk@plt>
   12fec:	b	12f88 <__snprintf_chk@plt+0x1a70>
   12ff0:	andeq	r7, r1, r8, asr r2
   12ff4:	andeq	r0, r0, ip, lsr r1
   12ff8:	andeq	r5, r0, r4, lsr r9
   12ffc:	andeq	r0, r0, r8, asr r1
   13000:	andeq	r5, r0, r4, lsr #18
   13004:	andeq	r5, r0, r4, lsr #18
   13008:	andeq	r0, r0, ip, asr #2
   1300c:	andeq	r5, r0, ip, lsr r9
   13010:	andeq	r5, r0, r4, ror #19
   13014:	strdeq	r5, [r0], -ip
   13018:	muleq	r0, ip, sl
   1301c:	andeq	r5, r0, r0, ror #22
   13020:	andeq	r5, r0, r8, ror #23
   13024:	strdeq	r5, [r0], -ip
   13028:	andeq	r5, r0, r8, lsl ip
   1302c:	andeq	r5, r0, r8, lsl #25
   13030:	muleq	r0, r4, ip
   13034:	andeq	r5, r0, r8, lsl #25
   13038:	muleq	r0, r0, ip
   1303c:	muleq	r0, ip, ip
   13040:	muleq	r0, r8, ip
   13044:	andeq	r5, r0, r8, asr #25
   13048:	andeq	r5, r0, ip, asr #24
   1304c:	ldr	r2, [pc, #192]	; 13114 <__snprintf_chk@plt+0x1bfc>
   13050:	push	{r4, r5, r6, r7, lr}
   13054:	add	r2, pc, r2
   13058:	ldr	r5, [pc, #184]	; 13118 <__snprintf_chk@plt+0x1c00>
   1305c:	sub	sp, sp, #12
   13060:	ldr	ip, [pc, #180]	; 1311c <__snprintf_chk@plt+0x1c04>
   13064:	add	r3, sp, #8
   13068:	mov	lr, #2
   1306c:	mov	r4, #0
   13070:	ldr	r5, [r2, r5]
   13074:	add	ip, pc, ip
   13078:	str	r4, [r3, #-8]!
   1307c:	mov	r6, r1
   13080:	mov	r2, ip
   13084:	str	lr, [ip]
   13088:	ldr	ip, [r5]
   1308c:	mov	r1, r4
   13090:	mov	r3, sp
   13094:	mov	r7, r0
   13098:	str	ip, [sp, #4]
   1309c:	bl	114ac <getaddrinfo@plt>
   130a0:	cmp	r0, #0
   130a4:	bne	13100 <__snprintf_chk@plt+0x1be8>
   130a8:	ldr	r3, [sp]
   130ac:	ldr	r0, [r3, #24]
   130b0:	cmp	r0, r4
   130b4:	moveq	r0, r7
   130b8:	bl	113f8 <__strdup@plt>
   130bc:	rsbs	r3, r0, #1
   130c0:	mov	r4, r0
   130c4:	ldr	r0, [sp]
   130c8:	movcc	r3, #0
   130cc:	cmp	r6, #0
   130d0:	moveq	r3, #0
   130d4:	cmp	r3, #0
   130d8:	mvnne	r3, #9
   130dc:	strne	r3, [r6]
   130e0:	bl	114a0 <freeaddrinfo@plt>
   130e4:	ldr	r2, [sp, #4]
   130e8:	mov	r0, r4
   130ec:	ldr	r3, [r5]
   130f0:	cmp	r2, r3
   130f4:	bne	13110 <__snprintf_chk@plt+0x1bf8>
   130f8:	add	sp, sp, #12
   130fc:	pop	{r4, r5, r6, r7, pc}
   13100:	cmp	r6, #0
   13104:	strne	r0, [r6]
   13108:	moveq	r4, r6
   1310c:	b	130e4 <__snprintf_chk@plt+0x1bcc>
   13110:	bl	11284 <__stack_chk_fail@plt>
   13114:	andeq	r6, r1, r4, lsr #31
   13118:	andeq	r0, r0, r0, lsr r1
   1311c:	andeq	r7, r1, r0, lsr #3
   13120:	ldr	r1, [pc, #8]	; 13130 <__snprintf_chk@plt+0x1c18>
   13124:	add	r1, pc, r1
   13128:	add	r1, r1, #32
   1312c:	b	1304c <__snprintf_chk@plt+0x1b34>
   13130:	strdeq	r7, [r1], -r0
   13134:	ldr	r3, [pc, #8]	; 13144 <__snprintf_chk@plt+0x1c2c>
   13138:	add	r3, pc, r3
   1313c:	ldr	r0, [r3, #32]
   13140:	b	11224 <gai_strerror@plt>
   13144:	ldrdeq	r7, [r1], -ip
   13148:	ldr	r3, [pc, #8]	; 13158 <__snprintf_chk@plt+0x1c40>
   1314c:	add	r3, pc, r3
   13150:	str	r0, [r3]
   13154:	bx	lr
   13158:	andeq	r7, r1, ip, ror #1
   1315c:	ldr	r3, [pc, #8]	; 1316c <__snprintf_chk@plt+0x1c54>
   13160:	add	r3, pc, r3
   13164:	strb	r0, [r3, #4]
   13168:	bx	lr
   1316c:	ldrdeq	r7, [r1], -r8

00013170 <close_stdout@@Base>:
   13170:	push	{r4, r5, r6, r7, lr}
   13174:	sub	sp, sp, #12
   13178:	ldr	r4, [pc, #228]	; 13264 <close_stdout@@Base+0xf4>
   1317c:	ldr	r3, [pc, #228]	; 13268 <close_stdout@@Base+0xf8>
   13180:	add	r4, pc, r4
   13184:	ldr	r3, [r4, r3]
   13188:	ldr	r0, [r3]
   1318c:	bl	15750 <close_stdout@@Base+0x25e0>
   13190:	cmp	r0, #0
   13194:	beq	131bc <close_stdout@@Base+0x4c>
   13198:	ldr	r3, [pc, #204]	; 1326c <close_stdout@@Base+0xfc>
   1319c:	add	r3, pc, r3
   131a0:	ldrb	r3, [r3, #4]
   131a4:	cmp	r3, #0
   131a8:	beq	131dc <close_stdout@@Base+0x6c>
   131ac:	bl	113d4 <__errno_location@plt>
   131b0:	ldr	r3, [r0]
   131b4:	cmp	r3, #32
   131b8:	bne	131dc <close_stdout@@Base+0x6c>
   131bc:	ldr	r3, [pc, #172]	; 13270 <close_stdout@@Base+0x100>
   131c0:	ldr	r3, [r4, r3]
   131c4:	ldr	r0, [r3]
   131c8:	bl	15750 <close_stdout@@Base+0x25e0>
   131cc:	cmp	r0, #0
   131d0:	bne	13230 <close_stdout@@Base+0xc0>
   131d4:	add	sp, sp, #12
   131d8:	pop	{r4, r5, r6, r7, pc}
   131dc:	ldr	r1, [pc, #144]	; 13274 <close_stdout@@Base+0x104>
   131e0:	mov	r0, #0
   131e4:	mov	r2, #5
   131e8:	add	r1, pc, r1
   131ec:	bl	1126c <dcgettext@plt>
   131f0:	ldr	r3, [pc, #128]	; 13278 <close_stdout@@Base+0x108>
   131f4:	ldr	r5, [pc, r3]
   131f8:	cmp	r5, #0
   131fc:	mov	r6, r0
   13200:	beq	13240 <close_stdout@@Base+0xd0>
   13204:	bl	113d4 <__errno_location@plt>
   13208:	ldr	r7, [r0]
   1320c:	mov	r0, r5
   13210:	bl	14b48 <close_stdout@@Base+0x19d8>
   13214:	ldr	r2, [pc, #96]	; 1327c <close_stdout@@Base+0x10c>
   13218:	str	r6, [sp]
   1321c:	mov	r1, r7
   13220:	add	r2, pc, r2
   13224:	mov	r3, r0
   13228:	mov	r0, #0
   1322c:	bl	112fc <error@plt>
   13230:	ldr	r3, [pc, #72]	; 13280 <close_stdout@@Base+0x110>
   13234:	ldr	r3, [r4, r3]
   13238:	ldr	r0, [r3]
   1323c:	bl	11230 <_exit@plt>
   13240:	bl	113d4 <__errno_location@plt>
   13244:	ldr	r2, [pc, #56]	; 13284 <close_stdout@@Base+0x114>
   13248:	add	r2, pc, r2
   1324c:	mov	r3, r0
   13250:	mov	r0, r5
   13254:	ldr	r1, [r3]
   13258:	mov	r3, r6
   1325c:	bl	112fc <error@plt>
   13260:	b	13230 <close_stdout@@Base+0xc0>
   13264:	andeq	r6, r1, r8, ror lr
   13268:	andeq	r0, r0, ip, asr #2
   1326c:	muleq	r1, ip, r0
   13270:	andeq	r0, r0, ip, lsr r1
   13274:	ldrdeq	r5, [r0], -r8
   13278:	andeq	r7, r1, r4, asr #32
   1327c:	andeq	r5, r0, ip, lsr #23
   13280:	andeq	r0, r0, r0, asr r1
   13284:	andeq	r5, r0, r8, lsl #23
   13288:	ldrb	r3, [r0]
   1328c:	cmp	r3, #47	; 0x2f
   13290:	bne	132ac <close_stdout@@Base+0x13c>
   13294:	add	r2, r0, #1
   13298:	mov	r0, r2
   1329c:	add	r2, r2, #1
   132a0:	ldrb	r3, [r0]
   132a4:	cmp	r3, #47	; 0x2f
   132a8:	beq	13298 <close_stdout@@Base+0x128>
   132ac:	cmp	r3, #0
   132b0:	bxeq	lr
   132b4:	mov	r2, r0
   132b8:	mov	r1, #0
   132bc:	cmp	r3, #47	; 0x2f
   132c0:	moveq	r1, #1
   132c4:	beq	132d4 <close_stdout@@Base+0x164>
   132c8:	cmp	r1, #0
   132cc:	movne	r0, r2
   132d0:	movne	r1, #0
   132d4:	ldrb	r3, [r2, #1]!
   132d8:	cmp	r3, #0
   132dc:	bne	132bc <close_stdout@@Base+0x14c>
   132e0:	bx	lr
   132e4:	push	{r4, lr}
   132e8:	mov	r4, r0
   132ec:	bl	113b0 <strlen@plt>
   132f0:	cmp	r0, #1
   132f4:	popls	{r4, pc}
   132f8:	sub	r3, r0, #1
   132fc:	ldrb	r2, [r4, r3]
   13300:	cmp	r2, #47	; 0x2f
   13304:	popne	{r4, pc}
   13308:	mov	r0, r3
   1330c:	cmp	r0, #1
   13310:	sub	r3, r3, #1
   13314:	beq	13328 <close_stdout@@Base+0x1b8>
   13318:	ldrb	r2, [r4, r3]
   1331c:	cmp	r2, #47	; 0x2f
   13320:	popne	{r4, pc}
   13324:	b	13308 <close_stdout@@Base+0x198>
   13328:	pop	{r4, pc}
   1332c:	push	{r3, lr}
   13330:	mov	r1, #0
   13334:	bl	1147c <setlocale@plt>
   13338:	cmp	r0, #0
   1333c:	beq	13378 <close_stdout@@Base+0x208>
   13340:	ldrb	r3, [r0]
   13344:	cmp	r3, #67	; 0x43
   13348:	bne	13360 <close_stdout@@Base+0x1f0>
   1334c:	ldrb	r3, [r0, #1]
   13350:	cmp	r3, #0
   13354:	bne	13360 <close_stdout@@Base+0x1f0>
   13358:	mov	r0, r3
   1335c:	pop	{r3, pc}
   13360:	ldr	r1, [pc, #24]	; 13380 <close_stdout@@Base+0x210>
   13364:	add	r1, pc, r1
   13368:	bl	111f4 <strcmp@plt>
   1336c:	adds	r0, r0, #0
   13370:	movne	r0, #1
   13374:	pop	{r3, pc}
   13378:	mov	r0, #1
   1337c:	pop	{r3, pc}
   13380:	andeq	r5, r0, r0, ror sl
   13384:	push	{r4, r5, r6, r7, r8, lr}
   13388:	mov	r4, r0
   1338c:	mov	r5, r1
   13390:	cmp	r4, #0
   13394:	sbcs	r3, r5, #0
   13398:	add	r6, r2, #19
   1339c:	mov	r3, #0
   133a0:	strb	r3, [r2, #20]
   133a4:	blt	133f4 <close_stdout@@Base+0x284>
   133a8:	mov	r0, r4
   133ac:	mov	r1, r5
   133b0:	mov	r2, #10
   133b4:	mov	r3, #0
   133b8:	bl	17b8c <close_stdout@@Base+0x4a1c>
   133bc:	mov	r7, r6
   133c0:	mov	r0, r4
   133c4:	mov	r1, r5
   133c8:	mov	r3, #0
   133cc:	add	ip, r2, #48	; 0x30
   133d0:	mov	r2, #10
   133d4:	strb	ip, [r6], #-1
   133d8:	bl	17b8c <close_stdout@@Base+0x4a1c>
   133dc:	mov	r4, r0
   133e0:	mov	r5, r1
   133e4:	orrs	r3, r4, r5
   133e8:	bne	133a8 <close_stdout@@Base+0x238>
   133ec:	mov	r0, r7
   133f0:	pop	{r4, r5, r6, r7, r8, pc}
   133f4:	mov	r0, r4
   133f8:	mov	r1, r5
   133fc:	mov	r2, #10
   13400:	mov	r3, #0
   13404:	bl	17b8c <close_stdout@@Base+0x4a1c>
   13408:	mov	r8, r6
   1340c:	mov	r0, r4
   13410:	mov	r1, r5
   13414:	mov	r3, #0
   13418:	rsb	ip, r2, #48	; 0x30
   1341c:	mov	r2, #10
   13420:	strb	ip, [r6], #-1
   13424:	bl	17b8c <close_stdout@@Base+0x4a1c>
   13428:	mov	r4, r0
   1342c:	mov	r5, r1
   13430:	orrs	r3, r4, r5
   13434:	bne	133f4 <close_stdout@@Base+0x284>
   13438:	mov	r7, r6
   1343c:	mov	r3, #45	; 0x2d
   13440:	mov	r0, r7
   13444:	strb	r3, [r8, #-1]
   13448:	pop	{r4, r5, r6, r7, r8, pc}
   1344c:	push	{r3, r4, r5, r6, r7, lr}
   13450:	subs	r4, r0, #0
   13454:	ldr	r5, [pc, #172]	; 13508 <close_stdout@@Base+0x398>
   13458:	add	r5, pc, r5
   1345c:	beq	134e4 <close_stdout@@Base+0x374>
   13460:	mov	r1, #47	; 0x2f
   13464:	bl	11488 <strrchr@plt>
   13468:	subs	r6, r0, #0
   1346c:	beq	134c8 <close_stdout@@Base+0x358>
   13470:	add	r7, r6, #1
   13474:	rsb	r3, r4, r7
   13478:	cmp	r3, #6
   1347c:	ble	134c8 <close_stdout@@Base+0x358>
   13480:	ldr	r1, [pc, #132]	; 1350c <close_stdout@@Base+0x39c>
   13484:	sub	r0, r6, #6
   13488:	mov	r2, #7
   1348c:	add	r1, pc, r1
   13490:	bl	114dc <strncmp@plt>
   13494:	cmp	r0, #0
   13498:	bne	134c8 <close_stdout@@Base+0x358>
   1349c:	ldr	r1, [pc, #108]	; 13510 <close_stdout@@Base+0x3a0>
   134a0:	mov	r0, r7
   134a4:	mov	r2, #3
   134a8:	add	r1, pc, r1
   134ac:	bl	114dc <strncmp@plt>
   134b0:	cmp	r0, #0
   134b4:	movne	r4, r7
   134b8:	ldreq	r3, [pc, #84]	; 13514 <close_stdout@@Base+0x3a4>
   134bc:	addeq	r4, r6, #4
   134c0:	ldreq	r3, [r5, r3]
   134c4:	streq	r4, [r3]
   134c8:	ldr	r2, [pc, #72]	; 13518 <close_stdout@@Base+0x3a8>
   134cc:	ldr	r3, [pc, #72]	; 1351c <close_stdout@@Base+0x3ac>
   134d0:	ldr	r2, [r5, r2]
   134d4:	str	r4, [r2]
   134d8:	ldr	r3, [r5, r3]
   134dc:	str	r4, [r3]
   134e0:	pop	{r3, r4, r5, r6, r7, pc}
   134e4:	ldr	r3, [pc, #52]	; 13520 <close_stdout@@Base+0x3b0>
   134e8:	mov	r1, #1
   134ec:	ldr	r0, [pc, #48]	; 13524 <close_stdout@@Base+0x3b4>
   134f0:	mov	r2, #55	; 0x37
   134f4:	ldr	r3, [r5, r3]
   134f8:	add	r0, pc, r0
   134fc:	ldr	r3, [r3]
   13500:	bl	112b4 <fwrite@plt>
   13504:	bl	114e8 <abort@plt>
   13508:	andeq	r6, r1, r0, lsr #23
   1350c:	andeq	r5, r0, r8, lsl #19
   13510:	andeq	r5, r0, r4, ror r9
   13514:	andeq	r0, r0, r0, ror #2
   13518:	andeq	r0, r0, r8, asr r1
   1351c:	andeq	r0, r0, r4, asr r1
   13520:	andeq	r0, r0, ip, lsr r1
   13524:	andeq	r5, r0, r4, ror #17
   13528:	push	{r3, lr}
   1352c:	mov	r3, r0
   13530:	mov	r2, #0
   13534:	cmp	r1, #8
   13538:	str	r2, [r3], #4
   1353c:	add	r3, r3, #4
   13540:	str	r2, [r0, #4]
   13544:	str	r2, [r3], #4
   13548:	str	r2, [r3], #4
   1354c:	str	r2, [r3], #4
   13550:	str	r2, [r3], #4
   13554:	str	r2, [r3], #4
   13558:	str	r2, [r3], #4
   1355c:	str	r2, [r3], #4
   13560:	str	r2, [r3], #4
   13564:	str	r2, [r3], #4
   13568:	str	r2, [r3]
   1356c:	beq	13578 <close_stdout@@Base+0x408>
   13570:	str	r1, [r0]
   13574:	pop	{r3, pc}
   13578:	bl	114e8 <abort@plt>
   1357c:	push	{r4, r5, r6, lr}
   13580:	mov	r4, r0
   13584:	mov	r6, r1
   13588:	mov	r0, #0
   1358c:	mov	r1, r4
   13590:	mov	r2, #5
   13594:	bl	1126c <dcgettext@plt>
   13598:	cmp	r0, r4
   1359c:	mov	r5, r0
   135a0:	beq	135a8 <close_stdout@@Base+0x438>
   135a4:	pop	{r4, r5, r6, pc}
   135a8:	bl	157d0 <close_stdout@@Base+0x2660>
   135ac:	ldrb	r3, [r0]
   135b0:	bic	r3, r3, #32
   135b4:	cmp	r3, #85	; 0x55
   135b8:	bne	1362c <close_stdout@@Base+0x4bc>
   135bc:	ldrb	r3, [r0, #1]
   135c0:	bic	r3, r3, #32
   135c4:	cmp	r3, #84	; 0x54
   135c8:	bne	13618 <close_stdout@@Base+0x4a8>
   135cc:	ldrb	r3, [r0, #2]
   135d0:	bic	r3, r3, #32
   135d4:	cmp	r3, #70	; 0x46
   135d8:	bne	13618 <close_stdout@@Base+0x4a8>
   135dc:	ldrb	r3, [r0, #3]
   135e0:	cmp	r3, #45	; 0x2d
   135e4:	bne	13618 <close_stdout@@Base+0x4a8>
   135e8:	ldrb	r3, [r0, #4]
   135ec:	cmp	r3, #56	; 0x38
   135f0:	bne	13618 <close_stdout@@Base+0x4a8>
   135f4:	ldrb	r3, [r0, #5]
   135f8:	cmp	r3, #0
   135fc:	bne	13618 <close_stdout@@Base+0x4a8>
   13600:	ldrb	r3, [r5]
   13604:	cmp	r3, #96	; 0x60
   13608:	beq	136a4 <close_stdout@@Base+0x534>
   1360c:	ldr	r0, [pc, #180]	; 136c8 <close_stdout@@Base+0x558>
   13610:	add	r0, pc, r0
   13614:	pop	{r4, r5, r6, pc}
   13618:	cmp	r6, #7
   1361c:	beq	136b0 <close_stdout@@Base+0x540>
   13620:	ldr	r0, [pc, #164]	; 136cc <close_stdout@@Base+0x55c>
   13624:	add	r0, pc, r0
   13628:	pop	{r4, r5, r6, pc}
   1362c:	cmp	r3, #71	; 0x47
   13630:	bne	13618 <close_stdout@@Base+0x4a8>
   13634:	ldrb	r3, [r0, #1]
   13638:	bic	r3, r3, #32
   1363c:	cmp	r3, #66	; 0x42
   13640:	bne	13618 <close_stdout@@Base+0x4a8>
   13644:	ldrb	r3, [r0, #2]
   13648:	cmp	r3, #49	; 0x31
   1364c:	bne	13618 <close_stdout@@Base+0x4a8>
   13650:	ldrb	r3, [r0, #3]
   13654:	cmp	r3, #56	; 0x38
   13658:	bne	13618 <close_stdout@@Base+0x4a8>
   1365c:	ldrb	r3, [r0, #4]
   13660:	cmp	r3, #48	; 0x30
   13664:	bne	13618 <close_stdout@@Base+0x4a8>
   13668:	ldrb	r3, [r0, #5]
   1366c:	cmp	r3, #51	; 0x33
   13670:	bne	13618 <close_stdout@@Base+0x4a8>
   13674:	ldrb	r3, [r0, #6]
   13678:	cmp	r3, #48	; 0x30
   1367c:	bne	13618 <close_stdout@@Base+0x4a8>
   13680:	ldrb	r3, [r0, #7]
   13684:	cmp	r3, #0
   13688:	bne	13618 <close_stdout@@Base+0x4a8>
   1368c:	ldrb	r3, [r5]
   13690:	cmp	r3, #96	; 0x60
   13694:	beq	136bc <close_stdout@@Base+0x54c>
   13698:	ldr	r0, [pc, #48]	; 136d0 <close_stdout@@Base+0x560>
   1369c:	add	r0, pc, r0
   136a0:	pop	{r4, r5, r6, pc}
   136a4:	ldr	r0, [pc, #40]	; 136d4 <close_stdout@@Base+0x564>
   136a8:	add	r0, pc, r0
   136ac:	pop	{r4, r5, r6, pc}
   136b0:	ldr	r0, [pc, #32]	; 136d8 <close_stdout@@Base+0x568>
   136b4:	add	r0, pc, r0
   136b8:	pop	{r4, r5, r6, pc}
   136bc:	ldr	r0, [pc, #24]	; 136dc <close_stdout@@Base+0x56c>
   136c0:	add	r0, pc, r0
   136c4:	pop	{r4, r5, r6, pc}
   136c8:	andeq	r5, r0, r0, lsr r8
   136cc:	andeq	r5, r0, r4, lsr #16
   136d0:	andeq	r5, r0, r8, lsr #15
   136d4:	andeq	r5, r0, ip, lsr #15
   136d8:	muleq	r0, r8, r7
   136dc:	muleq	r0, r0, r7
   136e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136e4:	sub	sp, sp, #124	; 0x7c
   136e8:	ldr	ip, [pc, #3304]	; 143d8 <close_stdout@@Base+0x1268>
   136ec:	mov	sl, r1
   136f0:	str	r0, [sp, #40]	; 0x28
   136f4:	mov	r8, r3
   136f8:	ldr	r0, [pc, #3292]	; 143dc <close_stdout@@Base+0x126c>
   136fc:	add	ip, pc, ip
   13700:	str	r2, [sp, #32]
   13704:	ldr	r1, [sp, #164]	; 0xa4
   13708:	mov	r3, ip
   1370c:	ldr	r0, [ip, r0]
   13710:	ldr	r2, [sp, #172]	; 0xac
   13714:	ubfx	r1, r1, #1, #1
   13718:	str	r1, [sp, #36]	; 0x24
   1371c:	str	r0, [sp, #56]	; 0x38
   13720:	ldr	r0, [sp, #168]	; 0xa8
   13724:	ldr	r1, [sp, #176]	; 0xb0
   13728:	str	r2, [sp, #72]	; 0x48
   1372c:	str	r0, [sp, #48]	; 0x30
   13730:	ldr	r0, [sp, #56]	; 0x38
   13734:	str	r1, [sp, #68]	; 0x44
   13738:	ldr	r3, [r0]
   1373c:	str	r3, [sp, #116]	; 0x74
   13740:	bl	112cc <__ctype_get_mb_cur_max@plt>
   13744:	ldr	r2, [sp, #160]	; 0xa0
   13748:	str	r0, [sp, #64]	; 0x40
   1374c:	cmp	r2, #8
   13750:	addls	pc, pc, r2, lsl #2
   13754:	b	142b4 <close_stdout@@Base+0x1144>
   13758:	b	1377c <close_stdout@@Base+0x60c>
   1375c:	b	13fcc <close_stdout@@Base+0xe5c>
   13760:	b	13ffc <close_stdout@@Base+0xe8c>
   13764:	b	13eac <close_stdout@@Base+0xd3c>
   13768:	b	13eec <close_stdout@@Base+0xd7c>
   1376c:	b	13f18 <close_stdout@@Base+0xda8>
   13770:	b	13f38 <close_stdout@@Base+0xdc8>
   13774:	b	13f38 <close_stdout@@Base+0xdc8>
   13778:	b	13f38 <close_stdout@@Base+0xdc8>
   1377c:	mov	r2, #0
   13780:	str	r2, [sp, #36]	; 0x24
   13784:	mov	r9, r2
   13788:	str	r2, [sp, #24]
   1378c:	str	r2, [sp, #28]
   13790:	str	r2, [sp, #52]	; 0x34
   13794:	ldr	r0, [sp, #36]	; 0x24
   13798:	mov	fp, #0
   1379c:	ldr	r1, [sp, #24]
   137a0:	eor	r2, r0, #1
   137a4:	eor	r3, r1, #1
   137a8:	and	r3, r2, r3
   137ac:	and	r2, r1, r0
   137b0:	str	r3, [sp, #44]	; 0x2c
   137b4:	str	r2, [sp, #76]	; 0x4c
   137b8:	cmn	r8, #1
   137bc:	beq	13b3c <close_stdout@@Base+0x9cc>
   137c0:	subs	r3, fp, r8
   137c4:	movne	r3, #1
   137c8:	cmp	r3, #0
   137cc:	beq	13b54 <close_stdout@@Base+0x9e4>
   137d0:	ldr	r3, [sp, #28]
   137d4:	ldr	r0, [sp, #24]
   137d8:	adds	r7, r3, #0
   137dc:	movne	r7, #1
   137e0:	ands	r6, r7, r0
   137e4:	bne	14040 <close_stdout@@Base+0xed0>
   137e8:	ldr	r1, [sp, #32]
   137ec:	add	r5, r1, fp
   137f0:	ldrb	r4, [r5]
   137f4:	cmp	r4, #126	; 0x7e
   137f8:	addls	pc, pc, r4, lsl #2
   137fc:	b	13dc0 <close_stdout@@Base+0xc50>
   13800:	b	13ccc <close_stdout@@Base+0xb5c>
   13804:	b	13dc0 <close_stdout@@Base+0xc50>
   13808:	b	13dc0 <close_stdout@@Base+0xc50>
   1380c:	b	13dc0 <close_stdout@@Base+0xc50>
   13810:	b	13dc0 <close_stdout@@Base+0xc50>
   13814:	b	13dc0 <close_stdout@@Base+0xc50>
   13818:	b	13dc0 <close_stdout@@Base+0xc50>
   1381c:	b	13cb4 <close_stdout@@Base+0xb44>
   13820:	b	13c9c <close_stdout@@Base+0xb2c>
   13824:	b	13cc4 <close_stdout@@Base+0xb54>
   13828:	b	13cbc <close_stdout@@Base+0xb4c>
   1382c:	b	13cac <close_stdout@@Base+0xb3c>
   13830:	b	13ca4 <close_stdout@@Base+0xb34>
   13834:	b	13c68 <close_stdout@@Base+0xaf8>
   13838:	b	13dc0 <close_stdout@@Base+0xc50>
   1383c:	b	13dc0 <close_stdout@@Base+0xc50>
   13840:	b	13dc0 <close_stdout@@Base+0xc50>
   13844:	b	13dc0 <close_stdout@@Base+0xc50>
   13848:	b	13dc0 <close_stdout@@Base+0xc50>
   1384c:	b	13dc0 <close_stdout@@Base+0xc50>
   13850:	b	13dc0 <close_stdout@@Base+0xc50>
   13854:	b	13dc0 <close_stdout@@Base+0xc50>
   13858:	b	13dc0 <close_stdout@@Base+0xc50>
   1385c:	b	13dc0 <close_stdout@@Base+0xc50>
   13860:	b	13dc0 <close_stdout@@Base+0xc50>
   13864:	b	13dc0 <close_stdout@@Base+0xc50>
   13868:	b	13dc0 <close_stdout@@Base+0xc50>
   1386c:	b	13dc0 <close_stdout@@Base+0xc50>
   13870:	b	13dc0 <close_stdout@@Base+0xc50>
   13874:	b	13dc0 <close_stdout@@Base+0xc50>
   13878:	b	13dc0 <close_stdout@@Base+0xc50>
   1387c:	b	13dc0 <close_stdout@@Base+0xc50>
   13880:	b	13bf4 <close_stdout@@Base+0xa84>
   13884:	b	13bf4 <close_stdout@@Base+0xa84>
   13888:	b	13bf4 <close_stdout@@Base+0xa84>
   1388c:	b	13bec <close_stdout@@Base+0xa7c>
   13890:	b	13bf4 <close_stdout@@Base+0xa84>
   13894:	b	13ac8 <close_stdout@@Base+0x958>
   13898:	b	13bf4 <close_stdout@@Base+0xa84>
   1389c:	b	13d68 <close_stdout@@Base+0xbf8>
   138a0:	b	13bf4 <close_stdout@@Base+0xa84>
   138a4:	b	13bf4 <close_stdout@@Base+0xa84>
   138a8:	b	13bf4 <close_stdout@@Base+0xa84>
   138ac:	b	13ac8 <close_stdout@@Base+0x958>
   138b0:	b	13ac8 <close_stdout@@Base+0x958>
   138b4:	b	13ac8 <close_stdout@@Base+0x958>
   138b8:	b	13ac8 <close_stdout@@Base+0x958>
   138bc:	b	13ac8 <close_stdout@@Base+0x958>
   138c0:	b	13ac8 <close_stdout@@Base+0x958>
   138c4:	b	13ac8 <close_stdout@@Base+0x958>
   138c8:	b	13ac8 <close_stdout@@Base+0x958>
   138cc:	b	13ac8 <close_stdout@@Base+0x958>
   138d0:	b	13ac8 <close_stdout@@Base+0x958>
   138d4:	b	13ac8 <close_stdout@@Base+0x958>
   138d8:	b	13ac8 <close_stdout@@Base+0x958>
   138dc:	b	13ac8 <close_stdout@@Base+0x958>
   138e0:	b	13ac8 <close_stdout@@Base+0x958>
   138e4:	b	13ac8 <close_stdout@@Base+0x958>
   138e8:	b	13ac8 <close_stdout@@Base+0x958>
   138ec:	b	13bf4 <close_stdout@@Base+0xa84>
   138f0:	b	13bf4 <close_stdout@@Base+0xa84>
   138f4:	b	13bf4 <close_stdout@@Base+0xa84>
   138f8:	b	13bf4 <close_stdout@@Base+0xa84>
   138fc:	b	139fc <close_stdout@@Base+0x88c>
   13900:	b	13dc0 <close_stdout@@Base+0xc50>
   13904:	b	13ac8 <close_stdout@@Base+0x958>
   13908:	b	13ac8 <close_stdout@@Base+0x958>
   1390c:	b	13ac8 <close_stdout@@Base+0x958>
   13910:	b	13ac8 <close_stdout@@Base+0x958>
   13914:	b	13ac8 <close_stdout@@Base+0x958>
   13918:	b	13ac8 <close_stdout@@Base+0x958>
   1391c:	b	13ac8 <close_stdout@@Base+0x958>
   13920:	b	13ac8 <close_stdout@@Base+0x958>
   13924:	b	13ac8 <close_stdout@@Base+0x958>
   13928:	b	13ac8 <close_stdout@@Base+0x958>
   1392c:	b	13ac8 <close_stdout@@Base+0x958>
   13930:	b	13ac8 <close_stdout@@Base+0x958>
   13934:	b	13ac8 <close_stdout@@Base+0x958>
   13938:	b	13ac8 <close_stdout@@Base+0x958>
   1393c:	b	13ac8 <close_stdout@@Base+0x958>
   13940:	b	13ac8 <close_stdout@@Base+0x958>
   13944:	b	13ac8 <close_stdout@@Base+0x958>
   13948:	b	13ac8 <close_stdout@@Base+0x958>
   1394c:	b	13ac8 <close_stdout@@Base+0x958>
   13950:	b	13ac8 <close_stdout@@Base+0x958>
   13954:	b	13ac8 <close_stdout@@Base+0x958>
   13958:	b	13ac8 <close_stdout@@Base+0x958>
   1395c:	b	13ac8 <close_stdout@@Base+0x958>
   13960:	b	13ac8 <close_stdout@@Base+0x958>
   13964:	b	13ac8 <close_stdout@@Base+0x958>
   13968:	b	13ac8 <close_stdout@@Base+0x958>
   1396c:	b	13bf4 <close_stdout@@Base+0xa84>
   13970:	b	13d4c <close_stdout@@Base+0xbdc>
   13974:	b	13ac8 <close_stdout@@Base+0x958>
   13978:	b	13bf4 <close_stdout@@Base+0xa84>
   1397c:	b	13ac8 <close_stdout@@Base+0x958>
   13980:	b	13bf4 <close_stdout@@Base+0xa84>
   13984:	b	13ac8 <close_stdout@@Base+0x958>
   13988:	b	13ac8 <close_stdout@@Base+0x958>
   1398c:	b	13ac8 <close_stdout@@Base+0x958>
   13990:	b	13ac8 <close_stdout@@Base+0x958>
   13994:	b	13ac8 <close_stdout@@Base+0x958>
   13998:	b	13ac8 <close_stdout@@Base+0x958>
   1399c:	b	13ac8 <close_stdout@@Base+0x958>
   139a0:	b	13ac8 <close_stdout@@Base+0x958>
   139a4:	b	13ac8 <close_stdout@@Base+0x958>
   139a8:	b	13ac8 <close_stdout@@Base+0x958>
   139ac:	b	13ac8 <close_stdout@@Base+0x958>
   139b0:	b	13ac8 <close_stdout@@Base+0x958>
   139b4:	b	13ac8 <close_stdout@@Base+0x958>
   139b8:	b	13ac8 <close_stdout@@Base+0x958>
   139bc:	b	13ac8 <close_stdout@@Base+0x958>
   139c0:	b	13ac8 <close_stdout@@Base+0x958>
   139c4:	b	13ac8 <close_stdout@@Base+0x958>
   139c8:	b	13ac8 <close_stdout@@Base+0x958>
   139cc:	b	13ac8 <close_stdout@@Base+0x958>
   139d0:	b	13ac8 <close_stdout@@Base+0x958>
   139d4:	b	13ac8 <close_stdout@@Base+0x958>
   139d8:	b	13ac8 <close_stdout@@Base+0x958>
   139dc:	b	13ac8 <close_stdout@@Base+0x958>
   139e0:	b	13ac8 <close_stdout@@Base+0x958>
   139e4:	b	13ac8 <close_stdout@@Base+0x958>
   139e8:	b	13ac8 <close_stdout@@Base+0x958>
   139ec:	b	13bd4 <close_stdout@@Base+0xa64>
   139f0:	b	13bf4 <close_stdout@@Base+0xa84>
   139f4:	b	13bd4 <close_stdout@@Base+0xa64>
   139f8:	b	13bec <close_stdout@@Base+0xa7c>
   139fc:	ldr	r3, [sp, #160]	; 0xa0
   13a00:	cmp	r3, #2
   13a04:	beq	14290 <close_stdout@@Base+0x1120>
   13a08:	cmp	r3, #3
   13a0c:	bne	13ac8 <close_stdout@@Base+0x958>
   13a10:	ldr	r1, [sp, #164]	; 0xa4
   13a14:	tst	r1, #4
   13a18:	beq	13ac8 <close_stdout@@Base+0x958>
   13a1c:	add	r3, fp, #2
   13a20:	cmp	r8, r3
   13a24:	bls	13ac8 <close_stdout@@Base+0x958>
   13a28:	ldrb	r2, [r5, #1]
   13a2c:	mov	r1, #1
   13a30:	cmp	r2, #63	; 0x3f
   13a34:	bne	13ac8 <close_stdout@@Base+0x958>
   13a38:	ldr	r0, [sp, #32]
   13a3c:	ldrb	ip, [r0, r3]
   13a40:	sub	r0, ip, #33	; 0x21
   13a44:	uxtb	r0, r0
   13a48:	cmp	r0, #29
   13a4c:	bhi	13ac8 <close_stdout@@Base+0x958>
   13a50:	lsl	r1, r1, r0
   13a54:	movw	r0, #20929	; 0x51c1
   13a58:	movt	r0, #14336	; 0x3800
   13a5c:	and	r0, r1, r0
   13a60:	cmp	r0, #0
   13a64:	beq	13ac8 <close_stdout@@Base+0x958>
   13a68:	ldr	r1, [sp, #36]	; 0x24
   13a6c:	cmp	r1, #0
   13a70:	bne	13c10 <close_stdout@@Base+0xaa0>
   13a74:	cmp	r9, sl
   13a78:	mov	r4, ip
   13a7c:	mov	fp, r3
   13a80:	ldrcc	r0, [sp, #40]	; 0x28
   13a84:	strbcc	r2, [r0, r9]
   13a88:	add	r2, r9, #1
   13a8c:	cmp	sl, r2
   13a90:	ldrhi	r0, [sp, #40]	; 0x28
   13a94:	movhi	r1, #34	; 0x22
   13a98:	strbhi	r1, [r0, r2]
   13a9c:	add	r2, r9, #2
   13aa0:	cmp	sl, r2
   13aa4:	ldrhi	r0, [sp, #40]	; 0x28
   13aa8:	movhi	r1, #34	; 0x22
   13aac:	strbhi	r1, [r0, r2]
   13ab0:	add	r2, r9, #3
   13ab4:	cmp	sl, r2
   13ab8:	add	r9, r9, #4
   13abc:	ldrhi	r0, [sp, #40]	; 0x28
   13ac0:	movhi	r1, #63	; 0x3f
   13ac4:	strbhi	r1, [r0, r2]
   13ac8:	ldr	r0, [sp, #44]	; 0x2c
   13acc:	cmp	r0, #0
   13ad0:	bne	13af8 <close_stdout@@Base+0x988>
   13ad4:	ldr	r1, [sp, #48]	; 0x30
   13ad8:	cmp	r1, #0
   13adc:	beq	13af8 <close_stdout@@Base+0x988>
   13ae0:	ubfx	r2, r4, #5, #8
   13ae4:	and	r3, r4, #31
   13ae8:	ldr	r2, [r1, r2, lsl #2]
   13aec:	lsr	r3, r2, r3
   13af0:	tst	r3, #1
   13af4:	bne	13b00 <close_stdout@@Base+0x990>
   13af8:	cmp	r6, #0
   13afc:	beq	13b20 <close_stdout@@Base+0x9b0>
   13b00:	ldr	r2, [sp, #36]	; 0x24
   13b04:	cmp	r2, #0
   13b08:	bne	13c10 <close_stdout@@Base+0xaa0>
   13b0c:	cmp	r9, sl
   13b10:	ldrcc	r0, [sp, #40]	; 0x28
   13b14:	movcc	r3, #92	; 0x5c
   13b18:	strbcc	r3, [r0, r9]
   13b1c:	add	r9, r9, #1
   13b20:	add	fp, fp, #1
   13b24:	cmp	r9, sl
   13b28:	ldrcc	r1, [sp, #40]	; 0x28
   13b2c:	strbcc	r4, [r1, r9]
   13b30:	cmn	r8, #1
   13b34:	add	r9, r9, #1
   13b38:	bne	137c0 <close_stdout@@Base+0x650>
   13b3c:	ldr	r2, [sp, #32]
   13b40:	ldrb	r3, [r2, fp]
   13b44:	adds	r3, r3, #0
   13b48:	movne	r3, #1
   13b4c:	cmp	r3, #0
   13b50:	bne	137d0 <close_stdout@@Base+0x660>
   13b54:	ldr	r3, [sp, #160]	; 0xa0
   13b58:	cmp	r9, #0
   13b5c:	cmpeq	r3, #2
   13b60:	bne	13b70 <close_stdout@@Base+0xa00>
   13b64:	ldr	r0, [sp, #36]	; 0x24
   13b68:	cmp	r0, #0
   13b6c:	bne	13c10 <close_stdout@@Base+0xaa0>
   13b70:	ldr	r1, [sp, #36]	; 0x24
   13b74:	ldr	r2, [sp, #52]	; 0x34
   13b78:	eor	r3, r1, #1
   13b7c:	cmp	r2, #0
   13b80:	moveq	r3, #0
   13b84:	andne	r3, r3, #1
   13b88:	cmp	r3, #0
   13b8c:	beq	13bb8 <close_stdout@@Base+0xa48>
   13b90:	ldrb	r3, [r2]
   13b94:	cmp	r3, #0
   13b98:	beq	13bb8 <close_stdout@@Base+0xa48>
   13b9c:	ldr	r1, [sp, #40]	; 0x28
   13ba0:	cmp	sl, r9
   13ba4:	strbhi	r3, [r1, r9]
   13ba8:	ldrb	r3, [r2, #1]!
   13bac:	add	r9, r9, #1
   13bb0:	cmp	r3, #0
   13bb4:	bne	13ba0 <close_stdout@@Base+0xa30>
   13bb8:	cmp	r9, sl
   13bbc:	movcs	r0, r9
   13bc0:	ldrcc	r1, [sp, #40]	; 0x28
   13bc4:	movcc	r3, #0
   13bc8:	movcc	r0, r9
   13bcc:	strbcc	r3, [r1, r9]
   13bd0:	b	13c4c <close_stdout@@Base+0xadc>
   13bd4:	cmn	r8, #1
   13bd8:	beq	142a0 <close_stdout@@Base+0x1130>
   13bdc:	subs	r3, r8, #1
   13be0:	movne	r3, #1
   13be4:	cmp	r3, #0
   13be8:	bne	13ac8 <close_stdout@@Base+0x958>
   13bec:	cmp	fp, #0
   13bf0:	bne	13ac8 <close_stdout@@Base+0x958>
   13bf4:	ldr	r3, [sp, #36]	; 0x24
   13bf8:	ldr	r0, [sp, #160]	; 0xa0
   13bfc:	cmp	r0, #2
   13c00:	movne	r3, #0
   13c04:	andeq	r3, r3, #1
   13c08:	cmp	r3, #0
   13c0c:	beq	13ac8 <close_stdout@@Base+0x958>
   13c10:	ldr	r2, [sp, #164]	; 0xa4
   13c14:	mov	ip, #0
   13c18:	ldr	r0, [sp, #160]	; 0xa0
   13c1c:	bic	r3, r2, #2
   13c20:	ldr	r1, [sp, #72]	; 0x48
   13c24:	ldr	r2, [sp, #68]	; 0x44
   13c28:	stm	sp, {r0, r3}
   13c2c:	mov	r3, r8
   13c30:	str	r1, [sp, #12]
   13c34:	mov	r1, sl
   13c38:	str	r2, [sp, #16]
   13c3c:	ldr	r0, [sp, #40]	; 0x28
   13c40:	ldr	r2, [sp, #32]
   13c44:	str	ip, [sp, #8]
   13c48:	bl	136e0 <close_stdout@@Base+0x570>
   13c4c:	ldr	r1, [sp, #56]	; 0x38
   13c50:	ldr	r2, [sp, #116]	; 0x74
   13c54:	ldr	r3, [r1]
   13c58:	cmp	r2, r3
   13c5c:	bne	14390 <close_stdout@@Base+0x1220>
   13c60:	add	sp, sp, #124	; 0x7c
   13c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c68:	mov	r3, #114	; 0x72
   13c6c:	ldr	r2, [sp, #36]	; 0x24
   13c70:	ldr	r0, [sp, #160]	; 0xa0
   13c74:	cmp	r0, #2
   13c78:	movne	r2, #0
   13c7c:	andeq	r2, r2, #1
   13c80:	cmp	r2, #0
   13c84:	bne	13c10 <close_stdout@@Base+0xaa0>
   13c88:	ldr	r1, [sp, #24]
   13c8c:	cmp	r1, #0
   13c90:	beq	13ac8 <close_stdout@@Base+0x958>
   13c94:	mov	r4, r3
   13c98:	b	13b00 <close_stdout@@Base+0x990>
   13c9c:	mov	r3, #98	; 0x62
   13ca0:	b	13c88 <close_stdout@@Base+0xb18>
   13ca4:	mov	r3, #102	; 0x66
   13ca8:	b	13c88 <close_stdout@@Base+0xb18>
   13cac:	mov	r3, #118	; 0x76
   13cb0:	b	13c88 <close_stdout@@Base+0xb18>
   13cb4:	mov	r3, #97	; 0x61
   13cb8:	b	13c88 <close_stdout@@Base+0xb18>
   13cbc:	mov	r3, #110	; 0x6e
   13cc0:	b	13c6c <close_stdout@@Base+0xafc>
   13cc4:	mov	r3, #116	; 0x74
   13cc8:	b	13c6c <close_stdout@@Base+0xafc>
   13ccc:	ldr	r2, [sp, #24]
   13cd0:	cmp	r2, #0
   13cd4:	beq	1427c <close_stdout@@Base+0x110c>
   13cd8:	ldr	r3, [sp, #36]	; 0x24
   13cdc:	cmp	r3, #0
   13ce0:	bne	13c10 <close_stdout@@Base+0xaa0>
   13ce4:	cmp	r9, sl
   13ce8:	add	r2, r9, #1
   13cec:	ldrcc	r0, [sp, #40]	; 0x28
   13cf0:	movcc	r3, #92	; 0x5c
   13cf4:	strbcc	r3, [r0, r9]
   13cf8:	add	r3, fp, #1
   13cfc:	cmp	r8, r3
   13d00:	bls	13d40 <close_stdout@@Base+0xbd0>
   13d04:	ldr	r1, [sp, #32]
   13d08:	ldrb	r3, [r1, r3]
   13d0c:	sub	r3, r3, #48	; 0x30
   13d10:	cmp	r3, #9
   13d14:	bhi	13d40 <close_stdout@@Base+0xbd0>
   13d18:	cmp	sl, r2
   13d1c:	ldrhi	r0, [sp, #40]	; 0x28
   13d20:	movhi	r3, #48	; 0x30
   13d24:	strbhi	r3, [r0, r2]
   13d28:	add	r3, r9, #2
   13d2c:	cmp	sl, r3
   13d30:	ldrhi	r1, [sp, #40]	; 0x28
   13d34:	movhi	r2, #48	; 0x30
   13d38:	strbhi	r2, [r1, r3]
   13d3c:	add	r2, r9, #3
   13d40:	mov	r9, r2
   13d44:	mov	r4, #48	; 0x30
   13d48:	b	13ad4 <close_stdout@@Base+0x964>
   13d4c:	ldr	r1, [sp, #76]	; 0x4c
   13d50:	cmp	r1, #0
   13d54:	beq	13d60 <close_stdout@@Base+0xbf0>
   13d58:	cmp	r7, #0
   13d5c:	bne	13b20 <close_stdout@@Base+0x9b0>
   13d60:	mov	r3, r4
   13d64:	b	13c6c <close_stdout@@Base+0xafc>
   13d68:	ldr	r1, [sp, #160]	; 0xa0
   13d6c:	cmp	r1, #2
   13d70:	bne	13ac8 <close_stdout@@Base+0x958>
   13d74:	ldr	r2, [sp, #36]	; 0x24
   13d78:	cmp	r2, #0
   13d7c:	bne	13c10 <close_stdout@@Base+0xaa0>
   13d80:	cmp	r9, sl
   13d84:	ldrcc	r0, [sp, #40]	; 0x28
   13d88:	movcc	r3, #39	; 0x27
   13d8c:	strbcc	r3, [r0, r9]
   13d90:	add	r3, r9, #1
   13d94:	cmp	sl, r3
   13d98:	ldrhi	r1, [sp, #40]	; 0x28
   13d9c:	movhi	r2, #92	; 0x5c
   13da0:	strbhi	r2, [r1, r3]
   13da4:	add	r3, r9, #2
   13da8:	cmp	sl, r3
   13dac:	add	r9, r9, #3
   13db0:	ldrhi	r0, [sp, #40]	; 0x28
   13db4:	movhi	r2, #39	; 0x27
   13db8:	strbhi	r2, [r0, r3]
   13dbc:	b	13ac8 <close_stdout@@Base+0x958>
   13dc0:	ldr	r1, [sp, #64]	; 0x40
   13dc4:	cmp	r1, #1
   13dc8:	bne	140c0 <close_stdout@@Base+0xf50>
   13dcc:	bl	1138c <__ctype_b_loc@plt>
   13dd0:	ldr	r2, [sp, #64]	; 0x40
   13dd4:	sxth	r3, r4
   13dd8:	str	r2, [sp, #60]	; 0x3c
   13ddc:	lsl	r3, r3, #1
   13de0:	ldr	r2, [r0]
   13de4:	ldrh	r2, [r2, r3]
   13de8:	eor	r2, r2, #16384	; 0x4000
   13dec:	ubfx	r2, r2, #14, #1
   13df0:	ldr	r1, [sp, #24]
   13df4:	ands	r2, r2, r1
   13df8:	beq	13ac8 <close_stdout@@Base+0x958>
   13dfc:	ldr	r3, [sp, #60]	; 0x3c
   13e00:	mov	r0, #92	; 0x5c
   13e04:	ldr	r7, [sp, #36]	; 0x24
   13e08:	add	r1, r3, fp
   13e0c:	str	r8, [sp, #60]	; 0x3c
   13e10:	ldr	r3, [sp, #40]	; 0x28
   13e14:	b	13e78 <close_stdout@@Base+0xd08>
   13e18:	cmp	r7, #0
   13e1c:	bne	142b8 <close_stdout@@Base+0x1148>
   13e20:	add	ip, r9, #1
   13e24:	cmp	r9, sl
   13e28:	strbcc	r0, [r3, r9]
   13e2c:	cmp	sl, ip
   13e30:	lsrhi	r8, r4, #6
   13e34:	addhi	r8, r8, #48	; 0x30
   13e38:	strbhi	r8, [r3, ip]
   13e3c:	add	ip, r9, #2
   13e40:	add	r9, r9, #3
   13e44:	cmp	sl, ip
   13e48:	ubfxhi	r8, r4, #3, #3
   13e4c:	and	r4, r4, #7
   13e50:	add	r4, r4, #48	; 0x30
   13e54:	addhi	r8, r8, #48	; 0x30
   13e58:	strbhi	r8, [r3, ip]
   13e5c:	add	fp, fp, #1
   13e60:	cmp	r1, fp
   13e64:	bls	13ea4 <close_stdout@@Base+0xd34>
   13e68:	cmp	r9, sl
   13e6c:	strbcc	r4, [r3, r9]
   13e70:	ldrb	r4, [r5, #1]!
   13e74:	add	r9, r9, #1
   13e78:	cmp	r2, #0
   13e7c:	bne	13e18 <close_stdout@@Base+0xca8>
   13e80:	cmp	r6, #0
   13e84:	beq	13e5c <close_stdout@@Base+0xcec>
   13e88:	add	fp, fp, #1
   13e8c:	cmp	r9, sl
   13e90:	strbcc	r0, [r3, r9]
   13e94:	cmp	r1, fp
   13e98:	add	r9, r9, #1
   13e9c:	mov	r6, #0
   13ea0:	bhi	13e68 <close_stdout@@Base+0xcf8>
   13ea4:	ldr	r8, [sp, #60]	; 0x3c
   13ea8:	b	13b24 <close_stdout@@Base+0x9b4>
   13eac:	ldr	r3, [sp, #36]	; 0x24
   13eb0:	cmp	r3, #0
   13eb4:	bne	143b8 <close_stdout@@Base+0x1248>
   13eb8:	cmp	sl, #0
   13ebc:	beq	142d0 <close_stdout@@Base+0x1160>
   13ec0:	ldr	r1, [sp, #40]	; 0x28
   13ec4:	mov	r0, #1
   13ec8:	ldr	r2, [pc, #1296]	; 143e0 <close_stdout@@Base+0x1270>
   13ecc:	mov	r3, #34	; 0x22
   13ed0:	str	r0, [sp, #24]
   13ed4:	mov	r9, r0
   13ed8:	add	r2, pc, r2
   13edc:	str	r0, [sp, #28]
   13ee0:	strb	r3, [r1]
   13ee4:	str	r2, [sp, #52]	; 0x34
   13ee8:	b	13794 <close_stdout@@Base+0x624>
   13eec:	ldr	r3, [pc, #1264]	; 143e4 <close_stdout@@Base+0x1274>
   13ef0:	mov	r2, #1
   13ef4:	mov	r0, #3
   13ef8:	str	r2, [sp, #36]	; 0x24
   13efc:	add	r3, pc, r3
   13f00:	str	r2, [sp, #24]
   13f04:	str	r3, [sp, #52]	; 0x34
   13f08:	mov	r9, #0
   13f0c:	str	r2, [sp, #28]
   13f10:	str	r0, [sp, #160]	; 0xa0
   13f14:	b	13794 <close_stdout@@Base+0x624>
   13f18:	mov	r0, #0
   13f1c:	mov	r1, #1
   13f20:	str	r0, [sp, #36]	; 0x24
   13f24:	mov	r9, r0
   13f28:	str	r1, [sp, #24]
   13f2c:	str	r0, [sp, #28]
   13f30:	str	r0, [sp, #52]	; 0x34
   13f34:	b	13794 <close_stdout@@Base+0x624>
   13f38:	ldr	r3, [sp, #160]	; 0xa0
   13f3c:	cmp	r3, #8
   13f40:	beq	13f6c <close_stdout@@Base+0xdfc>
   13f44:	ldr	r0, [pc, #1180]	; 143e8 <close_stdout@@Base+0x1278>
   13f48:	mov	r1, r3
   13f4c:	add	r0, pc, r0
   13f50:	bl	1357c <close_stdout@@Base+0x40c>
   13f54:	ldr	r1, [sp, #160]	; 0xa0
   13f58:	str	r0, [sp, #72]	; 0x48
   13f5c:	ldr	r0, [pc, #1160]	; 143ec <close_stdout@@Base+0x127c>
   13f60:	add	r0, pc, r0
   13f64:	bl	1357c <close_stdout@@Base+0x40c>
   13f68:	str	r0, [sp, #68]	; 0x44
   13f6c:	ldr	r0, [sp, #36]	; 0x24
   13f70:	cmp	r0, #0
   13f74:	movne	r9, #0
   13f78:	bne	13fb0 <close_stdout@@Base+0xe40>
   13f7c:	ldr	r1, [sp, #72]	; 0x48
   13f80:	ldrb	r3, [r1]
   13f84:	cmp	r3, #0
   13f88:	beq	14388 <close_stdout@@Base+0x1218>
   13f8c:	mov	r2, r1
   13f90:	ldr	r1, [sp, #40]	; 0x28
   13f94:	mov	r9, r0
   13f98:	cmp	r9, sl
   13f9c:	strbcc	r3, [r1, r9]
   13fa0:	ldrb	r3, [r2, #1]!
   13fa4:	add	r9, r9, #1
   13fa8:	cmp	r3, #0
   13fac:	bne	13f98 <close_stdout@@Base+0xe28>
   13fb0:	ldr	r0, [sp, #68]	; 0x44
   13fb4:	str	r0, [sp, #52]	; 0x34
   13fb8:	bl	113b0 <strlen@plt>
   13fbc:	mov	r2, #1
   13fc0:	str	r2, [sp, #24]
   13fc4:	str	r0, [sp, #28]
   13fc8:	b	13794 <close_stdout@@Base+0x624>
   13fcc:	ldr	r3, [pc, #1052]	; 143f0 <close_stdout@@Base+0x1280>
   13fd0:	mov	r2, #0
   13fd4:	mov	r1, #1
   13fd8:	mov	r0, #2
   13fdc:	add	r3, pc, r3
   13fe0:	str	r1, [sp, #36]	; 0x24
   13fe4:	str	r2, [sp, #24]
   13fe8:	mov	r9, r2
   13fec:	str	r1, [sp, #28]
   13ff0:	str	r3, [sp, #52]	; 0x34
   13ff4:	str	r0, [sp, #160]	; 0xa0
   13ff8:	b	13794 <close_stdout@@Base+0x624>
   13ffc:	ldr	r3, [sp, #36]	; 0x24
   14000:	cmp	r3, #0
   14004:	bne	14394 <close_stdout@@Base+0x1224>
   14008:	cmp	sl, #0
   1400c:	beq	142f0 <close_stdout@@Base+0x1180>
   14010:	ldr	r1, [sp, #40]	; 0x28
   14014:	mov	r3, #39	; 0x27
   14018:	ldr	r2, [sp, #36]	; 0x24
   1401c:	mov	r0, #1
   14020:	mov	r9, r0
   14024:	str	r0, [sp, #28]
   14028:	strb	r3, [r1]
   1402c:	ldr	r3, [pc, #960]	; 143f4 <close_stdout@@Base+0x1284>
   14030:	str	r2, [sp, #24]
   14034:	add	r3, pc, r3
   14038:	str	r3, [sp, #52]	; 0x34
   1403c:	b	13794 <close_stdout@@Base+0x624>
   14040:	ldr	r2, [sp, #28]
   14044:	cmp	r2, #1
   14048:	add	r4, fp, r2
   1404c:	movls	r3, #0
   14050:	movhi	r3, #1
   14054:	cmn	r8, #1
   14058:	movne	r3, #0
   1405c:	cmp	r3, #0
   14060:	beq	14070 <close_stdout@@Base+0xf00>
   14064:	ldr	r0, [sp, #32]
   14068:	bl	113b0 <strlen@plt>
   1406c:	mov	r8, r0
   14070:	cmp	r8, r4
   14074:	ldrcc	r3, [sp, #32]
   14078:	movcc	r6, #0
   1407c:	addcc	r5, r3, fp
   14080:	bcc	137f0 <close_stdout@@Base+0x680>
   14084:	ldr	r0, [sp, #32]
   14088:	ldr	r1, [sp, #52]	; 0x34
   1408c:	add	r5, r0, fp
   14090:	ldr	r2, [sp, #28]
   14094:	mov	r0, r5
   14098:	bl	11260 <memcmp@plt>
   1409c:	cmp	r0, #0
   140a0:	bne	140b8 <close_stdout@@Base+0xf48>
   140a4:	ldr	r1, [sp, #36]	; 0x24
   140a8:	cmp	r1, #0
   140ac:	bne	13c10 <close_stdout@@Base+0xaa0>
   140b0:	mov	r6, #1
   140b4:	b	137f0 <close_stdout@@Base+0x680>
   140b8:	mov	r6, #0
   140bc:	b	137f0 <close_stdout@@Base+0x680>
   140c0:	add	r7, sp, #108	; 0x6c
   140c4:	cmn	r8, #1
   140c8:	mov	r3, #0
   140cc:	str	r3, [sp, #108]	; 0x6c
   140d0:	str	r3, [r7, #4]
   140d4:	beq	142c0 <close_stdout@@Base+0x1150>
   140d8:	mov	r1, #0
   140dc:	ldr	r0, [sp, #32]
   140e0:	mov	ip, #1
   140e4:	str	r9, [sp, #88]	; 0x58
   140e8:	str	r6, [sp, #96]	; 0x60
   140ec:	mov	r9, r1
   140f0:	str	r5, [sp, #100]	; 0x64
   140f4:	mov	r6, ip
   140f8:	mov	r5, r7
   140fc:	add	r3, sp, #104	; 0x68
   14100:	sub	r0, r0, #1
   14104:	str	r3, [sp, #80]	; 0x50
   14108:	str	r0, [sp, #84]	; 0x54
   1410c:	str	r1, [sp, #60]	; 0x3c
   14110:	str	r4, [sp, #92]	; 0x5c
   14114:	ldr	r2, [sp, #32]
   14118:	add	r7, r9, fp
   1411c:	add	r0, sp, #104	; 0x68
   14120:	mov	r3, r5
   14124:	add	r4, r2, r7
   14128:	rsb	r2, r7, r8
   1412c:	mov	r1, r4
   14130:	bl	112f0 <mbrtowc@plt>
   14134:	subs	r2, r0, #0
   14138:	beq	14244 <close_stdout@@Base+0x10d4>
   1413c:	cmn	r2, #1
   14140:	beq	1436c <close_stdout@@Base+0x11fc>
   14144:	cmn	r2, #2
   14148:	beq	14310 <close_stdout@@Base+0x11a0>
   1414c:	ldr	r3, [sp, #36]	; 0x24
   14150:	ldr	r0, [sp, #160]	; 0xa0
   14154:	cmp	r0, #2
   14158:	movne	r3, #0
   1415c:	andeq	r3, r3, #1
   14160:	cmp	r3, #0
   14164:	beq	14220 <close_stdout@@Base+0x10b0>
   14168:	cmp	r2, #1
   1416c:	beq	14220 <close_stdout@@Base+0x10b0>
   14170:	ldr	r1, [sp, #84]	; 0x54
   14174:	add	r3, r1, r2
   14178:	add	r7, r3, r7
   1417c:	ldrb	r3, [r4, #1]!
   14180:	sub	r3, r3, #91	; 0x5b
   14184:	cmp	r3, #33	; 0x21
   14188:	addls	pc, pc, r3, lsl #2
   1418c:	b	14218 <close_stdout@@Base+0x10a8>
   14190:	b	13c10 <close_stdout@@Base+0xaa0>
   14194:	b	13c10 <close_stdout@@Base+0xaa0>
   14198:	b	14218 <close_stdout@@Base+0x10a8>
   1419c:	b	13c10 <close_stdout@@Base+0xaa0>
   141a0:	b	14218 <close_stdout@@Base+0x10a8>
   141a4:	b	13c10 <close_stdout@@Base+0xaa0>
   141a8:	b	14218 <close_stdout@@Base+0x10a8>
   141ac:	b	14218 <close_stdout@@Base+0x10a8>
   141b0:	b	14218 <close_stdout@@Base+0x10a8>
   141b4:	b	14218 <close_stdout@@Base+0x10a8>
   141b8:	b	14218 <close_stdout@@Base+0x10a8>
   141bc:	b	14218 <close_stdout@@Base+0x10a8>
   141c0:	b	14218 <close_stdout@@Base+0x10a8>
   141c4:	b	14218 <close_stdout@@Base+0x10a8>
   141c8:	b	14218 <close_stdout@@Base+0x10a8>
   141cc:	b	14218 <close_stdout@@Base+0x10a8>
   141d0:	b	14218 <close_stdout@@Base+0x10a8>
   141d4:	b	14218 <close_stdout@@Base+0x10a8>
   141d8:	b	14218 <close_stdout@@Base+0x10a8>
   141dc:	b	14218 <close_stdout@@Base+0x10a8>
   141e0:	b	14218 <close_stdout@@Base+0x10a8>
   141e4:	b	14218 <close_stdout@@Base+0x10a8>
   141e8:	b	14218 <close_stdout@@Base+0x10a8>
   141ec:	b	14218 <close_stdout@@Base+0x10a8>
   141f0:	b	14218 <close_stdout@@Base+0x10a8>
   141f4:	b	14218 <close_stdout@@Base+0x10a8>
   141f8:	b	14218 <close_stdout@@Base+0x10a8>
   141fc:	b	14218 <close_stdout@@Base+0x10a8>
   14200:	b	14218 <close_stdout@@Base+0x10a8>
   14204:	b	14218 <close_stdout@@Base+0x10a8>
   14208:	b	14218 <close_stdout@@Base+0x10a8>
   1420c:	b	14218 <close_stdout@@Base+0x10a8>
   14210:	b	14218 <close_stdout@@Base+0x10a8>
   14214:	b	13c10 <close_stdout@@Base+0xaa0>
   14218:	cmp	r4, r7
   1421c:	bne	1417c <close_stdout@@Base+0x100c>
   14220:	ldr	r0, [sp, #104]	; 0x68
   14224:	add	r9, r9, r2
   14228:	bl	112a8 <iswprint@plt>
   1422c:	cmp	r0, #0
   14230:	mov	r0, r5
   14234:	moveq	r6, #0
   14238:	bl	11248 <mbsinit@plt>
   1423c:	cmp	r0, #0
   14240:	beq	14114 <close_stdout@@Base+0xfa4>
   14244:	mov	ip, r6
   14248:	eor	r2, ip, #1
   1424c:	str	r9, [sp, #60]	; 0x3c
   14250:	ldr	r4, [sp, #92]	; 0x5c
   14254:	uxtb	r2, r2
   14258:	ldr	r9, [sp, #88]	; 0x58
   1425c:	ldr	r6, [sp, #96]	; 0x60
   14260:	ldr	r5, [sp, #100]	; 0x64
   14264:	ldr	r3, [sp, #60]	; 0x3c
   14268:	cmp	r3, #1
   1426c:	bls	13df0 <close_stdout@@Base+0xc80>
   14270:	ldr	r0, [sp, #24]
   14274:	and	r2, r2, r0
   14278:	b	13dfc <close_stdout@@Base+0xc8c>
   1427c:	ldr	r2, [sp, #164]	; 0xa4
   14280:	tst	r2, #1
   14284:	addne	fp, fp, #1
   14288:	bne	137b8 <close_stdout@@Base+0x648>
   1428c:	b	13ac8 <close_stdout@@Base+0x958>
   14290:	ldr	r0, [sp, #36]	; 0x24
   14294:	cmp	r0, #0
   14298:	beq	13ac8 <close_stdout@@Base+0x958>
   1429c:	b	13c10 <close_stdout@@Base+0xaa0>
   142a0:	ldr	r2, [sp, #32]
   142a4:	ldrb	r3, [r2, #1]
   142a8:	adds	r3, r3, #0
   142ac:	movne	r3, #1
   142b0:	b	13be4 <close_stdout@@Base+0xa74>
   142b4:	bl	114e8 <abort@plt>
   142b8:	ldr	r8, [sp, #60]	; 0x3c
   142bc:	b	13c10 <close_stdout@@Base+0xaa0>
   142c0:	ldr	r0, [sp, #32]
   142c4:	bl	113b0 <strlen@plt>
   142c8:	mov	r8, r0
   142cc:	b	140d8 <close_stdout@@Base+0xf68>
   142d0:	ldr	r2, [pc, #288]	; 143f8 <close_stdout@@Base+0x1288>
   142d4:	mov	r1, #1
   142d8:	mov	r9, r1
   142dc:	str	r1, [sp, #24]
   142e0:	add	r2, pc, r2
   142e4:	str	r1, [sp, #28]
   142e8:	str	r2, [sp, #52]	; 0x34
   142ec:	b	13794 <close_stdout@@Base+0x624>
   142f0:	ldr	r2, [pc, #260]	; 143fc <close_stdout@@Base+0x128c>
   142f4:	mov	r3, #1
   142f8:	mov	r9, r3
   142fc:	str	r3, [sp, #28]
   14300:	add	r2, pc, r2
   14304:	str	sl, [sp, #24]
   14308:	str	r2, [sp, #52]	; 0x34
   1430c:	b	13794 <close_stdout@@Base+0x624>
   14310:	cmp	r8, r7
   14314:	str	r9, [sp, #60]	; 0x3c
   14318:	mov	ip, r4
   1431c:	ldr	r6, [sp, #96]	; 0x60
   14320:	ldr	r9, [sp, #88]	; 0x58
   14324:	ldr	r4, [sp, #92]	; 0x5c
   14328:	ldr	r5, [sp, #100]	; 0x64
   1432c:	bls	14364 <close_stdout@@Base+0x11f4>
   14330:	ldrb	r3, [ip]
   14334:	cmp	r3, #0
   14338:	beq	14364 <close_stdout@@Base+0x11f4>
   1433c:	ldr	r3, [sp, #60]	; 0x3c
   14340:	b	14350 <close_stdout@@Base+0x11e0>
   14344:	ldrb	r2, [r5, r3]
   14348:	cmp	r2, #0
   1434c:	beq	14360 <close_stdout@@Base+0x11f0>
   14350:	add	r3, r3, #1
   14354:	add	r2, fp, r3
   14358:	cmp	r8, r2
   1435c:	bhi	14344 <close_stdout@@Base+0x11d4>
   14360:	str	r3, [sp, #60]	; 0x3c
   14364:	mov	r2, #1
   14368:	b	14264 <close_stdout@@Base+0x10f4>
   1436c:	str	r9, [sp, #60]	; 0x3c
   14370:	mov	r2, #1
   14374:	ldr	r4, [sp, #92]	; 0x5c
   14378:	ldr	r6, [sp, #96]	; 0x60
   1437c:	ldr	r9, [sp, #88]	; 0x58
   14380:	ldr	r5, [sp, #100]	; 0x64
   14384:	b	14264 <close_stdout@@Base+0x10f4>
   14388:	ldr	r9, [sp, #36]	; 0x24
   1438c:	b	13fb0 <close_stdout@@Base+0xe40>
   14390:	bl	11284 <__stack_chk_fail@plt>
   14394:	ldr	r1, [pc, #100]	; 14400 <close_stdout@@Base+0x1290>
   14398:	mov	r3, #0
   1439c:	mov	r0, #1
   143a0:	str	r3, [sp, #24]
   143a4:	add	r1, pc, r1
   143a8:	str	r0, [sp, #28]
   143ac:	mov	r9, r3
   143b0:	str	r1, [sp, #52]	; 0x34
   143b4:	b	13794 <close_stdout@@Base+0x624>
   143b8:	ldr	r0, [pc, #68]	; 14404 <close_stdout@@Base+0x1294>
   143bc:	mov	r3, #1
   143c0:	mov	r9, #0
   143c4:	str	r3, [sp, #24]
   143c8:	add	r0, pc, r0
   143cc:	str	r3, [sp, #28]
   143d0:	str	r0, [sp, #52]	; 0x34
   143d4:	b	13794 <close_stdout@@Base+0x624>
   143d8:	strdeq	r6, [r1], -ip
   143dc:	andeq	r0, r0, r0, lsr r1
   143e0:	andeq	r4, r0, r4, ror pc
   143e4:	andeq	r4, r0, r0, asr pc
   143e8:	andeq	r4, r0, ip, lsl #30
   143ec:	andeq	r4, r0, r8, ror #29
   143f0:	andeq	r4, r0, ip, ror #28
   143f4:	andeq	r4, r0, r4, lsl lr
   143f8:	andeq	r4, r0, ip, ror #22
   143fc:	andeq	r4, r0, r8, asr #22
   14400:	andeq	r4, r0, r4, lsr #21
   14404:	andeq	r4, r0, r4, lsl #21
   14408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1440c:	sub	sp, sp, #44	; 0x2c
   14410:	mov	r6, r0
   14414:	mov	r9, r1
   14418:	mov	sl, r2
   1441c:	mov	r4, r3
   14420:	bl	113d4 <__errno_location@plt>
   14424:	ldr	fp, [pc, #412]	; 145c8 <close_stdout@@Base+0x1458>
   14428:	cmp	r6, #0
   1442c:	add	fp, pc, fp
   14430:	ldr	r5, [fp]
   14434:	ldr	r1, [r0]
   14438:	mov	r8, r0
   1443c:	str	r1, [sp, #36]	; 0x24
   14440:	blt	145c0 <close_stdout@@Base+0x1450>
   14444:	ldr	r3, [pc, #384]	; 145cc <close_stdout@@Base+0x145c>
   14448:	add	r3, pc, r3
   1444c:	ldr	r3, [r3]
   14450:	cmp	r6, r3
   14454:	bcc	144a8 <close_stdout@@Base+0x1338>
   14458:	add	r7, r6, #1
   1445c:	cmn	r7, #-536870911	; 0xe0000001
   14460:	bhi	145c4 <close_stdout@@Base+0x1454>
   14464:	add	r3, fp, #4
   14468:	cmp	r5, r3
   1446c:	beq	14598 <close_stdout@@Base+0x1428>
   14470:	mov	r0, r5
   14474:	lsl	r1, r7, #3
   14478:	bl	152a0 <close_stdout@@Base+0x2130>
   1447c:	mov	r5, r0
   14480:	str	r0, [fp]
   14484:	ldr	fp, [pc, #324]	; 145d0 <close_stdout@@Base+0x1460>
   14488:	mov	r1, #0
   1448c:	add	fp, pc, fp
   14490:	ldr	r0, [fp]
   14494:	rsb	r2, r0, r7
   14498:	add	r0, r5, r0, lsl #3
   1449c:	lsl	r2, r2, #3
   144a0:	bl	11404 <memset@plt>
   144a4:	str	r7, [fp]
   144a8:	add	r2, r4, #8
   144ac:	str	r2, [sp, #32]
   144b0:	ldr	r1, [r4]
   144b4:	add	fp, r5, r6, lsl #3
   144b8:	ldr	lr, [sp, #32]
   144bc:	mov	r2, r9
   144c0:	ldr	r3, [r4, #4]
   144c4:	ldr	ip, [r5, r6, lsl #3]
   144c8:	ldr	r7, [fp, #4]
   144cc:	orr	r3, r3, #1
   144d0:	str	r1, [sp]
   144d4:	str	r3, [sp, #4]
   144d8:	mov	r1, ip
   144dc:	str	lr, [sp, #8]
   144e0:	mov	r0, r7
   144e4:	ldr	lr, [r4, #40]	; 0x28
   144e8:	str	r3, [sp, #28]
   144ec:	mov	r3, sl
   144f0:	str	lr, [sp, #12]
   144f4:	ldr	lr, [r4, #44]	; 0x2c
   144f8:	str	ip, [sp, #24]
   144fc:	str	lr, [sp, #16]
   14500:	bl	136e0 <close_stdout@@Base+0x570>
   14504:	ldr	ip, [sp, #24]
   14508:	cmp	ip, r0
   1450c:	bhi	14584 <close_stdout@@Base+0x1414>
   14510:	ldr	r3, [pc, #188]	; 145d4 <close_stdout@@Base+0x1464>
   14514:	add	r1, r0, #1
   14518:	str	r1, [r5, r6, lsl #3]
   1451c:	add	r3, pc, r3
   14520:	cmp	r7, r3
   14524:	beq	14538 <close_stdout@@Base+0x13c8>
   14528:	mov	r0, r7
   1452c:	str	r1, [sp, #24]
   14530:	bl	11218 <free@plt>
   14534:	ldr	r1, [sp, #24]
   14538:	mov	r0, r1
   1453c:	str	r1, [sp, #24]
   14540:	bl	15248 <close_stdout@@Base+0x20d8>
   14544:	ldr	r3, [sp, #28]
   14548:	ldr	lr, [sp, #32]
   1454c:	mov	r2, r9
   14550:	str	r0, [fp, #4]
   14554:	mov	r7, r0
   14558:	ldr	ip, [r4]
   1455c:	str	r3, [sp, #4]
   14560:	mov	r3, sl
   14564:	str	lr, [sp, #8]
   14568:	str	ip, [sp]
   1456c:	ldr	ip, [r4, #40]	; 0x28
   14570:	ldr	r1, [sp, #24]
   14574:	str	ip, [sp, #12]
   14578:	ldr	ip, [r4, #44]	; 0x2c
   1457c:	str	ip, [sp, #16]
   14580:	bl	136e0 <close_stdout@@Base+0x570>
   14584:	ldr	r1, [sp, #36]	; 0x24
   14588:	mov	r0, r7
   1458c:	str	r1, [r8]
   14590:	add	sp, sp, #44	; 0x2c
   14594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14598:	lsl	r1, r7, #3
   1459c:	mov	r0, #0
   145a0:	str	r3, [sp, #24]
   145a4:	bl	152a0 <close_stdout@@Base+0x2130>
   145a8:	ldr	r3, [sp, #24]
   145ac:	mov	r5, r0
   145b0:	ldm	r3, {r0, r1}
   145b4:	str	r5, [fp]
   145b8:	stm	r5, {r0, r1}
   145bc:	b	14484 <close_stdout@@Base+0x1314>
   145c0:	bl	114e8 <abort@plt>
   145c4:	bl	1545c <close_stdout@@Base+0x22ec>
   145c8:	andeq	r5, r1, r8, ror sp
   145cc:	andeq	r5, r1, r8, lsr #26
   145d0:	andeq	r5, r1, r4, ror #25
   145d4:	andeq	r5, r1, r8, lsr #26
   145d8:	push	{r4, r5, r6, lr}
   145dc:	mov	r5, r0
   145e0:	bl	113d4 <__errno_location@plt>
   145e4:	cmp	r5, #0
   145e8:	mov	r1, #48	; 0x30
   145ec:	mov	r4, r0
   145f0:	ldr	r0, [pc, #24]	; 14610 <close_stdout@@Base+0x14a0>
   145f4:	ldr	r6, [r4]
   145f8:	add	r0, pc, r0
   145fc:	add	r0, r0, #256	; 0x100
   14600:	movne	r0, r5
   14604:	bl	1541c <close_stdout@@Base+0x22ac>
   14608:	str	r6, [r4]
   1460c:	pop	{r4, r5, r6, pc}
   14610:	andeq	r5, r1, ip, asr #24
   14614:	cmp	r0, #0
   14618:	beq	14624 <close_stdout@@Base+0x14b4>
   1461c:	ldr	r0, [r0]
   14620:	bx	lr
   14624:	ldr	r0, [pc, #12]	; 14638 <close_stdout@@Base+0x14c8>
   14628:	add	r0, pc, r0
   1462c:	add	r0, r0, #256	; 0x100
   14630:	ldr	r0, [r0]
   14634:	bx	lr
   14638:	andeq	r5, r1, ip, lsl ip
   1463c:	cmp	r0, #0
   14640:	beq	1464c <close_stdout@@Base+0x14dc>
   14644:	str	r1, [r0]
   14648:	bx	lr
   1464c:	ldr	r0, [pc, #12]	; 14660 <close_stdout@@Base+0x14f0>
   14650:	add	r0, pc, r0
   14654:	add	r0, r0, #256	; 0x100
   14658:	str	r1, [r0]
   1465c:	bx	lr
   14660:	strdeq	r5, [r1], -r4
   14664:	cmp	r0, #0
   14668:	movne	r3, r0
   1466c:	beq	1469c <close_stdout@@Base+0x152c>
   14670:	lsr	ip, r1, #5
   14674:	and	r1, r1, #31
   14678:	add	r3, r3, ip, lsl #2
   1467c:	ldr	ip, [r3, #8]
   14680:	lsr	r0, ip, r1
   14684:	eor	r2, r0, r2
   14688:	and	r0, r0, #1
   1468c:	and	r2, r2, #1
   14690:	eor	ip, ip, r2, lsl r1
   14694:	str	ip, [r3, #8]
   14698:	bx	lr
   1469c:	ldr	r3, [pc, #8]	; 146ac <close_stdout@@Base+0x153c>
   146a0:	add	r3, pc, r3
   146a4:	add	r3, r3, #256	; 0x100
   146a8:	b	14670 <close_stdout@@Base+0x1500>
   146ac:	andeq	r5, r1, r4, lsr #23
   146b0:	subs	r3, r0, #0
   146b4:	beq	146c4 <close_stdout@@Base+0x1554>
   146b8:	ldr	r0, [r3, #4]
   146bc:	str	r1, [r3, #4]
   146c0:	bx	lr
   146c4:	ldr	r3, [pc, #8]	; 146d4 <close_stdout@@Base+0x1564>
   146c8:	add	r3, pc, r3
   146cc:	add	r3, r3, #256	; 0x100
   146d0:	b	146b8 <close_stdout@@Base+0x1548>
   146d4:	andeq	r5, r1, ip, ror fp
   146d8:	cmp	r0, #0
   146dc:	push	{r3, lr}
   146e0:	beq	14704 <close_stdout@@Base+0x1594>
   146e4:	cmp	r2, #0
   146e8:	cmpne	r1, #0
   146ec:	mov	r3, #8
   146f0:	strne	r1, [r0, #40]	; 0x28
   146f4:	str	r3, [r0]
   146f8:	strne	r2, [r0, #44]	; 0x2c
   146fc:	popne	{r3, pc}
   14700:	bl	114e8 <abort@plt>
   14704:	ldr	r0, [pc, #8]	; 14714 <close_stdout@@Base+0x15a4>
   14708:	add	r0, pc, r0
   1470c:	add	r0, r0, #256	; 0x100
   14710:	b	146e4 <close_stdout@@Base+0x1574>
   14714:	andeq	r5, r1, ip, lsr fp
   14718:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1471c:	sub	sp, sp, #24
   14720:	mov	r7, r0
   14724:	mov	sl, r1
   14728:	ldr	r4, [sp, #56]	; 0x38
   1472c:	mov	r9, r2
   14730:	mov	r8, r3
   14734:	cmp	r4, #0
   14738:	beq	1478c <close_stdout@@Base+0x161c>
   1473c:	bl	113d4 <__errno_location@plt>
   14740:	ldr	r3, [r4]
   14744:	add	lr, r4, #8
   14748:	mov	r1, sl
   1474c:	mov	r2, r9
   14750:	ldr	r6, [r0]
   14754:	mov	r5, r0
   14758:	str	r3, [sp]
   1475c:	mov	r0, r7
   14760:	ldr	ip, [r4, #4]
   14764:	mov	r3, r8
   14768:	stmib	sp, {ip, lr}
   1476c:	ldr	ip, [r4, #40]	; 0x28
   14770:	str	ip, [sp, #12]
   14774:	ldr	ip, [r4, #44]	; 0x2c
   14778:	str	ip, [sp, #16]
   1477c:	bl	136e0 <close_stdout@@Base+0x570>
   14780:	str	r6, [r5]
   14784:	add	sp, sp, #24
   14788:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1478c:	ldr	r4, [pc, #8]	; 1479c <close_stdout@@Base+0x162c>
   14790:	add	r4, pc, r4
   14794:	add	r4, r4, #256	; 0x100
   14798:	b	1473c <close_stdout@@Base+0x15cc>
   1479c:			; <UNDEFINED> instruction: 0x00015ab4
   147a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147a4:	subs	r4, r3, #0
   147a8:	sub	sp, sp, #36	; 0x24
   147ac:	mov	r7, r0
   147b0:	mov	r6, r1
   147b4:	mov	r5, r2
   147b8:	beq	14874 <close_stdout@@Base+0x1704>
   147bc:	bl	113d4 <__errno_location@plt>
   147c0:	ldr	r3, [r4]
   147c4:	ldr	sl, [r4, #4]
   147c8:	add	r9, r4, #8
   147cc:	mov	r8, r0
   147d0:	mov	r0, #0
   147d4:	ldr	r2, [r8]
   147d8:	cmp	r5, r0
   147dc:	orreq	sl, sl, #1
   147e0:	str	r9, [sp, #8]
   147e4:	mov	r1, r0
   147e8:	stm	sp, {r3, sl}
   147ec:	mov	r3, r6
   147f0:	ldr	ip, [r4, #40]	; 0x28
   147f4:	str	r2, [sp, #28]
   147f8:	mov	r2, r7
   147fc:	str	ip, [sp, #12]
   14800:	ldr	ip, [r4, #44]	; 0x2c
   14804:	str	ip, [sp, #16]
   14808:	bl	136e0 <close_stdout@@Base+0x570>
   1480c:	add	r1, r0, #1
   14810:	mov	fp, r0
   14814:	str	r1, [sp, #24]
   14818:	mov	r0, r1
   1481c:	bl	15248 <close_stdout@@Base+0x20d8>
   14820:	ldr	lr, [r4]
   14824:	str	sl, [sp, #4]
   14828:	mov	r3, r6
   1482c:	str	r9, [sp, #8]
   14830:	mov	r2, r7
   14834:	str	lr, [sp]
   14838:	ldr	lr, [r4, #40]	; 0x28
   1483c:	ldr	r1, [sp, #24]
   14840:	str	lr, [sp, #12]
   14844:	ldr	lr, [r4, #44]	; 0x2c
   14848:	str	lr, [sp, #16]
   1484c:	str	r0, [sp, #24]
   14850:	bl	136e0 <close_stdout@@Base+0x570>
   14854:	ldr	r3, [sp, #28]
   14858:	cmp	r5, #0
   1485c:	str	r3, [r8]
   14860:	ldr	ip, [sp, #24]
   14864:	strne	fp, [r5]
   14868:	mov	r0, ip
   1486c:	add	sp, sp, #36	; 0x24
   14870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14874:	ldr	r4, [pc, #8]	; 14884 <close_stdout@@Base+0x1714>
   14878:	add	r4, pc, r4
   1487c:	add	r4, r4, #256	; 0x100
   14880:	b	147bc <close_stdout@@Base+0x164c>
   14884:	andeq	r5, r1, ip, asr #19
   14888:	mov	r3, r2
   1488c:	mov	r2, #0
   14890:	b	147a0 <close_stdout@@Base+0x1630>
   14894:	ldr	r2, [pc, #152]	; 14934 <close_stdout@@Base+0x17c4>
   14898:	push	{r3, r4, r5, r6, r7, lr}
   1489c:	add	r2, pc, r2
   148a0:	ldr	r3, [pc, #144]	; 14938 <close_stdout@@Base+0x17c8>
   148a4:	ldr	r6, [r2]
   148a8:	add	r3, pc, r3
   148ac:	cmp	r6, #1
   148b0:	ldr	r7, [r3]
   148b4:	movhi	r4, #1
   148b8:	movhi	r5, r7
   148bc:	bls	148d8 <close_stdout@@Base+0x1768>
   148c0:	ldr	r0, [r5, #12]
   148c4:	add	r4, r4, #1
   148c8:	bl	11218 <free@plt>
   148cc:	cmp	r4, r6
   148d0:	add	r5, r5, #8
   148d4:	bne	148c0 <close_stdout@@Base+0x1750>
   148d8:	ldr	r4, [pc, #92]	; 1493c <close_stdout@@Base+0x17cc>
   148dc:	ldr	r0, [r7, #4]
   148e0:	add	r4, pc, r4
   148e4:	cmp	r0, r4
   148e8:	beq	14900 <close_stdout@@Base+0x1790>
   148ec:	bl	11218 <free@plt>
   148f0:	ldr	r3, [pc, #72]	; 14940 <close_stdout@@Base+0x17d0>
   148f4:	mov	r2, #256	; 0x100
   148f8:	add	r3, pc, r3
   148fc:	stmib	r3, {r2, r4}
   14900:	ldr	r4, [pc, #60]	; 14944 <close_stdout@@Base+0x17d4>
   14904:	add	r4, pc, r4
   14908:	add	r5, r4, #4
   1490c:	cmp	r7, r5
   14910:	beq	14920 <close_stdout@@Base+0x17b0>
   14914:	mov	r0, r7
   14918:	bl	11218 <free@plt>
   1491c:	str	r5, [r4]
   14920:	ldr	r3, [pc, #32]	; 14948 <close_stdout@@Base+0x17d8>
   14924:	mov	r2, #1
   14928:	add	r3, pc, r3
   1492c:	str	r2, [r3]
   14930:	pop	{r3, r4, r5, r6, r7, pc}
   14934:	ldrdeq	r5, [r1], -r4
   14938:	strdeq	r5, [r1], -ip
   1493c:	andeq	r5, r1, r4, ror #18
   14940:	andeq	r5, r1, ip, lsr #17
   14944:	andeq	r5, r1, r0, lsr #17
   14948:	andeq	r5, r1, r8, asr #16
   1494c:	ldr	r3, [pc, #12]	; 14960 <close_stdout@@Base+0x17f0>
   14950:	mvn	r2, #0
   14954:	add	r3, pc, r3
   14958:	add	r3, r3, #256	; 0x100
   1495c:	b	14408 <close_stdout@@Base+0x1298>
   14960:	strdeq	r5, [r1], -r0
   14964:	ldr	r3, [pc, #8]	; 14974 <close_stdout@@Base+0x1804>
   14968:	add	r3, pc, r3
   1496c:	add	r3, r3, #256	; 0x100
   14970:	b	14408 <close_stdout@@Base+0x1298>
   14974:	ldrdeq	r5, [r1], -ip
   14978:	mov	r1, r0
   1497c:	mov	r0, #0
   14980:	b	1494c <close_stdout@@Base+0x17dc>
   14984:	mov	r2, r1
   14988:	mov	r1, r0
   1498c:	mov	r0, #0
   14990:	b	14964 <close_stdout@@Base+0x17f4>
   14994:	ldr	r3, [pc, #92]	; 149f8 <close_stdout@@Base+0x1888>
   14998:	ldr	ip, [pc, #92]	; 149fc <close_stdout@@Base+0x188c>
   1499c:	add	r3, pc, r3
   149a0:	push	{r4, r5, r6, r7, lr}
   149a4:	sub	sp, sp, #60	; 0x3c
   149a8:	ldr	r4, [r3, ip]
   149ac:	add	r5, sp, #4
   149b0:	mov	r7, r2
   149b4:	mov	r6, r0
   149b8:	mov	r0, r5
   149bc:	ldr	r3, [r4]
   149c0:	str	r3, [sp, #52]	; 0x34
   149c4:	bl	13528 <close_stdout@@Base+0x3b8>
   149c8:	mov	r3, r5
   149cc:	mvn	r2, #0
   149d0:	mov	r0, r6
   149d4:	mov	r1, r7
   149d8:	bl	14408 <close_stdout@@Base+0x1298>
   149dc:	ldr	r2, [sp, #52]	; 0x34
   149e0:	ldr	r3, [r4]
   149e4:	cmp	r2, r3
   149e8:	bne	149f4 <close_stdout@@Base+0x1884>
   149ec:	add	sp, sp, #60	; 0x3c
   149f0:	pop	{r4, r5, r6, r7, pc}
   149f4:	bl	11284 <__stack_chk_fail@plt>
   149f8:	andeq	r5, r1, ip, asr r6
   149fc:	andeq	r0, r0, r0, lsr r1
   14a00:	ldr	ip, [pc, #96]	; 14a68 <close_stdout@@Base+0x18f8>
   14a04:	push	{r4, r5, r6, r7, r8, lr}
   14a08:	add	ip, pc, ip
   14a0c:	ldr	lr, [pc, #88]	; 14a6c <close_stdout@@Base+0x18fc>
   14a10:	sub	sp, sp, #56	; 0x38
   14a14:	mov	r8, r3
   14a18:	add	r5, sp, #4
   14a1c:	mov	r7, r2
   14a20:	mov	r6, r0
   14a24:	ldr	r4, [ip, lr]
   14a28:	mov	r0, r5
   14a2c:	ldr	r3, [r4]
   14a30:	str	r3, [sp, #52]	; 0x34
   14a34:	bl	13528 <close_stdout@@Base+0x3b8>
   14a38:	mov	r2, r8
   14a3c:	mov	r3, r5
   14a40:	mov	r0, r6
   14a44:	mov	r1, r7
   14a48:	bl	14408 <close_stdout@@Base+0x1298>
   14a4c:	ldr	r2, [sp, #52]	; 0x34
   14a50:	ldr	r3, [r4]
   14a54:	cmp	r2, r3
   14a58:	bne	14a64 <close_stdout@@Base+0x18f4>
   14a5c:	add	sp, sp, #56	; 0x38
   14a60:	pop	{r4, r5, r6, r7, r8, pc}
   14a64:	bl	11284 <__stack_chk_fail@plt>
   14a68:	strdeq	r5, [r1], -r0
   14a6c:	andeq	r0, r0, r0, lsr r1
   14a70:	mov	r2, r1
   14a74:	mov	r1, r0
   14a78:	mov	r0, #0
   14a7c:	b	14994 <close_stdout@@Base+0x1824>
   14a80:	mov	ip, r1
   14a84:	mov	r3, r2
   14a88:	mov	r1, r0
   14a8c:	mov	r2, ip
   14a90:	mov	r0, #0
   14a94:	b	14a00 <close_stdout@@Base+0x1890>
   14a98:	push	{r4, r5, r6, r7, r8, lr}
   14a9c:	mov	r5, r2
   14aa0:	ldr	lr, [pc, #136]	; 14b30 <close_stdout@@Base+0x19c0>
   14aa4:	mov	r7, r0
   14aa8:	mov	r6, r1
   14aac:	ldr	r4, [pc, #128]	; 14b34 <close_stdout@@Base+0x19c4>
   14ab0:	add	lr, pc, lr
   14ab4:	sub	sp, sp, #56	; 0x38
   14ab8:	add	lr, lr, #256	; 0x100
   14abc:	ldr	r8, [pc, #116]	; 14b38 <close_stdout@@Base+0x19c8>
   14ac0:	add	r4, pc, r4
   14ac4:	add	ip, sp, #4
   14ac8:	ldm	lr!, {r0, r1, r2, r3}
   14acc:	ldr	r4, [r4, r8]
   14ad0:	stmia	ip!, {r0, r1, r2, r3}
   14ad4:	ldm	lr!, {r0, r1, r2, r3}
   14ad8:	ldr	r8, [r4]
   14adc:	stmia	ip!, {r0, r1, r2, r3}
   14ae0:	ldm	lr, {r0, r1, r2, r3}
   14ae4:	str	r8, [sp, #52]	; 0x34
   14ae8:	stm	ip, {r0, r1, r2, r3}
   14aec:	mov	r1, r5
   14af0:	add	r5, sp, #4
   14af4:	mov	r2, #1
   14af8:	mov	r0, r5
   14afc:	bl	14664 <close_stdout@@Base+0x14f4>
   14b00:	mov	r2, r6
   14b04:	mov	r3, r5
   14b08:	mov	r1, r7
   14b0c:	mov	r0, #0
   14b10:	bl	14408 <close_stdout@@Base+0x1298>
   14b14:	ldr	r2, [sp, #52]	; 0x34
   14b18:	ldr	r3, [r4]
   14b1c:	cmp	r2, r3
   14b20:	bne	14b2c <close_stdout@@Base+0x19bc>
   14b24:	add	sp, sp, #56	; 0x38
   14b28:	pop	{r4, r5, r6, r7, r8, pc}
   14b2c:	bl	11284 <__stack_chk_fail@plt>
   14b30:	muleq	r1, r4, r7
   14b34:	andeq	r5, r1, r8, lsr r5
   14b38:	andeq	r0, r0, r0, lsr r1
   14b3c:	mov	r2, r1
   14b40:	mvn	r1, #0
   14b44:	b	14a98 <close_stdout@@Base+0x1928>
   14b48:	mov	r1, #58	; 0x3a
   14b4c:	b	14b3c <close_stdout@@Base+0x19cc>
   14b50:	mov	r2, #58	; 0x3a
   14b54:	b	14a98 <close_stdout@@Base+0x1928>
   14b58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b5c:	mov	r5, r2
   14b60:	ldr	lr, [pc, #144]	; 14bf8 <close_stdout@@Base+0x1a88>
   14b64:	mov	r8, r0
   14b68:	mov	r9, r1
   14b6c:	mov	r7, r3
   14b70:	add	lr, pc, lr
   14b74:	ldr	r4, [pc, #128]	; 14bfc <close_stdout@@Base+0x1a8c>
   14b78:	add	lr, lr, #256	; 0x100
   14b7c:	sub	sp, sp, #56	; 0x38
   14b80:	ldr	sl, [pc, #120]	; 14c00 <close_stdout@@Base+0x1a90>
   14b84:	add	r4, pc, r4
   14b88:	ldm	lr!, {r0, r1, r2, r3}
   14b8c:	add	ip, sp, #4
   14b90:	ldr	r4, [r4, sl]
   14b94:	ldr	r6, [sp, #88]	; 0x58
   14b98:	stmia	ip!, {r0, r1, r2, r3}
   14b9c:	ldm	lr!, {r0, r1, r2, r3}
   14ba0:	ldr	sl, [r4]
   14ba4:	stmia	ip!, {r0, r1, r2, r3}
   14ba8:	ldm	lr, {r0, r1, r2, r3}
   14bac:	str	sl, [sp, #52]	; 0x34
   14bb0:	stm	ip, {r0, r1, r2, r3}
   14bb4:	mov	r2, r5
   14bb8:	add	r5, sp, #4
   14bbc:	mov	r1, r9
   14bc0:	mov	r0, r5
   14bc4:	bl	146d8 <close_stdout@@Base+0x1568>
   14bc8:	mov	r2, r6
   14bcc:	mov	r3, r5
   14bd0:	mov	r0, r8
   14bd4:	mov	r1, r7
   14bd8:	bl	14408 <close_stdout@@Base+0x1298>
   14bdc:	ldr	r2, [sp, #52]	; 0x34
   14be0:	ldr	r3, [r4]
   14be4:	cmp	r2, r3
   14be8:	bne	14bf4 <close_stdout@@Base+0x1a84>
   14bec:	add	sp, sp, #56	; 0x38
   14bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bf4:	bl	11284 <__stack_chk_fail@plt>
   14bf8:	ldrdeq	r5, [r1], -r4
   14bfc:	andeq	r5, r1, r4, ror r4
   14c00:	andeq	r0, r0, r0, lsr r1
   14c04:	push	{lr}		; (str lr, [sp, #-4]!)
   14c08:	sub	sp, sp, #12
   14c0c:	mvn	ip, #0
   14c10:	str	ip, [sp]
   14c14:	bl	14b58 <close_stdout@@Base+0x19e8>
   14c18:	add	sp, sp, #12
   14c1c:	pop	{pc}		; (ldr pc, [sp], #4)
   14c20:	mov	ip, r1
   14c24:	mov	r3, r2
   14c28:	mov	r1, r0
   14c2c:	mov	r2, ip
   14c30:	mov	r0, #0
   14c34:	b	14c04 <close_stdout@@Base+0x1a94>
   14c38:	push	{lr}		; (str lr, [sp, #-4]!)
   14c3c:	sub	sp, sp, #12
   14c40:	mov	lr, r1
   14c44:	mov	ip, r2
   14c48:	mov	r1, r0
   14c4c:	str	r3, [sp]
   14c50:	mov	r2, lr
   14c54:	mov	r3, ip
   14c58:	mov	r0, #0
   14c5c:	bl	14b58 <close_stdout@@Base+0x19e8>
   14c60:	add	sp, sp, #12
   14c64:	pop	{pc}		; (ldr pc, [sp], #4)
   14c68:	ldr	r3, [pc, #12]	; 14c7c <close_stdout@@Base+0x1b0c>
   14c6c:	ldr	ip, [pc, #12]	; 14c80 <close_stdout@@Base+0x1b10>
   14c70:	add	r3, pc, r3
   14c74:	ldr	r3, [r3, ip]
   14c78:	b	14408 <close_stdout@@Base+0x1298>
   14c7c:	andeq	r5, r1, r8, lsl #7
   14c80:	andeq	r0, r0, ip, lsr #2
   14c84:	mov	r2, r1
   14c88:	mov	r1, r0
   14c8c:	mov	r0, #0
   14c90:	b	14c68 <close_stdout@@Base+0x1af8>
   14c94:	mvn	r2, #0
   14c98:	b	14c68 <close_stdout@@Base+0x1af8>
   14c9c:	mov	r1, r0
   14ca0:	mov	r0, #0
   14ca4:	b	14c94 <close_stdout@@Base+0x1b24>
   14ca8:	push	{r4, r5, r6, r7, lr}
   14cac:	cmp	r1, #0
   14cb0:	sub	sp, sp, #36	; 0x24
   14cb4:	ldr	r7, [pc, #896]	; 1503c <close_stdout@@Base+0x1ecc>
   14cb8:	mov	ip, r3
   14cbc:	mov	r5, r0
   14cc0:	add	r7, pc, r7
   14cc4:	ldr	r4, [sp, #56]	; 0x38
   14cc8:	ldr	r6, [sp, #60]	; 0x3c
   14ccc:	beq	15010 <close_stdout@@Base+0x1ea0>
   14cd0:	str	r2, [sp]
   14cd4:	mov	r3, r1
   14cd8:	ldr	r2, [pc, #864]	; 15040 <close_stdout@@Base+0x1ed0>
   14cdc:	mov	r1, #1
   14ce0:	str	ip, [sp, #4]
   14ce4:	add	r2, pc, r2
   14ce8:	bl	11440 <__fprintf_chk@plt>
   14cec:	ldr	r1, [pc, #848]	; 15044 <close_stdout@@Base+0x1ed4>
   14cf0:	mov	r2, #5
   14cf4:	mov	r0, #0
   14cf8:	add	r1, pc, r1
   14cfc:	bl	1126c <dcgettext@plt>
   14d00:	ldr	r2, [pc, #832]	; 15048 <close_stdout@@Base+0x1ed8>
   14d04:	movw	ip, #2013	; 0x7dd
   14d08:	mov	r1, #1
   14d0c:	ldr	r2, [r7, r2]
   14d10:	str	ip, [sp]
   14d14:	mov	r3, r0
   14d18:	mov	r0, r5
   14d1c:	bl	11440 <__fprintf_chk@plt>
   14d20:	ldr	r1, [pc, #804]	; 1504c <close_stdout@@Base+0x1edc>
   14d24:	mov	r0, #0
   14d28:	mov	r2, #5
   14d2c:	add	r1, pc, r1
   14d30:	bl	1126c <dcgettext@plt>
   14d34:	mov	r1, r5
   14d38:	bl	111dc <fputs_unlocked@plt>
   14d3c:	cmp	r6, #9
   14d40:	addls	pc, pc, r6, lsl #2
   14d44:	b	1502c <close_stdout@@Base+0x1ebc>
   14d48:	b	14ddc <close_stdout@@Base+0x1c6c>
   14d4c:	b	14de0 <close_stdout@@Base+0x1c70>
   14d50:	b	14e10 <close_stdout@@Base+0x1ca0>
   14d54:	b	14e44 <close_stdout@@Base+0x1cd4>
   14d58:	b	14e80 <close_stdout@@Base+0x1d10>
   14d5c:	b	14ec0 <close_stdout@@Base+0x1d50>
   14d60:	b	14f08 <close_stdout@@Base+0x1d98>
   14d64:	b	14f58 <close_stdout@@Base+0x1de8>
   14d68:	b	14fb0 <close_stdout@@Base+0x1e40>
   14d6c:	b	14d70 <close_stdout@@Base+0x1c00>
   14d70:	ldr	r1, [pc, #728]	; 15050 <close_stdout@@Base+0x1ee0>
   14d74:	mov	r0, #0
   14d78:	add	r1, pc, r1
   14d7c:	mov	r2, #5
   14d80:	bl	1126c <dcgettext@plt>
   14d84:	ldm	r4, {r3, ip}
   14d88:	mov	r1, #1
   14d8c:	str	ip, [sp]
   14d90:	ldr	ip, [r4, #8]
   14d94:	str	ip, [sp, #4]
   14d98:	ldr	ip, [r4, #12]
   14d9c:	str	ip, [sp, #8]
   14da0:	ldr	ip, [r4, #16]
   14da4:	str	ip, [sp, #12]
   14da8:	ldr	ip, [r4, #20]
   14dac:	str	ip, [sp, #16]
   14db0:	ldr	ip, [r4, #24]
   14db4:	str	ip, [sp, #20]
   14db8:	ldr	ip, [r4, #28]
   14dbc:	str	ip, [sp, #24]
   14dc0:	ldr	ip, [r4, #32]
   14dc4:	str	ip, [sp, #28]
   14dc8:	mov	r2, r0
   14dcc:	mov	r0, r5
   14dd0:	bl	11440 <__fprintf_chk@plt>
   14dd4:	add	sp, sp, #36	; 0x24
   14dd8:	pop	{r4, r5, r6, r7, pc}
   14ddc:	bl	114e8 <abort@plt>
   14de0:	ldr	r1, [pc, #620]	; 15054 <close_stdout@@Base+0x1ee4>
   14de4:	mov	r2, #5
   14de8:	mov	r0, #0
   14dec:	add	r1, pc, r1
   14df0:	bl	1126c <dcgettext@plt>
   14df4:	ldr	r3, [r4]
   14df8:	mov	r1, #1
   14dfc:	mov	r2, r0
   14e00:	mov	r0, r5
   14e04:	add	sp, sp, #36	; 0x24
   14e08:	pop	{r4, r5, r6, r7, lr}
   14e0c:	b	11440 <__fprintf_chk@plt>
   14e10:	ldr	r1, [pc, #576]	; 15058 <close_stdout@@Base+0x1ee8>
   14e14:	mov	r2, #5
   14e18:	mov	r0, #0
   14e1c:	add	r1, pc, r1
   14e20:	bl	1126c <dcgettext@plt>
   14e24:	ldm	r4, {r3, ip}
   14e28:	mov	r1, #1
   14e2c:	str	ip, [sp, #56]	; 0x38
   14e30:	mov	r2, r0
   14e34:	mov	r0, r5
   14e38:	add	sp, sp, #36	; 0x24
   14e3c:	pop	{r4, r5, r6, r7, lr}
   14e40:	b	11440 <__fprintf_chk@plt>
   14e44:	ldr	r1, [pc, #528]	; 1505c <close_stdout@@Base+0x1eec>
   14e48:	mov	r2, #5
   14e4c:	mov	r0, #0
   14e50:	add	r1, pc, r1
   14e54:	bl	1126c <dcgettext@plt>
   14e58:	ldm	r4, {r3, ip}
   14e5c:	mov	r1, #1
   14e60:	str	ip, [sp, #56]	; 0x38
   14e64:	ldr	ip, [r4, #8]
   14e68:	str	ip, [sp, #60]	; 0x3c
   14e6c:	mov	r2, r0
   14e70:	mov	r0, r5
   14e74:	add	sp, sp, #36	; 0x24
   14e78:	pop	{r4, r5, r6, r7, lr}
   14e7c:	b	11440 <__fprintf_chk@plt>
   14e80:	ldr	r1, [pc, #472]	; 15060 <close_stdout@@Base+0x1ef0>
   14e84:	mov	r2, #5
   14e88:	mov	r0, #0
   14e8c:	add	r1, pc, r1
   14e90:	bl	1126c <dcgettext@plt>
   14e94:	ldm	r4, {r3, ip}
   14e98:	mov	r1, #1
   14e9c:	str	ip, [sp]
   14ea0:	ldr	ip, [r4, #8]
   14ea4:	str	ip, [sp, #4]
   14ea8:	ldr	ip, [r4, #12]
   14eac:	str	ip, [sp, #8]
   14eb0:	mov	r2, r0
   14eb4:	mov	r0, r5
   14eb8:	bl	11440 <__fprintf_chk@plt>
   14ebc:	b	14dd4 <close_stdout@@Base+0x1c64>
   14ec0:	ldr	r1, [pc, #412]	; 15064 <close_stdout@@Base+0x1ef4>
   14ec4:	mov	r2, #5
   14ec8:	mov	r0, #0
   14ecc:	add	r1, pc, r1
   14ed0:	bl	1126c <dcgettext@plt>
   14ed4:	ldm	r4, {r3, ip}
   14ed8:	mov	r1, #1
   14edc:	str	ip, [sp]
   14ee0:	ldr	ip, [r4, #8]
   14ee4:	str	ip, [sp, #4]
   14ee8:	ldr	ip, [r4, #12]
   14eec:	str	ip, [sp, #8]
   14ef0:	ldr	ip, [r4, #16]
   14ef4:	str	ip, [sp, #12]
   14ef8:	mov	r2, r0
   14efc:	mov	r0, r5
   14f00:	bl	11440 <__fprintf_chk@plt>
   14f04:	b	14dd4 <close_stdout@@Base+0x1c64>
   14f08:	ldr	r1, [pc, #344]	; 15068 <close_stdout@@Base+0x1ef8>
   14f0c:	mov	r2, #5
   14f10:	mov	r0, #0
   14f14:	add	r1, pc, r1
   14f18:	bl	1126c <dcgettext@plt>
   14f1c:	ldm	r4, {r3, ip}
   14f20:	mov	r1, #1
   14f24:	str	ip, [sp]
   14f28:	ldr	ip, [r4, #8]
   14f2c:	str	ip, [sp, #4]
   14f30:	ldr	ip, [r4, #12]
   14f34:	str	ip, [sp, #8]
   14f38:	ldr	ip, [r4, #16]
   14f3c:	str	ip, [sp, #12]
   14f40:	ldr	ip, [r4, #20]
   14f44:	str	ip, [sp, #16]
   14f48:	mov	r2, r0
   14f4c:	mov	r0, r5
   14f50:	bl	11440 <__fprintf_chk@plt>
   14f54:	b	14dd4 <close_stdout@@Base+0x1c64>
   14f58:	ldr	r1, [pc, #268]	; 1506c <close_stdout@@Base+0x1efc>
   14f5c:	mov	r2, #5
   14f60:	mov	r0, #0
   14f64:	add	r1, pc, r1
   14f68:	bl	1126c <dcgettext@plt>
   14f6c:	ldm	r4, {r3, ip}
   14f70:	mov	r1, #1
   14f74:	str	ip, [sp]
   14f78:	ldr	ip, [r4, #8]
   14f7c:	str	ip, [sp, #4]
   14f80:	ldr	ip, [r4, #12]
   14f84:	str	ip, [sp, #8]
   14f88:	ldr	ip, [r4, #16]
   14f8c:	str	ip, [sp, #12]
   14f90:	ldr	ip, [r4, #20]
   14f94:	str	ip, [sp, #16]
   14f98:	ldr	ip, [r4, #24]
   14f9c:	str	ip, [sp, #20]
   14fa0:	mov	r2, r0
   14fa4:	mov	r0, r5
   14fa8:	bl	11440 <__fprintf_chk@plt>
   14fac:	b	14dd4 <close_stdout@@Base+0x1c64>
   14fb0:	ldr	r1, [pc, #184]	; 15070 <close_stdout@@Base+0x1f00>
   14fb4:	mov	r2, #5
   14fb8:	mov	r0, #0
   14fbc:	add	r1, pc, r1
   14fc0:	bl	1126c <dcgettext@plt>
   14fc4:	ldm	r4, {r3, ip}
   14fc8:	mov	r1, #1
   14fcc:	str	ip, [sp]
   14fd0:	ldr	ip, [r4, #8]
   14fd4:	str	ip, [sp, #4]
   14fd8:	ldr	ip, [r4, #12]
   14fdc:	str	ip, [sp, #8]
   14fe0:	ldr	ip, [r4, #16]
   14fe4:	str	ip, [sp, #12]
   14fe8:	ldr	ip, [r4, #20]
   14fec:	str	ip, [sp, #16]
   14ff0:	ldr	ip, [r4, #24]
   14ff4:	str	ip, [sp, #20]
   14ff8:	ldr	ip, [r4, #28]
   14ffc:	str	ip, [sp, #24]
   15000:	mov	r2, r0
   15004:	mov	r0, r5
   15008:	bl	11440 <__fprintf_chk@plt>
   1500c:	b	14dd4 <close_stdout@@Base+0x1c64>
   15010:	str	r3, [sp]
   15014:	mov	r3, r2
   15018:	ldr	r2, [pc, #84]	; 15074 <close_stdout@@Base+0x1f04>
   1501c:	mov	r1, #1
   15020:	add	r2, pc, r2
   15024:	bl	11440 <__fprintf_chk@plt>
   15028:	b	14cec <close_stdout@@Base+0x1b7c>
   1502c:	ldr	r1, [pc, #68]	; 15078 <close_stdout@@Base+0x1f08>
   15030:	mov	r0, #0
   15034:	add	r1, pc, r1
   15038:	b	14d7c <close_stdout@@Base+0x1c0c>
   1503c:	andeq	r5, r1, r8, lsr r3
   15040:			; <UNDEFINED> instruction: 0x000041b8
   15044:			; <UNDEFINED> instruction: 0x000041b8
   15048:	andeq	r0, r0, ip, asr r1
   1504c:	andeq	r4, r0, r8, lsl #3
   15050:	andeq	r4, r0, r4, lsl r3
   15054:	muleq	r0, r4, r1
   15058:	andeq	r4, r0, r4, ror r1
   1505c:	andeq	r4, r0, r8, asr r1
   15060:	andeq	r4, r0, r8, lsr r1
   15064:	andeq	r4, r0, r8, lsl r1
   15068:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1506c:	andeq	r4, r0, ip, asr #1
   15070:	andeq	r4, r0, r0, lsr #1
   15074:	andeq	r3, r0, r8, lsl #29
   15078:	andeq	r4, r0, ip, lsl #1
   1507c:	push	{r4, r5, lr}
   15080:	sub	sp, sp, #12
   15084:	ldr	r5, [sp, #24]
   15088:	ldr	ip, [r5]
   1508c:	cmp	ip, #0
   15090:	beq	150ac <close_stdout@@Base+0x1f3c>
   15094:	mov	lr, r5
   15098:	mov	ip, #0
   1509c:	ldr	r4, [lr, #4]!
   150a0:	add	ip, ip, #1
   150a4:	cmp	r4, #0
   150a8:	bne	1509c <close_stdout@@Base+0x1f2c>
   150ac:	stm	sp, {r5, ip}
   150b0:	bl	14ca8 <close_stdout@@Base+0x1b38>
   150b4:	add	sp, sp, #12
   150b8:	pop	{r4, r5, pc}
   150bc:	push	{r4, r5, r6, r7, lr}
   150c0:	sub	sp, sp, #60	; 0x3c
   150c4:	ldr	r4, [pc, #100]	; 15130 <close_stdout@@Base+0x1fc0>
   150c8:	mov	ip, #0
   150cc:	ldr	r5, [pc, #96]	; 15134 <close_stdout@@Base+0x1fc4>
   150d0:	mov	lr, ip
   150d4:	add	r4, pc, r4
   150d8:	ldr	r6, [sp, #80]	; 0x50
   150dc:	ldr	r7, [r4, r5]
   150e0:	add	r5, sp, #12
   150e4:	ldr	r4, [r7]
   150e8:	str	r4, [sp, #52]	; 0x34
   150ec:	ldr	r4, [r6, ip]
   150f0:	cmp	r4, #0
   150f4:	str	r4, [r5, ip]
   150f8:	beq	1510c <close_stdout@@Base+0x1f9c>
   150fc:	add	lr, lr, #1
   15100:	add	ip, ip, #4
   15104:	cmp	lr, #10
   15108:	bne	150ec <close_stdout@@Base+0x1f7c>
   1510c:	stm	sp, {r5, lr}
   15110:	bl	14ca8 <close_stdout@@Base+0x1b38>
   15114:	ldr	r2, [sp, #52]	; 0x34
   15118:	ldr	r3, [r7]
   1511c:	cmp	r2, r3
   15120:	bne	1512c <close_stdout@@Base+0x1fbc>
   15124:	add	sp, sp, #60	; 0x3c
   15128:	pop	{r4, r5, r6, r7, pc}
   1512c:	bl	11284 <__stack_chk_fail@plt>
   15130:	andeq	r4, r1, r4, lsr #30
   15134:	andeq	r0, r0, r0, lsr r1
   15138:	push	{r3}		; (str r3, [sp, #-4]!)
   1513c:	push	{r4, lr}
   15140:	sub	sp, sp, #20
   15144:	ldr	lr, [pc, #72]	; 15194 <close_stdout@@Base+0x2024>
   15148:	add	ip, sp, #32
   1514c:	ldr	r4, [pc, #68]	; 15198 <close_stdout@@Base+0x2028>
   15150:	add	lr, pc, lr
   15154:	ldr	r3, [sp, #28]
   15158:	ldr	r4, [lr, r4]
   1515c:	str	ip, [sp]
   15160:	str	ip, [sp, #8]
   15164:	ldr	ip, [r4]
   15168:	str	ip, [sp, #12]
   1516c:	bl	150bc <close_stdout@@Base+0x1f4c>
   15170:	ldr	r2, [sp, #12]
   15174:	ldr	r3, [r4]
   15178:	cmp	r2, r3
   1517c:	bne	15190 <close_stdout@@Base+0x2020>
   15180:	add	sp, sp, #20
   15184:	pop	{r4, lr}
   15188:	add	sp, sp, #4
   1518c:	bx	lr
   15190:	bl	11284 <__stack_chk_fail@plt>
   15194:	andeq	r4, r1, r8, lsr #29
   15198:	andeq	r0, r0, r0, lsr r1
   1519c:	ldr	r1, [pc, #132]	; 15228 <close_stdout@@Base+0x20b8>
   151a0:	mov	r2, #5
   151a4:	push	{r4, lr}
   151a8:	add	r1, pc, r1
   151ac:	mov	r0, #0
   151b0:	ldr	r4, [pc, #116]	; 1522c <close_stdout@@Base+0x20bc>
   151b4:	bl	1126c <dcgettext@plt>
   151b8:	ldr	r2, [pc, #112]	; 15230 <close_stdout@@Base+0x20c0>
   151bc:	add	r4, pc, r4
   151c0:	add	r2, pc, r2
   151c4:	mov	r1, r0
   151c8:	mov	r0, #1
   151cc:	bl	11428 <__printf_chk@plt>
   151d0:	ldr	r1, [pc, #92]	; 15234 <close_stdout@@Base+0x20c4>
   151d4:	mov	r2, #5
   151d8:	mov	r0, #0
   151dc:	add	r1, pc, r1
   151e0:	bl	1126c <dcgettext@plt>
   151e4:	ldr	r2, [pc, #76]	; 15238 <close_stdout@@Base+0x20c8>
   151e8:	ldr	r3, [pc, #76]	; 1523c <close_stdout@@Base+0x20cc>
   151ec:	add	r2, pc, r2
   151f0:	add	r3, pc, r3
   151f4:	mov	r1, r0
   151f8:	mov	r0, #1
   151fc:	bl	11428 <__printf_chk@plt>
   15200:	ldr	r1, [pc, #56]	; 15240 <close_stdout@@Base+0x20d0>
   15204:	mov	r0, #0
   15208:	mov	r2, #5
   1520c:	add	r1, pc, r1
   15210:	bl	1126c <dcgettext@plt>
   15214:	ldr	r3, [pc, #40]	; 15244 <close_stdout@@Base+0x20d4>
   15218:	ldr	r3, [r4, r3]
   1521c:	pop	{r4, lr}
   15220:	ldr	r1, [r3]
   15224:	b	111dc <fputs_unlocked@plt>
   15228:	andeq	r3, r0, r4, asr pc
   1522c:	andeq	r4, r1, ip, lsr lr
   15230:	andeq	r3, r0, r4, asr pc
   15234:	andeq	r3, r0, r0, asr pc
   15238:	andeq	r3, r0, ip, ror #19
   1523c:	strdeq	r3, [r0], -r8
   15240:	andeq	r3, r0, r4, lsr pc
   15244:	andeq	r0, r0, ip, asr #2
   15248:	push	{r4, lr}
   1524c:	mov	r4, r0
   15250:	bl	1132c <malloc@plt>
   15254:	rsbs	r3, r0, #1
   15258:	movcc	r3, #0
   1525c:	cmp	r4, #0
   15260:	moveq	r3, #0
   15264:	cmp	r3, #0
   15268:	popeq	{r4, pc}
   1526c:	bl	1545c <close_stdout@@Base+0x22ec>
   15270:	push	{r3, r4, r5, lr}
   15274:	mov	r4, r0
   15278:	mvn	r0, #0
   1527c:	mov	r5, r1
   15280:	bl	17980 <close_stdout@@Base+0x4810>
   15284:	cmp	r0, r4
   15288:	bcc	15298 <close_stdout@@Base+0x2128>
   1528c:	mul	r0, r4, r5
   15290:	pop	{r3, r4, r5, lr}
   15294:	b	15248 <close_stdout@@Base+0x20d8>
   15298:	bl	1545c <close_stdout@@Base+0x22ec>
   1529c:	b	15248 <close_stdout@@Base+0x20d8>
   152a0:	rsbs	r3, r1, #1
   152a4:	push	{r4, lr}
   152a8:	movcc	r3, #0
   152ac:	cmp	r0, #0
   152b0:	mov	r4, r1
   152b4:	moveq	r3, #0
   152b8:	cmp	r3, #0
   152bc:	bne	152e0 <close_stdout@@Base+0x2170>
   152c0:	bl	11290 <realloc@plt>
   152c4:	rsbs	r3, r0, #1
   152c8:	movcc	r3, #0
   152cc:	cmp	r4, #0
   152d0:	moveq	r3, #0
   152d4:	cmp	r3, #0
   152d8:	popeq	{r4, pc}
   152dc:	bl	1545c <close_stdout@@Base+0x22ec>
   152e0:	bl	11218 <free@plt>
   152e4:	mov	r0, #0
   152e8:	pop	{r4, pc}
   152ec:	push	{r4, r5, r6, lr}
   152f0:	mov	r5, r1
   152f4:	mov	r6, r0
   152f8:	mov	r1, r2
   152fc:	mvn	r0, #0
   15300:	mov	r4, r2
   15304:	bl	17980 <close_stdout@@Base+0x4810>
   15308:	cmp	r0, r5
   1530c:	bcc	15320 <close_stdout@@Base+0x21b0>
   15310:	mov	r0, r6
   15314:	mul	r1, r5, r4
   15318:	pop	{r4, r5, r6, lr}
   1531c:	b	152a0 <close_stdout@@Base+0x2130>
   15320:	bl	1545c <close_stdout@@Base+0x22ec>
   15324:	push	{r3, r4, r5, r6, r7, lr}
   15328:	subs	r7, r0, #0
   1532c:	mov	r5, r1
   15330:	mov	r6, r2
   15334:	ldr	r4, [r1]
   15338:	beq	15370 <close_stdout@@Base+0x2200>
   1533c:	movw	r0, #43690	; 0xaaaa
   15340:	mov	r1, r2
   15344:	bfi	r0, r0, #16, #16
   15348:	bl	17980 <close_stdout@@Base+0x4810>
   1534c:	cmp	r4, r0
   15350:	addcc	r3, r4, #1
   15354:	addcc	r4, r4, r3, lsr #1
   15358:	bcs	15394 <close_stdout@@Base+0x2224>
   1535c:	str	r4, [r5]
   15360:	mov	r0, r7
   15364:	mul	r1, r6, r4
   15368:	pop	{r3, r4, r5, r6, r7, lr}
   1536c:	b	152a0 <close_stdout@@Base+0x2130>
   15370:	cmp	r4, #0
   15374:	bne	1535c <close_stdout@@Base+0x21ec>
   15378:	mov	r0, #64	; 0x40
   1537c:	mov	r1, r2
   15380:	bl	17980 <close_stdout@@Base+0x4810>
   15384:	cmp	r0, #0
   15388:	movne	r4, r0
   1538c:	addeq	r4, r0, #1
   15390:	b	1535c <close_stdout@@Base+0x21ec>
   15394:	bl	1545c <close_stdout@@Base+0x22ec>
   15398:	cmp	r0, #0
   1539c:	push	{r3, lr}
   153a0:	ldr	r3, [r1]
   153a4:	beq	153d0 <close_stdout@@Base+0x2260>
   153a8:	movw	r2, #43689	; 0xaaa9
   153ac:	movt	r2, #43690	; 0xaaaa
   153b0:	cmp	r3, r2
   153b4:	addls	r2, r3, #1
   153b8:	addls	r3, r3, r2, lsr #1
   153bc:	bhi	153e8 <close_stdout@@Base+0x2278>
   153c0:	str	r3, [r1]
   153c4:	mov	r1, r3
   153c8:	pop	{r3, lr}
   153cc:	b	152a0 <close_stdout@@Base+0x2130>
   153d0:	cmp	r3, #0
   153d4:	moveq	r3, #64	; 0x40
   153d8:	str	r3, [r1]
   153dc:	mov	r1, r3
   153e0:	pop	{r3, lr}
   153e4:	b	152a0 <close_stdout@@Base+0x2130>
   153e8:	bl	1545c <close_stdout@@Base+0x22ec>
   153ec:	push	{r4, lr}
   153f0:	mov	r4, r0
   153f4:	bl	15248 <close_stdout@@Base+0x20d8>
   153f8:	mov	r2, r4
   153fc:	mov	r1, #0
   15400:	pop	{r4, lr}
   15404:	b	11404 <memset@plt>
   15408:	push	{r3, lr}
   1540c:	bl	111d0 <calloc@plt>
   15410:	cmp	r0, #0
   15414:	popne	{r3, pc}
   15418:	bl	1545c <close_stdout@@Base+0x22ec>
   1541c:	push	{r3, r4, r5, lr}
   15420:	mov	r4, r1
   15424:	mov	r5, r0
   15428:	mov	r0, r1
   1542c:	bl	15248 <close_stdout@@Base+0x20d8>
   15430:	mov	r1, r5
   15434:	mov	r2, r4
   15438:	pop	{r3, r4, r5, lr}
   1543c:	b	1123c <memcpy@plt>
   15440:	push	{r4, lr}
   15444:	mov	r4, r0
   15448:	bl	113b0 <strlen@plt>
   1544c:	add	r1, r0, #1
   15450:	mov	r0, r4
   15454:	pop	{r4, lr}
   15458:	b	1541c <close_stdout@@Base+0x22ac>
   1545c:	ldr	r3, [pc, #64]	; 154a4 <close_stdout@@Base+0x2334>
   15460:	mov	r2, #5
   15464:	ldr	ip, [pc, #60]	; 154a8 <close_stdout@@Base+0x2338>
   15468:	mov	r0, #0
   1546c:	add	r3, pc, r3
   15470:	ldr	r1, [pc, #52]	; 154ac <close_stdout@@Base+0x233c>
   15474:	push	{r4, lr}
   15478:	add	r1, pc, r1
   1547c:	ldr	r3, [r3, ip]
   15480:	ldr	r4, [r3]
   15484:	bl	1126c <dcgettext@plt>
   15488:	ldr	r2, [pc, #32]	; 154b0 <close_stdout@@Base+0x2340>
   1548c:	mov	r1, #0
   15490:	add	r2, pc, r2
   15494:	mov	r3, r0
   15498:	mov	r0, r4
   1549c:	bl	112fc <error@plt>
   154a0:	bl	114e8 <abort@plt>
   154a4:	andeq	r4, r1, ip, lsl #23
   154a8:	andeq	r0, r0, r0, asr r1
   154ac:	andeq	r3, r0, r8, lsr sp
   154b0:	andeq	r3, r0, r0, asr #18
   154b4:	ldr	ip, [pc, #84]	; 15510 <close_stdout@@Base+0x23a0>
   154b8:	push	{r1, r2, r3}
   154bc:	add	ip, pc, ip
   154c0:	push	{r4, lr}
   154c4:	sub	sp, sp, #12
   154c8:	ldr	lr, [pc, #68]	; 15514 <close_stdout@@Base+0x23a4>
   154cc:	add	r3, sp, #24
   154d0:	ldr	r1, [sp, #20]
   154d4:	mov	r2, r3
   154d8:	ldr	r4, [ip, lr]
   154dc:	str	r3, [sp]
   154e0:	ldr	r3, [r4]
   154e4:	str	r3, [sp, #4]
   154e8:	bl	156b8 <close_stdout@@Base+0x2548>
   154ec:	ldr	r2, [sp, #4]
   154f0:	ldr	r3, [r4]
   154f4:	cmp	r2, r3
   154f8:	bne	1550c <close_stdout@@Base+0x239c>
   154fc:	add	sp, sp, #12
   15500:	pop	{r4, lr}
   15504:	add	sp, sp, #12
   15508:	bx	lr
   1550c:	bl	11284 <__stack_chk_fail@plt>
   15510:	andeq	r4, r1, ip, lsr fp
   15514:	andeq	r0, r0, r0, lsr r1
   15518:	push	{r3, r4, r5, lr}
   1551c:	mov	r5, r0
   15520:	mov	r0, #33	; 0x21
   15524:	bl	15248 <close_stdout@@Base+0x20d8>
   15528:	add	r1, r5, #44	; 0x2c
   1552c:	mov	r2, #32
   15530:	mov	r5, #0
   15534:	mov	r4, r0
   15538:	bl	11410 <strncpy@plt>
   1553c:	mov	r0, r4
   15540:	strb	r5, [r4, #32]
   15544:	bl	113b0 <strlen@plt>
   15548:	add	r0, r4, r0
   1554c:	cmp	r4, r0
   15550:	bcs	15560 <close_stdout@@Base+0x23f0>
   15554:	ldrb	r3, [r0, #-1]
   15558:	cmp	r3, #32
   1555c:	beq	15568 <close_stdout@@Base+0x23f8>
   15560:	mov	r0, r4
   15564:	pop	{r3, r4, r5, pc}
   15568:	strb	r5, [r0, #-1]!
   1556c:	cmp	r0, r4
   15570:	bne	15554 <close_stdout@@Base+0x23e4>
   15574:	b	15560 <close_stdout@@Base+0x23f0>
   15578:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1557c:	sub	sp, sp, #12
   15580:	mov	r6, #0
   15584:	movw	r8, #50971	; 0xc71b
   15588:	movt	r8, #113	; 0x71
   1558c:	mov	r4, r3
   15590:	mov	sl, r1
   15594:	mov	r9, r2
   15598:	mov	r5, r6
   1559c:	bl	1120c <utmpxname@plt>
   155a0:	mov	r7, r6
   155a4:	and	r3, r4, #2
   155a8:	and	r4, r4, #1
   155ac:	str	r3, [sp]
   155b0:	bl	11278 <setutxent@plt>
   155b4:	str	r4, [sp, #4]
   155b8:	mov	r4, r6
   155bc:	bl	114f4 <getutxent@plt>
   155c0:	subs	fp, r0, #0
   155c4:	beq	15614 <close_stdout@@Base+0x24a4>
   155c8:	ldrb	r2, [fp, #44]	; 0x2c
   155cc:	ldrh	r1, [fp]
   155d0:	cmp	r2, #0
   155d4:	ldr	r0, [fp, #4]
   155d8:	bne	1562c <close_stdout@@Base+0x24bc>
   155dc:	ldr	r3, [sp]
   155e0:	cmp	r3, #0
   155e4:	bne	155bc <close_stdout@@Base+0x244c>
   155e8:	cmp	r5, r4
   155ec:	beq	15670 <close_stdout@@Base+0x2500>
   155f0:	mov	r1, fp
   155f4:	add	r0, r7, r6
   155f8:	mov	r2, #384	; 0x180
   155fc:	add	r4, r4, #1
   15600:	bl	1123c <memcpy@plt>
   15604:	add	r6, r6, #384	; 0x180
   15608:	bl	114f4 <getutxent@plt>
   1560c:	subs	fp, r0, #0
   15610:	bne	155c8 <close_stdout@@Base+0x2458>
   15614:	bl	11470 <endutxent@plt>
   15618:	str	r4, [sl]
   1561c:	mov	r0, fp
   15620:	str	r7, [r9]
   15624:	add	sp, sp, #12
   15628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1562c:	cmp	r1, #7
   15630:	bne	155dc <close_stdout@@Base+0x246c>
   15634:	ldr	r3, [sp, #4]
   15638:	cmp	r3, #0
   1563c:	beq	155e8 <close_stdout@@Base+0x2478>
   15640:	cmp	r0, #0
   15644:	ble	155e8 <close_stdout@@Base+0x2478>
   15648:	mov	r1, #0
   1564c:	bl	11380 <kill@plt>
   15650:	cmp	r0, #0
   15654:	bge	155e8 <close_stdout@@Base+0x2478>
   15658:	bl	113d4 <__errno_location@plt>
   1565c:	ldr	r2, [r0]
   15660:	cmp	r2, #3
   15664:	beq	155bc <close_stdout@@Base+0x244c>
   15668:	cmp	r5, r4
   1566c:	bne	155f0 <close_stdout@@Base+0x2480>
   15670:	cmp	r7, #0
   15674:	beq	156a0 <close_stdout@@Base+0x2530>
   15678:	cmp	r5, r8
   1567c:	bhi	156b4 <close_stdout@@Base+0x2544>
   15680:	add	r2, r5, #1
   15684:	add	r5, r5, r2, lsr #1
   15688:	add	r1, r5, r5, lsl #1
   1568c:	lsl	r1, r1, #7
   15690:	mov	r0, r7
   15694:	bl	152a0 <close_stdout@@Base+0x2130>
   15698:	mov	r7, r0
   1569c:	b	155f0 <close_stdout@@Base+0x2480>
   156a0:	cmp	r5, #0
   156a4:	moveq	r1, #384	; 0x180
   156a8:	moveq	r5, #1
   156ac:	beq	15690 <close_stdout@@Base+0x2520>
   156b0:	b	15688 <close_stdout@@Base+0x2518>
   156b4:	bl	1545c <close_stdout@@Base+0x22ec>
   156b8:	ldr	ip, [pc, #136]	; 15748 <close_stdout@@Base+0x25d8>
   156bc:	mov	r3, r2
   156c0:	push	{r4, r5, lr}
   156c4:	add	ip, pc, ip
   156c8:	ldr	lr, [pc, #124]	; 1574c <close_stdout@@Base+0x25dc>
   156cc:	sub	sp, sp, #12
   156d0:	mov	r2, r1
   156d4:	mov	r5, r0
   156d8:	mov	r1, sp
   156dc:	mov	r0, #0
   156e0:	ldr	r4, [ip, lr]
   156e4:	ldr	ip, [r4]
   156e8:	str	ip, [sp, #4]
   156ec:	bl	15d98 <close_stdout@@Base+0x2c28>
   156f0:	subs	r2, r0, #0
   156f4:	beq	15724 <close_stdout@@Base+0x25b4>
   156f8:	ldr	r3, [sp]
   156fc:	cmp	r3, #0
   15700:	strge	r2, [r5]
   15704:	blt	1572c <close_stdout@@Base+0x25bc>
   15708:	ldr	r2, [sp, #4]
   1570c:	mov	r0, r3
   15710:	ldr	r3, [r4]
   15714:	cmp	r2, r3
   15718:	bne	15744 <close_stdout@@Base+0x25d4>
   1571c:	add	sp, sp, #12
   15720:	pop	{r4, r5, pc}
   15724:	mvn	r3, #0
   15728:	b	15708 <close_stdout@@Base+0x2598>
   1572c:	bl	11218 <free@plt>
   15730:	bl	113d4 <__errno_location@plt>
   15734:	mov	r2, #75	; 0x4b
   15738:	mvn	r3, #0
   1573c:	str	r2, [r0]
   15740:	b	15708 <close_stdout@@Base+0x2598>
   15744:	bl	11284 <__stack_chk_fail@plt>
   15748:	andeq	r4, r1, r4, lsr r9
   1574c:	andeq	r0, r0, r0, lsr r1
   15750:	push	{r4, r5, r6, lr}
   15754:	mov	r4, r0
   15758:	bl	112e4 <__fpending@plt>
   1575c:	mov	r6, r0
   15760:	mov	r0, r4
   15764:	ldr	r4, [r4]
   15768:	bl	15bf0 <close_stdout@@Base+0x2a80>
   1576c:	and	r4, r4, #32
   15770:	adds	r5, r0, #0
   15774:	movne	r5, #1
   15778:	cmp	r4, #0
   1577c:	bne	1579c <close_stdout@@Base+0x262c>
   15780:	cmp	r5, #0
   15784:	beq	15794 <close_stdout@@Base+0x2624>
   15788:	cmp	r6, #0
   1578c:	beq	157b8 <close_stdout@@Base+0x2648>
   15790:	mvn	r4, #0
   15794:	mov	r0, r4
   15798:	pop	{r4, r5, r6, pc}
   1579c:	cmp	r5, #0
   157a0:	bne	15790 <close_stdout@@Base+0x2620>
   157a4:	bl	113d4 <__errno_location@plt>
   157a8:	mvn	r4, #0
   157ac:	str	r5, [r0]
   157b0:	mov	r0, r4
   157b4:	pop	{r4, r5, r6, pc}
   157b8:	bl	113d4 <__errno_location@plt>
   157bc:	ldr	r4, [r0]
   157c0:	subs	r4, r4, #9
   157c4:	mvnne	r4, #0
   157c8:	mov	r0, r4
   157cc:	pop	{r4, r5, r6, pc}
   157d0:	ldr	r3, [pc, #984]	; 15bb0 <close_stdout@@Base+0x2a40>
   157d4:	mov	r0, #14
   157d8:	ldr	r2, [pc, #980]	; 15bb4 <close_stdout@@Base+0x2a44>
   157dc:	add	r3, pc, r3
   157e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157e4:	sub	sp, sp, #132	; 0x84
   157e8:	ldr	r6, [r3, r2]
   157ec:	ldr	r3, [r6]
   157f0:	str	r3, [sp, #124]	; 0x7c
   157f4:	bl	11494 <nl_langinfo@plt>
   157f8:	subs	r5, r0, #0
   157fc:	beq	158b0 <close_stdout@@Base+0x2740>
   15800:	ldr	r3, [pc, #944]	; 15bb8 <close_stdout@@Base+0x2a48>
   15804:	ldr	r4, [pc, r3]
   15808:	cmp	r4, #0
   1580c:	beq	158bc <close_stdout@@Base+0x274c>
   15810:	ldrb	r7, [r4]
   15814:	cmp	r7, #0
   15818:	bne	1584c <close_stdout@@Base+0x26dc>
   1581c:	b	15884 <close_stdout@@Base+0x2714>
   15820:	mov	r0, r4
   15824:	bl	113b0 <strlen@plt>
   15828:	add	r0, r0, #1
   1582c:	add	r7, r4, r0
   15830:	mov	r0, r7
   15834:	bl	113b0 <strlen@plt>
   15838:	add	r0, r0, #1
   1583c:	add	r4, r7, r0
   15840:	ldrb	r7, [r7, r0]
   15844:	cmp	r7, #0
   15848:	beq	15884 <close_stdout@@Base+0x2714>
   1584c:	mov	r0, r5
   15850:	mov	r1, r4
   15854:	bl	111f4 <strcmp@plt>
   15858:	cmp	r0, #0
   1585c:	beq	15874 <close_stdout@@Base+0x2704>
   15860:	cmp	r7, #42	; 0x2a
   15864:	bne	15820 <close_stdout@@Base+0x26b0>
   15868:	ldrb	r3, [r4, #1]
   1586c:	cmp	r3, #0
   15870:	bne	15820 <close_stdout@@Base+0x26b0>
   15874:	mov	r0, r4
   15878:	bl	113b0 <strlen@plt>
   1587c:	add	r0, r0, #1
   15880:	add	r5, r4, r0
   15884:	ldrb	r3, [r5]
   15888:	cmp	r3, #0
   1588c:	ldreq	r5, [pc, #808]	; 15bbc <close_stdout@@Base+0x2a4c>
   15890:	addeq	r5, pc, r5
   15894:	ldr	r2, [sp, #124]	; 0x7c
   15898:	mov	r0, r5
   1589c:	ldr	r3, [r6]
   158a0:	cmp	r2, r3
   158a4:	bne	15b84 <close_stdout@@Base+0x2a14>
   158a8:	add	sp, sp, #132	; 0x84
   158ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158b0:	ldr	r5, [pc, #776]	; 15bc0 <close_stdout@@Base+0x2a50>
   158b4:	add	r5, pc, r5
   158b8:	b	15800 <close_stdout@@Base+0x2690>
   158bc:	ldr	r0, [pc, #768]	; 15bc4 <close_stdout@@Base+0x2a54>
   158c0:	add	r0, pc, r0
   158c4:	bl	11314 <getenv@plt>
   158c8:	subs	r8, r0, #0
   158cc:	beq	15b5c <close_stdout@@Base+0x29ec>
   158d0:	ldrb	r3, [r8]
   158d4:	cmp	r3, #0
   158d8:	beq	15af0 <close_stdout@@Base+0x2980>
   158dc:	bl	113b0 <strlen@plt>
   158e0:	subs	sl, r0, #0
   158e4:	subne	r3, sl, #1
   158e8:	bne	15b00 <close_stdout@@Base+0x2990>
   158ec:	mov	r9, #0
   158f0:	mov	fp, r9
   158f4:	add	r9, sl, r9
   158f8:	add	r0, r9, #14
   158fc:	bl	1132c <malloc@plt>
   15900:	subs	r7, r0, #0
   15904:	beq	15b50 <close_stdout@@Base+0x29e0>
   15908:	mov	r1, r8
   1590c:	mov	r2, sl
   15910:	bl	1123c <memcpy@plt>
   15914:	cmp	fp, #0
   15918:	add	ip, r7, r9
   1591c:	movne	r3, #47	; 0x2f
   15920:	strbne	r3, [r7, sl]
   15924:	ldr	r3, [pc, #668]	; 15bc8 <close_stdout@@Base+0x2a58>
   15928:	add	r3, pc, r3
   1592c:	ldm	r3!, {r0, r1, r2}
   15930:	ldrh	r3, [r3]
   15934:	str	r0, [r7, r9]
   15938:	mov	r0, r7
   1593c:	str	r1, [ip, #4]
   15940:	mov	r1, #32768	; 0x8000
   15944:	strh	r3, [ip, #12]
   15948:	str	r2, [ip, #8]
   1594c:	bl	11308 <open64@plt>
   15950:	subs	r8, r0, #0
   15954:	blt	15b18 <close_stdout@@Base+0x29a8>
   15958:	ldr	r1, [pc, #620]	; 15bcc <close_stdout@@Base+0x2a5c>
   1595c:	add	r1, pc, r1
   15960:	bl	111c4 <fdopen@plt>
   15964:	subs	fp, r0, #0
   15968:	beq	15b70 <close_stdout@@Base+0x2a00>
   1596c:	ldr	r0, [pc, #604]	; 15bd0 <close_stdout@@Base+0x2a60>
   15970:	add	sl, sp, #20
   15974:	add	r9, sp, #72	; 0x48
   15978:	mov	r8, #0
   1597c:	add	r0, pc, r0
   15980:	str	r0, [sp, #12]
   15984:	ldr	r3, [fp, #4]
   15988:	ldr	r2, [fp, #8]
   1598c:	cmp	r3, r2
   15990:	bcs	15a7c <close_stdout@@Base+0x290c>
   15994:	add	r2, r3, #1
   15998:	str	r2, [fp, #4]
   1599c:	ldrb	r0, [r3]
   159a0:	cmp	r0, #32
   159a4:	beq	15984 <close_stdout@@Base+0x2814>
   159a8:	sub	r3, r0, #9
   159ac:	cmp	r3, #1
   159b0:	bls	15984 <close_stdout@@Base+0x2814>
   159b4:	cmp	r0, #35	; 0x23
   159b8:	beq	15a90 <close_stdout@@Base+0x2920>
   159bc:	mov	r1, fp
   159c0:	bl	113c8 <ungetc@plt>
   159c4:	mov	r0, fp
   159c8:	ldr	r1, [sp, #12]
   159cc:	mov	r2, sl
   159d0:	mov	r3, r9
   159d4:	bl	1141c <fscanf@plt>
   159d8:	cmp	r0, #1
   159dc:	ble	15ac0 <close_stdout@@Base+0x2950>
   159e0:	mov	r0, sl
   159e4:	bl	113b0 <strlen@plt>
   159e8:	str	r0, [sp, #8]
   159ec:	mov	r0, r9
   159f0:	bl	113b0 <strlen@plt>
   159f4:	cmp	r8, #0
   159f8:	mov	r2, r0
   159fc:	bne	15b24 <close_stdout@@Base+0x29b4>
   15a00:	ldr	r3, [sp, #8]
   15a04:	str	r2, [sp]
   15a08:	add	r8, r0, r3
   15a0c:	add	r0, r8, #3
   15a10:	add	r8, r8, #2
   15a14:	bl	1132c <malloc@plt>
   15a18:	ldr	r2, [sp]
   15a1c:	mov	r3, r0
   15a20:	cmp	r3, #0
   15a24:	beq	15b88 <close_stdout@@Base+0x2a18>
   15a28:	ldr	r0, [sp, #8]
   15a2c:	movw	r1, #65534	; 0xfffe
   15a30:	movt	r1, #65535	; 0xffff
   15a34:	rsb	r2, r2, r8
   15a38:	rsb	r1, r0, r1
   15a3c:	stm	sp, {r2, r3}
   15a40:	add	r0, r1, r2
   15a44:	mov	r1, sl
   15a48:	add	r0, r3, r0
   15a4c:	mov	r4, r3
   15a50:	bl	112d8 <strcpy@plt>
   15a54:	ldr	r2, [sp]
   15a58:	ldr	r3, [sp, #4]
   15a5c:	mov	r1, r9
   15a60:	sub	r0, r2, #1
   15a64:	add	r0, r3, r0
   15a68:	bl	112d8 <strcpy@plt>
   15a6c:	ldr	r3, [fp, #4]
   15a70:	ldr	r2, [fp, #8]
   15a74:	cmp	r3, r2
   15a78:	bcc	15994 <close_stdout@@Base+0x2824>
   15a7c:	mov	r0, fp
   15a80:	bl	11464 <__uflow@plt>
   15a84:	cmn	r0, #1
   15a88:	beq	15ac0 <close_stdout@@Base+0x2950>
   15a8c:	b	159a0 <close_stdout@@Base+0x2830>
   15a90:	ldr	r3, [fp, #4]
   15a94:	ldr	r2, [fp, #8]
   15a98:	cmp	r3, r2
   15a9c:	bcs	15ba4 <close_stdout@@Base+0x2a34>
   15aa0:	add	r2, r3, #1
   15aa4:	str	r2, [fp, #4]
   15aa8:	ldrb	r0, [r3]
   15aac:	cmp	r0, #10
   15ab0:	cmnne	r0, #1
   15ab4:	bne	15a90 <close_stdout@@Base+0x2920>
   15ab8:	cmn	r0, #1
   15abc:	bne	15984 <close_stdout@@Base+0x2814>
   15ac0:	mov	r0, fp
   15ac4:	bl	15bf0 <close_stdout@@Base+0x2a80>
   15ac8:	cmp	r8, #0
   15acc:	beq	15b18 <close_stdout@@Base+0x29a8>
   15ad0:	mov	r3, #0
   15ad4:	strb	r3, [r4, r8]
   15ad8:	mov	r0, r7
   15adc:	bl	11218 <free@plt>
   15ae0:	ldr	r3, [pc, #236]	; 15bd4 <close_stdout@@Base+0x2a64>
   15ae4:	add	r3, pc, r3
   15ae8:	str	r4, [r3]
   15aec:	b	15810 <close_stdout@@Base+0x26a0>
   15af0:	ldr	r8, [pc, #224]	; 15bd8 <close_stdout@@Base+0x2a68>
   15af4:	mov	r3, #7
   15af8:	mov	sl, #8
   15afc:	add	r8, pc, r8
   15b00:	ldrb	r3, [r8, r3]
   15b04:	cmp	r3, #47	; 0x2f
   15b08:	movne	r9, #1
   15b0c:	movne	fp, r9
   15b10:	bne	158f4 <close_stdout@@Base+0x2784>
   15b14:	b	158ec <close_stdout@@Base+0x277c>
   15b18:	ldr	r4, [pc, #188]	; 15bdc <close_stdout@@Base+0x2a6c>
   15b1c:	add	r4, pc, r4
   15b20:	b	15ad8 <close_stdout@@Base+0x2968>
   15b24:	ldr	r0, [sp, #8]
   15b28:	str	r2, [sp]
   15b2c:	add	r3, r0, r2
   15b30:	mov	r0, r4
   15b34:	add	r8, r3, r8
   15b38:	add	r1, r8, #3
   15b3c:	add	r8, r8, #2
   15b40:	bl	11290 <realloc@plt>
   15b44:	ldr	r2, [sp]
   15b48:	mov	r3, r0
   15b4c:	b	15a20 <close_stdout@@Base+0x28b0>
   15b50:	ldr	r4, [pc, #136]	; 15be0 <close_stdout@@Base+0x2a70>
   15b54:	add	r4, pc, r4
   15b58:	b	15ae0 <close_stdout@@Base+0x2970>
   15b5c:	ldr	r8, [pc, #128]	; 15be4 <close_stdout@@Base+0x2a74>
   15b60:	mov	r3, #7
   15b64:	mov	sl, #8
   15b68:	add	r8, pc, r8
   15b6c:	b	15b00 <close_stdout@@Base+0x2990>
   15b70:	ldr	r4, [pc, #112]	; 15be8 <close_stdout@@Base+0x2a78>
   15b74:	mov	r0, r8
   15b78:	add	r4, pc, r4
   15b7c:	bl	11500 <close@plt>
   15b80:	b	15ad8 <close_stdout@@Base+0x2968>
   15b84:	bl	11284 <__stack_chk_fail@plt>
   15b88:	mov	r0, r4
   15b8c:	ldr	r4, [pc, #88]	; 15bec <close_stdout@@Base+0x2a7c>
   15b90:	bl	11218 <free@plt>
   15b94:	mov	r0, fp
   15b98:	add	r4, pc, r4
   15b9c:	bl	15bf0 <close_stdout@@Base+0x2a80>
   15ba0:	b	15ad8 <close_stdout@@Base+0x2968>
   15ba4:	mov	r0, fp
   15ba8:	bl	11464 <__uflow@plt>
   15bac:	b	15aac <close_stdout@@Base+0x293c>
   15bb0:	andeq	r4, r1, ip, lsl r8
   15bb4:	andeq	r0, r0, r0, lsr r1
   15bb8:	andeq	r4, r1, r0, ror fp
   15bbc:	andeq	r3, r0, r0, asr #18
   15bc0:	andeq	r3, r0, r8, ror #7
   15bc4:	andeq	r3, r0, r8, lsl r9
   15bc8:	andeq	r3, r0, r0, asr #17
   15bcc:	muleq	r0, ip, r8
   15bd0:	andeq	r3, r0, r0, lsl #17
   15bd4:	muleq	r1, r0, r8
   15bd8:	andeq	r3, r0, r8, asr #13
   15bdc:	andeq	r3, r0, r0, lsl #3
   15be0:	andeq	r3, r0, r8, asr #2
   15be4:	andeq	r3, r0, ip, asr r6
   15be8:	andeq	r3, r0, r4, lsr #2
   15bec:	andeq	r3, r0, r4, lsl #2
   15bf0:	push	{r4, r5, r6, lr}
   15bf4:	sub	sp, sp, #8
   15bf8:	mov	r4, r0
   15bfc:	bl	11434 <fileno@plt>
   15c00:	cmp	r0, #0
   15c04:	mov	r0, r4
   15c08:	blt	15c84 <close_stdout@@Base+0x2b14>
   15c0c:	bl	11350 <__freading@plt>
   15c10:	cmp	r0, #0
   15c14:	bne	15c50 <close_stdout@@Base+0x2ae0>
   15c18:	mov	r0, r4
   15c1c:	bl	15c90 <close_stdout@@Base+0x2b20>
   15c20:	cmp	r0, #0
   15c24:	beq	15c80 <close_stdout@@Base+0x2b10>
   15c28:	bl	113d4 <__errno_location@plt>
   15c2c:	ldr	r6, [r0]
   15c30:	mov	r5, r0
   15c34:	mov	r0, r4
   15c38:	bl	1144c <fclose@plt>
   15c3c:	cmp	r6, #0
   15c40:	mvnne	r0, #0
   15c44:	strne	r6, [r5]
   15c48:	add	sp, sp, #8
   15c4c:	pop	{r4, r5, r6, pc}
   15c50:	mov	r0, r4
   15c54:	bl	11434 <fileno@plt>
   15c58:	mov	r1, #1
   15c5c:	mov	r2, #0
   15c60:	mov	r3, #0
   15c64:	str	r1, [sp]
   15c68:	bl	112c0 <lseek64@plt>
   15c6c:	mvn	r2, #0
   15c70:	mvn	r3, #0
   15c74:	cmp	r1, r3
   15c78:	cmpeq	r0, r2
   15c7c:	bne	15c18 <close_stdout@@Base+0x2aa8>
   15c80:	mov	r0, r4
   15c84:	add	sp, sp, #8
   15c88:	pop	{r4, r5, r6, lr}
   15c8c:	b	1144c <fclose@plt>
   15c90:	push	{r4, lr}
   15c94:	subs	r4, r0, #0
   15c98:	sub	sp, sp, #8
   15c9c:	beq	15cac <close_stdout@@Base+0x2b3c>
   15ca0:	bl	11350 <__freading@plt>
   15ca4:	cmp	r0, #0
   15ca8:	bne	15cbc <close_stdout@@Base+0x2b4c>
   15cac:	mov	r0, r4
   15cb0:	add	sp, sp, #8
   15cb4:	pop	{r4, lr}
   15cb8:	b	11200 <fflush@plt>
   15cbc:	ldr	r3, [r4]
   15cc0:	tst	r3, #256	; 0x100
   15cc4:	beq	15cac <close_stdout@@Base+0x2b3c>
   15cc8:	mov	r3, #1
   15ccc:	mov	r0, r4
   15cd0:	str	r3, [sp]
   15cd4:	mov	r2, #0
   15cd8:	mov	r3, #0
   15cdc:	bl	15cf0 <close_stdout@@Base+0x2b80>
   15ce0:	mov	r0, r4
   15ce4:	add	sp, sp, #8
   15ce8:	pop	{r4, lr}
   15cec:	b	11200 <fflush@plt>
   15cf0:	push	{r4, r5, r6, r7, lr}
   15cf4:	sub	sp, sp, #20
   15cf8:	ldmib	r0, {r1, ip}
   15cfc:	mov	r6, r0
   15d00:	ldr	r4, [sp, #40]	; 0x28
   15d04:	cmp	ip, r1
   15d08:	beq	15d20 <close_stdout@@Base+0x2bb0>
   15d0c:	str	r4, [sp, #40]	; 0x28
   15d10:	mov	r0, r6
   15d14:	add	sp, sp, #20
   15d18:	pop	{r4, r5, r6, r7, lr}
   15d1c:	b	11458 <fseeko64@plt>
   15d20:	ldr	ip, [r0, #20]
   15d24:	ldr	r1, [r0, #16]
   15d28:	cmp	ip, r1
   15d2c:	bne	15d0c <close_stdout@@Base+0x2b9c>
   15d30:	ldr	r7, [r0, #36]	; 0x24
   15d34:	cmp	r7, #0
   15d38:	bne	15d0c <close_stdout@@Base+0x2b9c>
   15d3c:	str	r2, [sp, #12]
   15d40:	mvn	r5, #0
   15d44:	str	r3, [sp, #8]
   15d48:	bl	11434 <fileno@plt>
   15d4c:	str	r4, [sp]
   15d50:	mvn	r4, #0
   15d54:	ldr	r2, [sp, #12]
   15d58:	ldr	r3, [sp, #8]
   15d5c:	bl	112c0 <lseek64@plt>
   15d60:	mov	r2, r0
   15d64:	mov	r3, r1
   15d68:	cmp	r3, r5
   15d6c:	cmpeq	r2, r4
   15d70:	beq	15d90 <close_stdout@@Base+0x2c20>
   15d74:	ldr	r1, [r6]
   15d78:	mov	r0, r7
   15d7c:	strd	r2, [r6, #80]	; 0x50
   15d80:	bic	r3, r1, #16
   15d84:	str	r3, [r6]
   15d88:	add	sp, sp, #20
   15d8c:	pop	{r4, r5, r6, r7, pc}
   15d90:	mvn	r0, #0
   15d94:	b	15d88 <close_stdout@@Base+0x2c18>
   15d98:	ldr	ip, [pc, #3636]	; 16bd4 <close_stdout@@Base+0x3a64>
   15d9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15da0:	add	fp, sp, #32
   15da4:	ldr	lr, [pc, #3628]	; 16bd8 <close_stdout@@Base+0x3a68>
   15da8:	sub	sp, sp, #564	; 0x234
   15dac:	add	ip, pc, ip
   15db0:	str	r0, [fp, #-504]	; 0xfffffe08
   15db4:	sub	r4, fp, #484	; 0x1e4
   15db8:	str	r1, [fp, #-536]	; 0xfffffde8
   15dbc:	mov	r0, r2
   15dc0:	ldr	lr, [ip, lr]
   15dc4:	mov	r5, r2
   15dc8:	sub	r1, fp, #364	; 0x16c
   15dcc:	mov	r2, r4
   15dd0:	mov	r6, r3
   15dd4:	ldr	ip, [lr]
   15dd8:	str	lr, [fp, #-528]	; 0xfffffdf0
   15ddc:	str	ip, [fp, #-40]	; 0xffffffd8
   15de0:	bl	16d2c <close_stdout@@Base+0x3bbc>
   15de4:	cmp	r0, #0
   15de8:	blt	168d8 <close_stdout@@Base+0x3768>
   15dec:	mov	r0, r6
   15df0:	mov	r1, r4
   15df4:	bl	16bdc <close_stdout@@Base+0x3a6c>
   15df8:	cmp	r0, #0
   15dfc:	blt	16998 <close_stdout@@Base+0x3828>
   15e00:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   15e04:	ldr	r2, [fp, #-352]	; 0xfffffea0
   15e08:	add	r3, r3, #7
   15e0c:	cmp	r3, #6
   15e10:	mvnls	r3, #0
   15e14:	adds	r3, r3, r2
   15e18:	bcs	16134 <close_stdout@@Base+0x2fc4>
   15e1c:	adds	r0, r3, #6
   15e20:	bcs	16134 <close_stdout@@Base+0x2fc4>
   15e24:	cmp	r0, #4000	; 0xfa0
   15e28:	bcs	1687c <close_stdout@@Base+0x370c>
   15e2c:	add	r3, r3, #20
   15e30:	mov	r1, #0
   15e34:	bic	r3, r3, #7
   15e38:	str	r1, [fp, #-548]	; 0xfffffddc
   15e3c:	sub	sp, sp, r3
   15e40:	add	r2, sp, #32
   15e44:	str	r2, [fp, #-512]	; 0xfffffe00
   15e48:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15e4c:	sub	r2, fp, #496	; 0x1f0
   15e50:	str	r2, [fp, #-532]	; 0xfffffdec
   15e54:	mov	ip, #0
   15e58:	cmp	r3, #0
   15e5c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   15e60:	ldr	r2, [fp, #-504]	; 0xfffffe08
   15e64:	mov	r6, ip
   15e68:	ldrne	r1, [fp, #-536]	; 0xfffffde8
   15e6c:	add	r7, r3, #44	; 0x2c
   15e70:	ldreq	r4, [fp, #-504]	; 0xfffffe08
   15e74:	str	ip, [fp, #-520]	; 0xfffffdf8
   15e78:	ldrne	r4, [r1]
   15e7c:	ldr	sl, [r7, #-44]	; 0xffffffd4
   15e80:	sub	r3, r7, #44	; 0x2c
   15e84:	str	r3, [fp, #-540]	; 0xfffffde4
   15e88:	cmp	sl, r5
   15e8c:	beq	16748 <close_stdout@@Base+0x35d8>
   15e90:	rsb	r3, r5, sl
   15e94:	adds	r9, r3, r6
   15e98:	mvncs	r9, #0
   15e9c:	cmp	r4, r9
   15ea0:	bcs	166d8 <close_stdout@@Base+0x3568>
   15ea4:	cmp	r4, #0
   15ea8:	beq	165a4 <close_stdout@@Base+0x3434>
   15eac:	blt	169d4 <close_stdout@@Base+0x3864>
   15eb0:	lsl	r4, r4, #1
   15eb4:	cmp	r4, r9
   15eb8:	movcc	r4, r9
   15ebc:	cmn	r4, #1
   15ec0:	beq	169d4 <close_stdout@@Base+0x3864>
   15ec4:	ldr	r1, [fp, #-504]	; 0xfffffe08
   15ec8:	subs	lr, r2, r1
   15ecc:	rsbs	r8, lr, #0
   15ed0:	adcs	r8, r8, lr
   15ed4:	cmp	r2, r1
   15ed8:	cmpne	r2, #0
   15edc:	bne	165ac <close_stdout@@Base+0x343c>
   15ee0:	mov	r0, r4
   15ee4:	str	r2, [fp, #-560]	; 0xfffffdd0
   15ee8:	str	r3, [fp, #-556]	; 0xfffffdd4
   15eec:	bl	1132c <malloc@plt>
   15ef0:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   15ef4:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   15ef8:	mov	sl, r0
   15efc:	cmp	sl, #0
   15f00:	beq	169d4 <close_stdout@@Base+0x3864>
   15f04:	cmp	r6, #0
   15f08:	moveq	r8, #0
   15f0c:	andne	r8, r8, #1
   15f10:	cmp	r8, #0
   15f14:	bne	1672c <close_stdout@@Base+0x35bc>
   15f18:	add	r0, sl, r6
   15f1c:	mov	r1, r5
   15f20:	mov	r2, r3
   15f24:	bl	1123c <memcpy@plt>
   15f28:	ldr	r3, [fp, #-364]	; 0xfffffe94
   15f2c:	ldr	r2, [fp, #-520]	; 0xfffffdf8
   15f30:	cmp	r3, r2
   15f34:	beq	169e8 <close_stdout@@Base+0x3878>
   15f38:	ldrb	r3, [r7, #-8]
   15f3c:	cmp	r3, #37	; 0x25
   15f40:	beq	165d0 <close_stdout@@Base+0x3460>
   15f44:	ldr	r2, [r7, #-4]
   15f48:	cmn	r2, #1
   15f4c:	beq	168b8 <close_stdout@@Base+0x3748>
   15f50:	cmp	r3, #110	; 0x6e
   15f54:	beq	166fc <close_stdout@@Base+0x358c>
   15f58:	ldr	r1, [fp, #-480]	; 0xfffffe20
   15f5c:	ldr	r3, [r7, #-36]	; 0xffffffdc
   15f60:	ldr	r8, [r1, r2, lsl #4]
   15f64:	tst	r3, #1
   15f68:	ldr	r1, [fp, #-512]	; 0xfffffe00
   15f6c:	mov	r2, #37	; 0x25
   15f70:	addeq	r5, r1, #1
   15f74:	strb	r2, [r1]
   15f78:	ldrne	r2, [fp, #-512]	; 0xfffffe00
   15f7c:	ldrne	r1, [fp, #-512]	; 0xfffffe00
   15f80:	addne	r5, r2, #2
   15f84:	movne	r2, #39	; 0x27
   15f88:	strbne	r2, [r1, #1]
   15f8c:	tst	r3, #2
   15f90:	movne	r2, #45	; 0x2d
   15f94:	strbne	r2, [r5]
   15f98:	addne	r5, r5, #1
   15f9c:	tst	r3, #4
   15fa0:	movne	r2, #43	; 0x2b
   15fa4:	strbne	r2, [r5]
   15fa8:	addne	r5, r5, #1
   15fac:	tst	r3, #8
   15fb0:	movne	r2, #32
   15fb4:	strbne	r2, [r5]
   15fb8:	addne	r5, r5, #1
   15fbc:	tst	r3, #16
   15fc0:	movne	r2, #35	; 0x23
   15fc4:	strbne	r2, [r5]
   15fc8:	addne	r5, r5, #1
   15fcc:	tst	r3, #64	; 0x40
   15fd0:	movne	r2, #73	; 0x49
   15fd4:	strbne	r2, [r5]
   15fd8:	addne	r5, r5, #1
   15fdc:	tst	r3, #32
   15fe0:	movne	r3, #48	; 0x30
   15fe4:	strbne	r3, [r5]
   15fe8:	ldr	r1, [r7, #-32]	; 0xffffffe0
   15fec:	addne	r5, r5, #1
   15ff0:	ldr	r2, [r7, #-28]	; 0xffffffe4
   15ff4:	cmp	r1, r2
   15ff8:	beq	1600c <close_stdout@@Base+0x2e9c>
   15ffc:	rsb	r2, r1, r2
   16000:	mov	r0, r5
   16004:	add	r5, r5, r2
   16008:	bl	1123c <memcpy@plt>
   1600c:	ldr	r1, [r7, #-20]	; 0xffffffec
   16010:	ldr	r2, [r7, #-16]
   16014:	cmp	r1, r2
   16018:	beq	1602c <close_stdout@@Base+0x2ebc>
   1601c:	rsb	r2, r1, r2
   16020:	mov	r0, r5
   16024:	add	r5, r5, r2
   16028:	bl	1123c <memcpy@plt>
   1602c:	sub	r3, r8, #7
   16030:	cmp	r3, #9
   16034:	bhi	1605c <close_stdout@@Base+0x2eec>
   16038:	mov	r2, #1
   1603c:	lsl	r3, r2, r3
   16040:	movw	r2, #643	; 0x283
   16044:	and	r2, r3, r2
   16048:	cmp	r2, #0
   1604c:	beq	16754 <close_stdout@@Base+0x35e4>
   16050:	mov	r3, #108	; 0x6c
   16054:	add	r5, r5, #1
   16058:	strb	r3, [r5, #-1]
   1605c:	ldrb	r3, [r7, #-8]
   16060:	mov	r1, #0
   16064:	strb	r1, [r5, #1]
   16068:	strb	r3, [r5]
   1606c:	ldr	r3, [r7, #-24]	; 0xffffffe8
   16070:	cmn	r3, #1
   16074:	beq	16874 <close_stdout@@Base+0x3704>
   16078:	ldr	r2, [fp, #-480]	; 0xfffffe20
   1607c:	add	r1, r2, r3, lsl #4
   16080:	ldr	r3, [r2, r3, lsl #4]
   16084:	cmp	r3, #5
   16088:	bne	168b8 <close_stdout@@Base+0x3748>
   1608c:	ldr	r3, [r1, #8]
   16090:	mov	r6, #1
   16094:	str	r3, [fp, #-492]	; 0xfffffe14
   16098:	ldr	r3, [r7, #-12]
   1609c:	cmn	r3, #1
   160a0:	beq	160cc <close_stdout@@Base+0x2f5c>
   160a4:	ldr	r2, [fp, #-480]	; 0xfffffe20
   160a8:	add	r1, r2, r3, lsl #4
   160ac:	ldr	r3, [r2, r3, lsl #4]
   160b0:	cmp	r3, #5
   160b4:	bne	168b8 <close_stdout@@Base+0x3748>
   160b8:	ldr	r2, [r1, #8]
   160bc:	sub	r1, fp, #36	; 0x24
   160c0:	add	r3, r1, r6, lsl #2
   160c4:	add	r6, r6, #1
   160c8:	str	r2, [r3, #-456]	; 0xfffffe38
   160cc:	adds	r2, r9, #2
   160d0:	str	r2, [fp, #-524]	; 0xfffffdf4
   160d4:	mov	r3, r2
   160d8:	mvncs	r3, #0
   160dc:	cmp	r4, r3
   160e0:	bcs	1621c <close_stdout@@Base+0x30ac>
   160e4:	cmp	r4, #0
   160e8:	beq	16194 <close_stdout@@Base+0x3024>
   160ec:	blt	16bc0 <close_stdout@@Base+0x3a50>
   160f0:	cmp	r9, r2
   160f4:	lsl	r4, r4, #1
   160f8:	bls	161a4 <close_stdout@@Base+0x3034>
   160fc:	str	sl, [fp, #-560]	; 0xfffffdd0
   16100:	bl	113d4 <__errno_location@plt>
   16104:	str	r0, [fp, #-516]	; 0xfffffdfc
   16108:	mov	r2, sl
   1610c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16110:	cmp	r2, #0
   16114:	cmpne	r2, r3
   16118:	bne	16b60 <close_stdout@@Base+0x39f0>
   1611c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   16120:	cmp	r1, #0
   16124:	beq	16134 <close_stdout@@Base+0x2fc4>
   16128:	mov	r0, r1
   1612c:	bl	11218 <free@plt>
   16130:	b	1613c <close_stdout@@Base+0x2fcc>
   16134:	bl	113d4 <__errno_location@plt>
   16138:	str	r0, [fp, #-516]	; 0xfffffdfc
   1613c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16140:	sub	r3, fp, #348	; 0x15c
   16144:	cmp	r0, r3
   16148:	beq	16150 <close_stdout@@Base+0x2fe0>
   1614c:	bl	11218 <free@plt>
   16150:	ldr	r0, [fp, #-480]	; 0xfffffe20
   16154:	sub	r3, fp, #476	; 0x1dc
   16158:	cmp	r0, r3
   1615c:	beq	16164 <close_stdout@@Base+0x2ff4>
   16160:	bl	11218 <free@plt>
   16164:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   16168:	mov	r3, #0
   1616c:	mov	r2, #12
   16170:	str	r2, [r1]
   16174:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   16178:	mov	r0, r3
   1617c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16180:	ldr	r3, [r1]
   16184:	cmp	r2, r3
   16188:	bne	16bbc <close_stdout@@Base+0x3a4c>
   1618c:	sub	sp, fp, #32
   16190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16194:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   16198:	cmp	r9, r3
   1619c:	bhi	160fc <close_stdout@@Base+0x2f8c>
   161a0:	mov	r4, #12
   161a4:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   161a8:	cmp	r3, r4
   161ac:	movcs	r4, r3
   161b0:	cmn	r4, #1
   161b4:	beq	160fc <close_stdout@@Base+0x2f8c>
   161b8:	ldr	r1, [fp, #-504]	; 0xfffffe08
   161bc:	subs	r0, sl, r1
   161c0:	rsbs	r2, r0, #0
   161c4:	adcs	r2, r2, r0
   161c8:	cmp	sl, r1
   161cc:	cmpne	sl, #0
   161d0:	bne	1689c <close_stdout@@Base+0x372c>
   161d4:	mov	r0, r4
   161d8:	str	r2, [fp, #-560]	; 0xfffffdd0
   161dc:	bl	1132c <malloc@plt>
   161e0:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   161e4:	mov	r3, r0
   161e8:	cmp	r3, #0
   161ec:	beq	160fc <close_stdout@@Base+0x2f8c>
   161f0:	cmp	r9, #0
   161f4:	moveq	r2, #0
   161f8:	andne	r2, r2, #1
   161fc:	cmp	r2, #0
   16200:	moveq	sl, r3
   16204:	beq	1621c <close_stdout@@Base+0x30ac>
   16208:	mov	r1, sl
   1620c:	mov	r0, r3
   16210:	mov	r2, r9
   16214:	mov	sl, r3
   16218:	bl	1123c <memcpy@plt>
   1621c:	mov	r2, #0
   16220:	strb	r2, [sl, r9]
   16224:	sub	r8, r8, #1
   16228:	str	r8, [fp, #-508]	; 0xfffffe04
   1622c:	bl	113d4 <__errno_location@plt>
   16230:	rsb	ip, r9, r4
   16234:	str	r5, [fp, #-544]	; 0xfffffde0
   16238:	mov	r5, ip
   1623c:	ldr	r3, [r0]
   16240:	str	r0, [fp, #-516]	; 0xfffffdfc
   16244:	str	r3, [fp, #-552]	; 0xfffffdd8
   16248:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   1624c:	mvn	r1, #0
   16250:	cmp	r5, #0
   16254:	str	r1, [fp, #-496]	; 0xfffffe10
   16258:	ldr	r1, [fp, #-508]	; 0xfffffe04
   1625c:	mov	r3, #0
   16260:	movge	r8, r5
   16264:	mvnlt	r8, #-2147483648	; 0x80000000
   16268:	str	r3, [r2]
   1626c:	cmp	r1, #16
   16270:	addls	pc, pc, r1, lsl #2
   16274:	b	168b8 <close_stdout@@Base+0x3748>
   16278:	b	167ac <close_stdout@@Base+0x363c>
   1627c:	b	1668c <close_stdout@@Base+0x351c>
   16280:	b	16790 <close_stdout@@Base+0x3620>
   16284:	b	16774 <close_stdout@@Base+0x3604>
   16288:	b	162bc <close_stdout@@Base+0x314c>
   1628c:	b	162bc <close_stdout@@Base+0x314c>
   16290:	b	162bc <close_stdout@@Base+0x314c>
   16294:	b	162bc <close_stdout@@Base+0x314c>
   16298:	b	16414 <close_stdout@@Base+0x32a4>
   1629c:	b	16414 <close_stdout@@Base+0x32a4>
   162a0:	b	16470 <close_stdout@@Base+0x3300>
   162a4:	b	16470 <close_stdout@@Base+0x3300>
   162a8:	b	162bc <close_stdout@@Base+0x314c>
   162ac:	b	162bc <close_stdout@@Base+0x314c>
   162b0:	b	162bc <close_stdout@@Base+0x314c>
   162b4:	b	162bc <close_stdout@@Base+0x314c>
   162b8:	b	162bc <close_stdout@@Base+0x314c>
   162bc:	ldr	r2, [r7, #-4]
   162c0:	cmp	r6, #1
   162c4:	ldr	r3, [fp, #-480]	; 0xfffffe20
   162c8:	add	r3, r3, r2, lsl #4
   162cc:	ldr	r3, [r3, #8]
   162d0:	beq	166a4 <close_stdout@@Base+0x3534>
   162d4:	cmp	r6, #2
   162d8:	bne	164cc <close_stdout@@Base+0x335c>
   162dc:	ldr	r2, [fp, #-512]	; 0xfffffe00
   162e0:	add	r0, sl, r9
   162e4:	ldr	lr, [fp, #-492]	; 0xfffffe14
   162e8:	mov	r1, r8
   162ec:	ldr	ip, [fp, #-488]	; 0xfffffe18
   162f0:	str	r2, [sp]
   162f4:	mov	r2, #1
   162f8:	str	r3, [sp, #12]
   162fc:	sub	r3, fp, #496	; 0x1f0
   16300:	str	lr, [sp, #4]
   16304:	str	r3, [sp, #16]
   16308:	mvn	r3, #0
   1630c:	str	ip, [sp, #8]
   16310:	bl	11518 <__snprintf_chk@plt>
   16314:	ldr	r3, [fp, #-496]	; 0xfffffe10
   16318:	cmp	r3, #0
   1631c:	blt	16500 <close_stdout@@Base+0x3390>
   16320:	cmp	r8, r3
   16324:	bls	16338 <close_stdout@@Base+0x31c8>
   16328:	add	r2, sl, r3
   1632c:	ldrb	r2, [r2, r9]
   16330:	cmp	r2, #0
   16334:	bne	168b8 <close_stdout@@Base+0x3748>
   16338:	cmp	r0, r3
   1633c:	movle	r0, r3
   16340:	ble	16348 <close_stdout@@Base+0x31d8>
   16344:	str	r0, [fp, #-496]	; 0xfffffe10
   16348:	add	r3, r0, #1
   1634c:	cmp	r8, r3
   16350:	bhi	16ae8 <close_stdout@@Base+0x3978>
   16354:	cmn	r8, #-2147483647	; 0x80000001
   16358:	beq	16b00 <close_stdout@@Base+0x3990>
   1635c:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   16360:	add	r0, r0, r2
   16364:	cmp	r9, r0
   16368:	mvnhi	r0, #0
   1636c:	cmp	r4, #0
   16370:	mvnlt	r0, #0
   16374:	blt	16384 <close_stdout@@Base+0x3214>
   16378:	lsl	r3, r4, #1
   1637c:	cmp	r0, r3
   16380:	movcc	r0, r3
   16384:	cmp	r4, r0
   16388:	bcs	16248 <close_stdout@@Base+0x30d8>
   1638c:	cmp	r4, #0
   16390:	beq	166e0 <close_stdout@@Base+0x3570>
   16394:	blt	16108 <close_stdout@@Base+0x2f98>
   16398:	lsl	r4, r4, #1
   1639c:	cmp	r4, r0
   163a0:	movcc	r4, r0
   163a4:	cmn	r4, #1
   163a8:	beq	16108 <close_stdout@@Base+0x2f98>
   163ac:	ldr	r3, [fp, #-504]	; 0xfffffe08
   163b0:	subs	r2, sl, r3
   163b4:	rsbs	r5, r2, #0
   163b8:	adcs	r5, r5, r2
   163bc:	cmp	sl, r3
   163c0:	cmpne	sl, #0
   163c4:	bne	166e8 <close_stdout@@Base+0x3578>
   163c8:	mov	r0, r4
   163cc:	bl	1132c <malloc@plt>
   163d0:	mov	r3, r0
   163d4:	cmp	r3, #0
   163d8:	beq	16108 <close_stdout@@Base+0x2f98>
   163dc:	cmp	r9, #0
   163e0:	moveq	r5, #0
   163e4:	andne	r5, r5, #1
   163e8:	cmp	r5, #0
   163ec:	rsbeq	r5, r9, r4
   163f0:	moveq	sl, r3
   163f4:	beq	16248 <close_stdout@@Base+0x30d8>
   163f8:	mov	r1, sl
   163fc:	mov	r0, r3
   16400:	mov	r2, r9
   16404:	mov	sl, r3
   16408:	rsb	r5, r9, r4
   1640c:	bl	1123c <memcpy@plt>
   16410:	b	16248 <close_stdout@@Base+0x30d8>
   16414:	ldr	r2, [r7, #-4]
   16418:	cmp	r6, #1
   1641c:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16420:	add	r3, r3, r2, lsl #4
   16424:	ldrd	r2, [r3, #8]
   16428:	beq	16840 <close_stdout@@Base+0x36d0>
   1642c:	cmp	r6, #2
   16430:	bne	1691c <close_stdout@@Base+0x37ac>
   16434:	ldr	r1, [fp, #-512]	; 0xfffffe00
   16438:	add	r0, sl, r9
   1643c:	ldr	lr, [fp, #-492]	; 0xfffffe14
   16440:	ldr	ip, [fp, #-488]	; 0xfffffe18
   16444:	strd	r2, [sp, #16]
   16448:	sub	r2, fp, #496	; 0x1f0
   1644c:	str	r1, [sp]
   16450:	mvn	r3, #0
   16454:	str	r2, [sp, #24]
   16458:	mov	r1, r8
   1645c:	mov	r2, #1
   16460:	str	lr, [sp, #4]
   16464:	str	ip, [sp, #8]
   16468:	bl	11518 <__snprintf_chk@plt>
   1646c:	b	16314 <close_stdout@@Base+0x31a4>
   16470:	ldr	r2, [r7, #-4]
   16474:	cmp	r6, #1
   16478:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1647c:	add	r3, r3, r2, lsl #4
   16480:	ldrd	r0, [r3, #8]
   16484:	beq	1680c <close_stdout@@Base+0x369c>
   16488:	cmp	r6, #2
   1648c:	bne	168f0 <close_stdout@@Base+0x3780>
   16490:	ldr	r3, [fp, #-492]	; 0xfffffe14
   16494:	ldr	r2, [fp, #-512]	; 0xfffffe00
   16498:	ldr	lr, [fp, #-488]	; 0xfffffe18
   1649c:	strd	r0, [sp, #16]
   164a0:	add	r0, sl, r9
   164a4:	str	r2, [sp]
   164a8:	mov	r1, r8
   164ac:	sub	r2, fp, #496	; 0x1f0
   164b0:	str	r3, [sp, #4]
   164b4:	str	r2, [sp, #24]
   164b8:	mvn	r3, #0
   164bc:	mov	r2, #1
   164c0:	str	lr, [sp, #8]
   164c4:	bl	11518 <__snprintf_chk@plt>
   164c8:	b	16314 <close_stdout@@Base+0x31a4>
   164cc:	ldr	r1, [fp, #-512]	; 0xfffffe00
   164d0:	sub	r2, fp, #496	; 0x1f0
   164d4:	str	r3, [sp, #4]
   164d8:	add	r0, sl, r9
   164dc:	str	r2, [sp, #8]
   164e0:	mvn	r3, #0
   164e4:	str	r1, [sp]
   164e8:	mov	r2, #1
   164ec:	mov	r1, r8
   164f0:	bl	11518 <__snprintf_chk@plt>
   164f4:	ldr	r3, [fp, #-496]	; 0xfffffe10
   164f8:	cmp	r3, #0
   164fc:	bge	16320 <close_stdout@@Base+0x31b0>
   16500:	ldr	r1, [fp, #-544]	; 0xfffffde0
   16504:	ldrb	r3, [r1, #1]
   16508:	cmp	r3, #0
   1650c:	movne	r2, #0
   16510:	strbne	r2, [r1, #1]
   16514:	bne	16248 <close_stdout@@Base+0x30d8>
   16518:	cmp	r0, #0
   1651c:	bge	16344 <close_stdout@@Base+0x31d4>
   16520:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16524:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   16528:	cmp	sl, #0
   1652c:	cmpne	r3, sl
   16530:	ldr	r4, [r1]
   16534:	bne	1698c <close_stdout@@Base+0x381c>
   16538:	ldr	r2, [fp, #-548]	; 0xfffffddc
   1653c:	cmp	r2, #0
   16540:	beq	1654c <close_stdout@@Base+0x33dc>
   16544:	mov	r0, r2
   16548:	bl	11218 <free@plt>
   1654c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16550:	sub	r3, fp, #348	; 0x15c
   16554:	cmp	r0, r3
   16558:	beq	16560 <close_stdout@@Base+0x33f0>
   1655c:	bl	11218 <free@plt>
   16560:	ldr	r0, [fp, #-480]	; 0xfffffe20
   16564:	sub	r3, fp, #476	; 0x1dc
   16568:	cmp	r0, r3
   1656c:	beq	16574 <close_stdout@@Base+0x3404>
   16570:	bl	11218 <free@plt>
   16574:	cmp	r4, #0
   16578:	bne	16594 <close_stdout@@Base+0x3424>
   1657c:	ldr	r3, [fp, #-540]	; 0xfffffde4
   16580:	ldrb	r4, [r3, #36]	; 0x24
   16584:	and	r4, r4, #239	; 0xef
   16588:	cmp	r4, #99	; 0x63
   1658c:	movne	r4, #22
   16590:	moveq	r4, #84	; 0x54
   16594:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   16598:	mov	r3, #0
   1659c:	str	r4, [r1]
   165a0:	b	16174 <close_stdout@@Base+0x3004>
   165a4:	mov	r4, #12
   165a8:	b	15eb4 <close_stdout@@Base+0x2d44>
   165ac:	mov	r0, r2
   165b0:	mov	r1, r4
   165b4:	str	r2, [fp, #-560]	; 0xfffffdd0
   165b8:	str	r3, [fp, #-556]	; 0xfffffdd4
   165bc:	bl	11290 <realloc@plt>
   165c0:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   165c4:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   165c8:	mov	sl, r0
   165cc:	b	15efc <close_stdout@@Base+0x2d8c>
   165d0:	ldr	r3, [r7, #-4]
   165d4:	cmn	r3, #1
   165d8:	bne	168b8 <close_stdout@@Base+0x3748>
   165dc:	adds	r6, r9, #1
   165e0:	mvncs	r6, #0
   165e4:	cmp	r4, r6
   165e8:	bcs	16668 <close_stdout@@Base+0x34f8>
   165ec:	cmp	r4, #0
   165f0:	beq	168bc <close_stdout@@Base+0x374c>
   165f4:	blt	160fc <close_stdout@@Base+0x2f8c>
   165f8:	lsl	r4, r4, #1
   165fc:	cmp	r4, r6
   16600:	movcc	r4, r6
   16604:	cmn	r4, #1
   16608:	beq	160fc <close_stdout@@Base+0x2f8c>
   1660c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16610:	subs	ip, sl, r3
   16614:	rsbs	r5, ip, #0
   16618:	adcs	r5, r5, ip
   1661c:	cmp	sl, r3
   16620:	cmpne	sl, #0
   16624:	bne	168c4 <close_stdout@@Base+0x3754>
   16628:	mov	r0, r4
   1662c:	bl	1132c <malloc@plt>
   16630:	mov	r3, r0
   16634:	cmp	r3, #0
   16638:	beq	160fc <close_stdout@@Base+0x2f8c>
   1663c:	cmp	r9, #0
   16640:	moveq	r5, #0
   16644:	andne	r5, r5, #1
   16648:	cmp	r5, #0
   1664c:	moveq	sl, r3
   16650:	beq	16668 <close_stdout@@Base+0x34f8>
   16654:	mov	r1, sl
   16658:	mov	r0, r3
   1665c:	mov	r2, r9
   16660:	mov	sl, r3
   16664:	bl	1123c <memcpy@plt>
   16668:	mov	r2, sl
   1666c:	mov	r1, #37	; 0x25
   16670:	strb	r1, [sl, r9]
   16674:	ldr	r1, [fp, #-520]	; 0xfffffdf8
   16678:	add	r7, r7, #44	; 0x2c
   1667c:	ldr	r5, [r7, #-84]	; 0xffffffac
   16680:	add	r1, r1, #1
   16684:	str	r1, [fp, #-520]	; 0xfffffdf8
   16688:	b	15e7c <close_stdout@@Base+0x2d0c>
   1668c:	ldr	r2, [r7, #-4]
   16690:	cmp	r6, #1
   16694:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16698:	add	r3, r3, r2, lsl #4
   1669c:	ldrb	r3, [r3, #8]
   166a0:	bne	162d4 <close_stdout@@Base+0x3164>
   166a4:	ldr	r1, [fp, #-512]	; 0xfffffe00
   166a8:	add	r0, sl, r9
   166ac:	ldr	lr, [fp, #-492]	; 0xfffffe14
   166b0:	mov	r2, r6
   166b4:	str	r3, [sp, #8]
   166b8:	sub	r3, fp, #496	; 0x1f0
   166bc:	str	r1, [sp]
   166c0:	mov	r1, r8
   166c4:	str	r3, [sp, #12]
   166c8:	mvn	r3, #0
   166cc:	str	lr, [sp, #4]
   166d0:	bl	11518 <__snprintf_chk@plt>
   166d4:	b	16314 <close_stdout@@Base+0x31a4>
   166d8:	mov	sl, r2
   166dc:	b	15f18 <close_stdout@@Base+0x2da8>
   166e0:	mov	r4, #12
   166e4:	b	1639c <close_stdout@@Base+0x322c>
   166e8:	mov	r0, sl
   166ec:	mov	r1, r4
   166f0:	bl	11290 <realloc@plt>
   166f4:	mov	r3, r0
   166f8:	b	163d4 <close_stdout@@Base+0x3264>
   166fc:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16700:	add	r1, r3, r2, lsl #4
   16704:	ldr	r3, [r3, r2, lsl #4]
   16708:	sub	r3, r3, #18
   1670c:	cmp	r3, #4
   16710:	addls	pc, pc, r3, lsl #2
   16714:	b	168b8 <close_stdout@@Base+0x3748>
   16718:	b	16948 <close_stdout@@Base+0x37d8>
   1671c:	b	1695c <close_stdout@@Base+0x37ec>
   16720:	b	167f8 <close_stdout@@Base+0x3688>
   16724:	b	167f8 <close_stdout@@Base+0x3688>
   16728:	b	16970 <close_stdout@@Base+0x3800>
   1672c:	mov	r1, r2
   16730:	mov	r0, sl
   16734:	mov	r2, r6
   16738:	str	r3, [fp, #-556]	; 0xfffffdd4
   1673c:	bl	1123c <memcpy@plt>
   16740:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   16744:	b	15f18 <close_stdout@@Base+0x2da8>
   16748:	mov	r9, r6
   1674c:	mov	sl, r2
   16750:	b	15f28 <close_stdout@@Base+0x2db8>
   16754:	tst	r3, #32
   16758:	bne	168e0 <close_stdout@@Base+0x3770>
   1675c:	tst	r3, #12
   16760:	beq	1605c <close_stdout@@Base+0x2eec>
   16764:	mov	r3, #108	; 0x6c
   16768:	add	r5, r5, #1
   1676c:	strb	r3, [r5, #-1]
   16770:	b	16050 <close_stdout@@Base+0x2ee0>
   16774:	ldr	r2, [r7, #-4]
   16778:	cmp	r6, #1
   1677c:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16780:	add	r3, r3, r2, lsl #4
   16784:	ldrh	r3, [r3, #8]
   16788:	bne	162d4 <close_stdout@@Base+0x3164>
   1678c:	b	166a4 <close_stdout@@Base+0x3534>
   16790:	ldr	r2, [r7, #-4]
   16794:	cmp	r6, #1
   16798:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1679c:	add	r3, r3, r2, lsl #4
   167a0:	ldrsh	r3, [r3, #8]
   167a4:	bne	162d4 <close_stdout@@Base+0x3164>
   167a8:	b	166a4 <close_stdout@@Base+0x3534>
   167ac:	ldr	r2, [r7, #-4]
   167b0:	cmp	r6, #1
   167b4:	ldr	r3, [fp, #-480]	; 0xfffffe20
   167b8:	add	r3, r3, r2, lsl #4
   167bc:	ldrsb	r3, [r3, #8]
   167c0:	beq	166a4 <close_stdout@@Base+0x3534>
   167c4:	cmp	r6, #2
   167c8:	beq	162dc <close_stdout@@Base+0x316c>
   167cc:	ldr	r2, [fp, #-512]	; 0xfffffe00
   167d0:	add	r0, sl, r9
   167d4:	str	r3, [sp, #4]
   167d8:	mov	r1, r8
   167dc:	sub	r3, fp, #496	; 0x1f0
   167e0:	str	r3, [sp, #8]
   167e4:	str	r2, [sp]
   167e8:	mvn	r3, #0
   167ec:	mov	r2, #1
   167f0:	bl	11518 <__snprintf_chk@plt>
   167f4:	b	16314 <close_stdout@@Base+0x31a4>
   167f8:	ldr	r3, [r1, #8]
   167fc:	mov	r2, sl
   16800:	mov	r6, r9
   16804:	str	r9, [r3]
   16808:	b	16674 <close_stdout@@Base+0x3504>
   1680c:	ldr	r3, [fp, #-492]	; 0xfffffe14
   16810:	ldr	r2, [fp, #-512]	; 0xfffffe00
   16814:	strd	r0, [sp, #8]
   16818:	sub	r1, fp, #496	; 0x1f0
   1681c:	str	r3, [sp, #4]
   16820:	add	r0, sl, r9
   16824:	str	r2, [sp]
   16828:	mvn	r3, #0
   1682c:	str	r1, [sp, #16]
   16830:	mov	r2, r6
   16834:	mov	r1, r8
   16838:	bl	11518 <__snprintf_chk@plt>
   1683c:	b	16314 <close_stdout@@Base+0x31a4>
   16840:	ldr	r1, [fp, #-512]	; 0xfffffe00
   16844:	add	r0, sl, r9
   16848:	ldr	lr, [fp, #-492]	; 0xfffffe14
   1684c:	strd	r2, [sp, #8]
   16850:	sub	r3, fp, #496	; 0x1f0
   16854:	str	r1, [sp]
   16858:	mov	r2, r6
   1685c:	str	r3, [sp, #16]
   16860:	mov	r1, r8
   16864:	mvn	r3, #0
   16868:	str	lr, [sp, #4]
   1686c:	bl	11518 <__snprintf_chk@plt>
   16870:	b	16314 <close_stdout@@Base+0x31a4>
   16874:	mov	r6, #0
   16878:	b	16098 <close_stdout@@Base+0x2f28>
   1687c:	cmn	r0, #1
   16880:	beq	16134 <close_stdout@@Base+0x2fc4>
   16884:	bl	1132c <malloc@plt>
   16888:	cmp	r0, #0
   1688c:	str	r0, [fp, #-512]	; 0xfffffe00
   16890:	beq	16134 <close_stdout@@Base+0x2fc4>
   16894:	str	r0, [fp, #-548]	; 0xfffffddc
   16898:	b	15e48 <close_stdout@@Base+0x2cd8>
   1689c:	mov	r0, sl
   168a0:	mov	r1, r4
   168a4:	str	r2, [fp, #-560]	; 0xfffffdd0
   168a8:	bl	11290 <realloc@plt>
   168ac:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   168b0:	mov	r3, r0
   168b4:	b	161e8 <close_stdout@@Base+0x3078>
   168b8:	bl	114e8 <abort@plt>
   168bc:	mov	r4, #12
   168c0:	b	165fc <close_stdout@@Base+0x348c>
   168c4:	mov	r0, sl
   168c8:	mov	r1, r4
   168cc:	bl	11290 <realloc@plt>
   168d0:	mov	r3, r0
   168d4:	b	16634 <close_stdout@@Base+0x34c4>
   168d8:	mov	r3, #0
   168dc:	b	16174 <close_stdout@@Base+0x3004>
   168e0:	mov	r3, #76	; 0x4c
   168e4:	add	r5, r5, #1
   168e8:	strb	r3, [r5, #-1]
   168ec:	b	1605c <close_stdout@@Base+0x2eec>
   168f0:	ldr	r3, [fp, #-512]	; 0xfffffe00
   168f4:	mov	r2, #1
   168f8:	strd	r0, [sp, #8]
   168fc:	sub	r1, fp, #496	; 0x1f0
   16900:	add	r0, sl, r9
   16904:	str	r1, [sp, #16]
   16908:	str	r3, [sp]
   1690c:	mov	r1, r8
   16910:	mvn	r3, #0
   16914:	bl	11518 <__snprintf_chk@plt>
   16918:	b	16314 <close_stdout@@Base+0x31a4>
   1691c:	ldr	r1, [fp, #-512]	; 0xfffffe00
   16920:	add	r0, sl, r9
   16924:	strd	r2, [sp, #8]
   16928:	sub	r2, fp, #496	; 0x1f0
   1692c:	mvn	r3, #0
   16930:	str	r2, [sp, #16]
   16934:	str	r1, [sp]
   16938:	mov	r2, #1
   1693c:	mov	r1, r8
   16940:	bl	11518 <__snprintf_chk@plt>
   16944:	b	16314 <close_stdout@@Base+0x31a4>
   16948:	ldr	r3, [r1, #8]
   1694c:	mov	r2, sl
   16950:	mov	r6, r9
   16954:	strb	r9, [r3]
   16958:	b	16674 <close_stdout@@Base+0x3504>
   1695c:	ldr	r3, [r1, #8]
   16960:	mov	r2, sl
   16964:	mov	r6, r9
   16968:	strh	r9, [r3]
   1696c:	b	16674 <close_stdout@@Base+0x3504>
   16970:	ldr	r3, [r1, #8]
   16974:	mov	r2, sl
   16978:	mov	r1, #0
   1697c:	mov	r6, r9
   16980:	str	r9, [r3]
   16984:	str	r1, [r3, #4]
   16988:	b	16674 <close_stdout@@Base+0x3504>
   1698c:	mov	r0, sl
   16990:	bl	11218 <free@plt>
   16994:	b	16538 <close_stdout@@Base+0x33c8>
   16998:	ldr	r0, [fp, #-360]	; 0xfffffe98
   1699c:	sub	r3, fp, #348	; 0x15c
   169a0:	cmp	r0, r3
   169a4:	beq	169ac <close_stdout@@Base+0x383c>
   169a8:	bl	11218 <free@plt>
   169ac:	ldr	r0, [fp, #-480]	; 0xfffffe20
   169b0:	sub	r3, fp, #476	; 0x1dc
   169b4:	cmp	r0, r3
   169b8:	beq	169c0 <close_stdout@@Base+0x3850>
   169bc:	bl	11218 <free@plt>
   169c0:	bl	113d4 <__errno_location@plt>
   169c4:	mov	r2, #22
   169c8:	mov	r3, #0
   169cc:	str	r2, [r0]
   169d0:	b	16174 <close_stdout@@Base+0x3004>
   169d4:	str	r2, [fp, #-560]	; 0xfffffdd0
   169d8:	bl	113d4 <__errno_location@plt>
   169dc:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   169e0:	str	r0, [fp, #-516]	; 0xfffffdfc
   169e4:	b	1610c <close_stdout@@Base+0x2f9c>
   169e8:	adds	r5, r9, #1
   169ec:	movcc	r3, r5
   169f0:	mvncs	r3, #0
   169f4:	cmp	r3, r4
   169f8:	bls	16a80 <close_stdout@@Base+0x3910>
   169fc:	cmp	r4, #0
   16a00:	moveq	r4, #12
   16a04:	beq	16a10 <close_stdout@@Base+0x38a0>
   16a08:	lslge	r4, r4, #1
   16a0c:	mvnlt	r4, #0
   16a10:	cmp	r5, r9
   16a14:	movcs	r3, r5
   16a18:	mvncc	r3, #0
   16a1c:	cmp	r4, r3
   16a20:	bcs	16a30 <close_stdout@@Base+0x38c0>
   16a24:	cmp	r5, r9
   16a28:	bcc	160fc <close_stdout@@Base+0x2f8c>
   16a2c:	mov	r4, r5
   16a30:	cmn	r4, #1
   16a34:	beq	160fc <close_stdout@@Base+0x2f8c>
   16a38:	ldr	r2, [fp, #-504]	; 0xfffffe08
   16a3c:	subs	r3, sl, r2
   16a40:	rsbs	r6, r3, #0
   16a44:	adcs	r6, r6, r3
   16a48:	cmp	sl, r2
   16a4c:	cmpne	sl, #0
   16a50:	bne	16b90 <close_stdout@@Base+0x3a20>
   16a54:	mov	r0, r4
   16a58:	bl	1132c <malloc@plt>
   16a5c:	mov	r3, r0
   16a60:	cmp	r3, #0
   16a64:	beq	160fc <close_stdout@@Base+0x2f8c>
   16a68:	cmp	r9, #0
   16a6c:	moveq	r6, #0
   16a70:	andne	r6, r6, #1
   16a74:	cmp	r6, #0
   16a78:	moveq	sl, r3
   16a7c:	bne	16ba4 <close_stdout@@Base+0x3a34>
   16a80:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16a84:	cmp	sl, r3
   16a88:	mov	r3, #0
   16a8c:	strb	r3, [sl, r9]
   16a90:	beq	16a9c <close_stdout@@Base+0x392c>
   16a94:	cmp	r4, r5
   16a98:	bhi	16b78 <close_stdout@@Base+0x3a08>
   16a9c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   16aa0:	cmp	r1, #0
   16aa4:	beq	16ab0 <close_stdout@@Base+0x3940>
   16aa8:	mov	r0, r1
   16aac:	bl	11218 <free@plt>
   16ab0:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16ab4:	sub	r3, fp, #348	; 0x15c
   16ab8:	cmp	r0, r3
   16abc:	beq	16ac4 <close_stdout@@Base+0x3954>
   16ac0:	bl	11218 <free@plt>
   16ac4:	ldr	r0, [fp, #-480]	; 0xfffffe20
   16ac8:	sub	r3, fp, #476	; 0x1dc
   16acc:	cmp	r0, r3
   16ad0:	beq	16ad8 <close_stdout@@Base+0x3968>
   16ad4:	bl	11218 <free@plt>
   16ad8:	ldr	r2, [fp, #-536]	; 0xfffffde8
   16adc:	mov	r3, sl
   16ae0:	str	r9, [r2]
   16ae4:	b	16174 <close_stdout@@Base+0x3004>
   16ae8:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   16aec:	add	r6, r0, r9
   16af0:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   16af4:	str	r1, [r2]
   16af8:	mov	r2, sl
   16afc:	b	16674 <close_stdout@@Base+0x3504>
   16b00:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16b04:	cmp	sl, #0
   16b08:	cmpne	sl, r3
   16b0c:	bne	16b6c <close_stdout@@Base+0x39fc>
   16b10:	ldr	r3, [fp, #-548]	; 0xfffffddc
   16b14:	cmp	r3, #0
   16b18:	beq	16b24 <close_stdout@@Base+0x39b4>
   16b1c:	mov	r0, r3
   16b20:	bl	11218 <free@plt>
   16b24:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16b28:	sub	r3, fp, #348	; 0x15c
   16b2c:	cmp	r0, r3
   16b30:	beq	16b38 <close_stdout@@Base+0x39c8>
   16b34:	bl	11218 <free@plt>
   16b38:	ldr	r0, [fp, #-480]	; 0xfffffe20
   16b3c:	sub	r3, fp, #476	; 0x1dc
   16b40:	cmp	r0, r3
   16b44:	beq	16b4c <close_stdout@@Base+0x39dc>
   16b48:	bl	11218 <free@plt>
   16b4c:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   16b50:	mov	r2, #75	; 0x4b
   16b54:	mov	r3, #0
   16b58:	str	r2, [r1]
   16b5c:	b	16174 <close_stdout@@Base+0x3004>
   16b60:	mov	r0, r2
   16b64:	bl	11218 <free@plt>
   16b68:	b	1611c <close_stdout@@Base+0x2fac>
   16b6c:	mov	r0, sl
   16b70:	bl	11218 <free@plt>
   16b74:	b	16b10 <close_stdout@@Base+0x39a0>
   16b78:	mov	r0, sl
   16b7c:	mov	r1, r5
   16b80:	bl	11290 <realloc@plt>
   16b84:	cmp	r0, #0
   16b88:	movne	sl, r0
   16b8c:	b	16a9c <close_stdout@@Base+0x392c>
   16b90:	mov	r0, sl
   16b94:	mov	r1, r4
   16b98:	bl	11290 <realloc@plt>
   16b9c:	mov	r3, r0
   16ba0:	b	16a60 <close_stdout@@Base+0x38f0>
   16ba4:	mov	r1, sl
   16ba8:	mov	r0, r3
   16bac:	mov	r2, r9
   16bb0:	mov	sl, r3
   16bb4:	bl	1123c <memcpy@plt>
   16bb8:	b	16a80 <close_stdout@@Base+0x3910>
   16bbc:	bl	11284 <__stack_chk_fail@plt>
   16bc0:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   16bc4:	cmp	r9, r2
   16bc8:	bhi	160fc <close_stdout@@Base+0x2f8c>
   16bcc:	mvn	r4, #0
   16bd0:	b	161a4 <close_stdout@@Base+0x3034>
   16bd4:	andeq	r4, r1, ip, asr #4
   16bd8:	andeq	r0, r0, r0, lsr r1
   16bdc:	push	{r4, r5, r6}
   16be0:	ldm	r1, {r3, ip}
   16be4:	cmp	r3, #0
   16be8:	beq	16c90 <close_stdout@@Base+0x3b20>
   16bec:	ldr	r6, [pc, #304]	; 16d24 <close_stdout@@Base+0x3bb4>
   16bf0:	add	ip, ip, #16
   16bf4:	ldr	r5, [pc, #300]	; 16d28 <close_stdout@@Base+0x3bb8>
   16bf8:	mov	r4, #0
   16bfc:	add	r6, pc, r6
   16c00:	add	r5, pc, r5
   16c04:	ldr	r3, [ip, #-16]
   16c08:	sub	r3, r3, #1
   16c0c:	cmp	r3, #21
   16c10:	addls	pc, pc, r3, lsl #2
   16c14:	b	16d1c <close_stdout@@Base+0x3bac>
   16c18:	b	16cdc <close_stdout@@Base+0x3b6c>
   16c1c:	b	16cdc <close_stdout@@Base+0x3b6c>
   16c20:	b	16ccc <close_stdout@@Base+0x3b5c>
   16c24:	b	16ccc <close_stdout@@Base+0x3b5c>
   16c28:	b	16c70 <close_stdout@@Base+0x3b00>
   16c2c:	b	16c70 <close_stdout@@Base+0x3b00>
   16c30:	b	16c70 <close_stdout@@Base+0x3b00>
   16c34:	b	16c70 <close_stdout@@Base+0x3b00>
   16c38:	b	16c9c <close_stdout@@Base+0x3b2c>
   16c3c:	b	16c9c <close_stdout@@Base+0x3b2c>
   16c40:	b	16cb4 <close_stdout@@Base+0x3b44>
   16c44:	b	16cb4 <close_stdout@@Base+0x3b44>
   16c48:	b	16c70 <close_stdout@@Base+0x3b00>
   16c4c:	b	16c70 <close_stdout@@Base+0x3b00>
   16c50:	b	16cec <close_stdout@@Base+0x3b7c>
   16c54:	b	16d04 <close_stdout@@Base+0x3b94>
   16c58:	b	16c70 <close_stdout@@Base+0x3b00>
   16c5c:	b	16c70 <close_stdout@@Base+0x3b00>
   16c60:	b	16c70 <close_stdout@@Base+0x3b00>
   16c64:	b	16c70 <close_stdout@@Base+0x3b00>
   16c68:	b	16c70 <close_stdout@@Base+0x3b00>
   16c6c:	b	16c70 <close_stdout@@Base+0x3b00>
   16c70:	ldr	r3, [r0]
   16c74:	add	r0, r0, #4
   16c78:	str	r3, [ip, #-8]
   16c7c:	ldr	r3, [r1]
   16c80:	add	r4, r4, #1
   16c84:	add	ip, ip, #16
   16c88:	cmp	r3, r4
   16c8c:	bhi	16c04 <close_stdout@@Base+0x3a94>
   16c90:	mov	r0, #0
   16c94:	pop	{r4, r5, r6}
   16c98:	bx	lr
   16c9c:	add	r3, r0, #7
   16ca0:	bic	r3, r3, #7
   16ca4:	add	r0, r3, #8
   16ca8:	ldrd	r2, [r3]
   16cac:	strd	r2, [ip, #-8]
   16cb0:	b	16c7c <close_stdout@@Base+0x3b0c>
   16cb4:	add	r0, r0, #7
   16cb8:	bic	r0, r0, #7
   16cbc:	add	r0, r0, #8
   16cc0:	ldrd	r2, [r0, #-8]
   16cc4:	strd	r2, [ip, #-8]
   16cc8:	b	16c7c <close_stdout@@Base+0x3b0c>
   16ccc:	ldr	r3, [r0]
   16cd0:	add	r0, r0, #4
   16cd4:	strh	r3, [ip, #-8]
   16cd8:	b	16c7c <close_stdout@@Base+0x3b0c>
   16cdc:	ldr	r3, [r0]
   16ce0:	add	r0, r0, #4
   16ce4:	strb	r3, [ip, #-8]
   16ce8:	b	16c7c <close_stdout@@Base+0x3b0c>
   16cec:	ldr	r3, [r0]
   16cf0:	add	r0, r0, #4
   16cf4:	cmp	r3, #0
   16cf8:	str	r3, [ip, #-8]
   16cfc:	streq	r5, [ip, #-8]
   16d00:	b	16c7c <close_stdout@@Base+0x3b0c>
   16d04:	ldr	r3, [r0]
   16d08:	add	r0, r0, #4
   16d0c:	cmp	r3, #0
   16d10:	str	r3, [ip, #-8]
   16d14:	streq	r6, [ip, #-8]
   16d18:	b	16c7c <close_stdout@@Base+0x3b0c>
   16d1c:	mvn	r0, #0
   16d20:	b	16c94 <close_stdout@@Base+0x3b24>
   16d24:	andeq	r2, r0, ip, lsl #12
   16d28:	andeq	r2, r0, r4, lsr #12
   16d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d30:	mov	r7, r1
   16d34:	sub	sp, sp, #44	; 0x2c
   16d38:	mov	r5, r2
   16d3c:	movw	sl, #39321	; 0x9999
   16d40:	mov	r2, r7
   16d44:	movt	sl, #6553	; 0x1999
   16d48:	mov	r3, #0
   16d4c:	str	r3, [r2], #16
   16d50:	mov	r1, #7
   16d54:	str	r2, [r7, #4]
   16d58:	mov	r9, r0
   16d5c:	str	r2, [sp, #16]
   16d60:	mov	r2, r5
   16d64:	str	r3, [r2], #8
   16d68:	mov	r6, r3
   16d6c:	str	r2, [r5, #4]
   16d70:	movw	r0, #29789	; 0x745d
   16d74:	str	r3, [sp, #8]
   16d78:	movt	r0, #1489	; 0x5d1
   16d7c:	str	r1, [sp, #20]
   16d80:	mov	ip, sl
   16d84:	str	r3, [sp, #24]
   16d88:	str	r3, [sp, #36]	; 0x24
   16d8c:	mov	r3, #7
   16d90:	str	r2, [sp, #12]
   16d94:	str	r3, [sp, #28]
   16d98:	ldr	r1, [r7]
   16d9c:	ldr	r3, [r7, #4]
   16da0:	str	r0, [sp, #32]
   16da4:	b	16db0 <close_stdout@@Base+0x3c40>
   16da8:	cmp	r0, #37	; 0x25
   16dac:	beq	16df0 <close_stdout@@Base+0x3c80>
   16db0:	mov	r8, r9
   16db4:	ldrb	r0, [r9], #1
   16db8:	cmp	r0, #0
   16dbc:	mov	r2, r9
   16dc0:	bne	16da8 <close_stdout@@Base+0x3c38>
   16dc4:	mov	r4, #44	; 0x2c
   16dc8:	mov	r2, r0
   16dcc:	mul	r1, r4, r1
   16dd0:	str	r8, [r3, r1]
   16dd4:	ldr	r3, [sp, #24]
   16dd8:	str	r3, [r7, #8]
   16ddc:	ldr	r3, [sp, #8]
   16de0:	str	r3, [r7, #12]
   16de4:	mov	r0, r2
   16de8:	add	sp, sp, #44	; 0x2c
   16dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16df0:	mov	r0, #44	; 0x2c
   16df4:	mul	r1, r0, r1
   16df8:	add	r4, r3, r1
   16dfc:	str	r8, [r3, r1]
   16e00:	mvn	r1, #0
   16e04:	str	r6, [r4, #8]
   16e08:	str	r1, [r4, #20]
   16e0c:	str	r1, [r4, #32]
   16e10:	str	r1, [r4, #40]	; 0x28
   16e14:	str	r6, [r4, #12]
   16e18:	str	r6, [r4, #16]
   16e1c:	str	r6, [r4, #24]
   16e20:	str	r6, [r4, #28]
   16e24:	ldrb	r3, [r8, #1]
   16e28:	sub	sl, r3, #48	; 0x30
   16e2c:	uxtb	r1, sl
   16e30:	cmp	r1, #9
   16e34:	bls	171c8 <close_stdout@@Base+0x4058>
   16e38:	mvn	r8, #0
   16e3c:	b	16e80 <close_stdout@@Base+0x3d10>
   16e40:	cmp	r3, #45	; 0x2d
   16e44:	beq	16e9c <close_stdout@@Base+0x3d2c>
   16e48:	cmp	r3, #43	; 0x2b
   16e4c:	beq	16eac <close_stdout@@Base+0x3d3c>
   16e50:	cmp	r3, #32
   16e54:	beq	16ebc <close_stdout@@Base+0x3d4c>
   16e58:	cmp	r3, #35	; 0x23
   16e5c:	beq	16ecc <close_stdout@@Base+0x3d5c>
   16e60:	cmp	r3, #48	; 0x30
   16e64:	beq	16edc <close_stdout@@Base+0x3d6c>
   16e68:	cmp	r3, #73	; 0x49
   16e6c:	bne	16eec <close_stdout@@Base+0x3d7c>
   16e70:	ldr	r3, [r4, #8]
   16e74:	orr	r3, r3, #64	; 0x40
   16e78:	str	r3, [r4, #8]
   16e7c:	ldrb	r3, [r2, #1]!
   16e80:	cmp	r3, #39	; 0x27
   16e84:	mov	r9, r2
   16e88:	bne	16e40 <close_stdout@@Base+0x3cd0>
   16e8c:	ldr	r3, [r4, #8]
   16e90:	orr	r3, r3, #1
   16e94:	str	r3, [r4, #8]
   16e98:	b	16e7c <close_stdout@@Base+0x3d0c>
   16e9c:	ldr	r3, [r4, #8]
   16ea0:	orr	r3, r3, #2
   16ea4:	str	r3, [r4, #8]
   16ea8:	b	16e7c <close_stdout@@Base+0x3d0c>
   16eac:	ldr	r3, [r4, #8]
   16eb0:	orr	r3, r3, #4
   16eb4:	str	r3, [r4, #8]
   16eb8:	b	16e7c <close_stdout@@Base+0x3d0c>
   16ebc:	ldr	r3, [r4, #8]
   16ec0:	orr	r3, r3, #8
   16ec4:	str	r3, [r4, #8]
   16ec8:	b	16e7c <close_stdout@@Base+0x3d0c>
   16ecc:	ldr	r3, [r4, #8]
   16ed0:	orr	r3, r3, #16
   16ed4:	str	r3, [r4, #8]
   16ed8:	b	16e7c <close_stdout@@Base+0x3d0c>
   16edc:	ldr	r3, [r4, #8]
   16ee0:	orr	r3, r3, #32
   16ee4:	str	r3, [r4, #8]
   16ee8:	b	16e7c <close_stdout@@Base+0x3d0c>
   16eec:	cmp	r3, #42	; 0x2a
   16ef0:	beq	17364 <close_stdout@@Base+0x41f4>
   16ef4:	sub	r1, r3, #48	; 0x30
   16ef8:	uxtb	r1, r1
   16efc:	cmp	r1, #9
   16f00:	bls	17240 <close_stdout@@Base+0x40d0>
   16f04:	cmp	r3, #46	; 0x2e
   16f08:	beq	17294 <close_stdout@@Base+0x4124>
   16f0c:	mov	sl, #0
   16f10:	mov	r0, #1
   16f14:	b	16f20 <close_stdout@@Base+0x3db0>
   16f18:	ldrb	r3, [r2, #1]
   16f1c:	add	r9, r9, #1
   16f20:	cmp	r3, #104	; 0x68
   16f24:	mov	r2, r9
   16f28:	andeq	r3, sl, #1
   16f2c:	orreq	sl, sl, r0, lsl r3
   16f30:	beq	16f18 <close_stdout@@Base+0x3da8>
   16f34:	cmp	r3, #76	; 0x4c
   16f38:	orreq	sl, sl, #4
   16f3c:	beq	16f18 <close_stdout@@Base+0x3da8>
   16f40:	cmp	r3, #108	; 0x6c
   16f44:	addeq	sl, sl, #8
   16f48:	beq	16f18 <close_stdout@@Base+0x3da8>
   16f4c:	cmp	r3, #106	; 0x6a
   16f50:	addeq	sl, sl, #16
   16f54:	beq	16f18 <close_stdout@@Base+0x3da8>
   16f58:	and	r1, r3, #223	; 0xdf
   16f5c:	cmp	r1, #90	; 0x5a
   16f60:	beq	16f18 <close_stdout@@Base+0x3da8>
   16f64:	cmp	r3, #116	; 0x74
   16f68:	beq	16f18 <close_stdout@@Base+0x3da8>
   16f6c:	sub	r2, r3, #37	; 0x25
   16f70:	add	r9, r9, #1
   16f74:	mov	fp, r3
   16f78:	cmp	r2, #83	; 0x53
   16f7c:	addls	pc, pc, r2, lsl #2
   16f80:	b	176a4 <close_stdout@@Base+0x4534>
   16f84:	b	17134 <close_stdout@@Base+0x3fc4>
   16f88:	b	176a4 <close_stdout@@Base+0x4534>
   16f8c:	b	176a4 <close_stdout@@Base+0x4534>
   16f90:	b	176a4 <close_stdout@@Base+0x4534>
   16f94:	b	176a4 <close_stdout@@Base+0x4534>
   16f98:	b	176a4 <close_stdout@@Base+0x4534>
   16f9c:	b	176a4 <close_stdout@@Base+0x4534>
   16fa0:	b	176a4 <close_stdout@@Base+0x4534>
   16fa4:	b	176a4 <close_stdout@@Base+0x4534>
   16fa8:	b	176a4 <close_stdout@@Base+0x4534>
   16fac:	b	176a4 <close_stdout@@Base+0x4534>
   16fb0:	b	176a4 <close_stdout@@Base+0x4534>
   16fb4:	b	176a4 <close_stdout@@Base+0x4534>
   16fb8:	b	176a4 <close_stdout@@Base+0x4534>
   16fbc:	b	176a4 <close_stdout@@Base+0x4534>
   16fc0:	b	176a4 <close_stdout@@Base+0x4534>
   16fc4:	b	176a4 <close_stdout@@Base+0x4534>
   16fc8:	b	176a4 <close_stdout@@Base+0x4534>
   16fcc:	b	176a4 <close_stdout@@Base+0x4534>
   16fd0:	b	176a4 <close_stdout@@Base+0x4534>
   16fd4:	b	176a4 <close_stdout@@Base+0x4534>
   16fd8:	b	176a4 <close_stdout@@Base+0x4534>
   16fdc:	b	176a4 <close_stdout@@Base+0x4534>
   16fe0:	b	176a4 <close_stdout@@Base+0x4534>
   16fe4:	b	176a4 <close_stdout@@Base+0x4534>
   16fe8:	b	176a4 <close_stdout@@Base+0x4534>
   16fec:	b	176a4 <close_stdout@@Base+0x4534>
   16ff0:	b	176a4 <close_stdout@@Base+0x4534>
   16ff4:	b	17480 <close_stdout@@Base+0x4310>
   16ff8:	b	176a4 <close_stdout@@Base+0x4534>
   16ffc:	b	174a4 <close_stdout@@Base+0x4334>
   17000:	b	176a4 <close_stdout@@Base+0x4534>
   17004:	b	17480 <close_stdout@@Base+0x4310>
   17008:	b	17480 <close_stdout@@Base+0x4310>
   1700c:	b	17480 <close_stdout@@Base+0x4310>
   17010:	b	176a4 <close_stdout@@Base+0x4534>
   17014:	b	176a4 <close_stdout@@Base+0x4534>
   17018:	b	176a4 <close_stdout@@Base+0x4534>
   1701c:	b	176a4 <close_stdout@@Base+0x4534>
   17020:	b	176a4 <close_stdout@@Base+0x4534>
   17024:	b	176a4 <close_stdout@@Base+0x4534>
   17028:	b	176a4 <close_stdout@@Base+0x4534>
   1702c:	b	176a4 <close_stdout@@Base+0x4534>
   17030:	b	176a4 <close_stdout@@Base+0x4534>
   17034:	b	176a4 <close_stdout@@Base+0x4534>
   17038:	b	176a4 <close_stdout@@Base+0x4534>
   1703c:	b	174b0 <close_stdout@@Base+0x4340>
   17040:	b	176a4 <close_stdout@@Base+0x4534>
   17044:	b	176a4 <close_stdout@@Base+0x4534>
   17048:	b	176a4 <close_stdout@@Base+0x4534>
   1704c:	b	176a4 <close_stdout@@Base+0x4534>
   17050:	b	174bc <close_stdout@@Base+0x434c>
   17054:	b	176a4 <close_stdout@@Base+0x4534>
   17058:	b	176a4 <close_stdout@@Base+0x4534>
   1705c:	b	176a4 <close_stdout@@Base+0x4534>
   17060:	b	176a4 <close_stdout@@Base+0x4534>
   17064:	b	176a4 <close_stdout@@Base+0x4534>
   17068:	b	176a4 <close_stdout@@Base+0x4534>
   1706c:	b	176a4 <close_stdout@@Base+0x4534>
   17070:	b	176a4 <close_stdout@@Base+0x4534>
   17074:	b	17480 <close_stdout@@Base+0x4310>
   17078:	b	176a4 <close_stdout@@Base+0x4534>
   1707c:	b	17544 <close_stdout@@Base+0x43d4>
   17080:	b	17500 <close_stdout@@Base+0x4390>
   17084:	b	17480 <close_stdout@@Base+0x4310>
   17088:	b	17480 <close_stdout@@Base+0x4310>
   1708c:	b	17480 <close_stdout@@Base+0x4310>
   17090:	b	176a4 <close_stdout@@Base+0x4534>
   17094:	b	17500 <close_stdout@@Base+0x4390>
   17098:	b	176a4 <close_stdout@@Base+0x4534>
   1709c:	b	176a4 <close_stdout@@Base+0x4534>
   170a0:	b	176a4 <close_stdout@@Base+0x4534>
   170a4:	b	176a4 <close_stdout@@Base+0x4534>
   170a8:	b	17554 <close_stdout@@Base+0x43e4>
   170ac:	b	174bc <close_stdout@@Base+0x434c>
   170b0:	b	170d4 <close_stdout@@Base+0x3f64>
   170b4:	b	176a4 <close_stdout@@Base+0x4534>
   170b8:	b	176a4 <close_stdout@@Base+0x4534>
   170bc:	b	17470 <close_stdout@@Base+0x4300>
   170c0:	b	176a4 <close_stdout@@Base+0x4534>
   170c4:	b	174bc <close_stdout@@Base+0x434c>
   170c8:	b	176a4 <close_stdout@@Base+0x4534>
   170cc:	b	176a4 <close_stdout@@Base+0x4534>
   170d0:	b	174bc <close_stdout@@Base+0x434c>
   170d4:	mov	sl, #17
   170d8:	cmn	r8, #1
   170dc:	strne	r8, [r4, #40]	; 0x28
   170e0:	beq	17800 <close_stdout@@Base+0x4690>
   170e4:	ldr	r3, [sp, #20]
   170e8:	cmp	r3, r8
   170ec:	bls	1772c <close_stdout@@Base+0x45bc>
   170f0:	ldr	r0, [r5, #4]
   170f4:	ldr	r3, [r5]
   170f8:	cmp	r3, r8
   170fc:	bhi	1711c <close_stdout@@Base+0x3fac>
   17100:	add	r2, r3, #1
   17104:	str	r2, [r5]
   17108:	str	r6, [r0, r3, lsl #4]
   1710c:	ldr	r3, [r5]
   17110:	ldr	r0, [r5, #4]
   17114:	cmp	r3, r8
   17118:	bls	17100 <close_stdout@@Base+0x3f90>
   1711c:	ldr	r3, [r0, r8, lsl #4]
   17120:	cmp	r3, #0
   17124:	streq	sl, [r0, r8, lsl #4]
   17128:	beq	17134 <close_stdout@@Base+0x3fc4>
   1712c:	cmp	sl, r3
   17130:	bne	176a8 <close_stdout@@Base+0x4538>
   17134:	strb	fp, [r4, #36]	; 0x24
   17138:	str	r9, [r4, #4]
   1713c:	ldr	r1, [r7]
   17140:	ldr	r3, [sp, #28]
   17144:	add	r1, r1, #1
   17148:	str	r1, [r7]
   1714c:	cmp	r3, r1
   17150:	bhi	17238 <close_stdout@@Base+0x40c8>
   17154:	ldr	r3, [sp, #28]
   17158:	cmp	r3, #0
   1715c:	blt	17324 <close_stdout@@Base+0x41b4>
   17160:	ldr	r3, [sp, #28]
   17164:	ldr	r0, [sp, #32]
   17168:	lsl	r3, r3, #1
   1716c:	str	r3, [sp, #28]
   17170:	cmp	r3, r0
   17174:	bhi	17324 <close_stdout@@Base+0x41b4>
   17178:	mov	r2, #44	; 0x2c
   1717c:	ldr	r0, [r7, #4]
   17180:	mul	r1, r2, r3
   17184:	ldr	r3, [sp, #16]
   17188:	cmp	r3, r0
   1718c:	beq	17820 <close_stdout@@Base+0x46b0>
   17190:	str	ip, [sp, #4]
   17194:	bl	11290 <realloc@plt>
   17198:	ldr	ip, [sp, #4]
   1719c:	mov	r4, r0
   171a0:	cmp	r4, #0
   171a4:	beq	17324 <close_stdout@@Base+0x41b4>
   171a8:	ldr	r3, [r7, #4]
   171ac:	ldr	r0, [sp, #16]
   171b0:	cmp	r0, r3
   171b4:	beq	178dc <close_stdout@@Base+0x476c>
   171b8:	ldr	r1, [r7]
   171bc:	mov	r3, r4
   171c0:	str	r4, [r7, #4]
   171c4:	b	16db0 <close_stdout@@Base+0x3c40>
   171c8:	mov	r0, r9
   171cc:	ldrb	r1, [r0, #1]!
   171d0:	sub	r8, r1, #48	; 0x30
   171d4:	cmp	r8, #9
   171d8:	bls	171cc <close_stdout@@Base+0x405c>
   171dc:	cmp	r1, #36	; 0x24
   171e0:	bne	16e38 <close_stdout@@Base+0x3cc8>
   171e4:	mov	r8, #0
   171e8:	b	171f0 <close_stdout@@Base+0x4080>
   171ec:	mov	r9, r2
   171f0:	add	r3, r8, r8, lsl #2
   171f4:	cmp	r8, ip
   171f8:	mvn	r8, #0
   171fc:	add	r2, r9, #1
   17200:	lslls	r8, r3, #1
   17204:	adds	r8, r8, sl
   17208:	ldrb	sl, [r9, #1]
   1720c:	sub	sl, sl, #48	; 0x30
   17210:	mvncs	r8, #0
   17214:	uxtb	r3, sl
   17218:	cmp	r3, #9
   1721c:	bls	171ec <close_stdout@@Base+0x407c>
   17220:	sub	r8, r8, #1
   17224:	cmn	r8, #3
   17228:	bhi	176a4 <close_stdout@@Base+0x4534>
   1722c:	add	r2, r2, #1
   17230:	ldrb	r3, [r9, #2]
   17234:	b	16e80 <close_stdout@@Base+0x3d10>
   17238:	ldr	r3, [r7, #4]
   1723c:	b	16db0 <close_stdout@@Base+0x3c40>
   17240:	str	r2, [r4, #12]
   17244:	ldrb	r3, [r2]
   17248:	sub	r3, r3, #48	; 0x30
   1724c:	cmp	r3, #9
   17250:	bhi	178d4 <close_stdout@@Base+0x4764>
   17254:	add	r3, r2, #1
   17258:	mov	r9, r3
   1725c:	add	r3, r3, #1
   17260:	ldrb	r1, [r9]
   17264:	sub	r1, r1, #48	; 0x30
   17268:	cmp	r1, #9
   1726c:	bls	17258 <close_stdout@@Base+0x40e8>
   17270:	rsb	r2, r2, r9
   17274:	ldr	r3, [sp, #24]
   17278:	str	r9, [r4, #16]
   1727c:	cmp	r3, r2
   17280:	movcc	r3, r2
   17284:	str	r3, [sp, #24]
   17288:	ldrb	r3, [r9]
   1728c:	cmp	r3, #46	; 0x2e
   17290:	bne	16f0c <close_stdout@@Base+0x3d9c>
   17294:	ldrb	r3, [r9, #1]
   17298:	str	r9, [r4, #24]
   1729c:	cmp	r3, #42	; 0x2a
   172a0:	beq	1758c <close_stdout@@Base+0x441c>
   172a4:	ldrb	r3, [r9, #1]
   172a8:	add	r2, r9, #1
   172ac:	sub	r3, r3, #48	; 0x30
   172b0:	cmp	r3, #9
   172b4:	bhi	172d4 <close_stdout@@Base+0x4164>
   172b8:	add	r3, r9, #2
   172bc:	mov	r2, r3
   172c0:	add	r3, r3, #1
   172c4:	ldrb	r1, [r2]
   172c8:	sub	r1, r1, #48	; 0x30
   172cc:	cmp	r1, #9
   172d0:	bls	172bc <close_stdout@@Base+0x414c>
   172d4:	ldr	r0, [sp, #8]
   172d8:	rsb	r9, r9, r2
   172dc:	str	r2, [r4, #28]
   172e0:	cmp	r0, r9
   172e4:	movcc	r0, r9
   172e8:	ldrb	r3, [r2]
   172ec:	str	r0, [sp, #8]
   172f0:	mov	r9, r2
   172f4:	b	16f0c <close_stdout@@Base+0x3d9c>
   172f8:	ldr	r3, [sp, #20]
   172fc:	cmp	r3, #0
   17300:	lslge	r3, r3, #1
   17304:	mvnlt	r3, #0
   17308:	str	r3, [sp, #20]
   1730c:	ldr	r3, [sp, #20]
   17310:	cmp	r3, sl
   17314:	bhi	177b0 <close_stdout@@Base+0x4640>
   17318:	adds	r3, sl, #1
   1731c:	str	r3, [sp, #20]
   17320:	bcc	177b0 <close_stdout@@Base+0x4640>
   17324:	ldr	r2, [r5, #4]
   17328:	ldr	r3, [sp, #12]
   1732c:	cmp	r3, r2
   17330:	beq	1733c <close_stdout@@Base+0x41cc>
   17334:	mov	r0, r2
   17338:	bl	11218 <free@plt>
   1733c:	ldr	r0, [r7, #4]
   17340:	ldr	r3, [sp, #16]
   17344:	cmp	r3, r0
   17348:	beq	17350 <close_stdout@@Base+0x41e0>
   1734c:	bl	11218 <free@plt>
   17350:	bl	113d4 <__errno_location@plt>
   17354:	mov	r3, #12
   17358:	mvn	r2, #0
   1735c:	str	r3, [r0]
   17360:	b	16de4 <close_stdout@@Base+0x3c74>
   17364:	ldr	r3, [sp, #24]
   17368:	add	r9, r2, #1
   1736c:	str	r2, [r4, #12]
   17370:	str	r9, [r4, #16]
   17374:	cmp	r3, #0
   17378:	ldrb	sl, [r2, #1]
   1737c:	moveq	r3, #1
   17380:	str	r3, [sp, #24]
   17384:	sub	sl, sl, #48	; 0x30
   17388:	uxtb	r3, sl
   1738c:	cmp	r3, #9
   17390:	bls	17404 <close_stdout@@Base+0x4294>
   17394:	ldr	r3, [sp, #36]	; 0x24
   17398:	cmn	r3, #1
   1739c:	str	r3, [r4, #20]
   173a0:	add	r3, r3, #1
   173a4:	beq	176a4 <close_stdout@@Base+0x4534>
   173a8:	ldr	sl, [sp, #36]	; 0x24
   173ac:	str	r3, [sp, #36]	; 0x24
   173b0:	ldr	r3, [sp, #20]
   173b4:	cmp	r3, sl
   173b8:	bls	172f8 <close_stdout@@Base+0x4188>
   173bc:	ldr	r0, [r5, #4]
   173c0:	ldr	r3, [r5]
   173c4:	cmp	r3, sl
   173c8:	bhi	173e8 <close_stdout@@Base+0x4278>
   173cc:	add	r2, r3, #1
   173d0:	str	r2, [r5]
   173d4:	str	r6, [r0, r3, lsl #4]
   173d8:	ldr	r3, [r5]
   173dc:	ldr	r0, [r5, #4]
   173e0:	cmp	r3, sl
   173e4:	bls	173cc <close_stdout@@Base+0x425c>
   173e8:	ldr	r3, [r0, sl, lsl #4]
   173ec:	cmp	r3, #0
   173f0:	bne	177a4 <close_stdout@@Base+0x4634>
   173f4:	mov	r1, #5
   173f8:	str	r1, [r0, sl, lsl #4]
   173fc:	ldrb	r3, [r9]
   17400:	b	16f04 <close_stdout@@Base+0x3d94>
   17404:	mov	r1, r9
   17408:	ldrb	r3, [r1, #1]!
   1740c:	sub	r0, r3, #48	; 0x30
   17410:	cmp	r0, #9
   17414:	bls	17408 <close_stdout@@Base+0x4298>
   17418:	cmp	r3, #36	; 0x24
   1741c:	bne	17394 <close_stdout@@Base+0x4224>
   17420:	add	r2, r2, #2
   17424:	mov	r3, #0
   17428:	add	r1, r3, r3, lsl #2
   1742c:	cmp	r3, ip
   17430:	mvn	r3, #0
   17434:	lslls	r3, r1, #1
   17438:	adds	r3, r3, sl
   1743c:	ldrb	sl, [r2], #1
   17440:	sub	sl, sl, #48	; 0x30
   17444:	mvncs	r3, #0
   17448:	uxtb	r1, sl
   1744c:	cmp	r1, #9
   17450:	bls	17428 <close_stdout@@Base+0x42b8>
   17454:	sub	r3, r3, #1
   17458:	cmn	r3, #3
   1745c:	bhi	176a4 <close_stdout@@Base+0x4534>
   17460:	str	r3, [r4, #20]
   17464:	mov	r9, r2
   17468:	mov	sl, r3
   1746c:	b	173b0 <close_stdout@@Base+0x4240>
   17470:	cmp	sl, #7
   17474:	movle	sl, #15
   17478:	movgt	sl, #16
   1747c:	b	170d8 <close_stdout@@Base+0x3f68>
   17480:	cmp	sl, #15
   17484:	movgt	fp, r3
   17488:	movgt	sl, #12
   1748c:	bgt	170d8 <close_stdout@@Base+0x3f68>
   17490:	tst	sl, #4
   17494:	mov	fp, r3
   17498:	moveq	sl, #11
   1749c:	movne	sl, #12
   174a0:	b	170d8 <close_stdout@@Base+0x3f68>
   174a4:	mov	sl, #14
   174a8:	mov	fp, #99	; 0x63
   174ac:	b	170d8 <close_stdout@@Base+0x3f68>
   174b0:	mov	sl, #16
   174b4:	mov	fp, #115	; 0x73
   174b8:	b	170d8 <close_stdout@@Base+0x3f68>
   174bc:	cmp	sl, #15
   174c0:	bgt	176e0 <close_stdout@@Base+0x4570>
   174c4:	tst	sl, #4
   174c8:	bne	176e0 <close_stdout@@Base+0x4570>
   174cc:	cmp	sl, #7
   174d0:	movgt	fp, r3
   174d4:	movgt	sl, #8
   174d8:	bgt	170d8 <close_stdout@@Base+0x3f68>
   174dc:	tst	sl, #2
   174e0:	movne	fp, r3
   174e4:	movne	sl, #2
   174e8:	bne	170d8 <close_stdout@@Base+0x3f68>
   174ec:	tst	sl, #1
   174f0:	mov	fp, r3
   174f4:	moveq	sl, #6
   174f8:	movne	sl, #4
   174fc:	b	170d8 <close_stdout@@Base+0x3f68>
   17500:	cmp	sl, #15
   17504:	bgt	176ec <close_stdout@@Base+0x457c>
   17508:	tst	sl, #4
   1750c:	bne	176ec <close_stdout@@Base+0x457c>
   17510:	cmp	sl, #7
   17514:	movgt	fp, r3
   17518:	movgt	sl, #7
   1751c:	bgt	170d8 <close_stdout@@Base+0x3f68>
   17520:	tst	sl, #2
   17524:	movne	fp, r3
   17528:	movne	sl, #1
   1752c:	bne	170d8 <close_stdout@@Base+0x3f68>
   17530:	tst	sl, #1
   17534:	mov	fp, r3
   17538:	moveq	sl, #5
   1753c:	movne	sl, #3
   17540:	b	170d8 <close_stdout@@Base+0x3f68>
   17544:	cmp	sl, #7
   17548:	movle	sl, #13
   1754c:	movgt	sl, #14
   17550:	b	170d8 <close_stdout@@Base+0x3f68>
   17554:	cmp	sl, #15
   17558:	bgt	176f8 <close_stdout@@Base+0x4588>
   1755c:	tst	sl, #4
   17560:	bne	176f8 <close_stdout@@Base+0x4588>
   17564:	cmp	sl, #7
   17568:	movgt	sl, #21
   1756c:	bgt	170d8 <close_stdout@@Base+0x3f68>
   17570:	tst	sl, #2
   17574:	movne	sl, #18
   17578:	bne	170d8 <close_stdout@@Base+0x3f68>
   1757c:	tst	sl, #1
   17580:	moveq	sl, #20
   17584:	movne	sl, #19
   17588:	b	170d8 <close_stdout@@Base+0x3f68>
   1758c:	ldr	r3, [sp, #8]
   17590:	add	sl, r9, #2
   17594:	str	sl, [r4, #28]
   17598:	ldrb	r0, [r9, #2]
   1759c:	cmp	r3, #1
   175a0:	sub	r0, r0, #48	; 0x30
   175a4:	movls	r3, #2
   175a8:	str	r3, [sp, #8]
   175ac:	uxtb	r3, r0
   175b0:	cmp	r3, #9
   175b4:	bhi	17700 <close_stdout@@Base+0x4590>
   175b8:	mov	r2, sl
   175bc:	ldrb	r3, [r2, #1]!
   175c0:	sub	r1, r3, #48	; 0x30
   175c4:	cmp	r1, #9
   175c8:	bls	175bc <close_stdout@@Base+0x444c>
   175cc:	cmp	r3, #36	; 0x24
   175d0:	bne	17700 <close_stdout@@Base+0x4590>
   175d4:	add	r9, r9, #3
   175d8:	mov	r3, #0
   175dc:	add	r2, r3, r3, lsl #2
   175e0:	cmp	r3, ip
   175e4:	mvn	r3, #0
   175e8:	lslls	r3, r2, #1
   175ec:	adds	r3, r3, r0
   175f0:	ldrb	r0, [r9], #1
   175f4:	sub	r0, r0, #48	; 0x30
   175f8:	mvncs	r3, #0
   175fc:	uxtb	r2, r0
   17600:	cmp	r2, #9
   17604:	bls	175dc <close_stdout@@Base+0x446c>
   17608:	sub	r3, r3, #1
   1760c:	cmn	r3, #3
   17610:	bhi	176a4 <close_stdout@@Base+0x4534>
   17614:	mov	sl, r9
   17618:	mov	r9, r3
   1761c:	str	r3, [r4, #32]
   17620:	ldr	r3, [sp, #20]
   17624:	cmp	r3, r9
   17628:	bhi	17838 <close_stdout@@Base+0x46c8>
   1762c:	ldr	r3, [sp, #20]
   17630:	cmp	r3, #0
   17634:	blt	17324 <close_stdout@@Base+0x41b4>
   17638:	lsl	r3, r3, #1
   1763c:	str	r3, [sp, #20]
   17640:	cmp	r3, r9
   17644:	bhi	17654 <close_stdout@@Base+0x44e4>
   17648:	adds	r3, r9, #1
   1764c:	str	r3, [sp, #20]
   17650:	bcs	17324 <close_stdout@@Base+0x41b4>
   17654:	ldr	r3, [sp, #20]
   17658:	cmn	r3, #-268435455	; 0xf0000001
   1765c:	bhi	17324 <close_stdout@@Base+0x41b4>
   17660:	ldr	r0, [r5, #4]
   17664:	lsl	r1, r3, #4
   17668:	ldr	r3, [sp, #12]
   1766c:	cmp	r3, r0
   17670:	beq	1793c <close_stdout@@Base+0x47cc>
   17674:	str	ip, [sp, #4]
   17678:	bl	11290 <realloc@plt>
   1767c:	ldr	r2, [r5, #4]
   17680:	ldr	ip, [sp, #4]
   17684:	subs	r3, r0, #0
   17688:	beq	17328 <close_stdout@@Base+0x41b8>
   1768c:	ldr	r0, [sp, #12]
   17690:	cmp	r0, r2
   17694:	beq	17954 <close_stdout@@Base+0x47e4>
   17698:	mov	r0, r3
   1769c:	str	r3, [r5, #4]
   176a0:	b	1783c <close_stdout@@Base+0x46cc>
   176a4:	ldr	r0, [r5, #4]
   176a8:	ldr	r3, [sp, #12]
   176ac:	cmp	r3, r0
   176b0:	beq	176b8 <close_stdout@@Base+0x4548>
   176b4:	bl	11218 <free@plt>
   176b8:	ldr	r0, [r7, #4]
   176bc:	ldr	r3, [sp, #16]
   176c0:	cmp	r3, r0
   176c4:	beq	176cc <close_stdout@@Base+0x455c>
   176c8:	bl	11218 <free@plt>
   176cc:	bl	113d4 <__errno_location@plt>
   176d0:	mov	r3, #22
   176d4:	mvn	r2, #0
   176d8:	str	r3, [r0]
   176dc:	b	16de4 <close_stdout@@Base+0x3c74>
   176e0:	mov	fp, r3
   176e4:	mov	sl, #10
   176e8:	b	170d8 <close_stdout@@Base+0x3f68>
   176ec:	mov	fp, r3
   176f0:	mov	sl, #9
   176f4:	b	170d8 <close_stdout@@Base+0x3f68>
   176f8:	mov	sl, #22
   176fc:	b	170d8 <close_stdout@@Base+0x3f68>
   17700:	ldr	r9, [r4, #32]
   17704:	cmn	r9, #1
   17708:	bne	17620 <close_stdout@@Base+0x44b0>
   1770c:	ldr	r3, [sp, #36]	; 0x24
   17710:	cmn	r3, #1
   17714:	str	r3, [r4, #32]
   17718:	add	r3, r3, #1
   1771c:	beq	176a4 <close_stdout@@Base+0x4534>
   17720:	ldr	r9, [sp, #36]	; 0x24
   17724:	str	r3, [sp, #36]	; 0x24
   17728:	b	17620 <close_stdout@@Base+0x44b0>
   1772c:	ldr	r3, [sp, #20]
   17730:	cmp	r3, #0
   17734:	blt	17324 <close_stdout@@Base+0x41b4>
   17738:	lsl	r3, r3, #1
   1773c:	str	r3, [sp, #20]
   17740:	cmp	r3, r8
   17744:	bhi	17754 <close_stdout@@Base+0x45e4>
   17748:	adds	r3, r8, #1
   1774c:	str	r3, [sp, #20]
   17750:	bcs	17324 <close_stdout@@Base+0x41b4>
   17754:	ldr	r3, [sp, #20]
   17758:	cmn	r3, #-268435455	; 0xf0000001
   1775c:	bhi	17324 <close_stdout@@Base+0x41b4>
   17760:	ldr	r0, [r5, #4]
   17764:	lsl	r1, r3, #4
   17768:	ldr	r3, [sp, #12]
   1776c:	cmp	r3, r0
   17770:	beq	17898 <close_stdout@@Base+0x4728>
   17774:	str	ip, [sp, #4]
   17778:	bl	11290 <realloc@plt>
   1777c:	ldr	r2, [r5, #4]
   17780:	ldr	ip, [sp, #4]
   17784:	subs	r3, r0, #0
   17788:	beq	17328 <close_stdout@@Base+0x41b8>
   1778c:	ldr	r0, [sp, #12]
   17790:	cmp	r0, r2
   17794:	beq	178b0 <close_stdout@@Base+0x4740>
   17798:	mov	r0, r3
   1779c:	str	r3, [r5, #4]
   177a0:	b	170f4 <close_stdout@@Base+0x3f84>
   177a4:	cmp	r3, #5
   177a8:	beq	17288 <close_stdout@@Base+0x4118>
   177ac:	b	176a8 <close_stdout@@Base+0x4538>
   177b0:	ldr	r3, [sp, #20]
   177b4:	cmn	r3, #-268435455	; 0xf0000001
   177b8:	bhi	17324 <close_stdout@@Base+0x41b4>
   177bc:	ldr	r0, [r5, #4]
   177c0:	lsl	r1, r3, #4
   177c4:	ldr	r3, [sp, #12]
   177c8:	cmp	r3, r0
   177cc:	beq	17900 <close_stdout@@Base+0x4790>
   177d0:	str	ip, [sp, #4]
   177d4:	bl	11290 <realloc@plt>
   177d8:	ldr	r2, [r5, #4]
   177dc:	ldr	ip, [sp, #4]
   177e0:	subs	r3, r0, #0
   177e4:	beq	17328 <close_stdout@@Base+0x41b8>
   177e8:	ldr	r0, [sp, #12]
   177ec:	cmp	r0, r2
   177f0:	beq	17918 <close_stdout@@Base+0x47a8>
   177f4:	mov	r0, r3
   177f8:	str	r3, [r5, #4]
   177fc:	b	173c0 <close_stdout@@Base+0x4250>
   17800:	ldr	r3, [sp, #36]	; 0x24
   17804:	cmn	r3, #1
   17808:	str	r3, [r4, #40]	; 0x28
   1780c:	add	r3, r3, #1
   17810:	beq	176a4 <close_stdout@@Base+0x4534>
   17814:	ldr	r8, [sp, #36]	; 0x24
   17818:	str	r3, [sp, #36]	; 0x24
   1781c:	b	170e4 <close_stdout@@Base+0x3f74>
   17820:	mov	r0, r1
   17824:	str	ip, [sp, #4]
   17828:	bl	1132c <malloc@plt>
   1782c:	ldr	ip, [sp, #4]
   17830:	mov	r4, r0
   17834:	b	171a0 <close_stdout@@Base+0x4030>
   17838:	ldr	r0, [r5, #4]
   1783c:	ldr	r3, [r5]
   17840:	cmp	r3, r9
   17844:	bhi	17864 <close_stdout@@Base+0x46f4>
   17848:	add	r2, r3, #1
   1784c:	str	r2, [r5]
   17850:	str	r6, [r0, r3, lsl #4]
   17854:	ldr	r3, [r5]
   17858:	ldr	r0, [r5, #4]
   1785c:	cmp	r3, r9
   17860:	bls	17848 <close_stdout@@Base+0x46d8>
   17864:	ldr	r3, [r0, r9, lsl #4]
   17868:	cmp	r3, #0
   1786c:	bne	17884 <close_stdout@@Base+0x4714>
   17870:	mov	r1, #5
   17874:	str	r1, [r0, r9, lsl #4]
   17878:	mov	r9, sl
   1787c:	ldrb	r3, [sl]
   17880:	b	16f0c <close_stdout@@Base+0x3d9c>
   17884:	cmp	r3, #5
   17888:	bne	176a8 <close_stdout@@Base+0x4538>
   1788c:	ldrb	r3, [sl]
   17890:	mov	r9, sl
   17894:	b	16f0c <close_stdout@@Base+0x3d9c>
   17898:	mov	r0, r1
   1789c:	str	ip, [sp, #4]
   178a0:	bl	1132c <malloc@plt>
   178a4:	ldr	ip, [sp, #4]
   178a8:	subs	r3, r0, #0
   178ac:	beq	17978 <close_stdout@@Base+0x4808>
   178b0:	ldr	r2, [r5]
   178b4:	mov	r0, r3
   178b8:	ldr	r1, [sp, #12]
   178bc:	str	ip, [sp, #4]
   178c0:	lsl	r2, r2, #4
   178c4:	bl	1123c <memcpy@plt>
   178c8:	ldr	ip, [sp, #4]
   178cc:	mov	r3, r0
   178d0:	b	17798 <close_stdout@@Base+0x4628>
   178d4:	mov	r2, #0
   178d8:	b	17274 <close_stdout@@Base+0x4104>
   178dc:	ldr	r2, [r7]
   178e0:	mov	r3, #44	; 0x2c
   178e4:	mov	r0, r4
   178e8:	ldr	r1, [sp, #16]
   178ec:	str	ip, [sp, #4]
   178f0:	mul	r2, r3, r2
   178f4:	bl	1123c <memcpy@plt>
   178f8:	ldr	ip, [sp, #4]
   178fc:	b	171b8 <close_stdout@@Base+0x4048>
   17900:	mov	r0, r1
   17904:	str	ip, [sp, #4]
   17908:	bl	1132c <malloc@plt>
   1790c:	ldr	ip, [sp, #4]
   17910:	subs	r3, r0, #0
   17914:	beq	17978 <close_stdout@@Base+0x4808>
   17918:	ldr	r2, [r5]
   1791c:	mov	r0, r3
   17920:	ldr	r1, [sp, #12]
   17924:	str	ip, [sp, #4]
   17928:	lsl	r2, r2, #4
   1792c:	bl	1123c <memcpy@plt>
   17930:	ldr	ip, [sp, #4]
   17934:	mov	r3, r0
   17938:	b	177f4 <close_stdout@@Base+0x4684>
   1793c:	mov	r0, r1
   17940:	str	ip, [sp, #4]
   17944:	bl	1132c <malloc@plt>
   17948:	ldr	ip, [sp, #4]
   1794c:	subs	r3, r0, #0
   17950:	beq	17978 <close_stdout@@Base+0x4808>
   17954:	ldr	r2, [r5]
   17958:	mov	r0, r3
   1795c:	ldr	r1, [sp, #12]
   17960:	str	ip, [sp, #4]
   17964:	lsl	r2, r2, #4
   17968:	bl	1123c <memcpy@plt>
   1796c:	ldr	ip, [sp, #4]
   17970:	mov	r3, r0
   17974:	b	17698 <close_stdout@@Base+0x4528>
   17978:	ldr	r2, [sp, #12]
   1797c:	b	17328 <close_stdout@@Base+0x41b8>
   17980:	subs	r2, r1, #1
   17984:	bxeq	lr
   17988:	bcc	17b60 <close_stdout@@Base+0x49f0>
   1798c:	cmp	r0, r1
   17990:	bls	17b44 <close_stdout@@Base+0x49d4>
   17994:	tst	r1, r2
   17998:	beq	17b50 <close_stdout@@Base+0x49e0>
   1799c:	clz	r3, r0
   179a0:	clz	r2, r1
   179a4:	sub	r3, r2, r3
   179a8:	rsbs	r3, r3, #31
   179ac:	addne	r3, r3, r3, lsl #1
   179b0:	mov	r2, #0
   179b4:	addne	pc, pc, r3, lsl #2
   179b8:	nop	{0}
   179bc:	cmp	r0, r1, lsl #31
   179c0:	adc	r2, r2, r2
   179c4:	subcs	r0, r0, r1, lsl #31
   179c8:	cmp	r0, r1, lsl #30
   179cc:	adc	r2, r2, r2
   179d0:	subcs	r0, r0, r1, lsl #30
   179d4:	cmp	r0, r1, lsl #29
   179d8:	adc	r2, r2, r2
   179dc:	subcs	r0, r0, r1, lsl #29
   179e0:	cmp	r0, r1, lsl #28
   179e4:	adc	r2, r2, r2
   179e8:	subcs	r0, r0, r1, lsl #28
   179ec:	cmp	r0, r1, lsl #27
   179f0:	adc	r2, r2, r2
   179f4:	subcs	r0, r0, r1, lsl #27
   179f8:	cmp	r0, r1, lsl #26
   179fc:	adc	r2, r2, r2
   17a00:	subcs	r0, r0, r1, lsl #26
   17a04:	cmp	r0, r1, lsl #25
   17a08:	adc	r2, r2, r2
   17a0c:	subcs	r0, r0, r1, lsl #25
   17a10:	cmp	r0, r1, lsl #24
   17a14:	adc	r2, r2, r2
   17a18:	subcs	r0, r0, r1, lsl #24
   17a1c:	cmp	r0, r1, lsl #23
   17a20:	adc	r2, r2, r2
   17a24:	subcs	r0, r0, r1, lsl #23
   17a28:	cmp	r0, r1, lsl #22
   17a2c:	adc	r2, r2, r2
   17a30:	subcs	r0, r0, r1, lsl #22
   17a34:	cmp	r0, r1, lsl #21
   17a38:	adc	r2, r2, r2
   17a3c:	subcs	r0, r0, r1, lsl #21
   17a40:	cmp	r0, r1, lsl #20
   17a44:	adc	r2, r2, r2
   17a48:	subcs	r0, r0, r1, lsl #20
   17a4c:	cmp	r0, r1, lsl #19
   17a50:	adc	r2, r2, r2
   17a54:	subcs	r0, r0, r1, lsl #19
   17a58:	cmp	r0, r1, lsl #18
   17a5c:	adc	r2, r2, r2
   17a60:	subcs	r0, r0, r1, lsl #18
   17a64:	cmp	r0, r1, lsl #17
   17a68:	adc	r2, r2, r2
   17a6c:	subcs	r0, r0, r1, lsl #17
   17a70:	cmp	r0, r1, lsl #16
   17a74:	adc	r2, r2, r2
   17a78:	subcs	r0, r0, r1, lsl #16
   17a7c:	cmp	r0, r1, lsl #15
   17a80:	adc	r2, r2, r2
   17a84:	subcs	r0, r0, r1, lsl #15
   17a88:	cmp	r0, r1, lsl #14
   17a8c:	adc	r2, r2, r2
   17a90:	subcs	r0, r0, r1, lsl #14
   17a94:	cmp	r0, r1, lsl #13
   17a98:	adc	r2, r2, r2
   17a9c:	subcs	r0, r0, r1, lsl #13
   17aa0:	cmp	r0, r1, lsl #12
   17aa4:	adc	r2, r2, r2
   17aa8:	subcs	r0, r0, r1, lsl #12
   17aac:	cmp	r0, r1, lsl #11
   17ab0:	adc	r2, r2, r2
   17ab4:	subcs	r0, r0, r1, lsl #11
   17ab8:	cmp	r0, r1, lsl #10
   17abc:	adc	r2, r2, r2
   17ac0:	subcs	r0, r0, r1, lsl #10
   17ac4:	cmp	r0, r1, lsl #9
   17ac8:	adc	r2, r2, r2
   17acc:	subcs	r0, r0, r1, lsl #9
   17ad0:	cmp	r0, r1, lsl #8
   17ad4:	adc	r2, r2, r2
   17ad8:	subcs	r0, r0, r1, lsl #8
   17adc:	cmp	r0, r1, lsl #7
   17ae0:	adc	r2, r2, r2
   17ae4:	subcs	r0, r0, r1, lsl #7
   17ae8:	cmp	r0, r1, lsl #6
   17aec:	adc	r2, r2, r2
   17af0:	subcs	r0, r0, r1, lsl #6
   17af4:	cmp	r0, r1, lsl #5
   17af8:	adc	r2, r2, r2
   17afc:	subcs	r0, r0, r1, lsl #5
   17b00:	cmp	r0, r1, lsl #4
   17b04:	adc	r2, r2, r2
   17b08:	subcs	r0, r0, r1, lsl #4
   17b0c:	cmp	r0, r1, lsl #3
   17b10:	adc	r2, r2, r2
   17b14:	subcs	r0, r0, r1, lsl #3
   17b18:	cmp	r0, r1, lsl #2
   17b1c:	adc	r2, r2, r2
   17b20:	subcs	r0, r0, r1, lsl #2
   17b24:	cmp	r0, r1, lsl #1
   17b28:	adc	r2, r2, r2
   17b2c:	subcs	r0, r0, r1, lsl #1
   17b30:	cmp	r0, r1
   17b34:	adc	r2, r2, r2
   17b38:	subcs	r0, r0, r1
   17b3c:	mov	r0, r2
   17b40:	bx	lr
   17b44:	moveq	r0, #1
   17b48:	movne	r0, #0
   17b4c:	bx	lr
   17b50:	clz	r2, r1
   17b54:	rsb	r2, r2, #31
   17b58:	lsr	r0, r0, r2
   17b5c:	bx	lr
   17b60:	cmp	r0, #0
   17b64:	mvnne	r0, #0
   17b68:	b	17bd4 <close_stdout@@Base+0x4a64>
   17b6c:	cmp	r1, #0
   17b70:	beq	17b60 <close_stdout@@Base+0x49f0>
   17b74:	push	{r0, r1, lr}
   17b78:	bl	17980 <close_stdout@@Base+0x4810>
   17b7c:	pop	{r1, r2, lr}
   17b80:	mul	r3, r2, r0
   17b84:	sub	r1, r1, r3
   17b88:	bx	lr
   17b8c:	cmp	r3, #0
   17b90:	cmpeq	r2, #0
   17b94:	bne	17bb8 <close_stdout@@Base+0x4a48>
   17b98:	cmp	r1, #0
   17b9c:	movlt	r1, #-2147483648	; 0x80000000
   17ba0:	movlt	r0, #0
   17ba4:	blt	17bb4 <close_stdout@@Base+0x4a44>
   17ba8:	cmpeq	r0, #0
   17bac:	mvnne	r1, #-2147483648	; 0x80000000
   17bb0:	mvnne	r0, #0
   17bb4:	b	17bd4 <close_stdout@@Base+0x4a64>
   17bb8:	sub	sp, sp, #8
   17bbc:	push	{sp, lr}
   17bc0:	bl	17be4 <close_stdout@@Base+0x4a74>
   17bc4:	ldr	lr, [sp, #4]
   17bc8:	add	sp, sp, #8
   17bcc:	pop	{r2, r3}
   17bd0:	bx	lr
   17bd4:	push	{r1, lr}
   17bd8:	mov	r0, #8
   17bdc:	bl	111e8 <raise@plt>
   17be0:	pop	{r1, pc}
   17be4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17be8:	mov	r8, r2
   17bec:	mov	r6, r0
   17bf0:	mov	r7, r1
   17bf4:	mov	sl, r3
   17bf8:	ldr	r9, [sp, #32]
   17bfc:	bl	17c5c <close_stdout@@Base+0x4aec>
   17c00:	umull	r4, r5, r8, r0
   17c04:	mul	r8, r8, r1
   17c08:	mla	r2, r0, sl, r8
   17c0c:	add	r5, r2, r5
   17c10:	subs	r4, r6, r4
   17c14:	sbc	r5, r7, r5
   17c18:	strd	r4, [r9]
   17c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c20:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   17c24:	mov	r8, r2
   17c28:	mov	r6, r0
   17c2c:	mov	r7, r1
   17c30:	mov	r5, r3
   17c34:	ldr	r9, [sp, #32]
   17c38:	bl	180e8 <close_stdout@@Base+0x4f78>
   17c3c:	mul	r3, r0, r5
   17c40:	umull	r4, r5, r0, r8
   17c44:	mla	r8, r8, r1, r3
   17c48:	add	r5, r8, r5
   17c4c:	subs	r4, r6, r4
   17c50:	sbc	r5, r7, r5
   17c54:	strd	r4, [r9]
   17c58:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   17c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c60:	rsbs	r4, r0, #0
   17c64:	rsc	r5, r1, #0
   17c68:	cmp	r1, #0
   17c6c:	mvn	r6, #0
   17c70:	sub	sp, sp, #12
   17c74:	movge	r4, r0
   17c78:	movge	r5, r1
   17c7c:	movge	r6, #0
   17c80:	cmp	r3, #0
   17c84:	blt	17ebc <close_stdout@@Base+0x4d4c>
   17c88:	cmp	r3, #0
   17c8c:	mov	sl, r4
   17c90:	mov	ip, r5
   17c94:	mov	r0, r2
   17c98:	mov	r1, r3
   17c9c:	mov	r8, r2
   17ca0:	mov	r7, r4
   17ca4:	mov	r9, r5
   17ca8:	bne	17da0 <close_stdout@@Base+0x4c30>
   17cac:	cmp	r2, r5
   17cb0:	bls	17ddc <close_stdout@@Base+0x4c6c>
   17cb4:	clz	r3, r2
   17cb8:	cmp	r3, #0
   17cbc:	rsbne	r2, r3, #32
   17cc0:	lslne	r8, r0, r3
   17cc4:	lsrne	r2, r4, r2
   17cc8:	lslne	r7, r4, r3
   17ccc:	orrne	r9, r2, r5, lsl r3
   17cd0:	lsr	r4, r8, #16
   17cd4:	uxth	sl, r8
   17cd8:	mov	r1, r4
   17cdc:	mov	r0, r9
   17ce0:	bl	17980 <close_stdout@@Base+0x4810>
   17ce4:	mov	r1, r4
   17ce8:	mov	fp, r0
   17cec:	mov	r0, r9
   17cf0:	bl	17b6c <close_stdout@@Base+0x49fc>
   17cf4:	mul	r0, sl, fp
   17cf8:	lsr	r2, r7, #16
   17cfc:	orr	r1, r2, r1, lsl #16
   17d00:	cmp	r0, r1
   17d04:	bls	17d28 <close_stdout@@Base+0x4bb8>
   17d08:	adds	r1, r1, r8
   17d0c:	sub	r3, fp, #1
   17d10:	bcs	17d24 <close_stdout@@Base+0x4bb4>
   17d14:	cmp	r0, r1
   17d18:	subhi	fp, fp, #2
   17d1c:	addhi	r1, r1, r8
   17d20:	bhi	17d28 <close_stdout@@Base+0x4bb8>
   17d24:	mov	fp, r3
   17d28:	rsb	r9, r0, r1
   17d2c:	mov	r1, r4
   17d30:	uxth	r7, r7
   17d34:	mov	r0, r9
   17d38:	bl	17980 <close_stdout@@Base+0x4810>
   17d3c:	mov	r1, r4
   17d40:	mov	r5, r0
   17d44:	mov	r0, r9
   17d48:	bl	17b6c <close_stdout@@Base+0x49fc>
   17d4c:	mul	sl, sl, r5
   17d50:	orr	r1, r7, r1, lsl #16
   17d54:	cmp	sl, r1
   17d58:	bls	17d78 <close_stdout@@Base+0x4c08>
   17d5c:	adds	r8, r1, r8
   17d60:	sub	r3, r5, #1
   17d64:	bcs	17d74 <close_stdout@@Base+0x4c04>
   17d68:	cmp	sl, r8
   17d6c:	subhi	r5, r5, #2
   17d70:	bhi	17d78 <close_stdout@@Base+0x4c08>
   17d74:	mov	r5, r3
   17d78:	orr	r3, r5, fp, lsl #16
   17d7c:	mov	r4, #0
   17d80:	cmp	r6, #0
   17d84:	mov	r0, r3
   17d88:	mov	r1, r4
   17d8c:	beq	17d98 <close_stdout@@Base+0x4c28>
   17d90:	rsbs	r0, r0, #0
   17d94:	rsc	r1, r1, #0
   17d98:	add	sp, sp, #12
   17d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17da0:	cmp	r3, r5
   17da4:	movhi	r4, #0
   17da8:	movhi	r3, r4
   17dac:	bhi	17d80 <close_stdout@@Base+0x4c10>
   17db0:	clz	r5, r1
   17db4:	cmp	r5, #0
   17db8:	bne	17fa8 <close_stdout@@Base+0x4e38>
   17dbc:	cmp	r1, ip
   17dc0:	cmpcs	r2, sl
   17dc4:	movhi	r4, #0
   17dc8:	movls	r4, #1
   17dcc:	movls	r3, #1
   17dd0:	movls	r4, r5
   17dd4:	movhi	r3, r4
   17dd8:	b	17d80 <close_stdout@@Base+0x4c10>
   17ddc:	cmp	r2, #0
   17de0:	bne	17df4 <close_stdout@@Base+0x4c84>
   17de4:	mov	r1, r2
   17de8:	mov	r0, #1
   17dec:	bl	17980 <close_stdout@@Base+0x4810>
   17df0:	mov	r8, r0
   17df4:	clz	r3, r8
   17df8:	cmp	r3, #0
   17dfc:	bne	17ecc <close_stdout@@Base+0x4d5c>
   17e00:	rsb	r9, r8, r9
   17e04:	lsr	r5, r8, #16
   17e08:	uxth	sl, r8
   17e0c:	mov	r4, #1
   17e10:	mov	r1, r5
   17e14:	mov	r0, r9
   17e18:	bl	17980 <close_stdout@@Base+0x4810>
   17e1c:	mov	r1, r5
   17e20:	mov	fp, r0
   17e24:	mov	r0, r9
   17e28:	bl	17b6c <close_stdout@@Base+0x49fc>
   17e2c:	mul	r0, sl, fp
   17e30:	lsr	r2, r7, #16
   17e34:	orr	r1, r2, r1, lsl #16
   17e38:	cmp	r0, r1
   17e3c:	bls	17e5c <close_stdout@@Base+0x4cec>
   17e40:	adds	r1, r1, r8
   17e44:	sub	r3, fp, #1
   17e48:	bcs	180c8 <close_stdout@@Base+0x4f58>
   17e4c:	cmp	r0, r1
   17e50:	subhi	fp, fp, #2
   17e54:	addhi	r1, r1, r8
   17e58:	bls	180c8 <close_stdout@@Base+0x4f58>
   17e5c:	rsb	r2, r0, r1
   17e60:	mov	r1, r5
   17e64:	str	r2, [sp]
   17e68:	uxth	r7, r7
   17e6c:	mov	r0, r2
   17e70:	bl	17980 <close_stdout@@Base+0x4810>
   17e74:	ldr	r2, [sp]
   17e78:	mov	r1, r5
   17e7c:	mov	r9, r0
   17e80:	mov	r0, r2
   17e84:	bl	17b6c <close_stdout@@Base+0x49fc>
   17e88:	mul	sl, sl, r9
   17e8c:	orr	r1, r7, r1, lsl #16
   17e90:	cmp	sl, r1
   17e94:	bls	17eb4 <close_stdout@@Base+0x4d44>
   17e98:	adds	r8, r1, r8
   17e9c:	sub	r3, r9, #1
   17ea0:	bcs	17eb0 <close_stdout@@Base+0x4d40>
   17ea4:	cmp	sl, r8
   17ea8:	subhi	r9, r9, #2
   17eac:	bhi	17eb4 <close_stdout@@Base+0x4d44>
   17eb0:	mov	r9, r3
   17eb4:	orr	r3, r9, fp, lsl #16
   17eb8:	b	17d80 <close_stdout@@Base+0x4c10>
   17ebc:	mvn	r6, r6
   17ec0:	rsbs	r2, r2, #0
   17ec4:	rsc	r3, r3, #0
   17ec8:	b	17c88 <close_stdout@@Base+0x4b18>
   17ecc:	lsl	r8, r8, r3
   17ed0:	rsb	fp, r3, #32
   17ed4:	lsr	r4, r9, fp
   17ed8:	lsr	fp, r7, fp
   17edc:	lsr	r5, r8, #16
   17ee0:	orr	fp, fp, r9, lsl r3
   17ee4:	mov	r0, r4
   17ee8:	lsl	r7, r7, r3
   17eec:	mov	r1, r5
   17ef0:	uxth	sl, r8
   17ef4:	bl	17980 <close_stdout@@Base+0x4810>
   17ef8:	mov	r1, r5
   17efc:	mov	r3, r0
   17f00:	mov	r0, r4
   17f04:	str	r3, [sp]
   17f08:	bl	17b6c <close_stdout@@Base+0x49fc>
   17f0c:	ldr	r3, [sp]
   17f10:	lsr	r2, fp, #16
   17f14:	mul	r0, sl, r3
   17f18:	orr	r1, r2, r1, lsl #16
   17f1c:	cmp	r0, r1
   17f20:	bls	17f40 <close_stdout@@Base+0x4dd0>
   17f24:	adds	r1, r1, r8
   17f28:	sub	r2, r3, #1
   17f2c:	bcs	180e0 <close_stdout@@Base+0x4f70>
   17f30:	cmp	r0, r1
   17f34:	subhi	r3, r3, #2
   17f38:	addhi	r1, r1, r8
   17f3c:	bls	180e0 <close_stdout@@Base+0x4f70>
   17f40:	rsb	r9, r0, r1
   17f44:	mov	r1, r5
   17f48:	str	r3, [sp]
   17f4c:	uxth	fp, fp
   17f50:	mov	r0, r9
   17f54:	bl	17980 <close_stdout@@Base+0x4810>
   17f58:	mov	r1, r5
   17f5c:	mov	r4, r0
   17f60:	mov	r0, r9
   17f64:	bl	17b6c <close_stdout@@Base+0x49fc>
   17f68:	mul	r9, sl, r4
   17f6c:	ldr	r3, [sp]
   17f70:	orr	r1, fp, r1, lsl #16
   17f74:	cmp	r9, r1
   17f78:	bls	17f9c <close_stdout@@Base+0x4e2c>
   17f7c:	adds	r1, r1, r8
   17f80:	sub	r2, r4, #1
   17f84:	bcs	17f98 <close_stdout@@Base+0x4e28>
   17f88:	cmp	r9, r1
   17f8c:	subhi	r4, r4, #2
   17f90:	addhi	r1, r1, r8
   17f94:	bhi	17f9c <close_stdout@@Base+0x4e2c>
   17f98:	mov	r4, r2
   17f9c:	rsb	r9, r9, r1
   17fa0:	orr	r4, r4, r3, lsl #16
   17fa4:	b	17e10 <close_stdout@@Base+0x4ca0>
   17fa8:	rsb	sl, r5, #32
   17fac:	lsl	r3, r2, r5
   17fb0:	lsr	r0, r2, sl
   17fb4:	lsr	r2, ip, sl
   17fb8:	orr	r4, r0, r1, lsl r5
   17fbc:	lsr	sl, r7, sl
   17fc0:	mov	r0, r2
   17fc4:	orr	sl, sl, ip, lsl r5
   17fc8:	lsr	r9, r4, #16
   17fcc:	str	r3, [sp, #4]
   17fd0:	str	r2, [sp]
   17fd4:	uxth	fp, r4
   17fd8:	mov	r1, r9
   17fdc:	bl	17980 <close_stdout@@Base+0x4810>
   17fe0:	ldr	r2, [sp]
   17fe4:	mov	r1, r9
   17fe8:	mov	r8, r0
   17fec:	mov	r0, r2
   17ff0:	bl	17b6c <close_stdout@@Base+0x49fc>
   17ff4:	mul	r0, fp, r8
   17ff8:	lsr	r2, sl, #16
   17ffc:	orr	r1, r2, r1, lsl #16
   18000:	cmp	r0, r1
   18004:	bls	18024 <close_stdout@@Base+0x4eb4>
   18008:	adds	r1, r1, r4
   1800c:	sub	r2, r8, #1
   18010:	bcs	180d8 <close_stdout@@Base+0x4f68>
   18014:	cmp	r0, r1
   18018:	subhi	r8, r8, #2
   1801c:	addhi	r1, r1, r4
   18020:	bls	180d8 <close_stdout@@Base+0x4f68>
   18024:	rsb	ip, r0, r1
   18028:	mov	r1, r9
   1802c:	str	ip, [sp]
   18030:	mov	r0, ip
   18034:	bl	17980 <close_stdout@@Base+0x4810>
   18038:	ldr	ip, [sp]
   1803c:	mov	r1, r9
   18040:	mov	r2, r0
   18044:	mov	r0, ip
   18048:	str	r2, [sp]
   1804c:	bl	17b6c <close_stdout@@Base+0x49fc>
   18050:	ldr	r2, [sp]
   18054:	uxth	ip, sl
   18058:	mul	fp, fp, r2
   1805c:	orr	ip, ip, r1, lsl #16
   18060:	cmp	fp, ip
   18064:	bls	18084 <close_stdout@@Base+0x4f14>
   18068:	adds	ip, ip, r4
   1806c:	sub	r1, r2, #1
   18070:	bcs	180d0 <close_stdout@@Base+0x4f60>
   18074:	cmp	fp, ip
   18078:	subhi	r2, r2, #2
   1807c:	addhi	ip, ip, r4
   18080:	bls	180d0 <close_stdout@@Base+0x4f60>
   18084:	ldr	r0, [sp, #4]
   18088:	orr	r1, r2, r8, lsl #16
   1808c:	rsb	fp, fp, ip
   18090:	umull	r2, r3, r1, r0
   18094:	cmp	fp, r3
   18098:	bcc	180bc <close_stdout@@Base+0x4f4c>
   1809c:	movne	r4, #0
   180a0:	moveq	r4, #1
   180a4:	cmp	r2, r7, lsl r5
   180a8:	movls	r4, #0
   180ac:	andhi	r4, r4, #1
   180b0:	cmp	r4, #0
   180b4:	moveq	r3, r1
   180b8:	beq	17d80 <close_stdout@@Base+0x4c10>
   180bc:	sub	r3, r1, #1
   180c0:	mov	r4, #0
   180c4:	b	17d80 <close_stdout@@Base+0x4c10>
   180c8:	mov	fp, r3
   180cc:	b	17e5c <close_stdout@@Base+0x4cec>
   180d0:	mov	r2, r1
   180d4:	b	18084 <close_stdout@@Base+0x4f14>
   180d8:	mov	r8, r2
   180dc:	b	18024 <close_stdout@@Base+0x4eb4>
   180e0:	mov	r3, r2
   180e4:	b	17f40 <close_stdout@@Base+0x4dd0>
   180e8:	cmp	r3, #0
   180ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   180f0:	mov	r6, r0
   180f4:	sub	sp, sp, #12
   180f8:	mov	r5, r1
   180fc:	mov	r7, r0
   18100:	mov	r4, r2
   18104:	mov	r8, r1
   18108:	bne	181e8 <close_stdout@@Base+0x5078>
   1810c:	cmp	r2, r1
   18110:	bls	18224 <close_stdout@@Base+0x50b4>
   18114:	clz	r3, r2
   18118:	cmp	r3, #0
   1811c:	rsbne	r8, r3, #32
   18120:	lslne	r4, r2, r3
   18124:	lsrne	r8, r0, r8
   18128:	lslne	r7, r0, r3
   1812c:	orrne	r8, r8, r1, lsl r3
   18130:	lsr	r5, r4, #16
   18134:	uxth	sl, r4
   18138:	mov	r1, r5
   1813c:	mov	r0, r8
   18140:	bl	17980 <close_stdout@@Base+0x4810>
   18144:	mov	r1, r5
   18148:	mov	r9, r0
   1814c:	mov	r0, r8
   18150:	bl	17b6c <close_stdout@@Base+0x49fc>
   18154:	mul	r0, sl, r9
   18158:	lsr	r3, r7, #16
   1815c:	orr	r1, r3, r1, lsl #16
   18160:	cmp	r0, r1
   18164:	bls	18188 <close_stdout@@Base+0x5018>
   18168:	adds	r1, r1, r4
   1816c:	sub	r2, r9, #1
   18170:	bcs	18184 <close_stdout@@Base+0x5014>
   18174:	cmp	r0, r1
   18178:	subhi	r9, r9, #2
   1817c:	addhi	r1, r1, r4
   18180:	bhi	18188 <close_stdout@@Base+0x5018>
   18184:	mov	r9, r2
   18188:	rsb	r8, r0, r1
   1818c:	mov	r1, r5
   18190:	uxth	r7, r7
   18194:	mov	r0, r8
   18198:	bl	17980 <close_stdout@@Base+0x4810>
   1819c:	mov	r1, r5
   181a0:	mov	r6, r0
   181a4:	mov	r0, r8
   181a8:	bl	17b6c <close_stdout@@Base+0x49fc>
   181ac:	mul	sl, sl, r6
   181b0:	orr	r1, r7, r1, lsl #16
   181b4:	cmp	sl, r1
   181b8:	bls	181d4 <close_stdout@@Base+0x5064>
   181bc:	adds	r4, r1, r4
   181c0:	sub	r3, r6, #1
   181c4:	bcs	184d0 <close_stdout@@Base+0x5360>
   181c8:	cmp	sl, r4
   181cc:	subhi	r6, r6, #2
   181d0:	bls	184d0 <close_stdout@@Base+0x5360>
   181d4:	orr	r0, r6, r9, lsl #16
   181d8:	mov	r6, #0
   181dc:	mov	r1, r6
   181e0:	add	sp, sp, #12
   181e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181e8:	cmp	r3, r1
   181ec:	movhi	r6, #0
   181f0:	movhi	r0, r6
   181f4:	bhi	181dc <close_stdout@@Base+0x506c>
   181f8:	clz	r7, r3
   181fc:	cmp	r7, #0
   18200:	bne	18300 <close_stdout@@Base+0x5190>
   18204:	cmp	r3, r1
   18208:	cmpcs	r2, r6
   1820c:	movhi	r6, #0
   18210:	movls	r6, #1
   18214:	movls	r0, #1
   18218:	movls	r6, r7
   1821c:	movhi	r0, r6
   18220:	b	181dc <close_stdout@@Base+0x506c>
   18224:	cmp	r2, #0
   18228:	bne	1823c <close_stdout@@Base+0x50cc>
   1822c:	mov	r1, r2
   18230:	mov	r0, #1
   18234:	bl	17980 <close_stdout@@Base+0x4810>
   18238:	mov	r4, r0
   1823c:	clz	r3, r4
   18240:	cmp	r3, #0
   18244:	bne	183fc <close_stdout@@Base+0x528c>
   18248:	rsb	r5, r4, r5
   1824c:	lsr	r8, r4, #16
   18250:	uxth	sl, r4
   18254:	mov	r6, #1
   18258:	mov	r1, r8
   1825c:	mov	r0, r5
   18260:	bl	17980 <close_stdout@@Base+0x4810>
   18264:	mov	r1, r8
   18268:	mov	r9, r0
   1826c:	mov	r0, r5
   18270:	bl	17b6c <close_stdout@@Base+0x49fc>
   18274:	mul	r0, sl, r9
   18278:	lsr	r3, r7, #16
   1827c:	orr	r1, r3, r1, lsl #16
   18280:	cmp	r0, r1
   18284:	bls	182a4 <close_stdout@@Base+0x5134>
   18288:	adds	r1, r1, r4
   1828c:	sub	r2, r9, #1
   18290:	bcs	184d8 <close_stdout@@Base+0x5368>
   18294:	cmp	r0, r1
   18298:	subhi	r9, r9, #2
   1829c:	addhi	r1, r1, r4
   182a0:	bls	184d8 <close_stdout@@Base+0x5368>
   182a4:	rsb	fp, r0, r1
   182a8:	mov	r1, r8
   182ac:	uxth	r7, r7
   182b0:	mov	r0, fp
   182b4:	bl	17980 <close_stdout@@Base+0x4810>
   182b8:	mov	r1, r8
   182bc:	mov	r5, r0
   182c0:	mov	r0, fp
   182c4:	bl	17b6c <close_stdout@@Base+0x49fc>
   182c8:	mul	sl, sl, r5
   182cc:	orr	r1, r7, r1, lsl #16
   182d0:	cmp	sl, r1
   182d4:	bls	182f0 <close_stdout@@Base+0x5180>
   182d8:	adds	r4, r1, r4
   182dc:	sub	r3, r5, #1
   182e0:	bcs	184e0 <close_stdout@@Base+0x5370>
   182e4:	cmp	sl, r4
   182e8:	subhi	r5, r5, #2
   182ec:	bls	184e0 <close_stdout@@Base+0x5370>
   182f0:	orr	r0, r5, r9, lsl #16
   182f4:	mov	r1, r6
   182f8:	add	sp, sp, #12
   182fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18300:	rsb	r1, r7, #32
   18304:	lsl	r0, r2, r7
   18308:	lsr	r2, r2, r1
   1830c:	lsr	fp, r5, r1
   18310:	orr	r8, r2, r3, lsl r7
   18314:	lsr	r1, r6, r1
   18318:	str	r0, [sp, #4]
   1831c:	orr	r5, r1, r5, lsl r7
   18320:	lsr	r9, r8, #16
   18324:	mov	r0, fp
   18328:	uxth	sl, r8
   1832c:	mov	r1, r9
   18330:	bl	17980 <close_stdout@@Base+0x4810>
   18334:	mov	r1, r9
   18338:	mov	r4, r0
   1833c:	mov	r0, fp
   18340:	bl	17b6c <close_stdout@@Base+0x49fc>
   18344:	mul	r0, sl, r4
   18348:	lsr	ip, r5, #16
   1834c:	orr	r1, ip, r1, lsl #16
   18350:	cmp	r0, r1
   18354:	bls	18368 <close_stdout@@Base+0x51f8>
   18358:	adds	r1, r1, r8
   1835c:	sub	r2, r4, #1
   18360:	bcc	184fc <close_stdout@@Base+0x538c>
   18364:	mov	r4, r2
   18368:	rsb	ip, r0, r1
   1836c:	mov	r1, r9
   18370:	str	ip, [sp]
   18374:	uxth	r5, r5
   18378:	mov	r0, ip
   1837c:	bl	17980 <close_stdout@@Base+0x4810>
   18380:	ldr	ip, [sp]
   18384:	mov	r1, r9
   18388:	mov	fp, r0
   1838c:	mov	r0, ip
   18390:	bl	17b6c <close_stdout@@Base+0x49fc>
   18394:	mul	sl, sl, fp
   18398:	orr	r1, r5, r1, lsl #16
   1839c:	cmp	sl, r1
   183a0:	bls	183b4 <close_stdout@@Base+0x5244>
   183a4:	adds	r1, r1, r8
   183a8:	sub	r2, fp, #1
   183ac:	bcc	184e8 <close_stdout@@Base+0x5378>
   183b0:	mov	fp, r2
   183b4:	ldr	r3, [sp, #4]
   183b8:	orr	r0, fp, r4, lsl #16
   183bc:	rsb	sl, sl, r1
   183c0:	umull	r4, r5, r0, r3
   183c4:	cmp	sl, r5
   183c8:	bcc	183e8 <close_stdout@@Base+0x5278>
   183cc:	movne	r3, #0
   183d0:	moveq	r3, #1
   183d4:	cmp	r4, r6, lsl r7
   183d8:	movls	r6, #0
   183dc:	andhi	r6, r3, #1
   183e0:	cmp	r6, #0
   183e4:	beq	181dc <close_stdout@@Base+0x506c>
   183e8:	mov	r6, #0
   183ec:	sub	r0, r0, #1
   183f0:	mov	r1, r6
   183f4:	add	sp, sp, #12
   183f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183fc:	lsl	r4, r4, r3
   18400:	rsb	r9, r3, #32
   18404:	lsr	r2, r5, r9
   18408:	lsr	r9, r6, r9
   1840c:	lsr	r8, r4, #16
   18410:	orr	r9, r9, r5, lsl r3
   18414:	mov	r0, r2
   18418:	lsl	r7, r6, r3
   1841c:	mov	r1, r8
   18420:	str	r2, [sp]
   18424:	bl	17980 <close_stdout@@Base+0x4810>
   18428:	ldr	r2, [sp]
   1842c:	mov	r1, r8
   18430:	uxth	sl, r4
   18434:	mov	fp, r0
   18438:	mov	r0, r2
   1843c:	bl	17b6c <close_stdout@@Base+0x49fc>
   18440:	mul	r0, sl, fp
   18444:	lsr	r3, r9, #16
   18448:	orr	r1, r3, r1, lsl #16
   1844c:	cmp	r0, r1
   18450:	bls	18470 <close_stdout@@Base+0x5300>
   18454:	adds	r1, r1, r4
   18458:	sub	r3, fp, #1
   1845c:	bcs	18510 <close_stdout@@Base+0x53a0>
   18460:	cmp	r0, r1
   18464:	subhi	fp, fp, #2
   18468:	addhi	r1, r1, r4
   1846c:	bls	18510 <close_stdout@@Base+0x53a0>
   18470:	rsb	r5, r0, r1
   18474:	mov	r1, r8
   18478:	uxth	r9, r9
   1847c:	mov	r0, r5
   18480:	bl	17980 <close_stdout@@Base+0x4810>
   18484:	mov	r1, r8
   18488:	mov	r6, r0
   1848c:	mov	r0, r5
   18490:	bl	17b6c <close_stdout@@Base+0x49fc>
   18494:	mul	r5, sl, r6
   18498:	orr	r1, r9, r1, lsl #16
   1849c:	cmp	r5, r1
   184a0:	bls	184c4 <close_stdout@@Base+0x5354>
   184a4:	adds	r1, r1, r4
   184a8:	sub	r3, r6, #1
   184ac:	bcs	184c0 <close_stdout@@Base+0x5350>
   184b0:	cmp	r5, r1
   184b4:	subhi	r6, r6, #2
   184b8:	addhi	r1, r1, r4
   184bc:	bhi	184c4 <close_stdout@@Base+0x5354>
   184c0:	mov	r6, r3
   184c4:	rsb	r5, r5, r1
   184c8:	orr	r6, r6, fp, lsl #16
   184cc:	b	18258 <close_stdout@@Base+0x50e8>
   184d0:	mov	r6, r3
   184d4:	b	181d4 <close_stdout@@Base+0x5064>
   184d8:	mov	r9, r2
   184dc:	b	182a4 <close_stdout@@Base+0x5134>
   184e0:	mov	r5, r3
   184e4:	b	182f0 <close_stdout@@Base+0x5180>
   184e8:	cmp	sl, r1
   184ec:	subhi	fp, fp, #2
   184f0:	addhi	r1, r1, r8
   184f4:	bhi	183b4 <close_stdout@@Base+0x5244>
   184f8:	b	183b0 <close_stdout@@Base+0x5240>
   184fc:	cmp	r0, r1
   18500:	subhi	r4, r4, #2
   18504:	addhi	r1, r1, r8
   18508:	bhi	18368 <close_stdout@@Base+0x51f8>
   1850c:	b	18364 <close_stdout@@Base+0x51f4>
   18510:	mov	fp, r3
   18514:	b	18470 <close_stdout@@Base+0x5300>
   18518:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1851c:	mov	r7, r0
   18520:	ldr	r6, [pc, #76]	; 18574 <close_stdout@@Base+0x5404>
   18524:	mov	r8, r1
   18528:	ldr	r5, [pc, #72]	; 18578 <close_stdout@@Base+0x5408>
   1852c:	mov	r9, r2
   18530:	add	r6, pc, r6
   18534:	bl	111a4 <fdopen@plt-0x20>
   18538:	add	r5, pc, r5
   1853c:	rsb	r6, r5, r6
   18540:	asrs	r6, r6, #2
   18544:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   18548:	sub	r5, r5, #4
   1854c:	mov	r4, #0
   18550:	add	r4, r4, #1
   18554:	ldr	r3, [r5, #4]!
   18558:	mov	r0, r7
   1855c:	mov	r1, r8
   18560:	mov	r2, r9
   18564:	blx	r3
   18568:	cmp	r4, r6
   1856c:	bne	18550 <close_stdout@@Base+0x53e0>
   18570:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   18574:	andeq	r1, r1, r4, lsl #17
   18578:	andeq	r1, r1, r8, ror r8
   1857c:	bx	lr
   18580:	ldr	r3, [pc, #28]	; 185a4 <close_stdout@@Base+0x5434>
   18584:	mov	r1, #0
   18588:	ldr	r2, [pc, #24]	; 185a8 <close_stdout@@Base+0x5438>
   1858c:	add	r3, pc, r3
   18590:	ldr	r3, [r3, r2]
   18594:	cmp	r3, #0
   18598:	ldrne	r2, [r3]
   1859c:	moveq	r2, r3
   185a0:	b	113ec <__cxa_atexit@plt>
   185a4:	andeq	r1, r1, ip, ror #20
   185a8:	andeq	r0, r0, r8, asr #2

Disassembly of section .fini:

000185ac <.fini>:
   185ac:	push	{r3, lr}
   185b0:	pop	{r3, pc}
