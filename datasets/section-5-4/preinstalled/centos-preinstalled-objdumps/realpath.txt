
centos-preinstalled/realpath:     file format elf32-littlearm


Disassembly of section .init:

00011234 <.init>:
   11234:	push	{r3, lr}
   11238:	bl	11c0c <__assert_fail@plt+0x670>
   1123c:	pop	{r3, pc}

Disassembly of section .plt:

00011240 <fdopen@plt-0x14>:
   11240:	push	{lr}		; (str lr, [sp, #-4]!)
   11244:	ldr	lr, [pc, #4]	; 11250 <fdopen@plt-0x4>
   11248:	add	lr, pc, lr
   1124c:	ldr	pc, [lr, #8]!
   11250:			; <UNDEFINED> instruction: 0x0001adb0

00011254 <fdopen@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #106496	; 0x1a000
   1125c:	ldr	pc, [ip, #3504]!	; 0xdb0

00011260 <calloc@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #106496	; 0x1a000
   11268:	ldr	pc, [ip, #3496]!	; 0xda8

0001126c <fputs_unlocked@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #106496	; 0x1a000
   11274:	ldr	pc, [ip, #3488]!	; 0xda0

00011278 <raise@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #106496	; 0x1a000
   11280:	ldr	pc, [ip, #3480]!	; 0xd98

00011284 <iconv_close@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #106496	; 0x1a000
   1128c:	ldr	pc, [ip, #3472]!	; 0xd90

00011290 <iconv@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #106496	; 0x1a000
   11298:	ldr	pc, [ip, #3464]!	; 0xd88

0001129c <strcmp@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #106496	; 0x1a000
   112a4:	ldr	pc, [ip, #3456]!	; 0xd80

000112a8 <fflush@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #106496	; 0x1a000
   112b0:	ldr	pc, [ip, #3448]!	; 0xd78

000112b4 <wcwidth@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #106496	; 0x1a000
   112bc:	ldr	pc, [ip, #3440]!	; 0xd70

000112c0 <memmove@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #106496	; 0x1a000
   112c8:	ldr	pc, [ip, #3432]!	; 0xd68

000112cc <free@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #106496	; 0x1a000
   112d4:	ldr	pc, [ip, #3424]!	; 0xd60

000112d8 <_exit@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #106496	; 0x1a000
   112e0:	ldr	pc, [ip, #3416]!	; 0xd58

000112e4 <memcpy@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #106496	; 0x1a000
   112ec:	ldr	pc, [ip, #3408]!	; 0xd50

000112f0 <mbsinit@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #106496	; 0x1a000
   112f8:	ldr	pc, [ip, #3400]!	; 0xd48

000112fc <memcmp@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #106496	; 0x1a000
   11304:	ldr	pc, [ip, #3392]!	; 0xd40

00011308 <dcgettext@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #106496	; 0x1a000
   11310:	ldr	pc, [ip, #3384]!	; 0xd38

00011314 <__stack_chk_fail@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #106496	; 0x1a000
   1131c:	ldr	pc, [ip, #3376]!	; 0xd30

00011320 <realloc@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #106496	; 0x1a000
   11328:	ldr	pc, [ip, #3368]!	; 0xd28

0001132c <textdomain@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #106496	; 0x1a000
   11334:	ldr	pc, [ip, #3360]!	; 0xd20

00011338 <iswcntrl@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #106496	; 0x1a000
   11340:	ldr	pc, [ip, #3352]!	; 0xd18

00011344 <__rawmemchr@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #106496	; 0x1a000
   1134c:	ldr	pc, [ip, #3344]!	; 0xd10

00011350 <iswprint@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #106496	; 0x1a000
   11358:	ldr	pc, [ip, #3336]!	; 0xd08

0001135c <readlink@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #106496	; 0x1a000
   11364:	ldr	pc, [ip, #3328]!	; 0xd00

00011368 <fwrite@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #106496	; 0x1a000
   11370:	ldr	pc, [ip, #3320]!	; 0xcf8

00011374 <lseek64@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #106496	; 0x1a000
   1137c:	ldr	pc, [ip, #3312]!	; 0xcf0

00011380 <__ctype_get_mb_cur_max@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #106496	; 0x1a000
   11388:	ldr	pc, [ip, #3304]!	; 0xce8

0001138c <strcpy@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #106496	; 0x1a000
   11394:	ldr	pc, [ip, #3296]!	; 0xce0

00011398 <__fpending@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #106496	; 0x1a000
   113a0:	ldr	pc, [ip, #3288]!	; 0xcd8

000113a4 <mbrtowc@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #106496	; 0x1a000
   113ac:	ldr	pc, [ip, #3280]!	; 0xcd0

000113b0 <error@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #106496	; 0x1a000
   113b8:	ldr	pc, [ip, #3272]!	; 0xcc8

000113bc <open64@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #106496	; 0x1a000
   113c4:	ldr	pc, [ip, #3264]!	; 0xcc0

000113c8 <getenv@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #106496	; 0x1a000
   113d0:	ldr	pc, [ip, #3256]!	; 0xcb8

000113d4 <malloc@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #106496	; 0x1a000
   113dc:	ldr	pc, [ip, #3248]!	; 0xcb0

000113e0 <iconv_open@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #106496	; 0x1a000
   113e8:	ldr	pc, [ip, #3240]!	; 0xca8

000113ec <__libc_start_main@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #106496	; 0x1a000
   113f4:	ldr	pc, [ip, #3232]!	; 0xca0

000113f8 <__freading@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #106496	; 0x1a000
   11400:	ldr	pc, [ip, #3224]!	; 0xc98

00011404 <__gmon_start__@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #106496	; 0x1a000
   1140c:	ldr	pc, [ip, #3216]!	; 0xc90

00011410 <getopt_long@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #106496	; 0x1a000
   11418:	ldr	pc, [ip, #3208]!	; 0xc88

0001141c <__ctype_b_loc@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #106496	; 0x1a000
   11424:	ldr	pc, [ip, #3200]!	; 0xc80

00011428 <getcwd@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #106496	; 0x1a000
   11430:	ldr	pc, [ip, #3192]!	; 0xc78

00011434 <exit@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #106496	; 0x1a000
   1143c:	ldr	pc, [ip, #3184]!	; 0xc70

00011440 <iswspace@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #106496	; 0x1a000
   11448:	ldr	pc, [ip, #3176]!	; 0xc68

0001144c <strlen@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #106496	; 0x1a000
   11454:	ldr	pc, [ip, #3168]!	; 0xc60

00011458 <strchr@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #106496	; 0x1a000
   11460:	ldr	pc, [ip, #3160]!	; 0xc58

00011464 <ungetc@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #106496	; 0x1a000
   1146c:	ldr	pc, [ip, #3152]!	; 0xc50

00011470 <__errno_location@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #106496	; 0x1a000
   11478:	ldr	pc, [ip, #3144]!	; 0xc48

0001147c <iswalnum@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #106496	; 0x1a000
   11484:	ldr	pc, [ip, #3136]!	; 0xc40

00011488 <__sprintf_chk@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #106496	; 0x1a000
   11490:	ldr	pc, [ip, #3128]!	; 0xc38

00011494 <__cxa_atexit@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #106496	; 0x1a000
   1149c:	ldr	pc, [ip, #3120]!	; 0xc30

000114a0 <__strdup@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #106496	; 0x1a000
   114a8:	ldr	pc, [ip, #3112]!	; 0xc28

000114ac <memset@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #106496	; 0x1a000
   114b4:	ldr	pc, [ip, #3104]!	; 0xc20

000114b8 <fscanf@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #106496	; 0x1a000
   114c0:	ldr	pc, [ip, #3096]!	; 0xc18

000114c4 <__printf_chk@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #106496	; 0x1a000
   114cc:	ldr	pc, [ip, #3088]!	; 0xc10

000114d0 <fileno@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #106496	; 0x1a000
   114d8:	ldr	pc, [ip, #3080]!	; 0xc08

000114dc <__fprintf_chk@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #106496	; 0x1a000
   114e4:	ldr	pc, [ip, #3072]!	; 0xc00

000114e8 <memchr@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #106496	; 0x1a000
   114f0:	ldr	pc, [ip, #3064]!	; 0xbf8

000114f4 <fclose@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #106496	; 0x1a000
   114fc:	ldr	pc, [ip, #3056]!	; 0xbf0

00011500 <strnlen@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #106496	; 0x1a000
   11508:	ldr	pc, [ip, #3048]!	; 0xbe8

0001150c <fseeko64@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #106496	; 0x1a000
   11514:	ldr	pc, [ip, #3040]!	; 0xbe0

00011518 <__uflow@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #106496	; 0x1a000
   11520:	ldr	pc, [ip, #3032]!	; 0xbd8

00011524 <__overflow@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #106496	; 0x1a000
   1152c:	ldr	pc, [ip, #3024]!	; 0xbd0

00011530 <setlocale@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #106496	; 0x1a000
   11538:	ldr	pc, [ip, #3016]!	; 0xbc8

0001153c <strrchr@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #106496	; 0x1a000
   11544:	ldr	pc, [ip, #3008]!	; 0xbc0

00011548 <nl_langinfo@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #106496	; 0x1a000
   11550:	ldr	pc, [ip, #3000]!	; 0xbb8

00011554 <bindtextdomain@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #106496	; 0x1a000
   1155c:	ldr	pc, [ip, #2992]!	; 0xbb0

00011560 <__xstat64@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #106496	; 0x1a000
   11568:	ldr	pc, [ip, #2984]!	; 0xba8

0001156c <strncmp@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #106496	; 0x1a000
   11574:	ldr	pc, [ip, #2976]!	; 0xba0

00011578 <abort@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #106496	; 0x1a000
   11580:	ldr	pc, [ip, #2968]!	; 0xb98

00011584 <close@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #106496	; 0x1a000
   1158c:	ldr	pc, [ip, #2960]!	; 0xb90

00011590 <__lxstat64@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #106496	; 0x1a000
   11598:	ldr	pc, [ip, #2952]!	; 0xb88

0001159c <__assert_fail@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #106496	; 0x1a000
   115a4:	ldr	pc, [ip, #2944]!	; 0xb80

Disassembly of section .text:

000115a8 <close_stdout@@Base-0x1428>:
   115a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115ac:	mov	r5, r0
   115b0:	sub	sp, sp, #44	; 0x2c
   115b4:	ldr	r0, [r1]
   115b8:	mov	r4, r1
   115bc:	bl	13e48 <triple_free@@Base+0x1c>
   115c0:	ldr	r1, [pc, #1412]	; 11b4c <__assert_fail@plt+0x5b0>
   115c4:	mov	r0, #6
   115c8:	ldr	r6, [pc, #1408]	; 11b50 <__assert_fail@plt+0x5b4>
   115cc:	mov	r9, #0
   115d0:	add	r1, pc, r1
   115d4:	ldr	r8, [pc, #1400]	; 11b54 <__assert_fail@plt+0x5b8>
   115d8:	bl	11530 <setlocale@plt>
   115dc:	add	r6, pc, r6
   115e0:	ldr	r1, [pc, #1392]	; 11b58 <__assert_fail@plt+0x5bc>
   115e4:	add	r8, pc, r8
   115e8:	mov	r0, r6
   115ec:	ldr	r7, [pc, #1384]	; 11b5c <__assert_fail@plt+0x5c0>
   115f0:	add	r1, pc, r1
   115f4:	mov	sl, r9
   115f8:	bl	11554 <bindtextdomain@plt>
   115fc:	mov	r0, r6
   11600:	bl	1132c <textdomain@plt>
   11604:	ldr	r3, [pc, #1364]	; 11b60 <__assert_fail@plt+0x5c4>
   11608:	ldr	r2, [pc, #1364]	; 11b64 <__assert_fail@plt+0x5c8>
   1160c:	add	r7, pc, r7
   11610:	mov	r6, #1
   11614:	add	r2, pc, r2
   11618:	str	r2, [sp, #20]
   1161c:	ldr	r0, [r8, r3]
   11620:	ldr	r3, [pc, #1344]	; 11b68 <__assert_fail@plt+0x5cc>
   11624:	ldr	r2, [pc, #1344]	; 11b6c <__assert_fail@plt+0x5d0>
   11628:	add	r3, pc, r3
   1162c:	str	r3, [sp, #24]
   11630:	ldr	r3, [pc, #1336]	; 11b70 <__assert_fail@plt+0x5d4>
   11634:	add	r2, pc, r2
   11638:	str	r2, [sp, #28]
   1163c:	add	r3, pc, r3
   11640:	str	r3, [sp, #32]
   11644:	bl	1a8bc <triple_free@@Base+0x6a90>
   11648:	ldr	r2, [pc, #1316]	; 11b74 <__assert_fail@plt+0x5d8>
   1164c:	add	r2, pc, r2
   11650:	str	r2, [sp, #36]	; 0x24
   11654:	ldr	r3, [pc, #1308]	; 11b78 <__assert_fail@plt+0x5dc>
   11658:	mov	fp, #0
   1165c:	mov	r0, r5
   11660:	str	fp, [sp]
   11664:	mov	r1, r4
   11668:	mov	r2, r7
   1166c:	add	r3, pc, r3
   11670:	bl	11410 <getopt_long@plt>
   11674:	cmn	r0, #1
   11678:	beq	117f4 <__assert_fail@plt+0x258>
   1167c:	cmp	r0, #109	; 0x6d
   11680:	beq	117e8 <__assert_fail@plt+0x24c>
   11684:	bgt	116ac <__assert_fail@plt+0x110>
   11688:	cmp	r0, #76	; 0x4c
   1168c:	beq	117c4 <__assert_fail@plt+0x228>
   11690:	bgt	116d8 <__assert_fail@plt+0x13c>
   11694:	cmn	r0, #3
   11698:	beq	11740 <__assert_fail@plt+0x1a4>
   1169c:	cmn	r0, #2
   116a0:	bne	117bc <__assert_fail@plt+0x220>
   116a4:	mov	r0, fp
   116a8:	bl	11ebc <__assert_fail@plt+0x920>
   116ac:	cmp	r0, #122	; 0x7a
   116b0:	beq	117d8 <__assert_fail@plt+0x23c>
   116b4:	bgt	116f0 <__assert_fail@plt+0x154>
   116b8:	cmp	r0, #113	; 0x71
   116bc:	beq	11734 <__assert_fail@plt+0x198>
   116c0:	cmp	r0, #115	; 0x73
   116c4:	bne	117bc <__assert_fail@plt+0x220>
   116c8:	ldr	r3, [sp, #28]
   116cc:	orr	r6, r6, #4
   116d0:	strb	fp, [r3]
   116d4:	b	11654 <__assert_fail@plt+0xb8>
   116d8:	cmp	r0, #80	; 0x50
   116dc:	beq	11714 <__assert_fail@plt+0x178>
   116e0:	cmp	r0, #101	; 0x65
   116e4:	bne	117bc <__assert_fail@plt+0x220>
   116e8:	bic	r6, r6, #3
   116ec:	b	11654 <__assert_fail@plt+0xb8>
   116f0:	cmp	r0, #256	; 0x100
   116f4:	beq	11724 <__assert_fail@plt+0x188>
   116f8:	movw	r3, #257	; 0x101
   116fc:	cmp	r0, r3
   11700:	bne	117bc <__assert_fail@plt+0x220>
   11704:	ldr	r3, [pc, #1136]	; 11b7c <__assert_fail@plt+0x5e0>
   11708:	ldr	r3, [r8, r3]
   1170c:	ldr	r9, [r3]
   11710:	b	11654 <__assert_fail@plt+0xb8>
   11714:	ldr	r2, [sp, #36]	; 0x24
   11718:	bic	r6, r6, #4
   1171c:	strb	fp, [r2]
   11720:	b	11654 <__assert_fail@plt+0xb8>
   11724:	ldr	r3, [pc, #1104]	; 11b7c <__assert_fail@plt+0x5e0>
   11728:	ldr	r3, [r8, r3]
   1172c:	ldr	sl, [r3]
   11730:	b	11654 <__assert_fail@plt+0xb8>
   11734:	ldr	r3, [sp, #24]
   11738:	strb	fp, [r3]
   1173c:	b	11654 <__assert_fail@plt+0xb8>
   11740:	ldr	r2, [pc, #1080]	; 11b80 <__assert_fail@plt+0x5e4>
   11744:	ldr	r3, [pc, #1080]	; 11b84 <__assert_fail@plt+0x5e8>
   11748:	ldr	r0, [pc, #1080]	; 11b88 <__assert_fail@plt+0x5ec>
   1174c:	ldr	r2, [r8, r2]
   11750:	ldr	r3, [r8, r3]
   11754:	add	r0, pc, r0
   11758:	ldr	r1, [pc, #1068]	; 11b8c <__assert_fail@plt+0x5f0>
   1175c:	ldr	r4, [r2]
   11760:	add	r1, pc, r1
   11764:	ldr	r5, [r3]
   11768:	bl	1483c <triple_free@@Base+0xa10>
   1176c:	ldr	r1, [pc, #1052]	; 11b90 <__assert_fail@plt+0x5f4>
   11770:	ldr	r2, [pc, #1052]	; 11b94 <__assert_fail@plt+0x5f8>
   11774:	str	fp, [sp, #4]
   11778:	add	r1, pc, r1
   1177c:	mov	r3, r5
   11780:	add	r2, pc, r2
   11784:	str	r0, [sp]
   11788:	mov	r0, r4
   1178c:	bl	16e4c <triple_free@@Base+0x3020>
   11790:	mov	r0, fp
   11794:	bl	11434 <exit@plt>
   11798:	ldr	r1, [pc, #1016]	; 11b98 <__assert_fail@plt+0x5fc>
   1179c:	mov	r2, #5
   117a0:	mov	r0, fp
   117a4:	add	r1, pc, r1
   117a8:	bl	11308 <dcgettext@plt>
   117ac:	mov	r1, fp
   117b0:	mov	r2, r0
   117b4:	mov	r0, fp
   117b8:	bl	113b0 <error@plt>
   117bc:	mov	r0, #1
   117c0:	bl	11ebc <__assert_fail@plt+0x920>
   117c4:	ldr	r2, [sp, #32]
   117c8:	mov	r3, #1
   117cc:	orr	r6, r6, #4
   117d0:	strb	r3, [r2]
   117d4:	b	11654 <__assert_fail@plt+0xb8>
   117d8:	ldr	r2, [sp, #20]
   117dc:	mov	r3, #1
   117e0:	strb	r3, [r2, #1]
   117e4:	b	11654 <__assert_fail@plt+0xb8>
   117e8:	bic	r6, r6, #3
   117ec:	orr	r6, r6, #2
   117f0:	b	11654 <__assert_fail@plt+0xb8>
   117f4:	ldr	r3, [pc, #928]	; 11b9c <__assert_fail@plt+0x600>
   117f8:	ldr	r7, [r8, r3]
   117fc:	ldr	r3, [r7]
   11800:	cmp	r5, r3
   11804:	ble	11798 <__assert_fail@plt+0x1fc>
   11808:	adds	ip, r9, #0
   1180c:	movne	ip, #1
   11810:	cmp	sl, #0
   11814:	movne	r3, #0
   11818:	andeq	r3, ip, #1
   1181c:	cmp	r3, #0
   11820:	bne	119a4 <__assert_fail@plt+0x408>
   11824:	tst	r6, #3
   11828:	movne	fp, #0
   1182c:	moveq	fp, #1
   11830:	cmp	sl, #0
   11834:	bne	119b4 <__assert_fail@plt+0x418>
   11838:	cmp	r9, sl
   1183c:	beq	11acc <__assert_fail@plt+0x530>
   11840:	cmp	ip, #0
   11844:	beq	11888 <__assert_fail@plt+0x2ec>
   11848:	mov	r0, r9
   1184c:	mov	r1, r6
   11850:	bl	11db4 <__assert_fail@plt+0x818>
   11854:	subs	sl, r0, #0
   11858:	beq	11b14 <__assert_fail@plt+0x578>
   1185c:	cmp	fp, #0
   11860:	bne	11a98 <__assert_fail@plt+0x4fc>
   11864:	ldr	r9, [pc, #820]	; 11ba0 <__assert_fail@plt+0x604>
   11868:	mov	r0, sl
   1186c:	add	r9, pc, r9
   11870:	ldr	fp, [r9, #4]
   11874:	mov	r1, fp
   11878:	bl	11d04 <__assert_fail@plt+0x768>
   1187c:	subs	r3, r0, #0
   11880:	strne	sl, [r9, #8]
   11884:	beq	11a7c <__assert_fail@plt+0x4e0>
   11888:	ldr	ip, [pc, #788]	; 11ba4 <__assert_fail@plt+0x608>
   1188c:	mov	r9, #1
   11890:	ldr	r3, [pc, #784]	; 11ba8 <__assert_fail@plt+0x60c>
   11894:	add	ip, pc, ip
   11898:	ldr	r2, [pc, #780]	; 11bac <__assert_fail@plt+0x610>
   1189c:	add	r3, pc, r3
   118a0:	str	r3, [sp, #20]
   118a4:	ldr	r3, [pc, #772]	; 11bb0 <__assert_fail@plt+0x614>
   118a8:	add	r2, pc, r2
   118ac:	str	r8, [sp, #24]
   118b0:	mov	fp, ip
   118b4:	add	r3, pc, r3
   118b8:	str	r2, [sp, #28]
   118bc:	str	r3, [sp, #32]
   118c0:	b	1193c <__assert_fail@plt+0x3a0>
   118c4:	mov	r2, #0
   118c8:	mov	r1, sl
   118cc:	mov	r3, r2
   118d0:	mov	r0, r8
   118d4:	bl	12148 <__assert_fail@plt+0xbac>
   118d8:	cmp	r0, #0
   118dc:	beq	11988 <__assert_fail@plt+0x3ec>
   118e0:	ldr	r3, [pc, #664]	; 11b80 <__assert_fail@plt+0x5e4>
   118e4:	ldr	r2, [sp, #24]
   118e8:	ldr	sl, [r2, r3]
   118ec:	ldr	r3, [sp, #20]
   118f0:	ldr	r0, [sl]
   118f4:	ldrb	r1, [r3, #1]
   118f8:	ldr	r2, [r0, #24]
   118fc:	ldr	r3, [r0, #20]
   11900:	cmp	r1, #0
   11904:	moveq	r1, #10
   11908:	movne	r1, #0
   1190c:	cmp	r3, r2
   11910:	addcc	r2, r3, #1
   11914:	strcc	r2, [r0, #20]
   11918:	strbcc	r1, [r3]
   1191c:	bcs	11b44 <__assert_fail@plt+0x5a8>
   11920:	mov	r0, r8
   11924:	bl	112cc <free@plt>
   11928:	mov	ip, #1
   1192c:	ldr	r3, [r7]
   11930:	and	r9, ip, r9
   11934:	add	r3, r3, #1
   11938:	str	r3, [r7]
   1193c:	ldr	r3, [r7]
   11940:	cmp	r5, r3
   11944:	ble	11a70 <__assert_fail@plt+0x4d4>
   11948:	ldr	sl, [r4, r3, lsl #2]
   1194c:	mov	r1, r6
   11950:	mov	r0, sl
   11954:	bl	11db4 <__assert_fail@plt+0x818>
   11958:	subs	r8, r0, #0
   1195c:	beq	11a2c <__assert_fail@plt+0x490>
   11960:	ldr	sl, [fp, #4]
   11964:	cmp	sl, #0
   11968:	beq	11988 <__assert_fail@plt+0x3ec>
   1196c:	ldr	r0, [fp, #8]
   11970:	cmp	r0, #0
   11974:	beq	118c4 <__assert_fail@plt+0x328>
   11978:	mov	r1, r8
   1197c:	bl	11d04 <__assert_fail@plt+0x768>
   11980:	cmp	r0, #0
   11984:	bne	118c4 <__assert_fail@plt+0x328>
   11988:	ldr	r3, [pc, #496]	; 11b80 <__assert_fail@plt+0x5e4>
   1198c:	mov	r0, r8
   11990:	ldr	r2, [sp, #24]
   11994:	ldr	sl, [r2, r3]
   11998:	ldr	r1, [sl]
   1199c:	bl	1126c <fputs_unlocked@plt>
   119a0:	b	118ec <__assert_fail@plt+0x350>
   119a4:	tst	r6, #3
   119a8:	mov	sl, r9
   119ac:	movne	fp, #0
   119b0:	moveq	fp, #1
   119b4:	mov	r0, sl
   119b8:	mov	r1, r6
   119bc:	str	ip, [sp, #12]
   119c0:	bl	11db4 <__assert_fail@plt+0x818>
   119c4:	ldr	r3, [pc, #488]	; 11bb4 <__assert_fail@plt+0x618>
   119c8:	add	r3, pc, r3
   119cc:	cmp	r0, #0
   119d0:	str	r0, [r3, #4]
   119d4:	ldr	ip, [sp, #12]
   119d8:	beq	11ae0 <__assert_fail@plt+0x544>
   119dc:	cmp	fp, #0
   119e0:	beq	11838 <__assert_fail@plt+0x29c>
   119e4:	ldr	r3, [pc, #460]	; 11bb8 <__assert_fail@plt+0x61c>
   119e8:	add	r3, pc, r3
   119ec:	ldr	r0, [r3, #4]
   119f0:	str	ip, [sp, #12]
   119f4:	bl	11e08 <__assert_fail@plt+0x86c>
   119f8:	ldr	ip, [sp, #12]
   119fc:	cmp	r0, #0
   11a00:	bne	11838 <__assert_fail@plt+0x29c>
   11a04:	mov	r0, sl
   11a08:	bl	16260 <triple_free@@Base+0x2434>
   11a0c:	ldr	r2, [pc, #424]	; 11bbc <__assert_fail@plt+0x620>
   11a10:	mov	r1, #20
   11a14:	add	r2, pc, r2
   11a18:	mov	r3, r0
   11a1c:	mov	r0, #1
   11a20:	bl	113b0 <error@plt>
   11a24:	ldr	ip, [sp, #12]
   11a28:	b	11838 <__assert_fail@plt+0x29c>
   11a2c:	ldr	r2, [sp, #28]
   11a30:	ldrb	r3, [r2]
   11a34:	cmp	r3, #0
   11a38:	moveq	ip, r3
   11a3c:	beq	1192c <__assert_fail@plt+0x390>
   11a40:	bl	11470 <__errno_location@plt>
   11a44:	ldr	r1, [r0]
   11a48:	mov	r0, sl
   11a4c:	str	r1, [sp, #16]
   11a50:	bl	16260 <triple_free@@Base+0x2434>
   11a54:	ldr	r1, [sp, #16]
   11a58:	ldr	r2, [sp, #32]
   11a5c:	mov	r3, r0
   11a60:	mov	r0, r8
   11a64:	bl	113b0 <error@plt>
   11a68:	mov	ip, r8
   11a6c:	b	1192c <__assert_fail@plt+0x390>
   11a70:	rsbs	r0, r9, #1
   11a74:	movcc	r0, #0
   11a78:	bl	11434 <exit@plt>
   11a7c:	mov	r0, sl
   11a80:	str	r3, [sp, #16]
   11a84:	bl	112cc <free@plt>
   11a88:	str	fp, [r9, #8]
   11a8c:	ldr	r3, [sp, #16]
   11a90:	str	r3, [r9, #4]
   11a94:	b	11888 <__assert_fail@plt+0x2ec>
   11a98:	mov	r0, sl
   11a9c:	bl	11e08 <__assert_fail@plt+0x86c>
   11aa0:	cmp	r0, #0
   11aa4:	bne	11864 <__assert_fail@plt+0x2c8>
   11aa8:	mov	r0, r9
   11aac:	bl	16260 <triple_free@@Base+0x2434>
   11ab0:	ldr	r2, [pc, #264]	; 11bc0 <__assert_fail@plt+0x624>
   11ab4:	mov	r1, #20
   11ab8:	add	r2, pc, r2
   11abc:	mov	r3, r0
   11ac0:	mov	r0, #1
   11ac4:	bl	113b0 <error@plt>
   11ac8:	b	11864 <__assert_fail@plt+0x2c8>
   11acc:	ldr	r3, [pc, #240]	; 11bc4 <__assert_fail@plt+0x628>
   11ad0:	add	r3, pc, r3
   11ad4:	ldr	r2, [r3, #4]
   11ad8:	str	r2, [r3, #8]
   11adc:	b	11888 <__assert_fail@plt+0x2ec>
   11ae0:	bl	11470 <__errno_location@plt>
   11ae4:	ldr	r1, [r0]
   11ae8:	mov	r0, sl
   11aec:	str	r1, [sp, #16]
   11af0:	bl	16260 <triple_free@@Base+0x2434>
   11af4:	ldr	r2, [pc, #204]	; 11bc8 <__assert_fail@plt+0x62c>
   11af8:	ldr	r1, [sp, #16]
   11afc:	add	r2, pc, r2
   11b00:	mov	r3, r0
   11b04:	mov	r0, #1
   11b08:	bl	113b0 <error@plt>
   11b0c:	ldr	ip, [sp, #12]
   11b10:	b	119dc <__assert_fail@plt+0x440>
   11b14:	bl	11470 <__errno_location@plt>
   11b18:	ldr	r1, [r0]
   11b1c:	mov	r0, r9
   11b20:	str	r1, [sp, #16]
   11b24:	bl	16260 <triple_free@@Base+0x2434>
   11b28:	ldr	r2, [pc, #156]	; 11bcc <__assert_fail@plt+0x630>
   11b2c:	ldr	r1, [sp, #16]
   11b30:	add	r2, pc, r2
   11b34:	mov	r3, r0
   11b38:	mov	r0, #1
   11b3c:	bl	113b0 <error@plt>
   11b40:	b	1185c <__assert_fail@plt+0x2c0>
   11b44:	bl	11524 <__overflow@plt>
   11b48:	b	11920 <__assert_fail@plt+0x384>
   11b4c:	andeq	r9, r0, r8, ror r7
   11b50:	andeq	r9, r0, ip, lsr #13
   11b54:	andeq	sl, r1, r4, lsl sl
   11b58:	andeq	r9, r0, ip, asr r7
   11b5c:	andeq	r9, r0, r4, asr r7
   11b60:	andeq	r0, r0, r4, asr #2
   11b64:	andeq	sl, r1, ip, lsr #23
   11b68:	andeq	sl, r1, r8, asr #22
   11b6c:	andeq	sl, r1, ip, lsl #23
   11b70:	andeq	sl, r1, r4, lsl #23
   11b74:	andeq	sl, r1, r4, ror fp
   11b78:	andeq	sl, r1, r0, lsr #15
   11b7c:	andeq	r0, r0, r0, ror r1
   11b80:	andeq	r0, r0, r8, asr r1
   11b84:	andeq	r0, r0, ip, lsr r1
   11b88:	andeq	r9, r0, r4, lsl r6
   11b8c:	andeq	r9, r0, r8, lsl r6
   11b90:	andeq	r9, r0, r0, lsl r6
   11b94:	andeq	r9, r0, r4, lsl #10
   11b98:	strdeq	r9, [r0], -r0
   11b9c:	andeq	r0, r0, r8, lsr r1
   11ba0:	andeq	sl, r1, r4, asr r9
   11ba4:	andeq	sl, r1, ip, lsr #18
   11ba8:	andeq	sl, r1, r4, lsr #18
   11bac:	andeq	sl, r1, r8, asr #17
   11bb0:	andeq	r9, r0, r8, asr #11
   11bb4:	strdeq	sl, [r1], -r8
   11bb8:	ldrdeq	sl, [r1], -r8
   11bbc:	andeq	r9, r0, r8, ror #8
   11bc0:	andeq	r9, r0, r4, asr #7
   11bc4:	strdeq	sl, [r1], -r0
   11bc8:	andeq	r9, r0, r0, lsl #7
   11bcc:	andeq	r9, r0, ip, asr #6
   11bd0:	mov	fp, #0
   11bd4:	mov	lr, #0
   11bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   11bdc:	mov	r2, sp
   11be0:	push	{r2}		; (str r2, [sp, #-4]!)
   11be4:	push	{r0}		; (str r0, [sp, #-4]!)
   11be8:	ldr	ip, [pc, #16]	; 11c00 <__assert_fail@plt+0x664>
   11bec:	push	{ip}		; (str ip, [sp, #-4]!)
   11bf0:	ldr	r0, [pc, #12]	; 11c04 <__assert_fail@plt+0x668>
   11bf4:	ldr	r3, [pc, #12]	; 11c08 <__assert_fail@plt+0x66c>
   11bf8:	bl	113ec <__libc_start_main@plt>
   11bfc:	bl	11578 <abort@plt>
   11c00:			; <UNDEFINED> instruction: 0x0001a8b8
   11c04:	andeq	r1, r1, r8, lsr #11
   11c08:	andeq	sl, r1, r4, asr r8
   11c0c:	ldr	r3, [pc, #20]	; 11c28 <__assert_fail@plt+0x68c>
   11c10:	ldr	r2, [pc, #20]	; 11c2c <__assert_fail@plt+0x690>
   11c14:	add	r3, pc, r3
   11c18:	ldr	r2, [r3, r2]
   11c1c:	cmp	r2, #0
   11c20:	bxeq	lr
   11c24:	b	11404 <__gmon_start__@plt>
   11c28:	andeq	sl, r1, r4, ror #7
   11c2c:	andeq	r0, r0, ip, asr #2
   11c30:	push	{r3, lr}
   11c34:	movw	r0, #49604	; 0xc1c4
   11c38:	ldr	r3, [pc, #36]	; 11c64 <__assert_fail@plt+0x6c8>
   11c3c:	movt	r0, #2
   11c40:	rsb	r3, r0, r3
   11c44:	cmp	r3, #6
   11c48:	popls	{r3, pc}
   11c4c:	movw	r3, #0
   11c50:	movt	r3, #0
   11c54:	cmp	r3, #0
   11c58:	popeq	{r3, pc}
   11c5c:	blx	r3
   11c60:	pop	{r3, pc}
   11c64:	andeq	ip, r2, r7, asr #3
   11c68:	push	{r3, lr}
   11c6c:	movw	r0, #49604	; 0xc1c4
   11c70:	movw	r3, #49604	; 0xc1c4
   11c74:	movt	r0, #2
   11c78:	movt	r3, #2
   11c7c:	rsb	r3, r0, r3
   11c80:	asr	r3, r3, #2
   11c84:	add	r3, r3, r3, lsr #31
   11c88:	asrs	r1, r3, #1
   11c8c:	popeq	{r3, pc}
   11c90:	movw	r2, #0
   11c94:	movt	r2, #0
   11c98:	cmp	r2, #0
   11c9c:	popeq	{r3, pc}
   11ca0:	blx	r2
   11ca4:	pop	{r3, pc}
   11ca8:	push	{r4, lr}
   11cac:	movw	r4, #49604	; 0xc1c4
   11cb0:	movt	r4, #2
   11cb4:	ldrb	r3, [r4]
   11cb8:	cmp	r3, #0
   11cbc:	popne	{r4, pc}
   11cc0:	bl	11c30 <__assert_fail@plt+0x694>
   11cc4:	mov	r3, #1
   11cc8:	strb	r3, [r4]
   11ccc:	pop	{r4, pc}
   11cd0:	movw	r0, #48656	; 0xbe10
   11cd4:	movt	r0, #2
   11cd8:	push	{r3, lr}
   11cdc:	ldr	r3, [r0]
   11ce0:	cmp	r3, #0
   11ce4:	beq	11cfc <__assert_fail@plt+0x760>
   11ce8:	movw	r3, #0
   11cec:	movt	r3, #0
   11cf0:	cmp	r3, #0
   11cf4:	beq	11cfc <__assert_fail@plt+0x760>
   11cf8:	blx	r3
   11cfc:	pop	{r3, lr}
   11d00:	b	11c68 <__assert_fail@plt+0x6cc>
   11d04:	ldrb	r3, [r0, #1]
   11d08:	cmp	r3, #0
   11d0c:	beq	11d70 <__assert_fail@plt+0x7d4>
   11d10:	cmp	r3, #47	; 0x2f
   11d14:	beq	11d80 <__assert_fail@plt+0x7e4>
   11d18:	ldrb	r2, [r1, #1]
   11d1c:	cmp	r2, #0
   11d20:	beq	11dac <__assert_fail@plt+0x810>
   11d24:	cmp	r3, r2
   11d28:	bne	11da0 <__assert_fail@plt+0x804>
   11d2c:	add	r2, r0, #1
   11d30:	add	r1, r1, #2
   11d34:	b	11d4c <__assert_fail@plt+0x7b0>
   11d38:	ldrb	r0, [r1], #1
   11d3c:	cmp	r0, #0
   11d40:	beq	11da8 <__assert_fail@plt+0x80c>
   11d44:	cmp	r3, r0
   11d48:	bne	11da0 <__assert_fail@plt+0x804>
   11d4c:	ldrb	r3, [r2, #1]!
   11d50:	cmp	r3, #0
   11d54:	bne	11d38 <__assert_fail@plt+0x79c>
   11d58:	ldrb	r0, [r1]
   11d5c:	cmp	r0, #47	; 0x2f
   11d60:	cmpne	r0, #0
   11d64:	movne	r0, #0
   11d68:	moveq	r0, #1
   11d6c:	bx	lr
   11d70:	ldrb	r0, [r1, #1]
   11d74:	subs	r0, r0, #47	; 0x2f
   11d78:	movne	r0, #1
   11d7c:	bx	lr
   11d80:	ldrb	r2, [r0, #2]
   11d84:	cmp	r2, #0
   11d88:	bne	11d18 <__assert_fail@plt+0x77c>
   11d8c:	ldrb	r0, [r1, #1]
   11d90:	subs	r3, r0, #47	; 0x2f
   11d94:	rsbs	r0, r3, #0
   11d98:	adcs	r0, r0, r3
   11d9c:	bx	lr
   11da0:	mov	r0, #0
   11da4:	bx	lr
   11da8:	bx	lr
   11dac:	mov	r0, r2
   11db0:	bx	lr
   11db4:	push	{r3, r4, r5, lr}
   11db8:	mov	r5, r1
   11dbc:	bl	123a0 <__assert_fail@plt+0xe04>
   11dc0:	ldr	r3, [pc, #60]	; 11e04 <__assert_fail@plt+0x868>
   11dc4:	add	r3, pc, r3
   11dc8:	ldrb	r3, [r3]
   11dcc:	cmp	r3, #0
   11dd0:	mov	r4, r0
   11dd4:	beq	11dfc <__assert_fail@plt+0x860>
   11dd8:	cmp	r0, #0
   11ddc:	beq	11dfc <__assert_fail@plt+0x860>
   11de0:	bic	r1, r5, #4
   11de4:	bl	123a0 <__assert_fail@plt+0xe04>
   11de8:	mov	r5, r0
   11dec:	mov	r0, r4
   11df0:	bl	112cc <free@plt>
   11df4:	mov	r0, r5
   11df8:	pop	{r3, r4, r5, pc}
   11dfc:	mov	r0, r4
   11e00:	pop	{r3, r4, r5, pc}
   11e04:	strdeq	sl, [r1], -ip
   11e08:	ldr	r3, [pc, #160]	; 11eb0 <__assert_fail@plt+0x914>
   11e0c:	mov	r1, r0
   11e10:	ldr	ip, [pc, #156]	; 11eb4 <__assert_fail@plt+0x918>
   11e14:	add	r3, pc, r3
   11e18:	push	{r4, r5, r6, r7, lr}
   11e1c:	sub	sp, sp, #116	; 0x74
   11e20:	ldr	r4, [r3, ip]
   11e24:	mov	r5, r0
   11e28:	mov	r2, sp
   11e2c:	mov	r0, #3
   11e30:	ldr	r3, [r4]
   11e34:	str	r3, [sp, #108]	; 0x6c
   11e38:	bl	11560 <__xstat64@plt>
   11e3c:	cmp	r0, #0
   11e40:	beq	11e80 <__assert_fail@plt+0x8e4>
   11e44:	bl	11470 <__errno_location@plt>
   11e48:	ldr	r1, [pc, #104]	; 11eb8 <__assert_fail@plt+0x91c>
   11e4c:	mov	r2, #5
   11e50:	add	r1, pc, r1
   11e54:	ldr	r6, [r0]
   11e58:	mov	r0, #0
   11e5c:	bl	11308 <dcgettext@plt>
   11e60:	mov	r7, r0
   11e64:	mov	r0, r5
   11e68:	bl	16260 <triple_free@@Base+0x2434>
   11e6c:	mov	r1, r6
   11e70:	mov	r2, r7
   11e74:	mov	r3, r0
   11e78:	mov	r0, #1
   11e7c:	bl	113b0 <error@plt>
   11e80:	ldr	r0, [sp, #16]
   11e84:	ldr	r2, [sp, #108]	; 0x6c
   11e88:	and	r0, r0, #61440	; 0xf000
   11e8c:	ldr	r3, [r4]
   11e90:	subs	r1, r0, #16384	; 0x4000
   11e94:	rsbs	r0, r1, #0
   11e98:	adcs	r0, r0, r1
   11e9c:	cmp	r2, r3
   11ea0:	bne	11eac <__assert_fail@plt+0x910>
   11ea4:	add	sp, sp, #116	; 0x74
   11ea8:	pop	{r4, r5, r6, r7, pc}
   11eac:	bl	11314 <__stack_chk_fail@plt>
   11eb0:	andeq	sl, r1, r4, ror #3
   11eb4:	andeq	r0, r0, r0, lsr r1
   11eb8:	andeq	r8, r0, r0, lsr #21
   11ebc:	push	{r4, r5, r6, lr}
   11ec0:	subs	r4, r0, #0
   11ec4:	ldr	r5, [pc, #428]	; 12078 <__assert_fail@plt+0xadc>
   11ec8:	add	r5, pc, r5
   11ecc:	beq	11f14 <__assert_fail@plt+0x978>
   11ed0:	ldr	r3, [pc, #420]	; 1207c <__assert_fail@plt+0xae0>
   11ed4:	mov	r2, #5
   11ed8:	ldr	r1, [pc, #416]	; 12080 <__assert_fail@plt+0xae4>
   11edc:	mov	r0, #0
   11ee0:	ldr	r3, [r5, r3]
   11ee4:	add	r1, pc, r1
   11ee8:	ldr	r6, [r3]
   11eec:	bl	11308 <dcgettext@plt>
   11ef0:	ldr	r3, [pc, #396]	; 12084 <__assert_fail@plt+0xae8>
   11ef4:	mov	r1, #1
   11ef8:	ldr	r3, [r5, r3]
   11efc:	ldr	r3, [r3]
   11f00:	mov	r2, r0
   11f04:	mov	r0, r6
   11f08:	bl	114dc <__fprintf_chk@plt>
   11f0c:	mov	r0, r4
   11f10:	bl	11434 <exit@plt>
   11f14:	ldr	r1, [pc, #364]	; 12088 <__assert_fail@plt+0xaec>
   11f18:	mov	r2, #5
   11f1c:	add	r1, pc, r1
   11f20:	bl	11308 <dcgettext@plt>
   11f24:	ldr	r3, [pc, #344]	; 12084 <__assert_fail@plt+0xae8>
   11f28:	ldr	r6, [r5, r3]
   11f2c:	ldr	r2, [r6]
   11f30:	mov	r1, r0
   11f34:	mov	r0, #1
   11f38:	bl	114c4 <__printf_chk@plt>
   11f3c:	ldr	r1, [pc, #328]	; 1208c <__assert_fail@plt+0xaf0>
   11f40:	mov	r2, #5
   11f44:	mov	r0, r4
   11f48:	add	r1, pc, r1
   11f4c:	bl	11308 <dcgettext@plt>
   11f50:	ldr	r3, [pc, #312]	; 12090 <__assert_fail@plt+0xaf4>
   11f54:	ldr	r5, [r5, r3]
   11f58:	ldr	r1, [r5]
   11f5c:	bl	1126c <fputs_unlocked@plt>
   11f60:	ldr	r1, [pc, #300]	; 12094 <__assert_fail@plt+0xaf8>
   11f64:	mov	r2, #5
   11f68:	mov	r0, r4
   11f6c:	add	r1, pc, r1
   11f70:	bl	11308 <dcgettext@plt>
   11f74:	ldr	r1, [r5]
   11f78:	bl	1126c <fputs_unlocked@plt>
   11f7c:	ldr	r1, [pc, #276]	; 12098 <__assert_fail@plt+0xafc>
   11f80:	mov	r2, #5
   11f84:	mov	r0, r4
   11f88:	add	r1, pc, r1
   11f8c:	bl	11308 <dcgettext@plt>
   11f90:	ldr	r1, [r5]
   11f94:	bl	1126c <fputs_unlocked@plt>
   11f98:	ldr	r1, [pc, #252]	; 1209c <__assert_fail@plt+0xb00>
   11f9c:	mov	r2, #5
   11fa0:	mov	r0, r4
   11fa4:	add	r1, pc, r1
   11fa8:	bl	11308 <dcgettext@plt>
   11fac:	ldr	r1, [r5]
   11fb0:	bl	1126c <fputs_unlocked@plt>
   11fb4:	ldr	r1, [pc, #228]	; 120a0 <__assert_fail@plt+0xb04>
   11fb8:	mov	r2, #5
   11fbc:	mov	r0, r4
   11fc0:	add	r1, pc, r1
   11fc4:	bl	11308 <dcgettext@plt>
   11fc8:	ldr	r2, [pc, #212]	; 120a4 <__assert_fail@plt+0xb08>
   11fcc:	ldr	r3, [pc, #212]	; 120a8 <__assert_fail@plt+0xb0c>
   11fd0:	add	r2, pc, r2
   11fd4:	add	r3, pc, r3
   11fd8:	mov	r1, r0
   11fdc:	mov	r0, #1
   11fe0:	bl	114c4 <__printf_chk@plt>
   11fe4:	mov	r0, #5
   11fe8:	mov	r1, r4
   11fec:	bl	11530 <setlocale@plt>
   11ff0:	cmp	r0, #0
   11ff4:	beq	12010 <__assert_fail@plt+0xa74>
   11ff8:	ldr	r1, [pc, #172]	; 120ac <__assert_fail@plt+0xb10>
   11ffc:	mov	r2, #3
   12000:	add	r1, pc, r1
   12004:	bl	1156c <strncmp@plt>
   12008:	cmp	r0, #0
   1200c:	bne	12044 <__assert_fail@plt+0xaa8>
   12010:	ldr	r1, [pc, #152]	; 120b0 <__assert_fail@plt+0xb14>
   12014:	mov	r2, #5
   12018:	mov	r0, #0
   1201c:	add	r1, pc, r1
   12020:	bl	11308 <dcgettext@plt>
   12024:	mov	r5, r0
   12028:	ldr	r0, [r6]
   1202c:	bl	12ae8 <close_stdout@@Base+0x118>
   12030:	mov	r1, r5
   12034:	mov	r2, r0
   12038:	mov	r0, #1
   1203c:	bl	114c4 <__printf_chk@plt>
   12040:	b	11f0c <__assert_fail@plt+0x970>
   12044:	ldr	r1, [pc, #104]	; 120b4 <__assert_fail@plt+0xb18>
   12048:	mov	r2, #5
   1204c:	mov	r0, r4
   12050:	add	r1, pc, r1
   12054:	bl	11308 <dcgettext@plt>
   12058:	mov	r5, r0
   1205c:	ldr	r0, [r6]
   12060:	bl	12ae8 <close_stdout@@Base+0x118>
   12064:	mov	r1, r5
   12068:	mov	r2, r0
   1206c:	mov	r0, #1
   12070:	bl	114c4 <__printf_chk@plt>
   12074:	b	12010 <__assert_fail@plt+0xa74>
   12078:	andeq	sl, r1, r0, lsr r1
   1207c:	andeq	r0, r0, r0, asr #2
   12080:	andeq	r8, r0, ip, lsl sl
   12084:	andeq	r0, r0, r4, ror #2
   12088:	andeq	r8, r0, ip, lsl #20
   1208c:	andeq	r8, r0, r0, lsl #20
   12090:	andeq	r0, r0, r8, asr r1
   12094:	andeq	r8, r0, ip, lsr #20
   12098:	andeq	r8, r0, ip, ror ip
   1209c:	muleq	r0, r0, ip
   120a0:	andeq	r8, r0, ip, lsr #25
   120a4:			; <UNDEFINED> instruction: 0x00008cb4
   120a8:	andeq	r8, r0, r0, asr #25
   120ac:			; <UNDEFINED> instruction: 0x00008cbc
   120b0:	andeq	r8, r0, ip, ror #25
   120b4:	andeq	r8, r0, r0, ror ip
   120b8:	push	{r4, r5, r6, r7, r8, lr}
   120bc:	mov	r5, r1
   120c0:	ldr	r7, [r1]
   120c4:	mov	r6, r2
   120c8:	ldr	r3, [pc, #112]	; 12140 <__assert_fail@plt+0xba4>
   120cc:	mov	r8, r0
   120d0:	cmp	r7, #0
   120d4:	add	r3, pc, r3
   120d8:	beq	12128 <__assert_fail@plt+0xb8c>
   120dc:	bl	1144c <strlen@plt>
   120e0:	ldr	r3, [r6]
   120e4:	cmp	r0, r3
   120e8:	mov	r4, r0
   120ec:	bcc	120f8 <__assert_fail@plt+0xb5c>
   120f0:	mov	r0, #1
   120f4:	pop	{r4, r5, r6, r7, r8, pc}
   120f8:	add	r2, r4, #1
   120fc:	mov	r0, r7
   12100:	mov	r1, r8
   12104:	bl	112e4 <memcpy@plt>
   12108:	ldr	r3, [r5]
   1210c:	mov	r0, #0
   12110:	add	r3, r3, r4
   12114:	str	r3, [r5]
   12118:	ldr	r3, [r6]
   1211c:	rsb	r4, r4, r3
   12120:	str	r4, [r6]
   12124:	pop	{r4, r5, r6, r7, r8, pc}
   12128:	ldr	r2, [pc, #20]	; 12144 <__assert_fail@plt+0xba8>
   1212c:	ldr	r3, [r3, r2]
   12130:	ldr	r1, [r3]
   12134:	bl	1126c <fputs_unlocked@plt>
   12138:	mov	r0, r7
   1213c:	pop	{r4, r5, r6, r7, r8, pc}
   12140:	andeq	r9, r1, r4, lsr #30
   12144:	andeq	r0, r0, r8, asr r1
   12148:	push	{r4, r5, r6, r7, r8, r9, lr}
   1214c:	mov	r9, r0
   12150:	ldrb	r0, [r0, #1]
   12154:	sub	sp, sp, #12
   12158:	ldrb	ip, [r1, #1]
   1215c:	subs	r4, r0, #47	; 0x2f
   12160:	str	r2, [sp, #4]
   12164:	rsbs	r0, r4, #0
   12168:	str	r3, [sp]
   1216c:	adcs	r0, r0, r4
   12170:	cmp	ip, #47	; 0x2f
   12174:	eoreq	r0, r0, #1
   12178:	cmp	r0, #0
   1217c:	movne	r0, #0
   12180:	bne	12270 <__assert_fail@plt+0xcd4>
   12184:	ldrb	r6, [r1]
   12188:	cmp	r6, #0
   1218c:	beq	12370 <__assert_fail@plt+0xdd4>
   12190:	ldrb	r3, [r9]
   12194:	cmp	r3, #0
   12198:	beq	12278 <__assert_fail@plt+0xcdc>
   1219c:	cmp	r6, r3
   121a0:	bne	12380 <__assert_fail@plt+0xde4>
   121a4:	mov	r3, ip
   121a8:	mov	r5, r1
   121ac:	add	ip, r9, #1
   121b0:	mov	r2, #1
   121b4:	mov	r7, r0
   121b8:	b	121d8 <__assert_fail@plt+0xc3c>
   121bc:	ldrb	r4, [ip], #1
   121c0:	cmp	r4, #0
   121c4:	beq	12280 <__assert_fail@plt+0xce4>
   121c8:	cmp	r3, r4
   121cc:	bne	12208 <__assert_fail@plt+0xc6c>
   121d0:	ldrb	r3, [r5, #2]
   121d4:	add	r5, r5, #1
   121d8:	cmp	r6, #47	; 0x2f
   121dc:	mov	r8, r2
   121e0:	mov	r6, r3
   121e4:	mov	r4, ip
   121e8:	moveq	r7, r2
   121ec:	cmp	r3, #0
   121f0:	add	r2, r2, #1
   121f4:	bne	121bc <__assert_fail@plt+0xc20>
   121f8:	ldrb	r3, [r4]
   121fc:	cmp	r3, #0
   12200:	cmpne	r3, #47	; 0x2f
   12204:	beq	12288 <__assert_fail@plt+0xcec>
   12208:	cmp	r7, #0
   1220c:	beq	12270 <__assert_fail@plt+0xcd4>
   12210:	ldrb	r3, [r1, r7]
   12214:	add	r9, r9, r7
   12218:	add	r7, r1, r7
   1221c:	cmp	r3, #47	; 0x2f
   12220:	ldrb	r2, [r9]
   12224:	ldrbeq	r3, [r7, #1]
   12228:	addeq	r7, r7, #1
   1222c:	cmp	r2, #47	; 0x2f
   12230:	addeq	r9, r9, #1
   12234:	cmp	r3, #0
   12238:	bne	12290 <__assert_fail@plt+0xcf4>
   1223c:	ldrb	r3, [r9]
   12240:	add	r1, sp, #4
   12244:	ldr	r0, [pc, #316]	; 12388 <__assert_fail@plt+0xdec>
   12248:	mov	r2, sp
   1224c:	cmp	r3, #0
   12250:	add	r0, pc, r0
   12254:	movne	r0, r9
   12258:	bl	120b8 <__assert_fail@plt+0xb1c>
   1225c:	mov	r4, r0
   12260:	cmp	r4, #0
   12264:	bne	12340 <__assert_fail@plt+0xda4>
   12268:	eor	r0, r4, #1
   1226c:	uxtb	r0, r0
   12270:	add	sp, sp, #12
   12274:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12278:	mov	r7, r0
   1227c:	mov	r8, r0
   12280:	cmp	r6, #47	; 0x2f
   12284:	bne	12208 <__assert_fail@plt+0xc6c>
   12288:	mov	r7, r8
   1228c:	b	12208 <__assert_fail@plt+0xc6c>
   12290:	add	r6, sp, #4
   12294:	ldr	r0, [pc, #240]	; 1238c <__assert_fail@plt+0xdf0>
   12298:	mov	r2, sp
   1229c:	add	r0, pc, r0
   122a0:	mov	r1, r6
   122a4:	bl	120b8 <__assert_fail@plt+0xb1c>
   122a8:	ldrb	r3, [r7]
   122ac:	cmp	r3, #0
   122b0:	mov	r4, r0
   122b4:	beq	122fc <__assert_fail@plt+0xd60>
   122b8:	ldr	r8, [pc, #208]	; 12390 <__assert_fail@plt+0xdf4>
   122bc:	add	r8, pc, r8
   122c0:	b	122d0 <__assert_fail@plt+0xd34>
   122c4:	ldrb	r3, [r7, #1]!
   122c8:	cmp	r3, #0
   122cc:	beq	122fc <__assert_fail@plt+0xd60>
   122d0:	cmp	r3, #47	; 0x2f
   122d4:	bne	122c4 <__assert_fail@plt+0xd28>
   122d8:	mov	r0, r8
   122dc:	mov	r1, r6
   122e0:	mov	r2, sp
   122e4:	bl	120b8 <__assert_fail@plt+0xb1c>
   122e8:	ldrb	r3, [r7, #1]!
   122ec:	cmp	r3, #0
   122f0:	orr	r0, r0, r4
   122f4:	uxtb	r4, r0
   122f8:	bne	122d0 <__assert_fail@plt+0xd34>
   122fc:	ldrb	r3, [r9]
   12300:	cmp	r3, #0
   12304:	beq	12260 <__assert_fail@plt+0xcc4>
   12308:	ldr	r0, [pc, #132]	; 12394 <__assert_fail@plt+0xdf8>
   1230c:	mov	r1, r6
   12310:	mov	r2, sp
   12314:	add	r0, pc, r0
   12318:	bl	120b8 <__assert_fail@plt+0xb1c>
   1231c:	mov	r1, r6
   12320:	mov	r2, sp
   12324:	mov	r7, r0
   12328:	mov	r0, r9
   1232c:	bl	120b8 <__assert_fail@plt+0xb1c>
   12330:	orr	r0, r7, r0
   12334:	orr	r4, r4, r0
   12338:	uxtb	r4, r4
   1233c:	b	12260 <__assert_fail@plt+0xcc4>
   12340:	ldr	r1, [pc, #80]	; 12398 <__assert_fail@plt+0xdfc>
   12344:	mov	r2, #5
   12348:	mov	r0, #0
   1234c:	add	r1, pc, r1
   12350:	bl	11308 <dcgettext@plt>
   12354:	ldr	r2, [pc, #64]	; 1239c <__assert_fail@plt+0xe00>
   12358:	mov	r1, #36	; 0x24
   1235c:	add	r2, pc, r2
   12360:	mov	r3, r0
   12364:	mov	r0, #0
   12368:	bl	113b0 <error@plt>
   1236c:	b	12268 <__assert_fail@plt+0xccc>
   12370:	mov	r4, r9
   12374:	mov	r7, r0
   12378:	mov	r8, r0
   1237c:	b	121f8 <__assert_fail@plt+0xc5c>
   12380:	mov	r7, r0
   12384:	b	12208 <__assert_fail@plt+0xc6c>
   12388:	andeq	r8, r0, r8, ror #23
   1238c:	andeq	r8, r0, r0, lsr #23
   12390:	andeq	r8, r0, r4, lsl #23
   12394:	andeq	r8, r0, r0, lsr fp
   12398:	strdeq	r8, [r0], -ip
   1239c:	andeq	r8, r0, r0, lsr #22
   123a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123a4:	sub	sp, sp, #164	; 0xa4
   123a8:	ldr	r3, [pc, #1508]	; 12994 <__assert_fail@plt+0x13f8>
   123ac:	and	r8, r1, #3
   123b0:	ldr	r2, [pc, #1504]	; 12998 <__assert_fail@plt+0x13fc>
   123b4:	ubfx	r1, r1, #2, #1
   123b8:	add	r3, pc, r3
   123bc:	str	r3, [sp, #32]
   123c0:	ldr	lr, [sp, #32]
   123c4:	sub	r3, r8, #1
   123c8:	str	r0, [sp, #28]
   123cc:	ands	r5, r3, r8
   123d0:	str	r1, [sp, #16]
   123d4:	ldr	r2, [lr, r2]
   123d8:	str	r2, [sp, #36]	; 0x24
   123dc:	ldr	r2, [r2]
   123e0:	str	r2, [sp, #156]	; 0x9c
   123e4:	bne	128f4 <__assert_fail@plt+0x1358>
   123e8:	ldr	r1, [sp, #28]
   123ec:	cmp	r1, #0
   123f0:	beq	12960 <__assert_fail@plt+0x13c4>
   123f4:	ldr	r3, [sp, #28]
   123f8:	ldrb	r4, [r3]
   123fc:	cmp	r4, #0
   12400:	beq	12908 <__assert_fail@plt+0x136c>
   12404:	cmp	r4, #47	; 0x2f
   12408:	beq	1284c <__assert_fail@plt+0x12b0>
   1240c:	bl	171c8 <triple_free@@Base+0x339c>
   12410:	subs	r6, r0, #0
   12414:	beq	12620 <__assert_fail@plt+0x1084>
   12418:	mov	r1, r5
   1241c:	bl	11344 <__rawmemchr@plt>
   12420:	rsb	r5, r6, r0
   12424:	mov	r7, r0
   12428:	cmp	r5, #4096	; 0x1000
   1242c:	movge	r5, r0
   12430:	blt	12878 <__assert_fail@plt+0x12dc>
   12434:	ldr	r4, [sp, #28]
   12438:	mov	r3, #0
   1243c:	mov	sl, r3
   12440:	add	lr, sp, #48	; 0x30
   12444:	str	r3, [sp, #20]
   12448:	str	r3, [sp, #44]	; 0x2c
   1244c:	str	r3, [sp, #40]	; 0x28
   12450:	str	lr, [sp, #24]
   12454:	ldrb	r1, [r4]
   12458:	cmp	r1, #0
   1245c:	beq	125d0 <__assert_fail@plt+0x1034>
   12460:	cmp	r1, #47	; 0x2f
   12464:	addeq	r4, r4, #1
   12468:	bne	12710 <__assert_fail@plt+0x1174>
   1246c:	mov	r9, r4
   12470:	add	r4, r4, #1
   12474:	ldrb	r1, [r9]
   12478:	cmp	r1, #47	; 0x2f
   1247c:	beq	1246c <__assert_fail@plt+0xed0>
   12480:	cmp	r1, #0
   12484:	moveq	r4, r9
   12488:	beq	124a4 <__assert_fail@plt+0xf08>
   1248c:	add	r3, r9, #1
   12490:	mov	r4, r3
   12494:	ldrb	r2, [r3], #1
   12498:	cmp	r2, #47	; 0x2f
   1249c:	cmpne	r2, #0
   124a0:	bne	12490 <__assert_fail@plt+0xef4>
   124a4:	cmp	r4, r9
   124a8:	beq	125d0 <__assert_fail@plt+0x1034>
   124ac:	rsb	fp, r9, r4
   124b0:	cmp	fp, #1
   124b4:	beq	12640 <__assert_fail@plt+0x10a4>
   124b8:	cmp	fp, #2
   124bc:	beq	1264c <__assert_fail@plt+0x10b0>
   124c0:	ldrb	r3, [r5, #-1]
   124c4:	cmp	r3, #47	; 0x2f
   124c8:	addne	r0, r5, #1
   124cc:	moveq	r0, r5
   124d0:	add	r3, r0, fp
   124d4:	movne	r1, #47	; 0x2f
   124d8:	strbne	r1, [r5]
   124dc:	cmp	r7, r3
   124e0:	bhi	12514 <__assert_fail@plt+0xf78>
   124e4:	rsb	r7, r6, r7
   124e8:	cmp	fp, #4096	; 0x1000
   124ec:	addge	r7, r7, #1
   124f0:	addlt	r7, r7, #4096	; 0x1000
   124f4:	addge	r7, r7, fp
   124f8:	rsb	r5, r6, r0
   124fc:	mov	r0, r6
   12500:	mov	r1, r7
   12504:	bl	16fb4 <triple_free@@Base+0x3188>
   12508:	mov	r6, r0
   1250c:	add	r7, r0, r7
   12510:	add	r0, r0, r5
   12514:	subs	r3, r8, #2
   12518:	mov	r1, r9
   1251c:	mov	r2, fp
   12520:	rsbs	r9, r3, #0
   12524:	adcs	r9, r9, r3
   12528:	bl	112e4 <memcpy@plt>
   1252c:	ldr	r3, [sp, #16]
   12530:	tst	r3, r9
   12534:	strb	sl, [r0, fp]
   12538:	add	r5, r0, fp
   1253c:	bne	12584 <__assert_fail@plt+0xfe8>
   12540:	ldr	lr, [sp, #16]
   12544:	mov	r0, #3
   12548:	mov	r1, r6
   1254c:	add	r2, sp, #48	; 0x30
   12550:	cmp	lr, #0
   12554:	beq	126a4 <__assert_fail@plt+0x1108>
   12558:	bl	11560 <__xstat64@plt>
   1255c:	adds	r0, r0, #0
   12560:	movne	r0, #1
   12564:	cmp	r0, #0
   12568:	beq	125ac <__assert_fail@plt+0x1010>
   1256c:	bl	11470 <__errno_location@plt>
   12570:	cmp	r8, #0
   12574:	ldr	fp, [r0]
   12578:	beq	12744 <__assert_fail@plt+0x11a8>
   1257c:	cmp	r8, #1
   12580:	beq	12718 <__assert_fail@plt+0x117c>
   12584:	str	sl, [sp, #64]	; 0x40
   12588:	ldrb	r3, [r4]
   1258c:	cmp	r3, #0
   12590:	beq	12454 <__assert_fail@plt+0xeb8>
   12594:	cmp	r8, #2
   12598:	beq	12454 <__assert_fail@plt+0xeb8>
   1259c:	bl	11470 <__errno_location@plt>
   125a0:	mov	fp, #20
   125a4:	mov	r9, r0
   125a8:	b	12748 <__assert_fail@plt+0x11ac>
   125ac:	ldr	r3, [sp, #64]	; 0x40
   125b0:	and	r3, r3, #61440	; 0xf000
   125b4:	cmp	r3, #40960	; 0xa000
   125b8:	beq	126b4 <__assert_fail@plt+0x1118>
   125bc:	cmp	r3, #16384	; 0x4000
   125c0:	bne	12588 <__assert_fail@plt+0xfec>
   125c4:	ldrb	r1, [r4]
   125c8:	cmp	r1, #0
   125cc:	bne	12460 <__assert_fail@plt+0xec4>
   125d0:	add	r3, r6, #1
   125d4:	cmp	r5, r3
   125d8:	bhi	12868 <__assert_fail@plt+0x12cc>
   125dc:	mov	r3, r5
   125e0:	mov	r2, #0
   125e4:	strb	r2, [r3], #1
   125e8:	cmp	r7, r3
   125ec:	beq	12604 <__assert_fail@plt+0x1068>
   125f0:	rsb	r1, r6, r5
   125f4:	mov	r0, r6
   125f8:	add	r1, r1, #1
   125fc:	bl	16fb4 <triple_free@@Base+0x3188>
   12600:	mov	r6, r0
   12604:	ldr	r0, [sp, #40]	; 0x28
   12608:	bl	112cc <free@plt>
   1260c:	ldr	r3, [sp, #20]
   12610:	cmp	r3, #0
   12614:	beq	12620 <__assert_fail@plt+0x1084>
   12618:	mov	r0, r3
   1261c:	bl	13748 <close_stdout@@Base+0xd78>
   12620:	ldr	r1, [sp, #36]	; 0x24
   12624:	mov	r0, r6
   12628:	ldr	r2, [sp, #156]	; 0x9c
   1262c:	ldr	r3, [r1]
   12630:	cmp	r2, r3
   12634:	bne	12990 <__assert_fail@plt+0x13f4>
   12638:	add	sp, sp, #164	; 0xa4
   1263c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12640:	cmp	r1, #46	; 0x2e
   12644:	bne	124c0 <__assert_fail@plt+0xf24>
   12648:	b	12454 <__assert_fail@plt+0xeb8>
   1264c:	cmp	r1, #46	; 0x2e
   12650:	bne	124c0 <__assert_fail@plt+0xf24>
   12654:	ldrb	r3, [r9, #1]
   12658:	cmp	r3, #46	; 0x2e
   1265c:	bne	124c0 <__assert_fail@plt+0xf24>
   12660:	add	r3, r6, #1
   12664:	cmp	r5, r3
   12668:	bls	12454 <__assert_fail@plt+0xeb8>
   1266c:	sub	r3, r5, #1
   12670:	cmp	r6, r3
   12674:	bcs	12980 <__assert_fail@plt+0x13e4>
   12678:	ldrb	r2, [r5, #-2]
   1267c:	mov	r5, r3
   12680:	cmp	r2, #47	; 0x2f
   12684:	beq	12454 <__assert_fail@plt+0xeb8>
   12688:	sub	r5, r5, #1
   1268c:	cmp	r5, r6
   12690:	beq	12454 <__assert_fail@plt+0xeb8>
   12694:	ldrb	r3, [r5, #-1]
   12698:	cmp	r3, #47	; 0x2f
   1269c:	bne	12688 <__assert_fail@plt+0x10ec>
   126a0:	b	12454 <__assert_fail@plt+0xeb8>
   126a4:	bl	11590 <__lxstat64@plt>
   126a8:	adds	r0, r0, #0
   126ac:	movne	r0, #1
   126b0:	b	12564 <__assert_fail@plt+0xfc8>
   126b4:	ldr	r3, [sp, #20]
   126b8:	cmp	r3, #0
   126bc:	beq	128b8 <__assert_fail@plt+0x131c>
   126c0:	ldr	r0, [sp, #20]
   126c4:	add	r2, sp, #48	; 0x30
   126c8:	ldr	r1, [sp, #28]
   126cc:	bl	12bf4 <close_stdout@@Base+0x224>
   126d0:	cmp	r0, #0
   126d4:	beq	12768 <__assert_fail@plt+0x11cc>
   126d8:	cmp	r9, #0
   126dc:	bne	12454 <__assert_fail@plt+0xeb8>
   126e0:	mov	fp, #40	; 0x28
   126e4:	ldr	r0, [sp, #40]	; 0x28
   126e8:	bl	112cc <free@plt>
   126ec:	mov	r0, r6
   126f0:	bl	112cc <free@plt>
   126f4:	ldr	r0, [sp, #20]
   126f8:	bl	13748 <close_stdout@@Base+0xd78>
   126fc:	bl	11470 <__errno_location@plt>
   12700:	mov	r9, r0
   12704:	str	fp, [r9]
   12708:	mov	r6, #0
   1270c:	b	12620 <__assert_fail@plt+0x1084>
   12710:	mov	r9, r4
   12714:	b	1248c <__assert_fail@plt+0xef0>
   12718:	ldrb	r3, [r4]
   1271c:	cmp	r3, #47	; 0x2f
   12720:	bne	12734 <__assert_fail@plt+0x1198>
   12724:	mov	r2, r4
   12728:	ldrb	r3, [r2, #1]!
   1272c:	cmp	r3, #47	; 0x2f
   12730:	beq	12728 <__assert_fail@plt+0x118c>
   12734:	cmp	r3, #0
   12738:	bne	12744 <__assert_fail@plt+0x11a8>
   1273c:	cmp	fp, #2
   12740:	beq	12454 <__assert_fail@plt+0xeb8>
   12744:	mov	r9, r0
   12748:	ldr	r0, [sp, #40]	; 0x28
   1274c:	bl	112cc <free@plt>
   12750:	mov	r0, r6
   12754:	bl	112cc <free@plt>
   12758:	ldr	r3, [sp, #20]
   1275c:	cmp	r3, #0
   12760:	beq	12704 <__assert_fail@plt+0x1168>
   12764:	b	126f4 <__assert_fail@plt+0x1158>
   12768:	ldr	r0, [sp, #20]
   1276c:	add	r2, sp, #48	; 0x30
   12770:	ldr	r1, [sp, #28]
   12774:	bl	12b8c <close_stdout@@Base+0x1bc>
   12778:	mov	r0, r6
   1277c:	ldr	r1, [sp, #96]	; 0x60
   12780:	bl	17290 <triple_free@@Base+0x3464>
   12784:	subs	fp, r0, #0
   12788:	beq	12944 <__assert_fail@plt+0x13a8>
   1278c:	bl	1144c <strlen@plt>
   12790:	mov	r9, r0
   12794:	mov	r0, r4
   12798:	bl	1144c <strlen@plt>
   1279c:	ldr	r1, [sp, #44]	; 0x2c
   127a0:	cmp	r1, #0
   127a4:	add	r3, r9, r0
   127a8:	mov	r2, r0
   127ac:	add	r3, r3, #1
   127b0:	beq	12894 <__assert_fail@plt+0x12f8>
   127b4:	ldr	lr, [sp, #44]	; 0x2c
   127b8:	cmp	lr, r3
   127bc:	bcc	1291c <__assert_fail@plt+0x1380>
   127c0:	ldr	r3, [sp, #40]	; 0x28
   127c4:	mov	r1, r4
   127c8:	add	r2, r2, #1
   127cc:	add	r0, r3, r9
   127d0:	bl	112c0 <memmove@plt>
   127d4:	ldr	r0, [sp, #40]	; 0x28
   127d8:	mov	r1, fp
   127dc:	mov	r2, r9
   127e0:	bl	112e4 <memcpy@plt>
   127e4:	ldrb	r3, [fp]
   127e8:	cmp	r3, #47	; 0x2f
   127ec:	addeq	r5, r6, #1
   127f0:	strbeq	r3, [r6]
   127f4:	str	r0, [sp, #28]
   127f8:	beq	1283c <__assert_fail@plt+0x12a0>
   127fc:	add	r3, r6, #1
   12800:	cmp	r5, r3
   12804:	bls	1283c <__assert_fail@plt+0x12a0>
   12808:	sub	r3, r5, #1
   1280c:	cmp	r6, r3
   12810:	bcs	12988 <__assert_fail@plt+0x13ec>
   12814:	ldrb	r2, [r5, #-2]
   12818:	mov	r5, r3
   1281c:	cmp	r2, #47	; 0x2f
   12820:	beq	1283c <__assert_fail@plt+0x12a0>
   12824:	sub	r5, r5, #1
   12828:	cmp	r5, r6
   1282c:	beq	1283c <__assert_fail@plt+0x12a0>
   12830:	ldrb	r3, [r5, #-1]
   12834:	cmp	r3, #47	; 0x2f
   12838:	bne	12824 <__assert_fail@plt+0x1288>
   1283c:	mov	r0, fp
   12840:	ldr	r4, [sp, #28]
   12844:	bl	112cc <free@plt>
   12848:	b	12454 <__assert_fail@plt+0xeb8>
   1284c:	mov	r0, #4096	; 0x1000
   12850:	bl	16f5c <triple_free@@Base+0x3130>
   12854:	mov	r6, r0
   12858:	strb	r4, [r0]
   1285c:	add	r7, r0, #4096	; 0x1000
   12860:	add	r5, r0, #1
   12864:	b	12434 <__assert_fail@plt+0xe98>
   12868:	ldrb	r3, [r5, #-1]
   1286c:	cmp	r3, #47	; 0x2f
   12870:	subeq	r5, r5, #1
   12874:	b	125dc <__assert_fail@plt+0x1040>
   12878:	mov	r0, r6
   1287c:	mov	r1, #4096	; 0x1000
   12880:	bl	16fb4 <triple_free@@Base+0x3188>
   12884:	mov	r6, r0
   12888:	add	r5, r0, r5
   1288c:	add	r7, r0, #4096	; 0x1000
   12890:	b	12434 <__assert_fail@plt+0xe98>
   12894:	cmp	r3, #4096	; 0x1000
   12898:	movcc	r3, #4096	; 0x1000
   1289c:	str	r2, [sp, #8]
   128a0:	str	r3, [sp, #44]	; 0x2c
   128a4:	mov	r0, r3
   128a8:	bl	16f5c <triple_free@@Base+0x3130>
   128ac:	ldr	r2, [sp, #8]
   128b0:	str	r0, [sp, #40]	; 0x28
   128b4:	b	127c0 <__assert_fail@plt+0x1224>
   128b8:	ldr	lr, [sp, #32]
   128bc:	mov	r1, r3
   128c0:	ldr	ip, [pc, #212]	; 1299c <__assert_fail@plt+0x1400>
   128c4:	mov	r0, #7
   128c8:	ldr	r2, [pc, #208]	; 129a0 <__assert_fail@plt+0x1404>
   128cc:	ldr	r3, [pc, #208]	; 129a4 <__assert_fail@plt+0x1408>
   128d0:	ldr	ip, [lr, ip]
   128d4:	ldr	r2, [lr, r2]
   128d8:	ldr	r3, [lr, r3]
   128dc:	str	ip, [sp]
   128e0:	bl	13564 <close_stdout@@Base+0xb94>
   128e4:	cmp	r0, #0
   128e8:	str	r0, [sp, #20]
   128ec:	bne	126c0 <__assert_fail@plt+0x1124>
   128f0:	bl	17170 <triple_free@@Base+0x3344>
   128f4:	bl	11470 <__errno_location@plt>
   128f8:	mov	r6, #0
   128fc:	mov	r3, #22
   12900:	str	r3, [r0]
   12904:	b	12620 <__assert_fail@plt+0x1084>
   12908:	bl	11470 <__errno_location@plt>
   1290c:	mov	r6, r4
   12910:	mov	r3, #2
   12914:	str	r3, [r0]
   12918:	b	12620 <__assert_fail@plt+0x1084>
   1291c:	mov	r1, r3
   12920:	ldr	r0, [sp, #40]	; 0x28
   12924:	str	r2, [sp, #8]
   12928:	str	r3, [sp, #12]
   1292c:	bl	16fb4 <triple_free@@Base+0x3188>
   12930:	ldr	r3, [sp, #12]
   12934:	ldr	r2, [sp, #8]
   12938:	str	r3, [sp, #44]	; 0x2c
   1293c:	str	r0, [sp, #40]	; 0x28
   12940:	b	127c0 <__assert_fail@plt+0x1224>
   12944:	cmp	r9, #0
   12948:	beq	12974 <__assert_fail@plt+0x13d8>
   1294c:	bl	11470 <__errno_location@plt>
   12950:	ldr	fp, [r0]
   12954:	cmp	fp, #12
   12958:	bne	12454 <__assert_fail@plt+0xeb8>
   1295c:	b	126e4 <__assert_fail@plt+0x1148>
   12960:	bl	11470 <__errno_location@plt>
   12964:	ldr	r6, [sp, #28]
   12968:	mov	r3, #22
   1296c:	str	r3, [r0]
   12970:	b	12620 <__assert_fail@plt+0x1084>
   12974:	bl	11470 <__errno_location@plt>
   12978:	ldr	fp, [r0]
   1297c:	b	126e4 <__assert_fail@plt+0x1148>
   12980:	mov	r5, r3
   12984:	b	12454 <__assert_fail@plt+0xeb8>
   12988:	mov	r5, r3
   1298c:	b	1283c <__assert_fail@plt+0x12a0>
   12990:	bl	11314 <__stack_chk_fail@plt>
   12994:	andeq	r9, r1, r0, asr #24
   12998:	andeq	r0, r0, r0, lsr r1
   1299c:	andeq	r0, r0, r4, lsr r1
   129a0:	andeq	r0, r0, r8, asr #2
   129a4:	andeq	r0, r0, r4, asr r1
   129a8:	ldr	r3, [pc, #8]	; 129b8 <__assert_fail@plt+0x141c>
   129ac:	add	r3, pc, r3
   129b0:	str	r0, [r3]
   129b4:	bx	lr
   129b8:	andeq	r9, r1, r0, lsr #16
   129bc:	ldr	r3, [pc, #8]	; 129cc <__assert_fail@plt+0x1430>
   129c0:	add	r3, pc, r3
   129c4:	strb	r0, [r3, #4]
   129c8:	bx	lr
   129cc:	andeq	r9, r1, ip, lsl #16

000129d0 <close_stdout@@Base>:
   129d0:	push	{r4, r5, r6, r7, lr}
   129d4:	sub	sp, sp, #12
   129d8:	ldr	r4, [pc, #228]	; 12ac4 <close_stdout@@Base+0xf4>
   129dc:	ldr	r3, [pc, #228]	; 12ac8 <close_stdout@@Base+0xf8>
   129e0:	add	r4, pc, r4
   129e4:	ldr	r3, [r4, r3]
   129e8:	ldr	r0, [r3]
   129ec:	bl	173c4 <triple_free@@Base+0x3598>
   129f0:	cmp	r0, #0
   129f4:	beq	12a1c <close_stdout@@Base+0x4c>
   129f8:	ldr	r3, [pc, #204]	; 12acc <close_stdout@@Base+0xfc>
   129fc:	add	r3, pc, r3
   12a00:	ldrb	r3, [r3, #4]
   12a04:	cmp	r3, #0
   12a08:	beq	12a3c <close_stdout@@Base+0x6c>
   12a0c:	bl	11470 <__errno_location@plt>
   12a10:	ldr	r3, [r0]
   12a14:	cmp	r3, #32
   12a18:	bne	12a3c <close_stdout@@Base+0x6c>
   12a1c:	ldr	r3, [pc, #172]	; 12ad0 <close_stdout@@Base+0x100>
   12a20:	ldr	r3, [r4, r3]
   12a24:	ldr	r0, [r3]
   12a28:	bl	173c4 <triple_free@@Base+0x3598>
   12a2c:	cmp	r0, #0
   12a30:	bne	12a90 <close_stdout@@Base+0xc0>
   12a34:	add	sp, sp, #12
   12a38:	pop	{r4, r5, r6, r7, pc}
   12a3c:	ldr	r1, [pc, #144]	; 12ad4 <close_stdout@@Base+0x104>
   12a40:	mov	r0, #0
   12a44:	mov	r2, #5
   12a48:	add	r1, pc, r1
   12a4c:	bl	11308 <dcgettext@plt>
   12a50:	ldr	r3, [pc, #128]	; 12ad8 <close_stdout@@Base+0x108>
   12a54:	ldr	r5, [pc, r3]
   12a58:	cmp	r5, #0
   12a5c:	mov	r6, r0
   12a60:	beq	12aa0 <close_stdout@@Base+0xd0>
   12a64:	bl	11470 <__errno_location@plt>
   12a68:	ldr	r7, [r0]
   12a6c:	mov	r0, r5
   12a70:	bl	1610c <triple_free@@Base+0x22e0>
   12a74:	ldr	r2, [pc, #96]	; 12adc <close_stdout@@Base+0x10c>
   12a78:	str	r6, [sp]
   12a7c:	mov	r1, r7
   12a80:	add	r2, pc, r2
   12a84:	mov	r3, r0
   12a88:	mov	r0, #0
   12a8c:	bl	113b0 <error@plt>
   12a90:	ldr	r3, [pc, #72]	; 12ae0 <close_stdout@@Base+0x110>
   12a94:	ldr	r3, [r4, r3]
   12a98:	ldr	r0, [r3]
   12a9c:	bl	112d8 <_exit@plt>
   12aa0:	bl	11470 <__errno_location@plt>
   12aa4:	ldr	r2, [pc, #56]	; 12ae4 <close_stdout@@Base+0x114>
   12aa8:	add	r2, pc, r2
   12aac:	mov	r3, r0
   12ab0:	mov	r0, r5
   12ab4:	ldr	r1, [r3]
   12ab8:	mov	r3, r6
   12abc:	bl	113b0 <error@plt>
   12ac0:	b	12a90 <close_stdout@@Base+0xc0>
   12ac4:	andeq	r9, r1, r8, lsl r6
   12ac8:	andeq	r0, r0, r8, asr r1
   12acc:	ldrdeq	r9, [r1], -r0
   12ad0:	andeq	r0, r0, r0, asr #2
   12ad4:	andeq	r8, r0, r4, lsr #8
   12ad8:	andeq	r9, r1, r8, ror r7
   12adc:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   12ae0:	andeq	r0, r0, ip, asr r1
   12ae4:	ldrdeq	r8, [r0], -r4
   12ae8:	ldrb	r3, [r0]
   12aec:	cmp	r3, #47	; 0x2f
   12af0:	bne	12b0c <close_stdout@@Base+0x13c>
   12af4:	add	r2, r0, #1
   12af8:	mov	r0, r2
   12afc:	add	r2, r2, #1
   12b00:	ldrb	r3, [r0]
   12b04:	cmp	r3, #47	; 0x2f
   12b08:	beq	12af8 <close_stdout@@Base+0x128>
   12b0c:	cmp	r3, #0
   12b10:	bxeq	lr
   12b14:	mov	r2, r0
   12b18:	mov	r1, #0
   12b1c:	cmp	r3, #47	; 0x2f
   12b20:	moveq	r1, #1
   12b24:	beq	12b34 <close_stdout@@Base+0x164>
   12b28:	cmp	r1, #0
   12b2c:	movne	r0, r2
   12b30:	movne	r1, #0
   12b34:	ldrb	r3, [r2, #1]!
   12b38:	cmp	r3, #0
   12b3c:	bne	12b1c <close_stdout@@Base+0x14c>
   12b40:	bx	lr
   12b44:	push	{r4, lr}
   12b48:	mov	r4, r0
   12b4c:	bl	1144c <strlen@plt>
   12b50:	cmp	r0, #1
   12b54:	popls	{r4, pc}
   12b58:	sub	r3, r0, #1
   12b5c:	ldrb	r2, [r4, r3]
   12b60:	cmp	r2, #47	; 0x2f
   12b64:	popne	{r4, pc}
   12b68:	mov	r0, r3
   12b6c:	cmp	r0, #1
   12b70:	sub	r3, r3, #1
   12b74:	beq	12b88 <close_stdout@@Base+0x1b8>
   12b78:	ldrb	r2, [r4, r3]
   12b7c:	cmp	r2, #47	; 0x2f
   12b80:	popne	{r4, pc}
   12b84:	b	12b68 <close_stdout@@Base+0x198>
   12b88:	pop	{r4, pc}
   12b8c:	push	{r4, r5, r6, r7, r8, lr}
   12b90:	subs	r8, r0, #0
   12b94:	mov	r4, r1
   12b98:	mov	r7, r2
   12b9c:	popeq	{r4, r5, r6, r7, r8, pc}
   12ba0:	mov	r0, #24
   12ba4:	bl	16f5c <triple_free@@Base+0x3130>
   12ba8:	mov	r6, r0
   12bac:	mov	r0, r4
   12bb0:	bl	17154 <triple_free@@Base+0x3328>
   12bb4:	ldrd	r4, [r7]
   12bb8:	mov	r1, r6
   12bbc:	str	r0, [r6]
   12bc0:	mov	r0, r8
   12bc4:	ldrd	r2, [r7, #96]	; 0x60
   12bc8:	strd	r4, [r6, #16]
   12bcc:	strd	r2, [r6, #8]
   12bd0:	bl	13b8c <close_stdout@@Base+0x11bc>
   12bd4:	cmp	r0, #0
   12bd8:	beq	12bf0 <close_stdout@@Base+0x220>
   12bdc:	cmp	r6, r0
   12be0:	popeq	{r4, r5, r6, r7, r8, pc}
   12be4:	mov	r0, r6
   12be8:	pop	{r4, r5, r6, r7, r8, lr}
   12bec:	b	13e2c <triple_free@@Base>
   12bf0:	bl	17170 <triple_free@@Base+0x3344>
   12bf4:	ldr	r3, [pc, #104]	; 12c64 <close_stdout@@Base+0x294>
   12bf8:	ldr	ip, [pc, #104]	; 12c68 <close_stdout@@Base+0x298>
   12bfc:	add	r3, pc, r3
   12c00:	push	{r4, r5, r6, r7, lr}
   12c04:	subs	r4, r0, #0
   12c08:	ldr	r6, [r3, ip]
   12c0c:	sub	sp, sp, #36	; 0x24
   12c10:	mov	r7, r1
   12c14:	moveq	r0, r4
   12c18:	ldr	r3, [r6]
   12c1c:	str	r3, [sp, #28]
   12c20:	beq	12c48 <close_stdout@@Base+0x278>
   12c24:	ldrd	r4, [r2, #96]	; 0x60
   12c28:	mov	r1, sp
   12c2c:	ldrd	r2, [r2]
   12c30:	str	r7, [sp]
   12c34:	strd	r4, [sp, #8]
   12c38:	strd	r2, [sp, #16]
   12c3c:	bl	132b0 <close_stdout@@Base+0x8e0>
   12c40:	adds	r0, r0, #0
   12c44:	movne	r0, #1
   12c48:	ldr	r2, [sp, #28]
   12c4c:	ldr	r3, [r6]
   12c50:	cmp	r2, r3
   12c54:	bne	12c60 <close_stdout@@Base+0x290>
   12c58:	add	sp, sp, #36	; 0x24
   12c5c:	pop	{r4, r5, r6, r7, pc}
   12c60:	bl	11314 <__stack_chk_fail@plt>
   12c64:	strdeq	r9, [r1], -ip
   12c68:	andeq	r0, r0, r0, lsr r1
   12c6c:	andeq	r0, r0, r0
   12c70:	cmp	r0, #9
   12c74:	push	{r4, r5, r6, r7, r8, lr}
   12c78:	bhi	12d0c <close_stdout@@Base+0x33c>
   12c7c:	mov	r7, #11
   12c80:	movw	r8, #43691	; 0xaaab
   12c84:	movt	r8, #43690	; 0xaaaa
   12c88:	cmp	r7, #9
   12c8c:	bls	12d04 <close_stdout@@Base+0x334>
   12c90:	umull	r2, r3, r8, r7
   12c94:	lsr	r3, r3, #1
   12c98:	add	r3, r3, r3, lsl #1
   12c9c:	cmp	r7, r3
   12ca0:	beq	12cf0 <close_stdout@@Base+0x320>
   12ca4:	mov	r6, #16
   12ca8:	mov	r5, #9
   12cac:	mov	r4, #3
   12cb0:	b	12cc0 <close_stdout@@Base+0x2f0>
   12cb4:	bl	19eb4 <triple_free@@Base+0x6088>
   12cb8:	cmp	r1, #0
   12cbc:	beq	12cf0 <close_stdout@@Base+0x320>
   12cc0:	add	r5, r5, r6
   12cc4:	add	r4, r4, #2
   12cc8:	cmp	r5, r7
   12ccc:	mov	r0, r7
   12cd0:	add	r6, r6, #8
   12cd4:	mov	r1, r4
   12cd8:	bcc	12cb4 <close_stdout@@Base+0x2e4>
   12cdc:	mov	r1, r4
   12ce0:	mov	r0, r7
   12ce4:	bl	19eb4 <triple_free@@Base+0x6088>
   12ce8:	cmp	r1, #0
   12cec:	bne	12cfc <close_stdout@@Base+0x32c>
   12cf0:	add	r7, r7, #2
   12cf4:	cmn	r7, #1
   12cf8:	bne	12c88 <close_stdout@@Base+0x2b8>
   12cfc:	mov	r0, r7
   12d00:	pop	{r4, r5, r6, r7, r8, pc}
   12d04:	mov	r4, #3
   12d08:	b	12cdc <close_stdout@@Base+0x30c>
   12d0c:	orr	r7, r0, #1
   12d10:	cmn	r7, #1
   12d14:	bne	12c80 <close_stdout@@Base+0x2b0>
   12d18:	b	12cfc <close_stdout@@Base+0x32c>
   12d1c:	push	{r3, lr}
   12d20:	ror	r0, r0, #3
   12d24:	bl	19eb4 <triple_free@@Base+0x6088>
   12d28:	mov	r0, r1
   12d2c:	pop	{r3, pc}
   12d30:	subs	r3, r1, r0
   12d34:	rsbs	r0, r3, #0
   12d38:	adcs	r0, r0, r3
   12d3c:	bx	lr
   12d40:	push	{r4, lr}
   12d44:	mov	r4, r0
   12d48:	ldr	r3, [r4, #24]
   12d4c:	mov	r0, r1
   12d50:	ldr	r1, [r4, #8]
   12d54:	blx	r3
   12d58:	ldr	r3, [r4, #8]
   12d5c:	cmp	r0, r3
   12d60:	bcs	12d70 <close_stdout@@Base+0x3a0>
   12d64:	ldr	r3, [r4]
   12d68:	add	r0, r3, r0, lsl #3
   12d6c:	pop	{r4, pc}
   12d70:	bl	11578 <abort@plt>
   12d74:	push	{r4, r5, r6, r7, r8, lr}
   12d78:	mov	r7, r2
   12d7c:	mov	r8, r3
   12d80:	mov	r6, r0
   12d84:	mov	r5, r1
   12d88:	bl	12d40 <close_stdout@@Base+0x370>
   12d8c:	str	r0, [r7]
   12d90:	mov	r4, r0
   12d94:	ldr	r2, [r0]
   12d98:	cmp	r2, #0
   12d9c:	beq	12e30 <close_stdout@@Base+0x460>
   12da0:	cmp	r5, r2
   12da4:	beq	12dc4 <close_stdout@@Base+0x3f4>
   12da8:	mov	r1, r2
   12dac:	ldr	r3, [r6, #28]
   12db0:	mov	r0, r5
   12db4:	blx	r3
   12db8:	cmp	r0, #0
   12dbc:	beq	12e24 <close_stdout@@Base+0x454>
   12dc0:	ldr	r2, [r4]
   12dc4:	cmp	r8, #0
   12dc8:	beq	12df4 <close_stdout@@Base+0x424>
   12dcc:	ldr	r3, [r4, #4]
   12dd0:	cmp	r3, #0
   12dd4:	streq	r3, [r4]
   12dd8:	ldmne	r3, {r0, r1}
   12ddc:	movne	ip, #0
   12de0:	stmne	r4, {r0, r1}
   12de4:	strne	ip, [r3]
   12de8:	ldrne	r1, [r6, #36]	; 0x24
   12dec:	strne	r1, [r3, #4]
   12df0:	strne	r3, [r6, #36]	; 0x24
   12df4:	mov	r0, r2
   12df8:	pop	{r4, r5, r6, r7, r8, pc}
   12dfc:	ldr	r2, [ip]
   12e00:	cmp	r2, r5
   12e04:	beq	12e44 <close_stdout@@Base+0x474>
   12e08:	mov	r1, r2
   12e0c:	mov	r0, r5
   12e10:	ldr	r2, [r6, #28]
   12e14:	blx	r2
   12e18:	cmp	r0, #0
   12e1c:	bne	12e3c <close_stdout@@Base+0x46c>
   12e20:	ldr	r4, [r4, #4]
   12e24:	ldr	ip, [r4, #4]
   12e28:	cmp	ip, #0
   12e2c:	bne	12dfc <close_stdout@@Base+0x42c>
   12e30:	mov	r2, #0
   12e34:	mov	r0, r2
   12e38:	pop	{r4, r5, r6, r7, r8, pc}
   12e3c:	ldr	ip, [r4, #4]
   12e40:	ldr	r2, [ip]
   12e44:	cmp	r8, #0
   12e48:	beq	12df4 <close_stdout@@Base+0x424>
   12e4c:	ldr	r1, [ip, #4]
   12e50:	mov	r3, #0
   12e54:	mov	r0, r2
   12e58:	str	r1, [r4, #4]
   12e5c:	str	r3, [ip]
   12e60:	ldr	r3, [r6, #36]	; 0x24
   12e64:	str	r3, [ip, #4]
   12e68:	str	ip, [r6, #36]	; 0x24
   12e6c:	pop	{r4, r5, r6, r7, r8, pc}
   12e70:	ldr	r1, [pc, #176]	; 12f28 <close_stdout@@Base+0x558>
   12e74:	mov	r2, r0
   12e78:	ldr	r3, [r0]
   12e7c:	add	r1, pc, r1
   12e80:	cmp	r3, r1
   12e84:	beq	12f14 <close_stdout@@Base+0x544>
   12e88:	vldr	s15, [r3, #8]
   12e8c:	vldr	s14, [pc, #136]	; 12f1c <close_stdout@@Base+0x54c>
   12e90:	vcmpe.f32	s15, s14
   12e94:	vmrs	APSR_nzcv, fpscr
   12e98:	ble	12f00 <close_stdout@@Base+0x530>
   12e9c:	vldr	s13, [pc, #124]	; 12f20 <close_stdout@@Base+0x550>
   12ea0:	vcmpe.f32	s15, s13
   12ea4:	vmrs	APSR_nzcv, fpscr
   12ea8:	bpl	12f00 <close_stdout@@Base+0x530>
   12eac:	vldr	s13, [pc, #112]	; 12f24 <close_stdout@@Base+0x554>
   12eb0:	vldr	s12, [r3, #12]
   12eb4:	vcmpe.f32	s12, s13
   12eb8:	vmrs	APSR_nzcv, fpscr
   12ebc:	ble	12f00 <close_stdout@@Base+0x530>
   12ec0:	vldr	s13, [r3]
   12ec4:	vcmpe.f32	s13, #0.0
   12ec8:	vmrs	APSR_nzcv, fpscr
   12ecc:	blt	12f00 <close_stdout@@Base+0x530>
   12ed0:	vadd.f32	s14, s13, s14
   12ed4:	vldr	s12, [r3, #4]
   12ed8:	vcmpe.f32	s14, s12
   12edc:	vmrs	APSR_nzcv, fpscr
   12ee0:	bpl	12f00 <close_stdout@@Base+0x530>
   12ee4:	vmov.f32	s13, #112	; 0x3f800000  1.0
   12ee8:	vcmpe.f32	s12, s13
   12eec:	vmrs	APSR_nzcv, fpscr
   12ef0:	bhi	12f00 <close_stdout@@Base+0x530>
   12ef4:	vcmpe.f32	s15, s14
   12ef8:	vmrs	APSR_nzcv, fpscr
   12efc:	bgt	12f14 <close_stdout@@Base+0x544>
   12f00:	ldr	r3, [pc, #36]	; 12f2c <close_stdout@@Base+0x55c>
   12f04:	mov	r0, #0
   12f08:	add	r3, pc, r3
   12f0c:	str	r3, [r2]
   12f10:	bx	lr
   12f14:	mov	r0, #1
   12f18:	bx	lr
   12f1c:	stclcc	12, cr12, [ip, #820]	; 0x334
   12f20:	svccc	0x00666666
   12f24:	svccc	0x008ccccd
   12f28:	andeq	r8, r0, r4
   12f2c:	andeq	r7, r0, r8, ror pc
   12f30:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f34:	mov	r8, r1
   12f38:	ldr	r6, [r1]
   12f3c:	mov	r5, r0
   12f40:	ldr	r3, [r1, #4]
   12f44:	mov	sl, r2
   12f48:	cmp	r6, r3
   12f4c:	addcc	r6, r6, #8
   12f50:	movcc	r9, #0
   12f54:	bcs	12ffc <close_stdout@@Base+0x62c>
   12f58:	ldr	fp, [r6, #-8]
   12f5c:	mov	r7, r6
   12f60:	cmp	fp, #0
   12f64:	beq	12ff0 <close_stdout@@Base+0x620>
   12f68:	ldr	r4, [r6, #-4]
   12f6c:	cmp	r4, #0
   12f70:	bne	12f90 <close_stdout@@Base+0x5c0>
   12f74:	b	12fe0 <close_stdout@@Base+0x610>
   12f78:	ldr	r2, [r0, #4]
   12f7c:	cmp	r3, #0
   12f80:	str	r2, [r4, #4]
   12f84:	str	r4, [r0, #4]
   12f88:	mov	r4, r3
   12f8c:	beq	12fdc <close_stdout@@Base+0x60c>
   12f90:	ldr	fp, [r4]
   12f94:	mov	r0, r5
   12f98:	mov	r1, fp
   12f9c:	bl	12d40 <close_stdout@@Base+0x370>
   12fa0:	ldr	r3, [r4, #4]
   12fa4:	ldr	r2, [r0]
   12fa8:	cmp	r2, #0
   12fac:	bne	12f78 <close_stdout@@Base+0x5a8>
   12fb0:	str	fp, [r0]
   12fb4:	cmp	r3, #0
   12fb8:	ldr	r1, [r5, #12]
   12fbc:	add	r1, r1, #1
   12fc0:	str	r1, [r5, #12]
   12fc4:	str	r2, [r4]
   12fc8:	ldr	r2, [r5, #36]	; 0x24
   12fcc:	str	r2, [r4, #4]
   12fd0:	str	r4, [r5, #36]	; 0x24
   12fd4:	mov	r4, r3
   12fd8:	bne	12f90 <close_stdout@@Base+0x5c0>
   12fdc:	ldr	fp, [r6, #-8]
   12fe0:	cmp	sl, #0
   12fe4:	str	r9, [r6, #-4]
   12fe8:	beq	13004 <close_stdout@@Base+0x634>
   12fec:	ldr	r3, [r8, #4]
   12ff0:	cmp	r3, r7
   12ff4:	add	r6, r6, #8
   12ff8:	bhi	12f58 <close_stdout@@Base+0x588>
   12ffc:	mov	r0, #1
   13000:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13004:	mov	r0, r5
   13008:	mov	r1, fp
   1300c:	bl	12d40 <close_stdout@@Base+0x370>
   13010:	ldr	r3, [r0]
   13014:	mov	r4, r0
   13018:	cmp	r3, #0
   1301c:	beq	13068 <close_stdout@@Base+0x698>
   13020:	ldr	r0, [r5, #36]	; 0x24
   13024:	cmp	r0, #0
   13028:	beq	1307c <close_stdout@@Base+0x6ac>
   1302c:	ldr	r2, [r0, #4]
   13030:	str	r2, [r5, #36]	; 0x24
   13034:	str	fp, [r0]
   13038:	ldr	r2, [r4, #4]
   1303c:	str	r2, [r0, #4]
   13040:	str	r0, [r4, #4]
   13044:	str	r9, [r6, #-8]
   13048:	add	r6, r6, #8
   1304c:	ldr	r3, [r8, #4]
   13050:	ldr	r2, [r8, #12]
   13054:	cmp	r3, r7
   13058:	sub	r2, r2, #1
   1305c:	str	r2, [r8, #12]
   13060:	bhi	12f58 <close_stdout@@Base+0x588>
   13064:	b	12ffc <close_stdout@@Base+0x62c>
   13068:	str	fp, [r0]
   1306c:	ldr	r3, [r5, #12]
   13070:	add	r3, r3, #1
   13074:	str	r3, [r5, #12]
   13078:	b	13044 <close_stdout@@Base+0x674>
   1307c:	mov	r0, #8
   13080:	bl	113d4 <malloc@plt>
   13084:	cmp	r0, #0
   13088:	bne	13034 <close_stdout@@Base+0x664>
   1308c:	mov	r0, sl
   13090:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13094:	ldr	r0, [r0, #8]
   13098:	bx	lr
   1309c:	ldr	r0, [r0, #12]
   130a0:	bx	lr
   130a4:	ldr	r0, [r0, #16]
   130a8:	bx	lr
   130ac:	ldr	r3, [r0]
   130b0:	ldr	r2, [r0, #4]
   130b4:	cmp	r3, r2
   130b8:	bcs	1311c <close_stdout@@Base+0x74c>
   130bc:	add	r1, r3, #8
   130c0:	add	r2, r2, #7
   130c4:	rsb	r2, r1, r2
   130c8:	add	r3, r3, #16
   130cc:	bic	r2, r2, #7
   130d0:	mov	r0, #0
   130d4:	add	ip, r3, r2
   130d8:	ldr	r3, [r1, #-8]
   130dc:	cmp	r3, #0
   130e0:	beq	1310c <close_stdout@@Base+0x73c>
   130e4:	ldr	r3, [r1, #-4]
   130e8:	mov	r2, #1
   130ec:	cmp	r3, #0
   130f0:	beq	13104 <close_stdout@@Base+0x734>
   130f4:	ldr	r3, [r3, #4]
   130f8:	add	r2, r2, #1
   130fc:	cmp	r3, #0
   13100:	bne	130f4 <close_stdout@@Base+0x724>
   13104:	cmp	r0, r2
   13108:	movcc	r0, r2
   1310c:	add	r1, r1, #8
   13110:	cmp	r1, ip
   13114:	bne	130d8 <close_stdout@@Base+0x708>
   13118:	bx	lr
   1311c:	mov	r0, #0
   13120:	bx	lr
   13124:	push	{r4}		; (str r4, [sp, #-4]!)
   13128:	ldr	r3, [r0]
   1312c:	ldr	r2, [r0, #4]
   13130:	cmp	r3, r2
   13134:	bcs	131c4 <close_stdout@@Base+0x7f4>
   13138:	add	r2, r2, #7
   1313c:	add	r1, r3, #8
   13140:	rsb	ip, r1, r2
   13144:	add	r3, r3, #16
   13148:	bic	ip, ip, #7
   1314c:	mov	r2, #0
   13150:	add	r4, r3, ip
   13154:	mov	ip, r2
   13158:	ldr	r3, [r1, #-8]
   1315c:	cmp	r3, #0
   13160:	beq	13188 <close_stdout@@Base+0x7b8>
   13164:	ldr	r3, [r1, #-4]
   13168:	add	ip, ip, #1
   1316c:	add	r2, r2, #1
   13170:	cmp	r3, #0
   13174:	beq	13188 <close_stdout@@Base+0x7b8>
   13178:	ldr	r3, [r3, #4]
   1317c:	add	r2, r2, #1
   13180:	cmp	r3, #0
   13184:	bne	13178 <close_stdout@@Base+0x7a8>
   13188:	add	r1, r1, #8
   1318c:	cmp	r1, r4
   13190:	bne	13158 <close_stdout@@Base+0x788>
   13194:	ldr	r3, [r0, #12]
   13198:	cmp	r3, ip
   1319c:	movne	r0, #0
   131a0:	beq	131ac <close_stdout@@Base+0x7dc>
   131a4:	pop	{r4}		; (ldr r4, [sp], #4)
   131a8:	bx	lr
   131ac:	ldr	r0, [r0, #16]
   131b0:	pop	{r4}		; (ldr r4, [sp], #4)
   131b4:	subs	r3, r0, r2
   131b8:	rsbs	r0, r3, #0
   131bc:	adcs	r0, r0, r3
   131c0:	bx	lr
   131c4:	mov	r2, #0
   131c8:	mov	ip, r2
   131cc:	b	13194 <close_stdout@@Base+0x7c4>
   131d0:	push	{r4, r5, r6, r7, r8, lr}
   131d4:	sub	sp, sp, #8
   131d8:	mov	r4, r1
   131dc:	mov	r5, r0
   131e0:	bl	130a4 <close_stdout@@Base+0x6d4>
   131e4:	mov	r8, r0
   131e8:	mov	r0, r5
   131ec:	bl	13094 <close_stdout@@Base+0x6c4>
   131f0:	mov	r6, r0
   131f4:	mov	r0, r5
   131f8:	bl	1309c <close_stdout@@Base+0x6cc>
   131fc:	mov	r7, r0
   13200:	mov	r0, r5
   13204:	bl	130ac <close_stdout@@Base+0x6dc>
   13208:	ldr	r2, [pc, #144]	; 132a0 <close_stdout@@Base+0x8d0>
   1320c:	mov	r3, r8
   13210:	mov	r1, #1
   13214:	add	r2, pc, r2
   13218:	mov	r5, r0
   1321c:	mov	r0, r4
   13220:	bl	114dc <__fprintf_chk@plt>
   13224:	ldr	r2, [pc, #120]	; 132a4 <close_stdout@@Base+0x8d4>
   13228:	mov	r3, r6
   1322c:	mov	r0, r4
   13230:	mov	r1, #1
   13234:	add	r2, pc, r2
   13238:	bl	114dc <__fprintf_chk@plt>
   1323c:	vmov	s15, r7
   13240:	vldr	d5, [pc, #80]	; 13298 <close_stdout@@Base+0x8c8>
   13244:	ldr	r2, [pc, #92]	; 132a8 <close_stdout@@Base+0x8d8>
   13248:	vcvt.f64.u32	d4, s15
   1324c:	mov	r3, r7
   13250:	vmov	s15, r6
   13254:	mov	r0, r4
   13258:	mov	r1, #1
   1325c:	add	r2, pc, r2
   13260:	vmul.f64	d5, d4, d5
   13264:	vcvt.f64.u32	d6, s15
   13268:	vdiv.f64	d7, d5, d6
   1326c:	vstr	d7, [sp]
   13270:	bl	114dc <__fprintf_chk@plt>
   13274:	ldr	r2, [pc, #48]	; 132ac <close_stdout@@Base+0x8dc>
   13278:	mov	r0, r4
   1327c:	mov	r3, r5
   13280:	mov	r1, #1
   13284:	add	r2, pc, r2
   13288:	add	sp, sp, #8
   1328c:	pop	{r4, r5, r6, r7, r8, lr}
   13290:	b	114dc <__fprintf_chk@plt>
   13294:	nop	{0}
   13298:	andeq	r0, r0, r0
   1329c:	subsmi	r0, r9, r0
   132a0:	andeq	r7, r0, r0, lsl #25
   132a4:	andeq	r7, r0, r8, ror ip
   132a8:	andeq	r7, r0, r8, ror #24
   132ac:	andeq	r7, r0, r4, ror #24
   132b0:	push	{r4, r5, r6, lr}
   132b4:	mov	r6, r0
   132b8:	mov	r5, r1
   132bc:	bl	12d40 <close_stdout@@Base+0x370>
   132c0:	ldr	r3, [r0]
   132c4:	mov	r4, r0
   132c8:	cmp	r3, #0
   132cc:	bne	132d8 <close_stdout@@Base+0x908>
   132d0:	b	13304 <close_stdout@@Base+0x934>
   132d4:	ldr	r3, [r4]
   132d8:	cmp	r5, r3
   132dc:	mov	r1, r3
   132e0:	mov	r0, r5
   132e4:	beq	13310 <close_stdout@@Base+0x940>
   132e8:	ldr	r3, [r6, #28]
   132ec:	blx	r3
   132f0:	cmp	r0, #0
   132f4:	bne	1330c <close_stdout@@Base+0x93c>
   132f8:	ldr	r4, [r4, #4]
   132fc:	cmp	r4, #0
   13300:	bne	132d4 <close_stdout@@Base+0x904>
   13304:	mov	r0, #0
   13308:	pop	{r4, r5, r6, pc}
   1330c:	ldr	r3, [r4]
   13310:	mov	r0, r3
   13314:	pop	{r4, r5, r6, pc}
   13318:	push	{r3, lr}
   1331c:	ldr	r3, [r0, #16]
   13320:	cmp	r3, #0
   13324:	beq	13364 <close_stdout@@Base+0x994>
   13328:	ldr	r3, [r0]
   1332c:	ldr	r2, [r0, #4]
   13330:	cmp	r3, r2
   13334:	bcs	13360 <close_stdout@@Base+0x990>
   13338:	ldr	r0, [r3]
   1333c:	cmp	r0, #0
   13340:	beq	13354 <close_stdout@@Base+0x984>
   13344:	b	1336c <close_stdout@@Base+0x99c>
   13348:	ldr	r0, [r3]
   1334c:	cmp	r0, #0
   13350:	popne	{r3, pc}
   13354:	add	r3, r3, #8
   13358:	cmp	r3, r2
   1335c:	bcc	13348 <close_stdout@@Base+0x978>
   13360:	bl	11578 <abort@plt>
   13364:	mov	r0, r3
   13368:	pop	{r3, pc}
   1336c:	pop	{r3, pc}
   13370:	push	{r3, r4, r5, lr}
   13374:	mov	r5, r0
   13378:	mov	r4, r1
   1337c:	bl	12d40 <close_stdout@@Base+0x370>
   13380:	mov	r2, r0
   13384:	mov	r3, r0
   13388:	b	13394 <close_stdout@@Base+0x9c4>
   1338c:	cmp	r3, #0
   13390:	beq	133ac <close_stdout@@Base+0x9dc>
   13394:	ldr	ip, [r3]
   13398:	ldr	r3, [r3, #4]
   1339c:	cmp	ip, r4
   133a0:	bne	1338c <close_stdout@@Base+0x9bc>
   133a4:	cmp	r3, #0
   133a8:	bne	133d4 <close_stdout@@Base+0xa04>
   133ac:	ldr	r3, [r5, #4]
   133b0:	b	133c0 <close_stdout@@Base+0x9f0>
   133b4:	ldr	r0, [r2]
   133b8:	cmp	r0, #0
   133bc:	popne	{r3, r4, r5, pc}
   133c0:	add	r2, r2, #8
   133c4:	cmp	r2, r3
   133c8:	bcc	133b4 <close_stdout@@Base+0x9e4>
   133cc:	mov	r0, #0
   133d0:	pop	{r3, r4, r5, pc}
   133d4:	ldr	r0, [r3]
   133d8:	pop	{r3, r4, r5, pc}
   133dc:	push	{r4, r5, r6, r7}
   133e0:	mov	r6, r0
   133e4:	ldm	r0, {r5, ip}
   133e8:	cmp	ip, r5
   133ec:	bls	13470 <close_stdout@@Base+0xaa0>
   133f0:	add	r5, r5, #8
   133f4:	mov	r0, #0
   133f8:	ldr	r3, [r5, #-8]
   133fc:	mov	r7, r5
   13400:	cmp	r3, #0
   13404:	beq	13450 <close_stdout@@Base+0xa80>
   13408:	cmp	r2, r0
   1340c:	bls	1345c <close_stdout@@Base+0xa8c>
   13410:	str	r3, [r1, r0, lsl #2]
   13414:	add	r4, r0, #1
   13418:	ldr	r3, [r5, #-4]
   1341c:	add	ip, r1, r0, lsl #2
   13420:	cmp	r3, #0
   13424:	beq	13464 <close_stdout@@Base+0xa94>
   13428:	mov	r0, r4
   1342c:	cmp	r0, r2
   13430:	beq	1345c <close_stdout@@Base+0xa8c>
   13434:	ldr	r4, [r3]
   13438:	add	r0, r0, #1
   1343c:	str	r4, [ip, #4]!
   13440:	ldr	r3, [r3, #4]
   13444:	cmp	r3, #0
   13448:	bne	1342c <close_stdout@@Base+0xa5c>
   1344c:	ldr	ip, [r6, #4]
   13450:	cmp	ip, r7
   13454:	add	r5, r5, #8
   13458:	bhi	133f8 <close_stdout@@Base+0xa28>
   1345c:	pop	{r4, r5, r6, r7}
   13460:	bx	lr
   13464:	ldr	ip, [r6, #4]
   13468:	mov	r0, r4
   1346c:	b	13450 <close_stdout@@Base+0xa80>
   13470:	mov	r0, #0
   13474:	b	1345c <close_stdout@@Base+0xa8c>
   13478:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1347c:	mov	r7, r2
   13480:	ldr	r8, [r0]
   13484:	mov	r9, r0
   13488:	ldr	r2, [r0, #4]
   1348c:	mov	r6, r1
   13490:	mov	r5, #0
   13494:	cmp	r2, r8
   13498:	bls	134e8 <close_stdout@@Base+0xb18>
   1349c:	ldr	r3, [r8]
   134a0:	cmp	r3, #0
   134a4:	beq	134dc <close_stdout@@Base+0xb0c>
   134a8:	mov	r0, r3
   134ac:	mov	r4, r8
   134b0:	b	134b8 <close_stdout@@Base+0xae8>
   134b4:	ldr	r0, [r4]
   134b8:	mov	r1, r7
   134bc:	blx	r6
   134c0:	cmp	r0, #0
   134c4:	beq	134e8 <close_stdout@@Base+0xb18>
   134c8:	ldr	r4, [r4, #4]
   134cc:	add	r5, r5, #1
   134d0:	cmp	r4, #0
   134d4:	bne	134b4 <close_stdout@@Base+0xae4>
   134d8:	ldr	r2, [r9, #4]
   134dc:	add	r8, r8, #8
   134e0:	cmp	r2, r8
   134e4:	bhi	1349c <close_stdout@@Base+0xacc>
   134e8:	mov	r0, r5
   134ec:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   134f0:	push	{r3, r4, r5, lr}
   134f4:	mov	r5, r1
   134f8:	ldrb	r3, [r0]
   134fc:	cmp	r3, #0
   13500:	beq	13530 <close_stdout@@Base+0xb60>
   13504:	mov	r4, r0
   13508:	mov	r1, #0
   1350c:	rsb	r0, r1, r1, lsl #5
   13510:	mov	r1, r5
   13514:	add	r0, r3, r0
   13518:	bl	19eb4 <triple_free@@Base+0x6088>
   1351c:	ldrb	r3, [r4, #1]!
   13520:	cmp	r3, #0
   13524:	bne	1350c <close_stdout@@Base+0xb3c>
   13528:	mov	r0, r1
   1352c:	pop	{r3, r4, r5, pc}
   13530:	mov	r1, r3
   13534:	b	13528 <close_stdout@@Base+0xb58>
   13538:	push	{r4}		; (str r4, [sp, #-4]!)
   1353c:	mov	ip, r0
   13540:	ldr	r4, [pc, #24]	; 13560 <close_stdout@@Base+0xb90>
   13544:	add	r4, pc, r4
   13548:	ldm	r4!, {r0, r1, r2, r3}
   1354c:	ldr	r4, [r4]
   13550:	stmia	ip!, {r0, r1, r2, r3}
   13554:	str	r4, [ip]
   13558:	pop	{r4}		; (ldr r4, [sp], #4)
   1355c:	bx	lr
   13560:	andeq	r7, r0, ip, lsr r9
   13564:	push	{r4, r5, r6, r7, r8, lr}
   13568:	subs	r8, r2, #0
   1356c:	mov	r7, r0
   13570:	mov	r5, r1
   13574:	mov	r6, r3
   13578:	beq	1366c <close_stdout@@Base+0xc9c>
   1357c:	cmp	r6, #0
   13580:	beq	13660 <close_stdout@@Base+0xc90>
   13584:	mov	r0, #40	; 0x28
   13588:	bl	113d4 <malloc@plt>
   1358c:	subs	r4, r0, #0
   13590:	beq	13684 <close_stdout@@Base+0xcb4>
   13594:	cmp	r5, #0
   13598:	beq	13678 <close_stdout@@Base+0xca8>
   1359c:	mov	r0, r4
   135a0:	str	r5, [r0, #20]!
   135a4:	bl	12e70 <close_stdout@@Base+0x4a0>
   135a8:	cmp	r0, #0
   135ac:	beq	13650 <close_stdout@@Base+0xc80>
   135b0:	ldrb	r3, [r5, #16]
   135b4:	vldr	s15, [r5, #8]
   135b8:	cmp	r3, #0
   135bc:	bne	135e4 <close_stdout@@Base+0xc14>
   135c0:	vmov	s14, r7
   135c4:	vcvt.f32.u32	s13, s14
   135c8:	vldr	s14, [pc, #188]	; 1368c <close_stdout@@Base+0xcbc>
   135cc:	vdiv.f32	s15, s13, s15
   135d0:	vcmpe.f32	s15, s14
   135d4:	vmrs	APSR_nzcv, fpscr
   135d8:	bge	13648 <close_stdout@@Base+0xc78>
   135dc:	vcvt.u32.f32	s15, s15
   135e0:	vmov	r7, s15
   135e4:	mov	r0, r7
   135e8:	bl	12c70 <close_stdout@@Base+0x2a0>
   135ec:	cmn	r0, #-1073741823	; 0xc0000001
   135f0:	mov	r5, r0
   135f4:	bhi	13648 <close_stdout@@Base+0xc78>
   135f8:	cmp	r0, #0
   135fc:	str	r0, [r4, #8]
   13600:	beq	13650 <close_stdout@@Base+0xc80>
   13604:	mov	r1, #8
   13608:	bl	11260 <calloc@plt>
   1360c:	cmp	r0, #0
   13610:	str	r0, [r4]
   13614:	beq	13650 <close_stdout@@Base+0xc80>
   13618:	ldr	r3, [sp, #24]
   1361c:	mov	r2, #0
   13620:	add	r5, r0, r5, lsl #3
   13624:	str	r8, [r4, #24]
   13628:	str	r5, [r4, #4]
   1362c:	mov	r0, r4
   13630:	str	r6, [r4, #28]
   13634:	str	r3, [r4, #32]
   13638:	str	r2, [r4, #12]
   1363c:	str	r2, [r4, #16]
   13640:	str	r2, [r4, #36]	; 0x24
   13644:	pop	{r4, r5, r6, r7, r8, pc}
   13648:	mov	r3, #0
   1364c:	str	r3, [r4, #8]
   13650:	mov	r0, r4
   13654:	bl	112cc <free@plt>
   13658:	mov	r0, #0
   1365c:	pop	{r4, r5, r6, r7, r8, pc}
   13660:	ldr	r6, [pc, #40]	; 13690 <close_stdout@@Base+0xcc0>
   13664:	add	r6, pc, r6
   13668:	b	13584 <close_stdout@@Base+0xbb4>
   1366c:	ldr	r8, [pc, #32]	; 13694 <close_stdout@@Base+0xcc4>
   13670:	add	r8, pc, r8
   13674:	b	1357c <close_stdout@@Base+0xbac>
   13678:	ldr	r5, [pc, #24]	; 13698 <close_stdout@@Base+0xcc8>
   1367c:	add	r5, pc, r5
   13680:	b	1359c <close_stdout@@Base+0xbcc>
   13684:	mov	r0, r4
   13688:	pop	{r4, r5, r6, r7, r8, pc}
   1368c:	svcmi	0x00800000
   13690:			; <UNDEFINED> instruction: 0xfffff6c4
   13694:			; <UNDEFINED> instruction: 0xfffff6a4
   13698:	andeq	r7, r0, r4, lsl #16
   1369c:	push	{r4, r5, r6, r7, r8, lr}
   136a0:	mov	r5, r0
   136a4:	ldr	r7, [r0]
   136a8:	ldr	r3, [r0, #4]
   136ac:	cmp	r7, r3
   136b0:	addcc	r7, r7, #8
   136b4:	movcc	r6, #0
   136b8:	bcs	13738 <close_stdout@@Base+0xd68>
   136bc:	ldr	r2, [r7, #-8]
   136c0:	mov	r8, r7
   136c4:	cmp	r2, #0
   136c8:	beq	1372c <close_stdout@@Base+0xd5c>
   136cc:	ldr	r4, [r7, #-4]
   136d0:	cmp	r4, #0
   136d4:	beq	1370c <close_stdout@@Base+0xd3c>
   136d8:	ldr	r3, [r5, #32]
   136dc:	cmp	r3, #0
   136e0:	beq	136ec <close_stdout@@Base+0xd1c>
   136e4:	ldr	r0, [r4]
   136e8:	blx	r3
   136ec:	ldr	r3, [r4, #4]
   136f0:	str	r6, [r4]
   136f4:	ldr	r2, [r5, #36]	; 0x24
   136f8:	cmp	r3, #0
   136fc:	str	r2, [r4, #4]
   13700:	str	r4, [r5, #36]	; 0x24
   13704:	mov	r4, r3
   13708:	bne	136d8 <close_stdout@@Base+0xd08>
   1370c:	ldr	r3, [r5, #32]
   13710:	cmp	r3, #0
   13714:	beq	13720 <close_stdout@@Base+0xd50>
   13718:	ldr	r0, [r7, #-8]
   1371c:	blx	r3
   13720:	str	r6, [r7, #-8]
   13724:	str	r6, [r7, #-4]
   13728:	ldr	r3, [r5, #4]
   1372c:	cmp	r3, r8
   13730:	add	r7, r7, #8
   13734:	bhi	136bc <close_stdout@@Base+0xcec>
   13738:	mov	r3, #0
   1373c:	str	r3, [r5, #12]
   13740:	str	r3, [r5, #16]
   13744:	pop	{r4, r5, r6, r7, r8, pc}
   13748:	push	{r3, r4, r5, r6, r7, lr}
   1374c:	mov	r5, r0
   13750:	ldr	r3, [r0, #32]
   13754:	cmp	r3, #0
   13758:	beq	13768 <close_stdout@@Base+0xd98>
   1375c:	ldr	r3, [r0, #16]
   13760:	cmp	r3, #0
   13764:	bne	137e4 <close_stdout@@Base+0xe14>
   13768:	ldr	r3, [r5, #4]
   1376c:	ldr	r6, [r5]
   13770:	cmp	r6, r3
   13774:	bcs	137b0 <close_stdout@@Base+0xde0>
   13778:	add	r6, r6, #8
   1377c:	ldr	r0, [r6, #-4]
   13780:	mov	r7, r6
   13784:	cmp	r0, #0
   13788:	beq	137a4 <close_stdout@@Base+0xdd4>
   1378c:	ldr	r4, [r0, #4]
   13790:	bl	112cc <free@plt>
   13794:	cmp	r4, #0
   13798:	mov	r0, r4
   1379c:	bne	1378c <close_stdout@@Base+0xdbc>
   137a0:	ldr	r3, [r5, #4]
   137a4:	cmp	r7, r3
   137a8:	add	r6, r6, #8
   137ac:	bcc	1377c <close_stdout@@Base+0xdac>
   137b0:	ldr	r0, [r5, #36]	; 0x24
   137b4:	cmp	r0, #0
   137b8:	beq	137d0 <close_stdout@@Base+0xe00>
   137bc:	ldr	r4, [r0, #4]
   137c0:	bl	112cc <free@plt>
   137c4:	cmp	r4, #0
   137c8:	mov	r0, r4
   137cc:	bne	137bc <close_stdout@@Base+0xdec>
   137d0:	ldr	r0, [r5]
   137d4:	bl	112cc <free@plt>
   137d8:	mov	r0, r5
   137dc:	pop	{r3, r4, r5, r6, r7, lr}
   137e0:	b	112cc <free@plt>
   137e4:	ldr	r6, [r0]
   137e8:	ldr	r3, [r0, #4]
   137ec:	cmp	r6, r3
   137f0:	bcs	137b0 <close_stdout@@Base+0xde0>
   137f4:	ldr	r0, [r6]
   137f8:	cmp	r0, #0
   137fc:	movne	r4, r6
   13800:	bne	1380c <close_stdout@@Base+0xe3c>
   13804:	b	13824 <close_stdout@@Base+0xe54>
   13808:	ldr	r0, [r4]
   1380c:	ldr	r3, [r5, #32]
   13810:	blx	r3
   13814:	ldr	r4, [r4, #4]
   13818:	cmp	r4, #0
   1381c:	bne	13808 <close_stdout@@Base+0xe38>
   13820:	ldr	r3, [r5, #4]
   13824:	add	r6, r6, #8
   13828:	cmp	r3, r6
   1382c:	bhi	137f4 <close_stdout@@Base+0xe24>
   13830:	b	1376c <close_stdout@@Base+0xd9c>
   13834:	ldr	r3, [pc, #392]	; 139c4 <close_stdout@@Base+0xff4>
   13838:	ldr	r2, [pc, #392]	; 139c8 <close_stdout@@Base+0xff8>
   1383c:	add	r3, pc, r3
   13840:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13844:	sub	sp, sp, #52	; 0x34
   13848:	ldr	r5, [r0, #20]
   1384c:	mov	r4, r0
   13850:	ldr	r6, [r3, r2]
   13854:	vldr	s15, [r5, #8]
   13858:	ldrb	r2, [r5, #16]
   1385c:	ldr	r3, [r6]
   13860:	cmp	r2, #0
   13864:	str	r3, [sp, #44]	; 0x2c
   13868:	bne	13890 <close_stdout@@Base+0xec0>
   1386c:	vmov	s14, r1
   13870:	vcvt.f32.u32	s13, s14
   13874:	vldr	s14, [pc, #324]	; 139c0 <close_stdout@@Base+0xff0>
   13878:	vdiv.f32	s15, s13, s15
   1387c:	vcmpe.f32	s15, s14
   13880:	vmrs	APSR_nzcv, fpscr
   13884:	bge	13988 <close_stdout@@Base+0xfb8>
   13888:	vcvt.u32.f32	s15, s15
   1388c:	vmov	r1, s15
   13890:	mov	r0, r1
   13894:	bl	12c70 <close_stdout@@Base+0x2a0>
   13898:	sub	r3, r0, #1
   1389c:	mov	r7, r0
   138a0:	cmn	r3, #-1073741822	; 0xc0000002
   138a4:	bhi	13988 <close_stdout@@Base+0xfb8>
   138a8:	ldr	r3, [r4, #8]
   138ac:	cmp	r3, r0
   138b0:	beq	13968 <close_stdout@@Base+0xf98>
   138b4:	mov	r1, #8
   138b8:	bl	11260 <calloc@plt>
   138bc:	cmp	r0, #0
   138c0:	mov	r3, r0
   138c4:	str	r0, [sp, #4]
   138c8:	beq	13988 <close_stdout@@Base+0xfb8>
   138cc:	ldr	fp, [r4, #24]
   138d0:	add	r8, sp, #4
   138d4:	ldr	sl, [r4, #28]
   138d8:	mov	ip, #0
   138dc:	ldr	r9, [r4, #32]
   138e0:	mov	r0, r8
   138e4:	ldr	lr, [r4, #36]	; 0x24
   138e8:	mov	r2, ip
   138ec:	mov	r1, r4
   138f0:	add	r3, r3, r7, lsl #3
   138f4:	str	r5, [sp, #24]
   138f8:	str	r7, [sp, #12]
   138fc:	str	r3, [sp, #8]
   13900:	str	fp, [sp, #28]
   13904:	str	sl, [sp, #32]
   13908:	str	r9, [sp, #36]	; 0x24
   1390c:	str	lr, [sp, #40]	; 0x28
   13910:	str	ip, [sp, #16]
   13914:	str	ip, [sp, #20]
   13918:	bl	12f30 <close_stdout@@Base+0x560>
   1391c:	subs	r5, r0, #0
   13920:	bne	13990 <close_stdout@@Base+0xfc0>
   13924:	ldr	r3, [sp, #40]	; 0x28
   13928:	mov	r0, r4
   1392c:	mov	r1, r8
   13930:	mov	r2, #1
   13934:	str	r3, [r4, #36]	; 0x24
   13938:	bl	12f30 <close_stdout@@Base+0x560>
   1393c:	cmp	r0, #0
   13940:	beq	139bc <close_stdout@@Base+0xfec>
   13944:	mov	r0, r4
   13948:	mov	r1, r8
   1394c:	mov	r2, r5
   13950:	bl	12f30 <close_stdout@@Base+0x560>
   13954:	cmp	r0, #0
   13958:	beq	139bc <close_stdout@@Base+0xfec>
   1395c:	ldr	r0, [sp, #4]
   13960:	bl	112cc <free@plt>
   13964:	b	1396c <close_stdout@@Base+0xf9c>
   13968:	mov	r5, #1
   1396c:	ldr	r1, [sp, #44]	; 0x2c
   13970:	mov	r0, r5
   13974:	ldr	r3, [r6]
   13978:	cmp	r1, r3
   1397c:	bne	139b8 <close_stdout@@Base+0xfe8>
   13980:	add	sp, sp, #52	; 0x34
   13984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13988:	mov	r5, #0
   1398c:	b	1396c <close_stdout@@Base+0xf9c>
   13990:	ldr	r0, [r4]
   13994:	bl	112cc <free@plt>
   13998:	add	r0, sp, #8
   1399c:	ldr	ip, [sp, #4]
   139a0:	ldm	r0, {r0, r1, r2}
   139a4:	ldr	r3, [sp, #40]	; 0x28
   139a8:	str	ip, [r4]
   139ac:	stmib	r4, {r0, r1, r2}
   139b0:	str	r3, [r4, #36]	; 0x24
   139b4:	b	1396c <close_stdout@@Base+0xf9c>
   139b8:	bl	11314 <__stack_chk_fail@plt>
   139bc:	bl	11578 <abort@plt>
   139c0:	svcmi	0x00800000
   139c4:			; <UNDEFINED> instruction: 0x000187bc
   139c8:	andeq	r0, r0, r0, lsr r1
   139cc:	ldr	r3, [pc, #428]	; 13b80 <close_stdout@@Base+0x11b0>
   139d0:	ldr	ip, [pc, #428]	; 13b84 <close_stdout@@Base+0x11b4>
   139d4:	add	r3, pc, r3
   139d8:	push	{r4, r5, r6, r7, r8, lr}
   139dc:	subs	r8, r1, #0
   139e0:	ldr	r4, [r3, ip]
   139e4:	sub	sp, sp, #8
   139e8:	mov	r5, r2
   139ec:	mov	r6, r0
   139f0:	ldr	r3, [r4]
   139f4:	str	r3, [sp, #4]
   139f8:	beq	13b38 <close_stdout@@Base+0x1168>
   139fc:	mov	r3, #0
   13a00:	mov	r2, sp
   13a04:	bl	12d74 <close_stdout@@Base+0x3a4>
   13a08:	cmp	r0, #0
   13a0c:	beq	13a38 <close_stdout@@Base+0x1068>
   13a10:	cmp	r5, #0
   13a14:	moveq	r0, r5
   13a18:	strne	r0, [r5]
   13a1c:	movne	r0, #0
   13a20:	ldr	r2, [sp, #4]
   13a24:	ldr	r3, [r4]
   13a28:	cmp	r2, r3
   13a2c:	bne	13b78 <close_stdout@@Base+0x11a8>
   13a30:	add	sp, sp, #8
   13a34:	pop	{r4, r5, r6, r7, r8, pc}
   13a38:	vldr	s11, [r6, #8]
   13a3c:	vcvt.f32.u32	s14, s11
   13a40:	ldr	r3, [r6, #20]
   13a44:	vldr	s15, [r3, #8]
   13a48:	vldr	s13, [r6, #12]
   13a4c:	vmul.f32	s15, s14, s15
   13a50:	vcvt.f32.u32	s14, s13
   13a54:	vcmpe.f32	s14, s15
   13a58:	vmrs	APSR_nzcv, fpscr
   13a5c:	bgt	13aac <close_stdout@@Base+0x10dc>
   13a60:	ldr	r3, [sp]
   13a64:	ldr	r2, [r3]
   13a68:	cmp	r2, #0
   13a6c:	beq	13b3c <close_stdout@@Base+0x116c>
   13a70:	ldr	r3, [r6, #36]	; 0x24
   13a74:	cmp	r3, #0
   13a78:	beq	13b60 <close_stdout@@Base+0x1190>
   13a7c:	ldr	r2, [r3, #4]
   13a80:	str	r2, [r6, #36]	; 0x24
   13a84:	str	r8, [r3]
   13a88:	mov	r0, #1
   13a8c:	ldr	r2, [sp]
   13a90:	ldr	r1, [r2, #4]
   13a94:	str	r1, [r3, #4]
   13a98:	str	r3, [r2, #4]
   13a9c:	ldr	r3, [r6, #16]
   13aa0:	add	r3, r3, r0
   13aa4:	str	r3, [r6, #16]
   13aa8:	b	13a20 <close_stdout@@Base+0x1050>
   13aac:	add	r0, r6, #20
   13ab0:	bl	12e70 <close_stdout@@Base+0x4a0>
   13ab4:	vldr	s11, [r6, #8]
   13ab8:	vcvt.f32.u32	s15, s11
   13abc:	ldr	r3, [r6, #20]
   13ac0:	vldr	s14, [r3, #8]
   13ac4:	vldr	s11, [r6, #12]
   13ac8:	vmul.f32	s13, s14, s15
   13acc:	vcvt.f32.u32	s12, s11
   13ad0:	vcmpe.f32	s12, s13
   13ad4:	vmrs	APSR_nzcv, fpscr
   13ad8:	ble	13a60 <close_stdout@@Base+0x1090>
   13adc:	ldrb	r2, [r3, #16]
   13ae0:	cmp	r2, #0
   13ae4:	vldreq	s13, [r3, #12]
   13ae8:	vldrne	s14, [r3, #12]
   13aec:	vmuleq.f32	s15, s15, s13
   13af0:	vmul.f32	s15, s14, s15
   13af4:	vldr	s14, [pc, #128]	; 13b7c <close_stdout@@Base+0x11ac>
   13af8:	vcmpe.f32	s15, s14
   13afc:	vmrs	APSR_nzcv, fpscr
   13b00:	bge	13b70 <close_stdout@@Base+0x11a0>
   13b04:	vcvt.u32.f32	s15, s15
   13b08:	mov	r0, r6
   13b0c:	vmov	r1, s15
   13b10:	bl	13834 <close_stdout@@Base+0xe64>
   13b14:	cmp	r0, #0
   13b18:	beq	13b70 <close_stdout@@Base+0x11a0>
   13b1c:	mov	r2, sp
   13b20:	mov	r0, r6
   13b24:	mov	r1, r8
   13b28:	mov	r3, #0
   13b2c:	bl	12d74 <close_stdout@@Base+0x3a4>
   13b30:	cmp	r0, #0
   13b34:	beq	13a60 <close_stdout@@Base+0x1090>
   13b38:	bl	11578 <abort@plt>
   13b3c:	str	r8, [r3]
   13b40:	mov	r0, #1
   13b44:	ldr	r2, [r6, #16]
   13b48:	ldr	r3, [r6, #12]
   13b4c:	add	r2, r2, r0
   13b50:	str	r2, [r6, #16]
   13b54:	add	r3, r3, r0
   13b58:	str	r3, [r6, #12]
   13b5c:	b	13a20 <close_stdout@@Base+0x1050>
   13b60:	mov	r0, #8
   13b64:	bl	113d4 <malloc@plt>
   13b68:	subs	r3, r0, #0
   13b6c:	bne	13a84 <close_stdout@@Base+0x10b4>
   13b70:	mvn	r0, #0
   13b74:	b	13a20 <close_stdout@@Base+0x1050>
   13b78:	bl	11314 <__stack_chk_fail@plt>
   13b7c:	svcmi	0x00800000
   13b80:	andeq	r8, r1, r4, lsr #12
   13b84:	andeq	r0, r0, r0, lsr r1
   13b88:	b	139cc <close_stdout@@Base+0xffc>
   13b8c:	ldr	r3, [pc, #100]	; 13bf8 <close_stdout@@Base+0x1228>
   13b90:	ldr	ip, [pc, #100]	; 13bfc <close_stdout@@Base+0x122c>
   13b94:	add	r3, pc, r3
   13b98:	push	{r4, r5, lr}
   13b9c:	sub	sp, sp, #12
   13ba0:	ldr	r4, [r3, ip]
   13ba4:	mov	r5, r1
   13ba8:	mov	r2, sp
   13bac:	ldr	r3, [r4]
   13bb0:	str	r3, [sp, #4]
   13bb4:	bl	139cc <close_stdout@@Base+0xffc>
   13bb8:	cmn	r0, #1
   13bbc:	beq	13bec <close_stdout@@Base+0x121c>
   13bc0:	cmp	r0, #0
   13bc4:	movne	r0, r5
   13bc8:	beq	13be4 <close_stdout@@Base+0x1214>
   13bcc:	ldr	r2, [sp, #4]
   13bd0:	ldr	r3, [r4]
   13bd4:	cmp	r2, r3
   13bd8:	bne	13bf4 <close_stdout@@Base+0x1224>
   13bdc:	add	sp, sp, #12
   13be0:	pop	{r4, r5, pc}
   13be4:	ldr	r0, [sp]
   13be8:	b	13bcc <close_stdout@@Base+0x11fc>
   13bec:	mov	r0, #0
   13bf0:	b	13bcc <close_stdout@@Base+0x11fc>
   13bf4:	bl	11314 <__stack_chk_fail@plt>
   13bf8:	andeq	r8, r1, r4, ror #8
   13bfc:	andeq	r0, r0, r0, lsr r1
   13c00:	ldr	ip, [pc, #304]	; 13d38 <close_stdout@@Base+0x1368>
   13c04:	mov	r3, #1
   13c08:	push	{r4, r5, r6, r7, lr}
   13c0c:	add	ip, pc, ip
   13c10:	ldr	lr, [pc, #292]	; 13d3c <close_stdout@@Base+0x136c>
   13c14:	sub	sp, sp, #12
   13c18:	mov	r4, r0
   13c1c:	mov	r2, sp
   13c20:	ldr	r5, [ip, lr]
   13c24:	ldr	ip, [r5]
   13c28:	str	ip, [sp, #4]
   13c2c:	bl	12d74 <close_stdout@@Base+0x3a4>
   13c30:	subs	r6, r0, #0
   13c34:	beq	13c54 <close_stdout@@Base+0x1284>
   13c38:	ldr	r3, [sp]
   13c3c:	ldr	r2, [r4, #16]
   13c40:	sub	r2, r2, #1
   13c44:	str	r2, [r4, #16]
   13c48:	ldr	r3, [r3]
   13c4c:	cmp	r3, #0
   13c50:	beq	13c70 <close_stdout@@Base+0x12a0>
   13c54:	ldr	r2, [sp, #4]
   13c58:	mov	r0, r6
   13c5c:	ldr	r3, [r5]
   13c60:	cmp	r2, r3
   13c64:	bne	13d34 <close_stdout@@Base+0x1364>
   13c68:	add	sp, sp, #12
   13c6c:	pop	{r4, r5, r6, r7, pc}
   13c70:	vldr	s12, [r4, #8]
   13c74:	vcvt.f32.u32	s14, s12
   13c78:	ldr	r3, [r4, #12]
   13c7c:	ldr	r2, [r4, #20]
   13c80:	sub	r3, r3, #1
   13c84:	str	r3, [r4, #12]
   13c88:	vldr	s15, [r2]
   13c8c:	vmov	s13, r3
   13c90:	vmul.f32	s15, s14, s15
   13c94:	vcvt.f32.u32	s14, s13
   13c98:	vcmpe.f32	s14, s15
   13c9c:	vmrs	APSR_nzcv, fpscr
   13ca0:	bpl	13c54 <close_stdout@@Base+0x1284>
   13ca4:	add	r0, r4, #20
   13ca8:	bl	12e70 <close_stdout@@Base+0x4a0>
   13cac:	vldr	s12, [r4, #8]
   13cb0:	vcvt.f32.u32	s15, s12
   13cb4:	ldr	r3, [r4, #20]
   13cb8:	vldr	s14, [r3]
   13cbc:	vldr	s12, [r4, #12]
   13cc0:	vmul.f32	s14, s15, s14
   13cc4:	vcvt.f32.u32	s13, s12
   13cc8:	vcmpe.f32	s13, s14
   13ccc:	vmrs	APSR_nzcv, fpscr
   13cd0:	bpl	13c54 <close_stdout@@Base+0x1284>
   13cd4:	vldr	s14, [r3, #4]
   13cd8:	vmul.f32	s15, s15, s14
   13cdc:	ldrb	r2, [r3, #16]
   13ce0:	mov	r0, r4
   13ce4:	cmp	r2, #0
   13ce8:	vldreq	s14, [r3, #8]
   13cec:	vmuleq.f32	s15, s15, s14
   13cf0:	vcvt.u32.f32	s15, s15
   13cf4:	vmov	r1, s15
   13cf8:	bl	13834 <close_stdout@@Base+0xe64>
   13cfc:	cmp	r0, #0
   13d00:	bne	13c54 <close_stdout@@Base+0x1284>
   13d04:	ldr	r0, [r4, #36]	; 0x24
   13d08:	cmp	r0, #0
   13d0c:	bne	13d18 <close_stdout@@Base+0x1348>
   13d10:	b	13d28 <close_stdout@@Base+0x1358>
   13d14:	mov	r0, r7
   13d18:	ldr	r7, [r0, #4]
   13d1c:	bl	112cc <free@plt>
   13d20:	cmp	r7, #0
   13d24:	bne	13d14 <close_stdout@@Base+0x1344>
   13d28:	mov	r3, #0
   13d2c:	str	r3, [r4, #36]	; 0x24
   13d30:	b	13c54 <close_stdout@@Base+0x1284>
   13d34:	bl	11314 <__stack_chk_fail@plt>
   13d38:	andeq	r8, r1, ip, ror #7
   13d3c:	andeq	r0, r0, r0, lsr r1

00013d40 <triple_hash@@Base>:
   13d40:	push	{r3, r4, r5, r6, r7, lr}
   13d44:	mov	r4, r0
   13d48:	ldr	r0, [r0]
   13d4c:	mov	r6, r1
   13d50:	bl	17514 <triple_free@@Base+0x36e8>
   13d54:	ldrd	r4, [r4, #8]
   13d58:	mov	r2, r6
   13d5c:	mov	r3, #0
   13d60:	mov	r1, r5
   13d64:	mov	r7, r5
   13d68:	eor	r6, r4, r0
   13d6c:	mov	r0, r6
   13d70:	bl	19ed4 <triple_free@@Base+0x60a8>
   13d74:	mov	r0, r2
   13d78:	pop	{r3, r4, r5, r6, r7, pc}
   13d7c:	push	{r3, lr}
   13d80:	mov	r2, r1
   13d84:	mov	r3, #0
   13d88:	ldrd	r0, [r0, #8]
   13d8c:	bl	19ed4 <triple_free@@Base+0x60a8>
   13d90:	mov	r0, r2
   13d94:	pop	{r3, pc}
   13d98:	push	{r4, r5}
   13d9c:	ldrd	r4, [r0, #8]
   13da0:	ldrd	r2, [r1, #8]
   13da4:	cmp	r5, r3
   13da8:	cmpeq	r4, r2
   13dac:	beq	13dbc <triple_hash@@Base+0x7c>
   13db0:	mov	r0, #0
   13db4:	pop	{r4, r5}
   13db8:	bx	lr
   13dbc:	ldrd	r4, [r0, #16]
   13dc0:	ldrd	r2, [r1, #16]
   13dc4:	cmp	r5, r3
   13dc8:	cmpeq	r4, r2
   13dcc:	bne	13db0 <triple_hash@@Base+0x70>
   13dd0:	ldr	r0, [r0]
   13dd4:	ldr	r1, [r1]
   13dd8:	pop	{r4, r5}
   13ddc:	b	1626c <triple_free@@Base+0x2440>

00013de0 <triple_compare_ino_str@@Base>:
   13de0:	push	{r3, r4, r5, lr}
   13de4:	ldrd	r4, [r0, #8]
   13de8:	ldrd	r2, [r1, #8]
   13dec:	cmp	r5, r3
   13df0:	cmpeq	r4, r2
   13df4:	beq	13e00 <triple_compare_ino_str@@Base+0x20>
   13df8:	mov	r0, #0
   13dfc:	pop	{r3, r4, r5, pc}
   13e00:	ldrd	r4, [r0, #16]
   13e04:	ldrd	r2, [r1, #16]
   13e08:	cmp	r5, r3
   13e0c:	cmpeq	r4, r2
   13e10:	bne	13df8 <triple_compare_ino_str@@Base+0x18>
   13e14:	ldr	r0, [r0]
   13e18:	ldr	r1, [r1]
   13e1c:	bl	1129c <strcmp@plt>
   13e20:	rsbs	r0, r0, #1
   13e24:	movcc	r0, #0
   13e28:	pop	{r3, r4, r5, pc}

00013e2c <triple_free@@Base>:
   13e2c:	push	{r4, lr}
   13e30:	mov	r4, r0
   13e34:	ldr	r0, [r0]
   13e38:	bl	112cc <free@plt>
   13e3c:	mov	r0, r4
   13e40:	pop	{r4, lr}
   13e44:	b	112cc <free@plt>
   13e48:	push	{r3, r4, r5, r6, r7, lr}
   13e4c:	subs	r4, r0, #0
   13e50:	ldr	r5, [pc, #172]	; 13f04 <triple_free@@Base+0xd8>
   13e54:	add	r5, pc, r5
   13e58:	beq	13ee0 <triple_free@@Base+0xb4>
   13e5c:	mov	r1, #47	; 0x2f
   13e60:	bl	1153c <strrchr@plt>
   13e64:	subs	r6, r0, #0
   13e68:	beq	13ec4 <triple_free@@Base+0x98>
   13e6c:	add	r7, r6, #1
   13e70:	rsb	r3, r4, r7
   13e74:	cmp	r3, #6
   13e78:	ble	13ec4 <triple_free@@Base+0x98>
   13e7c:	ldr	r1, [pc, #132]	; 13f08 <triple_free@@Base+0xdc>
   13e80:	sub	r0, r6, #6
   13e84:	mov	r2, #7
   13e88:	add	r1, pc, r1
   13e8c:	bl	1156c <strncmp@plt>
   13e90:	cmp	r0, #0
   13e94:	bne	13ec4 <triple_free@@Base+0x98>
   13e98:	ldr	r1, [pc, #108]	; 13f0c <triple_free@@Base+0xe0>
   13e9c:	mov	r0, r7
   13ea0:	mov	r2, #3
   13ea4:	add	r1, pc, r1
   13ea8:	bl	1156c <strncmp@plt>
   13eac:	cmp	r0, #0
   13eb0:	movne	r4, r7
   13eb4:	ldreq	r3, [pc, #84]	; 13f10 <triple_free@@Base+0xe4>
   13eb8:	addeq	r4, r6, #4
   13ebc:	ldreq	r3, [r5, r3]
   13ec0:	streq	r4, [r3]
   13ec4:	ldr	r2, [pc, #72]	; 13f14 <triple_free@@Base+0xe8>
   13ec8:	ldr	r3, [pc, #72]	; 13f18 <triple_free@@Base+0xec>
   13ecc:	ldr	r2, [r5, r2]
   13ed0:	str	r4, [r2]
   13ed4:	ldr	r3, [r5, r3]
   13ed8:	str	r4, [r3]
   13edc:	pop	{r3, r4, r5, r6, r7, pc}
   13ee0:	ldr	r3, [pc, #52]	; 13f1c <triple_free@@Base+0xf0>
   13ee4:	mov	r1, #1
   13ee8:	ldr	r0, [pc, #48]	; 13f20 <triple_free@@Base+0xf4>
   13eec:	mov	r2, #55	; 0x37
   13ef0:	ldr	r3, [r5, r3]
   13ef4:	add	r0, pc, r0
   13ef8:	ldr	r3, [r3]
   13efc:	bl	11368 <fwrite@plt>
   13f00:	bl	11578 <abort@plt>
   13f04:	andeq	r8, r1, r4, lsr #3
   13f08:	strheq	r7, [r0], -r0
   13f0c:	muleq	r0, ip, r0
   13f10:	andeq	r0, r0, ip, ror #2
   13f14:	andeq	r0, r0, r4, ror #2
   13f18:	andeq	r0, r0, r0, ror #2
   13f1c:	andeq	r0, r0, r0, asr #2
   13f20:	andeq	r7, r0, ip
   13f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f28:	sub	sp, sp, #156	; 0x9c
   13f2c:	ldr	r7, [pc, #2116]	; 14778 <triple_free@@Base+0x94c>
   13f30:	add	r2, sp, #120	; 0x78
   13f34:	ldr	r3, [pc, #2112]	; 1477c <triple_free@@Base+0x950>
   13f38:	mov	fp, r0
   13f3c:	add	r7, pc, r7
   13f40:	mov	r0, r1
   13f44:	mov	r1, #2
   13f48:	add	r6, sp, #40	; 0x28
   13f4c:	ldr	r3, [r7, r3]
   13f50:	add	r9, sp, #96	; 0x60
   13f54:	str	r2, [sp, #16]
   13f58:	mov	r4, #1
   13f5c:	mov	r5, #0
   13f60:	str	r3, [sp, #28]
   13f64:	add	r3, sp, #64	; 0x40
   13f68:	ldr	r2, [sp, #28]
   13f6c:	str	r3, [sp, #12]
   13f70:	ldr	r3, [r2]
   13f74:	str	r3, [sp, #148]	; 0x94
   13f78:	bl	16408 <triple_free@@Base+0x25dc>
   13f7c:	str	r0, [sp, #20]
   13f80:	ldrb	r3, [fp]
   13f84:	cmp	r3, #0
   13f88:	beq	14580 <triple_free@@Base+0x754>
   13f8c:	mov	r0, fp
   13f90:	ldr	r1, [sp, #20]
   13f94:	bl	184c8 <triple_free@@Base+0x469c>
   13f98:	subs	r8, r0, #0
   13f9c:	beq	14580 <triple_free@@Base+0x754>
   13fa0:	bl	11380 <__ctype_get_mb_cur_max@plt>
   13fa4:	cmp	r0, #1
   13fa8:	bls	14500 <triple_free@@Base+0x6d4>
   13fac:	cmp	fp, r8
   13fb0:	str	r5, [r6, #4]
   13fb4:	str	fp, [sp, #52]	; 0x34
   13fb8:	addcc	sl, sp, #64	; 0x40
   13fbc:	strb	r5, [sp, #36]	; 0x24
   13fc0:	str	r5, [r6]
   13fc4:	strb	r5, [sp, #48]	; 0x30
   13fc8:	strcc	r9, [sp, #24]
   13fcc:	bcs	145a0 <triple_free@@Base+0x774>
   13fd0:	ldrb	r3, [sp, #36]	; 0x24
   13fd4:	cmp	r3, #0
   13fd8:	bne	14038 <triple_free@@Base+0x20c>
   13fdc:	ldr	r2, [pc, #1948]	; 14780 <triple_free@@Base+0x954>
   13fe0:	ldrb	r3, [fp]
   13fe4:	ldr	r1, [r7, r2]
   13fe8:	and	r2, r3, #31
   13fec:	lsr	r3, r3, #5
   13ff0:	ldr	r3, [r1, r3, lsl #2]
   13ff4:	lsr	r3, r3, r2
   13ff8:	tst	r3, #1
   13ffc:	beq	14024 <triple_free@@Base+0x1f8>
   14000:	str	r4, [sp, #56]	; 0x38
   14004:	ldrb	r2, [fp]
   14008:	strb	r4, [sp, #60]	; 0x3c
   1400c:	strb	r4, [sp, #48]	; 0x30
   14010:	mov	r9, r2
   14014:	cmp	r9, #0
   14018:	str	r2, [sp, #64]	; 0x40
   1401c:	bne	140bc <triple_free@@Base+0x290>
   14020:	bl	11578 <abort@plt>
   14024:	mov	r0, r6
   14028:	bl	112f0 <mbsinit@plt>
   1402c:	cmp	r0, #0
   14030:	beq	14734 <triple_free@@Base+0x908>
   14034:	strb	r4, [sp, #36]	; 0x24
   14038:	bl	11380 <__ctype_get_mb_cur_max@plt>
   1403c:	mov	r1, r0
   14040:	mov	r0, fp
   14044:	bl	163dc <triple_free@@Base+0x25b0>
   14048:	mov	r1, fp
   1404c:	mov	r3, r6
   14050:	mov	r2, r0
   14054:	mov	r0, sl
   14058:	bl	113a4 <mbrtowc@plt>
   1405c:	cmn	r0, #1
   14060:	str	r0, [sp, #56]	; 0x38
   14064:	beq	144a8 <triple_free@@Base+0x67c>
   14068:	cmn	r0, #2
   1406c:	beq	144d8 <triple_free@@Base+0x6ac>
   14070:	cmp	r0, #0
   14074:	bne	144d0 <triple_free@@Base+0x6a4>
   14078:	ldr	fp, [sp, #52]	; 0x34
   1407c:	str	r4, [sp, #56]	; 0x38
   14080:	ldrb	r3, [fp]
   14084:	cmp	r3, #0
   14088:	bne	14758 <triple_free@@Base+0x92c>
   1408c:	ldr	r2, [sp, #64]	; 0x40
   14090:	cmp	r2, #0
   14094:	bne	14488 <triple_free@@Base+0x65c>
   14098:	mov	r9, r2
   1409c:	mov	r0, r6
   140a0:	strb	r4, [sp, #60]	; 0x3c
   140a4:	bl	112f0 <mbsinit@plt>
   140a8:	strb	r4, [sp, #48]	; 0x30
   140ac:	cmp	r0, #0
   140b0:	strbne	r5, [sp, #36]	; 0x24
   140b4:	cmp	r9, #0
   140b8:	beq	14020 <triple_free@@Base+0x1f4>
   140bc:	ldr	fp, [sp, #52]	; 0x34
   140c0:	ldr	r3, [sp, #56]	; 0x38
   140c4:	strb	r5, [sp, #48]	; 0x30
   140c8:	add	fp, fp, r3
   140cc:	ldrb	r3, [sp, #60]	; 0x3c
   140d0:	cmp	r8, fp
   140d4:	str	fp, [sp, #52]	; 0x34
   140d8:	bhi	13fd0 <triple_free@@Base+0x1a4>
   140dc:	cmp	r3, #0
   140e0:	mov	r2, r9
   140e4:	ldr	r9, [sp, #24]
   140e8:	beq	145a0 <triple_free@@Base+0x774>
   140ec:	mov	r0, r2
   140f0:	bl	1147c <iswalnum@plt>
   140f4:	rsbs	r0, r0, #1
   140f8:	movcc	r0, #0
   140fc:	str	r0, [sp, #24]
   14100:	strb	r5, [sp, #92]	; 0x5c
   14104:	ldrb	r2, [sp, #92]	; 0x5c
   14108:	ldr	fp, [sp, #20]
   1410c:	cmp	r2, #0
   14110:	str	r5, [r6, #4]
   14114:	str	r5, [r9, #4]
   14118:	str	r8, [sp, #52]	; 0x34
   1411c:	strb	r5, [sp, #36]	; 0x24
   14120:	str	r5, [r6]
   14124:	strb	r5, [sp, #48]	; 0x30
   14128:	str	fp, [sp, #108]	; 0x6c
   1412c:	str	r5, [r9]
   14130:	strb	r5, [sp, #104]	; 0x68
   14134:	bne	142f0 <triple_free@@Base+0x4c4>
   14138:	ldr	r1, [pc, #1600]	; 14780 <triple_free@@Base+0x954>
   1413c:	ldrb	r2, [fp]
   14140:	ldr	r0, [r7, r1]
   14144:	and	r1, r2, #31
   14148:	lsr	r2, r2, #5
   1414c:	ldr	r2, [r0, r2, lsl #2]
   14150:	lsr	r2, r2, r1
   14154:	tst	r2, #1
   14158:	beq	14450 <triple_free@@Base+0x624>
   1415c:	str	r4, [sp, #112]	; 0x70
   14160:	ldrb	r3, [fp]
   14164:	strb	r4, [sp, #116]	; 0x74
   14168:	mov	fp, r3
   1416c:	str	r3, [sp, #120]	; 0x78
   14170:	cmp	fp, #0
   14174:	strb	r4, [sp, #104]	; 0x68
   14178:	mov	r3, #1
   1417c:	bne	142a4 <triple_free@@Base+0x478>
   14180:	ldrb	ip, [sp, #48]	; 0x30
   14184:	cmp	ip, #0
   14188:	bne	144f4 <triple_free@@Base+0x6c8>
   1418c:	ldrb	r2, [sp, #36]	; 0x24
   14190:	ldr	sl, [sp, #52]	; 0x34
   14194:	cmp	r2, #0
   14198:	bne	14644 <triple_free@@Base+0x818>
   1419c:	ldr	r1, [pc, #1500]	; 14780 <triple_free@@Base+0x954>
   141a0:	ldrb	r2, [sl]
   141a4:	ldr	r0, [r7, r1]
   141a8:	and	r1, r2, #31
   141ac:	lsr	r2, r2, #5
   141b0:	ldr	r2, [r0, r2, lsl #2]
   141b4:	lsr	r2, r2, r1
   141b8:	tst	r2, #1
   141bc:	beq	14620 <triple_free@@Base+0x7f4>
   141c0:	str	r3, [sp, #56]	; 0x38
   141c4:	mov	ip, r3
   141c8:	ldrb	r2, [sl]
   141cc:	strb	r3, [sp, #60]	; 0x3c
   141d0:	mov	r3, r2
   141d4:	str	r2, [sp, #64]	; 0x40
   141d8:	strb	r4, [sp, #48]	; 0x30
   141dc:	cmp	ip, #0
   141e0:	beq	141ec <triple_free@@Base+0x3c0>
   141e4:	cmp	r3, #0
   141e8:	beq	14208 <triple_free@@Base+0x3dc>
   141ec:	ldrb	r2, [sp, #60]	; 0x3c
   141f0:	cmp	r2, #0
   141f4:	beq	14208 <triple_free@@Base+0x3dc>
   141f8:	mov	r0, r3
   141fc:	bl	1147c <iswalnum@plt>
   14200:	cmp	r0, #0
   14204:	bne	14214 <triple_free@@Base+0x3e8>
   14208:	ldr	r2, [sp, #24]
   1420c:	cmp	r2, #0
   14210:	bne	1472c <triple_free@@Base+0x900>
   14214:	ldr	r2, [pc, #1380]	; 14780 <triple_free@@Base+0x954>
   14218:	str	r5, [r6, #4]
   1421c:	str	r8, [sp, #52]	; 0x34
   14220:	strb	r5, [sp, #36]	; 0x24
   14224:	str	r5, [r6]
   14228:	strb	r5, [sp, #48]	; 0x30
   1422c:	ldrb	r3, [r8]
   14230:	ldr	r1, [r7, r2]
   14234:	and	r2, r3, #31
   14238:	lsr	r3, r3, #5
   1423c:	ldr	r3, [r1, r3, lsl #2]
   14240:	lsr	r3, r3, r2
   14244:	tst	r3, #1
   14248:	beq	145ac <triple_free@@Base+0x780>
   1424c:	str	r4, [sp, #56]	; 0x38
   14250:	ldrb	fp, [r8]
   14254:	strb	r4, [sp, #60]	; 0x3c
   14258:	str	fp, [sp, #64]	; 0x40
   1425c:	cmp	fp, #0
   14260:	strb	r4, [sp, #48]	; 0x30
   14264:	bne	14594 <triple_free@@Base+0x768>
   14268:	ldr	r0, [sp, #20]
   1426c:	bl	112cc <free@plt>
   14270:	ldr	r1, [sp, #28]
   14274:	ldr	r2, [sp, #148]	; 0x94
   14278:	mov	r0, fp
   1427c:	ldr	r3, [r1]
   14280:	cmp	r2, r3
   14284:	bne	14754 <triple_free@@Base+0x928>
   14288:	add	sp, sp, #156	; 0x9c
   1428c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14290:	ldr	r0, [sp, #108]	; 0x6c
   14294:	bl	1144c <strlen@plt>
   14298:	strb	r5, [sp, #116]	; 0x74
   1429c:	str	r0, [sp, #112]	; 0x70
   142a0:	strb	r4, [sp, #104]	; 0x68
   142a4:	ldrb	fp, [sp, #48]	; 0x30
   142a8:	cmp	fp, #0
   142ac:	beq	14354 <triple_free@@Base+0x528>
   142b0:	ldrb	fp, [sp, #60]	; 0x3c
   142b4:	cmp	fp, #0
   142b8:	bne	143a8 <triple_free@@Base+0x57c>
   142bc:	ldr	r1, [sp, #52]	; 0x34
   142c0:	ldr	r2, [sp, #56]	; 0x38
   142c4:	ldr	fp, [sp, #108]	; 0x6c
   142c8:	add	r1, r1, r2
   142cc:	ldr	r2, [sp, #112]	; 0x70
   142d0:	strb	r5, [sp, #48]	; 0x30
   142d4:	add	fp, fp, r2
   142d8:	ldrb	r2, [sp, #92]	; 0x5c
   142dc:	strb	r5, [sp, #104]	; 0x68
   142e0:	cmp	r2, #0
   142e4:	str	r1, [sp, #52]	; 0x34
   142e8:	str	fp, [sp, #108]	; 0x6c
   142ec:	beq	14138 <triple_free@@Base+0x30c>
   142f0:	bl	11380 <__ctype_get_mb_cur_max@plt>
   142f4:	mov	r1, r0
   142f8:	mov	r0, fp
   142fc:	bl	163dc <triple_free@@Base+0x25b0>
   14300:	mov	r1, fp
   14304:	mov	r3, r9
   14308:	mov	r2, r0
   1430c:	add	r0, sp, #120	; 0x78
   14310:	bl	113a4 <mbrtowc@plt>
   14314:	cmn	r0, #1
   14318:	str	r0, [sp, #112]	; 0x70
   1431c:	strbeq	r5, [sp, #116]	; 0x74
   14320:	streq	r4, [sp, #112]	; 0x70
   14324:	beq	142a0 <triple_free@@Base+0x474>
   14328:	cmn	r0, #2
   1432c:	beq	14290 <triple_free@@Base+0x464>
   14330:	cmp	r0, #0
   14334:	beq	14468 <triple_free@@Base+0x63c>
   14338:	ldr	fp, [sp, #120]	; 0x78
   1433c:	mov	r0, r9
   14340:	strb	r4, [sp, #116]	; 0x74
   14344:	bl	112f0 <mbsinit@plt>
   14348:	cmp	r0, #0
   1434c:	strbne	r5, [sp, #92]	; 0x5c
   14350:	b	14170 <triple_free@@Base+0x344>
   14354:	ldrb	r3, [sp, #36]	; 0x24
   14358:	ldr	sl, [sp, #52]	; 0x34
   1435c:	cmp	r3, #0
   14360:	bne	143cc <triple_free@@Base+0x5a0>
   14364:	ldr	r1, [pc, #1044]	; 14780 <triple_free@@Base+0x954>
   14368:	ldrb	r2, [sl]
   1436c:	ldr	r0, [r7, r1]
   14370:	and	r1, r2, #31
   14374:	lsr	r2, r2, #5
   14378:	ldr	r2, [r0, r2, lsl #2]
   1437c:	lsr	r2, r2, r1
   14380:	tst	r2, #1
   14384:	beq	143b8 <triple_free@@Base+0x58c>
   14388:	str	r4, [sp, #56]	; 0x38
   1438c:	mov	fp, #1
   14390:	ldrb	r3, [sl]
   14394:	strb	r4, [sp, #60]	; 0x3c
   14398:	str	r3, [sp, #64]	; 0x40
   1439c:	cmp	fp, #0
   143a0:	strb	r4, [sp, #48]	; 0x30
   143a4:	beq	142bc <triple_free@@Base+0x490>
   143a8:	ldr	r3, [sp, #64]	; 0x40
   143ac:	cmp	r3, #0
   143b0:	bne	142bc <triple_free@@Base+0x490>
   143b4:	b	14020 <triple_free@@Base+0x1f4>
   143b8:	mov	r0, r6
   143bc:	bl	112f0 <mbsinit@plt>
   143c0:	cmp	r0, #0
   143c4:	beq	14734 <triple_free@@Base+0x908>
   143c8:	strb	r4, [sp, #36]	; 0x24
   143cc:	bl	11380 <__ctype_get_mb_cur_max@plt>
   143d0:	mov	r1, r0
   143d4:	mov	r0, sl
   143d8:	bl	163dc <triple_free@@Base+0x25b0>
   143dc:	mov	r1, sl
   143e0:	mov	r3, r6
   143e4:	mov	r2, r0
   143e8:	add	r0, sp, #64	; 0x40
   143ec:	bl	113a4 <mbrtowc@plt>
   143f0:	cmn	r0, #1
   143f4:	str	r0, [sp, #56]	; 0x38
   143f8:	strbeq	r5, [sp, #60]	; 0x3c
   143fc:	streq	r4, [sp, #56]	; 0x38
   14400:	beq	1439c <triple_free@@Base+0x570>
   14404:	cmn	r0, #2
   14408:	beq	144bc <triple_free@@Base+0x690>
   1440c:	cmp	r0, #0
   14410:	bne	14434 <triple_free@@Base+0x608>
   14414:	ldr	r3, [sp, #52]	; 0x34
   14418:	str	r4, [sp, #56]	; 0x38
   1441c:	ldrb	r3, [r3]
   14420:	cmp	r3, #0
   14424:	bne	14758 <triple_free@@Base+0x92c>
   14428:	ldr	r3, [sp, #64]	; 0x40
   1442c:	cmp	r3, #0
   14430:	bne	14488 <triple_free@@Base+0x65c>
   14434:	mov	r0, r6
   14438:	strb	r4, [sp, #60]	; 0x3c
   1443c:	bl	112f0 <mbsinit@plt>
   14440:	mov	fp, #1
   14444:	cmp	r0, #0
   14448:	strbne	r5, [sp, #36]	; 0x24
   1444c:	b	1439c <triple_free@@Base+0x570>
   14450:	mov	r0, r9
   14454:	bl	112f0 <mbsinit@plt>
   14458:	cmp	r0, #0
   1445c:	beq	14734 <triple_free@@Base+0x908>
   14460:	strb	r4, [sp, #92]	; 0x5c
   14464:	b	142f0 <triple_free@@Base+0x4c4>
   14468:	ldr	r3, [sp, #108]	; 0x6c
   1446c:	str	r4, [sp, #112]	; 0x70
   14470:	ldrb	r3, [r3]
   14474:	cmp	r3, #0
   14478:	bne	14758 <triple_free@@Base+0x92c>
   1447c:	ldr	fp, [sp, #120]	; 0x78
   14480:	cmp	fp, #0
   14484:	beq	1433c <triple_free@@Base+0x510>
   14488:	ldr	r0, [pc, #756]	; 14784 <triple_free@@Base+0x958>
   1448c:	mov	r2, #179	; 0xb3
   14490:	ldr	r1, [pc, #752]	; 14788 <triple_free@@Base+0x95c>
   14494:	ldr	r3, [pc, #752]	; 1478c <triple_free@@Base+0x960>
   14498:	add	r0, pc, r0
   1449c:	add	r1, pc, r1
   144a0:	add	r3, pc, r3
   144a4:	bl	1159c <__assert_fail@plt>
   144a8:	str	r4, [sp, #56]	; 0x38
   144ac:	strb	r5, [sp, #60]	; 0x3c
   144b0:	ldr	r9, [sp, #64]	; 0x40
   144b4:	ldr	fp, [sp, #52]	; 0x34
   144b8:	b	140c0 <triple_free@@Base+0x294>
   144bc:	ldr	r0, [sp, #52]	; 0x34
   144c0:	bl	1144c <strlen@plt>
   144c4:	strb	r5, [sp, #60]	; 0x3c
   144c8:	str	r0, [sp, #56]	; 0x38
   144cc:	b	1439c <triple_free@@Base+0x570>
   144d0:	ldr	r9, [sp, #64]	; 0x40
   144d4:	b	1409c <triple_free@@Base+0x270>
   144d8:	ldr	fp, [sp, #52]	; 0x34
   144dc:	mov	r0, fp
   144e0:	bl	1144c <strlen@plt>
   144e4:	strb	r5, [sp, #60]	; 0x3c
   144e8:	ldr	r9, [sp, #64]	; 0x40
   144ec:	str	r0, [sp, #56]	; 0x38
   144f0:	b	140c0 <triple_free@@Base+0x294>
   144f4:	ldr	r3, [sp, #64]	; 0x40
   144f8:	ldrb	ip, [sp, #60]	; 0x3c
   144fc:	b	141dc <triple_free@@Base+0x3b0>
   14500:	cmp	fp, r8
   14504:	movcs	fp, #1
   14508:	bcs	14528 <triple_free@@Base+0x6fc>
   1450c:	bl	1141c <__ctype_b_loc@plt>
   14510:	ldrb	r3, [r8, #-1]
   14514:	lsl	r3, r3, #1
   14518:	ldr	r2, [r0]
   1451c:	ldrh	fp, [r2, r3]
   14520:	eor	fp, fp, #8
   14524:	ubfx	fp, fp, #3, #1
   14528:	ldr	r0, [sp, #20]
   1452c:	bl	1144c <strlen@plt>
   14530:	ldrb	r3, [r8, r0]
   14534:	cmp	r3, #0
   14538:	beq	1455c <triple_free@@Base+0x730>
   1453c:	str	r3, [sp, #8]
   14540:	bl	1141c <__ctype_b_loc@plt>
   14544:	ldr	r3, [sp, #8]
   14548:	lsl	r3, r3, #1
   1454c:	ldr	r2, [r0]
   14550:	ldrh	r3, [r2, r3]
   14554:	tst	r3, #8
   14558:	bne	14564 <triple_free@@Base+0x738>
   1455c:	cmp	fp, #0
   14560:	bne	1472c <triple_free@@Base+0x900>
   14564:	ldrb	r3, [r8]
   14568:	cmp	r3, #0
   1456c:	beq	14580 <triple_free@@Base+0x754>
   14570:	add	fp, r8, #1
   14574:	ldrb	r3, [fp]
   14578:	cmp	r3, #0
   1457c:	bne	13f8c <triple_free@@Base+0x160>
   14580:	mov	fp, #0
   14584:	b	14268 <triple_free@@Base+0x43c>
   14588:	ldr	r0, [sp, #52]	; 0x34
   1458c:	bl	1144c <strlen@plt>
   14590:	str	r0, [sp, #56]	; 0x38
   14594:	ldr	fp, [sp, #56]	; 0x38
   14598:	add	fp, r8, fp
   1459c:	b	13f80 <triple_free@@Base+0x154>
   145a0:	mov	r3, #1
   145a4:	str	r3, [sp, #24]
   145a8:	b	14100 <triple_free@@Base+0x2d4>
   145ac:	mov	r0, r6
   145b0:	bl	112f0 <mbsinit@plt>
   145b4:	cmp	r0, #0
   145b8:	beq	14734 <triple_free@@Base+0x908>
   145bc:	strb	r4, [sp, #36]	; 0x24
   145c0:	bl	11380 <__ctype_get_mb_cur_max@plt>
   145c4:	mov	r1, r0
   145c8:	mov	r0, r8
   145cc:	bl	163dc <triple_free@@Base+0x25b0>
   145d0:	mov	r1, r8
   145d4:	mov	r3, r6
   145d8:	mov	r2, r0
   145dc:	add	r0, sp, #64	; 0x40
   145e0:	bl	113a4 <mbrtowc@plt>
   145e4:	cmn	r0, #1
   145e8:	str	r0, [sp, #56]	; 0x38
   145ec:	streq	r4, [sp, #56]	; 0x38
   145f0:	beq	14594 <triple_free@@Base+0x768>
   145f4:	cmn	r0, #2
   145f8:	beq	14588 <triple_free@@Base+0x75c>
   145fc:	cmp	r0, #0
   14600:	beq	146b0 <triple_free@@Base+0x884>
   14604:	ldr	fp, [sp, #64]	; 0x40
   14608:	mov	r0, r6
   1460c:	strb	r4, [sp, #60]	; 0x3c
   14610:	bl	112f0 <mbsinit@plt>
   14614:	cmp	r0, #0
   14618:	strbne	r5, [sp, #36]	; 0x24
   1461c:	b	1425c <triple_free@@Base+0x430>
   14620:	mov	r0, r6
   14624:	str	r3, [sp, #8]
   14628:	str	ip, [sp, #4]
   1462c:	bl	112f0 <mbsinit@plt>
   14630:	ldr	r3, [sp, #8]
   14634:	ldr	ip, [sp, #4]
   14638:	cmp	r0, #0
   1463c:	beq	14734 <triple_free@@Base+0x908>
   14640:	strb	r3, [sp, #36]	; 0x24
   14644:	str	ip, [sp, #4]
   14648:	bl	11380 <__ctype_get_mb_cur_max@plt>
   1464c:	mov	r1, r0
   14650:	mov	r0, sl
   14654:	bl	163dc <triple_free@@Base+0x25b0>
   14658:	mov	r1, sl
   1465c:	mov	r3, r6
   14660:	mov	r2, r0
   14664:	add	r0, sp, #64	; 0x40
   14668:	bl	113a4 <mbrtowc@plt>
   1466c:	ldr	ip, [sp, #4]
   14670:	cmn	r0, #1
   14674:	str	r0, [sp, #56]	; 0x38
   14678:	beq	146fc <triple_free@@Base+0x8d0>
   1467c:	cmn	r0, #2
   14680:	beq	1470c <triple_free@@Base+0x8e0>
   14684:	cmp	r0, #0
   14688:	bne	146d4 <triple_free@@Base+0x8a8>
   1468c:	ldr	r3, [sp, #52]	; 0x34
   14690:	str	r4, [sp, #56]	; 0x38
   14694:	ldrb	r3, [r3]
   14698:	cmp	r3, #0
   1469c:	bne	14758 <triple_free@@Base+0x92c>
   146a0:	ldr	r3, [sp, #64]	; 0x40
   146a4:	cmp	r3, #0
   146a8:	beq	146d8 <triple_free@@Base+0x8ac>
   146ac:	b	14488 <triple_free@@Base+0x65c>
   146b0:	ldr	r3, [sp, #52]	; 0x34
   146b4:	str	r4, [sp, #56]	; 0x38
   146b8:	ldrb	r3, [r3]
   146bc:	cmp	r3, #0
   146c0:	bne	14758 <triple_free@@Base+0x92c>
   146c4:	ldr	fp, [sp, #64]	; 0x40
   146c8:	cmp	fp, #0
   146cc:	beq	14608 <triple_free@@Base+0x7dc>
   146d0:	b	14488 <triple_free@@Base+0x65c>
   146d4:	ldr	r3, [sp, #64]	; 0x40
   146d8:	mov	r0, r6
   146dc:	str	r3, [sp, #8]
   146e0:	strb	r4, [sp, #60]	; 0x3c
   146e4:	bl	112f0 <mbsinit@plt>
   146e8:	ldr	r3, [sp, #8]
   146ec:	mov	ip, #1
   146f0:	cmp	r0, #0
   146f4:	strbne	r5, [sp, #36]	; 0x24
   146f8:	b	141d8 <triple_free@@Base+0x3ac>
   146fc:	str	r4, [sp, #56]	; 0x38
   14700:	strb	r5, [sp, #60]	; 0x3c
   14704:	ldr	r3, [sp, #64]	; 0x40
   14708:	b	141d8 <triple_free@@Base+0x3ac>
   1470c:	ldr	r0, [sp, #52]	; 0x34
   14710:	str	ip, [sp, #4]
   14714:	bl	1144c <strlen@plt>
   14718:	strb	r5, [sp, #60]	; 0x3c
   1471c:	ldr	r3, [sp, #64]	; 0x40
   14720:	ldr	ip, [sp, #4]
   14724:	str	r0, [sp, #56]	; 0x38
   14728:	b	141d8 <triple_free@@Base+0x3ac>
   1472c:	mov	fp, #1
   14730:	b	14268 <triple_free@@Base+0x43c>
   14734:	ldr	r0, [pc, #84]	; 14790 <triple_free@@Base+0x964>
   14738:	mov	r2, #150	; 0x96
   1473c:	ldr	r1, [pc, #80]	; 14794 <triple_free@@Base+0x968>
   14740:	ldr	r3, [pc, #80]	; 14798 <triple_free@@Base+0x96c>
   14744:	add	r0, pc, r0
   14748:	add	r1, pc, r1
   1474c:	add	r3, pc, r3
   14750:	bl	1159c <__assert_fail@plt>
   14754:	bl	11314 <__stack_chk_fail@plt>
   14758:	ldr	r0, [pc, #60]	; 1479c <triple_free@@Base+0x970>
   1475c:	mov	r2, #178	; 0xb2
   14760:	ldr	r1, [pc, #56]	; 147a0 <triple_free@@Base+0x974>
   14764:	ldr	r3, [pc, #56]	; 147a4 <triple_free@@Base+0x978>
   14768:	add	r0, pc, r0
   1476c:	add	r1, pc, r1
   14770:	add	r3, pc, r3
   14774:	bl	1159c <__assert_fail@plt>
   14778:	strheq	r8, [r1], -ip
   1477c:	andeq	r0, r0, r0, lsr r1
   14780:	andeq	r0, r0, ip, lsr #2
   14784:	andeq	r6, r0, r0, lsl #22
   14788:	ldrdeq	r6, [r0], -r4
   1478c:	andeq	r6, r0, r4, lsr #21
   14790:	andeq	r6, r0, r4, lsl r8
   14794:	andeq	r6, r0, r8, lsr #16
   14798:	strdeq	r6, [r0], -r8
   1479c:	andeq	r6, r0, r8, lsl r8
   147a0:	andeq	r6, r0, r4, lsl #16
   147a4:	ldrdeq	r6, [r0], -r4
   147a8:	push	{r4, r5, r6, lr}
   147ac:	mov	r1, r0
   147b0:	mov	r4, r0
   147b4:	sub	sp, sp, #8
   147b8:	mov	r2, #5
   147bc:	mov	r0, #0
   147c0:	bl	11308 <dcgettext@plt>
   147c4:	cmp	r0, r4
   147c8:	mov	r5, r0
   147cc:	moveq	r0, r0
   147d0:	beq	147e8 <triple_free@@Base+0x9bc>
   147d4:	mov	r1, r4
   147d8:	bl	13f24 <triple_free@@Base+0xf8>
   147dc:	cmp	r0, #0
   147e0:	mov	r0, r5
   147e4:	beq	147f0 <triple_free@@Base+0x9c4>
   147e8:	add	sp, sp, #8
   147ec:	pop	{r4, r5, r6, pc}
   147f0:	bl	1144c <strlen@plt>
   147f4:	mov	r6, r0
   147f8:	mov	r0, r4
   147fc:	bl	1144c <strlen@plt>
   14800:	add	r0, r6, r0
   14804:	add	r0, r0, #4
   14808:	bl	16f5c <triple_free@@Base+0x3130>
   1480c:	ldr	r3, [pc, #36]	; 14838 <triple_free@@Base+0xa0c>
   14810:	str	r5, [sp]
   14814:	mov	r1, #1
   14818:	str	r4, [sp, #4]
   1481c:	mvn	r2, #0
   14820:	add	r3, pc, r3
   14824:	mov	r6, r0
   14828:	bl	11488 <__sprintf_chk@plt>
   1482c:	mov	r0, r6
   14830:	add	sp, sp, #8
   14834:	pop	{r4, r5, r6, pc}
   14838:	andeq	r6, r0, ip, lsl #15
   1483c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14840:	mov	r6, r0
   14844:	sub	sp, sp, #12
   14848:	mov	r2, #5
   1484c:	mov	r4, r1
   14850:	mov	r0, #0
   14854:	mov	r1, r6
   14858:	ldr	r7, [pc, #640]	; 14ae0 <triple_free@@Base+0xcb4>
   1485c:	bl	11308 <dcgettext@plt>
   14860:	add	r7, pc, r7
   14864:	mov	r8, r0
   14868:	bl	17550 <triple_free@@Base+0x3724>
   1486c:	mov	r1, r7
   14870:	mov	r9, r0
   14874:	bl	17354 <triple_free@@Base+0x3528>
   14878:	cmp	r0, #0
   1487c:	moveq	r5, r0
   14880:	moveq	r9, r4
   14884:	bne	148d0 <triple_free@@Base+0xaa4>
   14888:	cmp	r4, #0
   1488c:	movne	sl, r4
   14890:	movne	r7, #0
   14894:	beq	14988 <triple_free@@Base+0xb5c>
   14898:	mov	r0, r8
   1489c:	mov	r1, r6
   148a0:	bl	1129c <strcmp@plt>
   148a4:	cmp	r0, #0
   148a8:	bne	149a0 <triple_free@@Base+0xb74>
   148ac:	cmp	r5, r4
   148b0:	cmpne	r5, #0
   148b4:	bne	14a30 <triple_free@@Base+0xc04>
   148b8:	cmp	r7, r4
   148bc:	cmpne	r7, #0
   148c0:	moveq	r0, r4
   148c4:	bne	14a1c <triple_free@@Base+0xbf0>
   148c8:	add	sp, sp, #12
   148cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148d0:	mov	r2, r9
   148d4:	mov	r1, r7
   148d8:	mov	r0, r4
   148dc:	bl	17264 <triple_free@@Base+0x3438>
   148e0:	mov	r5, r0
   148e4:	mov	r0, r9
   148e8:	bl	1144c <strlen@plt>
   148ec:	mov	fp, r0
   148f0:	add	r0, r0, #11
   148f4:	bl	16f5c <triple_free@@Base+0x3130>
   148f8:	mov	r1, r9
   148fc:	mov	r2, fp
   14900:	mov	sl, r0
   14904:	bl	112e4 <memcpy@plt>
   14908:	ldr	r3, [pc, #468]	; 14ae4 <triple_free@@Base+0xcb8>
   1490c:	add	ip, sl, fp
   14910:	mov	r2, sl
   14914:	add	r3, pc, r3
   14918:	ldm	r3!, {r0, r1}
   1491c:	ldrh	lr, [r3]
   14920:	ldrb	r3, [r3, #2]
   14924:	str	r0, [sl, fp]
   14928:	mov	r0, r4
   1492c:	str	r1, [ip, #4]
   14930:	mov	r1, r7
   14934:	strh	lr, [ip, #8]
   14938:	strb	r3, [ip, #10]
   1493c:	bl	17264 <triple_free@@Base+0x3438>
   14940:	mov	r9, r0
   14944:	mov	r0, sl
   14948:	bl	112cc <free@plt>
   1494c:	cmp	r9, #0
   14950:	beq	14ac0 <triple_free@@Base+0xc94>
   14954:	mov	r0, r9
   14958:	mov	r1, #63	; 0x3f
   1495c:	bl	11458 <strchr@plt>
   14960:	cmp	r0, #0
   14964:	beq	14aa8 <triple_free@@Base+0xc7c>
   14968:	mov	r0, r9
   1496c:	mov	r4, r5
   14970:	bl	112cc <free@plt>
   14974:	cmp	r4, #0
   14978:	mov	r9, #0
   1497c:	movne	sl, r4
   14980:	movne	r7, #0
   14984:	bne	14898 <triple_free@@Base+0xa6c>
   14988:	cmp	r9, #0
   1498c:	beq	14ac8 <triple_free@@Base+0xc9c>
   14990:	mov	r7, r4
   14994:	mov	sl, #0
   14998:	mov	r4, r9
   1499c:	b	14898 <triple_free@@Base+0xa6c>
   149a0:	mov	r1, r6
   149a4:	mov	r0, r8
   149a8:	bl	13f24 <triple_free@@Base+0xf8>
   149ac:	cmp	r0, #0
   149b0:	bne	149ec <triple_free@@Base+0xbc0>
   149b4:	cmp	sl, #0
   149b8:	beq	149d0 <triple_free@@Base+0xba4>
   149bc:	mov	r1, sl
   149c0:	mov	r0, r8
   149c4:	bl	13f24 <triple_free@@Base+0xf8>
   149c8:	cmp	r0, #0
   149cc:	bne	149ec <triple_free@@Base+0xbc0>
   149d0:	cmp	r9, #0
   149d4:	beq	14a3c <triple_free@@Base+0xc10>
   149d8:	mov	r1, r9
   149dc:	mov	r0, r8
   149e0:	bl	13f24 <triple_free@@Base+0xf8>
   149e4:	cmp	r0, #0
   149e8:	beq	14a3c <triple_free@@Base+0xc10>
   149ec:	cmp	r5, #0
   149f0:	beq	149fc <triple_free@@Base+0xbd0>
   149f4:	mov	r0, r5
   149f8:	bl	112cc <free@plt>
   149fc:	cmp	r7, #0
   14a00:	moveq	r0, r8
   14a04:	beq	148c8 <triple_free@@Base+0xa9c>
   14a08:	mov	r0, r7
   14a0c:	bl	112cc <free@plt>
   14a10:	mov	r0, r8
   14a14:	add	sp, sp, #12
   14a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a1c:	mov	r0, r7
   14a20:	bl	112cc <free@plt>
   14a24:	mov	r0, r4
   14a28:	add	sp, sp, #12
   14a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a30:	mov	r0, r5
   14a34:	bl	112cc <free@plt>
   14a38:	b	148b8 <triple_free@@Base+0xa8c>
   14a3c:	mov	r0, r8
   14a40:	bl	1144c <strlen@plt>
   14a44:	mov	r6, r0
   14a48:	mov	r0, r4
   14a4c:	bl	1144c <strlen@plt>
   14a50:	add	r0, r6, r0
   14a54:	add	r0, r0, #4
   14a58:	bl	16f5c <triple_free@@Base+0x3130>
   14a5c:	ldr	r3, [pc, #132]	; 14ae8 <triple_free@@Base+0xcbc>
   14a60:	str	r8, [sp]
   14a64:	mov	r1, #1
   14a68:	str	r4, [sp, #4]
   14a6c:	mvn	r2, #0
   14a70:	add	r3, pc, r3
   14a74:	mov	r6, r0
   14a78:	bl	11488 <__sprintf_chk@plt>
   14a7c:	cmp	r5, #0
   14a80:	beq	14a8c <triple_free@@Base+0xc60>
   14a84:	mov	r0, r5
   14a88:	bl	112cc <free@plt>
   14a8c:	cmp	r7, #0
   14a90:	moveq	r0, r6
   14a94:	beq	148c8 <triple_free@@Base+0xa9c>
   14a98:	mov	r0, r7
   14a9c:	bl	112cc <free@plt>
   14aa0:	mov	r0, r6
   14aa4:	b	148c8 <triple_free@@Base+0xa9c>
   14aa8:	cmp	r5, #0
   14aac:	beq	14ad8 <triple_free@@Base+0xcac>
   14ab0:	mov	sl, r5
   14ab4:	mov	r7, r9
   14ab8:	mov	r4, r5
   14abc:	b	14898 <triple_free@@Base+0xa6c>
   14ac0:	mov	r4, r5
   14ac4:	b	14888 <triple_free@@Base+0xa5c>
   14ac8:	mov	sl, r9
   14acc:	mov	r7, r9
   14ad0:	mov	r4, r6
   14ad4:	b	14898 <triple_free@@Base+0xa6c>
   14ad8:	mov	r4, r9
   14adc:	b	14990 <triple_free@@Base+0xb64>
   14ae0:	andeq	r6, r0, r4, asr r7
   14ae4:	andeq	r6, r0, r8, lsr #13
   14ae8:	andeq	r6, r0, ip, lsr r5
   14aec:	push	{r3, lr}
   14af0:	mov	r3, r0
   14af4:	mov	r2, #0
   14af8:	cmp	r1, #8
   14afc:	str	r2, [r3], #4
   14b00:	add	r3, r3, #4
   14b04:	str	r2, [r0, #4]
   14b08:	str	r2, [r3], #4
   14b0c:	str	r2, [r3], #4
   14b10:	str	r2, [r3], #4
   14b14:	str	r2, [r3], #4
   14b18:	str	r2, [r3], #4
   14b1c:	str	r2, [r3], #4
   14b20:	str	r2, [r3], #4
   14b24:	str	r2, [r3], #4
   14b28:	str	r2, [r3], #4
   14b2c:	str	r2, [r3]
   14b30:	beq	14b3c <triple_free@@Base+0xd10>
   14b34:	str	r1, [r0]
   14b38:	pop	{r3, pc}
   14b3c:	bl	11578 <abort@plt>
   14b40:	push	{r4, r5, r6, lr}
   14b44:	mov	r4, r0
   14b48:	mov	r6, r1
   14b4c:	mov	r0, #0
   14b50:	mov	r1, r4
   14b54:	mov	r2, #5
   14b58:	bl	11308 <dcgettext@plt>
   14b5c:	cmp	r0, r4
   14b60:	mov	r5, r0
   14b64:	beq	14b6c <triple_free@@Base+0xd40>
   14b68:	pop	{r4, r5, r6, pc}
   14b6c:	bl	17550 <triple_free@@Base+0x3724>
   14b70:	ldrb	r3, [r0]
   14b74:	bic	r3, r3, #32
   14b78:	cmp	r3, #85	; 0x55
   14b7c:	bne	14bf0 <triple_free@@Base+0xdc4>
   14b80:	ldrb	r3, [r0, #1]
   14b84:	bic	r3, r3, #32
   14b88:	cmp	r3, #84	; 0x54
   14b8c:	bne	14bdc <triple_free@@Base+0xdb0>
   14b90:	ldrb	r3, [r0, #2]
   14b94:	bic	r3, r3, #32
   14b98:	cmp	r3, #70	; 0x46
   14b9c:	bne	14bdc <triple_free@@Base+0xdb0>
   14ba0:	ldrb	r3, [r0, #3]
   14ba4:	cmp	r3, #45	; 0x2d
   14ba8:	bne	14bdc <triple_free@@Base+0xdb0>
   14bac:	ldrb	r3, [r0, #4]
   14bb0:	cmp	r3, #56	; 0x38
   14bb4:	bne	14bdc <triple_free@@Base+0xdb0>
   14bb8:	ldrb	r3, [r0, #5]
   14bbc:	cmp	r3, #0
   14bc0:	bne	14bdc <triple_free@@Base+0xdb0>
   14bc4:	ldrb	r3, [r5]
   14bc8:	cmp	r3, #96	; 0x60
   14bcc:	beq	14c68 <triple_free@@Base+0xe3c>
   14bd0:	ldr	r0, [pc, #180]	; 14c8c <triple_free@@Base+0xe60>
   14bd4:	add	r0, pc, r0
   14bd8:	pop	{r4, r5, r6, pc}
   14bdc:	cmp	r6, #7
   14be0:	beq	14c74 <triple_free@@Base+0xe48>
   14be4:	ldr	r0, [pc, #164]	; 14c90 <triple_free@@Base+0xe64>
   14be8:	add	r0, pc, r0
   14bec:	pop	{r4, r5, r6, pc}
   14bf0:	cmp	r3, #71	; 0x47
   14bf4:	bne	14bdc <triple_free@@Base+0xdb0>
   14bf8:	ldrb	r3, [r0, #1]
   14bfc:	bic	r3, r3, #32
   14c00:	cmp	r3, #66	; 0x42
   14c04:	bne	14bdc <triple_free@@Base+0xdb0>
   14c08:	ldrb	r3, [r0, #2]
   14c0c:	cmp	r3, #49	; 0x31
   14c10:	bne	14bdc <triple_free@@Base+0xdb0>
   14c14:	ldrb	r3, [r0, #3]
   14c18:	cmp	r3, #56	; 0x38
   14c1c:	bne	14bdc <triple_free@@Base+0xdb0>
   14c20:	ldrb	r3, [r0, #4]
   14c24:	cmp	r3, #48	; 0x30
   14c28:	bne	14bdc <triple_free@@Base+0xdb0>
   14c2c:	ldrb	r3, [r0, #5]
   14c30:	cmp	r3, #51	; 0x33
   14c34:	bne	14bdc <triple_free@@Base+0xdb0>
   14c38:	ldrb	r3, [r0, #6]
   14c3c:	cmp	r3, #48	; 0x30
   14c40:	bne	14bdc <triple_free@@Base+0xdb0>
   14c44:	ldrb	r3, [r0, #7]
   14c48:	cmp	r3, #0
   14c4c:	bne	14bdc <triple_free@@Base+0xdb0>
   14c50:	ldrb	r3, [r5]
   14c54:	cmp	r3, #96	; 0x60
   14c58:	beq	14c80 <triple_free@@Base+0xe54>
   14c5c:	ldr	r0, [pc, #48]	; 14c94 <triple_free@@Base+0xe68>
   14c60:	add	r0, pc, r0
   14c64:	pop	{r4, r5, r6, pc}
   14c68:	ldr	r0, [pc, #40]	; 14c98 <triple_free@@Base+0xe6c>
   14c6c:	add	r0, pc, r0
   14c70:	pop	{r4, r5, r6, pc}
   14c74:	ldr	r0, [pc, #32]	; 14c9c <triple_free@@Base+0xe70>
   14c78:	add	r0, pc, r0
   14c7c:	pop	{r4, r5, r6, pc}
   14c80:	ldr	r0, [pc, #24]	; 14ca0 <triple_free@@Base+0xe74>
   14c84:	add	r0, pc, r0
   14c88:	pop	{r4, r5, r6, pc}
   14c8c:	andeq	r6, r0, r4, lsl r4
   14c90:	andeq	r6, r0, r8, lsl #8
   14c94:	andeq	r6, r0, ip, lsl #7
   14c98:	muleq	r0, r0, r3
   14c9c:	andeq	r6, r0, ip, ror r3
   14ca0:	andeq	r6, r0, r4, ror r3
   14ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ca8:	sub	sp, sp, #124	; 0x7c
   14cac:	ldr	ip, [pc, #3304]	; 1599c <triple_free@@Base+0x1b70>
   14cb0:	mov	sl, r1
   14cb4:	str	r0, [sp, #40]	; 0x28
   14cb8:	mov	r8, r3
   14cbc:	ldr	r0, [pc, #3292]	; 159a0 <triple_free@@Base+0x1b74>
   14cc0:	add	ip, pc, ip
   14cc4:	str	r2, [sp, #32]
   14cc8:	ldr	r1, [sp, #164]	; 0xa4
   14ccc:	mov	r3, ip
   14cd0:	ldr	r0, [ip, r0]
   14cd4:	ldr	r2, [sp, #172]	; 0xac
   14cd8:	ubfx	r1, r1, #1, #1
   14cdc:	str	r1, [sp, #36]	; 0x24
   14ce0:	str	r0, [sp, #56]	; 0x38
   14ce4:	ldr	r0, [sp, #168]	; 0xa8
   14ce8:	ldr	r1, [sp, #176]	; 0xb0
   14cec:	str	r2, [sp, #72]	; 0x48
   14cf0:	str	r0, [sp, #48]	; 0x30
   14cf4:	ldr	r0, [sp, #56]	; 0x38
   14cf8:	str	r1, [sp, #68]	; 0x44
   14cfc:	ldr	r3, [r0]
   14d00:	str	r3, [sp, #116]	; 0x74
   14d04:	bl	11380 <__ctype_get_mb_cur_max@plt>
   14d08:	ldr	r2, [sp, #160]	; 0xa0
   14d0c:	str	r0, [sp, #64]	; 0x40
   14d10:	cmp	r2, #8
   14d14:	addls	pc, pc, r2, lsl #2
   14d18:	b	15878 <triple_free@@Base+0x1a4c>
   14d1c:	b	14d40 <triple_free@@Base+0xf14>
   14d20:	b	15590 <triple_free@@Base+0x1764>
   14d24:	b	155c0 <triple_free@@Base+0x1794>
   14d28:	b	15470 <triple_free@@Base+0x1644>
   14d2c:	b	154b0 <triple_free@@Base+0x1684>
   14d30:	b	154dc <triple_free@@Base+0x16b0>
   14d34:	b	154fc <triple_free@@Base+0x16d0>
   14d38:	b	154fc <triple_free@@Base+0x16d0>
   14d3c:	b	154fc <triple_free@@Base+0x16d0>
   14d40:	mov	r2, #0
   14d44:	str	r2, [sp, #36]	; 0x24
   14d48:	mov	r9, r2
   14d4c:	str	r2, [sp, #24]
   14d50:	str	r2, [sp, #28]
   14d54:	str	r2, [sp, #52]	; 0x34
   14d58:	ldr	r0, [sp, #36]	; 0x24
   14d5c:	mov	fp, #0
   14d60:	ldr	r1, [sp, #24]
   14d64:	eor	r2, r0, #1
   14d68:	eor	r3, r1, #1
   14d6c:	and	r3, r2, r3
   14d70:	and	r2, r1, r0
   14d74:	str	r3, [sp, #44]	; 0x2c
   14d78:	str	r2, [sp, #76]	; 0x4c
   14d7c:	cmn	r8, #1
   14d80:	beq	15100 <triple_free@@Base+0x12d4>
   14d84:	subs	r3, fp, r8
   14d88:	movne	r3, #1
   14d8c:	cmp	r3, #0
   14d90:	beq	15118 <triple_free@@Base+0x12ec>
   14d94:	ldr	r3, [sp, #28]
   14d98:	ldr	r0, [sp, #24]
   14d9c:	adds	r7, r3, #0
   14da0:	movne	r7, #1
   14da4:	ands	r6, r7, r0
   14da8:	bne	15604 <triple_free@@Base+0x17d8>
   14dac:	ldr	r1, [sp, #32]
   14db0:	add	r5, r1, fp
   14db4:	ldrb	r4, [r5]
   14db8:	cmp	r4, #126	; 0x7e
   14dbc:	addls	pc, pc, r4, lsl #2
   14dc0:	b	15384 <triple_free@@Base+0x1558>
   14dc4:	b	15290 <triple_free@@Base+0x1464>
   14dc8:	b	15384 <triple_free@@Base+0x1558>
   14dcc:	b	15384 <triple_free@@Base+0x1558>
   14dd0:	b	15384 <triple_free@@Base+0x1558>
   14dd4:	b	15384 <triple_free@@Base+0x1558>
   14dd8:	b	15384 <triple_free@@Base+0x1558>
   14ddc:	b	15384 <triple_free@@Base+0x1558>
   14de0:	b	15278 <triple_free@@Base+0x144c>
   14de4:	b	15260 <triple_free@@Base+0x1434>
   14de8:	b	15288 <triple_free@@Base+0x145c>
   14dec:	b	15280 <triple_free@@Base+0x1454>
   14df0:	b	15270 <triple_free@@Base+0x1444>
   14df4:	b	15268 <triple_free@@Base+0x143c>
   14df8:	b	1522c <triple_free@@Base+0x1400>
   14dfc:	b	15384 <triple_free@@Base+0x1558>
   14e00:	b	15384 <triple_free@@Base+0x1558>
   14e04:	b	15384 <triple_free@@Base+0x1558>
   14e08:	b	15384 <triple_free@@Base+0x1558>
   14e0c:	b	15384 <triple_free@@Base+0x1558>
   14e10:	b	15384 <triple_free@@Base+0x1558>
   14e14:	b	15384 <triple_free@@Base+0x1558>
   14e18:	b	15384 <triple_free@@Base+0x1558>
   14e1c:	b	15384 <triple_free@@Base+0x1558>
   14e20:	b	15384 <triple_free@@Base+0x1558>
   14e24:	b	15384 <triple_free@@Base+0x1558>
   14e28:	b	15384 <triple_free@@Base+0x1558>
   14e2c:	b	15384 <triple_free@@Base+0x1558>
   14e30:	b	15384 <triple_free@@Base+0x1558>
   14e34:	b	15384 <triple_free@@Base+0x1558>
   14e38:	b	15384 <triple_free@@Base+0x1558>
   14e3c:	b	15384 <triple_free@@Base+0x1558>
   14e40:	b	15384 <triple_free@@Base+0x1558>
   14e44:	b	151b8 <triple_free@@Base+0x138c>
   14e48:	b	151b8 <triple_free@@Base+0x138c>
   14e4c:	b	151b8 <triple_free@@Base+0x138c>
   14e50:	b	151b0 <triple_free@@Base+0x1384>
   14e54:	b	151b8 <triple_free@@Base+0x138c>
   14e58:	b	1508c <triple_free@@Base+0x1260>
   14e5c:	b	151b8 <triple_free@@Base+0x138c>
   14e60:	b	1532c <triple_free@@Base+0x1500>
   14e64:	b	151b8 <triple_free@@Base+0x138c>
   14e68:	b	151b8 <triple_free@@Base+0x138c>
   14e6c:	b	151b8 <triple_free@@Base+0x138c>
   14e70:	b	1508c <triple_free@@Base+0x1260>
   14e74:	b	1508c <triple_free@@Base+0x1260>
   14e78:	b	1508c <triple_free@@Base+0x1260>
   14e7c:	b	1508c <triple_free@@Base+0x1260>
   14e80:	b	1508c <triple_free@@Base+0x1260>
   14e84:	b	1508c <triple_free@@Base+0x1260>
   14e88:	b	1508c <triple_free@@Base+0x1260>
   14e8c:	b	1508c <triple_free@@Base+0x1260>
   14e90:	b	1508c <triple_free@@Base+0x1260>
   14e94:	b	1508c <triple_free@@Base+0x1260>
   14e98:	b	1508c <triple_free@@Base+0x1260>
   14e9c:	b	1508c <triple_free@@Base+0x1260>
   14ea0:	b	1508c <triple_free@@Base+0x1260>
   14ea4:	b	1508c <triple_free@@Base+0x1260>
   14ea8:	b	1508c <triple_free@@Base+0x1260>
   14eac:	b	1508c <triple_free@@Base+0x1260>
   14eb0:	b	151b8 <triple_free@@Base+0x138c>
   14eb4:	b	151b8 <triple_free@@Base+0x138c>
   14eb8:	b	151b8 <triple_free@@Base+0x138c>
   14ebc:	b	151b8 <triple_free@@Base+0x138c>
   14ec0:	b	14fc0 <triple_free@@Base+0x1194>
   14ec4:	b	15384 <triple_free@@Base+0x1558>
   14ec8:	b	1508c <triple_free@@Base+0x1260>
   14ecc:	b	1508c <triple_free@@Base+0x1260>
   14ed0:	b	1508c <triple_free@@Base+0x1260>
   14ed4:	b	1508c <triple_free@@Base+0x1260>
   14ed8:	b	1508c <triple_free@@Base+0x1260>
   14edc:	b	1508c <triple_free@@Base+0x1260>
   14ee0:	b	1508c <triple_free@@Base+0x1260>
   14ee4:	b	1508c <triple_free@@Base+0x1260>
   14ee8:	b	1508c <triple_free@@Base+0x1260>
   14eec:	b	1508c <triple_free@@Base+0x1260>
   14ef0:	b	1508c <triple_free@@Base+0x1260>
   14ef4:	b	1508c <triple_free@@Base+0x1260>
   14ef8:	b	1508c <triple_free@@Base+0x1260>
   14efc:	b	1508c <triple_free@@Base+0x1260>
   14f00:	b	1508c <triple_free@@Base+0x1260>
   14f04:	b	1508c <triple_free@@Base+0x1260>
   14f08:	b	1508c <triple_free@@Base+0x1260>
   14f0c:	b	1508c <triple_free@@Base+0x1260>
   14f10:	b	1508c <triple_free@@Base+0x1260>
   14f14:	b	1508c <triple_free@@Base+0x1260>
   14f18:	b	1508c <triple_free@@Base+0x1260>
   14f1c:	b	1508c <triple_free@@Base+0x1260>
   14f20:	b	1508c <triple_free@@Base+0x1260>
   14f24:	b	1508c <triple_free@@Base+0x1260>
   14f28:	b	1508c <triple_free@@Base+0x1260>
   14f2c:	b	1508c <triple_free@@Base+0x1260>
   14f30:	b	151b8 <triple_free@@Base+0x138c>
   14f34:	b	15310 <triple_free@@Base+0x14e4>
   14f38:	b	1508c <triple_free@@Base+0x1260>
   14f3c:	b	151b8 <triple_free@@Base+0x138c>
   14f40:	b	1508c <triple_free@@Base+0x1260>
   14f44:	b	151b8 <triple_free@@Base+0x138c>
   14f48:	b	1508c <triple_free@@Base+0x1260>
   14f4c:	b	1508c <triple_free@@Base+0x1260>
   14f50:	b	1508c <triple_free@@Base+0x1260>
   14f54:	b	1508c <triple_free@@Base+0x1260>
   14f58:	b	1508c <triple_free@@Base+0x1260>
   14f5c:	b	1508c <triple_free@@Base+0x1260>
   14f60:	b	1508c <triple_free@@Base+0x1260>
   14f64:	b	1508c <triple_free@@Base+0x1260>
   14f68:	b	1508c <triple_free@@Base+0x1260>
   14f6c:	b	1508c <triple_free@@Base+0x1260>
   14f70:	b	1508c <triple_free@@Base+0x1260>
   14f74:	b	1508c <triple_free@@Base+0x1260>
   14f78:	b	1508c <triple_free@@Base+0x1260>
   14f7c:	b	1508c <triple_free@@Base+0x1260>
   14f80:	b	1508c <triple_free@@Base+0x1260>
   14f84:	b	1508c <triple_free@@Base+0x1260>
   14f88:	b	1508c <triple_free@@Base+0x1260>
   14f8c:	b	1508c <triple_free@@Base+0x1260>
   14f90:	b	1508c <triple_free@@Base+0x1260>
   14f94:	b	1508c <triple_free@@Base+0x1260>
   14f98:	b	1508c <triple_free@@Base+0x1260>
   14f9c:	b	1508c <triple_free@@Base+0x1260>
   14fa0:	b	1508c <triple_free@@Base+0x1260>
   14fa4:	b	1508c <triple_free@@Base+0x1260>
   14fa8:	b	1508c <triple_free@@Base+0x1260>
   14fac:	b	1508c <triple_free@@Base+0x1260>
   14fb0:	b	15198 <triple_free@@Base+0x136c>
   14fb4:	b	151b8 <triple_free@@Base+0x138c>
   14fb8:	b	15198 <triple_free@@Base+0x136c>
   14fbc:	b	151b0 <triple_free@@Base+0x1384>
   14fc0:	ldr	r3, [sp, #160]	; 0xa0
   14fc4:	cmp	r3, #2
   14fc8:	beq	15854 <triple_free@@Base+0x1a28>
   14fcc:	cmp	r3, #3
   14fd0:	bne	1508c <triple_free@@Base+0x1260>
   14fd4:	ldr	r1, [sp, #164]	; 0xa4
   14fd8:	tst	r1, #4
   14fdc:	beq	1508c <triple_free@@Base+0x1260>
   14fe0:	add	r3, fp, #2
   14fe4:	cmp	r8, r3
   14fe8:	bls	1508c <triple_free@@Base+0x1260>
   14fec:	ldrb	r2, [r5, #1]
   14ff0:	mov	r1, #1
   14ff4:	cmp	r2, #63	; 0x3f
   14ff8:	bne	1508c <triple_free@@Base+0x1260>
   14ffc:	ldr	r0, [sp, #32]
   15000:	ldrb	ip, [r0, r3]
   15004:	sub	r0, ip, #33	; 0x21
   15008:	uxtb	r0, r0
   1500c:	cmp	r0, #29
   15010:	bhi	1508c <triple_free@@Base+0x1260>
   15014:	lsl	r1, r1, r0
   15018:	movw	r0, #20929	; 0x51c1
   1501c:	movt	r0, #14336	; 0x3800
   15020:	and	r0, r1, r0
   15024:	cmp	r0, #0
   15028:	beq	1508c <triple_free@@Base+0x1260>
   1502c:	ldr	r1, [sp, #36]	; 0x24
   15030:	cmp	r1, #0
   15034:	bne	151d4 <triple_free@@Base+0x13a8>
   15038:	cmp	r9, sl
   1503c:	mov	r4, ip
   15040:	mov	fp, r3
   15044:	ldrcc	r0, [sp, #40]	; 0x28
   15048:	strbcc	r2, [r0, r9]
   1504c:	add	r2, r9, #1
   15050:	cmp	sl, r2
   15054:	ldrhi	r0, [sp, #40]	; 0x28
   15058:	movhi	r1, #34	; 0x22
   1505c:	strbhi	r1, [r0, r2]
   15060:	add	r2, r9, #2
   15064:	cmp	sl, r2
   15068:	ldrhi	r0, [sp, #40]	; 0x28
   1506c:	movhi	r1, #34	; 0x22
   15070:	strbhi	r1, [r0, r2]
   15074:	add	r2, r9, #3
   15078:	cmp	sl, r2
   1507c:	add	r9, r9, #4
   15080:	ldrhi	r0, [sp, #40]	; 0x28
   15084:	movhi	r1, #63	; 0x3f
   15088:	strbhi	r1, [r0, r2]
   1508c:	ldr	r0, [sp, #44]	; 0x2c
   15090:	cmp	r0, #0
   15094:	bne	150bc <triple_free@@Base+0x1290>
   15098:	ldr	r1, [sp, #48]	; 0x30
   1509c:	cmp	r1, #0
   150a0:	beq	150bc <triple_free@@Base+0x1290>
   150a4:	ubfx	r2, r4, #5, #8
   150a8:	and	r3, r4, #31
   150ac:	ldr	r2, [r1, r2, lsl #2]
   150b0:	lsr	r3, r2, r3
   150b4:	tst	r3, #1
   150b8:	bne	150c4 <triple_free@@Base+0x1298>
   150bc:	cmp	r6, #0
   150c0:	beq	150e4 <triple_free@@Base+0x12b8>
   150c4:	ldr	r2, [sp, #36]	; 0x24
   150c8:	cmp	r2, #0
   150cc:	bne	151d4 <triple_free@@Base+0x13a8>
   150d0:	cmp	r9, sl
   150d4:	ldrcc	r0, [sp, #40]	; 0x28
   150d8:	movcc	r3, #92	; 0x5c
   150dc:	strbcc	r3, [r0, r9]
   150e0:	add	r9, r9, #1
   150e4:	add	fp, fp, #1
   150e8:	cmp	r9, sl
   150ec:	ldrcc	r1, [sp, #40]	; 0x28
   150f0:	strbcc	r4, [r1, r9]
   150f4:	cmn	r8, #1
   150f8:	add	r9, r9, #1
   150fc:	bne	14d84 <triple_free@@Base+0xf58>
   15100:	ldr	r2, [sp, #32]
   15104:	ldrb	r3, [r2, fp]
   15108:	adds	r3, r3, #0
   1510c:	movne	r3, #1
   15110:	cmp	r3, #0
   15114:	bne	14d94 <triple_free@@Base+0xf68>
   15118:	ldr	r3, [sp, #160]	; 0xa0
   1511c:	cmp	r9, #0
   15120:	cmpeq	r3, #2
   15124:	bne	15134 <triple_free@@Base+0x1308>
   15128:	ldr	r0, [sp, #36]	; 0x24
   1512c:	cmp	r0, #0
   15130:	bne	151d4 <triple_free@@Base+0x13a8>
   15134:	ldr	r1, [sp, #36]	; 0x24
   15138:	ldr	r2, [sp, #52]	; 0x34
   1513c:	eor	r3, r1, #1
   15140:	cmp	r2, #0
   15144:	moveq	r3, #0
   15148:	andne	r3, r3, #1
   1514c:	cmp	r3, #0
   15150:	beq	1517c <triple_free@@Base+0x1350>
   15154:	ldrb	r3, [r2]
   15158:	cmp	r3, #0
   1515c:	beq	1517c <triple_free@@Base+0x1350>
   15160:	ldr	r1, [sp, #40]	; 0x28
   15164:	cmp	sl, r9
   15168:	strbhi	r3, [r1, r9]
   1516c:	ldrb	r3, [r2, #1]!
   15170:	add	r9, r9, #1
   15174:	cmp	r3, #0
   15178:	bne	15164 <triple_free@@Base+0x1338>
   1517c:	cmp	r9, sl
   15180:	movcs	r0, r9
   15184:	ldrcc	r1, [sp, #40]	; 0x28
   15188:	movcc	r3, #0
   1518c:	movcc	r0, r9
   15190:	strbcc	r3, [r1, r9]
   15194:	b	15210 <triple_free@@Base+0x13e4>
   15198:	cmn	r8, #1
   1519c:	beq	15864 <triple_free@@Base+0x1a38>
   151a0:	subs	r3, r8, #1
   151a4:	movne	r3, #1
   151a8:	cmp	r3, #0
   151ac:	bne	1508c <triple_free@@Base+0x1260>
   151b0:	cmp	fp, #0
   151b4:	bne	1508c <triple_free@@Base+0x1260>
   151b8:	ldr	r3, [sp, #36]	; 0x24
   151bc:	ldr	r0, [sp, #160]	; 0xa0
   151c0:	cmp	r0, #2
   151c4:	movne	r3, #0
   151c8:	andeq	r3, r3, #1
   151cc:	cmp	r3, #0
   151d0:	beq	1508c <triple_free@@Base+0x1260>
   151d4:	ldr	r2, [sp, #164]	; 0xa4
   151d8:	mov	ip, #0
   151dc:	ldr	r0, [sp, #160]	; 0xa0
   151e0:	bic	r3, r2, #2
   151e4:	ldr	r1, [sp, #72]	; 0x48
   151e8:	ldr	r2, [sp, #68]	; 0x44
   151ec:	stm	sp, {r0, r3}
   151f0:	mov	r3, r8
   151f4:	str	r1, [sp, #12]
   151f8:	mov	r1, sl
   151fc:	str	r2, [sp, #16]
   15200:	ldr	r0, [sp, #40]	; 0x28
   15204:	ldr	r2, [sp, #32]
   15208:	str	ip, [sp, #8]
   1520c:	bl	14ca4 <triple_free@@Base+0xe78>
   15210:	ldr	r1, [sp, #56]	; 0x38
   15214:	ldr	r2, [sp, #116]	; 0x74
   15218:	ldr	r3, [r1]
   1521c:	cmp	r2, r3
   15220:	bne	15954 <triple_free@@Base+0x1b28>
   15224:	add	sp, sp, #124	; 0x7c
   15228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1522c:	mov	r3, #114	; 0x72
   15230:	ldr	r2, [sp, #36]	; 0x24
   15234:	ldr	r0, [sp, #160]	; 0xa0
   15238:	cmp	r0, #2
   1523c:	movne	r2, #0
   15240:	andeq	r2, r2, #1
   15244:	cmp	r2, #0
   15248:	bne	151d4 <triple_free@@Base+0x13a8>
   1524c:	ldr	r1, [sp, #24]
   15250:	cmp	r1, #0
   15254:	beq	1508c <triple_free@@Base+0x1260>
   15258:	mov	r4, r3
   1525c:	b	150c4 <triple_free@@Base+0x1298>
   15260:	mov	r3, #98	; 0x62
   15264:	b	1524c <triple_free@@Base+0x1420>
   15268:	mov	r3, #102	; 0x66
   1526c:	b	1524c <triple_free@@Base+0x1420>
   15270:	mov	r3, #118	; 0x76
   15274:	b	1524c <triple_free@@Base+0x1420>
   15278:	mov	r3, #97	; 0x61
   1527c:	b	1524c <triple_free@@Base+0x1420>
   15280:	mov	r3, #110	; 0x6e
   15284:	b	15230 <triple_free@@Base+0x1404>
   15288:	mov	r3, #116	; 0x74
   1528c:	b	15230 <triple_free@@Base+0x1404>
   15290:	ldr	r2, [sp, #24]
   15294:	cmp	r2, #0
   15298:	beq	15840 <triple_free@@Base+0x1a14>
   1529c:	ldr	r3, [sp, #36]	; 0x24
   152a0:	cmp	r3, #0
   152a4:	bne	151d4 <triple_free@@Base+0x13a8>
   152a8:	cmp	r9, sl
   152ac:	add	r2, r9, #1
   152b0:	ldrcc	r0, [sp, #40]	; 0x28
   152b4:	movcc	r3, #92	; 0x5c
   152b8:	strbcc	r3, [r0, r9]
   152bc:	add	r3, fp, #1
   152c0:	cmp	r8, r3
   152c4:	bls	15304 <triple_free@@Base+0x14d8>
   152c8:	ldr	r1, [sp, #32]
   152cc:	ldrb	r3, [r1, r3]
   152d0:	sub	r3, r3, #48	; 0x30
   152d4:	cmp	r3, #9
   152d8:	bhi	15304 <triple_free@@Base+0x14d8>
   152dc:	cmp	sl, r2
   152e0:	ldrhi	r0, [sp, #40]	; 0x28
   152e4:	movhi	r3, #48	; 0x30
   152e8:	strbhi	r3, [r0, r2]
   152ec:	add	r3, r9, #2
   152f0:	cmp	sl, r3
   152f4:	ldrhi	r1, [sp, #40]	; 0x28
   152f8:	movhi	r2, #48	; 0x30
   152fc:	strbhi	r2, [r1, r3]
   15300:	add	r2, r9, #3
   15304:	mov	r9, r2
   15308:	mov	r4, #48	; 0x30
   1530c:	b	15098 <triple_free@@Base+0x126c>
   15310:	ldr	r1, [sp, #76]	; 0x4c
   15314:	cmp	r1, #0
   15318:	beq	15324 <triple_free@@Base+0x14f8>
   1531c:	cmp	r7, #0
   15320:	bne	150e4 <triple_free@@Base+0x12b8>
   15324:	mov	r3, r4
   15328:	b	15230 <triple_free@@Base+0x1404>
   1532c:	ldr	r1, [sp, #160]	; 0xa0
   15330:	cmp	r1, #2
   15334:	bne	1508c <triple_free@@Base+0x1260>
   15338:	ldr	r2, [sp, #36]	; 0x24
   1533c:	cmp	r2, #0
   15340:	bne	151d4 <triple_free@@Base+0x13a8>
   15344:	cmp	r9, sl
   15348:	ldrcc	r0, [sp, #40]	; 0x28
   1534c:	movcc	r3, #39	; 0x27
   15350:	strbcc	r3, [r0, r9]
   15354:	add	r3, r9, #1
   15358:	cmp	sl, r3
   1535c:	ldrhi	r1, [sp, #40]	; 0x28
   15360:	movhi	r2, #92	; 0x5c
   15364:	strbhi	r2, [r1, r3]
   15368:	add	r3, r9, #2
   1536c:	cmp	sl, r3
   15370:	add	r9, r9, #3
   15374:	ldrhi	r0, [sp, #40]	; 0x28
   15378:	movhi	r2, #39	; 0x27
   1537c:	strbhi	r2, [r0, r3]
   15380:	b	1508c <triple_free@@Base+0x1260>
   15384:	ldr	r1, [sp, #64]	; 0x40
   15388:	cmp	r1, #1
   1538c:	bne	15684 <triple_free@@Base+0x1858>
   15390:	bl	1141c <__ctype_b_loc@plt>
   15394:	ldr	r2, [sp, #64]	; 0x40
   15398:	sxth	r3, r4
   1539c:	str	r2, [sp, #60]	; 0x3c
   153a0:	lsl	r3, r3, #1
   153a4:	ldr	r2, [r0]
   153a8:	ldrh	r2, [r2, r3]
   153ac:	eor	r2, r2, #16384	; 0x4000
   153b0:	ubfx	r2, r2, #14, #1
   153b4:	ldr	r1, [sp, #24]
   153b8:	ands	r2, r2, r1
   153bc:	beq	1508c <triple_free@@Base+0x1260>
   153c0:	ldr	r3, [sp, #60]	; 0x3c
   153c4:	mov	r0, #92	; 0x5c
   153c8:	ldr	r7, [sp, #36]	; 0x24
   153cc:	add	r1, r3, fp
   153d0:	str	r8, [sp, #60]	; 0x3c
   153d4:	ldr	r3, [sp, #40]	; 0x28
   153d8:	b	1543c <triple_free@@Base+0x1610>
   153dc:	cmp	r7, #0
   153e0:	bne	1587c <triple_free@@Base+0x1a50>
   153e4:	add	ip, r9, #1
   153e8:	cmp	r9, sl
   153ec:	strbcc	r0, [r3, r9]
   153f0:	cmp	sl, ip
   153f4:	lsrhi	r8, r4, #6
   153f8:	addhi	r8, r8, #48	; 0x30
   153fc:	strbhi	r8, [r3, ip]
   15400:	add	ip, r9, #2
   15404:	add	r9, r9, #3
   15408:	cmp	sl, ip
   1540c:	ubfxhi	r8, r4, #3, #3
   15410:	and	r4, r4, #7
   15414:	add	r4, r4, #48	; 0x30
   15418:	addhi	r8, r8, #48	; 0x30
   1541c:	strbhi	r8, [r3, ip]
   15420:	add	fp, fp, #1
   15424:	cmp	r1, fp
   15428:	bls	15468 <triple_free@@Base+0x163c>
   1542c:	cmp	r9, sl
   15430:	strbcc	r4, [r3, r9]
   15434:	ldrb	r4, [r5, #1]!
   15438:	add	r9, r9, #1
   1543c:	cmp	r2, #0
   15440:	bne	153dc <triple_free@@Base+0x15b0>
   15444:	cmp	r6, #0
   15448:	beq	15420 <triple_free@@Base+0x15f4>
   1544c:	add	fp, fp, #1
   15450:	cmp	r9, sl
   15454:	strbcc	r0, [r3, r9]
   15458:	cmp	r1, fp
   1545c:	add	r9, r9, #1
   15460:	mov	r6, #0
   15464:	bhi	1542c <triple_free@@Base+0x1600>
   15468:	ldr	r8, [sp, #60]	; 0x3c
   1546c:	b	150e8 <triple_free@@Base+0x12bc>
   15470:	ldr	r3, [sp, #36]	; 0x24
   15474:	cmp	r3, #0
   15478:	bne	1597c <triple_free@@Base+0x1b50>
   1547c:	cmp	sl, #0
   15480:	beq	15894 <triple_free@@Base+0x1a68>
   15484:	ldr	r1, [sp, #40]	; 0x28
   15488:	mov	r0, #1
   1548c:	ldr	r2, [pc, #1296]	; 159a4 <triple_free@@Base+0x1b78>
   15490:	mov	r3, #34	; 0x22
   15494:	str	r0, [sp, #24]
   15498:	mov	r9, r0
   1549c:	add	r2, pc, r2
   154a0:	str	r0, [sp, #28]
   154a4:	strb	r3, [r1]
   154a8:	str	r2, [sp, #52]	; 0x34
   154ac:	b	14d58 <triple_free@@Base+0xf2c>
   154b0:	ldr	r3, [pc, #1264]	; 159a8 <triple_free@@Base+0x1b7c>
   154b4:	mov	r2, #1
   154b8:	mov	r0, #3
   154bc:	str	r2, [sp, #36]	; 0x24
   154c0:	add	r3, pc, r3
   154c4:	str	r2, [sp, #24]
   154c8:	str	r3, [sp, #52]	; 0x34
   154cc:	mov	r9, #0
   154d0:	str	r2, [sp, #28]
   154d4:	str	r0, [sp, #160]	; 0xa0
   154d8:	b	14d58 <triple_free@@Base+0xf2c>
   154dc:	mov	r0, #0
   154e0:	mov	r1, #1
   154e4:	str	r0, [sp, #36]	; 0x24
   154e8:	mov	r9, r0
   154ec:	str	r1, [sp, #24]
   154f0:	str	r0, [sp, #28]
   154f4:	str	r0, [sp, #52]	; 0x34
   154f8:	b	14d58 <triple_free@@Base+0xf2c>
   154fc:	ldr	r3, [sp, #160]	; 0xa0
   15500:	cmp	r3, #8
   15504:	beq	15530 <triple_free@@Base+0x1704>
   15508:	ldr	r0, [pc, #1180]	; 159ac <triple_free@@Base+0x1b80>
   1550c:	mov	r1, r3
   15510:	add	r0, pc, r0
   15514:	bl	14b40 <triple_free@@Base+0xd14>
   15518:	ldr	r1, [sp, #160]	; 0xa0
   1551c:	str	r0, [sp, #72]	; 0x48
   15520:	ldr	r0, [pc, #1160]	; 159b0 <triple_free@@Base+0x1b84>
   15524:	add	r0, pc, r0
   15528:	bl	14b40 <triple_free@@Base+0xd14>
   1552c:	str	r0, [sp, #68]	; 0x44
   15530:	ldr	r0, [sp, #36]	; 0x24
   15534:	cmp	r0, #0
   15538:	movne	r9, #0
   1553c:	bne	15574 <triple_free@@Base+0x1748>
   15540:	ldr	r1, [sp, #72]	; 0x48
   15544:	ldrb	r3, [r1]
   15548:	cmp	r3, #0
   1554c:	beq	1594c <triple_free@@Base+0x1b20>
   15550:	mov	r2, r1
   15554:	ldr	r1, [sp, #40]	; 0x28
   15558:	mov	r9, r0
   1555c:	cmp	r9, sl
   15560:	strbcc	r3, [r1, r9]
   15564:	ldrb	r3, [r2, #1]!
   15568:	add	r9, r9, #1
   1556c:	cmp	r3, #0
   15570:	bne	1555c <triple_free@@Base+0x1730>
   15574:	ldr	r0, [sp, #68]	; 0x44
   15578:	str	r0, [sp, #52]	; 0x34
   1557c:	bl	1144c <strlen@plt>
   15580:	mov	r2, #1
   15584:	str	r2, [sp, #24]
   15588:	str	r0, [sp, #28]
   1558c:	b	14d58 <triple_free@@Base+0xf2c>
   15590:	ldr	r3, [pc, #1052]	; 159b4 <triple_free@@Base+0x1b88>
   15594:	mov	r2, #0
   15598:	mov	r1, #1
   1559c:	mov	r0, #2
   155a0:	add	r3, pc, r3
   155a4:	str	r1, [sp, #36]	; 0x24
   155a8:	str	r2, [sp, #24]
   155ac:	mov	r9, r2
   155b0:	str	r1, [sp, #28]
   155b4:	str	r3, [sp, #52]	; 0x34
   155b8:	str	r0, [sp, #160]	; 0xa0
   155bc:	b	14d58 <triple_free@@Base+0xf2c>
   155c0:	ldr	r3, [sp, #36]	; 0x24
   155c4:	cmp	r3, #0
   155c8:	bne	15958 <triple_free@@Base+0x1b2c>
   155cc:	cmp	sl, #0
   155d0:	beq	158b4 <triple_free@@Base+0x1a88>
   155d4:	ldr	r1, [sp, #40]	; 0x28
   155d8:	mov	r3, #39	; 0x27
   155dc:	ldr	r2, [sp, #36]	; 0x24
   155e0:	mov	r0, #1
   155e4:	mov	r9, r0
   155e8:	str	r0, [sp, #28]
   155ec:	strb	r3, [r1]
   155f0:	ldr	r3, [pc, #960]	; 159b8 <triple_free@@Base+0x1b8c>
   155f4:	str	r2, [sp, #24]
   155f8:	add	r3, pc, r3
   155fc:	str	r3, [sp, #52]	; 0x34
   15600:	b	14d58 <triple_free@@Base+0xf2c>
   15604:	ldr	r2, [sp, #28]
   15608:	cmp	r2, #1
   1560c:	add	r4, fp, r2
   15610:	movls	r3, #0
   15614:	movhi	r3, #1
   15618:	cmn	r8, #1
   1561c:	movne	r3, #0
   15620:	cmp	r3, #0
   15624:	beq	15634 <triple_free@@Base+0x1808>
   15628:	ldr	r0, [sp, #32]
   1562c:	bl	1144c <strlen@plt>
   15630:	mov	r8, r0
   15634:	cmp	r8, r4
   15638:	ldrcc	r3, [sp, #32]
   1563c:	movcc	r6, #0
   15640:	addcc	r5, r3, fp
   15644:	bcc	14db4 <triple_free@@Base+0xf88>
   15648:	ldr	r0, [sp, #32]
   1564c:	ldr	r1, [sp, #52]	; 0x34
   15650:	add	r5, r0, fp
   15654:	ldr	r2, [sp, #28]
   15658:	mov	r0, r5
   1565c:	bl	112fc <memcmp@plt>
   15660:	cmp	r0, #0
   15664:	bne	1567c <triple_free@@Base+0x1850>
   15668:	ldr	r1, [sp, #36]	; 0x24
   1566c:	cmp	r1, #0
   15670:	bne	151d4 <triple_free@@Base+0x13a8>
   15674:	mov	r6, #1
   15678:	b	14db4 <triple_free@@Base+0xf88>
   1567c:	mov	r6, #0
   15680:	b	14db4 <triple_free@@Base+0xf88>
   15684:	add	r7, sp, #108	; 0x6c
   15688:	cmn	r8, #1
   1568c:	mov	r3, #0
   15690:	str	r3, [sp, #108]	; 0x6c
   15694:	str	r3, [r7, #4]
   15698:	beq	15884 <triple_free@@Base+0x1a58>
   1569c:	mov	r1, #0
   156a0:	ldr	r0, [sp, #32]
   156a4:	mov	ip, #1
   156a8:	str	r9, [sp, #88]	; 0x58
   156ac:	str	r6, [sp, #96]	; 0x60
   156b0:	mov	r9, r1
   156b4:	str	r5, [sp, #100]	; 0x64
   156b8:	mov	r6, ip
   156bc:	mov	r5, r7
   156c0:	add	r3, sp, #104	; 0x68
   156c4:	sub	r0, r0, #1
   156c8:	str	r3, [sp, #80]	; 0x50
   156cc:	str	r0, [sp, #84]	; 0x54
   156d0:	str	r1, [sp, #60]	; 0x3c
   156d4:	str	r4, [sp, #92]	; 0x5c
   156d8:	ldr	r2, [sp, #32]
   156dc:	add	r7, r9, fp
   156e0:	add	r0, sp, #104	; 0x68
   156e4:	mov	r3, r5
   156e8:	add	r4, r2, r7
   156ec:	rsb	r2, r7, r8
   156f0:	mov	r1, r4
   156f4:	bl	113a4 <mbrtowc@plt>
   156f8:	subs	r2, r0, #0
   156fc:	beq	15808 <triple_free@@Base+0x19dc>
   15700:	cmn	r2, #1
   15704:	beq	15930 <triple_free@@Base+0x1b04>
   15708:	cmn	r2, #2
   1570c:	beq	158d4 <triple_free@@Base+0x1aa8>
   15710:	ldr	r3, [sp, #36]	; 0x24
   15714:	ldr	r0, [sp, #160]	; 0xa0
   15718:	cmp	r0, #2
   1571c:	movne	r3, #0
   15720:	andeq	r3, r3, #1
   15724:	cmp	r3, #0
   15728:	beq	157e4 <triple_free@@Base+0x19b8>
   1572c:	cmp	r2, #1
   15730:	beq	157e4 <triple_free@@Base+0x19b8>
   15734:	ldr	r1, [sp, #84]	; 0x54
   15738:	add	r3, r1, r2
   1573c:	add	r7, r3, r7
   15740:	ldrb	r3, [r4, #1]!
   15744:	sub	r3, r3, #91	; 0x5b
   15748:	cmp	r3, #33	; 0x21
   1574c:	addls	pc, pc, r3, lsl #2
   15750:	b	157dc <triple_free@@Base+0x19b0>
   15754:	b	151d4 <triple_free@@Base+0x13a8>
   15758:	b	151d4 <triple_free@@Base+0x13a8>
   1575c:	b	157dc <triple_free@@Base+0x19b0>
   15760:	b	151d4 <triple_free@@Base+0x13a8>
   15764:	b	157dc <triple_free@@Base+0x19b0>
   15768:	b	151d4 <triple_free@@Base+0x13a8>
   1576c:	b	157dc <triple_free@@Base+0x19b0>
   15770:	b	157dc <triple_free@@Base+0x19b0>
   15774:	b	157dc <triple_free@@Base+0x19b0>
   15778:	b	157dc <triple_free@@Base+0x19b0>
   1577c:	b	157dc <triple_free@@Base+0x19b0>
   15780:	b	157dc <triple_free@@Base+0x19b0>
   15784:	b	157dc <triple_free@@Base+0x19b0>
   15788:	b	157dc <triple_free@@Base+0x19b0>
   1578c:	b	157dc <triple_free@@Base+0x19b0>
   15790:	b	157dc <triple_free@@Base+0x19b0>
   15794:	b	157dc <triple_free@@Base+0x19b0>
   15798:	b	157dc <triple_free@@Base+0x19b0>
   1579c:	b	157dc <triple_free@@Base+0x19b0>
   157a0:	b	157dc <triple_free@@Base+0x19b0>
   157a4:	b	157dc <triple_free@@Base+0x19b0>
   157a8:	b	157dc <triple_free@@Base+0x19b0>
   157ac:	b	157dc <triple_free@@Base+0x19b0>
   157b0:	b	157dc <triple_free@@Base+0x19b0>
   157b4:	b	157dc <triple_free@@Base+0x19b0>
   157b8:	b	157dc <triple_free@@Base+0x19b0>
   157bc:	b	157dc <triple_free@@Base+0x19b0>
   157c0:	b	157dc <triple_free@@Base+0x19b0>
   157c4:	b	157dc <triple_free@@Base+0x19b0>
   157c8:	b	157dc <triple_free@@Base+0x19b0>
   157cc:	b	157dc <triple_free@@Base+0x19b0>
   157d0:	b	157dc <triple_free@@Base+0x19b0>
   157d4:	b	157dc <triple_free@@Base+0x19b0>
   157d8:	b	151d4 <triple_free@@Base+0x13a8>
   157dc:	cmp	r4, r7
   157e0:	bne	15740 <triple_free@@Base+0x1914>
   157e4:	ldr	r0, [sp, #104]	; 0x68
   157e8:	add	r9, r9, r2
   157ec:	bl	11350 <iswprint@plt>
   157f0:	cmp	r0, #0
   157f4:	mov	r0, r5
   157f8:	moveq	r6, #0
   157fc:	bl	112f0 <mbsinit@plt>
   15800:	cmp	r0, #0
   15804:	beq	156d8 <triple_free@@Base+0x18ac>
   15808:	mov	ip, r6
   1580c:	eor	r2, ip, #1
   15810:	str	r9, [sp, #60]	; 0x3c
   15814:	ldr	r4, [sp, #92]	; 0x5c
   15818:	uxtb	r2, r2
   1581c:	ldr	r9, [sp, #88]	; 0x58
   15820:	ldr	r6, [sp, #96]	; 0x60
   15824:	ldr	r5, [sp, #100]	; 0x64
   15828:	ldr	r3, [sp, #60]	; 0x3c
   1582c:	cmp	r3, #1
   15830:	bls	153b4 <triple_free@@Base+0x1588>
   15834:	ldr	r0, [sp, #24]
   15838:	and	r2, r2, r0
   1583c:	b	153c0 <triple_free@@Base+0x1594>
   15840:	ldr	r2, [sp, #164]	; 0xa4
   15844:	tst	r2, #1
   15848:	addne	fp, fp, #1
   1584c:	bne	14d7c <triple_free@@Base+0xf50>
   15850:	b	1508c <triple_free@@Base+0x1260>
   15854:	ldr	r0, [sp, #36]	; 0x24
   15858:	cmp	r0, #0
   1585c:	beq	1508c <triple_free@@Base+0x1260>
   15860:	b	151d4 <triple_free@@Base+0x13a8>
   15864:	ldr	r2, [sp, #32]
   15868:	ldrb	r3, [r2, #1]
   1586c:	adds	r3, r3, #0
   15870:	movne	r3, #1
   15874:	b	151a8 <triple_free@@Base+0x137c>
   15878:	bl	11578 <abort@plt>
   1587c:	ldr	r8, [sp, #60]	; 0x3c
   15880:	b	151d4 <triple_free@@Base+0x13a8>
   15884:	ldr	r0, [sp, #32]
   15888:	bl	1144c <strlen@plt>
   1588c:	mov	r8, r0
   15890:	b	1569c <triple_free@@Base+0x1870>
   15894:	ldr	r2, [pc, #288]	; 159bc <triple_free@@Base+0x1b90>
   15898:	mov	r1, #1
   1589c:	mov	r9, r1
   158a0:	str	r1, [sp, #24]
   158a4:	add	r2, pc, r2
   158a8:	str	r1, [sp, #28]
   158ac:	str	r2, [sp, #52]	; 0x34
   158b0:	b	14d58 <triple_free@@Base+0xf2c>
   158b4:	ldr	r2, [pc, #260]	; 159c0 <triple_free@@Base+0x1b94>
   158b8:	mov	r3, #1
   158bc:	mov	r9, r3
   158c0:	str	r3, [sp, #28]
   158c4:	add	r2, pc, r2
   158c8:	str	sl, [sp, #24]
   158cc:	str	r2, [sp, #52]	; 0x34
   158d0:	b	14d58 <triple_free@@Base+0xf2c>
   158d4:	cmp	r8, r7
   158d8:	str	r9, [sp, #60]	; 0x3c
   158dc:	mov	ip, r4
   158e0:	ldr	r6, [sp, #96]	; 0x60
   158e4:	ldr	r9, [sp, #88]	; 0x58
   158e8:	ldr	r4, [sp, #92]	; 0x5c
   158ec:	ldr	r5, [sp, #100]	; 0x64
   158f0:	bls	15928 <triple_free@@Base+0x1afc>
   158f4:	ldrb	r3, [ip]
   158f8:	cmp	r3, #0
   158fc:	beq	15928 <triple_free@@Base+0x1afc>
   15900:	ldr	r3, [sp, #60]	; 0x3c
   15904:	b	15914 <triple_free@@Base+0x1ae8>
   15908:	ldrb	r2, [r5, r3]
   1590c:	cmp	r2, #0
   15910:	beq	15924 <triple_free@@Base+0x1af8>
   15914:	add	r3, r3, #1
   15918:	add	r2, fp, r3
   1591c:	cmp	r8, r2
   15920:	bhi	15908 <triple_free@@Base+0x1adc>
   15924:	str	r3, [sp, #60]	; 0x3c
   15928:	mov	r2, #1
   1592c:	b	15828 <triple_free@@Base+0x19fc>
   15930:	str	r9, [sp, #60]	; 0x3c
   15934:	mov	r2, #1
   15938:	ldr	r4, [sp, #92]	; 0x5c
   1593c:	ldr	r6, [sp, #96]	; 0x60
   15940:	ldr	r9, [sp, #88]	; 0x58
   15944:	ldr	r5, [sp, #100]	; 0x64
   15948:	b	15828 <triple_free@@Base+0x19fc>
   1594c:	ldr	r9, [sp, #36]	; 0x24
   15950:	b	15574 <triple_free@@Base+0x1748>
   15954:	bl	11314 <__stack_chk_fail@plt>
   15958:	ldr	r1, [pc, #100]	; 159c4 <triple_free@@Base+0x1b98>
   1595c:	mov	r3, #0
   15960:	mov	r0, #1
   15964:	str	r3, [sp, #24]
   15968:	add	r1, pc, r1
   1596c:	str	r0, [sp, #28]
   15970:	mov	r9, r3
   15974:	str	r1, [sp, #52]	; 0x34
   15978:	b	14d58 <triple_free@@Base+0xf2c>
   1597c:	ldr	r0, [pc, #68]	; 159c8 <triple_free@@Base+0x1b9c>
   15980:	mov	r3, #1
   15984:	mov	r9, #0
   15988:	str	r3, [sp, #24]
   1598c:	add	r0, pc, r0
   15990:	str	r3, [sp, #28]
   15994:	str	r0, [sp, #52]	; 0x34
   15998:	b	14d58 <triple_free@@Base+0xf2c>
   1599c:	andeq	r7, r1, r8, lsr r3
   159a0:	andeq	r0, r0, r0, lsr r1
   159a4:	andeq	r5, r0, r8, asr fp
   159a8:	andeq	r5, r0, r4, lsr fp
   159ac:	strdeq	r5, [r0], -r0
   159b0:	andeq	r5, r0, ip, asr #21
   159b4:	andeq	r5, r0, r0, asr sl
   159b8:	strdeq	r5, [r0], -r8
   159bc:	andeq	r5, r0, r0, asr r7
   159c0:	andeq	r5, r0, ip, lsr #14
   159c4:	andeq	r5, r0, r8, lsl #13
   159c8:	andeq	r5, r0, r8, ror #12
   159cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159d0:	sub	sp, sp, #44	; 0x2c
   159d4:	mov	r6, r0
   159d8:	mov	r9, r1
   159dc:	mov	sl, r2
   159e0:	mov	r4, r3
   159e4:	bl	11470 <__errno_location@plt>
   159e8:	ldr	fp, [pc, #412]	; 15b8c <triple_free@@Base+0x1d60>
   159ec:	cmp	r6, #0
   159f0:	add	fp, pc, fp
   159f4:	ldr	r5, [fp]
   159f8:	ldr	r1, [r0]
   159fc:	mov	r8, r0
   15a00:	str	r1, [sp, #36]	; 0x24
   15a04:	blt	15b84 <triple_free@@Base+0x1d58>
   15a08:	ldr	r3, [pc, #384]	; 15b90 <triple_free@@Base+0x1d64>
   15a0c:	add	r3, pc, r3
   15a10:	ldr	r3, [r3]
   15a14:	cmp	r6, r3
   15a18:	bcc	15a6c <triple_free@@Base+0x1c40>
   15a1c:	add	r7, r6, #1
   15a20:	cmn	r7, #-536870911	; 0xe0000001
   15a24:	bhi	15b88 <triple_free@@Base+0x1d5c>
   15a28:	add	r3, fp, #4
   15a2c:	cmp	r5, r3
   15a30:	beq	15b5c <triple_free@@Base+0x1d30>
   15a34:	mov	r0, r5
   15a38:	lsl	r1, r7, #3
   15a3c:	bl	16fb4 <triple_free@@Base+0x3188>
   15a40:	mov	r5, r0
   15a44:	str	r0, [fp]
   15a48:	ldr	fp, [pc, #324]	; 15b94 <triple_free@@Base+0x1d68>
   15a4c:	mov	r1, #0
   15a50:	add	fp, pc, fp
   15a54:	ldr	r0, [fp]
   15a58:	rsb	r2, r0, r7
   15a5c:	add	r0, r5, r0, lsl #3
   15a60:	lsl	r2, r2, #3
   15a64:	bl	114ac <memset@plt>
   15a68:	str	r7, [fp]
   15a6c:	add	r2, r4, #8
   15a70:	str	r2, [sp, #32]
   15a74:	ldr	r1, [r4]
   15a78:	add	fp, r5, r6, lsl #3
   15a7c:	ldr	lr, [sp, #32]
   15a80:	mov	r2, r9
   15a84:	ldr	r3, [r4, #4]
   15a88:	ldr	ip, [r5, r6, lsl #3]
   15a8c:	ldr	r7, [fp, #4]
   15a90:	orr	r3, r3, #1
   15a94:	str	r1, [sp]
   15a98:	str	r3, [sp, #4]
   15a9c:	mov	r1, ip
   15aa0:	str	lr, [sp, #8]
   15aa4:	mov	r0, r7
   15aa8:	ldr	lr, [r4, #40]	; 0x28
   15aac:	str	r3, [sp, #28]
   15ab0:	mov	r3, sl
   15ab4:	str	lr, [sp, #12]
   15ab8:	ldr	lr, [r4, #44]	; 0x2c
   15abc:	str	ip, [sp, #24]
   15ac0:	str	lr, [sp, #16]
   15ac4:	bl	14ca4 <triple_free@@Base+0xe78>
   15ac8:	ldr	ip, [sp, #24]
   15acc:	cmp	ip, r0
   15ad0:	bhi	15b48 <triple_free@@Base+0x1d1c>
   15ad4:	ldr	r3, [pc, #188]	; 15b98 <triple_free@@Base+0x1d6c>
   15ad8:	add	r1, r0, #1
   15adc:	str	r1, [r5, r6, lsl #3]
   15ae0:	add	r3, pc, r3
   15ae4:	cmp	r7, r3
   15ae8:	beq	15afc <triple_free@@Base+0x1cd0>
   15aec:	mov	r0, r7
   15af0:	str	r1, [sp, #24]
   15af4:	bl	112cc <free@plt>
   15af8:	ldr	r1, [sp, #24]
   15afc:	mov	r0, r1
   15b00:	str	r1, [sp, #24]
   15b04:	bl	16f5c <triple_free@@Base+0x3130>
   15b08:	ldr	r3, [sp, #28]
   15b0c:	ldr	lr, [sp, #32]
   15b10:	mov	r2, r9
   15b14:	str	r0, [fp, #4]
   15b18:	mov	r7, r0
   15b1c:	ldr	ip, [r4]
   15b20:	str	r3, [sp, #4]
   15b24:	mov	r3, sl
   15b28:	str	lr, [sp, #8]
   15b2c:	str	ip, [sp]
   15b30:	ldr	ip, [r4, #40]	; 0x28
   15b34:	ldr	r1, [sp, #24]
   15b38:	str	ip, [sp, #12]
   15b3c:	ldr	ip, [r4, #44]	; 0x2c
   15b40:	str	ip, [sp, #16]
   15b44:	bl	14ca4 <triple_free@@Base+0xe78>
   15b48:	ldr	r1, [sp, #36]	; 0x24
   15b4c:	mov	r0, r7
   15b50:	str	r1, [r8]
   15b54:	add	sp, sp, #44	; 0x2c
   15b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b5c:	lsl	r1, r7, #3
   15b60:	mov	r0, #0
   15b64:	str	r3, [sp, #24]
   15b68:	bl	16fb4 <triple_free@@Base+0x3188>
   15b6c:	ldr	r3, [sp, #24]
   15b70:	mov	r5, r0
   15b74:	ldm	r3, {r0, r1}
   15b78:	str	r5, [fp]
   15b7c:	stm	r5, {r0, r1}
   15b80:	b	15a48 <triple_free@@Base+0x1c1c>
   15b84:	bl	11578 <abort@plt>
   15b88:	bl	17170 <triple_free@@Base+0x3344>
   15b8c:	andeq	r6, r1, r0, asr #15
   15b90:	andeq	r6, r1, r0, ror r7
   15b94:	andeq	r6, r1, ip, lsr #14
   15b98:	strdeq	r6, [r1], -r8
   15b9c:	push	{r4, r5, r6, lr}
   15ba0:	mov	r5, r0
   15ba4:	bl	11470 <__errno_location@plt>
   15ba8:	cmp	r5, #0
   15bac:	mov	r1, #48	; 0x30
   15bb0:	mov	r4, r0
   15bb4:	ldr	r0, [pc, #24]	; 15bd4 <triple_free@@Base+0x1da8>
   15bb8:	ldr	r6, [r4]
   15bbc:	add	r0, pc, r0
   15bc0:	add	r0, r0, #256	; 0x100
   15bc4:	movne	r0, r5
   15bc8:	bl	17130 <triple_free@@Base+0x3304>
   15bcc:	str	r6, [r4]
   15bd0:	pop	{r4, r5, r6, pc}
   15bd4:	andeq	r6, r1, ip, lsl r6
   15bd8:	cmp	r0, #0
   15bdc:	beq	15be8 <triple_free@@Base+0x1dbc>
   15be0:	ldr	r0, [r0]
   15be4:	bx	lr
   15be8:	ldr	r0, [pc, #12]	; 15bfc <triple_free@@Base+0x1dd0>
   15bec:	add	r0, pc, r0
   15bf0:	add	r0, r0, #256	; 0x100
   15bf4:	ldr	r0, [r0]
   15bf8:	bx	lr
   15bfc:	andeq	r6, r1, ip, ror #11
   15c00:	cmp	r0, #0
   15c04:	beq	15c10 <triple_free@@Base+0x1de4>
   15c08:	str	r1, [r0]
   15c0c:	bx	lr
   15c10:	ldr	r0, [pc, #12]	; 15c24 <triple_free@@Base+0x1df8>
   15c14:	add	r0, pc, r0
   15c18:	add	r0, r0, #256	; 0x100
   15c1c:	str	r1, [r0]
   15c20:	bx	lr
   15c24:	andeq	r6, r1, r4, asr #11
   15c28:	cmp	r0, #0
   15c2c:	movne	r3, r0
   15c30:	beq	15c60 <triple_free@@Base+0x1e34>
   15c34:	lsr	ip, r1, #5
   15c38:	and	r1, r1, #31
   15c3c:	add	r3, r3, ip, lsl #2
   15c40:	ldr	ip, [r3, #8]
   15c44:	lsr	r0, ip, r1
   15c48:	eor	r2, r0, r2
   15c4c:	and	r0, r0, #1
   15c50:	and	r2, r2, #1
   15c54:	eor	ip, ip, r2, lsl r1
   15c58:	str	ip, [r3, #8]
   15c5c:	bx	lr
   15c60:	ldr	r3, [pc, #8]	; 15c70 <triple_free@@Base+0x1e44>
   15c64:	add	r3, pc, r3
   15c68:	add	r3, r3, #256	; 0x100
   15c6c:	b	15c34 <triple_free@@Base+0x1e08>
   15c70:	andeq	r6, r1, r4, ror r5
   15c74:	subs	r3, r0, #0
   15c78:	beq	15c88 <triple_free@@Base+0x1e5c>
   15c7c:	ldr	r0, [r3, #4]
   15c80:	str	r1, [r3, #4]
   15c84:	bx	lr
   15c88:	ldr	r3, [pc, #8]	; 15c98 <triple_free@@Base+0x1e6c>
   15c8c:	add	r3, pc, r3
   15c90:	add	r3, r3, #256	; 0x100
   15c94:	b	15c7c <triple_free@@Base+0x1e50>
   15c98:	andeq	r6, r1, ip, asr #10
   15c9c:	cmp	r0, #0
   15ca0:	push	{r3, lr}
   15ca4:	beq	15cc8 <triple_free@@Base+0x1e9c>
   15ca8:	cmp	r2, #0
   15cac:	cmpne	r1, #0
   15cb0:	mov	r3, #8
   15cb4:	strne	r1, [r0, #40]	; 0x28
   15cb8:	str	r3, [r0]
   15cbc:	strne	r2, [r0, #44]	; 0x2c
   15cc0:	popne	{r3, pc}
   15cc4:	bl	11578 <abort@plt>
   15cc8:	ldr	r0, [pc, #8]	; 15cd8 <triple_free@@Base+0x1eac>
   15ccc:	add	r0, pc, r0
   15cd0:	add	r0, r0, #256	; 0x100
   15cd4:	b	15ca8 <triple_free@@Base+0x1e7c>
   15cd8:	andeq	r6, r1, ip, lsl #10
   15cdc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ce0:	sub	sp, sp, #24
   15ce4:	mov	r7, r0
   15ce8:	mov	sl, r1
   15cec:	ldr	r4, [sp, #56]	; 0x38
   15cf0:	mov	r9, r2
   15cf4:	mov	r8, r3
   15cf8:	cmp	r4, #0
   15cfc:	beq	15d50 <triple_free@@Base+0x1f24>
   15d00:	bl	11470 <__errno_location@plt>
   15d04:	ldr	r3, [r4]
   15d08:	add	lr, r4, #8
   15d0c:	mov	r1, sl
   15d10:	mov	r2, r9
   15d14:	ldr	r6, [r0]
   15d18:	mov	r5, r0
   15d1c:	str	r3, [sp]
   15d20:	mov	r0, r7
   15d24:	ldr	ip, [r4, #4]
   15d28:	mov	r3, r8
   15d2c:	stmib	sp, {ip, lr}
   15d30:	ldr	ip, [r4, #40]	; 0x28
   15d34:	str	ip, [sp, #12]
   15d38:	ldr	ip, [r4, #44]	; 0x2c
   15d3c:	str	ip, [sp, #16]
   15d40:	bl	14ca4 <triple_free@@Base+0xe78>
   15d44:	str	r6, [r5]
   15d48:	add	sp, sp, #24
   15d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d50:	ldr	r4, [pc, #8]	; 15d60 <triple_free@@Base+0x1f34>
   15d54:	add	r4, pc, r4
   15d58:	add	r4, r4, #256	; 0x100
   15d5c:	b	15d00 <triple_free@@Base+0x1ed4>
   15d60:	andeq	r6, r1, r4, lsl #9
   15d64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d68:	subs	r4, r3, #0
   15d6c:	sub	sp, sp, #36	; 0x24
   15d70:	mov	r7, r0
   15d74:	mov	r6, r1
   15d78:	mov	r5, r2
   15d7c:	beq	15e38 <triple_free@@Base+0x200c>
   15d80:	bl	11470 <__errno_location@plt>
   15d84:	ldr	r3, [r4]
   15d88:	ldr	sl, [r4, #4]
   15d8c:	add	r9, r4, #8
   15d90:	mov	r8, r0
   15d94:	mov	r0, #0
   15d98:	ldr	r2, [r8]
   15d9c:	cmp	r5, r0
   15da0:	orreq	sl, sl, #1
   15da4:	str	r9, [sp, #8]
   15da8:	mov	r1, r0
   15dac:	stm	sp, {r3, sl}
   15db0:	mov	r3, r6
   15db4:	ldr	ip, [r4, #40]	; 0x28
   15db8:	str	r2, [sp, #28]
   15dbc:	mov	r2, r7
   15dc0:	str	ip, [sp, #12]
   15dc4:	ldr	ip, [r4, #44]	; 0x2c
   15dc8:	str	ip, [sp, #16]
   15dcc:	bl	14ca4 <triple_free@@Base+0xe78>
   15dd0:	add	r1, r0, #1
   15dd4:	mov	fp, r0
   15dd8:	str	r1, [sp, #24]
   15ddc:	mov	r0, r1
   15de0:	bl	16f5c <triple_free@@Base+0x3130>
   15de4:	ldr	lr, [r4]
   15de8:	str	sl, [sp, #4]
   15dec:	mov	r3, r6
   15df0:	str	r9, [sp, #8]
   15df4:	mov	r2, r7
   15df8:	str	lr, [sp]
   15dfc:	ldr	lr, [r4, #40]	; 0x28
   15e00:	ldr	r1, [sp, #24]
   15e04:	str	lr, [sp, #12]
   15e08:	ldr	lr, [r4, #44]	; 0x2c
   15e0c:	str	lr, [sp, #16]
   15e10:	str	r0, [sp, #24]
   15e14:	bl	14ca4 <triple_free@@Base+0xe78>
   15e18:	ldr	r3, [sp, #28]
   15e1c:	cmp	r5, #0
   15e20:	str	r3, [r8]
   15e24:	ldr	ip, [sp, #24]
   15e28:	strne	fp, [r5]
   15e2c:	mov	r0, ip
   15e30:	add	sp, sp, #36	; 0x24
   15e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e38:	ldr	r4, [pc, #8]	; 15e48 <triple_free@@Base+0x201c>
   15e3c:	add	r4, pc, r4
   15e40:	add	r4, r4, #256	; 0x100
   15e44:	b	15d80 <triple_free@@Base+0x1f54>
   15e48:	muleq	r1, ip, r3
   15e4c:	mov	r3, r2
   15e50:	mov	r2, #0
   15e54:	b	15d64 <triple_free@@Base+0x1f38>
   15e58:	ldr	r2, [pc, #152]	; 15ef8 <triple_free@@Base+0x20cc>
   15e5c:	push	{r3, r4, r5, r6, r7, lr}
   15e60:	add	r2, pc, r2
   15e64:	ldr	r3, [pc, #144]	; 15efc <triple_free@@Base+0x20d0>
   15e68:	ldr	r6, [r2]
   15e6c:	add	r3, pc, r3
   15e70:	cmp	r6, #1
   15e74:	ldr	r7, [r3]
   15e78:	movhi	r4, #1
   15e7c:	movhi	r5, r7
   15e80:	bls	15e9c <triple_free@@Base+0x2070>
   15e84:	ldr	r0, [r5, #12]
   15e88:	add	r4, r4, #1
   15e8c:	bl	112cc <free@plt>
   15e90:	cmp	r4, r6
   15e94:	add	r5, r5, #8
   15e98:	bne	15e84 <triple_free@@Base+0x2058>
   15e9c:	ldr	r4, [pc, #92]	; 15f00 <triple_free@@Base+0x20d4>
   15ea0:	ldr	r0, [r7, #4]
   15ea4:	add	r4, pc, r4
   15ea8:	cmp	r0, r4
   15eac:	beq	15ec4 <triple_free@@Base+0x2098>
   15eb0:	bl	112cc <free@plt>
   15eb4:	ldr	r3, [pc, #72]	; 15f04 <triple_free@@Base+0x20d8>
   15eb8:	mov	r2, #256	; 0x100
   15ebc:	add	r3, pc, r3
   15ec0:	stmib	r3, {r2, r4}
   15ec4:	ldr	r4, [pc, #60]	; 15f08 <triple_free@@Base+0x20dc>
   15ec8:	add	r4, pc, r4
   15ecc:	add	r5, r4, #4
   15ed0:	cmp	r7, r5
   15ed4:	beq	15ee4 <triple_free@@Base+0x20b8>
   15ed8:	mov	r0, r7
   15edc:	bl	112cc <free@plt>
   15ee0:	str	r5, [r4]
   15ee4:	ldr	r3, [pc, #32]	; 15f0c <triple_free@@Base+0x20e0>
   15ee8:	mov	r2, #1
   15eec:	add	r3, pc, r3
   15ef0:	str	r2, [r3]
   15ef4:	pop	{r3, r4, r5, r6, r7, pc}
   15ef8:	andeq	r6, r1, ip, lsl r3
   15efc:	andeq	r6, r1, r4, asr #6
   15f00:	andeq	r6, r1, r4, lsr r3
   15f04:	strdeq	r6, [r1], -r4
   15f08:	andeq	r6, r1, r8, ror #5
   15f0c:	muleq	r1, r0, r2
   15f10:	ldr	r3, [pc, #12]	; 15f24 <triple_free@@Base+0x20f8>
   15f14:	mvn	r2, #0
   15f18:	add	r3, pc, r3
   15f1c:	add	r3, r3, #256	; 0x100
   15f20:	b	159cc <triple_free@@Base+0x1ba0>
   15f24:	andeq	r6, r1, r0, asr #5
   15f28:	ldr	r3, [pc, #8]	; 15f38 <triple_free@@Base+0x210c>
   15f2c:	add	r3, pc, r3
   15f30:	add	r3, r3, #256	; 0x100
   15f34:	b	159cc <triple_free@@Base+0x1ba0>
   15f38:	andeq	r6, r1, ip, lsr #5
   15f3c:	mov	r1, r0
   15f40:	mov	r0, #0
   15f44:	b	15f10 <triple_free@@Base+0x20e4>
   15f48:	mov	r2, r1
   15f4c:	mov	r1, r0
   15f50:	mov	r0, #0
   15f54:	b	15f28 <triple_free@@Base+0x20fc>
   15f58:	ldr	r3, [pc, #92]	; 15fbc <triple_free@@Base+0x2190>
   15f5c:	ldr	ip, [pc, #92]	; 15fc0 <triple_free@@Base+0x2194>
   15f60:	add	r3, pc, r3
   15f64:	push	{r4, r5, r6, r7, lr}
   15f68:	sub	sp, sp, #60	; 0x3c
   15f6c:	ldr	r4, [r3, ip]
   15f70:	add	r5, sp, #4
   15f74:	mov	r7, r2
   15f78:	mov	r6, r0
   15f7c:	mov	r0, r5
   15f80:	ldr	r3, [r4]
   15f84:	str	r3, [sp, #52]	; 0x34
   15f88:	bl	14aec <triple_free@@Base+0xcc0>
   15f8c:	mov	r3, r5
   15f90:	mvn	r2, #0
   15f94:	mov	r0, r6
   15f98:	mov	r1, r7
   15f9c:	bl	159cc <triple_free@@Base+0x1ba0>
   15fa0:	ldr	r2, [sp, #52]	; 0x34
   15fa4:	ldr	r3, [r4]
   15fa8:	cmp	r2, r3
   15fac:	bne	15fb8 <triple_free@@Base+0x218c>
   15fb0:	add	sp, sp, #60	; 0x3c
   15fb4:	pop	{r4, r5, r6, r7, pc}
   15fb8:	bl	11314 <__stack_chk_fail@plt>
   15fbc:	muleq	r1, r8, r0
   15fc0:	andeq	r0, r0, r0, lsr r1
   15fc4:	ldr	ip, [pc, #96]	; 1602c <triple_free@@Base+0x2200>
   15fc8:	push	{r4, r5, r6, r7, r8, lr}
   15fcc:	add	ip, pc, ip
   15fd0:	ldr	lr, [pc, #88]	; 16030 <triple_free@@Base+0x2204>
   15fd4:	sub	sp, sp, #56	; 0x38
   15fd8:	mov	r8, r3
   15fdc:	add	r5, sp, #4
   15fe0:	mov	r7, r2
   15fe4:	mov	r6, r0
   15fe8:	ldr	r4, [ip, lr]
   15fec:	mov	r0, r5
   15ff0:	ldr	r3, [r4]
   15ff4:	str	r3, [sp, #52]	; 0x34
   15ff8:	bl	14aec <triple_free@@Base+0xcc0>
   15ffc:	mov	r2, r8
   16000:	mov	r3, r5
   16004:	mov	r0, r6
   16008:	mov	r1, r7
   1600c:	bl	159cc <triple_free@@Base+0x1ba0>
   16010:	ldr	r2, [sp, #52]	; 0x34
   16014:	ldr	r3, [r4]
   16018:	cmp	r2, r3
   1601c:	bne	16028 <triple_free@@Base+0x21fc>
   16020:	add	sp, sp, #56	; 0x38
   16024:	pop	{r4, r5, r6, r7, r8, pc}
   16028:	bl	11314 <__stack_chk_fail@plt>
   1602c:	andeq	r6, r1, ip, lsr #32
   16030:	andeq	r0, r0, r0, lsr r1
   16034:	mov	r2, r1
   16038:	mov	r1, r0
   1603c:	mov	r0, #0
   16040:	b	15f58 <triple_free@@Base+0x212c>
   16044:	mov	ip, r1
   16048:	mov	r3, r2
   1604c:	mov	r1, r0
   16050:	mov	r2, ip
   16054:	mov	r0, #0
   16058:	b	15fc4 <triple_free@@Base+0x2198>
   1605c:	push	{r4, r5, r6, r7, r8, lr}
   16060:	mov	r5, r2
   16064:	ldr	lr, [pc, #136]	; 160f4 <triple_free@@Base+0x22c8>
   16068:	mov	r7, r0
   1606c:	mov	r6, r1
   16070:	ldr	r4, [pc, #128]	; 160f8 <triple_free@@Base+0x22cc>
   16074:	add	lr, pc, lr
   16078:	sub	sp, sp, #56	; 0x38
   1607c:	add	lr, lr, #256	; 0x100
   16080:	ldr	r8, [pc, #116]	; 160fc <triple_free@@Base+0x22d0>
   16084:	add	r4, pc, r4
   16088:	add	ip, sp, #4
   1608c:	ldm	lr!, {r0, r1, r2, r3}
   16090:	ldr	r4, [r4, r8]
   16094:	stmia	ip!, {r0, r1, r2, r3}
   16098:	ldm	lr!, {r0, r1, r2, r3}
   1609c:	ldr	r8, [r4]
   160a0:	stmia	ip!, {r0, r1, r2, r3}
   160a4:	ldm	lr, {r0, r1, r2, r3}
   160a8:	str	r8, [sp, #52]	; 0x34
   160ac:	stm	ip, {r0, r1, r2, r3}
   160b0:	mov	r1, r5
   160b4:	add	r5, sp, #4
   160b8:	mov	r2, #1
   160bc:	mov	r0, r5
   160c0:	bl	15c28 <triple_free@@Base+0x1dfc>
   160c4:	mov	r2, r6
   160c8:	mov	r3, r5
   160cc:	mov	r1, r7
   160d0:	mov	r0, #0
   160d4:	bl	159cc <triple_free@@Base+0x1ba0>
   160d8:	ldr	r2, [sp, #52]	; 0x34
   160dc:	ldr	r3, [r4]
   160e0:	cmp	r2, r3
   160e4:	bne	160f0 <triple_free@@Base+0x22c4>
   160e8:	add	sp, sp, #56	; 0x38
   160ec:	pop	{r4, r5, r6, r7, r8, pc}
   160f0:	bl	11314 <__stack_chk_fail@plt>
   160f4:	andeq	r6, r1, r4, ror #2
   160f8:	andeq	r5, r1, r4, ror pc
   160fc:	andeq	r0, r0, r0, lsr r1
   16100:	mov	r2, r1
   16104:	mvn	r1, #0
   16108:	b	1605c <triple_free@@Base+0x2230>
   1610c:	mov	r1, #58	; 0x3a
   16110:	b	16100 <triple_free@@Base+0x22d4>
   16114:	mov	r2, #58	; 0x3a
   16118:	b	1605c <triple_free@@Base+0x2230>
   1611c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16120:	mov	r5, r2
   16124:	ldr	lr, [pc, #144]	; 161bc <triple_free@@Base+0x2390>
   16128:	mov	r8, r0
   1612c:	mov	r9, r1
   16130:	mov	r7, r3
   16134:	add	lr, pc, lr
   16138:	ldr	r4, [pc, #128]	; 161c0 <triple_free@@Base+0x2394>
   1613c:	add	lr, lr, #256	; 0x100
   16140:	sub	sp, sp, #56	; 0x38
   16144:	ldr	sl, [pc, #120]	; 161c4 <triple_free@@Base+0x2398>
   16148:	add	r4, pc, r4
   1614c:	ldm	lr!, {r0, r1, r2, r3}
   16150:	add	ip, sp, #4
   16154:	ldr	r4, [r4, sl]
   16158:	ldr	r6, [sp, #88]	; 0x58
   1615c:	stmia	ip!, {r0, r1, r2, r3}
   16160:	ldm	lr!, {r0, r1, r2, r3}
   16164:	ldr	sl, [r4]
   16168:	stmia	ip!, {r0, r1, r2, r3}
   1616c:	ldm	lr, {r0, r1, r2, r3}
   16170:	str	sl, [sp, #52]	; 0x34
   16174:	stm	ip, {r0, r1, r2, r3}
   16178:	mov	r2, r5
   1617c:	add	r5, sp, #4
   16180:	mov	r1, r9
   16184:	mov	r0, r5
   16188:	bl	15c9c <triple_free@@Base+0x1e70>
   1618c:	mov	r2, r6
   16190:	mov	r3, r5
   16194:	mov	r0, r8
   16198:	mov	r1, r7
   1619c:	bl	159cc <triple_free@@Base+0x1ba0>
   161a0:	ldr	r2, [sp, #52]	; 0x34
   161a4:	ldr	r3, [r4]
   161a8:	cmp	r2, r3
   161ac:	bne	161b8 <triple_free@@Base+0x238c>
   161b0:	add	sp, sp, #56	; 0x38
   161b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   161b8:	bl	11314 <__stack_chk_fail@plt>
   161bc:	andeq	r6, r1, r4, lsr #1
   161c0:			; <UNDEFINED> instruction: 0x00015eb0
   161c4:	andeq	r0, r0, r0, lsr r1
   161c8:	push	{lr}		; (str lr, [sp, #-4]!)
   161cc:	sub	sp, sp, #12
   161d0:	mvn	ip, #0
   161d4:	str	ip, [sp]
   161d8:	bl	1611c <triple_free@@Base+0x22f0>
   161dc:	add	sp, sp, #12
   161e0:	pop	{pc}		; (ldr pc, [sp], #4)
   161e4:	mov	ip, r1
   161e8:	mov	r3, r2
   161ec:	mov	r1, r0
   161f0:	mov	r2, ip
   161f4:	mov	r0, #0
   161f8:	b	161c8 <triple_free@@Base+0x239c>
   161fc:	push	{lr}		; (str lr, [sp, #-4]!)
   16200:	sub	sp, sp, #12
   16204:	mov	lr, r1
   16208:	mov	ip, r2
   1620c:	mov	r1, r0
   16210:	str	r3, [sp]
   16214:	mov	r2, lr
   16218:	mov	r3, ip
   1621c:	mov	r0, #0
   16220:	bl	1611c <triple_free@@Base+0x22f0>
   16224:	add	sp, sp, #12
   16228:	pop	{pc}		; (ldr pc, [sp], #4)
   1622c:	ldr	r3, [pc, #12]	; 16240 <triple_free@@Base+0x2414>
   16230:	ldr	ip, [pc, #12]	; 16244 <triple_free@@Base+0x2418>
   16234:	add	r3, pc, r3
   16238:	ldr	r3, [r3, ip]
   1623c:	b	159cc <triple_free@@Base+0x1ba0>
   16240:	andeq	r5, r1, r4, asr #27
   16244:	andeq	r0, r0, r8, lsr #2
   16248:	mov	r2, r1
   1624c:	mov	r1, r0
   16250:	mov	r0, #0
   16254:	b	1622c <triple_free@@Base+0x2400>
   16258:	mvn	r2, #0
   1625c:	b	1622c <triple_free@@Base+0x2400>
   16260:	mov	r1, r0
   16264:	mov	r0, #0
   16268:	b	16258 <triple_free@@Base+0x242c>
   1626c:	ldr	r3, [pc, #344]	; 163cc <triple_free@@Base+0x25a0>
   16270:	ldr	r2, [pc, #344]	; 163d0 <triple_free@@Base+0x25a4>
   16274:	add	r3, pc, r3
   16278:	push	{r4, r5, r6, r7, r8, r9, lr}
   1627c:	sub	sp, sp, #220	; 0xdc
   16280:	ldr	r7, [r3, r2]
   16284:	mov	r9, r1
   16288:	mov	r8, r0
   1628c:	ldr	r3, [r7]
   16290:	str	r3, [sp, #212]	; 0xd4
   16294:	bl	12ae8 <close_stdout@@Base+0x118>
   16298:	mov	r5, r0
   1629c:	mov	r0, r9
   162a0:	bl	12ae8 <close_stdout@@Base+0x118>
   162a4:	mov	r4, r0
   162a8:	mov	r0, r5
   162ac:	bl	12b44 <close_stdout@@Base+0x174>
   162b0:	mov	r6, r0
   162b4:	mov	r0, r4
   162b8:	bl	12b44 <close_stdout@@Base+0x174>
   162bc:	cmp	r6, r0
   162c0:	beq	162e4 <triple_free@@Base+0x24b8>
   162c4:	mov	r4, #0
   162c8:	ldr	r2, [sp, #212]	; 0xd4
   162cc:	mov	r0, r4
   162d0:	ldr	r3, [r7]
   162d4:	cmp	r2, r3
   162d8:	bne	163c8 <triple_free@@Base+0x259c>
   162dc:	add	sp, sp, #220	; 0xdc
   162e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   162e4:	mov	r0, r5
   162e8:	mov	r1, r4
   162ec:	mov	r2, r6
   162f0:	bl	112fc <memcmp@plt>
   162f4:	cmp	r0, #0
   162f8:	bne	162c4 <triple_free@@Base+0x2498>
   162fc:	mov	r0, r8
   16300:	bl	17444 <triple_free@@Base+0x3618>
   16304:	mov	r8, r0
   16308:	mov	r0, r9
   1630c:	bl	17444 <triple_free@@Base+0x3618>
   16310:	mov	r1, r8
   16314:	mov	r2, sp
   16318:	mov	r6, r0
   1631c:	mov	r0, #3
   16320:	bl	11560 <__xstat64@plt>
   16324:	cmp	r0, #0
   16328:	beq	16348 <triple_free@@Base+0x251c>
   1632c:	bl	11470 <__errno_location@plt>
   16330:	ldr	r2, [pc, #156]	; 163d4 <triple_free@@Base+0x25a8>
   16334:	mov	r3, r8
   16338:	add	r2, pc, r2
   1633c:	ldr	r1, [r0]
   16340:	mov	r0, #1
   16344:	bl	113b0 <error@plt>
   16348:	mov	r0, #3
   1634c:	mov	r1, r6
   16350:	add	r2, sp, #104	; 0x68
   16354:	bl	11560 <__xstat64@plt>
   16358:	cmp	r0, #0
   1635c:	bne	1638c <triple_free@@Base+0x2560>
   16360:	ldrd	r4, [sp, #96]	; 0x60
   16364:	ldrd	r2, [sp, #200]	; 0xc8
   16368:	cmp	r5, r3
   1636c:	cmpeq	r4, r2
   16370:	movne	r4, #0
   16374:	beq	163ac <triple_free@@Base+0x2580>
   16378:	mov	r0, r8
   1637c:	bl	112cc <free@plt>
   16380:	mov	r0, r6
   16384:	bl	112cc <free@plt>
   16388:	b	162c8 <triple_free@@Base+0x249c>
   1638c:	bl	11470 <__errno_location@plt>
   16390:	ldr	r2, [pc, #64]	; 163d8 <triple_free@@Base+0x25ac>
   16394:	mov	r3, r6
   16398:	add	r2, pc, r2
   1639c:	ldr	r1, [r0]
   163a0:	mov	r0, #1
   163a4:	bl	113b0 <error@plt>
   163a8:	b	16360 <triple_free@@Base+0x2534>
   163ac:	ldrd	r0, [sp]
   163b0:	ldrd	r2, [sp, #104]	; 0x68
   163b4:	cmp	r1, r3
   163b8:	cmpeq	r0, r2
   163bc:	movne	r4, #0
   163c0:	moveq	r4, #1
   163c4:	b	16378 <triple_free@@Base+0x254c>
   163c8:	bl	11314 <__stack_chk_fail@plt>
   163cc:	andeq	r5, r1, r4, lsl #27
   163d0:	andeq	r0, r0, r0, lsr r1
   163d4:	andeq	r4, r0, r4, asr #22
   163d8:	andeq	r4, r0, r4, ror #21
   163dc:	push	{r3, r4, r5, lr}
   163e0:	mov	r4, r1
   163e4:	mov	r2, r4
   163e8:	mov	r1, #0
   163ec:	mov	r5, r0
   163f0:	bl	114e8 <memchr@plt>
   163f4:	cmp	r0, #0
   163f8:	rsbne	r0, r5, r0
   163fc:	addne	r0, r0, #1
   16400:	moveq	r0, r4
   16404:	pop	{r3, r4, r5, pc}
   16408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1640c:	sub	sp, sp, #84	; 0x54
   16410:	ldr	r5, [pc, #1396]	; 1698c <triple_free@@Base+0x2b60>
   16414:	mov	sl, r1
   16418:	ldr	r3, [pc, #1392]	; 16990 <triple_free@@Base+0x2b64>
   1641c:	add	r5, pc, r5
   16420:	ldr	r3, [r5, r3]
   16424:	str	r3, [sp, #12]
   16428:	ldr	r3, [r3]
   1642c:	str	r3, [sp, #76]	; 0x4c
   16430:	bl	114a0 <__strdup@plt>
   16434:	cmp	r0, #0
   16438:	str	r0, [sp]
   1643c:	beq	16968 <triple_free@@Base+0x2b3c>
   16440:	bl	11380 <__ctype_get_mb_cur_max@plt>
   16444:	cmp	r0, #1
   16448:	bls	166ec <triple_free@@Base+0x28c0>
   1644c:	cmp	sl, #0
   16450:	bne	167ac <triple_free@@Base+0x2980>
   16454:	add	r4, sp, #24
   16458:	ldr	r0, [sp]
   1645c:	mov	fp, #0
   16460:	str	r0, [sp, #36]	; 0x24
   16464:	bl	1144c <strlen@plt>
   16468:	ldr	r1, [sp]
   1646c:	str	fp, [sp, #24]
   16470:	strb	fp, [sp, #20]
   16474:	str	fp, [r4, #4]
   16478:	strb	fp, [sp, #32]
   1647c:	add	r9, r1, r0
   16480:	str	r9, [sp, #16]
   16484:	cmp	r1, r9
   16488:	bcs	166bc <triple_free@@Base+0x2890>
   1648c:	add	r1, sp, #48	; 0x30
   16490:	str	r1, [sp, #4]
   16494:	ldrb	r1, [sp, #20]
   16498:	mov	r8, fp
   1649c:	ldr	r3, [sp]
   164a0:	mov	r7, #1
   164a4:	cmp	r1, #0
   164a8:	mov	ip, r3
   164ac:	bne	16550 <triple_free@@Base+0x2724>
   164b0:	ldr	r2, [pc, #1244]	; 16994 <triple_free@@Base+0x2b68>
   164b4:	ldrb	r3, [ip]
   164b8:	ldr	r1, [r5, r2]
   164bc:	and	r2, r3, #31
   164c0:	lsr	r3, r3, #5
   164c4:	ldr	r3, [r1, r3, lsl #2]
   164c8:	lsr	r3, r3, r2
   164cc:	tst	r3, #1
   164d0:	beq	16600 <triple_free@@Base+0x27d4>
   164d4:	str	r7, [sp, #40]	; 0x28
   164d8:	mov	r6, #1
   164dc:	ldrb	r2, [ip]
   164e0:	ldr	r9, [sp, #16]
   164e4:	ldr	sl, [sp, #36]	; 0x24
   164e8:	strb	r7, [sp, #44]	; 0x2c
   164ec:	str	r2, [sp, #48]	; 0x30
   164f0:	cmp	fp, #0
   164f4:	strb	r7, [sp, #32]
   164f8:	beq	165d8 <triple_free@@Base+0x27ac>
   164fc:	cmp	fp, #1
   16500:	beq	16618 <triple_free@@Base+0x27ec>
   16504:	cmp	fp, #2
   16508:	bne	165f8 <triple_free@@Base+0x27cc>
   1650c:	ldrb	r2, [sp, #44]	; 0x2c
   16510:	cmp	r2, #0
   16514:	beq	165f8 <triple_free@@Base+0x27cc>
   16518:	ldr	r0, [sp, #48]	; 0x30
   1651c:	bl	11440 <iswspace@plt>
   16520:	cmp	r0, #0
   16524:	movne	fp, #2
   16528:	moveq	fp, #1
   1652c:	add	ip, sl, r6
   16530:	strb	r8, [sp, #32]
   16534:	cmp	ip, r9
   16538:	str	ip, [sp, #36]	; 0x24
   1653c:	mov	r1, #0
   16540:	bcs	166dc <triple_free@@Base+0x28b0>
   16544:	ldrb	r1, [sp, #20]
   16548:	cmp	r1, #0
   1654c:	beq	164b0 <triple_free@@Base+0x2684>
   16550:	ldr	r1, [sp, #36]	; 0x24
   16554:	add	r0, sp, #48	; 0x30
   16558:	mov	r3, r4
   1655c:	rsb	r2, r1, r9
   16560:	bl	113a4 <mbrtowc@plt>
   16564:	cmn	r0, #1
   16568:	str	r0, [sp, #40]	; 0x28
   1656c:	beq	16648 <triple_free@@Base+0x281c>
   16570:	cmn	r0, #2
   16574:	beq	16660 <triple_free@@Base+0x2834>
   16578:	cmp	r0, #0
   1657c:	ldr	r6, [sp, #36]	; 0x24
   16580:	bne	165a0 <triple_free@@Base+0x2774>
   16584:	str	r7, [sp, #40]	; 0x28
   16588:	ldrb	r3, [r6]
   1658c:	cmp	r3, #0
   16590:	bne	1696c <triple_free@@Base+0x2b40>
   16594:	ldr	r3, [sp, #48]	; 0x30
   16598:	cmp	r3, #0
   1659c:	bne	16948 <triple_free@@Base+0x2b1c>
   165a0:	mov	r0, r4
   165a4:	strb	r7, [sp, #44]	; 0x2c
   165a8:	bl	112f0 <mbsinit@plt>
   165ac:	strb	r7, [sp, #32]
   165b0:	cmp	r0, #0
   165b4:	strbne	r8, [sp, #20]
   165b8:	moveq	sl, r6
   165bc:	movne	sl, r6
   165c0:	ldreq	r9, [sp, #16]
   165c4:	ldreq	r6, [sp, #40]	; 0x28
   165c8:	ldrne	r9, [sp, #16]
   165cc:	ldrne	r6, [sp, #40]	; 0x28
   165d0:	cmp	fp, #0
   165d4:	bne	164fc <triple_free@@Base+0x26d0>
   165d8:	ldrb	r2, [sp, #44]	; 0x2c
   165dc:	cmp	r2, #0
   165e0:	beq	165f8 <triple_free@@Base+0x27cc>
   165e4:	ldr	r0, [sp, #48]	; 0x30
   165e8:	bl	11440 <iswspace@plt>
   165ec:	rsbs	fp, r0, #1
   165f0:	movcc	fp, #0
   165f4:	b	1652c <triple_free@@Base+0x2700>
   165f8:	mov	fp, #1
   165fc:	b	1652c <triple_free@@Base+0x2700>
   16600:	mov	r0, r4
   16604:	bl	112f0 <mbsinit@plt>
   16608:	cmp	r0, #0
   1660c:	beq	16924 <triple_free@@Base+0x2af8>
   16610:	strb	r7, [sp, #20]
   16614:	b	16550 <triple_free@@Base+0x2724>
   16618:	ldrb	r2, [sp, #44]	; 0x2c
   1661c:	cmp	r2, #0
   16620:	beq	1652c <triple_free@@Base+0x2700>
   16624:	ldr	r0, [sp, #48]	; 0x30
   16628:	bl	11440 <iswspace@plt>
   1662c:	ldr	r2, [sp, #8]
   16630:	cmp	r0, #0
   16634:	movne	r2, sl
   16638:	moveq	fp, #1
   1663c:	movne	fp, #2
   16640:	str	r2, [sp, #8]
   16644:	b	1652c <triple_free@@Base+0x2700>
   16648:	str	r7, [sp, #40]	; 0x28
   1664c:	mov	r6, #1
   16650:	strb	r8, [sp, #44]	; 0x2c
   16654:	ldr	r9, [sp, #16]
   16658:	ldr	sl, [sp, #36]	; 0x24
   1665c:	b	164f0 <triple_free@@Base+0x26c4>
   16660:	ldr	ip, [sp, #36]	; 0x24
   16664:	ldr	r9, [sp, #16]
   16668:	strb	r8, [sp, #44]	; 0x2c
   1666c:	rsb	r3, ip, r9
   16670:	mov	sl, ip
   16674:	str	r3, [sp, #40]	; 0x28
   16678:	mov	r6, r3
   1667c:	b	164f0 <triple_free@@Base+0x26c4>
   16680:	ldr	fp, [sp, #36]	; 0x24
   16684:	mov	r2, #1
   16688:	mov	r3, #0
   1668c:	str	r2, [sp, #40]	; 0x28
   16690:	strb	r3, [sp, #44]	; 0x2c
   16694:	mov	r3, #1
   16698:	strb	r3, [sp, #32]
   1669c:	mov	r0, fp
   166a0:	bl	1144c <strlen@plt>
   166a4:	mov	r1, fp
   166a8:	add	r2, r0, #1
   166ac:	ldr	r0, [sp]
   166b0:	bl	112c0 <memmove@plt>
   166b4:	cmp	sl, #1
   166b8:	bne	16458 <triple_free@@Base+0x262c>
   166bc:	ldr	r1, [sp, #12]
   166c0:	ldr	r2, [sp, #76]	; 0x4c
   166c4:	ldr	r0, [sp]
   166c8:	ldr	r3, [r1]
   166cc:	cmp	r2, r3
   166d0:	bne	16944 <triple_free@@Base+0x2b18>
   166d4:	add	sp, sp, #84	; 0x54
   166d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166dc:	cmp	fp, #2
   166e0:	ldreq	r3, [sp, #8]
   166e4:	strbeq	r1, [r3]
   166e8:	b	166bc <triple_free@@Base+0x2890>
   166ec:	cmp	sl, #0
   166f0:	beq	16758 <triple_free@@Base+0x292c>
   166f4:	ldr	r2, [sp]
   166f8:	ldrb	r4, [r2]
   166fc:	cmp	r4, #0
   16700:	beq	16914 <triple_free@@Base+0x2ae8>
   16704:	bl	1141c <__ctype_b_loc@plt>
   16708:	ldr	r3, [sp]
   1670c:	ldr	r1, [r0]
   16710:	b	16724 <triple_free@@Base+0x28f8>
   16714:	ldrb	r4, [r3, #1]
   16718:	add	r3, r3, #1
   1671c:	cmp	r4, #0
   16720:	beq	1690c <triple_free@@Base+0x2ae0>
   16724:	lsl	r4, r4, #1
   16728:	mov	r5, r3
   1672c:	ldrh	r2, [r1, r4]
   16730:	tst	r2, #8192	; 0x2000
   16734:	bne	16714 <triple_free@@Base+0x28e8>
   16738:	mov	r0, r5
   1673c:	bl	1144c <strlen@plt>
   16740:	mov	r1, r5
   16744:	add	r2, r0, #1
   16748:	ldr	r0, [sp]
   1674c:	bl	112c0 <memmove@plt>
   16750:	cmp	sl, #1
   16754:	beq	166bc <triple_free@@Base+0x2890>
   16758:	ldr	r0, [sp]
   1675c:	bl	1144c <strlen@plt>
   16760:	ldr	r1, [sp]
   16764:	sub	r0, r0, #1
   16768:	adds	r4, r1, r0
   1676c:	bcs	166bc <triple_free@@Base+0x2890>
   16770:	bl	1141c <__ctype_b_loc@plt>
   16774:	mov	r3, r4
   16778:	mov	ip, #0
   1677c:	ldr	r4, [sp]
   16780:	b	16790 <triple_free@@Base+0x2964>
   16784:	cmp	r4, r3
   16788:	strb	ip, [r3, #1]
   1678c:	bhi	166bc <triple_free@@Base+0x2890>
   16790:	ldrb	r2, [r3], #-1
   16794:	ldr	r1, [r0]
   16798:	lsl	r2, r2, #1
   1679c:	ldrh	r2, [r1, r2]
   167a0:	tst	r2, #8192	; 0x2000
   167a4:	bne	16784 <triple_free@@Base+0x2958>
   167a8:	b	166bc <triple_free@@Base+0x2890>
   167ac:	ldr	r0, [sp]
   167b0:	add	r4, sp, #24
   167b4:	mov	r8, #0
   167b8:	str	r0, [sp, #36]	; 0x24
   167bc:	bl	1144c <strlen@plt>
   167c0:	ldr	r3, [sp]
   167c4:	str	r8, [sp, #24]
   167c8:	strb	r8, [sp, #20]
   167cc:	str	r8, [r4, #4]
   167d0:	strb	r8, [sp, #32]
   167d4:	add	r2, r3, r0
   167d8:	str	r2, [sp, #16]
   167dc:	cmp	r3, r2
   167e0:	bcs	1691c <triple_free@@Base+0x2af0>
   167e4:	mov	fp, r3
   167e8:	add	r9, sp, #48	; 0x30
   167ec:	mov	r7, #1
   167f0:	mov	r6, r2
   167f4:	b	16860 <triple_free@@Base+0x2a34>
   167f8:	ldr	r2, [pc, #404]	; 16994 <triple_free@@Base+0x2b68>
   167fc:	ldrb	r3, [fp]
   16800:	ldr	r1, [r5, r2]
   16804:	and	r2, r3, #31
   16808:	lsr	r3, r3, #5
   1680c:	ldr	r3, [r1, r3, lsl #2]
   16810:	lsr	r3, r3, r2
   16814:	tst	r3, #1
   16818:	beq	168d4 <triple_free@@Base+0x2aa8>
   1681c:	str	r7, [sp, #40]	; 0x28
   16820:	ldrb	r6, [fp]
   16824:	ldr	fp, [sp, #36]	; 0x24
   16828:	strb	r7, [sp, #44]	; 0x2c
   1682c:	str	r6, [sp, #48]	; 0x30
   16830:	mov	r0, r6
   16834:	strb	r7, [sp, #32]
   16838:	bl	11440 <iswspace@plt>
   1683c:	cmp	r0, #0
   16840:	beq	1669c <triple_free@@Base+0x2870>
   16844:	ldr	r3, [sp, #40]	; 0x28
   16848:	ldr	r6, [sp, #16]
   1684c:	add	fp, fp, r3
   16850:	strb	r8, [sp, #32]
   16854:	cmp	r6, fp
   16858:	str	fp, [sp, #36]	; 0x24
   1685c:	bls	1669c <triple_free@@Base+0x2870>
   16860:	ldrb	r3, [sp, #20]
   16864:	cmp	r3, #0
   16868:	beq	167f8 <triple_free@@Base+0x29cc>
   1686c:	ldr	r1, [sp, #36]	; 0x24
   16870:	mov	r0, r9
   16874:	mov	r3, r4
   16878:	rsb	r2, r1, r6
   1687c:	bl	113a4 <mbrtowc@plt>
   16880:	cmn	r0, #1
   16884:	str	r0, [sp, #40]	; 0x28
   16888:	beq	16680 <triple_free@@Base+0x2854>
   1688c:	cmn	r0, #2
   16890:	ldr	fp, [sp, #36]	; 0x24
   16894:	beq	168f4 <triple_free@@Base+0x2ac8>
   16898:	cmp	r0, #0
   1689c:	bne	168ec <triple_free@@Base+0x2ac0>
   168a0:	str	r7, [sp, #40]	; 0x28
   168a4:	ldrb	r3, [fp]
   168a8:	cmp	r3, #0
   168ac:	bne	1696c <triple_free@@Base+0x2b40>
   168b0:	ldr	r6, [sp, #48]	; 0x30
   168b4:	cmp	r6, #0
   168b8:	bne	16948 <triple_free@@Base+0x2b1c>
   168bc:	mov	r0, r4
   168c0:	strb	r7, [sp, #44]	; 0x2c
   168c4:	bl	112f0 <mbsinit@plt>
   168c8:	cmp	r0, #0
   168cc:	strbne	r8, [sp, #20]
   168d0:	b	16830 <triple_free@@Base+0x2a04>
   168d4:	mov	r0, r4
   168d8:	bl	112f0 <mbsinit@plt>
   168dc:	cmp	r0, #0
   168e0:	beq	16924 <triple_free@@Base+0x2af8>
   168e4:	strb	r7, [sp, #20]
   168e8:	b	1686c <triple_free@@Base+0x2a40>
   168ec:	ldr	r6, [sp, #48]	; 0x30
   168f0:	b	168bc <triple_free@@Base+0x2a90>
   168f4:	ldr	r3, [sp, #16]
   168f8:	mov	r2, #0
   168fc:	strb	r2, [sp, #44]	; 0x2c
   16900:	rsb	r3, fp, r3
   16904:	str	r3, [sp, #40]	; 0x28
   16908:	b	16694 <triple_free@@Base+0x2868>
   1690c:	mov	r5, r3
   16910:	b	16738 <triple_free@@Base+0x290c>
   16914:	ldr	r5, [sp]
   16918:	b	16738 <triple_free@@Base+0x290c>
   1691c:	ldr	fp, [sp]
   16920:	b	1669c <triple_free@@Base+0x2870>
   16924:	ldr	r0, [pc, #108]	; 16998 <triple_free@@Base+0x2b6c>
   16928:	mov	r2, #142	; 0x8e
   1692c:	ldr	r1, [pc, #104]	; 1699c <triple_free@@Base+0x2b70>
   16930:	ldr	r3, [pc, #104]	; 169a0 <triple_free@@Base+0x2b74>
   16934:	add	r0, pc, r0
   16938:	add	r1, pc, r1
   1693c:	add	r3, pc, r3
   16940:	bl	1159c <__assert_fail@plt>
   16944:	bl	11314 <__stack_chk_fail@plt>
   16948:	ldr	r0, [pc, #84]	; 169a4 <triple_free@@Base+0x2b78>
   1694c:	mov	r2, #170	; 0xaa
   16950:	ldr	r1, [pc, #80]	; 169a8 <triple_free@@Base+0x2b7c>
   16954:	ldr	r3, [pc, #80]	; 169ac <triple_free@@Base+0x2b80>
   16958:	add	r0, pc, r0
   1695c:	add	r1, pc, r1
   16960:	add	r3, pc, r3
   16964:	bl	1159c <__assert_fail@plt>
   16968:	bl	17170 <triple_free@@Base+0x3344>
   1696c:	ldr	r0, [pc, #60]	; 169b0 <triple_free@@Base+0x2b84>
   16970:	mov	r2, #169	; 0xa9
   16974:	ldr	r1, [pc, #56]	; 169b4 <triple_free@@Base+0x2b88>
   16978:	ldr	r3, [pc, #56]	; 169b8 <triple_free@@Base+0x2b8c>
   1697c:	add	r0, pc, r0
   16980:	add	r1, pc, r1
   16984:	add	r3, pc, r3
   16988:	bl	1159c <__assert_fail@plt>
   1698c:	ldrdeq	r5, [r1], -ip
   16990:	andeq	r0, r0, r0, lsr r1
   16994:	andeq	r0, r0, ip, lsr #2
   16998:	andeq	r4, r0, r4, lsr #12
   1699c:	andeq	r4, r0, r4, lsr #14
   169a0:	andeq	r4, r0, ip, lsl #14
   169a4:	andeq	r4, r0, r0, asr #12
   169a8:	andeq	r4, r0, r0, lsl #14
   169ac:	andeq	r4, r0, r8, ror #13
   169b0:	andeq	r4, r0, r4, lsl #12
   169b4:	ldrdeq	r4, [r0], -ip
   169b8:	andeq	r4, r0, r4, asr #13
   169bc:	push	{r4, r5, r6, r7, lr}
   169c0:	cmp	r1, #0
   169c4:	sub	sp, sp, #36	; 0x24
   169c8:	ldr	r7, [pc, #896]	; 16d50 <triple_free@@Base+0x2f24>
   169cc:	mov	ip, r3
   169d0:	mov	r5, r0
   169d4:	add	r7, pc, r7
   169d8:	ldr	r4, [sp, #56]	; 0x38
   169dc:	ldr	r6, [sp, #60]	; 0x3c
   169e0:	beq	16d24 <triple_free@@Base+0x2ef8>
   169e4:	str	r2, [sp]
   169e8:	mov	r3, r1
   169ec:	ldr	r2, [pc, #864]	; 16d54 <triple_free@@Base+0x2f28>
   169f0:	mov	r1, #1
   169f4:	str	ip, [sp, #4]
   169f8:	add	r2, pc, r2
   169fc:	bl	114dc <__fprintf_chk@plt>
   16a00:	ldr	r1, [pc, #848]	; 16d58 <triple_free@@Base+0x2f2c>
   16a04:	mov	r2, #5
   16a08:	mov	r0, #0
   16a0c:	add	r1, pc, r1
   16a10:	bl	11308 <dcgettext@plt>
   16a14:	ldr	r2, [pc, #832]	; 16d5c <triple_free@@Base+0x2f30>
   16a18:	movw	ip, #2013	; 0x7dd
   16a1c:	mov	r1, #1
   16a20:	ldr	r2, [r7, r2]
   16a24:	str	ip, [sp]
   16a28:	mov	r3, r0
   16a2c:	mov	r0, r5
   16a30:	bl	114dc <__fprintf_chk@plt>
   16a34:	ldr	r1, [pc, #804]	; 16d60 <triple_free@@Base+0x2f34>
   16a38:	mov	r0, #0
   16a3c:	mov	r2, #5
   16a40:	add	r1, pc, r1
   16a44:	bl	11308 <dcgettext@plt>
   16a48:	mov	r1, r5
   16a4c:	bl	1126c <fputs_unlocked@plt>
   16a50:	cmp	r6, #9
   16a54:	addls	pc, pc, r6, lsl #2
   16a58:	b	16d40 <triple_free@@Base+0x2f14>
   16a5c:	b	16af0 <triple_free@@Base+0x2cc4>
   16a60:	b	16af4 <triple_free@@Base+0x2cc8>
   16a64:	b	16b24 <triple_free@@Base+0x2cf8>
   16a68:	b	16b58 <triple_free@@Base+0x2d2c>
   16a6c:	b	16b94 <triple_free@@Base+0x2d68>
   16a70:	b	16bd4 <triple_free@@Base+0x2da8>
   16a74:	b	16c1c <triple_free@@Base+0x2df0>
   16a78:	b	16c6c <triple_free@@Base+0x2e40>
   16a7c:	b	16cc4 <triple_free@@Base+0x2e98>
   16a80:	b	16a84 <triple_free@@Base+0x2c58>
   16a84:	ldr	r1, [pc, #728]	; 16d64 <triple_free@@Base+0x2f38>
   16a88:	mov	r0, #0
   16a8c:	add	r1, pc, r1
   16a90:	mov	r2, #5
   16a94:	bl	11308 <dcgettext@plt>
   16a98:	ldm	r4, {r3, ip}
   16a9c:	mov	r1, #1
   16aa0:	str	ip, [sp]
   16aa4:	ldr	ip, [r4, #8]
   16aa8:	str	ip, [sp, #4]
   16aac:	ldr	ip, [r4, #12]
   16ab0:	str	ip, [sp, #8]
   16ab4:	ldr	ip, [r4, #16]
   16ab8:	str	ip, [sp, #12]
   16abc:	ldr	ip, [r4, #20]
   16ac0:	str	ip, [sp, #16]
   16ac4:	ldr	ip, [r4, #24]
   16ac8:	str	ip, [sp, #20]
   16acc:	ldr	ip, [r4, #28]
   16ad0:	str	ip, [sp, #24]
   16ad4:	ldr	ip, [r4, #32]
   16ad8:	str	ip, [sp, #28]
   16adc:	mov	r2, r0
   16ae0:	mov	r0, r5
   16ae4:	bl	114dc <__fprintf_chk@plt>
   16ae8:	add	sp, sp, #36	; 0x24
   16aec:	pop	{r4, r5, r6, r7, pc}
   16af0:	bl	11578 <abort@plt>
   16af4:	ldr	r1, [pc, #620]	; 16d68 <triple_free@@Base+0x2f3c>
   16af8:	mov	r2, #5
   16afc:	mov	r0, #0
   16b00:	add	r1, pc, r1
   16b04:	bl	11308 <dcgettext@plt>
   16b08:	ldr	r3, [r4]
   16b0c:	mov	r1, #1
   16b10:	mov	r2, r0
   16b14:	mov	r0, r5
   16b18:	add	sp, sp, #36	; 0x24
   16b1c:	pop	{r4, r5, r6, r7, lr}
   16b20:	b	114dc <__fprintf_chk@plt>
   16b24:	ldr	r1, [pc, #576]	; 16d6c <triple_free@@Base+0x2f40>
   16b28:	mov	r2, #5
   16b2c:	mov	r0, #0
   16b30:	add	r1, pc, r1
   16b34:	bl	11308 <dcgettext@plt>
   16b38:	ldm	r4, {r3, ip}
   16b3c:	mov	r1, #1
   16b40:	str	ip, [sp, #56]	; 0x38
   16b44:	mov	r2, r0
   16b48:	mov	r0, r5
   16b4c:	add	sp, sp, #36	; 0x24
   16b50:	pop	{r4, r5, r6, r7, lr}
   16b54:	b	114dc <__fprintf_chk@plt>
   16b58:	ldr	r1, [pc, #528]	; 16d70 <triple_free@@Base+0x2f44>
   16b5c:	mov	r2, #5
   16b60:	mov	r0, #0
   16b64:	add	r1, pc, r1
   16b68:	bl	11308 <dcgettext@plt>
   16b6c:	ldm	r4, {r3, ip}
   16b70:	mov	r1, #1
   16b74:	str	ip, [sp, #56]	; 0x38
   16b78:	ldr	ip, [r4, #8]
   16b7c:	str	ip, [sp, #60]	; 0x3c
   16b80:	mov	r2, r0
   16b84:	mov	r0, r5
   16b88:	add	sp, sp, #36	; 0x24
   16b8c:	pop	{r4, r5, r6, r7, lr}
   16b90:	b	114dc <__fprintf_chk@plt>
   16b94:	ldr	r1, [pc, #472]	; 16d74 <triple_free@@Base+0x2f48>
   16b98:	mov	r2, #5
   16b9c:	mov	r0, #0
   16ba0:	add	r1, pc, r1
   16ba4:	bl	11308 <dcgettext@plt>
   16ba8:	ldm	r4, {r3, ip}
   16bac:	mov	r1, #1
   16bb0:	str	ip, [sp]
   16bb4:	ldr	ip, [r4, #8]
   16bb8:	str	ip, [sp, #4]
   16bbc:	ldr	ip, [r4, #12]
   16bc0:	str	ip, [sp, #8]
   16bc4:	mov	r2, r0
   16bc8:	mov	r0, r5
   16bcc:	bl	114dc <__fprintf_chk@plt>
   16bd0:	b	16ae8 <triple_free@@Base+0x2cbc>
   16bd4:	ldr	r1, [pc, #412]	; 16d78 <triple_free@@Base+0x2f4c>
   16bd8:	mov	r2, #5
   16bdc:	mov	r0, #0
   16be0:	add	r1, pc, r1
   16be4:	bl	11308 <dcgettext@plt>
   16be8:	ldm	r4, {r3, ip}
   16bec:	mov	r1, #1
   16bf0:	str	ip, [sp]
   16bf4:	ldr	ip, [r4, #8]
   16bf8:	str	ip, [sp, #4]
   16bfc:	ldr	ip, [r4, #12]
   16c00:	str	ip, [sp, #8]
   16c04:	ldr	ip, [r4, #16]
   16c08:	str	ip, [sp, #12]
   16c0c:	mov	r2, r0
   16c10:	mov	r0, r5
   16c14:	bl	114dc <__fprintf_chk@plt>
   16c18:	b	16ae8 <triple_free@@Base+0x2cbc>
   16c1c:	ldr	r1, [pc, #344]	; 16d7c <triple_free@@Base+0x2f50>
   16c20:	mov	r2, #5
   16c24:	mov	r0, #0
   16c28:	add	r1, pc, r1
   16c2c:	bl	11308 <dcgettext@plt>
   16c30:	ldm	r4, {r3, ip}
   16c34:	mov	r1, #1
   16c38:	str	ip, [sp]
   16c3c:	ldr	ip, [r4, #8]
   16c40:	str	ip, [sp, #4]
   16c44:	ldr	ip, [r4, #12]
   16c48:	str	ip, [sp, #8]
   16c4c:	ldr	ip, [r4, #16]
   16c50:	str	ip, [sp, #12]
   16c54:	ldr	ip, [r4, #20]
   16c58:	str	ip, [sp, #16]
   16c5c:	mov	r2, r0
   16c60:	mov	r0, r5
   16c64:	bl	114dc <__fprintf_chk@plt>
   16c68:	b	16ae8 <triple_free@@Base+0x2cbc>
   16c6c:	ldr	r1, [pc, #268]	; 16d80 <triple_free@@Base+0x2f54>
   16c70:	mov	r2, #5
   16c74:	mov	r0, #0
   16c78:	add	r1, pc, r1
   16c7c:	bl	11308 <dcgettext@plt>
   16c80:	ldm	r4, {r3, ip}
   16c84:	mov	r1, #1
   16c88:	str	ip, [sp]
   16c8c:	ldr	ip, [r4, #8]
   16c90:	str	ip, [sp, #4]
   16c94:	ldr	ip, [r4, #12]
   16c98:	str	ip, [sp, #8]
   16c9c:	ldr	ip, [r4, #16]
   16ca0:	str	ip, [sp, #12]
   16ca4:	ldr	ip, [r4, #20]
   16ca8:	str	ip, [sp, #16]
   16cac:	ldr	ip, [r4, #24]
   16cb0:	str	ip, [sp, #20]
   16cb4:	mov	r2, r0
   16cb8:	mov	r0, r5
   16cbc:	bl	114dc <__fprintf_chk@plt>
   16cc0:	b	16ae8 <triple_free@@Base+0x2cbc>
   16cc4:	ldr	r1, [pc, #184]	; 16d84 <triple_free@@Base+0x2f58>
   16cc8:	mov	r2, #5
   16ccc:	mov	r0, #0
   16cd0:	add	r1, pc, r1
   16cd4:	bl	11308 <dcgettext@plt>
   16cd8:	ldm	r4, {r3, ip}
   16cdc:	mov	r1, #1
   16ce0:	str	ip, [sp]
   16ce4:	ldr	ip, [r4, #8]
   16ce8:	str	ip, [sp, #4]
   16cec:	ldr	ip, [r4, #12]
   16cf0:	str	ip, [sp, #8]
   16cf4:	ldr	ip, [r4, #16]
   16cf8:	str	ip, [sp, #12]
   16cfc:	ldr	ip, [r4, #20]
   16d00:	str	ip, [sp, #16]
   16d04:	ldr	ip, [r4, #24]
   16d08:	str	ip, [sp, #20]
   16d0c:	ldr	ip, [r4, #28]
   16d10:	str	ip, [sp, #24]
   16d14:	mov	r2, r0
   16d18:	mov	r0, r5
   16d1c:	bl	114dc <__fprintf_chk@plt>
   16d20:	b	16ae8 <triple_free@@Base+0x2cbc>
   16d24:	str	r3, [sp]
   16d28:	mov	r3, r2
   16d2c:	ldr	r2, [pc, #84]	; 16d88 <triple_free@@Base+0x2f5c>
   16d30:	mov	r1, #1
   16d34:	add	r2, pc, r2
   16d38:	bl	114dc <__fprintf_chk@plt>
   16d3c:	b	16a00 <triple_free@@Base+0x2bd4>
   16d40:	ldr	r1, [pc, #68]	; 16d8c <triple_free@@Base+0x2f60>
   16d44:	mov	r0, #0
   16d48:	add	r1, pc, r1
   16d4c:	b	16a90 <triple_free@@Base+0x2c64>
   16d50:	andeq	r5, r1, r4, lsr #12
   16d54:	andeq	r4, r0, r4, ror r6
   16d58:	andeq	r4, r0, r4, ror r6
   16d5c:	andeq	r0, r0, r8, ror #2
   16d60:	andeq	r4, r0, r4, asr #12
   16d64:	ldrdeq	r4, [r0], -r0
   16d68:	andeq	r4, r0, r0, asr r6
   16d6c:	andeq	r4, r0, r0, lsr r6
   16d70:	andeq	r4, r0, r4, lsl r6
   16d74:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   16d78:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   16d7c:			; <UNDEFINED> instruction: 0x000045b0
   16d80:	andeq	r4, r0, r8, lsl #11
   16d84:	andeq	r4, r0, ip, asr r5
   16d88:	andeq	r4, r0, r4, asr #6
   16d8c:	andeq	r4, r0, r8, asr #10
   16d90:	push	{r4, r5, lr}
   16d94:	sub	sp, sp, #12
   16d98:	ldr	r5, [sp, #24]
   16d9c:	ldr	ip, [r5]
   16da0:	cmp	ip, #0
   16da4:	beq	16dc0 <triple_free@@Base+0x2f94>
   16da8:	mov	lr, r5
   16dac:	mov	ip, #0
   16db0:	ldr	r4, [lr, #4]!
   16db4:	add	ip, ip, #1
   16db8:	cmp	r4, #0
   16dbc:	bne	16db0 <triple_free@@Base+0x2f84>
   16dc0:	stm	sp, {r5, ip}
   16dc4:	bl	169bc <triple_free@@Base+0x2b90>
   16dc8:	add	sp, sp, #12
   16dcc:	pop	{r4, r5, pc}
   16dd0:	push	{r4, r5, r6, r7, lr}
   16dd4:	sub	sp, sp, #60	; 0x3c
   16dd8:	ldr	r4, [pc, #100]	; 16e44 <triple_free@@Base+0x3018>
   16ddc:	mov	ip, #0
   16de0:	ldr	r5, [pc, #96]	; 16e48 <triple_free@@Base+0x301c>
   16de4:	mov	lr, ip
   16de8:	add	r4, pc, r4
   16dec:	ldr	r6, [sp, #80]	; 0x50
   16df0:	ldr	r7, [r4, r5]
   16df4:	add	r5, sp, #12
   16df8:	ldr	r4, [r7]
   16dfc:	str	r4, [sp, #52]	; 0x34
   16e00:	ldr	r4, [r6, ip]
   16e04:	cmp	r4, #0
   16e08:	str	r4, [r5, ip]
   16e0c:	beq	16e20 <triple_free@@Base+0x2ff4>
   16e10:	add	lr, lr, #1
   16e14:	add	ip, ip, #4
   16e18:	cmp	lr, #10
   16e1c:	bne	16e00 <triple_free@@Base+0x2fd4>
   16e20:	stm	sp, {r5, lr}
   16e24:	bl	169bc <triple_free@@Base+0x2b90>
   16e28:	ldr	r2, [sp, #52]	; 0x34
   16e2c:	ldr	r3, [r7]
   16e30:	cmp	r2, r3
   16e34:	bne	16e40 <triple_free@@Base+0x3014>
   16e38:	add	sp, sp, #60	; 0x3c
   16e3c:	pop	{r4, r5, r6, r7, pc}
   16e40:	bl	11314 <__stack_chk_fail@plt>
   16e44:	andeq	r5, r1, r0, lsl r2
   16e48:	andeq	r0, r0, r0, lsr r1
   16e4c:	push	{r3}		; (str r3, [sp, #-4]!)
   16e50:	push	{r4, lr}
   16e54:	sub	sp, sp, #20
   16e58:	ldr	lr, [pc, #72]	; 16ea8 <triple_free@@Base+0x307c>
   16e5c:	add	ip, sp, #32
   16e60:	ldr	r4, [pc, #68]	; 16eac <triple_free@@Base+0x3080>
   16e64:	add	lr, pc, lr
   16e68:	ldr	r3, [sp, #28]
   16e6c:	ldr	r4, [lr, r4]
   16e70:	str	ip, [sp]
   16e74:	str	ip, [sp, #8]
   16e78:	ldr	ip, [r4]
   16e7c:	str	ip, [sp, #12]
   16e80:	bl	16dd0 <triple_free@@Base+0x2fa4>
   16e84:	ldr	r2, [sp, #12]
   16e88:	ldr	r3, [r4]
   16e8c:	cmp	r2, r3
   16e90:	bne	16ea4 <triple_free@@Base+0x3078>
   16e94:	add	sp, sp, #20
   16e98:	pop	{r4, lr}
   16e9c:	add	sp, sp, #4
   16ea0:	bx	lr
   16ea4:	bl	11314 <__stack_chk_fail@plt>
   16ea8:	muleq	r1, r4, r1
   16eac:	andeq	r0, r0, r0, lsr r1
   16eb0:	ldr	r1, [pc, #132]	; 16f3c <triple_free@@Base+0x3110>
   16eb4:	mov	r2, #5
   16eb8:	push	{r4, lr}
   16ebc:	add	r1, pc, r1
   16ec0:	mov	r0, #0
   16ec4:	ldr	r4, [pc, #116]	; 16f40 <triple_free@@Base+0x3114>
   16ec8:	bl	11308 <dcgettext@plt>
   16ecc:	ldr	r2, [pc, #112]	; 16f44 <triple_free@@Base+0x3118>
   16ed0:	add	r4, pc, r4
   16ed4:	add	r2, pc, r2
   16ed8:	mov	r1, r0
   16edc:	mov	r0, #1
   16ee0:	bl	114c4 <__printf_chk@plt>
   16ee4:	ldr	r1, [pc, #92]	; 16f48 <triple_free@@Base+0x311c>
   16ee8:	mov	r2, #5
   16eec:	mov	r0, #0
   16ef0:	add	r1, pc, r1
   16ef4:	bl	11308 <dcgettext@plt>
   16ef8:	ldr	r2, [pc, #76]	; 16f4c <triple_free@@Base+0x3120>
   16efc:	ldr	r3, [pc, #76]	; 16f50 <triple_free@@Base+0x3124>
   16f00:	add	r2, pc, r2
   16f04:	add	r3, pc, r3
   16f08:	mov	r1, r0
   16f0c:	mov	r0, #1
   16f10:	bl	114c4 <__printf_chk@plt>
   16f14:	ldr	r1, [pc, #56]	; 16f54 <triple_free@@Base+0x3128>
   16f18:	mov	r0, #0
   16f1c:	mov	r2, #5
   16f20:	add	r1, pc, r1
   16f24:	bl	11308 <dcgettext@plt>
   16f28:	ldr	r3, [pc, #40]	; 16f58 <triple_free@@Base+0x312c>
   16f2c:	ldr	r3, [r4, r3]
   16f30:	pop	{r4, lr}
   16f34:	ldr	r1, [r3]
   16f38:	b	1126c <fputs_unlocked@plt>
   16f3c:	andeq	r4, r0, r0, lsl r4
   16f40:	andeq	r5, r1, r8, lsr #2
   16f44:	andeq	r4, r0, r0, lsl r4
   16f48:	andeq	r4, r0, ip, lsl #8
   16f4c:	andeq	r3, r0, r4, lsl #27
   16f50:	muleq	r0, r0, sp
   16f54:	strdeq	r4, [r0], -r0
   16f58:	andeq	r0, r0, r8, asr r1
   16f5c:	push	{r4, lr}
   16f60:	mov	r4, r0
   16f64:	bl	113d4 <malloc@plt>
   16f68:	rsbs	r3, r0, #1
   16f6c:	movcc	r3, #0
   16f70:	cmp	r4, #0
   16f74:	moveq	r3, #0
   16f78:	cmp	r3, #0
   16f7c:	popeq	{r4, pc}
   16f80:	bl	17170 <triple_free@@Base+0x3344>
   16f84:	push	{r3, r4, r5, lr}
   16f88:	mov	r4, r0
   16f8c:	mvn	r0, #0
   16f90:	mov	r5, r1
   16f94:	bl	19cc8 <triple_free@@Base+0x5e9c>
   16f98:	cmp	r0, r4
   16f9c:	bcc	16fac <triple_free@@Base+0x3180>
   16fa0:	mul	r0, r4, r5
   16fa4:	pop	{r3, r4, r5, lr}
   16fa8:	b	16f5c <triple_free@@Base+0x3130>
   16fac:	bl	17170 <triple_free@@Base+0x3344>
   16fb0:	b	16f5c <triple_free@@Base+0x3130>
   16fb4:	rsbs	r3, r1, #1
   16fb8:	push	{r4, lr}
   16fbc:	movcc	r3, #0
   16fc0:	cmp	r0, #0
   16fc4:	mov	r4, r1
   16fc8:	moveq	r3, #0
   16fcc:	cmp	r3, #0
   16fd0:	bne	16ff4 <triple_free@@Base+0x31c8>
   16fd4:	bl	11320 <realloc@plt>
   16fd8:	rsbs	r3, r0, #1
   16fdc:	movcc	r3, #0
   16fe0:	cmp	r4, #0
   16fe4:	moveq	r3, #0
   16fe8:	cmp	r3, #0
   16fec:	popeq	{r4, pc}
   16ff0:	bl	17170 <triple_free@@Base+0x3344>
   16ff4:	bl	112cc <free@plt>
   16ff8:	mov	r0, #0
   16ffc:	pop	{r4, pc}
   17000:	push	{r4, r5, r6, lr}
   17004:	mov	r5, r1
   17008:	mov	r6, r0
   1700c:	mov	r1, r2
   17010:	mvn	r0, #0
   17014:	mov	r4, r2
   17018:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1701c:	cmp	r0, r5
   17020:	bcc	17034 <triple_free@@Base+0x3208>
   17024:	mov	r0, r6
   17028:	mul	r1, r5, r4
   1702c:	pop	{r4, r5, r6, lr}
   17030:	b	16fb4 <triple_free@@Base+0x3188>
   17034:	bl	17170 <triple_free@@Base+0x3344>
   17038:	push	{r3, r4, r5, r6, r7, lr}
   1703c:	subs	r7, r0, #0
   17040:	mov	r5, r1
   17044:	mov	r6, r2
   17048:	ldr	r4, [r1]
   1704c:	beq	17084 <triple_free@@Base+0x3258>
   17050:	movw	r0, #43690	; 0xaaaa
   17054:	mov	r1, r2
   17058:	bfi	r0, r0, #16, #16
   1705c:	bl	19cc8 <triple_free@@Base+0x5e9c>
   17060:	cmp	r4, r0
   17064:	addcc	r3, r4, #1
   17068:	addcc	r4, r4, r3, lsr #1
   1706c:	bcs	170a8 <triple_free@@Base+0x327c>
   17070:	str	r4, [r5]
   17074:	mov	r0, r7
   17078:	mul	r1, r6, r4
   1707c:	pop	{r3, r4, r5, r6, r7, lr}
   17080:	b	16fb4 <triple_free@@Base+0x3188>
   17084:	cmp	r4, #0
   17088:	bne	17070 <triple_free@@Base+0x3244>
   1708c:	mov	r0, #64	; 0x40
   17090:	mov	r1, r2
   17094:	bl	19cc8 <triple_free@@Base+0x5e9c>
   17098:	cmp	r0, #0
   1709c:	movne	r4, r0
   170a0:	addeq	r4, r0, #1
   170a4:	b	17070 <triple_free@@Base+0x3244>
   170a8:	bl	17170 <triple_free@@Base+0x3344>
   170ac:	cmp	r0, #0
   170b0:	push	{r3, lr}
   170b4:	ldr	r3, [r1]
   170b8:	beq	170e4 <triple_free@@Base+0x32b8>
   170bc:	movw	r2, #43689	; 0xaaa9
   170c0:	movt	r2, #43690	; 0xaaaa
   170c4:	cmp	r3, r2
   170c8:	addls	r2, r3, #1
   170cc:	addls	r3, r3, r2, lsr #1
   170d0:	bhi	170fc <triple_free@@Base+0x32d0>
   170d4:	str	r3, [r1]
   170d8:	mov	r1, r3
   170dc:	pop	{r3, lr}
   170e0:	b	16fb4 <triple_free@@Base+0x3188>
   170e4:	cmp	r3, #0
   170e8:	moveq	r3, #64	; 0x40
   170ec:	str	r3, [r1]
   170f0:	mov	r1, r3
   170f4:	pop	{r3, lr}
   170f8:	b	16fb4 <triple_free@@Base+0x3188>
   170fc:	bl	17170 <triple_free@@Base+0x3344>
   17100:	push	{r4, lr}
   17104:	mov	r4, r0
   17108:	bl	16f5c <triple_free@@Base+0x3130>
   1710c:	mov	r2, r4
   17110:	mov	r1, #0
   17114:	pop	{r4, lr}
   17118:	b	114ac <memset@plt>
   1711c:	push	{r3, lr}
   17120:	bl	11260 <calloc@plt>
   17124:	cmp	r0, #0
   17128:	popne	{r3, pc}
   1712c:	bl	17170 <triple_free@@Base+0x3344>
   17130:	push	{r3, r4, r5, lr}
   17134:	mov	r4, r1
   17138:	mov	r5, r0
   1713c:	mov	r0, r1
   17140:	bl	16f5c <triple_free@@Base+0x3130>
   17144:	mov	r1, r5
   17148:	mov	r2, r4
   1714c:	pop	{r3, r4, r5, lr}
   17150:	b	112e4 <memcpy@plt>
   17154:	push	{r4, lr}
   17158:	mov	r4, r0
   1715c:	bl	1144c <strlen@plt>
   17160:	add	r1, r0, #1
   17164:	mov	r0, r4
   17168:	pop	{r4, lr}
   1716c:	b	17130 <triple_free@@Base+0x3304>
   17170:	ldr	r3, [pc, #64]	; 171b8 <triple_free@@Base+0x338c>
   17174:	mov	r2, #5
   17178:	ldr	ip, [pc, #60]	; 171bc <triple_free@@Base+0x3390>
   1717c:	mov	r0, #0
   17180:	add	r3, pc, r3
   17184:	ldr	r1, [pc, #52]	; 171c0 <triple_free@@Base+0x3394>
   17188:	push	{r4, lr}
   1718c:	add	r1, pc, r1
   17190:	ldr	r3, [r3, ip]
   17194:	ldr	r4, [r3]
   17198:	bl	11308 <dcgettext@plt>
   1719c:	ldr	r2, [pc, #32]	; 171c4 <triple_free@@Base+0x3398>
   171a0:	mov	r1, #0
   171a4:	add	r2, pc, r2
   171a8:	mov	r3, r0
   171ac:	mov	r0, r4
   171b0:	bl	113b0 <error@plt>
   171b4:	bl	11578 <abort@plt>
   171b8:	andeq	r4, r1, r8, ror lr
   171bc:	andeq	r0, r0, ip, asr r1
   171c0:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   171c4:	ldrdeq	r3, [r0], -r8
   171c8:	mov	r0, #0
   171cc:	push	{r4, lr}
   171d0:	mov	r1, r0
   171d4:	bl	11428 <getcwd@plt>
   171d8:	subs	r4, r0, #0
   171dc:	beq	171e8 <triple_free@@Base+0x33bc>
   171e0:	mov	r0, r4
   171e4:	pop	{r4, pc}
   171e8:	bl	11470 <__errno_location@plt>
   171ec:	ldr	r3, [r0]
   171f0:	cmp	r3, #12
   171f4:	bne	171e0 <triple_free@@Base+0x33b4>
   171f8:	bl	17170 <triple_free@@Base+0x3344>
   171fc:	push	{r4, lr}
   17200:	sub	sp, sp, #8
   17204:	ldr	ip, [sp, #16]
   17208:	str	ip, [sp]
   1720c:	bl	1917c <triple_free@@Base+0x5350>
   17210:	subs	r4, r0, #0
   17214:	blt	17224 <triple_free@@Base+0x33f8>
   17218:	mov	r0, r4
   1721c:	add	sp, sp, #8
   17220:	pop	{r4, pc}
   17224:	bl	11470 <__errno_location@plt>
   17228:	ldr	r3, [r0]
   1722c:	cmp	r3, #12
   17230:	bne	17218 <triple_free@@Base+0x33ec>
   17234:	bl	17170 <triple_free@@Base+0x3344>
   17238:	push	{r4, lr}
   1723c:	bl	194e0 <triple_free@@Base+0x56b4>
   17240:	subs	r4, r0, #0
   17244:	beq	17250 <triple_free@@Base+0x3424>
   17248:	mov	r0, r4
   1724c:	pop	{r4, pc}
   17250:	bl	11470 <__errno_location@plt>
   17254:	ldr	r3, [r0]
   17258:	cmp	r3, #12
   1725c:	bne	17248 <triple_free@@Base+0x341c>
   17260:	bl	17170 <triple_free@@Base+0x3344>
   17264:	push	{r4, lr}
   17268:	bl	196fc <triple_free@@Base+0x58d0>
   1726c:	subs	r4, r0, #0
   17270:	beq	1727c <triple_free@@Base+0x3450>
   17274:	mov	r0, r4
   17278:	pop	{r4, pc}
   1727c:	bl	11470 <__errno_location@plt>
   17280:	ldr	r3, [r0]
   17284:	cmp	r3, #12
   17288:	bne	17274 <triple_free@@Base+0x3448>
   1728c:	bl	17170 <triple_free@@Base+0x3344>
   17290:	cmp	r1, #1024	; 0x400
   17294:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   17298:	addls	r4, r1, #1
   1729c:	mov	r7, r0
   172a0:	movwhi	r4, #1025	; 0x401
   172a4:	mov	r0, r4
   172a8:	bl	113d4 <malloc@plt>
   172ac:	mov	r2, r4
   172b0:	subs	r5, r0, #0
   172b4:	mov	r0, r7
   172b8:	mov	r1, r5
   172bc:	beq	17334 <triple_free@@Base+0x3508>
   172c0:	bl	1135c <readlink@plt>
   172c4:	subs	r6, r0, #0
   172c8:	blt	1730c <triple_free@@Base+0x34e0>
   172cc:	cmp	r4, r6
   172d0:	mov	r0, r5
   172d4:	bhi	17340 <triple_free@@Base+0x3514>
   172d8:	bl	112cc <free@plt>
   172dc:	cmn	r4, #-1073741823	; 0xc0000001
   172e0:	lslls	r4, r4, #1
   172e4:	bls	172a4 <triple_free@@Base+0x3478>
   172e8:	cmn	r4, #-2147483646	; 0x80000002
   172ec:	mvn	r4, #-2147483648	; 0x80000000
   172f0:	bls	172a4 <triple_free@@Base+0x3478>
   172f4:	bl	11470 <__errno_location@plt>
   172f8:	mov	r3, #0
   172fc:	mov	r2, #12
   17300:	str	r2, [r0]
   17304:	mov	r0, r3
   17308:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1730c:	bl	11470 <__errno_location@plt>
   17310:	ldr	r9, [r0]
   17314:	mov	r8, r0
   17318:	cmp	r9, #34	; 0x22
   1731c:	beq	172cc <triple_free@@Base+0x34a0>
   17320:	mov	r0, r5
   17324:	bl	112cc <free@plt>
   17328:	str	r9, [r8]
   1732c:	mov	r3, #0
   17330:	b	17338 <triple_free@@Base+0x350c>
   17334:	mov	r3, r5
   17338:	mov	r0, r3
   1733c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   17340:	mov	r3, r5
   17344:	mov	r2, #0
   17348:	mov	r0, r3
   1734c:	strb	r2, [r5, r6]
   17350:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   17354:	cmp	r0, r1
   17358:	push	{r4}		; (str r4, [sp, #-4]!)
   1735c:	beq	173b8 <triple_free@@Base+0x358c>
   17360:	sub	r4, r0, #1
   17364:	sub	r1, r1, #1
   17368:	b	17374 <triple_free@@Base+0x3548>
   1736c:	cmp	r2, ip
   17370:	bne	173ac <triple_free@@Base+0x3580>
   17374:	ldrb	r3, [r4, #1]!
   17378:	sub	r0, r3, #65	; 0x41
   1737c:	add	r2, r3, #32
   17380:	cmp	r0, #25
   17384:	movhi	r2, r3
   17388:	ldrb	r3, [r1, #1]!
   1738c:	uxtb	r2, r2
   17390:	sub	r0, r3, #65	; 0x41
   17394:	add	ip, r3, #32
   17398:	cmp	r0, #25
   1739c:	movhi	ip, r3
   173a0:	cmp	r2, #0
   173a4:	uxtb	ip, ip
   173a8:	bne	1736c <triple_free@@Base+0x3540>
   173ac:	rsb	r0, ip, r2
   173b0:	pop	{r4}		; (ldr r4, [sp], #4)
   173b4:	bx	lr
   173b8:	mov	r0, #0
   173bc:	pop	{r4}		; (ldr r4, [sp], #4)
   173c0:	bx	lr
   173c4:	push	{r4, r5, r6, lr}
   173c8:	mov	r4, r0
   173cc:	bl	11398 <__fpending@plt>
   173d0:	mov	r6, r0
   173d4:	mov	r0, r4
   173d8:	ldr	r4, [r4]
   173dc:	bl	197e4 <triple_free@@Base+0x59b8>
   173e0:	and	r4, r4, #32
   173e4:	adds	r5, r0, #0
   173e8:	movne	r5, #1
   173ec:	cmp	r4, #0
   173f0:	bne	17410 <triple_free@@Base+0x35e4>
   173f4:	cmp	r5, #0
   173f8:	beq	17408 <triple_free@@Base+0x35dc>
   173fc:	cmp	r6, #0
   17400:	beq	1742c <triple_free@@Base+0x3600>
   17404:	mvn	r4, #0
   17408:	mov	r0, r4
   1740c:	pop	{r4, r5, r6, pc}
   17410:	cmp	r5, #0
   17414:	bne	17404 <triple_free@@Base+0x35d8>
   17418:	bl	11470 <__errno_location@plt>
   1741c:	mvn	r4, #0
   17420:	str	r5, [r0]
   17424:	mov	r0, r4
   17428:	pop	{r4, r5, r6, pc}
   1742c:	bl	11470 <__errno_location@plt>
   17430:	ldr	r4, [r0]
   17434:	subs	r4, r4, #9
   17438:	mvnne	r4, #0
   1743c:	mov	r0, r4
   17440:	pop	{r4, r5, r6, pc}
   17444:	push	{r3, lr}
   17448:	bl	174bc <triple_free@@Base+0x3690>
   1744c:	cmp	r0, #0
   17450:	popne	{r3, pc}
   17454:	bl	17170 <triple_free@@Base+0x3344>
   17458:	push	{r3, r4, r5, lr}
   1745c:	mov	r4, r0
   17460:	ldrb	r5, [r0]
   17464:	subs	r3, r5, #47	; 0x2f
   17468:	rsbs	r5, r3, #0
   1746c:	adcs	r5, r5, r3
   17470:	bl	12ae8 <close_stdout@@Base+0x118>
   17474:	rsb	r3, r4, r0
   17478:	cmp	r3, r5
   1747c:	bls	174b4 <triple_free@@Base+0x3688>
   17480:	sub	r0, r3, #1
   17484:	ldrb	r2, [r4, r0]
   17488:	cmp	r2, #47	; 0x2f
   1748c:	beq	174a4 <triple_free@@Base+0x3678>
   17490:	b	174b4 <triple_free@@Base+0x3688>
   17494:	ldrb	r2, [r4, r3]
   17498:	cmp	r2, #47	; 0x2f
   1749c:	popne	{r3, r4, r5, pc}
   174a0:	mov	r0, r3
   174a4:	cmp	r5, r0
   174a8:	sub	r3, r0, #1
   174ac:	bcc	17494 <triple_free@@Base+0x3668>
   174b0:	pop	{r3, r4, r5, pc}
   174b4:	mov	r0, r3
   174b8:	pop	{r3, r4, r5, pc}
   174bc:	push	{r4, r5, r6, r7, r8, lr}
   174c0:	mov	r8, r0
   174c4:	bl	17458 <triple_free@@Base+0x362c>
   174c8:	rsbs	r6, r0, #1
   174cc:	add	r7, r0, #1
   174d0:	mov	r4, r0
   174d4:	movcc	r6, #0
   174d8:	add	r0, r6, r7
   174dc:	bl	113d4 <malloc@plt>
   174e0:	subs	r5, r0, #0
   174e4:	beq	1750c <triple_free@@Base+0x36e0>
   174e8:	mov	r2, r4
   174ec:	mov	r1, r8
   174f0:	bl	112e4 <memcpy@plt>
   174f4:	cmp	r6, #0
   174f8:	movne	r3, #46	; 0x2e
   174fc:	strbne	r3, [r5, r4]
   17500:	movne	r4, r7
   17504:	mov	r3, #0
   17508:	strb	r3, [r5, r4]
   1750c:	mov	r0, r5
   17510:	pop	{r4, r5, r6, r7, r8, pc}
   17514:	push	{r3, lr}
   17518:	ldrb	r3, [r0]
   1751c:	cmp	r3, #0
   17520:	beq	17548 <triple_free@@Base+0x371c>
   17524:	mov	r2, r0
   17528:	mov	r0, #0
   1752c:	add	r0, r3, r0, ror #23
   17530:	ldrb	r3, [r2, #1]!
   17534:	cmp	r3, #0
   17538:	bne	1752c <triple_free@@Base+0x3700>
   1753c:	bl	19eb4 <triple_free@@Base+0x6088>
   17540:	mov	r0, r1
   17544:	pop	{r3, pc}
   17548:	mov	r0, r3
   1754c:	pop	{r3, pc}
   17550:	ldr	r3, [pc, #984]	; 17930 <triple_free@@Base+0x3b04>
   17554:	mov	r0, #14
   17558:	ldr	r2, [pc, #980]	; 17934 <triple_free@@Base+0x3b08>
   1755c:	add	r3, pc, r3
   17560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17564:	sub	sp, sp, #132	; 0x84
   17568:	ldr	r6, [r3, r2]
   1756c:	ldr	r3, [r6]
   17570:	str	r3, [sp, #124]	; 0x7c
   17574:	bl	11548 <nl_langinfo@plt>
   17578:	subs	r5, r0, #0
   1757c:	beq	17630 <triple_free@@Base+0x3804>
   17580:	ldr	r3, [pc, #944]	; 17938 <triple_free@@Base+0x3b0c>
   17584:	ldr	r4, [pc, r3]
   17588:	cmp	r4, #0
   1758c:	beq	1763c <triple_free@@Base+0x3810>
   17590:	ldrb	r7, [r4]
   17594:	cmp	r7, #0
   17598:	bne	175cc <triple_free@@Base+0x37a0>
   1759c:	b	17604 <triple_free@@Base+0x37d8>
   175a0:	mov	r0, r4
   175a4:	bl	1144c <strlen@plt>
   175a8:	add	r0, r0, #1
   175ac:	add	r7, r4, r0
   175b0:	mov	r0, r7
   175b4:	bl	1144c <strlen@plt>
   175b8:	add	r0, r0, #1
   175bc:	add	r4, r7, r0
   175c0:	ldrb	r7, [r7, r0]
   175c4:	cmp	r7, #0
   175c8:	beq	17604 <triple_free@@Base+0x37d8>
   175cc:	mov	r0, r5
   175d0:	mov	r1, r4
   175d4:	bl	1129c <strcmp@plt>
   175d8:	cmp	r0, #0
   175dc:	beq	175f4 <triple_free@@Base+0x37c8>
   175e0:	cmp	r7, #42	; 0x2a
   175e4:	bne	175a0 <triple_free@@Base+0x3774>
   175e8:	ldrb	r3, [r4, #1]
   175ec:	cmp	r3, #0
   175f0:	bne	175a0 <triple_free@@Base+0x3774>
   175f4:	mov	r0, r4
   175f8:	bl	1144c <strlen@plt>
   175fc:	add	r0, r0, #1
   17600:	add	r5, r4, r0
   17604:	ldrb	r3, [r5]
   17608:	cmp	r3, #0
   1760c:	ldreq	r5, [pc, #808]	; 1793c <triple_free@@Base+0x3b10>
   17610:	addeq	r5, pc, r5
   17614:	ldr	r2, [sp, #124]	; 0x7c
   17618:	mov	r0, r5
   1761c:	ldr	r3, [r6]
   17620:	cmp	r2, r3
   17624:	bne	17904 <triple_free@@Base+0x3ad8>
   17628:	add	sp, sp, #132	; 0x84
   1762c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17630:	ldr	r5, [pc, #776]	; 17940 <triple_free@@Base+0x3b14>
   17634:	add	r5, pc, r5
   17638:	b	17580 <triple_free@@Base+0x3754>
   1763c:	ldr	r0, [pc, #768]	; 17944 <triple_free@@Base+0x3b18>
   17640:	add	r0, pc, r0
   17644:	bl	113c8 <getenv@plt>
   17648:	subs	r8, r0, #0
   1764c:	beq	178dc <triple_free@@Base+0x3ab0>
   17650:	ldrb	r3, [r8]
   17654:	cmp	r3, #0
   17658:	beq	17870 <triple_free@@Base+0x3a44>
   1765c:	bl	1144c <strlen@plt>
   17660:	subs	sl, r0, #0
   17664:	subne	r3, sl, #1
   17668:	bne	17880 <triple_free@@Base+0x3a54>
   1766c:	mov	r9, #0
   17670:	mov	fp, r9
   17674:	add	r9, sl, r9
   17678:	add	r0, r9, #14
   1767c:	bl	113d4 <malloc@plt>
   17680:	subs	r7, r0, #0
   17684:	beq	178d0 <triple_free@@Base+0x3aa4>
   17688:	mov	r1, r8
   1768c:	mov	r2, sl
   17690:	bl	112e4 <memcpy@plt>
   17694:	cmp	fp, #0
   17698:	add	ip, r7, r9
   1769c:	movne	r3, #47	; 0x2f
   176a0:	strbne	r3, [r7, sl]
   176a4:	ldr	r3, [pc, #668]	; 17948 <triple_free@@Base+0x3b1c>
   176a8:	add	r3, pc, r3
   176ac:	ldm	r3!, {r0, r1, r2}
   176b0:	ldrh	r3, [r3]
   176b4:	str	r0, [r7, r9]
   176b8:	mov	r0, r7
   176bc:	str	r1, [ip, #4]
   176c0:	mov	r1, #32768	; 0x8000
   176c4:	strh	r3, [ip, #12]
   176c8:	str	r2, [ip, #8]
   176cc:	bl	113bc <open64@plt>
   176d0:	subs	r8, r0, #0
   176d4:	blt	17898 <triple_free@@Base+0x3a6c>
   176d8:	ldr	r1, [pc, #620]	; 1794c <triple_free@@Base+0x3b20>
   176dc:	add	r1, pc, r1
   176e0:	bl	11254 <fdopen@plt>
   176e4:	subs	fp, r0, #0
   176e8:	beq	178f0 <triple_free@@Base+0x3ac4>
   176ec:	ldr	r0, [pc, #604]	; 17950 <triple_free@@Base+0x3b24>
   176f0:	add	sl, sp, #20
   176f4:	add	r9, sp, #72	; 0x48
   176f8:	mov	r8, #0
   176fc:	add	r0, pc, r0
   17700:	str	r0, [sp, #12]
   17704:	ldr	r3, [fp, #4]
   17708:	ldr	r2, [fp, #8]
   1770c:	cmp	r3, r2
   17710:	bcs	177fc <triple_free@@Base+0x39d0>
   17714:	add	r2, r3, #1
   17718:	str	r2, [fp, #4]
   1771c:	ldrb	r0, [r3]
   17720:	cmp	r0, #32
   17724:	beq	17704 <triple_free@@Base+0x38d8>
   17728:	sub	r3, r0, #9
   1772c:	cmp	r3, #1
   17730:	bls	17704 <triple_free@@Base+0x38d8>
   17734:	cmp	r0, #35	; 0x23
   17738:	beq	17810 <triple_free@@Base+0x39e4>
   1773c:	mov	r1, fp
   17740:	bl	11464 <ungetc@plt>
   17744:	mov	r0, fp
   17748:	ldr	r1, [sp, #12]
   1774c:	mov	r2, sl
   17750:	mov	r3, r9
   17754:	bl	114b8 <fscanf@plt>
   17758:	cmp	r0, #1
   1775c:	ble	17840 <triple_free@@Base+0x3a14>
   17760:	mov	r0, sl
   17764:	bl	1144c <strlen@plt>
   17768:	str	r0, [sp, #8]
   1776c:	mov	r0, r9
   17770:	bl	1144c <strlen@plt>
   17774:	cmp	r8, #0
   17778:	mov	r2, r0
   1777c:	bne	178a4 <triple_free@@Base+0x3a78>
   17780:	ldr	r3, [sp, #8]
   17784:	str	r2, [sp]
   17788:	add	r8, r0, r3
   1778c:	add	r0, r8, #3
   17790:	add	r8, r8, #2
   17794:	bl	113d4 <malloc@plt>
   17798:	ldr	r2, [sp]
   1779c:	mov	r3, r0
   177a0:	cmp	r3, #0
   177a4:	beq	17908 <triple_free@@Base+0x3adc>
   177a8:	ldr	r0, [sp, #8]
   177ac:	movw	r1, #65534	; 0xfffe
   177b0:	movt	r1, #65535	; 0xffff
   177b4:	rsb	r2, r2, r8
   177b8:	rsb	r1, r0, r1
   177bc:	stm	sp, {r2, r3}
   177c0:	add	r0, r1, r2
   177c4:	mov	r1, sl
   177c8:	add	r0, r3, r0
   177cc:	mov	r4, r3
   177d0:	bl	1138c <strcpy@plt>
   177d4:	ldr	r2, [sp]
   177d8:	ldr	r3, [sp, #4]
   177dc:	mov	r1, r9
   177e0:	sub	r0, r2, #1
   177e4:	add	r0, r3, r0
   177e8:	bl	1138c <strcpy@plt>
   177ec:	ldr	r3, [fp, #4]
   177f0:	ldr	r2, [fp, #8]
   177f4:	cmp	r3, r2
   177f8:	bcc	17714 <triple_free@@Base+0x38e8>
   177fc:	mov	r0, fp
   17800:	bl	11518 <__uflow@plt>
   17804:	cmn	r0, #1
   17808:	beq	17840 <triple_free@@Base+0x3a14>
   1780c:	b	17720 <triple_free@@Base+0x38f4>
   17810:	ldr	r3, [fp, #4]
   17814:	ldr	r2, [fp, #8]
   17818:	cmp	r3, r2
   1781c:	bcs	17924 <triple_free@@Base+0x3af8>
   17820:	add	r2, r3, #1
   17824:	str	r2, [fp, #4]
   17828:	ldrb	r0, [r3]
   1782c:	cmp	r0, #10
   17830:	cmnne	r0, #1
   17834:	bne	17810 <triple_free@@Base+0x39e4>
   17838:	cmn	r0, #1
   1783c:	bne	17704 <triple_free@@Base+0x38d8>
   17840:	mov	r0, fp
   17844:	bl	197e4 <triple_free@@Base+0x59b8>
   17848:	cmp	r8, #0
   1784c:	beq	17898 <triple_free@@Base+0x3a6c>
   17850:	mov	r3, #0
   17854:	strb	r3, [r4, r8]
   17858:	mov	r0, r7
   1785c:	bl	112cc <free@plt>
   17860:	ldr	r3, [pc, #236]	; 17954 <triple_free@@Base+0x3b28>
   17864:	add	r3, pc, r3
   17868:	str	r4, [r3]
   1786c:	b	17590 <triple_free@@Base+0x3764>
   17870:	ldr	r8, [pc, #224]	; 17958 <triple_free@@Base+0x3b2c>
   17874:	mov	r3, #7
   17878:	mov	sl, #8
   1787c:	add	r8, pc, r8
   17880:	ldrb	r3, [r8, r3]
   17884:	cmp	r3, #47	; 0x2f
   17888:	movne	r9, #1
   1788c:	movne	fp, r9
   17890:	bne	17674 <triple_free@@Base+0x3848>
   17894:	b	1766c <triple_free@@Base+0x3840>
   17898:	ldr	r4, [pc, #188]	; 1795c <triple_free@@Base+0x3b30>
   1789c:	add	r4, pc, r4
   178a0:	b	17858 <triple_free@@Base+0x3a2c>
   178a4:	ldr	r0, [sp, #8]
   178a8:	str	r2, [sp]
   178ac:	add	r3, r0, r2
   178b0:	mov	r0, r4
   178b4:	add	r8, r3, r8
   178b8:	add	r1, r8, #3
   178bc:	add	r8, r8, #2
   178c0:	bl	11320 <realloc@plt>
   178c4:	ldr	r2, [sp]
   178c8:	mov	r3, r0
   178cc:	b	177a0 <triple_free@@Base+0x3974>
   178d0:	ldr	r4, [pc, #136]	; 17960 <triple_free@@Base+0x3b34>
   178d4:	add	r4, pc, r4
   178d8:	b	17860 <triple_free@@Base+0x3a34>
   178dc:	ldr	r8, [pc, #128]	; 17964 <triple_free@@Base+0x3b38>
   178e0:	mov	r3, #7
   178e4:	mov	sl, #8
   178e8:	add	r8, pc, r8
   178ec:	b	17880 <triple_free@@Base+0x3a54>
   178f0:	ldr	r4, [pc, #112]	; 17968 <triple_free@@Base+0x3b3c>
   178f4:	mov	r0, r8
   178f8:	add	r4, pc, r4
   178fc:	bl	11584 <close@plt>
   17900:	b	17858 <triple_free@@Base+0x3a2c>
   17904:	bl	11314 <__stack_chk_fail@plt>
   17908:	mov	r0, r4
   1790c:	ldr	r4, [pc, #88]	; 1796c <triple_free@@Base+0x3b40>
   17910:	bl	112cc <free@plt>
   17914:	mov	r0, fp
   17918:	add	r4, pc, r4
   1791c:	bl	197e4 <triple_free@@Base+0x59b8>
   17920:	b	17858 <triple_free@@Base+0x3a2c>
   17924:	mov	r0, fp
   17928:	bl	11518 <__uflow@plt>
   1792c:	b	1782c <triple_free@@Base+0x3a00>
   17930:	muleq	r1, ip, sl
   17934:	andeq	r0, r0, r0, lsr r1
   17938:	andeq	r4, r1, r4, lsl #27
   1793c:	muleq	r0, r0, sp
   17940:	andeq	r3, r0, r4, lsl r7
   17944:	andeq	r3, r0, r8, ror #26
   17948:	andeq	r3, r0, r0, lsl sp
   1794c:	andeq	r3, r0, ip, ror #25
   17950:	ldrdeq	r3, [r0], -r0
   17954:	andeq	r4, r1, r4, lsr #21
   17958:	andeq	r3, r0, r8, lsl fp
   1795c:	andeq	r3, r0, ip, lsr #9
   17960:	andeq	r3, r0, r4, ror r4
   17964:	andeq	r3, r0, ip, lsr #21
   17968:	andeq	r3, r0, r0, asr r4
   1796c:	andeq	r3, r0, r0, lsr r4
   17970:	push	{r4, lr}
   17974:	mov	r4, r0
   17978:	bl	112b4 <wcwidth@plt>
   1797c:	cmp	r0, #0
   17980:	popge	{r4, pc}
   17984:	mov	r0, r4
   17988:	bl	11338 <iswcntrl@plt>
   1798c:	rsbs	r0, r0, #1
   17990:	movcc	r0, #0
   17994:	pop	{r4, pc}
   17998:	push	{r3, r4, r5, lr}
   1799c:	mov	r3, r1
   179a0:	mov	r4, r1
   179a4:	ldr	r1, [r3], #16
   179a8:	mov	r5, r0
   179ac:	cmp	r1, r3
   179b0:	strne	r1, [r0]
   179b4:	beq	179d8 <triple_free@@Base+0x3bac>
   179b8:	ldr	r3, [r4, #4]
   179bc:	str	r3, [r5, #4]
   179c0:	ldrb	r3, [r4, #8]
   179c4:	cmp	r3, #0
   179c8:	strb	r3, [r5, #8]
   179cc:	ldrne	r3, [r4, #12]
   179d0:	strne	r3, [r5, #12]
   179d4:	pop	{r3, r4, r5, pc}
   179d8:	add	r3, r0, #16
   179dc:	ldr	r2, [r4, #4]
   179e0:	mov	r0, r3
   179e4:	bl	112e4 <memcpy@plt>
   179e8:	str	r0, [r5]
   179ec:	b	179b8 <triple_free@@Base+0x3b8c>
   179f0:	ldr	r3, [pc, #32]	; 17a18 <triple_free@@Base+0x3bec>
   179f4:	lsr	r2, r0, #5
   179f8:	ldr	r1, [pc, #28]	; 17a1c <triple_free@@Base+0x3bf0>
   179fc:	and	r0, r0, #31
   17a00:	add	r3, pc, r3
   17a04:	ldr	r3, [r3, r1]
   17a08:	ldr	r3, [r3, r2, lsl #2]
   17a0c:	lsr	r0, r3, r0
   17a10:	and	r0, r0, #1
   17a14:	bx	lr
   17a18:	strdeq	r4, [r1], -r8
   17a1c:	andeq	r0, r0, ip, lsr #2
   17a20:	ldr	ip, [pc, #380]	; 17ba4 <triple_free@@Base+0x3d78>
   17a24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17a28:	mov	r7, r2
   17a2c:	add	fp, sp, #28
   17a30:	ldr	r2, [pc, #368]	; 17ba8 <triple_free@@Base+0x3d7c>
   17a34:	sub	sp, sp, #8
   17a38:	add	ip, pc, ip
   17a3c:	mov	r8, r3
   17a40:	mov	r3, ip
   17a44:	cmn	r7, #-1073741823	; 0xc0000001
   17a48:	ldr	r5, [ip, r2]
   17a4c:	mov	r6, r0
   17a50:	mov	r4, r1
   17a54:	ldr	r3, [r5]
   17a58:	str	r3, [fp, #-32]	; 0xffffffe0
   17a5c:	bls	17a7c <triple_free@@Base+0x3c50>
   17a60:	mov	r0, #0
   17a64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17a68:	ldr	r3, [r5]
   17a6c:	cmp	r2, r3
   17a70:	bne	17ba0 <triple_free@@Base+0x3d74>
   17a74:	sub	sp, fp, #28
   17a78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17a7c:	lsl	r0, r7, #2
   17a80:	movw	r3, #4023	; 0xfb7
   17a84:	cmp	r0, r3
   17a88:	bls	17b54 <triple_free@@Base+0x3d28>
   17a8c:	bl	1998c <triple_free@@Base+0x5b60>
   17a90:	cmp	r0, #0
   17a94:	beq	17a60 <triple_free@@Base+0x3c34>
   17a98:	cmp	r7, #2
   17a9c:	mov	r3, #1
   17aa0:	str	r3, [r0, #4]
   17aa4:	movhi	r9, r4
   17aa8:	movhi	r2, r0
   17aac:	movhi	ip, #0
   17ab0:	movhi	r3, #2
   17ab4:	bls	17b00 <triple_free@@Base+0x3cd4>
   17ab8:	ldrb	r1, [r9, #1]!
   17abc:	ldrb	lr, [r4, ip]
   17ac0:	cmp	lr, r1
   17ac4:	bne	17ae0 <triple_free@@Base+0x3cb4>
   17ac8:	b	17b68 <triple_free@@Base+0x3d3c>
   17acc:	ldr	lr, [r0, ip, lsl #2]
   17ad0:	rsb	ip, lr, ip
   17ad4:	ldrb	lr, [r4, ip]
   17ad8:	cmp	lr, r1
   17adc:	beq	17b68 <triple_free@@Base+0x3d3c>
   17ae0:	cmp	ip, #0
   17ae4:	bne	17acc <triple_free@@Base+0x3ca0>
   17ae8:	mov	ip, #0
   17aec:	str	r3, [r2, #8]
   17af0:	add	r3, r3, #1
   17af4:	add	r2, r2, #4
   17af8:	cmp	r3, r7
   17afc:	bne	17ab8 <triple_free@@Base+0x3c8c>
   17b00:	mov	r2, #0
   17b04:	str	r2, [r8]
   17b08:	ldrb	r3, [r6]
   17b0c:	mov	ip, r6
   17b10:	cmp	r3, #0
   17b14:	beq	17b48 <triple_free@@Base+0x3d1c>
   17b18:	ldrb	r1, [r4, r2]
   17b1c:	cmp	r1, r3
   17b20:	beq	17b78 <triple_free@@Base+0x3d4c>
   17b24:	cmp	r2, #0
   17b28:	addeq	r6, r6, #1
   17b2c:	ldrne	r1, [r0, r2, lsl #2]
   17b30:	ldrbeq	r3, [ip, #1]
   17b34:	addeq	ip, ip, #1
   17b38:	addne	r6, r6, r1
   17b3c:	rsbne	r2, r1, r2
   17b40:	cmp	r3, #0
   17b44:	bne	17b18 <triple_free@@Base+0x3cec>
   17b48:	bl	199f4 <triple_free@@Base+0x5bc8>
   17b4c:	mov	r0, #1
   17b50:	b	17a64 <triple_free@@Base+0x3c38>
   17b54:	add	r3, r0, #22
   17b58:	bic	r3, r3, #7
   17b5c:	sub	sp, sp, r3
   17b60:	add	r0, sp, #8
   17b64:	b	17a90 <triple_free@@Base+0x3c64>
   17b68:	add	ip, ip, #1
   17b6c:	rsb	r1, ip, r3
   17b70:	str	r1, [r2, #8]
   17b74:	b	17af0 <triple_free@@Base+0x3cc4>
   17b78:	add	r2, r2, #1
   17b7c:	add	r1, ip, #1
   17b80:	cmp	r7, r2
   17b84:	ldrbne	r3, [ip, #1]
   17b88:	movne	ip, r1
   17b8c:	bne	17b10 <triple_free@@Base+0x3ce4>
   17b90:	str	r6, [r8]
   17b94:	bl	199f4 <triple_free@@Base+0x5bc8>
   17b98:	mov	r0, #1
   17b9c:	b	17a64 <triple_free@@Base+0x3c38>
   17ba0:	bl	11314 <__stack_chk_fail@plt>
   17ba4:	andeq	r4, r1, r0, asr #11
   17ba8:	andeq	r0, r0, r0, lsr r1
   17bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bb0:	add	fp, sp, #32
   17bb4:	ldr	r8, [pc, #2268]	; 18498 <triple_free@@Base+0x466c>
   17bb8:	sub	sp, sp, #220	; 0xdc
   17bbc:	ldr	r3, [pc, #2264]	; 1849c <triple_free@@Base+0x4670>
   17bc0:	add	r8, pc, r8
   17bc4:	str	r0, [fp, #-232]	; 0xffffff18
   17bc8:	str	r2, [fp, #-248]	; 0xffffff08
   17bcc:	mov	r0, r1
   17bd0:	ldr	r3, [r8, r3]
   17bd4:	mov	r4, r1
   17bd8:	str	r3, [fp, #-244]	; 0xffffff0c
   17bdc:	ldr	r3, [r3]
   17be0:	str	r3, [fp, #-40]	; 0xffffffd8
   17be4:	bl	19a7c <triple_free@@Base+0x5c50>
   17be8:	movw	r3, #29789	; 0x745d
   17bec:	movt	r3, #1489	; 0x5d1
   17bf0:	cmp	r0, r3
   17bf4:	str	r0, [fp, #-224]	; 0xffffff20
   17bf8:	bls	17c1c <triple_free@@Base+0x3df0>
   17bfc:	mov	r0, #0
   17c00:	ldr	r1, [fp, #-244]	; 0xffffff0c
   17c04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17c08:	ldr	r3, [r1]
   17c0c:	cmp	r2, r3
   17c10:	bne	18474 <triple_free@@Base+0x4648>
   17c14:	sub	sp, fp, #32
   17c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c1c:	ldr	r1, [fp, #-224]	; 0xffffff20
   17c20:	mov	r0, #44	; 0x2c
   17c24:	movw	r3, #4023	; 0xfb7
   17c28:	mul	r0, r0, r1
   17c2c:	cmp	r0, r3
   17c30:	bls	17ffc <triple_free@@Base+0x41d0>
   17c34:	bl	1998c <triple_free@@Base+0x5b60>
   17c38:	str	r0, [fp, #-236]	; 0xffffff14
   17c3c:	ldr	r3, [fp, #-236]	; 0xffffff14
   17c40:	cmp	r3, #0
   17c44:	beq	17bfc <triple_free@@Base+0x3dd0>
   17c48:	mov	r2, #0
   17c4c:	ldr	r0, [fp, #-224]	; 0xffffff20
   17c50:	str	r2, [fp, #-200]	; 0xffffff38
   17c54:	mov	r5, r2
   17c58:	strb	r2, [fp, #-208]	; 0xffffff30
   17c5c:	add	sl, r3, #16
   17c60:	str	r2, [fp, #-204]	; 0xffffff34
   17c64:	add	r9, r0, r0, lsl #2
   17c68:	strb	r2, [fp, #-196]	; 0xffffff3c
   17c6c:	sub	ip, fp, #204	; 0xcc
   17c70:	ldrb	r2, [fp, #-208]	; 0xffffff30
   17c74:	mov	r7, r4
   17c78:	add	r9, r3, r9, lsl #3
   17c7c:	str	r4, [fp, #-192]	; 0xffffff40
   17c80:	cmp	r2, #0
   17c84:	sub	r1, fp, #180	; 0xb4
   17c88:	str	r9, [fp, #-220]	; 0xffffff24
   17c8c:	mov	r4, #1
   17c90:	mov	r9, sl
   17c94:	str	r1, [fp, #-216]	; 0xffffff28
   17c98:	mov	sl, r7
   17c9c:	sub	r6, fp, #176	; 0xb0
   17ca0:	mov	r7, ip
   17ca4:	bne	18078 <triple_free@@Base+0x424c>
   17ca8:	ldr	r1, [pc, #2032]	; 184a0 <triple_free@@Base+0x4674>
   17cac:	ldrb	r2, [sl]
   17cb0:	ldr	r0, [r8, r1]
   17cb4:	and	r1, r2, #31
   17cb8:	lsr	r2, r2, #5
   17cbc:	ldr	r2, [r0, r2, lsl #2]
   17cc0:	lsr	r2, r2, r1
   17cc4:	tst	r2, #1
   17cc8:	beq	180dc <triple_free@@Base+0x42b0>
   17ccc:	str	r4, [fp, #-188]	; 0xffffff44
   17cd0:	ldrb	r3, [sl]
   17cd4:	strb	r4, [fp, #-184]	; 0xffffff48
   17cd8:	mov	sl, r3
   17cdc:	str	r3, [fp, #-180]	; 0xffffff4c
   17ce0:	cmp	sl, #0
   17ce4:	strb	r4, [fp, #-196]	; 0xffffff3c
   17ce8:	mov	r2, #1
   17cec:	bne	18028 <triple_free@@Base+0x41fc>
   17cf0:	ldr	r0, [fp, #-224]	; 0xffffff20
   17cf4:	ldr	r9, [fp, #-220]	; 0xffffff24
   17cf8:	cmp	r0, #2
   17cfc:	str	r2, [r9, #4]
   17d00:	bls	17dcc <triple_free@@Base+0x3fa0>
   17d04:	ldr	r7, [fp, #-236]	; 0xffffff14
   17d08:	mov	r6, r9
   17d0c:	str	r8, [fp, #-216]	; 0xffffff28
   17d10:	mov	r4, sl
   17d14:	mov	r8, r9
   17d18:	mov	r5, #2
   17d1c:	mov	r9, r7
   17d20:	ldrb	sl, [r7, #48]	; 0x30
   17d24:	b	17d60 <triple_free@@Base+0x3f34>
   17d28:	ldrb	r2, [r3, #8]
   17d2c:	cmp	r2, #0
   17d30:	beq	17d70 <triple_free@@Base+0x3f44>
   17d34:	ldr	r0, [r7, #52]	; 0x34
   17d38:	ldr	r3, [r3, #12]
   17d3c:	subs	r1, r0, r3
   17d40:	rsbs	r0, r1, #0
   17d44:	adcs	r0, r0, r1
   17d48:	cmp	r0, #0
   17d4c:	bne	17da0 <triple_free@@Base+0x3f74>
   17d50:	cmp	r4, #0
   17d54:	beq	182b4 <triple_free@@Base+0x4488>
   17d58:	ldr	r3, [r8, r4, lsl #2]
   17d5c:	rsb	r4, r3, r4
   17d60:	add	r3, r4, r4, lsl #2
   17d64:	cmp	sl, #0
   17d68:	add	r3, r9, r3, lsl #3
   17d6c:	bne	17d28 <triple_free@@Base+0x3efc>
   17d70:	ldr	r2, [r7, #44]	; 0x2c
   17d74:	ldr	r1, [r3, #4]
   17d78:	cmp	r2, r1
   17d7c:	movne	r0, #0
   17d80:	bne	17d48 <triple_free@@Base+0x3f1c>
   17d84:	ldr	r1, [r3]
   17d88:	ldr	r0, [r7, #40]	; 0x28
   17d8c:	bl	112fc <memcmp@plt>
   17d90:	rsbs	r0, r0, #1
   17d94:	movcc	r0, #0
   17d98:	cmp	r0, #0
   17d9c:	beq	17d50 <triple_free@@Base+0x3f24>
   17da0:	add	r4, r4, #1
   17da4:	rsb	r2, r4, r5
   17da8:	str	r2, [r6, #8]
   17dac:	ldr	r2, [fp, #-224]	; 0xffffff20
   17db0:	add	r5, r5, #1
   17db4:	add	r7, r7, #40	; 0x28
   17db8:	add	r6, r6, #4
   17dbc:	cmp	r5, r2
   17dc0:	bne	17d20 <triple_free@@Base+0x3ef4>
   17dc4:	mov	r9, r8
   17dc8:	ldr	r8, [fp, #-216]	; 0xffffff28
   17dcc:	ldr	r1, [fp, #-232]	; 0xffffff18
   17dd0:	mov	r3, #0
   17dd4:	ldr	r2, [fp, #-248]	; 0xffffff08
   17dd8:	sub	r7, fp, #148	; 0x94
   17ddc:	mov	r4, r3
   17de0:	mov	r6, r3
   17de4:	mov	r5, #1
   17de8:	sub	r0, fp, #92	; 0x5c
   17dec:	str	r1, [fp, #-136]	; 0xffffff78
   17df0:	str	r0, [fp, #-228]	; 0xffffff1c
   17df4:	sub	r0, fp, #68	; 0x44
   17df8:	str	r1, [fp, #-80]	; 0xffffffb0
   17dfc:	sub	r1, fp, #124	; 0x7c
   17e00:	str	r3, [fp, #-148]	; 0xffffff6c
   17e04:	strb	r3, [fp, #-140]	; 0xffffff74
   17e08:	str	r3, [fp, #-220]	; 0xffffff24
   17e0c:	str	r3, [r2]
   17e10:	strb	r3, [fp, #-152]	; 0xffffff68
   17e14:	str	r0, [fp, #-232]	; 0xffffff18
   17e18:	str	r1, [fp, #-216]	; 0xffffff28
   17e1c:	strb	r3, [fp, #-96]	; 0xffffffa0
   17e20:	str	r3, [fp, #-92]	; 0xffffffa4
   17e24:	strb	r3, [fp, #-84]	; 0xffffffac
   17e28:	str	r3, [r7, #4]
   17e2c:	str	r3, [fp, #-88]	; 0xffffffa8
   17e30:	str	r9, [fp, #-240]	; 0xffffff10
   17e34:	cmp	r4, #0
   17e38:	beq	17ea8 <triple_free@@Base+0x407c>
   17e3c:	ldrb	r4, [fp, #-72]	; 0xffffffb8
   17e40:	cmp	r4, #0
   17e44:	bne	17efc <triple_free@@Base+0x40d0>
   17e48:	ldr	r2, [fp, #-220]	; 0xffffff24
   17e4c:	ldr	r3, [fp, #-236]	; 0xffffff14
   17e50:	add	r1, r2, r2, lsl #2
   17e54:	add	r1, r3, r1, lsl #3
   17e58:	ldr	r2, [r1, #4]
   17e5c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   17e60:	cmp	r2, r3
   17e64:	movne	r0, #0
   17e68:	beq	1829c <triple_free@@Base+0x4470>
   17e6c:	mov	r3, r0
   17e70:	cmp	r3, #0
   17e74:	ldr	r2, [fp, #-220]	; 0xffffff24
   17e78:	beq	17f40 <triple_free@@Base+0x4114>
   17e7c:	ldr	r0, [fp, #-224]	; 0xffffff20
   17e80:	add	r2, r2, #1
   17e84:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17e88:	str	r2, [fp, #-220]	; 0xffffff24
   17e8c:	cmp	r0, r2
   17e90:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17e94:	strb	r6, [fp, #-84]	; 0xffffffac
   17e98:	add	r3, r3, r2
   17e9c:	str	r3, [fp, #-80]	; 0xffffffb0
   17ea0:	beq	18424 <triple_free@@Base+0x45f8>
   17ea4:	mov	r4, #0
   17ea8:	ldrb	r3, [fp, #-96]	; 0xffffffa0
   17eac:	cmp	r3, #0
   17eb0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17eb4:	bne	181bc <triple_free@@Base+0x4390>
   17eb8:	ldr	r1, [pc, #1504]	; 184a0 <triple_free@@Base+0x4674>
   17ebc:	ldrb	r2, [r3]
   17ec0:	ldr	r0, [r8, r1]
   17ec4:	and	r1, r2, #31
   17ec8:	lsr	r2, r2, #5
   17ecc:	ldr	r2, [r0, r2, lsl #2]
   17ed0:	lsr	r2, r2, r1
   17ed4:	tst	r2, #1
   17ed8:	beq	181a0 <triple_free@@Base+0x4374>
   17edc:	str	r5, [fp, #-76]	; 0xffffffb4
   17ee0:	mov	r4, #1
   17ee4:	ldrb	r3, [r3]
   17ee8:	strb	r5, [fp, #-72]	; 0xffffffb8
   17eec:	str	r3, [fp, #-68]	; 0xffffffbc
   17ef0:	cmp	r4, #0
   17ef4:	strb	r5, [fp, #-84]	; 0xffffffac
   17ef8:	beq	17e48 <triple_free@@Base+0x401c>
   17efc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17f00:	cmp	r2, #0
   17f04:	beq	18430 <triple_free@@Base+0x4604>
   17f08:	ldr	r3, [fp, #-220]	; 0xffffff24
   17f0c:	ldr	r0, [fp, #-236]	; 0xffffff14
   17f10:	add	r1, r3, r3, lsl #2
   17f14:	add	r1, r0, r1, lsl #3
   17f18:	ldrb	r3, [r1, #8]
   17f1c:	cmp	r3, #0
   17f20:	beq	17e58 <triple_free@@Base+0x402c>
   17f24:	ldr	r3, [r1, #12]
   17f28:	subs	r2, r2, r3
   17f2c:	rsbs	r3, r2, #0
   17f30:	adcs	r3, r3, r2
   17f34:	ldr	r2, [fp, #-220]	; 0xffffff24
   17f38:	cmp	r3, #0
   17f3c:	bne	17e7c <triple_free@@Base+0x4050>
   17f40:	cmp	r2, #0
   17f44:	beq	1824c <triple_free@@Base+0x4420>
   17f48:	ldr	r3, [fp, #-240]	; 0xffffff10
   17f4c:	ldr	r4, [r3, r2, lsl #2]
   17f50:	cmp	r4, #0
   17f54:	rsb	r2, r4, r2
   17f58:	str	r2, [fp, #-220]	; 0xffffff24
   17f5c:	beq	18294 <triple_free@@Base+0x4468>
   17f60:	ldrb	sl, [fp, #-140]	; 0xffffff74
   17f64:	cmp	sl, #0
   17f68:	beq	17f98 <triple_free@@Base+0x416c>
   17f6c:	ldrb	sl, [fp, #-128]	; 0xffffff80
   17f70:	cmp	sl, #0
   17f74:	bne	17fec <triple_free@@Base+0x41c0>
   17f78:	ldr	r2, [fp, #-136]	; 0xffffff78
   17f7c:	subs	r4, r4, #1
   17f80:	ldr	r3, [fp, #-132]	; 0xffffff7c
   17f84:	strb	r6, [fp, #-140]	; 0xffffff74
   17f88:	movne	sl, #0
   17f8c:	add	r3, r2, r3
   17f90:	str	r3, [fp, #-136]	; 0xffffff78
   17f94:	beq	18294 <triple_free@@Base+0x4468>
   17f98:	ldrb	r3, [fp, #-152]	; 0xffffff68
   17f9c:	ldr	r9, [fp, #-136]	; 0xffffff78
   17fa0:	cmp	r3, #0
   17fa4:	bne	18108 <triple_free@@Base+0x42dc>
   17fa8:	ldr	r1, [pc, #1264]	; 184a0 <triple_free@@Base+0x4674>
   17fac:	ldrb	r2, [r9]
   17fb0:	ldr	r0, [r8, r1]
   17fb4:	and	r1, r2, #31
   17fb8:	lsr	r2, r2, #5
   17fbc:	ldr	r2, [r0, r2, lsl #2]
   17fc0:	lsr	r2, r2, r1
   17fc4:	tst	r2, #1
   17fc8:	beq	180f4 <triple_free@@Base+0x42c8>
   17fcc:	str	r5, [fp, #-132]	; 0xffffff7c
   17fd0:	mov	sl, #1
   17fd4:	ldrb	r3, [r9]
   17fd8:	strb	r5, [fp, #-128]	; 0xffffff80
   17fdc:	str	r3, [fp, #-124]	; 0xffffff84
   17fe0:	cmp	sl, #0
   17fe4:	strb	r5, [fp, #-140]	; 0xffffff74
   17fe8:	beq	17f78 <triple_free@@Base+0x414c>
   17fec:	ldr	r3, [fp, #-124]	; 0xffffff84
   17ff0:	cmp	r3, #0
   17ff4:	bne	17f78 <triple_free@@Base+0x414c>
   17ff8:	bl	11578 <abort@plt>
   17ffc:	add	r3, r0, #22
   18000:	bic	r3, r3, #7
   18004:	sub	sp, sp, r3
   18008:	add	r2, sp, #8
   1800c:	str	r2, [fp, #-236]	; 0xffffff14
   18010:	b	17c3c <triple_free@@Base+0x3e10>
   18014:	ldr	r0, [fp, #-192]	; 0xffffff40
   18018:	bl	1144c <strlen@plt>
   1801c:	strb	r5, [fp, #-184]	; 0xffffff48
   18020:	str	r0, [fp, #-188]	; 0xffffff44
   18024:	strb	r4, [fp, #-196]	; 0xffffff3c
   18028:	ldr	r3, [fp, #-192]	; 0xffffff40
   1802c:	cmp	r3, r6
   18030:	strne	r3, [r9, #-16]
   18034:	beq	18360 <triple_free@@Base+0x4534>
   18038:	ldr	r3, [fp, #-188]	; 0xffffff44
   1803c:	add	r9, r9, #40	; 0x28
   18040:	str	r3, [r9, #-52]	; 0xffffffcc
   18044:	ldrb	r3, [fp, #-184]	; 0xffffff48
   18048:	cmp	r3, #0
   1804c:	strb	r3, [r9, #-48]	; 0xffffffd0
   18050:	ldrne	r3, [fp, #-180]	; 0xffffff4c
   18054:	strne	r3, [r9, #-44]	; 0xffffffd4
   18058:	ldr	sl, [fp, #-192]	; 0xffffff40
   1805c:	ldr	r2, [fp, #-188]	; 0xffffff44
   18060:	strb	r5, [fp, #-196]	; 0xffffff3c
   18064:	add	sl, sl, r2
   18068:	ldrb	r2, [fp, #-208]	; 0xffffff30
   1806c:	str	sl, [fp, #-192]	; 0xffffff40
   18070:	cmp	r2, #0
   18074:	beq	17ca8 <triple_free@@Base+0x3e7c>
   18078:	bl	11380 <__ctype_get_mb_cur_max@plt>
   1807c:	mov	r1, r0
   18080:	mov	r0, sl
   18084:	bl	163dc <triple_free@@Base+0x25b0>
   18088:	mov	r1, sl
   1808c:	mov	r3, r7
   18090:	mov	r2, r0
   18094:	sub	r0, fp, #180	; 0xb4
   18098:	bl	113a4 <mbrtowc@plt>
   1809c:	cmn	r0, #1
   180a0:	str	r0, [fp, #-188]	; 0xffffff44
   180a4:	strbeq	r5, [fp, #-184]	; 0xffffff48
   180a8:	streq	r4, [fp, #-188]	; 0xffffff44
   180ac:	beq	18024 <triple_free@@Base+0x41f8>
   180b0:	cmn	r0, #2
   180b4:	beq	18014 <triple_free@@Base+0x41e8>
   180b8:	cmp	r0, #0
   180bc:	beq	182bc <triple_free@@Base+0x4490>
   180c0:	ldr	sl, [fp, #-180]	; 0xffffff4c
   180c4:	mov	r0, r7
   180c8:	strb	r4, [fp, #-184]	; 0xffffff48
   180cc:	bl	112f0 <mbsinit@plt>
   180d0:	cmp	r0, #0
   180d4:	strbne	r5, [fp, #-208]	; 0xffffff30
   180d8:	b	17ce0 <triple_free@@Base+0x3eb4>
   180dc:	mov	r0, r7
   180e0:	bl	112f0 <mbsinit@plt>
   180e4:	cmp	r0, #0
   180e8:	beq	18454 <triple_free@@Base+0x4628>
   180ec:	strb	r4, [fp, #-208]	; 0xffffff30
   180f0:	b	18078 <triple_free@@Base+0x424c>
   180f4:	mov	r0, r7
   180f8:	bl	112f0 <mbsinit@plt>
   180fc:	cmp	r0, #0
   18100:	beq	18454 <triple_free@@Base+0x4628>
   18104:	strb	r5, [fp, #-152]	; 0xffffff68
   18108:	bl	11380 <__ctype_get_mb_cur_max@plt>
   1810c:	mov	r1, r0
   18110:	mov	r0, r9
   18114:	bl	163dc <triple_free@@Base+0x25b0>
   18118:	mov	r1, r9
   1811c:	mov	r3, r7
   18120:	mov	r2, r0
   18124:	sub	r0, fp, #124	; 0x7c
   18128:	bl	113a4 <mbrtowc@plt>
   1812c:	cmn	r0, #1
   18130:	str	r0, [fp, #-132]	; 0xffffff7c
   18134:	strbeq	r6, [fp, #-128]	; 0xffffff80
   18138:	streq	r5, [fp, #-132]	; 0xffffff7c
   1813c:	beq	17fe0 <triple_free@@Base+0x41b4>
   18140:	cmn	r0, #2
   18144:	beq	1818c <triple_free@@Base+0x4360>
   18148:	cmp	r0, #0
   1814c:	bne	18170 <triple_free@@Base+0x4344>
   18150:	ldr	r3, [fp, #-136]	; 0xffffff78
   18154:	str	r5, [fp, #-132]	; 0xffffff7c
   18158:	ldrb	r3, [r3]
   1815c:	cmp	r3, #0
   18160:	bne	18478 <triple_free@@Base+0x464c>
   18164:	ldr	r3, [fp, #-124]	; 0xffffff84
   18168:	cmp	r3, #0
   1816c:	bne	182dc <triple_free@@Base+0x44b0>
   18170:	mov	r0, r7
   18174:	strb	r5, [fp, #-128]	; 0xffffff80
   18178:	bl	112f0 <mbsinit@plt>
   1817c:	mov	sl, #1
   18180:	cmp	r0, #0
   18184:	strbne	r6, [fp, #-152]	; 0xffffff68
   18188:	b	17fe0 <triple_free@@Base+0x41b4>
   1818c:	ldr	r0, [fp, #-136]	; 0xffffff78
   18190:	bl	1144c <strlen@plt>
   18194:	strb	r6, [fp, #-128]	; 0xffffff80
   18198:	str	r0, [fp, #-132]	; 0xffffff7c
   1819c:	b	17fe0 <triple_free@@Base+0x41b4>
   181a0:	sub	r0, fp, #92	; 0x5c
   181a4:	str	r3, [fp, #-252]	; 0xffffff04
   181a8:	bl	112f0 <mbsinit@plt>
   181ac:	ldr	r3, [fp, #-252]	; 0xffffff04
   181b0:	cmp	r0, #0
   181b4:	beq	18454 <triple_free@@Base+0x4628>
   181b8:	strb	r5, [fp, #-96]	; 0xffffffa0
   181bc:	str	r3, [fp, #-252]	; 0xffffff04
   181c0:	bl	11380 <__ctype_get_mb_cur_max@plt>
   181c4:	ldr	r3, [fp, #-252]	; 0xffffff04
   181c8:	mov	r1, r0
   181cc:	mov	r0, r3
   181d0:	bl	163dc <triple_free@@Base+0x25b0>
   181d4:	ldr	r3, [fp, #-252]	; 0xffffff04
   181d8:	mov	r1, r3
   181dc:	sub	r3, fp, #92	; 0x5c
   181e0:	mov	r2, r0
   181e4:	sub	r0, fp, #68	; 0x44
   181e8:	bl	113a4 <mbrtowc@plt>
   181ec:	cmn	r0, #1
   181f0:	str	r0, [fp, #-76]	; 0xffffffb4
   181f4:	strbeq	r6, [fp, #-72]	; 0xffffffb8
   181f8:	streq	r5, [fp, #-76]	; 0xffffffb4
   181fc:	beq	17ef0 <triple_free@@Base+0x40c4>
   18200:	cmn	r0, #2
   18204:	beq	18410 <triple_free@@Base+0x45e4>
   18208:	cmp	r0, #0
   1820c:	bne	18230 <triple_free@@Base+0x4404>
   18210:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18214:	str	r5, [fp, #-76]	; 0xffffffb4
   18218:	ldrb	r3, [r3]
   1821c:	cmp	r3, #0
   18220:	bne	18478 <triple_free@@Base+0x464c>
   18224:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18228:	cmp	r3, #0
   1822c:	bne	182dc <triple_free@@Base+0x44b0>
   18230:	sub	r0, fp, #92	; 0x5c
   18234:	strb	r5, [fp, #-72]	; 0xffffffb8
   18238:	bl	112f0 <mbsinit@plt>
   1823c:	mov	r4, #1
   18240:	cmp	r0, #0
   18244:	strbne	r6, [fp, #-96]	; 0xffffffa0
   18248:	b	17ef0 <triple_free@@Base+0x40c4>
   1824c:	ldrb	r4, [fp, #-140]	; 0xffffff74
   18250:	cmp	r4, #0
   18254:	beq	182fc <triple_free@@Base+0x44d0>
   18258:	ldrb	r4, [fp, #-128]	; 0xffffff80
   1825c:	cmp	r4, #0
   18260:	bne	18350 <triple_free@@Base+0x4524>
   18264:	ldr	r1, [fp, #-136]	; 0xffffff78
   18268:	mov	r4, #0
   1826c:	ldr	r2, [fp, #-132]	; 0xffffff7c
   18270:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18274:	add	r2, r1, r2
   18278:	str	r2, [fp, #-136]	; 0xffffff78
   1827c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   18280:	strb	r6, [fp, #-140]	; 0xffffff74
   18284:	add	r3, r3, r2
   18288:	strb	r6, [fp, #-84]	; 0xffffffac
   1828c:	str	r3, [fp, #-80]	; 0xffffffb0
   18290:	b	17ea8 <triple_free@@Base+0x407c>
   18294:	ldrb	r4, [fp, #-84]	; 0xffffffac
   18298:	b	17e34 <triple_free@@Base+0x4008>
   1829c:	ldr	r0, [r1]
   182a0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   182a4:	bl	112fc <memcmp@plt>
   182a8:	rsbs	r0, r0, #1
   182ac:	movcc	r0, #0
   182b0:	b	17e6c <triple_free@@Base+0x4040>
   182b4:	str	r5, [r6, #8]
   182b8:	b	17dac <triple_free@@Base+0x3f80>
   182bc:	ldr	r3, [fp, #-192]	; 0xffffff40
   182c0:	str	r4, [fp, #-188]	; 0xffffff44
   182c4:	ldrb	r3, [r3]
   182c8:	cmp	r3, #0
   182cc:	bne	18478 <triple_free@@Base+0x464c>
   182d0:	ldr	sl, [fp, #-180]	; 0xffffff4c
   182d4:	cmp	sl, #0
   182d8:	beq	180c4 <triple_free@@Base+0x4298>
   182dc:	ldr	r0, [pc, #448]	; 184a4 <triple_free@@Base+0x4678>
   182e0:	mov	r2, #179	; 0xb3
   182e4:	ldr	r1, [pc, #444]	; 184a8 <triple_free@@Base+0x467c>
   182e8:	ldr	r3, [pc, #444]	; 184ac <triple_free@@Base+0x4680>
   182ec:	add	r0, pc, r0
   182f0:	add	r1, pc, r1
   182f4:	add	r3, pc, r3
   182f8:	bl	1159c <__assert_fail@plt>
   182fc:	ldrb	r3, [fp, #-152]	; 0xffffff68
   18300:	ldr	sl, [fp, #-136]	; 0xffffff78
   18304:	cmp	r3, #0
   18308:	bne	1838c <triple_free@@Base+0x4560>
   1830c:	ldr	r1, [pc, #396]	; 184a0 <triple_free@@Base+0x4674>
   18310:	ldrb	r2, [sl]
   18314:	ldr	r0, [r8, r1]
   18318:	and	r1, r2, #31
   1831c:	lsr	r2, r2, #5
   18320:	ldr	r2, [r0, r2, lsl #2]
   18324:	lsr	r2, r2, r1
   18328:	tst	r2, #1
   1832c:	beq	18378 <triple_free@@Base+0x454c>
   18330:	str	r5, [fp, #-132]	; 0xffffff7c
   18334:	mov	r4, #1
   18338:	ldrb	r3, [sl]
   1833c:	strb	r5, [fp, #-128]	; 0xffffff80
   18340:	str	r3, [fp, #-124]	; 0xffffff84
   18344:	cmp	r4, #0
   18348:	strb	r5, [fp, #-140]	; 0xffffff74
   1834c:	beq	18264 <triple_free@@Base+0x4438>
   18350:	ldr	r3, [fp, #-124]	; 0xffffff84
   18354:	cmp	r3, #0
   18358:	bne	18264 <triple_free@@Base+0x4438>
   1835c:	b	17ff8 <triple_free@@Base+0x41cc>
   18360:	mov	r0, r9
   18364:	mov	r1, r6
   18368:	ldr	r2, [fp, #-188]	; 0xffffff44
   1836c:	bl	112e4 <memcpy@plt>
   18370:	str	r9, [r9, #-16]
   18374:	b	18038 <triple_free@@Base+0x420c>
   18378:	mov	r0, r7
   1837c:	bl	112f0 <mbsinit@plt>
   18380:	cmp	r0, #0
   18384:	beq	18454 <triple_free@@Base+0x4628>
   18388:	strb	r5, [fp, #-152]	; 0xffffff68
   1838c:	bl	11380 <__ctype_get_mb_cur_max@plt>
   18390:	mov	r1, r0
   18394:	mov	r0, sl
   18398:	bl	163dc <triple_free@@Base+0x25b0>
   1839c:	mov	r1, sl
   183a0:	mov	r3, r7
   183a4:	mov	r2, r0
   183a8:	sub	r0, fp, #124	; 0x7c
   183ac:	bl	113a4 <mbrtowc@plt>
   183b0:	cmn	r0, #1
   183b4:	str	r0, [fp, #-132]	; 0xffffff7c
   183b8:	strbeq	r6, [fp, #-128]	; 0xffffff80
   183bc:	streq	r5, [fp, #-132]	; 0xffffff7c
   183c0:	beq	18344 <triple_free@@Base+0x4518>
   183c4:	cmn	r0, #2
   183c8:	beq	18440 <triple_free@@Base+0x4614>
   183cc:	cmp	r0, #0
   183d0:	bne	183f4 <triple_free@@Base+0x45c8>
   183d4:	ldr	r3, [fp, #-136]	; 0xffffff78
   183d8:	str	r5, [fp, #-132]	; 0xffffff7c
   183dc:	ldrb	r3, [r3]
   183e0:	cmp	r3, #0
   183e4:	bne	18478 <triple_free@@Base+0x464c>
   183e8:	ldr	r3, [fp, #-124]	; 0xffffff84
   183ec:	cmp	r3, #0
   183f0:	bne	182dc <triple_free@@Base+0x44b0>
   183f4:	mov	r0, r7
   183f8:	strb	r5, [fp, #-128]	; 0xffffff80
   183fc:	bl	112f0 <mbsinit@plt>
   18400:	mov	r4, #1
   18404:	cmp	r0, #0
   18408:	strbne	r6, [fp, #-152]	; 0xffffff68
   1840c:	b	18344 <triple_free@@Base+0x4518>
   18410:	ldr	r0, [fp, #-80]	; 0xffffffb0
   18414:	bl	1144c <strlen@plt>
   18418:	strb	r6, [fp, #-72]	; 0xffffffb8
   1841c:	str	r0, [fp, #-76]	; 0xffffffb4
   18420:	b	17ef0 <triple_free@@Base+0x40c4>
   18424:	ldr	r3, [fp, #-136]	; 0xffffff78
   18428:	ldr	r1, [fp, #-248]	; 0xffffff08
   1842c:	str	r3, [r1]
   18430:	ldr	r0, [fp, #-236]	; 0xffffff14
   18434:	bl	199f4 <triple_free@@Base+0x5bc8>
   18438:	mov	r0, #1
   1843c:	b	17c00 <triple_free@@Base+0x3dd4>
   18440:	ldr	r0, [fp, #-136]	; 0xffffff78
   18444:	bl	1144c <strlen@plt>
   18448:	strb	r6, [fp, #-128]	; 0xffffff80
   1844c:	str	r0, [fp, #-132]	; 0xffffff7c
   18450:	b	18344 <triple_free@@Base+0x4518>
   18454:	ldr	r0, [pc, #84]	; 184b0 <triple_free@@Base+0x4684>
   18458:	mov	r2, #150	; 0x96
   1845c:	ldr	r1, [pc, #80]	; 184b4 <triple_free@@Base+0x4688>
   18460:	ldr	r3, [pc, #80]	; 184b8 <triple_free@@Base+0x468c>
   18464:	add	r0, pc, r0
   18468:	add	r1, pc, r1
   1846c:	add	r3, pc, r3
   18470:	bl	1159c <__assert_fail@plt>
   18474:	bl	11314 <__stack_chk_fail@plt>
   18478:	ldr	r0, [pc, #60]	; 184bc <triple_free@@Base+0x4690>
   1847c:	mov	r2, #178	; 0xb2
   18480:	ldr	r1, [pc, #56]	; 184c0 <triple_free@@Base+0x4694>
   18484:	ldr	r3, [pc, #56]	; 184c4 <triple_free@@Base+0x4698>
   18488:	add	r0, pc, r0
   1848c:	add	r1, pc, r1
   18490:	add	r3, pc, r3
   18494:	bl	1159c <__assert_fail@plt>
   18498:	andeq	r4, r1, r8, lsr r4
   1849c:	andeq	r0, r0, r0, lsr r1
   184a0:	andeq	r0, r0, ip, lsr #2
   184a4:	andeq	r2, r0, ip, lsr #25
   184a8:	andeq	r2, r0, r0, lsl #25
   184ac:	andeq	r3, r0, r4, lsl #2
   184b0:	strdeq	r2, [r0], -r4
   184b4:	andeq	r2, r0, r8, lsl #22
   184b8:	andeq	r2, r0, ip, lsl #31
   184bc:	strdeq	r2, [r0], -r8
   184c0:	andeq	r2, r0, r4, ror #21
   184c4:	andeq	r2, r0, r8, ror #30
   184c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   184cc:	sub	sp, sp, #348	; 0x15c
   184d0:	ldr	r4, [pc, #3188]	; 1914c <triple_free@@Base+0x5320>
   184d4:	ldr	r3, [pc, #3188]	; 19150 <triple_free@@Base+0x5324>
   184d8:	add	r4, pc, r4
   184dc:	str	r0, [sp, #16]
   184e0:	str	r1, [sp, #4]
   184e4:	ldr	r3, [r4, r3]
   184e8:	str	r3, [sp, #20]
   184ec:	ldr	r3, [r3]
   184f0:	str	r3, [sp, #340]	; 0x154
   184f4:	bl	11380 <__ctype_get_mb_cur_max@plt>
   184f8:	cmp	r0, #1
   184fc:	bls	186e0 <triple_free@@Base+0x48b4>
   18500:	ldr	r0, [sp, #4]
   18504:	add	r5, sp, #64	; 0x40
   18508:	ldr	ip, [pc, #3140]	; 19154 <triple_free@@Base+0x5328>
   1850c:	mov	r2, #0
   18510:	str	r2, [r5, #4]
   18514:	ldrb	r1, [r0]
   18518:	str	r0, [sp, #76]	; 0x4c
   1851c:	strb	r2, [sp, #60]	; 0x3c
   18520:	and	r3, r1, #31
   18524:	str	r2, [sp, #64]	; 0x40
   18528:	lsr	r0, r1, #5
   1852c:	strb	r2, [sp, #72]	; 0x48
   18530:	ldr	r6, [r4, ip]
   18534:	ldr	r2, [r6, r0, lsl #2]
   18538:	lsr	r3, r2, r3
   1853c:	ands	r4, r3, #1
   18540:	beq	18630 <triple_free@@Base+0x4804>
   18544:	mov	r4, r1
   18548:	cmp	r4, #0
   1854c:	mov	r3, #1
   18550:	str	r1, [sp, #88]	; 0x58
   18554:	str	r3, [sp, #80]	; 0x50
   18558:	strb	r3, [sp, #84]	; 0x54
   1855c:	mov	r3, #1
   18560:	strb	r3, [sp, #72]	; 0x48
   18564:	beq	186c0 <triple_free@@Base+0x4894>
   18568:	add	r2, sp, #120	; 0x78
   1856c:	add	r0, sp, #176	; 0xb0
   18570:	str	r2, [sp, #8]
   18574:	mov	r3, #0
   18578:	ldr	r2, [sp, #4]
   1857c:	mov	r9, r3
   18580:	str	r0, [sp, #44]	; 0x2c
   18584:	mov	r5, r3
   18588:	ldr	r0, [sp, #16]
   1858c:	mov	r4, #1
   18590:	mov	r1, #1
   18594:	str	r2, [sp, #132]	; 0x84
   18598:	str	r1, [sp, #32]
   1859c:	add	r2, sp, #200	; 0xc8
   185a0:	str	r0, [sp, #188]	; 0xbc
   185a4:	mov	r8, r0
   185a8:	add	r1, sp, #144	; 0x90
   185ac:	add	r0, sp, #56	; 0x38
   185b0:	str	r3, [sp, #28]
   185b4:	strb	r3, [sp, #116]	; 0x74
   185b8:	str	r3, [sp, #12]
   185bc:	str	r3, [sp, #120]	; 0x78
   185c0:	strb	r3, [sp, #128]	; 0x80
   185c4:	strb	r3, [sp, #172]	; 0xac
   185c8:	str	r3, [sp, #176]	; 0xb0
   185cc:	str	r2, [sp, #48]	; 0x30
   185d0:	strb	r3, [sp, #184]	; 0xb8
   185d4:	str	r0, [sp, #52]	; 0x34
   185d8:	str	r3, [sp, #124]	; 0x7c
   185dc:	str	r1, [sp, #24]
   185e0:	str	r3, [sp, #180]	; 0xb4
   185e4:	ldrb	r3, [sp, #172]	; 0xac
   185e8:	cmp	r3, #0
   185ec:	bne	18848 <triple_free@@Base+0x4a1c>
   185f0:	ldrb	r3, [r8]
   185f4:	and	r2, r3, #31
   185f8:	lsr	r3, r3, #5
   185fc:	ldr	r3, [r6, r3, lsl #2]
   18600:	lsr	r3, r3, r2
   18604:	tst	r3, #1
   18608:	beq	18834 <triple_free@@Base+0x4a08>
   1860c:	str	r4, [sp, #192]	; 0xc0
   18610:	ldrb	r7, [r8]
   18614:	strb	r4, [sp, #196]	; 0xc4
   18618:	cmp	r7, #0
   1861c:	strb	r4, [sp, #184]	; 0xb8
   18620:	str	r7, [sp, #200]	; 0xc8
   18624:	bne	188b4 <triple_free@@Base+0x4a88>
   18628:	mov	r0, r7
   1862c:	b	186c4 <triple_free@@Base+0x4898>
   18630:	mov	r0, r5
   18634:	bl	112f0 <mbsinit@plt>
   18638:	cmp	r0, #0
   1863c:	beq	19108 <triple_free@@Base+0x52dc>
   18640:	mov	r7, #1
   18644:	strb	r7, [sp, #60]	; 0x3c
   18648:	bl	11380 <__ctype_get_mb_cur_max@plt>
   1864c:	mov	r1, r0
   18650:	ldr	r0, [sp, #4]
   18654:	bl	163dc <triple_free@@Base+0x25b0>
   18658:	ldr	r1, [sp, #4]
   1865c:	mov	r3, r5
   18660:	mov	r2, r0
   18664:	add	r0, sp, #88	; 0x58
   18668:	bl	113a4 <mbrtowc@plt>
   1866c:	cmn	r0, #1
   18670:	str	r0, [sp, #80]	; 0x50
   18674:	strbeq	r4, [sp, #84]	; 0x54
   18678:	streq	r7, [sp, #80]	; 0x50
   1867c:	beq	188cc <triple_free@@Base+0x4aa0>
   18680:	cmn	r0, #2
   18684:	beq	188bc <triple_free@@Base+0x4a90>
   18688:	cmp	r0, #0
   1868c:	beq	19044 <triple_free@@Base+0x5218>
   18690:	ldr	r4, [sp, #88]	; 0x58
   18694:	mov	r0, r5
   18698:	mov	r3, #1
   1869c:	strb	r3, [sp, #84]	; 0x54
   186a0:	bl	112f0 <mbsinit@plt>
   186a4:	cmp	r0, #0
   186a8:	movne	r3, #0
   186ac:	strbne	r3, [sp, #60]	; 0x3c
   186b0:	cmp	r4, #0
   186b4:	mov	r3, #1
   186b8:	strb	r3, [sp, #72]	; 0x48
   186bc:	bne	18568 <triple_free@@Base+0x473c>
   186c0:	ldr	r0, [sp, #16]
   186c4:	ldr	r1, [sp, #20]
   186c8:	ldr	r2, [sp, #340]	; 0x154
   186cc:	ldr	r3, [r1]
   186d0:	cmp	r2, r3
   186d4:	bne	19128 <triple_free@@Base+0x52fc>
   186d8:	add	sp, sp, #348	; 0x15c
   186dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186e0:	ldr	r2, [sp, #4]
   186e4:	ldrb	r8, [r2]
   186e8:	cmp	r8, #0
   186ec:	beq	186c0 <triple_free@@Base+0x4894>
   186f0:	ldr	r3, [sp, #16]
   186f4:	ldrb	sl, [r3]
   186f8:	cmp	sl, #0
   186fc:	beq	18bbc <triple_free@@Base+0x4d90>
   18700:	cmp	sl, r8
   18704:	mov	r4, #0
   18708:	mov	r5, r4
   1870c:	mov	r9, r4
   18710:	add	r0, sp, #56	; 0x38
   18714:	add	r7, r3, #1
   18718:	mov	r6, r3
   1871c:	mov	fp, r2
   18720:	mov	r1, #1
   18724:	str	r0, [sp, #8]
   18728:	add	r4, r4, #1
   1872c:	beq	187d0 <triple_free@@Base+0x49a4>
   18730:	ldrb	sl, [r6, #1]
   18734:	cmp	sl, #0
   18738:	beq	18bbc <triple_free@@Base+0x4d90>
   1873c:	add	r5, r5, #1
   18740:	cmp	r4, #9
   18744:	movls	r3, #0
   18748:	andhi	r3, r1, #1
   1874c:	cmp	r3, #0
   18750:	beq	187bc <triple_free@@Base+0x4990>
   18754:	add	r3, r4, r4, lsl #2
   18758:	cmp	r5, r3
   1875c:	bcc	187b8 <triple_free@@Base+0x498c>
   18760:	cmp	fp, #0
   18764:	beq	18784 <triple_free@@Base+0x4958>
   18768:	rsb	r1, r9, r5
   1876c:	mov	r0, fp
   18770:	bl	11500 <strnlen@plt>
   18774:	mov	r9, r5
   18778:	ldrb	r3, [fp, r0]!
   1877c:	cmp	r3, #0
   18780:	bne	187b8 <triple_free@@Base+0x498c>
   18784:	ldr	r0, [sp, #4]
   18788:	bl	1144c <strlen@plt>
   1878c:	ldr	r1, [sp, #4]
   18790:	add	r3, sp, #56	; 0x38
   18794:	mov	r2, r0
   18798:	mov	r0, r7
   1879c:	bl	17a20 <triple_free@@Base+0x3bf4>
   187a0:	cmp	r0, #0
   187a4:	bne	19100 <triple_free@@Base+0x52d4>
   187a8:	mov	fp, r0
   187ac:	ldrb	sl, [r6, #1]
   187b0:	mov	r1, r0
   187b4:	b	187bc <triple_free@@Base+0x4990>
   187b8:	mov	r1, #1
   187bc:	cmp	sl, r8
   187c0:	add	r7, r7, #1
   187c4:	add	r6, r6, #1
   187c8:	add	r4, r4, #1
   187cc:	bne	18730 <triple_free@@Base+0x4904>
   187d0:	ldr	r2, [sp, #4]
   187d4:	ldrb	r3, [r2, #1]
   187d8:	cmp	r3, #0
   187dc:	beq	1882c <triple_free@@Base+0x4a00>
   187e0:	ldrb	sl, [r6, #1]
   187e4:	cmp	sl, #0
   187e8:	beq	18bbc <triple_free@@Base+0x4d90>
   187ec:	cmp	r3, sl
   187f0:	add	r3, r5, #2
   187f4:	bne	18c58 <triple_free@@Base+0x4e2c>
   187f8:	rsb	r0, r5, #0
   187fc:	add	r5, r2, r0
   18800:	add	r0, r6, r0
   18804:	b	18820 <triple_free@@Base+0x49f4>
   18808:	ldrb	ip, [r0, r3]
   1880c:	cmp	ip, #0
   18810:	beq	18bbc <triple_free@@Base+0x4d90>
   18814:	cmp	r2, ip
   18818:	add	r3, r3, #1
   1881c:	bne	18c58 <triple_free@@Base+0x4e2c>
   18820:	ldrb	r2, [r5, r3]
   18824:	cmp	r2, #0
   18828:	bne	18808 <triple_free@@Base+0x49dc>
   1882c:	mov	r0, r6
   18830:	b	186c4 <triple_free@@Base+0x4898>
   18834:	add	r0, sp, #176	; 0xb0
   18838:	bl	112f0 <mbsinit@plt>
   1883c:	cmp	r0, #0
   18840:	beq	19108 <triple_free@@Base+0x52dc>
   18844:	strb	r4, [sp, #172]	; 0xac
   18848:	bl	11380 <__ctype_get_mb_cur_max@plt>
   1884c:	mov	r1, r0
   18850:	mov	r0, r8
   18854:	bl	163dc <triple_free@@Base+0x25b0>
   18858:	mov	r1, r8
   1885c:	add	r3, sp, #176	; 0xb0
   18860:	mov	r2, r0
   18864:	add	r0, sp, #200	; 0xc8
   18868:	bl	113a4 <mbrtowc@plt>
   1886c:	cmn	r0, #1
   18870:	str	r0, [sp, #192]	; 0xc0
   18874:	strbeq	r5, [sp, #196]	; 0xc4
   18878:	streq	r4, [sp, #192]	; 0xc0
   1887c:	beq	188e8 <triple_free@@Base+0x4abc>
   18880:	cmn	r0, #2
   18884:	beq	188d8 <triple_free@@Base+0x4aac>
   18888:	cmp	r0, #0
   1888c:	beq	19020 <triple_free@@Base+0x51f4>
   18890:	ldr	r7, [sp, #200]	; 0xc8
   18894:	add	r0, sp, #176	; 0xb0
   18898:	strb	r4, [sp, #196]	; 0xc4
   1889c:	bl	112f0 <mbsinit@plt>
   188a0:	strb	r4, [sp, #184]	; 0xb8
   188a4:	cmp	r0, #0
   188a8:	strbne	r5, [sp, #172]	; 0xac
   188ac:	cmp	r7, #0
   188b0:	beq	18628 <triple_free@@Base+0x47fc>
   188b4:	mov	r3, #1
   188b8:	b	188f0 <triple_free@@Base+0x4ac4>
   188bc:	ldr	r0, [sp, #76]	; 0x4c
   188c0:	bl	1144c <strlen@plt>
   188c4:	strb	r4, [sp, #84]	; 0x54
   188c8:	str	r0, [sp, #80]	; 0x50
   188cc:	mov	r3, #1
   188d0:	strb	r3, [sp, #72]	; 0x48
   188d4:	b	18568 <triple_free@@Base+0x473c>
   188d8:	ldr	r0, [sp, #188]	; 0xbc
   188dc:	bl	1144c <strlen@plt>
   188e0:	strb	r5, [sp, #196]	; 0xc4
   188e4:	str	r0, [sp, #192]	; 0xc0
   188e8:	mov	r3, #0
   188ec:	strb	r4, [sp, #184]	; 0xb8
   188f0:	ldr	r8, [sp, #32]
   188f4:	ldr	r2, [sp, #12]
   188f8:	cmp	r2, #9
   188fc:	movls	r8, #0
   18900:	andhi	r8, r8, #1
   18904:	cmp	r8, #0
   18908:	beq	189e0 <triple_free@@Base+0x4bb4>
   1890c:	ldr	r1, [sp, #12]
   18910:	add	r2, r1, r1, lsl #2
   18914:	cmp	r9, r2
   18918:	bcc	18bb0 <triple_free@@Base+0x4d84>
   1891c:	ldr	r2, [sp, #28]
   18920:	subs	r7, r9, r2
   18924:	beq	189b8 <triple_free@@Base+0x4b8c>
   18928:	ldrb	sl, [sp, #128]	; 0x80
   1892c:	cmp	sl, #0
   18930:	beq	18960 <triple_free@@Base+0x4b34>
   18934:	ldrb	sl, [sp, #140]	; 0x8c
   18938:	cmp	sl, #0
   1893c:	bne	189ac <triple_free@@Base+0x4b80>
   18940:	ldr	sl, [sp, #132]	; 0x84
   18944:	subs	r7, r7, #1
   18948:	ldr	r3, [sp, #136]	; 0x88
   1894c:	strb	r5, [sp, #128]	; 0x80
   18950:	add	sl, sl, r3
   18954:	str	sl, [sp, #132]	; 0x84
   18958:	beq	18c84 <triple_free@@Base+0x4e58>
   1895c:	mov	sl, #0
   18960:	ldrb	r3, [sp, #116]	; 0x74
   18964:	ldr	fp, [sp, #132]	; 0x84
   18968:	cmp	r3, #0
   1896c:	bne	18a50 <triple_free@@Base+0x4c24>
   18970:	ldrb	r3, [fp]
   18974:	and	r2, r3, #31
   18978:	lsr	r3, r3, #5
   1897c:	ldr	r3, [r6, r3, lsl #2]
   18980:	lsr	r3, r3, r2
   18984:	tst	r3, #1
   18988:	beq	18a3c <triple_free@@Base+0x4c10>
   1898c:	str	r4, [sp, #136]	; 0x88
   18990:	mov	sl, r8
   18994:	ldrb	r3, [fp]
   18998:	strb	r4, [sp, #140]	; 0x8c
   1899c:	str	r3, [sp, #144]	; 0x90
   189a0:	cmp	sl, #0
   189a4:	strb	r4, [sp, #128]	; 0x80
   189a8:	beq	18940 <triple_free@@Base+0x4b14>
   189ac:	ldr	r3, [sp, #144]	; 0x90
   189b0:	cmp	r3, #0
   189b4:	bne	18940 <triple_free@@Base+0x4b14>
   189b8:	ldrb	r3, [sp, #128]	; 0x80
   189bc:	cmp	r3, #0
   189c0:	ldrbne	r8, [sp, #140]	; 0x8c
   189c4:	beq	18c80 <triple_free@@Base+0x4e54>
   189c8:	cmp	r8, #0
   189cc:	bne	18c60 <triple_free@@Base+0x4e34>
   189d0:	ldrb	r3, [sp, #196]	; 0xc4
   189d4:	mov	r0, #1
   189d8:	str	r9, [sp, #28]
   189dc:	str	r0, [sp, #32]
   189e0:	cmp	r3, #0
   189e4:	ldr	r3, [sp, #12]
   189e8:	add	r7, r9, #1
   189ec:	add	r3, r3, #1
   189f0:	str	r3, [sp, #12]
   189f4:	beq	18ad4 <triple_free@@Base+0x4ca8>
   189f8:	ldrb	r3, [sp, #84]	; 0x54
   189fc:	cmp	r3, #0
   18a00:	beq	18ad4 <triple_free@@Base+0x4ca8>
   18a04:	ldr	r0, [sp, #200]	; 0xc8
   18a08:	ldr	r3, [sp, #88]	; 0x58
   18a0c:	subs	r3, r0, r3
   18a10:	rsbs	r0, r3, #0
   18a14:	adcs	r0, r0, r3
   18a18:	cmp	r0, #0
   18a1c:	bne	18b04 <triple_free@@Base+0x4cd8>
   18a20:	ldr	r8, [sp, #188]	; 0xbc
   18a24:	mov	r9, r7
   18a28:	ldr	r3, [sp, #192]	; 0xc0
   18a2c:	strb	r5, [sp, #184]	; 0xb8
   18a30:	add	r8, r8, r3
   18a34:	str	r8, [sp, #188]	; 0xbc
   18a38:	b	185e4 <triple_free@@Base+0x47b8>
   18a3c:	add	r0, sp, #120	; 0x78
   18a40:	bl	112f0 <mbsinit@plt>
   18a44:	cmp	r0, #0
   18a48:	beq	19108 <triple_free@@Base+0x52dc>
   18a4c:	strb	r4, [sp, #116]	; 0x74
   18a50:	bl	11380 <__ctype_get_mb_cur_max@plt>
   18a54:	mov	r1, r0
   18a58:	mov	r0, fp
   18a5c:	bl	163dc <triple_free@@Base+0x25b0>
   18a60:	mov	r1, fp
   18a64:	add	r3, sp, #120	; 0x78
   18a68:	mov	r2, r0
   18a6c:	add	r0, sp, #144	; 0x90
   18a70:	bl	113a4 <mbrtowc@plt>
   18a74:	cmn	r0, #1
   18a78:	str	r0, [sp, #136]	; 0x88
   18a7c:	strbeq	r5, [sp, #140]	; 0x8c
   18a80:	streq	r4, [sp, #136]	; 0x88
   18a84:	beq	189a0 <triple_free@@Base+0x4b74>
   18a88:	cmn	r0, #2
   18a8c:	beq	18b9c <triple_free@@Base+0x4d70>
   18a90:	cmp	r0, #0
   18a94:	bne	18ab8 <triple_free@@Base+0x4c8c>
   18a98:	ldr	r3, [sp, #132]	; 0x84
   18a9c:	str	r4, [sp, #136]	; 0x88
   18aa0:	ldrb	r3, [r3]
   18aa4:	cmp	r3, #0
   18aa8:	bne	1912c <triple_free@@Base+0x5300>
   18aac:	ldr	r3, [sp, #144]	; 0x90
   18ab0:	cmp	r3, #0
   18ab4:	bne	18c38 <triple_free@@Base+0x4e0c>
   18ab8:	add	r0, sp, #120	; 0x78
   18abc:	strb	r4, [sp, #140]	; 0x8c
   18ac0:	bl	112f0 <mbsinit@plt>
   18ac4:	mov	sl, r8
   18ac8:	cmp	r0, #0
   18acc:	strbne	r5, [sp, #116]	; 0x74
   18ad0:	b	189a0 <triple_free@@Base+0x4b74>
   18ad4:	ldr	r2, [sp, #192]	; 0xc0
   18ad8:	ldr	r3, [sp, #80]	; 0x50
   18adc:	cmp	r2, r3
   18ae0:	movne	r0, #0
   18ae4:	bne	18a18 <triple_free@@Base+0x4bec>
   18ae8:	ldr	r0, [sp, #188]	; 0xbc
   18aec:	ldr	r1, [sp, #76]	; 0x4c
   18af0:	bl	112fc <memcmp@plt>
   18af4:	rsbs	r0, r0, #1
   18af8:	movcc	r0, #0
   18afc:	cmp	r0, #0
   18b00:	beq	18a20 <triple_free@@Base+0x4bf4>
   18b04:	ldr	r0, [sp, #4]
   18b08:	add	r7, sp, #172	; 0xac
   18b0c:	add	ip, sp, #228	; 0xe4
   18b10:	add	r8, sp, #288	; 0x120
   18b14:	str	r0, [sp, #300]	; 0x12c
   18b18:	ldm	r7!, {r0, r1, r2, r3}
   18b1c:	stmia	ip!, {r0, r1, r2, r3}
   18b20:	ldm	r7!, {r0, r1, r2, r3}
   18b24:	strb	r5, [sp, #240]	; 0xf0
   18b28:	stmia	ip!, {r0, r1, r2, r3}
   18b2c:	ldm	r7!, {r0, r1, r2, r3}
   18b30:	ldr	sl, [sp, #244]	; 0xf4
   18b34:	stmia	ip!, {r0, r1, r2, r3}
   18b38:	ldm	r7, {r0, r1}
   18b3c:	ldr	r3, [sp, #248]	; 0xf8
   18b40:	stm	ip, {r0, r1}
   18b44:	add	r3, sl, r3
   18b48:	str	r3, [sp, #244]	; 0xf4
   18b4c:	ldr	r1, [sp, #4]
   18b50:	str	r5, [sp, #288]	; 0x120
   18b54:	strb	r5, [sp, #296]	; 0x128
   18b58:	ldrb	r3, [r1]
   18b5c:	strb	r5, [sp, #284]	; 0x11c
   18b60:	and	r2, r3, #31
   18b64:	str	r5, [r8, #4]
   18b68:	lsr	r1, r3, #5
   18b6c:	ldr	r7, [r6, r1, lsl #2]
   18b70:	lsr	r7, r7, r2
   18b74:	ands	r7, r7, #1
   18b78:	beq	18bc4 <triple_free@@Base+0x4d98>
   18b7c:	mov	r7, r3
   18b80:	str	r4, [sp, #304]	; 0x130
   18b84:	str	r3, [sp, #312]	; 0x138
   18b88:	strb	r4, [sp, #308]	; 0x134
   18b8c:	cmp	r7, #0
   18b90:	strb	r4, [sp, #296]	; 0x128
   18b94:	bne	18d48 <triple_free@@Base+0x4f1c>
   18b98:	bl	11578 <abort@plt>
   18b9c:	ldr	r0, [sp, #132]	; 0x84
   18ba0:	bl	1144c <strlen@plt>
   18ba4:	strb	r5, [sp, #140]	; 0x8c
   18ba8:	str	r0, [sp, #136]	; 0x88
   18bac:	b	189a0 <triple_free@@Base+0x4b74>
   18bb0:	mov	r2, #1
   18bb4:	str	r2, [sp, #32]
   18bb8:	b	189e0 <triple_free@@Base+0x4bb4>
   18bbc:	mov	r0, #0
   18bc0:	b	186c4 <triple_free@@Base+0x4898>
   18bc4:	mov	r0, r8
   18bc8:	bl	112f0 <mbsinit@plt>
   18bcc:	cmp	r0, #0
   18bd0:	beq	19108 <triple_free@@Base+0x52dc>
   18bd4:	strb	r4, [sp, #284]	; 0x11c
   18bd8:	bl	11380 <__ctype_get_mb_cur_max@plt>
   18bdc:	mov	r1, r0
   18be0:	ldr	r0, [sp, #4]
   18be4:	bl	163dc <triple_free@@Base+0x25b0>
   18be8:	ldr	r1, [sp, #4]
   18bec:	mov	r3, r8
   18bf0:	mov	r2, r0
   18bf4:	add	r0, sp, #312	; 0x138
   18bf8:	bl	113a4 <mbrtowc@plt>
   18bfc:	cmn	r0, #1
   18c00:	str	r0, [sp, #304]	; 0x130
   18c04:	beq	190d8 <triple_free@@Base+0x52ac>
   18c08:	cmn	r0, #2
   18c0c:	beq	190e8 <triple_free@@Base+0x52bc>
   18c10:	cmp	r0, #0
   18c14:	bne	190a4 <triple_free@@Base+0x5278>
   18c18:	ldr	fp, [sp, #300]	; 0x12c
   18c1c:	str	r4, [sp, #304]	; 0x130
   18c20:	ldrb	r3, [fp]
   18c24:	cmp	r3, #0
   18c28:	bne	1912c <triple_free@@Base+0x5300>
   18c2c:	ldr	r7, [sp, #312]	; 0x138
   18c30:	cmp	r7, #0
   18c34:	beq	190a8 <triple_free@@Base+0x527c>
   18c38:	ldr	r0, [pc, #1304]	; 19158 <triple_free@@Base+0x532c>
   18c3c:	mov	r2, #179	; 0xb3
   18c40:	ldr	r1, [pc, #1300]	; 1915c <triple_free@@Base+0x5330>
   18c44:	ldr	r3, [pc, #1300]	; 19160 <triple_free@@Base+0x5334>
   18c48:	add	r0, pc, r0
   18c4c:	add	r1, pc, r1
   18c50:	add	r3, pc, r3
   18c54:	bl	1159c <__assert_fail@plt>
   18c58:	mov	r5, r3
   18c5c:	b	18740 <triple_free@@Base+0x4914>
   18c60:	ldr	r3, [sp, #144]	; 0x90
   18c64:	cmp	r3, #0
   18c68:	beq	19068 <triple_free@@Base+0x523c>
   18c6c:	mov	r1, #1
   18c70:	ldrb	r3, [sp, #196]	; 0xc4
   18c74:	str	r9, [sp, #28]
   18c78:	str	r1, [sp, #32]
   18c7c:	b	189e0 <triple_free@@Base+0x4bb4>
   18c80:	ldr	sl, [sp, #132]	; 0x84
   18c84:	ldrb	r3, [sp, #116]	; 0x74
   18c88:	cmp	r3, #0
   18c8c:	bne	18cc0 <triple_free@@Base+0x4e94>
   18c90:	ldrb	r3, [sl]
   18c94:	and	r2, r3, #31
   18c98:	lsr	r3, r3, #5
   18c9c:	ldr	r3, [r6, r3, lsl #2]
   18ca0:	lsr	r3, r3, r2
   18ca4:	tst	r3, #1
   18ca8:	bne	19090 <triple_free@@Base+0x5264>
   18cac:	add	r0, sp, #120	; 0x78
   18cb0:	bl	112f0 <mbsinit@plt>
   18cb4:	cmp	r0, #0
   18cb8:	beq	19108 <triple_free@@Base+0x52dc>
   18cbc:	strb	r4, [sp, #116]	; 0x74
   18cc0:	bl	11380 <__ctype_get_mb_cur_max@plt>
   18cc4:	mov	r1, r0
   18cc8:	mov	r0, sl
   18ccc:	bl	163dc <triple_free@@Base+0x25b0>
   18cd0:	mov	r1, sl
   18cd4:	add	r3, sp, #120	; 0x78
   18cd8:	mov	r2, r0
   18cdc:	add	r0, sp, #144	; 0x90
   18ce0:	bl	113a4 <mbrtowc@plt>
   18ce4:	cmn	r0, #1
   18ce8:	str	r0, [sp, #136]	; 0x88
   18cec:	strbeq	r5, [sp, #140]	; 0x8c
   18cf0:	streq	r4, [sp, #136]	; 0x88
   18cf4:	moveq	r8, #0
   18cf8:	beq	18d40 <triple_free@@Base+0x4f14>
   18cfc:	cmn	r0, #2
   18d00:	beq	190c0 <triple_free@@Base+0x5294>
   18d04:	cmp	r0, #0
   18d08:	bne	18d2c <triple_free@@Base+0x4f00>
   18d0c:	ldr	r3, [sp, #132]	; 0x84
   18d10:	str	r4, [sp, #136]	; 0x88
   18d14:	ldrb	r3, [r3]
   18d18:	cmp	r3, #0
   18d1c:	bne	1912c <triple_free@@Base+0x5300>
   18d20:	ldr	r3, [sp, #144]	; 0x90
   18d24:	cmp	r3, #0
   18d28:	bne	18c38 <triple_free@@Base+0x4e0c>
   18d2c:	add	r0, sp, #120	; 0x78
   18d30:	strb	r4, [sp, #140]	; 0x8c
   18d34:	bl	112f0 <mbsinit@plt>
   18d38:	cmp	r0, #0
   18d3c:	strbne	r5, [sp, #116]	; 0x74
   18d40:	strb	r4, [sp, #128]	; 0x80
   18d44:	b	189c8 <triple_free@@Base+0x4b9c>
   18d48:	ldr	fp, [sp, #300]	; 0x12c
   18d4c:	ldr	r2, [sp, #304]	; 0x130
   18d50:	add	r7, r9, #2
   18d54:	add	r3, sp, #312	; 0x138
   18d58:	add	r0, sp, #256	; 0x100
   18d5c:	add	fp, fp, r2
   18d60:	ldrb	r2, [sp, #284]	; 0x11c
   18d64:	strb	r5, [sp, #296]	; 0x128
   18d68:	add	r9, sp, #232	; 0xe8
   18d6c:	cmp	r2, #0
   18d70:	str	r3, [sp, #36]	; 0x24
   18d74:	str	r0, [sp, #40]	; 0x28
   18d78:	str	fp, [sp, #300]	; 0x12c
   18d7c:	bne	18e48 <triple_free@@Base+0x501c>
   18d80:	ldrb	r2, [fp]
   18d84:	and	r1, r2, #31
   18d88:	lsr	r2, r2, #5
   18d8c:	ldr	r2, [r6, r2, lsl #2]
   18d90:	lsr	r2, r2, r1
   18d94:	tst	r2, #1
   18d98:	beq	18fd0 <triple_free@@Base+0x51a4>
   18d9c:	str	r4, [sp, #304]	; 0x130
   18da0:	ldrb	r3, [fp]
   18da4:	strb	r4, [sp, #308]	; 0x134
   18da8:	mov	fp, r3
   18dac:	str	r3, [sp, #312]	; 0x138
   18db0:	cmp	fp, #0
   18db4:	strb	r4, [sp, #296]	; 0x128
   18db8:	bne	18dd8 <triple_free@@Base+0x4fac>
   18dbc:	ldr	r0, [sp, #188]	; 0xbc
   18dc0:	b	186c4 <triple_free@@Base+0x4898>
   18dc4:	ldr	r0, [sp, #300]	; 0x12c
   18dc8:	bl	1144c <strlen@plt>
   18dcc:	strb	r5, [sp, #308]	; 0x134
   18dd0:	str	r0, [sp, #304]	; 0x130
   18dd4:	strb	r4, [sp, #296]	; 0x128
   18dd8:	ldrb	fp, [sp, #240]	; 0xf0
   18ddc:	cmp	fp, #0
   18de0:	beq	18eac <triple_free@@Base+0x5080>
   18de4:	ldrb	fp, [sp, #252]	; 0xfc
   18de8:	cmp	fp, #0
   18dec:	bne	18ef8 <triple_free@@Base+0x50cc>
   18df0:	ldr	r2, [sp, #248]	; 0xf8
   18df4:	ldr	r3, [sp, #304]	; 0x130
   18df8:	cmp	r2, r3
   18dfc:	movne	r0, #1
   18e00:	beq	18fb8 <triple_free@@Base+0x518c>
   18e04:	cmp	r0, #0
   18e08:	add	r3, r7, #1
   18e0c:	bne	18a20 <triple_free@@Base+0x4bf4>
   18e10:	ldr	r1, [sp, #244]	; 0xf4
   18e14:	mov	r7, r3
   18e18:	ldr	r2, [sp, #248]	; 0xf8
   18e1c:	ldr	fp, [sp, #300]	; 0x12c
   18e20:	add	r1, r1, r2
   18e24:	ldr	r2, [sp, #304]	; 0x130
   18e28:	strb	r0, [sp, #240]	; 0xf0
   18e2c:	add	fp, fp, r2
   18e30:	ldrb	r2, [sp, #284]	; 0x11c
   18e34:	strb	r0, [sp, #296]	; 0x128
   18e38:	cmp	r2, #0
   18e3c:	str	r1, [sp, #244]	; 0xf4
   18e40:	str	fp, [sp, #300]	; 0x12c
   18e44:	beq	18d80 <triple_free@@Base+0x4f54>
   18e48:	bl	11380 <__ctype_get_mb_cur_max@plt>
   18e4c:	mov	r1, r0
   18e50:	mov	r0, fp
   18e54:	bl	163dc <triple_free@@Base+0x25b0>
   18e58:	mov	r1, fp
   18e5c:	mov	r3, r8
   18e60:	mov	r2, r0
   18e64:	add	r0, sp, #312	; 0x138
   18e68:	bl	113a4 <mbrtowc@plt>
   18e6c:	cmn	r0, #1
   18e70:	str	r0, [sp, #304]	; 0x130
   18e74:	strbeq	r5, [sp, #308]	; 0x134
   18e78:	streq	r4, [sp, #304]	; 0x130
   18e7c:	beq	18dd4 <triple_free@@Base+0x4fa8>
   18e80:	cmn	r0, #2
   18e84:	beq	18dc4 <triple_free@@Base+0x4f98>
   18e88:	cmp	r0, #0
   18e8c:	beq	18fe8 <triple_free@@Base+0x51bc>
   18e90:	ldr	fp, [sp, #312]	; 0x138
   18e94:	mov	r0, r8
   18e98:	strb	r4, [sp, #308]	; 0x134
   18e9c:	bl	112f0 <mbsinit@plt>
   18ea0:	cmp	r0, #0
   18ea4:	strbne	r5, [sp, #284]	; 0x11c
   18ea8:	b	18db0 <triple_free@@Base+0x4f84>
   18eac:	ldrb	r3, [sp, #228]	; 0xe4
   18eb0:	ldr	sl, [sp, #244]	; 0xf4
   18eb4:	cmp	r3, #0
   18eb8:	bne	18f34 <triple_free@@Base+0x5108>
   18ebc:	ldrb	r2, [sl]
   18ec0:	and	r1, r2, #31
   18ec4:	lsr	r2, r2, #5
   18ec8:	ldr	r2, [r6, r2, lsl #2]
   18ecc:	lsr	r2, r2, r1
   18ed0:	tst	r2, #1
   18ed4:	beq	18f20 <triple_free@@Base+0x50f4>
   18ed8:	str	r4, [sp, #248]	; 0xf8
   18edc:	mov	fp, #1
   18ee0:	ldrb	r3, [sl]
   18ee4:	strb	r4, [sp, #252]	; 0xfc
   18ee8:	str	r3, [sp, #256]	; 0x100
   18eec:	cmp	fp, #0
   18ef0:	strb	r4, [sp, #240]	; 0xf0
   18ef4:	beq	18df0 <triple_free@@Base+0x4fc4>
   18ef8:	ldr	r0, [sp, #256]	; 0x100
   18efc:	cmp	r0, #0
   18f00:	beq	186c4 <triple_free@@Base+0x4898>
   18f04:	ldrb	r3, [sp, #308]	; 0x134
   18f08:	cmp	r3, #0
   18f0c:	beq	18df0 <triple_free@@Base+0x4fc4>
   18f10:	ldr	r3, [sp, #312]	; 0x138
   18f14:	subs	r0, r0, r3
   18f18:	movne	r0, #1
   18f1c:	b	18e04 <triple_free@@Base+0x4fd8>
   18f20:	mov	r0, r9
   18f24:	bl	112f0 <mbsinit@plt>
   18f28:	cmp	r0, #0
   18f2c:	beq	19108 <triple_free@@Base+0x52dc>
   18f30:	strb	r4, [sp, #228]	; 0xe4
   18f34:	bl	11380 <__ctype_get_mb_cur_max@plt>
   18f38:	mov	r1, r0
   18f3c:	mov	r0, sl
   18f40:	bl	163dc <triple_free@@Base+0x25b0>
   18f44:	mov	r1, sl
   18f48:	mov	r3, r9
   18f4c:	mov	r2, r0
   18f50:	add	r0, sp, #256	; 0x100
   18f54:	bl	113a4 <mbrtowc@plt>
   18f58:	cmn	r0, #1
   18f5c:	str	r0, [sp, #248]	; 0xf8
   18f60:	strbeq	r5, [sp, #252]	; 0xfc
   18f64:	streq	r4, [sp, #248]	; 0xf8
   18f68:	beq	18eec <triple_free@@Base+0x50c0>
   18f6c:	cmn	r0, #2
   18f70:	beq	1900c <triple_free@@Base+0x51e0>
   18f74:	cmp	r0, #0
   18f78:	bne	18f9c <triple_free@@Base+0x5170>
   18f7c:	ldr	r3, [sp, #244]	; 0xf4
   18f80:	str	r4, [sp, #248]	; 0xf8
   18f84:	ldrb	r3, [r3]
   18f88:	cmp	r3, #0
   18f8c:	bne	1912c <triple_free@@Base+0x5300>
   18f90:	ldr	r3, [sp, #256]	; 0x100
   18f94:	cmp	r3, #0
   18f98:	bne	18c38 <triple_free@@Base+0x4e0c>
   18f9c:	mov	r0, r9
   18fa0:	strb	r4, [sp, #252]	; 0xfc
   18fa4:	bl	112f0 <mbsinit@plt>
   18fa8:	mov	fp, #1
   18fac:	cmp	r0, #0
   18fb0:	strbne	r5, [sp, #228]	; 0xe4
   18fb4:	b	18eec <triple_free@@Base+0x50c0>
   18fb8:	ldr	r0, [sp, #244]	; 0xf4
   18fbc:	ldr	r1, [sp, #300]	; 0x12c
   18fc0:	bl	112fc <memcmp@plt>
   18fc4:	adds	r0, r0, #0
   18fc8:	movne	r0, #1
   18fcc:	b	18e04 <triple_free@@Base+0x4fd8>
   18fd0:	mov	r0, r8
   18fd4:	bl	112f0 <mbsinit@plt>
   18fd8:	cmp	r0, #0
   18fdc:	beq	19108 <triple_free@@Base+0x52dc>
   18fe0:	strb	r4, [sp, #284]	; 0x11c
   18fe4:	b	18e48 <triple_free@@Base+0x501c>
   18fe8:	ldr	r3, [sp, #300]	; 0x12c
   18fec:	str	r4, [sp, #304]	; 0x130
   18ff0:	ldrb	r3, [r3]
   18ff4:	cmp	r3, #0
   18ff8:	bne	1912c <triple_free@@Base+0x5300>
   18ffc:	ldr	fp, [sp, #312]	; 0x138
   19000:	cmp	fp, #0
   19004:	beq	18e94 <triple_free@@Base+0x5068>
   19008:	b	18c38 <triple_free@@Base+0x4e0c>
   1900c:	ldr	r0, [sp, #244]	; 0xf4
   19010:	bl	1144c <strlen@plt>
   19014:	strb	r5, [sp, #252]	; 0xfc
   19018:	str	r0, [sp, #248]	; 0xf8
   1901c:	b	18eec <triple_free@@Base+0x50c0>
   19020:	ldr	r3, [sp, #188]	; 0xbc
   19024:	str	r4, [sp, #192]	; 0xc0
   19028:	ldrb	r3, [r3]
   1902c:	cmp	r3, #0
   19030:	bne	1912c <triple_free@@Base+0x5300>
   19034:	ldr	r7, [sp, #200]	; 0xc8
   19038:	cmp	r7, #0
   1903c:	beq	18894 <triple_free@@Base+0x4a68>
   19040:	b	18c38 <triple_free@@Base+0x4e0c>
   19044:	ldr	r3, [sp, #76]	; 0x4c
   19048:	str	r7, [sp, #80]	; 0x50
   1904c:	ldrb	r3, [r3]
   19050:	cmp	r3, #0
   19054:	bne	1912c <triple_free@@Base+0x5300>
   19058:	ldr	r4, [sp, #88]	; 0x58
   1905c:	cmp	r4, #0
   19060:	beq	18694 <triple_free@@Base+0x4868>
   19064:	b	18c38 <triple_free@@Base+0x4e0c>
   19068:	ldr	r0, [sp, #16]
   1906c:	add	r2, sp, #56	; 0x38
   19070:	ldr	r1, [sp, #4]
   19074:	bl	17bac <triple_free@@Base+0x3d80>
   19078:	cmp	r0, #0
   1907c:	bne	19100 <triple_free@@Base+0x52d4>
   19080:	str	r0, [sp, #32]
   19084:	ldrb	r3, [sp, #196]	; 0xc4
   19088:	str	r9, [sp, #28]
   1908c:	b	189e0 <triple_free@@Base+0x4bb4>
   19090:	str	r4, [sp, #136]	; 0x88
   19094:	ldrb	r3, [sl]
   19098:	strb	r4, [sp, #140]	; 0x8c
   1909c:	str	r3, [sp, #144]	; 0x90
   190a0:	b	18d40 <triple_free@@Base+0x4f14>
   190a4:	ldr	r7, [sp, #312]	; 0x138
   190a8:	mov	r0, r8
   190ac:	strb	r4, [sp, #308]	; 0x134
   190b0:	bl	112f0 <mbsinit@plt>
   190b4:	cmp	r0, #0
   190b8:	strbne	r5, [sp, #284]	; 0x11c
   190bc:	b	18b8c <triple_free@@Base+0x4d60>
   190c0:	ldr	r0, [sp, #132]	; 0x84
   190c4:	mov	r8, #0
   190c8:	bl	1144c <strlen@plt>
   190cc:	strb	r5, [sp, #140]	; 0x8c
   190d0:	str	r0, [sp, #136]	; 0x88
   190d4:	b	18d40 <triple_free@@Base+0x4f14>
   190d8:	str	r4, [sp, #304]	; 0x130
   190dc:	strb	r7, [sp, #308]	; 0x134
   190e0:	ldr	fp, [sp, #300]	; 0x12c
   190e4:	b	18d4c <triple_free@@Base+0x4f20>
   190e8:	ldr	fp, [sp, #300]	; 0x12c
   190ec:	mov	r0, fp
   190f0:	bl	1144c <strlen@plt>
   190f4:	strb	r7, [sp, #308]	; 0x134
   190f8:	str	r0, [sp, #304]	; 0x130
   190fc:	b	18d4c <triple_free@@Base+0x4f20>
   19100:	ldr	r0, [sp, #56]	; 0x38
   19104:	b	186c4 <triple_free@@Base+0x4898>
   19108:	ldr	r0, [pc, #84]	; 19164 <triple_free@@Base+0x5338>
   1910c:	mov	r2, #150	; 0x96
   19110:	ldr	r1, [pc, #80]	; 19168 <triple_free@@Base+0x533c>
   19114:	ldr	r3, [pc, #80]	; 1916c <triple_free@@Base+0x5340>
   19118:	add	r0, pc, r0
   1911c:	add	r1, pc, r1
   19120:	add	r3, pc, r3
   19124:	bl	1159c <__assert_fail@plt>
   19128:	bl	11314 <__stack_chk_fail@plt>
   1912c:	ldr	r0, [pc, #60]	; 19170 <triple_free@@Base+0x5344>
   19130:	mov	r2, #178	; 0xb2
   19134:	ldr	r1, [pc, #56]	; 19174 <triple_free@@Base+0x5348>
   19138:	ldr	r3, [pc, #56]	; 19178 <triple_free@@Base+0x534c>
   1913c:	add	r0, pc, r0
   19140:	add	r1, pc, r1
   19144:	add	r3, pc, r3
   19148:	bl	1159c <__assert_fail@plt>
   1914c:	andeq	r3, r1, r0, lsr #22
   19150:	andeq	r0, r0, r0, lsr r1
   19154:	andeq	r0, r0, ip, lsr #2
   19158:	andeq	r2, r0, r0, asr r3
   1915c:	andeq	r2, r0, r4, lsr #6
   19160:	andeq	r2, r0, r8, lsr #15
   19164:	andeq	r1, r0, r0, asr #28
   19168:	andeq	r1, r0, r4, asr lr
   1916c:	ldrdeq	r2, [r0], -r8
   19170:	andeq	r1, r0, r4, asr #28
   19174:	andeq	r1, r0, r0, lsr lr
   19178:			; <UNDEFINED> instruction: 0x000022b4
   1917c:	ldr	ip, [pc, #852]	; 194d8 <triple_free@@Base+0x56ac>
   19180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19184:	mov	r6, r2
   19188:	sub	sp, sp, #4160	; 0x1040
   1918c:	ldr	r2, [pc, #840]	; 194dc <triple_free@@Base+0x56b0>
   19190:	sub	sp, sp, #4
   19194:	add	ip, pc, ip
   19198:	mov	r5, #0
   1919c:	movw	fp, #61424	; 0xeff0
   191a0:	str	r0, [sp, #24]
   191a4:	mov	r0, r6
   191a8:	str	r1, [sp, #16]
   191ac:	mov	r1, r5
   191b0:	str	r3, [sp, #32]
   191b4:	mov	r3, r5
   191b8:	ldr	r2, [ip, r2]
   191bc:	add	ip, sp, #8192	; 0x2000
   191c0:	str	r5, [sp]
   191c4:	movt	fp, #65535	; 0xffff
   191c8:	ldr	ip, [ip, #-3992]	; 0xfffff068
   191cc:	str	r2, [sp, #20]
   191d0:	mov	r2, r5
   191d4:	ldr	lr, [sp, #20]
   191d8:	str	ip, [sp, #28]
   191dc:	ldr	ip, [lr]
   191e0:	add	lr, sp, #8192	; 0x2000
   191e4:	str	ip, [lr, #-4036]	; 0xfffff03c
   191e8:	bl	11290 <iconv@plt>
   191ec:	ldr	ip, [sp, #16]
   191f0:	add	lr, sp, #4160	; 0x1040
   191f4:	movw	r3, #61420	; 0xefec
   191f8:	cmp	ip, r5
   191fc:	ldr	ip, [sp, #24]
   19200:	movt	r3, #65535	; 0xffff
   19204:	str	ip, [lr, r3]
   19208:	ldr	ip, [sp, #16]
   1920c:	str	ip, [lr, fp]
   19210:	beq	194b4 <triple_free@@Base+0x5688>
   19214:	movw	r9, #61432	; 0xeff8
   19218:	movt	r9, #65535	; 0xffff
   1921c:	movw	sl, #61428	; 0xeff4
   19220:	movt	sl, #65535	; 0xffff
   19224:	mov	r3, r9
   19228:	add	ip, sp, #64	; 0x40
   1922c:	mov	r9, sl
   19230:	str	ip, [sp, #36]	; 0x24
   19234:	add	r4, sp, #60	; 0x3c
   19238:	add	ip, sp, #44	; 0x2c
   1923c:	add	r7, sp, #52	; 0x34
   19240:	str	ip, [sp, #8]
   19244:	add	r8, sp, #56	; 0x38
   19248:	add	ip, sp, #48	; 0x30
   1924c:	mov	sl, r3
   19250:	str	ip, [sp, #12]
   19254:	b	19274 <triple_free@@Base+0x5448>
   19258:	add	lr, sp, #4160	; 0x1040
   1925c:	ldr	r2, [lr, fp]
   19260:	ldr	r3, [lr, r9]
   19264:	cmp	r2, #0
   19268:	rsb	r3, r4, r3
   1926c:	add	r5, r5, r3
   19270:	beq	192bc <triple_free@@Base+0x5490>
   19274:	add	lr, sp, #4160	; 0x1040
   19278:	str	r8, [sp]
   1927c:	mov	ip, #4096	; 0x1000
   19280:	mov	r0, r6
   19284:	add	r1, sp, #44	; 0x2c
   19288:	add	r2, sp, #48	; 0x30
   1928c:	mov	r3, r7
   19290:	str	r4, [lr, r9]
   19294:	str	ip, [lr, sl]
   19298:	bl	11290 <iconv@plt>
   1929c:	cmn	r0, #1
   192a0:	bne	19258 <triple_free@@Base+0x542c>
   192a4:	bl	11470 <__errno_location@plt>
   192a8:	ldr	r3, [r0]
   192ac:	cmp	r3, #7
   192b0:	beq	19258 <triple_free@@Base+0x542c>
   192b4:	cmp	r3, #22
   192b8:	bne	194ac <triple_free@@Base+0x5680>
   192bc:	add	lr, sp, #4160	; 0x1040
   192c0:	movw	r9, #61428	; 0xeff4
   192c4:	movw	r3, #61432	; 0xeff8
   192c8:	movt	r9, #65535	; 0xffff
   192cc:	movt	r3, #65535	; 0xffff
   192d0:	mov	r1, #0
   192d4:	str	r8, [sp]
   192d8:	mov	ip, #4096	; 0x1000
   192dc:	mov	r2, r1
   192e0:	str	ip, [lr, r3]
   192e4:	mov	r0, r6
   192e8:	str	r4, [lr, r9]
   192ec:	mov	r3, r7
   192f0:	bl	11290 <iconv@plt>
   192f4:	cmn	r0, #1
   192f8:	beq	194ac <triple_free@@Base+0x5680>
   192fc:	add	r0, sp, #4160	; 0x1040
   19300:	ldr	r3, [r0, r9]
   19304:	rsb	r4, r4, r3
   19308:	adds	r5, r5, r4
   1930c:	beq	1945c <triple_free@@Base+0x5630>
   19310:	ldr	ip, [sp, #32]
   19314:	ldr	r4, [ip]
   19318:	cmp	r4, #0
   1931c:	beq	19438 <triple_free@@Base+0x560c>
   19320:	ldr	ip, [sp, #28]
   19324:	ldr	r3, [ip]
   19328:	cmp	r5, r3
   1932c:	bhi	19438 <triple_free@@Base+0x560c>
   19330:	mov	r3, #0
   19334:	mov	r0, r6
   19338:	mov	r1, r3
   1933c:	mov	r2, r3
   19340:	str	r3, [sp]
   19344:	movw	sl, #61424	; 0xeff0
   19348:	bl	11290 <iconv@plt>
   1934c:	ldr	ip, [sp, #24]
   19350:	add	lr, sp, #4160	; 0x1040
   19354:	movw	r3, #61420	; 0xefec
   19358:	movt	r3, #65535	; 0xffff
   1935c:	movt	sl, #65535	; 0xffff
   19360:	movw	r1, #61428	; 0xeff4
   19364:	movw	r2, #61432	; 0xeff8
   19368:	str	ip, [lr, r3]
   1936c:	movt	r1, #65535	; 0xffff
   19370:	ldr	ip, [sp, #16]
   19374:	movt	r2, #65535	; 0xffff
   19378:	str	r4, [lr, r1]
   1937c:	str	r5, [lr, r2]
   19380:	str	ip, [lr, sl]
   19384:	mov	r3, ip
   19388:	ldr	ip, [sp, #36]	; 0x24
   1938c:	sub	fp, ip, #20
   19390:	sub	r9, ip, #16
   19394:	b	193c0 <triple_free@@Base+0x5594>
   19398:	str	r8, [sp]
   1939c:	mov	r0, r6
   193a0:	mov	r1, fp
   193a4:	mov	r2, r9
   193a8:	mov	r3, r7
   193ac:	bl	11290 <iconv@plt>
   193b0:	cmn	r0, #1
   193b4:	beq	1946c <triple_free@@Base+0x5640>
   193b8:	add	lr, sp, #4160	; 0x1040
   193bc:	ldr	r3, [lr, sl]
   193c0:	cmp	r3, #0
   193c4:	bne	19398 <triple_free@@Base+0x556c>
   193c8:	mov	r1, #0
   193cc:	str	r8, [sp]
   193d0:	mov	r0, r6
   193d4:	mov	r3, r7
   193d8:	mov	r2, r1
   193dc:	bl	11290 <iconv@plt>
   193e0:	cmn	r0, #1
   193e4:	beq	1947c <triple_free@@Base+0x5650>
   193e8:	movw	r3, #61432	; 0xeff8
   193ec:	add	r0, sp, #4160	; 0x1040
   193f0:	movt	r3, #65535	; 0xffff
   193f4:	ldr	r3, [r0, r3]
   193f8:	cmp	r3, #0
   193fc:	bne	194d0 <triple_free@@Base+0x56a4>
   19400:	ldr	ip, [sp, #32]
   19404:	str	r4, [ip]
   19408:	ldr	ip, [sp, #28]
   1940c:	str	r5, [ip]
   19410:	ldr	ip, [sp, #20]
   19414:	add	r0, sp, #8192	; 0x2000
   19418:	ldr	r2, [r0, #-4036]	; 0xfffff03c
   1941c:	mov	r0, r3
   19420:	ldr	r3, [ip]
   19424:	cmp	r2, r3
   19428:	bne	194d4 <triple_free@@Base+0x56a8>
   1942c:	add	sp, sp, #4160	; 0x1040
   19430:	add	sp, sp, #4
   19434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19438:	mov	r0, r5
   1943c:	bl	113d4 <malloc@plt>
   19440:	subs	r4, r0, #0
   19444:	bne	19330 <triple_free@@Base+0x5504>
   19448:	bl	11470 <__errno_location@plt>
   1944c:	mov	r2, #12
   19450:	mvn	r3, #0
   19454:	str	r2, [r0]
   19458:	b	19410 <triple_free@@Base+0x55e4>
   1945c:	ldr	ip, [sp, #28]
   19460:	mov	r3, r5
   19464:	str	r5, [ip]
   19468:	b	19410 <triple_free@@Base+0x55e4>
   1946c:	bl	11470 <__errno_location@plt>
   19470:	ldr	r3, [r0]
   19474:	cmp	r3, #22
   19478:	beq	193c8 <triple_free@@Base+0x559c>
   1947c:	ldr	ip, [sp, #32]
   19480:	ldr	r3, [ip]
   19484:	cmp	r3, r4
   19488:	beq	194ac <triple_free@@Base+0x5680>
   1948c:	bl	11470 <__errno_location@plt>
   19490:	ldr	r6, [r0]
   19494:	mov	r5, r0
   19498:	mov	r0, r4
   1949c:	bl	112cc <free@plt>
   194a0:	mvn	r3, #0
   194a4:	str	r6, [r5]
   194a8:	b	19410 <triple_free@@Base+0x55e4>
   194ac:	mvn	r3, #0
   194b0:	b	19410 <triple_free@@Base+0x55e4>
   194b4:	add	ip, sp, #64	; 0x40
   194b8:	add	r4, sp, #60	; 0x3c
   194bc:	str	ip, [sp, #36]	; 0x24
   194c0:	add	r7, sp, #52	; 0x34
   194c4:	add	r8, sp, #56	; 0x38
   194c8:	ldr	r5, [sp, #16]
   194cc:	b	192bc <triple_free@@Base+0x5490>
   194d0:	bl	11578 <abort@plt>
   194d4:	bl	11314 <__stack_chk_fail@plt>
   194d8:	andeq	r2, r1, r4, ror #28
   194dc:	andeq	r0, r0, r0, lsr r1
   194e0:	ldr	r3, [pc, #524]	; 196f4 <triple_free@@Base+0x58c8>
   194e4:	ldr	r2, [pc, #524]	; 196f8 <triple_free@@Base+0x58cc>
   194e8:	add	r3, pc, r3
   194ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194f0:	sub	sp, sp, #52	; 0x34
   194f4:	ldr	r2, [r3, r2]
   194f8:	mov	r6, r1
   194fc:	str	r0, [sp, #28]
   19500:	ldr	r3, [r2]
   19504:	str	r2, [sp, #20]
   19508:	str	r3, [sp, #44]	; 0x2c
   1950c:	bl	1144c <strlen@plt>
   19510:	cmp	r0, #4096	; 0x1000
   19514:	mov	fp, r0
   19518:	lslcc	fp, r0, #4
   1951c:	str	r0, [sp, #32]
   19520:	add	r5, fp, #1
   19524:	mov	r0, r5
   19528:	bl	113d4 <malloc@plt>
   1952c:	subs	r4, r0, #0
   19530:	beq	196e0 <triple_free@@Base+0x58b4>
   19534:	mov	r3, #0
   19538:	add	r2, sp, #32
   1953c:	mov	r1, r3
   19540:	str	r2, [sp, #16]
   19544:	str	r3, [sp]
   19548:	mov	r2, r3
   1954c:	mov	r0, r6
   19550:	add	sl, sp, #28
   19554:	bl	11290 <iconv@plt>
   19558:	add	r8, sp, #36	; 0x24
   1955c:	add	r7, sp, #40	; 0x28
   19560:	str	r4, [sp, #36]	; 0x24
   19564:	str	fp, [sp, #40]	; 0x28
   19568:	b	195cc <triple_free@@Base+0x57a0>
   1956c:	bl	11470 <__errno_location@plt>
   19570:	ldr	r3, [r0]
   19574:	mov	fp, r0
   19578:	cmp	r3, #22
   1957c:	beq	19648 <triple_free@@Base+0x581c>
   19580:	cmp	r3, #7
   19584:	bne	196a8 <triple_free@@Base+0x587c>
   19588:	lsl	r9, r5, #1
   1958c:	ldr	r1, [sp, #36]	; 0x24
   19590:	cmp	r5, r9
   19594:	rsb	r5, r4, r1
   19598:	bcs	196a0 <triple_free@@Base+0x5874>
   1959c:	mov	r0, r4
   195a0:	mov	r1, r9
   195a4:	bl	11320 <realloc@plt>
   195a8:	cmp	r0, #0
   195ac:	beq	196a0 <triple_free@@Base+0x5874>
   195b0:	sub	r1, r9, #1
   195b4:	add	r2, r0, r5
   195b8:	mov	r4, r0
   195bc:	rsb	r5, r5, r1
   195c0:	str	r5, [sp, #40]	; 0x28
   195c4:	mov	r5, r9
   195c8:	str	r2, [sp, #36]	; 0x24
   195cc:	str	r7, [sp]
   195d0:	mov	r0, r6
   195d4:	mov	r1, sl
   195d8:	add	r2, sp, #32
   195dc:	mov	r3, r8
   195e0:	bl	11290 <iconv@plt>
   195e4:	cmn	r0, #1
   195e8:	beq	1956c <triple_free@@Base+0x5740>
   195ec:	b	19648 <triple_free@@Base+0x581c>
   195f0:	bl	11470 <__errno_location@plt>
   195f4:	ldr	r3, [r0]
   195f8:	mov	fp, r0
   195fc:	cmp	r3, #7
   19600:	bne	196a8 <triple_free@@Base+0x587c>
   19604:	lsl	r9, r5, #1
   19608:	ldr	r3, [sp, #36]	; 0x24
   1960c:	cmp	r5, r9
   19610:	rsb	r5, r4, r3
   19614:	bcs	196a0 <triple_free@@Base+0x5874>
   19618:	mov	r0, r4
   1961c:	mov	r1, r9
   19620:	bl	11320 <realloc@plt>
   19624:	cmp	r0, #0
   19628:	beq	196a0 <triple_free@@Base+0x5874>
   1962c:	sub	r2, r9, #1
   19630:	add	r3, r0, r5
   19634:	mov	r4, r0
   19638:	rsb	r5, r5, r2
   1963c:	str	r5, [sp, #40]	; 0x28
   19640:	mov	r5, r9
   19644:	str	r3, [sp, #36]	; 0x24
   19648:	mov	r1, #0
   1964c:	str	r7, [sp]
   19650:	mov	r2, r1
   19654:	mov	r0, r6
   19658:	mov	r3, r8
   1965c:	bl	11290 <iconv@plt>
   19660:	cmn	r0, #1
   19664:	beq	195f0 <triple_free@@Base+0x57c4>
   19668:	ldr	r3, [sp, #36]	; 0x24
   1966c:	mov	r2, #0
   19670:	add	r1, r3, #1
   19674:	str	r1, [sp, #36]	; 0x24
   19678:	strb	r2, [r3]
   1967c:	ldr	r1, [sp, #36]	; 0x24
   19680:	rsb	r1, r4, r1
   19684:	cmp	r1, r5
   19688:	bcs	196c0 <triple_free@@Base+0x5894>
   1968c:	mov	r0, r4
   19690:	bl	11320 <realloc@plt>
   19694:	cmp	r0, #0
   19698:	movne	r4, r0
   1969c:	b	196c0 <triple_free@@Base+0x5894>
   196a0:	mov	r3, #12
   196a4:	str	r3, [fp]
   196a8:	mov	r0, r4
   196ac:	str	r3, [sp, #12]
   196b0:	bl	112cc <free@plt>
   196b4:	ldr	r3, [sp, #12]
   196b8:	mov	r4, #0
   196bc:	str	r3, [fp]
   196c0:	ldr	r1, [sp, #20]
   196c4:	mov	r0, r4
   196c8:	ldr	r2, [sp, #44]	; 0x2c
   196cc:	ldr	r3, [r1]
   196d0:	cmp	r2, r3
   196d4:	bne	196f0 <triple_free@@Base+0x58c4>
   196d8:	add	sp, sp, #52	; 0x34
   196dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196e0:	bl	11470 <__errno_location@plt>
   196e4:	mov	r3, #12
   196e8:	str	r3, [r0]
   196ec:	b	196c0 <triple_free@@Base+0x5894>
   196f0:	bl	11314 <__stack_chk_fail@plt>
   196f4:	andeq	r2, r1, r0, lsl fp
   196f8:	andeq	r0, r0, r0, lsr r1
   196fc:	push	{r3, r4, r5, r6, r7, lr}
   19700:	mov	r4, r0
   19704:	ldrb	r3, [r0]
   19708:	mov	r5, r1
   1970c:	mov	r6, r2
   19710:	cmp	r3, #0
   19714:	beq	1972c <triple_free@@Base+0x5900>
   19718:	mov	r0, r1
   1971c:	mov	r1, r2
   19720:	bl	17354 <triple_free@@Base+0x3528>
   19724:	cmp	r0, #0
   19728:	bne	19748 <triple_free@@Base+0x591c>
   1972c:	mov	r0, r4
   19730:	bl	114a0 <__strdup@plt>
   19734:	subs	r4, r0, #0
   19738:	beq	197a4 <triple_free@@Base+0x5978>
   1973c:	mov	r3, r4
   19740:	mov	r0, r3
   19744:	pop	{r3, r4, r5, r6, r7, pc}
   19748:	mov	r1, r5
   1974c:	mov	r0, r6
   19750:	bl	113e0 <iconv_open@plt>
   19754:	cmn	r0, #1
   19758:	mov	r5, r0
   1975c:	beq	197bc <triple_free@@Base+0x5990>
   19760:	mov	r0, r4
   19764:	mov	r1, r5
   19768:	bl	194e0 <triple_free@@Base+0x56b4>
   1976c:	subs	r4, r0, #0
   19770:	beq	197c4 <triple_free@@Base+0x5998>
   19774:	mov	r0, r5
   19778:	bl	11284 <iconv_close@plt>
   1977c:	cmp	r0, #0
   19780:	bge	1973c <triple_free@@Base+0x5910>
   19784:	bl	11470 <__errno_location@plt>
   19788:	ldr	r6, [r0]
   1978c:	mov	r5, r0
   19790:	mov	r0, r4
   19794:	bl	112cc <free@plt>
   19798:	mov	r3, #0
   1979c:	str	r6, [r5]
   197a0:	b	19740 <triple_free@@Base+0x5914>
   197a4:	bl	11470 <__errno_location@plt>
   197a8:	mov	r3, r4
   197ac:	mov	r2, #12
   197b0:	str	r2, [r0]
   197b4:	mov	r0, r3
   197b8:	pop	{r3, r4, r5, r6, r7, pc}
   197bc:	mov	r3, #0
   197c0:	b	19740 <triple_free@@Base+0x5914>
   197c4:	bl	11470 <__errno_location@plt>
   197c8:	ldr	r7, [r0]
   197cc:	mov	r6, r0
   197d0:	mov	r0, r5
   197d4:	bl	11284 <iconv_close@plt>
   197d8:	mov	r3, r4
   197dc:	str	r7, [r6]
   197e0:	b	19740 <triple_free@@Base+0x5914>
   197e4:	push	{r4, r5, r6, lr}
   197e8:	sub	sp, sp, #8
   197ec:	mov	r4, r0
   197f0:	bl	114d0 <fileno@plt>
   197f4:	cmp	r0, #0
   197f8:	mov	r0, r4
   197fc:	blt	19878 <triple_free@@Base+0x5a4c>
   19800:	bl	113f8 <__freading@plt>
   19804:	cmp	r0, #0
   19808:	bne	19844 <triple_free@@Base+0x5a18>
   1980c:	mov	r0, r4
   19810:	bl	19884 <triple_free@@Base+0x5a58>
   19814:	cmp	r0, #0
   19818:	beq	19874 <triple_free@@Base+0x5a48>
   1981c:	bl	11470 <__errno_location@plt>
   19820:	ldr	r6, [r0]
   19824:	mov	r5, r0
   19828:	mov	r0, r4
   1982c:	bl	114f4 <fclose@plt>
   19830:	cmp	r6, #0
   19834:	mvnne	r0, #0
   19838:	strne	r6, [r5]
   1983c:	add	sp, sp, #8
   19840:	pop	{r4, r5, r6, pc}
   19844:	mov	r0, r4
   19848:	bl	114d0 <fileno@plt>
   1984c:	mov	r1, #1
   19850:	mov	r2, #0
   19854:	mov	r3, #0
   19858:	str	r1, [sp]
   1985c:	bl	11374 <lseek64@plt>
   19860:	mvn	r2, #0
   19864:	mvn	r3, #0
   19868:	cmp	r1, r3
   1986c:	cmpeq	r0, r2
   19870:	bne	1980c <triple_free@@Base+0x59e0>
   19874:	mov	r0, r4
   19878:	add	sp, sp, #8
   1987c:	pop	{r4, r5, r6, lr}
   19880:	b	114f4 <fclose@plt>
   19884:	push	{r4, lr}
   19888:	subs	r4, r0, #0
   1988c:	sub	sp, sp, #8
   19890:	beq	198a0 <triple_free@@Base+0x5a74>
   19894:	bl	113f8 <__freading@plt>
   19898:	cmp	r0, #0
   1989c:	bne	198b0 <triple_free@@Base+0x5a84>
   198a0:	mov	r0, r4
   198a4:	add	sp, sp, #8
   198a8:	pop	{r4, lr}
   198ac:	b	112a8 <fflush@plt>
   198b0:	ldr	r3, [r4]
   198b4:	tst	r3, #256	; 0x100
   198b8:	beq	198a0 <triple_free@@Base+0x5a74>
   198bc:	mov	r3, #1
   198c0:	mov	r0, r4
   198c4:	str	r3, [sp]
   198c8:	mov	r2, #0
   198cc:	mov	r3, #0
   198d0:	bl	198e4 <triple_free@@Base+0x5ab8>
   198d4:	mov	r0, r4
   198d8:	add	sp, sp, #8
   198dc:	pop	{r4, lr}
   198e0:	b	112a8 <fflush@plt>
   198e4:	push	{r4, r5, r6, r7, lr}
   198e8:	sub	sp, sp, #20
   198ec:	ldmib	r0, {r1, ip}
   198f0:	mov	r6, r0
   198f4:	ldr	r4, [sp, #40]	; 0x28
   198f8:	cmp	ip, r1
   198fc:	beq	19914 <triple_free@@Base+0x5ae8>
   19900:	str	r4, [sp, #40]	; 0x28
   19904:	mov	r0, r6
   19908:	add	sp, sp, #20
   1990c:	pop	{r4, r5, r6, r7, lr}
   19910:	b	1150c <fseeko64@plt>
   19914:	ldr	ip, [r0, #20]
   19918:	ldr	r1, [r0, #16]
   1991c:	cmp	ip, r1
   19920:	bne	19900 <triple_free@@Base+0x5ad4>
   19924:	ldr	r7, [r0, #36]	; 0x24
   19928:	cmp	r7, #0
   1992c:	bne	19900 <triple_free@@Base+0x5ad4>
   19930:	str	r2, [sp, #12]
   19934:	mvn	r5, #0
   19938:	str	r3, [sp, #8]
   1993c:	bl	114d0 <fileno@plt>
   19940:	str	r4, [sp]
   19944:	mvn	r4, #0
   19948:	ldr	r2, [sp, #12]
   1994c:	ldr	r3, [sp, #8]
   19950:	bl	11374 <lseek64@plt>
   19954:	mov	r2, r0
   19958:	mov	r3, r1
   1995c:	cmp	r3, r5
   19960:	cmpeq	r2, r4
   19964:	beq	19984 <triple_free@@Base+0x5b58>
   19968:	ldr	r1, [r6]
   1996c:	mov	r0, r7
   19970:	strd	r2, [r6, #80]	; 0x50
   19974:	bic	r3, r1, #16
   19978:	str	r3, [r6]
   1997c:	add	sp, sp, #20
   19980:	pop	{r4, r5, r6, r7, pc}
   19984:	mvn	r0, #0
   19988:	b	1997c <triple_free@@Base+0x5b50>
   1998c:	adds	r0, r0, #8
   19990:	push	{r3, r4, r5, lr}
   19994:	bcs	199e8 <triple_free@@Base+0x5bbc>
   19998:	bl	113d4 <malloc@plt>
   1999c:	subs	r1, r0, #0
   199a0:	beq	199e8 <triple_free@@Base+0x5bbc>
   199a4:	add	r2, r1, #8
   199a8:	movw	r3, #65281	; 0xff01
   199ac:	movt	r3, #65280	; 0xff00
   199b0:	ldr	ip, [pc, #56]	; 199f0 <triple_free@@Base+0x5bc4>
   199b4:	movw	r4, #64330	; 0xfb4a
   199b8:	movt	r4, #5141	; 0x1415
   199bc:	umull	r5, r3, r3, r2
   199c0:	add	ip, pc, ip
   199c4:	str	r4, [r1, #4]
   199c8:	mov	r0, r2
   199cc:	lsr	r3, r3, #8
   199d0:	add	r3, r3, r3, lsl #8
   199d4:	rsb	r3, r3, r2
   199d8:	ldr	r4, [ip, r3, lsl #2]
   199dc:	str	r2, [ip, r3, lsl #2]
   199e0:	str	r4, [r1]
   199e4:	pop	{r3, r4, r5, pc}
   199e8:	mov	r0, #0
   199ec:	pop	{r3, r4, r5, pc}
   199f0:	andeq	r2, r1, ip, asr #18
   199f4:	cmp	r0, #0
   199f8:	bxeq	lr
   199fc:	ldr	r2, [r0, #-4]
   19a00:	movw	r3, #64330	; 0xfb4a
   19a04:	movt	r3, #5141	; 0x1415
   19a08:	cmp	r2, r3
   19a0c:	bxne	lr
   19a10:	movw	r3, #65281	; 0xff01
   19a14:	movt	r3, #65280	; 0xff00
   19a18:	ldr	r1, [pc, #88]	; 19a78 <triple_free@@Base+0x5c4c>
   19a1c:	umull	r2, r3, r3, r0
   19a20:	add	r1, pc, r1
   19a24:	lsr	r3, r3, #8
   19a28:	add	r3, r3, r3, lsl #8
   19a2c:	rsb	r3, r3, r0
   19a30:	ldr	r2, [r1, r3, lsl #2]
   19a34:	cmp	r2, #0
   19a38:	bxeq	lr
   19a3c:	cmp	r0, r2
   19a40:	addeq	r2, r1, r3, lsl #2
   19a44:	bne	19a58 <triple_free@@Base+0x5c2c>
   19a48:	b	19a6c <triple_free@@Base+0x5c40>
   19a4c:	cmp	r0, r3
   19a50:	beq	19a68 <triple_free@@Base+0x5c3c>
   19a54:	mov	r2, r3
   19a58:	ldr	r3, [r2, #-8]
   19a5c:	cmp	r3, #0
   19a60:	bne	19a4c <triple_free@@Base+0x5c20>
   19a64:	bx	lr
   19a68:	sub	r2, r2, #8
   19a6c:	ldr	ip, [r0, #-8]!
   19a70:	str	ip, [r2]
   19a74:	b	112cc <free@plt>
   19a78:	andeq	r2, r1, ip, ror #17
   19a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a80:	sub	sp, sp, #76	; 0x4c
   19a84:	ldr	r8, [pc, #524]	; 19c98 <triple_free@@Base+0x5e6c>
   19a88:	mov	sl, r0
   19a8c:	ldr	r3, [pc, #520]	; 19c9c <triple_free@@Base+0x5e70>
   19a90:	add	r8, pc, r8
   19a94:	ldr	r3, [r8, r3]
   19a98:	str	r3, [sp, #4]
   19a9c:	ldr	r3, [r3]
   19aa0:	str	r3, [sp, #68]	; 0x44
   19aa4:	bl	11380 <__ctype_get_mb_cur_max@plt>
   19aa8:	cmp	r0, #1
   19aac:	bls	19c48 <triple_free@@Base+0x5e1c>
   19ab0:	mov	r3, #0
   19ab4:	add	r7, sp, #16
   19ab8:	add	r9, sp, #40	; 0x28
   19abc:	mov	fp, r3
   19ac0:	mov	r4, sl
   19ac4:	mov	r6, r3
   19ac8:	mov	r5, #1
   19acc:	str	r3, [sp, #16]
   19ad0:	strb	r3, [sp, #24]
   19ad4:	str	sl, [sp, #28]
   19ad8:	strb	r3, [sp, #12]
   19adc:	str	r3, [r7, #4]
   19ae0:	ldrb	r2, [sp, #12]
   19ae4:	cmp	r2, #0
   19ae8:	bne	19b60 <triple_free@@Base+0x5d34>
   19aec:	ldr	r2, [pc, #428]	; 19ca0 <triple_free@@Base+0x5e74>
   19af0:	ldrb	r3, [r4]
   19af4:	ldr	r1, [r8, r2]
   19af8:	and	r2, r3, #31
   19afc:	lsr	r3, r3, #5
   19b00:	ldr	r3, [r1, r3, lsl #2]
   19b04:	lsr	r3, r3, r2
   19b08:	tst	r3, #1
   19b0c:	beq	19b4c <triple_free@@Base+0x5d20>
   19b10:	str	r5, [sp, #32]
   19b14:	ldrb	r4, [r4]
   19b18:	strb	r5, [sp, #36]	; 0x24
   19b1c:	cmp	r4, #0
   19b20:	strb	r5, [sp, #24]
   19b24:	str	r4, [sp, #40]	; 0x28
   19b28:	bne	19bc4 <triple_free@@Base+0x5d98>
   19b2c:	mov	r0, fp
   19b30:	ldr	r1, [sp, #4]
   19b34:	ldr	r2, [sp, #68]	; 0x44
   19b38:	ldr	r3, [r1]
   19b3c:	cmp	r2, r3
   19b40:	bne	19c74 <triple_free@@Base+0x5e48>
   19b44:	add	sp, sp, #76	; 0x4c
   19b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b4c:	mov	r0, r7
   19b50:	bl	112f0 <mbsinit@plt>
   19b54:	cmp	r0, #0
   19b58:	beq	19c54 <triple_free@@Base+0x5e28>
   19b5c:	strb	r5, [sp, #12]
   19b60:	bl	11380 <__ctype_get_mb_cur_max@plt>
   19b64:	mov	r1, r0
   19b68:	mov	r0, r4
   19b6c:	bl	163dc <triple_free@@Base+0x25b0>
   19b70:	mov	r1, r4
   19b74:	mov	r3, r7
   19b78:	mov	r2, r0
   19b7c:	mov	r0, r9
   19b80:	bl	113a4 <mbrtowc@plt>
   19b84:	cmn	r0, #1
   19b88:	str	r0, [sp, #32]
   19b8c:	beq	19be0 <triple_free@@Base+0x5db4>
   19b90:	cmn	r0, #2
   19b94:	beq	19c30 <triple_free@@Base+0x5e04>
   19b98:	cmp	r0, #0
   19b9c:	beq	19bf0 <triple_free@@Base+0x5dc4>
   19ba0:	ldr	r4, [sp, #40]	; 0x28
   19ba4:	mov	r0, r7
   19ba8:	strb	r5, [sp, #36]	; 0x24
   19bac:	bl	112f0 <mbsinit@plt>
   19bb0:	strb	r5, [sp, #24]
   19bb4:	cmp	r0, #0
   19bb8:	strbne	r6, [sp, #12]
   19bbc:	cmp	r4, #0
   19bc0:	beq	19b2c <triple_free@@Base+0x5d00>
   19bc4:	ldr	r4, [sp, #28]
   19bc8:	ldr	r3, [sp, #32]
   19bcc:	add	fp, fp, #1
   19bd0:	strb	r6, [sp, #24]
   19bd4:	add	r4, r4, r3
   19bd8:	str	r4, [sp, #28]
   19bdc:	b	19ae0 <triple_free@@Base+0x5cb4>
   19be0:	str	r5, [sp, #32]
   19be4:	strb	r6, [sp, #36]	; 0x24
   19be8:	ldr	r4, [sp, #28]
   19bec:	b	19bc8 <triple_free@@Base+0x5d9c>
   19bf0:	ldr	r4, [sp, #28]
   19bf4:	str	r5, [sp, #32]
   19bf8:	ldrb	r3, [r4]
   19bfc:	cmp	r3, #0
   19c00:	bne	19c78 <triple_free@@Base+0x5e4c>
   19c04:	ldr	r4, [sp, #40]	; 0x28
   19c08:	cmp	r4, #0
   19c0c:	beq	19ba4 <triple_free@@Base+0x5d78>
   19c10:	ldr	r0, [pc, #140]	; 19ca4 <triple_free@@Base+0x5e78>
   19c14:	mov	r2, #179	; 0xb3
   19c18:	ldr	r1, [pc, #136]	; 19ca8 <triple_free@@Base+0x5e7c>
   19c1c:	ldr	r3, [pc, #136]	; 19cac <triple_free@@Base+0x5e80>
   19c20:	add	r0, pc, r0
   19c24:	add	r1, pc, r1
   19c28:	add	r3, pc, r3
   19c2c:	bl	1159c <__assert_fail@plt>
   19c30:	ldr	r4, [sp, #28]
   19c34:	mov	r0, r4
   19c38:	bl	1144c <strlen@plt>
   19c3c:	strb	r6, [sp, #36]	; 0x24
   19c40:	str	r0, [sp, #32]
   19c44:	b	19bc8 <triple_free@@Base+0x5d9c>
   19c48:	mov	r0, sl
   19c4c:	bl	1144c <strlen@plt>
   19c50:	b	19b30 <triple_free@@Base+0x5d04>
   19c54:	ldr	r0, [pc, #84]	; 19cb0 <triple_free@@Base+0x5e84>
   19c58:	mov	r2, #150	; 0x96
   19c5c:	ldr	r1, [pc, #80]	; 19cb4 <triple_free@@Base+0x5e88>
   19c60:	ldr	r3, [pc, #80]	; 19cb8 <triple_free@@Base+0x5e8c>
   19c64:	add	r0, pc, r0
   19c68:	add	r1, pc, r1
   19c6c:	add	r3, pc, r3
   19c70:	bl	1159c <__assert_fail@plt>
   19c74:	bl	11314 <__stack_chk_fail@plt>
   19c78:	ldr	r0, [pc, #60]	; 19cbc <triple_free@@Base+0x5e90>
   19c7c:	mov	r2, #178	; 0xb2
   19c80:	ldr	r1, [pc, #56]	; 19cc0 <triple_free@@Base+0x5e94>
   19c84:	ldr	r3, [pc, #56]	; 19cc4 <triple_free@@Base+0x5e98>
   19c88:	add	r0, pc, r0
   19c8c:	add	r1, pc, r1
   19c90:	add	r3, pc, r3
   19c94:	bl	1159c <__assert_fail@plt>
   19c98:	andeq	r2, r1, r8, ror #10
   19c9c:	andeq	r0, r0, r0, lsr r1
   19ca0:	andeq	r0, r0, ip, lsr #2
   19ca4:	andeq	r1, r0, r8, ror r3
   19ca8:	andeq	r1, r0, ip, asr #6
   19cac:	andeq	r1, r0, r4, ror #15
   19cb0:	strdeq	r1, [r0], -r4
   19cb4:	andeq	r1, r0, r8, lsl #6
   19cb8:	andeq	r1, r0, r0, lsr #15
   19cbc:	strdeq	r1, [r0], -r8
   19cc0:	andeq	r1, r0, r4, ror #5
   19cc4:	andeq	r1, r0, ip, ror r7
   19cc8:	subs	r2, r1, #1
   19ccc:	bxeq	lr
   19cd0:	bcc	19ea8 <triple_free@@Base+0x607c>
   19cd4:	cmp	r0, r1
   19cd8:	bls	19e8c <triple_free@@Base+0x6060>
   19cdc:	tst	r1, r2
   19ce0:	beq	19e98 <triple_free@@Base+0x606c>
   19ce4:	clz	r3, r0
   19ce8:	clz	r2, r1
   19cec:	sub	r3, r2, r3
   19cf0:	rsbs	r3, r3, #31
   19cf4:	addne	r3, r3, r3, lsl #1
   19cf8:	mov	r2, #0
   19cfc:	addne	pc, pc, r3, lsl #2
   19d00:	nop	{0}
   19d04:	cmp	r0, r1, lsl #31
   19d08:	adc	r2, r2, r2
   19d0c:	subcs	r0, r0, r1, lsl #31
   19d10:	cmp	r0, r1, lsl #30
   19d14:	adc	r2, r2, r2
   19d18:	subcs	r0, r0, r1, lsl #30
   19d1c:	cmp	r0, r1, lsl #29
   19d20:	adc	r2, r2, r2
   19d24:	subcs	r0, r0, r1, lsl #29
   19d28:	cmp	r0, r1, lsl #28
   19d2c:	adc	r2, r2, r2
   19d30:	subcs	r0, r0, r1, lsl #28
   19d34:	cmp	r0, r1, lsl #27
   19d38:	adc	r2, r2, r2
   19d3c:	subcs	r0, r0, r1, lsl #27
   19d40:	cmp	r0, r1, lsl #26
   19d44:	adc	r2, r2, r2
   19d48:	subcs	r0, r0, r1, lsl #26
   19d4c:	cmp	r0, r1, lsl #25
   19d50:	adc	r2, r2, r2
   19d54:	subcs	r0, r0, r1, lsl #25
   19d58:	cmp	r0, r1, lsl #24
   19d5c:	adc	r2, r2, r2
   19d60:	subcs	r0, r0, r1, lsl #24
   19d64:	cmp	r0, r1, lsl #23
   19d68:	adc	r2, r2, r2
   19d6c:	subcs	r0, r0, r1, lsl #23
   19d70:	cmp	r0, r1, lsl #22
   19d74:	adc	r2, r2, r2
   19d78:	subcs	r0, r0, r1, lsl #22
   19d7c:	cmp	r0, r1, lsl #21
   19d80:	adc	r2, r2, r2
   19d84:	subcs	r0, r0, r1, lsl #21
   19d88:	cmp	r0, r1, lsl #20
   19d8c:	adc	r2, r2, r2
   19d90:	subcs	r0, r0, r1, lsl #20
   19d94:	cmp	r0, r1, lsl #19
   19d98:	adc	r2, r2, r2
   19d9c:	subcs	r0, r0, r1, lsl #19
   19da0:	cmp	r0, r1, lsl #18
   19da4:	adc	r2, r2, r2
   19da8:	subcs	r0, r0, r1, lsl #18
   19dac:	cmp	r0, r1, lsl #17
   19db0:	adc	r2, r2, r2
   19db4:	subcs	r0, r0, r1, lsl #17
   19db8:	cmp	r0, r1, lsl #16
   19dbc:	adc	r2, r2, r2
   19dc0:	subcs	r0, r0, r1, lsl #16
   19dc4:	cmp	r0, r1, lsl #15
   19dc8:	adc	r2, r2, r2
   19dcc:	subcs	r0, r0, r1, lsl #15
   19dd0:	cmp	r0, r1, lsl #14
   19dd4:	adc	r2, r2, r2
   19dd8:	subcs	r0, r0, r1, lsl #14
   19ddc:	cmp	r0, r1, lsl #13
   19de0:	adc	r2, r2, r2
   19de4:	subcs	r0, r0, r1, lsl #13
   19de8:	cmp	r0, r1, lsl #12
   19dec:	adc	r2, r2, r2
   19df0:	subcs	r0, r0, r1, lsl #12
   19df4:	cmp	r0, r1, lsl #11
   19df8:	adc	r2, r2, r2
   19dfc:	subcs	r0, r0, r1, lsl #11
   19e00:	cmp	r0, r1, lsl #10
   19e04:	adc	r2, r2, r2
   19e08:	subcs	r0, r0, r1, lsl #10
   19e0c:	cmp	r0, r1, lsl #9
   19e10:	adc	r2, r2, r2
   19e14:	subcs	r0, r0, r1, lsl #9
   19e18:	cmp	r0, r1, lsl #8
   19e1c:	adc	r2, r2, r2
   19e20:	subcs	r0, r0, r1, lsl #8
   19e24:	cmp	r0, r1, lsl #7
   19e28:	adc	r2, r2, r2
   19e2c:	subcs	r0, r0, r1, lsl #7
   19e30:	cmp	r0, r1, lsl #6
   19e34:	adc	r2, r2, r2
   19e38:	subcs	r0, r0, r1, lsl #6
   19e3c:	cmp	r0, r1, lsl #5
   19e40:	adc	r2, r2, r2
   19e44:	subcs	r0, r0, r1, lsl #5
   19e48:	cmp	r0, r1, lsl #4
   19e4c:	adc	r2, r2, r2
   19e50:	subcs	r0, r0, r1, lsl #4
   19e54:	cmp	r0, r1, lsl #3
   19e58:	adc	r2, r2, r2
   19e5c:	subcs	r0, r0, r1, lsl #3
   19e60:	cmp	r0, r1, lsl #2
   19e64:	adc	r2, r2, r2
   19e68:	subcs	r0, r0, r1, lsl #2
   19e6c:	cmp	r0, r1, lsl #1
   19e70:	adc	r2, r2, r2
   19e74:	subcs	r0, r0, r1, lsl #1
   19e78:	cmp	r0, r1
   19e7c:	adc	r2, r2, r2
   19e80:	subcs	r0, r0, r1
   19e84:	mov	r0, r2
   19e88:	bx	lr
   19e8c:	moveq	r0, #1
   19e90:	movne	r0, #0
   19e94:	bx	lr
   19e98:	clz	r2, r1
   19e9c:	rsb	r2, r2, #31
   19ea0:	lsr	r0, r0, r2
   19ea4:	bx	lr
   19ea8:	cmp	r0, #0
   19eac:	mvnne	r0, #0
   19eb0:	b	19f10 <triple_free@@Base+0x60e4>
   19eb4:	cmp	r1, #0
   19eb8:	beq	19ea8 <triple_free@@Base+0x607c>
   19ebc:	push	{r0, r1, lr}
   19ec0:	bl	19cc8 <triple_free@@Base+0x5e9c>
   19ec4:	pop	{r1, r2, lr}
   19ec8:	mul	r3, r2, r0
   19ecc:	sub	r1, r1, r3
   19ed0:	bx	lr
   19ed4:	cmp	r3, #0
   19ed8:	cmpeq	r2, #0
   19edc:	bne	19ef4 <triple_free@@Base+0x60c8>
   19ee0:	cmp	r1, #0
   19ee4:	cmpeq	r0, #0
   19ee8:	mvnne	r1, #0
   19eec:	mvnne	r0, #0
   19ef0:	b	19f10 <triple_free@@Base+0x60e4>
   19ef4:	sub	sp, sp, #8
   19ef8:	push	{sp, lr}
   19efc:	bl	19f5c <triple_free@@Base+0x6130>
   19f00:	ldr	lr, [sp, #4]
   19f04:	add	sp, sp, #8
   19f08:	pop	{r2, r3}
   19f0c:	bx	lr
   19f10:	push	{r1, lr}
   19f14:	mov	r0, #8
   19f18:	bl	11278 <raise@plt>
   19f1c:	pop	{r1, pc}
   19f20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19f24:	mov	r8, r2
   19f28:	mov	r6, r0
   19f2c:	mov	r7, r1
   19f30:	mov	sl, r3
   19f34:	ldr	r9, [sp, #32]
   19f38:	bl	19f98 <triple_free@@Base+0x616c>
   19f3c:	umull	r4, r5, r8, r0
   19f40:	mul	r8, r8, r1
   19f44:	mla	r2, r0, sl, r8
   19f48:	add	r5, r2, r5
   19f4c:	subs	r4, r6, r4
   19f50:	sbc	r5, r7, r5
   19f54:	strd	r4, [r9]
   19f58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19f5c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19f60:	mov	r8, r2
   19f64:	mov	r6, r0
   19f68:	mov	r7, r1
   19f6c:	mov	r5, r3
   19f70:	ldr	r9, [sp, #32]
   19f74:	bl	1a424 <triple_free@@Base+0x65f8>
   19f78:	mul	r3, r0, r5
   19f7c:	umull	r4, r5, r0, r8
   19f80:	mla	r8, r8, r1, r3
   19f84:	add	r5, r8, r5
   19f88:	subs	r4, r6, r4
   19f8c:	sbc	r5, r7, r5
   19f90:	strd	r4, [r9]
   19f94:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f9c:	rsbs	r4, r0, #0
   19fa0:	rsc	r5, r1, #0
   19fa4:	cmp	r1, #0
   19fa8:	mvn	r6, #0
   19fac:	sub	sp, sp, #12
   19fb0:	movge	r4, r0
   19fb4:	movge	r5, r1
   19fb8:	movge	r6, #0
   19fbc:	cmp	r3, #0
   19fc0:	blt	1a1f8 <triple_free@@Base+0x63cc>
   19fc4:	cmp	r3, #0
   19fc8:	mov	sl, r4
   19fcc:	mov	ip, r5
   19fd0:	mov	r0, r2
   19fd4:	mov	r1, r3
   19fd8:	mov	r8, r2
   19fdc:	mov	r7, r4
   19fe0:	mov	r9, r5
   19fe4:	bne	1a0dc <triple_free@@Base+0x62b0>
   19fe8:	cmp	r2, r5
   19fec:	bls	1a118 <triple_free@@Base+0x62ec>
   19ff0:	clz	r3, r2
   19ff4:	cmp	r3, #0
   19ff8:	rsbne	r2, r3, #32
   19ffc:	lslne	r8, r0, r3
   1a000:	lsrne	r2, r4, r2
   1a004:	lslne	r7, r4, r3
   1a008:	orrne	r9, r2, r5, lsl r3
   1a00c:	lsr	r4, r8, #16
   1a010:	uxth	sl, r8
   1a014:	mov	r1, r4
   1a018:	mov	r0, r9
   1a01c:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a020:	mov	r1, r4
   1a024:	mov	fp, r0
   1a028:	mov	r0, r9
   1a02c:	bl	19eb4 <triple_free@@Base+0x6088>
   1a030:	mul	r0, sl, fp
   1a034:	lsr	r2, r7, #16
   1a038:	orr	r1, r2, r1, lsl #16
   1a03c:	cmp	r0, r1
   1a040:	bls	1a064 <triple_free@@Base+0x6238>
   1a044:	adds	r1, r1, r8
   1a048:	sub	r3, fp, #1
   1a04c:	bcs	1a060 <triple_free@@Base+0x6234>
   1a050:	cmp	r0, r1
   1a054:	subhi	fp, fp, #2
   1a058:	addhi	r1, r1, r8
   1a05c:	bhi	1a064 <triple_free@@Base+0x6238>
   1a060:	mov	fp, r3
   1a064:	rsb	r9, r0, r1
   1a068:	mov	r1, r4
   1a06c:	uxth	r7, r7
   1a070:	mov	r0, r9
   1a074:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a078:	mov	r1, r4
   1a07c:	mov	r5, r0
   1a080:	mov	r0, r9
   1a084:	bl	19eb4 <triple_free@@Base+0x6088>
   1a088:	mul	sl, sl, r5
   1a08c:	orr	r1, r7, r1, lsl #16
   1a090:	cmp	sl, r1
   1a094:	bls	1a0b4 <triple_free@@Base+0x6288>
   1a098:	adds	r8, r1, r8
   1a09c:	sub	r3, r5, #1
   1a0a0:	bcs	1a0b0 <triple_free@@Base+0x6284>
   1a0a4:	cmp	sl, r8
   1a0a8:	subhi	r5, r5, #2
   1a0ac:	bhi	1a0b4 <triple_free@@Base+0x6288>
   1a0b0:	mov	r5, r3
   1a0b4:	orr	r3, r5, fp, lsl #16
   1a0b8:	mov	r4, #0
   1a0bc:	cmp	r6, #0
   1a0c0:	mov	r0, r3
   1a0c4:	mov	r1, r4
   1a0c8:	beq	1a0d4 <triple_free@@Base+0x62a8>
   1a0cc:	rsbs	r0, r0, #0
   1a0d0:	rsc	r1, r1, #0
   1a0d4:	add	sp, sp, #12
   1a0d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0dc:	cmp	r3, r5
   1a0e0:	movhi	r4, #0
   1a0e4:	movhi	r3, r4
   1a0e8:	bhi	1a0bc <triple_free@@Base+0x6290>
   1a0ec:	clz	r5, r1
   1a0f0:	cmp	r5, #0
   1a0f4:	bne	1a2e4 <triple_free@@Base+0x64b8>
   1a0f8:	cmp	r1, ip
   1a0fc:	cmpcs	r2, sl
   1a100:	movhi	r4, #0
   1a104:	movls	r4, #1
   1a108:	movls	r3, #1
   1a10c:	movls	r4, r5
   1a110:	movhi	r3, r4
   1a114:	b	1a0bc <triple_free@@Base+0x6290>
   1a118:	cmp	r2, #0
   1a11c:	bne	1a130 <triple_free@@Base+0x6304>
   1a120:	mov	r1, r2
   1a124:	mov	r0, #1
   1a128:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a12c:	mov	r8, r0
   1a130:	clz	r3, r8
   1a134:	cmp	r3, #0
   1a138:	bne	1a208 <triple_free@@Base+0x63dc>
   1a13c:	rsb	r9, r8, r9
   1a140:	lsr	r5, r8, #16
   1a144:	uxth	sl, r8
   1a148:	mov	r4, #1
   1a14c:	mov	r1, r5
   1a150:	mov	r0, r9
   1a154:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a158:	mov	r1, r5
   1a15c:	mov	fp, r0
   1a160:	mov	r0, r9
   1a164:	bl	19eb4 <triple_free@@Base+0x6088>
   1a168:	mul	r0, sl, fp
   1a16c:	lsr	r2, r7, #16
   1a170:	orr	r1, r2, r1, lsl #16
   1a174:	cmp	r0, r1
   1a178:	bls	1a198 <triple_free@@Base+0x636c>
   1a17c:	adds	r1, r1, r8
   1a180:	sub	r3, fp, #1
   1a184:	bcs	1a404 <triple_free@@Base+0x65d8>
   1a188:	cmp	r0, r1
   1a18c:	subhi	fp, fp, #2
   1a190:	addhi	r1, r1, r8
   1a194:	bls	1a404 <triple_free@@Base+0x65d8>
   1a198:	rsb	r2, r0, r1
   1a19c:	mov	r1, r5
   1a1a0:	str	r2, [sp]
   1a1a4:	uxth	r7, r7
   1a1a8:	mov	r0, r2
   1a1ac:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a1b0:	ldr	r2, [sp]
   1a1b4:	mov	r1, r5
   1a1b8:	mov	r9, r0
   1a1bc:	mov	r0, r2
   1a1c0:	bl	19eb4 <triple_free@@Base+0x6088>
   1a1c4:	mul	sl, sl, r9
   1a1c8:	orr	r1, r7, r1, lsl #16
   1a1cc:	cmp	sl, r1
   1a1d0:	bls	1a1f0 <triple_free@@Base+0x63c4>
   1a1d4:	adds	r8, r1, r8
   1a1d8:	sub	r3, r9, #1
   1a1dc:	bcs	1a1ec <triple_free@@Base+0x63c0>
   1a1e0:	cmp	sl, r8
   1a1e4:	subhi	r9, r9, #2
   1a1e8:	bhi	1a1f0 <triple_free@@Base+0x63c4>
   1a1ec:	mov	r9, r3
   1a1f0:	orr	r3, r9, fp, lsl #16
   1a1f4:	b	1a0bc <triple_free@@Base+0x6290>
   1a1f8:	mvn	r6, r6
   1a1fc:	rsbs	r2, r2, #0
   1a200:	rsc	r3, r3, #0
   1a204:	b	19fc4 <triple_free@@Base+0x6198>
   1a208:	lsl	r8, r8, r3
   1a20c:	rsb	fp, r3, #32
   1a210:	lsr	r4, r9, fp
   1a214:	lsr	fp, r7, fp
   1a218:	lsr	r5, r8, #16
   1a21c:	orr	fp, fp, r9, lsl r3
   1a220:	mov	r0, r4
   1a224:	lsl	r7, r7, r3
   1a228:	mov	r1, r5
   1a22c:	uxth	sl, r8
   1a230:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a234:	mov	r1, r5
   1a238:	mov	r3, r0
   1a23c:	mov	r0, r4
   1a240:	str	r3, [sp]
   1a244:	bl	19eb4 <triple_free@@Base+0x6088>
   1a248:	ldr	r3, [sp]
   1a24c:	lsr	r2, fp, #16
   1a250:	mul	r0, sl, r3
   1a254:	orr	r1, r2, r1, lsl #16
   1a258:	cmp	r0, r1
   1a25c:	bls	1a27c <triple_free@@Base+0x6450>
   1a260:	adds	r1, r1, r8
   1a264:	sub	r2, r3, #1
   1a268:	bcs	1a41c <triple_free@@Base+0x65f0>
   1a26c:	cmp	r0, r1
   1a270:	subhi	r3, r3, #2
   1a274:	addhi	r1, r1, r8
   1a278:	bls	1a41c <triple_free@@Base+0x65f0>
   1a27c:	rsb	r9, r0, r1
   1a280:	mov	r1, r5
   1a284:	str	r3, [sp]
   1a288:	uxth	fp, fp
   1a28c:	mov	r0, r9
   1a290:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a294:	mov	r1, r5
   1a298:	mov	r4, r0
   1a29c:	mov	r0, r9
   1a2a0:	bl	19eb4 <triple_free@@Base+0x6088>
   1a2a4:	mul	r9, sl, r4
   1a2a8:	ldr	r3, [sp]
   1a2ac:	orr	r1, fp, r1, lsl #16
   1a2b0:	cmp	r9, r1
   1a2b4:	bls	1a2d8 <triple_free@@Base+0x64ac>
   1a2b8:	adds	r1, r1, r8
   1a2bc:	sub	r2, r4, #1
   1a2c0:	bcs	1a2d4 <triple_free@@Base+0x64a8>
   1a2c4:	cmp	r9, r1
   1a2c8:	subhi	r4, r4, #2
   1a2cc:	addhi	r1, r1, r8
   1a2d0:	bhi	1a2d8 <triple_free@@Base+0x64ac>
   1a2d4:	mov	r4, r2
   1a2d8:	rsb	r9, r9, r1
   1a2dc:	orr	r4, r4, r3, lsl #16
   1a2e0:	b	1a14c <triple_free@@Base+0x6320>
   1a2e4:	rsb	sl, r5, #32
   1a2e8:	lsl	r3, r2, r5
   1a2ec:	lsr	r0, r2, sl
   1a2f0:	lsr	r2, ip, sl
   1a2f4:	orr	r4, r0, r1, lsl r5
   1a2f8:	lsr	sl, r7, sl
   1a2fc:	mov	r0, r2
   1a300:	orr	sl, sl, ip, lsl r5
   1a304:	lsr	r9, r4, #16
   1a308:	str	r3, [sp, #4]
   1a30c:	str	r2, [sp]
   1a310:	uxth	fp, r4
   1a314:	mov	r1, r9
   1a318:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a31c:	ldr	r2, [sp]
   1a320:	mov	r1, r9
   1a324:	mov	r8, r0
   1a328:	mov	r0, r2
   1a32c:	bl	19eb4 <triple_free@@Base+0x6088>
   1a330:	mul	r0, fp, r8
   1a334:	lsr	r2, sl, #16
   1a338:	orr	r1, r2, r1, lsl #16
   1a33c:	cmp	r0, r1
   1a340:	bls	1a360 <triple_free@@Base+0x6534>
   1a344:	adds	r1, r1, r4
   1a348:	sub	r2, r8, #1
   1a34c:	bcs	1a414 <triple_free@@Base+0x65e8>
   1a350:	cmp	r0, r1
   1a354:	subhi	r8, r8, #2
   1a358:	addhi	r1, r1, r4
   1a35c:	bls	1a414 <triple_free@@Base+0x65e8>
   1a360:	rsb	ip, r0, r1
   1a364:	mov	r1, r9
   1a368:	str	ip, [sp]
   1a36c:	mov	r0, ip
   1a370:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a374:	ldr	ip, [sp]
   1a378:	mov	r1, r9
   1a37c:	mov	r2, r0
   1a380:	mov	r0, ip
   1a384:	str	r2, [sp]
   1a388:	bl	19eb4 <triple_free@@Base+0x6088>
   1a38c:	ldr	r2, [sp]
   1a390:	uxth	ip, sl
   1a394:	mul	fp, fp, r2
   1a398:	orr	ip, ip, r1, lsl #16
   1a39c:	cmp	fp, ip
   1a3a0:	bls	1a3c0 <triple_free@@Base+0x6594>
   1a3a4:	adds	ip, ip, r4
   1a3a8:	sub	r1, r2, #1
   1a3ac:	bcs	1a40c <triple_free@@Base+0x65e0>
   1a3b0:	cmp	fp, ip
   1a3b4:	subhi	r2, r2, #2
   1a3b8:	addhi	ip, ip, r4
   1a3bc:	bls	1a40c <triple_free@@Base+0x65e0>
   1a3c0:	ldr	r0, [sp, #4]
   1a3c4:	orr	r1, r2, r8, lsl #16
   1a3c8:	rsb	fp, fp, ip
   1a3cc:	umull	r2, r3, r1, r0
   1a3d0:	cmp	fp, r3
   1a3d4:	bcc	1a3f8 <triple_free@@Base+0x65cc>
   1a3d8:	movne	r4, #0
   1a3dc:	moveq	r4, #1
   1a3e0:	cmp	r2, r7, lsl r5
   1a3e4:	movls	r4, #0
   1a3e8:	andhi	r4, r4, #1
   1a3ec:	cmp	r4, #0
   1a3f0:	moveq	r3, r1
   1a3f4:	beq	1a0bc <triple_free@@Base+0x6290>
   1a3f8:	sub	r3, r1, #1
   1a3fc:	mov	r4, #0
   1a400:	b	1a0bc <triple_free@@Base+0x6290>
   1a404:	mov	fp, r3
   1a408:	b	1a198 <triple_free@@Base+0x636c>
   1a40c:	mov	r2, r1
   1a410:	b	1a3c0 <triple_free@@Base+0x6594>
   1a414:	mov	r8, r2
   1a418:	b	1a360 <triple_free@@Base+0x6534>
   1a41c:	mov	r3, r2
   1a420:	b	1a27c <triple_free@@Base+0x6450>
   1a424:	cmp	r3, #0
   1a428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a42c:	mov	r6, r0
   1a430:	sub	sp, sp, #12
   1a434:	mov	r5, r1
   1a438:	mov	r7, r0
   1a43c:	mov	r4, r2
   1a440:	mov	r8, r1
   1a444:	bne	1a524 <triple_free@@Base+0x66f8>
   1a448:	cmp	r2, r1
   1a44c:	bls	1a560 <triple_free@@Base+0x6734>
   1a450:	clz	r3, r2
   1a454:	cmp	r3, #0
   1a458:	rsbne	r8, r3, #32
   1a45c:	lslne	r4, r2, r3
   1a460:	lsrne	r8, r0, r8
   1a464:	lslne	r7, r0, r3
   1a468:	orrne	r8, r8, r1, lsl r3
   1a46c:	lsr	r5, r4, #16
   1a470:	uxth	sl, r4
   1a474:	mov	r1, r5
   1a478:	mov	r0, r8
   1a47c:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a480:	mov	r1, r5
   1a484:	mov	r9, r0
   1a488:	mov	r0, r8
   1a48c:	bl	19eb4 <triple_free@@Base+0x6088>
   1a490:	mul	r0, sl, r9
   1a494:	lsr	r3, r7, #16
   1a498:	orr	r1, r3, r1, lsl #16
   1a49c:	cmp	r0, r1
   1a4a0:	bls	1a4c4 <triple_free@@Base+0x6698>
   1a4a4:	adds	r1, r1, r4
   1a4a8:	sub	r2, r9, #1
   1a4ac:	bcs	1a4c0 <triple_free@@Base+0x6694>
   1a4b0:	cmp	r0, r1
   1a4b4:	subhi	r9, r9, #2
   1a4b8:	addhi	r1, r1, r4
   1a4bc:	bhi	1a4c4 <triple_free@@Base+0x6698>
   1a4c0:	mov	r9, r2
   1a4c4:	rsb	r8, r0, r1
   1a4c8:	mov	r1, r5
   1a4cc:	uxth	r7, r7
   1a4d0:	mov	r0, r8
   1a4d4:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a4d8:	mov	r1, r5
   1a4dc:	mov	r6, r0
   1a4e0:	mov	r0, r8
   1a4e4:	bl	19eb4 <triple_free@@Base+0x6088>
   1a4e8:	mul	sl, sl, r6
   1a4ec:	orr	r1, r7, r1, lsl #16
   1a4f0:	cmp	sl, r1
   1a4f4:	bls	1a510 <triple_free@@Base+0x66e4>
   1a4f8:	adds	r4, r1, r4
   1a4fc:	sub	r3, r6, #1
   1a500:	bcs	1a80c <triple_free@@Base+0x69e0>
   1a504:	cmp	sl, r4
   1a508:	subhi	r6, r6, #2
   1a50c:	bls	1a80c <triple_free@@Base+0x69e0>
   1a510:	orr	r0, r6, r9, lsl #16
   1a514:	mov	r6, #0
   1a518:	mov	r1, r6
   1a51c:	add	sp, sp, #12
   1a520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a524:	cmp	r3, r1
   1a528:	movhi	r6, #0
   1a52c:	movhi	r0, r6
   1a530:	bhi	1a518 <triple_free@@Base+0x66ec>
   1a534:	clz	r7, r3
   1a538:	cmp	r7, #0
   1a53c:	bne	1a63c <triple_free@@Base+0x6810>
   1a540:	cmp	r3, r1
   1a544:	cmpcs	r2, r6
   1a548:	movhi	r6, #0
   1a54c:	movls	r6, #1
   1a550:	movls	r0, #1
   1a554:	movls	r6, r7
   1a558:	movhi	r0, r6
   1a55c:	b	1a518 <triple_free@@Base+0x66ec>
   1a560:	cmp	r2, #0
   1a564:	bne	1a578 <triple_free@@Base+0x674c>
   1a568:	mov	r1, r2
   1a56c:	mov	r0, #1
   1a570:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a574:	mov	r4, r0
   1a578:	clz	r3, r4
   1a57c:	cmp	r3, #0
   1a580:	bne	1a738 <triple_free@@Base+0x690c>
   1a584:	rsb	r5, r4, r5
   1a588:	lsr	r8, r4, #16
   1a58c:	uxth	sl, r4
   1a590:	mov	r6, #1
   1a594:	mov	r1, r8
   1a598:	mov	r0, r5
   1a59c:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a5a0:	mov	r1, r8
   1a5a4:	mov	r9, r0
   1a5a8:	mov	r0, r5
   1a5ac:	bl	19eb4 <triple_free@@Base+0x6088>
   1a5b0:	mul	r0, sl, r9
   1a5b4:	lsr	r3, r7, #16
   1a5b8:	orr	r1, r3, r1, lsl #16
   1a5bc:	cmp	r0, r1
   1a5c0:	bls	1a5e0 <triple_free@@Base+0x67b4>
   1a5c4:	adds	r1, r1, r4
   1a5c8:	sub	r2, r9, #1
   1a5cc:	bcs	1a814 <triple_free@@Base+0x69e8>
   1a5d0:	cmp	r0, r1
   1a5d4:	subhi	r9, r9, #2
   1a5d8:	addhi	r1, r1, r4
   1a5dc:	bls	1a814 <triple_free@@Base+0x69e8>
   1a5e0:	rsb	fp, r0, r1
   1a5e4:	mov	r1, r8
   1a5e8:	uxth	r7, r7
   1a5ec:	mov	r0, fp
   1a5f0:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a5f4:	mov	r1, r8
   1a5f8:	mov	r5, r0
   1a5fc:	mov	r0, fp
   1a600:	bl	19eb4 <triple_free@@Base+0x6088>
   1a604:	mul	sl, sl, r5
   1a608:	orr	r1, r7, r1, lsl #16
   1a60c:	cmp	sl, r1
   1a610:	bls	1a62c <triple_free@@Base+0x6800>
   1a614:	adds	r4, r1, r4
   1a618:	sub	r3, r5, #1
   1a61c:	bcs	1a81c <triple_free@@Base+0x69f0>
   1a620:	cmp	sl, r4
   1a624:	subhi	r5, r5, #2
   1a628:	bls	1a81c <triple_free@@Base+0x69f0>
   1a62c:	orr	r0, r5, r9, lsl #16
   1a630:	mov	r1, r6
   1a634:	add	sp, sp, #12
   1a638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a63c:	rsb	r1, r7, #32
   1a640:	lsl	r0, r2, r7
   1a644:	lsr	r2, r2, r1
   1a648:	lsr	fp, r5, r1
   1a64c:	orr	r8, r2, r3, lsl r7
   1a650:	lsr	r1, r6, r1
   1a654:	str	r0, [sp, #4]
   1a658:	orr	r5, r1, r5, lsl r7
   1a65c:	lsr	r9, r8, #16
   1a660:	mov	r0, fp
   1a664:	uxth	sl, r8
   1a668:	mov	r1, r9
   1a66c:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a670:	mov	r1, r9
   1a674:	mov	r4, r0
   1a678:	mov	r0, fp
   1a67c:	bl	19eb4 <triple_free@@Base+0x6088>
   1a680:	mul	r0, sl, r4
   1a684:	lsr	ip, r5, #16
   1a688:	orr	r1, ip, r1, lsl #16
   1a68c:	cmp	r0, r1
   1a690:	bls	1a6a4 <triple_free@@Base+0x6878>
   1a694:	adds	r1, r1, r8
   1a698:	sub	r2, r4, #1
   1a69c:	bcc	1a838 <triple_free@@Base+0x6a0c>
   1a6a0:	mov	r4, r2
   1a6a4:	rsb	ip, r0, r1
   1a6a8:	mov	r1, r9
   1a6ac:	str	ip, [sp]
   1a6b0:	uxth	r5, r5
   1a6b4:	mov	r0, ip
   1a6b8:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a6bc:	ldr	ip, [sp]
   1a6c0:	mov	r1, r9
   1a6c4:	mov	fp, r0
   1a6c8:	mov	r0, ip
   1a6cc:	bl	19eb4 <triple_free@@Base+0x6088>
   1a6d0:	mul	sl, sl, fp
   1a6d4:	orr	r1, r5, r1, lsl #16
   1a6d8:	cmp	sl, r1
   1a6dc:	bls	1a6f0 <triple_free@@Base+0x68c4>
   1a6e0:	adds	r1, r1, r8
   1a6e4:	sub	r2, fp, #1
   1a6e8:	bcc	1a824 <triple_free@@Base+0x69f8>
   1a6ec:	mov	fp, r2
   1a6f0:	ldr	r3, [sp, #4]
   1a6f4:	orr	r0, fp, r4, lsl #16
   1a6f8:	rsb	sl, sl, r1
   1a6fc:	umull	r4, r5, r0, r3
   1a700:	cmp	sl, r5
   1a704:	bcc	1a724 <triple_free@@Base+0x68f8>
   1a708:	movne	r3, #0
   1a70c:	moveq	r3, #1
   1a710:	cmp	r4, r6, lsl r7
   1a714:	movls	r6, #0
   1a718:	andhi	r6, r3, #1
   1a71c:	cmp	r6, #0
   1a720:	beq	1a518 <triple_free@@Base+0x66ec>
   1a724:	mov	r6, #0
   1a728:	sub	r0, r0, #1
   1a72c:	mov	r1, r6
   1a730:	add	sp, sp, #12
   1a734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a738:	lsl	r4, r4, r3
   1a73c:	rsb	r9, r3, #32
   1a740:	lsr	r2, r5, r9
   1a744:	lsr	r9, r6, r9
   1a748:	lsr	r8, r4, #16
   1a74c:	orr	r9, r9, r5, lsl r3
   1a750:	mov	r0, r2
   1a754:	lsl	r7, r6, r3
   1a758:	mov	r1, r8
   1a75c:	str	r2, [sp]
   1a760:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a764:	ldr	r2, [sp]
   1a768:	mov	r1, r8
   1a76c:	uxth	sl, r4
   1a770:	mov	fp, r0
   1a774:	mov	r0, r2
   1a778:	bl	19eb4 <triple_free@@Base+0x6088>
   1a77c:	mul	r0, sl, fp
   1a780:	lsr	r3, r9, #16
   1a784:	orr	r1, r3, r1, lsl #16
   1a788:	cmp	r0, r1
   1a78c:	bls	1a7ac <triple_free@@Base+0x6980>
   1a790:	adds	r1, r1, r4
   1a794:	sub	r3, fp, #1
   1a798:	bcs	1a84c <triple_free@@Base+0x6a20>
   1a79c:	cmp	r0, r1
   1a7a0:	subhi	fp, fp, #2
   1a7a4:	addhi	r1, r1, r4
   1a7a8:	bls	1a84c <triple_free@@Base+0x6a20>
   1a7ac:	rsb	r5, r0, r1
   1a7b0:	mov	r1, r8
   1a7b4:	uxth	r9, r9
   1a7b8:	mov	r0, r5
   1a7bc:	bl	19cc8 <triple_free@@Base+0x5e9c>
   1a7c0:	mov	r1, r8
   1a7c4:	mov	r6, r0
   1a7c8:	mov	r0, r5
   1a7cc:	bl	19eb4 <triple_free@@Base+0x6088>
   1a7d0:	mul	r5, sl, r6
   1a7d4:	orr	r1, r9, r1, lsl #16
   1a7d8:	cmp	r5, r1
   1a7dc:	bls	1a800 <triple_free@@Base+0x69d4>
   1a7e0:	adds	r1, r1, r4
   1a7e4:	sub	r3, r6, #1
   1a7e8:	bcs	1a7fc <triple_free@@Base+0x69d0>
   1a7ec:	cmp	r5, r1
   1a7f0:	subhi	r6, r6, #2
   1a7f4:	addhi	r1, r1, r4
   1a7f8:	bhi	1a800 <triple_free@@Base+0x69d4>
   1a7fc:	mov	r6, r3
   1a800:	rsb	r5, r5, r1
   1a804:	orr	r6, r6, fp, lsl #16
   1a808:	b	1a594 <triple_free@@Base+0x6768>
   1a80c:	mov	r6, r3
   1a810:	b	1a510 <triple_free@@Base+0x66e4>
   1a814:	mov	r9, r2
   1a818:	b	1a5e0 <triple_free@@Base+0x67b4>
   1a81c:	mov	r5, r3
   1a820:	b	1a62c <triple_free@@Base+0x6800>
   1a824:	cmp	sl, r1
   1a828:	subhi	fp, fp, #2
   1a82c:	addhi	r1, r1, r8
   1a830:	bhi	1a6f0 <triple_free@@Base+0x68c4>
   1a834:	b	1a6ec <triple_free@@Base+0x68c0>
   1a838:	cmp	r0, r1
   1a83c:	subhi	r4, r4, #2
   1a840:	addhi	r1, r1, r8
   1a844:	bhi	1a6a4 <triple_free@@Base+0x6878>
   1a848:	b	1a6a0 <triple_free@@Base+0x6874>
   1a84c:	mov	fp, r3
   1a850:	b	1a7ac <triple_free@@Base+0x6980>
   1a854:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a858:	mov	r7, r0
   1a85c:	ldr	r6, [pc, #76]	; 1a8b0 <triple_free@@Base+0x6a84>
   1a860:	mov	r8, r1
   1a864:	ldr	r5, [pc, #72]	; 1a8b4 <triple_free@@Base+0x6a88>
   1a868:	mov	r9, r2
   1a86c:	add	r6, pc, r6
   1a870:	bl	11234 <fdopen@plt-0x20>
   1a874:	add	r5, pc, r5
   1a878:	rsb	r6, r5, r6
   1a87c:	asrs	r6, r6, #2
   1a880:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a884:	sub	r5, r5, #4
   1a888:	mov	r4, #0
   1a88c:	add	r4, r4, #1
   1a890:	ldr	r3, [r5, #4]!
   1a894:	mov	r0, r7
   1a898:	mov	r1, r8
   1a89c:	mov	r2, r9
   1a8a0:	blx	r3
   1a8a4:	cmp	r4, r6
   1a8a8:	bne	1a88c <triple_free@@Base+0x6a60>
   1a8ac:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a8b0:	muleq	r1, r8, r5
   1a8b4:	andeq	r1, r1, ip, lsl #11
   1a8b8:	bx	lr
   1a8bc:	ldr	r3, [pc, #28]	; 1a8e0 <triple_free@@Base+0x6ab4>
   1a8c0:	mov	r1, #0
   1a8c4:	ldr	r2, [pc, #24]	; 1a8e4 <triple_free@@Base+0x6ab8>
   1a8c8:	add	r3, pc, r3
   1a8cc:	ldr	r3, [r3, r2]
   1a8d0:	cmp	r3, #0
   1a8d4:	ldrne	r2, [r3]
   1a8d8:	moveq	r2, r3
   1a8dc:	b	11494 <__cxa_atexit@plt>
   1a8e0:	andeq	r1, r1, r0, lsr r7
   1a8e4:	andeq	r0, r0, r0, asr r1

Disassembly of section .fini:

0001a8e8 <.fini>:
   1a8e8:	push	{r3, lr}
   1a8ec:	pop	{r3, pc}
