
centos-preinstalled/sg_read_long:     file format elf32-littlearm


Disassembly of section .init:

000109a8 <_init@@Base>:
   109a8:	push	{r3, lr}
   109ac:	bl	1132c <__snprintf_chk@plt+0x844>
   109b0:	pop	{r3, pc}

Disassembly of section .plt:

000109b4 <sg_set_binary_mode@plt-0x14>:
   109b4:	push	{lr}		; (str lr, [sp, #-4]!)
   109b8:	ldr	lr, [pc, #4]	; 109c4 <_init@@Base+0x1c>
   109bc:	add	lr, pc, lr
   109c0:	ldr	pc, [lr, #8]!
   109c4:	andeq	r1, r1, ip, lsr r6

000109c8 <sg_set_binary_mode@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1596]!	; 0x63c

000109d4 <dStrHex@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1588]!	; 0x634

000109e0 <free@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1580]!	; 0x62c

000109ec <sg_cmds_close_device@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1572]!	; 0x624

000109f8 <__stack_chk_fail@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1564]!	; 0x61c

00010a04 <perror@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1556]!	; 0x614

00010a10 <fwrite@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1548]!	; 0x60c

00010a1c <open64@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1540]!	; 0x604

00010a28 <malloc@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a34 <__libc_start_main@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a40 <__gmon_start__@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a4c <getopt_long@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a58 <memset@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a64 <strncpy@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a70 <write@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a7c <sg_get_llnum@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a88 <__fprintf_chk@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a94 <safe_strerror@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010aa0 <sg_get_num@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1452]!	; 0x5ac

00010aac <sg_cmds_open_device@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1444]!	; 0x5a4

00010ab8 <sg_ll_read_long10@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1436]!	; 0x59c

00010ac4 <sg_ll_read_long16@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1428]!	; 0x594

00010ad0 <abort@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1420]!	; 0x58c

00010adc <close@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #69632	; 0x11000
   10ae4:	ldr	pc, [ip, #1412]!	; 0x584

00010ae8 <__snprintf_chk@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #69632	; 0x11000
   10af0:	ldr	pc, [ip, #1404]!	; 0x57c

Disassembly of section .text:

00010af4 <.text>:
   10af4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10af8:	movw	r5, #8488	; 0x2128
   10afc:	movt	r5, #2
   10b00:	sub	sp, sp, #596	; 0x254
   10b04:	mov	r7, r1
   10b08:	mov	r1, #0
   10b0c:	ldr	r3, [r5]
   10b10:	mov	r4, r1
   10b14:	movw	sl, #8504	; 0x2138
   10b18:	add	r8, sp, #72	; 0x48
   10b1c:	movt	sl, #2
   10b20:	mov	r6, r0
   10b24:	mov	r2, #256	; 0x100
   10b28:	add	r0, sp, #76	; 0x4c
   10b2c:	mov	r9, r4
   10b30:	mov	fp, #520	; 0x208
   10b34:	str	r3, [sp, #588]	; 0x24c
   10b38:	bl	10a58 <memset@plt>
   10b3c:	str	r4, [sp, #44]	; 0x2c
   10b40:	str	r4, [sp, #48]	; 0x30
   10b44:	str	r4, [sp, #60]	; 0x3c
   10b48:	str	r4, [sp, #56]	; 0x38
   10b4c:	str	r4, [sp, #64]	; 0x40
   10b50:	str	r4, [sp, #52]	; 0x34
   10b54:	str	r8, [sp]
   10b58:	movw	r2, #5284	; 0x14a4
   10b5c:	movw	r3, #8312	; 0x2078
   10b60:	movt	r2, #1
   10b64:	movt	r3, #2
   10b68:	mov	r0, r6
   10b6c:	mov	r1, r7
   10b70:	str	r9, [sp, #72]	; 0x48
   10b74:	bl	10a4c <getopt_long@plt>
   10b78:	cmn	r0, #1
   10b7c:	beq	10dd4 <__snprintf_chk@plt+0x2ec>
   10b80:	sub	r3, r0, #63	; 0x3f
   10b84:	cmp	r3, #57	; 0x39
   10b88:	ldrls	pc, [pc, r3, lsl #2]
   10b8c:	b	10d94 <__snprintf_chk@plt+0x2ac>
   10b90:	andeq	r0, r1, r8, lsl sp
   10b94:	muleq	r1, r4, sp
   10b98:	muleq	r1, r4, sp
   10b9c:	muleq	r1, r4, sp
   10ba0:	muleq	r1, r4, sp
   10ba4:	muleq	r1, r4, sp
   10ba8:	muleq	r1, r4, sp
   10bac:	muleq	r1, r4, sp
   10bb0:	muleq	r1, r4, sp
   10bb4:	muleq	r1, r4, sp
   10bb8:	muleq	r1, r4, sp
   10bbc:	muleq	r1, r4, sp
   10bc0:	muleq	r1, r4, sp
   10bc4:	muleq	r1, r4, sp
   10bc8:	muleq	r1, r4, sp
   10bcc:	muleq	r1, r4, sp
   10bd0:	muleq	r1, r4, sp
   10bd4:	muleq	r1, r4, sp
   10bd8:	muleq	r1, r4, sp
   10bdc:	muleq	r1, r4, sp
   10be0:	andeq	r0, r1, ip, lsl #26
   10be4:	muleq	r1, r4, sp
   10be8:	muleq	r1, r4, sp
   10bec:	andeq	r0, r1, ip, asr #25
   10bf0:	muleq	r1, r4, sp
   10bf4:	muleq	r1, r4, sp
   10bf8:	muleq	r1, r4, sp
   10bfc:	muleq	r1, r4, sp
   10c00:	muleq	r1, r4, sp
   10c04:	muleq	r1, r4, sp
   10c08:	muleq	r1, r4, sp
   10c0c:	muleq	r1, r4, sp
   10c10:	muleq	r1, r4, sp
   10c14:	muleq	r1, r4, sp
   10c18:	muleq	r1, r4, sp
   10c1c:	muleq	r1, r4, sp
   10c20:	andeq	r0, r1, r0, asr #25
   10c24:	muleq	r1, r4, sp
   10c28:	muleq	r1, r4, sp
   10c2c:	muleq	r1, r4, sp
   10c30:	muleq	r1, r4, sp
   10c34:	andeq	r0, r1, r8, lsl sp
   10c38:	muleq	r1, r4, sp
   10c3c:	muleq	r1, r4, sp
   10c40:	muleq	r1, r4, sp
   10c44:	muleq	r1, r8, ip
   10c48:	muleq	r1, r4, sp
   10c4c:	muleq	r1, r4, sp
   10c50:	andeq	r0, r1, r4, lsl #25
   10c54:	andeq	r0, r1, r8, ror ip
   10c58:	muleq	r1, r4, sp
   10c5c:	andeq	r0, r1, r4, lsl #27
   10c60:	muleq	r1, r4, sp
   10c64:	muleq	r1, r4, sp
   10c68:	muleq	r1, r4, sp
   10c6c:	andeq	r0, r1, ip, ror sp
   10c70:	muleq	r1, r4, sp
   10c74:	andeq	r0, r1, r0, asr #26
   10c78:	mov	ip, #1
   10c7c:	str	ip, [sp, #56]	; 0x38
   10c80:	b	10b54 <__snprintf_chk@plt+0x6c>
   10c84:	add	r0, sp, #76	; 0x4c
   10c88:	ldr	r1, [sl]
   10c8c:	mov	r2, #255	; 0xff
   10c90:	bl	10a64 <strncpy@plt>
   10c94:	b	10b54 <__snprintf_chk@plt+0x6c>
   10c98:	ldr	r0, [sl]
   10c9c:	bl	10a7c <sg_get_llnum@plt>
   10ca0:	mvn	r2, #0
   10ca4:	mvn	r3, #0
   10ca8:	cmp	r1, r3
   10cac:	cmpeq	r0, r2
   10cb0:	beq	111d4 <__snprintf_chk@plt+0x6ec>
   10cb4:	str	r0, [sp, #48]	; 0x30
   10cb8:	str	r1, [sp, #60]	; 0x3c
   10cbc:	b	10b54 <__snprintf_chk@plt+0x6c>
   10cc0:	mov	ip, #1
   10cc4:	str	ip, [sp, #52]	; 0x34
   10cc8:	b	10b54 <__snprintf_chk@plt+0x6c>
   10ccc:	movw	r1, #8500	; 0x2134
   10cd0:	movt	r1, #2
   10cd4:	movw	r2, #6252	; 0x186c
   10cd8:	movw	r3, #6280	; 0x1888
   10cdc:	ldr	r0, [r1]
   10ce0:	movt	r2, #1
   10ce4:	movt	r3, #1
   10ce8:	mov	r1, #1
   10cec:	bl	10a88 <__fprintf_chk@plt>
   10cf0:	mov	r0, #0
   10cf4:	ldr	r2, [sp, #588]	; 0x24c
   10cf8:	ldr	r3, [r5]
   10cfc:	cmp	r2, r3
   10d00:	bne	112d0 <__snprintf_chk@plt+0x7e8>
   10d04:	add	sp, sp, #596	; 0x254
   10d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d0c:	mov	ip, #1
   10d10:	str	ip, [sp, #64]	; 0x40
   10d14:	b	10b54 <__snprintf_chk@plt+0x6c>
   10d18:	movw	r3, #8500	; 0x2134
   10d1c:	movt	r3, #2
   10d20:	movw	r0, #5300	; 0x14b4
   10d24:	mov	r1, #1
   10d28:	ldr	r3, [r3]
   10d2c:	movt	r0, #1
   10d30:	movw	r2, #921	; 0x399
   10d34:	bl	10a10 <fwrite@plt>
   10d38:	mov	r0, #0
   10d3c:	b	10cf4 <__snprintf_chk@plt+0x20c>
   10d40:	ldr	r0, [sl]
   10d44:	bl	10aa0 <sg_get_num@plt>
   10d48:	cmn	r0, #1
   10d4c:	mov	fp, r0
   10d50:	bne	10b54 <__snprintf_chk@plt+0x6c>
   10d54:	movw	r3, #8500	; 0x2134
   10d58:	movt	r3, #2
   10d5c:	movw	r0, #6296	; 0x1898
   10d60:	mov	r1, #1
   10d64:	ldr	r3, [r3]
   10d68:	movt	r0, #1
   10d6c:	mov	r2, #29
   10d70:	bl	10a10 <fwrite@plt>
   10d74:	mov	r0, #1
   10d78:	b	10cf4 <__snprintf_chk@plt+0x20c>
   10d7c:	add	r4, r4, #1
   10d80:	b	10b54 <__snprintf_chk@plt+0x6c>
   10d84:	ldr	ip, [sp, #44]	; 0x2c
   10d88:	add	ip, ip, #1
   10d8c:	str	ip, [sp, #44]	; 0x2c
   10d90:	b	10b54 <__snprintf_chk@plt+0x6c>
   10d94:	movw	r4, #8500	; 0x2134
   10d98:	movt	r4, #2
   10d9c:	mov	r3, r0
   10da0:	movw	r2, #6328	; 0x18b8
   10da4:	ldr	r0, [r4]
   10da8:	movt	r2, #1
   10dac:	mov	r1, #1
   10db0:	bl	10a88 <__fprintf_chk@plt>
   10db4:	ldr	r3, [r4]
   10db8:	movw	r0, #5300	; 0x14b4
   10dbc:	mov	r1, #1
   10dc0:	movt	r0, #1
   10dc4:	movw	r2, #921	; 0x399
   10dc8:	bl	10a10 <fwrite@plt>
   10dcc:	mov	r0, #1
   10dd0:	b	10cf4 <__snprintf_chk@plt+0x20c>
   10dd4:	movw	sl, #8496	; 0x2130
   10dd8:	movt	sl, #2
   10ddc:	ldr	r2, [sl]
   10de0:	cmp	r6, r2
   10de4:	ble	10e40 <__snprintf_chk@plt+0x358>
   10de8:	add	r3, r2, #1
   10dec:	ldr	r2, [r7, r2, lsl #2]
   10df0:	cmp	r6, r3
   10df4:	str	r3, [sl]
   10df8:	str	r2, [sp, #68]	; 0x44
   10dfc:	ble	10e64 <__snprintf_chk@plt+0x37c>
   10e00:	movw	r9, #8500	; 0x2134
   10e04:	movt	r9, #2
   10e08:	ldr	r3, [r7, r3, lsl #2]
   10e0c:	movw	r2, #6388	; 0x18f4
   10e10:	ldr	r0, [r9]
   10e14:	movt	r2, #1
   10e18:	mov	r1, #1
   10e1c:	movw	r4, #8500	; 0x2134
   10e20:	bl	10a88 <__fprintf_chk@plt>
   10e24:	ldr	r3, [sl]
   10e28:	movt	r4, #2
   10e2c:	add	r3, r3, #1
   10e30:	str	r3, [sl]
   10e34:	cmp	r6, r3
   10e38:	bgt	10e08 <__snprintf_chk@plt+0x320>
   10e3c:	b	10db4 <__snprintf_chk@plt+0x2cc>
   10e40:	movw	r4, #8500	; 0x2134
   10e44:	movt	r4, #2
   10e48:	movw	r0, #6364	; 0x18dc
   10e4c:	mov	r1, #1
   10e50:	ldr	r3, [r4]
   10e54:	mov	r2, #21
   10e58:	movt	r0, #1
   10e5c:	bl	10a10 <fwrite@plt>
   10e60:	b	10db4 <__snprintf_chk@plt+0x2cc>
   10e64:	ldr	r3, [sp, #68]	; 0x44
   10e68:	cmp	r3, #0
   10e6c:	beq	10e40 <__snprintf_chk@plt+0x358>
   10e70:	movw	r3, #9999	; 0x270f
   10e74:	cmp	fp, r3
   10e78:	bgt	110ec <__snprintf_chk@plt+0x604>
   10e7c:	ldr	r1, [sp, #44]	; 0x2c
   10e80:	mov	r2, r4
   10e84:	ldr	r0, [sp, #68]	; 0x44
   10e88:	bl	10aac <sg_cmds_open_device@plt>
   10e8c:	subs	r6, r0, #0
   10e90:	blt	11118 <__snprintf_chk@plt+0x630>
   10e94:	movw	r0, #10000	; 0x2710
   10e98:	bl	10a28 <malloc@plt>
   10e9c:	subs	r7, r0, #0
   10ea0:	beq	11290 <__snprintf_chk@plt+0x7a8>
   10ea4:	mov	r1, #0
   10ea8:	movw	r2, #10000	; 0x2710
   10eac:	bl	10a58 <memset@plt>
   10eb0:	ldr	ip, [sp, #64]	; 0x40
   10eb4:	movw	r9, #8500	; 0x2134
   10eb8:	movt	r9, #2
   10ebc:	cmp	ip, #0
   10ec0:	ldr	r0, [r9]
   10ec4:	beq	11150 <__snprintf_chk@plt+0x668>
   10ec8:	ldr	ip, [sp, #68]	; 0x44
   10ecc:	mov	r1, #1
   10ed0:	str	fp, [sp, #4]
   10ed4:	movw	r2, #6984	; 0x1b48
   10ed8:	str	fp, [sp, #8]
   10edc:	movt	r2, #1
   10ee0:	str	ip, [sp]
   10ee4:	movw	r3, #5276	; 0x149c
   10ee8:	ldr	ip, [sp, #48]	; 0x30
   10eec:	movt	r3, #1
   10ef0:	str	ip, [sp, #16]
   10ef4:	ldr	ip, [sp, #60]	; 0x3c
   10ef8:	str	ip, [sp, #20]
   10efc:	ldr	ip, [sp, #48]	; 0x30
   10f00:	str	ip, [sp, #24]
   10f04:	ldr	ip, [sp, #60]	; 0x3c
   10f08:	str	ip, [sp, #28]
   10f0c:	ldr	ip, [sp, #52]	; 0x34
   10f10:	str	ip, [sp, #32]
   10f14:	bl	10a88 <__fprintf_chk@plt>
   10f18:	ldr	ip, [sp, #48]	; 0x30
   10f1c:	mov	r3, #1
   10f20:	str	r4, [sp, #24]
   10f24:	str	r3, [sp, #20]
   10f28:	mov	r0, r6
   10f2c:	str	ip, [sp]
   10f30:	ldr	ip, [sp, #60]	; 0x3c
   10f34:	ldr	r1, [sp, #56]	; 0x38
   10f38:	str	r7, [sp, #8]
   10f3c:	str	ip, [sp, #4]
   10f40:	ldr	r2, [sp, #52]	; 0x34
   10f44:	str	fp, [sp, #12]
   10f48:	str	r8, [sp, #16]
   10f4c:	bl	10ac4 <sg_ll_read_long16@plt>
   10f50:	movw	r3, #5276	; 0x149c
   10f54:	movt	r3, #1
   10f58:	mov	r4, r0
   10f5c:	cmp	r4, #17
   10f60:	ldrls	pc, [pc, r4, lsl #2]
   10f64:	b	10fb0 <__snprintf_chk@plt+0x4c8>
   10f68:	andeq	r0, r1, ip, asr #31
   10f6c:			; <UNDEFINED> instruction: 0x00010fb0
   10f70:	strheq	r1, [r1], -ip
   10f74:			; <UNDEFINED> instruction: 0x00010fb0
   10f78:			; <UNDEFINED> instruction: 0x00010fb0
   10f7c:	andeq	r1, r1, r4, lsr #1
   10f80:	andeq	r1, r1, ip, lsl #1
   10f84:			; <UNDEFINED> instruction: 0x00010fb0
   10f88:			; <UNDEFINED> instruction: 0x00010fb0
   10f8c:	andeq	r1, r1, r4, ror r0
   10f90:			; <UNDEFINED> instruction: 0x00010fb0
   10f94:	ldrdeq	r1, [r1], -r4
   10f98:			; <UNDEFINED> instruction: 0x00010fb0
   10f9c:			; <UNDEFINED> instruction: 0x00010fb0
   10fa0:			; <UNDEFINED> instruction: 0x00010fb0
   10fa4:			; <UNDEFINED> instruction: 0x00010fb0
   10fa8:			; <UNDEFINED> instruction: 0x00010fb0
   10fac:	andeq	r1, r1, r4, asr r0
   10fb0:	movw	r2, #6824	; 0x1aa8
   10fb4:	ldr	r0, [r9]
   10fb8:	movt	r2, #1
   10fbc:	mov	r1, #1
   10fc0:	bl	10a88 <__fprintf_chk@plt>
   10fc4:	cmp	r4, #0
   10fc8:	bne	1102c <__snprintf_chk@plt+0x544>
   10fcc:	ldrb	r2, [sp, #76]	; 0x4c
   10fd0:	cmp	r2, #0
   10fd4:	beq	1124c <__snprintf_chk@plt+0x764>
   10fd8:	cmp	r2, #45	; 0x2d
   10fdc:	bne	111fc <__snprintf_chk@plt+0x714>
   10fe0:	ldrb	r3, [sp, #77]	; 0x4d
   10fe4:	cmp	r3, #0
   10fe8:	moveq	sl, #1
   10fec:	moveq	r8, sl
   10ff0:	bne	111fc <__snprintf_chk@plt+0x714>
   10ff4:	mov	r0, r8
   10ff8:	bl	109c8 <sg_set_binary_mode@plt>
   10ffc:	cmp	r0, #0
   11000:	blt	112c0 <__snprintf_chk@plt+0x7d8>
   11004:	mov	r2, fp
   11008:	mov	r0, r8
   1100c:	mov	r1, r7
   11010:	bl	10a70 <write@plt>
   11014:	cmp	r0, #0
   11018:	blt	112d4 <__snprintf_chk@plt+0x7ec>
   1101c:	cmp	sl, #0
   11020:	bne	1102c <__snprintf_chk@plt+0x544>
   11024:	mov	r0, r8
   11028:	bl	10adc <close@plt>
   1102c:	mov	r0, r7
   11030:	bl	109e0 <free@plt>
   11034:	mov	r0, r6
   11038:	bl	109ec <sg_cmds_close_device@plt>
   1103c:	cmp	r0, #0
   11040:	blt	1125c <__snprintf_chk@plt+0x774>
   11044:	cmp	r4, #0
   11048:	movge	r0, r4
   1104c:	movlt	r0, #99	; 0x63
   11050:	b	10cf4 <__snprintf_chk@plt+0x20c>
   11054:	ldr	r3, [sp, #72]	; 0x48
   11058:	movw	r2, #6772	; 0x1a74
   1105c:	ldr	r0, [r9]
   11060:	movt	r2, #1
   11064:	rsb	r3, r3, fp
   11068:	mov	r1, #1
   1106c:	bl	10a88 <__fprintf_chk@plt>
   11070:	b	1102c <__snprintf_chk@plt+0x544>
   11074:	movw	r2, #6672	; 0x1a10
   11078:	ldr	r0, [r9]
   1107c:	movt	r2, #1
   11080:	mov	r1, #1
   11084:	bl	10a88 <__fprintf_chk@plt>
   11088:	b	1102c <__snprintf_chk@plt+0x544>
   1108c:	movw	r2, #6576	; 0x19b0
   11090:	ldr	r0, [r9]
   11094:	movt	r2, #1
   11098:	mov	r1, #1
   1109c:	bl	10a88 <__fprintf_chk@plt>
   110a0:	b	1102c <__snprintf_chk@plt+0x544>
   110a4:	movw	r2, #6720	; 0x1a40
   110a8:	ldr	r0, [r9]
   110ac:	movt	r2, #1
   110b0:	mov	r1, #1
   110b4:	bl	10a88 <__fprintf_chk@plt>
   110b8:	b	1102c <__snprintf_chk@plt+0x544>
   110bc:	movw	r2, #6528	; 0x1980
   110c0:	ldr	r0, [r9]
   110c4:	movt	r2, #1
   110c8:	mov	r1, #1
   110cc:	bl	10a88 <__fprintf_chk@plt>
   110d0:	b	1102c <__snprintf_chk@plt+0x544>
   110d4:	movw	r2, #6624	; 0x19e0
   110d8:	ldr	r0, [r9]
   110dc:	movt	r2, #1
   110e0:	mov	r1, #1
   110e4:	bl	10a88 <__fprintf_chk@plt>
   110e8:	b	1102c <__snprintf_chk@plt+0x544>
   110ec:	movw	r4, #8500	; 0x2134
   110f0:	movt	r4, #2
   110f4:	movw	r1, #10000	; 0x2710
   110f8:	mov	r3, fp
   110fc:	ldr	r0, [r4]
   11100:	movw	r2, #6420	; 0x1914
   11104:	str	r1, [sp]
   11108:	movt	r2, #1
   1110c:	mov	r1, #1
   11110:	bl	10a88 <__fprintf_chk@plt>
   11114:	b	10db4 <__snprintf_chk@plt+0x2cc>
   11118:	movw	r3, #8500	; 0x2134
   1111c:	movt	r3, #2
   11120:	rsb	r0, r6, #0
   11124:	ldr	r4, [r3]
   11128:	bl	10a94 <safe_strerror@plt>
   1112c:	ldr	r3, [sp, #68]	; 0x44
   11130:	movw	r2, #6460	; 0x193c
   11134:	mov	r1, #1
   11138:	movt	r2, #1
   1113c:	str	r0, [sp]
   11140:	mov	r0, r4
   11144:	bl	10a88 <__fprintf_chk@plt>
   11148:	mov	r0, #15
   1114c:	b	10cf4 <__snprintf_chk@plt+0x20c>
   11150:	ldr	ip, [sp, #48]	; 0x30
   11154:	mov	r1, #1
   11158:	ldr	r3, [sp, #68]	; 0x44
   1115c:	movw	r2, #6984	; 0x1b48
   11160:	str	fp, [sp, #8]
   11164:	movt	r2, #1
   11168:	str	ip, [sp, #16]
   1116c:	ldr	ip, [sp, #60]	; 0x3c
   11170:	stm	sp, {r3, fp}
   11174:	movw	r3, #5280	; 0x14a0
   11178:	movt	r3, #1
   1117c:	str	ip, [sp, #20]
   11180:	ldr	ip, [sp, #48]	; 0x30
   11184:	str	ip, [sp, #24]
   11188:	ldr	ip, [sp, #60]	; 0x3c
   1118c:	str	ip, [sp, #28]
   11190:	ldr	ip, [sp, #52]	; 0x34
   11194:	str	ip, [sp, #32]
   11198:	bl	10a88 <__fprintf_chk@plt>
   1119c:	str	r4, [sp, #16]
   111a0:	ldr	r3, [sp, #48]	; 0x30
   111a4:	mov	ip, #1
   111a8:	stm	sp, {r7, fp}
   111ac:	mov	r0, r6
   111b0:	ldr	r1, [sp, #56]	; 0x38
   111b4:	str	r8, [sp, #8]
   111b8:	ldr	r2, [sp, #52]	; 0x34
   111bc:	str	ip, [sp, #12]
   111c0:	bl	10ab8 <sg_ll_read_long10@plt>
   111c4:	movw	r3, #5280	; 0x14a0
   111c8:	movt	r3, #1
   111cc:	mov	r4, r0
   111d0:	b	10f5c <__snprintf_chk@plt+0x474>
   111d4:	movw	r3, #8500	; 0x2134
   111d8:	movt	r3, #2
   111dc:	movw	r0, #6224	; 0x1850
   111e0:	mov	r1, #1
   111e4:	ldr	r3, [r3]
   111e8:	movt	r0, #1
   111ec:	mov	r2, #24
   111f0:	bl	10a10 <fwrite@plt>
   111f4:	mov	r0, #1
   111f8:	b	10cf4 <__snprintf_chk@plt+0x20c>
   111fc:	add	r0, sp, #76	; 0x4c
   11200:	movw	r1, #577	; 0x241
   11204:	movw	r2, #438	; 0x1b6
   11208:	bl	10a1c <open64@plt>
   1120c:	subs	r8, r0, #0
   11210:	movge	sl, #0
   11214:	bge	10ff4 <__snprintf_chk@plt+0x50c>
   11218:	add	r2, sp, #76	; 0x4c
   1121c:	add	r0, sp, #332	; 0x14c
   11220:	str	r2, [sp, #4]
   11224:	movw	r2, #6864	; 0x1ad0
   11228:	movt	r2, #1
   1122c:	mov	r1, #256	; 0x100
   11230:	str	r2, [sp]
   11234:	mov	r3, r1
   11238:	mov	r2, #1
   1123c:	bl	10ae8 <__snprintf_chk@plt>
   11240:	add	r0, sp, #332	; 0x14c
   11244:	bl	10a04 <perror@plt>
   11248:	b	1102c <__snprintf_chk@plt+0x544>
   1124c:	mov	r1, fp
   11250:	mov	r0, r7
   11254:	bl	109d4 <dStrHex@plt>
   11258:	b	1102c <__snprintf_chk@plt+0x544>
   1125c:	rsb	r0, r0, #0
   11260:	ldr	r6, [r9]
   11264:	bl	10a94 <safe_strerror@plt>
   11268:	movw	r2, #6964	; 0x1b34
   1126c:	mov	r1, #1
   11270:	movt	r2, #1
   11274:	mov	r3, r0
   11278:	mov	r0, r6
   1127c:	bl	10a88 <__fprintf_chk@plt>
   11280:	cmp	r4, #0
   11284:	bne	11044 <__snprintf_chk@plt+0x55c>
   11288:	mov	r0, #15
   1128c:	b	10cf4 <__snprintf_chk@plt+0x20c>
   11290:	movw	r3, #8500	; 0x2134
   11294:	movt	r3, #2
   11298:	mov	r1, #1
   1129c:	mov	r2, #28
   112a0:	ldr	r3, [r3]
   112a4:	movw	r0, #6496	; 0x1960
   112a8:	movt	r0, #1
   112ac:	bl	10a10 <fwrite@plt>
   112b0:	mov	r0, r6
   112b4:	bl	109ec <sg_cmds_close_device@plt>
   112b8:	mov	r0, #1
   112bc:	b	10cf4 <__snprintf_chk@plt+0x20c>
   112c0:	movw	r0, #6908	; 0x1afc
   112c4:	movt	r0, #1
   112c8:	bl	10a04 <perror@plt>
   112cc:	b	1102c <__snprintf_chk@plt+0x544>
   112d0:	bl	109f8 <__stack_chk_fail@plt>
   112d4:	add	r3, sp, #76	; 0x4c
   112d8:	movw	r2, #6928	; 0x1b10
   112dc:	mov	r1, #256	; 0x100
   112e0:	str	r3, [sp, #4]
   112e4:	add	r0, sp, #332	; 0x14c
   112e8:	movt	r2, #1
   112ec:	b	11230 <__snprintf_chk@plt+0x748>
   112f0:	mov	fp, #0
   112f4:	mov	lr, #0
   112f8:	pop	{r1}		; (ldr r1, [sp], #4)
   112fc:	mov	r2, sp
   11300:	push	{r2}		; (str r2, [sp, #-4]!)
   11304:	push	{r0}		; (str r0, [sp, #-4]!)
   11308:	ldr	ip, [pc, #16]	; 11320 <__snprintf_chk@plt+0x838>
   1130c:	push	{ip}		; (str ip, [sp, #-4]!)
   11310:	ldr	r0, [pc, #12]	; 11324 <__snprintf_chk@plt+0x83c>
   11314:	ldr	r3, [pc, #12]	; 11328 <__snprintf_chk@plt+0x840>
   11318:	bl	10a34 <__libc_start_main@plt>
   1131c:	bl	10ad0 <abort@plt>
   11320:	andeq	r1, r1, r8, lsl #9
   11324:	strdeq	r0, [r1], -r4
   11328:	andeq	r1, r1, r4, lsr #8
   1132c:	ldr	r3, [pc, #20]	; 11348 <__snprintf_chk@plt+0x860>
   11330:	ldr	r2, [pc, #20]	; 1134c <__snprintf_chk@plt+0x864>
   11334:	add	r3, pc, r3
   11338:	ldr	r2, [r3, r2]
   1133c:	cmp	r2, #0
   11340:	bxeq	lr
   11344:	b	10a40 <__gmon_start__@plt>
   11348:	andeq	r0, r1, r4, asr #25
   1134c:	andeq	r0, r0, r0, ror r0
   11350:	push	{r3, lr}
   11354:	movw	r0, #8488	; 0x2128
   11358:	ldr	r3, [pc, #36]	; 11384 <__snprintf_chk@plt+0x89c>
   1135c:	movt	r0, #2
   11360:	rsb	r3, r0, r3
   11364:	cmp	r3, #6
   11368:	popls	{r3, pc}
   1136c:	movw	r3, #0
   11370:	movt	r3, #0
   11374:	cmp	r3, #0
   11378:	popeq	{r3, pc}
   1137c:	blx	r3
   11380:	pop	{r3, pc}
   11384:	andeq	r2, r2, fp, lsr #2
   11388:	push	{r3, lr}
   1138c:	movw	r0, #8488	; 0x2128
   11390:	movw	r3, #8488	; 0x2128
   11394:	movt	r0, #2
   11398:	movt	r3, #2
   1139c:	rsb	r3, r0, r3
   113a0:	asr	r3, r3, #2
   113a4:	add	r3, r3, r3, lsr #31
   113a8:	asrs	r1, r3, #1
   113ac:	popeq	{r3, pc}
   113b0:	movw	r2, #0
   113b4:	movt	r2, #0
   113b8:	cmp	r2, #0
   113bc:	popeq	{r3, pc}
   113c0:	blx	r2
   113c4:	pop	{r3, pc}
   113c8:	push	{r4, lr}
   113cc:	movw	r4, #8508	; 0x213c
   113d0:	movt	r4, #2
   113d4:	ldrb	r3, [r4]
   113d8:	cmp	r3, #0
   113dc:	popne	{r4, pc}
   113e0:	bl	11350 <__snprintf_chk@plt+0x868>
   113e4:	mov	r3, #1
   113e8:	strb	r3, [r4]
   113ec:	pop	{r4, pc}
   113f0:	movw	r0, #7932	; 0x1efc
   113f4:	movt	r0, #2
   113f8:	push	{r3, lr}
   113fc:	ldr	r3, [r0]
   11400:	cmp	r3, #0
   11404:	beq	1141c <__snprintf_chk@plt+0x934>
   11408:	movw	r3, #0
   1140c:	movt	r3, #0
   11410:	cmp	r3, #0
   11414:	beq	1141c <__snprintf_chk@plt+0x934>
   11418:	blx	r3
   1141c:	pop	{r3, lr}
   11420:	b	11388 <__snprintf_chk@plt+0x8a0>
   11424:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11428:	mov	r7, r0
   1142c:	ldr	r6, [pc, #76]	; 11480 <__snprintf_chk@plt+0x998>
   11430:	mov	r8, r1
   11434:	ldr	r5, [pc, #72]	; 11484 <__snprintf_chk@plt+0x99c>
   11438:	mov	r9, r2
   1143c:	add	r6, pc, r6
   11440:	bl	109a8 <_init@@Base>
   11444:	add	r5, pc, r5
   11448:	rsb	r6, r5, r6
   1144c:	asrs	r6, r6, #2
   11450:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11454:	sub	r5, r5, #4
   11458:	mov	r4, #0
   1145c:	add	r4, r4, #1
   11460:	ldr	r3, [r5, #4]!
   11464:	mov	r0, r7
   11468:	mov	r1, r8
   1146c:	mov	r2, r9
   11470:	blx	r3
   11474:	cmp	r4, r6
   11478:	bne	1145c <__snprintf_chk@plt+0x974>
   1147c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11480:			; <UNDEFINED> instruction: 0x00010ab4
   11484:	andeq	r0, r1, r8, lsr #21
   11488:	bx	lr

Disassembly of section .fini:

0001148c <_fini@@Base>:
   1148c:	push	{r3, lr}
   11490:	pop	{r3, pc}
