
centos-preinstalled/gcm-picker:     file format elf32-littlearm


Disassembly of section .init:

00014730 <_init@@Base>:
   14730:	push	{r3, lr}
   14734:	bl	157fc <g_strcmp0@plt+0x2a8>
   14738:	pop	{r3, pc}

Disassembly of section .plt:

0001473c <g_object_new@plt-0x14>:
   1473c:	push	{lr}		; (str lr, [sp, #-4]!)
   14740:	ldr	lr, [pc, #4]	; 1474c <_init@@Base+0x1c>
   14744:	add	lr, pc, lr
   14748:	ldr	pc, [lr, #8]!
   1474c:	strdeq	ip, [r1], -r4

00014750 <g_object_new@plt>:
   14750:	add	ip, pc, #0, 12
   14754:	add	ip, ip, #28, 20	; 0x1c000
   14758:	ldr	pc, [ip, #1012]!	; 0x3f4

0001475c <gtk_combo_box_get_model@plt>:
   1475c:	add	ip, pc, #0, 12
   14760:	add	ip, ip, #28, 20	; 0x1c000
   14764:	ldr	pc, [ip, #1004]!	; 0x3ec

00014768 <gtk_application_new@plt>:
   14768:	add	ip, pc, #0, 12
   1476c:	add	ip, ip, #28, 20	; 0x1c000
   14770:	ldr	pc, [ip, #996]!	; 0x3e4

00014774 <g_object_ref@plt>:
   14774:	add	ip, pc, #0, 12
   14778:	add	ip, ip, #28, 20	; 0x1c000
   1477c:	ldr	pc, [ip, #988]!	; 0x3dc

00014780 <g_bus_get_sync@plt>:
   14780:	add	ip, pc, #0, 12
   14784:	add	ip, ip, #28, 20	; 0x1c000
   14788:	ldr	pc, [ip, #980]!	; 0x3d4

0001478c <g_option_context_parse@plt>:
   1478c:	add	ip, pc, #0, 12
   14790:	add	ip, ip, #28, 20	; 0x1c000
   14794:	ldr	pc, [ip, #972]!	; 0x3cc

00014798 <g_option_context_add_group@plt>:
   14798:	add	ip, pc, #0, 12
   1479c:	add	ip, ip, #28, 20	; 0x1c000
   147a0:	ldr	pc, [ip, #964]!	; 0x3c4

000147a4 <cairo_set_line_width@plt>:
   147a4:	add	ip, pc, #0, 12
   147a8:	add	ip, ip, #28, 20	; 0x1c000
   147ac:	ldr	pc, [ip, #956]!	; 0x3bc

000147b0 <cd_transform_set_input_pixel_format@plt>:
   147b0:	add	ip, pc, #0, 12
   147b4:	add	ip, ip, #28, 20	; 0x1c000
   147b8:	ldr	pc, [ip, #948]!	; 0x3b4

000147bc <cd_sensor_get_native@plt>:
   147bc:	add	ip, pc, #0, 12
   147c0:	add	ip, ip, #28, 20	; 0x1c000
   147c4:	ldr	pc, [ip, #940]!	; 0x3ac

000147c8 <cd_profile_get_title@plt>:
   147c8:	add	ip, pc, #0, 12
   147cc:	add	ip, ip, #28, 20	; 0x1c000
   147d0:	ldr	pc, [ip, #932]!	; 0x3a4

000147d4 <cd_transform_set_abstract_icc@plt>:
   147d4:	add	ip, pc, #0, 12
   147d8:	add	ip, ip, #28, 20	; 0x1c000
   147dc:	ldr	pc, [ip, #924]!	; 0x39c

000147e0 <cairo_scale@plt>:
   147e0:	add	ip, pc, #0, 12
   147e4:	add	ip, ip, #28, 20	; 0x1c000
   147e8:	ldr	pc, [ip, #916]!	; 0x394

000147ec <g_cclosure_marshal_VOID__UINT@plt>:
   147ec:	add	ip, pc, #0, 12
   147f0:	add	ip, ip, #28, 20	; 0x1c000
   147f4:	ldr	pc, [ip, #908]!	; 0x38c

000147f8 <gdk_x11_window_get_xid@plt>:
   147f8:	add	ip, pc, #0, 12
   147fc:	add	ip, ip, #28, 20	; 0x1c000
   14800:	ldr	pc, [ip, #900]!	; 0x384

00014804 <cd_profile_get_metadata_item@plt>:
   14804:	add	ip, pc, #0, 12
   14808:	add	ip, ip, #28, 20	; 0x1c000
   1480c:	ldr	pc, [ip, #892]!	; 0x37c

00014810 <TIFFClose@plt>:
   14810:	add	ip, pc, #0, 12
   14814:	add	ip, ip, #28, 20	; 0x1c000
   14818:	ldr	pc, [ip, #884]!	; 0x374

0001481c <g_return_if_fail_warning@plt>:
   1481c:	add	ip, pc, #0, 12
   14820:	add	ip, ip, #28, 20	; 0x1c000
   14824:	ldr	pc, [ip, #876]!	; 0x36c

00014828 <g_object_set_data_full@plt>:
   14828:	add	ip, pc, #0, 12
   1482c:	add	ip, ip, #28, 20	; 0x1c000
   14830:	ldr	pc, [ip, #868]!	; 0x364

00014834 <cd_transform_new@plt>:
   14834:	add	ip, pc, #0, 12
   14838:	add	ip, ip, #28, 20	; 0x1c000
   1483c:	ldr	pc, [ip, #860]!	; 0x35c

00014840 <cd_color_yxy_get_type@plt>:
   14840:	add	ip, pc, #0, 12
   14844:	add	ip, ip, #28, 20	; 0x1c000
   14848:	ldr	pc, [ip, #852]!	; 0x354

0001484c <g_type_register_static_simple@plt>:
   1484c:	add	ip, pc, #0, 12
   14850:	add	ip, ip, #28, 20	; 0x1c000
   14854:	ldr	pc, [ip, #844]!	; 0x34c

00014858 <gtk_list_store_set@plt>:
   14858:	add	ip, pc, #0, 12
   1485c:	add	ip, ip, #28, 20	; 0x1c000
   14860:	ldr	pc, [ip, #836]!	; 0x344

00014864 <gtk_print_context_get_width@plt>:
   14864:	add	ip, pc, #0, 12
   14868:	add	ip, ip, #28, 20	; 0x1c000
   1486c:	ldr	pc, [ip, #828]!	; 0x33c

00014870 <g_param_spec_boolean@plt>:
   14870:	add	ip, pc, #0, 12
   14874:	add	ip, ip, #28, 20	; 0x1c000
   14878:	ldr	pc, [ip, #820]!	; 0x334

0001487c <g_type_class_adjust_private_offset@plt>:
   1487c:	add	ip, pc, #0, 12
   14880:	add	ip, ip, #28, 20	; 0x1c000
   14884:	ldr	pc, [ip, #812]!	; 0x32c

00014888 <cd_profile_get_type@plt>:
   14888:	add	ip, pc, #0, 12
   1488c:	add	ip, ip, #28, 20	; 0x1c000
   14890:	ldr	pc, [ip, #804]!	; 0x324

00014894 <gtk_info_bar_new@plt>:
   14894:	add	ip, pc, #0, 12
   14898:	add	ip, ip, #28, 20	; 0x1c000
   1489c:	ldr	pc, [ip, #796]!	; 0x31c

000148a0 <g_variant_type_checked_@plt>:
   148a0:	add	ip, pc, #0, 12
   148a4:	add	ip, ip, #28, 20	; 0x1c000
   148a8:	ldr	pc, [ip, #788]!	; 0x314

000148ac <gdk_pixbuf_new_from_data@plt>:
   148ac:	add	ip, pc, #0, 12
   148b0:	add	ip, ip, #28, 20	; 0x1c000
   148b4:	ldr	pc, [ip, #780]!	; 0x30c

000148b8 <g_variant_new_uint32@plt>:
   148b8:	add	ip, pc, #0, 12
   148bc:	add	ip, ip, #28, 20	; 0x1c000
   148c0:	ldr	pc, [ip, #772]!	; 0x304

000148c4 <pango_context_set_base_gravity@plt>:
   148c4:	add	ip, pc, #0, 12
   148c8:	add	ip, ip, #28, 20	; 0x1c000
   148cc:	ldr	pc, [ip, #764]!	; 0x2fc

000148d0 <g_application_get_type@plt>:
   148d0:	add	ip, pc, #0, 12
   148d4:	add	ip, ip, #28, 20	; 0x1c000
   148d8:	ldr	pc, [ip, #756]!	; 0x2f4

000148dc <g_error_free@plt>:
   148dc:	add	ip, pc, #0, 12
   148e0:	add	ip, ip, #28, 20	; 0x1c000
   148e4:	ldr	pc, [ip, #748]!	; 0x2ec

000148e8 <g_variant_builder_end@plt>:
   148e8:	add	ip, pc, #0, 12
   148ec:	add	ip, ip, #28, 20	; 0x1c000
   148f0:	ldr	pc, [ip, #740]!	; 0x2e4

000148f4 <g_variant_new_string@plt>:
   148f4:	add	ip, pc, #0, 12
   148f8:	add	ip, ip, #28, 20	; 0x1c000
   148fc:	ldr	pc, [ip, #732]!	; 0x2dc

00014900 <bind_textdomain_codeset@plt>:
   14900:	add	ip, pc, #0, 12
   14904:	add	ip, ip, #28, 20	; 0x1c000
   14908:	ldr	pc, [ip, #724]!	; 0x2d4

0001490c <gtk_label_get_type@plt>:
   1490c:	add	ip, pc, #0, 12
   14910:	add	ip, ip, #28, 20	; 0x1c000
   14914:	ldr	pc, [ip, #716]!	; 0x2cc

00014918 <gtk_label_set_label@plt>:
   14918:	add	ip, pc, #0, 12
   1491c:	add	ip, ip, #28, 20	; 0x1c000
   14920:	ldr	pc, [ip, #708]!	; 0x2c4

00014924 <gtk_cell_layout_pack_start@plt>:
   14924:	add	ip, pc, #0, 12
   14928:	add	ip, ip, #28, 20	; 0x1c000
   1492c:	ldr	pc, [ip, #700]!	; 0x2bc

00014930 <g_param_spec_string@plt>:
   14930:	add	ip, pc, #0, 12
   14934:	add	ip, ip, #28, 20	; 0x1c000
   14938:	ldr	pc, [ip, #692]!	; 0x2b4

0001493c <gtk_get_option_group@plt>:
   1493c:	add	ip, pc, #0, 12
   14940:	add	ip, ip, #28, 20	; 0x1c000
   14944:	ldr	pc, [ip, #684]!	; 0x2ac

00014948 <g_variant_builder_add_value@plt>:
   14948:	add	ip, pc, #0, 12
   1494c:	add	ip, ip, #28, 20	; 0x1c000
   14950:	ldr	pc, [ip, #676]!	; 0x2a4

00014954 <TIFFOpen@plt>:
   14954:	add	ip, pc, #0, 12
   14958:	add	ip, ip, #28, 20	; 0x1c000
   1495c:	ldr	pc, [ip, #668]!	; 0x29c

00014960 <__gcc_personality_v0@plt>:
   14960:	add	ip, pc, #0, 12
   14964:	add	ip, ip, #28, 20	; 0x1c000
   14968:	ldr	pc, [ip, #660]!	; 0x294

0001496c <g_log_set_handler@plt>:
   1496c:	add	ip, pc, #0, 12
   14970:	add	ip, ip, #28, 20	; 0x1c000
   14974:	ldr	pc, [ip, #652]!	; 0x28c

00014978 <gtk_widget_get_type@plt>:
   14978:	add	ip, pc, #0, 12
   1497c:	add	ip, ip, #28, 20	; 0x1c000
   14980:	ldr	pc, [ip, #644]!	; 0x284

00014984 <g_string_new@plt>:
   14984:	add	ip, pc, #0, 12
   14988:	add	ip, ip, #28, 20	; 0x1c000
   1498c:	ldr	pc, [ip, #636]!	; 0x27c

00014990 <cd_profile_connect_sync@plt>:
   14990:	add	ip, pc, #0, 12
   14994:	add	ip, ip, #28, 20	; 0x1c000
   14998:	ldr	pc, [ip, #628]!	; 0x274

0001499c <gtk_info_bar_get_content_area@plt>:
   1499c:	add	ip, pc, #0, 12
   149a0:	add	ip, ip, #28, 20	; 0x1c000
   149a4:	ldr	pc, [ip, #620]!	; 0x26c

000149a8 <g_type_check_instance_cast@plt>:
   149a8:	add	ip, pc, #0, 12
   149ac:	add	ip, ip, #28, 20	; 0x1c000
   149b0:	ldr	pc, [ip, #612]!	; 0x264

000149b4 <g_option_context_new@plt>:
   149b4:	add	ip, pc, #0, 12
   149b8:	add	ip, ip, #28, 20	; 0x1c000
   149bc:	ldr	pc, [ip, #604]!	; 0x25c

000149c0 <cd_profile_get_filename@plt>:
   149c0:	add	ip, pc, #0, 12
   149c4:	add	ip, ip, #28, 20	; 0x1c000
   149c8:	ldr	pc, [ip, #596]!	; 0x254

000149cc <cd_transform_set_input_icc@plt>:
   149cc:	add	ip, pc, #0, 12
   149d0:	add	ip, ip, #28, 20	; 0x1c000
   149d4:	ldr	pc, [ip, #588]!	; 0x24c

000149d8 <cairo_move_to@plt>:
   149d8:	add	ip, pc, #0, 12
   149dc:	add	ip, ip, #28, 20	; 0x1c000
   149e0:	ldr	pc, [ip, #580]!	; 0x244

000149e4 <gtk_combo_box_set_active@plt>:
   149e4:	add	ip, pc, #0, 12
   149e8:	add	ip, ip, #28, 20	; 0x1c000
   149ec:	ldr	pc, [ip, #572]!	; 0x23c

000149f0 <g_variant_builder_new@plt>:
   149f0:	add	ip, pc, #0, 12
   149f4:	add	ip, ip, #28, 20	; 0x1c000
   149f8:	ldr	pc, [ip, #564]!	; 0x234

000149fc <gtk_widget_get_window@plt>:
   149fc:	add	ip, pc, #0, 12
   14a00:	add	ip, ip, #28, 20	; 0x1c000
   14a04:	ldr	pc, [ip, #556]!	; 0x22c

00014a08 <gtk_widget_hide@plt>:
   14a08:	add	ip, pc, #0, 12
   14a0c:	add	ip, ip, #28, 20	; 0x1c000
   14a10:	ldr	pc, [ip, #548]!	; 0x224

00014a14 <gdk_pixbuf_get_colorspace@plt>:
   14a14:	add	ip, pc, #0, 12
   14a18:	add	ip, ip, #28, 20	; 0x1c000
   14a1c:	ldr	pc, [ip, #540]!	; 0x21c

00014a20 <g_string_append_len@plt>:
   14a20:	add	ip, pc, #0, 12
   14a24:	add	ip, ip, #28, 20	; 0x1c000
   14a28:	ldr	pc, [ip, #532]!	; 0x214

00014a2c <g_option_group_new@plt>:
   14a2c:	add	ip, pc, #0, 12
   14a30:	add	ip, ip, #28, 20	; 0x1c000
   14a34:	ldr	pc, [ip, #524]!	; 0x20c

00014a38 <g_log@plt>:
   14a38:	add	ip, pc, #0, 12
   14a3c:	add	ip, ip, #28, 20	; 0x1c000
   14a40:	ldr	pc, [ip, #516]!	; 0x204

00014a44 <g_option_context_set_summary@plt>:
   14a44:	add	ip, pc, #0, 12
   14a48:	add	ip, ip, #28, 20	; 0x1c000
   14a4c:	ldr	pc, [ip, #508]!	; 0x1fc

00014a50 <gdk_cairo_surface_create_from_pixbuf@plt>:
   14a50:	add	ip, pc, #0, 12
   14a54:	add	ip, ip, #28, 20	; 0x1c000
   14a58:	ldr	pc, [ip, #500]!	; 0x1f4

00014a5c <g_type_name@plt>:
   14a5c:	add	ip, pc, #0, 12
   14a60:	add	ip, ip, #28, 20	; 0x1c000
   14a64:	ldr	pc, [ip, #492]!	; 0x1ec

00014a68 <g_main_loop_quit@plt>:
   14a68:	add	ip, pc, #0, 12
   14a6c:	add	ip, ip, #28, 20	; 0x1c000
   14a70:	ldr	pc, [ip, #484]!	; 0x1e4

00014a74 <gtk_expander_get_type@plt>:
   14a74:	add	ip, pc, #0, 12
   14a78:	add	ip, ip, #28, 20	; 0x1c000
   14a7c:	ldr	pc, [ip, #476]!	; 0x1dc

00014a80 <gdk_pixbuf_get_n_channels@plt>:
   14a80:	add	ip, pc, #0, 12
   14a84:	add	ip, ip, #28, 20	; 0x1c000
   14a88:	ldr	pc, [ip, #468]!	; 0x1d4

00014a8c <gtk_print_operation_get_status@plt>:
   14a8c:	add	ip, pc, #0, 12
   14a90:	add	ip, ip, #28, 20	; 0x1c000
   14a94:	ldr	pc, [ip, #460]!	; 0x1cc

00014a98 <g_build_filename@plt>:
   14a98:	add	ip, pc, #0, 12
   14a9c:	add	ip, ip, #28, 20	; 0x1c000
   14aa0:	ldr	pc, [ip, #452]!	; 0x1c4

00014aa4 <gtk_image_set_from_file@plt>:
   14aa4:	add	ip, pc, #0, 12
   14aa8:	add	ip, ip, #28, 20	; 0x1c000
   14aac:	ldr	pc, [ip, #444]!	; 0x1bc

00014ab0 <cd_sensor_get_locked@plt>:
   14ab0:	add	ip, pc, #0, 12
   14ab4:	add	ip, ip, #28, 20	; 0x1c000
   14ab8:	ldr	pc, [ip, #436]!	; 0x1b4

00014abc <g_value_set_uint@plt>:
   14abc:	add	ip, pc, #0, 12
   14ac0:	add	ip, ip, #28, 20	; 0x1c000
   14ac4:	ldr	pc, [ip, #428]!	; 0x1ac

00014ac8 <cairo_rectangle@plt>:
   14ac8:	add	ip, pc, #0, 12
   14acc:	add	ip, ip, #28, 20	; 0x1c000
   14ad0:	ldr	pc, [ip, #420]!	; 0x1a4

00014ad4 <gtk_application_add_window@plt>:
   14ad4:	add	ip, pc, #0, 12
   14ad8:	add	ip, ip, #28, 20	; 0x1c000
   14adc:	ldr	pc, [ip, #412]!	; 0x19c

00014ae0 <gtk_window_set_icon_name@plt>:
   14ae0:	add	ip, pc, #0, 12
   14ae4:	add	ip, ip, #28, 20	; 0x1c000
   14ae8:	ldr	pc, [ip, #404]!	; 0x194

00014aec <g_variant_new_strv@plt>:
   14aec:	add	ip, pc, #0, 12
   14af0:	add	ip, ip, #28, 20	; 0x1c000
   14af4:	ldr	pc, [ip, #396]!	; 0x18c

00014af8 <g_file_get_path@plt>:
   14af8:	add	ip, pc, #0, 12
   14afc:	add	ip, ip, #28, 20	; 0x1c000
   14b00:	ldr	pc, [ip, #388]!	; 0x184

00014b04 <g_set_error_literal@plt>:
   14b04:	add	ip, pc, #0, 12
   14b08:	add	ip, ip, #28, 20	; 0x1c000
   14b0c:	ldr	pc, [ip, #380]!	; 0x17c

00014b10 <cd_color_yxy_copy@plt>:
   14b10:	add	ip, pc, #0, 12
   14b14:	add	ip, ip, #28, 20	; 0x1c000
   14b18:	ldr	pc, [ip, #372]!	; 0x174

00014b1c <cd_sensor_unlock_sync@plt>:
   14b1c:	add	ip, pc, #0, 12
   14b20:	add	ip, ip, #28, 20	; 0x1c000
   14b24:	ldr	pc, [ip, #364]!	; 0x16c

00014b28 <gtk_expander_set_expanded@plt>:
   14b28:	add	ip, pc, #0, 12
   14b2c:	add	ip, ip, #28, 20	; 0x1c000
   14b30:	ldr	pc, [ip, #356]!	; 0x164

00014b34 <cmsSetLogErrorHandler@plt>:
   14b34:	add	ip, pc, #0, 12
   14b38:	add	ip, ip, #28, 20	; 0x1c000
   14b3c:	ldr	pc, [ip, #348]!	; 0x15c

00014b40 <cd_sensor_connect_sync@plt>:
   14b40:	add	ip, pc, #0, 12
   14b44:	add	ip, ip, #28, 20	; 0x1c000
   14b48:	ldr	pc, [ip, #340]!	; 0x154

00014b4c <gtk_print_operation_set_use_full_page@plt>:
   14b4c:	add	ip, pc, #0, 12
   14b50:	add	ip, ip, #28, 20	; 0x1c000
   14b54:	ldr	pc, [ip, #332]!	; 0x14c

00014b58 <cmsDoTransform@plt>:
   14b58:	add	ip, pc, #0, 12
   14b5c:	add	ip, ip, #28, 20	; 0x1c000
   14b60:	ldr	pc, [ip, #324]!	; 0x144

00014b64 <g_memdup@plt>:
   14b64:	add	ip, pc, #0, 12
   14b68:	add	ip, ip, #28, 20	; 0x1c000
   14b6c:	ldr	pc, [ip, #316]!	; 0x13c

00014b70 <textdomain@plt>:
   14b70:	add	ip, pc, #0, 12
   14b74:	add	ip, ip, #28, 20	; 0x1c000
   14b78:	ldr	pc, [ip, #308]!	; 0x134

00014b7c <gdk_pixbuf_get_rowstride@plt>:
   14b7c:	add	ip, pc, #0, 12
   14b80:	add	ip, ip, #28, 20	; 0x1c000
   14b84:	ldr	pc, [ip, #300]!	; 0x12c

00014b88 <g_option_group_set_parse_hooks@plt>:
   14b88:	add	ip, pc, #0, 12
   14b8c:	add	ip, ip, #28, 20	; 0x1c000
   14b90:	ldr	pc, [ip, #292]!	; 0x124

00014b94 <cairo_save@plt>:
   14b94:	add	ip, pc, #0, 12
   14b98:	add	ip, ip, #28, 20	; 0x1c000
   14b9c:	ldr	pc, [ip, #284]!	; 0x11c

00014ba0 <g_file_query_info@plt>:
   14ba0:	add	ip, pc, #0, 12
   14ba4:	add	ip, ip, #28, 20	; 0x1c000
   14ba8:	ldr	pc, [ip, #276]!	; 0x114

00014bac <cairo_set_source_rgb@plt>:
   14bac:	add	ip, pc, #0, 12
   14bb0:	add	ip, ip, #28, 20	; 0x1c000
   14bb4:	ldr	pc, [ip, #268]!	; 0x10c

00014bb8 <g_signal_emit@plt>:
   14bb8:	add	ip, pc, #0, 12
   14bbc:	add	ip, ip, #28, 20	; 0x1c000
   14bc0:	ldr	pc, [ip, #260]!	; 0x104

00014bc4 <g_strdup@plt>:
   14bc4:	add	ip, pc, #0, 12
   14bc8:	add	ip, ip, #28, 20	; 0x1c000
   14bcc:	ldr	pc, [ip, #252]!	; 0xfc

00014bd0 <cd_color_xyz_free@plt>:
   14bd0:	add	ip, pc, #0, 12
   14bd4:	add	ip, ip, #28, 20	; 0x1c000
   14bd8:	ldr	pc, [ip, #244]!	; 0xf4

00014bdc <strftime@plt>:
   14bdc:	add	ip, pc, #0, 12
   14be0:	add	ip, ip, #28, 20	; 0x1c000
   14be4:	ldr	pc, [ip, #236]!	; 0xec

00014be8 <gtk_combo_box_get_active_iter@plt>:
   14be8:	add	ip, pc, #0, 12
   14bec:	add	ip, ip, #28, 20	; 0x1c000
   14bf0:	ldr	pc, [ip, #228]!	; 0xe4

00014bf4 <g_strchomp@plt>:
   14bf4:	add	ip, pc, #0, 12
   14bf8:	add	ip, ip, #28, 20	; 0x1c000
   14bfc:	ldr	pc, [ip, #220]!	; 0xdc

00014c00 <gtk_info_bar_get_type@plt>:
   14c00:	add	ip, pc, #0, 12
   14c04:	add	ip, ip, #28, 20	; 0x1c000
   14c08:	ldr	pc, [ip, #212]!	; 0xd4

00014c0c <memset@plt>:
   14c0c:	add	ip, pc, #0, 12
   14c10:	add	ip, ip, #28, 20	; 0x1c000
   14c14:	ldr	pc, [ip, #204]!	; 0xcc

00014c18 <g_variant_builder_unref@plt>:
   14c18:	add	ip, pc, #0, 12
   14c1c:	add	ip, ip, #28, 20	; 0x1c000
   14c20:	ldr	pc, [ip, #196]!	; 0xc4

00014c24 <cmsTempFromWhitePoint@plt>:
   14c24:	add	ip, pc, #0, 12
   14c28:	add	ip, ip, #28, 20	; 0x1c000
   14c2c:	ldr	pc, [ip, #188]!	; 0xbc

00014c30 <gtk_tree_sortable_get_type@plt>:
   14c30:	add	ip, pc, #0, 12
   14c34:	add	ip, ip, #28, 20	; 0x1c000
   14c38:	ldr	pc, [ip, #180]!	; 0xb4

00014c3c <gtk_print_settings_new@plt>:
   14c3c:	add	ip, pc, #0, 12
   14c40:	add	ip, ip, #28, 20	; 0x1c000
   14c44:	ldr	pc, [ip, #172]!	; 0xac

00014c48 <gtk_container_get_type@plt>:
   14c48:	add	ip, pc, #0, 12
   14c4c:	add	ip, ip, #28, 20	; 0x1c000
   14c50:	ldr	pc, [ip, #164]!	; 0xa4

00014c54 <gtk_builder_get_object@plt>:
   14c54:	add	ip, pc, #0, 12
   14c58:	add	ip, ip, #28, 20	; 0x1c000
   14c5c:	ldr	pc, [ip, #156]!	; 0x9c

00014c60 <gtk_print_operation_set_embed_page_setup@plt>:
   14c60:	add	ip, pc, #0, 12
   14c64:	add	ip, ip, #28, 20	; 0x1c000
   14c68:	ldr	pc, [ip, #148]!	; 0x94

00014c6c <cd_client_get_profiles_sync@plt>:
   14c6c:	add	ip, pc, #0, 12
   14c70:	add	ip, ip, #28, 20	; 0x1c000
   14c74:	ldr	pc, [ip, #140]!	; 0x8c

00014c78 <g_ascii_tolower@plt>:
   14c78:	add	ip, pc, #0, 12
   14c7c:	add	ip, ip, #28, 20	; 0x1c000
   14c80:	ldr	pc, [ip, #132]!	; 0x84

00014c84 <g_ptr_array_new_with_free_func@plt>:
   14c84:	add	ip, pc, #0, 12
   14c88:	add	ip, ip, #28, 20	; 0x1c000
   14c8c:	ldr	pc, [ip, #124]!	; 0x7c

00014c90 <gtk_image_set_from_pixbuf@plt>:
   14c90:	add	ip, pc, #0, 12
   14c94:	add	ip, ip, #28, 20	; 0x1c000
   14c98:	ldr	pc, [ip, #116]!	; 0x74

00014c9c <g_strdup_printf@plt>:
   14c9c:	add	ip, pc, #0, 12
   14ca0:	add	ip, ip, #28, 20	; 0x1c000
   14ca4:	ldr	pc, [ip, #108]!	; 0x6c

00014ca8 <gtk_show_uri@plt>:
   14ca8:	add	ip, pc, #0, 12
   14cac:	add	ip, ip, #28, 20	; 0x1c000
   14cb0:	ldr	pc, [ip, #100]!	; 0x64

00014cb4 <gtk_icon_theme_append_search_path@plt>:
   14cb4:	add	ip, pc, #0, 12
   14cb8:	add	ip, ip, #28, 20	; 0x1c000
   14cbc:	ldr	pc, [ip, #92]!	; 0x5c

00014cc0 <g_main_loop_run@plt>:
   14cc0:	add	ip, pc, #0, 12
   14cc4:	add	ip, ip, #28, 20	; 0x1c000
   14cc8:	ldr	pc, [ip, #84]!	; 0x54

00014ccc <g_signal_new@plt>:
   14ccc:	add	ip, pc, #0, 12
   14cd0:	add	ip, ip, #28, 20	; 0x1c000
   14cd4:	ldr	pc, [ip, #76]!	; 0x4c

00014cd8 <g_application_run@plt>:
   14cd8:	add	ip, pc, #0, 12
   14cdc:	add	ip, ip, #28, 20	; 0x1c000
   14ce0:	ldr	pc, [ip, #68]!	; 0x44

00014ce4 <gtk_widget_get_allocated_width@plt>:
   14ce4:	add	ip, pc, #0, 12
   14ce8:	add	ip, ip, #28, 20	; 0x1c000
   14cec:	ldr	pc, [ip, #60]!	; 0x3c

00014cf0 <pango_font_description_free@plt>:
   14cf0:	add	ip, pc, #0, 12
   14cf4:	add	ip, ip, #28, 20	; 0x1c000
   14cf8:	ldr	pc, [ip, #52]!	; 0x34

00014cfc <gtk_combo_box_get_type@plt>:
   14cfc:	add	ip, pc, #0, 12
   14d00:	add	ip, ip, #28, 20	; 0x1c000
   14d04:	ldr	pc, [ip, #44]!	; 0x2c

00014d08 <g_main_loop_new@plt>:
   14d08:	add	ip, pc, #0, 12
   14d0c:	add	ip, ip, #28, 20	; 0x1c000
   14d10:	ldr	pc, [ip, #36]!	; 0x24

00014d14 <abort@plt>:
   14d14:	add	ip, pc, #0, 12
   14d18:	add	ip, ip, #28, 20	; 0x1c000
   14d1c:	ldr	pc, [ip, #28]!

00014d20 <gdk_pixbuf_get_height@plt>:
   14d20:	add	ip, pc, #0, 12
   14d24:	add	ip, ip, #28, 20	; 0x1c000
   14d28:	ldr	pc, [ip, #20]!

00014d2c <gtk_label_new@plt>:
   14d2c:	add	ip, pc, #0, 12
   14d30:	add	ip, ip, #28, 20	; 0x1c000
   14d34:	ldr	pc, [ip, #12]!

00014d38 <TIFFGetField@plt>:
   14d38:	add	ip, pc, #0, 12
   14d3c:	add	ip, ip, #28, 20	; 0x1c000
   14d40:	ldr	pc, [ip, #4]!

00014d44 <g_strsplit@plt>:
   14d44:	add	ip, pc, #0, 12
   14d48:	add	ip, ip, #110592	; 0x1b000
   14d4c:	ldr	pc, [ip, #4092]!	; 0xffc

00014d50 <gtk_cell_renderer_text_new@plt>:
   14d50:	add	ip, pc, #0, 12
   14d54:	add	ip, ip, #110592	; 0x1b000
   14d58:	ldr	pc, [ip, #4084]!	; 0xff4

00014d5c <cd_device_connect_sync@plt>:
   14d5c:	add	ip, pc, #0, 12
   14d60:	add	ip, ip, #110592	; 0x1b000
   14d64:	ldr	pc, [ip, #4076]!	; 0xfec

00014d68 <gdk_pixbuf_get_bits_per_sample@plt>:
   14d68:	add	ip, pc, #0, 12
   14d6c:	add	ip, ip, #110592	; 0x1b000
   14d70:	ldr	pc, [ip, #4068]!	; 0xfe4

00014d74 <g_value_set_boolean@plt>:
   14d74:	add	ip, pc, #0, 12
   14d78:	add	ip, ip, #110592	; 0x1b000
   14d7c:	ldr	pc, [ip, #4060]!	; 0xfdc

00014d80 <g_value_set_string@plt>:
   14d80:	add	ip, pc, #0, 12
   14d84:	add	ip, ip, #110592	; 0x1b000
   14d88:	ldr	pc, [ip, #4052]!	; 0xfd4

00014d8c <gdk_pixbuf_get_width@plt>:
   14d8c:	add	ip, pc, #0, 12
   14d90:	add	ip, ip, #110592	; 0x1b000
   14d94:	ldr	pc, [ip, #4044]!	; 0xfcc

00014d98 <gtk_widget_set_size_request@plt>:
   14d98:	add	ip, pc, #0, 12
   14d9c:	add	ip, ip, #110592	; 0x1b000
   14da0:	ldr	pc, [ip, #4036]!	; 0xfc4

00014da4 <gtk_container_add@plt>:
   14da4:	add	ip, pc, #0, 12
   14da8:	add	ip, ip, #110592	; 0x1b000
   14dac:	ldr	pc, [ip, #4028]!	; 0xfbc

00014db0 <gdk_display_get_default@plt>:
   14db0:	add	ip, pc, #0, 12
   14db4:	add	ip, ip, #110592	; 0x1b000
   14db8:	ldr	pc, [ip, #4020]!	; 0xfb4

00014dbc <g_value_get_boolean@plt>:
   14dbc:	add	ip, pc, #0, 12
   14dc0:	add	ip, ip, #110592	; 0x1b000
   14dc4:	ldr	pc, [ip, #4012]!	; 0xfac

00014dc8 <g_type_instance_get_private@plt>:
   14dc8:	add	ip, pc, #0, 12
   14dcc:	add	ip, ip, #110592	; 0x1b000
   14dd0:	ldr	pc, [ip, #4004]!	; 0xfa4

00014dd4 <g_str_has_prefix@plt>:
   14dd4:	add	ip, pc, #0, 12
   14dd8:	add	ip, ip, #110592	; 0x1b000
   14ddc:	ldr	pc, [ip, #3996]!	; 0xf9c

00014de0 <localtime@plt>:
   14de0:	add	ip, pc, #0, 12
   14de4:	add	ip, ip, #110592	; 0x1b000
   14de8:	ldr	pc, [ip, #3988]!	; 0xf94

00014dec <gtk_widget_get_allocation@plt>:
   14dec:	add	ip, pc, #0, 12
   14df0:	add	ip, ip, #110592	; 0x1b000
   14df4:	ldr	pc, [ip, #3980]!	; 0xf8c

00014df8 <gtk_box_get_type@plt>:
   14df8:	add	ip, pc, #0, 12
   14dfc:	add	ip, ip, #110592	; 0x1b000
   14e00:	ldr	pc, [ip, #3972]!	; 0xf84

00014e04 <g_idle_add@plt>:
   14e04:	add	ip, pc, #0, 12
   14e08:	add	ip, ip, #110592	; 0x1b000
   14e0c:	ldr	pc, [ip, #3964]!	; 0xf7c

00014e10 <gtk_application_get_type@plt>:
   14e10:	add	ip, pc, #0, 12
   14e14:	add	ip, ip, #110592	; 0x1b000
   14e18:	ldr	pc, [ip, #3956]!	; 0xf74

00014e1c <g_signal_connect_data@plt>:
   14e1c:	add	ip, pc, #0, 12
   14e20:	add	ip, ip, #110592	; 0x1b000
   14e24:	ldr	pc, [ip, #3948]!	; 0xf6c

00014e28 <g_once_init_enter@plt>:
   14e28:	add	ip, pc, #0, 12
   14e2c:	add	ip, ip, #110592	; 0x1b000
   14e30:	ldr	pc, [ip, #3940]!	; 0xf64

00014e34 <gtk_print_operation_set_n_pages@plt>:
   14e34:	add	ip, pc, #0, 12
   14e38:	add	ip, ip, #110592	; 0x1b000
   14e3c:	ldr	pc, [ip, #3932]!	; 0xf5c

00014e40 <cmsCreateXYZProfile@plt>:
   14e40:	add	ip, pc, #0, 12
   14e44:	add	ip, ip, #110592	; 0x1b000
   14e48:	ldr	pc, [ip, #3924]!	; 0xf54

00014e4c <gtk_print_context_get_page_setup@plt>:
   14e4c:	add	ip, pc, #0, 12
   14e50:	add	ip, ip, #110592	; 0x1b000
   14e54:	ldr	pc, [ip, #3916]!	; 0xf4c

00014e58 <gtk_print_context_get_height@plt>:
   14e58:	add	ip, pc, #0, 12
   14e5c:	add	ip, ip, #110592	; 0x1b000
   14e60:	ldr	pc, [ip, #3908]!	; 0xf44

00014e64 <cmsCreateTransform@plt>:
   14e64:	add	ip, pc, #0, 12
   14e68:	add	ip, ip, #110592	; 0x1b000
   14e6c:	ldr	pc, [ip, #3900]!	; 0xf3c

00014e70 <gtk_widget_destroy@plt>:
   14e70:	add	ip, pc, #0, 12
   14e74:	add	ip, ip, #110592	; 0x1b000
   14e78:	ldr	pc, [ip, #3892]!	; 0xf34

00014e7c <gdk_window_set_transient_for@plt>:
   14e7c:	add	ip, pc, #0, 12
   14e80:	add	ip, ip, #110592	; 0x1b000
   14e84:	ldr	pc, [ip, #3884]!	; 0xf2c

00014e88 <gtk_box_pack_start@plt>:
   14e88:	add	ip, pc, #0, 12
   14e8c:	add	ip, ip, #110592	; 0x1b000
   14e90:	ldr	pc, [ip, #3876]!	; 0xf24

00014e94 <cairo_stroke_preserve@plt>:
   14e94:	add	ip, pc, #0, 12
   14e98:	add	ip, ip, #110592	; 0x1b000
   14e9c:	ldr	pc, [ip, #3868]!	; 0xf1c

00014ea0 <gtk_print_operation_new@plt>:
   14ea0:	add	ip, pc, #0, 12
   14ea4:	add	ip, ip, #110592	; 0x1b000
   14ea8:	ldr	pc, [ip, #3860]!	; 0xf14

00014eac <g_dbus_connection_call_sync@plt>:
   14eac:	add	ip, pc, #0, 12
   14eb0:	add	ip, ip, #110592	; 0x1b000
   14eb4:	ldr	pc, [ip, #3852]!	; 0xf0c

00014eb8 <g_ptr_array_set_size@plt>:
   14eb8:	add	ip, pc, #0, 12
   14ebc:	add	ip, ip, #110592	; 0x1b000
   14ec0:	ldr	pc, [ip, #3844]!	; 0xf04

00014ec4 <gtk_print_operation_set_show_progress@plt>:
   14ec4:	add	ip, pc, #0, 12
   14ec8:	add	ip, ip, #110592	; 0x1b000
   14ecc:	ldr	pc, [ip, #3836]!	; 0xefc

00014ed0 <g_intern_static_string@plt>:
   14ed0:	add	ip, pc, #0, 12
   14ed4:	add	ip, ip, #110592	; 0x1b000
   14ed8:	ldr	pc, [ip, #3828]!	; 0xef4

00014edc <gtk_print_context_get_cairo_context@plt>:
   14edc:	add	ip, pc, #0, 12
   14ee0:	add	ip, ip, #110592	; 0x1b000
   14ee4:	ldr	pc, [ip, #3820]!	; 0xeec

00014ee8 <gtk_image_get_type@plt>:
   14ee8:	add	ip, pc, #0, 12
   14eec:	add	ip, ip, #110592	; 0x1b000
   14ef0:	ldr	pc, [ip, #3812]!	; 0xee4

00014ef4 <g_strstr_len@plt>:
   14ef4:	add	ip, pc, #0, 12
   14ef8:	add	ip, ip, #110592	; 0x1b000
   14efc:	ldr	pc, [ip, #3804]!	; 0xedc

00014f00 <g_strfreev@plt>:
   14f00:	add	ip, pc, #0, 12
   14f04:	add	ip, ip, #110592	; 0x1b000
   14f08:	ldr	pc, [ip, #3796]!	; 0xed4

00014f0c <g_strv_length@plt>:
   14f0c:	add	ip, pc, #0, 12
   14f10:	add	ip, ip, #110592	; 0x1b000
   14f14:	ldr	pc, [ip, #3788]!	; 0xecc

00014f18 <g_option_context_free@plt>:
   14f18:	add	ip, pc, #0, 12
   14f1c:	add	ip, ip, #110592	; 0x1b000
   14f20:	ldr	pc, [ip, #3780]!	; 0xec4

00014f24 <g_ptr_array_get_type@plt>:
   14f24:	add	ip, pc, #0, 12
   14f28:	add	ip, ip, #110592	; 0x1b000
   14f2c:	ldr	pc, [ip, #3772]!	; 0xebc

00014f30 <fileno@plt>:
   14f30:	add	ip, pc, #0, 12
   14f34:	add	ip, ip, #110592	; 0x1b000
   14f38:	ldr	pc, [ip, #3764]!	; 0xeb4

00014f3c <__stack_chk_fail@plt>:
   14f3c:	add	ip, pc, #0, 12
   14f40:	add	ip, ip, #110592	; 0x1b000
   14f44:	ldr	pc, [ip, #3756]!	; 0xeac

00014f48 <gdk_x11_window_foreign_new_for_display@plt>:
   14f48:	add	ip, pc, #0, 12
   14f4c:	add	ip, ip, #110592	; 0x1b000
   14f50:	ldr	pc, [ip, #3748]!	; 0xea4

00014f54 <gtk_list_store_new@plt>:
   14f54:	add	ip, pc, #0, 12
   14f58:	add	ip, ip, #110592	; 0x1b000
   14f5c:	ldr	pc, [ip, #3740]!	; 0xe9c

00014f60 <g_getenv@plt>:
   14f60:	add	ip, pc, #0, 12
   14f64:	add	ip, ip, #110592	; 0x1b000
   14f68:	ldr	pc, [ip, #3732]!	; 0xe94

00014f6c <g_spawn_sync@plt>:
   14f6c:	add	ip, pc, #0, 12
   14f70:	add	ip, ip, #110592	; 0x1b000
   14f74:	ldr	pc, [ip, #3724]!	; 0xe8c

00014f78 <g_static_resource_get_resource@plt>:
   14f78:	add	ip, pc, #0, 12
   14f7c:	add	ip, ip, #110592	; 0x1b000
   14f80:	ldr	pc, [ip, #3716]!	; 0xe84

00014f84 <isatty@plt>:
   14f84:	add	ip, pc, #0, 12
   14f88:	add	ip, ip, #110592	; 0x1b000
   14f8c:	ldr	pc, [ip, #3708]!	; 0xe7c

00014f90 <cd_device_get_default_profile@plt>:
   14f90:	add	ip, pc, #0, 12
   14f94:	add	ip, ip, #110592	; 0x1b000
   14f98:	ldr	pc, [ip, #3700]!	; 0xe74

00014f9c <gtk_combo_box_set_active_iter@plt>:
   14f9c:	add	ip, pc, #0, 12
   14fa0:	add	ip, ip, #110592	; 0x1b000
   14fa4:	ldr	pc, [ip, #3692]!	; 0xe6c

00014fa8 <g_free@plt>:
   14fa8:	add	ip, pc, #0, 12
   14fac:	add	ip, ip, #110592	; 0x1b000
   14fb0:	ldr	pc, [ip, #3684]!	; 0xe64

00014fb4 <cairo_line_to@plt>:
   14fb4:	add	ip, pc, #0, 12
   14fb8:	add	ip, ip, #110592	; 0x1b000
   14fbc:	ldr	pc, [ip, #3676]!	; 0xe5c

00014fc0 <cd_color_yxy_free@plt>:
   14fc0:	add	ip, pc, #0, 12
   14fc4:	add	ip, ip, #110592	; 0x1b000
   14fc8:	ldr	pc, [ip, #3668]!	; 0xe54

00014fcc <dcgettext@plt>:
   14fcc:	add	ip, pc, #0, 12
   14fd0:	add	ip, ip, #110592	; 0x1b000
   14fd4:	ldr	pc, [ip, #3660]!	; 0xe4c

00014fd8 <cmsDeleteTransform@plt>:
   14fd8:	add	ip, pc, #0, 12
   14fdc:	add	ip, ip, #110592	; 0x1b000
   14fe0:	ldr	pc, [ip, #3652]!	; 0xe44

00014fe4 <cd_profile_get_has_vcgt@plt>:
   14fe4:	add	ip, pc, #0, 12
   14fe8:	add	ip, ip, #110592	; 0x1b000
   14fec:	ldr	pc, [ip, #3644]!	; 0xe3c

00014ff0 <cairo_surface_destroy@plt>:
   14ff0:	add	ip, pc, #0, 12
   14ff4:	add	ip, ip, #110592	; 0x1b000
   14ff8:	ldr	pc, [ip, #3636]!	; 0xe34

00014ffc <g_type_add_instance_private@plt>:
   14ffc:	add	ip, pc, #0, 12
   15000:	add	ip, ip, #110592	; 0x1b000
   15004:	ldr	pc, [ip, #3628]!	; 0xe2c

00015008 <cd_sensor_lock_sync@plt>:
   15008:	add	ip, pc, #0, 12
   1500c:	add	ip, ip, #110592	; 0x1b000
   15010:	ldr	pc, [ip, #3620]!	; 0xe24

00015014 <gtk_image_get_pixbuf@plt>:
   15014:	add	ip, pc, #0, 12
   15018:	add	ip, ip, #110592	; 0x1b000
   1501c:	ldr	pc, [ip, #3612]!	; 0xe1c

00015020 <g_object_set@plt>:
   15020:	add	ip, pc, #0, 12
   15024:	add	ip, ip, #110592	; 0x1b000
   15028:	ldr	pc, [ip, #3604]!	; 0xe14

0001502c <gdk_pixbuf_new_from_file@plt>:
   1502c:	add	ip, pc, #0, 12
   15030:	add	ip, ip, #110592	; 0x1b000
   15034:	ldr	pc, [ip, #3596]!	; 0xe0c

00015038 <cd_profile_get_colorspace@plt>:
   15038:	add	ip, pc, #0, 12
   1503c:	add	ip, ip, #110592	; 0x1b000
   15040:	ldr	pc, [ip, #3588]!	; 0xe04

00015044 <g_param_spec_boxed@plt>:
   15044:	add	ip, pc, #0, 12
   15048:	add	ip, ip, #110592	; 0x1b000
   1504c:	ldr	pc, [ip, #3580]!	; 0xdfc

00015050 <g_object_get@plt>:
   15050:	add	ip, pc, #0, 12
   15054:	add	ip, ip, #110592	; 0x1b000
   15058:	ldr	pc, [ip, #3572]!	; 0xdf4

0001505c <gtk_dialog_get_type@plt>:
   1505c:	add	ip, pc, #0, 12
   15060:	add	ip, ip, #110592	; 0x1b000
   15064:	ldr	pc, [ip, #3564]!	; 0xdec

00015068 <g_object_class_install_property@plt>:
   15068:	add	ip, pc, #0, 12
   1506c:	add	ip, ip, #110592	; 0x1b000
   15070:	ldr	pc, [ip, #3556]!	; 0xde4

00015074 <gtk_tree_model_get_type@plt>:
   15074:	add	ip, pc, #0, 12
   15078:	add	ip, ip, #110592	; 0x1b000
   1507c:	ldr	pc, [ip, #3548]!	; 0xddc

00015080 <gtk_list_store_append@plt>:
   15080:	add	ip, pc, #0, 12
   15084:	add	ip, ip, #110592	; 0x1b000
   15088:	ldr	pc, [ip, #3540]!	; 0xdd4

0001508c <g_variant_unref@plt>:
   1508c:	add	ip, pc, #0, 12
   15090:	add	ip, ip, #110592	; 0x1b000
   15094:	ldr	pc, [ip, #3532]!	; 0xdcc

00015098 <g_file_get_basename@plt>:
   15098:	add	ip, pc, #0, 12
   1509c:	add	ip, ip, #110592	; 0x1b000
   150a0:	ldr	pc, [ip, #3524]!	; 0xdc4

000150a4 <g_type_class_add_private@plt>:
   150a4:	add	ip, pc, #0, 12
   150a8:	add	ip, ip, #110592	; 0x1b000
   150ac:	ldr	pc, [ip, #3516]!	; 0xdbc

000150b0 <g_param_spec_uint@plt>:
   150b0:	add	ip, pc, #0, 12
   150b4:	add	ip, ip, #110592	; 0x1b000
   150b8:	ldr	pc, [ip, #3508]!	; 0xdb4

000150bc <cd_transform_process@plt>:
   150bc:	add	ip, pc, #0, 12
   150c0:	add	ip, ip, #110592	; 0x1b000
   150c4:	ldr	pc, [ip, #3500]!	; 0xdac

000150c8 <g_timeout_add_seconds@plt>:
   150c8:	add	ip, pc, #0, 12
   150cc:	add	ip, ip, #110592	; 0x1b000
   150d0:	ldr	pc, [ip, #3492]!	; 0xda4

000150d4 <cd_transform_set_rendering_intent@plt>:
   150d4:	add	ip, pc, #0, 12
   150d8:	add	ip, ip, #110592	; 0x1b000
   150dc:	ldr	pc, [ip, #3484]!	; 0xd9c

000150e0 <cd_profile_has_access@plt>:
   150e0:	add	ip, pc, #0, 12
   150e4:	add	ip, ip, #110592	; 0x1b000
   150e8:	ldr	pc, [ip, #3476]!	; 0xd94

000150ec <raise@plt>:
   150ec:	add	ip, pc, #0, 12
   150f0:	add	ip, ip, #110592	; 0x1b000
   150f4:	ldr	pc, [ip, #3468]!	; 0xd8c

000150f8 <g_type_check_instance_is_a@plt>:
   150f8:	add	ip, pc, #0, 12
   150fc:	add	ip, ip, #110592	; 0x1b000
   15100:	ldr	pc, [ip, #3460]!	; 0xd84

00015104 <g_print@plt>:
   15104:	add	ip, pc, #0, 12
   15108:	add	ip, ip, #110592	; 0x1b000
   1510c:	ldr	pc, [ip, #3452]!	; 0xd7c

00015110 <cmsXYZ2xyY@plt>:
   15110:	add	ip, pc, #0, 12
   15114:	add	ip, ip, #110592	; 0x1b000
   15118:	ldr	pc, [ip, #3444]!	; 0xd74

0001511c <bindtextdomain@plt>:
   1511c:	add	ip, pc, #0, 12
   15120:	add	ip, ip, #110592	; 0x1b000
   15124:	ldr	pc, [ip, #3436]!	; 0xd6c

00015128 <gtk_print_operation_set_support_selection@plt>:
   15128:	add	ip, pc, #0, 12
   1512c:	add	ip, ip, #110592	; 0x1b000
   15130:	ldr	pc, [ip, #3428]!	; 0xd64

00015134 <cd_color_xyz_copy@plt>:
   15134:	add	ip, pc, #0, 12
   15138:	add	ip, ip, #110592	; 0x1b000
   1513c:	ldr	pc, [ip, #3420]!	; 0xd5c

00015140 <g_static_resource_init@plt>:
   15140:	add	ip, pc, #0, 12
   15144:	add	ip, ip, #110592	; 0x1b000
   15148:	ldr	pc, [ip, #3412]!	; 0xd54

0001514c <setlocale@plt>:
   1514c:	add	ip, pc, #0, 12
   15150:	add	ip, ip, #110592	; 0x1b000
   15154:	ldr	pc, [ip, #3404]!	; 0xd4c

00015158 <g_strconcat@plt>:
   15158:	add	ip, pc, #0, 12
   1515c:	add	ip, ip, #110592	; 0x1b000
   15160:	ldr	pc, [ip, #3396]!	; 0xd44

00015164 <g_option_context_add_main_entries@plt>:
   15164:	add	ip, pc, #0, 12
   15168:	add	ip, ip, #110592	; 0x1b000
   1516c:	ldr	pc, [ip, #3388]!	; 0xd3c

00015170 <exif_content_get_entry@plt>:
   15170:	add	ip, pc, #0, 12
   15174:	add	ip, ip, #110592	; 0x1b000
   15178:	ldr	pc, [ip, #3380]!	; 0xd34

0001517c <gtk_print_operation_set_track_print_status@plt>:
   1517c:	add	ip, pc, #0, 12
   15180:	add	ip, ip, #110592	; 0x1b000
   15184:	ldr	pc, [ip, #3372]!	; 0xd2c

00015188 <g_static_resource_fini@plt>:
   15188:	add	ip, pc, #0, 12
   1518c:	add	ip, ip, #110592	; 0x1b000
   15190:	ldr	pc, [ip, #3364]!	; 0xd24

00015194 <gtk_widget_get_pango_context@plt>:
   15194:	add	ip, pc, #0, 12
   15198:	add	ip, ip, #110592	; 0x1b000
   1519c:	ldr	pc, [ip, #3356]!	; 0xd1c

000151a0 <gtk_builder_new@plt>:
   151a0:	add	ip, pc, #0, 12
   151a4:	add	ip, ip, #110592	; 0x1b000
   151a8:	ldr	pc, [ip, #3348]!	; 0xd14

000151ac <g_string_free@plt>:
   151ac:	add	ip, pc, #0, 12
   151b0:	add	ip, ip, #110592	; 0x1b000
   151b4:	ldr	pc, [ip, #3340]!	; 0xd0c

000151b8 <gtk_dialog_run@plt>:
   151b8:	add	ip, pc, #0, 12
   151bc:	add	ip, ip, #110592	; 0x1b000
   151c0:	ldr	pc, [ip, #3332]!	; 0xd04

000151c4 <powf@plt>:
   151c4:	add	ip, pc, #0, 12
   151c8:	add	ip, ip, #110592	; 0x1b000
   151cc:	ldr	pc, [ip, #3324]!	; 0xcfc

000151d0 <gtk_window_present@plt>:
   151d0:	add	ip, pc, #0, 12
   151d4:	add	ip, ip, #110592	; 0x1b000
   151d8:	ldr	pc, [ip, #3316]!	; 0xcf4

000151dc <gtk_print_operation_set_print_settings@plt>:
   151dc:	add	ip, pc, #0, 12
   151e0:	add	ip, ip, #110592	; 0x1b000
   151e4:	ldr	pc, [ip, #3308]!	; 0xcec

000151e8 <gtk_widget_show@plt>:
   151e8:	add	ip, pc, #0, 12
   151ec:	add	ip, ip, #110592	; 0x1b000
   151f0:	ldr	pc, [ip, #3300]!	; 0xce4

000151f4 <g_object_unref@plt>:
   151f4:	add	ip, pc, #0, 12
   151f8:	add	ip, ip, #110592	; 0x1b000
   151fc:	ldr	pc, [ip, #3292]!	; 0xcdc

00015200 <g_once_init_leave@plt>:
   15200:	add	ip, pc, #0, 12
   15204:	add	ip, ip, #110592	; 0x1b000
   15208:	ldr	pc, [ip, #3284]!	; 0xcd4

0001520c <g_log_set_fatal_mask@plt>:
   1520c:	add	ip, pc, #0, 12
   15210:	add	ip, ip, #110592	; 0x1b000
   15214:	ldr	pc, [ip, #3276]!	; 0xccc

00015218 <cd_client_new@plt>:
   15218:	add	ip, pc, #0, 12
   1521c:	add	ip, ip, #110592	; 0x1b000
   15220:	ldr	pc, [ip, #3268]!	; 0xcc4

00015224 <g_file_info_get_attribute_string@plt>:
   15224:	add	ip, pc, #0, 12
   15228:	add	ip, ip, #110592	; 0x1b000
   1522c:	ldr	pc, [ip, #3260]!	; 0xcbc

00015230 <cd_transform_set_output_pixel_format@plt>:
   15230:	add	ip, pc, #0, 12
   15234:	add	ip, ip, #110592	; 0x1b000
   15238:	ldr	pc, [ip, #3252]!	; 0xcb4

0001523c <pango_layout_new@plt>:
   1523c:	add	ip, pc, #0, 12
   15240:	add	ip, ip, #110592	; 0x1b000
   15244:	ldr	pc, [ip, #3244]!	; 0xcac

00015248 <cmsOpenProfileFromFile@plt>:
   15248:	add	ip, pc, #0, 12
   1524c:	add	ip, ip, #110592	; 0x1b000
   15250:	ldr	pc, [ip, #3236]!	; 0xca4

00015254 <cmsCloseProfile@plt>:
   15254:	add	ip, pc, #0, 12
   15258:	add	ip, ip, #110592	; 0x1b000
   1525c:	ldr	pc, [ip, #3228]!	; 0xc9c

00015260 <cd_color_xyz_to_yxy@plt>:
   15260:	add	ip, pc, #0, 12
   15264:	add	ip, ip, #110592	; 0x1b000
   15268:	ldr	pc, [ip, #3220]!	; 0xc94

0001526c <g_malloc0_n@plt>:
   1526c:	add	ip, pc, #0, 12
   15270:	add	ip, ip, #110592	; 0x1b000
   15274:	ldr	pc, [ip, #3212]!	; 0xc8c

00015278 <cairo_close_path@plt>:
   15278:	add	ip, pc, #0, 12
   1527c:	add	ip, ip, #110592	; 0x1b000
   15280:	ldr	pc, [ip, #3204]!	; 0xc84

00015284 <cairo_restore@plt>:
   15284:	add	ip, pc, #0, 12
   15288:	add	ip, ip, #110592	; 0x1b000
   1528c:	ldr	pc, [ip, #3196]!	; 0xc7c

00015290 <gtk_tree_sortable_set_sort_column_id@plt>:
   15290:	add	ip, pc, #0, 12
   15294:	add	ip, ip, #110592	; 0x1b000
   15298:	ldr	pc, [ip, #3188]!	; 0xc74

0001529c <gdk_pixbuf_new@plt>:
   1529c:	add	ip, pc, #0, 12
   152a0:	add	ip, ip, #110592	; 0x1b000
   152a4:	ldr	pc, [ip, #3180]!	; 0xc6c

000152a8 <gtk_builder_add_from_resource@plt>:
   152a8:	add	ip, pc, #0, 12
   152ac:	add	ip, ip, #110592	; 0x1b000
   152b0:	ldr	pc, [ip, #3172]!	; 0xc64

000152b4 <cairo_paint@plt>:
   152b4:	add	ip, pc, #0, 12
   152b8:	add	ip, ip, #110592	; 0x1b000
   152bc:	ldr	pc, [ip, #3164]!	; 0xc5c

000152c0 <g_type_class_peek_parent@plt>:
   152c0:	add	ip, pc, #0, 12
   152c4:	add	ip, ip, #110592	; 0x1b000
   152c8:	ldr	pc, [ip, #3156]!	; 0xc54

000152cc <g_file_new_for_path@plt>:
   152cc:	add	ip, pc, #0, 12
   152d0:	add	ip, ip, #110592	; 0x1b000
   152d4:	ldr	pc, [ip, #3148]!	; 0xc4c

000152d8 <g_ptr_array_unref@plt>:
   152d8:	add	ip, pc, #0, 12
   152dc:	add	ip, ip, #110592	; 0x1b000
   152e0:	ldr	pc, [ip, #3140]!	; 0xc44

000152e4 <g_malloc0@plt>:
   152e4:	add	ip, pc, #0, 12
   152e8:	add	ip, ip, #110592	; 0x1b000
   152ec:	ldr	pc, [ip, #3132]!	; 0xc3c

000152f0 <exif_data_unref@plt>:
   152f0:	add	ip, pc, #0, 12
   152f4:	add	ip, ip, #110592	; 0x1b000
   152f8:	ldr	pc, [ip, #3124]!	; 0xc34

000152fc <gtk_window_set_modal@plt>:
   152fc:	add	ip, pc, #0, 12
   15300:	add	ip, ip, #110592	; 0x1b000
   15304:	ldr	pc, [ip, #3116]!	; 0xc2c

00015308 <g_ptr_array_add@plt>:
   15308:	add	ip, pc, #0, 12
   1530c:	add	ip, ip, #110592	; 0x1b000
   15310:	ldr	pc, [ip, #3108]!	; 0xc24

00015314 <g_markup_escape_text@plt>:
   15314:	add	ip, pc, #0, 12
   15318:	add	ip, ip, #110592	; 0x1b000
   1531c:	ldr	pc, [ip, #3100]!	; 0xc1c

00015320 <time@plt>:
   15320:	add	ip, pc, #0, 12
   15324:	add	ip, ip, #110592	; 0x1b000
   15328:	ldr	pc, [ip, #3092]!	; 0xc14

0001532c <cd_color_yxy_new@plt>:
   1532c:	add	ip, pc, #0, 12
   15330:	add	ip, ip, #110592	; 0x1b000
   15334:	ldr	pc, [ip, #3084]!	; 0xc0c

00015338 <gtk_message_dialog_new@plt>:
   15338:	add	ip, pc, #0, 12
   1533c:	add	ip, ip, #110592	; 0x1b000
   15340:	ldr	pc, [ip, #3076]!	; 0xc04

00015344 <exif_entry_get_value@plt>:
   15344:	add	ip, pc, #0, 12
   15348:	add	ip, ip, #110592	; 0x1b000
   1534c:	ldr	pc, [ip, #3068]!	; 0xbfc

00015350 <gtk_icon_theme_get_default@plt>:
   15350:	add	ip, pc, #0, 12
   15354:	add	ip, ip, #110592	; 0x1b000
   15358:	ldr	pc, [ip, #3060]!	; 0xbf4

0001535c <gdk_pixbuf_get_pixels@plt>:
   1535c:	add	ip, pc, #0, 12
   15360:	add	ip, ip, #110592	; 0x1b000
   15364:	ldr	pc, [ip, #3052]!	; 0xbec

00015368 <g_ptr_array_ref@plt>:
   15368:	add	ip, pc, #0, 12
   1536c:	add	ip, ip, #110592	; 0x1b000
   15370:	ldr	pc, [ip, #3044]!	; 0xbe4

00015374 <pango_font_description_from_string@plt>:
   15374:	add	ip, pc, #0, 12
   15378:	add	ip, ip, #110592	; 0x1b000
   1537c:	ldr	pc, [ip, #3036]!	; 0xbdc

00015380 <gtk_cell_layout_get_type@plt>:
   15380:	add	ip, pc, #0, 12
   15384:	add	ip, ip, #110592	; 0x1b000
   15388:	ldr	pc, [ip, #3028]!	; 0xbd4

0001538c <_Unwind_Resume@plt>:
   1538c:	add	ip, pc, #0, 12
   15390:	add	ip, ip, #110592	; 0x1b000
   15394:	ldr	pc, [ip, #3020]!	; 0xbcc

00015398 <g_string_append@plt>:
   15398:	add	ip, pc, #0, 12
   1539c:	add	ip, ip, #110592	; 0x1b000
   153a0:	ldr	pc, [ip, #3012]!	; 0xbc4

000153a4 <cd_client_get_sensors_sync@plt>:
   153a4:	add	ip, pc, #0, 12
   153a8:	add	ip, ip, #110592	; 0x1b000
   153ac:	ldr	pc, [ip, #3004]!	; 0xbbc

000153b0 <gtk_print_operation_cancel@plt>:
   153b0:	add	ip, pc, #0, 12
   153b4:	add	ip, ip, #110592	; 0x1b000
   153b8:	ldr	pc, [ip, #2996]!	; 0xbb4

000153bc <gtk_drawing_area_get_type@plt>:
   153bc:	add	ip, pc, #0, 12
   153c0:	add	ip, ip, #110592	; 0x1b000
   153c4:	ldr	pc, [ip, #2988]!	; 0xbac

000153c8 <cmsCreateLab4Profile@plt>:
   153c8:	add	ip, pc, #0, 12
   153cc:	add	ip, ip, #110592	; 0x1b000
   153d0:	ldr	pc, [ip, #2980]!	; 0xba4

000153d4 <gtk_print_operation_run@plt>:
   153d4:	add	ip, pc, #0, 12
   153d8:	add	ip, ip, #110592	; 0x1b000
   153dc:	ldr	pc, [ip, #2972]!	; 0xb9c

000153e0 <gtk_list_store_get_type@plt>:
   153e0:	add	ip, pc, #0, 12
   153e4:	add	ip, ip, #110592	; 0x1b000
   153e8:	ldr	pc, [ip, #2964]!	; 0xb94

000153ec <cairo_stroke@plt>:
   153ec:	add	ip, pc, #0, 12
   153f0:	add	ip, ip, #110592	; 0x1b000
   153f4:	ldr	pc, [ip, #2956]!	; 0xb8c

000153f8 <gtk_widget_get_allocated_height@plt>:
   153f8:	add	ip, pc, #0, 12
   153fc:	add	ip, ip, #110592	; 0x1b000
   15400:	ldr	pc, [ip, #2948]!	; 0xb84

00015404 <gdk_pixbuf_get_has_alpha@plt>:
   15404:	add	ip, pc, #0, 12
   15408:	add	ip, ip, #110592	; 0x1b000
   1540c:	ldr	pc, [ip, #2940]!	; 0xb7c

00015410 <cairo_set_source_surface@plt>:
   15410:	add	ip, pc, #0, 12
   15414:	add	ip, ip, #110592	; 0x1b000
   15418:	ldr	pc, [ip, #2932]!	; 0xb74

0001541c <gtk_tree_model_get@plt>:
   1541c:	add	ip, pc, #0, 12
   15420:	add	ip, ip, #110592	; 0x1b000
   15424:	ldr	pc, [ip, #2924]!	; 0xb6c

00015428 <cmsD50_xyY@plt>:
   15428:	add	ip, pc, #0, 12
   1542c:	add	ip, ip, #110592	; 0x1b000
   15430:	ldr	pc, [ip, #2916]!	; 0xb64

00015434 <g_set_error@plt>:
   15434:	add	ip, pc, #0, 12
   15438:	add	ip, ip, #110592	; 0x1b000
   1543c:	ldr	pc, [ip, #2908]!	; 0xb5c

00015440 <cd_client_connect_sync@plt>:
   15440:	add	ip, pc, #0, 12
   15444:	add	ip, ip, #110592	; 0x1b000
   15448:	ldr	pc, [ip, #2900]!	; 0xb54

0001544c <exif_data_new_from_file@plt>:
   1544c:	add	ip, pc, #0, 12
   15450:	add	ip, ip, #110592	; 0x1b000
   15454:	ldr	pc, [ip, #2892]!	; 0xb4c

00015458 <g_get_user_data_dir@plt>:
   15458:	add	ip, pc, #0, 12
   1545c:	add	ip, ip, #110592	; 0x1b000
   15460:	ldr	pc, [ip, #2884]!	; 0xb44

00015464 <cairo_fill@plt>:
   15464:	add	ip, pc, #0, 12
   15468:	add	ip, ip, #110592	; 0x1b000
   1546c:	ldr	pc, [ip, #2876]!	; 0xb3c

00015470 <g_type_check_class_cast@plt>:
   15470:	add	ip, pc, #0, 12
   15474:	add	ip, ip, #110592	; 0x1b000
   15478:	ldr	pc, [ip, #2868]!	; 0xb34

0001547c <cd_transform_set_output_icc@plt>:
   1547c:	add	ip, pc, #0, 12
   15480:	add	ip, ip, #110592	; 0x1b000
   15484:	ldr	pc, [ip, #2860]!	; 0xb2c

00015488 <g_value_get_boxed@plt>:
   15488:	add	ip, pc, #0, 12
   1548c:	add	ip, ip, #110592	; 0x1b000
   15490:	ldr	pc, [ip, #2852]!	; 0xb24

00015494 <__libc_start_main@plt>:
   15494:	add	ip, pc, #0, 12
   15498:	add	ip, ip, #110592	; 0x1b000
   1549c:	ldr	pc, [ip, #2844]!	; 0xb1c

000154a0 <g_main_loop_unref@plt>:
   154a0:	add	ip, pc, #0, 12
   154a4:	add	ip, ip, #110592	; 0x1b000
   154a8:	ldr	pc, [ip, #2836]!	; 0xb14

000154ac <pango_layout_set_font_description@plt>:
   154ac:	add	ip, pc, #0, 12
   154b0:	add	ip, ip, #110592	; 0x1b000
   154b4:	ldr	pc, [ip, #2828]!	; 0xb0c

000154b8 <gtk_widget_set_visible@plt>:
   154b8:	add	ip, pc, #0, 12
   154bc:	add	ip, ip, #110592	; 0x1b000
   154c0:	ldr	pc, [ip, #2820]!	; 0xb04

000154c4 <__gmon_start__@plt>:
   154c4:	add	ip, pc, #0, 12
   154c8:	add	ip, ip, #110592	; 0x1b000
   154cc:	ldr	pc, [ip, #2812]!	; 0xafc

000154d0 <gtk_combo_box_set_model@plt>:
   154d0:	add	ip, pc, #0, 12
   154d4:	add	ip, ip, #110592	; 0x1b000
   154d8:	ldr	pc, [ip, #2804]!	; 0xaf4

000154dc <gtk_print_operation_get_print_settings@plt>:
   154dc:	add	ip, pc, #0, 12
   154e0:	add	ip, ip, #110592	; 0x1b000
   154e4:	ldr	pc, [ip, #2796]!	; 0xaec

000154e8 <g_object_get_data@plt>:
   154e8:	add	ip, pc, #0, 12
   154ec:	add	ip, ip, #110592	; 0x1b000
   154f0:	ldr	pc, [ip, #2788]!	; 0xae4

000154f4 <cd_sensor_get_sample_sync@plt>:
   154f4:	add	ip, pc, #0, 12
   154f8:	add	ip, ip, #110592	; 0x1b000
   154fc:	ldr	pc, [ip, #2780]!	; 0xadc

00015500 <cairo_set_dash@plt>:
   15500:	add	ip, pc, #0, 12
   15504:	add	ip, ip, #110592	; 0x1b000
   15508:	ldr	pc, [ip, #2772]!	; 0xad4

0001550c <gtk_info_bar_set_message_type@plt>:
   1550c:	add	ip, pc, #0, 12
   15510:	add	ip, ip, #110592	; 0x1b000
   15514:	ldr	pc, [ip, #2764]!	; 0xacc

00015518 <gtk_window_get_type@plt>:
   15518:	add	ip, pc, #0, 12
   1551c:	add	ip, ip, #110592	; 0x1b000
   15520:	ldr	pc, [ip, #2756]!	; 0xac4

00015524 <gtk_widget_set_sensitive@plt>:
   15524:	add	ip, pc, #0, 12
   15528:	add	ip, ip, #110592	; 0x1b000
   1552c:	ldr	pc, [ip, #2748]!	; 0xabc

00015530 <cd_client_get_devices_by_kind_sync@plt>:
   15530:	add	ip, pc, #0, 12
   15534:	add	ip, ip, #110592	; 0x1b000
   15538:	ldr	pc, [ip, #2740]!	; 0xab4

0001553c <g_source_remove@plt>:
   1553c:	add	ip, pc, #0, 12
   15540:	add	ip, ip, #110592	; 0x1b000
   15544:	ldr	pc, [ip, #2732]!	; 0xaac

00015548 <gtk_cell_layout_set_attributes@plt>:
   15548:	add	ip, pc, #0, 12
   1554c:	add	ip, ip, #110592	; 0x1b000
   15550:	ldr	pc, [ip, #2724]!	; 0xaa4

00015554 <g_strcmp0@plt>:
   15554:	add	ip, pc, #0, 12
   15558:	add	ip, ip, #110592	; 0x1b000
   1555c:	ldr	pc, [ip, #2716]!	; 0xa9c

Disassembly of section .text:

00015560 <.text>:
   15560:	movw	r0, #4100	; 0x1004
   15564:	movt	r0, #3
   15568:	b	15188 <g_static_resource_fini@plt>
   1556c:	movw	r0, #4100	; 0x1004
   15570:	movt	r0, #3
   15574:	b	15140 <g_static_resource_init@plt>
   15578:	push	{r4, r5, r6, r7, r8, lr}
   1557c:	movw	r8, #4120	; 0x1018
   15580:	movt	r8, #3
   15584:	sub	sp, sp, #80	; 0x50
   15588:	mov	r6, #0
   1558c:	mov	r2, #5
   15590:	ldr	r3, [r8]
   15594:	mov	lr, #2
   15598:	str	r1, [sp, #8]
   1559c:	movw	r1, #49488	; 0xc150
   155a0:	str	r0, [sp, #12]
   155a4:	movt	r1, #1
   155a8:	mov	r0, r6
   155ac:	add	ip, sp, #16
   155b0:	str	lr, [sp, #32]
   155b4:	mov	r4, #112	; 0x70
   155b8:	str	ip, [sp, #36]	; 0x24
   155bc:	mov	r5, #0
   155c0:	str	r3, [sp, #76]	; 0x4c
   155c4:	movw	r3, #49472	; 0xc140
   155c8:	str	r6, [sp, #24]
   155cc:	movt	r3, #1
   155d0:	strb	r4, [sp, #24]
   155d4:	movt	r5, #49136	; 0xbff0
   155d8:	str	r3, [sp, #20]
   155dc:	str	r6, [sp, #16]
   155e0:	str	r6, [sp, #28]
   155e4:	str	r6, [sp, #40]	; 0x28
   155e8:	str	r6, [sp, #44]	; 0x2c
   155ec:	str	r6, [sp, #48]	; 0x30
   155f0:	str	r6, [sp, #52]	; 0x34
   155f4:	str	r6, [sp, #56]	; 0x38
   155f8:	str	r6, [sp, #60]	; 0x3c
   155fc:	str	r6, [sp, #64]	; 0x40
   15600:	str	r6, [sp, #68]	; 0x44
   15604:	str	r6, [sp, #72]	; 0x48
   15608:	bl	14fcc <dcgettext@plt>
   1560c:	movw	r1, #57780	; 0xe1b4
   15610:	movt	r1, #1
   15614:	str	r0, [sp, #40]	; 0x28
   15618:	mov	r0, #6
   1561c:	bl	1514c <setlocale@plt>
   15620:	movw	r0, #49088	; 0xbfc0
   15624:	movw	r1, #49532	; 0xc17c
   15628:	movt	r0, #1
   1562c:	movt	r1, #1
   15630:	bl	1511c <bindtextdomain@plt>
   15634:	movw	r0, #49088	; 0xbfc0
   15638:	movw	r1, #49552	; 0xc190
   1563c:	movt	r0, #1
   15640:	movt	r1, #1
   15644:	bl	14900 <bind_textdomain_codeset@plt>
   15648:	movw	r0, #49088	; 0xbfc0
   1564c:	movt	r0, #1
   15650:	bl	14b70 <textdomain@plt>
   15654:	movw	r0, #22832	; 0x5930
   15658:	movt	r0, #1
   1565c:	bl	14b34 <cmsSetLogErrorHandler@plt>
   15660:	mov	r0, r6
   15664:	bl	149b4 <g_option_context_new@plt>
   15668:	mov	r2, #5
   1566c:	movw	r1, #49560	; 0xc198
   15670:	movt	r1, #1
   15674:	mov	r4, r0
   15678:	mov	r0, r6
   1567c:	bl	14fcc <dcgettext@plt>
   15680:	mov	r1, r0
   15684:	mov	r0, r4
   15688:	bl	14a44 <g_option_context_set_summary@plt>
   1568c:	bl	18da0 <g_strcmp0@plt+0x384c>
   15690:	mov	r1, r0
   15694:	mov	r0, r4
   15698:	bl	14798 <g_option_context_add_group@plt>
   1569c:	mov	r0, #1
   156a0:	bl	1493c <gtk_get_option_group@plt>
   156a4:	mov	r1, r0
   156a8:	mov	r0, r4
   156ac:	bl	14798 <g_option_context_add_group@plt>
   156b0:	mov	r0, r4
   156b4:	mov	r2, r6
   156b8:	add	r1, sp, #20
   156bc:	bl	15164 <g_option_context_add_main_entries@plt>
   156c0:	add	r2, sp, #8
   156c4:	mov	r3, r6
   156c8:	add	r1, sp, #12
   156cc:	mov	r0, r4
   156d0:	bl	1478c <g_option_context_parse@plt>
   156d4:	mov	r0, r4
   156d8:	bl	14f18 <g_option_context_free@plt>
   156dc:	mov	r0, #80	; 0x50
   156e0:	bl	152e4 <g_malloc0@plt>
   156e4:	ldr	r3, [sp, #16]
   156e8:	mov	r1, r6
   156ec:	mov	r4, #0
   156f0:	mov	r7, r0
   156f4:	movw	r0, #49596	; 0xc1bc
   156f8:	movt	r0, #1
   156fc:	strd	r4, [r7, #48]	; 0x30
   15700:	str	r3, [r7, #68]	; 0x44
   15704:	bl	14768 <gtk_application_new@plt>
   15708:	mov	r3, r7
   1570c:	str	r6, [sp]
   15710:	str	r6, [sp, #4]
   15714:	movw	r1, #49628	; 0xc1dc
   15718:	movw	r2, #27224	; 0x6a58
   1571c:	movt	r1, #1
   15720:	movt	r2, #1
   15724:	mov	r4, r0
   15728:	bl	14e1c <g_signal_connect_data@plt>
   1572c:	mov	r3, r7
   15730:	str	r6, [sp]
   15734:	str	r6, [sp, #4]
   15738:	mov	r0, r4
   1573c:	movw	r1, #49636	; 0xc1e4
   15740:	movw	r2, #22784	; 0x5900
   15744:	movt	r1, #1
   15748:	movt	r2, #1
   1574c:	bl	14e1c <g_signal_connect_data@plt>
   15750:	bl	148d0 <g_application_get_type@plt>
   15754:	mov	r1, r0
   15758:	mov	r0, r4
   1575c:	bl	149a8 <g_type_check_instance_cast@plt>
   15760:	ldr	r1, [sp, #12]
   15764:	ldr	r2, [sp, #8]
   15768:	bl	14cd8 <g_application_run@plt>
   1576c:	mov	r5, r0
   15770:	mov	r0, r4
   15774:	bl	151f4 <g_object_unref@plt>
   15778:	ldr	r0, [r7]
   1577c:	cmp	r0, r6
   15780:	beq	15788 <g_strcmp0@plt+0x234>
   15784:	bl	151f4 <g_object_unref@plt>
   15788:	ldr	r0, [r7, #56]	; 0x38
   1578c:	cmp	r0, #0
   15790:	beq	15798 <g_strcmp0@plt+0x244>
   15794:	bl	151f4 <g_object_unref@plt>
   15798:	mov	r0, r7
   1579c:	bl	14fa8 <g_free@plt>
   157a0:	ldr	r2, [sp, #76]	; 0x4c
   157a4:	ldr	r3, [r8]
   157a8:	mov	r0, r5
   157ac:	cmp	r2, r3
   157b0:	bne	157bc <g_strcmp0@plt+0x268>
   157b4:	add	sp, sp, #80	; 0x50
   157b8:	pop	{r4, r5, r6, r7, r8, pc}
   157bc:	bl	14f3c <__stack_chk_fail@plt>
   157c0:	mov	fp, #0
   157c4:	mov	lr, #0
   157c8:	pop	{r1}		; (ldr r1, [sp], #4)
   157cc:	mov	r2, sp
   157d0:	push	{r2}		; (str r2, [sp, #-4]!)
   157d4:	push	{r0}		; (str r0, [sp, #-4]!)
   157d8:	ldr	ip, [pc, #16]	; 157f0 <g_strcmp0@plt+0x29c>
   157dc:	push	{ip}		; (str ip, [sp, #-4]!)
   157e0:	ldr	r0, [pc, #12]	; 157f4 <g_strcmp0@plt+0x2a0>
   157e4:	ldr	r3, [pc, #12]	; 157f8 <g_strcmp0@plt+0x2a4>
   157e8:	bl	15494 <__libc_start_main@plt>
   157ec:	bl	14d14 <abort@plt>
   157f0:	andeq	fp, r1, r0, lsr #26
   157f4:	andeq	r5, r1, r8, ror r5
   157f8:			; <UNDEFINED> instruction: 0x0001bcbc
   157fc:	ldr	r3, [pc, #20]	; 15818 <g_strcmp0@plt+0x2c4>
   15800:	ldr	r2, [pc, #20]	; 1581c <g_strcmp0@plt+0x2c8>
   15804:	add	r3, pc, r3
   15808:	ldr	r2, [r3, r2]
   1580c:	cmp	r2, #0
   15810:	bxeq	lr
   15814:	b	154c4 <__gmon_start__@plt>
   15818:	andeq	fp, r1, r4, lsr r3
   1581c:			; <UNDEFINED> instruction: 0x000004bc
   15820:	push	{r3, lr}
   15824:	movw	r0, #4120	; 0x1018
   15828:	ldr	r3, [pc, #36]	; 15854 <g_strcmp0@plt+0x300>
   1582c:	movt	r0, #3
   15830:	rsb	r3, r0, r3
   15834:	cmp	r3, #6
   15838:	popls	{r3, pc}
   1583c:	movw	r3, #0
   15840:	movt	r3, #0
   15844:	cmp	r3, #0
   15848:	popeq	{r3, pc}
   1584c:	blx	r3
   15850:	pop	{r3, pc}
   15854:	andeq	r1, r3, fp, lsl r0
   15858:	push	{r3, lr}
   1585c:	movw	r0, #4120	; 0x1018
   15860:	movw	r3, #4120	; 0x1018
   15864:	movt	r0, #3
   15868:	movt	r3, #3
   1586c:	rsb	r3, r0, r3
   15870:	asr	r3, r3, #2
   15874:	add	r3, r3, r3, lsr #31
   15878:	asrs	r1, r3, #1
   1587c:	popeq	{r3, pc}
   15880:	movw	r2, #0
   15884:	movt	r2, #0
   15888:	cmp	r2, #0
   1588c:	popeq	{r3, pc}
   15890:	blx	r2
   15894:	pop	{r3, pc}
   15898:	push	{r4, lr}
   1589c:	movw	r4, #4132	; 0x1024
   158a0:	movt	r4, #3
   158a4:	ldrb	r3, [r4]
   158a8:	cmp	r3, #0
   158ac:	popne	{r4, pc}
   158b0:	bl	15820 <g_strcmp0@plt+0x2cc>
   158b4:	mov	r3, #1
   158b8:	strb	r3, [r4]
   158bc:	pop	{r4, pc}
   158c0:	movw	r0, #2500	; 0x9c4
   158c4:	movt	r0, #3
   158c8:	push	{r3, lr}
   158cc:	ldr	r3, [r0]
   158d0:	cmp	r3, #0
   158d4:	beq	158ec <g_strcmp0@plt+0x398>
   158d8:	movw	r3, #0
   158dc:	movt	r3, #0
   158e0:	cmp	r3, #0
   158e4:	beq	158ec <g_strcmp0@plt+0x398>
   158e8:	blx	r3
   158ec:	pop	{r3, lr}
   158f0:	b	15858 <g_strcmp0@plt+0x304>
   158f4:	movw	r0, #4100	; 0x1004
   158f8:	movt	r0, #3
   158fc:	b	14f78 <g_static_resource_get_resource@plt>
   15900:	push	{r4, lr}
   15904:	ldr	r0, [r1, #56]	; 0x38
   15908:	movw	r1, #48440	; 0xbd38
   1590c:	movt	r1, #1
   15910:	bl	14c54 <gtk_builder_get_object@plt>
   15914:	mov	r4, r0
   15918:	bl	15518 <gtk_window_get_type@plt>
   1591c:	mov	r1, r0
   15920:	mov	r0, r4
   15924:	bl	149a8 <g_type_check_instance_cast@plt>
   15928:	pop	{r4, lr}
   1592c:	b	151d0 <gtk_window_present@plt>
   15930:	push	{lr}		; (str lr, [sp, #-4]!)
   15934:	sub	sp, sp, #12
   15938:	mov	r3, r1
   1593c:	movw	r0, #48456	; 0xbd48
   15940:	str	r2, [sp]
   15944:	movt	r0, #1
   15948:	mov	r1, #16
   1594c:	movw	r2, #48476	; 0xbd5c
   15950:	movt	r2, #1
   15954:	bl	14a38 <g_log@plt>
   15958:	add	sp, sp, #12
   1595c:	pop	{pc}		; (ldr pc, [sp], #4)
   15960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15964:	movw	fp, #4120	; 0x1018
   15968:	sub	sp, sp, #180	; 0xb4
   1596c:	movt	fp, #3
   15970:	ldr	r1, [r0, #4]
   15974:	mov	r3, #0
   15978:	mov	r2, #0
   1597c:	strd	r2, [sp, #64]	; 0x40
   15980:	ldr	r3, [fp]
   15984:	cmp	r1, #0
   15988:	mov	r4, r0
   1598c:	str	r3, [sp, #172]	; 0xac
   15990:	beq	15ed0 <g_strcmp0@plt+0x97c>
   15994:	add	r7, r0, #16
   15998:	add	r1, sp, #144	; 0x90
   1599c:	mov	r0, r7
   159a0:	bl	15134 <cd_color_xyz_copy@plt>
   159a4:	movw	r1, #48496	; 0xbd70
   159a8:	ldr	r0, [r4, #56]	; 0x38
   159ac:	movt	r1, #1
   159b0:	bl	14c54 <gtk_builder_get_object@plt>
   159b4:	mov	r5, r0
   159b8:	bl	14ee8 <gtk_image_get_type@plt>
   159bc:	mov	r1, r0
   159c0:	mov	r0, r5
   159c4:	bl	149a8 <g_type_check_instance_cast@plt>
   159c8:	str	r0, [sp, #36]	; 0x24
   159cc:	bl	14978 <gtk_widget_get_type@plt>
   159d0:	mov	r5, r0
   159d4:	ldr	r0, [sp, #36]	; 0x24
   159d8:	mov	r1, r5
   159dc:	bl	149a8 <g_type_check_instance_cast@plt>
   159e0:	bl	14ce4 <gtk_widget_get_allocated_width@plt>
   159e4:	mov	r6, r0
   159e8:	mov	r1, r5
   159ec:	ldr	r0, [sp, #36]	; 0x24
   159f0:	bl	149a8 <g_type_check_instance_cast@plt>
   159f4:	bl	153f8 <gtk_widget_get_allocated_height@plt>
   159f8:	str	r0, [sp]
   159fc:	mov	r0, #0
   15a00:	mov	r3, r6
   15a04:	mov	r1, r0
   15a08:	mov	r2, #8
   15a0c:	bl	1529c <gdk_pixbuf_new@plt>
   15a10:	vldr	d7, [pc, #960]	; 15dd8 <g_strcmp0@plt+0x884>
   15a14:	vldr	d4, [sp, #144]	; 0x90
   15a18:	vldr	d5, [sp, #152]	; 0x98
   15a1c:	vldr	d6, [sp, #160]	; 0xa0
   15a20:	vdiv.f64	d4, d4, d7
   15a24:	str	r0, [sp, #20]
   15a28:	vdiv.f64	d5, d5, d7
   15a2c:	vstr	d4, [sp, #144]	; 0x90
   15a30:	vdiv.f64	d7, d6, d7
   15a34:	vstr	d5, [sp, #152]	; 0x98
   15a38:	vstr	d7, [sp, #160]	; 0xa0
   15a3c:	bl	14e40 <cmsCreateXYZProfile@plt>
   15a40:	mov	r5, r0
   15a44:	movw	r1, #48472	; 0xbd58
   15a48:	ldr	r0, [r4, #4]
   15a4c:	movt	r1, #1
   15a50:	bl	15248 <cmsOpenProfileFromFile@plt>
   15a54:	mov	r6, r0
   15a58:	bl	15428 <cmsD50_xyY@plt>
   15a5c:	bl	153c8 <cmsCreateLab4Profile@plt>
   15a60:	mov	r3, #0
   15a64:	mov	r8, r0
   15a68:	mov	r1, #24
   15a6c:	str	r3, [sp]
   15a70:	str	r3, [sp, #4]
   15a74:	movt	r1, #73	; 0x49
   15a78:	mov	r3, #25
   15a7c:	mov	r0, r5
   15a80:	movt	r3, #4
   15a84:	mov	r2, r6
   15a88:	bl	14e64 <cmsCreateTransform@plt>
   15a8c:	subs	r9, r0, #0
   15a90:	beq	15ed4 <g_strcmp0@plt+0x980>
   15a94:	mov	r3, #0
   15a98:	mov	r1, #24
   15a9c:	str	r3, [sp]
   15aa0:	movt	r1, #73	; 0x49
   15aa4:	str	r3, [sp, #4]
   15aa8:	mov	r0, r5
   15aac:	mov	r3, #24
   15ab0:	mov	r2, r8
   15ab4:	movt	r3, #74	; 0x4a
   15ab8:	bl	14e64 <cmsCreateTransform@plt>
   15abc:	subs	sl, r0, #0
   15ac0:	beq	15ed4 <g_strcmp0@plt+0x980>
   15ac4:	mov	r3, #0
   15ac8:	mov	r1, #25
   15acc:	str	r3, [sp]
   15ad0:	movt	r1, #4
   15ad4:	str	r3, [sp, #4]
   15ad8:	mov	r0, r6
   15adc:	mov	r3, #24
   15ae0:	mov	r2, r5
   15ae4:	movt	r3, #73	; 0x49
   15ae8:	bl	14e64 <cmsCreateTransform@plt>
   15aec:	cmp	r0, #0
   15af0:	str	r0, [sp, #24]
   15af4:	beq	15ed4 <g_strcmp0@plt+0x980>
   15af8:	mov	r0, r9
   15afc:	add	r1, sp, #144	; 0x90
   15b00:	mov	r3, #1
   15b04:	add	r2, sp, #60	; 0x3c
   15b08:	bl	14b58 <cmsDoTransform@plt>
   15b0c:	add	r1, sp, #144	; 0x90
   15b10:	mov	r0, sl
   15b14:	add	r2, sp, #96	; 0x60
   15b18:	mov	r3, #1
   15b1c:	bl	14b58 <cmsDoTransform@plt>
   15b20:	add	r1, sp, #60	; 0x3c
   15b24:	ldr	r0, [sp, #24]
   15b28:	add	r2, sp, #120	; 0x78
   15b2c:	mov	r3, #1
   15b30:	bl	14b58 <cmsDoTransform@plt>
   15b34:	mov	r0, r9
   15b38:	bl	14fd8 <cmsDeleteTransform@plt>
   15b3c:	mov	r0, sl
   15b40:	bl	14fd8 <cmsDeleteTransform@plt>
   15b44:	ldr	r0, [sp, #24]
   15b48:	bl	14fd8 <cmsDeleteTransform@plt>
   15b4c:	mov	r0, r5
   15b50:	bl	15254 <cmsCloseProfile@plt>
   15b54:	mov	r0, r6
   15b58:	bl	15254 <cmsCloseProfile@plt>
   15b5c:	mov	r0, r8
   15b60:	bl	15254 <cmsCloseProfile@plt>
   15b64:	movw	r1, #48512	; 0xbd80
   15b68:	ldr	r0, [r4, #56]	; 0x38
   15b6c:	movt	r1, #1
   15b70:	bl	14c54 <gtk_builder_get_object@plt>
   15b74:	mov	r5, r0
   15b78:	bl	1490c <gtk_label_get_type@plt>
   15b7c:	str	r0, [sp, #44]	; 0x2c
   15b80:	mov	r0, r5
   15b84:	ldr	r1, [sp, #44]	; 0x2c
   15b88:	bl	149a8 <g_type_check_instance_cast@plt>
   15b8c:	mov	r5, r0
   15b90:	ldrd	r0, [r4, #24]
   15b94:	ldrd	r2, [r4, #16]
   15b98:	strd	r0, [sp]
   15b9c:	movw	r0, #48524	; 0xbd8c
   15ba0:	ldrd	r8, [r4, #32]
   15ba4:	movt	r0, #1
   15ba8:	strd	r8, [sp, #8]
   15bac:	bl	14c9c <g_strdup_printf@plt>
   15bb0:	mov	r9, r0
   15bb4:	mov	r0, r5
   15bb8:	mov	r1, r9
   15bbc:	bl	14918 <gtk_label_set_label@plt>
   15bc0:	movw	r1, #48544	; 0xbda0
   15bc4:	ldr	r0, [r4, #56]	; 0x38
   15bc8:	movt	r1, #1
   15bcc:	bl	14c54 <gtk_builder_get_object@plt>
   15bd0:	ldr	r1, [sp, #44]	; 0x2c
   15bd4:	bl	149a8 <g_type_check_instance_cast@plt>
   15bd8:	vldr	d7, [sp, #104]	; 0x68
   15bdc:	mov	r5, r0
   15be0:	vstr	d7, [sp]
   15be4:	movw	r0, #48524	; 0xbd8c
   15be8:	vldr	d7, [sp, #112]	; 0x70
   15bec:	ldrd	r2, [sp, #96]	; 0x60
   15bf0:	vstr	d7, [sp, #8]
   15bf4:	movt	r0, #1
   15bf8:	bl	14c9c <g_strdup_printf@plt>
   15bfc:	str	r0, [sp, #40]	; 0x28
   15c00:	mov	r0, r5
   15c04:	ldr	r1, [sp, #40]	; 0x28
   15c08:	bl	14918 <gtk_label_set_label@plt>
   15c0c:	mov	r1, r7
   15c10:	add	r0, sp, #72	; 0x48
   15c14:	bl	15110 <cmsXYZ2xyY@plt>
   15c18:	movw	r1, #48556	; 0xbdac
   15c1c:	ldr	r0, [r4, #56]	; 0x38
   15c20:	movt	r1, #1
   15c24:	bl	14c54 <gtk_builder_get_object@plt>
   15c28:	ldr	r1, [sp, #44]	; 0x2c
   15c2c:	bl	149a8 <g_type_check_instance_cast@plt>
   15c30:	mov	r5, r0
   15c34:	ldrd	r0, [sp, #80]	; 0x50
   15c38:	ldrd	r2, [sp, #72]	; 0x48
   15c3c:	strd	r0, [sp]
   15c40:	ldrd	r0, [sp, #88]	; 0x58
   15c44:	strd	r0, [sp, #8]
   15c48:	movw	r0, #48576	; 0xbdc0
   15c4c:	movt	r0, #1
   15c50:	bl	14c9c <g_strdup_printf@plt>
   15c54:	str	r0, [sp, #24]
   15c58:	mov	r0, r5
   15c5c:	ldr	r1, [sp, #24]
   15c60:	bl	14918 <gtk_label_set_label@plt>
   15c64:	add	r1, sp, #72	; 0x48
   15c68:	add	r0, sp, #64	; 0x40
   15c6c:	bl	14c24 <cmsTempFromWhitePoint@plt>
   15c70:	cmp	r0, #0
   15c74:	bne	15f24 <g_strcmp0@plt+0x9d0>
   15c78:	movw	r1, #48596	; 0xbdd4
   15c7c:	ldr	r0, [r4, #56]	; 0x38
   15c80:	movt	r1, #1
   15c84:	bl	14c54 <gtk_builder_get_object@plt>
   15c88:	ldr	r1, [sp, #44]	; 0x2c
   15c8c:	bl	149a8 <g_type_check_instance_cast@plt>
   15c90:	mov	r5, r0
   15c94:	ldrd	r2, [sp, #64]	; 0x40
   15c98:	movw	r0, #48616	; 0xbde8
   15c9c:	movt	r0, #1
   15ca0:	bl	14c9c <g_strdup_printf@plt>
   15ca4:	str	r0, [sp, #28]
   15ca8:	mov	r0, r5
   15cac:	ldr	r1, [sp, #28]
   15cb0:	bl	14918 <gtk_label_set_label@plt>
   15cb4:	movw	r1, #48624	; 0xbdf0
   15cb8:	ldr	r0, [r4, #56]	; 0x38
   15cbc:	movt	r1, #1
   15cc0:	bl	14c54 <gtk_builder_get_object@plt>
   15cc4:	ldr	r1, [sp, #44]	; 0x2c
   15cc8:	bl	149a8 <g_type_check_instance_cast@plt>
   15ccc:	ldrb	r1, [sp, #60]	; 0x3c
   15cd0:	mov	r5, r0
   15cd4:	ldrb	r2, [sp, #61]	; 0x3d
   15cd8:	movw	r0, #48636	; 0xbdfc
   15cdc:	ldrb	r3, [sp, #62]	; 0x3e
   15ce0:	movt	r0, #1
   15ce4:	stm	sp, {r1, r2, r3}
   15ce8:	bl	14c9c <g_strdup_printf@plt>
   15cec:	str	r0, [sp, #32]
   15cf0:	mov	r0, r5
   15cf4:	ldr	r1, [sp, #32]
   15cf8:	bl	14918 <gtk_label_set_label@plt>
   15cfc:	ldr	r0, [sp, #20]
   15d00:	ldrb	r6, [sp, #60]	; 0x3c
   15d04:	ldrb	r7, [sp, #61]	; 0x3d
   15d08:	ldrb	r8, [sp, #62]	; 0x3e
   15d0c:	bl	14a80 <gdk_pixbuf_get_n_channels@plt>
   15d10:	mov	sl, r0
   15d14:	ldr	r0, [sp, #20]
   15d18:	bl	14d8c <gdk_pixbuf_get_width@plt>
   15d1c:	mov	r5, r0
   15d20:	ldr	r0, [sp, #20]
   15d24:	bl	14d20 <gdk_pixbuf_get_height@plt>
   15d28:	str	r0, [sp, #48]	; 0x30
   15d2c:	ldr	r0, [sp, #20]
   15d30:	bl	14b7c <gdk_pixbuf_get_rowstride@plt>
   15d34:	str	r0, [sp, #52]	; 0x34
   15d38:	ldr	r0, [sp, #20]
   15d3c:	bl	1535c <gdk_pixbuf_get_pixels@plt>
   15d40:	ldr	r3, [sp, #48]	; 0x30
   15d44:	cmp	r3, #0
   15d48:	ble	15d94 <g_strcmp0@plt+0x840>
   15d4c:	ldr	ip, [sp, #48]	; 0x30
   15d50:	mov	r1, #0
   15d54:	ldr	lr, [sp, #52]	; 0x34
   15d58:	cmp	r5, #0
   15d5c:	ble	15d84 <g_strcmp0@plt+0x830>
   15d60:	mov	r3, r0
   15d64:	mov	r2, #0
   15d68:	add	r2, r2, #1
   15d6c:	strb	r6, [r3]
   15d70:	cmp	r2, r5
   15d74:	strb	r7, [r3, #1]
   15d78:	strb	r8, [r3, #2]
   15d7c:	add	r3, r3, sl
   15d80:	bne	15d68 <g_strcmp0@plt+0x814>
   15d84:	add	r1, r1, #1
   15d88:	add	r0, r0, lr
   15d8c:	cmp	r1, ip
   15d90:	bne	15d58 <g_strcmp0@plt+0x804>
   15d94:	movw	r1, #48664	; 0xbe18
   15d98:	ldr	r0, [r4, #56]	; 0x38
   15d9c:	movt	r1, #1
   15da0:	bl	14c54 <gtk_builder_get_object@plt>
   15da4:	ldr	r1, [sp, #44]	; 0x2c
   15da8:	bl	149a8 <g_type_check_instance_cast@plt>
   15dac:	vldr	d6, [sp, #144]	; 0x90
   15db0:	vldr	d7, [pc, #40]	; 15de0 <g_strcmp0@plt+0x88c>
   15db4:	vcmpe.f64	d6, d7
   15db8:	mov	r6, r0
   15dbc:	vmrs	APSR_nzcv, fpscr
   15dc0:	ble	15df0 <g_strcmp0@plt+0x89c>
   15dc4:	vldr	d5, [sp, #152]	; 0x98
   15dc8:	vcmpe.f64	d5, d7
   15dcc:	vmrs	APSR_nzcv, fpscr
   15dd0:	bgt	15f58 <g_strcmp0@plt+0xa04>
   15dd4:	b	15df0 <g_strcmp0@plt+0x89c>
   15dd8:	andeq	r0, r0, r0
   15ddc:	subsmi	r0, r9, r0
   15de0:	andmi	r0, r0, r0
   15de4:	svccc	0x00847ae1
   15de8:	andeq	r0, r0, r0
   15dec:	subsmi	r0, r9, r0
   15df0:	movw	r1, #48700	; 0xbe3c
   15df4:	mov	r0, #0
   15df8:	movt	r1, #1
   15dfc:	mov	r2, #5
   15e00:	bl	14fcc <dcgettext@plt>
   15e04:	mov	r1, r0
   15e08:	mov	r0, r6
   15e0c:	bl	14918 <gtk_label_set_label@plt>
   15e10:	mov	r5, #0
   15e14:	movw	r1, #48708	; 0xbe44
   15e18:	ldr	r0, [r4, #56]	; 0x38
   15e1c:	movt	r1, #1
   15e20:	bl	14c54 <gtk_builder_get_object@plt>
   15e24:	ldr	r1, [sp, #44]	; 0x2c
   15e28:	bl	149a8 <g_type_check_instance_cast@plt>
   15e2c:	vldr	d7, [r4, #48]	; 0x30
   15e30:	vcmpe.f64	d7, #0.0
   15e34:	mov	r6, r0
   15e38:	vmrs	APSR_nzcv, fpscr
   15e3c:	bmi	15ffc <g_strcmp0@plt+0xaa8>
   15e40:	movw	r0, #48724	; 0xbe54
   15e44:	vmov	r2, r3, d7
   15e48:	movt	r0, #1
   15e4c:	bl	14c9c <g_strdup_printf@plt>
   15e50:	mov	r4, r0
   15e54:	mov	r0, r6
   15e58:	mov	r1, r4
   15e5c:	bl	14918 <gtk_label_set_label@plt>
   15e60:	ldr	r0, [sp, #36]	; 0x24
   15e64:	ldr	r1, [sp, #20]
   15e68:	bl	14c90 <gtk_image_set_from_pixbuf@plt>
   15e6c:	mov	r0, r9
   15e70:	bl	14fa8 <g_free@plt>
   15e74:	ldr	r0, [sp, #24]
   15e78:	bl	14fa8 <g_free@plt>
   15e7c:	ldr	r0, [sp, #28]
   15e80:	bl	14fa8 <g_free@plt>
   15e84:	ldr	r0, [sp, #32]
   15e88:	bl	14fa8 <g_free@plt>
   15e8c:	ldr	r0, [sp, #40]	; 0x28
   15e90:	bl	14fa8 <g_free@plt>
   15e94:	mov	r0, r5
   15e98:	bl	14fa8 <g_free@plt>
   15e9c:	mov	r0, r4
   15ea0:	bl	14fa8 <g_free@plt>
   15ea4:	ldr	r1, [sp, #20]
   15ea8:	cmp	r1, #0
   15eac:	beq	15eb8 <g_strcmp0@plt+0x964>
   15eb0:	mov	r0, r1
   15eb4:	bl	151f4 <g_object_unref@plt>
   15eb8:	ldr	r2, [sp, #172]	; 0xac
   15ebc:	ldr	r3, [fp]
   15ec0:	cmp	r2, r3
   15ec4:	bne	16134 <g_strcmp0@plt+0xbe0>
   15ec8:	add	sp, sp, #180	; 0xb4
   15ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ed0:	str	r1, [sp, #20]
   15ed4:	mov	r0, #0
   15ed8:	bl	14fa8 <g_free@plt>
   15edc:	mov	r0, #0
   15ee0:	bl	14fa8 <g_free@plt>
   15ee4:	mov	r0, #0
   15ee8:	bl	14fa8 <g_free@plt>
   15eec:	mov	r0, #0
   15ef0:	bl	14fa8 <g_free@plt>
   15ef4:	mov	r0, #0
   15ef8:	bl	14fa8 <g_free@plt>
   15efc:	mov	r0, #0
   15f00:	bl	14fa8 <g_free@plt>
   15f04:	mov	r0, #0
   15f08:	bl	14fa8 <g_free@plt>
   15f0c:	ldr	r3, [sp, #20]
   15f10:	cmp	r3, #0
   15f14:	beq	15eb8 <g_strcmp0@plt+0x964>
   15f18:	mov	r0, r3
   15f1c:	bl	151f4 <g_object_unref@plt>
   15f20:	b	15eb8 <g_strcmp0@plt+0x964>
   15f24:	vldr	d7, [sp, #64]	; 0x40
   15f28:	vcvt.u32.f64	s13, d7
   15f2c:	movw	r2, #52429	; 0xcccd
   15f30:	movt	r2, #52428	; 0xcccc
   15f34:	vmov	r3, s13
   15f38:	umull	r1, r3, r2, r3
   15f3c:	lsr	r3, r3, #3
   15f40:	add	r3, r3, r3, lsl #2
   15f44:	lsl	r3, r3, #1
   15f48:	vmov	s13, r3
   15f4c:	vcvt.f64.u32	d7, s13
   15f50:	vstr	d7, [sp, #64]	; 0x40
   15f54:	b	15c78 <g_strcmp0@plt+0x724>
   15f58:	vldr	d4, [sp, #160]	; 0xa0
   15f5c:	vcmpe.f64	d4, d7
   15f60:	vmrs	APSR_nzcv, fpscr
   15f64:	ble	15df0 <g_strcmp0@plt+0x89c>
   15f68:	vldr	d3, [sp, #120]	; 0x78
   15f6c:	vsub.f64	d3, d3, d6
   15f70:	vldr	d7, [pc, #-400]	; 15de8 <g_strcmp0@plt+0x894>
   15f74:	movw	r0, #48676	; 0xbe24
   15f78:	movt	r0, #1
   15f7c:	vdiv.f64	d6, d3, d6
   15f80:	vldr	d3, [sp, #128]	; 0x80
   15f84:	vsub.f64	d3, d3, d5
   15f88:	vdiv.f64	d5, d3, d5
   15f8c:	vldr	d3, [sp, #136]	; 0x88
   15f90:	vsub.f64	d3, d3, d4
   15f94:	vdiv.f64	d4, d3, d4
   15f98:	vmul.f64	d7, d6, d7
   15f9c:	vcmpe.f64	d7, #0.0
   15fa0:	vmrs	APSR_nzcv, fpscr
   15fa4:	vnegmi.f64	d6, d7
   15fa8:	vmovpl.f64	d6, d7
   15fac:	vldr	d7, [pc, #-460]	; 15de8 <g_strcmp0@plt+0x894>
   15fb0:	vmul.f64	d7, d5, d7
   15fb4:	vmov	r2, r3, d6
   15fb8:	vcmpe.f64	d7, #0.0
   15fbc:	vmrs	APSR_nzcv, fpscr
   15fc0:	vnegmi.f64	d5, d7
   15fc4:	vmovpl.f64	d5, d7
   15fc8:	vldr	d7, [pc, #-488]	; 15de8 <g_strcmp0@plt+0x894>
   15fcc:	vstr	d5, [sp]
   15fd0:	vmul.f64	d7, d4, d7
   15fd4:	vcmpe.f64	d7, #0.0
   15fd8:	vmrs	APSR_nzcv, fpscr
   15fdc:	vnegmi.f64	d7, d7
   15fe0:	vstr	d7, [sp, #8]
   15fe4:	bl	14c9c <g_strdup_printf@plt>
   15fe8:	mov	r5, r0
   15fec:	mov	r0, r6
   15ff0:	mov	r1, r5
   15ff4:	bl	14918 <gtk_label_set_label@plt>
   15ff8:	b	15e14 <g_strcmp0@plt+0x8c0>
   15ffc:	movw	r1, #48700	; 0xbe3c
   16000:	mov	r0, #0
   16004:	movt	r1, #1
   16008:	mov	r2, #5
   1600c:	bl	14fcc <dcgettext@plt>
   16010:	mov	r1, r0
   16014:	mov	r0, r6
   16018:	bl	14918 <gtk_label_set_label@plt>
   1601c:	mov	r4, #0
   16020:	b	15e60 <g_strcmp0@plt+0x90c>
   16024:	mov	r5, #0
   16028:	mov	r6, r0
   1602c:	mov	r4, r5
   16030:	mov	r0, r9
   16034:	bl	14fa8 <g_free@plt>
   16038:	ldr	r0, [sp, #24]
   1603c:	bl	14fa8 <g_free@plt>
   16040:	ldr	r0, [sp, #28]
   16044:	bl	14fa8 <g_free@plt>
   16048:	ldr	r0, [sp, #32]
   1604c:	bl	14fa8 <g_free@plt>
   16050:	ldr	r0, [sp, #40]	; 0x28
   16054:	bl	14fa8 <g_free@plt>
   16058:	mov	r0, r5
   1605c:	bl	14fa8 <g_free@plt>
   16060:	mov	r5, r6
   16064:	mov	r0, r4
   16068:	bl	14fa8 <g_free@plt>
   1606c:	ldr	r1, [sp, #20]
   16070:	cmp	r1, #0
   16074:	beq	16080 <g_strcmp0@plt+0xb2c>
   16078:	mov	r0, r1
   1607c:	bl	151f4 <g_object_unref@plt>
   16080:	mov	r0, r5
   16084:	bl	1538c <_Unwind_Resume@plt>
   16088:	mov	r9, #0
   1608c:	mov	r6, r0
   16090:	str	r9, [sp, #24]
   16094:	mov	r5, r9
   16098:	str	r9, [sp, #28]
   1609c:	mov	r4, r9
   160a0:	str	r9, [sp, #32]
   160a4:	str	r9, [sp, #40]	; 0x28
   160a8:	b	16030 <g_strcmp0@plt+0xadc>
   160ac:	mov	r5, #0
   160b0:	mov	r6, r0
   160b4:	mov	r4, r5
   160b8:	b	16058 <g_strcmp0@plt+0xb04>
   160bc:	mov	r3, #0
   160c0:	mov	r6, r0
   160c4:	str	r3, [sp, #40]	; 0x28
   160c8:	mov	r5, r3
   160cc:	mov	r4, r3
   160d0:	b	16050 <g_strcmp0@plt+0xafc>
   160d4:	mov	r1, #0
   160d8:	mov	r6, r0
   160dc:	str	r1, [sp, #32]
   160e0:	mov	r5, r1
   160e4:	str	r1, [sp, #40]	; 0x28
   160e8:	mov	r4, r1
   160ec:	b	16048 <g_strcmp0@plt+0xaf4>
   160f0:	mov	r3, #0
   160f4:	mov	r6, r0
   160f8:	str	r3, [sp, #28]
   160fc:	mov	r5, r3
   16100:	str	r3, [sp, #32]
   16104:	mov	r4, r3
   16108:	str	r3, [sp, #40]	; 0x28
   1610c:	b	16040 <g_strcmp0@plt+0xaec>
   16110:	mov	r1, #0
   16114:	mov	r6, r0
   16118:	str	r1, [sp, #24]
   1611c:	mov	r5, r1
   16120:	str	r1, [sp, #28]
   16124:	mov	r4, r1
   16128:	str	r1, [sp, #32]
   1612c:	str	r1, [sp, #40]	; 0x28
   16130:	b	16038 <g_strcmp0@plt+0xae4>
   16134:	bl	14f3c <__stack_chk_fail@plt>
   16138:	mov	r9, #0
   1613c:	mov	r6, r0
   16140:	str	r9, [sp, #24]
   16144:	mov	r5, r9
   16148:	str	r9, [sp, #28]
   1614c:	mov	r4, r9
   16150:	str	r9, [sp, #32]
   16154:	str	r9, [sp, #40]	; 0x28
   16158:	str	r9, [sp, #20]
   1615c:	b	16030 <g_strcmp0@plt+0xadc>
   16160:	b	16138 <g_strcmp0@plt+0xbe4>
   16164:	b	16138 <g_strcmp0@plt+0xbe4>
   16168:	b	16138 <g_strcmp0@plt+0xbe4>
   1616c:	b	16138 <g_strcmp0@plt+0xbe4>
   16170:	b	16138 <g_strcmp0@plt+0xbe4>
   16174:	b	16088 <g_strcmp0@plt+0xb34>
   16178:	b	16088 <g_strcmp0@plt+0xb34>
   1617c:	b	16088 <g_strcmp0@plt+0xb34>
   16180:	b	16088 <g_strcmp0@plt+0xb34>
   16184:	b	16138 <g_strcmp0@plt+0xbe4>
   16188:	b	16138 <g_strcmp0@plt+0xbe4>
   1618c:	b	16138 <g_strcmp0@plt+0xbe4>
   16190:	b	16138 <g_strcmp0@plt+0xbe4>
   16194:	b	16088 <g_strcmp0@plt+0xb34>
   16198:	b	16088 <g_strcmp0@plt+0xb34>
   1619c:	b	16088 <g_strcmp0@plt+0xb34>
   161a0:	b	16088 <g_strcmp0@plt+0xb34>
   161a4:	b	16088 <g_strcmp0@plt+0xb34>
   161a8:	b	16088 <g_strcmp0@plt+0xb34>
   161ac:	b	16088 <g_strcmp0@plt+0xb34>
   161b0:	b	16088 <g_strcmp0@plt+0xb34>
   161b4:	b	16088 <g_strcmp0@plt+0xb34>
   161b8:	b	16088 <g_strcmp0@plt+0xb34>
   161bc:	b	16088 <g_strcmp0@plt+0xb34>
   161c0:	mov	r1, #0
   161c4:	mov	r6, r0
   161c8:	str	r1, [sp, #28]
   161cc:	mov	r5, r1
   161d0:	str	r1, [sp, #32]
   161d4:	mov	r4, r1
   161d8:	b	16030 <g_strcmp0@plt+0xadc>
   161dc:	mov	r3, #0
   161e0:	mov	r6, r0
   161e4:	str	r3, [sp, #28]
   161e8:	mov	r5, r3
   161ec:	str	r3, [sp, #32]
   161f0:	mov	r4, r3
   161f4:	b	16030 <g_strcmp0@plt+0xadc>
   161f8:	b	161c0 <g_strcmp0@plt+0xc6c>
   161fc:	mov	r3, #0
   16200:	mov	r6, r0
   16204:	str	r3, [sp, #32]
   16208:	mov	r5, r3
   1620c:	mov	r4, r3
   16210:	b	16030 <g_strcmp0@plt+0xadc>
   16214:	mov	r1, #0
   16218:	mov	r6, r0
   1621c:	str	r1, [sp, #32]
   16220:	mov	r5, r1
   16224:	mov	r4, r1
   16228:	b	16030 <g_strcmp0@plt+0xadc>
   1622c:	b	161fc <g_strcmp0@plt+0xca8>
   16230:	b	16214 <g_strcmp0@plt+0xcc0>
   16234:	b	16024 <g_strcmp0@plt+0xad0>
   16238:	b	16024 <g_strcmp0@plt+0xad0>
   1623c:	b	16024 <g_strcmp0@plt+0xad0>
   16240:	b	16024 <g_strcmp0@plt+0xad0>
   16244:	b	16024 <g_strcmp0@plt+0xad0>
   16248:	b	16024 <g_strcmp0@plt+0xad0>
   1624c:	b	16024 <g_strcmp0@plt+0xad0>
   16250:	b	161dc <g_strcmp0@plt+0xc88>
   16254:	b	161c0 <g_strcmp0@plt+0xc6c>
   16258:	mov	r6, r0
   1625c:	b	16048 <g_strcmp0@plt+0xaf4>
   16260:	mov	r6, r0
   16264:	b	16050 <g_strcmp0@plt+0xafc>
   16268:	mov	r6, r0
   1626c:	b	16058 <g_strcmp0@plt+0xb04>
   16270:	mov	r5, r0
   16274:	b	16064 <g_strcmp0@plt+0xb10>
   16278:	mov	r5, r0
   1627c:	mov	r4, #0
   16280:	b	16064 <g_strcmp0@plt+0xb10>
   16284:	b	16088 <g_strcmp0@plt+0xb34>
   16288:	mov	r5, r0
   1628c:	b	1606c <g_strcmp0@plt+0xb18>
   16290:	b	16024 <g_strcmp0@plt+0xad0>
   16294:	mov	r6, r0
   16298:	mov	r4, #0
   1629c:	b	16030 <g_strcmp0@plt+0xadc>
   162a0:	mov	r6, r0
   162a4:	b	16030 <g_strcmp0@plt+0xadc>
   162a8:	mov	r6, r0
   162ac:	b	16038 <g_strcmp0@plt+0xae4>
   162b0:	mov	r6, r0
   162b4:	b	16040 <g_strcmp0@plt+0xaec>
   162b8:	mov	r3, #0
   162bc:	mov	r6, r0
   162c0:	str	r3, [sp, #24]
   162c4:	mov	r5, r3
   162c8:	str	r3, [sp, #28]
   162cc:	mov	r4, r3
   162d0:	str	r3, [sp, #32]
   162d4:	b	16030 <g_strcmp0@plt+0xadc>
   162d8:	mov	r1, #0
   162dc:	mov	r6, r0
   162e0:	str	r1, [sp, #24]
   162e4:	mov	r5, r1
   162e8:	str	r1, [sp, #28]
   162ec:	mov	r4, r1
   162f0:	str	r1, [sp, #32]
   162f4:	b	16030 <g_strcmp0@plt+0xadc>
   162f8:	b	162b8 <g_strcmp0@plt+0xd64>
   162fc:	b	162d8 <g_strcmp0@plt+0xd84>
   16300:	b	16088 <g_strcmp0@plt+0xb34>
   16304:	b	16088 <g_strcmp0@plt+0xb34>
   16308:	b	16088 <g_strcmp0@plt+0xb34>
   1630c:	mov	r1, #0
   16310:	mov	r6, r0
   16314:	str	r1, [sp, #24]
   16318:	mov	r5, r1
   1631c:	str	r1, [sp, #28]
   16320:	mov	r4, r1
   16324:	str	r1, [sp, #32]
   16328:	str	r1, [sp, #40]	; 0x28
   1632c:	b	16030 <g_strcmp0@plt+0xadc>
   16330:	mov	r3, #0
   16334:	mov	r6, r0
   16338:	str	r3, [sp, #24]
   1633c:	mov	r5, r3
   16340:	str	r3, [sp, #28]
   16344:	mov	r4, r3
   16348:	str	r3, [sp, #32]
   1634c:	str	r3, [sp, #40]	; 0x28
   16350:	b	16030 <g_strcmp0@plt+0xadc>
   16354:	b	1630c <g_strcmp0@plt+0xdb8>
   16358:	b	16330 <g_strcmp0@plt+0xddc>
   1635c:	b	162d8 <g_strcmp0@plt+0xd84>
   16360:	b	16024 <g_strcmp0@plt+0xad0>
   16364:	b	16294 <g_strcmp0@plt+0xd40>
   16368:	b	16294 <g_strcmp0@plt+0xd40>
   1636c:	b	16294 <g_strcmp0@plt+0xd40>
   16370:	b	16294 <g_strcmp0@plt+0xd40>
   16374:	push	{r4, r5, r6, r7, lr}
   16378:	movw	r4, #4120	; 0x1018
   1637c:	movt	r4, #3
   16380:	sub	sp, sp, #36	; 0x24
   16384:	mov	r6, r0
   16388:	mov	r7, r1
   1638c:	ldr	r3, [r4]
   16390:	mov	r2, #0
   16394:	str	r2, [sp, #8]
   16398:	str	r3, [sp, #28]
   1639c:	bl	14cfc <gtk_combo_box_get_type@plt>
   163a0:	mov	r5, r0
   163a4:	mov	r0, r6
   163a8:	mov	r1, r5
   163ac:	bl	149a8 <g_type_check_instance_cast@plt>
   163b0:	add	r1, sp, #12
   163b4:	bl	14be8 <gtk_combo_box_get_active_iter@plt>
   163b8:	cmp	r0, #0
   163bc:	bne	163e8 <g_strcmp0@plt+0xe94>
   163c0:	ldr	r0, [sp, #8]
   163c4:	cmp	r0, #0
   163c8:	beq	163d0 <g_strcmp0@plt+0xe7c>
   163cc:	bl	151f4 <g_object_unref@plt>
   163d0:	ldr	r2, [sp, #28]
   163d4:	ldr	r3, [r4]
   163d8:	cmp	r2, r3
   163dc:	bne	1644c <g_strcmp0@plt+0xef8>
   163e0:	add	sp, sp, #36	; 0x24
   163e4:	pop	{r4, r5, r6, r7, pc}
   163e8:	mov	r0, r6
   163ec:	mov	r1, r5
   163f0:	bl	149a8 <g_type_check_instance_cast@plt>
   163f4:	bl	1475c <gtk_combo_box_get_model@plt>
   163f8:	mvn	r3, #0
   163fc:	add	r1, sp, #12
   16400:	str	r3, [sp]
   16404:	mov	r2, #1
   16408:	add	r3, sp, #8
   1640c:	bl	1541c <gtk_tree_model_get@plt>
   16410:	ldr	r0, [sp, #8]
   16414:	cmp	r0, #0
   16418:	beq	163d0 <g_strcmp0@plt+0xe7c>
   1641c:	bl	149c0 <cd_profile_get_filename@plt>
   16420:	mov	r3, r0
   16424:	movw	r2, #48736	; 0xbe60
   16428:	movw	r0, #48456	; 0xbd48
   1642c:	str	r3, [r7, #4]
   16430:	movt	r0, #1
   16434:	mov	r1, #128	; 0x80
   16438:	movt	r2, #1
   1643c:	bl	14a38 <g_log@plt>
   16440:	mov	r0, r7
   16444:	bl	15960 <g_strcmp0@plt+0x40c>
   16448:	b	163c0 <g_strcmp0@plt+0xe6c>
   1644c:	bl	14f3c <__stack_chk_fail@plt>
   16450:	ldr	r3, [sp, #8]
   16454:	mov	r4, r0
   16458:	cmp	r3, #0
   1645c:	beq	16468 <g_strcmp0@plt+0xf14>
   16460:	mov	r0, r3
   16464:	bl	151f4 <g_object_unref@plt>
   16468:	mov	r0, r4
   1646c:	bl	1538c <_Unwind_Resume@plt>
   16470:	push	{r4, r5, r6, r7, r8, r9, lr}
   16474:	movw	r4, #4120	; 0x1018
   16478:	movt	r4, #3
   1647c:	sub	sp, sp, #44	; 0x2c
   16480:	subs	r5, r2, #0
   16484:	mov	r6, r1
   16488:	ldr	r3, [r4]
   1648c:	addeq	r5, sp, #20
   16490:	mov	r7, r0
   16494:	str	r3, [sp, #36]	; 0x24
   16498:	bl	14cfc <gtk_combo_box_get_type@plt>
   1649c:	mov	r1, r0
   164a0:	mov	r0, r7
   164a4:	bl	149a8 <g_type_check_instance_cast@plt>
   164a8:	bl	1475c <gtk_combo_box_get_model@plt>
   164ac:	mov	r7, r0
   164b0:	mov	r0, r6
   164b4:	bl	147c8 <cd_profile_get_title@plt>
   164b8:	mov	r9, r0
   164bc:	bl	153e0 <gtk_list_store_get_type@plt>
   164c0:	mov	r8, r0
   164c4:	mov	r0, r7
   164c8:	mov	r1, r8
   164cc:	bl	149a8 <g_type_check_instance_cast@plt>
   164d0:	mov	r1, r5
   164d4:	bl	15080 <gtk_list_store_append@plt>
   164d8:	mov	r1, r8
   164dc:	mov	r0, r7
   164e0:	bl	149a8 <g_type_check_instance_cast@plt>
   164e4:	mov	r3, r9
   164e8:	mov	r2, #1
   164ec:	mvn	ip, #0
   164f0:	str	r2, [sp]
   164f4:	mov	r1, r5
   164f8:	mov	r2, #0
   164fc:	str	r6, [sp, #4]
   16500:	str	ip, [sp, #8]
   16504:	bl	14858 <gtk_list_store_set@plt>
   16508:	ldr	r2, [sp, #36]	; 0x24
   1650c:	ldr	r3, [r4]
   16510:	cmp	r2, r3
   16514:	bne	16520 <g_strcmp0@plt+0xfcc>
   16518:	add	sp, sp, #44	; 0x2c
   1651c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16520:	bl	14f3c <__stack_chk_fail@plt>
   16524:	push	{r4, r5, lr}
   16528:	movw	r4, #4120	; 0x1018
   1652c:	movt	r4, #3
   16530:	sub	sp, sp, #12
   16534:	add	r2, sp, #8
   16538:	mov	r5, r0
   1653c:	ldr	r3, [r4]
   16540:	mov	r1, #0
   16544:	ldr	r0, [r0, #40]	; 0x28
   16548:	str	r1, [r2, #-8]!
   1654c:	mov	r2, sp
   16550:	str	r3, [sp, #4]
   16554:	bl	14b1c <cd_sensor_unlock_sync@plt>
   16558:	cmp	r0, #0
   1655c:	beq	16594 <g_strcmp0@plt+0x1040>
   16560:	ldr	r0, [sp]
   16564:	mov	r3, #0
   16568:	str	r3, [r5, #72]	; 0x48
   1656c:	cmp	r0, r3
   16570:	beq	16578 <g_strcmp0@plt+0x1024>
   16574:	bl	148dc <g_error_free@plt>
   16578:	ldr	r2, [sp, #4]
   1657c:	mov	r0, #0
   16580:	ldr	r3, [r4]
   16584:	cmp	r2, r3
   16588:	bne	165b8 <g_strcmp0@plt+0x1064>
   1658c:	add	sp, sp, #12
   16590:	pop	{r4, r5, pc}
   16594:	ldr	r3, [sp]
   16598:	movw	r0, #48456	; 0xbd48
   1659c:	movw	r2, #48760	; 0xbe78
   165a0:	movt	r0, #1
   165a4:	movt	r2, #1
   165a8:	mov	r1, #16
   165ac:	ldr	r3, [r3, #8]
   165b0:	bl	14a38 <g_log@plt>
   165b4:	b	16560 <g_strcmp0@plt+0x100c>
   165b8:	bl	14f3c <__stack_chk_fail@plt>
   165bc:	ldr	r3, [sp]
   165c0:	mov	r4, r0
   165c4:	cmp	r3, #0
   165c8:	beq	165d4 <g_strcmp0@plt+0x1080>
   165cc:	mov	r0, r3
   165d0:	bl	148dc <g_error_free@plt>
   165d4:	mov	r0, r4
   165d8:	bl	1538c <_Unwind_Resume@plt>
   165dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   165e0:	movw	r5, #4120	; 0x1018
   165e4:	movt	r5, #3
   165e8:	sub	sp, sp, #12
   165ec:	add	r6, sp, #8
   165f0:	mov	r4, r0
   165f4:	ldr	r3, [r5]
   165f8:	mov	r1, #0
   165fc:	mov	r2, sp
   16600:	ldr	r0, [r0]
   16604:	str	r1, [r6, #-8]!
   16608:	str	r3, [sp, #4]
   1660c:	bl	153a4 <cd_client_get_sensors_sync@plt>
   16610:	subs	r7, r0, #0
   16614:	beq	167a8 <g_strcmp0@plt+0x1254>
   16618:	ldr	r3, [r7, #4]
   1661c:	cmp	r3, #0
   16620:	bne	1670c <g_strcmp0@plt+0x11b8>
   16624:	ldr	r6, [r4, #60]	; 0x3c
   16628:	bl	1490c <gtk_label_get_type@plt>
   1662c:	mov	r1, r0
   16630:	mov	r0, r6
   16634:	bl	149a8 <g_type_check_instance_cast@plt>
   16638:	mov	r6, r0
   1663c:	movw	r1, #48784	; 0xbe90
   16640:	mov	r0, #0
   16644:	movt	r1, #1
   16648:	mov	r2, #5
   1664c:	bl	14fcc <dcgettext@plt>
   16650:	mov	r1, r0
   16654:	mov	r0, r6
   16658:	bl	14918 <gtk_label_set_label@plt>
   1665c:	mov	r6, #0
   16660:	movw	r1, #48880	; 0xbef0
   16664:	ldr	r0, [r4, #56]	; 0x38
   16668:	movt	r1, #1
   1666c:	bl	14c54 <gtk_builder_get_object@plt>
   16670:	mov	r9, r0
   16674:	bl	14978 <gtk_widget_get_type@plt>
   16678:	mov	r8, r0
   1667c:	mov	r0, r9
   16680:	mov	r1, r8
   16684:	bl	149a8 <g_type_check_instance_cast@plt>
   16688:	mov	r1, r6
   1668c:	bl	15524 <gtk_widget_set_sensitive@plt>
   16690:	movw	r1, #48896	; 0xbf00
   16694:	ldr	r0, [r4, #56]	; 0x38
   16698:	movt	r1, #1
   1669c:	bl	14c54 <gtk_builder_get_object@plt>
   166a0:	mov	r1, r8
   166a4:	bl	149a8 <g_type_check_instance_cast@plt>
   166a8:	cmp	r6, #0
   166ac:	moveq	r1, r6
   166b0:	beq	166c0 <g_strcmp0@plt+0x116c>
   166b4:	ldr	r1, [r4, #8]
   166b8:	adds	r1, r1, #0
   166bc:	movne	r1, #1
   166c0:	bl	15524 <gtk_widget_set_sensitive@plt>
   166c4:	rsbs	r1, r6, #1
   166c8:	ldr	r0, [r4, #64]	; 0x40
   166cc:	movcc	r1, #0
   166d0:	bl	154b8 <gtk_widget_set_visible@plt>
   166d4:	cmp	r7, #0
   166d8:	beq	166e4 <g_strcmp0@plt+0x1190>
   166dc:	mov	r0, r7
   166e0:	bl	152d8 <g_ptr_array_unref@plt>
   166e4:	ldr	r0, [sp]
   166e8:	cmp	r0, #0
   166ec:	beq	166f4 <g_strcmp0@plt+0x11a0>
   166f0:	bl	148dc <g_error_free@plt>
   166f4:	ldr	r2, [sp, #4]
   166f8:	ldr	r3, [r5]
   166fc:	cmp	r2, r3
   16700:	bne	167cc <g_strcmp0@plt+0x1278>
   16704:	add	sp, sp, #12
   16708:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1670c:	ldr	r3, [r7]
   16710:	ldr	r0, [r3]
   16714:	bl	14774 <g_object_ref@plt>
   16718:	str	r0, [r4, #40]	; 0x28
   1671c:	mov	r2, sp
   16720:	mov	r1, #0
   16724:	bl	14b40 <cd_sensor_connect_sync@plt>
   16728:	subs	r6, r0, #0
   1672c:	beq	1677c <g_strcmp0@plt+0x1228>
   16730:	ldr	r0, [r4, #40]	; 0x28
   16734:	bl	147bc <cd_sensor_get_native@plt>
   16738:	cmp	r0, #0
   1673c:	bne	167a0 <g_strcmp0@plt+0x124c>
   16740:	ldr	r8, [r4, #60]	; 0x3c
   16744:	bl	1490c <gtk_label_get_type@plt>
   16748:	mov	r1, r0
   1674c:	mov	r0, r8
   16750:	bl	149a8 <g_type_check_instance_cast@plt>
   16754:	mov	r8, r0
   16758:	movw	r1, #48844	; 0xbecc
   1675c:	mov	r0, #0
   16760:	movt	r1, #1
   16764:	mov	r2, #5
   16768:	bl	14fcc <dcgettext@plt>
   1676c:	mov	r1, r0
   16770:	mov	r0, r8
   16774:	bl	14918 <gtk_label_set_label@plt>
   16778:	b	16660 <g_strcmp0@plt+0x110c>
   1677c:	ldr	r3, [sp]
   16780:	movw	r0, #48456	; 0xbd48
   16784:	movw	r2, #48812	; 0xbeac
   16788:	movt	r0, #1
   1678c:	movt	r2, #1
   16790:	mov	r1, #16
   16794:	ldr	r3, [r3, #8]
   16798:	bl	14a38 <g_log@plt>
   1679c:	b	1665c <g_strcmp0@plt+0x1108>
   167a0:	mov	r6, #1
   167a4:	b	16660 <g_strcmp0@plt+0x110c>
   167a8:	ldr	r3, [sp]
   167ac:	movw	r0, #48456	; 0xbd48
   167b0:	movw	r2, #48992	; 0xbf60
   167b4:	movt	r0, #1
   167b8:	movt	r2, #1
   167bc:	mov	r1, #16
   167c0:	ldr	r3, [r3, #8]
   167c4:	bl	14a38 <g_log@plt>
   167c8:	b	1665c <g_strcmp0@plt+0x1108>
   167cc:	bl	14f3c <__stack_chk_fail@plt>
   167d0:	mov	r4, r0
   167d4:	ldr	r0, [sp]
   167d8:	cmp	r0, #0
   167dc:	beq	167e4 <g_strcmp0@plt+0x1290>
   167e0:	bl	148dc <g_error_free@plt>
   167e4:	mov	r0, r4
   167e8:	bl	1538c <_Unwind_Resume@plt>
   167ec:	mov	r4, r0
   167f0:	mov	r7, #0
   167f4:	cmp	r7, #0
   167f8:	beq	167d4 <g_strcmp0@plt+0x1280>
   167fc:	mov	r0, r7
   16800:	bl	152d8 <g_ptr_array_unref@plt>
   16804:	b	167d4 <g_strcmp0@plt+0x1280>
   16808:	b	167d0 <g_strcmp0@plt+0x127c>
   1680c:	mov	r4, r0
   16810:	b	167f4 <g_strcmp0@plt+0x12a0>
   16814:	mov	r4, r0
   16818:	b	167fc <g_strcmp0@plt+0x12a8>
   1681c:	mov	r0, r2
   16820:	b	165dc <g_strcmp0@plt+0x1088>
   16824:	push	{r4, r5, r6, r7, lr}
   16828:	movw	r5, #4120	; 0x1018
   1682c:	movt	r5, #3
   16830:	sub	sp, sp, #12
   16834:	mov	r4, r1
   16838:	movw	r1, #48496	; 0xbd70
   1683c:	ldr	r3, [r5]
   16840:	movt	r1, #1
   16844:	ldr	r0, [r4, #56]	; 0x38
   16848:	mov	r2, #0
   1684c:	str	r2, [sp]
   16850:	str	r3, [sp, #4]
   16854:	bl	14c54 <gtk_builder_get_object@plt>
   16858:	mov	r7, r0
   1685c:	bl	14978 <gtk_widget_get_type@plt>
   16860:	mov	r6, r0
   16864:	mov	r0, r7
   16868:	mov	r1, r6
   1686c:	bl	149a8 <g_type_check_instance_cast@plt>
   16870:	mov	r7, r0
   16874:	bl	14ee8 <gtk_image_get_type@plt>
   16878:	mov	r1, r0
   1687c:	mov	r0, r7
   16880:	bl	149a8 <g_type_check_instance_cast@plt>
   16884:	movw	r1, #48916	; 0xbf14
   16888:	movt	r1, #1
   1688c:	bl	14aa4 <gtk_image_set_from_file@plt>
   16890:	ldr	r0, [r4, #40]	; 0x28
   16894:	bl	14ab0 <cd_sensor_get_locked@plt>
   16898:	subs	r1, r0, #0
   1689c:	beq	16980 <g_strcmp0@plt+0x142c>
   168a0:	ldr	r0, [r4, #72]	; 0x48
   168a4:	cmp	r0, #0
   168a8:	bne	16970 <g_strcmp0@plt+0x141c>
   168ac:	ldr	r0, [r4, #40]	; 0x28
   168b0:	mov	r1, #1
   168b4:	mov	r2, #0
   168b8:	mov	r3, sp
   168bc:	bl	154f4 <cd_sensor_get_sample_sync@plt>
   168c0:	subs	r7, r0, #0
   168c4:	beq	169c8 <g_strcmp0@plt+0x1474>
   168c8:	add	r1, r4, #16
   168cc:	bl	15134 <cd_color_xyz_copy@plt>
   168d0:	movw	r1, #25892	; 0x6524
   168d4:	mov	r0, #30
   168d8:	movt	r1, #1
   168dc:	mov	r2, r4
   168e0:	bl	150c8 <g_timeout_add_seconds@plt>
   168e4:	str	r0, [r4, #72]	; 0x48
   168e8:	mov	r0, r4
   168ec:	bl	15960 <g_strcmp0@plt+0x40c>
   168f0:	movw	r1, #48896	; 0xbf00
   168f4:	ldr	r0, [r4, #56]	; 0x38
   168f8:	movt	r1, #1
   168fc:	bl	14c54 <gtk_builder_get_object@plt>
   16900:	mov	r1, r6
   16904:	bl	149a8 <g_type_check_instance_cast@plt>
   16908:	mov	r6, r0
   1690c:	bl	14a74 <gtk_expander_get_type@plt>
   16910:	mov	r1, r0
   16914:	mov	r0, r6
   16918:	bl	149a8 <g_type_check_instance_cast@plt>
   1691c:	mov	r1, #1
   16920:	bl	14b28 <gtk_expander_set_expanded@plt>
   16924:	mov	r0, r6
   16928:	mov	r1, #1
   1692c:	bl	15524 <gtk_widget_set_sensitive@plt>
   16930:	ldr	r0, [sp]
   16934:	mov	r3, #1
   16938:	str	r3, [r4, #8]
   1693c:	cmp	r0, #0
   16940:	beq	16948 <g_strcmp0@plt+0x13f4>
   16944:	bl	148dc <g_error_free@plt>
   16948:	cmp	r7, #0
   1694c:	beq	16958 <g_strcmp0@plt+0x1404>
   16950:	mov	r0, r7
   16954:	bl	14bd0 <cd_color_xyz_free@plt>
   16958:	ldr	r2, [sp, #4]
   1695c:	ldr	r3, [r5]
   16960:	cmp	r2, r3
   16964:	bne	169ec <g_strcmp0@plt+0x1498>
   16968:	add	sp, sp, #12
   1696c:	pop	{r4, r5, r6, r7, pc}
   16970:	bl	1553c <g_source_remove@plt>
   16974:	mov	r3, #0
   16978:	str	r3, [r4, #72]	; 0x48
   1697c:	b	168ac <g_strcmp0@plt+0x1358>
   16980:	ldr	r0, [r4, #40]	; 0x28
   16984:	mov	r2, sp
   16988:	bl	15008 <cd_sensor_lock_sync@plt>
   1698c:	cmp	r0, #0
   16990:	bne	168a0 <g_strcmp0@plt+0x134c>
   16994:	ldr	r3, [sp]
   16998:	movw	r0, #48456	; 0xbd48
   1699c:	movw	r2, #48976	; 0xbf50
   169a0:	movt	r0, #1
   169a4:	movt	r2, #1
   169a8:	mov	r1, #16
   169ac:	ldr	r3, [r3, #8]
   169b0:	bl	14a38 <g_log@plt>
   169b4:	ldr	r0, [sp]
   169b8:	cmp	r0, #0
   169bc:	beq	16958 <g_strcmp0@plt+0x1404>
   169c0:	bl	148dc <g_error_free@plt>
   169c4:	b	16958 <g_strcmp0@plt+0x1404>
   169c8:	ldr	r3, [sp]
   169cc:	movw	r0, #48456	; 0xbd48
   169d0:	movw	r2, #48996	; 0xbf64
   169d4:	movt	r0, #1
   169d8:	movt	r2, #1
   169dc:	mov	r1, #16
   169e0:	ldr	r3, [r3, #8]
   169e4:	bl	14a38 <g_log@plt>
   169e8:	b	168d0 <g_strcmp0@plt+0x137c>
   169ec:	bl	14f3c <__stack_chk_fail@plt>
   169f0:	mov	r4, r0
   169f4:	mov	r7, #0
   169f8:	ldr	r0, [sp]
   169fc:	cmp	r0, #0
   16a00:	beq	16a08 <g_strcmp0@plt+0x14b4>
   16a04:	bl	148dc <g_error_free@plt>
   16a08:	cmp	r7, #0
   16a0c:	beq	16a18 <g_strcmp0@plt+0x14c4>
   16a10:	mov	r0, r7
   16a14:	bl	14bd0 <cd_color_xyz_free@plt>
   16a18:	mov	r0, r4
   16a1c:	bl	1538c <_Unwind_Resume@plt>
   16a20:	b	169f0 <g_strcmp0@plt+0x149c>
   16a24:	b	169f0 <g_strcmp0@plt+0x149c>
   16a28:	b	169f0 <g_strcmp0@plt+0x149c>
   16a2c:	b	169f0 <g_strcmp0@plt+0x149c>
   16a30:	mov	r4, r0
   16a34:	b	16a08 <g_strcmp0@plt+0x14b4>
   16a38:	mov	r4, r0
   16a3c:	b	169f8 <g_strcmp0@plt+0x14a4>
   16a40:	b	169f0 <g_strcmp0@plt+0x149c>
   16a44:	b	169f0 <g_strcmp0@plt+0x149c>
   16a48:	b	169f0 <g_strcmp0@plt+0x149c>
   16a4c:	b	169f0 <g_strcmp0@plt+0x149c>
   16a50:	b	169f0 <g_strcmp0@plt+0x149c>
   16a54:	b	169f0 <g_strcmp0@plt+0x149c>
   16a58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a5c:	movw	fp, #4120	; 0x1018
   16a60:	movt	fp, #3
   16a64:	sub	sp, sp, #76	; 0x4c
   16a68:	mov	r2, #0
   16a6c:	mov	r4, r0
   16a70:	ldr	r3, [fp]
   16a74:	mov	r7, r1
   16a78:	str	r2, [sp, #44]	; 0x2c
   16a7c:	str	r3, [sp, #68]	; 0x44
   16a80:	bl	151a0 <gtk_builder_new@plt>
   16a84:	movw	r1, #49024	; 0xbf80
   16a88:	str	r0, [r7, #56]	; 0x38
   16a8c:	movt	r1, #1
   16a90:	add	r2, sp, #44	; 0x2c
   16a94:	bl	152a8 <gtk_builder_add_from_resource@plt>
   16a98:	cmp	r0, #0
   16a9c:	bne	16ae8 <g_strcmp0@plt+0x1594>
   16aa0:	ldr	r3, [sp, #44]	; 0x2c
   16aa4:	movw	r0, #48456	; 0xbd48
   16aa8:	movw	r2, #49064	; 0xbfa8
   16aac:	movt	r0, #1
   16ab0:	movt	r2, #1
   16ab4:	mov	r1, #16
   16ab8:	ldr	r3, [r3, #8]
   16abc:	bl	14a38 <g_log@plt>
   16ac0:	ldr	r0, [sp, #44]	; 0x2c
   16ac4:	cmp	r0, #0
   16ac8:	beq	16ad0 <g_strcmp0@plt+0x157c>
   16acc:	bl	148dc <g_error_free@plt>
   16ad0:	ldr	r2, [sp, #68]	; 0x44
   16ad4:	ldr	r3, [fp]
   16ad8:	cmp	r2, r3
   16adc:	bne	172a0 <g_strcmp0@plt+0x1d4c>
   16ae0:	add	sp, sp, #76	; 0x4c
   16ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ae8:	movw	r1, #48440	; 0xbd38
   16aec:	ldr	r0, [r7, #56]	; 0x38
   16af0:	movt	r1, #1
   16af4:	bl	14c54 <gtk_builder_get_object@plt>
   16af8:	mov	r5, r0
   16afc:	bl	14978 <gtk_widget_get_type@plt>
   16b00:	str	r0, [sp, #16]
   16b04:	mov	r0, r5
   16b08:	ldr	r1, [sp, #16]
   16b0c:	bl	149a8 <g_type_check_instance_cast@plt>
   16b10:	str	r0, [sp, #20]
   16b14:	bl	14e10 <gtk_application_get_type@plt>
   16b18:	mov	r1, r0
   16b1c:	mov	r0, r4
   16b20:	bl	149a8 <g_type_check_instance_cast@plt>
   16b24:	mov	r5, r0
   16b28:	bl	15518 <gtk_window_get_type@plt>
   16b2c:	mov	r4, r0
   16b30:	ldr	r0, [sp, #20]
   16b34:	mov	r1, r4
   16b38:	bl	149a8 <g_type_check_instance_cast@plt>
   16b3c:	mov	r1, r0
   16b40:	mov	r0, r5
   16b44:	bl	14ad4 <gtk_application_add_window@plt>
   16b48:	ldr	r0, [sp, #20]
   16b4c:	mov	r1, r4
   16b50:	bl	149a8 <g_type_check_instance_cast@plt>
   16b54:	movw	r1, #49088	; 0xbfc0
   16b58:	movt	r1, #1
   16b5c:	bl	14ae0 <gtk_window_set_icon_name@plt>
   16b60:	movw	r1, #48880	; 0xbef0
   16b64:	ldr	r0, [r7, #56]	; 0x38
   16b68:	movt	r1, #1
   16b6c:	bl	14c54 <gtk_builder_get_object@plt>
   16b70:	ldr	r1, [sp, #16]
   16b74:	bl	149a8 <g_type_check_instance_cast@plt>
   16b78:	mov	r3, #0
   16b7c:	movw	r1, #49108	; 0xbfd4
   16b80:	str	r3, [sp]
   16b84:	movw	r2, #26660	; 0x6824
   16b88:	str	r3, [sp, #4]
   16b8c:	movt	r1, #1
   16b90:	mov	r3, r7
   16b94:	movt	r2, #1
   16b98:	bl	14e1c <g_signal_connect_data@plt>
   16b9c:	movw	r1, #48496	; 0xbd70
   16ba0:	ldr	r0, [r7, #56]	; 0x38
   16ba4:	movt	r1, #1
   16ba8:	bl	14c54 <gtk_builder_get_object@plt>
   16bac:	ldr	r1, [sp, #16]
   16bb0:	bl	149a8 <g_type_check_instance_cast@plt>
   16bb4:	mov	r1, #200	; 0xc8
   16bb8:	mov	r2, r1
   16bbc:	bl	14d98 <gtk_widget_set_size_request@plt>
   16bc0:	bl	15350 <gtk_icon_theme_get_default@plt>
   16bc4:	movw	r1, #49116	; 0xbfdc
   16bc8:	movt	r1, #1
   16bcc:	bl	14cb4 <gtk_icon_theme_append_search_path@plt>
   16bd0:	ldr	r3, [r7, #68]	; 0x44
   16bd4:	cmp	r3, #0
   16bd8:	bne	16f5c <g_strcmp0@plt+0x1a08>
   16bdc:	bl	14894 <gtk_info_bar_new@plt>
   16be0:	str	r0, [r7, #64]	; 0x40
   16be4:	mov	r0, #0
   16be8:	bl	14d2c <gtk_label_new@plt>
   16bec:	str	r0, [r7, #60]	; 0x3c
   16bf0:	ldr	r5, [r7, #64]	; 0x40
   16bf4:	bl	14c00 <gtk_info_bar_get_type@plt>
   16bf8:	mov	r4, r0
   16bfc:	mov	r0, r5
   16c00:	mov	r1, r4
   16c04:	bl	149a8 <g_type_check_instance_cast@plt>
   16c08:	mov	r1, #0
   16c0c:	bl	1550c <gtk_info_bar_set_message_type@plt>
   16c10:	mov	r1, r4
   16c14:	ldr	r0, [r7, #64]	; 0x40
   16c18:	bl	149a8 <g_type_check_instance_cast@plt>
   16c1c:	bl	1499c <gtk_info_bar_get_content_area@plt>
   16c20:	mov	r4, r0
   16c24:	bl	14c48 <gtk_container_get_type@plt>
   16c28:	mov	r1, r0
   16c2c:	mov	r0, r4
   16c30:	bl	149a8 <g_type_check_instance_cast@plt>
   16c34:	ldr	r1, [r7, #60]	; 0x3c
   16c38:	bl	14da4 <gtk_container_add@plt>
   16c3c:	ldr	r0, [r7, #60]	; 0x3c
   16c40:	bl	151e8 <gtk_widget_show@plt>
   16c44:	movw	r1, #49172	; 0xc014
   16c48:	ldr	r0, [r7, #56]	; 0x38
   16c4c:	movt	r1, #1
   16c50:	bl	14c54 <gtk_builder_get_object@plt>
   16c54:	ldr	r1, [sp, #16]
   16c58:	bl	149a8 <g_type_check_instance_cast@plt>
   16c5c:	mov	r4, r0
   16c60:	bl	14df8 <gtk_box_get_type@plt>
   16c64:	mov	r1, r0
   16c68:	mov	r0, r4
   16c6c:	bl	149a8 <g_type_check_instance_cast@plt>
   16c70:	mov	r3, #0
   16c74:	ldr	r1, [r7, #64]	; 0x40
   16c78:	mov	r2, r3
   16c7c:	str	r3, [sp]
   16c80:	bl	14e88 <gtk_box_pack_start@plt>
   16c84:	bl	15218 <cd_client_new@plt>
   16c88:	str	r0, [r7]
   16c8c:	add	r2, sp, #44	; 0x2c
   16c90:	mov	r1, #0
   16c94:	bl	15440 <cd_client_connect_sync@plt>
   16c98:	cmp	r0, #0
   16c9c:	beq	16f38 <g_strcmp0@plt+0x19e4>
   16ca0:	mov	r3, #0
   16ca4:	ldr	r0, [r7]
   16ca8:	movw	r1, #49212	; 0xc03c
   16cac:	str	r3, [sp]
   16cb0:	str	r3, [sp, #4]
   16cb4:	movw	r2, #26652	; 0x681c
   16cb8:	movt	r1, #1
   16cbc:	mov	r3, r7
   16cc0:	movt	r2, #1
   16cc4:	bl	14e1c <g_signal_connect_data@plt>
   16cc8:	mov	r3, #0
   16ccc:	ldr	r0, [r7]
   16cd0:	movw	r1, #49228	; 0xc04c
   16cd4:	str	r3, [sp]
   16cd8:	str	r3, [sp, #4]
   16cdc:	movw	r2, #26652	; 0x681c
   16ce0:	movt	r1, #1
   16ce4:	mov	r3, r7
   16ce8:	movt	r2, #1
   16cec:	bl	14e1c <g_signal_connect_data@plt>
   16cf0:	mov	r0, r7
   16cf4:	bl	165dc <g_strcmp0@plt+0x1088>
   16cf8:	movw	r1, #49244	; 0xc05c
   16cfc:	ldr	r0, [r7, #56]	; 0x38
   16d00:	movt	r1, #1
   16d04:	bl	14c54 <gtk_builder_get_object@plt>
   16d08:	ldr	r1, [sp, #16]
   16d0c:	bl	149a8 <g_type_check_instance_cast@plt>
   16d10:	str	r0, [sp, #24]
   16d14:	bl	14888 <cd_profile_get_type@plt>
   16d18:	mov	r2, r0
   16d1c:	mov	r1, #64	; 0x40
   16d20:	mov	r0, #2
   16d24:	bl	14f54 <gtk_list_store_new@plt>
   16d28:	mov	r4, r0
   16d2c:	bl	14c30 <gtk_tree_sortable_get_type@plt>
   16d30:	mov	r1, r0
   16d34:	mov	r0, r4
   16d38:	bl	149a8 <g_type_check_instance_cast@plt>
   16d3c:	mov	r1, #0
   16d40:	mov	r2, r1
   16d44:	bl	15290 <gtk_tree_sortable_set_sort_column_id@plt>
   16d48:	bl	14cfc <gtk_combo_box_get_type@plt>
   16d4c:	str	r0, [sp, #36]	; 0x24
   16d50:	ldr	r1, [sp, #36]	; 0x24
   16d54:	ldr	r0, [sp, #24]
   16d58:	bl	149a8 <g_type_check_instance_cast@plt>
   16d5c:	mov	r5, r0
   16d60:	bl	15074 <gtk_tree_model_get_type@plt>
   16d64:	mov	r1, r0
   16d68:	mov	r0, r4
   16d6c:	bl	149a8 <g_type_check_instance_cast@plt>
   16d70:	mov	r1, r0
   16d74:	mov	r0, r5
   16d78:	bl	154d0 <gtk_combo_box_set_model@plt>
   16d7c:	bl	14d50 <gtk_cell_renderer_text_new@plt>
   16d80:	mov	r2, #2
   16d84:	movw	r3, #49288	; 0xc088
   16d88:	movw	r1, #49264	; 0xc070
   16d8c:	movt	r3, #1
   16d90:	movt	r1, #1
   16d94:	stm	sp, {r2, r3}
   16d98:	mov	r2, #60	; 0x3c
   16d9c:	mov	r3, #0
   16da0:	str	r2, [sp, #8]
   16da4:	mov	r2, #3
   16da8:	str	r3, [sp, #12]
   16dac:	movw	r3, #49276	; 0xc07c
   16db0:	movt	r3, #1
   16db4:	mov	r5, r0
   16db8:	bl	15020 <g_object_set@plt>
   16dbc:	bl	15380 <gtk_cell_layout_get_type@plt>
   16dc0:	mov	r6, r0
   16dc4:	ldr	r0, [sp, #24]
   16dc8:	mov	r1, r6
   16dcc:	bl	149a8 <g_type_check_instance_cast@plt>
   16dd0:	mov	r1, r5
   16dd4:	mov	r2, #1
   16dd8:	bl	14924 <gtk_cell_layout_pack_start@plt>
   16ddc:	ldr	r0, [sp, #24]
   16de0:	mov	r1, r6
   16de4:	bl	149a8 <g_type_check_instance_cast@plt>
   16de8:	mov	r3, #0
   16dec:	movw	r2, #49300	; 0xc094
   16df0:	mov	r1, r5
   16df4:	str	r3, [sp]
   16df8:	movt	r2, #1
   16dfc:	bl	15548 <gtk_cell_layout_set_attributes@plt>
   16e00:	cmp	r4, #0
   16e04:	beq	16e10 <g_strcmp0@plt+0x18bc>
   16e08:	mov	r0, r4
   16e0c:	bl	151f4 <g_object_unref@plt>
   16e10:	add	r8, sp, #72	; 0x48
   16e14:	mov	r1, #0
   16e18:	ldr	r0, [r7]
   16e1c:	str	r1, [r8, #-24]!	; 0xffffffe8
   16e20:	mov	r2, r8
   16e24:	bl	14c6c <cd_client_get_profiles_sync@plt>
   16e28:	subs	r6, r0, #0
   16e2c:	beq	171d4 <g_strcmp0@plt+0x1c80>
   16e30:	ldr	r3, [r6, #4]
   16e34:	cmp	r3, #0
   16e38:	streq	r3, [sp, #28]
   16e3c:	beq	16fcc <g_strcmp0@plt+0x1a78>
   16e40:	mov	r3, #0
   16e44:	str	fp, [sp, #32]
   16e48:	str	r3, [sp, #28]
   16e4c:	mov	r4, r3
   16e50:	b	16e64 <g_strcmp0@plt+0x1910>
   16e54:	ldr	r3, [r6, #4]
   16e58:	add	r4, r4, #1
   16e5c:	cmp	r4, r3
   16e60:	bcs	16fc8 <g_strcmp0@plt+0x1a74>
   16e64:	ldr	r3, [r6]
   16e68:	mov	r1, #0
   16e6c:	mov	r2, r8
   16e70:	ldr	r5, [r3, r4, lsl #2]
   16e74:	mov	r0, r5
   16e78:	bl	14990 <cd_profile_connect_sync@plt>
   16e7c:	cmp	r0, #0
   16e80:	beq	1709c <g_strcmp0@plt+0x1b48>
   16e84:	mov	r0, r5
   16e88:	bl	150e0 <cd_profile_has_access@plt>
   16e8c:	cmp	r0, #0
   16e90:	beq	16e54 <g_strcmp0@plt+0x1900>
   16e94:	mov	r0, r5
   16e98:	bl	149c0 <cd_profile_get_filename@plt>
   16e9c:	subs	fp, r0, #0
   16ea0:	beq	16e54 <g_strcmp0@plt+0x1900>
   16ea4:	mov	r0, r5
   16ea8:	bl	14fe4 <cd_profile_get_has_vcgt@plt>
   16eac:	mov	sl, r0
   16eb0:	movw	r1, #49372	; 0xc0dc
   16eb4:	mov	r0, r5
   16eb8:	movt	r1, #1
   16ebc:	bl	14804 <cd_profile_get_metadata_item@plt>
   16ec0:	mov	r9, r0
   16ec4:	mov	r0, r5
   16ec8:	bl	15038 <cd_profile_get_colorspace@plt>
   16ecc:	rsbs	sl, sl, #1
   16ed0:	movcc	sl, #0
   16ed4:	cmp	r9, #0
   16ed8:	moveq	sl, #0
   16edc:	cmp	sl, #0
   16ee0:	beq	16e54 <g_strcmp0@plt+0x1900>
   16ee4:	cmp	r0, #6
   16ee8:	bne	16e54 <g_strcmp0@plt+0x1900>
   16eec:	mov	r1, r5
   16ef0:	ldr	r0, [sp, #24]
   16ef4:	add	r2, sp, #52	; 0x34
   16ef8:	bl	16470 <g_strcmp0@plt+0xf1c>
   16efc:	movw	r1, #49388	; 0xc0ec
   16f00:	mov	r0, r9
   16f04:	movt	r1, #1
   16f08:	bl	15554 <g_strcmp0@plt>
   16f0c:	cmp	r0, #0
   16f10:	bne	16f2c <g_strcmp0@plt+0x19d8>
   16f14:	str	fp, [r7, #4]
   16f18:	ldr	r0, [sp, #24]
   16f1c:	ldr	r1, [sp, #36]	; 0x24
   16f20:	bl	149a8 <g_type_check_instance_cast@plt>
   16f24:	add	r1, sp, #52	; 0x34
   16f28:	bl	14f9c <gtk_combo_box_set_active_iter@plt>
   16f2c:	mov	r3, #1
   16f30:	str	r3, [sp, #28]
   16f34:	b	16e54 <g_strcmp0@plt+0x1900>
   16f38:	ldr	r3, [sp, #44]	; 0x2c
   16f3c:	movw	r0, #48456	; 0xbd48
   16f40:	movw	r2, #49180	; 0xc01c
   16f44:	movt	r0, #1
   16f48:	movt	r2, #1
   16f4c:	mov	r1, #16
   16f50:	ldr	r3, [r3, #8]
   16f54:	bl	14a38 <g_log@plt>
   16f58:	b	16ac0 <g_strcmp0@plt+0x156c>
   16f5c:	movw	r0, #48456	; 0xbd48
   16f60:	movw	r2, #49156	; 0xc004
   16f64:	movt	r0, #1
   16f68:	movt	r2, #1
   16f6c:	mov	r1, #128	; 0x80
   16f70:	bl	14a38 <g_log@plt>
   16f74:	ldr	r0, [sp, #20]
   16f78:	mov	r1, r4
   16f7c:	bl	149a8 <g_type_check_instance_cast@plt>
   16f80:	mov	r4, r0
   16f84:	ldr	r5, [r7, #68]	; 0x44
   16f88:	bl	14db0 <gdk_display_get_default@plt>
   16f8c:	mov	r1, r5
   16f90:	bl	14f48 <gdk_x11_window_foreign_new_for_display@plt>
   16f94:	mov	r5, r0
   16f98:	ldr	r1, [sp, #16]
   16f9c:	mov	r0, r4
   16fa0:	bl	149a8 <g_type_check_instance_cast@plt>
   16fa4:	bl	149fc <gtk_widget_get_window@plt>
   16fa8:	mov	r6, r0
   16fac:	mov	r1, #1
   16fb0:	mov	r0, r4
   16fb4:	bl	152fc <gtk_window_set_modal@plt>
   16fb8:	mov	r0, r6
   16fbc:	mov	r1, r5
   16fc0:	bl	14e7c <gdk_window_set_transient_for@plt>
   16fc4:	b	16bdc <g_strcmp0@plt+0x1688>
   16fc8:	ldr	fp, [sp, #32]
   16fcc:	ldr	r0, [r7]
   16fd0:	mov	r1, #1
   16fd4:	mov	r2, #0
   16fd8:	mov	r3, r8
   16fdc:	bl	15530 <cd_client_get_devices_by_kind_sync@plt>
   16fe0:	ldr	r3, [r0, #4]
   16fe4:	mov	r9, r0
   16fe8:	cmp	r3, #0
   16fec:	beq	17170 <g_strcmp0@plt+0x1c1c>
   16ff0:	str	r6, [sp, #32]
   16ff4:	mov	r4, #0
   16ff8:	ldr	r6, [sp, #24]
   16ffc:	ldr	sl, [sp, #28]
   17000:	b	17054 <g_strcmp0@plt+0x1b00>
   17004:	mov	r0, r5
   17008:	bl	14f90 <cd_device_get_default_profile@plt>
   1700c:	subs	r5, r0, #0
   17010:	beq	17044 <g_strcmp0@plt+0x1af0>
   17014:	mov	r1, #0
   17018:	mov	r2, r8
   1701c:	bl	14990 <cd_profile_connect_sync@plt>
   17020:	cmp	r0, #0
   17024:	beq	171ac <g_strcmp0@plt+0x1c58>
   17028:	mov	r0, r6
   1702c:	mov	r1, r5
   17030:	mov	r2, #0
   17034:	bl	16470 <g_strcmp0@plt+0xf1c>
   17038:	mov	r0, r5
   1703c:	bl	151f4 <g_object_unref@plt>
   17040:	mov	sl, #1
   17044:	ldr	r3, [r9, #4]
   17048:	add	r4, r4, #1
   1704c:	cmp	r4, r3
   17050:	bcs	17168 <g_strcmp0@plt+0x1c14>
   17054:	ldr	r3, [r9]
   17058:	mov	r1, #0
   1705c:	mov	r2, r8
   17060:	ldr	r5, [r3, r4, lsl #2]
   17064:	mov	r0, r5
   17068:	bl	14d5c <cd_device_connect_sync@plt>
   1706c:	cmp	r0, #0
   17070:	bne	17004 <g_strcmp0@plt+0x1ab0>
   17074:	ldr	r3, [sp, #48]	; 0x30
   17078:	movw	r0, #48456	; 0xbd48
   1707c:	movw	r2, #49400	; 0xc0f8
   17080:	movt	r0, #1
   17084:	movt	r2, #1
   17088:	mov	r1, #16
   1708c:	ldr	r3, [r3, #8]
   17090:	ldr	r6, [sp, #32]
   17094:	bl	14a38 <g_log@plt>
   17098:	b	170c4 <g_strcmp0@plt+0x1b70>
   1709c:	ldr	r3, [sp, #48]	; 0x30
   170a0:	movw	r0, #48456	; 0xbd48
   170a4:	movw	r2, #49336	; 0xc0b8
   170a8:	movt	r0, #1
   170ac:	movt	r2, #1
   170b0:	mov	r1, #16
   170b4:	ldr	r3, [r3, #8]
   170b8:	ldr	fp, [sp, #32]
   170bc:	bl	14a38 <g_log@plt>
   170c0:	mov	r9, #0
   170c4:	mov	r0, r6
   170c8:	bl	152d8 <g_ptr_array_unref@plt>
   170cc:	cmp	r9, #0
   170d0:	beq	170dc <g_strcmp0@plt+0x1b88>
   170d4:	mov	r0, r9
   170d8:	bl	152d8 <g_ptr_array_unref@plt>
   170dc:	ldr	r0, [sp, #48]	; 0x30
   170e0:	cmp	r0, #0
   170e4:	beq	170ec <g_strcmp0@plt+0x1b98>
   170e8:	bl	148dc <g_error_free@plt>
   170ec:	mov	r0, #0
   170f0:	bl	14fa8 <g_free@plt>
   170f4:	ldr	r0, [sp, #24]
   170f8:	mov	r1, #80	; 0x50
   170fc:	bl	149a8 <g_type_check_instance_cast@plt>
   17100:	mov	r3, #0
   17104:	movw	r1, #49464	; 0xc138
   17108:	str	r3, [sp]
   1710c:	movw	r2, #25460	; 0x6374
   17110:	str	r3, [sp, #4]
   17114:	movt	r1, #1
   17118:	mov	r3, r7
   1711c:	movt	r2, #1
   17120:	bl	14e1c <g_signal_connect_data@plt>
   17124:	movw	r1, #48496	; 0xbd70
   17128:	ldr	r0, [r7, #56]	; 0x38
   1712c:	movt	r1, #1
   17130:	bl	14c54 <gtk_builder_get_object@plt>
   17134:	ldr	r1, [sp, #16]
   17138:	bl	149a8 <g_type_check_instance_cast@plt>
   1713c:	mov	r4, r0
   17140:	bl	14ee8 <gtk_image_get_type@plt>
   17144:	mov	r1, r0
   17148:	mov	r0, r4
   1714c:	bl	149a8 <g_type_check_instance_cast@plt>
   17150:	movw	r1, #48916	; 0xbf14
   17154:	movt	r1, #1
   17158:	bl	14aa4 <gtk_image_set_from_file@plt>
   1715c:	ldr	r0, [sp, #20]
   17160:	bl	151e8 <gtk_widget_show@plt>
   17164:	b	16ac0 <g_strcmp0@plt+0x156c>
   17168:	ldr	r6, [sp, #32]
   1716c:	str	sl, [sp, #28]
   17170:	ldr	r3, [sp, #28]
   17174:	cmp	r3, #0
   17178:	movne	r4, #0
   1717c:	beq	171f8 <g_strcmp0@plt+0x1ca4>
   17180:	mov	r0, r6
   17184:	bl	152d8 <g_ptr_array_unref@plt>
   17188:	mov	r0, r9
   1718c:	bl	152d8 <g_ptr_array_unref@plt>
   17190:	ldr	r0, [sp, #48]	; 0x30
   17194:	cmp	r0, #0
   17198:	beq	171a0 <g_strcmp0@plt+0x1c4c>
   1719c:	bl	148dc <g_error_free@plt>
   171a0:	mov	r0, r4
   171a4:	bl	14fa8 <g_free@plt>
   171a8:	b	170f4 <g_strcmp0@plt+0x1ba0>
   171ac:	ldr	r3, [sp, #48]	; 0x30
   171b0:	movw	r0, #48456	; 0xbd48
   171b4:	movw	r2, #49336	; 0xc0b8
   171b8:	movt	r0, #1
   171bc:	movt	r2, #1
   171c0:	mov	r1, #16
   171c4:	ldr	r3, [r3, #8]
   171c8:	ldr	r6, [sp, #32]
   171cc:	bl	14a38 <g_log@plt>
   171d0:	b	170c4 <g_strcmp0@plt+0x1b70>
   171d4:	ldr	r3, [sp, #48]	; 0x30
   171d8:	movw	r0, #48456	; 0xbd48
   171dc:	movw	r2, #49308	; 0xc09c
   171e0:	movt	r0, #1
   171e4:	movt	r2, #1
   171e8:	mov	r1, #16
   171ec:	ldr	r3, [r3, #8]
   171f0:	bl	14a38 <g_log@plt>
   171f4:	b	170dc <g_strcmp0@plt+0x1b88>
   171f8:	mov	r0, r3
   171fc:	movw	r1, #49432	; 0xc118
   17200:	mov	r2, #5
   17204:	movt	r1, #1
   17208:	bl	14fcc <dcgettext@plt>
   1720c:	mov	r4, r0
   17210:	mov	r0, #6
   17214:	bl	1b504 <g_strcmp0@plt+0x5fb0>
   17218:	mov	r1, r0
   1721c:	mov	r0, r4
   17220:	bl	14c9c <g_strdup_printf@plt>
   17224:	mov	r4, r0
   17228:	ldr	r1, [sp, #36]	; 0x24
   1722c:	ldr	r0, [sp, #24]
   17230:	bl	149a8 <g_type_check_instance_cast@plt>
   17234:	bl	1475c <gtk_combo_box_get_model@plt>
   17238:	mov	r5, r0
   1723c:	bl	153e0 <gtk_list_store_get_type@plt>
   17240:	mov	r8, r0
   17244:	mov	r0, r5
   17248:	mov	r1, r8
   1724c:	bl	149a8 <g_type_check_instance_cast@plt>
   17250:	add	r1, sp, #52	; 0x34
   17254:	bl	15080 <gtk_list_store_append@plt>
   17258:	mov	r0, r5
   1725c:	mov	r1, r8
   17260:	bl	149a8 <g_type_check_instance_cast@plt>
   17264:	mvn	r3, #0
   17268:	add	r1, sp, #52	; 0x34
   1726c:	str	r3, [sp]
   17270:	mov	r2, #0
   17274:	mov	r3, r4
   17278:	bl	14858 <gtk_list_store_set@plt>
   1727c:	ldr	r0, [sp, #24]
   17280:	ldr	r1, [sp, #36]	; 0x24
   17284:	bl	149a8 <g_type_check_instance_cast@plt>
   17288:	mov	r1, #0
   1728c:	bl	149e4 <gtk_combo_box_set_active@plt>
   17290:	ldr	r0, [sp, #24]
   17294:	mov	r1, #0
   17298:	bl	15524 <gtk_widget_set_sensitive@plt>
   1729c:	b	17180 <g_strcmp0@plt+0x1c2c>
   172a0:	bl	14f3c <__stack_chk_fail@plt>
   172a4:	ldr	r6, [sp, #32]
   172a8:	mov	r5, r0
   172ac:	mov	r4, #0
   172b0:	mov	r0, r6
   172b4:	bl	152d8 <g_ptr_array_unref@plt>
   172b8:	cmp	r9, #0
   172bc:	beq	172c8 <g_strcmp0@plt+0x1d74>
   172c0:	mov	r0, r9
   172c4:	bl	152d8 <g_ptr_array_unref@plt>
   172c8:	ldr	r0, [sp, #48]	; 0x30
   172cc:	cmp	r0, #0
   172d0:	beq	172d8 <g_strcmp0@plt+0x1d84>
   172d4:	bl	148dc <g_error_free@plt>
   172d8:	mov	r0, r4
   172dc:	bl	14fa8 <g_free@plt>
   172e0:	ldr	r0, [sp, #44]	; 0x2c
   172e4:	cmp	r0, #0
   172e8:	beq	172f0 <g_strcmp0@plt+0x1d9c>
   172ec:	bl	148dc <g_error_free@plt>
   172f0:	mov	r0, r5
   172f4:	bl	1538c <_Unwind_Resume@plt>
   172f8:	mov	r5, r0
   172fc:	b	172b8 <g_strcmp0@plt+0x1d64>
   17300:	mov	r5, r0
   17304:	b	172c8 <g_strcmp0@plt+0x1d74>
   17308:	b	172a4 <g_strcmp0@plt+0x1d50>
   1730c:	mov	r5, r0
   17310:	mov	r4, #0
   17314:	b	172b8 <g_strcmp0@plt+0x1d64>
   17318:	mov	r9, #0
   1731c:	mov	r5, r0
   17320:	mov	r4, r9
   17324:	b	172b0 <g_strcmp0@plt+0x1d5c>
   17328:	b	172a4 <g_strcmp0@plt+0x1d50>
   1732c:	b	172a4 <g_strcmp0@plt+0x1d50>
   17330:	mov	r5, r0
   17334:	mov	r4, #0
   17338:	b	172d8 <g_strcmp0@plt+0x1d84>
   1733c:	mov	r5, r0
   17340:	mov	r4, #0
   17344:	b	172c8 <g_strcmp0@plt+0x1d74>
   17348:	mov	r5, r0
   1734c:	b	172e0 <g_strcmp0@plt+0x1d8c>
   17350:	mov	r9, #0
   17354:	mov	r5, r0
   17358:	mov	r4, r9
   1735c:	b	172b8 <g_strcmp0@plt+0x1d64>
   17360:	b	17318 <g_strcmp0@plt+0x1dc4>
   17364:	b	17318 <g_strcmp0@plt+0x1dc4>
   17368:	b	172a8 <g_strcmp0@plt+0x1d54>
   1736c:	mov	r5, r0
   17370:	b	172b0 <g_strcmp0@plt+0x1d5c>
   17374:	b	172a8 <g_strcmp0@plt+0x1d54>
   17378:	b	172a8 <g_strcmp0@plt+0x1d54>
   1737c:	b	17318 <g_strcmp0@plt+0x1dc4>
   17380:	b	17318 <g_strcmp0@plt+0x1dc4>
   17384:	b	17318 <g_strcmp0@plt+0x1dc4>
   17388:	b	17318 <g_strcmp0@plt+0x1dc4>
   1738c:	b	17318 <g_strcmp0@plt+0x1dc4>
   17390:	b	17318 <g_strcmp0@plt+0x1dc4>
   17394:	b	17348 <g_strcmp0@plt+0x1df4>
   17398:	cmp	r4, #0
   1739c:	mov	r5, r0
   173a0:	beq	172e0 <g_strcmp0@plt+0x1d8c>
   173a4:	mov	r0, r4
   173a8:	bl	151f4 <g_object_unref@plt>
   173ac:	b	172e0 <g_strcmp0@plt+0x1d8c>
   173b0:	b	17318 <g_strcmp0@plt+0x1dc4>
   173b4:	b	172a8 <g_strcmp0@plt+0x1d54>
   173b8:	b	17318 <g_strcmp0@plt+0x1dc4>
   173bc:	b	17318 <g_strcmp0@plt+0x1dc4>
   173c0:	b	172a4 <g_strcmp0@plt+0x1d50>
   173c4:	mov	r5, r0
   173c8:	b	172d8 <g_strcmp0@plt+0x1d84>
   173cc:	mov	r5, r0
   173d0:	b	172c0 <g_strcmp0@plt+0x1d6c>
   173d4:	b	17350 <g_strcmp0@plt+0x1dfc>
   173d8:	vldr	d7, [pc, #120]	; 17458 <g_strcmp0@plt+0x1f04>
   173dc:	vsub.f64	d0, d0, d7
   173e0:	ldr	r3, [r0, #20]
   173e4:	vldr	s12, [r3, #24]
   173e8:	vldr	s10, [r3, #28]
   173ec:	push	{r4}		; (str r4, [sp, #-4]!)
   173f0:	movw	r0, #49648	; 0xc1f0
   173f4:	ldr	r4, [r3, #12]
   173f8:	movt	r0, #1
   173fc:	ldr	ip, [r3, #8]
   17400:	sub	r4, r4, #1
   17404:	sub	ip, ip, #1
   17408:	vcvt.u32.f64	s13, d0
   1740c:	vmov	r3, s13
   17410:	vmov	s13, r4
   17414:	pop	{r4}		; (ldr r4, [sp], #4)
   17418:	vcvt.f64.u32	d5, s10
   1741c:	vcvt.f64.u32	d7, s13
   17420:	vmov	s13, ip
   17424:	vcvt.f64.u32	d3, s13
   17428:	add	r3, r3, r3, lsl #1
   1742c:	add	r0, r0, r3, lsl #3
   17430:	vldr	d2, [r0, #8]
   17434:	vmls.f64	d7, d2, d7
   17438:	vldr	d4, [r0]
   1743c:	vcvt.f64.u32	d6, s12
   17440:	vmla.f64	d6, d3, d4
   17444:	vsub.f64	d7, d7, d5
   17448:	vstr	d6, [r1]
   1744c:	vstr	d7, [r2]
   17450:	bx	lr
   17454:	nop	{0}
   17458:	andeq	r0, r0, r0
   1745c:	rsbsmi	ip, r7, r0
   17460:	ldr	r3, [r0, #20]
   17464:	ldr	r3, [r3, #20]
   17468:	ldr	r2, [r3, #4]
   1746c:	cmp	r2, r1
   17470:	bxls	lr
   17474:	ldr	r3, [r3]
   17478:	ldr	r3, [r3, r1, lsl #2]
   1747c:	ldr	r2, [r3, #8]
   17480:	cmp	r2, #0
   17484:	beq	174c0 <g_strcmp0@plt+0x1f6c>
   17488:	vldr	s13, [r3]
   1748c:	vcvt.f64.u32	d7, s13
   17490:	vldr	s13, [r3, #4]
   17494:	vcmpe.f64	d7, d0
   17498:	vmrs	APSR_nzcv, fpscr
   1749c:	vcvtgt.u32.f64	s15, d0
   174a0:	vmovgt	r2, s15
   174a4:	vcvt.f64.u32	d7, s13
   174a8:	vcmpe.f64	d0, d7
   174ac:	strgt	r2, [r3]
   174b0:	vmrs	APSR_nzcv, fpscr
   174b4:	vcvtgt.u32.f64	s0, d0
   174b8:	vstrgt	s0, [r3, #4]
   174bc:	bx	lr
   174c0:	vcvt.u32.f64	s0, d0
   174c4:	mov	r2, #1
   174c8:	str	r2, [r3, #8]
   174cc:	vstr	s0, [r3]
   174d0:	bx	lr
   174d4:	push	{r4, r5, r6, r7, lr}
   174d8:	sub	sp, sp, #12
   174dc:	mov	r5, r0
   174e0:	bl	152c0 <g_type_class_peek_parent@plt>
   174e4:	movw	r1, #4136	; 0x1028
   174e8:	movt	r1, #3
   174ec:	ldr	r3, [r1, #4]
   174f0:	cmp	r3, #0
   174f4:	str	r0, [r1]
   174f8:	beq	17508 <g_strcmp0@plt+0x1fb4>
   174fc:	add	r1, r1, #4
   17500:	mov	r0, r5
   17504:	bl	1487c <g_type_class_adjust_private_offset@plt>
   17508:	bl	14978 <gtk_widget_get_type@plt>
   1750c:	mov	r6, #3
   17510:	mov	r1, r0
   17514:	mov	r0, r5
   17518:	bl	15470 <g_type_check_class_cast@plt>
   1751c:	mov	r1, #80	; 0x50
   17520:	mov	r7, r0
   17524:	mov	r0, r5
   17528:	bl	15470 <g_type_check_class_cast@plt>
   1752c:	mov	r1, #56	; 0x38
   17530:	movw	r2, #32088	; 0x7d58
   17534:	movw	r3, #31884	; 0x7c8c
   17538:	movt	r2, #1
   1753c:	movt	r3, #1
   17540:	str	r2, [r7, #144]	; 0x90
   17544:	movw	r2, #31544	; 0x7b38
   17548:	movt	r2, #1
   1754c:	mov	r4, r0
   17550:	mov	r0, r5
   17554:	str	r3, [r4, #16]
   17558:	movw	r3, #30352	; 0x7690
   1755c:	str	r2, [r4, #12]
   17560:	movt	r3, #1
   17564:	str	r3, [r4, #24]
   17568:	mov	r5, #2
   1756c:	bl	150a4 <g_type_class_add_private@plt>
   17570:	mov	r1, #0
   17574:	mov	r2, r1
   17578:	mov	r3, #1
   1757c:	str	r6, [sp]
   17580:	movw	r0, #57392	; 0xe030
   17584:	movt	r0, #1
   17588:	bl	14870 <g_param_spec_boolean@plt>
   1758c:	mov	r1, #1
   17590:	mov	r2, r0
   17594:	mov	r0, r4
   17598:	bl	15068 <g_object_class_install_property@plt>
   1759c:	mov	r1, #0
   175a0:	mov	r3, #1
   175a4:	mov	r2, r1
   175a8:	str	r6, [sp]
   175ac:	movw	r0, #57404	; 0xe03c
   175b0:	movt	r0, #1
   175b4:	bl	14870 <g_param_spec_boolean@plt>
   175b8:	mov	r1, r5
   175bc:	mov	r2, r0
   175c0:	mov	r0, r4
   175c4:	bl	15068 <g_object_class_install_property@plt>
   175c8:	bl	14840 <cd_color_yxy_get_type@plt>
   175cc:	mov	r1, #0
   175d0:	mov	r2, r1
   175d4:	str	r5, [sp]
   175d8:	mov	r3, r0
   175dc:	movw	r0, #57420	; 0xe04c
   175e0:	movt	r0, #1
   175e4:	bl	15044 <g_param_spec_boxed@plt>
   175e8:	mov	r1, r6
   175ec:	mov	r2, r0
   175f0:	mov	r0, r4
   175f4:	bl	15068 <g_object_class_install_property@plt>
   175f8:	bl	14840 <cd_color_yxy_get_type@plt>
   175fc:	mov	r1, #0
   17600:	mov	r2, r1
   17604:	str	r5, [sp]
   17608:	mov	r3, r0
   1760c:	movw	r0, #57424	; 0xe050
   17610:	movt	r0, #1
   17614:	bl	15044 <g_param_spec_boxed@plt>
   17618:	mov	r1, #4
   1761c:	mov	r2, r0
   17620:	mov	r0, r4
   17624:	bl	15068 <g_object_class_install_property@plt>
   17628:	bl	14840 <cd_color_yxy_get_type@plt>
   1762c:	mov	r1, #0
   17630:	mov	r2, r1
   17634:	str	r5, [sp]
   17638:	mov	r3, r0
   1763c:	movw	r0, #57432	; 0xe058
   17640:	movt	r0, #1
   17644:	bl	15044 <g_param_spec_boxed@plt>
   17648:	mov	r1, #5
   1764c:	mov	r2, r0
   17650:	mov	r0, r4
   17654:	bl	15068 <g_object_class_install_property@plt>
   17658:	bl	14840 <cd_color_yxy_get_type@plt>
   1765c:	mov	r1, #0
   17660:	mov	r2, r1
   17664:	str	r5, [sp]
   17668:	mov	r3, r0
   1766c:	movw	r0, #57440	; 0xe060
   17670:	movt	r0, #1
   17674:	bl	15044 <g_param_spec_boxed@plt>
   17678:	mov	r1, #6
   1767c:	mov	r2, r0
   17680:	mov	r0, r4
   17684:	add	sp, sp, #12
   17688:	pop	{r4, r5, r6, r7, lr}
   1768c:	b	15068 <g_object_class_install_property@plt>
   17690:	ldr	r3, [r0, #20]
   17694:	push	{r4, lr}
   17698:	mov	r4, r0
   1769c:	ldr	r0, [r3, #16]
   176a0:	bl	151f4 <g_object_unref@plt>
   176a4:	ldr	r3, [r4, #20]
   176a8:	ldr	r0, [r3, #44]	; 0x2c
   176ac:	bl	14fc0 <cd_color_yxy_free@plt>
   176b0:	ldr	r3, [r4, #20]
   176b4:	ldr	r0, [r3, #32]
   176b8:	bl	14fc0 <cd_color_yxy_free@plt>
   176bc:	ldr	r3, [r4, #20]
   176c0:	ldr	r0, [r3, #36]	; 0x24
   176c4:	bl	14fc0 <cd_color_yxy_free@plt>
   176c8:	ldr	r3, [r4, #20]
   176cc:	ldr	r0, [r3, #40]	; 0x28
   176d0:	bl	14fc0 <cd_color_yxy_free@plt>
   176d4:	ldr	r3, [r4, #20]
   176d8:	ldr	r0, [r3, #20]
   176dc:	bl	152d8 <g_ptr_array_unref@plt>
   176e0:	movw	r3, #4136	; 0x1028
   176e4:	movt	r3, #3
   176e8:	mov	r1, #80	; 0x50
   176ec:	ldr	r0, [r3]
   176f0:	bl	15470 <g_type_check_class_cast@plt>
   176f4:	ldr	r3, [r0, #24]
   176f8:	mov	r0, r4
   176fc:	blx	r3
   17700:	pop	{r4, pc}
   17704:	ldr	r3, [r0, #20]
   17708:	vldr	d7, [r3, #48]	; 0x30
   1770c:	vcmp.f64	d7, #0.0
   17710:	push	{r4, lr}
   17714:	mov	r4, r1
   17718:	vmrs	APSR_nzcv, fpscr
   1771c:	bne	17744 <g_strcmp0@plt+0x21f0>
   17720:	vldr	d0, [r1]
   17724:	vldr	d7, [pc, #100]	; 17790 <g_strcmp0@plt+0x223c>
   17728:	vcmpe.f64	d0, d7
   1772c:	vmrs	APSR_nzcv, fpscr
   17730:	bpl	17768 <g_strcmp0@plt+0x2214>
   17734:	vldr	d7, [pc, #92]	; 17798 <g_strcmp0@plt+0x2244>
   17738:	vmul.f64	d0, d0, d7
   1773c:	vstr	d0, [r1]
   17740:	pop	{r4, pc}
   17744:	vmov.f64	d6, #112	; 0x3f800000  1.0
   17748:	vldr	d0, [r1]
   1774c:	vdiv.f64	d7, d6, d7
   17750:	vcvt.f32.f64	s0, d0
   17754:	vcvt.f32.f64	s1, d7
   17758:	bl	151c4 <powf@plt>
   1775c:	vcvt.f64.f32	d0, s0
   17760:	vstr	d0, [r4]
   17764:	pop	{r4, pc}
   17768:	vcvt.f32.f64	s0, d0
   1776c:	vldr	s1, [pc, #60]	; 177b0 <g_strcmp0@plt+0x225c>
   17770:	bl	151c4 <powf@plt>
   17774:	vldr	d6, [pc, #36]	; 177a0 <g_strcmp0@plt+0x224c>
   17778:	vldr	d7, [pc, #40]	; 177a8 <g_strcmp0@plt+0x2254>
   1777c:	vcvt.f64.f32	d0, s0
   17780:	vnmls.f64	d7, d0, d6
   17784:	vstr	d7, [r4]
   17788:	pop	{r4, pc}
   1778c:	nop	{0}
   17790:	stclhi	15, cr13, [pc, #-236]	; 176ac <g_strcmp0@plt+0x2158>
   17794:	svccc	0x00926e97
   17798:	svc	0x00d55556
   1779c:	andsmi	r0, r2, sl, lsl lr
   177a0:	strteq	sp, [r4], -pc, lsr #26
   177a4:	svccc	0x00f19581
   177a8:	subvs	sp, sp, #536870927	; 0x2000000f
   177ac:	svccc	0x00b95810
   177b0:	cdpcc	6, 14, cr6, cr6, cr6, {3}
   177b4:	ldr	r3, [r0, #20]
   177b8:	vldr	s13, [r3, #8]
   177bc:	vcvt.f64.u32	d7, s13
   177c0:	push	{r4, lr}
   177c4:	vpush	{d8-d13}
   177c8:	mov	r4, r0
   177cc:	vcmpe.f64	d7, d0
   177d0:	vmov.f64	d10, d0
   177d4:	vmrs	APSR_nzcv, fpscr
   177d8:	vmov.f64	d9, d1
   177dc:	vmov.f64	d8, d3
   177e0:	bmi	1789c <g_strcmp0@plt+0x2348>
   177e4:	vldr	s14, [r3, #12]
   177e8:	vcvt.f64.u32	d7, s14
   177ec:	vcmpe.f64	d7, d1
   177f0:	vmrs	APSR_nzcv, fpscr
   177f4:	bmi	1789c <g_strcmp0@plt+0x2348>
   177f8:	vcmp.f64	d0, d2
   177fc:	vmrs	APSR_nzcv, fpscr
   17800:	vcmp.f64	d1, d3
   17804:	movne	r2, #0
   17808:	moveq	r2, #1
   1780c:	vmrs	APSR_nzcv, fpscr
   17810:	movne	r3, #0
   17814:	moveq	r3, #1
   17818:	tst	r2, r3
   1781c:	bne	1789c <g_strcmp0@plt+0x2348>
   17820:	cmp	r3, #0
   17824:	bne	1789c <g_strcmp0@plt+0x2348>
   17828:	cmp	r2, #0
   1782c:	beq	178a4 <g_strcmp0@plt+0x2350>
   17830:	vcmpe.f64	d1, d3
   17834:	vmrs	APSR_nzcv, fpscr
   17838:	vmovls.f64	d12, #112	; 0x3f800000  1.0
   1783c:	vmovls.f64	d11, d1
   17840:	bhi	17868 <g_strcmp0@plt+0x2314>
   17844:	mov	r0, r4
   17848:	vcvt.u32.f64	s15, d11
   1784c:	vmov.f64	d0, d10
   17850:	vmov	r1, s15
   17854:	bl	17460 <g_strcmp0@plt+0x1f0c>
   17858:	vadd.f64	d11, d11, d12
   1785c:	vcmpe.f64	d8, d11
   17860:	vmrs	APSR_nzcv, fpscr
   17864:	bge	17844 <g_strcmp0@plt+0x22f0>
   17868:	vcmpe.f64	d9, d8
   1786c:	vmrs	APSR_nzcv, fpscr
   17870:	vmovge.f64	d11, #112	; 0x3f800000  1.0
   17874:	blt	1789c <g_strcmp0@plt+0x2348>
   17878:	mov	r0, r4
   1787c:	vcvt.u32.f64	s13, d8
   17880:	vmov.f64	d0, d10
   17884:	vmov	r1, s13
   17888:	bl	17460 <g_strcmp0@plt+0x1f0c>
   1788c:	vadd.f64	d8, d8, d11
   17890:	vcmpe.f64	d9, d8
   17894:	vmrs	APSR_nzcv, fpscr
   17898:	bge	17878 <g_strcmp0@plt+0x2324>
   1789c:	vpop	{d8-d13}
   178a0:	pop	{r4, pc}
   178a4:	vsub.f64	d2, d0, d2
   178a8:	vsub.f64	d11, d1, d3
   178ac:	vdiv.f64	d11, d11, d2
   178b0:	vcmpe.f64	d1, d3
   178b4:	vmov.f64	d12, d1
   178b8:	vmrs	APSR_nzcv, fpscr
   178bc:	vmls.f64	d12, d0, d11
   178c0:	vmovls.f64	d13, #112	; 0x3f800000  1.0
   178c4:	vmovls.f64	d10, d1
   178c8:	bhi	178f4 <g_strcmp0@plt+0x23a0>
   178cc:	mov	r0, r4
   178d0:	vsub.f64	d0, d10, d12
   178d4:	vcvt.u32.f64	s15, d10
   178d8:	vdiv.f64	d0, d0, d11
   178dc:	vmov	r1, s15
   178e0:	bl	17460 <g_strcmp0@plt+0x1f0c>
   178e4:	vadd.f64	d10, d10, d13
   178e8:	vcmpe.f64	d8, d10
   178ec:	vmrs	APSR_nzcv, fpscr
   178f0:	bge	178cc <g_strcmp0@plt+0x2378>
   178f4:	vcmpe.f64	d9, d8
   178f8:	vmrs	APSR_nzcv, fpscr
   178fc:	vmovge.f64	d10, #112	; 0x3f800000  1.0
   17900:	blt	1789c <g_strcmp0@plt+0x2348>
   17904:	mov	r0, r4
   17908:	vsub.f64	d0, d8, d12
   1790c:	vcvt.u32.f64	s13, d8
   17910:	vdiv.f64	d0, d0, d11
   17914:	vmov	r1, s13
   17918:	bl	17460 <g_strcmp0@plt+0x1f0c>
   1791c:	vadd.f64	d8, d8, d10
   17920:	vcmpe.f64	d9, d8
   17924:	vmrs	APSR_nzcv, fpscr
   17928:	bge	17904 <g_strcmp0@plt+0x23b0>
   1792c:	b	1789c <g_strcmp0@plt+0x2348>
   17930:	push	{r4, r5, r6, lr}
   17934:	movw	r4, #4136	; 0x1028
   17938:	dmb	sy
   1793c:	movt	r4, #3
   17940:	sub	sp, sp, #16
   17944:	ldr	r5, [r4, #8]
   17948:	dmb	sy
   1794c:	cmp	r5, #0
   17950:	beq	17960 <g_strcmp0@plt+0x240c>
   17954:	ldr	r0, [r4, #8]
   17958:	add	sp, sp, #16
   1795c:	pop	{r4, r5, r6, pc}
   17960:	add	r0, r4, #8
   17964:	bl	14e28 <g_once_init_enter@plt>
   17968:	cmp	r0, #0
   1796c:	beq	17954 <g_strcmp0@plt+0x2400>
   17970:	bl	153bc <gtk_drawing_area_get_type@plt>
   17974:	mov	r6, r0
   17978:	movw	r0, #57448	; 0xe068
   1797c:	movt	r0, #1
   17980:	bl	14ed0 <g_intern_static_string@plt>
   17984:	str	r5, [sp, #8]
   17988:	mov	r3, #24
   1798c:	movw	r2, #31172	; 0x79c4
   17990:	str	r3, [sp]
   17994:	movt	r2, #1
   17998:	movw	r3, #29908	; 0x74d4
   1799c:	str	r2, [sp, #4]
   179a0:	movt	r3, #1
   179a4:	mov	r2, #428	; 0x1ac
   179a8:	mov	r1, r0
   179ac:	mov	r0, r6
   179b0:	bl	1484c <g_type_register_static_simple@plt>
   179b4:	mov	r1, r0
   179b8:	add	r0, r4, #8
   179bc:	bl	15200 <g_once_init_leave@plt>
   179c0:	b	17954 <g_strcmp0@plt+0x2400>
   179c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   179c8:	mov	r8, r0
   179cc:	bl	17930 <g_strcmp0@plt+0x23dc>
   179d0:	movw	r7, #838	; 0x346
   179d4:	movt	r7, #16340	; 0x3fd4
   179d8:	mov	r1, r0
   179dc:	mov	r0, r8
   179e0:	bl	14dc8 <g_type_instance_get_private@plt>
   179e4:	mov	r3, #1
   179e8:	mov	r4, r0
   179ec:	str	r0, [r8, #20]
   179f0:	str	r3, [r4]
   179f4:	movw	r0, #20392	; 0x4fa8
   179f8:	str	r3, [r4, #4]
   179fc:	movt	r0, #1
   17a00:	bl	14c84 <g_ptr_array_new_with_free_func@plt>
   17a04:	ldr	r6, [r8, #20]
   17a08:	str	r0, [r4, #20]
   17a0c:	bl	1532c <cd_color_yxy_new@plt>
   17a10:	ldr	r5, [r8, #20]
   17a14:	str	r0, [r6, #32]
   17a18:	movw	r6, #25480	; 0x6388
   17a1c:	bl	1532c <cd_color_yxy_new@plt>
   17a20:	ldr	r4, [r8, #20]
   17a24:	movt	r6, #56413	; 0xdc5d
   17a28:	str	r0, [r5, #36]	; 0x24
   17a2c:	movw	r5, #4089	; 0xff9
   17a30:	bl	1532c <cd_color_yxy_new@plt>
   17a34:	ldr	sl, [r8, #20]
   17a38:	movt	r5, #16341	; 0x3fd5
   17a3c:	str	r0, [r4, #40]	; 0x28
   17a40:	movw	r4, #17721	; 0x4539
   17a44:	bl	1532c <cd_color_yxy_new@plt>
   17a48:	ldr	r1, [r8, #20]
   17a4c:	vldr	d2, [pc, #180]	; 17b08 <g_strcmp0@plt+0x25b4>
   17a50:	vldr	d3, [pc, #184]	; 17b10 <g_strcmp0@plt+0x25bc>
   17a54:	vldr	d4, [pc, #188]	; 17b18 <g_strcmp0@plt+0x25c4>
   17a58:	vldr	d5, [pc, #192]	; 17b20 <g_strcmp0@plt+0x25cc>
   17a5c:	ldr	lr, [r1, #36]	; 0x24
   17a60:	vldr	d6, [pc, #192]	; 17b28 <g_strcmp0@plt+0x25d4>
   17a64:	ldr	ip, [r1, #40]	; 0x28
   17a68:	vldr	d7, [pc, #192]	; 17b30 <g_strcmp0@plt+0x25dc>
   17a6c:	ldr	r9, [r1, #32]
   17a70:	mov	r2, #0
   17a74:	mov	r3, #0
   17a78:	movt	r4, #29255	; 0x7247
   17a7c:	str	r0, [sl, #44]	; 0x2c
   17a80:	vstr	d2, [r9, #8]
   17a84:	ldr	r0, [r1, #44]	; 0x2c
   17a88:	vstr	d3, [r9, #16]
   17a8c:	vstr	d4, [lr, #8]
   17a90:	vstr	d5, [lr, #16]
   17a94:	vstr	d6, [ip, #8]
   17a98:	vstr	d7, [ip, #16]
   17a9c:	strd	r4, [r0, #16]
   17aa0:	strd	r6, [r0, #8]
   17aa4:	strd	r2, [r1, #48]	; 0x30
   17aa8:	bl	14978 <gtk_widget_get_type@plt>
   17aac:	mov	r1, r0
   17ab0:	mov	r0, r8
   17ab4:	bl	149a8 <g_type_check_instance_cast@plt>
   17ab8:	bl	15194 <gtk_widget_get_pango_context@plt>
   17abc:	mov	r1, #4
   17ac0:	mov	r4, r0
   17ac4:	bl	148c4 <pango_context_set_base_gravity@plt>
   17ac8:	mov	r0, r4
   17acc:	ldr	r4, [r8, #20]
   17ad0:	bl	1523c <pango_layout_new@plt>
   17ad4:	str	r0, [r4, #16]
   17ad8:	movw	r0, #57464	; 0xe078
   17adc:	movt	r0, #1
   17ae0:	bl	15374 <pango_font_description_from_string@plt>
   17ae4:	ldr	r3, [r8, #20]
   17ae8:	mov	r4, r0
   17aec:	mov	r1, r0
   17af0:	ldr	r0, [r3, #16]
   17af4:	bl	154ac <pango_layout_set_font_description@plt>
   17af8:	mov	r0, r4
   17afc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   17b00:	b	14cf0 <pango_font_description_free@plt>
   17b04:	nop	{0}
   17b08:			; <UNDEFINED> instruction: 0x47ae147b
   17b0c:	svccc	0x00e47ae1
   17b10:	mvnpl	r8, pc, lsl r5
   17b14:	svccc	0x00d51eb8
   17b18:	teqcc	r3, #-872415232	; 0xcc000000
   17b1c:	svccc	0x00d33333
   17b20:	teqcc	r3, #-872415232	; 0xcc000000
   17b24:	svccc	0x00e33333
   17b28:	teqcc	r3, #-872415232	; 0xcc000000
   17b2c:	svccc	0x00c33333
   17b30:	bl	fe15f618 <__bss_end__@@Base+0xfe12e5b4>
   17b34:	svccc	0x00aeb851
   17b38:	push	{r4, r5, r6, r7, r8, r9, lr}
   17b3c:	sub	sp, sp, #28
   17b40:	mov	r5, r1
   17b44:	mov	r6, r0
   17b48:	mov	r7, r2
   17b4c:	mov	r9, r3
   17b50:	bl	17930 <g_strcmp0@plt+0x23dc>
   17b54:	mov	r1, r0
   17b58:	mov	r0, r6
   17b5c:	bl	149a8 <g_type_check_instance_cast@plt>
   17b60:	sub	ip, r5, #1
   17b64:	mov	r4, r0
   17b68:	ldr	r8, [r0, #20]
   17b6c:	cmp	ip, #5
   17b70:	ldrls	pc, [pc, ip, lsl #2]
   17b74:	b	17c2c <g_strcmp0@plt+0x26d8>
   17b78:	ldrdeq	r7, [r1], -r0
   17b7c:	andeq	r7, r1, r0, ror #23
   17b80:	strdeq	r7, [r1], -r0
   17b84:	andeq	r7, r1, r4, lsl #24
   17b88:	andeq	r7, r1, r8, lsl ip
   17b8c:	muleq	r1, r0, fp
   17b90:	mov	r0, r7
   17b94:	bl	15488 <g_value_get_boxed@plt>
   17b98:	ldr	r1, [r8, #44]	; 0x2c
   17b9c:	bl	14b10 <cd_color_yxy_copy@plt>
   17ba0:	bl	14978 <gtk_widget_get_type@plt>
   17ba4:	mov	r5, r0
   17ba8:	mov	r0, r4
   17bac:	mov	r1, r5
   17bb0:	bl	149a8 <g_type_check_instance_cast@plt>
   17bb4:	bl	14a08 <gtk_widget_hide@plt>
   17bb8:	mov	r0, r4
   17bbc:	mov	r1, r5
   17bc0:	bl	149a8 <g_type_check_instance_cast@plt>
   17bc4:	add	sp, sp, #28
   17bc8:	pop	{r4, r5, r6, r7, r8, r9, lr}
   17bcc:	b	151e8 <gtk_widget_show@plt>
   17bd0:	mov	r0, r7
   17bd4:	bl	14dbc <g_value_get_boolean@plt>
   17bd8:	str	r0, [r8]
   17bdc:	b	17ba0 <g_strcmp0@plt+0x264c>
   17be0:	mov	r0, r7
   17be4:	bl	14dbc <g_value_get_boolean@plt>
   17be8:	str	r0, [r8, #4]
   17bec:	b	17ba0 <g_strcmp0@plt+0x264c>
   17bf0:	mov	r0, r7
   17bf4:	bl	15488 <g_value_get_boxed@plt>
   17bf8:	ldr	r1, [r8, #32]
   17bfc:	bl	14b10 <cd_color_yxy_copy@plt>
   17c00:	b	17ba0 <g_strcmp0@plt+0x264c>
   17c04:	mov	r0, r7
   17c08:	bl	15488 <g_value_get_boxed@plt>
   17c0c:	ldr	r1, [r8, #36]	; 0x24
   17c10:	bl	14b10 <cd_color_yxy_copy@plt>
   17c14:	b	17ba0 <g_strcmp0@plt+0x264c>
   17c18:	mov	r0, r7
   17c1c:	bl	15488 <g_value_get_boxed@plt>
   17c20:	ldr	r1, [r8, #40]	; 0x28
   17c24:	bl	14b10 <cd_color_yxy_copy@plt>
   17c28:	b	17ba0 <g_strcmp0@plt+0x264c>
   17c2c:	ldm	r9, {r3, r8}
   17c30:	ldr	r0, [r3]
   17c34:	bl	14a5c <g_type_name@plt>
   17c38:	ldr	r3, [r6]
   17c3c:	mov	r7, r0
   17c40:	ldr	r0, [r3]
   17c44:	bl	14a5c <g_type_name@plt>
   17c48:	mov	r2, #448	; 0x1c0
   17c4c:	str	r8, [sp, #12]
   17c50:	movw	r3, #57552	; 0xe0d0
   17c54:	str	r7, [sp, #16]
   17c58:	movt	r3, #1
   17c5c:	str	r5, [sp, #8]
   17c60:	mov	r1, #16
   17c64:	stm	sp, {r2, r3}
   17c68:	movw	r2, #57472	; 0xe080
   17c6c:	movw	r3, #57528	; 0xe0b8
   17c70:	movt	r2, #1
   17c74:	movt	r3, #1
   17c78:	str	r0, [sp, #20]
   17c7c:	movw	r0, #48456	; 0xbd48
   17c80:	movt	r0, #1
   17c84:	bl	14a38 <g_log@plt>
   17c88:	b	17ba0 <g_strcmp0@plt+0x264c>
   17c8c:	push	{r4, r5, r6, r7, lr}
   17c90:	sub	sp, sp, #28
   17c94:	mov	r4, r1
   17c98:	mov	r5, r0
   17c9c:	mov	r7, r2
   17ca0:	mov	r6, r3
   17ca4:	bl	17930 <g_strcmp0@plt+0x23dc>
   17ca8:	mov	r1, r0
   17cac:	mov	r0, r5
   17cb0:	bl	149a8 <g_type_check_instance_cast@plt>
   17cb4:	cmp	r4, #1
   17cb8:	beq	17d40 <g_strcmp0@plt+0x27ec>
   17cbc:	cmp	r4, #2
   17cc0:	bne	17cdc <g_strcmp0@plt+0x2788>
   17cc4:	ldr	r3, [r0, #20]
   17cc8:	mov	r0, r7
   17ccc:	ldr	r1, [r3, #4]
   17cd0:	add	sp, sp, #28
   17cd4:	pop	{r4, r5, r6, r7, lr}
   17cd8:	b	14d74 <g_value_set_boolean@plt>
   17cdc:	ldm	r6, {r3, r7}
   17ce0:	ldr	r0, [r3]
   17ce4:	bl	14a5c <g_type_name@plt>
   17ce8:	ldr	r3, [r5]
   17cec:	mov	r6, r0
   17cf0:	ldr	r0, [r3]
   17cf4:	bl	14a5c <g_type_name@plt>
   17cf8:	str	r7, [sp, #12]
   17cfc:	str	r6, [sp, #16]
   17d00:	movw	r2, #417	; 0x1a1
   17d04:	str	r4, [sp, #8]
   17d08:	mov	r1, #16
   17d0c:	movw	r3, #57552	; 0xe0d0
   17d10:	movt	r3, #1
   17d14:	stm	sp, {r2, r3}
   17d18:	movw	r2, #57472	; 0xe080
   17d1c:	movw	r3, #57528	; 0xe0b8
   17d20:	movt	r2, #1
   17d24:	movt	r3, #1
   17d28:	str	r0, [sp, #20]
   17d2c:	movw	r0, #48456	; 0xbd48
   17d30:	movt	r0, #1
   17d34:	bl	14a38 <g_log@plt>
   17d38:	add	sp, sp, #28
   17d3c:	pop	{r4, r5, r6, r7, pc}
   17d40:	ldr	r3, [r0, #20]
   17d44:	mov	r0, r7
   17d48:	ldr	r1, [r3]
   17d4c:	add	sp, sp, #28
   17d50:	pop	{r4, r5, r6, r7, lr}
   17d54:	b	14d74 <g_value_set_boolean@plt>
   17d58:	push	{r4, r5, r6, r7, r8, r9, lr}
   17d5c:	vpush	{d8-d15}
   17d60:	movw	r9, #4120	; 0x1018
   17d64:	movt	r9, #3
   17d68:	sub	sp, sp, #132	; 0x84
   17d6c:	subs	r4, r0, #0
   17d70:	mov	r6, r1
   17d74:	ldr	r3, [r9]
   17d78:	str	r3, [sp, #124]	; 0x7c
   17d7c:	beq	18950 <g_strcmp0@plt+0x33fc>
   17d80:	bl	17930 <g_strcmp0@plt+0x23dc>
   17d84:	ldr	r3, [r4]
   17d88:	cmp	r3, #0
   17d8c:	beq	17d9c <g_strcmp0@plt+0x2848>
   17d90:	ldr	r3, [r3]
   17d94:	cmp	r0, r3
   17d98:	beq	17dec <g_strcmp0@plt+0x2898>
   17d9c:	mov	r1, r0
   17da0:	mov	r0, r4
   17da4:	bl	150f8 <g_type_check_instance_is_a@plt>
   17da8:	cmp	r0, #0
   17dac:	bne	17dec <g_strcmp0@plt+0x2898>
   17db0:	movw	r0, #48456	; 0xbd48
   17db4:	movw	r2, #57576	; 0xe0e8
   17db8:	movt	r0, #1
   17dbc:	movt	r2, #1
   17dc0:	ldr	r1, [pc, #32]	; 17de8 <g_strcmp0@plt+0x2894>
   17dc4:	bl	1481c <g_return_if_fail_warning@plt>
   17dc8:	ldr	r2, [sp, #124]	; 0x7c
   17dcc:	mov	r0, #0
   17dd0:	ldr	r3, [r9]
   17dd4:	cmp	r2, r3
   17dd8:	bne	1896c <g_strcmp0@plt+0x3418>
   17ddc:	add	sp, sp, #132	; 0x84
   17de0:	vpop	{d8-d15}
   17de4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17de8:	andeq	lr, r1, r8, lsl r0
   17dec:	mov	r0, r6
   17df0:	bl	14b94 <cairo_save@plt>
   17df4:	add	r1, sp, #108	; 0x6c
   17df8:	mov	r0, r4
   17dfc:	bl	14dec <gtk_widget_get_allocation@plt>
   17e00:	ldr	r5, [sp, #120]	; 0x78
   17e04:	ldr	r7, [sp, #116]	; 0x74
   17e08:	vmov.f32	s14, #52	; 0x41a00000  20.0
   17e0c:	ldr	r3, [r4, #20]
   17e10:	vldr	d0, [pc, #528]	; 18028 <g_strcmp0@plt+0x2ad4>
   17e14:	vmov	s7, r5
   17e18:	mov	r0, r6
   17e1c:	vmov	s8, r7
   17e20:	str	r5, [r3, #12]
   17e24:	sub	r5, r5, #1
   17e28:	str	r7, [r3, #8]
   17e2c:	sub	r7, r7, #1
   17e30:	vmov.f32	s15, #50	; 0x41900000  18.0
   17e34:	vcvt.f32.u32	s12, s7
   17e38:	vcvt.f32.u32	s13, s8
   17e3c:	vdiv.f32	s14, s12, s14
   17e40:	vdiv.f32	s15, s13, s15
   17e44:	vcvt.u32.f32	s14, s14
   17e48:	vcvt.u32.f32	s15, s15
   17e4c:	vstr	s14, [r3, #28]
   17e50:	vstr	s15, [r3, #24]
   17e54:	vcvt.f64.s32	d2, s8
   17e58:	vcvt.f64.s32	d3, s7
   17e5c:	vmov.f64	d1, d0
   17e60:	bl	14ac8 <cairo_rectangle@plt>
   17e64:	mov	r0, r6
   17e68:	vmov.f64	d0, #112	; 0x3f800000  1.0
   17e6c:	vmov.f64	d2, d0
   17e70:	vmov.f64	d1, d0
   17e74:	bl	14bac <cairo_set_source_rgb@plt>
   17e78:	mov	r0, r6
   17e7c:	bl	15464 <cairo_fill@plt>
   17e80:	vmov	s4, r7
   17e84:	vmov	s6, r5
   17e88:	mov	r0, r6
   17e8c:	vmov.f64	d0, #96	; 0x3f000000  0.5
   17e90:	vcvt.f64.s32	d3, s6
   17e94:	vmov.f64	d1, d0
   17e98:	vcvt.f64.s32	d2, s4
   17e9c:	bl	14ac8 <cairo_rectangle@plt>
   17ea0:	vldr	d0, [pc, #392]	; 18030 <g_strcmp0@plt+0x2adc>
   17ea4:	mov	r0, r6
   17ea8:	vmov.f64	d1, d0
   17eac:	vmov.f64	d2, d0
   17eb0:	bl	14bac <cairo_set_source_rgb@plt>
   17eb4:	mov	r0, r6
   17eb8:	vmov.f64	d0, #112	; 0x3f800000  1.0
   17ebc:	bl	147a4 <cairo_set_line_width@plt>
   17ec0:	mov	r0, r6
   17ec4:	bl	153ec <cairo_stroke@plt>
   17ec8:	ldr	r8, [r4, #20]
   17ecc:	ldr	r3, [r8]
   17ed0:	cmp	r3, #0
   17ed4:	bne	1862c <g_strcmp0@plt+0x30d8>
   17ed8:	ldr	r0, [r8, #20]
   17edc:	mov	r1, #0
   17ee0:	bl	14eb8 <g_ptr_array_set_size@plt>
   17ee4:	ldr	r3, [r8, #12]
   17ee8:	cmp	r3, #0
   17eec:	movne	r5, #0
   17ef0:	beq	17f18 <g_strcmp0@plt+0x29c4>
   17ef4:	mov	r0, #12
   17ef8:	add	r5, r5, #1
   17efc:	bl	152e4 <g_malloc0@plt>
   17f00:	mov	r1, r0
   17f04:	ldr	r0, [r8, #20]
   17f08:	bl	15308 <g_ptr_array_add@plt>
   17f0c:	ldr	r3, [r8, #12]
   17f10:	cmp	r5, r3
   17f14:	bcc	17ef4 <g_strcmp0@plt+0x29a0>
   17f18:	mov	r0, r4
   17f1c:	vldr	d0, [pc, #276]	; 18038 <g_strcmp0@plt+0x2ae4>
   17f20:	add	r1, sp, #72	; 0x48
   17f24:	add	r2, sp, #80	; 0x50
   17f28:	bl	173d8 <g_strcmp0@plt+0x1e84>
   17f2c:	movw	r5, #381	; 0x17d
   17f30:	movw	r7, #701	; 0x2bd
   17f34:	vmov	s9, r5
   17f38:	add	r1, sp, #56	; 0x38
   17f3c:	add	r2, sp, #64	; 0x40
   17f40:	mov	r0, r4
   17f44:	vcvt.f64.s32	d0, s9
   17f48:	add	r5, r5, #1
   17f4c:	bl	173d8 <g_strcmp0@plt+0x1e84>
   17f50:	mov	r0, r4
   17f54:	vldr	d0, [sp, #56]	; 0x38
   17f58:	vldr	d1, [sp, #64]	; 0x40
   17f5c:	vldr	d2, [sp, #72]	; 0x48
   17f60:	vldr	d3, [sp, #80]	; 0x50
   17f64:	bl	177b4 <g_strcmp0@plt+0x2260>
   17f68:	ldrd	r0, [sp, #56]	; 0x38
   17f6c:	ldrd	r2, [sp, #64]	; 0x40
   17f70:	cmp	r5, r7
   17f74:	strd	r0, [sp, #72]	; 0x48
   17f78:	strd	r2, [sp, #80]	; 0x50
   17f7c:	bne	17f34 <g_strcmp0@plt+0x29e0>
   17f80:	add	r1, sp, #56	; 0x38
   17f84:	add	r2, sp, #64	; 0x40
   17f88:	mov	r0, r4
   17f8c:	vldr	d0, [pc, #164]	; 18038 <g_strcmp0@plt+0x2ae4>
   17f90:	bl	173d8 <g_strcmp0@plt+0x1e84>
   17f94:	mov	r0, r4
   17f98:	vldr	d0, [sp, #56]	; 0x38
   17f9c:	vldr	d1, [sp, #64]	; 0x40
   17fa0:	vldr	d2, [sp, #72]	; 0x48
   17fa4:	vldr	d3, [sp, #80]	; 0x50
   17fa8:	bl	177b4 <g_strcmp0@plt+0x2260>
   17fac:	mov	r0, r6
   17fb0:	bl	14b94 <cairo_save@plt>
   17fb4:	vldr	s12, [r8, #12]
   17fb8:	vcvt.f64.u32	d7, s12
   17fbc:	vcmpe.f64	d7, #0.0
   17fc0:	vmrs	APSR_nzcv, fpscr
   17fc4:	ble	18388 <g_strcmp0@plt+0x2e34>
   17fc8:	vmov.f64	d11, #112	; 0x3f800000  1.0
   17fcc:	vldr	d9, [pc, #84]	; 18028 <g_strcmp0@plt+0x2ad4>
   17fd0:	vstr	d9, [sp, #40]	; 0x28
   17fd4:	vldr	d10, [sp, #40]	; 0x28
   17fd8:	ldr	r3, [r8, #20]
   17fdc:	ldr	r3, [r3]
   17fe0:	vcvt.u32.f64	s13, d10
   17fe4:	vmov	r2, s13
   17fe8:	ldr	r5, [r3, r2, lsl #2]
   17fec:	ldr	r3, [r5, #8]
   17ff0:	cmp	r3, #0
   17ff4:	beq	1836c <g_strcmp0@plt+0x2e18>
   17ff8:	vldr	s19, [r5]
   17ffc:	vldr	s24, [r5, #4]
   18000:	vcvt.f64.u32	d10, s19
   18004:	vcvt.f64.u32	d7, s24
   18008:	vcmpe.f64	d7, d10
   1800c:	vmrs	APSR_nzcv, fpscr
   18010:	ble	1836c <g_strcmp0@plt+0x2e18>
   18014:	vcvt.f64.u32	d9, s13
   18018:	vmov.f64	d14, d10
   1801c:	vstr	d9, [sp, #48]	; 0x30
   18020:	b	18040 <g_strcmp0@plt+0x2aec>
   18024:	nop	{0}
	...
   18030:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   18034:	svccc	0x00b99999
   18038:	andeq	r0, r0, r0
   1803c:	rsbsmi	ip, r7, r0
   18040:	ldr	r3, [r4, #20]
   18044:	ldr	r2, [r3, #40]	; 0x28
   18048:	vldr	d4, [r2, #8]
   1804c:	vldr	d0, [r2, #16]
   18050:	vadd.f64	d9, d4, d0
   18054:	ldr	r2, [r3, #32]
   18058:	vldr	d5, [r2, #8]
   1805c:	vldr	d3, [r2, #16]
   18060:	ldr	r2, [r3, #36]	; 0x24
   18064:	vldr	d2, [r2, #8]
   18068:	vldr	d6, [r2, #16]
   1806c:	ldr	r2, [r3, #44]	; 0x2c
   18070:	vldr	d7, [r2, #16]
   18074:	vldr	d10, [r2, #8]
   18078:	ldr	r0, [r3, #28]
   1807c:	ldr	r2, [r3, #12]
   18080:	ldr	r1, [r3, #24]
   18084:	sub	r2, r2, #1
   18088:	ldr	r3, [r3, #8]
   1808c:	vsub.f64	d9, d11, d9
   18090:	sub	r3, r3, #1
   18094:	vadd.f64	d8, d5, d3
   18098:	vmul.f64	d12, d2, d9
   1809c:	vsub.f64	d8, d11, d8
   180a0:	vstr	d12, [sp, #8]
   180a4:	vadd.f64	d1, d2, d6
   180a8:	vmul.f64	d12, d8, d4
   180ac:	vsub.f64	d1, d11, d1
   180b0:	vstr	d12, [sp, #24]
   180b4:	vldr	d12, [sp, #8]
   180b8:	vnmls.f64	d12, d1, d4
   180bc:	vstr	d12, [sp, #8]
   180c0:	vmul.f64	d12, d1, d0
   180c4:	vstr	d12, [sp]
   180c8:	vmul.f64	d12, d5, d1
   180cc:	vstr	d12, [sp, #32]
   180d0:	vldr	d12, [sp, #24]
   180d4:	vnmls.f64	d12, d5, d9
   180d8:	vstr	d12, [sp, #24]
   180dc:	vmul.f64	d12, d3, d9
   180e0:	vstr	d12, [sp, #16]
   180e4:	vldr	d12, [sp, #32]
   180e8:	vnmls.f64	d12, d8, d2
   180ec:	vstr	d12, [sp, #32]
   180f0:	vldr	d12, [sp]
   180f4:	vnmls.f64	d12, d6, d9
   180f8:	vstr	d12, [sp]
   180fc:	vldr	d12, [sp, #16]
   18100:	vnmls.f64	d12, d8, d0
   18104:	vmul.f64	d9, d8, d6
   18108:	vstr	d12, [sp, #16]
   1810c:	vldr	d12, [sp, #8]
   18110:	vmul.f64	d15, d6, d4
   18114:	vmul.f64	d8, d7, d12
   18118:	vldr	d12, [sp, #24]
   1811c:	vmul.f64	d13, d5, d0
   18120:	vnmls.f64	d9, d3, d1
   18124:	vnmls.f64	d15, d2, d0
   18128:	vmul.f64	d1, d7, d12
   1812c:	vldr	d12, [sp]
   18130:	vmla.f64	d8, d10, d12
   18134:	vadd.f64	d0, d10, d7
   18138:	vnmls.f64	d13, d3, d4
   1813c:	vldr	d4, [sp, #32]
   18140:	vmul.f64	d12, d3, d2
   18144:	vmul.f64	d2, d7, d4
   18148:	vldr	d4, [sp, #16]
   1814c:	vsub.f64	d0, d11, d0
   18150:	vnmls.f64	d12, d5, d6
   18154:	vmov	s10, r1
   18158:	vmla.f64	d1, d10, d4
   1815c:	vmov	s9, r0
   18160:	vmla.f64	d2, d10, d9
   18164:	vldr	d10, [sp, #40]	; 0x28
   18168:	vmla.f64	d8, d0, d15
   1816c:	vmla.f64	d1, d0, d13
   18170:	vmla.f64	d2, d0, d12
   18174:	vdiv.f64	d0, d8, d7
   18178:	vdiv.f64	d1, d1, d7
   1817c:	vcvt.f64.u32	d3, s9
   18180:	vldr	d4, [sp, #8]
   18184:	vdiv.f64	d4, d4, d0
   18188:	vdiv.f64	d2, d2, d7
   1818c:	vstr	d4, [sp, #8]
   18190:	vldr	d6, [sp, #24]
   18194:	vadd.f64	d3, d10, d3
   18198:	vmov	s21, r2
   1819c:	mov	r2, #0
   181a0:	vcvt.f64.u32	d7, s21
   181a4:	vldr	d10, [sp, #32]
   181a8:	vdiv.f64	d3, d3, d7
   181ac:	vdiv.f64	d7, d6, d1
   181b0:	vmov	s13, r3
   181b4:	mov	r3, #0
   181b8:	vcvt.f64.u32	d8, s13
   181bc:	vcvt.f64.u32	d4, s10
   181c0:	vldr	d5, [sp]
   181c4:	vdiv.f64	d6, d10, d2
   181c8:	vdiv.f64	d10, d5, d0
   181cc:	vldr	d5, [sp, #16]
   181d0:	vdiv.f64	d5, d5, d1
   181d4:	vsub.f64	d4, d14, d4
   181d8:	vstr	d5, [sp]
   181dc:	vdiv.f64	d4, d4, d8
   181e0:	vdiv.f64	d8, d9, d2
   181e4:	vldr	d9, [sp, #8]
   181e8:	vdiv.f64	d0, d15, d0
   181ec:	vdiv.f64	d1, d13, d1
   181f0:	vsub.f64	d3, d11, d3
   181f4:	vdiv.f64	d2, d12, d2
   181f8:	vmul.f64	d5, d3, d9
   181fc:	vmul.f64	d7, d3, d7
   18200:	vmul.f64	d6, d3, d6
   18204:	vmla.f64	d5, d4, d10
   18208:	vldr	d10, [sp]
   1820c:	vadd.f64	d3, d4, d3
   18210:	vmla.f64	d7, d4, d10
   18214:	vmla.f64	d6, d4, d8
   18218:	vmov	d4, r2, r3
   1821c:	vsub.f64	d3, d11, d3
   18220:	vmla.f64	d5, d3, d0
   18224:	vmla.f64	d7, d3, d1
   18228:	vstr	d5, [sp, #64]	; 0x40
   1822c:	vmla.f64	d6, d3, d2
   18230:	vstr	d7, [sp, #72]	; 0x48
   18234:	vcmpe.f64	d5, #0.0
   18238:	vstr	d6, [sp, #80]	; 0x50
   1823c:	vmrs	APSR_nzcv, fpscr
   18240:	vmovle.f64	d4, d5
   18244:	vcmpe.f64	d7, d4
   18248:	vmrs	APSR_nzcv, fpscr
   1824c:	vmovle.f64	d4, d7
   18250:	vcmpe.f64	d6, d4
   18254:	vmrs	APSR_nzcv, fpscr
   18258:	vmovle.f64	d4, d6
   1825c:	vcmpe.f64	d4, #0.0
   18260:	vmrs	APSR_nzcv, fpscr
   18264:	vsubmi.f64	d7, d7, d4
   18268:	vsubmi.f64	d6, d6, d4
   1826c:	vstrmi	d7, [sp, #72]	; 0x48
   18270:	vsubmi.f64	d5, d5, d4
   18274:	vstrmi	d6, [sp, #80]	; 0x50
   18278:	vcmpe.f64	d7, d6
   1827c:	vstrmi	d5, [sp, #64]	; 0x40
   18280:	vmovmi.f64	d8, #104	; 0x3f400000  0.750
   18284:	vmovpl.f64	d8, #112	; 0x3f800000  1.0
   18288:	vmrs	APSR_nzcv, fpscr
   1828c:	ble	182a4 <g_strcmp0@plt+0x2d50>
   18290:	vcmpe.f64	d7, d5
   18294:	vmrs	APSR_nzcv, fpscr
   18298:	bpl	182c0 <g_strcmp0@plt+0x2d6c>
   1829c:	vmov.f64	d4, d5
   182a0:	b	182c4 <g_strcmp0@plt+0x2d70>
   182a4:	vcmpe.f64	d6, d5
   182a8:	vmrs	APSR_nzcv, fpscr
   182ac:	bmi	1829c <g_strcmp0@plt+0x2d48>
   182b0:	vcmpe.f64	d7, d6
   182b4:	vmrs	APSR_nzcv, fpscr
   182b8:	vmovle.f64	d4, d6
   182bc:	ble	182c4 <g_strcmp0@plt+0x2d70>
   182c0:	vmov.f64	d4, d7
   182c4:	vcmpe.f64	d4, #0.0
   182c8:	vmrs	APSR_nzcv, fpscr
   182cc:	ble	182e8 <g_strcmp0@plt+0x2d94>
   182d0:	vdiv.f64	d5, d5, d4
   182d4:	vdiv.f64	d7, d7, d4
   182d8:	vstr	d5, [sp, #64]	; 0x40
   182dc:	vdiv.f64	d6, d6, d4
   182e0:	vstr	d7, [sp, #72]	; 0x48
   182e4:	vstr	d6, [sp, #80]	; 0x50
   182e8:	mov	r0, r4
   182ec:	add	r1, sp, #64	; 0x40
   182f0:	bl	17704 <g_strcmp0@plt+0x21b0>
   182f4:	mov	r0, r4
   182f8:	add	r1, sp, #72	; 0x48
   182fc:	bl	17704 <g_strcmp0@plt+0x21b0>
   18300:	add	r1, sp, #80	; 0x50
   18304:	mov	r0, r4
   18308:	bl	17704 <g_strcmp0@plt+0x21b0>
   1830c:	vldr	d0, [sp, #64]	; 0x40
   18310:	vldr	d1, [sp, #72]	; 0x48
   18314:	vmul.f64	d0, d8, d0
   18318:	mov	r0, r6
   1831c:	vldr	d2, [sp, #80]	; 0x50
   18320:	vmul.f64	d1, d8, d1
   18324:	vmul.f64	d2, d8, d2
   18328:	bl	14bac <cairo_set_source_rgb@plt>
   1832c:	mov	r0, r6
   18330:	vldr	d1, [sp, #48]	; 0x30
   18334:	vmov.f64	d2, #112	; 0x3f800000  1.0
   18338:	vcvt.u32.f64	s0, d14
   1833c:	vmov.f64	d3, d2
   18340:	vcvt.f64.u32	d0, s0
   18344:	bl	14ac8 <cairo_rectangle@plt>
   18348:	mov	r0, r6
   1834c:	bl	15464 <cairo_fill@plt>
   18350:	vldr	s7, [r5, #4]
   18354:	vadd.f64	d14, d14, d11
   18358:	vcvt.f64.u32	d7, s7
   1835c:	vcmpe.f64	d14, d7
   18360:	vmrs	APSR_nzcv, fpscr
   18364:	bmi	18040 <g_strcmp0@plt+0x2aec>
   18368:	vldr	s12, [r8, #12]
   1836c:	vldr	d9, [sp, #40]	; 0x28
   18370:	vadd.f64	d9, d9, d11
   18374:	vcvt.f64.u32	d7, s12
   18378:	vstr	d9, [sp, #40]	; 0x28
   1837c:	vcmpe.f64	d9, d7
   18380:	vmrs	APSR_nzcv, fpscr
   18384:	bmi	17fd4 <g_strcmp0@plt+0x2a80>
   18388:	mov	r0, r6
   1838c:	movw	r5, #381	; 0x17d
   18390:	bl	15284 <cairo_restore@plt>
   18394:	mov	r0, r6
   18398:	bl	14b94 <cairo_save@plt>
   1839c:	mov	r0, r6
   183a0:	vmov.f64	d0, #0	; 0x40000000  2.0
   183a4:	movw	r7, #701	; 0x2bd
   183a8:	bl	147a4 <cairo_set_line_width@plt>
   183ac:	mov	r0, r6
   183b0:	vmov.f64	d0, #96	; 0x3f000000  0.5
   183b4:	vmov.f64	d1, d0
   183b8:	vmov.f64	d2, d0
   183bc:	bl	14bac <cairo_set_source_rgb@plt>
   183c0:	mov	r0, r4
   183c4:	vldr	d0, [pc, #-916]	; 18038 <g_strcmp0@plt+0x2ae4>
   183c8:	add	r1, sp, #72	; 0x48
   183cc:	add	r2, sp, #80	; 0x50
   183d0:	bl	173d8 <g_strcmp0@plt+0x1e84>
   183d4:	mov	r0, r6
   183d8:	vldr	d0, [sp, #72]	; 0x48
   183dc:	vldr	d1, [sp, #80]	; 0x50
   183e0:	bl	149d8 <cairo_move_to@plt>
   183e4:	vmov	s8, r5
   183e8:	mov	r0, r4
   183ec:	add	r1, sp, #56	; 0x38
   183f0:	add	r2, sp, #64	; 0x40
   183f4:	vcvt.f64.s32	d0, s8
   183f8:	bl	173d8 <g_strcmp0@plt+0x1e84>
   183fc:	vldr	d0, [sp, #56]	; 0x38
   18400:	vldr	d7, [sp, #72]	; 0x48
   18404:	vldr	d1, [sp, #64]	; 0x40
   18408:	vcmp.f64	d0, d7
   1840c:	vmrs	APSR_nzcv, fpscr
   18410:	bne	18424 <g_strcmp0@plt+0x2ed0>
   18414:	vldr	d7, [sp, #80]	; 0x50
   18418:	vcmp.f64	d1, d7
   1841c:	vmrs	APSR_nzcv, fpscr
   18420:	beq	1843c <g_strcmp0@plt+0x2ee8>
   18424:	mov	r0, r6
   18428:	bl	14fb4 <cairo_line_to@plt>
   1842c:	ldrd	r0, [sp, #56]	; 0x38
   18430:	ldrd	r2, [sp, #64]	; 0x40
   18434:	strd	r0, [sp, #72]	; 0x48
   18438:	strd	r2, [sp, #80]	; 0x50
   1843c:	add	r5, r5, #1
   18440:	cmp	r5, r7
   18444:	bne	183e4 <g_strcmp0@plt+0x2e90>
   18448:	mov	r0, r6
   1844c:	bl	15278 <cairo_close_path@plt>
   18450:	mov	r0, r6
   18454:	bl	14e94 <cairo_stroke_preserve@plt>
   18458:	mov	r0, r6
   1845c:	vmov.f64	d0, #112	; 0x3f800000  1.0
   18460:	bl	147a4 <cairo_set_line_width@plt>
   18464:	vldr	d0, [pc, #764]	; 18768 <g_strcmp0@plt+0x3214>
   18468:	mov	r0, r6
   1846c:	vmov.f64	d1, d0
   18470:	vmov.f64	d2, d0
   18474:	bl	14bac <cairo_set_source_rgb@plt>
   18478:	mov	r0, r6
   1847c:	bl	153ec <cairo_stroke@plt>
   18480:	mov	r0, r6
   18484:	bl	15284 <cairo_restore@plt>
   18488:	mov	r0, r6
   1848c:	ldr	r5, [r4, #20]
   18490:	bl	14b94 <cairo_save@plt>
   18494:	mov	r0, r6
   18498:	vldr	d0, [pc, #720]	; 18770 <g_strcmp0@plt+0x321c>
   1849c:	bl	147a4 <cairo_set_line_width@plt>
   184a0:	vldr	d0, [pc, #704]	; 18768 <g_strcmp0@plt+0x3214>
   184a4:	mov	r0, r6
   184a8:	vmov.f64	d1, d0
   184ac:	vmov.f64	d2, d0
   184b0:	bl	14bac <cairo_set_source_rgb@plt>
   184b4:	ldr	r3, [r4, #20]
   184b8:	ldr	r2, [r5, #32]
   184bc:	vldr	d5, [r2, #8]
   184c0:	vldr	d6, [r2, #16]
   184c4:	vldr	s0, [r3, #24]
   184c8:	ldr	r2, [r3, #8]
   184cc:	vcvt.f64.u32	d0, s0
   184d0:	vldr	s2, [r3, #28]
   184d4:	sub	r2, r2, #1
   184d8:	vmov	s8, r2
   184dc:	ldr	r2, [r3, #12]
   184e0:	sub	r2, r2, #1
   184e4:	vcvt.f64.u32	d4, s8
   184e8:	vmov	s18, r2
   184ec:	vcvt.f64.u32	d7, s18
   184f0:	vmla.f64	d0, d4, d5
   184f4:	vmls.f64	d7, d7, d6
   184f8:	vcvt.f64.u32	d1, s2
   184fc:	vcmpe.f64	d0, #0.0
   18500:	vsub.f64	d1, d7, d1
   18504:	vmrs	APSR_nzcv, fpscr
   18508:	bmi	18608 <g_strcmp0@plt+0x30b4>
   1850c:	vcmpe.f64	d1, #0.0
   18510:	vmrs	APSR_nzcv, fpscr
   18514:	bmi	18608 <g_strcmp0@plt+0x30b4>
   18518:	mov	r0, r6
   1851c:	bl	149d8 <cairo_move_to@plt>
   18520:	ldr	r3, [r4, #20]
   18524:	ldr	r2, [r5, #36]	; 0x24
   18528:	vldr	d5, [r2, #8]
   1852c:	vldr	d6, [r2, #16]
   18530:	vldr	s0, [r3, #24]
   18534:	ldr	r2, [r3, #8]
   18538:	vcvt.f64.u32	d0, s0
   1853c:	vldr	s2, [r3, #28]
   18540:	sub	r2, r2, #1
   18544:	vmov	s8, r2
   18548:	ldr	r2, [r3, #12]
   1854c:	sub	r2, r2, #1
   18550:	vcvt.f64.u32	d4, s8
   18554:	vmov	s19, r2
   18558:	vcvt.f64.u32	d7, s19
   1855c:	vmla.f64	d0, d4, d5
   18560:	vmls.f64	d7, d7, d6
   18564:	vcvt.f64.u32	d1, s2
   18568:	vcmpe.f64	d0, #0.0
   1856c:	vsub.f64	d1, d7, d1
   18570:	vmrs	APSR_nzcv, fpscr
   18574:	bmi	18608 <g_strcmp0@plt+0x30b4>
   18578:	vcmpe.f64	d1, #0.0
   1857c:	vmrs	APSR_nzcv, fpscr
   18580:	bmi	18608 <g_strcmp0@plt+0x30b4>
   18584:	mov	r0, r6
   18588:	bl	14fb4 <cairo_line_to@plt>
   1858c:	ldr	r3, [r4, #20]
   18590:	ldr	r2, [r5, #40]	; 0x28
   18594:	vldr	d5, [r2, #8]
   18598:	vldr	d6, [r2, #16]
   1859c:	vldr	s0, [r3, #24]
   185a0:	ldr	r2, [r3, #8]
   185a4:	vcvt.f64.u32	d0, s0
   185a8:	vldr	s2, [r3, #28]
   185ac:	sub	r2, r2, #1
   185b0:	vmov	s8, r2
   185b4:	ldr	r2, [r3, #12]
   185b8:	sub	r2, r2, #1
   185bc:	vcvt.f64.u32	d4, s8
   185c0:	vmov	s20, r2
   185c4:	vcvt.f64.u32	d7, s20
   185c8:	vmla.f64	d0, d4, d5
   185cc:	vmls.f64	d7, d7, d6
   185d0:	vcvt.f64.u32	d1, s2
   185d4:	vcmpe.f64	d0, #0.0
   185d8:	vsub.f64	d1, d7, d1
   185dc:	vmrs	APSR_nzcv, fpscr
   185e0:	bmi	18608 <g_strcmp0@plt+0x30b4>
   185e4:	vcmpe.f64	d1, #0.0
   185e8:	vmrs	APSR_nzcv, fpscr
   185ec:	bmi	18608 <g_strcmp0@plt+0x30b4>
   185f0:	mov	r0, r6
   185f4:	bl	14fb4 <cairo_line_to@plt>
   185f8:	mov	r0, r6
   185fc:	bl	15278 <cairo_close_path@plt>
   18600:	mov	r0, r6
   18604:	bl	153ec <cairo_stroke@plt>
   18608:	mov	r0, r6
   1860c:	bl	15284 <cairo_restore@plt>
   18610:	ldr	r5, [r4, #20]
   18614:	ldr	r3, [r5, #4]
   18618:	cmp	r3, #0
   1861c:	bne	18788 <g_strcmp0@plt+0x3234>
   18620:	mov	r0, r6
   18624:	bl	15284 <cairo_restore@plt>
   18628:	b	17dc8 <g_strcmp0@plt+0x2874>
   1862c:	vmov.f64	d7, #36	; 0x41200000  10.0
   18630:	ldr	r3, [pc, #328]	; 18780 <g_strcmp0@plt+0x322c>
   18634:	vldr	s20, [r8, #8]
   18638:	vldr	s18, [r8, #12]
   1863c:	add	r7, sp, #88	; 0x58
   18640:	mov	r5, #1
   18644:	ldm	r3, {r0, r1, r2, r3}
   18648:	stm	r7, {r0, r1, r2, r3}
   1864c:	mov	r0, r6
   18650:	vcvt.f64.u32	d10, s20
   18654:	vcvt.f64.u32	d9, s18
   18658:	vdiv.f64	d10, d10, d7
   1865c:	vdiv.f64	d9, d9, d7
   18660:	bl	14b94 <cairo_save@plt>
   18664:	mov	r0, r6
   18668:	vmov.f64	d0, #112	; 0x3f800000  1.0
   1866c:	bl	147a4 <cairo_set_line_width@plt>
   18670:	mov	r0, r6
   18674:	mov	r1, r7
   18678:	mov	r2, #2
   1867c:	vldr	d0, [pc, #228]	; 18768 <g_strcmp0@plt+0x3214>
   18680:	bl	15500 <cairo_set_dash@plt>
   18684:	vldr	d0, [pc, #236]	; 18778 <g_strcmp0@plt+0x3224>
   18688:	mov	r0, r6
   1868c:	vmov.f64	d1, d0
   18690:	vmov.f64	d2, d0
   18694:	bl	14bac <cairo_set_source_rgb@plt>
   18698:	vmov.f32	s22, #96	; 0x3f000000  0.5
   1869c:	vmov	s7, r5
   186a0:	vldr	d1, [pc, #192]	; 18768 <g_strcmp0@plt+0x3214>
   186a4:	mov	r0, r6
   186a8:	add	r5, r5, #1
   186ac:	vcvt.f64.s32	d7, s7
   186b0:	vmul.f64	d7, d10, d7
   186b4:	vcvt.s32.f64	s16, d7
   186b8:	vcvt.f32.s32	s16, s16
   186bc:	vadd.f32	s16, s16, s22
   186c0:	vcvt.f64.f32	d8, s16
   186c4:	vmov.f64	d0, d8
   186c8:	bl	149d8 <cairo_move_to@plt>
   186cc:	ldr	r3, [r4, #20]
   186d0:	mov	r0, r6
   186d4:	vldr	s2, [r3, #12]
   186d8:	vmov.f64	d0, d8
   186dc:	vcvt.f64.u32	d1, s2
   186e0:	bl	14fb4 <cairo_line_to@plt>
   186e4:	mov	r0, r6
   186e8:	bl	153ec <cairo_stroke@plt>
   186ec:	cmp	r5, #10
   186f0:	bne	1869c <g_strcmp0@plt+0x3148>
   186f4:	mov	r5, #1
   186f8:	vmov.f32	s20, #96	; 0x3f000000  0.5
   186fc:	vmov	s8, r5
   18700:	vldr	d0, [pc, #96]	; 18768 <g_strcmp0@plt+0x3214>
   18704:	mov	r0, r6
   18708:	add	r5, r5, #1
   1870c:	vcvt.f64.s32	d7, s8
   18710:	vmul.f64	d7, d9, d7
   18714:	vcvt.s32.f64	s16, d7
   18718:	vcvt.f32.s32	s16, s16
   1871c:	vadd.f32	s16, s16, s20
   18720:	vcvt.f64.f32	d8, s16
   18724:	vmov.f64	d1, d8
   18728:	bl	149d8 <cairo_move_to@plt>
   1872c:	ldr	r3, [r4, #20]
   18730:	mov	r0, r6
   18734:	vldr	s0, [r3, #8]
   18738:	vmov.f64	d1, d8
   1873c:	vcvt.f64.u32	d0, s0
   18740:	bl	14fb4 <cairo_line_to@plt>
   18744:	mov	r0, r6
   18748:	bl	153ec <cairo_stroke@plt>
   1874c:	cmp	r5, #10
   18750:	bne	186fc <g_strcmp0@plt+0x31a8>
   18754:	mov	r0, r6
   18758:	bl	15284 <cairo_restore@plt>
   1875c:	ldr	r8, [r4, #20]
   18760:	b	17ed8 <g_strcmp0@plt+0x2984>
   18764:	nop	{0}
	...
   18770:	andgt	r0, r0, r0
   18774:	svccc	0x00eccccc
   18778:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   1877c:	svccc	0x00b99999
   18780:	andeq	lr, r1, r8
   18784:	andmi	r0, ip, #0
   18788:	mov	r0, r6
   1878c:	vmov.f64	d11, #96	; 0x3f000000  0.5
   18790:	bl	14b94 <cairo_save@plt>
   18794:	vldr	s21, [r5, #8]
   18798:	vldr	s15, [pc, #-28]	; 18784 <g_strcmp0@plt+0x3230>
   1879c:	mov	r0, r6
   187a0:	vcvt.f32.u32	s20, s21
   187a4:	vdiv.f32	s20, s20, s15
   187a8:	vcvt.f64.f32	d10, s20
   187ac:	vmov.f64	d0, #112	; 0x3f800000  1.0
   187b0:	bl	147a4 <cairo_set_line_width@plt>
   187b4:	ldr	r3, [r5, #32]
   187b8:	vldr	d7, [pc, #432]	; 18970 <g_strcmp0@plt+0x341c>
   187bc:	vldr	d6, [r3, #8]
   187c0:	vcmpe.f64	d6, d7
   187c4:	vmul.f64	d11, d10, d11
   187c8:	vmrs	APSR_nzcv, fpscr
   187cc:	bpl	187e4 <g_strcmp0@plt+0x3290>
   187d0:	ldr	r3, [r5, #36]	; 0x24
   187d4:	vldr	d6, [r3, #8]
   187d8:	vcmpe.f64	d6, d7
   187dc:	vmrs	APSR_nzcv, fpscr
   187e0:	bmi	18924 <g_strcmp0@plt+0x33d0>
   187e4:	vldr	d0, [pc, #396]	; 18978 <g_strcmp0@plt+0x3424>
   187e8:	mov	r0, r6
   187ec:	vmov.f64	d1, d0
   187f0:	vmov.f64	d2, d0
   187f4:	bl	14bac <cairo_set_source_rgb@plt>
   187f8:	ldr	r3, [r4, #20]
   187fc:	vldr	s12, [r3, #24]
   18800:	ldr	r2, [r5, #44]	; 0x2c
   18804:	vldr	d2, [r2, #16]
   18808:	vldr	d4, [r2, #8]
   1880c:	vcvt.f64.u32	d6, s12
   18810:	ldr	r1, [r3, #12]
   18814:	vldr	s10, [r3, #28]
   18818:	ldr	r2, [r3, #8]
   1881c:	mov	r0, r6
   18820:	sub	r1, r1, #1
   18824:	sub	r2, r2, #1
   18828:	vmov	s24, r1
   1882c:	vmov	s25, r2
   18830:	vcvt.f64.u32	d7, s24
   18834:	vcvt.f64.u32	d3, s25
   18838:	vmls.f64	d7, d7, d2
   1883c:	vmla.f64	d6, d3, d4
   18840:	vcvt.f64.u32	d5, s10
   18844:	vcvt.s32.f64	s12, d6
   18848:	vsub.f64	d7, d7, d5
   1884c:	vmov.f32	s3, #96	; 0x3f000000  0.5
   18850:	vcvt.f32.s32	s16, s12
   18854:	vcvt.s32.f64	s15, d7
   18858:	vadd.f32	s16, s16, s3
   1885c:	vcvt.f32.s32	s15, s15
   18860:	vcvt.f64.f32	d8, s16
   18864:	vadd.f32	s3, s15, s3
   18868:	vsub.f64	d12, d8, d11
   1886c:	vcvt.f64.f32	d9, s3
   18870:	vmov.f64	d0, d12
   18874:	vmov.f64	d1, d9
   18878:	bl	149d8 <cairo_move_to@plt>
   1887c:	mov	r0, r6
   18880:	vsub.f64	d0, d12, d10
   18884:	vmov.f64	d1, d9
   18888:	bl	14fb4 <cairo_line_to@plt>
   1888c:	mov	r0, r6
   18890:	bl	153ec <cairo_stroke@plt>
   18894:	mov	r0, r6
   18898:	vadd.f64	d12, d11, d8
   1889c:	vmov.f64	d1, d9
   188a0:	vmov.f64	d0, d12
   188a4:	bl	149d8 <cairo_move_to@plt>
   188a8:	mov	r0, r6
   188ac:	vadd.f64	d0, d10, d12
   188b0:	vmov.f64	d1, d9
   188b4:	bl	14fb4 <cairo_line_to@plt>
   188b8:	mov	r0, r6
   188bc:	bl	153ec <cairo_stroke@plt>
   188c0:	mov	r0, r6
   188c4:	vsub.f64	d12, d9, d11
   188c8:	vmov.f64	d0, d8
   188cc:	vmov.f64	d1, d12
   188d0:	bl	149d8 <cairo_move_to@plt>
   188d4:	mov	r0, r6
   188d8:	vmov.f64	d0, d8
   188dc:	vsub.f64	d1, d12, d10
   188e0:	bl	14fb4 <cairo_line_to@plt>
   188e4:	mov	r0, r6
   188e8:	bl	153ec <cairo_stroke@plt>
   188ec:	mov	r0, r6
   188f0:	vadd.f64	d9, d11, d9
   188f4:	vmov.f64	d0, d8
   188f8:	vmov.f64	d1, d9
   188fc:	bl	149d8 <cairo_move_to@plt>
   18900:	mov	r0, r6
   18904:	vmov.f64	d0, d8
   18908:	vadd.f64	d1, d10, d9
   1890c:	bl	14fb4 <cairo_line_to@plt>
   18910:	mov	r0, r6
   18914:	bl	153ec <cairo_stroke@plt>
   18918:	mov	r0, r6
   1891c:	bl	15284 <cairo_restore@plt>
   18920:	b	18620 <g_strcmp0@plt+0x30cc>
   18924:	ldr	r3, [r5, #40]	; 0x28
   18928:	vldr	d6, [r3, #8]
   1892c:	vcmpe.f64	d6, d7
   18930:	vmrs	APSR_nzcv, fpscr
   18934:	bpl	187e4 <g_strcmp0@plt+0x3290>
   18938:	vmov.f64	d0, #112	; 0x3f800000  1.0
   1893c:	mov	r0, r6
   18940:	vmov.f64	d1, d0
   18944:	vmov.f64	d2, d0
   18948:	bl	14bac <cairo_set_source_rgb@plt>
   1894c:	b	187f8 <g_strcmp0@plt+0x32a4>
   18950:	movw	r0, #48456	; 0xbd48
   18954:	movw	r2, #57564	; 0xe0dc
   18958:	movt	r0, #1
   1895c:	movt	r2, #1
   18960:	ldr	r1, [pc, #24]	; 18980 <g_strcmp0@plt+0x342c>
   18964:	bl	1481c <g_return_if_fail_warning@plt>
   18968:	b	17dc8 <g_strcmp0@plt+0x2874>
   1896c:	bl	14f3c <__stack_chk_fail@plt>
   18970:	rscsle	sl, r1, #252, 18	; 0x3f0000
   18974:	svccc	0x0050624d
	...
   18980:	andeq	lr, r1, r8, lsl r0
   18984:	push	{r4, r5, r6, r7, lr}
   18988:	movw	r5, #4120	; 0x1018
   1898c:	movt	r5, #3
   18990:	sub	sp, sp, #52	; 0x34
   18994:	mov	r6, r0
   18998:	mov	r7, r1
   1899c:	ldr	r3, [r5]
   189a0:	str	r3, [sp, #44]	; 0x2c
   189a4:	bl	17930 <g_strcmp0@plt+0x23dc>
   189a8:	mov	r1, r0
   189ac:	mov	r0, r6
   189b0:	bl	149a8 <g_type_check_instance_cast@plt>
   189b4:	movw	r2, #57424	; 0xe050
   189b8:	movw	r3, #57432	; 0xe058
   189bc:	movt	r2, #1
   189c0:	movt	r3, #1
   189c4:	str	r2, [sp, #4]
   189c8:	str	r3, [sp, #12]
   189cc:	add	r2, sp, #32
   189d0:	add	r3, sp, #40	; 0x28
   189d4:	str	r2, [sp]
   189d8:	str	r3, [sp, #16]
   189dc:	add	r2, sp, #36	; 0x24
   189e0:	mov	r3, #0
   189e4:	str	r2, [sp, #8]
   189e8:	str	r3, [sp, #20]
   189ec:	add	r2, sp, #28
   189f0:	movw	r1, #57440	; 0xe060
   189f4:	movw	r3, #57420	; 0xe04c
   189f8:	movt	r1, #1
   189fc:	movt	r3, #1
   18a00:	mov	r4, r0
   18a04:	mov	r0, r7
   18a08:	bl	15050 <g_object_get@plt>
   18a0c:	ldr	r3, [r4, #20]
   18a10:	ldr	r0, [sp, #28]
   18a14:	ldr	r1, [r3, #44]	; 0x2c
   18a18:	bl	15260 <cd_color_xyz_to_yxy@plt>
   18a1c:	ldr	r3, [r4, #20]
   18a20:	ldr	r0, [sp, #32]
   18a24:	ldr	r1, [r3, #32]
   18a28:	bl	15260 <cd_color_xyz_to_yxy@plt>
   18a2c:	ldr	r3, [r4, #20]
   18a30:	ldr	r0, [sp, #36]	; 0x24
   18a34:	ldr	r1, [r3, #36]	; 0x24
   18a38:	bl	15260 <cd_color_xyz_to_yxy@plt>
   18a3c:	ldr	r3, [r4, #20]
   18a40:	ldr	r0, [sp, #40]	; 0x28
   18a44:	ldr	r1, [r3, #40]	; 0x28
   18a48:	bl	15260 <cd_color_xyz_to_yxy@plt>
   18a4c:	ldr	r3, [r4, #20]
   18a50:	vldr	d7, [pc, #104]	; 18ac0 <g_strcmp0@plt+0x356c>
   18a54:	mov	r0, r6
   18a58:	ldr	r3, [r3, #44]	; 0x2c
   18a5c:	vldr	d6, [r3, #8]
   18a60:	vcmpe.f64	d6, d7
   18a64:	vmrs	APSR_nzcv, fpscr
   18a68:	bgt	18aa8 <g_strcmp0@plt+0x3554>
   18a6c:	bl	14a08 <gtk_widget_hide@plt>
   18a70:	ldr	r0, [sp, #28]
   18a74:	bl	14bd0 <cd_color_xyz_free@plt>
   18a78:	ldr	r0, [sp, #32]
   18a7c:	bl	14bd0 <cd_color_xyz_free@plt>
   18a80:	ldr	r0, [sp, #36]	; 0x24
   18a84:	bl	14bd0 <cd_color_xyz_free@plt>
   18a88:	ldr	r0, [sp, #40]	; 0x28
   18a8c:	bl	14bd0 <cd_color_xyz_free@plt>
   18a90:	ldr	r2, [sp, #44]	; 0x2c
   18a94:	ldr	r3, [r5]
   18a98:	cmp	r2, r3
   18a9c:	bne	18ab8 <g_strcmp0@plt+0x3564>
   18aa0:	add	sp, sp, #52	; 0x34
   18aa4:	pop	{r4, r5, r6, r7, pc}
   18aa8:	bl	14a08 <gtk_widget_hide@plt>
   18aac:	mov	r0, r6
   18ab0:	bl	151e8 <gtk_widget_show@plt>
   18ab4:	b	18a70 <g_strcmp0@plt+0x351c>
   18ab8:	bl	14f3c <__stack_chk_fail@plt>
   18abc:	nop	{0}
   18ac0:	rscsle	sl, r1, #252, 18	; 0x3f0000
   18ac4:	svccc	0x0050624d
   18ac8:	push	{r3, lr}
   18acc:	bl	17930 <g_strcmp0@plt+0x23dc>
   18ad0:	mov	r1, #0
   18ad4:	pop	{r3, lr}
   18ad8:	b	14750 <g_object_new@plt>
   18adc:	bx	lr
   18ae0:	push	{r4, r5, r6, lr}
   18ae4:	movw	r4, #4120	; 0x1018
   18ae8:	movt	r4, #3
   18aec:	sub	sp, sp, #272	; 0x110
   18af0:	add	r0, sp, #8
   18af4:	mov	r5, r1
   18af8:	ldr	r3, [r4]
   18afc:	mov	r6, r2
   18b00:	str	r3, [sp, #268]	; 0x10c
   18b04:	bl	15320 <time@plt>
   18b08:	add	r0, sp, #8
   18b0c:	bl	14de0 <localtime@plt>
   18b10:	movw	r2, #57600	; 0xe100
   18b14:	mov	r1, #254	; 0xfe
   18b18:	movt	r2, #1
   18b1c:	mov	r3, r0
   18b20:	add	r0, sp, #12
   18b24:	bl	14bdc <strftime@plt>
   18b28:	movw	r0, #4148	; 0x1034
   18b2c:	movt	r0, #3
   18b30:	ldr	r3, [r0]
   18b34:	cmp	r3, #0
   18b38:	bne	18b74 <g_strcmp0@plt+0x3620>
   18b3c:	cmp	r5, #128	; 0x80
   18b40:	add	r1, sp, #12
   18b44:	mov	r2, r6
   18b48:	movweq	r0, #57612	; 0xe10c
   18b4c:	movwne	r0, #57620	; 0xe114
   18b50:	movteq	r0, #1
   18b54:	movtne	r0, #1
   18b58:	bl	15104 <g_print@plt>
   18b5c:	ldr	r2, [sp, #268]	; 0x10c
   18b60:	ldr	r3, [r4]
   18b64:	cmp	r2, r3
   18b68:	bne	18bf0 <g_strcmp0@plt+0x369c>
   18b6c:	add	sp, sp, #272	; 0x110
   18b70:	pop	{r4, r5, r6, pc}
   18b74:	cmp	r5, #8
   18b78:	cmpne	r5, #4
   18b7c:	movw	r0, #57636	; 0xe124
   18b80:	add	r3, sp, #12
   18b84:	mov	r1, #27
   18b88:	movt	r0, #1
   18b8c:	mov	r2, #32
   18b90:	movne	r5, #0
   18b94:	moveq	r5, #1
   18b98:	bne	18bc8 <g_strcmp0@plt+0x3674>
   18b9c:	bl	15104 <g_print@plt>
   18ba0:	mov	r1, #27
   18ba4:	mov	r2, #0
   18ba8:	mov	r3, r6
   18bac:	str	r2, [sp, #4]
   18bb0:	movw	r0, #57648	; 0xe130
   18bb4:	str	r1, [sp]
   18bb8:	movt	r0, #1
   18bbc:	mov	r2, #31
   18bc0:	bl	15104 <g_print@plt>
   18bc4:	b	18b5c <g_strcmp0@plt+0x3608>
   18bc8:	bl	15104 <g_print@plt>
   18bcc:	mov	r1, #27
   18bd0:	str	r5, [sp, #4]
   18bd4:	mov	r3, r6
   18bd8:	str	r1, [sp]
   18bdc:	movw	r0, #57648	; 0xe130
   18be0:	mov	r2, #34	; 0x22
   18be4:	movt	r0, #1
   18be8:	bl	15104 <g_print@plt>
   18bec:	b	18b5c <g_strcmp0@plt+0x3608>
   18bf0:	bl	14f3c <__stack_chk_fail@plt>
   18bf4:	push	{r4, r5, r6, lr}
   18bf8:	movw	r4, #4120	; 0x1018
   18bfc:	movt	r4, #3
   18c00:	ldr	r6, [pc, #136]	; 18c90 <g_strcmp0@plt+0x373c>
   18c04:	sub	sp, sp, #64	; 0x40
   18c08:	mov	r3, #0
   18c0c:	ldr	ip, [r4]
   18c10:	mov	r2, r3
   18c14:	add	r1, sp, #4
   18c18:	str	r3, [sp, #8]
   18c1c:	str	r3, [sp, #12]
   18c20:	movw	lr, #57664	; 0xe140
   18c24:	str	ip, [sp, #60]	; 0x3c
   18c28:	movt	lr, #1
   18c2c:	str	r3, [sp, #16]
   18c30:	movw	ip, #57672	; 0xe148
   18c34:	str	r3, [sp, #28]
   18c38:	movt	ip, #1
   18c3c:	str	r3, [sp, #32]
   18c40:	mov	r5, #118	; 0x76
   18c44:	str	r3, [sp, #36]	; 0x24
   18c48:	str	r3, [sp, #40]	; 0x28
   18c4c:	str	r3, [sp, #44]	; 0x2c
   18c50:	str	r3, [sp, #48]	; 0x30
   18c54:	str	r3, [sp, #52]	; 0x34
   18c58:	str	r3, [sp, #56]	; 0x38
   18c5c:	str	lr, [sp, #4]
   18c60:	str	ip, [sp, #24]
   18c64:	str	r6, [sp, #20]
   18c68:	strb	r5, [sp, #8]
   18c6c:	bl	15164 <g_option_context_add_main_entries@plt>
   18c70:	ldr	r2, [sp, #60]	; 0x3c
   18c74:	mov	r0, #1
   18c78:	ldr	r3, [r4]
   18c7c:	cmp	r2, r3
   18c80:	bne	18c8c <g_strcmp0@plt+0x3738>
   18c84:	add	sp, sp, #64	; 0x40
   18c88:	pop	{r4, r5, r6, pc}
   18c8c:	bl	14f3c <__stack_chk_fail@plt>
   18c90:	andeq	r1, r3, r8, lsr r0
   18c94:	push	{r3, lr}
   18c98:	movw	r3, #4148	; 0x1034
   18c9c:	movt	r3, #3
   18ca0:	ldr	r3, [r3, #4]
   18ca4:	cmp	r3, #0
   18ca8:	beq	18cb4 <g_strcmp0@plt+0x3760>
   18cac:	mov	r0, #1
   18cb0:	pop	{r3, pc}
   18cb4:	movw	r0, #57716	; 0xe174
   18cb8:	movt	r0, #1
   18cbc:	bl	14f60 <g_getenv@plt>
   18cc0:	adds	r0, r0, #0
   18cc4:	movne	r0, #1
   18cc8:	pop	{r3, pc}
   18ccc:	subs	r3, r0, #0
   18cd0:	push	{r4, lr}
   18cd4:	bne	18cf4 <g_strcmp0@plt+0x37a0>
   18cd8:	movw	r0, #48456	; 0xbd48
   18cdc:	movw	r2, #35548	; 0x8adc
   18ce0:	movt	r0, #1
   18ce4:	movt	r2, #1
   18ce8:	mov	r1, #128	; 0x80
   18cec:	pop	{r4, lr}
   18cf0:	b	1496c <g_log_set_handler@plt>
   18cf4:	mov	r1, #12
   18cf8:	mov	r0, #0
   18cfc:	bl	1520c <g_log_set_fatal_mask@plt>
   18d00:	movw	r0, #48456	; 0xbd48
   18d04:	movw	r2, #35552	; 0x8ae0
   18d08:	movt	r0, #1
   18d0c:	movt	r2, #1
   18d10:	mov	r1, #156	; 0x9c
   18d14:	mov	r3, #0
   18d18:	pop	{r4, lr}
   18d1c:	b	1496c <g_log_set_handler@plt>
   18d20:	push	{r4, lr}
   18d24:	movw	r4, #4148	; 0x1034
   18d28:	movt	r4, #3
   18d2c:	sub	sp, sp, #8
   18d30:	ldr	r0, [r4, #4]
   18d34:	bl	18ccc <g_strcmp0@plt+0x3778>
   18d38:	movw	r3, #4128	; 0x1020
   18d3c:	movt	r3, #3
   18d40:	ldr	r0, [r3]
   18d44:	bl	14f30 <fileno@plt>
   18d48:	bl	14f84 <isatty@plt>
   18d4c:	ldr	r1, [r4, #4]
   18d50:	movw	r2, #57724	; 0xe17c
   18d54:	movt	r2, #1
   18d58:	cmp	r1, #0
   18d5c:	movw	r3, #57732	; 0xe184
   18d60:	movt	r3, #1
   18d64:	mov	r1, #128	; 0x80
   18d68:	movne	r3, r2
   18d6c:	movw	r2, #57744	; 0xe190
   18d70:	movt	r2, #1
   18d74:	subs	r0, r0, #1
   18d78:	rsbs	ip, r0, #0
   18d7c:	adcs	ip, ip, r0
   18d80:	movw	r0, #48456	; 0xbd48
   18d84:	str	ip, [sp]
   18d88:	movt	r0, #1
   18d8c:	str	ip, [r4]
   18d90:	bl	14a38 <g_log@plt>
   18d94:	mov	r0, #1
   18d98:	add	sp, sp, #8
   18d9c:	pop	{r4, pc}
   18da0:	push	{r4, lr}
   18da4:	mov	r2, #5
   18da8:	sub	sp, sp, #8
   18dac:	movw	r1, #57784	; 0xe1b8
   18db0:	mov	r0, #0
   18db4:	movt	r1, #1
   18db8:	bl	14fcc <dcgettext@plt>
   18dbc:	mov	r2, #5
   18dc0:	movw	r1, #57804	; 0xe1cc
   18dc4:	movt	r1, #1
   18dc8:	mov	r4, r0
   18dcc:	mov	r0, #0
   18dd0:	bl	14fcc <dcgettext@plt>
   18dd4:	mov	r3, #0
   18dd8:	mov	r1, r4
   18ddc:	str	r3, [sp]
   18de0:	mov	r2, r0
   18de4:	movw	r0, #57828	; 0xe1e4
   18de8:	movt	r0, #1
   18dec:	bl	14a2c <g_option_group_new@plt>
   18df0:	movw	r1, #35828	; 0x8bf4
   18df4:	movw	r2, #36128	; 0x8d20
   18df8:	movt	r1, #1
   18dfc:	movt	r2, #1
   18e00:	mov	r4, r0
   18e04:	bl	14b88 <g_option_group_set_parse_hooks@plt>
   18e08:	mov	r0, r4
   18e0c:	add	sp, sp, #8
   18e10:	pop	{r4, pc}
   18e14:	movw	r3, #4156	; 0x103c
   18e18:	movt	r3, #3
   18e1c:	mov	r2, #0
   18e20:	mov	ip, #4
   18e24:	ldr	r1, [r3]
   18e28:	add	r3, r0, r1
   18e2c:	str	r2, [r0, r1]
   18e30:	str	r2, [r3, #4]
   18e34:	str	r2, [r3, #8]
   18e38:	str	ip, [r3, #12]
   18e3c:	bx	lr
   18e40:	push	{r4, r5, lr}
   18e44:	sub	sp, sp, #20
   18e48:	mov	r4, r0
   18e4c:	bl	152c0 <g_type_class_peek_parent@plt>
   18e50:	movw	r1, #4156	; 0x103c
   18e54:	movt	r1, #3
   18e58:	ldr	r3, [r1]
   18e5c:	cmp	r3, #0
   18e60:	str	r0, [r1, #4]
   18e64:	beq	18e70 <g_strcmp0@plt+0x391c>
   18e68:	mov	r0, r4
   18e6c:	bl	1487c <g_type_class_adjust_private_offset@plt>
   18e70:	mov	r0, r4
   18e74:	mov	r1, #80	; 0x50
   18e78:	bl	15470 <g_type_check_class_cast@plt>
   18e7c:	mov	r1, #0
   18e80:	mov	r5, #1
   18e84:	movw	r2, #37524	; 0x9294
   18e88:	movw	r3, #37252	; 0x9184
   18e8c:	movt	r2, #1
   18e90:	movt	r3, #1
   18e94:	mov	r4, r0
   18e98:	str	r2, [r0, #24]
   18e9c:	str	r3, [r0, #16]
   18ea0:	mov	r2, r1
   18ea4:	mov	r3, r1
   18ea8:	str	r5, [sp]
   18eac:	movw	r0, #57852	; 0xe1fc
   18eb0:	movt	r0, #1
   18eb4:	bl	14930 <g_param_spec_string@plt>
   18eb8:	mov	r1, r5
   18ebc:	mov	r2, r0
   18ec0:	mov	r0, r4
   18ec4:	bl	15068 <g_object_class_install_property@plt>
   18ec8:	mov	r1, #0
   18ecc:	mov	r3, r1
   18ed0:	mov	r2, r1
   18ed4:	str	r5, [sp]
   18ed8:	movw	r0, #57868	; 0xe20c
   18edc:	movt	r0, #1
   18ee0:	bl	14930 <g_param_spec_string@plt>
   18ee4:	mov	r1, #2
   18ee8:	mov	r2, r0
   18eec:	mov	r0, r4
   18ef0:	bl	15068 <g_object_class_install_property@plt>
   18ef4:	mov	r1, #0
   18ef8:	mov	r3, r1
   18efc:	mov	r2, r1
   18f00:	str	r5, [sp]
   18f04:	movw	r0, #57876	; 0xe214
   18f08:	movt	r0, #1
   18f0c:	bl	14930 <g_param_spec_string@plt>
   18f10:	mov	r1, #3
   18f14:	mov	r2, r0
   18f18:	mov	r0, r4
   18f1c:	bl	15068 <g_object_class_install_property@plt>
   18f20:	mov	r3, #0
   18f24:	mov	r1, r3
   18f28:	mov	r2, r3
   18f2c:	mvn	ip, #0
   18f30:	stmib	sp, {r3, r5}
   18f34:	str	ip, [sp]
   18f38:	movw	r0, #57884	; 0xe21c
   18f3c:	movt	r0, #1
   18f40:	bl	150b0 <g_param_spec_uint@plt>
   18f44:	mov	r1, #4
   18f48:	mov	r2, r0
   18f4c:	mov	r0, r4
   18f50:	add	sp, sp, #20
   18f54:	pop	{r4, r5, lr}
   18f58:	b	15068 <g_object_class_install_property@plt>
   18f5c:	push	{r4, r5, r6, r7, r8, r9, lr}
   18f60:	movw	r7, #4120	; 0x1018
   18f64:	movt	r7, #3
   18f68:	sub	sp, sp, #2048	; 0x800
   18f6c:	sub	sp, sp, #12
   18f70:	movw	r3, #4156	; 0x103c
   18f74:	ldr	ip, [r7]
   18f78:	movt	r3, #3
   18f7c:	mov	r4, r1
   18f80:	mov	r9, r0
   18f84:	mov	r1, #0
   18f88:	mov	r6, r2
   18f8c:	add	r0, sp, #4
   18f90:	mov	r2, #1024	; 0x400
   18f94:	ldr	r8, [r3]
   18f98:	str	ip, [sp, #2052]	; 0x804
   18f9c:	bl	14c0c <memset@plt>
   18fa0:	add	r0, sp, #1024	; 0x400
   18fa4:	mov	r1, #0
   18fa8:	mov	r2, #1024	; 0x400
   18fac:	add	r0, r0, #4
   18fb0:	bl	14c0c <memset@plt>
   18fb4:	mov	r0, r4
   18fb8:	bl	1544c <exif_data_new_from_file@plt>
   18fbc:	add	r5, r9, r8
   18fc0:	subs	r4, r0, #0
   18fc4:	beq	190c4 <g_strcmp0@plt+0x3b70>
   18fc8:	ldr	r0, [r4]
   18fcc:	movw	r1, #271	; 0x10f
   18fd0:	bl	15170 <exif_content_get_entry@plt>
   18fd4:	cmp	r0, #0
   18fd8:	beq	18ff0 <g_strcmp0@plt+0x3a9c>
   18fdc:	add	r1, sp, #4
   18fe0:	mov	r2, #1024	; 0x400
   18fe4:	bl	15344 <exif_entry_get_value@plt>
   18fe8:	add	r0, sp, #4
   18fec:	bl	14bf4 <g_strchomp@plt>
   18ff0:	ldr	r0, [r4]
   18ff4:	mov	r1, #272	; 0x110
   18ff8:	bl	15170 <exif_content_get_entry@plt>
   18ffc:	cmp	r0, #0
   19000:	beq	19020 <g_strcmp0@plt+0x3acc>
   19004:	add	r1, sp, #1024	; 0x400
   19008:	mov	r2, #1024	; 0x400
   1900c:	add	r1, r1, #4
   19010:	bl	15344 <exif_entry_get_value@plt>
   19014:	add	r0, sp, #1024	; 0x400
   19018:	add	r0, r0, #4
   1901c:	bl	14bf4 <g_strchomp@plt>
   19020:	movw	r1, #33437	; 0x829d
   19024:	ldr	r0, [r4, #8]
   19028:	bl	15170 <exif_content_get_entry@plt>
   1902c:	movw	r1, #37377	; 0x9201
   19030:	cmp	r0, #0
   19034:	ldr	r0, [r4, #8]
   19038:	movne	r6, #4
   1903c:	moveq	r6, #0
   19040:	bl	15170 <exif_content_get_entry@plt>
   19044:	movw	r1, #37385	; 0x9209
   19048:	cmp	r0, #0
   1904c:	ldr	r0, [r4, #8]
   19050:	movne	r6, #4
   19054:	bl	15170 <exif_content_get_entry@plt>
   19058:	cmp	r0, #0
   1905c:	ldr	r0, [r9, r8]
   19060:	movne	r6, #4
   19064:	bl	14fa8 <g_free@plt>
   19068:	ldr	r0, [r5, #4]
   1906c:	bl	14fa8 <g_free@plt>
   19070:	ldr	r0, [r5, #8]
   19074:	bl	14fa8 <g_free@plt>
   19078:	add	r0, sp, #4
   1907c:	bl	14bc4 <g_strdup@plt>
   19080:	str	r0, [r9, r8]
   19084:	add	r0, sp, #1024	; 0x400
   19088:	add	r0, r0, #4
   1908c:	bl	14bc4 <g_strdup@plt>
   19090:	mov	r3, #0
   19094:	str	r6, [r5, #12]
   19098:	stmib	r5, {r0, r3}
   1909c:	mov	r0, r4
   190a0:	bl	152f0 <exif_data_unref@plt>
   190a4:	mov	r0, #1
   190a8:	ldr	r2, [sp, #2052]	; 0x804
   190ac:	ldr	r3, [r7]
   190b0:	cmp	r2, r3
   190b4:	bne	190e4 <g_strcmp0@plt+0x3b90>
   190b8:	add	sp, sp, #2048	; 0x800
   190bc:	add	sp, sp, #12
   190c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   190c4:	mov	r0, r6
   190c8:	movw	r3, #57896	; 0xe228
   190cc:	mov	r1, #1
   190d0:	movt	r3, #1
   190d4:	mov	r2, r4
   190d8:	bl	15434 <g_set_error@plt>
   190dc:	mov	r0, r4
   190e0:	b	190a8 <g_strcmp0@plt+0x3b54>
   190e4:	bl	14f3c <__stack_chk_fail@plt>
   190e8:	push	{r4, r5, lr}
   190ec:	movw	r4, #4156	; 0x103c
   190f0:	dmb	sy
   190f4:	movt	r4, #3
   190f8:	sub	sp, sp, #20
   190fc:	ldr	r5, [r4, #8]
   19100:	dmb	sy
   19104:	cmp	r5, #0
   19108:	beq	19118 <g_strcmp0@plt+0x3bc4>
   1910c:	ldr	r0, [r4, #8]
   19110:	add	sp, sp, #20
   19114:	pop	{r4, r5, pc}
   19118:	add	r0, r4, #8
   1911c:	bl	14e28 <g_once_init_enter@plt>
   19120:	cmp	r0, #0
   19124:	beq	1910c <g_strcmp0@plt+0x3bb8>
   19128:	movw	r0, #57940	; 0xe254
   1912c:	movt	r0, #1
   19130:	bl	14ed0 <g_intern_static_string@plt>
   19134:	str	r5, [sp, #8]
   19138:	mov	r2, #12
   1913c:	movw	r3, #36372	; 0x8e14
   19140:	movt	r3, #1
   19144:	stm	sp, {r2, r3}
   19148:	mov	r2, #68	; 0x44
   1914c:	movw	r3, #36416	; 0x8e40
   19150:	movt	r3, #1
   19154:	mov	r1, r0
   19158:	mov	r0, #80	; 0x50
   1915c:	bl	1484c <g_type_register_static_simple@plt>
   19160:	mov	r1, #16
   19164:	mov	r5, r0
   19168:	bl	14ffc <g_type_add_instance_private@plt>
   1916c:	mov	r1, r5
   19170:	mov	r3, r0
   19174:	mov	r0, r4
   19178:	str	r3, [r0], #8
   1917c:	bl	15200 <g_once_init_leave@plt>
   19180:	b	1910c <g_strcmp0@plt+0x3bb8>
   19184:	push	{r4, r5, r6, r7, r8, r9, lr}
   19188:	sub	sp, sp, #28
   1918c:	mov	r5, r1
   19190:	mov	r8, r3
   19194:	mov	r6, r0
   19198:	mov	r9, r2
   1919c:	bl	190e8 <g_strcmp0@plt+0x3b94>
   191a0:	sub	r4, r5, #1
   191a4:	mov	r1, r0
   191a8:	mov	r0, r6
   191ac:	bl	149a8 <g_type_check_instance_cast@plt>
   191b0:	movw	ip, #4156	; 0x103c
   191b4:	movt	ip, #3
   191b8:	ldr	r1, [ip]
   191bc:	mov	r7, r0
   191c0:	add	r3, r0, r1
   191c4:	cmp	r4, #3
   191c8:	ldrls	pc, [pc, r4, lsl #2]
   191cc:	b	19230 <g_strcmp0@plt+0x3cdc>
   191d0:	andeq	r9, r1, ip, lsl r2
   191d4:	andeq	r9, r1, r8, lsl #4
   191d8:	strdeq	r9, [r1], -r4
   191dc:	andeq	r9, r1, r0, ror #3
   191e0:	mov	r0, r9
   191e4:	ldr	r1, [r3, #12]
   191e8:	add	sp, sp, #28
   191ec:	pop	{r4, r5, r6, r7, r8, r9, lr}
   191f0:	b	14abc <g_value_set_uint@plt>
   191f4:	mov	r0, r9
   191f8:	ldr	r1, [r3, #8]
   191fc:	add	sp, sp, #28
   19200:	pop	{r4, r5, r6, r7, r8, r9, lr}
   19204:	b	14d80 <g_value_set_string@plt>
   19208:	mov	r0, r9
   1920c:	ldr	r1, [r3, #4]
   19210:	add	sp, sp, #28
   19214:	pop	{r4, r5, r6, r7, r8, r9, lr}
   19218:	b	14d80 <g_value_set_string@plt>
   1921c:	mov	r0, r9
   19220:	ldr	r1, [r7, r1]
   19224:	add	sp, sp, #28
   19228:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1922c:	b	14d80 <g_value_set_string@plt>
   19230:	ldm	r8, {r3, r7}
   19234:	ldr	r0, [r3]
   19238:	bl	14a5c <g_type_name@plt>
   1923c:	ldr	r3, [r6]
   19240:	mov	r4, r0
   19244:	ldr	r0, [r3]
   19248:	bl	14a5c <g_type_name@plt>
   1924c:	str	r7, [sp, #12]
   19250:	str	r4, [sp, #16]
   19254:	movw	r2, #345	; 0x159
   19258:	str	r5, [sp, #8]
   1925c:	mov	r1, #16
   19260:	movw	r3, #57552	; 0xe0d0
   19264:	movt	r3, #1
   19268:	stm	sp, {r2, r3}
   1926c:	movw	r2, #57472	; 0xe080
   19270:	movw	r3, #57948	; 0xe25c
   19274:	movt	r2, #1
   19278:	movt	r3, #1
   1927c:	str	r0, [sp, #20]
   19280:	movw	r0, #48456	; 0xbd48
   19284:	movt	r0, #1
   19288:	bl	14a38 <g_log@plt>
   1928c:	add	sp, sp, #28
   19290:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19294:	push	{r4, r5, r6, lr}
   19298:	mov	r5, r0
   1929c:	bl	190e8 <g_strcmp0@plt+0x3b94>
   192a0:	movw	r4, #4156	; 0x103c
   192a4:	movt	r4, #3
   192a8:	mov	r1, r0
   192ac:	mov	r0, r5
   192b0:	bl	149a8 <g_type_check_instance_cast@plt>
   192b4:	ldr	r3, [r4]
   192b8:	add	r6, r0, r3
   192bc:	ldr	r0, [r0, r3]
   192c0:	bl	14fa8 <g_free@plt>
   192c4:	ldr	r0, [r6, #4]
   192c8:	bl	14fa8 <g_free@plt>
   192cc:	ldr	r0, [r6, #8]
   192d0:	bl	14fa8 <g_free@plt>
   192d4:	ldr	r0, [r4, #4]
   192d8:	mov	r1, #80	; 0x50
   192dc:	bl	15470 <g_type_check_class_cast@plt>
   192e0:	ldr	r3, [r0, #24]
   192e4:	mov	r0, r5
   192e8:	blx	r3
   192ec:	pop	{r4, r5, r6, pc}
   192f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   192f4:	movw	r4, #4120	; 0x1018
   192f8:	movt	r4, #3
   192fc:	sub	sp, sp, #68	; 0x44
   19300:	mov	r5, r0
   19304:	mov	r6, r1
   19308:	ldr	r3, [r4]
   1930c:	mov	r7, r2
   19310:	str	r3, [sp, #60]	; 0x3c
   19314:	bl	190e8 <g_strcmp0@plt+0x3b94>
   19318:	cmp	r5, #0
   1931c:	beq	1934c <g_strcmp0@plt+0x3df8>
   19320:	ldr	r3, [r5]
   19324:	cmp	r3, #0
   19328:	beq	19338 <g_strcmp0@plt+0x3de4>
   1932c:	ldr	r3, [r3]
   19330:	cmp	r0, r3
   19334:	beq	19394 <g_strcmp0@plt+0x3e40>
   19338:	mov	r1, r0
   1933c:	mov	r0, r5
   19340:	bl	150f8 <g_type_check_instance_is_a@plt>
   19344:	cmp	r0, #0
   19348:	bne	19394 <g_strcmp0@plt+0x3e40>
   1934c:	movw	r0, #48456	; 0xbd48
   19350:	movw	r1, #57836	; 0xe1ec
   19354:	movw	r2, #58412	; 0xe42c
   19358:	movt	r0, #1
   1935c:	movt	r1, #1
   19360:	movt	r2, #1
   19364:	bl	1481c <g_return_if_fail_warning@plt>
   19368:	mov	r6, #0
   1936c:	mov	r5, r6
   19370:	mov	r0, r6
   19374:	bl	14fa8 <g_free@plt>
   19378:	ldr	r2, [sp, #60]	; 0x3c
   1937c:	ldr	r3, [r4]
   19380:	mov	r0, r5
   19384:	cmp	r2, r3
   19388:	bne	1987c <g_strcmp0@plt+0x4328>
   1938c:	add	sp, sp, #68	; 0x44
   19390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19394:	cmp	r7, #0
   19398:	beq	193c8 <g_strcmp0@plt+0x3e74>
   1939c:	ldr	r3, [r7]
   193a0:	cmp	r3, #0
   193a4:	beq	193c8 <g_strcmp0@plt+0x3e74>
   193a8:	movw	r0, #48456	; 0xbd48
   193ac:	movw	r1, #57836	; 0xe1ec
   193b0:	movw	r2, #58432	; 0xe440
   193b4:	movt	r0, #1
   193b8:	movt	r1, #1
   193bc:	movt	r2, #1
   193c0:	bl	1481c <g_return_if_fail_warning@plt>
   193c4:	b	19368 <g_strcmp0@plt+0x3e14>
   193c8:	mov	r2, #0
   193cc:	movw	r1, #57968	; 0xe270
   193d0:	str	r7, [sp]
   193d4:	mov	r3, r2
   193d8:	mov	r0, r6
   193dc:	movt	r1, #1
   193e0:	bl	14ba0 <g_file_query_info@plt>
   193e4:	subs	r9, r0, #0
   193e8:	beq	19368 <g_strcmp0@plt+0x3e14>
   193ec:	movw	r1, #57968	; 0xe270
   193f0:	movt	r1, #1
   193f4:	bl	15224 <g_file_info_get_attribute_string@plt>
   193f8:	movw	r1, #57992	; 0xe288
   193fc:	movt	r1, #1
   19400:	mov	r8, r0
   19404:	bl	15554 <g_strcmp0@plt>
   19408:	cmp	r0, #0
   1940c:	bne	19540 <g_strcmp0@plt+0x3fec>
   19410:	mov	r0, r6
   19414:	bl	14af8 <g_file_get_path@plt>
   19418:	movw	r3, #4156	; 0x103c
   1941c:	movt	r3, #3
   19420:	movw	r1, #48472	; 0xbd58
   19424:	movt	r1, #1
   19428:	ldr	sl, [r3]
   1942c:	mov	r6, r0
   19430:	mov	r3, #0
   19434:	str	r3, [sp, #24]
   19438:	str	r3, [sp, #28]
   1943c:	str	r3, [sp, #32]
   19440:	str	r3, [sp, #36]	; 0x24
   19444:	bl	14954 <TIFFOpen@plt>
   19448:	movw	r1, #271	; 0x10f
   1944c:	add	r2, sp, #24
   19450:	mov	r8, r0
   19454:	bl	14d38 <TIFFGetField@plt>
   19458:	mov	r0, r8
   1945c:	mov	r1, #272	; 0x110
   19460:	add	r2, sp, #28
   19464:	bl	14d38 <TIFFGetField@plt>
   19468:	mov	r0, r8
   1946c:	movw	r1, #50735	; 0xc62f
   19470:	add	r2, sp, #32
   19474:	bl	14d38 <TIFFGetField@plt>
   19478:	ldr	r3, [sp, #24]
   1947c:	cmp	r3, #0
   19480:	beq	196b8 <g_strcmp0@plt+0x4164>
   19484:	ldr	r3, [sp, #28]
   19488:	cmp	r3, #0
   1948c:	beq	196b8 <g_strcmp0@plt+0x4164>
   19490:	mov	r0, r8
   19494:	movw	r1, #33437	; 0x829d
   19498:	add	r2, sp, #36	; 0x24
   1949c:	bl	14d38 <TIFFGetField@plt>
   194a0:	ldr	fp, [sp, #36]	; 0x24
   194a4:	add	r2, sp, #36	; 0x24
   194a8:	mov	r0, r8
   194ac:	movw	r1, #50736	; 0xc630
   194b0:	cmp	fp, #0
   194b4:	movne	fp, #4
   194b8:	moveq	fp, #0
   194bc:	bl	14d38 <TIFFGetField@plt>
   194c0:	ldr	r3, [sp, #36]	; 0x24
   194c4:	movw	r1, #58040	; 0xe2b8
   194c8:	ldr	r0, [sp, #24]
   194cc:	movt	r1, #1
   194d0:	cmp	r3, #0
   194d4:	movne	fp, #4
   194d8:	bl	14dd4 <g_str_has_prefix@plt>
   194dc:	cmp	r0, #0
   194e0:	ldr	r0, [r5, sl]
   194e4:	add	r7, r5, sl
   194e8:	movne	fp, #4
   194ec:	bl	14fa8 <g_free@plt>
   194f0:	ldr	r0, [r7, #4]
   194f4:	bl	14fa8 <g_free@plt>
   194f8:	ldr	r0, [r7, #8]
   194fc:	bl	14fa8 <g_free@plt>
   19500:	ldr	r0, [sp, #24]
   19504:	bl	14bc4 <g_strdup@plt>
   19508:	str	r0, [r5, sl]
   1950c:	ldr	r0, [sp, #28]
   19510:	bl	14bc4 <g_strdup@plt>
   19514:	str	r0, [r7, #4]
   19518:	ldr	r0, [sp, #32]
   1951c:	bl	14bc4 <g_strdup@plt>
   19520:	mov	r5, #1
   19524:	str	r0, [r7, #8]
   19528:	str	fp, [r7, #12]
   1952c:	mov	r0, r8
   19530:	bl	14810 <TIFFClose@plt>
   19534:	mov	r0, r9
   19538:	bl	151f4 <g_object_unref@plt>
   1953c:	b	19370 <g_strcmp0@plt+0x3e1c>
   19540:	movw	r1, #58048	; 0xe2c0
   19544:	mov	r0, r8
   19548:	movt	r1, #1
   1954c:	bl	15554 <g_strcmp0@plt>
   19550:	cmp	r0, #0
   19554:	beq	19664 <g_strcmp0@plt+0x4110>
   19558:	movw	r1, #58060	; 0xe2cc
   1955c:	mov	r0, r8
   19560:	movt	r1, #1
   19564:	bl	15554 <g_strcmp0@plt>
   19568:	cmp	r0, #0
   1956c:	beq	19588 <g_strcmp0@plt+0x4034>
   19570:	movw	r1, #58080	; 0xe2e0
   19574:	mov	r0, r8
   19578:	movt	r1, #1
   1957c:	bl	15554 <g_strcmp0@plt>
   19580:	cmp	r0, #0
   19584:	bne	196d8 <g_strcmp0@plt+0x4184>
   19588:	mov	r0, r6
   1958c:	bl	14af8 <g_file_get_path@plt>
   19590:	mov	ip, #0
   19594:	movw	r8, #4156	; 0x103c
   19598:	movt	r8, #3
   1959c:	add	r3, sp, #44	; 0x2c
   195a0:	add	lr, sp, #40	; 0x28
   195a4:	str	r3, [sp, #8]
   195a8:	str	lr, [sp, #16]
   195ac:	mov	r6, r0
   195b0:	str	r0, [sp, #52]	; 0x34
   195b4:	mov	r2, ip
   195b8:	str	r7, [sp, #20]
   195bc:	mov	r0, ip
   195c0:	str	ip, [sp]
   195c4:	add	r1, sp, #48	; 0x30
   195c8:	str	ip, [sp, #4]
   195cc:	mov	r3, #16
   195d0:	str	ip, [sp, #12]
   195d4:	movw	lr, #58300	; 0xe3bc
   195d8:	str	ip, [sp, #40]	; 0x28
   195dc:	movt	lr, #1
   195e0:	str	ip, [sp, #44]	; 0x2c
   195e4:	str	ip, [sp, #56]	; 0x38
   195e8:	ldr	sl, [r8]
   195ec:	str	lr, [sp, #48]	; 0x30
   195f0:	bl	14f6c <g_spawn_sync@plt>
   195f4:	cmp	r0, #0
   195f8:	beq	196a8 <g_strcmp0@plt+0x4154>
   195fc:	ldr	r3, [sp, #40]	; 0x28
   19600:	cmp	r3, #0
   19604:	bne	19688 <g_strcmp0@plt+0x4134>
   19608:	movw	r1, #58352	; 0xe3f0
   1960c:	ldr	r0, [sp, #44]	; 0x2c
   19610:	movt	r1, #1
   19614:	mvn	r2, #0
   19618:	bl	14d44 <g_strsplit@plt>
   1961c:	mov	r8, r0
   19620:	bl	14f0c <g_strv_length@plt>
   19624:	cmp	r0, #4
   19628:	beq	197f0 <g_strcmp0@plt+0x429c>
   1962c:	ldr	ip, [sp, #44]	; 0x2c
   19630:	mov	r1, #1
   19634:	movw	r3, #58356	; 0xe3f4
   19638:	mov	r0, r7
   1963c:	mov	r2, r1
   19640:	movt	r3, #1
   19644:	str	ip, [sp]
   19648:	bl	15434 <g_set_error@plt>
   1964c:	cmp	r8, #0
   19650:	beq	198d8 <g_strcmp0@plt+0x4384>
   19654:	mov	r5, #0
   19658:	mov	r0, r8
   1965c:	bl	14f00 <g_strfreev@plt>
   19660:	b	196ac <g_strcmp0@plt+0x4158>
   19664:	mov	r0, r6
   19668:	bl	14af8 <g_file_get_path@plt>
   1966c:	mov	r6, r0
   19670:	mov	r2, r7
   19674:	mov	r0, r5
   19678:	mov	r1, r6
   1967c:	bl	18f5c <g_strcmp0@plt+0x3a08>
   19680:	mov	r5, r0
   19684:	b	19534 <g_strcmp0@plt+0x3fe0>
   19688:	ldr	ip, [sp, #44]	; 0x2c
   1968c:	mov	r1, #1
   19690:	movw	r3, #58332	; 0xe3dc
   19694:	mov	r0, r7
   19698:	mov	r2, r1
   1969c:	movt	r3, #1
   196a0:	str	ip, [sp]
   196a4:	bl	15434 <g_set_error@plt>
   196a8:	mov	r5, #0
   196ac:	ldr	r0, [sp, #44]	; 0x2c
   196b0:	bl	14fa8 <g_free@plt>
   196b4:	b	19534 <g_strcmp0@plt+0x3fe0>
   196b8:	movw	r3, #58004	; 0xe294
   196bc:	mov	r0, r7
   196c0:	mov	r1, #1
   196c4:	movt	r3, #1
   196c8:	mov	r2, #0
   196cc:	bl	15434 <g_set_error@plt>
   196d0:	mov	r5, #0
   196d4:	b	1952c <g_strcmp0@plt+0x3fd8>
   196d8:	movw	r1, #58100	; 0xe2f4
   196dc:	mov	r0, r8
   196e0:	movt	r1, #1
   196e4:	bl	15554 <g_strcmp0@plt>
   196e8:	cmp	r0, #0
   196ec:	beq	19588 <g_strcmp0@plt+0x4034>
   196f0:	movw	r1, #58120	; 0xe308
   196f4:	mov	r0, r8
   196f8:	movt	r1, #1
   196fc:	bl	15554 <g_strcmp0@plt>
   19700:	cmp	r0, #0
   19704:	beq	19588 <g_strcmp0@plt+0x4034>
   19708:	movw	r1, #58136	; 0xe318
   1970c:	mov	r0, r8
   19710:	movt	r1, #1
   19714:	bl	15554 <g_strcmp0@plt>
   19718:	cmp	r0, #0
   1971c:	beq	19588 <g_strcmp0@plt+0x4034>
   19720:	movw	r1, #58156	; 0xe32c
   19724:	mov	r0, r8
   19728:	movt	r1, #1
   1972c:	bl	15554 <g_strcmp0@plt>
   19730:	cmp	r0, #0
   19734:	beq	19588 <g_strcmp0@plt+0x4034>
   19738:	movw	r1, #58176	; 0xe340
   1973c:	mov	r0, r8
   19740:	movt	r1, #1
   19744:	bl	15554 <g_strcmp0@plt>
   19748:	cmp	r0, #0
   1974c:	beq	19588 <g_strcmp0@plt+0x4034>
   19750:	movw	r1, #58196	; 0xe354
   19754:	mov	r0, r8
   19758:	movt	r1, #1
   1975c:	bl	15554 <g_strcmp0@plt>
   19760:	cmp	r0, #0
   19764:	beq	19588 <g_strcmp0@plt+0x4034>
   19768:	movw	r1, #58216	; 0xe368
   1976c:	mov	r0, r8
   19770:	movt	r1, #1
   19774:	bl	15554 <g_strcmp0@plt>
   19778:	cmp	r0, #0
   1977c:	beq	19588 <g_strcmp0@plt+0x4034>
   19780:	movw	r1, #58240	; 0xe380
   19784:	mov	r0, r8
   19788:	movt	r1, #1
   1978c:	bl	15554 <g_strcmp0@plt>
   19790:	cmp	r0, #0
   19794:	beq	19588 <g_strcmp0@plt+0x4034>
   19798:	movw	r1, #58260	; 0xe394
   1979c:	mov	r0, r8
   197a0:	movt	r1, #1
   197a4:	bl	15554 <g_strcmp0@plt>
   197a8:	cmp	r0, #0
   197ac:	beq	19588 <g_strcmp0@plt+0x4034>
   197b0:	movw	r1, #58280	; 0xe3a8
   197b4:	mov	r0, r8
   197b8:	movt	r1, #1
   197bc:	bl	15554 <g_strcmp0@plt>
   197c0:	cmp	r0, #0
   197c4:	beq	19588 <g_strcmp0@plt+0x4034>
   197c8:	mov	r1, #1
   197cc:	movw	r3, #58380	; 0xe40c
   197d0:	str	r8, [sp]
   197d4:	mov	r0, r7
   197d8:	mov	r2, r1
   197dc:	movt	r3, #1
   197e0:	bl	15434 <g_set_error@plt>
   197e4:	mov	r6, #0
   197e8:	mov	r5, r6
   197ec:	b	19534 <g_strcmp0@plt+0x3fe0>
   197f0:	ldr	r0, [r5, sl]
   197f4:	add	r7, r5, sl
   197f8:	bl	14fa8 <g_free@plt>
   197fc:	ldr	r0, [r7, #4]
   19800:	bl	14fa8 <g_free@plt>
   19804:	ldr	r0, [r7, #8]
   19808:	bl	14fa8 <g_free@plt>
   1980c:	ldr	r0, [r8]
   19810:	ldrb	r3, [r0]
   19814:	cmp	r3, #0
   19818:	streq	r3, [r5, sl]
   1981c:	bne	19858 <g_strcmp0@plt+0x4304>
   19820:	ldr	r0, [r8, #4]
   19824:	ldrb	r3, [r0]
   19828:	cmp	r3, #0
   1982c:	streq	r3, [r7, #4]
   19830:	bne	19870 <g_strcmp0@plt+0x431c>
   19834:	ldr	r0, [r8, #8]
   19838:	ldrb	r3, [r0]
   1983c:	cmp	r3, #0
   19840:	streq	r3, [r7, #8]
   19844:	bne	19864 <g_strcmp0@plt+0x4310>
   19848:	mov	r3, #4
   1984c:	mov	r5, #1
   19850:	str	r3, [r7, #12]
   19854:	b	19658 <g_strcmp0@plt+0x4104>
   19858:	bl	14bc4 <g_strdup@plt>
   1985c:	str	r0, [r5, sl]
   19860:	b	19820 <g_strcmp0@plt+0x42cc>
   19864:	bl	14bc4 <g_strdup@plt>
   19868:	str	r0, [r7, #8]
   1986c:	b	19848 <g_strcmp0@plt+0x42f4>
   19870:	bl	14bc4 <g_strdup@plt>
   19874:	str	r0, [r7, #4]
   19878:	b	19834 <g_strcmp0@plt+0x42e0>
   1987c:	bl	14f3c <__stack_chk_fail@plt>
   19880:	mov	r4, r0
   19884:	mov	r6, #0
   19888:	mov	r0, r9
   1988c:	bl	151f4 <g_object_unref@plt>
   19890:	mov	r0, r6
   19894:	bl	14fa8 <g_free@plt>
   19898:	mov	r0, r4
   1989c:	bl	1538c <_Unwind_Resume@plt>
   198a0:	mov	r4, r0
   198a4:	mov	r6, #0
   198a8:	b	19890 <g_strcmp0@plt+0x433c>
   198ac:	b	198a0 <g_strcmp0@plt+0x434c>
   198b0:	mov	r4, r0
   198b4:	b	19888 <g_strcmp0@plt+0x4334>
   198b8:	mov	r4, r0
   198bc:	b	19890 <g_strcmp0@plt+0x433c>
   198c0:	b	19880 <g_strcmp0@plt+0x432c>
   198c4:	b	198a0 <g_strcmp0@plt+0x434c>
   198c8:	mov	r4, r0
   198cc:	ldr	r0, [sp, #44]	; 0x2c
   198d0:	bl	14fa8 <g_free@plt>
   198d4:	b	19888 <g_strcmp0@plt+0x4334>
   198d8:	mov	r5, r8
   198dc:	b	196ac <g_strcmp0@plt+0x4158>
   198e0:	b	19880 <g_strcmp0@plt+0x432c>
   198e4:	b	198a0 <g_strcmp0@plt+0x434c>
   198e8:	b	198a0 <g_strcmp0@plt+0x434c>
   198ec:	b	19880 <g_strcmp0@plt+0x432c>
   198f0:	b	19880 <g_strcmp0@plt+0x432c>
   198f4:	b	19880 <g_strcmp0@plt+0x432c>
   198f8:	b	19880 <g_strcmp0@plt+0x432c>
   198fc:	mov	r4, r0
   19900:	mov	r0, r8
   19904:	bl	14f00 <g_strfreev@plt>
   19908:	b	198cc <g_strcmp0@plt+0x4378>
   1990c:	b	198c8 <g_strcmp0@plt+0x4374>
   19910:	b	19880 <g_strcmp0@plt+0x432c>
   19914:	cmp	r8, #0
   19918:	mov	r4, r0
   1991c:	bne	19900 <g_strcmp0@plt+0x43ac>
   19920:	b	198cc <g_strcmp0@plt+0x4378>
   19924:	b	19880 <g_strcmp0@plt+0x432c>
   19928:	b	19880 <g_strcmp0@plt+0x432c>
   1992c:	b	19880 <g_strcmp0@plt+0x432c>
   19930:	b	19880 <g_strcmp0@plt+0x432c>
   19934:	b	19880 <g_strcmp0@plt+0x432c>
   19938:	b	19880 <g_strcmp0@plt+0x432c>
   1993c:	b	19880 <g_strcmp0@plt+0x432c>
   19940:	b	19880 <g_strcmp0@plt+0x432c>
   19944:	b	19880 <g_strcmp0@plt+0x432c>
   19948:	b	19880 <g_strcmp0@plt+0x432c>
   1994c:	b	19880 <g_strcmp0@plt+0x432c>
   19950:	movw	r3, #4156	; 0x103c
   19954:	movt	r3, #3
   19958:	ldr	r3, [r3]
   1995c:	ldr	r0, [r0, r3]
   19960:	bx	lr
   19964:	movw	r3, #4156	; 0x103c
   19968:	movt	r3, #3
   1996c:	ldr	r3, [r3]
   19970:	add	r0, r0, r3
   19974:	ldr	r0, [r0, #4]
   19978:	bx	lr
   1997c:	movw	r3, #4156	; 0x103c
   19980:	movt	r3, #3
   19984:	ldr	r3, [r3]
   19988:	add	r0, r0, r3
   1998c:	ldr	r0, [r0, #8]
   19990:	bx	lr
   19994:	movw	r3, #4156	; 0x103c
   19998:	movt	r3, #3
   1999c:	ldr	r3, [r3]
   199a0:	add	r0, r0, r3
   199a4:	ldr	r0, [r0, #12]
   199a8:	bx	lr
   199ac:	push	{r4, lr}
   199b0:	bl	190e8 <g_strcmp0@plt+0x3b94>
   199b4:	mov	r1, #0
   199b8:	bl	14750 <g_object_new@plt>
   199bc:	mov	r4, r0
   199c0:	bl	190e8 <g_strcmp0@plt+0x3b94>
   199c4:	mov	r1, r0
   199c8:	mov	r0, r4
   199cc:	pop	{r4, lr}
   199d0:	b	149a8 <g_type_check_instance_cast@plt>
   199d4:	andeq	r0, r0, r0
   199d8:	push	{r3, r4, r5, lr}
   199dc:	movw	r3, #4168	; 0x1048
   199e0:	movt	r3, #3
   199e4:	mov	r5, r0
   199e8:	ldr	r4, [r3]
   199ec:	bl	14c3c <gtk_print_settings_new@plt>
   199f0:	str	r0, [r5, r4]
   199f4:	pop	{r3, r4, r5, pc}
   199f8:	push	{r4, r5, lr}
   199fc:	sub	sp, sp, #28
   19a00:	mov	r5, r0
   19a04:	bl	152c0 <g_type_class_peek_parent@plt>
   19a08:	movw	r4, #4168	; 0x1048
   19a0c:	movt	r4, #3
   19a10:	ldr	r3, [r4]
   19a14:	cmp	r3, #0
   19a18:	str	r0, [r4, #4]
   19a1c:	beq	19a2c <g_strcmp0@plt+0x44d8>
   19a20:	mov	r0, r5
   19a24:	mov	r1, r4
   19a28:	bl	1487c <g_type_class_adjust_private_offset@plt>
   19a2c:	mov	r0, r5
   19a30:	mov	r1, #80	; 0x50
   19a34:	bl	15470 <g_type_check_class_cast@plt>
   19a38:	movw	r2, #40476	; 0x9e1c
   19a3c:	movw	r3, #18412	; 0x47ec
   19a40:	movt	r2, #1
   19a44:	movt	r3, #1
   19a48:	ldr	r1, [r0]
   19a4c:	str	r2, [r0, #24]
   19a50:	mov	r0, #4
   19a54:	str	r3, [sp, #8]
   19a58:	mov	r2, #1
   19a5c:	mov	r3, #0
   19a60:	str	r0, [sp, #12]
   19a64:	str	r3, [sp]
   19a68:	movw	r0, #58464	; 0xe460
   19a6c:	str	r3, [sp, #4]
   19a70:	movt	r0, #1
   19a74:	str	r2, [sp, #16]
   19a78:	mov	r3, #28
   19a7c:	mov	r2, #2
   19a80:	str	r3, [sp, #20]
   19a84:	mov	r3, #68	; 0x44
   19a88:	bl	14ccc <g_signal_new@plt>
   19a8c:	str	r0, [r4, #8]
   19a90:	add	sp, sp, #28
   19a94:	pop	{r4, r5, pc}
   19a98:	movw	r0, #48456	; 0xbd48
   19a9c:	movw	r2, #58480	; 0xe470
   19aa0:	movt	r0, #1
   19aa4:	movt	r2, #1
   19aa8:	mov	r1, #128	; 0x80
   19aac:	b	14a38 <g_log@plt>
   19ab0:	push	{r3, lr}
   19ab4:	ldr	r0, [r0, #16]
   19ab8:	bl	14a68 <g_main_loop_quit@plt>
   19abc:	mov	r0, #0
   19ac0:	pop	{r3, pc}
   19ac4:	push	{r4, r5, r6, r7, r8, lr}
   19ac8:	vpush	{d8-d10}
   19acc:	mov	r8, r0
   19ad0:	sub	sp, sp, #32
   19ad4:	mov	r0, r1
   19ad8:	mov	r4, r1
   19adc:	mov	r7, r2
   19ae0:	mov	r6, r3
   19ae4:	bl	14864 <gtk_print_context_get_width@plt>
   19ae8:	mov	r0, r4
   19aec:	vmov.f64	d9, d0
   19af0:	bl	14e58 <gtk_print_context_get_height@plt>
   19af4:	mov	r0, r4
   19af8:	vmov.f64	d8, d0
   19afc:	bl	14edc <gtk_print_context_get_cairo_context@plt>
   19b00:	ldr	r3, [r6, #4]
   19b04:	add	r1, r6, #24
   19b08:	ldr	r3, [r3]
   19b0c:	mov	r5, r0
   19b10:	ldr	r0, [r3, r7, lsl #2]
   19b14:	bl	1502c <gdk_pixbuf_new_from_file@plt>
   19b18:	subs	r4, r0, #0
   19b1c:	beq	19c1c <g_strcmp0@plt+0x46c8>
   19b20:	mov	r1, #1
   19b24:	mov	r2, #0
   19b28:	bl	14a50 <gdk_cairo_surface_create_from_pixbuf@plt>
   19b2c:	mov	r6, r0
   19b30:	mov	r0, r4
   19b34:	bl	14d8c <gdk_pixbuf_get_width@plt>
   19b38:	vmov	s13, r0
   19b3c:	mov	r0, r4
   19b40:	vcvt.f64.s32	d10, s13
   19b44:	vdiv.f64	d10, d9, d10
   19b48:	bl	14d20 <gdk_pixbuf_get_height@plt>
   19b4c:	vmov	s13, r0
   19b50:	mov	r0, r4
   19b54:	vcvt.f64.s32	d7, s13
   19b58:	vdiv.f64	d7, d8, d7
   19b5c:	vcmpe.f64	d10, d7
   19b60:	vmrs	APSR_nzcv, fpscr
   19b64:	bmi	19c08 <g_strcmp0@plt+0x46b4>
   19b68:	bl	14d20 <gdk_pixbuf_get_height@plt>
   19b6c:	vmov	s13, r0
   19b70:	vcvt.f64.s32	d10, s13
   19b74:	vdiv.f64	d10, d8, d10
   19b78:	mov	r0, r4
   19b7c:	bl	14d8c <gdk_pixbuf_get_width@plt>
   19b80:	mov	r7, r0
   19b84:	mov	r0, r4
   19b88:	bl	14d20 <gdk_pixbuf_get_height@plt>
   19b8c:	str	r0, [sp, #20]
   19b90:	movw	r2, #58504	; 0xe488
   19b94:	movw	r0, #48456	; 0xbd48
   19b98:	vstr	d9, [sp]
   19b9c:	vstr	d8, [sp, #8]
   19ba0:	str	r7, [sp, #16]
   19ba4:	vstr	d10, [sp, #24]
   19ba8:	movt	r0, #1
   19bac:	movt	r2, #1
   19bb0:	mov	r1, #128	; 0x80
   19bb4:	bl	14a38 <g_log@plt>
   19bb8:	mov	r0, r5
   19bbc:	vmov.f64	d0, d10
   19bc0:	vmov.f64	d1, d10
   19bc4:	bl	147e0 <cairo_scale@plt>
   19bc8:	vldr	d0, [pc, #120]	; 19c48 <g_strcmp0@plt+0x46f4>
   19bcc:	mov	r0, r5
   19bd0:	mov	r1, r6
   19bd4:	vmov.f64	d1, d0
   19bd8:	bl	15410 <cairo_set_source_surface@plt>
   19bdc:	mov	r0, r5
   19be0:	bl	152b4 <cairo_paint@plt>
   19be4:	cmp	r6, #0
   19be8:	beq	19bf4 <g_strcmp0@plt+0x46a0>
   19bec:	mov	r0, r6
   19bf0:	bl	14ff0 <cairo_surface_destroy@plt>
   19bf4:	mov	r0, r4
   19bf8:	add	sp, sp, #32
   19bfc:	vpop	{d8-d10}
   19c00:	pop	{r4, r5, r6, r7, r8, lr}
   19c04:	b	151f4 <g_object_unref@plt>
   19c08:	bl	14d8c <gdk_pixbuf_get_width@plt>
   19c0c:	vmov	s15, r0
   19c10:	vcvt.f64.s32	d10, s15
   19c14:	vdiv.f64	d10, d9, d10
   19c18:	b	19b78 <g_strcmp0@plt+0x4624>
   19c1c:	mov	r0, r8
   19c20:	bl	153b0 <gtk_print_operation_cancel@plt>
   19c24:	add	sp, sp, #32
   19c28:	vpop	{d8-d10}
   19c2c:	pop	{r4, r5, r6, r7, r8, pc}
   19c30:	mov	r5, r0
   19c34:	mov	r0, r4
   19c38:	bl	151f4 <g_object_unref@plt>
   19c3c:	mov	r0, r5
   19c40:	bl	1538c <_Unwind_Resume@plt>
   19c44:	nop	{0}
	...
   19c50:	push	{r3, r4, r5, lr}
   19c54:	mov	r5, r0
   19c58:	mov	r0, r1
   19c5c:	mov	r4, r2
   19c60:	bl	14e4c <gtk_print_context_get_page_setup@plt>
   19c64:	ldr	ip, [r4, #8]
   19c68:	ldr	r2, [r4, #12]
   19c6c:	add	r3, r4, #24
   19c70:	mov	r1, r0
   19c74:	ldr	r0, [r4]
   19c78:	blx	ip
   19c7c:	cmp	r0, #0
   19c80:	str	r0, [r4, #4]
   19c84:	beq	19cb8 <g_strcmp0@plt+0x4764>
   19c88:	ldr	r3, [r0, #4]
   19c8c:	mov	r1, #128	; 0x80
   19c90:	movw	r0, #48456	; 0xbd48
   19c94:	movw	r2, #58548	; 0xe4b4
   19c98:	movt	r0, #1
   19c9c:	movt	r2, #1
   19ca0:	bl	14a38 <g_log@plt>
   19ca4:	ldr	r3, [r4, #4]
   19ca8:	mov	r0, r5
   19cac:	ldr	r1, [r3, #4]
   19cb0:	pop	{r3, r4, r5, lr}
   19cb4:	b	14e34 <gtk_print_operation_set_n_pages@plt>
   19cb8:	mov	r0, r5
   19cbc:	pop	{r3, r4, r5, lr}
   19cc0:	b	153b0 <gtk_print_operation_cancel@plt>
   19cc4:	push	{r3, r4, r5, lr}
   19cc8:	mov	r5, r1
   19ccc:	bl	14a8c <gtk_print_operation_get_status@plt>
   19cd0:	mov	r1, #128	; 0x80
   19cd4:	movw	r2, #58568	; 0xe4c8
   19cd8:	movt	r2, #1
   19cdc:	mov	r4, r0
   19ce0:	movw	r0, #48456	; 0xbd48
   19ce4:	mov	r3, r4
   19ce8:	movt	r0, #1
   19cec:	bl	14a38 <g_log@plt>
   19cf0:	movw	ip, #4168	; 0x1048
   19cf4:	movt	ip, #3
   19cf8:	ldr	r0, [r5]
   19cfc:	mov	r2, #0
   19d00:	mov	r3, r4
   19d04:	ldr	r1, [ip, #8]
   19d08:	bl	14bb8 <g_signal_emit@plt>
   19d0c:	cmp	r4, #7
   19d10:	movweq	r0, #48456	; 0xbd48
   19d14:	movweq	r2, #58596	; 0xe4e4
   19d18:	movteq	r0, #1
   19d1c:	movteq	r2, #1
   19d20:	beq	19d50 <g_strcmp0@plt+0x47fc>
   19d24:	cmp	r4, #8
   19d28:	popne	{r3, r4, r5, pc}
   19d2c:	ldr	r2, [r5, #24]
   19d30:	mov	r1, #1
   19d34:	str	r1, [r5, #20]
   19d38:	cmp	r2, #0
   19d3c:	beq	19d6c <g_strcmp0@plt+0x4818>
   19d40:	movw	r0, #48456	; 0xbd48
   19d44:	movw	r2, #58660	; 0xe524
   19d48:	movt	r0, #1
   19d4c:	movt	r2, #1
   19d50:	mov	r1, #128	; 0x80
   19d54:	bl	14a38 <g_log@plt>
   19d58:	mov	r1, r5
   19d5c:	movw	r0, #39600	; 0x9ab0
   19d60:	movt	r0, #1
   19d64:	pop	{r3, r4, r5, lr}
   19d68:	b	14e04 <g_idle_add@plt>
   19d6c:	movw	r3, #58616	; 0xe4f8
   19d70:	add	r0, r5, #24
   19d74:	movt	r3, #1
   19d78:	bl	15434 <g_set_error@plt>
   19d7c:	b	19d40 <g_strcmp0@plt+0x47ec>
   19d80:	push	{r4, r5, lr}
   19d84:	movw	r4, #4168	; 0x1048
   19d88:	dmb	sy
   19d8c:	movt	r4, #3
   19d90:	sub	sp, sp, #20
   19d94:	ldr	r5, [r4, #12]
   19d98:	dmb	sy
   19d9c:	cmp	r5, #0
   19da0:	beq	19db0 <g_strcmp0@plt+0x485c>
   19da4:	ldr	r0, [r4, #12]
   19da8:	add	sp, sp, #20
   19dac:	pop	{r4, r5, pc}
   19db0:	add	r0, r4, #12
   19db4:	bl	14e28 <g_once_init_enter@plt>
   19db8:	cmp	r0, #0
   19dbc:	beq	19da4 <g_strcmp0@plt+0x4850>
   19dc0:	movw	r0, #58680	; 0xe538
   19dc4:	movt	r0, #1
   19dc8:	bl	14ed0 <g_intern_static_string@plt>
   19dcc:	str	r5, [sp, #8]
   19dd0:	mov	r2, #12
   19dd4:	movw	r3, #39384	; 0x99d8
   19dd8:	movt	r3, #1
   19ddc:	stm	sp, {r2, r3}
   19de0:	mov	r2, #72	; 0x48
   19de4:	movw	r3, #39416	; 0x99f8
   19de8:	movt	r3, #1
   19dec:	mov	r1, r0
   19df0:	mov	r0, #80	; 0x50
   19df4:	bl	1484c <g_type_register_static_simple@plt>
   19df8:	mov	r1, #4
   19dfc:	mov	r5, r0
   19e00:	bl	14ffc <g_type_add_instance_private@plt>
   19e04:	mov	r1, r5
   19e08:	mov	r3, r0
   19e0c:	mov	r0, r4
   19e10:	str	r3, [r0], #12
   19e14:	bl	15200 <g_once_init_leave@plt>
   19e18:	b	19da4 <g_strcmp0@plt+0x4850>
   19e1c:	push	{r3, r4, r5, lr}
   19e20:	mov	r5, r0
   19e24:	bl	19d80 <g_strcmp0@plt+0x482c>
   19e28:	movw	r4, #4168	; 0x1048
   19e2c:	movt	r4, #3
   19e30:	mov	r1, r0
   19e34:	mov	r0, r5
   19e38:	bl	149a8 <g_type_check_instance_cast@plt>
   19e3c:	ldr	r3, [r4]
   19e40:	ldr	r0, [r0, r3]
   19e44:	bl	151f4 <g_object_unref@plt>
   19e48:	ldr	r0, [r4, #4]
   19e4c:	mov	r1, #80	; 0x50
   19e50:	bl	15470 <g_type_check_class_cast@plt>
   19e54:	ldr	r3, [r0, #24]
   19e58:	mov	r0, r5
   19e5c:	blx	r3
   19e60:	pop	{r3, r4, r5, pc}
   19e64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19e68:	movw	ip, #4168	; 0x1048
   19e6c:	sub	sp, sp, #8
   19e70:	movt	ip, #3
   19e74:	mov	r6, r0
   19e78:	mov	r0, #28
   19e7c:	mov	r5, r2
   19e80:	mov	sl, r3
   19e84:	ldr	r7, [ip]
   19e88:	mov	r8, r1
   19e8c:	ldr	r9, [sp, #40]	; 0x28
   19e90:	bl	152e4 <g_malloc0@plt>
   19e94:	mov	r4, r0
   19e98:	mov	r0, r6
   19e9c:	bl	14774 <g_object_ref@plt>
   19ea0:	str	r5, [r4, #8]
   19ea4:	str	sl, [r4, #12]
   19ea8:	str	r0, [r4]
   19eac:	mov	r0, #0
   19eb0:	mov	r1, r0
   19eb4:	bl	14d08 <g_main_loop_new@plt>
   19eb8:	str	r0, [r4, #16]
   19ebc:	bl	14ea0 <gtk_print_operation_new@plt>
   19ec0:	ldr	r1, [r6, r7]
   19ec4:	mov	r5, r0
   19ec8:	bl	151dc <gtk_print_operation_set_print_settings@plt>
   19ecc:	mov	r3, #0
   19ed0:	movw	r1, #58692	; 0xe544
   19ed4:	str	r3, [sp]
   19ed8:	movw	r2, #40016	; 0x9c50
   19edc:	str	r3, [sp, #4]
   19ee0:	movt	r1, #1
   19ee4:	mov	r0, r5
   19ee8:	movt	r2, #1
   19eec:	mov	r3, r4
   19ef0:	bl	14e1c <g_signal_connect_data@plt>
   19ef4:	mov	r3, #0
   19ef8:	movw	r1, #58704	; 0xe550
   19efc:	str	r3, [sp]
   19f00:	movw	r2, #39620	; 0x9ac4
   19f04:	str	r3, [sp, #4]
   19f08:	movt	r1, #1
   19f0c:	mov	r0, r5
   19f10:	movt	r2, #1
   19f14:	mov	r3, r4
   19f18:	bl	14e1c <g_signal_connect_data@plt>
   19f1c:	mov	ip, #0
   19f20:	movw	r1, #58464	; 0xe460
   19f24:	movw	r2, #40132	; 0x9cc4
   19f28:	str	ip, [sp]
   19f2c:	movt	r1, #1
   19f30:	str	ip, [sp, #4]
   19f34:	mov	r0, r5
   19f38:	movt	r2, #1
   19f3c:	mov	r3, r4
   19f40:	bl	14e1c <g_signal_connect_data@plt>
   19f44:	mov	ip, #0
   19f48:	movw	r1, #58716	; 0xe55c
   19f4c:	movw	r2, #39576	; 0x9a98
   19f50:	str	ip, [sp]
   19f54:	movt	r1, #1
   19f58:	str	ip, [sp, #4]
   19f5c:	mov	r0, r5
   19f60:	movt	r2, #1
   19f64:	mov	r3, r4
   19f68:	bl	14e1c <g_signal_connect_data@plt>
   19f6c:	mov	r0, r5
   19f70:	mov	r1, #0
   19f74:	bl	14b4c <gtk_print_operation_set_use_full_page@plt>
   19f78:	mov	r0, r5
   19f7c:	mov	r1, #0
   19f80:	bl	14ec4 <gtk_print_operation_set_show_progress@plt>
   19f84:	mov	r0, r5
   19f88:	mov	r1, #0
   19f8c:	bl	15128 <gtk_print_operation_set_support_selection@plt>
   19f90:	mov	r0, r5
   19f94:	mov	r1, #1
   19f98:	bl	1517c <gtk_print_operation_set_track_print_status@plt>
   19f9c:	mov	r0, r5
   19fa0:	mov	r1, #1
   19fa4:	bl	14c60 <gtk_print_operation_set_embed_page_setup@plt>
   19fa8:	mov	r0, r5
   19fac:	mov	r2, r8
   19fb0:	mov	r1, #0
   19fb4:	mov	r3, r9
   19fb8:	bl	153d4 <gtk_print_operation_run@plt>
   19fbc:	cmp	r0, #1
   19fc0:	beq	1a034 <g_strcmp0@plt+0x4ae0>
   19fc4:	cmp	r0, #0
   19fc8:	bne	1a04c <g_strcmp0@plt+0x4af8>
   19fcc:	mov	r6, #0
   19fd0:	ldr	r0, [r4, #4]
   19fd4:	cmp	r0, #0
   19fd8:	beq	19fe0 <g_strcmp0@plt+0x4a8c>
   19fdc:	bl	152d8 <g_ptr_array_unref@plt>
   19fe0:	ldr	r0, [r4]
   19fe4:	cmp	r0, #0
   19fe8:	beq	19ff0 <g_strcmp0@plt+0x4a9c>
   19fec:	bl	151f4 <g_object_unref@plt>
   19ff0:	ldr	r0, [r4, #16]
   19ff4:	cmp	r0, #0
   19ff8:	beq	1a000 <g_strcmp0@plt+0x4aac>
   19ffc:	bl	154a0 <g_main_loop_unref@plt>
   1a000:	ldr	r0, [r4, #24]
   1a004:	cmp	r0, #0
   1a008:	beq	1a010 <g_strcmp0@plt+0x4abc>
   1a00c:	bl	148dc <g_error_free@plt>
   1a010:	mov	r0, r4
   1a014:	bl	14fa8 <g_free@plt>
   1a018:	cmp	r5, #0
   1a01c:	beq	1a028 <g_strcmp0@plt+0x4ad4>
   1a020:	mov	r0, r5
   1a024:	bl	151f4 <g_object_unref@plt>
   1a028:	mov	r0, r6
   1a02c:	add	sp, sp, #8
   1a030:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a034:	ldr	r0, [r6, r7]
   1a038:	bl	151f4 <g_object_unref@plt>
   1a03c:	mov	r0, r5
   1a040:	bl	154dc <gtk_print_operation_get_print_settings@plt>
   1a044:	bl	14774 <g_object_ref@plt>
   1a048:	str	r0, [r6, r7]
   1a04c:	ldr	r0, [r4, #16]
   1a050:	bl	14cc0 <g_main_loop_run@plt>
   1a054:	ldr	r3, [r4, #24]
   1a058:	cmp	r3, #0
   1a05c:	beq	1a078 <g_strcmp0@plt+0x4b24>
   1a060:	mov	r0, r9
   1a064:	ldr	r3, [r3, #8]
   1a068:	mov	r1, #1
   1a06c:	mov	r2, #0
   1a070:	bl	14b04 <g_set_error_literal@plt>
   1a074:	b	19fcc <g_strcmp0@plt+0x4a78>
   1a078:	mov	r6, #1
   1a07c:	b	19fd0 <g_strcmp0@plt+0x4a7c>
   1a080:	cmp	r5, #0
   1a084:	mov	r4, r0
   1a088:	beq	1a094 <g_strcmp0@plt+0x4b40>
   1a08c:	mov	r0, r5
   1a090:	bl	151f4 <g_object_unref@plt>
   1a094:	mov	r0, r4
   1a098:	bl	1538c <_Unwind_Resume@plt>
   1a09c:	push	{r4, lr}
   1a0a0:	bl	19d80 <g_strcmp0@plt+0x482c>
   1a0a4:	mov	r1, #0
   1a0a8:	bl	14750 <g_object_new@plt>
   1a0ac:	mov	r4, r0
   1a0b0:	bl	19d80 <g_strcmp0@plt+0x482c>
   1a0b4:	mov	r1, r0
   1a0b8:	mov	r0, r4
   1a0bc:	pop	{r4, lr}
   1a0c0:	b	149a8 <g_type_check_instance_cast@plt>
   1a0c4:	andeq	r0, r0, r0
   1a0c8:	push	{r4, r5, r6, r7, lr}
   1a0cc:	sub	sp, sp, #12
   1a0d0:	mov	r5, r0
   1a0d4:	bl	152c0 <g_type_class_peek_parent@plt>
   1a0d8:	movw	r1, #4184	; 0x1058
   1a0dc:	movt	r1, #3
   1a0e0:	ldr	r3, [r1, #4]
   1a0e4:	cmp	r3, #0
   1a0e8:	str	r0, [r1]
   1a0ec:	beq	1a0fc <g_strcmp0@plt+0x4ba8>
   1a0f0:	add	r1, r1, #4
   1a0f4:	mov	r0, r5
   1a0f8:	bl	1487c <g_type_class_adjust_private_offset@plt>
   1a0fc:	bl	14978 <gtk_widget_get_type@plt>
   1a100:	mov	r6, #2
   1a104:	mov	r1, r0
   1a108:	mov	r0, r5
   1a10c:	bl	15470 <g_type_check_class_cast@plt>
   1a110:	mov	r1, #80	; 0x50
   1a114:	mov	r7, r0
   1a118:	mov	r0, r5
   1a11c:	bl	15470 <g_type_check_class_cast@plt>
   1a120:	mov	r1, #28
   1a124:	movw	r2, #42208	; 0xa4e0
   1a128:	movw	r3, #42036	; 0xa434
   1a12c:	movt	r2, #1
   1a130:	movt	r3, #1
   1a134:	str	r2, [r7, #144]	; 0x90
   1a138:	movw	r2, #41772	; 0xa32c
   1a13c:	movt	r2, #1
   1a140:	mov	r4, r0
   1a144:	mov	r0, r5
   1a148:	str	r3, [r4, #16]
   1a14c:	movw	r3, #41416	; 0xa1c8
   1a150:	str	r2, [r4, #12]
   1a154:	movt	r3, #1
   1a158:	str	r3, [r4, #24]
   1a15c:	bl	150a4 <g_type_class_add_private@plt>
   1a160:	mov	r1, #0
   1a164:	mov	r2, r1
   1a168:	mov	r3, #3
   1a16c:	movw	r0, #57392	; 0xe030
   1a170:	str	r3, [sp]
   1a174:	movt	r0, #1
   1a178:	mov	r3, #1
   1a17c:	bl	14870 <g_param_spec_boolean@plt>
   1a180:	mov	r1, #1
   1a184:	mov	r2, r0
   1a188:	mov	r0, r4
   1a18c:	bl	15068 <g_object_class_install_property@plt>
   1a190:	bl	14f24 <g_ptr_array_get_type@plt>
   1a194:	mov	r1, #0
   1a198:	mov	r2, r1
   1a19c:	str	r6, [sp]
   1a1a0:	mov	r3, r0
   1a1a4:	movw	r0, #58768	; 0xe590
   1a1a8:	movt	r0, #1
   1a1ac:	bl	15044 <g_param_spec_boxed@plt>
   1a1b0:	mov	r1, r6
   1a1b4:	mov	r2, r0
   1a1b8:	mov	r0, r4
   1a1bc:	add	sp, sp, #12
   1a1c0:	pop	{r4, r5, r6, r7, lr}
   1a1c4:	b	15068 <g_object_class_install_property@plt>
   1a1c8:	ldr	r3, [r0, #20]
   1a1cc:	push	{r4, lr}
   1a1d0:	mov	r4, r0
   1a1d4:	ldr	r0, [r3, #16]
   1a1d8:	bl	151f4 <g_object_unref@plt>
   1a1dc:	ldr	r3, [r4, #20]
   1a1e0:	ldr	r0, [r3, #4]
   1a1e4:	cmp	r0, #0
   1a1e8:	beq	1a1f0 <g_strcmp0@plt+0x4c9c>
   1a1ec:	bl	152d8 <g_ptr_array_unref@plt>
   1a1f0:	movw	r3, #4184	; 0x1058
   1a1f4:	movt	r3, #3
   1a1f8:	mov	r1, #80	; 0x50
   1a1fc:	ldr	r0, [r3]
   1a200:	bl	15470 <g_type_check_class_cast@plt>
   1a204:	ldr	r3, [r0, #24]
   1a208:	mov	r0, r4
   1a20c:	blx	r3
   1a210:	pop	{r4, pc}
   1a214:	push	{r4, r5, r6, lr}
   1a218:	movw	r4, #4184	; 0x1058
   1a21c:	dmb	sy
   1a220:	movt	r4, #3
   1a224:	sub	sp, sp, #16
   1a228:	ldr	r5, [r4, #8]
   1a22c:	dmb	sy
   1a230:	cmp	r5, #0
   1a234:	beq	1a244 <g_strcmp0@plt+0x4cf0>
   1a238:	ldr	r0, [r4, #8]
   1a23c:	add	sp, sp, #16
   1a240:	pop	{r4, r5, r6, pc}
   1a244:	add	r0, r4, #8
   1a248:	bl	14e28 <g_once_init_enter@plt>
   1a24c:	cmp	r0, #0
   1a250:	beq	1a238 <g_strcmp0@plt+0x4ce4>
   1a254:	bl	153bc <gtk_drawing_area_get_type@plt>
   1a258:	mov	r6, r0
   1a25c:	movw	r0, #58776	; 0xe598
   1a260:	movt	r0, #1
   1a264:	bl	14ed0 <g_intern_static_string@plt>
   1a268:	str	r5, [sp, #8]
   1a26c:	mov	r3, #24
   1a270:	movw	r2, #41640	; 0xa2a8
   1a274:	str	r3, [sp]
   1a278:	movt	r2, #1
   1a27c:	movw	r3, #41160	; 0xa0c8
   1a280:	str	r2, [sp, #4]
   1a284:	movt	r3, #1
   1a288:	mov	r2, #428	; 0x1ac
   1a28c:	mov	r1, r0
   1a290:	mov	r0, r6
   1a294:	bl	1484c <g_type_register_static_simple@plt>
   1a298:	mov	r1, r0
   1a29c:	add	r0, r4, #8
   1a2a0:	bl	15200 <g_once_init_leave@plt>
   1a2a4:	b	1a238 <g_strcmp0@plt+0x4ce4>
   1a2a8:	push	{r3, r4, r5, lr}
   1a2ac:	mov	r4, r0
   1a2b0:	bl	1a214 <g_strcmp0@plt+0x4cc0>
   1a2b4:	mov	r1, r0
   1a2b8:	mov	r0, r4
   1a2bc:	bl	14dc8 <g_type_instance_get_private@plt>
   1a2c0:	mov	r2, #1
   1a2c4:	mov	r3, #0
   1a2c8:	str	r0, [r4, #20]
   1a2cc:	stm	r0, {r2, r3}
   1a2d0:	bl	14978 <gtk_widget_get_type@plt>
   1a2d4:	mov	r1, r0
   1a2d8:	mov	r0, r4
   1a2dc:	bl	149a8 <g_type_check_instance_cast@plt>
   1a2e0:	bl	15194 <gtk_widget_get_pango_context@plt>
   1a2e4:	mov	r1, #4
   1a2e8:	mov	r5, r0
   1a2ec:	bl	148c4 <pango_context_set_base_gravity@plt>
   1a2f0:	mov	r0, r5
   1a2f4:	ldr	r5, [r4, #20]
   1a2f8:	bl	1523c <pango_layout_new@plt>
   1a2fc:	str	r0, [r5, #16]
   1a300:	movw	r0, #57464	; 0xe078
   1a304:	movt	r0, #1
   1a308:	bl	15374 <pango_font_description_from_string@plt>
   1a30c:	ldr	r3, [r4, #20]
   1a310:	mov	r5, r0
   1a314:	mov	r1, r0
   1a318:	ldr	r0, [r3, #16]
   1a31c:	bl	154ac <pango_layout_set_font_description@plt>
   1a320:	mov	r0, r5
   1a324:	pop	{r3, r4, r5, lr}
   1a328:	b	14cf0 <pango_font_description_free@plt>
   1a32c:	push	{r4, r5, r6, r7, r8, lr}
   1a330:	sub	sp, sp, #24
   1a334:	mov	r5, r1
   1a338:	mov	r6, r0
   1a33c:	mov	r7, r2
   1a340:	mov	r8, r3
   1a344:	bl	1a214 <g_strcmp0@plt+0x4cc0>
   1a348:	mov	r1, r0
   1a34c:	mov	r0, r6
   1a350:	bl	149a8 <g_type_check_instance_cast@plt>
   1a354:	cmp	r5, #1
   1a358:	mov	r4, r0
   1a35c:	beq	1a420 <g_strcmp0@plt+0x4ecc>
   1a360:	cmp	r5, #2
   1a364:	bne	1a394 <g_strcmp0@plt+0x4e40>
   1a368:	ldr	r5, [r0, #20]
   1a36c:	ldr	r0, [r5, #4]
   1a370:	cmp	r0, #0
   1a374:	beq	1a380 <g_strcmp0@plt+0x4e2c>
   1a378:	bl	152d8 <g_ptr_array_unref@plt>
   1a37c:	ldr	r5, [r4, #20]
   1a380:	mov	r0, r7
   1a384:	bl	15488 <g_value_get_boxed@plt>
   1a388:	bl	15368 <g_ptr_array_ref@plt>
   1a38c:	str	r0, [r5, #4]
   1a390:	b	1a3f0 <g_strcmp0@plt+0x4e9c>
   1a394:	ldm	r8, {r3, r8}
   1a398:	ldr	r0, [r3]
   1a39c:	bl	14a5c <g_type_name@plt>
   1a3a0:	ldr	r3, [r6]
   1a3a4:	mov	r7, r0
   1a3a8:	ldr	r0, [r3]
   1a3ac:	bl	14a5c <g_type_name@plt>
   1a3b0:	mov	r2, #86	; 0x56
   1a3b4:	movw	r3, #57552	; 0xe0d0
   1a3b8:	str	r8, [sp, #12]
   1a3bc:	movt	r3, #1
   1a3c0:	str	r7, [sp, #16]
   1a3c4:	stm	sp, {r2, r3}
   1a3c8:	mov	r1, #16
   1a3cc:	movw	r2, #57472	; 0xe080
   1a3d0:	movw	r3, #58792	; 0xe5a8
   1a3d4:	str	r5, [sp, #8]
   1a3d8:	movt	r2, #1
   1a3dc:	movt	r3, #1
   1a3e0:	str	r0, [sp, #20]
   1a3e4:	movw	r0, #48456	; 0xbd48
   1a3e8:	movt	r0, #1
   1a3ec:	bl	14a38 <g_log@plt>
   1a3f0:	bl	14978 <gtk_widget_get_type@plt>
   1a3f4:	mov	r5, r0
   1a3f8:	mov	r0, r4
   1a3fc:	mov	r1, r5
   1a400:	bl	149a8 <g_type_check_instance_cast@plt>
   1a404:	bl	14a08 <gtk_widget_hide@plt>
   1a408:	mov	r0, r4
   1a40c:	mov	r1, r5
   1a410:	bl	149a8 <g_type_check_instance_cast@plt>
   1a414:	add	sp, sp, #24
   1a418:	pop	{r4, r5, r6, r7, r8, lr}
   1a41c:	b	151e8 <gtk_widget_show@plt>
   1a420:	mov	r0, r7
   1a424:	ldr	r5, [r4, #20]
   1a428:	bl	14dbc <g_value_get_boolean@plt>
   1a42c:	str	r0, [r5]
   1a430:	b	1a3f0 <g_strcmp0@plt+0x4e9c>
   1a434:	push	{r4, r5, r6, r7, lr}
   1a438:	sub	sp, sp, #28
   1a43c:	mov	r4, r1
   1a440:	mov	r5, r0
   1a444:	mov	r7, r2
   1a448:	mov	r6, r3
   1a44c:	bl	1a214 <g_strcmp0@plt+0x4cc0>
   1a450:	mov	r1, r0
   1a454:	mov	r0, r5
   1a458:	bl	149a8 <g_type_check_instance_cast@plt>
   1a45c:	cmp	r4, #1
   1a460:	beq	1a4c8 <g_strcmp0@plt+0x4f74>
   1a464:	ldm	r6, {r3, r7}
   1a468:	ldr	r0, [r3]
   1a46c:	bl	14a5c <g_type_name@plt>
   1a470:	ldr	r3, [r5]
   1a474:	mov	r6, r0
   1a478:	ldr	r0, [r3]
   1a47c:	bl	14a5c <g_type_name@plt>
   1a480:	str	r7, [sp, #12]
   1a484:	str	r6, [sp, #16]
   1a488:	mov	r2, #66	; 0x42
   1a48c:	str	r4, [sp, #8]
   1a490:	mov	r1, #16
   1a494:	movw	r3, #57552	; 0xe0d0
   1a498:	movt	r3, #1
   1a49c:	stm	sp, {r2, r3}
   1a4a0:	movw	r2, #57472	; 0xe080
   1a4a4:	movw	r3, #58792	; 0xe5a8
   1a4a8:	movt	r2, #1
   1a4ac:	movt	r3, #1
   1a4b0:	str	r0, [sp, #20]
   1a4b4:	movw	r0, #48456	; 0xbd48
   1a4b8:	movt	r0, #1
   1a4bc:	bl	14a38 <g_log@plt>
   1a4c0:	add	sp, sp, #28
   1a4c4:	pop	{r4, r5, r6, r7, pc}
   1a4c8:	ldr	r3, [r0, #20]
   1a4cc:	mov	r0, r7
   1a4d0:	ldr	r1, [r3]
   1a4d4:	add	sp, sp, #28
   1a4d8:	pop	{r4, r5, r6, r7, lr}
   1a4dc:	b	14d74 <g_value_set_boolean@plt>
   1a4e0:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a4e4:	vpush	{d8-d12}
   1a4e8:	movw	r7, #4120	; 0x1018
   1a4ec:	movt	r7, #3
   1a4f0:	sub	sp, sp, #44	; 0x2c
   1a4f4:	subs	r5, r0, #0
   1a4f8:	mov	r4, r1
   1a4fc:	ldr	r3, [r7]
   1a500:	str	r3, [sp, #36]	; 0x24
   1a504:	beq	1aaf8 <g_strcmp0@plt+0x55a4>
   1a508:	bl	1a214 <g_strcmp0@plt+0x4cc0>
   1a50c:	ldr	r3, [r5]
   1a510:	cmp	r3, #0
   1a514:	beq	1a524 <g_strcmp0@plt+0x4fd0>
   1a518:	ldr	r3, [r3]
   1a51c:	cmp	r0, r3
   1a520:	beq	1a570 <g_strcmp0@plt+0x501c>
   1a524:	mov	r1, r0
   1a528:	mov	r0, r5
   1a52c:	bl	150f8 <g_type_check_instance_is_a@plt>
   1a530:	cmp	r0, #0
   1a534:	bne	1a570 <g_strcmp0@plt+0x501c>
   1a538:	movw	r0, #48456	; 0xbd48
   1a53c:	movw	r2, #58828	; 0xe5cc
   1a540:	movt	r0, #1
   1a544:	movt	r2, #1
   1a548:	ldr	r1, [pc, #904]	; 1a8d8 <g_strcmp0@plt+0x5384>
   1a54c:	bl	1481c <g_return_if_fail_warning@plt>
   1a550:	ldr	r2, [sp, #36]	; 0x24
   1a554:	mov	r0, #0
   1a558:	ldr	r3, [r7]
   1a55c:	cmp	r2, r3
   1a560:	bne	1abdc <g_strcmp0@plt+0x5688>
   1a564:	add	sp, sp, #44	; 0x2c
   1a568:	vpop	{d8-d12}
   1a56c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a570:	mov	r0, r4
   1a574:	mov	r9, #1
   1a578:	bl	14b94 <cairo_save@plt>
   1a57c:	add	r1, sp, #20
   1a580:	mov	r0, r5
   1a584:	bl	14dec <gtk_widget_get_allocation@plt>
   1a588:	ldr	r6, [sp, #32]
   1a58c:	ldr	r8, [sp, #28]
   1a590:	vldr	d0, [pc, #808]	; 1a8c0 <g_strcmp0@plt+0x536c>
   1a594:	ldr	r3, [r5, #20]
   1a598:	vmov.f64	d1, d0
   1a59c:	vmov	s14, r6
   1a5a0:	mov	r0, r4
   1a5a4:	vmov	s13, r8
   1a5a8:	str	r6, [r3, #12]
   1a5ac:	sub	r6, r6, #1
   1a5b0:	str	r8, [r3, #8]
   1a5b4:	vcvt.f64.s32	d3, s14
   1a5b8:	str	r9, [r3, #20]
   1a5bc:	sub	r8, r8, #1
   1a5c0:	str	r9, [r3, #24]
   1a5c4:	vcvt.f64.s32	d2, s13
   1a5c8:	bl	14ac8 <cairo_rectangle@plt>
   1a5cc:	mov	r0, r4
   1a5d0:	vmov.f64	d0, #112	; 0x3f800000  1.0
   1a5d4:	vmov.f64	d2, d0
   1a5d8:	vmov.f64	d1, d0
   1a5dc:	bl	14bac <cairo_set_source_rgb@plt>
   1a5e0:	mov	r0, r4
   1a5e4:	bl	15464 <cairo_fill@plt>
   1a5e8:	vmov	s6, r6
   1a5ec:	vmov	s4, r8
   1a5f0:	mov	r0, r4
   1a5f4:	vmov.f64	d0, #96	; 0x3f000000  0.5
   1a5f8:	vcvt.f64.s32	d3, s6
   1a5fc:	vmov.f64	d1, d0
   1a600:	vcvt.f64.s32	d2, s4
   1a604:	bl	14ac8 <cairo_rectangle@plt>
   1a608:	vldr	d0, [pc, #696]	; 1a8c8 <g_strcmp0@plt+0x5374>
   1a60c:	mov	r0, r4
   1a610:	vmov.f64	d1, d0
   1a614:	vmov.f64	d2, d0
   1a618:	bl	14bac <cairo_set_source_rgb@plt>
   1a61c:	mov	r0, r4
   1a620:	vmov.f64	d0, #112	; 0x3f800000  1.0
   1a624:	bl	147a4 <cairo_set_line_width@plt>
   1a628:	mov	r0, r4
   1a62c:	bl	153ec <cairo_stroke@plt>
   1a630:	ldr	r6, [r5, #20]
   1a634:	ldr	r3, [r6]
   1a638:	cmp	r3, #0
   1a63c:	bne	1a9c0 <g_strcmp0@plt+0x546c>
   1a640:	ldr	r3, [r6, #4]
   1a644:	cmp	r3, #0
   1a648:	beq	1a9b4 <g_strcmp0@plt+0x5460>
   1a64c:	vldr	s14, [r6, #8]
   1a650:	vcvt.f32.u32	s18, s14
   1a654:	vldr	s15, [pc, #628]	; 1a8d0 <g_strcmp0@plt+0x537c>
   1a658:	mov	r0, r4
   1a65c:	vldr	s22, [r3, #4]
   1a660:	vdiv.f32	s18, s18, s15
   1a664:	bl	14b94 <cairo_save@plt>
   1a668:	mov	r0, r4
   1a66c:	vmov.f32	s24, #112	; 0x3f800000  1.0
   1a670:	vadd.f32	s20, s18, s24
   1a674:	vcvt.f64.f32	d10, s20
   1a678:	vcvt.f32.u32	s22, s22
   1a67c:	vmov.f64	d0, d10
   1a680:	bl	147a4 <cairo_set_line_width@plt>
   1a684:	vldr	d1, [pc, #564]	; 1a8c0 <g_strcmp0@plt+0x536c>
   1a688:	mov	r0, r4
   1a68c:	vmov.f64	d0, #96	; 0x3f000000  0.5
   1a690:	vmov.f64	d2, d1
   1a694:	bl	14bac <cairo_set_source_rgb@plt>
   1a698:	vcmpe.f32	s22, #0.0
   1a69c:	vmrs	APSR_nzcv, fpscr
   1a6a0:	ble	1ab14 <g_strcmp0@plt+0x55c0>
   1a6a4:	vsub.f32	s23, s22, s24
   1a6a8:	vldr	s19, [pc, #548]	; 1a8d4 <g_strcmp0@plt+0x5380>
   1a6ac:	vmov.f64	d8, #112	; 0x3f800000  1.0
   1a6b0:	b	1a6c8 <g_strcmp0@plt+0x5174>
   1a6b4:	bl	149d8 <cairo_move_to@plt>
   1a6b8:	vadd.f32	s19, s19, s24
   1a6bc:	vcmpe.f32	s22, s19
   1a6c0:	vmrs	APSR_nzcv, fpscr
   1a6c4:	ble	1a758 <g_strcmp0@plt+0x5204>
   1a6c8:	vcvt.u32.f32	s15, s19
   1a6cc:	ldr	r3, [r5, #20]
   1a6d0:	vldr	s8, [r3, #24]
   1a6d4:	vldr	s0, [r3, #20]
   1a6d8:	ldr	r2, [r6, #4]
   1a6dc:	ldr	r0, [r3, #12]
   1a6e0:	ldr	r1, [r3, #8]
   1a6e4:	ldr	r2, [r2]
   1a6e8:	sub	r0, r0, #1
   1a6ec:	sub	r1, r1, #1
   1a6f0:	vmov	r3, s15
   1a6f4:	vmov	s11, r0
   1a6f8:	mov	r0, r4
   1a6fc:	vdiv.f32	s10, s19, s23
   1a700:	ldr	r3, [r2, r3, lsl #2]
   1a704:	vldr	d3, [r3]
   1a708:	vcvt.f32.f64	s6, d3
   1a70c:	vcvt.f64.u32	d7, s11
   1a710:	vmov	s11, r1
   1a714:	vcvt.f64.f32	d3, s6
   1a718:	vmls.f64	d7, d3, d7
   1a71c:	vcvt.f64.u32	d4, s8
   1a720:	vsub.f64	d1, d7, d4
   1a724:	vcvt.f64.u32	d6, s11
   1a728:	vcvt.f64.u32	d0, s0
   1a72c:	vcvt.f64.f32	d5, s10
   1a730:	vcmp.f32	s19, #0.0
   1a734:	vmla.f64	d0, d5, d6
   1a738:	vmrs	APSR_nzcv, fpscr
   1a73c:	vadd.f64	d1, d1, d8
   1a740:	beq	1a6b4 <g_strcmp0@plt+0x5160>
   1a744:	bl	14fb4 <cairo_line_to@plt>
   1a748:	vadd.f32	s19, s19, s24
   1a74c:	vcmpe.f32	s22, s19
   1a750:	vmrs	APSR_nzcv, fpscr
   1a754:	bgt	1a6c8 <g_strcmp0@plt+0x5174>
   1a758:	mov	r0, r4
   1a75c:	bl	14e94 <cairo_stroke_preserve@plt>
   1a760:	vcvt.f64.f32	d9, s18
   1a764:	mov	r0, r4
   1a768:	vmov.f64	d0, d9
   1a76c:	bl	147a4 <cairo_set_line_width@plt>
   1a770:	vldr	d1, [pc, #328]	; 1a8c0 <g_strcmp0@plt+0x536c>
   1a774:	mov	r0, r4
   1a778:	vmov.f64	d2, d1
   1a77c:	vmov.f64	d0, #112	; 0x3f800000  1.0
   1a780:	bl	14bac <cairo_set_source_rgb@plt>
   1a784:	mov	r0, r4
   1a788:	bl	153ec <cairo_stroke@plt>
   1a78c:	mov	r0, r4
   1a790:	vmov.f64	d0, d10
   1a794:	bl	147a4 <cairo_set_line_width@plt>
   1a798:	vldr	d0, [pc, #288]	; 1a8c0 <g_strcmp0@plt+0x536c>
   1a79c:	mov	r0, r4
   1a7a0:	vmov.f64	d1, #96	; 0x3f000000  0.5
   1a7a4:	vmov.f64	d2, d0
   1a7a8:	bl	14bac <cairo_set_source_rgb@plt>
   1a7ac:	vldr	s24, [pc, #288]	; 1a8d4 <g_strcmp0@plt+0x5380>
   1a7b0:	vmov.f64	d8, #112	; 0x3f800000  1.0
   1a7b4:	vmov.f32	s25, #112	; 0x3f800000  1.0
   1a7b8:	b	1a7d0 <g_strcmp0@plt+0x527c>
   1a7bc:	bl	149d8 <cairo_move_to@plt>
   1a7c0:	vadd.f32	s24, s24, s25
   1a7c4:	vcmpe.f32	s22, s24
   1a7c8:	vmrs	APSR_nzcv, fpscr
   1a7cc:	ble	1a860 <g_strcmp0@plt+0x530c>
   1a7d0:	ldr	r3, [r5, #20]
   1a7d4:	vcvt.u32.f32	s13, s24
   1a7d8:	ldr	r2, [r6, #4]
   1a7dc:	vldr	s8, [r3, #24]
   1a7e0:	vldr	s0, [r3, #20]
   1a7e4:	ldr	r0, [r3, #12]
   1a7e8:	ldr	r1, [r2]
   1a7ec:	sub	r0, r0, #1
   1a7f0:	ldr	r2, [r3, #8]
   1a7f4:	vmov	s14, r0
   1a7f8:	sub	r2, r2, #1
   1a7fc:	vmov	r0, s13
   1a800:	vdiv.f32	s10, s24, s23
   1a804:	vmov	s11, r2
   1a808:	ldr	r1, [r1, r0, lsl #2]
   1a80c:	vldr	d3, [r1, #8]
   1a810:	mov	r0, r4
   1a814:	vcvt.f32.f64	s6, d3
   1a818:	vcvt.f64.u32	d7, s14
   1a81c:	vcvt.f64.f32	d3, s6
   1a820:	vmls.f64	d7, d3, d7
   1a824:	vcvt.f64.u32	d4, s8
   1a828:	vsub.f64	d1, d7, d4
   1a82c:	vcvt.f64.u32	d6, s11
   1a830:	vcvt.f64.u32	d0, s0
   1a834:	vcvt.f64.f32	d5, s10
   1a838:	vcmp.f32	s24, #0.0
   1a83c:	vmla.f64	d0, d5, d6
   1a840:	vmrs	APSR_nzcv, fpscr
   1a844:	vsub.f64	d1, d1, d8
   1a848:	beq	1a7bc <g_strcmp0@plt+0x5268>
   1a84c:	bl	14fb4 <cairo_line_to@plt>
   1a850:	vadd.f32	s24, s24, s25
   1a854:	vcmpe.f32	s22, s24
   1a858:	vmrs	APSR_nzcv, fpscr
   1a85c:	bgt	1a7d0 <g_strcmp0@plt+0x527c>
   1a860:	mov	r0, r4
   1a864:	bl	14e94 <cairo_stroke_preserve@plt>
   1a868:	mov	r0, r4
   1a86c:	vmov.f64	d0, d9
   1a870:	bl	147a4 <cairo_set_line_width@plt>
   1a874:	vldr	d0, [pc, #68]	; 1a8c0 <g_strcmp0@plt+0x536c>
   1a878:	mov	r0, r4
   1a87c:	vmov.f64	d2, d0
   1a880:	vmov.f64	d1, #112	; 0x3f800000  1.0
   1a884:	bl	14bac <cairo_set_source_rgb@plt>
   1a888:	mov	r0, r4
   1a88c:	bl	153ec <cairo_stroke@plt>
   1a890:	mov	r0, r4
   1a894:	vmov.f64	d0, d10
   1a898:	bl	147a4 <cairo_set_line_width@plt>
   1a89c:	vldr	d0, [pc, #28]	; 1a8c0 <g_strcmp0@plt+0x536c>
   1a8a0:	mov	r0, r4
   1a8a4:	vmov.f64	d2, #96	; 0x3f000000  0.5
   1a8a8:	vmov.f64	d1, d0
   1a8ac:	bl	14bac <cairo_set_source_rgb@plt>
   1a8b0:	vldr	s16, [pc, #28]	; 1a8d4 <g_strcmp0@plt+0x5380>
   1a8b4:	vmov.f32	s17, #112	; 0x3f800000  1.0
   1a8b8:	b	1a8f0 <g_strcmp0@plt+0x539c>
   1a8bc:	nop	{0}
	...
   1a8c8:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   1a8cc:	svccc	0x00b99999
   1a8d0:	cmnmi	sl, #0
   1a8d4:	andeq	r0, r0, r0
   1a8d8:	andeq	lr, r1, r8, ror r5
   1a8dc:	bl	149d8 <cairo_move_to@plt>
   1a8e0:	vadd.f32	s16, s16, s17
   1a8e4:	vcmpe.f32	s22, s16
   1a8e8:	vmrs	APSR_nzcv, fpscr
   1a8ec:	ble	1a97c <g_strcmp0@plt+0x5428>
   1a8f0:	ldr	r3, [r5, #20]
   1a8f4:	vcvt.u32.f32	s13, s16
   1a8f8:	ldr	r2, [r6, #4]
   1a8fc:	vldr	s2, [r3, #24]
   1a900:	vldr	s0, [r3, #20]
   1a904:	ldr	r0, [r3, #12]
   1a908:	ldr	r1, [r2]
   1a90c:	sub	r0, r0, #1
   1a910:	ldr	r2, [r3, #8]
   1a914:	vmov	s14, r0
   1a918:	sub	r2, r2, #1
   1a91c:	vmov	r0, s13
   1a920:	vdiv.f32	s10, s16, s23
   1a924:	vmov	s11, r2
   1a928:	ldr	r1, [r1, r0, lsl #2]
   1a92c:	vldr	d4, [r1, #16]
   1a930:	mov	r0, r4
   1a934:	vcvt.f32.f64	s8, d4
   1a938:	vcvt.f64.u32	d7, s14
   1a93c:	vcvt.f64.f32	d4, s8
   1a940:	vmls.f64	d7, d4, d7
   1a944:	vcvt.f64.u32	d6, s11
   1a948:	vcvt.f64.u32	d1, s2
   1a94c:	vcvt.f64.u32	d0, s0
   1a950:	vcvt.f64.f32	d5, s10
   1a954:	vcmp.f32	s16, #0.0
   1a958:	vsub.f64	d1, d7, d1
   1a95c:	vmrs	APSR_nzcv, fpscr
   1a960:	vmla.f64	d0, d5, d6
   1a964:	beq	1a8dc <g_strcmp0@plt+0x5388>
   1a968:	bl	14fb4 <cairo_line_to@plt>
   1a96c:	vadd.f32	s16, s16, s17
   1a970:	vcmpe.f32	s22, s16
   1a974:	vmrs	APSR_nzcv, fpscr
   1a978:	bgt	1a8f0 <g_strcmp0@plt+0x539c>
   1a97c:	mov	r0, r4
   1a980:	bl	14e94 <cairo_stroke_preserve@plt>
   1a984:	mov	r0, r4
   1a988:	vmov.f64	d0, d9
   1a98c:	bl	147a4 <cairo_set_line_width@plt>
   1a990:	vldr	d0, [pc, #584]	; 1abe0 <g_strcmp0@plt+0x568c>
   1a994:	mov	r0, r4
   1a998:	vmov.f64	d2, #112	; 0x3f800000  1.0
   1a99c:	vmov.f64	d1, d0
   1a9a0:	bl	14bac <cairo_set_source_rgb@plt>
   1a9a4:	mov	r0, r4
   1a9a8:	bl	153ec <cairo_stroke@plt>
   1a9ac:	mov	r0, r4
   1a9b0:	bl	15284 <cairo_restore@plt>
   1a9b4:	mov	r0, r4
   1a9b8:	bl	15284 <cairo_restore@plt>
   1a9bc:	b	1a550 <g_strcmp0@plt+0x4ffc>
   1a9c0:	vmov.f64	d7, #36	; 0x41200000  10.0
   1a9c4:	movw	r3, #58728	; 0xe568
   1a9c8:	movt	r3, #1
   1a9cc:	vldr	s20, [r6, #8]
   1a9d0:	vldr	s18, [r6, #12]
   1a9d4:	mov	r6, r9
   1a9d8:	ldm	r3, {r0, r1, r2, r3}
   1a9dc:	stm	sp, {r0, r1, r2, r3}
   1a9e0:	mov	r0, r4
   1a9e4:	vcvt.f64.u32	d10, s20
   1a9e8:	vcvt.f64.u32	d9, s18
   1a9ec:	vdiv.f64	d10, d10, d7
   1a9f0:	vdiv.f64	d9, d9, d7
   1a9f4:	bl	14b94 <cairo_save@plt>
   1a9f8:	mov	r0, r4
   1a9fc:	vmov.f64	d0, #112	; 0x3f800000  1.0
   1aa00:	bl	147a4 <cairo_set_line_width@plt>
   1aa04:	mov	r0, r4
   1aa08:	mov	r1, sp
   1aa0c:	mov	r2, #2
   1aa10:	vldr	d0, [pc, #456]	; 1abe0 <g_strcmp0@plt+0x568c>
   1aa14:	bl	15500 <cairo_set_dash@plt>
   1aa18:	vldr	d0, [pc, #456]	; 1abe8 <g_strcmp0@plt+0x5694>
   1aa1c:	mov	r0, r4
   1aa20:	vmov.f64	d1, d0
   1aa24:	vmov.f64	d2, d0
   1aa28:	bl	14bac <cairo_set_source_rgb@plt>
   1aa2c:	vmov.f32	s22, #96	; 0x3f000000  0.5
   1aa30:	vmov	s11, r6
   1aa34:	vldr	d1, [pc, #420]	; 1abe0 <g_strcmp0@plt+0x568c>
   1aa38:	mov	r0, r4
   1aa3c:	add	r6, r6, #1
   1aa40:	vcvt.f64.s32	d8, s11
   1aa44:	vmul.f64	d8, d10, d8
   1aa48:	vcvt.s32.f64	s16, d8
   1aa4c:	vcvt.f32.s32	s16, s16
   1aa50:	vadd.f32	s16, s16, s22
   1aa54:	vcvt.f64.f32	d8, s16
   1aa58:	vmov.f64	d0, d8
   1aa5c:	bl	149d8 <cairo_move_to@plt>
   1aa60:	ldr	r3, [r5, #20]
   1aa64:	mov	r0, r4
   1aa68:	vldr	s2, [r3, #12]
   1aa6c:	vmov.f64	d0, d8
   1aa70:	vcvt.f64.u32	d1, s2
   1aa74:	bl	14fb4 <cairo_line_to@plt>
   1aa78:	mov	r0, r4
   1aa7c:	bl	153ec <cairo_stroke@plt>
   1aa80:	cmp	r6, #10
   1aa84:	bne	1aa30 <g_strcmp0@plt+0x54dc>
   1aa88:	mov	r6, #1
   1aa8c:	vmov.f32	s20, #96	; 0x3f000000  0.5
   1aa90:	vmov	s13, r6
   1aa94:	vldr	d0, [pc, #324]	; 1abe0 <g_strcmp0@plt+0x568c>
   1aa98:	mov	r0, r4
   1aa9c:	add	r6, r6, #1
   1aaa0:	vcvt.f64.s32	d8, s13
   1aaa4:	vmul.f64	d8, d9, d8
   1aaa8:	vcvt.s32.f64	s16, d8
   1aaac:	vcvt.f32.s32	s16, s16
   1aab0:	vadd.f32	s16, s16, s20
   1aab4:	vcvt.f64.f32	d8, s16
   1aab8:	vmov.f64	d1, d8
   1aabc:	bl	149d8 <cairo_move_to@plt>
   1aac0:	ldr	r3, [r5, #20]
   1aac4:	mov	r0, r4
   1aac8:	vldr	s0, [r3, #8]
   1aacc:	vmov.f64	d1, d8
   1aad0:	vcvt.f64.u32	d0, s0
   1aad4:	bl	14fb4 <cairo_line_to@plt>
   1aad8:	mov	r0, r4
   1aadc:	bl	153ec <cairo_stroke@plt>
   1aae0:	cmp	r6, #10
   1aae4:	bne	1aa90 <g_strcmp0@plt+0x553c>
   1aae8:	mov	r0, r4
   1aaec:	bl	15284 <cairo_restore@plt>
   1aaf0:	ldr	r6, [r5, #20]
   1aaf4:	b	1a640 <g_strcmp0@plt+0x50ec>
   1aaf8:	movw	r0, #48456	; 0xbd48
   1aafc:	movw	r2, #58816	; 0xe5c0
   1ab00:	movt	r0, #1
   1ab04:	movt	r2, #1
   1ab08:	ldr	r1, [pc, #224]	; 1abf0 <g_strcmp0@plt+0x569c>
   1ab0c:	bl	1481c <g_return_if_fail_warning@plt>
   1ab10:	b	1a550 <g_strcmp0@plt+0x4ffc>
   1ab14:	mov	r0, r4
   1ab18:	bl	14e94 <cairo_stroke_preserve@plt>
   1ab1c:	vcvt.f64.f32	d9, s18
   1ab20:	mov	r0, r4
   1ab24:	vmov.f64	d0, d9
   1ab28:	bl	147a4 <cairo_set_line_width@plt>
   1ab2c:	vldr	d1, [pc, #172]	; 1abe0 <g_strcmp0@plt+0x568c>
   1ab30:	mov	r0, r4
   1ab34:	vmov.f64	d2, d1
   1ab38:	vmov.f64	d0, #112	; 0x3f800000  1.0
   1ab3c:	bl	14bac <cairo_set_source_rgb@plt>
   1ab40:	mov	r0, r4
   1ab44:	bl	153ec <cairo_stroke@plt>
   1ab48:	mov	r0, r4
   1ab4c:	vmov.f64	d0, d10
   1ab50:	bl	147a4 <cairo_set_line_width@plt>
   1ab54:	vldr	d0, [pc, #132]	; 1abe0 <g_strcmp0@plt+0x568c>
   1ab58:	mov	r0, r4
   1ab5c:	vmov.f64	d1, #96	; 0x3f000000  0.5
   1ab60:	vmov.f64	d2, d0
   1ab64:	bl	14bac <cairo_set_source_rgb@plt>
   1ab68:	vcmpe.f32	s22, #0.0
   1ab6c:	vmrs	APSR_nzcv, fpscr
   1ab70:	vsubgt.f32	s23, s22, s24
   1ab74:	bgt	1a7ac <g_strcmp0@plt+0x5258>
   1ab78:	mov	r0, r4
   1ab7c:	bl	14e94 <cairo_stroke_preserve@plt>
   1ab80:	mov	r0, r4
   1ab84:	vmov.f64	d0, d9
   1ab88:	bl	147a4 <cairo_set_line_width@plt>
   1ab8c:	vldr	d0, [pc, #76]	; 1abe0 <g_strcmp0@plt+0x568c>
   1ab90:	mov	r0, r4
   1ab94:	vmov.f64	d2, d0
   1ab98:	vmov.f64	d1, #112	; 0x3f800000  1.0
   1ab9c:	bl	14bac <cairo_set_source_rgb@plt>
   1aba0:	mov	r0, r4
   1aba4:	bl	153ec <cairo_stroke@plt>
   1aba8:	mov	r0, r4
   1abac:	vmov.f64	d0, d10
   1abb0:	bl	147a4 <cairo_set_line_width@plt>
   1abb4:	vldr	d0, [pc, #36]	; 1abe0 <g_strcmp0@plt+0x568c>
   1abb8:	mov	r0, r4
   1abbc:	vmov.f64	d2, #96	; 0x3f000000  0.5
   1abc0:	vmov.f64	d1, d0
   1abc4:	bl	14bac <cairo_set_source_rgb@plt>
   1abc8:	vcmpe.f32	s22, #0.0
   1abcc:	vmrs	APSR_nzcv, fpscr
   1abd0:	vsubgt.f32	s23, s22, s24
   1abd4:	ble	1a97c <g_strcmp0@plt+0x5428>
   1abd8:	b	1a8b0 <g_strcmp0@plt+0x535c>
   1abdc:	bl	14f3c <__stack_chk_fail@plt>
	...
   1abe8:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   1abec:	svccc	0x00b99999
   1abf0:	andeq	lr, r1, r8, ror r5
   1abf4:	push	{r3, lr}
   1abf8:	bl	1a214 <g_strcmp0@plt+0x4cc0>
   1abfc:	mov	r1, #0
   1ac00:	pop	{r3, lr}
   1ac04:	b	14750 <g_object_new@plt>
   1ac08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ac0c:	mvn	r1, #0
   1ac10:	bl	15314 <g_markup_escape_text@plt>
   1ac14:	mov	r9, r0
   1ac18:	movw	r0, #57780	; 0xe1b4
   1ac1c:	movt	r0, #1
   1ac20:	bl	14984 <g_string_new@plt>
   1ac24:	mov	r4, #0
   1ac28:	mov	r8, r0
   1ac2c:	mov	r5, r9
   1ac30:	mov	r6, r4
   1ac34:	b	1ac4c <g_strcmp0@plt+0x56f8>
   1ac38:	ldrb	r3, [r7]
   1ac3c:	add	r5, r5, #1
   1ac40:	cmp	r3, #0
   1ac44:	beq	1ad00 <g_strcmp0@plt+0x57ac>
   1ac48:	add	r6, r6, #1
   1ac4c:	movw	r1, #59068	; 0xe6bc
   1ac50:	mov	r0, r5
   1ac54:	movt	r1, #1
   1ac58:	mov	r7, r5
   1ac5c:	bl	14dd4 <g_str_has_prefix@plt>
   1ac60:	cmp	r0, #0
   1ac64:	beq	1ac38 <g_strcmp0@plt+0x56e4>
   1ac68:	mov	r0, r8
   1ac6c:	add	r1, r9, r4
   1ac70:	rsb	r2, r4, r6
   1ac74:	bl	14a20 <g_string_append_len@plt>
   1ac78:	ldrb	r3, [r9, r6]
   1ac7c:	tst	r3, #223	; 0xdf
   1ac80:	movne	r3, r5
   1ac84:	movne	r4, r6
   1ac88:	beq	1ad30 <g_strcmp0@plt+0x57dc>
   1ac8c:	ldrb	ip, [r3, #1]!
   1ac90:	add	r4, r4, #1
   1ac94:	tst	ip, #223	; 0xdf
   1ac98:	bne	1ac8c <g_strcmp0@plt+0x5738>
   1ac9c:	movw	r1, #59076	; 0xe6c4
   1aca0:	mov	r0, r8
   1aca4:	movt	r1, #1
   1aca8:	bl	15398 <g_string_append@plt>
   1acac:	rsb	sl, r6, r4
   1acb0:	mov	r0, r8
   1acb4:	mov	r1, r5
   1acb8:	mov	r2, sl
   1acbc:	bl	14a20 <g_string_append_len@plt>
   1acc0:	movw	r1, #59088	; 0xe6d0
   1acc4:	mov	r0, r8
   1acc8:	movt	r1, #1
   1accc:	bl	15398 <g_string_append@plt>
   1acd0:	mov	r0, r8
   1acd4:	mov	r1, r5
   1acd8:	mov	r2, sl
   1acdc:	bl	14a20 <g_string_append_len@plt>
   1ace0:	movw	r1, #59092	; 0xe6d4
   1ace4:	mov	r0, r8
   1ace8:	movt	r1, #1
   1acec:	bl	15398 <g_string_append@plt>
   1acf0:	ldrb	r3, [r7]
   1acf4:	add	r5, r5, #1
   1acf8:	cmp	r3, #0
   1acfc:	bne	1ac48 <g_strcmp0@plt+0x56f4>
   1ad00:	rsb	r2, r4, r6
   1ad04:	add	r1, r9, r4
   1ad08:	mov	r0, r8
   1ad0c:	bl	14a20 <g_string_append_len@plt>
   1ad10:	mov	r0, r8
   1ad14:	mov	r1, #0
   1ad18:	bl	151ac <g_string_free@plt>
   1ad1c:	mov	r4, r0
   1ad20:	mov	r0, r9
   1ad24:	bl	14fa8 <g_free@plt>
   1ad28:	mov	r0, r4
   1ad2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ad30:	mov	r4, r6
   1ad34:	b	1ac9c <g_strcmp0@plt+0x5748>
   1ad38:	mov	r4, r0
   1ad3c:	mov	r9, #0
   1ad40:	mov	r0, r9
   1ad44:	bl	14fa8 <g_free@plt>
   1ad48:	mov	r0, r4
   1ad4c:	bl	1538c <_Unwind_Resume@plt>
   1ad50:	mov	r4, r0
   1ad54:	b	1ad40 <g_strcmp0@plt+0x57ec>
   1ad58:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ad5c:	movw	r5, #4120	; 0x1018
   1ad60:	movt	r5, #3
   1ad64:	sub	sp, sp, #44	; 0x2c
   1ad68:	subs	r6, r0, #0
   1ad6c:	mov	r2, #0
   1ad70:	ldr	r3, [r5]
   1ad74:	mov	r4, r1
   1ad78:	str	r2, [sp, #32]
   1ad7c:	str	r3, [sp, #36]	; 0x24
   1ad80:	beq	1aefc <g_strcmp0@plt+0x59a8>
   1ad84:	cmp	r1, #0
   1ad88:	moveq	r9, r1
   1ad8c:	beq	1adac <g_strcmp0@plt+0x5858>
   1ad90:	bl	14978 <gtk_widget_get_type@plt>
   1ad94:	mov	r1, r0
   1ad98:	mov	r0, r4
   1ad9c:	bl	149a8 <g_type_check_instance_cast@plt>
   1ada0:	bl	149fc <gtk_widget_get_window@plt>
   1ada4:	bl	147f8 <gdk_x11_window_get_xid@plt>
   1ada8:	mov	r9, r0
   1adac:	movw	r1, #59100	; 0xe6dc
   1adb0:	mov	r0, r6
   1adb4:	mov	r2, #1
   1adb8:	movt	r1, #1
   1adbc:	bl	14d44 <g_strsplit@plt>
   1adc0:	mov	r7, r0
   1adc4:	mov	r1, #0
   1adc8:	mov	r0, #2
   1adcc:	add	r2, sp, #32
   1add0:	bl	14780 <g_bus_get_sync@plt>
   1add4:	subs	r8, r0, #0
   1add8:	beq	1af2c <g_strcmp0@plt+0x59d8>
   1addc:	movw	r0, #59148	; 0xe70c
   1ade0:	movt	r0, #1
   1ade4:	bl	148a0 <g_variant_type_checked_@plt>
   1ade8:	bl	149f0 <g_variant_builder_new@plt>
   1adec:	mov	r4, r0
   1adf0:	mov	r0, r9
   1adf4:	bl	148b8 <g_variant_new_uint32@plt>
   1adf8:	mov	r1, r0
   1adfc:	mov	r0, r4
   1ae00:	bl	14948 <g_variant_builder_add_value@plt>
   1ae04:	mov	r0, r7
   1ae08:	mvn	r1, #0
   1ae0c:	bl	14aec <g_variant_new_strv@plt>
   1ae10:	mov	r1, r0
   1ae14:	mov	r0, r4
   1ae18:	bl	14948 <g_variant_builder_add_value@plt>
   1ae1c:	movw	r0, #59156	; 0xe714
   1ae20:	movt	r0, #1
   1ae24:	bl	148f4 <g_variant_new_string@plt>
   1ae28:	mov	r1, r0
   1ae2c:	mov	r0, r4
   1ae30:	bl	14948 <g_variant_builder_add_value@plt>
   1ae34:	mov	r0, r4
   1ae38:	bl	148e8 <g_variant_builder_end@plt>
   1ae3c:	mov	r6, r0
   1ae40:	add	r3, sp, #32
   1ae44:	movw	r2, #59284	; 0xe794
   1ae48:	str	r3, [sp, #24]
   1ae4c:	movt	r2, #1
   1ae50:	mov	r3, #0
   1ae54:	str	r2, [sp]
   1ae58:	movw	r1, #59192	; 0xe738
   1ae5c:	mvn	r2, #-2147483648	; 0x80000000
   1ae60:	str	r3, [sp, #8]
   1ae64:	str	r3, [sp, #12]
   1ae68:	mov	r0, r8
   1ae6c:	str	r3, [sp, #20]
   1ae70:	movt	r1, #1
   1ae74:	str	r2, [sp, #16]
   1ae78:	movw	r3, #59248	; 0xe770
   1ae7c:	movw	r2, #59220	; 0xe754
   1ae80:	str	r6, [sp, #4]
   1ae84:	movt	r2, #1
   1ae88:	movt	r3, #1
   1ae8c:	bl	14eac <g_dbus_connection_call_sync@plt>
   1ae90:	cmp	r0, #0
   1ae94:	beq	1af60 <g_strcmp0@plt+0x5a0c>
   1ae98:	bl	1508c <g_variant_unref@plt>
   1ae9c:	mov	r8, #1
   1aea0:	cmp	r4, #0
   1aea4:	beq	1aeb0 <g_strcmp0@plt+0x595c>
   1aea8:	mov	r0, r4
   1aeac:	bl	14c18 <g_variant_builder_unref@plt>
   1aeb0:	cmp	r6, #0
   1aeb4:	beq	1aec0 <g_strcmp0@plt+0x596c>
   1aeb8:	mov	r0, r6
   1aebc:	bl	1508c <g_variant_unref@plt>
   1aec0:	cmp	r7, #0
   1aec4:	beq	1aed0 <g_strcmp0@plt+0x597c>
   1aec8:	mov	r0, r7
   1aecc:	bl	14f00 <g_strfreev@plt>
   1aed0:	ldr	r0, [sp, #32]
   1aed4:	cmp	r0, #0
   1aed8:	beq	1aee0 <g_strcmp0@plt+0x598c>
   1aedc:	bl	148dc <g_error_free@plt>
   1aee0:	ldr	r2, [sp, #36]	; 0x24
   1aee4:	mov	r0, r8
   1aee8:	ldr	r3, [r5]
   1aeec:	cmp	r2, r3
   1aef0:	bne	1af9c <g_strcmp0@plt+0x5a48>
   1aef4:	add	sp, sp, #44	; 0x2c
   1aef8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1aefc:	movw	r0, #48456	; 0xbd48
   1af00:	movw	r1, #58852	; 0xe5e4
   1af04:	movw	r2, #59324	; 0xe7bc
   1af08:	movt	r0, #1
   1af0c:	movt	r1, #1
   1af10:	movt	r2, #1
   1af14:	bl	1481c <g_return_if_fail_warning@plt>
   1af18:	mov	r4, #0
   1af1c:	mov	r6, r4
   1af20:	mov	r7, r4
   1af24:	mov	r8, #0
   1af28:	b	1aea0 <g_strcmp0@plt+0x594c>
   1af2c:	mov	r2, #5
   1af30:	movw	r1, #59104	; 0xe6e0
   1af34:	movt	r1, #1
   1af38:	bl	14fcc <dcgettext@plt>
   1af3c:	ldr	r3, [sp, #32]
   1af40:	ldr	r2, [r3, #8]
   1af44:	mov	r1, r0
   1af48:	movw	r0, #59140	; 0xe704
   1af4c:	movt	r0, #1
   1af50:	bl	15104 <g_print@plt>
   1af54:	mov	r4, #0
   1af58:	mov	r6, r4
   1af5c:	b	1af24 <g_strcmp0@plt+0x59d0>
   1af60:	mov	r2, #5
   1af64:	movw	r1, #59304	; 0xe7a8
   1af68:	movt	r1, #1
   1af6c:	bl	14fcc <dcgettext@plt>
   1af70:	ldr	r1, [sp, #32]
   1af74:	movw	r2, #59140	; 0xe704
   1af78:	movt	r2, #1
   1af7c:	ldr	ip, [r1, #8]
   1af80:	mov	r1, #16
   1af84:	str	ip, [sp]
   1af88:	mov	r3, r0
   1af8c:	movw	r0, #48456	; 0xbd48
   1af90:	movt	r0, #1
   1af94:	bl	14a38 <g_log@plt>
   1af98:	b	1af24 <g_strcmp0@plt+0x59d0>
   1af9c:	bl	14f3c <__stack_chk_fail@plt>
   1afa0:	mov	r5, r0
   1afa4:	mov	r6, #0
   1afa8:	mov	r4, r5
   1afac:	cmp	r6, #0
   1afb0:	beq	1afbc <g_strcmp0@plt+0x5a68>
   1afb4:	mov	r0, r6
   1afb8:	bl	1508c <g_variant_unref@plt>
   1afbc:	cmp	r7, #0
   1afc0:	beq	1afcc <g_strcmp0@plt+0x5a78>
   1afc4:	mov	r0, r7
   1afc8:	bl	14f00 <g_strfreev@plt>
   1afcc:	ldr	r0, [sp, #32]
   1afd0:	cmp	r0, #0
   1afd4:	beq	1afdc <g_strcmp0@plt+0x5a88>
   1afd8:	bl	148dc <g_error_free@plt>
   1afdc:	mov	r0, r4
   1afe0:	bl	1538c <_Unwind_Resume@plt>
   1afe4:	mov	r6, #0
   1afe8:	mov	r5, r0
   1afec:	mov	r7, r6
   1aff0:	b	1afa8 <g_strcmp0@plt+0x5a54>
   1aff4:	mov	r4, r0
   1aff8:	b	1afbc <g_strcmp0@plt+0x5a68>
   1affc:	mov	r4, r0
   1b000:	b	1afac <g_strcmp0@plt+0x5a58>
   1b004:	b	1afe4 <g_strcmp0@plt+0x5a90>
   1b008:	b	1afe4 <g_strcmp0@plt+0x5a90>
   1b00c:	b	1afe4 <g_strcmp0@plt+0x5a90>
   1b010:	b	1afe4 <g_strcmp0@plt+0x5a90>
   1b014:	mov	r5, r0
   1b018:	mov	r6, #0
   1b01c:	cmp	r4, #0
   1b020:	beq	1afa8 <g_strcmp0@plt+0x5a54>
   1b024:	mov	r0, r4
   1b028:	bl	14c18 <g_variant_builder_unref@plt>
   1b02c:	b	1afa8 <g_strcmp0@plt+0x5a54>
   1b030:	b	1b014 <g_strcmp0@plt+0x5ac0>
   1b034:	b	1afa0 <g_strcmp0@plt+0x5a4c>
   1b038:	b	1afe4 <g_strcmp0@plt+0x5a90>
   1b03c:	b	1afa0 <g_strcmp0@plt+0x5a4c>
   1b040:	mov	r5, r0
   1b044:	b	1b01c <g_strcmp0@plt+0x5ac8>
   1b048:	b	1b014 <g_strcmp0@plt+0x5ac0>
   1b04c:	b	1b014 <g_strcmp0@plt+0x5ac0>
   1b050:	b	1b014 <g_strcmp0@plt+0x5ac0>
   1b054:	b	1b014 <g_strcmp0@plt+0x5ac0>
   1b058:	b	1b014 <g_strcmp0@plt+0x5ac0>
   1b05c:	b	1afa0 <g_strcmp0@plt+0x5a4c>
   1b060:	mov	r4, r0
   1b064:	b	1afcc <g_strcmp0@plt+0x5a78>
   1b068:	push	{r4, lr}
   1b06c:	subs	r4, r0, #0
   1b070:	beq	1b094 <g_strcmp0@plt+0x5b40>
   1b074:	movw	r2, #59376	; 0xe7f0
   1b078:	mvn	r1, #0
   1b07c:	movt	r2, #1
   1b080:	bl	14ef4 <g_strstr_len@plt>
   1b084:	cmp	r0, #0
   1b088:	beq	1b0b4 <g_strcmp0@plt+0x5b60>
   1b08c:	mov	r0, #1
   1b090:	pop	{r4, pc}
   1b094:	ldr	r1, [pc, #56]	; 1b0d4 <g_strcmp0@plt+0x5b80>
   1b098:	movw	r0, #48456	; 0xbd48
   1b09c:	movw	r2, #59356	; 0xe7dc
   1b0a0:	movt	r0, #1
   1b0a4:	movt	r2, #1
   1b0a8:	bl	1481c <g_return_if_fail_warning@plt>
   1b0ac:	mov	r0, r4
   1b0b0:	pop	{r4, pc}
   1b0b4:	mov	r0, r4
   1b0b8:	mvn	r1, #0
   1b0bc:	movw	r2, #59348	; 0xe7d4
   1b0c0:	movt	r2, #1
   1b0c4:	bl	14ef4 <g_strstr_len@plt>
   1b0c8:	adds	r0, r0, #0
   1b0cc:	movne	r0, #1
   1b0d0:	pop	{r4, pc}
   1b0d4:	andeq	lr, r1, r0, lsl #12
   1b0d8:	push	{r4, lr}
   1b0dc:	subs	r4, r0, #0
   1b0e0:	beq	1b134 <g_strcmp0@plt+0x5be0>
   1b0e4:	bl	1b068 <g_strcmp0@plt+0x5b14>
   1b0e8:	cmp	r0, #0
   1b0ec:	beq	1b0f8 <g_strcmp0@plt+0x5ba4>
   1b0f0:	mov	r0, #1
   1b0f4:	pop	{r4, pc}
   1b0f8:	movw	r2, #59384	; 0xe7f8
   1b0fc:	mov	r0, r4
   1b100:	movt	r2, #1
   1b104:	mvn	r1, #0
   1b108:	bl	14ef4 <g_strstr_len@plt>
   1b10c:	cmp	r0, #0
   1b110:	bne	1b0f0 <g_strcmp0@plt+0x5b9c>
   1b114:	mov	r0, r4
   1b118:	mvn	r1, #0
   1b11c:	movw	r2, #59388	; 0xe7fc
   1b120:	movt	r2, #1
   1b124:	bl	14ef4 <g_strstr_len@plt>
   1b128:	adds	r0, r0, #0
   1b12c:	movne	r0, #1
   1b130:	pop	{r4, pc}
   1b134:	ldr	r1, [pc, #24]	; 1b154 <g_strcmp0@plt+0x5c00>
   1b138:	movw	r0, #48456	; 0xbd48
   1b13c:	movw	r2, #59356	; 0xe7dc
   1b140:	movt	r0, #1
   1b144:	movt	r2, #1
   1b148:	bl	1481c <g_return_if_fail_warning@plt>
   1b14c:	mov	r0, r4
   1b150:	pop	{r4, pc}
   1b154:	andeq	lr, r1, r4, lsr #12
   1b158:	cmp	r0, #0
   1b15c:	push	{r4, r5, r6, lr}
   1b160:	beq	1b1a8 <g_strcmp0@plt+0x5c54>
   1b164:	bl	15098 <g_file_get_basename@plt>
   1b168:	mov	r5, r0
   1b16c:	bl	15458 <g_get_user_data_dir@plt>
   1b170:	movw	r1, #59392	; 0xe800
   1b174:	mov	r2, r5
   1b178:	movt	r1, #1
   1b17c:	mov	r3, #0
   1b180:	bl	14a98 <g_build_filename@plt>
   1b184:	mov	r6, r0
   1b188:	bl	152cc <g_file_new_for_path@plt>
   1b18c:	mov	r4, r0
   1b190:	mov	r0, r6
   1b194:	bl	14fa8 <g_free@plt>
   1b198:	mov	r0, r5
   1b19c:	bl	14fa8 <g_free@plt>
   1b1a0:	mov	r0, r4
   1b1a4:	pop	{r4, r5, r6, pc}
   1b1a8:	movw	r0, #48456	; 0xbd48
   1b1ac:	movw	r2, #59396	; 0xe804
   1b1b0:	movt	r0, #1
   1b1b4:	movt	r2, #1
   1b1b8:	ldr	r1, [pc, #88]	; 1b218 <g_strcmp0@plt+0x5cc4>
   1b1bc:	bl	1481c <g_return_if_fail_warning@plt>
   1b1c0:	mov	r6, #0
   1b1c4:	mov	r5, r6
   1b1c8:	mov	r4, r6
   1b1cc:	b	1b190 <g_strcmp0@plt+0x5c3c>
   1b1d0:	mov	r6, #0
   1b1d4:	mov	r4, r0
   1b1d8:	mov	r5, r6
   1b1dc:	mov	r0, r6
   1b1e0:	bl	14fa8 <g_free@plt>
   1b1e4:	mov	r0, r5
   1b1e8:	bl	14fa8 <g_free@plt>
   1b1ec:	mov	r0, r4
   1b1f0:	bl	1538c <_Unwind_Resume@plt>
   1b1f4:	mov	r4, r0
   1b1f8:	b	1b1e4 <g_strcmp0@plt+0x5c90>
   1b1fc:	mov	r4, r0
   1b200:	b	1b1dc <g_strcmp0@plt+0x5c88>
   1b204:	mov	r4, r0
   1b208:	mov	r6, #0
   1b20c:	b	1b1dc <g_strcmp0@plt+0x5c88>
   1b210:	b	1b204 <g_strcmp0@plt+0x5cb0>
   1b214:	b	1b1d0 <g_strcmp0@plt+0x5c7c>
   1b218:	andeq	lr, r1, ip, lsr r6
   1b21c:	push	{r3, r4, r5, r6, r7, lr}
   1b220:	subs	r6, r0, #0
   1b224:	beq	1b27c <g_strcmp0@plt+0x5d28>
   1b228:	ldr	r0, [r6, #4]
   1b22c:	mov	r1, #4
   1b230:	add	r0, r0, #1
   1b234:	bl	1526c <g_malloc0_n@plt>
   1b238:	ldr	r3, [r6, #4]
   1b23c:	cmp	r3, #0
   1b240:	mov	r7, r0
   1b244:	beq	1b274 <g_strcmp0@plt+0x5d20>
   1b248:	mov	r4, #0
   1b24c:	mov	r5, r4
   1b250:	ldr	r3, [r6]
   1b254:	add	r5, r5, #1
   1b258:	ldr	r0, [r3, r4]
   1b25c:	bl	14bc4 <g_strdup@plt>
   1b260:	ldr	r3, [r6, #4]
   1b264:	cmp	r3, r5
   1b268:	str	r0, [r7, r4]
   1b26c:	add	r4, r4, #4
   1b270:	bhi	1b250 <g_strcmp0@plt+0x5cfc>
   1b274:	mov	r0, r7
   1b278:	pop	{r3, r4, r5, r6, r7, pc}
   1b27c:	ldr	r1, [pc, #24]	; 1b29c <g_strcmp0@plt+0x5d48>
   1b280:	movw	r0, #48456	; 0xbd48
   1b284:	movw	r2, #59412	; 0xe814
   1b288:	movt	r0, #1
   1b28c:	movt	r2, #1
   1b290:	bl	1481c <g_return_if_fail_warning@plt>
   1b294:	mov	r0, r6
   1b298:	pop	{r3, r4, r5, r6, r7, pc}
   1b29c:	andeq	lr, r1, r0, ror #12
   1b2a0:	push	{r4, r5, r6, lr}
   1b2a4:	movw	r4, #4120	; 0x1018
   1b2a8:	movt	r4, #3
   1b2ac:	sub	sp, sp, #16
   1b2b0:	subs	r1, r0, #0
   1b2b4:	mov	r2, #0
   1b2b8:	ldr	r3, [r4]
   1b2bc:	str	r2, [sp, #8]
   1b2c0:	str	r3, [sp, #12]
   1b2c4:	beq	1b394 <g_strcmp0@plt+0x5e40>
   1b2c8:	movw	r0, #59428	; 0xe824
   1b2cc:	movt	r0, #1
   1b2d0:	bl	15158 <g_strconcat@plt>
   1b2d4:	mov	r5, r0
   1b2d8:	movw	r2, #59484	; 0xe85c
   1b2dc:	movw	r0, #48456	; 0xbd48
   1b2e0:	movt	r2, #1
   1b2e4:	movt	r0, #1
   1b2e8:	mov	r1, #128	; 0x80
   1b2ec:	mov	r3, r5
   1b2f0:	bl	14a38 <g_log@plt>
   1b2f4:	mov	r0, #0
   1b2f8:	mov	r1, r5
   1b2fc:	mov	r2, r0
   1b300:	add	r3, sp, #8
   1b304:	bl	14ca8 <gtk_show_uri@plt>
   1b308:	ldr	r2, [sp, #8]
   1b30c:	cmp	r2, #0
   1b310:	beq	1b3a4 <g_strcmp0@plt+0x5e50>
   1b314:	movw	r3, #48992	; 0xbf60
   1b318:	movt	r3, #1
   1b31c:	str	r3, [sp]
   1b320:	mov	r1, #3
   1b324:	ldr	ip, [r2, #8]
   1b328:	mov	r0, #0
   1b32c:	mov	r2, r1
   1b330:	mov	r3, #1
   1b334:	str	ip, [sp, #4]
   1b338:	bl	15338 <gtk_message_dialog_new@plt>
   1b33c:	mov	r6, r0
   1b340:	bl	1505c <gtk_dialog_get_type@plt>
   1b344:	mov	r1, r0
   1b348:	mov	r0, r6
   1b34c:	bl	149a8 <g_type_check_instance_cast@plt>
   1b350:	bl	151b8 <gtk_dialog_run@plt>
   1b354:	mov	r0, r6
   1b358:	bl	14e70 <gtk_widget_destroy@plt>
   1b35c:	mov	r6, #0
   1b360:	mov	r0, r5
   1b364:	bl	14fa8 <g_free@plt>
   1b368:	ldr	r0, [sp, #8]
   1b36c:	cmp	r0, #0
   1b370:	beq	1b378 <g_strcmp0@plt+0x5e24>
   1b374:	bl	148dc <g_error_free@plt>
   1b378:	ldr	r2, [sp, #12]
   1b37c:	mov	r0, r6
   1b380:	ldr	r3, [r4]
   1b384:	cmp	r2, r3
   1b388:	bne	1b3ac <g_strcmp0@plt+0x5e58>
   1b38c:	add	sp, sp, #16
   1b390:	pop	{r4, r5, r6, pc}
   1b394:	movw	r0, #59456	; 0xe840
   1b398:	movt	r0, #1
   1b39c:	bl	14bc4 <g_strdup@plt>
   1b3a0:	b	1b2d4 <g_strcmp0@plt+0x5d80>
   1b3a4:	mov	r6, #1
   1b3a8:	b	1b360 <g_strcmp0@plt+0x5e0c>
   1b3ac:	bl	14f3c <__stack_chk_fail@plt>
   1b3b0:	mov	r4, r0
   1b3b4:	mov	r5, #0
   1b3b8:	mov	r0, r5
   1b3bc:	bl	14fa8 <g_free@plt>
   1b3c0:	ldr	r0, [sp, #8]
   1b3c4:	cmp	r0, #0
   1b3c8:	beq	1b3d0 <g_strcmp0@plt+0x5e7c>
   1b3cc:	bl	148dc <g_error_free@plt>
   1b3d0:	mov	r0, r4
   1b3d4:	bl	1538c <_Unwind_Resume@plt>
   1b3d8:	mov	r4, r0
   1b3dc:	b	1b3c0 <g_strcmp0@plt+0x5e6c>
   1b3e0:	mov	r4, r0
   1b3e4:	b	1b3b8 <g_strcmp0@plt+0x5e64>
   1b3e8:	b	1b3b0 <g_strcmp0@plt+0x5e5c>
   1b3ec:	cmp	r0, #0
   1b3f0:	push	{r4, r5, r6, lr}
   1b3f4:	beq	1b448 <g_strcmp0@plt+0x5ef4>
   1b3f8:	ldrb	r3, [r0]
   1b3fc:	cmp	r3, #0
   1b400:	popeq	{r4, r5, r6, pc}
   1b404:	movw	r2, #4124	; 0x101c
   1b408:	movt	r2, #3
   1b40c:	add	r4, r0, #1
   1b410:	mov	r5, r0
   1b414:	ldr	r6, [r2]
   1b418:	lsl	r3, r3, #1
   1b41c:	mov	r0, #95	; 0x5f
   1b420:	ldrh	r3, [r6, r3]
   1b424:	tst	r3, #1
   1b428:	ldrbne	r0, [r5]
   1b42c:	bl	14c78 <g_ascii_tolower@plt>
   1b430:	strb	r0, [r5]
   1b434:	mov	r5, r4
   1b438:	ldrb	r3, [r4], #1
   1b43c:	cmp	r3, #0
   1b440:	bne	1b418 <g_strcmp0@plt+0x5ec4>
   1b444:	pop	{r4, r5, r6, pc}
   1b448:	movw	r0, #48456	; 0xbd48
   1b44c:	movw	r2, #59500	; 0xe86c
   1b450:	movt	r0, #1
   1b454:	movt	r2, #1
   1b458:	ldr	r1, [pc, #4]	; 1b464 <g_strcmp0@plt+0x5f10>
   1b45c:	pop	{r4, r5, r6, lr}
   1b460:	b	1481c <g_return_if_fail_warning@plt>
   1b464:	andeq	lr, r1, ip, ror r6
   1b468:	cmp	r0, #0
   1b46c:	push	{r4}		; (str r4, [sp, #-4]!)
   1b470:	beq	1b4e4 <g_strcmp0@plt+0x5f90>
   1b474:	ldrb	r3, [r0]
   1b478:	cmp	r3, #0
   1b47c:	beq	1b4dc <g_strcmp0@plt+0x5f88>
   1b480:	movw	r1, #4124	; 0x101c
   1b484:	movt	r1, #3
   1b488:	add	r2, r0, #1
   1b48c:	mov	r4, #95	; 0x5f
   1b490:	ldr	ip, [r1]
   1b494:	cmp	r3, #32
   1b498:	bic	r1, r3, #4
   1b49c:	sub	r1, r1, #40	; 0x28
   1b4a0:	beq	1b4cc <g_strcmp0@plt+0x5f78>
   1b4a4:	cmp	r1, #1
   1b4a8:	bls	1b4cc <g_strcmp0@plt+0x5f78>
   1b4ac:	cmp	r3, #91	; 0x5b
   1b4b0:	lsl	r1, r3, #1
   1b4b4:	beq	1b4cc <g_strcmp0@plt+0x5f78>
   1b4b8:	cmp	r3, #93	; 0x5d
   1b4bc:	beq	1b4cc <g_strcmp0@plt+0x5f78>
   1b4c0:	ldrh	r3, [ip, r1]
   1b4c4:	tst	r3, #1
   1b4c8:	strbeq	r4, [r0]
   1b4cc:	mov	r0, r2
   1b4d0:	ldrb	r3, [r2], #1
   1b4d4:	cmp	r3, #0
   1b4d8:	bne	1b494 <g_strcmp0@plt+0x5f40>
   1b4dc:	pop	{r4}		; (ldr r4, [sp], #4)
   1b4e0:	bx	lr
   1b4e4:	movw	r0, #48456	; 0xbd48
   1b4e8:	movw	r2, #59500	; 0xe86c
   1b4ec:	movt	r0, #1
   1b4f0:	movt	r2, #1
   1b4f4:	ldr	r1, [pc, #4]	; 1b500 <g_strcmp0@plt+0x5fac>
   1b4f8:	pop	{r4}		; (ldr r4, [sp], #4)
   1b4fc:	b	1481c <g_return_if_fail_warning@plt>
   1b500:	muleq	r1, r8, r6
   1b504:	cmp	r0, #6
   1b508:	beq	1b538 <g_strcmp0@plt+0x5fe4>
   1b50c:	cmp	r0, #9
   1b510:	beq	1b54c <g_strcmp0@plt+0x5ff8>
   1b514:	cmp	r0, #7
   1b518:	bne	1b530 <g_strcmp0@plt+0x5fdc>
   1b51c:	movw	r1, #59528	; 0xe888
   1b520:	mov	r0, #0
   1b524:	movt	r1, #1
   1b528:	mov	r2, #5
   1b52c:	b	14fcc <dcgettext@plt>
   1b530:	mov	r0, #0
   1b534:	bx	lr
   1b538:	movw	r1, #59516	; 0xe87c
   1b53c:	mov	r0, #0
   1b540:	movt	r1, #1
   1b544:	mov	r2, #5
   1b548:	b	14fcc <dcgettext@plt>
   1b54c:	movw	r1, #59520	; 0xe880
   1b550:	mov	r0, #0
   1b554:	movt	r1, #1
   1b558:	mov	r2, #5
   1b55c:	b	14fcc <dcgettext@plt>
   1b560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b564:	sub	sp, sp, #52	; 0x34
   1b568:	mov	r6, r1
   1b56c:	mov	r7, r2
   1b570:	mov	r8, r3
   1b574:	mov	r9, r0
   1b578:	bl	15014 <gtk_image_get_pixbuf@plt>
   1b57c:	subs	r4, r0, #0
   1b580:	beq	1b6ec <g_strcmp0@plt+0x6198>
   1b584:	bl	14d68 <gdk_pixbuf_get_bits_per_sample@plt>
   1b588:	mov	r5, r0
   1b58c:	mov	r0, r4
   1b590:	bl	15404 <gdk_pixbuf_get_has_alpha@plt>
   1b594:	cmp	r0, #0
   1b598:	beq	1b6cc <g_strcmp0@plt+0x6178>
   1b59c:	cmp	r5, #8
   1b5a0:	moveq	r5, #153	; 0x99
   1b5a4:	movteq	r5, #4
   1b5a8:	bne	1b6d4 <g_strcmp0@plt+0x6180>
   1b5ac:	mov	r1, #80	; 0x50
   1b5b0:	mov	r0, r4
   1b5b4:	bl	149a8 <g_type_check_instance_cast@plt>
   1b5b8:	movw	r1, #59536	; 0xe890
   1b5bc:	movt	r1, #1
   1b5c0:	bl	154e8 <g_object_get_data@plt>
   1b5c4:	subs	sl, r0, #0
   1b5c8:	beq	1b72c <g_strcmp0@plt+0x61d8>
   1b5cc:	bl	14834 <cd_transform_new@plt>
   1b5d0:	mov	r1, r6
   1b5d4:	mov	fp, r0
   1b5d8:	bl	149cc <cd_transform_set_input_icc@plt>
   1b5dc:	mov	r0, fp
   1b5e0:	mov	r1, r7
   1b5e4:	bl	147d4 <cd_transform_set_abstract_icc@plt>
   1b5e8:	mov	r0, fp
   1b5ec:	mov	r1, r8
   1b5f0:	bl	1547c <cd_transform_set_output_icc@plt>
   1b5f4:	mov	r0, fp
   1b5f8:	mov	r1, #1
   1b5fc:	bl	150d4 <cd_transform_set_rendering_intent@plt>
   1b600:	mov	r0, fp
   1b604:	mov	r1, r5
   1b608:	bl	147b0 <cd_transform_set_input_pixel_format@plt>
   1b60c:	mov	r0, fp
   1b610:	mov	r1, r5
   1b614:	bl	15230 <cd_transform_set_output_pixel_format@plt>
   1b618:	mov	r0, r4
   1b61c:	bl	14b7c <gdk_pixbuf_get_rowstride@plt>
   1b620:	mov	r5, r0
   1b624:	mov	r0, r4
   1b628:	bl	14d8c <gdk_pixbuf_get_width@plt>
   1b62c:	mov	r1, r0
   1b630:	mov	r0, r5
   1b634:	bl	1ba6c <g_strcmp0@plt+0x6518>
   1b638:	mov	r8, r0
   1b63c:	mov	r0, sl
   1b640:	bl	1535c <gdk_pixbuf_get_pixels@plt>
   1b644:	mov	r7, r0
   1b648:	mov	r0, r4
   1b64c:	bl	1535c <gdk_pixbuf_get_pixels@plt>
   1b650:	mov	r6, r0
   1b654:	mov	r0, r4
   1b658:	bl	14d8c <gdk_pixbuf_get_width@plt>
   1b65c:	mov	r5, r0
   1b660:	mov	r0, r4
   1b664:	bl	14d20 <gdk_pixbuf_get_height@plt>
   1b668:	mov	sl, r0
   1b66c:	mov	r0, r4
   1b670:	bl	14b7c <gdk_pixbuf_get_rowstride@plt>
   1b674:	mov	r1, r8
   1b678:	str	sl, [sp]
   1b67c:	bl	1b860 <g_strcmp0@plt+0x630c>
   1b680:	ldr	r3, [sp, #88]	; 0x58
   1b684:	mov	ip, #0
   1b688:	mov	r1, r7
   1b68c:	mov	r2, r6
   1b690:	str	r3, [sp, #12]
   1b694:	mov	r3, r5
   1b698:	stmib	sp, {r0, ip}
   1b69c:	mov	r0, fp
   1b6a0:	bl	150bc <cd_transform_process@plt>
   1b6a4:	cmp	r0, #0
   1b6a8:	moveq	r4, r0
   1b6ac:	bne	1b708 <g_strcmp0@plt+0x61b4>
   1b6b0:	cmp	fp, #0
   1b6b4:	beq	1b6f0 <g_strcmp0@plt+0x619c>
   1b6b8:	mov	r0, fp
   1b6bc:	bl	151f4 <g_object_unref@plt>
   1b6c0:	mov	r0, r4
   1b6c4:	add	sp, sp, #52	; 0x34
   1b6c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6cc:	cmp	r5, #8
   1b6d0:	beq	1b6fc <g_strcmp0@plt+0x61a8>
   1b6d4:	movw	r3, #59548	; 0xe89c
   1b6d8:	ldr	r0, [sp, #88]	; 0x58
   1b6dc:	movt	r3, #1
   1b6e0:	mov	r1, #1
   1b6e4:	mov	r2, #0
   1b6e8:	bl	14b04 <g_set_error_literal@plt>
   1b6ec:	mov	r4, #0
   1b6f0:	mov	r0, r4
   1b6f4:	add	sp, sp, #52	; 0x34
   1b6f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6fc:	mov	r5, #25
   1b700:	movt	r5, #4
   1b704:	b	1b5ac <g_strcmp0@plt+0x6058>
   1b708:	mov	r0, r4
   1b70c:	bl	14774 <g_object_ref@plt>
   1b710:	mov	r0, r9
   1b714:	mov	r1, r4
   1b718:	bl	14c90 <gtk_image_set_from_pixbuf@plt>
   1b71c:	mov	r0, r4
   1b720:	bl	151f4 <g_object_unref@plt>
   1b724:	mov	r4, #1
   1b728:	b	1b6b0 <g_strcmp0@plt+0x615c>
   1b72c:	mov	r0, r4
   1b730:	bl	1535c <gdk_pixbuf_get_pixels@plt>
   1b734:	mov	fp, r0
   1b738:	mov	r0, r4
   1b73c:	bl	14d68 <gdk_pixbuf_get_bits_per_sample@plt>
   1b740:	mov	r3, r0
   1b744:	mov	r0, r4
   1b748:	str	r3, [sp, #32]
   1b74c:	bl	14b7c <gdk_pixbuf_get_rowstride@plt>
   1b750:	ldr	r3, [sp, #32]
   1b754:	mul	r3, r0, r3
   1b758:	mov	r0, r4
   1b75c:	str	r3, [sp, #32]
   1b760:	bl	14d20 <gdk_pixbuf_get_height@plt>
   1b764:	ldr	r3, [sp, #32]
   1b768:	mul	r3, r0, r3
   1b76c:	mov	r0, fp
   1b770:	cmp	r3, #0
   1b774:	add	r2, r3, #7
   1b778:	movge	r1, r3
   1b77c:	movlt	r1, r2
   1b780:	asr	r1, r1, #3
   1b784:	bl	14b64 <g_memdup@plt>
   1b788:	mov	fp, r0
   1b78c:	mov	r0, r4
   1b790:	bl	14a14 <gdk_pixbuf_get_colorspace@plt>
   1b794:	mov	r1, r0
   1b798:	mov	r0, r4
   1b79c:	str	r1, [sp, #28]
   1b7a0:	bl	15404 <gdk_pixbuf_get_has_alpha@plt>
   1b7a4:	mov	r2, r0
   1b7a8:	mov	r0, r4
   1b7ac:	str	r2, [sp, #36]	; 0x24
   1b7b0:	bl	14d68 <gdk_pixbuf_get_bits_per_sample@plt>
   1b7b4:	mov	r3, r0
   1b7b8:	mov	r0, r4
   1b7bc:	str	r3, [sp, #32]
   1b7c0:	bl	14d8c <gdk_pixbuf_get_width@plt>
   1b7c4:	mov	ip, r0
   1b7c8:	mov	r0, r4
   1b7cc:	str	ip, [sp, #40]	; 0x28
   1b7d0:	bl	14d20 <gdk_pixbuf_get_height@plt>
   1b7d4:	str	r0, [sp, #44]	; 0x2c
   1b7d8:	mov	r0, r4
   1b7dc:	bl	14b7c <gdk_pixbuf_get_rowstride@plt>
   1b7e0:	ldr	ip, [sp, #40]	; 0x28
   1b7e4:	ldr	r2, [sp, #36]	; 0x24
   1b7e8:	ldr	r3, [sp, #32]
   1b7ec:	str	ip, [sp]
   1b7f0:	ldr	ip, [sp, #44]	; 0x2c
   1b7f4:	ldr	r1, [sp, #28]
   1b7f8:	str	sl, [sp, #16]
   1b7fc:	str	ip, [sp, #4]
   1b800:	movw	ip, #20392	; 0x4fa8
   1b804:	movt	ip, #1
   1b808:	str	ip, [sp, #12]
   1b80c:	str	r0, [sp, #8]
   1b810:	mov	r0, fp
   1b814:	bl	148ac <gdk_pixbuf_new_from_data@plt>
   1b818:	mov	r1, #80	; 0x50
   1b81c:	mov	sl, r0
   1b820:	mov	r0, r4
   1b824:	bl	149a8 <g_type_check_instance_cast@plt>
   1b828:	mov	r2, sl
   1b82c:	movw	r1, #59536	; 0xe890
   1b830:	movw	r3, #20980	; 0x51f4
   1b834:	movt	r1, #1
   1b838:	movt	r3, #1
   1b83c:	bl	14828 <g_object_set_data_full@plt>
   1b840:	b	1b5cc <g_strcmp0@plt+0x6078>
   1b844:	cmp	fp, #0
   1b848:	mov	r4, r0
   1b84c:	beq	1b858 <g_strcmp0@plt+0x6304>
   1b850:	mov	r0, fp
   1b854:	bl	151f4 <g_object_unref@plt>
   1b858:	mov	r0, r4
   1b85c:	bl	1538c <_Unwind_Resume@plt>
   1b860:	subs	r2, r1, #1
   1b864:	bxeq	lr
   1b868:	bcc	1ba40 <g_strcmp0@plt+0x64ec>
   1b86c:	cmp	r0, r1
   1b870:	bls	1ba24 <g_strcmp0@plt+0x64d0>
   1b874:	tst	r1, r2
   1b878:	beq	1ba30 <g_strcmp0@plt+0x64dc>
   1b87c:	clz	r3, r0
   1b880:	clz	r2, r1
   1b884:	sub	r3, r2, r3
   1b888:	rsbs	r3, r3, #31
   1b88c:	addne	r3, r3, r3, lsl #1
   1b890:	mov	r2, #0
   1b894:	addne	pc, pc, r3, lsl #2
   1b898:	nop	{0}
   1b89c:	cmp	r0, r1, lsl #31
   1b8a0:	adc	r2, r2, r2
   1b8a4:	subcs	r0, r0, r1, lsl #31
   1b8a8:	cmp	r0, r1, lsl #30
   1b8ac:	adc	r2, r2, r2
   1b8b0:	subcs	r0, r0, r1, lsl #30
   1b8b4:	cmp	r0, r1, lsl #29
   1b8b8:	adc	r2, r2, r2
   1b8bc:	subcs	r0, r0, r1, lsl #29
   1b8c0:	cmp	r0, r1, lsl #28
   1b8c4:	adc	r2, r2, r2
   1b8c8:	subcs	r0, r0, r1, lsl #28
   1b8cc:	cmp	r0, r1, lsl #27
   1b8d0:	adc	r2, r2, r2
   1b8d4:	subcs	r0, r0, r1, lsl #27
   1b8d8:	cmp	r0, r1, lsl #26
   1b8dc:	adc	r2, r2, r2
   1b8e0:	subcs	r0, r0, r1, lsl #26
   1b8e4:	cmp	r0, r1, lsl #25
   1b8e8:	adc	r2, r2, r2
   1b8ec:	subcs	r0, r0, r1, lsl #25
   1b8f0:	cmp	r0, r1, lsl #24
   1b8f4:	adc	r2, r2, r2
   1b8f8:	subcs	r0, r0, r1, lsl #24
   1b8fc:	cmp	r0, r1, lsl #23
   1b900:	adc	r2, r2, r2
   1b904:	subcs	r0, r0, r1, lsl #23
   1b908:	cmp	r0, r1, lsl #22
   1b90c:	adc	r2, r2, r2
   1b910:	subcs	r0, r0, r1, lsl #22
   1b914:	cmp	r0, r1, lsl #21
   1b918:	adc	r2, r2, r2
   1b91c:	subcs	r0, r0, r1, lsl #21
   1b920:	cmp	r0, r1, lsl #20
   1b924:	adc	r2, r2, r2
   1b928:	subcs	r0, r0, r1, lsl #20
   1b92c:	cmp	r0, r1, lsl #19
   1b930:	adc	r2, r2, r2
   1b934:	subcs	r0, r0, r1, lsl #19
   1b938:	cmp	r0, r1, lsl #18
   1b93c:	adc	r2, r2, r2
   1b940:	subcs	r0, r0, r1, lsl #18
   1b944:	cmp	r0, r1, lsl #17
   1b948:	adc	r2, r2, r2
   1b94c:	subcs	r0, r0, r1, lsl #17
   1b950:	cmp	r0, r1, lsl #16
   1b954:	adc	r2, r2, r2
   1b958:	subcs	r0, r0, r1, lsl #16
   1b95c:	cmp	r0, r1, lsl #15
   1b960:	adc	r2, r2, r2
   1b964:	subcs	r0, r0, r1, lsl #15
   1b968:	cmp	r0, r1, lsl #14
   1b96c:	adc	r2, r2, r2
   1b970:	subcs	r0, r0, r1, lsl #14
   1b974:	cmp	r0, r1, lsl #13
   1b978:	adc	r2, r2, r2
   1b97c:	subcs	r0, r0, r1, lsl #13
   1b980:	cmp	r0, r1, lsl #12
   1b984:	adc	r2, r2, r2
   1b988:	subcs	r0, r0, r1, lsl #12
   1b98c:	cmp	r0, r1, lsl #11
   1b990:	adc	r2, r2, r2
   1b994:	subcs	r0, r0, r1, lsl #11
   1b998:	cmp	r0, r1, lsl #10
   1b99c:	adc	r2, r2, r2
   1b9a0:	subcs	r0, r0, r1, lsl #10
   1b9a4:	cmp	r0, r1, lsl #9
   1b9a8:	adc	r2, r2, r2
   1b9ac:	subcs	r0, r0, r1, lsl #9
   1b9b0:	cmp	r0, r1, lsl #8
   1b9b4:	adc	r2, r2, r2
   1b9b8:	subcs	r0, r0, r1, lsl #8
   1b9bc:	cmp	r0, r1, lsl #7
   1b9c0:	adc	r2, r2, r2
   1b9c4:	subcs	r0, r0, r1, lsl #7
   1b9c8:	cmp	r0, r1, lsl #6
   1b9cc:	adc	r2, r2, r2
   1b9d0:	subcs	r0, r0, r1, lsl #6
   1b9d4:	cmp	r0, r1, lsl #5
   1b9d8:	adc	r2, r2, r2
   1b9dc:	subcs	r0, r0, r1, lsl #5
   1b9e0:	cmp	r0, r1, lsl #4
   1b9e4:	adc	r2, r2, r2
   1b9e8:	subcs	r0, r0, r1, lsl #4
   1b9ec:	cmp	r0, r1, lsl #3
   1b9f0:	adc	r2, r2, r2
   1b9f4:	subcs	r0, r0, r1, lsl #3
   1b9f8:	cmp	r0, r1, lsl #2
   1b9fc:	adc	r2, r2, r2
   1ba00:	subcs	r0, r0, r1, lsl #2
   1ba04:	cmp	r0, r1, lsl #1
   1ba08:	adc	r2, r2, r2
   1ba0c:	subcs	r0, r0, r1, lsl #1
   1ba10:	cmp	r0, r1
   1ba14:	adc	r2, r2, r2
   1ba18:	subcs	r0, r0, r1
   1ba1c:	mov	r0, r2
   1ba20:	bx	lr
   1ba24:	moveq	r0, #1
   1ba28:	movne	r0, #0
   1ba2c:	bx	lr
   1ba30:	clz	r2, r1
   1ba34:	rsb	r2, r2, #31
   1ba38:	lsr	r0, r0, r2
   1ba3c:	bx	lr
   1ba40:	cmp	r0, #0
   1ba44:	mvnne	r0, #0
   1ba48:	b	1bcac <g_strcmp0@plt+0x6758>
   1ba4c:	cmp	r1, #0
   1ba50:	beq	1ba40 <g_strcmp0@plt+0x64ec>
   1ba54:	push	{r0, r1, lr}
   1ba58:	bl	1b860 <g_strcmp0@plt+0x630c>
   1ba5c:	pop	{r1, r2, lr}
   1ba60:	mul	r3, r2, r0
   1ba64:	sub	r1, r1, r3
   1ba68:	bx	lr
   1ba6c:	cmp	r1, #0
   1ba70:	beq	1bc7c <g_strcmp0@plt+0x6728>
   1ba74:	eor	ip, r0, r1
   1ba78:	rsbmi	r1, r1, #0
   1ba7c:	subs	r2, r1, #1
   1ba80:	beq	1bc48 <g_strcmp0@plt+0x66f4>
   1ba84:	movs	r3, r0
   1ba88:	rsbmi	r3, r0, #0
   1ba8c:	cmp	r3, r1
   1ba90:	bls	1bc54 <g_strcmp0@plt+0x6700>
   1ba94:	tst	r1, r2
   1ba98:	beq	1bc64 <g_strcmp0@plt+0x6710>
   1ba9c:	clz	r2, r3
   1baa0:	clz	r0, r1
   1baa4:	sub	r2, r0, r2
   1baa8:	rsbs	r2, r2, #31
   1baac:	addne	r2, r2, r2, lsl #1
   1bab0:	mov	r0, #0
   1bab4:	addne	pc, pc, r2, lsl #2
   1bab8:	nop	{0}
   1babc:	cmp	r3, r1, lsl #31
   1bac0:	adc	r0, r0, r0
   1bac4:	subcs	r3, r3, r1, lsl #31
   1bac8:	cmp	r3, r1, lsl #30
   1bacc:	adc	r0, r0, r0
   1bad0:	subcs	r3, r3, r1, lsl #30
   1bad4:	cmp	r3, r1, lsl #29
   1bad8:	adc	r0, r0, r0
   1badc:	subcs	r3, r3, r1, lsl #29
   1bae0:	cmp	r3, r1, lsl #28
   1bae4:	adc	r0, r0, r0
   1bae8:	subcs	r3, r3, r1, lsl #28
   1baec:	cmp	r3, r1, lsl #27
   1baf0:	adc	r0, r0, r0
   1baf4:	subcs	r3, r3, r1, lsl #27
   1baf8:	cmp	r3, r1, lsl #26
   1bafc:	adc	r0, r0, r0
   1bb00:	subcs	r3, r3, r1, lsl #26
   1bb04:	cmp	r3, r1, lsl #25
   1bb08:	adc	r0, r0, r0
   1bb0c:	subcs	r3, r3, r1, lsl #25
   1bb10:	cmp	r3, r1, lsl #24
   1bb14:	adc	r0, r0, r0
   1bb18:	subcs	r3, r3, r1, lsl #24
   1bb1c:	cmp	r3, r1, lsl #23
   1bb20:	adc	r0, r0, r0
   1bb24:	subcs	r3, r3, r1, lsl #23
   1bb28:	cmp	r3, r1, lsl #22
   1bb2c:	adc	r0, r0, r0
   1bb30:	subcs	r3, r3, r1, lsl #22
   1bb34:	cmp	r3, r1, lsl #21
   1bb38:	adc	r0, r0, r0
   1bb3c:	subcs	r3, r3, r1, lsl #21
   1bb40:	cmp	r3, r1, lsl #20
   1bb44:	adc	r0, r0, r0
   1bb48:	subcs	r3, r3, r1, lsl #20
   1bb4c:	cmp	r3, r1, lsl #19
   1bb50:	adc	r0, r0, r0
   1bb54:	subcs	r3, r3, r1, lsl #19
   1bb58:	cmp	r3, r1, lsl #18
   1bb5c:	adc	r0, r0, r0
   1bb60:	subcs	r3, r3, r1, lsl #18
   1bb64:	cmp	r3, r1, lsl #17
   1bb68:	adc	r0, r0, r0
   1bb6c:	subcs	r3, r3, r1, lsl #17
   1bb70:	cmp	r3, r1, lsl #16
   1bb74:	adc	r0, r0, r0
   1bb78:	subcs	r3, r3, r1, lsl #16
   1bb7c:	cmp	r3, r1, lsl #15
   1bb80:	adc	r0, r0, r0
   1bb84:	subcs	r3, r3, r1, lsl #15
   1bb88:	cmp	r3, r1, lsl #14
   1bb8c:	adc	r0, r0, r0
   1bb90:	subcs	r3, r3, r1, lsl #14
   1bb94:	cmp	r3, r1, lsl #13
   1bb98:	adc	r0, r0, r0
   1bb9c:	subcs	r3, r3, r1, lsl #13
   1bba0:	cmp	r3, r1, lsl #12
   1bba4:	adc	r0, r0, r0
   1bba8:	subcs	r3, r3, r1, lsl #12
   1bbac:	cmp	r3, r1, lsl #11
   1bbb0:	adc	r0, r0, r0
   1bbb4:	subcs	r3, r3, r1, lsl #11
   1bbb8:	cmp	r3, r1, lsl #10
   1bbbc:	adc	r0, r0, r0
   1bbc0:	subcs	r3, r3, r1, lsl #10
   1bbc4:	cmp	r3, r1, lsl #9
   1bbc8:	adc	r0, r0, r0
   1bbcc:	subcs	r3, r3, r1, lsl #9
   1bbd0:	cmp	r3, r1, lsl #8
   1bbd4:	adc	r0, r0, r0
   1bbd8:	subcs	r3, r3, r1, lsl #8
   1bbdc:	cmp	r3, r1, lsl #7
   1bbe0:	adc	r0, r0, r0
   1bbe4:	subcs	r3, r3, r1, lsl #7
   1bbe8:	cmp	r3, r1, lsl #6
   1bbec:	adc	r0, r0, r0
   1bbf0:	subcs	r3, r3, r1, lsl #6
   1bbf4:	cmp	r3, r1, lsl #5
   1bbf8:	adc	r0, r0, r0
   1bbfc:	subcs	r3, r3, r1, lsl #5
   1bc00:	cmp	r3, r1, lsl #4
   1bc04:	adc	r0, r0, r0
   1bc08:	subcs	r3, r3, r1, lsl #4
   1bc0c:	cmp	r3, r1, lsl #3
   1bc10:	adc	r0, r0, r0
   1bc14:	subcs	r3, r3, r1, lsl #3
   1bc18:	cmp	r3, r1, lsl #2
   1bc1c:	adc	r0, r0, r0
   1bc20:	subcs	r3, r3, r1, lsl #2
   1bc24:	cmp	r3, r1, lsl #1
   1bc28:	adc	r0, r0, r0
   1bc2c:	subcs	r3, r3, r1, lsl #1
   1bc30:	cmp	r3, r1
   1bc34:	adc	r0, r0, r0
   1bc38:	subcs	r3, r3, r1
   1bc3c:	cmp	ip, #0
   1bc40:	rsbmi	r0, r0, #0
   1bc44:	bx	lr
   1bc48:	teq	ip, r0
   1bc4c:	rsbmi	r0, r0, #0
   1bc50:	bx	lr
   1bc54:	movcc	r0, #0
   1bc58:	asreq	r0, ip, #31
   1bc5c:	orreq	r0, r0, #1
   1bc60:	bx	lr
   1bc64:	clz	r2, r1
   1bc68:	rsb	r2, r2, #31
   1bc6c:	cmp	ip, #0
   1bc70:	lsr	r0, r3, r2
   1bc74:	rsbmi	r0, r0, #0
   1bc78:	bx	lr
   1bc7c:	cmp	r0, #0
   1bc80:	mvngt	r0, #-2147483648	; 0x80000000
   1bc84:	movlt	r0, #-2147483648	; 0x80000000
   1bc88:	b	1bcac <g_strcmp0@plt+0x6758>
   1bc8c:	cmp	r1, #0
   1bc90:	beq	1bc7c <g_strcmp0@plt+0x6728>
   1bc94:	push	{r0, r1, lr}
   1bc98:	bl	1ba74 <g_strcmp0@plt+0x6520>
   1bc9c:	pop	{r1, r2, lr}
   1bca0:	mul	r3, r2, r0
   1bca4:	sub	r1, r1, r3
   1bca8:	bx	lr
   1bcac:	push	{r1, lr}
   1bcb0:	mov	r0, #8
   1bcb4:	bl	150ec <raise@plt>
   1bcb8:	pop	{r1, pc}
   1bcbc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1bcc0:	mov	r7, r0
   1bcc4:	ldr	r6, [pc, #76]	; 1bd18 <g_strcmp0@plt+0x67c4>
   1bcc8:	mov	r8, r1
   1bccc:	ldr	r5, [pc, #72]	; 1bd1c <g_strcmp0@plt+0x67c8>
   1bcd0:	mov	r9, r2
   1bcd4:	add	r6, pc, r6
   1bcd8:	bl	14730 <_init@@Base>
   1bcdc:	add	r5, pc, r5
   1bce0:	rsb	r6, r5, r6
   1bce4:	asrs	r6, r6, #2
   1bce8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1bcec:	sub	r5, r5, #4
   1bcf0:	mov	r4, #0
   1bcf4:	add	r4, r4, #1
   1bcf8:	ldr	r3, [r5, #4]!
   1bcfc:	mov	r0, r7
   1bd00:	mov	r1, r8
   1bd04:	mov	r2, r9
   1bd08:	blx	r3
   1bd0c:	cmp	r4, r6
   1bd10:	bne	1bcf4 <g_strcmp0@plt+0x67a0>
   1bd14:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1bd18:	andeq	r4, r1, r0, ror #25
   1bd1c:	ldrdeq	r4, [r1], -r0
   1bd20:	bx	lr

Disassembly of section .fini:

0001bd24 <_fini@@Base>:
   1bd24:	push	{r3, lr}
   1bd28:	pop	{r3, pc}
