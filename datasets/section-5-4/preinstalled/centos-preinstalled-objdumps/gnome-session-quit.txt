
centos-preinstalled/gnome-session-quit:     file format elf32-littlearm


Disassembly of section .init:

0001090c <_init@@Base>:
   1090c:	push	{r3, lr}
   10910:	bl	10c38 <exit@plt+0x204>
   10914:	pop	{r3, pc}

Disassembly of section .plt:

00010918 <abort@plt-0x14>:
   10918:	push	{lr}		; (str lr, [sp, #-4]!)
   1091c:	ldr	lr, [pc, #4]	; 10928 <_init@@Base+0x1c>
   10920:	add	lr, pc, lr
   10924:	ldr	pc, [lr, #8]!
   10928:	ldrdeq	r1, [r1], -r8

0001092c <abort@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1752]!	; 0x6d8

00010938 <__libc_start_main@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1744]!	; 0x6d0

00010944 <g_option_context_free@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1736]!	; 0x6c8

00010950 <__gmon_start__@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1728]!	; 0x6c0

0001095c <g_object_unref@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1720]!	; 0x6b8

00010968 <g_printerr@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1712]!	; 0x6b0

00010974 <g_dbus_proxy_call_sync@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1704]!	; 0x6a8

00010980 <g_option_context_add_main_entries@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1696]!	; 0x6a0

0001098c <bindtextdomain@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1688]!	; 0x698

00010998 <g_dbus_proxy_new_sync@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1680]!	; 0x690

000109a4 <bind_textdomain_codeset@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1672]!	; 0x688

000109b0 <dcgettext@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1664]!	; 0x680

000109bc <g_option_context_parse@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1656]!	; 0x678

000109c8 <setlocale@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1648]!	; 0x670

000109d4 <__stack_chk_fail@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1640]!	; 0x668

000109e0 <g_variant_unref@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1632]!	; 0x660

000109ec <g_bus_get_sync@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1624]!	; 0x658

000109f8 <textdomain@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1616]!	; 0x650

00010a04 <g_option_context_new@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1608]!	; 0x648

00010a10 <g_error_free@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1600]!	; 0x640

00010a1c <g_log@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1592]!	; 0x638

00010a28 <g_variant_new@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1584]!	; 0x630

00010a34 <exit@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1576]!	; 0x628

Disassembly of section .text:

00010a40 <.text>:
   10a40:	push	{r4, r5, r6, lr}
   10a44:	movw	r5, #8472	; 0x2118
   10a48:	movt	r5, #2
   10a4c:	sub	sp, sp, #16
   10a50:	ldr	r3, [r5]
   10a54:	str	r1, [sp]
   10a58:	movw	r1, #4612	; 0x1204
   10a5c:	str	r0, [sp, #4]
   10a60:	movt	r1, #1
   10a64:	mov	r0, #6
   10a68:	str	r3, [sp, #12]
   10a6c:	bl	109c8 <setlocale@plt>
   10a70:	movw	r0, #4344	; 0x10f8
   10a74:	movw	r1, #4364	; 0x110c
   10a78:	movt	r0, #1
   10a7c:	movt	r1, #1
   10a80:	bl	1098c <bindtextdomain@plt>
   10a84:	movw	r0, #4344	; 0x10f8
   10a88:	movw	r1, #4384	; 0x1120
   10a8c:	movt	r0, #1
   10a90:	movt	r1, #1
   10a94:	bl	109a4 <bind_textdomain_codeset@plt>
   10a98:	movw	r0, #4344	; 0x10f8
   10a9c:	movt	r0, #1
   10aa0:	bl	109f8 <textdomain@plt>
   10aa4:	movw	r0, #4612	; 0x1204
   10aa8:	movt	r0, #1
   10aac:	mov	r3, #0
   10ab0:	str	r3, [sp, #8]
   10ab4:	bl	10a04 <g_option_context_new@plt>
   10ab8:	movw	r1, #8304	; 0x2070
   10abc:	movw	r2, #4344	; 0x10f8
   10ac0:	movt	r1, #2
   10ac4:	movt	r2, #1
   10ac8:	mov	r6, r0
   10acc:	bl	10980 <g_option_context_add_main_entries@plt>
   10ad0:	mov	r0, r6
   10ad4:	add	r1, sp, #4
   10ad8:	mov	r2, sp
   10adc:	add	r3, sp, #8
   10ae0:	bl	109bc <g_option_context_parse@plt>
   10ae4:	cmp	r0, #0
   10ae8:	beq	10bd4 <exit@plt+0x1a0>
   10aec:	movw	r4, #8480	; 0x2120
   10af0:	movt	r4, #2
   10af4:	mov	r0, r6
   10af8:	bl	10944 <g_option_context_free@plt>
   10afc:	ldr	r3, [r4]
   10b00:	ldr	r2, [r4, #4]
   10b04:	adds	r3, r3, #0
   10b08:	movne	r3, #1
   10b0c:	cmp	r2, #0
   10b10:	ldr	r2, [r4, #8]
   10b14:	addne	r3, r3, #1
   10b18:	cmp	r2, #0
   10b1c:	addne	r3, r3, #1
   10b20:	cmp	r3, #1
   10b24:	ble	10b4c <exit@plt+0x118>
   10b28:	movw	r1, #4412	; 0x113c
   10b2c:	mov	r0, #0
   10b30:	movt	r1, #1
   10b34:	mov	r2, #5
   10b38:	bl	109b0 <dcgettext@plt>
   10b3c:	mov	r1, r0
   10b40:	movw	r0, #4220	; 0x107c
   10b44:	movt	r0, #1
   10b48:	bl	10968 <g_printerr@plt>
   10b4c:	ldr	r2, [r4, #4]
   10b50:	movw	r3, #8480	; 0x2120
   10b54:	movt	r3, #2
   10b58:	cmp	r2, #0
   10b5c:	bne	10ba4 <exit@plt+0x170>
   10b60:	ldr	r2, [r3, #8]
   10b64:	cmp	r2, #0
   10b68:	bne	10bc0 <exit@plt+0x18c>
   10b6c:	ldr	r2, [r3, #12]
   10b70:	cmp	r2, #0
   10b74:	bne	10bb4 <exit@plt+0x180>
   10b78:	ldr	r0, [r3, #16]
   10b7c:	cmp	r0, #0
   10b80:	movne	r0, #1
   10b84:	bl	10ef4 <exit@plt+0x4c0>
   10b88:	ldr	r2, [sp, #12]
   10b8c:	mov	r0, #0
   10b90:	ldr	r3, [r5]
   10b94:	cmp	r2, r3
   10b98:	bne	10bd0 <exit@plt+0x19c>
   10b9c:	add	sp, sp, #16
   10ba0:	pop	{r4, r5, r6, pc}
   10ba4:	movw	r0, #4452	; 0x1164
   10ba8:	movt	r0, #1
   10bac:	bl	10e40 <exit@plt+0x40c>
   10bb0:	b	10b88 <exit@plt+0x154>
   10bb4:	mov	r0, #2
   10bb8:	bl	10ef4 <exit@plt+0x4c0>
   10bbc:	b	10b88 <exit@plt+0x154>
   10bc0:	movw	r0, #4464	; 0x1170
   10bc4:	movt	r0, #1
   10bc8:	bl	10e40 <exit@plt+0x40c>
   10bcc:	b	10b88 <exit@plt+0x154>
   10bd0:	bl	109d4 <__stack_chk_fail@plt>
   10bd4:	ldr	r3, [sp, #8]
   10bd8:	mov	r1, #16
   10bdc:	movw	r2, #4392	; 0x1128
   10be0:	movt	r2, #1
   10be4:	ldr	r3, [r3, #8]
   10be8:	bl	10a1c <g_log@plt>
   10bec:	ldr	r0, [sp, #8]
   10bf0:	bl	10a10 <g_error_free@plt>
   10bf4:	mov	r0, #1
   10bf8:	bl	10a34 <exit@plt>
   10bfc:	mov	fp, #0
   10c00:	mov	lr, #0
   10c04:	pop	{r1}		; (ldr r1, [sp], #4)
   10c08:	mov	r2, sp
   10c0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10c10:	push	{r0}		; (str r0, [sp, #-4]!)
   10c14:	ldr	ip, [pc, #16]	; 10c2c <exit@plt+0x1f8>
   10c18:	push	{ip}		; (str ip, [sp, #-4]!)
   10c1c:	ldr	r0, [pc, #12]	; 10c30 <exit@plt+0x1fc>
   10c20:	ldr	r3, [pc, #12]	; 10c34 <exit@plt+0x200>
   10c24:	bl	10938 <__libc_start_main@plt>
   10c28:	bl	1092c <abort@plt>
   10c2c:	andeq	r1, r1, r8, lsl r0
   10c30:	andeq	r0, r1, r0, asr #20
   10c34:			; <UNDEFINED> instruction: 0x00010fb4
   10c38:	ldr	r3, [pc, #20]	; 10c54 <exit@plt+0x220>
   10c3c:	ldr	r2, [pc, #20]	; 10c58 <exit@plt+0x224>
   10c40:	add	r3, pc, r3
   10c44:	ldr	r2, [r3, r2]
   10c48:	cmp	r2, #0
   10c4c:	bxeq	lr
   10c50:	b	10950 <__gmon_start__@plt>
   10c54:			; <UNDEFINED> instruction: 0x000113b8
   10c58:	andeq	r0, r0, r8, rrx
   10c5c:	push	{r3, lr}
   10c60:	movw	r0, #8472	; 0x2118
   10c64:	ldr	r3, [pc, #36]	; 10c90 <exit@plt+0x25c>
   10c68:	movt	r0, #2
   10c6c:	rsb	r3, r0, r3
   10c70:	cmp	r3, #6
   10c74:	popls	{r3, pc}
   10c78:	movw	r3, #0
   10c7c:	movt	r3, #0
   10c80:	cmp	r3, #0
   10c84:	popeq	{r3, pc}
   10c88:	blx	r3
   10c8c:	pop	{r3, pc}
   10c90:	andeq	r2, r2, fp, lsl r1
   10c94:	push	{r3, lr}
   10c98:	movw	r0, #8472	; 0x2118
   10c9c:	movw	r3, #8472	; 0x2118
   10ca0:	movt	r0, #2
   10ca4:	movt	r3, #2
   10ca8:	rsb	r3, r0, r3
   10cac:	asr	r3, r3, #2
   10cb0:	add	r3, r3, r3, lsr #31
   10cb4:	asrs	r1, r3, #1
   10cb8:	popeq	{r3, pc}
   10cbc:	movw	r2, #0
   10cc0:	movt	r2, #0
   10cc4:	cmp	r2, #0
   10cc8:	popeq	{r3, pc}
   10ccc:	blx	r2
   10cd0:	pop	{r3, pc}
   10cd4:	push	{r4, lr}
   10cd8:	movw	r4, #8476	; 0x211c
   10cdc:	movt	r4, #2
   10ce0:	ldrb	r3, [r4]
   10ce4:	cmp	r3, #0
   10ce8:	popne	{r4, pc}
   10cec:	bl	10c5c <exit@plt+0x228>
   10cf0:	mov	r3, #1
   10cf4:	strb	r3, [r4]
   10cf8:	pop	{r4, pc}
   10cfc:	movw	r0, #7916	; 0x1eec
   10d00:	movt	r0, #2
   10d04:	push	{r3, lr}
   10d08:	ldr	r3, [r0]
   10d0c:	cmp	r3, #0
   10d10:	beq	10d28 <exit@plt+0x2f4>
   10d14:	movw	r3, #0
   10d18:	movt	r3, #0
   10d1c:	cmp	r3, #0
   10d20:	beq	10d28 <exit@plt+0x2f4>
   10d24:	blx	r3
   10d28:	pop	{r3, lr}
   10d2c:	b	10c94 <exit@plt+0x260>
   10d30:	push	{r4, r5, r6, lr}
   10d34:	movw	r5, #8472	; 0x2118
   10d38:	movt	r5, #2
   10d3c:	sub	sp, sp, #24
   10d40:	add	r2, sp, #24
   10d44:	mov	r4, #0
   10d48:	ldr	r3, [r5]
   10d4c:	mov	r1, r4
   10d50:	str	r4, [r2, #-8]!
   10d54:	mov	r0, #2
   10d58:	str	r3, [sp, #20]
   10d5c:	bl	109ec <g_bus_get_sync@plt>
   10d60:	subs	r6, r0, #0
   10d64:	beq	10dc8 <exit@plt+0x394>
   10d68:	movw	r2, #4224	; 0x1080
   10d6c:	movt	r2, #1
   10d70:	mov	r1, r4
   10d74:	str	r4, [sp, #8]
   10d78:	mov	r3, r2
   10d7c:	str	r4, [sp, #12]
   10d80:	str	r2, [sp, #4]
   10d84:	movw	ip, #4252	; 0x109c
   10d88:	mov	r2, r4
   10d8c:	movt	ip, #1
   10d90:	str	ip, [sp]
   10d94:	bl	10998 <g_dbus_proxy_new_sync@plt>
   10d98:	mov	r4, r0
   10d9c:	mov	r0, r6
   10da0:	bl	1095c <g_object_unref@plt>
   10da4:	cmp	r4, #0
   10da8:	beq	10e14 <exit@plt+0x3e0>
   10dac:	mov	r0, r4
   10db0:	ldr	r2, [sp, #20]
   10db4:	ldr	r3, [r5]
   10db8:	cmp	r2, r3
   10dbc:	bne	10e3c <exit@plt+0x408>
   10dc0:	add	sp, sp, #24
   10dc4:	pop	{r4, r5, r6, pc}
   10dc8:	ldr	r3, [sp, #16]
   10dcc:	mov	r1, #16
   10dd0:	movw	r2, #4140	; 0x102c
   10dd4:	movt	r2, #1
   10dd8:	ldr	r3, [r3, #8]
   10ddc:	bl	10a1c <g_log@plt>
   10de0:	ldr	r0, [sp, #16]
   10de4:	bl	10a10 <g_error_free@plt>
   10de8:	mov	r2, #5
   10dec:	mov	r0, r6
   10df0:	movw	r1, #4176	; 0x1050
   10df4:	movt	r1, #1
   10df8:	bl	109b0 <dcgettext@plt>
   10dfc:	mov	r1, r0
   10e00:	movw	r0, #4220	; 0x107c
   10e04:	movt	r0, #1
   10e08:	bl	10968 <g_printerr@plt>
   10e0c:	mov	r0, r6
   10e10:	b	10db0 <exit@plt+0x37c>
   10e14:	mov	r0, r4
   10e18:	mov	r2, #5
   10e1c:	movw	r1, #4176	; 0x1050
   10e20:	movt	r1, #1
   10e24:	bl	109b0 <dcgettext@plt>
   10e28:	mov	r1, r0
   10e2c:	movw	r0, #4220	; 0x107c
   10e30:	movt	r0, #1
   10e34:	bl	10968 <g_printerr@plt>
   10e38:	b	10dac <exit@plt+0x378>
   10e3c:	bl	109d4 <__stack_chk_fail@plt>
   10e40:	push	{r4, r5, r6, r7, lr}
   10e44:	movw	r4, #8472	; 0x2118
   10e48:	movt	r4, #2
   10e4c:	sub	sp, sp, #28
   10e50:	mov	r6, r0
   10e54:	ldr	r3, [r4]
   10e58:	str	r3, [sp, #20]
   10e5c:	bl	10d30 <exit@plt+0x2fc>
   10e60:	subs	r7, r0, #0
   10e64:	beq	10ed0 <exit@plt+0x49c>
   10e68:	add	ip, sp, #24
   10e6c:	mov	r5, #0
   10e70:	mov	r3, r5
   10e74:	str	r5, [sp, #4]
   10e78:	mov	r2, r5
   10e7c:	str	r5, [ip, #-8]!
   10e80:	mov	r1, r6
   10e84:	str	ip, [sp, #8]
   10e88:	mvn	ip, #0
   10e8c:	str	ip, [sp]
   10e90:	bl	10974 <g_dbus_proxy_call_sync@plt>
   10e94:	ldr	r3, [sp, #16]
   10e98:	cmp	r3, r5
   10e9c:	beq	10ee8 <exit@plt+0x4b4>
   10ea0:	ldr	ip, [r3, #8]
   10ea4:	mov	r0, r5
   10ea8:	mov	r3, r6
   10eac:	movw	r2, #4280	; 0x10b8
   10eb0:	mov	r1, #16
   10eb4:	movt	r2, #1
   10eb8:	str	ip, [sp]
   10ebc:	bl	10a1c <g_log@plt>
   10ec0:	ldr	r0, [sp, #16]
   10ec4:	bl	10a10 <g_error_free@plt>
   10ec8:	mov	r0, r7
   10ecc:	bl	1095c <g_object_unref@plt>
   10ed0:	ldr	r2, [sp, #20]
   10ed4:	ldr	r3, [r4]
   10ed8:	cmp	r2, r3
   10edc:	bne	10ef0 <exit@plt+0x4bc>
   10ee0:	add	sp, sp, #28
   10ee4:	pop	{r4, r5, r6, r7, pc}
   10ee8:	bl	109e0 <g_variant_unref@plt>
   10eec:	b	10ec8 <exit@plt+0x494>
   10ef0:	bl	109d4 <__stack_chk_fail@plt>
   10ef4:	push	{r4, r5, r6, r7, lr}
   10ef8:	movw	r4, #8472	; 0x2118
   10efc:	movt	r4, #2
   10f00:	sub	sp, sp, #28
   10f04:	mov	r5, r0
   10f08:	ldr	r3, [r4]
   10f0c:	str	r3, [sp, #20]
   10f10:	bl	10d30 <exit@plt+0x2fc>
   10f14:	subs	r7, r0, #0
   10f18:	beq	10f90 <exit@plt+0x55c>
   10f1c:	add	r6, sp, #24
   10f20:	mov	r1, r5
   10f24:	movw	r0, #4304	; 0x10d0
   10f28:	movt	r0, #1
   10f2c:	mov	r5, #0
   10f30:	str	r5, [r6, #-8]!
   10f34:	bl	10a28 <g_variant_new@plt>
   10f38:	mov	r3, r5
   10f3c:	stmib	sp, {r5, r6}
   10f40:	movw	r1, #4308	; 0x10d4
   10f44:	movt	r1, #1
   10f48:	mov	r2, r0
   10f4c:	mvn	r0, #0
   10f50:	str	r0, [sp]
   10f54:	mov	r0, r7
   10f58:	bl	10974 <g_dbus_proxy_call_sync@plt>
   10f5c:	ldr	r3, [sp, #16]
   10f60:	cmp	r3, r5
   10f64:	beq	10fa8 <exit@plt+0x574>
   10f68:	mov	r0, r5
   10f6c:	ldr	r3, [r3, #8]
   10f70:	movw	r2, #4316	; 0x10dc
   10f74:	mov	r1, #16
   10f78:	movt	r2, #1
   10f7c:	bl	10a1c <g_log@plt>
   10f80:	ldr	r0, [sp, #16]
   10f84:	bl	10a10 <g_error_free@plt>
   10f88:	mov	r0, r7
   10f8c:	bl	1095c <g_object_unref@plt>
   10f90:	ldr	r2, [sp, #20]
   10f94:	ldr	r3, [r4]
   10f98:	cmp	r2, r3
   10f9c:	bne	10fb0 <exit@plt+0x57c>
   10fa0:	add	sp, sp, #28
   10fa4:	pop	{r4, r5, r6, r7, pc}
   10fa8:	bl	109e0 <g_variant_unref@plt>
   10fac:	b	10f88 <exit@plt+0x554>
   10fb0:	bl	109d4 <__stack_chk_fail@plt>
   10fb4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10fb8:	mov	r7, r0
   10fbc:	ldr	r6, [pc, #76]	; 11010 <exit@plt+0x5dc>
   10fc0:	mov	r8, r1
   10fc4:	ldr	r5, [pc, #72]	; 11014 <exit@plt+0x5e0>
   10fc8:	mov	r9, r2
   10fcc:	add	r6, pc, r6
   10fd0:	bl	1090c <_init@@Base>
   10fd4:	add	r5, pc, r5
   10fd8:	rsb	r6, r5, r6
   10fdc:	asrs	r6, r6, #2
   10fe0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10fe4:	sub	r5, r5, #4
   10fe8:	mov	r4, #0
   10fec:	add	r4, r4, #1
   10ff0:	ldr	r3, [r5, #4]!
   10ff4:	mov	r0, r7
   10ff8:	mov	r1, r8
   10ffc:	mov	r2, r9
   11000:	blx	r3
   11004:	cmp	r4, r6
   11008:	bne	10fec <exit@plt+0x5b8>
   1100c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11010:	andeq	r0, r1, r4, lsl pc
   11014:	andeq	r0, r1, r8, lsl #30
   11018:	bx	lr

Disassembly of section .fini:

0001101c <_fini@@Base>:
   1101c:	push	{r3, lr}
   11020:	pop	{r3, pc}
