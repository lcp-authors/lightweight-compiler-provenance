
centos-preinstalled/xgamma:     file format elf32-littlearm


Disassembly of section .init:

00010854 <_init@@Base>:
   10854:	push	{r3, lr}
   10858:	bl	1112c <abort@plt+0x7e0>
   1085c:	pop	{r3, pc}

Disassembly of section .plt:

00010860 <strcmp@plt-0x14>:
   10860:	push	{lr}		; (str lr, [sp, #-4]!)
   10864:	ldr	lr, [pc, #4]	; 10870 <_init@@Base+0x1c>
   10868:	add	lr, pc, lr
   1086c:	ldr	pc, [lr, #8]!
   10870:	muleq	r1, r0, r7

00010874 <strcmp@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #69632	; 0x11000
   1087c:	ldr	pc, [ip, #1936]!	; 0x790

00010880 <strtol@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #69632	; 0x11000
   10888:	ldr	pc, [ip, #1928]!	; 0x788

0001088c <XF86VidModeGetGamma@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #1920]!	; 0x780

00010898 <XF86VidModeSetGamma@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1912]!	; 0x778

000108a4 <XF86VidModeQueryVersion@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1904]!	; 0x770

000108b0 <fwrite@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1896]!	; 0x768

000108bc <puts@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1888]!	; 0x760

000108c8 <__libc_start_main@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1880]!	; 0x758

000108d4 <XOpenDisplay@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1872]!	; 0x750

000108e0 <__gmon_start__@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1864]!	; 0x748

000108ec <exit@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1856]!	; 0x740

000108f8 <strlen@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1848]!	; 0x738

00010904 <XDisplayName@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1840]!	; 0x730

00010910 <strtod@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1832]!	; 0x728

0001091c <__fprintf_chk@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1824]!	; 0x720

00010928 <XF86VidModeQueryExtension@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1816]!	; 0x718

00010934 <XCloseDisplay@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1808]!	; 0x710

00010940 <strncmp@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1800]!	; 0x708

0001094c <abort@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1792]!	; 0x700

Disassembly of section .text:

00010958 <.text>:
   10958:	movw	r3, #8288	; 0x2060
   1095c:	movt	r3, #2
   10960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10964:	vpush	{d8-d11}
   10968:	movw	r7, #8304	; 0x2070
   1096c:	ldr	r2, [r1]
   10970:	sub	sp, sp, #60	; 0x3c
   10974:	ldr	r3, [r3]
   10978:	movt	r7, #2
   1097c:	cmp	r0, #1
   10980:	mov	r5, r1
   10984:	mov	r6, r0
   10988:	str	r2, [sp, #28]
   1098c:	str	r3, [sp, #52]	; 0x34
   10990:	str	r2, [r7]
   10994:	ble	10e20 <abort@plt+0x4d4>
   10998:	ldr	r4, [r1, #4]
   1099c:	ldrb	r3, [r4]
   109a0:	cmp	r3, #45	; 0x2d
   109a4:	bne	10a1c <abort@plt+0xd0>
   109a8:	vmov.f32	s18, #240	; 0xbf800000 -1.0
   109ac:	mov	r8, #0
   109b0:	mov	r9, r8
   109b4:	mov	sl, #1
   109b8:	mvn	r3, #0
   109bc:	vldr	d8, [pc, #996]	; 10da8 <abort@plt+0x45c>
   109c0:	str	r3, [sp, #32]
   109c4:	vmov.f32	s22, #36	; 0x41200000  10.0
   109c8:	vmov.f32	s21, s18
   109cc:	vmov.f32	s20, s18
   109d0:	vmov.f32	s19, s18
   109d4:	movw	r0, #5432	; 0x1538
   109d8:	mov	r1, r4
   109dc:	movt	r0, #1
   109e0:	mov	r2, #1
   109e4:	bl	1128c <abort@plt+0x940>
   109e8:	cmp	r0, #0
   109ec:	beq	10a48 <abort@plt+0xfc>
   109f0:	add	sl, sl, #1
   109f4:	cmp	r6, sl
   109f8:	ble	10b80 <abort@plt+0x234>
   109fc:	ldr	r9, [r5, sl, lsl #2]
   10a00:	add	sl, sl, #1
   10a04:	cmp	r6, sl
   10a08:	ble	10c90 <abort@plt+0x344>
   10a0c:	ldr	r4, [r5, sl, lsl #2]
   10a10:	ldrb	r2, [r4]
   10a14:	cmp	r2, #45	; 0x2d
   10a18:	beq	109d4 <abort@plt+0x88>
   10a1c:	movw	r2, #8296	; 0x2068
   10a20:	movt	r2, #2
   10a24:	str	r4, [sp]
   10a28:	mov	r1, #1
   10a2c:	ldr	r0, [r2]
   10a30:	movw	r2, #5920	; 0x1720
   10a34:	ldr	r3, [sp, #28]
   10a38:	movt	r2, #1
   10a3c:	bl	1091c <__fprintf_chk@plt>
   10a40:	mov	r0, #0
   10a44:	bl	11224 <abort@plt+0x8d8>
   10a48:	movw	r0, #5476	; 0x1564
   10a4c:	mov	r1, r4
   10a50:	movt	r0, #1
   10a54:	mov	r2, #1
   10a58:	bl	1128c <abort@plt+0x940>
   10a5c:	subs	fp, r0, #0
   10a60:	bne	10ab8 <abort@plt+0x16c>
   10a64:	movw	r0, #5484	; 0x156c
   10a68:	mov	r1, r4
   10a6c:	movt	r0, #1
   10a70:	mov	r2, #1
   10a74:	bl	1128c <abort@plt+0x940>
   10a78:	cmp	r0, #0
   10a7c:	str	r0, [sp, #36]	; 0x24
   10a80:	bne	10e50 <abort@plt+0x504>
   10a84:	movw	r0, #5512	; 0x1588
   10a88:	mov	r1, r4
   10a8c:	movt	r0, #1
   10a90:	mov	r2, #1
   10a94:	bl	1128c <abort@plt+0x940>
   10a98:	subs	fp, r0, #0
   10a9c:	beq	10ac0 <abort@plt+0x174>
   10aa0:	add	sl, sl, #1
   10aa4:	cmp	r6, sl
   10aa8:	bgt	10b8c <abort@plt+0x240>
   10aac:	movw	r0, #5520	; 0x1590
   10ab0:	movt	r0, #1
   10ab4:	bl	11224 <abort@plt+0x8d8>
   10ab8:	mov	r8, #1
   10abc:	b	10a00 <abort@plt+0xb4>
   10ac0:	movw	r0, #5552	; 0x15b0
   10ac4:	mov	r1, r4
   10ac8:	movt	r0, #1
   10acc:	mov	r2, #2
   10ad0:	bl	1128c <abort@plt+0x940>
   10ad4:	subs	ip, r0, #0
   10ad8:	beq	10ba4 <abort@plt+0x258>
   10adc:	add	sl, sl, #1
   10ae0:	cmp	r6, sl
   10ae4:	ble	10fa0 <abort@plt+0x654>
   10ae8:	vcmpe.f32	s20, #0.0
   10aec:	vmrs	APSR_nzcv, fpscr
   10af0:	bge	10e64 <abort@plt+0x518>
   10af4:	vcmpe.f32	s21, #0.0
   10af8:	vmrs	APSR_nzcv, fpscr
   10afc:	bge	10e64 <abort@plt+0x518>
   10b00:	vcmpe.f32	s18, #0.0
   10b04:	vmrs	APSR_nzcv, fpscr
   10b08:	bge	10e64 <abort@plt+0x518>
   10b0c:	mov	r1, fp
   10b10:	ldr	r0, [r5, sl, lsl #2]
   10b14:	bl	10910 <strtod@plt>
   10b18:	vcvt.f32.f64	s19, d0
   10b1c:	vcvt.f64.f32	d7, s19
   10b20:	vcmpe.f64	d7, d8
   10b24:	vmrs	APSR_nzcv, fpscr
   10b28:	bmi	10b38 <abort@plt+0x1ec>
   10b2c:	vcmpe.f32	s19, s22
   10b30:	vmrs	APSR_nzcv, fpscr
   10b34:	ble	10a00 <abort@plt+0xb4>
   10b38:	movw	r3, #8296	; 0x2068
   10b3c:	movt	r3, #2
   10b40:	mov	r4, #0
   10b44:	mov	r5, #0
   10b48:	movw	r0, #39322	; 0x999a
   10b4c:	movt	r5, #16420	; 0x4024
   10b50:	movt	r0, #39321	; 0x9999
   10b54:	movw	r1, #39321	; 0x9999
   10b58:	movw	r2, #5644	; 0x160c
   10b5c:	movt	r1, #16313	; 0x3fb9
   10b60:	movt	r2, #1
   10b64:	strd	r0, [sp]
   10b68:	mov	r1, #1
   10b6c:	ldr	r0, [r3]
   10b70:	strd	r4, [sp, #8]
   10b74:	bl	1091c <__fprintf_chk@plt>
   10b78:	mov	r0, #1
   10b7c:	bl	108ec <exit@plt>
   10b80:	movw	r0, #5444	; 0x1544
   10b84:	movt	r0, #1
   10b88:	bl	11224 <abort@plt+0x8d8>
   10b8c:	ldr	r1, [sp, #36]	; 0x24
   10b90:	mov	r2, #10
   10b94:	ldr	r0, [r5, sl, lsl #2]
   10b98:	bl	10880 <strtol@plt>
   10b9c:	str	r0, [sp, #32]
   10ba0:	b	10a00 <abort@plt+0xb4>
   10ba4:	movw	r0, #5692	; 0x163c
   10ba8:	mov	r1, r4
   10bac:	movt	r0, #1
   10bb0:	mov	r2, #2
   10bb4:	str	ip, [sp, #24]
   10bb8:	bl	1128c <abort@plt+0x940>
   10bbc:	ldr	ip, [sp, #24]
   10bc0:	subs	fp, r0, #0
   10bc4:	beq	10c10 <abort@plt+0x2c4>
   10bc8:	add	sl, sl, #1
   10bcc:	cmp	r6, sl
   10bd0:	ble	10ffc <abort@plt+0x6b0>
   10bd4:	vcmpe.f32	s19, #0.0
   10bd8:	vmrs	APSR_nzcv, fpscr
   10bdc:	bge	10ff0 <abort@plt+0x6a4>
   10be0:	mov	r1, ip
   10be4:	ldr	r0, [r5, sl, lsl #2]
   10be8:	bl	10910 <strtod@plt>
   10bec:	vcvt.f32.f64	s20, d0
   10bf0:	vcvt.f64.f32	d7, s20
   10bf4:	vcmpe.f64	d7, d8
   10bf8:	vmrs	APSR_nzcv, fpscr
   10bfc:	bmi	10b38 <abort@plt+0x1ec>
   10c00:	vcmpe.f32	s20, s22
   10c04:	vmrs	APSR_nzcv, fpscr
   10c08:	ble	10a00 <abort@plt+0xb4>
   10c0c:	b	10b38 <abort@plt+0x1ec>
   10c10:	movw	r0, #5768	; 0x1688
   10c14:	mov	r1, r4
   10c18:	movt	r0, #1
   10c1c:	mov	r2, #2
   10c20:	bl	1128c <abort@plt+0x940>
   10c24:	cmp	r0, #0
   10c28:	bne	10db0 <abort@plt+0x464>
   10c2c:	movw	r0, #5636	; 0x1604
   10c30:	mov	r1, r4
   10c34:	movt	r0, #1
   10c38:	mov	r2, #2
   10c3c:	bl	1128c <abort@plt+0x940>
   10c40:	cmp	r0, #0
   10c44:	beq	110c0 <abort@plt+0x774>
   10c48:	add	sl, sl, #1
   10c4c:	cmp	r6, sl
   10c50:	ble	110b4 <abort@plt+0x768>
   10c54:	vcmpe.f32	s19, #0.0
   10c58:	vmrs	APSR_nzcv, fpscr
   10c5c:	bge	11090 <abort@plt+0x744>
   10c60:	ldr	r0, [r5, sl, lsl #2]
   10c64:	mov	r1, #0
   10c68:	bl	10910 <strtod@plt>
   10c6c:	vcvt.f32.f64	s18, d0
   10c70:	vcvt.f64.f32	d7, s18
   10c74:	vcmpe.f64	d7, d8
   10c78:	vmrs	APSR_nzcv, fpscr
   10c7c:	bmi	10b38 <abort@plt+0x1ec>
   10c80:	vcmpe.f32	s18, s22
   10c84:	vmrs	APSR_nzcv, fpscr
   10c88:	ble	10a00 <abort@plt+0xb4>
   10c8c:	b	10b38 <abort@plt+0x1ec>
   10c90:	mov	r0, r9
   10c94:	bl	108d4 <XOpenDisplay@plt>
   10c98:	subs	r5, r0, #0
   10c9c:	beq	10f64 <abort@plt+0x618>
   10ca0:	ldr	r3, [sp, #32]
   10ca4:	cmn	r3, #1
   10ca8:	beq	10e44 <abort@plt+0x4f8>
   10cac:	movw	r4, #8304	; 0x2070
   10cb0:	movt	r4, #2
   10cb4:	add	r1, r4, #4
   10cb8:	add	r2, r4, #8
   10cbc:	mov	r0, r5
   10cc0:	bl	108a4 <XF86VidModeQueryVersion@plt>
   10cc4:	cmp	r0, #0
   10cc8:	beq	10df8 <abort@plt+0x4ac>
   10ccc:	mov	r0, r5
   10cd0:	add	r1, r4, #12
   10cd4:	add	r2, r4, #16
   10cd8:	bl	10928 <XF86VidModeQueryExtension@plt>
   10cdc:	cmp	r0, #0
   10ce0:	beq	10e70 <abort@plt+0x524>
   10ce4:	ldr	r3, [r4, #4]
   10ce8:	cmp	r3, #1
   10cec:	ble	10ee4 <abort@plt+0x598>
   10cf0:	cmp	r3, #2
   10cf4:	bne	10d04 <abort@plt+0x3b8>
   10cf8:	ldr	r2, [r4, #8]
   10cfc:	cmp	r2, #0
   10d00:	blt	10ee4 <abort@plt+0x598>
   10d04:	mov	r0, r5
   10d08:	ldr	r1, [sp, #32]
   10d0c:	add	r2, sp, #40	; 0x28
   10d10:	bl	1088c <XF86VidModeGetGamma@plt>
   10d14:	cmp	r0, #0
   10d18:	beq	10f30 <abort@plt+0x5e4>
   10d1c:	cmp	r8, #0
   10d20:	beq	10fac <abort@plt+0x660>
   10d24:	vcmpe.f32	s19, #0.0
   10d28:	vmrs	APSR_nzcv, fpscr
   10d2c:	bge	10e98 <abort@plt+0x54c>
   10d30:	vcmpe.f32	s20, #0.0
   10d34:	vmrs	APSR_nzcv, fpscr
   10d38:	blt	11008 <abort@plt+0x6bc>
   10d3c:	vstr	s20, [sp, #40]	; 0x28
   10d40:	vcmpe.f32	s21, #0.0
   10d44:	mov	r0, r5
   10d48:	ldr	r1, [sp, #32]
   10d4c:	add	r2, sp, #40	; 0x28
   10d50:	vmrs	APSR_nzcv, fpscr
   10d54:	vcmpe.f32	s18, #0.0
   10d58:	vstrge	s21, [sp, #44]	; 0x2c
   10d5c:	vmrs	APSR_nzcv, fpscr
   10d60:	vstrge	s18, [sp, #48]	; 0x30
   10d64:	bl	10898 <XF86VidModeSetGamma@plt>
   10d68:	cmp	r0, #0
   10d6c:	bne	10ebc <abort@plt+0x570>
   10d70:	movw	r3, #8296	; 0x2068
   10d74:	movt	r3, #2
   10d78:	movw	r0, #6260	; 0x1874
   10d7c:	mov	r1, #1
   10d80:	ldr	r3, [r3]
   10d84:	movt	r0, #1
   10d88:	mov	r2, #31
   10d8c:	mov	r8, #2
   10d90:	bl	108b0 <fwrite@plt>
   10d94:	mov	r0, r5
   10d98:	bl	10934 <XCloseDisplay@plt>
   10d9c:	mov	r0, r8
   10da0:	bl	108ec <exit@plt>
   10da4:	nop	{0}
   10da8:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   10dac:	svccc	0x00b99999
   10db0:	add	sl, sl, #1
   10db4:	cmp	r6, sl
   10db8:	ble	110a8 <abort@plt+0x75c>
   10dbc:	vcmpe.f32	s19, #0.0
   10dc0:	vmrs	APSR_nzcv, fpscr
   10dc4:	bge	1109c <abort@plt+0x750>
   10dc8:	mov	r1, fp
   10dcc:	ldr	r0, [r5, sl, lsl #2]
   10dd0:	bl	10910 <strtod@plt>
   10dd4:	vcvt.f32.f64	s21, d0
   10dd8:	vcvt.f64.f32	d7, s21
   10ddc:	vcmpe.f64	d7, d8
   10de0:	vmrs	APSR_nzcv, fpscr
   10de4:	bmi	10b38 <abort@plt+0x1ec>
   10de8:	vcmpe.f32	s21, s22
   10dec:	vmrs	APSR_nzcv, fpscr
   10df0:	ble	10a00 <abort@plt+0xb4>
   10df4:	b	10b38 <abort@plt+0x1ec>
   10df8:	movw	r3, #8296	; 0x2068
   10dfc:	movt	r3, #2
   10e00:	movw	r0, #5988	; 0x1764
   10e04:	mov	r1, #1
   10e08:	ldr	r3, [r3]
   10e0c:	movt	r0, #1
   10e10:	mov	r2, #40	; 0x28
   10e14:	bl	108b0 <fwrite@plt>
   10e18:	mov	r0, #2
   10e1c:	bl	108ec <exit@plt>
   10e20:	mov	r0, #0
   10e24:	bl	108d4 <XOpenDisplay@plt>
   10e28:	subs	r5, r0, #0
   10e2c:	beq	10f60 <abort@plt+0x614>
   10e30:	vmov.f32	s18, #240	; 0xbf800000 -1.0
   10e34:	mov	r8, #0
   10e38:	vmov.f32	s21, s18
   10e3c:	vmov.f32	s20, s18
   10e40:	vmov.f32	s19, s18
   10e44:	ldr	r3, [r5, #132]	; 0x84
   10e48:	str	r3, [sp, #32]
   10e4c:	b	10cac <abort@plt+0x360>
   10e50:	movw	r0, #5496	; 0x1578
   10e54:	movt	r0, #1
   10e58:	bl	108bc <puts@plt>
   10e5c:	mov	r0, fp
   10e60:	bl	108ec <exit@plt>
   10e64:	movw	r0, #5588	; 0x15d4
   10e68:	movt	r0, #1
   10e6c:	bl	11224 <abort@plt+0x8d8>
   10e70:	movw	r3, #8296	; 0x2068
   10e74:	movt	r3, #2
   10e78:	movw	r0, #6032	; 0x1790
   10e7c:	mov	r1, #1
   10e80:	ldr	r3, [r3]
   10e84:	movt	r0, #1
   10e88:	mov	r2, #44	; 0x2c
   10e8c:	bl	108b0 <fwrite@plt>
   10e90:	mov	r0, #2
   10e94:	bl	108ec <exit@plt>
   10e98:	mov	r0, r5
   10e9c:	ldr	r1, [sp, #32]
   10ea0:	add	r2, sp, #40	; 0x28
   10ea4:	vstr	s19, [sp, #40]	; 0x28
   10ea8:	vstr	s19, [sp, #44]	; 0x2c
   10eac:	vstr	s19, [sp, #48]	; 0x30
   10eb0:	bl	10898 <XF86VidModeSetGamma@plt>
   10eb4:	cmp	r0, #0
   10eb8:	beq	10d70 <abort@plt+0x424>
   10ebc:	ldr	r1, [sp, #32]
   10ec0:	add	r2, sp, #40	; 0x28
   10ec4:	mov	r0, r5
   10ec8:	bl	1088c <XF86VidModeGetGamma@plt>
   10ecc:	cmp	r0, #0
   10ed0:	beq	11024 <abort@plt+0x6d8>
   10ed4:	cmp	r8, #0
   10ed8:	beq	1104c <abort@plt+0x700>
   10edc:	mov	r8, #0
   10ee0:	b	10d94 <abort@plt+0x448>
   10ee4:	ldr	r0, [r7, #8]
   10ee8:	movw	r4, #8296	; 0x2068
   10eec:	movt	r4, #2
   10ef0:	mov	r1, #1
   10ef4:	movw	r2, #6080	; 0x17c0
   10ef8:	movt	r2, #1
   10efc:	str	r0, [sp]
   10f00:	ldr	r0, [r4]
   10f04:	bl	1091c <__fprintf_chk@plt>
   10f08:	ldr	r0, [r4]
   10f0c:	mov	r3, #0
   10f10:	movw	r2, #6148	; 0x1804
   10f14:	str	r3, [sp]
   10f18:	movt	r2, #1
   10f1c:	mov	r1, #1
   10f20:	mov	r3, #2
   10f24:	bl	1091c <__fprintf_chk@plt>
   10f28:	mov	r0, #2
   10f2c:	bl	108ec <exit@plt>
   10f30:	movw	r3, #8296	; 0x2068
   10f34:	movt	r3, #2
   10f38:	mov	r1, #1
   10f3c:	mov	r2, #33	; 0x21
   10f40:	ldr	r3, [r3]
   10f44:	movw	r0, #6184	; 0x1828
   10f48:	movt	r0, #1
   10f4c:	bl	108b0 <fwrite@plt>
   10f50:	mov	r0, r5
   10f54:	bl	10934 <XCloseDisplay@plt>
   10f58:	mov	r0, #2
   10f5c:	bl	108ec <exit@plt>
   10f60:	mov	r9, r5
   10f64:	movw	r2, #8296	; 0x2068
   10f68:	movt	r2, #2
   10f6c:	mov	r0, r9
   10f70:	ldr	r5, [r7]
   10f74:	ldr	r4, [r2]
   10f78:	bl	10904 <XDisplayName@plt>
   10f7c:	movw	r2, #5952	; 0x1740
   10f80:	mov	r1, #1
   10f84:	mov	r3, r5
   10f88:	movt	r2, #1
   10f8c:	str	r0, [sp]
   10f90:	mov	r0, r4
   10f94:	bl	1091c <__fprintf_chk@plt>
   10f98:	mov	r0, #1
   10f9c:	bl	108ec <exit@plt>
   10fa0:	movw	r0, #5560	; 0x15b8
   10fa4:	movt	r0, #1
   10fa8:	bl	11224 <abort@plt+0x8d8>
   10fac:	vldr	s10, [sp, #40]	; 0x28
   10fb0:	vldr	s12, [sp, #44]	; 0x2c
   10fb4:	vldr	s14, [sp, #48]	; 0x30
   10fb8:	vcvt.f64.f32	d5, s10
   10fbc:	movw	r3, #8296	; 0x2068
   10fc0:	movt	r3, #2
   10fc4:	movw	r2, #6220	; 0x184c
   10fc8:	mov	r1, #1
   10fcc:	ldr	r0, [r3]
   10fd0:	movt	r2, #1
   10fd4:	vcvt.f64.f32	d6, s12
   10fd8:	vstr	d5, [sp]
   10fdc:	vcvt.f64.f32	d7, s14
   10fe0:	vstr	d6, [sp, #8]
   10fe4:	vstr	d7, [sp, #16]
   10fe8:	bl	1091c <__fprintf_chk@plt>
   10fec:	b	10d24 <abort@plt+0x3d8>
   10ff0:	movw	r0, #5732	; 0x1664
   10ff4:	movt	r0, #1
   10ff8:	bl	11224 <abort@plt+0x8d8>
   10ffc:	movw	r0, #5700	; 0x1644
   11000:	movt	r0, #1
   11004:	bl	11224 <abort@plt+0x8d8>
   11008:	vcmpe.f32	s21, #0.0
   1100c:	vmrs	APSR_nzcv, fpscr
   11010:	blt	110e0 <abort@plt+0x794>
   11014:	vcmpe.f32	s20, #0.0
   11018:	vmrs	APSR_nzcv, fpscr
   1101c:	blt	10d40 <abort@plt+0x3f4>
   11020:	b	10d3c <abort@plt+0x3f0>
   11024:	movw	r3, #8296	; 0x2068
   11028:	movt	r3, #2
   1102c:	movw	r0, #6184	; 0x1828
   11030:	mov	r1, #1
   11034:	ldr	r3, [r3]
   11038:	mov	r2, #33	; 0x21
   1103c:	movt	r0, #1
   11040:	mov	r8, #2
   11044:	bl	108b0 <fwrite@plt>
   11048:	b	10d94 <abort@plt+0x448>
   1104c:	vldr	s10, [sp, #40]	; 0x28
   11050:	vldr	s12, [sp, #44]	; 0x2c
   11054:	vldr	s14, [sp, #48]	; 0x30
   11058:	vcvt.f64.f32	d5, s10
   1105c:	movw	r3, #8296	; 0x2068
   11060:	movt	r3, #2
   11064:	movw	r2, #6292	; 0x1894
   11068:	mov	r1, #1
   1106c:	ldr	r0, [r3]
   11070:	movt	r2, #1
   11074:	vcvt.f64.f32	d6, s12
   11078:	vstr	d5, [sp]
   1107c:	vcvt.f64.f32	d7, s14
   11080:	vstr	d6, [sp, #8]
   11084:	vstr	d7, [sp, #16]
   11088:	bl	1091c <__fprintf_chk@plt>
   1108c:	b	10d94 <abort@plt+0x448>
   11090:	movw	r0, #5876	; 0x16f4
   11094:	movt	r0, #1
   11098:	bl	11224 <abort@plt+0x8d8>
   1109c:	movw	r0, #5808	; 0x16b0
   110a0:	movt	r0, #1
   110a4:	bl	11224 <abort@plt+0x8d8>
   110a8:	movw	r0, #5776	; 0x1690
   110ac:	movt	r0, #1
   110b0:	bl	11224 <abort@plt+0x8d8>
   110b4:	movw	r0, #5844	; 0x16d4
   110b8:	movt	r0, #1
   110bc:	bl	11224 <abort@plt+0x8d8>
   110c0:	movw	r0, #5912	; 0x1718
   110c4:	mov	r1, r4
   110c8:	movt	r0, #1
   110cc:	mov	r2, #1
   110d0:	bl	1128c <abort@plt+0x940>
   110d4:	cmp	r0, #0
   110d8:	bne	10a40 <abort@plt+0xf4>
   110dc:	b	10a1c <abort@plt+0xd0>
   110e0:	vcmpe.f32	s18, #0.0
   110e4:	vmrs	APSR_nzcv, fpscr
   110e8:	bge	11014 <abort@plt+0x6c8>
   110ec:	b	10edc <abort@plt+0x590>
   110f0:	mov	fp, #0
   110f4:	mov	lr, #0
   110f8:	pop	{r1}		; (ldr r1, [sp], #4)
   110fc:	mov	r2, sp
   11100:	push	{r2}		; (str r2, [sp, #-4]!)
   11104:	push	{r0}		; (str r0, [sp, #-4]!)
   11108:	ldr	ip, [pc, #16]	; 11120 <abort@plt+0x7d4>
   1110c:	push	{ip}		; (str ip, [sp, #-4]!)
   11110:	ldr	r0, [pc, #12]	; 11124 <abort@plt+0x7d8>
   11114:	ldr	r3, [pc, #12]	; 11128 <abort@plt+0x7dc>
   11118:	bl	108c8 <__libc_start_main@plt>
   1111c:	bl	1094c <abort@plt>
   11120:	andeq	r1, r1, ip, ror #6
   11124:	andeq	r0, r1, r8, asr r9
   11128:	andeq	r1, r1, r8, lsl #6
   1112c:	ldr	r3, [pc, #20]	; 11148 <abort@plt+0x7fc>
   11130:	ldr	r2, [pc, #20]	; 1114c <abort@plt+0x800>
   11134:	add	r3, pc, r3
   11138:	ldr	r2, [r3, r2]
   1113c:	cmp	r2, #0
   11140:	bxeq	lr
   11144:	b	108e0 <__gmon_start__@plt>
   11148:	andeq	r0, r1, r4, asr #29
   1114c:	andeq	r0, r0, r8, asr r0
   11150:	push	{r3, lr}
   11154:	movw	r0, #8288	; 0x2060
   11158:	ldr	r3, [pc, #36]	; 11184 <abort@plt+0x838>
   1115c:	movt	r0, #2
   11160:	rsb	r3, r0, r3
   11164:	cmp	r3, #6
   11168:	popls	{r3, pc}
   1116c:	movw	r3, #0
   11170:	movt	r3, #0
   11174:	cmp	r3, #0
   11178:	popeq	{r3, pc}
   1117c:	blx	r3
   11180:	pop	{r3, pc}
   11184:	andeq	r2, r2, r3, rrx
   11188:	push	{r3, lr}
   1118c:	movw	r0, #8288	; 0x2060
   11190:	movw	r3, #8288	; 0x2060
   11194:	movt	r0, #2
   11198:	movt	r3, #2
   1119c:	rsb	r3, r0, r3
   111a0:	asr	r3, r3, #2
   111a4:	add	r3, r3, r3, lsr #31
   111a8:	asrs	r1, r3, #1
   111ac:	popeq	{r3, pc}
   111b0:	movw	r2, #0
   111b4:	movt	r2, #0
   111b8:	cmp	r2, #0
   111bc:	popeq	{r3, pc}
   111c0:	blx	r2
   111c4:	pop	{r3, pc}
   111c8:	push	{r4, lr}
   111cc:	movw	r4, #8300	; 0x206c
   111d0:	movt	r4, #2
   111d4:	ldrb	r3, [r4]
   111d8:	cmp	r3, #0
   111dc:	popne	{r4, pc}
   111e0:	bl	11150 <abort@plt+0x804>
   111e4:	mov	r3, #1
   111e8:	strb	r3, [r4]
   111ec:	pop	{r4, pc}
   111f0:	movw	r0, #7924	; 0x1ef4
   111f4:	movt	r0, #2
   111f8:	push	{r3, lr}
   111fc:	ldr	r3, [r0]
   11200:	cmp	r3, #0
   11204:	beq	1121c <abort@plt+0x8d0>
   11208:	movw	r3, #0
   1120c:	movt	r3, #0
   11210:	cmp	r3, #0
   11214:	beq	1121c <abort@plt+0x8d0>
   11218:	blx	r3
   1121c:	pop	{r3, lr}
   11220:	b	11188 <abort@plt+0x83c>
   11224:	cmp	r0, #0
   11228:	push	{r4, r5, lr}
   1122c:	movw	r5, #8296	; 0x2068
   11230:	movw	r4, #8304	; 0x2070
   11234:	sub	sp, sp, #12
   11238:	movt	r5, #2
   1123c:	movt	r4, #2
   11240:	beq	11260 <abort@plt+0x914>
   11244:	str	r0, [sp]
   11248:	movw	r2, #4992	; 0x1380
   1124c:	ldr	r0, [r5]
   11250:	movt	r2, #1
   11254:	ldr	r3, [r4]
   11258:	mov	r1, #1
   1125c:	bl	1091c <__fprintf_chk@plt>
   11260:	ldr	r0, [r5]
   11264:	movw	r1, #5032	; 0x13a8
   11268:	ldr	r3, [r4]
   1126c:	movt	r1, #1
   11270:	movw	r2, #5004	; 0x138c
   11274:	str	r1, [sp]
   11278:	movt	r2, #1
   1127c:	mov	r1, #1
   11280:	bl	1091c <__fprintf_chk@plt>
   11284:	mov	r0, #1
   11288:	bl	108ec <exit@plt>
   1128c:	push	{r3, r4, r5, r6, r7, lr}
   11290:	mov	r6, r2
   11294:	mov	r5, r0
   11298:	mov	r4, r1
   1129c:	bl	10874 <strcmp@plt>
   112a0:	cmp	r0, #0
   112a4:	beq	11300 <abort@plt+0x9b4>
   112a8:	mov	r0, r5
   112ac:	bl	108f8 <strlen@plt>
   112b0:	mov	r7, r0
   112b4:	mov	r0, r4
   112b8:	bl	108f8 <strlen@plt>
   112bc:	cmp	r7, r0
   112c0:	mov	r2, r0
   112c4:	movhi	r7, #0
   112c8:	movls	r7, #1
   112cc:	cmp	r6, r0
   112d0:	movls	r6, r7
   112d4:	orrhi	r6, r7, #1
   112d8:	cmp	r6, #0
   112dc:	bne	112f8 <abort@plt+0x9ac>
   112e0:	mov	r0, r5
   112e4:	mov	r1, r4
   112e8:	bl	10940 <strncmp@plt>
   112ec:	rsbs	r0, r0, #1
   112f0:	movcc	r0, #0
   112f4:	pop	{r3, r4, r5, r6, r7, pc}
   112f8:	mov	r0, #0
   112fc:	pop	{r3, r4, r5, r6, r7, pc}
   11300:	mov	r0, #1
   11304:	pop	{r3, r4, r5, r6, r7, pc}
   11308:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1130c:	mov	r7, r0
   11310:	ldr	r6, [pc, #76]	; 11364 <abort@plt+0xa18>
   11314:	mov	r8, r1
   11318:	ldr	r5, [pc, #72]	; 11368 <abort@plt+0xa1c>
   1131c:	mov	r9, r2
   11320:	add	r6, pc, r6
   11324:	bl	10854 <_init@@Base>
   11328:	add	r5, pc, r5
   1132c:	rsb	r6, r5, r6
   11330:	asrs	r6, r6, #2
   11334:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11338:	sub	r5, r5, #4
   1133c:	mov	r4, #0
   11340:	add	r4, r4, #1
   11344:	ldr	r3, [r5, #4]!
   11348:	mov	r0, r7
   1134c:	mov	r1, r8
   11350:	mov	r2, r9
   11354:	blx	r3
   11358:	cmp	r4, r6
   1135c:	bne	11340 <abort@plt+0x9f4>
   11360:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11364:	andeq	r0, r1, r8, asr #23
   11368:			; <UNDEFINED> instruction: 0x00010bbc
   1136c:	bx	lr

Disassembly of section .fini:

00011370 <_fini@@Base>:
   11370:	push	{r3, lr}
   11374:	pop	{r3, pc}
