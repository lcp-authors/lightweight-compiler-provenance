
centos-preinstalled/nl-link-name2ifindex:     file format elf32-littlearm


Disassembly of section .init:

000105c4 <.init>:
   105c4:	push	{r3, lr}
   105c8:	bl	10720 <exit@plt+0xc4>
   105cc:	pop	{r3, pc}

Disassembly of section .plt:

000105d0 <abort@plt-0x14>:
   105d0:	push	{lr}		; (str lr, [sp, #-4]!)
   105d4:	ldr	lr, [pc, #4]	; 105e0 <abort@plt-0x4>
   105d8:	add	lr, pc, lr
   105dc:	ldr	pc, [lr, #8]!
   105e0:	andeq	r0, r1, r0, lsr #20

000105e4 <abort@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #16, 20	; 0x10000
   105ec:	ldr	pc, [ip, #2592]!	; 0xa20

000105f0 <nl_cli_fatal@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #16, 20	; 0x10000
   105f8:	ldr	pc, [ip, #2584]!	; 0xa18

000105fc <__libc_start_main@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #16, 20	; 0x10000
   10604:	ldr	pc, [ip, #2576]!	; 0xa10

00010608 <__gmon_start__@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2568]!	; 0xa08

00010614 <__printf_chk@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #16, 20	; 0x10000
   1061c:	ldr	pc, [ip, #2560]!	; 0xa00

00010620 <nl_cli_alloc_socket@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #16, 20	; 0x10000
   10628:	ldr	pc, [ip, #2552]!	; 0x9f8

0001062c <rtnl_link_name2i@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #16, 20	; 0x10000
   10634:	ldr	pc, [ip, #2544]!	; 0x9f0

00010638 <nl_cli_link_alloc_cache@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #16, 20	; 0x10000
   10640:	ldr	pc, [ip, #2536]!	; 0x9e8

00010644 <puts@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #16, 20	; 0x10000
   1064c:	ldr	pc, [ip, #2528]!	; 0x9e0

00010650 <nl_cli_connect@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2520]!	; 0x9d8

0001065c <exit@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2512]!	; 0x9d0

Disassembly of section .text:

00010668 <.text>:
   10668:	cmp	r0, #1
   1066c:	push	{r3, r4, r5, lr}
   10670:	mov	r4, r1
   10674:	ble	106d0 <exit@plt+0x74>
   10678:	bl	10620 <nl_cli_alloc_socket@plt>
   1067c:	mov	r1, #0
   10680:	mov	r5, r0
   10684:	bl	10650 <nl_cli_connect@plt>
   10688:	mov	r0, r5
   1068c:	bl	10638 <nl_cli_link_alloc_cache@plt>
   10690:	ldr	r1, [r4, #4]
   10694:	bl	1062c <rtnl_link_name2i@plt>
   10698:	subs	r5, r0, #0
   1069c:	bne	106b4 <exit@plt+0x58>
   106a0:	movw	r1, #2228	; 0x8b4
   106a4:	ldr	r2, [r4, #4]
   106a8:	mov	r0, #2
   106ac:	movt	r1, #1
   106b0:	bl	105f0 <nl_cli_fatal@plt>
   106b4:	mov	r2, r5
   106b8:	movw	r1, #2260	; 0x8d4
   106bc:	mov	r0, #1
   106c0:	movt	r1, #1
   106c4:	bl	10614 <__printf_chk@plt>
   106c8:	mov	r0, #0
   106cc:	pop	{r3, r4, r5, pc}
   106d0:	movw	r0, #2192	; 0x890
   106d4:	movt	r0, #1
   106d8:	bl	10644 <puts@plt>
   106dc:	mov	r0, #0
   106e0:	bl	1065c <exit@plt>
   106e4:	mov	fp, #0
   106e8:	mov	lr, #0
   106ec:	pop	{r1}		; (ldr r1, [sp], #4)
   106f0:	mov	r2, sp
   106f4:	push	{r2}		; (str r2, [sp, #-4]!)
   106f8:	push	{r0}		; (str r0, [sp, #-4]!)
   106fc:	ldr	ip, [pc, #16]	; 10714 <exit@plt+0xb8>
   10700:	push	{ip}		; (str ip, [sp, #-4]!)
   10704:	ldr	r0, [pc, #12]	; 10718 <exit@plt+0xbc>
   10708:	ldr	r3, [pc, #12]	; 1071c <exit@plt+0xc0>
   1070c:	bl	105fc <__libc_start_main@plt>
   10710:	bl	105e4 <abort@plt>
   10714:	andeq	r0, r1, ip, ror r8
   10718:	andeq	r0, r1, r8, ror #12
   1071c:	andeq	r0, r1, r8, lsl r8
   10720:	ldr	r3, [pc, #20]	; 1073c <exit@plt+0xe0>
   10724:	ldr	r2, [pc, #20]	; 10740 <exit@plt+0xe4>
   10728:	add	r3, pc, r3
   1072c:	ldr	r2, [r3, r2]
   10730:	cmp	r2, #0
   10734:	bxeq	lr
   10738:	b	10608 <__gmon_start__@plt>
   1073c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10740:	andeq	r0, r0, r8, lsr r0
   10744:	push	{r3, lr}
   10748:	movw	r0, #4160	; 0x1040
   1074c:	ldr	r3, [pc, #36]	; 10778 <exit@plt+0x11c>
   10750:	movt	r0, #2
   10754:	rsb	r3, r0, r3
   10758:	cmp	r3, #6
   1075c:	popls	{r3, pc}
   10760:	movw	r3, #0
   10764:	movt	r3, #0
   10768:	cmp	r3, #0
   1076c:	popeq	{r3, pc}
   10770:	blx	r3
   10774:	pop	{r3, pc}
   10778:	andeq	r1, r2, r3, asr #32
   1077c:	push	{r3, lr}
   10780:	movw	r0, #4160	; 0x1040
   10784:	movw	r3, #4160	; 0x1040
   10788:	movt	r0, #2
   1078c:	movt	r3, #2
   10790:	rsb	r3, r0, r3
   10794:	asr	r3, r3, #2
   10798:	add	r3, r3, r3, lsr #31
   1079c:	asrs	r1, r3, #1
   107a0:	popeq	{r3, pc}
   107a4:	movw	r2, #0
   107a8:	movt	r2, #0
   107ac:	cmp	r2, #0
   107b0:	popeq	{r3, pc}
   107b4:	blx	r2
   107b8:	pop	{r3, pc}
   107bc:	push	{r4, lr}
   107c0:	movw	r4, #4160	; 0x1040
   107c4:	movt	r4, #2
   107c8:	ldrb	r3, [r4]
   107cc:	cmp	r3, #0
   107d0:	popne	{r4, pc}
   107d4:	bl	10744 <exit@plt+0xe8>
   107d8:	mov	r3, #1
   107dc:	strb	r3, [r4]
   107e0:	pop	{r4, pc}
   107e4:	movw	r0, #3780	; 0xec4
   107e8:	movt	r0, #2
   107ec:	push	{r3, lr}
   107f0:	ldr	r3, [r0]
   107f4:	cmp	r3, #0
   107f8:	beq	10810 <exit@plt+0x1b4>
   107fc:	movw	r3, #0
   10800:	movt	r3, #0
   10804:	cmp	r3, #0
   10808:	beq	10810 <exit@plt+0x1b4>
   1080c:	blx	r3
   10810:	pop	{r3, lr}
   10814:	b	1077c <exit@plt+0x120>
   10818:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1081c:	mov	r7, r0
   10820:	ldr	r6, [pc, #76]	; 10874 <exit@plt+0x218>
   10824:	mov	r8, r1
   10828:	ldr	r5, [pc, #72]	; 10878 <exit@plt+0x21c>
   1082c:	mov	r9, r2
   10830:	add	r6, pc, r6
   10834:	bl	105c4 <abort@plt-0x20>
   10838:	add	r5, pc, r5
   1083c:	rsb	r6, r5, r6
   10840:	asrs	r6, r6, #2
   10844:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10848:	sub	r5, r5, #4
   1084c:	mov	r4, #0
   10850:	add	r4, r4, #1
   10854:	ldr	r3, [r5, #4]!
   10858:	mov	r0, r7
   1085c:	mov	r1, r8
   10860:	mov	r2, r9
   10864:	blx	r3
   10868:	cmp	r4, r6
   1086c:	bne	10850 <exit@plt+0x1f4>
   10870:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10874:	andeq	r0, r1, r8, lsl #13
   10878:	andeq	r0, r1, ip, ror r6
   1087c:	bx	lr

Disassembly of section .fini:

00010880 <.fini>:
   10880:	push	{r3, lr}
   10884:	pop	{r3, pc}
