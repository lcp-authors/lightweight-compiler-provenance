
centos-preinstalled/easylogo:     file format elf32-littlearm


Disassembly of section .init:

000109a0 <.init>:
   109a0:	push	{r3, lr}
   109a4:	bl	10f50 <pclose@plt+0x3f8>
   109a8:	pop	{r3, pc}

Disassembly of section .plt:

000109ac <setbuf@plt-0x14>:
   109ac:	push	{lr}		; (str lr, [sp, #-4]!)
   109b0:	ldr	lr, [pc, #4]	; 109bc <setbuf@plt-0x4>
   109b4:	add	lr, pc, lr
   109b8:	ldr	pc, [lr, #8]!
   109bc:	andeq	r2, r1, r4, asr #12

000109c0 <setbuf@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #73728	; 0x12000
   109c8:	ldr	pc, [ip, #1604]!	; 0x644

000109cc <fopen@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #73728	; 0x12000
   109d4:	ldr	pc, [ip, #1596]!	; 0x63c

000109d8 <free@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #73728	; 0x12000
   109e0:	ldr	pc, [ip, #1588]!	; 0x634

000109e4 <memcpy@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #73728	; 0x12000
   109ec:	ldr	pc, [ip, #1580]!	; 0x62c

000109f0 <__stack_chk_fail@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #73728	; 0x12000
   109f8:	ldr	pc, [ip, #1572]!	; 0x624

000109fc <unlink@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #73728	; 0x12000
   10a04:	ldr	pc, [ip, #1564]!	; 0x61c

00010a08 <perror@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #73728	; 0x12000
   10a10:	ldr	pc, [ip, #1556]!	; 0x614

00010a14 <__xstat@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #73728	; 0x12000
   10a1c:	ldr	pc, [ip, #1548]!	; 0x60c

00010a20 <__memcpy_chk@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #73728	; 0x12000
   10a28:	ldr	pc, [ip, #1540]!	; 0x604

00010a2c <fwrite@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #73728	; 0x12000
   10a34:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a38 <__stpcpy_chk@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #73728	; 0x12000
   10a40:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a44 <strcpy@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #73728	; 0x12000
   10a4c:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a50 <__strcpy_chk@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #73728	; 0x12000
   10a58:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a5c <fread@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #73728	; 0x12000
   10a64:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a68 <puts@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #73728	; 0x12000
   10a70:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a74 <malloc@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #73728	; 0x12000
   10a7c:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a80 <__libc_start_main@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #73728	; 0x12000
   10a88:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a8c <strerror@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #73728	; 0x12000
   10a94:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a98 <__gmon_start__@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #73728	; 0x12000
   10aa0:	ldr	pc, [ip, #1460]!	; 0x5b4

00010aa4 <exit@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #73728	; 0x12000
   10aac:	ldr	pc, [ip, #1452]!	; 0x5ac

00010ab0 <strlen@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #73728	; 0x12000
   10ab8:	ldr	pc, [ip, #1444]!	; 0x5a4

00010abc <strchr@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #73728	; 0x12000
   10ac4:	ldr	pc, [ip, #1436]!	; 0x59c

00010ac8 <getopt@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #73728	; 0x12000
   10ad0:	ldr	pc, [ip, #1428]!	; 0x594

00010ad4 <__errno_location@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #73728	; 0x12000
   10adc:	ldr	pc, [ip, #1420]!	; 0x58c

00010ae0 <__sprintf_chk@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #73728	; 0x12000
   10ae8:	ldr	pc, [ip, #1412]!	; 0x584

00010aec <memset@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1404]!	; 0x57c

00010af8 <putchar@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1396]!	; 0x574

00010b04 <__printf_chk@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1388]!	; 0x56c

00010b10 <__fprintf_chk@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1380]!	; 0x564

00010b1c <fclose@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1372]!	; 0x55c

00010b28 <popen@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1364]!	; 0x554

00010b34 <fputc@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1356]!	; 0x54c

00010b40 <fputs@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1348]!	; 0x544

00010b4c <abort@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #73728	; 0x12000
   10b54:	ldr	pc, [ip, #1340]!	; 0x53c

00010b58 <pclose@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #73728	; 0x12000
   10b60:	ldr	pc, [ip, #1332]!	; 0x534

Disassembly of section .text:

00010b64 <.text>:
   10b64:	movw	r2, #12452	; 0x30a4
   10b68:	movt	r2, #2
   10b6c:	push	{r4, r5, lr}
   10b70:	sub	sp, sp, #12
   10b74:	ldr	r4, [r2]
   10b78:	mov	r5, r0
   10b7c:	bl	10ad4 <__errno_location@plt>
   10b80:	ldr	r0, [r0]
   10b84:	bl	10a8c <strerror@plt>
   10b88:	mov	r3, r5
   10b8c:	movw	r2, #7596	; 0x1dac
   10b90:	mov	r1, #1
   10b94:	movt	r2, #1
   10b98:	str	r0, [sp]
   10b9c:	mov	r0, r4
   10ba0:	bl	10b10 <__fprintf_chk@plt>
   10ba4:	mov	r0, #1
   10ba8:	bl	10aa4 <exit@plt>
   10bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bb0:	movw	fp, #12032	; 0x2f00
   10bb4:	movt	fp, #2
   10bb8:	sub	sp, sp, #908	; 0x38c
   10bbc:	mov	r8, #0
   10bc0:	movw	r6, #9436	; 0x24dc
   10bc4:	ldr	r3, [fp]
   10bc8:	movw	r7, #12464	; 0x30b0
   10bcc:	movw	r9, #9388	; 0x24ac
   10bd0:	movt	r6, #1
   10bd4:	movt	r7, #2
   10bd8:	movt	r9, #1
   10bdc:	mov	r4, r0
   10be0:	mov	r5, r1
   10be4:	mov	sl, r8
   10be8:	str	r3, [sp, #900]	; 0x384
   10bec:	mov	r2, r6
   10bf0:	mov	r1, r5
   10bf4:	mov	r0, r4
   10bf8:	bl	10ac8 <getopt@plt>
   10bfc:	cmp	r0, #0
   10c00:	ble	10cc8 <pclose@plt+0x170>
   10c04:	sub	r0, r0, #98	; 0x62
   10c08:	cmp	r0, #17
   10c0c:	ldrls	pc, [pc, r0, lsl #2]
   10c10:	b	10ee8 <pclose@plt+0x390>
   10c14:			; <UNDEFINED> instruction: 0x00010cb4
   10c18:	andeq	r0, r1, r8, ror #29
   10c1c:	andeq	r0, r1, r8, ror #29
   10c20:	andeq	r0, r1, r8, ror #29
   10c24:	andeq	r0, r1, r8, ror #29
   10c28:	muleq	r1, ip, ip
   10c2c:	ldrdeq	r0, [r1], -r4
   10c30:	andeq	r0, r1, r8, ror #29
   10c34:	andeq	r0, r1, r8, ror #29
   10c38:	andeq	r0, r1, r8, ror #29
   10c3c:	andeq	r0, r1, r4, lsl #25
   10c40:	andeq	r0, r1, r8, ror #29
   10c44:	andeq	r0, r1, r8, ror #29
   10c48:	andeq	r0, r1, r8, ror #29
   10c4c:	andeq	r0, r1, r8, ror #29
   10c50:	andeq	r0, r1, r8, ror #29
   10c54:	andeq	r0, r1, r0, ror ip
   10c58:	andeq	r0, r1, ip, asr ip
   10c5c:	movw	r0, #9304	; 0x2458
   10c60:	movt	r0, #1
   10c64:	bl	10a68 <puts@plt>
   10c68:	mov	r8, #1
   10c6c:	b	10bec <pclose@plt+0x94>
   10c70:	movw	r0, #9268	; 0x2434
   10c74:	movt	r0, #1
   10c78:	bl	10a68 <puts@plt>
   10c7c:	mov	sl, #1
   10c80:	b	10bec <pclose@plt+0x94>
   10c84:	movw	r0, #9364	; 0x2494
   10c88:	movt	r0, #1
   10c8c:	mov	r3, #2
   10c90:	str	r3, [r7]
   10c94:	bl	10a68 <puts@plt>
   10c98:	b	10bec <pclose@plt+0x94>
   10c9c:	movw	r0, #9340	; 0x247c
   10ca0:	movt	r0, #1
   10ca4:	mov	r3, #1
   10ca8:	str	r3, [r7]
   10cac:	bl	10a68 <puts@plt>
   10cb0:	b	10bec <pclose@plt+0x94>
   10cb4:	mov	r0, r9
   10cb8:	mov	r3, #1
   10cbc:	strb	r3, [r7, #4]
   10cc0:	bl	10a68 <puts@plt>
   10cc4:	b	10bec <pclose@plt+0x94>
   10cc8:	movw	r3, #12448	; 0x30a0
   10ccc:	movt	r3, #2
   10cd0:	ldr	r3, [r3]
   10cd4:	sub	r4, r4, r3
   10cd8:	sub	r2, r4, #1
   10cdc:	cmp	r2, #3
   10ce0:	bhi	10ee8 <pclose@plt+0x390>
   10ce4:	add	r6, sp, #132	; 0x84
   10ce8:	mov	r2, #256	; 0x100
   10cec:	ldr	r1, [r5, r3, lsl #2]
   10cf0:	lsl	r9, r3, #2
   10cf4:	mov	r0, r6
   10cf8:	bl	10a38 <__stpcpy_chk@plt>
   10cfc:	cmp	r4, #1
   10d00:	mov	r7, r0
   10d04:	beq	10de4 <pclose@plt+0x28c>
   10d08:	add	r5, r5, r9
   10d0c:	add	r9, sp, #644	; 0x284
   10d10:	mov	r2, #256	; 0x100
   10d14:	ldr	r1, [r5, #4]
   10d18:	mov	r0, r9
   10d1c:	bl	10a50 <__strcpy_chk@plt>
   10d20:	cmp	r4, #2
   10d24:	beq	10e18 <pclose@plt+0x2c0>
   10d28:	add	r4, sp, #388	; 0x184
   10d2c:	ldr	r1, [r5, #8]
   10d30:	mov	r2, #256	; 0x100
   10d34:	mov	r0, r4
   10d38:	bl	10a50 <__strcpy_chk@plt>
   10d3c:	movw	r3, #12456	; 0x30a8
   10d40:	movt	r3, #2
   10d44:	mov	r1, #0
   10d48:	ldr	r0, [r3]
   10d4c:	bl	109c0 <setbuf@plt>
   10d50:	mov	r3, r9
   10d54:	mov	r2, r4
   10d58:	str	r6, [sp]
   10d5c:	movw	r1, #9448	; 0x24e8
   10d60:	mov	r0, #1
   10d64:	movt	r1, #1
   10d68:	bl	10b04 <__printf_chk@plt>
   10d6c:	mov	r0, #76	; 0x4c
   10d70:	bl	10af8 <putchar@plt>
   10d74:	mov	r1, r6
   10d78:	add	r0, sp, #12
   10d7c:	bl	11200 <pclose@plt+0x6a8>
   10d80:	cmp	r0, #0
   10d84:	blt	10efc <pclose@plt+0x3a4>
   10d88:	orrs	r3, sl, r8
   10d8c:	beq	10e94 <pclose@plt+0x33c>
   10d90:	cmp	r8, #0
   10d94:	bne	10e54 <pclose@plt+0x2fc>
   10d98:	mov	r0, #83	; 0x53
   10d9c:	bl	10af8 <putchar@plt>
   10da0:	mov	r2, r9
   10da4:	mov	r1, r4
   10da8:	add	r0, sp, #12
   10dac:	bl	11684 <pclose@plt+0xb2c>
   10db0:	ldr	r0, [sp, #12]
   10db4:	bl	109d8 <free@plt>
   10db8:	ldr	r0, [sp, #16]
   10dbc:	bl	109d8 <free@plt>
   10dc0:	mov	r0, #10
   10dc4:	bl	10af8 <putchar@plt>
   10dc8:	ldr	r2, [sp, #900]	; 0x384
   10dcc:	ldr	r3, [fp]
   10dd0:	mov	r0, #0
   10dd4:	cmp	r2, r3
   10dd8:	bne	10f10 <pclose@plt+0x3b8>
   10ddc:	add	sp, sp, #908	; 0x38c
   10de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10de4:	add	r9, sp, #644	; 0x284
   10de8:	sub	r2, r0, r6
   10dec:	add	r2, r2, #1
   10df0:	mov	r3, #256	; 0x100
   10df4:	mov	r1, r6
   10df8:	mov	r0, r9
   10dfc:	bl	10a20 <__memcpy_chk@plt>
   10e00:	mov	r0, r9
   10e04:	mov	r1, #46	; 0x2e
   10e08:	bl	10abc <strchr@plt>
   10e0c:	cmp	r0, #0
   10e10:	movne	r3, #0
   10e14:	strbne	r3, [r0]
   10e18:	add	r4, sp, #388	; 0x184
   10e1c:	sub	r7, r7, r6
   10e20:	add	r2, r7, #1
   10e24:	mov	r3, #256	; 0x100
   10e28:	mov	r1, r6
   10e2c:	mov	r0, r4
   10e30:	bl	10a20 <__memcpy_chk@plt>
   10e34:	movw	r3, #9444	; 0x24e4
   10e38:	movt	r3, #1
   10e3c:	add	r2, r4, r7
   10e40:	ldrh	r1, [r3]
   10e44:	ldrb	r3, [r3, #2]
   10e48:	strh	r1, [r4, r7]
   10e4c:	strb	r3, [r2, #2]
   10e50:	b	10d3c <pclose@plt+0x1e4>
   10e54:	mov	r0, #67	; 0x43
   10e58:	bl	10af8 <putchar@plt>
   10e5c:	add	r1, sp, #52	; 0x34
   10e60:	add	r0, sp, #12
   10e64:	bl	11588 <pclose@plt+0xa30>
   10e68:	mov	r0, #83	; 0x53
   10e6c:	bl	10af8 <putchar@plt>
   10e70:	mov	r2, r9
   10e74:	mov	r1, r4
   10e78:	add	r0, sp, #52	; 0x34
   10e7c:	bl	11684 <pclose@plt+0xb2c>
   10e80:	ldr	r0, [sp, #52]	; 0x34
   10e84:	bl	109d8 <free@plt>
   10e88:	ldr	r0, [sp, #56]	; 0x38
   10e8c:	bl	109d8 <free@plt>
   10e90:	b	10db0 <pclose@plt+0x258>
   10e94:	mov	r0, #67	; 0x43
   10e98:	bl	10af8 <putchar@plt>
   10e9c:	add	r1, sp, #92	; 0x5c
   10ea0:	add	r0, sp, #12
   10ea4:	bl	11460 <pclose@plt+0x908>
   10ea8:	mov	r0, #83	; 0x53
   10eac:	bl	10af8 <putchar@plt>
   10eb0:	mov	r2, r9
   10eb4:	mov	r1, r4
   10eb8:	add	r0, sp, #92	; 0x5c
   10ebc:	bl	11684 <pclose@plt+0xb2c>
   10ec0:	ldr	r0, [sp, #92]	; 0x5c
   10ec4:	bl	109d8 <free@plt>
   10ec8:	ldr	r0, [sp, #96]	; 0x60
   10ecc:	bl	109d8 <free@plt>
   10ed0:	b	10db0 <pclose@plt+0x258>
   10ed4:	movw	r0, #8768	; 0x2240
   10ed8:	movt	r0, #1
   10edc:	bl	10a68 <puts@plt>
   10ee0:	mov	r0, #0
   10ee4:	bl	10aa4 <exit@plt>
   10ee8:	movw	r0, #8768	; 0x2240
   10eec:	movt	r0, #1
   10ef0:	bl	10a68 <puts@plt>
   10ef4:	mov	r0, #1
   10ef8:	bl	10aa4 <exit@plt>
   10efc:	movw	r0, #9480	; 0x2508
   10f00:	movt	r0, #1
   10f04:	bl	10a68 <puts@plt>
   10f08:	mov	r0, #1
   10f0c:	bl	10aa4 <exit@plt>
   10f10:	bl	109f0 <__stack_chk_fail@plt>
   10f14:	mov	fp, #0
   10f18:	mov	lr, #0
   10f1c:	pop	{r1}		; (ldr r1, [sp], #4)
   10f20:	mov	r2, sp
   10f24:	push	{r2}		; (str r2, [sp, #-4]!)
   10f28:	push	{r0}		; (str r0, [sp, #-4]!)
   10f2c:	ldr	ip, [pc, #16]	; 10f44 <pclose@plt+0x3ec>
   10f30:	push	{ip}		; (str ip, [sp, #-4]!)
   10f34:	ldr	r0, [pc, #12]	; 10f48 <pclose@plt+0x3f0>
   10f38:	ldr	r3, [pc, #12]	; 10f4c <pclose@plt+0x3f4>
   10f3c:	bl	10a80 <__libc_start_main@plt>
   10f40:	bl	10b4c <abort@plt>
   10f44:	muleq	r1, r8, sp
   10f48:	andeq	r0, r1, ip, lsr #23
   10f4c:	andeq	r1, r1, r4, lsr sp
   10f50:	ldr	r3, [pc, #20]	; 10f6c <pclose@plt+0x414>
   10f54:	ldr	r2, [pc, #20]	; 10f70 <pclose@plt+0x418>
   10f58:	add	r3, pc, r3
   10f5c:	ldr	r2, [r3, r2]
   10f60:	cmp	r2, #0
   10f64:	bxeq	lr
   10f68:	b	10a98 <__gmon_start__@plt>
   10f6c:	andeq	r2, r1, r0, lsr #1
   10f70:	muleq	r0, r8, r0
   10f74:	movw	r0, #12448	; 0x30a0
   10f78:	movt	r0, #2
   10f7c:	movw	r3, #12448	; 0x30a0
   10f80:	movt	r3, #2
   10f84:	cmp	r3, r0
   10f88:	bxeq	lr
   10f8c:	movw	r3, #0
   10f90:	movt	r3, #0
   10f94:	cmp	r3, #0
   10f98:	bxeq	lr
   10f9c:	bx	r3
   10fa0:	movw	r0, #12448	; 0x30a0
   10fa4:	movt	r0, #2
   10fa8:	movw	r1, #12448	; 0x30a0
   10fac:	movt	r1, #2
   10fb0:	sub	r1, r1, r0
   10fb4:	asr	r1, r1, #2
   10fb8:	add	r1, r1, r1, lsr #31
   10fbc:	asrs	r1, r1, #1
   10fc0:	bxeq	lr
   10fc4:	movw	r3, #0
   10fc8:	movt	r3, #0
   10fcc:	cmp	r3, #0
   10fd0:	bxeq	lr
   10fd4:	bx	r3
   10fd8:	push	{r4, lr}
   10fdc:	movw	r4, #12460	; 0x30ac
   10fe0:	movt	r4, #2
   10fe4:	ldrb	r3, [r4]
   10fe8:	cmp	r3, #0
   10fec:	popne	{r4, pc}
   10ff0:	bl	10f74 <pclose@plt+0x41c>
   10ff4:	mov	r3, #1
   10ff8:	strb	r3, [r4]
   10ffc:	pop	{r4, pc}
   11000:	b	10fa0 <pclose@plt+0x448>
   11004:	push	{r4, lr}
   11008:	mov	r4, r0
   1100c:	bl	10a74 <malloc@plt>
   11010:	cmp	r0, #0
   11014:	popne	{r4, pc}
   11018:	mov	r0, r4
   1101c:	bl	10b64 <pclose@plt+0xc>
   11020:	push	{r4, lr}
   11024:	mov	r4, r0
   11028:	bl	10ab0 <strlen@plt>
   1102c:	cmp	r0, #0
   11030:	popeq	{r4, pc}
   11034:	sub	r2, r4, #1
   11038:	add	r0, r2, r0
   1103c:	ldrb	r3, [r2, #1]!
   11040:	sub	r1, r3, #97	; 0x61
   11044:	sub	r3, r3, #32
   11048:	cmp	r1, #25
   1104c:	strbls	r3, [r2]
   11050:	cmp	r2, r0
   11054:	bne	1103c <pclose@plt+0x4e4>
   11058:	pop	{r4, pc}
   1105c:	push	{r4, lr}
   11060:	mov	r4, r0
   11064:	bl	10ab0 <strlen@plt>
   11068:	cmp	r0, #0
   1106c:	popeq	{r4, pc}
   11070:	sub	r2, r4, #1
   11074:	add	r0, r2, r0
   11078:	ldrb	r3, [r2, #1]!
   1107c:	sub	r1, r3, #65	; 0x41
   11080:	add	r3, r3, #32
   11084:	cmp	r1, #25
   11088:	strbls	r3, [r2]
   1108c:	cmp	r2, r0
   11090:	bne	11078 <pclose@plt+0x520>
   11094:	pop	{r4, pc}
   11098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1109c:	mov	ip, #100	; 0x64
   110a0:	ldrb	r8, [r0, #1]
   110a4:	movw	r3, #32897	; 0x8081
   110a8:	ldrb	r6, [r0]
   110ac:	movt	r3, #32896	; 0x8080
   110b0:	ldrb	r4, [r0, #2]
   110b4:	mov	r2, #209	; 0xd1
   110b8:	smulbb	r8, r8, ip
   110bc:	smulbb	r6, r6, ip
   110c0:	smulbb	r4, r4, ip
   110c4:	umull	r8, r9, r8, r3
   110c8:	umull	r6, r7, r6, r3
   110cc:	umull	sl, fp, r4, r3
   110d0:	lsr	r3, r9, #7
   110d4:	movw	r4, #33205	; 0x81b5
   110d8:	movt	r4, #6990	; 0x1b4e
   110dc:	lsr	r0, r7, #7
   110e0:	add	ip, r3, r3, lsl #1
   110e4:	add	lr, r0, r3
   110e8:	ubfx	ip, ip, #2, #8
   110ec:	sub	r0, r0, #128	; 0x80
   110f0:	lsr	r3, fp, #7
   110f4:	sub	r0, r0, fp, lsr #9
   110f8:	add	lr, lr, r3
   110fc:	sub	r3, r3, #128	; 0x80
   11100:	sub	r3, r3, r7, lsr #9
   11104:	sub	r0, r0, ip
   11108:	mul	r2, r2, lr
   1110c:	sub	r3, r3, ip
   11110:	strb	r3, [r1]
   11114:	strb	r0, [r1, #2]
   11118:	umull	r2, r3, r2, r4
   1111c:	lsr	r3, r3, #5
   11120:	add	r3, r3, #16
   11124:	uxtb	r3, r3
   11128:	strb	r3, [r1, #3]
   1112c:	strb	r3, [r1, #1]
   11130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11134:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11138:	subs	r9, r2, #0
   1113c:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11140:	add	sl, r1, r1, lsl #1
   11144:	mov	r6, r0
   11148:	add	fp, sl, #3
   1114c:	mov	r8, r1
   11150:	mov	r7, #0
   11154:	cmp	r8, #0
   11158:	addgt	r4, r6, #3
   1115c:	addgt	r5, r6, fp
   11160:	ble	11188 <pclose@plt+0x630>
   11164:	ldrb	r3, [r4, #-3]
   11168:	mov	r0, #88	; 0x58
   1116c:	add	r4, r4, #3
   11170:	cmp	r3, #29
   11174:	movls	r0, #32
   11178:	bl	10af8 <putchar@plt>
   1117c:	cmp	r4, r5
   11180:	bne	11164 <pclose@plt+0x60c>
   11184:	add	r6, r6, sl
   11188:	add	r7, r7, #1
   1118c:	mov	r0, #10
   11190:	bl	10af8 <putchar@plt>
   11194:	cmp	r9, r7
   11198:	bne	11154 <pclose@plt+0x5fc>
   1119c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   111a4:	subs	r8, r2, #0
   111a8:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   111ac:	lsl	r9, r1, #1
   111b0:	mov	r4, r0
   111b4:	mov	r7, r1
   111b8:	mov	r6, #0
   111bc:	cmp	r7, #0
   111c0:	addgt	r5, r4, r9
   111c4:	ble	111e8 <pclose@plt+0x690>
   111c8:	ldrh	r3, [r4], #2
   111cc:	mov	r0, #88	; 0x58
   111d0:	cmp	r3, #4224	; 0x1080
   111d4:	moveq	r0, #32
   111d8:	bl	10af8 <putchar@plt>
   111dc:	cmp	r5, r4
   111e0:	bne	111c8 <pclose@plt+0x670>
   111e4:	mov	r4, r5
   111e8:	add	r6, r6, #1
   111ec:	mov	r0, #10
   111f0:	bl	10af8 <putchar@plt>
   111f4:	cmp	r8, r6
   111f8:	bne	111bc <pclose@plt+0x664>
   111fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11204:	movw	r6, #12032	; 0x2f00
   11208:	movt	r6, #2
   1120c:	sub	sp, sp, #36	; 0x24
   11210:	mov	r4, r0
   11214:	mov	r0, r1
   11218:	ldr	r3, [r6]
   1121c:	movw	r1, #7628	; 0x1dcc
   11220:	movt	r1, #1
   11224:	str	r3, [sp, #28]
   11228:	bl	109cc <fopen@plt>
   1122c:	subs	r7, r0, #0
   11230:	beq	11428 <pclose@plt+0x8d0>
   11234:	mov	r3, r7
   11238:	mov	r2, #1
   1123c:	mov	r1, #18
   11240:	add	r0, sp, #8
   11244:	bl	10a5c <fread@plt>
   11248:	ldrb	r1, [sp, #10]
   1124c:	ldrh	r2, [sp, #11]
   11250:	ldrh	r3, [sp, #13]
   11254:	cmp	r1, #2
   11258:	ldrh	r5, [sp, #20]
   1125c:	ldrh	r1, [sp, #22]
   11260:	strh	r2, [sp, #11]
   11264:	strh	r3, [sp, #13]
   11268:	strh	r5, [sp, #20]
   1126c:	str	r5, [r4, #8]
   11270:	strh	r1, [sp, #22]
   11274:	str	r1, [r4, #12]
   11278:	bne	113f8 <pclose@plt+0x8a0>
   1127c:	ldrb	r8, [sp, #24]
   11280:	mov	r3, #0
   11284:	mul	r1, r1, r5
   11288:	subs	r0, r8, #1
   1128c:	addmi	r0, r8, #6
   11290:	strb	r3, [r4, #36]	; 0x24
   11294:	strb	r3, [r4, #37]	; 0x25
   11298:	asr	r0, r0, #3
   1129c:	strb	r3, [r4, #38]	; 0x26
   112a0:	add	r0, r0, #1
   112a4:	strb	r3, [r4, #39]	; 0x27
   112a8:	str	r0, [r4, #24]
   112ac:	mul	r5, r1, r0
   112b0:	strb	r3, [r4, #32]
   112b4:	strb	r3, [r4, #33]	; 0x21
   112b8:	strb	r3, [r4, #34]	; 0x22
   112bc:	strb	r3, [r4, #35]	; 0x23
   112c0:	strb	r3, [r4, #4]
   112c4:	strb	r3, [r4, #5]
   112c8:	mov	r0, r5
   112cc:	strb	r3, [r4, #6]
   112d0:	strb	r3, [r4, #7]
   112d4:	str	r8, [r4, #20]
   112d8:	str	r1, [r4, #16]
   112dc:	str	r5, [r4, #28]
   112e0:	bl	10a74 <malloc@plt>
   112e4:	subs	r3, r0, #0
   112e8:	beq	11430 <pclose@plt+0x8d8>
   112ec:	cmp	r8, #24
   112f0:	str	r3, [r4]
   112f4:	bne	1140c <pclose@plt+0x8b4>
   112f8:	mov	r2, #1
   112fc:	mov	r1, r5
   11300:	mov	r3, r7
   11304:	bl	10a5c <fread@plt>
   11308:	ldr	r2, [r4, #16]
   1130c:	ldr	r8, [r4]
   11310:	cmp	r2, #0
   11314:	ble	11340 <pclose@plt+0x7e8>
   11318:	add	r2, r2, r2, lsl #1
   1131c:	add	r3, r8, #3
   11320:	add	r2, r2, r3
   11324:	ldrb	r0, [r3, #-3]
   11328:	add	r3, r3, #3
   1132c:	ldrb	r1, [r3, #-4]
   11330:	strb	r0, [r3, #-4]
   11334:	strb	r1, [r3, #-6]
   11338:	cmp	r2, r3
   1133c:	bne	11324 <pclose@plt+0x7cc>
   11340:	ldrb	r5, [sp, #25]
   11344:	ands	r5, r5, #32
   11348:	bne	113d4 <pclose@plt+0x87c>
   1134c:	ldr	r9, [r4, #28]
   11350:	mov	r0, r9
   11354:	bl	10a74 <malloc@plt>
   11358:	subs	r3, r0, #0
   1135c:	str	r3, [sp, #4]
   11360:	beq	1143c <pclose@plt+0x8e4>
   11364:	ldr	r3, [r4, #24]
   11368:	mov	r0, #83	; 0x53
   1136c:	ldr	r2, [r4, #8]
   11370:	ldr	sl, [sp, #4]
   11374:	mul	fp, r2, r3
   11378:	bl	10af8 <putchar@plt>
   1137c:	ldr	r2, [r4, #28]
   11380:	mov	r0, sl
   11384:	ldr	r1, [r4]
   11388:	bl	109e4 <memcpy@plt>
   1138c:	ldr	r2, [r4, #12]
   11390:	sub	r9, r9, fp
   11394:	cmp	r2, #0
   11398:	add	r9, sl, r9
   1139c:	ble	113cc <pclose@plt+0x874>
   113a0:	rsb	sl, fp, #0
   113a4:	mov	r2, fp
   113a8:	mov	r1, r9
   113ac:	mov	r0, r8
   113b0:	add	r5, r5, #1
   113b4:	bl	109e4 <memcpy@plt>
   113b8:	ldr	r2, [r4, #12]
   113bc:	add	r9, r9, sl
   113c0:	add	r8, r8, fp
   113c4:	cmp	r2, r5
   113c8:	bgt	113a4 <pclose@plt+0x84c>
   113cc:	ldr	r0, [sp, #4]
   113d0:	bl	109d8 <free@plt>
   113d4:	mov	r0, r7
   113d8:	bl	10b1c <fclose@plt>
   113dc:	mov	r0, #0
   113e0:	ldr	r2, [sp, #28]
   113e4:	ldr	r3, [r6]
   113e8:	cmp	r2, r3
   113ec:	bne	11438 <pclose@plt+0x8e0>
   113f0:	add	sp, sp, #36	; 0x24
   113f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113f8:	movw	r0, #7632	; 0x1dd0
   113fc:	movt	r0, #1
   11400:	bl	10a68 <puts@plt>
   11404:	mvn	r0, #0
   11408:	b	113e0 <pclose@plt+0x888>
   1140c:	mov	r2, r8
   11410:	movw	r1, #7656	; 0x1de8
   11414:	mov	r0, #1
   11418:	movt	r1, #1
   1141c:	bl	10b04 <__printf_chk@plt>
   11420:	mvn	r0, #0
   11424:	b	113e0 <pclose@plt+0x888>
   11428:	mvn	r0, #0
   1142c:	b	113e0 <pclose@plt+0x888>
   11430:	mov	r0, r5
   11434:	bl	10b64 <pclose@plt+0xc>
   11438:	bl	109f0 <__stack_chk_fail@plt>
   1143c:	mov	r0, r9
   11440:	bl	10b64 <pclose@plt+0xc>
   11444:	push	{r4, lr}
   11448:	mov	r4, r0
   1144c:	ldr	r0, [r0]
   11450:	bl	109d8 <free@plt>
   11454:	ldr	r0, [r4, #4]
   11458:	pop	{r4, lr}
   1145c:	b	109d8 <free@plt>
   11460:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11464:	mov	r2, #2
   11468:	ldr	r4, [r0]
   1146c:	mov	r7, #0
   11470:	strb	r2, [r1, #24]
   11474:	mov	r3, #16
   11478:	strb	r7, [r1, #25]
   1147c:	mov	r6, #1
   11480:	strb	r3, [r1, #20]
   11484:	mov	r5, r1
   11488:	strb	r7, [r1, #26]
   1148c:	movw	r9, #12032	; 0x2f00
   11490:	strb	r7, [r1, #27]
   11494:	movt	r9, #2
   11498:	strb	r7, [r1, #21]
   1149c:	sub	sp, sp, #12
   114a0:	strb	r7, [r1, #22]
   114a4:	mov	r8, r0
   114a8:	strb	r7, [r1, #23]
   114ac:	strb	r7, [r1, #37]	; 0x25
   114b0:	strb	r7, [r1, #38]	; 0x26
   114b4:	strb	r7, [r1, #39]	; 0x27
   114b8:	strb	r6, [r1, #36]	; 0x24
   114bc:	ldr	r3, [r0, #8]
   114c0:	ldr	r1, [r9]
   114c4:	str	r3, [r5, #8]
   114c8:	ldr	r2, [r0, #12]
   114cc:	str	r1, [sp, #4]
   114d0:	mul	r3, r2, r3
   114d4:	str	r2, [r5, #12]
   114d8:	lsl	fp, r3, r6
   114dc:	str	r3, [r5, #16]
   114e0:	str	fp, [r5, #28]
   114e4:	mov	r0, fp
   114e8:	bl	10a74 <malloc@plt>
   114ec:	subs	sl, r0, #0
   114f0:	beq	1157c <pclose@plt+0xa24>
   114f4:	str	sl, [r5]
   114f8:	strb	r7, [r5, #4]
   114fc:	strb	r7, [r5, #5]
   11500:	strb	r7, [r5, #6]
   11504:	strb	r7, [r5, #7]
   11508:	strb	r7, [r5, #32]
   1150c:	strb	r7, [r5, #33]	; 0x21
   11510:	strb	r7, [r5, #34]	; 0x22
   11514:	strb	r7, [r5, #35]	; 0x23
   11518:	ldr	r3, [r8, #16]
   1151c:	cmp	r3, #0
   11520:	bgt	1152c <pclose@plt+0x9d4>
   11524:	b	11560 <pclose@plt+0xa08>
   11528:	mov	r6, r2
   1152c:	mov	r0, r4
   11530:	mov	r1, sp
   11534:	bl	11098 <pclose@plt+0x540>
   11538:	tst	r6, #1
   1153c:	add	r4, r4, #3
   11540:	add	sl, sl, #2
   11544:	ldrheq	r3, [sp, #2]
   11548:	add	r2, r6, #1
   1154c:	ldrhne	r3, [sp]
   11550:	strh	r3, [sl, #-2]
   11554:	ldr	r3, [r8, #16]
   11558:	cmp	r3, r6
   1155c:	bgt	11528 <pclose@plt+0x9d0>
   11560:	ldr	r2, [sp, #4]
   11564:	mov	r0, #0
   11568:	ldr	r3, [r9]
   1156c:	cmp	r2, r3
   11570:	bne	11584 <pclose@plt+0xa2c>
   11574:	add	sp, sp, #12
   11578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1157c:	mov	r0, fp
   11580:	bl	10b64 <pclose@plt+0xc>
   11584:	bl	109f0 <__stack_chk_fail@plt>
   11588:	push	{r4, r5, r6, r7, r8, lr}
   1158c:	mov	r2, #2
   11590:	ldr	r4, [r0]
   11594:	mov	r6, #0
   11598:	strb	r2, [r1, #24]
   1159c:	mov	r3, #16
   115a0:	strb	r6, [r1, #25]
   115a4:	mov	r7, r0
   115a8:	strb	r3, [r1, #20]
   115ac:	mov	r5, r1
   115b0:	strb	r6, [r1, #26]
   115b4:	strb	r6, [r1, #27]
   115b8:	strb	r6, [r1, #21]
   115bc:	strb	r6, [r1, #22]
   115c0:	strb	r6, [r1, #23]
   115c4:	strb	r6, [r1, #36]	; 0x24
   115c8:	strb	r6, [r1, #37]	; 0x25
   115cc:	strb	r6, [r1, #38]	; 0x26
   115d0:	strb	r6, [r1, #39]	; 0x27
   115d4:	ldr	r3, [r0, #8]
   115d8:	str	r3, [r1, #8]
   115dc:	ldr	r2, [r0, #12]
   115e0:	mul	r3, r2, r3
   115e4:	str	r2, [r1, #12]
   115e8:	lsl	r8, r3, #1
   115ec:	str	r3, [r1, #16]
   115f0:	str	r8, [r1, #28]
   115f4:	mov	r0, r8
   115f8:	bl	10a74 <malloc@plt>
   115fc:	cmp	r0, #0
   11600:	beq	1167c <pclose@plt+0xb24>
   11604:	str	r0, [r5]
   11608:	strb	r6, [r5, #4]
   1160c:	strb	r6, [r5, #5]
   11610:	strb	r6, [r5, #6]
   11614:	strb	r6, [r5, #7]
   11618:	strb	r6, [r5, #32]
   1161c:	strb	r6, [r5, #33]	; 0x21
   11620:	strb	r6, [r5, #34]	; 0x22
   11624:	strb	r6, [r5, #35]	; 0x23
   11628:	ldr	lr, [r7, #16]
   1162c:	cmp	lr, #0
   11630:	ble	11674 <pclose@plt+0xb1c>
   11634:	add	r1, r4, #3
   11638:	add	lr, r0, lr, lsl #1
   1163c:	mov	r4, #63488	; 0xf800
   11640:	movt	r4, #65535	; 0xffff
   11644:	ldrb	r2, [r1, #-2]
   11648:	add	r1, r1, #3
   1164c:	ldrb	r3, [r1, #-4]
   11650:	ldrb	ip, [r1, #-6]
   11654:	lsl	r2, r2, #3
   11658:	and	r2, r2, #2016	; 0x7e0
   1165c:	and	r3, r4, r3, lsl #8
   11660:	orr	r3, r3, r2
   11664:	orr	r3, r3, ip, lsr #3
   11668:	strh	r3, [r0], #2
   1166c:	cmp	r0, lr
   11670:	bne	11644 <pclose@plt+0xaec>
   11674:	mov	r0, #0
   11678:	pop	{r4, r5, r6, r7, r8, pc}
   1167c:	mov	r0, r8
   11680:	bl	10b64 <pclose@plt+0xc>
   11684:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11688:	movw	fp, #12032	; 0x2f00
   1168c:	movt	fp, #2
   11690:	sub	sp, sp, #700	; 0x2bc
   11694:	mov	r7, r0
   11698:	mov	r9, r1
   1169c:	ldr	r3, [fp]
   116a0:	mov	r0, r1
   116a4:	movw	r1, #7928	; 0x1ef8
   116a8:	movt	r1, #1
   116ac:	mov	sl, r2
   116b0:	str	r2, [sp, #8]
   116b4:	str	r3, [sp, #692]	; 0x2b4
   116b8:	bl	109cc <fopen@plt>
   116bc:	mov	r3, #0
   116c0:	mov	r2, #252	; 0xfc
   116c4:	mov	r1, r3
   116c8:	str	r3, [sp, #436]	; 0x1b4
   116cc:	mov	r4, r0
   116d0:	add	r0, sp, #440	; 0x1b8
   116d4:	bl	10aec <memset@plt>
   116d8:	cmp	r4, #0
   116dc:	ldr	r5, [r7, #28]
   116e0:	ldr	r6, [r7]
   116e4:	beq	11ce8 <pclose@plt+0x1190>
   116e8:	mov	r3, r4
   116ec:	mov	r2, #60	; 0x3c
   116f0:	mov	r1, #1
   116f4:	movw	r0, #7932	; 0x1efc
   116f8:	movt	r0, #1
   116fc:	movw	r8, #12464	; 0x30b0
   11700:	bl	10a2c <fwrite@plt>
   11704:	mov	r3, sl
   11708:	mov	r1, #1
   1170c:	movw	r2, #7996	; 0x1f3c
   11710:	mov	r0, r4
   11714:	movt	r2, #1
   11718:	bl	10b10 <__fprintf_chk@plt>
   1171c:	mov	r3, r4
   11720:	mov	r2, #54	; 0x36
   11724:	mov	r1, #1
   11728:	movw	r0, #8076	; 0x1f8c
   1172c:	movt	r0, #1
   11730:	bl	10a2c <fwrite@plt>
   11734:	mov	r3, r4
   11738:	mov	r2, #32
   1173c:	mov	r1, #1
   11740:	movw	r0, #8132	; 0x1fc4
   11744:	movt	r0, #1
   11748:	bl	10a2c <fwrite@plt>
   1174c:	movt	r8, #2
   11750:	mov	r3, r4
   11754:	mov	r2, #36	; 0x24
   11758:	mov	r1, #1
   1175c:	movw	r0, #8168	; 0x1fe8
   11760:	movt	r0, #1
   11764:	bl	10a2c <fwrite@plt>
   11768:	mov	r3, r4
   1176c:	movw	r0, #8208	; 0x2010
   11770:	mov	r2, #39	; 0x27
   11774:	movt	r0, #1
   11778:	mov	r1, #1
   1177c:	bl	10a2c <fwrite@plt>
   11780:	ldr	r3, [r8]
   11784:	cmp	r3, #0
   11788:	bne	11a98 <pclose@plt+0xf40>
   1178c:	mov	r3, r4
   11790:	mov	r2, #29
   11794:	mov	r1, #1
   11798:	movw	r0, #8364	; 0x20ac
   1179c:	movt	r0, #1
   117a0:	bl	10a2c <fwrite@plt>
   117a4:	mov	r2, #64	; 0x40
   117a8:	ldr	r1, [sp, #8]
   117ac:	add	r0, sp, #116	; 0x74
   117b0:	bl	10a50 <__strcpy_chk@plt>
   117b4:	add	r0, sp, #116	; 0x74
   117b8:	bl	11020 <pclose@plt+0x4c8>
   117bc:	ldr	r0, [r7, #8]
   117c0:	add	r3, sp, #116	; 0x74
   117c4:	mov	r1, #1
   117c8:	movw	r2, #8396	; 0x20cc
   117cc:	movt	r2, #1
   117d0:	str	r0, [sp]
   117d4:	mov	r0, r4
   117d8:	bl	10b10 <__fprintf_chk@plt>
   117dc:	ldr	r0, [r7, #12]
   117e0:	add	r3, sp, #116	; 0x74
   117e4:	mov	r1, #1
   117e8:	movw	r2, #8424	; 0x20e8
   117ec:	movt	r2, #1
   117f0:	str	r0, [sp]
   117f4:	mov	r0, r4
   117f8:	bl	10b10 <__fprintf_chk@plt>
   117fc:	ldr	r0, [r7, #16]
   11800:	add	r3, sp, #116	; 0x74
   11804:	mov	r1, #1
   11808:	movw	r2, #8452	; 0x2104
   1180c:	movt	r2, #1
   11810:	str	r0, [sp]
   11814:	mov	r0, r4
   11818:	bl	10b10 <__fprintf_chk@plt>
   1181c:	ldr	r0, [r7, #20]
   11820:	add	r3, sp, #116	; 0x74
   11824:	mov	r1, #1
   11828:	movw	r2, #8480	; 0x2120
   1182c:	movt	r2, #1
   11830:	str	r0, [sp]
   11834:	mov	r0, r4
   11838:	bl	10b10 <__fprintf_chk@plt>
   1183c:	ldr	r0, [r7, #24]
   11840:	add	r3, sp, #116	; 0x74
   11844:	mov	r1, #1
   11848:	movw	r2, #8504	; 0x2138
   1184c:	movt	r2, #1
   11850:	str	r0, [sp]
   11854:	mov	r0, r4
   11858:	bl	10b10 <__fprintf_chk@plt>
   1185c:	ldr	r0, [r7, #28]
   11860:	add	r3, sp, #116	; 0x74
   11864:	mov	r1, #1
   11868:	movw	r2, #8536	; 0x2158
   1186c:	movt	r2, #1
   11870:	str	r0, [sp]
   11874:	mov	r0, r4
   11878:	bl	10b10 <__fprintf_chk@plt>
   1187c:	add	r3, sp, #116	; 0x74
   11880:	movw	r2, #8564	; 0x2174
   11884:	mov	r1, #1
   11888:	movt	r2, #1
   1188c:	mov	r0, r4
   11890:	bl	10b10 <__fprintf_chk@plt>
   11894:	cmp	r5, #0
   11898:	beq	119b4 <pclose@plt+0xe5c>
   1189c:	movw	sl, #8600	; 0x2198
   118a0:	movw	r9, #8608	; 0x21a0
   118a4:	movt	sl, #1
   118a8:	movt	r9, #1
   118ac:	mov	r8, #0
   118b0:	str	fp, [sp, #12]
   118b4:	cmp	r8, #0
   118b8:	beq	118f0 <pclose@plt+0xd98>
   118bc:	cmp	r8, #16
   118c0:	bne	11bec <pclose@plt+0x1094>
   118c4:	mov	r1, r4
   118c8:	add	r0, sp, #436	; 0x1b4
   118cc:	bl	10b40 <fputs@plt>
   118d0:	cmp	r5, #0
   118d4:	ble	118e4 <pclose@plt+0xd8c>
   118d8:	mov	r1, r4
   118dc:	mov	r0, #44	; 0x2c
   118e0:	bl	10b34 <fputc@plt>
   118e4:	mov	r1, r4
   118e8:	mov	r0, #10
   118ec:	bl	10b34 <fputc@plt>
   118f0:	ldrb	ip, [r6]
   118f4:	mov	r3, sl
   118f8:	mov	r2, #256	; 0x100
   118fc:	mov	r1, #1
   11900:	add	r0, sp, #436	; 0x1b4
   11904:	str	ip, [sp]
   11908:	bl	10ae0 <__sprintf_chk@plt>
   1190c:	cmp	r5, #1
   11910:	beq	11998 <pclose@plt+0xe40>
   11914:	add	r7, sp, #180	; 0xb4
   11918:	mov	r2, #256	; 0x100
   1191c:	add	r1, sp, #436	; 0x1b4
   11920:	add	fp, r6, #2
   11924:	mov	r0, r7
   11928:	bl	10a50 <__strcpy_chk@plt>
   1192c:	ldrb	r0, [r6, #1]
   11930:	mov	r3, r9
   11934:	str	r7, [sp]
   11938:	mov	r2, #256	; 0x100
   1193c:	mov	r1, #1
   11940:	str	r0, [sp, #4]
   11944:	add	r0, sp, #436	; 0x1b4
   11948:	bl	10ae0 <__sprintf_chk@plt>
   1194c:	subs	r5, r5, #2
   11950:	beq	11998 <pclose@plt+0xe40>
   11954:	mov	r8, #2
   11958:	mov	r2, #256	; 0x100
   1195c:	add	r1, sp, #436	; 0x1b4
   11960:	mov	r0, r7
   11964:	add	r8, r8, #1
   11968:	bl	10a50 <__strcpy_chk@plt>
   1196c:	ldrb	r0, [fp]
   11970:	mov	r3, r9
   11974:	str	r7, [sp]
   11978:	mov	r2, #256	; 0x100
   1197c:	mov	r1, #1
   11980:	str	r0, [sp, #4]
   11984:	add	r0, sp, #436	; 0x1b4
   11988:	bl	10ae0 <__sprintf_chk@plt>
   1198c:	subs	r5, r5, #1
   11990:	add	r6, fp, #1
   11994:	bne	118b4 <pclose@plt+0xd5c>
   11998:	movw	r2, #8620	; 0x21ac
   1199c:	add	r3, sp, #436	; 0x1b4
   119a0:	mov	r1, #1
   119a4:	movt	r2, #1
   119a8:	mov	r0, r4
   119ac:	ldr	fp, [sp, #12]
   119b0:	bl	10b10 <__fprintf_chk@plt>
   119b4:	mov	r3, r4
   119b8:	mov	r2, #4
   119bc:	mov	r1, #1
   119c0:	movw	r0, #8624	; 0x21b0
   119c4:	movt	r0, #1
   119c8:	bl	10a2c <fwrite@plt>
   119cc:	ldr	r3, [sp, #8]
   119d0:	mov	r1, #1
   119d4:	movw	r2, #8632	; 0x21b8
   119d8:	mov	r0, r4
   119dc:	movt	r2, #1
   119e0:	bl	10b10 <__fprintf_chk@plt>
   119e4:	add	r3, sp, #116	; 0x74
   119e8:	mov	r1, #1
   119ec:	movw	r2, #8652	; 0x21cc
   119f0:	mov	r0, r4
   119f4:	movt	r2, #1
   119f8:	bl	10b10 <__fprintf_chk@plt>
   119fc:	add	r3, sp, #116	; 0x74
   11a00:	mov	r1, #1
   11a04:	movw	r2, #8668	; 0x21dc
   11a08:	mov	r0, r4
   11a0c:	movt	r2, #1
   11a10:	bl	10b10 <__fprintf_chk@plt>
   11a14:	add	r3, sp, #116	; 0x74
   11a18:	mov	r1, #1
   11a1c:	movw	r2, #8688	; 0x21f0
   11a20:	mov	r0, r4
   11a24:	movt	r2, #1
   11a28:	bl	10b10 <__fprintf_chk@plt>
   11a2c:	add	r3, sp, #116	; 0x74
   11a30:	mov	r1, #1
   11a34:	movw	r2, #8708	; 0x2204
   11a38:	mov	r0, r4
   11a3c:	movt	r2, #1
   11a40:	bl	10b10 <__fprintf_chk@plt>
   11a44:	add	r3, sp, #116	; 0x74
   11a48:	mov	r1, #1
   11a4c:	movw	r2, #8724	; 0x2214
   11a50:	mov	r0, r4
   11a54:	movt	r2, #1
   11a58:	bl	10b10 <__fprintf_chk@plt>
   11a5c:	add	r3, sp, #116	; 0x74
   11a60:	mov	r1, #1
   11a64:	movw	r2, #8748	; 0x222c
   11a68:	mov	r0, r4
   11a6c:	movt	r2, #1
   11a70:	bl	10b10 <__fprintf_chk@plt>
   11a74:	mov	r0, r4
   11a78:	bl	10b1c <fclose@plt>
   11a7c:	mov	r0, #0
   11a80:	ldr	r2, [sp, #692]	; 0x2b4
   11a84:	ldr	r3, [fp]
   11a88:	cmp	r2, r3
   11a8c:	bne	11cfc <pclose@plt+0x11a4>
   11a90:	add	sp, sp, #700	; 0x2bc
   11a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a98:	mov	r0, r9
   11a9c:	bl	10ab0 <strlen@plt>
   11aa0:	add	r6, r0, #20
   11aa4:	mov	r5, r0
   11aa8:	mov	r0, r6
   11aac:	bl	10a74 <malloc@plt>
   11ab0:	subs	r3, r0, #0
   11ab4:	str	r3, [sp, #12]
   11ab8:	beq	11d24 <pclose@plt+0x11cc>
   11abc:	add	r5, r5, #50	; 0x32
   11ac0:	mov	r0, r5
   11ac4:	bl	10a74 <malloc@plt>
   11ac8:	subs	sl, r0, #0
   11acc:	beq	11d2c <pclose@plt+0x11d4>
   11ad0:	str	r9, [sp]
   11ad4:	movw	r3, #8248	; 0x2038
   11ad8:	mvn	r2, #0
   11adc:	movt	r3, #1
   11ae0:	mov	r1, #1
   11ae4:	ldr	r0, [sp, #12]
   11ae8:	bl	10ae0 <__sprintf_chk@plt>
   11aec:	ldr	r3, [r8]
   11af0:	cmp	r3, #1
   11af4:	beq	11bc0 <pclose@plt+0x1068>
   11af8:	cmp	r3, #2
   11afc:	bne	11b98 <pclose@plt+0x1040>
   11b00:	movw	r3, #8264	; 0x2048
   11b04:	movt	r3, #1
   11b08:	movw	r9, #7688	; 0x1e08
   11b0c:	movt	r9, #1
   11b10:	ldm	r3, {r0, r1}
   11b14:	str	r0, [sl]
   11b18:	strb	r1, [sl, #4]
   11b1c:	mov	r0, sl
   11b20:	bl	10ab0 <strlen@plt>
   11b24:	movw	r3, #8272	; 0x2050
   11b28:	movt	r3, #1
   11b2c:	ldr	r1, [sp, #12]
   11b30:	mov	r2, r0
   11b34:	add	ip, r0, #3
   11b38:	ldr	r0, [r3]
   11b3c:	str	r0, [sl, r2]
   11b40:	add	r0, sl, ip
   11b44:	bl	10a44 <strcpy@plt>
   11b48:	movw	r1, #7928	; 0x1ef8
   11b4c:	mov	r0, sl
   11b50:	movt	r1, #1
   11b54:	bl	10b28 <popen@plt>
   11b58:	subs	r5, r0, #0
   11b5c:	beq	11be0 <pclose@plt+0x1088>
   11b60:	mov	r3, r5
   11b64:	mov	r2, #1
   11b68:	ldr	r1, [r7, #28]
   11b6c:	ldr	r0, [r7]
   11b70:	bl	10a2c <fwrite@plt>
   11b74:	cmp	r0, #1
   11b78:	movwne	r4, #7868	; 0x1ebc
   11b7c:	movtne	r4, #1
   11b80:	beq	11bf8 <pclose@plt+0x10a0>
   11b84:	ldr	r0, [sp, #12]
   11b88:	bl	109d8 <free@plt>
   11b8c:	mov	r0, sl
   11b90:	bl	109d8 <free@plt>
   11b94:	b	11bb0 <pclose@plt+0x1058>
   11b98:	ldr	r0, [sp, #12]
   11b9c:	movw	r4, #7696	; 0x1e10
   11ba0:	bl	109d8 <free@plt>
   11ba4:	mov	r0, sl
   11ba8:	bl	109d8 <free@plt>
   11bac:	movt	r4, #1
   11bb0:	mov	r0, r4
   11bb4:	bl	10a08 <perror@plt>
   11bb8:	mvn	r0, #0
   11bbc:	b	11a80 <pclose@plt+0xf28>
   11bc0:	movw	r3, #8256	; 0x2040
   11bc4:	movt	r3, #1
   11bc8:	movw	r9, #7680	; 0x1e00
   11bcc:	movt	r9, #1
   11bd0:	ldm	r3, {r0, r1}
   11bd4:	str	r0, [sl]
   11bd8:	strb	r1, [sl, #4]
   11bdc:	b	11b1c <pclose@plt+0xfc4>
   11be0:	movw	r4, #7904	; 0x1ee0
   11be4:	movt	r4, #1
   11be8:	b	11b84 <pclose@plt+0x102c>
   11bec:	mov	fp, r6
   11bf0:	add	r7, sp, #180	; 0xb4
   11bf4:	b	11958 <pclose@plt+0xe00>
   11bf8:	str	r0, [sp, #16]
   11bfc:	mov	r0, r5
   11c00:	bl	10b58 <pclose@plt>
   11c04:	cmp	r0, #0
   11c08:	movwne	r4, #7840	; 0x1ea0
   11c0c:	movtne	r4, #1
   11c10:	bne	11b84 <pclose@plt+0x102c>
   11c14:	ldr	r6, [sp, #12]
   11c18:	movw	r1, #8276	; 0x2054
   11c1c:	movt	r1, #1
   11c20:	mov	r0, r6
   11c24:	bl	109cc <fopen@plt>
   11c28:	subs	r5, r0, #0
   11c2c:	beq	11cf0 <pclose@plt+0x1198>
   11c30:	add	r2, sp, #24
   11c34:	mov	r1, r6
   11c38:	mov	r0, #3
   11c3c:	bl	10a14 <__xstat@plt>
   11c40:	ldr	r3, [sp, #16]
   11c44:	cmp	r0, #0
   11c48:	movwne	r4, #7768	; 0x1e58
   11c4c:	movtne	r4, #1
   11c50:	bne	11b84 <pclose@plt+0x102c>
   11c54:	ldr	r1, [sp, #68]	; 0x44
   11c58:	str	r3, [sp, #20]
   11c5c:	mov	r0, r1
   11c60:	str	r1, [sp, #16]
   11c64:	bl	10a74 <malloc@plt>
   11c68:	ldr	r1, [sp, #16]
   11c6c:	ldr	r3, [sp, #20]
   11c70:	subs	r6, r0, #0
   11c74:	beq	11d00 <pclose@plt+0x11a8>
   11c78:	mov	r2, r3
   11c7c:	mov	r3, r5
   11c80:	bl	10a5c <fread@plt>
   11c84:	cmp	r0, #1
   11c88:	str	r0, [sp, #16]
   11c8c:	movwne	r4, #7732	; 0x1e34
   11c90:	movtne	r4, #1
   11c94:	bne	11b84 <pclose@plt+0x102c>
   11c98:	mov	r0, r5
   11c9c:	bl	10b1c <fclose@plt>
   11ca0:	ldr	r0, [sp, #12]
   11ca4:	bl	109fc <unlink@plt>
   11ca8:	ldr	r5, [sp, #68]	; 0x44
   11cac:	mov	r3, r9
   11cb0:	movw	r2, #8280	; 0x2058
   11cb4:	ldr	r1, [sp, #16]
   11cb8:	movt	r2, #1
   11cbc:	str	r5, [sp]
   11cc0:	mov	r0, r4
   11cc4:	bl	10b10 <__fprintf_chk@plt>
   11cc8:	ldrb	r3, [r8, #4]
   11ccc:	cmp	r3, #0
   11cd0:	bne	11d08 <pclose@plt+0x11b0>
   11cd4:	ldr	r0, [sp, #12]
   11cd8:	bl	109d8 <free@plt>
   11cdc:	mov	r0, sl
   11ce0:	bl	109d8 <free@plt>
   11ce4:	b	1178c <pclose@plt+0xc34>
   11ce8:	mvn	r0, #0
   11cec:	b	11a80 <pclose@plt+0xf28>
   11cf0:	movw	r4, #7804	; 0x1e7c
   11cf4:	movt	r4, #1
   11cf8:	b	11b84 <pclose@plt+0x102c>
   11cfc:	bl	109f0 <__stack_chk_fail@plt>
   11d00:	mov	r0, r1
   11d04:	bl	10b64 <pclose@plt+0xc>
   11d08:	ldr	r1, [sp, #16]
   11d0c:	movw	r2, #8312	; 0x2078
   11d10:	ldr	r3, [r7, #28]
   11d14:	movt	r2, #1
   11d18:	mov	r0, r4
   11d1c:	bl	10b10 <__fprintf_chk@plt>
   11d20:	b	11cd4 <pclose@plt+0x117c>
   11d24:	mov	r0, r6
   11d28:	bl	10b64 <pclose@plt+0xc>
   11d2c:	mov	r0, r5
   11d30:	bl	10b64 <pclose@plt+0xc>
   11d34:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11d38:	mov	r7, r0
   11d3c:	ldr	r6, [pc, #76]	; 11d90 <pclose@plt+0x1238>
   11d40:	mov	r8, r1
   11d44:	ldr	r5, [pc, #72]	; 11d94 <pclose@plt+0x123c>
   11d48:	mov	r9, r2
   11d4c:	add	r6, pc, r6
   11d50:	bl	109a0 <setbuf@plt-0x20>
   11d54:	add	r5, pc, r5
   11d58:	rsb	r6, r5, r6
   11d5c:	asrs	r6, r6, #2
   11d60:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11d64:	sub	r5, r5, #4
   11d68:	mov	r4, #0
   11d6c:	add	r4, r4, #1
   11d70:	ldr	r3, [r5, #4]!
   11d74:	mov	r0, r7
   11d78:	mov	r1, r8
   11d7c:	mov	r2, r9
   11d80:	blx	r3
   11d84:	cmp	r4, r6
   11d88:	bne	11d6c <pclose@plt+0x1214>
   11d8c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11d90:	andeq	r1, r1, r8, lsr #3
   11d94:	muleq	r1, ip, r1
   11d98:	bx	lr

Disassembly of section .fini:

00011d9c <.fini>:
   11d9c:	push	{r3, lr}
   11da0:	pop	{r3, pc}
