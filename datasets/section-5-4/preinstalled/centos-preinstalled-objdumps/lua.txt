
centos-preinstalled/lua:     file format elf32-littlearm


Disassembly of section .init:

00010d7c <_init@@Base>:
   10d7c:	push	{r3, lr}
   10d80:	bl	110b8 <luaL_error@plt+0xf4>
   10d84:	pop	{r3, pc}

Disassembly of section .plt:

00010d88 <lua_getfield@plt-0x14>:
   10d88:	push	{lr}		; (str lr, [sp, #-4]!)
   10d8c:	ldr	lr, [pc, #4]	; 10d98 <_init@@Base+0x1c>
   10d90:	add	lr, pc, lr
   10d94:	ldr	pc, [lr, #8]!
   10d98:	andeq	r2, r1, r8, ror #4

00010d9c <lua_getfield@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #73728	; 0x12000
   10da4:	ldr	pc, [ip, #616]!	; 0x268

00010da8 <lua_isstring@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #73728	; 0x12000
   10db0:	ldr	pc, [ip, #608]!	; 0x260

00010db4 <lua_pushstring@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #73728	; 0x12000
   10dbc:	ldr	pc, [ip, #600]!	; 0x258

00010dc0 <abort@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #73728	; 0x12000
   10dc8:	ldr	pc, [ip, #592]!	; 0x250

00010dcc <lua_insert@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #73728	; 0x12000
   10dd4:	ldr	pc, [ip, #584]!	; 0x248

00010dd8 <lua_pushfstring@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #73728	; 0x12000
   10de0:	ldr	pc, [ip, #576]!	; 0x240

00010de4 <__libc_start_main@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #73728	; 0x12000
   10dec:	ldr	pc, [ip, #568]!	; 0x238

00010df0 <signal@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #73728	; 0x12000
   10df8:	ldr	pc, [ip, #560]!	; 0x230

00010dfc <__gmon_start__@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #73728	; 0x12000
   10e04:	ldr	pc, [ip, #552]!	; 0x228

00010e08 <lua_cpcall@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #73728	; 0x12000
   10e10:	ldr	pc, [ip, #544]!	; 0x220

00010e14 <getenv@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #73728	; 0x12000
   10e1c:	ldr	pc, [ip, #536]!	; 0x218

00010e20 <luaL_checkstack@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #73728	; 0x12000
   10e28:	ldr	pc, [ip, #528]!	; 0x210

00010e2c <lua_concat@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #73728	; 0x12000
   10e34:	ldr	pc, [ip, #520]!	; 0x208

00010e38 <luaL_newstate@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #73728	; 0x12000
   10e40:	ldr	pc, [ip, #512]!	; 0x200

00010e44 <lua_createtable@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #73728	; 0x12000
   10e4c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e50 <luaL_openlibs@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #73728	; 0x12000
   10e58:	ldr	pc, [ip, #496]!	; 0x1f0

00010e5c <lua_pushinteger@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #73728	; 0x12000
   10e64:	ldr	pc, [ip, #488]!	; 0x1e8

00010e68 <free@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #73728	; 0x12000
   10e70:	ldr	pc, [ip, #480]!	; 0x1e0

00010e74 <lua_touserdata@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #73728	; 0x12000
   10e7c:	ldr	pc, [ip, #472]!	; 0x1d8

00010e80 <lua_call@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #73728	; 0x12000
   10e88:	ldr	pc, [ip, #464]!	; 0x1d0

00010e8c <lua_pcall@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #73728	; 0x12000
   10e94:	ldr	pc, [ip, #456]!	; 0x1c8

00010e98 <fflush@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #73728	; 0x12000
   10ea0:	ldr	pc, [ip, #448]!	; 0x1c0

00010ea4 <luaL_loadfile@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #73728	; 0x12000
   10eac:	ldr	pc, [ip, #440]!	; 0x1b8

00010eb0 <isatty@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #73728	; 0x12000
   10eb8:	ldr	pc, [ip, #432]!	; 0x1b0

00010ebc <lua_objlen@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #73728	; 0x12000
   10ec4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ec8 <strlen@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #73728	; 0x12000
   10ed0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ed4 <lua_settop@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #73728	; 0x12000
   10edc:	ldr	pc, [ip, #408]!	; 0x198

00010ee0 <lua_pushvalue@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #73728	; 0x12000
   10ee8:	ldr	pc, [ip, #400]!	; 0x190

00010eec <luaL_loadbuffer@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #73728	; 0x12000
   10ef4:	ldr	pc, [ip, #392]!	; 0x188

00010ef8 <lua_rawseti@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #73728	; 0x12000
   10f00:	ldr	pc, [ip, #384]!	; 0x180

00010f04 <strstr@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #73728	; 0x12000
   10f0c:	ldr	pc, [ip, #376]!	; 0x178

00010f10 <readline@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #73728	; 0x12000
   10f18:	ldr	pc, [ip, #368]!	; 0x170

00010f1c <lua_type@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #73728	; 0x12000
   10f24:	ldr	pc, [ip, #360]!	; 0x168

00010f28 <__stack_chk_fail@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #73728	; 0x12000
   10f30:	ldr	pc, [ip, #352]!	; 0x160

00010f34 <lua_setfield@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #73728	; 0x12000
   10f3c:	ldr	pc, [ip, #344]!	; 0x158

00010f40 <__fprintf_chk@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #73728	; 0x12000
   10f48:	ldr	pc, [ip, #336]!	; 0x150

00010f4c <fputc@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #73728	; 0x12000
   10f54:	ldr	pc, [ip, #328]!	; 0x148

00010f58 <lua_gettop@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #73728	; 0x12000
   10f60:	ldr	pc, [ip, #320]!	; 0x140

00010f64 <lua_close@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #73728	; 0x12000
   10f6c:	ldr	pc, [ip, #312]!	; 0x138

00010f70 <lua_tolstring@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #73728	; 0x12000
   10f78:	ldr	pc, [ip, #304]!	; 0x130

00010f7c <lua_remove@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #73728	; 0x12000
   10f84:	ldr	pc, [ip, #296]!	; 0x128

00010f88 <lua_sethook@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #73728	; 0x12000
   10f90:	ldr	pc, [ip, #288]!	; 0x120

00010f94 <lua_gc@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #73728	; 0x12000
   10f9c:	ldr	pc, [ip, #280]!	; 0x118

00010fa0 <add_history@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #73728	; 0x12000
   10fa8:	ldr	pc, [ip, #272]!	; 0x110

00010fac <lua_pushcclosure@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #73728	; 0x12000
   10fb4:	ldr	pc, [ip, #264]!	; 0x108

00010fb8 <lua_pushlstring@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #73728	; 0x12000
   10fc0:	ldr	pc, [ip, #256]!	; 0x100

00010fc4 <luaL_error@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #73728	; 0x12000
   10fcc:	ldr	pc, [ip, #248]!	; 0xf8

Disassembly of section .text:

00010fd0 <.text>:
   10fd0:	push	{r4, r5, r6, r7, lr}
   10fd4:	movw	r4, #12504	; 0x30d8
   10fd8:	movt	r4, #2
   10fdc:	sub	sp, sp, #20
   10fe0:	mov	r7, r0
   10fe4:	mov	r6, r1
   10fe8:	ldr	r3, [r4]
   10fec:	str	r3, [sp, #12]
   10ff0:	bl	10e38 <luaL_newstate@plt>
   10ff4:	subs	r5, r0, #0
   10ff8:	beq	11060 <luaL_error@plt+0x9c>
   10ffc:	mov	r2, sp
   11000:	movw	r1, #6192	; 0x1830
   11004:	movt	r1, #1
   11008:	str	r6, [sp, #4]
   1100c:	str	r7, [sp]
   11010:	bl	10e08 <lua_cpcall@plt>
   11014:	mov	r6, r0
   11018:	mov	r0, r5
   1101c:	mov	r1, r6
   11020:	bl	114c4 <luaL_error@plt+0x500>
   11024:	mov	r0, r5
   11028:	bl	10f64 <lua_close@plt>
   1102c:	cmp	r6, #0
   11030:	movne	r0, #1
   11034:	beq	11050 <luaL_error@plt+0x8c>
   11038:	ldr	r2, [sp, #12]
   1103c:	ldr	r3, [r4]
   11040:	cmp	r2, r3
   11044:	bne	11078 <luaL_error@plt+0xb4>
   11048:	add	sp, sp, #20
   1104c:	pop	{r4, r5, r6, r7, pc}
   11050:	ldr	r0, [sp, #8]
   11054:	adds	r0, r0, #0
   11058:	movne	r0, #1
   1105c:	b	11038 <luaL_error@plt+0x74>
   11060:	ldr	r0, [r6]
   11064:	movw	r1, #8372	; 0x20b4
   11068:	movt	r1, #1
   1106c:	bl	1120c <luaL_error@plt+0x248>
   11070:	mov	r0, #1
   11074:	b	11038 <luaL_error@plt+0x74>
   11078:	bl	10f28 <__stack_chk_fail@plt>
   1107c:	mov	fp, #0
   11080:	mov	lr, #0
   11084:	pop	{r1}		; (ldr r1, [sp], #4)
   11088:	mov	r2, sp
   1108c:	push	{r2}		; (str r2, [sp, #-4]!)
   11090:	push	{r0}		; (str r0, [sp, #-4]!)
   11094:	ldr	ip, [pc, #16]	; 110ac <luaL_error@plt+0xe8>
   11098:	push	{ip}		; (str ip, [sp, #-4]!)
   1109c:	ldr	r0, [pc, #12]	; 110b0 <luaL_error@plt+0xec>
   110a0:	ldr	r3, [pc, #12]	; 110b4 <luaL_error@plt+0xf0>
   110a4:	bl	10de4 <__libc_start_main@plt>
   110a8:	bl	10dc0 <abort@plt>
   110ac:	andeq	r1, r1, r4, lsr lr
   110b0:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   110b4:	ldrdeq	r1, [r1], -r0
   110b8:	ldr	r3, [pc, #20]	; 110d4 <luaL_error@plt+0x110>
   110bc:	ldr	r2, [pc, #20]	; 110d8 <luaL_error@plt+0x114>
   110c0:	add	r3, pc, r3
   110c4:	ldr	r2, [r3, r2]
   110c8:	cmp	r2, #0
   110cc:	bxeq	lr
   110d0:	b	10dfc <__gmon_start__@plt>
   110d4:	andeq	r1, r1, r8, lsr pc
   110d8:	andeq	r0, r0, r8, asr #1
   110dc:	push	{r3, lr}
   110e0:	movw	r0, #12500	; 0x30d4
   110e4:	ldr	r3, [pc, #36]	; 11110 <luaL_error@plt+0x14c>
   110e8:	movt	r0, #2
   110ec:	rsb	r3, r0, r3
   110f0:	cmp	r3, #6
   110f4:	popls	{r3, pc}
   110f8:	movw	r3, #0
   110fc:	movt	r3, #0
   11100:	cmp	r3, #0
   11104:	popeq	{r3, pc}
   11108:	blx	r3
   1110c:	pop	{r3, pc}
   11110:	ldrdeq	r3, [r2], -r7
   11114:	push	{r3, lr}
   11118:	movw	r0, #12500	; 0x30d4
   1111c:	movw	r3, #12500	; 0x30d4
   11120:	movt	r0, #2
   11124:	movt	r3, #2
   11128:	rsb	r3, r0, r3
   1112c:	asr	r3, r3, #2
   11130:	add	r3, r3, r3, lsr #31
   11134:	asrs	r1, r3, #1
   11138:	popeq	{r3, pc}
   1113c:	movw	r2, #0
   11140:	movt	r2, #0
   11144:	cmp	r2, #0
   11148:	popeq	{r3, pc}
   1114c:	blx	r2
   11150:	pop	{r3, pc}
   11154:	push	{r4, lr}
   11158:	movw	r4, #12516	; 0x30e4
   1115c:	movt	r4, #2
   11160:	ldrb	r3, [r4]
   11164:	cmp	r3, #0
   11168:	popne	{r4, pc}
   1116c:	bl	110dc <luaL_error@plt+0x118>
   11170:	mov	r3, #1
   11174:	strb	r3, [r4]
   11178:	pop	{r4, pc}
   1117c:	movw	r0, #11988	; 0x2ed4
   11180:	movt	r0, #2
   11184:	push	{r3, lr}
   11188:	ldr	r3, [r0]
   1118c:	cmp	r3, #0
   11190:	beq	111a8 <luaL_error@plt+0x1e4>
   11194:	movw	r3, #0
   11198:	movt	r3, #0
   1119c:	cmp	r3, #0
   111a0:	beq	111a8 <luaL_error@plt+0x1e4>
   111a4:	blx	r3
   111a8:	pop	{r3, lr}
   111ac:	b	11114 <luaL_error@plt+0x150>
   111b0:	push	{r4, lr}
   111b4:	mov	r1, #0
   111b8:	bl	10df0 <signal@plt>
   111bc:	movw	r3, #12520	; 0x30e8
   111c0:	movt	r3, #2
   111c4:	movw	r1, #4576	; 0x11e0
   111c8:	mov	r2, #11
   111cc:	movt	r1, #1
   111d0:	ldr	r0, [r3]
   111d4:	mov	r3, #1
   111d8:	pop	{r4, lr}
   111dc:	b	10f88 <lua_sethook@plt>
   111e0:	mov	r1, #0
   111e4:	push	{r4, lr}
   111e8:	mov	r2, r1
   111ec:	mov	r4, r0
   111f0:	mov	r3, r1
   111f4:	bl	10f88 <lua_sethook@plt>
   111f8:	mov	r0, r4
   111fc:	movw	r1, #7752	; 0x1e48
   11200:	movt	r1, #1
   11204:	pop	{r4, lr}
   11208:	b	10fc4 <luaL_error@plt>
   1120c:	push	{r3, r4, r5, lr}
   11210:	subs	r3, r0, #0
   11214:	movw	r4, #12512	; 0x30e0
   11218:	mov	r5, r1
   1121c:	movt	r4, #2
   11220:	beq	11238 <luaL_error@plt+0x274>
   11224:	movw	r2, #7768	; 0x1e58
   11228:	ldr	r0, [r4]
   1122c:	movt	r2, #1
   11230:	mov	r1, #1
   11234:	bl	10f40 <__fprintf_chk@plt>
   11238:	mov	r3, r5
   1123c:	ldr	r0, [r4]
   11240:	movw	r2, #7776	; 0x1e60
   11244:	mov	r1, #1
   11248:	movt	r2, #1
   1124c:	bl	10f40 <__fprintf_chk@plt>
   11250:	ldr	r0, [r4]
   11254:	pop	{r3, r4, r5, lr}
   11258:	b	10e98 <fflush@plt>
   1125c:	push	{r4, r5, r6, lr}
   11260:	subs	r6, r1, #0
   11264:	mov	r5, r0
   11268:	movw	r1, #55534	; 0xd8ee
   1126c:	beq	112a4 <luaL_error@plt+0x2e0>
   11270:	movt	r1, #65535	; 0xffff
   11274:	movw	r2, #7812	; 0x1e84
   11278:	movt	r2, #1
   1127c:	movw	r4, #7784	; 0x1e68
   11280:	bl	10d9c <lua_getfield@plt>
   11284:	mov	r0, r5
   11288:	mvn	r1, #0
   1128c:	mov	r2, #0
   11290:	bl	10f70 <lua_tolstring@plt>
   11294:	movt	r4, #1
   11298:	cmp	r0, #0
   1129c:	movne	r4, r0
   112a0:	b	112d8 <luaL_error@plt+0x314>
   112a4:	movt	r1, #65535	; 0xffff
   112a8:	movw	r2, #7788	; 0x1e6c
   112ac:	movt	r2, #1
   112b0:	bl	10d9c <lua_getfield@plt>
   112b4:	mov	r0, r5
   112b8:	mvn	r1, #0
   112bc:	mov	r2, r6
   112c0:	bl	10f70 <lua_tolstring@plt>
   112c4:	movw	r3, #7780	; 0x1e64
   112c8:	movt	r3, #1
   112cc:	cmp	r0, #0
   112d0:	movne	r4, r0
   112d4:	moveq	r4, r3
   112d8:	mov	r0, r5
   112dc:	mvn	r1, #1
   112e0:	bl	10ed4 <lua_settop@plt>
   112e4:	mov	r0, r4
   112e8:	bl	10f10 <readline@plt>
   112ec:	subs	r4, r0, #0
   112f0:	beq	11348 <luaL_error@plt+0x384>
   112f4:	bl	10ec8 <strlen@plt>
   112f8:	cmp	r0, #0
   112fc:	bne	11330 <luaL_error@plt+0x36c>
   11300:	cmp	r6, #0
   11304:	mov	r0, r5
   11308:	beq	11318 <luaL_error@plt+0x354>
   1130c:	ldrb	r3, [r4]
   11310:	cmp	r3, #61	; 0x3d
   11314:	beq	11350 <luaL_error@plt+0x38c>
   11318:	mov	r1, r4
   1131c:	bl	10db4 <lua_pushstring@plt>
   11320:	mov	r0, r4
   11324:	bl	10e68 <free@plt>
   11328:	mov	r0, #1
   1132c:	pop	{r4, r5, r6, pc}
   11330:	sub	r0, r0, #1
   11334:	ldrb	r3, [r4, r0]
   11338:	cmp	r3, #10
   1133c:	moveq	r3, #0
   11340:	strbeq	r3, [r4, r0]
   11344:	b	11300 <luaL_error@plt+0x33c>
   11348:	mov	r0, r4
   1134c:	pop	{r4, r5, r6, pc}
   11350:	movw	r1, #7800	; 0x1e78
   11354:	add	r2, r4, #1
   11358:	movt	r1, #1
   1135c:	bl	10dd8 <lua_pushfstring@plt>
   11360:	b	11320 <luaL_error@plt+0x35c>
   11364:	push	{r3, r4, r5, r6, r7, lr}
   11368:	mov	r6, r1
   1136c:	mov	r4, r0
   11370:	mov	r7, r2
   11374:	bl	10f58 <lua_gettop@plt>
   11378:	mov	r2, #0
   1137c:	movw	r1, #5124	; 0x1404
   11380:	movt	r1, #1
   11384:	rsb	r5, r6, r0
   11388:	mov	r0, r4
   1138c:	bl	10fac <lua_pushcclosure@plt>
   11390:	mov	r0, r4
   11394:	mov	r1, r5
   11398:	bl	10dcc <lua_insert@plt>
   1139c:	movw	r1, #4528	; 0x11b0
   113a0:	mov	r0, #2
   113a4:	movt	r1, #1
   113a8:	bl	10df0 <signal@plt>
   113ac:	cmp	r7, #0
   113b0:	movne	r2, #0
   113b4:	mvneq	r2, #0
   113b8:	mov	r1, r6
   113bc:	mov	r3, r5
   113c0:	mov	r0, r4
   113c4:	bl	10e8c <lua_pcall@plt>
   113c8:	mov	r1, #0
   113cc:	mov	r6, r0
   113d0:	mov	r0, #2
   113d4:	bl	10df0 <signal@plt>
   113d8:	mov	r0, r4
   113dc:	mov	r1, r5
   113e0:	bl	10f7c <lua_remove@plt>
   113e4:	cmp	r6, #0
   113e8:	beq	113fc <luaL_error@plt+0x438>
   113ec:	mov	r0, r4
   113f0:	mov	r1, #2
   113f4:	mov	r2, #0
   113f8:	bl	10f94 <lua_gc@plt>
   113fc:	mov	r0, r6
   11400:	pop	{r3, r4, r5, r6, r7, pc}
   11404:	push	{r4, lr}
   11408:	mov	r1, #1
   1140c:	mov	r4, r0
   11410:	bl	10da8 <lua_isstring@plt>
   11414:	cmp	r0, #0
   11418:	bne	11424 <luaL_error@plt+0x460>
   1141c:	mov	r0, #1
   11420:	pop	{r4, pc}
   11424:	mov	r0, r4
   11428:	movw	r1, #55534	; 0xd8ee
   1142c:	movw	r2, #7820	; 0x1e8c
   11430:	movt	r1, #65535	; 0xffff
   11434:	movt	r2, #1
   11438:	bl	10d9c <lua_getfield@plt>
   1143c:	mov	r0, r4
   11440:	mvn	r1, #0
   11444:	bl	10f1c <lua_type@plt>
   11448:	cmp	r0, #5
   1144c:	beq	11464 <luaL_error@plt+0x4a0>
   11450:	mov	r0, r4
   11454:	mvn	r1, #1
   11458:	bl	10ed4 <lua_settop@plt>
   1145c:	mov	r0, #1
   11460:	pop	{r4, pc}
   11464:	mov	r0, r4
   11468:	mvn	r1, #0
   1146c:	movw	r2, #7828	; 0x1e94
   11470:	movt	r2, #1
   11474:	bl	10d9c <lua_getfield@plt>
   11478:	mov	r0, r4
   1147c:	mvn	r1, #0
   11480:	bl	10f1c <lua_type@plt>
   11484:	cmp	r0, #6
   11488:	mov	r0, r4
   1148c:	beq	1149c <luaL_error@plt+0x4d8>
   11490:	mvn	r1, #2
   11494:	bl	10ed4 <lua_settop@plt>
   11498:	b	1141c <luaL_error@plt+0x458>
   1149c:	mov	r1, #1
   114a0:	bl	10ee0 <lua_pushvalue@plt>
   114a4:	mov	r0, r4
   114a8:	mov	r1, #2
   114ac:	bl	10e5c <lua_pushinteger@plt>
   114b0:	mov	r0, r4
   114b4:	mov	r1, #2
   114b8:	mov	r2, #1
   114bc:	bl	10e80 <lua_call@plt>
   114c0:	b	1141c <luaL_error@plt+0x458>
   114c4:	push	{r3, r4, r5, lr}
   114c8:	subs	r4, r1, #0
   114cc:	mov	r5, r0
   114d0:	bne	114dc <luaL_error@plt+0x518>
   114d4:	mov	r0, r4
   114d8:	pop	{r3, r4, r5, pc}
   114dc:	mvn	r1, #0
   114e0:	bl	10f1c <lua_type@plt>
   114e4:	cmp	r0, #0
   114e8:	beq	114d4 <luaL_error@plt+0x510>
   114ec:	mov	r2, #0
   114f0:	mov	r0, r5
   114f4:	mvn	r1, #0
   114f8:	bl	10f70 <lua_tolstring@plt>
   114fc:	movw	r3, #12496	; 0x30d0
   11500:	movt	r3, #2
   11504:	movw	r1, #7840	; 0x1ea0
   11508:	movt	r1, #1
   1150c:	cmp	r0, #0
   11510:	movne	r1, r0
   11514:	ldr	r0, [r3]
   11518:	bl	1120c <luaL_error@plt+0x248>
   1151c:	mov	r0, r5
   11520:	mvn	r1, #1
   11524:	bl	10ed4 <lua_settop@plt>
   11528:	mov	r0, r4
   1152c:	pop	{r3, r4, r5, pc}
   11530:	push	{r4, r5, r6, lr}
   11534:	mov	r4, r0
   11538:	mov	r0, r1
   1153c:	mov	r6, r2
   11540:	mov	r5, r1
   11544:	bl	10ec8 <strlen@plt>
   11548:	mov	r1, r5
   1154c:	mov	r3, r6
   11550:	mov	r2, r0
   11554:	mov	r0, r4
   11558:	bl	10eec <luaL_loadbuffer@plt>
   1155c:	subs	r1, r0, #0
   11560:	movne	r1, #1
   11564:	bne	1157c <luaL_error@plt+0x5b8>
   11568:	mov	r0, r4
   1156c:	mov	r2, #1
   11570:	bl	11364 <luaL_error@plt+0x3a0>
   11574:	adds	r1, r0, #0
   11578:	movne	r1, #1
   1157c:	mov	r0, r4
   11580:	pop	{r4, r5, r6, lr}
   11584:	b	114c4 <luaL_error@plt+0x500>
   11588:	push	{r4, lr}
   1158c:	mov	r4, r0
   11590:	bl	10ea4 <luaL_loadfile@plt>
   11594:	subs	r1, r0, #0
   11598:	movne	r1, #1
   1159c:	bne	115b4 <luaL_error@plt+0x5f0>
   115a0:	mov	r0, r4
   115a4:	mov	r2, #1
   115a8:	bl	11364 <luaL_error@plt+0x3a0>
   115ac:	adds	r1, r0, #0
   115b0:	movne	r1, #1
   115b4:	mov	r0, r4
   115b8:	pop	{r4, lr}
   115bc:	b	114c4 <luaL_error@plt+0x500>
   115c0:	push	{r4, r5, r6, r7, r8, r9, lr}
   115c4:	movw	r8, #12504	; 0x30d8
   115c8:	movt	r8, #2
   115cc:	sub	sp, sp, #12
   115d0:	movw	r7, #12496	; 0x30d0
   115d4:	movt	r7, #2
   115d8:	ldr	r3, [r8]
   115dc:	mov	r4, r0
   115e0:	ldr	r9, [r7]
   115e4:	mov	r2, #0
   115e8:	str	r2, [r7]
   115ec:	str	r3, [sp, #4]
   115f0:	mov	r0, r4
   115f4:	mov	r1, #0
   115f8:	bl	10ed4 <lua_settop@plt>
   115fc:	mov	r0, r4
   11600:	mov	r1, #1
   11604:	bl	1125c <luaL_error@plt+0x298>
   11608:	cmp	r0, #0
   1160c:	beq	117e8 <luaL_error@plt+0x824>
   11610:	mov	r2, #0
   11614:	mov	r1, #1
   11618:	mov	r0, r4
   1161c:	bl	10f70 <lua_tolstring@plt>
   11620:	mov	r1, #1
   11624:	mov	r5, r0
   11628:	mov	r0, r4
   1162c:	bl	10ebc <lua_objlen@plt>
   11630:	mov	r1, r5
   11634:	movw	r3, #7908	; 0x1ee4
   11638:	movt	r3, #1
   1163c:	mov	r2, r0
   11640:	mov	r0, r4
   11644:	bl	10eec <luaL_loadbuffer@plt>
   11648:	cmp	r0, #3
   1164c:	mov	r5, r0
   11650:	beq	11694 <luaL_error@plt+0x6d0>
   11654:	mov	r0, r4
   11658:	mov	r1, #1
   1165c:	bl	10ebc <lua_objlen@plt>
   11660:	cmp	r0, #0
   11664:	bne	117d0 <luaL_error@plt+0x80c>
   11668:	mov	r0, r4
   1166c:	mov	r1, #1
   11670:	bl	10f7c <lua_remove@plt>
   11674:	cmn	r5, #1
   11678:	beq	117e8 <luaL_error@plt+0x824>
   1167c:	cmp	r5, #0
   11680:	beq	11718 <luaL_error@plt+0x754>
   11684:	mov	r1, r5
   11688:	mov	r0, r4
   1168c:	bl	114c4 <luaL_error@plt+0x500>
   11690:	b	115f0 <luaL_error@plt+0x62c>
   11694:	mvn	r1, #0
   11698:	mov	r2, sp
   1169c:	mov	r0, r4
   116a0:	bl	10f70 <lua_tolstring@plt>
   116a4:	movw	r1, #7916	; 0x1eec
   116a8:	movt	r1, #1
   116ac:	mov	r6, r0
   116b0:	bl	10f04 <strstr@plt>
   116b4:	ldr	r3, [sp]
   116b8:	sub	r3, r3, #7
   116bc:	add	r6, r6, r3
   116c0:	cmp	r0, r6
   116c4:	bne	11654 <luaL_error@plt+0x690>
   116c8:	mov	r0, r4
   116cc:	mvn	r1, #1
   116d0:	bl	10ed4 <lua_settop@plt>
   116d4:	mov	r0, r4
   116d8:	mov	r1, #0
   116dc:	bl	1125c <luaL_error@plt+0x298>
   116e0:	cmp	r0, #0
   116e4:	beq	117e8 <luaL_error@plt+0x824>
   116e8:	mov	r0, r4
   116ec:	mov	r2, #1
   116f0:	movw	r1, #7924	; 0x1ef4
   116f4:	movt	r1, #1
   116f8:	bl	10fb8 <lua_pushlstring@plt>
   116fc:	mov	r0, r4
   11700:	mvn	r1, #1
   11704:	bl	10dcc <lua_insert@plt>
   11708:	mov	r0, r4
   1170c:	mov	r1, r5
   11710:	bl	10e2c <lua_concat@plt>
   11714:	b	11610 <luaL_error@plt+0x64c>
   11718:	mov	r1, r5
   1171c:	mov	r2, r5
   11720:	mov	r0, r4
   11724:	bl	11364 <luaL_error@plt+0x3a0>
   11728:	mov	r6, r0
   1172c:	mov	r0, r4
   11730:	mov	r1, r6
   11734:	bl	114c4 <luaL_error@plt+0x500>
   11738:	cmp	r6, #0
   1173c:	bne	115f0 <luaL_error@plt+0x62c>
   11740:	mov	r0, r4
   11744:	bl	10f58 <lua_gettop@plt>
   11748:	cmp	r0, #0
   1174c:	ble	115f0 <luaL_error@plt+0x62c>
   11750:	mov	r0, r4
   11754:	movw	r1, #55534	; 0xd8ee
   11758:	movw	r2, #7872	; 0x1ec0
   1175c:	movt	r1, #65535	; 0xffff
   11760:	movt	r2, #1
   11764:	bl	10d9c <lua_getfield@plt>
   11768:	mov	r1, #1
   1176c:	mov	r0, r4
   11770:	bl	10dcc <lua_insert@plt>
   11774:	mov	r0, r4
   11778:	bl	10f58 <lua_gettop@plt>
   1177c:	mov	r2, r5
   11780:	mov	r3, r5
   11784:	sub	r1, r0, #1
   11788:	mov	r0, r4
   1178c:	bl	10e8c <lua_pcall@plt>
   11790:	cmp	r0, #0
   11794:	beq	115f0 <luaL_error@plt+0x62c>
   11798:	mov	r2, r5
   1179c:	mov	r0, r4
   117a0:	mvn	r1, #0
   117a4:	ldr	r5, [r7]
   117a8:	bl	10f70 <lua_tolstring@plt>
   117ac:	movw	r1, #7880	; 0x1ec8
   117b0:	movt	r1, #1
   117b4:	mov	r2, r0
   117b8:	mov	r0, r4
   117bc:	bl	10dd8 <lua_pushfstring@plt>
   117c0:	mov	r1, r0
   117c4:	mov	r0, r5
   117c8:	bl	1120c <luaL_error@plt+0x248>
   117cc:	b	115f0 <luaL_error@plt+0x62c>
   117d0:	mov	r1, #1
   117d4:	mov	r2, #0
   117d8:	mov	r0, r4
   117dc:	bl	10f70 <lua_tolstring@plt>
   117e0:	bl	10fa0 <add_history@plt>
   117e4:	b	11668 <luaL_error@plt+0x6a4>
   117e8:	movw	r5, #12508	; 0x30dc
   117ec:	movt	r5, #2
   117f0:	mov	r0, r4
   117f4:	mov	r1, #0
   117f8:	bl	10ed4 <lua_settop@plt>
   117fc:	ldr	r1, [r5]
   11800:	mov	r0, #10
   11804:	bl	10f4c <fputc@plt>
   11808:	ldr	r0, [r5]
   1180c:	bl	10e98 <fflush@plt>
   11810:	ldr	r2, [sp, #4]
   11814:	ldr	r3, [r8]
   11818:	str	r9, [r7]
   1181c:	cmp	r2, r3
   11820:	bne	1182c <luaL_error@plt+0x868>
   11824:	add	sp, sp, #12
   11828:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1182c:	bl	10f28 <__stack_chk_fail@plt>
   11830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11834:	mov	r1, #1
   11838:	sub	sp, sp, #20
   1183c:	mov	r4, r0
   11840:	bl	10e74 <lua_touserdata@plt>
   11844:	movw	r3, #12520	; 0x30e8
   11848:	movt	r3, #2
   1184c:	str	r4, [r3]
   11850:	ldr	r5, [r0, #4]
   11854:	mov	r7, r0
   11858:	ldr	r2, [r5]
   1185c:	cmp	r2, #0
   11860:	beq	11878 <luaL_error@plt+0x8b4>
   11864:	ldrb	r3, [r2]
   11868:	cmp	r3, #0
   1186c:	movwne	r3, #12496	; 0x30d0
   11870:	movtne	r3, #2
   11874:	strne	r2, [r3]
   11878:	mov	r1, #0
   1187c:	mov	r0, r4
   11880:	mov	r2, r1
   11884:	bl	10f94 <lua_gc@plt>
   11888:	mov	r0, r4
   1188c:	bl	10e50 <luaL_openlibs@plt>
   11890:	mov	r1, #1
   11894:	mov	r2, #0
   11898:	mov	r0, r4
   1189c:	bl	10f94 <lua_gc@plt>
   118a0:	movw	r0, #7928	; 0x1ef8
   118a4:	movt	r0, #1
   118a8:	bl	10e14 <getenv@plt>
   118ac:	subs	r1, r0, #0
   118b0:	beq	118e8 <luaL_error@plt+0x924>
   118b4:	ldrb	r3, [r1]
   118b8:	cmp	r3, #64	; 0x40
   118bc:	beq	11cf8 <luaL_error@plt+0xd34>
   118c0:	movw	r2, #7940	; 0x1f04
   118c4:	mov	r0, r4
   118c8:	movt	r2, #1
   118cc:	bl	11530 <luaL_error@plt+0x56c>
   118d0:	cmp	r0, #0
   118d4:	str	r0, [r7, #8]
   118d8:	beq	118ec <luaL_error@plt+0x928>
   118dc:	mov	r0, #0
   118e0:	add	sp, sp, #20
   118e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118e8:	str	r1, [r7, #8]
   118ec:	ldr	r3, [r5, #4]
   118f0:	cmp	r3, #0
   118f4:	beq	11d48 <luaL_error@plt+0xd84>
   118f8:	ldrb	r2, [r3]
   118fc:	cmp	r2, #45	; 0x2d
   11900:	bne	11d60 <luaL_error@plt+0xd9c>
   11904:	mov	r9, #1
   11908:	mov	r8, #0
   1190c:	mov	r1, r9
   11910:	str	r8, [sp, #8]
   11914:	str	r8, [sp, #4]
   11918:	ldrb	r2, [r3, #1]
   1191c:	cmp	r2, #101	; 0x65
   11920:	beq	11aac <luaL_error@plt+0xae8>
   11924:	bls	11984 <luaL_error@plt+0x9c0>
   11928:	cmp	r2, #108	; 0x6c
   1192c:	beq	11ab4 <luaL_error@plt+0xaf0>
   11930:	cmp	r2, #118	; 0x76
   11934:	beq	11b34 <luaL_error@plt+0xb70>
   11938:	cmp	r2, #105	; 0x69
   1193c:	beq	11d08 <luaL_error@plt+0xd44>
   11940:	movw	r4, #12512	; 0x30e0
   11944:	movw	r3, #12496	; 0x30d0
   11948:	movt	r4, #2
   1194c:	movt	r3, #2
   11950:	mov	r1, #1
   11954:	movw	r2, #8064	; 0x1f80
   11958:	ldr	r3, [r3]
   1195c:	movt	r2, #1
   11960:	ldr	r0, [r4]
   11964:	bl	10f40 <__fprintf_chk@plt>
   11968:	ldr	r0, [r4]
   1196c:	bl	10e98 <fflush@plt>
   11970:	mov	r3, #1
   11974:	mov	r0, #0
   11978:	str	r3, [r7, #8]
   1197c:	add	sp, sp, #20
   11980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11984:	cmp	r2, #0
   11988:	beq	119b4 <luaL_error@plt+0x9f0>
   1198c:	cmp	r2, #45	; 0x2d
   11990:	bne	11940 <luaL_error@plt+0x97c>
   11994:	ldrb	r3, [r3, #2]
   11998:	cmp	r3, #0
   1199c:	bne	11940 <luaL_error@plt+0x97c>
   119a0:	add	r1, r1, #1
   119a4:	ldr	r3, [r5, r1, lsl #2]
   119a8:	cmp	r3, #0
   119ac:	beq	11d40 <luaL_error@plt+0xd7c>
   119b0:	add	r9, r9, #1
   119b4:	cmp	r8, #0
   119b8:	bne	11b5c <luaL_error@plt+0xb98>
   119bc:	cmp	r9, #0
   119c0:	ldreq	r6, [r7]
   119c4:	movne	r6, r9
   119c8:	cmp	r6, #1
   119cc:	ble	11ae4 <luaL_error@plt+0xb20>
   119d0:	mov	fp, #1
   119d4:	b	11a4c <luaL_error@plt+0xa88>
   119d8:	cmp	r2, #108	; 0x6c
   119dc:	bne	11a40 <luaL_error@plt+0xa7c>
   119e0:	ldrb	r2, [r1, #2]
   119e4:	cmp	r2, #0
   119e8:	movw	r2, #8020	; 0x1f54
   119ec:	addeq	r0, r5, r0
   119f0:	addne	sl, r1, #2
   119f4:	movt	r2, #1
   119f8:	movw	r1, #55534	; 0xd8ee
   119fc:	ldreq	sl, [r0, #4]
   11a00:	movt	r1, #65535	; 0xffff
   11a04:	mov	r0, r4
   11a08:	addeq	fp, fp, #1
   11a0c:	bl	10d9c <lua_getfield@plt>
   11a10:	mov	r0, r4
   11a14:	mov	r1, sl
   11a18:	bl	10db4 <lua_pushstring@plt>
   11a1c:	mov	r1, #1
   11a20:	mov	r2, r1
   11a24:	mov	r0, r4
   11a28:	bl	11364 <luaL_error@plt+0x3a0>
   11a2c:	mov	r1, r0
   11a30:	mov	r0, r4
   11a34:	bl	114c4 <luaL_error@plt+0x500>
   11a38:	cmp	r0, #0
   11a3c:	bne	11a98 <luaL_error@plt+0xad4>
   11a40:	add	fp, fp, #1
   11a44:	cmp	r6, fp
   11a48:	ble	11ae4 <luaL_error@plt+0xb20>
   11a4c:	ldr	r1, [r5, fp, lsl #2]
   11a50:	lsl	r0, fp, #2
   11a54:	cmp	r1, #0
   11a58:	beq	11a40 <luaL_error@plt+0xa7c>
   11a5c:	ldrb	r2, [r1, #1]
   11a60:	cmp	r2, #101	; 0x65
   11a64:	bne	119d8 <luaL_error@plt+0xa14>
   11a68:	ldrb	r2, [r1, #2]
   11a6c:	cmp	r2, #0
   11a70:	movw	r2, #8004	; 0x1f44
   11a74:	addeq	r0, r5, r0
   11a78:	addne	r1, r1, #2
   11a7c:	movt	r2, #1
   11a80:	addeq	fp, fp, #1
   11a84:	ldreq	r1, [r0, #4]
   11a88:	mov	r0, r4
   11a8c:	bl	11530 <luaL_error@plt+0x56c>
   11a90:	cmp	r0, #0
   11a94:	beq	11a40 <luaL_error@plt+0xa7c>
   11a98:	mov	r3, #1
   11a9c:	mov	r0, #0
   11aa0:	str	r3, [r7, #8]
   11aa4:	add	sp, sp, #20
   11aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11aac:	mov	r2, #1
   11ab0:	str	r2, [sp, #4]
   11ab4:	ldrb	r3, [r3, #2]
   11ab8:	cmp	r3, #0
   11abc:	beq	11b48 <luaL_error@plt+0xb84>
   11ac0:	add	r9, r9, #1
   11ac4:	ldr	r3, [r5, r9, lsl #2]
   11ac8:	mov	r1, r9
   11acc:	cmp	r3, #0
   11ad0:	beq	11d40 <luaL_error@plt+0xd7c>
   11ad4:	ldrb	r2, [r3]
   11ad8:	cmp	r2, #45	; 0x2d
   11adc:	beq	11918 <luaL_error@plt+0x954>
   11ae0:	b	119b4 <luaL_error@plt+0x9f0>
   11ae4:	cmp	r9, #0
   11ae8:	mov	r3, #0
   11aec:	str	r3, [r7, #8]
   11af0:	bne	11b74 <luaL_error@plt+0xbb0>
   11af4:	ldr	r3, [sp, #8]
   11af8:	cmp	r3, #0
   11afc:	bne	11cec <luaL_error@plt+0xd28>
   11b00:	ldr	r3, [sp, #4]
   11b04:	cmp	r3, #0
   11b08:	bne	118dc <luaL_error@plt+0x918>
   11b0c:	cmp	r8, #0
   11b10:	bne	118dc <luaL_error@plt+0x918>
   11b14:	mov	r0, r8
   11b18:	bl	10eb0 <isatty@plt>
   11b1c:	cmp	r0, #0
   11b20:	bne	11d68 <luaL_error@plt+0xda4>
   11b24:	mov	r0, r4
   11b28:	mov	r1, r8
   11b2c:	bl	11588 <luaL_error@plt+0x5c4>
   11b30:	b	118dc <luaL_error@plt+0x918>
   11b34:	ldrb	r3, [r3, #2]
   11b38:	cmp	r3, #0
   11b3c:	bne	11940 <luaL_error@plt+0x97c>
   11b40:	mov	r8, #1
   11b44:	b	11ac0 <luaL_error@plt+0xafc>
   11b48:	add	r9, r9, #1
   11b4c:	ldr	r3, [r5, r9, lsl #2]
   11b50:	cmp	r3, #0
   11b54:	bne	11ac0 <luaL_error@plt+0xafc>
   11b58:	b	11940 <luaL_error@plt+0x97c>
   11b5c:	movw	r1, #7952	; 0x1f10
   11b60:	mov	r0, #0
   11b64:	movt	r1, #1
   11b68:	mov	r8, #1
   11b6c:	bl	1120c <luaL_error@plt+0x248>
   11b70:	b	119bc <luaL_error@plt+0x9f8>
   11b74:	ldr	r2, [r5]
   11b78:	cmp	r2, r3
   11b7c:	beq	11d7c <luaL_error@plt+0xdb8>
   11b80:	mov	sl, r3
   11b84:	mov	r2, r5
   11b88:	ldr	r1, [r2, #4]!
   11b8c:	add	sl, sl, #1
   11b90:	cmp	r1, #0
   11b94:	bne	11b88 <luaL_error@plt+0xbc4>
   11b98:	mvn	r8, r9
   11b9c:	add	r8, sl, r8
   11ba0:	add	r1, r8, #3
   11ba4:	movw	r2, #8028	; 0x1f5c
   11ba8:	mov	r0, r4
   11bac:	movt	r2, #1
   11bb0:	add	r3, r9, #1
   11bb4:	str	r8, [sp, #4]
   11bb8:	str	r3, [sp, #12]
   11bbc:	bl	10e20 <luaL_checkstack@plt>
   11bc0:	ldr	r3, [sp, #12]
   11bc4:	cmp	sl, r3
   11bc8:	ble	11db0 <luaL_error@plt+0xdec>
   11bcc:	lsl	fp, r9, #2
   11bd0:	ldr	r6, [sp, #12]
   11bd4:	add	r8, r5, fp
   11bd8:	add	r6, r6, #1
   11bdc:	mov	r0, r4
   11be0:	ldr	r1, [r8, #4]!
   11be4:	bl	10db4 <lua_pushstring@plt>
   11be8:	cmp	sl, r6
   11bec:	bne	11bd8 <luaL_error@plt+0xc14>
   11bf0:	ldr	r2, [sp, #12]
   11bf4:	mov	r0, r4
   11bf8:	ldr	r1, [sp, #4]
   11bfc:	bl	10e44 <lua_createtable@plt>
   11c00:	rsb	r6, r9, sl
   11c04:	sub	r8, r5, #4
   11c08:	rsb	sl, r9, #0
   11c0c:	mov	r0, r4
   11c10:	ldr	r1, [r8, #4]!
   11c14:	bl	10db4 <lua_pushstring@plt>
   11c18:	mov	r2, sl
   11c1c:	mov	r0, r4
   11c20:	mvn	r1, #1
   11c24:	add	sl, sl, #1
   11c28:	bl	10ef8 <lua_rawseti@plt>
   11c2c:	cmp	sl, r6
   11c30:	bne	11c0c <luaL_error@plt+0xc48>
   11c34:	movw	r1, #55534	; 0xd8ee
   11c38:	movw	r2, #8060	; 0x1f7c
   11c3c:	movt	r1, #65535	; 0xffff
   11c40:	movt	r2, #1
   11c44:	mov	r0, r4
   11c48:	bl	10f34 <lua_setfield@plt>
   11c4c:	ldr	r1, [r5, r9, lsl #2]
   11c50:	ldrb	r3, [r1]
   11c54:	cmp	r3, #45	; 0x2d
   11c58:	bne	11c94 <luaL_error@plt+0xcd0>
   11c5c:	ldrb	r3, [r1, #1]
   11c60:	cmp	r3, #0
   11c64:	bne	11c94 <luaL_error@plt+0xcd0>
   11c68:	add	r5, r5, fp
   11c6c:	ldr	r2, [r5, #-4]
   11c70:	ldrb	r0, [r2]
   11c74:	cmp	r0, #45	; 0x2d
   11c78:	bne	11d38 <luaL_error@plt+0xd74>
   11c7c:	ldrb	r0, [r2, #1]
   11c80:	cmp	r0, #45	; 0x2d
   11c84:	bne	11d38 <luaL_error@plt+0xd74>
   11c88:	ldrb	r3, [r2, #2]
   11c8c:	cmp	r3, #0
   11c90:	movne	r1, #0
   11c94:	ldr	r3, [sp, #4]
   11c98:	mov	r0, r4
   11c9c:	mvn	r6, r3
   11ca0:	bl	10ea4 <luaL_loadfile@plt>
   11ca4:	mov	r1, r6
   11ca8:	mov	r5, r0
   11cac:	mov	r0, r4
   11cb0:	bl	10dcc <lua_insert@plt>
   11cb4:	cmp	r5, #0
   11cb8:	beq	11d20 <luaL_error@plt+0xd5c>
   11cbc:	mov	r1, r6
   11cc0:	mov	r0, r4
   11cc4:	bl	10ed4 <lua_settop@plt>
   11cc8:	mov	r1, r5
   11ccc:	mov	r0, r4
   11cd0:	bl	114c4 <luaL_error@plt+0x500>
   11cd4:	cmp	r0, #0
   11cd8:	str	r0, [r7, #8]
   11cdc:	bne	118dc <luaL_error@plt+0x918>
   11ce0:	ldr	r3, [sp, #8]
   11ce4:	cmp	r3, #0
   11ce8:	beq	118dc <luaL_error@plt+0x918>
   11cec:	mov	r0, r4
   11cf0:	bl	115c0 <luaL_error@plt+0x5fc>
   11cf4:	b	118dc <luaL_error@plt+0x918>
   11cf8:	add	r1, r1, #1
   11cfc:	mov	r0, r4
   11d00:	bl	11588 <luaL_error@plt+0x5c4>
   11d04:	b	118d0 <luaL_error@plt+0x90c>
   11d08:	ldrb	r3, [r3, #2]
   11d0c:	cmp	r3, #0
   11d10:	bne	11940 <luaL_error@plt+0x97c>
   11d14:	mov	r8, #1
   11d18:	str	r8, [sp, #8]
   11d1c:	b	11ac0 <luaL_error@plt+0xafc>
   11d20:	mov	r2, r5
   11d24:	ldr	r1, [sp, #4]
   11d28:	mov	r0, r4
   11d2c:	bl	11364 <luaL_error@plt+0x3a0>
   11d30:	mov	r5, r0
   11d34:	b	11cc8 <luaL_error@plt+0xd04>
   11d38:	mov	r1, r3
   11d3c:	b	11c94 <luaL_error@plt+0xcd0>
   11d40:	mov	r9, r3
   11d44:	b	119b4 <luaL_error@plt+0x9f0>
   11d48:	mov	r9, r3
   11d4c:	mov	r3, #0
   11d50:	str	r3, [sp, #8]
   11d54:	str	r3, [sp, #4]
   11d58:	mov	r8, r3
   11d5c:	b	119bc <luaL_error@plt+0x9f8>
   11d60:	mov	r9, #1
   11d64:	b	11d4c <luaL_error@plt+0xd88>
   11d68:	mov	r0, r8
   11d6c:	movw	r1, #7952	; 0x1f10
   11d70:	movt	r1, #1
   11d74:	bl	1120c <luaL_error@plt+0x248>
   11d78:	b	11cec <luaL_error@plt+0xd28>
   11d7c:	mvn	r3, r9
   11d80:	mov	r0, r4
   11d84:	add	r1, r3, #3
   11d88:	movw	r2, #8028	; 0x1f5c
   11d8c:	movt	r2, #1
   11d90:	str	r3, [sp, #4]
   11d94:	bl	10e20 <luaL_checkstack@plt>
   11d98:	mov	r0, r4
   11d9c:	ldr	r1, [sp, #4]
   11da0:	add	r2, r9, #1
   11da4:	lsl	fp, r9, #2
   11da8:	bl	10e44 <lua_createtable@plt>
   11dac:	b	11c34 <luaL_error@plt+0xc70>
   11db0:	mov	r2, r3
   11db4:	mov	r0, r4
   11db8:	ldr	r1, [sp, #4]
   11dbc:	lsl	fp, r9, #2
   11dc0:	bl	10e44 <lua_createtable@plt>
   11dc4:	cmp	sl, #0
   11dc8:	bne	11c00 <luaL_error@plt+0xc3c>
   11dcc:	b	11c34 <luaL_error@plt+0xc70>
   11dd0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11dd4:	mov	r7, r0
   11dd8:	ldr	r6, [pc, #76]	; 11e2c <luaL_error@plt+0xe68>
   11ddc:	mov	r8, r1
   11de0:	ldr	r5, [pc, #72]	; 11e30 <luaL_error@plt+0xe6c>
   11de4:	mov	r9, r2
   11de8:	add	r6, pc, r6
   11dec:	bl	10d7c <_init@@Base>
   11df0:	add	r5, pc, r5
   11df4:	rsb	r6, r5, r6
   11df8:	asrs	r6, r6, #2
   11dfc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11e00:	sub	r5, r5, #4
   11e04:	mov	r4, #0
   11e08:	add	r4, r4, #1
   11e0c:	ldr	r3, [r5, #4]!
   11e10:	mov	r0, r7
   11e14:	mov	r1, r8
   11e18:	mov	r2, r9
   11e1c:	blx	r3
   11e20:	cmp	r4, r6
   11e24:	bne	11e08 <luaL_error@plt+0xe44>
   11e28:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11e2c:	andeq	r1, r1, r0, ror #1
   11e30:	ldrdeq	r1, [r1], -r4
   11e34:	bx	lr

Disassembly of section .fini:

00011e38 <_fini@@Base>:
   11e38:	push	{r3, lr}
   11e3c:	pop	{r3, pc}
