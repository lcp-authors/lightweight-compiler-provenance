
centos-preinstalled/btattach:     file format elf32-littlearm


Disassembly of section .init:

00000c0c <.init>:
 c0c:	push	{r3, lr}
 c10:	bl	1520 <main@@Base+0x6e4>
 c14:	pop	{r3, pc}

Disassembly of section .plt:

00000c18 <cfmakeraw@plt-0x14>:
 c18:	push	{lr}		; (str lr, [sp, #-4]!)
 c1c:	ldr	lr, [pc, #4]	; c28 <cfmakeraw@plt-0x4>
 c20:	add	lr, pc, lr
 c24:	ldr	pc, [lr, #8]!
 c28:	andeq	r4, r1, r8, ror #5

00000c2c <cfmakeraw@plt>:
 c2c:	add	ip, pc, #0, 12
 c30:	add	ip, ip, #20, 20	; 0x14000
 c34:	ldr	pc, [ip, #744]!	; 0x2e8

00000c38 <strcmp@plt>:
 c38:	add	ip, pc, #0, 12
 c3c:	add	ip, ip, #20, 20	; 0x14000
 c40:	ldr	pc, [ip, #736]!	; 0x2e0

00000c44 <__cxa_finalize@plt>:
 c44:	add	ip, pc, #0, 12
 c48:	add	ip, ip, #20, 20	; 0x14000
 c4c:	ldr	pc, [ip, #728]!	; 0x2d8

00000c50 <strtol@plt>:
 c50:	add	ip, pc, #0, 12
 c54:	add	ip, ip, #20, 20	; 0x14000
 c58:	ldr	pc, [ip, #720]!	; 0x2d0

00000c5c <setsockopt@plt>:
 c5c:	add	ip, pc, #0, 12
 c60:	add	ip, ip, #20, 20	; 0x14000
 c64:	ldr	pc, [ip, #712]!	; 0x2c8

00000c68 <read@plt>:
 c68:	add	ip, pc, #0, 12
 c6c:	add	ip, ip, #20, 20	; 0x14000
 c70:	ldr	pc, [ip, #704]!	; 0x2c0

00000c74 <tcflush@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #20, 20	; 0x14000
 c7c:	ldr	pc, [ip, #696]!	; 0x2b8

00000c80 <sigprocmask@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #20, 20	; 0x14000
 c88:	ldr	pc, [ip, #688]!	; 0x2b0

00000c8c <free@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #20, 20	; 0x14000
 c94:	ldr	pc, [ip, #680]!	; 0x2a8

00000c98 <__vsnprintf_chk@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #20, 20	; 0x14000
 ca0:	ldr	pc, [ip, #672]!	; 0x2a0

00000ca4 <memcpy@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #20, 20	; 0x14000
 cac:	ldr	pc, [ip, #664]!	; 0x298

00000cb0 <__stack_chk_fail@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #20, 20	; 0x14000
 cb8:	ldr	pc, [ip, #656]!	; 0x290

00000cbc <perror@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #20, 20	; 0x14000
 cc4:	ldr	pc, [ip, #648]!	; 0x288

00000cc8 <signalfd@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #20, 20	; 0x14000
 cd0:	ldr	pc, [ip, #640]!	; 0x280

00000cd4 <fwrite@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #20, 20	; 0x14000
 cdc:	ldr	pc, [ip, #632]!	; 0x278

00000ce0 <ioctl@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #20, 20	; 0x14000
 ce8:	ldr	pc, [ip, #624]!	; 0x270

00000cec <usleep@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #20, 20	; 0x14000
 cf4:	ldr	pc, [ip, #616]!	; 0x268

00000cf8 <tcsetattr@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #20, 20	; 0x14000
 d00:	ldr	pc, [ip, #608]!	; 0x260

00000d04 <puts@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #20, 20	; 0x14000
 d0c:	ldr	pc, [ip, #600]!	; 0x258

00000d10 <malloc@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #20, 20	; 0x14000
 d18:	ldr	pc, [ip, #592]!	; 0x250

00000d1c <sigaddset@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #20, 20	; 0x14000
 d24:	ldr	pc, [ip, #584]!	; 0x248

00000d28 <__libc_start_main@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #20, 20	; 0x14000
 d30:	ldr	pc, [ip, #576]!	; 0x240

00000d34 <epoll_ctl@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #20, 20	; 0x14000
 d3c:	ldr	pc, [ip, #568]!	; 0x238

00000d40 <__gmon_start__@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #20, 20	; 0x14000
 d48:	ldr	pc, [ip, #560]!	; 0x230

00000d4c <open@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #20, 20	; 0x14000
 d54:	ldr	pc, [ip, #552]!	; 0x228

00000d58 <timerfd_create@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #20, 20	; 0x14000
 d60:	ldr	pc, [ip, #544]!	; 0x220

00000d64 <getopt_long@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #20, 20	; 0x14000
 d6c:	ldr	pc, [ip, #536]!	; 0x218

00000d70 <__ctype_b_loc@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #20, 20	; 0x14000
 d78:	ldr	pc, [ip, #528]!	; 0x210

00000d7c <__errno_location@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #20, 20	; 0x14000
 d84:	ldr	pc, [ip, #520]!	; 0x208

00000d88 <bind@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #20, 20	; 0x14000
 d90:	ldr	pc, [ip, #512]!	; 0x200

00000d94 <memset@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #20, 20	; 0x14000
 d9c:	ldr	pc, [ip, #504]!	; 0x1f8

00000da0 <__printf_chk@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #20, 20	; 0x14000
 da8:	ldr	pc, [ip, #496]!	; 0x1f0

00000dac <__fprintf_chk@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #20, 20	; 0x14000
 db4:	ldr	pc, [ip, #488]!	; 0x1e8

00000db8 <writev@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #20, 20	; 0x14000
 dc0:	ldr	pc, [ip, #480]!	; 0x1e0

00000dc4 <shutdown@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #20, 20	; 0x14000
 dcc:	ldr	pc, [ip, #472]!	; 0x1d8

00000dd0 <epoll_wait@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #20, 20	; 0x14000
 dd8:	ldr	pc, [ip, #464]!	; 0x1d0

00000ddc <sigemptyset@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #20, 20	; 0x14000
 de4:	ldr	pc, [ip, #456]!	; 0x1c8

00000de8 <timerfd_settime@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #20, 20	; 0x14000
 df0:	ldr	pc, [ip, #448]!	; 0x1c0

00000df4 <socket@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #20, 20	; 0x14000
 dfc:	ldr	pc, [ip, #440]!	; 0x1b8

00000e00 <__lxstat@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #20, 20	; 0x14000
 e08:	ldr	pc, [ip, #432]!	; 0x1b0

00000e0c <abort@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #20, 20	; 0x14000
 e14:	ldr	pc, [ip, #424]!	; 0x1a8

00000e18 <epoll_create1@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #20, 20	; 0x14000
 e20:	ldr	pc, [ip, #416]!	; 0x1a0

00000e24 <close@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #20, 20	; 0x14000
 e2c:	ldr	pc, [ip, #408]!	; 0x198

00000e30 <__snprintf_chk@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #20, 20	; 0x14000
 e38:	ldr	pc, [ip, #400]!	; 0x190

Disassembly of section .text:

00000e3c <main@@Base>:
     e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     e40:	sub	sp, sp, #180	; 0xb4
     e44:	ldr	r5, [pc, #1580]	; 1478 <main@@Base+0x63c>
     e48:	mov	r6, #0
     e4c:	ldr	r3, [pc, #1576]	; 147c <main@@Base+0x640>
     e50:	mov	r9, #51712	; 0xca00
     e54:	add	r5, pc, r5
     e58:	str	r1, [sp, #12]
     e5c:	str	r6, [sp, #28]
     e60:	movw	sl, #33920	; 0x8480
     e64:	str	r6, [sp, #24]
     e68:	movt	r9, #8
     e6c:	str	r6, [sp, #20]
     e70:	movt	sl, #30
     e74:	ldr	r3, [r5, r3]
     e78:	mov	r7, r0
     e7c:	ldr	fp, [pc, #1532]	; 1480 <main@@Base+0x644>
     e80:	movw	r1, #4098	; 0x1002
     e84:	ldr	r8, [pc, #1528]	; 1484 <main@@Base+0x648>
     e88:	mov	r2, #1
     e8c:	str	r3, [sp, #16]
     e90:	add	fp, pc, fp
     e94:	ldr	r3, [r3]
     e98:	add	r8, pc, r8
     e9c:	str	r1, [sp, #36]	; 0x24
     ea0:	str	r2, [sp, #32]
     ea4:	str	r3, [sp, #172]	; 0xac
     ea8:	mov	r4, #0
     eac:	mov	r0, r7
     eb0:	str	r4, [sp]
     eb4:	mov	r2, fp
     eb8:	ldr	r1, [sp, #12]
     ebc:	mov	r3, r8
     ec0:	bl	d64 <getopt_long@plt>
     ec4:	cmp	r0, #0
     ec8:	blt	1158 <main@@Base+0x31c>
     ecc:	sub	r0, r0, #65	; 0x41
     ed0:	cmp	r0, #53	; 0x35
     ed4:	addls	pc, pc, r0, lsl #2
     ed8:	b	10cc <main@@Base+0x290>
     edc:	b	ff0 <main@@Base+0x1b4>
     ee0:	b	fdc <main@@Base+0x1a0>
     ee4:	b	10cc <main@@Base+0x290>
     ee8:	b	10cc <main@@Base+0x290>
     eec:	b	10cc <main@@Base+0x290>
     ef0:	b	10cc <main@@Base+0x290>
     ef4:	b	10cc <main@@Base+0x290>
     ef8:	b	10cc <main@@Base+0x290>
     efc:	b	10cc <main@@Base+0x290>
     f00:	b	10cc <main@@Base+0x290>
     f04:	b	10cc <main@@Base+0x290>
     f08:	b	10cc <main@@Base+0x290>
     f0c:	b	10cc <main@@Base+0x290>
     f10:	b	fd0 <main@@Base+0x194>
     f14:	b	10cc <main@@Base+0x290>
     f18:	b	fbc <main@@Base+0x180>
     f1c:	b	10cc <main@@Base+0x290>
     f20:	b	fb4 <main@@Base+0x178>
     f24:	b	105c <main@@Base+0x220>
     f28:	b	10cc <main@@Base+0x290>
     f2c:	b	10cc <main@@Base+0x290>
     f30:	b	10cc <main@@Base+0x290>
     f34:	b	10cc <main@@Base+0x290>
     f38:	b	10cc <main@@Base+0x290>
     f3c:	b	10cc <main@@Base+0x290>
     f40:	b	10cc <main@@Base+0x290>
     f44:	b	10cc <main@@Base+0x290>
     f48:	b	10cc <main@@Base+0x290>
     f4c:	b	10cc <main@@Base+0x290>
     f50:	b	10cc <main@@Base+0x290>
     f54:	b	10cc <main@@Base+0x290>
     f58:	b	10cc <main@@Base+0x290>
     f5c:	b	10cc <main@@Base+0x290>
     f60:	b	10cc <main@@Base+0x290>
     f64:	b	10cc <main@@Base+0x290>
     f68:	b	10cc <main@@Base+0x290>
     f6c:	b	10cc <main@@Base+0x290>
     f70:	b	10cc <main@@Base+0x290>
     f74:	b	10cc <main@@Base+0x290>
     f78:	b	1030 <main@@Base+0x1f4>
     f7c:	b	10cc <main@@Base+0x290>
     f80:	b	10cc <main@@Base+0x290>
     f84:	b	10cc <main@@Base+0x290>
     f88:	b	10cc <main@@Base+0x290>
     f8c:	b	10cc <main@@Base+0x290>
     f90:	b	10cc <main@@Base+0x290>
     f94:	b	10cc <main@@Base+0x290>
     f98:	b	10cc <main@@Base+0x290>
     f9c:	b	10cc <main@@Base+0x290>
     fa0:	b	10cc <main@@Base+0x290>
     fa4:	b	10cc <main@@Base+0x290>
     fa8:	b	10cc <main@@Base+0x290>
     fac:	b	10cc <main@@Base+0x290>
     fb0:	b	1004 <main@@Base+0x1c8>
     fb4:	mov	r6, #1
     fb8:	b	ea8 <main@@Base+0x6c>
     fbc:	ldr	r3, [pc, #1220]	; 1488 <main@@Base+0x64c>
     fc0:	ldr	r3, [r5, r3]
     fc4:	ldr	r3, [r3]
     fc8:	str	r3, [sp, #28]
     fcc:	b	ea8 <main@@Base+0x6c>
     fd0:	mov	r3, #0
     fd4:	str	r3, [sp, #32]
     fd8:	b	ea8 <main@@Base+0x6c>
     fdc:	ldr	r3, [pc, #1188]	; 1488 <main@@Base+0x64c>
     fe0:	ldr	r3, [r5, r3]
     fe4:	ldr	r3, [r3]
     fe8:	str	r3, [sp, #20]
     fec:	b	ea8 <main@@Base+0x6c>
     ff0:	ldr	r3, [pc, #1168]	; 1488 <main@@Base+0x64c>
     ff4:	ldr	r3, [r5, r3]
     ff8:	ldr	r3, [r3]
     ffc:	str	r3, [sp, #24]
    1000:	b	ea8 <main@@Base+0x6c>
    1004:	ldr	r0, [pc, #1152]	; 148c <main@@Base+0x650>
    1008:	add	r0, pc, r0
    100c:	bl	d04 <puts@plt>
    1010:	mov	r0, #0
    1014:	ldr	r1, [sp, #16]
    1018:	ldr	r2, [sp, #172]	; 0xac
    101c:	ldr	r3, [r1]
    1020:	cmp	r2, r3
    1024:	bne	1474 <main@@Base+0x638>
    1028:	add	sp, sp, #180	; 0xb4
    102c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1030:	ldr	r0, [pc, #1112]	; 1490 <main@@Base+0x654>
    1034:	add	r0, pc, r0
    1038:	bl	d04 <puts@plt>
    103c:	ldr	r0, [pc, #1104]	; 1494 <main@@Base+0x658>
    1040:	add	r0, pc, r0
    1044:	bl	d04 <puts@plt>
    1048:	ldr	r0, [pc, #1096]	; 1498 <main@@Base+0x65c>
    104c:	add	r0, pc, r0
    1050:	bl	d04 <puts@plt>
    1054:	mov	r0, #0
    1058:	b	1014 <main@@Base+0x1d8>
    105c:	ldr	r3, [pc, #1060]	; 1488 <main@@Base+0x64c>
    1060:	mov	r1, #0
    1064:	mov	r2, #10
    1068:	ldr	r4, [r5, r3]
    106c:	ldr	r0, [r4]
    1070:	bl	c50 <strtol@plt>
    1074:	cmp	r0, r9
    1078:	beq	134c <main@@Base+0x510>
    107c:	ble	10d4 <main@@Base+0x298>
    1080:	cmp	r0, sl
    1084:	beq	1340 <main@@Base+0x504>
    1088:	bgt	1118 <main@@Base+0x2dc>
    108c:	movw	r3, #16960	; 0x4240
    1090:	movt	r3, #15
    1094:	cmp	r0, r3
    1098:	beq	1334 <main@@Base+0x4f8>
    109c:	ble	12b4 <main@@Base+0x478>
    10a0:	mov	r3, #37888	; 0x9400
    10a4:	movt	r3, #17
    10a8:	cmp	r0, r3
    10ac:	beq	1310 <main@@Base+0x4d4>
    10b0:	movw	r3, #58208	; 0xe360
    10b4:	movt	r3, #22
    10b8:	cmp	r0, r3
    10bc:	bne	11b0 <main@@Base+0x374>
    10c0:	movw	r2, #4106	; 0x100a
    10c4:	str	r2, [sp, #36]	; 0x24
    10c8:	b	ea8 <main@@Base+0x6c>
    10cc:	mov	r0, #1
    10d0:	b	1014 <main@@Base+0x1d8>
    10d4:	cmp	r0, #57600	; 0xe100
    10d8:	beq	12f8 <main@@Base+0x4bc>
    10dc:	ble	1198 <main@@Base+0x35c>
    10e0:	cmp	r0, #230400	; 0x38400
    10e4:	beq	12ec <main@@Base+0x4b0>
    10e8:	ble	1298 <main@@Base+0x45c>
    10ec:	mov	r3, #2048	; 0x800
    10f0:	movt	r3, #7
    10f4:	cmp	r0, r3
    10f8:	beq	131c <main@@Base+0x4e0>
    10fc:	movw	r3, #41248	; 0xa120
    1100:	movt	r3, #7
    1104:	cmp	r0, r3
    1108:	bne	11b0 <main@@Base+0x374>
    110c:	movw	r3, #4101	; 0x1005
    1110:	str	r3, [sp, #36]	; 0x24
    1114:	b	ea8 <main@@Base+0x6c>
    1118:	movw	r3, #50880	; 0xc6c0
    111c:	movt	r3, #45	; 0x2d
    1120:	cmp	r0, r3
    1124:	beq	1304 <main@@Base+0x4c8>
    1128:	ble	127c <main@@Base+0x440>
    112c:	movw	r3, #26592	; 0x67e0
    1130:	movt	r3, #53	; 0x35
    1134:	cmp	r0, r3
    1138:	beq	1328 <main@@Base+0x4ec>
    113c:	mov	r3, #2304	; 0x900
    1140:	movt	r3, #61	; 0x3d
    1144:	cmp	r0, r3
    1148:	bne	11b0 <main@@Base+0x374>
    114c:	movw	r1, #4111	; 0x100f
    1150:	str	r1, [sp, #36]	; 0x24
    1154:	b	ea8 <main@@Base+0x6c>
    1158:	ldr	r3, [pc, #828]	; 149c <main@@Base+0x660>
    115c:	ldr	r3, [r5, r3]
    1160:	ldr	r3, [r3]
    1164:	rsb	r7, r3, r7
    1168:	cmp	r7, #0
    116c:	ble	11d8 <main@@Base+0x39c>
    1170:	ldr	r3, [pc, #808]	; 14a0 <main@@Base+0x664>
    1174:	mov	r1, #1
    1178:	ldr	r0, [pc, #804]	; 14a4 <main@@Base+0x668>
    117c:	mov	r2, #32
    1180:	ldr	r3, [r5, r3]
    1184:	add	r0, pc, r0
    1188:	ldr	r3, [r3]
    118c:	bl	cd4 <fwrite@plt>
    1190:	mov	r0, #1
    1194:	b	1014 <main@@Base+0x1d8>
    1198:	cmp	r0, #19200	; 0x4b00
    119c:	beq	12c8 <main@@Base+0x48c>
    11a0:	cmp	r0, #38400	; 0x9600
    11a4:	beq	12e0 <main@@Base+0x4a4>
    11a8:	cmp	r0, #9600	; 0x2580
    11ac:	beq	12d4 <main@@Base+0x498>
    11b0:	ldr	r0, [pc, #744]	; 14a0 <main@@Base+0x664>
    11b4:	mov	r1, #1
    11b8:	ldr	r2, [pc, #744]	; 14a8 <main@@Base+0x66c>
    11bc:	ldr	r3, [r4]
    11c0:	ldr	r0, [r5, r0]
    11c4:	add	r2, pc, r2
    11c8:	ldr	r0, [r0]
    11cc:	bl	dac <__fprintf_chk@plt>
    11d0:	mov	r0, #1
    11d4:	b	1014 <main@@Base+0x1d8>
    11d8:	add	r7, sp, #44	; 0x2c
    11dc:	bl	29dc <bt_hci_unref@@Base+0xa60>
    11e0:	mov	r0, r7
    11e4:	bl	ddc <sigemptyset@plt>
    11e8:	mov	r1, #2
    11ec:	mov	r0, r7
    11f0:	bl	d1c <sigaddset@plt>
    11f4:	mov	r1, #15
    11f8:	mov	r0, r7
    11fc:	bl	d1c <sigaddset@plt>
    1200:	ldr	r1, [pc, #676]	; 14ac <main@@Base+0x670>
    1204:	mov	r2, r4
    1208:	mov	r0, r7
    120c:	add	r1, pc, r1
    1210:	mov	r3, r4
    1214:	bl	317c <bt_hci_unref@@Base+0x1200>
    1218:	ldr	r2, [sp, #28]
    121c:	cmp	r2, #0
    1220:	movne	r9, r2
    1224:	bne	1240 <main@@Base+0x404>
    1228:	b	146c <main@@Base+0x630>
    122c:	mov	r1, r9
    1230:	bl	c38 <strcmp@plt>
    1234:	cmp	r0, #0
    1238:	beq	1358 <main@@Base+0x51c>
    123c:	add	r4, r4, #1
    1240:	add	r3, r8, #128	; 0x80
    1244:	lsl	r7, r4, #3
    1248:	ldr	r0, [r3, r4, lsl #3]
    124c:	cmp	r0, #0
    1250:	bne	122c <main@@Base+0x3f0>
    1254:	ldr	r3, [pc, #580]	; 14a0 <main@@Base+0x664>
    1258:	mov	r1, #1
    125c:	ldr	r0, [pc, #588]	; 14b0 <main@@Base+0x674>
    1260:	mov	r2, #17
    1264:	ldr	r3, [r5, r3]
    1268:	add	r0, pc, r0
    126c:	ldr	r3, [r3]
    1270:	bl	cd4 <fwrite@plt>
    1274:	mov	r0, #1
    1278:	b	1014 <main@@Base+0x1d8>
    127c:	movw	r3, #9632	; 0x25a0
    1280:	movt	r3, #38	; 0x26
    1284:	cmp	r0, r3
    1288:	bne	11b0 <main@@Base+0x374>
    128c:	movw	r1, #4108	; 0x100c
    1290:	str	r1, [sp, #36]	; 0x24
    1294:	b	ea8 <main@@Base+0x6c>
    1298:	mov	r3, #49664	; 0xc200
    129c:	movt	r3, #1
    12a0:	cmp	r0, r3
    12a4:	bne	11b0 <main@@Base+0x374>
    12a8:	movw	r3, #4098	; 0x1002
    12ac:	str	r3, [sp, #36]	; 0x24
    12b0:	b	ea8 <main@@Base+0x6c>
    12b4:	cmp	r0, #921600	; 0xe1000
    12b8:	bne	11b0 <main@@Base+0x374>
    12bc:	movw	r2, #4103	; 0x1007
    12c0:	str	r2, [sp, #36]	; 0x24
    12c4:	b	ea8 <main@@Base+0x6c>
    12c8:	mov	r3, #14
    12cc:	str	r3, [sp, #36]	; 0x24
    12d0:	b	ea8 <main@@Base+0x6c>
    12d4:	mov	r2, #13
    12d8:	str	r2, [sp, #36]	; 0x24
    12dc:	b	ea8 <main@@Base+0x6c>
    12e0:	mov	r1, #15
    12e4:	str	r1, [sp, #36]	; 0x24
    12e8:	b	ea8 <main@@Base+0x6c>
    12ec:	movw	r1, #4099	; 0x1003
    12f0:	str	r1, [sp, #36]	; 0x24
    12f4:	b	ea8 <main@@Base+0x6c>
    12f8:	movw	r2, #4097	; 0x1001
    12fc:	str	r2, [sp, #36]	; 0x24
    1300:	b	ea8 <main@@Base+0x6c>
    1304:	movw	r2, #4109	; 0x100d
    1308:	str	r2, [sp, #36]	; 0x24
    130c:	b	ea8 <main@@Base+0x6c>
    1310:	movw	r1, #4105	; 0x1009
    1314:	str	r1, [sp, #36]	; 0x24
    1318:	b	ea8 <main@@Base+0x6c>
    131c:	movw	r2, #4100	; 0x1004
    1320:	str	r2, [sp, #36]	; 0x24
    1324:	b	ea8 <main@@Base+0x6c>
    1328:	movw	r3, #4110	; 0x100e
    132c:	str	r3, [sp, #36]	; 0x24
    1330:	b	ea8 <main@@Base+0x6c>
    1334:	movw	r3, #4104	; 0x1008
    1338:	str	r3, [sp, #36]	; 0x24
    133c:	b	ea8 <main@@Base+0x6c>
    1340:	movw	r3, #4107	; 0x100b
    1344:	str	r3, [sp, #36]	; 0x24
    1348:	b	ea8 <main@@Base+0x6c>
    134c:	movw	r1, #4102	; 0x1006
    1350:	str	r1, [sp, #36]	; 0x24
    1354:	b	ea8 <main@@Base+0x6c>
    1358:	add	r7, r8, r7
    135c:	ldr	r4, [r7, #132]	; 0x84
    1360:	ldr	r3, [sp, #20]
    1364:	cmp	r3, #0
    1368:	beq	1434 <main@@Base+0x5f8>
    136c:	ldr	r1, [pc, #320]	; 14b4 <main@@Base+0x678>
    1370:	mov	r0, #1
    1374:	ldr	r2, [sp, #20]
    1378:	add	r1, pc, r1
    137c:	bl	da0 <__printf_chk@plt>
    1380:	cmp	r6, #0
    1384:	ldr	r0, [sp, #20]
    1388:	mov	r1, r4
    138c:	movne	r3, #1
    1390:	moveq	r3, #2
    1394:	ldr	r2, [sp, #36]	; 0x24
    1398:	str	r3, [sp]
    139c:	ldr	r3, [sp, #32]
    13a0:	bl	1708 <main@@Base+0x8cc>
    13a4:	cmp	r0, #0
    13a8:	blt	1434 <main@@Base+0x5f8>
    13ac:	ldr	r2, [pc, #260]	; 14b8 <main@@Base+0x67c>
    13b0:	mov	r3, #0
    13b4:	mov	r1, r3
    13b8:	str	r3, [sp]
    13bc:	add	r2, pc, r2
    13c0:	mov	r7, #1
    13c4:	bl	2b00 <bt_hci_unref@@Base+0xb84>
    13c8:	ldr	r1, [sp, #24]
    13cc:	cmp	r1, #0
    13d0:	beq	143c <main@@Base+0x600>
    13d4:	ldr	r1, [pc, #224]	; 14bc <main@@Base+0x680>
    13d8:	mov	r0, #1
    13dc:	ldr	r2, [sp, #24]
    13e0:	add	r1, pc, r1
    13e4:	bl	da0 <__printf_chk@plt>
    13e8:	cmp	r6, #0
    13ec:	ldr	r0, [sp, #24]
    13f0:	mov	r1, r4
    13f4:	movne	r6, #1
    13f8:	moveq	r6, #6
    13fc:	ldr	r2, [sp, #36]	; 0x24
    1400:	str	r6, [sp]
    1404:	ldr	r3, [sp, #32]
    1408:	bl	1708 <main@@Base+0x8cc>
    140c:	cmp	r0, #0
    1410:	blt	143c <main@@Base+0x600>
    1414:	ldr	r2, [pc, #164]	; 14c0 <main@@Base+0x684>
    1418:	mov	r3, #0
    141c:	mov	r1, r3
    1420:	str	r3, [sp]
    1424:	add	r2, pc, r2
    1428:	bl	2b00 <bt_hci_unref@@Base+0xb84>
    142c:	bl	2d34 <bt_hci_unref@@Base+0xdb8>
    1430:	b	1014 <main@@Base+0x1d8>
    1434:	mov	r7, #0
    1438:	b	13c8 <main@@Base+0x58c>
    143c:	cmp	r7, #0
    1440:	bne	142c <main@@Base+0x5f0>
    1444:	ldr	r3, [pc, #84]	; 14a0 <main@@Base+0x664>
    1448:	mov	r1, #1
    144c:	ldr	r0, [pc, #112]	; 14c4 <main@@Base+0x688>
    1450:	mov	r2, #23
    1454:	ldr	r3, [r5, r3]
    1458:	add	r0, pc, r0
    145c:	ldr	r3, [r3]
    1460:	bl	cd4 <fwrite@plt>
    1464:	mov	r0, #1
    1468:	b	1014 <main@@Base+0x1d8>
    146c:	ldr	r4, [sp, #28]
    1470:	b	1360 <main@@Base+0x524>
    1474:	bl	cb0 <__stack_chk_fail@plt>
    1478:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
    147c:	andeq	r0, r0, r8, asr #1
    1480:	muleq	r0, r4, lr
    1484:	andeq	r3, r1, ip, ror lr
    1488:	andeq	r0, r0, ip, ror #1
    148c:	andeq	r2, r0, ip, lsr #26
    1490:	andeq	r2, r0, r8, lsl #26
    1494:	andeq	r2, r0, r8, lsr #26
    1498:	andeq	r2, r0, r0, lsr sp
    149c:	andeq	r0, r0, ip, asr #1
    14a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    14a4:	andeq	r2, r0, ip, lsl sp
    14a8:	andeq	r2, r0, ip, asr sp
    14ac:			; <UNDEFINED> instruction: 0x000004b8
    14b0:	andeq	r2, r0, ip, asr #25
    14b4:	andeq	r2, r0, ip, asr #22
    14b8:	strdeq	r0, [r0], -r8
    14bc:	andeq	r2, r0, r8, lsl #22
    14c0:	muleq	r0, r0, r2
    14c4:			; <UNDEFINED> instruction: 0x00002ab0
    14c8:	mov	fp, #0
    14cc:	mov	lr, #0
    14d0:	pop	{r1}		; (ldr r1, [sp], #4)
    14d4:	mov	r2, sp
    14d8:	push	{r2}		; (str r2, [sp, #-4]!)
    14dc:	push	{r0}		; (str r0, [sp, #-4]!)
    14e0:	ldr	sl, [pc, #40]	; 1510 <main@@Base+0x6d4>
    14e4:	add	r3, pc, #36	; 0x24
    14e8:	add	sl, sl, r3
    14ec:	ldr	ip, [pc, #32]	; 1514 <main@@Base+0x6d8>
    14f0:	ldr	ip, [sl, ip]
    14f4:	push	{ip}		; (str ip, [sp, #-4]!)
    14f8:	ldr	r3, [pc, #24]	; 1518 <main@@Base+0x6dc>
    14fc:	ldr	r3, [sl, r3]
    1500:	ldr	r0, [pc, #20]	; 151c <main@@Base+0x6e0>
    1504:	ldr	r0, [sl, r0]
    1508:	bl	d28 <__libc_start_main@plt>
    150c:	bl	e0c <abort@plt>
    1510:	andeq	r3, r1, r0, lsl #20
    1514:	strheq	r0, [r0], -ip
    1518:	ldrdeq	r0, [r0], -r8
    151c:	andeq	r0, r0, r0, ror #1
    1520:	ldr	r3, [pc, #20]	; 153c <main@@Base+0x700>
    1524:	ldr	r2, [pc, #20]	; 1540 <main@@Base+0x704>
    1528:	add	r3, pc, r3
    152c:	ldr	r2, [r3, r2]
    1530:	cmp	r2, #0
    1534:	bxeq	lr
    1538:	b	d40 <__gmon_start__@plt>
    153c:	andeq	r3, r1, r0, ror #19
    1540:	ldrdeq	r0, [r0], -r4
    1544:	ldr	r2, [pc, #60]	; 1588 <main@@Base+0x74c>
    1548:	ldr	r0, [pc, #60]	; 158c <main@@Base+0x750>
    154c:	add	r2, pc, r2
    1550:	add	r0, pc, r0
    1554:	add	r2, r2, #3
    1558:	rsb	r2, r0, r2
    155c:	push	{r3, lr}
    1560:	cmp	r2, #6
    1564:	ldr	r3, [pc, #36]	; 1590 <main@@Base+0x754>
    1568:	add	r3, pc, r3
    156c:	popls	{r3, pc}
    1570:	ldr	r2, [pc, #28]	; 1594 <main@@Base+0x758>
    1574:	ldr	r3, [r3, r2]
    1578:	cmp	r3, #0
    157c:	popeq	{r3, pc}
    1580:	blx	r3
    1584:	pop	{r3, pc}
    1588:			; <UNDEFINED> instruction: 0x00013ab0
    158c:	andeq	r3, r1, ip, lsr #21
    1590:	andeq	r3, r1, r0, lsr #19
    1594:	andeq	r0, r0, r4, asr #1
    1598:	push	{r3, lr}
    159c:	ldr	r0, [pc, #64]	; 15e4 <main@@Base+0x7a8>
    15a0:	ldr	r3, [pc, #64]	; 15e8 <main@@Base+0x7ac>
    15a4:	add	r0, pc, r0
    15a8:	ldr	r2, [pc, #60]	; 15ec <main@@Base+0x7b0>
    15ac:	add	r3, pc, r3
    15b0:	rsb	r3, r0, r3
    15b4:	add	r2, pc, r2
    15b8:	asr	r3, r3, #2
    15bc:	add	r3, r3, r3, lsr #31
    15c0:	asrs	r3, r3, #1
    15c4:	popeq	{r3, pc}
    15c8:	ldr	r1, [pc, #32]	; 15f0 <main@@Base+0x7b4>
    15cc:	ldr	r2, [r2, r1]
    15d0:	cmp	r2, #0
    15d4:	popeq	{r3, pc}
    15d8:	mov	r1, r3
    15dc:	blx	r2
    15e0:	pop	{r3, pc}
    15e4:	andeq	r3, r1, r8, asr sl
    15e8:	andeq	r3, r1, r0, asr sl
    15ec:	andeq	r3, r1, r4, asr r9
    15f0:	andeq	r0, r0, r8, ror #1
    15f4:	ldr	r2, [pc, #76]	; 1648 <main@@Base+0x80c>
    15f8:	push	{r3, lr}
    15fc:	add	r2, pc, r2
    1600:	ldr	r3, [pc, #68]	; 164c <main@@Base+0x810>
    1604:	ldrb	r2, [r2]
    1608:	add	r3, pc, r3
    160c:	cmp	r2, #0
    1610:	popne	{r3, pc}
    1614:	ldr	r2, [pc, #52]	; 1650 <main@@Base+0x814>
    1618:	ldr	r3, [r3, r2]
    161c:	cmp	r3, #0
    1620:	beq	1630 <main@@Base+0x7f4>
    1624:	ldr	r0, [pc, #40]	; 1654 <main@@Base+0x818>
    1628:	add	r0, pc, r0
    162c:	bl	c44 <__cxa_finalize@plt>
    1630:	bl	1544 <main@@Base+0x708>
    1634:	ldr	r3, [pc, #28]	; 1658 <main@@Base+0x81c>
    1638:	mov	r2, #1
    163c:	add	r3, pc, r3
    1640:	strb	r2, [r3]
    1644:	pop	{r3, pc}
    1648:	andeq	r3, r1, r0, lsl #20
    164c:	andeq	r3, r1, r0, lsl #18
    1650:	andeq	r0, r0, r0, asr #1
    1654:	ldrdeq	r3, [r1], -r4
    1658:	andeq	r3, r1, r0, asr #19
    165c:	ldr	r0, [pc, #52]	; 1698 <main@@Base+0x85c>
    1660:	push	{r3, lr}
    1664:	add	r0, pc, r0
    1668:	ldr	r3, [pc, #44]	; 169c <main@@Base+0x860>
    166c:	ldr	r2, [r0]
    1670:	add	r3, pc, r3
    1674:	cmp	r2, #0
    1678:	beq	1690 <main@@Base+0x854>
    167c:	ldr	r2, [pc, #28]	; 16a0 <main@@Base+0x864>
    1680:	ldr	r3, [r3, r2]
    1684:	cmp	r3, #0
    1688:	beq	1690 <main@@Base+0x854>
    168c:	blx	r3
    1690:	pop	{r3, lr}
    1694:	b	1598 <main@@Base+0x75c>
    1698:	andeq	r3, r1, ip, lsr #13
    169c:	muleq	r1, r8, r8
    16a0:	andeq	r0, r0, r4, ror #1
    16a4:	ldr	r1, [pc, #12]	; 16b8 <main@@Base+0x87c>
    16a8:	ldrh	r2, [r0, #5]
    16ac:	mov	r0, #1
    16b0:	add	r1, pc, r1
    16b4:	b	da0 <__printf_chk@plt>
    16b8:	strdeq	r2, [r0], -r8
    16bc:	ldr	r0, [pc, #4]	; 16c8 <main@@Base+0x88c>
    16c0:	add	r0, pc, r0
    16c4:	b	d04 <puts@plt>
    16c8:	strdeq	r2, [r0], -ip
    16cc:	cmp	r0, #2
    16d0:	push	{r4, lr}
    16d4:	beq	16e0 <main@@Base+0x8a4>
    16d8:	cmp	r0, #15
    16dc:	popne	{r4, pc}
    16e0:	ldr	r4, [pc, #28]	; 1704 <main@@Base+0x8c8>
    16e4:	add	r4, pc, r4
    16e8:	ldrb	r3, [r4]
    16ec:	cmp	r3, #0
    16f0:	popne	{r4, pc}
    16f4:	bl	2a28 <bt_hci_unref@@Base+0xaac>
    16f8:	mov	r3, #1
    16fc:	strb	r3, [r4]
    1700:	pop	{r4, pc}
    1704:	andeq	r3, r1, r9, lsl r9
    1708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    170c:	sub	sp, sp, #92	; 0x5c
    1710:	ldr	r6, [pc, #692]	; 19cc <main@@Base+0xb90>
    1714:	mov	sl, r3
    1718:	ldr	ip, [pc, #688]	; 19d0 <main@@Base+0xb94>
    171c:	mov	r3, #15
    1720:	add	r6, pc, r6
    1724:	mov	fp, r1
    1728:	movw	r1, #258	; 0x102
    172c:	mov	r9, r2
    1730:	ldr	r7, [r6, ip]
    1734:	str	r3, [sp, #20]
    1738:	ldr	r8, [sp, #128]	; 0x80
    173c:	ldr	r3, [r7]
    1740:	str	r3, [sp, #84]	; 0x54
    1744:	bl	d4c <open@plt>
    1748:	subs	r4, r0, #0
    174c:	blt	1904 <main@@Base+0xac8>
    1750:	mov	r1, #2
    1754:	bl	c74 <tcflush@plt>
    1758:	cmp	r0, #0
    175c:	blt	1914 <main@@Base+0xad8>
    1760:	mov	r0, r4
    1764:	movw	r1, #21540	; 0x5424
    1768:	add	r2, sp, #16
    176c:	bl	ce0 <ioctl@plt>
    1770:	cmp	r0, #0
    1774:	blt	1948 <main@@Base+0xb0c>
    1778:	add	r5, sp, #24
    177c:	mov	r1, #0
    1780:	mov	r2, #60	; 0x3c
    1784:	mov	r0, r5
    1788:	bl	d94 <memset@plt>
    178c:	mov	r0, r5
    1790:	bl	c2c <cfmakeraw@plt>
    1794:	ldr	r3, [sp, #32]
    1798:	cmp	sl, #0
    179c:	mov	r2, r5
    17a0:	orr	r9, r9, r3
    17a4:	mov	r0, r4
    17a8:	orrne	r9, r9, #-2147483648	; 0x80000000
    17ac:	mov	r1, #0
    17b0:	orr	r9, r9, #2176	; 0x880
    17b4:	str	r9, [sp, #32]
    17b8:	bl	cf8 <tcsetattr@plt>
    17bc:	cmp	r0, #0
    17c0:	blt	1960 <main@@Base+0xb24>
    17c4:	mov	r0, r4
    17c8:	movw	r1, #21539	; 0x5423
    17cc:	add	r2, sp, #20
    17d0:	bl	ce0 <ioctl@plt>
    17d4:	cmp	r0, #0
    17d8:	blt	19b0 <main@@Base+0xb74>
    17dc:	ldr	r1, [pc, #496]	; 19d4 <main@@Base+0xb98>
    17e0:	mov	r0, #1
    17e4:	ldr	r2, [sp, #16]
    17e8:	add	r1, pc, r1
    17ec:	ldr	r3, [sp, #20]
    17f0:	bl	da0 <__printf_chk@plt>
    17f4:	mov	r0, r4
    17f8:	movw	r1, #21963	; 0x55cb
    17fc:	mov	r2, r8
    1800:	movt	r1, #16388	; 0x4004
    1804:	bl	ce0 <ioctl@plt>
    1808:	cmp	r0, #0
    180c:	blt	192c <main@@Base+0xaf0>
    1810:	mov	r2, fp
    1814:	movw	r1, #21960	; 0x55c8
    1818:	mov	r0, r4
    181c:	movt	r1, #16388	; 0x4004
    1820:	bl	ce0 <ioctl@plt>
    1824:	cmp	r0, #0
    1828:	blt	1978 <main@@Base+0xb3c>
    182c:	movw	r1, #21962	; 0x55ca
    1830:	mov	r0, r4
    1834:	movt	r1, #32772	; 0x8004
    1838:	bl	ce0 <ioctl@plt>
    183c:	subs	r5, r0, #0
    1840:	blt	1994 <main@@Base+0xb58>
    1844:	ldr	r1, [pc, #396]	; 19d8 <main@@Base+0xb9c>
    1848:	mov	r0, #1
    184c:	mov	r2, r5
    1850:	add	r1, pc, r1
    1854:	bl	da0 <__printf_chk@plt>
    1858:	tst	r8, #1
    185c:	beq	18b8 <main@@Base+0xa7c>
    1860:	uxth	r8, r5
    1864:	mov	r5, #6
    1868:	mov	r0, r8
    186c:	bl	2008 <bt_hci_unref@@Base+0x8c>
    1870:	subs	r1, r0, #0
    1874:	bne	18d4 <main@@Base+0xa98>
    1878:	movw	r0, #53392	; 0xd090
    187c:	movt	r0, #3
    1880:	bl	cec <usleep@plt>
    1884:	subs	r5, r5, #1
    1888:	bne	1868 <main@@Base+0xa2c>
    188c:	ldr	r3, [pc, #328]	; 19dc <main@@Base+0xba0>
    1890:	mov	r1, #1
    1894:	ldr	r0, [pc, #324]	; 19e0 <main@@Base+0xba4>
    1898:	mov	r2, #32
    189c:	ldr	r3, [r6, r3]
    18a0:	add	r0, pc, r0
    18a4:	ldr	r3, [r3]
    18a8:	bl	cd4 <fwrite@plt>
    18ac:	mov	r0, r4
    18b0:	bl	e24 <close@plt>
    18b4:	mvn	r4, #0
    18b8:	ldr	r2, [sp, #84]	; 0x54
    18bc:	mov	r0, r4
    18c0:	ldr	r3, [r7]
    18c4:	cmp	r2, r3
    18c8:	bne	19c8 <main@@Base+0xb8c>
    18cc:	add	sp, sp, #92	; 0x5c
    18d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    18d4:	ldr	ip, [pc, #264]	; 19e4 <main@@Base+0xba8>
    18d8:	mov	r2, #0
    18dc:	ldr	lr, [pc, #260]	; 19e8 <main@@Base+0xbac>
    18e0:	mov	r3, r2
    18e4:	str	r1, [sp, #4]
    18e8:	movw	r1, #4097	; 0x1001
    18ec:	add	lr, pc, lr
    18f0:	str	lr, [sp]
    18f4:	ldr	ip, [r6, ip]
    18f8:	str	ip, [sp, #8]
    18fc:	bl	2128 <bt_hci_unref@@Base+0x1ac>
    1900:	b	18b8 <main@@Base+0xa7c>
    1904:	ldr	r0, [pc, #224]	; 19ec <main@@Base+0xbb0>
    1908:	add	r0, pc, r0
    190c:	bl	cbc <perror@plt>
    1910:	b	18b4 <main@@Base+0xa78>
    1914:	ldr	r0, [pc, #212]	; 19f0 <main@@Base+0xbb4>
    1918:	add	r0, pc, r0
    191c:	bl	cbc <perror@plt>
    1920:	mov	r0, r4
    1924:	bl	e24 <close@plt>
    1928:	b	18b4 <main@@Base+0xa78>
    192c:	ldr	r0, [pc, #192]	; 19f4 <main@@Base+0xbb8>
    1930:	add	r0, pc, r0
    1934:	bl	cbc <perror@plt>
    1938:	mov	r0, r4
    193c:	bl	e24 <close@plt>
    1940:	mvn	r4, #0
    1944:	b	18b8 <main@@Base+0xa7c>
    1948:	ldr	r0, [pc, #168]	; 19f8 <main@@Base+0xbbc>
    194c:	add	r0, pc, r0
    1950:	bl	cbc <perror@plt>
    1954:	mov	r0, r4
    1958:	bl	e24 <close@plt>
    195c:	b	18b4 <main@@Base+0xa78>
    1960:	ldr	r0, [pc, #148]	; 19fc <main@@Base+0xbc0>
    1964:	add	r0, pc, r0
    1968:	bl	cbc <perror@plt>
    196c:	mov	r0, r4
    1970:	bl	e24 <close@plt>
    1974:	b	18b4 <main@@Base+0xa78>
    1978:	ldr	r0, [pc, #128]	; 1a00 <main@@Base+0xbc4>
    197c:	add	r0, pc, r0
    1980:	bl	cbc <perror@plt>
    1984:	mov	r0, r4
    1988:	bl	e24 <close@plt>
    198c:	mvn	r4, #0
    1990:	b	18b8 <main@@Base+0xa7c>
    1994:	ldr	r0, [pc, #104]	; 1a04 <main@@Base+0xbc8>
    1998:	add	r0, pc, r0
    199c:	bl	cbc <perror@plt>
    19a0:	mov	r0, r4
    19a4:	bl	e24 <close@plt>
    19a8:	mvn	r4, #0
    19ac:	b	18b8 <main@@Base+0xa7c>
    19b0:	ldr	r0, [pc, #80]	; 1a08 <main@@Base+0xbcc>
    19b4:	add	r0, pc, r0
    19b8:	bl	cbc <perror@plt>
    19bc:	mov	r0, r4
    19c0:	bl	e24 <close@plt>
    19c4:	b	18b4 <main@@Base+0xa78>
    19c8:	bl	cb0 <__stack_chk_fail@plt>
    19cc:	andeq	r3, r1, r8, ror #15
    19d0:	andeq	r0, r0, r8, asr #1
    19d4:	muleq	r0, r0, r4
    19d8:	muleq	r0, r4, r4
    19dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    19e0:	andeq	r2, r0, r0, ror #8
    19e4:	ldrdeq	r0, [r0], -ip
    19e8:			; <UNDEFINED> instruction: 0xfffffdb0
    19ec:	andeq	r2, r0, ip, asr #5
    19f0:	ldrdeq	r2, [r0], -r8
    19f4:	andeq	r2, r0, r0, ror r3
    19f8:	andeq	r2, r0, r0, asr #5
    19fc:	andeq	r2, r0, ip, asr #5
    1a00:	andeq	r2, r0, r8, lsr r3
    1a04:	andeq	r2, r0, r4, lsr r3
    1a08:	andeq	r2, r0, r0, lsr #5
    1a0c:	ldrh	r0, [r0, #4]
    1a10:	uxth	r1, r1
    1a14:	subs	r3, r1, r0
    1a18:	rsbs	r0, r3, #0
    1a1c:	adcs	r0, r0, r3
    1a20:	bx	lr
    1a24:	ldr	r0, [r0]
    1a28:	subs	r3, r1, r0
    1a2c:	rsbs	r0, r3, #0
    1a30:	adcs	r0, r0, r3
    1a34:	bx	lr
    1a38:	ldr	r0, [r0]
    1a3c:	subs	r3, r1, r0
    1a40:	rsbs	r0, r3, #0
    1a44:	adcs	r0, r0, r3
    1a48:	bx	lr
    1a4c:	ldr	r3, [r0, #20]
    1a50:	push	{r4, lr}
    1a54:	cmp	r3, #0
    1a58:	mov	r4, r0
    1a5c:	beq	1a68 <main@@Base+0xc2c>
    1a60:	ldr	r0, [r0, #24]
    1a64:	blx	r3
    1a68:	ldr	r0, [r4, #8]
    1a6c:	bl	c8c <free@plt>
    1a70:	mov	r0, r4
    1a74:	pop	{r4, lr}
    1a78:	b	c8c <free@plt>
    1a7c:	ldr	r3, [r0, #12]
    1a80:	push	{r4, lr}
    1a84:	cmp	r3, #0
    1a88:	mov	r4, r0
    1a8c:	beq	1a98 <main@@Base+0xc5c>
    1a90:	ldr	r0, [r0, #16]
    1a94:	blx	r3
    1a98:	mov	r0, r4
    1a9c:	pop	{r4, lr}
    1aa0:	b	c8c <free@plt>
    1aa4:	push	{r3, lr}
    1aa8:	mov	r3, r0
    1aac:	ldrb	r2, [r1]
    1ab0:	ldrb	r0, [r0, #4]
    1ab4:	cmp	r0, r2
    1ab8:	popne	{r3, pc}
    1abc:	add	r0, r1, #2
    1ac0:	ldr	ip, [r3, #8]
    1ac4:	ldr	r2, [r3, #16]
    1ac8:	ldrb	r1, [r1, #1]
    1acc:	blx	ip
    1ad0:	pop	{r3, pc}
    1ad4:	ldrb	r3, [r0, #9]
    1ad8:	push	{r4, lr}
    1adc:	cmp	r3, #0
    1ae0:	mov	r4, r0
    1ae4:	popne	{r4, pc}
    1ae8:	ldrb	r3, [r0, #10]
    1aec:	cmp	r3, #0
    1af0:	popeq	{r4, pc}
    1af4:	ldr	r0, [r0, #20]
    1af8:	bl	3780 <bt_hci_unref@@Base+0x1804>
    1afc:	subs	r3, r0, #0
    1b00:	popne	{r4, pc}
    1b04:	ldr	r1, [pc, #28]	; 1b28 <main@@Base+0xcec>
    1b08:	mov	r2, r4
    1b0c:	ldr	r0, [r4, #4]
    1b10:	add	r1, pc, r1
    1b14:	bl	2778 <bt_hci_unref@@Base+0x7fc>
    1b18:	cmp	r0, #0
    1b1c:	movne	r3, #1
    1b20:	strbne	r3, [r4, #9]
    1b24:	pop	{r4, pc}
    1b28:	ldrdeq	r0, [r0], -r8
    1b2c:	cmp	r1, #0
    1b30:	push	{r3, r4, r5, r6, r7, lr}
    1b34:	mov	r4, r0
    1b38:	mov	r6, r2
    1b3c:	mov	r7, r3
    1b40:	beq	1b84 <main@@Base+0xd48>
    1b44:	mov	r2, r1
    1b48:	ldr	r1, [pc, #64]	; 1b90 <main@@Base+0xd54>
    1b4c:	ldr	r0, [r0, #24]
    1b50:	add	r1, pc, r1
    1b54:	bl	35e0 <bt_hci_unref@@Base+0x1664>
    1b58:	subs	r5, r0, #0
    1b5c:	popeq	{r3, r4, r5, r6, r7, pc}
    1b60:	ldr	r3, [r5, #16]
    1b64:	cmp	r3, #0
    1b68:	beq	1b7c <main@@Base+0xd40>
    1b6c:	mov	r0, r6
    1b70:	uxtb	r1, r7
    1b74:	ldr	r2, [r5, #24]
    1b78:	blx	r3
    1b7c:	mov	r0, r5
    1b80:	bl	1a4c <main@@Base+0xc10>
    1b84:	mov	r0, r4
    1b88:	pop	{r3, r4, r5, r6, r7, lr}
    1b8c:	b	1ad4 <main@@Base+0xc98>
    1b90:			; <UNDEFINED> instruction: 0xfffffeb4
    1b94:	ldr	r3, [pc, #328]	; 1ce4 <main@@Base+0xea8>
    1b98:	ldr	r2, [pc, #328]	; 1ce8 <main@@Base+0xeac>
    1b9c:	add	r3, pc, r3
    1ba0:	ldr	r0, [r1, #4]
    1ba4:	push	{r4, r5, r6, lr}
    1ba8:	sub	sp, sp, #520	; 0x208
    1bac:	ldr	r4, [r3, r2]
    1bb0:	mov	r5, r1
    1bb4:	ldr	r3, [r4]
    1bb8:	str	r3, [sp, #516]	; 0x204
    1bbc:	bl	26cc <bt_hci_unref@@Base+0x750>
    1bc0:	cmp	r0, #0
    1bc4:	blt	1bd4 <main@@Base+0xd98>
    1bc8:	ldrb	r3, [r5, #8]
    1bcc:	cmp	r3, #0
    1bd0:	beq	1bf0 <main@@Base+0xdb4>
    1bd4:	mov	r0, #0
    1bd8:	ldr	r2, [sp, #516]	; 0x204
    1bdc:	ldr	r3, [r4]
    1be0:	cmp	r2, r3
    1be4:	bne	1ce0 <main@@Base+0xea4>
    1be8:	add	sp, sp, #520	; 0x208
    1bec:	pop	{r4, r5, r6, pc}
    1bf0:	add	r6, sp, #4
    1bf4:	mov	r2, #512	; 0x200
    1bf8:	mov	r1, r6
    1bfc:	bl	c68 <read@plt>
    1c00:	cmp	r0, #0
    1c04:	blt	1bd4 <main@@Base+0xd98>
    1c08:	beq	1c18 <main@@Base+0xddc>
    1c0c:	ldrb	r3, [sp, #4]
    1c10:	cmp	r3, #4
    1c14:	beq	1c20 <main@@Base+0xde4>
    1c18:	mov	r0, #1
    1c1c:	b	1bd8 <main@@Base+0xd9c>
    1c20:	sub	r3, r0, #1
    1c24:	cmp	r3, #1
    1c28:	bls	1c18 <main@@Base+0xddc>
    1c2c:	ldrb	r2, [sp, #6]
    1c30:	sub	r3, r0, #3
    1c34:	cmp	r3, r2
    1c38:	bne	1c18 <main@@Base+0xddc>
    1c3c:	ldrb	r2, [sp, #5]
    1c40:	cmp	r2, #14
    1c44:	beq	1c88 <main@@Base+0xe4c>
    1c48:	cmp	r2, #15
    1c4c:	bne	1cc4 <main@@Base+0xe88>
    1c50:	cmp	r3, #3
    1c54:	bls	1c18 <main@@Base+0xddc>
    1c58:	ldrb	ip, [sp, #8]
    1c5c:	add	lr, sp, #520	; 0x208
    1c60:	movw	r1, #65025	; 0xfe01
    1c64:	movt	r1, #65535	; 0xffff
    1c68:	mov	r0, r5
    1c6c:	add	r2, r6, #3
    1c70:	mov	r3, #1
    1c74:	ldrh	r1, [lr, r1]
    1c78:	strb	ip, [r5, #10]
    1c7c:	bl	1b2c <main@@Base+0xcf0>
    1c80:	mov	r0, #1
    1c84:	b	1bd8 <main@@Base+0xd9c>
    1c88:	cmp	r3, #2
    1c8c:	bls	1c18 <main@@Base+0xddc>
    1c90:	add	lr, sp, #520	; 0x208
    1c94:	mov	r1, #65024	; 0xfe00
    1c98:	movt	r1, #65535	; 0xffff
    1c9c:	ldrb	ip, [sp, #7]
    1ca0:	sub	r3, r0, #6
    1ca4:	add	r2, r6, #6
    1ca8:	ldrh	r1, [lr, r1]
    1cac:	mov	r0, r5
    1cb0:	strb	ip, [r5, #10]
    1cb4:	uxth	r1, r1
    1cb8:	bl	1b2c <main@@Base+0xcf0>
    1cbc:	mov	r0, #1
    1cc0:	b	1bd8 <main@@Base+0xd9c>
    1cc4:	ldr	r1, [pc, #32]	; 1cec <main@@Base+0xeb0>
    1cc8:	add	r2, r6, #1
    1ccc:	ldr	r0, [r5, #28]
    1cd0:	add	r1, pc, r1
    1cd4:	bl	345c <bt_hci_unref@@Base+0x14e0>
    1cd8:	mov	r0, #1
    1cdc:	b	1bd8 <main@@Base+0xd9c>
    1ce0:	bl	cb0 <__stack_chk_fail@plt>
    1ce4:	andeq	r3, r1, ip, ror #6
    1ce8:	andeq	r0, r0, r8, asr #1
    1cec:			; <UNDEFINED> instruction: 0xfffffdcc
    1cf0:	ldr	r3, [pc, #212]	; 1dcc <main@@Base+0xf90>
    1cf4:	ldr	r2, [pc, #212]	; 1dd0 <main@@Base+0xf94>
    1cf8:	add	r3, pc, r3
    1cfc:	ldr	r0, [r1, #20]
    1d00:	push	{r4, r5, r6, lr}
    1d04:	sub	sp, sp, #40	; 0x28
    1d08:	ldr	r6, [r3, r2]
    1d0c:	mov	r4, r1
    1d10:	ldr	r3, [r6]
    1d14:	str	r3, [sp, #36]	; 0x24
    1d18:	bl	33e0 <bt_hci_unref@@Base+0x1464>
    1d1c:	subs	r5, r0, #0
    1d20:	beq	1d54 <main@@Base+0xf18>
    1d24:	ldrb	r2, [r4, #10]
    1d28:	mov	r3, #1
    1d2c:	ldrh	ip, [r5, #4]
    1d30:	cmp	r2, #0
    1d34:	strb	r3, [sp, #7]
    1d38:	ldr	lr, [r5, #8]
    1d3c:	ldrb	r1, [r5, #12]
    1d40:	ldr	r0, [r4, #4]
    1d44:	bne	1d78 <main@@Base+0xf3c>
    1d48:	mov	r1, r5
    1d4c:	ldr	r0, [r4, #24]
    1d50:	bl	32c8 <bt_hci_unref@@Base+0x134c>
    1d54:	ldr	r1, [sp, #36]	; 0x24
    1d58:	mov	r3, #0
    1d5c:	ldr	r2, [r6]
    1d60:	mov	r0, r3
    1d64:	strb	r3, [r4, #9]
    1d68:	cmp	r1, r2
    1d6c:	bne	1dc8 <main@@Base+0xf8c>
    1d70:	add	sp, sp, #40	; 0x28
    1d74:	pop	{r4, r5, r6, pc}
    1d78:	cmp	r1, #0
    1d7c:	mov	r2, #3
    1d80:	strne	r1, [sp, #32]
    1d84:	strb	r1, [sp, #10]
    1d88:	add	r1, sp, #12
    1d8c:	str	r2, [sp, #24]
    1d90:	moveq	r2, #2
    1d94:	str	r3, [sp, #16]
    1d98:	add	r3, sp, #7
    1d9c:	strne	lr, [sp, #28]
    1da0:	str	r3, [sp, #12]
    1da4:	add	r3, sp, #8
    1da8:	strh	ip, [sp, #8]
    1dac:	str	r3, [sp, #20]
    1db0:	bl	2890 <bt_hci_unref@@Base+0x914>
    1db4:	cmp	r0, #0
    1db8:	ldrbge	r3, [r4, #10]
    1dbc:	subge	r3, r3, #1
    1dc0:	strbge	r3, [r4, #10]
    1dc4:	b	1d48 <main@@Base+0xf0c>
    1dc8:	bl	cb0 <__stack_chk_fail@plt>
    1dcc:	andeq	r3, r1, r0, lsl r2
    1dd0:	andeq	r0, r0, r8, asr #1
    1dd4:	ldr	r3, [pc, #148]	; 1e70 <main@@Base+0x1034>
    1dd8:	mov	r2, #1
    1ddc:	ldr	ip, [pc, #144]	; 1e74 <main@@Base+0x1038>
    1de0:	add	r3, pc, r3
    1de4:	push	{r4, r5, r6, r7, lr}
    1de8:	sub	sp, sp, #20
    1dec:	ldr	r4, [r3, ip]
    1df0:	mov	r5, r1
    1df4:	mov	r6, r0
    1df8:	movw	r1, #2051	; 0x803
    1dfc:	mov	r0, #31
    1e00:	movt	r1, #8
    1e04:	ldr	r3, [r4]
    1e08:	str	r3, [sp, #12]
    1e0c:	bl	df4 <socket@plt>
    1e10:	subs	r7, r0, #0
    1e14:	blt	1e58 <main@@Base+0x101c>
    1e18:	add	r1, sp, #4
    1e1c:	mov	r2, #6
    1e20:	mov	r3, #31
    1e24:	strh	r6, [sp, #6]
    1e28:	strh	r5, [sp, #8]
    1e2c:	strh	r3, [sp, #4]
    1e30:	bl	d88 <bind@plt>
    1e34:	cmp	r0, #0
    1e38:	mov	r0, r7
    1e3c:	blt	1e60 <main@@Base+0x1024>
    1e40:	ldr	r2, [sp, #12]
    1e44:	ldr	r3, [r4]
    1e48:	cmp	r2, r3
    1e4c:	bne	1e6c <main@@Base+0x1030>
    1e50:	add	sp, sp, #20
    1e54:	pop	{r4, r5, r6, r7, pc}
    1e58:	mvn	r0, #0
    1e5c:	b	1e40 <main@@Base+0x1004>
    1e60:	bl	e24 <close@plt>
    1e64:	mvn	r0, #0
    1e68:	b	1e40 <main@@Base+0x1004>
    1e6c:	bl	cb0 <__stack_chk_fail@plt>
    1e70:	andeq	r3, r1, r8, lsr #2
    1e74:	andeq	r0, r0, r8, asr #1
    1e78:	cmp	r0, #0
    1e7c:	bxeq	lr
    1e80:	dmb	sy
    1e84:	ldrex	r2, [r0]
    1e88:	add	r2, r2, #1
    1e8c:	strex	r3, r2, [r0]
    1e90:	cmp	r3, #0
    1e94:	bne	1e84 <main@@Base+0x1048>
    1e98:	dmb	sy
    1e9c:	bx	lr
    1ea0:	push	{r3, r4, r5, lr}
    1ea4:	subs	r5, r0, #0
    1ea8:	blt	1f6c <main@@Base+0x1130>
    1eac:	mov	r0, #32
    1eb0:	bl	37a0 <bt_hci_unref@@Base+0x1824>
    1eb4:	mov	r1, #0
    1eb8:	mov	r2, #32
    1ebc:	mov	r4, r0
    1ec0:	bl	d94 <memset@plt>
    1ec4:	mov	r0, r5
    1ec8:	bl	25f4 <bt_hci_unref@@Base+0x678>
    1ecc:	cmp	r0, #0
    1ed0:	str	r0, [r4, #4]
    1ed4:	beq	1f64 <main@@Base+0x1128>
    1ed8:	mov	r2, #1
    1edc:	mov	r5, #0
    1ee0:	strb	r2, [r4, #8]
    1ee4:	strb	r2, [r4, #10]
    1ee8:	str	r2, [r4, #12]
    1eec:	str	r2, [r4, #16]
    1ef0:	strb	r5, [r4, #9]
    1ef4:	bl	3288 <bt_hci_unref@@Base+0x130c>
    1ef8:	str	r0, [r4, #20]
    1efc:	bl	3288 <bt_hci_unref@@Base+0x130c>
    1f00:	str	r0, [r4, #24]
    1f04:	bl	3288 <bt_hci_unref@@Base+0x130c>
    1f08:	ldr	r1, [pc, #100]	; 1f74 <main@@Base+0x1138>
    1f0c:	mov	r3, r5
    1f10:	mov	r2, r4
    1f14:	add	r1, pc, r1
    1f18:	str	r0, [r4, #28]
    1f1c:	ldr	r0, [r4, #4]
    1f20:	bl	26ec <bt_hci_unref@@Base+0x770>
    1f24:	subs	r5, r0, #0
    1f28:	beq	1f38 <main@@Base+0x10fc>
    1f2c:	mov	r0, r4
    1f30:	pop	{r3, r4, r5, lr}
    1f34:	b	1e78 <main@@Base+0x103c>
    1f38:	ldr	r0, [r4, #28]
    1f3c:	mov	r1, r5
    1f40:	bl	3740 <bt_hci_unref@@Base+0x17c4>
    1f44:	ldr	r0, [r4, #24]
    1f48:	mov	r1, r5
    1f4c:	bl	3740 <bt_hci_unref@@Base+0x17c4>
    1f50:	ldr	r0, [r4, #20]
    1f54:	mov	r1, r5
    1f58:	bl	3740 <bt_hci_unref@@Base+0x17c4>
    1f5c:	ldr	r0, [r4, #4]
    1f60:	bl	269c <bt_hci_unref@@Base+0x720>
    1f64:	mov	r0, r4
    1f68:	bl	c8c <free@plt>
    1f6c:	mov	r0, #0
    1f70:	pop	{r3, r4, r5, pc}
    1f74:			; <UNDEFINED> instruction: 0xfffffc78
    1f78:	b	1ea0 <main@@Base+0x1064>

00001f7c <bt_hci_unref@@Base>:
    1f7c:	push	{r3, r4, r5, lr}
    1f80:	subs	r4, r0, #0
    1f84:	popeq	{r3, r4, r5, pc}
    1f88:	dmb	sy
    1f8c:	ldrex	r3, [r4]
    1f90:	sub	r3, r3, #1
    1f94:	strex	r2, r3, [r4]
    1f98:	cmp	r2, #0
    1f9c:	bne	1f8c <bt_hci_unref@@Base+0x10>
    1fa0:	cmp	r3, #0
    1fa4:	dmb	sy
    1fa8:	popne	{r3, r4, r5, pc}
    1fac:	ldr	r5, [pc, #60]	; 1ff0 <bt_hci_unref@@Base+0x74>
    1fb0:	ldr	r1, [pc, #60]	; 1ff4 <bt_hci_unref@@Base+0x78>
    1fb4:	add	r5, pc, r5
    1fb8:	ldr	r0, [r4, #28]
    1fbc:	add	r1, pc, r1
    1fc0:	bl	3740 <bt_hci_unref@@Base+0x17c4>
    1fc4:	mov	r1, r5
    1fc8:	ldr	r0, [r4, #20]
    1fcc:	bl	3740 <bt_hci_unref@@Base+0x17c4>
    1fd0:	mov	r1, r5
    1fd4:	ldr	r0, [r4, #24]
    1fd8:	bl	3740 <bt_hci_unref@@Base+0x17c4>
    1fdc:	ldr	r0, [r4, #4]
    1fe0:	bl	269c <bt_hci_unref@@Base+0x720>
    1fe4:	mov	r0, r4
    1fe8:	pop	{r3, r4, r5, lr}
    1fec:	b	c8c <free@plt>
    1ff0:			; <UNDEFINED> instruction: 0xfffffa90
    1ff4:			; <UNDEFINED> instruction: 0xfffffab8
    1ff8:	subs	r3, r0, #0
    1ffc:	bxeq	lr
    2000:	ldr	r0, [r3, #4]
    2004:	b	26dc <bt_hci_unref@@Base+0x760>
    2008:	push	{r3, r4, r5, lr}
    200c:	mov	r1, #1
    2010:	bl	1dd4 <main@@Base+0xf98>
    2014:	subs	r5, r0, #0
    2018:	blt	2040 <bt_hci_unref@@Base+0xc4>
    201c:	bl	1ea0 <main@@Base+0x1064>
    2020:	subs	r4, r0, #0
    2024:	beq	2048 <bt_hci_unref@@Base+0xcc>
    2028:	mov	r3, #0
    202c:	mov	r1, #1
    2030:	strb	r3, [r4, #8]
    2034:	bl	1ff8 <bt_hci_unref@@Base+0x7c>
    2038:	mov	r0, r4
    203c:	pop	{r3, r4, r5, pc}
    2040:	mov	r0, #0
    2044:	pop	{r3, r4, r5, pc}
    2048:	mov	r0, r5
    204c:	bl	e24 <close@plt>
    2050:	mov	r0, r4
    2054:	pop	{r3, r4, r5, pc}
    2058:	ldr	r3, [pc, #192]	; 2120 <bt_hci_unref@@Base+0x1a4>
    205c:	mov	r1, #0
    2060:	ldr	r2, [pc, #188]	; 2124 <bt_hci_unref@@Base+0x1a8>
    2064:	add	r3, pc, r3
    2068:	push	{r4, r5, r6, r7, lr}
    206c:	sub	sp, sp, #36	; 0x24
    2070:	ldr	r5, [r3, r2]
    2074:	ldr	r3, [r5]
    2078:	str	r3, [sp, #28]
    207c:	bl	1dd4 <main@@Base+0xf98>
    2080:	subs	r7, r0, #0
    2084:	blt	20f8 <bt_hci_unref@@Base+0x17c>
    2088:	mov	r4, #0
    208c:	mov	lr, #16
    2090:	mov	r1, r4
    2094:	str	lr, [sp]
    2098:	mov	r2, #2
    209c:	add	r3, sp, #12
    20a0:	mvn	ip, #0
    20a4:	str	r4, [sp, #24]
    20a8:	str	lr, [sp, #12]
    20ac:	str	ip, [sp, #16]
    20b0:	str	ip, [sp, #20]
    20b4:	bl	c5c <setsockopt@plt>
    20b8:	cmp	r0, r4
    20bc:	mov	r0, r7
    20c0:	blt	2100 <bt_hci_unref@@Base+0x184>
    20c4:	bl	1ea0 <main@@Base+0x1064>
    20c8:	subs	r6, r0, #0
    20cc:	beq	210c <bt_hci_unref@@Base+0x190>
    20d0:	strb	r4, [r6, #8]
    20d4:	mov	r1, #1
    20d8:	bl	1ff8 <bt_hci_unref@@Base+0x7c>
    20dc:	mov	r0, r6
    20e0:	ldr	r2, [sp, #28]
    20e4:	ldr	r3, [r5]
    20e8:	cmp	r2, r3
    20ec:	bne	211c <bt_hci_unref@@Base+0x1a0>
    20f0:	add	sp, sp, #36	; 0x24
    20f4:	pop	{r4, r5, r6, r7, pc}
    20f8:	mov	r0, #0
    20fc:	b	20e0 <bt_hci_unref@@Base+0x164>
    2100:	bl	e24 <close@plt>
    2104:	mov	r0, r4
    2108:	b	20e0 <bt_hci_unref@@Base+0x164>
    210c:	mov	r0, r7
    2110:	bl	e24 <close@plt>
    2114:	mov	r0, r6
    2118:	b	20e0 <bt_hci_unref@@Base+0x164>
    211c:	bl	cb0 <__stack_chk_fail@plt>
    2120:	andeq	r2, r1, r4, lsr #29
    2124:	andeq	r0, r0, r8, asr #1
    2128:	push	{r4, r5, r6, r7, r8, lr}
    212c:	subs	r5, r0, #0
    2130:	mov	r7, r1
    2134:	mov	r8, r2
    2138:	mov	r6, r3
    213c:	beq	2200 <bt_hci_unref@@Base+0x284>
    2140:	mov	r0, #28
    2144:	bl	37a0 <bt_hci_unref@@Base+0x1824>
    2148:	mov	r1, #0
    214c:	mov	r2, #28
    2150:	mov	r4, r0
    2154:	bl	d94 <memset@plt>
    2158:	cmp	r6, #0
    215c:	strh	r7, [r4, #4]
    2160:	strb	r6, [r4, #12]
    2164:	bne	21d8 <bt_hci_unref@@Base+0x25c>
    2168:	ldr	r3, [r5, #12]
    216c:	mov	r1, r4
    2170:	ldr	r0, [r5, #20]
    2174:	cmp	r3, #0
    2178:	addne	r2, r3, #1
    217c:	moveq	r3, #1
    2180:	moveq	r2, #2
    2184:	str	r2, [r5, #12]
    2188:	str	r3, [r4]
    218c:	ldr	r3, [sp, #24]
    2190:	str	r3, [r4, #16]
    2194:	ldr	r3, [sp, #32]
    2198:	str	r3, [r4, #20]
    219c:	ldr	r3, [sp, #28]
    21a0:	str	r3, [r4, #24]
    21a4:	bl	32c8 <bt_hci_unref@@Base+0x134c>
    21a8:	subs	r6, r0, #0
    21ac:	beq	21c0 <bt_hci_unref@@Base+0x244>
    21b0:	mov	r0, r5
    21b4:	bl	1ad4 <main@@Base+0xc98>
    21b8:	ldr	r0, [r4]
    21bc:	pop	{r4, r5, r6, r7, r8, pc}
    21c0:	ldr	r0, [r4, #8]
    21c4:	bl	c8c <free@plt>
    21c8:	mov	r0, r4
    21cc:	bl	c8c <free@plt>
    21d0:	mov	r0, r6
    21d4:	pop	{r4, r5, r6, r7, r8, pc}
    21d8:	mov	r0, r6
    21dc:	bl	d10 <malloc@plt>
    21e0:	cmp	r0, #0
    21e4:	mov	r7, r0
    21e8:	str	r0, [r4, #8]
    21ec:	beq	2208 <bt_hci_unref@@Base+0x28c>
    21f0:	mov	r1, r8
    21f4:	mov	r2, r6
    21f8:	bl	ca4 <memcpy@plt>
    21fc:	b	2168 <bt_hci_unref@@Base+0x1ec>
    2200:	mov	r0, r5
    2204:	pop	{r4, r5, r6, r7, r8, pc}
    2208:	mov	r0, r4
    220c:	bl	c8c <free@plt>
    2210:	mov	r0, r7
    2214:	pop	{r4, r5, r6, r7, r8, pc}
    2218:	cmp	r1, #0
    221c:	cmpne	r0, #0
    2220:	push	{r4, r5, r6, lr}
    2224:	mov	r4, r0
    2228:	mov	r5, r1
    222c:	bne	2238 <bt_hci_unref@@Base+0x2bc>
    2230:	mov	r0, #0
    2234:	pop	{r4, r5, r6, pc}
    2238:	ldr	r6, [pc, #72]	; 2288 <bt_hci_unref@@Base+0x30c>
    223c:	mov	r2, r1
    2240:	ldr	r0, [r0, #20]
    2244:	add	r6, pc, r6
    2248:	mov	r1, r6
    224c:	bl	35e0 <bt_hci_unref@@Base+0x1664>
    2250:	cmp	r0, #0
    2254:	beq	226c <bt_hci_unref@@Base+0x2f0>
    2258:	bl	1a4c <main@@Base+0xc10>
    225c:	mov	r0, r4
    2260:	bl	1ad4 <main@@Base+0xc98>
    2264:	mov	r0, #1
    2268:	pop	{r4, r5, r6, pc}
    226c:	mov	r1, r6
    2270:	mov	r2, r5
    2274:	ldr	r0, [r4, #24]
    2278:	bl	35e0 <bt_hci_unref@@Base+0x1664>
    227c:	cmp	r0, #0
    2280:	bne	2258 <bt_hci_unref@@Base+0x2dc>
    2284:	b	2230 <bt_hci_unref@@Base+0x2b4>
    2288:			; <UNDEFINED> instruction: 0xfffff7d8
    228c:	push	{r3, r4, r5, lr}
    2290:	subs	r4, r0, #0
    2294:	beq	22fc <bt_hci_unref@@Base+0x380>
    2298:	ldrb	r3, [r4, #9]
    229c:	cmp	r3, #0
    22a0:	bne	22dc <bt_hci_unref@@Base+0x360>
    22a4:	ldr	r5, [pc, #88]	; 2304 <bt_hci_unref@@Base+0x388>
    22a8:	mov	r1, #0
    22ac:	mov	r2, r1
    22b0:	ldr	r0, [r4, #20]
    22b4:	add	r5, pc, r5
    22b8:	mov	r3, r5
    22bc:	bl	367c <bt_hci_unref@@Base+0x1700>
    22c0:	mov	r1, #0
    22c4:	mov	r3, r5
    22c8:	ldr	r0, [r4, #24]
    22cc:	mov	r2, r1
    22d0:	bl	367c <bt_hci_unref@@Base+0x1700>
    22d4:	mov	r0, #1
    22d8:	pop	{r3, r4, r5, pc}
    22dc:	mov	r1, #0
    22e0:	ldr	r0, [r4, #4]
    22e4:	mov	r3, r1
    22e8:	mov	r2, r1
    22ec:	bl	2778 <bt_hci_unref@@Base+0x7fc>
    22f0:	mov	r3, #0
    22f4:	strb	r3, [r4, #9]
    22f8:	b	22a4 <bt_hci_unref@@Base+0x328>
    22fc:	mov	r0, r4
    2300:	pop	{r3, r4, r5, pc}
    2304:			; <UNDEFINED> instruction: 0xfffff790
    2308:	push	{r4, r5, r6, r7, r8, lr}
    230c:	subs	r5, r0, #0
    2310:	mov	r7, r1
    2314:	mov	r6, r2
    2318:	mov	r8, r3
    231c:	beq	2384 <bt_hci_unref@@Base+0x408>
    2320:	mov	r0, #20
    2324:	bl	37a0 <bt_hci_unref@@Base+0x1824>
    2328:	mov	r1, #0
    232c:	mov	r2, #20
    2330:	mov	r4, r0
    2334:	bl	d94 <memset@plt>
    2338:	strb	r7, [r4, #4]
    233c:	mov	r1, r4
    2340:	ldr	r0, [r5, #16]
    2344:	cmp	r0, #0
    2348:	addne	r3, r0, #1
    234c:	moveq	r3, #2
    2350:	moveq	r0, #1
    2354:	str	r3, [r5, #16]
    2358:	ldr	r3, [sp, #24]
    235c:	str	r0, [r4]
    2360:	str	r6, [r4, #8]
    2364:	ldr	r0, [r5, #28]
    2368:	str	r3, [r4, #12]
    236c:	str	r8, [r4, #16]
    2370:	bl	32c8 <bt_hci_unref@@Base+0x134c>
    2374:	subs	r5, r0, #0
    2378:	beq	238c <bt_hci_unref@@Base+0x410>
    237c:	ldr	r0, [r4]
    2380:	pop	{r4, r5, r6, r7, r8, pc}
    2384:	mov	r0, r5
    2388:	pop	{r4, r5, r6, r7, r8, pc}
    238c:	mov	r0, r4
    2390:	bl	c8c <free@plt>
    2394:	mov	r0, r5
    2398:	pop	{r4, r5, r6, r7, r8, pc}
    239c:	cmp	r1, #0
    23a0:	cmpne	r0, #0
    23a4:	push	{r3, lr}
    23a8:	bne	23b4 <bt_hci_unref@@Base+0x438>
    23ac:	mov	r0, #0
    23b0:	pop	{r3, pc}
    23b4:	mov	r2, r1
    23b8:	ldr	r1, [pc, #28]	; 23dc <bt_hci_unref@@Base+0x460>
    23bc:	ldr	r0, [r0, #28]
    23c0:	add	r1, pc, r1
    23c4:	bl	35e0 <bt_hci_unref@@Base+0x1664>
    23c8:	cmp	r0, #0
    23cc:	beq	23ac <bt_hci_unref@@Base+0x430>
    23d0:	bl	1a7c <main@@Base+0xc40>
    23d4:	mov	r0, #1
    23d8:	pop	{r3, pc}
    23dc:			; <UNDEFINED> instruction: 0xfffff670
    23e0:	ldr	r3, [r0, #32]
    23e4:	push	{r4, lr}
    23e8:	cmp	r3, #0
    23ec:	mov	r4, r0
    23f0:	beq	23fc <bt_hci_unref@@Base+0x480>
    23f4:	ldr	r0, [r0, #36]	; 0x24
    23f8:	blx	r3
    23fc:	ldr	r3, [r4, #20]
    2400:	cmp	r3, #0
    2404:	beq	2410 <bt_hci_unref@@Base+0x494>
    2408:	ldr	r0, [r4, #24]
    240c:	blx	r3
    2410:	ldr	r3, [r4, #44]	; 0x2c
    2414:	cmp	r3, #0
    2418:	beq	2424 <bt_hci_unref@@Base+0x4a8>
    241c:	ldr	r0, [r4, #48]	; 0x30
    2420:	blx	r3
    2424:	ldrb	r3, [r4, #12]
    2428:	cmp	r3, #0
    242c:	beq	2438 <bt_hci_unref@@Base+0x4bc>
    2430:	ldr	r0, [r4, #4]
    2434:	bl	e24 <close@plt>
    2438:	mvn	r3, #0
    243c:	str	r3, [r4, #4]
    2440:	pop	{r4, pc}
    2444:	subs	r3, r0, #0
    2448:	bxeq	lr
    244c:	dmb	sy
    2450:	ldrex	r2, [r3]
    2454:	sub	r2, r2, #1
    2458:	strex	r1, r2, [r3]
    245c:	cmp	r1, #0
    2460:	bne	2450 <bt_hci_unref@@Base+0x4d4>
    2464:	cmp	r2, #0
    2468:	dmb	sy
    246c:	bxne	lr
    2470:	b	c8c <free@plt>
    2474:	push	{r3, r4, r5, lr}
    2478:	subs	r4, r2, #0
    247c:	mov	r5, r1
    2480:	beq	24a0 <bt_hci_unref@@Base+0x524>
    2484:	dmb	sy
    2488:	ldrex	r2, [r4]
    248c:	add	r2, r2, #1
    2490:	strex	r3, r2, [r4]
    2494:	cmp	r3, #0
    2498:	bne	2488 <bt_hci_unref@@Base+0x50c>
    249c:	dmb	sy
    24a0:	movw	r3, #8216	; 0x2018
    24a4:	and	r3, r5, r3
    24a8:	cmp	r3, #0
    24ac:	beq	2514 <bt_hci_unref@@Base+0x598>
    24b0:	ldr	r2, [r4, #40]	; 0x28
    24b4:	mov	r3, #0
    24b8:	str	r3, [r4, #16]
    24bc:	cmp	r2, r3
    24c0:	str	r3, [r4, #28]
    24c4:	beq	25e0 <bt_hci_unref@@Base+0x664>
    24c8:	mov	r0, r4
    24cc:	ldr	r1, [r4, #48]	; 0x30
    24d0:	blx	r2
    24d4:	cmp	r0, #0
    24d8:	bne	2514 <bt_hci_unref@@Base+0x598>
    24dc:	ldr	r3, [r4, #44]	; 0x2c
    24e0:	cmp	r3, #0
    24e4:	beq	24f0 <bt_hci_unref@@Base+0x574>
    24e8:	ldr	r0, [r4, #48]	; 0x30
    24ec:	blx	r3
    24f0:	ldr	r1, [r4, #8]
    24f4:	mov	r3, #0
    24f8:	ldr	r0, [r4, #4]
    24fc:	bic	r1, r1, #8192	; 0x2000
    2500:	str	r3, [r4, #40]	; 0x28
    2504:	str	r1, [r4, #8]
    2508:	str	r3, [r4, #44]	; 0x2c
    250c:	str	r3, [r4, #48]	; 0x30
    2510:	bl	2c08 <bt_hci_unref@@Base+0xc8c>
    2514:	tst	r5, #1
    2518:	beq	2574 <bt_hci_unref@@Base+0x5f8>
    251c:	ldr	r3, [r4, #16]
    2520:	cmp	r3, #0
    2524:	beq	2574 <bt_hci_unref@@Base+0x5f8>
    2528:	mov	r0, r4
    252c:	ldr	r1, [r4, #24]
    2530:	blx	r3
    2534:	cmp	r0, #0
    2538:	bne	2574 <bt_hci_unref@@Base+0x5f8>
    253c:	ldr	r3, [r4, #20]
    2540:	cmp	r3, #0
    2544:	beq	2550 <bt_hci_unref@@Base+0x5d4>
    2548:	ldr	r0, [r4, #24]
    254c:	blx	r3
    2550:	ldr	r1, [r4, #8]
    2554:	mov	r3, #0
    2558:	ldr	r0, [r4, #4]
    255c:	bic	r1, r1, #1
    2560:	str	r3, [r4, #16]
    2564:	str	r1, [r4, #8]
    2568:	str	r3, [r4, #20]
    256c:	str	r3, [r4, #24]
    2570:	bl	2c08 <bt_hci_unref@@Base+0xc8c>
    2574:	tst	r5, #4
    2578:	beq	25d4 <bt_hci_unref@@Base+0x658>
    257c:	ldr	r3, [r4, #28]
    2580:	cmp	r3, #0
    2584:	beq	25d4 <bt_hci_unref@@Base+0x658>
    2588:	mov	r0, r4
    258c:	ldr	r1, [r4, #36]	; 0x24
    2590:	blx	r3
    2594:	cmp	r0, #0
    2598:	bne	25d4 <bt_hci_unref@@Base+0x658>
    259c:	ldr	r3, [r4, #32]
    25a0:	cmp	r3, #0
    25a4:	beq	25b0 <bt_hci_unref@@Base+0x634>
    25a8:	ldr	r0, [r4, #36]	; 0x24
    25ac:	blx	r3
    25b0:	ldr	r1, [r4, #8]
    25b4:	mov	r3, #0
    25b8:	ldr	r0, [r4, #4]
    25bc:	bic	r1, r1, #4
    25c0:	str	r3, [r4, #28]
    25c4:	str	r1, [r4, #8]
    25c8:	str	r3, [r4, #32]
    25cc:	str	r3, [r4, #36]	; 0x24
    25d0:	bl	2c08 <bt_hci_unref@@Base+0xc8c>
    25d4:	mov	r0, r4
    25d8:	pop	{r3, r4, r5, lr}
    25dc:	b	2444 <bt_hci_unref@@Base+0x4c8>
    25e0:	ldr	r0, [r4, #4]
    25e4:	bl	2cb8 <bt_hci_unref@@Base+0xd3c>
    25e8:	mov	r0, r4
    25ec:	pop	{r3, r4, r5, lr}
    25f0:	b	2444 <bt_hci_unref@@Base+0x4c8>
    25f4:	push	{r4, r5, r6, lr}
    25f8:	subs	r5, r0, #0
    25fc:	sub	sp, sp, #8
    2600:	blt	267c <bt_hci_unref@@Base+0x700>
    2604:	mov	r0, #52	; 0x34
    2608:	mov	r6, #0
    260c:	bl	37a0 <bt_hci_unref@@Base+0x1824>
    2610:	mov	r1, r6
    2614:	mov	r2, #52	; 0x34
    2618:	mov	r4, r0
    261c:	bl	d94 <memset@plt>
    2620:	ldr	r2, [pc, #108]	; 2694 <bt_hci_unref@@Base+0x718>
    2624:	mov	r0, r5
    2628:	str	r5, [r4, #4]
    262c:	mov	r1, r6
    2630:	add	r2, pc, r2
    2634:	strb	r6, [r4, #12]
    2638:	str	r2, [sp]
    263c:	mov	r3, r4
    2640:	ldr	r2, [pc, #80]	; 2698 <bt_hci_unref@@Base+0x71c>
    2644:	add	r2, pc, r2
    2648:	bl	2b00 <bt_hci_unref@@Base+0xb84>
    264c:	cmp	r0, r6
    2650:	blt	2684 <bt_hci_unref@@Base+0x708>
    2654:	dmb	sy
    2658:	ldrex	r2, [r4]
    265c:	add	r2, r2, #1
    2660:	strex	r3, r2, [r4]
    2664:	cmp	r3, #0
    2668:	bne	2658 <bt_hci_unref@@Base+0x6dc>
    266c:	dmb	sy
    2670:	mov	r0, r4
    2674:	add	sp, sp, #8
    2678:	pop	{r4, r5, r6, pc}
    267c:	mov	r0, #0
    2680:	b	2674 <bt_hci_unref@@Base+0x6f8>
    2684:	mov	r0, r4
    2688:	bl	c8c <free@plt>
    268c:	mov	r0, r6
    2690:	b	2674 <bt_hci_unref@@Base+0x6f8>
    2694:			; <UNDEFINED> instruction: 0xfffffda8
    2698:			; <UNDEFINED> instruction: 0xfffffe28
    269c:	push	{r4, lr}
    26a0:	subs	r4, r0, #0
    26a4:	popeq	{r4, pc}
    26a8:	mov	r3, #0
    26ac:	ldr	r0, [r4, #4]
    26b0:	str	r3, [r4, #16]
    26b4:	str	r3, [r4, #28]
    26b8:	str	r3, [r4, #40]	; 0x28
    26bc:	bl	2cb8 <bt_hci_unref@@Base+0xd3c>
    26c0:	mov	r0, r4
    26c4:	pop	{r4, lr}
    26c8:	b	2444 <bt_hci_unref@@Base+0x4c8>
    26cc:	cmp	r0, #0
    26d0:	ldrne	r0, [r0, #4]
    26d4:	mvneq	r0, #106	; 0x6a
    26d8:	bx	lr
    26dc:	cmp	r0, #0
    26e0:	strbne	r1, [r0, #12]
    26e4:	movne	r0, #1
    26e8:	bx	lr
    26ec:	push	{r4, r5, r6, r7, r8, lr}
    26f0:	subs	r4, r0, #0
    26f4:	mov	r5, r1
    26f8:	mov	r7, r2
    26fc:	mov	r8, r3
    2700:	beq	2770 <bt_hci_unref@@Base+0x7f4>
    2704:	ldr	r1, [r4, #4]
    2708:	cmp	r1, #0
    270c:	blt	2770 <bt_hci_unref@@Base+0x7f4>
    2710:	ldr	r1, [r4, #20]
    2714:	cmp	r1, #0
    2718:	beq	2724 <bt_hci_unref@@Base+0x7a8>
    271c:	ldr	r0, [r4, #24]
    2720:	blx	r1
    2724:	ldr	r1, [r4, #8]
    2728:	cmp	r5, #0
    272c:	str	r5, [r4, #16]
    2730:	orrne	r6, r1, #1
    2734:	biceq	r6, r1, #1
    2738:	cmp	r6, r1
    273c:	str	r8, [r4, #20]
    2740:	str	r7, [r4, #24]
    2744:	beq	2768 <bt_hci_unref@@Base+0x7ec>
    2748:	ldr	r0, [r4, #4]
    274c:	mov	r1, r6
    2750:	bl	2c08 <bt_hci_unref@@Base+0xc8c>
    2754:	cmp	r0, #0
    2758:	blt	2770 <bt_hci_unref@@Base+0x7f4>
    275c:	str	r6, [r4, #8]
    2760:	mov	r0, #1
    2764:	pop	{r4, r5, r6, r7, r8, pc}
    2768:	mov	r0, #1
    276c:	pop	{r4, r5, r6, r7, r8, pc}
    2770:	mov	r0, #0
    2774:	pop	{r4, r5, r6, r7, r8, pc}
    2778:	push	{r4, r5, r6, r7, r8, lr}
    277c:	subs	r4, r0, #0
    2780:	mov	r5, r1
    2784:	mov	r7, r2
    2788:	mov	r8, r3
    278c:	beq	27fc <bt_hci_unref@@Base+0x880>
    2790:	ldr	r1, [r4, #4]
    2794:	cmp	r1, #0
    2798:	blt	27fc <bt_hci_unref@@Base+0x880>
    279c:	ldr	r1, [r4, #32]
    27a0:	cmp	r1, #0
    27a4:	beq	27b0 <bt_hci_unref@@Base+0x834>
    27a8:	ldr	r0, [r4, #36]	; 0x24
    27ac:	blx	r1
    27b0:	ldr	r1, [r4, #8]
    27b4:	cmp	r5, #0
    27b8:	str	r5, [r4, #28]
    27bc:	orrne	r6, r1, #4
    27c0:	biceq	r6, r1, #4
    27c4:	cmp	r6, r1
    27c8:	str	r8, [r4, #32]
    27cc:	str	r7, [r4, #36]	; 0x24
    27d0:	beq	27f4 <bt_hci_unref@@Base+0x878>
    27d4:	ldr	r0, [r4, #4]
    27d8:	mov	r1, r6
    27dc:	bl	2c08 <bt_hci_unref@@Base+0xc8c>
    27e0:	cmp	r0, #0
    27e4:	blt	27fc <bt_hci_unref@@Base+0x880>
    27e8:	str	r6, [r4, #8]
    27ec:	mov	r0, #1
    27f0:	pop	{r4, r5, r6, r7, r8, pc}
    27f4:	mov	r0, #1
    27f8:	pop	{r4, r5, r6, r7, r8, pc}
    27fc:	mov	r0, #0
    2800:	pop	{r4, r5, r6, r7, r8, pc}
    2804:	push	{r4, r5, r6, r7, r8, lr}
    2808:	subs	r4, r0, #0
    280c:	mov	r5, r1
    2810:	mov	r7, r2
    2814:	mov	r8, r3
    2818:	beq	2888 <bt_hci_unref@@Base+0x90c>
    281c:	ldr	r1, [r4, #4]
    2820:	cmp	r1, #0
    2824:	blt	2888 <bt_hci_unref@@Base+0x90c>
    2828:	ldr	r1, [r4, #44]	; 0x2c
    282c:	cmp	r1, #0
    2830:	beq	283c <bt_hci_unref@@Base+0x8c0>
    2834:	ldr	r0, [r4, #48]	; 0x30
    2838:	blx	r1
    283c:	ldr	r1, [r4, #8]
    2840:	cmp	r5, #0
    2844:	str	r5, [r4, #40]	; 0x28
    2848:	orrne	r6, r1, #8192	; 0x2000
    284c:	biceq	r6, r1, #8192	; 0x2000
    2850:	cmp	r6, r1
    2854:	str	r8, [r4, #44]	; 0x2c
    2858:	str	r7, [r4, #48]	; 0x30
    285c:	beq	2880 <bt_hci_unref@@Base+0x904>
    2860:	ldr	r0, [r4, #4]
    2864:	mov	r1, r6
    2868:	bl	2c08 <bt_hci_unref@@Base+0xc8c>
    286c:	cmp	r0, #0
    2870:	blt	2888 <bt_hci_unref@@Base+0x90c>
    2874:	str	r6, [r4, #8]
    2878:	mov	r0, #1
    287c:	pop	{r4, r5, r6, r7, r8, pc}
    2880:	mov	r0, #1
    2884:	pop	{r4, r5, r6, r7, r8, pc}
    2888:	mov	r0, #0
    288c:	pop	{r4, r5, r6, r7, r8, pc}
    2890:	push	{r4, r5, r6, lr}
    2894:	subs	r4, r0, #0
    2898:	mov	r5, r1
    289c:	mov	r6, r2
    28a0:	beq	28e4 <bt_hci_unref@@Base+0x968>
    28a4:	ldr	r0, [r4, #4]
    28a8:	cmp	r0, #0
    28ac:	bge	28b8 <bt_hci_unref@@Base+0x93c>
    28b0:	b	28e4 <bt_hci_unref@@Base+0x968>
    28b4:	ldr	r0, [r4, #4]
    28b8:	mov	r1, r5
    28bc:	mov	r2, r6
    28c0:	bl	db8 <writev@plt>
    28c4:	cmp	r0, #0
    28c8:	popge	{r4, r5, r6, pc}
    28cc:	bl	d7c <__errno_location@plt>
    28d0:	ldr	r3, [r0]
    28d4:	cmp	r3, #4
    28d8:	beq	28b4 <bt_hci_unref@@Base+0x938>
    28dc:	rsb	r0, r3, #0
    28e0:	pop	{r4, r5, r6, pc}
    28e4:	mvn	r0, #106	; 0x6a
    28e8:	pop	{r4, r5, r6, pc}
    28ec:	cmp	r0, #0
    28f0:	push	{r3, lr}
    28f4:	popeq	{r3, pc}
    28f8:	ldr	r0, [r0, #4]
    28fc:	cmp	r0, #0
    2900:	blt	2918 <bt_hci_unref@@Base+0x99c>
    2904:	mov	r1, #2
    2908:	bl	dc4 <shutdown@plt>
    290c:	rsbs	r0, r0, #1
    2910:	movcc	r0, #0
    2914:	pop	{r3, pc}
    2918:	mov	r0, #0
    291c:	pop	{r3, pc}
    2920:	push	{r4, lr}
    2924:	mov	r4, r0
    2928:	ldr	r0, [r0]
    292c:	bl	e24 <close@plt>
    2930:	ldr	r3, [r4, #8]
    2934:	mvn	r2, #0
    2938:	str	r2, [r4]
    293c:	cmp	r3, #0
    2940:	beq	294c <bt_hci_unref@@Base+0x9d0>
    2944:	ldr	r0, [r4, #12]
    2948:	blx	r3
    294c:	mov	r0, r4
    2950:	pop	{r4, lr}
    2954:	b	c8c <free@plt>
    2958:	ldr	r3, [pc, #116]	; 29d4 <bt_hci_unref@@Base+0xa58>
    295c:	tst	r1, #24
    2960:	ldr	r1, [pc, #112]	; 29d8 <bt_hci_unref@@Base+0xa5c>
    2964:	add	r3, pc, r3
    2968:	push	{r4, r5, lr}
    296c:	sub	sp, sp, #20
    2970:	ldr	r4, [r3, r1]
    2974:	mov	r5, r2
    2978:	ldr	r3, [r4]
    297c:	str	r3, [sp, #12]
    2980:	beq	299c <bt_hci_unref@@Base+0xa20>
    2984:	ldr	r2, [sp, #12]
    2988:	ldr	r3, [r4]
    298c:	cmp	r2, r3
    2990:	bne	29d0 <bt_hci_unref@@Base+0xa54>
    2994:	add	sp, sp, #20
    2998:	pop	{r4, r5, pc}
    299c:	ldr	r0, [r2]
    29a0:	mov	r1, sp
    29a4:	mov	r2, #8
    29a8:	bl	c68 <read@plt>
    29ac:	cmp	r0, #8
    29b0:	bne	2984 <bt_hci_unref@@Base+0xa08>
    29b4:	ldr	r3, [r5, #4]
    29b8:	cmp	r3, #0
    29bc:	beq	2984 <bt_hci_unref@@Base+0xa08>
    29c0:	ldr	r0, [r5]
    29c4:	ldr	r1, [r5, #12]
    29c8:	blx	r3
    29cc:	b	2984 <bt_hci_unref@@Base+0xa08>
    29d0:	bl	cb0 <__stack_chk_fail@plt>
    29d4:	andeq	r2, r1, r4, lsr #11
    29d8:	andeq	r0, r0, r8, asr #1
    29dc:	push	{r3, lr}
    29e0:	mov	r0, #524288	; 0x80000
    29e4:	bl	e18 <epoll_create1@plt>
    29e8:	ldr	ip, [pc, #48]	; 2a20 <bt_hci_unref@@Base+0xaa4>
    29ec:	mov	r1, #0
    29f0:	add	ip, pc, ip
    29f4:	add	r2, ip, #512	; 0x200
    29f8:	mov	r3, ip
    29fc:	str	r0, [ip]
    2a00:	str	r1, [r3, #4]!
    2a04:	cmp	r3, r2
    2a08:	mov	r0, #0
    2a0c:	bne	2a00 <bt_hci_unref@@Base+0xa84>
    2a10:	ldr	r3, [pc, #12]	; 2a24 <bt_hci_unref@@Base+0xaa8>
    2a14:	add	r3, pc, r3
    2a18:	str	r0, [r3, #516]	; 0x204
    2a1c:	pop	{r3, pc}
    2a20:	andeq	r2, r1, r0, lsl r6
    2a24:	andeq	r2, r1, ip, ror #11
    2a28:	ldr	r3, [pc, #12]	; 2a3c <bt_hci_unref@@Base+0xac0>
    2a2c:	mov	r2, #1
    2a30:	add	r3, pc, r3
    2a34:	str	r2, [r3, #516]	; 0x204
    2a38:	bx	lr
    2a3c:	ldrdeq	r2, [r1], -r0
    2a40:	ldr	r3, [pc, #116]	; 2abc <bt_hci_unref@@Base+0xb40>
    2a44:	tst	r1, #24
    2a48:	ldr	r1, [pc, #112]	; 2ac0 <bt_hci_unref@@Base+0xb44>
    2a4c:	add	r3, pc, r3
    2a50:	push	{r4, r5, lr}
    2a54:	sub	sp, sp, #140	; 0x8c
    2a58:	ldr	r4, [r3, r1]
    2a5c:	mov	r5, r2
    2a60:	ldr	r3, [r4]
    2a64:	str	r3, [sp, #132]	; 0x84
    2a68:	beq	2a88 <bt_hci_unref@@Base+0xb0c>
    2a6c:	bl	2a28 <bt_hci_unref@@Base+0xaac>
    2a70:	ldr	r2, [sp, #132]	; 0x84
    2a74:	ldr	r3, [r4]
    2a78:	cmp	r2, r3
    2a7c:	bne	2ab8 <bt_hci_unref@@Base+0xb3c>
    2a80:	add	sp, sp, #140	; 0x8c
    2a84:	pop	{r4, r5, pc}
    2a88:	mov	r1, sp
    2a8c:	mov	r2, #128	; 0x80
    2a90:	bl	c68 <read@plt>
    2a94:	cmp	r0, #128	; 0x80
    2a98:	bne	2a70 <bt_hci_unref@@Base+0xaf4>
    2a9c:	ldr	r3, [r5, #132]	; 0x84
    2aa0:	cmp	r3, #0
    2aa4:	beq	2a70 <bt_hci_unref@@Base+0xaf4>
    2aa8:	ldr	r1, [r5, #140]	; 0x8c
    2aac:	ldr	r0, [sp]
    2ab0:	blx	r3
    2ab4:	b	2a70 <bt_hci_unref@@Base+0xaf4>
    2ab8:	bl	cb0 <__stack_chk_fail@plt>
    2abc:			; <UNDEFINED> instruction: 0x000124bc
    2ac0:	andeq	r0, r0, r8, asr #1
    2ac4:	ldr	r3, [pc, #20]	; 2ae0 <bt_hci_unref@@Base+0xb64>
    2ac8:	mov	r1, #0
    2acc:	mov	r2, #1
    2ad0:	add	r3, pc, r3
    2ad4:	str	r1, [r3, #520]	; 0x208
    2ad8:	str	r2, [r3, #516]	; 0x204
    2adc:	bx	lr
    2ae0:	andeq	r2, r1, r0, lsr r5
    2ae4:	ldr	r3, [pc, #16]	; 2afc <bt_hci_unref@@Base+0xb80>
    2ae8:	mov	r2, #1
    2aec:	add	r3, pc, r3
    2af0:	str	r2, [r3, #520]	; 0x208
    2af4:	str	r2, [r3, #516]	; 0x204
    2af8:	bx	lr
    2afc:	andeq	r2, r1, r4, lsl r5
    2b00:	ldr	ip, [pc, #244]	; 2bfc <bt_hci_unref@@Base+0xc80>
    2b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2b08:	add	ip, pc, ip
    2b0c:	ldr	r4, [pc, #236]	; 2c00 <bt_hci_unref@@Base+0xc84>
    2b10:	rsbs	r5, r2, #1
    2b14:	mov	fp, r3
    2b18:	sub	sp, sp, #36	; 0x24
    2b1c:	movcc	r5, #0
    2b20:	cmp	r0, #127	; 0x7f
    2b24:	orrhi	r5, r5, #1
    2b28:	ldr	r4, [ip, r4]
    2b2c:	cmp	r5, #0
    2b30:	mov	r8, r2
    2b34:	mov	r6, r0
    2b38:	mov	r2, ip
    2b3c:	mov	r9, r1
    2b40:	ldr	r3, [r4]
    2b44:	str	r4, [sp, #4]
    2b48:	ldr	r7, [sp, #72]	; 0x48
    2b4c:	str	r3, [sp, #28]
    2b50:	bne	2bd8 <bt_hci_unref@@Base+0xc5c>
    2b54:	mov	r0, #20
    2b58:	bl	d10 <malloc@plt>
    2b5c:	subs	r4, r0, #0
    2b60:	beq	2bf0 <bt_hci_unref@@Base+0xc74>
    2b64:	ldr	sl, [pc, #152]	; 2c04 <bt_hci_unref@@Base+0xc88>
    2b68:	add	r0, r4, #12
    2b6c:	mov	r2, r6
    2b70:	mov	r1, #1
    2b74:	add	sl, pc, sl
    2b78:	str	r5, [r0], #4
    2b7c:	add	r3, sp, #8
    2b80:	stm	r4, {r6, r9}
    2b84:	str	r8, [r4, #8]
    2b88:	ldr	r0, [sl]
    2b8c:	str	r7, [r4, #12]
    2b90:	str	fp, [r4, #16]
    2b94:	str	r5, [sp, #12]
    2b98:	str	r5, [sp, #20]
    2b9c:	str	r9, [sp, #8]
    2ba0:	str	r4, [sp, #16]
    2ba4:	bl	d34 <epoll_ctl@plt>
    2ba8:	subs	r8, r0, #0
    2bac:	addge	r6, sl, r6, lsl #2
    2bb0:	movge	r0, r5
    2bb4:	strge	r4, [r6, #4]
    2bb8:	blt	2be0 <bt_hci_unref@@Base+0xc64>
    2bbc:	ldr	r1, [sp, #4]
    2bc0:	ldr	r2, [sp, #28]
    2bc4:	ldr	r3, [r1]
    2bc8:	cmp	r2, r3
    2bcc:	bne	2bf8 <bt_hci_unref@@Base+0xc7c>
    2bd0:	add	sp, sp, #36	; 0x24
    2bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2bd8:	mvn	r0, #21
    2bdc:	b	2bbc <bt_hci_unref@@Base+0xc40>
    2be0:	mov	r0, r4
    2be4:	bl	c8c <free@plt>
    2be8:	mov	r0, r8
    2bec:	b	2bbc <bt_hci_unref@@Base+0xc40>
    2bf0:	mvn	r0, #11
    2bf4:	b	2bbc <bt_hci_unref@@Base+0xc40>
    2bf8:	bl	cb0 <__stack_chk_fail@plt>
    2bfc:	andeq	r2, r1, r0, lsl #8
    2c00:	andeq	r0, r0, r8, asr #1
    2c04:	andeq	r2, r1, ip, lsl #9
    2c08:	ldr	r3, [pc, #156]	; 2cac <bt_hci_unref@@Base+0xd30>
    2c0c:	cmp	r0, #127	; 0x7f
    2c10:	ldr	r2, [pc, #152]	; 2cb0 <bt_hci_unref@@Base+0xd34>
    2c14:	add	r3, pc, r3
    2c18:	push	{r4, r5, r6, r7, lr}
    2c1c:	sub	sp, sp, #28
    2c20:	ldr	r6, [r3, r2]
    2c24:	mov	r7, r1
    2c28:	ldr	r3, [r6]
    2c2c:	str	r3, [sp, #20]
    2c30:	bhi	2c98 <bt_hci_unref@@Base+0xd1c>
    2c34:	ldr	r3, [pc, #120]	; 2cb4 <bt_hci_unref@@Base+0xd38>
    2c38:	add	r3, pc, r3
    2c3c:	add	r0, r3, r0, lsl #2
    2c40:	ldr	r4, [r0, #4]
    2c44:	cmp	r4, #0
    2c48:	beq	2ca0 <bt_hci_unref@@Base+0xd24>
    2c4c:	str	r4, [sp, #8]
    2c50:	mov	r5, #0
    2c54:	ldr	r0, [r3]
    2c58:	mov	r1, #3
    2c5c:	str	r5, [sp, #4]
    2c60:	mov	r3, sp
    2c64:	str	r5, [sp, #12]
    2c68:	ldr	r2, [r4]
    2c6c:	str	r7, [sp]
    2c70:	bl	d34 <epoll_ctl@plt>
    2c74:	cmp	r0, #0
    2c78:	movge	r0, r5
    2c7c:	strge	r7, [r4, #4]
    2c80:	ldr	r2, [sp, #20]
    2c84:	ldr	r3, [r6]
    2c88:	cmp	r2, r3
    2c8c:	bne	2ca8 <bt_hci_unref@@Base+0xd2c>
    2c90:	add	sp, sp, #28
    2c94:	pop	{r4, r5, r6, r7, pc}
    2c98:	mvn	r0, #21
    2c9c:	b	2c80 <bt_hci_unref@@Base+0xd04>
    2ca0:	mvn	r0, #5
    2ca4:	b	2c80 <bt_hci_unref@@Base+0xd04>
    2ca8:	bl	cb0 <__stack_chk_fail@plt>
    2cac:	strdeq	r2, [r1], -r4
    2cb0:	andeq	r0, r0, r8, asr #1
    2cb4:	andeq	r2, r1, r8, asr #7
    2cb8:	cmp	r0, #127	; 0x7f
    2cbc:	push	{r3, r4, r5, lr}
    2cc0:	bhi	2d20 <bt_hci_unref@@Base+0xda4>
    2cc4:	ldr	r2, [pc, #100]	; 2d30 <bt_hci_unref@@Base+0xdb4>
    2cc8:	add	r2, pc, r2
    2ccc:	add	ip, r2, r0, lsl #2
    2cd0:	ldr	r4, [ip, #4]
    2cd4:	cmp	r4, #0
    2cd8:	beq	2d28 <bt_hci_unref@@Base+0xdac>
    2cdc:	mov	lr, #0
    2ce0:	ldr	r0, [r2]
    2ce4:	mov	r3, lr
    2ce8:	ldr	r2, [r4]
    2cec:	mov	r1, #2
    2cf0:	str	lr, [ip, #4]
    2cf4:	bl	d34 <epoll_ctl@plt>
    2cf8:	ldr	r3, [r4, #12]
    2cfc:	cmp	r3, #0
    2d00:	mov	r5, r0
    2d04:	beq	2d10 <bt_hci_unref@@Base+0xd94>
    2d08:	ldr	r0, [r4, #16]
    2d0c:	blx	r3
    2d10:	mov	r0, r4
    2d14:	bl	c8c <free@plt>
    2d18:	mov	r0, r5
    2d1c:	pop	{r3, r4, r5, pc}
    2d20:	mvn	r0, #21
    2d24:	pop	{r3, r4, r5, pc}
    2d28:	mvn	r0, #5
    2d2c:	pop	{r3, r4, r5, pc}
    2d30:	andeq	r2, r1, r8, lsr r3
    2d34:	ldr	r3, [pc, #496]	; 2f2c <bt_hci_unref@@Base+0xfb0>
    2d38:	ldr	r2, [pc, #496]	; 2f30 <bt_hci_unref@@Base+0xfb4>
    2d3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2d40:	add	r3, pc, r3
    2d44:	ldr	r5, [pc, #488]	; 2f34 <bt_hci_unref@@Base+0xfb8>
    2d48:	sub	sp, sp, #176	; 0xb0
    2d4c:	ldr	r6, [r3, r2]
    2d50:	add	r5, pc, r5
    2d54:	ldr	r4, [r5, #524]	; 0x20c
    2d58:	ldr	r3, [r6]
    2d5c:	cmp	r4, #0
    2d60:	str	r3, [sp, #172]	; 0xac
    2d64:	beq	2dc8 <bt_hci_unref@@Base+0xe4c>
    2d68:	add	r7, r4, #4
    2d6c:	mov	r0, #0
    2d70:	mov	r2, r0
    2d74:	mov	r1, r7
    2d78:	bl	c80 <sigprocmask@plt>
    2d7c:	cmp	r0, #0
    2d80:	blt	2f20 <bt_hci_unref@@Base+0xfa4>
    2d84:	mov	r1, r7
    2d88:	mov	r2, #2048	; 0x800
    2d8c:	mvn	r0, #0
    2d90:	movt	r2, #8
    2d94:	bl	cc8 <signalfd@plt>
    2d98:	cmp	r0, #0
    2d9c:	str	r0, [r4]
    2da0:	blt	2f20 <bt_hci_unref@@Base+0xfa4>
    2da4:	mov	r2, #0
    2da8:	str	r2, [sp]
    2dac:	ldr	r2, [pc, #388]	; 2f38 <bt_hci_unref@@Base+0xfbc>
    2db0:	mov	r3, r4
    2db4:	mov	r1, #1
    2db8:	add	r2, pc, r2
    2dbc:	bl	2b00 <bt_hci_unref@@Base+0xb84>
    2dc0:	cmp	r0, #0
    2dc4:	blt	2f14 <bt_hci_unref@@Base+0xf98>
    2dc8:	ldr	r8, [pc, #364]	; 2f3c <bt_hci_unref@@Base+0xfc0>
    2dcc:	add	r9, sp, #8
    2dd0:	mov	r3, #0
    2dd4:	add	r8, pc, r8
    2dd8:	str	r3, [r8, #520]	; 0x208
    2ddc:	ldr	r5, [r8, #516]	; 0x204
    2de0:	cmp	r5, #0
    2de4:	bne	2e40 <bt_hci_unref@@Base+0xec4>
    2de8:	ldr	r0, [r8]
    2dec:	mov	r1, r9
    2df0:	mov	r2, #10
    2df4:	mvn	r3, #0
    2df8:	bl	dd0 <epoll_wait@plt>
    2dfc:	subs	r7, r0, #0
    2e00:	blt	2ddc <bt_hci_unref@@Base+0xe60>
    2e04:	beq	2ddc <bt_hci_unref@@Base+0xe60>
    2e08:	add	r4, sp, #16
    2e0c:	ldr	r3, [r4]
    2e10:	add	r5, r5, #1
    2e14:	ldr	r1, [r4, #-8]
    2e18:	add	r4, r4, #16
    2e1c:	ldr	ip, [r3, #8]
    2e20:	ldr	r0, [r3]
    2e24:	ldr	r2, [r3, #16]
    2e28:	blx	ip
    2e2c:	cmp	r5, r7
    2e30:	bne	2e0c <bt_hci_unref@@Base+0xe90>
    2e34:	ldr	r5, [r8, #516]	; 0x204
    2e38:	cmp	r5, #0
    2e3c:	beq	2de8 <bt_hci_unref@@Base+0xe6c>
    2e40:	ldr	r3, [r8, #524]	; 0x20c
    2e44:	cmp	r3, #0
    2e48:	beq	2e78 <bt_hci_unref@@Base+0xefc>
    2e4c:	ldr	r0, [r3]
    2e50:	bl	2cb8 <bt_hci_unref@@Base+0xd3c>
    2e54:	ldr	r3, [r8, #524]	; 0x20c
    2e58:	ldr	r0, [r3]
    2e5c:	bl	e24 <close@plt>
    2e60:	ldr	r2, [r8, #524]	; 0x20c
    2e64:	ldr	r3, [r2, #136]	; 0x88
    2e68:	cmp	r3, #0
    2e6c:	beq	2e78 <bt_hci_unref@@Base+0xefc>
    2e70:	ldr	r0, [r2, #140]	; 0x8c
    2e74:	blx	r3
    2e78:	ldr	r5, [pc, #192]	; 2f40 <bt_hci_unref@@Base+0xfc4>
    2e7c:	mov	r9, #0
    2e80:	ldr	sl, [pc, #188]	; 2f44 <bt_hci_unref@@Base+0xfc8>
    2e84:	add	r5, pc, r5
    2e88:	add	r8, r5, #516	; 0x204
    2e8c:	add	sl, pc, sl
    2e90:	ldr	r7, [r5], #4
    2e94:	ldr	r4, [r5]
    2e98:	str	r9, [r5], #4
    2e9c:	cmp	r4, #0
    2ea0:	beq	2ed8 <bt_hci_unref@@Base+0xf5c>
    2ea4:	mov	r3, #0
    2ea8:	mov	r0, r7
    2eac:	mov	r1, #2
    2eb0:	ldr	r2, [r4]
    2eb4:	bl	d34 <epoll_ctl@plt>
    2eb8:	ldr	r3, [r4, #12]
    2ebc:	cmp	r3, #0
    2ec0:	beq	2ed0 <bt_hci_unref@@Base+0xf54>
    2ec4:	ldr	r0, [r4, #16]
    2ec8:	blx	r3
    2ecc:	ldr	r7, [sl]
    2ed0:	mov	r0, r4
    2ed4:	bl	c8c <free@plt>
    2ed8:	cmp	r5, r8
    2edc:	bne	2e94 <bt_hci_unref@@Base+0xf18>
    2ee0:	mov	r0, r7
    2ee4:	bl	e24 <close@plt>
    2ee8:	ldr	r3, [pc, #88]	; 2f48 <bt_hci_unref@@Base+0xfcc>
    2eec:	mov	r2, #0
    2ef0:	add	r3, pc, r3
    2ef4:	ldr	r0, [r3, #520]	; 0x208
    2ef8:	str	r2, [r3]
    2efc:	ldr	r2, [sp, #172]	; 0xac
    2f00:	ldr	r3, [r6]
    2f04:	cmp	r2, r3
    2f08:	bne	2f28 <bt_hci_unref@@Base+0xfac>
    2f0c:	add	sp, sp, #176	; 0xb0
    2f10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2f14:	ldr	r3, [r5, #524]	; 0x20c
    2f18:	ldr	r0, [r3]
    2f1c:	bl	e24 <close@plt>
    2f20:	mov	r0, #1
    2f24:	b	2efc <bt_hci_unref@@Base+0xf80>
    2f28:	bl	cb0 <__stack_chk_fail@plt>
    2f2c:	andeq	r2, r1, r8, asr #3
    2f30:	andeq	r0, r0, r8, asr #1
    2f34:			; <UNDEFINED> instruction: 0x000122b0
    2f38:			; <UNDEFINED> instruction: 0xfffffc80
    2f3c:	andeq	r2, r1, ip, lsr #4
    2f40:	andeq	r2, r1, ip, ror r1
    2f44:	andeq	r2, r1, r4, ror r1
    2f48:	andeq	r2, r1, r0, lsl r1
    2f4c:	ldr	ip, [pc, #340]	; 30a8 <bt_hci_unref@@Base+0x112c>
    2f50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2f54:	add	ip, pc, ip
    2f58:	ldr	r4, [pc, #332]	; 30ac <bt_hci_unref@@Base+0x1130>
    2f5c:	mov	sl, r3
    2f60:	sub	sp, sp, #32
    2f64:	subs	r8, r1, #0
    2f68:	mov	r7, r0
    2f6c:	mov	r9, r2
    2f70:	ldr	r6, [ip, r4]
    2f74:	ldr	r3, [r6]
    2f78:	str	r3, [sp, #28]
    2f7c:	beq	3068 <bt_hci_unref@@Base+0x10ec>
    2f80:	mov	r0, #16
    2f84:	bl	d10 <malloc@plt>
    2f88:	subs	r4, r0, #0
    2f8c:	beq	3070 <bt_hci_unref@@Base+0x10f4>
    2f90:	mov	ip, r4
    2f94:	mov	r5, #0
    2f98:	mov	r1, #2048	; 0x800
    2f9c:	str	r5, [ip], #4
    2fa0:	mov	r0, #1
    2fa4:	movt	r1, #8
    2fa8:	stmib	r4, {r8, sl}
    2fac:	str	r9, [r4, #12]
    2fb0:	bl	d58 <timerfd_create@plt>
    2fb4:	cmp	r0, r5
    2fb8:	mov	r3, r0
    2fbc:	str	r0, [r4]
    2fc0:	blt	307c <bt_hci_unref@@Base+0x1100>
    2fc4:	cmp	r7, #0
    2fc8:	bne	3014 <bt_hci_unref@@Base+0x1098>
    2fcc:	ldr	ip, [pc, #220]	; 30b0 <bt_hci_unref@@Base+0x1134>
    2fd0:	mov	r0, r3
    2fd4:	ldr	r2, [pc, #216]	; 30b4 <bt_hci_unref@@Base+0x1138>
    2fd8:	mov	r1, #1073741825	; 0x40000001
    2fdc:	add	ip, pc, ip
    2fe0:	mov	r3, r4
    2fe4:	add	r2, pc, r2
    2fe8:	str	ip, [sp]
    2fec:	bl	2b00 <bt_hci_unref@@Base+0xb84>
    2ff0:	cmp	r0, #0
    2ff4:	ldr	r0, [r4]
    2ff8:	blt	3078 <bt_hci_unref@@Base+0x10fc>
    2ffc:	ldr	r2, [sp, #28]
    3000:	ldr	r3, [r6]
    3004:	cmp	r2, r3
    3008:	bne	30a4 <bt_hci_unref@@Base+0x1128>
    300c:	add	sp, sp, #32
    3010:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3014:	movw	r3, #19923	; 0x4dd3
    3018:	movt	r3, #4194	; 0x1062
    301c:	mov	r8, #1000	; 0x3e8
    3020:	movw	ip, #16960	; 0x4240
    3024:	umull	r2, lr, r3, r7
    3028:	movt	ip, #15
    302c:	mov	r1, r5
    3030:	add	r2, sp, #12
    3034:	mov	r3, r5
    3038:	str	r5, [sp, #12]
    303c:	str	r5, [sp, #16]
    3040:	lsr	lr, lr, #6
    3044:	str	lr, [sp, #20]
    3048:	mls	r7, r8, lr, r7
    304c:	mul	ip, ip, r7
    3050:	str	ip, [sp, #24]
    3054:	bl	de8 <timerfd_settime@plt>
    3058:	cmp	r0, #0
    305c:	blt	308c <bt_hci_unref@@Base+0x1110>
    3060:	ldr	r3, [r4]
    3064:	b	2fcc <bt_hci_unref@@Base+0x1050>
    3068:	mvn	r0, #21
    306c:	b	2ffc <bt_hci_unref@@Base+0x1080>
    3070:	mvn	r0, #11
    3074:	b	2ffc <bt_hci_unref@@Base+0x1080>
    3078:	bl	e24 <close@plt>
    307c:	mov	r0, r4
    3080:	bl	c8c <free@plt>
    3084:	mvn	r0, #4
    3088:	b	2ffc <bt_hci_unref@@Base+0x1080>
    308c:	ldr	r0, [r4]
    3090:	bl	e24 <close@plt>
    3094:	mov	r0, r4
    3098:	bl	c8c <free@plt>
    309c:	mvn	r0, #4
    30a0:	b	2ffc <bt_hci_unref@@Base+0x1080>
    30a4:	bl	cb0 <__stack_chk_fail@plt>
    30a8:			; <UNDEFINED> instruction: 0x00011fb4
    30ac:	andeq	r0, r0, r8, asr #1
    30b0:			; <UNDEFINED> instruction: 0xfffff93c
    30b4:			; <UNDEFINED> instruction: 0xfffff96c
    30b8:	ldr	r3, [pc, #176]	; 3170 <bt_hci_unref@@Base+0x11f4>
    30bc:	subs	ip, r1, #0
    30c0:	ldr	r2, [pc, #172]	; 3174 <bt_hci_unref@@Base+0x11f8>
    30c4:	add	r3, pc, r3
    30c8:	push	{r4, r5, r6, r7, r8, lr}
    30cc:	sub	sp, sp, #24
    30d0:	ldr	r4, [r3, r2]
    30d4:	mov	r5, r0
    30d8:	ldr	r3, [r4]
    30dc:	str	r3, [sp, #20]
    30e0:	beq	3134 <bt_hci_unref@@Base+0x11b8>
    30e4:	movw	r3, #19923	; 0x4dd3
    30e8:	movt	r3, #4194	; 0x1062
    30ec:	mov	lr, #0
    30f0:	str	lr, [sp, #4]
    30f4:	umull	r2, r8, r3, ip
    30f8:	mov	r1, lr
    30fc:	mov	r3, lr
    3100:	str	lr, [sp, #8]
    3104:	mov	r7, #1000	; 0x3e8
    3108:	movw	r6, #16960	; 0x4240
    310c:	movt	r6, #15
    3110:	add	r2, sp, #4
    3114:	lsr	lr, r8, #6
    3118:	str	lr, [sp, #12]
    311c:	mls	ip, r7, lr, ip
    3120:	mul	r6, r6, ip
    3124:	str	r6, [sp, #16]
    3128:	bl	de8 <timerfd_settime@plt>
    312c:	cmp	r0, #0
    3130:	blt	3164 <bt_hci_unref@@Base+0x11e8>
    3134:	mov	r0, r5
    3138:	mov	r1, #1073741825	; 0x40000001
    313c:	bl	2c08 <bt_hci_unref@@Base+0xc8c>
    3140:	cmp	r0, #0
    3144:	blt	3164 <bt_hci_unref@@Base+0x11e8>
    3148:	mov	r0, #0
    314c:	ldr	r2, [sp, #20]
    3150:	ldr	r3, [r4]
    3154:	cmp	r2, r3
    3158:	bne	316c <bt_hci_unref@@Base+0x11f0>
    315c:	add	sp, sp, #24
    3160:	pop	{r4, r5, r6, r7, r8, pc}
    3164:	mvn	r0, #4
    3168:	b	314c <bt_hci_unref@@Base+0x11d0>
    316c:	bl	cb0 <__stack_chk_fail@plt>
    3170:	andeq	r1, r1, r4, asr #28
    3174:	andeq	r0, r0, r8, asr #1
    3178:	b	2cb8 <bt_hci_unref@@Base+0xd3c>
    317c:	cmp	r1, #0
    3180:	cmpne	r0, #0
    3184:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3188:	mov	r5, r0
    318c:	mov	r6, r1
    3190:	movne	r7, #0
    3194:	moveq	r7, #1
    3198:	mov	r8, r2
    319c:	mov	r9, r3
    31a0:	beq	3204 <bt_hci_unref@@Base+0x1288>
    31a4:	mov	r0, #144	; 0x90
    31a8:	bl	d10 <malloc@plt>
    31ac:	subs	r4, r0, #0
    31b0:	beq	320c <bt_hci_unref@@Base+0x1290>
    31b4:	ldr	sl, [pc, #88]	; 3214 <bt_hci_unref@@Base+0x1298>
    31b8:	mov	r1, r7
    31bc:	mov	r2, #144	; 0x90
    31c0:	bl	d94 <memset@plt>
    31c4:	add	sl, pc, sl
    31c8:	mov	r0, r4
    31cc:	mov	r1, r5
    31d0:	mvn	r3, #0
    31d4:	str	r6, [r4, #132]	; 0x84
    31d8:	str	r9, [r4, #136]	; 0x88
    31dc:	mov	r2, #128	; 0x80
    31e0:	str	r8, [r4, #140]	; 0x8c
    31e4:	mov	r5, sl
    31e8:	str	r3, [r0], #4
    31ec:	bl	ca4 <memcpy@plt>
    31f0:	ldr	r0, [sl, #524]	; 0x20c
    31f4:	bl	c8c <free@plt>
    31f8:	str	r4, [sl, #524]	; 0x20c
    31fc:	mov	r0, r7
    3200:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3204:	mvn	r0, #21
    3208:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    320c:	mvn	r0, #11
    3210:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3214:	andeq	r1, r1, ip, lsr lr
    3218:	subs	r3, r1, r0
    321c:	rsbs	r0, r3, #0
    3220:	adcs	r0, r0, r3
    3224:	bx	lr
    3228:	push	{r4, lr}
    322c:	mov	r4, r0
    3230:	mov	r0, #8
    3234:	bl	37a0 <bt_hci_unref@@Base+0x1824>
    3238:	mov	r2, #0
    323c:	add	r3, r0, #3
    3240:	strb	r2, [r3], #1
    3244:	strb	r2, [r3], #1
    3248:	strb	r2, [r3], #1
    324c:	strb	r2, [r3], #1
    3250:	strb	r2, [r3]
    3254:	str	r4, [r0]
    3258:	pop	{r4, pc}
    325c:	dmb	sy
    3260:	mov	r3, r0
    3264:	ldrex	r2, [r3]
    3268:	sub	r2, r2, #1
    326c:	strex	r1, r2, [r3]
    3270:	cmp	r1, #0
    3274:	bne	3264 <bt_hci_unref@@Base+0x12e8>
    3278:	cmp	r2, #0
    327c:	dmb	sy
    3280:	bxne	lr
    3284:	b	c8c <free@plt>
    3288:	push	{r4, lr}
    328c:	mov	r0, #16
    3290:	bl	37a0 <bt_hci_unref@@Base+0x1824>
    3294:	mov	r1, #0
    3298:	mov	r2, #16
    329c:	mov	r4, r0
    32a0:	bl	d94 <memset@plt>
    32a4:	dmb	sy
    32a8:	ldrex	r2, [r4]
    32ac:	add	r2, r2, #1
    32b0:	strex	r3, r2, [r4]
    32b4:	cmp	r3, #0
    32b8:	bne	32a8 <bt_hci_unref@@Base+0x132c>
    32bc:	dmb	sy
    32c0:	mov	r0, r4
    32c4:	pop	{r4, pc}
    32c8:	push	{r4, lr}
    32cc:	subs	r4, r0, #0
    32d0:	beq	330c <bt_hci_unref@@Base+0x1390>
    32d4:	mov	r0, r1
    32d8:	bl	3228 <bt_hci_unref@@Base+0x12ac>
    32dc:	ldr	r3, [r4, #8]
    32e0:	cmp	r3, #0
    32e4:	strne	r0, [r3, #4]
    32e8:	ldr	r3, [r4, #4]
    32ec:	str	r0, [r4, #8]
    32f0:	cmp	r3, #0
    32f4:	ldr	r3, [r4, #12]
    32f8:	streq	r0, [r4, #4]
    32fc:	mov	r0, #1
    3300:	add	r3, r3, r0
    3304:	str	r3, [r4, #12]
    3308:	pop	{r4, pc}
    330c:	mov	r0, r4
    3310:	pop	{r4, pc}
    3314:	push	{r4, lr}
    3318:	subs	r4, r0, #0
    331c:	beq	3354 <bt_hci_unref@@Base+0x13d8>
    3320:	mov	r0, r1
    3324:	bl	3228 <bt_hci_unref@@Base+0x12ac>
    3328:	ldr	r3, [r4, #4]
    332c:	ldr	r2, [r4, #8]
    3330:	cmp	r2, #0
    3334:	str	r3, [r0, #4]
    3338:	ldr	r3, [r4, #12]
    333c:	str	r0, [r4, #4]
    3340:	streq	r0, [r4, #8]
    3344:	mov	r0, #1
    3348:	add	r3, r3, r0
    334c:	str	r3, [r4, #12]
    3350:	pop	{r4, pc}
    3354:	mov	r0, r4
    3358:	pop	{r4, pc}
    335c:	push	{r3, r4, r5, lr}
    3360:	subs	r5, r0, #0
    3364:	beq	33d8 <bt_hci_unref@@Base+0x145c>
    3368:	ldr	r4, [r5, #4]
    336c:	cmp	r4, #0
    3370:	bne	3384 <bt_hci_unref@@Base+0x1408>
    3374:	b	33c8 <bt_hci_unref@@Base+0x144c>
    3378:	ldr	r4, [r4, #4]
    337c:	cmp	r4, #0
    3380:	beq	33c8 <bt_hci_unref@@Base+0x144c>
    3384:	ldr	r3, [r4]
    3388:	cmp	r3, r1
    338c:	bne	3378 <bt_hci_unref@@Base+0x13fc>
    3390:	mov	r0, r2
    3394:	bl	3228 <bt_hci_unref@@Base+0x12ac>
    3398:	ldr	r2, [r4, #4]
    339c:	str	r2, [r0, #4]
    33a0:	mov	r3, r0
    33a4:	ldr	r2, [r4, #4]
    33a8:	cmp	r2, #0
    33ac:	beq	33d0 <bt_hci_unref@@Base+0x1454>
    33b0:	ldr	r2, [r5, #12]
    33b4:	mov	r0, #1
    33b8:	str	r3, [r4, #4]
    33bc:	add	r3, r2, r0
    33c0:	str	r3, [r5, #12]
    33c4:	pop	{r3, r4, r5, pc}
    33c8:	mov	r0, r4
    33cc:	pop	{r3, r4, r5, pc}
    33d0:	str	r3, [r5, #8]
    33d4:	b	33b0 <bt_hci_unref@@Base+0x1434>
    33d8:	mov	r0, r5
    33dc:	pop	{r3, r4, r5, pc}
    33e0:	push	{r3, r4, r5, lr}
    33e4:	subs	r4, r0, #0
    33e8:	beq	3424 <bt_hci_unref@@Base+0x14a8>
    33ec:	ldr	r0, [r4, #4]
    33f0:	cmp	r0, #0
    33f4:	popeq	{r3, r4, r5, pc}
    33f8:	ldr	r3, [r0, #4]
    33fc:	ldr	r5, [r0]
    3400:	cmp	r3, #0
    3404:	str	r3, [r4, #4]
    3408:	streq	r3, [r4, #8]
    340c:	bl	c8c <free@plt>
    3410:	ldr	r3, [r4, #12]
    3414:	mov	r0, r5
    3418:	sub	r3, r3, #1
    341c:	str	r3, [r4, #12]
    3420:	pop	{r3, r4, r5, pc}
    3424:	mov	r0, r4
    3428:	pop	{r3, r4, r5, pc}
    342c:	cmp	r0, #0
    3430:	bxeq	lr
    3434:	ldr	r0, [r0, #4]
    3438:	cmp	r0, #0
    343c:	ldrne	r0, [r0]
    3440:	bx	lr
    3444:	cmp	r0, #0
    3448:	bxeq	lr
    344c:	ldr	r0, [r0, #8]
    3450:	cmp	r0, #0
    3454:	ldrne	r0, [r0]
    3458:	bx	lr
    345c:	cmp	r1, #0
    3460:	cmpne	r0, #0
    3464:	push	{r3, r4, r5, r6, r7, lr}
    3468:	mov	r5, r0
    346c:	mov	r6, r1
    3470:	mov	r7, r2
    3474:	popeq	{r3, r4, r5, r6, r7, pc}
    3478:	ldr	r3, [r0, #4]
    347c:	cmp	r3, #0
    3480:	popeq	{r3, r4, r5, r6, r7, pc}
    3484:	dmb	sy
    3488:	ldrex	r1, [r5]
    348c:	add	r1, r1, #1
    3490:	strex	r2, r1, [r5]
    3494:	cmp	r2, #0
    3498:	bne	3488 <bt_hci_unref@@Base+0x150c>
    349c:	dmb	sy
    34a0:	ldr	r0, [r5, #4]
    34a4:	mov	r1, r7
    34a8:	cmp	r0, #0
    34ac:	beq	34d0 <bt_hci_unref@@Base+0x1554>
    34b0:	ldr	r0, [r5]
    34b4:	cmp	r0, #1
    34b8:	ble	34d0 <bt_hci_unref@@Base+0x1554>
    34bc:	ldm	r3, {r0, r4}
    34c0:	blx	r6
    34c4:	cmp	r4, #0
    34c8:	mov	r3, r4
    34cc:	bne	34a0 <bt_hci_unref@@Base+0x1524>
    34d0:	mov	r0, r5
    34d4:	pop	{r3, r4, r5, r6, r7, lr}
    34d8:	b	325c <bt_hci_unref@@Base+0x12e0>
    34dc:	cmp	r0, #0
    34e0:	push	{r4, r5, r6, lr}
    34e4:	mov	r5, r1
    34e8:	mov	r6, r2
    34ec:	beq	3530 <bt_hci_unref@@Base+0x15b4>
    34f0:	cmp	r1, #0
    34f4:	beq	3538 <bt_hci_unref@@Base+0x15bc>
    34f8:	ldr	r4, [r0, #4]
    34fc:	cmp	r4, #0
    3500:	bne	3514 <bt_hci_unref@@Base+0x1598>
    3504:	b	3530 <bt_hci_unref@@Base+0x15b4>
    3508:	ldr	r4, [r4, #4]
    350c:	cmp	r4, #0
    3510:	beq	3530 <bt_hci_unref@@Base+0x15b4>
    3514:	ldr	r0, [r4]
    3518:	mov	r1, r6
    351c:	blx	r5
    3520:	cmp	r0, #0
    3524:	beq	3508 <bt_hci_unref@@Base+0x158c>
    3528:	ldr	r0, [r4]
    352c:	pop	{r4, r5, r6, pc}
    3530:	mov	r0, #0
    3534:	pop	{r4, r5, r6, pc}
    3538:	ldr	r5, [pc, #4]	; 3544 <bt_hci_unref@@Base+0x15c8>
    353c:	add	r5, pc, r5
    3540:	b	34f8 <bt_hci_unref@@Base+0x157c>
    3544:			; <UNDEFINED> instruction: 0xfffffcd4
    3548:	push	{r4, lr}
    354c:	subs	r4, r0, #0
    3550:	beq	35d0 <bt_hci_unref@@Base+0x1654>
    3554:	ldr	r3, [r4, #4]
    3558:	cmp	r3, #0
    355c:	beq	35d8 <bt_hci_unref@@Base+0x165c>
    3560:	ldr	r2, [r3]
    3564:	cmp	r2, r1
    3568:	bne	3574 <bt_hci_unref@@Base+0x15f8>
    356c:	b	35bc <bt_hci_unref@@Base+0x1640>
    3570:	mov	r3, r0
    3574:	ldr	r0, [r3, #4]
    3578:	cmp	r0, #0
    357c:	beq	35b8 <bt_hci_unref@@Base+0x163c>
    3580:	ldr	r2, [r0]
    3584:	cmp	r2, r1
    3588:	bne	3570 <bt_hci_unref@@Base+0x15f4>
    358c:	ldr	r2, [r0, #4]
    3590:	str	r2, [r3, #4]
    3594:	ldr	r2, [r0, #4]
    3598:	cmp	r2, #0
    359c:	streq	r3, [r4, #8]
    35a0:	bl	c8c <free@plt>
    35a4:	ldr	r3, [r4, #12]
    35a8:	mov	r0, #1
    35ac:	sub	r3, r3, #1
    35b0:	str	r3, [r4, #12]
    35b4:	pop	{r4, pc}
    35b8:	pop	{r4, pc}
    35bc:	ldr	r2, [r3, #4]
    35c0:	mov	r0, r3
    35c4:	mov	r3, #0
    35c8:	str	r2, [r4, #4]
    35cc:	b	3598 <bt_hci_unref@@Base+0x161c>
    35d0:	mov	r0, r4
    35d4:	pop	{r4, pc}
    35d8:	mov	r0, r3
    35dc:	pop	{r4, pc}
    35e0:	cmp	r1, #0
    35e4:	cmpne	r0, #0
    35e8:	push	{r4, r5, r6, r7, r8, lr}
    35ec:	mov	r8, r0
    35f0:	mov	r5, r1
    35f4:	movne	r6, #0
    35f8:	moveq	r6, #1
    35fc:	mov	r7, r2
    3600:	beq	3674 <bt_hci_unref@@Base+0x16f8>
    3604:	ldr	r4, [r0, #4]
    3608:	cmp	r4, #0
    360c:	bne	3624 <bt_hci_unref@@Base+0x16a8>
    3610:	b	3674 <bt_hci_unref@@Base+0x16f8>
    3614:	cmp	r3, #0
    3618:	mov	r6, r4
    361c:	mov	r4, r3
    3620:	beq	3674 <bt_hci_unref@@Base+0x16f8>
    3624:	ldr	r0, [r4]
    3628:	mov	r1, r7
    362c:	blx	r5
    3630:	ldr	r3, [r4, #4]
    3634:	cmp	r0, #0
    3638:	beq	3614 <bt_hci_unref@@Base+0x1698>
    363c:	cmp	r6, #0
    3640:	strne	r3, [r6, #4]
    3644:	streq	r3, [r8, #4]
    3648:	mov	r0, r4
    364c:	ldrne	r3, [r4, #4]
    3650:	ldr	r5, [r4]
    3654:	cmp	r3, #0
    3658:	streq	r6, [r8, #8]
    365c:	bl	c8c <free@plt>
    3660:	ldr	r3, [r8, #12]
    3664:	mov	r0, r5
    3668:	sub	r3, r3, #1
    366c:	str	r3, [r8, #12]
    3670:	pop	{r4, r5, r6, r7, r8, pc}
    3674:	mov	r0, #0
    3678:	pop	{r4, r5, r6, r7, r8, pc}
    367c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    3680:	subs	r4, r0, #0
    3684:	mov	r8, r1
    3688:	mov	r9, r2
    368c:	mov	r7, r3
    3690:	beq	36f0 <bt_hci_unref@@Base+0x1774>
    3694:	cmp	r1, #0
    3698:	ldr	r6, [r4, #4]
    369c:	beq	36f8 <bt_hci_unref@@Base+0x177c>
    36a0:	cmp	r6, #0
    36a4:	beq	36f0 <bt_hci_unref@@Base+0x1774>
    36a8:	ldr	r6, [r4, #12]
    36ac:	mov	r5, #0
    36b0:	b	36cc <bt_hci_unref@@Base+0x1750>
    36b4:	cmp	r7, #0
    36b8:	moveq	r6, ip
    36bc:	beq	36c8 <bt_hci_unref@@Base+0x174c>
    36c0:	blx	r7
    36c4:	ldr	r6, [r4, #12]
    36c8:	add	r5, r5, #1
    36cc:	mov	r0, r4
    36d0:	mov	r1, r8
    36d4:	mov	r2, r9
    36d8:	bl	35e0 <bt_hci_unref@@Base+0x1664>
    36dc:	ldr	ip, [r4, #12]
    36e0:	cmp	r6, ip
    36e4:	bne	36b4 <bt_hci_unref@@Base+0x1738>
    36e8:	mov	r0, r5
    36ec:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    36f0:	mov	r0, #0
    36f4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    36f8:	cmp	r6, #0
    36fc:	str	r1, [r4, #4]
    3700:	str	r1, [r4, #8]
    3704:	str	r1, [r4, #12]
    3708:	beq	36f0 <bt_hci_unref@@Base+0x1774>
    370c:	cmp	r7, #0
    3710:	ldr	r4, [r6, #4]
    3714:	add	r8, r8, #1
    3718:	beq	3724 <bt_hci_unref@@Base+0x17a8>
    371c:	ldr	r0, [r6]
    3720:	blx	r7
    3724:	mov	r0, r6
    3728:	mov	r6, r4
    372c:	bl	c8c <free@plt>
    3730:	cmp	r4, #0
    3734:	bne	370c <bt_hci_unref@@Base+0x1790>
    3738:	mov	r0, r8
    373c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    3740:	push	{r4, lr}
    3744:	subs	r4, r0, #0
    3748:	mov	r3, r1
    374c:	popeq	{r4, pc}
    3750:	mov	r1, #0
    3754:	mov	r2, r1
    3758:	bl	367c <bt_hci_unref@@Base+0x1700>
    375c:	mov	r0, r4
    3760:	pop	{r4, lr}
    3764:	b	325c <bt_hci_unref@@Base+0x12e0>
    3768:	cmp	r0, #0
    376c:	ldrne	r0, [r0, #4]
    3770:	bx	lr
    3774:	cmp	r0, #0
    3778:	ldrne	r0, [r0, #12]
    377c:	bx	lr
    3780:	cmp	r0, #0
    3784:	beq	3798 <bt_hci_unref@@Base+0x181c>
    3788:	ldr	r0, [r0, #12]
    378c:	rsbs	r0, r0, #1
    3790:	movcc	r0, #0
    3794:	bx	lr
    3798:	mov	r0, #1
    379c:	bx	lr
    37a0:	push	{r3, r4, r5, lr}
    37a4:	subs	r5, r0, #0
    37a8:	ldr	r4, [pc, #60]	; 37ec <bt_hci_unref@@Base+0x1870>
    37ac:	add	r4, pc, r4
    37b0:	beq	37e4 <bt_hci_unref@@Base+0x1868>
    37b4:	bl	d10 <malloc@plt>
    37b8:	cmp	r0, #0
    37bc:	popne	{r3, r4, r5, pc}
    37c0:	ldr	r0, [pc, #40]	; 37f0 <bt_hci_unref@@Base+0x1874>
    37c4:	mov	r3, r5
    37c8:	ldr	r2, [pc, #36]	; 37f4 <bt_hci_unref@@Base+0x1878>
    37cc:	mov	r1, #1
    37d0:	ldr	r0, [r4, r0]
    37d4:	add	r2, pc, r2
    37d8:	ldr	r0, [r0]
    37dc:	bl	dac <__fprintf_chk@plt>
    37e0:	bl	e0c <abort@plt>
    37e4:	mov	r0, r5
    37e8:	pop	{r3, r4, r5, pc}
    37ec:	andeq	r1, r1, ip, asr r7
    37f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    37f4:	andeq	r0, r0, r4, lsl r8
    37f8:	push	{r2, r3}
    37fc:	ldr	r3, [pc, #140]	; 3890 <bt_hci_unref@@Base+0x1914>
    3800:	push	{r4, r5, r6, r7, lr}
    3804:	mov	r5, r0
    3808:	ldr	r0, [pc, #132]	; 3894 <bt_hci_unref@@Base+0x1918>
    380c:	add	r3, pc, r3
    3810:	sub	sp, sp, #100	; 0x64
    3814:	mov	r6, r1
    3818:	ldr	r4, [r3, r0]
    381c:	ldr	r2, [sp, #120]	; 0x78
    3820:	ldr	r3, [r4]
    3824:	cmp	r2, #0
    3828:	cmpne	r5, #0
    382c:	str	r3, [sp, #92]	; 0x5c
    3830:	bne	3854 <bt_hci_unref@@Base+0x18d8>
    3834:	ldr	r2, [sp, #92]	; 0x5c
    3838:	ldr	r3, [r4]
    383c:	cmp	r2, r3
    3840:	bne	388c <bt_hci_unref@@Base+0x1910>
    3844:	add	sp, sp, #100	; 0x64
    3848:	pop	{r4, r5, r6, r7, lr}
    384c:	add	sp, sp, #8
    3850:	bx	lr
    3854:	add	r7, sp, #12
    3858:	mov	r1, #78	; 0x4e
    385c:	add	ip, sp, #124	; 0x7c
    3860:	str	r2, [sp]
    3864:	mov	r3, r1
    3868:	mov	r0, r7
    386c:	mov	r2, #1
    3870:	str	ip, [sp, #4]
    3874:	str	ip, [sp, #8]
    3878:	bl	c98 <__vsnprintf_chk@plt>
    387c:	mov	r0, r7
    3880:	mov	r1, r6
    3884:	blx	r5
    3888:	b	3834 <bt_hci_unref@@Base+0x18b8>
    388c:	bl	cb0 <__stack_chk_fail@plt>
    3890:	strdeq	r1, [r1], -ip
    3894:	andeq	r0, r0, r8, asr #1
    3898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    389c:	sub	sp, sp, #92	; 0x5c
    38a0:	ldr	ip, [pc, #352]	; 3a08 <bt_hci_unref@@Base+0x1a8c>
    38a4:	cmp	r2, #0
    38a8:	cmpne	r3, #0
    38ac:	str	r3, [sp, #4]
    38b0:	mov	sl, r2
    38b4:	ldr	r5, [pc, #336]	; 3a0c <bt_hci_unref@@Base+0x1a90>
    38b8:	add	ip, pc, ip
    38bc:	ldr	r3, [sp, #128]	; 0x80
    38c0:	movne	r4, #0
    38c4:	moveq	r4, #1
    38c8:	mov	r2, ip
    38cc:	mov	fp, r1
    38d0:	str	r3, [sp, #12]
    38d4:	ldr	r5, [ip, r5]
    38d8:	ldr	r2, [r5]
    38dc:	str	r5, [sp, #8]
    38e0:	str	r2, [sp, #84]	; 0x54
    38e4:	beq	39e8 <bt_hci_unref@@Base+0x1a6c>
    38e8:	add	r6, sp, #88	; 0x58
    38ec:	ldr	r7, [pc, #284]	; 3a10 <bt_hci_unref@@Base+0x1a94>
    38f0:	mov	r5, r4
    38f4:	mov	r9, #32
    38f8:	strb	r0, [r6, #-72]!	; 0xffffffb8
    38fc:	bl	d70 <__ctype_b_loc@plt>
    3900:	add	r7, pc, r7
    3904:	mov	r8, r0
    3908:	b	3914 <bt_hci_unref@@Base+0x1998>
    390c:	cmp	r4, sl
    3910:	beq	398c <bt_hci_unref@@Base+0x1a10>
    3914:	ldrb	r3, [fp, r4]
    3918:	add	r0, sp, #88	; 0x58
    391c:	add	r1, r5, r5, lsl #1
    3920:	add	ip, r0, r5
    3924:	and	r2, r3, #15
    3928:	add	r1, r0, r1
    392c:	ldrb	r0, [r7, r3, lsr #4]
    3930:	add	r4, r4, #1
    3934:	ldrb	r5, [r7, r2]
    3938:	lsl	r2, r3, #1
    393c:	strb	r9, [r1, #-71]	; 0xffffffb9
    3940:	strb	r0, [r1, #-70]	; 0xffffffba
    3944:	strb	r5, [r1, #-69]	; 0xffffffbb
    3948:	ldr	r1, [r8]
    394c:	ldrh	r2, [r1, r2]
    3950:	tst	r2, #16384	; 0x4000
    3954:	moveq	r3, #46	; 0x2e
    3958:	ands	r5, r4, #15
    395c:	strb	r3, [ip, #-21]	; 0xffffffeb
    3960:	bne	390c <bt_hci_unref@@Base+0x1990>
    3964:	strb	r9, [sp, #65]	; 0x41
    3968:	mov	r0, r6
    396c:	strb	r9, [sp, #66]	; 0x42
    3970:	ldr	r1, [sp, #12]
    3974:	strb	r5, [sp, #83]	; 0x53
    3978:	ldr	r3, [sp, #4]
    397c:	blx	r3
    3980:	cmp	r4, sl
    3984:	strb	r9, [sp, #16]
    3988:	bne	3914 <bt_hci_unref@@Base+0x1998>
    398c:	cmp	r5, #0
    3990:	beq	39e8 <bt_hci_unref@@Base+0x1a6c>
    3994:	add	r0, sp, #16
    3998:	add	r3, r5, r5, lsl #1
    399c:	add	r5, r5, #50	; 0x32
    39a0:	add	r3, r0, r3
    39a4:	add	r5, r0, r5
    39a8:	add	ip, sp, #64	; 0x40
    39ac:	mov	r2, #32
    39b0:	strb	r2, [r3, #1]
    39b4:	mov	r1, #32
    39b8:	strb	r2, [r3, #2]
    39bc:	strb	r2, [r3, #3]!
    39c0:	cmp	r3, ip
    39c4:	strb	r2, [r5, #1]!
    39c8:	bne	39b0 <bt_hci_unref@@Base+0x1a34>
    39cc:	mov	r3, #0
    39d0:	strb	r1, [sp, #65]	; 0x41
    39d4:	strb	r1, [sp, #66]	; 0x42
    39d8:	strb	r3, [sp, #83]	; 0x53
    39dc:	ldr	r1, [sp, #12]
    39e0:	ldr	r3, [sp, #4]
    39e4:	blx	r3
    39e8:	ldr	r0, [sp, #8]
    39ec:	ldr	r2, [sp, #84]	; 0x54
    39f0:	ldr	r3, [r0]
    39f4:	cmp	r2, r3
    39f8:	bne	3a04 <bt_hci_unref@@Base+0x1a88>
    39fc:	add	sp, sp, #92	; 0x5c
    3a00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3a04:	bl	cb0 <__stack_chk_fail@plt>
    3a08:	andeq	r1, r1, r0, asr r6
    3a0c:	andeq	r0, r0, r8, asr #1
    3a10:	ldrdeq	r0, [r0], -r4
    3a14:	ldr	r3, [pc, #164]	; 3ac0 <bt_hci_unref@@Base+0x1b44>
    3a18:	mov	r2, #1
    3a1c:	ldr	ip, [pc, #160]	; 3ac4 <bt_hci_unref@@Base+0x1b48>
    3a20:	add	r3, pc, r3
    3a24:	push	{r4, r5, lr}
    3a28:	sub	sp, sp, #4160	; 0x1040
    3a2c:	ldr	r4, [r3, ip]
    3a30:	sub	sp, sp, #52	; 0x34
    3a34:	ldr	lr, [pc, #140]	; 3ac8 <bt_hci_unref@@Base+0x1b4c>
    3a38:	add	r5, sp, #108	; 0x6c
    3a3c:	str	r1, [sp, #8]
    3a40:	mov	r1, #4096	; 0x1000
    3a44:	str	r0, [sp, #4]
    3a48:	add	lr, pc, lr
    3a4c:	ldr	ip, [r4]
    3a50:	mov	r3, r1
    3a54:	str	lr, [sp]
    3a58:	add	lr, sp, #8192	; 0x2000
    3a5c:	mov	r0, r5
    3a60:	str	ip, [lr, #-3988]	; 0xfffff06c
    3a64:	bl	e30 <__snprintf_chk@plt>
    3a68:	mov	r1, r5
    3a6c:	add	r5, sp, #16
    3a70:	mov	r0, #3
    3a74:	mov	r2, r5
    3a78:	bl	e00 <__lxstat@plt>
    3a7c:	cmp	r0, #0
    3a80:	movne	r0, #0
    3a84:	bne	3a9c <bt_hci_unref@@Base+0x1b20>
    3a88:	ldr	r0, [r5, #16]
    3a8c:	and	r0, r0, #61440	; 0xf000
    3a90:	cmp	r0, #16384	; 0x4000
    3a94:	moveq	r0, #4
    3a98:	movne	r0, #0
    3a9c:	add	r3, sp, #8192	; 0x2000
    3aa0:	ldr	r2, [r3, #-3988]	; 0xfffff06c
    3aa4:	ldr	r3, [r4]
    3aa8:	cmp	r2, r3
    3aac:	bne	3abc <bt_hci_unref@@Base+0x1b40>
    3ab0:	add	sp, sp, #4160	; 0x1040
    3ab4:	add	sp, sp, #52	; 0x34
    3ab8:	pop	{r4, r5, pc}
    3abc:	bl	cb0 <__stack_chk_fail@plt>
    3ac0:	andeq	r1, r1, r8, ror #9
    3ac4:	andeq	r0, r0, r8, asr #1
    3ac8:	andeq	r0, r0, r0, asr #11
    3acc:	ldr	ip, [r0]
    3ad0:	mvn	r2, ip
    3ad4:	rbit	r3, r2
    3ad8:	cmp	r2, #0
    3adc:	clz	r3, r3
    3ae0:	mvneq	r3, #0
    3ae4:	add	r3, r3, #1
    3ae8:	uxtb	r3, r3
    3aec:	rsbs	r2, r3, #1
    3af0:	movcc	r2, #0
    3af4:	cmp	r3, r1
    3af8:	movls	r1, r2
    3afc:	orrhi	r1, r2, #1
    3b00:	cmp	r1, #0
    3b04:	subeq	r2, r3, #1
    3b08:	moveq	r1, #1
    3b0c:	movne	r3, #0
    3b10:	orreq	ip, ip, r1, lsl r2
    3b14:	streq	ip, [r0]
    3b18:	mov	r0, r3
    3b1c:	bx	lr
    3b20:	cmp	r1, #0
    3b24:	subne	r1, r1, #1
    3b28:	ldrne	r3, [r0]
    3b2c:	movne	r2, #1
    3b30:	bicne	r1, r3, r2, lsl r1
    3b34:	strne	r1, [r0]
    3b38:	bx	lr

00003b3c <__libc_csu_init@@Base>:
    3b3c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    3b40:	mov	r7, r0
    3b44:	ldr	r6, [pc, #76]	; 3b98 <__libc_csu_init@@Base+0x5c>
    3b48:	mov	r8, r1
    3b4c:	ldr	r5, [pc, #72]	; 3b9c <__libc_csu_init@@Base+0x60>
    3b50:	mov	r9, r2
    3b54:	add	r6, pc, r6
    3b58:	bl	c0c <cfmakeraw@plt-0x20>
    3b5c:	add	r5, pc, r5
    3b60:	rsb	r6, r5, r6
    3b64:	asrs	r6, r6, #2
    3b68:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    3b6c:	sub	r5, r5, #4
    3b70:	mov	r4, #0
    3b74:	add	r4, r4, #1
    3b78:	ldr	r3, [r5, #4]!
    3b7c:	mov	r0, r7
    3b80:	mov	r1, r8
    3b84:	mov	r2, r9
    3b88:	blx	r3
    3b8c:	cmp	r4, r6
    3b90:	bne	3b74 <__libc_csu_init@@Base+0x38>
    3b94:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    3b98:			; <UNDEFINED> instruction: 0x000111b8
    3b9c:	andeq	r1, r1, ip, lsr #3

00003ba0 <__libc_csu_fini@@Base>:
    3ba0:	bx	lr

Disassembly of section .fini:

00003ba4 <.fini>:
    3ba4:	push	{r3, lr}
    3ba8:	pop	{r3, pc}
