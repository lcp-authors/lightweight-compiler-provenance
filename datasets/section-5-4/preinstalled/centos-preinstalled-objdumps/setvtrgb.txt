
centos-preinstalled/setvtrgb:     file format elf32-littlearm


Disassembly of section .init:

0001080c <.init>:
   1080c:	push	{r3, lr}
   10810:	bl	10b50 <close@plt+0x204>
   10814:	pop	{r3, pc}

Disassembly of section .plt:

00010818 <calloc@plt-0x14>:
   10818:	push	{lr}		; (str lr, [sp, #-4]!)
   1081c:	ldr	lr, [pc, #4]	; 10828 <calloc@plt-0x4>
   10820:	add	lr, pc, lr
   10824:	ldr	pc, [lr, #8]!
   10828:	ldrdeq	r1, [r1], -r8

0001082c <calloc@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2008]!	; 0x7d8

00010838 <__isoc99_fscanf@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2000]!	; 0x7d0

00010844 <fopen@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #1992]!	; 0x7c8

00010850 <free@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #1984]!	; 0x7c0

0001085c <dcgettext@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #1976]!	; 0x7b8

00010868 <__stack_chk_fail@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #1968]!	; 0x7b0

00010874 <textdomain@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #69632	; 0x11000
   1087c:	ldr	pc, [ip, #1960]!	; 0x7a8

00010880 <ioctl@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #69632	; 0x11000
   10888:	ldr	pc, [ip, #1952]!	; 0x7a0

0001088c <error@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #1944]!	; 0x798

00010898 <__libc_start_main@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1936]!	; 0x790

000108a4 <__gmon_start__@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1928]!	; 0x788

000108b0 <open@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1920]!	; 0x780

000108bc <exit@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1912]!	; 0x778

000108c8 <getopt@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1904]!	; 0x770

000108d4 <__errno_location@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1896]!	; 0x768

000108e0 <fgetc@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1888]!	; 0x760

000108ec <__printf_chk@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1880]!	; 0x758

000108f8 <__fprintf_chk@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1872]!	; 0x750

00010904 <fclose@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1864]!	; 0x748

00010910 <setlocale@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1856]!	; 0x740

0001091c <strrchr@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1848]!	; 0x738

00010928 <bindtextdomain@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1840]!	; 0x730

00010934 <isatty@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1832]!	; 0x728

00010940 <abort@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1824]!	; 0x720

0001094c <close@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1816]!	; 0x718

Disassembly of section .text:

00010958 <.text>:
   10958:	push	{r4, r5, r6, lr}
   1095c:	mov	r5, r1
   10960:	ldr	r4, [r1]
   10964:	mov	r6, r0
   10968:	mov	r1, #47	; 0x2f
   1096c:	mov	r0, r4
   10970:	bl	1091c <strrchr@plt>
   10974:	movw	r1, #4860	; 0x12fc
   10978:	movt	r1, #1
   1097c:	cmp	r0, #0
   10980:	addne	r3, r0, #1
   10984:	mov	r0, #6
   10988:	moveq	r3, r4
   1098c:	movw	r4, #8388	; 0x20c4
   10990:	movt	r4, #2
   10994:	str	r3, [r4]
   10998:	bl	10910 <setlocale@plt>
   1099c:	movw	r0, #4872	; 0x1308
   109a0:	movw	r1, #4876	; 0x130c
   109a4:	movt	r0, #1
   109a8:	movt	r1, #1
   109ac:	bl	10928 <bindtextdomain@plt>
   109b0:	movw	r0, #4872	; 0x1308
   109b4:	movt	r0, #1
   109b8:	bl	10874 <textdomain@plt>
   109bc:	movw	r2, #4920	; 0x1338
   109c0:	mov	r0, r6
   109c4:	movt	r2, #1
   109c8:	mov	r1, r5
   109cc:	bl	108c8 <getopt@plt>
   109d0:	cmn	r0, #1
   109d4:	beq	10a24 <close@plt+0xd8>
   109d8:	cmp	r0, #86	; 0x56
   109dc:	beq	109f0 <close@plt+0xa4>
   109e0:	cmp	r0, #104	; 0x68
   109e4:	bne	109bc <close@plt+0x70>
   109e8:	mov	r0, #0
   109ec:	bl	10c48 <close@plt+0x2fc>
   109f0:	mov	r2, #5
   109f4:	movw	r1, #4896	; 0x1320
   109f8:	mov	r0, #0
   109fc:	movt	r1, #1
   10a00:	bl	1085c <dcgettext@plt>
   10a04:	ldr	r2, [r4]
   10a08:	movw	r3, #4908	; 0x132c
   10a0c:	movt	r3, #1
   10a10:	mov	r1, r0
   10a14:	mov	r0, #1
   10a18:	bl	108ec <__printf_chk@plt>
   10a1c:	mov	r0, #0
   10a20:	bl	108bc <exit@plt>
   10a24:	movw	r3, #8368	; 0x20b0
   10a28:	movt	r3, #2
   10a2c:	ldr	r3, [r3]
   10a30:	cmp	r3, r6
   10a34:	beq	10af4 <close@plt+0x1a8>
   10a38:	ldr	r4, [r5, r3, lsl #2]
   10a3c:	ldrb	r3, [r4]
   10a40:	cmp	r3, #118	; 0x76
   10a44:	beq	10a94 <close@plt+0x148>
   10a48:	cmp	r3, #45	; 0x2d
   10a4c:	bne	10ac8 <close@plt+0x17c>
   10a50:	ldrb	r3, [r4, #1]
   10a54:	cmp	r3, #0
   10a58:	bne	10ac8 <close@plt+0x17c>
   10a5c:	movw	r3, #8376	; 0x20b8
   10a60:	movt	r3, #2
   10a64:	movw	r1, #4924	; 0x133c
   10a68:	movt	r1, #1
   10a6c:	ldr	r0, [r3]
   10a70:	bl	10c9c <close@plt+0x350>
   10a74:	movw	r4, #8384	; 0x20c0
   10a78:	movt	r4, #2
   10a7c:	ldr	r0, [r4]
   10a80:	bl	10e34 <close@plt+0x4e8>
   10a84:	ldr	r0, [r4]
   10a88:	bl	10850 <free@plt>
   10a8c:	mov	r0, #0
   10a90:	pop	{r4, r5, r6, pc}
   10a94:	ldrb	r3, [r4, #1]
   10a98:	cmp	r3, #103	; 0x67
   10a9c:	bne	10ac8 <close@plt+0x17c>
   10aa0:	ldrb	r3, [r4, #2]
   10aa4:	cmp	r3, #97	; 0x61
   10aa8:	bne	10ac8 <close@plt+0x17c>
   10aac:	ldrb	r3, [r4, #3]
   10ab0:	cmp	r3, #0
   10ab4:	bne	10ac8 <close@plt+0x17c>
   10ab8:	movw	r0, #8312	; 0x2078
   10abc:	movt	r0, #2
   10ac0:	bl	10e34 <close@plt+0x4e8>
   10ac4:	b	10a8c <close@plt+0x140>
   10ac8:	movw	r1, #4932	; 0x1344
   10acc:	mov	r0, r4
   10ad0:	movt	r1, #1
   10ad4:	bl	10844 <fopen@plt>
   10ad8:	subs	r5, r0, #0
   10adc:	beq	10afc <close@plt+0x1b0>
   10ae0:	mov	r1, r4
   10ae4:	bl	10c9c <close@plt+0x350>
   10ae8:	mov	r0, r5
   10aec:	bl	10904 <fclose@plt>
   10af0:	b	10a74 <close@plt+0x128>
   10af4:	mov	r0, #1
   10af8:	bl	10c48 <close@plt+0x2fc>
   10afc:	bl	108d4 <__errno_location@plt>
   10b00:	movw	r2, #4936	; 0x1348
   10b04:	movt	r2, #1
   10b08:	ldr	r1, [r0]
   10b0c:	mov	r0, #1
   10b10:	bl	1088c <error@plt>
   10b14:	mov	fp, #0
   10b18:	mov	lr, #0
   10b1c:	pop	{r1}		; (ldr r1, [sp], #4)
   10b20:	mov	r2, sp
   10b24:	push	{r2}		; (str r2, [sp, #-4]!)
   10b28:	push	{r0}		; (str r0, [sp, #-4]!)
   10b2c:	ldr	ip, [pc, #16]	; 10b44 <close@plt+0x1f8>
   10b30:	push	{ip}		; (str ip, [sp, #-4]!)
   10b34:	ldr	r0, [pc, #12]	; 10b48 <close@plt+0x1fc>
   10b38:	ldr	r3, [pc, #12]	; 10b4c <close@plt+0x200>
   10b3c:	bl	10898 <__libc_start_main@plt>
   10b40:	bl	10940 <abort@plt>
   10b44:	andeq	r1, r1, ip, lsr #1
   10b48:	andeq	r0, r1, r8, asr r9
   10b4c:	andeq	r1, r1, r8, asr #32
   10b50:	ldr	r3, [pc, #20]	; 10b6c <close@plt+0x220>
   10b54:	ldr	r2, [pc, #20]	; 10b70 <close@plt+0x224>
   10b58:	add	r3, pc, r3
   10b5c:	ldr	r2, [r3, r2]
   10b60:	cmp	r2, #0
   10b64:	bxeq	lr
   10b68:	b	108a4 <__gmon_start__@plt>
   10b6c:	andeq	r1, r1, r0, lsr #9
   10b70:	andeq	r0, r0, r0, ror r0
   10b74:	push	{r3, lr}
   10b78:	movw	r0, #8360	; 0x20a8
   10b7c:	ldr	r3, [pc, #36]	; 10ba8 <close@plt+0x25c>
   10b80:	movt	r0, #2
   10b84:	rsb	r3, r0, r3
   10b88:	cmp	r3, #6
   10b8c:	popls	{r3, pc}
   10b90:	movw	r3, #0
   10b94:	movt	r3, #0
   10b98:	cmp	r3, #0
   10b9c:	popeq	{r3, pc}
   10ba0:	blx	r3
   10ba4:	pop	{r3, pc}
   10ba8:	andeq	r2, r2, fp, lsr #1
   10bac:	push	{r3, lr}
   10bb0:	movw	r0, #8360	; 0x20a8
   10bb4:	movw	r3, #8360	; 0x20a8
   10bb8:	movt	r0, #2
   10bbc:	movt	r3, #2
   10bc0:	rsb	r3, r0, r3
   10bc4:	asr	r3, r3, #2
   10bc8:	add	r3, r3, r3, lsr #31
   10bcc:	asrs	r1, r3, #1
   10bd0:	popeq	{r3, pc}
   10bd4:	movw	r2, #0
   10bd8:	movt	r2, #0
   10bdc:	cmp	r2, #0
   10be0:	popeq	{r3, pc}
   10be4:	blx	r2
   10be8:	pop	{r3, pc}
   10bec:	push	{r4, lr}
   10bf0:	movw	r4, #8380	; 0x20bc
   10bf4:	movt	r4, #2
   10bf8:	ldrb	r3, [r4]
   10bfc:	cmp	r3, #0
   10c00:	popne	{r4, pc}
   10c04:	bl	10b74 <close@plt+0x228>
   10c08:	mov	r3, #1
   10c0c:	strb	r3, [r4]
   10c10:	pop	{r4, pc}
   10c14:	movw	r0, #7940	; 0x1f04
   10c18:	movt	r0, #2
   10c1c:	push	{r3, lr}
   10c20:	ldr	r3, [r0]
   10c24:	cmp	r3, #0
   10c28:	beq	10c40 <close@plt+0x2f4>
   10c2c:	movw	r3, #0
   10c30:	movt	r3, #0
   10c34:	cmp	r3, #0
   10c38:	beq	10c40 <close@plt+0x2f4>
   10c3c:	blx	r3
   10c40:	pop	{r3, lr}
   10c44:	b	10bac <close@plt+0x260>
   10c48:	movw	r3, #8372	; 0x20b4
   10c4c:	movt	r3, #2
   10c50:	push	{r4, r5, lr}
   10c54:	mov	r2, #5
   10c58:	sub	sp, sp, #12
   10c5c:	mov	r4, r0
   10c60:	movw	r1, #4288	; 0x10c0
   10c64:	mov	r0, #0
   10c68:	movt	r1, #1
   10c6c:	ldr	r5, [r3]
   10c70:	bl	1085c <dcgettext@plt>
   10c74:	movw	r3, #8388	; 0x20c4
   10c78:	movt	r3, #2
   10c7c:	mov	r1, #1
   10c80:	ldr	r3, [r3]
   10c84:	str	r3, [sp]
   10c88:	mov	r2, r0
   10c8c:	mov	r0, r5
   10c90:	bl	108f8 <__fprintf_chk@plt>
   10c94:	mov	r0, r4
   10c98:	bl	108bc <exit@plt>
   10c9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ca0:	movw	sl, #8360	; 0x20a8
   10ca4:	movt	sl, #2
   10ca8:	sub	sp, sp, #20
   10cac:	mov	r7, r0
   10cb0:	mov	fp, r1
   10cb4:	ldr	r3, [sl]
   10cb8:	mov	r0, #48	; 0x30
   10cbc:	mov	r1, #1
   10cc0:	movw	r8, #8384	; 0x20c0
   10cc4:	movt	r8, #2
   10cc8:	str	r3, [sp, #12]
   10ccc:	bl	1082c <calloc@plt>
   10cd0:	cmp	r0, #0
   10cd4:	str	r0, [r8]
   10cd8:	beq	10e0c <close@plt+0x4c0>
   10cdc:	mov	r9, #0
   10ce0:	mov	r5, r9
   10ce4:	mov	r4, #0
   10ce8:	b	10d00 <close@plt+0x3b4>
   10cec:	bl	108e0 <fgetc@plt>
   10cf0:	cmp	r0, #44	; 0x2c
   10cf4:	bne	10dc8 <close@plt+0x47c>
   10cf8:	add	r4, r4, #1
   10cfc:	add	r5, r5, #3
   10d00:	movw	r1, #4664	; 0x1238
   10d04:	mov	r0, r7
   10d08:	movt	r1, #1
   10d0c:	add	r2, sp, #8
   10d10:	bl	10838 <__isoc99_fscanf@plt>
   10d14:	cmp	r0, #1
   10d18:	mov	r6, r0
   10d1c:	bne	10d70 <close@plt+0x424>
   10d20:	ldr	r3, [r8]
   10d24:	cmp	r4, #15
   10d28:	ldr	r2, [sp, #8]
   10d2c:	mov	r0, r7
   10d30:	strb	r2, [r3, r5]
   10d34:	bne	10cec <close@plt+0x3a0>
   10d38:	bl	108e0 <fgetc@plt>
   10d3c:	cmn	r0, #1
   10d40:	beq	10df8 <close@plt+0x4ac>
   10d44:	cmp	r0, #10
   10d48:	bne	10e24 <close@plt+0x4d8>
   10d4c:	add	r9, r9, #1
   10d50:	cmp	r9, #3
   10d54:	bne	10ce0 <close@plt+0x394>
   10d58:	ldr	r2, [sp, #12]
   10d5c:	ldr	r3, [sl]
   10d60:	cmp	r2, r3
   10d64:	bne	10e08 <close@plt+0x4bc>
   10d68:	add	sp, sp, #20
   10d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d70:	cmn	r0, #1
   10d74:	beq	10db0 <close@plt+0x464>
   10d78:	mov	r2, #5
   10d7c:	movw	r1, #4676	; 0x1244
   10d80:	mov	r0, #0
   10d84:	movt	r1, #1
   10d88:	bl	1085c <dcgettext@plt>
   10d8c:	add	r9, r9, #1
   10d90:	add	r4, r4, #1
   10d94:	str	r9, [sp]
   10d98:	str	r4, [sp, #4]
   10d9c:	mov	r3, fp
   10da0:	mov	r1, #0
   10da4:	mov	r2, r0
   10da8:	mov	r0, #1
   10dac:	bl	1088c <error@plt>
   10db0:	bl	108d4 <__errno_location@plt>
   10db4:	movw	r2, #4668	; 0x123c
   10db8:	movt	r2, #1
   10dbc:	ldr	r1, [r0]
   10dc0:	mov	r0, #1
   10dc4:	bl	1088c <error@plt>
   10dc8:	movw	r1, #4728	; 0x1278
   10dcc:	movt	r1, #1
   10dd0:	mov	r0, #0
   10dd4:	mov	r2, #5
   10dd8:	add	r9, r9, #1
   10ddc:	bl	1085c <dcgettext@plt>
   10de0:	str	r9, [sp]
   10de4:	mov	r3, fp
   10de8:	mov	r1, #0
   10dec:	mov	r2, r0
   10df0:	mov	r0, r6
   10df4:	bl	1088c <error@plt>
   10df8:	movw	r1, #4784	; 0x12b0
   10dfc:	mov	r0, #0
   10e00:	movt	r1, #1
   10e04:	b	10dd4 <close@plt+0x488>
   10e08:	bl	10868 <__stack_chk_fail@plt>
   10e0c:	bl	108d4 <__errno_location@plt>
   10e10:	movw	r2, #4656	; 0x1230
   10e14:	movt	r2, #1
   10e18:	ldr	r1, [r0]
   10e1c:	mov	r0, #1
   10e20:	bl	1088c <error@plt>
   10e24:	movw	r1, #4828	; 0x12dc
   10e28:	mov	r0, #0
   10e2c:	movt	r1, #1
   10e30:	b	10dd4 <close@plt+0x488>
   10e34:	push	{r3, r4, r5, lr}
   10e38:	mov	r4, r0
   10e3c:	mov	r0, #0
   10e40:	bl	10f40 <close@plt+0x5f4>
   10e44:	mov	r2, r4
   10e48:	movw	r1, #19313	; 0x4b71
   10e4c:	mov	r5, r0
   10e50:	bl	10880 <ioctl@plt>
   10e54:	cmn	r0, #1
   10e58:	beq	10e68 <close@plt+0x51c>
   10e5c:	mov	r0, r5
   10e60:	pop	{r3, r4, r5, lr}
   10e64:	b	1094c <close@plt>
   10e68:	bl	108d4 <__errno_location@plt>
   10e6c:	movw	r2, #4864	; 0x1300
   10e70:	movt	r2, #1
   10e74:	ldr	r1, [r0]
   10e78:	mov	r0, #1
   10e7c:	bl	1088c <error@plt>
   10e80:	push	{r4, lr}
   10e84:	mov	r1, #2
   10e88:	mov	r4, r0
   10e8c:	bl	108b0 <open@plt>
   10e90:	cmp	r0, #0
   10e94:	popge	{r4, pc}
   10e98:	mov	r0, r4
   10e9c:	mov	r1, #1
   10ea0:	bl	108b0 <open@plt>
   10ea4:	cmp	r0, #0
   10ea8:	popge	{r4, pc}
   10eac:	mov	r0, r4
   10eb0:	mov	r1, #0
   10eb4:	bl	108b0 <open@plt>
   10eb8:	orr	r0, r0, r0, asr #31
   10ebc:	pop	{r4, pc}
   10ec0:	push	{r4, r5, lr}
   10ec4:	movw	r4, #8360	; 0x20a8
   10ec8:	movt	r4, #2
   10ecc:	sub	sp, sp, #12
   10ed0:	mov	r2, #0
   10ed4:	mov	r5, r0
   10ed8:	ldr	r3, [r4]
   10edc:	strb	r2, [sp, #3]
   10ee0:	str	r3, [sp, #4]
   10ee4:	bl	10934 <isatty@plt>
   10ee8:	cmp	r0, #0
   10eec:	bne	10f0c <close@plt+0x5c0>
   10ef0:	mov	r0, #0
   10ef4:	ldr	r2, [sp, #4]
   10ef8:	ldr	r3, [r4]
   10efc:	cmp	r2, r3
   10f00:	bne	10f3c <close@plt+0x5f0>
   10f04:	add	sp, sp, #12
   10f08:	pop	{r4, r5, pc}
   10f0c:	mov	r0, r5
   10f10:	movw	r1, #19251	; 0x4b33
   10f14:	add	r2, sp, #3
   10f18:	bl	10880 <ioctl@plt>
   10f1c:	cmp	r0, #0
   10f20:	bne	10ef0 <close@plt+0x5a4>
   10f24:	ldrb	r0, [sp, #3]
   10f28:	sub	r0, r0, #1
   10f2c:	cmp	r0, #1
   10f30:	movhi	r0, #0
   10f34:	movls	r0, #1
   10f38:	b	10ef4 <close@plt+0x5a8>
   10f3c:	bl	10868 <__stack_chk_fail@plt>
   10f40:	push	{r3, r4, r5, lr}
   10f44:	subs	r4, r0, #0
   10f48:	beq	10f6c <close@plt+0x620>
   10f4c:	bl	10e80 <close@plt+0x534>
   10f50:	subs	r5, r0, #0
   10f54:	blt	1100c <close@plt+0x6c0>
   10f58:	bl	10ec0 <close@plt+0x574>
   10f5c:	cmp	r0, #0
   10f60:	mov	r0, r5
   10f64:	beq	11008 <close@plt+0x6bc>
   10f68:	pop	{r3, r4, r5, pc}
   10f6c:	movw	r4, #4944	; 0x1350
   10f70:	movw	r0, #4972	; 0x136c
   10f74:	movt	r4, #1
   10f78:	movt	r0, #1
   10f7c:	bl	10e80 <close@plt+0x534>
   10f80:	subs	r5, r0, #0
   10f84:	blt	10f9c <close@plt+0x650>
   10f88:	bl	10ec0 <close@plt+0x574>
   10f8c:	cmp	r0, #0
   10f90:	mov	r0, r5
   10f94:	bne	10ffc <close@plt+0x6b0>
   10f98:	bl	1094c <close@plt>
   10f9c:	ldr	r0, [r4, #4]!
   10fa0:	cmp	r0, #0
   10fa4:	bne	10f7c <close@plt+0x630>
   10fa8:	mov	r5, r0
   10fac:	mov	r0, r5
   10fb0:	bl	10ec0 <close@plt+0x574>
   10fb4:	cmp	r0, #0
   10fb8:	bne	11000 <close@plt+0x6b4>
   10fbc:	add	r5, r5, #1
   10fc0:	cmp	r5, #3
   10fc4:	bne	10fac <close@plt+0x660>
   10fc8:	movw	r3, #8372	; 0x20b4
   10fcc:	movt	r3, #2
   10fd0:	mov	r2, #5
   10fd4:	movw	r1, #5008	; 0x1390
   10fd8:	movt	r1, #1
   10fdc:	ldr	r4, [r3]
   10fe0:	bl	1085c <dcgettext@plt>
   10fe4:	mov	r1, #1
   10fe8:	mov	r2, r0
   10fec:	mov	r0, r4
   10ff0:	bl	108f8 <__fprintf_chk@plt>
   10ff4:	mov	r0, #1
   10ff8:	bl	108bc <exit@plt>
   10ffc:	pop	{r3, r4, r5, pc}
   11000:	mov	r0, r5
   11004:	pop	{r3, r4, r5, pc}
   11008:	bl	1094c <close@plt>
   1100c:	movw	r3, #8372	; 0x20b4
   11010:	movt	r3, #2
   11014:	mov	r2, #5
   11018:	movw	r1, #4988	; 0x137c
   1101c:	mov	r0, #0
   11020:	movt	r1, #1
   11024:	ldr	r5, [r3]
   11028:	bl	1085c <dcgettext@plt>
   1102c:	mov	r3, r4
   11030:	mov	r1, #1
   11034:	mov	r2, r0
   11038:	mov	r0, r5
   1103c:	bl	108f8 <__fprintf_chk@plt>
   11040:	mov	r0, #1
   11044:	bl	108bc <exit@plt>
   11048:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1104c:	mov	r7, r0
   11050:	ldr	r6, [pc, #76]	; 110a4 <close@plt+0x758>
   11054:	mov	r8, r1
   11058:	ldr	r5, [pc, #72]	; 110a8 <close@plt+0x75c>
   1105c:	mov	r9, r2
   11060:	add	r6, pc, r6
   11064:	bl	1080c <calloc@plt-0x20>
   11068:	add	r5, pc, r5
   1106c:	rsb	r6, r5, r6
   11070:	asrs	r6, r6, #2
   11074:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11078:	sub	r5, r5, #4
   1107c:	mov	r4, #0
   11080:	add	r4, r4, #1
   11084:	ldr	r3, [r5, #4]!
   11088:	mov	r0, r7
   1108c:	mov	r1, r8
   11090:	mov	r2, r9
   11094:	blx	r3
   11098:	cmp	r4, r6
   1109c:	bne	11080 <close@plt+0x734>
   110a0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   110a4:	muleq	r1, r8, lr
   110a8:	andeq	r0, r1, ip, lsl #29
   110ac:	bx	lr

Disassembly of section .fini:

000110b0 <.fini>:
   110b0:	push	{r3, lr}
   110b4:	pop	{r3, pc}
