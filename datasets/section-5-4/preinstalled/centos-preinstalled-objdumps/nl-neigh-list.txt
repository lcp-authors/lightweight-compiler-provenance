
centos-preinstalled/nl-neigh-list:     file format elf32-littlearm


Disassembly of section .init:

00010918 <.init>:
   10918:	push	{r3, lr}
   1091c:	bl	10c60 <nl_cli_link_alloc_cache_flags@plt+0x238>
   10920:	pop	{r3, pc}

Disassembly of section .plt:

00010924 <abort@plt-0x14>:
   10924:	push	{lr}		; (str lr, [sp, #-4]!)
   10928:	ldr	lr, [pc, #4]	; 10934 <abort@plt-0x4>
   1092c:	add	lr, pc, lr
   10930:	ldr	pc, [lr, #8]!
   10934:	andeq	r1, r1, ip, asr #13

00010938 <abort@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1740]!	; 0x6cc

00010944 <nl_cache_dump_filter@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1732]!	; 0x6c4

00010950 <__libc_start_main@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1724]!	; 0x6bc

0001095c <__gmon_start__@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1716]!	; 0x6b4

00010968 <nl_cli_print_version@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1708]!	; 0x6ac

00010974 <nl_cli_alloc_socket@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1700]!	; 0x6a4

00010980 <getopt_long@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1692]!	; 0x69c

0001098c <rtnl_neigh_alloc_cache_flags@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1684]!	; 0x694

00010998 <nl_cli_alloc_cache_flags@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1676]!	; 0x68c

000109a4 <nl_cli_parse_dumptype@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1668]!	; 0x684

000109b0 <nl_cli_neigh_parse_dst@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1660]!	; 0x67c

000109bc <nl_cli_neigh_parse_state@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1652]!	; 0x674

000109c8 <__stack_chk_fail@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1644]!	; 0x66c

000109d4 <puts@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1636]!	; 0x664

000109e0 <nl_cli_neigh_parse_lladdr@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1628]!	; 0x65c

000109ec <nl_cli_connect@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1620]!	; 0x654

000109f8 <nl_cli_neigh_alloc@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1612]!	; 0x64c

00010a04 <exit@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1604]!	; 0x644

00010a10 <nl_cli_neigh_parse_family@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1596]!	; 0x63c

00010a1c <nl_cli_neigh_parse_dev@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1588]!	; 0x634

00010a28 <nl_cli_link_alloc_cache_flags@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1580]!	; 0x62c

Disassembly of section .text:

00010a34 <.text>:
   10a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a38:	movw	r2, #8444	; 0x20fc
   10a3c:	movw	sl, #8440	; 0x20f8
   10a40:	movt	r2, #2
   10a44:	movt	sl, #2
   10a48:	mov	r7, r0
   10a4c:	ldr	r2, [r2]
   10a50:	sub	sp, sp, #92	; 0x5c
   10a54:	ldr	r0, [sl]
   10a58:	mov	r3, #0
   10a5c:	mov	r6, r1
   10a60:	str	r3, [sp, #32]
   10a64:	str	r2, [sp, #60]	; 0x3c
   10a68:	mov	r4, r3
   10a6c:	str	r3, [sp, #36]	; 0x24
   10a70:	movw	r8, #8448	; 0x2100
   10a74:	str	r3, [sp, #40]	; 0x28
   10a78:	movt	r8, #2
   10a7c:	str	r3, [sp, #44]	; 0x2c
   10a80:	add	r5, sp, #28
   10a84:	str	r3, [sp, #48]	; 0x30
   10a88:	movw	fp, #257	; 0x101
   10a8c:	str	r3, [sp, #52]	; 0x34
   10a90:	str	r3, [sp, #56]	; 0x38
   10a94:	str	r3, [sp, #64]	; 0x40
   10a98:	str	r3, [sp, #68]	; 0x44
   10a9c:	str	r3, [sp, #72]	; 0x48
   10aa0:	str	r3, [sp, #76]	; 0x4c
   10aa4:	str	r3, [sp, #80]	; 0x50
   10aa8:	str	r3, [sp, #12]
   10aac:	str	r0, [sp, #84]	; 0x54
   10ab0:	bl	10974 <nl_cli_alloc_socket@plt>
   10ab4:	ldr	r3, [sp, #12]
   10ab8:	mov	r1, r3
   10abc:	mov	r9, r0
   10ac0:	bl	109ec <nl_cli_connect@plt>
   10ac4:	mov	r0, r9
   10ac8:	mov	r1, #1
   10acc:	bl	10a28 <nl_cli_link_alloc_cache_flags@plt>
   10ad0:	mov	r2, #1
   10ad4:	movw	r1, #3536	; 0xdd0
   10ad8:	movw	r3, #2444	; 0x98c
   10adc:	movt	r1, #1
   10ae0:	movt	r3, #1
   10ae4:	str	r0, [sp, #16]
   10ae8:	mov	r0, r9
   10aec:	bl	10998 <nl_cli_alloc_cache_flags@plt>
   10af0:	str	r0, [sp, #20]
   10af4:	bl	109f8 <nl_cli_neigh_alloc@plt>
   10af8:	mov	r9, r0
   10afc:	str	r5, [sp]
   10b00:	movw	r2, #3548	; 0xddc
   10b04:	movw	r3, #8296	; 0x2068
   10b08:	movt	r2, #1
   10b0c:	movt	r3, #2
   10b10:	mov	r0, r7
   10b14:	mov	r1, r6
   10b18:	str	r4, [sp, #28]
   10b1c:	bl	10980 <getopt_long@plt>
   10b20:	cmn	r0, #1
   10b24:	beq	10bf4 <nl_cli_link_alloc_cache_flags@plt+0x1cc>
   10b28:	cmp	r0, #104	; 0x68
   10b2c:	beq	10bd0 <nl_cli_link_alloc_cache_flags@plt+0x1a8>
   10b30:	ble	10b64 <nl_cli_link_alloc_cache_flags@plt+0x13c>
   10b34:	cmp	r0, #118	; 0x76
   10b38:	beq	10ba4 <nl_cli_link_alloc_cache_flags@plt+0x17c>
   10b3c:	ble	10b8c <nl_cli_link_alloc_cache_flags@plt+0x164>
   10b40:	cmp	r0, fp
   10b44:	beq	10be4 <nl_cli_link_alloc_cache_flags@plt+0x1bc>
   10b48:	movw	r3, #258	; 0x102
   10b4c:	cmp	r0, r3
   10b50:	bne	10afc <nl_cli_link_alloc_cache_flags@plt+0xd4>
   10b54:	mov	r0, r9
   10b58:	ldr	r1, [r8]
   10b5c:	bl	109bc <nl_cli_neigh_parse_state@plt>
   10b60:	b	10afc <nl_cli_link_alloc_cache_flags@plt+0xd4>
   10b64:	cmp	r0, #100	; 0x64
   10b68:	beq	10bbc <nl_cli_link_alloc_cache_flags@plt+0x194>
   10b6c:	cmp	r0, #102	; 0x66
   10b70:	beq	10bac <nl_cli_link_alloc_cache_flags@plt+0x184>
   10b74:	cmp	r0, #97	; 0x61
   10b78:	bne	10afc <nl_cli_link_alloc_cache_flags@plt+0xd4>
   10b7c:	mov	r0, r9
   10b80:	ldr	r1, [r8]
   10b84:	bl	109b0 <nl_cli_neigh_parse_dst@plt>
   10b88:	b	10afc <nl_cli_link_alloc_cache_flags@plt+0xd4>
   10b8c:	cmp	r0, #108	; 0x6c
   10b90:	bne	10afc <nl_cli_link_alloc_cache_flags@plt+0xd4>
   10b94:	mov	r0, r9
   10b98:	ldr	r1, [r8]
   10b9c:	bl	109e0 <nl_cli_neigh_parse_lladdr@plt>
   10ba0:	b	10afc <nl_cli_link_alloc_cache_flags@plt+0xd4>
   10ba4:	bl	10968 <nl_cli_print_version@plt>
   10ba8:	b	10afc <nl_cli_link_alloc_cache_flags@plt+0xd4>
   10bac:	ldr	r0, [r8]
   10bb0:	bl	109a4 <nl_cli_parse_dumptype@plt>
   10bb4:	str	r0, [sp, #32]
   10bb8:	b	10afc <nl_cli_link_alloc_cache_flags@plt+0xd4>
   10bbc:	mov	r0, r9
   10bc0:	ldr	r1, [sp, #16]
   10bc4:	ldr	r2, [r8]
   10bc8:	bl	10a1c <nl_cli_neigh_parse_dev@plt>
   10bcc:	b	10afc <nl_cli_link_alloc_cache_flags@plt+0xd4>
   10bd0:	movw	r0, #3560	; 0xde8
   10bd4:	movt	r0, #1
   10bd8:	bl	109d4 <puts@plt>
   10bdc:	mov	r0, #0
   10be0:	bl	10a04 <exit@plt>
   10be4:	mov	r0, r9
   10be8:	ldr	r1, [r8]
   10bec:	bl	10a10 <nl_cli_neigh_parse_family@plt>
   10bf0:	b	10afc <nl_cli_link_alloc_cache_flags@plt+0xd4>
   10bf4:	ldr	r0, [sp, #20]
   10bf8:	mov	r2, r9
   10bfc:	add	r1, sp, #32
   10c00:	bl	10944 <nl_cache_dump_filter@plt>
   10c04:	ldr	r2, [sp, #84]	; 0x54
   10c08:	ldr	r3, [sl]
   10c0c:	mov	r0, #0
   10c10:	cmp	r2, r3
   10c14:	bne	10c20 <nl_cli_link_alloc_cache_flags@plt+0x1f8>
   10c18:	add	sp, sp, #92	; 0x5c
   10c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c20:	bl	109c8 <__stack_chk_fail@plt>
   10c24:	mov	fp, #0
   10c28:	mov	lr, #0
   10c2c:	pop	{r1}		; (ldr r1, [sp], #4)
   10c30:	mov	r2, sp
   10c34:	push	{r2}		; (str r2, [sp, #-4]!)
   10c38:	push	{r0}		; (str r0, [sp, #-4]!)
   10c3c:	ldr	ip, [pc, #16]	; 10c54 <nl_cli_link_alloc_cache_flags@plt+0x22c>
   10c40:	push	{ip}		; (str ip, [sp, #-4]!)
   10c44:	ldr	r0, [pc, #12]	; 10c58 <nl_cli_link_alloc_cache_flags@plt+0x230>
   10c48:	ldr	r3, [pc, #12]	; 10c5c <nl_cli_link_alloc_cache_flags@plt+0x234>
   10c4c:	bl	10950 <__libc_start_main@plt>
   10c50:	bl	10938 <abort@plt>
   10c54:			; <UNDEFINED> instruction: 0x00010dbc
   10c58:	andeq	r0, r1, r4, lsr sl
   10c5c:	andeq	r0, r1, r8, asr sp
   10c60:	ldr	r3, [pc, #20]	; 10c7c <nl_cli_link_alloc_cache_flags@plt+0x254>
   10c64:	ldr	r2, [pc, #20]	; 10c80 <nl_cli_link_alloc_cache_flags@plt+0x258>
   10c68:	add	r3, pc, r3
   10c6c:	ldr	r2, [r3, r2]
   10c70:	cmp	r2, #0
   10c74:	bxeq	lr
   10c78:	b	1095c <__gmon_start__@plt>
   10c7c:	muleq	r1, r0, r3
   10c80:	andeq	r0, r0, r0, rrx
   10c84:	push	{r3, lr}
   10c88:	movw	r0, #8440	; 0x20f8
   10c8c:	ldr	r3, [pc, #36]	; 10cb8 <nl_cli_link_alloc_cache_flags@plt+0x290>
   10c90:	movt	r0, #2
   10c94:	rsb	r3, r0, r3
   10c98:	cmp	r3, #6
   10c9c:	popls	{r3, pc}
   10ca0:	movw	r3, #0
   10ca4:	movt	r3, #0
   10ca8:	cmp	r3, #0
   10cac:	popeq	{r3, pc}
   10cb0:	blx	r3
   10cb4:	pop	{r3, pc}
   10cb8:	strdeq	r2, [r2], -fp
   10cbc:	push	{r3, lr}
   10cc0:	movw	r0, #8440	; 0x20f8
   10cc4:	movw	r3, #8440	; 0x20f8
   10cc8:	movt	r0, #2
   10ccc:	movt	r3, #2
   10cd0:	rsb	r3, r0, r3
   10cd4:	asr	r3, r3, #2
   10cd8:	add	r3, r3, r3, lsr #31
   10cdc:	asrs	r1, r3, #1
   10ce0:	popeq	{r3, pc}
   10ce4:	movw	r2, #0
   10ce8:	movt	r2, #0
   10cec:	cmp	r2, #0
   10cf0:	popeq	{r3, pc}
   10cf4:	blx	r2
   10cf8:	pop	{r3, pc}
   10cfc:	push	{r4, lr}
   10d00:	movw	r4, #8452	; 0x2104
   10d04:	movt	r4, #2
   10d08:	ldrb	r3, [r4]
   10d0c:	cmp	r3, #0
   10d10:	popne	{r4, pc}
   10d14:	bl	10c84 <nl_cli_link_alloc_cache_flags@plt+0x25c>
   10d18:	mov	r3, #1
   10d1c:	strb	r3, [r4]
   10d20:	pop	{r4, pc}
   10d24:	movw	r0, #7868	; 0x1ebc
   10d28:	movt	r0, #2
   10d2c:	push	{r3, lr}
   10d30:	ldr	r3, [r0]
   10d34:	cmp	r3, #0
   10d38:	beq	10d50 <nl_cli_link_alloc_cache_flags@plt+0x328>
   10d3c:	movw	r3, #0
   10d40:	movt	r3, #0
   10d44:	cmp	r3, #0
   10d48:	beq	10d50 <nl_cli_link_alloc_cache_flags@plt+0x328>
   10d4c:	blx	r3
   10d50:	pop	{r3, lr}
   10d54:	b	10cbc <nl_cli_link_alloc_cache_flags@plt+0x294>
   10d58:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10d5c:	mov	r7, r0
   10d60:	ldr	r6, [pc, #76]	; 10db4 <nl_cli_link_alloc_cache_flags@plt+0x38c>
   10d64:	mov	r8, r1
   10d68:	ldr	r5, [pc, #72]	; 10db8 <nl_cli_link_alloc_cache_flags@plt+0x390>
   10d6c:	mov	r9, r2
   10d70:	add	r6, pc, r6
   10d74:	bl	10918 <abort@plt-0x20>
   10d78:	add	r5, pc, r5
   10d7c:	rsb	r6, r5, r6
   10d80:	asrs	r6, r6, #2
   10d84:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10d88:	sub	r5, r5, #4
   10d8c:	mov	r4, #0
   10d90:	add	r4, r4, #1
   10d94:	ldr	r3, [r5, #4]!
   10d98:	mov	r0, r7
   10d9c:	mov	r1, r8
   10da0:	mov	r2, r9
   10da4:	blx	r3
   10da8:	cmp	r4, r6
   10dac:	bne	10d90 <nl_cli_link_alloc_cache_flags@plt+0x368>
   10db0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10db4:	andeq	r1, r1, r0, asr #2
   10db8:	andeq	r1, r1, r4, lsr r1
   10dbc:	bx	lr

Disassembly of section .fini:

00010dc0 <.fini>:
   10dc0:	push	{r3, lr}
   10dc4:	pop	{r3, pc}
