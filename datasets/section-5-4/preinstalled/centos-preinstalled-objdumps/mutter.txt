
centos-preinstalled/mutter:     file format elf32-littlearm


Disassembly of section .init:

00010c1c <_init@@Base>:
   10c1c:	push	{r3, lr}
   10c20:	bl	10df8 <exit@plt+0x108>
   10c24:	pop	{r3, pc}

Disassembly of section .plt:

00010c28 <g_print@plt-0x14>:
   10c28:	push	{lr}		; (str lr, [sp, #-4]!)
   10c2c:	ldr	lr, [pc, #4]	; 10c38 <_init@@Base+0x1c>
   10c30:	add	lr, pc, lr
   10c34:	ldr	pc, [lr, #8]!
   10c38:	andeq	r1, r1, r8, asr #7

00010c3c <g_print@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #69632	; 0x11000
   10c44:	ldr	pc, [ip, #968]!	; 0x3c8

00010c48 <g_dgettext@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #69632	; 0x11000
   10c50:	ldr	pc, [ip, #960]!	; 0x3c0

00010c54 <g_option_context_free@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #69632	; 0x11000
   10c5c:	ldr	pc, [ip, #952]!	; 0x3b8

00010c60 <g_option_context_parse@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #69632	; 0x11000
   10c68:	ldr	pc, [ip, #944]!	; 0x3b0

00010c6c <__stack_chk_fail@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #69632	; 0x11000
   10c74:	ldr	pc, [ip, #936]!	; 0x3a8

00010c78 <g_option_context_add_main_entries@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #69632	; 0x11000
   10c80:	ldr	pc, [ip, #928]!	; 0x3a0

00010c84 <__libc_start_main@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #69632	; 0x11000
   10c8c:	ldr	pc, [ip, #920]!	; 0x398

00010c90 <__gmon_start__@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #69632	; 0x11000
   10c98:	ldr	pc, [ip, #912]!	; 0x390

00010c9c <meta_get_option_context@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #69632	; 0x11000
   10ca4:	ldr	pc, [ip, #904]!	; 0x388

00010ca8 <meta_plugin_manager_load@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #69632	; 0x11000
   10cb0:	ldr	pc, [ip, #896]!	; 0x380

00010cb4 <meta_run@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #69632	; 0x11000
   10cbc:	ldr	pc, [ip, #888]!	; 0x378

00010cc0 <g_printerr@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #69632	; 0x11000
   10cc8:	ldr	pc, [ip, #880]!	; 0x370

00010ccc <meta_register_with_session@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #872]!	; 0x368

00010cd8 <abort@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #864]!	; 0x360

00010ce4 <meta_init@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #856]!	; 0x358

00010cf0 <exit@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #848]!	; 0x350

Disassembly of section .text:

00010cfc <.text>:
   10cfc:	push	{r4, r5, r6, lr}
   10d00:	movw	r4, #8368	; 0x20b0
   10d04:	movt	r4, #2
   10d08:	sub	sp, sp, #16
   10d0c:	mov	r3, #0
   10d10:	movw	r5, #8276	; 0x2054
   10d14:	ldr	r2, [r4]
   10d18:	movt	r5, #2
   10d1c:	str	r3, [sp, #8]
   10d20:	str	r1, [sp]
   10d24:	str	r2, [sp, #12]
   10d28:	str	r0, [sp, #4]
   10d2c:	bl	10c9c <meta_get_option_context@plt>
   10d30:	mov	r1, r5
   10d34:	movw	r2, #3992	; 0xf98
   10d38:	movt	r2, #1
   10d3c:	mov	r6, r0
   10d40:	bl	10c78 <g_option_context_add_main_entries@plt>
   10d44:	mov	r0, r6
   10d48:	add	r1, sp, #4
   10d4c:	mov	r2, sp
   10d50:	add	r3, sp, #8
   10d54:	bl	10c60 <g_option_context_parse@plt>
   10d58:	cmp	r0, #0
   10d5c:	beq	10da0 <exit@plt+0xb0>
   10d60:	mov	r0, r6
   10d64:	bl	10c54 <g_option_context_free@plt>
   10d68:	ldr	r0, [r5, #84]	; 0x54
   10d6c:	cmp	r0, #0
   10d70:	beq	10d78 <exit@plt+0x88>
   10d74:	bl	10ca8 <meta_plugin_manager_load@plt>
   10d78:	bl	10ce4 <meta_init@plt>
   10d7c:	bl	10ccc <meta_register_with_session@plt>
   10d80:	bl	10cb4 <meta_run@plt>
   10d84:	ldr	r2, [sp, #12]
   10d88:	ldr	r3, [r4]
   10d8c:	cmp	r2, r3
   10d90:	bne	10d9c <exit@plt+0xac>
   10d94:	add	sp, sp, #16
   10d98:	pop	{r4, r5, r6, pc}
   10d9c:	bl	10c6c <__stack_chk_fail@plt>
   10da0:	ldr	r3, [sp, #8]
   10da4:	movw	r0, #4236	; 0x108c
   10da8:	movt	r0, #1
   10dac:	ldr	r1, [r3, #8]
   10db0:	bl	10cc0 <g_printerr@plt>
   10db4:	mov	r0, #1
   10db8:	bl	10cf0 <exit@plt>
   10dbc:	mov	fp, #0
   10dc0:	mov	lr, #0
   10dc4:	pop	{r1}		; (ldr r1, [sp], #4)
   10dc8:	mov	r2, sp
   10dcc:	push	{r2}		; (str r2, [sp, #-4]!)
   10dd0:	push	{r0}		; (str r0, [sp, #-4]!)
   10dd4:	ldr	ip, [pc, #16]	; 10dec <exit@plt+0xfc>
   10dd8:	push	{ip}		; (str ip, [sp, #-4]!)
   10ddc:	ldr	r0, [pc, #12]	; 10df0 <exit@plt+0x100>
   10de0:	ldr	r3, [pc, #12]	; 10df4 <exit@plt+0x104>
   10de4:	bl	10c84 <__libc_start_main@plt>
   10de8:	bl	10cd8 <abort@plt>
   10dec:	andeq	r0, r1, r4, lsl #31
   10df0:	strdeq	r0, [r1], -ip
   10df4:	andeq	r0, r1, r0, lsr #30
   10df8:	ldr	r3, [pc, #20]	; 10e14 <exit@plt+0x124>
   10dfc:	ldr	r2, [pc, #20]	; 10e18 <exit@plt+0x128>
   10e00:	add	r3, pc, r3
   10e04:	ldr	r2, [r3, r2]
   10e08:	cmp	r2, #0
   10e0c:	bxeq	lr
   10e10:	b	10c90 <__gmon_start__@plt>
   10e14:	strdeq	r1, [r1], -r8
   10e18:	andeq	r0, r0, ip, asr #32
   10e1c:	push	{r3, lr}
   10e20:	movw	r0, #8364	; 0x20ac
   10e24:	ldr	r3, [pc, #36]	; 10e50 <exit@plt+0x160>
   10e28:	movt	r0, #2
   10e2c:	rsb	r3, r0, r3
   10e30:	cmp	r3, #6
   10e34:	popls	{r3, pc}
   10e38:	movw	r3, #0
   10e3c:	movt	r3, #0
   10e40:	cmp	r3, #0
   10e44:	popeq	{r3, pc}
   10e48:	blx	r3
   10e4c:	pop	{r3, pc}
   10e50:	andeq	r2, r2, pc, lsr #1
   10e54:	push	{r3, lr}
   10e58:	movw	r0, #8364	; 0x20ac
   10e5c:	movw	r3, #8364	; 0x20ac
   10e60:	movt	r0, #2
   10e64:	movt	r3, #2
   10e68:	rsb	r3, r0, r3
   10e6c:	asr	r3, r3, #2
   10e70:	add	r3, r3, r3, lsr #31
   10e74:	asrs	r1, r3, #1
   10e78:	popeq	{r3, pc}
   10e7c:	movw	r2, #0
   10e80:	movt	r2, #0
   10e84:	cmp	r2, #0
   10e88:	popeq	{r3, pc}
   10e8c:	blx	r2
   10e90:	pop	{r3, pc}
   10e94:	push	{r4, lr}
   10e98:	movw	r4, #8372	; 0x20b4
   10e9c:	movt	r4, #2
   10ea0:	ldrb	r3, [r4]
   10ea4:	cmp	r3, #0
   10ea8:	popne	{r4, pc}
   10eac:	bl	10e1c <exit@plt+0x12c>
   10eb0:	mov	r3, #1
   10eb4:	strb	r3, [r4]
   10eb8:	pop	{r4, pc}
   10ebc:	movw	r0, #7436	; 0x1d0c
   10ec0:	movt	r0, #2
   10ec4:	push	{r3, lr}
   10ec8:	ldr	r3, [r0]
   10ecc:	cmp	r3, #0
   10ed0:	beq	10ee8 <exit@plt+0x1f8>
   10ed4:	movw	r3, #0
   10ed8:	movt	r3, #0
   10edc:	cmp	r3, #0
   10ee0:	beq	10ee8 <exit@plt+0x1f8>
   10ee4:	blx	r3
   10ee8:	pop	{r3, lr}
   10eec:	b	10e54 <exit@plt+0x164>
   10ef0:	push	{r3, lr}
   10ef4:	movw	r0, #3992	; 0xf98
   10ef8:	movw	r1, #4000	; 0xfa0
   10efc:	movt	r0, #1
   10f00:	movt	r1, #1
   10f04:	bl	10c48 <g_dgettext@plt>
   10f08:	movw	r1, #4228	; 0x1084
   10f0c:	movw	r2, #2011	; 0x7db
   10f10:	movt	r1, #1
   10f14:	bl	10c3c <g_print@plt>
   10f18:	mov	r0, #0
   10f1c:	bl	10cf0 <exit@plt>
   10f20:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10f24:	mov	r7, r0
   10f28:	ldr	r6, [pc, #76]	; 10f7c <exit@plt+0x28c>
   10f2c:	mov	r8, r1
   10f30:	ldr	r5, [pc, #72]	; 10f80 <exit@plt+0x290>
   10f34:	mov	r9, r2
   10f38:	add	r6, pc, r6
   10f3c:	bl	10c1c <_init@@Base>
   10f40:	add	r5, pc, r5
   10f44:	rsb	r6, r5, r6
   10f48:	asrs	r6, r6, #2
   10f4c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10f50:	sub	r5, r5, #4
   10f54:	mov	r4, #0
   10f58:	add	r4, r4, #1
   10f5c:	ldr	r3, [r5, #4]!
   10f60:	mov	r0, r7
   10f64:	mov	r1, r8
   10f68:	mov	r2, r9
   10f6c:	blx	r3
   10f70:	cmp	r4, r6
   10f74:	bne	10f58 <exit@plt+0x268>
   10f78:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10f7c:	andeq	r0, r1, r8, asr #27
   10f80:			; <UNDEFINED> instruction: 0x00010dbc
   10f84:	bx	lr

Disassembly of section .fini:

00010f88 <_fini@@Base>:
   10f88:	push	{r3, lr}
   10f8c:	pop	{r3, pc}
