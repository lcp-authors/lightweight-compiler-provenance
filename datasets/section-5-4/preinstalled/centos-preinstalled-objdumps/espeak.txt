
centos-preinstalled/espeak:     file format elf32-littlearm


Disassembly of section .init:

00008d98 <_init@@Base>:
    8d98:	push	{r3, lr}
    8d9c:	bl	9c8c <__printf_chk@plt+0xcb8>
    8da0:	pop	{r3, pc}

Disassembly of section .plt:

00008da4 <espeak_Synth@plt-0x14>:
    8da4:	push	{lr}		; (str lr, [sp, #-4]!)
    8da8:	ldr	lr, [pc, #4]	; 8db4 <_init@@Base+0x1c>
    8dac:	add	lr, pc, lr
    8db0:	ldr	pc, [lr, #8]!
    8db4:	andeq	fp, r0, ip, asr #4

00008db8 <espeak_Synth@plt>:
    8db8:	add	ip, pc, #0, 12
    8dbc:	add	ip, ip, #45056	; 0xb000
    8dc0:	ldr	pc, [ip, #588]!	; 0x24c

00008dc4 <espeak_Info@plt>:
    8dc4:	add	ip, pc, #0, 12
    8dc8:	add	ip, ip, #45056	; 0xb000
    8dcc:	ldr	pc, [ip, #580]!	; 0x244

00008dd0 <strtol@plt>:
    8dd0:	add	ip, pc, #0, 12
    8dd4:	add	ip, ip, #45056	; 0xb000
    8dd8:	ldr	pc, [ip, #572]!	; 0x23c

00008ddc <fseek@plt>:
    8ddc:	add	ip, pc, #0, 12
    8de0:	add	ip, ip, #45056	; 0xb000
    8de4:	ldr	pc, [ip, #564]!	; 0x234

00008de8 <espeak_SetPhonemeTrace@plt>:
    8de8:	add	ip, pc, #0, 12
    8dec:	add	ip, ip, #45056	; 0xb000
    8df0:	ldr	pc, [ip, #556]!	; 0x22c

00008df4 <espeak_SetVoiceByName@plt>:
    8df4:	add	ip, pc, #0, 12
    8df8:	add	ip, ip, #45056	; 0xb000
    8dfc:	ldr	pc, [ip, #548]!	; 0x224

00008e00 <espeak_SetSynthCallback@plt>:
    8e00:	add	ip, pc, #0, 12
    8e04:	add	ip, ip, #45056	; 0xb000
    8e08:	ldr	pc, [ip, #540]!	; 0x21c

00008e0c <fgetc@plt>:
    8e0c:	add	ip, pc, #0, 12
    8e10:	add	ip, ip, #45056	; 0xb000
    8e14:	ldr	pc, [ip, #532]!	; 0x214

00008e18 <exit@plt>:
    8e18:	add	ip, pc, #0, 12
    8e1c:	add	ip, ip, #45056	; 0xb000
    8e20:	ldr	pc, [ip, #524]!	; 0x20c

00008e24 <feof@plt>:
    8e24:	add	ip, pc, #0, 12
    8e28:	add	ip, ip, #45056	; 0xb000
    8e2c:	ldr	pc, [ip, #516]!	; 0x204

00008e30 <puts@plt>:
    8e30:	add	ip, pc, #0, 12
    8e34:	add	ip, ip, #45056	; 0xb000
    8e38:	ldr	pc, [ip, #508]!	; 0x1fc

00008e3c <__fprintf_chk@plt>:
    8e3c:	add	ip, pc, #0, 12
    8e40:	add	ip, ip, #45056	; 0xb000
    8e44:	ldr	pc, [ip, #500]!	; 0x1f4

00008e48 <putchar@plt>:
    8e48:	add	ip, pc, #0, 12
    8e4c:	add	ip, ip, #45056	; 0xb000
    8e50:	ldr	pc, [ip, #492]!	; 0x1ec

00008e54 <memset@plt>:
    8e54:	add	ip, pc, #0, 12
    8e58:	add	ip, ip, #45056	; 0xb000
    8e5c:	ldr	pc, [ip, #484]!	; 0x1e4

00008e60 <fopen@plt>:
    8e60:	add	ip, pc, #0, 12
    8e64:	add	ip, ip, #45056	; 0xb000
    8e68:	ldr	pc, [ip, #476]!	; 0x1dc

00008e6c <abort@plt>:
    8e6c:	add	ip, pc, #0, 12
    8e70:	add	ip, ip, #45056	; 0xb000
    8e74:	ldr	pc, [ip, #468]!	; 0x1d4

00008e78 <realloc@plt>:
    8e78:	add	ip, pc, #0, 12
    8e7c:	add	ip, ip, #45056	; 0xb000
    8e80:	ldr	pc, [ip, #460]!	; 0x1cc

00008e84 <espeak_SetVoiceByProperties@plt>:
    8e84:	add	ip, pc, #0, 12
    8e88:	add	ip, ip, #45056	; 0xb000
    8e8c:	ldr	pc, [ip, #452]!	; 0x1c4

00008e90 <fread@plt>:
    8e90:	add	ip, pc, #0, 12
    8e94:	add	ip, ip, #45056	; 0xb000
    8e98:	ldr	pc, [ip, #444]!	; 0x1bc

00008e9c <espeak_Initialize@plt>:
    8e9c:	add	ip, pc, #0, 12
    8ea0:	add	ip, ip, #45056	; 0xb000
    8ea4:	ldr	pc, [ip, #436]!	; 0x1b4

00008ea8 <__stack_chk_fail@plt>:
    8ea8:	add	ip, pc, #0, 12
    8eac:	add	ip, ip, #45056	; 0xb000
    8eb0:	ldr	pc, [ip, #428]!	; 0x1ac

00008eb4 <__strcpy_chk@plt>:
    8eb4:	add	ip, pc, #0, 12
    8eb8:	add	ip, ip, #45056	; 0xb000
    8ebc:	ldr	pc, [ip, #420]!	; 0x1a4

00008ec0 <getopt_long@plt>:
    8ec0:	add	ip, pc, #0, 12
    8ec4:	add	ip, ip, #45056	; 0xb000
    8ec8:	ldr	pc, [ip, #412]!	; 0x19c

00008ecc <__ctype_b_loc@plt>:
    8ecc:	add	ip, pc, #0, 12
    8ed0:	add	ip, ip, #45056	; 0xb000
    8ed4:	ldr	pc, [ip, #404]!	; 0x194

00008ed8 <espeak_ListVoices@plt>:
    8ed8:	add	ip, pc, #0, 12
    8edc:	add	ip, ip, #45056	; 0xb000
    8ee0:	ldr	pc, [ip, #396]!	; 0x18c

00008ee4 <espeak_CompileDictionary@plt>:
    8ee4:	add	ip, pc, #0, 12
    8ee8:	add	ip, ip, #45056	; 0xb000
    8eec:	ldr	pc, [ip, #388]!	; 0x184

00008ef0 <ftell@plt>:
    8ef0:	add	ip, pc, #0, 12
    8ef4:	add	ip, ip, #45056	; 0xb000
    8ef8:	ldr	pc, [ip, #380]!	; 0x17c

00008efc <espeak_SetParameter@plt>:
    8efc:	add	ip, pc, #0, 12
    8f00:	add	ip, ip, #45056	; 0xb000
    8f04:	ldr	pc, [ip, #372]!	; 0x174

00008f08 <fgets@plt>:
    8f08:	add	ip, pc, #0, 12
    8f0c:	add	ip, ip, #45056	; 0xb000
    8f10:	ldr	pc, [ip, #364]!	; 0x16c

00008f14 <fputc@plt>:
    8f14:	add	ip, pc, #0, 12
    8f18:	add	ip, ip, #45056	; 0xb000
    8f1c:	ldr	pc, [ip, #356]!	; 0x164

00008f20 <fwrite@plt>:
    8f20:	add	ip, pc, #0, 12
    8f24:	add	ip, ip, #45056	; 0xb000
    8f28:	ldr	pc, [ip, #348]!	; 0x15c

00008f2c <malloc@plt>:
    8f2c:	add	ip, pc, #0, 12
    8f30:	add	ip, ip, #45056	; 0xb000
    8f34:	ldr	pc, [ip, #340]!	; 0x154

00008f38 <strlen@plt>:
    8f38:	add	ip, pc, #0, 12
    8f3c:	add	ip, ip, #45056	; 0xb000
    8f40:	ldr	pc, [ip, #332]!	; 0x14c

00008f44 <fclose@plt>:
    8f44:	add	ip, pc, #0, 12
    8f48:	add	ip, ip, #45056	; 0xb000
    8f4c:	ldr	pc, [ip, #324]!	; 0x144

00008f50 <__xstat@plt>:
    8f50:	add	ip, pc, #0, 12
    8f54:	add	ip, ip, #45056	; 0xb000
    8f58:	ldr	pc, [ip, #316]!	; 0x13c

00008f5c <espeak_Synchronize@plt>:
    8f5c:	add	ip, pc, #0, 12
    8f60:	add	ip, ip, #45056	; 0xb000
    8f64:	ldr	pc, [ip, #308]!	; 0x134

00008f68 <strcmp@plt>:
    8f68:	add	ip, pc, #0, 12
    8f6c:	add	ip, ip, #45056	; 0xb000
    8f70:	ldr	pc, [ip, #300]!	; 0x12c

00008f74 <sscanf@plt>:
    8f74:	add	ip, pc, #0, 12
    8f78:	add	ip, ip, #45056	; 0xb000
    8f7c:	ldr	pc, [ip, #292]!	; 0x124

00008f80 <strncpy@plt>:
    8f80:	add	ip, pc, #0, 12
    8f84:	add	ip, ip, #45056	; 0xb000
    8f88:	ldr	pc, [ip, #284]!	; 0x11c

00008f8c <fflush@plt>:
    8f8c:	add	ip, pc, #0, 12
    8f90:	add	ip, ip, #45056	; 0xb000
    8f94:	ldr	pc, [ip, #276]!	; 0x114

00008f98 <espeak_SetPunctuationList@plt>:
    8f98:	add	ip, pc, #0, 12
    8f9c:	add	ip, ip, #45056	; 0xb000
    8fa0:	ldr	pc, [ip, #268]!	; 0x10c

00008fa4 <__sprintf_chk@plt>:
    8fa4:	add	ip, pc, #0, 12
    8fa8:	add	ip, ip, #45056	; 0xb000
    8fac:	ldr	pc, [ip, #260]!	; 0x104

00008fb0 <strrchr@plt>:
    8fb0:	add	ip, pc, #0, 12
    8fb4:	add	ip, ip, #45056	; 0xb000
    8fb8:	ldr	pc, [ip, #252]!	; 0xfc

00008fbc <__libc_start_main@plt>:
    8fbc:	add	ip, pc, #0, 12
    8fc0:	add	ip, ip, #45056	; 0xb000
    8fc4:	ldr	pc, [ip, #244]!	; 0xf4

00008fc8 <__gmon_start__@plt>:
    8fc8:	add	ip, pc, #0, 12
    8fcc:	add	ip, ip, #45056	; 0xb000
    8fd0:	ldr	pc, [ip, #236]!	; 0xec

00008fd4 <__printf_chk@plt>:
    8fd4:	add	ip, pc, #0, 12
    8fd8:	add	ip, ip, #45056	; 0xb000
    8fdc:	ldr	pc, [ip, #228]!	; 0xe4

Disassembly of section .text:

00008fe0 <.text>:
    8fe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8fe4:	movw	ip, #16864	; 0x41e0
    8fe8:	sub	sp, sp, #772	; 0x304
    8fec:	movt	ip, #1
    8ff0:	movw	fp, #16884	; 0x41f4
    8ff4:	movt	fp, #1
    8ff8:	ldr	r2, [ip]
    8ffc:	mov	r3, #0
    9000:	str	ip, [sp, #28]
    9004:	movw	sl, #16892	; 0x41fc
    9008:	ldr	ip, [fp]
    900c:	movt	sl, #1
    9010:	movw	r4, #16876	; 0x41ec
    9014:	add	r9, sp, #92	; 0x5c
    9018:	movt	r4, #1
    901c:	mov	r6, r3
    9020:	mov	r7, r0
    9024:	mov	r8, r1
    9028:	mvn	r5, #0
    902c:	str	ip, [sp, #48]	; 0x30
    9030:	str	r2, [sp, #764]	; 0x2fc
    9034:	movw	ip, #16880	; 0x41f0
    9038:	str	r3, [sp, #80]	; 0x50
    903c:	movt	ip, #1
    9040:	str	r3, [sp, #84]	; 0x54
    9044:	str	ip, [sp, #32]
    9048:	mov	ip, #4352	; 0x1100
    904c:	str	r3, [sp, #92]	; 0x5c
    9050:	str	ip, [sp, #36]	; 0x24
    9054:	add	ip, sp, #520	; 0x208
    9058:	str	r3, [sp, #44]	; 0x2c
    905c:	strb	r3, [sp, #524]	; 0x20c
    9060:	str	r3, [sp, #56]	; 0x38
    9064:	strb	r3, [sp, #564]	; 0x234
    9068:	str	r3, [sp, #40]	; 0x28
    906c:	str	r3, [sp, #124]	; 0x7c
    9070:	str	r3, [sp, #52]	; 0x34
    9074:	strb	r3, [sl, #28]
    9078:	str	r5, [sp, #76]	; 0x4c
    907c:	str	r5, [sp, #72]	; 0x48
    9080:	str	r5, [sp, #68]	; 0x44
    9084:	str	r5, [sp, #64]	; 0x40
    9088:	str	r5, [sp, #60]	; 0x3c
    908c:	str	ip, [sp, #24]
    9090:	str	r9, [sp]
    9094:	movw	r2, #42364	; 0xa57c
    9098:	mov	r0, r7
    909c:	movt	r2, #0
    90a0:	mov	r1, r8
    90a4:	ldr	r3, [pc, #2972]	; 9c48 <__printf_chk@plt+0xc74>
    90a8:	bl	8ec0 <getopt_long@plt>
    90ac:	cmn	r0, #1
    90b0:	mov	lr, r0
    90b4:	beq	96d0 <__printf_chk@plt+0x6fc>
    90b8:	sub	r2, r0, #88	; 0x58
    90bc:	ldr	r3, [r4]
    90c0:	cmp	r2, #179	; 0xb3
    90c4:	ldrls	pc, [pc, r2, lsl #2]
    90c8:	b	96a0 <__printf_chk@plt+0x6cc>
    90cc:			; <UNDEFINED> instruction: 0x000093bc
    90d0:	andeq	r9, r0, r0, lsr #13
    90d4:	andeq	r9, r0, r0, lsr #13
    90d8:	andeq	r9, r0, r0, lsr #13
    90dc:	andeq	r9, r0, r0, lsr #13
    90e0:	andeq	r9, r0, r0, lsr #13
    90e4:	andeq	r9, r0, r0, lsr #13
    90e8:	andeq	r9, r0, r0, lsr #13
    90ec:	andeq	r9, r0, r0, lsr #13
    90f0:	andeq	r9, r0, r8, asr #7
    90f4:	andeq	r9, r0, r4, lsl #9
    90f8:	andeq	r9, r0, r0, lsr #13
    90fc:	andeq	r9, r0, r0, lsr #13
    9100:	andeq	r9, r0, r0, lsr #13
    9104:	andeq	r9, r0, r0, ror r4
    9108:	andeq	r9, r0, r8, asr r4
    910c:	andeq	r9, r0, r8, lsr r4
    9110:	andeq	r9, r0, r0, lsr #13
    9114:	andeq	r9, r0, r0, lsr #13
    9118:	andeq	r9, r0, r0, lsr #8
    911c:	andeq	r9, r0, r8, lsl #8
    9120:	strdeq	r9, [r0], -r8
    9124:	andeq	r9, r0, r0, lsr #13
    9128:	andeq	r9, r0, r0, lsr #13
    912c:	andeq	r9, r0, r0, ror #7
    9130:			; <UNDEFINED> instruction: 0x000093b0
    9134:	andeq	r9, r0, r0, lsr #13
    9138:	andeq	r9, r0, ip, ror #12
    913c:	andeq	r9, r0, r0, lsr #13
    9140:	andeq	r9, r0, r0, lsr #13
    9144:	andeq	r9, r0, r8, asr r6
    9148:	andeq	r9, r0, r0, asr #12
    914c:	andeq	r9, r0, r4, lsr r6
    9150:	andeq	r9, r0, r0, lsr #13
    9154:	andeq	r9, r0, r4, lsr #12
    9158:	andeq	r9, r0, r0, lsr #13
    915c:	andeq	r9, r0, r0, lsr #13
    9160:	andeq	r9, r0, r0, lsr #13
    9164:	andeq	r9, r0, r0, lsr #13
    9168:	andeq	r9, r0, r0, lsr #13
    916c:	andeq	r9, r0, r0, lsr #13
    9170:	andeq	r9, r0, r0, lsr #13
    9174:	andeq	r9, r0, r0, lsr #13
    9178:	andeq	r9, r0, r0, lsr #13
    917c:	andeq	r9, r0, r0, lsr #13
    9180:	andeq	r9, r0, r0, lsr #13
    9184:	andeq	r9, r0, r0, lsr #13
    9188:	andeq	r9, r0, r0, lsr #13
    918c:	andeq	r9, r0, r0, lsr #13
    9190:	andeq	r9, r0, r0, lsr #13
    9194:	andeq	r9, r0, r0, lsr #13
    9198:	andeq	r9, r0, r0, lsr #13
    919c:	andeq	r9, r0, r0, lsr #13
    91a0:	andeq	r9, r0, r0, lsr #13
    91a4:	andeq	r9, r0, r0, lsr #13
    91a8:	andeq	r9, r0, r0, lsr #13
    91ac:	andeq	r9, r0, r0, lsr #13
    91b0:	andeq	r9, r0, r0, lsr #13
    91b4:	andeq	r9, r0, r0, lsr #13
    91b8:	andeq	r9, r0, r0, lsr #13
    91bc:	andeq	r9, r0, r0, lsr #13
    91c0:	andeq	r9, r0, r0, lsr #13
    91c4:	andeq	r9, r0, r0, lsr #13
    91c8:	andeq	r9, r0, r0, lsr #13
    91cc:	andeq	r9, r0, r0, lsr #13
    91d0:	andeq	r9, r0, r0, lsr #13
    91d4:	andeq	r9, r0, r0, lsr #13
    91d8:	andeq	r9, r0, r0, lsr #13
    91dc:	andeq	r9, r0, r0, lsr #13
    91e0:	andeq	r9, r0, r0, lsr #13
    91e4:	andeq	r9, r0, r0, lsr #13
    91e8:	andeq	r9, r0, r0, lsr #13
    91ec:	andeq	r9, r0, r0, lsr #13
    91f0:	andeq	r9, r0, r0, lsr #13
    91f4:	andeq	r9, r0, r0, lsr #13
    91f8:	andeq	r9, r0, r0, lsr #13
    91fc:	andeq	r9, r0, r0, lsr #13
    9200:	andeq	r9, r0, r0, lsr #13
    9204:	andeq	r9, r0, r0, lsr #13
    9208:	andeq	r9, r0, r0, lsr #13
    920c:	andeq	r9, r0, r0, lsr #13
    9210:	andeq	r9, r0, r0, lsr #13
    9214:	andeq	r9, r0, r0, lsr #13
    9218:	andeq	r9, r0, r0, lsr #13
    921c:	andeq	r9, r0, r0, lsr #13
    9220:	andeq	r9, r0, r0, lsr #13
    9224:	andeq	r9, r0, r0, lsr #13
    9228:	andeq	r9, r0, r0, lsr #13
    922c:	andeq	r9, r0, r0, lsr #13
    9230:	andeq	r9, r0, r0, lsr #13
    9234:	andeq	r9, r0, r0, lsr #13
    9238:	andeq	r9, r0, r0, lsr #13
    923c:	andeq	r9, r0, r0, lsr #13
    9240:	andeq	r9, r0, r0, lsr #13
    9244:	andeq	r9, r0, r0, lsr #13
    9248:	andeq	r9, r0, r0, lsr #13
    924c:	andeq	r9, r0, r0, lsr #13
    9250:	andeq	r9, r0, r0, lsr #13
    9254:	andeq	r9, r0, r0, lsr #13
    9258:	andeq	r9, r0, r0, lsr #13
    925c:	andeq	r9, r0, r0, lsr #13
    9260:	andeq	r9, r0, r0, lsr #13
    9264:	andeq	r9, r0, r0, lsr #13
    9268:	andeq	r9, r0, r0, lsr #13
    926c:	andeq	r9, r0, r0, lsr #13
    9270:	andeq	r9, r0, r0, lsr #13
    9274:	andeq	r9, r0, r0, lsr #13
    9278:	andeq	r9, r0, r0, lsr #13
    927c:	andeq	r9, r0, r0, lsr #13
    9280:	andeq	r9, r0, r0, lsr #13
    9284:	andeq	r9, r0, r0, lsr #13
    9288:	andeq	r9, r0, r0, lsr #13
    928c:	andeq	r9, r0, r0, lsr #13
    9290:	andeq	r9, r0, r0, lsr #13
    9294:	andeq	r9, r0, r0, lsr #13
    9298:	andeq	r9, r0, r0, lsr #13
    929c:	andeq	r9, r0, r0, lsr #13
    92a0:	andeq	r9, r0, r0, lsr #13
    92a4:	andeq	r9, r0, r0, lsr #13
    92a8:	andeq	r9, r0, r0, lsr #13
    92ac:	andeq	r9, r0, r0, lsr #13
    92b0:	andeq	r9, r0, r0, lsr #13
    92b4:	andeq	r9, r0, r0, lsr #13
    92b8:	andeq	r9, r0, r0, lsr #13
    92bc:	andeq	r9, r0, r0, lsr #13
    92c0:	andeq	r9, r0, r0, lsr #13
    92c4:	andeq	r9, r0, r0, lsr #13
    92c8:	andeq	r9, r0, r0, lsr #13
    92cc:	andeq	r9, r0, r0, lsr #13
    92d0:	andeq	r9, r0, r0, lsr #13
    92d4:	andeq	r9, r0, r0, lsr #13
    92d8:	andeq	r9, r0, r0, lsr #13
    92dc:	andeq	r9, r0, r0, lsr #13
    92e0:	andeq	r9, r0, r0, lsr #13
    92e4:	andeq	r9, r0, r0, lsr #13
    92e8:	andeq	r9, r0, r0, lsr #13
    92ec:	andeq	r9, r0, r0, lsr #13
    92f0:	andeq	r9, r0, r0, lsr #13
    92f4:	andeq	r9, r0, r0, lsr #13
    92f8:	andeq	r9, r0, r0, lsr #13
    92fc:	andeq	r9, r0, r0, lsr #13
    9300:	andeq	r9, r0, r0, lsr #13
    9304:	andeq	r9, r0, r0, lsr #13
    9308:	andeq	r9, r0, r0, lsr #13
    930c:	andeq	r9, r0, r0, lsr #13
    9310:	andeq	r9, r0, r0, lsr #13
    9314:	andeq	r9, r0, r0, lsr #13
    9318:	andeq	r9, r0, r0, lsr #13
    931c:	andeq	r9, r0, r0, lsr #13
    9320:	andeq	r9, r0, r0, lsr #13
    9324:	andeq	r9, r0, r0, lsr #13
    9328:	andeq	r9, r0, r0, lsr #13
    932c:	andeq	r9, r0, r0, lsr #13
    9330:	andeq	r9, r0, r0, lsr #13
    9334:	andeq	r9, r0, r0, lsr #13
    9338:	andeq	r9, r0, r0, lsr #13
    933c:	andeq	r9, r0, r0, lsr #13
    9340:	andeq	r9, r0, r0, lsr #13
    9344:	andeq	r9, r0, r0, lsr #13
    9348:	andeq	r9, r0, r0, lsr #13
    934c:	andeq	r9, r0, r0, lsr #13
    9350:	andeq	r9, r0, r0, lsr #13
    9354:	andeq	r9, r0, r0, lsr #13
    9358:	andeq	r9, r0, r0, lsr #13
    935c:	andeq	r9, r0, r0, lsr #13
    9360:	andeq	r9, r0, r0, lsr #13
    9364:	andeq	r9, r0, r0, lsr #13
    9368:	andeq	r9, r0, r0, lsr #13
    936c:	andeq	r9, r0, r8, lsl r6
    9370:	muleq	r0, ip, r3
    9374:	muleq	r0, ip, r3
    9378:	ldrdeq	r9, [r0], -r8
    937c:	andeq	r9, r0, r4, lsr #11
    9380:	andeq	r9, r0, ip, ror r5
    9384:	andeq	r9, r0, ip, asr #10
    9388:	andeq	r9, r0, r4, asr #10
    938c:	andeq	r9, r0, r4, lsl #10
    9390:	strdeq	r9, [r0], -r8
    9394:			; <UNDEFINED> instruction: 0x000094bc
    9398:			; <UNDEFINED> instruction: 0x000094b0
    939c:	mov	r1, r3
    93a0:	add	r0, sp, #524	; 0x20c
    93a4:	mov	r2, #40	; 0x28
    93a8:	str	lr, [sp, #56]	; 0x38
    93ac:	bl	9f04 <__printf_chk@plt+0xf30>
    93b0:	mov	r3, #1
    93b4:	str	r3, [sl, #4]
    93b8:	b	9090 <__printf_chk@plt+0xbc>
    93bc:	mov	ip, #2
    93c0:	str	ip, [sp, #44]	; 0x2c
    93c4:	b	9090 <__printf_chk@plt+0xbc>
    93c8:	mov	r0, r3
    93cc:	mov	r1, #0
    93d0:	mov	r2, #10
    93d4:	bl	8dd0 <strtol@plt>
    93d8:	str	r0, [sp, #60]	; 0x3c
    93dc:	b	9090 <__printf_chk@plt+0xbc>
    93e0:	mov	r0, r3
    93e4:	mov	r1, #0
    93e8:	mov	r2, #10
    93ec:	bl	8dd0 <strtol@plt>
    93f0:	str	r0, [sp, #68]	; 0x44
    93f4:	b	9090 <__printf_chk@plt+0xbc>
    93f8:	ldr	ip, [sp, #36]	; 0x24
    93fc:	orr	ip, ip, #16
    9400:	str	ip, [sp, #36]	; 0x24
    9404:	b	9090 <__printf_chk@plt+0xbc>
    9408:	mov	r0, r3
    940c:	mov	r1, #0
    9410:	mov	r2, #10
    9414:	bl	8dd0 <strtol@plt>
    9418:	str	r0, [sp, #80]	; 0x50
    941c:	b	9090 <__printf_chk@plt+0xbc>
    9420:	mov	r0, r3
    9424:	mov	r1, #0
    9428:	mov	r2, #10
    942c:	bl	8dd0 <strtol@plt>
    9430:	str	r0, [sp, #76]	; 0x4c
    9434:	b	9090 <__printf_chk@plt+0xbc>
    9438:	mov	r0, #10
    943c:	bl	8e48 <putchar@plt>
    9440:	bl	9e38 <__printf_chk@plt+0xe64>
    9444:	movw	r0, #42396	; 0xa59c
    9448:	movt	r0, #0
    944c:	bl	8e30 <puts@plt>
    9450:	mov	r0, #0
    9454:	bl	8e18 <exit@plt>
    9458:	mov	r0, r3
    945c:	mov	r1, #0
    9460:	mov	r2, #10
    9464:	bl	8dd0 <strtol@plt>
    9468:	str	r0, [sp, #72]	; 0x48
    946c:	b	9090 <__printf_chk@plt+0xbc>
    9470:	mov	r1, r3
    9474:	add	r0, sp, #564	; 0x234
    9478:	mov	r2, #200	; 0xc8
    947c:	bl	9f04 <__printf_chk@plt+0xf30>
    9480:	b	9090 <__printf_chk@plt+0xbc>
    9484:	mov	r0, r3
    9488:	movw	r1, #42392	; 0xa598
    948c:	add	r2, sp, #96	; 0x60
    9490:	movt	r1, #0
    9494:	bl	8f74 <sscanf@plt>
    9498:	cmp	r0, #1
    949c:	beq	96b4 <__printf_chk@plt+0x6e0>
    94a0:	ldr	ip, [sp, #36]	; 0x24
    94a4:	orr	ip, ip, #2
    94a8:	str	ip, [sp, #36]	; 0x24
    94ac:	b	9090 <__printf_chk@plt+0xbc>
    94b0:	bl	9e38 <__printf_chk@plt+0xe64>
    94b4:	mov	r0, #0
    94b8:	bl	8e18 <exit@plt>
    94bc:	cmp	r3, #0
    94c0:	beq	96a8 <__printf_chk@plt+0x6d4>
    94c4:	add	r2, sp, #768	; 0x300
    94c8:	mov	r0, r3
    94cc:	movw	r1, #42392	; 0xa598
    94d0:	mvn	r3, #0
    94d4:	movt	r1, #0
    94d8:	str	r3, [r2, #-672]!	; 0xfffffd60
    94dc:	bl	8f74 <sscanf@plt>
    94e0:	ldr	r3, [sp, #96]	; 0x60
    94e4:	cmp	r3, #3
    94e8:	bhi	99c0 <__printf_chk@plt+0x9ec>
    94ec:	add	r3, r3, #3
    94f0:	str	r3, [sp, #44]	; 0x2c
    94f4:	b	9090 <__printf_chk@plt+0xbc>
    94f8:	mov	ip, #16
    94fc:	str	ip, [sp, #84]	; 0x54
    9500:	b	9090 <__printf_chk@plt+0xbc>
    9504:	mov	r0, r3
    9508:	movw	r1, #44640	; 0xae60
    950c:	movt	r1, #0
    9510:	str	r3, [sp, #20]
    9514:	bl	8e60 <fopen@plt>
    9518:	ldr	r3, [sp, #20]
    951c:	cmp	r0, #0
    9520:	str	r0, [sp, #48]	; 0x30
    9524:	bne	9090 <__printf_chk@plt+0xbc>
    9528:	ldr	ip, [sp, #32]
    952c:	movw	r2, #44644	; 0xae64
    9530:	mov	r1, #1
    9534:	movt	r2, #0
    9538:	ldr	r0, [ip]
    953c:	bl	8e3c <__fprintf_chk@plt>
    9540:	b	9090 <__printf_chk@plt+0xbc>
    9544:	str	r3, [sp, #52]	; 0x34
    9548:	b	9090 <__printf_chk@plt+0xbc>
    954c:	cmp	r3, #0
    9550:	movweq	r3, #1800	; 0x708
    9554:	streq	r3, [sl, #16]
    9558:	beq	9090 <__printf_chk@plt+0xbc>
    955c:	mov	r0, r3
    9560:	mov	r1, #0
    9564:	mov	r2, #10
    9568:	bl	8dd0 <strtol@plt>
    956c:	mov	r3, #60	; 0x3c
    9570:	mul	r0, r3, r0
    9574:	str	r0, [sl, #16]
    9578:	b	9090 <__printf_chk@plt+0xbc>
    957c:	movw	r3, #42340	; 0xa564
    9580:	movt	r3, #0
    9584:	ldr	r2, [pc, #1728]	; 9c4c <__printf_chk@plt+0xc78>
    9588:	mov	r6, #1
    958c:	ldm	r3, {r0, r1}
    9590:	lsr	r3, r1, #16
    9594:	strb	r3, [r2, #6]
    9598:	str	r0, [r2]
    959c:	strh	r1, [r2, #4]
    95a0:	b	9090 <__printf_chk@plt+0xbc>
    95a4:	mov	r1, #0
    95a8:	mov	ip, r3
    95ac:	ldr	r2, [sp, #52]	; 0x34
    95b0:	mov	r3, r1
    95b4:	mov	r0, #2
    95b8:	str	ip, [sp, #20]
    95bc:	bl	8e9c <espeak_Initialize@plt>
    95c0:	ldr	ip, [sp, #20]
    95c4:	ldr	r0, [fp]
    95c8:	mov	r1, ip
    95cc:	bl	9f2c <__printf_chk@plt+0xf58>
    95d0:	mov	r0, #0
    95d4:	bl	8e18 <exit@plt>
    95d8:	cmp	r3, #0
    95dc:	moveq	r5, #1
    95e0:	beq	9090 <__printf_chk@plt+0xbc>
    95e4:	sub	ip, r3, #1
    95e8:	add	r2, sp, #120	; 0x78
    95ec:	ldrb	r3, [ip, #1]!
    95f0:	cmp	r3, #0
    95f4:	str	r3, [r2, #4]!
    95f8:	beq	9608 <__printf_chk@plt+0x634>
    95fc:	ldr	r1, [sp, #24]
    9600:	cmp	r2, r1
    9604:	bne	95ec <__printf_chk@plt+0x618>
    9608:	mov	r3, #0
    960c:	mov	r5, #2
    9610:	str	r3, [sp, #520]	; 0x208
    9614:	b	9090 <__printf_chk@plt+0xbc>
    9618:	mov	ip, #1
    961c:	str	ip, [sp, #40]	; 0x28
    9620:	b	9090 <__printf_chk@plt+0xbc>
    9624:	ldr	ip, [sp, #36]	; 0x24
    9628:	bic	ip, ip, #4096	; 0x1000
    962c:	str	ip, [sp, #36]	; 0x24
    9630:	b	9090 <__printf_chk@plt+0xbc>
    9634:	mov	ip, #1
    9638:	str	ip, [sp, #44]	; 0x2c
    963c:	b	9090 <__printf_chk@plt+0xbc>
    9640:	mov	r1, r3
    9644:	ldr	r0, [pc, #1536]	; 9c4c <__printf_chk@plt+0xc78>
    9648:	mov	r2, #200	; 0xc8
    964c:	mov	r6, #1
    9650:	bl	9f04 <__printf_chk@plt+0xf30>
    9654:	b	9090 <__printf_chk@plt+0xbc>
    9658:	mov	r1, r3
    965c:	add	r0, sp, #524	; 0x20c
    9660:	mov	r2, #40	; 0x28
    9664:	bl	9f04 <__printf_chk@plt+0xf30>
    9668:	b	9090 <__printf_chk@plt+0xbc>
    966c:	mov	r0, r3
    9670:	mov	r1, #0
    9674:	mov	r2, #10
    9678:	bl	8dd0 <strtol@plt>
    967c:	str	r0, [sp, #64]	; 0x40
    9680:	b	9090 <__printf_chk@plt+0xbc>
    9684:	movw	r3, #16880	; 0x41f0
    9688:	movt	r3, #1
    968c:	movw	r0, #44740	; 0xaec4
    9690:	and	r2, ip, #1
    9694:	ldr	r1, [r3]
    9698:	movt	r0, #0
    969c:	bl	8ee4 <espeak_CompileDictionary@plt>
    96a0:	mov	r0, #0
    96a4:	bl	8e18 <exit@plt>
    96a8:	mov	ip, #3
    96ac:	str	ip, [sp, #44]	; 0x2c
    96b0:	b	9090 <__printf_chk@plt+0xbc>
    96b4:	ldr	r3, [sp, #96]	; 0x60
    96b8:	cmp	r3, #4
    96bc:	bgt	94a0 <__printf_chk@plt+0x4cc>
    96c0:	ldr	ip, [sp, #36]	; 0x24
    96c4:	orr	ip, ip, r3
    96c8:	str	ip, [sp, #36]	; 0x24
    96cc:	b	9090 <__printf_chk@plt+0xbc>
    96d0:	cmp	r6, #0
    96d4:	bne	96ec <__printf_chk@plt+0x718>
    96d8:	ldr	r3, [sl, #4]
    96dc:	movw	r4, #16892	; 0x41fc
    96e0:	movt	r4, #1
    96e4:	cmp	r3, #0
    96e8:	beq	9aec <__printf_chk@plt+0xb18>
    96ec:	mov	r1, #0
    96f0:	ldr	r2, [sp, #52]	; 0x34
    96f4:	mov	r3, r1
    96f8:	mov	r0, #2
    96fc:	bl	8e9c <espeak_Initialize@plt>
    9700:	ldr	r2, [sl, #16]
    9704:	mov	r3, r0
    9708:	str	r3, [sl, #8]
    970c:	mul	r3, r2, r3
    9710:	movw	r0, #41608	; 0xa288
    9714:	movt	r0, #0
    9718:	str	r3, [sl, #12]
    971c:	bl	8e00 <espeak_SetSynthCallback@plt>
    9720:	ldr	r3, [sl, #12]
    9724:	cmp	r3, #0
    9728:	beq	9774 <__printf_chk@plt+0x7a0>
    972c:	ldr	r4, [pc, #1304]	; 9c4c <__printf_chk@plt+0xc78>
    9730:	mov	r1, #46	; 0x2e
    9734:	mov	r0, r4
    9738:	bl	8fb0 <strrchr@plt>
    973c:	subs	r6, r0, #0
    9740:	beq	9774 <__printf_chk@plt+0x7a0>
    9744:	mov	r0, r4
    9748:	bl	8f38 <strlen@plt>
    974c:	add	r0, r4, r0
    9750:	rsb	r3, r6, r0
    9754:	cmp	r3, #4
    9758:	bgt	9774 <__printf_chk@plt+0x7a0>
    975c:	add	r0, r4, #200	; 0xc8
    9760:	mov	r1, r6
    9764:	mov	r2, #5
    9768:	bl	8eb4 <__strcpy_chk@plt>
    976c:	mov	r3, #0
    9770:	strb	r3, [r6]
    9774:	ldrb	r3, [sp, #524]	; 0x20c
    9778:	cmp	r3, #0
    977c:	addeq	r4, sp, #524	; 0x20c
    9780:	addne	r4, sp, #524	; 0x20c
    9784:	movweq	r3, #44688	; 0xae90
    9788:	movteq	r3, #0
    978c:	ldmeq	r3, {r0, r1}
    9790:	stmeq	r4, {r0, r1}
    9794:	mov	r0, r4
    9798:	bl	8df4 <espeak_SetVoiceByName@plt>
    979c:	cmp	r0, #0
    97a0:	bne	9a84 <__printf_chk@plt+0xab0>
    97a4:	ldr	ip, [sp, #56]	; 0x38
    97a8:	cmp	ip, #0
    97ac:	bne	9684 <__printf_chk@plt+0x6b0>
    97b0:	ldr	ip, [sp, #64]	; 0x40
    97b4:	cmp	ip, #0
    97b8:	ble	97cc <__printf_chk@plt+0x7f8>
    97bc:	mov	r1, ip
    97c0:	ldr	r2, [sp, #56]	; 0x38
    97c4:	mov	r0, #1
    97c8:	bl	8efc <espeak_SetParameter@plt>
    97cc:	ldr	ip, [sp, #60]	; 0x3c
    97d0:	cmp	ip, #0
    97d4:	blt	97e8 <__printf_chk@plt+0x814>
    97d8:	mov	r1, ip
    97dc:	mov	r0, #2
    97e0:	mov	r2, #0
    97e4:	bl	8efc <espeak_SetParameter@plt>
    97e8:	ldr	ip, [sp, #68]	; 0x44
    97ec:	cmp	ip, #0
    97f0:	blt	9804 <__printf_chk@plt+0x830>
    97f4:	mov	r1, ip
    97f8:	mov	r0, #3
    97fc:	mov	r2, #0
    9800:	bl	8efc <espeak_SetParameter@plt>
    9804:	ldr	ip, [sp, #76]	; 0x4c
    9808:	cmp	ip, #0
    980c:	blt	9820 <__printf_chk@plt+0x84c>
    9810:	mov	r1, ip
    9814:	mov	r0, #6
    9818:	mov	r2, #0
    981c:	bl	8efc <espeak_SetParameter@plt>
    9820:	cmn	r5, #1
    9824:	beq	9838 <__printf_chk@plt+0x864>
    9828:	mov	r0, #5
    982c:	mov	r1, r5
    9830:	mov	r2, #0
    9834:	bl	8efc <espeak_SetParameter@plt>
    9838:	ldr	ip, [sp, #72]	; 0x48
    983c:	cmp	ip, #0
    9840:	blt	9854 <__printf_chk@plt+0x880>
    9844:	mov	r1, ip
    9848:	mov	r0, #7
    984c:	mov	r2, #0
    9850:	bl	8efc <espeak_SetParameter@plt>
    9854:	ldr	ip, [sp, #80]	; 0x50
    9858:	cmp	ip, #0
    985c:	ble	9870 <__printf_chk@plt+0x89c>
    9860:	mov	r1, ip
    9864:	mov	r0, #13
    9868:	mov	r2, #0
    986c:	bl	8efc <espeak_SetParameter@plt>
    9870:	cmp	r5, #2
    9874:	beq	9b08 <__printf_chk@plt+0xb34>
    9878:	ldr	r1, [sp, #44]	; 0x2c
    987c:	ldr	ip, [sp, #84]	; 0x54
    9880:	orr	r0, ip, r1
    9884:	ldr	r1, [sp, #48]	; 0x30
    9888:	bl	8de8 <espeak_SetPhonemeTrace@plt>
    988c:	ldrb	r3, [sp, #564]	; 0x234
    9890:	cmp	r3, #0
    9894:	bne	99ec <__printf_chk@plt+0xa18>
    9898:	movw	r3, #16872	; 0x41e8
    989c:	movt	r3, #1
    98a0:	ldr	ip, [sp, #40]	; 0x28
    98a4:	ldr	r3, [r3]
    98a8:	cmp	r7, r3
    98ac:	ble	993c <__printf_chk@plt+0x968>
    98b0:	cmp	ip, #0
    98b4:	bne	9ad8 <__printf_chk@plt+0xb04>
    98b8:	ldr	r4, [r8, r3, lsl #2]
    98bc:	cmp	r4, #0
    98c0:	beq	9be8 <__printf_chk@plt+0xc14>
    98c4:	mov	r0, r4
    98c8:	bl	8f38 <strlen@plt>
    98cc:	ldr	ip, [sp, #40]	; 0x28
    98d0:	ldr	r2, [sp, #40]	; 0x28
    98d4:	mov	r3, #1
    98d8:	str	ip, [sp]
    98dc:	ldr	ip, [sp, #36]	; 0x24
    98e0:	str	r2, [sp, #8]
    98e4:	str	r2, [sp, #12]
    98e8:	str	ip, [sp, #4]
    98ec:	add	r1, r0, r3
    98f0:	mov	r0, r4
    98f4:	bl	8db8 <espeak_Synth@plt>
    98f8:	bl	8f5c <espeak_Synchronize@plt>
    98fc:	cmp	r0, #0
    9900:	bne	9c1c <__printf_chk@plt+0xc48>
    9904:	ldr	r3, [fp]
    9908:	ldr	ip, [sp, #48]	; 0x30
    990c:	cmp	ip, r3
    9910:	beq	991c <__printf_chk@plt+0x948>
    9914:	mov	r0, ip
    9918:	bl	8f44 <fclose@plt>
    991c:	ldr	ip, [sp, #28]
    9920:	mov	r0, #0
    9924:	ldr	r2, [sp, #764]	; 0x2fc
    9928:	ldr	r3, [ip]
    992c:	cmp	r2, r3
    9930:	bne	9c44 <__printf_chk@plt+0xc70>
    9934:	add	sp, sp, #772	; 0x304
    9938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    993c:	cmp	ip, #0
    9940:	movw	r4, #16856	; 0x41d8
    9944:	movt	r4, #1
    9948:	moveq	r5, #2
    994c:	ldr	r3, [r4]
    9950:	bne	9ae4 <__printf_chk@plt+0xb10>
    9954:	cmp	r3, #0
    9958:	beq	9be8 <__printf_chk@plt+0xc14>
    995c:	mov	r0, #1000	; 0x3e8
    9960:	bl	8f2c <malloc@plt>
    9964:	cmp	r5, #2
    9968:	moveq	r5, #0
    996c:	ldreq	r7, [sp, #36]	; 0x24
    9970:	mov	r6, r0
    9974:	beq	99a4 <__printf_chk@plt+0x9d0>
    9978:	b	9b28 <__printf_chk@plt+0xb54>
    997c:	strb	r5, [r6, #999]	; 0x3e7
    9980:	mov	r0, r6
    9984:	str	r5, [sp]
    9988:	mov	r1, #1000	; 0x3e8
    998c:	str	r7, [sp, #4]
    9990:	mov	r2, #0
    9994:	str	r5, [sp, #8]
    9998:	mov	r3, #1
    999c:	str	r5, [sp, #12]
    99a0:	bl	8db8 <espeak_Synth@plt>
    99a4:	mov	r0, r6
    99a8:	mov	r1, #1000	; 0x3e8
    99ac:	ldr	r2, [r4]
    99b0:	bl	8f08 <fgets@plt>
    99b4:	cmp	r0, #0
    99b8:	bne	997c <__printf_chk@plt+0x9a8>
    99bc:	b	98f8 <__printf_chk@plt+0x924>
    99c0:	ldr	ip, [sp, #32]
    99c4:	mov	r2, #20
    99c8:	movw	r0, #44664	; 0xae78
    99cc:	mov	r1, #1
    99d0:	movt	r0, #0
    99d4:	ldr	r3, [ip]
    99d8:	bl	8f20 <fwrite@plt>
    99dc:	mov	r2, #0
    99e0:	mov	r3, r2
    99e4:	str	r2, [sp, #96]	; 0x60
    99e8:	b	94ec <__printf_chk@plt+0x518>
    99ec:	add	r4, sp, #564	; 0x234
    99f0:	mov	r0, r4
    99f4:	bl	9ea0 <__printf_chk@plt+0xecc>
    99f8:	movw	r1, #44744	; 0xaec8
    99fc:	movt	r1, #0
    9a00:	mov	r5, r0
    9a04:	mov	r0, r4
    9a08:	bl	8e60 <fopen@plt>
    9a0c:	subs	r6, r0, #0
    9a10:	beq	9bec <__printf_chk@plt+0xc18>
    9a14:	ldr	ip, [sp, #40]	; 0x28
    9a18:	cmp	ip, #0
    9a1c:	bne	9b14 <__printf_chk@plt+0xb40>
    9a20:	add	r4, r5, #1
    9a24:	mov	r0, r4
    9a28:	bl	8f2c <malloc@plt>
    9a2c:	subs	r7, r0, #0
    9a30:	beq	9bc0 <__printf_chk@plt+0xbec>
    9a34:	mov	r2, r5
    9a38:	mov	r3, r6
    9a3c:	mov	r1, #1
    9a40:	bl	8e90 <fread@plt>
    9a44:	ldr	ip, [sp, #40]	; 0x28
    9a48:	mov	r0, r7
    9a4c:	mov	r1, r4
    9a50:	mov	r3, #1
    9a54:	strb	ip, [r7, r5]
    9a58:	str	ip, [sp]
    9a5c:	ldr	ip, [sp, #36]	; 0x24
    9a60:	str	ip, [sp, #4]
    9a64:	ldr	ip, [sp, #40]	; 0x28
    9a68:	str	ip, [sp, #8]
    9a6c:	mov	r2, ip
    9a70:	str	ip, [sp, #12]
    9a74:	bl	8db8 <espeak_Synth@plt>
    9a78:	mov	r0, r6
    9a7c:	bl	8f44 <fclose@plt>
    9a80:	b	98f8 <__printf_chk@plt+0x924>
    9a84:	mov	r1, #0
    9a88:	mov	r2, #24
    9a8c:	add	r0, sp, #100	; 0x64
    9a90:	bl	8e54 <memset@plt>
    9a94:	add	r0, sp, #100	; 0x64
    9a98:	str	r4, [sp, #104]	; 0x68
    9a9c:	bl	8e84 <espeak_SetVoiceByProperties@plt>
    9aa0:	cmp	r0, #0
    9aa4:	beq	97a4 <__printf_chk@plt+0x7d0>
    9aa8:	movw	r3, #16880	; 0x41f0
    9aac:	movt	r3, #1
    9ab0:	str	r4, [sp]
    9ab4:	movw	r2, #44696	; 0xae98
    9ab8:	ldr	r0, [r3]
    9abc:	movt	r2, #0
    9ac0:	movw	r3, #44712	; 0xaea8
    9ac4:	mov	r1, #1
    9ac8:	movt	r3, #0
    9acc:	bl	8e3c <__fprintf_chk@plt>
    9ad0:	mov	r0, #2
    9ad4:	bl	8e18 <exit@plt>
    9ad8:	movw	r4, #16856	; 0x41d8
    9adc:	movt	r4, #1
    9ae0:	ldr	r3, [r4]
    9ae4:	mov	r5, #1
    9ae8:	b	9954 <__printf_chk@plt+0x980>
    9aec:	mov	r0, r6
    9af0:	ldr	r2, [sp, #52]	; 0x34
    9af4:	mov	r1, r6
    9af8:	mov	r3, r6
    9afc:	bl	8e9c <espeak_Initialize@plt>
    9b00:	str	r0, [r4, #8]
    9b04:	b	9774 <__printf_chk@plt+0x7a0>
    9b08:	add	r0, sp, #124	; 0x7c
    9b0c:	bl	8f98 <espeak_SetPunctuationList@plt>
    9b10:	b	9878 <__printf_chk@plt+0x8a4>
    9b14:	mov	r0, #1000	; 0x3e8
    9b18:	movw	r4, #16856	; 0x41d8
    9b1c:	bl	8f2c <malloc@plt>
    9b20:	movt	r4, #1
    9b24:	mov	r6, r0
    9b28:	movw	r8, #16856	; 0x41d8
    9b2c:	movt	r8, #1
    9b30:	mov	r7, #1000	; 0x3e8
    9b34:	mov	r5, #0
    9b38:	ldr	r0, [r4]
    9b3c:	bl	8e24 <feof@plt>
    9b40:	cmp	r0, #0
    9b44:	bne	9b80 <__printf_chk@plt+0xbac>
    9b48:	ldr	r0, [r8]
    9b4c:	add	r5, r5, #1
    9b50:	bl	8e0c <fgetc@plt>
    9b54:	sub	r3, r7, #1
    9b58:	cmp	r5, r3
    9b5c:	sub	r3, r5, #1
    9b60:	strb	r0, [r6, r3]
    9b64:	blt	9b38 <__printf_chk@plt+0xb64>
    9b68:	add	r7, r7, #1000	; 0x3e8
    9b6c:	mov	r0, r6
    9b70:	mov	r1, r7
    9b74:	bl	8e78 <realloc@plt>
    9b78:	mov	r6, r0
    9b7c:	b	9b38 <__printf_chk@plt+0xb64>
    9b80:	cmp	r5, #0
    9b84:	beq	98f8 <__printf_chk@plt+0x924>
    9b88:	add	r3, r6, r5
    9b8c:	mov	ip, #0
    9b90:	mov	r2, ip
    9b94:	mov	r0, r6
    9b98:	strb	ip, [r3, #-1]
    9b9c:	add	r1, r5, #1
    9ba0:	str	ip, [sp]
    9ba4:	mov	r3, #1
    9ba8:	str	ip, [sp, #8]
    9bac:	str	ip, [sp, #12]
    9bb0:	ldr	ip, [sp, #36]	; 0x24
    9bb4:	str	ip, [sp, #4]
    9bb8:	bl	8db8 <espeak_Synth@plt>
    9bbc:	b	98f8 <__printf_chk@plt+0x924>
    9bc0:	movw	r1, #16880	; 0x41f0
    9bc4:	movt	r1, #1
    9bc8:	mov	r3, r5
    9bcc:	movw	r2, #44748	; 0xaecc
    9bd0:	ldr	r0, [r1]
    9bd4:	movt	r2, #0
    9bd8:	mov	r1, #1
    9bdc:	bl	8e3c <__fprintf_chk@plt>
    9be0:	mov	r0, #3
    9be4:	bl	8e18 <exit@plt>
    9be8:	add	r4, sp, #564	; 0x234
    9bec:	movw	r3, #16880	; 0x41f0
    9bf0:	movt	r3, #1
    9bf4:	str	r4, [sp]
    9bf8:	movw	r2, #44728	; 0xaeb8
    9bfc:	ldr	r0, [r3]
    9c00:	movt	r2, #0
    9c04:	movw	r3, #44712	; 0xaea8
    9c08:	mov	r1, #1
    9c0c:	movt	r3, #0
    9c10:	bl	8e3c <__fprintf_chk@plt>
    9c14:	mov	r0, #1
    9c18:	bl	8e18 <exit@plt>
    9c1c:	movw	r3, #16880	; 0x41f0
    9c20:	movt	r3, #1
    9c24:	movw	r0, #44784	; 0xaef0
    9c28:	mov	r1, #1
    9c2c:	ldr	r3, [r3]
    9c30:	movt	r0, #0
    9c34:	mov	r2, #68	; 0x44
    9c38:	bl	8f20 <fwrite@plt>
    9c3c:	mov	r0, #4
    9c40:	bl	8e18 <exit@plt>
    9c44:	bl	8ea8 <__stack_chk_fail@plt>
    9c48:	strdeq	r4, [r1], -r8
    9c4c:	andeq	r4, r1, r8, lsl r2
    9c50:	mov	fp, #0
    9c54:	mov	lr, #0
    9c58:	pop	{r1}		; (ldr r1, [sp], #4)
    9c5c:	mov	r2, sp
    9c60:	push	{r2}		; (str r2, [sp, #-4]!)
    9c64:	push	{r0}		; (str r0, [sp, #-4]!)
    9c68:	ldr	ip, [pc, #16]	; 9c80 <__printf_chk@plt+0xcac>
    9c6c:	push	{ip}		; (str ip, [sp, #-4]!)
    9c70:	ldr	r0, [pc, #12]	; 9c84 <__printf_chk@plt+0xcb0>
    9c74:	ldr	r3, [pc, #12]	; 9c88 <__printf_chk@plt+0xcb4>
    9c78:	bl	8fbc <__libc_start_main@plt>
    9c7c:	bl	8e6c <abort@plt>
    9c80:	muleq	r0, r4, r4
    9c84:	andeq	r8, r0, r0, ror #31
    9c88:	andeq	sl, r0, r0, lsr r4
    9c8c:	ldr	r3, [pc, #20]	; 9ca8 <__printf_chk@plt+0xcd4>
    9c90:	ldr	r2, [pc, #20]	; 9cac <__printf_chk@plt+0xcd8>
    9c94:	add	r3, pc, r3
    9c98:	ldr	r2, [r3, r2]
    9c9c:	cmp	r2, #0
    9ca0:	bxeq	lr
    9ca4:	b	8fc8 <__gmon_start__@plt>
    9ca8:	andeq	sl, r0, r4, ror #6
    9cac:	andeq	r0, r0, r4, asr #1
    9cb0:	push	{r3, lr}
    9cb4:	movw	r0, #16856	; 0x41d8
    9cb8:	ldr	r3, [pc, #36]	; 9ce4 <__printf_chk@plt+0xd10>
    9cbc:	movt	r0, #1
    9cc0:	rsb	r3, r0, r3
    9cc4:	cmp	r3, #6
    9cc8:	popls	{r3, pc}
    9ccc:	movw	r3, #0
    9cd0:	movt	r3, #0
    9cd4:	cmp	r3, #0
    9cd8:	popeq	{r3, pc}
    9cdc:	blx	r3
    9ce0:	pop	{r3, pc}
    9ce4:	ldrdeq	r4, [r1], -fp
    9ce8:	push	{r3, lr}
    9cec:	movw	r0, #16856	; 0x41d8
    9cf0:	movw	r3, #16856	; 0x41d8
    9cf4:	movt	r0, #1
    9cf8:	movt	r3, #1
    9cfc:	rsb	r3, r0, r3
    9d00:	asr	r3, r3, #2
    9d04:	add	r3, r3, r3, lsr #31
    9d08:	asrs	r1, r3, #1
    9d0c:	popeq	{r3, pc}
    9d10:	movw	r2, #0
    9d14:	movt	r2, #0
    9d18:	cmp	r2, #0
    9d1c:	popeq	{r3, pc}
    9d20:	blx	r2
    9d24:	pop	{r3, pc}
    9d28:	push	{r4, lr}
    9d2c:	movw	r4, #16888	; 0x41f8
    9d30:	movt	r4, #1
    9d34:	ldrb	r3, [r4]
    9d38:	cmp	r3, #0
    9d3c:	popne	{r4, pc}
    9d40:	bl	9cb0 <__printf_chk@plt+0xcdc>
    9d44:	mov	r3, #1
    9d48:	strb	r3, [r4]
    9d4c:	pop	{r4, pc}
    9d50:	movw	r0, #16108	; 0x3eec
    9d54:	movt	r0, #1
    9d58:	push	{r3, lr}
    9d5c:	ldr	r3, [r0]
    9d60:	cmp	r3, #0
    9d64:	beq	9d7c <__printf_chk@plt+0xda8>
    9d68:	movw	r3, #0
    9d6c:	movt	r3, #0
    9d70:	cmp	r3, #0
    9d74:	beq	9d7c <__printf_chk@plt+0xda8>
    9d78:	blx	r3
    9d7c:	pop	{r3, lr}
    9d80:	b	9ce8 <__printf_chk@plt+0xd14>
    9d84:	push	{r4, r5, r6, r7, r8, lr}
    9d88:	movw	r7, #16892	; 0x41fc
    9d8c:	movt	r7, #1
    9d90:	ldr	r0, [r7]
    9d94:	cmp	r0, #0
    9d98:	popeq	{r4, r5, r6, r7, r8, pc}
    9d9c:	movw	r3, #16884	; 0x41f4
    9da0:	movt	r3, #1
    9da4:	ldr	r3, [r3]
    9da8:	cmp	r0, r3
    9dac:	popeq	{r4, r5, r6, r7, r8, pc}
    9db0:	bl	8f8c <fflush@plt>
    9db4:	ldr	r0, [r7]
    9db8:	bl	8ef0 <ftell@plt>
    9dbc:	mov	r4, #4
    9dc0:	mov	r1, r4
    9dc4:	mov	r2, #0
    9dc8:	mov	r5, r0
    9dcc:	ldr	r0, [r7]
    9dd0:	bl	8ddc <fseek@plt>
    9dd4:	ldr	r8, [r7]
    9dd8:	sub	r6, r5, #8
    9ddc:	uxtb	r0, r6
    9de0:	mov	r1, r8
    9de4:	bl	8f14 <fputc@plt>
    9de8:	subs	r4, r4, #1
    9dec:	asr	r6, r6, #8
    9df0:	bne	9ddc <__printf_chk@plt+0xe08>
    9df4:	mov	r2, r4
    9df8:	ldr	r0, [r7]
    9dfc:	mov	r1, #40	; 0x28
    9e00:	sub	r5, r5, #44	; 0x2c
    9e04:	bl	8ddc <fseek@plt>
    9e08:	ldr	r6, [r7]
    9e0c:	mov	r4, #4
    9e10:	uxtb	r0, r5
    9e14:	mov	r1, r6
    9e18:	bl	8f14 <fputc@plt>
    9e1c:	subs	r4, r4, #1
    9e20:	asr	r5, r5, #8
    9e24:	bne	9e10 <__printf_chk@plt+0xe3c>
    9e28:	ldr	r0, [r7]
    9e2c:	bl	8f44 <fclose@plt>
    9e30:	str	r4, [r7]
    9e34:	pop	{r4, r5, r6, r7, r8, pc}
    9e38:	push	{r4, lr}
    9e3c:	movw	r4, #16864	; 0x41e0
    9e40:	movt	r4, #1
    9e44:	sub	sp, sp, #8
    9e48:	mov	r1, #0
    9e4c:	mov	r3, #32768	; 0x8000
    9e50:	ldr	ip, [r4]
    9e54:	mov	r2, r1
    9e58:	mov	r0, #2
    9e5c:	str	ip, [sp, #4]
    9e60:	bl	8e9c <espeak_Initialize@plt>
    9e64:	mov	r0, sp
    9e68:	bl	8dc4 <espeak_Info@plt>
    9e6c:	ldr	r3, [sp]
    9e70:	movw	r1, #42156	; 0xa4ac
    9e74:	movt	r1, #0
    9e78:	mov	r2, r0
    9e7c:	mov	r0, #1
    9e80:	bl	8fd4 <__printf_chk@plt>
    9e84:	ldr	r2, [sp, #4]
    9e88:	ldr	r3, [r4]
    9e8c:	cmp	r2, r3
    9e90:	bne	9e9c <__printf_chk@plt+0xec8>
    9e94:	add	sp, sp, #8
    9e98:	pop	{r4, pc}
    9e9c:	bl	8ea8 <__stack_chk_fail@plt>
    9ea0:	push	{r4, lr}
    9ea4:	movw	r4, #16864	; 0x41e0
    9ea8:	movt	r4, #1
    9eac:	sub	sp, sp, #96	; 0x60
    9eb0:	mov	r1, r0
    9eb4:	mov	r0, #3
    9eb8:	ldr	r3, [r4]
    9ebc:	mov	r2, sp
    9ec0:	str	r3, [sp, #92]	; 0x5c
    9ec4:	bl	8f50 <__xstat@plt>
    9ec8:	cmp	r0, #0
    9ecc:	movne	r0, #0
    9ed0:	bne	9ee8 <__printf_chk@plt+0xf14>
    9ed4:	ldr	r3, [sp, #16]
    9ed8:	and	r3, r3, #61440	; 0xf000
    9edc:	cmp	r3, #16384	; 0x4000
    9ee0:	ldrne	r0, [sp, #44]	; 0x2c
    9ee4:	mvneq	r0, #1
    9ee8:	ldr	r2, [sp, #92]	; 0x5c
    9eec:	ldr	r3, [r4]
    9ef0:	cmp	r2, r3
    9ef4:	bne	9f00 <__printf_chk@plt+0xf2c>
    9ef8:	add	sp, sp, #96	; 0x60
    9efc:	pop	{r4, pc}
    9f00:	bl	8ea8 <__stack_chk_fail@plt>
    9f04:	cmp	r1, #0
    9f08:	push	{r3, r4, r5, lr}
    9f0c:	mov	r5, r0
    9f10:	mov	r4, r2
    9f14:	popeq	{r3, r4, r5, pc}
    9f18:	add	r4, r5, r4
    9f1c:	bl	8f80 <strncpy@plt>
    9f20:	mov	r3, #0
    9f24:	strb	r3, [r4, #-1]
    9f28:	pop	{r3, r4, r5, pc}
    9f2c:	movw	r2, #16864	; 0x41e0
    9f30:	movt	r2, #1
    9f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9f38:	cmp	r1, #0
    9f3c:	ldr	r3, [r2]
    9f40:	sub	sp, sp, #164	; 0xa4
    9f44:	mov	r9, r0
    9f48:	str	r2, [sp, #36]	; 0x24
    9f4c:	str	r3, [sp, #156]	; 0x9c
    9f50:	beq	9f60 <__printf_chk@plt+0xf8c>
    9f54:	ldrb	r3, [r1]
    9f58:	cmp	r3, #0
    9f5c:	bne	a110 <__printf_chk@plt+0x113c>
    9f60:	mov	r0, #0
    9f64:	bl	8ed8 <espeak_ListVoices@plt>
    9f68:	mov	r4, r0
    9f6c:	movw	r0, #42196	; 0xa4d4
    9f70:	mov	r1, #1
    9f74:	movt	r0, #0
    9f78:	mov	r2, #73	; 0x49
    9f7c:	mov	r3, r9
    9f80:	bl	8f20 <fwrite@plt>
    9f84:	ldr	fp, [r4]
    9f88:	cmp	fp, #0
    9f8c:	beq	a0ac <__printf_chk@plt+0x10d8>
    9f90:	movw	sl, #42152	; 0xa4a8
    9f94:	movt	sl, #0
    9f98:	movw	r3, #8224	; 0x2020
    9f9c:	str	r4, [sp, #32]
    9fa0:	movt	r3, #32
    9fa4:	str	r3, [sp, #28]
    9fa8:	ldr	r5, [fp, #4]
    9fac:	ldrb	r3, [r5]
    9fb0:	cmp	r3, #0
    9fb4:	addne	r8, sp, #64	; 0x40
    9fb8:	movne	r4, #0
    9fbc:	beq	a08c <__printf_chk@plt+0x10b8>
    9fc0:	add	r6, r5, #1
    9fc4:	mov	r0, r6
    9fc8:	bl	8f38 <strlen@plt>
    9fcc:	ldrb	r3, [fp, #13]
    9fd0:	cmp	r3, #0
    9fd4:	mov	r7, r0
    9fd8:	bne	a0c8 <__printf_chk@plt+0x10f4>
    9fdc:	ldr	r2, [sp, #28]
    9fe0:	cmp	r4, #0
    9fe4:	str	r2, [r8]
    9fe8:	bne	a0ec <__printf_chk@plt+0x1118>
    9fec:	add	r1, sp, #76	; 0x4c
    9ff0:	mov	r2, r4
    9ff4:	mov	r3, r4
    9ff8:	mov	r0, #95	; 0x5f
    9ffc:	b	a01c <__printf_chk@plt+0x1048>
    a000:	cmp	r2, #0
    a004:	strb	r2, [r1, r3]
    a008:	beq	a040 <__printf_chk@plt+0x106c>
    a00c:	add	r3, r3, #1
    a010:	cmp	r3, #80	; 0x50
    a014:	mov	r2, r3
    a018:	beq	a040 <__printf_chk@plt+0x106c>
    a01c:	ldr	ip, [fp]
    a020:	ldrb	r2, [ip, r2]
    a024:	cmp	r2, #32
    a028:	bne	a000 <__printf_chk@plt+0x102c>
    a02c:	strb	r0, [r1, r3]
    a030:	add	r3, r3, #1
    a034:	cmp	r3, #80	; 0x50
    a038:	mov	r2, r3
    a03c:	bne	a01c <__printf_chk@plt+0x1048>
    a040:	ldrb	r3, [r5]
    a044:	movw	r2, #42276	; 0xa524
    a048:	str	r6, [sp]
    a04c:	movt	r2, #0
    a050:	str	r8, [sp, #4]
    a054:	mov	r0, r9
    a058:	ldrb	lr, [fp, #12]
    a05c:	str	r1, [sp, #12]
    a060:	mov	r1, #1
    a064:	ldrb	lr, [sl, lr]
    a068:	str	lr, [sp, #8]
    a06c:	ldr	lr, [fp, #8]
    a070:	str	lr, [sp, #16]
    a074:	bl	8e3c <__fprintf_chk@plt>
    a078:	add	r7, r7, #2
    a07c:	add	r4, r4, #1
    a080:	ldrb	r3, [r5, r7]!
    a084:	cmp	r3, #0
    a088:	bne	9fc0 <__printf_chk@plt+0xfec>
    a08c:	mov	r1, r9
    a090:	mov	r0, #10
    a094:	bl	8f14 <fputc@plt>
    a098:	ldr	r1, [sp, #32]
    a09c:	ldr	fp, [r1, #4]!
    a0a0:	cmp	fp, #0
    a0a4:	str	r1, [sp, #32]
    a0a8:	bne	9fa8 <__printf_chk@plt+0xfd4>
    a0ac:	ldr	r1, [sp, #36]	; 0x24
    a0b0:	ldr	r2, [sp, #156]	; 0x9c
    a0b4:	ldr	r3, [r1]
    a0b8:	cmp	r2, r3
    a0bc:	bne	a134 <__printf_chk@plt+0x1160>
    a0c0:	add	sp, sp, #164	; 0xa4
    a0c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a0c8:	str	r3, [sp]
    a0cc:	mov	r0, r8
    a0d0:	movw	r3, #42272	; 0xa520
    a0d4:	mov	r1, #1
    a0d8:	movt	r3, #0
    a0dc:	mov	r2, #12
    a0e0:	bl	8fa4 <__sprintf_chk@plt>
    a0e4:	cmp	r4, #0
    a0e8:	beq	9fec <__printf_chk@plt+0x1018>
    a0ec:	ldrb	lr, [r5]
    a0f0:	mov	r3, r6
    a0f4:	movw	r2, #42308	; 0xa544
    a0f8:	mov	r0, r9
    a0fc:	movt	r2, #0
    a100:	mov	r1, #1
    a104:	str	lr, [sp]
    a108:	bl	8e3c <__fprintf_chk@plt>
    a10c:	b	a078 <__printf_chk@plt+0x10a4>
    a110:	add	r0, sp, #160	; 0xa0
    a114:	mov	r3, #0
    a118:	str	r1, [sp, #44]	; 0x2c
    a11c:	str	r3, [r0, #-120]!	; 0xffffff88
    a120:	strb	r3, [sp, #53]	; 0x35
    a124:	strb	r3, [sp, #52]	; 0x34
    a128:	bl	8ed8 <espeak_ListVoices@plt>
    a12c:	mov	r4, r0
    a130:	b	9f6c <__printf_chk@plt+0xf98>
    a134:	bl	8ea8 <__stack_chk_fail@plt>
    a138:	push	{r4, r5, r6, r7, r8, lr}
    a13c:	subs	r4, r0, #0
    a140:	mov	r5, r1
    a144:	beq	a260 <__printf_chk@plt+0x128c>
    a148:	bl	8ecc <__ctype_b_loc@plt>
    a14c:	mov	r3, r4
    a150:	ldr	r1, [r0]
    a154:	mov	r4, r3
    a158:	add	r3, r3, #1
    a15c:	ldrb	r2, [r4]
    a160:	lsl	r2, r2, #1
    a164:	ldrh	r2, [r1, r2]
    a168:	and	r2, r2, #8192	; 0x2000
    a16c:	uxth	r2, r2
    a170:	cmp	r2, #0
    a174:	bne	a154 <__printf_chk@plt+0x1180>
    a178:	movw	r7, #16892	; 0x41fc
    a17c:	movt	r7, #1
    a180:	str	r2, [r7]
    a184:	ldrb	r3, [r4]
    a188:	cmp	r3, #0
    a18c:	beq	a238 <__printf_chk@plt+0x1264>
    a190:	movw	r1, #42340	; 0xa564
    a194:	mov	r0, r4
    a198:	movt	r1, #0
    a19c:	bl	8f68 <strcmp@plt>
    a1a0:	cmp	r0, #0
    a1a4:	bne	a268 <__printf_chk@plt+0x1294>
    a1a8:	movw	r3, #16884	; 0x41f4
    a1ac:	movt	r3, #1
    a1b0:	ldr	r3, [r3]
    a1b4:	str	r3, [r7]
    a1b8:	cmp	r3, #0
    a1bc:	beq	a238 <__printf_chk@plt+0x1264>
    a1c0:	movw	r0, #16588	; 0x40cc
    a1c4:	mov	r1, #1
    a1c8:	movt	r0, #1
    a1cc:	mov	r2, #24
    a1d0:	bl	8f20 <fwrite@plt>
    a1d4:	ldr	r8, [r7]
    a1d8:	mov	r4, r5
    a1dc:	mov	r6, #4
    a1e0:	uxtb	r0, r4
    a1e4:	mov	r1, r8
    a1e8:	bl	8f14 <fputc@plt>
    a1ec:	subs	r6, r6, #1
    a1f0:	asr	r4, r4, #8
    a1f4:	bne	a1e0 <__printf_chk@plt+0x120c>
    a1f8:	ldr	r6, [r7]
    a1fc:	lsl	r5, r5, #1
    a200:	mov	r4, #4
    a204:	uxtb	r0, r5
    a208:	mov	r1, r6
    a20c:	bl	8f14 <fputc@plt>
    a210:	subs	r4, r4, #1
    a214:	asr	r5, r5, #8
    a218:	bne	a204 <__printf_chk@plt+0x1230>
    a21c:	ldr	r3, [r7]
    a220:	mov	r1, #1
    a224:	mov	r2, #12
    a228:	ldr	r0, [pc, #84]	; a284 <__printf_chk@plt+0x12b0>
    a22c:	bl	8f20 <fwrite@plt>
    a230:	mov	r0, r4
    a234:	pop	{r4, r5, r6, r7, r8, pc}
    a238:	movw	r1, #16880	; 0x41f0
    a23c:	movt	r1, #1
    a240:	mov	r3, r4
    a244:	movw	r2, #42316	; 0xa54c
    a248:	ldr	r0, [r1]
    a24c:	movt	r2, #0
    a250:	mov	r1, #1
    a254:	bl	8e3c <__fprintf_chk@plt>
    a258:	mov	r0, #1
    a25c:	pop	{r4, r5, r6, r7, r8, pc}
    a260:	mov	r0, #2
    a264:	pop	{r4, r5, r6, r7, r8, pc}
    a268:	movw	r1, #42348	; 0xa56c
    a26c:	mov	r0, r4
    a270:	movt	r1, #0
    a274:	bl	8e60 <fopen@plt>
    a278:	mov	r3, r0
    a27c:	str	r0, [r7]
    a280:	b	a1b8 <__printf_chk@plt+0x11e4>
    a284:	andeq	r4, r1, ip, ror #1
    a288:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    a28c:	movw	r5, #16892	; 0x41fc
    a290:	movt	r5, #1
    a294:	movw	r6, #16864	; 0x41e0
    a298:	movt	r6, #1
    a29c:	sub	sp, sp, #232	; 0xe8
    a2a0:	ldr	ip, [r5, #4]
    a2a4:	mov	r8, r0
    a2a8:	ldr	r3, [r6]
    a2ac:	mov	r7, r1
    a2b0:	cmp	ip, #0
    a2b4:	str	r3, [sp, #228]	; 0xe4
    a2b8:	bne	a390 <__printf_chk@plt+0x13bc>
    a2bc:	cmp	r0, #0
    a2c0:	beq	a420 <__printf_chk@plt+0x144c>
    a2c4:	ldr	r3, [r2]
    a2c8:	cmp	r3, #0
    a2cc:	movne	r4, r2
    a2d0:	movne	sl, ip
    a2d4:	movne	r9, r5
    a2d8:	bne	a2f4 <__printf_chk@plt+0x1320>
    a2dc:	b	a31c <__printf_chk@plt+0x1348>
    a2e0:	cmp	r3, #2
    a2e4:	beq	a360 <__printf_chk@plt+0x138c>
    a2e8:	ldr	r3, [r4, #36]!	; 0x24
    a2ec:	cmp	r3, #0
    a2f0:	beq	a31c <__printf_chk@plt+0x1348>
    a2f4:	cmp	r3, #8
    a2f8:	bne	a2e0 <__printf_chk@plt+0x130c>
    a2fc:	ldr	r3, [r4, #28]
    a300:	ldr	r2, [r5, #16]
    a304:	str	r3, [r5, #8]
    a308:	mul	r3, r2, r3
    a30c:	str	r3, [r5, #12]
    a310:	ldr	r3, [r4, #36]!	; 0x24
    a314:	cmp	r3, #0
    a318:	bne	a2f4 <__printf_chk@plt+0x1320>
    a31c:	ldr	r3, [r5]
    a320:	movw	r4, #16892	; 0x41fc
    a324:	movt	r4, #1
    a328:	cmp	r3, #0
    a32c:	beq	a3ac <__printf_chk@plt+0x13d8>
    a330:	cmp	r7, #0
    a334:	ble	a390 <__printf_chk@plt+0x13bc>
    a338:	ldr	ip, [r5, #20]
    a33c:	lsl	r1, r7, #1
    a340:	mov	r0, r8
    a344:	ldr	r3, [r5]
    a348:	mov	r2, #1
    a34c:	add	r7, r7, ip
    a350:	str	r7, [r5, #20]
    a354:	bl	8f20 <fwrite@plt>
    a358:	mov	r0, #0
    a35c:	b	a394 <__printf_chk@plt+0x13c0>
    a360:	ldr	r3, [r5, #12]
    a364:	cmp	r3, #0
    a368:	beq	a2e8 <__printf_chk@plt+0x1314>
    a36c:	ldr	r2, [r9, #20]
    a370:	cmp	r3, r2
    a374:	bcs	a2e8 <__printf_chk@plt+0x1314>
    a378:	bl	9d84 <__printf_chk@plt+0xdb0>
    a37c:	ldr	r3, [r9, #24]
    a380:	str	sl, [r9, #20]
    a384:	add	r3, r3, #1
    a388:	str	r3, [r9, #24]
    a38c:	b	a2e8 <__printf_chk@plt+0x1314>
    a390:	mov	r0, #0
    a394:	ldr	r2, [sp, #228]	; 0xe4
    a398:	ldr	r3, [r6]
    a39c:	cmp	r2, r3
    a3a0:	bne	a42c <__printf_chk@plt+0x1458>
    a3a4:	add	sp, sp, #232	; 0xe8
    a3a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    a3ac:	ldr	r3, [r4, #12]
    a3b0:	cmp	r3, #0
    a3b4:	bne	a3d4 <__printf_chk@plt+0x1400>
    a3b8:	add	r0, r4, #28
    a3bc:	ldr	r1, [r4, #8]
    a3c0:	bl	a138 <__printf_chk@plt+0x1164>
    a3c4:	cmp	r0, #0
    a3c8:	beq	a330 <__printf_chk@plt+0x135c>
    a3cc:	mov	r0, #1
    a3d0:	b	a394 <__printf_chk@plt+0x13c0>
    a3d4:	ldr	r3, [r4, #24]
    a3d8:	add	r1, r4, #28
    a3dc:	add	r2, r4, #228	; 0xe4
    a3e0:	str	r1, [sp]
    a3e4:	add	r3, r3, #1
    a3e8:	str	r2, [sp, #8]
    a3ec:	str	r3, [sp, #4]
    a3f0:	mov	r1, #1
    a3f4:	mov	r2, #210	; 0xd2
    a3f8:	add	r0, sp, #16
    a3fc:	movw	r3, #42352	; 0xa570
    a400:	movt	r3, #0
    a404:	bl	8fa4 <__sprintf_chk@plt>
    a408:	add	r0, sp, #16
    a40c:	ldr	r1, [r4, #8]
    a410:	bl	a138 <__printf_chk@plt+0x1164>
    a414:	cmp	r0, #0
    a418:	beq	a330 <__printf_chk@plt+0x135c>
    a41c:	b	a3cc <__printf_chk@plt+0x13f8>
    a420:	bl	9d84 <__printf_chk@plt+0xdb0>
    a424:	mov	r0, r8
    a428:	b	a394 <__printf_chk@plt+0x13c0>
    a42c:	bl	8ea8 <__stack_chk_fail@plt>
    a430:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    a434:	mov	r7, r0
    a438:	ldr	r6, [pc, #76]	; a48c <__printf_chk@plt+0x14b8>
    a43c:	mov	r8, r1
    a440:	ldr	r5, [pc, #72]	; a490 <__printf_chk@plt+0x14bc>
    a444:	mov	r9, r2
    a448:	add	r6, pc, r6
    a44c:	bl	8d98 <_init@@Base>
    a450:	add	r5, pc, r5
    a454:	rsb	r6, r5, r6
    a458:	asrs	r6, r6, #2
    a45c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    a460:	sub	r5, r5, #4
    a464:	mov	r4, #0
    a468:	add	r4, r4, #1
    a46c:	ldr	r3, [r5, #4]!
    a470:	mov	r0, r7
    a474:	mov	r1, r8
    a478:	mov	r2, r9
    a47c:	blx	r3
    a480:	cmp	r4, r6
    a484:	bne	a468 <__printf_chk@plt+0x1494>
    a488:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    a48c:	muleq	r0, r8, sl
    a490:	andeq	r9, r0, ip, lsl #21
    a494:	bx	lr

Disassembly of section .fini:

0000a498 <_fini@@Base>:
    a498:	push	{r3, lr}
    a49c:	pop	{r3, pc}
