
centos-preinstalled/pwd:     file format elf32-littlearm


Disassembly of section .init:

00011034 <.init>:
   11034:	push	{r3, lr}
   11038:	bl	116a0 <closedir@plt+0x364>
   1103c:	pop	{r3, pc}

Disassembly of section .plt:

00011040 <fdopen@plt-0x14>:
   11040:	push	{lr}		; (str lr, [sp, #-4]!)
   11044:	ldr	lr, [pc, #4]	; 11050 <fdopen@plt-0x4>
   11048:	add	lr, pc, lr
   1104c:	ldr	pc, [lr, #8]!
   11050:			; <UNDEFINED> instruction: 0x00014fb0

00011054 <fdopen@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #20, 20	; 0x14000
   1105c:	ldr	pc, [ip, #4016]!	; 0xfb0

00011060 <calloc@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #20, 20	; 0x14000
   11068:	ldr	pc, [ip, #4008]!	; 0xfa8

0001106c <fputs_unlocked@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #20, 20	; 0x14000
   11074:	ldr	pc, [ip, #4000]!	; 0xfa0

00011078 <strstr@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #20, 20	; 0x14000
   11080:	ldr	pc, [ip, #3992]!	; 0xf98

00011084 <raise@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #20, 20	; 0x14000
   1108c:	ldr	pc, [ip, #3984]!	; 0xf90

00011090 <strcmp@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #20, 20	; 0x14000
   11098:	ldr	pc, [ip, #3976]!	; 0xf88

0001109c <fflush@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #20, 20	; 0x14000
   110a4:	ldr	pc, [ip, #3968]!	; 0xf80

000110a8 <free@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #20, 20	; 0x14000
   110b0:	ldr	pc, [ip, #3960]!	; 0xf78

000110b4 <_exit@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #20, 20	; 0x14000
   110bc:	ldr	pc, [ip, #3952]!	; 0xf70

000110c0 <memcpy@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #20, 20	; 0x14000
   110c8:	ldr	pc, [ip, #3944]!	; 0xf68

000110cc <mbsinit@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #20, 20	; 0x14000
   110d4:	ldr	pc, [ip, #3936]!	; 0xf60

000110d8 <memcmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #20, 20	; 0x14000
   110e0:	ldr	pc, [ip, #3928]!	; 0xf58

000110e4 <dcgettext@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #20, 20	; 0x14000
   110ec:	ldr	pc, [ip, #3920]!	; 0xf50

000110f0 <__stack_chk_fail@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #20, 20	; 0x14000
   110f8:	ldr	pc, [ip, #3912]!	; 0xf48

000110fc <realloc@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #20, 20	; 0x14000
   11104:	ldr	pc, [ip, #3904]!	; 0xf40

00011108 <textdomain@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #20, 20	; 0x14000
   11110:	ldr	pc, [ip, #3896]!	; 0xf38

00011114 <chdir@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #20, 20	; 0x14000
   1111c:	ldr	pc, [ip, #3888]!	; 0xf30

00011120 <iswprint@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #20, 20	; 0x14000
   11128:	ldr	pc, [ip, #3880]!	; 0xf28

0001112c <__fxstat64@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #20, 20	; 0x14000
   11134:	ldr	pc, [ip, #3872]!	; 0xf20

00011138 <fwrite@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #20, 20	; 0x14000
   11140:	ldr	pc, [ip, #3864]!	; 0xf18

00011144 <lseek64@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #20, 20	; 0x14000
   1114c:	ldr	pc, [ip, #3856]!	; 0xf10

00011150 <__ctype_get_mb_cur_max@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #20, 20	; 0x14000
   11158:	ldr	pc, [ip, #3848]!	; 0xf08

0001115c <strcpy@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #20, 20	; 0x14000
   11164:	ldr	pc, [ip, #3840]!	; 0xf00

00011168 <__fpending@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #20, 20	; 0x14000
   11170:	ldr	pc, [ip, #3832]!	; 0xef8

00011174 <mbrtowc@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #20, 20	; 0x14000
   1117c:	ldr	pc, [ip, #3824]!	; 0xef0

00011180 <error@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #20, 20	; 0x14000
   11188:	ldr	pc, [ip, #3816]!	; 0xee8

0001118c <opendir@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #20, 20	; 0x14000
   11194:	ldr	pc, [ip, #3808]!	; 0xee0

00011198 <open64@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #20, 20	; 0x14000
   111a0:	ldr	pc, [ip, #3800]!	; 0xed8

000111a4 <getenv@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #20, 20	; 0x14000
   111ac:	ldr	pc, [ip, #3792]!	; 0xed0

000111b0 <puts@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #20, 20	; 0x14000
   111b8:	ldr	pc, [ip, #3784]!	; 0xec8

000111bc <malloc@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #20, 20	; 0x14000
   111c4:	ldr	pc, [ip, #3776]!	; 0xec0

000111c8 <__libc_start_main@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #20, 20	; 0x14000
   111d0:	ldr	pc, [ip, #3768]!	; 0xeb8

000111d4 <__freading@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #20, 20	; 0x14000
   111dc:	ldr	pc, [ip, #3760]!	; 0xeb0

000111e0 <__gmon_start__@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #20, 20	; 0x14000
   111e8:	ldr	pc, [ip, #3752]!	; 0xea8

000111ec <getopt_long@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #20, 20	; 0x14000
   111f4:	ldr	pc, [ip, #3744]!	; 0xea0

000111f8 <__ctype_b_loc@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #20, 20	; 0x14000
   11200:	ldr	pc, [ip, #3736]!	; 0xe98

00011204 <getcwd@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #20, 20	; 0x14000
   1120c:	ldr	pc, [ip, #3728]!	; 0xe90

00011210 <exit@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #20, 20	; 0x14000
   11218:	ldr	pc, [ip, #3720]!	; 0xe88

0001121c <strlen@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #20, 20	; 0x14000
   11224:	ldr	pc, [ip, #3712]!	; 0xe80

00011228 <ungetc@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #20, 20	; 0x14000
   11230:	ldr	pc, [ip, #3704]!	; 0xe78

00011234 <__errno_location@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #20, 20	; 0x14000
   1123c:	ldr	pc, [ip, #3696]!	; 0xe70

00011240 <__cxa_atexit@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #20, 20	; 0x14000
   11248:	ldr	pc, [ip, #3688]!	; 0xe68

0001124c <memset@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #20, 20	; 0x14000
   11254:	ldr	pc, [ip, #3680]!	; 0xe60

00011258 <fscanf@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #20, 20	; 0x14000
   11260:	ldr	pc, [ip, #3672]!	; 0xe58

00011264 <__printf_chk@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #20, 20	; 0x14000
   1126c:	ldr	pc, [ip, #3664]!	; 0xe50

00011270 <fileno@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #20, 20	; 0x14000
   11278:	ldr	pc, [ip, #3656]!	; 0xe48

0001127c <__fprintf_chk@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #20, 20	; 0x14000
   11284:	ldr	pc, [ip, #3648]!	; 0xe40

00011288 <fclose@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #20, 20	; 0x14000
   11290:	ldr	pc, [ip, #3640]!	; 0xe38

00011294 <fseeko64@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #20, 20	; 0x14000
   1129c:	ldr	pc, [ip, #3632]!	; 0xe30

000112a0 <__uflow@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #20, 20	; 0x14000
   112a8:	ldr	pc, [ip, #3624]!	; 0xe28

000112ac <setlocale@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #20, 20	; 0x14000
   112b4:	ldr	pc, [ip, #3616]!	; 0xe20

000112b8 <strrchr@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #20, 20	; 0x14000
   112c0:	ldr	pc, [ip, #3608]!	; 0xe18

000112c4 <nl_langinfo@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #20, 20	; 0x14000
   112cc:	ldr	pc, [ip, #3600]!	; 0xe10

000112d0 <readdir64@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #20, 20	; 0x14000
   112d8:	ldr	pc, [ip, #3592]!	; 0xe08

000112dc <dirfd@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #20, 20	; 0x14000
   112e4:	ldr	pc, [ip, #3584]!	; 0xe00

000112e8 <fchdir@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #20, 20	; 0x14000
   112f0:	ldr	pc, [ip, #3576]!	; 0xdf8

000112f4 <bindtextdomain@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #20, 20	; 0x14000
   112fc:	ldr	pc, [ip, #3568]!	; 0xdf0

00011300 <__xstat64@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #20, 20	; 0x14000
   11308:	ldr	pc, [ip, #3560]!	; 0xde8

0001130c <strncmp@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #20, 20	; 0x14000
   11314:	ldr	pc, [ip, #3552]!	; 0xde0

00011318 <abort@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #20, 20	; 0x14000
   11320:	ldr	pc, [ip, #3544]!	; 0xdd8

00011324 <close@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #20, 20	; 0x14000
   1132c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011330 <__lxstat64@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #20, 20	; 0x14000
   11338:	ldr	pc, [ip, #3528]!	; 0xdc8

0001133c <closedir@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #20, 20	; 0x14000
   11344:	ldr	pc, [ip, #3520]!	; 0xdc0

Disassembly of section .text:

00011348 <close_stdout@@Base-0xcf0>:
   11348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1134c:	mov	r7, r0
   11350:	ldr	r4, [pc, #704]	; 11618 <closedir@plt+0x2dc>
   11354:	sub	sp, sp, #228	; 0xe4
   11358:	ldr	r3, [pc, #700]	; 1161c <closedir@plt+0x2e0>
   1135c:	mov	r5, r1
   11360:	add	r4, pc, r4
   11364:	ldr	r0, [pc, #692]	; 11620 <closedir@plt+0x2e4>
   11368:	mov	sl, #0
   1136c:	ldr	r6, [pc, #688]	; 11624 <closedir@plt+0x2e8>
   11370:	ldr	r3, [r4, r3]
   11374:	add	r0, pc, r0
   11378:	add	r6, pc, r6
   1137c:	ldr	r9, [pc, #676]	; 11628 <closedir@plt+0x2ec>
   11380:	ldr	r8, [pc, #676]	; 1162c <closedir@plt+0x2f0>
   11384:	ldr	r3, [r3]
   11388:	add	r9, pc, r9
   1138c:	add	r8, pc, r8
   11390:	str	r3, [sp, #220]	; 0xdc
   11394:	bl	111a4 <getenv@plt>
   11398:	subs	fp, r0, sl
   1139c:	ldr	r0, [r5]
   113a0:	movne	fp, #1
   113a4:	bl	121f4 <close_stdout@@Base+0x1bc>
   113a8:	ldr	r1, [pc, #640]	; 11630 <closedir@plt+0x2f4>
   113ac:	mov	r0, #6
   113b0:	add	r1, pc, r1
   113b4:	bl	112ac <setlocale@plt>
   113b8:	ldr	r1, [pc, #628]	; 11634 <closedir@plt+0x2f8>
   113bc:	mov	r0, r6
   113c0:	add	r1, pc, r1
   113c4:	bl	112f4 <bindtextdomain@plt>
   113c8:	mov	r0, r6
   113cc:	bl	11108 <textdomain@plt>
   113d0:	ldr	r3, [pc, #608]	; 11638 <closedir@plt+0x2fc>
   113d4:	ldr	r0, [r4, r3]
   113d8:	bl	14bd8 <close_stdout@@Base+0x2ba0>
   113dc:	str	sl, [sp]
   113e0:	mov	r0, r7
   113e4:	mov	r1, r5
   113e8:	mov	r2, r9
   113ec:	mov	r3, r8
   113f0:	mov	r6, #0
   113f4:	bl	111ec <getopt_long@plt>
   113f8:	cmn	r0, #1
   113fc:	beq	11484 <closedir@plt+0x148>
   11400:	cmn	r0, #2
   11404:	beq	1147c <closedir@plt+0x140>
   11408:	ble	1142c <closedir@plt+0xf0>
   1140c:	cmp	r0, #76	; 0x4c
   11410:	beq	11424 <closedir@plt+0xe8>
   11414:	cmp	r0, #80	; 0x50
   11418:	bne	11474 <closedir@plt+0x138>
   1141c:	mov	fp, r6
   11420:	b	113dc <closedir@plt+0xa0>
   11424:	mov	fp, #1
   11428:	b	113dc <closedir@plt+0xa0>
   1142c:	cmn	r0, #3
   11430:	bne	11474 <closedir@plt+0x138>
   11434:	ldr	r1, [pc, #512]	; 1163c <closedir@plt+0x300>
   11438:	ldr	r3, [pc, #512]	; 11640 <closedir@plt+0x304>
   1143c:	ldr	r2, [pc, #512]	; 11644 <closedir@plt+0x308>
   11440:	ldr	r0, [r4, r1]
   11444:	ldr	r3, [r4, r3]
   11448:	add	r2, pc, r2
   1144c:	ldr	r1, [pc, #500]	; 11648 <closedir@plt+0x30c>
   11450:	ldr	r0, [r0]
   11454:	ldr	r3, [r3]
   11458:	add	r1, pc, r1
   1145c:	stm	sp, {r2, r6}
   11460:	ldr	r2, [pc, #484]	; 1164c <closedir@plt+0x310>
   11464:	add	r2, pc, r2
   11468:	bl	13f5c <close_stdout@@Base+0x1f24>
   1146c:	mov	r0, r6
   11470:	bl	11210 <exit@plt>
   11474:	mov	r0, #1
   11478:	bl	11de4 <closedir@plt+0xaa8>
   1147c:	mov	r0, r6
   11480:	bl	11de4 <closedir@plt+0xaa8>
   11484:	ldr	r3, [pc, #452]	; 11650 <closedir@plt+0x314>
   11488:	ldr	r3, [r4, r3]
   1148c:	ldr	r3, [r3]
   11490:	cmp	r7, r3
   11494:	bgt	1152c <closedir@plt+0x1f0>
   11498:	cmp	fp, #0
   1149c:	beq	1150c <closedir@plt+0x1d0>
   114a0:	ldr	r0, [pc, #428]	; 11654 <closedir@plt+0x318>
   114a4:	add	r0, pc, r0
   114a8:	bl	111a4 <getenv@plt>
   114ac:	subs	r6, r0, #0
   114b0:	beq	1150c <closedir@plt+0x1d0>
   114b4:	ldrb	r3, [r6]
   114b8:	cmp	r3, #47	; 0x2f
   114bc:	bne	1150c <closedir@plt+0x1d0>
   114c0:	ldr	r4, [pc, #400]	; 11658 <closedir@plt+0x31c>
   114c4:	mov	r0, r6
   114c8:	add	r4, pc, r4
   114cc:	b	114d4 <closedir@plt+0x198>
   114d0:	add	r0, r0, #1
   114d4:	mov	r1, r4
   114d8:	bl	11078 <strstr@plt>
   114dc:	cmp	r0, #0
   114e0:	beq	11554 <closedir@plt+0x218>
   114e4:	ldrb	r3, [r0, #2]
   114e8:	cmp	r3, #0
   114ec:	cmpne	r3, #47	; 0x2f
   114f0:	beq	1150c <closedir@plt+0x1d0>
   114f4:	cmp	r3, #46	; 0x2e
   114f8:	bne	114d0 <closedir@plt+0x194>
   114fc:	ldrb	r3, [r0, #3]
   11500:	cmp	r3, #0
   11504:	cmpne	r3, #47	; 0x2f
   11508:	bne	114d0 <closedir@plt+0x194>
   1150c:	bl	142d8 <close_stdout@@Base+0x22a0>
   11510:	subs	r4, r0, #0
   11514:	beq	115c0 <closedir@plt+0x284>
   11518:	bl	111b0 <puts@plt>
   1151c:	mov	r0, r4
   11520:	bl	110a8 <free@plt>
   11524:	mov	r0, #0
   11528:	bl	11210 <exit@plt>
   1152c:	ldr	r1, [pc, #296]	; 1165c <closedir@plt+0x320>
   11530:	mov	r0, r6
   11534:	mov	r2, #5
   11538:	add	r1, pc, r1
   1153c:	bl	110e4 <dcgettext@plt>
   11540:	mov	r1, r6
   11544:	mov	r2, r0
   11548:	mov	r0, r6
   1154c:	bl	11180 <error@plt>
   11550:	b	11498 <closedir@plt+0x15c>
   11554:	mov	r0, #3
   11558:	mov	r1, r6
   1155c:	add	r2, sp, #8
   11560:	bl	11300 <__xstat64@plt>
   11564:	cmp	r0, #0
   11568:	bne	1150c <closedir@plt+0x1d0>
   1156c:	ldr	r1, [pc, #236]	; 11660 <closedir@plt+0x324>
   11570:	mov	r0, #3
   11574:	add	r2, sp, #112	; 0x70
   11578:	add	r1, pc, r1
   1157c:	bl	11300 <__xstat64@plt>
   11580:	subs	r7, r0, #0
   11584:	bne	1150c <closedir@plt+0x1d0>
   11588:	ldrd	r4, [sp, #104]	; 0x68
   1158c:	ldrd	r2, [sp, #208]	; 0xd0
   11590:	cmp	r5, r3
   11594:	cmpeq	r4, r2
   11598:	bne	1150c <closedir@plt+0x1d0>
   1159c:	ldrd	r4, [sp, #8]
   115a0:	ldrd	r2, [sp, #112]	; 0x70
   115a4:	cmp	r5, r3
   115a8:	cmpeq	r4, r2
   115ac:	bne	1150c <closedir@plt+0x1d0>
   115b0:	mov	r0, r6
   115b4:	bl	111b0 <puts@plt>
   115b8:	mov	r0, r7
   115bc:	bl	11210 <exit@plt>
   115c0:	mov	r0, #12
   115c4:	bl	1406c <close_stdout@@Base+0x2034>
   115c8:	mov	r5, r0
   115cc:	mov	r0, #8192	; 0x2000
   115d0:	str	r0, [r5, #4]
   115d4:	bl	1406c <close_stdout@@Base+0x2034>
   115d8:	ldr	r2, [r5, #4]
   115dc:	sub	r2, r2, #1
   115e0:	mov	r3, r0
   115e4:	mov	r0, r5
   115e8:	add	r1, r3, r2
   115ec:	str	r3, [r5]
   115f0:	str	r1, [r5, #8]
   115f4:	strb	r4, [r3, r2]
   115f8:	bl	118c8 <closedir@plt+0x58c>
   115fc:	ldr	r0, [r5, #8]
   11600:	bl	111b0 <puts@plt>
   11604:	ldr	r0, [r5]
   11608:	bl	110a8 <free@plt>
   1160c:	mov	r0, r5
   11610:	bl	110a8 <free@plt>
   11614:	b	11524 <closedir@plt+0x1e8>
   11618:	muleq	r1, r8, ip
   1161c:	andeq	r0, r0, ip, lsl #2
   11620:	andeq	r3, r0, ip, asr ip
   11624:	muleq	r0, r4, fp
   11628:	andeq	r3, r0, ip, ror #24
   1162c:	andeq	r4, r1, r0, lsl #22
   11630:	andeq	r3, r0, ip, lsl ip
   11634:	andeq	r3, r0, r0, lsr #24
   11638:	andeq	r0, r0, ip, lsl r1
   1163c:	andeq	r0, r0, r8, lsr #2
   11640:	andeq	r0, r0, r4, lsl r1
   11644:			; <UNDEFINED> instruction: 0x00003bb0
   11648:	muleq	r0, r4, sl
   1164c:	andeq	r3, r0, r4, lsr #21
   11650:	andeq	r0, r0, r0, lsl r1
   11654:	andeq	r3, r0, r4, lsl #23
   11658:	andeq	r3, r0, r4, ror #22
   1165c:	ldrdeq	r3, [r0], -r0
   11660:			; <UNDEFINED> instruction: 0x000036bc
   11664:	mov	fp, #0
   11668:	mov	lr, #0
   1166c:	pop	{r1}		; (ldr r1, [sp], #4)
   11670:	mov	r2, sp
   11674:	push	{r2}		; (str r2, [sp, #-4]!)
   11678:	push	{r0}		; (str r0, [sp, #-4]!)
   1167c:	ldr	ip, [pc, #16]	; 11694 <closedir@plt+0x358>
   11680:	push	{ip}		; (str ip, [sp, #-4]!)
   11684:	ldr	r0, [pc, #12]	; 11698 <closedir@plt+0x35c>
   11688:	ldr	r3, [pc, #12]	; 1169c <closedir@plt+0x360>
   1168c:	bl	111c8 <__libc_start_main@plt>
   11690:	bl	11318 <abort@plt>
   11694:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11698:	andeq	r1, r1, r8, asr #6
   1169c:	andeq	r4, r1, r0, ror fp
   116a0:	ldr	r3, [pc, #20]	; 116bc <closedir@plt+0x380>
   116a4:	ldr	r2, [pc, #20]	; 116c0 <closedir@plt+0x384>
   116a8:	add	r3, pc, r3
   116ac:	ldr	r2, [r3, r2]
   116b0:	cmp	r2, #0
   116b4:	bxeq	lr
   116b8:	b	111e0 <__gmon_start__@plt>
   116bc:	andeq	r4, r1, r0, asr r9
   116c0:	andeq	r0, r0, r0, lsr #2
   116c4:	push	{r3, lr}
   116c8:	movw	r0, #24972	; 0x618c
   116cc:	ldr	r3, [pc, #36]	; 116f8 <closedir@plt+0x3bc>
   116d0:	movt	r0, #2
   116d4:	rsb	r3, r0, r3
   116d8:	cmp	r3, #6
   116dc:	popls	{r3, pc}
   116e0:	movw	r3, #0
   116e4:	movt	r3, #0
   116e8:	cmp	r3, #0
   116ec:	popeq	{r3, pc}
   116f0:	blx	r3
   116f4:	pop	{r3, pc}
   116f8:	andeq	r6, r2, pc, lsl #3
   116fc:	push	{r3, lr}
   11700:	movw	r0, #24972	; 0x618c
   11704:	movw	r3, #24972	; 0x618c
   11708:	movt	r0, #2
   1170c:	movt	r3, #2
   11710:	rsb	r3, r0, r3
   11714:	asr	r3, r3, #2
   11718:	add	r3, r3, r3, lsr #31
   1171c:	asrs	r1, r3, #1
   11720:	popeq	{r3, pc}
   11724:	movw	r2, #0
   11728:	movt	r2, #0
   1172c:	cmp	r2, #0
   11730:	popeq	{r3, pc}
   11734:	blx	r2
   11738:	pop	{r3, pc}
   1173c:	push	{r4, lr}
   11740:	movw	r4, #24972	; 0x618c
   11744:	movt	r4, #2
   11748:	ldrb	r3, [r4]
   1174c:	cmp	r3, #0
   11750:	popne	{r4, pc}
   11754:	bl	116c4 <closedir@plt+0x388>
   11758:	mov	r3, #1
   1175c:	strb	r3, [r4]
   11760:	pop	{r4, pc}
   11764:	movw	r0, #24208	; 0x5e90
   11768:	movt	r0, #2
   1176c:	push	{r3, lr}
   11770:	ldr	r3, [r0]
   11774:	cmp	r3, #0
   11778:	beq	11790 <closedir@plt+0x454>
   1177c:	movw	r3, #0
   11780:	movt	r3, #0
   11784:	cmp	r3, #0
   11788:	beq	11790 <closedir@plt+0x454>
   1178c:	blx	r3
   11790:	pop	{r3, lr}
   11794:	b	116fc <closedir@plt+0x3c0>
   11798:	push	{r3, r4, r5, lr}
   1179c:	mov	r4, r0
   117a0:	mov	r1, r4
   117a4:	mvn	r0, #0
   117a8:	bl	14954 <close_stdout@@Base+0x291c>
   117ac:	cmp	r0, #2
   117b0:	bls	11808 <closedir@plt+0x4cc>
   117b4:	add	r5, r4, r4, lsl #1
   117b8:	mov	r0, r5
   117bc:	bl	1406c <close_stdout@@Base+0x2034>
   117c0:	cmp	r4, #0
   117c4:	beq	11800 <closedir@plt+0x4c4>
   117c8:	ldr	r1, [pc, #60]	; 1180c <closedir@plt+0x4d0>
   117cc:	add	r2, r0, r5
   117d0:	mov	r3, r0
   117d4:	add	r1, pc, r1
   117d8:	ldrh	ip, [r1]
   117dc:	ldrb	r1, [r1, #2]
   117e0:	strh	ip, [r3]
   117e4:	add	r3, r3, #3
   117e8:	strb	r1, [r3, #-1]
   117ec:	cmp	r3, r2
   117f0:	bne	117e0 <closedir@plt+0x4a4>
   117f4:	mov	r3, #0
   117f8:	strb	r3, [r2, #-1]
   117fc:	pop	{r3, r4, r5, pc}
   11800:	mov	r2, r0
   11804:	b	117f4 <closedir@plt+0x4b8>
   11808:	bl	14280 <close_stdout@@Base+0x2248>
   1180c:	andeq	r3, r0, r8, lsr r4
   11810:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11814:	mov	r5, r2
   11818:	ldr	r3, [r0, #8]
   1181c:	add	r2, r2, #1
   11820:	ldr	r6, [r0]
   11824:	mov	r4, r0
   11828:	mov	r9, r1
   1182c:	rsb	r6, r6, r3
   11830:	cmp	r6, r2
   11834:	bcs	11898 <closedir@plt+0x55c>
   11838:	ldr	r7, [r0, #4]
   1183c:	mvn	r0, #0
   11840:	add	r7, r7, #1
   11844:	add	r7, r7, r5
   11848:	mov	r1, r7
   1184c:	bl	14954 <close_stdout@@Base+0x291c>
   11850:	cmp	r0, #1
   11854:	bls	118c4 <closedir@plt+0x588>
   11858:	lsl	r7, r7, #1
   1185c:	mov	r0, r7
   11860:	bl	1406c <close_stdout@@Base+0x2034>
   11864:	ldm	r4, {r1, r2}
   11868:	rsb	r2, r6, r2
   1186c:	add	r1, r1, r6
   11870:	mov	r8, r0
   11874:	rsb	r0, r2, r7
   11878:	add	r0, r8, r0
   1187c:	str	r0, [r4, #8]
   11880:	bl	110c0 <memcpy@plt>
   11884:	ldr	r0, [r4]
   11888:	bl	110a8 <free@plt>
   1188c:	ldr	r3, [r4, #8]
   11890:	str	r8, [r4]
   11894:	str	r7, [r4, #4]
   11898:	mvn	r2, r5
   1189c:	mov	r1, #47	; 0x2f
   118a0:	add	r0, r3, r2
   118a4:	str	r0, [r4, #8]
   118a8:	strb	r1, [r3, r2]
   118ac:	mov	r1, r9
   118b0:	ldr	r0, [r4, #8]
   118b4:	mov	r2, r5
   118b8:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   118bc:	add	r0, r0, #1
   118c0:	b	110c0 <memcpy@plt>
   118c4:	bl	14280 <close_stdout@@Base+0x2248>
   118c8:	ldr	r3, [pc, #1240]	; 11da8 <closedir@plt+0xa6c>
   118cc:	ldr	r2, [pc, #1240]	; 11dac <closedir@plt+0xa70>
   118d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118d4:	add	r3, pc, r3
   118d8:	sub	sp, sp, #396	; 0x18c
   118dc:	str	r0, [sp, #24]
   118e0:	add	r0, sp, #56	; 0x38
   118e4:	ldr	r2, [r3, r2]
   118e8:	ldr	r3, [r2]
   118ec:	str	r2, [sp, #32]
   118f0:	str	r3, [sp, #388]	; 0x184
   118f4:	bl	13a50 <close_stdout@@Base+0x1a18>
   118f8:	cmp	r0, #0
   118fc:	str	r0, [sp, #12]
   11900:	beq	11d20 <closedir@plt+0x9e4>
   11904:	ldr	r4, [pc, #1188]	; 11db0 <closedir@plt+0xa74>
   11908:	add	ip, sp, #72	; 0x48
   1190c:	mov	r0, #3
   11910:	str	ip, [sp, #20]
   11914:	add	r4, pc, r4
   11918:	mov	r2, ip
   1191c:	mov	r1, r4
   11920:	bl	11300 <__xstat64@plt>
   11924:	cmp	r0, #0
   11928:	blt	11d68 <closedir@plt+0xa2c>
   1192c:	ldr	ip, [pc, #1152]	; 11db4 <closedir@plt+0xa78>
   11930:	add	ip, pc, ip
   11934:	str	ip, [sp, #28]
   11938:	mov	ip, #1
   1193c:	str	ip, [sp, #4]
   11940:	ldr	ip, [pc, #1136]	; 11db8 <closedir@plt+0xa7c>
   11944:	add	ip, pc, ip
   11948:	str	ip, [sp, #36]	; 0x24
   1194c:	ldr	ip, [pc, #1128]	; 11dbc <closedir@plt+0xa80>
   11950:	add	ip, pc, ip
   11954:	str	ip, [sp, #40]	; 0x28
   11958:	ldr	ip, [pc, #1120]	; 11dc0 <closedir@plt+0xa84>
   1195c:	add	ip, pc, ip
   11960:	str	ip, [sp, #44]	; 0x2c
   11964:	ldr	ip, [pc, #1112]	; 11dc4 <closedir@plt+0xa88>
   11968:	add	ip, pc, ip
   1196c:	str	ip, [sp, #48]	; 0x30
   11970:	ldr	ip, [pc, #1104]	; 11dc8 <closedir@plt+0xa8c>
   11974:	add	ip, pc, ip
   11978:	str	ip, [sp, #52]	; 0x34
   1197c:	ldr	ip, [sp, #12]
   11980:	ldrd	r0, [sp, #168]	; 0xa8
   11984:	ldrd	r2, [ip]
   11988:	cmp	r1, r3
   1198c:	cmpeq	r0, r2
   11990:	bne	119b4 <closedir@plt+0x678>
   11994:	ldrd	r2, [ip, #8]
   11998:	movw	r1, #65216	; 0xfec0
   1199c:	add	ip, sp, #392	; 0x188
   119a0:	movt	r1, #65535	; 0xffff
   119a4:	ldrd	r0, [r1, ip]
   119a8:	cmp	r1, r3
   119ac:	cmpeq	r0, r2
   119b0:	beq	11ce0 <closedir@plt+0x9a4>
   119b4:	ldr	ip, [sp, #4]
   119b8:	ldr	r0, [sp, #28]
   119bc:	add	ip, ip, #1
   119c0:	str	ip, [sp, #16]
   119c4:	bl	1118c <opendir@plt>
   119c8:	subs	r6, r0, #0
   119cc:	beq	11c9c <closedir@plt+0x960>
   119d0:	bl	11234 <__errno_location@plt>
   119d4:	mov	sl, r0
   119d8:	mov	r0, r6
   119dc:	bl	112dc <dirfd@plt>
   119e0:	subs	r4, r0, #0
   119e4:	blt	11c8c <closedir@plt+0x950>
   119e8:	bl	112e8 <fchdir@plt>
   119ec:	lsr	r0, r0, #31
   119f0:	cmp	r0, #0
   119f4:	bne	11c50 <closedir@plt+0x914>
   119f8:	cmp	r4, #0
   119fc:	add	ip, sp, #176	; 0xb0
   11a00:	str	ip, [sp, #8]
   11a04:	blt	11c38 <closedir@plt+0x8fc>
   11a08:	mov	r1, r4
   11a0c:	mov	r0, #3
   11a10:	mov	r2, ip
   11a14:	bl	1112c <__fxstat64@plt>
   11a18:	lsr	r0, r0, #31
   11a1c:	cmp	r0, #0
   11a20:	bne	11bfc <closedir@plt+0x8c0>
   11a24:	movw	fp, #65216	; 0xfec0
   11a28:	add	ip, sp, #392	; 0x188
   11a2c:	movt	fp, #65535	; 0xffff
   11a30:	ldrd	r2, [sp, #176]	; 0xb0
   11a34:	add	r5, sp, #280	; 0x118
   11a38:	mov	r8, #0
   11a3c:	ldrd	r0, [ip, fp]
   11a40:	mov	r4, r5
   11a44:	cmp	r3, r1
   11a48:	cmpeq	r2, r0
   11a4c:	moveq	r7, #0
   11a50:	movne	r7, #1
   11a54:	str	r8, [sl]
   11a58:	b	11a7c <closedir@plt+0x740>
   11a5c:	ldrb	r2, [r0, #20]
   11a60:	cmp	r2, #46	; 0x2e
   11a64:	movne	r2, #1
   11a68:	moveq	r2, #2
   11a6c:	ldrb	r2, [r9, r2]
   11a70:	cmp	r2, #0
   11a74:	cmpne	r2, #47	; 0x2f
   11a78:	bne	11a9c <closedir@plt+0x760>
   11a7c:	mov	r0, r6
   11a80:	bl	112d0 <readdir64@plt>
   11a84:	cmp	r0, #0
   11a88:	beq	11bb4 <closedir@plt+0x878>
   11a8c:	ldrb	r2, [r0, #19]
   11a90:	add	r9, r0, #19
   11a94:	cmp	r2, #46	; 0x2e
   11a98:	beq	11a5c <closedir@plt+0x720>
   11a9c:	ldrd	r0, [r0]
   11aa0:	orrs	r2, r0, r1
   11aa4:	movne	r3, r7
   11aa8:	orreq	r3, r7, #1
   11aac:	cmp	r3, #0
   11ab0:	bne	11bd8 <closedir@plt+0x89c>
   11ab4:	ldrd	r2, [sp, #168]	; 0xa8
   11ab8:	cmp	r3, r1
   11abc:	cmpeq	r2, r0
   11ac0:	bne	11a54 <closedir@plt+0x718>
   11ac4:	cmp	r7, #0
   11ac8:	beq	11ae8 <closedir@plt+0x7ac>
   11acc:	add	r3, sp, #512	; 0x200
   11ad0:	add	ip, sp, #392	; 0x188
   11ad4:	ldrd	r0, [r3, #-232]	; 0xffffff18
   11ad8:	ldrd	r2, [ip, fp]
   11adc:	cmp	r1, r3
   11ae0:	cmpeq	r0, r2
   11ae4:	bne	11a54 <closedir@plt+0x718>
   11ae8:	mov	r0, r9
   11aec:	mov	r4, #1
   11af0:	bl	1121c <strlen@plt>
   11af4:	mov	r1, r9
   11af8:	mov	r2, r0
   11afc:	ldr	r0, [sp, #24]
   11b00:	bl	11810 <closedir@plt+0x4d4>
   11b04:	cmp	r6, #0
   11b08:	beq	11b1c <closedir@plt+0x7e0>
   11b0c:	mov	r0, r6
   11b10:	bl	1133c <closedir@plt>
   11b14:	cmp	r0, #0
   11b18:	beq	11b58 <closedir@plt+0x81c>
   11b1c:	ldr	r5, [sl]
   11b20:	ldr	r1, [pc, #676]	; 11dcc <closedir@plt+0xa90>
   11b24:	mov	r2, #5
   11b28:	mov	r0, #0
   11b2c:	add	r1, pc, r1
   11b30:	bl	110e4 <dcgettext@plt>
   11b34:	mov	r6, r0
   11b38:	ldr	r0, [sp, #4]
   11b3c:	bl	11798 <closedir@plt+0x45c>
   11b40:	bl	13a44 <close_stdout@@Base+0x1a0c>
   11b44:	mov	r2, r6
   11b48:	mov	r1, r5
   11b4c:	mov	r3, r0
   11b50:	mov	r0, #1
   11b54:	bl	11180 <error@plt>
   11b58:	cmp	r4, #0
   11b5c:	bne	11b98 <closedir@plt+0x85c>
   11b60:	ldr	r1, [pc, #616]	; 11dd0 <closedir@plt+0xa94>
   11b64:	mov	r2, #5
   11b68:	mov	r0, r4
   11b6c:	add	r1, pc, r1
   11b70:	bl	110e4 <dcgettext@plt>
   11b74:	mov	r5, r0
   11b78:	ldr	r0, [sp, #4]
   11b7c:	bl	11798 <closedir@plt+0x45c>
   11b80:	bl	13a44 <close_stdout@@Base+0x1a0c>
   11b84:	mov	r2, r5
   11b88:	mov	r1, r4
   11b8c:	mov	r3, r0
   11b90:	mov	r0, #1
   11b94:	bl	11180 <error@plt>
   11b98:	ldr	ip, [sp, #16]
   11b9c:	add	r0, sp, #72	; 0x48
   11ba0:	ldr	r1, [sp, #8]
   11ba4:	mov	r2, #104	; 0x68
   11ba8:	str	ip, [sp, #4]
   11bac:	bl	110c0 <memcpy@plt>
   11bb0:	b	1197c <closedir@plt+0x640>
   11bb4:	ldr	r5, [sl]
   11bb8:	mov	r4, r0
   11bbc:	cmp	r5, #0
   11bc0:	moveq	r4, r5
   11bc4:	beq	11b04 <closedir@plt+0x7c8>
   11bc8:	mov	r0, r6
   11bcc:	bl	1133c <closedir@plt>
   11bd0:	str	r5, [sl]
   11bd4:	b	11b20 <closedir@plt+0x7e4>
   11bd8:	mov	r0, #3
   11bdc:	mov	r1, r9
   11be0:	mov	r2, r4
   11be4:	bl	11330 <__lxstat64@plt>
   11be8:	cmp	r0, #0
   11bec:	blt	11a54 <closedir@plt+0x718>
   11bf0:	add	r2, sp, #512	; 0x200
   11bf4:	ldrd	r0, [r2, #-136]	; 0xffffff78
   11bf8:	b	11ab4 <closedir@plt+0x778>
   11bfc:	ldr	r1, [sp, #52]	; 0x34
   11c00:	mov	r2, #5
   11c04:	mov	r0, #0
   11c08:	ldr	r4, [sl]
   11c0c:	bl	110e4 <dcgettext@plt>
   11c10:	mov	r5, r0
   11c14:	ldr	r0, [sp, #4]
   11c18:	bl	11798 <closedir@plt+0x45c>
   11c1c:	bl	13a44 <close_stdout@@Base+0x1a0c>
   11c20:	mov	r1, r4
   11c24:	mov	r2, r5
   11c28:	mov	r3, r0
   11c2c:	mov	r0, #1
   11c30:	bl	11180 <error@plt>
   11c34:	b	11a24 <closedir@plt+0x6e8>
   11c38:	mov	r0, #3
   11c3c:	ldr	r1, [sp, #48]	; 0x30
   11c40:	mov	r2, ip
   11c44:	bl	11300 <__xstat64@plt>
   11c48:	lsr	r0, r0, #31
   11c4c:	b	11a1c <closedir@plt+0x6e0>
   11c50:	ldr	r1, [sp, #44]	; 0x2c
   11c54:	mov	r2, #5
   11c58:	mov	r0, #0
   11c5c:	ldr	r5, [sl]
   11c60:	bl	110e4 <dcgettext@plt>
   11c64:	mov	r7, r0
   11c68:	ldr	r0, [sp, #4]
   11c6c:	bl	11798 <closedir@plt+0x45c>
   11c70:	bl	13a44 <close_stdout@@Base+0x1a0c>
   11c74:	mov	r1, r5
   11c78:	mov	r2, r7
   11c7c:	mov	r3, r0
   11c80:	mov	r0, #1
   11c84:	bl	11180 <error@plt>
   11c88:	b	119f8 <closedir@plt+0x6bc>
   11c8c:	ldr	r0, [sp, #40]	; 0x28
   11c90:	bl	11114 <chdir@plt>
   11c94:	lsr	r0, r0, #31
   11c98:	b	119f0 <closedir@plt+0x6b4>
   11c9c:	bl	11234 <__errno_location@plt>
   11ca0:	ldr	r1, [sp, #36]	; 0x24
   11ca4:	mov	r2, #5
   11ca8:	mov	sl, r0
   11cac:	mov	r0, r6
   11cb0:	ldr	r4, [sl]
   11cb4:	bl	110e4 <dcgettext@plt>
   11cb8:	mov	r5, r0
   11cbc:	ldr	r0, [sp, #4]
   11cc0:	bl	11798 <closedir@plt+0x45c>
   11cc4:	bl	13a44 <close_stdout@@Base+0x1a0c>
   11cc8:	mov	r1, r4
   11ccc:	mov	r2, r5
   11cd0:	mov	r3, r0
   11cd4:	mov	r0, #1
   11cd8:	bl	11180 <error@plt>
   11cdc:	b	119d8 <closedir@plt+0x69c>
   11ce0:	ldr	ip, [sp, #24]
   11ce4:	ldr	r3, [ip, #8]
   11ce8:	ldrb	r2, [r3]
   11cec:	cmp	r2, #0
   11cf0:	bne	11d04 <closedir@plt+0x9c8>
   11cf4:	ldr	r1, [pc, #216]	; 11dd4 <closedir@plt+0xa98>
   11cf8:	mov	r0, ip
   11cfc:	add	r1, pc, r1
   11d00:	bl	11810 <closedir@plt+0x4d4>
   11d04:	ldr	ip, [sp, #32]
   11d08:	ldr	r2, [sp, #388]	; 0x184
   11d0c:	ldr	r3, [ip]
   11d10:	cmp	r2, r3
   11d14:	bne	11d64 <closedir@plt+0xa28>
   11d18:	add	sp, sp, #396	; 0x18c
   11d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d20:	bl	11234 <__errno_location@plt>
   11d24:	ldr	r1, [pc, #172]	; 11dd8 <closedir@plt+0xa9c>
   11d28:	mov	r2, #5
   11d2c:	add	r1, pc, r1
   11d30:	ldr	r4, [r0]
   11d34:	ldr	r0, [sp, #12]
   11d38:	bl	110e4 <dcgettext@plt>
   11d3c:	mov	r5, r0
   11d40:	ldr	r0, [pc, #148]	; 11ddc <closedir@plt+0xaa0>
   11d44:	add	r0, pc, r0
   11d48:	bl	13a44 <close_stdout@@Base+0x1a0c>
   11d4c:	mov	r1, r4
   11d50:	mov	r2, r5
   11d54:	mov	r3, r0
   11d58:	mov	r0, #1
   11d5c:	bl	11180 <error@plt>
   11d60:	b	11904 <closedir@plt+0x5c8>
   11d64:	bl	110f0 <__stack_chk_fail@plt>
   11d68:	bl	11234 <__errno_location@plt>
   11d6c:	ldr	r1, [pc, #108]	; 11de0 <closedir@plt+0xaa4>
   11d70:	mov	r2, #5
   11d74:	add	r1, pc, r1
   11d78:	ldr	r5, [r0]
   11d7c:	mov	r0, #0
   11d80:	bl	110e4 <dcgettext@plt>
   11d84:	mov	r6, r0
   11d88:	mov	r0, r4
   11d8c:	bl	13a44 <close_stdout@@Base+0x1a0c>
   11d90:	mov	r1, r5
   11d94:	mov	r2, r6
   11d98:	mov	r3, r0
   11d9c:	mov	r0, #1
   11da0:	bl	11180 <error@plt>
   11da4:	b	1192c <closedir@plt+0x5f0>
   11da8:	andeq	r4, r1, r4, lsr #14
   11dac:	andeq	r0, r0, ip, lsl #2
   11db0:	andeq	r3, r0, r0, lsr #6
   11db4:	andeq	r3, r0, ip, lsl r3
   11db8:	andeq	r3, r0, ip, lsl #6
   11dbc:	strdeq	r3, [r0], -ip
   11dc0:	andeq	r3, r0, r0, lsl r3
   11dc4:	andeq	r3, r0, ip, asr #5
   11dc8:	andeq	r3, r0, r4, asr #5
   11dcc:	andeq	r3, r0, r8, asr r1
   11dd0:	andeq	r3, r0, r0, lsr r1
   11dd4:	ldrdeq	r3, [r0], -r0
   11dd8:	andeq	r2, r0, r4, ror #29
   11ddc:	andeq	r2, r0, ip, ror #29
   11de0:	andeq	r2, r0, r4, asr #29
   11de4:	push	{r4, r5, r6, lr}
   11de8:	subs	r4, r0, #0
   11dec:	ldr	r5, [pc, #468]	; 11fc8 <closedir@plt+0xc8c>
   11df0:	add	r5, pc, r5
   11df4:	beq	11e3c <closedir@plt+0xb00>
   11df8:	ldr	r3, [pc, #460]	; 11fcc <closedir@plt+0xc90>
   11dfc:	mov	r2, #5
   11e00:	ldr	r1, [pc, #456]	; 11fd0 <closedir@plt+0xc94>
   11e04:	mov	r0, #0
   11e08:	ldr	r3, [r5, r3]
   11e0c:	add	r1, pc, r1
   11e10:	ldr	r6, [r3]
   11e14:	bl	110e4 <dcgettext@plt>
   11e18:	ldr	r3, [pc, #436]	; 11fd4 <closedir@plt+0xc98>
   11e1c:	mov	r1, #1
   11e20:	ldr	r3, [r5, r3]
   11e24:	ldr	r3, [r3]
   11e28:	mov	r2, r0
   11e2c:	mov	r0, r6
   11e30:	bl	1127c <__fprintf_chk@plt>
   11e34:	mov	r0, r4
   11e38:	bl	11210 <exit@plt>
   11e3c:	ldr	r1, [pc, #404]	; 11fd8 <closedir@plt+0xc9c>
   11e40:	mov	r2, #5
   11e44:	add	r1, pc, r1
   11e48:	bl	110e4 <dcgettext@plt>
   11e4c:	ldr	r3, [pc, #384]	; 11fd4 <closedir@plt+0xc98>
   11e50:	ldr	r6, [r5, r3]
   11e54:	ldr	r2, [r6]
   11e58:	mov	r1, r0
   11e5c:	mov	r0, #1
   11e60:	bl	11264 <__printf_chk@plt>
   11e64:	ldr	r1, [pc, #368]	; 11fdc <closedir@plt+0xca0>
   11e68:	mov	r2, #5
   11e6c:	mov	r0, r4
   11e70:	add	r1, pc, r1
   11e74:	bl	110e4 <dcgettext@plt>
   11e78:	ldr	r3, [pc, #352]	; 11fe0 <closedir@plt+0xca4>
   11e7c:	ldr	r5, [r5, r3]
   11e80:	ldr	r1, [r5]
   11e84:	bl	1106c <fputs_unlocked@plt>
   11e88:	ldr	r1, [pc, #340]	; 11fe4 <closedir@plt+0xca8>
   11e8c:	mov	r2, #5
   11e90:	mov	r0, r4
   11e94:	add	r1, pc, r1
   11e98:	bl	110e4 <dcgettext@plt>
   11e9c:	ldr	r1, [r5]
   11ea0:	bl	1106c <fputs_unlocked@plt>
   11ea4:	ldr	r1, [pc, #316]	; 11fe8 <closedir@plt+0xcac>
   11ea8:	mov	r2, #5
   11eac:	mov	r0, r4
   11eb0:	add	r1, pc, r1
   11eb4:	bl	110e4 <dcgettext@plt>
   11eb8:	ldr	r1, [r5]
   11ebc:	bl	1106c <fputs_unlocked@plt>
   11ec0:	ldr	r1, [pc, #292]	; 11fec <closedir@plt+0xcb0>
   11ec4:	mov	r2, #5
   11ec8:	mov	r0, r4
   11ecc:	add	r1, pc, r1
   11ed0:	bl	110e4 <dcgettext@plt>
   11ed4:	ldr	r1, [r5]
   11ed8:	bl	1106c <fputs_unlocked@plt>
   11edc:	ldr	r1, [pc, #268]	; 11ff0 <closedir@plt+0xcb4>
   11ee0:	mov	r2, #5
   11ee4:	mov	r0, r4
   11ee8:	add	r1, pc, r1
   11eec:	bl	110e4 <dcgettext@plt>
   11ef0:	ldr	r2, [pc, #252]	; 11ff4 <closedir@plt+0xcb8>
   11ef4:	add	r2, pc, r2
   11ef8:	mov	r1, r0
   11efc:	mov	r0, #1
   11f00:	bl	11264 <__printf_chk@plt>
   11f04:	ldr	r1, [pc, #236]	; 11ff8 <closedir@plt+0xcbc>
   11f08:	mov	r2, #5
   11f0c:	mov	r0, r4
   11f10:	add	r1, pc, r1
   11f14:	bl	110e4 <dcgettext@plt>
   11f18:	ldr	r2, [pc, #220]	; 11ffc <closedir@plt+0xcc0>
   11f1c:	ldr	r3, [pc, #220]	; 12000 <closedir@plt+0xcc4>
   11f20:	add	r2, pc, r2
   11f24:	add	r3, pc, r3
   11f28:	mov	r1, r0
   11f2c:	mov	r0, #1
   11f30:	bl	11264 <__printf_chk@plt>
   11f34:	mov	r0, #5
   11f38:	mov	r1, r4
   11f3c:	bl	112ac <setlocale@plt>
   11f40:	cmp	r0, #0
   11f44:	beq	11f60 <closedir@plt+0xc24>
   11f48:	ldr	r1, [pc, #180]	; 12004 <closedir@plt+0xcc8>
   11f4c:	mov	r2, #3
   11f50:	add	r1, pc, r1
   11f54:	bl	1130c <strncmp@plt>
   11f58:	cmp	r0, #0
   11f5c:	bne	11f94 <closedir@plt+0xc58>
   11f60:	ldr	r1, [pc, #160]	; 12008 <closedir@plt+0xccc>
   11f64:	mov	r2, #5
   11f68:	mov	r0, #0
   11f6c:	add	r1, pc, r1
   11f70:	bl	110e4 <dcgettext@plt>
   11f74:	mov	r5, r0
   11f78:	ldr	r0, [r6]
   11f7c:	bl	12150 <close_stdout@@Base+0x118>
   11f80:	mov	r1, r5
   11f84:	mov	r2, r0
   11f88:	mov	r0, #1
   11f8c:	bl	11264 <__printf_chk@plt>
   11f90:	b	11e34 <closedir@plt+0xaf8>
   11f94:	ldr	r1, [pc, #112]	; 1200c <closedir@plt+0xcd0>
   11f98:	mov	r2, #5
   11f9c:	mov	r0, r4
   11fa0:	add	r1, pc, r1
   11fa4:	bl	110e4 <dcgettext@plt>
   11fa8:	mov	r5, r0
   11fac:	ldr	r0, [r6]
   11fb0:	bl	12150 <close_stdout@@Base+0x118>
   11fb4:	mov	r1, r5
   11fb8:	mov	r2, r0
   11fbc:	mov	r0, #1
   11fc0:	bl	11264 <__printf_chk@plt>
   11fc4:	b	11f60 <closedir@plt+0xc24>
   11fc8:	andeq	r4, r1, r8, lsl #4
   11fcc:	andeq	r0, r0, r8, lsl r1
   11fd0:	andeq	r2, r0, ip, asr #29
   11fd4:	andeq	r0, r0, r4, lsr r1
   11fd8:			; <UNDEFINED> instruction: 0x00002ebc
   11fdc:	andeq	r2, r0, r8, lsr #29
   11fe0:	andeq	r0, r0, r8, lsr #2
   11fe4:	andeq	r2, r0, r0, asr #29
   11fe8:	andeq	r2, r0, r4, lsl pc
   11fec:	andeq	r2, r0, r8, lsr #30
   11ff0:	andeq	r2, r0, r4, asr #30
   11ff4:	strdeq	r2, [r0], -r8
   11ff8:	andeq	r2, r0, r0, ror #31
   11ffc:	andeq	r2, r0, r8, ror #31
   12000:	strdeq	r2, [r0], -r4
   12004:	strdeq	r2, [r0], -r0
   12008:	andeq	r3, r0, r0, lsr #32
   1200c:	andeq	r2, r0, r4, lsr #31
   12010:	ldr	r3, [pc, #8]	; 12020 <closedir@plt+0xce4>
   12014:	add	r3, pc, r3
   12018:	str	r0, [r3]
   1201c:	bx	lr
   12020:	andeq	r4, r1, r4, ror r1
   12024:	ldr	r3, [pc, #8]	; 12034 <closedir@plt+0xcf8>
   12028:	add	r3, pc, r3
   1202c:	strb	r0, [r3, #4]
   12030:	bx	lr
   12034:	andeq	r4, r1, r0, ror #2

00012038 <close_stdout@@Base>:
   12038:	push	{r4, r5, r6, r7, lr}
   1203c:	sub	sp, sp, #12
   12040:	ldr	r4, [pc, #228]	; 1212c <close_stdout@@Base+0xf4>
   12044:	ldr	r3, [pc, #228]	; 12130 <close_stdout@@Base+0xf8>
   12048:	add	r4, pc, r4
   1204c:	ldr	r3, [r4, r3]
   12050:	ldr	r0, [r3]
   12054:	bl	1430c <close_stdout@@Base+0x22d4>
   12058:	cmp	r0, #0
   1205c:	beq	12084 <close_stdout@@Base+0x4c>
   12060:	ldr	r3, [pc, #204]	; 12134 <close_stdout@@Base+0xfc>
   12064:	add	r3, pc, r3
   12068:	ldrb	r3, [r3, #4]
   1206c:	cmp	r3, #0
   12070:	beq	120a4 <close_stdout@@Base+0x6c>
   12074:	bl	11234 <__errno_location@plt>
   12078:	ldr	r3, [r0]
   1207c:	cmp	r3, #32
   12080:	bne	120a4 <close_stdout@@Base+0x6c>
   12084:	ldr	r3, [pc, #172]	; 12138 <close_stdout@@Base+0x100>
   12088:	ldr	r3, [r4, r3]
   1208c:	ldr	r0, [r3]
   12090:	bl	1430c <close_stdout@@Base+0x22d4>
   12094:	cmp	r0, #0
   12098:	bne	120f8 <close_stdout@@Base+0xc0>
   1209c:	add	sp, sp, #12
   120a0:	pop	{r4, r5, r6, r7, pc}
   120a4:	ldr	r1, [pc, #144]	; 1213c <close_stdout@@Base+0x104>
   120a8:	mov	r0, #0
   120ac:	mov	r2, #5
   120b0:	add	r1, pc, r1
   120b4:	bl	110e4 <dcgettext@plt>
   120b8:	ldr	r3, [pc, #128]	; 12140 <close_stdout@@Base+0x108>
   120bc:	ldr	r5, [pc, r3]
   120c0:	cmp	r5, #0
   120c4:	mov	r6, r0
   120c8:	beq	12108 <close_stdout@@Base+0xd0>
   120cc:	bl	11234 <__errno_location@plt>
   120d0:	ldr	r7, [r0]
   120d4:	mov	r0, r5
   120d8:	bl	138f0 <close_stdout@@Base+0x18b8>
   120dc:	ldr	r2, [pc, #96]	; 12144 <close_stdout@@Base+0x10c>
   120e0:	str	r6, [sp]
   120e4:	mov	r1, r7
   120e8:	add	r2, pc, r2
   120ec:	mov	r3, r0
   120f0:	mov	r0, #0
   120f4:	bl	11180 <error@plt>
   120f8:	ldr	r3, [pc, #72]	; 12148 <close_stdout@@Base+0x110>
   120fc:	ldr	r3, [r4, r3]
   12100:	ldr	r0, [r3]
   12104:	bl	110b4 <_exit@plt>
   12108:	bl	11234 <__errno_location@plt>
   1210c:	ldr	r2, [pc, #56]	; 1214c <close_stdout@@Base+0x114>
   12110:	add	r2, pc, r2
   12114:	mov	r3, r0
   12118:	mov	r0, r5
   1211c:	ldr	r1, [r3]
   12120:	mov	r3, r6
   12124:	bl	11180 <error@plt>
   12128:	b	120f8 <close_stdout@@Base+0xc0>
   1212c:			; <UNDEFINED> instruction: 0x00013fb0
   12130:	andeq	r0, r0, r8, lsr #2
   12134:	andeq	r4, r1, r4, lsr #2
   12138:	andeq	r0, r0, r8, lsl r1
   1213c:	andeq	r2, r0, ip, lsr #31
   12140:	andeq	r4, r1, ip, asr #1
   12144:	andeq	r2, r0, r0, lsl #31
   12148:	andeq	r0, r0, ip, lsr #2
   1214c:	andeq	r2, r0, ip, asr pc
   12150:	ldrb	r3, [r0]
   12154:	cmp	r3, #47	; 0x2f
   12158:	bne	12174 <close_stdout@@Base+0x13c>
   1215c:	add	r2, r0, #1
   12160:	mov	r0, r2
   12164:	add	r2, r2, #1
   12168:	ldrb	r3, [r0]
   1216c:	cmp	r3, #47	; 0x2f
   12170:	beq	12160 <close_stdout@@Base+0x128>
   12174:	cmp	r3, #0
   12178:	bxeq	lr
   1217c:	mov	r2, r0
   12180:	mov	r1, #0
   12184:	cmp	r3, #47	; 0x2f
   12188:	moveq	r1, #1
   1218c:	beq	1219c <close_stdout@@Base+0x164>
   12190:	cmp	r1, #0
   12194:	movne	r0, r2
   12198:	movne	r1, #0
   1219c:	ldrb	r3, [r2, #1]!
   121a0:	cmp	r3, #0
   121a4:	bne	12184 <close_stdout@@Base+0x14c>
   121a8:	bx	lr
   121ac:	push	{r4, lr}
   121b0:	mov	r4, r0
   121b4:	bl	1121c <strlen@plt>
   121b8:	cmp	r0, #1
   121bc:	popls	{r4, pc}
   121c0:	sub	r3, r0, #1
   121c4:	ldrb	r2, [r4, r3]
   121c8:	cmp	r2, #47	; 0x2f
   121cc:	popne	{r4, pc}
   121d0:	mov	r0, r3
   121d4:	cmp	r0, #1
   121d8:	sub	r3, r3, #1
   121dc:	beq	121f0 <close_stdout@@Base+0x1b8>
   121e0:	ldrb	r2, [r4, r3]
   121e4:	cmp	r2, #47	; 0x2f
   121e8:	popne	{r4, pc}
   121ec:	b	121d0 <close_stdout@@Base+0x198>
   121f0:	pop	{r4, pc}
   121f4:	push	{r3, r4, r5, r6, r7, lr}
   121f8:	subs	r4, r0, #0
   121fc:	ldr	r5, [pc, #172]	; 122b0 <close_stdout@@Base+0x278>
   12200:	add	r5, pc, r5
   12204:	beq	1228c <close_stdout@@Base+0x254>
   12208:	mov	r1, #47	; 0x2f
   1220c:	bl	112b8 <strrchr@plt>
   12210:	subs	r6, r0, #0
   12214:	beq	12270 <close_stdout@@Base+0x238>
   12218:	add	r7, r6, #1
   1221c:	rsb	r3, r4, r7
   12220:	cmp	r3, #6
   12224:	ble	12270 <close_stdout@@Base+0x238>
   12228:	ldr	r1, [pc, #132]	; 122b4 <close_stdout@@Base+0x27c>
   1222c:	sub	r0, r6, #6
   12230:	mov	r2, #7
   12234:	add	r1, pc, r1
   12238:	bl	1130c <strncmp@plt>
   1223c:	cmp	r0, #0
   12240:	bne	12270 <close_stdout@@Base+0x238>
   12244:	ldr	r1, [pc, #108]	; 122b8 <close_stdout@@Base+0x280>
   12248:	mov	r0, r7
   1224c:	mov	r2, #3
   12250:	add	r1, pc, r1
   12254:	bl	1130c <strncmp@plt>
   12258:	cmp	r0, #0
   1225c:	movne	r4, r7
   12260:	ldreq	r3, [pc, #84]	; 122bc <close_stdout@@Base+0x284>
   12264:	addeq	r4, r6, #4
   12268:	ldreq	r3, [r5, r3]
   1226c:	streq	r4, [r3]
   12270:	ldr	r2, [pc, #72]	; 122c0 <close_stdout@@Base+0x288>
   12274:	ldr	r3, [pc, #72]	; 122c4 <close_stdout@@Base+0x28c>
   12278:	ldr	r2, [r5, r2]
   1227c:	str	r4, [r2]
   12280:	ldr	r3, [r5, r3]
   12284:	str	r4, [r3]
   12288:	pop	{r3, r4, r5, r6, r7, pc}
   1228c:	ldr	r3, [pc, #52]	; 122c8 <close_stdout@@Base+0x290>
   12290:	mov	r1, #1
   12294:	ldr	r0, [pc, #48]	; 122cc <close_stdout@@Base+0x294>
   12298:	mov	r2, #55	; 0x37
   1229c:	ldr	r3, [r5, r3]
   122a0:	add	r0, pc, r0
   122a4:	ldr	r3, [r3]
   122a8:	bl	11138 <fwrite@plt>
   122ac:	bl	11318 <abort@plt>
   122b0:	strdeq	r3, [r1], -r8
   122b4:	andeq	r2, r0, r4, ror lr
   122b8:	andeq	r2, r0, r0, ror #28
   122bc:	andeq	r0, r0, ip, lsr r1
   122c0:	andeq	r0, r0, r4, lsr r1
   122c4:	andeq	r0, r0, r0, lsr r1
   122c8:	andeq	r0, r0, r8, lsl r1
   122cc:	ldrdeq	r2, [r0], -r0
   122d0:	push	{r3, lr}
   122d4:	mov	r3, r0
   122d8:	mov	r2, #0
   122dc:	cmp	r1, #8
   122e0:	str	r2, [r3], #4
   122e4:	add	r3, r3, #4
   122e8:	str	r2, [r0, #4]
   122ec:	str	r2, [r3], #4
   122f0:	str	r2, [r3], #4
   122f4:	str	r2, [r3], #4
   122f8:	str	r2, [r3], #4
   122fc:	str	r2, [r3], #4
   12300:	str	r2, [r3], #4
   12304:	str	r2, [r3], #4
   12308:	str	r2, [r3], #4
   1230c:	str	r2, [r3], #4
   12310:	str	r2, [r3]
   12314:	beq	12320 <close_stdout@@Base+0x2e8>
   12318:	str	r1, [r0]
   1231c:	pop	{r3, pc}
   12320:	bl	11318 <abort@plt>
   12324:	push	{r4, r5, r6, lr}
   12328:	mov	r4, r0
   1232c:	mov	r6, r1
   12330:	mov	r0, #0
   12334:	mov	r1, r4
   12338:	mov	r2, #5
   1233c:	bl	110e4 <dcgettext@plt>
   12340:	cmp	r0, r4
   12344:	mov	r5, r0
   12348:	beq	12350 <close_stdout@@Base+0x318>
   1234c:	pop	{r4, r5, r6, pc}
   12350:	bl	1438c <close_stdout@@Base+0x2354>
   12354:	ldrb	r3, [r0]
   12358:	bic	r3, r3, #32
   1235c:	cmp	r3, #85	; 0x55
   12360:	bne	123d4 <close_stdout@@Base+0x39c>
   12364:	ldrb	r3, [r0, #1]
   12368:	bic	r3, r3, #32
   1236c:	cmp	r3, #84	; 0x54
   12370:	bne	123c0 <close_stdout@@Base+0x388>
   12374:	ldrb	r3, [r0, #2]
   12378:	bic	r3, r3, #32
   1237c:	cmp	r3, #70	; 0x46
   12380:	bne	123c0 <close_stdout@@Base+0x388>
   12384:	ldrb	r3, [r0, #3]
   12388:	cmp	r3, #45	; 0x2d
   1238c:	bne	123c0 <close_stdout@@Base+0x388>
   12390:	ldrb	r3, [r0, #4]
   12394:	cmp	r3, #56	; 0x38
   12398:	bne	123c0 <close_stdout@@Base+0x388>
   1239c:	ldrb	r3, [r0, #5]
   123a0:	cmp	r3, #0
   123a4:	bne	123c0 <close_stdout@@Base+0x388>
   123a8:	ldrb	r3, [r5]
   123ac:	cmp	r3, #96	; 0x60
   123b0:	beq	1244c <close_stdout@@Base+0x414>
   123b4:	ldr	r0, [pc, #180]	; 12470 <close_stdout@@Base+0x438>
   123b8:	add	r0, pc, r0
   123bc:	pop	{r4, r5, r6, pc}
   123c0:	cmp	r6, #7
   123c4:	beq	12458 <close_stdout@@Base+0x420>
   123c8:	ldr	r0, [pc, #164]	; 12474 <close_stdout@@Base+0x43c>
   123cc:	add	r0, pc, r0
   123d0:	pop	{r4, r5, r6, pc}
   123d4:	cmp	r3, #71	; 0x47
   123d8:	bne	123c0 <close_stdout@@Base+0x388>
   123dc:	ldrb	r3, [r0, #1]
   123e0:	bic	r3, r3, #32
   123e4:	cmp	r3, #66	; 0x42
   123e8:	bne	123c0 <close_stdout@@Base+0x388>
   123ec:	ldrb	r3, [r0, #2]
   123f0:	cmp	r3, #49	; 0x31
   123f4:	bne	123c0 <close_stdout@@Base+0x388>
   123f8:	ldrb	r3, [r0, #3]
   123fc:	cmp	r3, #56	; 0x38
   12400:	bne	123c0 <close_stdout@@Base+0x388>
   12404:	ldrb	r3, [r0, #4]
   12408:	cmp	r3, #48	; 0x30
   1240c:	bne	123c0 <close_stdout@@Base+0x388>
   12410:	ldrb	r3, [r0, #5]
   12414:	cmp	r3, #51	; 0x33
   12418:	bne	123c0 <close_stdout@@Base+0x388>
   1241c:	ldrb	r3, [r0, #6]
   12420:	cmp	r3, #48	; 0x30
   12424:	bne	123c0 <close_stdout@@Base+0x388>
   12428:	ldrb	r3, [r0, #7]
   1242c:	cmp	r3, #0
   12430:	bne	123c0 <close_stdout@@Base+0x388>
   12434:	ldrb	r3, [r5]
   12438:	cmp	r3, #96	; 0x60
   1243c:	beq	12464 <close_stdout@@Base+0x42c>
   12440:	ldr	r0, [pc, #48]	; 12478 <close_stdout@@Base+0x440>
   12444:	add	r0, pc, r0
   12448:	pop	{r4, r5, r6, pc}
   1244c:	ldr	r0, [pc, #40]	; 1247c <close_stdout@@Base+0x444>
   12450:	add	r0, pc, r0
   12454:	pop	{r4, r5, r6, pc}
   12458:	ldr	r0, [pc, #32]	; 12480 <close_stdout@@Base+0x448>
   1245c:	add	r0, pc, r0
   12460:	pop	{r4, r5, r6, pc}
   12464:	ldr	r0, [pc, #24]	; 12484 <close_stdout@@Base+0x44c>
   12468:	add	r0, pc, r0
   1246c:	pop	{r4, r5, r6, pc}
   12470:	andeq	r2, r0, ip, lsl sp
   12474:	andeq	r2, r0, r0, lsl sp
   12478:	muleq	r0, r4, ip
   1247c:	muleq	r0, r8, ip
   12480:	andeq	r2, r0, r4, lsl #25
   12484:	andeq	r2, r0, ip, ror ip
   12488:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1248c:	sub	sp, sp, #124	; 0x7c
   12490:	ldr	ip, [pc, #3304]	; 13180 <close_stdout@@Base+0x1148>
   12494:	mov	sl, r1
   12498:	str	r0, [sp, #40]	; 0x28
   1249c:	mov	r8, r3
   124a0:	ldr	r0, [pc, #3292]	; 13184 <close_stdout@@Base+0x114c>
   124a4:	add	ip, pc, ip
   124a8:	str	r2, [sp, #32]
   124ac:	ldr	r1, [sp, #164]	; 0xa4
   124b0:	mov	r3, ip
   124b4:	ldr	r0, [ip, r0]
   124b8:	ldr	r2, [sp, #172]	; 0xac
   124bc:	ubfx	r1, r1, #1, #1
   124c0:	str	r1, [sp, #36]	; 0x24
   124c4:	str	r0, [sp, #56]	; 0x38
   124c8:	ldr	r0, [sp, #168]	; 0xa8
   124cc:	ldr	r1, [sp, #176]	; 0xb0
   124d0:	str	r2, [sp, #72]	; 0x48
   124d4:	str	r0, [sp, #48]	; 0x30
   124d8:	ldr	r0, [sp, #56]	; 0x38
   124dc:	str	r1, [sp, #68]	; 0x44
   124e0:	ldr	r3, [r0]
   124e4:	str	r3, [sp, #116]	; 0x74
   124e8:	bl	11150 <__ctype_get_mb_cur_max@plt>
   124ec:	ldr	r2, [sp, #160]	; 0xa0
   124f0:	str	r0, [sp, #64]	; 0x40
   124f4:	cmp	r2, #8
   124f8:	addls	pc, pc, r2, lsl #2
   124fc:	b	1305c <close_stdout@@Base+0x1024>
   12500:	b	12524 <close_stdout@@Base+0x4ec>
   12504:	b	12d74 <close_stdout@@Base+0xd3c>
   12508:	b	12da4 <close_stdout@@Base+0xd6c>
   1250c:	b	12c54 <close_stdout@@Base+0xc1c>
   12510:	b	12c94 <close_stdout@@Base+0xc5c>
   12514:	b	12cc0 <close_stdout@@Base+0xc88>
   12518:	b	12ce0 <close_stdout@@Base+0xca8>
   1251c:	b	12ce0 <close_stdout@@Base+0xca8>
   12520:	b	12ce0 <close_stdout@@Base+0xca8>
   12524:	mov	r2, #0
   12528:	str	r2, [sp, #36]	; 0x24
   1252c:	mov	r9, r2
   12530:	str	r2, [sp, #24]
   12534:	str	r2, [sp, #28]
   12538:	str	r2, [sp, #52]	; 0x34
   1253c:	ldr	r0, [sp, #36]	; 0x24
   12540:	mov	fp, #0
   12544:	ldr	r1, [sp, #24]
   12548:	eor	r2, r0, #1
   1254c:	eor	r3, r1, #1
   12550:	and	r3, r2, r3
   12554:	and	r2, r1, r0
   12558:	str	r3, [sp, #44]	; 0x2c
   1255c:	str	r2, [sp, #76]	; 0x4c
   12560:	cmn	r8, #1
   12564:	beq	128e4 <close_stdout@@Base+0x8ac>
   12568:	subs	r3, fp, r8
   1256c:	movne	r3, #1
   12570:	cmp	r3, #0
   12574:	beq	128fc <close_stdout@@Base+0x8c4>
   12578:	ldr	r3, [sp, #28]
   1257c:	ldr	r0, [sp, #24]
   12580:	adds	r7, r3, #0
   12584:	movne	r7, #1
   12588:	ands	r6, r7, r0
   1258c:	bne	12de8 <close_stdout@@Base+0xdb0>
   12590:	ldr	r1, [sp, #32]
   12594:	add	r5, r1, fp
   12598:	ldrb	r4, [r5]
   1259c:	cmp	r4, #126	; 0x7e
   125a0:	addls	pc, pc, r4, lsl #2
   125a4:	b	12b68 <close_stdout@@Base+0xb30>
   125a8:	b	12a74 <close_stdout@@Base+0xa3c>
   125ac:	b	12b68 <close_stdout@@Base+0xb30>
   125b0:	b	12b68 <close_stdout@@Base+0xb30>
   125b4:	b	12b68 <close_stdout@@Base+0xb30>
   125b8:	b	12b68 <close_stdout@@Base+0xb30>
   125bc:	b	12b68 <close_stdout@@Base+0xb30>
   125c0:	b	12b68 <close_stdout@@Base+0xb30>
   125c4:	b	12a5c <close_stdout@@Base+0xa24>
   125c8:	b	12a44 <close_stdout@@Base+0xa0c>
   125cc:	b	12a6c <close_stdout@@Base+0xa34>
   125d0:	b	12a64 <close_stdout@@Base+0xa2c>
   125d4:	b	12a54 <close_stdout@@Base+0xa1c>
   125d8:	b	12a4c <close_stdout@@Base+0xa14>
   125dc:	b	12a10 <close_stdout@@Base+0x9d8>
   125e0:	b	12b68 <close_stdout@@Base+0xb30>
   125e4:	b	12b68 <close_stdout@@Base+0xb30>
   125e8:	b	12b68 <close_stdout@@Base+0xb30>
   125ec:	b	12b68 <close_stdout@@Base+0xb30>
   125f0:	b	12b68 <close_stdout@@Base+0xb30>
   125f4:	b	12b68 <close_stdout@@Base+0xb30>
   125f8:	b	12b68 <close_stdout@@Base+0xb30>
   125fc:	b	12b68 <close_stdout@@Base+0xb30>
   12600:	b	12b68 <close_stdout@@Base+0xb30>
   12604:	b	12b68 <close_stdout@@Base+0xb30>
   12608:	b	12b68 <close_stdout@@Base+0xb30>
   1260c:	b	12b68 <close_stdout@@Base+0xb30>
   12610:	b	12b68 <close_stdout@@Base+0xb30>
   12614:	b	12b68 <close_stdout@@Base+0xb30>
   12618:	b	12b68 <close_stdout@@Base+0xb30>
   1261c:	b	12b68 <close_stdout@@Base+0xb30>
   12620:	b	12b68 <close_stdout@@Base+0xb30>
   12624:	b	12b68 <close_stdout@@Base+0xb30>
   12628:	b	1299c <close_stdout@@Base+0x964>
   1262c:	b	1299c <close_stdout@@Base+0x964>
   12630:	b	1299c <close_stdout@@Base+0x964>
   12634:	b	12994 <close_stdout@@Base+0x95c>
   12638:	b	1299c <close_stdout@@Base+0x964>
   1263c:	b	12870 <close_stdout@@Base+0x838>
   12640:	b	1299c <close_stdout@@Base+0x964>
   12644:	b	12b10 <close_stdout@@Base+0xad8>
   12648:	b	1299c <close_stdout@@Base+0x964>
   1264c:	b	1299c <close_stdout@@Base+0x964>
   12650:	b	1299c <close_stdout@@Base+0x964>
   12654:	b	12870 <close_stdout@@Base+0x838>
   12658:	b	12870 <close_stdout@@Base+0x838>
   1265c:	b	12870 <close_stdout@@Base+0x838>
   12660:	b	12870 <close_stdout@@Base+0x838>
   12664:	b	12870 <close_stdout@@Base+0x838>
   12668:	b	12870 <close_stdout@@Base+0x838>
   1266c:	b	12870 <close_stdout@@Base+0x838>
   12670:	b	12870 <close_stdout@@Base+0x838>
   12674:	b	12870 <close_stdout@@Base+0x838>
   12678:	b	12870 <close_stdout@@Base+0x838>
   1267c:	b	12870 <close_stdout@@Base+0x838>
   12680:	b	12870 <close_stdout@@Base+0x838>
   12684:	b	12870 <close_stdout@@Base+0x838>
   12688:	b	12870 <close_stdout@@Base+0x838>
   1268c:	b	12870 <close_stdout@@Base+0x838>
   12690:	b	12870 <close_stdout@@Base+0x838>
   12694:	b	1299c <close_stdout@@Base+0x964>
   12698:	b	1299c <close_stdout@@Base+0x964>
   1269c:	b	1299c <close_stdout@@Base+0x964>
   126a0:	b	1299c <close_stdout@@Base+0x964>
   126a4:	b	127a4 <close_stdout@@Base+0x76c>
   126a8:	b	12b68 <close_stdout@@Base+0xb30>
   126ac:	b	12870 <close_stdout@@Base+0x838>
   126b0:	b	12870 <close_stdout@@Base+0x838>
   126b4:	b	12870 <close_stdout@@Base+0x838>
   126b8:	b	12870 <close_stdout@@Base+0x838>
   126bc:	b	12870 <close_stdout@@Base+0x838>
   126c0:	b	12870 <close_stdout@@Base+0x838>
   126c4:	b	12870 <close_stdout@@Base+0x838>
   126c8:	b	12870 <close_stdout@@Base+0x838>
   126cc:	b	12870 <close_stdout@@Base+0x838>
   126d0:	b	12870 <close_stdout@@Base+0x838>
   126d4:	b	12870 <close_stdout@@Base+0x838>
   126d8:	b	12870 <close_stdout@@Base+0x838>
   126dc:	b	12870 <close_stdout@@Base+0x838>
   126e0:	b	12870 <close_stdout@@Base+0x838>
   126e4:	b	12870 <close_stdout@@Base+0x838>
   126e8:	b	12870 <close_stdout@@Base+0x838>
   126ec:	b	12870 <close_stdout@@Base+0x838>
   126f0:	b	12870 <close_stdout@@Base+0x838>
   126f4:	b	12870 <close_stdout@@Base+0x838>
   126f8:	b	12870 <close_stdout@@Base+0x838>
   126fc:	b	12870 <close_stdout@@Base+0x838>
   12700:	b	12870 <close_stdout@@Base+0x838>
   12704:	b	12870 <close_stdout@@Base+0x838>
   12708:	b	12870 <close_stdout@@Base+0x838>
   1270c:	b	12870 <close_stdout@@Base+0x838>
   12710:	b	12870 <close_stdout@@Base+0x838>
   12714:	b	1299c <close_stdout@@Base+0x964>
   12718:	b	12af4 <close_stdout@@Base+0xabc>
   1271c:	b	12870 <close_stdout@@Base+0x838>
   12720:	b	1299c <close_stdout@@Base+0x964>
   12724:	b	12870 <close_stdout@@Base+0x838>
   12728:	b	1299c <close_stdout@@Base+0x964>
   1272c:	b	12870 <close_stdout@@Base+0x838>
   12730:	b	12870 <close_stdout@@Base+0x838>
   12734:	b	12870 <close_stdout@@Base+0x838>
   12738:	b	12870 <close_stdout@@Base+0x838>
   1273c:	b	12870 <close_stdout@@Base+0x838>
   12740:	b	12870 <close_stdout@@Base+0x838>
   12744:	b	12870 <close_stdout@@Base+0x838>
   12748:	b	12870 <close_stdout@@Base+0x838>
   1274c:	b	12870 <close_stdout@@Base+0x838>
   12750:	b	12870 <close_stdout@@Base+0x838>
   12754:	b	12870 <close_stdout@@Base+0x838>
   12758:	b	12870 <close_stdout@@Base+0x838>
   1275c:	b	12870 <close_stdout@@Base+0x838>
   12760:	b	12870 <close_stdout@@Base+0x838>
   12764:	b	12870 <close_stdout@@Base+0x838>
   12768:	b	12870 <close_stdout@@Base+0x838>
   1276c:	b	12870 <close_stdout@@Base+0x838>
   12770:	b	12870 <close_stdout@@Base+0x838>
   12774:	b	12870 <close_stdout@@Base+0x838>
   12778:	b	12870 <close_stdout@@Base+0x838>
   1277c:	b	12870 <close_stdout@@Base+0x838>
   12780:	b	12870 <close_stdout@@Base+0x838>
   12784:	b	12870 <close_stdout@@Base+0x838>
   12788:	b	12870 <close_stdout@@Base+0x838>
   1278c:	b	12870 <close_stdout@@Base+0x838>
   12790:	b	12870 <close_stdout@@Base+0x838>
   12794:	b	1297c <close_stdout@@Base+0x944>
   12798:	b	1299c <close_stdout@@Base+0x964>
   1279c:	b	1297c <close_stdout@@Base+0x944>
   127a0:	b	12994 <close_stdout@@Base+0x95c>
   127a4:	ldr	r3, [sp, #160]	; 0xa0
   127a8:	cmp	r3, #2
   127ac:	beq	13038 <close_stdout@@Base+0x1000>
   127b0:	cmp	r3, #3
   127b4:	bne	12870 <close_stdout@@Base+0x838>
   127b8:	ldr	r1, [sp, #164]	; 0xa4
   127bc:	tst	r1, #4
   127c0:	beq	12870 <close_stdout@@Base+0x838>
   127c4:	add	r3, fp, #2
   127c8:	cmp	r8, r3
   127cc:	bls	12870 <close_stdout@@Base+0x838>
   127d0:	ldrb	r2, [r5, #1]
   127d4:	mov	r1, #1
   127d8:	cmp	r2, #63	; 0x3f
   127dc:	bne	12870 <close_stdout@@Base+0x838>
   127e0:	ldr	r0, [sp, #32]
   127e4:	ldrb	ip, [r0, r3]
   127e8:	sub	r0, ip, #33	; 0x21
   127ec:	uxtb	r0, r0
   127f0:	cmp	r0, #29
   127f4:	bhi	12870 <close_stdout@@Base+0x838>
   127f8:	lsl	r1, r1, r0
   127fc:	movw	r0, #20929	; 0x51c1
   12800:	movt	r0, #14336	; 0x3800
   12804:	and	r0, r1, r0
   12808:	cmp	r0, #0
   1280c:	beq	12870 <close_stdout@@Base+0x838>
   12810:	ldr	r1, [sp, #36]	; 0x24
   12814:	cmp	r1, #0
   12818:	bne	129b8 <close_stdout@@Base+0x980>
   1281c:	cmp	r9, sl
   12820:	mov	r4, ip
   12824:	mov	fp, r3
   12828:	ldrcc	r0, [sp, #40]	; 0x28
   1282c:	strbcc	r2, [r0, r9]
   12830:	add	r2, r9, #1
   12834:	cmp	sl, r2
   12838:	ldrhi	r0, [sp, #40]	; 0x28
   1283c:	movhi	r1, #34	; 0x22
   12840:	strbhi	r1, [r0, r2]
   12844:	add	r2, r9, #2
   12848:	cmp	sl, r2
   1284c:	ldrhi	r0, [sp, #40]	; 0x28
   12850:	movhi	r1, #34	; 0x22
   12854:	strbhi	r1, [r0, r2]
   12858:	add	r2, r9, #3
   1285c:	cmp	sl, r2
   12860:	add	r9, r9, #4
   12864:	ldrhi	r0, [sp, #40]	; 0x28
   12868:	movhi	r1, #63	; 0x3f
   1286c:	strbhi	r1, [r0, r2]
   12870:	ldr	r0, [sp, #44]	; 0x2c
   12874:	cmp	r0, #0
   12878:	bne	128a0 <close_stdout@@Base+0x868>
   1287c:	ldr	r1, [sp, #48]	; 0x30
   12880:	cmp	r1, #0
   12884:	beq	128a0 <close_stdout@@Base+0x868>
   12888:	ubfx	r2, r4, #5, #8
   1288c:	and	r3, r4, #31
   12890:	ldr	r2, [r1, r2, lsl #2]
   12894:	lsr	r3, r2, r3
   12898:	tst	r3, #1
   1289c:	bne	128a8 <close_stdout@@Base+0x870>
   128a0:	cmp	r6, #0
   128a4:	beq	128c8 <close_stdout@@Base+0x890>
   128a8:	ldr	r2, [sp, #36]	; 0x24
   128ac:	cmp	r2, #0
   128b0:	bne	129b8 <close_stdout@@Base+0x980>
   128b4:	cmp	r9, sl
   128b8:	ldrcc	r0, [sp, #40]	; 0x28
   128bc:	movcc	r3, #92	; 0x5c
   128c0:	strbcc	r3, [r0, r9]
   128c4:	add	r9, r9, #1
   128c8:	add	fp, fp, #1
   128cc:	cmp	r9, sl
   128d0:	ldrcc	r1, [sp, #40]	; 0x28
   128d4:	strbcc	r4, [r1, r9]
   128d8:	cmn	r8, #1
   128dc:	add	r9, r9, #1
   128e0:	bne	12568 <close_stdout@@Base+0x530>
   128e4:	ldr	r2, [sp, #32]
   128e8:	ldrb	r3, [r2, fp]
   128ec:	adds	r3, r3, #0
   128f0:	movne	r3, #1
   128f4:	cmp	r3, #0
   128f8:	bne	12578 <close_stdout@@Base+0x540>
   128fc:	ldr	r3, [sp, #160]	; 0xa0
   12900:	cmp	r9, #0
   12904:	cmpeq	r3, #2
   12908:	bne	12918 <close_stdout@@Base+0x8e0>
   1290c:	ldr	r0, [sp, #36]	; 0x24
   12910:	cmp	r0, #0
   12914:	bne	129b8 <close_stdout@@Base+0x980>
   12918:	ldr	r1, [sp, #36]	; 0x24
   1291c:	ldr	r2, [sp, #52]	; 0x34
   12920:	eor	r3, r1, #1
   12924:	cmp	r2, #0
   12928:	moveq	r3, #0
   1292c:	andne	r3, r3, #1
   12930:	cmp	r3, #0
   12934:	beq	12960 <close_stdout@@Base+0x928>
   12938:	ldrb	r3, [r2]
   1293c:	cmp	r3, #0
   12940:	beq	12960 <close_stdout@@Base+0x928>
   12944:	ldr	r1, [sp, #40]	; 0x28
   12948:	cmp	sl, r9
   1294c:	strbhi	r3, [r1, r9]
   12950:	ldrb	r3, [r2, #1]!
   12954:	add	r9, r9, #1
   12958:	cmp	r3, #0
   1295c:	bne	12948 <close_stdout@@Base+0x910>
   12960:	cmp	r9, sl
   12964:	movcs	r0, r9
   12968:	ldrcc	r1, [sp, #40]	; 0x28
   1296c:	movcc	r3, #0
   12970:	movcc	r0, r9
   12974:	strbcc	r3, [r1, r9]
   12978:	b	129f4 <close_stdout@@Base+0x9bc>
   1297c:	cmn	r8, #1
   12980:	beq	13048 <close_stdout@@Base+0x1010>
   12984:	subs	r3, r8, #1
   12988:	movne	r3, #1
   1298c:	cmp	r3, #0
   12990:	bne	12870 <close_stdout@@Base+0x838>
   12994:	cmp	fp, #0
   12998:	bne	12870 <close_stdout@@Base+0x838>
   1299c:	ldr	r3, [sp, #36]	; 0x24
   129a0:	ldr	r0, [sp, #160]	; 0xa0
   129a4:	cmp	r0, #2
   129a8:	movne	r3, #0
   129ac:	andeq	r3, r3, #1
   129b0:	cmp	r3, #0
   129b4:	beq	12870 <close_stdout@@Base+0x838>
   129b8:	ldr	r2, [sp, #164]	; 0xa4
   129bc:	mov	ip, #0
   129c0:	ldr	r0, [sp, #160]	; 0xa0
   129c4:	bic	r3, r2, #2
   129c8:	ldr	r1, [sp, #72]	; 0x48
   129cc:	ldr	r2, [sp, #68]	; 0x44
   129d0:	stm	sp, {r0, r3}
   129d4:	mov	r3, r8
   129d8:	str	r1, [sp, #12]
   129dc:	mov	r1, sl
   129e0:	str	r2, [sp, #16]
   129e4:	ldr	r0, [sp, #40]	; 0x28
   129e8:	ldr	r2, [sp, #32]
   129ec:	str	ip, [sp, #8]
   129f0:	bl	12488 <close_stdout@@Base+0x450>
   129f4:	ldr	r1, [sp, #56]	; 0x38
   129f8:	ldr	r2, [sp, #116]	; 0x74
   129fc:	ldr	r3, [r1]
   12a00:	cmp	r2, r3
   12a04:	bne	13138 <close_stdout@@Base+0x1100>
   12a08:	add	sp, sp, #124	; 0x7c
   12a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a10:	mov	r3, #114	; 0x72
   12a14:	ldr	r2, [sp, #36]	; 0x24
   12a18:	ldr	r0, [sp, #160]	; 0xa0
   12a1c:	cmp	r0, #2
   12a20:	movne	r2, #0
   12a24:	andeq	r2, r2, #1
   12a28:	cmp	r2, #0
   12a2c:	bne	129b8 <close_stdout@@Base+0x980>
   12a30:	ldr	r1, [sp, #24]
   12a34:	cmp	r1, #0
   12a38:	beq	12870 <close_stdout@@Base+0x838>
   12a3c:	mov	r4, r3
   12a40:	b	128a8 <close_stdout@@Base+0x870>
   12a44:	mov	r3, #98	; 0x62
   12a48:	b	12a30 <close_stdout@@Base+0x9f8>
   12a4c:	mov	r3, #102	; 0x66
   12a50:	b	12a30 <close_stdout@@Base+0x9f8>
   12a54:	mov	r3, #118	; 0x76
   12a58:	b	12a30 <close_stdout@@Base+0x9f8>
   12a5c:	mov	r3, #97	; 0x61
   12a60:	b	12a30 <close_stdout@@Base+0x9f8>
   12a64:	mov	r3, #110	; 0x6e
   12a68:	b	12a14 <close_stdout@@Base+0x9dc>
   12a6c:	mov	r3, #116	; 0x74
   12a70:	b	12a14 <close_stdout@@Base+0x9dc>
   12a74:	ldr	r2, [sp, #24]
   12a78:	cmp	r2, #0
   12a7c:	beq	13024 <close_stdout@@Base+0xfec>
   12a80:	ldr	r3, [sp, #36]	; 0x24
   12a84:	cmp	r3, #0
   12a88:	bne	129b8 <close_stdout@@Base+0x980>
   12a8c:	cmp	r9, sl
   12a90:	add	r2, r9, #1
   12a94:	ldrcc	r0, [sp, #40]	; 0x28
   12a98:	movcc	r3, #92	; 0x5c
   12a9c:	strbcc	r3, [r0, r9]
   12aa0:	add	r3, fp, #1
   12aa4:	cmp	r8, r3
   12aa8:	bls	12ae8 <close_stdout@@Base+0xab0>
   12aac:	ldr	r1, [sp, #32]
   12ab0:	ldrb	r3, [r1, r3]
   12ab4:	sub	r3, r3, #48	; 0x30
   12ab8:	cmp	r3, #9
   12abc:	bhi	12ae8 <close_stdout@@Base+0xab0>
   12ac0:	cmp	sl, r2
   12ac4:	ldrhi	r0, [sp, #40]	; 0x28
   12ac8:	movhi	r3, #48	; 0x30
   12acc:	strbhi	r3, [r0, r2]
   12ad0:	add	r3, r9, #2
   12ad4:	cmp	sl, r3
   12ad8:	ldrhi	r1, [sp, #40]	; 0x28
   12adc:	movhi	r2, #48	; 0x30
   12ae0:	strbhi	r2, [r1, r3]
   12ae4:	add	r2, r9, #3
   12ae8:	mov	r9, r2
   12aec:	mov	r4, #48	; 0x30
   12af0:	b	1287c <close_stdout@@Base+0x844>
   12af4:	ldr	r1, [sp, #76]	; 0x4c
   12af8:	cmp	r1, #0
   12afc:	beq	12b08 <close_stdout@@Base+0xad0>
   12b00:	cmp	r7, #0
   12b04:	bne	128c8 <close_stdout@@Base+0x890>
   12b08:	mov	r3, r4
   12b0c:	b	12a14 <close_stdout@@Base+0x9dc>
   12b10:	ldr	r1, [sp, #160]	; 0xa0
   12b14:	cmp	r1, #2
   12b18:	bne	12870 <close_stdout@@Base+0x838>
   12b1c:	ldr	r2, [sp, #36]	; 0x24
   12b20:	cmp	r2, #0
   12b24:	bne	129b8 <close_stdout@@Base+0x980>
   12b28:	cmp	r9, sl
   12b2c:	ldrcc	r0, [sp, #40]	; 0x28
   12b30:	movcc	r3, #39	; 0x27
   12b34:	strbcc	r3, [r0, r9]
   12b38:	add	r3, r9, #1
   12b3c:	cmp	sl, r3
   12b40:	ldrhi	r1, [sp, #40]	; 0x28
   12b44:	movhi	r2, #92	; 0x5c
   12b48:	strbhi	r2, [r1, r3]
   12b4c:	add	r3, r9, #2
   12b50:	cmp	sl, r3
   12b54:	add	r9, r9, #3
   12b58:	ldrhi	r0, [sp, #40]	; 0x28
   12b5c:	movhi	r2, #39	; 0x27
   12b60:	strbhi	r2, [r0, r3]
   12b64:	b	12870 <close_stdout@@Base+0x838>
   12b68:	ldr	r1, [sp, #64]	; 0x40
   12b6c:	cmp	r1, #1
   12b70:	bne	12e68 <close_stdout@@Base+0xe30>
   12b74:	bl	111f8 <__ctype_b_loc@plt>
   12b78:	ldr	r2, [sp, #64]	; 0x40
   12b7c:	sxth	r3, r4
   12b80:	str	r2, [sp, #60]	; 0x3c
   12b84:	lsl	r3, r3, #1
   12b88:	ldr	r2, [r0]
   12b8c:	ldrh	r2, [r2, r3]
   12b90:	eor	r2, r2, #16384	; 0x4000
   12b94:	ubfx	r2, r2, #14, #1
   12b98:	ldr	r1, [sp, #24]
   12b9c:	ands	r2, r2, r1
   12ba0:	beq	12870 <close_stdout@@Base+0x838>
   12ba4:	ldr	r3, [sp, #60]	; 0x3c
   12ba8:	mov	r0, #92	; 0x5c
   12bac:	ldr	r7, [sp, #36]	; 0x24
   12bb0:	add	r1, r3, fp
   12bb4:	str	r8, [sp, #60]	; 0x3c
   12bb8:	ldr	r3, [sp, #40]	; 0x28
   12bbc:	b	12c20 <close_stdout@@Base+0xbe8>
   12bc0:	cmp	r7, #0
   12bc4:	bne	13060 <close_stdout@@Base+0x1028>
   12bc8:	add	ip, r9, #1
   12bcc:	cmp	r9, sl
   12bd0:	strbcc	r0, [r3, r9]
   12bd4:	cmp	sl, ip
   12bd8:	lsrhi	r8, r4, #6
   12bdc:	addhi	r8, r8, #48	; 0x30
   12be0:	strbhi	r8, [r3, ip]
   12be4:	add	ip, r9, #2
   12be8:	add	r9, r9, #3
   12bec:	cmp	sl, ip
   12bf0:	ubfxhi	r8, r4, #3, #3
   12bf4:	and	r4, r4, #7
   12bf8:	add	r4, r4, #48	; 0x30
   12bfc:	addhi	r8, r8, #48	; 0x30
   12c00:	strbhi	r8, [r3, ip]
   12c04:	add	fp, fp, #1
   12c08:	cmp	r1, fp
   12c0c:	bls	12c4c <close_stdout@@Base+0xc14>
   12c10:	cmp	r9, sl
   12c14:	strbcc	r4, [r3, r9]
   12c18:	ldrb	r4, [r5, #1]!
   12c1c:	add	r9, r9, #1
   12c20:	cmp	r2, #0
   12c24:	bne	12bc0 <close_stdout@@Base+0xb88>
   12c28:	cmp	r6, #0
   12c2c:	beq	12c04 <close_stdout@@Base+0xbcc>
   12c30:	add	fp, fp, #1
   12c34:	cmp	r9, sl
   12c38:	strbcc	r0, [r3, r9]
   12c3c:	cmp	r1, fp
   12c40:	add	r9, r9, #1
   12c44:	mov	r6, #0
   12c48:	bhi	12c10 <close_stdout@@Base+0xbd8>
   12c4c:	ldr	r8, [sp, #60]	; 0x3c
   12c50:	b	128cc <close_stdout@@Base+0x894>
   12c54:	ldr	r3, [sp, #36]	; 0x24
   12c58:	cmp	r3, #0
   12c5c:	bne	13160 <close_stdout@@Base+0x1128>
   12c60:	cmp	sl, #0
   12c64:	beq	13078 <close_stdout@@Base+0x1040>
   12c68:	ldr	r1, [sp, #40]	; 0x28
   12c6c:	mov	r0, #1
   12c70:	ldr	r2, [pc, #1296]	; 13188 <close_stdout@@Base+0x1150>
   12c74:	mov	r3, #34	; 0x22
   12c78:	str	r0, [sp, #24]
   12c7c:	mov	r9, r0
   12c80:	add	r2, pc, r2
   12c84:	str	r0, [sp, #28]
   12c88:	strb	r3, [r1]
   12c8c:	str	r2, [sp, #52]	; 0x34
   12c90:	b	1253c <close_stdout@@Base+0x504>
   12c94:	ldr	r3, [pc, #1264]	; 1318c <close_stdout@@Base+0x1154>
   12c98:	mov	r2, #1
   12c9c:	mov	r0, #3
   12ca0:	str	r2, [sp, #36]	; 0x24
   12ca4:	add	r3, pc, r3
   12ca8:	str	r2, [sp, #24]
   12cac:	str	r3, [sp, #52]	; 0x34
   12cb0:	mov	r9, #0
   12cb4:	str	r2, [sp, #28]
   12cb8:	str	r0, [sp, #160]	; 0xa0
   12cbc:	b	1253c <close_stdout@@Base+0x504>
   12cc0:	mov	r0, #0
   12cc4:	mov	r1, #1
   12cc8:	str	r0, [sp, #36]	; 0x24
   12ccc:	mov	r9, r0
   12cd0:	str	r1, [sp, #24]
   12cd4:	str	r0, [sp, #28]
   12cd8:	str	r0, [sp, #52]	; 0x34
   12cdc:	b	1253c <close_stdout@@Base+0x504>
   12ce0:	ldr	r3, [sp, #160]	; 0xa0
   12ce4:	cmp	r3, #8
   12ce8:	beq	12d14 <close_stdout@@Base+0xcdc>
   12cec:	ldr	r0, [pc, #1180]	; 13190 <close_stdout@@Base+0x1158>
   12cf0:	mov	r1, r3
   12cf4:	add	r0, pc, r0
   12cf8:	bl	12324 <close_stdout@@Base+0x2ec>
   12cfc:	ldr	r1, [sp, #160]	; 0xa0
   12d00:	str	r0, [sp, #72]	; 0x48
   12d04:	ldr	r0, [pc, #1160]	; 13194 <close_stdout@@Base+0x115c>
   12d08:	add	r0, pc, r0
   12d0c:	bl	12324 <close_stdout@@Base+0x2ec>
   12d10:	str	r0, [sp, #68]	; 0x44
   12d14:	ldr	r0, [sp, #36]	; 0x24
   12d18:	cmp	r0, #0
   12d1c:	movne	r9, #0
   12d20:	bne	12d58 <close_stdout@@Base+0xd20>
   12d24:	ldr	r1, [sp, #72]	; 0x48
   12d28:	ldrb	r3, [r1]
   12d2c:	cmp	r3, #0
   12d30:	beq	13130 <close_stdout@@Base+0x10f8>
   12d34:	mov	r2, r1
   12d38:	ldr	r1, [sp, #40]	; 0x28
   12d3c:	mov	r9, r0
   12d40:	cmp	r9, sl
   12d44:	strbcc	r3, [r1, r9]
   12d48:	ldrb	r3, [r2, #1]!
   12d4c:	add	r9, r9, #1
   12d50:	cmp	r3, #0
   12d54:	bne	12d40 <close_stdout@@Base+0xd08>
   12d58:	ldr	r0, [sp, #68]	; 0x44
   12d5c:	str	r0, [sp, #52]	; 0x34
   12d60:	bl	1121c <strlen@plt>
   12d64:	mov	r2, #1
   12d68:	str	r2, [sp, #24]
   12d6c:	str	r0, [sp, #28]
   12d70:	b	1253c <close_stdout@@Base+0x504>
   12d74:	ldr	r3, [pc, #1052]	; 13198 <close_stdout@@Base+0x1160>
   12d78:	mov	r2, #0
   12d7c:	mov	r1, #1
   12d80:	mov	r0, #2
   12d84:	add	r3, pc, r3
   12d88:	str	r1, [sp, #36]	; 0x24
   12d8c:	str	r2, [sp, #24]
   12d90:	mov	r9, r2
   12d94:	str	r1, [sp, #28]
   12d98:	str	r3, [sp, #52]	; 0x34
   12d9c:	str	r0, [sp, #160]	; 0xa0
   12da0:	b	1253c <close_stdout@@Base+0x504>
   12da4:	ldr	r3, [sp, #36]	; 0x24
   12da8:	cmp	r3, #0
   12dac:	bne	1313c <close_stdout@@Base+0x1104>
   12db0:	cmp	sl, #0
   12db4:	beq	13098 <close_stdout@@Base+0x1060>
   12db8:	ldr	r1, [sp, #40]	; 0x28
   12dbc:	mov	r3, #39	; 0x27
   12dc0:	ldr	r2, [sp, #36]	; 0x24
   12dc4:	mov	r0, #1
   12dc8:	mov	r9, r0
   12dcc:	str	r0, [sp, #28]
   12dd0:	strb	r3, [r1]
   12dd4:	ldr	r3, [pc, #960]	; 1319c <close_stdout@@Base+0x1164>
   12dd8:	str	r2, [sp, #24]
   12ddc:	add	r3, pc, r3
   12de0:	str	r3, [sp, #52]	; 0x34
   12de4:	b	1253c <close_stdout@@Base+0x504>
   12de8:	ldr	r2, [sp, #28]
   12dec:	cmp	r2, #1
   12df0:	add	r4, fp, r2
   12df4:	movls	r3, #0
   12df8:	movhi	r3, #1
   12dfc:	cmn	r8, #1
   12e00:	movne	r3, #0
   12e04:	cmp	r3, #0
   12e08:	beq	12e18 <close_stdout@@Base+0xde0>
   12e0c:	ldr	r0, [sp, #32]
   12e10:	bl	1121c <strlen@plt>
   12e14:	mov	r8, r0
   12e18:	cmp	r8, r4
   12e1c:	ldrcc	r3, [sp, #32]
   12e20:	movcc	r6, #0
   12e24:	addcc	r5, r3, fp
   12e28:	bcc	12598 <close_stdout@@Base+0x560>
   12e2c:	ldr	r0, [sp, #32]
   12e30:	ldr	r1, [sp, #52]	; 0x34
   12e34:	add	r5, r0, fp
   12e38:	ldr	r2, [sp, #28]
   12e3c:	mov	r0, r5
   12e40:	bl	110d8 <memcmp@plt>
   12e44:	cmp	r0, #0
   12e48:	bne	12e60 <close_stdout@@Base+0xe28>
   12e4c:	ldr	r1, [sp, #36]	; 0x24
   12e50:	cmp	r1, #0
   12e54:	bne	129b8 <close_stdout@@Base+0x980>
   12e58:	mov	r6, #1
   12e5c:	b	12598 <close_stdout@@Base+0x560>
   12e60:	mov	r6, #0
   12e64:	b	12598 <close_stdout@@Base+0x560>
   12e68:	add	r7, sp, #108	; 0x6c
   12e6c:	cmn	r8, #1
   12e70:	mov	r3, #0
   12e74:	str	r3, [sp, #108]	; 0x6c
   12e78:	str	r3, [r7, #4]
   12e7c:	beq	13068 <close_stdout@@Base+0x1030>
   12e80:	mov	r1, #0
   12e84:	ldr	r0, [sp, #32]
   12e88:	mov	ip, #1
   12e8c:	str	r9, [sp, #88]	; 0x58
   12e90:	str	r6, [sp, #96]	; 0x60
   12e94:	mov	r9, r1
   12e98:	str	r5, [sp, #100]	; 0x64
   12e9c:	mov	r6, ip
   12ea0:	mov	r5, r7
   12ea4:	add	r3, sp, #104	; 0x68
   12ea8:	sub	r0, r0, #1
   12eac:	str	r3, [sp, #80]	; 0x50
   12eb0:	str	r0, [sp, #84]	; 0x54
   12eb4:	str	r1, [sp, #60]	; 0x3c
   12eb8:	str	r4, [sp, #92]	; 0x5c
   12ebc:	ldr	r2, [sp, #32]
   12ec0:	add	r7, r9, fp
   12ec4:	add	r0, sp, #104	; 0x68
   12ec8:	mov	r3, r5
   12ecc:	add	r4, r2, r7
   12ed0:	rsb	r2, r7, r8
   12ed4:	mov	r1, r4
   12ed8:	bl	11174 <mbrtowc@plt>
   12edc:	subs	r2, r0, #0
   12ee0:	beq	12fec <close_stdout@@Base+0xfb4>
   12ee4:	cmn	r2, #1
   12ee8:	beq	13114 <close_stdout@@Base+0x10dc>
   12eec:	cmn	r2, #2
   12ef0:	beq	130b8 <close_stdout@@Base+0x1080>
   12ef4:	ldr	r3, [sp, #36]	; 0x24
   12ef8:	ldr	r0, [sp, #160]	; 0xa0
   12efc:	cmp	r0, #2
   12f00:	movne	r3, #0
   12f04:	andeq	r3, r3, #1
   12f08:	cmp	r3, #0
   12f0c:	beq	12fc8 <close_stdout@@Base+0xf90>
   12f10:	cmp	r2, #1
   12f14:	beq	12fc8 <close_stdout@@Base+0xf90>
   12f18:	ldr	r1, [sp, #84]	; 0x54
   12f1c:	add	r3, r1, r2
   12f20:	add	r7, r3, r7
   12f24:	ldrb	r3, [r4, #1]!
   12f28:	sub	r3, r3, #91	; 0x5b
   12f2c:	cmp	r3, #33	; 0x21
   12f30:	addls	pc, pc, r3, lsl #2
   12f34:	b	12fc0 <close_stdout@@Base+0xf88>
   12f38:	b	129b8 <close_stdout@@Base+0x980>
   12f3c:	b	129b8 <close_stdout@@Base+0x980>
   12f40:	b	12fc0 <close_stdout@@Base+0xf88>
   12f44:	b	129b8 <close_stdout@@Base+0x980>
   12f48:	b	12fc0 <close_stdout@@Base+0xf88>
   12f4c:	b	129b8 <close_stdout@@Base+0x980>
   12f50:	b	12fc0 <close_stdout@@Base+0xf88>
   12f54:	b	12fc0 <close_stdout@@Base+0xf88>
   12f58:	b	12fc0 <close_stdout@@Base+0xf88>
   12f5c:	b	12fc0 <close_stdout@@Base+0xf88>
   12f60:	b	12fc0 <close_stdout@@Base+0xf88>
   12f64:	b	12fc0 <close_stdout@@Base+0xf88>
   12f68:	b	12fc0 <close_stdout@@Base+0xf88>
   12f6c:	b	12fc0 <close_stdout@@Base+0xf88>
   12f70:	b	12fc0 <close_stdout@@Base+0xf88>
   12f74:	b	12fc0 <close_stdout@@Base+0xf88>
   12f78:	b	12fc0 <close_stdout@@Base+0xf88>
   12f7c:	b	12fc0 <close_stdout@@Base+0xf88>
   12f80:	b	12fc0 <close_stdout@@Base+0xf88>
   12f84:	b	12fc0 <close_stdout@@Base+0xf88>
   12f88:	b	12fc0 <close_stdout@@Base+0xf88>
   12f8c:	b	12fc0 <close_stdout@@Base+0xf88>
   12f90:	b	12fc0 <close_stdout@@Base+0xf88>
   12f94:	b	12fc0 <close_stdout@@Base+0xf88>
   12f98:	b	12fc0 <close_stdout@@Base+0xf88>
   12f9c:	b	12fc0 <close_stdout@@Base+0xf88>
   12fa0:	b	12fc0 <close_stdout@@Base+0xf88>
   12fa4:	b	12fc0 <close_stdout@@Base+0xf88>
   12fa8:	b	12fc0 <close_stdout@@Base+0xf88>
   12fac:	b	12fc0 <close_stdout@@Base+0xf88>
   12fb0:	b	12fc0 <close_stdout@@Base+0xf88>
   12fb4:	b	12fc0 <close_stdout@@Base+0xf88>
   12fb8:	b	12fc0 <close_stdout@@Base+0xf88>
   12fbc:	b	129b8 <close_stdout@@Base+0x980>
   12fc0:	cmp	r4, r7
   12fc4:	bne	12f24 <close_stdout@@Base+0xeec>
   12fc8:	ldr	r0, [sp, #104]	; 0x68
   12fcc:	add	r9, r9, r2
   12fd0:	bl	11120 <iswprint@plt>
   12fd4:	cmp	r0, #0
   12fd8:	mov	r0, r5
   12fdc:	moveq	r6, #0
   12fe0:	bl	110cc <mbsinit@plt>
   12fe4:	cmp	r0, #0
   12fe8:	beq	12ebc <close_stdout@@Base+0xe84>
   12fec:	mov	ip, r6
   12ff0:	eor	r2, ip, #1
   12ff4:	str	r9, [sp, #60]	; 0x3c
   12ff8:	ldr	r4, [sp, #92]	; 0x5c
   12ffc:	uxtb	r2, r2
   13000:	ldr	r9, [sp, #88]	; 0x58
   13004:	ldr	r6, [sp, #96]	; 0x60
   13008:	ldr	r5, [sp, #100]	; 0x64
   1300c:	ldr	r3, [sp, #60]	; 0x3c
   13010:	cmp	r3, #1
   13014:	bls	12b98 <close_stdout@@Base+0xb60>
   13018:	ldr	r0, [sp, #24]
   1301c:	and	r2, r2, r0
   13020:	b	12ba4 <close_stdout@@Base+0xb6c>
   13024:	ldr	r2, [sp, #164]	; 0xa4
   13028:	tst	r2, #1
   1302c:	addne	fp, fp, #1
   13030:	bne	12560 <close_stdout@@Base+0x528>
   13034:	b	12870 <close_stdout@@Base+0x838>
   13038:	ldr	r0, [sp, #36]	; 0x24
   1303c:	cmp	r0, #0
   13040:	beq	12870 <close_stdout@@Base+0x838>
   13044:	b	129b8 <close_stdout@@Base+0x980>
   13048:	ldr	r2, [sp, #32]
   1304c:	ldrb	r3, [r2, #1]
   13050:	adds	r3, r3, #0
   13054:	movne	r3, #1
   13058:	b	1298c <close_stdout@@Base+0x954>
   1305c:	bl	11318 <abort@plt>
   13060:	ldr	r8, [sp, #60]	; 0x3c
   13064:	b	129b8 <close_stdout@@Base+0x980>
   13068:	ldr	r0, [sp, #32]
   1306c:	bl	1121c <strlen@plt>
   13070:	mov	r8, r0
   13074:	b	12e80 <close_stdout@@Base+0xe48>
   13078:	ldr	r2, [pc, #288]	; 131a0 <close_stdout@@Base+0x1168>
   1307c:	mov	r1, #1
   13080:	mov	r9, r1
   13084:	str	r1, [sp, #24]
   13088:	add	r2, pc, r2
   1308c:	str	r1, [sp, #28]
   13090:	str	r2, [sp, #52]	; 0x34
   13094:	b	1253c <close_stdout@@Base+0x504>
   13098:	ldr	r2, [pc, #260]	; 131a4 <close_stdout@@Base+0x116c>
   1309c:	mov	r3, #1
   130a0:	mov	r9, r3
   130a4:	str	r3, [sp, #28]
   130a8:	add	r2, pc, r2
   130ac:	str	sl, [sp, #24]
   130b0:	str	r2, [sp, #52]	; 0x34
   130b4:	b	1253c <close_stdout@@Base+0x504>
   130b8:	cmp	r8, r7
   130bc:	str	r9, [sp, #60]	; 0x3c
   130c0:	mov	ip, r4
   130c4:	ldr	r6, [sp, #96]	; 0x60
   130c8:	ldr	r9, [sp, #88]	; 0x58
   130cc:	ldr	r4, [sp, #92]	; 0x5c
   130d0:	ldr	r5, [sp, #100]	; 0x64
   130d4:	bls	1310c <close_stdout@@Base+0x10d4>
   130d8:	ldrb	r3, [ip]
   130dc:	cmp	r3, #0
   130e0:	beq	1310c <close_stdout@@Base+0x10d4>
   130e4:	ldr	r3, [sp, #60]	; 0x3c
   130e8:	b	130f8 <close_stdout@@Base+0x10c0>
   130ec:	ldrb	r2, [r5, r3]
   130f0:	cmp	r2, #0
   130f4:	beq	13108 <close_stdout@@Base+0x10d0>
   130f8:	add	r3, r3, #1
   130fc:	add	r2, fp, r3
   13100:	cmp	r8, r2
   13104:	bhi	130ec <close_stdout@@Base+0x10b4>
   13108:	str	r3, [sp, #60]	; 0x3c
   1310c:	mov	r2, #1
   13110:	b	1300c <close_stdout@@Base+0xfd4>
   13114:	str	r9, [sp, #60]	; 0x3c
   13118:	mov	r2, #1
   1311c:	ldr	r4, [sp, #92]	; 0x5c
   13120:	ldr	r6, [sp, #96]	; 0x60
   13124:	ldr	r9, [sp, #88]	; 0x58
   13128:	ldr	r5, [sp, #100]	; 0x64
   1312c:	b	1300c <close_stdout@@Base+0xfd4>
   13130:	ldr	r9, [sp, #36]	; 0x24
   13134:	b	12d58 <close_stdout@@Base+0xd20>
   13138:	bl	110f0 <__stack_chk_fail@plt>
   1313c:	ldr	r1, [pc, #100]	; 131a8 <close_stdout@@Base+0x1170>
   13140:	mov	r3, #0
   13144:	mov	r0, #1
   13148:	str	r3, [sp, #24]
   1314c:	add	r1, pc, r1
   13150:	str	r0, [sp, #28]
   13154:	mov	r9, r3
   13158:	str	r1, [sp, #52]	; 0x34
   1315c:	b	1253c <close_stdout@@Base+0x504>
   13160:	ldr	r0, [pc, #68]	; 131ac <close_stdout@@Base+0x1174>
   13164:	mov	r3, #1
   13168:	mov	r9, #0
   1316c:	str	r3, [sp, #24]
   13170:	add	r0, pc, r0
   13174:	str	r3, [sp, #28]
   13178:	str	r0, [sp, #52]	; 0x34
   1317c:	b	1253c <close_stdout@@Base+0x504>
   13180:	andeq	r3, r1, r4, asr fp
   13184:	andeq	r0, r0, ip, lsl #2
   13188:	andeq	r2, r0, r0, ror #8
   1318c:	andeq	r2, r0, ip, lsr r4
   13190:	strdeq	r2, [r0], -r8
   13194:	ldrdeq	r2, [r0], -r4
   13198:	andeq	r2, r0, r8, asr r3
   1319c:	andeq	r2, r0, r0, lsl #6
   131a0:	andeq	r2, r0, r8, asr r0
   131a4:	andeq	r2, r0, r4, lsr r0
   131a8:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   131ac:	andeq	r1, r0, r0, ror pc
   131b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131b4:	sub	sp, sp, #44	; 0x2c
   131b8:	mov	r6, r0
   131bc:	mov	r9, r1
   131c0:	mov	sl, r2
   131c4:	mov	r4, r3
   131c8:	bl	11234 <__errno_location@plt>
   131cc:	ldr	fp, [pc, #412]	; 13370 <close_stdout@@Base+0x1338>
   131d0:	cmp	r6, #0
   131d4:	add	fp, pc, fp
   131d8:	ldr	r5, [fp]
   131dc:	ldr	r1, [r0]
   131e0:	mov	r8, r0
   131e4:	str	r1, [sp, #36]	; 0x24
   131e8:	blt	13368 <close_stdout@@Base+0x1330>
   131ec:	ldr	r3, [pc, #384]	; 13374 <close_stdout@@Base+0x133c>
   131f0:	add	r3, pc, r3
   131f4:	ldr	r3, [r3]
   131f8:	cmp	r6, r3
   131fc:	bcc	13250 <close_stdout@@Base+0x1218>
   13200:	add	r7, r6, #1
   13204:	cmn	r7, #-536870911	; 0xe0000001
   13208:	bhi	1336c <close_stdout@@Base+0x1334>
   1320c:	add	r3, fp, #4
   13210:	cmp	r5, r3
   13214:	beq	13340 <close_stdout@@Base+0x1308>
   13218:	mov	r0, r5
   1321c:	lsl	r1, r7, #3
   13220:	bl	140c4 <close_stdout@@Base+0x208c>
   13224:	mov	r5, r0
   13228:	str	r0, [fp]
   1322c:	ldr	fp, [pc, #324]	; 13378 <close_stdout@@Base+0x1340>
   13230:	mov	r1, #0
   13234:	add	fp, pc, fp
   13238:	ldr	r0, [fp]
   1323c:	rsb	r2, r0, r7
   13240:	add	r0, r5, r0, lsl #3
   13244:	lsl	r2, r2, #3
   13248:	bl	1124c <memset@plt>
   1324c:	str	r7, [fp]
   13250:	add	r2, r4, #8
   13254:	str	r2, [sp, #32]
   13258:	ldr	r1, [r4]
   1325c:	add	fp, r5, r6, lsl #3
   13260:	ldr	lr, [sp, #32]
   13264:	mov	r2, r9
   13268:	ldr	r3, [r4, #4]
   1326c:	ldr	ip, [r5, r6, lsl #3]
   13270:	ldr	r7, [fp, #4]
   13274:	orr	r3, r3, #1
   13278:	str	r1, [sp]
   1327c:	str	r3, [sp, #4]
   13280:	mov	r1, ip
   13284:	str	lr, [sp, #8]
   13288:	mov	r0, r7
   1328c:	ldr	lr, [r4, #40]	; 0x28
   13290:	str	r3, [sp, #28]
   13294:	mov	r3, sl
   13298:	str	lr, [sp, #12]
   1329c:	ldr	lr, [r4, #44]	; 0x2c
   132a0:	str	ip, [sp, #24]
   132a4:	str	lr, [sp, #16]
   132a8:	bl	12488 <close_stdout@@Base+0x450>
   132ac:	ldr	ip, [sp, #24]
   132b0:	cmp	ip, r0
   132b4:	bhi	1332c <close_stdout@@Base+0x12f4>
   132b8:	ldr	r3, [pc, #188]	; 1337c <close_stdout@@Base+0x1344>
   132bc:	add	r1, r0, #1
   132c0:	str	r1, [r5, r6, lsl #3]
   132c4:	add	r3, pc, r3
   132c8:	cmp	r7, r3
   132cc:	beq	132e0 <close_stdout@@Base+0x12a8>
   132d0:	mov	r0, r7
   132d4:	str	r1, [sp, #24]
   132d8:	bl	110a8 <free@plt>
   132dc:	ldr	r1, [sp, #24]
   132e0:	mov	r0, r1
   132e4:	str	r1, [sp, #24]
   132e8:	bl	1406c <close_stdout@@Base+0x2034>
   132ec:	ldr	r3, [sp, #28]
   132f0:	ldr	lr, [sp, #32]
   132f4:	mov	r2, r9
   132f8:	str	r0, [fp, #4]
   132fc:	mov	r7, r0
   13300:	ldr	ip, [r4]
   13304:	str	r3, [sp, #4]
   13308:	mov	r3, sl
   1330c:	str	lr, [sp, #8]
   13310:	str	ip, [sp]
   13314:	ldr	ip, [r4, #40]	; 0x28
   13318:	ldr	r1, [sp, #24]
   1331c:	str	ip, [sp, #12]
   13320:	ldr	ip, [r4, #44]	; 0x2c
   13324:	str	ip, [sp, #16]
   13328:	bl	12488 <close_stdout@@Base+0x450>
   1332c:	ldr	r1, [sp, #36]	; 0x24
   13330:	mov	r0, r7
   13334:	str	r1, [r8]
   13338:	add	sp, sp, #44	; 0x2c
   1333c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13340:	lsl	r1, r7, #3
   13344:	mov	r0, #0
   13348:	str	r3, [sp, #24]
   1334c:	bl	140c4 <close_stdout@@Base+0x208c>
   13350:	ldr	r3, [sp, #24]
   13354:	mov	r5, r0
   13358:	ldm	r3, {r0, r1}
   1335c:	str	r5, [fp]
   13360:	stm	r5, {r0, r1}
   13364:	b	1322c <close_stdout@@Base+0x11f4>
   13368:	bl	11318 <abort@plt>
   1336c:	bl	14280 <close_stdout@@Base+0x2248>
   13370:	andeq	r2, r1, r4, lsr #31
   13374:	andeq	r2, r1, r4, asr pc
   13378:	andeq	r2, r1, r0, lsl pc
   1337c:	ldrdeq	r2, [r1], -r0
   13380:	push	{r4, r5, r6, lr}
   13384:	mov	r5, r0
   13388:	bl	11234 <__errno_location@plt>
   1338c:	cmp	r5, #0
   13390:	mov	r1, #48	; 0x30
   13394:	mov	r4, r0
   13398:	ldr	r0, [pc, #24]	; 133b8 <close_stdout@@Base+0x1380>
   1339c:	ldr	r6, [r4]
   133a0:	add	r0, pc, r0
   133a4:	add	r0, r0, #256	; 0x100
   133a8:	movne	r0, r5
   133ac:	bl	14240 <close_stdout@@Base+0x2208>
   133b0:	str	r6, [r4]
   133b4:	pop	{r4, r5, r6, pc}
   133b8:	strdeq	r2, [r1], -r4
   133bc:	cmp	r0, #0
   133c0:	beq	133cc <close_stdout@@Base+0x1394>
   133c4:	ldr	r0, [r0]
   133c8:	bx	lr
   133cc:	ldr	r0, [pc, #12]	; 133e0 <close_stdout@@Base+0x13a8>
   133d0:	add	r0, pc, r0
   133d4:	add	r0, r0, #256	; 0x100
   133d8:	ldr	r0, [r0]
   133dc:	bx	lr
   133e0:	andeq	r2, r1, r4, asr #27
   133e4:	cmp	r0, #0
   133e8:	beq	133f4 <close_stdout@@Base+0x13bc>
   133ec:	str	r1, [r0]
   133f0:	bx	lr
   133f4:	ldr	r0, [pc, #12]	; 13408 <close_stdout@@Base+0x13d0>
   133f8:	add	r0, pc, r0
   133fc:	add	r0, r0, #256	; 0x100
   13400:	str	r1, [r0]
   13404:	bx	lr
   13408:	muleq	r1, ip, sp
   1340c:	cmp	r0, #0
   13410:	movne	r3, r0
   13414:	beq	13444 <close_stdout@@Base+0x140c>
   13418:	lsr	ip, r1, #5
   1341c:	and	r1, r1, #31
   13420:	add	r3, r3, ip, lsl #2
   13424:	ldr	ip, [r3, #8]
   13428:	lsr	r0, ip, r1
   1342c:	eor	r2, r0, r2
   13430:	and	r0, r0, #1
   13434:	and	r2, r2, #1
   13438:	eor	ip, ip, r2, lsl r1
   1343c:	str	ip, [r3, #8]
   13440:	bx	lr
   13444:	ldr	r3, [pc, #8]	; 13454 <close_stdout@@Base+0x141c>
   13448:	add	r3, pc, r3
   1344c:	add	r3, r3, #256	; 0x100
   13450:	b	13418 <close_stdout@@Base+0x13e0>
   13454:	andeq	r2, r1, ip, asr #26
   13458:	subs	r3, r0, #0
   1345c:	beq	1346c <close_stdout@@Base+0x1434>
   13460:	ldr	r0, [r3, #4]
   13464:	str	r1, [r3, #4]
   13468:	bx	lr
   1346c:	ldr	r3, [pc, #8]	; 1347c <close_stdout@@Base+0x1444>
   13470:	add	r3, pc, r3
   13474:	add	r3, r3, #256	; 0x100
   13478:	b	13460 <close_stdout@@Base+0x1428>
   1347c:	andeq	r2, r1, r4, lsr #26
   13480:	cmp	r0, #0
   13484:	push	{r3, lr}
   13488:	beq	134ac <close_stdout@@Base+0x1474>
   1348c:	cmp	r2, #0
   13490:	cmpne	r1, #0
   13494:	mov	r3, #8
   13498:	strne	r1, [r0, #40]	; 0x28
   1349c:	str	r3, [r0]
   134a0:	strne	r2, [r0, #44]	; 0x2c
   134a4:	popne	{r3, pc}
   134a8:	bl	11318 <abort@plt>
   134ac:	ldr	r0, [pc, #8]	; 134bc <close_stdout@@Base+0x1484>
   134b0:	add	r0, pc, r0
   134b4:	add	r0, r0, #256	; 0x100
   134b8:	b	1348c <close_stdout@@Base+0x1454>
   134bc:	andeq	r2, r1, r4, ror #25
   134c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   134c4:	sub	sp, sp, #24
   134c8:	mov	r7, r0
   134cc:	mov	sl, r1
   134d0:	ldr	r4, [sp, #56]	; 0x38
   134d4:	mov	r9, r2
   134d8:	mov	r8, r3
   134dc:	cmp	r4, #0
   134e0:	beq	13534 <close_stdout@@Base+0x14fc>
   134e4:	bl	11234 <__errno_location@plt>
   134e8:	ldr	r3, [r4]
   134ec:	add	lr, r4, #8
   134f0:	mov	r1, sl
   134f4:	mov	r2, r9
   134f8:	ldr	r6, [r0]
   134fc:	mov	r5, r0
   13500:	str	r3, [sp]
   13504:	mov	r0, r7
   13508:	ldr	ip, [r4, #4]
   1350c:	mov	r3, r8
   13510:	stmib	sp, {ip, lr}
   13514:	ldr	ip, [r4, #40]	; 0x28
   13518:	str	ip, [sp, #12]
   1351c:	ldr	ip, [r4, #44]	; 0x2c
   13520:	str	ip, [sp, #16]
   13524:	bl	12488 <close_stdout@@Base+0x450>
   13528:	str	r6, [r5]
   1352c:	add	sp, sp, #24
   13530:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13534:	ldr	r4, [pc, #8]	; 13544 <close_stdout@@Base+0x150c>
   13538:	add	r4, pc, r4
   1353c:	add	r4, r4, #256	; 0x100
   13540:	b	134e4 <close_stdout@@Base+0x14ac>
   13544:	andeq	r2, r1, ip, asr ip
   13548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1354c:	subs	r4, r3, #0
   13550:	sub	sp, sp, #36	; 0x24
   13554:	mov	r7, r0
   13558:	mov	r6, r1
   1355c:	mov	r5, r2
   13560:	beq	1361c <close_stdout@@Base+0x15e4>
   13564:	bl	11234 <__errno_location@plt>
   13568:	ldr	r3, [r4]
   1356c:	ldr	sl, [r4, #4]
   13570:	add	r9, r4, #8
   13574:	mov	r8, r0
   13578:	mov	r0, #0
   1357c:	ldr	r2, [r8]
   13580:	cmp	r5, r0
   13584:	orreq	sl, sl, #1
   13588:	str	r9, [sp, #8]
   1358c:	mov	r1, r0
   13590:	stm	sp, {r3, sl}
   13594:	mov	r3, r6
   13598:	ldr	ip, [r4, #40]	; 0x28
   1359c:	str	r2, [sp, #28]
   135a0:	mov	r2, r7
   135a4:	str	ip, [sp, #12]
   135a8:	ldr	ip, [r4, #44]	; 0x2c
   135ac:	str	ip, [sp, #16]
   135b0:	bl	12488 <close_stdout@@Base+0x450>
   135b4:	add	r1, r0, #1
   135b8:	mov	fp, r0
   135bc:	str	r1, [sp, #24]
   135c0:	mov	r0, r1
   135c4:	bl	1406c <close_stdout@@Base+0x2034>
   135c8:	ldr	lr, [r4]
   135cc:	str	sl, [sp, #4]
   135d0:	mov	r3, r6
   135d4:	str	r9, [sp, #8]
   135d8:	mov	r2, r7
   135dc:	str	lr, [sp]
   135e0:	ldr	lr, [r4, #40]	; 0x28
   135e4:	ldr	r1, [sp, #24]
   135e8:	str	lr, [sp, #12]
   135ec:	ldr	lr, [r4, #44]	; 0x2c
   135f0:	str	lr, [sp, #16]
   135f4:	str	r0, [sp, #24]
   135f8:	bl	12488 <close_stdout@@Base+0x450>
   135fc:	ldr	r3, [sp, #28]
   13600:	cmp	r5, #0
   13604:	str	r3, [r8]
   13608:	ldr	ip, [sp, #24]
   1360c:	strne	fp, [r5]
   13610:	mov	r0, ip
   13614:	add	sp, sp, #36	; 0x24
   13618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1361c:	ldr	r4, [pc, #8]	; 1362c <close_stdout@@Base+0x15f4>
   13620:	add	r4, pc, r4
   13624:	add	r4, r4, #256	; 0x100
   13628:	b	13564 <close_stdout@@Base+0x152c>
   1362c:	andeq	r2, r1, r4, ror fp
   13630:	mov	r3, r2
   13634:	mov	r2, #0
   13638:	b	13548 <close_stdout@@Base+0x1510>
   1363c:	ldr	r2, [pc, #152]	; 136dc <close_stdout@@Base+0x16a4>
   13640:	push	{r3, r4, r5, r6, r7, lr}
   13644:	add	r2, pc, r2
   13648:	ldr	r3, [pc, #144]	; 136e0 <close_stdout@@Base+0x16a8>
   1364c:	ldr	r6, [r2]
   13650:	add	r3, pc, r3
   13654:	cmp	r6, #1
   13658:	ldr	r7, [r3]
   1365c:	movhi	r4, #1
   13660:	movhi	r5, r7
   13664:	bls	13680 <close_stdout@@Base+0x1648>
   13668:	ldr	r0, [r5, #12]
   1366c:	add	r4, r4, #1
   13670:	bl	110a8 <free@plt>
   13674:	cmp	r4, r6
   13678:	add	r5, r5, #8
   1367c:	bne	13668 <close_stdout@@Base+0x1630>
   13680:	ldr	r4, [pc, #92]	; 136e4 <close_stdout@@Base+0x16ac>
   13684:	ldr	r0, [r7, #4]
   13688:	add	r4, pc, r4
   1368c:	cmp	r0, r4
   13690:	beq	136a8 <close_stdout@@Base+0x1670>
   13694:	bl	110a8 <free@plt>
   13698:	ldr	r3, [pc, #72]	; 136e8 <close_stdout@@Base+0x16b0>
   1369c:	mov	r2, #256	; 0x100
   136a0:	add	r3, pc, r3
   136a4:	stmib	r3, {r2, r4}
   136a8:	ldr	r4, [pc, #60]	; 136ec <close_stdout@@Base+0x16b4>
   136ac:	add	r4, pc, r4
   136b0:	add	r5, r4, #4
   136b4:	cmp	r7, r5
   136b8:	beq	136c8 <close_stdout@@Base+0x1690>
   136bc:	mov	r0, r7
   136c0:	bl	110a8 <free@plt>
   136c4:	str	r5, [r4]
   136c8:	ldr	r3, [pc, #32]	; 136f0 <close_stdout@@Base+0x16b8>
   136cc:	mov	r2, #1
   136d0:	add	r3, pc, r3
   136d4:	str	r2, [r3]
   136d8:	pop	{r3, r4, r5, r6, r7, pc}
   136dc:	andeq	r2, r1, r0, lsl #22
   136e0:	andeq	r2, r1, r8, lsr #22
   136e4:	andeq	r2, r1, ip, lsl #22
   136e8:	ldrdeq	r2, [r1], -r8
   136ec:	andeq	r2, r1, ip, asr #21
   136f0:	andeq	r2, r1, r4, ror sl
   136f4:	ldr	r3, [pc, #12]	; 13708 <close_stdout@@Base+0x16d0>
   136f8:	mvn	r2, #0
   136fc:	add	r3, pc, r3
   13700:	add	r3, r3, #256	; 0x100
   13704:	b	131b0 <close_stdout@@Base+0x1178>
   13708:	muleq	r1, r8, sl
   1370c:	ldr	r3, [pc, #8]	; 1371c <close_stdout@@Base+0x16e4>
   13710:	add	r3, pc, r3
   13714:	add	r3, r3, #256	; 0x100
   13718:	b	131b0 <close_stdout@@Base+0x1178>
   1371c:	andeq	r2, r1, r4, lsl #21
   13720:	mov	r1, r0
   13724:	mov	r0, #0
   13728:	b	136f4 <close_stdout@@Base+0x16bc>
   1372c:	mov	r2, r1
   13730:	mov	r1, r0
   13734:	mov	r0, #0
   13738:	b	1370c <close_stdout@@Base+0x16d4>
   1373c:	ldr	r3, [pc, #92]	; 137a0 <close_stdout@@Base+0x1768>
   13740:	ldr	ip, [pc, #92]	; 137a4 <close_stdout@@Base+0x176c>
   13744:	add	r3, pc, r3
   13748:	push	{r4, r5, r6, r7, lr}
   1374c:	sub	sp, sp, #60	; 0x3c
   13750:	ldr	r4, [r3, ip]
   13754:	add	r5, sp, #4
   13758:	mov	r7, r2
   1375c:	mov	r6, r0
   13760:	mov	r0, r5
   13764:	ldr	r3, [r4]
   13768:	str	r3, [sp, #52]	; 0x34
   1376c:	bl	122d0 <close_stdout@@Base+0x298>
   13770:	mov	r3, r5
   13774:	mvn	r2, #0
   13778:	mov	r0, r6
   1377c:	mov	r1, r7
   13780:	bl	131b0 <close_stdout@@Base+0x1178>
   13784:	ldr	r2, [sp, #52]	; 0x34
   13788:	ldr	r3, [r4]
   1378c:	cmp	r2, r3
   13790:	bne	1379c <close_stdout@@Base+0x1764>
   13794:	add	sp, sp, #60	; 0x3c
   13798:	pop	{r4, r5, r6, r7, pc}
   1379c:	bl	110f0 <__stack_chk_fail@plt>
   137a0:			; <UNDEFINED> instruction: 0x000128b4
   137a4:	andeq	r0, r0, ip, lsl #2
   137a8:	ldr	ip, [pc, #96]	; 13810 <close_stdout@@Base+0x17d8>
   137ac:	push	{r4, r5, r6, r7, r8, lr}
   137b0:	add	ip, pc, ip
   137b4:	ldr	lr, [pc, #88]	; 13814 <close_stdout@@Base+0x17dc>
   137b8:	sub	sp, sp, #56	; 0x38
   137bc:	mov	r8, r3
   137c0:	add	r5, sp, #4
   137c4:	mov	r7, r2
   137c8:	mov	r6, r0
   137cc:	ldr	r4, [ip, lr]
   137d0:	mov	r0, r5
   137d4:	ldr	r3, [r4]
   137d8:	str	r3, [sp, #52]	; 0x34
   137dc:	bl	122d0 <close_stdout@@Base+0x298>
   137e0:	mov	r2, r8
   137e4:	mov	r3, r5
   137e8:	mov	r0, r6
   137ec:	mov	r1, r7
   137f0:	bl	131b0 <close_stdout@@Base+0x1178>
   137f4:	ldr	r2, [sp, #52]	; 0x34
   137f8:	ldr	r3, [r4]
   137fc:	cmp	r2, r3
   13800:	bne	1380c <close_stdout@@Base+0x17d4>
   13804:	add	sp, sp, #56	; 0x38
   13808:	pop	{r4, r5, r6, r7, r8, pc}
   1380c:	bl	110f0 <__stack_chk_fail@plt>
   13810:	andeq	r2, r1, r8, asr #16
   13814:	andeq	r0, r0, ip, lsl #2
   13818:	mov	r2, r1
   1381c:	mov	r1, r0
   13820:	mov	r0, #0
   13824:	b	1373c <close_stdout@@Base+0x1704>
   13828:	mov	ip, r1
   1382c:	mov	r3, r2
   13830:	mov	r1, r0
   13834:	mov	r2, ip
   13838:	mov	r0, #0
   1383c:	b	137a8 <close_stdout@@Base+0x1770>
   13840:	push	{r4, r5, r6, r7, r8, lr}
   13844:	mov	r5, r2
   13848:	ldr	lr, [pc, #136]	; 138d8 <close_stdout@@Base+0x18a0>
   1384c:	mov	r7, r0
   13850:	mov	r6, r1
   13854:	ldr	r4, [pc, #128]	; 138dc <close_stdout@@Base+0x18a4>
   13858:	add	lr, pc, lr
   1385c:	sub	sp, sp, #56	; 0x38
   13860:	add	lr, lr, #256	; 0x100
   13864:	ldr	r8, [pc, #116]	; 138e0 <close_stdout@@Base+0x18a8>
   13868:	add	r4, pc, r4
   1386c:	add	ip, sp, #4
   13870:	ldm	lr!, {r0, r1, r2, r3}
   13874:	ldr	r4, [r4, r8]
   13878:	stmia	ip!, {r0, r1, r2, r3}
   1387c:	ldm	lr!, {r0, r1, r2, r3}
   13880:	ldr	r8, [r4]
   13884:	stmia	ip!, {r0, r1, r2, r3}
   13888:	ldm	lr, {r0, r1, r2, r3}
   1388c:	str	r8, [sp, #52]	; 0x34
   13890:	stm	ip, {r0, r1, r2, r3}
   13894:	mov	r1, r5
   13898:	add	r5, sp, #4
   1389c:	mov	r2, #1
   138a0:	mov	r0, r5
   138a4:	bl	1340c <close_stdout@@Base+0x13d4>
   138a8:	mov	r2, r6
   138ac:	mov	r3, r5
   138b0:	mov	r1, r7
   138b4:	mov	r0, #0
   138b8:	bl	131b0 <close_stdout@@Base+0x1178>
   138bc:	ldr	r2, [sp, #52]	; 0x34
   138c0:	ldr	r3, [r4]
   138c4:	cmp	r2, r3
   138c8:	bne	138d4 <close_stdout@@Base+0x189c>
   138cc:	add	sp, sp, #56	; 0x38
   138d0:	pop	{r4, r5, r6, r7, r8, pc}
   138d4:	bl	110f0 <__stack_chk_fail@plt>
   138d8:	andeq	r2, r1, ip, lsr r9
   138dc:	muleq	r1, r0, r7
   138e0:	andeq	r0, r0, ip, lsl #2
   138e4:	mov	r2, r1
   138e8:	mvn	r1, #0
   138ec:	b	13840 <close_stdout@@Base+0x1808>
   138f0:	mov	r1, #58	; 0x3a
   138f4:	b	138e4 <close_stdout@@Base+0x18ac>
   138f8:	mov	r2, #58	; 0x3a
   138fc:	b	13840 <close_stdout@@Base+0x1808>
   13900:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13904:	mov	r5, r2
   13908:	ldr	lr, [pc, #144]	; 139a0 <close_stdout@@Base+0x1968>
   1390c:	mov	r8, r0
   13910:	mov	r9, r1
   13914:	mov	r7, r3
   13918:	add	lr, pc, lr
   1391c:	ldr	r4, [pc, #128]	; 139a4 <close_stdout@@Base+0x196c>
   13920:	add	lr, lr, #256	; 0x100
   13924:	sub	sp, sp, #56	; 0x38
   13928:	ldr	sl, [pc, #120]	; 139a8 <close_stdout@@Base+0x1970>
   1392c:	add	r4, pc, r4
   13930:	ldm	lr!, {r0, r1, r2, r3}
   13934:	add	ip, sp, #4
   13938:	ldr	r4, [r4, sl]
   1393c:	ldr	r6, [sp, #88]	; 0x58
   13940:	stmia	ip!, {r0, r1, r2, r3}
   13944:	ldm	lr!, {r0, r1, r2, r3}
   13948:	ldr	sl, [r4]
   1394c:	stmia	ip!, {r0, r1, r2, r3}
   13950:	ldm	lr, {r0, r1, r2, r3}
   13954:	str	sl, [sp, #52]	; 0x34
   13958:	stm	ip, {r0, r1, r2, r3}
   1395c:	mov	r2, r5
   13960:	add	r5, sp, #4
   13964:	mov	r1, r9
   13968:	mov	r0, r5
   1396c:	bl	13480 <close_stdout@@Base+0x1448>
   13970:	mov	r2, r6
   13974:	mov	r3, r5
   13978:	mov	r0, r8
   1397c:	mov	r1, r7
   13980:	bl	131b0 <close_stdout@@Base+0x1178>
   13984:	ldr	r2, [sp, #52]	; 0x34
   13988:	ldr	r3, [r4]
   1398c:	cmp	r2, r3
   13990:	bne	1399c <close_stdout@@Base+0x1964>
   13994:	add	sp, sp, #56	; 0x38
   13998:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1399c:	bl	110f0 <__stack_chk_fail@plt>
   139a0:	andeq	r2, r1, ip, ror r8
   139a4:	andeq	r2, r1, ip, asr #13
   139a8:	andeq	r0, r0, ip, lsl #2
   139ac:	push	{lr}		; (str lr, [sp, #-4]!)
   139b0:	sub	sp, sp, #12
   139b4:	mvn	ip, #0
   139b8:	str	ip, [sp]
   139bc:	bl	13900 <close_stdout@@Base+0x18c8>
   139c0:	add	sp, sp, #12
   139c4:	pop	{pc}		; (ldr pc, [sp], #4)
   139c8:	mov	ip, r1
   139cc:	mov	r3, r2
   139d0:	mov	r1, r0
   139d4:	mov	r2, ip
   139d8:	mov	r0, #0
   139dc:	b	139ac <close_stdout@@Base+0x1974>
   139e0:	push	{lr}		; (str lr, [sp, #-4]!)
   139e4:	sub	sp, sp, #12
   139e8:	mov	lr, r1
   139ec:	mov	ip, r2
   139f0:	mov	r1, r0
   139f4:	str	r3, [sp]
   139f8:	mov	r2, lr
   139fc:	mov	r3, ip
   13a00:	mov	r0, #0
   13a04:	bl	13900 <close_stdout@@Base+0x18c8>
   13a08:	add	sp, sp, #12
   13a0c:	pop	{pc}		; (ldr pc, [sp], #4)
   13a10:	ldr	r3, [pc, #12]	; 13a24 <close_stdout@@Base+0x19ec>
   13a14:	ldr	ip, [pc, #12]	; 13a28 <close_stdout@@Base+0x19f0>
   13a18:	add	r3, pc, r3
   13a1c:	ldr	r3, [r3, ip]
   13a20:	b	131b0 <close_stdout@@Base+0x1178>
   13a24:	andeq	r2, r1, r0, ror #11
   13a28:	andeq	r0, r0, r8, lsl #2
   13a2c:	mov	r2, r1
   13a30:	mov	r1, r0
   13a34:	mov	r0, #0
   13a38:	b	13a10 <close_stdout@@Base+0x19d8>
   13a3c:	mvn	r2, #0
   13a40:	b	13a10 <close_stdout@@Base+0x19d8>
   13a44:	mov	r1, r0
   13a48:	mov	r0, #0
   13a4c:	b	13a3c <close_stdout@@Base+0x1a04>
   13a50:	ldr	r3, [pc, #104]	; 13ac0 <close_stdout@@Base+0x1a88>
   13a54:	ldr	ip, [pc, #104]	; 13ac4 <close_stdout@@Base+0x1a8c>
   13a58:	add	r3, pc, r3
   13a5c:	ldr	r1, [pc, #100]	; 13ac8 <close_stdout@@Base+0x1a90>
   13a60:	push	{r4, r5, r6, r7, lr}
   13a64:	sub	sp, sp, #116	; 0x74
   13a68:	ldr	r7, [r3, ip]
   13a6c:	mov	r6, r0
   13a70:	mov	r2, sp
   13a74:	mov	r0, #3
   13a78:	add	r1, pc, r1
   13a7c:	ldr	r3, [r7]
   13a80:	str	r3, [sp, #108]	; 0x6c
   13a84:	bl	11330 <__lxstat64@plt>
   13a88:	cmp	r0, #0
   13a8c:	ldrdeq	r2, [sp]
   13a90:	moveq	r0, r6
   13a94:	ldrdeq	r4, [sp, #96]	; 0x60
   13a98:	movne	r0, #0
   13a9c:	strdeq	r2, [r6, #8]
   13aa0:	strdeq	r4, [r6]
   13aa4:	ldr	r2, [sp, #108]	; 0x6c
   13aa8:	ldr	r3, [r7]
   13aac:	cmp	r2, r3
   13ab0:	bne	13abc <close_stdout@@Base+0x1a84>
   13ab4:	add	sp, sp, #116	; 0x74
   13ab8:	pop	{r4, r5, r6, r7, pc}
   13abc:	bl	110f0 <__stack_chk_fail@plt>
   13ac0:	andeq	r2, r1, r0, lsr #11
   13ac4:	andeq	r0, r0, ip, lsl #2
   13ac8:			; <UNDEFINED> instruction: 0x000011b8
   13acc:	push	{r4, r5, r6, r7, lr}
   13ad0:	cmp	r1, #0
   13ad4:	sub	sp, sp, #36	; 0x24
   13ad8:	ldr	r7, [pc, #896]	; 13e60 <close_stdout@@Base+0x1e28>
   13adc:	mov	ip, r3
   13ae0:	mov	r5, r0
   13ae4:	add	r7, pc, r7
   13ae8:	ldr	r4, [sp, #56]	; 0x38
   13aec:	ldr	r6, [sp, #60]	; 0x3c
   13af0:	beq	13e34 <close_stdout@@Base+0x1dfc>
   13af4:	str	r2, [sp]
   13af8:	mov	r3, r1
   13afc:	ldr	r2, [pc, #864]	; 13e64 <close_stdout@@Base+0x1e2c>
   13b00:	mov	r1, #1
   13b04:	str	ip, [sp, #4]
   13b08:	add	r2, pc, r2
   13b0c:	bl	1127c <__fprintf_chk@plt>
   13b10:	ldr	r1, [pc, #848]	; 13e68 <close_stdout@@Base+0x1e30>
   13b14:	mov	r2, #5
   13b18:	mov	r0, #0
   13b1c:	add	r1, pc, r1
   13b20:	bl	110e4 <dcgettext@plt>
   13b24:	ldr	r2, [pc, #832]	; 13e6c <close_stdout@@Base+0x1e34>
   13b28:	movw	ip, #2013	; 0x7dd
   13b2c:	mov	r1, #1
   13b30:	ldr	r2, [r7, r2]
   13b34:	str	ip, [sp]
   13b38:	mov	r3, r0
   13b3c:	mov	r0, r5
   13b40:	bl	1127c <__fprintf_chk@plt>
   13b44:	ldr	r1, [pc, #804]	; 13e70 <close_stdout@@Base+0x1e38>
   13b48:	mov	r0, #0
   13b4c:	mov	r2, #5
   13b50:	add	r1, pc, r1
   13b54:	bl	110e4 <dcgettext@plt>
   13b58:	mov	r1, r5
   13b5c:	bl	1106c <fputs_unlocked@plt>
   13b60:	cmp	r6, #9
   13b64:	addls	pc, pc, r6, lsl #2
   13b68:	b	13e50 <close_stdout@@Base+0x1e18>
   13b6c:	b	13c00 <close_stdout@@Base+0x1bc8>
   13b70:	b	13c04 <close_stdout@@Base+0x1bcc>
   13b74:	b	13c34 <close_stdout@@Base+0x1bfc>
   13b78:	b	13c68 <close_stdout@@Base+0x1c30>
   13b7c:	b	13ca4 <close_stdout@@Base+0x1c6c>
   13b80:	b	13ce4 <close_stdout@@Base+0x1cac>
   13b84:	b	13d2c <close_stdout@@Base+0x1cf4>
   13b88:	b	13d7c <close_stdout@@Base+0x1d44>
   13b8c:	b	13dd4 <close_stdout@@Base+0x1d9c>
   13b90:	b	13b94 <close_stdout@@Base+0x1b5c>
   13b94:	ldr	r1, [pc, #728]	; 13e74 <close_stdout@@Base+0x1e3c>
   13b98:	mov	r0, #0
   13b9c:	add	r1, pc, r1
   13ba0:	mov	r2, #5
   13ba4:	bl	110e4 <dcgettext@plt>
   13ba8:	ldm	r4, {r3, ip}
   13bac:	mov	r1, #1
   13bb0:	str	ip, [sp]
   13bb4:	ldr	ip, [r4, #8]
   13bb8:	str	ip, [sp, #4]
   13bbc:	ldr	ip, [r4, #12]
   13bc0:	str	ip, [sp, #8]
   13bc4:	ldr	ip, [r4, #16]
   13bc8:	str	ip, [sp, #12]
   13bcc:	ldr	ip, [r4, #20]
   13bd0:	str	ip, [sp, #16]
   13bd4:	ldr	ip, [r4, #24]
   13bd8:	str	ip, [sp, #20]
   13bdc:	ldr	ip, [r4, #28]
   13be0:	str	ip, [sp, #24]
   13be4:	ldr	ip, [r4, #32]
   13be8:	str	ip, [sp, #28]
   13bec:	mov	r2, r0
   13bf0:	mov	r0, r5
   13bf4:	bl	1127c <__fprintf_chk@plt>
   13bf8:	add	sp, sp, #36	; 0x24
   13bfc:	pop	{r4, r5, r6, r7, pc}
   13c00:	bl	11318 <abort@plt>
   13c04:	ldr	r1, [pc, #620]	; 13e78 <close_stdout@@Base+0x1e40>
   13c08:	mov	r2, #5
   13c0c:	mov	r0, #0
   13c10:	add	r1, pc, r1
   13c14:	bl	110e4 <dcgettext@plt>
   13c18:	ldr	r3, [r4]
   13c1c:	mov	r1, #1
   13c20:	mov	r2, r0
   13c24:	mov	r0, r5
   13c28:	add	sp, sp, #36	; 0x24
   13c2c:	pop	{r4, r5, r6, r7, lr}
   13c30:	b	1127c <__fprintf_chk@plt>
   13c34:	ldr	r1, [pc, #576]	; 13e7c <close_stdout@@Base+0x1e44>
   13c38:	mov	r2, #5
   13c3c:	mov	r0, #0
   13c40:	add	r1, pc, r1
   13c44:	bl	110e4 <dcgettext@plt>
   13c48:	ldm	r4, {r3, ip}
   13c4c:	mov	r1, #1
   13c50:	str	ip, [sp, #56]	; 0x38
   13c54:	mov	r2, r0
   13c58:	mov	r0, r5
   13c5c:	add	sp, sp, #36	; 0x24
   13c60:	pop	{r4, r5, r6, r7, lr}
   13c64:	b	1127c <__fprintf_chk@plt>
   13c68:	ldr	r1, [pc, #528]	; 13e80 <close_stdout@@Base+0x1e48>
   13c6c:	mov	r2, #5
   13c70:	mov	r0, #0
   13c74:	add	r1, pc, r1
   13c78:	bl	110e4 <dcgettext@plt>
   13c7c:	ldm	r4, {r3, ip}
   13c80:	mov	r1, #1
   13c84:	str	ip, [sp, #56]	; 0x38
   13c88:	ldr	ip, [r4, #8]
   13c8c:	str	ip, [sp, #60]	; 0x3c
   13c90:	mov	r2, r0
   13c94:	mov	r0, r5
   13c98:	add	sp, sp, #36	; 0x24
   13c9c:	pop	{r4, r5, r6, r7, lr}
   13ca0:	b	1127c <__fprintf_chk@plt>
   13ca4:	ldr	r1, [pc, #472]	; 13e84 <close_stdout@@Base+0x1e4c>
   13ca8:	mov	r2, #5
   13cac:	mov	r0, #0
   13cb0:	add	r1, pc, r1
   13cb4:	bl	110e4 <dcgettext@plt>
   13cb8:	ldm	r4, {r3, ip}
   13cbc:	mov	r1, #1
   13cc0:	str	ip, [sp]
   13cc4:	ldr	ip, [r4, #8]
   13cc8:	str	ip, [sp, #4]
   13ccc:	ldr	ip, [r4, #12]
   13cd0:	str	ip, [sp, #8]
   13cd4:	mov	r2, r0
   13cd8:	mov	r0, r5
   13cdc:	bl	1127c <__fprintf_chk@plt>
   13ce0:	b	13bf8 <close_stdout@@Base+0x1bc0>
   13ce4:	ldr	r1, [pc, #412]	; 13e88 <close_stdout@@Base+0x1e50>
   13ce8:	mov	r2, #5
   13cec:	mov	r0, #0
   13cf0:	add	r1, pc, r1
   13cf4:	bl	110e4 <dcgettext@plt>
   13cf8:	ldm	r4, {r3, ip}
   13cfc:	mov	r1, #1
   13d00:	str	ip, [sp]
   13d04:	ldr	ip, [r4, #8]
   13d08:	str	ip, [sp, #4]
   13d0c:	ldr	ip, [r4, #12]
   13d10:	str	ip, [sp, #8]
   13d14:	ldr	ip, [r4, #16]
   13d18:	str	ip, [sp, #12]
   13d1c:	mov	r2, r0
   13d20:	mov	r0, r5
   13d24:	bl	1127c <__fprintf_chk@plt>
   13d28:	b	13bf8 <close_stdout@@Base+0x1bc0>
   13d2c:	ldr	r1, [pc, #344]	; 13e8c <close_stdout@@Base+0x1e54>
   13d30:	mov	r2, #5
   13d34:	mov	r0, #0
   13d38:	add	r1, pc, r1
   13d3c:	bl	110e4 <dcgettext@plt>
   13d40:	ldm	r4, {r3, ip}
   13d44:	mov	r1, #1
   13d48:	str	ip, [sp]
   13d4c:	ldr	ip, [r4, #8]
   13d50:	str	ip, [sp, #4]
   13d54:	ldr	ip, [r4, #12]
   13d58:	str	ip, [sp, #8]
   13d5c:	ldr	ip, [r4, #16]
   13d60:	str	ip, [sp, #12]
   13d64:	ldr	ip, [r4, #20]
   13d68:	str	ip, [sp, #16]
   13d6c:	mov	r2, r0
   13d70:	mov	r0, r5
   13d74:	bl	1127c <__fprintf_chk@plt>
   13d78:	b	13bf8 <close_stdout@@Base+0x1bc0>
   13d7c:	ldr	r1, [pc, #268]	; 13e90 <close_stdout@@Base+0x1e58>
   13d80:	mov	r2, #5
   13d84:	mov	r0, #0
   13d88:	add	r1, pc, r1
   13d8c:	bl	110e4 <dcgettext@plt>
   13d90:	ldm	r4, {r3, ip}
   13d94:	mov	r1, #1
   13d98:	str	ip, [sp]
   13d9c:	ldr	ip, [r4, #8]
   13da0:	str	ip, [sp, #4]
   13da4:	ldr	ip, [r4, #12]
   13da8:	str	ip, [sp, #8]
   13dac:	ldr	ip, [r4, #16]
   13db0:	str	ip, [sp, #12]
   13db4:	ldr	ip, [r4, #20]
   13db8:	str	ip, [sp, #16]
   13dbc:	ldr	ip, [r4, #24]
   13dc0:	str	ip, [sp, #20]
   13dc4:	mov	r2, r0
   13dc8:	mov	r0, r5
   13dcc:	bl	1127c <__fprintf_chk@plt>
   13dd0:	b	13bf8 <close_stdout@@Base+0x1bc0>
   13dd4:	ldr	r1, [pc, #184]	; 13e94 <close_stdout@@Base+0x1e5c>
   13dd8:	mov	r2, #5
   13ddc:	mov	r0, #0
   13de0:	add	r1, pc, r1
   13de4:	bl	110e4 <dcgettext@plt>
   13de8:	ldm	r4, {r3, ip}
   13dec:	mov	r1, #1
   13df0:	str	ip, [sp]
   13df4:	ldr	ip, [r4, #8]
   13df8:	str	ip, [sp, #4]
   13dfc:	ldr	ip, [r4, #12]
   13e00:	str	ip, [sp, #8]
   13e04:	ldr	ip, [r4, #16]
   13e08:	str	ip, [sp, #12]
   13e0c:	ldr	ip, [r4, #20]
   13e10:	str	ip, [sp, #16]
   13e14:	ldr	ip, [r4, #24]
   13e18:	str	ip, [sp, #20]
   13e1c:	ldr	ip, [r4, #28]
   13e20:	str	ip, [sp, #24]
   13e24:	mov	r2, r0
   13e28:	mov	r0, r5
   13e2c:	bl	1127c <__fprintf_chk@plt>
   13e30:	b	13bf8 <close_stdout@@Base+0x1bc0>
   13e34:	str	r3, [sp]
   13e38:	mov	r3, r2
   13e3c:	ldr	r2, [pc, #84]	; 13e98 <close_stdout@@Base+0x1e60>
   13e40:	mov	r1, #1
   13e44:	add	r2, pc, r2
   13e48:	bl	1127c <__fprintf_chk@plt>
   13e4c:	b	13b10 <close_stdout@@Base+0x1ad8>
   13e50:	ldr	r1, [pc, #68]	; 13e9c <close_stdout@@Base+0x1e64>
   13e54:	mov	r0, #0
   13e58:	add	r1, pc, r1
   13e5c:	b	13ba0 <close_stdout@@Base+0x1b68>
   13e60:	andeq	r2, r1, r4, lsl r5
   13e64:	andeq	r1, r0, ip, lsr #12
   13e68:	andeq	r1, r0, ip, lsr #12
   13e6c:	andeq	r0, r0, r8, lsr r1
   13e70:	strdeq	r1, [r0], -ip
   13e74:	andeq	r1, r0, r8, lsl #15
   13e78:	andeq	r1, r0, r8, lsl #12
   13e7c:	andeq	r1, r0, r8, ror #11
   13e80:	andeq	r1, r0, ip, asr #11
   13e84:	andeq	r1, r0, ip, lsr #11
   13e88:	andeq	r1, r0, ip, lsl #11
   13e8c:	andeq	r1, r0, r8, ror #10
   13e90:	andeq	r1, r0, r0, asr #10
   13e94:	andeq	r1, r0, r4, lsl r5
   13e98:	strdeq	r1, [r0], -ip
   13e9c:	andeq	r1, r0, r0, lsl #10
   13ea0:	push	{r4, r5, lr}
   13ea4:	sub	sp, sp, #12
   13ea8:	ldr	r5, [sp, #24]
   13eac:	ldr	ip, [r5]
   13eb0:	cmp	ip, #0
   13eb4:	beq	13ed0 <close_stdout@@Base+0x1e98>
   13eb8:	mov	lr, r5
   13ebc:	mov	ip, #0
   13ec0:	ldr	r4, [lr, #4]!
   13ec4:	add	ip, ip, #1
   13ec8:	cmp	r4, #0
   13ecc:	bne	13ec0 <close_stdout@@Base+0x1e88>
   13ed0:	stm	sp, {r5, ip}
   13ed4:	bl	13acc <close_stdout@@Base+0x1a94>
   13ed8:	add	sp, sp, #12
   13edc:	pop	{r4, r5, pc}
   13ee0:	push	{r4, r5, r6, r7, lr}
   13ee4:	sub	sp, sp, #60	; 0x3c
   13ee8:	ldr	r4, [pc, #100]	; 13f54 <close_stdout@@Base+0x1f1c>
   13eec:	mov	ip, #0
   13ef0:	ldr	r5, [pc, #96]	; 13f58 <close_stdout@@Base+0x1f20>
   13ef4:	mov	lr, ip
   13ef8:	add	r4, pc, r4
   13efc:	ldr	r6, [sp, #80]	; 0x50
   13f00:	ldr	r7, [r4, r5]
   13f04:	add	r5, sp, #12
   13f08:	ldr	r4, [r7]
   13f0c:	str	r4, [sp, #52]	; 0x34
   13f10:	ldr	r4, [r6, ip]
   13f14:	cmp	r4, #0
   13f18:	str	r4, [r5, ip]
   13f1c:	beq	13f30 <close_stdout@@Base+0x1ef8>
   13f20:	add	lr, lr, #1
   13f24:	add	ip, ip, #4
   13f28:	cmp	lr, #10
   13f2c:	bne	13f10 <close_stdout@@Base+0x1ed8>
   13f30:	stm	sp, {r5, lr}
   13f34:	bl	13acc <close_stdout@@Base+0x1a94>
   13f38:	ldr	r2, [sp, #52]	; 0x34
   13f3c:	ldr	r3, [r7]
   13f40:	cmp	r2, r3
   13f44:	bne	13f50 <close_stdout@@Base+0x1f18>
   13f48:	add	sp, sp, #60	; 0x3c
   13f4c:	pop	{r4, r5, r6, r7, pc}
   13f50:	bl	110f0 <__stack_chk_fail@plt>
   13f54:	andeq	r2, r1, r0, lsl #2
   13f58:	andeq	r0, r0, ip, lsl #2
   13f5c:	push	{r3}		; (str r3, [sp, #-4]!)
   13f60:	push	{r4, lr}
   13f64:	sub	sp, sp, #20
   13f68:	ldr	lr, [pc, #72]	; 13fb8 <close_stdout@@Base+0x1f80>
   13f6c:	add	ip, sp, #32
   13f70:	ldr	r4, [pc, #68]	; 13fbc <close_stdout@@Base+0x1f84>
   13f74:	add	lr, pc, lr
   13f78:	ldr	r3, [sp, #28]
   13f7c:	ldr	r4, [lr, r4]
   13f80:	str	ip, [sp]
   13f84:	str	ip, [sp, #8]
   13f88:	ldr	ip, [r4]
   13f8c:	str	ip, [sp, #12]
   13f90:	bl	13ee0 <close_stdout@@Base+0x1ea8>
   13f94:	ldr	r2, [sp, #12]
   13f98:	ldr	r3, [r4]
   13f9c:	cmp	r2, r3
   13fa0:	bne	13fb4 <close_stdout@@Base+0x1f7c>
   13fa4:	add	sp, sp, #20
   13fa8:	pop	{r4, lr}
   13fac:	add	sp, sp, #4
   13fb0:	bx	lr
   13fb4:	bl	110f0 <__stack_chk_fail@plt>
   13fb8:	andeq	r2, r1, r4, lsl #1
   13fbc:	andeq	r0, r0, ip, lsl #2
   13fc0:	ldr	r1, [pc, #132]	; 1404c <close_stdout@@Base+0x2014>
   13fc4:	mov	r2, #5
   13fc8:	push	{r4, lr}
   13fcc:	add	r1, pc, r1
   13fd0:	mov	r0, #0
   13fd4:	ldr	r4, [pc, #116]	; 14050 <close_stdout@@Base+0x2018>
   13fd8:	bl	110e4 <dcgettext@plt>
   13fdc:	ldr	r2, [pc, #112]	; 14054 <close_stdout@@Base+0x201c>
   13fe0:	add	r4, pc, r4
   13fe4:	add	r2, pc, r2
   13fe8:	mov	r1, r0
   13fec:	mov	r0, #1
   13ff0:	bl	11264 <__printf_chk@plt>
   13ff4:	ldr	r1, [pc, #92]	; 14058 <close_stdout@@Base+0x2020>
   13ff8:	mov	r2, #5
   13ffc:	mov	r0, #0
   14000:	add	r1, pc, r1
   14004:	bl	110e4 <dcgettext@plt>
   14008:	ldr	r2, [pc, #76]	; 1405c <close_stdout@@Base+0x2024>
   1400c:	ldr	r3, [pc, #76]	; 14060 <close_stdout@@Base+0x2028>
   14010:	add	r2, pc, r2
   14014:	add	r3, pc, r3
   14018:	mov	r1, r0
   1401c:	mov	r0, #1
   14020:	bl	11264 <__printf_chk@plt>
   14024:	ldr	r1, [pc, #56]	; 14064 <close_stdout@@Base+0x202c>
   14028:	mov	r0, #0
   1402c:	mov	r2, #5
   14030:	add	r1, pc, r1
   14034:	bl	110e4 <dcgettext@plt>
   14038:	ldr	r3, [pc, #40]	; 14068 <close_stdout@@Base+0x2030>
   1403c:	ldr	r3, [r4, r3]
   14040:	pop	{r4, lr}
   14044:	ldr	r1, [r3]
   14048:	b	1106c <fputs_unlocked@plt>
   1404c:	andeq	r1, r0, r8, asr #7
   14050:	andeq	r2, r1, r8, lsl r0
   14054:	andeq	r1, r0, r8, asr #7
   14058:	andeq	r1, r0, r4, asr #7
   1405c:	strdeq	r0, [r0], -r8
   14060:	andeq	r0, r0, r4, lsl #30
   14064:	andeq	r1, r0, r8, lsr #7
   14068:	andeq	r0, r0, r8, lsr #2
   1406c:	push	{r4, lr}
   14070:	mov	r4, r0
   14074:	bl	111bc <malloc@plt>
   14078:	rsbs	r3, r0, #1
   1407c:	movcc	r3, #0
   14080:	cmp	r4, #0
   14084:	moveq	r3, #0
   14088:	cmp	r3, #0
   1408c:	popeq	{r4, pc}
   14090:	bl	14280 <close_stdout@@Base+0x2248>
   14094:	push	{r3, r4, r5, lr}
   14098:	mov	r4, r0
   1409c:	mvn	r0, #0
   140a0:	mov	r5, r1
   140a4:	bl	14954 <close_stdout@@Base+0x291c>
   140a8:	cmp	r0, r4
   140ac:	bcc	140bc <close_stdout@@Base+0x2084>
   140b0:	mul	r0, r4, r5
   140b4:	pop	{r3, r4, r5, lr}
   140b8:	b	1406c <close_stdout@@Base+0x2034>
   140bc:	bl	14280 <close_stdout@@Base+0x2248>
   140c0:	b	1406c <close_stdout@@Base+0x2034>
   140c4:	rsbs	r3, r1, #1
   140c8:	push	{r4, lr}
   140cc:	movcc	r3, #0
   140d0:	cmp	r0, #0
   140d4:	mov	r4, r1
   140d8:	moveq	r3, #0
   140dc:	cmp	r3, #0
   140e0:	bne	14104 <close_stdout@@Base+0x20cc>
   140e4:	bl	110fc <realloc@plt>
   140e8:	rsbs	r3, r0, #1
   140ec:	movcc	r3, #0
   140f0:	cmp	r4, #0
   140f4:	moveq	r3, #0
   140f8:	cmp	r3, #0
   140fc:	popeq	{r4, pc}
   14100:	bl	14280 <close_stdout@@Base+0x2248>
   14104:	bl	110a8 <free@plt>
   14108:	mov	r0, #0
   1410c:	pop	{r4, pc}
   14110:	push	{r4, r5, r6, lr}
   14114:	mov	r5, r1
   14118:	mov	r6, r0
   1411c:	mov	r1, r2
   14120:	mvn	r0, #0
   14124:	mov	r4, r2
   14128:	bl	14954 <close_stdout@@Base+0x291c>
   1412c:	cmp	r0, r5
   14130:	bcc	14144 <close_stdout@@Base+0x210c>
   14134:	mov	r0, r6
   14138:	mul	r1, r5, r4
   1413c:	pop	{r4, r5, r6, lr}
   14140:	b	140c4 <close_stdout@@Base+0x208c>
   14144:	bl	14280 <close_stdout@@Base+0x2248>
   14148:	push	{r3, r4, r5, r6, r7, lr}
   1414c:	subs	r7, r0, #0
   14150:	mov	r5, r1
   14154:	mov	r6, r2
   14158:	ldr	r4, [r1]
   1415c:	beq	14194 <close_stdout@@Base+0x215c>
   14160:	movw	r0, #43690	; 0xaaaa
   14164:	mov	r1, r2
   14168:	bfi	r0, r0, #16, #16
   1416c:	bl	14954 <close_stdout@@Base+0x291c>
   14170:	cmp	r4, r0
   14174:	addcc	r3, r4, #1
   14178:	addcc	r4, r4, r3, lsr #1
   1417c:	bcs	141b8 <close_stdout@@Base+0x2180>
   14180:	str	r4, [r5]
   14184:	mov	r0, r7
   14188:	mul	r1, r6, r4
   1418c:	pop	{r3, r4, r5, r6, r7, lr}
   14190:	b	140c4 <close_stdout@@Base+0x208c>
   14194:	cmp	r4, #0
   14198:	bne	14180 <close_stdout@@Base+0x2148>
   1419c:	mov	r0, #64	; 0x40
   141a0:	mov	r1, r2
   141a4:	bl	14954 <close_stdout@@Base+0x291c>
   141a8:	cmp	r0, #0
   141ac:	movne	r4, r0
   141b0:	addeq	r4, r0, #1
   141b4:	b	14180 <close_stdout@@Base+0x2148>
   141b8:	bl	14280 <close_stdout@@Base+0x2248>
   141bc:	cmp	r0, #0
   141c0:	push	{r3, lr}
   141c4:	ldr	r3, [r1]
   141c8:	beq	141f4 <close_stdout@@Base+0x21bc>
   141cc:	movw	r2, #43689	; 0xaaa9
   141d0:	movt	r2, #43690	; 0xaaaa
   141d4:	cmp	r3, r2
   141d8:	addls	r2, r3, #1
   141dc:	addls	r3, r3, r2, lsr #1
   141e0:	bhi	1420c <close_stdout@@Base+0x21d4>
   141e4:	str	r3, [r1]
   141e8:	mov	r1, r3
   141ec:	pop	{r3, lr}
   141f0:	b	140c4 <close_stdout@@Base+0x208c>
   141f4:	cmp	r3, #0
   141f8:	moveq	r3, #64	; 0x40
   141fc:	str	r3, [r1]
   14200:	mov	r1, r3
   14204:	pop	{r3, lr}
   14208:	b	140c4 <close_stdout@@Base+0x208c>
   1420c:	bl	14280 <close_stdout@@Base+0x2248>
   14210:	push	{r4, lr}
   14214:	mov	r4, r0
   14218:	bl	1406c <close_stdout@@Base+0x2034>
   1421c:	mov	r2, r4
   14220:	mov	r1, #0
   14224:	pop	{r4, lr}
   14228:	b	1124c <memset@plt>
   1422c:	push	{r3, lr}
   14230:	bl	11060 <calloc@plt>
   14234:	cmp	r0, #0
   14238:	popne	{r3, pc}
   1423c:	bl	14280 <close_stdout@@Base+0x2248>
   14240:	push	{r3, r4, r5, lr}
   14244:	mov	r4, r1
   14248:	mov	r5, r0
   1424c:	mov	r0, r1
   14250:	bl	1406c <close_stdout@@Base+0x2034>
   14254:	mov	r1, r5
   14258:	mov	r2, r4
   1425c:	pop	{r3, r4, r5, lr}
   14260:	b	110c0 <memcpy@plt>
   14264:	push	{r4, lr}
   14268:	mov	r4, r0
   1426c:	bl	1121c <strlen@plt>
   14270:	add	r1, r0, #1
   14274:	mov	r0, r4
   14278:	pop	{r4, lr}
   1427c:	b	14240 <close_stdout@@Base+0x2208>
   14280:	ldr	r3, [pc, #64]	; 142c8 <close_stdout@@Base+0x2290>
   14284:	mov	r2, #5
   14288:	ldr	ip, [pc, #60]	; 142cc <close_stdout@@Base+0x2294>
   1428c:	mov	r0, #0
   14290:	add	r3, pc, r3
   14294:	ldr	r1, [pc, #52]	; 142d0 <close_stdout@@Base+0x2298>
   14298:	push	{r4, lr}
   1429c:	add	r1, pc, r1
   142a0:	ldr	r3, [r3, ip]
   142a4:	ldr	r4, [r3]
   142a8:	bl	110e4 <dcgettext@plt>
   142ac:	ldr	r2, [pc, #32]	; 142d4 <close_stdout@@Base+0x229c>
   142b0:	mov	r1, #0
   142b4:	add	r2, pc, r2
   142b8:	mov	r3, r0
   142bc:	mov	r0, r4
   142c0:	bl	11180 <error@plt>
   142c4:	bl	11318 <abort@plt>
   142c8:	andeq	r1, r1, r8, ror #26
   142cc:	andeq	r0, r0, ip, lsr #2
   142d0:	andeq	r1, r0, ip, lsr #3
   142d4:			; <UNDEFINED> instruction: 0x00000db8
   142d8:	mov	r0, #0
   142dc:	push	{r4, lr}
   142e0:	mov	r1, r0
   142e4:	bl	11204 <getcwd@plt>
   142e8:	subs	r4, r0, #0
   142ec:	beq	142f8 <close_stdout@@Base+0x22c0>
   142f0:	mov	r0, r4
   142f4:	pop	{r4, pc}
   142f8:	bl	11234 <__errno_location@plt>
   142fc:	ldr	r3, [r0]
   14300:	cmp	r3, #12
   14304:	bne	142f0 <close_stdout@@Base+0x22b8>
   14308:	bl	14280 <close_stdout@@Base+0x2248>
   1430c:	push	{r4, r5, r6, lr}
   14310:	mov	r4, r0
   14314:	bl	11168 <__fpending@plt>
   14318:	mov	r6, r0
   1431c:	mov	r0, r4
   14320:	ldr	r4, [r4]
   14324:	bl	147ac <close_stdout@@Base+0x2774>
   14328:	and	r4, r4, #32
   1432c:	adds	r5, r0, #0
   14330:	movne	r5, #1
   14334:	cmp	r4, #0
   14338:	bne	14358 <close_stdout@@Base+0x2320>
   1433c:	cmp	r5, #0
   14340:	beq	14350 <close_stdout@@Base+0x2318>
   14344:	cmp	r6, #0
   14348:	beq	14374 <close_stdout@@Base+0x233c>
   1434c:	mvn	r4, #0
   14350:	mov	r0, r4
   14354:	pop	{r4, r5, r6, pc}
   14358:	cmp	r5, #0
   1435c:	bne	1434c <close_stdout@@Base+0x2314>
   14360:	bl	11234 <__errno_location@plt>
   14364:	mvn	r4, #0
   14368:	str	r5, [r0]
   1436c:	mov	r0, r4
   14370:	pop	{r4, r5, r6, pc}
   14374:	bl	11234 <__errno_location@plt>
   14378:	ldr	r4, [r0]
   1437c:	subs	r4, r4, #9
   14380:	mvnne	r4, #0
   14384:	mov	r0, r4
   14388:	pop	{r4, r5, r6, pc}
   1438c:	ldr	r3, [pc, #984]	; 1476c <close_stdout@@Base+0x2734>
   14390:	mov	r0, #14
   14394:	ldr	r2, [pc, #980]	; 14770 <close_stdout@@Base+0x2738>
   14398:	add	r3, pc, r3
   1439c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143a0:	sub	sp, sp, #132	; 0x84
   143a4:	ldr	r6, [r3, r2]
   143a8:	ldr	r3, [r6]
   143ac:	str	r3, [sp, #124]	; 0x7c
   143b0:	bl	112c4 <nl_langinfo@plt>
   143b4:	subs	r5, r0, #0
   143b8:	beq	1446c <close_stdout@@Base+0x2434>
   143bc:	ldr	r3, [pc, #944]	; 14774 <close_stdout@@Base+0x273c>
   143c0:	ldr	r4, [pc, r3]
   143c4:	cmp	r4, #0
   143c8:	beq	14478 <close_stdout@@Base+0x2440>
   143cc:	ldrb	r7, [r4]
   143d0:	cmp	r7, #0
   143d4:	bne	14408 <close_stdout@@Base+0x23d0>
   143d8:	b	14440 <close_stdout@@Base+0x2408>
   143dc:	mov	r0, r4
   143e0:	bl	1121c <strlen@plt>
   143e4:	add	r0, r0, #1
   143e8:	add	r7, r4, r0
   143ec:	mov	r0, r7
   143f0:	bl	1121c <strlen@plt>
   143f4:	add	r0, r0, #1
   143f8:	add	r4, r7, r0
   143fc:	ldrb	r7, [r7, r0]
   14400:	cmp	r7, #0
   14404:	beq	14440 <close_stdout@@Base+0x2408>
   14408:	mov	r0, r5
   1440c:	mov	r1, r4
   14410:	bl	11090 <strcmp@plt>
   14414:	cmp	r0, #0
   14418:	beq	14430 <close_stdout@@Base+0x23f8>
   1441c:	cmp	r7, #42	; 0x2a
   14420:	bne	143dc <close_stdout@@Base+0x23a4>
   14424:	ldrb	r3, [r4, #1]
   14428:	cmp	r3, #0
   1442c:	bne	143dc <close_stdout@@Base+0x23a4>
   14430:	mov	r0, r4
   14434:	bl	1121c <strlen@plt>
   14438:	add	r0, r0, #1
   1443c:	add	r5, r4, r0
   14440:	ldrb	r3, [r5]
   14444:	cmp	r3, #0
   14448:	ldreq	r5, [pc, #808]	; 14778 <close_stdout@@Base+0x2740>
   1444c:	addeq	r5, pc, r5
   14450:	ldr	r2, [sp, #124]	; 0x7c
   14454:	mov	r0, r5
   14458:	ldr	r3, [r6]
   1445c:	cmp	r2, r3
   14460:	bne	14740 <close_stdout@@Base+0x2708>
   14464:	add	sp, sp, #132	; 0x84
   14468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1446c:	ldr	r5, [pc, #776]	; 1477c <close_stdout@@Base+0x2744>
   14470:	add	r5, pc, r5
   14474:	b	143bc <close_stdout@@Base+0x2384>
   14478:	ldr	r0, [pc, #768]	; 14780 <close_stdout@@Base+0x2748>
   1447c:	add	r0, pc, r0
   14480:	bl	111a4 <getenv@plt>
   14484:	subs	r8, r0, #0
   14488:	beq	14718 <close_stdout@@Base+0x26e0>
   1448c:	ldrb	r3, [r8]
   14490:	cmp	r3, #0
   14494:	beq	146ac <close_stdout@@Base+0x2674>
   14498:	bl	1121c <strlen@plt>
   1449c:	subs	sl, r0, #0
   144a0:	subne	r3, sl, #1
   144a4:	bne	146bc <close_stdout@@Base+0x2684>
   144a8:	mov	r9, #0
   144ac:	mov	fp, r9
   144b0:	add	r9, sl, r9
   144b4:	add	r0, r9, #14
   144b8:	bl	111bc <malloc@plt>
   144bc:	subs	r7, r0, #0
   144c0:	beq	1470c <close_stdout@@Base+0x26d4>
   144c4:	mov	r1, r8
   144c8:	mov	r2, sl
   144cc:	bl	110c0 <memcpy@plt>
   144d0:	cmp	fp, #0
   144d4:	add	ip, r7, r9
   144d8:	movne	r3, #47	; 0x2f
   144dc:	strbne	r3, [r7, sl]
   144e0:	ldr	r3, [pc, #668]	; 14784 <close_stdout@@Base+0x274c>
   144e4:	add	r3, pc, r3
   144e8:	ldm	r3!, {r0, r1, r2}
   144ec:	ldrh	r3, [r3]
   144f0:	str	r0, [r7, r9]
   144f4:	mov	r0, r7
   144f8:	str	r1, [ip, #4]
   144fc:	mov	r1, #32768	; 0x8000
   14500:	strh	r3, [ip, #12]
   14504:	str	r2, [ip, #8]
   14508:	bl	11198 <open64@plt>
   1450c:	subs	r8, r0, #0
   14510:	blt	146d4 <close_stdout@@Base+0x269c>
   14514:	ldr	r1, [pc, #620]	; 14788 <close_stdout@@Base+0x2750>
   14518:	add	r1, pc, r1
   1451c:	bl	11054 <fdopen@plt>
   14520:	subs	fp, r0, #0
   14524:	beq	1472c <close_stdout@@Base+0x26f4>
   14528:	ldr	r0, [pc, #604]	; 1478c <close_stdout@@Base+0x2754>
   1452c:	add	sl, sp, #20
   14530:	add	r9, sp, #72	; 0x48
   14534:	mov	r8, #0
   14538:	add	r0, pc, r0
   1453c:	str	r0, [sp, #12]
   14540:	ldr	r3, [fp, #4]
   14544:	ldr	r2, [fp, #8]
   14548:	cmp	r3, r2
   1454c:	bcs	14638 <close_stdout@@Base+0x2600>
   14550:	add	r2, r3, #1
   14554:	str	r2, [fp, #4]
   14558:	ldrb	r0, [r3]
   1455c:	cmp	r0, #32
   14560:	beq	14540 <close_stdout@@Base+0x2508>
   14564:	sub	r3, r0, #9
   14568:	cmp	r3, #1
   1456c:	bls	14540 <close_stdout@@Base+0x2508>
   14570:	cmp	r0, #35	; 0x23
   14574:	beq	1464c <close_stdout@@Base+0x2614>
   14578:	mov	r1, fp
   1457c:	bl	11228 <ungetc@plt>
   14580:	mov	r0, fp
   14584:	ldr	r1, [sp, #12]
   14588:	mov	r2, sl
   1458c:	mov	r3, r9
   14590:	bl	11258 <fscanf@plt>
   14594:	cmp	r0, #1
   14598:	ble	1467c <close_stdout@@Base+0x2644>
   1459c:	mov	r0, sl
   145a0:	bl	1121c <strlen@plt>
   145a4:	str	r0, [sp, #8]
   145a8:	mov	r0, r9
   145ac:	bl	1121c <strlen@plt>
   145b0:	cmp	r8, #0
   145b4:	mov	r2, r0
   145b8:	bne	146e0 <close_stdout@@Base+0x26a8>
   145bc:	ldr	r3, [sp, #8]
   145c0:	str	r2, [sp]
   145c4:	add	r8, r0, r3
   145c8:	add	r0, r8, #3
   145cc:	add	r8, r8, #2
   145d0:	bl	111bc <malloc@plt>
   145d4:	ldr	r2, [sp]
   145d8:	mov	r3, r0
   145dc:	cmp	r3, #0
   145e0:	beq	14744 <close_stdout@@Base+0x270c>
   145e4:	ldr	r0, [sp, #8]
   145e8:	movw	r1, #65534	; 0xfffe
   145ec:	movt	r1, #65535	; 0xffff
   145f0:	rsb	r2, r2, r8
   145f4:	rsb	r1, r0, r1
   145f8:	stm	sp, {r2, r3}
   145fc:	add	r0, r1, r2
   14600:	mov	r1, sl
   14604:	add	r0, r3, r0
   14608:	mov	r4, r3
   1460c:	bl	1115c <strcpy@plt>
   14610:	ldr	r2, [sp]
   14614:	ldr	r3, [sp, #4]
   14618:	mov	r1, r9
   1461c:	sub	r0, r2, #1
   14620:	add	r0, r3, r0
   14624:	bl	1115c <strcpy@plt>
   14628:	ldr	r3, [fp, #4]
   1462c:	ldr	r2, [fp, #8]
   14630:	cmp	r3, r2
   14634:	bcc	14550 <close_stdout@@Base+0x2518>
   14638:	mov	r0, fp
   1463c:	bl	112a0 <__uflow@plt>
   14640:	cmn	r0, #1
   14644:	beq	1467c <close_stdout@@Base+0x2644>
   14648:	b	1455c <close_stdout@@Base+0x2524>
   1464c:	ldr	r3, [fp, #4]
   14650:	ldr	r2, [fp, #8]
   14654:	cmp	r3, r2
   14658:	bcs	14760 <close_stdout@@Base+0x2728>
   1465c:	add	r2, r3, #1
   14660:	str	r2, [fp, #4]
   14664:	ldrb	r0, [r3]
   14668:	cmp	r0, #10
   1466c:	cmnne	r0, #1
   14670:	bne	1464c <close_stdout@@Base+0x2614>
   14674:	cmn	r0, #1
   14678:	bne	14540 <close_stdout@@Base+0x2508>
   1467c:	mov	r0, fp
   14680:	bl	147ac <close_stdout@@Base+0x2774>
   14684:	cmp	r8, #0
   14688:	beq	146d4 <close_stdout@@Base+0x269c>
   1468c:	mov	r3, #0
   14690:	strb	r3, [r4, r8]
   14694:	mov	r0, r7
   14698:	bl	110a8 <free@plt>
   1469c:	ldr	r3, [pc, #236]	; 14790 <close_stdout@@Base+0x2758>
   146a0:	add	r3, pc, r3
   146a4:	str	r4, [r3]
   146a8:	b	143cc <close_stdout@@Base+0x2394>
   146ac:	ldr	r8, [pc, #224]	; 14794 <close_stdout@@Base+0x275c>
   146b0:	mov	r3, #7
   146b4:	mov	sl, #8
   146b8:	add	r8, pc, r8
   146bc:	ldrb	r3, [r8, r3]
   146c0:	cmp	r3, #47	; 0x2f
   146c4:	movne	r9, #1
   146c8:	movne	fp, r9
   146cc:	bne	144b0 <close_stdout@@Base+0x2478>
   146d0:	b	144a8 <close_stdout@@Base+0x2470>
   146d4:	ldr	r4, [pc, #188]	; 14798 <close_stdout@@Base+0x2760>
   146d8:	add	r4, pc, r4
   146dc:	b	14694 <close_stdout@@Base+0x265c>
   146e0:	ldr	r0, [sp, #8]
   146e4:	str	r2, [sp]
   146e8:	add	r3, r0, r2
   146ec:	mov	r0, r4
   146f0:	add	r8, r3, r8
   146f4:	add	r1, r8, #3
   146f8:	add	r8, r8, #2
   146fc:	bl	110fc <realloc@plt>
   14700:	ldr	r2, [sp]
   14704:	mov	r3, r0
   14708:	b	145dc <close_stdout@@Base+0x25a4>
   1470c:	ldr	r4, [pc, #136]	; 1479c <close_stdout@@Base+0x2764>
   14710:	add	r4, pc, r4
   14714:	b	1469c <close_stdout@@Base+0x2664>
   14718:	ldr	r8, [pc, #128]	; 147a0 <close_stdout@@Base+0x2768>
   1471c:	mov	r3, #7
   14720:	mov	sl, #8
   14724:	add	r8, pc, r8
   14728:	b	146bc <close_stdout@@Base+0x2684>
   1472c:	ldr	r4, [pc, #112]	; 147a4 <close_stdout@@Base+0x276c>
   14730:	mov	r0, r8
   14734:	add	r4, pc, r4
   14738:	bl	11324 <close@plt>
   1473c:	b	14694 <close_stdout@@Base+0x265c>
   14740:	bl	110f0 <__stack_chk_fail@plt>
   14744:	mov	r0, r4
   14748:	ldr	r4, [pc, #88]	; 147a8 <close_stdout@@Base+0x2770>
   1474c:	bl	110a8 <free@plt>
   14750:	mov	r0, fp
   14754:	add	r4, pc, r4
   14758:	bl	147ac <close_stdout@@Base+0x2774>
   1475c:	b	14694 <close_stdout@@Base+0x265c>
   14760:	mov	r0, fp
   14764:	bl	112a0 <__uflow@plt>
   14768:	b	14668 <close_stdout@@Base+0x2630>
   1476c:	andeq	r1, r1, r0, ror #24
   14770:	andeq	r0, r0, ip, lsl #2
   14774:	andeq	r1, r1, r4, lsl #30
   14778:	andeq	r1, r0, ip, lsl r0
   1477c:	andeq	r0, r0, ip, asr fp
   14780:	strdeq	r0, [r0], -r4
   14784:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   14788:	andeq	r0, r0, r8, ror pc
   1478c:	andeq	r0, r0, ip, asr pc
   14790:	andeq	r1, r1, r4, lsr #24
   14794:	andeq	r0, r0, r4, lsr #27
   14798:	strdeq	r0, [r0], -r4
   1479c:			; <UNDEFINED> instruction: 0x000008bc
   147a0:	andeq	r0, r0, r8, lsr sp
   147a4:	muleq	r0, r8, r8
   147a8:	andeq	r0, r0, r8, ror r8
   147ac:	push	{r4, r5, r6, lr}
   147b0:	sub	sp, sp, #8
   147b4:	mov	r4, r0
   147b8:	bl	11270 <fileno@plt>
   147bc:	cmp	r0, #0
   147c0:	mov	r0, r4
   147c4:	blt	14840 <close_stdout@@Base+0x2808>
   147c8:	bl	111d4 <__freading@plt>
   147cc:	cmp	r0, #0
   147d0:	bne	1480c <close_stdout@@Base+0x27d4>
   147d4:	mov	r0, r4
   147d8:	bl	1484c <close_stdout@@Base+0x2814>
   147dc:	cmp	r0, #0
   147e0:	beq	1483c <close_stdout@@Base+0x2804>
   147e4:	bl	11234 <__errno_location@plt>
   147e8:	ldr	r6, [r0]
   147ec:	mov	r5, r0
   147f0:	mov	r0, r4
   147f4:	bl	11288 <fclose@plt>
   147f8:	cmp	r6, #0
   147fc:	mvnne	r0, #0
   14800:	strne	r6, [r5]
   14804:	add	sp, sp, #8
   14808:	pop	{r4, r5, r6, pc}
   1480c:	mov	r0, r4
   14810:	bl	11270 <fileno@plt>
   14814:	mov	r1, #1
   14818:	mov	r2, #0
   1481c:	mov	r3, #0
   14820:	str	r1, [sp]
   14824:	bl	11144 <lseek64@plt>
   14828:	mvn	r2, #0
   1482c:	mvn	r3, #0
   14830:	cmp	r1, r3
   14834:	cmpeq	r0, r2
   14838:	bne	147d4 <close_stdout@@Base+0x279c>
   1483c:	mov	r0, r4
   14840:	add	sp, sp, #8
   14844:	pop	{r4, r5, r6, lr}
   14848:	b	11288 <fclose@plt>
   1484c:	push	{r4, lr}
   14850:	subs	r4, r0, #0
   14854:	sub	sp, sp, #8
   14858:	beq	14868 <close_stdout@@Base+0x2830>
   1485c:	bl	111d4 <__freading@plt>
   14860:	cmp	r0, #0
   14864:	bne	14878 <close_stdout@@Base+0x2840>
   14868:	mov	r0, r4
   1486c:	add	sp, sp, #8
   14870:	pop	{r4, lr}
   14874:	b	1109c <fflush@plt>
   14878:	ldr	r3, [r4]
   1487c:	tst	r3, #256	; 0x100
   14880:	beq	14868 <close_stdout@@Base+0x2830>
   14884:	mov	r3, #1
   14888:	mov	r0, r4
   1488c:	str	r3, [sp]
   14890:	mov	r2, #0
   14894:	mov	r3, #0
   14898:	bl	148ac <close_stdout@@Base+0x2874>
   1489c:	mov	r0, r4
   148a0:	add	sp, sp, #8
   148a4:	pop	{r4, lr}
   148a8:	b	1109c <fflush@plt>
   148ac:	push	{r4, r5, r6, r7, lr}
   148b0:	sub	sp, sp, #20
   148b4:	ldmib	r0, {r1, ip}
   148b8:	mov	r6, r0
   148bc:	ldr	r4, [sp, #40]	; 0x28
   148c0:	cmp	ip, r1
   148c4:	beq	148dc <close_stdout@@Base+0x28a4>
   148c8:	str	r4, [sp, #40]	; 0x28
   148cc:	mov	r0, r6
   148d0:	add	sp, sp, #20
   148d4:	pop	{r4, r5, r6, r7, lr}
   148d8:	b	11294 <fseeko64@plt>
   148dc:	ldr	ip, [r0, #20]
   148e0:	ldr	r1, [r0, #16]
   148e4:	cmp	ip, r1
   148e8:	bne	148c8 <close_stdout@@Base+0x2890>
   148ec:	ldr	r7, [r0, #36]	; 0x24
   148f0:	cmp	r7, #0
   148f4:	bne	148c8 <close_stdout@@Base+0x2890>
   148f8:	str	r2, [sp, #12]
   148fc:	mvn	r5, #0
   14900:	str	r3, [sp, #8]
   14904:	bl	11270 <fileno@plt>
   14908:	str	r4, [sp]
   1490c:	mvn	r4, #0
   14910:	ldr	r2, [sp, #12]
   14914:	ldr	r3, [sp, #8]
   14918:	bl	11144 <lseek64@plt>
   1491c:	mov	r2, r0
   14920:	mov	r3, r1
   14924:	cmp	r3, r5
   14928:	cmpeq	r2, r4
   1492c:	beq	1494c <close_stdout@@Base+0x2914>
   14930:	ldr	r1, [r6]
   14934:	mov	r0, r7
   14938:	strd	r2, [r6, #80]	; 0x50
   1493c:	bic	r3, r1, #16
   14940:	str	r3, [r6]
   14944:	add	sp, sp, #20
   14948:	pop	{r4, r5, r6, r7, pc}
   1494c:	mvn	r0, #0
   14950:	b	14944 <close_stdout@@Base+0x290c>
   14954:	subs	r2, r1, #1
   14958:	bxeq	lr
   1495c:	bcc	14b34 <close_stdout@@Base+0x2afc>
   14960:	cmp	r0, r1
   14964:	bls	14b18 <close_stdout@@Base+0x2ae0>
   14968:	tst	r1, r2
   1496c:	beq	14b24 <close_stdout@@Base+0x2aec>
   14970:	clz	r3, r0
   14974:	clz	r2, r1
   14978:	sub	r3, r2, r3
   1497c:	rsbs	r3, r3, #31
   14980:	addne	r3, r3, r3, lsl #1
   14984:	mov	r2, #0
   14988:	addne	pc, pc, r3, lsl #2
   1498c:	nop	{0}
   14990:	cmp	r0, r1, lsl #31
   14994:	adc	r2, r2, r2
   14998:	subcs	r0, r0, r1, lsl #31
   1499c:	cmp	r0, r1, lsl #30
   149a0:	adc	r2, r2, r2
   149a4:	subcs	r0, r0, r1, lsl #30
   149a8:	cmp	r0, r1, lsl #29
   149ac:	adc	r2, r2, r2
   149b0:	subcs	r0, r0, r1, lsl #29
   149b4:	cmp	r0, r1, lsl #28
   149b8:	adc	r2, r2, r2
   149bc:	subcs	r0, r0, r1, lsl #28
   149c0:	cmp	r0, r1, lsl #27
   149c4:	adc	r2, r2, r2
   149c8:	subcs	r0, r0, r1, lsl #27
   149cc:	cmp	r0, r1, lsl #26
   149d0:	adc	r2, r2, r2
   149d4:	subcs	r0, r0, r1, lsl #26
   149d8:	cmp	r0, r1, lsl #25
   149dc:	adc	r2, r2, r2
   149e0:	subcs	r0, r0, r1, lsl #25
   149e4:	cmp	r0, r1, lsl #24
   149e8:	adc	r2, r2, r2
   149ec:	subcs	r0, r0, r1, lsl #24
   149f0:	cmp	r0, r1, lsl #23
   149f4:	adc	r2, r2, r2
   149f8:	subcs	r0, r0, r1, lsl #23
   149fc:	cmp	r0, r1, lsl #22
   14a00:	adc	r2, r2, r2
   14a04:	subcs	r0, r0, r1, lsl #22
   14a08:	cmp	r0, r1, lsl #21
   14a0c:	adc	r2, r2, r2
   14a10:	subcs	r0, r0, r1, lsl #21
   14a14:	cmp	r0, r1, lsl #20
   14a18:	adc	r2, r2, r2
   14a1c:	subcs	r0, r0, r1, lsl #20
   14a20:	cmp	r0, r1, lsl #19
   14a24:	adc	r2, r2, r2
   14a28:	subcs	r0, r0, r1, lsl #19
   14a2c:	cmp	r0, r1, lsl #18
   14a30:	adc	r2, r2, r2
   14a34:	subcs	r0, r0, r1, lsl #18
   14a38:	cmp	r0, r1, lsl #17
   14a3c:	adc	r2, r2, r2
   14a40:	subcs	r0, r0, r1, lsl #17
   14a44:	cmp	r0, r1, lsl #16
   14a48:	adc	r2, r2, r2
   14a4c:	subcs	r0, r0, r1, lsl #16
   14a50:	cmp	r0, r1, lsl #15
   14a54:	adc	r2, r2, r2
   14a58:	subcs	r0, r0, r1, lsl #15
   14a5c:	cmp	r0, r1, lsl #14
   14a60:	adc	r2, r2, r2
   14a64:	subcs	r0, r0, r1, lsl #14
   14a68:	cmp	r0, r1, lsl #13
   14a6c:	adc	r2, r2, r2
   14a70:	subcs	r0, r0, r1, lsl #13
   14a74:	cmp	r0, r1, lsl #12
   14a78:	adc	r2, r2, r2
   14a7c:	subcs	r0, r0, r1, lsl #12
   14a80:	cmp	r0, r1, lsl #11
   14a84:	adc	r2, r2, r2
   14a88:	subcs	r0, r0, r1, lsl #11
   14a8c:	cmp	r0, r1, lsl #10
   14a90:	adc	r2, r2, r2
   14a94:	subcs	r0, r0, r1, lsl #10
   14a98:	cmp	r0, r1, lsl #9
   14a9c:	adc	r2, r2, r2
   14aa0:	subcs	r0, r0, r1, lsl #9
   14aa4:	cmp	r0, r1, lsl #8
   14aa8:	adc	r2, r2, r2
   14aac:	subcs	r0, r0, r1, lsl #8
   14ab0:	cmp	r0, r1, lsl #7
   14ab4:	adc	r2, r2, r2
   14ab8:	subcs	r0, r0, r1, lsl #7
   14abc:	cmp	r0, r1, lsl #6
   14ac0:	adc	r2, r2, r2
   14ac4:	subcs	r0, r0, r1, lsl #6
   14ac8:	cmp	r0, r1, lsl #5
   14acc:	adc	r2, r2, r2
   14ad0:	subcs	r0, r0, r1, lsl #5
   14ad4:	cmp	r0, r1, lsl #4
   14ad8:	adc	r2, r2, r2
   14adc:	subcs	r0, r0, r1, lsl #4
   14ae0:	cmp	r0, r1, lsl #3
   14ae4:	adc	r2, r2, r2
   14ae8:	subcs	r0, r0, r1, lsl #3
   14aec:	cmp	r0, r1, lsl #2
   14af0:	adc	r2, r2, r2
   14af4:	subcs	r0, r0, r1, lsl #2
   14af8:	cmp	r0, r1, lsl #1
   14afc:	adc	r2, r2, r2
   14b00:	subcs	r0, r0, r1, lsl #1
   14b04:	cmp	r0, r1
   14b08:	adc	r2, r2, r2
   14b0c:	subcs	r0, r0, r1
   14b10:	mov	r0, r2
   14b14:	bx	lr
   14b18:	moveq	r0, #1
   14b1c:	movne	r0, #0
   14b20:	bx	lr
   14b24:	clz	r2, r1
   14b28:	rsb	r2, r2, #31
   14b2c:	lsr	r0, r0, r2
   14b30:	bx	lr
   14b34:	cmp	r0, #0
   14b38:	mvnne	r0, #0
   14b3c:	b	14b60 <close_stdout@@Base+0x2b28>
   14b40:	cmp	r1, #0
   14b44:	beq	14b34 <close_stdout@@Base+0x2afc>
   14b48:	push	{r0, r1, lr}
   14b4c:	bl	14954 <close_stdout@@Base+0x291c>
   14b50:	pop	{r1, r2, lr}
   14b54:	mul	r3, r2, r0
   14b58:	sub	r1, r1, r3
   14b5c:	bx	lr
   14b60:	push	{r1, lr}
   14b64:	mov	r0, #8
   14b68:	bl	11084 <raise@plt>
   14b6c:	pop	{r1, pc}
   14b70:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14b74:	mov	r7, r0
   14b78:	ldr	r6, [pc, #76]	; 14bcc <close_stdout@@Base+0x2b94>
   14b7c:	mov	r8, r1
   14b80:	ldr	r5, [pc, #72]	; 14bd0 <close_stdout@@Base+0x2b98>
   14b84:	mov	r9, r2
   14b88:	add	r6, pc, r6
   14b8c:	bl	11034 <fdopen@plt-0x20>
   14b90:	add	r5, pc, r5
   14b94:	rsb	r6, r5, r6
   14b98:	asrs	r6, r6, #2
   14b9c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   14ba0:	sub	r5, r5, #4
   14ba4:	mov	r4, #0
   14ba8:	add	r4, r4, #1
   14bac:	ldr	r3, [r5, #4]!
   14bb0:	mov	r0, r7
   14bb4:	mov	r1, r8
   14bb8:	mov	r2, r9
   14bbc:	blx	r3
   14bc0:	cmp	r4, r6
   14bc4:	bne	14ba8 <close_stdout@@Base+0x2b70>
   14bc8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14bcc:	strdeq	r1, [r1], -ip
   14bd0:	strdeq	r1, [r1], -r0
   14bd4:	bx	lr
   14bd8:	ldr	r3, [pc, #28]	; 14bfc <close_stdout@@Base+0x2bc4>
   14bdc:	mov	r1, #0
   14be0:	ldr	r2, [pc, #24]	; 14c00 <close_stdout@@Base+0x2bc8>
   14be4:	add	r3, pc, r3
   14be8:	ldr	r3, [r3, r2]
   14bec:	cmp	r3, #0
   14bf0:	ldrne	r2, [r3]
   14bf4:	moveq	r2, r3
   14bf8:	b	11240 <__cxa_atexit@plt>
   14bfc:	andeq	r1, r1, r4, lsl r4
   14c00:	andeq	r0, r0, r4, lsr #2

Disassembly of section .fini:

00014c04 <.fini>:
   14c04:	push	{r3, lr}
   14c08:	pop	{r3, pc}
