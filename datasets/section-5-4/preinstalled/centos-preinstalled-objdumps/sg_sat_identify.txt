
centos-preinstalled/sg_sat_identify:     file format elf32-littlearm


Disassembly of section .init:

00010900 <_init@@Base>:
   10900:	push	{r3, lr}
   10904:	bl	10ed4 <abort@plt+0x4b8>
   10908:	pop	{r3, pc}

Disassembly of section .plt:

0001090c <sg_set_binary_mode@plt-0x14>:
   1090c:	push	{lr}		; (str lr, [sp, #-4]!)
   10910:	ldr	lr, [pc, #4]	; 1091c <_init@@Base+0x1c>
   10914:	add	lr, pc, lr
   10918:	ldr	pc, [lr, #8]!
   1091c:	andeq	r2, r1, r4, ror #13

00010920 <sg_set_binary_mode@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #73728	; 0x12000
   10928:	ldr	pc, [ip, #1764]!	; 0x6e4

0001092c <sg_ll_ata_pt@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #73728	; 0x12000
   10934:	ldr	pc, [ip, #1756]!	; 0x6dc

00010938 <dStrHex@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #73728	; 0x12000
   10940:	ldr	pc, [ip, #1748]!	; 0x6d4

00010944 <sg_cmds_close_device@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #73728	; 0x12000
   1094c:	ldr	pc, [ip, #1740]!	; 0x6cc

00010950 <__stack_chk_fail@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #73728	; 0x12000
   10958:	ldr	pc, [ip, #1732]!	; 0x6c4

0001095c <dWordHex@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #73728	; 0x12000
   10964:	ldr	pc, [ip, #1724]!	; 0x6bc

00010968 <sg_print_sense@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #73728	; 0x12000
   10970:	ldr	pc, [ip, #1716]!	; 0x6b4

00010974 <perror@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #73728	; 0x12000
   1097c:	ldr	pc, [ip, #1708]!	; 0x6ac

00010980 <fwrite@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #73728	; 0x12000
   10988:	ldr	pc, [ip, #1700]!	; 0x6a4

0001098c <__libc_start_main@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #73728	; 0x12000
   10994:	ldr	pc, [ip, #1692]!	; 0x69c

00010998 <__gmon_start__@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #73728	; 0x12000
   109a0:	ldr	pc, [ip, #1684]!	; 0x694

000109a4 <getopt_long@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #73728	; 0x12000
   109ac:	ldr	pc, [ip, #1676]!	; 0x68c

000109b0 <sg_scsi_normalize_sense@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #73728	; 0x12000
   109b8:	ldr	pc, [ip, #1668]!	; 0x684

000109bc <memset@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #73728	; 0x12000
   109c4:	ldr	pc, [ip, #1660]!	; 0x67c

000109c8 <putchar@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #73728	; 0x12000
   109d0:	ldr	pc, [ip, #1652]!	; 0x674

000109d4 <__printf_chk@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #73728	; 0x12000
   109dc:	ldr	pc, [ip, #1644]!	; 0x66c

000109e0 <__fprintf_chk@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #73728	; 0x12000
   109e8:	ldr	pc, [ip, #1636]!	; 0x664

000109ec <safe_strerror@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #73728	; 0x12000
   109f4:	ldr	pc, [ip, #1628]!	; 0x65c

000109f8 <sg_is_big_endian@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #73728	; 0x12000
   10a00:	ldr	pc, [ip, #1620]!	; 0x654

00010a04 <sg_get_num@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #73728	; 0x12000
   10a0c:	ldr	pc, [ip, #1612]!	; 0x64c

00010a10 <sg_cmds_open_device@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #73728	; 0x12000
   10a18:	ldr	pc, [ip, #1604]!	; 0x644

00010a1c <abort@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #73728	; 0x12000
   10a24:	ldr	pc, [ip, #1596]!	; 0x63c

Disassembly of section .text:

00010a28 <.text>:
   10a28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a2c:	movw	r4, #12576	; 0x3120
   10a30:	movt	r4, #2
   10a34:	sub	sp, sp, #60	; 0x3c
   10a38:	mov	fp, #0
   10a3c:	movw	r9, #12592	; 0x3130
   10a40:	ldr	r3, [r4]
   10a44:	movt	r9, #2
   10a48:	add	r8, sp, #48	; 0x30
   10a4c:	mov	r5, r0
   10a50:	mov	r6, r1
   10a54:	mov	r7, fp
   10a58:	mov	sl, #16
   10a5c:	str	fp, [sp, #44]	; 0x2c
   10a60:	str	fp, [sp, #28]
   10a64:	str	fp, [sp, #24]
   10a68:	str	fp, [sp, #40]	; 0x28
   10a6c:	str	fp, [sp, #36]	; 0x24
   10a70:	str	fp, [sp, #32]
   10a74:	str	r3, [sp, #52]	; 0x34
   10a78:	str	r8, [sp]
   10a7c:	movw	r2, #7228	; 0x1c3c
   10a80:	movw	r3, #12396	; 0x306c
   10a84:	movt	r2, #1
   10a88:	movt	r3, #2
   10a8c:	mov	r0, r5
   10a90:	mov	r1, r6
   10a94:	str	r7, [sp, #48]	; 0x30
   10a98:	bl	109a4 <getopt_long@plt>
   10a9c:	cmn	r0, #1
   10aa0:	beq	10ce4 <abort@plt+0x2c8>
   10aa4:	sub	r3, r0, #63	; 0x3f
   10aa8:	cmp	r3, #55	; 0x37
   10aac:	ldrls	pc, [pc, r3, lsl #2]
   10ab0:	b	10ca4 <abort@plt+0x288>
   10ab4:	andeq	r0, r1, ip, ror ip
   10ab8:	andeq	r0, r1, r4, lsr #25
   10abc:	andeq	r0, r1, r4, lsr #25
   10ac0:	andeq	r0, r1, r4, lsr #25
   10ac4:	andeq	r0, r1, r4, lsr #25
   10ac8:	andeq	r0, r1, r4, lsr #25
   10acc:	andeq	r0, r1, r4, lsr #25
   10ad0:	andeq	r0, r1, r4, lsr #25
   10ad4:	andeq	r0, r1, r4, lsr #25
   10ad8:	andeq	r0, r1, ip, ror #24
   10adc:	andeq	r0, r1, r4, lsr #25
   10ae0:	andeq	r0, r1, r4, lsr #25
   10ae4:	andeq	r0, r1, r4, lsr #25
   10ae8:	andeq	r0, r1, r4, lsr #25
   10aec:	andeq	r0, r1, r4, lsr #25
   10af0:	andeq	r0, r1, r4, lsr #25
   10af4:	andeq	r0, r1, r4, lsr #25
   10af8:	andeq	r0, r1, r4, lsr #25
   10afc:	andeq	r0, r1, r4, lsr #25
   10b00:	andeq	r0, r1, r4, lsr #25
   10b04:	andeq	r0, r1, r4, lsr #25
   10b08:	andeq	r0, r1, r4, lsr #25
   10b0c:	andeq	r0, r1, r4, lsr #25
   10b10:	andeq	r0, r1, ip, lsr #24
   10b14:	andeq	r0, r1, r4, lsr #25
   10b18:	andeq	r0, r1, r4, lsr #25
   10b1c:	andeq	r0, r1, r4, lsr #25
   10b20:	andeq	r0, r1, r4, lsr #25
   10b24:	andeq	r0, r1, r4, lsr #25
   10b28:	andeq	r0, r1, r4, lsr #25
   10b2c:	andeq	r0, r1, r4, lsr #25
   10b30:	andeq	r0, r1, r4, lsr #25
   10b34:	andeq	r0, r1, r4, lsr #25
   10b38:	andeq	r0, r1, r4, lsr #25
   10b3c:	andeq	r0, r1, r4, lsr #25
   10b40:	andeq	r0, r1, r4, lsr #25
   10b44:	andeq	r0, r1, ip, lsl ip
   10b48:	andeq	r0, r1, r4, lsr #25
   10b4c:	andeq	r0, r1, r4, lsl ip
   10b50:	andeq	r0, r1, r4, lsr #25
   10b54:	andeq	r0, r1, r4, lsr #25
   10b58:	andeq	r0, r1, ip, ror ip
   10b5c:	andeq	r0, r1, r4, lsl #24
   10b60:	andeq	r0, r1, r4, lsr #25
   10b64:	andeq	r0, r1, r4, lsr #25
   10b68:	andeq	r0, r1, r4, asr #23
   10b6c:	andeq	r0, r1, r4, lsr #25
   10b70:	andeq	r0, r1, r4, lsr #25
   10b74:	andeq	r0, r1, r4, lsr #25
   10b78:			; <UNDEFINED> instruction: 0x00010bb4
   10b7c:	andeq	r0, r1, r4, lsr #25
   10b80:	andeq	r0, r1, r4, lsr #23
   10b84:	andeq	r0, r1, r4, lsr #25
   10b88:	andeq	r0, r1, r4, lsr #25
   10b8c:	andeq	r0, r1, r4, lsr #25
   10b90:	muleq	r1, r4, fp
   10b94:	ldr	ip, [sp, #28]
   10b98:	add	ip, ip, #1
   10b9c:	str	ip, [sp, #28]
   10ba0:	b	10a78 <abort@plt+0x5c>
   10ba4:	ldr	ip, [sp, #24]
   10ba8:	add	ip, ip, #1
   10bac:	str	ip, [sp, #24]
   10bb0:	b	10a78 <abort@plt+0x5c>
   10bb4:	ldr	ip, [sp, #32]
   10bb8:	add	ip, ip, #1
   10bbc:	str	ip, [sp, #32]
   10bc0:	b	10a78 <abort@plt+0x5c>
   10bc4:	ldr	r0, [r9]
   10bc8:	bl	10a04 <sg_get_num@plt>
   10bcc:	cmp	r0, #16
   10bd0:	cmpne	r0, #12
   10bd4:	mov	sl, r0
   10bd8:	beq	10a78 <abort@plt+0x5c>
   10bdc:	movw	r3, #12588	; 0x312c
   10be0:	movt	r3, #2
   10be4:	movw	r0, #8116	; 0x1fb4
   10be8:	mov	r1, #1
   10bec:	ldr	r3, [r3]
   10bf0:	movt	r0, #1
   10bf4:	mov	r2, #39	; 0x27
   10bf8:	bl	10980 <fwrite@plt>
   10bfc:	mov	r0, #1
   10c00:	b	10c54 <abort@plt+0x238>
   10c04:	ldr	ip, [sp, #40]	; 0x28
   10c08:	add	ip, ip, #1
   10c0c:	str	ip, [sp, #40]	; 0x28
   10c10:	b	10a78 <abort@plt+0x5c>
   10c14:	add	fp, fp, #1
   10c18:	b	10a78 <abort@plt+0x5c>
   10c1c:	ldr	ip, [sp, #44]	; 0x2c
   10c20:	add	ip, ip, #1
   10c24:	str	ip, [sp, #44]	; 0x2c
   10c28:	b	10a78 <abort@plt+0x5c>
   10c2c:	movw	r1, #12588	; 0x312c
   10c30:	movt	r1, #2
   10c34:	movw	r2, #8156	; 0x1fdc
   10c38:	movw	r3, #8172	; 0x1fec
   10c3c:	ldr	r0, [r1]
   10c40:	movt	r2, #1
   10c44:	movt	r3, #1
   10c48:	mov	r1, #1
   10c4c:	bl	109e0 <__fprintf_chk@plt>
   10c50:	mov	r0, #0
   10c54:	ldr	r2, [sp, #52]	; 0x34
   10c58:	ldr	r3, [r4]
   10c5c:	cmp	r2, r3
   10c60:	bne	10e94 <abort@plt+0x478>
   10c64:	add	sp, sp, #60	; 0x3c
   10c68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c6c:	ldr	ip, [sp, #36]	; 0x24
   10c70:	add	ip, ip, #1
   10c74:	str	ip, [sp, #36]	; 0x24
   10c78:	b	10a78 <abort@plt+0x5c>
   10c7c:	movw	r3, #12588	; 0x312c
   10c80:	movt	r3, #2
   10c84:	movw	r0, #7240	; 0x1c48
   10c88:	mov	r1, #1
   10c8c:	ldr	r3, [r3]
   10c90:	movt	r0, #1
   10c94:	mov	r2, #872	; 0x368
   10c98:	bl	10980 <fwrite@plt>
   10c9c:	mov	r0, #0
   10ca0:	b	10c54 <abort@plt+0x238>
   10ca4:	movw	r5, #12588	; 0x312c
   10ca8:	movt	r5, #2
   10cac:	mov	r3, r0
   10cb0:	movw	r2, #8188	; 0x1ffc
   10cb4:	ldr	r0, [r5]
   10cb8:	movt	r2, #1
   10cbc:	mov	r1, #1
   10cc0:	bl	109e0 <__fprintf_chk@plt>
   10cc4:	ldr	r3, [r5]
   10cc8:	movw	r0, #7240	; 0x1c48
   10ccc:	mov	r1, #1
   10cd0:	movt	r0, #1
   10cd4:	mov	r2, #872	; 0x368
   10cd8:	bl	10980 <fwrite@plt>
   10cdc:	mov	r0, #1
   10ce0:	b	10c54 <abort@plt+0x238>
   10ce4:	movw	r8, #12584	; 0x3128
   10ce8:	movt	r8, #2
   10cec:	ldr	r2, [r8]
   10cf0:	cmp	r5, r2
   10cf4:	ble	10d50 <abort@plt+0x334>
   10cf8:	add	r3, r2, #1
   10cfc:	ldr	r7, [r6, r2, lsl #2]
   10d00:	cmp	r5, r3
   10d04:	str	r3, [r8]
   10d08:	ble	10d78 <abort@plt+0x35c>
   10d0c:	movw	r9, #12588	; 0x312c
   10d10:	movt	r9, #2
   10d14:	ldr	r3, [r6, r3, lsl #2]
   10d18:	movw	r2, #8248	; 0x2038
   10d1c:	ldr	r0, [r9]
   10d20:	movt	r2, #1
   10d24:	mov	r1, #1
   10d28:	movw	r7, #12588	; 0x312c
   10d2c:	bl	109e0 <__fprintf_chk@plt>
   10d30:	ldr	r3, [r8]
   10d34:	movt	r7, #2
   10d38:	add	r3, r3, #1
   10d3c:	str	r3, [r8]
   10d40:	cmp	r5, r3
   10d44:	bgt	10d14 <abort@plt+0x2f8>
   10d48:	ldr	r3, [r7]
   10d4c:	b	10cc8 <abort@plt+0x2ac>
   10d50:	movw	r5, #12588	; 0x312c
   10d54:	movt	r5, #2
   10d58:	movw	r0, #8224	; 0x2020
   10d5c:	mov	r1, #1
   10d60:	ldr	r3, [r5]
   10d64:	movt	r0, #1
   10d68:	mov	r2, #21
   10d6c:	bl	10980 <fwrite@plt>
   10d70:	ldr	r3, [r5]
   10d74:	b	10cc8 <abort@plt+0x2ac>
   10d78:	cmp	r7, #0
   10d7c:	beq	10d50 <abort@plt+0x334>
   10d80:	ldr	ip, [sp, #24]
   10d84:	cmp	ip, #0
   10d88:	beq	10d9c <abort@plt+0x380>
   10d8c:	mov	r0, #1
   10d90:	bl	10920 <sg_set_binary_mode@plt>
   10d94:	cmp	r0, #0
   10d98:	blt	10e44 <abort@plt+0x428>
   10d9c:	mov	r0, r7
   10da0:	mov	r1, #0
   10da4:	ldr	r2, [sp, #28]
   10da8:	bl	10a10 <sg_cmds_open_device@plt>
   10dac:	subs	r5, r0, #0
   10db0:	blt	10e0c <abort@plt+0x3f0>
   10db4:	ldr	ip, [sp, #40]	; 0x28
   10db8:	mov	r2, sl
   10dbc:	ldr	r1, [sp, #32]
   10dc0:	ldr	r3, [sp, #44]	; 0x2c
   10dc4:	str	ip, [sp, #4]
   10dc8:	ldr	ip, [sp, #36]	; 0x24
   10dcc:	str	fp, [sp]
   10dd0:	str	ip, [sp, #8]
   10dd4:	ldr	ip, [sp, #24]
   10dd8:	str	ip, [sp, #12]
   10ddc:	ldr	ip, [sp, #28]
   10de0:	str	ip, [sp, #16]
   10de4:	bl	10fcc <abort@plt+0x5b0>
   10de8:	mov	r6, r0
   10dec:	mov	r0, r5
   10df0:	bl	10944 <sg_cmds_close_device@plt>
   10df4:	cmp	r0, #0
   10df8:	blt	10e58 <abort@plt+0x43c>
   10dfc:	cmp	r6, #0
   10e00:	movge	r0, r6
   10e04:	movlt	r0, #99	; 0x63
   10e08:	b	10c54 <abort@plt+0x238>
   10e0c:	movw	r3, #12588	; 0x312c
   10e10:	movt	r3, #2
   10e14:	rsb	r0, r5, #0
   10e18:	ldr	r5, [r3]
   10e1c:	bl	109ec <safe_strerror@plt>
   10e20:	mov	r3, r7
   10e24:	movw	r2, #8300	; 0x206c
   10e28:	mov	r1, #1
   10e2c:	movt	r2, #1
   10e30:	str	r0, [sp]
   10e34:	mov	r0, r5
   10e38:	bl	109e0 <__fprintf_chk@plt>
   10e3c:	mov	r0, #15
   10e40:	b	10c54 <abort@plt+0x238>
   10e44:	movw	r0, #8280	; 0x2058
   10e48:	movt	r0, #1
   10e4c:	bl	10974 <perror@plt>
   10e50:	mov	r0, #15
   10e54:	b	10c54 <abort@plt+0x238>
   10e58:	movw	r3, #12588	; 0x312c
   10e5c:	movt	r3, #2
   10e60:	rsb	r0, r0, #0
   10e64:	ldr	r5, [r3]
   10e68:	bl	109ec <safe_strerror@plt>
   10e6c:	movw	r2, #8328	; 0x2088
   10e70:	mov	r1, #1
   10e74:	movt	r2, #1
   10e78:	mov	r3, r0
   10e7c:	mov	r0, r5
   10e80:	bl	109e0 <__fprintf_chk@plt>
   10e84:	cmp	r6, #0
   10e88:	bne	10dfc <abort@plt+0x3e0>
   10e8c:	mov	r0, #15
   10e90:	b	10c54 <abort@plt+0x238>
   10e94:	bl	10950 <__stack_chk_fail@plt>
   10e98:	mov	fp, #0
   10e9c:	mov	lr, #0
   10ea0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ea4:	mov	r2, sp
   10ea8:	push	{r2}		; (str r2, [sp, #-4]!)
   10eac:	push	{r0}		; (str r0, [sp, #-4]!)
   10eb0:	ldr	ip, [pc, #16]	; 10ec8 <abort@plt+0x4ac>
   10eb4:	push	{ip}		; (str ip, [sp, #-4]!)
   10eb8:	ldr	r0, [pc, #12]	; 10ecc <abort@plt+0x4b0>
   10ebc:	ldr	r3, [pc, #12]	; 10ed0 <abort@plt+0x4b4>
   10ec0:	bl	1098c <__libc_start_main@plt>
   10ec4:	bl	10a1c <abort@plt>
   10ec8:	andeq	r1, r1, r4, ror r8
   10ecc:	andeq	r0, r1, r8, lsr #20
   10ed0:	andeq	r1, r1, r0, lsl r8
   10ed4:	ldr	r3, [pc, #20]	; 10ef0 <abort@plt+0x4d4>
   10ed8:	ldr	r2, [pc, #20]	; 10ef4 <abort@plt+0x4d8>
   10edc:	add	r3, pc, r3
   10ee0:	ldr	r2, [r3, r2]
   10ee4:	cmp	r2, #0
   10ee8:	bxeq	lr
   10eec:	b	10998 <__gmon_start__@plt>
   10ef0:	andeq	r2, r1, ip, lsl r1
   10ef4:	andeq	r0, r0, r4, rrx
   10ef8:	push	{r3, lr}
   10efc:	movw	r0, #12572	; 0x311c
   10f00:	ldr	r3, [pc, #36]	; 10f2c <abort@plt+0x510>
   10f04:	movt	r0, #2
   10f08:	rsb	r3, r0, r3
   10f0c:	cmp	r3, #6
   10f10:	popls	{r3, pc}
   10f14:	movw	r3, #0
   10f18:	movt	r3, #0
   10f1c:	cmp	r3, #0
   10f20:	popeq	{r3, pc}
   10f24:	blx	r3
   10f28:	pop	{r3, pc}
   10f2c:	andeq	r3, r2, pc, lsl r1
   10f30:	push	{r3, lr}
   10f34:	movw	r0, #12572	; 0x311c
   10f38:	movw	r3, #12572	; 0x311c
   10f3c:	movt	r0, #2
   10f40:	movt	r3, #2
   10f44:	rsb	r3, r0, r3
   10f48:	asr	r3, r3, #2
   10f4c:	add	r3, r3, r3, lsr #31
   10f50:	asrs	r1, r3, #1
   10f54:	popeq	{r3, pc}
   10f58:	movw	r2, #0
   10f5c:	movt	r2, #0
   10f60:	cmp	r2, #0
   10f64:	popeq	{r3, pc}
   10f68:	blx	r2
   10f6c:	pop	{r3, pc}
   10f70:	push	{r4, lr}
   10f74:	movw	r4, #12596	; 0x3134
   10f78:	movt	r4, #2
   10f7c:	ldrb	r3, [r4]
   10f80:	cmp	r3, #0
   10f84:	popne	{r4, pc}
   10f88:	bl	10ef8 <abort@plt+0x4dc>
   10f8c:	mov	r3, #1
   10f90:	strb	r3, [r4]
   10f94:	pop	{r4, pc}
   10f98:	movw	r0, #12028	; 0x2efc
   10f9c:	movt	r0, #2
   10fa0:	push	{r3, lr}
   10fa4:	ldr	r3, [r0]
   10fa8:	cmp	r3, #0
   10fac:	beq	10fc4 <abort@plt+0x5a8>
   10fb0:	movw	r3, #0
   10fb4:	movt	r3, #0
   10fb8:	cmp	r3, #0
   10fbc:	beq	10fc4 <abort@plt+0x5a8>
   10fc0:	blx	r3
   10fc4:	pop	{r3, lr}
   10fc8:	b	10f30 <abort@plt+0x514>
   10fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fd0:	movw	r4, #12576	; 0x3120
   10fd4:	movt	r4, #2
   10fd8:	sub	sp, sp, #684	; 0x2ac
   10fdc:	add	r7, sp, #100	; 0x64
   10fe0:	mov	r5, #0
   10fe4:	ldr	ip, [r4]
   10fe8:	mov	sl, r0
   10fec:	mov	r6, r2
   10ff0:	mov	r9, r1
   10ff4:	mov	r0, r7
   10ff8:	mov	r1, r5
   10ffc:	mov	r2, #64	; 0x40
   11000:	mov	fp, r3
   11004:	mvn	lr, #122	; 0x7a
   11008:	mvn	r3, #94	; 0x5e
   1100c:	str	ip, [sp, #676]	; 0x2a4
   11010:	lsl	fp, fp, #5
   11014:	str	r5, [sp, #44]	; 0x2c
   11018:	strb	r5, [sp, #85]	; 0x55
   1101c:	strb	r5, [sp, #86]	; 0x56
   11020:	strb	r5, [sp, #87]	; 0x57
   11024:	strb	r5, [sp, #88]	; 0x58
   11028:	strb	r5, [sp, #89]	; 0x59
   1102c:	strb	r5, [sp, #90]	; 0x5a
   11030:	strb	r5, [sp, #91]	; 0x5b
   11034:	strb	r5, [sp, #92]	; 0x5c
   11038:	strb	r5, [sp, #93]	; 0x5d
   1103c:	strb	r5, [sp, #94]	; 0x5e
   11040:	strb	r5, [sp, #95]	; 0x5f
   11044:	strb	r5, [sp, #96]	; 0x60
   11048:	strb	r5, [sp, #97]	; 0x61
   1104c:	strb	r5, [sp, #98]	; 0x62
   11050:	strb	r5, [sp, #99]	; 0x63
   11054:	strb	r5, [sp, #57]	; 0x39
   11058:	strb	r5, [sp, #58]	; 0x3a
   1105c:	strb	r5, [sp, #59]	; 0x3b
   11060:	strb	r5, [sp, #60]	; 0x3c
   11064:	strb	r5, [sp, #61]	; 0x3d
   11068:	strb	r5, [sp, #62]	; 0x3e
   1106c:	strb	r5, [sp, #63]	; 0x3f
   11070:	strb	r5, [sp, #64]	; 0x40
   11074:	strb	lr, [sp, #84]	; 0x54
   11078:	strb	r3, [sp, #56]	; 0x38
   1107c:	ldr	r8, [sp, #736]	; 0x2e0
   11080:	strb	r5, [sp, #65]	; 0x41
   11084:	strb	r5, [sp, #66]	; 0x42
   11088:	strb	r5, [sp, #67]	; 0x43
   1108c:	bl	109bc <memset@plt>
   11090:	cmp	r6, #16
   11094:	str	r5, [sp, #68]	; 0x44
   11098:	str	r5, [sp, #72]	; 0x48
   1109c:	mov	r0, sl
   110a0:	str	r5, [sp, #76]	; 0x4c
   110a4:	str	r5, [sp, #80]	; 0x50
   110a8:	str	r5, [sp, #4]
   110ac:	str	r7, [sp, #12]
   110b0:	beq	112d8 <abort@plt+0x8bc>
   110b4:	cmp	r9, #0
   110b8:	mov	r3, #512	; 0x200
   110bc:	mov	r2, #64	; 0x40
   110c0:	add	r5, sp, #164	; 0xa4
   110c4:	str	r3, [sp, #8]
   110c8:	add	r1, sp, #56	; 0x38
   110cc:	add	r3, sp, #68	; 0x44
   110d0:	str	r2, [sp, #16]
   110d4:	str	r3, [sp, #20]
   110d8:	mov	r2, #16
   110dc:	add	r3, sp, #44	; 0x2c
   110e0:	str	r2, [sp, #24]
   110e4:	str	r3, [sp, #28]
   110e8:	mov	r2, r6
   110ec:	str	r8, [sp, #32]
   110f0:	mov	r3, #20
   110f4:	str	r5, [sp]
   110f8:	mov	ip, #1
   110fc:	orr	fp, fp, #14
   11100:	moveq	lr, #236	; 0xec
   11104:	movne	lr, #161	; 0xa1
   11108:	strb	ip, [sp, #60]	; 0x3c
   1110c:	strb	fp, [sp, #58]	; 0x3a
   11110:	mov	ip, #8
   11114:	strb	lr, [sp, #65]	; 0x41
   11118:	strb	ip, [sp, #57]	; 0x39
   1111c:	bl	1092c <sg_ll_ata_pt@plt>
   11120:	cmp	r0, #0
   11124:	bne	11210 <abort@plt+0x7f4>
   11128:	cmp	r8, #2
   1112c:	ble	11150 <abort@plt+0x734>
   11130:	movw	r3, #12588	; 0x312c
   11134:	movt	r3, #2
   11138:	movw	r0, #6292	; 0x1894
   1113c:	mov	r1, #1
   11140:	ldr	r3, [r3]
   11144:	movt	r0, #1
   11148:	mov	r2, #40	; 0x28
   1114c:	bl	10980 <fwrite@plt>
   11150:	ldrb	r3, [sp, #68]	; 0x44
   11154:	cmp	r3, #9
   11158:	beq	11804 <abort@plt+0xde8>
   1115c:	ldr	lr, [sp, #732]	; 0x2dc
   11160:	cmp	lr, #0
   11164:	bne	115b0 <abort@plt+0xb94>
   11168:	ldr	r0, [sp, #728]	; 0x2d8
   1116c:	cmp	r0, #0
   11170:	bne	11370 <abort@plt+0x954>
   11174:	ldr	r2, [sp, #724]	; 0x2d4
   11178:	cmp	r2, #0
   1117c:	beq	113f4 <abort@plt+0x9d8>
   11180:	add	sl, sp, #680	; 0x2a8
   11184:	movw	r3, #65236	; 0xfed4
   11188:	movt	r3, #65535	; 0xffff
   1118c:	movw	r1, #65238	; 0xfed6
   11190:	movt	r1, #65535	; 0xffff
   11194:	mov	r9, #0
   11198:	ldrh	r0, [sl, r3]
   1119c:	mov	r7, #0
   111a0:	ldrh	r8, [sl, r1]
   111a4:	movw	ip, #65242	; 0xfeda
   111a8:	movt	ip, #65535	; 0xffff
   111ac:	lsr	r3, r0, #16
   111b0:	lsl	r2, r0, #16
   111b4:	orr	r9, r9, r3
   111b8:	orr	r8, r8, r2
   111bc:	movw	r3, #65240	; 0xfed8
   111c0:	movt	r3, #65535	; 0xffff
   111c4:	lsl	r1, r9, #16
   111c8:	lsl	r0, r8, #16
   111cc:	ldrh	r6, [sl, r3]
   111d0:	orr	r1, r1, r8, lsr #16
   111d4:	orr	r7, r7, r1
   111d8:	ldrh	r8, [sl, ip]
   111dc:	orr	r6, r6, r0
   111e0:	mov	r9, #0
   111e4:	lsl	r3, r7, #16
   111e8:	movw	r1, #7168	; 0x1c00
   111ec:	orr	r3, r3, r6, lsr #16
   111f0:	lsl	r2, r6, #16
   111f4:	movt	r1, #1
   111f8:	mov	r0, #1
   111fc:	orr	r2, r2, r8
   11200:	orr	r3, r3, r9
   11204:	bl	109d4 <__printf_chk@plt>
   11208:	ldr	r0, [sp, #728]	; 0x2d8
   1120c:	b	112c0 <abort@plt+0x8a4>
   11210:	ble	113a8 <abort@plt+0x98c>
   11214:	tst	r0, #2
   11218:	beq	1129c <abort@plt+0x880>
   1121c:	cmp	r8, #1
   11220:	ble	11244 <abort@plt+0x828>
   11224:	cmp	r8, #2
   11228:	movw	r0, #6336	; 0x18c0
   1122c:	mov	r1, r7
   11230:	movt	r0, #1
   11234:	mov	r2, #64	; 0x40
   11238:	movle	r3, #0
   1123c:	movgt	r3, #1
   11240:	bl	10968 <sg_print_sense@plt>
   11244:	mov	r0, r7
   11248:	mov	r1, #64	; 0x40
   1124c:	add	r2, sp, #48	; 0x30
   11250:	bl	109b0 <sg_scsi_normalize_sense@plt>
   11254:	cmp	r0, #0
   11258:	beq	11348 <abort@plt+0x92c>
   1125c:	ldrb	r0, [sp, #49]	; 0x31
   11260:	cmp	r0, #11
   11264:	ldrls	pc, [pc, r0, lsl #2]
   11268:	b	11584 <abort@plt+0xb68>
   1126c:	andeq	r1, r1, r4, lsr #9
   11270:	andeq	r1, r1, r4, lsr #9
   11274:	andeq	r1, r1, r0, ror r4
   11278:	andeq	r1, r1, ip, lsr r4
   1127c:	andeq	r1, r1, ip, lsr r4
   11280:	andeq	r1, r1, r4, asr #10
   11284:	andeq	r1, r1, r0, lsl r5
   11288:	andeq	r1, r1, r4, lsl #11
   1128c:	andeq	r1, r1, r4, lsl #11
   11290:	andeq	r1, r1, r4, lsl #11
   11294:	andeq	r1, r1, r4, lsl #11
   11298:	ldrdeq	r1, [r1], -r4
   1129c:	movw	r1, #12588	; 0x312c
   112a0:	movt	r1, #2
   112a4:	mov	r3, r0
   112a8:	movw	r2, #6904	; 0x1af8
   112ac:	ldr	r0, [r1]
   112b0:	movt	r2, #1
   112b4:	mov	r1, #1
   112b8:	bl	109e0 <__fprintf_chk@plt>
   112bc:	mov	r0, #97	; 0x61
   112c0:	ldr	r2, [sp, #676]	; 0x2a4
   112c4:	ldr	r3, [r4]
   112c8:	cmp	r2, r3
   112cc:	bne	1167c <abort@plt+0xc60>
   112d0:	add	sp, sp, #684	; 0x2ac
   112d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112d8:	cmp	r9, #0
   112dc:	ldr	sl, [sp, #720]	; 0x2d0
   112e0:	add	r5, sp, #164	; 0xa4
   112e4:	mov	r2, #512	; 0x200
   112e8:	mov	r3, #64	; 0x40
   112ec:	str	r2, [sp, #8]
   112f0:	str	r3, [sp, #16]
   112f4:	add	r2, sp, #68	; 0x44
   112f8:	add	r3, sp, #44	; 0x2c
   112fc:	str	r2, [sp, #20]
   11300:	str	r3, [sp, #28]
   11304:	add	r1, sp, #84	; 0x54
   11308:	str	r6, [sp, #24]
   1130c:	mov	r2, r6
   11310:	str	r8, [sp, #32]
   11314:	mov	r3, #20
   11318:	str	r5, [sp]
   1131c:	orr	fp, fp, #14
   11320:	mov	ip, #1
   11324:	moveq	lr, #236	; 0xec
   11328:	strb	ip, [sp, #90]	; 0x5a
   1132c:	movne	lr, #161	; 0xa1
   11330:	orr	ip, sl, #8
   11334:	strb	fp, [sp, #86]	; 0x56
   11338:	strb	lr, [sp, #98]	; 0x62
   1133c:	strb	ip, [sp, #85]	; 0x55
   11340:	bl	1092c <sg_ll_ata_pt@plt>
   11344:	b	11120 <abort@plt+0x704>
   11348:	movw	r3, #12588	; 0x312c
   1134c:	movt	r3, #2
   11350:	movw	r0, #6804	; 0x1a94
   11354:	mov	r1, #1
   11358:	ldr	r3, [r3]
   1135c:	movt	r0, #1
   11360:	mov	r2, #41	; 0x29
   11364:	bl	10980 <fwrite@plt>
   11368:	mov	r0, #98	; 0x62
   1136c:	b	112c0 <abort@plt+0x8a4>
   11370:	ldr	lr, [sp, #728]	; 0x2d8
   11374:	cmp	lr, #1
   11378:	beq	11600 <abort@plt+0xbe4>
   1137c:	ldr	r0, [sp, #728]	; 0x2d8
   11380:	cmp	r0, #2
   11384:	beq	115d0 <abort@plt+0xbb4>
   11388:	bl	109f8 <sg_is_big_endian@plt>
   1138c:	mov	r1, #256	; 0x100
   11390:	mvn	r2, #1
   11394:	mov	r3, r0
   11398:	mov	r0, r5
   1139c:	bl	1095c <dWordHex@plt>
   113a0:	ldr	r0, [sp, #732]	; 0x2dc
   113a4:	b	112c0 <abort@plt+0x8a4>
   113a8:	movw	r5, #12588	; 0x312c
   113ac:	movt	r5, #2
   113b0:	mov	r3, r6
   113b4:	movw	r2, #6936	; 0x1b18
   113b8:	ldr	r0, [r5]
   113bc:	movt	r2, #1
   113c0:	mov	r1, #1
   113c4:	bl	109e0 <__fprintf_chk@plt>
   113c8:	cmp	r8, #1
   113cc:	mvngt	r0, #0
   113d0:	bgt	112c0 <abort@plt+0x8a4>
   113d4:	ldr	r3, [r5]
   113d8:	movw	r0, #6968	; 0x1b38
   113dc:	mov	r1, #1
   113e0:	movt	r0, #1
   113e4:	mov	r2, #41	; 0x29
   113e8:	bl	10980 <fwrite@plt>
   113ec:	mvn	r0, #0
   113f0:	b	112c0 <abort@plt+0x8a4>
   113f4:	cmp	r9, #0
   113f8:	movw	r3, #6284	; 0x188c
   113fc:	movt	r3, #1
   11400:	movw	r2, #7224	; 0x1c38
   11404:	movw	r1, #7180	; 0x1c0c
   11408:	movt	r2, #1
   1140c:	movt	r1, #1
   11410:	movne	r2, r3
   11414:	mov	r0, #1
   11418:	bl	109d4 <__printf_chk@plt>
   1141c:	bl	109f8 <sg_is_big_endian@plt>
   11420:	mov	r1, #256	; 0x100
   11424:	ldr	r2, [sp, #724]	; 0x2d4
   11428:	mov	r3, r0
   1142c:	mov	r0, r5
   11430:	bl	1095c <dWordHex@plt>
   11434:	ldr	r0, [sp, #724]	; 0x2d4
   11438:	b	112c0 <abort@plt+0x8a4>
   1143c:	cmp	r8, #1
   11440:	movgt	r0, #3
   11444:	bgt	112c0 <abort@plt+0x8a4>
   11448:	movw	r1, #12588	; 0x312c
   1144c:	movt	r1, #2
   11450:	mov	r3, r6
   11454:	movw	r2, #6632	; 0x19e8
   11458:	ldr	r0, [r1]
   1145c:	movt	r2, #1
   11460:	mov	r1, #1
   11464:	bl	109e0 <__fprintf_chk@plt>
   11468:	mov	r0, #3
   1146c:	b	112c0 <abort@plt+0x8a4>
   11470:	cmp	r8, #1
   11474:	movgt	r0, #2
   11478:	bgt	112c0 <abort@plt+0x8a4>
   1147c:	movw	r1, #12588	; 0x312c
   11480:	movt	r1, #2
   11484:	mov	r3, r6
   11488:	movw	r2, #6588	; 0x19bc
   1148c:	ldr	r0, [r1]
   11490:	movt	r2, #1
   11494:	mov	r1, #1
   11498:	bl	109e0 <__fprintf_chk@plt>
   1149c:	mov	r0, #2
   114a0:	b	112c0 <abort@plt+0x8a4>
   114a4:	ldrb	r2, [sp, #50]	; 0x32
   114a8:	cmp	r2, #0
   114ac:	bne	115f0 <abort@plt+0xbd4>
   114b0:	ldrb	r7, [sp, #51]	; 0x33
   114b4:	cmp	r7, #29
   114b8:	beq	11658 <abort@plt+0xc3c>
   114bc:	cmp	r0, #1
   114c0:	beq	11674 <abort@plt+0xc58>
   114c4:	cmp	r7, #0
   114c8:	beq	11680 <abort@plt+0xc64>
   114cc:	mov	r0, #98	; 0x62
   114d0:	b	112c0 <abort@plt+0x8a4>
   114d4:	cmp	r9, #0
   114d8:	movw	r1, #12588	; 0x312c
   114dc:	movw	r2, #7224	; 0x1c38
   114e0:	movt	r1, #2
   114e4:	movt	r2, #1
   114e8:	movw	r3, #6280	; 0x1888
   114ec:	ldr	r0, [r1]
   114f0:	movt	r3, #1
   114f4:	mov	r1, #1
   114f8:	moveq	r3, r2
   114fc:	movw	r2, #6684	; 0x1a1c
   11500:	movt	r2, #1
   11504:	bl	109e0 <__fprintf_chk@plt>
   11508:	mov	r0, #11
   1150c:	b	112c0 <abort@plt+0x8a4>
   11510:	cmp	r8, #1
   11514:	movgt	r0, #6
   11518:	bgt	112c0 <abort@plt+0x8a4>
   1151c:	movw	r1, #12588	; 0x312c
   11520:	movt	r1, #2
   11524:	mov	r3, r6
   11528:	movw	r2, #6540	; 0x198c
   1152c:	ldr	r0, [r1]
   11530:	movt	r2, #1
   11534:	mov	r1, #1
   11538:	bl	109e0 <__fprintf_chk@plt>
   1153c:	mov	r0, #6
   11540:	b	112c0 <abort@plt+0x8a4>
   11544:	ldrb	r3, [sp, #50]	; 0x32
   11548:	cmp	r3, #32
   1154c:	beq	11618 <abort@plt+0xbfc>
   11550:	cmp	r8, #1
   11554:	movgt	r0, #5
   11558:	bgt	112c0 <abort@plt+0x8a4>
   1155c:	movw	r1, #12588	; 0x312c
   11560:	movt	r1, #2
   11564:	mov	r3, r6
   11568:	movw	r2, #6396	; 0x18fc
   1156c:	ldr	r0, [r1]
   11570:	movt	r2, #1
   11574:	mov	r1, #1
   11578:	bl	109e0 <__fprintf_chk@plt>
   1157c:	mov	r0, #5
   11580:	b	112c0 <abort@plt+0x8a4>
   11584:	cmp	r8, #1
   11588:	bgt	114cc <abort@plt+0xab0>
   1158c:	movw	r1, #12588	; 0x312c
   11590:	movt	r1, #2
   11594:	mov	r3, r6
   11598:	movw	r2, #6732	; 0x1a4c
   1159c:	ldr	r0, [r1]
   115a0:	movt	r2, #1
   115a4:	mov	r1, #1
   115a8:	bl	109e0 <__fprintf_chk@plt>
   115ac:	b	114cc <abort@plt+0xab0>
   115b0:	mov	r6, #0
   115b4:	ldrb	r0, [r5, r6]
   115b8:	add	r6, r6, #1
   115bc:	bl	109c8 <putchar@plt>
   115c0:	cmp	r6, #512	; 0x200
   115c4:	bne	115b4 <abort@plt+0xb98>
   115c8:	mov	r0, #0
   115cc:	b	112c0 <abort@plt+0x8a4>
   115d0:	bl	109f8 <sg_is_big_endian@plt>
   115d4:	mov	r1, #256	; 0x100
   115d8:	ldr	r2, [sp, #732]	; 0x2dc
   115dc:	mov	r3, r0
   115e0:	mov	r0, r5
   115e4:	bl	1095c <dWordHex@plt>
   115e8:	ldr	r0, [sp, #732]	; 0x2dc
   115ec:	b	112c0 <abort@plt+0x8a4>
   115f0:	cmp	r0, #1
   115f4:	moveq	r0, #21
   115f8:	movne	r0, #98	; 0x62
   115fc:	b	112c0 <abort@plt+0x8a4>
   11600:	mov	r0, r5
   11604:	mov	r1, #512	; 0x200
   11608:	ldr	r2, [sp, #732]	; 0x2dc
   1160c:	bl	10938 <dStrHex@plt>
   11610:	ldr	r0, [sp, #732]	; 0x2dc
   11614:	b	112c0 <abort@plt+0x8a4>
   11618:	ldrb	r3, [sp, #51]	; 0x33
   1161c:	cmp	r3, #0
   11620:	bne	11550 <abort@plt+0xb34>
   11624:	cmp	r8, #1
   11628:	movgt	r0, #9
   1162c:	bgt	112c0 <abort@plt+0x8a4>
   11630:	movw	r1, #12588	; 0x312c
   11634:	movt	r1, #2
   11638:	mov	r3, r6
   1163c:	movw	r2, #6356	; 0x18d4
   11640:	ldr	r0, [r1]
   11644:	movt	r2, #1
   11648:	mov	r1, #1
   1164c:	bl	109e0 <__fprintf_chk@plt>
   11650:	mov	r0, #9
   11654:	b	112c0 <abort@plt+0x8a4>
   11658:	ldrb	r3, [sp, #48]	; 0x30
   1165c:	cmp	r3, #114	; 0x72
   11660:	beq	1178c <abort@plt+0xd70>
   11664:	cmp	r3, #112	; 0x70
   11668:	beq	117c8 <abort@plt+0xdac>
   1166c:	cmp	r8, #1
   11670:	ble	117dc <abort@plt+0xdc0>
   11674:	mov	r0, #21
   11678:	b	112c0 <abort@plt+0x8a4>
   1167c:	bl	10950 <__stack_chk_fail@plt>
   11680:	mov	r2, r7
   11684:	ldrb	r3, [sp, #100]	; 0x64
   11688:	and	r1, r3, #127	; 0x7f
   1168c:	cmp	r1, #114	; 0x72
   11690:	beq	116b8 <abort@plt+0xc9c>
   11694:	movw	r1, #12588	; 0x312c
   11698:	movt	r1, #2
   1169c:	movw	r2, #6848	; 0x1ac0
   116a0:	movt	r2, #1
   116a4:	ldr	r0, [r1]
   116a8:	mov	r1, #1
   116ac:	bl	109e0 <__fprintf_chk@plt>
   116b0:	mov	r0, #97	; 0x61
   116b4:	b	112c0 <abort@plt+0x8a4>
   116b8:	ldrb	r3, [sp, #68]	; 0x44
   116bc:	cmp	r3, #9
   116c0:	beq	1174c <abort@plt+0xd30>
   116c4:	cmp	r2, #0
   116c8:	bne	11734 <abort@plt+0xd18>
   116cc:	cmp	r7, #0
   116d0:	beq	115c8 <abort@plt+0xbac>
   116d4:	ldrb	r3, [sp, #103]	; 0x67
   116d8:	tst	r3, #4
   116dc:	beq	1115c <abort@plt+0x740>
   116e0:	movw	r5, #12588	; 0x312c
   116e4:	movt	r5, #2
   116e8:	mov	r1, #1
   116ec:	mov	r2, #50	; 0x32
   116f0:	ldr	r3, [r5]
   116f4:	movw	r0, #7080	; 0x1ba8
   116f8:	movt	r0, #1
   116fc:	bl	10980 <fwrite@plt>
   11700:	cmp	r9, #0
   11704:	movw	r2, #7224	; 0x1c38
   11708:	movt	r2, #1
   1170c:	movw	r3, #6280	; 0x1888
   11710:	ldr	r0, [r5]
   11714:	movt	r3, #1
   11718:	mov	r1, #1
   1171c:	moveq	r3, r2
   11720:	movw	r2, #7132	; 0x1bdc
   11724:	movt	r2, #1
   11728:	bl	109e0 <__fprintf_chk@plt>
   1172c:	mov	r0, #11
   11730:	b	112c0 <abort@plt+0x8a4>
   11734:	ldrb	r3, [sp, #71]	; 0x47
   11738:	tst	r3, #4
   1173c:	bne	116e0 <abort@plt+0xcc4>
   11740:	cmp	r7, #0
   11744:	bne	116d4 <abort@plt+0xcb8>
   11748:	b	1115c <abort@plt+0x740>
   1174c:	cmp	r2, #0
   11750:	moveq	r6, r2
   11754:	bne	11734 <abort@plt+0xd18>
   11758:	movw	r3, #12588	; 0x312c
   1175c:	movt	r3, #2
   11760:	movw	r0, #7012	; 0x1b64
   11764:	mov	r1, #1
   11768:	ldr	r3, [r3]
   1176c:	movt	r0, #1
   11770:	mov	r2, #64	; 0x40
   11774:	bl	10980 <fwrite@plt>
   11778:	cmp	r7, #0
   1177c:	bne	116d4 <abort@plt+0xcb8>
   11780:	cmp	r6, #0
   11784:	beq	115c8 <abort@plt+0xbac>
   11788:	b	1115c <abort@plt+0x740>
   1178c:	ldrb	r3, [sp, #68]	; 0x44
   11790:	cmp	r3, #9
   11794:	beq	117d0 <abort@plt+0xdb4>
   11798:	cmp	r8, #0
   1179c:	beq	11674 <abort@plt+0xc58>
   117a0:	movw	r3, #12588	; 0x312c
   117a4:	movt	r3, #2
   117a8:	movw	r0, #6440	; 0x1928
   117ac:	mov	r1, #1
   117b0:	ldr	r3, [r3]
   117b4:	movt	r0, #1
   117b8:	mov	r2, #43	; 0x2b
   117bc:	bl	10980 <fwrite@plt>
   117c0:	mov	r0, #21
   117c4:	b	112c0 <abort@plt+0x8a4>
   117c8:	mov	r7, #1
   117cc:	b	11684 <abort@plt+0xc68>
   117d0:	mov	r7, r2
   117d4:	mov	r2, #1
   117d8:	b	11684 <abort@plt+0xc68>
   117dc:	movw	r2, #12588	; 0x312c
   117e0:	movt	r2, #2
   117e4:	str	r6, [sp]
   117e8:	mov	r1, #1
   117ec:	ldr	r0, [r2]
   117f0:	movw	r2, #6484	; 0x1954
   117f4:	movt	r2, #1
   117f8:	bl	109e0 <__fprintf_chk@plt>
   117fc:	mov	r0, #21
   11800:	b	112c0 <abort@plt+0x8a4>
   11804:	mov	r7, #0
   11808:	mov	r6, #1
   1180c:	b	11758 <abort@plt+0xd3c>
   11810:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11814:	mov	r7, r0
   11818:	ldr	r6, [pc, #76]	; 1186c <abort@plt+0xe50>
   1181c:	mov	r8, r1
   11820:	ldr	r5, [pc, #72]	; 11870 <abort@plt+0xe54>
   11824:	mov	r9, r2
   11828:	add	r6, pc, r6
   1182c:	bl	10900 <_init@@Base>
   11830:	add	r5, pc, r5
   11834:	rsb	r6, r5, r6
   11838:	asrs	r6, r6, #2
   1183c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11840:	sub	r5, r5, #4
   11844:	mov	r4, #0
   11848:	add	r4, r4, #1
   1184c:	ldr	r3, [r5, #4]!
   11850:	mov	r0, r7
   11854:	mov	r1, r8
   11858:	mov	r2, r9
   1185c:	blx	r3
   11860:	cmp	r4, r6
   11864:	bne	11848 <abort@plt+0xe2c>
   11868:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1186c:	andeq	r1, r1, r8, asr #13
   11870:			; <UNDEFINED> instruction: 0x000116bc
   11874:	bx	lr

Disassembly of section .fini:

00011878 <_fini@@Base>:
   11878:	push	{r3, lr}
   1187c:	pop	{r3, pc}
