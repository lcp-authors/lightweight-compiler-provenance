
centos-preinstalled/flock:     file format elf32-littlearm


Disassembly of section .init:

00010e54 <.init>:
   10e54:	push	{r3, lr}
   10e58:	bl	11888 <strspn@plt+0x768>
   10e5c:	pop	{r3, pc}

Disassembly of section .plt:

00010e60 <calloc@plt-0x14>:
   10e60:	push	{lr}		; (str lr, [sp, #-4]!)
   10e64:	ldr	lr, [pc, #4]	; 10e70 <calloc@plt-0x4>
   10e68:	add	lr, pc, lr
   10e6c:	ldr	pc, [lr, #8]!
   10e70:	muleq	r1, r0, r1

00010e74 <calloc@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #20, 20	; 0x14000
   10e7c:	ldr	pc, [ip, #400]!	; 0x190

00010e80 <raise@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #20, 20	; 0x14000
   10e88:	ldr	pc, [ip, #392]!	; 0x188

00010e8c <setitimer@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #20, 20	; 0x14000
   10e94:	ldr	pc, [ip, #384]!	; 0x180

00010e98 <strcmp@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #20, 20	; 0x14000
   10ea0:	ldr	pc, [ip, #376]!	; 0x178

00010ea4 <strtol@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #20, 20	; 0x14000
   10eac:	ldr	pc, [ip, #368]!	; 0x170

00010eb0 <strcspn@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #360]!	; 0x168

00010ebc <free@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #352]!	; 0x160

00010ec8 <ferror@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #344]!	; 0x158

00010ed4 <_exit@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #20, 20	; 0x14000
   10edc:	ldr	pc, [ip, #336]!	; 0x150

00010ee0 <memcpy@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #20, 20	; 0x14000
   10ee8:	ldr	pc, [ip, #328]!	; 0x148

00010eec <execvp@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #20, 20	; 0x14000
   10ef4:	ldr	pc, [ip, #320]!	; 0x140

00010ef8 <__strtoull_internal@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #20, 20	; 0x14000
   10f00:	ldr	pc, [ip, #312]!	; 0x138

00010f04 <signal@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #20, 20	; 0x14000
   10f0c:	ldr	pc, [ip, #304]!	; 0x130

00010f10 <dcgettext@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #20, 20	; 0x14000
   10f18:	ldr	pc, [ip, #296]!	; 0x128

00010f1c <__stack_chk_fail@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #20, 20	; 0x14000
   10f24:	ldr	pc, [ip, #288]!	; 0x120

00010f28 <textdomain@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #20, 20	; 0x14000
   10f30:	ldr	pc, [ip, #280]!	; 0x118

00010f34 <__strndup@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #20, 20	; 0x14000
   10f3c:	ldr	pc, [ip, #272]!	; 0x110

00010f40 <err@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #20, 20	; 0x14000
   10f48:	ldr	pc, [ip, #264]!	; 0x108

00010f4c <sigaction@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #20, 20	; 0x14000
   10f54:	ldr	pc, [ip, #256]!	; 0x100

00010f58 <waitpid@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #20, 20	; 0x14000
   10f60:	ldr	pc, [ip, #248]!	; 0xf8

00010f64 <__fpending@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #20, 20	; 0x14000
   10f6c:	ldr	pc, [ip, #240]!	; 0xf0

00010f70 <open64@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #20, 20	; 0x14000
   10f78:	ldr	pc, [ip, #232]!	; 0xe8

00010f7c <getenv@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #20, 20	; 0x14000
   10f84:	ldr	pc, [ip, #224]!	; 0xe0

00010f88 <malloc@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #20, 20	; 0x14000
   10f90:	ldr	pc, [ip, #216]!	; 0xd8

00010f94 <__libc_start_main@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #20, 20	; 0x14000
   10f9c:	ldr	pc, [ip, #208]!	; 0xd0

00010fa0 <__gmon_start__@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #20, 20	; 0x14000
   10fa8:	ldr	pc, [ip, #200]!	; 0xc8

00010fac <getopt_long@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #20, 20	; 0x14000
   10fb4:	ldr	pc, [ip, #192]!	; 0xc0

00010fb8 <__ctype_b_loc@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #20, 20	; 0x14000
   10fc0:	ldr	pc, [ip, #184]!	; 0xb8

00010fc4 <exit@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #20, 20	; 0x14000
   10fcc:	ldr	pc, [ip, #176]!	; 0xb0

00010fd0 <flock@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #20, 20	; 0x14000
   10fd8:	ldr	pc, [ip, #168]!	; 0xa8

00010fdc <strtoul@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #20, 20	; 0x14000
   10fe4:	ldr	pc, [ip, #160]!	; 0xa0

00010fe8 <strlen@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #20, 20	; 0x14000
   10ff0:	ldr	pc, [ip, #152]!	; 0x98

00010ff4 <strchr@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #20, 20	; 0x14000
   10ffc:	ldr	pc, [ip, #144]!	; 0x90

00011000 <warnx@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #20, 20	; 0x14000
   11008:	ldr	pc, [ip, #136]!	; 0x88

0001100c <__errno_location@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #20, 20	; 0x14000
   11014:	ldr	pc, [ip, #128]!	; 0x80

00011018 <__cxa_atexit@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #20, 20	; 0x14000
   11020:	ldr	pc, [ip, #120]!	; 0x78

00011024 <__vasprintf_chk@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #20, 20	; 0x14000
   1102c:	ldr	pc, [ip, #112]!	; 0x70

00011030 <__strdup@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #20, 20	; 0x14000
   11038:	ldr	pc, [ip, #104]!	; 0x68

0001103c <memset@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #20, 20	; 0x14000
   11044:	ldr	pc, [ip, #96]!	; 0x60

00011048 <fgetc@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #20, 20	; 0x14000
   11050:	ldr	pc, [ip, #88]!	; 0x58

00011054 <__printf_chk@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #20, 20	; 0x14000
   1105c:	ldr	pc, [ip, #80]!	; 0x50

00011060 <strtod@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #20, 20	; 0x14000
   11068:	ldr	pc, [ip, #72]!	; 0x48

0001106c <__fprintf_chk@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #20, 20	; 0x14000
   11074:	ldr	pc, [ip, #64]!	; 0x40

00011078 <access@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #20, 20	; 0x14000
   11080:	ldr	pc, [ip, #56]!	; 0x38

00011084 <fclose@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #20, 20	; 0x14000
   1108c:	ldr	pc, [ip, #48]!	; 0x30

00011090 <setlocale@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #20, 20	; 0x14000
   11098:	ldr	pc, [ip, #40]!	; 0x28

0001109c <fork@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #20, 20	; 0x14000
   110a4:	ldr	pc, [ip, #32]!

000110a8 <errx@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #20, 20	; 0x14000
   110b0:	ldr	pc, [ip, #24]!

000110b4 <warn@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #20, 20	; 0x14000
   110bc:	ldr	pc, [ip, #16]!

000110c0 <localeconv@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #20, 20	; 0x14000
   110c8:	ldr	pc, [ip, #8]!

000110cc <__strtoll_internal@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #20, 20	; 0x14000
   110d4:	ldr	pc, [ip, #0]!

000110d8 <bindtextdomain@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #77824	; 0x13000
   110e0:	ldr	pc, [ip, #4088]!	; 0xff8

000110e4 <fputs@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #77824	; 0x13000
   110ec:	ldr	pc, [ip, #4080]!	; 0xff0

000110f0 <strncmp@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #77824	; 0x13000
   110f8:	ldr	pc, [ip, #4072]!	; 0xfe8

000110fc <abort@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #77824	; 0x13000
   11104:	ldr	pc, [ip, #4064]!	; 0xfe0

00011108 <close@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #77824	; 0x13000
   11110:	ldr	pc, [ip, #4056]!	; 0xfd8

00011114 <__snprintf_chk@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #77824	; 0x13000
   1111c:	ldr	pc, [ip, #4048]!	; 0xfd0

00011120 <strspn@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #77824	; 0x13000
   11128:	ldr	pc, [ip, #4040]!	; 0xfc8

Disassembly of section .text:

00011130 <.text>:
   11130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11134:	movw	r8, #20752	; 0x5110
   11138:	movt	r8, #2
   1113c:	sub	sp, sp, #380	; 0x17c
   11140:	mov	r4, r0
   11144:	mov	r5, r1
   11148:	ldr	r3, [r8]
   1114c:	movw	r1, #17356	; 0x43cc
   11150:	mov	r0, #6
   11154:	movt	r1, #1
   11158:	mov	r6, #0
   1115c:	str	r6, [sp, #32]
   11160:	str	r3, [sp, #372]	; 0x174
   11164:	bl	11090 <setlocale@plt>
   11168:	movw	r0, #18192	; 0x4710
   1116c:	movw	r1, #18204	; 0x471c
   11170:	movt	r0, #1
   11174:	movt	r1, #1
   11178:	bl	110d8 <bindtextdomain@plt>
   1117c:	movw	r0, #18192	; 0x4710
   11180:	movt	r0, #1
   11184:	bl	10f28 <textdomain@plt>
   11188:	movw	r0, #7280	; 0x1c70
   1118c:	movt	r0, #1
   11190:	bl	142c8 <strspn@plt+0x31a8>
   11194:	cmp	r4, #1
   11198:	ble	11780 <strspn@plt+0x660>
   1119c:	movw	r7, #20768	; 0x5120
   111a0:	movt	r7, #2
   111a4:	mov	sl, r6
   111a8:	str	r6, [sp, #44]	; 0x2c
   111ac:	str	r6, [sp, #48]	; 0x30
   111b0:	movw	r9, #20784	; 0x5130
   111b4:	str	r6, [sp, #16]
   111b8:	movt	r9, #2
   111bc:	str	r6, [sp, #52]	; 0x34
   111c0:	mov	fp, #2
   111c4:	str	r6, [sp, #12]
   111c8:	mov	ip, #1
   111cc:	str	r6, [sp, #56]	; 0x38
   111d0:	str	r6, [r7]
   111d4:	add	r6, sp, #36	; 0x24
   111d8:	str	ip, [sp, #20]
   111dc:	str	r6, [sp]
   111e0:	movw	r2, #18300	; 0x477c
   111e4:	movw	r3, #17156	; 0x4304
   111e8:	movt	r2, #1
   111ec:	movt	r3, #1
   111f0:	mov	r0, r4
   111f4:	mov	r1, r5
   111f8:	bl	10fac <getopt_long@plt>
   111fc:	cmn	r0, #1
   11200:	beq	113d0 <strspn@plt+0x2b0>
   11204:	sub	r0, r0, #69	; 0x45
   11208:	cmp	r0, #51	; 0x33
   1120c:	ldrls	pc, [pc, r0, lsl #2]
   11210:	b	113bc <strspn@plt+0x29c>
   11214:	andeq	r1, r1, r8, lsr #6
   11218:			; <UNDEFINED> instruction: 0x000113bc
   1121c:			; <UNDEFINED> instruction: 0x000113bc
   11220:			; <UNDEFINED> instruction: 0x000113bc
   11224:			; <UNDEFINED> instruction: 0x000113bc
   11228:			; <UNDEFINED> instruction: 0x000113bc
   1122c:			; <UNDEFINED> instruction: 0x000113bc
   11230:			; <UNDEFINED> instruction: 0x000113bc
   11234:			; <UNDEFINED> instruction: 0x000113bc
   11238:			; <UNDEFINED> instruction: 0x000113bc
   1123c:			; <UNDEFINED> instruction: 0x000113bc
   11240:			; <UNDEFINED> instruction: 0x000113bc
   11244:			; <UNDEFINED> instruction: 0x000113bc
   11248:			; <UNDEFINED> instruction: 0x000113bc
   1124c:			; <UNDEFINED> instruction: 0x000113bc
   11250:			; <UNDEFINED> instruction: 0x000113bc
   11254:			; <UNDEFINED> instruction: 0x000113bc
   11258:	andeq	r1, r1, ip, ror #5
   1125c:			; <UNDEFINED> instruction: 0x000113bc
   11260:			; <UNDEFINED> instruction: 0x000113bc
   11264:			; <UNDEFINED> instruction: 0x000113bc
   11268:			; <UNDEFINED> instruction: 0x000113bc
   1126c:			; <UNDEFINED> instruction: 0x000113bc
   11270:			; <UNDEFINED> instruction: 0x000113bc
   11274:			; <UNDEFINED> instruction: 0x000113bc
   11278:			; <UNDEFINED> instruction: 0x000113bc
   1127c:			; <UNDEFINED> instruction: 0x000113bc
   11280:			; <UNDEFINED> instruction: 0x000113bc
   11284:			; <UNDEFINED> instruction: 0x000113bc
   11288:			; <UNDEFINED> instruction: 0x000113bc
   1128c:			; <UNDEFINED> instruction: 0x000113bc
   11290:			; <UNDEFINED> instruction: 0x000113bc
   11294:	andeq	r1, r1, r4, ror #5
   11298:			; <UNDEFINED> instruction: 0x000113bc
   1129c:			; <UNDEFINED> instruction: 0x000113bc
   112a0:			; <UNDEFINED> instruction: 0x000113bc
   112a4:			; <UNDEFINED> instruction: 0x000113bc
   112a8:			; <UNDEFINED> instruction: 0x000113bc
   112ac:			; <UNDEFINED> instruction: 0x000113bc
   112b0:			; <UNDEFINED> instruction: 0x000113bc
   112b4:			; <UNDEFINED> instruction: 0x000113bc
   112b8:			; <UNDEFINED> instruction: 0x000113b0
   112bc:	andeq	r1, r1, r8, lsr #7
   112c0:			; <UNDEFINED> instruction: 0x000113bc
   112c4:			; <UNDEFINED> instruction: 0x000113bc
   112c8:			; <UNDEFINED> instruction: 0x000113bc
   112cc:	andeq	r1, r1, r0, lsr #7
   112d0:			; <UNDEFINED> instruction: 0x000113bc
   112d4:	muleq	r1, r8, r3
   112d8:			; <UNDEFINED> instruction: 0x000113bc
   112dc:	andeq	r1, r1, ip, asr r3
   112e0:	andeq	r1, r1, r4, ror #5
   112e4:	mov	fp, #2
   112e8:	b	111dc <strspn@plt+0xbc>
   112ec:	mov	r2, #5
   112f0:	movw	r1, #18268	; 0x475c
   112f4:	mov	r0, #0
   112f8:	movt	r1, #1
   112fc:	bl	10f10 <dcgettext@plt>
   11300:	movw	r2, #20744	; 0x5108
   11304:	movt	r2, #2
   11308:	movw	r3, #18280	; 0x4768
   1130c:	movt	r3, #1
   11310:	ldr	r2, [r2]
   11314:	mov	r1, r0
   11318:	mov	r0, #1
   1131c:	bl	11054 <__printf_chk@plt>
   11320:	mov	r0, #0
   11324:	bl	10fc4 <exit@plt>
   11328:	ldr	r3, [r9]
   1132c:	mov	r2, #5
   11330:	movw	r1, #18248	; 0x4748
   11334:	mov	r0, #0
   11338:	movt	r1, #1
   1133c:	str	r3, [sp, #8]
   11340:	bl	10f10 <dcgettext@plt>
   11344:	ldr	r3, [sp, #8]
   11348:	mov	r1, r0
   1134c:	mov	r0, r3
   11350:	bl	12464 <strspn@plt+0x1344>
   11354:	str	r0, [sp, #20]
   11358:	b	111dc <strspn@plt+0xbc>
   1135c:	ldr	r3, [r9]
   11360:	mov	r2, #5
   11364:	movw	r1, #18224	; 0x4730
   11368:	mov	r0, #0
   1136c:	movt	r1, #1
   11370:	mov	ip, #1
   11374:	str	r3, [sp, #8]
   11378:	str	ip, [sp, #12]
   1137c:	bl	10f10 <dcgettext@plt>
   11380:	ldr	r3, [sp, #8]
   11384:	add	r1, sp, #52	; 0x34
   11388:	mov	r2, r0
   1138c:	mov	r0, r3
   11390:	bl	128ec <strspn@plt+0x17cc>
   11394:	b	111dc <strspn@plt+0xbc>
   11398:	mov	fp, #8
   1139c:	b	111dc <strspn@plt+0xbc>
   113a0:	mov	fp, #1
   113a4:	b	111dc <strspn@plt+0xbc>
   113a8:	mov	sl, #1
   113ac:	b	111dc <strspn@plt+0xbc>
   113b0:	mov	ip, #4
   113b4:	str	ip, [sp, #16]
   113b8:	b	111dc <strspn@plt+0xbc>
   113bc:	ldr	r0, [r7]
   113c0:	cmp	r0, #0
   113c4:	movne	r0, #64	; 0x40
   113c8:	moveq	r0, #0
   113cc:	bl	11994 <strspn@plt+0x874>
   113d0:	movw	r6, #20760	; 0x5118
   113d4:	movt	r6, #2
   113d8:	ldr	ip, [sp, #12]
   113dc:	ldr	r7, [r6]
   113e0:	add	r3, r7, #1
   113e4:	str	ip, [sp, #28]
   113e8:	cmp	r4, r3
   113ec:	ble	114a0 <strspn@plt+0x380>
   113f0:	ldr	r0, [r5, r3, lsl #2]
   113f4:	add	r3, r5, r3, lsl #2
   113f8:	str	r3, [sp, #24]
   113fc:	ldrb	r3, [r0]
   11400:	cmp	r3, #45	; 0x2d
   11404:	beq	115f4 <strspn@plt+0x4d4>
   11408:	movw	r1, #18316	; 0x478c
   1140c:	movt	r1, #1
   11410:	bl	10e98 <strcmp@plt>
   11414:	cmp	r0, #0
   11418:	bne	11484 <strspn@plt+0x364>
   1141c:	add	r7, r7, #3
   11420:	cmp	r7, r4
   11424:	bne	11800 <strspn@plt+0x6e0>
   11428:	movw	r0, #18372	; 0x47c4
   1142c:	movt	r0, #1
   11430:	bl	10f7c <getenv@plt>
   11434:	cmp	r0, #0
   11438:	str	r0, [sp, #76]	; 0x4c
   1143c:	beq	1144c <strspn@plt+0x32c>
   11440:	ldrsb	r3, [r0]
   11444:	cmp	r3, #0
   11448:	bne	11458 <strspn@plt+0x338>
   1144c:	movw	r3, #18380	; 0x47cc
   11450:	movt	r3, #1
   11454:	str	r3, [sp, #76]	; 0x4c
   11458:	ldr	r2, [r6]
   1145c:	add	r3, sp, #76	; 0x4c
   11460:	mov	r1, #0
   11464:	str	r3, [sp, #24]
   11468:	add	r2, r2, #2
   1146c:	movw	r3, #18388	; 0x47d4
   11470:	str	r1, [sp, #88]	; 0x58
   11474:	movt	r3, #1
   11478:	ldr	r2, [r5, r2, lsl #2]
   1147c:	str	r3, [sp, #80]	; 0x50
   11480:	str	r2, [sp, #84]	; 0x54
   11484:	ldr	r3, [r6]
   11488:	add	r1, sp, #32
   1148c:	ldr	r4, [r5, r3, lsl #2]
   11490:	mov	r0, r4
   11494:	bl	11bac <strspn@plt+0xa8c>
   11498:	mov	r5, r0
   1149c:	b	114c4 <strspn@plt+0x3a4>
   114a0:	cmp	r4, r7
   114a4:	ble	1182c <strspn@plt+0x70c>
   114a8:	ldr	r0, [r5, r7, lsl #2]
   114ac:	movw	r1, #18392	; 0x47d8
   114b0:	movt	r1, #1
   114b4:	mov	r4, #0
   114b8:	bl	12668 <strspn@plt+0x1548>
   114bc:	str	r4, [sp, #24]
   114c0:	mov	r5, r0
   114c4:	ldr	ip, [sp, #12]
   114c8:	cmp	ip, #0
   114cc:	beq	114f4 <strspn@plt+0x3d4>
   114d0:	ldr	r3, [sp, #52]	; 0x34
   114d4:	cmp	r3, #0
   114d8:	bne	11610 <strspn@plt+0x4f0>
   114dc:	ldr	r3, [sp, #56]	; 0x38
   114e0:	cmp	r3, #0
   114e4:	bne	11610 <strspn@plt+0x4f0>
   114e8:	mov	ip, #4
   114ec:	str	r3, [sp, #28]
   114f0:	str	ip, [sp, #16]
   114f4:	ldr	ip, [sp, #16]
   114f8:	movw	r6, #20792	; 0x5138
   114fc:	movt	r6, #2
   11500:	orr	r7, ip, fp
   11504:	mov	r0, r5
   11508:	mov	r1, r7
   1150c:	bl	10fd0 <flock@plt>
   11510:	subs	r3, r0, #0
   11514:	beq	11674 <strspn@plt+0x554>
   11518:	bl	1100c <__errno_location@plt>
   1151c:	ldr	r3, [r0]
   11520:	mov	r9, r0
   11524:	sub	r3, r3, #4
   11528:	cmp	r3, #7
   1152c:	ldrls	pc, [pc, r3, lsl #2]
   11530:	b	115c4 <strspn@plt+0x4a4>
   11534:	andeq	r1, r1, r4, asr r5
   11538:	andeq	r1, r1, r8, ror #10
   1153c:	andeq	r1, r1, r4, asr #11
   11540:	andeq	r1, r1, r4, asr #11
   11544:	andeq	r1, r1, r4, asr #11
   11548:	andeq	r1, r1, r8, ror #10
   1154c:	andeq	r1, r1, r4, asr #11
   11550:	andeq	r1, r1, r0, ror #10
   11554:	ldr	r3, [r6]
   11558:	cmp	r3, #0
   1155c:	beq	11504 <strspn@plt+0x3e4>
   11560:	ldr	r0, [sp, #20]
   11564:	bl	10fc4 <exit@plt>
   11568:	ldr	r3, [sp, #32]
   1156c:	tst	r3, #2
   11570:	bne	115c4 <strspn@plt+0x4a4>
   11574:	cmp	r4, #0
   11578:	cmpne	fp, #1
   1157c:	beq	115c4 <strspn@plt+0x4a4>
   11580:	mov	r0, r4
   11584:	mov	r1, #6
   11588:	bl	11078 <access@plt>
   1158c:	cmp	r0, #0
   11590:	bne	115cc <strspn@plt+0x4ac>
   11594:	mov	r0, r5
   11598:	bl	11108 <close@plt>
   1159c:	mov	r0, r4
   115a0:	add	r1, sp, #32
   115a4:	mov	r2, #2
   115a8:	str	r2, [sp, #32]
   115ac:	bl	11bac <strspn@plt+0xa8c>
   115b0:	ldr	r3, [sp, #32]
   115b4:	tst	r3, #2
   115b8:	mov	r5, r0
   115bc:	bne	11504 <strspn@plt+0x3e4>
   115c0:	b	115cc <strspn@plt+0x4ac>
   115c4:	cmp	r4, #0
   115c8:	beq	11660 <strspn@plt+0x540>
   115cc:	movw	r0, #18448	; 0x4810
   115d0:	mov	r1, r4
   115d4:	movt	r0, #1
   115d8:	bl	110b4 <warn@plt>
   115dc:	ldr	r3, [r9]
   115e0:	cmp	r3, #37	; 0x25
   115e4:	cmpne	r3, #12
   115e8:	movne	r0, #65	; 0x41
   115ec:	moveq	r0, #71	; 0x47
   115f0:	bl	10fc4 <exit@plt>
   115f4:	ldrb	r3, [r0, #1]
   115f8:	cmp	r3, #99	; 0x63
   115fc:	bne	11408 <strspn@plt+0x2e8>
   11600:	ldrb	r3, [r0, #2]
   11604:	cmp	r3, #0
   11608:	beq	1141c <strspn@plt+0x2fc>
   1160c:	b	11408 <strspn@plt+0x2e8>
   11610:	ldr	ip, [sp, #12]
   11614:	mov	r1, #0
   11618:	mov	r2, #140	; 0x8c
   1161c:	add	r0, sp, #232	; 0xe8
   11620:	str	ip, [sp, #28]
   11624:	bl	1103c <memset@plt>
   11628:	add	r1, sp, #232	; 0xe8
   1162c:	add	r2, sp, #92	; 0x5c
   11630:	mov	r0, #14
   11634:	movw	r3, #6528	; 0x1980
   11638:	movt	r3, #1
   1163c:	str	r3, [sp, #232]	; 0xe8
   11640:	mov	r3, #-2147483648	; 0x80000000
   11644:	str	r3, [sp, #364]	; 0x16c
   11648:	bl	10f4c <sigaction@plt>
   1164c:	add	r1, sp, #44	; 0x2c
   11650:	add	r2, sp, #60	; 0x3c
   11654:	mov	r0, #0
   11658:	bl	10e8c <setitimer@plt>
   1165c:	b	114f4 <strspn@plt+0x3d4>
   11660:	mov	r1, r5
   11664:	movw	r0, #18452	; 0x4814
   11668:	movt	r0, #1
   1166c:	bl	110b4 <warn@plt>
   11670:	b	115dc <strspn@plt+0x4bc>
   11674:	ldr	ip, [sp, #28]
   11678:	cmp	ip, #0
   1167c:	bne	11754 <strspn@plt+0x634>
   11680:	ldr	r3, [sp, #24]
   11684:	mov	r6, #0
   11688:	str	r6, [sp, #40]	; 0x28
   1168c:	cmp	r3, #0
   11690:	beq	116f8 <strspn@plt+0x5d8>
   11694:	mov	r1, r6
   11698:	mov	r0, #17
   1169c:	bl	10f04 <signal@plt>
   116a0:	bl	1109c <fork@plt>
   116a4:	subs	r4, r0, #0
   116a8:	blt	117e0 <strspn@plt+0x6c0>
   116ac:	beq	11788 <strspn@plt+0x668>
   116b0:	mov	r0, r4
   116b4:	add	r1, sp, #40	; 0x28
   116b8:	mov	r2, #0
   116bc:	bl	10f58 <waitpid@plt>
   116c0:	cmn	r0, #1
   116c4:	beq	11714 <strspn@plt+0x5f4>
   116c8:	cmp	r4, r0
   116cc:	bne	116b0 <strspn@plt+0x590>
   116d0:	ldr	r3, [sp, #40]	; 0x28
   116d4:	ands	r2, r3, #127	; 0x7f
   116d8:	beq	11748 <strspn@plt+0x628>
   116dc:	add	r3, r2, #1
   116e0:	sbfx	r3, r3, #1, #7
   116e4:	cmp	r3, #0
   116e8:	addgt	r2, r2, #128	; 0x80
   116ec:	strgt	r2, [sp, #40]	; 0x28
   116f0:	movle	r3, #71	; 0x47
   116f4:	strle	r3, [sp, #40]	; 0x28
   116f8:	ldr	r2, [sp, #372]	; 0x174
   116fc:	ldr	r3, [r8]
   11700:	ldr	r0, [sp, #40]	; 0x28
   11704:	cmp	r2, r3
   11708:	bne	1177c <strspn@plt+0x65c>
   1170c:	add	sp, sp, #380	; 0x17c
   11710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11714:	bl	1100c <__errno_location@plt>
   11718:	ldr	r3, [r0]
   1171c:	cmp	r3, #4
   11720:	beq	116b0 <strspn@plt+0x590>
   11724:	mov	r2, #5
   11728:	movw	r1, #18492	; 0x483c
   1172c:	mov	r0, #0
   11730:	movt	r1, #1
   11734:	mov	r3, #1
   11738:	str	r3, [sp, #40]	; 0x28
   1173c:	bl	10f10 <dcgettext@plt>
   11740:	bl	110b4 <warn@plt>
   11744:	b	116f8 <strspn@plt+0x5d8>
   11748:	ubfx	r3, r3, #8, #8
   1174c:	str	r3, [sp, #40]	; 0x28
   11750:	b	116f8 <strspn@plt+0x5d8>
   11754:	add	r1, sp, #60	; 0x3c
   11758:	mov	r2, r3
   1175c:	str	r3, [sp, #8]
   11760:	bl	10e8c <setitimer@plt>
   11764:	ldr	r3, [sp, #8]
   11768:	add	r1, sp, #92	; 0x5c
   1176c:	mov	r0, #14
   11770:	mov	r2, r3
   11774:	bl	10f4c <sigaction@plt>
   11778:	b	11680 <strspn@plt+0x560>
   1177c:	bl	10f1c <__stack_chk_fail@plt>
   11780:	mov	r0, #64	; 0x40
   11784:	bl	11994 <strspn@plt+0x874>
   11788:	cmp	sl, #0
   1178c:	beq	11798 <strspn@plt+0x678>
   11790:	mov	r0, r5
   11794:	bl	11108 <close@plt>
   11798:	ldr	ip, [sp, #24]
   1179c:	mov	r1, ip
   117a0:	ldr	r0, [ip]
   117a4:	bl	10eec <execvp@plt>
   117a8:	mov	r2, #5
   117ac:	movw	r1, #18468	; 0x4824
   117b0:	mov	r0, #0
   117b4:	movt	r1, #1
   117b8:	bl	10f10 <dcgettext@plt>
   117bc:	ldr	r3, [sp, #24]
   117c0:	ldr	r1, [r3]
   117c4:	bl	110b4 <warn@plt>
   117c8:	bl	1100c <__errno_location@plt>
   117cc:	ldr	r0, [r0]
   117d0:	cmp	r0, #12
   117d4:	movne	r0, #69	; 0x45
   117d8:	moveq	r0, #71	; 0x47
   117dc:	bl	10ed4 <_exit@plt>
   117e0:	mov	r0, r6
   117e4:	movw	r1, #18456	; 0x4818
   117e8:	mov	r2, #5
   117ec:	movt	r1, #1
   117f0:	bl	10f10 <dcgettext@plt>
   117f4:	mov	r1, r0
   117f8:	mov	r0, #71	; 0x47
   117fc:	bl	10f40 <err@plt>
   11800:	mov	r2, #5
   11804:	movw	r1, #18328	; 0x4798
   11808:	mov	r0, #0
   1180c:	movt	r1, #1
   11810:	bl	10f10 <dcgettext@plt>
   11814:	ldr	r3, [r6]
   11818:	add	r3, r3, #1
   1181c:	ldr	r2, [r5, r3, lsl #2]
   11820:	mov	r1, r0
   11824:	mov	r0, #64	; 0x40
   11828:	bl	110a8 <errx@plt>
   1182c:	movw	r1, #18404	; 0x47e4
   11830:	mov	r0, #0
   11834:	movt	r1, #1
   11838:	mov	r2, #5
   1183c:	bl	10f10 <dcgettext@plt>
   11840:	mov	r1, r0
   11844:	mov	r0, #64	; 0x40
   11848:	bl	110a8 <errx@plt>
   1184c:	mov	fp, #0
   11850:	mov	lr, #0
   11854:	pop	{r1}		; (ldr r1, [sp], #4)
   11858:	mov	r2, sp
   1185c:	push	{r2}		; (str r2, [sp, #-4]!)
   11860:	push	{r0}		; (str r0, [sp, #-4]!)
   11864:	ldr	ip, [pc, #16]	; 1187c <strspn@plt+0x75c>
   11868:	push	{ip}		; (str ip, [sp, #-4]!)
   1186c:	ldr	r0, [pc, #12]	; 11880 <strspn@plt+0x760>
   11870:	ldr	r3, [pc, #12]	; 11884 <strspn@plt+0x764>
   11874:	bl	10f94 <__libc_start_main@plt>
   11878:	bl	110fc <abort@plt>
   1187c:	andeq	r4, r1, r4, asr #5
   11880:	andeq	r1, r1, r0, lsr r1
   11884:	andeq	r4, r1, r0, ror #4
   11888:	ldr	r3, [pc, #20]	; 118a4 <strspn@plt+0x784>
   1188c:	ldr	r2, [pc, #20]	; 118a8 <strspn@plt+0x788>
   11890:	add	r3, pc, r3
   11894:	ldr	r2, [r3, r2]
   11898:	cmp	r2, #0
   1189c:	bxeq	lr
   118a0:	b	10fa0 <__gmon_start__@plt>
   118a4:	andeq	r3, r1, r8, ror #14
   118a8:	strdeq	r0, [r0], -r8
   118ac:	push	{r3, lr}
   118b0:	movw	r0, #20740	; 0x5104
   118b4:	ldr	r3, [pc, #36]	; 118e0 <strspn@plt+0x7c0>
   118b8:	movt	r0, #2
   118bc:	rsb	r3, r0, r3
   118c0:	cmp	r3, #6
   118c4:	popls	{r3, pc}
   118c8:	movw	r3, #0
   118cc:	movt	r3, #0
   118d0:	cmp	r3, #0
   118d4:	popeq	{r3, pc}
   118d8:	blx	r3
   118dc:	pop	{r3, pc}
   118e0:	andeq	r5, r2, r7, lsl #2
   118e4:	push	{r3, lr}
   118e8:	movw	r0, #20740	; 0x5104
   118ec:	movw	r3, #20740	; 0x5104
   118f0:	movt	r0, #2
   118f4:	movt	r3, #2
   118f8:	rsb	r3, r0, r3
   118fc:	asr	r3, r3, #2
   11900:	add	r3, r3, r3, lsr #31
   11904:	asrs	r1, r3, #1
   11908:	popeq	{r3, pc}
   1190c:	movw	r2, #0
   11910:	movt	r2, #0
   11914:	cmp	r2, #0
   11918:	popeq	{r3, pc}
   1191c:	blx	r2
   11920:	pop	{r3, pc}
   11924:	push	{r4, lr}
   11928:	movw	r4, #20788	; 0x5134
   1192c:	movt	r4, #2
   11930:	ldrb	r3, [r4]
   11934:	cmp	r3, #0
   11938:	popne	{r4, pc}
   1193c:	bl	118ac <strspn@plt+0x78c>
   11940:	mov	r3, #1
   11944:	strb	r3, [r4]
   11948:	pop	{r4, pc}
   1194c:	movw	r0, #20228	; 0x4f04
   11950:	movt	r0, #2
   11954:	push	{r3, lr}
   11958:	ldr	r3, [r0]
   1195c:	cmp	r3, #0
   11960:	beq	11978 <strspn@plt+0x858>
   11964:	movw	r3, #0
   11968:	movt	r3, #0
   1196c:	cmp	r3, #0
   11970:	beq	11978 <strspn@plt+0x858>
   11974:	blx	r3
   11978:	pop	{r3, lr}
   1197c:	b	118e4 <strspn@plt+0x7c4>
   11980:	movw	r3, #20792	; 0x5138
   11984:	movt	r3, #2
   11988:	mov	r2, #1
   1198c:	str	r2, [r3]
   11990:	bx	lr
   11994:	push	{r4, r5, r6, lr}
   11998:	movw	r4, #20772	; 0x5124
   1199c:	movt	r4, #2
   119a0:	mov	r5, r0
   119a4:	mov	r2, #5
   119a8:	movw	r1, #17348	; 0x43c4
   119ac:	mov	r0, #0
   119b0:	movt	r1, #1
   119b4:	ldr	r6, [r4]
   119b8:	bl	10f10 <dcgettext@plt>
   119bc:	mov	r1, #1
   119c0:	mov	r2, r0
   119c4:	mov	r0, r6
   119c8:	bl	1106c <__fprintf_chk@plt>
   119cc:	mov	r2, #5
   119d0:	movw	r1, #17360	; 0x43d0
   119d4:	mov	r0, #0
   119d8:	movt	r1, #1
   119dc:	ldr	r6, [r4]
   119e0:	bl	10f10 <dcgettext@plt>
   119e4:	movw	r3, #20744	; 0x5108
   119e8:	movt	r3, #2
   119ec:	mov	r1, #1
   119f0:	ldr	r3, [r3]
   119f4:	mov	r2, r0
   119f8:	mov	r0, r6
   119fc:	bl	1106c <__fprintf_chk@plt>
   11a00:	mov	r2, #5
   11a04:	movw	r1, #17508	; 0x4464
   11a08:	mov	r0, #0
   11a0c:	movt	r1, #1
   11a10:	bl	10f10 <dcgettext@plt>
   11a14:	ldr	r1, [r4]
   11a18:	bl	110e4 <fputs@plt>
   11a1c:	mov	r2, #5
   11a20:	movw	r1, #17520	; 0x4470
   11a24:	mov	r0, #0
   11a28:	movt	r1, #1
   11a2c:	bl	10f10 <dcgettext@plt>
   11a30:	ldr	r1, [r4]
   11a34:	bl	110e4 <fputs@plt>
   11a38:	mov	r2, #5
   11a3c:	movw	r1, #17568	; 0x44a0
   11a40:	mov	r0, #0
   11a44:	movt	r1, #1
   11a48:	bl	10f10 <dcgettext@plt>
   11a4c:	ldr	r1, [r4]
   11a50:	bl	110e4 <fputs@plt>
   11a54:	mov	r2, #5
   11a58:	movw	r1, #17628	; 0x44dc
   11a5c:	mov	r0, #0
   11a60:	movt	r1, #1
   11a64:	bl	10f10 <dcgettext@plt>
   11a68:	ldr	r1, [r4]
   11a6c:	bl	110e4 <fputs@plt>
   11a70:	mov	r2, #5
   11a74:	movw	r1, #17672	; 0x4508
   11a78:	mov	r0, #0
   11a7c:	movt	r1, #1
   11a80:	bl	10f10 <dcgettext@plt>
   11a84:	ldr	r1, [r4]
   11a88:	bl	110e4 <fputs@plt>
   11a8c:	mov	r2, #5
   11a90:	movw	r1, #17724	; 0x453c
   11a94:	mov	r0, #0
   11a98:	movt	r1, #1
   11a9c:	bl	10f10 <dcgettext@plt>
   11aa0:	ldr	r1, [r4]
   11aa4:	bl	110e4 <fputs@plt>
   11aa8:	mov	r2, #5
   11aac:	movw	r1, #17788	; 0x457c
   11ab0:	mov	r0, #0
   11ab4:	movt	r1, #1
   11ab8:	bl	10f10 <dcgettext@plt>
   11abc:	ldr	r1, [r4]
   11ac0:	bl	110e4 <fputs@plt>
   11ac4:	mov	r2, #5
   11ac8:	movw	r1, #17864	; 0x45c8
   11acc:	mov	r0, #0
   11ad0:	movt	r1, #1
   11ad4:	bl	10f10 <dcgettext@plt>
   11ad8:	ldr	r1, [r4]
   11adc:	bl	110e4 <fputs@plt>
   11ae0:	mov	r2, #5
   11ae4:	movw	r1, #17936	; 0x4610
   11ae8:	mov	r0, #0
   11aec:	movt	r1, #1
   11af0:	bl	10f10 <dcgettext@plt>
   11af4:	ldr	r1, [r4]
   11af8:	bl	110e4 <fputs@plt>
   11afc:	mov	r2, #5
   11b00:	movw	r1, #17504	; 0x4460
   11b04:	mov	r0, #0
   11b08:	movt	r1, #1
   11b0c:	ldr	r6, [r4]
   11b10:	bl	10f10 <dcgettext@plt>
   11b14:	mov	r1, #1
   11b18:	mov	r2, r0
   11b1c:	mov	r0, r6
   11b20:	bl	1106c <__fprintf_chk@plt>
   11b24:	mov	r2, #5
   11b28:	movw	r1, #18012	; 0x465c
   11b2c:	mov	r0, #0
   11b30:	movt	r1, #1
   11b34:	ldr	r6, [r4]
   11b38:	bl	10f10 <dcgettext@plt>
   11b3c:	mov	r1, #1
   11b40:	mov	r2, r0
   11b44:	mov	r0, r6
   11b48:	bl	1106c <__fprintf_chk@plt>
   11b4c:	mov	r2, #5
   11b50:	movw	r1, #18056	; 0x4688
   11b54:	mov	r0, #0
   11b58:	movt	r1, #1
   11b5c:	ldr	r6, [r4]
   11b60:	bl	10f10 <dcgettext@plt>
   11b64:	mov	r1, #1
   11b68:	mov	r2, r0
   11b6c:	mov	r0, r6
   11b70:	bl	1106c <__fprintf_chk@plt>
   11b74:	mov	r2, #5
   11b78:	movw	r1, #18112	; 0x46c0
   11b7c:	mov	r0, #0
   11b80:	movt	r1, #1
   11b84:	ldr	r4, [r4]
   11b88:	bl	10f10 <dcgettext@plt>
   11b8c:	movw	r3, #18140	; 0x46dc
   11b90:	mov	r1, #1
   11b94:	movt	r3, #1
   11b98:	mov	r2, r0
   11b9c:	mov	r0, r4
   11ba0:	bl	1106c <__fprintf_chk@plt>
   11ba4:	mov	r0, r5
   11ba8:	bl	10fc4 <exit@plt>
   11bac:	push	{r3, r4, r5, r6, r7, lr}
   11bb0:	mov	r5, r1
   11bb4:	ldr	r4, [r1]
   11bb8:	mov	r7, r0
   11bbc:	bl	1100c <__errno_location@plt>
   11bc0:	mov	r3, #0
   11bc4:	orr	r4, r4, #320	; 0x140
   11bc8:	movw	r2, #438	; 0x1b6
   11bcc:	mov	r1, r4
   11bd0:	mov	r6, r0
   11bd4:	mov	r0, r7
   11bd8:	str	r3, [r6]
   11bdc:	bl	10f70 <open64@plt>
   11be0:	cmp	r0, #0
   11be4:	blt	11bf0 <strspn@plt+0xad0>
   11be8:	str	r4, [r5]
   11bec:	pop	{r3, r4, r5, r6, r7, pc}
   11bf0:	ldr	r3, [r6]
   11bf4:	cmp	r3, #21
   11bf8:	beq	11c54 <strspn@plt+0xb34>
   11bfc:	mov	r2, #5
   11c00:	movw	r1, #18152	; 0x46e8
   11c04:	mov	r0, #0
   11c08:	movt	r1, #1
   11c0c:	bl	10f10 <dcgettext@plt>
   11c10:	mov	r1, r7
   11c14:	bl	110b4 <warn@plt>
   11c18:	ldr	r3, [r6]
   11c1c:	cmp	r3, #12
   11c20:	beq	11c4c <strspn@plt+0xb2c>
   11c24:	sub	r2, r3, #23
   11c28:	cmp	r2, #1
   11c2c:	bls	11c4c <strspn@plt+0xb2c>
   11c30:	bic	r3, r3, #2
   11c34:	cmp	r3, #28
   11c38:	bne	11c44 <strspn@plt+0xb24>
   11c3c:	mov	r0, #73	; 0x49
   11c40:	bl	10fc4 <exit@plt>
   11c44:	mov	r0, #66	; 0x42
   11c48:	bl	10fc4 <exit@plt>
   11c4c:	mov	r0, #71	; 0x47
   11c50:	bl	10fc4 <exit@plt>
   11c54:	mov	r0, r7
   11c58:	mov	r1, #256	; 0x100
   11c5c:	bl	10f70 <open64@plt>
   11c60:	cmp	r0, #0
   11c64:	blt	11bfc <strspn@plt+0xadc>
   11c68:	mov	r4, #256	; 0x100
   11c6c:	b	11be8 <strspn@plt+0xac8>
   11c70:	movw	r3, #20776	; 0x5128
   11c74:	movt	r3, #2
   11c78:	push	{r4, r5, r6, lr}
   11c7c:	ldr	r4, [r3]
   11c80:	mov	r0, r4
   11c84:	bl	10f64 <__fpending@plt>
   11c88:	mov	r6, r0
   11c8c:	mov	r0, r4
   11c90:	bl	10ec8 <ferror@plt>
   11c94:	mov	r5, r0
   11c98:	mov	r0, r4
   11c9c:	bl	11084 <fclose@plt>
   11ca0:	adds	r4, r0, #0
   11ca4:	movne	r4, #1
   11ca8:	cmp	r5, #0
   11cac:	bne	11d24 <strspn@plt+0xc04>
   11cb0:	cmp	r4, #0
   11cb4:	beq	11cd0 <strspn@plt+0xbb0>
   11cb8:	cmp	r6, #0
   11cbc:	beq	11d74 <strspn@plt+0xc54>
   11cc0:	bl	1100c <__errno_location@plt>
   11cc4:	ldr	r3, [r0]
   11cc8:	cmp	r3, #32
   11ccc:	bne	11d88 <strspn@plt+0xc68>
   11cd0:	movw	r3, #20772	; 0x5124
   11cd4:	movt	r3, #2
   11cd8:	ldr	r4, [r3]
   11cdc:	mov	r0, r4
   11ce0:	bl	10f64 <__fpending@plt>
   11ce4:	mov	r6, r0
   11ce8:	mov	r0, r4
   11cec:	bl	10ec8 <ferror@plt>
   11cf0:	mov	r5, r0
   11cf4:	mov	r0, r4
   11cf8:	bl	11084 <fclose@plt>
   11cfc:	adds	r4, r0, #0
   11d00:	movne	r4, #1
   11d04:	cmp	r5, #0
   11d08:	beq	11d50 <strspn@plt+0xc30>
   11d0c:	cmp	r4, #0
   11d10:	bne	11d1c <strspn@plt+0xbfc>
   11d14:	bl	1100c <__errno_location@plt>
   11d18:	str	r4, [r0]
   11d1c:	mov	r0, #1
   11d20:	bl	10ed4 <_exit@plt>
   11d24:	cmp	r4, #0
   11d28:	bne	11cc0 <strspn@plt+0xba0>
   11d2c:	bl	1100c <__errno_location@plt>
   11d30:	str	r4, [r0]
   11d34:	mov	r2, #5
   11d38:	movw	r1, #18180	; 0x4704
   11d3c:	mov	r0, #0
   11d40:	movt	r1, #1
   11d44:	bl	10f10 <dcgettext@plt>
   11d48:	bl	11000 <warnx@plt>
   11d4c:	b	11d1c <strspn@plt+0xbfc>
   11d50:	cmp	r4, #0
   11d54:	popeq	{r4, r5, r6, pc}
   11d58:	cmp	r6, #0
   11d5c:	bne	11d1c <strspn@plt+0xbfc>
   11d60:	bl	1100c <__errno_location@plt>
   11d64:	ldr	r3, [r0]
   11d68:	cmp	r3, #9
   11d6c:	bne	11d1c <strspn@plt+0xbfc>
   11d70:	pop	{r4, r5, r6, pc}
   11d74:	bl	1100c <__errno_location@plt>
   11d78:	ldr	r3, [r0]
   11d7c:	cmp	r3, #9
   11d80:	bne	11cc8 <strspn@plt+0xba8>
   11d84:	b	11cd0 <strspn@plt+0xbb0>
   11d88:	cmp	r3, #0
   11d8c:	beq	11d34 <strspn@plt+0xc14>
   11d90:	mov	r2, #5
   11d94:	movw	r1, #18180	; 0x4704
   11d98:	mov	r0, #0
   11d9c:	movt	r1, #1
   11da0:	bl	10f10 <dcgettext@plt>
   11da4:	bl	110b4 <warn@plt>
   11da8:	b	11d1c <strspn@plt+0xbfc>
   11dac:	andeq	r0, r0, r0
   11db0:	cmp	r0, #0
   11db4:	mov	r3, #0
   11db8:	str	r3, [r1]
   11dbc:	bxeq	lr
   11dc0:	ldrb	r2, [r0]
   11dc4:	cmp	r2, #47	; 0x2f
   11dc8:	bne	11e10 <strspn@plt+0xcf0>
   11dcc:	ldrsb	r3, [r0, #1]
   11dd0:	cmp	r3, #47	; 0x2f
   11dd4:	bne	11e18 <strspn@plt+0xcf8>
   11dd8:	mov	r3, r0
   11ddc:	b	11dfc <strspn@plt+0xcdc>
   11de0:	ldrb	r2, [r3, #1]
   11de4:	mov	r3, r0
   11de8:	cmp	r2, #47	; 0x2f
   11dec:	bne	11e10 <strspn@plt+0xcf0>
   11df0:	ldrsb	r2, [r0, #1]
   11df4:	cmp	r2, #47	; 0x2f
   11df8:	bne	11e18 <strspn@plt+0xcf8>
   11dfc:	cmn	r3, #1
   11e00:	add	r0, r0, #1
   11e04:	bne	11de0 <strspn@plt+0xcc0>
   11e08:	mov	r0, #0
   11e0c:	bx	lr
   11e10:	cmp	r2, #0
   11e14:	beq	11e08 <strspn@plt+0xce8>
   11e18:	mov	r3, #1
   11e1c:	str	r3, [r1]
   11e20:	ldrsb	r3, [r0, #1]
   11e24:	cmp	r3, #47	; 0x2f
   11e28:	cmpne	r3, #0
   11e2c:	bxeq	lr
   11e30:	mov	r3, #2
   11e34:	str	r3, [r1]
   11e38:	ldrb	r2, [r0, r3]
   11e3c:	add	r3, r3, #1
   11e40:	cmp	r2, #47	; 0x2f
   11e44:	cmpne	r2, #0
   11e48:	bne	11e34 <strspn@plt+0xd14>
   11e4c:	bx	lr
   11e50:	push	{r3, r4, r5, r6, r7, lr}
   11e54:	mov	r7, r1
   11e58:	ldrb	r3, [r0]
   11e5c:	cmp	r3, #0
   11e60:	beq	11ed8 <strspn@plt+0xdb8>
   11e64:	mov	r4, #0
   11e68:	mov	r5, r0
   11e6c:	mov	r6, r4
   11e70:	b	11ea0 <strspn@plt+0xd80>
   11e74:	cmp	r3, #92	; 0x5c
   11e78:	mov	r0, r7
   11e7c:	mov	r1, r3
   11e80:	beq	11ec8 <strspn@plt+0xda8>
   11e84:	bl	10ff4 <strchr@plt>
   11e88:	cmp	r0, #0
   11e8c:	bne	11ed0 <strspn@plt+0xdb0>
   11e90:	ldrb	r3, [r5, #1]!
   11e94:	add	r4, r4, #1
   11e98:	cmp	r3, #0
   11e9c:	beq	11ec0 <strspn@plt+0xda0>
   11ea0:	cmp	r6, #0
   11ea4:	sxtb	r3, r3
   11ea8:	beq	11e74 <strspn@plt+0xd54>
   11eac:	ldrb	r3, [r5, #1]!
   11eb0:	mov	r6, #0
   11eb4:	add	r4, r4, #1
   11eb8:	cmp	r3, #0
   11ebc:	bne	11ea0 <strspn@plt+0xd80>
   11ec0:	rsb	r0, r6, r4
   11ec4:	pop	{r3, r4, r5, r6, r7, pc}
   11ec8:	mov	r6, #1
   11ecc:	b	11e90 <strspn@plt+0xd70>
   11ed0:	mov	r0, r4
   11ed4:	pop	{r3, r4, r5, r6, r7, pc}
   11ed8:	mov	r0, r3
   11edc:	pop	{r3, r4, r5, r6, r7, pc}
   11ee0:	ldr	r3, [pc, #224]	; 11fc8 <strspn@plt+0xea8>
   11ee4:	push	{r4, r5, r6, r7, r8, r9, lr}
   11ee8:	mov	r6, r0
   11eec:	ldr	r0, [pc, #216]	; 11fcc <strspn@plt+0xeac>
   11ef0:	add	r3, pc, r3
   11ef4:	sub	sp, sp, #12
   11ef8:	mov	r4, #0
   11efc:	mov	r9, r1
   11f00:	mov	r5, r2
   11f04:	ldr	r8, [r3, r0]
   11f08:	str	r4, [sp]
   11f0c:	ldr	r3, [r8]
   11f10:	str	r3, [sp, #4]
   11f14:	bl	1100c <__errno_location@plt>
   11f18:	cmp	r6, r4
   11f1c:	mov	r7, r0
   11f20:	str	r4, [r0]
   11f24:	beq	11f34 <strspn@plt+0xe14>
   11f28:	ldrsb	r3, [r6]
   11f2c:	cmp	r3, r4
   11f30:	bne	11f4c <strspn@plt+0xe2c>
   11f34:	ldr	r1, [pc, #148]	; 11fd0 <strspn@plt+0xeb0>
   11f38:	mov	r2, r9
   11f3c:	mov	r3, r6
   11f40:	mov	r0, #1
   11f44:	add	r1, pc, r1
   11f48:	bl	110a8 <errx@plt>
   11f4c:	mov	r3, r4
   11f50:	mov	r2, r5
   11f54:	mov	r0, r6
   11f58:	mov	r1, sp
   11f5c:	bl	10ef8 <__strtoull_internal@plt>
   11f60:	ldr	r3, [r7]
   11f64:	cmp	r3, r4
   11f68:	bne	11fa4 <strspn@plt+0xe84>
   11f6c:	ldr	r3, [sp]
   11f70:	cmp	r6, r3
   11f74:	beq	11f34 <strspn@plt+0xe14>
   11f78:	cmp	r3, r4
   11f7c:	beq	11f8c <strspn@plt+0xe6c>
   11f80:	ldrsb	r3, [r3]
   11f84:	cmp	r3, r4
   11f88:	bne	11f34 <strspn@plt+0xe14>
   11f8c:	ldr	r2, [sp, #4]
   11f90:	ldr	r3, [r8]
   11f94:	cmp	r2, r3
   11f98:	bne	11fc4 <strspn@plt+0xea4>
   11f9c:	add	sp, sp, #12
   11fa0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11fa4:	cmp	r3, #34	; 0x22
   11fa8:	bne	11f34 <strspn@plt+0xe14>
   11fac:	ldr	r1, [pc, #32]	; 11fd4 <strspn@plt+0xeb4>
   11fb0:	mov	r2, r9
   11fb4:	mov	r3, r6
   11fb8:	mov	r0, #1
   11fbc:	add	r1, pc, r1
   11fc0:	bl	10f40 <err@plt>
   11fc4:	bl	10f1c <__stack_chk_fail@plt>
   11fc8:	andeq	r3, r1, r8, lsl #2
   11fcc:	strdeq	r0, [r0], -r4
   11fd0:	andeq	r2, r0, r8, ror #18
   11fd4:	strdeq	r2, [r0], -r0
   11fd8:	ldr	r3, [pc, #596]	; 12234 <strspn@plt+0x1114>
   11fdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fe0:	add	r3, pc, r3
   11fe4:	subs	r6, r0, #0
   11fe8:	ldr	r0, [pc, #584]	; 12238 <strspn@plt+0x1118>
   11fec:	mov	r8, r1
   11ff0:	mov	r1, r3
   11ff4:	sub	sp, sp, #20
   11ff8:	mov	r9, r2
   11ffc:	ldr	sl, [r1, r0]
   12000:	mov	r2, #0
   12004:	mov	r3, #0
   12008:	ldr	r1, [sl]
   1200c:	strd	r2, [r8]
   12010:	str	r1, [sp, #12]
   12014:	beq	120fc <strspn@plt+0xfdc>
   12018:	ldrb	r5, [r6]
   1201c:	cmp	r5, #0
   12020:	beq	120fc <strspn@plt+0xfdc>
   12024:	str	r6, [sp, #8]
   12028:	bl	10fb8 <__ctype_b_loc@plt>
   1202c:	mov	r3, r6
   12030:	ldr	r1, [r0]
   12034:	b	12048 <strspn@plt+0xf28>
   12038:	add	r2, r3, #1
   1203c:	str	r2, [sp, #8]
   12040:	ldrb	r5, [r3, #1]
   12044:	mov	r3, r2
   12048:	lsl	r2, r5, #1
   1204c:	ldrh	r4, [r1, r2]
   12050:	and	r4, r4, #8192	; 0x2000
   12054:	uxth	r4, r4
   12058:	cmp	r4, #0
   1205c:	bne	12038 <strspn@plt+0xf18>
   12060:	cmp	r5, #45	; 0x2d
   12064:	beq	120fc <strspn@plt+0xfdc>
   12068:	add	r5, sp, #16
   1206c:	str	r4, [r5, #-8]!
   12070:	bl	1100c <__errno_location@plt>
   12074:	mov	r2, r4
   12078:	mov	r1, r5
   1207c:	mov	r3, r4
   12080:	mov	r7, r0
   12084:	mov	r0, r6
   12088:	str	r4, [r7]
   1208c:	bl	10ef8 <__strtoull_internal@plt>
   12090:	mov	r5, r1
   12094:	ldr	r1, [sp, #8]
   12098:	mov	r4, r0
   1209c:	cmp	r1, r6
   120a0:	beq	120fc <strspn@plt+0xfdc>
   120a4:	ldr	r3, [r7]
   120a8:	cmp	r3, #0
   120ac:	bne	120e0 <strspn@plt+0xfc0>
   120b0:	cmp	r1, #0
   120b4:	beq	121e4 <strspn@plt+0x10c4>
   120b8:	ldrb	r0, [r1]
   120bc:	cmp	r0, #0
   120c0:	bne	12104 <strspn@plt+0xfe4>
   120c4:	strd	r4, [r8]
   120c8:	ldr	r2, [sp, #12]
   120cc:	ldr	r3, [sl]
   120d0:	cmp	r2, r3
   120d4:	bne	12230 <strspn@plt+0x1110>
   120d8:	add	sp, sp, #20
   120dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120e0:	subs	r2, r4, #1
   120e4:	mvn	r6, #2
   120e8:	sbc	r3, r5, #0
   120ec:	mvn	r7, #0
   120f0:	cmp	r3, r7
   120f4:	cmpeq	r2, r6
   120f8:	bls	120b0 <strspn@plt+0xf90>
   120fc:	mvn	r0, #0
   12100:	b	120c8 <strspn@plt+0xfa8>
   12104:	ldrb	r2, [r1, #1]
   12108:	sxtb	r3, r2
   1210c:	cmp	r3, #105	; 0x69
   12110:	beq	121ec <strspn@plt+0x10cc>
   12114:	cmp	r3, #66	; 0x42
   12118:	beq	121c8 <strspn@plt+0x10a8>
   1211c:	cmp	r2, #0
   12120:	bne	120fc <strspn@plt+0xfdc>
   12124:	mov	r6, #1024	; 0x400
   12128:	ldr	r7, [pc, #268]	; 1223c <strspn@plt+0x111c>
   1212c:	sxtb	r3, r0
   12130:	str	r3, [sp, #4]
   12134:	add	r7, pc, r7
   12138:	mov	r1, r3
   1213c:	mov	r0, r7
   12140:	bl	10ff4 <strchr@plt>
   12144:	ldr	r3, [sp, #4]
   12148:	cmp	r0, #0
   1214c:	rsbne	fp, r7, r0
   12150:	addne	fp, fp, #1
   12154:	beq	12208 <strspn@plt+0x10e8>
   12158:	cmp	fp, #0
   1215c:	beq	121b8 <strspn@plt+0x1098>
   12160:	asr	r7, r6, #31
   12164:	mvn	r0, #0
   12168:	mvn	r1, #0
   1216c:	mov	r2, r6
   12170:	mov	r3, r7
   12174:	bl	136d4 <strspn@plt+0x25b4>
   12178:	cmp	r1, r5
   1217c:	cmpeq	r0, r4
   12180:	bcc	121dc <strspn@plt+0x10bc>
   12184:	sub	ip, fp, #1
   12188:	mov	r3, #0
   1218c:	b	121a0 <strspn@plt+0x1080>
   12190:	cmp	r1, r5
   12194:	cmpeq	r0, r4
   12198:	add	r3, r3, #1
   1219c:	bcc	121dc <strspn@plt+0x10bc>
   121a0:	mul	r2, r4, r7
   121a4:	cmp	r3, ip
   121a8:	mla	r2, r6, r5, r2
   121ac:	umull	r4, r5, r4, r6
   121b0:	add	r5, r2, r5
   121b4:	bne	12190 <strspn@plt+0x1070>
   121b8:	mov	r0, #0
   121bc:	cmp	r9, #0
   121c0:	strne	fp, [r9]
   121c4:	b	120c4 <strspn@plt+0xfa4>
   121c8:	ldrsb	r3, [r1, #2]
   121cc:	cmp	r3, #0
   121d0:	bne	120fc <strspn@plt+0xfdc>
   121d4:	mov	r6, #1000	; 0x3e8
   121d8:	b	12128 <strspn@plt+0x1008>
   121dc:	mvn	r0, #1
   121e0:	b	121bc <strspn@plt+0x109c>
   121e4:	mov	r0, r1
   121e8:	b	120c4 <strspn@plt+0xfa4>
   121ec:	ldrsb	r3, [r1, #2]
   121f0:	cmp	r3, #66	; 0x42
   121f4:	bne	120fc <strspn@plt+0xfdc>
   121f8:	ldrsb	r3, [r1, #3]
   121fc:	cmp	r3, #0
   12200:	beq	12124 <strspn@plt+0x1004>
   12204:	b	120fc <strspn@plt+0xfdc>
   12208:	ldr	r7, [pc, #48]	; 12240 <strspn@plt+0x1120>
   1220c:	mov	r1, r3
   12210:	add	r7, pc, r7
   12214:	mov	r0, r7
   12218:	bl	10ff4 <strchr@plt>
   1221c:	cmp	r0, #0
   12220:	beq	120fc <strspn@plt+0xfdc>
   12224:	rsb	r7, r7, r0
   12228:	add	fp, r7, #1
   1222c:	b	12158 <strspn@plt+0x1038>
   12230:	bl	10f1c <__stack_chk_fail@plt>
   12234:	andeq	r3, r1, r8, lsl r0
   12238:	strdeq	r0, [r0], -r4
   1223c:	andeq	r2, r0, r4, lsl #15
   12240:			; <UNDEFINED> instruction: 0x000026b4
   12244:	mov	r2, #0
   12248:	b	11fd8 <strspn@plt+0xeb8>
   1224c:	push	{r4, r5, r6, lr}
   12250:	subs	r6, r0, #0
   12254:	beq	122d8 <strspn@plt+0x11b8>
   12258:	ldrb	r4, [r6]
   1225c:	cmp	r4, #0
   12260:	beq	122e0 <strspn@plt+0x11c0>
   12264:	bl	10fb8 <__ctype_b_loc@plt>
   12268:	mov	r3, r6
   1226c:	ldr	r5, [r0]
   12270:	b	1228c <strspn@plt+0x116c>
   12274:	cmn	r3, #1
   12278:	beq	122c8 <strspn@plt+0x11a8>
   1227c:	ldrb	r4, [r3, #1]
   12280:	mov	r3, r1
   12284:	cmp	r4, #0
   12288:	beq	122d0 <strspn@plt+0x11b0>
   1228c:	lsl	r4, r4, #1
   12290:	mov	ip, r3
   12294:	add	r1, r3, #1
   12298:	ldrh	r2, [r5, r4]
   1229c:	tst	r2, #2048	; 0x800
   122a0:	bne	12274 <strspn@plt+0x1154>
   122a4:	cmp	ip, #0
   122a8:	cmpne	ip, r6
   122ac:	movls	r0, #0
   122b0:	movhi	r0, #1
   122b4:	popls	{r4, r5, r6, pc}
   122b8:	ldrsb	r0, [ip]
   122bc:	rsbs	r0, r0, #1
   122c0:	movcc	r0, #0
   122c4:	pop	{r4, r5, r6, pc}
   122c8:	mov	r0, #0
   122cc:	pop	{r4, r5, r6, pc}
   122d0:	mov	ip, r1
   122d4:	b	122a4 <strspn@plt+0x1184>
   122d8:	mov	r0, r6
   122dc:	pop	{r4, r5, r6, pc}
   122e0:	mov	r0, r4
   122e4:	pop	{r4, r5, r6, pc}
   122e8:	cmp	r1, #0
   122ec:	push	{r4, r5}
   122f0:	sub	r4, r1, #1
   122f4:	beq	12360 <strspn@plt+0x1240>
   122f8:	ldrb	r1, [r0]
   122fc:	cmp	r1, #0
   12300:	beq	12360 <strspn@plt+0x1240>
   12304:	sxtb	r1, r1
   12308:	sxtb	r2, r2
   1230c:	cmp	r1, r2
   12310:	beq	1234c <strspn@plt+0x122c>
   12314:	add	r1, r0, #1
   12318:	mov	r3, #0
   1231c:	b	12338 <strspn@plt+0x1218>
   12320:	ldrb	r0, [r1], #1
   12324:	cmp	r0, #0
   12328:	sxtb	ip, r0
   1232c:	beq	1234c <strspn@plt+0x122c>
   12330:	cmp	ip, r2
   12334:	beq	12354 <strspn@plt+0x1234>
   12338:	cmp	r3, r4
   1233c:	mov	r5, r1
   12340:	add	r3, r3, #1
   12344:	bne	12320 <strspn@plt+0x1200>
   12348:	mov	r0, #0
   1234c:	pop	{r4, r5}
   12350:	bx	lr
   12354:	mov	r0, r5
   12358:	pop	{r4, r5}
   1235c:	bx	lr
   12360:	mov	r0, r1
   12364:	b	1234c <strspn@plt+0x122c>
   12368:	ldr	r3, [pc, #228]	; 12454 <strspn@plt+0x1334>
   1236c:	ldr	r2, [pc, #228]	; 12458 <strspn@plt+0x1338>
   12370:	add	r3, pc, r3
   12374:	push	{r4, r6, r7, r8, r9, lr}
   12378:	subs	r6, r0, #0
   1237c:	ldr	r7, [r3, r2]
   12380:	mov	r0, r3
   12384:	sub	sp, sp, #8
   12388:	mov	r4, #0
   1238c:	mov	r8, r1
   12390:	ldr	r3, [r7]
   12394:	str	r4, [sp]
   12398:	str	r3, [sp, #4]
   1239c:	beq	123ac <strspn@plt+0x128c>
   123a0:	ldrsb	r3, [r6]
   123a4:	cmp	r3, r4
   123a8:	bne	123d4 <strspn@plt+0x12b4>
   123ac:	bl	1100c <__errno_location@plt>
   123b0:	ldr	r3, [r0]
   123b4:	cmp	r3, #0
   123b8:	bne	12400 <strspn@plt+0x12e0>
   123bc:	ldr	r1, [pc, #152]	; 1245c <strspn@plt+0x133c>
   123c0:	mov	r2, r8
   123c4:	mov	r3, r6
   123c8:	mov	r0, #1
   123cc:	add	r1, pc, r1
   123d0:	bl	110a8 <errx@plt>
   123d4:	bl	1100c <__errno_location@plt>
   123d8:	mov	r3, r4
   123dc:	mov	r1, sp
   123e0:	mov	r2, #10
   123e4:	mov	r9, r0
   123e8:	str	r4, [r0]
   123ec:	mov	r0, r6
   123f0:	bl	110cc <__strtoll_internal@plt>
   123f4:	ldr	r3, [r9]
   123f8:	cmp	r3, r4
   123fc:	beq	12418 <strspn@plt+0x12f8>
   12400:	ldr	r1, [pc, #88]	; 12460 <strspn@plt+0x1340>
   12404:	mov	r2, r8
   12408:	mov	r3, r6
   1240c:	mov	r0, #1
   12410:	add	r1, pc, r1
   12414:	bl	10f40 <err@plt>
   12418:	ldr	r3, [sp]
   1241c:	cmp	r6, r3
   12420:	beq	123bc <strspn@plt+0x129c>
   12424:	cmp	r3, #0
   12428:	beq	12438 <strspn@plt+0x1318>
   1242c:	ldrsb	r3, [r3]
   12430:	cmp	r3, #0
   12434:	bne	123bc <strspn@plt+0x129c>
   12438:	ldr	r2, [sp, #4]
   1243c:	ldr	r3, [r7]
   12440:	cmp	r2, r3
   12444:	bne	12450 <strspn@plt+0x1330>
   12448:	add	sp, sp, #8
   1244c:	pop	{r4, r6, r7, r8, r9, pc}
   12450:	bl	10f1c <__stack_chk_fail@plt>
   12454:	andeq	r2, r1, r8, lsl #25
   12458:	strdeq	r0, [r0], -r4
   1245c:	andeq	r2, r0, r0, ror #9
   12460:	muleq	r0, ip, r4
   12464:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   12468:	mov	r8, r0
   1246c:	mov	r9, r1
   12470:	bl	12368 <strspn@plt+0x1248>
   12474:	mvn	r4, #0
   12478:	mov	r5, #0
   1247c:	adds	r6, r0, #-2147483648	; 0x80000000
   12480:	adc	r7, r1, #0
   12484:	cmp	r7, r5
   12488:	cmpeq	r6, r4
   1248c:	popls	{r3, r4, r5, r6, r7, r8, r9, pc}
   12490:	ldr	r1, [pc, #16]	; 124a8 <strspn@plt+0x1388>
   12494:	mov	r2, r9
   12498:	mov	r3, r8
   1249c:	mov	r0, #1
   124a0:	add	r1, pc, r1
   124a4:	bl	110a8 <errx@plt>
   124a8:	andeq	r2, r0, ip, lsl #8
   124ac:	push	{r3, r4, r5, lr}
   124b0:	mov	r4, r0
   124b4:	mov	r5, r1
   124b8:	bl	12464 <strspn@plt+0x1344>
   124bc:	add	ip, r0, #32768	; 0x8000
   124c0:	cmp	ip, #65536	; 0x10000
   124c4:	bcs	124d0 <strspn@plt+0x13b0>
   124c8:	sxth	r0, r0
   124cc:	pop	{r3, r4, r5, pc}
   124d0:	ldr	r1, [pc, #16]	; 124e8 <strspn@plt+0x13c8>
   124d4:	mov	r2, r5
   124d8:	mov	r3, r4
   124dc:	mov	r0, #1
   124e0:	add	r1, pc, r1
   124e4:	bl	110a8 <errx@plt>
   124e8:	andeq	r2, r0, ip, asr #7
   124ec:	mov	r2, #10
   124f0:	b	11ee0 <strspn@plt+0xdc0>
   124f4:	push	{r3, r4, r5, r6, r7, lr}
   124f8:	mov	r6, r0
   124fc:	mov	r7, r1
   12500:	bl	124ec <strspn@plt+0x13cc>
   12504:	mvn	r4, #0
   12508:	mov	r5, #0
   1250c:	cmp	r1, r5
   12510:	cmpeq	r0, r4
   12514:	popls	{r3, r4, r5, r6, r7, pc}
   12518:	ldr	r1, [pc, #16]	; 12530 <strspn@plt+0x1410>
   1251c:	mov	r2, r7
   12520:	mov	r3, r6
   12524:	mov	r0, #1
   12528:	add	r1, pc, r1
   1252c:	bl	110a8 <errx@plt>
   12530:	andeq	r2, r0, r4, lsl #7
   12534:	push	{r3, r4, r5, lr}
   12538:	mov	r4, r0
   1253c:	mov	r5, r1
   12540:	bl	124f4 <strspn@plt+0x13d4>
   12544:	cmp	r0, #65536	; 0x10000
   12548:	bcs	12554 <strspn@plt+0x1434>
   1254c:	uxth	r0, r0
   12550:	pop	{r3, r4, r5, pc}
   12554:	ldr	r1, [pc, #16]	; 1256c <strspn@plt+0x144c>
   12558:	mov	r2, r5
   1255c:	mov	r3, r4
   12560:	mov	r0, #1
   12564:	add	r1, pc, r1
   12568:	bl	110a8 <errx@plt>
   1256c:	andeq	r2, r0, r8, asr #6
   12570:	mov	r2, #16
   12574:	b	11ee0 <strspn@plt+0xdc0>
   12578:	ldr	r3, [pc, #216]	; 12658 <strspn@plt+0x1538>
   1257c:	push	{r4, r5, r6, r7, r8, lr}
   12580:	subs	r4, r0, #0
   12584:	ldr	r0, [pc, #208]	; 1265c <strspn@plt+0x153c>
   12588:	add	r3, pc, r3
   1258c:	sub	sp, sp, #8
   12590:	mov	r5, #0
   12594:	mov	r7, r1
   12598:	ldr	r6, [r3, r0]
   1259c:	str	r5, [sp]
   125a0:	ldr	r3, [r6]
   125a4:	str	r3, [sp, #4]
   125a8:	beq	125b8 <strspn@plt+0x1498>
   125ac:	ldrsb	r3, [r4]
   125b0:	cmp	r3, r5
   125b4:	bne	125e0 <strspn@plt+0x14c0>
   125b8:	bl	1100c <__errno_location@plt>
   125bc:	ldr	r3, [r0]
   125c0:	cmp	r3, #0
   125c4:	bne	12604 <strspn@plt+0x14e4>
   125c8:	ldr	r1, [pc, #144]	; 12660 <strspn@plt+0x1540>
   125cc:	mov	r2, r7
   125d0:	mov	r3, r4
   125d4:	mov	r0, #1
   125d8:	add	r1, pc, r1
   125dc:	bl	110a8 <errx@plt>
   125e0:	bl	1100c <__errno_location@plt>
   125e4:	mov	r1, sp
   125e8:	mov	r8, r0
   125ec:	str	r5, [r0]
   125f0:	mov	r0, r4
   125f4:	bl	11060 <strtod@plt>
   125f8:	ldr	r3, [r8]
   125fc:	cmp	r3, r5
   12600:	beq	1261c <strspn@plt+0x14fc>
   12604:	ldr	r1, [pc, #88]	; 12664 <strspn@plt+0x1544>
   12608:	mov	r2, r7
   1260c:	mov	r3, r4
   12610:	mov	r0, #1
   12614:	add	r1, pc, r1
   12618:	bl	10f40 <err@plt>
   1261c:	ldr	r3, [sp]
   12620:	cmp	r4, r3
   12624:	beq	125c8 <strspn@plt+0x14a8>
   12628:	cmp	r3, #0
   1262c:	beq	1263c <strspn@plt+0x151c>
   12630:	ldrsb	r3, [r3]
   12634:	cmp	r3, #0
   12638:	bne	125c8 <strspn@plt+0x14a8>
   1263c:	ldr	r2, [sp, #4]
   12640:	ldr	r3, [r6]
   12644:	cmp	r2, r3
   12648:	bne	12654 <strspn@plt+0x1534>
   1264c:	add	sp, sp, #8
   12650:	pop	{r4, r5, r6, r7, r8, pc}
   12654:	bl	10f1c <__stack_chk_fail@plt>
   12658:	andeq	r2, r1, r0, ror sl
   1265c:	strdeq	r0, [r0], -r4
   12660:	ldrdeq	r2, [r0], -r4
   12664:	muleq	r0, r8, r2
   12668:	ldr	r3, [pc, #220]	; 1274c <strspn@plt+0x162c>
   1266c:	push	{r4, r5, r6, r7, r8, lr}
   12670:	subs	r4, r0, #0
   12674:	ldr	r0, [pc, #212]	; 12750 <strspn@plt+0x1630>
   12678:	add	r3, pc, r3
   1267c:	sub	sp, sp, #8
   12680:	mov	r5, #0
   12684:	mov	r7, r1
   12688:	ldr	r6, [r3, r0]
   1268c:	str	r5, [sp]
   12690:	ldr	r3, [r6]
   12694:	str	r3, [sp, #4]
   12698:	beq	126a8 <strspn@plt+0x1588>
   1269c:	ldrsb	r3, [r4]
   126a0:	cmp	r3, r5
   126a4:	bne	126d0 <strspn@plt+0x15b0>
   126a8:	bl	1100c <__errno_location@plt>
   126ac:	ldr	r3, [r0]
   126b0:	cmp	r3, #0
   126b4:	bne	126f8 <strspn@plt+0x15d8>
   126b8:	ldr	r1, [pc, #148]	; 12754 <strspn@plt+0x1634>
   126bc:	mov	r2, r7
   126c0:	mov	r3, r4
   126c4:	mov	r0, #1
   126c8:	add	r1, pc, r1
   126cc:	bl	110a8 <errx@plt>
   126d0:	bl	1100c <__errno_location@plt>
   126d4:	mov	r1, sp
   126d8:	mov	r2, #10
   126dc:	mov	r8, r0
   126e0:	str	r5, [r0]
   126e4:	mov	r0, r4
   126e8:	bl	10ea4 <strtol@plt>
   126ec:	ldr	r3, [r8]
   126f0:	cmp	r3, r5
   126f4:	beq	12710 <strspn@plt+0x15f0>
   126f8:	ldr	r1, [pc, #88]	; 12758 <strspn@plt+0x1638>
   126fc:	mov	r2, r7
   12700:	mov	r3, r4
   12704:	mov	r0, #1
   12708:	add	r1, pc, r1
   1270c:	bl	10f40 <err@plt>
   12710:	ldr	r3, [sp]
   12714:	cmp	r4, r3
   12718:	beq	126b8 <strspn@plt+0x1598>
   1271c:	cmp	r3, #0
   12720:	beq	12730 <strspn@plt+0x1610>
   12724:	ldrsb	r3, [r3]
   12728:	cmp	r3, #0
   1272c:	bne	126b8 <strspn@plt+0x1598>
   12730:	ldr	r2, [sp, #4]
   12734:	ldr	r3, [r6]
   12738:	cmp	r2, r3
   1273c:	bne	12748 <strspn@plt+0x1628>
   12740:	add	sp, sp, #8
   12744:	pop	{r4, r5, r6, r7, r8, pc}
   12748:	bl	10f1c <__stack_chk_fail@plt>
   1274c:	andeq	r2, r1, r0, lsl #19
   12750:	strdeq	r0, [r0], -r4
   12754:	andeq	r2, r0, r4, ror #3
   12758:	andeq	r2, r0, r4, lsr #3
   1275c:	ldr	r3, [pc, #220]	; 12840 <strspn@plt+0x1720>
   12760:	push	{r4, r5, r6, r7, r8, lr}
   12764:	subs	r4, r0, #0
   12768:	ldr	r0, [pc, #212]	; 12844 <strspn@plt+0x1724>
   1276c:	add	r3, pc, r3
   12770:	sub	sp, sp, #8
   12774:	mov	r5, #0
   12778:	mov	r7, r1
   1277c:	ldr	r6, [r3, r0]
   12780:	str	r5, [sp]
   12784:	ldr	r3, [r6]
   12788:	str	r3, [sp, #4]
   1278c:	beq	1279c <strspn@plt+0x167c>
   12790:	ldrsb	r3, [r4]
   12794:	cmp	r3, r5
   12798:	bne	127c4 <strspn@plt+0x16a4>
   1279c:	bl	1100c <__errno_location@plt>
   127a0:	ldr	r3, [r0]
   127a4:	cmp	r3, #0
   127a8:	bne	127ec <strspn@plt+0x16cc>
   127ac:	ldr	r1, [pc, #148]	; 12848 <strspn@plt+0x1728>
   127b0:	mov	r2, r7
   127b4:	mov	r3, r4
   127b8:	mov	r0, #1
   127bc:	add	r1, pc, r1
   127c0:	bl	110a8 <errx@plt>
   127c4:	bl	1100c <__errno_location@plt>
   127c8:	mov	r1, sp
   127cc:	mov	r2, #10
   127d0:	mov	r8, r0
   127d4:	str	r5, [r0]
   127d8:	mov	r0, r4
   127dc:	bl	10fdc <strtoul@plt>
   127e0:	ldr	r3, [r8]
   127e4:	cmp	r3, r5
   127e8:	beq	12804 <strspn@plt+0x16e4>
   127ec:	ldr	r1, [pc, #88]	; 1284c <strspn@plt+0x172c>
   127f0:	mov	r2, r7
   127f4:	mov	r3, r4
   127f8:	mov	r0, #1
   127fc:	add	r1, pc, r1
   12800:	bl	10f40 <err@plt>
   12804:	ldr	r3, [sp]
   12808:	cmp	r4, r3
   1280c:	beq	127ac <strspn@plt+0x168c>
   12810:	cmp	r3, #0
   12814:	beq	12824 <strspn@plt+0x1704>
   12818:	ldrsb	r3, [r3]
   1281c:	cmp	r3, #0
   12820:	bne	127ac <strspn@plt+0x168c>
   12824:	ldr	r2, [sp, #4]
   12828:	ldr	r3, [r6]
   1282c:	cmp	r2, r3
   12830:	bne	1283c <strspn@plt+0x171c>
   12834:	add	sp, sp, #8
   12838:	pop	{r4, r5, r6, r7, r8, pc}
   1283c:	bl	10f1c <__stack_chk_fail@plt>
   12840:	andeq	r2, r1, ip, lsl #17
   12844:	strdeq	r0, [r0], -r4
   12848:	strdeq	r2, [r0], -r0
   1284c:	strheq	r2, [r0], -r0
   12850:	ldr	ip, [pc, #132]	; 128dc <strspn@plt+0x17bc>
   12854:	push	{r4, r5, r6, lr}
   12858:	add	ip, pc, ip
   1285c:	ldr	lr, [pc, #124]	; 128e0 <strspn@plt+0x17c0>
   12860:	sub	sp, sp, #16
   12864:	mov	r6, r1
   12868:	mov	r5, r0
   1286c:	mov	r1, sp
   12870:	ldr	r4, [ip, lr]
   12874:	ldr	ip, [r4]
   12878:	str	ip, [sp, #12]
   1287c:	bl	12244 <strspn@plt+0x1124>
   12880:	cmp	r0, #0
   12884:	bne	128a4 <strspn@plt+0x1784>
   12888:	ldr	r2, [sp, #12]
   1288c:	ldr	r3, [r4]
   12890:	ldrd	r0, [sp]
   12894:	cmp	r2, r3
   12898:	bne	128d8 <strspn@plt+0x17b8>
   1289c:	add	sp, sp, #16
   128a0:	pop	{r4, r5, r6, pc}
   128a4:	bl	1100c <__errno_location@plt>
   128a8:	mov	r2, r6
   128ac:	ldr	r3, [r0]
   128b0:	mov	r0, #1
   128b4:	cmp	r3, #0
   128b8:	mov	r3, r5
   128bc:	beq	128cc <strspn@plt+0x17ac>
   128c0:	ldr	r1, [pc, #28]	; 128e4 <strspn@plt+0x17c4>
   128c4:	add	r1, pc, r1
   128c8:	bl	10f40 <err@plt>
   128cc:	ldr	r1, [pc, #20]	; 128e8 <strspn@plt+0x17c8>
   128d0:	add	r1, pc, r1
   128d4:	bl	110a8 <errx@plt>
   128d8:	bl	10f1c <__stack_chk_fail@plt>
   128dc:	andeq	r2, r1, r0, lsr #15
   128e0:	strdeq	r0, [r0], -r4
   128e4:	andeq	r1, r0, r8, ror #31
   128e8:	ldrdeq	r1, [r0], -ip
   128ec:	push	{r4, lr}
   128f0:	mov	r4, r1
   128f4:	mov	r1, r2
   128f8:	bl	12578 <strspn@plt+0x1458>
   128fc:	vldr	d7, [pc, #28]	; 12920 <strspn@plt+0x1800>
   12900:	vcvt.s32.f64	s11, d0
   12904:	vcvt.f64.s32	d6, s11
   12908:	vstr	s11, [r4]
   1290c:	vsub.f64	d0, d0, d6
   12910:	vmul.f64	d0, d0, d7
   12914:	vcvt.s32.f64	s0, d0
   12918:	vstr	s0, [r4, #4]
   1291c:	pop	{r4, pc}
   12920:	andeq	r0, r0, r0
   12924:	smlawbmi	lr, r0, r4, r8
   12928:	and	r3, r0, #61440	; 0xf000
   1292c:	cmp	r3, #16384	; 0x4000
   12930:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   12934:	moveq	r3, #100	; 0x64
   12938:	beq	129b0 <strspn@plt+0x1890>
   1293c:	cmp	r3, #40960	; 0xa000
   12940:	moveq	r3, #108	; 0x6c
   12944:	beq	129b0 <strspn@plt+0x1890>
   12948:	cmp	r3, #8192	; 0x2000
   1294c:	moveq	r3, #99	; 0x63
   12950:	beq	129b0 <strspn@plt+0x1890>
   12954:	cmp	r3, #24576	; 0x6000
   12958:	moveq	r3, #98	; 0x62
   1295c:	beq	129b0 <strspn@plt+0x1890>
   12960:	cmp	r3, #49152	; 0xc000
   12964:	moveq	r3, #115	; 0x73
   12968:	beq	129b0 <strspn@plt+0x1890>
   1296c:	cmp	r3, #4096	; 0x1000
   12970:	moveq	r3, #112	; 0x70
   12974:	beq	129b0 <strspn@plt+0x1890>
   12978:	cmp	r3, #32768	; 0x8000
   1297c:	beq	129ac <strspn@plt+0x188c>
   12980:	mov	r4, #9
   12984:	mov	r3, #8
   12988:	mov	r6, #7
   1298c:	mov	r7, #6
   12990:	mov	r2, #5
   12994:	mov	r8, #4
   12998:	mov	r9, #3
   1299c:	mov	ip, #2
   129a0:	mov	sl, #1
   129a4:	mov	fp, #0
   129a8:	b	129dc <strspn@plt+0x18bc>
   129ac:	mov	r3, #45	; 0x2d
   129b0:	strb	r3, [r1]
   129b4:	mov	r4, #10
   129b8:	mov	r3, #9
   129bc:	mov	r6, #8
   129c0:	mov	r7, #7
   129c4:	mov	r2, #6
   129c8:	mov	r8, #5
   129cc:	mov	r9, #4
   129d0:	mov	ip, #3
   129d4:	mov	sl, #2
   129d8:	mov	fp, #1
   129dc:	tst	r0, #256	; 0x100
   129e0:	add	ip, r1, ip
   129e4:	moveq	r5, #45	; 0x2d
   129e8:	movne	r5, #114	; 0x72
   129ec:	tst	r0, #128	; 0x80
   129f0:	strb	r5, [r1, fp]
   129f4:	moveq	r5, #45	; 0x2d
   129f8:	movne	r5, #119	; 0x77
   129fc:	tst	r0, #2048	; 0x800
   12a00:	strb	r5, [r1, sl]
   12a04:	beq	12aa0 <strspn@plt+0x1980>
   12a08:	tst	r0, #64	; 0x40
   12a0c:	moveq	r5, #83	; 0x53
   12a10:	movne	r5, #115	; 0x73
   12a14:	tst	r0, #32
   12a18:	strb	r5, [ip]
   12a1c:	add	r2, r1, r2
   12a20:	moveq	ip, #45	; 0x2d
   12a24:	movne	ip, #114	; 0x72
   12a28:	tst	r0, #16
   12a2c:	strb	ip, [r1, r9]
   12a30:	moveq	ip, #45	; 0x2d
   12a34:	movne	ip, #119	; 0x77
   12a38:	tst	r0, #1024	; 0x400
   12a3c:	strb	ip, [r1, r8]
   12a40:	beq	12ac0 <strspn@plt+0x19a0>
   12a44:	tst	r0, #8
   12a48:	moveq	ip, #83	; 0x53
   12a4c:	movne	ip, #115	; 0x73
   12a50:	tst	r0, #4
   12a54:	strb	ip, [r2]
   12a58:	add	r3, r1, r3
   12a5c:	moveq	r2, #45	; 0x2d
   12a60:	movne	r2, #114	; 0x72
   12a64:	tst	r0, #2
   12a68:	strb	r2, [r1, r7]
   12a6c:	moveq	r2, #45	; 0x2d
   12a70:	movne	r2, #119	; 0x77
   12a74:	tst	r0, #512	; 0x200
   12a78:	strb	r2, [r1, r6]
   12a7c:	beq	12ab0 <strspn@plt+0x1990>
   12a80:	tst	r0, #1
   12a84:	moveq	r2, #84	; 0x54
   12a88:	movne	r2, #116	; 0x74
   12a8c:	strb	r2, [r3]
   12a90:	mov	r3, #0
   12a94:	strb	r3, [r1, r4]
   12a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   12a9c:	bx	lr
   12aa0:	tst	r0, #64	; 0x40
   12aa4:	moveq	r5, #45	; 0x2d
   12aa8:	movne	r5, #120	; 0x78
   12aac:	b	12a14 <strspn@plt+0x18f4>
   12ab0:	tst	r0, #1
   12ab4:	moveq	r2, #45	; 0x2d
   12ab8:	movne	r2, #120	; 0x78
   12abc:	b	12a8c <strspn@plt+0x196c>
   12ac0:	tst	r0, #8
   12ac4:	moveq	ip, #45	; 0x2d
   12ac8:	movne	ip, #120	; 0x78
   12acc:	b	12a50 <strspn@plt+0x1930>
   12ad0:	ldr	r1, [pc, #580]	; 12d1c <strspn@plt+0x1bfc>
   12ad4:	tst	r0, #2
   12ad8:	ldr	ip, [pc, #576]	; 12d20 <strspn@plt+0x1c00>
   12adc:	add	r1, pc, r1
   12ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ae4:	sub	sp, sp, #100	; 0x64
   12ae8:	ldr	r6, [r1, ip]
   12aec:	addeq	r7, sp, #52	; 0x34
   12af0:	addne	lr, sp, #53	; 0x35
   12af4:	addne	r7, sp, #52	; 0x34
   12af8:	moveq	lr, r7
   12afc:	mov	ip, #10
   12b00:	ldr	r1, [r6]
   12b04:	str	r1, [sp, #92]	; 0x5c
   12b08:	movne	r1, #32
   12b0c:	strbne	r1, [sp, #52]	; 0x34
   12b10:	mov	r1, #1
   12b14:	sub	r9, ip, #32
   12b18:	rsb	r8, ip, #32
   12b1c:	lsl	r5, r1, r9
   12b20:	lsl	r4, r1, ip
   12b24:	orr	r5, r5, r1, lsr r8
   12b28:	cmp	r3, r5
   12b2c:	cmpeq	r2, r4
   12b30:	bcc	12c9c <strspn@plt+0x1b7c>
   12b34:	add	ip, ip, #10
   12b38:	cmp	ip, #70	; 0x46
   12b3c:	bne	12b14 <strspn@plt+0x19f4>
   12b40:	mov	r1, #60	; 0x3c
   12b44:	movw	r5, #26215	; 0x6667
   12b48:	movt	r5, #26214	; 0x6666
   12b4c:	ldr	r8, [pc, #464]	; 12d24 <strspn@plt+0x1c04>
   12b50:	mov	fp, #1
   12b54:	smull	sl, r9, r5, r1
   12b58:	add	r8, pc, r8
   12b5c:	str	r8, [sp, #36]	; 0x24
   12b60:	sub	r8, r1, #32
   12b64:	asr	r4, r1, #31
   12b68:	lsl	r5, fp, r8
   12b6c:	str	r4, [sp, #44]	; 0x2c
   12b70:	lsl	r4, fp, r1
   12b74:	subs	r4, r4, #1
   12b78:	str	r9, [sp, #40]	; 0x28
   12b7c:	rsb	r9, r1, #32
   12b80:	ldr	sl, [sp, #40]	; 0x28
   12b84:	orr	r5, r5, fp, lsr r9
   12b88:	ldr	fp, [sp, #44]	; 0x2c
   12b8c:	sbc	r5, r5, #0
   12b90:	tst	r0, #1
   12b94:	lsr	r1, r2, r1
   12b98:	rsb	fp, fp, sl, asr #2
   12b9c:	ldr	sl, [sp, #36]	; 0x24
   12ba0:	orr	r1, r1, r3, lsl r9
   12ba4:	and	r5, r5, r3
   12ba8:	orr	r8, r1, r3, lsr r8
   12bac:	and	r4, r4, r2
   12bb0:	ldrb	r0, [sl, fp]
   12bb4:	add	r3, lr, #1
   12bb8:	strb	r0, [lr]
   12bbc:	bne	12c80 <strspn@plt+0x1b60>
   12bc0:	orrs	fp, r4, r5
   12bc4:	mov	r2, #0
   12bc8:	strb	r2, [r3]
   12bcc:	beq	12cb4 <strspn@plt+0x1b94>
   12bd0:	sub	lr, ip, #20
   12bd4:	sub	ip, ip, #52	; 0x34
   12bd8:	rsb	r3, lr, #32
   12bdc:	lsr	r0, r4, lr
   12be0:	orr	r0, r0, r5, lsl r3
   12be4:	lsr	r1, r5, lr
   12be8:	orr	r0, r0, r5, lsr ip
   12bec:	mov	r2, #100	; 0x64
   12bf0:	adds	r0, r0, #50	; 0x32
   12bf4:	mov	r3, #0
   12bf8:	adc	r1, r1, #0
   12bfc:	bl	136d4 <strspn@plt+0x25b4>
   12c00:	mov	r4, r0
   12c04:	mov	r5, r1
   12c08:	cmp	r5, #0
   12c0c:	cmpeq	r4, #10
   12c10:	addeq	r8, r8, #1
   12c14:	beq	12cb4 <strspn@plt+0x1b94>
   12c18:	orrs	r2, r4, r5
   12c1c:	beq	12cb4 <strspn@plt+0x1b94>
   12c20:	bl	110c0 <localeconv@plt>
   12c24:	cmp	r0, #0
   12c28:	beq	12d00 <strspn@plt+0x1be0>
   12c2c:	ldr	r3, [r0]
   12c30:	cmp	r3, #0
   12c34:	beq	12d10 <strspn@plt+0x1bf0>
   12c38:	ldrsb	r2, [r3]
   12c3c:	cmp	r2, #0
   12c40:	ldreq	r3, [pc, #224]	; 12d28 <strspn@plt+0x1c08>
   12c44:	addeq	r3, pc, r3
   12c48:	add	r9, sp, #60	; 0x3c
   12c4c:	ldr	ip, [pc, #216]	; 12d2c <strspn@plt+0x1c0c>
   12c50:	mov	r1, #32
   12c54:	str	r3, [sp, #8]
   12c58:	add	ip, pc, ip
   12c5c:	str	r8, [sp, #4]
   12c60:	mov	r0, r9
   12c64:	strd	r4, [sp, #16]
   12c68:	mov	r3, r1
   12c6c:	str	r7, [sp, #24]
   12c70:	mov	r2, #1
   12c74:	str	ip, [sp]
   12c78:	bl	11114 <__snprintf_chk@plt>
   12c7c:	b	12ce0 <strspn@plt+0x1bc0>
   12c80:	cmp	r0, #66	; 0x42
   12c84:	addne	r3, lr, #3
   12c88:	movne	r1, #105	; 0x69
   12c8c:	movne	r2, #66	; 0x42
   12c90:	strbne	r1, [lr, #1]
   12c94:	strbne	r2, [lr, #2]
   12c98:	b	12bc0 <strspn@plt+0x1aa0>
   12c9c:	subs	r1, ip, #10
   12ca0:	strbeq	r1, [lr, #1]
   12ca4:	moveq	r3, #66	; 0x42
   12ca8:	moveq	r8, r2
   12cac:	strbeq	r3, [lr]
   12cb0:	bne	12b44 <strspn@plt+0x1a24>
   12cb4:	ldr	r3, [pc, #116]	; 12d30 <strspn@plt+0x1c10>
   12cb8:	add	r9, sp, #60	; 0x3c
   12cbc:	mov	r1, #32
   12cc0:	str	r8, [sp, #4]
   12cc4:	add	r3, pc, r3
   12cc8:	str	r7, [sp, #8]
   12ccc:	str	r3, [sp]
   12cd0:	mov	r0, r9
   12cd4:	mov	r3, r1
   12cd8:	mov	r2, #1
   12cdc:	bl	11114 <__snprintf_chk@plt>
   12ce0:	mov	r0, r9
   12ce4:	bl	11030 <__strdup@plt>
   12ce8:	ldr	r2, [sp, #92]	; 0x5c
   12cec:	ldr	r3, [r6]
   12cf0:	cmp	r2, r3
   12cf4:	bne	12d0c <strspn@plt+0x1bec>
   12cf8:	add	sp, sp, #100	; 0x64
   12cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d00:	ldr	r3, [pc, #44]	; 12d34 <strspn@plt+0x1c14>
   12d04:	add	r3, pc, r3
   12d08:	b	12c48 <strspn@plt+0x1b28>
   12d0c:	bl	10f1c <__stack_chk_fail@plt>
   12d10:	ldr	r3, [pc, #32]	; 12d38 <strspn@plt+0x1c18>
   12d14:	add	r3, pc, r3
   12d18:	b	12c48 <strspn@plt+0x1b28>
   12d1c:	andeq	r2, r1, ip, lsl r5
   12d20:	strdeq	r0, [r0], -r4
   12d24:	andeq	r1, r0, ip, ror sp
   12d28:	andeq	r1, r0, ip, lsl #25
   12d2c:	andeq	r1, r0, r4, lsl #25
   12d30:	andeq	r1, r0, r4, lsr #24
   12d34:	andeq	r1, r0, ip, asr #23
   12d38:			; <UNDEFINED> instruction: 0x00001bbc
   12d3c:	cmp	r0, #0
   12d40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d44:	mov	r8, r1
   12d48:	mov	sl, r2
   12d4c:	mov	r9, r3
   12d50:	beq	12e0c <strspn@plt+0x1cec>
   12d54:	ldrb	r5, [r0]
   12d58:	cmp	r5, #0
   12d5c:	beq	12e0c <strspn@plt+0x1cec>
   12d60:	cmp	r2, #0
   12d64:	cmpne	r1, #0
   12d68:	movne	ip, #0
   12d6c:	moveq	ip, #1
   12d70:	beq	12e0c <strspn@plt+0x1cec>
   12d74:	cmp	r3, #0
   12d78:	movne	r4, r0
   12d7c:	movne	r6, ip
   12d80:	bne	12d94 <strspn@plt+0x1c74>
   12d84:	b	12e0c <strspn@plt+0x1cec>
   12d88:	ldrb	r5, [r4, #1]!
   12d8c:	cmp	r5, #0
   12d90:	beq	12e04 <strspn@plt+0x1ce4>
   12d94:	cmp	sl, r6
   12d98:	bls	12e14 <strspn@plt+0x1cf4>
   12d9c:	cmp	ip, #0
   12da0:	ldrsb	r7, [r4, #1]
   12da4:	moveq	ip, r4
   12da8:	cmp	r5, #44	; 0x2c
   12dac:	mov	r0, ip
   12db0:	moveq	r5, r4
   12db4:	movne	r5, #0
   12db8:	cmp	r7, #0
   12dbc:	addeq	r5, r4, #1
   12dc0:	cmp	r5, #0
   12dc4:	rsb	r1, ip, r5
   12dc8:	beq	12dfc <strspn@plt+0x1cdc>
   12dcc:	cmp	ip, r5
   12dd0:	bcs	12e0c <strspn@plt+0x1cec>
   12dd4:	blx	r9
   12dd8:	mov	ip, #0
   12ddc:	add	r3, r6, #1
   12de0:	cmn	r0, #1
   12de4:	beq	12e0c <strspn@plt+0x1cec>
   12de8:	str	r0, [r8, r6, lsl #2]
   12dec:	mov	r6, r3
   12df0:	ldrsb	r2, [r5]
   12df4:	cmp	r2, ip
   12df8:	beq	12e1c <strspn@plt+0x1cfc>
   12dfc:	cmn	r4, #1
   12e00:	bne	12d88 <strspn@plt+0x1c68>
   12e04:	mov	r0, r6
   12e08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e0c:	mvn	r0, #0
   12e10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e14:	mvn	r0, #1
   12e18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e1c:	mov	r6, r3
   12e20:	b	12e04 <strspn@plt+0x1ce4>
   12e24:	cmp	r0, #0
   12e28:	push	{r4, lr}
   12e2c:	mov	r4, r3
   12e30:	beq	12ea8 <strspn@plt+0x1d88>
   12e34:	ldrb	ip, [r0]
   12e38:	cmp	ip, #0
   12e3c:	beq	12ea8 <strspn@plt+0x1d88>
   12e40:	cmp	r3, #0
   12e44:	beq	12ea8 <strspn@plt+0x1d88>
   12e48:	ldr	r3, [r3]
   12e4c:	cmp	r3, #0
   12e50:	blt	12ea8 <strspn@plt+0x1d88>
   12e54:	cmp	r3, r2
   12e58:	bhi	12ea8 <strspn@plt+0x1d88>
   12e5c:	cmp	ip, #43	; 0x2b
   12e60:	lsleq	ip, r3, #2
   12e64:	addeq	r0, r0, #1
   12e68:	movne	ip, #0
   12e6c:	strne	ip, [r4]
   12e70:	movne	r3, ip
   12e74:	add	r1, r1, ip
   12e78:	rsb	r2, r3, r2
   12e7c:	ldr	r3, [sp, #8]
   12e80:	bl	12d3c <strspn@plt+0x1c1c>
   12e84:	subs	r3, r0, #0
   12e88:	ble	12ea0 <strspn@plt+0x1d80>
   12e8c:	ldr	r2, [r4]
   12e90:	mov	r0, r3
   12e94:	add	r3, r2, r3
   12e98:	str	r3, [r4]
   12e9c:	pop	{r4, pc}
   12ea0:	mov	r0, r3
   12ea4:	pop	{r4, pc}
   12ea8:	mvn	r0, #0
   12eac:	pop	{r4, pc}
   12eb0:	cmp	r2, #0
   12eb4:	cmpne	r0, #0
   12eb8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   12ebc:	mov	r4, r0
   12ec0:	mov	r7, r2
   12ec4:	movne	r3, #0
   12ec8:	moveq	r3, #1
   12ecc:	mov	r9, r1
   12ed0:	beq	12f6c <strspn@plt+0x1e4c>
   12ed4:	cmp	r1, #0
   12ed8:	beq	12f6c <strspn@plt+0x1e4c>
   12edc:	mov	r6, r0
   12ee0:	mov	r8, #1
   12ee4:	ldrb	r5, [r6], #1
   12ee8:	cmp	r5, #0
   12eec:	beq	12f5c <strspn@plt+0x1e3c>
   12ef0:	cmp	r5, #44	; 0x2c
   12ef4:	ldrsb	r0, [r4, #1]
   12ef8:	moveq	r5, r4
   12efc:	movne	r5, #0
   12f00:	cmp	r3, #0
   12f04:	moveq	r3, r4
   12f08:	cmp	r0, #0
   12f0c:	mov	r0, r3
   12f10:	moveq	r5, r6
   12f14:	cmp	r5, #0
   12f18:	rsb	r1, r3, r5
   12f1c:	beq	12f54 <strspn@plt+0x1e34>
   12f20:	cmp	r3, r5
   12f24:	bcs	12f64 <strspn@plt+0x1e44>
   12f28:	blx	r7
   12f2c:	mov	r3, #0
   12f30:	cmp	r0, #0
   12f34:	and	r2, r0, #7
   12f38:	poplt	{r3, r4, r5, r6, r7, r8, r9, pc}
   12f3c:	ldrb	r1, [r9, r0, asr #3]
   12f40:	orr	r2, r1, r8, lsl r2
   12f44:	strb	r2, [r9, r0, asr #3]
   12f48:	ldrsb	r2, [r5]
   12f4c:	cmp	r2, r3
   12f50:	beq	12f5c <strspn@plt+0x1e3c>
   12f54:	adds	r4, r4, #1
   12f58:	bne	12ee4 <strspn@plt+0x1dc4>
   12f5c:	mov	r0, #0
   12f60:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12f64:	mvn	r0, #0
   12f68:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12f6c:	mvn	r0, #21
   12f70:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12f74:	cmp	r2, #0
   12f78:	cmpne	r0, #0
   12f7c:	push	{r4, r5, r6, r7, r8, lr}
   12f80:	movne	r3, #0
   12f84:	moveq	r3, #1
   12f88:	mov	r4, r0
   12f8c:	mov	r8, r2
   12f90:	mov	r7, r1
   12f94:	beq	13028 <strspn@plt+0x1f08>
   12f98:	cmp	r1, #0
   12f9c:	beq	13028 <strspn@plt+0x1f08>
   12fa0:	mov	r6, r0
   12fa4:	ldrb	r5, [r6], #1
   12fa8:	cmp	r5, #0
   12fac:	beq	13018 <strspn@plt+0x1ef8>
   12fb0:	cmp	r5, #44	; 0x2c
   12fb4:	ldrsb	r0, [r4, #1]
   12fb8:	moveq	r5, r4
   12fbc:	movne	r5, #0
   12fc0:	cmp	r3, #0
   12fc4:	moveq	r3, r4
   12fc8:	cmp	r0, #0
   12fcc:	mov	r0, r3
   12fd0:	moveq	r5, r6
   12fd4:	cmp	r5, #0
   12fd8:	rsb	r1, r3, r5
   12fdc:	beq	13010 <strspn@plt+0x1ef0>
   12fe0:	cmp	r3, r5
   12fe4:	bcs	13020 <strspn@plt+0x1f00>
   12fe8:	blx	r8
   12fec:	mov	r3, #0
   12ff0:	cmp	r0, #0
   12ff4:	poplt	{r4, r5, r6, r7, r8, pc}
   12ff8:	ldr	r2, [r7]
   12ffc:	orr	r0, r2, r0
   13000:	str	r0, [r7]
   13004:	ldrsb	r2, [r5]
   13008:	cmp	r2, r3
   1300c:	beq	13018 <strspn@plt+0x1ef8>
   13010:	adds	r4, r4, #1
   13014:	bne	12fa4 <strspn@plt+0x1e84>
   13018:	mov	r0, #0
   1301c:	pop	{r4, r5, r6, r7, r8, pc}
   13020:	mvn	r0, #0
   13024:	pop	{r4, r5, r6, r7, r8, pc}
   13028:	mvn	r0, #21
   1302c:	pop	{r4, r5, r6, r7, r8, pc}
   13030:	ldr	ip, [pc, #380]	; 131b4 <strspn@plt+0x2094>
   13034:	push	{r4, r5, r6, r7, r8, r9, lr}
   13038:	subs	r4, r0, #0
   1303c:	ldr	r0, [pc, #372]	; 131b8 <strspn@plt+0x2098>
   13040:	add	ip, pc, ip
   13044:	mov	r6, r2
   13048:	sub	sp, sp, #12
   1304c:	mov	r2, ip
   13050:	mov	r8, #0
   13054:	ldr	r7, [ip, r0]
   13058:	mov	r9, r1
   1305c:	str	r8, [sp]
   13060:	ldr	r2, [r7]
   13064:	str	r2, [sp, #4]
   13068:	beq	130d8 <strspn@plt+0x1fb8>
   1306c:	str	r3, [r1]
   13070:	str	r3, [r6]
   13074:	bl	1100c <__errno_location@plt>
   13078:	str	r8, [r0]
   1307c:	mov	r5, r0
   13080:	ldrsb	r3, [r4]
   13084:	cmp	r3, #58	; 0x3a
   13088:	beq	130f4 <strspn@plt+0x1fd4>
   1308c:	mov	r0, r4
   13090:	mov	r2, #10
   13094:	mov	r1, sp
   13098:	bl	10ea4 <strtol@plt>
   1309c:	str	r0, [r9]
   130a0:	str	r0, [r6]
   130a4:	ldr	r0, [r5]
   130a8:	cmp	r0, #0
   130ac:	bne	131a8 <strspn@plt+0x2088>
   130b0:	ldr	r3, [sp]
   130b4:	cmp	r3, #0
   130b8:	beq	131a8 <strspn@plt+0x2088>
   130bc:	cmp	r4, r3
   130c0:	beq	131a8 <strspn@plt+0x2088>
   130c4:	ldrsb	r2, [r3]
   130c8:	cmp	r2, #58	; 0x3a
   130cc:	beq	13140 <strspn@plt+0x2020>
   130d0:	cmp	r2, #45	; 0x2d
   130d4:	beq	13150 <strspn@plt+0x2030>
   130d8:	mov	r0, #0
   130dc:	ldr	r2, [sp, #4]
   130e0:	ldr	r3, [r7]
   130e4:	cmp	r2, r3
   130e8:	bne	131b0 <strspn@plt+0x2090>
   130ec:	add	sp, sp, #12
   130f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   130f4:	add	r4, r4, #1
   130f8:	mov	r1, sp
   130fc:	mov	r2, #10
   13100:	mov	r0, r4
   13104:	bl	10ea4 <strtol@plt>
   13108:	str	r0, [r6]
   1310c:	ldr	r3, [r5]
   13110:	cmp	r3, #0
   13114:	bne	131a8 <strspn@plt+0x2088>
   13118:	ldr	r3, [sp]
   1311c:	cmp	r3, #0
   13120:	beq	131a8 <strspn@plt+0x2088>
   13124:	ldrsb	r2, [r3]
   13128:	cmp	r2, #0
   1312c:	bne	131a8 <strspn@plt+0x2088>
   13130:	cmp	r4, r3
   13134:	movne	r0, #0
   13138:	mvneq	r0, #0
   1313c:	b	130dc <strspn@plt+0x1fbc>
   13140:	ldrsb	r2, [r3, #1]
   13144:	cmp	r2, #0
   13148:	streq	r0, [r6]
   1314c:	beq	130dc <strspn@plt+0x1fbc>
   13150:	add	r4, r3, #1
   13154:	mov	ip, #0
   13158:	mov	r1, sp
   1315c:	mov	r2, #10
   13160:	mov	r0, r4
   13164:	str	ip, [r5]
   13168:	str	ip, [sp]
   1316c:	bl	10ea4 <strtol@plt>
   13170:	str	r0, [r6]
   13174:	ldr	r3, [r5]
   13178:	cmp	r3, #0
   1317c:	bne	131a8 <strspn@plt+0x2088>
   13180:	ldr	r2, [sp]
   13184:	cmp	r2, #0
   13188:	beq	131a8 <strspn@plt+0x2088>
   1318c:	ldrsb	r3, [r2]
   13190:	cmp	r3, #0
   13194:	bne	131a8 <strspn@plt+0x2088>
   13198:	cmp	r4, r2
   1319c:	movne	r0, #0
   131a0:	mvneq	r0, #0
   131a4:	b	130dc <strspn@plt+0x1fbc>
   131a8:	mvn	r0, #0
   131ac:	b	130dc <strspn@plt+0x1fbc>
   131b0:	bl	10f1c <__stack_chk_fail@plt>
   131b4:			; <UNDEFINED> instruction: 0x00011fb8
   131b8:	strdeq	r0, [r0], -r4
   131bc:	rsbs	r2, r0, #1
   131c0:	push	{r4, r5, r6, lr}
   131c4:	movcc	r2, #0
   131c8:	rsbs	r3, r1, #1
   131cc:	mov	r5, r0
   131d0:	mov	r4, r1
   131d4:	movcc	r3, #0
   131d8:	ands	ip, r2, r3
   131dc:	bne	13248 <strspn@plt+0x2128>
   131e0:	orrs	r3, r2, r3
   131e4:	bne	13250 <strspn@plt+0x2130>
   131e8:	bl	10e98 <strcmp@plt>
   131ec:	cmp	r0, #0
   131f0:	beq	13248 <strspn@plt+0x2128>
   131f4:	mov	r0, r5
   131f8:	bl	10fe8 <strlen@plt>
   131fc:	mov	r6, r0
   13200:	mov	r0, r4
   13204:	bl	10fe8 <strlen@plt>
   13208:	cmp	r6, #0
   1320c:	beq	13220 <strspn@plt+0x2100>
   13210:	sub	r3, r6, #1
   13214:	ldrsb	r2, [r5, r3]
   13218:	cmp	r2, #47	; 0x2f
   1321c:	moveq	r6, r3
   13220:	cmp	r0, #0
   13224:	beq	13238 <strspn@plt+0x2118>
   13228:	sub	r3, r0, #1
   1322c:	ldrsb	r2, [r4, r3]
   13230:	cmp	r2, #47	; 0x2f
   13234:	moveq	r0, r3
   13238:	cmp	r6, r0
   1323c:	beq	13258 <strspn@plt+0x2138>
   13240:	mov	r0, #0
   13244:	pop	{r4, r5, r6, pc}
   13248:	mov	r0, #1
   1324c:	pop	{r4, r5, r6, pc}
   13250:	mov	r0, ip
   13254:	pop	{r4, r5, r6, pc}
   13258:	mov	r0, r5
   1325c:	mov	r1, r4
   13260:	mov	r2, r6
   13264:	bl	110f0 <strncmp@plt>
   13268:	rsbs	r0, r0, #1
   1326c:	movcc	r0, #0
   13270:	pop	{r4, r5, r6, pc}
   13274:	ldr	r3, [pc, #248]	; 13374 <strspn@plt+0x2254>
   13278:	cmp	r0, #0
   1327c:	cmpne	r1, #0
   13280:	ldr	r2, [pc, #240]	; 13378 <strspn@plt+0x2258>
   13284:	add	r3, pc, r3
   13288:	push	{r4, r5, r6, r7, r8, r9, lr}
   1328c:	sub	sp, sp, #20
   13290:	ldr	r9, [r3, r2]
   13294:	mov	r6, r1
   13298:	addne	r8, sp, #4
   1329c:	addne	r7, sp, #8
   132a0:	ldr	r3, [r9]
   132a4:	str	r3, [sp, #12]
   132a8:	bne	132f0 <strspn@plt+0x21d0>
   132ac:	b	13368 <strspn@plt+0x2248>
   132b0:	cmp	r4, r3
   132b4:	bne	13368 <strspn@plt+0x2248>
   132b8:	mov	r0, r5
   132bc:	mov	r1, r6
   132c0:	mov	r2, r4
   132c4:	bl	110f0 <strncmp@plt>
   132c8:	cmp	r0, #0
   132cc:	bne	13368 <strspn@plt+0x2248>
   132d0:	adds	r6, r6, r4
   132d4:	moveq	r3, #0
   132d8:	movne	r3, #1
   132dc:	adds	r0, r5, r4
   132e0:	moveq	r3, #0
   132e4:	andne	r3, r3, #1
   132e8:	cmp	r3, #0
   132ec:	beq	13368 <strspn@plt+0x2248>
   132f0:	mov	r1, r8
   132f4:	bl	11db0 <strspn@plt+0xc90>
   132f8:	mov	r1, r7
   132fc:	mov	r5, r0
   13300:	mov	r0, r6
   13304:	bl	11db0 <strspn@plt+0xc90>
   13308:	ldr	r4, [sp, #4]
   1330c:	ldr	r3, [sp, #8]
   13310:	mov	r6, r0
   13314:	adds	r0, r3, r4
   13318:	beq	1334c <strspn@plt+0x222c>
   1331c:	cmp	r0, #1
   13320:	bne	132b0 <strspn@plt+0x2190>
   13324:	cmp	r5, #0
   13328:	beq	13338 <strspn@plt+0x2218>
   1332c:	ldrsb	r2, [r5]
   13330:	cmp	r2, #47	; 0x2f
   13334:	beq	13350 <strspn@plt+0x2230>
   13338:	cmp	r6, #0
   1333c:	beq	132b0 <strspn@plt+0x2190>
   13340:	ldrsb	r2, [r6]
   13344:	cmp	r2, #47	; 0x2f
   13348:	bne	132b0 <strspn@plt+0x2190>
   1334c:	mov	r0, #1
   13350:	ldr	r2, [sp, #12]
   13354:	ldr	r3, [r9]
   13358:	cmp	r2, r3
   1335c:	bne	13370 <strspn@plt+0x2250>
   13360:	add	sp, sp, #20
   13364:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13368:	mov	r0, #0
   1336c:	b	13350 <strspn@plt+0x2230>
   13370:	bl	10f1c <__stack_chk_fail@plt>
   13374:	andeq	r1, r1, r4, ror sp
   13378:	strdeq	r0, [r0], -r4
   1337c:	rsbs	r3, r0, #1
   13380:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13384:	movcc	r3, #0
   13388:	rsbs	r4, r1, #1
   1338c:	mov	r7, r1
   13390:	mov	r6, r2
   13394:	mov	sl, r0
   13398:	movcc	r4, #0
   1339c:	tst	r3, r4
   133a0:	bne	13404 <strspn@plt+0x22e4>
   133a4:	cmp	r3, #0
   133a8:	bne	1341c <strspn@plt+0x22fc>
   133ac:	cmp	r4, #0
   133b0:	bne	1342c <strspn@plt+0x230c>
   133b4:	bl	10fe8 <strlen@plt>
   133b8:	mvn	r3, r0
   133bc:	cmp	r6, r3
   133c0:	mov	r5, r0
   133c4:	bhi	13414 <strspn@plt+0x22f4>
   133c8:	add	r9, r0, r6
   133cc:	add	r0, r9, #1
   133d0:	bl	10f88 <malloc@plt>
   133d4:	subs	r8, r0, #0
   133d8:	beq	13434 <strspn@plt+0x2314>
   133dc:	mov	r1, sl
   133e0:	mov	r2, r5
   133e4:	bl	10ee0 <memcpy@plt>
   133e8:	add	r0, r8, r5
   133ec:	mov	r1, r7
   133f0:	mov	r2, r6
   133f4:	bl	10ee0 <memcpy@plt>
   133f8:	strb	r4, [r8, r9]
   133fc:	mov	r0, r8
   13400:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13404:	mov	r0, #1
   13408:	mov	r1, r0
   1340c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13410:	b	10e74 <calloc@plt>
   13414:	mov	r0, r4
   13418:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1341c:	mov	r0, r1
   13420:	mov	r1, r2
   13424:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13428:	b	10f34 <__strndup@plt>
   1342c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13430:	b	11030 <__strdup@plt>
   13434:	mov	r0, r8
   13438:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1343c:	push	{r3, r4, r5, lr}
   13440:	subs	r4, r1, #0
   13444:	mov	r5, r0
   13448:	beq	13468 <strspn@plt+0x2348>
   1344c:	mov	r0, r4
   13450:	bl	10fe8 <strlen@plt>
   13454:	mov	r1, r4
   13458:	mov	r2, r0
   1345c:	mov	r0, r5
   13460:	pop	{r3, r4, r5, lr}
   13464:	b	1337c <strspn@plt+0x225c>
   13468:	mov	r2, r4
   1346c:	mov	r0, r5
   13470:	mov	r1, r4
   13474:	pop	{r3, r4, r5, lr}
   13478:	b	1337c <strspn@plt+0x225c>
   1347c:	push	{r1, r2, r3}
   13480:	mov	r1, #1
   13484:	push	{r4, r5, lr}
   13488:	sub	sp, sp, #16
   1348c:	ldr	lr, [pc, #124]	; 13510 <strspn@plt+0x23f0>
   13490:	add	ip, sp, #32
   13494:	ldr	r4, [pc, #120]	; 13514 <strspn@plt+0x23f4>
   13498:	mov	r5, r0
   1349c:	add	lr, pc, lr
   134a0:	mov	r3, ip
   134a4:	ldr	r2, [sp, #28]
   134a8:	add	r0, sp, #8
   134ac:	ldr	r4, [lr, r4]
   134b0:	str	ip, [sp, #4]
   134b4:	ldr	ip, [r4]
   134b8:	str	ip, [sp, #12]
   134bc:	bl	11024 <__vasprintf_chk@plt>
   134c0:	subs	r2, r0, #0
   134c4:	blt	13504 <strspn@plt+0x23e4>
   134c8:	mov	r0, r5
   134cc:	ldr	r1, [sp, #8]
   134d0:	bl	1337c <strspn@plt+0x225c>
   134d4:	mov	r5, r0
   134d8:	ldr	r0, [sp, #8]
   134dc:	bl	10ebc <free@plt>
   134e0:	mov	r0, r5
   134e4:	ldr	r2, [sp, #12]
   134e8:	ldr	r3, [r4]
   134ec:	cmp	r2, r3
   134f0:	bne	1350c <strspn@plt+0x23ec>
   134f4:	add	sp, sp, #16
   134f8:	pop	{r4, r5, lr}
   134fc:	add	sp, sp, #12
   13500:	bx	lr
   13504:	mov	r0, #0
   13508:	b	134e4 <strspn@plt+0x23c4>
   1350c:	bl	10f1c <__stack_chk_fail@plt>
   13510:	andeq	r1, r1, ip, asr fp
   13514:	strdeq	r0, [r0], -r4
   13518:	ldr	ip, [pc, #372]	; 13694 <strspn@plt+0x2574>
   1351c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13520:	mov	r6, r0
   13524:	ldr	r0, [pc, #364]	; 13698 <strspn@plt+0x2578>
   13528:	add	ip, pc, ip
   1352c:	ldr	r4, [r6]
   13530:	mov	r9, r3
   13534:	sub	sp, sp, #12
   13538:	mov	r7, r1
   1353c:	ldr	r5, [ip, r0]
   13540:	mov	r8, r2
   13544:	ldrsb	ip, [r4]
   13548:	ldr	r3, [r5]
   1354c:	cmp	ip, #0
   13550:	moveq	r0, ip
   13554:	str	r3, [sp, #4]
   13558:	beq	13608 <strspn@plt+0x24e8>
   1355c:	mov	r0, r4
   13560:	mov	r1, r2
   13564:	bl	11120 <strspn@plt>
   13568:	ldrb	sl, [r4, r0]
   1356c:	add	r4, r4, r0
   13570:	cmp	sl, #0
   13574:	beq	13684 <strspn@plt+0x2564>
   13578:	cmp	r9, #0
   1357c:	beq	13620 <strspn@plt+0x2500>
   13580:	sxtb	r9, sl
   13584:	ldr	r0, [pc, #272]	; 1369c <strspn@plt+0x257c>
   13588:	mov	r1, r9
   1358c:	add	r0, pc, r0
   13590:	bl	10ff4 <strchr@plt>
   13594:	cmp	r0, #0
   13598:	beq	13644 <strspn@plt+0x2524>
   1359c:	add	fp, r4, #1
   135a0:	mov	r1, sp
   135a4:	mov	r3, #0
   135a8:	strb	sl, [sp]
   135ac:	mov	r0, fp
   135b0:	strb	r3, [sp, #1]
   135b4:	bl	11e50 <strspn@plt+0xd30>
   135b8:	add	r3, r4, r0
   135bc:	str	r0, [r7]
   135c0:	ldrb	r3, [r3, #1]
   135c4:	cmp	r3, #0
   135c8:	beq	13684 <strspn@plt+0x2564>
   135cc:	sxtb	r3, r3
   135d0:	cmp	r9, r3
   135d4:	bne	13684 <strspn@plt+0x2564>
   135d8:	add	r0, r0, #2
   135dc:	add	r7, r4, r0
   135e0:	ldrb	r1, [r4, r0]
   135e4:	cmp	r1, #0
   135e8:	beq	13600 <strspn@plt+0x24e0>
   135ec:	mov	r0, r8
   135f0:	sxtb	r1, r1
   135f4:	bl	10ff4 <strchr@plt>
   135f8:	cmp	r0, #0
   135fc:	beq	13684 <strspn@plt+0x2564>
   13600:	mov	r0, fp
   13604:	str	r7, [r6]
   13608:	ldr	r2, [sp, #4]
   1360c:	ldr	r3, [r5]
   13610:	cmp	r2, r3
   13614:	bne	13690 <strspn@plt+0x2570>
   13618:	add	sp, sp, #12
   1361c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13620:	mov	r0, r4
   13624:	mov	r1, r8
   13628:	bl	10eb0 <strcspn@plt>
   1362c:	mov	r3, r0
   13630:	mov	r0, r4
   13634:	add	r4, r4, r3
   13638:	str	r3, [r7]
   1363c:	str	r4, [r6]
   13640:	b	13608 <strspn@plt+0x24e8>
   13644:	mov	r1, r8
   13648:	mov	r0, r4
   1364c:	bl	11e50 <strspn@plt+0xd30>
   13650:	str	r0, [r7]
   13654:	add	r7, r4, r0
   13658:	ldrb	r1, [r4, r0]
   1365c:	cmp	r1, #0
   13660:	beq	13678 <strspn@plt+0x2558>
   13664:	mov	r0, r8
   13668:	sxtb	r1, r1
   1366c:	bl	10ff4 <strchr@plt>
   13670:	cmp	r0, #0
   13674:	beq	1363c <strspn@plt+0x251c>
   13678:	str	r7, [r6]
   1367c:	mov	r0, r4
   13680:	b	13608 <strspn@plt+0x24e8>
   13684:	str	r4, [r6]
   13688:	mov	r0, #0
   1368c:	b	13608 <strspn@plt+0x24e8>
   13690:	bl	10f1c <__stack_chk_fail@plt>
   13694:	ldrdeq	r1, [r1], -r0
   13698:	strdeq	r0, [r0], -r4
   1369c:	andeq	r1, r0, r4, ror #6
   136a0:	push	{r4, lr}
   136a4:	mov	r4, r0
   136a8:	b	136b4 <strspn@plt+0x2594>
   136ac:	cmp	r0, #10
   136b0:	beq	136cc <strspn@plt+0x25ac>
   136b4:	mov	r0, r4
   136b8:	bl	11048 <fgetc@plt>
   136bc:	cmn	r0, #1
   136c0:	bne	136ac <strspn@plt+0x258c>
   136c4:	mov	r0, #1
   136c8:	pop	{r4, pc}
   136cc:	mov	r0, #0
   136d0:	pop	{r4, pc}
   136d4:	cmp	r3, #0
   136d8:	cmpeq	r2, #0
   136dc:	bne	136f4 <strspn@plt+0x25d4>
   136e0:	cmp	r1, #0
   136e4:	cmpeq	r0, #0
   136e8:	mvnne	r1, #0
   136ec:	mvnne	r0, #0
   136f0:	b	13710 <strspn@plt+0x25f0>
   136f4:	sub	sp, sp, #8
   136f8:	push	{sp, lr}
   136fc:	bl	1375c <strspn@plt+0x263c>
   13700:	ldr	lr, [sp, #4]
   13704:	add	sp, sp, #8
   13708:	pop	{r2, r3}
   1370c:	bx	lr
   13710:	push	{r1, lr}
   13714:	mov	r0, #8
   13718:	bl	10e80 <raise@plt>
   1371c:	pop	{r1, pc}
   13720:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13724:	mov	r8, r2
   13728:	mov	r6, r0
   1372c:	mov	r7, r1
   13730:	mov	sl, r3
   13734:	ldr	r9, [sp, #32]
   13738:	bl	13798 <strspn@plt+0x2678>
   1373c:	umull	r4, r5, r8, r0
   13740:	mul	r8, r8, r1
   13744:	mla	r2, r0, sl, r8
   13748:	add	r5, r2, r5
   1374c:	subs	r4, r6, r4
   13750:	sbc	r5, r7, r5
   13754:	strd	r4, [r9]
   13758:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1375c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   13760:	mov	r8, r2
   13764:	mov	r6, r0
   13768:	mov	r7, r1
   1376c:	mov	r5, r3
   13770:	ldr	r9, [sp, #32]
   13774:	bl	13c24 <strspn@plt+0x2b04>
   13778:	mul	r3, r0, r5
   1377c:	umull	r4, r5, r0, r8
   13780:	mla	r8, r8, r1, r3
   13784:	add	r5, r8, r5
   13788:	subs	r4, r6, r4
   1378c:	sbc	r5, r7, r5
   13790:	strd	r4, [r9]
   13794:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1379c:	rsbs	r4, r0, #0
   137a0:	rsc	r5, r1, #0
   137a4:	cmp	r1, #0
   137a8:	mvn	r6, #0
   137ac:	sub	sp, sp, #12
   137b0:	movge	r4, r0
   137b4:	movge	r5, r1
   137b8:	movge	r6, #0
   137bc:	cmp	r3, #0
   137c0:	blt	139f8 <strspn@plt+0x28d8>
   137c4:	cmp	r3, #0
   137c8:	mov	sl, r4
   137cc:	mov	ip, r5
   137d0:	mov	r0, r2
   137d4:	mov	r1, r3
   137d8:	mov	r8, r2
   137dc:	mov	r7, r4
   137e0:	mov	r9, r5
   137e4:	bne	138dc <strspn@plt+0x27bc>
   137e8:	cmp	r2, r5
   137ec:	bls	13918 <strspn@plt+0x27f8>
   137f0:	clz	r3, r2
   137f4:	cmp	r3, #0
   137f8:	rsbne	r2, r3, #32
   137fc:	lslne	r8, r0, r3
   13800:	lsrne	r2, r4, r2
   13804:	lslne	r7, r4, r3
   13808:	orrne	r9, r2, r5, lsl r3
   1380c:	lsr	r4, r8, #16
   13810:	uxth	sl, r8
   13814:	mov	r1, r4
   13818:	mov	r0, r9
   1381c:	bl	14054 <strspn@plt+0x2f34>
   13820:	mov	r1, r4
   13824:	mov	fp, r0
   13828:	mov	r0, r9
   1382c:	bl	14240 <strspn@plt+0x3120>
   13830:	mul	r0, sl, fp
   13834:	lsr	r2, r7, #16
   13838:	orr	r1, r2, r1, lsl #16
   1383c:	cmp	r0, r1
   13840:	bls	13864 <strspn@plt+0x2744>
   13844:	adds	r1, r1, r8
   13848:	sub	r3, fp, #1
   1384c:	bcs	13860 <strspn@plt+0x2740>
   13850:	cmp	r0, r1
   13854:	subhi	fp, fp, #2
   13858:	addhi	r1, r1, r8
   1385c:	bhi	13864 <strspn@plt+0x2744>
   13860:	mov	fp, r3
   13864:	rsb	r9, r0, r1
   13868:	mov	r1, r4
   1386c:	uxth	r7, r7
   13870:	mov	r0, r9
   13874:	bl	14054 <strspn@plt+0x2f34>
   13878:	mov	r1, r4
   1387c:	mov	r5, r0
   13880:	mov	r0, r9
   13884:	bl	14240 <strspn@plt+0x3120>
   13888:	mul	sl, sl, r5
   1388c:	orr	r1, r7, r1, lsl #16
   13890:	cmp	sl, r1
   13894:	bls	138b4 <strspn@plt+0x2794>
   13898:	adds	r8, r1, r8
   1389c:	sub	r3, r5, #1
   138a0:	bcs	138b0 <strspn@plt+0x2790>
   138a4:	cmp	sl, r8
   138a8:	subhi	r5, r5, #2
   138ac:	bhi	138b4 <strspn@plt+0x2794>
   138b0:	mov	r5, r3
   138b4:	orr	r3, r5, fp, lsl #16
   138b8:	mov	r4, #0
   138bc:	cmp	r6, #0
   138c0:	mov	r0, r3
   138c4:	mov	r1, r4
   138c8:	beq	138d4 <strspn@plt+0x27b4>
   138cc:	rsbs	r0, r0, #0
   138d0:	rsc	r1, r1, #0
   138d4:	add	sp, sp, #12
   138d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138dc:	cmp	r3, r5
   138e0:	movhi	r4, #0
   138e4:	movhi	r3, r4
   138e8:	bhi	138bc <strspn@plt+0x279c>
   138ec:	clz	r5, r1
   138f0:	cmp	r5, #0
   138f4:	bne	13ae4 <strspn@plt+0x29c4>
   138f8:	cmp	r1, ip
   138fc:	cmpcs	r2, sl
   13900:	movhi	r4, #0
   13904:	movls	r4, #1
   13908:	movls	r3, #1
   1390c:	movls	r4, r5
   13910:	movhi	r3, r4
   13914:	b	138bc <strspn@plt+0x279c>
   13918:	cmp	r2, #0
   1391c:	bne	13930 <strspn@plt+0x2810>
   13920:	mov	r1, r2
   13924:	mov	r0, #1
   13928:	bl	14054 <strspn@plt+0x2f34>
   1392c:	mov	r8, r0
   13930:	clz	r3, r8
   13934:	cmp	r3, #0
   13938:	bne	13a08 <strspn@plt+0x28e8>
   1393c:	rsb	r9, r8, r9
   13940:	lsr	r5, r8, #16
   13944:	uxth	sl, r8
   13948:	mov	r4, #1
   1394c:	mov	r1, r5
   13950:	mov	r0, r9
   13954:	bl	14054 <strspn@plt+0x2f34>
   13958:	mov	r1, r5
   1395c:	mov	fp, r0
   13960:	mov	r0, r9
   13964:	bl	14240 <strspn@plt+0x3120>
   13968:	mul	r0, sl, fp
   1396c:	lsr	r2, r7, #16
   13970:	orr	r1, r2, r1, lsl #16
   13974:	cmp	r0, r1
   13978:	bls	13998 <strspn@plt+0x2878>
   1397c:	adds	r1, r1, r8
   13980:	sub	r3, fp, #1
   13984:	bcs	13c04 <strspn@plt+0x2ae4>
   13988:	cmp	r0, r1
   1398c:	subhi	fp, fp, #2
   13990:	addhi	r1, r1, r8
   13994:	bls	13c04 <strspn@plt+0x2ae4>
   13998:	rsb	r2, r0, r1
   1399c:	mov	r1, r5
   139a0:	str	r2, [sp]
   139a4:	uxth	r7, r7
   139a8:	mov	r0, r2
   139ac:	bl	14054 <strspn@plt+0x2f34>
   139b0:	ldr	r2, [sp]
   139b4:	mov	r1, r5
   139b8:	mov	r9, r0
   139bc:	mov	r0, r2
   139c0:	bl	14240 <strspn@plt+0x3120>
   139c4:	mul	sl, sl, r9
   139c8:	orr	r1, r7, r1, lsl #16
   139cc:	cmp	sl, r1
   139d0:	bls	139f0 <strspn@plt+0x28d0>
   139d4:	adds	r8, r1, r8
   139d8:	sub	r3, r9, #1
   139dc:	bcs	139ec <strspn@plt+0x28cc>
   139e0:	cmp	sl, r8
   139e4:	subhi	r9, r9, #2
   139e8:	bhi	139f0 <strspn@plt+0x28d0>
   139ec:	mov	r9, r3
   139f0:	orr	r3, r9, fp, lsl #16
   139f4:	b	138bc <strspn@plt+0x279c>
   139f8:	mvn	r6, r6
   139fc:	rsbs	r2, r2, #0
   13a00:	rsc	r3, r3, #0
   13a04:	b	137c4 <strspn@plt+0x26a4>
   13a08:	lsl	r8, r8, r3
   13a0c:	rsb	fp, r3, #32
   13a10:	lsr	r4, r9, fp
   13a14:	lsr	fp, r7, fp
   13a18:	lsr	r5, r8, #16
   13a1c:	orr	fp, fp, r9, lsl r3
   13a20:	mov	r0, r4
   13a24:	lsl	r7, r7, r3
   13a28:	mov	r1, r5
   13a2c:	uxth	sl, r8
   13a30:	bl	14054 <strspn@plt+0x2f34>
   13a34:	mov	r1, r5
   13a38:	mov	r3, r0
   13a3c:	mov	r0, r4
   13a40:	str	r3, [sp]
   13a44:	bl	14240 <strspn@plt+0x3120>
   13a48:	ldr	r3, [sp]
   13a4c:	lsr	r2, fp, #16
   13a50:	mul	r0, sl, r3
   13a54:	orr	r1, r2, r1, lsl #16
   13a58:	cmp	r0, r1
   13a5c:	bls	13a7c <strspn@plt+0x295c>
   13a60:	adds	r1, r1, r8
   13a64:	sub	r2, r3, #1
   13a68:	bcs	13c1c <strspn@plt+0x2afc>
   13a6c:	cmp	r0, r1
   13a70:	subhi	r3, r3, #2
   13a74:	addhi	r1, r1, r8
   13a78:	bls	13c1c <strspn@plt+0x2afc>
   13a7c:	rsb	r9, r0, r1
   13a80:	mov	r1, r5
   13a84:	str	r3, [sp]
   13a88:	uxth	fp, fp
   13a8c:	mov	r0, r9
   13a90:	bl	14054 <strspn@plt+0x2f34>
   13a94:	mov	r1, r5
   13a98:	mov	r4, r0
   13a9c:	mov	r0, r9
   13aa0:	bl	14240 <strspn@plt+0x3120>
   13aa4:	mul	r9, sl, r4
   13aa8:	ldr	r3, [sp]
   13aac:	orr	r1, fp, r1, lsl #16
   13ab0:	cmp	r9, r1
   13ab4:	bls	13ad8 <strspn@plt+0x29b8>
   13ab8:	adds	r1, r1, r8
   13abc:	sub	r2, r4, #1
   13ac0:	bcs	13ad4 <strspn@plt+0x29b4>
   13ac4:	cmp	r9, r1
   13ac8:	subhi	r4, r4, #2
   13acc:	addhi	r1, r1, r8
   13ad0:	bhi	13ad8 <strspn@plt+0x29b8>
   13ad4:	mov	r4, r2
   13ad8:	rsb	r9, r9, r1
   13adc:	orr	r4, r4, r3, lsl #16
   13ae0:	b	1394c <strspn@plt+0x282c>
   13ae4:	rsb	sl, r5, #32
   13ae8:	lsl	r3, r2, r5
   13aec:	lsr	r0, r2, sl
   13af0:	lsr	r2, ip, sl
   13af4:	orr	r4, r0, r1, lsl r5
   13af8:	lsr	sl, r7, sl
   13afc:	mov	r0, r2
   13b00:	orr	sl, sl, ip, lsl r5
   13b04:	lsr	r9, r4, #16
   13b08:	str	r3, [sp, #4]
   13b0c:	str	r2, [sp]
   13b10:	uxth	fp, r4
   13b14:	mov	r1, r9
   13b18:	bl	14054 <strspn@plt+0x2f34>
   13b1c:	ldr	r2, [sp]
   13b20:	mov	r1, r9
   13b24:	mov	r8, r0
   13b28:	mov	r0, r2
   13b2c:	bl	14240 <strspn@plt+0x3120>
   13b30:	mul	r0, fp, r8
   13b34:	lsr	r2, sl, #16
   13b38:	orr	r1, r2, r1, lsl #16
   13b3c:	cmp	r0, r1
   13b40:	bls	13b60 <strspn@plt+0x2a40>
   13b44:	adds	r1, r1, r4
   13b48:	sub	r2, r8, #1
   13b4c:	bcs	13c14 <strspn@plt+0x2af4>
   13b50:	cmp	r0, r1
   13b54:	subhi	r8, r8, #2
   13b58:	addhi	r1, r1, r4
   13b5c:	bls	13c14 <strspn@plt+0x2af4>
   13b60:	rsb	ip, r0, r1
   13b64:	mov	r1, r9
   13b68:	str	ip, [sp]
   13b6c:	mov	r0, ip
   13b70:	bl	14054 <strspn@plt+0x2f34>
   13b74:	ldr	ip, [sp]
   13b78:	mov	r1, r9
   13b7c:	mov	r2, r0
   13b80:	mov	r0, ip
   13b84:	str	r2, [sp]
   13b88:	bl	14240 <strspn@plt+0x3120>
   13b8c:	ldr	r2, [sp]
   13b90:	uxth	ip, sl
   13b94:	mul	fp, fp, r2
   13b98:	orr	ip, ip, r1, lsl #16
   13b9c:	cmp	fp, ip
   13ba0:	bls	13bc0 <strspn@plt+0x2aa0>
   13ba4:	adds	ip, ip, r4
   13ba8:	sub	r1, r2, #1
   13bac:	bcs	13c0c <strspn@plt+0x2aec>
   13bb0:	cmp	fp, ip
   13bb4:	subhi	r2, r2, #2
   13bb8:	addhi	ip, ip, r4
   13bbc:	bls	13c0c <strspn@plt+0x2aec>
   13bc0:	ldr	r0, [sp, #4]
   13bc4:	orr	r1, r2, r8, lsl #16
   13bc8:	rsb	fp, fp, ip
   13bcc:	umull	r2, r3, r1, r0
   13bd0:	cmp	fp, r3
   13bd4:	bcc	13bf8 <strspn@plt+0x2ad8>
   13bd8:	movne	r4, #0
   13bdc:	moveq	r4, #1
   13be0:	cmp	r2, r7, lsl r5
   13be4:	movls	r4, #0
   13be8:	andhi	r4, r4, #1
   13bec:	cmp	r4, #0
   13bf0:	moveq	r3, r1
   13bf4:	beq	138bc <strspn@plt+0x279c>
   13bf8:	sub	r3, r1, #1
   13bfc:	mov	r4, #0
   13c00:	b	138bc <strspn@plt+0x279c>
   13c04:	mov	fp, r3
   13c08:	b	13998 <strspn@plt+0x2878>
   13c0c:	mov	r2, r1
   13c10:	b	13bc0 <strspn@plt+0x2aa0>
   13c14:	mov	r8, r2
   13c18:	b	13b60 <strspn@plt+0x2a40>
   13c1c:	mov	r3, r2
   13c20:	b	13a7c <strspn@plt+0x295c>
   13c24:	cmp	r3, #0
   13c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c2c:	mov	r6, r0
   13c30:	sub	sp, sp, #12
   13c34:	mov	r5, r1
   13c38:	mov	r7, r0
   13c3c:	mov	r4, r2
   13c40:	mov	r8, r1
   13c44:	bne	13d24 <strspn@plt+0x2c04>
   13c48:	cmp	r2, r1
   13c4c:	bls	13d60 <strspn@plt+0x2c40>
   13c50:	clz	r3, r2
   13c54:	cmp	r3, #0
   13c58:	rsbne	r8, r3, #32
   13c5c:	lslne	r4, r2, r3
   13c60:	lsrne	r8, r0, r8
   13c64:	lslne	r7, r0, r3
   13c68:	orrne	r8, r8, r1, lsl r3
   13c6c:	lsr	r5, r4, #16
   13c70:	uxth	sl, r4
   13c74:	mov	r1, r5
   13c78:	mov	r0, r8
   13c7c:	bl	14054 <strspn@plt+0x2f34>
   13c80:	mov	r1, r5
   13c84:	mov	r9, r0
   13c88:	mov	r0, r8
   13c8c:	bl	14240 <strspn@plt+0x3120>
   13c90:	mul	r0, sl, r9
   13c94:	lsr	r3, r7, #16
   13c98:	orr	r1, r3, r1, lsl #16
   13c9c:	cmp	r0, r1
   13ca0:	bls	13cc4 <strspn@plt+0x2ba4>
   13ca4:	adds	r1, r1, r4
   13ca8:	sub	r2, r9, #1
   13cac:	bcs	13cc0 <strspn@plt+0x2ba0>
   13cb0:	cmp	r0, r1
   13cb4:	subhi	r9, r9, #2
   13cb8:	addhi	r1, r1, r4
   13cbc:	bhi	13cc4 <strspn@plt+0x2ba4>
   13cc0:	mov	r9, r2
   13cc4:	rsb	r8, r0, r1
   13cc8:	mov	r1, r5
   13ccc:	uxth	r7, r7
   13cd0:	mov	r0, r8
   13cd4:	bl	14054 <strspn@plt+0x2f34>
   13cd8:	mov	r1, r5
   13cdc:	mov	r6, r0
   13ce0:	mov	r0, r8
   13ce4:	bl	14240 <strspn@plt+0x3120>
   13ce8:	mul	sl, sl, r6
   13cec:	orr	r1, r7, r1, lsl #16
   13cf0:	cmp	sl, r1
   13cf4:	bls	13d10 <strspn@plt+0x2bf0>
   13cf8:	adds	r4, r1, r4
   13cfc:	sub	r3, r6, #1
   13d00:	bcs	1400c <strspn@plt+0x2eec>
   13d04:	cmp	sl, r4
   13d08:	subhi	r6, r6, #2
   13d0c:	bls	1400c <strspn@plt+0x2eec>
   13d10:	orr	r0, r6, r9, lsl #16
   13d14:	mov	r6, #0
   13d18:	mov	r1, r6
   13d1c:	add	sp, sp, #12
   13d20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d24:	cmp	r3, r1
   13d28:	movhi	r6, #0
   13d2c:	movhi	r0, r6
   13d30:	bhi	13d18 <strspn@plt+0x2bf8>
   13d34:	clz	r7, r3
   13d38:	cmp	r7, #0
   13d3c:	bne	13e3c <strspn@plt+0x2d1c>
   13d40:	cmp	r3, r1
   13d44:	cmpcs	r2, r6
   13d48:	movhi	r6, #0
   13d4c:	movls	r6, #1
   13d50:	movls	r0, #1
   13d54:	movls	r6, r7
   13d58:	movhi	r0, r6
   13d5c:	b	13d18 <strspn@plt+0x2bf8>
   13d60:	cmp	r2, #0
   13d64:	bne	13d78 <strspn@plt+0x2c58>
   13d68:	mov	r1, r2
   13d6c:	mov	r0, #1
   13d70:	bl	14054 <strspn@plt+0x2f34>
   13d74:	mov	r4, r0
   13d78:	clz	r3, r4
   13d7c:	cmp	r3, #0
   13d80:	bne	13f38 <strspn@plt+0x2e18>
   13d84:	rsb	r5, r4, r5
   13d88:	lsr	r8, r4, #16
   13d8c:	uxth	sl, r4
   13d90:	mov	r6, #1
   13d94:	mov	r1, r8
   13d98:	mov	r0, r5
   13d9c:	bl	14054 <strspn@plt+0x2f34>
   13da0:	mov	r1, r8
   13da4:	mov	r9, r0
   13da8:	mov	r0, r5
   13dac:	bl	14240 <strspn@plt+0x3120>
   13db0:	mul	r0, sl, r9
   13db4:	lsr	r3, r7, #16
   13db8:	orr	r1, r3, r1, lsl #16
   13dbc:	cmp	r0, r1
   13dc0:	bls	13de0 <strspn@plt+0x2cc0>
   13dc4:	adds	r1, r1, r4
   13dc8:	sub	r2, r9, #1
   13dcc:	bcs	14014 <strspn@plt+0x2ef4>
   13dd0:	cmp	r0, r1
   13dd4:	subhi	r9, r9, #2
   13dd8:	addhi	r1, r1, r4
   13ddc:	bls	14014 <strspn@plt+0x2ef4>
   13de0:	rsb	fp, r0, r1
   13de4:	mov	r1, r8
   13de8:	uxth	r7, r7
   13dec:	mov	r0, fp
   13df0:	bl	14054 <strspn@plt+0x2f34>
   13df4:	mov	r1, r8
   13df8:	mov	r5, r0
   13dfc:	mov	r0, fp
   13e00:	bl	14240 <strspn@plt+0x3120>
   13e04:	mul	sl, sl, r5
   13e08:	orr	r1, r7, r1, lsl #16
   13e0c:	cmp	sl, r1
   13e10:	bls	13e2c <strspn@plt+0x2d0c>
   13e14:	adds	r4, r1, r4
   13e18:	sub	r3, r5, #1
   13e1c:	bcs	1401c <strspn@plt+0x2efc>
   13e20:	cmp	sl, r4
   13e24:	subhi	r5, r5, #2
   13e28:	bls	1401c <strspn@plt+0x2efc>
   13e2c:	orr	r0, r5, r9, lsl #16
   13e30:	mov	r1, r6
   13e34:	add	sp, sp, #12
   13e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e3c:	rsb	r1, r7, #32
   13e40:	lsl	r0, r2, r7
   13e44:	lsr	r2, r2, r1
   13e48:	lsr	fp, r5, r1
   13e4c:	orr	r8, r2, r3, lsl r7
   13e50:	lsr	r1, r6, r1
   13e54:	str	r0, [sp, #4]
   13e58:	orr	r5, r1, r5, lsl r7
   13e5c:	lsr	r9, r8, #16
   13e60:	mov	r0, fp
   13e64:	uxth	sl, r8
   13e68:	mov	r1, r9
   13e6c:	bl	14054 <strspn@plt+0x2f34>
   13e70:	mov	r1, r9
   13e74:	mov	r4, r0
   13e78:	mov	r0, fp
   13e7c:	bl	14240 <strspn@plt+0x3120>
   13e80:	mul	r0, sl, r4
   13e84:	lsr	ip, r5, #16
   13e88:	orr	r1, ip, r1, lsl #16
   13e8c:	cmp	r0, r1
   13e90:	bls	13ea4 <strspn@plt+0x2d84>
   13e94:	adds	r1, r1, r8
   13e98:	sub	r2, r4, #1
   13e9c:	bcc	14038 <strspn@plt+0x2f18>
   13ea0:	mov	r4, r2
   13ea4:	rsb	ip, r0, r1
   13ea8:	mov	r1, r9
   13eac:	str	ip, [sp]
   13eb0:	uxth	r5, r5
   13eb4:	mov	r0, ip
   13eb8:	bl	14054 <strspn@plt+0x2f34>
   13ebc:	ldr	ip, [sp]
   13ec0:	mov	r1, r9
   13ec4:	mov	fp, r0
   13ec8:	mov	r0, ip
   13ecc:	bl	14240 <strspn@plt+0x3120>
   13ed0:	mul	sl, sl, fp
   13ed4:	orr	r1, r5, r1, lsl #16
   13ed8:	cmp	sl, r1
   13edc:	bls	13ef0 <strspn@plt+0x2dd0>
   13ee0:	adds	r1, r1, r8
   13ee4:	sub	r2, fp, #1
   13ee8:	bcc	14024 <strspn@plt+0x2f04>
   13eec:	mov	fp, r2
   13ef0:	ldr	r3, [sp, #4]
   13ef4:	orr	r0, fp, r4, lsl #16
   13ef8:	rsb	sl, sl, r1
   13efc:	umull	r4, r5, r0, r3
   13f00:	cmp	sl, r5
   13f04:	bcc	13f24 <strspn@plt+0x2e04>
   13f08:	movne	r3, #0
   13f0c:	moveq	r3, #1
   13f10:	cmp	r4, r6, lsl r7
   13f14:	movls	r6, #0
   13f18:	andhi	r6, r3, #1
   13f1c:	cmp	r6, #0
   13f20:	beq	13d18 <strspn@plt+0x2bf8>
   13f24:	mov	r6, #0
   13f28:	sub	r0, r0, #1
   13f2c:	mov	r1, r6
   13f30:	add	sp, sp, #12
   13f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f38:	lsl	r4, r4, r3
   13f3c:	rsb	r9, r3, #32
   13f40:	lsr	r2, r5, r9
   13f44:	lsr	r9, r6, r9
   13f48:	lsr	r8, r4, #16
   13f4c:	orr	r9, r9, r5, lsl r3
   13f50:	mov	r0, r2
   13f54:	lsl	r7, r6, r3
   13f58:	mov	r1, r8
   13f5c:	str	r2, [sp]
   13f60:	bl	14054 <strspn@plt+0x2f34>
   13f64:	ldr	r2, [sp]
   13f68:	mov	r1, r8
   13f6c:	uxth	sl, r4
   13f70:	mov	fp, r0
   13f74:	mov	r0, r2
   13f78:	bl	14240 <strspn@plt+0x3120>
   13f7c:	mul	r0, sl, fp
   13f80:	lsr	r3, r9, #16
   13f84:	orr	r1, r3, r1, lsl #16
   13f88:	cmp	r0, r1
   13f8c:	bls	13fac <strspn@plt+0x2e8c>
   13f90:	adds	r1, r1, r4
   13f94:	sub	r3, fp, #1
   13f98:	bcs	1404c <strspn@plt+0x2f2c>
   13f9c:	cmp	r0, r1
   13fa0:	subhi	fp, fp, #2
   13fa4:	addhi	r1, r1, r4
   13fa8:	bls	1404c <strspn@plt+0x2f2c>
   13fac:	rsb	r5, r0, r1
   13fb0:	mov	r1, r8
   13fb4:	uxth	r9, r9
   13fb8:	mov	r0, r5
   13fbc:	bl	14054 <strspn@plt+0x2f34>
   13fc0:	mov	r1, r8
   13fc4:	mov	r6, r0
   13fc8:	mov	r0, r5
   13fcc:	bl	14240 <strspn@plt+0x3120>
   13fd0:	mul	r5, sl, r6
   13fd4:	orr	r1, r9, r1, lsl #16
   13fd8:	cmp	r5, r1
   13fdc:	bls	14000 <strspn@plt+0x2ee0>
   13fe0:	adds	r1, r1, r4
   13fe4:	sub	r3, r6, #1
   13fe8:	bcs	13ffc <strspn@plt+0x2edc>
   13fec:	cmp	r5, r1
   13ff0:	subhi	r6, r6, #2
   13ff4:	addhi	r1, r1, r4
   13ff8:	bhi	14000 <strspn@plt+0x2ee0>
   13ffc:	mov	r6, r3
   14000:	rsb	r5, r5, r1
   14004:	orr	r6, r6, fp, lsl #16
   14008:	b	13d94 <strspn@plt+0x2c74>
   1400c:	mov	r6, r3
   14010:	b	13d10 <strspn@plt+0x2bf0>
   14014:	mov	r9, r2
   14018:	b	13de0 <strspn@plt+0x2cc0>
   1401c:	mov	r5, r3
   14020:	b	13e2c <strspn@plt+0x2d0c>
   14024:	cmp	sl, r1
   14028:	subhi	fp, fp, #2
   1402c:	addhi	r1, r1, r8
   14030:	bhi	13ef0 <strspn@plt+0x2dd0>
   14034:	b	13eec <strspn@plt+0x2dcc>
   14038:	cmp	r0, r1
   1403c:	subhi	r4, r4, #2
   14040:	addhi	r1, r1, r8
   14044:	bhi	13ea4 <strspn@plt+0x2d84>
   14048:	b	13ea0 <strspn@plt+0x2d80>
   1404c:	mov	fp, r3
   14050:	b	13fac <strspn@plt+0x2e8c>
   14054:	subs	r2, r1, #1
   14058:	bxeq	lr
   1405c:	bcc	14234 <strspn@plt+0x3114>
   14060:	cmp	r0, r1
   14064:	bls	14218 <strspn@plt+0x30f8>
   14068:	tst	r1, r2
   1406c:	beq	14224 <strspn@plt+0x3104>
   14070:	clz	r3, r0
   14074:	clz	r2, r1
   14078:	sub	r3, r2, r3
   1407c:	rsbs	r3, r3, #31
   14080:	addne	r3, r3, r3, lsl #1
   14084:	mov	r2, #0
   14088:	addne	pc, pc, r3, lsl #2
   1408c:	nop	{0}
   14090:	cmp	r0, r1, lsl #31
   14094:	adc	r2, r2, r2
   14098:	subcs	r0, r0, r1, lsl #31
   1409c:	cmp	r0, r1, lsl #30
   140a0:	adc	r2, r2, r2
   140a4:	subcs	r0, r0, r1, lsl #30
   140a8:	cmp	r0, r1, lsl #29
   140ac:	adc	r2, r2, r2
   140b0:	subcs	r0, r0, r1, lsl #29
   140b4:	cmp	r0, r1, lsl #28
   140b8:	adc	r2, r2, r2
   140bc:	subcs	r0, r0, r1, lsl #28
   140c0:	cmp	r0, r1, lsl #27
   140c4:	adc	r2, r2, r2
   140c8:	subcs	r0, r0, r1, lsl #27
   140cc:	cmp	r0, r1, lsl #26
   140d0:	adc	r2, r2, r2
   140d4:	subcs	r0, r0, r1, lsl #26
   140d8:	cmp	r0, r1, lsl #25
   140dc:	adc	r2, r2, r2
   140e0:	subcs	r0, r0, r1, lsl #25
   140e4:	cmp	r0, r1, lsl #24
   140e8:	adc	r2, r2, r2
   140ec:	subcs	r0, r0, r1, lsl #24
   140f0:	cmp	r0, r1, lsl #23
   140f4:	adc	r2, r2, r2
   140f8:	subcs	r0, r0, r1, lsl #23
   140fc:	cmp	r0, r1, lsl #22
   14100:	adc	r2, r2, r2
   14104:	subcs	r0, r0, r1, lsl #22
   14108:	cmp	r0, r1, lsl #21
   1410c:	adc	r2, r2, r2
   14110:	subcs	r0, r0, r1, lsl #21
   14114:	cmp	r0, r1, lsl #20
   14118:	adc	r2, r2, r2
   1411c:	subcs	r0, r0, r1, lsl #20
   14120:	cmp	r0, r1, lsl #19
   14124:	adc	r2, r2, r2
   14128:	subcs	r0, r0, r1, lsl #19
   1412c:	cmp	r0, r1, lsl #18
   14130:	adc	r2, r2, r2
   14134:	subcs	r0, r0, r1, lsl #18
   14138:	cmp	r0, r1, lsl #17
   1413c:	adc	r2, r2, r2
   14140:	subcs	r0, r0, r1, lsl #17
   14144:	cmp	r0, r1, lsl #16
   14148:	adc	r2, r2, r2
   1414c:	subcs	r0, r0, r1, lsl #16
   14150:	cmp	r0, r1, lsl #15
   14154:	adc	r2, r2, r2
   14158:	subcs	r0, r0, r1, lsl #15
   1415c:	cmp	r0, r1, lsl #14
   14160:	adc	r2, r2, r2
   14164:	subcs	r0, r0, r1, lsl #14
   14168:	cmp	r0, r1, lsl #13
   1416c:	adc	r2, r2, r2
   14170:	subcs	r0, r0, r1, lsl #13
   14174:	cmp	r0, r1, lsl #12
   14178:	adc	r2, r2, r2
   1417c:	subcs	r0, r0, r1, lsl #12
   14180:	cmp	r0, r1, lsl #11
   14184:	adc	r2, r2, r2
   14188:	subcs	r0, r0, r1, lsl #11
   1418c:	cmp	r0, r1, lsl #10
   14190:	adc	r2, r2, r2
   14194:	subcs	r0, r0, r1, lsl #10
   14198:	cmp	r0, r1, lsl #9
   1419c:	adc	r2, r2, r2
   141a0:	subcs	r0, r0, r1, lsl #9
   141a4:	cmp	r0, r1, lsl #8
   141a8:	adc	r2, r2, r2
   141ac:	subcs	r0, r0, r1, lsl #8
   141b0:	cmp	r0, r1, lsl #7
   141b4:	adc	r2, r2, r2
   141b8:	subcs	r0, r0, r1, lsl #7
   141bc:	cmp	r0, r1, lsl #6
   141c0:	adc	r2, r2, r2
   141c4:	subcs	r0, r0, r1, lsl #6
   141c8:	cmp	r0, r1, lsl #5
   141cc:	adc	r2, r2, r2
   141d0:	subcs	r0, r0, r1, lsl #5
   141d4:	cmp	r0, r1, lsl #4
   141d8:	adc	r2, r2, r2
   141dc:	subcs	r0, r0, r1, lsl #4
   141e0:	cmp	r0, r1, lsl #3
   141e4:	adc	r2, r2, r2
   141e8:	subcs	r0, r0, r1, lsl #3
   141ec:	cmp	r0, r1, lsl #2
   141f0:	adc	r2, r2, r2
   141f4:	subcs	r0, r0, r1, lsl #2
   141f8:	cmp	r0, r1, lsl #1
   141fc:	adc	r2, r2, r2
   14200:	subcs	r0, r0, r1, lsl #1
   14204:	cmp	r0, r1
   14208:	adc	r2, r2, r2
   1420c:	subcs	r0, r0, r1
   14210:	mov	r0, r2
   14214:	bx	lr
   14218:	moveq	r0, #1
   1421c:	movne	r0, #0
   14220:	bx	lr
   14224:	clz	r2, r1
   14228:	rsb	r2, r2, #31
   1422c:	lsr	r0, r0, r2
   14230:	bx	lr
   14234:	cmp	r0, #0
   14238:	mvnne	r0, #0
   1423c:	b	13710 <strspn@plt+0x25f0>
   14240:	cmp	r1, #0
   14244:	beq	14234 <strspn@plt+0x3114>
   14248:	push	{r0, r1, lr}
   1424c:	bl	14054 <strspn@plt+0x2f34>
   14250:	pop	{r1, r2, lr}
   14254:	mul	r3, r2, r0
   14258:	sub	r1, r1, r3
   1425c:	bx	lr
   14260:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14264:	mov	r7, r0
   14268:	ldr	r6, [pc, #76]	; 142bc <strspn@plt+0x319c>
   1426c:	mov	r8, r1
   14270:	ldr	r5, [pc, #72]	; 142c0 <strspn@plt+0x31a0>
   14274:	mov	r9, r2
   14278:	add	r6, pc, r6
   1427c:	bl	10e54 <calloc@plt-0x20>
   14280:	add	r5, pc, r5
   14284:	rsb	r6, r5, r6
   14288:	asrs	r6, r6, #2
   1428c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   14290:	sub	r5, r5, #4
   14294:	mov	r4, #0
   14298:	add	r4, r4, #1
   1429c:	ldr	r3, [r5, #4]!
   142a0:	mov	r0, r7
   142a4:	mov	r1, r8
   142a8:	mov	r2, r9
   142ac:	blx	r3
   142b0:	cmp	r4, r6
   142b4:	bne	14298 <strspn@plt+0x3178>
   142b8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   142bc:	andeq	r0, r1, r0, lsl #25
   142c0:	andeq	r0, r1, r4, ror ip
   142c4:	bx	lr
   142c8:	ldr	r3, [pc, #28]	; 142ec <strspn@plt+0x31cc>
   142cc:	mov	r1, #0
   142d0:	ldr	r2, [pc, #24]	; 142f0 <strspn@plt+0x31d0>
   142d4:	add	r3, pc, r3
   142d8:	ldr	r3, [r3, r2]
   142dc:	cmp	r3, #0
   142e0:	ldrne	r2, [r3]
   142e4:	moveq	r2, r3
   142e8:	b	11018 <__cxa_atexit@plt>
   142ec:	andeq	r0, r1, r4, lsr #26
   142f0:	strdeq	r0, [r0], -ip

Disassembly of section .fini:

000142f4 <.fini>:
   142f4:	push	{r3, lr}
   142f8:	pop	{r3, pc}
