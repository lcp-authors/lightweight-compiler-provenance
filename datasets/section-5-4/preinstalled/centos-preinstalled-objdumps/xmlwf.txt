
centos-preinstalled/xmlwf:     file format elf32-littlearm


Disassembly of section .init:

000111c8 <_init@@Base>:
   111c8:	push	{r3, lr}
   111cc:	bl	11efc <XML_DefaultCurrent@plt+0xa08>
   111d0:	pop	{r3, pc}

Disassembly of section .plt:

000111d4 <XML_SetCommentHandler@plt-0x14>:
   111d4:	push	{lr}		; (str lr, [sp, #-4]!)
   111d8:	ldr	lr, [pc, #4]	; 111e4 <_init@@Base+0x1c>
   111dc:	add	lr, pc, lr
   111e0:	ldr	pc, [lr, #8]!
   111e4:	andeq	r2, r1, ip, lsl lr

000111e8 <XML_SetCommentHandler@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #73728	; 0x12000
   111f0:	ldr	pc, [ip, #3612]!	; 0xe1c

000111f4 <XML_ParserCreateNS@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #73728	; 0x12000
   111fc:	ldr	pc, [ip, #3604]!	; 0xe14

00011200 <XML_GetBuffer@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #73728	; 0x12000
   11208:	ldr	pc, [ip, #3596]!	; 0xe0c

0001120c <XML_SetNamespaceDeclHandler@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #73728	; 0x12000
   11214:	ldr	pc, [ip, #3588]!	; 0xe04

00011218 <XML_SetUnknownEncodingHandler@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #73728	; 0x12000
   11220:	ldr	pc, [ip, #3580]!	; 0xdfc

00011224 <XML_GetErrorCode@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #73728	; 0x12000
   1122c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011230 <strcmp@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #73728	; 0x12000
   11238:	ldr	pc, [ip, #3564]!	; 0xdec

0001123c <fopen@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #73728	; 0x12000
   11244:	ldr	pc, [ip, #3556]!	; 0xde4

00011248 <XML_GetCurrentByteIndex@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #73728	; 0x12000
   11250:	ldr	pc, [ip, #3548]!	; 0xddc

00011254 <XML_SetEntityDeclHandler@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #73728	; 0x12000
   1125c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011260 <read@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #73728	; 0x12000
   11268:	ldr	pc, [ip, #3532]!	; 0xdcc

0001126c <XML_ExternalEntityParserCreate@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #73728	; 0x12000
   11274:	ldr	pc, [ip, #3524]!	; 0xdc4

00011278 <XML_SetDoctypeDeclHandler@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #73728	; 0x12000
   11280:	ldr	pc, [ip, #3516]!	; 0xdbc

00011284 <XML_ParserCreate@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #73728	; 0x12000
   1128c:	ldr	pc, [ip, #3508]!	; 0xdb4

00011290 <free@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #73728	; 0x12000
   11298:	ldr	pc, [ip, #3500]!	; 0xdac

0001129c <XML_GetBase@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #73728	; 0x12000
   112a4:	ldr	pc, [ip, #3492]!	; 0xda4

000112a8 <XML_GetCurrentLineNumber@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #73728	; 0x12000
   112b0:	ldr	pc, [ip, #3484]!	; 0xd9c

000112b4 <XML_SetNotationDeclHandler@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #73728	; 0x12000
   112bc:	ldr	pc, [ip, #3476]!	; 0xd94

000112c0 <memcpy@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #73728	; 0x12000
   112c8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112cc <XML_SetExternalEntityRefHandler@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #73728	; 0x12000
   112d4:	ldr	pc, [ip, #3460]!	; 0xd84

000112d8 <XML_SetCdataSectionHandler@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #73728	; 0x12000
   112e0:	ldr	pc, [ip, #3452]!	; 0xd7c

000112e4 <__stack_chk_fail@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #73728	; 0x12000
   112ec:	ldr	pc, [ip, #3444]!	; 0xd74

000112f0 <XML_GetCurrentColumnNumber@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #73728	; 0x12000
   112f8:	ldr	pc, [ip, #3436]!	; 0xd6c

000112fc <XML_SetCharacterDataHandler@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #73728	; 0x12000
   11304:	ldr	pc, [ip, #3428]!	; 0xd64

00011308 <perror@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #73728	; 0x12000
   11310:	ldr	pc, [ip, #3420]!	; 0xd5c

00011314 <XML_ParserFree@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #73728	; 0x12000
   1131c:	ldr	pc, [ip, #3412]!	; 0xd54

00011320 <XML_GetIdAttributeIndex@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #73728	; 0x12000
   11328:	ldr	pc, [ip, #3404]!	; 0xd4c

0001132c <XML_SetDefaultHandler@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #73728	; 0x12000
   11334:	ldr	pc, [ip, #3396]!	; 0xd44

00011338 <_IO_putc@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #73728	; 0x12000
   11340:	ldr	pc, [ip, #3388]!	; 0xd3c

00011344 <fwrite@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #73728	; 0x12000
   1134c:	ldr	pc, [ip, #3380]!	; 0xd34

00011350 <XML_SetUserData@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #73728	; 0x12000
   11358:	ldr	pc, [ip, #3372]!	; 0xd2c

0001135c <strcpy@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #73728	; 0x12000
   11364:	ldr	pc, [ip, #3364]!	; 0xd24

00011368 <XML_Parse@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #73728	; 0x12000
   11370:	ldr	pc, [ip, #3356]!	; 0xd1c

00011374 <malloc@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #73728	; 0x12000
   1137c:	ldr	pc, [ip, #3348]!	; 0xd14

00011380 <__libc_start_main@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #73728	; 0x12000
   11388:	ldr	pc, [ip, #3340]!	; 0xd0c

0001138c <__fxstat@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #73728	; 0x12000
   11394:	ldr	pc, [ip, #3332]!	; 0xd04

00011398 <__gmon_start__@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #73728	; 0x12000
   113a0:	ldr	pc, [ip, #3324]!	; 0xcfc

000113a4 <open@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #73728	; 0x12000
   113ac:	ldr	pc, [ip, #3316]!	; 0xcf4

000113b0 <exit@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #73728	; 0x12000
   113b8:	ldr	pc, [ip, #3308]!	; 0xcec

000113bc <XML_ParseBuffer@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #73728	; 0x12000
   113c4:	ldr	pc, [ip, #3300]!	; 0xce4

000113c8 <strlen@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #73728	; 0x12000
   113d0:	ldr	pc, [ip, #3292]!	; 0xcdc

000113d4 <mmap@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #73728	; 0x12000
   113dc:	ldr	pc, [ip, #3284]!	; 0xcd4

000113e0 <strchr@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #73728	; 0x12000
   113e8:	ldr	pc, [ip, #3276]!	; 0xccc

000113ec <XML_SetNotStandaloneHandler@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #73728	; 0x12000
   113f4:	ldr	pc, [ip, #3268]!	; 0xcc4

000113f8 <XML_UseParserAsHandlerArg@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #73728	; 0x12000
   11400:	ldr	pc, [ip, #3260]!	; 0xcbc

00011404 <XML_SetBase@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #73728	; 0x12000
   1140c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011410 <XML_GetFeatureList@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #73728	; 0x12000
   11418:	ldr	pc, [ip, #3244]!	; 0xcac

0001141c <setvbuf@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #73728	; 0x12000
   11424:	ldr	pc, [ip, #3236]!	; 0xca4

00011428 <__fprintf_chk@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #73728	; 0x12000
   11430:	ldr	pc, [ip, #3228]!	; 0xc9c

00011434 <fclose@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #73728	; 0x12000
   1143c:	ldr	pc, [ip, #3220]!	; 0xc94

00011440 <XML_SetParamEntityParsing@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #73728	; 0x12000
   11448:	ldr	pc, [ip, #3212]!	; 0xc8c

0001144c <XML_ErrorString@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #73728	; 0x12000
   11454:	ldr	pc, [ip, #3204]!	; 0xc84

00011458 <munmap@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #73728	; 0x12000
   11460:	ldr	pc, [ip, #3196]!	; 0xc7c

00011464 <XML_SetProcessingInstructionHandler@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #73728	; 0x12000
   1146c:	ldr	pc, [ip, #3188]!	; 0xc74

00011470 <strrchr@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #73728	; 0x12000
   11478:	ldr	pc, [ip, #3180]!	; 0xc6c

0001147c <XML_GetSpecifiedAttributeCount@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #73728	; 0x12000
   11484:	ldr	pc, [ip, #3172]!	; 0xc64

00011488 <XML_SetElementHandler@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #73728	; 0x12000
   11490:	ldr	pc, [ip, #3164]!	; 0xc5c

00011494 <fputc@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #73728	; 0x12000
   1149c:	ldr	pc, [ip, #3156]!	; 0xc54

000114a0 <remove@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #73728	; 0x12000
   114a8:	ldr	pc, [ip, #3148]!	; 0xc4c

000114ac <qsort@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #73728	; 0x12000
   114b4:	ldr	pc, [ip, #3140]!	; 0xc44

000114b8 <XML_ExpatVersion@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #73728	; 0x12000
   114c0:	ldr	pc, [ip, #3132]!	; 0xc3c

000114c4 <XML_GetCurrentByteCount@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #73728	; 0x12000
   114cc:	ldr	pc, [ip, #3124]!	; 0xc34

000114d0 <fputs@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #73728	; 0x12000
   114d8:	ldr	pc, [ip, #3116]!	; 0xc2c

000114dc <abort@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #73728	; 0x12000
   114e4:	ldr	pc, [ip, #3108]!	; 0xc24

000114e8 <close@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #73728	; 0x12000
   114f0:	ldr	pc, [ip, #3100]!	; 0xc1c

000114f4 <XML_DefaultCurrent@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #73728	; 0x12000
   114fc:	ldr	pc, [ip, #3092]!	; 0xc14

Disassembly of section .text:

00011500 <.text>:
   11500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11504:	cmp	r0, #1
   11508:	sub	sp, sp, #68	; 0x44
   1150c:	ldr	r4, [pc, #2316]	; 11e20 <XML_DefaultCurrent@plt+0x92c>
   11510:	str	r0, [sp, #16]
   11514:	add	r4, pc, r4
   11518:	ble	11dd4 <XML_DefaultCurrent@plt+0x8e0>
   1151c:	mov	r2, #0
   11520:	mov	r5, #1
   11524:	mov	r3, #1
   11528:	mov	r8, r2
   1152c:	str	r3, [sp, #20]
   11530:	mov	r7, r2
   11534:	mov	r3, r2
   11538:	mov	r9, r5
   1153c:	mov	r6, r0
   11540:	str	r2, [sp, #8]
   11544:	str	r2, [sp, #32]
   11548:	str	r2, [sp, #24]
   1154c:	str	r2, [sp, #36]	; 0x24
   11550:	str	r2, [sp, #28]
   11554:	cmp	r3, #0
   11558:	ldr	r2, [r1, r5, lsl #2]
   1155c:	bne	1157c <XML_DefaultCurrent@plt+0x88>
   11560:	ldrb	r0, [r2]
   11564:	cmp	r0, #45	; 0x2d
   11568:	bne	11db0 <XML_DefaultCurrent@plt+0x8bc>
   1156c:	ldrb	r3, [r2, #1]
   11570:	cmp	r3, #45	; 0x2d
   11574:	beq	11a74 <XML_DefaultCurrent@plt+0x580>
   11578:	mov	r3, #1
   1157c:	ldrb	r0, [r2, r3]
   11580:	cmp	r0, #120	; 0x78
   11584:	addls	pc, pc, r0, lsl #2
   11588:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1158c:	b	11b20 <XML_DefaultCurrent@plt+0x62c>
   11590:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11594:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11598:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1159c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115a0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115a4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115a8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115ac:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115b0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115b4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115b8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115bc:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115c0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115c4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115c8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115cc:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115d0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115d4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115d8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115dc:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115e0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115e4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115e8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115ec:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115f0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115f4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115f8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   115fc:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11600:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11604:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11608:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1160c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11610:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11614:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11618:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1161c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11620:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11624:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11628:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1162c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11630:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11634:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11638:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1163c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11640:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11644:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11648:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1164c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11650:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11654:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11658:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1165c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11660:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11664:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11668:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1166c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11670:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11674:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11678:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1167c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11680:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11684:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11688:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1168c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11690:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11694:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11698:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1169c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116a0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116a4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116a8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116ac:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116b0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116b4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116b8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116bc:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116c0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116c4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116c8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116cc:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116d0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116d4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116d8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116dc:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116e0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116e4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116e8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116ec:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116f0:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116f4:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116f8:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   116fc:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11700:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11704:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11708:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1170c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11710:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11714:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11718:	b	11b0c <XML_DefaultCurrent@plt+0x618>
   1171c:	b	11ae4 <XML_DefaultCurrent@plt+0x5f0>
   11720:	b	11ab4 <XML_DefaultCurrent@plt+0x5c0>
   11724:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11728:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1172c:	b	11aa8 <XML_DefaultCurrent@plt+0x5b4>
   11730:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11734:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11738:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1173c:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11740:	b	11a9c <XML_DefaultCurrent@plt+0x5a8>
   11744:	b	11a8c <XML_DefaultCurrent@plt+0x598>
   11748:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   1174c:	b	11770 <XML_DefaultCurrent@plt+0x27c>
   11750:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11754:	b	11bdc <XML_DefaultCurrent@plt+0x6e8>
   11758:	b	11bcc <XML_DefaultCurrent@plt+0x6d8>
   1175c:	b	11bc0 <XML_DefaultCurrent@plt+0x6cc>
   11760:	b	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11764:	b	11b44 <XML_DefaultCurrent@plt+0x650>
   11768:	b	11b34 <XML_DefaultCurrent@plt+0x640>
   1176c:	b	11778 <XML_DefaultCurrent@plt+0x284>
   11770:	mov	r2, #2
   11774:	str	r2, [sp, #8]
   11778:	orr	r9, r9, #2
   1177c:	add	r3, r3, #1
   11780:	cmp	r6, r5
   11784:	bgt	11554 <XML_DefaultCurrent@plt+0x60>
   11788:	str	r9, [sp, #20]
   1178c:	ldr	r3, [sp, #16]
   11790:	cmp	r5, r3
   11794:	movne	r2, #0
   11798:	strne	r2, [sp, #12]
   1179c:	bne	117b8 <XML_DefaultCurrent@plt+0x2c4>
   117a0:	ldr	r2, [sp, #20]
   117a4:	sub	r5, r5, #1
   117a8:	mov	r3, #1
   117ac:	str	r3, [sp, #12]
   117b0:	bic	r2, r2, #1
   117b4:	str	r2, [sp, #20]
   117b8:	ldr	r3, [sp, #16]
   117bc:	cmp	r3, r5
   117c0:	ble	11bb4 <XML_DefaultCurrent@plt+0x6c0>
   117c4:	ldr	r2, [pc, #1624]	; 11e24 <XML_DefaultCurrent@plt+0x930>
   117c8:	add	r9, r1, r5, lsl #2
   117cc:	ldr	r3, [pc, #1620]	; 11e28 <XML_DefaultCurrent@plt+0x934>
   117d0:	add	r2, pc, r2
   117d4:	str	r2, [sp, #48]	; 0x30
   117d8:	add	r3, pc, r3
   117dc:	ldr	r2, [pc, #1608]	; 11e2c <XML_DefaultCurrent@plt+0x938>
   117e0:	str	r3, [sp, #52]	; 0x34
   117e4:	ldr	r3, [pc, #1604]	; 11e30 <XML_DefaultCurrent@plt+0x93c>
   117e8:	add	r2, pc, r2
   117ec:	str	r2, [sp, #56]	; 0x38
   117f0:	add	r3, pc, r3
   117f4:	ldr	r2, [pc, #1592]	; 11e34 <XML_DefaultCurrent@plt+0x940>
   117f8:	str	r3, [sp, #60]	; 0x3c
   117fc:	ldr	r3, [pc, #1588]	; 11e38 <XML_DefaultCurrent@plt+0x944>
   11800:	add	r2, pc, r2
   11804:	str	r2, [sp, #40]	; 0x28
   11808:	add	r3, pc, r3
   1180c:	str	r3, [sp, #44]	; 0x2c
   11810:	b	11a3c <XML_DefaultCurrent@plt+0x548>
   11814:	mov	r1, #1
   11818:	bl	111f4 <XML_ParserCreateNS@plt>
   1181c:	ldr	r3, [sp, #32]
   11820:	cmp	r3, #0
   11824:	mov	r4, r0
   11828:	bne	11a60 <XML_DefaultCurrent@plt+0x56c>
   1182c:	mov	r0, r4
   11830:	ldr	r1, [sp, #8]
   11834:	bl	11440 <XML_SetParamEntityParsing@plt>
   11838:	cmp	r8, #116	; 0x74
   1183c:	beq	11d38 <XML_DefaultCurrent@plt+0x844>
   11840:	cmp	r7, #0
   11844:	beq	11d78 <XML_DefaultCurrent@plt+0x884>
   11848:	ldr	r2, [sp, #12]
   1184c:	cmp	r2, #0
   11850:	bne	11c78 <XML_DefaultCurrent@plt+0x784>
   11854:	ldr	sl, [r9]
   11858:	mov	r1, #47	; 0x2f
   1185c:	mov	r0, sl
   11860:	bl	11470 <strrchr@plt>
   11864:	cmp	r0, #0
   11868:	addne	sl, r0, #1
   1186c:	mov	r0, sl
   11870:	bl	113c8 <strlen@plt>
   11874:	mov	r6, r0
   11878:	mov	r0, r7
   1187c:	bl	113c8 <strlen@plt>
   11880:	mov	fp, r0
   11884:	add	r0, r0, r6
   11888:	add	r0, r0, #2
   1188c:	bl	11374 <malloc@plt>
   11890:	mov	r2, fp
   11894:	mov	r1, r7
   11898:	mov	r6, r0
   1189c:	bl	112c0 <memcpy@plt>
   118a0:	add	r0, fp, #1
   118a4:	mov	r1, sl
   118a8:	mov	r3, #47	; 0x2f
   118ac:	add	r0, r6, r0
   118b0:	strb	r3, [r6, fp]
   118b4:	bl	1135c <strcpy@plt>
   118b8:	ldr	r1, [pc, #1404]	; 11e3c <XML_DefaultCurrent@plt+0x948>
   118bc:	mov	r0, r6
   118c0:	add	r1, pc, r1
   118c4:	bl	1123c <fopen@plt>
   118c8:	subs	sl, r0, #0
   118cc:	beq	11e10 <XML_DefaultCurrent@plt+0x91c>
   118d0:	mov	r1, #0
   118d4:	mov	r3, #16384	; 0x4000
   118d8:	mov	r2, r1
   118dc:	bl	1141c <setvbuf@plt>
   118e0:	mov	r0, r4
   118e4:	mov	r1, sl
   118e8:	bl	11350 <XML_SetUserData@plt>
   118ec:	cmp	r8, #99	; 0x63
   118f0:	beq	11ce4 <XML_DefaultCurrent@plt+0x7f0>
   118f4:	cmp	r8, #109	; 0x6d
   118f8:	bne	11ca0 <XML_DefaultCurrent@plt+0x7ac>
   118fc:	mov	r0, r4
   11900:	bl	113f8 <XML_UseParserAsHandlerArg@plt>
   11904:	ldr	r1, [pc, #1332]	; 11e40 <XML_DefaultCurrent@plt+0x94c>
   11908:	ldr	r2, [pc, #1332]	; 11e44 <XML_DefaultCurrent@plt+0x950>
   1190c:	mov	r0, r4
   11910:	add	r1, pc, r1
   11914:	add	r2, pc, r2
   11918:	bl	11488 <XML_SetElementHandler@plt>
   1191c:	ldr	r1, [pc, #1316]	; 11e48 <XML_DefaultCurrent@plt+0x954>
   11920:	mov	r0, r4
   11924:	add	r1, pc, r1
   11928:	bl	11464 <XML_SetProcessingInstructionHandler@plt>
   1192c:	ldr	r1, [pc, #1304]	; 11e4c <XML_DefaultCurrent@plt+0x958>
   11930:	mov	r0, r4
   11934:	add	r1, pc, r1
   11938:	bl	111e8 <XML_SetCommentHandler@plt>
   1193c:	ldr	r1, [pc, #1292]	; 11e50 <XML_DefaultCurrent@plt+0x95c>
   11940:	ldr	r2, [pc, #1292]	; 11e54 <XML_DefaultCurrent@plt+0x960>
   11944:	mov	r0, r4
   11948:	add	r1, pc, r1
   1194c:	add	r2, pc, r2
   11950:	bl	112d8 <XML_SetCdataSectionHandler@plt>
   11954:	ldr	r1, [pc, #1276]	; 11e58 <XML_DefaultCurrent@plt+0x964>
   11958:	mov	r0, r4
   1195c:	add	r1, pc, r1
   11960:	bl	112fc <XML_SetCharacterDataHandler@plt>
   11964:	ldr	r1, [pc, #1264]	; 11e5c <XML_DefaultCurrent@plt+0x968>
   11968:	ldr	r2, [pc, #1264]	; 11e60 <XML_DefaultCurrent@plt+0x96c>
   1196c:	mov	r0, r4
   11970:	add	r1, pc, r1
   11974:	add	r2, pc, r2
   11978:	bl	11278 <XML_SetDoctypeDeclHandler@plt>
   1197c:	ldr	r1, [pc, #1248]	; 11e64 <XML_DefaultCurrent@plt+0x970>
   11980:	mov	r0, r4
   11984:	add	r1, pc, r1
   11988:	bl	11254 <XML_SetEntityDeclHandler@plt>
   1198c:	ldr	r1, [pc, #1236]	; 11e68 <XML_DefaultCurrent@plt+0x974>
   11990:	mov	r0, r4
   11994:	add	r1, pc, r1
   11998:	bl	112b4 <XML_SetNotationDeclHandler@plt>
   1199c:	ldr	r1, [pc, #1224]	; 11e6c <XML_DefaultCurrent@plt+0x978>
   119a0:	ldr	r2, [pc, #1224]	; 11e70 <XML_DefaultCurrent@plt+0x97c>
   119a4:	mov	r0, r4
   119a8:	add	r1, pc, r1
   119ac:	add	r2, pc, r2
   119b0:	bl	1120c <XML_SetNamespaceDeclHandler@plt>
   119b4:	ldr	r0, [pc, #1208]	; 11e74 <XML_DefaultCurrent@plt+0x980>
   119b8:	mov	r1, #1
   119bc:	mov	r2, #11
   119c0:	add	r0, pc, r0
   119c4:	ldr	r3, [r4]
   119c8:	bl	11344 <fwrite@plt>
   119cc:	ldr	r2, [sp, #36]	; 0x24
   119d0:	cmp	r2, #0
   119d4:	bne	11c88 <XML_DefaultCurrent@plt+0x794>
   119d8:	ldr	r3, [sp, #12]
   119dc:	mov	r0, r4
   119e0:	ldr	r2, [sp, #20]
   119e4:	cmp	r3, #0
   119e8:	ldreq	r1, [r9]
   119ec:	movne	r1, #0
   119f0:	bl	13684 <XML_DefaultCurrent@plt+0x2190>
   119f4:	cmp	r7, #0
   119f8:	mov	fp, r0
   119fc:	beq	11a20 <XML_DefaultCurrent@plt+0x52c>
   11a00:	cmp	r8, #109	; 0x6d
   11a04:	beq	11d84 <XML_DefaultCurrent@plt+0x890>
   11a08:	mov	r0, sl
   11a0c:	bl	11434 <fclose@plt>
   11a10:	cmp	fp, #0
   11a14:	mov	r0, r6
   11a18:	beq	11e04 <XML_DefaultCurrent@plt+0x910>
   11a1c:	bl	11290 <free@plt>
   11a20:	mov	r0, r4
   11a24:	add	r5, r5, #1
   11a28:	bl	11314 <XML_ParserFree@plt>
   11a2c:	ldr	r2, [sp, #16]
   11a30:	add	r9, r9, #4
   11a34:	cmp	r5, r2
   11a38:	beq	11bb4 <XML_DefaultCurrent@plt+0x6c0>
   11a3c:	ldr	r2, [sp, #24]
   11a40:	ldr	r0, [sp, #28]
   11a44:	cmp	r2, #0
   11a48:	bne	11814 <XML_DefaultCurrent@plt+0x320>
   11a4c:	bl	11284 <XML_ParserCreate@plt>
   11a50:	ldr	r3, [sp, #32]
   11a54:	cmp	r3, #0
   11a58:	mov	r4, r0
   11a5c:	beq	1182c <XML_DefaultCurrent@plt+0x338>
   11a60:	ldr	r1, [pc, #1040]	; 11e78 <XML_DefaultCurrent@plt+0x984>
   11a64:	mov	r0, r4
   11a68:	add	r1, pc, r1
   11a6c:	bl	113ec <XML_SetNotStandaloneHandler@plt>
   11a70:	b	1182c <XML_DefaultCurrent@plt+0x338>
   11a74:	ldrb	r3, [r2, #2]
   11a78:	cmp	r3, #0
   11a7c:	bne	11578 <XML_DefaultCurrent@plt+0x84>
   11a80:	str	r9, [sp, #20]
   11a84:	add	r5, r5, #1
   11a88:	b	1178c <XML_DefaultCurrent@plt+0x298>
   11a8c:	mov	r2, #1
   11a90:	add	r3, r3, #1
   11a94:	str	r2, [sp, #24]
   11a98:	b	11780 <XML_DefaultCurrent@plt+0x28c>
   11a9c:	add	r3, r3, #1
   11aa0:	mov	r8, #109	; 0x6d
   11aa4:	b	11780 <XML_DefaultCurrent@plt+0x28c>
   11aa8:	ldr	r0, [r1]
   11aac:	mov	r1, #0
   11ab0:	bl	1228c <XML_DefaultCurrent@plt+0xd98>
   11ab4:	add	ip, r3, #1
   11ab8:	add	r3, r2, ip
   11abc:	str	r3, [sp, #28]
   11ac0:	ldrb	r3, [r2, ip]
   11ac4:	cmp	r3, #0
   11ac8:	bne	11b28 <XML_DefaultCurrent@plt+0x634>
   11acc:	add	r5, r5, #1
   11ad0:	cmp	r5, r6
   11ad4:	beq	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11ad8:	ldr	r2, [r1, r5, lsl #2]
   11adc:	str	r2, [sp, #28]
   11ae0:	b	11b28 <XML_DefaultCurrent@plt+0x634>
   11ae4:	add	ip, r3, #1
   11ae8:	add	r7, r2, ip
   11aec:	ldrb	r3, [r2, ip]
   11af0:	cmp	r3, #0
   11af4:	bne	11b28 <XML_DefaultCurrent@plt+0x634>
   11af8:	add	r5, r5, #1
   11afc:	cmp	r5, r6
   11b00:	beq	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11b04:	ldr	r7, [r1, r5, lsl #2]
   11b08:	b	11b28 <XML_DefaultCurrent@plt+0x634>
   11b0c:	mov	r2, #0
   11b10:	add	r3, r3, #1
   11b14:	str	r2, [sp, #24]
   11b18:	mov	r8, #99	; 0x63
   11b1c:	b	11780 <XML_DefaultCurrent@plt+0x28c>
   11b20:	cmp	r3, #1
   11b24:	beq	11be8 <XML_DefaultCurrent@plt+0x6f4>
   11b28:	add	r5, r5, #1
   11b2c:	mov	r3, #0
   11b30:	b	11780 <XML_DefaultCurrent@plt+0x28c>
   11b34:	mov	r2, #1
   11b38:	add	r3, r3, #1
   11b3c:	str	r2, [sp, #36]	; 0x24
   11b40:	b	11780 <XML_DefaultCurrent@plt+0x28c>
   11b44:	ldr	r5, [r1]
   11b48:	bl	11410 <XML_GetFeatureList@plt>
   11b4c:	ldrb	r2, [r5]
   11b50:	cmp	r2, #0
   11b54:	mov	r7, r0
   11b58:	beq	11b74 <XML_DefaultCurrent@plt+0x680>
   11b5c:	add	r1, r5, #1
   11b60:	cmp	r2, #47	; 0x2f
   11b64:	moveq	r5, r1
   11b68:	ldrb	r2, [r1], #1
   11b6c:	cmp	r2, #0
   11b70:	bne	11b60 <XML_DefaultCurrent@plt+0x66c>
   11b74:	ldr	r3, [pc, #768]	; 11e7c <XML_DefaultCurrent@plt+0x988>
   11b78:	ldr	r6, [r4, r3]
   11b7c:	ldr	r4, [r6]
   11b80:	bl	114b8 <XML_ExpatVersion@plt>
   11b84:	ldr	r2, [pc, #756]	; 11e80 <XML_DefaultCurrent@plt+0x98c>
   11b88:	mov	r3, r5
   11b8c:	mov	r1, #1
   11b90:	add	r2, pc, r2
   11b94:	str	r0, [sp]
   11b98:	mov	r0, r4
   11b9c:	bl	11428 <__fprintf_chk@plt>
   11ba0:	cmp	r7, #0
   11ba4:	beq	11bb4 <XML_DefaultCurrent@plt+0x6c0>
   11ba8:	ldr	r3, [r7]
   11bac:	cmp	r3, #0
   11bb0:	bne	11bf4 <XML_DefaultCurrent@plt+0x700>
   11bb4:	mov	r0, #0
   11bb8:	add	sp, sp, #68	; 0x44
   11bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bc0:	add	r3, r3, #1
   11bc4:	mov	r8, #116	; 0x74
   11bc8:	b	11780 <XML_DefaultCurrent@plt+0x28c>
   11bcc:	mov	r2, #1
   11bd0:	add	r3, r3, #1
   11bd4:	str	r2, [sp, #32]
   11bd8:	b	11780 <XML_DefaultCurrent@plt+0x28c>
   11bdc:	bic	r9, r9, #1
   11be0:	add	r3, r3, #1
   11be4:	b	11780 <XML_DefaultCurrent@plt+0x28c>
   11be8:	ldr	r0, [r1]
   11bec:	mov	r1, #2
   11bf0:	bl	1228c <XML_DefaultCurrent@plt+0xd98>
   11bf4:	ldr	r0, [r7, #4]
   11bf8:	ldr	r1, [r6]
   11bfc:	bl	114d0 <fputs@plt>
   11c00:	ldr	r3, [r7, #8]
   11c04:	cmp	r3, #0
   11c08:	bne	11dbc <XML_DefaultCurrent@plt+0x8c8>
   11c0c:	ldr	r3, [r7, #12]
   11c10:	add	r4, r7, #12
   11c14:	cmp	r3, #0
   11c18:	beq	11da0 <XML_DefaultCurrent@plt+0x8ac>
   11c1c:	ldr	r8, [pc, #608]	; 11e84 <XML_DefaultCurrent@plt+0x990>
   11c20:	add	r5, r7, #24
   11c24:	ldr	r7, [pc, #604]	; 11e88 <XML_DefaultCurrent@plt+0x994>
   11c28:	add	r8, pc, r8
   11c2c:	add	r7, pc, r7
   11c30:	b	11c44 <XML_DefaultCurrent@plt+0x750>
   11c34:	mov	r4, r5
   11c38:	ldr	r3, [r5], #12
   11c3c:	cmp	r3, #0
   11c40:	beq	11da0 <XML_DefaultCurrent@plt+0x8ac>
   11c44:	ldr	r3, [r4, #4]
   11c48:	mov	r1, #1
   11c4c:	ldr	r0, [r6]
   11c50:	mov	r2, r8
   11c54:	bl	11428 <__fprintf_chk@plt>
   11c58:	ldr	r3, [r4, #8]
   11c5c:	cmp	r3, #0
   11c60:	beq	11c34 <XML_DefaultCurrent@plt+0x740>
   11c64:	ldr	r0, [r6]
   11c68:	mov	r1, #1
   11c6c:	mov	r2, r7
   11c70:	bl	11428 <__fprintf_chk@plt>
   11c74:	b	11c34 <XML_DefaultCurrent@plt+0x740>
   11c78:	ldr	sl, [pc, #524]	; 11e8c <XML_DefaultCurrent@plt+0x998>
   11c7c:	mov	r6, #5
   11c80:	add	sl, pc, sl
   11c84:	b	11878 <XML_DefaultCurrent@plt+0x384>
   11c88:	ldr	r1, [pc, #512]	; 11e90 <XML_DefaultCurrent@plt+0x99c>
   11c8c:	mov	r0, r4
   11c90:	mov	r2, #0
   11c94:	add	r1, pc, r1
   11c98:	bl	11218 <XML_SetUnknownEncodingHandler@plt>
   11c9c:	b	119d8 <XML_DefaultCurrent@plt+0x4e4>
   11ca0:	ldr	r3, [sp, #24]
   11ca4:	mov	r0, r4
   11ca8:	cmp	r3, #0
   11cac:	ldrne	r1, [sp, #56]	; 0x38
   11cb0:	ldreq	r1, [sp, #48]	; 0x30
   11cb4:	ldrne	r2, [sp, #60]	; 0x3c
   11cb8:	ldreq	r2, [sp, #52]	; 0x34
   11cbc:	bl	11488 <XML_SetElementHandler@plt>
   11cc0:	ldr	r1, [pc, #460]	; 11e94 <XML_DefaultCurrent@plt+0x9a0>
   11cc4:	mov	r0, r4
   11cc8:	add	r1, pc, r1
   11ccc:	bl	112fc <XML_SetCharacterDataHandler@plt>
   11cd0:	ldr	r1, [pc, #448]	; 11e98 <XML_DefaultCurrent@plt+0x9a4>
   11cd4:	mov	r0, r4
   11cd8:	add	r1, pc, r1
   11cdc:	bl	11464 <XML_SetProcessingInstructionHandler@plt>
   11ce0:	b	119cc <XML_DefaultCurrent@plt+0x4d8>
   11ce4:	mov	r0, r4
   11ce8:	bl	113f8 <XML_UseParserAsHandlerArg@plt>
   11cec:	ldr	r1, [pc, #424]	; 11e9c <XML_DefaultCurrent@plt+0x9a8>
   11cf0:	mov	r0, r4
   11cf4:	add	r1, pc, r1
   11cf8:	bl	1132c <XML_SetDefaultHandler@plt>
   11cfc:	ldr	r1, [pc, #412]	; 11ea0 <XML_DefaultCurrent@plt+0x9ac>
   11d00:	ldr	r2, [pc, #412]	; 11ea4 <XML_DefaultCurrent@plt+0x9b0>
   11d04:	mov	r0, r4
   11d08:	add	r1, pc, r1
   11d0c:	add	r2, pc, r2
   11d10:	bl	11488 <XML_SetElementHandler@plt>
   11d14:	ldr	r1, [pc, #396]	; 11ea8 <XML_DefaultCurrent@plt+0x9b4>
   11d18:	mov	r0, r4
   11d1c:	add	r1, pc, r1
   11d20:	bl	112fc <XML_SetCharacterDataHandler@plt>
   11d24:	ldr	r1, [pc, #384]	; 11eac <XML_DefaultCurrent@plt+0x9b8>
   11d28:	mov	r0, r4
   11d2c:	add	r1, pc, r1
   11d30:	bl	11464 <XML_SetProcessingInstructionHandler@plt>
   11d34:	b	119cc <XML_DefaultCurrent@plt+0x4d8>
   11d38:	ldr	r2, [sp, #44]	; 0x2c
   11d3c:	mov	r0, r4
   11d40:	ldr	r1, [sp, #40]	; 0x28
   11d44:	mov	r6, #0
   11d48:	bl	11488 <XML_SetElementHandler@plt>
   11d4c:	ldr	r1, [pc, #348]	; 11eb0 <XML_DefaultCurrent@plt+0x9bc>
   11d50:	mov	r0, r4
   11d54:	mov	sl, r6
   11d58:	add	r1, pc, r1
   11d5c:	mov	r7, r6
   11d60:	bl	112fc <XML_SetCharacterDataHandler@plt>
   11d64:	ldr	r1, [pc, #328]	; 11eb4 <XML_DefaultCurrent@plt+0x9c0>
   11d68:	mov	r0, r4
   11d6c:	add	r1, pc, r1
   11d70:	bl	11464 <XML_SetProcessingInstructionHandler@plt>
   11d74:	b	119cc <XML_DefaultCurrent@plt+0x4d8>
   11d78:	mov	r6, r7
   11d7c:	mov	sl, r7
   11d80:	b	119cc <XML_DefaultCurrent@plt+0x4d8>
   11d84:	ldr	r0, [pc, #300]	; 11eb8 <XML_DefaultCurrent@plt+0x9c4>
   11d88:	mov	r1, #1
   11d8c:	mov	r2, #12
   11d90:	ldr	r3, [r4]
   11d94:	add	r0, pc, r0
   11d98:	bl	11344 <fwrite@plt>
   11d9c:	b	11a08 <XML_DefaultCurrent@plt+0x514>
   11da0:	ldr	r1, [r6]
   11da4:	mov	r0, #10
   11da8:	bl	11494 <fputc@plt>
   11dac:	b	11bb4 <XML_DefaultCurrent@plt+0x6c0>
   11db0:	str	r9, [sp, #20]
   11db4:	str	r3, [sp, #12]
   11db8:	b	117b8 <XML_DefaultCurrent@plt+0x2c4>
   11dbc:	ldr	r2, [pc, #248]	; 11ebc <XML_DefaultCurrent@plt+0x9c8>
   11dc0:	mov	r1, #1
   11dc4:	ldr	r0, [r6]
   11dc8:	add	r2, pc, r2
   11dcc:	bl	11428 <__fprintf_chk@plt>
   11dd0:	b	11c0c <XML_DefaultCurrent@plt+0x718>
   11dd4:	mov	r3, #0
   11dd8:	mov	r2, #1
   11ddc:	str	r3, [sp, #8]
   11de0:	mov	r8, r3
   11de4:	str	r2, [sp, #20]
   11de8:	mov	r7, r3
   11dec:	str	r3, [sp, #32]
   11df0:	mov	r5, r2
   11df4:	str	r3, [sp, #24]
   11df8:	str	r3, [sp, #36]	; 0x24
   11dfc:	str	r3, [sp, #28]
   11e00:	b	1178c <XML_DefaultCurrent@plt+0x298>
   11e04:	bl	114a0 <remove@plt>
   11e08:	mov	r0, #2
   11e0c:	bl	113b0 <exit@plt>
   11e10:	mov	r0, r6
   11e14:	bl	11308 <perror@plt>
   11e18:	mov	r0, #1
   11e1c:	bl	113b0 <exit@plt>
   11e20:	andeq	r2, r1, r4, ror #21
   11e24:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11e28:	andeq	r0, r0, r0, ror #19
   11e2c:	andeq	r1, r0, r8, ror r0
   11e30:	andeq	r0, r0, r8, lsl #20
   11e34:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11e38:	andeq	r0, r0, ip, ror #15
   11e3c:	muleq	r0, r4, r3
   11e40:	andeq	r1, r0, r4, ror #14
   11e44:	andeq	r1, r0, r0, lsl r7
   11e48:	andeq	r1, r0, r8, lsl #13
   11e4c:	andeq	r1, r0, r0, lsl #12
   11e50:	muleq	r0, ip, r5
   11e54:	andeq	r1, r0, r8, asr #10
   11e58:	andeq	r1, r0, r4, asr #9
   11e5c:	andeq	r1, r0, r0, ror #8
   11e60:	andeq	r1, r0, ip, lsl #8
   11e64:	andeq	r1, r0, ip, lsl r2
   11e68:	andeq	r1, r0, r8, asr #2
   11e6c:	andeq	r0, r0, ip, lsr #26
   11e70:	andeq	r0, r0, ip, ror #25
   11e74:	muleq	r0, r8, r2
   11e78:	muleq	r0, r4, r5
   11e7c:	andeq	r0, r0, r4, lsr #2
   11e80:	andeq	r2, r0, r4, lsr #1
   11e84:	andeq	r2, r0, r4, lsr #32
   11e88:	andeq	r2, r0, r8, lsl r0
   11e8c:	andeq	r1, r0, ip, lsr #31
   11e90:	andeq	r0, r0, r0, ror r3
   11e94:	andeq	r0, r0, r0, lsl #12
   11e98:	andeq	r0, r0, r8, ror r4
   11e9c:	andeq	r0, r0, ip, lsr #8
   11ea0:	andeq	r0, r0, r0, asr #26
   11ea4:	andeq	r0, r0, r8, lsr sp
   11ea8:	andeq	r0, r0, r4, lsr #26
   11eac:	andeq	r0, r0, r0, lsl sp
   11eb0:	muleq	r0, r4, r2
   11eb4:	andeq	r0, r0, ip, lsl #5
   11eb8:	ldrdeq	r1, [r0], -r0
   11ebc:	andeq	r1, r0, ip, ror lr
   11ec0:	mov	fp, #0
   11ec4:	mov	lr, #0
   11ec8:	pop	{r1}		; (ldr r1, [sp], #4)
   11ecc:	mov	r2, sp
   11ed0:	push	{r2}		; (str r2, [sp, #-4]!)
   11ed4:	push	{r0}		; (str r0, [sp, #-4]!)
   11ed8:	ldr	ip, [pc, #16]	; 11ef0 <XML_DefaultCurrent@plt+0x9fc>
   11edc:	push	{ip}		; (str ip, [sp, #-4]!)
   11ee0:	ldr	r0, [pc, #12]	; 11ef4 <XML_DefaultCurrent@plt+0xa00>
   11ee4:	ldr	r3, [pc, #12]	; 11ef8 <XML_DefaultCurrent@plt+0xa04>
   11ee8:	bl	11380 <__libc_start_main@plt>
   11eec:	bl	114dc <abort@plt>
   11ef0:	andeq	r3, r1, ip, ror #18
   11ef4:	andeq	r1, r1, r0, lsl #10
   11ef8:	andeq	r3, r1, r8, lsl #18
   11efc:	ldr	r3, [pc, #20]	; 11f18 <XML_DefaultCurrent@plt+0xa24>
   11f00:	ldr	r2, [pc, #20]	; 11f1c <XML_DefaultCurrent@plt+0xa28>
   11f04:	add	r3, pc, r3
   11f08:	ldr	r2, [r3, r2]
   11f0c:	cmp	r2, #0
   11f10:	bxeq	lr
   11f14:	b	11398 <__gmon_start__@plt>
   11f18:	strdeq	r2, [r1], -r4
   11f1c:	andeq	r0, r0, r0, lsr #2
   11f20:	push	{r3, lr}
   11f24:	movw	r0, #16684	; 0x412c
   11f28:	ldr	r3, [pc, #36]	; 11f54 <XML_DefaultCurrent@plt+0xa60>
   11f2c:	movt	r0, #2
   11f30:	rsb	r3, r0, r3
   11f34:	cmp	r3, #6
   11f38:	popls	{r3, pc}
   11f3c:	movw	r3, #0
   11f40:	movt	r3, #0
   11f44:	cmp	r3, #0
   11f48:	popeq	{r3, pc}
   11f4c:	blx	r3
   11f50:	pop	{r3, pc}
   11f54:	andeq	r4, r2, pc, lsr #2
   11f58:	push	{r3, lr}
   11f5c:	movw	r0, #16684	; 0x412c
   11f60:	movw	r3, #16684	; 0x412c
   11f64:	movt	r0, #2
   11f68:	movt	r3, #2
   11f6c:	rsb	r3, r0, r3
   11f70:	asr	r3, r3, #2
   11f74:	add	r3, r3, r3, lsr #31
   11f78:	asrs	r1, r3, #1
   11f7c:	popeq	{r3, pc}
   11f80:	movw	r2, #0
   11f84:	movt	r2, #0
   11f88:	cmp	r2, #0
   11f8c:	popeq	{r3, pc}
   11f90:	blx	r2
   11f94:	pop	{r3, pc}
   11f98:	push	{r4, lr}
   11f9c:	movw	r4, #16684	; 0x412c
   11fa0:	movt	r4, #2
   11fa4:	ldrb	r3, [r4]
   11fa8:	cmp	r3, #0
   11fac:	popne	{r4, pc}
   11fb0:	bl	11f20 <XML_DefaultCurrent@plt+0xa2c>
   11fb4:	mov	r3, #1
   11fb8:	strb	r3, [r4]
   11fbc:	pop	{r4, pc}
   11fc0:	movw	r0, #16124	; 0x3efc
   11fc4:	movt	r0, #2
   11fc8:	push	{r3, lr}
   11fcc:	ldr	r3, [r0]
   11fd0:	cmp	r3, #0
   11fd4:	beq	11fec <XML_DefaultCurrent@plt+0xaf8>
   11fd8:	movw	r3, #0
   11fdc:	movt	r3, #0
   11fe0:	cmp	r3, #0
   11fe4:	beq	11fec <XML_DefaultCurrent@plt+0xaf8>
   11fe8:	blx	r3
   11fec:	pop	{r3, lr}
   11ff0:	b	11f58 <XML_DefaultCurrent@plt+0xa64>
   11ff4:	bx	lr
   11ff8:	bx	lr
   11ffc:	bx	lr
   12000:	bx	lr
   12004:	mov	r0, #0
   12008:	bx	lr
   1200c:	push	{r4, r5, r6, r7, r8, lr}
   12010:	mov	r7, r1
   12014:	ldr	r8, [pc, #240]	; 1210c <XML_DefaultCurrent@plt+0xc18>
   12018:	mov	r6, r2
   1201c:	ldr	r1, [pc, #236]	; 12110 <XML_DefaultCurrent@plt+0xc1c>
   12020:	mov	ip, #87	; 0x57
   12024:	ldr	r5, [pc, #232]	; 12114 <XML_DefaultCurrent@plt+0xc20>
   12028:	add	r8, pc, r8
   1202c:	add	r1, pc, r1
   12030:	mov	r3, #0
   12034:	add	r5, pc, r5
   12038:	ldrb	r4, [r7, r3]
   1203c:	add	r0, r1, #12
   12040:	cmp	ip, r4
   12044:	beq	12054 <XML_DefaultCurrent@plt+0xb60>
   12048:	ldrb	r2, [r3, r8]
   1204c:	cmp	r2, r4
   12050:	bne	120b0 <XML_DefaultCurrent@plt+0xbbc>
   12054:	add	r3, r3, #1
   12058:	ldrb	ip, [r3, r0]
   1205c:	cmp	ip, #0
   12060:	bne	12038 <XML_DefaultCurrent@plt+0xb44>
   12064:	ldrb	r1, [r7, r3]
   12068:	add	r7, r7, r3
   1206c:	cmp	r1, #0
   12070:	beq	120b8 <XML_DefaultCurrent@plt+0xbc4>
   12074:	add	r8, r0, #12
   12078:	mov	r4, ip
   1207c:	b	12094 <XML_DefaultCurrent@plt+0xba0>
   12080:	cmp	r4, #65536	; 0x10000
   12084:	bge	120b0 <XML_DefaultCurrent@plt+0xbbc>
   12088:	ldrb	r1, [r7, #1]!
   1208c:	cmp	r1, #0
   12090:	beq	120bc <XML_DefaultCurrent@plt+0xbc8>
   12094:	mov	r0, r8
   12098:	add	r4, r4, r4, lsl #2
   1209c:	bl	113e0 <strchr@plt>
   120a0:	cmp	r0, #0
   120a4:	rsb	ip, r8, r0
   120a8:	add	r4, ip, r4, lsl #1
   120ac:	bne	12080 <XML_DefaultCurrent@plt+0xb8c>
   120b0:	mov	r0, #0
   120b4:	pop	{r4, r5, r6, r7, r8, pc}
   120b8:	mov	r4, r1
   120bc:	mov	r0, r4
   120c0:	mov	r1, r6
   120c4:	bl	13788 <XML_DefaultCurrent@plt+0x2294>
   120c8:	cmp	r0, #0
   120cc:	beq	120b0 <XML_DefaultCurrent@plt+0xbbc>
   120d0:	ldr	r3, [pc, #64]	; 12118 <XML_DefaultCurrent@plt+0xc24>
   120d4:	mov	r0, #4
   120d8:	ldr	r2, [pc, #60]	; 1211c <XML_DefaultCurrent@plt+0xc28>
   120dc:	add	r2, pc, r2
   120e0:	str	r2, [r6, #1028]	; 0x404
   120e4:	ldr	r3, [r5, r3]
   120e8:	str	r3, [r6, #1032]	; 0x408
   120ec:	bl	11374 <malloc@plt>
   120f0:	cmp	r0, #0
   120f4:	mov	r3, r0
   120f8:	str	r0, [r6, #1024]	; 0x400
   120fc:	beq	120b0 <XML_DefaultCurrent@plt+0xbbc>
   12100:	mov	r0, #1
   12104:	str	r4, [r3]
   12108:	pop	{r4, r5, r6, r7, r8, pc}
   1210c:	andeq	r1, r0, r0, asr r9
   12110:	andeq	r1, r0, ip, asr #18
   12114:	andeq	r1, r1, r4, asr #31
   12118:	andeq	r0, r0, r4, lsl r1
   1211c:	andeq	r0, r0, ip, lsr r0
   12120:	ldr	r0, [r0]
   12124:	b	13790 <XML_DefaultCurrent@plt+0x229c>
   12128:	cmp	r2, #0
   1212c:	push	{r4, r5, r6, lr}
   12130:	mov	r4, r1
   12134:	ldr	r5, [r0]
   12138:	pople	{r4, r5, r6, pc}
   1213c:	add	r6, r1, r2
   12140:	ldrb	r0, [r4], #1
   12144:	mov	r1, r5
   12148:	bl	11338 <_IO_putc@plt>
   1214c:	cmp	r4, r6
   12150:	bne	12140 <XML_DefaultCurrent@plt+0xc4c>
   12154:	pop	{r4, r5, r6, pc}
   12158:	push	{r4, r5, r6, lr}
   1215c:	mov	r4, r0
   12160:	mov	r5, r1
   12164:	mov	r0, #60	; 0x3c
   12168:	mov	r1, r4
   1216c:	mov	r6, r2
   12170:	bl	11338 <_IO_putc@plt>
   12174:	mov	r1, r4
   12178:	mov	r0, #63	; 0x3f
   1217c:	bl	11338 <_IO_putc@plt>
   12180:	mov	r1, r4
   12184:	mov	r0, r5
   12188:	bl	114d0 <fputs@plt>
   1218c:	mov	r1, r4
   12190:	mov	r0, #32
   12194:	bl	11338 <_IO_putc@plt>
   12198:	mov	r1, r4
   1219c:	mov	r0, r6
   121a0:	bl	114d0 <fputs@plt>
   121a4:	mov	r1, r4
   121a8:	mov	r0, #63	; 0x3f
   121ac:	bl	11338 <_IO_putc@plt>
   121b0:	mov	r1, r4
   121b4:	mov	r0, #62	; 0x3e
   121b8:	pop	{r4, r5, r6, lr}
   121bc:	b	11338 <_IO_putc@plt>
   121c0:	push	{r3, r4, r5, lr}
   121c4:	mov	r4, r0
   121c8:	mov	r5, r1
   121cc:	mov	r0, #60	; 0x3c
   121d0:	mov	r1, r4
   121d4:	bl	11338 <_IO_putc@plt>
   121d8:	mov	r1, r4
   121dc:	mov	r0, #47	; 0x2f
   121e0:	bl	11338 <_IO_putc@plt>
   121e4:	mov	r1, r4
   121e8:	mov	r0, r5
   121ec:	bl	114d0 <fputs@plt>
   121f0:	mov	r1, r4
   121f4:	mov	r0, #62	; 0x3e
   121f8:	pop	{r3, r4, r5, lr}
   121fc:	b	11338 <_IO_putc@plt>
   12200:	push	{r4, r5, r6, lr}
   12204:	mov	r4, r0
   12208:	mov	r5, r1
   1220c:	mov	r0, #60	; 0x3c
   12210:	mov	r1, r4
   12214:	bl	11338 <_IO_putc@plt>
   12218:	mov	r1, r4
   1221c:	mov	r0, #47	; 0x2f
   12220:	bl	11338 <_IO_putc@plt>
   12224:	mov	r0, r5
   12228:	mov	r1, #1
   1222c:	bl	11470 <strrchr@plt>
   12230:	subs	r6, r0, #0
   12234:	beq	1226c <XML_DefaultCurrent@plt+0xd78>
   12238:	ldr	r0, [pc, #72]	; 12288 <XML_DefaultCurrent@plt+0xd94>
   1223c:	mov	r3, r4
   12240:	mov	r1, #1
   12244:	mov	r2, #3
   12248:	add	r0, pc, r0
   1224c:	bl	11344 <fwrite@plt>
   12250:	mov	r1, r4
   12254:	add	r0, r6, #1
   12258:	bl	114d0 <fputs@plt>
   1225c:	mov	r1, r4
   12260:	mov	r0, #62	; 0x3e
   12264:	pop	{r4, r5, r6, lr}
   12268:	b	11338 <_IO_putc@plt>
   1226c:	mov	r1, r4
   12270:	mov	r0, r5
   12274:	bl	114d0 <fputs@plt>
   12278:	mov	r1, r4
   1227c:	mov	r0, #62	; 0x3e
   12280:	pop	{r4, r5, r6, lr}
   12284:	b	11338 <_IO_putc@plt>
   12288:	andeq	r1, r0, r4, asr r7
   1228c:	ldr	ip, [pc, #48]	; 122c4 <XML_DefaultCurrent@plt+0xdd0>
   12290:	mov	r3, r0
   12294:	push	{r4, lr}
   12298:	add	ip, pc, ip
   1229c:	ldr	lr, [pc, #36]	; 122c8 <XML_DefaultCurrent@plt+0xdd4>
   122a0:	mov	r4, r1
   122a4:	ldr	r2, [pc, #32]	; 122cc <XML_DefaultCurrent@plt+0xdd8>
   122a8:	mov	r1, #1
   122ac:	ldr	r0, [ip, lr]
   122b0:	add	r2, pc, r2
   122b4:	ldr	r0, [r0]
   122b8:	bl	11428 <__fprintf_chk@plt>
   122bc:	mov	r0, r4
   122c0:	bl	113b0 <exit@plt>
   122c4:	andeq	r1, r1, r0, ror #26
   122c8:	andeq	r0, r0, ip, lsl r1
   122cc:	strdeq	r1, [r0], -r0
   122d0:	cmp	r2, #0
   122d4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122d8:	mov	r5, r0
   122dc:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122e0:	ldr	fp, [pc, #416]	; 12488 <XML_DefaultCurrent@plt+0xf94>
   122e4:	add	r6, r1, r2
   122e8:	ldr	sl, [pc, #412]	; 1248c <XML_DefaultCurrent@plt+0xf98>
   122ec:	mov	r4, r1
   122f0:	ldr	r9, [pc, #408]	; 12490 <XML_DefaultCurrent@plt+0xf9c>
   122f4:	add	fp, pc, fp
   122f8:	ldr	r8, [pc, #404]	; 12494 <XML_DefaultCurrent@plt+0xfa0>
   122fc:	add	sl, pc, sl
   12300:	ldr	r7, [pc, #400]	; 12498 <XML_DefaultCurrent@plt+0xfa4>
   12304:	add	r9, pc, r9
   12308:	add	r8, pc, r8
   1230c:	add	r7, pc, r7
   12310:	ldrb	r3, [r4], #1
   12314:	sub	r2, r3, #9
   12318:	cmp	r2, #53	; 0x35
   1231c:	addls	pc, pc, r2, lsl #2
   12320:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12324:	b	12464 <XML_DefaultCurrent@plt+0xf70>
   12328:	b	12464 <XML_DefaultCurrent@plt+0xf70>
   1232c:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12330:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12334:	b	12464 <XML_DefaultCurrent@plt+0xf70>
   12338:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   1233c:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12340:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12344:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12348:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   1234c:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12350:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12354:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12358:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   1235c:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12360:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12364:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12368:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   1236c:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12370:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12374:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12378:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   1237c:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12380:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12384:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12388:	b	1244c <XML_DefaultCurrent@plt+0xf58>
   1238c:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12390:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12394:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   12398:	b	12434 <XML_DefaultCurrent@plt+0xf40>
   1239c:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123a0:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123a4:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123a8:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123ac:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123b0:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123b4:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123b8:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123bc:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123c0:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123c4:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123c8:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123cc:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123d0:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123d4:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123d8:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123dc:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123e0:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123e4:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123e8:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123ec:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123f0:	b	1241c <XML_DefaultCurrent@plt+0xf28>
   123f4:	b	12478 <XML_DefaultCurrent@plt+0xf84>
   123f8:	b	123fc <XML_DefaultCurrent@plt+0xf08>
   123fc:	mov	r0, r9
   12400:	mov	r1, #1
   12404:	mov	r2, #4
   12408:	mov	r3, r5
   1240c:	bl	11344 <fwrite@plt>
   12410:	cmp	r4, r6
   12414:	bne	12310 <XML_DefaultCurrent@plt+0xe1c>
   12418:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1241c:	mov	r0, r8
   12420:	mov	r1, #1
   12424:	mov	r2, #4
   12428:	mov	r3, r5
   1242c:	bl	11344 <fwrite@plt>
   12430:	b	12410 <XML_DefaultCurrent@plt+0xf1c>
   12434:	mov	r0, r7
   12438:	mov	r1, #1
   1243c:	mov	r2, #5
   12440:	mov	r3, r5
   12444:	bl	11344 <fwrite@plt>
   12448:	b	12410 <XML_DefaultCurrent@plt+0xf1c>
   1244c:	mov	r0, sl
   12450:	mov	r1, #1
   12454:	mov	r2, #6
   12458:	mov	r3, r5
   1245c:	bl	11344 <fwrite@plt>
   12460:	b	12410 <XML_DefaultCurrent@plt+0xf1c>
   12464:	mov	r0, r5
   12468:	mov	r1, #1
   1246c:	mov	r2, fp
   12470:	bl	11428 <__fprintf_chk@plt>
   12474:	b	12410 <XML_DefaultCurrent@plt+0xf1c>
   12478:	mov	r0, r3
   1247c:	mov	r1, r5
   12480:	bl	11338 <_IO_putc@plt>
   12484:	b	12410 <XML_DefaultCurrent@plt+0xf1c>
   12488:	andeq	r1, r0, r0, lsr r7
   1248c:	andeq	r1, r0, r0, lsr #14
   12490:	andeq	r1, r0, r0, lsl r7
   12494:	andeq	r1, r0, r4, lsl #14
   12498:	strdeq	r1, [r0], -r8
   1249c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   124a0:	mov	r5, r0
   124a4:	mov	r4, r1
   124a8:	mov	r0, #61	; 0x3d
   124ac:	mov	r1, r5
   124b0:	ldr	sl, [pc, #468]	; 1268c <XML_DefaultCurrent@plt+0x1198>
   124b4:	bl	11338 <_IO_putc@plt>
   124b8:	mov	r1, r5
   124bc:	mov	r0, #34	; 0x22
   124c0:	ldr	r9, [pc, #456]	; 12690 <XML_DefaultCurrent@plt+0x119c>
   124c4:	bl	11338 <_IO_putc@plt>
   124c8:	ldr	r8, [pc, #452]	; 12694 <XML_DefaultCurrent@plt+0x11a0>
   124cc:	ldr	r7, [pc, #452]	; 12698 <XML_DefaultCurrent@plt+0x11a4>
   124d0:	add	sl, pc, sl
   124d4:	ldr	r6, [pc, #448]	; 1269c <XML_DefaultCurrent@plt+0x11a8>
   124d8:	add	r9, pc, r9
   124dc:	add	r8, pc, r8
   124e0:	sub	r4, r4, #1
   124e4:	add	r7, pc, r7
   124e8:	add	r6, pc, r6
   124ec:	ldrb	r3, [r4, #1]!
   124f0:	cmp	r3, #62	; 0x3e
   124f4:	addls	pc, pc, r3, lsl #2
   124f8:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   124fc:	b	1266c <XML_DefaultCurrent@plt+0x1178>
   12500:	b	1266c <XML_DefaultCurrent@plt+0x1178>
   12504:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12508:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   1250c:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12510:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12514:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12518:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   1251c:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12520:	b	12658 <XML_DefaultCurrent@plt+0x1164>
   12524:	b	12658 <XML_DefaultCurrent@plt+0x1164>
   12528:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   1252c:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12530:	b	12658 <XML_DefaultCurrent@plt+0x1164>
   12534:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12538:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   1253c:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12540:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12544:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12548:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   1254c:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12550:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12554:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12558:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   1255c:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12560:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12564:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12568:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   1256c:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12570:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12574:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12578:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   1257c:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12580:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12584:	b	12640 <XML_DefaultCurrent@plt+0x114c>
   12588:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   1258c:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12590:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   12594:	b	12628 <XML_DefaultCurrent@plt+0x1134>
   12598:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   1259c:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125a0:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125a4:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125a8:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125ac:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125b0:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125b4:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125b8:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125bc:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125c0:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125c4:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125c8:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125cc:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125d0:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125d4:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125d8:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125dc:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125e0:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125e4:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125e8:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125ec:	b	12610 <XML_DefaultCurrent@plt+0x111c>
   125f0:	b	1267c <XML_DefaultCurrent@plt+0x1188>
   125f4:	b	125f8 <XML_DefaultCurrent@plt+0x1104>
   125f8:	mov	r0, r9
   125fc:	mov	r1, #1
   12600:	mov	r2, #4
   12604:	mov	r3, r5
   12608:	bl	11344 <fwrite@plt>
   1260c:	b	124ec <XML_DefaultCurrent@plt+0xff8>
   12610:	mov	r0, r7
   12614:	mov	r1, #1
   12618:	mov	r2, #4
   1261c:	mov	r3, r5
   12620:	bl	11344 <fwrite@plt>
   12624:	b	124ec <XML_DefaultCurrent@plt+0xff8>
   12628:	mov	r0, r6
   1262c:	mov	r1, #1
   12630:	mov	r2, #5
   12634:	mov	r3, r5
   12638:	bl	11344 <fwrite@plt>
   1263c:	b	124ec <XML_DefaultCurrent@plt+0xff8>
   12640:	mov	r0, r8
   12644:	mov	r1, #1
   12648:	mov	r2, #6
   1264c:	mov	r3, r5
   12650:	bl	11344 <fwrite@plt>
   12654:	b	124ec <XML_DefaultCurrent@plt+0xff8>
   12658:	mov	r0, r5
   1265c:	mov	r1, #1
   12660:	mov	r2, sl
   12664:	bl	11428 <__fprintf_chk@plt>
   12668:	b	124ec <XML_DefaultCurrent@plt+0xff8>
   1266c:	mov	r1, r5
   12670:	mov	r0, #34	; 0x22
   12674:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12678:	b	11338 <_IO_putc@plt>
   1267c:	mov	r0, r3
   12680:	mov	r1, r5
   12684:	bl	11338 <_IO_putc@plt>
   12688:	b	124ec <XML_DefaultCurrent@plt+0xff8>
   1268c:	andeq	r1, r0, r4, asr r5
   12690:	andeq	r1, r0, ip, lsr r5
   12694:	andeq	r1, r0, r0, asr #10
   12698:	andeq	r1, r0, r8, lsr #10
   1269c:	andeq	r1, r0, ip, lsl r5
   126a0:	subs	r3, r1, #0
   126a4:	ldr	r0, [r0]
   126a8:	beq	126bc <XML_DefaultCurrent@plt+0x11c8>
   126ac:	ldr	r2, [pc, #32]	; 126d4 <XML_DefaultCurrent@plt+0x11e0>
   126b0:	mov	r1, #1
   126b4:	add	r2, pc, r2
   126b8:	b	11428 <__fprintf_chk@plt>
   126bc:	mov	r3, r0
   126c0:	ldr	r0, [pc, #16]	; 126d8 <XML_DefaultCurrent@plt+0x11e4>
   126c4:	mov	r1, #1
   126c8:	mov	r2, #9
   126cc:	add	r0, pc, r0
   126d0:	b	11344 <fwrite@plt>
   126d4:	andeq	r1, r0, r4, lsl #7
   126d8:	andeq	r1, r0, r0, ror #6
   126dc:	push	{r4, r5, r6, lr}
   126e0:	mov	r6, r1
   126e4:	ldr	r4, [r0]
   126e8:	mov	r5, r2
   126ec:	ldr	r0, [pc, #160]	; 12794 <XML_DefaultCurrent@plt+0x12a0>
   126f0:	mov	r1, #1
   126f4:	mov	r2, #8
   126f8:	add	r0, pc, r0
   126fc:	mov	r3, r4
   12700:	bl	11344 <fwrite@plt>
   12704:	cmp	r6, #0
   12708:	beq	12724 <XML_DefaultCurrent@plt+0x1230>
   1270c:	ldr	r2, [pc, #132]	; 12798 <XML_DefaultCurrent@plt+0x12a4>
   12710:	mov	r3, r6
   12714:	mov	r0, r4
   12718:	mov	r1, #1
   1271c:	add	r2, pc, r2
   12720:	bl	11428 <__fprintf_chk@plt>
   12724:	cmp	r5, #0
   12728:	beq	12778 <XML_DefaultCurrent@plt+0x1284>
   1272c:	ldr	r0, [pc, #104]	; 1279c <XML_DefaultCurrent@plt+0x12a8>
   12730:	mov	r3, r4
   12734:	mov	r1, #1
   12738:	mov	r2, #5
   1273c:	add	r0, pc, r0
   12740:	bl	11344 <fwrite@plt>
   12744:	mov	r0, r5
   12748:	bl	113c8 <strlen@plt>
   1274c:	mov	r1, r5
   12750:	mov	r2, r0
   12754:	mov	r0, r4
   12758:	bl	122d0 <XML_DefaultCurrent@plt+0xddc>
   1275c:	ldr	r0, [pc, #60]	; 127a0 <XML_DefaultCurrent@plt+0x12ac>
   12760:	mov	r3, r4
   12764:	mov	r1, #1
   12768:	add	r0, pc, r0
   1276c:	mov	r2, #4
   12770:	pop	{r4, r5, r6, lr}
   12774:	b	11344 <fwrite@plt>
   12778:	ldr	r0, [pc, #36]	; 127a4 <XML_DefaultCurrent@plt+0x12b0>
   1277c:	mov	r3, r4
   12780:	mov	r1, #1
   12784:	mov	r2, #3
   12788:	add	r0, pc, r0
   1278c:	pop	{r4, r5, r6, lr}
   12790:	b	11344 <fwrite@plt>
   12794:	andeq	r1, r0, r8, asr r3
   12798:	andeq	r1, r0, r0, asr #6
   1279c:	andeq	r1, r0, r0, lsr r3
   127a0:	muleq	r0, ip, r4
   127a4:	muleq	r0, r8, r3
   127a8:	push	{r4, r5, r6, lr}
   127ac:	mov	r5, r0
   127b0:	mov	r6, r1
   127b4:	mov	r0, #60	; 0x3c
   127b8:	mov	r1, r5
   127bc:	mov	r4, r2
   127c0:	bl	11338 <_IO_putc@plt>
   127c4:	mov	r0, r6
   127c8:	mov	r1, r5
   127cc:	bl	114d0 <fputs@plt>
   127d0:	ldr	r3, [r4]
   127d4:	cmp	r3, #0
   127d8:	beq	12854 <XML_DefaultCurrent@plt+0x1360>
   127dc:	add	r3, r4, #4
   127e0:	mov	r1, r3
   127e4:	add	r3, r3, #4
   127e8:	ldr	ip, [r1]
   127ec:	cmp	ip, #0
   127f0:	bne	127e0 <XML_DefaultCurrent@plt+0x12ec>
   127f4:	rsb	r1, r4, r1
   127f8:	asr	r1, r1, #3
   127fc:	cmp	r1, #1
   12800:	ble	12824 <XML_DefaultCurrent@plt+0x1330>
   12804:	ldr	r3, [pc, #88]	; 12864 <XML_DefaultCurrent@plt+0x1370>
   12808:	mov	r0, r4
   1280c:	mov	r2, #8
   12810:	add	r3, pc, r3
   12814:	bl	114ac <qsort@plt>
   12818:	ldr	r3, [r4]
   1281c:	cmp	r3, #0
   12820:	beq	12854 <XML_DefaultCurrent@plt+0x1360>
   12824:	mov	r1, r5
   12828:	mov	r0, #32
   1282c:	bl	11338 <_IO_putc@plt>
   12830:	ldr	r0, [r4]
   12834:	mov	r1, r5
   12838:	bl	114d0 <fputs@plt>
   1283c:	ldr	r1, [r4, #4]
   12840:	mov	r0, r5
   12844:	bl	1249c <XML_DefaultCurrent@plt+0xfa8>
   12848:	ldr	r3, [r4, #8]!
   1284c:	cmp	r3, #0
   12850:	bne	12824 <XML_DefaultCurrent@plt+0x1330>
   12854:	mov	r1, r5
   12858:	mov	r0, #62	; 0x3e
   1285c:	pop	{r4, r5, r6, lr}
   12860:	b	11338 <_IO_putc@plt>
   12864:	andeq	r0, r0, r4, lsl r2
   12868:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1286c:	mov	r4, r0
   12870:	mov	r5, r1
   12874:	mov	r0, #60	; 0x3c
   12878:	mov	r1, r4
   1287c:	mov	r7, r2
   12880:	bl	11338 <_IO_putc@plt>
   12884:	mov	r0, r5
   12888:	mov	r1, #1
   1288c:	bl	11470 <strrchr@plt>
   12890:	subs	r6, r0, #0
   12894:	beq	12a04 <XML_DefaultCurrent@plt+0x1510>
   12898:	ldr	r0, [pc, #376]	; 12a18 <XML_DefaultCurrent@plt+0x1524>
   1289c:	mov	r2, #3
   128a0:	mov	r3, r4
   128a4:	mov	r1, #1
   128a8:	add	r0, pc, r0
   128ac:	bl	11344 <fwrite@plt>
   128b0:	add	r0, r6, #1
   128b4:	mov	r1, r4
   128b8:	mov	r6, #2
   128bc:	bl	114d0 <fputs@plt>
   128c0:	ldr	r0, [pc, #340]	; 12a1c <XML_DefaultCurrent@plt+0x1528>
   128c4:	mov	r1, #1
   128c8:	mov	r2, #9
   128cc:	add	r0, pc, r0
   128d0:	mov	r3, r4
   128d4:	bl	11344 <fwrite@plt>
   128d8:	mov	r0, r4
   128dc:	mov	r1, r5
   128e0:	bl	1249c <XML_DefaultCurrent@plt+0xfa8>
   128e4:	ldr	r5, [r7]
   128e8:	cmp	r5, #0
   128ec:	beq	129f4 <XML_DefaultCurrent@plt+0x1500>
   128f0:	add	r3, r7, #4
   128f4:	mov	r1, r3
   128f8:	add	r3, r3, #4
   128fc:	ldr	ip, [r1]
   12900:	cmp	ip, #0
   12904:	bne	128f4 <XML_DefaultCurrent@plt+0x1400>
   12908:	rsb	r1, r7, r1
   1290c:	asr	r1, r1, #3
   12910:	cmp	r1, #1
   12914:	ble	12938 <XML_DefaultCurrent@plt+0x1444>
   12918:	ldr	r3, [pc, #256]	; 12a20 <XML_DefaultCurrent@plt+0x152c>
   1291c:	mov	r0, r7
   12920:	mov	r2, #8
   12924:	add	r3, pc, r3
   12928:	bl	114ac <qsort@plt>
   1292c:	ldr	r5, [r7]
   12930:	cmp	r5, #0
   12934:	beq	129f4 <XML_DefaultCurrent@plt+0x1500>
   12938:	ldr	sl, [pc, #228]	; 12a24 <XML_DefaultCurrent@plt+0x1530>
   1293c:	ldr	fp, [pc, #228]	; 12a28 <XML_DefaultCurrent@plt+0x1534>
   12940:	add	sl, pc, sl
   12944:	add	fp, pc, fp
   12948:	b	12998 <XML_DefaultCurrent@plt+0x14a4>
   1294c:	bl	11428 <__fprintf_chk@plt>
   12950:	mov	r1, r4
   12954:	add	r0, r8, #1
   12958:	bl	114d0 <fputs@plt>
   1295c:	ldr	r1, [r7, #4]
   12960:	mov	r0, r4
   12964:	bl	1249c <XML_DefaultCurrent@plt+0xfa8>
   12968:	mov	r3, r6
   1296c:	mov	r1, #1
   12970:	mov	r2, fp
   12974:	mov	r0, r4
   12978:	mov	r6, r9
   1297c:	bl	11428 <__fprintf_chk@plt>
   12980:	mov	r1, r5
   12984:	mov	r0, r4
   12988:	bl	1249c <XML_DefaultCurrent@plt+0xfa8>
   1298c:	ldr	r5, [r7, #8]!
   12990:	cmp	r5, #0
   12994:	beq	129f4 <XML_DefaultCurrent@plt+0x1500>
   12998:	mov	r1, #1
   1299c:	mov	r0, r5
   129a0:	add	r9, r6, r1
   129a4:	bl	11470 <strrchr@plt>
   129a8:	mov	r1, r4
   129ac:	mov	r8, r0
   129b0:	mov	r0, #32
   129b4:	bl	11338 <_IO_putc@plt>
   129b8:	cmp	r8, #0
   129bc:	mov	r3, r6
   129c0:	mov	r2, sl
   129c4:	mov	r1, #1
   129c8:	mov	r0, r4
   129cc:	bne	1294c <XML_DefaultCurrent@plt+0x1458>
   129d0:	mov	r0, r5
   129d4:	mov	r1, r4
   129d8:	bl	114d0 <fputs@plt>
   129dc:	ldr	r1, [r7, #4]
   129e0:	mov	r0, r4
   129e4:	bl	1249c <XML_DefaultCurrent@plt+0xfa8>
   129e8:	ldr	r5, [r7, #8]!
   129ec:	cmp	r5, #0
   129f0:	bne	12998 <XML_DefaultCurrent@plt+0x14a4>
   129f4:	mov	r1, r4
   129f8:	mov	r0, #62	; 0x3e
   129fc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a00:	b	11338 <_IO_putc@plt>
   12a04:	mov	r0, r5
   12a08:	mov	r1, r4
   12a0c:	bl	114d0 <fputs@plt>
   12a10:	mov	r6, #1
   12a14:	b	128e4 <XML_DefaultCurrent@plt+0x13f0>
   12a18:	strdeq	r1, [r0], -r4
   12a1c:	andeq	r1, r0, r8, lsr #3
   12a20:	andeq	r0, r0, ip, lsl #2
   12a24:	andeq	r1, r0, r0, asr #2
   12a28:	andeq	r1, r0, r4, asr #2
   12a2c:	ldr	r0, [r0]
   12a30:	ldr	r1, [r1]
   12a34:	b	11230 <strcmp@plt>
   12a38:	ldr	r0, [r0]
   12a3c:	ldr	r1, [r1]
   12a40:	b	11230 <strcmp@plt>
   12a44:	b	114f4 <XML_DefaultCurrent@plt>
   12a48:	b	114f4 <XML_DefaultCurrent@plt>
   12a4c:	b	114f4 <XML_DefaultCurrent@plt>
   12a50:	b	114f4 <XML_DefaultCurrent@plt>
   12a54:	push	{r4, r5, r6, r7, r8, lr}
   12a58:	sub	sp, sp, #16
   12a5c:	mov	r4, r0
   12a60:	bl	1129c <XML_GetBase@plt>
   12a64:	subs	r3, r0, #0
   12a68:	beq	12a80 <XML_DefaultCurrent@plt+0x158c>
   12a6c:	ldr	r2, [pc, #104]	; 12adc <XML_DefaultCurrent@plt+0x15e8>
   12a70:	mov	r1, #1
   12a74:	ldr	r0, [r4]
   12a78:	add	r2, pc, r2
   12a7c:	bl	11428 <__fprintf_chk@plt>
   12a80:	mov	r0, r4
   12a84:	ldr	r5, [r4]
   12a88:	bl	11248 <XML_GetCurrentByteIndex@plt>
   12a8c:	mov	r6, r0
   12a90:	mov	r0, r4
   12a94:	bl	114c4 <XML_GetCurrentByteCount@plt>
   12a98:	mov	r8, r0
   12a9c:	mov	r0, r4
   12aa0:	bl	112a8 <XML_GetCurrentLineNumber@plt>
   12aa4:	mov	r7, r0
   12aa8:	mov	r0, r4
   12aac:	bl	112f0 <XML_GetCurrentColumnNumber@plt>
   12ab0:	ldr	r2, [pc, #40]	; 12ae0 <XML_DefaultCurrent@plt+0x15ec>
   12ab4:	str	r8, [sp]
   12ab8:	mov	r3, r6
   12abc:	str	r7, [sp, #4]
   12ac0:	mov	r1, #1
   12ac4:	add	r2, pc, r2
   12ac8:	str	r0, [sp, #8]
   12acc:	mov	r0, r5
   12ad0:	bl	11428 <__fprintf_chk@plt>
   12ad4:	add	sp, sp, #16
   12ad8:	pop	{r4, r5, r6, r7, r8, pc}
   12adc:	andeq	r1, r0, ip, lsl r0
   12ae0:	ldrdeq	r0, [r0], -ip
   12ae4:	push	{r4, r5, r6, r7, r8, lr}
   12ae8:	mov	r6, r0
   12aec:	ldr	r4, [r0]
   12af0:	mov	r5, r3
   12af4:	ldr	r2, [pc, #156]	; 12b98 <XML_DefaultCurrent@plt+0x16a4>
   12af8:	mov	r3, r1
   12afc:	ldr	r7, [sp, #24]
   12b00:	mov	r1, #1
   12b04:	add	r2, pc, r2
   12b08:	mov	r0, r4
   12b0c:	bl	11428 <__fprintf_chk@plt>
   12b10:	cmp	r7, #0
   12b14:	beq	12b30 <XML_DefaultCurrent@plt+0x163c>
   12b18:	ldr	r2, [pc, #124]	; 12b9c <XML_DefaultCurrent@plt+0x16a8>
   12b1c:	mov	r3, r7
   12b20:	mov	r0, r4
   12b24:	mov	r1, #1
   12b28:	add	r2, pc, r2
   12b2c:	bl	11428 <__fprintf_chk@plt>
   12b30:	cmp	r5, #0
   12b34:	beq	12b74 <XML_DefaultCurrent@plt+0x1680>
   12b38:	ldr	r0, [pc, #96]	; 12ba0 <XML_DefaultCurrent@plt+0x16ac>
   12b3c:	mov	r1, #1
   12b40:	mov	r2, #9
   12b44:	mov	r3, r4
   12b48:	add	r0, pc, r0
   12b4c:	bl	11344 <fwrite@plt>
   12b50:	mov	r0, r5
   12b54:	bl	113c8 <strlen@plt>
   12b58:	mov	r1, r5
   12b5c:	mov	r2, r0
   12b60:	mov	r0, r4
   12b64:	bl	122d0 <XML_DefaultCurrent@plt+0xddc>
   12b68:	mov	r0, #34	; 0x22
   12b6c:	mov	r1, r4
   12b70:	bl	11338 <_IO_putc@plt>
   12b74:	mov	r0, r6
   12b78:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   12b7c:	ldr	r0, [pc, #32]	; 12ba4 <XML_DefaultCurrent@plt+0x16b0>
   12b80:	mov	r3, r4
   12b84:	mov	r1, #1
   12b88:	add	r0, pc, r0
   12b8c:	mov	r2, #3
   12b90:	pop	{r4, r5, r6, r7, r8, lr}
   12b94:	b	11344 <fwrite@plt>
   12b98:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12b9c:	andeq	r0, r0, r0, asr #31
   12ba0:			; <UNDEFINED> instruction: 0x00000fb0
   12ba4:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   12ba8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bac:	subs	sl, r3, #0
   12bb0:	ldr	r4, [r0]
   12bb4:	mov	r5, r0
   12bb8:	mov	r3, r1
   12bbc:	ldr	r9, [sp, #32]
   12bc0:	ldr	r6, [sp, #40]	; 0x28
   12bc4:	mov	r1, #1
   12bc8:	ldr	r8, [sp, #44]	; 0x2c
   12bcc:	mov	r0, r4
   12bd0:	ldr	r7, [sp, #48]	; 0x30
   12bd4:	beq	12c24 <XML_DefaultCurrent@plt+0x1730>
   12bd8:	ldr	r2, [pc, #380]	; 12d5c <XML_DefaultCurrent@plt+0x1868>
   12bdc:	add	r2, pc, r2
   12be0:	bl	11428 <__fprintf_chk@plt>
   12be4:	mov	r0, r5
   12be8:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   12bec:	mov	r1, r4
   12bf0:	mov	r0, #62	; 0x3e
   12bf4:	bl	11338 <_IO_putc@plt>
   12bf8:	mov	r0, r4
   12bfc:	mov	r1, sl
   12c00:	mov	r2, r9
   12c04:	bl	122d0 <XML_DefaultCurrent@plt+0xddc>
   12c08:	ldr	r0, [pc, #336]	; 12d60 <XML_DefaultCurrent@plt+0x186c>
   12c0c:	mov	r3, r4
   12c10:	mov	r1, #1
   12c14:	add	r0, pc, r0
   12c18:	mov	r2, #11
   12c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c20:	b	11344 <fwrite@plt>
   12c24:	cmp	r7, #0
   12c28:	beq	12cd0 <XML_DefaultCurrent@plt+0x17dc>
   12c2c:	ldr	r2, [pc, #304]	; 12d64 <XML_DefaultCurrent@plt+0x1870>
   12c30:	add	r2, pc, r2
   12c34:	bl	11428 <__fprintf_chk@plt>
   12c38:	cmp	r8, #0
   12c3c:	beq	12c58 <XML_DefaultCurrent@plt+0x1764>
   12c40:	ldr	r2, [pc, #288]	; 12d68 <XML_DefaultCurrent@plt+0x1874>
   12c44:	mov	r3, r8
   12c48:	mov	r0, r4
   12c4c:	mov	r1, #1
   12c50:	add	r2, pc, r2
   12c54:	bl	11428 <__fprintf_chk@plt>
   12c58:	ldr	r0, [pc, #268]	; 12d6c <XML_DefaultCurrent@plt+0x1878>
   12c5c:	mov	r3, r4
   12c60:	mov	r1, #1
   12c64:	mov	r2, #9
   12c68:	add	r0, pc, r0
   12c6c:	bl	11344 <fwrite@plt>
   12c70:	mov	r0, r6
   12c74:	bl	113c8 <strlen@plt>
   12c78:	mov	r1, r6
   12c7c:	mov	r2, r0
   12c80:	mov	r0, r4
   12c84:	bl	122d0 <XML_DefaultCurrent@plt+0xddc>
   12c88:	mov	r1, r4
   12c8c:	mov	r0, #34	; 0x22
   12c90:	bl	11338 <_IO_putc@plt>
   12c94:	ldr	r2, [pc, #212]	; 12d70 <XML_DefaultCurrent@plt+0x187c>
   12c98:	mov	r3, r7
   12c9c:	mov	r1, #1
   12ca0:	add	r2, pc, r2
   12ca4:	mov	r0, r4
   12ca8:	bl	11428 <__fprintf_chk@plt>
   12cac:	mov	r0, r5
   12cb0:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   12cb4:	ldr	r0, [pc, #184]	; 12d74 <XML_DefaultCurrent@plt+0x1880>
   12cb8:	mov	r3, r4
   12cbc:	mov	r1, #1
   12cc0:	add	r0, pc, r0
   12cc4:	mov	r2, #3
   12cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ccc:	b	11344 <fwrite@plt>
   12cd0:	ldr	r2, [pc, #160]	; 12d78 <XML_DefaultCurrent@plt+0x1884>
   12cd4:	add	r2, pc, r2
   12cd8:	bl	11428 <__fprintf_chk@plt>
   12cdc:	cmp	r8, #0
   12ce0:	beq	12cfc <XML_DefaultCurrent@plt+0x1808>
   12ce4:	ldr	r2, [pc, #144]	; 12d7c <XML_DefaultCurrent@plt+0x1888>
   12ce8:	mov	r3, r8
   12cec:	mov	r0, r4
   12cf0:	mov	r1, #1
   12cf4:	add	r2, pc, r2
   12cf8:	bl	11428 <__fprintf_chk@plt>
   12cfc:	ldr	r0, [pc, #124]	; 12d80 <XML_DefaultCurrent@plt+0x188c>
   12d00:	mov	r3, r4
   12d04:	mov	r1, #1
   12d08:	mov	r2, #9
   12d0c:	add	r0, pc, r0
   12d10:	bl	11344 <fwrite@plt>
   12d14:	mov	r0, r6
   12d18:	bl	113c8 <strlen@plt>
   12d1c:	mov	r1, r6
   12d20:	mov	r2, r0
   12d24:	mov	r0, r4
   12d28:	bl	122d0 <XML_DefaultCurrent@plt+0xddc>
   12d2c:	mov	r1, r4
   12d30:	mov	r0, #34	; 0x22
   12d34:	bl	11338 <_IO_putc@plt>
   12d38:	mov	r0, r5
   12d3c:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   12d40:	ldr	r0, [pc, #60]	; 12d84 <XML_DefaultCurrent@plt+0x1890>
   12d44:	mov	r3, r4
   12d48:	mov	r1, #1
   12d4c:	add	r0, pc, r0
   12d50:	mov	r2, #3
   12d54:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d58:	b	11344 <fwrite@plt>
   12d5c:	andeq	r0, r0, r8, lsr #30
   12d60:	andeq	r0, r0, r4, lsl #30
   12d64:	ldrdeq	r0, [r0], -r4
   12d68:	muleq	r0, r8, lr
   12d6c:	muleq	r0, r0, lr
   12d70:	andeq	r0, r0, r4, lsl #29
   12d74:	andeq	r0, r0, r0, ror #28
   12d78:	andeq	r0, r0, r0, lsr lr
   12d7c:	strdeq	r0, [r0], -r4
   12d80:	andeq	r0, r0, ip, ror #27
   12d84:	ldrdeq	r0, [r0], -r4
   12d88:	push	{r4, r5, r6, lr}
   12d8c:	mov	r5, r0
   12d90:	ldr	r4, [r0]
   12d94:	mov	r1, #1
   12d98:	ldr	r0, [pc, #48]	; 12dd0 <XML_DefaultCurrent@plt+0x18dc>
   12d9c:	mov	r2, #11
   12da0:	mov	r3, r4
   12da4:	add	r0, pc, r0
   12da8:	bl	11344 <fwrite@plt>
   12dac:	mov	r0, r5
   12db0:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   12db4:	ldr	r0, [pc, #24]	; 12dd4 <XML_DefaultCurrent@plt+0x18e0>
   12db8:	mov	r3, r4
   12dbc:	mov	r1, #1
   12dc0:	add	r0, pc, r0
   12dc4:	mov	r2, #3
   12dc8:	pop	{r4, r5, r6, lr}
   12dcc:	b	11344 <fwrite@plt>
   12dd0:	muleq	r0, r0, sp
   12dd4:	andeq	r0, r0, r0, ror #26
   12dd8:	push	{r4, r5, r6, lr}
   12ddc:	mov	r3, r1
   12de0:	ldr	r4, [r0]
   12de4:	mov	r5, r0
   12de8:	ldr	r2, [pc, #48]	; 12e20 <XML_DefaultCurrent@plt+0x192c>
   12dec:	mov	r1, #1
   12df0:	add	r2, pc, r2
   12df4:	mov	r0, r4
   12df8:	bl	11428 <__fprintf_chk@plt>
   12dfc:	mov	r0, r5
   12e00:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   12e04:	ldr	r0, [pc, #24]	; 12e24 <XML_DefaultCurrent@plt+0x1930>
   12e08:	mov	r3, r4
   12e0c:	mov	r1, #1
   12e10:	add	r0, pc, r0
   12e14:	mov	r2, #3
   12e18:	pop	{r4, r5, r6, lr}
   12e1c:	b	11344 <fwrite@plt>
   12e20:	andeq	r0, r0, r0, asr sp
   12e24:	andeq	r0, r0, r0, lsl sp
   12e28:	push	{r4, r5, r6, r7, r8, lr}
   12e2c:	mov	r5, r0
   12e30:	ldr	r4, [r0]
   12e34:	mov	r7, r1
   12e38:	ldr	r0, [pc, #84]	; 12e94 <XML_DefaultCurrent@plt+0x19a0>
   12e3c:	mov	r6, r2
   12e40:	mov	r1, #1
   12e44:	mov	r2, #12
   12e48:	mov	r3, r4
   12e4c:	add	r0, pc, r0
   12e50:	bl	11344 <fwrite@plt>
   12e54:	mov	r2, r6
   12e58:	mov	r0, r4
   12e5c:	mov	r1, r7
   12e60:	bl	122d0 <XML_DefaultCurrent@plt+0xddc>
   12e64:	mov	r1, r4
   12e68:	mov	r0, #34	; 0x22
   12e6c:	bl	11338 <_IO_putc@plt>
   12e70:	mov	r0, r5
   12e74:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   12e78:	ldr	r0, [pc, #24]	; 12e98 <XML_DefaultCurrent@plt+0x19a4>
   12e7c:	mov	r3, r4
   12e80:	mov	r1, #1
   12e84:	add	r0, pc, r0
   12e88:	mov	r2, #3
   12e8c:	pop	{r4, r5, r6, r7, r8, lr}
   12e90:	b	11344 <fwrite@plt>
   12e94:	andeq	r0, r0, ip, lsl #26
   12e98:	muleq	r0, ip, ip
   12e9c:	push	{r4, r5, r6, lr}
   12ea0:	mov	r5, r0
   12ea4:	ldr	r4, [r0]
   12ea8:	mov	r1, #1
   12eac:	ldr	r0, [pc, #48]	; 12ee4 <XML_DefaultCurrent@plt+0x19f0>
   12eb0:	mov	r2, #9
   12eb4:	mov	r3, r4
   12eb8:	add	r0, pc, r0
   12ebc:	bl	11344 <fwrite@plt>
   12ec0:	mov	r0, r5
   12ec4:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   12ec8:	ldr	r0, [pc, #24]	; 12ee8 <XML_DefaultCurrent@plt+0x19f4>
   12ecc:	mov	r3, r4
   12ed0:	mov	r1, #1
   12ed4:	add	r0, pc, r0
   12ed8:	mov	r2, #3
   12edc:	pop	{r4, r5, r6, lr}
   12ee0:	b	11344 <fwrite@plt>
   12ee4:			; <UNDEFINED> instruction: 0x00000cb0
   12ee8:	andeq	r0, r0, ip, asr #24
   12eec:	push	{r4, r5, r6, lr}
   12ef0:	mov	r5, r0
   12ef4:	ldr	r4, [r0]
   12ef8:	mov	r1, #1
   12efc:	ldr	r0, [pc, #48]	; 12f34 <XML_DefaultCurrent@plt+0x1a40>
   12f00:	mov	r2, #11
   12f04:	mov	r3, r4
   12f08:	add	r0, pc, r0
   12f0c:	bl	11344 <fwrite@plt>
   12f10:	mov	r0, r5
   12f14:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   12f18:	ldr	r0, [pc, #24]	; 12f38 <XML_DefaultCurrent@plt+0x1a44>
   12f1c:	mov	r3, r4
   12f20:	mov	r1, #1
   12f24:	add	r0, pc, r0
   12f28:	mov	r2, #3
   12f2c:	pop	{r4, r5, r6, lr}
   12f30:	b	11344 <fwrite@plt>
   12f34:	andeq	r0, r0, ip, ror #24
   12f38:	strdeq	r0, [r0], -ip
   12f3c:	push	{r4, r5, r6, lr}
   12f40:	mov	r6, r0
   12f44:	ldr	r4, [r0]
   12f48:	mov	r5, r1
   12f4c:	ldr	r0, [pc, #88]	; 12fac <XML_DefaultCurrent@plt+0x1ab8>
   12f50:	mov	r1, #1
   12f54:	mov	r2, #15
   12f58:	mov	r3, r4
   12f5c:	add	r0, pc, r0
   12f60:	bl	11344 <fwrite@plt>
   12f64:	mov	r0, r5
   12f68:	bl	113c8 <strlen@plt>
   12f6c:	mov	r1, r5
   12f70:	mov	r2, r0
   12f74:	mov	r0, r4
   12f78:	bl	122d0 <XML_DefaultCurrent@plt+0xddc>
   12f7c:	mov	r1, r4
   12f80:	mov	r0, #34	; 0x22
   12f84:	bl	11338 <_IO_putc@plt>
   12f88:	mov	r0, r6
   12f8c:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   12f90:	ldr	r0, [pc, #24]	; 12fb0 <XML_DefaultCurrent@plt+0x1abc>
   12f94:	mov	r3, r4
   12f98:	mov	r1, #1
   12f9c:	add	r0, pc, r0
   12fa0:	mov	r2, #3
   12fa4:	pop	{r4, r5, r6, lr}
   12fa8:	b	11344 <fwrite@plt>
   12fac:	andeq	r0, r0, r4, lsr #24
   12fb0:	andeq	r0, r0, r4, lsl #23
   12fb4:	push	{r4, r5, r6, lr}
   12fb8:	mov	r5, r2
   12fbc:	ldr	r4, [r0]
   12fc0:	mov	r3, r1
   12fc4:	ldr	r2, [pc, #88]	; 13024 <XML_DefaultCurrent@plt+0x1b30>
   12fc8:	mov	r6, r0
   12fcc:	mov	r1, #1
   12fd0:	add	r2, pc, r2
   12fd4:	mov	r0, r4
   12fd8:	bl	11428 <__fprintf_chk@plt>
   12fdc:	mov	r0, r5
   12fe0:	bl	113c8 <strlen@plt>
   12fe4:	mov	r1, r5
   12fe8:	mov	r2, r0
   12fec:	mov	r0, r4
   12ff0:	bl	122d0 <XML_DefaultCurrent@plt+0xddc>
   12ff4:	mov	r1, r4
   12ff8:	mov	r0, #34	; 0x22
   12ffc:	bl	11338 <_IO_putc@plt>
   13000:	mov	r0, r6
   13004:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   13008:	ldr	r0, [pc, #24]	; 13028 <XML_DefaultCurrent@plt+0x1b34>
   1300c:	mov	r3, r4
   13010:	mov	r1, #1
   13014:	add	r0, pc, r0
   13018:	mov	r2, #3
   1301c:	pop	{r4, r5, r6, lr}
   13020:	b	11344 <fwrite@plt>
   13024:	andeq	r0, r0, r0, asr #23
   13028:	andeq	r0, r0, ip, lsl #22
   1302c:	push	{r4, r5, r6, lr}
   13030:	mov	r3, r1
   13034:	ldr	r4, [r0]
   13038:	mov	r5, r0
   1303c:	ldr	r2, [pc, #48]	; 13074 <XML_DefaultCurrent@plt+0x1b80>
   13040:	mov	r1, #1
   13044:	add	r2, pc, r2
   13048:	mov	r0, r4
   1304c:	bl	11428 <__fprintf_chk@plt>
   13050:	mov	r0, r5
   13054:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   13058:	ldr	r0, [pc, #24]	; 13078 <XML_DefaultCurrent@plt+0x1b84>
   1305c:	mov	r3, r4
   13060:	mov	r1, #1
   13064:	add	r0, pc, r0
   13068:	mov	r2, #3
   1306c:	pop	{r4, r5, r6, lr}
   13070:	b	11344 <fwrite@plt>
   13074:	andeq	r0, r0, r4, ror #22
   13078:			; <UNDEFINED> instruction: 0x00000abc
   1307c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13080:	sub	sp, sp, #12
   13084:	mov	r4, r2
   13088:	mov	r8, r1
   1308c:	mov	r7, r0
   13090:	ldr	r5, [r0]
   13094:	bl	1147c <XML_GetSpecifiedAttributeCount@plt>
   13098:	add	r6, r4, r0, lsl #2
   1309c:	mov	r0, r7
   130a0:	bl	11320 <XML_GetIdAttributeIndex@plt>
   130a4:	ldr	r2, [pc, #300]	; 131d8 <XML_DefaultCurrent@plt+0x1ce4>
   130a8:	mov	r3, r8
   130ac:	mov	r1, #1
   130b0:	add	r2, pc, r2
   130b4:	cmp	r0, #0
   130b8:	addge	r9, r4, r0, lsl #2
   130bc:	mov	r0, r5
   130c0:	movlt	r9, #0
   130c4:	bl	11428 <__fprintf_chk@plt>
   130c8:	mov	r0, r7
   130cc:	bl	12a54 <XML_DefaultCurrent@plt+0x1560>
   130d0:	ldr	r3, [r4]
   130d4:	cmp	r3, #0
   130d8:	beq	13190 <XML_DefaultCurrent@plt+0x1c9c>
   130dc:	ldr	r0, [pc, #248]	; 131dc <XML_DefaultCurrent@plt+0x1ce8>
   130e0:	mov	r2, #2
   130e4:	mov	r3, r5
   130e8:	mov	r1, #1
   130ec:	add	r0, pc, r0
   130f0:	ldr	r8, [pc, #232]	; 131e0 <XML_DefaultCurrent@plt+0x1cec>
   130f4:	ldr	fp, [pc, #232]	; 131e4 <XML_DefaultCurrent@plt+0x1cf0>
   130f8:	bl	11344 <fwrite@plt>
   130fc:	ldr	r7, [pc, #228]	; 131e8 <XML_DefaultCurrent@plt+0x1cf4>
   13100:	add	r8, pc, r8
   13104:	ldr	r3, [r4]
   13108:	add	fp, pc, fp
   1310c:	ldr	r2, [pc, #216]	; 131ec <XML_DefaultCurrent@plt+0x1cf8>
   13110:	add	r7, pc, r7
   13114:	add	r2, pc, r2
   13118:	str	r2, [sp, #4]
   1311c:	mov	r1, #1
   13120:	mov	r2, r8
   13124:	mov	r0, r5
   13128:	bl	11428 <__fprintf_chk@plt>
   1312c:	ldr	sl, [r4, #4]
   13130:	mov	r0, sl
   13134:	bl	113c8 <strlen@plt>
   13138:	mov	r1, sl
   1313c:	mov	r2, r0
   13140:	mov	r0, r5
   13144:	bl	122d0 <XML_DefaultCurrent@plt+0xddc>
   13148:	cmp	r6, r4
   1314c:	mov	r0, r7
   13150:	mov	r1, #1
   13154:	mov	r2, #20
   13158:	mov	r3, r5
   1315c:	bhi	131b0 <XML_DefaultCurrent@plt+0x1cbc>
   13160:	bl	11344 <fwrite@plt>
   13164:	ldr	r3, [r4, #8]!
   13168:	cmp	r3, #0
   1316c:	bne	1311c <XML_DefaultCurrent@plt+0x1c28>
   13170:	ldr	r0, [pc, #120]	; 131f0 <XML_DefaultCurrent@plt+0x1cfc>
   13174:	mov	r3, r5
   13178:	mov	r1, #1
   1317c:	mov	r2, #12
   13180:	add	r0, pc, r0
   13184:	add	sp, sp, #12
   13188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1318c:	b	11344 <fwrite@plt>
   13190:	ldr	r0, [pc, #92]	; 131f4 <XML_DefaultCurrent@plt+0x1d00>
   13194:	mov	r3, r5
   13198:	mov	r1, #1
   1319c:	mov	r2, #3
   131a0:	add	r0, pc, r0
   131a4:	add	sp, sp, #12
   131a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131ac:	b	11344 <fwrite@plt>
   131b0:	cmp	r9, r4
   131b4:	mov	r0, fp
   131b8:	mov	r1, #1
   131bc:	mov	r2, #4
   131c0:	mov	r3, r5
   131c4:	bne	13160 <XML_DefaultCurrent@plt+0x1c6c>
   131c8:	ldr	r0, [sp, #4]
   131cc:	mov	r2, #13
   131d0:	bl	11344 <fwrite@plt>
   131d4:	b	13164 <XML_DefaultCurrent@plt+0x1c70>
   131d8:	andeq	r0, r0, ip, lsl #22
   131dc:	andeq	r0, r0, r4, ror #21
   131e0:	ldrdeq	r0, [r0], -r4
   131e4:	strdeq	r0, [r0], -ip
   131e8:	andeq	r0, r0, r4, ror #21
   131ec:	strdeq	r0, [r0], -r8
   131f0:	muleq	r0, ip, sl
   131f4:	andeq	r0, r0, r0, lsl #19
   131f8:	push	{r4, r5, r6, r7, r8, lr}
   131fc:	sub	sp, sp, #16
   13200:	mov	r5, r1
   13204:	mov	r4, r0
   13208:	bl	11224 <XML_GetErrorCode@plt>
   1320c:	mov	r7, r0
   13210:	bl	1144c <XML_ErrorString@plt>
   13214:	ldr	ip, [pc, #128]	; 1329c <XML_DefaultCurrent@plt+0x1da8>
   13218:	add	ip, pc, ip
   1321c:	subs	r6, r0, #0
   13220:	beq	13270 <XML_DefaultCurrent@plt+0x1d7c>
   13224:	ldr	r3, [pc, #116]	; 132a0 <XML_DefaultCurrent@plt+0x1dac>
   13228:	mov	r0, r4
   1322c:	ldr	r3, [ip, r3]
   13230:	ldr	r7, [r3]
   13234:	bl	112a8 <XML_GetCurrentLineNumber@plt>
   13238:	mov	r8, r0
   1323c:	mov	r0, r4
   13240:	bl	112f0 <XML_GetCurrentColumnNumber@plt>
   13244:	ldr	r2, [pc, #88]	; 132a4 <XML_DefaultCurrent@plt+0x1db0>
   13248:	str	r8, [sp]
   1324c:	mov	r3, r5
   13250:	str	r6, [sp, #8]
   13254:	mov	r1, #1
   13258:	add	r2, pc, r2
   1325c:	str	r0, [sp, #4]
   13260:	mov	r0, r7
   13264:	bl	11428 <__fprintf_chk@plt>
   13268:	add	sp, sp, #16
   1326c:	pop	{r4, r5, r6, r7, r8, pc}
   13270:	ldr	r0, [pc, #48]	; 132a8 <XML_DefaultCurrent@plt+0x1db4>
   13274:	mov	r3, r5
   13278:	ldr	r2, [pc, #44]	; 132ac <XML_DefaultCurrent@plt+0x1db8>
   1327c:	mov	r1, #1
   13280:	ldr	r0, [ip, r0]
   13284:	add	r2, pc, r2
   13288:	str	r7, [sp]
   1328c:	ldr	r0, [r0]
   13290:	bl	11428 <__fprintf_chk@plt>
   13294:	add	sp, sp, #16
   13298:	pop	{r4, r5, r6, r7, r8, pc}
   1329c:	andeq	r0, r1, r0, ror #27
   132a0:	andeq	r0, r0, r4, lsr #2
   132a4:	andeq	r0, r0, ip, lsl sl
   132a8:	andeq	r0, r0, ip, lsl r1
   132ac:	andeq	r0, r0, r0, lsl #20
   132b0:	push	{r3, r4, r5, r6, r7, lr}
   132b4:	mov	ip, r3
   132b8:	ldr	r4, [r3]
   132bc:	mov	r3, r1
   132c0:	mov	r6, r2
   132c4:	mov	r1, r0
   132c8:	mov	r2, r3
   132cc:	mov	r3, #1
   132d0:	mov	r0, r4
   132d4:	ldr	r5, [ip, #4]
   132d8:	bl	11368 <XML_Parse@plt>
   132dc:	subs	r7, r0, #0
   132e0:	movne	r3, #1
   132e4:	strne	r3, [r5]
   132e8:	popne	{r3, r4, r5, r6, r7, pc}
   132ec:	mov	r0, r4
   132f0:	mov	r1, r6
   132f4:	bl	131f8 <XML_DefaultCurrent@plt+0x1d04>
   132f8:	str	r7, [r5]
   132fc:	pop	{r3, r4, r5, r6, r7, pc}
   13300:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   13304:	subs	r8, r0, #0
   13308:	ldr	r9, [pc, #348]	; 1346c <XML_DefaultCurrent@plt+0x1f78>
   1330c:	mov	r5, r1
   13310:	add	r9, pc, r9
   13314:	beq	133ac <XML_DefaultCurrent@plt+0x1eb8>
   13318:	mov	r1, #0
   1331c:	bl	113a4 <open@plt>
   13320:	subs	r6, r0, #0
   13324:	bge	1335c <XML_DefaultCurrent@plt+0x1e68>
   13328:	b	13428 <XML_DefaultCurrent@plt+0x1f34>
   1332c:	bl	11260 <read@plt>
   13330:	subs	r1, r0, #0
   13334:	mov	r0, r5
   13338:	movne	r4, #0
   1333c:	moveq	r4, #1
   13340:	mov	r2, r4
   13344:	blt	133b4 <XML_DefaultCurrent@plt+0x1ec0>
   13348:	bl	113bc <XML_ParseBuffer@plt>
   1334c:	subs	r7, r0, #0
   13350:	beq	133d4 <XML_DefaultCurrent@plt+0x1ee0>
   13354:	cmp	r4, #0
   13358:	bne	133f8 <XML_DefaultCurrent@plt+0x1f04>
   1335c:	mov	r1, #8192	; 0x2000
   13360:	mov	r0, r5
   13364:	bl	11200 <XML_GetBuffer@plt>
   13368:	mov	r2, #8192	; 0x2000
   1336c:	subs	r1, r0, #0
   13370:	mov	r0, r6
   13374:	bne	1332c <XML_DefaultCurrent@plt+0x1e38>
   13378:	cmp	r8, #0
   1337c:	beq	13410 <XML_DefaultCurrent@plt+0x1f1c>
   13380:	bl	114e8 <close@plt>
   13384:	ldr	r2, [pc, #228]	; 13470 <XML_DefaultCurrent@plt+0x1f7c>
   13388:	mov	r3, r8
   1338c:	ldr	r2, [r9, r2]
   13390:	ldr	r0, [r2]
   13394:	ldr	r2, [pc, #216]	; 13474 <XML_DefaultCurrent@plt+0x1f80>
   13398:	mov	r1, #1
   1339c:	add	r2, pc, r2
   133a0:	bl	11428 <__fprintf_chk@plt>
   133a4:	mov	r0, #0
   133a8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   133ac:	mov	r6, r8
   133b0:	b	1335c <XML_DefaultCurrent@plt+0x1e68>
   133b4:	cmp	r8, #0
   133b8:	beq	13458 <XML_DefaultCurrent@plt+0x1f64>
   133bc:	mov	r0, r8
   133c0:	bl	11308 <perror@plt>
   133c4:	mov	r0, r6
   133c8:	bl	114e8 <close@plt>
   133cc:	mov	r0, #0
   133d0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   133d4:	cmp	r8, #0
   133d8:	beq	13440 <XML_DefaultCurrent@plt+0x1f4c>
   133dc:	mov	r0, r5
   133e0:	mov	r1, r8
   133e4:	bl	131f8 <XML_DefaultCurrent@plt+0x1d04>
   133e8:	mov	r0, r6
   133ec:	bl	114e8 <close@plt>
   133f0:	mov	r0, r7
   133f4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   133f8:	cmp	r8, #0
   133fc:	beq	13438 <XML_DefaultCurrent@plt+0x1f44>
   13400:	mov	r0, r6
   13404:	bl	114e8 <close@plt>
   13408:	mov	r0, #1
   1340c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13410:	ldr	r2, [pc, #88]	; 13470 <XML_DefaultCurrent@plt+0x1f7c>
   13414:	ldr	r3, [pc, #92]	; 13478 <XML_DefaultCurrent@plt+0x1f84>
   13418:	ldr	r2, [r9, r2]
   1341c:	add	r3, pc, r3
   13420:	ldr	r0, [r2]
   13424:	b	13394 <XML_DefaultCurrent@plt+0x1ea0>
   13428:	mov	r0, r8
   1342c:	bl	11308 <perror@plt>
   13430:	mov	r0, #0
   13434:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13438:	mov	r0, #1
   1343c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13440:	ldr	r1, [pc, #52]	; 1347c <XML_DefaultCurrent@plt+0x1f88>
   13444:	mov	r0, r5
   13448:	add	r1, pc, r1
   1344c:	bl	131f8 <XML_DefaultCurrent@plt+0x1d04>
   13450:	mov	r0, r8
   13454:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13458:	ldr	r0, [pc, #32]	; 13480 <XML_DefaultCurrent@plt+0x1f8c>
   1345c:	add	r0, pc, r0
   13460:	bl	11308 <perror@plt>
   13464:	mov	r0, r8
   13468:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1346c:	andeq	r0, r1, r8, ror #25
   13470:	andeq	r0, r0, ip, lsl r1
   13474:	andeq	r0, r0, ip, lsl #18
   13478:	andeq	r0, r0, r4, lsl #17
   1347c:	andeq	r0, r0, r4, ror #15
   13480:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13484:	push	{r3, r4, r5, r6, r7, lr}
   13488:	mov	r6, r1
   1348c:	mov	r4, r2
   13490:	mov	r7, r0
   13494:	bl	113c8 <strlen@plt>
   13498:	mov	r5, r0
   1349c:	mov	r0, r6
   134a0:	bl	113c8 <strlen@plt>
   134a4:	add	r0, r5, r0
   134a8:	add	r0, r0, #2
   134ac:	bl	11374 <malloc@plt>
   134b0:	cmp	r0, #0
   134b4:	str	r0, [r4]
   134b8:	beq	134f0 <XML_DefaultCurrent@plt+0x1ffc>
   134bc:	mov	r1, r7
   134c0:	bl	1135c <strcpy@plt>
   134c4:	ldr	r5, [r4]
   134c8:	mov	r1, #47	; 0x2f
   134cc:	mov	r0, r5
   134d0:	bl	11470 <strrchr@plt>
   134d4:	mov	r1, r6
   134d8:	cmp	r0, #0
   134dc:	addne	r5, r0, #1
   134e0:	mov	r0, r5
   134e4:	bl	1135c <strcpy@plt>
   134e8:	ldr	r0, [r4]
   134ec:	pop	{r3, r4, r5, r6, r7, pc}
   134f0:	mov	r0, r6
   134f4:	pop	{r3, r4, r5, r6, r7, pc}
   134f8:	ldr	ip, [pc, #192]	; 135c0 <XML_DefaultCurrent@plt+0x20cc>
   134fc:	push	{r4, r5, r6, r7, lr}
   13500:	add	ip, pc, ip
   13504:	ldr	lr, [pc, #184]	; 135c4 <XML_DefaultCurrent@plt+0x20d0>
   13508:	mov	r6, r3
   1350c:	sub	sp, sp, #28
   13510:	mov	r7, r2
   13514:	mov	r2, #0
   13518:	ldr	r5, [ip, lr]
   1351c:	ldr	r3, [r5]
   13520:	str	r3, [sp, #20]
   13524:	bl	1126c <XML_ExternalEntityParserCreate@plt>
   13528:	cmp	r7, #0
   1352c:	mov	r3, #0
   13530:	add	r2, sp, #4
   13534:	str	r3, [sp, #8]
   13538:	str	r2, [sp, #16]
   1353c:	mov	r4, r0
   13540:	str	r0, [sp, #12]
   13544:	beq	13568 <XML_DefaultCurrent@plt+0x2074>
   13548:	ldrb	r3, [r6]
   1354c:	cmp	r3, #47	; 0x2f
   13550:	beq	13568 <XML_DefaultCurrent@plt+0x2074>
   13554:	mov	r1, r6
   13558:	mov	r0, r7
   1355c:	add	r2, sp, #8
   13560:	bl	13484 <XML_DefaultCurrent@plt+0x1f90>
   13564:	mov	r6, r0
   13568:	mov	r1, r6
   1356c:	mov	r0, r4
   13570:	bl	11404 <XML_SetBase@plt>
   13574:	ldr	r1, [pc, #76]	; 135c8 <XML_DefaultCurrent@plt+0x20d4>
   13578:	add	r2, sp, #12
   1357c:	mov	r0, r6
   13580:	add	r1, pc, r1
   13584:	bl	13798 <XML_DefaultCurrent@plt+0x22a4>
   13588:	cmp	r0, #0
   1358c:	streq	r0, [sp, #4]
   13590:	ldr	r0, [sp, #8]
   13594:	bl	11290 <free@plt>
   13598:	mov	r0, r4
   1359c:	bl	11314 <XML_ParserFree@plt>
   135a0:	ldr	r2, [sp, #20]
   135a4:	ldr	r3, [r5]
   135a8:	ldr	r0, [sp, #4]
   135ac:	cmp	r2, r3
   135b0:	bne	135bc <XML_DefaultCurrent@plt+0x20c8>
   135b4:	add	sp, sp, #28
   135b8:	pop	{r4, r5, r6, r7, pc}
   135bc:	bl	112e4 <__stack_chk_fail@plt>
   135c0:	strdeq	r0, [r1], -r8
   135c4:	andeq	r0, r0, r8, lsl r1
   135c8:			; <UNDEFINED> instruction: 0xfffffd28
   135cc:	ldr	ip, [pc, #168]	; 1367c <XML_DefaultCurrent@plt+0x2188>
   135d0:	push	{r4, r5, r6, r7, lr}
   135d4:	add	ip, pc, ip
   135d8:	ldr	lr, [pc, #160]	; 13680 <XML_DefaultCurrent@plt+0x218c>
   135dc:	mov	r6, r3
   135e0:	sub	sp, sp, #12
   135e4:	mov	r7, r2
   135e8:	mov	r2, #0
   135ec:	ldr	r5, [ip, lr]
   135f0:	ldr	r3, [r5]
   135f4:	str	r3, [sp, #4]
   135f8:	bl	1126c <XML_ExternalEntityParserCreate@plt>
   135fc:	cmp	r7, #0
   13600:	mov	r3, #0
   13604:	str	r3, [sp]
   13608:	mov	r4, r0
   1360c:	beq	13630 <XML_DefaultCurrent@plt+0x213c>
   13610:	ldrb	r3, [r6]
   13614:	cmp	r3, #47	; 0x2f
   13618:	beq	13630 <XML_DefaultCurrent@plt+0x213c>
   1361c:	mov	r1, r6
   13620:	mov	r0, r7
   13624:	mov	r2, sp
   13628:	bl	13484 <XML_DefaultCurrent@plt+0x1f90>
   1362c:	mov	r6, r0
   13630:	mov	r1, r6
   13634:	mov	r0, r4
   13638:	bl	11404 <XML_SetBase@plt>
   1363c:	mov	r1, r4
   13640:	mov	r0, r6
   13644:	bl	13300 <XML_DefaultCurrent@plt+0x1e0c>
   13648:	mov	r6, r0
   1364c:	ldr	r0, [sp]
   13650:	bl	11290 <free@plt>
   13654:	mov	r0, r4
   13658:	bl	11314 <XML_ParserFree@plt>
   1365c:	ldr	r2, [sp, #4]
   13660:	ldr	r3, [r5]
   13664:	mov	r0, r6
   13668:	cmp	r2, r3
   1366c:	bne	13678 <XML_DefaultCurrent@plt+0x2184>
   13670:	add	sp, sp, #12
   13674:	pop	{r4, r5, r6, r7, pc}
   13678:	bl	112e4 <__stack_chk_fail@plt>
   1367c:	andeq	r0, r1, r4, lsr #20
   13680:	andeq	r0, r0, r8, lsl r1
   13684:	push	{r4, r5, r6, r7, r8, lr}
   13688:	mov	r4, r2
   1368c:	ldr	r5, [pc, #216]	; 1376c <XML_DefaultCurrent@plt+0x2278>
   13690:	sub	sp, sp, #16
   13694:	ldr	r2, [pc, #212]	; 13770 <XML_DefaultCurrent@plt+0x227c>
   13698:	mov	r7, r0
   1369c:	add	r5, pc, r5
   136a0:	mov	r8, r1
   136a4:	ldr	r6, [r5, r2]
   136a8:	ldr	r2, [r6]
   136ac:	str	r2, [sp, #12]
   136b0:	bl	11404 <XML_SetBase@plt>
   136b4:	cmp	r0, #0
   136b8:	beq	13744 <XML_DefaultCurrent@plt+0x2250>
   136bc:	tst	r4, #2
   136c0:	andeq	r4, r4, #1
   136c4:	beq	136e0 <XML_DefaultCurrent@plt+0x21ec>
   136c8:	ands	r4, r4, #1
   136cc:	beq	13734 <XML_DefaultCurrent@plt+0x2240>
   136d0:	ldr	r1, [pc, #156]	; 13774 <XML_DefaultCurrent@plt+0x2280>
   136d4:	add	r1, pc, r1
   136d8:	mov	r0, r7
   136dc:	bl	112cc <XML_SetExternalEntityRefHandler@plt>
   136e0:	cmp	r4, #0
   136e4:	bne	1370c <XML_DefaultCurrent@plt+0x2218>
   136e8:	mov	r0, r8
   136ec:	mov	r1, r7
   136f0:	bl	13300 <XML_DefaultCurrent@plt+0x1e0c>
   136f4:	ldr	r2, [sp, #12]
   136f8:	ldr	r3, [r6]
   136fc:	cmp	r2, r3
   13700:	bne	13740 <XML_DefaultCurrent@plt+0x224c>
   13704:	add	sp, sp, #16
   13708:	pop	{r4, r5, r6, r7, r8, pc}
   1370c:	add	r2, sp, #16
   13710:	ldr	r1, [pc, #96]	; 13778 <XML_DefaultCurrent@plt+0x2284>
   13714:	mov	r0, r8
   13718:	str	sp, [sp, #8]
   1371c:	str	r7, [r2, #-12]!
   13720:	add	r1, pc, r1
   13724:	bl	13798 <XML_DefaultCurrent@plt+0x22a4>
   13728:	cmp	r0, #0
   1372c:	ldrne	r0, [sp]
   13730:	b	136f4 <XML_DefaultCurrent@plt+0x2200>
   13734:	ldr	r1, [pc, #64]	; 1377c <XML_DefaultCurrent@plt+0x2288>
   13738:	add	r1, pc, r1
   1373c:	b	136d8 <XML_DefaultCurrent@plt+0x21e4>
   13740:	bl	112e4 <__stack_chk_fail@plt>
   13744:	ldr	r0, [pc, #52]	; 13780 <XML_DefaultCurrent@plt+0x228c>
   13748:	mov	r3, r8
   1374c:	ldr	r2, [pc, #48]	; 13784 <XML_DefaultCurrent@plt+0x2290>
   13750:	mov	r1, #1
   13754:	ldr	r0, [r5, r0]
   13758:	add	r2, pc, r2
   1375c:	ldr	r0, [r0]
   13760:	bl	11428 <__fprintf_chk@plt>
   13764:	mov	r0, #1
   13768:	bl	113b0 <exit@plt>
   1376c:	andeq	r0, r1, ip, asr r9
   13770:	andeq	r0, r0, r8, lsl r1
   13774:			; <UNDEFINED> instruction: 0xfffffe1c
   13778:			; <UNDEFINED> instruction: 0xfffffb88
   1377c:			; <UNDEFINED> instruction: 0xfffffe8c
   13780:	andeq	r0, r0, ip, lsl r1
   13784:	andeq	r0, r0, r4, ror #10
   13788:	mov	r0, #0
   1378c:	bx	lr
   13790:	mvn	r0, #0
   13794:	bx	lr
   13798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1379c:	sub	sp, sp, #108	; 0x6c
   137a0:	ldr	r4, [pc, #332]	; 138f4 <XML_DefaultCurrent@plt+0x2400>
   137a4:	mov	r8, r1
   137a8:	ldr	ip, [pc, #328]	; 138f8 <XML_DefaultCurrent@plt+0x2404>
   137ac:	mov	r1, #0
   137b0:	add	r4, pc, r4
   137b4:	mov	r9, r2
   137b8:	mov	r7, r0
   137bc:	ldr	r5, [r4, ip]
   137c0:	ldr	ip, [r5]
   137c4:	str	ip, [sp, #100]	; 0x64
   137c8:	bl	113a4 <open@plt>
   137cc:	subs	r6, r0, #0
   137d0:	blt	138a0 <XML_DefaultCurrent@plt+0x23ac>
   137d4:	mov	r0, #3
   137d8:	mov	r1, r6
   137dc:	add	r2, sp, #8
   137e0:	bl	1138c <__fxstat@plt>
   137e4:	cmp	r0, #0
   137e8:	blt	138d8 <XML_DefaultCurrent@plt+0x23e4>
   137ec:	ldr	r3, [sp, #24]
   137f0:	and	r3, r3, #61440	; 0xf000
   137f4:	cmp	r3, #32768	; 0x8000
   137f8:	bne	13870 <XML_DefaultCurrent@plt+0x237c>
   137fc:	ldr	r4, [sp, #52]	; 0x34
   13800:	cmp	r4, #0
   13804:	beq	138b0 <XML_DefaultCurrent@plt+0x23bc>
   13808:	mov	sl, #0
   1380c:	mov	r1, r4
   13810:	stm	sp, {r6, sl}
   13814:	mov	r0, sl
   13818:	mov	r2, #1
   1381c:	mov	r3, #2
   13820:	bl	113d4 <mmap@plt>
   13824:	cmn	r0, #1
   13828:	mov	fp, r0
   1382c:	beq	138d8 <XML_DefaultCurrent@plt+0x23e4>
   13830:	mov	r2, r7
   13834:	mov	r3, r9
   13838:	mov	r1, r4
   1383c:	blx	r8
   13840:	mov	r1, r4
   13844:	mov	r0, fp
   13848:	bl	11458 <munmap@plt>
   1384c:	mov	r0, r6
   13850:	bl	114e8 <close@plt>
   13854:	mov	r0, #1
   13858:	ldr	r2, [sp, #100]	; 0x64
   1385c:	ldr	r3, [r5]
   13860:	cmp	r2, r3
   13864:	bne	138f0 <XML_DefaultCurrent@plt+0x23fc>
   13868:	add	sp, sp, #108	; 0x6c
   1386c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13870:	mov	r0, r6
   13874:	bl	114e8 <close@plt>
   13878:	ldr	r0, [pc, #124]	; 138fc <XML_DefaultCurrent@plt+0x2408>
   1387c:	ldr	r2, [pc, #124]	; 13900 <XML_DefaultCurrent@plt+0x240c>
   13880:	mov	r3, r7
   13884:	mov	r1, #1
   13888:	ldr	r0, [r4, r0]
   1388c:	add	r2, pc, r2
   13890:	ldr	r0, [r0]
   13894:	bl	11428 <__fprintf_chk@plt>
   13898:	mov	r0, #0
   1389c:	b	13858 <XML_DefaultCurrent@plt+0x2364>
   138a0:	mov	r0, r7
   138a4:	bl	11308 <perror@plt>
   138a8:	mov	r0, #0
   138ac:	b	13858 <XML_DefaultCurrent@plt+0x2364>
   138b0:	ldr	r0, [pc, #76]	; 13904 <XML_DefaultCurrent@plt+0x2410>
   138b4:	mov	r1, r4
   138b8:	mov	r2, r7
   138bc:	mov	r3, r9
   138c0:	add	r0, pc, r0
   138c4:	blx	r8
   138c8:	mov	r0, r6
   138cc:	bl	114e8 <close@plt>
   138d0:	mov	r0, #1
   138d4:	b	13858 <XML_DefaultCurrent@plt+0x2364>
   138d8:	mov	r0, r7
   138dc:	bl	11308 <perror@plt>
   138e0:	mov	r0, r6
   138e4:	bl	114e8 <close@plt>
   138e8:	mov	r0, #0
   138ec:	b	13858 <XML_DefaultCurrent@plt+0x2364>
   138f0:	bl	112e4 <__stack_chk_fail@plt>
   138f4:	andeq	r0, r1, r8, asr #16
   138f8:	andeq	r0, r0, r8, lsl r1
   138fc:	andeq	r0, r0, ip, lsl r1
   13900:	andeq	r0, r0, r4, asr #8
   13904:	andeq	r0, r0, lr, lsl #8
   13908:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1390c:	mov	r7, r0
   13910:	ldr	r6, [pc, #76]	; 13964 <XML_DefaultCurrent@plt+0x2470>
   13914:	mov	r8, r1
   13918:	ldr	r5, [pc, #72]	; 13968 <XML_DefaultCurrent@plt+0x2474>
   1391c:	mov	r9, r2
   13920:	add	r6, pc, r6
   13924:	bl	111c8 <_init@@Base>
   13928:	add	r5, pc, r5
   1392c:	rsb	r6, r5, r6
   13930:	asrs	r6, r6, #2
   13934:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   13938:	sub	r5, r5, #4
   1393c:	mov	r4, #0
   13940:	add	r4, r4, #1
   13944:	ldr	r3, [r5, #4]!
   13948:	mov	r0, r7
   1394c:	mov	r1, r8
   13950:	mov	r2, r9
   13954:	blx	r3
   13958:	cmp	r4, r6
   1395c:	bne	13940 <XML_DefaultCurrent@plt+0x244c>
   13960:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13964:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   13968:	andeq	r0, r1, r4, asr #11
   1396c:	bx	lr

Disassembly of section .fini:

00013970 <_fini@@Base>:
   13970:	push	{r3, lr}
   13974:	pop	{r3, pc}
