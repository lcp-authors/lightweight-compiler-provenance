
centos-preinstalled/tailf:     file format elf32-littlearm


Disassembly of section .init:

00010e84 <.init>:
   10e84:	push	{r3, lr}
   10e88:	bl	11708 <strspn@plt+0x5a0>
   10e8c:	pop	{r3, pc}

Disassembly of section .plt:

00010e90 <calloc@plt-0x14>:
   10e90:	push	{lr}		; (str lr, [sp, #-4]!)
   10e94:	ldr	lr, [pc, #4]	; 10ea0 <calloc@plt-0x4>
   10e98:	add	lr, pc, lr
   10e9c:	ldr	pc, [lr, #8]!
   10ea0:	andeq	r4, r1, r0, ror #2

00010ea4 <calloc@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #20, 20	; 0x14000
   10eac:	ldr	pc, [ip, #352]!	; 0x160

00010eb0 <raise@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #344]!	; 0x158

00010ebc <strcmp@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #336]!	; 0x150

00010ec8 <strtol@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #328]!	; 0x148

00010ed4 <strcspn@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #20, 20	; 0x14000
   10edc:	ldr	pc, [ip, #320]!	; 0x140

00010ee0 <read@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #20, 20	; 0x14000
   10ee8:	ldr	pc, [ip, #312]!	; 0x138

00010eec <fflush@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #20, 20	; 0x14000
   10ef4:	ldr	pc, [ip, #304]!	; 0x130

00010ef8 <memmove@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #20, 20	; 0x14000
   10f00:	ldr	pc, [ip, #296]!	; 0x128

00010f04 <free@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #20, 20	; 0x14000
   10f0c:	ldr	pc, [ip, #288]!	; 0x120

00010f10 <fgets@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #20, 20	; 0x14000
   10f18:	ldr	pc, [ip, #280]!	; 0x118

00010f1c <ferror@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #20, 20	; 0x14000
   10f24:	ldr	pc, [ip, #272]!	; 0x110

00010f28 <_exit@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #20, 20	; 0x14000
   10f30:	ldr	pc, [ip, #264]!	; 0x108

00010f34 <memcpy@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #20, 20	; 0x14000
   10f3c:	ldr	pc, [ip, #256]!	; 0x100

00010f40 <__strtoull_internal@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #20, 20	; 0x14000
   10f48:	ldr	pc, [ip, #248]!	; 0xf8

00010f4c <dcgettext@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #20, 20	; 0x14000
   10f54:	ldr	pc, [ip, #240]!	; 0xf0

00010f58 <__stack_chk_fail@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #20, 20	; 0x14000
   10f60:	ldr	pc, [ip, #232]!	; 0xe8

00010f64 <textdomain@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #20, 20	; 0x14000
   10f6c:	ldr	pc, [ip, #224]!	; 0xe0

00010f70 <__strndup@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #20, 20	; 0x14000
   10f78:	ldr	pc, [ip, #216]!	; 0xd8

00010f7c <err@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #20, 20	; 0x14000
   10f84:	ldr	pc, [ip, #208]!	; 0xd0

00010f88 <__fxstat64@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #20, 20	; 0x14000
   10f90:	ldr	pc, [ip, #200]!	; 0xc8

00010f94 <lseek64@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #20, 20	; 0x14000
   10f9c:	ldr	pc, [ip, #192]!	; 0xc0

00010fa0 <usleep@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #20, 20	; 0x14000
   10fa8:	ldr	pc, [ip, #184]!	; 0xb8

00010fac <__fpending@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #20, 20	; 0x14000
   10fb4:	ldr	pc, [ip, #176]!	; 0xb0

00010fb8 <open64@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #20, 20	; 0x14000
   10fc0:	ldr	pc, [ip, #168]!	; 0xa8

00010fc4 <malloc@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #20, 20	; 0x14000
   10fcc:	ldr	pc, [ip, #160]!	; 0xa0

00010fd0 <__libc_start_main@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #20, 20	; 0x14000
   10fd8:	ldr	pc, [ip, #152]!	; 0x98

00010fdc <__gmon_start__@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #20, 20	; 0x14000
   10fe4:	ldr	pc, [ip, #144]!	; 0x90

00010fe8 <getopt_long@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #20, 20	; 0x14000
   10ff0:	ldr	pc, [ip, #136]!	; 0x88

00010ff4 <__ctype_b_loc@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #20, 20	; 0x14000
   10ffc:	ldr	pc, [ip, #128]!	; 0x80

00011000 <exit@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #20, 20	; 0x14000
   11008:	ldr	pc, [ip, #120]!	; 0x78

0001100c <strtoul@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #20, 20	; 0x14000
   11014:	ldr	pc, [ip, #112]!	; 0x70

00011018 <strlen@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #20, 20	; 0x14000
   11020:	ldr	pc, [ip, #104]!	; 0x68

00011024 <inotify_init@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #20, 20	; 0x14000
   1102c:	ldr	pc, [ip, #96]!	; 0x60

00011030 <strchr@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #20, 20	; 0x14000
   11038:	ldr	pc, [ip, #88]!	; 0x58

0001103c <warnx@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #20, 20	; 0x14000
   11044:	ldr	pc, [ip, #80]!	; 0x50

00011048 <inotify_add_watch@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #20, 20	; 0x14000
   11050:	ldr	pc, [ip, #72]!	; 0x48

00011054 <__errno_location@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #20, 20	; 0x14000
   1105c:	ldr	pc, [ip, #64]!	; 0x40

00011060 <__cxa_atexit@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #20, 20	; 0x14000
   11068:	ldr	pc, [ip, #56]!	; 0x38

0001106c <__vasprintf_chk@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #20, 20	; 0x14000
   11074:	ldr	pc, [ip, #48]!	; 0x30

00011078 <__strdup@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #20, 20	; 0x14000
   11080:	ldr	pc, [ip, #40]!	; 0x28

00011084 <fgetc@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #20, 20	; 0x14000
   1108c:	ldr	pc, [ip, #32]!

00011090 <__printf_chk@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #20, 20	; 0x14000
   11098:	ldr	pc, [ip, #24]!

0001109c <strtod@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #20, 20	; 0x14000
   110a4:	ldr	pc, [ip, #16]!

000110a8 <write@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #20, 20	; 0x14000
   110b0:	ldr	pc, [ip, #8]!

000110b4 <__fprintf_chk@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #20, 20	; 0x14000
   110bc:	ldr	pc, [ip, #0]!

000110c0 <fclose@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #77824	; 0x13000
   110c8:	ldr	pc, [ip, #4088]!	; 0xff8

000110cc <setlocale@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #77824	; 0x13000
   110d4:	ldr	pc, [ip, #4080]!	; 0xff0

000110d8 <errx@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #77824	; 0x13000
   110e0:	ldr	pc, [ip, #4072]!	; 0xfe8

000110e4 <warn@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #77824	; 0x13000
   110ec:	ldr	pc, [ip, #4064]!	; 0xfe0

000110f0 <localeconv@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #77824	; 0x13000
   110f8:	ldr	pc, [ip, #4056]!	; 0xfd8

000110fc <__strtoll_internal@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #77824	; 0x13000
   11104:	ldr	pc, [ip, #4048]!	; 0xfd0

00011108 <fopen64@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #77824	; 0x13000
   11110:	ldr	pc, [ip, #4040]!	; 0xfc8

00011114 <bindtextdomain@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #77824	; 0x13000
   1111c:	ldr	pc, [ip, #4032]!	; 0xfc0

00011120 <__xstat64@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #77824	; 0x13000
   11128:	ldr	pc, [ip, #4024]!	; 0xfb8

0001112c <fputs@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #77824	; 0x13000
   11134:	ldr	pc, [ip, #4016]!	; 0xfb0

00011138 <strncmp@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #77824	; 0x13000
   11140:	ldr	pc, [ip, #4008]!	; 0xfa8

00011144 <abort@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #77824	; 0x13000
   1114c:	ldr	pc, [ip, #4000]!	; 0xfa0

00011150 <close@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #77824	; 0x13000
   11158:	ldr	pc, [ip, #3992]!	; 0xf98

0001115c <__snprintf_chk@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #77824	; 0x13000
   11164:	ldr	pc, [ip, #3984]!	; 0xf90

00011168 <strspn@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #77824	; 0x13000
   11170:	ldr	pc, [ip, #3976]!	; 0xf88

Disassembly of section .text:

00011178 <.text>:
   11178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1117c:	movw	r7, #20760	; 0x5118
   11180:	movt	r7, #2
   11184:	sub	sp, sp, #204	; 0xcc
   11188:	mov	sl, r0
   1118c:	mov	r6, r1
   11190:	ldr	ip, [r7]
   11194:	movw	r1, #17308	; 0x439c
   11198:	mov	r0, #6
   1119c:	movt	r1, #1
   111a0:	mov	r2, #0
   111a4:	mov	r3, #0
   111a8:	str	ip, [sp, #196]	; 0xc4
   111ac:	strd	r2, [sp, #16]
   111b0:	bl	110cc <setlocale@plt>
   111b4:	movw	r0, #16980	; 0x4254
   111b8:	movw	r1, #16992	; 0x4260
   111bc:	movt	r0, #1
   111c0:	movt	r1, #1
   111c4:	bl	11114 <bindtextdomain@plt>
   111c8:	movw	r0, #16980	; 0x4254
   111cc:	movt	r0, #1
   111d0:	bl	10f64 <textdomain@plt>
   111d4:	movw	r0, #6704	; 0x1a30
   111d8:	movt	r0, #1
   111dc:	bl	14088 <strspn@plt+0x2f20>
   111e0:	cmp	sl, #1
   111e4:	ble	113dc <strspn@plt+0x274>
   111e8:	mvn	r9, #0
   111ec:	mov	r4, #1
   111f0:	b	11200 <strspn@plt+0x98>
   111f4:	add	r4, r4, #1
   111f8:	cmp	sl, r4
   111fc:	ble	11280 <strspn@plt+0x118>
   11200:	ldr	r5, [r6, r4, lsl #2]
   11204:	lsl	r8, r4, #2
   11208:	add	fp, r6, r8
   1120c:	ldrsb	r3, [r5]
   11210:	cmp	r3, #45	; 0x2d
   11214:	bne	111f4 <strspn@plt+0x8c>
   11218:	bl	10ff4 <__ctype_b_loc@plt>
   1121c:	ldrsb	r3, [r5, #1]
   11220:	lsl	r3, r3, #1
   11224:	ldr	r2, [r0]
   11228:	ldrh	r3, [r2, r3]
   1122c:	tst	r3, #2048	; 0x800
   11230:	beq	111f4 <strspn@plt+0x8c>
   11234:	mov	r2, #5
   11238:	movw	r1, #17012	; 0x4274
   1123c:	mov	r0, #0
   11240:	movt	r1, #1
   11244:	bl	10f4c <dcgettext@plt>
   11248:	sub	sl, sl, #1
   1124c:	mov	r1, r0
   11250:	add	r0, r5, #1
   11254:	bl	12428 <strspn@plt+0x12c0>
   11258:	cmp	r4, sl
   1125c:	mov	r9, r0
   11260:	beq	11280 <strspn@plt+0x118>
   11264:	rsb	r2, r4, sl
   11268:	add	r1, r8, #4
   1126c:	add	r1, r6, r1
   11270:	mov	r0, fp
   11274:	lsl	r2, r2, #2
   11278:	bl	10ef8 <memmove@plt>
   1127c:	b	111f8 <strspn@plt+0x90>
   11280:	cmp	r9, #0
   11284:	movlt	r9, #10
   11288:	movw	r4, #20784	; 0x5130
   1128c:	movt	r4, #2
   11290:	mov	r5, #0
   11294:	str	r5, [sp]
   11298:	movw	r2, #17076	; 0x42b4
   1129c:	movw	r3, #16580	; 0x40c4
   112a0:	movt	r2, #1
   112a4:	movt	r3, #1
   112a8:	mov	r0, sl
   112ac:	mov	r1, r6
   112b0:	bl	10fe8 <getopt_long@plt>
   112b4:	cmn	r0, #1
   112b8:	beq	113e4 <strspn@plt+0x27c>
   112bc:	sxtb	r0, r0
   112c0:	sub	r0, r0, #78	; 0x4e
   112c4:	cmp	r0, #32
   112c8:	ldrls	pc, [pc, r0, lsl #2]
   112cc:	b	113cc <strspn@plt+0x264>
   112d0:	andeq	r1, r1, r0, lsr #7
   112d4:	andeq	r1, r1, ip, asr #7
   112d8:	andeq	r1, r1, ip, asr #7
   112dc:	andeq	r1, r1, ip, asr #7
   112e0:	andeq	r1, r1, ip, asr #7
   112e4:	andeq	r1, r1, ip, asr #7
   112e8:	andeq	r1, r1, ip, asr #7
   112ec:	andeq	r1, r1, ip, asr #7
   112f0:	andeq	r1, r1, r4, ror #6
   112f4:	andeq	r1, r1, ip, asr #7
   112f8:	andeq	r1, r1, ip, asr #7
   112fc:	andeq	r1, r1, ip, asr #7
   11300:	andeq	r1, r1, ip, asr #7
   11304:	andeq	r1, r1, ip, asr #7
   11308:	andeq	r1, r1, ip, asr #7
   1130c:	andeq	r1, r1, ip, asr #7
   11310:	andeq	r1, r1, ip, asr #7
   11314:	andeq	r1, r1, ip, asr #7
   11318:	andeq	r1, r1, ip, asr #7
   1131c:	andeq	r1, r1, ip, asr #7
   11320:	andeq	r1, r1, ip, asr #7
   11324:	andeq	r1, r1, ip, asr #7
   11328:	andeq	r1, r1, ip, asr #7
   1132c:	andeq	r1, r1, ip, asr #7
   11330:	andeq	r1, r1, ip, asr #7
   11334:	andeq	r1, r1, ip, asr #7
   11338:	andeq	r1, r1, r4, asr r3
   1133c:	andeq	r1, r1, ip, asr #7
   11340:	andeq	r1, r1, ip, asr #7
   11344:	andeq	r1, r1, ip, asr #7
   11348:	andeq	r1, r1, ip, asr #7
   1134c:	andeq	r1, r1, ip, asr #7
   11350:	andeq	r1, r1, r0, lsr #7
   11354:	movw	r3, #20776	; 0x5128
   11358:	movt	r3, #2
   1135c:	ldr	r0, [r3]
   11360:	bl	11800 <strspn@plt+0x698>
   11364:	mov	r2, #5
   11368:	movw	r1, #17044	; 0x4294
   1136c:	mov	r0, #0
   11370:	movt	r1, #1
   11374:	bl	10f4c <dcgettext@plt>
   11378:	movw	r2, #20752	; 0x5110
   1137c:	movt	r2, #2
   11380:	movw	r3, #17056	; 0x42a0
   11384:	movt	r3, #1
   11388:	ldr	r2, [r2]
   1138c:	mov	r1, r0
   11390:	mov	r0, #1
   11394:	bl	11090 <__printf_chk@plt>
   11398:	mov	r0, #0
   1139c:	bl	11000 <exit@plt>
   113a0:	mov	r2, #5
   113a4:	movw	r1, #17012	; 0x4274
   113a8:	mov	r0, #0
   113ac:	movt	r1, #1
   113b0:	ldr	r8, [r4]
   113b4:	bl	10f4c <dcgettext@plt>
   113b8:	mov	r1, r0
   113bc:	mov	r0, r8
   113c0:	bl	12428 <strspn@plt+0x12c0>
   113c4:	mov	r9, r0
   113c8:	b	11294 <strspn@plt+0x12c>
   113cc:	movw	r3, #20772	; 0x5124
   113d0:	movt	r3, #2
   113d4:	ldr	r0, [r3]
   113d8:	bl	11800 <strspn@plt+0x698>
   113dc:	mov	r9, #10
   113e0:	b	11288 <strspn@plt+0x120>
   113e4:	movw	r3, #20768	; 0x5120
   113e8:	movt	r3, #2
   113ec:	ldr	r3, [r3]
   113f0:	cmp	r3, sl
   113f4:	beq	116ac <strspn@plt+0x544>
   113f8:	ldr	r6, [r6, r3, lsl #2]
   113fc:	mov	r0, #3
   11400:	add	r2, sp, #24
   11404:	mov	r1, r6
   11408:	bl	11120 <__xstat64@plt>
   1140c:	cmp	r0, #0
   11410:	bne	11698 <strspn@plt+0x530>
   11414:	ldrd	r4, [sp, #72]	; 0x48
   11418:	movw	r1, #17108	; 0x42d4
   1141c:	mov	r0, r6
   11420:	movt	r1, #1
   11424:	strd	r4, [sp, #16]
   11428:	bl	11108 <fopen64@plt>
   1142c:	subs	sl, r0, #0
   11430:	beq	11688 <strspn@plt+0x520>
   11434:	cmp	r9, #0
   11438:	lslne	r5, r9, #13
   1143c:	moveq	r5, #8192	; 0x2000
   11440:	mov	r0, r5
   11444:	bl	10fc4 <malloc@plt>
   11448:	subs	r4, r0, #0
   1144c:	beq	11674 <strspn@plt+0x50c>
   11450:	mov	fp, #0
   11454:	mov	r0, r4
   11458:	mov	r5, fp
   1145c:	b	11474 <strspn@plt+0x30c>
   11460:	add	fp, fp, #1
   11464:	cmp	fp, r9
   11468:	movge	fp, #0
   1146c:	movge	r5, #1
   11470:	add	r0, r4, fp, lsl #13
   11474:	mov	r1, #8192	; 0x2000
   11478:	mov	r2, sl
   1147c:	bl	10f10 <fgets@plt>
   11480:	cmp	r0, #0
   11484:	bne	11460 <strspn@plt+0x2f8>
   11488:	cmp	r5, #0
   1148c:	movw	r8, #20776	; 0x5128
   11490:	str	fp, [sp, #12]
   11494:	movt	r8, #2
   11498:	bne	114b0 <strspn@plt+0x348>
   1149c:	b	115c4 <strspn@plt+0x45c>
   114a0:	add	r0, r4, fp, lsl #13
   114a4:	ldr	r1, [r8]
   114a8:	bl	1112c <fputs@plt>
   114ac:	add	fp, fp, #1
   114b0:	cmp	fp, r9
   114b4:	blt	114a0 <strspn@plt+0x338>
   114b8:	mov	r5, #0
   114bc:	b	114d0 <strspn@plt+0x368>
   114c0:	add	r0, r4, r5, lsl #13
   114c4:	ldr	r1, [r8]
   114c8:	bl	1112c <fputs@plt>
   114cc:	add	r5, r5, #1
   114d0:	ldr	r3, [sp, #12]
   114d4:	cmp	r3, r5
   114d8:	bgt	114c0 <strspn@plt+0x358>
   114dc:	ldr	r0, [r8]
   114e0:	bl	10eec <fflush@plt>
   114e4:	mov	r0, r4
   114e8:	bl	10f04 <free@plt>
   114ec:	mov	r0, sl
   114f0:	bl	110c0 <fclose@plt>
   114f4:	bl	11024 <inotify_init@plt>
   114f8:	cmn	r0, #1
   114fc:	mov	sl, r0
   11500:	beq	115d0 <strspn@plt+0x468>
   11504:	mov	r1, r6
   11508:	movw	r2, #11266	; 0x2c02
   1150c:	bl	11048 <inotify_add_watch@plt>
   11510:	cmn	r0, #1
   11514:	mov	r9, r0
   11518:	beq	11628 <strspn@plt+0x4c0>
   1151c:	cmp	r9, #0
   11520:	blt	11590 <strspn@plt+0x428>
   11524:	mov	r0, sl
   11528:	add	r1, sp, #132	; 0x84
   1152c:	mov	r2, #64	; 0x40
   11530:	bl	10ee0 <read@plt>
   11534:	subs	r8, r0, #0
   11538:	blt	115ec <strspn@plt+0x484>
   1153c:	beq	1151c <strspn@plt+0x3b4>
   11540:	ldr	r3, [sp, #136]	; 0x88
   11544:	tst	r3, #2
   11548:	beq	11588 <strspn@plt+0x420>
   1154c:	add	r5, sp, #132	; 0x84
   11550:	mov	r4, #0
   11554:	mov	r0, r6
   11558:	add	r1, sp, #16
   1155c:	bl	11878 <strspn@plt+0x710>
   11560:	ldr	r3, [r5, #12]
   11564:	add	r4, r4, r3
   11568:	add	r4, r4, #16
   1156c:	cmp	r8, r4
   11570:	ble	1151c <strspn@plt+0x3b4>
   11574:	add	r3, sp, #132	; 0x84
   11578:	add	r5, r3, r4
   1157c:	ldr	r3, [r5, #4]
   11580:	tst	r3, #2
   11584:	bne	11554 <strspn@plt+0x3ec>
   11588:	mov	r0, r9
   1158c:	bl	11150 <close@plt>
   11590:	mov	r0, sl
   11594:	bl	11150 <close@plt>
   11598:	ldr	r2, [sp, #196]	; 0xc4
   1159c:	ldr	r3, [r7]
   115a0:	mov	r0, #0
   115a4:	cmp	r2, r3
   115a8:	bne	11670 <strspn@plt+0x508>
   115ac:	add	sp, sp, #204	; 0xcc
   115b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115b4:	add	r0, r4, r5, lsl #13
   115b8:	ldr	r1, [r8]
   115bc:	bl	1112c <fputs@plt>
   115c0:	add	r5, r5, #1
   115c4:	cmp	fp, r5
   115c8:	bgt	115b4 <strspn@plt+0x44c>
   115cc:	b	114dc <strspn@plt+0x374>
   115d0:	mov	r0, r6
   115d4:	add	r1, sp, #16
   115d8:	bl	11878 <strspn@plt+0x710>
   115dc:	movw	r0, #53392	; 0xd090
   115e0:	movt	r0, #3
   115e4:	bl	10fa0 <usleep@plt>
   115e8:	b	115d0 <strspn@plt+0x468>
   115ec:	bl	11054 <__errno_location@plt>
   115f0:	ldr	r3, [r0]
   115f4:	cmp	r3, #4
   115f8:	cmpne	r3, #11
   115fc:	movne	r0, #0
   11600:	moveq	r0, #1
   11604:	beq	1151c <strspn@plt+0x3b4>
   11608:	movw	r1, #17244	; 0x435c
   1160c:	movt	r1, #1
   11610:	mov	r2, #5
   11614:	bl	10f4c <dcgettext@plt>
   11618:	mov	r2, r6
   1161c:	mov	r1, r0
   11620:	mov	r0, #1
   11624:	bl	10f7c <err@plt>
   11628:	bl	11054 <__errno_location@plt>
   1162c:	ldr	r3, [r0]
   11630:	cmp	r3, #28
   11634:	beq	1164c <strspn@plt+0x4e4>
   11638:	movw	r1, #17212	; 0x433c
   1163c:	mov	r0, #0
   11640:	movt	r1, #1
   11644:	mov	r2, #5
   11648:	b	11614 <strspn@plt+0x4ac>
   1164c:	mov	r2, #5
   11650:	movw	r1, #17140	; 0x42f4
   11654:	mov	r0, #0
   11658:	movt	r1, #1
   1165c:	bl	10f4c <dcgettext@plt>
   11660:	mov	r2, r6
   11664:	mov	r1, r0
   11668:	mov	r0, #1
   1166c:	bl	110d8 <errx@plt>
   11670:	bl	10f58 <__stack_chk_fail@plt>
   11674:	movw	r1, #17112	; 0x42d8
   11678:	mov	r2, r5
   1167c:	mov	r0, #1
   11680:	movt	r1, #1
   11684:	bl	10f7c <err@plt>
   11688:	movw	r1, #16880	; 0x41f0
   1168c:	mov	r2, #5
   11690:	movt	r1, #1
   11694:	b	11614 <strspn@plt+0x4ac>
   11698:	movw	r1, #16896	; 0x4200
   1169c:	mov	r0, #0
   116a0:	movt	r1, #1
   116a4:	mov	r2, #5
   116a8:	b	11614 <strspn@plt+0x4ac>
   116ac:	movw	r1, #17084	; 0x42bc
   116b0:	mov	r0, #0
   116b4:	movt	r1, #1
   116b8:	mov	r2, #5
   116bc:	bl	10f4c <dcgettext@plt>
   116c0:	mov	r1, r0
   116c4:	mov	r0, #1
   116c8:	bl	110d8 <errx@plt>
   116cc:	mov	fp, #0
   116d0:	mov	lr, #0
   116d4:	pop	{r1}		; (ldr r1, [sp], #4)
   116d8:	mov	r2, sp
   116dc:	push	{r2}		; (str r2, [sp, #-4]!)
   116e0:	push	{r0}		; (str r0, [sp, #-4]!)
   116e4:	ldr	ip, [pc, #16]	; 116fc <strspn@plt+0x594>
   116e8:	push	{ip}		; (str ip, [sp, #-4]!)
   116ec:	ldr	r0, [pc, #12]	; 11700 <strspn@plt+0x598>
   116f0:	ldr	r3, [pc, #12]	; 11704 <strspn@plt+0x59c>
   116f4:	bl	10fd0 <__libc_start_main@plt>
   116f8:	bl	11144 <abort@plt>
   116fc:	andeq	r4, r1, r4, lsl #1
   11700:	andeq	r1, r1, r8, ror r1
   11704:	andeq	r4, r1, r0, lsr #32
   11708:	ldr	r3, [pc, #20]	; 11724 <strspn@plt+0x5bc>
   1170c:	ldr	r2, [pc, #20]	; 11728 <strspn@plt+0x5c0>
   11710:	add	r3, pc, r3
   11714:	ldr	r2, [r3, r2]
   11718:	cmp	r2, #0
   1171c:	bxeq	lr
   11720:	b	10fdc <__gmon_start__@plt>
   11724:	andeq	r3, r1, r8, ror #17
   11728:	andeq	r0, r0, r0, lsl #2
   1172c:	push	{r3, lr}
   11730:	movw	r0, #20748	; 0x510c
   11734:	ldr	r3, [pc, #36]	; 11760 <strspn@plt+0x5f8>
   11738:	movt	r0, #2
   1173c:	rsb	r3, r0, r3
   11740:	cmp	r3, #6
   11744:	popls	{r3, pc}
   11748:	movw	r3, #0
   1174c:	movt	r3, #0
   11750:	cmp	r3, #0
   11754:	popeq	{r3, pc}
   11758:	blx	r3
   1175c:	pop	{r3, pc}
   11760:	andeq	r5, r2, pc, lsl #2
   11764:	push	{r3, lr}
   11768:	movw	r0, #20748	; 0x510c
   1176c:	movw	r3, #20748	; 0x510c
   11770:	movt	r0, #2
   11774:	movt	r3, #2
   11778:	rsb	r3, r0, r3
   1177c:	asr	r3, r3, #2
   11780:	add	r3, r3, r3, lsr #31
   11784:	asrs	r1, r3, #1
   11788:	popeq	{r3, pc}
   1178c:	movw	r2, #0
   11790:	movt	r2, #0
   11794:	cmp	r2, #0
   11798:	popeq	{r3, pc}
   1179c:	blx	r2
   117a0:	pop	{r3, pc}
   117a4:	push	{r4, lr}
   117a8:	movw	r4, #20788	; 0x5134
   117ac:	movt	r4, #2
   117b0:	ldrb	r3, [r4]
   117b4:	cmp	r3, #0
   117b8:	popne	{r4, pc}
   117bc:	bl	1172c <strspn@plt+0x5c4>
   117c0:	mov	r3, #1
   117c4:	strb	r3, [r4]
   117c8:	pop	{r4, pc}
   117cc:	movw	r0, #20228	; 0x4f04
   117d0:	movt	r0, #2
   117d4:	push	{r3, lr}
   117d8:	ldr	r3, [r0]
   117dc:	cmp	r3, #0
   117e0:	beq	117f8 <strspn@plt+0x690>
   117e4:	movw	r3, #0
   117e8:	movt	r3, #0
   117ec:	cmp	r3, #0
   117f0:	beq	117f8 <strspn@plt+0x690>
   117f4:	blx	r3
   117f8:	pop	{r3, lr}
   117fc:	b	11764 <strspn@plt+0x5fc>
   11800:	push	{r4, lr}
   11804:	mov	r2, #5
   11808:	mov	r4, r0
   1180c:	movw	r1, #16644	; 0x4104
   11810:	mov	r0, #0
   11814:	movt	r1, #1
   11818:	bl	10f4c <dcgettext@plt>
   1181c:	movw	r3, #20752	; 0x5110
   11820:	movt	r3, #2
   11824:	mov	r1, #1
   11828:	ldr	r3, [r3]
   1182c:	mov	r2, r0
   11830:	mov	r0, r4
   11834:	bl	110b4 <__fprintf_chk@plt>
   11838:	mov	r2, #5
   1183c:	movw	r1, #16672	; 0x4120
   11840:	mov	r0, #0
   11844:	movt	r1, #1
   11848:	bl	10f4c <dcgettext@plt>
   1184c:	mov	r1, #1
   11850:	mov	r2, r0
   11854:	mov	r0, r4
   11858:	bl	110b4 <__fprintf_chk@plt>
   1185c:	movw	r3, #20772	; 0x5124
   11860:	movt	r3, #2
   11864:	ldr	r0, [r3]
   11868:	subs	r3, r4, r0
   1186c:	rsbs	r0, r3, #0
   11870:	adcs	r0, r0, r3
   11874:	bl	11000 <exit@plt>
   11878:	push	{r4, r5, r6, r7, r8, r9, lr}
   1187c:	movw	r7, #20760	; 0x5118
   11880:	movt	r7, #2
   11884:	sub	sp, sp, #8256	; 0x2040
   11888:	sub	sp, sp, #60	; 0x3c
   1188c:	mov	r8, r1
   11890:	ldr	r3, [r7]
   11894:	add	r2, sp, #8192	; 0x2000
   11898:	mov	r1, #0
   1189c:	mov	r9, r0
   118a0:	str	r3, [r2, #116]	; 0x74
   118a4:	bl	10fb8 <open64@plt>
   118a8:	subs	r6, r0, #0
   118ac:	movwlt	r1, #16880	; 0x41f0
   118b0:	movlt	r0, #0
   118b4:	movtlt	r1, #1
   118b8:	blt	11a18 <strspn@plt+0x8b0>
   118bc:	mov	r0, #3
   118c0:	add	r2, sp, #8
   118c4:	mov	r1, r6
   118c8:	bl	10f88 <__fxstat64@plt>
   118cc:	cmn	r0, #1
   118d0:	beq	11a0c <strspn@plt+0x8a4>
   118d4:	ldrd	r2, [r8]
   118d8:	ldrd	r4, [sp, #56]	; 0x38
   118dc:	cmp	r5, r3
   118e0:	cmpeq	r4, r2
   118e4:	beq	119fc <strspn@plt+0x894>
   118e8:	mov	r1, #0
   118ec:	mov	r0, r6
   118f0:	str	r1, [sp]
   118f4:	bl	10f94 <lseek64@plt>
   118f8:	mvn	r2, #0
   118fc:	mvn	r3, #0
   11900:	cmp	r1, r3
   11904:	cmpeq	r0, r2
   11908:	bne	1192c <strspn@plt+0x7c4>
   1190c:	b	11954 <strspn@plt+0x7ec>
   11910:	mov	r0, #1
   11914:	add	r1, sp, #116	; 0x74
   11918:	mov	r2, r4
   1191c:	bl	110a8 <write@plt>
   11920:	cmp	r0, r4
   11924:	mov	r5, r0
   11928:	bne	119c8 <strspn@plt+0x860>
   1192c:	mov	r0, r6
   11930:	add	r1, sp, #116	; 0x74
   11934:	mov	r2, #8192	; 0x2000
   11938:	bl	10ee0 <read@plt>
   1193c:	subs	r4, r0, #0
   11940:	bgt	11910 <strspn@plt+0x7a8>
   11944:	movw	r3, #20776	; 0x5128
   11948:	movt	r3, #2
   1194c:	ldr	r0, [r3]
   11950:	bl	10eec <fflush@plt>
   11954:	mov	r3, #1
   11958:	mov	r2, #0
   1195c:	str	r3, [sp]
   11960:	mov	r0, r6
   11964:	mov	r3, #0
   11968:	bl	10f94 <lseek64@plt>
   1196c:	mov	r2, r0
   11970:	mov	r3, r1
   11974:	mvn	r0, #0
   11978:	mvn	r1, #0
   1197c:	cmp	r3, r1
   11980:	cmpeq	r2, r0
   11984:	beq	119f0 <strspn@plt+0x888>
   11988:	ldrd	r4, [r8]
   1198c:	cmp	r5, r3
   11990:	cmpeq	r4, r2
   11994:	beq	119f0 <strspn@plt+0x888>
   11998:	str	r2, [r8]
   1199c:	mov	r0, r6
   119a0:	str	r3, [r8, #4]
   119a4:	bl	11150 <close@plt>
   119a8:	add	r3, sp, #8192	; 0x2000
   119ac:	ldr	r2, [r3, #116]	; 0x74
   119b0:	ldr	r3, [r7]
   119b4:	cmp	r2, r3
   119b8:	bne	11a08 <strspn@plt+0x8a0>
   119bc:	add	sp, sp, #8256	; 0x2040
   119c0:	add	sp, sp, #60	; 0x3c
   119c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   119c8:	mov	r2, #5
   119cc:	movw	r1, #16912	; 0x4210
   119d0:	mov	r0, #0
   119d4:	movt	r1, #1
   119d8:	bl	10f4c <dcgettext@plt>
   119dc:	mov	r1, r9
   119e0:	mov	r2, r5
   119e4:	mov	r3, r4
   119e8:	bl	1103c <warnx@plt>
   119ec:	b	1192c <strspn@plt+0x7c4>
   119f0:	ldr	r2, [sp, #56]	; 0x38
   119f4:	ldr	r3, [sp, #60]	; 0x3c
   119f8:	b	11998 <strspn@plt+0x830>
   119fc:	mov	r0, r6
   11a00:	bl	11150 <close@plt>
   11a04:	b	119a8 <strspn@plt+0x840>
   11a08:	bl	10f58 <__stack_chk_fail@plt>
   11a0c:	movw	r1, #16896	; 0x4200
   11a10:	movt	r1, #1
   11a14:	mov	r0, #0
   11a18:	mov	r2, #5
   11a1c:	bl	10f4c <dcgettext@plt>
   11a20:	mov	r2, r9
   11a24:	mov	r1, r0
   11a28:	mov	r0, #1
   11a2c:	bl	10f7c <err@plt>
   11a30:	movw	r3, #20776	; 0x5128
   11a34:	movt	r3, #2
   11a38:	push	{r4, r5, r6, lr}
   11a3c:	ldr	r4, [r3]
   11a40:	mov	r0, r4
   11a44:	bl	10fac <__fpending@plt>
   11a48:	mov	r6, r0
   11a4c:	mov	r0, r4
   11a50:	bl	10f1c <ferror@plt>
   11a54:	mov	r5, r0
   11a58:	mov	r0, r4
   11a5c:	bl	110c0 <fclose@plt>
   11a60:	adds	r4, r0, #0
   11a64:	movne	r4, #1
   11a68:	cmp	r5, #0
   11a6c:	bne	11ae4 <strspn@plt+0x97c>
   11a70:	cmp	r4, #0
   11a74:	beq	11a90 <strspn@plt+0x928>
   11a78:	cmp	r6, #0
   11a7c:	beq	11b34 <strspn@plt+0x9cc>
   11a80:	bl	11054 <__errno_location@plt>
   11a84:	ldr	r3, [r0]
   11a88:	cmp	r3, #32
   11a8c:	bne	11b48 <strspn@plt+0x9e0>
   11a90:	movw	r3, #20772	; 0x5124
   11a94:	movt	r3, #2
   11a98:	ldr	r4, [r3]
   11a9c:	mov	r0, r4
   11aa0:	bl	10fac <__fpending@plt>
   11aa4:	mov	r6, r0
   11aa8:	mov	r0, r4
   11aac:	bl	10f1c <ferror@plt>
   11ab0:	mov	r5, r0
   11ab4:	mov	r0, r4
   11ab8:	bl	110c0 <fclose@plt>
   11abc:	adds	r4, r0, #0
   11ac0:	movne	r4, #1
   11ac4:	cmp	r5, #0
   11ac8:	beq	11b10 <strspn@plt+0x9a8>
   11acc:	cmp	r4, #0
   11ad0:	bne	11adc <strspn@plt+0x974>
   11ad4:	bl	11054 <__errno_location@plt>
   11ad8:	str	r4, [r0]
   11adc:	mov	r0, #1
   11ae0:	bl	10f28 <_exit@plt>
   11ae4:	cmp	r4, #0
   11ae8:	bne	11a80 <strspn@plt+0x918>
   11aec:	bl	11054 <__errno_location@plt>
   11af0:	str	r4, [r0]
   11af4:	mov	r2, #5
   11af8:	movw	r1, #16968	; 0x4248
   11afc:	mov	r0, #0
   11b00:	movt	r1, #1
   11b04:	bl	10f4c <dcgettext@plt>
   11b08:	bl	1103c <warnx@plt>
   11b0c:	b	11adc <strspn@plt+0x974>
   11b10:	cmp	r4, #0
   11b14:	popeq	{r4, r5, r6, pc}
   11b18:	cmp	r6, #0
   11b1c:	bne	11adc <strspn@plt+0x974>
   11b20:	bl	11054 <__errno_location@plt>
   11b24:	ldr	r3, [r0]
   11b28:	cmp	r3, #9
   11b2c:	bne	11adc <strspn@plt+0x974>
   11b30:	pop	{r4, r5, r6, pc}
   11b34:	bl	11054 <__errno_location@plt>
   11b38:	ldr	r3, [r0]
   11b3c:	cmp	r3, #9
   11b40:	bne	11a88 <strspn@plt+0x920>
   11b44:	b	11a90 <strspn@plt+0x928>
   11b48:	cmp	r3, #0
   11b4c:	beq	11af4 <strspn@plt+0x98c>
   11b50:	mov	r2, #5
   11b54:	movw	r1, #16968	; 0x4248
   11b58:	mov	r0, #0
   11b5c:	movt	r1, #1
   11b60:	bl	10f4c <dcgettext@plt>
   11b64:	bl	110e4 <warn@plt>
   11b68:	b	11adc <strspn@plt+0x974>
   11b6c:	andeq	r0, r0, r0
   11b70:	cmp	r0, #0
   11b74:	mov	r3, #0
   11b78:	str	r3, [r1]
   11b7c:	bxeq	lr
   11b80:	ldrb	r2, [r0]
   11b84:	cmp	r2, #47	; 0x2f
   11b88:	bne	11bd0 <strspn@plt+0xa68>
   11b8c:	ldrsb	r3, [r0, #1]
   11b90:	cmp	r3, #47	; 0x2f
   11b94:	bne	11bd8 <strspn@plt+0xa70>
   11b98:	mov	r3, r0
   11b9c:	b	11bbc <strspn@plt+0xa54>
   11ba0:	ldrb	r2, [r3, #1]
   11ba4:	mov	r3, r0
   11ba8:	cmp	r2, #47	; 0x2f
   11bac:	bne	11bd0 <strspn@plt+0xa68>
   11bb0:	ldrsb	r2, [r0, #1]
   11bb4:	cmp	r2, #47	; 0x2f
   11bb8:	bne	11bd8 <strspn@plt+0xa70>
   11bbc:	cmn	r3, #1
   11bc0:	add	r0, r0, #1
   11bc4:	bne	11ba0 <strspn@plt+0xa38>
   11bc8:	mov	r0, #0
   11bcc:	bx	lr
   11bd0:	cmp	r2, #0
   11bd4:	beq	11bc8 <strspn@plt+0xa60>
   11bd8:	mov	r3, #1
   11bdc:	str	r3, [r1]
   11be0:	ldrsb	r3, [r0, #1]
   11be4:	cmp	r3, #47	; 0x2f
   11be8:	cmpne	r3, #0
   11bec:	bxeq	lr
   11bf0:	mov	r3, #2
   11bf4:	str	r3, [r1]
   11bf8:	ldrb	r2, [r0, r3]
   11bfc:	add	r3, r3, #1
   11c00:	cmp	r2, #47	; 0x2f
   11c04:	cmpne	r2, #0
   11c08:	bne	11bf4 <strspn@plt+0xa8c>
   11c0c:	bx	lr
   11c10:	push	{r3, r4, r5, r6, r7, lr}
   11c14:	mov	r7, r1
   11c18:	ldrb	r3, [r0]
   11c1c:	cmp	r3, #0
   11c20:	beq	11c98 <strspn@plt+0xb30>
   11c24:	mov	r4, #0
   11c28:	mov	r5, r0
   11c2c:	mov	r6, r4
   11c30:	b	11c60 <strspn@plt+0xaf8>
   11c34:	cmp	r3, #92	; 0x5c
   11c38:	mov	r0, r7
   11c3c:	mov	r1, r3
   11c40:	beq	11c88 <strspn@plt+0xb20>
   11c44:	bl	11030 <strchr@plt>
   11c48:	cmp	r0, #0
   11c4c:	bne	11c90 <strspn@plt+0xb28>
   11c50:	ldrb	r3, [r5, #1]!
   11c54:	add	r4, r4, #1
   11c58:	cmp	r3, #0
   11c5c:	beq	11c80 <strspn@plt+0xb18>
   11c60:	cmp	r6, #0
   11c64:	sxtb	r3, r3
   11c68:	beq	11c34 <strspn@plt+0xacc>
   11c6c:	ldrb	r3, [r5, #1]!
   11c70:	mov	r6, #0
   11c74:	add	r4, r4, #1
   11c78:	cmp	r3, #0
   11c7c:	bne	11c60 <strspn@plt+0xaf8>
   11c80:	rsb	r0, r6, r4
   11c84:	pop	{r3, r4, r5, r6, r7, pc}
   11c88:	mov	r6, #1
   11c8c:	b	11c50 <strspn@plt+0xae8>
   11c90:	mov	r0, r4
   11c94:	pop	{r3, r4, r5, r6, r7, pc}
   11c98:	mov	r0, r3
   11c9c:	pop	{r3, r4, r5, r6, r7, pc}
   11ca0:	ldr	r3, [pc, #224]	; 11d88 <strspn@plt+0xc20>
   11ca4:	push	{r4, r5, r6, r7, r8, r9, lr}
   11ca8:	mov	r6, r0
   11cac:	ldr	r0, [pc, #216]	; 11d8c <strspn@plt+0xc24>
   11cb0:	add	r3, pc, r3
   11cb4:	sub	sp, sp, #12
   11cb8:	mov	r4, #0
   11cbc:	mov	r9, r1
   11cc0:	mov	r5, r2
   11cc4:	ldr	r8, [r3, r0]
   11cc8:	str	r4, [sp]
   11ccc:	ldr	r3, [r8]
   11cd0:	str	r3, [sp, #4]
   11cd4:	bl	11054 <__errno_location@plt>
   11cd8:	cmp	r6, r4
   11cdc:	mov	r7, r0
   11ce0:	str	r4, [r0]
   11ce4:	beq	11cf4 <strspn@plt+0xb8c>
   11ce8:	ldrsb	r3, [r6]
   11cec:	cmp	r3, r4
   11cf0:	bne	11d0c <strspn@plt+0xba4>
   11cf4:	ldr	r1, [pc, #148]	; 11d90 <strspn@plt+0xc28>
   11cf8:	mov	r2, r9
   11cfc:	mov	r3, r6
   11d00:	mov	r0, #1
   11d04:	add	r1, pc, r1
   11d08:	bl	110d8 <errx@plt>
   11d0c:	mov	r3, r4
   11d10:	mov	r2, r5
   11d14:	mov	r0, r6
   11d18:	mov	r1, sp
   11d1c:	bl	10f40 <__strtoull_internal@plt>
   11d20:	ldr	r3, [r7]
   11d24:	cmp	r3, r4
   11d28:	bne	11d64 <strspn@plt+0xbfc>
   11d2c:	ldr	r3, [sp]
   11d30:	cmp	r6, r3
   11d34:	beq	11cf4 <strspn@plt+0xb8c>
   11d38:	cmp	r3, r4
   11d3c:	beq	11d4c <strspn@plt+0xbe4>
   11d40:	ldrsb	r3, [r3]
   11d44:	cmp	r3, r4
   11d48:	bne	11cf4 <strspn@plt+0xb8c>
   11d4c:	ldr	r2, [sp, #4]
   11d50:	ldr	r3, [r8]
   11d54:	cmp	r2, r3
   11d58:	bne	11d84 <strspn@plt+0xc1c>
   11d5c:	add	sp, sp, #12
   11d60:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11d64:	cmp	r3, #34	; 0x22
   11d68:	bne	11cf4 <strspn@plt+0xb8c>
   11d6c:	ldr	r1, [pc, #32]	; 11d94 <strspn@plt+0xc2c>
   11d70:	mov	r2, r9
   11d74:	mov	r3, r6
   11d78:	mov	r0, #1
   11d7c:	add	r1, pc, r1
   11d80:	bl	10f7c <err@plt>
   11d84:	bl	10f58 <__stack_chk_fail@plt>
   11d88:	andeq	r3, r1, r8, asr #6
   11d8c:	strdeq	r0, [r0], -ip
   11d90:	andeq	r2, r0, r8, lsl #13
   11d94:	andeq	r2, r0, r0, lsl r6
   11d98:	ldr	r3, [pc, #596]	; 11ff4 <strspn@plt+0xe8c>
   11d9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11da0:	add	r3, pc, r3
   11da4:	subs	r6, r0, #0
   11da8:	ldr	r0, [pc, #584]	; 11ff8 <strspn@plt+0xe90>
   11dac:	mov	r8, r1
   11db0:	mov	r1, r3
   11db4:	sub	sp, sp, #20
   11db8:	mov	r9, r2
   11dbc:	ldr	sl, [r1, r0]
   11dc0:	mov	r2, #0
   11dc4:	mov	r3, #0
   11dc8:	ldr	r1, [sl]
   11dcc:	strd	r2, [r8]
   11dd0:	str	r1, [sp, #12]
   11dd4:	beq	11ebc <strspn@plt+0xd54>
   11dd8:	ldrb	r5, [r6]
   11ddc:	cmp	r5, #0
   11de0:	beq	11ebc <strspn@plt+0xd54>
   11de4:	str	r6, [sp, #8]
   11de8:	bl	10ff4 <__ctype_b_loc@plt>
   11dec:	mov	r3, r6
   11df0:	ldr	r1, [r0]
   11df4:	b	11e08 <strspn@plt+0xca0>
   11df8:	add	r2, r3, #1
   11dfc:	str	r2, [sp, #8]
   11e00:	ldrb	r5, [r3, #1]
   11e04:	mov	r3, r2
   11e08:	lsl	r2, r5, #1
   11e0c:	ldrh	r4, [r1, r2]
   11e10:	and	r4, r4, #8192	; 0x2000
   11e14:	uxth	r4, r4
   11e18:	cmp	r4, #0
   11e1c:	bne	11df8 <strspn@plt+0xc90>
   11e20:	cmp	r5, #45	; 0x2d
   11e24:	beq	11ebc <strspn@plt+0xd54>
   11e28:	add	r5, sp, #16
   11e2c:	str	r4, [r5, #-8]!
   11e30:	bl	11054 <__errno_location@plt>
   11e34:	mov	r2, r4
   11e38:	mov	r1, r5
   11e3c:	mov	r3, r4
   11e40:	mov	r7, r0
   11e44:	mov	r0, r6
   11e48:	str	r4, [r7]
   11e4c:	bl	10f40 <__strtoull_internal@plt>
   11e50:	mov	r5, r1
   11e54:	ldr	r1, [sp, #8]
   11e58:	mov	r4, r0
   11e5c:	cmp	r1, r6
   11e60:	beq	11ebc <strspn@plt+0xd54>
   11e64:	ldr	r3, [r7]
   11e68:	cmp	r3, #0
   11e6c:	bne	11ea0 <strspn@plt+0xd38>
   11e70:	cmp	r1, #0
   11e74:	beq	11fa4 <strspn@plt+0xe3c>
   11e78:	ldrb	r0, [r1]
   11e7c:	cmp	r0, #0
   11e80:	bne	11ec4 <strspn@plt+0xd5c>
   11e84:	strd	r4, [r8]
   11e88:	ldr	r2, [sp, #12]
   11e8c:	ldr	r3, [sl]
   11e90:	cmp	r2, r3
   11e94:	bne	11ff0 <strspn@plt+0xe88>
   11e98:	add	sp, sp, #20
   11e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ea0:	subs	r2, r4, #1
   11ea4:	mvn	r6, #2
   11ea8:	sbc	r3, r5, #0
   11eac:	mvn	r7, #0
   11eb0:	cmp	r3, r7
   11eb4:	cmpeq	r2, r6
   11eb8:	bls	11e70 <strspn@plt+0xd08>
   11ebc:	mvn	r0, #0
   11ec0:	b	11e88 <strspn@plt+0xd20>
   11ec4:	ldrb	r2, [r1, #1]
   11ec8:	sxtb	r3, r2
   11ecc:	cmp	r3, #105	; 0x69
   11ed0:	beq	11fac <strspn@plt+0xe44>
   11ed4:	cmp	r3, #66	; 0x42
   11ed8:	beq	11f88 <strspn@plt+0xe20>
   11edc:	cmp	r2, #0
   11ee0:	bne	11ebc <strspn@plt+0xd54>
   11ee4:	mov	r6, #1024	; 0x400
   11ee8:	ldr	r7, [pc, #268]	; 11ffc <strspn@plt+0xe94>
   11eec:	sxtb	r3, r0
   11ef0:	str	r3, [sp, #4]
   11ef4:	add	r7, pc, r7
   11ef8:	mov	r1, r3
   11efc:	mov	r0, r7
   11f00:	bl	11030 <strchr@plt>
   11f04:	ldr	r3, [sp, #4]
   11f08:	cmp	r0, #0
   11f0c:	rsbne	fp, r7, r0
   11f10:	addne	fp, fp, #1
   11f14:	beq	11fc8 <strspn@plt+0xe60>
   11f18:	cmp	fp, #0
   11f1c:	beq	11f78 <strspn@plt+0xe10>
   11f20:	asr	r7, r6, #31
   11f24:	mvn	r0, #0
   11f28:	mvn	r1, #0
   11f2c:	mov	r2, r6
   11f30:	mov	r3, r7
   11f34:	bl	13494 <strspn@plt+0x232c>
   11f38:	cmp	r1, r5
   11f3c:	cmpeq	r0, r4
   11f40:	bcc	11f9c <strspn@plt+0xe34>
   11f44:	sub	ip, fp, #1
   11f48:	mov	r3, #0
   11f4c:	b	11f60 <strspn@plt+0xdf8>
   11f50:	cmp	r1, r5
   11f54:	cmpeq	r0, r4
   11f58:	add	r3, r3, #1
   11f5c:	bcc	11f9c <strspn@plt+0xe34>
   11f60:	mul	r2, r4, r7
   11f64:	cmp	r3, ip
   11f68:	mla	r2, r6, r5, r2
   11f6c:	umull	r4, r5, r4, r6
   11f70:	add	r5, r2, r5
   11f74:	bne	11f50 <strspn@plt+0xde8>
   11f78:	mov	r0, #0
   11f7c:	cmp	r9, #0
   11f80:	strne	fp, [r9]
   11f84:	b	11e84 <strspn@plt+0xd1c>
   11f88:	ldrsb	r3, [r1, #2]
   11f8c:	cmp	r3, #0
   11f90:	bne	11ebc <strspn@plt+0xd54>
   11f94:	mov	r6, #1000	; 0x3e8
   11f98:	b	11ee8 <strspn@plt+0xd80>
   11f9c:	mvn	r0, #1
   11fa0:	b	11f7c <strspn@plt+0xe14>
   11fa4:	mov	r0, r1
   11fa8:	b	11e84 <strspn@plt+0xd1c>
   11fac:	ldrsb	r3, [r1, #2]
   11fb0:	cmp	r3, #66	; 0x42
   11fb4:	bne	11ebc <strspn@plt+0xd54>
   11fb8:	ldrsb	r3, [r1, #3]
   11fbc:	cmp	r3, #0
   11fc0:	beq	11ee4 <strspn@plt+0xd7c>
   11fc4:	b	11ebc <strspn@plt+0xd54>
   11fc8:	ldr	r7, [pc, #48]	; 12000 <strspn@plt+0xe98>
   11fcc:	mov	r1, r3
   11fd0:	add	r7, pc, r7
   11fd4:	mov	r0, r7
   11fd8:	bl	11030 <strchr@plt>
   11fdc:	cmp	r0, #0
   11fe0:	beq	11ebc <strspn@plt+0xd54>
   11fe4:	rsb	r7, r7, r0
   11fe8:	add	fp, r7, #1
   11fec:	b	11f18 <strspn@plt+0xdb0>
   11ff0:	bl	10f58 <__stack_chk_fail@plt>
   11ff4:	andeq	r3, r1, r8, asr r2
   11ff8:	strdeq	r0, [r0], -ip
   11ffc:	andeq	r2, r0, r4, lsr #9
   12000:	ldrdeq	r2, [r0], -r4
   12004:	mov	r2, #0
   12008:	b	11d98 <strspn@plt+0xc30>
   1200c:	push	{r4, r5, r6, lr}
   12010:	subs	r6, r0, #0
   12014:	beq	12098 <strspn@plt+0xf30>
   12018:	ldrb	r4, [r6]
   1201c:	cmp	r4, #0
   12020:	beq	120a0 <strspn@plt+0xf38>
   12024:	bl	10ff4 <__ctype_b_loc@plt>
   12028:	mov	r3, r6
   1202c:	ldr	r5, [r0]
   12030:	b	1204c <strspn@plt+0xee4>
   12034:	cmn	r3, #1
   12038:	beq	12088 <strspn@plt+0xf20>
   1203c:	ldrb	r4, [r3, #1]
   12040:	mov	r3, r1
   12044:	cmp	r4, #0
   12048:	beq	12090 <strspn@plt+0xf28>
   1204c:	lsl	r4, r4, #1
   12050:	mov	ip, r3
   12054:	add	r1, r3, #1
   12058:	ldrh	r2, [r5, r4]
   1205c:	tst	r2, #2048	; 0x800
   12060:	bne	12034 <strspn@plt+0xecc>
   12064:	cmp	ip, #0
   12068:	cmpne	ip, r6
   1206c:	movls	r0, #0
   12070:	movhi	r0, #1
   12074:	popls	{r4, r5, r6, pc}
   12078:	ldrsb	r0, [ip]
   1207c:	rsbs	r0, r0, #1
   12080:	movcc	r0, #0
   12084:	pop	{r4, r5, r6, pc}
   12088:	mov	r0, #0
   1208c:	pop	{r4, r5, r6, pc}
   12090:	mov	ip, r1
   12094:	b	12064 <strspn@plt+0xefc>
   12098:	mov	r0, r6
   1209c:	pop	{r4, r5, r6, pc}
   120a0:	mov	r0, r4
   120a4:	pop	{r4, r5, r6, pc}
   120a8:	cmp	r1, #0
   120ac:	push	{r4, r5}
   120b0:	sub	r4, r1, #1
   120b4:	beq	12120 <strspn@plt+0xfb8>
   120b8:	ldrb	r1, [r0]
   120bc:	cmp	r1, #0
   120c0:	beq	12120 <strspn@plt+0xfb8>
   120c4:	sxtb	r1, r1
   120c8:	sxtb	r2, r2
   120cc:	cmp	r1, r2
   120d0:	beq	1210c <strspn@plt+0xfa4>
   120d4:	add	r1, r0, #1
   120d8:	mov	r3, #0
   120dc:	b	120f8 <strspn@plt+0xf90>
   120e0:	ldrb	r0, [r1], #1
   120e4:	cmp	r0, #0
   120e8:	sxtb	ip, r0
   120ec:	beq	1210c <strspn@plt+0xfa4>
   120f0:	cmp	ip, r2
   120f4:	beq	12114 <strspn@plt+0xfac>
   120f8:	cmp	r3, r4
   120fc:	mov	r5, r1
   12100:	add	r3, r3, #1
   12104:	bne	120e0 <strspn@plt+0xf78>
   12108:	mov	r0, #0
   1210c:	pop	{r4, r5}
   12110:	bx	lr
   12114:	mov	r0, r5
   12118:	pop	{r4, r5}
   1211c:	bx	lr
   12120:	mov	r0, r1
   12124:	b	1210c <strspn@plt+0xfa4>
   12128:	ldr	r3, [pc, #228]	; 12214 <strspn@plt+0x10ac>
   1212c:	ldr	r2, [pc, #228]	; 12218 <strspn@plt+0x10b0>
   12130:	add	r3, pc, r3
   12134:	push	{r4, r6, r7, r8, r9, lr}
   12138:	subs	r6, r0, #0
   1213c:	ldr	r7, [r3, r2]
   12140:	mov	r0, r3
   12144:	sub	sp, sp, #8
   12148:	mov	r4, #0
   1214c:	mov	r8, r1
   12150:	ldr	r3, [r7]
   12154:	str	r4, [sp]
   12158:	str	r3, [sp, #4]
   1215c:	beq	1216c <strspn@plt+0x1004>
   12160:	ldrsb	r3, [r6]
   12164:	cmp	r3, r4
   12168:	bne	12194 <strspn@plt+0x102c>
   1216c:	bl	11054 <__errno_location@plt>
   12170:	ldr	r3, [r0]
   12174:	cmp	r3, #0
   12178:	bne	121c0 <strspn@plt+0x1058>
   1217c:	ldr	r1, [pc, #152]	; 1221c <strspn@plt+0x10b4>
   12180:	mov	r2, r8
   12184:	mov	r3, r6
   12188:	mov	r0, #1
   1218c:	add	r1, pc, r1
   12190:	bl	110d8 <errx@plt>
   12194:	bl	11054 <__errno_location@plt>
   12198:	mov	r3, r4
   1219c:	mov	r1, sp
   121a0:	mov	r2, #10
   121a4:	mov	r9, r0
   121a8:	str	r4, [r0]
   121ac:	mov	r0, r6
   121b0:	bl	110fc <__strtoll_internal@plt>
   121b4:	ldr	r3, [r9]
   121b8:	cmp	r3, r4
   121bc:	beq	121d8 <strspn@plt+0x1070>
   121c0:	ldr	r1, [pc, #88]	; 12220 <strspn@plt+0x10b8>
   121c4:	mov	r2, r8
   121c8:	mov	r3, r6
   121cc:	mov	r0, #1
   121d0:	add	r1, pc, r1
   121d4:	bl	10f7c <err@plt>
   121d8:	ldr	r3, [sp]
   121dc:	cmp	r6, r3
   121e0:	beq	1217c <strspn@plt+0x1014>
   121e4:	cmp	r3, #0
   121e8:	beq	121f8 <strspn@plt+0x1090>
   121ec:	ldrsb	r3, [r3]
   121f0:	cmp	r3, #0
   121f4:	bne	1217c <strspn@plt+0x1014>
   121f8:	ldr	r2, [sp, #4]
   121fc:	ldr	r3, [r7]
   12200:	cmp	r2, r3
   12204:	bne	12210 <strspn@plt+0x10a8>
   12208:	add	sp, sp, #8
   1220c:	pop	{r4, r6, r7, r8, r9, pc}
   12210:	bl	10f58 <__stack_chk_fail@plt>
   12214:	andeq	r2, r1, r8, asr #29
   12218:	strdeq	r0, [r0], -ip
   1221c:	andeq	r2, r0, r0, lsl #4
   12220:			; <UNDEFINED> instruction: 0x000021bc
   12224:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   12228:	mov	r8, r0
   1222c:	mov	r9, r1
   12230:	bl	12128 <strspn@plt+0xfc0>
   12234:	mvn	r4, #0
   12238:	mov	r5, #0
   1223c:	adds	r6, r0, #-2147483648	; 0x80000000
   12240:	adc	r7, r1, #0
   12244:	cmp	r7, r5
   12248:	cmpeq	r6, r4
   1224c:	popls	{r3, r4, r5, r6, r7, r8, r9, pc}
   12250:	ldr	r1, [pc, #16]	; 12268 <strspn@plt+0x1100>
   12254:	mov	r2, r9
   12258:	mov	r3, r8
   1225c:	mov	r0, #1
   12260:	add	r1, pc, r1
   12264:	bl	110d8 <errx@plt>
   12268:	andeq	r2, r0, ip, lsr #2
   1226c:	push	{r3, r4, r5, lr}
   12270:	mov	r4, r0
   12274:	mov	r5, r1
   12278:	bl	12224 <strspn@plt+0x10bc>
   1227c:	add	ip, r0, #32768	; 0x8000
   12280:	cmp	ip, #65536	; 0x10000
   12284:	bcs	12290 <strspn@plt+0x1128>
   12288:	sxth	r0, r0
   1228c:	pop	{r3, r4, r5, pc}
   12290:	ldr	r1, [pc, #16]	; 122a8 <strspn@plt+0x1140>
   12294:	mov	r2, r5
   12298:	mov	r3, r4
   1229c:	mov	r0, #1
   122a0:	add	r1, pc, r1
   122a4:	bl	110d8 <errx@plt>
   122a8:	andeq	r2, r0, ip, ror #1
   122ac:	mov	r2, #10
   122b0:	b	11ca0 <strspn@plt+0xb38>
   122b4:	push	{r3, r4, r5, r6, r7, lr}
   122b8:	mov	r6, r0
   122bc:	mov	r7, r1
   122c0:	bl	122ac <strspn@plt+0x1144>
   122c4:	mvn	r4, #0
   122c8:	mov	r5, #0
   122cc:	cmp	r1, r5
   122d0:	cmpeq	r0, r4
   122d4:	popls	{r3, r4, r5, r6, r7, pc}
   122d8:	ldr	r1, [pc, #16]	; 122f0 <strspn@plt+0x1188>
   122dc:	mov	r2, r7
   122e0:	mov	r3, r6
   122e4:	mov	r0, #1
   122e8:	add	r1, pc, r1
   122ec:	bl	110d8 <errx@plt>
   122f0:	andeq	r2, r0, r4, lsr #1
   122f4:	push	{r3, r4, r5, lr}
   122f8:	mov	r4, r0
   122fc:	mov	r5, r1
   12300:	bl	122b4 <strspn@plt+0x114c>
   12304:	cmp	r0, #65536	; 0x10000
   12308:	bcs	12314 <strspn@plt+0x11ac>
   1230c:	uxth	r0, r0
   12310:	pop	{r3, r4, r5, pc}
   12314:	ldr	r1, [pc, #16]	; 1232c <strspn@plt+0x11c4>
   12318:	mov	r2, r5
   1231c:	mov	r3, r4
   12320:	mov	r0, #1
   12324:	add	r1, pc, r1
   12328:	bl	110d8 <errx@plt>
   1232c:	andeq	r2, r0, r8, rrx
   12330:	mov	r2, #16
   12334:	b	11ca0 <strspn@plt+0xb38>
   12338:	ldr	r3, [pc, #216]	; 12418 <strspn@plt+0x12b0>
   1233c:	push	{r4, r5, r6, r7, r8, lr}
   12340:	subs	r4, r0, #0
   12344:	ldr	r0, [pc, #208]	; 1241c <strspn@plt+0x12b4>
   12348:	add	r3, pc, r3
   1234c:	sub	sp, sp, #8
   12350:	mov	r5, #0
   12354:	mov	r7, r1
   12358:	ldr	r6, [r3, r0]
   1235c:	str	r5, [sp]
   12360:	ldr	r3, [r6]
   12364:	str	r3, [sp, #4]
   12368:	beq	12378 <strspn@plt+0x1210>
   1236c:	ldrsb	r3, [r4]
   12370:	cmp	r3, r5
   12374:	bne	123a0 <strspn@plt+0x1238>
   12378:	bl	11054 <__errno_location@plt>
   1237c:	ldr	r3, [r0]
   12380:	cmp	r3, #0
   12384:	bne	123c4 <strspn@plt+0x125c>
   12388:	ldr	r1, [pc, #144]	; 12420 <strspn@plt+0x12b8>
   1238c:	mov	r2, r7
   12390:	mov	r3, r4
   12394:	mov	r0, #1
   12398:	add	r1, pc, r1
   1239c:	bl	110d8 <errx@plt>
   123a0:	bl	11054 <__errno_location@plt>
   123a4:	mov	r1, sp
   123a8:	mov	r8, r0
   123ac:	str	r5, [r0]
   123b0:	mov	r0, r4
   123b4:	bl	1109c <strtod@plt>
   123b8:	ldr	r3, [r8]
   123bc:	cmp	r3, r5
   123c0:	beq	123dc <strspn@plt+0x1274>
   123c4:	ldr	r1, [pc, #88]	; 12424 <strspn@plt+0x12bc>
   123c8:	mov	r2, r7
   123cc:	mov	r3, r4
   123d0:	mov	r0, #1
   123d4:	add	r1, pc, r1
   123d8:	bl	10f7c <err@plt>
   123dc:	ldr	r3, [sp]
   123e0:	cmp	r4, r3
   123e4:	beq	12388 <strspn@plt+0x1220>
   123e8:	cmp	r3, #0
   123ec:	beq	123fc <strspn@plt+0x1294>
   123f0:	ldrsb	r3, [r3]
   123f4:	cmp	r3, #0
   123f8:	bne	12388 <strspn@plt+0x1220>
   123fc:	ldr	r2, [sp, #4]
   12400:	ldr	r3, [r6]
   12404:	cmp	r2, r3
   12408:	bne	12414 <strspn@plt+0x12ac>
   1240c:	add	sp, sp, #8
   12410:	pop	{r4, r5, r6, r7, r8, pc}
   12414:	bl	10f58 <__stack_chk_fail@plt>
   12418:			; <UNDEFINED> instruction: 0x00012cb0
   1241c:	strdeq	r0, [r0], -ip
   12420:	strdeq	r1, [r0], -r4
   12424:			; <UNDEFINED> instruction: 0x00001fb8
   12428:	ldr	r3, [pc, #220]	; 1250c <strspn@plt+0x13a4>
   1242c:	push	{r4, r5, r6, r7, r8, lr}
   12430:	subs	r4, r0, #0
   12434:	ldr	r0, [pc, #212]	; 12510 <strspn@plt+0x13a8>
   12438:	add	r3, pc, r3
   1243c:	sub	sp, sp, #8
   12440:	mov	r5, #0
   12444:	mov	r7, r1
   12448:	ldr	r6, [r3, r0]
   1244c:	str	r5, [sp]
   12450:	ldr	r3, [r6]
   12454:	str	r3, [sp, #4]
   12458:	beq	12468 <strspn@plt+0x1300>
   1245c:	ldrsb	r3, [r4]
   12460:	cmp	r3, r5
   12464:	bne	12490 <strspn@plt+0x1328>
   12468:	bl	11054 <__errno_location@plt>
   1246c:	ldr	r3, [r0]
   12470:	cmp	r3, #0
   12474:	bne	124b8 <strspn@plt+0x1350>
   12478:	ldr	r1, [pc, #148]	; 12514 <strspn@plt+0x13ac>
   1247c:	mov	r2, r7
   12480:	mov	r3, r4
   12484:	mov	r0, #1
   12488:	add	r1, pc, r1
   1248c:	bl	110d8 <errx@plt>
   12490:	bl	11054 <__errno_location@plt>
   12494:	mov	r1, sp
   12498:	mov	r2, #10
   1249c:	mov	r8, r0
   124a0:	str	r5, [r0]
   124a4:	mov	r0, r4
   124a8:	bl	10ec8 <strtol@plt>
   124ac:	ldr	r3, [r8]
   124b0:	cmp	r3, r5
   124b4:	beq	124d0 <strspn@plt+0x1368>
   124b8:	ldr	r1, [pc, #88]	; 12518 <strspn@plt+0x13b0>
   124bc:	mov	r2, r7
   124c0:	mov	r3, r4
   124c4:	mov	r0, #1
   124c8:	add	r1, pc, r1
   124cc:	bl	10f7c <err@plt>
   124d0:	ldr	r3, [sp]
   124d4:	cmp	r4, r3
   124d8:	beq	12478 <strspn@plt+0x1310>
   124dc:	cmp	r3, #0
   124e0:	beq	124f0 <strspn@plt+0x1388>
   124e4:	ldrsb	r3, [r3]
   124e8:	cmp	r3, #0
   124ec:	bne	12478 <strspn@plt+0x1310>
   124f0:	ldr	r2, [sp, #4]
   124f4:	ldr	r3, [r6]
   124f8:	cmp	r2, r3
   124fc:	bne	12508 <strspn@plt+0x13a0>
   12500:	add	sp, sp, #8
   12504:	pop	{r4, r5, r6, r7, r8, pc}
   12508:	bl	10f58 <__stack_chk_fail@plt>
   1250c:	andeq	r2, r1, r0, asr #23
   12510:	strdeq	r0, [r0], -ip
   12514:	andeq	r1, r0, r4, lsl #30
   12518:	andeq	r1, r0, r4, asr #29
   1251c:	ldr	r3, [pc, #220]	; 12600 <strspn@plt+0x1498>
   12520:	push	{r4, r5, r6, r7, r8, lr}
   12524:	subs	r4, r0, #0
   12528:	ldr	r0, [pc, #212]	; 12604 <strspn@plt+0x149c>
   1252c:	add	r3, pc, r3
   12530:	sub	sp, sp, #8
   12534:	mov	r5, #0
   12538:	mov	r7, r1
   1253c:	ldr	r6, [r3, r0]
   12540:	str	r5, [sp]
   12544:	ldr	r3, [r6]
   12548:	str	r3, [sp, #4]
   1254c:	beq	1255c <strspn@plt+0x13f4>
   12550:	ldrsb	r3, [r4]
   12554:	cmp	r3, r5
   12558:	bne	12584 <strspn@plt+0x141c>
   1255c:	bl	11054 <__errno_location@plt>
   12560:	ldr	r3, [r0]
   12564:	cmp	r3, #0
   12568:	bne	125ac <strspn@plt+0x1444>
   1256c:	ldr	r1, [pc, #148]	; 12608 <strspn@plt+0x14a0>
   12570:	mov	r2, r7
   12574:	mov	r3, r4
   12578:	mov	r0, #1
   1257c:	add	r1, pc, r1
   12580:	bl	110d8 <errx@plt>
   12584:	bl	11054 <__errno_location@plt>
   12588:	mov	r1, sp
   1258c:	mov	r2, #10
   12590:	mov	r8, r0
   12594:	str	r5, [r0]
   12598:	mov	r0, r4
   1259c:	bl	1100c <strtoul@plt>
   125a0:	ldr	r3, [r8]
   125a4:	cmp	r3, r5
   125a8:	beq	125c4 <strspn@plt+0x145c>
   125ac:	ldr	r1, [pc, #88]	; 1260c <strspn@plt+0x14a4>
   125b0:	mov	r2, r7
   125b4:	mov	r3, r4
   125b8:	mov	r0, #1
   125bc:	add	r1, pc, r1
   125c0:	bl	10f7c <err@plt>
   125c4:	ldr	r3, [sp]
   125c8:	cmp	r4, r3
   125cc:	beq	1256c <strspn@plt+0x1404>
   125d0:	cmp	r3, #0
   125d4:	beq	125e4 <strspn@plt+0x147c>
   125d8:	ldrsb	r3, [r3]
   125dc:	cmp	r3, #0
   125e0:	bne	1256c <strspn@plt+0x1404>
   125e4:	ldr	r2, [sp, #4]
   125e8:	ldr	r3, [r6]
   125ec:	cmp	r2, r3
   125f0:	bne	125fc <strspn@plt+0x1494>
   125f4:	add	sp, sp, #8
   125f8:	pop	{r4, r5, r6, r7, r8, pc}
   125fc:	bl	10f58 <__stack_chk_fail@plt>
   12600:	andeq	r2, r1, ip, asr #21
   12604:	strdeq	r0, [r0], -ip
   12608:	andeq	r1, r0, r0, lsl lr
   1260c:	ldrdeq	r1, [r0], -r0
   12610:	ldr	ip, [pc, #132]	; 1269c <strspn@plt+0x1534>
   12614:	push	{r4, r5, r6, lr}
   12618:	add	ip, pc, ip
   1261c:	ldr	lr, [pc, #124]	; 126a0 <strspn@plt+0x1538>
   12620:	sub	sp, sp, #16
   12624:	mov	r6, r1
   12628:	mov	r5, r0
   1262c:	mov	r1, sp
   12630:	ldr	r4, [ip, lr]
   12634:	ldr	ip, [r4]
   12638:	str	ip, [sp, #12]
   1263c:	bl	12004 <strspn@plt+0xe9c>
   12640:	cmp	r0, #0
   12644:	bne	12664 <strspn@plt+0x14fc>
   12648:	ldr	r2, [sp, #12]
   1264c:	ldr	r3, [r4]
   12650:	ldrd	r0, [sp]
   12654:	cmp	r2, r3
   12658:	bne	12698 <strspn@plt+0x1530>
   1265c:	add	sp, sp, #16
   12660:	pop	{r4, r5, r6, pc}
   12664:	bl	11054 <__errno_location@plt>
   12668:	mov	r2, r6
   1266c:	ldr	r3, [r0]
   12670:	mov	r0, #1
   12674:	cmp	r3, #0
   12678:	mov	r3, r5
   1267c:	beq	1268c <strspn@plt+0x1524>
   12680:	ldr	r1, [pc, #28]	; 126a4 <strspn@plt+0x153c>
   12684:	add	r1, pc, r1
   12688:	bl	10f7c <err@plt>
   1268c:	ldr	r1, [pc, #20]	; 126a8 <strspn@plt+0x1540>
   12690:	add	r1, pc, r1
   12694:	bl	110d8 <errx@plt>
   12698:	bl	10f58 <__stack_chk_fail@plt>
   1269c:	andeq	r2, r1, r0, ror #19
   126a0:	strdeq	r0, [r0], -ip
   126a4:	andeq	r1, r0, r8, lsl #26
   126a8:	strdeq	r1, [r0], -ip
   126ac:	push	{r4, lr}
   126b0:	mov	r4, r1
   126b4:	mov	r1, r2
   126b8:	bl	12338 <strspn@plt+0x11d0>
   126bc:	vldr	d7, [pc, #28]	; 126e0 <strspn@plt+0x1578>
   126c0:	vcvt.s32.f64	s11, d0
   126c4:	vcvt.f64.s32	d6, s11
   126c8:	vstr	s11, [r4]
   126cc:	vsub.f64	d0, d0, d6
   126d0:	vmul.f64	d0, d0, d7
   126d4:	vcvt.s32.f64	s0, d0
   126d8:	vstr	s0, [r4, #4]
   126dc:	pop	{r4, pc}
   126e0:	andeq	r0, r0, r0
   126e4:	smlawbmi	lr, r0, r4, r8
   126e8:	and	r3, r0, #61440	; 0xf000
   126ec:	cmp	r3, #16384	; 0x4000
   126f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   126f4:	moveq	r3, #100	; 0x64
   126f8:	beq	12770 <strspn@plt+0x1608>
   126fc:	cmp	r3, #40960	; 0xa000
   12700:	moveq	r3, #108	; 0x6c
   12704:	beq	12770 <strspn@plt+0x1608>
   12708:	cmp	r3, #8192	; 0x2000
   1270c:	moveq	r3, #99	; 0x63
   12710:	beq	12770 <strspn@plt+0x1608>
   12714:	cmp	r3, #24576	; 0x6000
   12718:	moveq	r3, #98	; 0x62
   1271c:	beq	12770 <strspn@plt+0x1608>
   12720:	cmp	r3, #49152	; 0xc000
   12724:	moveq	r3, #115	; 0x73
   12728:	beq	12770 <strspn@plt+0x1608>
   1272c:	cmp	r3, #4096	; 0x1000
   12730:	moveq	r3, #112	; 0x70
   12734:	beq	12770 <strspn@plt+0x1608>
   12738:	cmp	r3, #32768	; 0x8000
   1273c:	beq	1276c <strspn@plt+0x1604>
   12740:	mov	r4, #9
   12744:	mov	r3, #8
   12748:	mov	r6, #7
   1274c:	mov	r7, #6
   12750:	mov	r2, #5
   12754:	mov	r8, #4
   12758:	mov	r9, #3
   1275c:	mov	ip, #2
   12760:	mov	sl, #1
   12764:	mov	fp, #0
   12768:	b	1279c <strspn@plt+0x1634>
   1276c:	mov	r3, #45	; 0x2d
   12770:	strb	r3, [r1]
   12774:	mov	r4, #10
   12778:	mov	r3, #9
   1277c:	mov	r6, #8
   12780:	mov	r7, #7
   12784:	mov	r2, #6
   12788:	mov	r8, #5
   1278c:	mov	r9, #4
   12790:	mov	ip, #3
   12794:	mov	sl, #2
   12798:	mov	fp, #1
   1279c:	tst	r0, #256	; 0x100
   127a0:	add	ip, r1, ip
   127a4:	moveq	r5, #45	; 0x2d
   127a8:	movne	r5, #114	; 0x72
   127ac:	tst	r0, #128	; 0x80
   127b0:	strb	r5, [r1, fp]
   127b4:	moveq	r5, #45	; 0x2d
   127b8:	movne	r5, #119	; 0x77
   127bc:	tst	r0, #2048	; 0x800
   127c0:	strb	r5, [r1, sl]
   127c4:	beq	12860 <strspn@plt+0x16f8>
   127c8:	tst	r0, #64	; 0x40
   127cc:	moveq	r5, #83	; 0x53
   127d0:	movne	r5, #115	; 0x73
   127d4:	tst	r0, #32
   127d8:	strb	r5, [ip]
   127dc:	add	r2, r1, r2
   127e0:	moveq	ip, #45	; 0x2d
   127e4:	movne	ip, #114	; 0x72
   127e8:	tst	r0, #16
   127ec:	strb	ip, [r1, r9]
   127f0:	moveq	ip, #45	; 0x2d
   127f4:	movne	ip, #119	; 0x77
   127f8:	tst	r0, #1024	; 0x400
   127fc:	strb	ip, [r1, r8]
   12800:	beq	12880 <strspn@plt+0x1718>
   12804:	tst	r0, #8
   12808:	moveq	ip, #83	; 0x53
   1280c:	movne	ip, #115	; 0x73
   12810:	tst	r0, #4
   12814:	strb	ip, [r2]
   12818:	add	r3, r1, r3
   1281c:	moveq	r2, #45	; 0x2d
   12820:	movne	r2, #114	; 0x72
   12824:	tst	r0, #2
   12828:	strb	r2, [r1, r7]
   1282c:	moveq	r2, #45	; 0x2d
   12830:	movne	r2, #119	; 0x77
   12834:	tst	r0, #512	; 0x200
   12838:	strb	r2, [r1, r6]
   1283c:	beq	12870 <strspn@plt+0x1708>
   12840:	tst	r0, #1
   12844:	moveq	r2, #84	; 0x54
   12848:	movne	r2, #116	; 0x74
   1284c:	strb	r2, [r3]
   12850:	mov	r3, #0
   12854:	strb	r3, [r1, r4]
   12858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   1285c:	bx	lr
   12860:	tst	r0, #64	; 0x40
   12864:	moveq	r5, #45	; 0x2d
   12868:	movne	r5, #120	; 0x78
   1286c:	b	127d4 <strspn@plt+0x166c>
   12870:	tst	r0, #1
   12874:	moveq	r2, #45	; 0x2d
   12878:	movne	r2, #120	; 0x78
   1287c:	b	1284c <strspn@plt+0x16e4>
   12880:	tst	r0, #8
   12884:	moveq	ip, #45	; 0x2d
   12888:	movne	ip, #120	; 0x78
   1288c:	b	12810 <strspn@plt+0x16a8>
   12890:	ldr	r1, [pc, #580]	; 12adc <strspn@plt+0x1974>
   12894:	tst	r0, #2
   12898:	ldr	ip, [pc, #576]	; 12ae0 <strspn@plt+0x1978>
   1289c:	add	r1, pc, r1
   128a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128a4:	sub	sp, sp, #100	; 0x64
   128a8:	ldr	r6, [r1, ip]
   128ac:	addeq	r7, sp, #52	; 0x34
   128b0:	addne	lr, sp, #53	; 0x35
   128b4:	addne	r7, sp, #52	; 0x34
   128b8:	moveq	lr, r7
   128bc:	mov	ip, #10
   128c0:	ldr	r1, [r6]
   128c4:	str	r1, [sp, #92]	; 0x5c
   128c8:	movne	r1, #32
   128cc:	strbne	r1, [sp, #52]	; 0x34
   128d0:	mov	r1, #1
   128d4:	sub	r9, ip, #32
   128d8:	rsb	r8, ip, #32
   128dc:	lsl	r5, r1, r9
   128e0:	lsl	r4, r1, ip
   128e4:	orr	r5, r5, r1, lsr r8
   128e8:	cmp	r3, r5
   128ec:	cmpeq	r2, r4
   128f0:	bcc	12a5c <strspn@plt+0x18f4>
   128f4:	add	ip, ip, #10
   128f8:	cmp	ip, #70	; 0x46
   128fc:	bne	128d4 <strspn@plt+0x176c>
   12900:	mov	r1, #60	; 0x3c
   12904:	movw	r5, #26215	; 0x6667
   12908:	movt	r5, #26214	; 0x6666
   1290c:	ldr	r8, [pc, #464]	; 12ae4 <strspn@plt+0x197c>
   12910:	mov	fp, #1
   12914:	smull	sl, r9, r5, r1
   12918:	add	r8, pc, r8
   1291c:	str	r8, [sp, #36]	; 0x24
   12920:	sub	r8, r1, #32
   12924:	asr	r4, r1, #31
   12928:	lsl	r5, fp, r8
   1292c:	str	r4, [sp, #44]	; 0x2c
   12930:	lsl	r4, fp, r1
   12934:	subs	r4, r4, #1
   12938:	str	r9, [sp, #40]	; 0x28
   1293c:	rsb	r9, r1, #32
   12940:	ldr	sl, [sp, #40]	; 0x28
   12944:	orr	r5, r5, fp, lsr r9
   12948:	ldr	fp, [sp, #44]	; 0x2c
   1294c:	sbc	r5, r5, #0
   12950:	tst	r0, #1
   12954:	lsr	r1, r2, r1
   12958:	rsb	fp, fp, sl, asr #2
   1295c:	ldr	sl, [sp, #36]	; 0x24
   12960:	orr	r1, r1, r3, lsl r9
   12964:	and	r5, r5, r3
   12968:	orr	r8, r1, r3, lsr r8
   1296c:	and	r4, r4, r2
   12970:	ldrb	r0, [sl, fp]
   12974:	add	r3, lr, #1
   12978:	strb	r0, [lr]
   1297c:	bne	12a40 <strspn@plt+0x18d8>
   12980:	orrs	fp, r4, r5
   12984:	mov	r2, #0
   12988:	strb	r2, [r3]
   1298c:	beq	12a74 <strspn@plt+0x190c>
   12990:	sub	lr, ip, #20
   12994:	sub	ip, ip, #52	; 0x34
   12998:	rsb	r3, lr, #32
   1299c:	lsr	r0, r4, lr
   129a0:	orr	r0, r0, r5, lsl r3
   129a4:	lsr	r1, r5, lr
   129a8:	orr	r0, r0, r5, lsr ip
   129ac:	mov	r2, #100	; 0x64
   129b0:	adds	r0, r0, #50	; 0x32
   129b4:	mov	r3, #0
   129b8:	adc	r1, r1, #0
   129bc:	bl	13494 <strspn@plt+0x232c>
   129c0:	mov	r4, r0
   129c4:	mov	r5, r1
   129c8:	cmp	r5, #0
   129cc:	cmpeq	r4, #10
   129d0:	addeq	r8, r8, #1
   129d4:	beq	12a74 <strspn@plt+0x190c>
   129d8:	orrs	r2, r4, r5
   129dc:	beq	12a74 <strspn@plt+0x190c>
   129e0:	bl	110f0 <localeconv@plt>
   129e4:	cmp	r0, #0
   129e8:	beq	12ac0 <strspn@plt+0x1958>
   129ec:	ldr	r3, [r0]
   129f0:	cmp	r3, #0
   129f4:	beq	12ad0 <strspn@plt+0x1968>
   129f8:	ldrsb	r2, [r3]
   129fc:	cmp	r2, #0
   12a00:	ldreq	r3, [pc, #224]	; 12ae8 <strspn@plt+0x1980>
   12a04:	addeq	r3, pc, r3
   12a08:	add	r9, sp, #60	; 0x3c
   12a0c:	ldr	ip, [pc, #216]	; 12aec <strspn@plt+0x1984>
   12a10:	mov	r1, #32
   12a14:	str	r3, [sp, #8]
   12a18:	add	ip, pc, ip
   12a1c:	str	r8, [sp, #4]
   12a20:	mov	r0, r9
   12a24:	strd	r4, [sp, #16]
   12a28:	mov	r3, r1
   12a2c:	str	r7, [sp, #24]
   12a30:	mov	r2, #1
   12a34:	str	ip, [sp]
   12a38:	bl	1115c <__snprintf_chk@plt>
   12a3c:	b	12aa0 <strspn@plt+0x1938>
   12a40:	cmp	r0, #66	; 0x42
   12a44:	addne	r3, lr, #3
   12a48:	movne	r1, #105	; 0x69
   12a4c:	movne	r2, #66	; 0x42
   12a50:	strbne	r1, [lr, #1]
   12a54:	strbne	r2, [lr, #2]
   12a58:	b	12980 <strspn@plt+0x1818>
   12a5c:	subs	r1, ip, #10
   12a60:	strbeq	r1, [lr, #1]
   12a64:	moveq	r3, #66	; 0x42
   12a68:	moveq	r8, r2
   12a6c:	strbeq	r3, [lr]
   12a70:	bne	12904 <strspn@plt+0x179c>
   12a74:	ldr	r3, [pc, #116]	; 12af0 <strspn@plt+0x1988>
   12a78:	add	r9, sp, #60	; 0x3c
   12a7c:	mov	r1, #32
   12a80:	str	r8, [sp, #4]
   12a84:	add	r3, pc, r3
   12a88:	str	r7, [sp, #8]
   12a8c:	str	r3, [sp]
   12a90:	mov	r0, r9
   12a94:	mov	r3, r1
   12a98:	mov	r2, #1
   12a9c:	bl	1115c <__snprintf_chk@plt>
   12aa0:	mov	r0, r9
   12aa4:	bl	11078 <__strdup@plt>
   12aa8:	ldr	r2, [sp, #92]	; 0x5c
   12aac:	ldr	r3, [r6]
   12ab0:	cmp	r2, r3
   12ab4:	bne	12acc <strspn@plt+0x1964>
   12ab8:	add	sp, sp, #100	; 0x64
   12abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ac0:	ldr	r3, [pc, #44]	; 12af4 <strspn@plt+0x198c>
   12ac4:	add	r3, pc, r3
   12ac8:	b	12a08 <strspn@plt+0x18a0>
   12acc:	bl	10f58 <__stack_chk_fail@plt>
   12ad0:	ldr	r3, [pc, #32]	; 12af8 <strspn@plt+0x1990>
   12ad4:	add	r3, pc, r3
   12ad8:	b	12a08 <strspn@plt+0x18a0>
   12adc:	andeq	r2, r1, ip, asr r7
   12ae0:	strdeq	r0, [r0], -ip
   12ae4:	muleq	r0, r8, sl
   12ae8:	andeq	r1, r0, ip, asr #18
   12aec:	andeq	r1, r0, r0, lsr #19
   12af0:	andeq	r1, r0, r0, asr #18
   12af4:	andeq	r1, r0, ip, lsl #17
   12af8:	andeq	r1, r0, ip, ror r8
   12afc:	cmp	r0, #0
   12b00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b04:	mov	r8, r1
   12b08:	mov	sl, r2
   12b0c:	mov	r9, r3
   12b10:	beq	12bcc <strspn@plt+0x1a64>
   12b14:	ldrb	r5, [r0]
   12b18:	cmp	r5, #0
   12b1c:	beq	12bcc <strspn@plt+0x1a64>
   12b20:	cmp	r2, #0
   12b24:	cmpne	r1, #0
   12b28:	movne	ip, #0
   12b2c:	moveq	ip, #1
   12b30:	beq	12bcc <strspn@plt+0x1a64>
   12b34:	cmp	r3, #0
   12b38:	movne	r4, r0
   12b3c:	movne	r6, ip
   12b40:	bne	12b54 <strspn@plt+0x19ec>
   12b44:	b	12bcc <strspn@plt+0x1a64>
   12b48:	ldrb	r5, [r4, #1]!
   12b4c:	cmp	r5, #0
   12b50:	beq	12bc4 <strspn@plt+0x1a5c>
   12b54:	cmp	sl, r6
   12b58:	bls	12bd4 <strspn@plt+0x1a6c>
   12b5c:	cmp	ip, #0
   12b60:	ldrsb	r7, [r4, #1]
   12b64:	moveq	ip, r4
   12b68:	cmp	r5, #44	; 0x2c
   12b6c:	mov	r0, ip
   12b70:	moveq	r5, r4
   12b74:	movne	r5, #0
   12b78:	cmp	r7, #0
   12b7c:	addeq	r5, r4, #1
   12b80:	cmp	r5, #0
   12b84:	rsb	r1, ip, r5
   12b88:	beq	12bbc <strspn@plt+0x1a54>
   12b8c:	cmp	ip, r5
   12b90:	bcs	12bcc <strspn@plt+0x1a64>
   12b94:	blx	r9
   12b98:	mov	ip, #0
   12b9c:	add	r3, r6, #1
   12ba0:	cmn	r0, #1
   12ba4:	beq	12bcc <strspn@plt+0x1a64>
   12ba8:	str	r0, [r8, r6, lsl #2]
   12bac:	mov	r6, r3
   12bb0:	ldrsb	r2, [r5]
   12bb4:	cmp	r2, ip
   12bb8:	beq	12bdc <strspn@plt+0x1a74>
   12bbc:	cmn	r4, #1
   12bc0:	bne	12b48 <strspn@plt+0x19e0>
   12bc4:	mov	r0, r6
   12bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bcc:	mvn	r0, #0
   12bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bd4:	mvn	r0, #1
   12bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bdc:	mov	r6, r3
   12be0:	b	12bc4 <strspn@plt+0x1a5c>
   12be4:	cmp	r0, #0
   12be8:	push	{r4, lr}
   12bec:	mov	r4, r3
   12bf0:	beq	12c68 <strspn@plt+0x1b00>
   12bf4:	ldrb	ip, [r0]
   12bf8:	cmp	ip, #0
   12bfc:	beq	12c68 <strspn@plt+0x1b00>
   12c00:	cmp	r3, #0
   12c04:	beq	12c68 <strspn@plt+0x1b00>
   12c08:	ldr	r3, [r3]
   12c0c:	cmp	r3, #0
   12c10:	blt	12c68 <strspn@plt+0x1b00>
   12c14:	cmp	r3, r2
   12c18:	bhi	12c68 <strspn@plt+0x1b00>
   12c1c:	cmp	ip, #43	; 0x2b
   12c20:	lsleq	ip, r3, #2
   12c24:	addeq	r0, r0, #1
   12c28:	movne	ip, #0
   12c2c:	strne	ip, [r4]
   12c30:	movne	r3, ip
   12c34:	add	r1, r1, ip
   12c38:	rsb	r2, r3, r2
   12c3c:	ldr	r3, [sp, #8]
   12c40:	bl	12afc <strspn@plt+0x1994>
   12c44:	subs	r3, r0, #0
   12c48:	ble	12c60 <strspn@plt+0x1af8>
   12c4c:	ldr	r2, [r4]
   12c50:	mov	r0, r3
   12c54:	add	r3, r2, r3
   12c58:	str	r3, [r4]
   12c5c:	pop	{r4, pc}
   12c60:	mov	r0, r3
   12c64:	pop	{r4, pc}
   12c68:	mvn	r0, #0
   12c6c:	pop	{r4, pc}
   12c70:	cmp	r2, #0
   12c74:	cmpne	r0, #0
   12c78:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   12c7c:	mov	r4, r0
   12c80:	mov	r7, r2
   12c84:	movne	r3, #0
   12c88:	moveq	r3, #1
   12c8c:	mov	r9, r1
   12c90:	beq	12d2c <strspn@plt+0x1bc4>
   12c94:	cmp	r1, #0
   12c98:	beq	12d2c <strspn@plt+0x1bc4>
   12c9c:	mov	r6, r0
   12ca0:	mov	r8, #1
   12ca4:	ldrb	r5, [r6], #1
   12ca8:	cmp	r5, #0
   12cac:	beq	12d1c <strspn@plt+0x1bb4>
   12cb0:	cmp	r5, #44	; 0x2c
   12cb4:	ldrsb	r0, [r4, #1]
   12cb8:	moveq	r5, r4
   12cbc:	movne	r5, #0
   12cc0:	cmp	r3, #0
   12cc4:	moveq	r3, r4
   12cc8:	cmp	r0, #0
   12ccc:	mov	r0, r3
   12cd0:	moveq	r5, r6
   12cd4:	cmp	r5, #0
   12cd8:	rsb	r1, r3, r5
   12cdc:	beq	12d14 <strspn@plt+0x1bac>
   12ce0:	cmp	r3, r5
   12ce4:	bcs	12d24 <strspn@plt+0x1bbc>
   12ce8:	blx	r7
   12cec:	mov	r3, #0
   12cf0:	cmp	r0, #0
   12cf4:	and	r2, r0, #7
   12cf8:	poplt	{r3, r4, r5, r6, r7, r8, r9, pc}
   12cfc:	ldrb	r1, [r9, r0, asr #3]
   12d00:	orr	r2, r1, r8, lsl r2
   12d04:	strb	r2, [r9, r0, asr #3]
   12d08:	ldrsb	r2, [r5]
   12d0c:	cmp	r2, r3
   12d10:	beq	12d1c <strspn@plt+0x1bb4>
   12d14:	adds	r4, r4, #1
   12d18:	bne	12ca4 <strspn@plt+0x1b3c>
   12d1c:	mov	r0, #0
   12d20:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12d24:	mvn	r0, #0
   12d28:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12d2c:	mvn	r0, #21
   12d30:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12d34:	cmp	r2, #0
   12d38:	cmpne	r0, #0
   12d3c:	push	{r4, r5, r6, r7, r8, lr}
   12d40:	movne	r3, #0
   12d44:	moveq	r3, #1
   12d48:	mov	r4, r0
   12d4c:	mov	r8, r2
   12d50:	mov	r7, r1
   12d54:	beq	12de8 <strspn@plt+0x1c80>
   12d58:	cmp	r1, #0
   12d5c:	beq	12de8 <strspn@plt+0x1c80>
   12d60:	mov	r6, r0
   12d64:	ldrb	r5, [r6], #1
   12d68:	cmp	r5, #0
   12d6c:	beq	12dd8 <strspn@plt+0x1c70>
   12d70:	cmp	r5, #44	; 0x2c
   12d74:	ldrsb	r0, [r4, #1]
   12d78:	moveq	r5, r4
   12d7c:	movne	r5, #0
   12d80:	cmp	r3, #0
   12d84:	moveq	r3, r4
   12d88:	cmp	r0, #0
   12d8c:	mov	r0, r3
   12d90:	moveq	r5, r6
   12d94:	cmp	r5, #0
   12d98:	rsb	r1, r3, r5
   12d9c:	beq	12dd0 <strspn@plt+0x1c68>
   12da0:	cmp	r3, r5
   12da4:	bcs	12de0 <strspn@plt+0x1c78>
   12da8:	blx	r8
   12dac:	mov	r3, #0
   12db0:	cmp	r0, #0
   12db4:	poplt	{r4, r5, r6, r7, r8, pc}
   12db8:	ldr	r2, [r7]
   12dbc:	orr	r0, r2, r0
   12dc0:	str	r0, [r7]
   12dc4:	ldrsb	r2, [r5]
   12dc8:	cmp	r2, r3
   12dcc:	beq	12dd8 <strspn@plt+0x1c70>
   12dd0:	adds	r4, r4, #1
   12dd4:	bne	12d64 <strspn@plt+0x1bfc>
   12dd8:	mov	r0, #0
   12ddc:	pop	{r4, r5, r6, r7, r8, pc}
   12de0:	mvn	r0, #0
   12de4:	pop	{r4, r5, r6, r7, r8, pc}
   12de8:	mvn	r0, #21
   12dec:	pop	{r4, r5, r6, r7, r8, pc}
   12df0:	ldr	ip, [pc, #380]	; 12f74 <strspn@plt+0x1e0c>
   12df4:	push	{r4, r5, r6, r7, r8, r9, lr}
   12df8:	subs	r4, r0, #0
   12dfc:	ldr	r0, [pc, #372]	; 12f78 <strspn@plt+0x1e10>
   12e00:	add	ip, pc, ip
   12e04:	mov	r6, r2
   12e08:	sub	sp, sp, #12
   12e0c:	mov	r2, ip
   12e10:	mov	r8, #0
   12e14:	ldr	r7, [ip, r0]
   12e18:	mov	r9, r1
   12e1c:	str	r8, [sp]
   12e20:	ldr	r2, [r7]
   12e24:	str	r2, [sp, #4]
   12e28:	beq	12e98 <strspn@plt+0x1d30>
   12e2c:	str	r3, [r1]
   12e30:	str	r3, [r6]
   12e34:	bl	11054 <__errno_location@plt>
   12e38:	str	r8, [r0]
   12e3c:	mov	r5, r0
   12e40:	ldrsb	r3, [r4]
   12e44:	cmp	r3, #58	; 0x3a
   12e48:	beq	12eb4 <strspn@plt+0x1d4c>
   12e4c:	mov	r0, r4
   12e50:	mov	r2, #10
   12e54:	mov	r1, sp
   12e58:	bl	10ec8 <strtol@plt>
   12e5c:	str	r0, [r9]
   12e60:	str	r0, [r6]
   12e64:	ldr	r0, [r5]
   12e68:	cmp	r0, #0
   12e6c:	bne	12f68 <strspn@plt+0x1e00>
   12e70:	ldr	r3, [sp]
   12e74:	cmp	r3, #0
   12e78:	beq	12f68 <strspn@plt+0x1e00>
   12e7c:	cmp	r4, r3
   12e80:	beq	12f68 <strspn@plt+0x1e00>
   12e84:	ldrsb	r2, [r3]
   12e88:	cmp	r2, #58	; 0x3a
   12e8c:	beq	12f00 <strspn@plt+0x1d98>
   12e90:	cmp	r2, #45	; 0x2d
   12e94:	beq	12f10 <strspn@plt+0x1da8>
   12e98:	mov	r0, #0
   12e9c:	ldr	r2, [sp, #4]
   12ea0:	ldr	r3, [r7]
   12ea4:	cmp	r2, r3
   12ea8:	bne	12f70 <strspn@plt+0x1e08>
   12eac:	add	sp, sp, #12
   12eb0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12eb4:	add	r4, r4, #1
   12eb8:	mov	r1, sp
   12ebc:	mov	r2, #10
   12ec0:	mov	r0, r4
   12ec4:	bl	10ec8 <strtol@plt>
   12ec8:	str	r0, [r6]
   12ecc:	ldr	r3, [r5]
   12ed0:	cmp	r3, #0
   12ed4:	bne	12f68 <strspn@plt+0x1e00>
   12ed8:	ldr	r3, [sp]
   12edc:	cmp	r3, #0
   12ee0:	beq	12f68 <strspn@plt+0x1e00>
   12ee4:	ldrsb	r2, [r3]
   12ee8:	cmp	r2, #0
   12eec:	bne	12f68 <strspn@plt+0x1e00>
   12ef0:	cmp	r4, r3
   12ef4:	movne	r0, #0
   12ef8:	mvneq	r0, #0
   12efc:	b	12e9c <strspn@plt+0x1d34>
   12f00:	ldrsb	r2, [r3, #1]
   12f04:	cmp	r2, #0
   12f08:	streq	r0, [r6]
   12f0c:	beq	12e9c <strspn@plt+0x1d34>
   12f10:	add	r4, r3, #1
   12f14:	mov	ip, #0
   12f18:	mov	r1, sp
   12f1c:	mov	r2, #10
   12f20:	mov	r0, r4
   12f24:	str	ip, [r5]
   12f28:	str	ip, [sp]
   12f2c:	bl	10ec8 <strtol@plt>
   12f30:	str	r0, [r6]
   12f34:	ldr	r3, [r5]
   12f38:	cmp	r3, #0
   12f3c:	bne	12f68 <strspn@plt+0x1e00>
   12f40:	ldr	r2, [sp]
   12f44:	cmp	r2, #0
   12f48:	beq	12f68 <strspn@plt+0x1e00>
   12f4c:	ldrsb	r3, [r2]
   12f50:	cmp	r3, #0
   12f54:	bne	12f68 <strspn@plt+0x1e00>
   12f58:	cmp	r4, r2
   12f5c:	movne	r0, #0
   12f60:	mvneq	r0, #0
   12f64:	b	12e9c <strspn@plt+0x1d34>
   12f68:	mvn	r0, #0
   12f6c:	b	12e9c <strspn@plt+0x1d34>
   12f70:	bl	10f58 <__stack_chk_fail@plt>
   12f74:	strdeq	r2, [r1], -r8
   12f78:	strdeq	r0, [r0], -ip
   12f7c:	rsbs	r2, r0, #1
   12f80:	push	{r4, r5, r6, lr}
   12f84:	movcc	r2, #0
   12f88:	rsbs	r3, r1, #1
   12f8c:	mov	r5, r0
   12f90:	mov	r4, r1
   12f94:	movcc	r3, #0
   12f98:	ands	ip, r2, r3
   12f9c:	bne	13008 <strspn@plt+0x1ea0>
   12fa0:	orrs	r3, r2, r3
   12fa4:	bne	13010 <strspn@plt+0x1ea8>
   12fa8:	bl	10ebc <strcmp@plt>
   12fac:	cmp	r0, #0
   12fb0:	beq	13008 <strspn@plt+0x1ea0>
   12fb4:	mov	r0, r5
   12fb8:	bl	11018 <strlen@plt>
   12fbc:	mov	r6, r0
   12fc0:	mov	r0, r4
   12fc4:	bl	11018 <strlen@plt>
   12fc8:	cmp	r6, #0
   12fcc:	beq	12fe0 <strspn@plt+0x1e78>
   12fd0:	sub	r3, r6, #1
   12fd4:	ldrsb	r2, [r5, r3]
   12fd8:	cmp	r2, #47	; 0x2f
   12fdc:	moveq	r6, r3
   12fe0:	cmp	r0, #0
   12fe4:	beq	12ff8 <strspn@plt+0x1e90>
   12fe8:	sub	r3, r0, #1
   12fec:	ldrsb	r2, [r4, r3]
   12ff0:	cmp	r2, #47	; 0x2f
   12ff4:	moveq	r0, r3
   12ff8:	cmp	r6, r0
   12ffc:	beq	13018 <strspn@plt+0x1eb0>
   13000:	mov	r0, #0
   13004:	pop	{r4, r5, r6, pc}
   13008:	mov	r0, #1
   1300c:	pop	{r4, r5, r6, pc}
   13010:	mov	r0, ip
   13014:	pop	{r4, r5, r6, pc}
   13018:	mov	r0, r5
   1301c:	mov	r1, r4
   13020:	mov	r2, r6
   13024:	bl	11138 <strncmp@plt>
   13028:	rsbs	r0, r0, #1
   1302c:	movcc	r0, #0
   13030:	pop	{r4, r5, r6, pc}
   13034:	ldr	r3, [pc, #248]	; 13134 <strspn@plt+0x1fcc>
   13038:	cmp	r0, #0
   1303c:	cmpne	r1, #0
   13040:	ldr	r2, [pc, #240]	; 13138 <strspn@plt+0x1fd0>
   13044:	add	r3, pc, r3
   13048:	push	{r4, r5, r6, r7, r8, r9, lr}
   1304c:	sub	sp, sp, #20
   13050:	ldr	r9, [r3, r2]
   13054:	mov	r6, r1
   13058:	addne	r8, sp, #4
   1305c:	addne	r7, sp, #8
   13060:	ldr	r3, [r9]
   13064:	str	r3, [sp, #12]
   13068:	bne	130b0 <strspn@plt+0x1f48>
   1306c:	b	13128 <strspn@plt+0x1fc0>
   13070:	cmp	r4, r3
   13074:	bne	13128 <strspn@plt+0x1fc0>
   13078:	mov	r0, r5
   1307c:	mov	r1, r6
   13080:	mov	r2, r4
   13084:	bl	11138 <strncmp@plt>
   13088:	cmp	r0, #0
   1308c:	bne	13128 <strspn@plt+0x1fc0>
   13090:	adds	r6, r6, r4
   13094:	moveq	r3, #0
   13098:	movne	r3, #1
   1309c:	adds	r0, r5, r4
   130a0:	moveq	r3, #0
   130a4:	andne	r3, r3, #1
   130a8:	cmp	r3, #0
   130ac:	beq	13128 <strspn@plt+0x1fc0>
   130b0:	mov	r1, r8
   130b4:	bl	11b70 <strspn@plt+0xa08>
   130b8:	mov	r1, r7
   130bc:	mov	r5, r0
   130c0:	mov	r0, r6
   130c4:	bl	11b70 <strspn@plt+0xa08>
   130c8:	ldr	r4, [sp, #4]
   130cc:	ldr	r3, [sp, #8]
   130d0:	mov	r6, r0
   130d4:	adds	r0, r3, r4
   130d8:	beq	1310c <strspn@plt+0x1fa4>
   130dc:	cmp	r0, #1
   130e0:	bne	13070 <strspn@plt+0x1f08>
   130e4:	cmp	r5, #0
   130e8:	beq	130f8 <strspn@plt+0x1f90>
   130ec:	ldrsb	r2, [r5]
   130f0:	cmp	r2, #47	; 0x2f
   130f4:	beq	13110 <strspn@plt+0x1fa8>
   130f8:	cmp	r6, #0
   130fc:	beq	13070 <strspn@plt+0x1f08>
   13100:	ldrsb	r2, [r6]
   13104:	cmp	r2, #47	; 0x2f
   13108:	bne	13070 <strspn@plt+0x1f08>
   1310c:	mov	r0, #1
   13110:	ldr	r2, [sp, #12]
   13114:	ldr	r3, [r9]
   13118:	cmp	r2, r3
   1311c:	bne	13130 <strspn@plt+0x1fc8>
   13120:	add	sp, sp, #20
   13124:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13128:	mov	r0, #0
   1312c:	b	13110 <strspn@plt+0x1fa8>
   13130:	bl	10f58 <__stack_chk_fail@plt>
   13134:			; <UNDEFINED> instruction: 0x00011fb4
   13138:	strdeq	r0, [r0], -ip
   1313c:	rsbs	r3, r0, #1
   13140:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13144:	movcc	r3, #0
   13148:	rsbs	r4, r1, #1
   1314c:	mov	r7, r1
   13150:	mov	r6, r2
   13154:	mov	sl, r0
   13158:	movcc	r4, #0
   1315c:	tst	r3, r4
   13160:	bne	131c4 <strspn@plt+0x205c>
   13164:	cmp	r3, #0
   13168:	bne	131dc <strspn@plt+0x2074>
   1316c:	cmp	r4, #0
   13170:	bne	131ec <strspn@plt+0x2084>
   13174:	bl	11018 <strlen@plt>
   13178:	mvn	r3, r0
   1317c:	cmp	r6, r3
   13180:	mov	r5, r0
   13184:	bhi	131d4 <strspn@plt+0x206c>
   13188:	add	r9, r0, r6
   1318c:	add	r0, r9, #1
   13190:	bl	10fc4 <malloc@plt>
   13194:	subs	r8, r0, #0
   13198:	beq	131f4 <strspn@plt+0x208c>
   1319c:	mov	r1, sl
   131a0:	mov	r2, r5
   131a4:	bl	10f34 <memcpy@plt>
   131a8:	add	r0, r8, r5
   131ac:	mov	r1, r7
   131b0:	mov	r2, r6
   131b4:	bl	10f34 <memcpy@plt>
   131b8:	strb	r4, [r8, r9]
   131bc:	mov	r0, r8
   131c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131c4:	mov	r0, #1
   131c8:	mov	r1, r0
   131cc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   131d0:	b	10ea4 <calloc@plt>
   131d4:	mov	r0, r4
   131d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131dc:	mov	r0, r1
   131e0:	mov	r1, r2
   131e4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   131e8:	b	10f70 <__strndup@plt>
   131ec:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   131f0:	b	11078 <__strdup@plt>
   131f4:	mov	r0, r8
   131f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131fc:	push	{r3, r4, r5, lr}
   13200:	subs	r4, r1, #0
   13204:	mov	r5, r0
   13208:	beq	13228 <strspn@plt+0x20c0>
   1320c:	mov	r0, r4
   13210:	bl	11018 <strlen@plt>
   13214:	mov	r1, r4
   13218:	mov	r2, r0
   1321c:	mov	r0, r5
   13220:	pop	{r3, r4, r5, lr}
   13224:	b	1313c <strspn@plt+0x1fd4>
   13228:	mov	r2, r4
   1322c:	mov	r0, r5
   13230:	mov	r1, r4
   13234:	pop	{r3, r4, r5, lr}
   13238:	b	1313c <strspn@plt+0x1fd4>
   1323c:	push	{r1, r2, r3}
   13240:	mov	r1, #1
   13244:	push	{r4, r5, lr}
   13248:	sub	sp, sp, #16
   1324c:	ldr	lr, [pc, #124]	; 132d0 <strspn@plt+0x2168>
   13250:	add	ip, sp, #32
   13254:	ldr	r4, [pc, #120]	; 132d4 <strspn@plt+0x216c>
   13258:	mov	r5, r0
   1325c:	add	lr, pc, lr
   13260:	mov	r3, ip
   13264:	ldr	r2, [sp, #28]
   13268:	add	r0, sp, #8
   1326c:	ldr	r4, [lr, r4]
   13270:	str	ip, [sp, #4]
   13274:	ldr	ip, [r4]
   13278:	str	ip, [sp, #12]
   1327c:	bl	1106c <__vasprintf_chk@plt>
   13280:	subs	r2, r0, #0
   13284:	blt	132c4 <strspn@plt+0x215c>
   13288:	mov	r0, r5
   1328c:	ldr	r1, [sp, #8]
   13290:	bl	1313c <strspn@plt+0x1fd4>
   13294:	mov	r5, r0
   13298:	ldr	r0, [sp, #8]
   1329c:	bl	10f04 <free@plt>
   132a0:	mov	r0, r5
   132a4:	ldr	r2, [sp, #12]
   132a8:	ldr	r3, [r4]
   132ac:	cmp	r2, r3
   132b0:	bne	132cc <strspn@plt+0x2164>
   132b4:	add	sp, sp, #16
   132b8:	pop	{r4, r5, lr}
   132bc:	add	sp, sp, #12
   132c0:	bx	lr
   132c4:	mov	r0, #0
   132c8:	b	132a4 <strspn@plt+0x213c>
   132cc:	bl	10f58 <__stack_chk_fail@plt>
   132d0:	muleq	r1, ip, sp
   132d4:	strdeq	r0, [r0], -ip
   132d8:	ldr	ip, [pc, #372]	; 13454 <strspn@plt+0x22ec>
   132dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132e0:	mov	r6, r0
   132e4:	ldr	r0, [pc, #364]	; 13458 <strspn@plt+0x22f0>
   132e8:	add	ip, pc, ip
   132ec:	ldr	r4, [r6]
   132f0:	mov	r9, r3
   132f4:	sub	sp, sp, #12
   132f8:	mov	r7, r1
   132fc:	ldr	r5, [ip, r0]
   13300:	mov	r8, r2
   13304:	ldrsb	ip, [r4]
   13308:	ldr	r3, [r5]
   1330c:	cmp	ip, #0
   13310:	moveq	r0, ip
   13314:	str	r3, [sp, #4]
   13318:	beq	133c8 <strspn@plt+0x2260>
   1331c:	mov	r0, r4
   13320:	mov	r1, r2
   13324:	bl	11168 <strspn@plt>
   13328:	ldrb	sl, [r4, r0]
   1332c:	add	r4, r4, r0
   13330:	cmp	sl, #0
   13334:	beq	13444 <strspn@plt+0x22dc>
   13338:	cmp	r9, #0
   1333c:	beq	133e0 <strspn@plt+0x2278>
   13340:	sxtb	r9, sl
   13344:	ldr	r0, [pc, #272]	; 1345c <strspn@plt+0x22f4>
   13348:	mov	r1, r9
   1334c:	add	r0, pc, r0
   13350:	bl	11030 <strchr@plt>
   13354:	cmp	r0, #0
   13358:	beq	13404 <strspn@plt+0x229c>
   1335c:	add	fp, r4, #1
   13360:	mov	r1, sp
   13364:	mov	r3, #0
   13368:	strb	sl, [sp]
   1336c:	mov	r0, fp
   13370:	strb	r3, [sp, #1]
   13374:	bl	11c10 <strspn@plt+0xaa8>
   13378:	add	r3, r4, r0
   1337c:	str	r0, [r7]
   13380:	ldrb	r3, [r3, #1]
   13384:	cmp	r3, #0
   13388:	beq	13444 <strspn@plt+0x22dc>
   1338c:	sxtb	r3, r3
   13390:	cmp	r9, r3
   13394:	bne	13444 <strspn@plt+0x22dc>
   13398:	add	r0, r0, #2
   1339c:	add	r7, r4, r0
   133a0:	ldrb	r1, [r4, r0]
   133a4:	cmp	r1, #0
   133a8:	beq	133c0 <strspn@plt+0x2258>
   133ac:	mov	r0, r8
   133b0:	sxtb	r1, r1
   133b4:	bl	11030 <strchr@plt>
   133b8:	cmp	r0, #0
   133bc:	beq	13444 <strspn@plt+0x22dc>
   133c0:	mov	r0, fp
   133c4:	str	r7, [r6]
   133c8:	ldr	r2, [sp, #4]
   133cc:	ldr	r3, [r5]
   133d0:	cmp	r2, r3
   133d4:	bne	13450 <strspn@plt+0x22e8>
   133d8:	add	sp, sp, #12
   133dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133e0:	mov	r0, r4
   133e4:	mov	r1, r8
   133e8:	bl	10ed4 <strcspn@plt>
   133ec:	mov	r3, r0
   133f0:	mov	r0, r4
   133f4:	add	r4, r4, r3
   133f8:	str	r3, [r7]
   133fc:	str	r4, [r6]
   13400:	b	133c8 <strspn@plt+0x2260>
   13404:	mov	r1, r8
   13408:	mov	r0, r4
   1340c:	bl	11c10 <strspn@plt+0xaa8>
   13410:	str	r0, [r7]
   13414:	add	r7, r4, r0
   13418:	ldrb	r1, [r4, r0]
   1341c:	cmp	r1, #0
   13420:	beq	13438 <strspn@plt+0x22d0>
   13424:	mov	r0, r8
   13428:	sxtb	r1, r1
   1342c:	bl	11030 <strchr@plt>
   13430:	cmp	r0, #0
   13434:	beq	133fc <strspn@plt+0x2294>
   13438:	str	r7, [r6]
   1343c:	mov	r0, r4
   13440:	b	133c8 <strspn@plt+0x2260>
   13444:	str	r4, [r6]
   13448:	mov	r0, #0
   1344c:	b	133c8 <strspn@plt+0x2260>
   13450:	bl	10f58 <__stack_chk_fail@plt>
   13454:	andeq	r1, r1, r0, lsl sp
   13458:	strdeq	r0, [r0], -ip
   1345c:	andeq	r1, r0, r0, lsl #1
   13460:	push	{r4, lr}
   13464:	mov	r4, r0
   13468:	b	13474 <strspn@plt+0x230c>
   1346c:	cmp	r0, #10
   13470:	beq	1348c <strspn@plt+0x2324>
   13474:	mov	r0, r4
   13478:	bl	11084 <fgetc@plt>
   1347c:	cmn	r0, #1
   13480:	bne	1346c <strspn@plt+0x2304>
   13484:	mov	r0, #1
   13488:	pop	{r4, pc}
   1348c:	mov	r0, #0
   13490:	pop	{r4, pc}
   13494:	cmp	r3, #0
   13498:	cmpeq	r2, #0
   1349c:	bne	134b4 <strspn@plt+0x234c>
   134a0:	cmp	r1, #0
   134a4:	cmpeq	r0, #0
   134a8:	mvnne	r1, #0
   134ac:	mvnne	r0, #0
   134b0:	b	134d0 <strspn@plt+0x2368>
   134b4:	sub	sp, sp, #8
   134b8:	push	{sp, lr}
   134bc:	bl	1351c <strspn@plt+0x23b4>
   134c0:	ldr	lr, [sp, #4]
   134c4:	add	sp, sp, #8
   134c8:	pop	{r2, r3}
   134cc:	bx	lr
   134d0:	push	{r1, lr}
   134d4:	mov	r0, #8
   134d8:	bl	10eb0 <raise@plt>
   134dc:	pop	{r1, pc}
   134e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   134e4:	mov	r8, r2
   134e8:	mov	r6, r0
   134ec:	mov	r7, r1
   134f0:	mov	sl, r3
   134f4:	ldr	r9, [sp, #32]
   134f8:	bl	13558 <strspn@plt+0x23f0>
   134fc:	umull	r4, r5, r8, r0
   13500:	mul	r8, r8, r1
   13504:	mla	r2, r0, sl, r8
   13508:	add	r5, r2, r5
   1350c:	subs	r4, r6, r4
   13510:	sbc	r5, r7, r5
   13514:	strd	r4, [r9]
   13518:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1351c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   13520:	mov	r8, r2
   13524:	mov	r6, r0
   13528:	mov	r7, r1
   1352c:	mov	r5, r3
   13530:	ldr	r9, [sp, #32]
   13534:	bl	139e4 <strspn@plt+0x287c>
   13538:	mul	r3, r0, r5
   1353c:	umull	r4, r5, r0, r8
   13540:	mla	r8, r8, r1, r3
   13544:	add	r5, r8, r5
   13548:	subs	r4, r6, r4
   1354c:	sbc	r5, r7, r5
   13550:	strd	r4, [r9]
   13554:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1355c:	rsbs	r4, r0, #0
   13560:	rsc	r5, r1, #0
   13564:	cmp	r1, #0
   13568:	mvn	r6, #0
   1356c:	sub	sp, sp, #12
   13570:	movge	r4, r0
   13574:	movge	r5, r1
   13578:	movge	r6, #0
   1357c:	cmp	r3, #0
   13580:	blt	137b8 <strspn@plt+0x2650>
   13584:	cmp	r3, #0
   13588:	mov	sl, r4
   1358c:	mov	ip, r5
   13590:	mov	r0, r2
   13594:	mov	r1, r3
   13598:	mov	r8, r2
   1359c:	mov	r7, r4
   135a0:	mov	r9, r5
   135a4:	bne	1369c <strspn@plt+0x2534>
   135a8:	cmp	r2, r5
   135ac:	bls	136d8 <strspn@plt+0x2570>
   135b0:	clz	r3, r2
   135b4:	cmp	r3, #0
   135b8:	rsbne	r2, r3, #32
   135bc:	lslne	r8, r0, r3
   135c0:	lsrne	r2, r4, r2
   135c4:	lslne	r7, r4, r3
   135c8:	orrne	r9, r2, r5, lsl r3
   135cc:	lsr	r4, r8, #16
   135d0:	uxth	sl, r8
   135d4:	mov	r1, r4
   135d8:	mov	r0, r9
   135dc:	bl	13e14 <strspn@plt+0x2cac>
   135e0:	mov	r1, r4
   135e4:	mov	fp, r0
   135e8:	mov	r0, r9
   135ec:	bl	14000 <strspn@plt+0x2e98>
   135f0:	mul	r0, sl, fp
   135f4:	lsr	r2, r7, #16
   135f8:	orr	r1, r2, r1, lsl #16
   135fc:	cmp	r0, r1
   13600:	bls	13624 <strspn@plt+0x24bc>
   13604:	adds	r1, r1, r8
   13608:	sub	r3, fp, #1
   1360c:	bcs	13620 <strspn@plt+0x24b8>
   13610:	cmp	r0, r1
   13614:	subhi	fp, fp, #2
   13618:	addhi	r1, r1, r8
   1361c:	bhi	13624 <strspn@plt+0x24bc>
   13620:	mov	fp, r3
   13624:	rsb	r9, r0, r1
   13628:	mov	r1, r4
   1362c:	uxth	r7, r7
   13630:	mov	r0, r9
   13634:	bl	13e14 <strspn@plt+0x2cac>
   13638:	mov	r1, r4
   1363c:	mov	r5, r0
   13640:	mov	r0, r9
   13644:	bl	14000 <strspn@plt+0x2e98>
   13648:	mul	sl, sl, r5
   1364c:	orr	r1, r7, r1, lsl #16
   13650:	cmp	sl, r1
   13654:	bls	13674 <strspn@plt+0x250c>
   13658:	adds	r8, r1, r8
   1365c:	sub	r3, r5, #1
   13660:	bcs	13670 <strspn@plt+0x2508>
   13664:	cmp	sl, r8
   13668:	subhi	r5, r5, #2
   1366c:	bhi	13674 <strspn@plt+0x250c>
   13670:	mov	r5, r3
   13674:	orr	r3, r5, fp, lsl #16
   13678:	mov	r4, #0
   1367c:	cmp	r6, #0
   13680:	mov	r0, r3
   13684:	mov	r1, r4
   13688:	beq	13694 <strspn@plt+0x252c>
   1368c:	rsbs	r0, r0, #0
   13690:	rsc	r1, r1, #0
   13694:	add	sp, sp, #12
   13698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1369c:	cmp	r3, r5
   136a0:	movhi	r4, #0
   136a4:	movhi	r3, r4
   136a8:	bhi	1367c <strspn@plt+0x2514>
   136ac:	clz	r5, r1
   136b0:	cmp	r5, #0
   136b4:	bne	138a4 <strspn@plt+0x273c>
   136b8:	cmp	r1, ip
   136bc:	cmpcs	r2, sl
   136c0:	movhi	r4, #0
   136c4:	movls	r4, #1
   136c8:	movls	r3, #1
   136cc:	movls	r4, r5
   136d0:	movhi	r3, r4
   136d4:	b	1367c <strspn@plt+0x2514>
   136d8:	cmp	r2, #0
   136dc:	bne	136f0 <strspn@plt+0x2588>
   136e0:	mov	r1, r2
   136e4:	mov	r0, #1
   136e8:	bl	13e14 <strspn@plt+0x2cac>
   136ec:	mov	r8, r0
   136f0:	clz	r3, r8
   136f4:	cmp	r3, #0
   136f8:	bne	137c8 <strspn@plt+0x2660>
   136fc:	rsb	r9, r8, r9
   13700:	lsr	r5, r8, #16
   13704:	uxth	sl, r8
   13708:	mov	r4, #1
   1370c:	mov	r1, r5
   13710:	mov	r0, r9
   13714:	bl	13e14 <strspn@plt+0x2cac>
   13718:	mov	r1, r5
   1371c:	mov	fp, r0
   13720:	mov	r0, r9
   13724:	bl	14000 <strspn@plt+0x2e98>
   13728:	mul	r0, sl, fp
   1372c:	lsr	r2, r7, #16
   13730:	orr	r1, r2, r1, lsl #16
   13734:	cmp	r0, r1
   13738:	bls	13758 <strspn@plt+0x25f0>
   1373c:	adds	r1, r1, r8
   13740:	sub	r3, fp, #1
   13744:	bcs	139c4 <strspn@plt+0x285c>
   13748:	cmp	r0, r1
   1374c:	subhi	fp, fp, #2
   13750:	addhi	r1, r1, r8
   13754:	bls	139c4 <strspn@plt+0x285c>
   13758:	rsb	r2, r0, r1
   1375c:	mov	r1, r5
   13760:	str	r2, [sp]
   13764:	uxth	r7, r7
   13768:	mov	r0, r2
   1376c:	bl	13e14 <strspn@plt+0x2cac>
   13770:	ldr	r2, [sp]
   13774:	mov	r1, r5
   13778:	mov	r9, r0
   1377c:	mov	r0, r2
   13780:	bl	14000 <strspn@plt+0x2e98>
   13784:	mul	sl, sl, r9
   13788:	orr	r1, r7, r1, lsl #16
   1378c:	cmp	sl, r1
   13790:	bls	137b0 <strspn@plt+0x2648>
   13794:	adds	r8, r1, r8
   13798:	sub	r3, r9, #1
   1379c:	bcs	137ac <strspn@plt+0x2644>
   137a0:	cmp	sl, r8
   137a4:	subhi	r9, r9, #2
   137a8:	bhi	137b0 <strspn@plt+0x2648>
   137ac:	mov	r9, r3
   137b0:	orr	r3, r9, fp, lsl #16
   137b4:	b	1367c <strspn@plt+0x2514>
   137b8:	mvn	r6, r6
   137bc:	rsbs	r2, r2, #0
   137c0:	rsc	r3, r3, #0
   137c4:	b	13584 <strspn@plt+0x241c>
   137c8:	lsl	r8, r8, r3
   137cc:	rsb	fp, r3, #32
   137d0:	lsr	r4, r9, fp
   137d4:	lsr	fp, r7, fp
   137d8:	lsr	r5, r8, #16
   137dc:	orr	fp, fp, r9, lsl r3
   137e0:	mov	r0, r4
   137e4:	lsl	r7, r7, r3
   137e8:	mov	r1, r5
   137ec:	uxth	sl, r8
   137f0:	bl	13e14 <strspn@plt+0x2cac>
   137f4:	mov	r1, r5
   137f8:	mov	r3, r0
   137fc:	mov	r0, r4
   13800:	str	r3, [sp]
   13804:	bl	14000 <strspn@plt+0x2e98>
   13808:	ldr	r3, [sp]
   1380c:	lsr	r2, fp, #16
   13810:	mul	r0, sl, r3
   13814:	orr	r1, r2, r1, lsl #16
   13818:	cmp	r0, r1
   1381c:	bls	1383c <strspn@plt+0x26d4>
   13820:	adds	r1, r1, r8
   13824:	sub	r2, r3, #1
   13828:	bcs	139dc <strspn@plt+0x2874>
   1382c:	cmp	r0, r1
   13830:	subhi	r3, r3, #2
   13834:	addhi	r1, r1, r8
   13838:	bls	139dc <strspn@plt+0x2874>
   1383c:	rsb	r9, r0, r1
   13840:	mov	r1, r5
   13844:	str	r3, [sp]
   13848:	uxth	fp, fp
   1384c:	mov	r0, r9
   13850:	bl	13e14 <strspn@plt+0x2cac>
   13854:	mov	r1, r5
   13858:	mov	r4, r0
   1385c:	mov	r0, r9
   13860:	bl	14000 <strspn@plt+0x2e98>
   13864:	mul	r9, sl, r4
   13868:	ldr	r3, [sp]
   1386c:	orr	r1, fp, r1, lsl #16
   13870:	cmp	r9, r1
   13874:	bls	13898 <strspn@plt+0x2730>
   13878:	adds	r1, r1, r8
   1387c:	sub	r2, r4, #1
   13880:	bcs	13894 <strspn@plt+0x272c>
   13884:	cmp	r9, r1
   13888:	subhi	r4, r4, #2
   1388c:	addhi	r1, r1, r8
   13890:	bhi	13898 <strspn@plt+0x2730>
   13894:	mov	r4, r2
   13898:	rsb	r9, r9, r1
   1389c:	orr	r4, r4, r3, lsl #16
   138a0:	b	1370c <strspn@plt+0x25a4>
   138a4:	rsb	sl, r5, #32
   138a8:	lsl	r3, r2, r5
   138ac:	lsr	r0, r2, sl
   138b0:	lsr	r2, ip, sl
   138b4:	orr	r4, r0, r1, lsl r5
   138b8:	lsr	sl, r7, sl
   138bc:	mov	r0, r2
   138c0:	orr	sl, sl, ip, lsl r5
   138c4:	lsr	r9, r4, #16
   138c8:	str	r3, [sp, #4]
   138cc:	str	r2, [sp]
   138d0:	uxth	fp, r4
   138d4:	mov	r1, r9
   138d8:	bl	13e14 <strspn@plt+0x2cac>
   138dc:	ldr	r2, [sp]
   138e0:	mov	r1, r9
   138e4:	mov	r8, r0
   138e8:	mov	r0, r2
   138ec:	bl	14000 <strspn@plt+0x2e98>
   138f0:	mul	r0, fp, r8
   138f4:	lsr	r2, sl, #16
   138f8:	orr	r1, r2, r1, lsl #16
   138fc:	cmp	r0, r1
   13900:	bls	13920 <strspn@plt+0x27b8>
   13904:	adds	r1, r1, r4
   13908:	sub	r2, r8, #1
   1390c:	bcs	139d4 <strspn@plt+0x286c>
   13910:	cmp	r0, r1
   13914:	subhi	r8, r8, #2
   13918:	addhi	r1, r1, r4
   1391c:	bls	139d4 <strspn@plt+0x286c>
   13920:	rsb	ip, r0, r1
   13924:	mov	r1, r9
   13928:	str	ip, [sp]
   1392c:	mov	r0, ip
   13930:	bl	13e14 <strspn@plt+0x2cac>
   13934:	ldr	ip, [sp]
   13938:	mov	r1, r9
   1393c:	mov	r2, r0
   13940:	mov	r0, ip
   13944:	str	r2, [sp]
   13948:	bl	14000 <strspn@plt+0x2e98>
   1394c:	ldr	r2, [sp]
   13950:	uxth	ip, sl
   13954:	mul	fp, fp, r2
   13958:	orr	ip, ip, r1, lsl #16
   1395c:	cmp	fp, ip
   13960:	bls	13980 <strspn@plt+0x2818>
   13964:	adds	ip, ip, r4
   13968:	sub	r1, r2, #1
   1396c:	bcs	139cc <strspn@plt+0x2864>
   13970:	cmp	fp, ip
   13974:	subhi	r2, r2, #2
   13978:	addhi	ip, ip, r4
   1397c:	bls	139cc <strspn@plt+0x2864>
   13980:	ldr	r0, [sp, #4]
   13984:	orr	r1, r2, r8, lsl #16
   13988:	rsb	fp, fp, ip
   1398c:	umull	r2, r3, r1, r0
   13990:	cmp	fp, r3
   13994:	bcc	139b8 <strspn@plt+0x2850>
   13998:	movne	r4, #0
   1399c:	moveq	r4, #1
   139a0:	cmp	r2, r7, lsl r5
   139a4:	movls	r4, #0
   139a8:	andhi	r4, r4, #1
   139ac:	cmp	r4, #0
   139b0:	moveq	r3, r1
   139b4:	beq	1367c <strspn@plt+0x2514>
   139b8:	sub	r3, r1, #1
   139bc:	mov	r4, #0
   139c0:	b	1367c <strspn@plt+0x2514>
   139c4:	mov	fp, r3
   139c8:	b	13758 <strspn@plt+0x25f0>
   139cc:	mov	r2, r1
   139d0:	b	13980 <strspn@plt+0x2818>
   139d4:	mov	r8, r2
   139d8:	b	13920 <strspn@plt+0x27b8>
   139dc:	mov	r3, r2
   139e0:	b	1383c <strspn@plt+0x26d4>
   139e4:	cmp	r3, #0
   139e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139ec:	mov	r6, r0
   139f0:	sub	sp, sp, #12
   139f4:	mov	r5, r1
   139f8:	mov	r7, r0
   139fc:	mov	r4, r2
   13a00:	mov	r8, r1
   13a04:	bne	13ae4 <strspn@plt+0x297c>
   13a08:	cmp	r2, r1
   13a0c:	bls	13b20 <strspn@plt+0x29b8>
   13a10:	clz	r3, r2
   13a14:	cmp	r3, #0
   13a18:	rsbne	r8, r3, #32
   13a1c:	lslne	r4, r2, r3
   13a20:	lsrne	r8, r0, r8
   13a24:	lslne	r7, r0, r3
   13a28:	orrne	r8, r8, r1, lsl r3
   13a2c:	lsr	r5, r4, #16
   13a30:	uxth	sl, r4
   13a34:	mov	r1, r5
   13a38:	mov	r0, r8
   13a3c:	bl	13e14 <strspn@plt+0x2cac>
   13a40:	mov	r1, r5
   13a44:	mov	r9, r0
   13a48:	mov	r0, r8
   13a4c:	bl	14000 <strspn@plt+0x2e98>
   13a50:	mul	r0, sl, r9
   13a54:	lsr	r3, r7, #16
   13a58:	orr	r1, r3, r1, lsl #16
   13a5c:	cmp	r0, r1
   13a60:	bls	13a84 <strspn@plt+0x291c>
   13a64:	adds	r1, r1, r4
   13a68:	sub	r2, r9, #1
   13a6c:	bcs	13a80 <strspn@plt+0x2918>
   13a70:	cmp	r0, r1
   13a74:	subhi	r9, r9, #2
   13a78:	addhi	r1, r1, r4
   13a7c:	bhi	13a84 <strspn@plt+0x291c>
   13a80:	mov	r9, r2
   13a84:	rsb	r8, r0, r1
   13a88:	mov	r1, r5
   13a8c:	uxth	r7, r7
   13a90:	mov	r0, r8
   13a94:	bl	13e14 <strspn@plt+0x2cac>
   13a98:	mov	r1, r5
   13a9c:	mov	r6, r0
   13aa0:	mov	r0, r8
   13aa4:	bl	14000 <strspn@plt+0x2e98>
   13aa8:	mul	sl, sl, r6
   13aac:	orr	r1, r7, r1, lsl #16
   13ab0:	cmp	sl, r1
   13ab4:	bls	13ad0 <strspn@plt+0x2968>
   13ab8:	adds	r4, r1, r4
   13abc:	sub	r3, r6, #1
   13ac0:	bcs	13dcc <strspn@plt+0x2c64>
   13ac4:	cmp	sl, r4
   13ac8:	subhi	r6, r6, #2
   13acc:	bls	13dcc <strspn@plt+0x2c64>
   13ad0:	orr	r0, r6, r9, lsl #16
   13ad4:	mov	r6, #0
   13ad8:	mov	r1, r6
   13adc:	add	sp, sp, #12
   13ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ae4:	cmp	r3, r1
   13ae8:	movhi	r6, #0
   13aec:	movhi	r0, r6
   13af0:	bhi	13ad8 <strspn@plt+0x2970>
   13af4:	clz	r7, r3
   13af8:	cmp	r7, #0
   13afc:	bne	13bfc <strspn@plt+0x2a94>
   13b00:	cmp	r3, r1
   13b04:	cmpcs	r2, r6
   13b08:	movhi	r6, #0
   13b0c:	movls	r6, #1
   13b10:	movls	r0, #1
   13b14:	movls	r6, r7
   13b18:	movhi	r0, r6
   13b1c:	b	13ad8 <strspn@plt+0x2970>
   13b20:	cmp	r2, #0
   13b24:	bne	13b38 <strspn@plt+0x29d0>
   13b28:	mov	r1, r2
   13b2c:	mov	r0, #1
   13b30:	bl	13e14 <strspn@plt+0x2cac>
   13b34:	mov	r4, r0
   13b38:	clz	r3, r4
   13b3c:	cmp	r3, #0
   13b40:	bne	13cf8 <strspn@plt+0x2b90>
   13b44:	rsb	r5, r4, r5
   13b48:	lsr	r8, r4, #16
   13b4c:	uxth	sl, r4
   13b50:	mov	r6, #1
   13b54:	mov	r1, r8
   13b58:	mov	r0, r5
   13b5c:	bl	13e14 <strspn@plt+0x2cac>
   13b60:	mov	r1, r8
   13b64:	mov	r9, r0
   13b68:	mov	r0, r5
   13b6c:	bl	14000 <strspn@plt+0x2e98>
   13b70:	mul	r0, sl, r9
   13b74:	lsr	r3, r7, #16
   13b78:	orr	r1, r3, r1, lsl #16
   13b7c:	cmp	r0, r1
   13b80:	bls	13ba0 <strspn@plt+0x2a38>
   13b84:	adds	r1, r1, r4
   13b88:	sub	r2, r9, #1
   13b8c:	bcs	13dd4 <strspn@plt+0x2c6c>
   13b90:	cmp	r0, r1
   13b94:	subhi	r9, r9, #2
   13b98:	addhi	r1, r1, r4
   13b9c:	bls	13dd4 <strspn@plt+0x2c6c>
   13ba0:	rsb	fp, r0, r1
   13ba4:	mov	r1, r8
   13ba8:	uxth	r7, r7
   13bac:	mov	r0, fp
   13bb0:	bl	13e14 <strspn@plt+0x2cac>
   13bb4:	mov	r1, r8
   13bb8:	mov	r5, r0
   13bbc:	mov	r0, fp
   13bc0:	bl	14000 <strspn@plt+0x2e98>
   13bc4:	mul	sl, sl, r5
   13bc8:	orr	r1, r7, r1, lsl #16
   13bcc:	cmp	sl, r1
   13bd0:	bls	13bec <strspn@plt+0x2a84>
   13bd4:	adds	r4, r1, r4
   13bd8:	sub	r3, r5, #1
   13bdc:	bcs	13ddc <strspn@plt+0x2c74>
   13be0:	cmp	sl, r4
   13be4:	subhi	r5, r5, #2
   13be8:	bls	13ddc <strspn@plt+0x2c74>
   13bec:	orr	r0, r5, r9, lsl #16
   13bf0:	mov	r1, r6
   13bf4:	add	sp, sp, #12
   13bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bfc:	rsb	r1, r7, #32
   13c00:	lsl	r0, r2, r7
   13c04:	lsr	r2, r2, r1
   13c08:	lsr	fp, r5, r1
   13c0c:	orr	r8, r2, r3, lsl r7
   13c10:	lsr	r1, r6, r1
   13c14:	str	r0, [sp, #4]
   13c18:	orr	r5, r1, r5, lsl r7
   13c1c:	lsr	r9, r8, #16
   13c20:	mov	r0, fp
   13c24:	uxth	sl, r8
   13c28:	mov	r1, r9
   13c2c:	bl	13e14 <strspn@plt+0x2cac>
   13c30:	mov	r1, r9
   13c34:	mov	r4, r0
   13c38:	mov	r0, fp
   13c3c:	bl	14000 <strspn@plt+0x2e98>
   13c40:	mul	r0, sl, r4
   13c44:	lsr	ip, r5, #16
   13c48:	orr	r1, ip, r1, lsl #16
   13c4c:	cmp	r0, r1
   13c50:	bls	13c64 <strspn@plt+0x2afc>
   13c54:	adds	r1, r1, r8
   13c58:	sub	r2, r4, #1
   13c5c:	bcc	13df8 <strspn@plt+0x2c90>
   13c60:	mov	r4, r2
   13c64:	rsb	ip, r0, r1
   13c68:	mov	r1, r9
   13c6c:	str	ip, [sp]
   13c70:	uxth	r5, r5
   13c74:	mov	r0, ip
   13c78:	bl	13e14 <strspn@plt+0x2cac>
   13c7c:	ldr	ip, [sp]
   13c80:	mov	r1, r9
   13c84:	mov	fp, r0
   13c88:	mov	r0, ip
   13c8c:	bl	14000 <strspn@plt+0x2e98>
   13c90:	mul	sl, sl, fp
   13c94:	orr	r1, r5, r1, lsl #16
   13c98:	cmp	sl, r1
   13c9c:	bls	13cb0 <strspn@plt+0x2b48>
   13ca0:	adds	r1, r1, r8
   13ca4:	sub	r2, fp, #1
   13ca8:	bcc	13de4 <strspn@plt+0x2c7c>
   13cac:	mov	fp, r2
   13cb0:	ldr	r3, [sp, #4]
   13cb4:	orr	r0, fp, r4, lsl #16
   13cb8:	rsb	sl, sl, r1
   13cbc:	umull	r4, r5, r0, r3
   13cc0:	cmp	sl, r5
   13cc4:	bcc	13ce4 <strspn@plt+0x2b7c>
   13cc8:	movne	r3, #0
   13ccc:	moveq	r3, #1
   13cd0:	cmp	r4, r6, lsl r7
   13cd4:	movls	r6, #0
   13cd8:	andhi	r6, r3, #1
   13cdc:	cmp	r6, #0
   13ce0:	beq	13ad8 <strspn@plt+0x2970>
   13ce4:	mov	r6, #0
   13ce8:	sub	r0, r0, #1
   13cec:	mov	r1, r6
   13cf0:	add	sp, sp, #12
   13cf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cf8:	lsl	r4, r4, r3
   13cfc:	rsb	r9, r3, #32
   13d00:	lsr	r2, r5, r9
   13d04:	lsr	r9, r6, r9
   13d08:	lsr	r8, r4, #16
   13d0c:	orr	r9, r9, r5, lsl r3
   13d10:	mov	r0, r2
   13d14:	lsl	r7, r6, r3
   13d18:	mov	r1, r8
   13d1c:	str	r2, [sp]
   13d20:	bl	13e14 <strspn@plt+0x2cac>
   13d24:	ldr	r2, [sp]
   13d28:	mov	r1, r8
   13d2c:	uxth	sl, r4
   13d30:	mov	fp, r0
   13d34:	mov	r0, r2
   13d38:	bl	14000 <strspn@plt+0x2e98>
   13d3c:	mul	r0, sl, fp
   13d40:	lsr	r3, r9, #16
   13d44:	orr	r1, r3, r1, lsl #16
   13d48:	cmp	r0, r1
   13d4c:	bls	13d6c <strspn@plt+0x2c04>
   13d50:	adds	r1, r1, r4
   13d54:	sub	r3, fp, #1
   13d58:	bcs	13e0c <strspn@plt+0x2ca4>
   13d5c:	cmp	r0, r1
   13d60:	subhi	fp, fp, #2
   13d64:	addhi	r1, r1, r4
   13d68:	bls	13e0c <strspn@plt+0x2ca4>
   13d6c:	rsb	r5, r0, r1
   13d70:	mov	r1, r8
   13d74:	uxth	r9, r9
   13d78:	mov	r0, r5
   13d7c:	bl	13e14 <strspn@plt+0x2cac>
   13d80:	mov	r1, r8
   13d84:	mov	r6, r0
   13d88:	mov	r0, r5
   13d8c:	bl	14000 <strspn@plt+0x2e98>
   13d90:	mul	r5, sl, r6
   13d94:	orr	r1, r9, r1, lsl #16
   13d98:	cmp	r5, r1
   13d9c:	bls	13dc0 <strspn@plt+0x2c58>
   13da0:	adds	r1, r1, r4
   13da4:	sub	r3, r6, #1
   13da8:	bcs	13dbc <strspn@plt+0x2c54>
   13dac:	cmp	r5, r1
   13db0:	subhi	r6, r6, #2
   13db4:	addhi	r1, r1, r4
   13db8:	bhi	13dc0 <strspn@plt+0x2c58>
   13dbc:	mov	r6, r3
   13dc0:	rsb	r5, r5, r1
   13dc4:	orr	r6, r6, fp, lsl #16
   13dc8:	b	13b54 <strspn@plt+0x29ec>
   13dcc:	mov	r6, r3
   13dd0:	b	13ad0 <strspn@plt+0x2968>
   13dd4:	mov	r9, r2
   13dd8:	b	13ba0 <strspn@plt+0x2a38>
   13ddc:	mov	r5, r3
   13de0:	b	13bec <strspn@plt+0x2a84>
   13de4:	cmp	sl, r1
   13de8:	subhi	fp, fp, #2
   13dec:	addhi	r1, r1, r8
   13df0:	bhi	13cb0 <strspn@plt+0x2b48>
   13df4:	b	13cac <strspn@plt+0x2b44>
   13df8:	cmp	r0, r1
   13dfc:	subhi	r4, r4, #2
   13e00:	addhi	r1, r1, r8
   13e04:	bhi	13c64 <strspn@plt+0x2afc>
   13e08:	b	13c60 <strspn@plt+0x2af8>
   13e0c:	mov	fp, r3
   13e10:	b	13d6c <strspn@plt+0x2c04>
   13e14:	subs	r2, r1, #1
   13e18:	bxeq	lr
   13e1c:	bcc	13ff4 <strspn@plt+0x2e8c>
   13e20:	cmp	r0, r1
   13e24:	bls	13fd8 <strspn@plt+0x2e70>
   13e28:	tst	r1, r2
   13e2c:	beq	13fe4 <strspn@plt+0x2e7c>
   13e30:	clz	r3, r0
   13e34:	clz	r2, r1
   13e38:	sub	r3, r2, r3
   13e3c:	rsbs	r3, r3, #31
   13e40:	addne	r3, r3, r3, lsl #1
   13e44:	mov	r2, #0
   13e48:	addne	pc, pc, r3, lsl #2
   13e4c:	nop	{0}
   13e50:	cmp	r0, r1, lsl #31
   13e54:	adc	r2, r2, r2
   13e58:	subcs	r0, r0, r1, lsl #31
   13e5c:	cmp	r0, r1, lsl #30
   13e60:	adc	r2, r2, r2
   13e64:	subcs	r0, r0, r1, lsl #30
   13e68:	cmp	r0, r1, lsl #29
   13e6c:	adc	r2, r2, r2
   13e70:	subcs	r0, r0, r1, lsl #29
   13e74:	cmp	r0, r1, lsl #28
   13e78:	adc	r2, r2, r2
   13e7c:	subcs	r0, r0, r1, lsl #28
   13e80:	cmp	r0, r1, lsl #27
   13e84:	adc	r2, r2, r2
   13e88:	subcs	r0, r0, r1, lsl #27
   13e8c:	cmp	r0, r1, lsl #26
   13e90:	adc	r2, r2, r2
   13e94:	subcs	r0, r0, r1, lsl #26
   13e98:	cmp	r0, r1, lsl #25
   13e9c:	adc	r2, r2, r2
   13ea0:	subcs	r0, r0, r1, lsl #25
   13ea4:	cmp	r0, r1, lsl #24
   13ea8:	adc	r2, r2, r2
   13eac:	subcs	r0, r0, r1, lsl #24
   13eb0:	cmp	r0, r1, lsl #23
   13eb4:	adc	r2, r2, r2
   13eb8:	subcs	r0, r0, r1, lsl #23
   13ebc:	cmp	r0, r1, lsl #22
   13ec0:	adc	r2, r2, r2
   13ec4:	subcs	r0, r0, r1, lsl #22
   13ec8:	cmp	r0, r1, lsl #21
   13ecc:	adc	r2, r2, r2
   13ed0:	subcs	r0, r0, r1, lsl #21
   13ed4:	cmp	r0, r1, lsl #20
   13ed8:	adc	r2, r2, r2
   13edc:	subcs	r0, r0, r1, lsl #20
   13ee0:	cmp	r0, r1, lsl #19
   13ee4:	adc	r2, r2, r2
   13ee8:	subcs	r0, r0, r1, lsl #19
   13eec:	cmp	r0, r1, lsl #18
   13ef0:	adc	r2, r2, r2
   13ef4:	subcs	r0, r0, r1, lsl #18
   13ef8:	cmp	r0, r1, lsl #17
   13efc:	adc	r2, r2, r2
   13f00:	subcs	r0, r0, r1, lsl #17
   13f04:	cmp	r0, r1, lsl #16
   13f08:	adc	r2, r2, r2
   13f0c:	subcs	r0, r0, r1, lsl #16
   13f10:	cmp	r0, r1, lsl #15
   13f14:	adc	r2, r2, r2
   13f18:	subcs	r0, r0, r1, lsl #15
   13f1c:	cmp	r0, r1, lsl #14
   13f20:	adc	r2, r2, r2
   13f24:	subcs	r0, r0, r1, lsl #14
   13f28:	cmp	r0, r1, lsl #13
   13f2c:	adc	r2, r2, r2
   13f30:	subcs	r0, r0, r1, lsl #13
   13f34:	cmp	r0, r1, lsl #12
   13f38:	adc	r2, r2, r2
   13f3c:	subcs	r0, r0, r1, lsl #12
   13f40:	cmp	r0, r1, lsl #11
   13f44:	adc	r2, r2, r2
   13f48:	subcs	r0, r0, r1, lsl #11
   13f4c:	cmp	r0, r1, lsl #10
   13f50:	adc	r2, r2, r2
   13f54:	subcs	r0, r0, r1, lsl #10
   13f58:	cmp	r0, r1, lsl #9
   13f5c:	adc	r2, r2, r2
   13f60:	subcs	r0, r0, r1, lsl #9
   13f64:	cmp	r0, r1, lsl #8
   13f68:	adc	r2, r2, r2
   13f6c:	subcs	r0, r0, r1, lsl #8
   13f70:	cmp	r0, r1, lsl #7
   13f74:	adc	r2, r2, r2
   13f78:	subcs	r0, r0, r1, lsl #7
   13f7c:	cmp	r0, r1, lsl #6
   13f80:	adc	r2, r2, r2
   13f84:	subcs	r0, r0, r1, lsl #6
   13f88:	cmp	r0, r1, lsl #5
   13f8c:	adc	r2, r2, r2
   13f90:	subcs	r0, r0, r1, lsl #5
   13f94:	cmp	r0, r1, lsl #4
   13f98:	adc	r2, r2, r2
   13f9c:	subcs	r0, r0, r1, lsl #4
   13fa0:	cmp	r0, r1, lsl #3
   13fa4:	adc	r2, r2, r2
   13fa8:	subcs	r0, r0, r1, lsl #3
   13fac:	cmp	r0, r1, lsl #2
   13fb0:	adc	r2, r2, r2
   13fb4:	subcs	r0, r0, r1, lsl #2
   13fb8:	cmp	r0, r1, lsl #1
   13fbc:	adc	r2, r2, r2
   13fc0:	subcs	r0, r0, r1, lsl #1
   13fc4:	cmp	r0, r1
   13fc8:	adc	r2, r2, r2
   13fcc:	subcs	r0, r0, r1
   13fd0:	mov	r0, r2
   13fd4:	bx	lr
   13fd8:	moveq	r0, #1
   13fdc:	movne	r0, #0
   13fe0:	bx	lr
   13fe4:	clz	r2, r1
   13fe8:	rsb	r2, r2, #31
   13fec:	lsr	r0, r0, r2
   13ff0:	bx	lr
   13ff4:	cmp	r0, #0
   13ff8:	mvnne	r0, #0
   13ffc:	b	134d0 <strspn@plt+0x2368>
   14000:	cmp	r1, #0
   14004:	beq	13ff4 <strspn@plt+0x2e8c>
   14008:	push	{r0, r1, lr}
   1400c:	bl	13e14 <strspn@plt+0x2cac>
   14010:	pop	{r1, r2, lr}
   14014:	mul	r3, r2, r0
   14018:	sub	r1, r1, r3
   1401c:	bx	lr
   14020:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14024:	mov	r7, r0
   14028:	ldr	r6, [pc, #76]	; 1407c <strspn@plt+0x2f14>
   1402c:	mov	r8, r1
   14030:	ldr	r5, [pc, #72]	; 14080 <strspn@plt+0x2f18>
   14034:	mov	r9, r2
   14038:	add	r6, pc, r6
   1403c:	bl	10e84 <calloc@plt-0x20>
   14040:	add	r5, pc, r5
   14044:	rsb	r6, r5, r6
   14048:	asrs	r6, r6, #2
   1404c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   14050:	sub	r5, r5, #4
   14054:	mov	r4, #0
   14058:	add	r4, r4, #1
   1405c:	ldr	r3, [r5, #4]!
   14060:	mov	r0, r7
   14064:	mov	r1, r8
   14068:	mov	r2, r9
   1406c:	blx	r3
   14070:	cmp	r4, r6
   14074:	bne	14058 <strspn@plt+0x2ef0>
   14078:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1407c:	andeq	r0, r1, r0, asr #29
   14080:			; <UNDEFINED> instruction: 0x00010eb4
   14084:	bx	lr
   14088:	ldr	r3, [pc, #28]	; 140ac <strspn@plt+0x2f44>
   1408c:	mov	r1, #0
   14090:	ldr	r2, [pc, #24]	; 140b0 <strspn@plt+0x2f48>
   14094:	add	r3, pc, r3
   14098:	ldr	r3, [r3, r2]
   1409c:	cmp	r3, #0
   140a0:	ldrne	r2, [r3]
   140a4:	moveq	r2, r3
   140a8:	b	11060 <__cxa_atexit@plt>
   140ac:	andeq	r0, r1, r4, ror #30
   140b0:	andeq	r0, r0, r4, lsl #2

Disassembly of section .fini:

000140b4 <.fini>:
   140b4:	push	{r3, lr}
   140b8:	pop	{r3, pc}
