
centos-preinstalled/mksunxiboot:     file format elf32-littlearm


Disassembly of section .init:

00010690 <.init>:
   10690:	push	{r3, lr}
   10694:	bl	10b38 <close@plt+0x3bc>
   10698:	pop	{r3, pc}

Disassembly of section .plt:

0001069c <strcmp@plt-0x14>:
   1069c:	push	{lr}		; (str lr, [sp, #-4]!)
   106a0:	ldr	lr, [pc, #4]	; 106ac <strcmp@plt-0x4>
   106a4:	add	lr, pc, lr
   106a8:	ldr	pc, [lr, #8]!
   106ac:	andeq	r1, r1, r4, asr r9

000106b0 <strcmp@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #69632	; 0x11000
   106b8:	ldr	pc, [ip, #2388]!	; 0x954

000106bc <__read_chk@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #69632	; 0x11000
   106c4:	ldr	pc, [ip, #2380]!	; 0x94c

000106c8 <lseek@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #69632	; 0x11000
   106d0:	ldr	pc, [ip, #2372]!	; 0x944

000106d4 <__stack_chk_fail@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #69632	; 0x11000
   106dc:	ldr	pc, [ip, #2364]!	; 0x93c

000106e0 <perror@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #69632	; 0x11000
   106e8:	ldr	pc, [ip, #2356]!	; 0x934

000106ec <__memcpy_chk@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #69632	; 0x11000
   106f4:	ldr	pc, [ip, #2348]!	; 0x92c

000106f8 <fwrite@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2340]!	; 0x924

00010704 <puts@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2332]!	; 0x91c

00010710 <__libc_start_main@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2324]!	; 0x914

0001071c <__gmon_start__@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2316]!	; 0x90c

00010728 <open@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2308]!	; 0x904

00010734 <strlen@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2300]!	; 0x8fc

00010740 <memset@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2292]!	; 0x8f4

0001074c <__printf_chk@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2284]!	; 0x8ec

00010758 <write@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2276]!	; 0x8e4

00010764 <__fprintf_chk@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2268]!	; 0x8dc

00010770 <abort@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2260]!	; 0x8d4

0001077c <close@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2252]!	; 0x8cc

Disassembly of section .text:

00010788 <.text>:
   10788:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1078c:	movw	r6, #7936	; 0x1f00
   10790:	sub	sp, sp, #40960	; 0xa000
   10794:	movt	r6, #2
   10798:	sub	sp, sp, #8
   1079c:	cmp	r0, #1
   107a0:	add	r2, sp, #40960	; 0xa000
   107a4:	ldr	r3, [r6]
   107a8:	add	r2, r2, #4
   107ac:	mov	r9, r1
   107b0:	str	r3, [r2]
   107b4:	ble	10934 <close@plt+0x1b8>
   107b8:	ldr	r5, [r1, #4]
   107bc:	mov	r4, r0
   107c0:	ldrb	r3, [r5]
   107c4:	cmp	r3, #45	; 0x2d
   107c8:	movne	r8, r1
   107cc:	movne	sl, #0
   107d0:	bne	1081c <close@plt+0xa0>
   107d4:	movw	r7, #3248	; 0xcb0
   107d8:	movt	r7, #1
   107dc:	mov	r8, r9
   107e0:	mov	r1, r7
   107e4:	mov	r0, r5
   107e8:	bl	106b0 <strcmp@plt>
   107ec:	cmp	r0, #0
   107f0:	bne	1090c <close@plt+0x190>
   107f4:	cmp	r4, #2
   107f8:	beq	108c4 <close@plt+0x148>
   107fc:	sub	r4, r4, #2
   10800:	ldr	sl, [r8, #8]!
   10804:	cmp	r4, #1
   10808:	beq	10934 <close@plt+0x1b8>
   1080c:	ldr	r5, [r8, #4]
   10810:	ldrb	r3, [r5]
   10814:	cmp	r3, #45	; 0x2d
   10818:	beq	107e0 <close@plt+0x64>
   1081c:	cmp	r4, #2
   10820:	beq	10934 <close@plt+0x1b8>
   10824:	mov	r1, #0
   10828:	ldr	r0, [r8, #4]
   1082c:	bl	10728 <open@plt>
   10830:	subs	r7, r0, #0
   10834:	blt	109ac <close@plt+0x230>
   10838:	mov	r2, #40960	; 0xa000
   1083c:	mov	r1, #0
   10840:	add	r0, sp, #4
   10844:	add	r5, sp, #8
   10848:	bl	10740 <memset@plt>
   1084c:	mov	r2, #2
   10850:	mov	r1, #0
   10854:	mov	r0, r7
   10858:	bl	106c8 <lseek@plt>
   1085c:	movw	r3, #32672	; 0x7fa0
   10860:	cmp	r0, r3
   10864:	mov	r4, r0
   10868:	bhi	10984 <close@plt+0x208>
   1086c:	ldr	r0, [r8, #8]
   10870:	movw	r2, #438	; 0x1b6
   10874:	mov	r1, #65	; 0x41
   10878:	bl	10728 <open@plt>
   1087c:	subs	r8, r0, #0
   10880:	blt	109c0 <close@plt+0x244>
   10884:	mov	r2, #0
   10888:	mov	r0, r7
   1088c:	mov	r1, r2
   10890:	bl	106c8 <lseek@plt>
   10894:	movw	r3, #40864	; 0x9fa0
   10898:	mov	r2, r4
   1089c:	add	r1, r5, #92	; 0x5c
   108a0:	mov	r0, r7
   108a4:	bl	106bc <__read_chk@plt>
   108a8:	cmp	r4, r0
   108ac:	beq	109d4 <close@plt+0x258>
   108b0:	movw	r0, #3648	; 0xe40
   108b4:	movt	r0, #1
   108b8:	bl	106e0 <perror@plt>
   108bc:	mov	r0, #1
   108c0:	b	108e8 <close@plt+0x16c>
   108c4:	movw	r3, #8284	; 0x205c
   108c8:	movt	r3, #2
   108cc:	movw	r0, #3264	; 0xcc0
   108d0:	mov	r2, #27
   108d4:	ldr	r3, [r3]
   108d8:	movt	r0, #1
   108dc:	mov	r1, #1
   108e0:	bl	106f8 <fwrite@plt>
   108e4:	mov	r0, #1
   108e8:	add	r3, sp, #40960	; 0xa000
   108ec:	add	r3, r3, #4
   108f0:	ldr	r2, [r3]
   108f4:	ldr	r3, [r6]
   108f8:	cmp	r2, r3
   108fc:	bne	10af8 <close@plt+0x37c>
   10900:	add	sp, sp, #40960	; 0xa000
   10904:	add	sp, sp, #8
   10908:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1090c:	movw	r1, #8284	; 0x205c
   10910:	movt	r1, #2
   10914:	mov	r3, r5
   10918:	movw	r2, #3292	; 0xcdc
   1091c:	ldr	r0, [r1]
   10920:	movt	r2, #1
   10924:	mov	r1, #1
   10928:	bl	10764 <__fprintf_chk@plt>
   1092c:	mov	r0, #1
   10930:	b	108e8 <close@plt+0x16c>
   10934:	ldr	r4, [r9]
   10938:	movw	r0, #3316	; 0xcf4
   1093c:	movt	r0, #1
   10940:	bl	10704 <puts@plt>
   10944:	movw	r1, #3388	; 0xd3c
   10948:	mov	r2, r4
   1094c:	movt	r1, #1
   10950:	mov	r0, #1
   10954:	bl	1074c <__printf_chk@plt>
   10958:	movw	r0, #3436	; 0xd6c
   1095c:	movt	r0, #1
   10960:	bl	10704 <puts@plt>
   10964:	movw	r0, #3460	; 0xd84
   10968:	movt	r0, #1
   1096c:	bl	10704 <puts@plt>
   10970:	movw	r0, #3528	; 0xdc8
   10974:	movt	r0, #1
   10978:	bl	10704 <puts@plt>
   1097c:	mov	r0, #1
   10980:	b	108e8 <close@plt+0x16c>
   10984:	movw	r3, #8284	; 0x205c
   10988:	movt	r3, #2
   1098c:	movw	r0, #3604	; 0xe14
   10990:	mov	r2, #23
   10994:	ldr	r3, [r3]
   10998:	movt	r0, #1
   1099c:	mov	r1, #1
   109a0:	bl	106f8 <fwrite@plt>
   109a4:	mov	r0, #1
   109a8:	b	108e8 <close@plt+0x16c>
   109ac:	movw	r0, #3588	; 0xe04
   109b0:	movt	r0, #1
   109b4:	bl	106e0 <perror@plt>
   109b8:	mov	r0, #1
   109bc:	b	108e8 <close@plt+0x16c>
   109c0:	movw	r0, #3628	; 0xe2c
   109c4:	movt	r0, #1
   109c8:	bl	106e0 <perror@plt>
   109cc:	mov	r0, #1
   109d0:	b	108e8 <close@plt+0x16c>
   109d4:	movw	r2, #3680	; 0xe60
   109d8:	movw	r1, #3668	; 0xe54
   109dc:	movt	r2, #1
   109e0:	movt	r1, #1
   109e4:	add	r3, r4, #8256	; 0x2040
   109e8:	cmp	sl, #0
   109ec:	ldr	r2, [r2]
   109f0:	add	r3, r3, #31
   109f4:	ldm	r1, {r0, r1}
   109f8:	bic	r3, r3, #8128	; 0x1fc0
   109fc:	bic	r3, r3, #63	; 0x3f
   10a00:	str	r3, [r5, #12]
   10a04:	strh	r2, [r5, #16]
   10a08:	mov	r3, #22
   10a0c:	lsr	r2, r2, #16
   10a10:	movt	r3, #59904	; 0xea00
   10a14:	strb	r2, [r5, #18]
   10a18:	mov	r2, #2
   10a1c:	stm	r5, {r0, r1}
   10a20:	str	r3, [r5, #-4]
   10a24:	strb	r2, [r5, #19]
   10a28:	beq	10a58 <close@plt+0x2dc>
   10a2c:	mov	r0, sl
   10a30:	bl	10734 <strlen@plt>
   10a34:	add	r2, r0, #1
   10a38:	cmp	r2, #52	; 0x34
   10a3c:	bhi	10adc <close@plt+0x360>
   10a40:	mov	r3, #52	; 0x34
   10a44:	mov	r1, sl
   10a48:	add	r0, r5, #40	; 0x28
   10a4c:	bl	106ec <__memcpy_chk@plt>
   10a50:	mov	r3, #44	; 0x2c
   10a54:	str	r3, [r5, #28]
   10a58:	ldr	r2, [r5, #12]
   10a5c:	ands	r1, r2, #3
   10a60:	bne	10a98 <close@plt+0x31c>
   10a64:	movw	r3, #27705	; 0x6c39
   10a68:	lsr	ip, r2, #2
   10a6c:	movt	r3, #24330	; 0x5f0a
   10a70:	str	r3, [r5, #8]
   10a74:	mov	r3, r1
   10a78:	b	10a8c <close@plt+0x310>
   10a7c:	add	r0, sp, #4
   10a80:	ldr	r0, [r0, r3, lsl #2]
   10a84:	add	r3, r3, #1
   10a88:	add	r1, r1, r0
   10a8c:	cmp	ip, r3
   10a90:	bne	10a7c <close@plt+0x300>
   10a94:	str	r1, [r5, #8]
   10a98:	add	r1, sp, #4
   10a9c:	mov	r0, r8
   10aa0:	bl	10758 <write@plt>
   10aa4:	ldr	r3, [r5, #12]
   10aa8:	cmp	r3, r0
   10aac:	beq	10ac4 <close@plt+0x348>
   10ab0:	movw	r0, #3772	; 0xebc
   10ab4:	movt	r0, #1
   10ab8:	bl	106e0 <perror@plt>
   10abc:	mov	r0, #1
   10ac0:	b	108e8 <close@plt+0x16c>
   10ac4:	mov	r0, r7
   10ac8:	bl	1077c <close@plt>
   10acc:	mov	r0, r8
   10ad0:	bl	1077c <close@plt>
   10ad4:	mov	r0, #0
   10ad8:	b	108e8 <close@plt+0x16c>
   10adc:	movw	r0, #3684	; 0xe64
   10ae0:	movt	r0, #1
   10ae4:	bl	10704 <puts@plt>
   10ae8:	movw	r0, #3724	; 0xe8c
   10aec:	movt	r0, #1
   10af0:	bl	10704 <puts@plt>
   10af4:	b	10a58 <close@plt+0x2dc>
   10af8:	bl	106d4 <__stack_chk_fail@plt>
   10afc:	mov	fp, #0
   10b00:	mov	lr, #0
   10b04:	pop	{r1}		; (ldr r1, [sp], #4)
   10b08:	mov	r2, sp
   10b0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10b10:	push	{r0}		; (str r0, [sp, #-4]!)
   10b14:	ldr	ip, [pc, #16]	; 10b2c <close@plt+0x3b0>
   10b18:	push	{ip}		; (str ip, [sp, #-4]!)
   10b1c:	ldr	r0, [pc, #12]	; 10b30 <close@plt+0x3b4>
   10b20:	ldr	r3, [pc, #12]	; 10b34 <close@plt+0x3b8>
   10b24:	bl	10710 <__libc_start_main@plt>
   10b28:	bl	10770 <abort@plt>
   10b2c:	muleq	r1, ip, ip
   10b30:	andeq	r0, r1, r8, lsl #15
   10b34:	andeq	r0, r1, r8, lsr ip
   10b38:	ldr	r3, [pc, #20]	; 10b54 <close@plt+0x3d8>
   10b3c:	ldr	r2, [pc, #20]	; 10b58 <close@plt+0x3dc>
   10b40:	add	r3, pc, r3
   10b44:	ldr	r2, [r3, r2]
   10b48:	cmp	r2, #0
   10b4c:	bxeq	lr
   10b50:	b	1071c <__gmon_start__@plt>
   10b54:			; <UNDEFINED> instruction: 0x000114b8
   10b58:	andeq	r0, r0, r4, asr r0
   10b5c:	movw	r0, #8284	; 0x205c
   10b60:	movt	r0, #2
   10b64:	movw	r3, #8284	; 0x205c
   10b68:	movt	r3, #2
   10b6c:	cmp	r3, r0
   10b70:	bxeq	lr
   10b74:	movw	r3, #0
   10b78:	movt	r3, #0
   10b7c:	cmp	r3, #0
   10b80:	bxeq	lr
   10b84:	bx	r3
   10b88:	movw	r0, #8284	; 0x205c
   10b8c:	movt	r0, #2
   10b90:	movw	r1, #8284	; 0x205c
   10b94:	movt	r1, #2
   10b98:	sub	r1, r1, r0
   10b9c:	asr	r1, r1, #2
   10ba0:	add	r1, r1, r1, lsr #31
   10ba4:	asrs	r1, r1, #1
   10ba8:	bxeq	lr
   10bac:	movw	r3, #0
   10bb0:	movt	r3, #0
   10bb4:	cmp	r3, #0
   10bb8:	bxeq	lr
   10bbc:	bx	r3
   10bc0:	push	{r4, lr}
   10bc4:	movw	r4, #8288	; 0x2060
   10bc8:	movt	r4, #2
   10bcc:	ldrb	r3, [r4]
   10bd0:	cmp	r3, #0
   10bd4:	popne	{r4, pc}
   10bd8:	bl	10b5c <close@plt+0x3e0>
   10bdc:	mov	r3, #1
   10be0:	strb	r3, [r4]
   10be4:	pop	{r4, pc}
   10be8:	b	10b88 <close@plt+0x40c>
   10bec:	ldr	r2, [r0, #16]
   10bf0:	ands	r1, r2, #3
   10bf4:	bne	10c30 <close@plt+0x4b4>
   10bf8:	lsrs	r2, r2, #2
   10bfc:	movw	r3, #27705	; 0x6c39
   10c00:	movt	r3, #24330	; 0x5f0a
   10c04:	str	r3, [r0, #12]
   10c08:	beq	10c24 <close@plt+0x4a8>
   10c0c:	add	r2, r0, r2, lsl #2
   10c10:	mov	r3, r0
   10c14:	ldr	ip, [r3], #4
   10c18:	cmp	r3, r2
   10c1c:	add	r1, r1, ip
   10c20:	bne	10c14 <close@plt+0x498>
   10c24:	str	r1, [r0, #12]
   10c28:	mov	r0, #0
   10c2c:	bx	lr
   10c30:	mvn	r0, #0
   10c34:	bx	lr
   10c38:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10c3c:	mov	r7, r0
   10c40:	ldr	r6, [pc, #76]	; 10c94 <close@plt+0x518>
   10c44:	mov	r8, r1
   10c48:	ldr	r5, [pc, #72]	; 10c98 <close@plt+0x51c>
   10c4c:	mov	r9, r2
   10c50:	add	r6, pc, r6
   10c54:	bl	10690 <strcmp@plt-0x20>
   10c58:	add	r5, pc, r5
   10c5c:	rsb	r6, r5, r6
   10c60:	asrs	r6, r6, #2
   10c64:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10c68:	sub	r5, r5, #4
   10c6c:	mov	r4, #0
   10c70:	add	r4, r4, #1
   10c74:	ldr	r3, [r5, #4]!
   10c78:	mov	r0, r7
   10c7c:	mov	r1, r8
   10c80:	mov	r2, r9
   10c84:	blx	r3
   10c88:	cmp	r4, r6
   10c8c:	bne	10c70 <close@plt+0x4f4>
   10c90:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10c94:	andeq	r1, r1, r4, lsr #5
   10c98:	muleq	r1, r8, r2
   10c9c:	bx	lr

Disassembly of section .fini:

00010ca0 <.fini>:
   10ca0:	push	{r3, lr}
   10ca4:	pop	{r3, pc}
