
centos-preinstalled/fc-validate:     file format elf32-littlearm


Disassembly of section .init:

00010a5c <_init@@Base>:
   10a5c:	push	{r3, lr}
   10a60:	bl	11098 <exit@plt+0x4f0>
   10a64:	pop	{r3, pc}

Disassembly of section .plt:

00010a68 <abort@plt-0x14>:
   10a68:	push	{lr}		; (str lr, [sp, #-4]!)
   10a6c:	ldr	lr, [pc, #4]	; 10a78 <_init@@Base+0x1c>
   10a70:	add	lr, pc, lr
   10a74:	ldr	pc, [lr, #8]!
   10a78:	andeq	r1, r1, r8, lsl #11

00010a7c <abort@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1416]!	; 0x588

00010a88 <__libc_start_main@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1408]!	; 0x580

00010a94 <FcCharSetSubtract@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1400]!	; 0x578

00010aa0 <__gmon_start__@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1392]!	; 0x570

00010aac <__printf_chk@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1384]!	; 0x568

00010ab8 <FcFini@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1376]!	; 0x560

00010ac4 <FT_Done_FreeType@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1368]!	; 0x558

00010ad0 <getopt_long@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1360]!	; 0x550

00010adc <dcgettext@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #69632	; 0x11000
   10ae4:	ldr	pc, [ip, #1352]!	; 0x548

00010ae8 <FcCharSetNextPage@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #69632	; 0x11000
   10af0:	ldr	pc, [ip, #1344]!	; 0x540

00010af4 <setlocale@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #69632	; 0x11000
   10afc:	ldr	pc, [ip, #1336]!	; 0x538

00010b00 <FcCharSetCount@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1328]!	; 0x530

00010b0c <FT_Init_FreeType@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1320]!	; 0x528

00010b18 <strtol@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1312]!	; 0x520

00010b24 <FcLangGetCharSet@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1304]!	; 0x518

00010b30 <__stack_chk_fail@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1296]!	; 0x510

00010b3c <__fprintf_chk@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1288]!	; 0x508

00010b48 <fputc@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1280]!	; 0x500

00010b54 <FcStrFree@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b60 <FcCharSetDestroy@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b6c <FcLangNormalize@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b78 <FT_New_Face@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b84 <FcFreeTypeCharSet@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b90 <FcCharSetFirstPage@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b9c <FT_Done_Face@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1224]!	; 0x4c8

00010ba8 <exit@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1216]!	; 0x4c0

Disassembly of section .text:

00010bb4 <.text>:
   10bb4:	movw	ip, #8328	; 0x2088
   10bb8:	movt	ip, #2
   10bbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bc0:	sub	sp, sp, #108	; 0x6c
   10bc4:	ldr	r3, [ip]
   10bc8:	mov	r8, r1
   10bcc:	str	r0, [sp, #28]
   10bd0:	movw	r1, #5548	; 0x15ac
   10bd4:	mov	r0, #6
   10bd8:	movt	r1, #1
   10bdc:	str	ip, [sp, #12]
   10be0:	mov	ip, #0
   10be4:	str	r3, [sp, #100]	; 0x64
   10be8:	movw	r4, #8344	; 0x2098
   10bec:	str	ip, [sp, #8]
   10bf0:	movt	r4, #2
   10bf4:	str	ip, [sp, #20]
   10bf8:	bl	10af4 <setlocale@plt>
   10bfc:	ldr	ip, [sp, #8]
   10c00:	mov	fp, ip
   10c04:	mov	r5, ip
   10c08:	str	ip, [sp, #40]	; 0x28
   10c0c:	str	r5, [sp]
   10c10:	movw	r2, #5552	; 0x15b0
   10c14:	movw	r3, #4952	; 0x1358
   10c18:	movt	r2, #1
   10c1c:	movt	r3, #1
   10c20:	ldr	r0, [sp, #28]
   10c24:	mov	r1, r8
   10c28:	bl	10ad0 <getopt_long@plt>
   10c2c:	cmn	r0, #1
   10c30:	beq	10d50 <exit@plt+0x1a8>
   10c34:	sub	r0, r0, #86	; 0x56
   10c38:	cmp	r0, #32
   10c3c:	ldrls	pc, [pc, r0, lsl #2]
   10c40:	b	10d44 <exit@plt+0x19c>
   10c44:	andeq	r0, r1, ip, lsl #26
   10c48:	andeq	r0, r1, r4, asr #26
   10c4c:	andeq	r0, r1, r4, asr #26
   10c50:	andeq	r0, r1, r4, asr #26
   10c54:	andeq	r0, r1, r4, asr #26
   10c58:	andeq	r0, r1, r4, asr #26
   10c5c:	andeq	r0, r1, r4, asr #26
   10c60:	andeq	r0, r1, r4, asr #26
   10c64:	andeq	r0, r1, r4, asr #26
   10c68:	andeq	r0, r1, r4, asr #26
   10c6c:	andeq	r0, r1, r4, asr #26
   10c70:	andeq	r0, r1, r4, asr #26
   10c74:	andeq	r0, r1, r4, asr #26
   10c78:	andeq	r0, r1, r4, asr #26
   10c7c:	andeq	r0, r1, r4, asr #26
   10c80:	andeq	r0, r1, r4, asr #26
   10c84:	andeq	r0, r1, r4, asr #26
   10c88:	andeq	r0, r1, r4, asr #26
   10c8c:	andeq	r0, r1, r0, lsl #26
   10c90:	andeq	r0, r1, r4, ror #25
   10c94:	andeq	r0, r1, r4, asr #26
   10c98:	andeq	r0, r1, r4, asr #26
   10c9c:	ldrdeq	r0, [r1], -r4
   10ca0:	andeq	r0, r1, r4, asr #26
   10ca4:	andeq	r0, r1, r4, asr #26
   10ca8:	andeq	r0, r1, r4, asr #26
   10cac:	andeq	r0, r1, r4, asr #26
   10cb0:	andeq	r0, r1, r4, asr #26
   10cb4:	andeq	r0, r1, r4, asr #26
   10cb8:	andeq	r0, r1, r4, asr #26
   10cbc:	andeq	r0, r1, r4, asr #26
   10cc0:	andeq	r0, r1, r4, asr #26
   10cc4:	andeq	r0, r1, r8, asr #25
   10cc8:	mov	ip, #1
   10ccc:	str	ip, [sp, #8]
   10cd0:	b	10c0c <exit@plt+0x64>
   10cd4:	ldr	r0, [r4]
   10cd8:	bl	10b6c <FcLangNormalize@plt>
   10cdc:	str	r0, [sp, #20]
   10ce0:	b	10c0c <exit@plt+0x64>
   10ce4:	ldr	r0, [r4]
   10ce8:	mov	r1, #0
   10cec:	mov	r2, #10
   10cf0:	mov	fp, #1
   10cf4:	bl	10b18 <strtol@plt>
   10cf8:	str	r0, [sp, #40]	; 0x28
   10cfc:	b	10c0c <exit@plt+0x64>
   10d00:	ldr	r0, [r8]
   10d04:	mov	r1, #0
   10d08:	bl	11190 <exit@plt+0x5e8>
   10d0c:	movw	r3, #8340	; 0x2094
   10d10:	movt	r3, #2
   10d14:	mov	r1, #13
   10d18:	mov	r4, #0
   10d1c:	ldr	r0, [r3]
   10d20:	movw	r2, #5520	; 0x1590
   10d24:	str	r1, [sp]
   10d28:	movt	r2, #1
   10d2c:	str	r4, [sp, #4]
   10d30:	mov	r1, #1
   10d34:	mov	r3, #2
   10d38:	bl	10b3c <__fprintf_chk@plt>
   10d3c:	mov	r0, r4
   10d40:	bl	10ba8 <exit@plt>
   10d44:	ldr	r0, [r8]
   10d48:	mov	r1, #1
   10d4c:	bl	11190 <exit@plt+0x5e8>
   10d50:	movw	r3, #8320	; 0x2080
   10d54:	movt	r3, #2
   10d58:	ldr	ip, [sp, #28]
   10d5c:	ldr	r3, [r3]
   10d60:	cmp	r3, ip
   10d64:	str	r3, [sp, #48]	; 0x30
   10d68:	beq	10d44 <exit@plt+0x19c>
   10d6c:	ldr	ip, [sp, #20]
   10d70:	cmp	ip, #0
   10d74:	beq	11030 <exit@plt+0x488>
   10d78:	ldr	r0, [sp, #20]
   10d7c:	bl	10b24 <FcLangGetCharSet@plt>
   10d80:	str	r0, [sp, #44]	; 0x2c
   10d84:	add	r0, sp, #56	; 0x38
   10d88:	bl	10b0c <FT_Init_FreeType@plt>
   10d8c:	cmp	r0, #0
   10d90:	bne	10ff4 <exit@plt+0x44c>
   10d94:	ldr	ip, [sp, #48]	; 0x30
   10d98:	add	r7, sp, #96	; 0x60
   10d9c:	str	r0, [sp, #32]
   10da0:	add	r8, r8, ip, lsl #2
   10da4:	ldr	ip, [sp, #48]	; 0x30
   10da8:	ldr	r1, [sp, #28]
   10dac:	cmp	ip, r1
   10db0:	bge	10fb4 <exit@plt+0x40c>
   10db4:	movw	ip, #8340	; 0x2094
   10db8:	ldr	r6, [sp, #40]	; 0x28
   10dbc:	movt	ip, #2
   10dc0:	str	ip, [sp, #16]
   10dc4:	b	10e24 <exit@plt+0x27c>
   10dc8:	eor	r3, fp, #1
   10dcc:	cmp	r6, #0
   10dd0:	movle	r3, #0
   10dd4:	andgt	r3, r3, #1
   10dd8:	cmp	r3, #0
   10ddc:	bne	10ed0 <exit@plt+0x328>
   10de0:	ldr	ip, [sp, #16]
   10de4:	mov	r2, #5
   10de8:	movw	r0, #5048	; 0x13b8
   10dec:	movw	r1, #5600	; 0x15e0
   10df0:	movt	r0, #1
   10df4:	movt	r1, #1
   10df8:	ldr	r4, [ip]
   10dfc:	bl	10adc <dcgettext@plt>
   10e00:	mov	r1, #1
   10e04:	ldr	r3, [r8]
   10e08:	str	r1, [sp, #32]
   10e0c:	add	r6, r6, #1
   10e10:	mov	r2, r0
   10e14:	mov	r0, r4
   10e18:	bl	10b3c <__fprintf_chk@plt>
   10e1c:	cmp	fp, #0
   10e20:	bne	10ed0 <exit@plt+0x328>
   10e24:	ldr	r1, [r8]
   10e28:	mov	r2, r6
   10e2c:	ldr	r0, [sp, #56]	; 0x38
   10e30:	add	r3, sp, #60	; 0x3c
   10e34:	bl	10b78 <FT_New_Face@plt>
   10e38:	subs	r1, r0, #0
   10e3c:	bne	10dc8 <exit@plt+0x220>
   10e40:	ldr	r0, [sp, #60]	; 0x3c
   10e44:	bl	10b84 <FcFreeTypeCharSet@plt>
   10e48:	str	r0, [sp, #24]
   10e4c:	ldr	r1, [sp, #24]
   10e50:	ldr	r0, [sp, #44]	; 0x2c
   10e54:	bl	10a94 <FcCharSetSubtract@plt>
   10e58:	str	r0, [sp, #36]	; 0x24
   10e5c:	bl	10b00 <FcCharSetCount@plt>
   10e60:	subs	r4, r0, #0
   10e64:	movw	r0, #5048	; 0x13b8
   10e68:	beq	10ee4 <exit@plt+0x33c>
   10e6c:	mov	r2, #5
   10e70:	movw	r1, #5620	; 0x15f4
   10e74:	movt	r0, #1
   10e78:	movt	r1, #1
   10e7c:	bl	10adc <dcgettext@plt>
   10e80:	ldr	ip, [sp, #20]
   10e84:	str	r4, [sp]
   10e88:	mov	r3, r6
   10e8c:	str	ip, [sp, #4]
   10e90:	ldr	r2, [r8]
   10e94:	mov	r1, r0
   10e98:	mov	r0, #1
   10e9c:	bl	10aac <__printf_chk@plt>
   10ea0:	ldr	ip, [sp, #8]
   10ea4:	cmp	ip, #0
   10ea8:	bne	10f18 <exit@plt+0x370>
   10eac:	ldr	r0, [sp, #24]
   10eb0:	add	r6, r6, #1
   10eb4:	bl	10b60 <FcCharSetDestroy@plt>
   10eb8:	ldr	r0, [sp, #36]	; 0x24
   10ebc:	bl	10b60 <FcCharSetDestroy@plt>
   10ec0:	ldr	r0, [sp, #60]	; 0x3c
   10ec4:	bl	10b9c <FT_Done_Face@plt>
   10ec8:	cmp	fp, #0
   10ecc:	beq	10e24 <exit@plt+0x27c>
   10ed0:	ldr	ip, [sp, #48]	; 0x30
   10ed4:	add	r8, r8, #4
   10ed8:	add	ip, ip, #1
   10edc:	str	ip, [sp, #48]	; 0x30
   10ee0:	b	10da4 <exit@plt+0x1fc>
   10ee4:	mov	r2, #5
   10ee8:	movw	r1, #5700	; 0x1644
   10eec:	movt	r0, #1
   10ef0:	movt	r1, #1
   10ef4:	bl	10adc <dcgettext@plt>
   10ef8:	ldr	ip, [sp, #20]
   10efc:	mov	r3, r6
   10f00:	str	ip, [sp]
   10f04:	ldr	r2, [r8]
   10f08:	mov	r1, r0
   10f0c:	mov	r0, #1
   10f10:	bl	10aac <__printf_chk@plt>
   10f14:	b	10eac <exit@plt+0x304>
   10f18:	ldr	r0, [sp, #36]	; 0x24
   10f1c:	add	r1, sp, #68	; 0x44
   10f20:	add	r2, sp, #64	; 0x40
   10f24:	bl	10b90 <FcCharSetFirstPage@plt>
   10f28:	cmn	r0, #1
   10f2c:	strne	r6, [sp, #52]	; 0x34
   10f30:	ldrne	sl, [sp, #36]	; 0x24
   10f34:	beq	10eac <exit@plt+0x304>
   10f38:	add	r5, sp, #64	; 0x40
   10f3c:	mov	r9, r0
   10f40:	ldr	r4, [r5, #4]!
   10f44:	cmp	r4, #0
   10f48:	movne	r6, r9
   10f4c:	bne	10f60 <exit@plt+0x3b8>
   10f50:	b	10f88 <exit@plt+0x3e0>
   10f54:	lsrs	r4, r4, #1
   10f58:	add	r6, r6, #1
   10f5c:	beq	10f88 <exit@plt+0x3e0>
   10f60:	tst	r4, #1
   10f64:	beq	10f54 <exit@plt+0x3ac>
   10f68:	mov	r2, r6
   10f6c:	movw	r1, #5688	; 0x1638
   10f70:	mov	r0, #1
   10f74:	movt	r1, #1
   10f78:	bl	10aac <__printf_chk@plt>
   10f7c:	lsrs	r4, r4, #1
   10f80:	add	r6, r6, #1
   10f84:	bne	10f60 <exit@plt+0x3b8>
   10f88:	cmp	r5, r7
   10f8c:	add	r9, r9, #32
   10f90:	bne	10f40 <exit@plt+0x398>
   10f94:	mov	r0, sl
   10f98:	add	r1, sp, #68	; 0x44
   10f9c:	add	r2, sp, #64	; 0x40
   10fa0:	bl	10ae8 <FcCharSetNextPage@plt>
   10fa4:	cmn	r0, #1
   10fa8:	bne	10f38 <exit@plt+0x390>
   10fac:	ldr	r6, [sp, #52]	; 0x34
   10fb0:	b	10eac <exit@plt+0x304>
   10fb4:	ldr	r0, [sp, #56]	; 0x38
   10fb8:	bl	10ac4 <FT_Done_FreeType@plt>
   10fbc:	ldr	ip, [sp, #20]
   10fc0:	cmp	ip, #0
   10fc4:	beq	10fd0 <exit@plt+0x428>
   10fc8:	mov	r0, ip
   10fcc:	bl	10b54 <FcStrFree@plt>
   10fd0:	bl	10ab8 <FcFini@plt>
   10fd4:	ldr	r0, [sp, #32]
   10fd8:	ldr	ip, [sp, #12]
   10fdc:	ldr	r2, [sp, #100]	; 0x64
   10fe0:	ldr	r3, [ip]
   10fe4:	cmp	r2, r3
   10fe8:	bne	11058 <exit@plt+0x4b0>
   10fec:	add	sp, sp, #108	; 0x6c
   10ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ff4:	movw	r3, #8340	; 0x2094
   10ff8:	movt	r3, #2
   10ffc:	mov	r2, #5
   11000:	movw	r0, #5048	; 0x13b8
   11004:	movw	r1, #5564	; 0x15bc
   11008:	movt	r0, #1
   1100c:	movt	r1, #1
   11010:	ldr	r4, [r3]
   11014:	bl	10adc <dcgettext@plt>
   11018:	mov	r1, #1
   1101c:	mov	r2, r0
   11020:	mov	r0, r4
   11024:	bl	10b3c <__fprintf_chk@plt>
   11028:	mov	r0, #1
   1102c:	b	10fd8 <exit@plt+0x430>
   11030:	mov	r0, ip
   11034:	mov	r1, ip
   11038:	bl	10af4 <setlocale@plt>
   1103c:	bl	10b6c <FcLangNormalize@plt>
   11040:	cmp	r0, #0
   11044:	str	r0, [sp, #20]
   11048:	ldreq	ip, [sp, #20]
   1104c:	streq	ip, [sp, #44]	; 0x2c
   11050:	beq	10d84 <exit@plt+0x1dc>
   11054:	b	10d78 <exit@plt+0x1d0>
   11058:	bl	10b30 <__stack_chk_fail@plt>
   1105c:	mov	fp, #0
   11060:	mov	lr, #0
   11064:	pop	{r1}		; (ldr r1, [sp], #4)
   11068:	mov	r2, sp
   1106c:	push	{r2}		; (str r2, [sp, #-4]!)
   11070:	push	{r0}		; (str r0, [sp, #-4]!)
   11074:	ldr	ip, [pc, #16]	; 1108c <exit@plt+0x4e4>
   11078:	push	{ip}		; (str ip, [sp, #-4]!)
   1107c:	ldr	r0, [pc, #12]	; 11090 <exit@plt+0x4e8>
   11080:	ldr	r3, [pc, #12]	; 11094 <exit@plt+0x4ec>
   11084:	bl	10a88 <__libc_start_main@plt>
   11088:	bl	10a7c <abort@plt>
   1108c:	andeq	r1, r1, r4, asr #6
   11090:			; <UNDEFINED> instruction: 0x00010bb4
   11094:	andeq	r1, r1, r0, ror #5
   11098:	ldr	r3, [pc, #20]	; 110b4 <exit@plt+0x50c>
   1109c:	ldr	r2, [pc, #20]	; 110b8 <exit@plt+0x510>
   110a0:	add	r3, pc, r3
   110a4:	ldr	r2, [r3, r2]
   110a8:	cmp	r2, #0
   110ac:	bxeq	lr
   110b0:	b	10aa0 <__gmon_start__@plt>
   110b4:	andeq	r0, r1, r8, asr pc
   110b8:	andeq	r0, r0, r4, ror r0
   110bc:	push	{r3, lr}
   110c0:	movw	r0, #8316	; 0x207c
   110c4:	ldr	r3, [pc, #36]	; 110f0 <exit@plt+0x548>
   110c8:	movt	r0, #2
   110cc:	rsb	r3, r0, r3
   110d0:	cmp	r3, #6
   110d4:	popls	{r3, pc}
   110d8:	movw	r3, #0
   110dc:	movt	r3, #0
   110e0:	cmp	r3, #0
   110e4:	popeq	{r3, pc}
   110e8:	blx	r3
   110ec:	pop	{r3, pc}
   110f0:	andeq	r2, r2, pc, ror r0
   110f4:	push	{r3, lr}
   110f8:	movw	r0, #8316	; 0x207c
   110fc:	movw	r3, #8316	; 0x207c
   11100:	movt	r0, #2
   11104:	movt	r3, #2
   11108:	rsb	r3, r0, r3
   1110c:	asr	r3, r3, #2
   11110:	add	r3, r3, r3, lsr #31
   11114:	asrs	r1, r3, #1
   11118:	popeq	{r3, pc}
   1111c:	movw	r2, #0
   11120:	movt	r2, #0
   11124:	cmp	r2, #0
   11128:	popeq	{r3, pc}
   1112c:	blx	r2
   11130:	pop	{r3, pc}
   11134:	push	{r4, lr}
   11138:	movw	r4, #8348	; 0x209c
   1113c:	movt	r4, #2
   11140:	ldrb	r3, [r4]
   11144:	cmp	r3, #0
   11148:	popne	{r4, pc}
   1114c:	bl	110bc <exit@plt+0x514>
   11150:	mov	r3, #1
   11154:	strb	r3, [r4]
   11158:	pop	{r4, pc}
   1115c:	movw	r0, #7900	; 0x1edc
   11160:	movt	r0, #2
   11164:	push	{r3, lr}
   11168:	ldr	r3, [r0]
   1116c:	cmp	r3, #0
   11170:	beq	11188 <exit@plt+0x5e0>
   11174:	movw	r3, #0
   11178:	movt	r3, #0
   1117c:	cmp	r3, #0
   11180:	beq	11188 <exit@plt+0x5e0>
   11184:	blx	r3
   11188:	pop	{r3, lr}
   1118c:	b	110f4 <exit@plt+0x54c>
   11190:	push	{r4, r5, r6, lr}
   11194:	subs	r5, r1, #0
   11198:	mov	r6, r0
   1119c:	mov	r2, #5
   111a0:	movwne	r3, #8340	; 0x2094
   111a4:	movweq	r3, #8336	; 0x2090
   111a8:	movtne	r3, #2
   111ac:	movteq	r3, #2
   111b0:	movw	r0, #5048	; 0x13b8
   111b4:	movw	r1, #5060	; 0x13c4
   111b8:	movt	r0, #1
   111bc:	movt	r1, #1
   111c0:	ldr	r4, [r3]
   111c4:	bl	10adc <dcgettext@plt>
   111c8:	mov	r3, r6
   111cc:	mov	r1, #1
   111d0:	mov	r2, r0
   111d4:	mov	r0, r4
   111d8:	bl	10b3c <__fprintf_chk@plt>
   111dc:	mov	r2, #5
   111e0:	movw	r0, #5048	; 0x13b8
   111e4:	movw	r1, #5176	; 0x1438
   111e8:	movt	r0, #1
   111ec:	movt	r1, #1
   111f0:	bl	10adc <dcgettext@plt>
   111f4:	mov	r1, #1
   111f8:	mov	r2, r0
   111fc:	mov	r0, r4
   11200:	bl	10b3c <__fprintf_chk@plt>
   11204:	mov	r1, r4
   11208:	mov	r0, #10
   1120c:	bl	10b48 <fputc@plt>
   11210:	mov	r2, #5
   11214:	movw	r0, #5048	; 0x13b8
   11218:	movw	r1, #5216	; 0x1460
   1121c:	movt	r0, #1
   11220:	movt	r1, #1
   11224:	bl	10adc <dcgettext@plt>
   11228:	mov	r1, #1
   1122c:	mov	r2, r0
   11230:	mov	r0, r4
   11234:	bl	10b3c <__fprintf_chk@plt>
   11238:	mov	r2, #5
   1123c:	movw	r0, #5048	; 0x13b8
   11240:	movw	r1, #5288	; 0x14a8
   11244:	movt	r0, #1
   11248:	movt	r1, #1
   1124c:	bl	10adc <dcgettext@plt>
   11250:	mov	r1, #1
   11254:	mov	r2, r0
   11258:	mov	r0, r4
   1125c:	bl	10b3c <__fprintf_chk@plt>
   11260:	mov	r2, #5
   11264:	movw	r0, #5048	; 0x13b8
   11268:	movw	r1, #5348	; 0x14e4
   1126c:	movt	r0, #1
   11270:	movt	r1, #1
   11274:	bl	10adc <dcgettext@plt>
   11278:	mov	r1, #1
   1127c:	mov	r2, r0
   11280:	mov	r0, r4
   11284:	bl	10b3c <__fprintf_chk@plt>
   11288:	mov	r2, #5
   1128c:	movw	r0, #5048	; 0x13b8
   11290:	movw	r1, #5404	; 0x151c
   11294:	movt	r0, #1
   11298:	movt	r1, #1
   1129c:	bl	10adc <dcgettext@plt>
   112a0:	mov	r1, #1
   112a4:	mov	r2, r0
   112a8:	mov	r0, r4
   112ac:	bl	10b3c <__fprintf_chk@plt>
   112b0:	mov	r2, #5
   112b4:	movw	r0, #5048	; 0x13b8
   112b8:	movw	r1, #5468	; 0x155c
   112bc:	movt	r0, #1
   112c0:	movt	r1, #1
   112c4:	bl	10adc <dcgettext@plt>
   112c8:	mov	r1, #1
   112cc:	mov	r2, r0
   112d0:	mov	r0, r4
   112d4:	bl	10b3c <__fprintf_chk@plt>
   112d8:	mov	r0, r5
   112dc:	bl	10ba8 <exit@plt>
   112e0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   112e4:	mov	r7, r0
   112e8:	ldr	r6, [pc, #76]	; 1133c <exit@plt+0x794>
   112ec:	mov	r8, r1
   112f0:	ldr	r5, [pc, #72]	; 11340 <exit@plt+0x798>
   112f4:	mov	r9, r2
   112f8:	add	r6, pc, r6
   112fc:	bl	10a5c <_init@@Base>
   11300:	add	r5, pc, r5
   11304:	rsb	r6, r5, r6
   11308:	asrs	r6, r6, #2
   1130c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11310:	sub	r5, r5, #4
   11314:	mov	r4, #0
   11318:	add	r4, r4, #1
   1131c:	ldr	r3, [r5, #4]!
   11320:	mov	r0, r7
   11324:	mov	r1, r8
   11328:	mov	r2, r9
   1132c:	blx	r3
   11330:	cmp	r4, r6
   11334:	bne	11318 <exit@plt+0x770>
   11338:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1133c:	ldrdeq	r0, [r1], -r8
   11340:	andeq	r0, r1, ip, asr #23
   11344:	bx	lr

Disassembly of section .fini:

00011348 <_fini@@Base>:
   11348:	push	{r3, lr}
   1134c:	pop	{r3, pc}
