
centos-preinstalled/idiag-socket-details:     file format elf32-littlearm


Disassembly of section .init:

00010800 <.init>:
   10800:	push	{r3, lr}
   10804:	bl	10ad8 <exit@plt+0x1ec>
   10808:	pop	{r3, pc}

Disassembly of section .plt:

0001080c <abort@plt-0x14>:
   1080c:	push	{lr}		; (str lr, [sp, #-4]!)
   10810:	ldr	lr, [pc, #4]	; 1081c <abort@plt-0x4>
   10814:	add	lr, pc, lr
   10818:	ldr	pc, [lr, #8]!
   1081c:	andeq	r0, r1, r4, ror #15

00010820 <abort@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #16, 20	; 0x10000
   10828:	ldr	pc, [ip, #2020]!	; 0x7e4

0001082c <nl_cache_dump_filter@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #16, 20	; 0x10000
   10834:	ldr	pc, [ip, #2012]!	; 0x7dc

00010838 <nl_cli_fatal@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #16, 20	; 0x10000
   10840:	ldr	pc, [ip, #2004]!	; 0x7d4

00010844 <__libc_start_main@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #16, 20	; 0x10000
   1084c:	ldr	pc, [ip, #1996]!	; 0x7cc

00010850 <__gmon_start__@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #16, 20	; 0x10000
   10858:	ldr	pc, [ip, #1988]!	; 0x7c4

0001085c <nl_cli_print_version@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #16, 20	; 0x10000
   10864:	ldr	pc, [ip, #1980]!	; 0x7bc

00010868 <nl_cli_alloc_socket@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #16, 20	; 0x10000
   10870:	ldr	pc, [ip, #1972]!	; 0x7b4

00010874 <getopt_long@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #16, 20	; 0x10000
   1087c:	ldr	pc, [ip, #1964]!	; 0x7ac

00010880 <idiagnl_msg_alloc_cache@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #16, 20	; 0x10000
   10888:	ldr	pc, [ip, #1956]!	; 0x7a4

0001088c <nl_cache_free@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #16, 20	; 0x10000
   10894:	ldr	pc, [ip, #1948]!	; 0x79c

00010898 <nl_cache_mngt_unprovide@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #16, 20	; 0x10000
   108a0:	ldr	pc, [ip, #1940]!	; 0x794

000108a4 <nl_cache_mngt_provide@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #16, 20	; 0x10000
   108ac:	ldr	pc, [ip, #1932]!	; 0x78c

000108b0 <__stack_chk_fail@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #16, 20	; 0x10000
   108b8:	ldr	pc, [ip, #1924]!	; 0x784

000108bc <nl_socket_free@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #16, 20	; 0x10000
   108c4:	ldr	pc, [ip, #1916]!	; 0x77c

000108c8 <puts@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #16, 20	; 0x10000
   108d0:	ldr	pc, [ip, #1908]!	; 0x774

000108d4 <nl_geterror@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #16, 20	; 0x10000
   108dc:	ldr	pc, [ip, #1900]!	; 0x76c

000108e0 <nl_cli_connect@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #16, 20	; 0x10000
   108e8:	ldr	pc, [ip, #1892]!	; 0x764

000108ec <exit@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #16, 20	; 0x10000
   108f4:	ldr	pc, [ip, #1884]!	; 0x75c

Disassembly of section .text:

000108f8 <.text>:
   108f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108fc:	movw	r2, #4292	; 0x10c4
   10900:	movw	r8, #4288	; 0x10c0
   10904:	movt	r2, #2
   10908:	movt	r8, #2
   1090c:	mov	r6, r1
   10910:	ldr	r2, [r2]
   10914:	sub	sp, sp, #84	; 0x54
   10918:	ldr	r1, [r8]
   1091c:	mov	r3, #0
   10920:	mov	r7, r0
   10924:	str	r3, [sp, #24]
   10928:	mov	r4, r3
   1092c:	str	r2, [sp, #52]	; 0x34
   10930:	str	r1, [sp, #76]	; 0x4c
   10934:	add	r5, sp, #20
   10938:	str	r3, [sp, #28]
   1093c:	movw	r9, #258	; 0x102
   10940:	str	r3, [sp, #32]
   10944:	mov	sl, #1
   10948:	str	r3, [sp, #36]	; 0x24
   1094c:	mov	fp, #2
   10950:	str	r3, [sp, #40]	; 0x28
   10954:	str	r3, [sp, #44]	; 0x2c
   10958:	str	r3, [sp, #48]	; 0x30
   1095c:	str	r3, [sp, #56]	; 0x38
   10960:	str	r3, [sp, #60]	; 0x3c
   10964:	str	r3, [sp, #64]	; 0x40
   10968:	str	r3, [sp, #68]	; 0x44
   1096c:	str	r3, [sp, #72]	; 0x48
   10970:	bl	10868 <nl_cli_alloc_socket@plt>
   10974:	mov	r1, #4
   10978:	str	r0, [sp, #12]
   1097c:	bl	108e0 <nl_cli_connect@plt>
   10980:	str	r5, [sp]
   10984:	movw	r2, #3144	; 0xc48
   10988:	movw	r3, #4188	; 0x105c
   1098c:	movt	r2, #1
   10990:	movt	r3, #2
   10994:	mov	r0, r7
   10998:	mov	r1, r6
   1099c:	str	r4, [sp, #20]
   109a0:	bl	10874 <getopt_long@plt>
   109a4:	cmn	r0, #1
   109a8:	beq	10a18 <exit@plt+0x12c>
   109ac:	cmp	r0, #118	; 0x76
   109b0:	beq	10a10 <exit@plt+0x124>
   109b4:	ble	109e4 <exit@plt+0xf8>
   109b8:	cmp	r0, r9
   109bc:	streq	sl, [sp, #24]
   109c0:	beq	10980 <exit@plt+0x94>
   109c4:	movw	r3, #259	; 0x103
   109c8:	cmp	r0, r3
   109cc:	streq	fp, [sp, #24]
   109d0:	beq	10980 <exit@plt+0x94>
   109d4:	movw	r3, #257	; 0x101
   109d8:	cmp	r0, r3
   109dc:	streq	r4, [sp, #24]
   109e0:	b	10980 <exit@plt+0x94>
   109e4:	cmp	r0, #63	; 0x3f
   109e8:	beq	10a08 <exit@plt+0x11c>
   109ec:	cmp	r0, #104	; 0x68
   109f0:	bne	10980 <exit@plt+0x94>
   109f4:	movw	r0, #3148	; 0xc4c
   109f8:	movt	r0, #1
   109fc:	bl	108c8 <puts@plt>
   10a00:	mov	r0, #0
   10a04:	bl	108ec <exit@plt>
   10a08:	mov	r0, #7
   10a0c:	bl	108ec <exit@plt>
   10a10:	bl	1085c <nl_cli_print_version@plt>
   10a14:	b	10980 <exit@plt+0x94>
   10a18:	mov	r3, r5
   10a1c:	ldr	r0, [sp, #12]
   10a20:	mov	r1, #2
   10a24:	movw	r2, #4095	; 0xfff
   10a28:	bl	10880 <idiagnl_msg_alloc_cache@plt>
   10a2c:	subs	r4, r0, #0
   10a30:	beq	10a4c <exit@plt+0x160>
   10a34:	bl	108d4 <nl_geterror@plt>
   10a38:	movw	r1, #3464	; 0xd88
   10a3c:	movt	r1, #1
   10a40:	mov	r2, r0
   10a44:	mov	r0, r4
   10a48:	bl	10838 <nl_cli_fatal@plt>
   10a4c:	ldr	r0, [sp, #20]
   10a50:	bl	108a4 <nl_cache_mngt_provide@plt>
   10a54:	mov	r2, #0
   10a58:	add	r1, sp, #24
   10a5c:	ldr	r0, [sp, #20]
   10a60:	bl	1082c <nl_cache_dump_filter@plt>
   10a64:	ldr	r0, [sp, #20]
   10a68:	bl	10898 <nl_cache_mngt_unprovide@plt>
   10a6c:	ldr	r0, [sp, #20]
   10a70:	bl	1088c <nl_cache_free@plt>
   10a74:	ldr	r0, [sp, #12]
   10a78:	bl	108bc <nl_socket_free@plt>
   10a7c:	ldr	r2, [sp, #76]	; 0x4c
   10a80:	ldr	r3, [r8]
   10a84:	mov	r0, #0
   10a88:	cmp	r2, r3
   10a8c:	bne	10a98 <exit@plt+0x1ac>
   10a90:	add	sp, sp, #84	; 0x54
   10a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a98:	bl	108b0 <__stack_chk_fail@plt>
   10a9c:	mov	fp, #0
   10aa0:	mov	lr, #0
   10aa4:	pop	{r1}		; (ldr r1, [sp], #4)
   10aa8:	mov	r2, sp
   10aac:	push	{r2}		; (str r2, [sp, #-4]!)
   10ab0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ab4:	ldr	ip, [pc, #16]	; 10acc <exit@plt+0x1e0>
   10ab8:	push	{ip}		; (str ip, [sp, #-4]!)
   10abc:	ldr	r0, [pc, #12]	; 10ad0 <exit@plt+0x1e4>
   10ac0:	ldr	r3, [pc, #12]	; 10ad4 <exit@plt+0x1e8>
   10ac4:	bl	10844 <__libc_start_main@plt>
   10ac8:	bl	10820 <abort@plt>
   10acc:	andeq	r0, r1, r4, lsr ip
   10ad0:	strdeq	r0, [r1], -r8
   10ad4:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10ad8:	ldr	r3, [pc, #20]	; 10af4 <exit@plt+0x208>
   10adc:	ldr	r2, [pc, #20]	; 10af8 <exit@plt+0x20c>
   10ae0:	add	r3, pc, r3
   10ae4:	ldr	r2, [r3, r2]
   10ae8:	cmp	r2, #0
   10aec:	bxeq	lr
   10af0:	b	10850 <__gmon_start__@plt>
   10af4:	andeq	r0, r1, r8, lsl r5
   10af8:	andeq	r0, r0, r4, asr r0
   10afc:	push	{r3, lr}
   10b00:	movw	r0, #4284	; 0x10bc
   10b04:	ldr	r3, [pc, #36]	; 10b30 <exit@plt+0x244>
   10b08:	movt	r0, #2
   10b0c:	rsb	r3, r0, r3
   10b10:	cmp	r3, #6
   10b14:	popls	{r3, pc}
   10b18:	movw	r3, #0
   10b1c:	movt	r3, #0
   10b20:	cmp	r3, #0
   10b24:	popeq	{r3, pc}
   10b28:	blx	r3
   10b2c:	pop	{r3, pc}
   10b30:	strheq	r1, [r2], -pc	; <UNPREDICTABLE>
   10b34:	push	{r3, lr}
   10b38:	movw	r0, #4284	; 0x10bc
   10b3c:	movw	r3, #4284	; 0x10bc
   10b40:	movt	r0, #2
   10b44:	movt	r3, #2
   10b48:	rsb	r3, r0, r3
   10b4c:	asr	r3, r3, #2
   10b50:	add	r3, r3, r3, lsr #31
   10b54:	asrs	r1, r3, #1
   10b58:	popeq	{r3, pc}
   10b5c:	movw	r2, #0
   10b60:	movt	r2, #0
   10b64:	cmp	r2, #0
   10b68:	popeq	{r3, pc}
   10b6c:	blx	r2
   10b70:	pop	{r3, pc}
   10b74:	push	{r4, lr}
   10b78:	movw	r4, #4296	; 0x10c8
   10b7c:	movt	r4, #2
   10b80:	ldrb	r3, [r4]
   10b84:	cmp	r3, #0
   10b88:	popne	{r4, pc}
   10b8c:	bl	10afc <exit@plt+0x210>
   10b90:	mov	r3, #1
   10b94:	strb	r3, [r4]
   10b98:	pop	{r4, pc}
   10b9c:	movw	r0, #3772	; 0xebc
   10ba0:	movt	r0, #2
   10ba4:	push	{r3, lr}
   10ba8:	ldr	r3, [r0]
   10bac:	cmp	r3, #0
   10bb0:	beq	10bc8 <exit@plt+0x2dc>
   10bb4:	movw	r3, #0
   10bb8:	movt	r3, #0
   10bbc:	cmp	r3, #0
   10bc0:	beq	10bc8 <exit@plt+0x2dc>
   10bc4:	blx	r3
   10bc8:	pop	{r3, lr}
   10bcc:	b	10b34 <exit@plt+0x248>
   10bd0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10bd4:	mov	r7, r0
   10bd8:	ldr	r6, [pc, #76]	; 10c2c <exit@plt+0x340>
   10bdc:	mov	r8, r1
   10be0:	ldr	r5, [pc, #72]	; 10c30 <exit@plt+0x344>
   10be4:	mov	r9, r2
   10be8:	add	r6, pc, r6
   10bec:	bl	10800 <abort@plt-0x20>
   10bf0:	add	r5, pc, r5
   10bf4:	rsb	r6, r5, r6
   10bf8:	asrs	r6, r6, #2
   10bfc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10c00:	sub	r5, r5, #4
   10c04:	mov	r4, #0
   10c08:	add	r4, r4, #1
   10c0c:	ldr	r3, [r5, #4]!
   10c10:	mov	r0, r7
   10c14:	mov	r1, r8
   10c18:	mov	r2, r9
   10c1c:	blx	r3
   10c20:	cmp	r4, r6
   10c24:	bne	10c08 <exit@plt+0x31c>
   10c28:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10c2c:	andeq	r0, r1, r8, asr #5
   10c30:			; <UNDEFINED> instruction: 0x000102bc
   10c34:	bx	lr

Disassembly of section .fini:

00010c38 <.fini>:
   10c38:	push	{r3, lr}
   10c3c:	pop	{r3, pc}
