
centos-preinstalled/dircolors:     file format elf32-littlearm


Disassembly of section .init:

00010f6c <.init>:
   10f6c:	push	{r3, lr}
   10f70:	bl	11808 <close@plt+0x5c4>
   10f74:	pop	{r3, pc}

Disassembly of section .plt:

00010f78 <fdopen@plt-0x14>:
   10f78:	push	{lr}		; (str lr, [sp, #-4]!)
   10f7c:	ldr	lr, [pc, #4]	; 10f88 <fdopen@plt-0x4>
   10f80:	add	lr, pc, lr
   10f84:	ldr	pc, [lr, #8]!
   10f88:	andeq	r7, r1, r8, ror r0

00010f8c <fdopen@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #94208	; 0x17000
   10f94:	ldr	pc, [ip, #120]!	; 0x78

00010f98 <calloc@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #94208	; 0x17000
   10fa0:	ldr	pc, [ip, #112]!	; 0x70

00010fa4 <fputs_unlocked@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #94208	; 0x17000
   10fac:	ldr	pc, [ip, #104]!	; 0x68

00010fb0 <raise@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #94208	; 0x17000
   10fb8:	ldr	pc, [ip, #96]!	; 0x60

00010fbc <__getdelim@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #94208	; 0x17000
   10fc4:	ldr	pc, [ip, #88]!	; 0x58

00010fc8 <strcmp@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #94208	; 0x17000
   10fd0:	ldr	pc, [ip, #80]!	; 0x50

00010fd4 <fflush@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #94208	; 0x17000
   10fdc:	ldr	pc, [ip, #72]!	; 0x48

00010fe0 <free@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #94208	; 0x17000
   10fe8:	ldr	pc, [ip, #64]!	; 0x40

00010fec <_exit@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #94208	; 0x17000
   10ff4:	ldr	pc, [ip, #56]!	; 0x38

00010ff8 <memcpy@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #94208	; 0x17000
   11000:	ldr	pc, [ip, #48]!	; 0x30

00011004 <mbsinit@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #94208	; 0x17000
   1100c:	ldr	pc, [ip, #40]!	; 0x28

00011010 <fwrite_unlocked@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #94208	; 0x17000
   11018:	ldr	pc, [ip, #32]!

0001101c <memcmp@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #94208	; 0x17000
   11024:	ldr	pc, [ip, #24]!

00011028 <_obstack_newchunk@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #94208	; 0x17000
   11030:	ldr	pc, [ip, #16]!

00011034 <dcgettext@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #94208	; 0x17000
   1103c:	ldr	pc, [ip, #8]!

00011040 <__stack_chk_fail@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #94208	; 0x17000
   11048:	ldr	pc, [ip, #0]!

0001104c <_obstack_begin@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #90112	; 0x16000
   11054:	ldr	pc, [ip, #4088]!	; 0xff8

00011058 <dup2@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #90112	; 0x16000
   11060:	ldr	pc, [ip, #4080]!	; 0xff0

00011064 <realloc@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #90112	; 0x16000
   1106c:	ldr	pc, [ip, #4072]!	; 0xfe8

00011070 <textdomain@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #90112	; 0x16000
   11078:	ldr	pc, [ip, #4064]!	; 0xfe0

0001107c <__strndup@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #90112	; 0x16000
   11084:	ldr	pc, [ip, #4056]!	; 0xfd8

00011088 <iswprint@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #90112	; 0x16000
   11090:	ldr	pc, [ip, #4048]!	; 0xfd0

00011094 <fwrite@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #90112	; 0x16000
   1109c:	ldr	pc, [ip, #4040]!	; 0xfc8

000110a0 <lseek64@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #90112	; 0x16000
   110a8:	ldr	pc, [ip, #4032]!	; 0xfc0

000110ac <__ctype_get_mb_cur_max@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #90112	; 0x16000
   110b4:	ldr	pc, [ip, #4024]!	; 0xfb8

000110b8 <strcpy@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #90112	; 0x16000
   110c0:	ldr	pc, [ip, #4016]!	; 0xfb0

000110c4 <__fpending@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #90112	; 0x16000
   110cc:	ldr	pc, [ip, #4008]!	; 0xfa8

000110d0 <mbrtowc@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #90112	; 0x16000
   110d8:	ldr	pc, [ip, #4000]!	; 0xfa0

000110dc <error@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #90112	; 0x16000
   110e4:	ldr	pc, [ip, #3992]!	; 0xf98

000110e8 <open64@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #90112	; 0x16000
   110f0:	ldr	pc, [ip, #3984]!	; 0xf90

000110f4 <getenv@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #90112	; 0x16000
   110fc:	ldr	pc, [ip, #3976]!	; 0xf88

00011100 <puts@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #90112	; 0x16000
   11108:	ldr	pc, [ip, #3968]!	; 0xf80

0001110c <malloc@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #90112	; 0x16000
   11114:	ldr	pc, [ip, #3960]!	; 0xf78

00011118 <__libc_start_main@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #90112	; 0x16000
   11120:	ldr	pc, [ip, #3952]!	; 0xf70

00011124 <__freading@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #90112	; 0x16000
   1112c:	ldr	pc, [ip, #3944]!	; 0xf68

00011130 <__gmon_start__@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #90112	; 0x16000
   11138:	ldr	pc, [ip, #3936]!	; 0xf60

0001113c <freopen64@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #90112	; 0x16000
   11144:	ldr	pc, [ip, #3928]!	; 0xf58

00011148 <getopt_long@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #90112	; 0x16000
   11150:	ldr	pc, [ip, #3920]!	; 0xf50

00011154 <__ctype_b_loc@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #90112	; 0x16000
   1115c:	ldr	pc, [ip, #3912]!	; 0xf48

00011160 <exit@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #90112	; 0x16000
   11168:	ldr	pc, [ip, #3904]!	; 0xf40

0001116c <strlen@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #90112	; 0x16000
   11174:	ldr	pc, [ip, #3896]!	; 0xf38

00011178 <ungetc@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #90112	; 0x16000
   11180:	ldr	pc, [ip, #3888]!	; 0xf30

00011184 <__errno_location@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #90112	; 0x16000
   1118c:	ldr	pc, [ip, #3880]!	; 0xf28

00011190 <__cxa_atexit@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #90112	; 0x16000
   11198:	ldr	pc, [ip, #3872]!	; 0xf20

0001119c <memset@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #90112	; 0x16000
   111a4:	ldr	pc, [ip, #3864]!	; 0xf18

000111a8 <fscanf@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #90112	; 0x16000
   111b0:	ldr	pc, [ip, #3856]!	; 0xf10

000111b4 <__printf_chk@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #90112	; 0x16000
   111bc:	ldr	pc, [ip, #3848]!	; 0xf08

000111c0 <fileno@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #90112	; 0x16000
   111c8:	ldr	pc, [ip, #3840]!	; 0xf00

000111cc <__fprintf_chk@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #90112	; 0x16000
   111d4:	ldr	pc, [ip, #3832]!	; 0xef8

000111d8 <fclose@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #90112	; 0x16000
   111e0:	ldr	pc, [ip, #3824]!	; 0xef0

000111e4 <fseeko64@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #90112	; 0x16000
   111ec:	ldr	pc, [ip, #3816]!	; 0xee8

000111f0 <__uflow@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #90112	; 0x16000
   111f8:	ldr	pc, [ip, #3808]!	; 0xee0

000111fc <setlocale@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #90112	; 0x16000
   11204:	ldr	pc, [ip, #3800]!	; 0xed8

00011208 <strrchr@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #90112	; 0x16000
   11210:	ldr	pc, [ip, #3792]!	; 0xed0

00011214 <nl_langinfo@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #90112	; 0x16000
   1121c:	ldr	pc, [ip, #3784]!	; 0xec8

00011220 <bindtextdomain@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #90112	; 0x16000
   11228:	ldr	pc, [ip, #3776]!	; 0xec0

0001122c <strncmp@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #90112	; 0x16000
   11234:	ldr	pc, [ip, #3768]!	; 0xeb8

00011238 <abort@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #90112	; 0x16000
   11240:	ldr	pc, [ip, #3760]!	; 0xeb0

00011244 <close@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #90112	; 0x16000
   1124c:	ldr	pc, [ip, #3752]!	; 0xea8

Disassembly of section .text:

00011250 <close_stdout@@Base-0x1250>:
   11250:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11254:	mov	r7, r0
   11258:	sub	sp, sp, #20
   1125c:	ldr	r0, [r1]
   11260:	mov	r4, r1
   11264:	bl	1280c <close_stdout@@Base+0x36c>
   11268:	ldr	r1, [pc, #1228]	; 1173c <close@plt+0x4f8>
   1126c:	mov	r0, #6
   11270:	ldr	r5, [pc, #1224]	; 11740 <close@plt+0x4fc>
   11274:	mov	fp, #0
   11278:	add	r1, pc, r1
   1127c:	ldr	r8, [pc, #1216]	; 11744 <close@plt+0x500>
   11280:	bl	111fc <setlocale@plt>
   11284:	add	r5, pc, r5
   11288:	ldr	r1, [pc, #1208]	; 11748 <close@plt+0x504>
   1128c:	add	r8, pc, r8
   11290:	mov	r0, r5
   11294:	ldr	r9, [pc, #1200]	; 1174c <close@plt+0x508>
   11298:	add	r1, pc, r1
   1129c:	add	r8, r8, #304	; 0x130
   112a0:	bl	11220 <bindtextdomain@plt>
   112a4:	mov	r0, r5
   112a8:	ldr	r5, [pc, #1184]	; 11750 <close@plt+0x50c>
   112ac:	bl	11070 <textdomain@plt>
   112b0:	ldr	r3, [pc, #1180]	; 11754 <close@plt+0x510>
   112b4:	mov	r2, #2
   112b8:	add	r5, pc, r5
   112bc:	str	r2, [sp, #12]
   112c0:	add	r9, pc, r9
   112c4:	mov	sl, fp
   112c8:	ldr	r0, [r5, r3]
   112cc:	bl	15154 <close_stdout@@Base+0x2cb4>
   112d0:	str	sl, [sp]
   112d4:	mov	r0, r7
   112d8:	mov	r1, r4
   112dc:	mov	r2, r9
   112e0:	mov	r3, r8
   112e4:	mov	r6, #0
   112e8:	bl	11148 <getopt_long@plt>
   112ec:	cmn	r0, #1
   112f0:	beq	11400 <close@plt+0x1bc>
   112f4:	cmp	r0, #98	; 0x62
   112f8:	beq	113f8 <close@plt+0x1b4>
   112fc:	bgt	11318 <close@plt+0xd4>
   11300:	cmn	r0, #3
   11304:	beq	11330 <close@plt+0xec>
   11308:	cmn	r0, #2
   1130c:	bne	113f0 <close@plt+0x1ac>
   11310:	mov	r0, r6
   11314:	bl	1220c <close@plt+0xfc8>
   11318:	cmp	r0, #99	; 0x63
   1131c:	beq	11370 <close@plt+0x12c>
   11320:	cmp	r0, #112	; 0x70
   11324:	bne	113f0 <close@plt+0x1ac>
   11328:	mov	fp, #1
   1132c:	b	112d0 <close@plt+0x8c>
   11330:	ldr	r1, [pc, #1056]	; 11758 <close@plt+0x514>
   11334:	ldr	r3, [pc, #1056]	; 1175c <close@plt+0x518>
   11338:	ldr	r2, [pc, #1056]	; 11760 <close@plt+0x51c>
   1133c:	ldr	r0, [r5, r1]
   11340:	ldr	r3, [r5, r3]
   11344:	add	r2, pc, r2
   11348:	ldr	r1, [pc, #1044]	; 11764 <close@plt+0x520>
   1134c:	ldr	r0, [r0]
   11350:	ldr	r3, [r3]
   11354:	add	r1, pc, r1
   11358:	stm	sp, {r2, r6}
   1135c:	ldr	r2, [pc, #1028]	; 11768 <close@plt+0x524>
   11360:	add	r2, pc, r2
   11364:	bl	144f8 <close_stdout@@Base+0x2058>
   11368:	mov	r0, r6
   1136c:	bl	11160 <exit@plt>
   11370:	mov	r3, #1
   11374:	str	r3, [sp, #12]
   11378:	b	112d0 <close@plt+0x8c>
   1137c:	ldr	r1, [pc, #1000]	; 1176c <close@plt+0x528>
   11380:	mov	r2, #5
   11384:	mov	r0, r8
   11388:	add	r1, pc, r1
   1138c:	bl	11034 <dcgettext@plt>
   11390:	mov	r4, r0
   11394:	ldr	r0, [sl, r6, lsl #2]
   11398:	bl	1405c <close_stdout@@Base+0x1bbc>
   1139c:	mov	r1, r8
   113a0:	mov	r2, r4
   113a4:	mov	r3, r0
   113a8:	mov	r0, r8
   113ac:	bl	110dc <error@plt>
   113b0:	cmp	fp, #0
   113b4:	beq	113f0 <close@plt+0x1ac>
   113b8:	ldr	r3, [pc, #944]	; 11770 <close@plt+0x52c>
   113bc:	mov	r2, #5
   113c0:	ldr	r1, [pc, #940]	; 11774 <close@plt+0x530>
   113c4:	mov	r0, r8
   113c8:	ldr	r3, [r5, r3]
   113cc:	add	r1, pc, r1
   113d0:	ldr	r4, [r3]
   113d4:	bl	11034 <dcgettext@plt>
   113d8:	ldr	r2, [pc, #920]	; 11778 <close@plt+0x534>
   113dc:	mov	r1, #1
   113e0:	add	r2, pc, r2
   113e4:	mov	r3, r0
   113e8:	mov	r0, r4
   113ec:	bl	111cc <__fprintf_chk@plt>
   113f0:	mov	r0, #1
   113f4:	bl	1220c <close@plt+0xfc8>
   113f8:	str	r6, [sp, #12]
   113fc:	b	112d0 <close@plt+0x8c>
   11400:	ldr	r3, [pc, #884]	; 1177c <close@plt+0x538>
   11404:	ldr	r2, [sp, #12]
   11408:	ldr	r3, [r5, r3]
   1140c:	cmp	r2, #2
   11410:	moveq	r8, #0
   11414:	andne	r8, fp, #1
   11418:	cmp	r8, r6
   1141c:	ldr	r9, [r3]
   11420:	bne	11480 <close@plt+0x23c>
   11424:	rsb	r7, r9, r7
   11428:	eor	r6, fp, #1
   1142c:	cmp	r7, r6
   11430:	add	sl, r4, r9, lsl #2
   11434:	bgt	1137c <close@plt+0x138>
   11438:	cmp	fp, #0
   1143c:	beq	114a8 <close@plt+0x264>
   11440:	ldr	r4, [pc, #824]	; 11780 <close@plt+0x53c>
   11444:	movw	r6, #4537	; 0x11b9
   11448:	add	r4, pc, r4
   1144c:	mov	r5, r4
   11450:	b	1146c <close@plt+0x228>
   11454:	mov	r0, r4
   11458:	bl	11100 <puts@plt>
   1145c:	mov	r0, r4
   11460:	bl	1116c <strlen@plt>
   11464:	add	r0, r0, #1
   11468:	add	r4, r4, r0
   1146c:	rsb	r3, r5, r4
   11470:	cmp	r3, r6
   11474:	bls	11454 <close@plt+0x210>
   11478:	mov	r0, #0
   1147c:	bl	11160 <exit@plt>
   11480:	ldr	r1, [pc, #764]	; 11784 <close@plt+0x540>
   11484:	mov	r0, r6
   11488:	mov	r2, #5
   1148c:	add	r1, pc, r1
   11490:	bl	11034 <dcgettext@plt>
   11494:	mov	r1, r6
   11498:	mov	r2, r0
   1149c:	mov	r0, r6
   114a0:	bl	110dc <error@plt>
   114a4:	b	113f0 <close@plt+0x1ac>
   114a8:	ldr	r3, [sp, #12]
   114ac:	cmp	r3, #2
   114b0:	beq	11694 <close@plt+0x450>
   114b4:	ldr	ip, [pc, #716]	; 11788 <close@plt+0x544>
   114b8:	mov	r1, #0
   114bc:	ldr	r3, [pc, #712]	; 1178c <close@plt+0x548>
   114c0:	mov	r2, r1
   114c4:	ldr	r0, [pc, #708]	; 11790 <close@plt+0x54c>
   114c8:	ldr	ip, [r5, ip]
   114cc:	ldr	r3, [r5, r3]
   114d0:	add	r0, pc, r0
   114d4:	str	ip, [sp]
   114d8:	bl	1104c <_obstack_begin@plt>
   114dc:	cmp	r7, #0
   114e0:	bne	115b4 <close@plt+0x370>
   114e4:	mov	r0, r7
   114e8:	mov	r1, r7
   114ec:	bl	11b00 <close@plt+0x8bc>
   114f0:	mov	r6, r0
   114f4:	cmp	r6, #0
   114f8:	beq	11620 <close@plt+0x3dc>
   114fc:	ldr	r3, [pc, #656]	; 11794 <close@plt+0x550>
   11500:	add	r3, pc, r3
   11504:	ldr	r4, [r3, #12]
   11508:	ldr	r6, [r3, #8]
   1150c:	cmp	r4, r6
   11510:	ldrbeq	r2, [r3, #40]	; 0x28
   11514:	orreq	r2, r2, #2
   11518:	strbeq	r2, [r3, #40]	; 0x28
   1151c:	ldr	r3, [pc, #628]	; 11798 <close@plt+0x554>
   11520:	add	r3, pc, r3
   11524:	ldr	r1, [r3, #24]
   11528:	ldr	r2, [r3, #4]
   1152c:	ldr	r0, [r3, #16]
   11530:	add	ip, r4, r1
   11534:	bic	r1, ip, r1
   11538:	str	r1, [r3, #12]
   1153c:	rsb	r1, r2, r1
   11540:	rsb	r2, r2, r0
   11544:	cmp	r1, r2
   11548:	strgt	r0, [r3, #12]
   1154c:	ldr	r3, [pc, #584]	; 1179c <close@plt+0x558>
   11550:	mov	r1, #1
   11554:	ldr	r2, [sp, #12]
   11558:	add	r3, pc, r3
   1155c:	cmp	r2, #0
   11560:	ldr	r2, [r3, #12]
   11564:	str	r2, [r3, #8]
   11568:	ldr	r3, [pc, #488]	; 11758 <close@plt+0x514>
   1156c:	beq	11628 <close@plt+0x3e4>
   11570:	ldr	r5, [r5, r3]
   11574:	mov	r2, #18
   11578:	ldr	r0, [pc, #544]	; 117a0 <close@plt+0x55c>
   1157c:	ldr	r7, [pc, #544]	; 117a4 <close@plt+0x560>
   11580:	add	r0, pc, r0
   11584:	ldr	r3, [r5]
   11588:	add	r7, pc, r7
   1158c:	bl	11010 <fwrite_unlocked@plt>
   11590:	mov	r0, r6
   11594:	mov	r1, #1
   11598:	rsb	r2, r6, r4
   1159c:	ldr	r3, [r5]
   115a0:	bl	11010 <fwrite_unlocked@plt>
   115a4:	mov	r0, r7
   115a8:	ldr	r1, [r5]
   115ac:	bl	10fa4 <fputs_unlocked@plt>
   115b0:	b	11478 <close@plt+0x234>
   115b4:	ldr	r4, [r4, r9, lsl #2]
   115b8:	ldrb	r3, [r4]
   115bc:	cmp	r3, #45	; 0x2d
   115c0:	bne	1164c <close@plt+0x408>
   115c4:	ldrb	r3, [r4, #1]
   115c8:	cmp	r3, #0
   115cc:	bne	1164c <close@plt+0x408>
   115d0:	ldr	r3, [pc, #464]	; 117a8 <close@plt+0x564>
   115d4:	ldr	r7, [r5, r3]
   115d8:	mov	r1, r4
   115dc:	ldr	r0, [r7]
   115e0:	bl	11b00 <close@plt+0x8bc>
   115e4:	mov	r6, r0
   115e8:	ldr	r0, [r7]
   115ec:	bl	14888 <close_stdout@@Base+0x23e8>
   115f0:	cmp	r0, #0
   115f4:	beq	114f4 <close@plt+0x2b0>
   115f8:	bl	11184 <__errno_location@plt>
   115fc:	ldr	r5, [r0]
   11600:	mov	r0, r4
   11604:	bl	1405c <close_stdout@@Base+0x1bbc>
   11608:	ldr	r2, [pc, #412]	; 117ac <close@plt+0x568>
   1160c:	mov	r1, r5
   11610:	add	r2, pc, r2
   11614:	mov	r3, r0
   11618:	mov	r0, #0
   1161c:	bl	110dc <error@plt>
   11620:	mov	r0, #1
   11624:	b	1147c <close@plt+0x238>
   11628:	ldr	r5, [r5, r3]
   1162c:	mov	r2, #11
   11630:	ldr	r0, [pc, #376]	; 117b0 <close@plt+0x56c>
   11634:	ldr	r7, [pc, #376]	; 117b4 <close@plt+0x570>
   11638:	ldr	r3, [r5]
   1163c:	add	r0, pc, r0
   11640:	add	r7, pc, r7
   11644:	bl	11010 <fwrite_unlocked@plt>
   11648:	b	11590 <close@plt+0x34c>
   1164c:	ldr	r3, [pc, #340]	; 117a8 <close@plt+0x564>
   11650:	mov	r0, r4
   11654:	ldr	r1, [pc, #348]	; 117b8 <close@plt+0x574>
   11658:	ldr	r7, [r5, r3]
   1165c:	add	r1, pc, r1
   11660:	ldr	r2, [r7]
   11664:	bl	126b0 <close_stdout@@Base+0x210>
   11668:	subs	r6, r0, #0
   1166c:	bne	115d8 <close@plt+0x394>
   11670:	bl	11184 <__errno_location@plt>
   11674:	ldr	r2, [pc, #320]	; 117bc <close@plt+0x578>
   11678:	add	r2, pc, r2
   1167c:	mov	r3, r0
   11680:	mov	r0, r6
   11684:	ldr	r1, [r3]
   11688:	mov	r3, r4
   1168c:	bl	110dc <error@plt>
   11690:	b	11620 <close@plt+0x3dc>
   11694:	ldr	r0, [pc, #292]	; 117c0 <close@plt+0x57c>
   11698:	add	r0, pc, r0
   1169c:	bl	110f4 <getenv@plt>
   116a0:	subs	r3, r0, #0
   116a4:	beq	116b4 <close@plt+0x470>
   116a8:	ldrb	r3, [r3]
   116ac:	cmp	r3, #0
   116b0:	bne	116e4 <close@plt+0x4a0>
   116b4:	ldr	r1, [pc, #264]	; 117c4 <close@plt+0x580>
   116b8:	mov	r2, #5
   116bc:	mov	r0, #0
   116c0:	mov	r3, #2
   116c4:	add	r1, pc, r1
   116c8:	str	r3, [sp, #12]
   116cc:	bl	11034 <dcgettext@plt>
   116d0:	mov	r1, #0
   116d4:	mov	r2, r0
   116d8:	mov	r0, #1
   116dc:	bl	110dc <error@plt>
   116e0:	b	114b4 <close@plt+0x270>
   116e4:	bl	125b8 <close_stdout@@Base+0x118>
   116e8:	ldrb	r3, [r0]
   116ec:	cmp	r3, #99	; 0x63
   116f0:	bne	11720 <close@plt+0x4dc>
   116f4:	ldrb	r3, [r0, #1]
   116f8:	cmp	r3, #115	; 0x73
   116fc:	bne	11720 <close@plt+0x4dc>
   11700:	ldrb	r3, [r0, #2]
   11704:	cmp	r3, #104	; 0x68
   11708:	bne	11720 <close@plt+0x4dc>
   1170c:	ldrb	r3, [r0, #3]
   11710:	cmp	r3, #0
   11714:	moveq	r3, #1
   11718:	streq	r3, [sp, #12]
   1171c:	beq	114b4 <close@plt+0x270>
   11720:	ldr	r1, [pc, #160]	; 117c8 <close@plt+0x584>
   11724:	add	r1, pc, r1
   11728:	bl	10fc8 <strcmp@plt>
   1172c:	rsbs	r0, r0, #1
   11730:	movcc	r0, #0
   11734:	str	r0, [sp, #12]
   11738:	b	114b4 <close@plt+0x270>
   1173c:	ldrdeq	r5, [r0], -r8
   11740:	andeq	r5, r0, ip, lsl #8
   11744:	andeq	r6, r1, r0, lsr #21
   11748:	ldrdeq	r5, [r0], -r8
   1174c:	andeq	r5, r0, r0, ror #9
   11750:	andeq	r6, r1, r0, asr #26
   11754:	andeq	r0, r0, r0, lsl r1
   11758:	andeq	r0, r0, r4, lsr #2
   1175c:	andeq	r0, r0, r8, lsl #2
   11760:	andeq	r5, r0, ip, asr #8
   11764:	andeq	r5, r0, r0, lsr r4
   11768:	andeq	r5, r0, ip, lsr #6
   1176c:	andeq	r5, r0, r4, lsl #9
   11770:	andeq	r0, r0, ip, lsl #2
   11774:	andeq	r5, r0, r4, asr r4
   11778:			; <UNDEFINED> instruction: 0x000057b4
   1177c:	andeq	r0, r0, r4, lsl #2
   11780:	andeq	r3, r0, r0, asr #26
   11784:	andeq	r5, r0, r8, lsl r3
   11788:	strdeq	r0, [r0], -ip
   1178c:	andeq	r0, r0, r4, lsl r1
   11790:			; <UNDEFINED> instruction: 0x00016cb4
   11794:	andeq	r6, r1, r4, lsl #25
   11798:	andeq	r6, r1, r4, ror #24
   1179c:	andeq	r6, r1, ip, lsr #24
   117a0:	strdeq	r5, [r0], -r0
   117a4:	andeq	r5, r0, ip, asr #3
   117a8:	andeq	r0, r0, r0, lsr #2
   117ac:	andeq	r5, r0, r8, lsr #9
   117b0:	andeq	r5, r0, r8, lsl #5
   117b4:	andeq	r5, r0, r8, lsl r1
   117b8:	andeq	r5, r0, r0, lsl r2
   117bc:	andeq	r5, r0, r0, asr #8
   117c0:	andeq	r5, r0, r4, asr #3
   117c4:	andeq	r5, r0, r0, asr #3
   117c8:	andeq	r5, r0, r0, asr #2
   117cc:	mov	fp, #0
   117d0:	mov	lr, #0
   117d4:	pop	{r1}		; (ldr r1, [sp], #4)
   117d8:	mov	r2, sp
   117dc:	push	{r2}		; (str r2, [sp, #-4]!)
   117e0:	push	{r0}		; (str r0, [sp, #-4]!)
   117e4:	ldr	ip, [pc, #16]	; 117fc <close@plt+0x5b8>
   117e8:	push	{ip}		; (str ip, [sp, #-4]!)
   117ec:	ldr	r0, [pc, #12]	; 11800 <close@plt+0x5bc>
   117f0:	ldr	r3, [pc, #12]	; 11804 <close@plt+0x5c0>
   117f4:	bl	11118 <__libc_start_main@plt>
   117f8:	bl	11238 <abort@plt>
   117fc:	andeq	r5, r1, r0, asr r1
   11800:	andeq	r1, r1, r0, asr r2
   11804:	andeq	r5, r1, ip, ror #1
   11808:	ldr	r3, [pc, #20]	; 11824 <close@plt+0x5e0>
   1180c:	ldr	r2, [pc, #20]	; 11828 <close@plt+0x5e4>
   11810:	add	r3, pc, r3
   11814:	ldr	r2, [r3, r2]
   11818:	cmp	r2, #0
   1181c:	bxeq	lr
   11820:	b	11130 <__gmon_start__@plt>
   11824:	andeq	r6, r1, r8, ror #15
   11828:	andeq	r0, r0, r8, lsl r1
   1182c:	push	{r3, lr}
   11830:	movw	r0, #33160	; 0x8188
   11834:	ldr	r3, [pc, #36]	; 11860 <close@plt+0x61c>
   11838:	movt	r0, #2
   1183c:	rsb	r3, r0, r3
   11840:	cmp	r3, #6
   11844:	popls	{r3, pc}
   11848:	movw	r3, #0
   1184c:	movt	r3, #0
   11850:	cmp	r3, #0
   11854:	popeq	{r3, pc}
   11858:	blx	r3
   1185c:	pop	{r3, pc}
   11860:	andeq	r8, r2, fp, lsl #3
   11864:	push	{r3, lr}
   11868:	movw	r0, #33160	; 0x8188
   1186c:	movw	r3, #33160	; 0x8188
   11870:	movt	r0, #2
   11874:	movt	r3, #2
   11878:	rsb	r3, r0, r3
   1187c:	asr	r3, r3, #2
   11880:	add	r3, r3, r3, lsr #31
   11884:	asrs	r1, r3, #1
   11888:	popeq	{r3, pc}
   1188c:	movw	r2, #0
   11890:	movt	r2, #0
   11894:	cmp	r2, #0
   11898:	popeq	{r3, pc}
   1189c:	blx	r2
   118a0:	pop	{r3, pc}
   118a4:	push	{r4, lr}
   118a8:	movw	r4, #33160	; 0x8188
   118ac:	movt	r4, #2
   118b0:	ldrb	r3, [r4]
   118b4:	cmp	r3, #0
   118b8:	popne	{r4, pc}
   118bc:	bl	1182c <close@plt+0x5e8>
   118c0:	mov	r3, #1
   118c4:	strb	r3, [r4]
   118c8:	pop	{r4, pc}
   118cc:	movw	r0, #32048	; 0x7d30
   118d0:	movt	r0, #2
   118d4:	push	{r3, lr}
   118d8:	ldr	r3, [r0]
   118dc:	cmp	r3, #0
   118e0:	beq	118f8 <close@plt+0x6b4>
   118e4:	movw	r3, #0
   118e8:	movt	r3, #0
   118ec:	cmp	r3, #0
   118f0:	beq	118f8 <close@plt+0x6b4>
   118f4:	blx	r3
   118f8:	pop	{r3, lr}
   118fc:	b	11864 <close@plt+0x620>
   11900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11904:	sub	sp, sp, #12
   11908:	ldrb	r3, [r0]
   1190c:	cmp	r3, #0
   11910:	beq	11a78 <close@plt+0x834>
   11914:	ldr	r7, [pc, #452]	; 11ae0 <close@plt+0x89c>
   11918:	sub	r5, r0, #1
   1191c:	ldr	r2, [pc, #448]	; 11ae4 <close@plt+0x8a0>
   11920:	mov	sl, #1
   11924:	ldr	r6, [pc, #444]	; 11ae8 <close@plt+0x8a4>
   11928:	add	r7, pc, r7
   1192c:	ldr	r9, [pc, #440]	; 11aec <close@plt+0x8a8>
   11930:	add	r2, pc, r2
   11934:	ldr	fp, [pc, #436]	; 11af0 <close@plt+0x8ac>
   11938:	add	r6, pc, r6
   1193c:	ldr	r8, [pc, #432]	; 11af4 <close@plt+0x8b0>
   11940:	add	r9, pc, r9
   11944:	str	r2, [sp, #4]
   11948:	add	fp, pc, fp
   1194c:	add	r8, pc, r8
   11950:	b	119cc <close@plt+0x788>
   11954:	cmp	r3, #39	; 0x27
   11958:	beq	11a10 <close@plt+0x7cc>
   1195c:	cmp	r3, #58	; 0x3a
   11960:	bne	119f0 <close@plt+0x7ac>
   11964:	cmp	sl, #0
   11968:	beq	119f0 <close@plt+0x7ac>
   1196c:	ldr	r3, [r7, #12]
   11970:	ldr	r0, [r7, #16]
   11974:	add	r1, r3, #1
   11978:	cmp	r1, r0
   1197c:	bhi	11ac8 <close@plt+0x884>
   11980:	ldr	r2, [sp, #4]
   11984:	str	r1, [r2, #12]
   11988:	mov	r1, #92	; 0x5c
   1198c:	strb	r1, [r3]
   11990:	ldr	r4, [pc, #352]	; 11af8 <close@plt+0x8b4>
   11994:	add	r4, pc, r4
   11998:	ldr	r3, [r4, #12]
   1199c:	ldr	r0, [r4, #16]
   119a0:	add	r1, r3, #1
   119a4:	cmp	r1, r0
   119a8:	bhi	119f8 <close@plt+0x7b4>
   119ac:	ldr	r0, [pc, #328]	; 11afc <close@plt+0x8b8>
   119b0:	add	r0, pc, r0
   119b4:	str	r1, [r0, #12]
   119b8:	ldrb	r1, [r5, #1]!
   119bc:	strb	r1, [r3]
   119c0:	ldrb	r3, [r5, #1]
   119c4:	cmp	r3, #0
   119c8:	beq	11a78 <close@plt+0x834>
   119cc:	cmp	r3, #61	; 0x3d
   119d0:	beq	11964 <close@plt+0x720>
   119d4:	bls	11954 <close@plt+0x710>
   119d8:	cmp	r3, #92	; 0x5c
   119dc:	beq	119e8 <close@plt+0x7a4>
   119e0:	cmp	r3, #94	; 0x5e
   119e4:	bne	119f0 <close@plt+0x7ac>
   119e8:	eor	sl, sl, #1
   119ec:	b	11990 <close@plt+0x74c>
   119f0:	mov	sl, #1
   119f4:	b	11990 <close@plt+0x74c>
   119f8:	mov	r1, #1
   119fc:	mov	r0, r4
   11a00:	bl	11028 <_obstack_newchunk@plt>
   11a04:	ldr	r3, [r4, #12]
   11a08:	add	r1, r3, #1
   11a0c:	b	119ac <close@plt+0x768>
   11a10:	ldr	r3, [r6, #12]
   11a14:	ldr	r0, [r6, #16]
   11a18:	add	r1, r3, #1
   11a1c:	cmp	r1, r0
   11a20:	bhi	11ab0 <close@plt+0x86c>
   11a24:	str	r1, [r9, #12]
   11a28:	mov	r1, #39	; 0x27
   11a2c:	strb	r1, [r3]
   11a30:	ldr	r3, [r9, #12]
   11a34:	ldr	r0, [r9, #16]
   11a38:	add	r1, r3, #1
   11a3c:	cmp	r1, r0
   11a40:	bhi	11a98 <close@plt+0x854>
   11a44:	str	r1, [fp, #12]
   11a48:	mov	r1, #92	; 0x5c
   11a4c:	strb	r1, [r3]
   11a50:	ldr	r3, [fp, #12]
   11a54:	ldr	r0, [fp, #16]
   11a58:	add	r1, r3, #1
   11a5c:	cmp	r1, r0
   11a60:	bhi	11a80 <close@plt+0x83c>
   11a64:	str	r1, [r8, #12]
   11a68:	mov	sl, #1
   11a6c:	mov	r1, #39	; 0x27
   11a70:	strb	r1, [r3]
   11a74:	b	11990 <close@plt+0x74c>
   11a78:	add	sp, sp, #12
   11a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a80:	mov	r1, #1
   11a84:	mov	r0, fp
   11a88:	bl	11028 <_obstack_newchunk@plt>
   11a8c:	ldr	r3, [fp, #12]
   11a90:	add	r1, r3, #1
   11a94:	b	11a64 <close@plt+0x820>
   11a98:	mov	r1, #1
   11a9c:	mov	r0, r9
   11aa0:	bl	11028 <_obstack_newchunk@plt>
   11aa4:	ldr	r3, [r9, #12]
   11aa8:	add	r1, r3, #1
   11aac:	b	11a44 <close@plt+0x800>
   11ab0:	mov	r1, #1
   11ab4:	mov	r0, r6
   11ab8:	bl	11028 <_obstack_newchunk@plt>
   11abc:	ldr	r3, [r6, #12]
   11ac0:	add	r1, r3, #1
   11ac4:	b	11a24 <close@plt+0x7e0>
   11ac8:	mov	r1, #1
   11acc:	mov	r0, r7
   11ad0:	bl	11028 <_obstack_newchunk@plt>
   11ad4:	ldr	r3, [r7, #12]
   11ad8:	add	r1, r3, #1
   11adc:	b	11980 <close@plt+0x73c>
   11ae0:	andeq	r6, r1, ip, asr r8
   11ae4:	andeq	r6, r1, r4, asr r8
   11ae8:	andeq	r6, r1, ip, asr #16
   11aec:	andeq	r6, r1, r4, asr #16
   11af0:	andeq	r6, r1, ip, lsr r8
   11af4:	andeq	r6, r1, r8, lsr r8
   11af8:	strdeq	r6, [r1], -r0
   11afc:	ldrdeq	r6, [r1], -r4
   11b00:	ldr	r2, [pc, #1680]	; 12198 <close@plt+0xf54>
   11b04:	mov	r3, #0
   11b08:	ldr	ip, [pc, #1676]	; 1219c <close@plt+0xf58>
   11b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b10:	add	r2, pc, r2
   11b14:	sub	sp, sp, #60	; 0x3c
   11b18:	mov	r7, r0
   11b1c:	ldr	r0, [pc, #1660]	; 121a0 <close@plt+0xf5c>
   11b20:	str	r1, [sp, #16]
   11b24:	ldr	ip, [r2, ip]
   11b28:	add	r0, pc, r0
   11b2c:	str	r3, [sp, #44]	; 0x2c
   11b30:	str	r3, [sp, #48]	; 0x30
   11b34:	ldr	r3, [ip]
   11b38:	str	ip, [sp, #28]
   11b3c:	str	r3, [sp, #52]	; 0x34
   11b40:	bl	110f4 <getenv@plt>
   11b44:	cmp	r0, #0
   11b48:	str	r0, [sp, #8]
   11b4c:	beq	12184 <close@plt+0xf40>
   11b50:	ldrb	r3, [r0]
   11b54:	cmp	r3, #0
   11b58:	beq	120d0 <close@plt+0xe8c>
   11b5c:	ldr	r3, [pc, #1600]	; 121a4 <close@plt+0xf60>
   11b60:	mov	r1, #1
   11b64:	ldr	r9, [pc, #1596]	; 121a8 <close@plt+0xf64>
   11b68:	mov	r8, #3
   11b6c:	add	r3, pc, r3
   11b70:	ldr	r2, [pc, #1588]	; 121ac <close@plt+0xf68>
   11b74:	add	r3, r3, #4480	; 0x1180
   11b78:	str	r3, [sp, #12]
   11b7c:	add	r2, pc, r2
   11b80:	str	r1, [sp, #20]
   11b84:	str	r2, [sp, #32]
   11b88:	add	r9, pc, r9
   11b8c:	ldr	r1, [sp, #12]
   11b90:	mov	r6, #0
   11b94:	ldr	r3, [pc, #1556]	; 121b0 <close@plt+0xf6c>
   11b98:	ldr	r2, [pc, #1556]	; 121b4 <close@plt+0xf70>
   11b9c:	add	r1, r1, #58	; 0x3a
   11ba0:	add	r3, pc, r3
   11ba4:	str	r1, [sp, #12]
   11ba8:	add	r2, pc, r2
   11bac:	str	r3, [sp, #24]
   11bb0:	str	r2, [sp, #36]	; 0x24
   11bb4:	cmp	r7, #0
   11bb8:	add	r6, r6, #1
   11bbc:	beq	11d44 <close@plt+0xb00>
   11bc0:	add	r0, sp, #44	; 0x2c
   11bc4:	add	r1, sp, #48	; 0x30
   11bc8:	mov	r2, #10
   11bcc:	mov	r3, r7
   11bd0:	bl	10fbc <__getdelim@plt>
   11bd4:	cmp	r0, #0
   11bd8:	ble	12018 <close@plt+0xdd4>
   11bdc:	ldr	r4, [sp, #44]	; 0x2c
   11be0:	bl	11154 <__ctype_b_loc@plt>
   11be4:	mov	r1, r4
   11be8:	ldr	r5, [r0]
   11bec:	mov	sl, r0
   11bf0:	mov	r0, r1
   11bf4:	add	r1, r1, #1
   11bf8:	ldrb	r3, [r0]
   11bfc:	lsl	r2, r3, #1
   11c00:	ldrh	r2, [r5, r2]
   11c04:	tst	r2, #8192	; 0x2000
   11c08:	bne	11bf0 <close@plt+0x9ac>
   11c0c:	cmp	r3, #0
   11c10:	cmpne	r3, #35	; 0x23
   11c14:	bne	11c24 <close@plt+0x9e0>
   11c18:	b	11bb4 <close@plt+0x970>
   11c1c:	cmp	r3, #0
   11c20:	beq	11c40 <close@plt+0x9fc>
   11c24:	mov	r4, r1
   11c28:	add	r1, r1, #1
   11c2c:	ldrb	r3, [r4]
   11c30:	lsl	r2, r3, #1
   11c34:	ldrh	r2, [r5, r2]
   11c38:	tst	r2, #8192	; 0x2000
   11c3c:	beq	11c1c <close@plt+0x9d8>
   11c40:	rsb	r1, r0, r4
   11c44:	bl	14874 <close_stdout@@Base+0x23d4>
   11c48:	ldrb	r3, [r4]
   11c4c:	cmp	r3, #0
   11c50:	mov	r5, r0
   11c54:	beq	11fd4 <close@plt+0xd90>
   11c58:	ldr	r0, [sl]
   11c5c:	add	r4, r4, #1
   11c60:	mov	r3, r4
   11c64:	add	r4, r4, #1
   11c68:	ldrb	r2, [r3]
   11c6c:	lsl	r1, r2, #1
   11c70:	ldrh	r1, [r0, r1]
   11c74:	tst	r1, #8192	; 0x2000
   11c78:	bne	11c60 <close@plt+0xa1c>
   11c7c:	cmp	r2, #0
   11c80:	cmpne	r2, #35	; 0x23
   11c84:	beq	11fd4 <close@plt+0xd90>
   11c88:	mov	r1, r4
   11c8c:	ldrb	r2, [r4], #1
   11c90:	cmp	r2, #35	; 0x23
   11c94:	cmpne	r2, #0
   11c98:	bne	11c88 <close@plt+0xa44>
   11c9c:	ldrb	ip, [r1, #-1]
   11ca0:	sub	r2, r1, #1
   11ca4:	lsl	ip, ip, #1
   11ca8:	ldrh	ip, [r0, ip]
   11cac:	tst	ip, #8192	; 0x2000
   11cb0:	beq	11cd0 <close@plt+0xa8c>
   11cb4:	sub	r1, r1, #2
   11cb8:	mov	r2, r1
   11cbc:	ldrb	ip, [r1], #-1
   11cc0:	lsl	ip, ip, #1
   11cc4:	ldrh	ip, [r0, ip]
   11cc8:	tst	ip, #8192	; 0x2000
   11ccc:	bne	11cb8 <close@plt+0xa74>
   11cd0:	add	r1, r2, #1
   11cd4:	mov	r0, r3
   11cd8:	rsb	r1, r3, r1
   11cdc:	bl	14874 <close_stdout@@Base+0x23d4>
   11ce0:	cmp	r5, #0
   11ce4:	mov	r4, r0
   11ce8:	beq	11bb4 <close@plt+0x970>
   11cec:	cmp	r0, #0
   11cf0:	beq	11fdc <close@plt+0xd98>
   11cf4:	ldr	r1, [pc, #1212]	; 121b8 <close@plt+0xf74>
   11cf8:	mov	r0, r5
   11cfc:	add	r1, pc, r1
   11d00:	bl	12408 <close@plt+0x11c4>
   11d04:	cmp	r0, #0
   11d08:	bne	11d68 <close@plt+0xb24>
   11d0c:	mov	r0, r4
   11d10:	ldr	r1, [sp, #8]
   11d14:	bl	10fc8 <strcmp@plt>
   11d18:	cmp	r8, #2
   11d1c:	movne	r8, #0
   11d20:	cmp	r0, #0
   11d24:	moveq	r8, #2
   11d28:	mov	r0, r5
   11d2c:	add	r6, r6, #1
   11d30:	bl	10fe0 <free@plt>
   11d34:	mov	r0, r4
   11d38:	bl	10fe0 <free@plt>
   11d3c:	cmp	r7, #0
   11d40:	bne	11bc0 <close@plt+0x97c>
   11d44:	ldr	r3, [sp, #12]
   11d48:	cmp	r9, r3
   11d4c:	beq	12020 <close@plt+0xddc>
   11d50:	mov	r0, r9
   11d54:	mov	r4, r9
   11d58:	bl	1116c <strlen@plt>
   11d5c:	add	r0, r0, #1
   11d60:	add	r9, r9, r0
   11d64:	b	11be0 <close@plt+0x99c>
   11d68:	cmp	r8, #2
   11d6c:	beq	11f08 <close@plt+0xcc4>
   11d70:	cmp	r8, #0
   11d74:	beq	11d28 <close@plt+0xae4>
   11d78:	ldrb	r3, [r5]
   11d7c:	cmp	r3, #46	; 0x2e
   11d80:	beq	11f18 <close@plt+0xcd4>
   11d84:	cmp	r3, #42	; 0x2a
   11d88:	mov	r0, r5
   11d8c:	beq	12040 <close@plt+0xdfc>
   11d90:	ldr	r1, [pc, #1060]	; 121bc <close@plt+0xf78>
   11d94:	add	r1, pc, r1
   11d98:	bl	12408 <close@plt+0x11c4>
   11d9c:	cmp	r0, #0
   11da0:	beq	11d28 <close@plt+0xae4>
   11da4:	ldr	r1, [pc, #1044]	; 121c0 <close@plt+0xf7c>
   11da8:	mov	r0, r5
   11dac:	add	r1, pc, r1
   11db0:	bl	12408 <close@plt+0x11c4>
   11db4:	cmp	r0, #0
   11db8:	beq	11d28 <close@plt+0xae4>
   11dbc:	ldr	r1, [pc, #1024]	; 121c4 <close@plt+0xf80>
   11dc0:	mov	r0, r5
   11dc4:	add	r1, pc, r1
   11dc8:	bl	12408 <close@plt+0x11c4>
   11dcc:	cmp	r0, #0
   11dd0:	beq	11d28 <close@plt+0xae4>
   11dd4:	ldr	fp, [pc, #1004]	; 121c8 <close@plt+0xf84>
   11dd8:	mov	sl, #0
   11ddc:	ldr	r1, [pc, #1000]	; 121cc <close@plt+0xf88>
   11de0:	add	fp, pc, fp
   11de4:	add	r1, pc, r1
   11de8:	b	11dfc <close@plt+0xbb8>
   11dec:	ldr	r1, [fp, #4]!
   11df0:	add	sl, sl, #1
   11df4:	cmp	r1, #0
   11df8:	beq	120e0 <close@plt+0xe9c>
   11dfc:	mov	r0, r5
   11e00:	bl	12408 <close@plt+0x11c4>
   11e04:	cmp	r0, #0
   11e08:	bne	11dec <close@plt+0xba8>
   11e0c:	ldr	r2, [sp, #32]
   11e10:	ldr	r3, [r2, #12]
   11e14:	ldr	r2, [r2, #16]
   11e18:	add	r3, r3, #1
   11e1c:	cmp	r2, r3
   11e20:	bcs	11e30 <close@plt+0xbec>
   11e24:	ldr	r0, [sp, #32]
   11e28:	mov	r1, #1
   11e2c:	bl	11028 <_obstack_newchunk@plt>
   11e30:	ldr	r1, [sp, #36]	; 0x24
   11e34:	ldr	r2, [sp, #24]
   11e38:	add	sl, r1, sl, lsl #2
   11e3c:	ldr	r1, [sp, #24]
   11e40:	ldr	sl, [sl, #152]	; 0x98
   11e44:	ldr	r3, [r2, #12]
   11e48:	add	r2, r3, #1
   11e4c:	str	r2, [r1, #12]
   11e50:	ldrb	r2, [sl]
   11e54:	strb	r2, [r3]
   11e58:	ldr	r3, [r1, #12]
   11e5c:	ldr	r2, [r1, #16]
   11e60:	add	r3, r3, #1
   11e64:	cmp	r2, r3
   11e68:	bcs	11e78 <close@plt+0xc34>
   11e6c:	ldr	r0, [sp, #24]
   11e70:	mov	r1, #1
   11e74:	bl	11028 <_obstack_newchunk@plt>
   11e78:	ldr	r0, [pc, #848]	; 121d0 <close@plt+0xf8c>
   11e7c:	add	r0, pc, r0
   11e80:	ldr	r3, [r0, #12]
   11e84:	add	r2, r3, #1
   11e88:	str	r2, [r0, #12]
   11e8c:	ldrb	r2, [sl, #1]
   11e90:	strb	r2, [r3]
   11e94:	ldr	r3, [r0, #12]
   11e98:	ldr	r2, [r0, #16]
   11e9c:	add	r3, r3, #1
   11ea0:	cmp	r2, r3
   11ea4:	bcs	11eb0 <close@plt+0xc6c>
   11ea8:	mov	r1, #1
   11eac:	bl	11028 <_obstack_newchunk@plt>
   11eb0:	ldr	sl, [pc, #796]	; 121d4 <close@plt+0xf90>
   11eb4:	mov	r2, #61	; 0x3d
   11eb8:	mov	r0, r4
   11ebc:	add	sl, pc, sl
   11ec0:	ldr	r3, [sl, #12]
   11ec4:	add	r1, r3, #1
   11ec8:	str	r1, [sl, #12]
   11ecc:	strb	r2, [r3]
   11ed0:	bl	11900 <close@plt+0x6bc>
   11ed4:	ldr	r3, [sl, #12]
   11ed8:	ldr	r2, [sl, #16]
   11edc:	add	r3, r3, #1
   11ee0:	cmp	r2, r3
   11ee4:	bcc	12174 <close@plt+0xf30>
   11ee8:	ldr	r2, [pc, #744]	; 121d8 <close@plt+0xf94>
   11eec:	mov	r1, #58	; 0x3a
   11ef0:	add	r2, pc, r2
   11ef4:	ldr	r3, [r2, #12]
   11ef8:	add	r0, r3, #1
   11efc:	str	r0, [r2, #12]
   11f00:	strb	r1, [r3]
   11f04:	b	11d28 <close@plt+0xae4>
   11f08:	ldrb	r3, [r5]
   11f0c:	mov	r8, #1
   11f10:	cmp	r3, #46	; 0x2e
   11f14:	bne	11d84 <close@plt+0xb40>
   11f18:	ldr	sl, [pc, #700]	; 121dc <close@plt+0xf98>
   11f1c:	add	sl, pc, sl
   11f20:	ldr	r3, [sl, #12]
   11f24:	ldr	r1, [sl, #16]
   11f28:	add	r2, r3, #1
   11f2c:	cmp	r2, r1
   11f30:	bls	11f48 <close@plt+0xd04>
   11f34:	mov	r0, sl
   11f38:	mov	r1, #1
   11f3c:	bl	11028 <_obstack_newchunk@plt>
   11f40:	ldr	r3, [sl, #12]
   11f44:	add	r2, r3, #1
   11f48:	ldr	sl, [pc, #656]	; 121e0 <close@plt+0xf9c>
   11f4c:	mov	r1, #42	; 0x2a
   11f50:	mov	r0, r5
   11f54:	add	sl, pc, sl
   11f58:	str	r2, [sl, #12]
   11f5c:	strb	r1, [r3]
   11f60:	bl	11900 <close@plt+0x6bc>
   11f64:	ldr	r3, [sl, #12]
   11f68:	ldr	r1, [sl, #16]
   11f6c:	add	r2, r3, #1
   11f70:	cmp	r2, r1
   11f74:	bls	11f8c <close@plt+0xd48>
   11f78:	mov	r0, sl
   11f7c:	mov	r1, #1
   11f80:	bl	11028 <_obstack_newchunk@plt>
   11f84:	ldr	r3, [sl, #12]
   11f88:	add	r2, r3, #1
   11f8c:	ldr	sl, [pc, #592]	; 121e4 <close@plt+0xfa0>
   11f90:	mov	r1, #61	; 0x3d
   11f94:	mov	r0, r4
   11f98:	add	sl, pc, sl
   11f9c:	str	r2, [sl, #12]
   11fa0:	strb	r1, [r3]
   11fa4:	bl	11900 <close@plt+0x6bc>
   11fa8:	ldr	r3, [sl, #12]
   11fac:	ldr	r1, [sl, #16]
   11fb0:	add	r2, r3, #1
   11fb4:	cmp	r2, r1
   11fb8:	bhi	120b8 <close@plt+0xe74>
   11fbc:	ldr	r0, [pc, #548]	; 121e8 <close@plt+0xfa4>
   11fc0:	mov	r1, #58	; 0x3a
   11fc4:	add	r0, pc, r0
   11fc8:	str	r2, [r0, #12]
   11fcc:	strb	r1, [r3]
   11fd0:	b	11d28 <close@plt+0xae4>
   11fd4:	cmp	r5, #0
   11fd8:	beq	11bb4 <close@plt+0x970>
   11fdc:	ldr	r1, [pc, #520]	; 121ec <close@plt+0xfa8>
   11fe0:	mov	r0, #0
   11fe4:	mov	r2, #5
   11fe8:	str	r0, [sp, #20]
   11fec:	add	r1, pc, r1
   11ff0:	bl	11034 <dcgettext@plt>
   11ff4:	str	r6, [sp]
   11ff8:	ldr	r3, [sp, #16]
   11ffc:	mov	r2, r0
   12000:	mov	r0, #0
   12004:	mov	r1, r0
   12008:	bl	110dc <error@plt>
   1200c:	mov	r0, r5
   12010:	bl	10fe0 <free@plt>
   12014:	b	11bb4 <close@plt+0x970>
   12018:	ldr	r0, [sp, #44]	; 0x2c
   1201c:	bl	10fe0 <free@plt>
   12020:	ldr	r1, [sp, #28]
   12024:	ldr	r2, [sp, #52]	; 0x34
   12028:	ldr	r0, [sp, #20]
   1202c:	ldr	r3, [r1]
   12030:	cmp	r2, r3
   12034:	bne	12194 <close@plt+0xf50>
   12038:	add	sp, sp, #60	; 0x3c
   1203c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12040:	bl	11900 <close@plt+0x6bc>
   12044:	ldr	r0, [pc, #420]	; 121f0 <close@plt+0xfac>
   12048:	add	r0, pc, r0
   1204c:	ldr	r3, [r0, #12]
   12050:	ldr	r2, [r0, #16]
   12054:	add	r3, r3, #1
   12058:	cmp	r2, r3
   1205c:	bcs	12068 <close@plt+0xe24>
   12060:	mov	r1, #1
   12064:	bl	11028 <_obstack_newchunk@plt>
   12068:	ldr	sl, [pc, #388]	; 121f4 <close@plt+0xfb0>
   1206c:	mov	r2, #61	; 0x3d
   12070:	mov	r0, r4
   12074:	add	sl, pc, sl
   12078:	ldr	r3, [sl, #12]
   1207c:	add	r1, r3, #1
   12080:	str	r1, [sl, #12]
   12084:	strb	r2, [r3]
   12088:	bl	11900 <close@plt+0x6bc>
   1208c:	ldr	r3, [sl, #12]
   12090:	ldr	r1, [sl, #16]
   12094:	add	r2, r3, #1
   12098:	cmp	r2, r1
   1209c:	bhi	1215c <close@plt+0xf18>
   120a0:	ldr	r0, [pc, #336]	; 121f8 <close@plt+0xfb4>
   120a4:	mov	r1, #58	; 0x3a
   120a8:	add	r0, pc, r0
   120ac:	str	r2, [r0, #12]
   120b0:	strb	r1, [r3]
   120b4:	b	11d28 <close@plt+0xae4>
   120b8:	mov	r0, sl
   120bc:	mov	r1, #1
   120c0:	bl	11028 <_obstack_newchunk@plt>
   120c4:	ldr	r3, [sl, #12]
   120c8:	add	r2, r3, #1
   120cc:	b	11fbc <close@plt+0xd78>
   120d0:	ldr	r2, [pc, #292]	; 121fc <close@plt+0xfb8>
   120d4:	add	r2, pc, r2
   120d8:	str	r2, [sp, #8]
   120dc:	b	11b5c <close@plt+0x918>
   120e0:	sub	r3, r8, #1
   120e4:	cmp	r3, #1
   120e8:	bhi	11d28 <close@plt+0xae4>
   120ec:	mov	r0, r1
   120f0:	ldr	r1, [pc, #264]	; 12200 <close@plt+0xfbc>
   120f4:	mov	r2, #5
   120f8:	add	r1, pc, r1
   120fc:	bl	11034 <dcgettext@plt>
   12100:	ldr	r2, [sp, #16]
   12104:	cmp	r2, #0
   12108:	mov	sl, r0
   1210c:	beq	12140 <close@plt+0xefc>
   12110:	mov	r0, r2
   12114:	bl	1405c <close_stdout@@Base+0x1bbc>
   12118:	mov	r3, r0
   1211c:	mov	r0, #0
   12120:	str	r6, [sp]
   12124:	str	r5, [sp, #4]
   12128:	mov	r2, sl
   1212c:	mov	r1, r0
   12130:	bl	110dc <error@plt>
   12134:	mov	r3, #0
   12138:	str	r3, [sp, #20]
   1213c:	b	11d28 <close@plt+0xae4>
   12140:	ldr	r1, [pc, #188]	; 12204 <close@plt+0xfc0>
   12144:	mov	r2, #5
   12148:	ldr	r0, [sp, #16]
   1214c:	add	r1, pc, r1
   12150:	bl	11034 <dcgettext@plt>
   12154:	mov	r3, r0
   12158:	b	1211c <close@plt+0xed8>
   1215c:	mov	r0, sl
   12160:	mov	r1, #1
   12164:	bl	11028 <_obstack_newchunk@plt>
   12168:	ldr	r3, [sl, #12]
   1216c:	add	r2, r3, #1
   12170:	b	120a0 <close@plt+0xe5c>
   12174:	mov	r0, sl
   12178:	mov	r1, #1
   1217c:	bl	11028 <_obstack_newchunk@plt>
   12180:	b	11ee8 <close@plt+0xca4>
   12184:	ldr	r3, [pc, #124]	; 12208 <close@plt+0xfc4>
   12188:	add	r3, pc, r3
   1218c:	str	r3, [sp, #8]
   12190:	b	11b5c <close@plt+0x918>
   12194:	bl	11040 <__stack_chk_fail@plt>
   12198:	andeq	r6, r1, r8, ror #9
   1219c:	andeq	r0, r0, r0, lsl #2
   121a0:	andeq	r4, r0, ip, lsr #16
   121a4:	andeq	r3, r0, ip, lsl r6
   121a8:	andeq	r3, r0, r0, lsl #12
   121ac:	andeq	r6, r1, r8, lsl #12
   121b0:	andeq	r6, r1, r4, ror #11
   121b4:	andeq	r6, r1, r4, lsl #3
   121b8:	andeq	r4, r0, r8, asr r6
   121bc:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   121c0:	andeq	r4, r0, r4, ror #11
   121c4:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   121c8:	andeq	r5, r1, ip, asr #30
   121cc:	andeq	r4, r0, r8, ror #10
   121d0:	andeq	r6, r1, r8, lsl #6
   121d4:	andeq	r6, r1, r8, asr #5
   121d8:	muleq	r1, r4, r2
   121dc:	andeq	r6, r1, r8, ror #4
   121e0:	andeq	r6, r1, r0, lsr r2
   121e4:	andeq	r6, r1, ip, ror #3
   121e8:	andeq	r6, r1, r0, asr #3
   121ec:	andeq	r4, r0, r0, ror r3
   121f0:	andeq	r6, r1, ip, lsr r1
   121f4:	andeq	r6, r1, r0, lsl r1
   121f8:	ldrdeq	r6, [r1], -ip
   121fc:	andeq	r4, r0, r0, ror r2
   12200:	andeq	r4, r0, ip, lsr #5
   12204:	andeq	r4, r0, r8, ror r2
   12208:			; <UNDEFINED> instruction: 0x000041bc
   1220c:	push	{r4, r5, r6, lr}
   12210:	subs	r4, r0, #0
   12214:	ldr	r5, [pc, #428]	; 123c8 <close@plt+0x1184>
   12218:	add	r5, pc, r5
   1221c:	beq	12264 <close@plt+0x1020>
   12220:	ldr	r3, [pc, #420]	; 123cc <close@plt+0x1188>
   12224:	mov	r2, #5
   12228:	ldr	r1, [pc, #416]	; 123d0 <close@plt+0x118c>
   1222c:	mov	r0, #0
   12230:	ldr	r3, [r5, r3]
   12234:	add	r1, pc, r1
   12238:	ldr	r6, [r3]
   1223c:	bl	11034 <dcgettext@plt>
   12240:	ldr	r3, [pc, #396]	; 123d4 <close@plt+0x1190>
   12244:	mov	r1, #1
   12248:	ldr	r3, [r5, r3]
   1224c:	ldr	r3, [r3]
   12250:	mov	r2, r0
   12254:	mov	r0, r6
   12258:	bl	111cc <__fprintf_chk@plt>
   1225c:	mov	r0, r4
   12260:	bl	11160 <exit@plt>
   12264:	ldr	r1, [pc, #364]	; 123d8 <close@plt+0x1194>
   12268:	mov	r2, #5
   1226c:	add	r1, pc, r1
   12270:	bl	11034 <dcgettext@plt>
   12274:	ldr	r3, [pc, #344]	; 123d4 <close@plt+0x1190>
   12278:	ldr	r6, [r5, r3]
   1227c:	ldr	r2, [r6]
   12280:	mov	r1, r0
   12284:	mov	r0, #1
   12288:	bl	111b4 <__printf_chk@plt>
   1228c:	ldr	r1, [pc, #328]	; 123dc <close@plt+0x1198>
   12290:	mov	r2, #5
   12294:	mov	r0, r4
   12298:	add	r1, pc, r1
   1229c:	bl	11034 <dcgettext@plt>
   122a0:	ldr	r3, [pc, #312]	; 123e0 <close@plt+0x119c>
   122a4:	ldr	r5, [r5, r3]
   122a8:	ldr	r1, [r5]
   122ac:	bl	10fa4 <fputs_unlocked@plt>
   122b0:	ldr	r1, [pc, #300]	; 123e4 <close@plt+0x11a0>
   122b4:	mov	r2, #5
   122b8:	mov	r0, r4
   122bc:	add	r1, pc, r1
   122c0:	bl	11034 <dcgettext@plt>
   122c4:	ldr	r1, [r5]
   122c8:	bl	10fa4 <fputs_unlocked@plt>
   122cc:	ldr	r1, [pc, #276]	; 123e8 <close@plt+0x11a4>
   122d0:	mov	r2, #5
   122d4:	mov	r0, r4
   122d8:	add	r1, pc, r1
   122dc:	bl	11034 <dcgettext@plt>
   122e0:	ldr	r1, [r5]
   122e4:	bl	10fa4 <fputs_unlocked@plt>
   122e8:	ldr	r1, [pc, #252]	; 123ec <close@plt+0x11a8>
   122ec:	mov	r2, #5
   122f0:	mov	r0, r4
   122f4:	add	r1, pc, r1
   122f8:	bl	11034 <dcgettext@plt>
   122fc:	ldr	r1, [r5]
   12300:	bl	10fa4 <fputs_unlocked@plt>
   12304:	ldr	r1, [pc, #228]	; 123f0 <close@plt+0x11ac>
   12308:	mov	r2, #5
   1230c:	mov	r0, r4
   12310:	add	r1, pc, r1
   12314:	bl	11034 <dcgettext@plt>
   12318:	ldr	r2, [pc, #212]	; 123f4 <close@plt+0x11b0>
   1231c:	ldr	r3, [pc, #212]	; 123f8 <close@plt+0x11b4>
   12320:	add	r2, pc, r2
   12324:	add	r3, pc, r3
   12328:	mov	r1, r0
   1232c:	mov	r0, #1
   12330:	bl	111b4 <__printf_chk@plt>
   12334:	mov	r0, #5
   12338:	mov	r1, r4
   1233c:	bl	111fc <setlocale@plt>
   12340:	cmp	r0, #0
   12344:	beq	12360 <close@plt+0x111c>
   12348:	ldr	r1, [pc, #172]	; 123fc <close@plt+0x11b8>
   1234c:	mov	r2, #3
   12350:	add	r1, pc, r1
   12354:	bl	1122c <strncmp@plt>
   12358:	cmp	r0, #0
   1235c:	bne	12394 <close@plt+0x1150>
   12360:	ldr	r1, [pc, #152]	; 12400 <close@plt+0x11bc>
   12364:	mov	r2, #5
   12368:	mov	r0, #0
   1236c:	add	r1, pc, r1
   12370:	bl	11034 <dcgettext@plt>
   12374:	mov	r5, r0
   12378:	ldr	r0, [r6]
   1237c:	bl	125b8 <close_stdout@@Base+0x118>
   12380:	mov	r1, r5
   12384:	mov	r2, r0
   12388:	mov	r0, #1
   1238c:	bl	111b4 <__printf_chk@plt>
   12390:	b	1225c <close@plt+0x1018>
   12394:	ldr	r1, [pc, #104]	; 12404 <close@plt+0x11c0>
   12398:	mov	r2, #5
   1239c:	mov	r0, r4
   123a0:	add	r1, pc, r1
   123a4:	bl	11034 <dcgettext@plt>
   123a8:	mov	r5, r0
   123ac:	ldr	r0, [r6]
   123b0:	bl	125b8 <close_stdout@@Base+0x118>
   123b4:	mov	r1, r5
   123b8:	mov	r2, r0
   123bc:	mov	r0, #1
   123c0:	bl	111b4 <__printf_chk@plt>
   123c4:	b	12360 <close@plt+0x111c>
   123c8:	andeq	r5, r1, r0, ror #27
   123cc:	andeq	r0, r0, ip, lsl #2
   123d0:	muleq	r0, ip, r1
   123d4:	andeq	r0, r0, r0, lsr r1
   123d8:	andeq	r4, r0, ip, lsl #3
   123dc:	andeq	r4, r0, r0, lsl #3
   123e0:	andeq	r0, r0, r4, lsr #2
   123e4:	andeq	r4, r0, r0, ror r2
   123e8:	andeq	r4, r0, r4, lsl #5
   123ec:	andeq	r4, r0, r0, lsr #5
   123f0:	andeq	r4, r0, r4, ror #6
   123f4:	andeq	r4, r0, ip, ror #6
   123f8:	andeq	r4, r0, r8, ror r3
   123fc:	andeq	r4, r0, r4, ror r3
   12400:	andeq	r4, r0, r4, lsr #7
   12404:	andeq	r4, r0, r8, lsr #6
   12408:	cmp	r0, r1
   1240c:	push	{r4}		; (str r4, [sp, #-4]!)
   12410:	beq	1246c <close@plt+0x1228>
   12414:	sub	r4, r0, #1
   12418:	sub	r1, r1, #1
   1241c:	b	12428 <close@plt+0x11e4>
   12420:	cmp	r2, ip
   12424:	bne	12460 <close@plt+0x121c>
   12428:	ldrb	r3, [r4, #1]!
   1242c:	sub	r0, r3, #65	; 0x41
   12430:	add	r2, r3, #32
   12434:	cmp	r0, #25
   12438:	movhi	r2, r3
   1243c:	ldrb	r3, [r1, #1]!
   12440:	uxtb	r2, r2
   12444:	sub	r0, r3, #65	; 0x41
   12448:	add	ip, r3, #32
   1244c:	cmp	r0, #25
   12450:	movhi	ip, r3
   12454:	cmp	r2, #0
   12458:	uxtb	ip, ip
   1245c:	bne	12420 <close@plt+0x11dc>
   12460:	rsb	r0, ip, r2
   12464:	pop	{r4}		; (ldr r4, [sp], #4)
   12468:	bx	lr
   1246c:	mov	r0, #0
   12470:	pop	{r4}		; (ldr r4, [sp], #4)
   12474:	bx	lr
   12478:	ldr	r3, [pc, #8]	; 12488 <close@plt+0x1244>
   1247c:	add	r3, pc, r3
   12480:	str	r0, [r3]
   12484:	bx	lr
   12488:	andeq	r5, r1, r4, lsr sp
   1248c:	ldr	r3, [pc, #8]	; 1249c <close@plt+0x1258>
   12490:	add	r3, pc, r3
   12494:	strb	r0, [r3, #4]
   12498:	bx	lr
   1249c:	andeq	r5, r1, r0, lsr #26

000124a0 <close_stdout@@Base>:
   124a0:	push	{r4, r5, r6, r7, lr}
   124a4:	sub	sp, sp, #12
   124a8:	ldr	r4, [pc, #228]	; 12594 <close_stdout@@Base+0xf4>
   124ac:	ldr	r3, [pc, #228]	; 12598 <close_stdout@@Base+0xf8>
   124b0:	add	r4, pc, r4
   124b4:	ldr	r3, [r4, r3]
   124b8:	ldr	r0, [r3]
   124bc:	bl	14a30 <close_stdout@@Base+0x2590>
   124c0:	cmp	r0, #0
   124c4:	beq	124ec <close_stdout@@Base+0x4c>
   124c8:	ldr	r3, [pc, #204]	; 1259c <close_stdout@@Base+0xfc>
   124cc:	add	r3, pc, r3
   124d0:	ldrb	r3, [r3, #4]
   124d4:	cmp	r3, #0
   124d8:	beq	1250c <close_stdout@@Base+0x6c>
   124dc:	bl	11184 <__errno_location@plt>
   124e0:	ldr	r3, [r0]
   124e4:	cmp	r3, #32
   124e8:	bne	1250c <close_stdout@@Base+0x6c>
   124ec:	ldr	r3, [pc, #172]	; 125a0 <close_stdout@@Base+0x100>
   124f0:	ldr	r3, [r4, r3]
   124f4:	ldr	r0, [r3]
   124f8:	bl	14a30 <close_stdout@@Base+0x2590>
   124fc:	cmp	r0, #0
   12500:	bne	12560 <close_stdout@@Base+0xc0>
   12504:	add	sp, sp, #12
   12508:	pop	{r4, r5, r6, r7, pc}
   1250c:	ldr	r1, [pc, #144]	; 125a4 <close_stdout@@Base+0x104>
   12510:	mov	r0, #0
   12514:	mov	r2, #5
   12518:	add	r1, pc, r1
   1251c:	bl	11034 <dcgettext@plt>
   12520:	ldr	r3, [pc, #128]	; 125a8 <close_stdout@@Base+0x108>
   12524:	ldr	r5, [pc, r3]
   12528:	cmp	r5, #0
   1252c:	mov	r6, r0
   12530:	beq	12570 <close_stdout@@Base+0xd0>
   12534:	bl	11184 <__errno_location@plt>
   12538:	ldr	r7, [r0]
   1253c:	mov	r0, r5
   12540:	bl	13f08 <close_stdout@@Base+0x1a68>
   12544:	ldr	r2, [pc, #96]	; 125ac <close_stdout@@Base+0x10c>
   12548:	str	r6, [sp]
   1254c:	mov	r1, r7
   12550:	add	r2, pc, r2
   12554:	mov	r3, r0
   12558:	mov	r0, #0
   1255c:	bl	110dc <error@plt>
   12560:	ldr	r3, [pc, #72]	; 125b0 <close_stdout@@Base+0x110>
   12564:	ldr	r3, [r4, r3]
   12568:	ldr	r0, [r3]
   1256c:	bl	10fec <_exit@plt>
   12570:	bl	11184 <__errno_location@plt>
   12574:	ldr	r2, [pc, #56]	; 125b4 <close_stdout@@Base+0x114>
   12578:	add	r2, pc, r2
   1257c:	mov	r3, r0
   12580:	mov	r0, r5
   12584:	ldr	r1, [r3]
   12588:	mov	r3, r6
   1258c:	bl	110dc <error@plt>
   12590:	b	12560 <close_stdout@@Base+0xc0>
   12594:	andeq	r5, r1, r8, asr #22
   12598:	andeq	r0, r0, r4, lsr #2
   1259c:	andeq	r5, r1, r4, ror #25
   125a0:	andeq	r0, r0, ip, lsl #2
   125a4:	muleq	r0, r0, r5
   125a8:	andeq	r5, r1, ip, lsl #25
   125ac:	andeq	r4, r0, r4, ror #10
   125b0:	andeq	r0, r0, r8, lsr #2
   125b4:	andeq	r4, r0, r0, asr #10
   125b8:	ldrb	r3, [r0]
   125bc:	cmp	r3, #47	; 0x2f
   125c0:	bne	125dc <close_stdout@@Base+0x13c>
   125c4:	add	r2, r0, #1
   125c8:	mov	r0, r2
   125cc:	add	r2, r2, #1
   125d0:	ldrb	r3, [r0]
   125d4:	cmp	r3, #47	; 0x2f
   125d8:	beq	125c8 <close_stdout@@Base+0x128>
   125dc:	cmp	r3, #0
   125e0:	bxeq	lr
   125e4:	mov	r2, r0
   125e8:	mov	r1, #0
   125ec:	cmp	r3, #47	; 0x2f
   125f0:	moveq	r1, #1
   125f4:	beq	12604 <close_stdout@@Base+0x164>
   125f8:	cmp	r1, #0
   125fc:	movne	r0, r2
   12600:	movne	r1, #0
   12604:	ldrb	r3, [r2, #1]!
   12608:	cmp	r3, #0
   1260c:	bne	125ec <close_stdout@@Base+0x14c>
   12610:	bx	lr
   12614:	push	{r4, lr}
   12618:	mov	r4, r0
   1261c:	bl	1116c <strlen@plt>
   12620:	cmp	r0, #1
   12624:	popls	{r4, pc}
   12628:	sub	r3, r0, #1
   1262c:	ldrb	r2, [r4, r3]
   12630:	cmp	r2, #47	; 0x2f
   12634:	popne	{r4, pc}
   12638:	mov	r0, r3
   1263c:	cmp	r0, #1
   12640:	sub	r3, r3, #1
   12644:	beq	12658 <close_stdout@@Base+0x1b8>
   12648:	ldrb	r2, [r4, r3]
   1264c:	cmp	r2, #47	; 0x2f
   12650:	popne	{r4, pc}
   12654:	b	12638 <close_stdout@@Base+0x198>
   12658:	pop	{r4, pc}
   1265c:	push	{r4, lr}
   12660:	mov	r4, r0
   12664:	ldr	r0, [pc, #64]	; 126ac <close_stdout@@Base+0x20c>
   12668:	mov	r1, #0
   1266c:	add	r0, pc, r0
   12670:	bl	110e8 <open64@plt>
   12674:	cmp	r4, r0
   12678:	mov	r3, r0
   1267c:	moveq	r3, #1
   12680:	beq	126a4 <close_stdout@@Base+0x204>
   12684:	cmp	r3, #0
   12688:	movlt	r3, #0
   1268c:	blt	126a4 <close_stdout@@Base+0x204>
   12690:	bl	11244 <close@plt>
   12694:	bl	11184 <__errno_location@plt>
   12698:	mov	r3, #0
   1269c:	mov	r2, #9
   126a0:	str	r2, [r0]
   126a4:	mov	r0, r3
   126a8:	pop	{r4, pc}
   126ac:	andeq	r4, r0, r0, asr r4
   126b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126b4:	mov	r9, r0
   126b8:	mov	r0, r2
   126bc:	mov	r7, r2
   126c0:	mov	sl, r1
   126c4:	bl	111c0 <fileno@plt>
   126c8:	cmp	r0, #1
   126cc:	beq	12800 <close_stdout@@Base+0x360>
   126d0:	cmp	r0, #2
   126d4:	beq	127f8 <close_stdout@@Base+0x358>
   126d8:	cmp	r0, #0
   126dc:	beq	127a0 <close_stdout@@Base+0x300>
   126e0:	mov	r0, #2
   126e4:	mov	r1, r0
   126e8:	bl	11058 <dup2@plt>
   126ec:	subs	r5, r0, #2
   126f0:	movne	r5, #1
   126f4:	mov	r0, #1
   126f8:	mov	r1, r0
   126fc:	bl	11058 <dup2@plt>
   12700:	subs	r6, r0, #1
   12704:	movne	r6, #1
   12708:	mov	r0, #0
   1270c:	mov	r1, r0
   12710:	bl	11058 <dup2@plt>
   12714:	cmp	r0, #0
   12718:	beq	127a8 <close_stdout@@Base+0x308>
   1271c:	mov	r0, #0
   12720:	bl	1265c <close_stdout@@Base+0x1bc>
   12724:	cmp	r0, #0
   12728:	moveq	r4, r0
   1272c:	moveq	r8, #1
   12730:	beq	1276c <close_stdout@@Base+0x2cc>
   12734:	cmp	r6, #0
   12738:	mov	r8, #1
   1273c:	bne	127b4 <close_stdout@@Base+0x314>
   12740:	cmp	r5, #0
   12744:	beq	12758 <close_stdout@@Base+0x2b8>
   12748:	mov	r0, #2
   1274c:	bl	1265c <close_stdout@@Base+0x1bc>
   12750:	subs	r4, r0, #0
   12754:	beq	127e0 <close_stdout@@Base+0x340>
   12758:	mov	r0, r9
   1275c:	mov	r1, sl
   12760:	mov	r2, r7
   12764:	bl	1113c <freopen64@plt>
   12768:	mov	r4, r0
   1276c:	bl	11184 <__errno_location@plt>
   12770:	cmp	r5, #0
   12774:	mov	r7, r0
   12778:	ldr	r5, [r0]
   1277c:	bne	127ec <close_stdout@@Base+0x34c>
   12780:	cmp	r6, #0
   12784:	bne	127d4 <close_stdout@@Base+0x334>
   12788:	cmp	r8, #0
   1278c:	bne	127c8 <close_stdout@@Base+0x328>
   12790:	cmp	r4, #0
   12794:	mov	r0, r4
   12798:	streq	r5, [r7]
   1279c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   127a0:	mov	r5, r0
   127a4:	mov	r6, r0
   127a8:	cmp	r6, #0
   127ac:	mov	r8, #0
   127b0:	beq	12740 <close_stdout@@Base+0x2a0>
   127b4:	mov	r0, #1
   127b8:	bl	1265c <close_stdout@@Base+0x1bc>
   127bc:	cmp	r0, #0
   127c0:	bne	12740 <close_stdout@@Base+0x2a0>
   127c4:	b	12768 <close_stdout@@Base+0x2c8>
   127c8:	mov	r0, #0
   127cc:	bl	11244 <close@plt>
   127d0:	b	12790 <close_stdout@@Base+0x2f0>
   127d4:	mov	r0, #1
   127d8:	bl	11244 <close@plt>
   127dc:	b	12788 <close_stdout@@Base+0x2e8>
   127e0:	bl	11184 <__errno_location@plt>
   127e4:	ldr	r5, [r0]
   127e8:	mov	r7, r0
   127ec:	mov	r0, #2
   127f0:	bl	11244 <close@plt>
   127f4:	b	12780 <close_stdout@@Base+0x2e0>
   127f8:	mov	r5, #0
   127fc:	b	126f4 <close_stdout@@Base+0x254>
   12800:	mov	r5, #0
   12804:	mov	r6, r5
   12808:	b	12708 <close_stdout@@Base+0x268>
   1280c:	push	{r3, r4, r5, r6, r7, lr}
   12810:	subs	r4, r0, #0
   12814:	ldr	r5, [pc, #172]	; 128c8 <close_stdout@@Base+0x428>
   12818:	add	r5, pc, r5
   1281c:	beq	128a4 <close_stdout@@Base+0x404>
   12820:	mov	r1, #47	; 0x2f
   12824:	bl	11208 <strrchr@plt>
   12828:	subs	r6, r0, #0
   1282c:	beq	12888 <close_stdout@@Base+0x3e8>
   12830:	add	r7, r6, #1
   12834:	rsb	r3, r4, r7
   12838:	cmp	r3, #6
   1283c:	ble	12888 <close_stdout@@Base+0x3e8>
   12840:	ldr	r1, [pc, #132]	; 128cc <close_stdout@@Base+0x42c>
   12844:	sub	r0, r6, #6
   12848:	mov	r2, #7
   1284c:	add	r1, pc, r1
   12850:	bl	1122c <strncmp@plt>
   12854:	cmp	r0, #0
   12858:	bne	12888 <close_stdout@@Base+0x3e8>
   1285c:	ldr	r1, [pc, #108]	; 128d0 <close_stdout@@Base+0x430>
   12860:	mov	r0, r7
   12864:	mov	r2, #3
   12868:	add	r1, pc, r1
   1286c:	bl	1122c <strncmp@plt>
   12870:	cmp	r0, #0
   12874:	movne	r4, r7
   12878:	ldreq	r3, [pc, #84]	; 128d4 <close_stdout@@Base+0x434>
   1287c:	addeq	r4, r6, #4
   12880:	ldreq	r3, [r5, r3]
   12884:	streq	r4, [r3]
   12888:	ldr	r2, [pc, #72]	; 128d8 <close_stdout@@Base+0x438>
   1288c:	ldr	r3, [pc, #72]	; 128dc <close_stdout@@Base+0x43c>
   12890:	ldr	r2, [r5, r2]
   12894:	str	r4, [r2]
   12898:	ldr	r3, [r5, r3]
   1289c:	str	r4, [r3]
   128a0:	pop	{r3, r4, r5, r6, r7, pc}
   128a4:	ldr	r3, [pc, #52]	; 128e0 <close_stdout@@Base+0x440>
   128a8:	mov	r1, #1
   128ac:	ldr	r0, [pc, #48]	; 128e4 <close_stdout@@Base+0x444>
   128b0:	mov	r2, #55	; 0x37
   128b4:	ldr	r3, [r5, r3]
   128b8:	add	r0, pc, r0
   128bc:	ldr	r3, [r3]
   128c0:	bl	11094 <fwrite@plt>
   128c4:	bl	11238 <abort@plt>
   128c8:	andeq	r5, r1, r0, ror #15
   128cc:			; <UNDEFINED> instruction: 0x000042b4
   128d0:	andeq	r4, r0, r0, lsr #5
   128d4:	andeq	r0, r0, r8, lsr r1
   128d8:	andeq	r0, r0, r0, lsr r1
   128dc:	andeq	r0, r0, ip, lsr #2
   128e0:	andeq	r0, r0, ip, lsl #2
   128e4:	andeq	r4, r0, r0, lsl r2
   128e8:	push	{r3, lr}
   128ec:	mov	r3, r0
   128f0:	mov	r2, #0
   128f4:	cmp	r1, #8
   128f8:	str	r2, [r3], #4
   128fc:	add	r3, r3, #4
   12900:	str	r2, [r0, #4]
   12904:	str	r2, [r3], #4
   12908:	str	r2, [r3], #4
   1290c:	str	r2, [r3], #4
   12910:	str	r2, [r3], #4
   12914:	str	r2, [r3], #4
   12918:	str	r2, [r3], #4
   1291c:	str	r2, [r3], #4
   12920:	str	r2, [r3], #4
   12924:	str	r2, [r3], #4
   12928:	str	r2, [r3]
   1292c:	beq	12938 <close_stdout@@Base+0x498>
   12930:	str	r1, [r0]
   12934:	pop	{r3, pc}
   12938:	bl	11238 <abort@plt>
   1293c:	push	{r4, r5, r6, lr}
   12940:	mov	r4, r0
   12944:	mov	r6, r1
   12948:	mov	r0, #0
   1294c:	mov	r1, r4
   12950:	mov	r2, #5
   12954:	bl	11034 <dcgettext@plt>
   12958:	cmp	r0, r4
   1295c:	mov	r5, r0
   12960:	beq	12968 <close_stdout@@Base+0x4c8>
   12964:	pop	{r4, r5, r6, pc}
   12968:	bl	14ab0 <close_stdout@@Base+0x2610>
   1296c:	ldrb	r3, [r0]
   12970:	bic	r3, r3, #32
   12974:	cmp	r3, #85	; 0x55
   12978:	bne	129ec <close_stdout@@Base+0x54c>
   1297c:	ldrb	r3, [r0, #1]
   12980:	bic	r3, r3, #32
   12984:	cmp	r3, #84	; 0x54
   12988:	bne	129d8 <close_stdout@@Base+0x538>
   1298c:	ldrb	r3, [r0, #2]
   12990:	bic	r3, r3, #32
   12994:	cmp	r3, #70	; 0x46
   12998:	bne	129d8 <close_stdout@@Base+0x538>
   1299c:	ldrb	r3, [r0, #3]
   129a0:	cmp	r3, #45	; 0x2d
   129a4:	bne	129d8 <close_stdout@@Base+0x538>
   129a8:	ldrb	r3, [r0, #4]
   129ac:	cmp	r3, #56	; 0x38
   129b0:	bne	129d8 <close_stdout@@Base+0x538>
   129b4:	ldrb	r3, [r0, #5]
   129b8:	cmp	r3, #0
   129bc:	bne	129d8 <close_stdout@@Base+0x538>
   129c0:	ldrb	r3, [r5]
   129c4:	cmp	r3, #96	; 0x60
   129c8:	beq	12a64 <close_stdout@@Base+0x5c4>
   129cc:	ldr	r0, [pc, #180]	; 12a88 <close_stdout@@Base+0x5e8>
   129d0:	add	r0, pc, r0
   129d4:	pop	{r4, r5, r6, pc}
   129d8:	cmp	r6, #7
   129dc:	beq	12a70 <close_stdout@@Base+0x5d0>
   129e0:	ldr	r0, [pc, #164]	; 12a8c <close_stdout@@Base+0x5ec>
   129e4:	add	r0, pc, r0
   129e8:	pop	{r4, r5, r6, pc}
   129ec:	cmp	r3, #71	; 0x47
   129f0:	bne	129d8 <close_stdout@@Base+0x538>
   129f4:	ldrb	r3, [r0, #1]
   129f8:	bic	r3, r3, #32
   129fc:	cmp	r3, #66	; 0x42
   12a00:	bne	129d8 <close_stdout@@Base+0x538>
   12a04:	ldrb	r3, [r0, #2]
   12a08:	cmp	r3, #49	; 0x31
   12a0c:	bne	129d8 <close_stdout@@Base+0x538>
   12a10:	ldrb	r3, [r0, #3]
   12a14:	cmp	r3, #56	; 0x38
   12a18:	bne	129d8 <close_stdout@@Base+0x538>
   12a1c:	ldrb	r3, [r0, #4]
   12a20:	cmp	r3, #48	; 0x30
   12a24:	bne	129d8 <close_stdout@@Base+0x538>
   12a28:	ldrb	r3, [r0, #5]
   12a2c:	cmp	r3, #51	; 0x33
   12a30:	bne	129d8 <close_stdout@@Base+0x538>
   12a34:	ldrb	r3, [r0, #6]
   12a38:	cmp	r3, #48	; 0x30
   12a3c:	bne	129d8 <close_stdout@@Base+0x538>
   12a40:	ldrb	r3, [r0, #7]
   12a44:	cmp	r3, #0
   12a48:	bne	129d8 <close_stdout@@Base+0x538>
   12a4c:	ldrb	r3, [r5]
   12a50:	cmp	r3, #96	; 0x60
   12a54:	beq	12a7c <close_stdout@@Base+0x5dc>
   12a58:	ldr	r0, [pc, #48]	; 12a90 <close_stdout@@Base+0x5f0>
   12a5c:	add	r0, pc, r0
   12a60:	pop	{r4, r5, r6, pc}
   12a64:	ldr	r0, [pc, #40]	; 12a94 <close_stdout@@Base+0x5f4>
   12a68:	add	r0, pc, r0
   12a6c:	pop	{r4, r5, r6, pc}
   12a70:	ldr	r0, [pc, #32]	; 12a98 <close_stdout@@Base+0x5f8>
   12a74:	add	r0, pc, r0
   12a78:	pop	{r4, r5, r6, pc}
   12a7c:	ldr	r0, [pc, #24]	; 12a9c <close_stdout@@Base+0x5fc>
   12a80:	add	r0, pc, r0
   12a84:	pop	{r4, r5, r6, pc}
   12a88:	andeq	r4, r0, ip, asr r1
   12a8c:	andeq	r4, r0, r0, asr r1
   12a90:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   12a94:	ldrdeq	r4, [r0], -r8
   12a98:	andeq	r4, r0, r4, asr #1
   12a9c:	strheq	r4, [r0], -ip
   12aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12aa4:	sub	sp, sp, #124	; 0x7c
   12aa8:	ldr	ip, [pc, #3304]	; 13798 <close_stdout@@Base+0x12f8>
   12aac:	mov	sl, r1
   12ab0:	str	r0, [sp, #40]	; 0x28
   12ab4:	mov	r8, r3
   12ab8:	ldr	r0, [pc, #3292]	; 1379c <close_stdout@@Base+0x12fc>
   12abc:	add	ip, pc, ip
   12ac0:	str	r2, [sp, #32]
   12ac4:	ldr	r1, [sp, #164]	; 0xa4
   12ac8:	mov	r3, ip
   12acc:	ldr	r0, [ip, r0]
   12ad0:	ldr	r2, [sp, #172]	; 0xac
   12ad4:	ubfx	r1, r1, #1, #1
   12ad8:	str	r1, [sp, #36]	; 0x24
   12adc:	str	r0, [sp, #56]	; 0x38
   12ae0:	ldr	r0, [sp, #168]	; 0xa8
   12ae4:	ldr	r1, [sp, #176]	; 0xb0
   12ae8:	str	r2, [sp, #72]	; 0x48
   12aec:	str	r0, [sp, #48]	; 0x30
   12af0:	ldr	r0, [sp, #56]	; 0x38
   12af4:	str	r1, [sp, #68]	; 0x44
   12af8:	ldr	r3, [r0]
   12afc:	str	r3, [sp, #116]	; 0x74
   12b00:	bl	110ac <__ctype_get_mb_cur_max@plt>
   12b04:	ldr	r2, [sp, #160]	; 0xa0
   12b08:	str	r0, [sp, #64]	; 0x40
   12b0c:	cmp	r2, #8
   12b10:	addls	pc, pc, r2, lsl #2
   12b14:	b	13674 <close_stdout@@Base+0x11d4>
   12b18:	b	12b3c <close_stdout@@Base+0x69c>
   12b1c:	b	1338c <close_stdout@@Base+0xeec>
   12b20:	b	133bc <close_stdout@@Base+0xf1c>
   12b24:	b	1326c <close_stdout@@Base+0xdcc>
   12b28:	b	132ac <close_stdout@@Base+0xe0c>
   12b2c:	b	132d8 <close_stdout@@Base+0xe38>
   12b30:	b	132f8 <close_stdout@@Base+0xe58>
   12b34:	b	132f8 <close_stdout@@Base+0xe58>
   12b38:	b	132f8 <close_stdout@@Base+0xe58>
   12b3c:	mov	r2, #0
   12b40:	str	r2, [sp, #36]	; 0x24
   12b44:	mov	r9, r2
   12b48:	str	r2, [sp, #24]
   12b4c:	str	r2, [sp, #28]
   12b50:	str	r2, [sp, #52]	; 0x34
   12b54:	ldr	r0, [sp, #36]	; 0x24
   12b58:	mov	fp, #0
   12b5c:	ldr	r1, [sp, #24]
   12b60:	eor	r2, r0, #1
   12b64:	eor	r3, r1, #1
   12b68:	and	r3, r2, r3
   12b6c:	and	r2, r1, r0
   12b70:	str	r3, [sp, #44]	; 0x2c
   12b74:	str	r2, [sp, #76]	; 0x4c
   12b78:	cmn	r8, #1
   12b7c:	beq	12efc <close_stdout@@Base+0xa5c>
   12b80:	subs	r3, fp, r8
   12b84:	movne	r3, #1
   12b88:	cmp	r3, #0
   12b8c:	beq	12f14 <close_stdout@@Base+0xa74>
   12b90:	ldr	r3, [sp, #28]
   12b94:	ldr	r0, [sp, #24]
   12b98:	adds	r7, r3, #0
   12b9c:	movne	r7, #1
   12ba0:	ands	r6, r7, r0
   12ba4:	bne	13400 <close_stdout@@Base+0xf60>
   12ba8:	ldr	r1, [sp, #32]
   12bac:	add	r5, r1, fp
   12bb0:	ldrb	r4, [r5]
   12bb4:	cmp	r4, #126	; 0x7e
   12bb8:	addls	pc, pc, r4, lsl #2
   12bbc:	b	13180 <close_stdout@@Base+0xce0>
   12bc0:	b	1308c <close_stdout@@Base+0xbec>
   12bc4:	b	13180 <close_stdout@@Base+0xce0>
   12bc8:	b	13180 <close_stdout@@Base+0xce0>
   12bcc:	b	13180 <close_stdout@@Base+0xce0>
   12bd0:	b	13180 <close_stdout@@Base+0xce0>
   12bd4:	b	13180 <close_stdout@@Base+0xce0>
   12bd8:	b	13180 <close_stdout@@Base+0xce0>
   12bdc:	b	13074 <close_stdout@@Base+0xbd4>
   12be0:	b	1305c <close_stdout@@Base+0xbbc>
   12be4:	b	13084 <close_stdout@@Base+0xbe4>
   12be8:	b	1307c <close_stdout@@Base+0xbdc>
   12bec:	b	1306c <close_stdout@@Base+0xbcc>
   12bf0:	b	13064 <close_stdout@@Base+0xbc4>
   12bf4:	b	13028 <close_stdout@@Base+0xb88>
   12bf8:	b	13180 <close_stdout@@Base+0xce0>
   12bfc:	b	13180 <close_stdout@@Base+0xce0>
   12c00:	b	13180 <close_stdout@@Base+0xce0>
   12c04:	b	13180 <close_stdout@@Base+0xce0>
   12c08:	b	13180 <close_stdout@@Base+0xce0>
   12c0c:	b	13180 <close_stdout@@Base+0xce0>
   12c10:	b	13180 <close_stdout@@Base+0xce0>
   12c14:	b	13180 <close_stdout@@Base+0xce0>
   12c18:	b	13180 <close_stdout@@Base+0xce0>
   12c1c:	b	13180 <close_stdout@@Base+0xce0>
   12c20:	b	13180 <close_stdout@@Base+0xce0>
   12c24:	b	13180 <close_stdout@@Base+0xce0>
   12c28:	b	13180 <close_stdout@@Base+0xce0>
   12c2c:	b	13180 <close_stdout@@Base+0xce0>
   12c30:	b	13180 <close_stdout@@Base+0xce0>
   12c34:	b	13180 <close_stdout@@Base+0xce0>
   12c38:	b	13180 <close_stdout@@Base+0xce0>
   12c3c:	b	13180 <close_stdout@@Base+0xce0>
   12c40:	b	12fb4 <close_stdout@@Base+0xb14>
   12c44:	b	12fb4 <close_stdout@@Base+0xb14>
   12c48:	b	12fb4 <close_stdout@@Base+0xb14>
   12c4c:	b	12fac <close_stdout@@Base+0xb0c>
   12c50:	b	12fb4 <close_stdout@@Base+0xb14>
   12c54:	b	12e88 <close_stdout@@Base+0x9e8>
   12c58:	b	12fb4 <close_stdout@@Base+0xb14>
   12c5c:	b	13128 <close_stdout@@Base+0xc88>
   12c60:	b	12fb4 <close_stdout@@Base+0xb14>
   12c64:	b	12fb4 <close_stdout@@Base+0xb14>
   12c68:	b	12fb4 <close_stdout@@Base+0xb14>
   12c6c:	b	12e88 <close_stdout@@Base+0x9e8>
   12c70:	b	12e88 <close_stdout@@Base+0x9e8>
   12c74:	b	12e88 <close_stdout@@Base+0x9e8>
   12c78:	b	12e88 <close_stdout@@Base+0x9e8>
   12c7c:	b	12e88 <close_stdout@@Base+0x9e8>
   12c80:	b	12e88 <close_stdout@@Base+0x9e8>
   12c84:	b	12e88 <close_stdout@@Base+0x9e8>
   12c88:	b	12e88 <close_stdout@@Base+0x9e8>
   12c8c:	b	12e88 <close_stdout@@Base+0x9e8>
   12c90:	b	12e88 <close_stdout@@Base+0x9e8>
   12c94:	b	12e88 <close_stdout@@Base+0x9e8>
   12c98:	b	12e88 <close_stdout@@Base+0x9e8>
   12c9c:	b	12e88 <close_stdout@@Base+0x9e8>
   12ca0:	b	12e88 <close_stdout@@Base+0x9e8>
   12ca4:	b	12e88 <close_stdout@@Base+0x9e8>
   12ca8:	b	12e88 <close_stdout@@Base+0x9e8>
   12cac:	b	12fb4 <close_stdout@@Base+0xb14>
   12cb0:	b	12fb4 <close_stdout@@Base+0xb14>
   12cb4:	b	12fb4 <close_stdout@@Base+0xb14>
   12cb8:	b	12fb4 <close_stdout@@Base+0xb14>
   12cbc:	b	12dbc <close_stdout@@Base+0x91c>
   12cc0:	b	13180 <close_stdout@@Base+0xce0>
   12cc4:	b	12e88 <close_stdout@@Base+0x9e8>
   12cc8:	b	12e88 <close_stdout@@Base+0x9e8>
   12ccc:	b	12e88 <close_stdout@@Base+0x9e8>
   12cd0:	b	12e88 <close_stdout@@Base+0x9e8>
   12cd4:	b	12e88 <close_stdout@@Base+0x9e8>
   12cd8:	b	12e88 <close_stdout@@Base+0x9e8>
   12cdc:	b	12e88 <close_stdout@@Base+0x9e8>
   12ce0:	b	12e88 <close_stdout@@Base+0x9e8>
   12ce4:	b	12e88 <close_stdout@@Base+0x9e8>
   12ce8:	b	12e88 <close_stdout@@Base+0x9e8>
   12cec:	b	12e88 <close_stdout@@Base+0x9e8>
   12cf0:	b	12e88 <close_stdout@@Base+0x9e8>
   12cf4:	b	12e88 <close_stdout@@Base+0x9e8>
   12cf8:	b	12e88 <close_stdout@@Base+0x9e8>
   12cfc:	b	12e88 <close_stdout@@Base+0x9e8>
   12d00:	b	12e88 <close_stdout@@Base+0x9e8>
   12d04:	b	12e88 <close_stdout@@Base+0x9e8>
   12d08:	b	12e88 <close_stdout@@Base+0x9e8>
   12d0c:	b	12e88 <close_stdout@@Base+0x9e8>
   12d10:	b	12e88 <close_stdout@@Base+0x9e8>
   12d14:	b	12e88 <close_stdout@@Base+0x9e8>
   12d18:	b	12e88 <close_stdout@@Base+0x9e8>
   12d1c:	b	12e88 <close_stdout@@Base+0x9e8>
   12d20:	b	12e88 <close_stdout@@Base+0x9e8>
   12d24:	b	12e88 <close_stdout@@Base+0x9e8>
   12d28:	b	12e88 <close_stdout@@Base+0x9e8>
   12d2c:	b	12fb4 <close_stdout@@Base+0xb14>
   12d30:	b	1310c <close_stdout@@Base+0xc6c>
   12d34:	b	12e88 <close_stdout@@Base+0x9e8>
   12d38:	b	12fb4 <close_stdout@@Base+0xb14>
   12d3c:	b	12e88 <close_stdout@@Base+0x9e8>
   12d40:	b	12fb4 <close_stdout@@Base+0xb14>
   12d44:	b	12e88 <close_stdout@@Base+0x9e8>
   12d48:	b	12e88 <close_stdout@@Base+0x9e8>
   12d4c:	b	12e88 <close_stdout@@Base+0x9e8>
   12d50:	b	12e88 <close_stdout@@Base+0x9e8>
   12d54:	b	12e88 <close_stdout@@Base+0x9e8>
   12d58:	b	12e88 <close_stdout@@Base+0x9e8>
   12d5c:	b	12e88 <close_stdout@@Base+0x9e8>
   12d60:	b	12e88 <close_stdout@@Base+0x9e8>
   12d64:	b	12e88 <close_stdout@@Base+0x9e8>
   12d68:	b	12e88 <close_stdout@@Base+0x9e8>
   12d6c:	b	12e88 <close_stdout@@Base+0x9e8>
   12d70:	b	12e88 <close_stdout@@Base+0x9e8>
   12d74:	b	12e88 <close_stdout@@Base+0x9e8>
   12d78:	b	12e88 <close_stdout@@Base+0x9e8>
   12d7c:	b	12e88 <close_stdout@@Base+0x9e8>
   12d80:	b	12e88 <close_stdout@@Base+0x9e8>
   12d84:	b	12e88 <close_stdout@@Base+0x9e8>
   12d88:	b	12e88 <close_stdout@@Base+0x9e8>
   12d8c:	b	12e88 <close_stdout@@Base+0x9e8>
   12d90:	b	12e88 <close_stdout@@Base+0x9e8>
   12d94:	b	12e88 <close_stdout@@Base+0x9e8>
   12d98:	b	12e88 <close_stdout@@Base+0x9e8>
   12d9c:	b	12e88 <close_stdout@@Base+0x9e8>
   12da0:	b	12e88 <close_stdout@@Base+0x9e8>
   12da4:	b	12e88 <close_stdout@@Base+0x9e8>
   12da8:	b	12e88 <close_stdout@@Base+0x9e8>
   12dac:	b	12f94 <close_stdout@@Base+0xaf4>
   12db0:	b	12fb4 <close_stdout@@Base+0xb14>
   12db4:	b	12f94 <close_stdout@@Base+0xaf4>
   12db8:	b	12fac <close_stdout@@Base+0xb0c>
   12dbc:	ldr	r3, [sp, #160]	; 0xa0
   12dc0:	cmp	r3, #2
   12dc4:	beq	13650 <close_stdout@@Base+0x11b0>
   12dc8:	cmp	r3, #3
   12dcc:	bne	12e88 <close_stdout@@Base+0x9e8>
   12dd0:	ldr	r1, [sp, #164]	; 0xa4
   12dd4:	tst	r1, #4
   12dd8:	beq	12e88 <close_stdout@@Base+0x9e8>
   12ddc:	add	r3, fp, #2
   12de0:	cmp	r8, r3
   12de4:	bls	12e88 <close_stdout@@Base+0x9e8>
   12de8:	ldrb	r2, [r5, #1]
   12dec:	mov	r1, #1
   12df0:	cmp	r2, #63	; 0x3f
   12df4:	bne	12e88 <close_stdout@@Base+0x9e8>
   12df8:	ldr	r0, [sp, #32]
   12dfc:	ldrb	ip, [r0, r3]
   12e00:	sub	r0, ip, #33	; 0x21
   12e04:	uxtb	r0, r0
   12e08:	cmp	r0, #29
   12e0c:	bhi	12e88 <close_stdout@@Base+0x9e8>
   12e10:	lsl	r1, r1, r0
   12e14:	movw	r0, #20929	; 0x51c1
   12e18:	movt	r0, #14336	; 0x3800
   12e1c:	and	r0, r1, r0
   12e20:	cmp	r0, #0
   12e24:	beq	12e88 <close_stdout@@Base+0x9e8>
   12e28:	ldr	r1, [sp, #36]	; 0x24
   12e2c:	cmp	r1, #0
   12e30:	bne	12fd0 <close_stdout@@Base+0xb30>
   12e34:	cmp	r9, sl
   12e38:	mov	r4, ip
   12e3c:	mov	fp, r3
   12e40:	ldrcc	r0, [sp, #40]	; 0x28
   12e44:	strbcc	r2, [r0, r9]
   12e48:	add	r2, r9, #1
   12e4c:	cmp	sl, r2
   12e50:	ldrhi	r0, [sp, #40]	; 0x28
   12e54:	movhi	r1, #34	; 0x22
   12e58:	strbhi	r1, [r0, r2]
   12e5c:	add	r2, r9, #2
   12e60:	cmp	sl, r2
   12e64:	ldrhi	r0, [sp, #40]	; 0x28
   12e68:	movhi	r1, #34	; 0x22
   12e6c:	strbhi	r1, [r0, r2]
   12e70:	add	r2, r9, #3
   12e74:	cmp	sl, r2
   12e78:	add	r9, r9, #4
   12e7c:	ldrhi	r0, [sp, #40]	; 0x28
   12e80:	movhi	r1, #63	; 0x3f
   12e84:	strbhi	r1, [r0, r2]
   12e88:	ldr	r0, [sp, #44]	; 0x2c
   12e8c:	cmp	r0, #0
   12e90:	bne	12eb8 <close_stdout@@Base+0xa18>
   12e94:	ldr	r1, [sp, #48]	; 0x30
   12e98:	cmp	r1, #0
   12e9c:	beq	12eb8 <close_stdout@@Base+0xa18>
   12ea0:	ubfx	r2, r4, #5, #8
   12ea4:	and	r3, r4, #31
   12ea8:	ldr	r2, [r1, r2, lsl #2]
   12eac:	lsr	r3, r2, r3
   12eb0:	tst	r3, #1
   12eb4:	bne	12ec0 <close_stdout@@Base+0xa20>
   12eb8:	cmp	r6, #0
   12ebc:	beq	12ee0 <close_stdout@@Base+0xa40>
   12ec0:	ldr	r2, [sp, #36]	; 0x24
   12ec4:	cmp	r2, #0
   12ec8:	bne	12fd0 <close_stdout@@Base+0xb30>
   12ecc:	cmp	r9, sl
   12ed0:	ldrcc	r0, [sp, #40]	; 0x28
   12ed4:	movcc	r3, #92	; 0x5c
   12ed8:	strbcc	r3, [r0, r9]
   12edc:	add	r9, r9, #1
   12ee0:	add	fp, fp, #1
   12ee4:	cmp	r9, sl
   12ee8:	ldrcc	r1, [sp, #40]	; 0x28
   12eec:	strbcc	r4, [r1, r9]
   12ef0:	cmn	r8, #1
   12ef4:	add	r9, r9, #1
   12ef8:	bne	12b80 <close_stdout@@Base+0x6e0>
   12efc:	ldr	r2, [sp, #32]
   12f00:	ldrb	r3, [r2, fp]
   12f04:	adds	r3, r3, #0
   12f08:	movne	r3, #1
   12f0c:	cmp	r3, #0
   12f10:	bne	12b90 <close_stdout@@Base+0x6f0>
   12f14:	ldr	r3, [sp, #160]	; 0xa0
   12f18:	cmp	r9, #0
   12f1c:	cmpeq	r3, #2
   12f20:	bne	12f30 <close_stdout@@Base+0xa90>
   12f24:	ldr	r0, [sp, #36]	; 0x24
   12f28:	cmp	r0, #0
   12f2c:	bne	12fd0 <close_stdout@@Base+0xb30>
   12f30:	ldr	r1, [sp, #36]	; 0x24
   12f34:	ldr	r2, [sp, #52]	; 0x34
   12f38:	eor	r3, r1, #1
   12f3c:	cmp	r2, #0
   12f40:	moveq	r3, #0
   12f44:	andne	r3, r3, #1
   12f48:	cmp	r3, #0
   12f4c:	beq	12f78 <close_stdout@@Base+0xad8>
   12f50:	ldrb	r3, [r2]
   12f54:	cmp	r3, #0
   12f58:	beq	12f78 <close_stdout@@Base+0xad8>
   12f5c:	ldr	r1, [sp, #40]	; 0x28
   12f60:	cmp	sl, r9
   12f64:	strbhi	r3, [r1, r9]
   12f68:	ldrb	r3, [r2, #1]!
   12f6c:	add	r9, r9, #1
   12f70:	cmp	r3, #0
   12f74:	bne	12f60 <close_stdout@@Base+0xac0>
   12f78:	cmp	r9, sl
   12f7c:	movcs	r0, r9
   12f80:	ldrcc	r1, [sp, #40]	; 0x28
   12f84:	movcc	r3, #0
   12f88:	movcc	r0, r9
   12f8c:	strbcc	r3, [r1, r9]
   12f90:	b	1300c <close_stdout@@Base+0xb6c>
   12f94:	cmn	r8, #1
   12f98:	beq	13660 <close_stdout@@Base+0x11c0>
   12f9c:	subs	r3, r8, #1
   12fa0:	movne	r3, #1
   12fa4:	cmp	r3, #0
   12fa8:	bne	12e88 <close_stdout@@Base+0x9e8>
   12fac:	cmp	fp, #0
   12fb0:	bne	12e88 <close_stdout@@Base+0x9e8>
   12fb4:	ldr	r3, [sp, #36]	; 0x24
   12fb8:	ldr	r0, [sp, #160]	; 0xa0
   12fbc:	cmp	r0, #2
   12fc0:	movne	r3, #0
   12fc4:	andeq	r3, r3, #1
   12fc8:	cmp	r3, #0
   12fcc:	beq	12e88 <close_stdout@@Base+0x9e8>
   12fd0:	ldr	r2, [sp, #164]	; 0xa4
   12fd4:	mov	ip, #0
   12fd8:	ldr	r0, [sp, #160]	; 0xa0
   12fdc:	bic	r3, r2, #2
   12fe0:	ldr	r1, [sp, #72]	; 0x48
   12fe4:	ldr	r2, [sp, #68]	; 0x44
   12fe8:	stm	sp, {r0, r3}
   12fec:	mov	r3, r8
   12ff0:	str	r1, [sp, #12]
   12ff4:	mov	r1, sl
   12ff8:	str	r2, [sp, #16]
   12ffc:	ldr	r0, [sp, #40]	; 0x28
   13000:	ldr	r2, [sp, #32]
   13004:	str	ip, [sp, #8]
   13008:	bl	12aa0 <close_stdout@@Base+0x600>
   1300c:	ldr	r1, [sp, #56]	; 0x38
   13010:	ldr	r2, [sp, #116]	; 0x74
   13014:	ldr	r3, [r1]
   13018:	cmp	r2, r3
   1301c:	bne	13750 <close_stdout@@Base+0x12b0>
   13020:	add	sp, sp, #124	; 0x7c
   13024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13028:	mov	r3, #114	; 0x72
   1302c:	ldr	r2, [sp, #36]	; 0x24
   13030:	ldr	r0, [sp, #160]	; 0xa0
   13034:	cmp	r0, #2
   13038:	movne	r2, #0
   1303c:	andeq	r2, r2, #1
   13040:	cmp	r2, #0
   13044:	bne	12fd0 <close_stdout@@Base+0xb30>
   13048:	ldr	r1, [sp, #24]
   1304c:	cmp	r1, #0
   13050:	beq	12e88 <close_stdout@@Base+0x9e8>
   13054:	mov	r4, r3
   13058:	b	12ec0 <close_stdout@@Base+0xa20>
   1305c:	mov	r3, #98	; 0x62
   13060:	b	13048 <close_stdout@@Base+0xba8>
   13064:	mov	r3, #102	; 0x66
   13068:	b	13048 <close_stdout@@Base+0xba8>
   1306c:	mov	r3, #118	; 0x76
   13070:	b	13048 <close_stdout@@Base+0xba8>
   13074:	mov	r3, #97	; 0x61
   13078:	b	13048 <close_stdout@@Base+0xba8>
   1307c:	mov	r3, #110	; 0x6e
   13080:	b	1302c <close_stdout@@Base+0xb8c>
   13084:	mov	r3, #116	; 0x74
   13088:	b	1302c <close_stdout@@Base+0xb8c>
   1308c:	ldr	r2, [sp, #24]
   13090:	cmp	r2, #0
   13094:	beq	1363c <close_stdout@@Base+0x119c>
   13098:	ldr	r3, [sp, #36]	; 0x24
   1309c:	cmp	r3, #0
   130a0:	bne	12fd0 <close_stdout@@Base+0xb30>
   130a4:	cmp	r9, sl
   130a8:	add	r2, r9, #1
   130ac:	ldrcc	r0, [sp, #40]	; 0x28
   130b0:	movcc	r3, #92	; 0x5c
   130b4:	strbcc	r3, [r0, r9]
   130b8:	add	r3, fp, #1
   130bc:	cmp	r8, r3
   130c0:	bls	13100 <close_stdout@@Base+0xc60>
   130c4:	ldr	r1, [sp, #32]
   130c8:	ldrb	r3, [r1, r3]
   130cc:	sub	r3, r3, #48	; 0x30
   130d0:	cmp	r3, #9
   130d4:	bhi	13100 <close_stdout@@Base+0xc60>
   130d8:	cmp	sl, r2
   130dc:	ldrhi	r0, [sp, #40]	; 0x28
   130e0:	movhi	r3, #48	; 0x30
   130e4:	strbhi	r3, [r0, r2]
   130e8:	add	r3, r9, #2
   130ec:	cmp	sl, r3
   130f0:	ldrhi	r1, [sp, #40]	; 0x28
   130f4:	movhi	r2, #48	; 0x30
   130f8:	strbhi	r2, [r1, r3]
   130fc:	add	r2, r9, #3
   13100:	mov	r9, r2
   13104:	mov	r4, #48	; 0x30
   13108:	b	12e94 <close_stdout@@Base+0x9f4>
   1310c:	ldr	r1, [sp, #76]	; 0x4c
   13110:	cmp	r1, #0
   13114:	beq	13120 <close_stdout@@Base+0xc80>
   13118:	cmp	r7, #0
   1311c:	bne	12ee0 <close_stdout@@Base+0xa40>
   13120:	mov	r3, r4
   13124:	b	1302c <close_stdout@@Base+0xb8c>
   13128:	ldr	r1, [sp, #160]	; 0xa0
   1312c:	cmp	r1, #2
   13130:	bne	12e88 <close_stdout@@Base+0x9e8>
   13134:	ldr	r2, [sp, #36]	; 0x24
   13138:	cmp	r2, #0
   1313c:	bne	12fd0 <close_stdout@@Base+0xb30>
   13140:	cmp	r9, sl
   13144:	ldrcc	r0, [sp, #40]	; 0x28
   13148:	movcc	r3, #39	; 0x27
   1314c:	strbcc	r3, [r0, r9]
   13150:	add	r3, r9, #1
   13154:	cmp	sl, r3
   13158:	ldrhi	r1, [sp, #40]	; 0x28
   1315c:	movhi	r2, #92	; 0x5c
   13160:	strbhi	r2, [r1, r3]
   13164:	add	r3, r9, #2
   13168:	cmp	sl, r3
   1316c:	add	r9, r9, #3
   13170:	ldrhi	r0, [sp, #40]	; 0x28
   13174:	movhi	r2, #39	; 0x27
   13178:	strbhi	r2, [r0, r3]
   1317c:	b	12e88 <close_stdout@@Base+0x9e8>
   13180:	ldr	r1, [sp, #64]	; 0x40
   13184:	cmp	r1, #1
   13188:	bne	13480 <close_stdout@@Base+0xfe0>
   1318c:	bl	11154 <__ctype_b_loc@plt>
   13190:	ldr	r2, [sp, #64]	; 0x40
   13194:	sxth	r3, r4
   13198:	str	r2, [sp, #60]	; 0x3c
   1319c:	lsl	r3, r3, #1
   131a0:	ldr	r2, [r0]
   131a4:	ldrh	r2, [r2, r3]
   131a8:	eor	r2, r2, #16384	; 0x4000
   131ac:	ubfx	r2, r2, #14, #1
   131b0:	ldr	r1, [sp, #24]
   131b4:	ands	r2, r2, r1
   131b8:	beq	12e88 <close_stdout@@Base+0x9e8>
   131bc:	ldr	r3, [sp, #60]	; 0x3c
   131c0:	mov	r0, #92	; 0x5c
   131c4:	ldr	r7, [sp, #36]	; 0x24
   131c8:	add	r1, r3, fp
   131cc:	str	r8, [sp, #60]	; 0x3c
   131d0:	ldr	r3, [sp, #40]	; 0x28
   131d4:	b	13238 <close_stdout@@Base+0xd98>
   131d8:	cmp	r7, #0
   131dc:	bne	13678 <close_stdout@@Base+0x11d8>
   131e0:	add	ip, r9, #1
   131e4:	cmp	r9, sl
   131e8:	strbcc	r0, [r3, r9]
   131ec:	cmp	sl, ip
   131f0:	lsrhi	r8, r4, #6
   131f4:	addhi	r8, r8, #48	; 0x30
   131f8:	strbhi	r8, [r3, ip]
   131fc:	add	ip, r9, #2
   13200:	add	r9, r9, #3
   13204:	cmp	sl, ip
   13208:	ubfxhi	r8, r4, #3, #3
   1320c:	and	r4, r4, #7
   13210:	add	r4, r4, #48	; 0x30
   13214:	addhi	r8, r8, #48	; 0x30
   13218:	strbhi	r8, [r3, ip]
   1321c:	add	fp, fp, #1
   13220:	cmp	r1, fp
   13224:	bls	13264 <close_stdout@@Base+0xdc4>
   13228:	cmp	r9, sl
   1322c:	strbcc	r4, [r3, r9]
   13230:	ldrb	r4, [r5, #1]!
   13234:	add	r9, r9, #1
   13238:	cmp	r2, #0
   1323c:	bne	131d8 <close_stdout@@Base+0xd38>
   13240:	cmp	r6, #0
   13244:	beq	1321c <close_stdout@@Base+0xd7c>
   13248:	add	fp, fp, #1
   1324c:	cmp	r9, sl
   13250:	strbcc	r0, [r3, r9]
   13254:	cmp	r1, fp
   13258:	add	r9, r9, #1
   1325c:	mov	r6, #0
   13260:	bhi	13228 <close_stdout@@Base+0xd88>
   13264:	ldr	r8, [sp, #60]	; 0x3c
   13268:	b	12ee4 <close_stdout@@Base+0xa44>
   1326c:	ldr	r3, [sp, #36]	; 0x24
   13270:	cmp	r3, #0
   13274:	bne	13778 <close_stdout@@Base+0x12d8>
   13278:	cmp	sl, #0
   1327c:	beq	13690 <close_stdout@@Base+0x11f0>
   13280:	ldr	r1, [sp, #40]	; 0x28
   13284:	mov	r0, #1
   13288:	ldr	r2, [pc, #1296]	; 137a0 <close_stdout@@Base+0x1300>
   1328c:	mov	r3, #34	; 0x22
   13290:	str	r0, [sp, #24]
   13294:	mov	r9, r0
   13298:	add	r2, pc, r2
   1329c:	str	r0, [sp, #28]
   132a0:	strb	r3, [r1]
   132a4:	str	r2, [sp, #52]	; 0x34
   132a8:	b	12b54 <close_stdout@@Base+0x6b4>
   132ac:	ldr	r3, [pc, #1264]	; 137a4 <close_stdout@@Base+0x1304>
   132b0:	mov	r2, #1
   132b4:	mov	r0, #3
   132b8:	str	r2, [sp, #36]	; 0x24
   132bc:	add	r3, pc, r3
   132c0:	str	r2, [sp, #24]
   132c4:	str	r3, [sp, #52]	; 0x34
   132c8:	mov	r9, #0
   132cc:	str	r2, [sp, #28]
   132d0:	str	r0, [sp, #160]	; 0xa0
   132d4:	b	12b54 <close_stdout@@Base+0x6b4>
   132d8:	mov	r0, #0
   132dc:	mov	r1, #1
   132e0:	str	r0, [sp, #36]	; 0x24
   132e4:	mov	r9, r0
   132e8:	str	r1, [sp, #24]
   132ec:	str	r0, [sp, #28]
   132f0:	str	r0, [sp, #52]	; 0x34
   132f4:	b	12b54 <close_stdout@@Base+0x6b4>
   132f8:	ldr	r3, [sp, #160]	; 0xa0
   132fc:	cmp	r3, #8
   13300:	beq	1332c <close_stdout@@Base+0xe8c>
   13304:	ldr	r0, [pc, #1180]	; 137a8 <close_stdout@@Base+0x1308>
   13308:	mov	r1, r3
   1330c:	add	r0, pc, r0
   13310:	bl	1293c <close_stdout@@Base+0x49c>
   13314:	ldr	r1, [sp, #160]	; 0xa0
   13318:	str	r0, [sp, #72]	; 0x48
   1331c:	ldr	r0, [pc, #1160]	; 137ac <close_stdout@@Base+0x130c>
   13320:	add	r0, pc, r0
   13324:	bl	1293c <close_stdout@@Base+0x49c>
   13328:	str	r0, [sp, #68]	; 0x44
   1332c:	ldr	r0, [sp, #36]	; 0x24
   13330:	cmp	r0, #0
   13334:	movne	r9, #0
   13338:	bne	13370 <close_stdout@@Base+0xed0>
   1333c:	ldr	r1, [sp, #72]	; 0x48
   13340:	ldrb	r3, [r1]
   13344:	cmp	r3, #0
   13348:	beq	13748 <close_stdout@@Base+0x12a8>
   1334c:	mov	r2, r1
   13350:	ldr	r1, [sp, #40]	; 0x28
   13354:	mov	r9, r0
   13358:	cmp	r9, sl
   1335c:	strbcc	r3, [r1, r9]
   13360:	ldrb	r3, [r2, #1]!
   13364:	add	r9, r9, #1
   13368:	cmp	r3, #0
   1336c:	bne	13358 <close_stdout@@Base+0xeb8>
   13370:	ldr	r0, [sp, #68]	; 0x44
   13374:	str	r0, [sp, #52]	; 0x34
   13378:	bl	1116c <strlen@plt>
   1337c:	mov	r2, #1
   13380:	str	r2, [sp, #24]
   13384:	str	r0, [sp, #28]
   13388:	b	12b54 <close_stdout@@Base+0x6b4>
   1338c:	ldr	r3, [pc, #1052]	; 137b0 <close_stdout@@Base+0x1310>
   13390:	mov	r2, #0
   13394:	mov	r1, #1
   13398:	mov	r0, #2
   1339c:	add	r3, pc, r3
   133a0:	str	r1, [sp, #36]	; 0x24
   133a4:	str	r2, [sp, #24]
   133a8:	mov	r9, r2
   133ac:	str	r1, [sp, #28]
   133b0:	str	r3, [sp, #52]	; 0x34
   133b4:	str	r0, [sp, #160]	; 0xa0
   133b8:	b	12b54 <close_stdout@@Base+0x6b4>
   133bc:	ldr	r3, [sp, #36]	; 0x24
   133c0:	cmp	r3, #0
   133c4:	bne	13754 <close_stdout@@Base+0x12b4>
   133c8:	cmp	sl, #0
   133cc:	beq	136b0 <close_stdout@@Base+0x1210>
   133d0:	ldr	r1, [sp, #40]	; 0x28
   133d4:	mov	r3, #39	; 0x27
   133d8:	ldr	r2, [sp, #36]	; 0x24
   133dc:	mov	r0, #1
   133e0:	mov	r9, r0
   133e4:	str	r0, [sp, #28]
   133e8:	strb	r3, [r1]
   133ec:	ldr	r3, [pc, #960]	; 137b4 <close_stdout@@Base+0x1314>
   133f0:	str	r2, [sp, #24]
   133f4:	add	r3, pc, r3
   133f8:	str	r3, [sp, #52]	; 0x34
   133fc:	b	12b54 <close_stdout@@Base+0x6b4>
   13400:	ldr	r2, [sp, #28]
   13404:	cmp	r2, #1
   13408:	add	r4, fp, r2
   1340c:	movls	r3, #0
   13410:	movhi	r3, #1
   13414:	cmn	r8, #1
   13418:	movne	r3, #0
   1341c:	cmp	r3, #0
   13420:	beq	13430 <close_stdout@@Base+0xf90>
   13424:	ldr	r0, [sp, #32]
   13428:	bl	1116c <strlen@plt>
   1342c:	mov	r8, r0
   13430:	cmp	r8, r4
   13434:	ldrcc	r3, [sp, #32]
   13438:	movcc	r6, #0
   1343c:	addcc	r5, r3, fp
   13440:	bcc	12bb0 <close_stdout@@Base+0x710>
   13444:	ldr	r0, [sp, #32]
   13448:	ldr	r1, [sp, #52]	; 0x34
   1344c:	add	r5, r0, fp
   13450:	ldr	r2, [sp, #28]
   13454:	mov	r0, r5
   13458:	bl	1101c <memcmp@plt>
   1345c:	cmp	r0, #0
   13460:	bne	13478 <close_stdout@@Base+0xfd8>
   13464:	ldr	r1, [sp, #36]	; 0x24
   13468:	cmp	r1, #0
   1346c:	bne	12fd0 <close_stdout@@Base+0xb30>
   13470:	mov	r6, #1
   13474:	b	12bb0 <close_stdout@@Base+0x710>
   13478:	mov	r6, #0
   1347c:	b	12bb0 <close_stdout@@Base+0x710>
   13480:	add	r7, sp, #108	; 0x6c
   13484:	cmn	r8, #1
   13488:	mov	r3, #0
   1348c:	str	r3, [sp, #108]	; 0x6c
   13490:	str	r3, [r7, #4]
   13494:	beq	13680 <close_stdout@@Base+0x11e0>
   13498:	mov	r1, #0
   1349c:	ldr	r0, [sp, #32]
   134a0:	mov	ip, #1
   134a4:	str	r9, [sp, #88]	; 0x58
   134a8:	str	r6, [sp, #96]	; 0x60
   134ac:	mov	r9, r1
   134b0:	str	r5, [sp, #100]	; 0x64
   134b4:	mov	r6, ip
   134b8:	mov	r5, r7
   134bc:	add	r3, sp, #104	; 0x68
   134c0:	sub	r0, r0, #1
   134c4:	str	r3, [sp, #80]	; 0x50
   134c8:	str	r0, [sp, #84]	; 0x54
   134cc:	str	r1, [sp, #60]	; 0x3c
   134d0:	str	r4, [sp, #92]	; 0x5c
   134d4:	ldr	r2, [sp, #32]
   134d8:	add	r7, r9, fp
   134dc:	add	r0, sp, #104	; 0x68
   134e0:	mov	r3, r5
   134e4:	add	r4, r2, r7
   134e8:	rsb	r2, r7, r8
   134ec:	mov	r1, r4
   134f0:	bl	110d0 <mbrtowc@plt>
   134f4:	subs	r2, r0, #0
   134f8:	beq	13604 <close_stdout@@Base+0x1164>
   134fc:	cmn	r2, #1
   13500:	beq	1372c <close_stdout@@Base+0x128c>
   13504:	cmn	r2, #2
   13508:	beq	136d0 <close_stdout@@Base+0x1230>
   1350c:	ldr	r3, [sp, #36]	; 0x24
   13510:	ldr	r0, [sp, #160]	; 0xa0
   13514:	cmp	r0, #2
   13518:	movne	r3, #0
   1351c:	andeq	r3, r3, #1
   13520:	cmp	r3, #0
   13524:	beq	135e0 <close_stdout@@Base+0x1140>
   13528:	cmp	r2, #1
   1352c:	beq	135e0 <close_stdout@@Base+0x1140>
   13530:	ldr	r1, [sp, #84]	; 0x54
   13534:	add	r3, r1, r2
   13538:	add	r7, r3, r7
   1353c:	ldrb	r3, [r4, #1]!
   13540:	sub	r3, r3, #91	; 0x5b
   13544:	cmp	r3, #33	; 0x21
   13548:	addls	pc, pc, r3, lsl #2
   1354c:	b	135d8 <close_stdout@@Base+0x1138>
   13550:	b	12fd0 <close_stdout@@Base+0xb30>
   13554:	b	12fd0 <close_stdout@@Base+0xb30>
   13558:	b	135d8 <close_stdout@@Base+0x1138>
   1355c:	b	12fd0 <close_stdout@@Base+0xb30>
   13560:	b	135d8 <close_stdout@@Base+0x1138>
   13564:	b	12fd0 <close_stdout@@Base+0xb30>
   13568:	b	135d8 <close_stdout@@Base+0x1138>
   1356c:	b	135d8 <close_stdout@@Base+0x1138>
   13570:	b	135d8 <close_stdout@@Base+0x1138>
   13574:	b	135d8 <close_stdout@@Base+0x1138>
   13578:	b	135d8 <close_stdout@@Base+0x1138>
   1357c:	b	135d8 <close_stdout@@Base+0x1138>
   13580:	b	135d8 <close_stdout@@Base+0x1138>
   13584:	b	135d8 <close_stdout@@Base+0x1138>
   13588:	b	135d8 <close_stdout@@Base+0x1138>
   1358c:	b	135d8 <close_stdout@@Base+0x1138>
   13590:	b	135d8 <close_stdout@@Base+0x1138>
   13594:	b	135d8 <close_stdout@@Base+0x1138>
   13598:	b	135d8 <close_stdout@@Base+0x1138>
   1359c:	b	135d8 <close_stdout@@Base+0x1138>
   135a0:	b	135d8 <close_stdout@@Base+0x1138>
   135a4:	b	135d8 <close_stdout@@Base+0x1138>
   135a8:	b	135d8 <close_stdout@@Base+0x1138>
   135ac:	b	135d8 <close_stdout@@Base+0x1138>
   135b0:	b	135d8 <close_stdout@@Base+0x1138>
   135b4:	b	135d8 <close_stdout@@Base+0x1138>
   135b8:	b	135d8 <close_stdout@@Base+0x1138>
   135bc:	b	135d8 <close_stdout@@Base+0x1138>
   135c0:	b	135d8 <close_stdout@@Base+0x1138>
   135c4:	b	135d8 <close_stdout@@Base+0x1138>
   135c8:	b	135d8 <close_stdout@@Base+0x1138>
   135cc:	b	135d8 <close_stdout@@Base+0x1138>
   135d0:	b	135d8 <close_stdout@@Base+0x1138>
   135d4:	b	12fd0 <close_stdout@@Base+0xb30>
   135d8:	cmp	r4, r7
   135dc:	bne	1353c <close_stdout@@Base+0x109c>
   135e0:	ldr	r0, [sp, #104]	; 0x68
   135e4:	add	r9, r9, r2
   135e8:	bl	11088 <iswprint@plt>
   135ec:	cmp	r0, #0
   135f0:	mov	r0, r5
   135f4:	moveq	r6, #0
   135f8:	bl	11004 <mbsinit@plt>
   135fc:	cmp	r0, #0
   13600:	beq	134d4 <close_stdout@@Base+0x1034>
   13604:	mov	ip, r6
   13608:	eor	r2, ip, #1
   1360c:	str	r9, [sp, #60]	; 0x3c
   13610:	ldr	r4, [sp, #92]	; 0x5c
   13614:	uxtb	r2, r2
   13618:	ldr	r9, [sp, #88]	; 0x58
   1361c:	ldr	r6, [sp, #96]	; 0x60
   13620:	ldr	r5, [sp, #100]	; 0x64
   13624:	ldr	r3, [sp, #60]	; 0x3c
   13628:	cmp	r3, #1
   1362c:	bls	131b0 <close_stdout@@Base+0xd10>
   13630:	ldr	r0, [sp, #24]
   13634:	and	r2, r2, r0
   13638:	b	131bc <close_stdout@@Base+0xd1c>
   1363c:	ldr	r2, [sp, #164]	; 0xa4
   13640:	tst	r2, #1
   13644:	addne	fp, fp, #1
   13648:	bne	12b78 <close_stdout@@Base+0x6d8>
   1364c:	b	12e88 <close_stdout@@Base+0x9e8>
   13650:	ldr	r0, [sp, #36]	; 0x24
   13654:	cmp	r0, #0
   13658:	beq	12e88 <close_stdout@@Base+0x9e8>
   1365c:	b	12fd0 <close_stdout@@Base+0xb30>
   13660:	ldr	r2, [sp, #32]
   13664:	ldrb	r3, [r2, #1]
   13668:	adds	r3, r3, #0
   1366c:	movne	r3, #1
   13670:	b	12fa4 <close_stdout@@Base+0xb04>
   13674:	bl	11238 <abort@plt>
   13678:	ldr	r8, [sp, #60]	; 0x3c
   1367c:	b	12fd0 <close_stdout@@Base+0xb30>
   13680:	ldr	r0, [sp, #32]
   13684:	bl	1116c <strlen@plt>
   13688:	mov	r8, r0
   1368c:	b	13498 <close_stdout@@Base+0xff8>
   13690:	ldr	r2, [pc, #288]	; 137b8 <close_stdout@@Base+0x1318>
   13694:	mov	r1, #1
   13698:	mov	r9, r1
   1369c:	str	r1, [sp, #24]
   136a0:	add	r2, pc, r2
   136a4:	str	r1, [sp, #28]
   136a8:	str	r2, [sp, #52]	; 0x34
   136ac:	b	12b54 <close_stdout@@Base+0x6b4>
   136b0:	ldr	r2, [pc, #260]	; 137bc <close_stdout@@Base+0x131c>
   136b4:	mov	r3, #1
   136b8:	mov	r9, r3
   136bc:	str	r3, [sp, #28]
   136c0:	add	r2, pc, r2
   136c4:	str	sl, [sp, #24]
   136c8:	str	r2, [sp, #52]	; 0x34
   136cc:	b	12b54 <close_stdout@@Base+0x6b4>
   136d0:	cmp	r8, r7
   136d4:	str	r9, [sp, #60]	; 0x3c
   136d8:	mov	ip, r4
   136dc:	ldr	r6, [sp, #96]	; 0x60
   136e0:	ldr	r9, [sp, #88]	; 0x58
   136e4:	ldr	r4, [sp, #92]	; 0x5c
   136e8:	ldr	r5, [sp, #100]	; 0x64
   136ec:	bls	13724 <close_stdout@@Base+0x1284>
   136f0:	ldrb	r3, [ip]
   136f4:	cmp	r3, #0
   136f8:	beq	13724 <close_stdout@@Base+0x1284>
   136fc:	ldr	r3, [sp, #60]	; 0x3c
   13700:	b	13710 <close_stdout@@Base+0x1270>
   13704:	ldrb	r2, [r5, r3]
   13708:	cmp	r2, #0
   1370c:	beq	13720 <close_stdout@@Base+0x1280>
   13710:	add	r3, r3, #1
   13714:	add	r2, fp, r3
   13718:	cmp	r8, r2
   1371c:	bhi	13704 <close_stdout@@Base+0x1264>
   13720:	str	r3, [sp, #60]	; 0x3c
   13724:	mov	r2, #1
   13728:	b	13624 <close_stdout@@Base+0x1184>
   1372c:	str	r9, [sp, #60]	; 0x3c
   13730:	mov	r2, #1
   13734:	ldr	r4, [sp, #92]	; 0x5c
   13738:	ldr	r6, [sp, #96]	; 0x60
   1373c:	ldr	r9, [sp, #88]	; 0x58
   13740:	ldr	r5, [sp, #100]	; 0x64
   13744:	b	13624 <close_stdout@@Base+0x1184>
   13748:	ldr	r9, [sp, #36]	; 0x24
   1374c:	b	13370 <close_stdout@@Base+0xed0>
   13750:	bl	11040 <__stack_chk_fail@plt>
   13754:	ldr	r1, [pc, #100]	; 137c0 <close_stdout@@Base+0x1320>
   13758:	mov	r3, #0
   1375c:	mov	r0, #1
   13760:	str	r3, [sp, #24]
   13764:	add	r1, pc, r1
   13768:	str	r0, [sp, #28]
   1376c:	mov	r9, r3
   13770:	str	r1, [sp, #52]	; 0x34
   13774:	b	12b54 <close_stdout@@Base+0x6b4>
   13778:	ldr	r0, [pc, #68]	; 137c4 <close_stdout@@Base+0x1324>
   1377c:	mov	r3, #1
   13780:	mov	r9, #0
   13784:	str	r3, [sp, #24]
   13788:	add	r0, pc, r0
   1378c:	str	r3, [sp, #28]
   13790:	str	r0, [sp, #52]	; 0x34
   13794:	b	12b54 <close_stdout@@Base+0x6b4>
   13798:	andeq	r5, r1, ip, lsr r5
   1379c:	andeq	r0, r0, r0, lsl #2
   137a0:	andeq	r3, r0, r0, lsr #17
   137a4:	andeq	r3, r0, ip, ror r8
   137a8:	andeq	r3, r0, r8, lsr r8
   137ac:	andeq	r3, r0, r4, lsl r8
   137b0:	muleq	r0, r8, r7
   137b4:	andeq	r3, r0, r0, asr #14
   137b8:	muleq	r0, r8, r4
   137bc:	andeq	r3, r0, r4, ror r4
   137c0:	ldrdeq	r3, [r0], -r0
   137c4:			; <UNDEFINED> instruction: 0x000033b0
   137c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137cc:	sub	sp, sp, #44	; 0x2c
   137d0:	mov	r6, r0
   137d4:	mov	r9, r1
   137d8:	mov	sl, r2
   137dc:	mov	r4, r3
   137e0:	bl	11184 <__errno_location@plt>
   137e4:	ldr	fp, [pc, #412]	; 13988 <close_stdout@@Base+0x14e8>
   137e8:	cmp	r6, #0
   137ec:	add	fp, pc, fp
   137f0:	ldr	r5, [fp]
   137f4:	ldr	r1, [r0]
   137f8:	mov	r8, r0
   137fc:	str	r1, [sp, #36]	; 0x24
   13800:	blt	13980 <close_stdout@@Base+0x14e0>
   13804:	ldr	r3, [pc, #384]	; 1398c <close_stdout@@Base+0x14ec>
   13808:	add	r3, pc, r3
   1380c:	ldr	r3, [r3]
   13810:	cmp	r6, r3
   13814:	bcc	13868 <close_stdout@@Base+0x13c8>
   13818:	add	r7, r6, #1
   1381c:	cmn	r7, #-536870911	; 0xe0000001
   13820:	bhi	13984 <close_stdout@@Base+0x14e4>
   13824:	add	r3, fp, #4
   13828:	cmp	r5, r3
   1382c:	beq	13958 <close_stdout@@Base+0x14b8>
   13830:	mov	r0, r5
   13834:	lsl	r1, r7, #3
   13838:	bl	14660 <close_stdout@@Base+0x21c0>
   1383c:	mov	r5, r0
   13840:	str	r0, [fp]
   13844:	ldr	fp, [pc, #324]	; 13990 <close_stdout@@Base+0x14f0>
   13848:	mov	r1, #0
   1384c:	add	fp, pc, fp
   13850:	ldr	r0, [fp]
   13854:	rsb	r2, r0, r7
   13858:	add	r0, r5, r0, lsl #3
   1385c:	lsl	r2, r2, #3
   13860:	bl	1119c <memset@plt>
   13864:	str	r7, [fp]
   13868:	add	r2, r4, #8
   1386c:	str	r2, [sp, #32]
   13870:	ldr	r1, [r4]
   13874:	add	fp, r5, r6, lsl #3
   13878:	ldr	lr, [sp, #32]
   1387c:	mov	r2, r9
   13880:	ldr	r3, [r4, #4]
   13884:	ldr	ip, [r5, r6, lsl #3]
   13888:	ldr	r7, [fp, #4]
   1388c:	orr	r3, r3, #1
   13890:	str	r1, [sp]
   13894:	str	r3, [sp, #4]
   13898:	mov	r1, ip
   1389c:	str	lr, [sp, #8]
   138a0:	mov	r0, r7
   138a4:	ldr	lr, [r4, #40]	; 0x28
   138a8:	str	r3, [sp, #28]
   138ac:	mov	r3, sl
   138b0:	str	lr, [sp, #12]
   138b4:	ldr	lr, [r4, #44]	; 0x2c
   138b8:	str	ip, [sp, #24]
   138bc:	str	lr, [sp, #16]
   138c0:	bl	12aa0 <close_stdout@@Base+0x600>
   138c4:	ldr	ip, [sp, #24]
   138c8:	cmp	ip, r0
   138cc:	bhi	13944 <close_stdout@@Base+0x14a4>
   138d0:	ldr	r3, [pc, #188]	; 13994 <close_stdout@@Base+0x14f4>
   138d4:	add	r1, r0, #1
   138d8:	str	r1, [r5, r6, lsl #3]
   138dc:	add	r3, pc, r3
   138e0:	cmp	r7, r3
   138e4:	beq	138f8 <close_stdout@@Base+0x1458>
   138e8:	mov	r0, r7
   138ec:	str	r1, [sp, #24]
   138f0:	bl	10fe0 <free@plt>
   138f4:	ldr	r1, [sp, #24]
   138f8:	mov	r0, r1
   138fc:	str	r1, [sp, #24]
   13900:	bl	14608 <close_stdout@@Base+0x2168>
   13904:	ldr	r3, [sp, #28]
   13908:	ldr	lr, [sp, #32]
   1390c:	mov	r2, r9
   13910:	str	r0, [fp, #4]
   13914:	mov	r7, r0
   13918:	ldr	ip, [r4]
   1391c:	str	r3, [sp, #4]
   13920:	mov	r3, sl
   13924:	str	lr, [sp, #8]
   13928:	str	ip, [sp]
   1392c:	ldr	ip, [r4, #40]	; 0x28
   13930:	ldr	r1, [sp, #24]
   13934:	str	ip, [sp, #12]
   13938:	ldr	ip, [r4, #44]	; 0x2c
   1393c:	str	ip, [sp, #16]
   13940:	bl	12aa0 <close_stdout@@Base+0x600>
   13944:	ldr	r1, [sp, #36]	; 0x24
   13948:	mov	r0, r7
   1394c:	str	r1, [r8]
   13950:	add	sp, sp, #44	; 0x2c
   13954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13958:	lsl	r1, r7, #3
   1395c:	mov	r0, #0
   13960:	str	r3, [sp, #24]
   13964:	bl	14660 <close_stdout@@Base+0x21c0>
   13968:	ldr	r3, [sp, #24]
   1396c:	mov	r5, r0
   13970:	ldm	r3, {r0, r1}
   13974:	str	r5, [fp]
   13978:	stm	r5, {r0, r1}
   1397c:	b	13844 <close_stdout@@Base+0x13a4>
   13980:	bl	11238 <abort@plt>
   13984:	bl	1481c <close_stdout@@Base+0x237c>
   13988:	andeq	r4, r1, r8, lsl #19
   1398c:	andeq	r4, r1, r8, lsr r9
   13990:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13994:	andeq	r4, r1, r0, ror #17
   13998:	push	{r4, r5, r6, lr}
   1399c:	mov	r5, r0
   139a0:	bl	11184 <__errno_location@plt>
   139a4:	cmp	r5, #0
   139a8:	mov	r1, #48	; 0x30
   139ac:	mov	r4, r0
   139b0:	ldr	r0, [pc, #24]	; 139d0 <close_stdout@@Base+0x1530>
   139b4:	ldr	r6, [r4]
   139b8:	add	r0, pc, r0
   139bc:	add	r0, r0, #256	; 0x100
   139c0:	movne	r0, r5
   139c4:	bl	147dc <close_stdout@@Base+0x233c>
   139c8:	str	r6, [r4]
   139cc:	pop	{r4, r5, r6, pc}
   139d0:	andeq	r4, r1, r4, lsl #16
   139d4:	cmp	r0, #0
   139d8:	beq	139e4 <close_stdout@@Base+0x1544>
   139dc:	ldr	r0, [r0]
   139e0:	bx	lr
   139e4:	ldr	r0, [pc, #12]	; 139f8 <close_stdout@@Base+0x1558>
   139e8:	add	r0, pc, r0
   139ec:	add	r0, r0, #256	; 0x100
   139f0:	ldr	r0, [r0]
   139f4:	bx	lr
   139f8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   139fc:	cmp	r0, #0
   13a00:	beq	13a0c <close_stdout@@Base+0x156c>
   13a04:	str	r1, [r0]
   13a08:	bx	lr
   13a0c:	ldr	r0, [pc, #12]	; 13a20 <close_stdout@@Base+0x1580>
   13a10:	add	r0, pc, r0
   13a14:	add	r0, r0, #256	; 0x100
   13a18:	str	r1, [r0]
   13a1c:	bx	lr
   13a20:	andeq	r4, r1, ip, lsr #15
   13a24:	cmp	r0, #0
   13a28:	movne	r3, r0
   13a2c:	beq	13a5c <close_stdout@@Base+0x15bc>
   13a30:	lsr	ip, r1, #5
   13a34:	and	r1, r1, #31
   13a38:	add	r3, r3, ip, lsl #2
   13a3c:	ldr	ip, [r3, #8]
   13a40:	lsr	r0, ip, r1
   13a44:	eor	r2, r0, r2
   13a48:	and	r0, r0, #1
   13a4c:	and	r2, r2, #1
   13a50:	eor	ip, ip, r2, lsl r1
   13a54:	str	ip, [r3, #8]
   13a58:	bx	lr
   13a5c:	ldr	r3, [pc, #8]	; 13a6c <close_stdout@@Base+0x15cc>
   13a60:	add	r3, pc, r3
   13a64:	add	r3, r3, #256	; 0x100
   13a68:	b	13a30 <close_stdout@@Base+0x1590>
   13a6c:	andeq	r4, r1, ip, asr r7
   13a70:	subs	r3, r0, #0
   13a74:	beq	13a84 <close_stdout@@Base+0x15e4>
   13a78:	ldr	r0, [r3, #4]
   13a7c:	str	r1, [r3, #4]
   13a80:	bx	lr
   13a84:	ldr	r3, [pc, #8]	; 13a94 <close_stdout@@Base+0x15f4>
   13a88:	add	r3, pc, r3
   13a8c:	add	r3, r3, #256	; 0x100
   13a90:	b	13a78 <close_stdout@@Base+0x15d8>
   13a94:	andeq	r4, r1, r4, lsr r7
   13a98:	cmp	r0, #0
   13a9c:	push	{r3, lr}
   13aa0:	beq	13ac4 <close_stdout@@Base+0x1624>
   13aa4:	cmp	r2, #0
   13aa8:	cmpne	r1, #0
   13aac:	mov	r3, #8
   13ab0:	strne	r1, [r0, #40]	; 0x28
   13ab4:	str	r3, [r0]
   13ab8:	strne	r2, [r0, #44]	; 0x2c
   13abc:	popne	{r3, pc}
   13ac0:	bl	11238 <abort@plt>
   13ac4:	ldr	r0, [pc, #8]	; 13ad4 <close_stdout@@Base+0x1634>
   13ac8:	add	r0, pc, r0
   13acc:	add	r0, r0, #256	; 0x100
   13ad0:	b	13aa4 <close_stdout@@Base+0x1604>
   13ad4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13ad8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13adc:	sub	sp, sp, #24
   13ae0:	mov	r7, r0
   13ae4:	mov	sl, r1
   13ae8:	ldr	r4, [sp, #56]	; 0x38
   13aec:	mov	r9, r2
   13af0:	mov	r8, r3
   13af4:	cmp	r4, #0
   13af8:	beq	13b4c <close_stdout@@Base+0x16ac>
   13afc:	bl	11184 <__errno_location@plt>
   13b00:	ldr	r3, [r4]
   13b04:	add	lr, r4, #8
   13b08:	mov	r1, sl
   13b0c:	mov	r2, r9
   13b10:	ldr	r6, [r0]
   13b14:	mov	r5, r0
   13b18:	str	r3, [sp]
   13b1c:	mov	r0, r7
   13b20:	ldr	ip, [r4, #4]
   13b24:	mov	r3, r8
   13b28:	stmib	sp, {ip, lr}
   13b2c:	ldr	ip, [r4, #40]	; 0x28
   13b30:	str	ip, [sp, #12]
   13b34:	ldr	ip, [r4, #44]	; 0x2c
   13b38:	str	ip, [sp, #16]
   13b3c:	bl	12aa0 <close_stdout@@Base+0x600>
   13b40:	str	r6, [r5]
   13b44:	add	sp, sp, #24
   13b48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b4c:	ldr	r4, [pc, #8]	; 13b5c <close_stdout@@Base+0x16bc>
   13b50:	add	r4, pc, r4
   13b54:	add	r4, r4, #256	; 0x100
   13b58:	b	13afc <close_stdout@@Base+0x165c>
   13b5c:	andeq	r4, r1, ip, ror #12
   13b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b64:	subs	r4, r3, #0
   13b68:	sub	sp, sp, #36	; 0x24
   13b6c:	mov	r7, r0
   13b70:	mov	r6, r1
   13b74:	mov	r5, r2
   13b78:	beq	13c34 <close_stdout@@Base+0x1794>
   13b7c:	bl	11184 <__errno_location@plt>
   13b80:	ldr	r3, [r4]
   13b84:	ldr	sl, [r4, #4]
   13b88:	add	r9, r4, #8
   13b8c:	mov	r8, r0
   13b90:	mov	r0, #0
   13b94:	ldr	r2, [r8]
   13b98:	cmp	r5, r0
   13b9c:	orreq	sl, sl, #1
   13ba0:	str	r9, [sp, #8]
   13ba4:	mov	r1, r0
   13ba8:	stm	sp, {r3, sl}
   13bac:	mov	r3, r6
   13bb0:	ldr	ip, [r4, #40]	; 0x28
   13bb4:	str	r2, [sp, #28]
   13bb8:	mov	r2, r7
   13bbc:	str	ip, [sp, #12]
   13bc0:	ldr	ip, [r4, #44]	; 0x2c
   13bc4:	str	ip, [sp, #16]
   13bc8:	bl	12aa0 <close_stdout@@Base+0x600>
   13bcc:	add	r1, r0, #1
   13bd0:	mov	fp, r0
   13bd4:	str	r1, [sp, #24]
   13bd8:	mov	r0, r1
   13bdc:	bl	14608 <close_stdout@@Base+0x2168>
   13be0:	ldr	lr, [r4]
   13be4:	str	sl, [sp, #4]
   13be8:	mov	r3, r6
   13bec:	str	r9, [sp, #8]
   13bf0:	mov	r2, r7
   13bf4:	str	lr, [sp]
   13bf8:	ldr	lr, [r4, #40]	; 0x28
   13bfc:	ldr	r1, [sp, #24]
   13c00:	str	lr, [sp, #12]
   13c04:	ldr	lr, [r4, #44]	; 0x2c
   13c08:	str	lr, [sp, #16]
   13c0c:	str	r0, [sp, #24]
   13c10:	bl	12aa0 <close_stdout@@Base+0x600>
   13c14:	ldr	r3, [sp, #28]
   13c18:	cmp	r5, #0
   13c1c:	str	r3, [r8]
   13c20:	ldr	ip, [sp, #24]
   13c24:	strne	fp, [r5]
   13c28:	mov	r0, ip
   13c2c:	add	sp, sp, #36	; 0x24
   13c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c34:	ldr	r4, [pc, #8]	; 13c44 <close_stdout@@Base+0x17a4>
   13c38:	add	r4, pc, r4
   13c3c:	add	r4, r4, #256	; 0x100
   13c40:	b	13b7c <close_stdout@@Base+0x16dc>
   13c44:	andeq	r4, r1, r4, lsl #11
   13c48:	mov	r3, r2
   13c4c:	mov	r2, #0
   13c50:	b	13b60 <close_stdout@@Base+0x16c0>
   13c54:	ldr	r2, [pc, #152]	; 13cf4 <close_stdout@@Base+0x1854>
   13c58:	push	{r3, r4, r5, r6, r7, lr}
   13c5c:	add	r2, pc, r2
   13c60:	ldr	r3, [pc, #144]	; 13cf8 <close_stdout@@Base+0x1858>
   13c64:	ldr	r6, [r2]
   13c68:	add	r3, pc, r3
   13c6c:	cmp	r6, #1
   13c70:	ldr	r7, [r3]
   13c74:	movhi	r4, #1
   13c78:	movhi	r5, r7
   13c7c:	bls	13c98 <close_stdout@@Base+0x17f8>
   13c80:	ldr	r0, [r5, #12]
   13c84:	add	r4, r4, #1
   13c88:	bl	10fe0 <free@plt>
   13c8c:	cmp	r4, r6
   13c90:	add	r5, r5, #8
   13c94:	bne	13c80 <close_stdout@@Base+0x17e0>
   13c98:	ldr	r4, [pc, #92]	; 13cfc <close_stdout@@Base+0x185c>
   13c9c:	ldr	r0, [r7, #4]
   13ca0:	add	r4, pc, r4
   13ca4:	cmp	r0, r4
   13ca8:	beq	13cc0 <close_stdout@@Base+0x1820>
   13cac:	bl	10fe0 <free@plt>
   13cb0:	ldr	r3, [pc, #72]	; 13d00 <close_stdout@@Base+0x1860>
   13cb4:	mov	r2, #256	; 0x100
   13cb8:	add	r3, pc, r3
   13cbc:	stmib	r3, {r2, r4}
   13cc0:	ldr	r4, [pc, #60]	; 13d04 <close_stdout@@Base+0x1864>
   13cc4:	add	r4, pc, r4
   13cc8:	add	r5, r4, #4
   13ccc:	cmp	r7, r5
   13cd0:	beq	13ce0 <close_stdout@@Base+0x1840>
   13cd4:	mov	r0, r7
   13cd8:	bl	10fe0 <free@plt>
   13cdc:	str	r5, [r4]
   13ce0:	ldr	r3, [pc, #32]	; 13d08 <close_stdout@@Base+0x1868>
   13ce4:	mov	r2, #1
   13ce8:	add	r3, pc, r3
   13cec:	str	r2, [r3]
   13cf0:	pop	{r3, r4, r5, r6, r7, pc}
   13cf4:	andeq	r4, r1, r4, ror #9
   13cf8:	andeq	r4, r1, ip, lsl #10
   13cfc:	andeq	r4, r1, ip, lsl r5
   13d00:			; <UNDEFINED> instruction: 0x000144bc
   13d04:			; <UNDEFINED> instruction: 0x000144b0
   13d08:	andeq	r4, r1, r8, asr r4
   13d0c:	ldr	r3, [pc, #12]	; 13d20 <close_stdout@@Base+0x1880>
   13d10:	mvn	r2, #0
   13d14:	add	r3, pc, r3
   13d18:	add	r3, r3, #256	; 0x100
   13d1c:	b	137c8 <close_stdout@@Base+0x1328>
   13d20:	andeq	r4, r1, r8, lsr #9
   13d24:	ldr	r3, [pc, #8]	; 13d34 <close_stdout@@Base+0x1894>
   13d28:	add	r3, pc, r3
   13d2c:	add	r3, r3, #256	; 0x100
   13d30:	b	137c8 <close_stdout@@Base+0x1328>
   13d34:	muleq	r1, r4, r4
   13d38:	mov	r1, r0
   13d3c:	mov	r0, #0
   13d40:	b	13d0c <close_stdout@@Base+0x186c>
   13d44:	mov	r2, r1
   13d48:	mov	r1, r0
   13d4c:	mov	r0, #0
   13d50:	b	13d24 <close_stdout@@Base+0x1884>
   13d54:	ldr	r3, [pc, #92]	; 13db8 <close_stdout@@Base+0x1918>
   13d58:	ldr	ip, [pc, #92]	; 13dbc <close_stdout@@Base+0x191c>
   13d5c:	add	r3, pc, r3
   13d60:	push	{r4, r5, r6, r7, lr}
   13d64:	sub	sp, sp, #60	; 0x3c
   13d68:	ldr	r4, [r3, ip]
   13d6c:	add	r5, sp, #4
   13d70:	mov	r7, r2
   13d74:	mov	r6, r0
   13d78:	mov	r0, r5
   13d7c:	ldr	r3, [r4]
   13d80:	str	r3, [sp, #52]	; 0x34
   13d84:	bl	128e8 <close_stdout@@Base+0x448>
   13d88:	mov	r3, r5
   13d8c:	mvn	r2, #0
   13d90:	mov	r0, r6
   13d94:	mov	r1, r7
   13d98:	bl	137c8 <close_stdout@@Base+0x1328>
   13d9c:	ldr	r2, [sp, #52]	; 0x34
   13da0:	ldr	r3, [r4]
   13da4:	cmp	r2, r3
   13da8:	bne	13db4 <close_stdout@@Base+0x1914>
   13dac:	add	sp, sp, #60	; 0x3c
   13db0:	pop	{r4, r5, r6, r7, pc}
   13db4:	bl	11040 <__stack_chk_fail@plt>
   13db8:	muleq	r1, ip, r2
   13dbc:	andeq	r0, r0, r0, lsl #2
   13dc0:	ldr	ip, [pc, #96]	; 13e28 <close_stdout@@Base+0x1988>
   13dc4:	push	{r4, r5, r6, r7, r8, lr}
   13dc8:	add	ip, pc, ip
   13dcc:	ldr	lr, [pc, #88]	; 13e2c <close_stdout@@Base+0x198c>
   13dd0:	sub	sp, sp, #56	; 0x38
   13dd4:	mov	r8, r3
   13dd8:	add	r5, sp, #4
   13ddc:	mov	r7, r2
   13de0:	mov	r6, r0
   13de4:	ldr	r4, [ip, lr]
   13de8:	mov	r0, r5
   13dec:	ldr	r3, [r4]
   13df0:	str	r3, [sp, #52]	; 0x34
   13df4:	bl	128e8 <close_stdout@@Base+0x448>
   13df8:	mov	r2, r8
   13dfc:	mov	r3, r5
   13e00:	mov	r0, r6
   13e04:	mov	r1, r7
   13e08:	bl	137c8 <close_stdout@@Base+0x1328>
   13e0c:	ldr	r2, [sp, #52]	; 0x34
   13e10:	ldr	r3, [r4]
   13e14:	cmp	r2, r3
   13e18:	bne	13e24 <close_stdout@@Base+0x1984>
   13e1c:	add	sp, sp, #56	; 0x38
   13e20:	pop	{r4, r5, r6, r7, r8, pc}
   13e24:	bl	11040 <__stack_chk_fail@plt>
   13e28:	andeq	r4, r1, r0, lsr r2
   13e2c:	andeq	r0, r0, r0, lsl #2
   13e30:	mov	r2, r1
   13e34:	mov	r1, r0
   13e38:	mov	r0, #0
   13e3c:	b	13d54 <close_stdout@@Base+0x18b4>
   13e40:	mov	ip, r1
   13e44:	mov	r3, r2
   13e48:	mov	r1, r0
   13e4c:	mov	r2, ip
   13e50:	mov	r0, #0
   13e54:	b	13dc0 <close_stdout@@Base+0x1920>
   13e58:	push	{r4, r5, r6, r7, r8, lr}
   13e5c:	mov	r5, r2
   13e60:	ldr	lr, [pc, #136]	; 13ef0 <close_stdout@@Base+0x1a50>
   13e64:	mov	r7, r0
   13e68:	mov	r6, r1
   13e6c:	ldr	r4, [pc, #128]	; 13ef4 <close_stdout@@Base+0x1a54>
   13e70:	add	lr, pc, lr
   13e74:	sub	sp, sp, #56	; 0x38
   13e78:	add	lr, lr, #256	; 0x100
   13e7c:	ldr	r8, [pc, #116]	; 13ef8 <close_stdout@@Base+0x1a58>
   13e80:	add	r4, pc, r4
   13e84:	add	ip, sp, #4
   13e88:	ldm	lr!, {r0, r1, r2, r3}
   13e8c:	ldr	r4, [r4, r8]
   13e90:	stmia	ip!, {r0, r1, r2, r3}
   13e94:	ldm	lr!, {r0, r1, r2, r3}
   13e98:	ldr	r8, [r4]
   13e9c:	stmia	ip!, {r0, r1, r2, r3}
   13ea0:	ldm	lr, {r0, r1, r2, r3}
   13ea4:	str	r8, [sp, #52]	; 0x34
   13ea8:	stm	ip, {r0, r1, r2, r3}
   13eac:	mov	r1, r5
   13eb0:	add	r5, sp, #4
   13eb4:	mov	r2, #1
   13eb8:	mov	r0, r5
   13ebc:	bl	13a24 <close_stdout@@Base+0x1584>
   13ec0:	mov	r2, r6
   13ec4:	mov	r3, r5
   13ec8:	mov	r1, r7
   13ecc:	mov	r0, #0
   13ed0:	bl	137c8 <close_stdout@@Base+0x1328>
   13ed4:	ldr	r2, [sp, #52]	; 0x34
   13ed8:	ldr	r3, [r4]
   13edc:	cmp	r2, r3
   13ee0:	bne	13eec <close_stdout@@Base+0x1a4c>
   13ee4:	add	sp, sp, #56	; 0x38
   13ee8:	pop	{r4, r5, r6, r7, r8, pc}
   13eec:	bl	11040 <__stack_chk_fail@plt>
   13ef0:	andeq	r4, r1, ip, asr #6
   13ef4:	andeq	r4, r1, r8, ror r1
   13ef8:	andeq	r0, r0, r0, lsl #2
   13efc:	mov	r2, r1
   13f00:	mvn	r1, #0
   13f04:	b	13e58 <close_stdout@@Base+0x19b8>
   13f08:	mov	r1, #58	; 0x3a
   13f0c:	b	13efc <close_stdout@@Base+0x1a5c>
   13f10:	mov	r2, #58	; 0x3a
   13f14:	b	13e58 <close_stdout@@Base+0x19b8>
   13f18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f1c:	mov	r5, r2
   13f20:	ldr	lr, [pc, #144]	; 13fb8 <close_stdout@@Base+0x1b18>
   13f24:	mov	r8, r0
   13f28:	mov	r9, r1
   13f2c:	mov	r7, r3
   13f30:	add	lr, pc, lr
   13f34:	ldr	r4, [pc, #128]	; 13fbc <close_stdout@@Base+0x1b1c>
   13f38:	add	lr, lr, #256	; 0x100
   13f3c:	sub	sp, sp, #56	; 0x38
   13f40:	ldr	sl, [pc, #120]	; 13fc0 <close_stdout@@Base+0x1b20>
   13f44:	add	r4, pc, r4
   13f48:	ldm	lr!, {r0, r1, r2, r3}
   13f4c:	add	ip, sp, #4
   13f50:	ldr	r4, [r4, sl]
   13f54:	ldr	r6, [sp, #88]	; 0x58
   13f58:	stmia	ip!, {r0, r1, r2, r3}
   13f5c:	ldm	lr!, {r0, r1, r2, r3}
   13f60:	ldr	sl, [r4]
   13f64:	stmia	ip!, {r0, r1, r2, r3}
   13f68:	ldm	lr, {r0, r1, r2, r3}
   13f6c:	str	sl, [sp, #52]	; 0x34
   13f70:	stm	ip, {r0, r1, r2, r3}
   13f74:	mov	r2, r5
   13f78:	add	r5, sp, #4
   13f7c:	mov	r1, r9
   13f80:	mov	r0, r5
   13f84:	bl	13a98 <close_stdout@@Base+0x15f8>
   13f88:	mov	r2, r6
   13f8c:	mov	r3, r5
   13f90:	mov	r0, r8
   13f94:	mov	r1, r7
   13f98:	bl	137c8 <close_stdout@@Base+0x1328>
   13f9c:	ldr	r2, [sp, #52]	; 0x34
   13fa0:	ldr	r3, [r4]
   13fa4:	cmp	r2, r3
   13fa8:	bne	13fb4 <close_stdout@@Base+0x1b14>
   13fac:	add	sp, sp, #56	; 0x38
   13fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13fb4:	bl	11040 <__stack_chk_fail@plt>
   13fb8:	andeq	r4, r1, ip, lsl #5
   13fbc:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fc0:	andeq	r0, r0, r0, lsl #2
   13fc4:	push	{lr}		; (str lr, [sp, #-4]!)
   13fc8:	sub	sp, sp, #12
   13fcc:	mvn	ip, #0
   13fd0:	str	ip, [sp]
   13fd4:	bl	13f18 <close_stdout@@Base+0x1a78>
   13fd8:	add	sp, sp, #12
   13fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   13fe0:	mov	ip, r1
   13fe4:	mov	r3, r2
   13fe8:	mov	r1, r0
   13fec:	mov	r2, ip
   13ff0:	mov	r0, #0
   13ff4:	b	13fc4 <close_stdout@@Base+0x1b24>
   13ff8:	push	{lr}		; (str lr, [sp, #-4]!)
   13ffc:	sub	sp, sp, #12
   14000:	mov	lr, r1
   14004:	mov	ip, r2
   14008:	mov	r1, r0
   1400c:	str	r3, [sp]
   14010:	mov	r2, lr
   14014:	mov	r3, ip
   14018:	mov	r0, #0
   1401c:	bl	13f18 <close_stdout@@Base+0x1a78>
   14020:	add	sp, sp, #12
   14024:	pop	{pc}		; (ldr pc, [sp], #4)
   14028:	ldr	r3, [pc, #12]	; 1403c <close_stdout@@Base+0x1b9c>
   1402c:	ldr	ip, [pc, #12]	; 14040 <close_stdout@@Base+0x1ba0>
   14030:	add	r3, pc, r3
   14034:	ldr	r3, [r3, ip]
   14038:	b	137c8 <close_stdout@@Base+0x1328>
   1403c:	andeq	r3, r1, r8, asr #31
   14040:	strdeq	r0, [r0], -r8
   14044:	mov	r2, r1
   14048:	mov	r1, r0
   1404c:	mov	r0, #0
   14050:	b	14028 <close_stdout@@Base+0x1b88>
   14054:	mvn	r2, #0
   14058:	b	14028 <close_stdout@@Base+0x1b88>
   1405c:	mov	r1, r0
   14060:	mov	r0, #0
   14064:	b	14054 <close_stdout@@Base+0x1bb4>
   14068:	push	{r4, r5, r6, r7, lr}
   1406c:	cmp	r1, #0
   14070:	sub	sp, sp, #36	; 0x24
   14074:	ldr	r7, [pc, #896]	; 143fc <close_stdout@@Base+0x1f5c>
   14078:	mov	ip, r3
   1407c:	mov	r5, r0
   14080:	add	r7, pc, r7
   14084:	ldr	r4, [sp, #56]	; 0x38
   14088:	ldr	r6, [sp, #60]	; 0x3c
   1408c:	beq	143d0 <close_stdout@@Base+0x1f30>
   14090:	str	r2, [sp]
   14094:	mov	r3, r1
   14098:	ldr	r2, [pc, #864]	; 14400 <close_stdout@@Base+0x1f60>
   1409c:	mov	r1, #1
   140a0:	str	ip, [sp, #4]
   140a4:	add	r2, pc, r2
   140a8:	bl	111cc <__fprintf_chk@plt>
   140ac:	ldr	r1, [pc, #848]	; 14404 <close_stdout@@Base+0x1f64>
   140b0:	mov	r2, #5
   140b4:	mov	r0, #0
   140b8:	add	r1, pc, r1
   140bc:	bl	11034 <dcgettext@plt>
   140c0:	ldr	r2, [pc, #832]	; 14408 <close_stdout@@Base+0x1f68>
   140c4:	movw	ip, #2013	; 0x7dd
   140c8:	mov	r1, #1
   140cc:	ldr	r2, [r7, r2]
   140d0:	str	ip, [sp]
   140d4:	mov	r3, r0
   140d8:	mov	r0, r5
   140dc:	bl	111cc <__fprintf_chk@plt>
   140e0:	ldr	r1, [pc, #804]	; 1440c <close_stdout@@Base+0x1f6c>
   140e4:	mov	r0, #0
   140e8:	mov	r2, #5
   140ec:	add	r1, pc, r1
   140f0:	bl	11034 <dcgettext@plt>
   140f4:	mov	r1, r5
   140f8:	bl	10fa4 <fputs_unlocked@plt>
   140fc:	cmp	r6, #9
   14100:	addls	pc, pc, r6, lsl #2
   14104:	b	143ec <close_stdout@@Base+0x1f4c>
   14108:	b	1419c <close_stdout@@Base+0x1cfc>
   1410c:	b	141a0 <close_stdout@@Base+0x1d00>
   14110:	b	141d0 <close_stdout@@Base+0x1d30>
   14114:	b	14204 <close_stdout@@Base+0x1d64>
   14118:	b	14240 <close_stdout@@Base+0x1da0>
   1411c:	b	14280 <close_stdout@@Base+0x1de0>
   14120:	b	142c8 <close_stdout@@Base+0x1e28>
   14124:	b	14318 <close_stdout@@Base+0x1e78>
   14128:	b	14370 <close_stdout@@Base+0x1ed0>
   1412c:	b	14130 <close_stdout@@Base+0x1c90>
   14130:	ldr	r1, [pc, #728]	; 14410 <close_stdout@@Base+0x1f70>
   14134:	mov	r0, #0
   14138:	add	r1, pc, r1
   1413c:	mov	r2, #5
   14140:	bl	11034 <dcgettext@plt>
   14144:	ldm	r4, {r3, ip}
   14148:	mov	r1, #1
   1414c:	str	ip, [sp]
   14150:	ldr	ip, [r4, #8]
   14154:	str	ip, [sp, #4]
   14158:	ldr	ip, [r4, #12]
   1415c:	str	ip, [sp, #8]
   14160:	ldr	ip, [r4, #16]
   14164:	str	ip, [sp, #12]
   14168:	ldr	ip, [r4, #20]
   1416c:	str	ip, [sp, #16]
   14170:	ldr	ip, [r4, #24]
   14174:	str	ip, [sp, #20]
   14178:	ldr	ip, [r4, #28]
   1417c:	str	ip, [sp, #24]
   14180:	ldr	ip, [r4, #32]
   14184:	str	ip, [sp, #28]
   14188:	mov	r2, r0
   1418c:	mov	r0, r5
   14190:	bl	111cc <__fprintf_chk@plt>
   14194:	add	sp, sp, #36	; 0x24
   14198:	pop	{r4, r5, r6, r7, pc}
   1419c:	bl	11238 <abort@plt>
   141a0:	ldr	r1, [pc, #620]	; 14414 <close_stdout@@Base+0x1f74>
   141a4:	mov	r2, #5
   141a8:	mov	r0, #0
   141ac:	add	r1, pc, r1
   141b0:	bl	11034 <dcgettext@plt>
   141b4:	ldr	r3, [r4]
   141b8:	mov	r1, #1
   141bc:	mov	r2, r0
   141c0:	mov	r0, r5
   141c4:	add	sp, sp, #36	; 0x24
   141c8:	pop	{r4, r5, r6, r7, lr}
   141cc:	b	111cc <__fprintf_chk@plt>
   141d0:	ldr	r1, [pc, #576]	; 14418 <close_stdout@@Base+0x1f78>
   141d4:	mov	r2, #5
   141d8:	mov	r0, #0
   141dc:	add	r1, pc, r1
   141e0:	bl	11034 <dcgettext@plt>
   141e4:	ldm	r4, {r3, ip}
   141e8:	mov	r1, #1
   141ec:	str	ip, [sp, #56]	; 0x38
   141f0:	mov	r2, r0
   141f4:	mov	r0, r5
   141f8:	add	sp, sp, #36	; 0x24
   141fc:	pop	{r4, r5, r6, r7, lr}
   14200:	b	111cc <__fprintf_chk@plt>
   14204:	ldr	r1, [pc, #528]	; 1441c <close_stdout@@Base+0x1f7c>
   14208:	mov	r2, #5
   1420c:	mov	r0, #0
   14210:	add	r1, pc, r1
   14214:	bl	11034 <dcgettext@plt>
   14218:	ldm	r4, {r3, ip}
   1421c:	mov	r1, #1
   14220:	str	ip, [sp, #56]	; 0x38
   14224:	ldr	ip, [r4, #8]
   14228:	str	ip, [sp, #60]	; 0x3c
   1422c:	mov	r2, r0
   14230:	mov	r0, r5
   14234:	add	sp, sp, #36	; 0x24
   14238:	pop	{r4, r5, r6, r7, lr}
   1423c:	b	111cc <__fprintf_chk@plt>
   14240:	ldr	r1, [pc, #472]	; 14420 <close_stdout@@Base+0x1f80>
   14244:	mov	r2, #5
   14248:	mov	r0, #0
   1424c:	add	r1, pc, r1
   14250:	bl	11034 <dcgettext@plt>
   14254:	ldm	r4, {r3, ip}
   14258:	mov	r1, #1
   1425c:	str	ip, [sp]
   14260:	ldr	ip, [r4, #8]
   14264:	str	ip, [sp, #4]
   14268:	ldr	ip, [r4, #12]
   1426c:	str	ip, [sp, #8]
   14270:	mov	r2, r0
   14274:	mov	r0, r5
   14278:	bl	111cc <__fprintf_chk@plt>
   1427c:	b	14194 <close_stdout@@Base+0x1cf4>
   14280:	ldr	r1, [pc, #412]	; 14424 <close_stdout@@Base+0x1f84>
   14284:	mov	r2, #5
   14288:	mov	r0, #0
   1428c:	add	r1, pc, r1
   14290:	bl	11034 <dcgettext@plt>
   14294:	ldm	r4, {r3, ip}
   14298:	mov	r1, #1
   1429c:	str	ip, [sp]
   142a0:	ldr	ip, [r4, #8]
   142a4:	str	ip, [sp, #4]
   142a8:	ldr	ip, [r4, #12]
   142ac:	str	ip, [sp, #8]
   142b0:	ldr	ip, [r4, #16]
   142b4:	str	ip, [sp, #12]
   142b8:	mov	r2, r0
   142bc:	mov	r0, r5
   142c0:	bl	111cc <__fprintf_chk@plt>
   142c4:	b	14194 <close_stdout@@Base+0x1cf4>
   142c8:	ldr	r1, [pc, #344]	; 14428 <close_stdout@@Base+0x1f88>
   142cc:	mov	r2, #5
   142d0:	mov	r0, #0
   142d4:	add	r1, pc, r1
   142d8:	bl	11034 <dcgettext@plt>
   142dc:	ldm	r4, {r3, ip}
   142e0:	mov	r1, #1
   142e4:	str	ip, [sp]
   142e8:	ldr	ip, [r4, #8]
   142ec:	str	ip, [sp, #4]
   142f0:	ldr	ip, [r4, #12]
   142f4:	str	ip, [sp, #8]
   142f8:	ldr	ip, [r4, #16]
   142fc:	str	ip, [sp, #12]
   14300:	ldr	ip, [r4, #20]
   14304:	str	ip, [sp, #16]
   14308:	mov	r2, r0
   1430c:	mov	r0, r5
   14310:	bl	111cc <__fprintf_chk@plt>
   14314:	b	14194 <close_stdout@@Base+0x1cf4>
   14318:	ldr	r1, [pc, #268]	; 1442c <close_stdout@@Base+0x1f8c>
   1431c:	mov	r2, #5
   14320:	mov	r0, #0
   14324:	add	r1, pc, r1
   14328:	bl	11034 <dcgettext@plt>
   1432c:	ldm	r4, {r3, ip}
   14330:	mov	r1, #1
   14334:	str	ip, [sp]
   14338:	ldr	ip, [r4, #8]
   1433c:	str	ip, [sp, #4]
   14340:	ldr	ip, [r4, #12]
   14344:	str	ip, [sp, #8]
   14348:	ldr	ip, [r4, #16]
   1434c:	str	ip, [sp, #12]
   14350:	ldr	ip, [r4, #20]
   14354:	str	ip, [sp, #16]
   14358:	ldr	ip, [r4, #24]
   1435c:	str	ip, [sp, #20]
   14360:	mov	r2, r0
   14364:	mov	r0, r5
   14368:	bl	111cc <__fprintf_chk@plt>
   1436c:	b	14194 <close_stdout@@Base+0x1cf4>
   14370:	ldr	r1, [pc, #184]	; 14430 <close_stdout@@Base+0x1f90>
   14374:	mov	r2, #5
   14378:	mov	r0, #0
   1437c:	add	r1, pc, r1
   14380:	bl	11034 <dcgettext@plt>
   14384:	ldm	r4, {r3, ip}
   14388:	mov	r1, #1
   1438c:	str	ip, [sp]
   14390:	ldr	ip, [r4, #8]
   14394:	str	ip, [sp, #4]
   14398:	ldr	ip, [r4, #12]
   1439c:	str	ip, [sp, #8]
   143a0:	ldr	ip, [r4, #16]
   143a4:	str	ip, [sp, #12]
   143a8:	ldr	ip, [r4, #20]
   143ac:	str	ip, [sp, #16]
   143b0:	ldr	ip, [r4, #24]
   143b4:	str	ip, [sp, #20]
   143b8:	ldr	ip, [r4, #28]
   143bc:	str	ip, [sp, #24]
   143c0:	mov	r2, r0
   143c4:	mov	r0, r5
   143c8:	bl	111cc <__fprintf_chk@plt>
   143cc:	b	14194 <close_stdout@@Base+0x1cf4>
   143d0:	str	r3, [sp]
   143d4:	mov	r3, r2
   143d8:	ldr	r2, [pc, #84]	; 14434 <close_stdout@@Base+0x1f94>
   143dc:	mov	r1, #1
   143e0:	add	r2, pc, r2
   143e4:	bl	111cc <__fprintf_chk@plt>
   143e8:	b	140ac <close_stdout@@Base+0x1c0c>
   143ec:	ldr	r1, [pc, #68]	; 14438 <close_stdout@@Base+0x1f98>
   143f0:	mov	r0, #0
   143f4:	add	r1, pc, r1
   143f8:	b	1413c <close_stdout@@Base+0x1c9c>
   143fc:	andeq	r3, r1, r8, ror pc
   14400:	andeq	r2, r0, r8, ror #21
   14404:	andeq	r2, r0, r8, ror #21
   14408:	andeq	r0, r0, r4, lsr r1
   1440c:			; <UNDEFINED> instruction: 0x00002ab8
   14410:	andeq	r2, r0, r4, asr #24
   14414:	andeq	r2, r0, r4, asr #21
   14418:	andeq	r2, r0, r4, lsr #21
   1441c:	andeq	r2, r0, r8, lsl #21
   14420:	andeq	r2, r0, r8, ror #20
   14424:	andeq	r2, r0, r8, asr #20
   14428:	andeq	r2, r0, r4, lsr #20
   1442c:	strdeq	r2, [r0], -ip
   14430:	ldrdeq	r2, [r0], -r0
   14434:			; <UNDEFINED> instruction: 0x000027b8
   14438:			; <UNDEFINED> instruction: 0x000029bc
   1443c:	push	{r4, r5, lr}
   14440:	sub	sp, sp, #12
   14444:	ldr	r5, [sp, #24]
   14448:	ldr	ip, [r5]
   1444c:	cmp	ip, #0
   14450:	beq	1446c <close_stdout@@Base+0x1fcc>
   14454:	mov	lr, r5
   14458:	mov	ip, #0
   1445c:	ldr	r4, [lr, #4]!
   14460:	add	ip, ip, #1
   14464:	cmp	r4, #0
   14468:	bne	1445c <close_stdout@@Base+0x1fbc>
   1446c:	stm	sp, {r5, ip}
   14470:	bl	14068 <close_stdout@@Base+0x1bc8>
   14474:	add	sp, sp, #12
   14478:	pop	{r4, r5, pc}
   1447c:	push	{r4, r5, r6, r7, lr}
   14480:	sub	sp, sp, #60	; 0x3c
   14484:	ldr	r4, [pc, #100]	; 144f0 <close_stdout@@Base+0x2050>
   14488:	mov	ip, #0
   1448c:	ldr	r5, [pc, #96]	; 144f4 <close_stdout@@Base+0x2054>
   14490:	mov	lr, ip
   14494:	add	r4, pc, r4
   14498:	ldr	r6, [sp, #80]	; 0x50
   1449c:	ldr	r7, [r4, r5]
   144a0:	add	r5, sp, #12
   144a4:	ldr	r4, [r7]
   144a8:	str	r4, [sp, #52]	; 0x34
   144ac:	ldr	r4, [r6, ip]
   144b0:	cmp	r4, #0
   144b4:	str	r4, [r5, ip]
   144b8:	beq	144cc <close_stdout@@Base+0x202c>
   144bc:	add	lr, lr, #1
   144c0:	add	ip, ip, #4
   144c4:	cmp	lr, #10
   144c8:	bne	144ac <close_stdout@@Base+0x200c>
   144cc:	stm	sp, {r5, lr}
   144d0:	bl	14068 <close_stdout@@Base+0x1bc8>
   144d4:	ldr	r2, [sp, #52]	; 0x34
   144d8:	ldr	r3, [r7]
   144dc:	cmp	r2, r3
   144e0:	bne	144ec <close_stdout@@Base+0x204c>
   144e4:	add	sp, sp, #60	; 0x3c
   144e8:	pop	{r4, r5, r6, r7, pc}
   144ec:	bl	11040 <__stack_chk_fail@plt>
   144f0:	andeq	r3, r1, r4, ror #22
   144f4:	andeq	r0, r0, r0, lsl #2
   144f8:	push	{r3}		; (str r3, [sp, #-4]!)
   144fc:	push	{r4, lr}
   14500:	sub	sp, sp, #20
   14504:	ldr	lr, [pc, #72]	; 14554 <close_stdout@@Base+0x20b4>
   14508:	add	ip, sp, #32
   1450c:	ldr	r4, [pc, #68]	; 14558 <close_stdout@@Base+0x20b8>
   14510:	add	lr, pc, lr
   14514:	ldr	r3, [sp, #28]
   14518:	ldr	r4, [lr, r4]
   1451c:	str	ip, [sp]
   14520:	str	ip, [sp, #8]
   14524:	ldr	ip, [r4]
   14528:	str	ip, [sp, #12]
   1452c:	bl	1447c <close_stdout@@Base+0x1fdc>
   14530:	ldr	r2, [sp, #12]
   14534:	ldr	r3, [r4]
   14538:	cmp	r2, r3
   1453c:	bne	14550 <close_stdout@@Base+0x20b0>
   14540:	add	sp, sp, #20
   14544:	pop	{r4, lr}
   14548:	add	sp, sp, #4
   1454c:	bx	lr
   14550:	bl	11040 <__stack_chk_fail@plt>
   14554:	andeq	r3, r1, r8, ror #21
   14558:	andeq	r0, r0, r0, lsl #2
   1455c:	ldr	r1, [pc, #132]	; 145e8 <close_stdout@@Base+0x2148>
   14560:	mov	r2, #5
   14564:	push	{r4, lr}
   14568:	add	r1, pc, r1
   1456c:	mov	r0, #0
   14570:	ldr	r4, [pc, #116]	; 145ec <close_stdout@@Base+0x214c>
   14574:	bl	11034 <dcgettext@plt>
   14578:	ldr	r2, [pc, #112]	; 145f0 <close_stdout@@Base+0x2150>
   1457c:	add	r4, pc, r4
   14580:	add	r2, pc, r2
   14584:	mov	r1, r0
   14588:	mov	r0, #1
   1458c:	bl	111b4 <__printf_chk@plt>
   14590:	ldr	r1, [pc, #92]	; 145f4 <close_stdout@@Base+0x2154>
   14594:	mov	r2, #5
   14598:	mov	r0, #0
   1459c:	add	r1, pc, r1
   145a0:	bl	11034 <dcgettext@plt>
   145a4:	ldr	r2, [pc, #76]	; 145f8 <close_stdout@@Base+0x2158>
   145a8:	ldr	r3, [pc, #76]	; 145fc <close_stdout@@Base+0x215c>
   145ac:	add	r2, pc, r2
   145b0:	add	r3, pc, r3
   145b4:	mov	r1, r0
   145b8:	mov	r0, #1
   145bc:	bl	111b4 <__printf_chk@plt>
   145c0:	ldr	r1, [pc, #56]	; 14600 <close_stdout@@Base+0x2160>
   145c4:	mov	r0, #0
   145c8:	mov	r2, #5
   145cc:	add	r1, pc, r1
   145d0:	bl	11034 <dcgettext@plt>
   145d4:	ldr	r3, [pc, #40]	; 14604 <close_stdout@@Base+0x2164>
   145d8:	ldr	r3, [r4, r3]
   145dc:	pop	{r4, lr}
   145e0:	ldr	r1, [r3]
   145e4:	b	10fa4 <fputs_unlocked@plt>
   145e8:	andeq	r2, r0, r4, lsl #17
   145ec:	andeq	r3, r1, ip, ror sl
   145f0:	andeq	r2, r0, r4, lsl #17
   145f4:	andeq	r2, r0, r0, lsl #17
   145f8:	andeq	r2, r0, r0, ror #1
   145fc:	andeq	r2, r0, ip, ror #1
   14600:	andeq	r2, r0, r4, ror #16
   14604:	andeq	r0, r0, r4, lsr #2
   14608:	push	{r4, lr}
   1460c:	mov	r4, r0
   14610:	bl	1110c <malloc@plt>
   14614:	rsbs	r3, r0, #1
   14618:	movcc	r3, #0
   1461c:	cmp	r4, #0
   14620:	moveq	r3, #0
   14624:	cmp	r3, #0
   14628:	popeq	{r4, pc}
   1462c:	bl	1481c <close_stdout@@Base+0x237c>
   14630:	push	{r3, r4, r5, lr}
   14634:	mov	r4, r0
   14638:	mvn	r0, #0
   1463c:	mov	r5, r1
   14640:	bl	14ed0 <close_stdout@@Base+0x2a30>
   14644:	cmp	r0, r4
   14648:	bcc	14658 <close_stdout@@Base+0x21b8>
   1464c:	mul	r0, r4, r5
   14650:	pop	{r3, r4, r5, lr}
   14654:	b	14608 <close_stdout@@Base+0x2168>
   14658:	bl	1481c <close_stdout@@Base+0x237c>
   1465c:	b	14608 <close_stdout@@Base+0x2168>
   14660:	rsbs	r3, r1, #1
   14664:	push	{r4, lr}
   14668:	movcc	r3, #0
   1466c:	cmp	r0, #0
   14670:	mov	r4, r1
   14674:	moveq	r3, #0
   14678:	cmp	r3, #0
   1467c:	bne	146a0 <close_stdout@@Base+0x2200>
   14680:	bl	11064 <realloc@plt>
   14684:	rsbs	r3, r0, #1
   14688:	movcc	r3, #0
   1468c:	cmp	r4, #0
   14690:	moveq	r3, #0
   14694:	cmp	r3, #0
   14698:	popeq	{r4, pc}
   1469c:	bl	1481c <close_stdout@@Base+0x237c>
   146a0:	bl	10fe0 <free@plt>
   146a4:	mov	r0, #0
   146a8:	pop	{r4, pc}
   146ac:	push	{r4, r5, r6, lr}
   146b0:	mov	r5, r1
   146b4:	mov	r6, r0
   146b8:	mov	r1, r2
   146bc:	mvn	r0, #0
   146c0:	mov	r4, r2
   146c4:	bl	14ed0 <close_stdout@@Base+0x2a30>
   146c8:	cmp	r0, r5
   146cc:	bcc	146e0 <close_stdout@@Base+0x2240>
   146d0:	mov	r0, r6
   146d4:	mul	r1, r5, r4
   146d8:	pop	{r4, r5, r6, lr}
   146dc:	b	14660 <close_stdout@@Base+0x21c0>
   146e0:	bl	1481c <close_stdout@@Base+0x237c>
   146e4:	push	{r3, r4, r5, r6, r7, lr}
   146e8:	subs	r7, r0, #0
   146ec:	mov	r5, r1
   146f0:	mov	r6, r2
   146f4:	ldr	r4, [r1]
   146f8:	beq	14730 <close_stdout@@Base+0x2290>
   146fc:	movw	r0, #43690	; 0xaaaa
   14700:	mov	r1, r2
   14704:	bfi	r0, r0, #16, #16
   14708:	bl	14ed0 <close_stdout@@Base+0x2a30>
   1470c:	cmp	r4, r0
   14710:	addcc	r3, r4, #1
   14714:	addcc	r4, r4, r3, lsr #1
   14718:	bcs	14754 <close_stdout@@Base+0x22b4>
   1471c:	str	r4, [r5]
   14720:	mov	r0, r7
   14724:	mul	r1, r6, r4
   14728:	pop	{r3, r4, r5, r6, r7, lr}
   1472c:	b	14660 <close_stdout@@Base+0x21c0>
   14730:	cmp	r4, #0
   14734:	bne	1471c <close_stdout@@Base+0x227c>
   14738:	mov	r0, #64	; 0x40
   1473c:	mov	r1, r2
   14740:	bl	14ed0 <close_stdout@@Base+0x2a30>
   14744:	cmp	r0, #0
   14748:	movne	r4, r0
   1474c:	addeq	r4, r0, #1
   14750:	b	1471c <close_stdout@@Base+0x227c>
   14754:	bl	1481c <close_stdout@@Base+0x237c>
   14758:	cmp	r0, #0
   1475c:	push	{r3, lr}
   14760:	ldr	r3, [r1]
   14764:	beq	14790 <close_stdout@@Base+0x22f0>
   14768:	movw	r2, #43689	; 0xaaa9
   1476c:	movt	r2, #43690	; 0xaaaa
   14770:	cmp	r3, r2
   14774:	addls	r2, r3, #1
   14778:	addls	r3, r3, r2, lsr #1
   1477c:	bhi	147a8 <close_stdout@@Base+0x2308>
   14780:	str	r3, [r1]
   14784:	mov	r1, r3
   14788:	pop	{r3, lr}
   1478c:	b	14660 <close_stdout@@Base+0x21c0>
   14790:	cmp	r3, #0
   14794:	moveq	r3, #64	; 0x40
   14798:	str	r3, [r1]
   1479c:	mov	r1, r3
   147a0:	pop	{r3, lr}
   147a4:	b	14660 <close_stdout@@Base+0x21c0>
   147a8:	bl	1481c <close_stdout@@Base+0x237c>
   147ac:	push	{r4, lr}
   147b0:	mov	r4, r0
   147b4:	bl	14608 <close_stdout@@Base+0x2168>
   147b8:	mov	r2, r4
   147bc:	mov	r1, #0
   147c0:	pop	{r4, lr}
   147c4:	b	1119c <memset@plt>
   147c8:	push	{r3, lr}
   147cc:	bl	10f98 <calloc@plt>
   147d0:	cmp	r0, #0
   147d4:	popne	{r3, pc}
   147d8:	bl	1481c <close_stdout@@Base+0x237c>
   147dc:	push	{r3, r4, r5, lr}
   147e0:	mov	r4, r1
   147e4:	mov	r5, r0
   147e8:	mov	r0, r1
   147ec:	bl	14608 <close_stdout@@Base+0x2168>
   147f0:	mov	r1, r5
   147f4:	mov	r2, r4
   147f8:	pop	{r3, r4, r5, lr}
   147fc:	b	10ff8 <memcpy@plt>
   14800:	push	{r4, lr}
   14804:	mov	r4, r0
   14808:	bl	1116c <strlen@plt>
   1480c:	add	r1, r0, #1
   14810:	mov	r0, r4
   14814:	pop	{r4, lr}
   14818:	b	147dc <close_stdout@@Base+0x233c>
   1481c:	ldr	r3, [pc, #64]	; 14864 <close_stdout@@Base+0x23c4>
   14820:	mov	r2, #5
   14824:	ldr	ip, [pc, #60]	; 14868 <close_stdout@@Base+0x23c8>
   14828:	mov	r0, #0
   1482c:	add	r3, pc, r3
   14830:	ldr	r1, [pc, #52]	; 1486c <close_stdout@@Base+0x23cc>
   14834:	push	{r4, lr}
   14838:	add	r1, pc, r1
   1483c:	ldr	r3, [r3, ip]
   14840:	ldr	r4, [r3]
   14844:	bl	11034 <dcgettext@plt>
   14848:	ldr	r2, [pc, #32]	; 14870 <close_stdout@@Base+0x23d0>
   1484c:	mov	r1, #0
   14850:	add	r2, pc, r2
   14854:	mov	r3, r0
   14858:	mov	r0, r4
   1485c:	bl	110dc <error@plt>
   14860:	bl	11238 <abort@plt>
   14864:	andeq	r3, r1, ip, asr #15
   14868:	andeq	r0, r0, r8, lsr #2
   1486c:	andeq	r2, r0, r8, ror #12
   14870:	andeq	r2, r0, r8, ror #4
   14874:	push	{r3, lr}
   14878:	bl	1107c <__strndup@plt>
   1487c:	cmp	r0, #0
   14880:	popne	{r3, pc}
   14884:	bl	1481c <close_stdout@@Base+0x237c>
   14888:	push	{r4, r5, r6, lr}
   1488c:	sub	sp, sp, #8
   14890:	mov	r4, r0
   14894:	bl	111c0 <fileno@plt>
   14898:	cmp	r0, #0
   1489c:	mov	r0, r4
   148a0:	blt	1491c <close_stdout@@Base+0x247c>
   148a4:	bl	11124 <__freading@plt>
   148a8:	cmp	r0, #0
   148ac:	bne	148e8 <close_stdout@@Base+0x2448>
   148b0:	mov	r0, r4
   148b4:	bl	14928 <close_stdout@@Base+0x2488>
   148b8:	cmp	r0, #0
   148bc:	beq	14918 <close_stdout@@Base+0x2478>
   148c0:	bl	11184 <__errno_location@plt>
   148c4:	ldr	r6, [r0]
   148c8:	mov	r5, r0
   148cc:	mov	r0, r4
   148d0:	bl	111d8 <fclose@plt>
   148d4:	cmp	r6, #0
   148d8:	mvnne	r0, #0
   148dc:	strne	r6, [r5]
   148e0:	add	sp, sp, #8
   148e4:	pop	{r4, r5, r6, pc}
   148e8:	mov	r0, r4
   148ec:	bl	111c0 <fileno@plt>
   148f0:	mov	r1, #1
   148f4:	mov	r2, #0
   148f8:	mov	r3, #0
   148fc:	str	r1, [sp]
   14900:	bl	110a0 <lseek64@plt>
   14904:	mvn	r2, #0
   14908:	mvn	r3, #0
   1490c:	cmp	r1, r3
   14910:	cmpeq	r0, r2
   14914:	bne	148b0 <close_stdout@@Base+0x2410>
   14918:	mov	r0, r4
   1491c:	add	sp, sp, #8
   14920:	pop	{r4, r5, r6, lr}
   14924:	b	111d8 <fclose@plt>
   14928:	push	{r4, lr}
   1492c:	subs	r4, r0, #0
   14930:	sub	sp, sp, #8
   14934:	beq	14944 <close_stdout@@Base+0x24a4>
   14938:	bl	11124 <__freading@plt>
   1493c:	cmp	r0, #0
   14940:	bne	14954 <close_stdout@@Base+0x24b4>
   14944:	mov	r0, r4
   14948:	add	sp, sp, #8
   1494c:	pop	{r4, lr}
   14950:	b	10fd4 <fflush@plt>
   14954:	ldr	r3, [r4]
   14958:	tst	r3, #256	; 0x100
   1495c:	beq	14944 <close_stdout@@Base+0x24a4>
   14960:	mov	r3, #1
   14964:	mov	r0, r4
   14968:	str	r3, [sp]
   1496c:	mov	r2, #0
   14970:	mov	r3, #0
   14974:	bl	14988 <close_stdout@@Base+0x24e8>
   14978:	mov	r0, r4
   1497c:	add	sp, sp, #8
   14980:	pop	{r4, lr}
   14984:	b	10fd4 <fflush@plt>
   14988:	push	{r4, r5, r6, r7, lr}
   1498c:	sub	sp, sp, #20
   14990:	ldmib	r0, {r1, ip}
   14994:	mov	r6, r0
   14998:	ldr	r4, [sp, #40]	; 0x28
   1499c:	cmp	ip, r1
   149a0:	beq	149b8 <close_stdout@@Base+0x2518>
   149a4:	str	r4, [sp, #40]	; 0x28
   149a8:	mov	r0, r6
   149ac:	add	sp, sp, #20
   149b0:	pop	{r4, r5, r6, r7, lr}
   149b4:	b	111e4 <fseeko64@plt>
   149b8:	ldr	ip, [r0, #20]
   149bc:	ldr	r1, [r0, #16]
   149c0:	cmp	ip, r1
   149c4:	bne	149a4 <close_stdout@@Base+0x2504>
   149c8:	ldr	r7, [r0, #36]	; 0x24
   149cc:	cmp	r7, #0
   149d0:	bne	149a4 <close_stdout@@Base+0x2504>
   149d4:	str	r2, [sp, #12]
   149d8:	mvn	r5, #0
   149dc:	str	r3, [sp, #8]
   149e0:	bl	111c0 <fileno@plt>
   149e4:	str	r4, [sp]
   149e8:	mvn	r4, #0
   149ec:	ldr	r2, [sp, #12]
   149f0:	ldr	r3, [sp, #8]
   149f4:	bl	110a0 <lseek64@plt>
   149f8:	mov	r2, r0
   149fc:	mov	r3, r1
   14a00:	cmp	r3, r5
   14a04:	cmpeq	r2, r4
   14a08:	beq	14a28 <close_stdout@@Base+0x2588>
   14a0c:	ldr	r1, [r6]
   14a10:	mov	r0, r7
   14a14:	strd	r2, [r6, #80]	; 0x50
   14a18:	bic	r3, r1, #16
   14a1c:	str	r3, [r6]
   14a20:	add	sp, sp, #20
   14a24:	pop	{r4, r5, r6, r7, pc}
   14a28:	mvn	r0, #0
   14a2c:	b	14a20 <close_stdout@@Base+0x2580>
   14a30:	push	{r4, r5, r6, lr}
   14a34:	mov	r4, r0
   14a38:	bl	110c4 <__fpending@plt>
   14a3c:	mov	r6, r0
   14a40:	mov	r0, r4
   14a44:	ldr	r4, [r4]
   14a48:	bl	14888 <close_stdout@@Base+0x23e8>
   14a4c:	and	r4, r4, #32
   14a50:	adds	r5, r0, #0
   14a54:	movne	r5, #1
   14a58:	cmp	r4, #0
   14a5c:	bne	14a7c <close_stdout@@Base+0x25dc>
   14a60:	cmp	r5, #0
   14a64:	beq	14a74 <close_stdout@@Base+0x25d4>
   14a68:	cmp	r6, #0
   14a6c:	beq	14a98 <close_stdout@@Base+0x25f8>
   14a70:	mvn	r4, #0
   14a74:	mov	r0, r4
   14a78:	pop	{r4, r5, r6, pc}
   14a7c:	cmp	r5, #0
   14a80:	bne	14a70 <close_stdout@@Base+0x25d0>
   14a84:	bl	11184 <__errno_location@plt>
   14a88:	mvn	r4, #0
   14a8c:	str	r5, [r0]
   14a90:	mov	r0, r4
   14a94:	pop	{r4, r5, r6, pc}
   14a98:	bl	11184 <__errno_location@plt>
   14a9c:	ldr	r4, [r0]
   14aa0:	subs	r4, r4, #9
   14aa4:	mvnne	r4, #0
   14aa8:	mov	r0, r4
   14aac:	pop	{r4, r5, r6, pc}
   14ab0:	ldr	r3, [pc, #984]	; 14e90 <close_stdout@@Base+0x29f0>
   14ab4:	mov	r0, #14
   14ab8:	ldr	r2, [pc, #980]	; 14e94 <close_stdout@@Base+0x29f4>
   14abc:	add	r3, pc, r3
   14ac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ac4:	sub	sp, sp, #132	; 0x84
   14ac8:	ldr	r6, [r3, r2]
   14acc:	ldr	r3, [r6]
   14ad0:	str	r3, [sp, #124]	; 0x7c
   14ad4:	bl	11214 <nl_langinfo@plt>
   14ad8:	subs	r5, r0, #0
   14adc:	beq	14b90 <close_stdout@@Base+0x26f0>
   14ae0:	ldr	r3, [pc, #944]	; 14e98 <close_stdout@@Base+0x29f8>
   14ae4:	ldr	r4, [pc, r3]
   14ae8:	cmp	r4, #0
   14aec:	beq	14b9c <close_stdout@@Base+0x26fc>
   14af0:	ldrb	r7, [r4]
   14af4:	cmp	r7, #0
   14af8:	bne	14b2c <close_stdout@@Base+0x268c>
   14afc:	b	14b64 <close_stdout@@Base+0x26c4>
   14b00:	mov	r0, r4
   14b04:	bl	1116c <strlen@plt>
   14b08:	add	r0, r0, #1
   14b0c:	add	r7, r4, r0
   14b10:	mov	r0, r7
   14b14:	bl	1116c <strlen@plt>
   14b18:	add	r0, r0, #1
   14b1c:	add	r4, r7, r0
   14b20:	ldrb	r7, [r7, r0]
   14b24:	cmp	r7, #0
   14b28:	beq	14b64 <close_stdout@@Base+0x26c4>
   14b2c:	mov	r0, r5
   14b30:	mov	r1, r4
   14b34:	bl	10fc8 <strcmp@plt>
   14b38:	cmp	r0, #0
   14b3c:	beq	14b54 <close_stdout@@Base+0x26b4>
   14b40:	cmp	r7, #42	; 0x2a
   14b44:	bne	14b00 <close_stdout@@Base+0x2660>
   14b48:	ldrb	r3, [r4, #1]
   14b4c:	cmp	r3, #0
   14b50:	bne	14b00 <close_stdout@@Base+0x2660>
   14b54:	mov	r0, r4
   14b58:	bl	1116c <strlen@plt>
   14b5c:	add	r0, r0, #1
   14b60:	add	r5, r4, r0
   14b64:	ldrb	r3, [r5]
   14b68:	cmp	r3, #0
   14b6c:	ldreq	r5, [pc, #808]	; 14e9c <close_stdout@@Base+0x29fc>
   14b70:	addeq	r5, pc, r5
   14b74:	ldr	r2, [sp, #124]	; 0x7c
   14b78:	mov	r0, r5
   14b7c:	ldr	r3, [r6]
   14b80:	cmp	r2, r3
   14b84:	bne	14e64 <close_stdout@@Base+0x29c4>
   14b88:	add	sp, sp, #132	; 0x84
   14b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b90:	ldr	r5, [pc, #776]	; 14ea0 <close_stdout@@Base+0x2a00>
   14b94:	add	r5, pc, r5
   14b98:	b	14ae0 <close_stdout@@Base+0x2640>
   14b9c:	ldr	r0, [pc, #768]	; 14ea4 <close_stdout@@Base+0x2a04>
   14ba0:	add	r0, pc, r0
   14ba4:	bl	110f4 <getenv@plt>
   14ba8:	subs	r8, r0, #0
   14bac:	beq	14e3c <close_stdout@@Base+0x299c>
   14bb0:	ldrb	r3, [r8]
   14bb4:	cmp	r3, #0
   14bb8:	beq	14dd0 <close_stdout@@Base+0x2930>
   14bbc:	bl	1116c <strlen@plt>
   14bc0:	subs	sl, r0, #0
   14bc4:	subne	r3, sl, #1
   14bc8:	bne	14de0 <close_stdout@@Base+0x2940>
   14bcc:	mov	r9, #0
   14bd0:	mov	fp, r9
   14bd4:	add	r9, sl, r9
   14bd8:	add	r0, r9, #14
   14bdc:	bl	1110c <malloc@plt>
   14be0:	subs	r7, r0, #0
   14be4:	beq	14e30 <close_stdout@@Base+0x2990>
   14be8:	mov	r1, r8
   14bec:	mov	r2, sl
   14bf0:	bl	10ff8 <memcpy@plt>
   14bf4:	cmp	fp, #0
   14bf8:	add	ip, r7, r9
   14bfc:	movne	r3, #47	; 0x2f
   14c00:	strbne	r3, [r7, sl]
   14c04:	ldr	r3, [pc, #668]	; 14ea8 <close_stdout@@Base+0x2a08>
   14c08:	add	r3, pc, r3
   14c0c:	ldm	r3!, {r0, r1, r2}
   14c10:	ldrh	r3, [r3]
   14c14:	str	r0, [r7, r9]
   14c18:	mov	r0, r7
   14c1c:	str	r1, [ip, #4]
   14c20:	mov	r1, #32768	; 0x8000
   14c24:	strh	r3, [ip, #12]
   14c28:	str	r2, [ip, #8]
   14c2c:	bl	110e8 <open64@plt>
   14c30:	subs	r8, r0, #0
   14c34:	blt	14df8 <close_stdout@@Base+0x2958>
   14c38:	ldr	r1, [pc, #620]	; 14eac <close_stdout@@Base+0x2a0c>
   14c3c:	add	r1, pc, r1
   14c40:	bl	10f8c <fdopen@plt>
   14c44:	subs	fp, r0, #0
   14c48:	beq	14e50 <close_stdout@@Base+0x29b0>
   14c4c:	ldr	r0, [pc, #604]	; 14eb0 <close_stdout@@Base+0x2a10>
   14c50:	add	sl, sp, #20
   14c54:	add	r9, sp, #72	; 0x48
   14c58:	mov	r8, #0
   14c5c:	add	r0, pc, r0
   14c60:	str	r0, [sp, #12]
   14c64:	ldr	r3, [fp, #4]
   14c68:	ldr	r2, [fp, #8]
   14c6c:	cmp	r3, r2
   14c70:	bcs	14d5c <close_stdout@@Base+0x28bc>
   14c74:	add	r2, r3, #1
   14c78:	str	r2, [fp, #4]
   14c7c:	ldrb	r0, [r3]
   14c80:	cmp	r0, #32
   14c84:	beq	14c64 <close_stdout@@Base+0x27c4>
   14c88:	sub	r3, r0, #9
   14c8c:	cmp	r3, #1
   14c90:	bls	14c64 <close_stdout@@Base+0x27c4>
   14c94:	cmp	r0, #35	; 0x23
   14c98:	beq	14d70 <close_stdout@@Base+0x28d0>
   14c9c:	mov	r1, fp
   14ca0:	bl	11178 <ungetc@plt>
   14ca4:	mov	r0, fp
   14ca8:	ldr	r1, [sp, #12]
   14cac:	mov	r2, sl
   14cb0:	mov	r3, r9
   14cb4:	bl	111a8 <fscanf@plt>
   14cb8:	cmp	r0, #1
   14cbc:	ble	14da0 <close_stdout@@Base+0x2900>
   14cc0:	mov	r0, sl
   14cc4:	bl	1116c <strlen@plt>
   14cc8:	str	r0, [sp, #8]
   14ccc:	mov	r0, r9
   14cd0:	bl	1116c <strlen@plt>
   14cd4:	cmp	r8, #0
   14cd8:	mov	r2, r0
   14cdc:	bne	14e04 <close_stdout@@Base+0x2964>
   14ce0:	ldr	r3, [sp, #8]
   14ce4:	str	r2, [sp]
   14ce8:	add	r8, r0, r3
   14cec:	add	r0, r8, #3
   14cf0:	add	r8, r8, #2
   14cf4:	bl	1110c <malloc@plt>
   14cf8:	ldr	r2, [sp]
   14cfc:	mov	r3, r0
   14d00:	cmp	r3, #0
   14d04:	beq	14e68 <close_stdout@@Base+0x29c8>
   14d08:	ldr	r0, [sp, #8]
   14d0c:	movw	r1, #65534	; 0xfffe
   14d10:	movt	r1, #65535	; 0xffff
   14d14:	rsb	r2, r2, r8
   14d18:	rsb	r1, r0, r1
   14d1c:	stm	sp, {r2, r3}
   14d20:	add	r0, r1, r2
   14d24:	mov	r1, sl
   14d28:	add	r0, r3, r0
   14d2c:	mov	r4, r3
   14d30:	bl	110b8 <strcpy@plt>
   14d34:	ldr	r2, [sp]
   14d38:	ldr	r3, [sp, #4]
   14d3c:	mov	r1, r9
   14d40:	sub	r0, r2, #1
   14d44:	add	r0, r3, r0
   14d48:	bl	110b8 <strcpy@plt>
   14d4c:	ldr	r3, [fp, #4]
   14d50:	ldr	r2, [fp, #8]
   14d54:	cmp	r3, r2
   14d58:	bcc	14c74 <close_stdout@@Base+0x27d4>
   14d5c:	mov	r0, fp
   14d60:	bl	111f0 <__uflow@plt>
   14d64:	cmn	r0, #1
   14d68:	beq	14da0 <close_stdout@@Base+0x2900>
   14d6c:	b	14c80 <close_stdout@@Base+0x27e0>
   14d70:	ldr	r3, [fp, #4]
   14d74:	ldr	r2, [fp, #8]
   14d78:	cmp	r3, r2
   14d7c:	bcs	14e84 <close_stdout@@Base+0x29e4>
   14d80:	add	r2, r3, #1
   14d84:	str	r2, [fp, #4]
   14d88:	ldrb	r0, [r3]
   14d8c:	cmp	r0, #10
   14d90:	cmnne	r0, #1
   14d94:	bne	14d70 <close_stdout@@Base+0x28d0>
   14d98:	cmn	r0, #1
   14d9c:	bne	14c64 <close_stdout@@Base+0x27c4>
   14da0:	mov	r0, fp
   14da4:	bl	14888 <close_stdout@@Base+0x23e8>
   14da8:	cmp	r8, #0
   14dac:	beq	14df8 <close_stdout@@Base+0x2958>
   14db0:	mov	r3, #0
   14db4:	strb	r3, [r4, r8]
   14db8:	mov	r0, r7
   14dbc:	bl	10fe0 <free@plt>
   14dc0:	ldr	r3, [pc, #236]	; 14eb4 <close_stdout@@Base+0x2a14>
   14dc4:	add	r3, pc, r3
   14dc8:	str	r4, [r3]
   14dcc:	b	14af0 <close_stdout@@Base+0x2650>
   14dd0:	ldr	r8, [pc, #224]	; 14eb8 <close_stdout@@Base+0x2a18>
   14dd4:	mov	r3, #7
   14dd8:	mov	sl, #8
   14ddc:	add	r8, pc, r8
   14de0:	ldrb	r3, [r8, r3]
   14de4:	cmp	r3, #47	; 0x2f
   14de8:	movne	r9, #1
   14dec:	movne	fp, r9
   14df0:	bne	14bd4 <close_stdout@@Base+0x2734>
   14df4:	b	14bcc <close_stdout@@Base+0x272c>
   14df8:	ldr	r4, [pc, #188]	; 14ebc <close_stdout@@Base+0x2a1c>
   14dfc:	add	r4, pc, r4
   14e00:	b	14db8 <close_stdout@@Base+0x2918>
   14e04:	ldr	r0, [sp, #8]
   14e08:	str	r2, [sp]
   14e0c:	add	r3, r0, r2
   14e10:	mov	r0, r4
   14e14:	add	r8, r3, r8
   14e18:	add	r1, r8, #3
   14e1c:	add	r8, r8, #2
   14e20:	bl	11064 <realloc@plt>
   14e24:	ldr	r2, [sp]
   14e28:	mov	r3, r0
   14e2c:	b	14d00 <close_stdout@@Base+0x2860>
   14e30:	ldr	r4, [pc, #136]	; 14ec0 <close_stdout@@Base+0x2a20>
   14e34:	add	r4, pc, r4
   14e38:	b	14dc0 <close_stdout@@Base+0x2920>
   14e3c:	ldr	r8, [pc, #128]	; 14ec4 <close_stdout@@Base+0x2a24>
   14e40:	mov	r3, #7
   14e44:	mov	sl, #8
   14e48:	add	r8, pc, r8
   14e4c:	b	14de0 <close_stdout@@Base+0x2940>
   14e50:	ldr	r4, [pc, #112]	; 14ec8 <close_stdout@@Base+0x2a28>
   14e54:	mov	r0, r8
   14e58:	add	r4, pc, r4
   14e5c:	bl	11244 <close@plt>
   14e60:	b	14db8 <close_stdout@@Base+0x2918>
   14e64:	bl	11040 <__stack_chk_fail@plt>
   14e68:	mov	r0, r4
   14e6c:	ldr	r4, [pc, #88]	; 14ecc <close_stdout@@Base+0x2a2c>
   14e70:	bl	10fe0 <free@plt>
   14e74:	mov	r0, fp
   14e78:	add	r4, pc, r4
   14e7c:	bl	14888 <close_stdout@@Base+0x23e8>
   14e80:	b	14db8 <close_stdout@@Base+0x2918>
   14e84:	mov	r0, fp
   14e88:	bl	111f0 <__uflow@plt>
   14e8c:	b	14d8c <close_stdout@@Base+0x28ec>
   14e90:	andeq	r3, r1, ip, lsr r5
   14e94:	andeq	r0, r0, r0, lsl #2
   14e98:	andeq	r3, r1, r8, lsl #16
   14e9c:	andeq	r2, r0, r0, asr r3
   14ea0:			; <UNDEFINED> instruction: 0x00001bbc
   14ea4:	andeq	r2, r0, r8, lsr #6
   14ea8:	ldrdeq	r2, [r0], -r0
   14eac:	andeq	r1, r0, r0, lsr ip
   14eb0:	andeq	r2, r0, ip, lsl #5
   14eb4:	andeq	r3, r1, r8, lsr #10
   14eb8:	ldrdeq	r2, [r0], -r8
   14ebc:	andeq	r1, r0, r4, asr r9
   14ec0:	andeq	r1, r0, ip, lsl r9
   14ec4:	andeq	r2, r0, ip, rrx
   14ec8:	strdeq	r1, [r0], -r8
   14ecc:	ldrdeq	r1, [r0], -r8
   14ed0:	subs	r2, r1, #1
   14ed4:	bxeq	lr
   14ed8:	bcc	150b0 <close_stdout@@Base+0x2c10>
   14edc:	cmp	r0, r1
   14ee0:	bls	15094 <close_stdout@@Base+0x2bf4>
   14ee4:	tst	r1, r2
   14ee8:	beq	150a0 <close_stdout@@Base+0x2c00>
   14eec:	clz	r3, r0
   14ef0:	clz	r2, r1
   14ef4:	sub	r3, r2, r3
   14ef8:	rsbs	r3, r3, #31
   14efc:	addne	r3, r3, r3, lsl #1
   14f00:	mov	r2, #0
   14f04:	addne	pc, pc, r3, lsl #2
   14f08:	nop	{0}
   14f0c:	cmp	r0, r1, lsl #31
   14f10:	adc	r2, r2, r2
   14f14:	subcs	r0, r0, r1, lsl #31
   14f18:	cmp	r0, r1, lsl #30
   14f1c:	adc	r2, r2, r2
   14f20:	subcs	r0, r0, r1, lsl #30
   14f24:	cmp	r0, r1, lsl #29
   14f28:	adc	r2, r2, r2
   14f2c:	subcs	r0, r0, r1, lsl #29
   14f30:	cmp	r0, r1, lsl #28
   14f34:	adc	r2, r2, r2
   14f38:	subcs	r0, r0, r1, lsl #28
   14f3c:	cmp	r0, r1, lsl #27
   14f40:	adc	r2, r2, r2
   14f44:	subcs	r0, r0, r1, lsl #27
   14f48:	cmp	r0, r1, lsl #26
   14f4c:	adc	r2, r2, r2
   14f50:	subcs	r0, r0, r1, lsl #26
   14f54:	cmp	r0, r1, lsl #25
   14f58:	adc	r2, r2, r2
   14f5c:	subcs	r0, r0, r1, lsl #25
   14f60:	cmp	r0, r1, lsl #24
   14f64:	adc	r2, r2, r2
   14f68:	subcs	r0, r0, r1, lsl #24
   14f6c:	cmp	r0, r1, lsl #23
   14f70:	adc	r2, r2, r2
   14f74:	subcs	r0, r0, r1, lsl #23
   14f78:	cmp	r0, r1, lsl #22
   14f7c:	adc	r2, r2, r2
   14f80:	subcs	r0, r0, r1, lsl #22
   14f84:	cmp	r0, r1, lsl #21
   14f88:	adc	r2, r2, r2
   14f8c:	subcs	r0, r0, r1, lsl #21
   14f90:	cmp	r0, r1, lsl #20
   14f94:	adc	r2, r2, r2
   14f98:	subcs	r0, r0, r1, lsl #20
   14f9c:	cmp	r0, r1, lsl #19
   14fa0:	adc	r2, r2, r2
   14fa4:	subcs	r0, r0, r1, lsl #19
   14fa8:	cmp	r0, r1, lsl #18
   14fac:	adc	r2, r2, r2
   14fb0:	subcs	r0, r0, r1, lsl #18
   14fb4:	cmp	r0, r1, lsl #17
   14fb8:	adc	r2, r2, r2
   14fbc:	subcs	r0, r0, r1, lsl #17
   14fc0:	cmp	r0, r1, lsl #16
   14fc4:	adc	r2, r2, r2
   14fc8:	subcs	r0, r0, r1, lsl #16
   14fcc:	cmp	r0, r1, lsl #15
   14fd0:	adc	r2, r2, r2
   14fd4:	subcs	r0, r0, r1, lsl #15
   14fd8:	cmp	r0, r1, lsl #14
   14fdc:	adc	r2, r2, r2
   14fe0:	subcs	r0, r0, r1, lsl #14
   14fe4:	cmp	r0, r1, lsl #13
   14fe8:	adc	r2, r2, r2
   14fec:	subcs	r0, r0, r1, lsl #13
   14ff0:	cmp	r0, r1, lsl #12
   14ff4:	adc	r2, r2, r2
   14ff8:	subcs	r0, r0, r1, lsl #12
   14ffc:	cmp	r0, r1, lsl #11
   15000:	adc	r2, r2, r2
   15004:	subcs	r0, r0, r1, lsl #11
   15008:	cmp	r0, r1, lsl #10
   1500c:	adc	r2, r2, r2
   15010:	subcs	r0, r0, r1, lsl #10
   15014:	cmp	r0, r1, lsl #9
   15018:	adc	r2, r2, r2
   1501c:	subcs	r0, r0, r1, lsl #9
   15020:	cmp	r0, r1, lsl #8
   15024:	adc	r2, r2, r2
   15028:	subcs	r0, r0, r1, lsl #8
   1502c:	cmp	r0, r1, lsl #7
   15030:	adc	r2, r2, r2
   15034:	subcs	r0, r0, r1, lsl #7
   15038:	cmp	r0, r1, lsl #6
   1503c:	adc	r2, r2, r2
   15040:	subcs	r0, r0, r1, lsl #6
   15044:	cmp	r0, r1, lsl #5
   15048:	adc	r2, r2, r2
   1504c:	subcs	r0, r0, r1, lsl #5
   15050:	cmp	r0, r1, lsl #4
   15054:	adc	r2, r2, r2
   15058:	subcs	r0, r0, r1, lsl #4
   1505c:	cmp	r0, r1, lsl #3
   15060:	adc	r2, r2, r2
   15064:	subcs	r0, r0, r1, lsl #3
   15068:	cmp	r0, r1, lsl #2
   1506c:	adc	r2, r2, r2
   15070:	subcs	r0, r0, r1, lsl #2
   15074:	cmp	r0, r1, lsl #1
   15078:	adc	r2, r2, r2
   1507c:	subcs	r0, r0, r1, lsl #1
   15080:	cmp	r0, r1
   15084:	adc	r2, r2, r2
   15088:	subcs	r0, r0, r1
   1508c:	mov	r0, r2
   15090:	bx	lr
   15094:	moveq	r0, #1
   15098:	movne	r0, #0
   1509c:	bx	lr
   150a0:	clz	r2, r1
   150a4:	rsb	r2, r2, #31
   150a8:	lsr	r0, r0, r2
   150ac:	bx	lr
   150b0:	cmp	r0, #0
   150b4:	mvnne	r0, #0
   150b8:	b	150dc <close_stdout@@Base+0x2c3c>
   150bc:	cmp	r1, #0
   150c0:	beq	150b0 <close_stdout@@Base+0x2c10>
   150c4:	push	{r0, r1, lr}
   150c8:	bl	14ed0 <close_stdout@@Base+0x2a30>
   150cc:	pop	{r1, r2, lr}
   150d0:	mul	r3, r2, r0
   150d4:	sub	r1, r1, r3
   150d8:	bx	lr
   150dc:	push	{r1, lr}
   150e0:	mov	r0, #8
   150e4:	bl	10fb0 <raise@plt>
   150e8:	pop	{r1, pc}
   150ec:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   150f0:	mov	r7, r0
   150f4:	ldr	r6, [pc, #76]	; 15148 <close_stdout@@Base+0x2ca8>
   150f8:	mov	r8, r1
   150fc:	ldr	r5, [pc, #72]	; 1514c <close_stdout@@Base+0x2cac>
   15100:	mov	r9, r2
   15104:	add	r6, pc, r6
   15108:	bl	10f6c <fdopen@plt-0x20>
   1510c:	add	r5, pc, r5
   15110:	rsb	r6, r5, r6
   15114:	asrs	r6, r6, #2
   15118:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1511c:	sub	r5, r5, #4
   15120:	mov	r4, #0
   15124:	add	r4, r4, #1
   15128:	ldr	r3, [r5, #4]!
   1512c:	mov	r0, r7
   15130:	mov	r1, r8
   15134:	mov	r2, r9
   15138:	blx	r3
   1513c:	cmp	r4, r6
   15140:	bne	15124 <close_stdout@@Base+0x2c84>
   15144:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15148:	andeq	r2, r1, r0, lsr #24
   1514c:	andeq	r2, r1, r4, lsl ip
   15150:	bx	lr
   15154:	ldr	r3, [pc, #28]	; 15178 <close_stdout@@Base+0x2cd8>
   15158:	mov	r1, #0
   1515c:	ldr	r2, [pc, #24]	; 1517c <close_stdout@@Base+0x2cdc>
   15160:	add	r3, pc, r3
   15164:	ldr	r3, [r3, r2]
   15168:	cmp	r3, #0
   1516c:	ldrne	r2, [r3]
   15170:	moveq	r2, r3
   15174:	b	11190 <__cxa_atexit@plt>
   15178:	muleq	r1, r8, lr
   1517c:	andeq	r0, r0, ip, lsl r1

Disassembly of section .fini:

00015180 <.fini>:
   15180:	push	{r3, lr}
   15184:	pop	{r3, pc}
