
centos-preinstalled/users:     file format elf32-littlearm


Disassembly of section .init:

00010f6c <.init>:
   10f6c:	push	{r3, lr}
   10f70:	bl	11428 <close@plt+0x1e4>
   10f74:	pop	{r3, pc}

Disassembly of section .plt:

00010f78 <fdopen@plt-0x14>:
   10f78:	push	{lr}		; (str lr, [sp, #-4]!)
   10f7c:	ldr	lr, [pc, #4]	; 10f88 <fdopen@plt-0x4>
   10f80:	add	lr, pc, lr
   10f84:	ldr	pc, [lr, #8]!
   10f88:	andeq	r5, r1, r8, ror r0

00010f8c <fdopen@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #120]!	; 0x78

00010f98 <calloc@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #112]!	; 0x70

00010fa4 <fputs_unlocked@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #104]!	; 0x68

00010fb0 <raise@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #96]!	; 0x60

00010fbc <strcmp@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #88]!	; 0x58

00010fc8 <fflush@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #80]!	; 0x50

00010fd4 <utmpxname@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #72]!	; 0x48

00010fe0 <free@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #64]!	; 0x40

00010fec <_exit@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #56]!	; 0x38

00010ff8 <memcpy@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #48]!	; 0x30

00011004 <mbsinit@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #40]!	; 0x28

00011010 <memcmp@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #32]!

0001101c <dcgettext@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #24]!

00011028 <setutxent@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #16]!

00011034 <__stack_chk_fail@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #86016	; 0x15000
   1103c:	ldr	pc, [ip, #8]!

00011040 <realloc@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #86016	; 0x15000
   11048:	ldr	pc, [ip, #0]!

0001104c <textdomain@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #20, 20	; 0x14000
   11054:	ldr	pc, [ip, #4088]!	; 0xff8

00011058 <iswprint@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #20, 20	; 0x14000
   11060:	ldr	pc, [ip, #4080]!	; 0xff0

00011064 <fwrite@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #20, 20	; 0x14000
   1106c:	ldr	pc, [ip, #4072]!	; 0xfe8

00011070 <lseek64@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #20, 20	; 0x14000
   11078:	ldr	pc, [ip, #4064]!	; 0xfe0

0001107c <__ctype_get_mb_cur_max@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #20, 20	; 0x14000
   11084:	ldr	pc, [ip, #4056]!	; 0xfd8

00011088 <strcpy@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #20, 20	; 0x14000
   11090:	ldr	pc, [ip, #4048]!	; 0xfd0

00011094 <__fpending@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #20, 20	; 0x14000
   1109c:	ldr	pc, [ip, #4040]!	; 0xfc8

000110a0 <mbrtowc@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #20, 20	; 0x14000
   110a8:	ldr	pc, [ip, #4032]!	; 0xfc0

000110ac <error@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #20, 20	; 0x14000
   110b4:	ldr	pc, [ip, #4024]!	; 0xfb8

000110b8 <open64@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #20, 20	; 0x14000
   110c0:	ldr	pc, [ip, #4016]!	; 0xfb0

000110c4 <getenv@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #20, 20	; 0x14000
   110cc:	ldr	pc, [ip, #4008]!	; 0xfa8

000110d0 <malloc@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #20, 20	; 0x14000
   110d8:	ldr	pc, [ip, #4000]!	; 0xfa0

000110dc <__libc_start_main@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #20, 20	; 0x14000
   110e4:	ldr	pc, [ip, #3992]!	; 0xf98

000110e8 <__freading@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #20, 20	; 0x14000
   110f0:	ldr	pc, [ip, #3984]!	; 0xf90

000110f4 <__gmon_start__@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #20, 20	; 0x14000
   110fc:	ldr	pc, [ip, #3976]!	; 0xf88

00011100 <getopt_long@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #20, 20	; 0x14000
   11108:	ldr	pc, [ip, #3968]!	; 0xf80

0001110c <kill@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #20, 20	; 0x14000
   11114:	ldr	pc, [ip, #3960]!	; 0xf78

00011118 <__ctype_b_loc@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #20, 20	; 0x14000
   11120:	ldr	pc, [ip, #3952]!	; 0xf70

00011124 <exit@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #20, 20	; 0x14000
   1112c:	ldr	pc, [ip, #3944]!	; 0xf68

00011130 <strlen@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #20, 20	; 0x14000
   11138:	ldr	pc, [ip, #3936]!	; 0xf60

0001113c <ungetc@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #20, 20	; 0x14000
   11144:	ldr	pc, [ip, #3928]!	; 0xf58

00011148 <__errno_location@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #20, 20	; 0x14000
   11150:	ldr	pc, [ip, #3920]!	; 0xf50

00011154 <__cxa_atexit@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #20, 20	; 0x14000
   1115c:	ldr	pc, [ip, #3912]!	; 0xf48

00011160 <memset@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #20, 20	; 0x14000
   11168:	ldr	pc, [ip, #3904]!	; 0xf40

0001116c <strncpy@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #20, 20	; 0x14000
   11174:	ldr	pc, [ip, #3896]!	; 0xf38

00011178 <fscanf@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #20, 20	; 0x14000
   11180:	ldr	pc, [ip, #3888]!	; 0xf30

00011184 <__printf_chk@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #20, 20	; 0x14000
   1118c:	ldr	pc, [ip, #3880]!	; 0xf28

00011190 <fileno@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #20, 20	; 0x14000
   11198:	ldr	pc, [ip, #3872]!	; 0xf20

0001119c <__fprintf_chk@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #20, 20	; 0x14000
   111a4:	ldr	pc, [ip, #3864]!	; 0xf18

000111a8 <fclose@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #20, 20	; 0x14000
   111b0:	ldr	pc, [ip, #3856]!	; 0xf10

000111b4 <fseeko64@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #20, 20	; 0x14000
   111bc:	ldr	pc, [ip, #3848]!	; 0xf08

000111c0 <__uflow@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #20, 20	; 0x14000
   111c8:	ldr	pc, [ip, #3840]!	; 0xf00

000111cc <endutxent@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #20, 20	; 0x14000
   111d4:	ldr	pc, [ip, #3832]!	; 0xef8

000111d8 <__overflow@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #20, 20	; 0x14000
   111e0:	ldr	pc, [ip, #3824]!	; 0xef0

000111e4 <setlocale@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #20, 20	; 0x14000
   111ec:	ldr	pc, [ip, #3816]!	; 0xee8

000111f0 <strrchr@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #20, 20	; 0x14000
   111f8:	ldr	pc, [ip, #3808]!	; 0xee0

000111fc <nl_langinfo@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #20, 20	; 0x14000
   11204:	ldr	pc, [ip, #3800]!	; 0xed8

00011208 <qsort@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #20, 20	; 0x14000
   11210:	ldr	pc, [ip, #3792]!	; 0xed0

00011214 <bindtextdomain@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #20, 20	; 0x14000
   1121c:	ldr	pc, [ip, #3784]!	; 0xec8

00011220 <strncmp@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #20, 20	; 0x14000
   11228:	ldr	pc, [ip, #3776]!	; 0xec0

0001122c <abort@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #20, 20	; 0x14000
   11234:	ldr	pc, [ip, #3768]!	; 0xeb8

00011238 <getutxent@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #20, 20	; 0x14000
   11240:	ldr	pc, [ip, #3760]!	; 0xeb0

00011244 <close@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #20, 20	; 0x14000
   1124c:	ldr	pc, [ip, #3752]!	; 0xea8

Disassembly of section .text:

00011250 <usage@@Base-0x2d0>:
   11250:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11254:	mov	r7, r0
   11258:	ldr	r8, [pc, #340]	; 113b4 <close@plt+0x170>
   1125c:	sub	sp, sp, #24
   11260:	ldr	r0, [r1]
   11264:	mov	r6, r1
   11268:	add	r8, pc, r8
   1126c:	ldr	r9, [pc, #324]	; 113b8 <close@plt+0x174>
   11270:	bl	11bd0 <close_stdout@@Base+0x2c8>
   11274:	mov	r0, #6
   11278:	mov	r1, r8
   1127c:	add	r9, pc, r9
   11280:	bl	111e4 <setlocale@plt>
   11284:	ldr	r1, [pc, #304]	; 113bc <close@plt+0x178>
   11288:	mov	r0, r9
   1128c:	ldr	r4, [pc, #300]	; 113c0 <close@plt+0x17c>
   11290:	add	r1, pc, r1
   11294:	mov	r5, #0
   11298:	bl	11214 <bindtextdomain@plt>
   1129c:	mov	r0, r9
   112a0:	bl	1104c <textdomain@plt>
   112a4:	ldr	r3, [pc, #280]	; 113c4 <close@plt+0x180>
   112a8:	add	r4, pc, r4
   112ac:	ldr	r9, [pc, #276]	; 113c8 <close@plt+0x184>
   112b0:	ldr	r0, [r4, r3]
   112b4:	add	r9, pc, r9
   112b8:	bl	146a4 <close_stdout@@Base+0x2d9c>
   112bc:	ldr	r3, [pc, #264]	; 113cc <close@plt+0x188>
   112c0:	ldr	ip, [pc, #264]	; 113d0 <close@plt+0x18c>
   112c4:	mov	r0, r7
   112c8:	ldr	lr, [pc, #260]	; 113d4 <close@plt+0x190>
   112cc:	mov	r1, r6
   112d0:	ldr	r3, [r4, r3]
   112d4:	ldr	r2, [pc, #252]	; 113d8 <close@plt+0x194>
   112d8:	add	lr, pc, lr
   112dc:	ldr	sl, [r3]
   112e0:	add	r2, pc, r2
   112e4:	ldr	r3, [pc, #240]	; 113dc <close@plt+0x198>
   112e8:	str	sl, [sp]
   112ec:	add	r3, pc, r3
   112f0:	ldr	ip, [r4, ip]
   112f4:	str	lr, [sp, #12]
   112f8:	str	r9, [sp, #8]
   112fc:	str	ip, [sp, #4]
   11300:	str	r5, [sp, #16]
   11304:	bl	11ac4 <close_stdout@@Base+0x1bc>
   11308:	str	r5, [sp]
   1130c:	mov	r2, r8
   11310:	mov	r0, r7
   11314:	mov	r1, r6
   11318:	mov	r3, r5
   1131c:	bl	11100 <getopt_long@plt>
   11320:	cmn	r0, #1
   11324:	beq	11330 <close@plt+0xec>
   11328:	mov	r0, #1
   1132c:	bl	11520 <usage@@Base>
   11330:	ldr	r3, [pc, #168]	; 113e0 <close@plt+0x19c>
   11334:	ldr	r4, [r4, r3]
   11338:	ldr	r3, [r4]
   1133c:	subs	r7, r7, r3
   11340:	beq	113a0 <close@plt+0x15c>
   11344:	cmp	r7, #1
   11348:	bne	11360 <close@plt+0x11c>
   1134c:	ldr	r0, [r6, r3, lsl #2]
   11350:	mov	r1, r5
   11354:	bl	11724 <usage@@Base+0x204>
   11358:	mov	r0, #0
   1135c:	bl	11124 <exit@plt>
   11360:	ldr	r1, [pc, #124]	; 113e4 <close@plt+0x1a0>
   11364:	mov	r2, #5
   11368:	mov	r0, r5
   1136c:	add	r1, pc, r1
   11370:	bl	1101c <dcgettext@plt>
   11374:	ldr	r3, [r4]
   11378:	add	r3, r3, #1
   1137c:	mov	r7, r0
   11380:	ldr	r0, [r6, r3, lsl #2]
   11384:	bl	13420 <close_stdout@@Base+0x1b18>
   11388:	mov	r1, r5
   1138c:	mov	r2, r7
   11390:	mov	r3, r0
   11394:	mov	r0, r5
   11398:	bl	110ac <error@plt>
   1139c:	b	11328 <close@plt+0xe4>
   113a0:	ldr	r0, [pc, #64]	; 113e8 <close@plt+0x1a4>
   113a4:	mov	r1, #1
   113a8:	add	r0, pc, r0
   113ac:	bl	11724 <usage@@Base+0x204>
   113b0:	b	11358 <close@plt+0x114>
   113b4:	andeq	r3, r0, ip, lsl #13
   113b8:			; <UNDEFINED> instruction: 0x000035b8
   113bc:	andeq	r3, r0, r8, ror #12
   113c0:	andeq	r4, r1, r0, asr sp
   113c4:	andeq	r0, r0, ip, lsl #2
   113c8:	andeq	r3, r0, r0, ror #12
   113cc:	andeq	r0, r0, r4, lsl #2
   113d0:	andeq	r0, r0, ip, lsl r1
   113d4:	andeq	r3, r0, r0, asr r6
   113d8:	andeq	r3, r0, ip, lsr #12
   113dc:	andeq	r3, r0, r4, asr #10
   113e0:	andeq	r0, r0, r0, lsl #2
   113e4:	andeq	r3, r0, ip, asr #11
   113e8:	andeq	r3, r0, r8, ror #7
   113ec:	mov	fp, #0
   113f0:	mov	lr, #0
   113f4:	pop	{r1}		; (ldr r1, [sp], #4)
   113f8:	mov	r2, sp
   113fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11400:	push	{r0}		; (str r0, [sp, #-4]!)
   11404:	ldr	ip, [pc, #16]	; 1141c <close@plt+0x1d8>
   11408:	push	{ip}		; (str ip, [sp, #-4]!)
   1140c:	ldr	r0, [pc, #12]	; 11420 <close@plt+0x1dc>
   11410:	ldr	r3, [pc, #12]	; 11424 <close@plt+0x1e0>
   11414:	bl	110dc <__libc_start_main@plt>
   11418:	bl	1122c <abort@plt>
   1141c:	andeq	r4, r1, r0, lsr #13
   11420:	andeq	r1, r1, r0, asr r2
   11424:	andeq	r4, r1, ip, lsr r6
   11428:	ldr	r3, [pc, #20]	; 11444 <close@plt+0x200>
   1142c:	ldr	r2, [pc, #20]	; 11448 <close@plt+0x204>
   11430:	add	r3, pc, r3
   11434:	ldr	r2, [r3, r2]
   11438:	cmp	r2, #0
   1143c:	bxeq	lr
   11440:	b	110f4 <__gmon_start__@plt>
   11444:	andeq	r4, r1, r8, asr #23
   11448:	andeq	r0, r0, r0, lsl r1
   1144c:	push	{r3, lr}
   11450:	movw	r0, #24964	; 0x6184
   11454:	ldr	r3, [pc, #36]	; 11480 <close@plt+0x23c>
   11458:	movt	r0, #2
   1145c:	rsb	r3, r0, r3
   11460:	cmp	r3, #6
   11464:	popls	{r3, pc}
   11468:	movw	r3, #0
   1146c:	movt	r3, #0
   11470:	cmp	r3, #0
   11474:	popeq	{r3, pc}
   11478:	blx	r3
   1147c:	pop	{r3, pc}
   11480:	andeq	r6, r2, r7, lsl #3
   11484:	push	{r3, lr}
   11488:	movw	r0, #24964	; 0x6184
   1148c:	movw	r3, #24964	; 0x6184
   11490:	movt	r0, #2
   11494:	movt	r3, #2
   11498:	rsb	r3, r0, r3
   1149c:	asr	r3, r3, #2
   114a0:	add	r3, r3, r3, lsr #31
   114a4:	asrs	r1, r3, #1
   114a8:	popeq	{r3, pc}
   114ac:	movw	r2, #0
   114b0:	movt	r2, #0
   114b4:	cmp	r2, #0
   114b8:	popeq	{r3, pc}
   114bc:	blx	r2
   114c0:	pop	{r3, pc}
   114c4:	push	{r4, lr}
   114c8:	movw	r4, #24964	; 0x6184
   114cc:	movt	r4, #2
   114d0:	ldrb	r3, [r4]
   114d4:	cmp	r3, #0
   114d8:	popne	{r4, pc}
   114dc:	bl	1144c <close@plt+0x208>
   114e0:	mov	r3, #1
   114e4:	strb	r3, [r4]
   114e8:	pop	{r4, pc}
   114ec:	movw	r0, #24240	; 0x5eb0
   114f0:	movt	r0, #2
   114f4:	push	{r3, lr}
   114f8:	ldr	r3, [r0]
   114fc:	cmp	r3, #0
   11500:	beq	11518 <close@plt+0x2d4>
   11504:	movw	r3, #0
   11508:	movt	r3, #0
   1150c:	cmp	r3, #0
   11510:	beq	11518 <close@plt+0x2d4>
   11514:	blx	r3
   11518:	pop	{r3, lr}
   1151c:	b	11484 <close@plt+0x240>

00011520 <usage@@Base>:
   11520:	push	{r4, r5, r6, lr}
   11524:	subs	r4, r0, #0
   11528:	ldr	r5, [pc, #420]	; 116d4 <usage@@Base+0x1b4>
   1152c:	add	r5, pc, r5
   11530:	beq	11578 <usage@@Base+0x58>
   11534:	ldr	r3, [pc, #412]	; 116d8 <usage@@Base+0x1b8>
   11538:	mov	r2, #5
   1153c:	ldr	r1, [pc, #408]	; 116dc <usage@@Base+0x1bc>
   11540:	mov	r0, #0
   11544:	ldr	r3, [r5, r3]
   11548:	add	r1, pc, r1
   1154c:	ldr	r6, [r3]
   11550:	bl	1101c <dcgettext@plt>
   11554:	ldr	r3, [pc, #388]	; 116e0 <usage@@Base+0x1c0>
   11558:	mov	r1, #1
   1155c:	ldr	r3, [r5, r3]
   11560:	ldr	r3, [r3]
   11564:	mov	r2, r0
   11568:	mov	r0, r6
   1156c:	bl	1119c <__fprintf_chk@plt>
   11570:	mov	r0, r4
   11574:	bl	11124 <exit@plt>
   11578:	ldr	r1, [pc, #356]	; 116e4 <usage@@Base+0x1c4>
   1157c:	mov	r2, #5
   11580:	add	r1, pc, r1
   11584:	bl	1101c <dcgettext@plt>
   11588:	ldr	r3, [pc, #336]	; 116e0 <usage@@Base+0x1c0>
   1158c:	ldr	r6, [r5, r3]
   11590:	ldr	r2, [r6]
   11594:	mov	r1, r0
   11598:	mov	r0, #1
   1159c:	bl	11184 <__printf_chk@plt>
   115a0:	ldr	r1, [pc, #320]	; 116e8 <usage@@Base+0x1c8>
   115a4:	mov	r2, #5
   115a8:	mov	r0, r4
   115ac:	add	r1, pc, r1
   115b0:	bl	1101c <dcgettext@plt>
   115b4:	ldr	r2, [pc, #304]	; 116ec <usage@@Base+0x1cc>
   115b8:	ldr	r3, [pc, #304]	; 116f0 <usage@@Base+0x1d0>
   115bc:	add	r2, pc, r2
   115c0:	add	r3, pc, r3
   115c4:	mov	r1, r0
   115c8:	mov	r0, #1
   115cc:	bl	11184 <__printf_chk@plt>
   115d0:	ldr	r1, [pc, #284]	; 116f4 <usage@@Base+0x1d4>
   115d4:	mov	r2, #5
   115d8:	mov	r0, r4
   115dc:	add	r1, pc, r1
   115e0:	bl	1101c <dcgettext@plt>
   115e4:	ldr	r3, [pc, #268]	; 116f8 <usage@@Base+0x1d8>
   115e8:	ldr	r5, [r5, r3]
   115ec:	ldr	r1, [r5]
   115f0:	bl	10fa4 <fputs_unlocked@plt>
   115f4:	ldr	r1, [pc, #256]	; 116fc <usage@@Base+0x1dc>
   115f8:	mov	r2, #5
   115fc:	mov	r0, r4
   11600:	add	r1, pc, r1
   11604:	bl	1101c <dcgettext@plt>
   11608:	ldr	r1, [r5]
   1160c:	bl	10fa4 <fputs_unlocked@plt>
   11610:	ldr	r1, [pc, #232]	; 11700 <usage@@Base+0x1e0>
   11614:	mov	r2, #5
   11618:	mov	r0, r4
   1161c:	add	r1, pc, r1
   11620:	bl	1101c <dcgettext@plt>
   11624:	ldr	r2, [pc, #216]	; 11704 <usage@@Base+0x1e4>
   11628:	ldr	r3, [pc, #216]	; 11708 <usage@@Base+0x1e8>
   1162c:	add	r2, pc, r2
   11630:	add	r3, pc, r3
   11634:	mov	r1, r0
   11638:	mov	r0, #1
   1163c:	bl	11184 <__printf_chk@plt>
   11640:	mov	r0, #5
   11644:	mov	r1, r4
   11648:	bl	111e4 <setlocale@plt>
   1164c:	cmp	r0, #0
   11650:	beq	1166c <usage@@Base+0x14c>
   11654:	ldr	r1, [pc, #176]	; 1170c <usage@@Base+0x1ec>
   11658:	mov	r2, #3
   1165c:	add	r1, pc, r1
   11660:	bl	11220 <strncmp@plt>
   11664:	cmp	r0, #0
   11668:	bne	116a0 <usage@@Base+0x180>
   1166c:	ldr	r1, [pc, #156]	; 11710 <usage@@Base+0x1f0>
   11670:	mov	r2, #5
   11674:	mov	r0, #0
   11678:	add	r1, pc, r1
   1167c:	bl	1101c <dcgettext@plt>
   11680:	mov	r5, r0
   11684:	ldr	r0, [r6]
   11688:	bl	11a20 <close_stdout@@Base+0x118>
   1168c:	mov	r1, r5
   11690:	mov	r2, r0
   11694:	mov	r0, #1
   11698:	bl	11184 <__printf_chk@plt>
   1169c:	b	11570 <usage@@Base+0x50>
   116a0:	ldr	r1, [pc, #108]	; 11714 <usage@@Base+0x1f4>
   116a4:	mov	r2, #5
   116a8:	mov	r0, r4
   116ac:	add	r1, pc, r1
   116b0:	bl	1101c <dcgettext@plt>
   116b4:	mov	r5, r0
   116b8:	ldr	r0, [r6]
   116bc:	bl	11a20 <close_stdout@@Base+0x118>
   116c0:	mov	r1, r5
   116c4:	mov	r2, r0
   116c8:	mov	r0, #1
   116cc:	bl	11184 <__printf_chk@plt>
   116d0:	b	1166c <usage@@Base+0x14c>
   116d4:	andeq	r4, r1, ip, asr #21
   116d8:	andeq	r0, r0, r8, lsl #2
   116dc:	muleq	r0, r0, r1
   116e0:	andeq	r0, r0, r8, lsr #2
   116e4:	andeq	r3, r0, r0, lsl #3
   116e8:	andeq	r3, r0, r4, ror r1
   116ec:	ldrdeq	r3, [r0], -r4
   116f0:	andeq	r3, r0, r0, ror #3
   116f4:	ldrdeq	r3, [r0], -r4
   116f8:	andeq	r0, r0, r8, lsl r1
   116fc:	andeq	r3, r0, r0, ror #3
   11700:	strdeq	r3, [r0], -ip
   11704:	andeq	r3, r0, r4, lsl #4
   11708:	andeq	r3, r0, r0, lsl r2
   1170c:	andeq	r3, r0, ip, lsl #4
   11710:	andeq	r3, r0, ip, lsr r2
   11714:	andeq	r3, r0, r0, asr #3
   11718:	ldr	r0, [r0]
   1171c:	ldr	r1, [r1]
   11720:	b	10fbc <strcmp@plt>
   11724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11728:	sub	sp, sp, #28
   1172c:	ldr	sl, [pc, #404]	; 118c8 <usage@@Base+0x3a8>
   11730:	mov	r3, r1
   11734:	ldr	ip, [pc, #400]	; 118cc <usage@@Base+0x3ac>
   11738:	add	r1, sp, #12
   1173c:	add	sl, pc, sl
   11740:	add	r2, sp, #16
   11744:	mov	r4, r0
   11748:	ldr	ip, [sl, ip]
   1174c:	str	ip, [sp, #4]
   11750:	ldr	ip, [ip]
   11754:	str	ip, [sp, #20]
   11758:	bl	13c98 <close_stdout@@Base+0x2390>
   1175c:	cmp	r0, #0
   11760:	beq	11780 <usage@@Base+0x260>
   11764:	bl	11148 <__errno_location@plt>
   11768:	ldr	r2, [pc, #352]	; 118d0 <usage@@Base+0x3b0>
   1176c:	mov	r3, r4
   11770:	add	r2, pc, r2
   11774:	ldr	r1, [r0]
   11778:	mov	r0, #1
   1177c:	bl	110ac <error@plt>
   11780:	ldr	r4, [sp, #12]
   11784:	ldr	r5, [sp, #16]
   11788:	cmn	r4, #-1073741823	; 0xc0000001
   1178c:	bhi	118c0 <usage@@Base+0x3a0>
   11790:	lsl	r0, r4, #2
   11794:	bl	139cc <close_stdout@@Base+0x20c4>
   11798:	cmp	r4, #0
   1179c:	mov	r7, r0
   117a0:	beq	1189c <usage@@Base+0x37c>
   117a4:	mov	r6, #0
   117a8:	ldrb	r3, [r5, #44]	; 0x2c
   117ac:	cmp	r3, #0
   117b0:	beq	117c0 <usage@@Base+0x2a0>
   117b4:	ldrsh	r3, [r5]
   117b8:	cmp	r3, #7
   117bc:	beq	11888 <usage@@Base+0x368>
   117c0:	subs	r4, r4, #1
   117c4:	add	r5, r5, #384	; 0x180
   117c8:	bne	117a8 <usage@@Base+0x288>
   117cc:	ldr	r3, [pc, #256]	; 118d4 <usage@@Base+0x3b4>
   117d0:	mov	r0, r7
   117d4:	mov	r1, r6
   117d8:	mov	r2, #4
   117dc:	add	r3, pc, r3
   117e0:	bl	11208 <qsort@plt>
   117e4:	cmp	r6, #0
   117e8:	beq	1185c <usage@@Base+0x33c>
   117ec:	ldr	r3, [pc, #228]	; 118d8 <usage@@Base+0x3b8>
   117f0:	sub	r9, r7, #4
   117f4:	sub	r5, r6, #1
   117f8:	mov	fp, r9
   117fc:	ldr	sl, [sl, r3]
   11800:	cmp	r5, r4
   11804:	ldr	r1, [sl]
   11808:	ldr	r0, [fp, #4]!
   1180c:	movls	r8, #10
   11810:	movhi	r8, #32
   11814:	bl	10fa4 <fputs_unlocked@plt>
   11818:	ldr	r0, [sl]
   1181c:	ldr	r2, [r0, #20]
   11820:	ldr	r1, [r0, #24]
   11824:	cmp	r2, r1
   11828:	addcc	r1, r2, #1
   1182c:	strcc	r1, [r0, #20]
   11830:	strbcc	r8, [r2]
   11834:	bcs	118b4 <usage@@Base+0x394>
   11838:	add	r4, r4, #1
   1183c:	cmp	r4, r6
   11840:	bne	11800 <usage@@Base+0x2e0>
   11844:	mov	r4, #0
   11848:	add	r4, r4, #1
   1184c:	ldr	r0, [r9, #4]!
   11850:	bl	10fe0 <free@plt>
   11854:	cmp	r4, r6
   11858:	bne	11848 <usage@@Base+0x328>
   1185c:	mov	r0, r7
   11860:	bl	10fe0 <free@plt>
   11864:	ldr	r0, [sp, #16]
   11868:	bl	10fe0 <free@plt>
   1186c:	ldr	r1, [sp, #4]
   11870:	ldr	r2, [sp, #20]
   11874:	ldr	r3, [r1]
   11878:	cmp	r2, r3
   1187c:	bne	118c4 <usage@@Base+0x3a4>
   11880:	add	sp, sp, #28
   11884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11888:	mov	r0, r5
   1188c:	bl	13c38 <close_stdout@@Base+0x2330>
   11890:	str	r0, [r7, r6, lsl #2]
   11894:	add	r6, r6, #1
   11898:	b	117c0 <usage@@Base+0x2a0>
   1189c:	ldr	r3, [pc, #56]	; 118dc <usage@@Base+0x3bc>
   118a0:	mov	r1, r4
   118a4:	mov	r2, #4
   118a8:	add	r3, pc, r3
   118ac:	bl	11208 <qsort@plt>
   118b0:	b	1185c <usage@@Base+0x33c>
   118b4:	mov	r1, r8
   118b8:	bl	111d8 <__overflow@plt>
   118bc:	b	11838 <usage@@Base+0x318>
   118c0:	bl	13be0 <close_stdout@@Base+0x22d8>
   118c4:	bl	11034 <__stack_chk_fail@plt>
   118c8:			; <UNDEFINED> instruction: 0x000148bc
   118cc:	strdeq	r0, [r0], -ip
   118d0:	strdeq	r3, [r0], -r4
   118d4:			; <UNDEFINED> instruction: 0xffffff34
   118d8:	andeq	r0, r0, r8, lsl r1
   118dc:			; <UNDEFINED> instruction: 0xfffffe68
   118e0:	ldr	r3, [pc, #8]	; 118f0 <usage@@Base+0x3d0>
   118e4:	add	r3, pc, r3
   118e8:	str	r0, [r3]
   118ec:	bx	lr
   118f0:	muleq	r1, ip, r8
   118f4:	ldr	r3, [pc, #8]	; 11904 <usage@@Base+0x3e4>
   118f8:	add	r3, pc, r3
   118fc:	strb	r0, [r3, #4]
   11900:	bx	lr
   11904:	andeq	r4, r1, r8, lsl #17

00011908 <close_stdout@@Base>:
   11908:	push	{r4, r5, r6, r7, lr}
   1190c:	sub	sp, sp, #12
   11910:	ldr	r4, [pc, #228]	; 119fc <close_stdout@@Base+0xf4>
   11914:	ldr	r3, [pc, #228]	; 11a00 <close_stdout@@Base+0xf8>
   11918:	add	r4, pc, r4
   1191c:	ldr	r3, [r4, r3]
   11920:	ldr	r0, [r3]
   11924:	bl	13dd8 <close_stdout@@Base+0x24d0>
   11928:	cmp	r0, #0
   1192c:	beq	11954 <close_stdout@@Base+0x4c>
   11930:	ldr	r3, [pc, #204]	; 11a04 <close_stdout@@Base+0xfc>
   11934:	add	r3, pc, r3
   11938:	ldrb	r3, [r3, #4]
   1193c:	cmp	r3, #0
   11940:	beq	11974 <close_stdout@@Base+0x6c>
   11944:	bl	11148 <__errno_location@plt>
   11948:	ldr	r3, [r0]
   1194c:	cmp	r3, #32
   11950:	bne	11974 <close_stdout@@Base+0x6c>
   11954:	ldr	r3, [pc, #172]	; 11a08 <close_stdout@@Base+0x100>
   11958:	ldr	r3, [r4, r3]
   1195c:	ldr	r0, [r3]
   11960:	bl	13dd8 <close_stdout@@Base+0x24d0>
   11964:	cmp	r0, #0
   11968:	bne	119c8 <close_stdout@@Base+0xc0>
   1196c:	add	sp, sp, #12
   11970:	pop	{r4, r5, r6, r7, pc}
   11974:	ldr	r1, [pc, #144]	; 11a0c <close_stdout@@Base+0x104>
   11978:	mov	r0, #0
   1197c:	mov	r2, #5
   11980:	add	r1, pc, r1
   11984:	bl	1101c <dcgettext@plt>
   11988:	ldr	r3, [pc, #128]	; 11a10 <close_stdout@@Base+0x108>
   1198c:	ldr	r5, [pc, r3]
   11990:	cmp	r5, #0
   11994:	mov	r6, r0
   11998:	beq	119d8 <close_stdout@@Base+0xd0>
   1199c:	bl	11148 <__errno_location@plt>
   119a0:	ldr	r7, [r0]
   119a4:	mov	r0, r5
   119a8:	bl	132cc <close_stdout@@Base+0x19c4>
   119ac:	ldr	r2, [pc, #96]	; 11a14 <close_stdout@@Base+0x10c>
   119b0:	str	r6, [sp]
   119b4:	mov	r1, r7
   119b8:	add	r2, pc, r2
   119bc:	mov	r3, r0
   119c0:	mov	r0, #0
   119c4:	bl	110ac <error@plt>
   119c8:	ldr	r3, [pc, #72]	; 11a18 <close_stdout@@Base+0x110>
   119cc:	ldr	r3, [r4, r3]
   119d0:	ldr	r0, [r3]
   119d4:	bl	10fec <_exit@plt>
   119d8:	bl	11148 <__errno_location@plt>
   119dc:	ldr	r2, [pc, #56]	; 11a1c <close_stdout@@Base+0x114>
   119e0:	add	r2, pc, r2
   119e4:	mov	r3, r0
   119e8:	mov	r0, r5
   119ec:	ldr	r1, [r3]
   119f0:	mov	r3, r6
   119f4:	bl	110ac <error@plt>
   119f8:	b	119c8 <close_stdout@@Base+0xc0>
   119fc:	andeq	r4, r1, r0, ror #13
   11a00:	andeq	r0, r0, r8, lsl r1
   11a04:	andeq	r4, r1, ip, asr #16
   11a08:	andeq	r0, r0, r8, lsl #2
   11a0c:	ldrdeq	r2, [r0], -r4
   11a10:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11a14:	andeq	r2, r0, r8, lsr #31
   11a18:	andeq	r0, r0, r0, lsr #2
   11a1c:	andeq	r2, r0, r4, lsl #31
   11a20:	ldrb	r3, [r0]
   11a24:	cmp	r3, #47	; 0x2f
   11a28:	bne	11a44 <close_stdout@@Base+0x13c>
   11a2c:	add	r2, r0, #1
   11a30:	mov	r0, r2
   11a34:	add	r2, r2, #1
   11a38:	ldrb	r3, [r0]
   11a3c:	cmp	r3, #47	; 0x2f
   11a40:	beq	11a30 <close_stdout@@Base+0x128>
   11a44:	cmp	r3, #0
   11a48:	bxeq	lr
   11a4c:	mov	r2, r0
   11a50:	mov	r1, #0
   11a54:	cmp	r3, #47	; 0x2f
   11a58:	moveq	r1, #1
   11a5c:	beq	11a6c <close_stdout@@Base+0x164>
   11a60:	cmp	r1, #0
   11a64:	movne	r0, r2
   11a68:	movne	r1, #0
   11a6c:	ldrb	r3, [r2, #1]!
   11a70:	cmp	r3, #0
   11a74:	bne	11a54 <close_stdout@@Base+0x14c>
   11a78:	bx	lr
   11a7c:	push	{r4, lr}
   11a80:	mov	r4, r0
   11a84:	bl	11130 <strlen@plt>
   11a88:	cmp	r0, #1
   11a8c:	popls	{r4, pc}
   11a90:	sub	r3, r0, #1
   11a94:	ldrb	r2, [r4, r3]
   11a98:	cmp	r2, #47	; 0x2f
   11a9c:	popne	{r4, pc}
   11aa0:	mov	r0, r3
   11aa4:	cmp	r0, #1
   11aa8:	sub	r3, r3, #1
   11aac:	beq	11ac0 <close_stdout@@Base+0x1b8>
   11ab0:	ldrb	r2, [r4, r3]
   11ab4:	cmp	r2, #47	; 0x2f
   11ab8:	popne	{r4, pc}
   11abc:	b	11aa0 <close_stdout@@Base+0x198>
   11ac0:	pop	{r4, pc}
   11ac4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ac8:	mov	r9, r3
   11acc:	ldr	r4, [pc, #224]	; 11bb4 <close_stdout@@Base+0x2ac>
   11ad0:	sub	sp, sp, #28
   11ad4:	ldr	ip, [pc, #220]	; 11bb8 <close_stdout@@Base+0x2b0>
   11ad8:	cmp	r0, #2
   11adc:	add	r4, pc, r4
   11ae0:	ldr	r5, [pc, #212]	; 11bbc <close_stdout@@Base+0x2b4>
   11ae4:	mov	r7, #0
   11ae8:	mov	sl, r2
   11aec:	ldr	r6, [r4, ip]
   11af0:	ldr	r8, [sp, #64]	; 0x40
   11af4:	ldr	fp, [sp, #68]	; 0x44
   11af8:	ldr	r3, [r6]
   11afc:	str	r3, [sp, #20]
   11b00:	ldr	r5, [r4, r5]
   11b04:	ldr	ip, [r5]
   11b08:	str	r7, [r5]
   11b0c:	beq	11b3c <close_stdout@@Base+0x234>
   11b10:	ldr	r3, [pc, #168]	; 11bc0 <close_stdout@@Base+0x2b8>
   11b14:	mov	r2, #0
   11b18:	ldr	r0, [sp, #20]
   11b1c:	ldr	r1, [r6]
   11b20:	str	ip, [r5]
   11b24:	ldr	r3, [r4, r3]
   11b28:	cmp	r0, r1
   11b2c:	str	r2, [r3]
   11b30:	bne	11bb0 <close_stdout@@Base+0x2a8>
   11b34:	add	sp, sp, #28
   11b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b3c:	ldr	r2, [pc, #128]	; 11bc4 <close_stdout@@Base+0x2bc>
   11b40:	ldr	r3, [pc, #128]	; 11bc8 <close_stdout@@Base+0x2c0>
   11b44:	str	r7, [sp]
   11b48:	add	r2, pc, r2
   11b4c:	add	r3, pc, r3
   11b50:	str	ip, [sp, #12]
   11b54:	bl	11100 <getopt_long@plt>
   11b58:	ldr	ip, [sp, #12]
   11b5c:	cmn	r0, #1
   11b60:	beq	11b10 <close_stdout@@Base+0x208>
   11b64:	cmp	r0, #104	; 0x68
   11b68:	beq	11ba4 <close_stdout@@Base+0x29c>
   11b6c:	cmp	r0, #118	; 0x76
   11b70:	bne	11b10 <close_stdout@@Base+0x208>
   11b74:	ldr	ip, [pc, #80]	; 11bcc <close_stdout@@Base+0x2c4>
   11b78:	add	r0, sp, #72	; 0x48
   11b7c:	str	r0, [sp, #16]
   11b80:	mov	r1, sl
   11b84:	mov	r2, r9
   11b88:	mov	r3, r8
   11b8c:	ldr	ip, [r4, ip]
   11b90:	str	r0, [sp]
   11b94:	ldr	r0, [ip]
   11b98:	bl	13840 <close_stdout@@Base+0x1f38>
   11b9c:	mov	r0, #0
   11ba0:	bl	11124 <exit@plt>
   11ba4:	mov	r0, r7
   11ba8:	blx	fp
   11bac:	b	11b74 <close_stdout@@Base+0x26c>
   11bb0:	bl	11034 <__stack_chk_fail@plt>
   11bb4:	andeq	r4, r1, ip, lsl r5
   11bb8:	strdeq	r0, [r0], -ip
   11bbc:	andeq	r0, r0, r0, lsr r1
   11bc0:	andeq	r0, r0, r0, lsl #2
   11bc4:	andeq	r2, r0, r0, lsr #28
   11bc8:	andeq	r4, r1, r0, ror #6
   11bcc:	andeq	r0, r0, r8, lsl r1
   11bd0:	push	{r3, r4, r5, r6, r7, lr}
   11bd4:	subs	r4, r0, #0
   11bd8:	ldr	r5, [pc, #172]	; 11c8c <close_stdout@@Base+0x384>
   11bdc:	add	r5, pc, r5
   11be0:	beq	11c68 <close_stdout@@Base+0x360>
   11be4:	mov	r1, #47	; 0x2f
   11be8:	bl	111f0 <strrchr@plt>
   11bec:	subs	r6, r0, #0
   11bf0:	beq	11c4c <close_stdout@@Base+0x344>
   11bf4:	add	r7, r6, #1
   11bf8:	rsb	r3, r4, r7
   11bfc:	cmp	r3, #6
   11c00:	ble	11c4c <close_stdout@@Base+0x344>
   11c04:	ldr	r1, [pc, #132]	; 11c90 <close_stdout@@Base+0x388>
   11c08:	sub	r0, r6, #6
   11c0c:	mov	r2, #7
   11c10:	add	r1, pc, r1
   11c14:	bl	11220 <strncmp@plt>
   11c18:	cmp	r0, #0
   11c1c:	bne	11c4c <close_stdout@@Base+0x344>
   11c20:	ldr	r1, [pc, #108]	; 11c94 <close_stdout@@Base+0x38c>
   11c24:	mov	r0, r7
   11c28:	mov	r2, #3
   11c2c:	add	r1, pc, r1
   11c30:	bl	11220 <strncmp@plt>
   11c34:	cmp	r0, #0
   11c38:	movne	r4, r7
   11c3c:	ldreq	r3, [pc, #84]	; 11c98 <close_stdout@@Base+0x390>
   11c40:	addeq	r4, r6, #4
   11c44:	ldreq	r3, [r5, r3]
   11c48:	streq	r4, [r3]
   11c4c:	ldr	r2, [pc, #72]	; 11c9c <close_stdout@@Base+0x394>
   11c50:	ldr	r3, [pc, #72]	; 11ca0 <close_stdout@@Base+0x398>
   11c54:	ldr	r2, [r5, r2]
   11c58:	str	r4, [r2]
   11c5c:	ldr	r3, [r5, r3]
   11c60:	str	r4, [r3]
   11c64:	pop	{r3, r4, r5, r6, r7, pc}
   11c68:	ldr	r3, [pc, #52]	; 11ca4 <close_stdout@@Base+0x39c>
   11c6c:	mov	r1, #1
   11c70:	ldr	r0, [pc, #48]	; 11ca8 <close_stdout@@Base+0x3a0>
   11c74:	mov	r2, #55	; 0x37
   11c78:	ldr	r3, [r5, r3]
   11c7c:	add	r0, pc, r0
   11c80:	ldr	r3, [r3]
   11c84:	bl	11064 <fwrite@plt>
   11c88:	bl	1122c <abort@plt>
   11c8c:	andeq	r4, r1, ip, lsl r4
   11c90:	andeq	r2, r0, r4, lsr #27
   11c94:	muleq	r0, r0, sp
   11c98:	andeq	r0, r0, r4, lsr r1
   11c9c:	andeq	r0, r0, r8, lsr #2
   11ca0:	andeq	r0, r0, r4, lsr #2
   11ca4:	andeq	r0, r0, r8, lsl #2
   11ca8:	andeq	r2, r0, r0, lsl #26
   11cac:	push	{r3, lr}
   11cb0:	mov	r3, r0
   11cb4:	mov	r2, #0
   11cb8:	cmp	r1, #8
   11cbc:	str	r2, [r3], #4
   11cc0:	add	r3, r3, #4
   11cc4:	str	r2, [r0, #4]
   11cc8:	str	r2, [r3], #4
   11ccc:	str	r2, [r3], #4
   11cd0:	str	r2, [r3], #4
   11cd4:	str	r2, [r3], #4
   11cd8:	str	r2, [r3], #4
   11cdc:	str	r2, [r3], #4
   11ce0:	str	r2, [r3], #4
   11ce4:	str	r2, [r3], #4
   11ce8:	str	r2, [r3], #4
   11cec:	str	r2, [r3]
   11cf0:	beq	11cfc <close_stdout@@Base+0x3f4>
   11cf4:	str	r1, [r0]
   11cf8:	pop	{r3, pc}
   11cfc:	bl	1122c <abort@plt>
   11d00:	push	{r4, r5, r6, lr}
   11d04:	mov	r4, r0
   11d08:	mov	r6, r1
   11d0c:	mov	r0, #0
   11d10:	mov	r1, r4
   11d14:	mov	r2, #5
   11d18:	bl	1101c <dcgettext@plt>
   11d1c:	cmp	r0, r4
   11d20:	mov	r5, r0
   11d24:	beq	11d2c <close_stdout@@Base+0x424>
   11d28:	pop	{r4, r5, r6, pc}
   11d2c:	bl	13e58 <close_stdout@@Base+0x2550>
   11d30:	ldrb	r3, [r0]
   11d34:	bic	r3, r3, #32
   11d38:	cmp	r3, #85	; 0x55
   11d3c:	bne	11db0 <close_stdout@@Base+0x4a8>
   11d40:	ldrb	r3, [r0, #1]
   11d44:	bic	r3, r3, #32
   11d48:	cmp	r3, #84	; 0x54
   11d4c:	bne	11d9c <close_stdout@@Base+0x494>
   11d50:	ldrb	r3, [r0, #2]
   11d54:	bic	r3, r3, #32
   11d58:	cmp	r3, #70	; 0x46
   11d5c:	bne	11d9c <close_stdout@@Base+0x494>
   11d60:	ldrb	r3, [r0, #3]
   11d64:	cmp	r3, #45	; 0x2d
   11d68:	bne	11d9c <close_stdout@@Base+0x494>
   11d6c:	ldrb	r3, [r0, #4]
   11d70:	cmp	r3, #56	; 0x38
   11d74:	bne	11d9c <close_stdout@@Base+0x494>
   11d78:	ldrb	r3, [r0, #5]
   11d7c:	cmp	r3, #0
   11d80:	bne	11d9c <close_stdout@@Base+0x494>
   11d84:	ldrb	r3, [r5]
   11d88:	cmp	r3, #96	; 0x60
   11d8c:	beq	11e28 <close_stdout@@Base+0x520>
   11d90:	ldr	r0, [pc, #180]	; 11e4c <close_stdout@@Base+0x544>
   11d94:	add	r0, pc, r0
   11d98:	pop	{r4, r5, r6, pc}
   11d9c:	cmp	r6, #7
   11da0:	beq	11e34 <close_stdout@@Base+0x52c>
   11da4:	ldr	r0, [pc, #164]	; 11e50 <close_stdout@@Base+0x548>
   11da8:	add	r0, pc, r0
   11dac:	pop	{r4, r5, r6, pc}
   11db0:	cmp	r3, #71	; 0x47
   11db4:	bne	11d9c <close_stdout@@Base+0x494>
   11db8:	ldrb	r3, [r0, #1]
   11dbc:	bic	r3, r3, #32
   11dc0:	cmp	r3, #66	; 0x42
   11dc4:	bne	11d9c <close_stdout@@Base+0x494>
   11dc8:	ldrb	r3, [r0, #2]
   11dcc:	cmp	r3, #49	; 0x31
   11dd0:	bne	11d9c <close_stdout@@Base+0x494>
   11dd4:	ldrb	r3, [r0, #3]
   11dd8:	cmp	r3, #56	; 0x38
   11ddc:	bne	11d9c <close_stdout@@Base+0x494>
   11de0:	ldrb	r3, [r0, #4]
   11de4:	cmp	r3, #48	; 0x30
   11de8:	bne	11d9c <close_stdout@@Base+0x494>
   11dec:	ldrb	r3, [r0, #5]
   11df0:	cmp	r3, #51	; 0x33
   11df4:	bne	11d9c <close_stdout@@Base+0x494>
   11df8:	ldrb	r3, [r0, #6]
   11dfc:	cmp	r3, #48	; 0x30
   11e00:	bne	11d9c <close_stdout@@Base+0x494>
   11e04:	ldrb	r3, [r0, #7]
   11e08:	cmp	r3, #0
   11e0c:	bne	11d9c <close_stdout@@Base+0x494>
   11e10:	ldrb	r3, [r5]
   11e14:	cmp	r3, #96	; 0x60
   11e18:	beq	11e40 <close_stdout@@Base+0x538>
   11e1c:	ldr	r0, [pc, #48]	; 11e54 <close_stdout@@Base+0x54c>
   11e20:	add	r0, pc, r0
   11e24:	pop	{r4, r5, r6, pc}
   11e28:	ldr	r0, [pc, #40]	; 11e58 <close_stdout@@Base+0x550>
   11e2c:	add	r0, pc, r0
   11e30:	pop	{r4, r5, r6, pc}
   11e34:	ldr	r0, [pc, #32]	; 11e5c <close_stdout@@Base+0x554>
   11e38:	add	r0, pc, r0
   11e3c:	pop	{r4, r5, r6, pc}
   11e40:	ldr	r0, [pc, #24]	; 11e60 <close_stdout@@Base+0x558>
   11e44:	add	r0, pc, r0
   11e48:	pop	{r4, r5, r6, pc}
   11e4c:	andeq	r2, r0, ip, asr #24
   11e50:	andeq	r2, r0, r0, asr #24
   11e54:	andeq	r2, r0, r4, asr #23
   11e58:	andeq	r2, r0, r8, asr #23
   11e5c:			; <UNDEFINED> instruction: 0x00002bb4
   11e60:	andeq	r2, r0, ip, lsr #23
   11e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e68:	sub	sp, sp, #124	; 0x7c
   11e6c:	ldr	ip, [pc, #3304]	; 12b5c <close_stdout@@Base+0x1254>
   11e70:	mov	sl, r1
   11e74:	str	r0, [sp, #40]	; 0x28
   11e78:	mov	r8, r3
   11e7c:	ldr	r0, [pc, #3292]	; 12b60 <close_stdout@@Base+0x1258>
   11e80:	add	ip, pc, ip
   11e84:	str	r2, [sp, #32]
   11e88:	ldr	r1, [sp, #164]	; 0xa4
   11e8c:	mov	r3, ip
   11e90:	ldr	r0, [ip, r0]
   11e94:	ldr	r2, [sp, #172]	; 0xac
   11e98:	ubfx	r1, r1, #1, #1
   11e9c:	str	r1, [sp, #36]	; 0x24
   11ea0:	str	r0, [sp, #56]	; 0x38
   11ea4:	ldr	r0, [sp, #168]	; 0xa8
   11ea8:	ldr	r1, [sp, #176]	; 0xb0
   11eac:	str	r2, [sp, #72]	; 0x48
   11eb0:	str	r0, [sp, #48]	; 0x30
   11eb4:	ldr	r0, [sp, #56]	; 0x38
   11eb8:	str	r1, [sp, #68]	; 0x44
   11ebc:	ldr	r3, [r0]
   11ec0:	str	r3, [sp, #116]	; 0x74
   11ec4:	bl	1107c <__ctype_get_mb_cur_max@plt>
   11ec8:	ldr	r2, [sp, #160]	; 0xa0
   11ecc:	str	r0, [sp, #64]	; 0x40
   11ed0:	cmp	r2, #8
   11ed4:	addls	pc, pc, r2, lsl #2
   11ed8:	b	12a38 <close_stdout@@Base+0x1130>
   11edc:	b	11f00 <close_stdout@@Base+0x5f8>
   11ee0:	b	12750 <close_stdout@@Base+0xe48>
   11ee4:	b	12780 <close_stdout@@Base+0xe78>
   11ee8:	b	12630 <close_stdout@@Base+0xd28>
   11eec:	b	12670 <close_stdout@@Base+0xd68>
   11ef0:	b	1269c <close_stdout@@Base+0xd94>
   11ef4:	b	126bc <close_stdout@@Base+0xdb4>
   11ef8:	b	126bc <close_stdout@@Base+0xdb4>
   11efc:	b	126bc <close_stdout@@Base+0xdb4>
   11f00:	mov	r2, #0
   11f04:	str	r2, [sp, #36]	; 0x24
   11f08:	mov	r9, r2
   11f0c:	str	r2, [sp, #24]
   11f10:	str	r2, [sp, #28]
   11f14:	str	r2, [sp, #52]	; 0x34
   11f18:	ldr	r0, [sp, #36]	; 0x24
   11f1c:	mov	fp, #0
   11f20:	ldr	r1, [sp, #24]
   11f24:	eor	r2, r0, #1
   11f28:	eor	r3, r1, #1
   11f2c:	and	r3, r2, r3
   11f30:	and	r2, r1, r0
   11f34:	str	r3, [sp, #44]	; 0x2c
   11f38:	str	r2, [sp, #76]	; 0x4c
   11f3c:	cmn	r8, #1
   11f40:	beq	122c0 <close_stdout@@Base+0x9b8>
   11f44:	subs	r3, fp, r8
   11f48:	movne	r3, #1
   11f4c:	cmp	r3, #0
   11f50:	beq	122d8 <close_stdout@@Base+0x9d0>
   11f54:	ldr	r3, [sp, #28]
   11f58:	ldr	r0, [sp, #24]
   11f5c:	adds	r7, r3, #0
   11f60:	movne	r7, #1
   11f64:	ands	r6, r7, r0
   11f68:	bne	127c4 <close_stdout@@Base+0xebc>
   11f6c:	ldr	r1, [sp, #32]
   11f70:	add	r5, r1, fp
   11f74:	ldrb	r4, [r5]
   11f78:	cmp	r4, #126	; 0x7e
   11f7c:	addls	pc, pc, r4, lsl #2
   11f80:	b	12544 <close_stdout@@Base+0xc3c>
   11f84:	b	12450 <close_stdout@@Base+0xb48>
   11f88:	b	12544 <close_stdout@@Base+0xc3c>
   11f8c:	b	12544 <close_stdout@@Base+0xc3c>
   11f90:	b	12544 <close_stdout@@Base+0xc3c>
   11f94:	b	12544 <close_stdout@@Base+0xc3c>
   11f98:	b	12544 <close_stdout@@Base+0xc3c>
   11f9c:	b	12544 <close_stdout@@Base+0xc3c>
   11fa0:	b	12438 <close_stdout@@Base+0xb30>
   11fa4:	b	12420 <close_stdout@@Base+0xb18>
   11fa8:	b	12448 <close_stdout@@Base+0xb40>
   11fac:	b	12440 <close_stdout@@Base+0xb38>
   11fb0:	b	12430 <close_stdout@@Base+0xb28>
   11fb4:	b	12428 <close_stdout@@Base+0xb20>
   11fb8:	b	123ec <close_stdout@@Base+0xae4>
   11fbc:	b	12544 <close_stdout@@Base+0xc3c>
   11fc0:	b	12544 <close_stdout@@Base+0xc3c>
   11fc4:	b	12544 <close_stdout@@Base+0xc3c>
   11fc8:	b	12544 <close_stdout@@Base+0xc3c>
   11fcc:	b	12544 <close_stdout@@Base+0xc3c>
   11fd0:	b	12544 <close_stdout@@Base+0xc3c>
   11fd4:	b	12544 <close_stdout@@Base+0xc3c>
   11fd8:	b	12544 <close_stdout@@Base+0xc3c>
   11fdc:	b	12544 <close_stdout@@Base+0xc3c>
   11fe0:	b	12544 <close_stdout@@Base+0xc3c>
   11fe4:	b	12544 <close_stdout@@Base+0xc3c>
   11fe8:	b	12544 <close_stdout@@Base+0xc3c>
   11fec:	b	12544 <close_stdout@@Base+0xc3c>
   11ff0:	b	12544 <close_stdout@@Base+0xc3c>
   11ff4:	b	12544 <close_stdout@@Base+0xc3c>
   11ff8:	b	12544 <close_stdout@@Base+0xc3c>
   11ffc:	b	12544 <close_stdout@@Base+0xc3c>
   12000:	b	12544 <close_stdout@@Base+0xc3c>
   12004:	b	12378 <close_stdout@@Base+0xa70>
   12008:	b	12378 <close_stdout@@Base+0xa70>
   1200c:	b	12378 <close_stdout@@Base+0xa70>
   12010:	b	12370 <close_stdout@@Base+0xa68>
   12014:	b	12378 <close_stdout@@Base+0xa70>
   12018:	b	1224c <close_stdout@@Base+0x944>
   1201c:	b	12378 <close_stdout@@Base+0xa70>
   12020:	b	124ec <close_stdout@@Base+0xbe4>
   12024:	b	12378 <close_stdout@@Base+0xa70>
   12028:	b	12378 <close_stdout@@Base+0xa70>
   1202c:	b	12378 <close_stdout@@Base+0xa70>
   12030:	b	1224c <close_stdout@@Base+0x944>
   12034:	b	1224c <close_stdout@@Base+0x944>
   12038:	b	1224c <close_stdout@@Base+0x944>
   1203c:	b	1224c <close_stdout@@Base+0x944>
   12040:	b	1224c <close_stdout@@Base+0x944>
   12044:	b	1224c <close_stdout@@Base+0x944>
   12048:	b	1224c <close_stdout@@Base+0x944>
   1204c:	b	1224c <close_stdout@@Base+0x944>
   12050:	b	1224c <close_stdout@@Base+0x944>
   12054:	b	1224c <close_stdout@@Base+0x944>
   12058:	b	1224c <close_stdout@@Base+0x944>
   1205c:	b	1224c <close_stdout@@Base+0x944>
   12060:	b	1224c <close_stdout@@Base+0x944>
   12064:	b	1224c <close_stdout@@Base+0x944>
   12068:	b	1224c <close_stdout@@Base+0x944>
   1206c:	b	1224c <close_stdout@@Base+0x944>
   12070:	b	12378 <close_stdout@@Base+0xa70>
   12074:	b	12378 <close_stdout@@Base+0xa70>
   12078:	b	12378 <close_stdout@@Base+0xa70>
   1207c:	b	12378 <close_stdout@@Base+0xa70>
   12080:	b	12180 <close_stdout@@Base+0x878>
   12084:	b	12544 <close_stdout@@Base+0xc3c>
   12088:	b	1224c <close_stdout@@Base+0x944>
   1208c:	b	1224c <close_stdout@@Base+0x944>
   12090:	b	1224c <close_stdout@@Base+0x944>
   12094:	b	1224c <close_stdout@@Base+0x944>
   12098:	b	1224c <close_stdout@@Base+0x944>
   1209c:	b	1224c <close_stdout@@Base+0x944>
   120a0:	b	1224c <close_stdout@@Base+0x944>
   120a4:	b	1224c <close_stdout@@Base+0x944>
   120a8:	b	1224c <close_stdout@@Base+0x944>
   120ac:	b	1224c <close_stdout@@Base+0x944>
   120b0:	b	1224c <close_stdout@@Base+0x944>
   120b4:	b	1224c <close_stdout@@Base+0x944>
   120b8:	b	1224c <close_stdout@@Base+0x944>
   120bc:	b	1224c <close_stdout@@Base+0x944>
   120c0:	b	1224c <close_stdout@@Base+0x944>
   120c4:	b	1224c <close_stdout@@Base+0x944>
   120c8:	b	1224c <close_stdout@@Base+0x944>
   120cc:	b	1224c <close_stdout@@Base+0x944>
   120d0:	b	1224c <close_stdout@@Base+0x944>
   120d4:	b	1224c <close_stdout@@Base+0x944>
   120d8:	b	1224c <close_stdout@@Base+0x944>
   120dc:	b	1224c <close_stdout@@Base+0x944>
   120e0:	b	1224c <close_stdout@@Base+0x944>
   120e4:	b	1224c <close_stdout@@Base+0x944>
   120e8:	b	1224c <close_stdout@@Base+0x944>
   120ec:	b	1224c <close_stdout@@Base+0x944>
   120f0:	b	12378 <close_stdout@@Base+0xa70>
   120f4:	b	124d0 <close_stdout@@Base+0xbc8>
   120f8:	b	1224c <close_stdout@@Base+0x944>
   120fc:	b	12378 <close_stdout@@Base+0xa70>
   12100:	b	1224c <close_stdout@@Base+0x944>
   12104:	b	12378 <close_stdout@@Base+0xa70>
   12108:	b	1224c <close_stdout@@Base+0x944>
   1210c:	b	1224c <close_stdout@@Base+0x944>
   12110:	b	1224c <close_stdout@@Base+0x944>
   12114:	b	1224c <close_stdout@@Base+0x944>
   12118:	b	1224c <close_stdout@@Base+0x944>
   1211c:	b	1224c <close_stdout@@Base+0x944>
   12120:	b	1224c <close_stdout@@Base+0x944>
   12124:	b	1224c <close_stdout@@Base+0x944>
   12128:	b	1224c <close_stdout@@Base+0x944>
   1212c:	b	1224c <close_stdout@@Base+0x944>
   12130:	b	1224c <close_stdout@@Base+0x944>
   12134:	b	1224c <close_stdout@@Base+0x944>
   12138:	b	1224c <close_stdout@@Base+0x944>
   1213c:	b	1224c <close_stdout@@Base+0x944>
   12140:	b	1224c <close_stdout@@Base+0x944>
   12144:	b	1224c <close_stdout@@Base+0x944>
   12148:	b	1224c <close_stdout@@Base+0x944>
   1214c:	b	1224c <close_stdout@@Base+0x944>
   12150:	b	1224c <close_stdout@@Base+0x944>
   12154:	b	1224c <close_stdout@@Base+0x944>
   12158:	b	1224c <close_stdout@@Base+0x944>
   1215c:	b	1224c <close_stdout@@Base+0x944>
   12160:	b	1224c <close_stdout@@Base+0x944>
   12164:	b	1224c <close_stdout@@Base+0x944>
   12168:	b	1224c <close_stdout@@Base+0x944>
   1216c:	b	1224c <close_stdout@@Base+0x944>
   12170:	b	12358 <close_stdout@@Base+0xa50>
   12174:	b	12378 <close_stdout@@Base+0xa70>
   12178:	b	12358 <close_stdout@@Base+0xa50>
   1217c:	b	12370 <close_stdout@@Base+0xa68>
   12180:	ldr	r3, [sp, #160]	; 0xa0
   12184:	cmp	r3, #2
   12188:	beq	12a14 <close_stdout@@Base+0x110c>
   1218c:	cmp	r3, #3
   12190:	bne	1224c <close_stdout@@Base+0x944>
   12194:	ldr	r1, [sp, #164]	; 0xa4
   12198:	tst	r1, #4
   1219c:	beq	1224c <close_stdout@@Base+0x944>
   121a0:	add	r3, fp, #2
   121a4:	cmp	r8, r3
   121a8:	bls	1224c <close_stdout@@Base+0x944>
   121ac:	ldrb	r2, [r5, #1]
   121b0:	mov	r1, #1
   121b4:	cmp	r2, #63	; 0x3f
   121b8:	bne	1224c <close_stdout@@Base+0x944>
   121bc:	ldr	r0, [sp, #32]
   121c0:	ldrb	ip, [r0, r3]
   121c4:	sub	r0, ip, #33	; 0x21
   121c8:	uxtb	r0, r0
   121cc:	cmp	r0, #29
   121d0:	bhi	1224c <close_stdout@@Base+0x944>
   121d4:	lsl	r1, r1, r0
   121d8:	movw	r0, #20929	; 0x51c1
   121dc:	movt	r0, #14336	; 0x3800
   121e0:	and	r0, r1, r0
   121e4:	cmp	r0, #0
   121e8:	beq	1224c <close_stdout@@Base+0x944>
   121ec:	ldr	r1, [sp, #36]	; 0x24
   121f0:	cmp	r1, #0
   121f4:	bne	12394 <close_stdout@@Base+0xa8c>
   121f8:	cmp	r9, sl
   121fc:	mov	r4, ip
   12200:	mov	fp, r3
   12204:	ldrcc	r0, [sp, #40]	; 0x28
   12208:	strbcc	r2, [r0, r9]
   1220c:	add	r2, r9, #1
   12210:	cmp	sl, r2
   12214:	ldrhi	r0, [sp, #40]	; 0x28
   12218:	movhi	r1, #34	; 0x22
   1221c:	strbhi	r1, [r0, r2]
   12220:	add	r2, r9, #2
   12224:	cmp	sl, r2
   12228:	ldrhi	r0, [sp, #40]	; 0x28
   1222c:	movhi	r1, #34	; 0x22
   12230:	strbhi	r1, [r0, r2]
   12234:	add	r2, r9, #3
   12238:	cmp	sl, r2
   1223c:	add	r9, r9, #4
   12240:	ldrhi	r0, [sp, #40]	; 0x28
   12244:	movhi	r1, #63	; 0x3f
   12248:	strbhi	r1, [r0, r2]
   1224c:	ldr	r0, [sp, #44]	; 0x2c
   12250:	cmp	r0, #0
   12254:	bne	1227c <close_stdout@@Base+0x974>
   12258:	ldr	r1, [sp, #48]	; 0x30
   1225c:	cmp	r1, #0
   12260:	beq	1227c <close_stdout@@Base+0x974>
   12264:	ubfx	r2, r4, #5, #8
   12268:	and	r3, r4, #31
   1226c:	ldr	r2, [r1, r2, lsl #2]
   12270:	lsr	r3, r2, r3
   12274:	tst	r3, #1
   12278:	bne	12284 <close_stdout@@Base+0x97c>
   1227c:	cmp	r6, #0
   12280:	beq	122a4 <close_stdout@@Base+0x99c>
   12284:	ldr	r2, [sp, #36]	; 0x24
   12288:	cmp	r2, #0
   1228c:	bne	12394 <close_stdout@@Base+0xa8c>
   12290:	cmp	r9, sl
   12294:	ldrcc	r0, [sp, #40]	; 0x28
   12298:	movcc	r3, #92	; 0x5c
   1229c:	strbcc	r3, [r0, r9]
   122a0:	add	r9, r9, #1
   122a4:	add	fp, fp, #1
   122a8:	cmp	r9, sl
   122ac:	ldrcc	r1, [sp, #40]	; 0x28
   122b0:	strbcc	r4, [r1, r9]
   122b4:	cmn	r8, #1
   122b8:	add	r9, r9, #1
   122bc:	bne	11f44 <close_stdout@@Base+0x63c>
   122c0:	ldr	r2, [sp, #32]
   122c4:	ldrb	r3, [r2, fp]
   122c8:	adds	r3, r3, #0
   122cc:	movne	r3, #1
   122d0:	cmp	r3, #0
   122d4:	bne	11f54 <close_stdout@@Base+0x64c>
   122d8:	ldr	r3, [sp, #160]	; 0xa0
   122dc:	cmp	r9, #0
   122e0:	cmpeq	r3, #2
   122e4:	bne	122f4 <close_stdout@@Base+0x9ec>
   122e8:	ldr	r0, [sp, #36]	; 0x24
   122ec:	cmp	r0, #0
   122f0:	bne	12394 <close_stdout@@Base+0xa8c>
   122f4:	ldr	r1, [sp, #36]	; 0x24
   122f8:	ldr	r2, [sp, #52]	; 0x34
   122fc:	eor	r3, r1, #1
   12300:	cmp	r2, #0
   12304:	moveq	r3, #0
   12308:	andne	r3, r3, #1
   1230c:	cmp	r3, #0
   12310:	beq	1233c <close_stdout@@Base+0xa34>
   12314:	ldrb	r3, [r2]
   12318:	cmp	r3, #0
   1231c:	beq	1233c <close_stdout@@Base+0xa34>
   12320:	ldr	r1, [sp, #40]	; 0x28
   12324:	cmp	sl, r9
   12328:	strbhi	r3, [r1, r9]
   1232c:	ldrb	r3, [r2, #1]!
   12330:	add	r9, r9, #1
   12334:	cmp	r3, #0
   12338:	bne	12324 <close_stdout@@Base+0xa1c>
   1233c:	cmp	r9, sl
   12340:	movcs	r0, r9
   12344:	ldrcc	r1, [sp, #40]	; 0x28
   12348:	movcc	r3, #0
   1234c:	movcc	r0, r9
   12350:	strbcc	r3, [r1, r9]
   12354:	b	123d0 <close_stdout@@Base+0xac8>
   12358:	cmn	r8, #1
   1235c:	beq	12a24 <close_stdout@@Base+0x111c>
   12360:	subs	r3, r8, #1
   12364:	movne	r3, #1
   12368:	cmp	r3, #0
   1236c:	bne	1224c <close_stdout@@Base+0x944>
   12370:	cmp	fp, #0
   12374:	bne	1224c <close_stdout@@Base+0x944>
   12378:	ldr	r3, [sp, #36]	; 0x24
   1237c:	ldr	r0, [sp, #160]	; 0xa0
   12380:	cmp	r0, #2
   12384:	movne	r3, #0
   12388:	andeq	r3, r3, #1
   1238c:	cmp	r3, #0
   12390:	beq	1224c <close_stdout@@Base+0x944>
   12394:	ldr	r2, [sp, #164]	; 0xa4
   12398:	mov	ip, #0
   1239c:	ldr	r0, [sp, #160]	; 0xa0
   123a0:	bic	r3, r2, #2
   123a4:	ldr	r1, [sp, #72]	; 0x48
   123a8:	ldr	r2, [sp, #68]	; 0x44
   123ac:	stm	sp, {r0, r3}
   123b0:	mov	r3, r8
   123b4:	str	r1, [sp, #12]
   123b8:	mov	r1, sl
   123bc:	str	r2, [sp, #16]
   123c0:	ldr	r0, [sp, #40]	; 0x28
   123c4:	ldr	r2, [sp, #32]
   123c8:	str	ip, [sp, #8]
   123cc:	bl	11e64 <close_stdout@@Base+0x55c>
   123d0:	ldr	r1, [sp, #56]	; 0x38
   123d4:	ldr	r2, [sp, #116]	; 0x74
   123d8:	ldr	r3, [r1]
   123dc:	cmp	r2, r3
   123e0:	bne	12b14 <close_stdout@@Base+0x120c>
   123e4:	add	sp, sp, #124	; 0x7c
   123e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123ec:	mov	r3, #114	; 0x72
   123f0:	ldr	r2, [sp, #36]	; 0x24
   123f4:	ldr	r0, [sp, #160]	; 0xa0
   123f8:	cmp	r0, #2
   123fc:	movne	r2, #0
   12400:	andeq	r2, r2, #1
   12404:	cmp	r2, #0
   12408:	bne	12394 <close_stdout@@Base+0xa8c>
   1240c:	ldr	r1, [sp, #24]
   12410:	cmp	r1, #0
   12414:	beq	1224c <close_stdout@@Base+0x944>
   12418:	mov	r4, r3
   1241c:	b	12284 <close_stdout@@Base+0x97c>
   12420:	mov	r3, #98	; 0x62
   12424:	b	1240c <close_stdout@@Base+0xb04>
   12428:	mov	r3, #102	; 0x66
   1242c:	b	1240c <close_stdout@@Base+0xb04>
   12430:	mov	r3, #118	; 0x76
   12434:	b	1240c <close_stdout@@Base+0xb04>
   12438:	mov	r3, #97	; 0x61
   1243c:	b	1240c <close_stdout@@Base+0xb04>
   12440:	mov	r3, #110	; 0x6e
   12444:	b	123f0 <close_stdout@@Base+0xae8>
   12448:	mov	r3, #116	; 0x74
   1244c:	b	123f0 <close_stdout@@Base+0xae8>
   12450:	ldr	r2, [sp, #24]
   12454:	cmp	r2, #0
   12458:	beq	12a00 <close_stdout@@Base+0x10f8>
   1245c:	ldr	r3, [sp, #36]	; 0x24
   12460:	cmp	r3, #0
   12464:	bne	12394 <close_stdout@@Base+0xa8c>
   12468:	cmp	r9, sl
   1246c:	add	r2, r9, #1
   12470:	ldrcc	r0, [sp, #40]	; 0x28
   12474:	movcc	r3, #92	; 0x5c
   12478:	strbcc	r3, [r0, r9]
   1247c:	add	r3, fp, #1
   12480:	cmp	r8, r3
   12484:	bls	124c4 <close_stdout@@Base+0xbbc>
   12488:	ldr	r1, [sp, #32]
   1248c:	ldrb	r3, [r1, r3]
   12490:	sub	r3, r3, #48	; 0x30
   12494:	cmp	r3, #9
   12498:	bhi	124c4 <close_stdout@@Base+0xbbc>
   1249c:	cmp	sl, r2
   124a0:	ldrhi	r0, [sp, #40]	; 0x28
   124a4:	movhi	r3, #48	; 0x30
   124a8:	strbhi	r3, [r0, r2]
   124ac:	add	r3, r9, #2
   124b0:	cmp	sl, r3
   124b4:	ldrhi	r1, [sp, #40]	; 0x28
   124b8:	movhi	r2, #48	; 0x30
   124bc:	strbhi	r2, [r1, r3]
   124c0:	add	r2, r9, #3
   124c4:	mov	r9, r2
   124c8:	mov	r4, #48	; 0x30
   124cc:	b	12258 <close_stdout@@Base+0x950>
   124d0:	ldr	r1, [sp, #76]	; 0x4c
   124d4:	cmp	r1, #0
   124d8:	beq	124e4 <close_stdout@@Base+0xbdc>
   124dc:	cmp	r7, #0
   124e0:	bne	122a4 <close_stdout@@Base+0x99c>
   124e4:	mov	r3, r4
   124e8:	b	123f0 <close_stdout@@Base+0xae8>
   124ec:	ldr	r1, [sp, #160]	; 0xa0
   124f0:	cmp	r1, #2
   124f4:	bne	1224c <close_stdout@@Base+0x944>
   124f8:	ldr	r2, [sp, #36]	; 0x24
   124fc:	cmp	r2, #0
   12500:	bne	12394 <close_stdout@@Base+0xa8c>
   12504:	cmp	r9, sl
   12508:	ldrcc	r0, [sp, #40]	; 0x28
   1250c:	movcc	r3, #39	; 0x27
   12510:	strbcc	r3, [r0, r9]
   12514:	add	r3, r9, #1
   12518:	cmp	sl, r3
   1251c:	ldrhi	r1, [sp, #40]	; 0x28
   12520:	movhi	r2, #92	; 0x5c
   12524:	strbhi	r2, [r1, r3]
   12528:	add	r3, r9, #2
   1252c:	cmp	sl, r3
   12530:	add	r9, r9, #3
   12534:	ldrhi	r0, [sp, #40]	; 0x28
   12538:	movhi	r2, #39	; 0x27
   1253c:	strbhi	r2, [r0, r3]
   12540:	b	1224c <close_stdout@@Base+0x944>
   12544:	ldr	r1, [sp, #64]	; 0x40
   12548:	cmp	r1, #1
   1254c:	bne	12844 <close_stdout@@Base+0xf3c>
   12550:	bl	11118 <__ctype_b_loc@plt>
   12554:	ldr	r2, [sp, #64]	; 0x40
   12558:	sxth	r3, r4
   1255c:	str	r2, [sp, #60]	; 0x3c
   12560:	lsl	r3, r3, #1
   12564:	ldr	r2, [r0]
   12568:	ldrh	r2, [r2, r3]
   1256c:	eor	r2, r2, #16384	; 0x4000
   12570:	ubfx	r2, r2, #14, #1
   12574:	ldr	r1, [sp, #24]
   12578:	ands	r2, r2, r1
   1257c:	beq	1224c <close_stdout@@Base+0x944>
   12580:	ldr	r3, [sp, #60]	; 0x3c
   12584:	mov	r0, #92	; 0x5c
   12588:	ldr	r7, [sp, #36]	; 0x24
   1258c:	add	r1, r3, fp
   12590:	str	r8, [sp, #60]	; 0x3c
   12594:	ldr	r3, [sp, #40]	; 0x28
   12598:	b	125fc <close_stdout@@Base+0xcf4>
   1259c:	cmp	r7, #0
   125a0:	bne	12a3c <close_stdout@@Base+0x1134>
   125a4:	add	ip, r9, #1
   125a8:	cmp	r9, sl
   125ac:	strbcc	r0, [r3, r9]
   125b0:	cmp	sl, ip
   125b4:	lsrhi	r8, r4, #6
   125b8:	addhi	r8, r8, #48	; 0x30
   125bc:	strbhi	r8, [r3, ip]
   125c0:	add	ip, r9, #2
   125c4:	add	r9, r9, #3
   125c8:	cmp	sl, ip
   125cc:	ubfxhi	r8, r4, #3, #3
   125d0:	and	r4, r4, #7
   125d4:	add	r4, r4, #48	; 0x30
   125d8:	addhi	r8, r8, #48	; 0x30
   125dc:	strbhi	r8, [r3, ip]
   125e0:	add	fp, fp, #1
   125e4:	cmp	r1, fp
   125e8:	bls	12628 <close_stdout@@Base+0xd20>
   125ec:	cmp	r9, sl
   125f0:	strbcc	r4, [r3, r9]
   125f4:	ldrb	r4, [r5, #1]!
   125f8:	add	r9, r9, #1
   125fc:	cmp	r2, #0
   12600:	bne	1259c <close_stdout@@Base+0xc94>
   12604:	cmp	r6, #0
   12608:	beq	125e0 <close_stdout@@Base+0xcd8>
   1260c:	add	fp, fp, #1
   12610:	cmp	r9, sl
   12614:	strbcc	r0, [r3, r9]
   12618:	cmp	r1, fp
   1261c:	add	r9, r9, #1
   12620:	mov	r6, #0
   12624:	bhi	125ec <close_stdout@@Base+0xce4>
   12628:	ldr	r8, [sp, #60]	; 0x3c
   1262c:	b	122a8 <close_stdout@@Base+0x9a0>
   12630:	ldr	r3, [sp, #36]	; 0x24
   12634:	cmp	r3, #0
   12638:	bne	12b3c <close_stdout@@Base+0x1234>
   1263c:	cmp	sl, #0
   12640:	beq	12a54 <close_stdout@@Base+0x114c>
   12644:	ldr	r1, [sp, #40]	; 0x28
   12648:	mov	r0, #1
   1264c:	ldr	r2, [pc, #1296]	; 12b64 <close_stdout@@Base+0x125c>
   12650:	mov	r3, #34	; 0x22
   12654:	str	r0, [sp, #24]
   12658:	mov	r9, r0
   1265c:	add	r2, pc, r2
   12660:	str	r0, [sp, #28]
   12664:	strb	r3, [r1]
   12668:	str	r2, [sp, #52]	; 0x34
   1266c:	b	11f18 <close_stdout@@Base+0x610>
   12670:	ldr	r3, [pc, #1264]	; 12b68 <close_stdout@@Base+0x1260>
   12674:	mov	r2, #1
   12678:	mov	r0, #3
   1267c:	str	r2, [sp, #36]	; 0x24
   12680:	add	r3, pc, r3
   12684:	str	r2, [sp, #24]
   12688:	str	r3, [sp, #52]	; 0x34
   1268c:	mov	r9, #0
   12690:	str	r2, [sp, #28]
   12694:	str	r0, [sp, #160]	; 0xa0
   12698:	b	11f18 <close_stdout@@Base+0x610>
   1269c:	mov	r0, #0
   126a0:	mov	r1, #1
   126a4:	str	r0, [sp, #36]	; 0x24
   126a8:	mov	r9, r0
   126ac:	str	r1, [sp, #24]
   126b0:	str	r0, [sp, #28]
   126b4:	str	r0, [sp, #52]	; 0x34
   126b8:	b	11f18 <close_stdout@@Base+0x610>
   126bc:	ldr	r3, [sp, #160]	; 0xa0
   126c0:	cmp	r3, #8
   126c4:	beq	126f0 <close_stdout@@Base+0xde8>
   126c8:	ldr	r0, [pc, #1180]	; 12b6c <close_stdout@@Base+0x1264>
   126cc:	mov	r1, r3
   126d0:	add	r0, pc, r0
   126d4:	bl	11d00 <close_stdout@@Base+0x3f8>
   126d8:	ldr	r1, [sp, #160]	; 0xa0
   126dc:	str	r0, [sp, #72]	; 0x48
   126e0:	ldr	r0, [pc, #1160]	; 12b70 <close_stdout@@Base+0x1268>
   126e4:	add	r0, pc, r0
   126e8:	bl	11d00 <close_stdout@@Base+0x3f8>
   126ec:	str	r0, [sp, #68]	; 0x44
   126f0:	ldr	r0, [sp, #36]	; 0x24
   126f4:	cmp	r0, #0
   126f8:	movne	r9, #0
   126fc:	bne	12734 <close_stdout@@Base+0xe2c>
   12700:	ldr	r1, [sp, #72]	; 0x48
   12704:	ldrb	r3, [r1]
   12708:	cmp	r3, #0
   1270c:	beq	12b0c <close_stdout@@Base+0x1204>
   12710:	mov	r2, r1
   12714:	ldr	r1, [sp, #40]	; 0x28
   12718:	mov	r9, r0
   1271c:	cmp	r9, sl
   12720:	strbcc	r3, [r1, r9]
   12724:	ldrb	r3, [r2, #1]!
   12728:	add	r9, r9, #1
   1272c:	cmp	r3, #0
   12730:	bne	1271c <close_stdout@@Base+0xe14>
   12734:	ldr	r0, [sp, #68]	; 0x44
   12738:	str	r0, [sp, #52]	; 0x34
   1273c:	bl	11130 <strlen@plt>
   12740:	mov	r2, #1
   12744:	str	r2, [sp, #24]
   12748:	str	r0, [sp, #28]
   1274c:	b	11f18 <close_stdout@@Base+0x610>
   12750:	ldr	r3, [pc, #1052]	; 12b74 <close_stdout@@Base+0x126c>
   12754:	mov	r2, #0
   12758:	mov	r1, #1
   1275c:	mov	r0, #2
   12760:	add	r3, pc, r3
   12764:	str	r1, [sp, #36]	; 0x24
   12768:	str	r2, [sp, #24]
   1276c:	mov	r9, r2
   12770:	str	r1, [sp, #28]
   12774:	str	r3, [sp, #52]	; 0x34
   12778:	str	r0, [sp, #160]	; 0xa0
   1277c:	b	11f18 <close_stdout@@Base+0x610>
   12780:	ldr	r3, [sp, #36]	; 0x24
   12784:	cmp	r3, #0
   12788:	bne	12b18 <close_stdout@@Base+0x1210>
   1278c:	cmp	sl, #0
   12790:	beq	12a74 <close_stdout@@Base+0x116c>
   12794:	ldr	r1, [sp, #40]	; 0x28
   12798:	mov	r3, #39	; 0x27
   1279c:	ldr	r2, [sp, #36]	; 0x24
   127a0:	mov	r0, #1
   127a4:	mov	r9, r0
   127a8:	str	r0, [sp, #28]
   127ac:	strb	r3, [r1]
   127b0:	ldr	r3, [pc, #960]	; 12b78 <close_stdout@@Base+0x1270>
   127b4:	str	r2, [sp, #24]
   127b8:	add	r3, pc, r3
   127bc:	str	r3, [sp, #52]	; 0x34
   127c0:	b	11f18 <close_stdout@@Base+0x610>
   127c4:	ldr	r2, [sp, #28]
   127c8:	cmp	r2, #1
   127cc:	add	r4, fp, r2
   127d0:	movls	r3, #0
   127d4:	movhi	r3, #1
   127d8:	cmn	r8, #1
   127dc:	movne	r3, #0
   127e0:	cmp	r3, #0
   127e4:	beq	127f4 <close_stdout@@Base+0xeec>
   127e8:	ldr	r0, [sp, #32]
   127ec:	bl	11130 <strlen@plt>
   127f0:	mov	r8, r0
   127f4:	cmp	r8, r4
   127f8:	ldrcc	r3, [sp, #32]
   127fc:	movcc	r6, #0
   12800:	addcc	r5, r3, fp
   12804:	bcc	11f74 <close_stdout@@Base+0x66c>
   12808:	ldr	r0, [sp, #32]
   1280c:	ldr	r1, [sp, #52]	; 0x34
   12810:	add	r5, r0, fp
   12814:	ldr	r2, [sp, #28]
   12818:	mov	r0, r5
   1281c:	bl	11010 <memcmp@plt>
   12820:	cmp	r0, #0
   12824:	bne	1283c <close_stdout@@Base+0xf34>
   12828:	ldr	r1, [sp, #36]	; 0x24
   1282c:	cmp	r1, #0
   12830:	bne	12394 <close_stdout@@Base+0xa8c>
   12834:	mov	r6, #1
   12838:	b	11f74 <close_stdout@@Base+0x66c>
   1283c:	mov	r6, #0
   12840:	b	11f74 <close_stdout@@Base+0x66c>
   12844:	add	r7, sp, #108	; 0x6c
   12848:	cmn	r8, #1
   1284c:	mov	r3, #0
   12850:	str	r3, [sp, #108]	; 0x6c
   12854:	str	r3, [r7, #4]
   12858:	beq	12a44 <close_stdout@@Base+0x113c>
   1285c:	mov	r1, #0
   12860:	ldr	r0, [sp, #32]
   12864:	mov	ip, #1
   12868:	str	r9, [sp, #88]	; 0x58
   1286c:	str	r6, [sp, #96]	; 0x60
   12870:	mov	r9, r1
   12874:	str	r5, [sp, #100]	; 0x64
   12878:	mov	r6, ip
   1287c:	mov	r5, r7
   12880:	add	r3, sp, #104	; 0x68
   12884:	sub	r0, r0, #1
   12888:	str	r3, [sp, #80]	; 0x50
   1288c:	str	r0, [sp, #84]	; 0x54
   12890:	str	r1, [sp, #60]	; 0x3c
   12894:	str	r4, [sp, #92]	; 0x5c
   12898:	ldr	r2, [sp, #32]
   1289c:	add	r7, r9, fp
   128a0:	add	r0, sp, #104	; 0x68
   128a4:	mov	r3, r5
   128a8:	add	r4, r2, r7
   128ac:	rsb	r2, r7, r8
   128b0:	mov	r1, r4
   128b4:	bl	110a0 <mbrtowc@plt>
   128b8:	subs	r2, r0, #0
   128bc:	beq	129c8 <close_stdout@@Base+0x10c0>
   128c0:	cmn	r2, #1
   128c4:	beq	12af0 <close_stdout@@Base+0x11e8>
   128c8:	cmn	r2, #2
   128cc:	beq	12a94 <close_stdout@@Base+0x118c>
   128d0:	ldr	r3, [sp, #36]	; 0x24
   128d4:	ldr	r0, [sp, #160]	; 0xa0
   128d8:	cmp	r0, #2
   128dc:	movne	r3, #0
   128e0:	andeq	r3, r3, #1
   128e4:	cmp	r3, #0
   128e8:	beq	129a4 <close_stdout@@Base+0x109c>
   128ec:	cmp	r2, #1
   128f0:	beq	129a4 <close_stdout@@Base+0x109c>
   128f4:	ldr	r1, [sp, #84]	; 0x54
   128f8:	add	r3, r1, r2
   128fc:	add	r7, r3, r7
   12900:	ldrb	r3, [r4, #1]!
   12904:	sub	r3, r3, #91	; 0x5b
   12908:	cmp	r3, #33	; 0x21
   1290c:	addls	pc, pc, r3, lsl #2
   12910:	b	1299c <close_stdout@@Base+0x1094>
   12914:	b	12394 <close_stdout@@Base+0xa8c>
   12918:	b	12394 <close_stdout@@Base+0xa8c>
   1291c:	b	1299c <close_stdout@@Base+0x1094>
   12920:	b	12394 <close_stdout@@Base+0xa8c>
   12924:	b	1299c <close_stdout@@Base+0x1094>
   12928:	b	12394 <close_stdout@@Base+0xa8c>
   1292c:	b	1299c <close_stdout@@Base+0x1094>
   12930:	b	1299c <close_stdout@@Base+0x1094>
   12934:	b	1299c <close_stdout@@Base+0x1094>
   12938:	b	1299c <close_stdout@@Base+0x1094>
   1293c:	b	1299c <close_stdout@@Base+0x1094>
   12940:	b	1299c <close_stdout@@Base+0x1094>
   12944:	b	1299c <close_stdout@@Base+0x1094>
   12948:	b	1299c <close_stdout@@Base+0x1094>
   1294c:	b	1299c <close_stdout@@Base+0x1094>
   12950:	b	1299c <close_stdout@@Base+0x1094>
   12954:	b	1299c <close_stdout@@Base+0x1094>
   12958:	b	1299c <close_stdout@@Base+0x1094>
   1295c:	b	1299c <close_stdout@@Base+0x1094>
   12960:	b	1299c <close_stdout@@Base+0x1094>
   12964:	b	1299c <close_stdout@@Base+0x1094>
   12968:	b	1299c <close_stdout@@Base+0x1094>
   1296c:	b	1299c <close_stdout@@Base+0x1094>
   12970:	b	1299c <close_stdout@@Base+0x1094>
   12974:	b	1299c <close_stdout@@Base+0x1094>
   12978:	b	1299c <close_stdout@@Base+0x1094>
   1297c:	b	1299c <close_stdout@@Base+0x1094>
   12980:	b	1299c <close_stdout@@Base+0x1094>
   12984:	b	1299c <close_stdout@@Base+0x1094>
   12988:	b	1299c <close_stdout@@Base+0x1094>
   1298c:	b	1299c <close_stdout@@Base+0x1094>
   12990:	b	1299c <close_stdout@@Base+0x1094>
   12994:	b	1299c <close_stdout@@Base+0x1094>
   12998:	b	12394 <close_stdout@@Base+0xa8c>
   1299c:	cmp	r4, r7
   129a0:	bne	12900 <close_stdout@@Base+0xff8>
   129a4:	ldr	r0, [sp, #104]	; 0x68
   129a8:	add	r9, r9, r2
   129ac:	bl	11058 <iswprint@plt>
   129b0:	cmp	r0, #0
   129b4:	mov	r0, r5
   129b8:	moveq	r6, #0
   129bc:	bl	11004 <mbsinit@plt>
   129c0:	cmp	r0, #0
   129c4:	beq	12898 <close_stdout@@Base+0xf90>
   129c8:	mov	ip, r6
   129cc:	eor	r2, ip, #1
   129d0:	str	r9, [sp, #60]	; 0x3c
   129d4:	ldr	r4, [sp, #92]	; 0x5c
   129d8:	uxtb	r2, r2
   129dc:	ldr	r9, [sp, #88]	; 0x58
   129e0:	ldr	r6, [sp, #96]	; 0x60
   129e4:	ldr	r5, [sp, #100]	; 0x64
   129e8:	ldr	r3, [sp, #60]	; 0x3c
   129ec:	cmp	r3, #1
   129f0:	bls	12574 <close_stdout@@Base+0xc6c>
   129f4:	ldr	r0, [sp, #24]
   129f8:	and	r2, r2, r0
   129fc:	b	12580 <close_stdout@@Base+0xc78>
   12a00:	ldr	r2, [sp, #164]	; 0xa4
   12a04:	tst	r2, #1
   12a08:	addne	fp, fp, #1
   12a0c:	bne	11f3c <close_stdout@@Base+0x634>
   12a10:	b	1224c <close_stdout@@Base+0x944>
   12a14:	ldr	r0, [sp, #36]	; 0x24
   12a18:	cmp	r0, #0
   12a1c:	beq	1224c <close_stdout@@Base+0x944>
   12a20:	b	12394 <close_stdout@@Base+0xa8c>
   12a24:	ldr	r2, [sp, #32]
   12a28:	ldrb	r3, [r2, #1]
   12a2c:	adds	r3, r3, #0
   12a30:	movne	r3, #1
   12a34:	b	12368 <close_stdout@@Base+0xa60>
   12a38:	bl	1122c <abort@plt>
   12a3c:	ldr	r8, [sp, #60]	; 0x3c
   12a40:	b	12394 <close_stdout@@Base+0xa8c>
   12a44:	ldr	r0, [sp, #32]
   12a48:	bl	11130 <strlen@plt>
   12a4c:	mov	r8, r0
   12a50:	b	1285c <close_stdout@@Base+0xf54>
   12a54:	ldr	r2, [pc, #288]	; 12b7c <close_stdout@@Base+0x1274>
   12a58:	mov	r1, #1
   12a5c:	mov	r9, r1
   12a60:	str	r1, [sp, #24]
   12a64:	add	r2, pc, r2
   12a68:	str	r1, [sp, #28]
   12a6c:	str	r2, [sp, #52]	; 0x34
   12a70:	b	11f18 <close_stdout@@Base+0x610>
   12a74:	ldr	r2, [pc, #260]	; 12b80 <close_stdout@@Base+0x1278>
   12a78:	mov	r3, #1
   12a7c:	mov	r9, r3
   12a80:	str	r3, [sp, #28]
   12a84:	add	r2, pc, r2
   12a88:	str	sl, [sp, #24]
   12a8c:	str	r2, [sp, #52]	; 0x34
   12a90:	b	11f18 <close_stdout@@Base+0x610>
   12a94:	cmp	r8, r7
   12a98:	str	r9, [sp, #60]	; 0x3c
   12a9c:	mov	ip, r4
   12aa0:	ldr	r6, [sp, #96]	; 0x60
   12aa4:	ldr	r9, [sp, #88]	; 0x58
   12aa8:	ldr	r4, [sp, #92]	; 0x5c
   12aac:	ldr	r5, [sp, #100]	; 0x64
   12ab0:	bls	12ae8 <close_stdout@@Base+0x11e0>
   12ab4:	ldrb	r3, [ip]
   12ab8:	cmp	r3, #0
   12abc:	beq	12ae8 <close_stdout@@Base+0x11e0>
   12ac0:	ldr	r3, [sp, #60]	; 0x3c
   12ac4:	b	12ad4 <close_stdout@@Base+0x11cc>
   12ac8:	ldrb	r2, [r5, r3]
   12acc:	cmp	r2, #0
   12ad0:	beq	12ae4 <close_stdout@@Base+0x11dc>
   12ad4:	add	r3, r3, #1
   12ad8:	add	r2, fp, r3
   12adc:	cmp	r8, r2
   12ae0:	bhi	12ac8 <close_stdout@@Base+0x11c0>
   12ae4:	str	r3, [sp, #60]	; 0x3c
   12ae8:	mov	r2, #1
   12aec:	b	129e8 <close_stdout@@Base+0x10e0>
   12af0:	str	r9, [sp, #60]	; 0x3c
   12af4:	mov	r2, #1
   12af8:	ldr	r4, [sp, #92]	; 0x5c
   12afc:	ldr	r6, [sp, #96]	; 0x60
   12b00:	ldr	r9, [sp, #88]	; 0x58
   12b04:	ldr	r5, [sp, #100]	; 0x64
   12b08:	b	129e8 <close_stdout@@Base+0x10e0>
   12b0c:	ldr	r9, [sp, #36]	; 0x24
   12b10:	b	12734 <close_stdout@@Base+0xe2c>
   12b14:	bl	11034 <__stack_chk_fail@plt>
   12b18:	ldr	r1, [pc, #100]	; 12b84 <close_stdout@@Base+0x127c>
   12b1c:	mov	r3, #0
   12b20:	mov	r0, #1
   12b24:	str	r3, [sp, #24]
   12b28:	add	r1, pc, r1
   12b2c:	str	r0, [sp, #28]
   12b30:	mov	r9, r3
   12b34:	str	r1, [sp, #52]	; 0x34
   12b38:	b	11f18 <close_stdout@@Base+0x610>
   12b3c:	ldr	r0, [pc, #68]	; 12b88 <close_stdout@@Base+0x1280>
   12b40:	mov	r3, #1
   12b44:	mov	r9, #0
   12b48:	str	r3, [sp, #24]
   12b4c:	add	r0, pc, r0
   12b50:	str	r3, [sp, #28]
   12b54:	str	r0, [sp, #52]	; 0x34
   12b58:	b	11f18 <close_stdout@@Base+0x610>
   12b5c:	andeq	r4, r1, r8, ror r1
   12b60:	strdeq	r0, [r0], -ip
   12b64:	muleq	r0, r0, r3
   12b68:	andeq	r2, r0, ip, ror #6
   12b6c:	andeq	r2, r0, r8, lsr #6
   12b70:	andeq	r2, r0, r4, lsl #6
   12b74:	andeq	r2, r0, r8, lsl #5
   12b78:	andeq	r2, r0, r0, lsr r2
   12b7c:	andeq	r1, r0, r8, lsl #31
   12b80:	andeq	r1, r0, r4, ror #30
   12b84:	andeq	r1, r0, r0, asr #29
   12b88:	andeq	r1, r0, r0, lsr #29
   12b8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b90:	sub	sp, sp, #44	; 0x2c
   12b94:	mov	r6, r0
   12b98:	mov	r9, r1
   12b9c:	mov	sl, r2
   12ba0:	mov	r4, r3
   12ba4:	bl	11148 <__errno_location@plt>
   12ba8:	ldr	fp, [pc, #412]	; 12d4c <close_stdout@@Base+0x1444>
   12bac:	cmp	r6, #0
   12bb0:	add	fp, pc, fp
   12bb4:	ldr	r5, [fp]
   12bb8:	ldr	r1, [r0]
   12bbc:	mov	r8, r0
   12bc0:	str	r1, [sp, #36]	; 0x24
   12bc4:	blt	12d44 <close_stdout@@Base+0x143c>
   12bc8:	ldr	r3, [pc, #384]	; 12d50 <close_stdout@@Base+0x1448>
   12bcc:	add	r3, pc, r3
   12bd0:	ldr	r3, [r3]
   12bd4:	cmp	r6, r3
   12bd8:	bcc	12c2c <close_stdout@@Base+0x1324>
   12bdc:	add	r7, r6, #1
   12be0:	cmn	r7, #-536870911	; 0xe0000001
   12be4:	bhi	12d48 <close_stdout@@Base+0x1440>
   12be8:	add	r3, fp, #4
   12bec:	cmp	r5, r3
   12bf0:	beq	12d1c <close_stdout@@Base+0x1414>
   12bf4:	mov	r0, r5
   12bf8:	lsl	r1, r7, #3
   12bfc:	bl	13a24 <close_stdout@@Base+0x211c>
   12c00:	mov	r5, r0
   12c04:	str	r0, [fp]
   12c08:	ldr	fp, [pc, #324]	; 12d54 <close_stdout@@Base+0x144c>
   12c0c:	mov	r1, #0
   12c10:	add	fp, pc, fp
   12c14:	ldr	r0, [fp]
   12c18:	rsb	r2, r0, r7
   12c1c:	add	r0, r5, r0, lsl #3
   12c20:	lsl	r2, r2, #3
   12c24:	bl	11160 <memset@plt>
   12c28:	str	r7, [fp]
   12c2c:	add	r2, r4, #8
   12c30:	str	r2, [sp, #32]
   12c34:	ldr	r1, [r4]
   12c38:	add	fp, r5, r6, lsl #3
   12c3c:	ldr	lr, [sp, #32]
   12c40:	mov	r2, r9
   12c44:	ldr	r3, [r4, #4]
   12c48:	ldr	ip, [r5, r6, lsl #3]
   12c4c:	ldr	r7, [fp, #4]
   12c50:	orr	r3, r3, #1
   12c54:	str	r1, [sp]
   12c58:	str	r3, [sp, #4]
   12c5c:	mov	r1, ip
   12c60:	str	lr, [sp, #8]
   12c64:	mov	r0, r7
   12c68:	ldr	lr, [r4, #40]	; 0x28
   12c6c:	str	r3, [sp, #28]
   12c70:	mov	r3, sl
   12c74:	str	lr, [sp, #12]
   12c78:	ldr	lr, [r4, #44]	; 0x2c
   12c7c:	str	ip, [sp, #24]
   12c80:	str	lr, [sp, #16]
   12c84:	bl	11e64 <close_stdout@@Base+0x55c>
   12c88:	ldr	ip, [sp, #24]
   12c8c:	cmp	ip, r0
   12c90:	bhi	12d08 <close_stdout@@Base+0x1400>
   12c94:	ldr	r3, [pc, #188]	; 12d58 <close_stdout@@Base+0x1450>
   12c98:	add	r1, r0, #1
   12c9c:	str	r1, [r5, r6, lsl #3]
   12ca0:	add	r3, pc, r3
   12ca4:	cmp	r7, r3
   12ca8:	beq	12cbc <close_stdout@@Base+0x13b4>
   12cac:	mov	r0, r7
   12cb0:	str	r1, [sp, #24]
   12cb4:	bl	10fe0 <free@plt>
   12cb8:	ldr	r1, [sp, #24]
   12cbc:	mov	r0, r1
   12cc0:	str	r1, [sp, #24]
   12cc4:	bl	139cc <close_stdout@@Base+0x20c4>
   12cc8:	ldr	r3, [sp, #28]
   12ccc:	ldr	lr, [sp, #32]
   12cd0:	mov	r2, r9
   12cd4:	str	r0, [fp, #4]
   12cd8:	mov	r7, r0
   12cdc:	ldr	ip, [r4]
   12ce0:	str	r3, [sp, #4]
   12ce4:	mov	r3, sl
   12ce8:	str	lr, [sp, #8]
   12cec:	str	ip, [sp]
   12cf0:	ldr	ip, [r4, #40]	; 0x28
   12cf4:	ldr	r1, [sp, #24]
   12cf8:	str	ip, [sp, #12]
   12cfc:	ldr	ip, [r4, #44]	; 0x2c
   12d00:	str	ip, [sp, #16]
   12d04:	bl	11e64 <close_stdout@@Base+0x55c>
   12d08:	ldr	r1, [sp, #36]	; 0x24
   12d0c:	mov	r0, r7
   12d10:	str	r1, [r8]
   12d14:	add	sp, sp, #44	; 0x2c
   12d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d1c:	lsl	r1, r7, #3
   12d20:	mov	r0, #0
   12d24:	str	r3, [sp, #24]
   12d28:	bl	13a24 <close_stdout@@Base+0x211c>
   12d2c:	ldr	r3, [sp, #24]
   12d30:	mov	r5, r0
   12d34:	ldm	r3, {r0, r1}
   12d38:	str	r5, [fp]
   12d3c:	stm	r5, {r0, r1}
   12d40:	b	12c08 <close_stdout@@Base+0x1300>
   12d44:	bl	1122c <abort@plt>
   12d48:	bl	13be0 <close_stdout@@Base+0x22d8>
   12d4c:	andeq	r3, r1, r0, asr #11
   12d50:	andeq	r3, r1, r0, ror r5
   12d54:	andeq	r3, r1, ip, lsr #10
   12d58:	andeq	r3, r1, ip, ror #9
   12d5c:	push	{r4, r5, r6, lr}
   12d60:	mov	r5, r0
   12d64:	bl	11148 <__errno_location@plt>
   12d68:	cmp	r5, #0
   12d6c:	mov	r1, #48	; 0x30
   12d70:	mov	r4, r0
   12d74:	ldr	r0, [pc, #24]	; 12d94 <close_stdout@@Base+0x148c>
   12d78:	ldr	r6, [r4]
   12d7c:	add	r0, pc, r0
   12d80:	add	r0, r0, #256	; 0x100
   12d84:	movne	r0, r5
   12d88:	bl	13ba0 <close_stdout@@Base+0x2298>
   12d8c:	str	r6, [r4]
   12d90:	pop	{r4, r5, r6, pc}
   12d94:	andeq	r3, r1, r0, lsl r4
   12d98:	cmp	r0, #0
   12d9c:	beq	12da8 <close_stdout@@Base+0x14a0>
   12da0:	ldr	r0, [r0]
   12da4:	bx	lr
   12da8:	ldr	r0, [pc, #12]	; 12dbc <close_stdout@@Base+0x14b4>
   12dac:	add	r0, pc, r0
   12db0:	add	r0, r0, #256	; 0x100
   12db4:	ldr	r0, [r0]
   12db8:	bx	lr
   12dbc:	andeq	r3, r1, r0, ror #7
   12dc0:	cmp	r0, #0
   12dc4:	beq	12dd0 <close_stdout@@Base+0x14c8>
   12dc8:	str	r1, [r0]
   12dcc:	bx	lr
   12dd0:	ldr	r0, [pc, #12]	; 12de4 <close_stdout@@Base+0x14dc>
   12dd4:	add	r0, pc, r0
   12dd8:	add	r0, r0, #256	; 0x100
   12ddc:	str	r1, [r0]
   12de0:	bx	lr
   12de4:			; <UNDEFINED> instruction: 0x000133b8
   12de8:	cmp	r0, #0
   12dec:	movne	r3, r0
   12df0:	beq	12e20 <close_stdout@@Base+0x1518>
   12df4:	lsr	ip, r1, #5
   12df8:	and	r1, r1, #31
   12dfc:	add	r3, r3, ip, lsl #2
   12e00:	ldr	ip, [r3, #8]
   12e04:	lsr	r0, ip, r1
   12e08:	eor	r2, r0, r2
   12e0c:	and	r0, r0, #1
   12e10:	and	r2, r2, #1
   12e14:	eor	ip, ip, r2, lsl r1
   12e18:	str	ip, [r3, #8]
   12e1c:	bx	lr
   12e20:	ldr	r3, [pc, #8]	; 12e30 <close_stdout@@Base+0x1528>
   12e24:	add	r3, pc, r3
   12e28:	add	r3, r3, #256	; 0x100
   12e2c:	b	12df4 <close_stdout@@Base+0x14ec>
   12e30:	andeq	r3, r1, r8, ror #6
   12e34:	subs	r3, r0, #0
   12e38:	beq	12e48 <close_stdout@@Base+0x1540>
   12e3c:	ldr	r0, [r3, #4]
   12e40:	str	r1, [r3, #4]
   12e44:	bx	lr
   12e48:	ldr	r3, [pc, #8]	; 12e58 <close_stdout@@Base+0x1550>
   12e4c:	add	r3, pc, r3
   12e50:	add	r3, r3, #256	; 0x100
   12e54:	b	12e3c <close_stdout@@Base+0x1534>
   12e58:	andeq	r3, r1, r0, asr #6
   12e5c:	cmp	r0, #0
   12e60:	push	{r3, lr}
   12e64:	beq	12e88 <close_stdout@@Base+0x1580>
   12e68:	cmp	r2, #0
   12e6c:	cmpne	r1, #0
   12e70:	mov	r3, #8
   12e74:	strne	r1, [r0, #40]	; 0x28
   12e78:	str	r3, [r0]
   12e7c:	strne	r2, [r0, #44]	; 0x2c
   12e80:	popne	{r3, pc}
   12e84:	bl	1122c <abort@plt>
   12e88:	ldr	r0, [pc, #8]	; 12e98 <close_stdout@@Base+0x1590>
   12e8c:	add	r0, pc, r0
   12e90:	add	r0, r0, #256	; 0x100
   12e94:	b	12e68 <close_stdout@@Base+0x1560>
   12e98:	andeq	r3, r1, r0, lsl #6
   12e9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ea0:	sub	sp, sp, #24
   12ea4:	mov	r7, r0
   12ea8:	mov	sl, r1
   12eac:	ldr	r4, [sp, #56]	; 0x38
   12eb0:	mov	r9, r2
   12eb4:	mov	r8, r3
   12eb8:	cmp	r4, #0
   12ebc:	beq	12f10 <close_stdout@@Base+0x1608>
   12ec0:	bl	11148 <__errno_location@plt>
   12ec4:	ldr	r3, [r4]
   12ec8:	add	lr, r4, #8
   12ecc:	mov	r1, sl
   12ed0:	mov	r2, r9
   12ed4:	ldr	r6, [r0]
   12ed8:	mov	r5, r0
   12edc:	str	r3, [sp]
   12ee0:	mov	r0, r7
   12ee4:	ldr	ip, [r4, #4]
   12ee8:	mov	r3, r8
   12eec:	stmib	sp, {ip, lr}
   12ef0:	ldr	ip, [r4, #40]	; 0x28
   12ef4:	str	ip, [sp, #12]
   12ef8:	ldr	ip, [r4, #44]	; 0x2c
   12efc:	str	ip, [sp, #16]
   12f00:	bl	11e64 <close_stdout@@Base+0x55c>
   12f04:	str	r6, [r5]
   12f08:	add	sp, sp, #24
   12f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f10:	ldr	r4, [pc, #8]	; 12f20 <close_stdout@@Base+0x1618>
   12f14:	add	r4, pc, r4
   12f18:	add	r4, r4, #256	; 0x100
   12f1c:	b	12ec0 <close_stdout@@Base+0x15b8>
   12f20:	andeq	r3, r1, r8, ror r2
   12f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f28:	subs	r4, r3, #0
   12f2c:	sub	sp, sp, #36	; 0x24
   12f30:	mov	r7, r0
   12f34:	mov	r6, r1
   12f38:	mov	r5, r2
   12f3c:	beq	12ff8 <close_stdout@@Base+0x16f0>
   12f40:	bl	11148 <__errno_location@plt>
   12f44:	ldr	r3, [r4]
   12f48:	ldr	sl, [r4, #4]
   12f4c:	add	r9, r4, #8
   12f50:	mov	r8, r0
   12f54:	mov	r0, #0
   12f58:	ldr	r2, [r8]
   12f5c:	cmp	r5, r0
   12f60:	orreq	sl, sl, #1
   12f64:	str	r9, [sp, #8]
   12f68:	mov	r1, r0
   12f6c:	stm	sp, {r3, sl}
   12f70:	mov	r3, r6
   12f74:	ldr	ip, [r4, #40]	; 0x28
   12f78:	str	r2, [sp, #28]
   12f7c:	mov	r2, r7
   12f80:	str	ip, [sp, #12]
   12f84:	ldr	ip, [r4, #44]	; 0x2c
   12f88:	str	ip, [sp, #16]
   12f8c:	bl	11e64 <close_stdout@@Base+0x55c>
   12f90:	add	r1, r0, #1
   12f94:	mov	fp, r0
   12f98:	str	r1, [sp, #24]
   12f9c:	mov	r0, r1
   12fa0:	bl	139cc <close_stdout@@Base+0x20c4>
   12fa4:	ldr	lr, [r4]
   12fa8:	str	sl, [sp, #4]
   12fac:	mov	r3, r6
   12fb0:	str	r9, [sp, #8]
   12fb4:	mov	r2, r7
   12fb8:	str	lr, [sp]
   12fbc:	ldr	lr, [r4, #40]	; 0x28
   12fc0:	ldr	r1, [sp, #24]
   12fc4:	str	lr, [sp, #12]
   12fc8:	ldr	lr, [r4, #44]	; 0x2c
   12fcc:	str	lr, [sp, #16]
   12fd0:	str	r0, [sp, #24]
   12fd4:	bl	11e64 <close_stdout@@Base+0x55c>
   12fd8:	ldr	r3, [sp, #28]
   12fdc:	cmp	r5, #0
   12fe0:	str	r3, [r8]
   12fe4:	ldr	ip, [sp, #24]
   12fe8:	strne	fp, [r5]
   12fec:	mov	r0, ip
   12ff0:	add	sp, sp, #36	; 0x24
   12ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ff8:	ldr	r4, [pc, #8]	; 13008 <close_stdout@@Base+0x1700>
   12ffc:	add	r4, pc, r4
   13000:	add	r4, r4, #256	; 0x100
   13004:	b	12f40 <close_stdout@@Base+0x1638>
   13008:	muleq	r1, r0, r1
   1300c:	mov	r3, r2
   13010:	mov	r2, #0
   13014:	b	12f24 <close_stdout@@Base+0x161c>
   13018:	ldr	r2, [pc, #152]	; 130b8 <close_stdout@@Base+0x17b0>
   1301c:	push	{r3, r4, r5, r6, r7, lr}
   13020:	add	r2, pc, r2
   13024:	ldr	r3, [pc, #144]	; 130bc <close_stdout@@Base+0x17b4>
   13028:	ldr	r6, [r2]
   1302c:	add	r3, pc, r3
   13030:	cmp	r6, #1
   13034:	ldr	r7, [r3]
   13038:	movhi	r4, #1
   1303c:	movhi	r5, r7
   13040:	bls	1305c <close_stdout@@Base+0x1754>
   13044:	ldr	r0, [r5, #12]
   13048:	add	r4, r4, #1
   1304c:	bl	10fe0 <free@plt>
   13050:	cmp	r4, r6
   13054:	add	r5, r5, #8
   13058:	bne	13044 <close_stdout@@Base+0x173c>
   1305c:	ldr	r4, [pc, #92]	; 130c0 <close_stdout@@Base+0x17b8>
   13060:	ldr	r0, [r7, #4]
   13064:	add	r4, pc, r4
   13068:	cmp	r0, r4
   1306c:	beq	13084 <close_stdout@@Base+0x177c>
   13070:	bl	10fe0 <free@plt>
   13074:	ldr	r3, [pc, #72]	; 130c4 <close_stdout@@Base+0x17bc>
   13078:	mov	r2, #256	; 0x100
   1307c:	add	r3, pc, r3
   13080:	stmib	r3, {r2, r4}
   13084:	ldr	r4, [pc, #60]	; 130c8 <close_stdout@@Base+0x17c0>
   13088:	add	r4, pc, r4
   1308c:	add	r5, r4, #4
   13090:	cmp	r7, r5
   13094:	beq	130a4 <close_stdout@@Base+0x179c>
   13098:	mov	r0, r7
   1309c:	bl	10fe0 <free@plt>
   130a0:	str	r5, [r4]
   130a4:	ldr	r3, [pc, #32]	; 130cc <close_stdout@@Base+0x17c4>
   130a8:	mov	r2, #1
   130ac:	add	r3, pc, r3
   130b0:	str	r2, [r3]
   130b4:	pop	{r3, r4, r5, r6, r7, pc}
   130b8:	andeq	r3, r1, ip, lsl r1
   130bc:	andeq	r3, r1, r4, asr #2
   130c0:	andeq	r3, r1, r8, lsr #2
   130c4:	strdeq	r3, [r1], -r4
   130c8:	andeq	r3, r1, r8, ror #1
   130cc:	muleq	r1, r0, r0
   130d0:	ldr	r3, [pc, #12]	; 130e4 <close_stdout@@Base+0x17dc>
   130d4:	mvn	r2, #0
   130d8:	add	r3, pc, r3
   130dc:	add	r3, r3, #256	; 0x100
   130e0:	b	12b8c <close_stdout@@Base+0x1284>
   130e4:	strheq	r3, [r1], -r4
   130e8:	ldr	r3, [pc, #8]	; 130f8 <close_stdout@@Base+0x17f0>
   130ec:	add	r3, pc, r3
   130f0:	add	r3, r3, #256	; 0x100
   130f4:	b	12b8c <close_stdout@@Base+0x1284>
   130f8:	andeq	r3, r1, r0, lsr #1
   130fc:	mov	r1, r0
   13100:	mov	r0, #0
   13104:	b	130d0 <close_stdout@@Base+0x17c8>
   13108:	mov	r2, r1
   1310c:	mov	r1, r0
   13110:	mov	r0, #0
   13114:	b	130e8 <close_stdout@@Base+0x17e0>
   13118:	ldr	r3, [pc, #92]	; 1317c <close_stdout@@Base+0x1874>
   1311c:	ldr	ip, [pc, #92]	; 13180 <close_stdout@@Base+0x1878>
   13120:	add	r3, pc, r3
   13124:	push	{r4, r5, r6, r7, lr}
   13128:	sub	sp, sp, #60	; 0x3c
   1312c:	ldr	r4, [r3, ip]
   13130:	add	r5, sp, #4
   13134:	mov	r7, r2
   13138:	mov	r6, r0
   1313c:	mov	r0, r5
   13140:	ldr	r3, [r4]
   13144:	str	r3, [sp, #52]	; 0x34
   13148:	bl	11cac <close_stdout@@Base+0x3a4>
   1314c:	mov	r3, r5
   13150:	mvn	r2, #0
   13154:	mov	r0, r6
   13158:	mov	r1, r7
   1315c:	bl	12b8c <close_stdout@@Base+0x1284>
   13160:	ldr	r2, [sp, #52]	; 0x34
   13164:	ldr	r3, [r4]
   13168:	cmp	r2, r3
   1316c:	bne	13178 <close_stdout@@Base+0x1870>
   13170:	add	sp, sp, #60	; 0x3c
   13174:	pop	{r4, r5, r6, r7, pc}
   13178:	bl	11034 <__stack_chk_fail@plt>
   1317c:	ldrdeq	r2, [r1], -r8
   13180:	strdeq	r0, [r0], -ip
   13184:	ldr	ip, [pc, #96]	; 131ec <close_stdout@@Base+0x18e4>
   13188:	push	{r4, r5, r6, r7, r8, lr}
   1318c:	add	ip, pc, ip
   13190:	ldr	lr, [pc, #88]	; 131f0 <close_stdout@@Base+0x18e8>
   13194:	sub	sp, sp, #56	; 0x38
   13198:	mov	r8, r3
   1319c:	add	r5, sp, #4
   131a0:	mov	r7, r2
   131a4:	mov	r6, r0
   131a8:	ldr	r4, [ip, lr]
   131ac:	mov	r0, r5
   131b0:	ldr	r3, [r4]
   131b4:	str	r3, [sp, #52]	; 0x34
   131b8:	bl	11cac <close_stdout@@Base+0x3a4>
   131bc:	mov	r2, r8
   131c0:	mov	r3, r5
   131c4:	mov	r0, r6
   131c8:	mov	r1, r7
   131cc:	bl	12b8c <close_stdout@@Base+0x1284>
   131d0:	ldr	r2, [sp, #52]	; 0x34
   131d4:	ldr	r3, [r4]
   131d8:	cmp	r2, r3
   131dc:	bne	131e8 <close_stdout@@Base+0x18e0>
   131e0:	add	sp, sp, #56	; 0x38
   131e4:	pop	{r4, r5, r6, r7, r8, pc}
   131e8:	bl	11034 <__stack_chk_fail@plt>
   131ec:	andeq	r2, r1, ip, ror #28
   131f0:	strdeq	r0, [r0], -ip
   131f4:	mov	r2, r1
   131f8:	mov	r1, r0
   131fc:	mov	r0, #0
   13200:	b	13118 <close_stdout@@Base+0x1810>
   13204:	mov	ip, r1
   13208:	mov	r3, r2
   1320c:	mov	r1, r0
   13210:	mov	r2, ip
   13214:	mov	r0, #0
   13218:	b	13184 <close_stdout@@Base+0x187c>
   1321c:	push	{r4, r5, r6, r7, r8, lr}
   13220:	mov	r5, r2
   13224:	ldr	lr, [pc, #136]	; 132b4 <close_stdout@@Base+0x19ac>
   13228:	mov	r7, r0
   1322c:	mov	r6, r1
   13230:	ldr	r4, [pc, #128]	; 132b8 <close_stdout@@Base+0x19b0>
   13234:	add	lr, pc, lr
   13238:	sub	sp, sp, #56	; 0x38
   1323c:	add	lr, lr, #256	; 0x100
   13240:	ldr	r8, [pc, #116]	; 132bc <close_stdout@@Base+0x19b4>
   13244:	add	r4, pc, r4
   13248:	add	ip, sp, #4
   1324c:	ldm	lr!, {r0, r1, r2, r3}
   13250:	ldr	r4, [r4, r8]
   13254:	stmia	ip!, {r0, r1, r2, r3}
   13258:	ldm	lr!, {r0, r1, r2, r3}
   1325c:	ldr	r8, [r4]
   13260:	stmia	ip!, {r0, r1, r2, r3}
   13264:	ldm	lr, {r0, r1, r2, r3}
   13268:	str	r8, [sp, #52]	; 0x34
   1326c:	stm	ip, {r0, r1, r2, r3}
   13270:	mov	r1, r5
   13274:	add	r5, sp, #4
   13278:	mov	r2, #1
   1327c:	mov	r0, r5
   13280:	bl	12de8 <close_stdout@@Base+0x14e0>
   13284:	mov	r2, r6
   13288:	mov	r3, r5
   1328c:	mov	r1, r7
   13290:	mov	r0, #0
   13294:	bl	12b8c <close_stdout@@Base+0x1284>
   13298:	ldr	r2, [sp, #52]	; 0x34
   1329c:	ldr	r3, [r4]
   132a0:	cmp	r2, r3
   132a4:	bne	132b0 <close_stdout@@Base+0x19a8>
   132a8:	add	sp, sp, #56	; 0x38
   132ac:	pop	{r4, r5, r6, r7, r8, pc}
   132b0:	bl	11034 <__stack_chk_fail@plt>
   132b4:	andeq	r2, r1, r8, asr pc
   132b8:			; <UNDEFINED> instruction: 0x00012db4
   132bc:	strdeq	r0, [r0], -ip
   132c0:	mov	r2, r1
   132c4:	mvn	r1, #0
   132c8:	b	1321c <close_stdout@@Base+0x1914>
   132cc:	mov	r1, #58	; 0x3a
   132d0:	b	132c0 <close_stdout@@Base+0x19b8>
   132d4:	mov	r2, #58	; 0x3a
   132d8:	b	1321c <close_stdout@@Base+0x1914>
   132dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   132e0:	mov	r5, r2
   132e4:	ldr	lr, [pc, #144]	; 1337c <close_stdout@@Base+0x1a74>
   132e8:	mov	r8, r0
   132ec:	mov	r9, r1
   132f0:	mov	r7, r3
   132f4:	add	lr, pc, lr
   132f8:	ldr	r4, [pc, #128]	; 13380 <close_stdout@@Base+0x1a78>
   132fc:	add	lr, lr, #256	; 0x100
   13300:	sub	sp, sp, #56	; 0x38
   13304:	ldr	sl, [pc, #120]	; 13384 <close_stdout@@Base+0x1a7c>
   13308:	add	r4, pc, r4
   1330c:	ldm	lr!, {r0, r1, r2, r3}
   13310:	add	ip, sp, #4
   13314:	ldr	r4, [r4, sl]
   13318:	ldr	r6, [sp, #88]	; 0x58
   1331c:	stmia	ip!, {r0, r1, r2, r3}
   13320:	ldm	lr!, {r0, r1, r2, r3}
   13324:	ldr	sl, [r4]
   13328:	stmia	ip!, {r0, r1, r2, r3}
   1332c:	ldm	lr, {r0, r1, r2, r3}
   13330:	str	sl, [sp, #52]	; 0x34
   13334:	stm	ip, {r0, r1, r2, r3}
   13338:	mov	r2, r5
   1333c:	add	r5, sp, #4
   13340:	mov	r1, r9
   13344:	mov	r0, r5
   13348:	bl	12e5c <close_stdout@@Base+0x1554>
   1334c:	mov	r2, r6
   13350:	mov	r3, r5
   13354:	mov	r0, r8
   13358:	mov	r1, r7
   1335c:	bl	12b8c <close_stdout@@Base+0x1284>
   13360:	ldr	r2, [sp, #52]	; 0x34
   13364:	ldr	r3, [r4]
   13368:	cmp	r2, r3
   1336c:	bne	13378 <close_stdout@@Base+0x1a70>
   13370:	add	sp, sp, #56	; 0x38
   13374:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13378:	bl	11034 <__stack_chk_fail@plt>
   1337c:	muleq	r1, r8, lr
   13380:	strdeq	r2, [r1], -r0
   13384:	strdeq	r0, [r0], -ip
   13388:	push	{lr}		; (str lr, [sp, #-4]!)
   1338c:	sub	sp, sp, #12
   13390:	mvn	ip, #0
   13394:	str	ip, [sp]
   13398:	bl	132dc <close_stdout@@Base+0x19d4>
   1339c:	add	sp, sp, #12
   133a0:	pop	{pc}		; (ldr pc, [sp], #4)
   133a4:	mov	ip, r1
   133a8:	mov	r3, r2
   133ac:	mov	r1, r0
   133b0:	mov	r2, ip
   133b4:	mov	r0, #0
   133b8:	b	13388 <close_stdout@@Base+0x1a80>
   133bc:	push	{lr}		; (str lr, [sp, #-4]!)
   133c0:	sub	sp, sp, #12
   133c4:	mov	lr, r1
   133c8:	mov	ip, r2
   133cc:	mov	r1, r0
   133d0:	str	r3, [sp]
   133d4:	mov	r2, lr
   133d8:	mov	r3, ip
   133dc:	mov	r0, #0
   133e0:	bl	132dc <close_stdout@@Base+0x19d4>
   133e4:	add	sp, sp, #12
   133e8:	pop	{pc}		; (ldr pc, [sp], #4)
   133ec:	ldr	r3, [pc, #12]	; 13400 <close_stdout@@Base+0x1af8>
   133f0:	ldr	ip, [pc, #12]	; 13404 <close_stdout@@Base+0x1afc>
   133f4:	add	r3, pc, r3
   133f8:	ldr	r3, [r3, ip]
   133fc:	b	12b8c <close_stdout@@Base+0x1284>
   13400:	andeq	r2, r1, r4, lsl #24
   13404:	strdeq	r0, [r0], -r8
   13408:	mov	r2, r1
   1340c:	mov	r1, r0
   13410:	mov	r0, #0
   13414:	b	133ec <close_stdout@@Base+0x1ae4>
   13418:	mvn	r2, #0
   1341c:	b	133ec <close_stdout@@Base+0x1ae4>
   13420:	mov	r1, r0
   13424:	mov	r0, #0
   13428:	b	13418 <close_stdout@@Base+0x1b10>
   1342c:	push	{r4, r5, r6, r7, lr}
   13430:	cmp	r1, #0
   13434:	sub	sp, sp, #36	; 0x24
   13438:	ldr	r7, [pc, #896]	; 137c0 <close_stdout@@Base+0x1eb8>
   1343c:	mov	ip, r3
   13440:	mov	r5, r0
   13444:	add	r7, pc, r7
   13448:	ldr	r4, [sp, #56]	; 0x38
   1344c:	ldr	r6, [sp, #60]	; 0x3c
   13450:	beq	13794 <close_stdout@@Base+0x1e8c>
   13454:	str	r2, [sp]
   13458:	mov	r3, r1
   1345c:	ldr	r2, [pc, #864]	; 137c4 <close_stdout@@Base+0x1ebc>
   13460:	mov	r1, #1
   13464:	str	ip, [sp, #4]
   13468:	add	r2, pc, r2
   1346c:	bl	1119c <__fprintf_chk@plt>
   13470:	ldr	r1, [pc, #848]	; 137c8 <close_stdout@@Base+0x1ec0>
   13474:	mov	r2, #5
   13478:	mov	r0, #0
   1347c:	add	r1, pc, r1
   13480:	bl	1101c <dcgettext@plt>
   13484:	ldr	r2, [pc, #832]	; 137cc <close_stdout@@Base+0x1ec4>
   13488:	movw	ip, #2013	; 0x7dd
   1348c:	mov	r1, #1
   13490:	ldr	r2, [r7, r2]
   13494:	str	ip, [sp]
   13498:	mov	r3, r0
   1349c:	mov	r0, r5
   134a0:	bl	1119c <__fprintf_chk@plt>
   134a4:	ldr	r1, [pc, #804]	; 137d0 <close_stdout@@Base+0x1ec8>
   134a8:	mov	r0, #0
   134ac:	mov	r2, #5
   134b0:	add	r1, pc, r1
   134b4:	bl	1101c <dcgettext@plt>
   134b8:	mov	r1, r5
   134bc:	bl	10fa4 <fputs_unlocked@plt>
   134c0:	cmp	r6, #9
   134c4:	addls	pc, pc, r6, lsl #2
   134c8:	b	137b0 <close_stdout@@Base+0x1ea8>
   134cc:	b	13560 <close_stdout@@Base+0x1c58>
   134d0:	b	13564 <close_stdout@@Base+0x1c5c>
   134d4:	b	13594 <close_stdout@@Base+0x1c8c>
   134d8:	b	135c8 <close_stdout@@Base+0x1cc0>
   134dc:	b	13604 <close_stdout@@Base+0x1cfc>
   134e0:	b	13644 <close_stdout@@Base+0x1d3c>
   134e4:	b	1368c <close_stdout@@Base+0x1d84>
   134e8:	b	136dc <close_stdout@@Base+0x1dd4>
   134ec:	b	13734 <close_stdout@@Base+0x1e2c>
   134f0:	b	134f4 <close_stdout@@Base+0x1bec>
   134f4:	ldr	r1, [pc, #728]	; 137d4 <close_stdout@@Base+0x1ecc>
   134f8:	mov	r0, #0
   134fc:	add	r1, pc, r1
   13500:	mov	r2, #5
   13504:	bl	1101c <dcgettext@plt>
   13508:	ldm	r4, {r3, ip}
   1350c:	mov	r1, #1
   13510:	str	ip, [sp]
   13514:	ldr	ip, [r4, #8]
   13518:	str	ip, [sp, #4]
   1351c:	ldr	ip, [r4, #12]
   13520:	str	ip, [sp, #8]
   13524:	ldr	ip, [r4, #16]
   13528:	str	ip, [sp, #12]
   1352c:	ldr	ip, [r4, #20]
   13530:	str	ip, [sp, #16]
   13534:	ldr	ip, [r4, #24]
   13538:	str	ip, [sp, #20]
   1353c:	ldr	ip, [r4, #28]
   13540:	str	ip, [sp, #24]
   13544:	ldr	ip, [r4, #32]
   13548:	str	ip, [sp, #28]
   1354c:	mov	r2, r0
   13550:	mov	r0, r5
   13554:	bl	1119c <__fprintf_chk@plt>
   13558:	add	sp, sp, #36	; 0x24
   1355c:	pop	{r4, r5, r6, r7, pc}
   13560:	bl	1122c <abort@plt>
   13564:	ldr	r1, [pc, #620]	; 137d8 <close_stdout@@Base+0x1ed0>
   13568:	mov	r2, #5
   1356c:	mov	r0, #0
   13570:	add	r1, pc, r1
   13574:	bl	1101c <dcgettext@plt>
   13578:	ldr	r3, [r4]
   1357c:	mov	r1, #1
   13580:	mov	r2, r0
   13584:	mov	r0, r5
   13588:	add	sp, sp, #36	; 0x24
   1358c:	pop	{r4, r5, r6, r7, lr}
   13590:	b	1119c <__fprintf_chk@plt>
   13594:	ldr	r1, [pc, #576]	; 137dc <close_stdout@@Base+0x1ed4>
   13598:	mov	r2, #5
   1359c:	mov	r0, #0
   135a0:	add	r1, pc, r1
   135a4:	bl	1101c <dcgettext@plt>
   135a8:	ldm	r4, {r3, ip}
   135ac:	mov	r1, #1
   135b0:	str	ip, [sp, #56]	; 0x38
   135b4:	mov	r2, r0
   135b8:	mov	r0, r5
   135bc:	add	sp, sp, #36	; 0x24
   135c0:	pop	{r4, r5, r6, r7, lr}
   135c4:	b	1119c <__fprintf_chk@plt>
   135c8:	ldr	r1, [pc, #528]	; 137e0 <close_stdout@@Base+0x1ed8>
   135cc:	mov	r2, #5
   135d0:	mov	r0, #0
   135d4:	add	r1, pc, r1
   135d8:	bl	1101c <dcgettext@plt>
   135dc:	ldm	r4, {r3, ip}
   135e0:	mov	r1, #1
   135e4:	str	ip, [sp, #56]	; 0x38
   135e8:	ldr	ip, [r4, #8]
   135ec:	str	ip, [sp, #60]	; 0x3c
   135f0:	mov	r2, r0
   135f4:	mov	r0, r5
   135f8:	add	sp, sp, #36	; 0x24
   135fc:	pop	{r4, r5, r6, r7, lr}
   13600:	b	1119c <__fprintf_chk@plt>
   13604:	ldr	r1, [pc, #472]	; 137e4 <close_stdout@@Base+0x1edc>
   13608:	mov	r2, #5
   1360c:	mov	r0, #0
   13610:	add	r1, pc, r1
   13614:	bl	1101c <dcgettext@plt>
   13618:	ldm	r4, {r3, ip}
   1361c:	mov	r1, #1
   13620:	str	ip, [sp]
   13624:	ldr	ip, [r4, #8]
   13628:	str	ip, [sp, #4]
   1362c:	ldr	ip, [r4, #12]
   13630:	str	ip, [sp, #8]
   13634:	mov	r2, r0
   13638:	mov	r0, r5
   1363c:	bl	1119c <__fprintf_chk@plt>
   13640:	b	13558 <close_stdout@@Base+0x1c50>
   13644:	ldr	r1, [pc, #412]	; 137e8 <close_stdout@@Base+0x1ee0>
   13648:	mov	r2, #5
   1364c:	mov	r0, #0
   13650:	add	r1, pc, r1
   13654:	bl	1101c <dcgettext@plt>
   13658:	ldm	r4, {r3, ip}
   1365c:	mov	r1, #1
   13660:	str	ip, [sp]
   13664:	ldr	ip, [r4, #8]
   13668:	str	ip, [sp, #4]
   1366c:	ldr	ip, [r4, #12]
   13670:	str	ip, [sp, #8]
   13674:	ldr	ip, [r4, #16]
   13678:	str	ip, [sp, #12]
   1367c:	mov	r2, r0
   13680:	mov	r0, r5
   13684:	bl	1119c <__fprintf_chk@plt>
   13688:	b	13558 <close_stdout@@Base+0x1c50>
   1368c:	ldr	r1, [pc, #344]	; 137ec <close_stdout@@Base+0x1ee4>
   13690:	mov	r2, #5
   13694:	mov	r0, #0
   13698:	add	r1, pc, r1
   1369c:	bl	1101c <dcgettext@plt>
   136a0:	ldm	r4, {r3, ip}
   136a4:	mov	r1, #1
   136a8:	str	ip, [sp]
   136ac:	ldr	ip, [r4, #8]
   136b0:	str	ip, [sp, #4]
   136b4:	ldr	ip, [r4, #12]
   136b8:	str	ip, [sp, #8]
   136bc:	ldr	ip, [r4, #16]
   136c0:	str	ip, [sp, #12]
   136c4:	ldr	ip, [r4, #20]
   136c8:	str	ip, [sp, #16]
   136cc:	mov	r2, r0
   136d0:	mov	r0, r5
   136d4:	bl	1119c <__fprintf_chk@plt>
   136d8:	b	13558 <close_stdout@@Base+0x1c50>
   136dc:	ldr	r1, [pc, #268]	; 137f0 <close_stdout@@Base+0x1ee8>
   136e0:	mov	r2, #5
   136e4:	mov	r0, #0
   136e8:	add	r1, pc, r1
   136ec:	bl	1101c <dcgettext@plt>
   136f0:	ldm	r4, {r3, ip}
   136f4:	mov	r1, #1
   136f8:	str	ip, [sp]
   136fc:	ldr	ip, [r4, #8]
   13700:	str	ip, [sp, #4]
   13704:	ldr	ip, [r4, #12]
   13708:	str	ip, [sp, #8]
   1370c:	ldr	ip, [r4, #16]
   13710:	str	ip, [sp, #12]
   13714:	ldr	ip, [r4, #20]
   13718:	str	ip, [sp, #16]
   1371c:	ldr	ip, [r4, #24]
   13720:	str	ip, [sp, #20]
   13724:	mov	r2, r0
   13728:	mov	r0, r5
   1372c:	bl	1119c <__fprintf_chk@plt>
   13730:	b	13558 <close_stdout@@Base+0x1c50>
   13734:	ldr	r1, [pc, #184]	; 137f4 <close_stdout@@Base+0x1eec>
   13738:	mov	r2, #5
   1373c:	mov	r0, #0
   13740:	add	r1, pc, r1
   13744:	bl	1101c <dcgettext@plt>
   13748:	ldm	r4, {r3, ip}
   1374c:	mov	r1, #1
   13750:	str	ip, [sp]
   13754:	ldr	ip, [r4, #8]
   13758:	str	ip, [sp, #4]
   1375c:	ldr	ip, [r4, #12]
   13760:	str	ip, [sp, #8]
   13764:	ldr	ip, [r4, #16]
   13768:	str	ip, [sp, #12]
   1376c:	ldr	ip, [r4, #20]
   13770:	str	ip, [sp, #16]
   13774:	ldr	ip, [r4, #24]
   13778:	str	ip, [sp, #20]
   1377c:	ldr	ip, [r4, #28]
   13780:	str	ip, [sp, #24]
   13784:	mov	r2, r0
   13788:	mov	r0, r5
   1378c:	bl	1119c <__fprintf_chk@plt>
   13790:	b	13558 <close_stdout@@Base+0x1c50>
   13794:	str	r3, [sp]
   13798:	mov	r3, r2
   1379c:	ldr	r2, [pc, #84]	; 137f8 <close_stdout@@Base+0x1ef0>
   137a0:	mov	r1, #1
   137a4:	add	r2, pc, r2
   137a8:	bl	1119c <__fprintf_chk@plt>
   137ac:	b	13470 <close_stdout@@Base+0x1b68>
   137b0:	ldr	r1, [pc, #68]	; 137fc <close_stdout@@Base+0x1ef4>
   137b4:	mov	r0, #0
   137b8:	add	r1, pc, r1
   137bc:	b	13500 <close_stdout@@Base+0x1bf8>
   137c0:			; <UNDEFINED> instruction: 0x00012bb4
   137c4:	ldrdeq	r1, [r0], -r8
   137c8:	ldrdeq	r1, [r0], -r8
   137cc:	andeq	r0, r0, ip, lsr #2
   137d0:	andeq	r1, r0, r8, lsr #11
   137d4:	andeq	r1, r0, r4, lsr r7
   137d8:			; <UNDEFINED> instruction: 0x000015b4
   137dc:	muleq	r0, r4, r5
   137e0:	andeq	r1, r0, r8, ror r5
   137e4:	andeq	r1, r0, r8, asr r5
   137e8:	andeq	r1, r0, r8, lsr r5
   137ec:	andeq	r1, r0, r4, lsl r5
   137f0:	andeq	r1, r0, ip, ror #9
   137f4:	andeq	r1, r0, r0, asr #9
   137f8:	andeq	r1, r0, r8, lsr #5
   137fc:	andeq	r1, r0, ip, lsr #9
   13800:	push	{r4, r5, lr}
   13804:	sub	sp, sp, #12
   13808:	ldr	r5, [sp, #24]
   1380c:	ldr	ip, [r5]
   13810:	cmp	ip, #0
   13814:	beq	13830 <close_stdout@@Base+0x1f28>
   13818:	mov	lr, r5
   1381c:	mov	ip, #0
   13820:	ldr	r4, [lr, #4]!
   13824:	add	ip, ip, #1
   13828:	cmp	r4, #0
   1382c:	bne	13820 <close_stdout@@Base+0x1f18>
   13830:	stm	sp, {r5, ip}
   13834:	bl	1342c <close_stdout@@Base+0x1b24>
   13838:	add	sp, sp, #12
   1383c:	pop	{r4, r5, pc}
   13840:	push	{r4, r5, r6, r7, lr}
   13844:	sub	sp, sp, #60	; 0x3c
   13848:	ldr	r4, [pc, #100]	; 138b4 <close_stdout@@Base+0x1fac>
   1384c:	mov	ip, #0
   13850:	ldr	r5, [pc, #96]	; 138b8 <close_stdout@@Base+0x1fb0>
   13854:	mov	lr, ip
   13858:	add	r4, pc, r4
   1385c:	ldr	r6, [sp, #80]	; 0x50
   13860:	ldr	r7, [r4, r5]
   13864:	add	r5, sp, #12
   13868:	ldr	r4, [r7]
   1386c:	str	r4, [sp, #52]	; 0x34
   13870:	ldr	r4, [r6, ip]
   13874:	cmp	r4, #0
   13878:	str	r4, [r5, ip]
   1387c:	beq	13890 <close_stdout@@Base+0x1f88>
   13880:	add	lr, lr, #1
   13884:	add	ip, ip, #4
   13888:	cmp	lr, #10
   1388c:	bne	13870 <close_stdout@@Base+0x1f68>
   13890:	stm	sp, {r5, lr}
   13894:	bl	1342c <close_stdout@@Base+0x1b24>
   13898:	ldr	r2, [sp, #52]	; 0x34
   1389c:	ldr	r3, [r7]
   138a0:	cmp	r2, r3
   138a4:	bne	138b0 <close_stdout@@Base+0x1fa8>
   138a8:	add	sp, sp, #60	; 0x3c
   138ac:	pop	{r4, r5, r6, r7, pc}
   138b0:	bl	11034 <__stack_chk_fail@plt>
   138b4:	andeq	r2, r1, r0, lsr #15
   138b8:	strdeq	r0, [r0], -ip
   138bc:	push	{r3}		; (str r3, [sp, #-4]!)
   138c0:	push	{r4, lr}
   138c4:	sub	sp, sp, #20
   138c8:	ldr	lr, [pc, #72]	; 13918 <close_stdout@@Base+0x2010>
   138cc:	add	ip, sp, #32
   138d0:	ldr	r4, [pc, #68]	; 1391c <close_stdout@@Base+0x2014>
   138d4:	add	lr, pc, lr
   138d8:	ldr	r3, [sp, #28]
   138dc:	ldr	r4, [lr, r4]
   138e0:	str	ip, [sp]
   138e4:	str	ip, [sp, #8]
   138e8:	ldr	ip, [r4]
   138ec:	str	ip, [sp, #12]
   138f0:	bl	13840 <close_stdout@@Base+0x1f38>
   138f4:	ldr	r2, [sp, #12]
   138f8:	ldr	r3, [r4]
   138fc:	cmp	r2, r3
   13900:	bne	13914 <close_stdout@@Base+0x200c>
   13904:	add	sp, sp, #20
   13908:	pop	{r4, lr}
   1390c:	add	sp, sp, #4
   13910:	bx	lr
   13914:	bl	11034 <__stack_chk_fail@plt>
   13918:	andeq	r2, r1, r4, lsr #14
   1391c:	strdeq	r0, [r0], -ip
   13920:	ldr	r1, [pc, #132]	; 139ac <close_stdout@@Base+0x20a4>
   13924:	mov	r2, #5
   13928:	push	{r4, lr}
   1392c:	add	r1, pc, r1
   13930:	mov	r0, #0
   13934:	ldr	r4, [pc, #116]	; 139b0 <close_stdout@@Base+0x20a8>
   13938:	bl	1101c <dcgettext@plt>
   1393c:	ldr	r2, [pc, #112]	; 139b4 <close_stdout@@Base+0x20ac>
   13940:	add	r4, pc, r4
   13944:	add	r2, pc, r2
   13948:	mov	r1, r0
   1394c:	mov	r0, #1
   13950:	bl	11184 <__printf_chk@plt>
   13954:	ldr	r1, [pc, #92]	; 139b8 <close_stdout@@Base+0x20b0>
   13958:	mov	r2, #5
   1395c:	mov	r0, #0
   13960:	add	r1, pc, r1
   13964:	bl	1101c <dcgettext@plt>
   13968:	ldr	r2, [pc, #76]	; 139bc <close_stdout@@Base+0x20b4>
   1396c:	ldr	r3, [pc, #76]	; 139c0 <close_stdout@@Base+0x20b8>
   13970:	add	r2, pc, r2
   13974:	add	r3, pc, r3
   13978:	mov	r1, r0
   1397c:	mov	r0, #1
   13980:	bl	11184 <__printf_chk@plt>
   13984:	ldr	r1, [pc, #56]	; 139c4 <close_stdout@@Base+0x20bc>
   13988:	mov	r0, #0
   1398c:	mov	r2, #5
   13990:	add	r1, pc, r1
   13994:	bl	1101c <dcgettext@plt>
   13998:	ldr	r3, [pc, #40]	; 139c8 <close_stdout@@Base+0x20c0>
   1399c:	ldr	r3, [r4, r3]
   139a0:	pop	{r4, lr}
   139a4:	ldr	r1, [r3]
   139a8:	b	10fa4 <fputs_unlocked@plt>
   139ac:	andeq	r1, r0, r4, ror r3
   139b0:			; <UNDEFINED> instruction: 0x000126b8
   139b4:	andeq	r1, r0, r4, ror r3
   139b8:	andeq	r1, r0, r0, ror r3
   139bc:	andeq	r0, r0, r0, asr #29
   139c0:	andeq	r0, r0, ip, asr #29
   139c4:	andeq	r1, r0, r4, asr r3
   139c8:	andeq	r0, r0, r8, lsl r1
   139cc:	push	{r4, lr}
   139d0:	mov	r4, r0
   139d4:	bl	110d0 <malloc@plt>
   139d8:	rsbs	r3, r0, #1
   139dc:	movcc	r3, #0
   139e0:	cmp	r4, #0
   139e4:	moveq	r3, #0
   139e8:	cmp	r3, #0
   139ec:	popeq	{r4, pc}
   139f0:	bl	13be0 <close_stdout@@Base+0x22d8>
   139f4:	push	{r3, r4, r5, lr}
   139f8:	mov	r4, r0
   139fc:	mvn	r0, #0
   13a00:	mov	r5, r1
   13a04:	bl	14420 <close_stdout@@Base+0x2b18>
   13a08:	cmp	r0, r4
   13a0c:	bcc	13a1c <close_stdout@@Base+0x2114>
   13a10:	mul	r0, r4, r5
   13a14:	pop	{r3, r4, r5, lr}
   13a18:	b	139cc <close_stdout@@Base+0x20c4>
   13a1c:	bl	13be0 <close_stdout@@Base+0x22d8>
   13a20:	b	139cc <close_stdout@@Base+0x20c4>
   13a24:	rsbs	r3, r1, #1
   13a28:	push	{r4, lr}
   13a2c:	movcc	r3, #0
   13a30:	cmp	r0, #0
   13a34:	mov	r4, r1
   13a38:	moveq	r3, #0
   13a3c:	cmp	r3, #0
   13a40:	bne	13a64 <close_stdout@@Base+0x215c>
   13a44:	bl	11040 <realloc@plt>
   13a48:	rsbs	r3, r0, #1
   13a4c:	movcc	r3, #0
   13a50:	cmp	r4, #0
   13a54:	moveq	r3, #0
   13a58:	cmp	r3, #0
   13a5c:	popeq	{r4, pc}
   13a60:	bl	13be0 <close_stdout@@Base+0x22d8>
   13a64:	bl	10fe0 <free@plt>
   13a68:	mov	r0, #0
   13a6c:	pop	{r4, pc}
   13a70:	push	{r4, r5, r6, lr}
   13a74:	mov	r5, r1
   13a78:	mov	r6, r0
   13a7c:	mov	r1, r2
   13a80:	mvn	r0, #0
   13a84:	mov	r4, r2
   13a88:	bl	14420 <close_stdout@@Base+0x2b18>
   13a8c:	cmp	r0, r5
   13a90:	bcc	13aa4 <close_stdout@@Base+0x219c>
   13a94:	mov	r0, r6
   13a98:	mul	r1, r5, r4
   13a9c:	pop	{r4, r5, r6, lr}
   13aa0:	b	13a24 <close_stdout@@Base+0x211c>
   13aa4:	bl	13be0 <close_stdout@@Base+0x22d8>
   13aa8:	push	{r3, r4, r5, r6, r7, lr}
   13aac:	subs	r7, r0, #0
   13ab0:	mov	r5, r1
   13ab4:	mov	r6, r2
   13ab8:	ldr	r4, [r1]
   13abc:	beq	13af4 <close_stdout@@Base+0x21ec>
   13ac0:	movw	r0, #43690	; 0xaaaa
   13ac4:	mov	r1, r2
   13ac8:	bfi	r0, r0, #16, #16
   13acc:	bl	14420 <close_stdout@@Base+0x2b18>
   13ad0:	cmp	r4, r0
   13ad4:	addcc	r3, r4, #1
   13ad8:	addcc	r4, r4, r3, lsr #1
   13adc:	bcs	13b18 <close_stdout@@Base+0x2210>
   13ae0:	str	r4, [r5]
   13ae4:	mov	r0, r7
   13ae8:	mul	r1, r6, r4
   13aec:	pop	{r3, r4, r5, r6, r7, lr}
   13af0:	b	13a24 <close_stdout@@Base+0x211c>
   13af4:	cmp	r4, #0
   13af8:	bne	13ae0 <close_stdout@@Base+0x21d8>
   13afc:	mov	r0, #64	; 0x40
   13b00:	mov	r1, r2
   13b04:	bl	14420 <close_stdout@@Base+0x2b18>
   13b08:	cmp	r0, #0
   13b0c:	movne	r4, r0
   13b10:	addeq	r4, r0, #1
   13b14:	b	13ae0 <close_stdout@@Base+0x21d8>
   13b18:	bl	13be0 <close_stdout@@Base+0x22d8>
   13b1c:	cmp	r0, #0
   13b20:	push	{r3, lr}
   13b24:	ldr	r3, [r1]
   13b28:	beq	13b54 <close_stdout@@Base+0x224c>
   13b2c:	movw	r2, #43689	; 0xaaa9
   13b30:	movt	r2, #43690	; 0xaaaa
   13b34:	cmp	r3, r2
   13b38:	addls	r2, r3, #1
   13b3c:	addls	r3, r3, r2, lsr #1
   13b40:	bhi	13b6c <close_stdout@@Base+0x2264>
   13b44:	str	r3, [r1]
   13b48:	mov	r1, r3
   13b4c:	pop	{r3, lr}
   13b50:	b	13a24 <close_stdout@@Base+0x211c>
   13b54:	cmp	r3, #0
   13b58:	moveq	r3, #64	; 0x40
   13b5c:	str	r3, [r1]
   13b60:	mov	r1, r3
   13b64:	pop	{r3, lr}
   13b68:	b	13a24 <close_stdout@@Base+0x211c>
   13b6c:	bl	13be0 <close_stdout@@Base+0x22d8>
   13b70:	push	{r4, lr}
   13b74:	mov	r4, r0
   13b78:	bl	139cc <close_stdout@@Base+0x20c4>
   13b7c:	mov	r2, r4
   13b80:	mov	r1, #0
   13b84:	pop	{r4, lr}
   13b88:	b	11160 <memset@plt>
   13b8c:	push	{r3, lr}
   13b90:	bl	10f98 <calloc@plt>
   13b94:	cmp	r0, #0
   13b98:	popne	{r3, pc}
   13b9c:	bl	13be0 <close_stdout@@Base+0x22d8>
   13ba0:	push	{r3, r4, r5, lr}
   13ba4:	mov	r4, r1
   13ba8:	mov	r5, r0
   13bac:	mov	r0, r1
   13bb0:	bl	139cc <close_stdout@@Base+0x20c4>
   13bb4:	mov	r1, r5
   13bb8:	mov	r2, r4
   13bbc:	pop	{r3, r4, r5, lr}
   13bc0:	b	10ff8 <memcpy@plt>
   13bc4:	push	{r4, lr}
   13bc8:	mov	r4, r0
   13bcc:	bl	11130 <strlen@plt>
   13bd0:	add	r1, r0, #1
   13bd4:	mov	r0, r4
   13bd8:	pop	{r4, lr}
   13bdc:	b	13ba0 <close_stdout@@Base+0x2298>
   13be0:	ldr	r3, [pc, #64]	; 13c28 <close_stdout@@Base+0x2320>
   13be4:	mov	r2, #5
   13be8:	ldr	ip, [pc, #60]	; 13c2c <close_stdout@@Base+0x2324>
   13bec:	mov	r0, #0
   13bf0:	add	r3, pc, r3
   13bf4:	ldr	r1, [pc, #52]	; 13c30 <close_stdout@@Base+0x2328>
   13bf8:	push	{r4, lr}
   13bfc:	add	r1, pc, r1
   13c00:	ldr	r3, [r3, ip]
   13c04:	ldr	r4, [r3]
   13c08:	bl	1101c <dcgettext@plt>
   13c0c:	ldr	r2, [pc, #32]	; 13c34 <close_stdout@@Base+0x232c>
   13c10:	mov	r1, #0
   13c14:	add	r2, pc, r2
   13c18:	mov	r3, r0
   13c1c:	mov	r0, r4
   13c20:	bl	110ac <error@plt>
   13c24:	bl	1122c <abort@plt>
   13c28:	andeq	r2, r1, r8, lsl #8
   13c2c:	andeq	r0, r0, r0, lsr #2
   13c30:	andeq	r1, r0, r8, asr r1
   13c34:	andeq	r0, r0, r0, asr sp
   13c38:	push	{r3, r4, r5, lr}
   13c3c:	mov	r5, r0
   13c40:	mov	r0, #33	; 0x21
   13c44:	bl	139cc <close_stdout@@Base+0x20c4>
   13c48:	add	r1, r5, #44	; 0x2c
   13c4c:	mov	r2, #32
   13c50:	mov	r5, #0
   13c54:	mov	r4, r0
   13c58:	bl	1116c <strncpy@plt>
   13c5c:	mov	r0, r4
   13c60:	strb	r5, [r4, #32]
   13c64:	bl	11130 <strlen@plt>
   13c68:	add	r0, r4, r0
   13c6c:	cmp	r4, r0
   13c70:	bcs	13c80 <close_stdout@@Base+0x2378>
   13c74:	ldrb	r3, [r0, #-1]
   13c78:	cmp	r3, #32
   13c7c:	beq	13c88 <close_stdout@@Base+0x2380>
   13c80:	mov	r0, r4
   13c84:	pop	{r3, r4, r5, pc}
   13c88:	strb	r5, [r0, #-1]!
   13c8c:	cmp	r0, r4
   13c90:	bne	13c74 <close_stdout@@Base+0x236c>
   13c94:	b	13c80 <close_stdout@@Base+0x2378>
   13c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c9c:	sub	sp, sp, #12
   13ca0:	mov	r6, #0
   13ca4:	movw	r8, #50971	; 0xc71b
   13ca8:	movt	r8, #113	; 0x71
   13cac:	mov	r4, r3
   13cb0:	mov	sl, r1
   13cb4:	mov	r9, r2
   13cb8:	mov	r5, r6
   13cbc:	bl	10fd4 <utmpxname@plt>
   13cc0:	mov	r7, r6
   13cc4:	and	r3, r4, #2
   13cc8:	and	r4, r4, #1
   13ccc:	str	r3, [sp]
   13cd0:	bl	11028 <setutxent@plt>
   13cd4:	str	r4, [sp, #4]
   13cd8:	mov	r4, r6
   13cdc:	bl	11238 <getutxent@plt>
   13ce0:	subs	fp, r0, #0
   13ce4:	beq	13d34 <close_stdout@@Base+0x242c>
   13ce8:	ldrb	r2, [fp, #44]	; 0x2c
   13cec:	ldrh	r1, [fp]
   13cf0:	cmp	r2, #0
   13cf4:	ldr	r0, [fp, #4]
   13cf8:	bne	13d4c <close_stdout@@Base+0x2444>
   13cfc:	ldr	r3, [sp]
   13d00:	cmp	r3, #0
   13d04:	bne	13cdc <close_stdout@@Base+0x23d4>
   13d08:	cmp	r5, r4
   13d0c:	beq	13d90 <close_stdout@@Base+0x2488>
   13d10:	mov	r1, fp
   13d14:	add	r0, r7, r6
   13d18:	mov	r2, #384	; 0x180
   13d1c:	add	r4, r4, #1
   13d20:	bl	10ff8 <memcpy@plt>
   13d24:	add	r6, r6, #384	; 0x180
   13d28:	bl	11238 <getutxent@plt>
   13d2c:	subs	fp, r0, #0
   13d30:	bne	13ce8 <close_stdout@@Base+0x23e0>
   13d34:	bl	111cc <endutxent@plt>
   13d38:	str	r4, [sl]
   13d3c:	mov	r0, fp
   13d40:	str	r7, [r9]
   13d44:	add	sp, sp, #12
   13d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d4c:	cmp	r1, #7
   13d50:	bne	13cfc <close_stdout@@Base+0x23f4>
   13d54:	ldr	r3, [sp, #4]
   13d58:	cmp	r3, #0
   13d5c:	beq	13d08 <close_stdout@@Base+0x2400>
   13d60:	cmp	r0, #0
   13d64:	ble	13d08 <close_stdout@@Base+0x2400>
   13d68:	mov	r1, #0
   13d6c:	bl	1110c <kill@plt>
   13d70:	cmp	r0, #0
   13d74:	bge	13d08 <close_stdout@@Base+0x2400>
   13d78:	bl	11148 <__errno_location@plt>
   13d7c:	ldr	r2, [r0]
   13d80:	cmp	r2, #3
   13d84:	beq	13cdc <close_stdout@@Base+0x23d4>
   13d88:	cmp	r5, r4
   13d8c:	bne	13d10 <close_stdout@@Base+0x2408>
   13d90:	cmp	r7, #0
   13d94:	beq	13dc0 <close_stdout@@Base+0x24b8>
   13d98:	cmp	r5, r8
   13d9c:	bhi	13dd4 <close_stdout@@Base+0x24cc>
   13da0:	add	r2, r5, #1
   13da4:	add	r5, r5, r2, lsr #1
   13da8:	add	r1, r5, r5, lsl #1
   13dac:	lsl	r1, r1, #7
   13db0:	mov	r0, r7
   13db4:	bl	13a24 <close_stdout@@Base+0x211c>
   13db8:	mov	r7, r0
   13dbc:	b	13d10 <close_stdout@@Base+0x2408>
   13dc0:	cmp	r5, #0
   13dc4:	moveq	r1, #384	; 0x180
   13dc8:	moveq	r5, #1
   13dcc:	beq	13db0 <close_stdout@@Base+0x24a8>
   13dd0:	b	13da8 <close_stdout@@Base+0x24a0>
   13dd4:	bl	13be0 <close_stdout@@Base+0x22d8>
   13dd8:	push	{r4, r5, r6, lr}
   13ddc:	mov	r4, r0
   13de0:	bl	11094 <__fpending@plt>
   13de4:	mov	r6, r0
   13de8:	mov	r0, r4
   13dec:	ldr	r4, [r4]
   13df0:	bl	14278 <close_stdout@@Base+0x2970>
   13df4:	and	r4, r4, #32
   13df8:	adds	r5, r0, #0
   13dfc:	movne	r5, #1
   13e00:	cmp	r4, #0
   13e04:	bne	13e24 <close_stdout@@Base+0x251c>
   13e08:	cmp	r5, #0
   13e0c:	beq	13e1c <close_stdout@@Base+0x2514>
   13e10:	cmp	r6, #0
   13e14:	beq	13e40 <close_stdout@@Base+0x2538>
   13e18:	mvn	r4, #0
   13e1c:	mov	r0, r4
   13e20:	pop	{r4, r5, r6, pc}
   13e24:	cmp	r5, #0
   13e28:	bne	13e18 <close_stdout@@Base+0x2510>
   13e2c:	bl	11148 <__errno_location@plt>
   13e30:	mvn	r4, #0
   13e34:	str	r5, [r0]
   13e38:	mov	r0, r4
   13e3c:	pop	{r4, r5, r6, pc}
   13e40:	bl	11148 <__errno_location@plt>
   13e44:	ldr	r4, [r0]
   13e48:	subs	r4, r4, #9
   13e4c:	mvnne	r4, #0
   13e50:	mov	r0, r4
   13e54:	pop	{r4, r5, r6, pc}
   13e58:	ldr	r3, [pc, #984]	; 14238 <close_stdout@@Base+0x2930>
   13e5c:	mov	r0, #14
   13e60:	ldr	r2, [pc, #980]	; 1423c <close_stdout@@Base+0x2934>
   13e64:	add	r3, pc, r3
   13e68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e6c:	sub	sp, sp, #132	; 0x84
   13e70:	ldr	r6, [r3, r2]
   13e74:	ldr	r3, [r6]
   13e78:	str	r3, [sp, #124]	; 0x7c
   13e7c:	bl	111fc <nl_langinfo@plt>
   13e80:	subs	r5, r0, #0
   13e84:	beq	13f38 <close_stdout@@Base+0x2630>
   13e88:	ldr	r3, [pc, #944]	; 14240 <close_stdout@@Base+0x2938>
   13e8c:	ldr	r4, [pc, r3]
   13e90:	cmp	r4, #0
   13e94:	beq	13f44 <close_stdout@@Base+0x263c>
   13e98:	ldrb	r7, [r4]
   13e9c:	cmp	r7, #0
   13ea0:	bne	13ed4 <close_stdout@@Base+0x25cc>
   13ea4:	b	13f0c <close_stdout@@Base+0x2604>
   13ea8:	mov	r0, r4
   13eac:	bl	11130 <strlen@plt>
   13eb0:	add	r0, r0, #1
   13eb4:	add	r7, r4, r0
   13eb8:	mov	r0, r7
   13ebc:	bl	11130 <strlen@plt>
   13ec0:	add	r0, r0, #1
   13ec4:	add	r4, r7, r0
   13ec8:	ldrb	r7, [r7, r0]
   13ecc:	cmp	r7, #0
   13ed0:	beq	13f0c <close_stdout@@Base+0x2604>
   13ed4:	mov	r0, r5
   13ed8:	mov	r1, r4
   13edc:	bl	10fbc <strcmp@plt>
   13ee0:	cmp	r0, #0
   13ee4:	beq	13efc <close_stdout@@Base+0x25f4>
   13ee8:	cmp	r7, #42	; 0x2a
   13eec:	bne	13ea8 <close_stdout@@Base+0x25a0>
   13ef0:	ldrb	r3, [r4, #1]
   13ef4:	cmp	r3, #0
   13ef8:	bne	13ea8 <close_stdout@@Base+0x25a0>
   13efc:	mov	r0, r4
   13f00:	bl	11130 <strlen@plt>
   13f04:	add	r0, r0, #1
   13f08:	add	r5, r4, r0
   13f0c:	ldrb	r3, [r5]
   13f10:	cmp	r3, #0
   13f14:	ldreq	r5, [pc, #808]	; 14244 <close_stdout@@Base+0x293c>
   13f18:	addeq	r5, pc, r5
   13f1c:	ldr	r2, [sp, #124]	; 0x7c
   13f20:	mov	r0, r5
   13f24:	ldr	r3, [r6]
   13f28:	cmp	r2, r3
   13f2c:	bne	1420c <close_stdout@@Base+0x2904>
   13f30:	add	sp, sp, #132	; 0x84
   13f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f38:	ldr	r5, [pc, #776]	; 14248 <close_stdout@@Base+0x2940>
   13f3c:	add	r5, pc, r5
   13f40:	b	13e88 <close_stdout@@Base+0x2580>
   13f44:	ldr	r0, [pc, #768]	; 1424c <close_stdout@@Base+0x2944>
   13f48:	add	r0, pc, r0
   13f4c:	bl	110c4 <getenv@plt>
   13f50:	subs	r8, r0, #0
   13f54:	beq	141e4 <close_stdout@@Base+0x28dc>
   13f58:	ldrb	r3, [r8]
   13f5c:	cmp	r3, #0
   13f60:	beq	14178 <close_stdout@@Base+0x2870>
   13f64:	bl	11130 <strlen@plt>
   13f68:	subs	sl, r0, #0
   13f6c:	subne	r3, sl, #1
   13f70:	bne	14188 <close_stdout@@Base+0x2880>
   13f74:	mov	r9, #0
   13f78:	mov	fp, r9
   13f7c:	add	r9, sl, r9
   13f80:	add	r0, r9, #14
   13f84:	bl	110d0 <malloc@plt>
   13f88:	subs	r7, r0, #0
   13f8c:	beq	141d8 <close_stdout@@Base+0x28d0>
   13f90:	mov	r1, r8
   13f94:	mov	r2, sl
   13f98:	bl	10ff8 <memcpy@plt>
   13f9c:	cmp	fp, #0
   13fa0:	add	ip, r7, r9
   13fa4:	movne	r3, #47	; 0x2f
   13fa8:	strbne	r3, [r7, sl]
   13fac:	ldr	r3, [pc, #668]	; 14250 <close_stdout@@Base+0x2948>
   13fb0:	add	r3, pc, r3
   13fb4:	ldm	r3!, {r0, r1, r2}
   13fb8:	ldrh	r3, [r3]
   13fbc:	str	r0, [r7, r9]
   13fc0:	mov	r0, r7
   13fc4:	str	r1, [ip, #4]
   13fc8:	mov	r1, #32768	; 0x8000
   13fcc:	strh	r3, [ip, #12]
   13fd0:	str	r2, [ip, #8]
   13fd4:	bl	110b8 <open64@plt>
   13fd8:	subs	r8, r0, #0
   13fdc:	blt	141a0 <close_stdout@@Base+0x2898>
   13fe0:	ldr	r1, [pc, #620]	; 14254 <close_stdout@@Base+0x294c>
   13fe4:	add	r1, pc, r1
   13fe8:	bl	10f8c <fdopen@plt>
   13fec:	subs	fp, r0, #0
   13ff0:	beq	141f8 <close_stdout@@Base+0x28f0>
   13ff4:	ldr	r0, [pc, #604]	; 14258 <close_stdout@@Base+0x2950>
   13ff8:	add	sl, sp, #20
   13ffc:	add	r9, sp, #72	; 0x48
   14000:	mov	r8, #0
   14004:	add	r0, pc, r0
   14008:	str	r0, [sp, #12]
   1400c:	ldr	r3, [fp, #4]
   14010:	ldr	r2, [fp, #8]
   14014:	cmp	r3, r2
   14018:	bcs	14104 <close_stdout@@Base+0x27fc>
   1401c:	add	r2, r3, #1
   14020:	str	r2, [fp, #4]
   14024:	ldrb	r0, [r3]
   14028:	cmp	r0, #32
   1402c:	beq	1400c <close_stdout@@Base+0x2704>
   14030:	sub	r3, r0, #9
   14034:	cmp	r3, #1
   14038:	bls	1400c <close_stdout@@Base+0x2704>
   1403c:	cmp	r0, #35	; 0x23
   14040:	beq	14118 <close_stdout@@Base+0x2810>
   14044:	mov	r1, fp
   14048:	bl	1113c <ungetc@plt>
   1404c:	mov	r0, fp
   14050:	ldr	r1, [sp, #12]
   14054:	mov	r2, sl
   14058:	mov	r3, r9
   1405c:	bl	11178 <fscanf@plt>
   14060:	cmp	r0, #1
   14064:	ble	14148 <close_stdout@@Base+0x2840>
   14068:	mov	r0, sl
   1406c:	bl	11130 <strlen@plt>
   14070:	str	r0, [sp, #8]
   14074:	mov	r0, r9
   14078:	bl	11130 <strlen@plt>
   1407c:	cmp	r8, #0
   14080:	mov	r2, r0
   14084:	bne	141ac <close_stdout@@Base+0x28a4>
   14088:	ldr	r3, [sp, #8]
   1408c:	str	r2, [sp]
   14090:	add	r8, r0, r3
   14094:	add	r0, r8, #3
   14098:	add	r8, r8, #2
   1409c:	bl	110d0 <malloc@plt>
   140a0:	ldr	r2, [sp]
   140a4:	mov	r3, r0
   140a8:	cmp	r3, #0
   140ac:	beq	14210 <close_stdout@@Base+0x2908>
   140b0:	ldr	r0, [sp, #8]
   140b4:	movw	r1, #65534	; 0xfffe
   140b8:	movt	r1, #65535	; 0xffff
   140bc:	rsb	r2, r2, r8
   140c0:	rsb	r1, r0, r1
   140c4:	stm	sp, {r2, r3}
   140c8:	add	r0, r1, r2
   140cc:	mov	r1, sl
   140d0:	add	r0, r3, r0
   140d4:	mov	r4, r3
   140d8:	bl	11088 <strcpy@plt>
   140dc:	ldr	r2, [sp]
   140e0:	ldr	r3, [sp, #4]
   140e4:	mov	r1, r9
   140e8:	sub	r0, r2, #1
   140ec:	add	r0, r3, r0
   140f0:	bl	11088 <strcpy@plt>
   140f4:	ldr	r3, [fp, #4]
   140f8:	ldr	r2, [fp, #8]
   140fc:	cmp	r3, r2
   14100:	bcc	1401c <close_stdout@@Base+0x2714>
   14104:	mov	r0, fp
   14108:	bl	111c0 <__uflow@plt>
   1410c:	cmn	r0, #1
   14110:	beq	14148 <close_stdout@@Base+0x2840>
   14114:	b	14028 <close_stdout@@Base+0x2720>
   14118:	ldr	r3, [fp, #4]
   1411c:	ldr	r2, [fp, #8]
   14120:	cmp	r3, r2
   14124:	bcs	1422c <close_stdout@@Base+0x2924>
   14128:	add	r2, r3, #1
   1412c:	str	r2, [fp, #4]
   14130:	ldrb	r0, [r3]
   14134:	cmp	r0, #10
   14138:	cmnne	r0, #1
   1413c:	bne	14118 <close_stdout@@Base+0x2810>
   14140:	cmn	r0, #1
   14144:	bne	1400c <close_stdout@@Base+0x2704>
   14148:	mov	r0, fp
   1414c:	bl	14278 <close_stdout@@Base+0x2970>
   14150:	cmp	r8, #0
   14154:	beq	141a0 <close_stdout@@Base+0x2898>
   14158:	mov	r3, #0
   1415c:	strb	r3, [r4, r8]
   14160:	mov	r0, r7
   14164:	bl	10fe0 <free@plt>
   14168:	ldr	r3, [pc, #236]	; 1425c <close_stdout@@Base+0x2954>
   1416c:	add	r3, pc, r3
   14170:	str	r4, [r3]
   14174:	b	13e98 <close_stdout@@Base+0x2590>
   14178:	ldr	r8, [pc, #224]	; 14260 <close_stdout@@Base+0x2958>
   1417c:	mov	r3, #7
   14180:	mov	sl, #8
   14184:	add	r8, pc, r8
   14188:	ldrb	r3, [r8, r3]
   1418c:	cmp	r3, #47	; 0x2f
   14190:	movne	r9, #1
   14194:	movne	fp, r9
   14198:	bne	13f7c <close_stdout@@Base+0x2674>
   1419c:	b	13f74 <close_stdout@@Base+0x266c>
   141a0:	ldr	r4, [pc, #188]	; 14264 <close_stdout@@Base+0x295c>
   141a4:	add	r4, pc, r4
   141a8:	b	14160 <close_stdout@@Base+0x2858>
   141ac:	ldr	r0, [sp, #8]
   141b0:	str	r2, [sp]
   141b4:	add	r3, r0, r2
   141b8:	mov	r0, r4
   141bc:	add	r8, r3, r8
   141c0:	add	r1, r8, #3
   141c4:	add	r8, r8, #2
   141c8:	bl	11040 <realloc@plt>
   141cc:	ldr	r2, [sp]
   141d0:	mov	r3, r0
   141d4:	b	140a8 <close_stdout@@Base+0x27a0>
   141d8:	ldr	r4, [pc, #136]	; 14268 <close_stdout@@Base+0x2960>
   141dc:	add	r4, pc, r4
   141e0:	b	14168 <close_stdout@@Base+0x2860>
   141e4:	ldr	r8, [pc, #128]	; 1426c <close_stdout@@Base+0x2964>
   141e8:	mov	r3, #7
   141ec:	mov	sl, #8
   141f0:	add	r8, pc, r8
   141f4:	b	14188 <close_stdout@@Base+0x2880>
   141f8:	ldr	r4, [pc, #112]	; 14270 <close_stdout@@Base+0x2968>
   141fc:	mov	r0, r8
   14200:	add	r4, pc, r4
   14204:	bl	11244 <close@plt>
   14208:	b	14160 <close_stdout@@Base+0x2858>
   1420c:	bl	11034 <__stack_chk_fail@plt>
   14210:	mov	r0, r4
   14214:	ldr	r4, [pc, #88]	; 14274 <close_stdout@@Base+0x296c>
   14218:	bl	10fe0 <free@plt>
   1421c:	mov	r0, fp
   14220:	add	r4, pc, r4
   14224:	bl	14278 <close_stdout@@Base+0x2970>
   14228:	b	14160 <close_stdout@@Base+0x2858>
   1422c:	mov	r0, fp
   14230:	bl	111c0 <__uflow@plt>
   14234:	b	14134 <close_stdout@@Base+0x282c>
   14238:	muleq	r1, r4, r1
   1423c:	strdeq	r0, [r0], -ip
   14240:	andeq	r2, r1, r0, lsr r4
   14244:	andeq	r0, r0, ip, asr lr
   14248:			; <UNDEFINED> instruction: 0x000009b8
   1424c:	andeq	r0, r0, r4, lsr lr
   14250:	ldrdeq	r0, [r0], -ip
   14254:			; <UNDEFINED> instruction: 0x00000db8
   14258:	muleq	r0, ip, sp
   1425c:	andeq	r2, r1, r0, asr r1
   14260:	andeq	r0, r0, r4, ror #23
   14264:	andeq	r0, r0, r0, asr r7
   14268:	andeq	r0, r0, r8, lsl r7
   1426c:	andeq	r0, r0, r8, ror fp
   14270:	strdeq	r0, [r0], -r4
   14274:	ldrdeq	r0, [r0], -r4
   14278:	push	{r4, r5, r6, lr}
   1427c:	sub	sp, sp, #8
   14280:	mov	r4, r0
   14284:	bl	11190 <fileno@plt>
   14288:	cmp	r0, #0
   1428c:	mov	r0, r4
   14290:	blt	1430c <close_stdout@@Base+0x2a04>
   14294:	bl	110e8 <__freading@plt>
   14298:	cmp	r0, #0
   1429c:	bne	142d8 <close_stdout@@Base+0x29d0>
   142a0:	mov	r0, r4
   142a4:	bl	14318 <close_stdout@@Base+0x2a10>
   142a8:	cmp	r0, #0
   142ac:	beq	14308 <close_stdout@@Base+0x2a00>
   142b0:	bl	11148 <__errno_location@plt>
   142b4:	ldr	r6, [r0]
   142b8:	mov	r5, r0
   142bc:	mov	r0, r4
   142c0:	bl	111a8 <fclose@plt>
   142c4:	cmp	r6, #0
   142c8:	mvnne	r0, #0
   142cc:	strne	r6, [r5]
   142d0:	add	sp, sp, #8
   142d4:	pop	{r4, r5, r6, pc}
   142d8:	mov	r0, r4
   142dc:	bl	11190 <fileno@plt>
   142e0:	mov	r1, #1
   142e4:	mov	r2, #0
   142e8:	mov	r3, #0
   142ec:	str	r1, [sp]
   142f0:	bl	11070 <lseek64@plt>
   142f4:	mvn	r2, #0
   142f8:	mvn	r3, #0
   142fc:	cmp	r1, r3
   14300:	cmpeq	r0, r2
   14304:	bne	142a0 <close_stdout@@Base+0x2998>
   14308:	mov	r0, r4
   1430c:	add	sp, sp, #8
   14310:	pop	{r4, r5, r6, lr}
   14314:	b	111a8 <fclose@plt>
   14318:	push	{r4, lr}
   1431c:	subs	r4, r0, #0
   14320:	sub	sp, sp, #8
   14324:	beq	14334 <close_stdout@@Base+0x2a2c>
   14328:	bl	110e8 <__freading@plt>
   1432c:	cmp	r0, #0
   14330:	bne	14344 <close_stdout@@Base+0x2a3c>
   14334:	mov	r0, r4
   14338:	add	sp, sp, #8
   1433c:	pop	{r4, lr}
   14340:	b	10fc8 <fflush@plt>
   14344:	ldr	r3, [r4]
   14348:	tst	r3, #256	; 0x100
   1434c:	beq	14334 <close_stdout@@Base+0x2a2c>
   14350:	mov	r3, #1
   14354:	mov	r0, r4
   14358:	str	r3, [sp]
   1435c:	mov	r2, #0
   14360:	mov	r3, #0
   14364:	bl	14378 <close_stdout@@Base+0x2a70>
   14368:	mov	r0, r4
   1436c:	add	sp, sp, #8
   14370:	pop	{r4, lr}
   14374:	b	10fc8 <fflush@plt>
   14378:	push	{r4, r5, r6, r7, lr}
   1437c:	sub	sp, sp, #20
   14380:	ldmib	r0, {r1, ip}
   14384:	mov	r6, r0
   14388:	ldr	r4, [sp, #40]	; 0x28
   1438c:	cmp	ip, r1
   14390:	beq	143a8 <close_stdout@@Base+0x2aa0>
   14394:	str	r4, [sp, #40]	; 0x28
   14398:	mov	r0, r6
   1439c:	add	sp, sp, #20
   143a0:	pop	{r4, r5, r6, r7, lr}
   143a4:	b	111b4 <fseeko64@plt>
   143a8:	ldr	ip, [r0, #20]
   143ac:	ldr	r1, [r0, #16]
   143b0:	cmp	ip, r1
   143b4:	bne	14394 <close_stdout@@Base+0x2a8c>
   143b8:	ldr	r7, [r0, #36]	; 0x24
   143bc:	cmp	r7, #0
   143c0:	bne	14394 <close_stdout@@Base+0x2a8c>
   143c4:	str	r2, [sp, #12]
   143c8:	mvn	r5, #0
   143cc:	str	r3, [sp, #8]
   143d0:	bl	11190 <fileno@plt>
   143d4:	str	r4, [sp]
   143d8:	mvn	r4, #0
   143dc:	ldr	r2, [sp, #12]
   143e0:	ldr	r3, [sp, #8]
   143e4:	bl	11070 <lseek64@plt>
   143e8:	mov	r2, r0
   143ec:	mov	r3, r1
   143f0:	cmp	r3, r5
   143f4:	cmpeq	r2, r4
   143f8:	beq	14418 <close_stdout@@Base+0x2b10>
   143fc:	ldr	r1, [r6]
   14400:	mov	r0, r7
   14404:	strd	r2, [r6, #80]	; 0x50
   14408:	bic	r3, r1, #16
   1440c:	str	r3, [r6]
   14410:	add	sp, sp, #20
   14414:	pop	{r4, r5, r6, r7, pc}
   14418:	mvn	r0, #0
   1441c:	b	14410 <close_stdout@@Base+0x2b08>
   14420:	subs	r2, r1, #1
   14424:	bxeq	lr
   14428:	bcc	14600 <close_stdout@@Base+0x2cf8>
   1442c:	cmp	r0, r1
   14430:	bls	145e4 <close_stdout@@Base+0x2cdc>
   14434:	tst	r1, r2
   14438:	beq	145f0 <close_stdout@@Base+0x2ce8>
   1443c:	clz	r3, r0
   14440:	clz	r2, r1
   14444:	sub	r3, r2, r3
   14448:	rsbs	r3, r3, #31
   1444c:	addne	r3, r3, r3, lsl #1
   14450:	mov	r2, #0
   14454:	addne	pc, pc, r3, lsl #2
   14458:	nop	{0}
   1445c:	cmp	r0, r1, lsl #31
   14460:	adc	r2, r2, r2
   14464:	subcs	r0, r0, r1, lsl #31
   14468:	cmp	r0, r1, lsl #30
   1446c:	adc	r2, r2, r2
   14470:	subcs	r0, r0, r1, lsl #30
   14474:	cmp	r0, r1, lsl #29
   14478:	adc	r2, r2, r2
   1447c:	subcs	r0, r0, r1, lsl #29
   14480:	cmp	r0, r1, lsl #28
   14484:	adc	r2, r2, r2
   14488:	subcs	r0, r0, r1, lsl #28
   1448c:	cmp	r0, r1, lsl #27
   14490:	adc	r2, r2, r2
   14494:	subcs	r0, r0, r1, lsl #27
   14498:	cmp	r0, r1, lsl #26
   1449c:	adc	r2, r2, r2
   144a0:	subcs	r0, r0, r1, lsl #26
   144a4:	cmp	r0, r1, lsl #25
   144a8:	adc	r2, r2, r2
   144ac:	subcs	r0, r0, r1, lsl #25
   144b0:	cmp	r0, r1, lsl #24
   144b4:	adc	r2, r2, r2
   144b8:	subcs	r0, r0, r1, lsl #24
   144bc:	cmp	r0, r1, lsl #23
   144c0:	adc	r2, r2, r2
   144c4:	subcs	r0, r0, r1, lsl #23
   144c8:	cmp	r0, r1, lsl #22
   144cc:	adc	r2, r2, r2
   144d0:	subcs	r0, r0, r1, lsl #22
   144d4:	cmp	r0, r1, lsl #21
   144d8:	adc	r2, r2, r2
   144dc:	subcs	r0, r0, r1, lsl #21
   144e0:	cmp	r0, r1, lsl #20
   144e4:	adc	r2, r2, r2
   144e8:	subcs	r0, r0, r1, lsl #20
   144ec:	cmp	r0, r1, lsl #19
   144f0:	adc	r2, r2, r2
   144f4:	subcs	r0, r0, r1, lsl #19
   144f8:	cmp	r0, r1, lsl #18
   144fc:	adc	r2, r2, r2
   14500:	subcs	r0, r0, r1, lsl #18
   14504:	cmp	r0, r1, lsl #17
   14508:	adc	r2, r2, r2
   1450c:	subcs	r0, r0, r1, lsl #17
   14510:	cmp	r0, r1, lsl #16
   14514:	adc	r2, r2, r2
   14518:	subcs	r0, r0, r1, lsl #16
   1451c:	cmp	r0, r1, lsl #15
   14520:	adc	r2, r2, r2
   14524:	subcs	r0, r0, r1, lsl #15
   14528:	cmp	r0, r1, lsl #14
   1452c:	adc	r2, r2, r2
   14530:	subcs	r0, r0, r1, lsl #14
   14534:	cmp	r0, r1, lsl #13
   14538:	adc	r2, r2, r2
   1453c:	subcs	r0, r0, r1, lsl #13
   14540:	cmp	r0, r1, lsl #12
   14544:	adc	r2, r2, r2
   14548:	subcs	r0, r0, r1, lsl #12
   1454c:	cmp	r0, r1, lsl #11
   14550:	adc	r2, r2, r2
   14554:	subcs	r0, r0, r1, lsl #11
   14558:	cmp	r0, r1, lsl #10
   1455c:	adc	r2, r2, r2
   14560:	subcs	r0, r0, r1, lsl #10
   14564:	cmp	r0, r1, lsl #9
   14568:	adc	r2, r2, r2
   1456c:	subcs	r0, r0, r1, lsl #9
   14570:	cmp	r0, r1, lsl #8
   14574:	adc	r2, r2, r2
   14578:	subcs	r0, r0, r1, lsl #8
   1457c:	cmp	r0, r1, lsl #7
   14580:	adc	r2, r2, r2
   14584:	subcs	r0, r0, r1, lsl #7
   14588:	cmp	r0, r1, lsl #6
   1458c:	adc	r2, r2, r2
   14590:	subcs	r0, r0, r1, lsl #6
   14594:	cmp	r0, r1, lsl #5
   14598:	adc	r2, r2, r2
   1459c:	subcs	r0, r0, r1, lsl #5
   145a0:	cmp	r0, r1, lsl #4
   145a4:	adc	r2, r2, r2
   145a8:	subcs	r0, r0, r1, lsl #4
   145ac:	cmp	r0, r1, lsl #3
   145b0:	adc	r2, r2, r2
   145b4:	subcs	r0, r0, r1, lsl #3
   145b8:	cmp	r0, r1, lsl #2
   145bc:	adc	r2, r2, r2
   145c0:	subcs	r0, r0, r1, lsl #2
   145c4:	cmp	r0, r1, lsl #1
   145c8:	adc	r2, r2, r2
   145cc:	subcs	r0, r0, r1, lsl #1
   145d0:	cmp	r0, r1
   145d4:	adc	r2, r2, r2
   145d8:	subcs	r0, r0, r1
   145dc:	mov	r0, r2
   145e0:	bx	lr
   145e4:	moveq	r0, #1
   145e8:	movne	r0, #0
   145ec:	bx	lr
   145f0:	clz	r2, r1
   145f4:	rsb	r2, r2, #31
   145f8:	lsr	r0, r0, r2
   145fc:	bx	lr
   14600:	cmp	r0, #0
   14604:	mvnne	r0, #0
   14608:	b	1462c <close_stdout@@Base+0x2d24>
   1460c:	cmp	r1, #0
   14610:	beq	14600 <close_stdout@@Base+0x2cf8>
   14614:	push	{r0, r1, lr}
   14618:	bl	14420 <close_stdout@@Base+0x2b18>
   1461c:	pop	{r1, r2, lr}
   14620:	mul	r3, r2, r0
   14624:	sub	r1, r1, r3
   14628:	bx	lr
   1462c:	push	{r1, lr}
   14630:	mov	r0, #8
   14634:	bl	10fb0 <raise@plt>
   14638:	pop	{r1, pc}
   1463c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14640:	mov	r7, r0
   14644:	ldr	r6, [pc, #76]	; 14698 <close_stdout@@Base+0x2d90>
   14648:	mov	r8, r1
   1464c:	ldr	r5, [pc, #72]	; 1469c <close_stdout@@Base+0x2d94>
   14650:	mov	r9, r2
   14654:	add	r6, pc, r6
   14658:	bl	10f6c <fdopen@plt-0x20>
   1465c:	add	r5, pc, r5
   14660:	rsb	r6, r5, r6
   14664:	asrs	r6, r6, #2
   14668:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1466c:	sub	r5, r5, #4
   14670:	mov	r4, #0
   14674:	add	r4, r4, #1
   14678:	ldr	r3, [r5, #4]!
   1467c:	mov	r0, r7
   14680:	mov	r1, r8
   14684:	mov	r2, r9
   14688:	blx	r3
   1468c:	cmp	r4, r6
   14690:	bne	14674 <close_stdout@@Base+0x2d6c>
   14694:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14698:	andeq	r1, r1, r0, asr r8
   1469c:	andeq	r1, r1, r4, asr #16
   146a0:	bx	lr
   146a4:	ldr	r3, [pc, #28]	; 146c8 <close_stdout@@Base+0x2dc0>
   146a8:	mov	r1, #0
   146ac:	ldr	r2, [pc, #24]	; 146cc <close_stdout@@Base+0x2dc4>
   146b0:	add	r3, pc, r3
   146b4:	ldr	r3, [r3, r2]
   146b8:	cmp	r3, #0
   146bc:	ldrne	r2, [r3]
   146c0:	moveq	r2, r3
   146c4:	b	11154 <__cxa_atexit@plt>
   146c8:	andeq	r1, r1, r8, asr #18
   146cc:	andeq	r0, r0, r4, lsl r1

Disassembly of section .fini:

000146d0 <.fini>:
   146d0:	push	{r3, lr}
   146d4:	pop	{r3, pc}
