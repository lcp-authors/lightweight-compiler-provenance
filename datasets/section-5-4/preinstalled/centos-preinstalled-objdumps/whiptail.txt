
centos-preinstalled/whiptail:     file format elf32-littlearm


Disassembly of section .init:

00009414 <_init@@Base>:
    9414:	push	{r3, lr}
    9418:	bl	a5f4 <fputs@plt+0xde8>
    941c:	pop	{r3, pc}

Disassembly of section .plt:

00009420 <newtFormDestroy@plt-0x14>:
    9420:	push	{lr}		; (str lr, [sp, #-4]!)
    9424:	ldr	lr, [pc, #4]	; 9430 <_init@@Base+0x1c>
    9428:	add	lr, pc, lr
    942c:	ldr	pc, [lr, #8]!
    9430:	ldrdeq	fp, [r0], -r0

00009434 <newtFormDestroy@plt>:
    9434:	add	ip, pc, #0, 12
    9438:	add	ip, ip, #45056	; 0xb000
    943c:	ldr	pc, [ip, #3024]!	; 0xbd0

00009440 <newtTextbox@plt>:
    9440:	add	ip, pc, #0, 12
    9444:	add	ip, ip, #45056	; 0xb000
    9448:	ldr	pc, [ip, #3016]!	; 0xbc8

0000944c <newtFormAddComponent@plt>:
    944c:	add	ip, pc, #0, 12
    9450:	add	ip, ip, #45056	; 0xb000
    9454:	ldr	pc, [ip, #3008]!	; 0xbc0

00009458 <newtScaleSet@plt>:
    9458:	add	ip, pc, #0, 12
    945c:	add	ip, ip, #45056	; 0xb000
    9460:	ldr	pc, [ip, #3000]!	; 0xbb8

00009464 <newtDrawForm@plt>:
    9464:	add	ip, pc, #0, 12
    9468:	add	ip, ip, #45056	; 0xb000
    946c:	ldr	pc, [ip, #2992]!	; 0xbb0

00009470 <abort@plt>:
    9470:	add	ip, pc, #0, 12
    9474:	add	ip, ip, #45056	; 0xb000
    9478:	ldr	pc, [ip, #2984]!	; 0xba8

0000947c <__libc_start_main@plt>:
    947c:	add	ip, pc, #0, 12
    9480:	add	ip, ip, #45056	; 0xb000
    9484:	ldr	pc, [ip, #2976]!	; 0xba0

00009488 <newtCheckbox@plt>:
    9488:	add	ip, pc, #0, 12
    948c:	add	ip, ip, #45056	; 0xb000
    9490:	ldr	pc, [ip, #2968]!	; 0xb98

00009494 <setlinebuf@plt>:
    9494:	add	ip, pc, #0, 12
    9498:	add	ip, ip, #45056	; 0xb000
    949c:	ldr	pc, [ip, #2960]!	; 0xb90

000094a0 <newtTextboxGetNumLines@plt>:
    94a0:	add	ip, pc, #0, 12
    94a4:	add	ip, ip, #45056	; 0xb000
    94a8:	ldr	pc, [ip, #2952]!	; 0xb88

000094ac <newtDrawRootText@plt>:
    94ac:	add	ip, pc, #0, 12
    94b0:	add	ip, ip, #45056	; 0xb000
    94b4:	ldr	pc, [ip, #2944]!	; 0xb80

000094b8 <newtListbox@plt>:
    94b8:	add	ip, pc, #0, 12
    94bc:	add	ip, ip, #45056	; 0xb000
    94c0:	ldr	pc, [ip, #2936]!	; 0xb78

000094c4 <__gmon_start__@plt>:
    94c4:	add	ip, pc, #0, 12
    94c8:	add	ip, ip, #45056	; 0xb000
    94cc:	ldr	pc, [ip, #2928]!	; 0xb70

000094d0 <newtCompactButton@plt>:
    94d0:	add	ip, pc, #0, 12
    94d4:	add	ip, ip, #45056	; 0xb000
    94d8:	ldr	pc, [ip, #2920]!	; 0xb68

000094dc <newtFormAddComponents@plt>:
    94dc:	add	ip, pc, #0, 12
    94e0:	add	ip, ip, #45056	; 0xb000
    94e4:	ldr	pc, [ip, #2912]!	; 0xb60

000094e8 <newtListboxGetCurrent@plt>:
    94e8:	add	ip, pc, #0, 12
    94ec:	add	ip, ip, #45056	; 0xb000
    94f0:	ldr	pc, [ip, #2904]!	; 0xb58

000094f4 <__ctype_get_mb_cur_max@plt>:
    94f4:	add	ip, pc, #0, 12
    94f8:	add	ip, ip, #45056	; 0xb000
    94fc:	ldr	pc, [ip, #2896]!	; 0xb50

00009500 <fgets@plt>:
    9500:	add	ip, pc, #0, 12
    9504:	add	ip, ip, #45056	; 0xb000
    9508:	ldr	pc, [ip, #2888]!	; 0xb48

0000950c <newtFormSetWidth@plt>:
    950c:	add	ip, pc, #0, 12
    9510:	add	ip, ip, #45056	; 0xb000
    9514:	ldr	pc, [ip, #2880]!	; 0xb40

00009518 <strcasecmp@plt>:
    9518:	add	ip, pc, #0, 12
    951c:	add	ip, ip, #45056	; 0xb000
    9520:	ldr	pc, [ip, #2872]!	; 0xb38

00009524 <poptGetArgs@plt>:
    9524:	add	ip, pc, #0, 12
    9528:	add	ip, ip, #45056	; 0xb000
    952c:	ldr	pc, [ip, #2864]!	; 0xb30

00009530 <poptStrerror@plt>:
    9530:	add	ip, pc, #0, 12
    9534:	add	ip, ip, #45056	; 0xb000
    9538:	ldr	pc, [ip, #2856]!	; 0xb28

0000953c <newtButton@plt>:
    953c:	add	ip, pc, #0, 12
    9540:	add	ip, ip, #45056	; 0xb000
    9544:	ldr	pc, [ip, #2848]!	; 0xb20

00009548 <memset@plt>:
    9548:	add	ip, pc, #0, 12
    954c:	add	ip, ip, #45056	; 0xb000
    9550:	ldr	pc, [ip, #2840]!	; 0xb18

00009554 <newtScale@plt>:
    9554:	add	ip, pc, #0, 12
    9558:	add	ip, ip, #45056	; 0xb000
    955c:	ldr	pc, [ip, #2832]!	; 0xb10

00009560 <bindtextdomain@plt>:
    9560:	add	ip, pc, #0, 12
    9564:	add	ip, ip, #45056	; 0xb000
    9568:	ldr	pc, [ip, #2824]!	; 0xb08

0000956c <perror@plt>:
    956c:	add	ip, pc, #0, 12
    9570:	add	ip, ip, #45056	; 0xb000
    9574:	ldr	pc, [ip, #2816]!	; 0xb00

00009578 <newtFormGetCurrent@plt>:
    9578:	add	ip, pc, #0, 12
    957c:	add	ip, ip, #45056	; 0xb000
    9580:	ldr	pc, [ip, #2808]!	; 0xaf8

00009584 <mbrtowc@plt>:
    9584:	add	ip, pc, #0, 12
    9588:	add	ip, ip, #45056	; 0xb000
    958c:	ldr	pc, [ip, #2800]!	; 0xaf0

00009590 <__fxstat64@plt>:
    9590:	add	ip, pc, #0, 12
    9594:	add	ip, ip, #45056	; 0xb000
    9598:	ldr	pc, [ip, #2792]!	; 0xae8

0000959c <poptFreeContext@plt>:
    959c:	add	ip, pc, #0, 12
    95a0:	add	ip, ip, #45056	; 0xb000
    95a4:	ldr	pc, [ip, #2784]!	; 0xae0

000095a8 <free@plt>:
    95a8:	add	ip, pc, #0, 12
    95ac:	add	ip, ip, #45056	; 0xb000
    95b0:	ldr	pc, [ip, #2776]!	; 0xad8

000095b4 <read@plt>:
    95b4:	add	ip, pc, #0, 12
    95b8:	add	ip, ip, #45056	; 0xb000
    95bc:	ldr	pc, [ip, #2768]!	; 0xad0

000095c0 <dcgettext@plt>:
    95c0:	add	ip, pc, #0, 12
    95c4:	add	ip, ip, #45056	; 0xb000
    95c8:	ldr	pc, [ip, #2760]!	; 0xac8

000095cc <newtFormSetCurrent@plt>:
    95cc:	add	ip, pc, #0, 12
    95d0:	add	ip, ip, #45056	; 0xb000
    95d4:	ldr	pc, [ip, #2752]!	; 0xac0

000095d8 <newtTextboxSetHeight@plt>:
    95d8:	add	ip, pc, #0, 12
    95dc:	add	ip, ip, #45056	; 0xb000
    95e0:	ldr	pc, [ip, #2744]!	; 0xab8

000095e4 <newtRadiobutton@plt>:
    95e4:	add	ip, pc, #0, 12
    95e8:	add	ip, ip, #45056	; 0xb000
    95ec:	ldr	pc, [ip, #2736]!	; 0xab0

000095f0 <newtTextboxSetText@plt>:
    95f0:	add	ip, pc, #0, 12
    95f4:	add	ip, ip, #45056	; 0xb000
    95f8:	ldr	pc, [ip, #2728]!	; 0xaa8

000095fc <newtEntry@plt>:
    95fc:	add	ip, pc, #0, 12
    9600:	add	ip, ip, #45056	; 0xb000
    9604:	ldr	pc, [ip, #2720]!	; 0xaa0

00009608 <strlen@plt>:
    9608:	add	ip, pc, #0, 12
    960c:	add	ip, ip, #45056	; 0xb000
    9610:	ldr	pc, [ip, #2712]!	; 0xa98

00009614 <newtForm@plt>:
    9614:	add	ip, pc, #0, 12
    9618:	add	ip, ip, #45056	; 0xb000
    961c:	ldr	pc, [ip, #2704]!	; 0xa90

00009620 <strtoul@plt>:
    9620:	add	ip, pc, #0, 12
    9624:	add	ip, ip, #45056	; 0xb000
    9628:	ldr	pc, [ip, #2696]!	; 0xa88

0000962c <memcpy@plt>:
    962c:	add	ip, pc, #0, 12
    9630:	add	ip, ip, #45056	; 0xb000
    9634:	ldr	pc, [ip, #2688]!	; 0xa80

00009638 <newtCheckboxSetFlags@plt>:
    9638:	add	ip, pc, #0, 12
    963c:	add	ip, ip, #45056	; 0xb000
    9640:	ldr	pc, [ip, #2680]!	; 0xa78

00009644 <setlocale@plt>:
    9644:	add	ip, pc, #0, 12
    9648:	add	ip, ip, #45056	; 0xb000
    964c:	ldr	pc, [ip, #2672]!	; 0xa70

00009650 <feof@plt>:
    9650:	add	ip, pc, #0, 12
    9654:	add	ip, ip, #45056	; 0xb000
    9658:	ldr	pc, [ip, #2664]!	; 0xa68

0000965c <open64@plt>:
    965c:	add	ip, pc, #0, 12
    9660:	add	ip, ip, #45056	; 0xb000
    9664:	ldr	pc, [ip, #2656]!	; 0xa60

00009668 <raise@plt>:
    9668:	add	ip, pc, #0, 12
    966c:	add	ip, ip, #45056	; 0xb000
    9670:	ldr	pc, [ip, #2648]!	; 0xa58

00009674 <newtRefresh@plt>:
    9674:	add	ip, pc, #0, 12
    9678:	add	ip, ip, #45056	; 0xb000
    967c:	ldr	pc, [ip, #2640]!	; 0xa50

00009680 <newtCls@plt>:
    9680:	add	ip, pc, #0, 12
    9684:	add	ip, ip, #45056	; 0xb000
    9688:	ldr	pc, [ip, #2632]!	; 0xa48

0000968c <__snprintf_chk@plt>:
    968c:	add	ip, pc, #0, 12
    9690:	add	ip, ip, #45056	; 0xb000
    9694:	ldr	pc, [ip, #2624]!	; 0xa40

00009698 <fdopen@plt>:
    9698:	add	ip, pc, #0, 12
    969c:	add	ip, ip, #45056	; 0xb000
    96a0:	ldr	pc, [ip, #2616]!	; 0xa38

000096a4 <newtFinished@plt>:
    96a4:	add	ip, pc, #0, 12
    96a8:	add	ip, ip, #45056	; 0xb000
    96ac:	ldr	pc, [ip, #2608]!	; 0xa30

000096b0 <newtFormSetHeight@plt>:
    96b0:	add	ip, pc, #0, 12
    96b4:	add	ip, ip, #45056	; 0xb000
    96b8:	ldr	pc, [ip, #2600]!	; 0xa28

000096bc <close@plt>:
    96bc:	add	ip, pc, #0, 12
    96c0:	add	ip, ip, #45056	; 0xb000
    96c4:	ldr	pc, [ip, #2592]!	; 0xa20

000096c8 <malloc@plt>:
    96c8:	add	ip, pc, #0, 12
    96cc:	add	ip, ip, #45056	; 0xb000
    96d0:	ldr	pc, [ip, #2584]!	; 0xa18

000096d4 <__stack_chk_fail@plt>:
    96d4:	add	ip, pc, #0, 12
    96d8:	add	ip, ip, #45056	; 0xb000
    96dc:	ldr	pc, [ip, #2576]!	; 0xa10

000096e0 <__fprintf_chk@plt>:
    96e0:	add	ip, pc, #0, 12
    96e4:	add	ip, ip, #45056	; 0xb000
    96e8:	ldr	pc, [ip, #2568]!	; 0xa08

000096ec <poptGetArg@plt>:
    96ec:	add	ip, pc, #0, 12
    96f0:	add	ip, ip, #45056	; 0xb000
    96f4:	ldr	pc, [ip, #2560]!	; 0xa00

000096f8 <_newt_wstrlen@plt>:
    96f8:	add	ip, pc, #0, 12
    96fc:	add	ip, ip, #45056	; 0xb000
    9700:	ldr	pc, [ip, #2552]!	; 0x9f8

00009704 <poptGetNextOpt@plt>:
    9704:	add	ip, pc, #0, 12
    9708:	add	ip, ip, #45056	; 0xb000
    970c:	ldr	pc, [ip, #2544]!	; 0x9f0

00009710 <textdomain@plt>:
    9710:	add	ip, pc, #0, 12
    9714:	add	ip, ip, #45056	; 0xb000
    9718:	ldr	pc, [ip, #2536]!	; 0x9e8

0000971c <dup@plt>:
    971c:	add	ip, pc, #0, 12
    9720:	add	ip, ip, #45056	; 0xb000
    9724:	ldr	pc, [ip, #2528]!	; 0x9e0

00009728 <newtFormSetBackground@plt>:
    9728:	add	ip, pc, #0, 12
    972c:	add	ip, ip, #45056	; 0xb000
    9730:	ldr	pc, [ip, #2520]!	; 0x9d8

00009734 <newtRadioGetCurrent@plt>:
    9734:	add	ip, pc, #0, 12
    9738:	add	ip, ip, #45056	; 0xb000
    973c:	ldr	pc, [ip, #2512]!	; 0x9d0

00009740 <snprintf@plt>:
    9740:	add	ip, pc, #0, 12
    9744:	add	ip, ip, #45056	; 0xb000
    9748:	ldr	pc, [ip, #2504]!	; 0x9c8

0000974c <__sprintf_chk@plt>:
    974c:	add	ip, pc, #0, 12
    9750:	add	ip, ip, #45056	; 0xb000
    9754:	ldr	pc, [ip, #2496]!	; 0x9c0

00009758 <wcwidth@plt>:
    9758:	add	ip, pc, #0, 12
    975c:	add	ip, ip, #45056	; 0xb000
    9760:	ldr	pc, [ip, #2488]!	; 0x9b8

00009764 <realloc@plt>:
    9764:	add	ip, pc, #0, 12
    9768:	add	ip, ip, #45056	; 0xb000
    976c:	ldr	pc, [ip, #2480]!	; 0x9b0

00009770 <_IO_putc@plt>:
    9770:	add	ip, pc, #0, 12
    9774:	add	ip, ip, #45056	; 0xb000
    9778:	ldr	pc, [ip, #2472]!	; 0x9a8

0000977c <poptBadOption@plt>:
    977c:	add	ip, pc, #0, 12
    9780:	add	ip, ip, #45056	; 0xb000
    9784:	ldr	pc, [ip, #2464]!	; 0x9a0

00009788 <__strdup@plt>:
    9788:	add	ip, pc, #0, 12
    978c:	add	ip, ip, #45056	; 0xb000
    9790:	ldr	pc, [ip, #2456]!	; 0x998

00009794 <newtListboxSetCurrent@plt>:
    9794:	add	ip, pc, #0, 12
    9798:	add	ip, ip, #45056	; 0xb000
    979c:	ldr	pc, [ip, #2448]!	; 0x990

000097a0 <newtOpenWindow@plt>:
    97a0:	add	ip, pc, #0, 12
    97a4:	add	ip, ip, #45056	; 0xb000
    97a8:	ldr	pc, [ip, #2440]!	; 0x988

000097ac <poptGetContext@plt>:
    97ac:	add	ip, pc, #0, 12
    97b0:	add	ip, ip, #45056	; 0xb000
    97b4:	ldr	pc, [ip, #2432]!	; 0x980

000097b8 <strcmp@plt>:
    97b8:	add	ip, pc, #0, 12
    97bc:	add	ip, ip, #45056	; 0xb000
    97c0:	ldr	pc, [ip, #2424]!	; 0x978

000097c4 <newtRunForm@plt>:
    97c4:	add	ip, pc, #0, 12
    97c8:	add	ip, ip, #45056	; 0xb000
    97cc:	ldr	pc, [ip, #2416]!	; 0x970

000097d0 <newtInit@plt>:
    97d0:	add	ip, pc, #0, 12
    97d4:	add	ip, ip, #45056	; 0xb000
    97d8:	ldr	pc, [ip, #2408]!	; 0x968

000097dc <exit@plt>:
    97dc:	add	ip, pc, #0, 12
    97e0:	add	ip, ip, #45056	; 0xb000
    97e4:	ldr	pc, [ip, #2400]!	; 0x960

000097e8 <newtVerticalScrollbar@plt>:
    97e8:	add	ip, pc, #0, 12
    97ec:	add	ip, ip, #45056	; 0xb000
    97f0:	ldr	pc, [ip, #2392]!	; 0x958

000097f4 <newtListboxAppendEntry@plt>:
    97f4:	add	ip, pc, #0, 12
    97f8:	add	ip, ip, #45056	; 0xb000
    97fc:	ldr	pc, [ip, #2384]!	; 0x950

00009800 <newtPopWindow@plt>:
    9800:	add	ip, pc, #0, 12
    9804:	add	ip, ip, #45056	; 0xb000
    9808:	ldr	pc, [ip, #2376]!	; 0x948

0000980c <fputs@plt>:
    980c:	add	ip, pc, #0, 12
    9810:	add	ip, ip, #45056	; 0xb000
    9814:	ldr	pc, [ip, #2368]!	; 0x940

Disassembly of section .text:

00009818 <.text>:
    9818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    981c:	movw	r7, #20848	; 0x5170
    9820:	movt	r7, #1
    9824:	sub	sp, sp, #1020	; 0x3fc
    9828:	mov	r5, #0
    982c:	mov	r9, r0
    9830:	ldr	r3, [r7]
    9834:	mov	r8, r1
    9838:	mov	r2, #868	; 0x364
    983c:	mov	r1, r5
    9840:	add	r0, sp, #144	; 0x90
    9844:	mov	sl, #2
    9848:	str	r3, [sp, #1012]	; 0x3f4
    984c:	movw	fp, #50956	; 0xc70c
    9850:	str	r5, [sp, #56]	; 0x38
    9854:	movt	fp, #0
    9858:	str	r5, [sp, #60]	; 0x3c
    985c:	mov	r6, r5
    9860:	str	r5, [sp, #64]	; 0x40
    9864:	mov	r4, r5
    9868:	str	r5, [sp, #68]	; 0x44
    986c:	str	r5, [sp, #72]	; 0x48
    9870:	str	r5, [sp, #76]	; 0x4c
    9874:	str	r5, [sp, #80]	; 0x50
    9878:	str	r5, [sp, #88]	; 0x58
    987c:	str	r5, [sp, #92]	; 0x5c
    9880:	str	r5, [sp, #96]	; 0x60
    9884:	str	r5, [sp, #100]	; 0x64
    9888:	str	r5, [sp, #104]	; 0x68
    988c:	str	r5, [sp, #108]	; 0x6c
    9890:	str	r5, [sp, #112]	; 0x70
    9894:	str	r5, [sp, #116]	; 0x74
    9898:	str	r5, [sp, #120]	; 0x78
    989c:	str	r5, [sp, #124]	; 0x7c
    98a0:	str	sl, [sp, #84]	; 0x54
    98a4:	bl	9548 <memset@plt>
    98a8:	movw	r1, #51280	; 0xc850
    98ac:	mov	r0, #6
    98b0:	movt	r1, #0
    98b4:	add	ip, sp, #100	; 0x64
    98b8:	movw	lr, #1007	; 0x3ef
    98bc:	str	ip, [sp, #156]	; 0x9c
    98c0:	str	lr, [sp, #356]	; 0x164
    98c4:	add	ip, sp, #68	; 0x44
    98c8:	mov	lr, #1000	; 0x3e8
    98cc:	str	ip, [sp, #212]	; 0xd4
    98d0:	str	lr, [sp, #440]	; 0x1b8
    98d4:	movw	ip, #1003	; 0x3eb
    98d8:	add	lr, sp, #96	; 0x60
    98dc:	str	ip, [sp, #272]	; 0x110
    98e0:	str	lr, [sp, #520]	; 0x208
    98e4:	mov	ip, #1008	; 0x3f0
    98e8:	movw	r2, #50796	; 0xc66c
    98ec:	str	ip, [sp, #384]	; 0x180
    98f0:	movt	r2, #0
    98f4:	add	ip, sp, #56	; 0x38
    98f8:	str	r2, [sp, #144]	; 0x90
    98fc:	movw	r3, #50808	; 0xc678
    9900:	str	ip, [sp, #464]	; 0x1d0
    9904:	movt	r3, #0
    9908:	add	ip, sp, #60	; 0x3c
    990c:	str	r3, [sp, #172]	; 0xac
    9910:	str	ip, [sp, #548]	; 0x224
    9914:	movw	r2, #50820	; 0xc684
    9918:	movw	r3, #50828	; 0xc68c
    991c:	movt	r2, #0
    9920:	movt	r3, #0
    9924:	str	r2, [sp, #200]	; 0xc8
    9928:	str	r3, [sp, #228]	; 0xe4
    992c:	movw	r2, #50840	; 0xc698
    9930:	movw	r3, #50852	; 0xc6a4
    9934:	movt	r2, #0
    9938:	movt	r3, #0
    993c:	str	r2, [sp, #256]	; 0x100
    9940:	str	r3, [sp, #284]	; 0x11c
    9944:	movw	r2, #50856	; 0xc6a8
    9948:	movw	r3, #50868	; 0xc6b4
    994c:	movt	r2, #0
    9950:	movt	r3, #0
    9954:	str	r2, [sp, #312]	; 0x138
    9958:	str	r3, [sp, #340]	; 0x154
    995c:	movw	r2, #50876	; 0xc6bc
    9960:	movw	r3, #50884	; 0xc6c4
    9964:	movt	r2, #0
    9968:	movt	r3, #0
    996c:	str	r2, [sp, #368]	; 0x170
    9970:	str	r3, [sp, #396]	; 0x18c
    9974:	movw	r2, #50892	; 0xc6cc
    9978:	movw	r3, #50900	; 0xc6d4
    997c:	movt	r2, #0
    9980:	movt	r3, #0
    9984:	str	r2, [sp, #424]	; 0x1a8
    9988:	str	r3, [sp, #452]	; 0x1c4
    998c:	movw	r2, #50912	; 0xc6e0
    9990:	movw	r3, #50920	; 0xc6e8
    9994:	movt	r2, #0
    9998:	movt	r3, #0
    999c:	str	r2, [sp, #480]	; 0x1e0
    99a0:	str	r3, [sp, #508]	; 0x1fc
    99a4:	movw	r2, #50936	; 0xc6f8
    99a8:	movw	r3, #50944	; 0xc700
    99ac:	movt	r2, #0
    99b0:	movt	r3, #0
    99b4:	str	r2, [sp, #536]	; 0x218
    99b8:	str	r3, [sp, #564]	; 0x234
    99bc:	movw	r2, #1001	; 0x3e9
    99c0:	mov	r3, #1
    99c4:	str	r2, [sp, #188]	; 0xbc
    99c8:	str	r3, [sp, #152]	; 0x98
    99cc:	add	r2, sp, #76	; 0x4c
    99d0:	str	r3, [sp, #516]	; 0x204
    99d4:	movw	lr, #50984	; 0xc728
    99d8:	str	r2, [sp, #240]	; 0xf0
    99dc:	movt	lr, #0
    99e0:	mov	r2, #1004	; 0x3ec
    99e4:	movw	ip, #50992	; 0xc730
    99e8:	str	r2, [sp, #300]	; 0x12c
    99ec:	movt	ip, #0
    99f0:	str	r2, [sp, #328]	; 0x148
    99f4:	add	r2, r2, r3
    99f8:	str	r2, [sp, #412]	; 0x19c
    99fc:	add	r2, sp, #64	; 0x40
    9a00:	str	r2, [sp, #492]	; 0x1ec
    9a04:	movw	r2, #1006	; 0x3ee
    9a08:	str	r2, [sp, #580]	; 0x244
    9a0c:	movw	r2, #50968	; 0xc718
    9a10:	str	lr, [sp, #676]	; 0x2a4
    9a14:	movt	r2, #0
    9a18:	str	sl, [sp, #796]	; 0x31c
    9a1c:	movw	sl, #50800	; 0xc670
    9a20:	str	r3, [sp, #656]	; 0x290
    9a24:	movt	sl, #0
    9a28:	str	r3, [sp, #824]	; 0x338
    9a2c:	str	r3, [sp, #852]	; 0x354
    9a30:	str	r3, [sp, #880]	; 0x370
    9a34:	str	r3, [sp, #908]	; 0x38c
    9a38:	movw	r3, #51008	; 0xc740
    9a3c:	str	r2, [sp, #620]	; 0x26c
    9a40:	movt	r3, #0
    9a44:	str	ip, [sp, #704]	; 0x2c0
    9a48:	movw	r2, #51000	; 0xc738
    9a4c:	str	r3, [sp, #760]	; 0x2f8
    9a50:	movt	r2, #0
    9a54:	str	fp, [sp, #592]	; 0x250
    9a58:	movw	r3, #51032	; 0xc758
    9a5c:	str	r2, [sp, #732]	; 0x2dc
    9a60:	movt	r3, #0
    9a64:	str	sl, [sp, #648]	; 0x288
    9a68:	movw	r2, #51020	; 0xc74c
    9a6c:	str	r3, [sp, #816]	; 0x330
    9a70:	movt	r2, #0
    9a74:	movw	r3, #51056	; 0xc770
    9a78:	str	r2, [sp, #788]	; 0x314
    9a7c:	movt	r3, #0
    9a80:	movw	r2, #51044	; 0xc764
    9a84:	str	r3, [sp, #872]	; 0x368
    9a88:	movt	r2, #0
    9a8c:	movw	ip, #51068	; 0xc77c
    9a90:	str	r2, [sp, #844]	; 0x34c
    9a94:	movt	ip, #0
    9a98:	add	r2, sp, #80	; 0x50
    9a9c:	str	ip, [sp, #900]	; 0x384
    9aa0:	movw	r3, #51084	; 0xc78c
    9aa4:	add	ip, sp, #72	; 0x48
    9aa8:	movt	r3, #0
    9aac:	str	ip, [sp, #604]	; 0x25c
    9ab0:	str	r3, [sp, #928]	; 0x3a0
    9ab4:	add	r3, sp, #92	; 0x5c
    9ab8:	str	r2, [sp, #632]	; 0x278
    9abc:	movw	r2, #1009	; 0x3f1
    9ac0:	str	r3, [sp, #660]	; 0x294
    9ac4:	add	r3, sp, #88	; 0x58
    9ac8:	str	r2, [sp, #692]	; 0x2b4
    9acc:	movw	r2, #1002	; 0x3ea
    9ad0:	str	r3, [sp, #716]	; 0x2cc
    9ad4:	movw	r3, #1010	; 0x3f2
    9ad8:	str	r2, [sp, #748]	; 0x2ec
    9adc:	add	r2, sp, #84	; 0x54
    9ae0:	str	r3, [sp, #776]	; 0x308
    9ae4:	add	r3, sp, #104	; 0x68
    9ae8:	str	r2, [sp, #800]	; 0x320
    9aec:	add	r2, sp, #108	; 0x6c
    9af0:	str	r3, [sp, #828]	; 0x33c
    9af4:	add	r3, sp, #112	; 0x70
    9af8:	str	r2, [sp, #856]	; 0x358
    9afc:	add	r2, sp, #116	; 0x74
    9b00:	str	r3, [sp, #884]	; 0x374
    9b04:	mov	r3, #104	; 0x68
    9b08:	str	r2, [sp, #912]	; 0x390
    9b0c:	add	r2, sp, #120	; 0x78
    9b10:	strb	r3, [sp, #932]	; 0x3a4
    9b14:	movw	r3, #51092	; 0xc794
    9b18:	str	r2, [sp, #940]	; 0x3ac
    9b1c:	movt	r3, #0
    9b20:	mov	r2, #118	; 0x76
    9b24:	str	r3, [sp, #956]	; 0x3bc
    9b28:	add	r3, sp, #124	; 0x7c
    9b2c:	strb	r2, [sp, #960]	; 0x3c0
    9b30:	str	r3, [sp, #968]	; 0x3c8
    9b34:	bl	9644 <setlocale@plt>
    9b38:	movw	r0, #51100	; 0xc79c
    9b3c:	movw	r1, #51108	; 0xc7a4
    9b40:	movt	r0, #0
    9b44:	movt	r1, #0
    9b48:	bl	9560 <bindtextdomain@plt>
    9b4c:	movw	r0, #51100	; 0xc79c
    9b50:	movt	r0, #0
    9b54:	bl	9710 <textdomain@plt>
    9b58:	str	r5, [sp]
    9b5c:	mov	r1, r9
    9b60:	mov	r2, r8
    9b64:	add	r3, sp, #144	; 0x90
    9b68:	movw	r0, #51128	; 0xc7b8
    9b6c:	movt	r0, #0
    9b70:	bl	97ac <poptGetContext@plt>
    9b74:	mov	r5, r0
    9b78:	mov	r0, r5
    9b7c:	bl	9704 <poptGetNextOpt@plt>
    9b80:	cmp	r0, #0
    9b84:	ble	9be0 <fputs@plt+0x3d4>
    9b88:	sub	r3, r0, #1000	; 0x3e8
    9b8c:	cmp	r3, #10
    9b90:	ldrls	pc, [pc, r3, lsl #2]
    9b94:	b	9b78 <fputs@plt+0x36c>
    9b98:	andeq	r9, r0, ip, lsl #29
    9b9c:	andeq	r9, r0, ip, ror lr
    9ba0:	andeq	r9, r0, ip, ror #28
    9ba4:	andeq	r9, r0, ip, asr lr
    9ba8:	andeq	r9, r0, ip, asr #28
    9bac:	andeq	r9, r0, ip, lsr lr
    9bb0:	andeq	r9, r0, ip, lsr #28
    9bb4:	andeq	r9, r0, ip, lsl lr
    9bb8:	andeq	r9, r0, ip, lsl #28
    9bbc:	strdeq	r9, [r0], -ip
    9bc0:	andeq	r9, r0, r4, asr #23
    9bc4:	cmp	r4, #0
    9bc8:	bne	a4cc <fputs@plt+0xcc0>
    9bcc:	mov	r0, r5
    9bd0:	mov	r4, #10
    9bd4:	bl	9704 <poptGetNextOpt@plt>
    9bd8:	cmp	r0, #0
    9bdc:	bgt	9b88 <fputs@plt+0x37c>
    9be0:	ldr	r9, [sp, #120]	; 0x78
    9be4:	mov	r8, r0
    9be8:	cmp	r9, #0
    9bec:	bne	a544 <fputs@plt+0xd38>
    9bf0:	ldr	r3, [sp, #124]	; 0x7c
    9bf4:	cmp	r3, #0
    9bf8:	bne	a578 <fputs@plt+0xd6c>
    9bfc:	cmn	r0, #1
    9c00:	blt	a4fc <fputs@plt+0xcf0>
    9c04:	movw	r1, #51180	; 0xc7ec
    9c08:	ldr	r0, [sp, #84]	; 0x54
    9c0c:	movt	r1, #0
    9c10:	bl	9698 <fdopen@plt>
    9c14:	cmp	r0, #0
    9c18:	str	r0, [sp, #28]
    9c1c:	beq	a54c <fputs@plt+0xd40>
    9c20:	cmp	r4, #0
    9c24:	beq	a4cc <fputs@plt+0xcc0>
    9c28:	mov	r0, r5
    9c2c:	bl	96ec <poptGetArg@plt>
    9c30:	cmp	r0, #0
    9c34:	beq	a4cc <fputs@plt+0xcc0>
    9c38:	bl	9788 <__strdup@plt>
    9c3c:	cmp	r4, #9
    9c40:	mov	r8, r0
    9c44:	beq	a4a4 <fputs@plt+0xc98>
    9c48:	mov	r0, r5
    9c4c:	bl	96ec <poptGetArg@plt>
    9c50:	cmp	r0, #0
    9c54:	beq	a4cc <fputs@plt+0xcc0>
    9c58:	mov	r2, #10
    9c5c:	add	r1, sp, #52	; 0x34
    9c60:	bl	9620 <strtoul@plt>
    9c64:	ldr	r3, [sp, #52]	; 0x34
    9c68:	ldrb	r3, [r3]
    9c6c:	cmp	r3, #0
    9c70:	str	r0, [sp, #16]
    9c74:	bne	a4cc <fputs@plt+0xcc0>
    9c78:	mov	r0, r5
    9c7c:	bl	96ec <poptGetArg@plt>
    9c80:	cmp	r0, #0
    9c84:	beq	a4cc <fputs@plt+0xcc0>
    9c88:	add	r1, sp, #52	; 0x34
    9c8c:	mov	r2, #10
    9c90:	bl	9620 <strtoul@plt>
    9c94:	ldr	r3, [sp, #52]	; 0x34
    9c98:	ldrb	sl, [r3]
    9c9c:	cmp	sl, #0
    9ca0:	str	r0, [sp, #20]
    9ca4:	bne	a4cc <fputs@plt+0xcc0>
    9ca8:	cmp	r4, #8
    9cac:	mvnne	r1, #0
    9cb0:	strne	r1, [sp, #32]
    9cb4:	beq	9fe0 <fputs@plt+0x7d4>
    9cb8:	bl	97d0 <newtInit@plt>
    9cbc:	bl	9680 <newtCls@plt>
    9cc0:	mov	r0, r8
    9cc4:	bl	a85c <fputs@plt+0x1050>
    9cc8:	ldr	r2, [sp, #20]
    9ccc:	ldr	r1, [sp, #16]
    9cd0:	cmp	r1, #0
    9cd4:	cmpgt	r2, #0
    9cd8:	movgt	r3, #0
    9cdc:	movle	r3, #1
    9ce0:	movgt	r6, r3
    9ce4:	ble	9ed0 <fputs@plt+0x6c4>
    9ce8:	ldr	r3, [sp, #88]	; 0x58
    9cec:	ldr	r1, [sp, #20]
    9cf0:	cmp	r3, #0
    9cf4:	ldr	r2, [sp, #16]
    9cf8:	sub	r9, r1, #2
    9cfc:	movne	r0, #1
    9d00:	sub	sl, r2, #2
    9d04:	movne	r1, r0
    9d08:	beq	9e9c <fputs@plt+0x690>
    9d0c:	ldr	ip, [sp, #92]	; 0x5c
    9d10:	mov	r2, r9
    9d14:	mov	r3, sl
    9d18:	str	ip, [sp]
    9d1c:	bl	97a0 <newtOpenWindow@plt>
    9d20:	ldr	r2, [sp, #100]	; 0x64
    9d24:	cmp	r2, #0
    9d28:	beq	9d38 <fputs@plt+0x52c>
    9d2c:	mov	r0, #0
    9d30:	mov	r1, r0
    9d34:	bl	94ac <newtDrawRootText@plt>
    9d38:	ldr	r0, [sp, #112]	; 0x70
    9d3c:	cmp	r0, #0
    9d40:	beq	9d4c <fputs@plt+0x540>
    9d44:	mov	r1, #0
    9d48:	bl	be78 <fputs@plt+0x266c>
    9d4c:	ldr	r0, [sp, #116]	; 0x74
    9d50:	cmp	r0, #0
    9d54:	beq	9d60 <fputs@plt+0x554>
    9d58:	mov	r1, #1
    9d5c:	bl	be78 <fputs@plt+0x266c>
    9d60:	ldr	r0, [sp, #104]	; 0x68
    9d64:	cmp	r0, #0
    9d68:	beq	9d74 <fputs@plt+0x568>
    9d6c:	mov	r1, #2
    9d70:	bl	be78 <fputs@plt+0x266c>
    9d74:	ldr	r0, [sp, #108]	; 0x6c
    9d78:	cmp	r0, #0
    9d7c:	beq	9d88 <fputs@plt+0x57c>
    9d80:	mov	r1, #3
    9d84:	bl	be78 <fputs@plt+0x266c>
    9d88:	ldr	r3, [sp, #56]	; 0x38
    9d8c:	sub	r4, r4, #1
    9d90:	cmp	r3, #0
    9d94:	ldr	r3, [sp, #64]	; 0x40
    9d98:	orrne	r6, r6, #2
    9d9c:	cmp	r3, #0
    9da0:	ldr	r3, [sp, #60]	; 0x3c
    9da4:	orrne	r6, r6, #1
    9da8:	cmp	r3, #0
    9dac:	ldr	r3, [sp, #72]	; 0x48
    9db0:	orrne	r6, r6, #32
    9db4:	cmp	r3, #0
    9db8:	ldr	r3, [sp, #76]	; 0x4c
    9dbc:	orrne	r6, r6, #4
    9dc0:	cmp	r3, #0
    9dc4:	orrne	r6, r6, #8
    9dc8:	cmp	r4, #9
    9dcc:	ldrls	pc, [pc, r4, lsl #2]
    9dd0:	b	a4cc <fputs@plt+0xcc0>
    9dd4:	andeq	sl, r0, r8, lsr #1
    9dd8:	andeq	sl, r0, r8, asr #1
    9ddc:	andeq	sl, r0, r0, lsr #3
    9de0:	andeq	sl, r0, r0, asr #3
    9de4:	andeq	sl, r0, r8, ror #1
    9de8:	strdeq	sl, [r0], -r4
    9dec:	andeq	sl, r0, r4, asr r1
    9df0:	andeq	sl, r0, r8, asr r2
    9df4:	andeq	sl, r0, r8, asr #1
    9df8:	andeq	sl, r0, r0, lsr r0
    9dfc:	cmp	r4, #0
    9e00:	bne	a4cc <fputs@plt+0xcc0>
    9e04:	mov	r4, #9
    9e08:	b	9b78 <fputs@plt+0x36c>
    9e0c:	cmp	r4, #0
    9e10:	bne	a4cc <fputs@plt+0xcc0>
    9e14:	mov	r4, #1
    9e18:	b	9b78 <fputs@plt+0x36c>
    9e1c:	cmp	r4, #0
    9e20:	bne	a4cc <fputs@plt+0xcc0>
    9e24:	mov	r4, #8
    9e28:	b	9b78 <fputs@plt+0x36c>
    9e2c:	cmp	r4, #0
    9e30:	bne	a4cc <fputs@plt+0xcc0>
    9e34:	mov	r4, #6
    9e38:	b	9b78 <fputs@plt+0x36c>
    9e3c:	cmp	r4, #0
    9e40:	bne	a4cc <fputs@plt+0xcc0>
    9e44:	mov	r4, #7
    9e48:	b	9b78 <fputs@plt+0x36c>
    9e4c:	mov	r0, #1
    9e50:	mov	r6, r0
    9e54:	bl	be44 <fputs@plt+0x2638>
    9e58:	b	9b78 <fputs@plt+0x36c>
    9e5c:	cmp	r4, #0
    9e60:	bne	a4cc <fputs@plt+0xcc0>
    9e64:	mov	r4, #5
    9e68:	b	9b78 <fputs@plt+0x36c>
    9e6c:	cmp	r4, #0
    9e70:	bne	a4cc <fputs@plt+0xcc0>
    9e74:	mov	r4, #3
    9e78:	b	9b78 <fputs@plt+0x36c>
    9e7c:	cmp	r4, #0
    9e80:	bne	a4cc <fputs@plt+0xcc0>
    9e84:	mov	r4, #4
    9e88:	b	9b78 <fputs@plt+0x36c>
    9e8c:	cmp	r4, #0
    9e90:	bne	a4cc <fputs@plt+0xcc0>
    9e94:	mov	r4, #2
    9e98:	b	9b78 <fputs@plt+0x36c>
    9e9c:	movw	r2, #20840	; 0x5168
    9ea0:	movw	r3, #20856	; 0x5178
    9ea4:	movt	r2, #1
    9ea8:	movt	r3, #1
    9eac:	ldr	r0, [r2]
    9eb0:	ldr	r1, [r3]
    9eb4:	rsb	r0, r9, r0
    9eb8:	rsb	r1, sl, r1
    9ebc:	add	r0, r0, r0, lsr #31
    9ec0:	add	r1, r1, r1, lsr #31
    9ec4:	asr	r0, r0, #1
    9ec8:	asr	r1, r1, #1
    9ecc:	b	9d0c <fputs@plt+0x500>
    9ed0:	movw	r2, #20840	; 0x5168
    9ed4:	movt	r2, #1
    9ed8:	ldr	r3, [sp, #92]	; 0x5c
    9edc:	cmp	r8, #0
    9ee0:	ldr	fp, [r2]
    9ee4:	mov	ip, #0
    9ee8:	str	r2, [sp, #24]
    9eec:	addeq	sl, sp, #128	; 0x80
    9ef0:	sub	fp, fp, #4
    9ef4:	str	ip, [sp, #128]	; 0x80
    9ef8:	str	fp, [sp, #36]	; 0x24
    9efc:	str	ip, [sp, #132]	; 0x84
    9f00:	str	ip, [sp, #136]	; 0x88
    9f04:	str	ip, [sp, #140]	; 0x8c
    9f08:	str	r3, [sp, #40]	; 0x28
    9f0c:	beq	9f94 <fputs@plt+0x788>
    9f10:	ldrb	r3, [r8]
    9f14:	add	sl, sp, #128	; 0x80
    9f18:	cmp	r3, #0
    9f1c:	beq	a4f4 <fputs@plt+0xce8>
    9f20:	ldr	fp, [sp, #36]	; 0x24
    9f24:	mov	r9, r8
    9f28:	mov	r3, ip
    9f2c:	str	r4, [sp, #44]	; 0x2c
    9f30:	mov	r1, r9
    9f34:	add	r2, sp, #140	; 0x8c
    9f38:	mov	r0, sl
    9f3c:	add	r4, r3, #1
    9f40:	bl	a770 <fputs@plt+0xf64>
    9f44:	mov	r1, fp
    9f48:	mov	r9, r0
    9f4c:	ldr	r0, [sp, #140]	; 0x8c
    9f50:	bl	be8c <fputs@plt+0x2680>
    9f54:	ldrb	r2, [r9]
    9f58:	cmp	r2, #0
    9f5c:	add	r3, r4, r0
    9f60:	bne	9f30 <fputs@plt+0x724>
    9f64:	ldr	r4, [sp, #44]	; 0x2c
    9f68:	mov	ip, r3
    9f6c:	ldr	r0, [sp, #128]	; 0x80
    9f70:	add	ip, ip, #2
    9f74:	ldr	r3, [sp, #132]	; 0x84
    9f78:	add	r0, r0, #2
    9f7c:	ldr	r1, [sp, #36]	; 0x24
    9f80:	add	r3, r3, ip
    9f84:	str	r0, [sp, #128]	; 0x80
    9f88:	str	r3, [sp, #132]	; 0x84
    9f8c:	bl	ad90 <fputs@plt+0x1584>
    9f90:	str	r0, [sp, #128]	; 0x80
    9f94:	ldr	r1, [sp, #40]	; 0x28
    9f98:	mov	r0, sl
    9f9c:	add	r2, sp, #136	; 0x88
    9fa0:	bl	a770 <fputs@plt+0xf64>
    9fa4:	ldr	r3, [sp, #128]	; 0x80
    9fa8:	cmp	r3, #0
    9fac:	addgt	r3, r3, #4
    9fb0:	strgt	r3, [sp, #128]	; 0x80
    9fb4:	sub	r3, r4, #2
    9fb8:	cmp	r3, #6
    9fbc:	ldrls	pc, [pc, r3, lsl #2]
    9fc0:	b	a294 <fputs@plt+0xa88>
    9fc4:	andeq	sl, r0, r0, lsl #5
    9fc8:	andeq	sl, r0, r0, lsl #5
    9fcc:	andeq	sl, r0, ip, lsr #6
    9fd0:	andeq	sl, r0, r4, lsl #6
    9fd4:	andeq	sl, r0, ip, lsr #6
    9fd8:	andeq	sl, r0, ip, lsr #6
    9fdc:	ldrdeq	sl, [r0], -r4
    9fe0:	mov	r0, sl
    9fe4:	bl	971c <dup@plt>
    9fe8:	cmp	r0, #0
    9fec:	str	r0, [sp, #32]
    9ff0:	blt	a564 <fputs@plt+0xd58>
    9ff4:	mov	r0, sl
    9ff8:	bl	96bc <close@plt>
    9ffc:	cmp	r0, #0
    a000:	blt	a564 <fputs@plt+0xd58>
    a004:	movw	r0, #51224	; 0xc818
    a008:	mov	r1, #2
    a00c:	movt	r0, #0
    a010:	bl	965c <open64@plt>
    a014:	cmp	r0, #0
    a018:	beq	9cb8 <fputs@plt+0x4ac>
    a01c:	movw	r0, #51236	; 0xc824
    a020:	movt	r0, #0
    a024:	bl	956c <perror@plt>
    a028:	mvn	r0, #0
    a02c:	bl	97dc <exit@plt>
    a030:	mov	r1, sl
    a034:	orr	r6, r6, #16
    a038:	str	r6, [sp]
    a03c:	add	r3, sp, #136	; 0x88
    a040:	mov	r2, r9
    a044:	str	r3, [sp, #4]
    a048:	mov	r0, r8
    a04c:	mov	r3, r5
    a050:	bl	b074 <fputs@plt+0x1868>
    a054:	subs	r4, r0, #0
    a058:	beq	a184 <fputs@plt+0x978>
    a05c:	cmn	r4, #1
    a060:	beq	a4cc <fputs@plt+0xcc0>
    a064:	ldr	r3, [sp, #68]	; 0x44
    a068:	cmp	r3, #0
    a06c:	bne	a49c <fputs@plt+0xc90>
    a070:	bl	96a4 <newtFinished@plt>
    a074:	mov	r0, r8
    a078:	bl	95a8 <free@plt>
    a07c:	mov	r0, r5
    a080:	bl	959c <poptFreeContext@plt>
    a084:	cmp	r4, #2
    a088:	ldr	r2, [sp, #1012]	; 0x3f4
    a08c:	ldr	r3, [r7]
    a090:	movne	r0, r4
    a094:	mvneq	r0, #0
    a098:	cmp	r2, r3
    a09c:	bne	a560 <fputs@plt+0xd54>
    a0a0:	add	sp, sp, #1020	; 0x3fc
    a0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a0a8:	str	r6, [sp]
    a0ac:	mov	r1, sl
    a0b0:	mov	r2, r9
    a0b4:	mov	r0, r8
    a0b8:	mov	r3, #2
    a0bc:	bl	bc14 <fputs@plt+0x2408>
    a0c0:	mov	r4, r0
    a0c4:	b	a05c <fputs@plt+0x850>
    a0c8:	str	r6, [sp]
    a0cc:	mov	r1, sl
    a0d0:	mov	r2, r9
    a0d4:	mov	r0, r8
    a0d8:	mov	r3, #0
    a0dc:	bl	bc14 <fputs@plt+0x2408>
    a0e0:	mov	r4, r0
    a0e4:	b	a05c <fputs@plt+0x850>
    a0e8:	str	r6, [sp]
    a0ec:	mov	r1, sl
    a0f0:	b	a03c <fputs@plt+0x830>
    a0f4:	mov	r0, #1
    a0f8:	add	r3, sp, #140	; 0x8c
    a0fc:	str	r0, [sp]
    a100:	mov	r1, sl
    a104:	str	r3, [sp, #8]
    a108:	mov	r2, r9
    a10c:	str	r6, [sp, #4]
    a110:	mov	r0, r8
    a114:	mov	r3, r5
    a118:	bl	b648 <fputs@plt+0x1e3c>
    a11c:	subs	r4, r0, #0
    a120:	bne	a05c <fputs@plt+0x850>
    a124:	ldr	r3, [sp, #140]	; 0x8c
    a128:	ldr	r0, [r3]
    a12c:	cmp	r0, #0
    a130:	beq	a198 <fputs@plt+0x98c>
    a134:	ldr	r1, [sp, #28]
    a138:	bl	980c <fputs@plt>
    a13c:	ldr	r3, [sp, #140]	; 0x8c
    a140:	ldr	r0, [r3]
    a144:	bl	95a8 <free@plt>
    a148:	ldr	r0, [sp, #140]	; 0x8c
    a14c:	bl	95a8 <free@plt>
    a150:	b	a198 <fputs@plt+0x98c>
    a154:	ldr	r3, [sp, #96]	; 0x60
    a158:	add	ip, sp, #136	; 0x88
    a15c:	mov	r1, sl
    a160:	str	r6, [sp]
    a164:	mov	r2, r9
    a168:	mov	r0, r8
    a16c:	str	r3, [sp, #4]
    a170:	mov	r3, r5
    a174:	str	ip, [sp, #8]
    a178:	bl	b1c8 <fputs@plt+0x19bc>
    a17c:	subs	r4, r0, #0
    a180:	bne	a05c <fputs@plt+0x850>
    a184:	ldr	r1, [sp, #28]
    a188:	ldr	r0, [sp, #136]	; 0x88
    a18c:	bl	980c <fputs@plt>
    a190:	ldr	r0, [sp, #136]	; 0x88
    a194:	bl	95a8 <free@plt>
    a198:	mov	r4, #0
    a19c:	b	a064 <fputs@plt+0x858>
    a1a0:	str	r6, [sp]
    a1a4:	mov	r1, sl
    a1a8:	mov	r2, r9
    a1ac:	mov	r0, r8
    a1b0:	mov	r3, #1
    a1b4:	bl	bc14 <fputs@plt+0x2408>
    a1b8:	mov	r4, r0
    a1bc:	b	a05c <fputs@plt+0x850>
    a1c0:	str	r6, [sp, #4]
    a1c4:	mov	r2, r9
    a1c8:	mov	r0, #0
    a1cc:	add	r3, sp, #140	; 0x8c
    a1d0:	str	r0, [sp]
    a1d4:	mov	r1, sl
    a1d8:	str	r3, [sp, #8]
    a1dc:	mov	r0, r8
    a1e0:	mov	r3, r5
    a1e4:	bl	b648 <fputs@plt+0x1e3c>
    a1e8:	subs	r4, r0, #0
    a1ec:	ldreq	r6, [sp, #140]	; 0x8c
    a1f0:	ldreq	r9, [sp, #28]
    a1f4:	beq	a228 <fputs@plt+0xa1c>
    a1f8:	b	a05c <fputs@plt+0x850>
    a1fc:	cmp	r4, #0
    a200:	bne	a4bc <fputs@plt+0xcb0>
    a204:	movw	r2, #51256	; 0xc838
    a208:	mov	r1, #1
    a20c:	mov	r0, r9
    a210:	movt	r2, #0
    a214:	ldr	r3, [r6, #-4]
    a218:	mov	r4, r1
    a21c:	bl	96e0 <__fprintf_chk@plt>
    a220:	ldr	r0, [r6, #-4]
    a224:	bl	95a8 <free@plt>
    a228:	ldr	r3, [r6], #4
    a22c:	cmp	r3, #0
    a230:	beq	a4e8 <fputs@plt+0xcdc>
    a234:	ldr	r2, [sp, #80]	; 0x50
    a238:	cmp	r2, #0
    a23c:	beq	a1fc <fputs@plt+0x9f0>
    a240:	movw	r2, #51176	; 0xc7e8
    a244:	mov	r0, r9
    a248:	movt	r2, #0
    a24c:	mov	r1, #1
    a250:	bl	96e0 <__fprintf_chk@plt>
    a254:	b	a220 <fputs@plt+0xa14>
    a258:	ldr	r3, [sp, #32]
    a25c:	mov	r1, sl
    a260:	str	r6, [sp, #4]
    a264:	mov	r2, r9
    a268:	mov	r0, r8
    a26c:	str	r3, [sp]
    a270:	mov	r3, r5
    a274:	bl	ad9c <fputs@plt+0x1590>
    a278:	mov	r4, r0
    a27c:	b	a05c <fputs@plt+0x850>
    a280:	mov	r1, sl
    a284:	mov	r3, r6
    a288:	add	r0, sp, #132	; 0x84
    a28c:	mov	r2, #1
    a290:	bl	a7ec <fputs@plt+0xfe0>
    a294:	ldr	r3, [sp, #132]	; 0x84
    a298:	movw	r6, #20856	; 0x5178
    a29c:	movt	r6, #1
    a2a0:	ldr	r1, [r6]
    a2a4:	add	r3, r3, #2
    a2a8:	ldr	r2, [sp, #128]	; 0x80
    a2ac:	cmp	r3, r1
    a2b0:	str	r3, [sp, #132]	; 0x84
    a2b4:	add	r3, r2, #2
    a2b8:	str	r3, [sp, #128]	; 0x80
    a2bc:	subge	r1, r1, #1
    a2c0:	addge	r2, r2, #4
    a2c4:	strge	r1, [sp, #132]	; 0x84
    a2c8:	movge	r6, #4
    a2cc:	strge	r2, [sp, #128]	; 0x80
    a2d0:	movlt	r6, #0
    a2d4:	ldr	r1, [sp, #128]	; 0x80
    a2d8:	ldr	r0, [sp, #20]
    a2dc:	bl	ad84 <fputs@plt+0x1578>
    a2e0:	ldr	r2, [sp, #24]
    a2e4:	ldr	r1, [r2]
    a2e8:	bl	ad90 <fputs@plt+0x1584>
    a2ec:	ldr	r1, [sp, #132]	; 0x84
    a2f0:	str	r0, [sp, #20]
    a2f4:	ldr	r0, [sp, #16]
    a2f8:	bl	ad84 <fputs@plt+0x1578>
    a2fc:	str	r0, [sp, #16]
    a300:	b	9ce8 <fputs@plt+0x4dc>
    a304:	mov	r3, r6
    a308:	mov	r1, sl
    a30c:	add	r0, sp, #132	; 0x84
    a310:	mov	r2, #2
    a314:	bl	a7ec <fputs@plt+0xfe0>
    a318:	ldr	r3, [sp, #132]	; 0x84
    a31c:	movw	r6, #20856	; 0x5178
    a320:	movt	r6, #1
    a324:	add	r3, r3, #1
    a328:	b	a2a0 <fputs@plt+0xa94>
    a32c:	mov	r1, sl
    a330:	mov	r3, r6
    a334:	add	r0, sp, #132	; 0x84
    a338:	mov	r2, #2
    a33c:	bl	a7ec <fputs@plt+0xfe0>
    a340:	mov	r0, r5
    a344:	bl	9524 <poptGetArgs@plt>
    a348:	cmp	r0, #0
    a34c:	str	r0, [sp, #40]	; 0x28
    a350:	beq	a294 <fputs@plt+0xa88>
    a354:	ldr	r1, [sp, #40]	; 0x28
    a358:	ldr	r3, [r1]
    a35c:	cmp	r3, #0
    a360:	beq	a294 <fputs@plt+0xa88>
    a364:	cmp	r4, #7
    a368:	ldr	r2, [sp, #40]	; 0x28
    a36c:	mov	sl, #0
    a370:	mov	r3, r7
    a374:	str	sl, [sp, #36]	; 0x24
    a378:	mov	fp, sl
    a37c:	str	r5, [sp, #44]	; 0x2c
    a380:	mov	r7, sl
    a384:	mov	r5, r4
    a388:	add	r6, r2, #4
    a38c:	mov	r4, sl
    a390:	moveq	r9, #5
    a394:	movne	r9, #10
    a398:	mov	sl, r3
    a39c:	b	a3e8 <fputs@plt+0xbdc>
    a3a0:	ldr	r2, [r6, #4]
    a3a4:	cmp	r2, #0
    a3a8:	beq	a3f4 <fputs@plt+0xbe8>
    a3ac:	bl	9608 <strlen@plt>
    a3b0:	add	fp, fp, #1
    a3b4:	mov	r1, r0
    a3b8:	mov	r0, r4
    a3bc:	bl	ad84 <fputs@plt+0x1578>
    a3c0:	mov	r4, r0
    a3c4:	ldr	r0, [r6, #4]
    a3c8:	bl	9608 <strlen@plt>
    a3cc:	mov	r1, r0
    a3d0:	mov	r0, r7
    a3d4:	bl	ad84 <fputs@plt+0x1578>
    a3d8:	cmp	r5, #7
    a3dc:	addeq	r6, r6, #8
    a3e0:	addne	r6, r6, #12
    a3e4:	mov	r7, r0
    a3e8:	ldr	r0, [r6]
    a3ec:	cmp	r0, #0
    a3f0:	bne	a3a0 <fputs@plt+0xb94>
    a3f4:	str	r4, [sp, #36]	; 0x24
    a3f8:	mov	r3, sl
    a3fc:	mov	sl, r7
    a400:	mov	r7, r3
    a404:	ldr	r3, [sp, #36]	; 0x24
    a408:	mov	r4, r5
    a40c:	ldr	r0, [sp, #128]	; 0x80
    a410:	movw	r6, #20856	; 0x5178
    a414:	add	r1, r3, sl
    a418:	ldr	r5, [sp, #44]	; 0x2c
    a41c:	add	r1, r1, r9
    a420:	movt	r6, #1
    a424:	bl	ad84 <fputs@plt+0x1578>
    a428:	ldr	r2, [sp, #24]
    a42c:	movw	sl, #20872	; 0x5188
    a430:	movt	sl, #1
    a434:	ldr	r1, [r2]
    a438:	str	r0, [sp, #128]	; 0x80
    a43c:	bl	ad90 <fputs@plt+0x1584>
    a440:	ldr	r3, [sp, #132]	; 0x84
    a444:	ldr	r1, [r6]
    a448:	rsb	r1, r3, r1
    a44c:	sub	r1, r1, #4
    a450:	str	r0, [sp, #128]	; 0x80
    a454:	mov	r0, fp
    a458:	bl	ad90 <fputs@plt+0x1584>
    a45c:	ldr	ip, [sp, #132]	; 0x84
    a460:	mov	r1, #1
    a464:	movw	r3, #51252	; 0xc834
    a468:	movt	r3, #0
    a46c:	mov	r2, r0
    a470:	mov	r0, sl
    a474:	str	r2, [sp]
    a478:	add	ip, r2, ip
    a47c:	mov	r2, #20
    a480:	add	ip, ip, r1
    a484:	str	ip, [sp, #132]	; 0x84
    a488:	bl	974c <__sprintf_chk@plt>
    a48c:	ldr	r3, [sp, #40]	; 0x28
    a490:	str	sl, [r3]
    a494:	ldr	r3, [sp, #132]	; 0x84
    a498:	b	a2a0 <fputs@plt+0xa94>
    a49c:	bl	9800 <newtPopWindow@plt>
    a4a0:	b	a070 <fputs@plt+0x864>
    a4a4:	bl	a8d4 <fputs@plt+0x10c8>
    a4a8:	mov	r3, r0
    a4ac:	mov	r0, r8
    a4b0:	mov	r8, r3
    a4b4:	bl	95a8 <free@plt>
    a4b8:	b	9c48 <fputs@plt+0x43c>
    a4bc:	mov	r1, r9
    a4c0:	mov	r0, #32
    a4c4:	bl	9770 <_IO_putc@plt>
    a4c8:	b	a204 <fputs@plt+0x9f8>
    a4cc:	mov	r0, #1
    a4d0:	bl	a6ec <fputs@plt+0xee0>
    a4d4:	ldr	r3, [sp, #132]	; 0x84
    a4d8:	movw	r6, #20856	; 0x5178
    a4dc:	movt	r6, #1
    a4e0:	add	r3, r3, #2
    a4e4:	b	a2a0 <fputs@plt+0xa94>
    a4e8:	ldr	r0, [sp, #140]	; 0x8c
    a4ec:	bl	95a8 <free@plt>
    a4f0:	b	a198 <fputs@plt+0x98c>
    a4f4:	mov	ip, r3
    a4f8:	b	9f6c <fputs@plt+0x760>
    a4fc:	movw	r3, #20864	; 0x5180
    a500:	movt	r3, #1
    a504:	mov	r1, #1
    a508:	mov	r0, r5
    a50c:	ldr	r4, [r3]
    a510:	bl	977c <poptBadOption@plt>
    a514:	mov	r5, r0
    a518:	mov	r0, r8
    a51c:	bl	9530 <poptStrerror@plt>
    a520:	mov	r3, r5
    a524:	movw	r2, #51172	; 0xc7e4
    a528:	mov	r1, #1
    a52c:	movt	r2, #0
    a530:	str	r0, [sp]
    a534:	mov	r0, r4
    a538:	bl	96e0 <__fprintf_chk@plt>
    a53c:	mov	r0, #1
    a540:	bl	97dc <exit@plt>
    a544:	mov	r0, #0
    a548:	bl	a6ec <fputs@plt+0xee0>
    a54c:	movw	r0, #51184	; 0xc7f0
    a550:	movt	r0, #0
    a554:	bl	956c <perror@plt>
    a558:	mvn	r0, #0
    a55c:	bl	97dc <exit@plt>
    a560:	bl	96d4 <__stack_chk_fail@plt>
    a564:	movw	r0, #51208	; 0xc808
    a568:	movt	r0, #0
    a56c:	bl	956c <perror@plt>
    a570:	mvn	r0, #0
    a574:	bl	97dc <exit@plt>
    a578:	movw	r3, #20860	; 0x517c
    a57c:	movt	r3, #1
    a580:	mov	r2, #5
    a584:	movw	r1, #51140	; 0xc7c4
    a588:	mov	r0, r9
    a58c:	movt	r1, #0
    a590:	ldr	r4, [r3]
    a594:	bl	95c0 <dcgettext@plt>
    a598:	movw	r3, #51164	; 0xc7dc
    a59c:	mov	r1, #1
    a5a0:	movt	r3, #0
    a5a4:	mov	r2, r0
    a5a8:	mov	r0, r4
    a5ac:	bl	96e0 <__fprintf_chk@plt>
    a5b0:	mov	r0, r9
    a5b4:	bl	97dc <exit@plt>
    a5b8:	mov	fp, #0
    a5bc:	mov	lr, #0
    a5c0:	pop	{r1}		; (ldr r1, [sp], #4)
    a5c4:	mov	r2, sp
    a5c8:	push	{r2}		; (str r2, [sp, #-4]!)
    a5cc:	push	{r0}		; (str r0, [sp, #-4]!)
    a5d0:	ldr	ip, [pc, #16]	; a5e8 <fputs@plt+0xddc>
    a5d4:	push	{ip}		; (str ip, [sp, #-4]!)
    a5d8:	ldr	r0, [pc, #12]	; a5ec <fputs@plt+0xde0>
    a5dc:	ldr	r3, [pc, #12]	; a5f0 <fputs@plt+0xde4>
    a5e0:	bl	947c <__libc_start_main@plt>
    a5e4:	bl	9470 <abort@plt>
    a5e8:	andeq	ip, r0, r0, asr #2
    a5ec:	andeq	r9, r0, r8, lsl r8
    a5f0:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    a5f4:	ldr	r3, [pc, #20]	; a610 <fputs@plt+0xe04>
    a5f8:	ldr	r2, [pc, #20]	; a614 <fputs@plt+0xe08>
    a5fc:	add	r3, pc, r3
    a600:	ldr	r2, [r3, r2]
    a604:	cmp	r2, #0
    a608:	bxeq	lr
    a60c:	b	94c4 <__gmon_start__@plt>
    a610:	strdeq	sl, [r0], -ip
    a614:	andeq	r0, r0, r8, asr r1
    a618:	push	{r3, lr}
    a61c:	movw	r0, #20840	; 0x5168
    a620:	ldr	r3, [pc, #36]	; a64c <fputs@plt+0xe40>
    a624:	movt	r0, #1
    a628:	rsb	r3, r0, r3
    a62c:	cmp	r3, #6
    a630:	popls	{r3, pc}
    a634:	movw	r3, #0
    a638:	movt	r3, #0
    a63c:	cmp	r3, #0
    a640:	popeq	{r3, pc}
    a644:	blx	r3
    a648:	pop	{r3, pc}
    a64c:	andeq	r5, r1, fp, ror #2
    a650:	push	{r3, lr}
    a654:	movw	r0, #20840	; 0x5168
    a658:	movw	r3, #20840	; 0x5168
    a65c:	movt	r0, #1
    a660:	movt	r3, #1
    a664:	rsb	r3, r0, r3
    a668:	asr	r3, r3, #2
    a66c:	add	r3, r3, r3, lsr #31
    a670:	asrs	r1, r3, #1
    a674:	popeq	{r3, pc}
    a678:	movw	r2, #0
    a67c:	movt	r2, #0
    a680:	cmp	r2, #0
    a684:	popeq	{r3, pc}
    a688:	blx	r2
    a68c:	pop	{r3, pc}
    a690:	push	{r4, lr}
    a694:	movw	r4, #20868	; 0x5184
    a698:	movt	r4, #1
    a69c:	ldrb	r3, [r4]
    a6a0:	cmp	r3, #0
    a6a4:	popne	{r4, pc}
    a6a8:	bl	a618 <fputs@plt+0xe0c>
    a6ac:	mov	r3, #1
    a6b0:	strb	r3, [r4]
    a6b4:	pop	{r4, pc}
    a6b8:	movw	r0, #20204	; 0x4eec
    a6bc:	movt	r0, #1
    a6c0:	push	{r3, lr}
    a6c4:	ldr	r3, [r0]
    a6c8:	cmp	r3, #0
    a6cc:	beq	a6e4 <fputs@plt+0xed8>
    a6d0:	movw	r3, #0
    a6d4:	movt	r3, #0
    a6d8:	cmp	r3, #0
    a6dc:	beq	a6e4 <fputs@plt+0xed8>
    a6e0:	blx	r3
    a6e4:	pop	{r3, lr}
    a6e8:	b	a650 <fputs@plt+0xe44>
    a6ec:	push	{r3, r4, r5, lr}
    a6f0:	mov	r4, r0
    a6f4:	bl	96a4 <newtFinished@plt>
    a6f8:	cmp	r4, #0
    a6fc:	beq	a738 <fputs@plt+0xf2c>
    a700:	movw	r3, #20864	; 0x5180
    a704:	movt	r3, #1
    a708:	mov	r2, #5
    a70c:	movw	r1, #49492	; 0xc154
    a710:	mov	r0, #0
    a714:	movt	r1, #0
    a718:	ldr	r4, [r3]
    a71c:	bl	95c0 <dcgettext@plt>
    a720:	mov	r1, #1
    a724:	mov	r2, r0
    a728:	mov	r0, r4
    a72c:	bl	96e0 <__fprintf_chk@plt>
    a730:	mvn	r0, #0
    a734:	bl	97dc <exit@plt>
    a738:	movw	r3, #20860	; 0x517c
    a73c:	movt	r3, #1
    a740:	mov	r2, #5
    a744:	movw	r1, #49492	; 0xc154
    a748:	mov	r0, r4
    a74c:	movt	r1, #0
    a750:	ldr	r5, [r3]
    a754:	bl	95c0 <dcgettext@plt>
    a758:	mov	r1, #1
    a75c:	mov	r2, r0
    a760:	mov	r0, r5
    a764:	bl	96e0 <__fprintf_chk@plt>
    a768:	mov	r0, r4
    a76c:	b	a734 <fputs@plt+0xf28>
    a770:	cmp	r1, #0
    a774:	push	{r4, r5, r6, lr}
    a778:	mov	r5, r0
    a77c:	mov	r6, r2
    a780:	beq	a7e4 <fputs@plt+0xfd8>
    a784:	ldrb	r3, [r1]
    a788:	cmp	r3, #10
    a78c:	cmpne	r3, #0
    a790:	beq	a7dc <fputs@plt+0xfd0>
    a794:	add	ip, r1, #1
    a798:	mov	r4, ip
    a79c:	ldrb	r3, [ip], #1
    a7a0:	cmp	r3, #10
    a7a4:	cmpne	r3, #0
    a7a8:	bne	a798 <fputs@plt+0xf8c>
    a7ac:	cmp	r3, #10
    a7b0:	mov	r0, r1
    a7b4:	addeq	r4, r4, #1
    a7b8:	rsb	r1, r1, r4
    a7bc:	bl	96f8 <_newt_wstrlen@plt>
    a7c0:	mov	r1, r0
    a7c4:	str	r0, [r6]
    a7c8:	ldr	r0, [r5]
    a7cc:	bl	ad84 <fputs@plt+0x1578>
    a7d0:	str	r0, [r5]
    a7d4:	mov	r0, r4
    a7d8:	pop	{r4, r5, r6, pc}
    a7dc:	mov	r4, r1
    a7e0:	b	a7ac <fputs@plt+0xfa0>
    a7e4:	mov	r4, r1
    a7e8:	b	a7d4 <fputs@plt+0xfc8>
    a7ec:	cmp	r3, #0
    a7f0:	push	{r4, lr}
    a7f4:	mov	r4, r1
    a7f8:	beq	a824 <fputs@plt+0x1018>
    a7fc:	ldr	r3, [r0]
    a800:	cmp	r2, #1
    a804:	add	r3, r3, #4
    a808:	str	r3, [r0]
    a80c:	ldr	r0, [r1]
    a810:	beq	a84c <fputs@plt+0x1040>
    a814:	mov	r1, #20
    a818:	bl	ad84 <fputs@plt+0x1578>
    a81c:	str	r0, [r4]
    a820:	pop	{r4, pc}
    a824:	ldr	r3, [r0]
    a828:	cmp	r2, #1
    a82c:	add	r3, r3, #2
    a830:	str	r3, [r0]
    a834:	ldr	r0, [r1]
    a838:	beq	a84c <fputs@plt+0x1040>
    a83c:	mov	r1, #19
    a840:	bl	ad84 <fputs@plt+0x1578>
    a844:	str	r0, [r4]
    a848:	pop	{r4, pc}
    a84c:	mov	r1, #7
    a850:	bl	ad84 <fputs@plt+0x1578>
    a854:	str	r0, [r4]
    a858:	pop	{r4, pc}
    a85c:	push	{r4}		; (str r4, [sp, #-4]!)
    a860:	ldrb	r3, [r0]
    a864:	cmp	r3, #0
    a868:	beq	a8c0 <fputs@plt+0x10b4>
    a86c:	add	r1, r0, #1
    a870:	mov	r4, #10
    a874:	mov	r2, r1
    a878:	b	a89c <fputs@plt+0x1090>
    a87c:	strb	r3, [r2, #-1]
    a880:	ldrb	r3, [r0, #1]
    a884:	mov	ip, r2
    a888:	mov	r0, r1
    a88c:	add	r2, r2, #1
    a890:	cmp	r3, #0
    a894:	add	r1, r1, #1
    a898:	beq	a8c4 <fputs@plt+0x10b8>
    a89c:	cmp	r3, #92	; 0x5c
    a8a0:	bne	a87c <fputs@plt+0x1070>
    a8a4:	ldrb	ip, [r0, #1]
    a8a8:	cmp	ip, #110	; 0x6e
    a8ac:	strbeq	r4, [r2, #-1]
    a8b0:	moveq	r0, r1
    a8b4:	addeq	r1, r1, #1
    a8b8:	bne	a87c <fputs@plt+0x1070>
    a8bc:	b	a880 <fputs@plt+0x1074>
    a8c0:	mov	ip, r0
    a8c4:	mov	r3, #0
    a8c8:	strb	r3, [ip]
    a8cc:	pop	{r4}		; (ldr r4, [sp], #4)
    a8d0:	bx	lr
    a8d4:	push	{r4, r6, r7, r8, r9, sl, lr}
    a8d8:	movw	r6, #20848	; 0x5170
    a8dc:	movt	r6, #1
    a8e0:	sub	sp, sp, #116	; 0x74
    a8e4:	mov	r1, #0
    a8e8:	mov	r9, r0
    a8ec:	ldr	r3, [r6]
    a8f0:	mov	r2, r1
    a8f4:	str	r3, [sp, #108]	; 0x6c
    a8f8:	bl	965c <open64@plt>
    a8fc:	subs	r7, r0, #0
    a900:	blt	a980 <fputs@plt+0x1174>
    a904:	mov	r0, #3
    a908:	mov	r1, r7
    a90c:	mov	r2, sp
    a910:	bl	9590 <__fxstat64@plt>
    a914:	subs	r8, r0, #0
    a918:	bne	a980 <fputs@plt+0x1174>
    a91c:	ldr	r4, [sp, #48]	; 0x30
    a920:	add	r0, r4, #1
    a924:	bl	96c8 <malloc@plt>
    a928:	subs	sl, r0, #0
    a92c:	beq	a994 <fputs@plt+0x1188>
    a930:	mov	r2, r4
    a934:	mov	r1, sl
    a938:	mov	r0, r7
    a93c:	bl	95b4 <read@plt>
    a940:	ldrd	r2, [sp, #48]	; 0x30
    a944:	asr	r1, r0, #31
    a948:	cmp	r1, r3
    a94c:	cmpeq	r0, r2
    a950:	bne	a980 <fputs@plt+0x1174>
    a954:	mov	r0, r7
    a958:	bl	96bc <close@plt>
    a95c:	ldr	r1, [sp, #108]	; 0x6c
    a960:	ldr	r2, [r6]
    a964:	mov	r0, sl
    a968:	ldr	r3, [sp, #48]	; 0x30
    a96c:	cmp	r1, r2
    a970:	strb	r8, [sl, r3]
    a974:	bne	a990 <fputs@plt+0x1184>
    a978:	add	sp, sp, #116	; 0x74
    a97c:	pop	{r4, r6, r7, r8, r9, sl, pc}
    a980:	mov	r0, r9
    a984:	bl	956c <perror@plt>
    a988:	mvn	r0, #0
    a98c:	bl	97dc <exit@plt>
    a990:	bl	96d4 <__stack_chk_fail@plt>
    a994:	movw	r3, #20864	; 0x5180
    a998:	movt	r3, #1
    a99c:	mov	r2, #5
    a9a0:	movw	r1, #50768	; 0xc650
    a9a4:	movt	r1, #0
    a9a8:	ldr	r4, [r3]
    a9ac:	bl	95c0 <dcgettext@plt>
    a9b0:	mov	r3, r9
    a9b4:	mov	r1, #1
    a9b8:	mov	r2, r0
    a9bc:	mov	r0, r4
    a9c0:	bl	96e0 <__fprintf_chk@plt>
    a9c4:	mvn	r0, #0
    a9c8:	bl	97dc <exit@plt>
    a9cc:	push	{r4}		; (str r4, [sp, #-4]!)
    a9d0:	ldrb	r3, [r0]
    a9d4:	cmp	r3, #0
    a9d8:	beq	aa30 <fputs@plt+0x1224>
    a9dc:	add	r1, r0, #1
    a9e0:	mov	r4, #10
    a9e4:	mov	r2, r1
    a9e8:	b	aa0c <fputs@plt+0x1200>
    a9ec:	strb	r3, [r2, #-1]
    a9f0:	ldrb	r3, [r0, #1]
    a9f4:	mov	ip, r2
    a9f8:	mov	r0, r1
    a9fc:	add	r2, r2, #1
    aa00:	cmp	r3, #0
    aa04:	add	r1, r1, #1
    aa08:	beq	aa34 <fputs@plt+0x1228>
    aa0c:	cmp	r3, #92	; 0x5c
    aa10:	bne	a9ec <fputs@plt+0x11e0>
    aa14:	ldrb	ip, [r0, #1]
    aa18:	cmp	ip, #110	; 0x6e
    aa1c:	strbeq	r4, [r2, #-1]
    aa20:	moveq	r0, r1
    aa24:	addeq	r1, r1, #1
    aa28:	bne	a9ec <fputs@plt+0x11e0>
    aa2c:	b	a9f0 <fputs@plt+0x11e4>
    aa30:	mov	ip, r0
    aa34:	mov	r3, #0
    aa38:	strb	r3, [ip]
    aa3c:	pop	{r4}		; (ldr r4, [sp], #4)
    aa40:	bx	lr
    aa44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    aa48:	add	fp, sp, #28
    aa4c:	sub	sp, sp, #16
    aa50:	movw	r4, #20848	; 0x5170
    aa54:	movt	r4, #1
    aa58:	mov	r6, r2
    aa5c:	mov	r5, r0
    aa60:	ldr	r2, [r4]
    aa64:	mov	r0, r6
    aa68:	mov	r7, r1
    aa6c:	mov	r9, r3
    aa70:	ldr	r8, [fp, #4]
    aa74:	and	r9, r9, #4
    aa78:	str	r2, [fp, #-32]	; 0xffffffe0
    aa7c:	bl	9608 <strlen@plt>
    aa80:	mov	r1, r6
    aa84:	orr	r9, r9, #64	; 0x40
    aa88:	add	r3, r0, #15
    aa8c:	add	r2, r0, #1
    aa90:	bic	r3, r3, #7
    aa94:	sub	sp, sp, r3
    aa98:	add	r6, sp, #8
    aa9c:	mov	r0, r6
    aaa0:	bl	962c <memcpy@plt>
    aaa4:	mov	r0, r6
    aaa8:	bl	a9cc <fputs@plt+0x11c0>
    aaac:	mov	r2, r7
    aab0:	mov	r3, r5
    aab4:	mov	r1, #0
    aab8:	str	r9, [sp]
    aabc:	mov	r0, #1
    aac0:	bl	9440 <newtTextbox@plt>
    aac4:	mov	r1, r6
    aac8:	mov	r7, r0
    aacc:	bl	95f0 <newtTextboxSetText@plt>
    aad0:	mov	r0, r7
    aad4:	bl	94a0 <newtTextboxGetNumLines@plt>
    aad8:	cmp	r5, r0
    aadc:	mov	r6, r0
    aae0:	ble	aaf4 <fputs@plt+0x12e8>
    aae4:	mov	r0, r7
    aae8:	mov	r1, r6
    aaec:	bl	95d8 <newtTextboxSetHeight@plt>
    aaf0:	mov	r5, r6
    aaf4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    aaf8:	mov	r0, r7
    aafc:	ldr	r3, [r4]
    ab00:	str	r5, [r8]
    ab04:	cmp	r2, r3
    ab08:	bne	ab14 <fputs@plt+0x1308>
    ab0c:	sub	sp, fp, #28
    ab10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    ab14:	bl	96d4 <__stack_chk_fail@plt>
    ab18:	movw	r0, #51100	; 0xc79c
    ab1c:	movw	r1, #51264	; 0xc840
    ab20:	movt	r0, #0
    ab24:	movt	r1, #0
    ab28:	mov	r2, #5
    ab2c:	b	95c0 <dcgettext@plt>
    ab30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ab34:	sub	sp, sp, #28
    ab38:	movw	ip, #20848	; 0x5170
    ab3c:	movt	ip, #1
    ab40:	str	ip, [sp]
    ab44:	mov	ip, #0
    ab48:	ldr	lr, [sp]
    ab4c:	mov	r8, ip
    ab50:	str	r0, [sp, #4]
    ab54:	mov	r5, r1
    ab58:	mov	sl, r2
    ab5c:	mov	r9, r3
    ab60:	ldr	r0, [lr]
    ab64:	mov	r7, ip
    ab68:	ldr	r6, [sp, #4]
    ab6c:	str	ip, [sp, #12]
    ab70:	str	r0, [sp, #20]
    ab74:	str	ip, [sp, #16]
    ab78:	b	abc8 <fputs@plt+0x13bc>
    ab7c:	add	fp, r4, r7
    ab80:	cmp	fp, sl
    ab84:	bge	abe8 <fputs@plt+0x13dc>
    ab88:	ldr	r0, [sp, #8]
    ab8c:	bl	9758 <wcwidth@plt>
    ab90:	cmp	r0, #0
    ab94:	blt	abe8 <fputs@plt+0x13dc>
    ab98:	ldr	r2, [r9]
    ab9c:	add	ip, r0, r8
    aba0:	cmp	ip, r2
    aba4:	bgt	abe8 <fputs@plt+0x13dc>
    aba8:	mov	r0, r6
    abac:	mov	r1, r5
    abb0:	mov	r2, r4
    abb4:	mov	r8, ip
    abb8:	mov	r7, fp
    abbc:	add	r6, r6, r4
    abc0:	add	r5, r5, r4
    abc4:	bl	962c <memcpy@plt>
    abc8:	bl	94f4 <__ctype_get_mb_cur_max@plt>
    abcc:	mov	r1, r5
    abd0:	add	r3, sp, #12
    abd4:	mov	r2, r0
    abd8:	add	r0, sp, #8
    abdc:	bl	9584 <mbrtowc@plt>
    abe0:	subs	r4, r0, #0
    abe4:	bgt	ab7c <fputs@plt+0x1370>
    abe8:	ldr	ip, [sp, #4]
    abec:	mov	r3, #0
    abf0:	ldr	r2, [sp, #20]
    abf4:	mov	r0, r7
    abf8:	strb	r3, [ip, r7]
    abfc:	ldr	ip, [sp]
    ac00:	ldr	r3, [ip]
    ac04:	str	r8, [r9]
    ac08:	cmp	r2, r3
    ac0c:	bne	ac18 <fputs@plt+0x140c>
    ac10:	add	sp, sp, #28
    ac14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ac18:	bl	96d4 <__stack_chk_fail@plt>
    ac1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ac20:	sub	sp, sp, #12
    ac24:	mov	r7, r0
    ac28:	mov	r8, r2
    ac2c:	ldr	ip, [sp, #52]	; 0x34
    ac30:	mov	r6, r3
    ac34:	ldr	r9, [sp, #48]	; 0x30
    ac38:	tst	ip, #2
    ac3c:	bne	acdc <fputs@plt+0x14d0>
    ac40:	sub	r3, r1, #18
    ac44:	movw	sl, #21846	; 0x5556
    ac48:	movt	sl, #21845	; 0x5555
    ac4c:	movw	r5, #20892	; 0x519c
    ac50:	movt	r5, #1
    ac54:	movw	r4, #20832	; 0x5160
    ac58:	smull	r2, sl, sl, r3
    ac5c:	movt	r4, #1
    ac60:	ldr	r2, [r5]
    ac64:	ldr	r1, [r4, #4]
    ac68:	cmp	r2, #0
    ac6c:	ldr	fp, [r4]
    ac70:	rsb	r1, r1, r0
    ac74:	sub	r1, r1, #1
    ac78:	sub	sl, sl, r3, asr #31
    ac7c:	beq	ad5c <fputs@plt+0x1550>
    ac80:	mov	r0, sl
    ac84:	lsl	sl, sl, #1
    ac88:	blx	fp
    ac8c:	ldr	r2, [r5, #4]
    ac90:	ldr	r3, [r4, #4]
    ac94:	add	sl, sl, #9
    ac98:	cmp	r2, #0
    ac9c:	ldr	r4, [r4]
    aca0:	rsb	r7, r3, r7
    aca4:	sub	r7, r7, #1
    aca8:	str	r0, [r6]
    acac:	beq	ad3c <fputs@plt+0x1530>
    acb0:	mov	r1, r7
    acb4:	mov	r0, sl
    acb8:	blx	r4
    acbc:	mov	r3, #0
    acc0:	str	r0, [r9]
    acc4:	mov	r2, r0
    acc8:	ldr	r1, [r6]
    accc:	mov	r0, r8
    acd0:	add	sp, sp, #12
    acd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    acd8:	b	94dc <newtFormAddComponents@plt>
    acdc:	movw	r2, #20892	; 0x519c
    ace0:	movt	r2, #1
    ace4:	movw	r3, #20832	; 0x5160
    ace8:	movt	r3, #1
    acec:	sub	r1, r1, #8
    acf0:	ldr	r2, [r2]
    acf4:	ldr	r0, [r3, #4]
    acf8:	add	r1, r1, r1, lsr #31
    acfc:	cmp	r2, #0
    ad00:	rsb	r7, r0, r7
    ad04:	ldr	r4, [r3]
    ad08:	asr	r5, r1, #1
    ad0c:	sub	r1, r7, #1
    ad10:	beq	ad70 <fputs@plt+0x1564>
    ad14:	mov	r0, r5
    ad18:	blx	r4
    ad1c:	mov	r3, #0
    ad20:	str	r0, [r6]
    ad24:	mov	r0, r8
    ad28:	str	r3, [r9]
    ad2c:	ldr	r1, [r6]
    ad30:	add	sp, sp, #12
    ad34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ad38:	b	944c <newtFormAddComponent@plt>
    ad3c:	mov	r2, #5
    ad40:	movw	r0, #51100	; 0xc79c
    ad44:	movw	r1, #51268	; 0xc844
    ad48:	movt	r0, #0
    ad4c:	movt	r1, #0
    ad50:	bl	95c0 <dcgettext@plt>
    ad54:	mov	r2, r0
    ad58:	b	acb0 <fputs@plt+0x14a4>
    ad5c:	str	r1, [sp, #4]
    ad60:	bl	ab18 <fputs@plt+0x130c>
    ad64:	ldr	r1, [sp, #4]
    ad68:	mov	r2, r0
    ad6c:	b	ac80 <fputs@plt+0x1474>
    ad70:	str	r1, [sp, #4]
    ad74:	bl	ab18 <fputs@plt+0x130c>
    ad78:	ldr	r1, [sp, #4]
    ad7c:	mov	r2, r0
    ad80:	b	ad14 <fputs@plt+0x1508>
    ad84:	cmp	r0, r1
    ad88:	movlt	r0, r1
    ad8c:	bx	lr
    ad90:	cmp	r0, r1
    ad94:	movge	r0, r1
    ad98:	bx	lr
    ad9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ada0:	movw	r9, #20848	; 0x5170
    ada4:	movt	r9, #1
    ada8:	sub	sp, sp, #3072	; 0xc00
    adac:	sub	sp, sp, #12
    adb0:	mov	r5, r1
    adb4:	ldr	ip, [r9]
    adb8:	mov	r7, r0
    adbc:	movw	r1, #50824	; 0xc688
    adc0:	ldr	r0, [sp, #3120]	; 0xc30
    adc4:	movt	r1, #0
    adc8:	mov	r8, r3
    adcc:	mov	fp, r2
    add0:	str	ip, [sp, #3076]	; 0xc04
    add4:	bl	9698 <fdopen@plt>
    add8:	mov	r6, r0
    addc:	bl	9494 <setlinebuf@plt>
    ade0:	mov	r0, r8
    ade4:	bl	96ec <poptGetArg@plt>
    ade8:	cmp	r0, #0
    adec:	beq	b068 <fputs@plt+0x185c>
    adf0:	mov	r2, #10
    adf4:	add	r1, sp, #20
    adf8:	bl	9620 <strtoul@plt>
    adfc:	ldr	r3, [sp, #20]
    ae00:	ldrb	r4, [r3]
    ae04:	cmp	r4, #0
    ae08:	mov	ip, r0
    ae0c:	bne	b068 <fputs@plt+0x185c>
    ae10:	mov	r2, r7
    ae14:	sub	r1, fp, #2
    ae18:	add	r3, sp, #16
    ae1c:	sub	r0, r5, #3
    ae20:	str	r3, [sp]
    ae24:	mov	sl, #100	; 0x64
    ae28:	ldr	r3, [sp, #3124]	; 0xc34
    ae2c:	str	ip, [sp, #12]
    ae30:	bl	aa44 <fputs@plt+0x1238>
    ae34:	mov	r1, r4
    ae38:	mov	r2, r4
    ae3c:	mov	r7, r0
    ae40:	mov	r0, r4
    ae44:	bl	9614 <newtForm@plt>
    ae48:	sub	r1, r5, #2
    ae4c:	sub	r2, fp, #4
    ae50:	mov	fp, #0
    ae54:	strd	sl, [sp]
    ae58:	mov	sl, r4
    ae5c:	mov	r8, r0
    ae60:	mov	r0, #2
    ae64:	bl	9554 <newtScale@plt>
    ae68:	ldr	ip, [sp, #12]
    ae6c:	mov	r2, ip
    ae70:	asr	r3, ip, #31
    ae74:	mov	fp, r0
    ae78:	bl	9458 <newtScaleSet@plt>
    ae7c:	mov	r0, r8
    ae80:	mov	r1, r7
    ae84:	mov	r2, fp
    ae88:	mov	r3, r4
    ae8c:	bl	94dc <newtFormAddComponents@plt>
    ae90:	mov	r0, r8
    ae94:	bl	9464 <newtDrawForm@plt>
    ae98:	bl	9674 <newtRefresh@plt>
    ae9c:	add	r0, sp, #76	; 0x4c
    aea0:	movw	r1, #2999	; 0xbb7
    aea4:	mov	r2, r6
    aea8:	bl	9500 <fgets@plt>
    aeac:	cmp	r0, #0
    aeb0:	beq	b004 <fputs@plt+0x17f8>
    aeb4:	add	r0, sp, #76	; 0x4c
    aeb8:	bl	9608 <strlen@plt>
    aebc:	add	r1, sp, #3072	; 0xc00
    aec0:	add	r1, r1, #8
    aec4:	add	r0, r1, r0
    aec8:	strb	sl, [r0, #-3005]	; 0xfffff443
    aecc:	ldrb	r3, [sp, #76]	; 0x4c
    aed0:	cmp	r3, #88	; 0x58
    aed4:	bne	b03c <fputs@plt+0x1830>
    aed8:	ldrb	r3, [sp, #77]	; 0x4d
    aedc:	cmp	r3, #88	; 0x58
    aee0:	bne	b03c <fputs@plt+0x1830>
    aee4:	ldrb	r3, [sp, #78]	; 0x4e
    aee8:	cmp	r3, #88	; 0x58
    aeec:	bne	b03c <fputs@plt+0x1830>
    aef0:	ldrb	r3, [sp, #79]	; 0x4f
    aef4:	cmp	r3, #0
    aef8:	bne	b03c <fputs@plt+0x1830>
    aefc:	add	r0, sp, #24
    af00:	mov	r1, #49	; 0x31
    af04:	mov	r2, r6
    af08:	bl	9500 <fgets@plt>
    af0c:	cmp	r0, #0
    af10:	bne	af24 <fputs@plt+0x1718>
    af14:	mov	r0, r6
    af18:	bl	9650 <feof@plt>
    af1c:	cmp	r0, #0
    af20:	beq	aefc <fputs@plt+0x16f0>
    af24:	mov	r0, r6
    af28:	bl	9650 <feof@plt>
    af2c:	subs	r5, r0, #0
    af30:	bne	b014 <fputs@plt+0x1808>
    af34:	add	r0, sp, #24
    af38:	mov	r4, r5
    af3c:	bl	9608 <strlen@plt>
    af40:	add	r3, sp, #3072	; 0xc00
    af44:	add	r3, r3, #8
    af48:	add	r0, r3, r0
    af4c:	strb	r5, [r0, #-3057]	; 0xfffff40f
    af50:	add	r1, sp, #76	; 0x4c
    af54:	mov	r2, r6
    af58:	add	r5, r1, r4
    af5c:	rsb	r1, r4, #2992	; 0xbb0
    af60:	add	r1, r1, #7
    af64:	mov	r0, r5
    af68:	bl	9500 <fgets@plt>
    af6c:	cmp	r0, #0
    af70:	beq	af98 <fputs@plt+0x178c>
    af74:	movw	r1, #51276	; 0xc84c
    af78:	mov	r0, r5
    af7c:	movt	r1, #0
    af80:	bl	97b8 <strcmp@plt>
    af84:	cmp	r0, #0
    af88:	beq	b044 <fputs@plt+0x1838>
    af8c:	add	r0, sp, #76	; 0x4c
    af90:	bl	9608 <strlen@plt>
    af94:	mov	r4, r0
    af98:	mov	r0, r6
    af9c:	bl	9650 <feof@plt>
    afa0:	cmp	r0, #0
    afa4:	beq	af50 <fputs@plt+0x1744>
    afa8:	cmp	r4, #0
    afac:	strble	sl, [sp, #76]	; 0x4c
    afb0:	ble	afcc <fputs@plt+0x17c0>
    afb4:	add	r0, sp, #76	; 0x4c
    afb8:	bl	9608 <strlen@plt>
    afbc:	add	r3, sp, #3072	; 0xc00
    afc0:	add	r3, r3, #8
    afc4:	add	r0, r3, r0
    afc8:	strb	sl, [r0, #-3005]	; 0xfffff443
    afcc:	add	r0, sp, #76	; 0x4c
    afd0:	bl	a9cc <fputs@plt+0x11c0>
    afd4:	mov	r0, r7
    afd8:	add	r1, sp, #76	; 0x4c
    afdc:	bl	95f0 <newtTextboxSetText@plt>
    afe0:	add	r0, sp, #24
    afe4:	mov	r2, #10
    afe8:	add	r1, sp, #20
    afec:	bl	9620 <strtoul@plt>
    aff0:	ldr	r3, [sp, #20]
    aff4:	ldrb	r3, [r3]
    aff8:	cmp	r3, #0
    affc:	mov	r2, r0
    b000:	beq	b04c <fputs@plt+0x1840>
    b004:	mov	r0, r6
    b008:	bl	9650 <feof@plt>
    b00c:	cmp	r0, #0
    b010:	beq	ae9c <fputs@plt+0x1690>
    b014:	mov	r0, r8
    b018:	bl	9434 <newtFormDestroy@plt>
    b01c:	mov	r0, #0
    b020:	ldr	r2, [sp, #3076]	; 0xc04
    b024:	ldr	r3, [r9]
    b028:	cmp	r2, r3
    b02c:	bne	b070 <fputs@plt+0x1864>
    b030:	add	sp, sp, #3072	; 0xc00
    b034:	add	sp, sp, #12
    b038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b03c:	add	r0, sp, #76	; 0x4c
    b040:	b	afe4 <fputs@plt+0x17d8>
    b044:	strb	r0, [r5]
    b048:	b	afa8 <fputs@plt+0x179c>
    b04c:	mov	r0, fp
    b050:	asr	r3, r2, #31
    b054:	bl	9458 <newtScaleSet@plt>
    b058:	mov	r0, r8
    b05c:	bl	9464 <newtDrawForm@plt>
    b060:	bl	9674 <newtRefresh@plt>
    b064:	b	b004 <fputs@plt+0x17f8>
    b068:	mvn	r0, #0
    b06c:	b	b020 <fputs@plt+0x1814>
    b070:	bl	96d4 <__stack_chk_fail@plt>
    b074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b078:	sub	sp, sp, #44	; 0x2c
    b07c:	movw	r5, #20848	; 0x5170
    b080:	movt	r5, #1
    b084:	ldr	ip, [sp, #80]	; 0x50
    b088:	mov	r4, r0
    b08c:	ldr	lr, [r5]
    b090:	mov	r0, r3
    b094:	tst	ip, #16
    b098:	movw	ip, #2053	; 0x805
    b09c:	mov	r7, r1
    b0a0:	mov	r6, r2
    b0a4:	moveq	ip, #5
    b0a8:	str	lr, [sp, #36]	; 0x24
    b0ac:	str	ip, [sp, #12]
    b0b0:	sub	r8, r6, #2
    b0b4:	ldr	r9, [sp, #84]	; 0x54
    b0b8:	bl	96ec <poptGetArg@plt>
    b0bc:	movw	r3, #20832	; 0x5160
    b0c0:	movt	r3, #1
    b0c4:	sub	fp, r7, #3
    b0c8:	mov	r2, r4
    b0cc:	ldr	lr, [r3, #4]
    b0d0:	mov	r1, r8
    b0d4:	ldr	r3, [sp, #80]	; 0x50
    b0d8:	add	r4, sp, #32
    b0dc:	str	r4, [sp]
    b0e0:	mov	sl, #0
    b0e4:	str	r0, [sp, #28]
    b0e8:	rsb	r0, lr, fp
    b0ec:	bl	aa44 <fputs@plt+0x1238>
    b0f0:	mov	r1, sl
    b0f4:	mov	r2, sl
    b0f8:	mov	fp, r0
    b0fc:	mov	r0, sl
    b100:	bl	9614 <newtForm@plt>
    b104:	add	lr, sp, #40	; 0x28
    b108:	ldr	ip, [sp, #12]
    b10c:	mov	r3, r8
    b110:	ldr	r2, [lr, #-12]!
    b114:	ldr	r1, [sp, #32]
    b118:	str	ip, [sp, #4]
    b11c:	str	lr, [sp]
    b120:	add	r1, r1, #1
    b124:	mov	r4, r0
    b128:	mov	r0, #1
    b12c:	bl	95fc <newtEntry@plt>
    b130:	mov	r1, fp
    b134:	mov	r3, sl
    b138:	mov	r2, r0
    b13c:	mov	r0, r4
    b140:	bl	94dc <newtFormAddComponents@plt>
    b144:	ldr	ip, [sp, #80]	; 0x50
    b148:	add	r3, sp, #20
    b14c:	mov	r0, r7
    b150:	mov	r1, r6
    b154:	mov	r2, r4
    b158:	str	ip, [sp, #4]
    b15c:	add	ip, sp, #24
    b160:	str	ip, [sp]
    b164:	bl	ac1c <fputs@plt+0x1410>
    b168:	mov	r0, r4
    b16c:	bl	97c4 <newtRunForm@plt>
    b170:	ldr	r3, [sp, #24]
    b174:	str	sl, [r9]
    b178:	cmp	r0, r3
    b17c:	beq	b1bc <fputs@plt+0x19b0>
    b180:	cmp	r0, sl
    b184:	moveq	sl, #2
    b188:	beq	b198 <fputs@plt+0x198c>
    b18c:	ldr	r0, [sp, #28]
    b190:	bl	9788 <__strdup@plt>
    b194:	str	r0, [r9]
    b198:	mov	r0, r4
    b19c:	bl	9434 <newtFormDestroy@plt>
    b1a0:	ldr	r2, [sp, #36]	; 0x24
    b1a4:	ldr	r3, [r5]
    b1a8:	mov	r0, sl
    b1ac:	cmp	r2, r3
    b1b0:	bne	b1c4 <fputs@plt+0x19b8>
    b1b4:	add	sp, sp, #44	; 0x2c
    b1b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b1bc:	mov	sl, #1
    b1c0:	b	b198 <fputs@plt+0x198c>
    b1c4:	bl	96d4 <__stack_chk_fail@plt>
    b1c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b1cc:	movw	ip, #20848	; 0x5170
    b1d0:	sub	sp, sp, #284	; 0x11c
    b1d4:	movt	ip, #1
    b1d8:	mov	r6, r3
    b1dc:	mov	r3, #0
    b1e0:	str	ip, [sp, #28]
    b1e4:	ldr	ip, [ip]
    b1e8:	str	r0, [sp, #40]	; 0x28
    b1ec:	mov	r0, #40	; 0x28
    b1f0:	str	r1, [sp, #44]	; 0x2c
    b1f4:	str	ip, [sp, #276]	; 0x114
    b1f8:	ldr	ip, [sp, #328]	; 0x148
    b1fc:	str	r2, [sp, #36]	; 0x24
    b200:	str	r3, [sp, #60]	; 0x3c
    b204:	ldr	r7, [sp, #324]	; 0x144
    b208:	str	ip, [sp, #48]	; 0x30
    b20c:	bl	96c8 <malloc@plt>
    b210:	subs	r8, r0, #0
    b214:	beq	b354 <fputs@plt+0x1b48>
    b218:	mov	r0, r6
    b21c:	bl	96ec <poptGetArg@plt>
    b220:	cmp	r0, #0
    b224:	beq	b354 <fputs@plt+0x1b48>
    b228:	add	r1, sp, #64	; 0x40
    b22c:	mov	r2, #10
    b230:	bl	9620 <strtoul@plt>
    b234:	ldr	r3, [sp, #64]	; 0x40
    b238:	ldrb	r3, [r3]
    b23c:	cmp	r3, #0
    b240:	str	r0, [sp, #32]
    b244:	bne	b354 <fputs@plt+0x1b48>
    b248:	str	r3, [sp, #16]
    b24c:	mov	sl, r3
    b250:	mov	r4, r3
    b254:	ldr	r3, [sp, #320]	; 0x140
    b258:	movw	r2, #51280	; 0xc850
    b25c:	mvn	fp, #0
    b260:	movt	r2, #0
    b264:	and	r3, r3, #1
    b268:	str	r2, [sp, #24]
    b26c:	mov	r9, #5
    b270:	str	r3, [sp, #20]
    b274:	b	b290 <fputs@plt+0x1a84>
    b278:	ldr	r0, [r5, #4]
    b27c:	mvn	r1, #0
    b280:	bl	96f8 <_newt_wstrlen@plt>
    b284:	cmp	r0, sl
    b288:	bhi	b320 <fputs@plt+0x1b14>
    b28c:	add	r4, r4, #1
    b290:	mov	r0, r6
    b294:	bl	96ec <poptGetArg@plt>
    b298:	subs	r3, r0, #0
    b29c:	beq	b374 <fputs@plt+0x1b68>
    b2a0:	cmp	r9, r4
    b2a4:	beq	b334 <fputs@plt+0x1b28>
    b2a8:	add	r5, r8, r4, lsl #3
    b2ac:	cmp	r7, #0
    b2b0:	str	r3, [r5, #4]
    b2b4:	beq	b2cc <fputs@plt+0x1ac0>
    b2b8:	mov	r1, r3
    b2bc:	mov	r0, r7
    b2c0:	bl	97b8 <strcmp@plt>
    b2c4:	cmp	r0, #0
    b2c8:	moveq	fp, r4
    b2cc:	mov	r0, r6
    b2d0:	bl	96ec <poptGetArg@plt>
    b2d4:	cmp	r0, #0
    b2d8:	beq	b354 <fputs@plt+0x1b48>
    b2dc:	ldr	ip, [sp, #20]
    b2e0:	mvn	r1, #0
    b2e4:	cmp	ip, #0
    b2e8:	streq	r0, [r5]
    b2ec:	ldrne	r2, [sp, #24]
    b2f0:	movwne	r0, #51280	; 0xc850
    b2f4:	movtne	r0, #0
    b2f8:	strne	r2, [r5]
    b2fc:	bl	96f8 <_newt_wstrlen@plt>
    b300:	ldr	ip, [sp, #16]
    b304:	cmp	r0, ip
    b308:	bls	b278 <fputs@plt+0x1a6c>
    b30c:	ldr	r0, [r5]
    b310:	mvn	r1, #0
    b314:	bl	96f8 <_newt_wstrlen@plt>
    b318:	str	r0, [sp, #16]
    b31c:	b	b278 <fputs@plt+0x1a6c>
    b320:	ldr	r0, [r5, #4]
    b324:	mvn	r1, #0
    b328:	bl	96f8 <_newt_wstrlen@plt>
    b32c:	mov	sl, r0
    b330:	b	b28c <fputs@plt+0x1a80>
    b334:	add	r9, r9, #5
    b338:	mov	r0, r8
    b33c:	str	r3, [sp, #12]
    b340:	lsl	r1, r9, #3
    b344:	bl	9764 <realloc@plt>
    b348:	ldr	r3, [sp, #12]
    b34c:	subs	r8, r0, #0
    b350:	bne	b2a8 <fputs@plt+0x1a9c>
    b354:	mvn	r0, #0
    b358:	ldr	ip, [sp, #28]
    b35c:	ldr	r2, [sp, #276]	; 0x114
    b360:	ldr	r3, [ip]
    b364:	cmp	r2, r3
    b368:	bne	b644 <fputs@plt+0x1e38>
    b36c:	add	sp, sp, #284	; 0x11c
    b370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b374:	cmp	r4, #0
    b378:	beq	b354 <fputs@plt+0x1b48>
    b37c:	ldr	ip, [sp, #320]	; 0x140
    b380:	mov	r1, r3
    b384:	mov	r2, r3
    b388:	ands	r6, ip, #32
    b38c:	movne	sl, #0
    b390:	bl	9614 <newtForm@plt>
    b394:	movw	r3, #20832	; 0x5160
    b398:	movt	r3, #1
    b39c:	ldr	ip, [sp, #44]	; 0x2c
    b3a0:	ldr	r3, [r3, #4]
    b3a4:	ldr	lr, [sp, #36]	; 0x24
    b3a8:	ldr	r2, [sp, #40]	; 0x28
    b3ac:	sub	r1, lr, #2
    b3b0:	str	r0, [sp, #24]
    b3b4:	sub	r0, ip, #4
    b3b8:	add	ip, sp, #68	; 0x44
    b3bc:	str	ip, [sp]
    b3c0:	ldr	ip, [sp, #32]
    b3c4:	rsb	r0, r3, r0
    b3c8:	ldr	r3, [sp, #320]	; 0x140
    b3cc:	rsb	r0, ip, r0
    b3d0:	bl	aa44 <fputs@plt+0x1238>
    b3d4:	ldr	ip, [sp, #32]
    b3d8:	movw	r3, #20840	; 0x5168
    b3dc:	movt	r3, #1
    b3e0:	cmp	ip, r4
    b3e4:	ldr	ip, [sp, #16]
    b3e8:	ldr	r1, [r3]
    b3ec:	add	r5, sl, ip
    b3f0:	movlt	r3, #2
    b3f4:	movge	r3, #0
    b3f8:	ldr	ip, [sp, #36]	; 0x24
    b3fc:	add	r5, r5, r3
    b400:	sub	r1, r1, #10
    b404:	movlt	r3, #5
    b408:	movge	r3, #1
    b40c:	cmp	r5, r1
    b410:	movlt	r9, r5
    b414:	movge	r9, r1
    b418:	ldr	r1, [sp, #68]	; 0x44
    b41c:	ldr	r2, [sp, #32]
    b420:	add	r1, r1, #1
    b424:	str	r0, [sp, #40]	; 0x28
    b428:	rsb	r0, r9, ip
    b42c:	add	r0, r0, r0, lsr #31
    b430:	asr	r0, r0, #1
    b434:	bl	94b8 <newtListbox@plt>
    b438:	ldr	ip, [sp, #16]
    b43c:	cmp	ip, #0
    b440:	str	r0, [sp, #20]
    b444:	beq	b470 <fputs@plt+0x1c64>
    b448:	cmp	r5, r9
    b44c:	addgt	r3, r9, r9, lsr #31
    b450:	addle	r9, sl, #1
    b454:	ldrle	ip, [sp, #16]
    b458:	asrgt	r3, r3, #1
    b45c:	subgt	r3, r3, #2
    b460:	addle	ip, ip, #1
    b464:	strgt	r3, [sp, #16]
    b468:	movgt	r9, r3
    b46c:	strle	ip, [sp, #16]
    b470:	cmp	r6, #0
    b474:	bne	b5f8 <fputs@plt+0x1dec>
    b478:	add	ip, sp, #72	; 0x48
    b47c:	mov	sl, r6
    b480:	add	r6, sp, #76	; 0x4c
    b484:	str	fp, [sp, #52]	; 0x34
    b488:	mov	r7, sl
    b48c:	mov	r5, #32
    b490:	mov	fp, ip
    b494:	str	ip, [sp, #32]
    b498:	add	r1, r8, sl
    b49c:	mov	r2, #200	; 0xc8
    b4a0:	mov	r0, r6
    b4a4:	mov	r3, fp
    b4a8:	ldr	r1, [r1, #4]
    b4ac:	str	r9, [sp, #72]	; 0x48
    b4b0:	bl	ab30 <fputs@plt+0x1324>
    b4b4:	ldr	r1, [sp, #72]	; 0x48
    b4b8:	rsb	r1, r1, r9
    b4bc:	cmp	r1, #0
    b4c0:	mov	r2, r0
    b4c4:	ble	b4f8 <fputs@plt+0x1cec>
    b4c8:	cmp	r0, #198	; 0xc6
    b4cc:	bgt	b4f8 <fputs@plt+0x1cec>
    b4d0:	sub	r3, r0, #1
    b4d4:	add	r1, r1, r0
    b4d8:	add	r3, r6, r3
    b4dc:	b	b4e8 <fputs@plt+0x1cdc>
    b4e0:	cmp	r2, #199	; 0xc7
    b4e4:	beq	b4f8 <fputs@plt+0x1cec>
    b4e8:	add	r2, r2, #1
    b4ec:	strb	r5, [r3, #1]!
    b4f0:	cmp	r2, r1
    b4f4:	bne	b4e0 <fputs@plt+0x1cd4>
    b4f8:	add	lr, sp, #280	; 0x118
    b4fc:	mov	ip, #0
    b500:	add	r1, lr, r2
    b504:	add	r0, r6, r2
    b508:	mov	r3, fp
    b50c:	rsb	r2, r2, #200	; 0xc8
    b510:	strb	ip, [r1, #-204]	; 0xffffff34
    b514:	ldr	ip, [sp, #16]
    b518:	ldr	r1, [r8, sl]
    b51c:	add	sl, sl, #8
    b520:	str	ip, [sp, #72]	; 0x48
    b524:	bl	ab30 <fputs@plt+0x1324>
    b528:	mov	r2, r7
    b52c:	ldr	r0, [sp, #20]
    b530:	mov	r1, r6
    b534:	add	r7, r7, #1
    b538:	bl	97f4 <newtListboxAppendEntry@plt>
    b53c:	cmp	r7, r4
    b540:	blt	b498 <fputs@plt+0x1c8c>
    b544:	ldr	fp, [sp, #52]	; 0x34
    b548:	cmn	fp, #1
    b54c:	beq	b55c <fputs@plt+0x1d50>
    b550:	mov	r1, fp
    b554:	ldr	r0, [sp, #20]
    b558:	bl	9794 <newtListboxSetCurrent@plt>
    b55c:	ldr	r1, [sp, #40]	; 0x28
    b560:	mov	r3, #0
    b564:	ldr	r0, [sp, #24]
    b568:	ldr	r2, [sp, #20]
    b56c:	bl	94dc <newtFormAddComponents@plt>
    b570:	ldr	ip, [sp, #320]	; 0x140
    b574:	ldr	r3, [sp, #32]
    b578:	ldr	r2, [sp, #24]
    b57c:	str	ip, [sp, #4]
    b580:	add	ip, sp, #60	; 0x3c
    b584:	ldr	r0, [sp, #44]	; 0x2c
    b588:	str	ip, [sp]
    b58c:	ldr	r1, [sp, #36]	; 0x24
    b590:	bl	ac1c <fputs@plt+0x1410>
    b594:	ldr	r0, [sp, #24]
    b598:	bl	97c4 <newtRunForm@plt>
    b59c:	ldr	ip, [sp, #48]	; 0x30
    b5a0:	mov	r3, #0
    b5a4:	ldr	r2, [sp, #60]	; 0x3c
    b5a8:	str	r3, [ip]
    b5ac:	subs	r4, r0, #0
    b5b0:	moveq	r4, #2
    b5b4:	beq	b5e0 <fputs@plt+0x1dd4>
    b5b8:	subs	r3, r4, r2
    b5bc:	ldr	r0, [sp, #20]
    b5c0:	rsbs	r4, r3, #0
    b5c4:	adcs	r4, r4, r3
    b5c8:	bl	94e8 <newtListboxGetCurrent@plt>
    b5cc:	add	r0, r8, r0, lsl #3
    b5d0:	ldr	r0, [r0, #4]
    b5d4:	bl	9788 <__strdup@plt>
    b5d8:	ldr	ip, [sp, #48]	; 0x30
    b5dc:	str	r0, [ip]
    b5e0:	ldr	r0, [sp, #24]
    b5e4:	bl	9434 <newtFormDestroy@plt>
    b5e8:	mov	r0, r8
    b5ec:	bl	95a8 <free@plt>
    b5f0:	mov	r0, r4
    b5f4:	b	b358 <fputs@plt+0x1b4c>
    b5f8:	ldr	r7, [sp, #20]
    b5fc:	add	r6, sp, #76	; 0x4c
    b600:	mov	r5, #0
    b604:	ldr	r3, [r8, r5, lsl #3]
    b608:	mov	r1, #200	; 0xc8
    b60c:	movw	r2, #51284	; 0xc854
    b610:	mov	r0, r6
    b614:	movt	r2, #0
    b618:	bl	9740 <snprintf@plt>
    b61c:	mov	r2, r5
    b620:	mov	r0, r7
    b624:	mov	r1, r6
    b628:	add	r5, r5, #1
    b62c:	bl	97f4 <newtListboxAppendEntry@plt>
    b630:	cmp	r5, r4
    b634:	blt	b604 <fputs@plt+0x1df8>
    b638:	add	ip, sp, #72	; 0x48
    b63c:	str	ip, [sp, #32]
    b640:	b	b548 <fputs@plt+0x1d3c>
    b644:	bl	96d4 <__stack_chk_fail@plt>
    b648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b64c:	movw	ip, #20848	; 0x5170
    b650:	sub	sp, sp, #300	; 0x12c
    b654:	movt	ip, #1
    b658:	mov	r7, r3
    b65c:	mov	r3, #0
    b660:	str	ip, [sp, #28]
    b664:	ldr	ip, [ip]
    b668:	str	r0, [sp, #40]	; 0x28
    b66c:	mov	r0, #60	; 0x3c
    b670:	str	r1, [sp, #52]	; 0x34
    b674:	str	ip, [sp, #292]	; 0x124
    b678:	ldr	ip, [sp, #344]	; 0x158
    b67c:	str	r2, [sp, #36]	; 0x24
    b680:	str	r3, [sp, #60]	; 0x3c
    b684:	str	ip, [sp, #48]	; 0x30
    b688:	bl	96c8 <malloc@plt>
    b68c:	mov	r9, r0
    b690:	mov	r0, #5
    b694:	bl	96c8 <malloc@plt>
    b698:	cmp	r9, #0
    b69c:	cmpne	r0, #0
    b6a0:	mov	r8, r0
    b6a4:	beq	b7cc <fputs@plt+0x1fc0>
    b6a8:	mov	r0, r7
    b6ac:	bl	96ec <poptGetArg@plt>
    b6b0:	cmp	r0, #0
    b6b4:	beq	b7cc <fputs@plt+0x1fc0>
    b6b8:	add	r1, sp, #64	; 0x40
    b6bc:	mov	r2, #10
    b6c0:	bl	9620 <strtoul@plt>
    b6c4:	ldr	r3, [sp, #64]	; 0x40
    b6c8:	ldrb	sl, [r3]
    b6cc:	cmp	sl, #0
    b6d0:	str	r0, [sp, #44]	; 0x2c
    b6d4:	bne	b7cc <fputs@plt+0x1fc0>
    b6d8:	ldr	ip, [sp, #340]	; 0x154
    b6dc:	movw	r2, #51280	; 0xc850
    b6e0:	mov	r4, sl
    b6e4:	movt	r2, #0
    b6e8:	mov	r6, #5
    b6ec:	str	r2, [sp, #24]
    b6f0:	and	fp, ip, #1
    b6f4:	b	b724 <fputs@plt+0x1f18>
    b6f8:	ldrb	r2, [r3, #1]
    b6fc:	cmp	r2, #0
    b700:	bne	b774 <fputs@plt+0x1f68>
    b704:	mov	r3, #42	; 0x2a
    b708:	strb	r3, [r8, r4]
    b70c:	ldr	r0, [r5, #4]
    b710:	mvn	r1, #0
    b714:	bl	96f8 <_newt_wstrlen@plt>
    b718:	cmp	r0, sl
    b71c:	bhi	b82c <fputs@plt+0x2020>
    b720:	add	r4, r4, #1
    b724:	mov	r0, r7
    b728:	bl	96ec <poptGetArg@plt>
    b72c:	subs	ip, r0, #0
    b730:	beq	b840 <fputs@plt+0x2034>
    b734:	cmp	r6, r4
    b738:	beq	b7ec <fputs@plt+0x1fe0>
    b73c:	add	r5, r4, r4, lsl #1
    b740:	mov	r0, r7
    b744:	add	r5, r9, r5, lsl #2
    b748:	str	ip, [r5, #4]
    b74c:	bl	96ec <poptGetArg@plt>
    b750:	subs	r3, r0, #0
    b754:	beq	b7cc <fputs@plt+0x1fc0>
    b758:	cmp	fp, #0
    b75c:	beq	b7b8 <fputs@plt+0x1fac>
    b760:	ldr	r2, [sp, #24]
    b764:	str	r2, [r5]
    b768:	ldrb	r2, [r3]
    b76c:	cmp	r2, #49	; 0x31
    b770:	beq	b6f8 <fputs@plt+0x1eec>
    b774:	mov	r0, r3
    b778:	movw	r1, #51040	; 0xc760
    b77c:	movt	r1, #0
    b780:	str	r3, [sp, #20]
    b784:	bl	9518 <strcasecmp@plt>
    b788:	ldr	r3, [sp, #20]
    b78c:	cmp	r0, #0
    b790:	beq	b704 <fputs@plt+0x1ef8>
    b794:	mov	r0, r3
    b798:	movw	r1, #51288	; 0xc858
    b79c:	movt	r1, #0
    b7a0:	bl	9518 <strcasecmp@plt>
    b7a4:	cmp	r0, #0
    b7a8:	movne	ip, #32
    b7ac:	strbne	ip, [r8, r4]
    b7b0:	bne	b70c <fputs@plt+0x1f00>
    b7b4:	b	b704 <fputs@plt+0x1ef8>
    b7b8:	str	r3, [r5]
    b7bc:	mov	r0, r7
    b7c0:	bl	96ec <poptGetArg@plt>
    b7c4:	subs	r3, r0, #0
    b7c8:	bne	b768 <fputs@plt+0x1f5c>
    b7cc:	mvn	r0, #0
    b7d0:	ldr	ip, [sp, #28]
    b7d4:	ldr	r2, [sp, #292]	; 0x124
    b7d8:	ldr	r3, [ip]
    b7dc:	cmp	r2, r3
    b7e0:	bne	bc10 <fputs@plt+0x2404>
    b7e4:	add	sp, sp, #300	; 0x12c
    b7e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b7ec:	add	r6, r6, #5
    b7f0:	mov	r0, r9
    b7f4:	str	ip, [sp, #20]
    b7f8:	add	r1, r6, r6, lsl #1
    b7fc:	lsl	r1, r1, #2
    b800:	bl	9764 <realloc@plt>
    b804:	mov	r1, r6
    b808:	mov	r9, r0
    b80c:	mov	r0, r8
    b810:	bl	9764 <realloc@plt>
    b814:	ldr	ip, [sp, #20]
    b818:	cmp	r9, #0
    b81c:	cmpne	r0, #0
    b820:	mov	r8, r0
    b824:	bne	b73c <fputs@plt+0x1f30>
    b828:	b	b7cc <fputs@plt+0x1fc0>
    b82c:	ldr	r0, [r5, #4]
    b830:	mvn	r1, #0
    b834:	bl	96f8 <_newt_wstrlen@plt>
    b838:	mov	sl, r0
    b83c:	b	b720 <fputs@plt+0x1f14>
    b840:	mov	r1, ip
    b844:	mov	r2, ip
    b848:	str	ip, [sp, #20]
    b84c:	bl	9614 <newtForm@plt>
    b850:	ldr	lr, [sp, #52]	; 0x34
    b854:	movw	r3, #20832	; 0x5160
    b858:	movt	r3, #1
    b85c:	add	r1, sp, #68	; 0x44
    b860:	ldr	r2, [sp, #40]	; 0x28
    b864:	ldr	r3, [r3, #4]
    b868:	str	r1, [sp]
    b86c:	str	r0, [sp, #24]
    b870:	sub	r0, lr, #3
    b874:	ldr	lr, [sp, #36]	; 0x24
    b878:	rsb	r0, r3, r0
    b87c:	ldr	r3, [sp, #340]	; 0x154
    b880:	sub	r1, lr, #2
    b884:	ldr	lr, [sp, #44]	; 0x2c
    b888:	rsb	r0, lr, r0
    b88c:	bl	aa44 <fputs@plt+0x1238>
    b890:	ldr	r1, [sp, #44]	; 0x2c
    b894:	ldr	ip, [sp, #20]
    b898:	cmp	r1, r4
    b89c:	movge	r5, ip
    b8a0:	str	r0, [sp, #40]	; 0x28
    b8a4:	blt	bb28 <fputs@plt+0x231c>
    b8a8:	mov	r1, #0
    b8ac:	mov	r0, r5
    b8b0:	mov	r2, r1
    b8b4:	add	r6, sp, #72	; 0x48
    b8b8:	bl	9614 <newtForm@plt>
    b8bc:	mov	r1, #9
    b8c0:	mov	r5, r0
    b8c4:	bl	9728 <newtFormSetBackground@plt>
    b8c8:	mov	r1, #20
    b8cc:	str	sl, [sp, #4]
    b8d0:	movw	r2, #51292	; 0xc85c
    b8d4:	mov	r0, r6
    b8d8:	movt	r2, #0
    b8dc:	mov	r3, r1
    b8e0:	str	r2, [sp]
    b8e4:	mov	r2, #1
    b8e8:	bl	968c <__snprintf_chk@plt>
    b8ec:	cmp	r4, #0
    b8f0:	beq	b9cc <fputs@plt+0x21c0>
    b8f4:	mov	r7, r9
    b8f8:	mov	sl, #0
    b8fc:	ldr	fp, [sp, #336]	; 0x150
    b900:	b	b968 <fputs@plt+0x215c>
    b904:	ldrb	r3, [r8, sl]
    b908:	mov	r0, #4
    b90c:	ldr	r1, [sp, #68]	; 0x44
    b910:	subs	r3, r3, #32
    b914:	add	r1, r1, #1
    b918:	movne	r3, #1
    b91c:	cmp	sl, #0
    b920:	add	r1, r1, sl
    b924:	ldrne	r2, [r7, #-4]
    b928:	moveq	r2, sl
    b92c:	str	r2, [sp]
    b930:	add	r2, sp, #92	; 0x5c
    b934:	bl	95e4 <newtRadiobutton@plt>
    b938:	mov	r3, r0
    b93c:	str	r3, [r7, #8]
    b940:	mov	r1, #1
    b944:	mov	r2, #0
    b948:	add	sl, sl, r1
    b94c:	bl	9638 <newtCheckboxSetFlags@plt>
    b950:	ldr	r1, [r7, #8]
    b954:	mov	r0, r5
    b958:	bl	944c <newtFormAddComponent@plt>
    b95c:	cmp	sl, r4
    b960:	add	r7, r7, #12
    b964:	beq	b9cc <fputs@plt+0x21c0>
    b968:	str	r6, [sp]
    b96c:	mov	r1, #200	; 0xc8
    b970:	ldr	ip, [r7, #4]
    b974:	mov	r3, r1
    b978:	add	r0, sp, #92	; 0x5c
    b97c:	mov	r2, #1
    b980:	str	ip, [sp, #4]
    b984:	ldr	ip, [r7]
    b988:	str	ip, [sp, #8]
    b98c:	bl	968c <__snprintf_chk@plt>
    b990:	cmp	fp, #0
    b994:	bne	b904 <fputs@plt+0x20f8>
    b998:	mov	ip, r8
    b99c:	ldr	r1, [sp, #68]	; 0x44
    b9a0:	ldrb	r3, [ip, sl]!
    b9a4:	mov	r0, #4
    b9a8:	add	r1, r1, #1
    b9ac:	str	fp, [sp]
    b9b0:	add	r1, r1, sl
    b9b4:	add	r2, sp, #92	; 0x5c
    b9b8:	str	ip, [sp, #4]
    b9bc:	bl	9488 <newtCheckbox@plt>
    b9c0:	mov	r3, r0
    b9c4:	str	r3, [r7, #8]
    b9c8:	b	b940 <fputs@plt+0x2134>
    b9cc:	mov	r0, r5
    b9d0:	ldr	r1, [sp, #44]	; 0x2c
    b9d4:	bl	96b0 <newtFormSetHeight@plt>
    b9d8:	ldr	ip, [sp, #36]	; 0x24
    b9dc:	mov	r0, r5
    b9e0:	mov	r6, #0
    b9e4:	sub	r1, ip, #10
    b9e8:	bl	950c <newtFormSetWidth@plt>
    b9ec:	mov	r2, r5
    b9f0:	ldr	r0, [sp, #24]
    b9f4:	mov	r3, r6
    b9f8:	ldr	r1, [sp, #40]	; 0x28
    b9fc:	bl	94dc <newtFormAddComponents@plt>
    ba00:	ldr	ip, [sp, #340]	; 0x154
    ba04:	ldr	r0, [sp, #52]	; 0x34
    ba08:	add	r3, sp, #60	; 0x3c
    ba0c:	ldr	r1, [sp, #36]	; 0x24
    ba10:	str	ip, [sp, #4]
    ba14:	ldr	r2, [sp, #24]
    ba18:	str	r3, [sp]
    ba1c:	add	r3, sp, #56	; 0x38
    ba20:	bl	ac1c <fputs@plt+0x1410>
    ba24:	ldr	r0, [sp, #24]
    ba28:	bl	97c4 <newtRunForm@plt>
    ba2c:	ldr	r5, [sp, #60]	; 0x3c
    ba30:	ldr	ip, [sp, #48]	; 0x30
    ba34:	str	r6, [ip]
    ba38:	subs	r3, r0, r5
    ba3c:	rsbs	r5, r3, #0
    ba40:	adcs	r5, r5, r3
    ba44:	cmp	r0, r6
    ba48:	str	r5, [sp, #32]
    ba4c:	beq	bbdc <fputs@plt+0x23d0>
    ba50:	ldr	ip, [sp, #336]	; 0x150
    ba54:	cmp	ip, #0
    ba58:	bne	bb60 <fputs@plt+0x2354>
    ba5c:	cmp	r4, #0
    ba60:	beq	bbe8 <fputs@plt+0x23dc>
    ba64:	ldr	r1, [sp, #336]	; 0x150
    ba68:	add	r7, r4, r8
    ba6c:	mov	r3, r8
    ba70:	ldrb	r2, [r3], #1
    ba74:	cmp	r2, #32
    ba78:	addne	r1, r1, #1
    ba7c:	cmp	r3, r7
    ba80:	bne	ba70 <fputs@plt+0x2264>
    ba84:	add	r0, r1, #1
    ba88:	lsl	r0, r0, #2
    ba8c:	bl	96c8 <malloc@plt>
    ba90:	ldr	ip, [sp, #48]	; 0x30
    ba94:	cmp	r0, #0
    ba98:	str	r0, [ip]
    ba9c:	beq	b7cc <fputs@plt+0x1fc0>
    baa0:	cmp	r4, #0
    baa4:	beq	bc00 <fputs@plt+0x23f4>
    baa8:	mov	r6, #0
    baac:	mov	r4, r8
    bab0:	str	r8, [sp, #36]	; 0x24
    bab4:	mov	sl, r0
    bab8:	mov	r5, r6
    babc:	mov	fp, ip
    bac0:	mov	r8, r7
    bac4:	ldrb	r3, [r4], #1
    bac8:	cmp	r3, #32
    bacc:	beq	baec <fputs@plt+0x22e0>
    bad0:	add	r3, r9, r6
    bad4:	add	r7, r5, #1
    bad8:	ldr	r0, [r3, #4]
    badc:	bl	9788 <__strdup@plt>
    bae0:	str	r0, [sl, r5, lsl #2]
    bae4:	mov	r5, r7
    bae8:	ldr	sl, [fp]
    baec:	cmp	r4, r8
    baf0:	add	r6, r6, #12
    baf4:	bne	bac4 <fputs@plt+0x22b8>
    baf8:	ldr	r8, [sp, #36]	; 0x24
    bafc:	lsl	r4, r5, #2
    bb00:	mov	r3, #0
    bb04:	str	r3, [sl, r4]
    bb08:	mov	r0, r9
    bb0c:	bl	95a8 <free@plt>
    bb10:	mov	r0, r8
    bb14:	bl	95a8 <free@plt>
    bb18:	ldr	r0, [sp, #24]
    bb1c:	bl	9434 <newtFormDestroy@plt>
    bb20:	ldr	r0, [sp, #32]
    bb24:	b	b7d0 <fputs@plt+0x1fc4>
    bb28:	ldr	r1, [sp, #68]	; 0x44
    bb2c:	mov	r3, #10
    bb30:	ldr	ip, [sp, #36]	; 0x24
    bb34:	str	r3, [sp]
    bb38:	add	r1, r1, #1
    bb3c:	sub	r0, ip, #4
    bb40:	ldr	r2, [sp, #44]	; 0x2c
    bb44:	mov	r3, #9
    bb48:	bl	97e8 <newtVerticalScrollbar@plt>
    bb4c:	mov	r5, r0
    bb50:	ldr	r0, [sp, #24]
    bb54:	mov	r1, r5
    bb58:	bl	944c <newtFormAddComponent@plt>
    bb5c:	b	b8a8 <fputs@plt+0x209c>
    bb60:	ldr	r0, [r9, #8]
    bb64:	bl	9734 <newtRadioGetCurrent@plt>
    bb68:	mov	r7, r0
    bb6c:	mov	r0, #8
    bb70:	bl	96c8 <malloc@plt>
    bb74:	ldr	ip, [sp, #48]	; 0x30
    bb78:	cmp	r0, #0
    bb7c:	str	r0, [ip]
    bb80:	beq	b7cc <fputs@plt+0x1fc0>
    bb84:	cmp	r4, #0
    bb88:	str	r6, [r0, #4]
    bb8c:	str	r6, [r0]
    bb90:	beq	bb08 <fputs@plt+0x22fc>
    bb94:	ldr	r3, [r9, #8]
    bb98:	cmp	r7, r3
    bb9c:	addne	r3, r9, #12
    bba0:	beq	bc08 <fputs@plt+0x23fc>
    bba4:	add	r6, r6, #1
    bba8:	cmp	r6, r4
    bbac:	beq	bb08 <fputs@plt+0x22fc>
    bbb0:	mov	r1, r3
    bbb4:	add	r3, r3, #12
    bbb8:	ldr	r2, [r3, #-4]
    bbbc:	cmp	r7, r2
    bbc0:	bne	bba4 <fputs@plt+0x2398>
    bbc4:	ldr	ip, [sp, #48]	; 0x30
    bbc8:	ldr	r0, [r1, #4]
    bbcc:	ldr	r4, [ip]
    bbd0:	bl	9788 <__strdup@plt>
    bbd4:	str	r0, [r4]
    bbd8:	b	bb08 <fputs@plt+0x22fc>
    bbdc:	mov	r1, #2
    bbe0:	str	r1, [sp, #32]
    bbe4:	b	bb08 <fputs@plt+0x22fc>
    bbe8:	mov	r0, #4
    bbec:	bl	96c8 <malloc@plt>
    bbf0:	ldr	ip, [sp, #48]	; 0x30
    bbf4:	cmp	r0, #0
    bbf8:	str	r0, [ip]
    bbfc:	beq	b7cc <fputs@plt+0x1fc0>
    bc00:	mov	sl, r0
    bc04:	b	bb00 <fputs@plt+0x22f4>
    bc08:	mov	r1, r9
    bc0c:	b	bbc4 <fputs@plt+0x23b8>
    bc10:	bl	96d4 <__stack_chk_fail@plt>
    bc14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bc18:	mov	sl, r0
    bc1c:	sub	sp, sp, #20
    bc20:	mov	r0, #0
    bc24:	mov	r7, r1
    bc28:	mov	r8, r2
    bc2c:	mov	r1, r0
    bc30:	mov	r2, r0
    bc34:	mov	r6, r3
    bc38:	ldr	r9, [sp, #56]	; 0x38
    bc3c:	bl	9614 <newtForm@plt>
    bc40:	movw	r4, #20832	; 0x5160
    bc44:	movt	r4, #1
    bc48:	sub	r1, r7, #3
    bc4c:	and	r2, r9, #4
    bc50:	ldr	r3, [r4, #4]
    bc54:	orr	r2, r2, #64	; 0x40
    bc58:	str	r2, [sp]
    bc5c:	sub	r2, r8, #2
    bc60:	rsb	r3, r3, r1
    bc64:	mov	r5, r0
    bc68:	mov	r0, #1
    bc6c:	mov	r1, r0
    bc70:	bl	9440 <newtTextbox@plt>
    bc74:	mov	r1, sl
    bc78:	mov	fp, r0
    bc7c:	bl	95f0 <newtTextboxSetText@plt>
    bc80:	mov	r0, r5
    bc84:	mov	r1, fp
    bc88:	bl	944c <newtFormAddComponent@plt>
    bc8c:	cmp	r6, #0
    bc90:	beq	bd84 <fputs@plt+0x2578>
    bc94:	cmp	r6, #2
    bc98:	beq	bd70 <fputs@plt+0x2564>
    bc9c:	sub	r8, r8, #16
    bca0:	movw	r3, #21846	; 0x5556
    bca4:	movt	r3, #21845	; 0x5555
    bca8:	movw	sl, #20892	; 0x519c
    bcac:	movt	sl, #1
    bcb0:	ldr	ip, [r4, #4]
    bcb4:	smull	r2, r3, r3, r8
    bcb8:	ldr	r2, [sl, #8]
    bcbc:	sub	r7, r7, #1
    bcc0:	ldr	fp, [r4]
    bcc4:	cmp	r2, #0
    bcc8:	rsb	ip, ip, r7
    bccc:	sub	r8, r3, r8, asr #31
    bcd0:	beq	be1c <fputs@plt+0x2610>
    bcd4:	mov	r0, r8
    bcd8:	mov	r1, ip
    bcdc:	blx	fp
    bce0:	ldr	r2, [sl, #12]
    bce4:	ldr	r3, [r4, #4]
    bce8:	lsl	r8, r8, #1
    bcec:	cmp	r2, #0
    bcf0:	add	r8, r8, #9
    bcf4:	ldr	r4, [r4]
    bcf8:	rsb	r7, r3, r7
    bcfc:	mov	fp, r0
    bd00:	beq	bdfc <fputs@plt+0x25f0>
    bd04:	mov	r1, r7
    bd08:	mov	r0, r8
    bd0c:	blx	r4
    bd10:	mov	r1, fp
    bd14:	mov	r3, #0
    bd18:	mov	r7, r0
    bd1c:	mov	r0, r5
    bd20:	mov	r2, r7
    bd24:	bl	94dc <newtFormAddComponents@plt>
    bd28:	tst	r9, #8
    bd2c:	bne	bdd0 <fputs@plt+0x25c4>
    bd30:	cmp	r6, #2
    bd34:	beq	bd70 <fputs@plt+0x2564>
    bd38:	mov	r0, r5
    bd3c:	bl	97c4 <newtRunForm@plt>
    bd40:	cmp	r0, #0
    bd44:	mov	r0, r5
    bd48:	moveq	r4, #2
    bd4c:	movne	r4, #0
    bd50:	bl	9578 <newtFormGetCurrent@plt>
    bd54:	cmp	r7, r0
    bd58:	beq	bde0 <fputs@plt+0x25d4>
    bd5c:	mov	r0, r5
    bd60:	bl	9434 <newtFormDestroy@plt>
    bd64:	mov	r0, r4
    bd68:	add	sp, sp, #20
    bd6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bd70:	mov	r0, r5
    bd74:	mov	r4, #0
    bd78:	bl	9464 <newtDrawForm@plt>
    bd7c:	bl	9674 <newtRefresh@plt>
    bd80:	b	bd5c <fputs@plt+0x2550>
    bd84:	movw	r3, #20892	; 0x519c
    bd88:	movt	r3, #1
    bd8c:	sub	r8, r8, #8
    bd90:	ldr	r1, [r4, #4]
    bd94:	ldr	r2, [r3]
    bd98:	sub	r7, r7, #1
    bd9c:	add	r8, r8, r8, lsr #31
    bda0:	rsb	r1, r1, r7
    bda4:	cmp	r2, #0
    bda8:	ldr	r4, [r4]
    bdac:	asr	r8, r8, #1
    bdb0:	beq	bde8 <fputs@plt+0x25dc>
    bdb4:	mov	r0, r8
    bdb8:	mov	r7, #0
    bdbc:	blx	r4
    bdc0:	mov	r1, r0
    bdc4:	mov	r0, r5
    bdc8:	bl	944c <newtFormAddComponent@plt>
    bdcc:	b	bd38 <fputs@plt+0x252c>
    bdd0:	mov	r0, r5
    bdd4:	mov	r1, r7
    bdd8:	bl	95cc <newtFormSetCurrent@plt>
    bddc:	b	bd30 <fputs@plt+0x2524>
    bde0:	mov	r0, #1
    bde4:	b	bd68 <fputs@plt+0x255c>
    bde8:	str	r1, [sp, #12]
    bdec:	bl	ab18 <fputs@plt+0x130c>
    bdf0:	ldr	r1, [sp, #12]
    bdf4:	mov	r2, r0
    bdf8:	b	bdb4 <fputs@plt+0x25a8>
    bdfc:	mov	r2, #5
    be00:	movw	r0, #51100	; 0xc79c
    be04:	movw	r1, #51308	; 0xc86c
    be08:	movt	r0, #0
    be0c:	movt	r1, #0
    be10:	bl	95c0 <dcgettext@plt>
    be14:	mov	r2, r0
    be18:	b	bd04 <fputs@plt+0x24f8>
    be1c:	mov	r2, #5
    be20:	movw	r0, #51100	; 0xc79c
    be24:	movw	r1, #51304	; 0xc868
    be28:	movt	r0, #0
    be2c:	movt	r1, #0
    be30:	str	ip, [sp, #12]
    be34:	bl	95c0 <dcgettext@plt>
    be38:	ldr	ip, [sp, #12]
    be3c:	mov	r2, r0
    be40:	b	bcd4 <fputs@plt+0x24c8>
    be44:	cmp	r0, #0
    be48:	movw	r3, #20832	; 0x5160
    be4c:	movt	r3, #1
    be50:	movwne	r2, #38204	; 0x953c
    be54:	movweq	r2, #38096	; 0x94d0
    be58:	movne	r1, #3
    be5c:	movtne	r2, #0
    be60:	moveq	r1, #1
    be64:	movteq	r2, #0
    be68:	strne	r1, [r3, #4]
    be6c:	streq	r1, [r3, #4]
    be70:	str	r2, [r3]
    be74:	bx	lr
    be78:	cmp	r1, #3
    be7c:	movwls	r3, #20892	; 0x519c
    be80:	movtls	r3, #1
    be84:	strls	r0, [r3, r1, lsl #2]
    be88:	bx	lr
    be8c:	cmp	r1, #0
    be90:	beq	c09c <fputs@plt+0x2890>
    be94:	eor	ip, r0, r1
    be98:	rsbmi	r1, r1, #0
    be9c:	subs	r2, r1, #1
    bea0:	beq	c068 <fputs@plt+0x285c>
    bea4:	movs	r3, r0
    bea8:	rsbmi	r3, r0, #0
    beac:	cmp	r3, r1
    beb0:	bls	c074 <fputs@plt+0x2868>
    beb4:	tst	r1, r2
    beb8:	beq	c084 <fputs@plt+0x2878>
    bebc:	clz	r2, r3
    bec0:	clz	r0, r1
    bec4:	sub	r2, r0, r2
    bec8:	rsbs	r2, r2, #31
    becc:	addne	r2, r2, r2, lsl #1
    bed0:	mov	r0, #0
    bed4:	addne	pc, pc, r2, lsl #2
    bed8:	nop	{0}
    bedc:	cmp	r3, r1, lsl #31
    bee0:	adc	r0, r0, r0
    bee4:	subcs	r3, r3, r1, lsl #31
    bee8:	cmp	r3, r1, lsl #30
    beec:	adc	r0, r0, r0
    bef0:	subcs	r3, r3, r1, lsl #30
    bef4:	cmp	r3, r1, lsl #29
    bef8:	adc	r0, r0, r0
    befc:	subcs	r3, r3, r1, lsl #29
    bf00:	cmp	r3, r1, lsl #28
    bf04:	adc	r0, r0, r0
    bf08:	subcs	r3, r3, r1, lsl #28
    bf0c:	cmp	r3, r1, lsl #27
    bf10:	adc	r0, r0, r0
    bf14:	subcs	r3, r3, r1, lsl #27
    bf18:	cmp	r3, r1, lsl #26
    bf1c:	adc	r0, r0, r0
    bf20:	subcs	r3, r3, r1, lsl #26
    bf24:	cmp	r3, r1, lsl #25
    bf28:	adc	r0, r0, r0
    bf2c:	subcs	r3, r3, r1, lsl #25
    bf30:	cmp	r3, r1, lsl #24
    bf34:	adc	r0, r0, r0
    bf38:	subcs	r3, r3, r1, lsl #24
    bf3c:	cmp	r3, r1, lsl #23
    bf40:	adc	r0, r0, r0
    bf44:	subcs	r3, r3, r1, lsl #23
    bf48:	cmp	r3, r1, lsl #22
    bf4c:	adc	r0, r0, r0
    bf50:	subcs	r3, r3, r1, lsl #22
    bf54:	cmp	r3, r1, lsl #21
    bf58:	adc	r0, r0, r0
    bf5c:	subcs	r3, r3, r1, lsl #21
    bf60:	cmp	r3, r1, lsl #20
    bf64:	adc	r0, r0, r0
    bf68:	subcs	r3, r3, r1, lsl #20
    bf6c:	cmp	r3, r1, lsl #19
    bf70:	adc	r0, r0, r0
    bf74:	subcs	r3, r3, r1, lsl #19
    bf78:	cmp	r3, r1, lsl #18
    bf7c:	adc	r0, r0, r0
    bf80:	subcs	r3, r3, r1, lsl #18
    bf84:	cmp	r3, r1, lsl #17
    bf88:	adc	r0, r0, r0
    bf8c:	subcs	r3, r3, r1, lsl #17
    bf90:	cmp	r3, r1, lsl #16
    bf94:	adc	r0, r0, r0
    bf98:	subcs	r3, r3, r1, lsl #16
    bf9c:	cmp	r3, r1, lsl #15
    bfa0:	adc	r0, r0, r0
    bfa4:	subcs	r3, r3, r1, lsl #15
    bfa8:	cmp	r3, r1, lsl #14
    bfac:	adc	r0, r0, r0
    bfb0:	subcs	r3, r3, r1, lsl #14
    bfb4:	cmp	r3, r1, lsl #13
    bfb8:	adc	r0, r0, r0
    bfbc:	subcs	r3, r3, r1, lsl #13
    bfc0:	cmp	r3, r1, lsl #12
    bfc4:	adc	r0, r0, r0
    bfc8:	subcs	r3, r3, r1, lsl #12
    bfcc:	cmp	r3, r1, lsl #11
    bfd0:	adc	r0, r0, r0
    bfd4:	subcs	r3, r3, r1, lsl #11
    bfd8:	cmp	r3, r1, lsl #10
    bfdc:	adc	r0, r0, r0
    bfe0:	subcs	r3, r3, r1, lsl #10
    bfe4:	cmp	r3, r1, lsl #9
    bfe8:	adc	r0, r0, r0
    bfec:	subcs	r3, r3, r1, lsl #9
    bff0:	cmp	r3, r1, lsl #8
    bff4:	adc	r0, r0, r0
    bff8:	subcs	r3, r3, r1, lsl #8
    bffc:	cmp	r3, r1, lsl #7
    c000:	adc	r0, r0, r0
    c004:	subcs	r3, r3, r1, lsl #7
    c008:	cmp	r3, r1, lsl #6
    c00c:	adc	r0, r0, r0
    c010:	subcs	r3, r3, r1, lsl #6
    c014:	cmp	r3, r1, lsl #5
    c018:	adc	r0, r0, r0
    c01c:	subcs	r3, r3, r1, lsl #5
    c020:	cmp	r3, r1, lsl #4
    c024:	adc	r0, r0, r0
    c028:	subcs	r3, r3, r1, lsl #4
    c02c:	cmp	r3, r1, lsl #3
    c030:	adc	r0, r0, r0
    c034:	subcs	r3, r3, r1, lsl #3
    c038:	cmp	r3, r1, lsl #2
    c03c:	adc	r0, r0, r0
    c040:	subcs	r3, r3, r1, lsl #2
    c044:	cmp	r3, r1, lsl #1
    c048:	adc	r0, r0, r0
    c04c:	subcs	r3, r3, r1, lsl #1
    c050:	cmp	r3, r1
    c054:	adc	r0, r0, r0
    c058:	subcs	r3, r3, r1
    c05c:	cmp	ip, #0
    c060:	rsbmi	r0, r0, #0
    c064:	bx	lr
    c068:	teq	ip, r0
    c06c:	rsbmi	r0, r0, #0
    c070:	bx	lr
    c074:	movcc	r0, #0
    c078:	asreq	r0, ip, #31
    c07c:	orreq	r0, r0, #1
    c080:	bx	lr
    c084:	clz	r2, r1
    c088:	rsb	r2, r2, #31
    c08c:	cmp	ip, #0
    c090:	lsr	r0, r3, r2
    c094:	rsbmi	r0, r0, #0
    c098:	bx	lr
    c09c:	cmp	r0, #0
    c0a0:	mvngt	r0, #-2147483648	; 0x80000000
    c0a4:	movlt	r0, #-2147483648	; 0x80000000
    c0a8:	b	c0cc <fputs@plt+0x28c0>
    c0ac:	cmp	r1, #0
    c0b0:	beq	c09c <fputs@plt+0x2890>
    c0b4:	push	{r0, r1, lr}
    c0b8:	bl	be94 <fputs@plt+0x2688>
    c0bc:	pop	{r1, r2, lr}
    c0c0:	mul	r3, r2, r0
    c0c4:	sub	r1, r1, r3
    c0c8:	bx	lr
    c0cc:	push	{r1, lr}
    c0d0:	mov	r0, #8
    c0d4:	bl	9668 <raise@plt>
    c0d8:	pop	{r1, pc}
    c0dc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    c0e0:	mov	r7, r0
    c0e4:	ldr	r6, [pc, #76]	; c138 <fputs@plt+0x292c>
    c0e8:	mov	r8, r1
    c0ec:	ldr	r5, [pc, #72]	; c13c <fputs@plt+0x2930>
    c0f0:	mov	r9, r2
    c0f4:	add	r6, pc, r6
    c0f8:	bl	9414 <_init@@Base>
    c0fc:	add	r5, pc, r5
    c100:	rsb	r6, r5, r6
    c104:	asrs	r6, r6, #2
    c108:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    c10c:	sub	r5, r5, #4
    c110:	mov	r4, #0
    c114:	add	r4, r4, #1
    c118:	ldr	r3, [r5, #4]!
    c11c:	mov	r0, r7
    c120:	mov	r1, r8
    c124:	mov	r2, r9
    c128:	blx	r3
    c12c:	cmp	r4, r6
    c130:	bne	c114 <fputs@plt+0x2908>
    c134:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    c138:	andeq	r8, r0, ip, ror #27
    c13c:	andeq	r8, r0, r0, ror #27
    c140:	bx	lr

Disassembly of section .fini:

0000c144 <_fini@@Base>:
    c144:	push	{r3, lr}
    c148:	pop	{r3, pc}
