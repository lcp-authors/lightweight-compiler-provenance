
centos-preinstalled/expr:     file format elf32-littlearm


Disassembly of section .init:

000112b4 <_init@@Base>:
   112b4:	push	{r3, lr}
   112b8:	bl	11824 <close@plt+0x25c>
   112bc:	pop	{r3, pc}

Disassembly of section .plt:

000112c0 <fdopen@plt-0x14>:
   112c0:	push	{lr}		; (str lr, [sp, #-4]!)
   112c4:	ldr	lr, [pc, #4]	; 112d0 <_init@@Base+0x1c>
   112c8:	add	lr, pc, lr
   112cc:	ldr	pc, [lr, #8]!
   112d0:	andeq	r5, r1, r0, lsr sp

000112d4 <fdopen@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #86016	; 0x15000
   112dc:	ldr	pc, [ip, #3376]!	; 0xd30

000112e0 <calloc@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #86016	; 0x15000
   112e8:	ldr	pc, [ip, #3368]!	; 0xd28

000112ec <fputs_unlocked@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #86016	; 0x15000
   112f4:	ldr	pc, [ip, #3360]!	; 0xd20

000112f8 <raise@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #86016	; 0x15000
   11300:	ldr	pc, [ip, #3352]!	; 0xd18

00011304 <strcmp@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #86016	; 0x15000
   1130c:	ldr	pc, [ip, #3344]!	; 0xd10

00011310 <strcspn@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #86016	; 0x15000
   11318:	ldr	pc, [ip, #3336]!	; 0xd08

0001131c <fflush@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #86016	; 0x15000
   11324:	ldr	pc, [ip, #3328]!	; 0xd00

00011328 <free@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #86016	; 0x15000
   11330:	ldr	pc, [ip, #3320]!	; 0xcf8

00011334 <_exit@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #86016	; 0x15000
   1133c:	ldr	pc, [ip, #3312]!	; 0xcf0

00011340 <memcpy@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #86016	; 0x15000
   11348:	ldr	pc, [ip, #3304]!	; 0xce8

0001134c <mbsinit@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #86016	; 0x15000
   11354:	ldr	pc, [ip, #3296]!	; 0xce0

00011358 <memcmp@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #86016	; 0x15000
   11360:	ldr	pc, [ip, #3288]!	; 0xcd8

00011364 <dcgettext@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #86016	; 0x15000
   1136c:	ldr	pc, [ip, #3280]!	; 0xcd0

00011370 <__gmpz_get_str@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #86016	; 0x15000
   11378:	ldr	pc, [ip, #3272]!	; 0xcc8

0001137c <__stack_chk_fail@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #86016	; 0x15000
   11384:	ldr	pc, [ip, #3264]!	; 0xcc0

00011388 <realloc@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #86016	; 0x15000
   11390:	ldr	pc, [ip, #3256]!	; 0xcb8

00011394 <textdomain@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #86016	; 0x15000
   1139c:	ldr	pc, [ip, #3248]!	; 0xcb0

000113a0 <__gmpz_out_str@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #86016	; 0x15000
   113a8:	ldr	pc, [ip, #3240]!	; 0xca8

000113ac <iswprint@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #86016	; 0x15000
   113b4:	ldr	pc, [ip, #3232]!	; 0xca0

000113b8 <fwrite@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #86016	; 0x15000
   113c0:	ldr	pc, [ip, #3224]!	; 0xc98

000113c4 <lseek64@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #86016	; 0x15000
   113cc:	ldr	pc, [ip, #3216]!	; 0xc90

000113d0 <regfree@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #86016	; 0x15000
   113d8:	ldr	pc, [ip, #3208]!	; 0xc88

000113dc <__ctype_get_mb_cur_max@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #86016	; 0x15000
   113e4:	ldr	pc, [ip, #3200]!	; 0xc80

000113e8 <strcpy@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #86016	; 0x15000
   113f0:	ldr	pc, [ip, #3192]!	; 0xc78

000113f4 <__fpending@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #86016	; 0x15000
   113fc:	ldr	pc, [ip, #3184]!	; 0xc70

00011400 <mbrtowc@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #86016	; 0x15000
   11408:	ldr	pc, [ip, #3176]!	; 0xc68

0001140c <error@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #86016	; 0x15000
   11414:	ldr	pc, [ip, #3168]!	; 0xc60

00011418 <open64@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #86016	; 0x15000
   11420:	ldr	pc, [ip, #3160]!	; 0xc58

00011424 <strcoll@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #86016	; 0x15000
   1142c:	ldr	pc, [ip, #3152]!	; 0xc50

00011430 <getenv@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #86016	; 0x15000
   11438:	ldr	pc, [ip, #3144]!	; 0xc48

0001143c <puts@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #86016	; 0x15000
   11444:	ldr	pc, [ip, #3136]!	; 0xc40

00011448 <malloc@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #86016	; 0x15000
   11450:	ldr	pc, [ip, #3128]!	; 0xc38

00011454 <__libc_start_main@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #86016	; 0x15000
   1145c:	ldr	pc, [ip, #3120]!	; 0xc30

00011460 <__freading@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #86016	; 0x15000
   11468:	ldr	pc, [ip, #3112]!	; 0xc28

0001146c <__gmon_start__@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #86016	; 0x15000
   11474:	ldr	pc, [ip, #3104]!	; 0xc20

00011478 <mempcpy@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #86016	; 0x15000
   11480:	ldr	pc, [ip, #3096]!	; 0xc18

00011484 <getopt_long@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #86016	; 0x15000
   1148c:	ldr	pc, [ip, #3088]!	; 0xc10

00011490 <__ctype_b_loc@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #86016	; 0x15000
   11498:	ldr	pc, [ip, #3080]!	; 0xc08

0001149c <exit@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #86016	; 0x15000
   114a4:	ldr	pc, [ip, #3072]!	; 0xc00

000114a8 <strlen@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #86016	; 0x15000
   114b0:	ldr	pc, [ip, #3064]!	; 0xbf8

000114b4 <re_match@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #86016	; 0x15000
   114bc:	ldr	pc, [ip, #3056]!	; 0xbf0

000114c0 <ungetc@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #86016	; 0x15000
   114c8:	ldr	pc, [ip, #3048]!	; 0xbe8

000114cc <__gmpz_clear@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #86016	; 0x15000
   114d4:	ldr	pc, [ip, #3040]!	; 0xbe0

000114d8 <__errno_location@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #86016	; 0x15000
   114e0:	ldr	pc, [ip, #3032]!	; 0xbd8

000114e4 <__cxa_atexit@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #86016	; 0x15000
   114ec:	ldr	pc, [ip, #3024]!	; 0xbd0

000114f0 <memset@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #86016	; 0x15000
   114f8:	ldr	pc, [ip, #3016]!	; 0xbc8

000114fc <fscanf@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #86016	; 0x15000
   11504:	ldr	pc, [ip, #3008]!	; 0xbc0

00011508 <__printf_chk@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #86016	; 0x15000
   11510:	ldr	pc, [ip, #3000]!	; 0xbb8

00011514 <fileno@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #86016	; 0x15000
   1151c:	ldr	pc, [ip, #2992]!	; 0xbb0

00011520 <__fprintf_chk@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #86016	; 0x15000
   11528:	ldr	pc, [ip, #2984]!	; 0xba8

0001152c <fclose@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #86016	; 0x15000
   11534:	ldr	pc, [ip, #2976]!	; 0xba0

00011538 <fseeko64@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #86016	; 0x15000
   11540:	ldr	pc, [ip, #2968]!	; 0xb98

00011544 <__gmpz_init_set_ui@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #86016	; 0x15000
   1154c:	ldr	pc, [ip, #2960]!	; 0xb90

00011550 <__uflow@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #86016	; 0x15000
   11558:	ldr	pc, [ip, #2952]!	; 0xb88

0001155c <__overflow@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #86016	; 0x15000
   11564:	ldr	pc, [ip, #2944]!	; 0xb80

00011568 <setlocale@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #86016	; 0x15000
   11570:	ldr	pc, [ip, #2936]!	; 0xb78

00011574 <strrchr@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #86016	; 0x15000
   1157c:	ldr	pc, [ip, #2928]!	; 0xb70

00011580 <nl_langinfo@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #86016	; 0x15000
   11588:	ldr	pc, [ip, #2920]!	; 0xb68

0001158c <__gmpz_init_set_str@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #86016	; 0x15000
   11594:	ldr	pc, [ip, #2912]!	; 0xb60

00011598 <bindtextdomain@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #86016	; 0x15000
   115a0:	ldr	pc, [ip, #2904]!	; 0xb58

000115a4 <re_compile_pattern@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #86016	; 0x15000
   115ac:	ldr	pc, [ip, #2896]!	; 0xb50

000115b0 <strncmp@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #86016	; 0x15000
   115b8:	ldr	pc, [ip, #2888]!	; 0xb48

000115bc <abort@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #86016	; 0x15000
   115c4:	ldr	pc, [ip, #2880]!	; 0xb40

000115c8 <close@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #86016	; 0x15000
   115d0:	ldr	pc, [ip, #2872]!	; 0xb38

Disassembly of section .text:

000115d4 <usage@@Base-0x348>:
   115d4:	push	{r4, r5, r6, r7, lr}
   115d8:	mov	r6, r0
   115dc:	sub	sp, sp, #28
   115e0:	ldr	r0, [r1]
   115e4:	mov	r5, r1
   115e8:	bl	12e18 <close_stdout@@Base+0x2c8>
   115ec:	ldr	r1, [pc, #436]	; 117a8 <close@plt+0x1e0>
   115f0:	mov	r0, #6
   115f4:	ldr	r4, [pc, #432]	; 117ac <close@plt+0x1e4>
   115f8:	add	r1, pc, r1
   115fc:	bl	11568 <setlocale@plt>
   11600:	add	r4, pc, r4
   11604:	ldr	r1, [pc, #420]	; 117b0 <close@plt+0x1e8>
   11608:	mov	r0, r4
   1160c:	add	r1, pc, r1
   11610:	bl	11598 <bindtextdomain@plt>
   11614:	mov	r0, r4
   11618:	ldr	r4, [pc, #404]	; 117b4 <close@plt+0x1ec>
   1161c:	bl	11394 <textdomain@plt>
   11620:	ldr	r2, [pc, #400]	; 117b8 <close@plt+0x1f0>
   11624:	mov	r1, #3
   11628:	add	r4, pc, r4
   1162c:	ldr	r3, [pc, #392]	; 117bc <close@plt+0x1f4>
   11630:	ldr	r2, [r4, r2]
   11634:	str	r1, [r2]
   11638:	ldr	r0, [r4, r3]
   1163c:	bl	15a30 <close_stdout@@Base+0x2ee0>
   11640:	ldr	r2, [pc, #376]	; 117c0 <close@plt+0x1f8>
   11644:	ldr	r3, [pc, #376]	; 117c4 <close@plt+0x1fc>
   11648:	mov	r0, r6
   1164c:	ldr	lr, [pc, #372]	; 117c8 <close@plt+0x200>
   11650:	mov	r1, r5
   11654:	add	r3, pc, r3
   11658:	str	r3, [sp]
   1165c:	ldr	r7, [r4, r2]
   11660:	mov	r3, #0
   11664:	ldr	r2, [pc, #352]	; 117cc <close@plt+0x204>
   11668:	add	lr, pc, lr
   1166c:	str	r3, [sp, #20]
   11670:	add	r2, pc, r2
   11674:	ldr	ip, [pc, #340]	; 117d0 <close@plt+0x208>
   11678:	str	r2, [sp, #16]
   1167c:	ldr	r3, [pc, #336]	; 117d4 <close@plt+0x20c>
   11680:	add	ip, pc, ip
   11684:	ldr	r2, [pc, #332]	; 117d8 <close@plt+0x210>
   11688:	stmib	sp, {r7, lr}
   1168c:	add	r3, pc, r3
   11690:	str	ip, [sp, #12]
   11694:	add	r2, pc, r2
   11698:	bl	12d0c <close_stdout@@Base+0x1bc>
   1169c:	cmp	r6, #1
   116a0:	bls	11730 <close@plt+0x168>
   116a4:	ldr	r3, [r5, #4]
   116a8:	ldrb	r2, [r3]
   116ac:	cmp	r2, #45	; 0x2d
   116b0:	beq	1170c <close@plt+0x144>
   116b4:	ldr	r6, [pc, #288]	; 117dc <close@plt+0x214>
   116b8:	mov	r0, #1
   116bc:	add	r5, r5, #4
   116c0:	add	r6, pc, r6
   116c4:	str	r5, [r6]
   116c8:	bl	12a80 <usage@@Base+0x1164>
   116cc:	ldr	r3, [r6]
   116d0:	ldr	r3, [r3]
   116d4:	cmp	r3, #0
   116d8:	mov	r5, r0
   116dc:	beq	116e4 <close@plt+0x11c>
   116e0:	bl	11c48 <usage@@Base+0x32c>
   116e4:	ldr	r3, [r5]
   116e8:	cmp	r3, #0
   116ec:	beq	1175c <close@plt+0x194>
   116f0:	cmp	r3, #1
   116f4:	bne	117a4 <close@plt+0x1dc>
   116f8:	ldr	r0, [r5, #4]
   116fc:	bl	1143c <puts@plt>
   11700:	mov	r0, r5
   11704:	bl	11d10 <usage@@Base+0x3f4>
   11708:	bl	1149c <exit@plt>
   1170c:	ldrb	r2, [r3, #1]
   11710:	cmp	r2, #45	; 0x2d
   11714:	bne	116b4 <close@plt+0xec>
   11718:	ldrb	r3, [r3, #2]
   1171c:	cmp	r3, #0
   11720:	bne	116b4 <close@plt+0xec>
   11724:	cmp	r6, #2
   11728:	add	r5, r5, #4
   1172c:	bne	116b4 <close@plt+0xec>
   11730:	ldr	r1, [pc, #168]	; 117e0 <close@plt+0x218>
   11734:	mov	r2, #5
   11738:	mov	r0, #0
   1173c:	add	r1, pc, r1
   11740:	bl	11364 <dcgettext@plt>
   11744:	mov	r2, r0
   11748:	mov	r0, #0
   1174c:	mov	r1, r0
   11750:	bl	1140c <error@plt>
   11754:	mov	r0, #2
   11758:	bl	1191c <usage@@Base>
   1175c:	ldr	r3, [pc, #128]	; 117e4 <close@plt+0x21c>
   11760:	mov	r1, #10
   11764:	add	r2, r5, #4
   11768:	ldr	r4, [r4, r3]
   1176c:	ldr	r0, [r4]
   11770:	bl	113a0 <__gmpz_out_str@plt>
   11774:	ldr	r0, [r4]
   11778:	ldr	r3, [r0, #20]
   1177c:	ldr	r2, [r0, #24]
   11780:	cmp	r3, r2
   11784:	addcc	r1, r3, #1
   11788:	movcc	r2, #10
   1178c:	strcc	r1, [r0, #20]
   11790:	strbcc	r2, [r3]
   11794:	bcc	11700 <close@plt+0x138>
   11798:	mov	r1, #10
   1179c:	bl	1155c <__overflow@plt>
   117a0:	b	11700 <close@plt+0x138>
   117a4:	bl	115bc <abort@plt>
   117a8:	andeq	r4, r0, ip, lsr #26
   117ac:	andeq	r4, r0, r4, ror #24
   117b0:	andeq	r4, r0, r0, ror #27
   117b4:	ldrdeq	r5, [r1], -r0
   117b8:	andeq	r0, r0, r4, asr #2
   117bc:	andeq	r0, r0, ip, lsr #2
   117c0:	andeq	r0, r0, r0, asr #2
   117c4:			; <UNDEFINED> instruction: 0x00004db4
   117c8:	andeq	r4, r0, r8, lsr #27
   117cc:			; <UNDEFINED> instruction: 0x00004dbc
   117d0:	muleq	r0, ip, sp
   117d4:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   117d8:	andeq	r4, r0, ip, ror #26
   117dc:	andeq	r5, r1, r4, ror #21
   117e0:	strdeq	r4, [r0], -ip
   117e4:	andeq	r0, r0, ip, lsr r1
   117e8:	mov	fp, #0
   117ec:	mov	lr, #0
   117f0:	pop	{r1}		; (ldr r1, [sp], #4)
   117f4:	mov	r2, sp
   117f8:	push	{r2}		; (str r2, [sp, #-4]!)
   117fc:	push	{r0}		; (str r0, [sp, #-4]!)
   11800:	ldr	ip, [pc, #16]	; 11818 <close@plt+0x250>
   11804:	push	{ip}		; (str ip, [sp, #-4]!)
   11808:	ldr	r0, [pc, #12]	; 1181c <close@plt+0x254>
   1180c:	ldr	r3, [pc, #12]	; 11820 <close@plt+0x258>
   11810:	bl	11454 <__libc_start_main@plt>
   11814:	bl	115bc <abort@plt>
   11818:	andeq	r5, r1, ip, lsr #20
   1181c:	ldrdeq	r1, [r1], -r4
   11820:	andeq	r5, r1, r8, asr #19
   11824:	ldr	r3, [pc, #20]	; 11840 <close@plt+0x278>
   11828:	ldr	r2, [pc, #20]	; 11844 <close@plt+0x27c>
   1182c:	add	r3, pc, r3
   11830:	ldr	r2, [r3, r2]
   11834:	cmp	r2, #0
   11838:	bxeq	lr
   1183c:	b	1146c <__gmon_start__@plt>
   11840:	andeq	r5, r1, ip, asr #15
   11844:	andeq	r0, r0, r0, lsr r1
   11848:	push	{r3, lr}
   1184c:	movw	r0, #29096	; 0x71a8
   11850:	ldr	r3, [pc, #36]	; 1187c <close@plt+0x2b4>
   11854:	movt	r0, #2
   11858:	rsb	r3, r0, r3
   1185c:	cmp	r3, #6
   11860:	popls	{r3, pc}
   11864:	movw	r3, #0
   11868:	movt	r3, #0
   1186c:	cmp	r3, #0
   11870:	popeq	{r3, pc}
   11874:	blx	r3
   11878:	pop	{r3, pc}
   1187c:	andeq	r7, r2, fp, lsr #3
   11880:	push	{r3, lr}
   11884:	movw	r0, #29096	; 0x71a8
   11888:	movw	r3, #29096	; 0x71a8
   1188c:	movt	r0, #2
   11890:	movt	r3, #2
   11894:	rsb	r3, r0, r3
   11898:	asr	r3, r3, #2
   1189c:	add	r3, r3, r3, lsr #31
   118a0:	asrs	r1, r3, #1
   118a4:	popeq	{r3, pc}
   118a8:	movw	r2, #0
   118ac:	movt	r2, #0
   118b0:	cmp	r2, #0
   118b4:	popeq	{r3, pc}
   118b8:	blx	r2
   118bc:	pop	{r3, pc}
   118c0:	push	{r4, lr}
   118c4:	movw	r4, #29096	; 0x71a8
   118c8:	movt	r4, #2
   118cc:	ldrb	r3, [r4]
   118d0:	cmp	r3, #0
   118d4:	popne	{r4, pc}
   118d8:	bl	11848 <close@plt+0x280>
   118dc:	mov	r3, #1
   118e0:	strb	r3, [r4]
   118e4:	pop	{r4, pc}
   118e8:	movw	r0, #28328	; 0x6ea8
   118ec:	movt	r0, #2
   118f0:	push	{r3, lr}
   118f4:	ldr	r3, [r0]
   118f8:	cmp	r3, #0
   118fc:	beq	11914 <close@plt+0x34c>
   11900:	movw	r3, #0
   11904:	movt	r3, #0
   11908:	cmp	r3, #0
   1190c:	beq	11914 <close@plt+0x34c>
   11910:	blx	r3
   11914:	pop	{r3, lr}
   11918:	b	11880 <close@plt+0x2b8>

0001191c <usage@@Base>:
   1191c:	push	{r4, r5, r6, lr}
   11920:	subs	r5, r0, #0
   11924:	ldr	r4, [pc, #648]	; 11bb4 <usage@@Base+0x298>
   11928:	add	r4, pc, r4
   1192c:	beq	11974 <usage@@Base+0x58>
   11930:	ldr	r3, [pc, #640]	; 11bb8 <usage@@Base+0x29c>
   11934:	mov	r2, #5
   11938:	ldr	r1, [pc, #636]	; 11bbc <usage@@Base+0x2a0>
   1193c:	mov	r0, #0
   11940:	ldr	r3, [r4, r3]
   11944:	add	r1, pc, r1
   11948:	ldr	r6, [r3]
   1194c:	bl	11364 <dcgettext@plt>
   11950:	ldr	r3, [pc, #616]	; 11bc0 <usage@@Base+0x2a4>
   11954:	mov	r1, #1
   11958:	ldr	r3, [r4, r3]
   1195c:	ldr	r3, [r3]
   11960:	mov	r2, r0
   11964:	mov	r0, r6
   11968:	bl	11520 <__fprintf_chk@plt>
   1196c:	mov	r0, r5
   11970:	bl	1149c <exit@plt>
   11974:	ldr	r1, [pc, #584]	; 11bc4 <usage@@Base+0x2a8>
   11978:	mov	r2, #5
   1197c:	add	r1, pc, r1
   11980:	bl	11364 <dcgettext@plt>
   11984:	ldr	r3, [pc, #564]	; 11bc0 <usage@@Base+0x2a4>
   11988:	ldr	r6, [r4, r3]
   1198c:	ldr	r2, [r6]
   11990:	mov	r3, r2
   11994:	mov	r1, r0
   11998:	mov	r0, #1
   1199c:	bl	11508 <__printf_chk@plt>
   119a0:	ldr	r3, [pc, #544]	; 11bc8 <usage@@Base+0x2ac>
   119a4:	ldr	r4, [r4, r3]
   119a8:	ldr	r0, [r4]
   119ac:	ldr	r3, [r0, #20]
   119b0:	ldr	r2, [r0, #24]
   119b4:	cmp	r3, r2
   119b8:	addcc	r1, r3, #1
   119bc:	movcc	r2, #10
   119c0:	strcc	r1, [r0, #20]
   119c4:	strbcc	r2, [r3]
   119c8:	bcs	11ba8 <usage@@Base+0x28c>
   119cc:	ldr	r1, [pc, #504]	; 11bcc <usage@@Base+0x2b0>
   119d0:	mov	r2, #5
   119d4:	mov	r0, #0
   119d8:	add	r1, pc, r1
   119dc:	bl	11364 <dcgettext@plt>
   119e0:	ldr	r1, [r4]
   119e4:	bl	112ec <fputs_unlocked@plt>
   119e8:	ldr	r1, [pc, #480]	; 11bd0 <usage@@Base+0x2b4>
   119ec:	mov	r2, #5
   119f0:	mov	r0, #0
   119f4:	add	r1, pc, r1
   119f8:	bl	11364 <dcgettext@plt>
   119fc:	ldr	r1, [r4]
   11a00:	bl	112ec <fputs_unlocked@plt>
   11a04:	ldr	r1, [pc, #456]	; 11bd4 <usage@@Base+0x2b8>
   11a08:	mov	r2, #5
   11a0c:	mov	r0, #0
   11a10:	add	r1, pc, r1
   11a14:	bl	11364 <dcgettext@plt>
   11a18:	ldr	r1, [r4]
   11a1c:	bl	112ec <fputs_unlocked@plt>
   11a20:	ldr	r1, [pc, #432]	; 11bd8 <usage@@Base+0x2bc>
   11a24:	mov	r2, #5
   11a28:	mov	r0, #0
   11a2c:	add	r1, pc, r1
   11a30:	bl	11364 <dcgettext@plt>
   11a34:	ldr	r1, [r4]
   11a38:	bl	112ec <fputs_unlocked@plt>
   11a3c:	ldr	r1, [pc, #408]	; 11bdc <usage@@Base+0x2c0>
   11a40:	mov	r2, #5
   11a44:	mov	r0, #0
   11a48:	add	r1, pc, r1
   11a4c:	bl	11364 <dcgettext@plt>
   11a50:	ldr	r1, [r4]
   11a54:	bl	112ec <fputs_unlocked@plt>
   11a58:	ldr	r1, [pc, #384]	; 11be0 <usage@@Base+0x2c4>
   11a5c:	mov	r2, #5
   11a60:	mov	r0, #0
   11a64:	add	r1, pc, r1
   11a68:	bl	11364 <dcgettext@plt>
   11a6c:	ldr	r1, [r4]
   11a70:	bl	112ec <fputs_unlocked@plt>
   11a74:	ldr	r1, [pc, #360]	; 11be4 <usage@@Base+0x2c8>
   11a78:	mov	r2, #5
   11a7c:	mov	r0, #0
   11a80:	add	r1, pc, r1
   11a84:	bl	11364 <dcgettext@plt>
   11a88:	ldr	r1, [r4]
   11a8c:	bl	112ec <fputs_unlocked@plt>
   11a90:	ldr	r1, [pc, #336]	; 11be8 <usage@@Base+0x2cc>
   11a94:	mov	r2, #5
   11a98:	mov	r0, #0
   11a9c:	add	r1, pc, r1
   11aa0:	bl	11364 <dcgettext@plt>
   11aa4:	ldr	r1, [r4]
   11aa8:	bl	112ec <fputs_unlocked@plt>
   11aac:	ldr	r1, [pc, #312]	; 11bec <usage@@Base+0x2d0>
   11ab0:	mov	r2, #5
   11ab4:	mov	r0, #0
   11ab8:	add	r1, pc, r1
   11abc:	bl	11364 <dcgettext@plt>
   11ac0:	ldr	r1, [r4]
   11ac4:	bl	112ec <fputs_unlocked@plt>
   11ac8:	ldr	r1, [pc, #288]	; 11bf0 <usage@@Base+0x2d4>
   11acc:	mov	r2, #5
   11ad0:	mov	r0, #0
   11ad4:	add	r1, pc, r1
   11ad8:	bl	11364 <dcgettext@plt>
   11adc:	ldr	r1, [r4]
   11ae0:	bl	112ec <fputs_unlocked@plt>
   11ae4:	ldr	r1, [pc, #264]	; 11bf4 <usage@@Base+0x2d8>
   11ae8:	mov	r2, #5
   11aec:	mov	r0, #0
   11af0:	add	r1, pc, r1
   11af4:	bl	11364 <dcgettext@plt>
   11af8:	ldr	r2, [pc, #248]	; 11bf8 <usage@@Base+0x2dc>
   11afc:	ldr	r3, [pc, #248]	; 11bfc <usage@@Base+0x2e0>
   11b00:	add	r2, pc, r2
   11b04:	add	r3, pc, r3
   11b08:	mov	r1, r0
   11b0c:	mov	r0, #1
   11b10:	bl	11508 <__printf_chk@plt>
   11b14:	mov	r0, #5
   11b18:	mov	r1, #0
   11b1c:	bl	11568 <setlocale@plt>
   11b20:	cmp	r0, #0
   11b24:	beq	11b40 <usage@@Base+0x224>
   11b28:	ldr	r1, [pc, #208]	; 11c00 <usage@@Base+0x2e4>
   11b2c:	mov	r2, #3
   11b30:	add	r1, pc, r1
   11b34:	bl	115b0 <strncmp@plt>
   11b38:	cmp	r0, #0
   11b3c:	bne	11b74 <usage@@Base+0x258>
   11b40:	ldr	r1, [pc, #188]	; 11c04 <usage@@Base+0x2e8>
   11b44:	mov	r2, #5
   11b48:	mov	r0, #0
   11b4c:	add	r1, pc, r1
   11b50:	bl	11364 <dcgettext@plt>
   11b54:	mov	r4, r0
   11b58:	ldr	r0, [r6]
   11b5c:	bl	12c68 <close_stdout@@Base+0x118>
   11b60:	mov	r1, r4
   11b64:	mov	r2, r0
   11b68:	mov	r0, #1
   11b6c:	bl	11508 <__printf_chk@plt>
   11b70:	b	1196c <usage@@Base+0x50>
   11b74:	ldr	r1, [pc, #140]	; 11c08 <usage@@Base+0x2ec>
   11b78:	mov	r2, #5
   11b7c:	mov	r0, #0
   11b80:	add	r1, pc, r1
   11b84:	bl	11364 <dcgettext@plt>
   11b88:	mov	r4, r0
   11b8c:	ldr	r0, [r6]
   11b90:	bl	12c68 <close_stdout@@Base+0x118>
   11b94:	mov	r1, r4
   11b98:	mov	r2, r0
   11b9c:	mov	r0, #1
   11ba0:	bl	11508 <__printf_chk@plt>
   11ba4:	b	11b40 <usage@@Base+0x224>
   11ba8:	mov	r1, #10
   11bac:	bl	1155c <__overflow@plt>
   11bb0:	b	119cc <usage@@Base+0xb0>
   11bb4:	ldrdeq	r5, [r1], -r0
   11bb8:	andeq	r0, r0, r4, lsr #2
   11bbc:	andeq	r4, r0, r0, lsr #2
   11bc0:	andeq	r0, r0, ip, asr #2
   11bc4:	andeq	r4, r0, r0, lsl r1
   11bc8:	andeq	r0, r0, ip, lsr r1
   11bcc:	ldrdeq	r4, [r0], -ip
   11bd0:	strdeq	r4, [r0], -r0
   11bd4:	andeq	r4, r0, ip, lsl #2
   11bd8:	andeq	r4, r0, r4, lsl #4
   11bdc:	andeq	r4, r0, ip, lsl #6
   11be0:	andeq	r4, r0, r4, ror #6
   11be4:	andeq	r4, r0, r4, lsl #8
   11be8:	andeq	r4, r0, r0, lsr #10
   11bec:	ldrdeq	r4, [r0], -r0
   11bf0:	ldrdeq	r4, [r0], -r8
   11bf4:	andeq	r4, r0, r8, asr r7
   11bf8:	andeq	r4, r0, r0, ror #14
   11bfc:	andeq	r4, r0, ip, ror #14
   11c00:	andeq	r4, r0, r8, ror #14
   11c04:	muleq	r0, r8, r7
   11c08:	andeq	r4, r0, ip, lsl r7
   11c0c:	push	{r3, r4, r5, lr}
   11c10:	mov	r1, r0
   11c14:	ldr	r4, [pc, #40]	; 11c44 <usage@@Base+0x328>
   11c18:	add	r4, pc, r4
   11c1c:	ldr	r5, [r4]
   11c20:	ldr	r0, [r5]
   11c24:	cmp	r0, #0
   11c28:	popeq	{r3, r4, r5, pc}
   11c2c:	bl	11304 <strcmp@plt>
   11c30:	rsbs	r0, r0, #1
   11c34:	movcc	r0, #0
   11c38:	add	r5, r5, r0, lsl #2
   11c3c:	str	r5, [r4]
   11c40:	pop	{r3, r4, r5, pc}
   11c44:	andeq	r5, r1, ip, lsl #11
   11c48:	ldr	r1, [pc, #36]	; 11c74 <usage@@Base+0x358>
   11c4c:	mov	r2, #5
   11c50:	push	{r3, lr}
   11c54:	add	r1, pc, r1
   11c58:	mov	r0, #0
   11c5c:	bl	11364 <dcgettext@plt>
   11c60:	mov	r1, #0
   11c64:	pop	{r3, lr}
   11c68:	mov	r2, r0
   11c6c:	mov	r0, #2
   11c70:	b	1140c <error@plt>
   11c74:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   11c78:	push	{r3, r4, r5, lr}
   11c7c:	mov	r5, r0
   11c80:	mov	r0, #16
   11c84:	bl	14ef8 <close_stdout@@Base+0x23a8>
   11c88:	mov	r3, #1
   11c8c:	mov	r4, r0
   11c90:	mov	r0, r5
   11c94:	str	r3, [r4]
   11c98:	bl	150f0 <close_stdout@@Base+0x25a0>
   11c9c:	str	r0, [r4, #4]
   11ca0:	mov	r0, r4
   11ca4:	pop	{r3, r4, r5, pc}
   11ca8:	push	{r4, lr}
   11cac:	mov	r4, r0
   11cb0:	ldr	r3, [r0]
   11cb4:	cmp	r3, #1
   11cb8:	beq	11cd0 <usage@@Base+0x3b4>
   11cbc:	add	r0, r0, #4
   11cc0:	bl	114cc <__gmpz_clear@plt>
   11cc4:	mov	r0, r4
   11cc8:	pop	{r4, lr}
   11ccc:	b	11328 <free@plt>
   11cd0:	ldr	r0, [r0, #4]
   11cd4:	bl	11328 <free@plt>
   11cd8:	mov	r0, r4
   11cdc:	pop	{r4, lr}
   11ce0:	b	11328 <free@plt>
   11ce4:	push	{r3, r4, r5, lr}
   11ce8:	mov	r5, r0
   11cec:	mov	r0, #16
   11cf0:	bl	14ef8 <close_stdout@@Base+0x23a8>
   11cf4:	mov	r2, #0
   11cf8:	mov	r1, r5
   11cfc:	mov	r4, r0
   11d00:	str	r2, [r0], #4
   11d04:	bl	11544 <__gmpz_init_set_ui@plt>
   11d08:	mov	r0, r4
   11d0c:	pop	{r3, r4, r5, pc}
   11d10:	push	{r3, lr}
   11d14:	ldr	r3, [r0]
   11d18:	cmp	r3, #0
   11d1c:	beq	11d70 <usage@@Base+0x454>
   11d20:	cmp	r3, #1
   11d24:	bne	11d6c <usage@@Base+0x450>
   11d28:	ldr	r1, [r0, #4]
   11d2c:	ldrb	r2, [r1]
   11d30:	cmp	r2, #0
   11d34:	beq	11d80 <usage@@Base+0x464>
   11d38:	subs	r2, r2, #45	; 0x2d
   11d3c:	rsbs	r3, r2, #0
   11d40:	adcs	r3, r3, r2
   11d44:	add	r2, r1, r3
   11d48:	ldrb	r3, [r1, r3]
   11d4c:	b	11d5c <usage@@Base+0x440>
   11d50:	ldrb	r3, [r2, #1]!
   11d54:	cmp	r3, #0
   11d58:	beq	11d88 <usage@@Base+0x46c>
   11d5c:	cmp	r3, #48	; 0x30
   11d60:	beq	11d50 <usage@@Base+0x434>
   11d64:	mov	r0, #0
   11d68:	pop	{r3, pc}
   11d6c:	bl	115bc <abort@plt>
   11d70:	ldr	r0, [r0, #8]
   11d74:	rsbs	r0, r0, #1
   11d78:	movcc	r0, #0
   11d7c:	pop	{r3, pc}
   11d80:	mov	r0, r3
   11d84:	pop	{r3, pc}
   11d88:	mov	r0, #1
   11d8c:	pop	{r3, pc}
   11d90:	push	{r4, r5, r6, lr}
   11d94:	mov	r5, r0
   11d98:	ldr	r3, [r0]
   11d9c:	cmp	r3, #0
   11da0:	beq	11df0 <usage@@Base+0x4d4>
   11da4:	cmp	r3, #1
   11da8:	bne	11dec <usage@@Base+0x4d0>
   11dac:	ldr	r6, [r0, #4]
   11db0:	ldrb	r2, [r6]
   11db4:	subs	r3, r2, #45	; 0x2d
   11db8:	rsbs	r2, r3, #0
   11dbc:	adcs	r2, r2, r3
   11dc0:	add	r3, r6, r2
   11dc4:	ldrb	r4, [r6, r2]
   11dc8:	b	11dd8 <usage@@Base+0x4bc>
   11dcc:	ldrb	r4, [r3, #1]!
   11dd0:	cmp	r4, #0
   11dd4:	beq	11df8 <usage@@Base+0x4dc>
   11dd8:	sub	r4, r4, #48	; 0x30
   11ddc:	cmp	r4, #9
   11de0:	bls	11dcc <usage@@Base+0x4b0>
   11de4:	mov	r0, #0
   11de8:	pop	{r4, r5, r6, pc}
   11dec:	bl	115bc <abort@plt>
   11df0:	mov	r0, #1
   11df4:	pop	{r4, r5, r6, pc}
   11df8:	mov	r1, r6
   11dfc:	mov	r2, #10
   11e00:	add	r0, r5, #4
   11e04:	bl	1158c <__gmpz_init_set_str@plt>
   11e08:	mov	r0, r6
   11e0c:	bl	11328 <free@plt>
   11e10:	mov	r0, #1
   11e14:	str	r4, [r5]
   11e18:	pop	{r4, r5, r6, pc}
   11e1c:	push	{r4, r5, r6, lr}
   11e20:	mov	r4, r0
   11e24:	ldr	r0, [r0]
   11e28:	cmp	r0, #0
   11e2c:	beq	11e3c <usage@@Base+0x520>
   11e30:	cmp	r0, #1
   11e34:	popeq	{r4, r5, r6, pc}
   11e38:	bl	115bc <abort@plt>
   11e3c:	add	r5, r4, #4
   11e40:	mov	r1, #10
   11e44:	mov	r2, r5
   11e48:	bl	11370 <__gmpz_get_str@plt>
   11e4c:	mov	r6, r0
   11e50:	mov	r0, r5
   11e54:	bl	114cc <__gmpz_clear@plt>
   11e58:	mov	r3, #1
   11e5c:	str	r6, [r4, #4]
   11e60:	str	r3, [r4]
   11e64:	pop	{r4, r5, r6, pc}
   11e68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e6c:	sub	sp, sp, #312	; 0x138
   11e70:	ldr	r6, [pc, #456]	; 12040 <usage@@Base+0x724>
   11e74:	mov	r8, r1
   11e78:	ldr	r3, [pc, #452]	; 12044 <usage@@Base+0x728>
   11e7c:	mov	r9, r0
   11e80:	add	r6, pc, r6
   11e84:	mov	r4, #0
   11e88:	add	r5, sp, #20
   11e8c:	ldr	r7, [r6, r3]
   11e90:	ldr	r3, [r7]
   11e94:	str	r3, [sp, #308]	; 0x134
   11e98:	bl	11e1c <usage@@Base+0x500>
   11e9c:	mov	r0, r8
   11ea0:	bl	11e1c <usage@@Base+0x500>
   11ea4:	ldr	r3, [pc, #412]	; 12048 <usage@@Base+0x72c>
   11ea8:	ldr	r8, [r8, #4]
   11eac:	add	r1, sp, #52	; 0x34
   11eb0:	str	r4, [sp, #8]
   11eb4:	movw	r2, #710	; 0x2c6
   11eb8:	str	r1, [sp, #36]	; 0x24
   11ebc:	str	r4, [sp, #12]
   11ec0:	mov	r0, r8
   11ec4:	str	r4, [sp, #16]
   11ec8:	str	r4, [sp, #20]
   11ecc:	str	r4, [sp, #24]
   11ed0:	str	r4, [sp, #40]	; 0x28
   11ed4:	ldr	r3, [r6, r3]
   11ed8:	str	r2, [r3]
   11edc:	bl	114a8 <strlen@plt>
   11ee0:	mov	r2, r5
   11ee4:	mov	r1, r0
   11ee8:	mov	r0, r8
   11eec:	bl	115a4 <re_compile_pattern@plt>
   11ef0:	subs	r3, r0, #0
   11ef4:	beq	11f0c <usage@@Base+0x5f0>
   11ef8:	ldr	r2, [pc, #332]	; 1204c <usage@@Base+0x730>
   11efc:	mov	r1, r4
   11f00:	mov	r0, #2
   11f04:	add	r2, pc, r2
   11f08:	bl	1140c <error@plt>
   11f0c:	ldr	r4, [r9, #4]
   11f10:	ldrb	r3, [sp, #48]	; 0x30
   11f14:	mov	r0, r4
   11f18:	bfc	r3, #7, #1
   11f1c:	strb	r3, [sp, #48]	; 0x30
   11f20:	bl	114a8 <strlen@plt>
   11f24:	mov	r3, #0
   11f28:	add	ip, sp, #8
   11f2c:	mov	r1, r4
   11f30:	str	ip, [sp]
   11f34:	mov	r2, r0
   11f38:	mov	r0, r5
   11f3c:	bl	114b4 <re_match@plt>
   11f40:	subs	r3, r0, #0
   11f44:	blt	11fd4 <usage@@Base+0x6b8>
   11f48:	ldr	r3, [sp, #44]	; 0x2c
   11f4c:	cmp	r3, #0
   11f50:	bne	11fa4 <usage@@Base+0x688>
   11f54:	bl	11ce4 <usage@@Base+0x3c8>
   11f58:	mov	sl, r0
   11f5c:	ldr	r3, [sp, #8]
   11f60:	cmp	r3, #0
   11f64:	beq	11f78 <usage@@Base+0x65c>
   11f68:	ldr	r0, [sp, #12]
   11f6c:	bl	11328 <free@plt>
   11f70:	ldr	r0, [sp, #16]
   11f74:	bl	11328 <free@plt>
   11f78:	mov	r0, r5
   11f7c:	mov	r3, #0
   11f80:	str	r3, [sp, #36]	; 0x24
   11f84:	bl	113d0 <regfree@plt>
   11f88:	ldr	r2, [sp, #308]	; 0x134
   11f8c:	mov	r0, sl
   11f90:	ldr	r3, [r7]
   11f94:	cmp	r2, r3
   11f98:	bne	1203c <usage@@Base+0x720>
   11f9c:	add	sp, sp, #312	; 0x138
   11fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fa4:	ldr	r3, [sp, #16]
   11fa8:	mov	r1, #0
   11fac:	ldr	r2, [r9, #4]
   11fb0:	ldr	r3, [r3, #4]
   11fb4:	strb	r1, [r2, r3]
   11fb8:	ldr	r3, [sp, #12]
   11fbc:	ldr	r0, [r9, #4]
   11fc0:	ldr	r3, [r3, #4]
   11fc4:	add	r0, r0, r3
   11fc8:	bl	11c78 <usage@@Base+0x35c>
   11fcc:	mov	sl, r0
   11fd0:	b	11f5c <usage@@Base+0x640>
   11fd4:	cmn	r3, #1
   11fd8:	beq	12010 <usage@@Base+0x6f4>
   11fdc:	cmn	r3, #2
   11fe0:	movne	r4, #75	; 0x4b
   11fe4:	beq	12030 <usage@@Base+0x714>
   11fe8:	ldr	r1, [pc, #96]	; 12050 <usage@@Base+0x734>
   11fec:	mov	r2, #5
   11ff0:	mov	r0, #0
   11ff4:	add	r1, pc, r1
   11ff8:	bl	11364 <dcgettext@plt>
   11ffc:	mov	r1, r4
   12000:	mov	r2, r0
   12004:	mov	r0, #3
   12008:	bl	1140c <error@plt>
   1200c:	b	11f5c <usage@@Base+0x640>
   12010:	ldr	r0, [sp, #44]	; 0x2c
   12014:	cmp	r0, #0
   12018:	beq	11f54 <usage@@Base+0x638>
   1201c:	ldr	r0, [pc, #48]	; 12054 <usage@@Base+0x738>
   12020:	add	r0, pc, r0
   12024:	bl	11c78 <usage@@Base+0x35c>
   12028:	mov	sl, r0
   1202c:	b	11f5c <usage@@Base+0x640>
   12030:	bl	114d8 <__errno_location@plt>
   12034:	ldr	r4, [r0]
   12038:	b	11fe8 <usage@@Base+0x6cc>
   1203c:	bl	1137c <__stack_chk_fail@plt>
   12040:	andeq	r5, r1, r8, ror r1
   12044:	andeq	r0, r0, r4, lsl r1
   12048:	andeq	r0, r0, r8, lsr #2
   1204c:	andeq	r4, r0, r4, asr r5
   12050:	andeq	r4, r0, r4, asr #6
   12054:	andeq	r4, r0, r4, lsl #6
   12058:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1205c:	mov	r4, r0
   12060:	ldr	r0, [pc, #940]	; 12414 <usage@@Base+0xaf8>
   12064:	add	r0, pc, r0
   12068:	bl	11c0c <usage@@Base+0x2f0>
   1206c:	cmp	r0, #0
   12070:	beq	120a4 <usage@@Base+0x788>
   12074:	ldr	r4, [pc, #924]	; 12418 <usage@@Base+0xafc>
   12078:	add	r4, pc, r4
   1207c:	ldr	r3, [r4]
   12080:	ldr	r0, [r3]
   12084:	cmp	r0, #0
   12088:	beq	1224c <usage@@Base+0x930>
   1208c:	ldr	r2, [pc, #904]	; 1241c <usage@@Base+0xb00>
   12090:	add	r3, r3, #4
   12094:	add	r2, pc, r2
   12098:	str	r3, [r2]
   1209c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   120a0:	b	11c78 <usage@@Base+0x35c>
   120a4:	ldr	r0, [pc, #884]	; 12420 <usage@@Base+0xb04>
   120a8:	add	r0, pc, r0
   120ac:	bl	11c0c <usage@@Base+0x2f0>
   120b0:	cmp	r0, #0
   120b4:	bne	12118 <usage@@Base+0x7fc>
   120b8:	ldr	r0, [pc, #868]	; 12424 <usage@@Base+0xb08>
   120bc:	add	r0, pc, r0
   120c0:	bl	11c0c <usage@@Base+0x2f0>
   120c4:	cmp	r0, #0
   120c8:	beq	12148 <usage@@Base+0x82c>
   120cc:	mov	r0, r4
   120d0:	bl	12058 <usage@@Base+0x73c>
   120d4:	mov	r5, r0
   120d8:	mov	r0, r4
   120dc:	bl	12058 <usage@@Base+0x73c>
   120e0:	cmp	r4, #0
   120e4:	mov	r6, r0
   120e8:	beq	12108 <usage@@Base+0x7ec>
   120ec:	mov	r0, r5
   120f0:	mov	r1, r6
   120f4:	bl	11e68 <usage@@Base+0x54c>
   120f8:	mov	r3, r0
   120fc:	mov	r0, r5
   12100:	mov	r5, r3
   12104:	bl	11ca8 <usage@@Base+0x38c>
   12108:	mov	r0, r6
   1210c:	bl	11ca8 <usage@@Base+0x38c>
   12110:	mov	r0, r5
   12114:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12118:	mov	r0, r4
   1211c:	bl	12058 <usage@@Base+0x73c>
   12120:	mov	r4, r0
   12124:	bl	11e1c <usage@@Base+0x500>
   12128:	ldr	r0, [r4, #4]
   1212c:	bl	114a8 <strlen@plt>
   12130:	bl	11ce4 <usage@@Base+0x3c8>
   12134:	mov	r5, r0
   12138:	mov	r0, r4
   1213c:	bl	11ca8 <usage@@Base+0x38c>
   12140:	mov	r0, r5
   12144:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12148:	ldr	r0, [pc, #728]	; 12428 <usage@@Base+0xb0c>
   1214c:	add	r0, pc, r0
   12150:	bl	11c0c <usage@@Base+0x2f0>
   12154:	subs	r5, r0, #0
   12158:	bne	1225c <usage@@Base+0x940>
   1215c:	ldr	r0, [pc, #712]	; 1242c <usage@@Base+0xb10>
   12160:	add	r0, pc, r0
   12164:	bl	11c0c <usage@@Base+0x2f0>
   12168:	cmp	r0, #0
   1216c:	beq	122c4 <usage@@Base+0x9a8>
   12170:	mov	r0, r4
   12174:	bl	12058 <usage@@Base+0x73c>
   12178:	mov	r6, r0
   1217c:	mov	r0, r4
   12180:	bl	12058 <usage@@Base+0x73c>
   12184:	mov	r7, r0
   12188:	mov	r0, r4
   1218c:	bl	12058 <usage@@Base+0x73c>
   12190:	mov	r4, r0
   12194:	mov	r0, r6
   12198:	bl	11e1c <usage@@Base+0x500>
   1219c:	ldr	r0, [r6, #4]
   121a0:	bl	114a8 <strlen@plt>
   121a4:	mov	r8, r0
   121a8:	mov	r0, r7
   121ac:	bl	11d90 <usage@@Base+0x474>
   121b0:	cmp	r0, #0
   121b4:	beq	12318 <usage@@Base+0x9fc>
   121b8:	mov	r0, r4
   121bc:	bl	11d90 <usage@@Base+0x474>
   121c0:	cmp	r0, #0
   121c4:	beq	12318 <usage@@Base+0x9fc>
   121c8:	ldr	r3, [r7, #8]
   121cc:	cmp	r3, #0
   121d0:	mvnlt	r9, #0
   121d4:	blt	121e4 <usage@@Base+0x8c8>
   121d8:	cmp	r3, #1
   121dc:	bls	1237c <usage@@Base+0xa60>
   121e0:	mvn	r9, #1
   121e4:	ldr	r3, [r4, #8]
   121e8:	cmp	r3, #0
   121ec:	mvnlt	r3, #0
   121f0:	blt	12200 <usage@@Base+0x8e4>
   121f4:	cmp	r3, #1
   121f8:	mvnhi	r3, #1
   121fc:	bls	123a8 <usage@@Base+0xa8c>
   12200:	cmp	r8, r9
   12204:	orrcc	r5, r5, #1
   12208:	ands	sl, r5, #255	; 0xff
   1220c:	bne	1221c <usage@@Base+0x900>
   12210:	sub	r2, r3, #1
   12214:	cmn	r2, #3
   12218:	bls	123c8 <usage@@Base+0xaac>
   1221c:	ldr	r0, [pc, #524]	; 12430 <usage@@Base+0xb14>
   12220:	add	r0, pc, r0
   12224:	bl	11c78 <usage@@Base+0x35c>
   12228:	mov	r5, r0
   1222c:	mov	r0, r6
   12230:	bl	11ca8 <usage@@Base+0x38c>
   12234:	mov	r0, r7
   12238:	bl	11ca8 <usage@@Base+0x38c>
   1223c:	mov	r0, r4
   12240:	bl	11ca8 <usage@@Base+0x38c>
   12244:	mov	r0, r5
   12248:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1224c:	bl	11c48 <usage@@Base+0x32c>
   12250:	ldr	r3, [r4]
   12254:	ldr	r0, [r3]
   12258:	b	1208c <usage@@Base+0x770>
   1225c:	mov	r0, r4
   12260:	bl	12058 <usage@@Base+0x73c>
   12264:	mov	r5, r0
   12268:	mov	r0, r4
   1226c:	bl	12058 <usage@@Base+0x73c>
   12270:	mov	r4, r0
   12274:	mov	r0, r5
   12278:	bl	11e1c <usage@@Base+0x500>
   1227c:	mov	r0, r4
   12280:	bl	11e1c <usage@@Base+0x500>
   12284:	ldr	r6, [r5, #4]
   12288:	ldr	r1, [r4, #4]
   1228c:	mov	r0, r6
   12290:	bl	11310 <strcspn@plt>
   12294:	ldrb	r3, [r6, r0]
   12298:	cmp	r3, #0
   1229c:	addne	r0, r0, #1
   122a0:	moveq	r0, r3
   122a4:	bl	11ce4 <usage@@Base+0x3c8>
   122a8:	mov	r6, r0
   122ac:	mov	r0, r5
   122b0:	bl	11ca8 <usage@@Base+0x38c>
   122b4:	mov	r0, r4
   122b8:	bl	11ca8 <usage@@Base+0x38c>
   122bc:	mov	r0, r6
   122c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122c4:	ldr	r3, [pc, #360]	; 12434 <usage@@Base+0xb18>
   122c8:	add	r3, pc, r3
   122cc:	ldr	r3, [r3]
   122d0:	ldr	r3, [r3]
   122d4:	cmp	r3, #0
   122d8:	beq	12374 <usage@@Base+0xa58>
   122dc:	ldr	r0, [pc, #340]	; 12438 <usage@@Base+0xb1c>
   122e0:	add	r0, pc, r0
   122e4:	bl	11c0c <usage@@Base+0x2f0>
   122e8:	cmp	r0, #0
   122ec:	beq	1232c <usage@@Base+0xa10>
   122f0:	mov	r0, r4
   122f4:	bl	12a80 <usage@@Base+0x1164>
   122f8:	mov	r4, r0
   122fc:	ldr	r0, [pc, #312]	; 1243c <usage@@Base+0xb20>
   12300:	add	r0, pc, r0
   12304:	bl	11c0c <usage@@Base+0x2f0>
   12308:	cmp	r0, #0
   1230c:	beq	12360 <usage@@Base+0xa44>
   12310:	mov	r0, r4
   12314:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12318:	ldr	r0, [pc, #288]	; 12440 <usage@@Base+0xb24>
   1231c:	add	r0, pc, r0
   12320:	bl	11c78 <usage@@Base+0x35c>
   12324:	mov	r5, r0
   12328:	b	1222c <usage@@Base+0x910>
   1232c:	ldr	r0, [pc, #272]	; 12444 <usage@@Base+0xb28>
   12330:	add	r0, pc, r0
   12334:	bl	11c0c <usage@@Base+0x2f0>
   12338:	cmp	r0, #0
   1233c:	bne	1236c <usage@@Base+0xa50>
   12340:	ldr	r2, [pc, #256]	; 12448 <usage@@Base+0xb2c>
   12344:	add	r2, pc, r2
   12348:	ldr	r3, [r2]
   1234c:	add	r1, r3, #4
   12350:	str	r1, [r2]
   12354:	ldr	r0, [r3]
   12358:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1235c:	b	11c78 <usage@@Base+0x35c>
   12360:	bl	11c48 <usage@@Base+0x32c>
   12364:	mov	r0, r4
   12368:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1236c:	bl	11c48 <usage@@Base+0x32c>
   12370:	b	12340 <usage@@Base+0xa24>
   12374:	bl	11c48 <usage@@Base+0x32c>
   12378:	b	122dc <usage@@Base+0x9c0>
   1237c:	ldr	r2, [r7, #12]
   12380:	cmp	r3, #0
   12384:	moveq	r5, r0
   12388:	ldr	r9, [r2]
   1238c:	moveq	r9, #0
   12390:	beq	121e4 <usage@@Base+0x8c8>
   12394:	cmn	r9, #1
   12398:	beq	121e0 <usage@@Base+0x8c4>
   1239c:	rsbs	r5, r9, #1
   123a0:	movcc	r5, #0
   123a4:	b	121e4 <usage@@Base+0x8c8>
   123a8:	ldr	r2, [r4, #12]
   123ac:	cmp	r3, #0
   123b0:	ldr	r2, [r2]
   123b4:	beq	12200 <usage@@Base+0x8e4>
   123b8:	cmn	r2, #1
   123bc:	movne	r3, r2
   123c0:	mvneq	r3, #1
   123c4:	b	12200 <usage@@Base+0x8e4>
   123c8:	add	r8, r8, #1
   123cc:	mov	r0, #16
   123d0:	rsb	r8, r9, r8
   123d4:	sub	r9, r9, #1
   123d8:	cmp	r3, r8
   123dc:	movcc	r8, r3
   123e0:	bl	14ef8 <close_stdout@@Base+0x23a8>
   123e4:	mov	r3, #1
   123e8:	mov	r5, r0
   123ec:	add	r0, r8, #1
   123f0:	str	r3, [r5]
   123f4:	bl	14ef8 <close_stdout@@Base+0x23a8>
   123f8:	mov	r2, r8
   123fc:	str	r0, [r5, #4]
   12400:	ldr	r1, [r6, #4]
   12404:	add	r1, r1, r9
   12408:	bl	11478 <mempcpy@plt>
   1240c:	strb	sl, [r0]
   12410:	b	1222c <usage@@Base+0x910>
   12414:	strdeq	r4, [r0], -r8
   12418:	andeq	r5, r1, ip, lsr #2
   1241c:	andeq	r5, r1, r0, lsl r1
   12420:			; <UNDEFINED> instruction: 0x000042b8
   12424:	andeq	r4, r0, ip, lsr #5
   12428:	andeq	r4, r0, r4, lsr #4
   1242c:	andeq	r4, r0, r8, lsl r2
   12430:	andeq	r4, r0, r4, lsl #2
   12434:	ldrdeq	r4, [r1], -ip
   12438:	andeq	r4, r0, r0, lsr #1
   1243c:	andeq	r4, r0, r4, lsl #1
   12440:	andeq	r4, r0, r8
   12444:	andeq	r4, r0, r4, asr r0
   12448:	andeq	r4, r1, r0, ror #28
   1244c:	push	{r3, r4, r5, r6, r7, lr}
   12450:	mov	r5, r0
   12454:	bl	12058 <usage@@Base+0x73c>
   12458:	ldr	r6, [pc, #92]	; 124bc <usage@@Base+0xba0>
   1245c:	add	r6, pc, r6
   12460:	mov	r7, r0
   12464:	b	12470 <usage@@Base+0xb54>
   12468:	mov	r0, r4
   1246c:	bl	11ca8 <usage@@Base+0x38c>
   12470:	mov	r0, r6
   12474:	bl	11c0c <usage@@Base+0x2f0>
   12478:	cmp	r0, #0
   1247c:	mov	r0, r5
   12480:	beq	124b4 <usage@@Base+0xb98>
   12484:	bl	12058 <usage@@Base+0x73c>
   12488:	cmp	r5, #0
   1248c:	mov	r4, r0
   12490:	beq	12468 <usage@@Base+0xb4c>
   12494:	mov	r0, r7
   12498:	mov	r1, r4
   1249c:	bl	11e68 <usage@@Base+0x54c>
   124a0:	mov	r3, r0
   124a4:	mov	r0, r7
   124a8:	mov	r7, r3
   124ac:	bl	11ca8 <usage@@Base+0x38c>
   124b0:	b	12468 <usage@@Base+0xb4c>
   124b4:	mov	r0, r7
   124b8:	pop	{r3, r4, r5, r6, r7, pc}
   124bc:	andeq	r3, r0, ip, lsr #30
   124c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124c4:	sub	sp, sp, #20
   124c8:	mov	r4, r0
   124cc:	bl	1244c <usage@@Base+0xb30>
   124d0:	ldr	r3, [pc, #356]	; 1263c <usage@@Base+0xd20>
   124d4:	ldr	r6, [pc, #356]	; 12640 <usage@@Base+0xd24>
   124d8:	add	r3, pc, r3
   124dc:	ldr	r7, [pc, #352]	; 12644 <usage@@Base+0xd28>
   124e0:	str	r3, [sp, #12]
   124e4:	add	r6, pc, r6
   124e8:	ldr	r9, [pc, #344]	; 12648 <usage@@Base+0xd2c>
   124ec:	add	r7, pc, r7
   124f0:	ldr	r3, [pc, #340]	; 1264c <usage@@Base+0xd30>
   124f4:	ldr	sl, [pc, #340]	; 12650 <usage@@Base+0xd34>
   124f8:	add	r9, pc, r9
   124fc:	add	r3, pc, r3
   12500:	str	r3, [sp, #8]
   12504:	add	sl, pc, sl
   12508:	mov	r8, r0
   1250c:	b	12540 <usage@@Base+0xc24>
   12510:	mov	r0, r9
   12514:	bl	11c0c <usage@@Base+0x2f0>
   12518:	cmp	r0, #0
   1251c:	beq	125f4 <usage@@Base+0xcd8>
   12520:	mov	r5, #2
   12524:	mov	r0, r4
   12528:	bl	1244c <usage@@Base+0xb30>
   1252c:	cmp	r4, #0
   12530:	mov	fp, r0
   12534:	bne	12570 <usage@@Base+0xc54>
   12538:	mov	r0, fp
   1253c:	bl	11ca8 <usage@@Base+0x38c>
   12540:	mov	r0, r6
   12544:	bl	11c0c <usage@@Base+0x2f0>
   12548:	cmp	r0, #0
   1254c:	bne	12568 <usage@@Base+0xc4c>
   12550:	mov	r0, r7
   12554:	bl	11c0c <usage@@Base+0x2f0>
   12558:	cmp	r0, #0
   1255c:	beq	12510 <usage@@Base+0xbf4>
   12560:	mov	r5, #1
   12564:	b	12524 <usage@@Base+0xc08>
   12568:	mov	r5, #0
   1256c:	b	12524 <usage@@Base+0xc08>
   12570:	mov	r0, r8
   12574:	bl	11d90 <usage@@Base+0x474>
   12578:	cmp	r0, #0
   1257c:	beq	12590 <usage@@Base+0xc74>
   12580:	mov	r0, fp
   12584:	bl	11d90 <usage@@Base+0x474>
   12588:	cmp	r0, #0
   1258c:	bne	125b0 <usage@@Base+0xc94>
   12590:	ldr	r1, [sp, #8]
   12594:	mov	r2, #5
   12598:	mov	r0, #0
   1259c:	bl	11364 <dcgettext@plt>
   125a0:	mov	r1, #0
   125a4:	mov	r2, r0
   125a8:	mov	r0, #2
   125ac:	bl	1140c <error@plt>
   125b0:	cmp	r5, #0
   125b4:	beq	125e8 <usage@@Base+0xccc>
   125b8:	ldr	ip, [fp, #8]
   125bc:	cmp	ip, #0
   125c0:	beq	12600 <usage@@Base+0xce4>
   125c4:	cmp	r5, #1
   125c8:	beq	12630 <usage@@Base+0xd14>
   125cc:	ldr	r2, [pc, #128]	; 12654 <usage@@Base+0xd38>
   125d0:	ldr	ip, [sl, r2]
   125d4:	add	r0, r8, #4
   125d8:	add	r2, fp, #4
   125dc:	mov	r1, r0
   125e0:	blx	ip
   125e4:	b	12538 <usage@@Base+0xc1c>
   125e8:	ldr	r2, [pc, #104]	; 12658 <usage@@Base+0xd3c>
   125ec:	ldr	ip, [sl, r2]
   125f0:	b	125d4 <usage@@Base+0xcb8>
   125f4:	mov	r0, r8
   125f8:	add	sp, sp, #20
   125fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12600:	mov	r0, ip
   12604:	ldr	r1, [sp, #12]
   12608:	mov	r2, #5
   1260c:	str	ip, [sp, #4]
   12610:	bl	11364 <dcgettext@plt>
   12614:	ldr	ip, [sp, #4]
   12618:	mov	r1, ip
   1261c:	mov	r2, r0
   12620:	mov	r0, #2
   12624:	bl	1140c <error@plt>
   12628:	cmp	r5, #1
   1262c:	bne	125cc <usage@@Base+0xcb0>
   12630:	ldr	r2, [pc, #36]	; 1265c <usage@@Base+0xd40>
   12634:	ldr	ip, [sl, r2]
   12638:	b	125d4 <usage@@Base+0xcb8>
   1263c:	ldrdeq	r3, [r0], -r8
   12640:	andeq	r3, r0, r8, lsr #29
   12644:	andeq	r3, r0, r4, lsr #29
   12648:	muleq	r0, ip, lr
   1264c:	muleq	r0, ip, lr
   12650:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12654:	andeq	r0, r0, r8, lsr r1
   12658:	andeq	r0, r0, r0, lsr #2
   1265c:	andeq	r0, r0, r0, lsl r1
   12660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12664:	sub	sp, sp, #12
   12668:	mov	r4, r0
   1266c:	bl	124c0 <usage@@Base+0xba4>
   12670:	ldr	r6, [pc, #236]	; 12764 <usage@@Base+0xe48>
   12674:	ldr	r7, [pc, #236]	; 12768 <usage@@Base+0xe4c>
   12678:	ldr	r3, [pc, #236]	; 1276c <usage@@Base+0xe50>
   1267c:	add	r6, pc, r6
   12680:	ldr	sl, [pc, #232]	; 12770 <usage@@Base+0xe54>
   12684:	add	r7, pc, r7
   12688:	add	r3, pc, r3
   1268c:	str	r3, [sp, #4]
   12690:	add	sl, pc, sl
   12694:	mov	r9, r0
   12698:	add	r8, r0, #4
   1269c:	b	126d0 <usage@@Base+0xdb4>
   126a0:	mov	r0, r7
   126a4:	bl	11c0c <usage@@Base+0x2f0>
   126a8:	cmp	r0, #0
   126ac:	beq	12758 <usage@@Base+0xe3c>
   126b0:	mov	r5, #1
   126b4:	mov	r0, r4
   126b8:	bl	124c0 <usage@@Base+0xba4>
   126bc:	cmp	r4, #0
   126c0:	mov	fp, r0
   126c4:	bne	126e8 <usage@@Base+0xdcc>
   126c8:	mov	r0, fp
   126cc:	bl	11ca8 <usage@@Base+0x38c>
   126d0:	mov	r0, r6
   126d4:	bl	11c0c <usage@@Base+0x2f0>
   126d8:	cmp	r0, #0
   126dc:	beq	126a0 <usage@@Base+0xd84>
   126e0:	mov	r5, #0
   126e4:	b	126b4 <usage@@Base+0xd98>
   126e8:	mov	r0, r9
   126ec:	bl	11d90 <usage@@Base+0x474>
   126f0:	cmp	r0, #0
   126f4:	beq	12708 <usage@@Base+0xdec>
   126f8:	mov	r0, fp
   126fc:	bl	11d90 <usage@@Base+0x474>
   12700:	cmp	r0, #0
   12704:	bne	12728 <usage@@Base+0xe0c>
   12708:	ldr	r1, [sp, #4]
   1270c:	mov	r2, #5
   12710:	mov	r0, #0
   12714:	bl	11364 <dcgettext@plt>
   12718:	mov	r1, #0
   1271c:	mov	r2, r0
   12720:	mov	r0, #2
   12724:	bl	1140c <error@plt>
   12728:	cmp	r5, #0
   1272c:	bne	1274c <usage@@Base+0xe30>
   12730:	ldr	r2, [pc, #60]	; 12774 <usage@@Base+0xe58>
   12734:	ldr	ip, [sl, r2]
   12738:	mov	r0, r8
   1273c:	mov	r1, r8
   12740:	add	r2, fp, #4
   12744:	blx	ip
   12748:	b	126c8 <usage@@Base+0xdac>
   1274c:	ldr	r2, [pc, #36]	; 12778 <usage@@Base+0xe5c>
   12750:	ldr	ip, [sl, r2]
   12754:	b	12738 <usage@@Base+0xe1c>
   12758:	mov	r0, r9
   1275c:	add	sp, sp, #12
   12760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12764:	andeq	r3, r0, r0, ror #25
   12768:	andeq	r3, r0, r0, asr #26
   1276c:	andeq	r3, r0, r0, lsl sp
   12770:	andeq	r4, r1, r8, ror #18
   12774:	andeq	r0, r0, r0, asr r1
   12778:	andeq	r0, r0, r8, lsl r1
   1277c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12780:	sub	sp, sp, #12
   12784:	mov	r6, r0
   12788:	bl	12660 <usage@@Base+0xd44>
   1278c:	ldr	r8, [pc, #552]	; 129bc <usage@@Base+0x10a0>
   12790:	ldr	r3, [pc, #552]	; 129c0 <usage@@Base+0x10a4>
   12794:	add	r8, pc, r8
   12798:	ldr	r9, [pc, #548]	; 129c4 <usage@@Base+0x10a8>
   1279c:	add	r3, pc, r3
   127a0:	str	r3, [sp]
   127a4:	ldr	r3, [pc, #540]	; 129c8 <usage@@Base+0x10ac>
   127a8:	add	r9, pc, r9
   127ac:	ldr	sl, [pc, #536]	; 129cc <usage@@Base+0x10b0>
   127b0:	add	r3, pc, r3
   127b4:	str	r3, [sp, #4]
   127b8:	ldr	fp, [pc, #528]	; 129d0 <usage@@Base+0x10b4>
   127bc:	add	sl, pc, sl
   127c0:	add	fp, pc, fp
   127c4:	mov	r4, r0
   127c8:	mov	r0, r8
   127cc:	bl	11c0c <usage@@Base+0x2f0>
   127d0:	cmp	r0, #0
   127d4:	bne	128bc <usage@@Base+0xfa0>
   127d8:	mov	r0, r9
   127dc:	bl	11c0c <usage@@Base+0x2f0>
   127e0:	cmp	r0, #0
   127e4:	movne	r7, #1
   127e8:	beq	12930 <usage@@Base+0x1014>
   127ec:	mov	r0, r6
   127f0:	bl	12660 <usage@@Base+0xd44>
   127f4:	cmp	r6, #0
   127f8:	moveq	r7, r6
   127fc:	mov	r5, r0
   12800:	beq	12890 <usage@@Base+0xf74>
   12804:	mov	r0, r4
   12808:	bl	11e1c <usage@@Base+0x500>
   1280c:	mov	r0, r5
   12810:	bl	11e1c <usage@@Base+0x500>
   12814:	ldr	r0, [r4, #4]
   12818:	ldrb	r3, [r0]
   1281c:	subs	r1, r3, #45	; 0x2d
   12820:	rsbs	r3, r1, #0
   12824:	adcs	r3, r3, r1
   12828:	add	r2, r0, r3
   1282c:	ldrb	r3, [r0, r3]
   12830:	b	12840 <usage@@Base+0xf24>
   12834:	ldrb	r3, [r2, #1]!
   12838:	cmp	r3, #0
   1283c:	beq	128f4 <usage@@Base+0xfd8>
   12840:	sub	r3, r3, #48	; 0x30
   12844:	cmp	r3, #9
   12848:	bls	12834 <usage@@Base+0xf18>
   1284c:	bl	114d8 <__errno_location@plt>
   12850:	mov	r3, #0
   12854:	str	r3, [r0]
   12858:	ldr	r0, [r4, #4]
   1285c:	ldr	r1, [r5, #4]
   12860:	bl	11424 <strcoll@plt>
   12864:	sub	r7, r7, #1
   12868:	cmp	r7, #4
   1286c:	addls	pc, pc, r7, lsl #2
   12870:	b	128e0 <usage@@Base+0xfc4>
   12874:	b	128d0 <usage@@Base+0xfb4>
   12878:	b	128c4 <usage@@Base+0xfa8>
   1287c:	b	128e8 <usage@@Base+0xfcc>
   12880:	b	12888 <usage@@Base+0xf6c>
   12884:	b	12950 <usage@@Base+0x1034>
   12888:	mvn	r7, r0
   1288c:	lsr	r7, r7, #31
   12890:	mov	r0, r4
   12894:	bl	11ca8 <usage@@Base+0x38c>
   12898:	mov	r0, r5
   1289c:	bl	11ca8 <usage@@Base+0x38c>
   128a0:	mov	r0, r7
   128a4:	bl	11ce4 <usage@@Base+0x3c8>
   128a8:	mov	r4, r0
   128ac:	mov	r0, r8
   128b0:	bl	11c0c <usage@@Base+0x2f0>
   128b4:	cmp	r0, #0
   128b8:	beq	127d8 <usage@@Base+0xebc>
   128bc:	mov	r7, #0
   128c0:	b	127ec <usage@@Base+0xed0>
   128c4:	rsbs	r7, r0, #1
   128c8:	movcc	r7, #0
   128cc:	b	12890 <usage@@Base+0xf74>
   128d0:	cmp	r0, #0
   128d4:	movgt	r7, #0
   128d8:	movle	r7, #1
   128dc:	b	12890 <usage@@Base+0xf74>
   128e0:	lsr	r7, r0, #31
   128e4:	b	12890 <usage@@Base+0xf74>
   128e8:	adds	r7, r0, #0
   128ec:	movne	r7, #1
   128f0:	b	12890 <usage@@Base+0xf74>
   128f4:	ldr	r1, [r5, #4]
   128f8:	ldrb	r3, [r1]
   128fc:	subs	r2, r3, #45	; 0x2d
   12900:	rsbs	r3, r2, #0
   12904:	adcs	r3, r3, r2
   12908:	add	r2, r1, r3
   1290c:	ldrb	r3, [r1, r3]
   12910:	b	12920 <usage@@Base+0x1004>
   12914:	ldrb	r3, [r2, #1]!
   12918:	cmp	r3, #0
   1291c:	beq	12948 <usage@@Base+0x102c>
   12920:	sub	r3, r3, #48	; 0x30
   12924:	cmp	r3, #9
   12928:	bls	12914 <usage@@Base+0xff8>
   1292c:	b	1284c <usage@@Base+0xf30>
   12930:	mov	r0, sl
   12934:	bl	11c0c <usage@@Base+0x2f0>
   12938:	cmp	r0, #0
   1293c:	beq	12960 <usage@@Base+0x1044>
   12940:	mov	r7, #2
   12944:	b	127ec <usage@@Base+0xed0>
   12948:	bl	14674 <close_stdout@@Base+0x1b24>
   1294c:	b	12864 <usage@@Base+0xf48>
   12950:	cmp	r0, #0
   12954:	movle	r7, #0
   12958:	movgt	r7, #1
   1295c:	b	12890 <usage@@Base+0xf74>
   12960:	mov	r0, fp
   12964:	bl	11c0c <usage@@Base+0x2f0>
   12968:	cmp	r0, #0
   1296c:	bne	12940 <usage@@Base+0x1024>
   12970:	ldr	r0, [sp]
   12974:	bl	11c0c <usage@@Base+0x2f0>
   12978:	cmp	r0, #0
   1297c:	movne	r7, #3
   12980:	bne	127ec <usage@@Base+0xed0>
   12984:	ldr	r0, [sp, #4]
   12988:	bl	11c0c <usage@@Base+0x2f0>
   1298c:	cmp	r0, #0
   12990:	movne	r7, #4
   12994:	bne	127ec <usage@@Base+0xed0>
   12998:	ldr	r0, [pc, #52]	; 129d4 <usage@@Base+0x10b8>
   1299c:	add	r0, pc, r0
   129a0:	bl	11c0c <usage@@Base+0x2f0>
   129a4:	cmp	r0, #0
   129a8:	movne	r7, #5
   129ac:	bne	127ec <usage@@Base+0xed0>
   129b0:	mov	r0, r4
   129b4:	add	sp, sp, #12
   129b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129bc:	andeq	r3, r0, r4, lsr ip
   129c0:	andeq	r3, r0, ip, lsr ip
   129c4:	andeq	r3, r0, r4, lsr #24
   129c8:	andeq	r3, r0, ip, lsr #24
   129cc:	andeq	r3, r0, r4, lsl ip
   129d0:	andeq	r3, r0, r4, lsl ip
   129d4:	andeq	r3, r0, r4, asr #20
   129d8:	push	{r3, r4, r5, r6, r7, lr}
   129dc:	mov	r6, r0
   129e0:	bl	1277c <usage@@Base+0xe60>
   129e4:	ldr	r7, [pc, #144]	; 12a7c <usage@@Base+0x1160>
   129e8:	add	r7, pc, r7
   129ec:	mov	r4, r0
   129f0:	mov	r0, r7
   129f4:	bl	11c0c <usage@@Base+0x2f0>
   129f8:	mov	r3, r6
   129fc:	cmp	r0, #0
   12a00:	mov	r0, r4
   12a04:	beq	12a74 <usage@@Base+0x1158>
   12a08:	cmp	r6, #0
   12a0c:	beq	12a1c <usage@@Base+0x1100>
   12a10:	bl	11d10 <usage@@Base+0x3f4>
   12a14:	eor	r0, r0, #1
   12a18:	uxtb	r3, r0
   12a1c:	mov	r0, r3
   12a20:	bl	1277c <usage@@Base+0xe60>
   12a24:	mov	r5, r0
   12a28:	mov	r0, r4
   12a2c:	bl	11d10 <usage@@Base+0x3f4>
   12a30:	cmp	r0, #0
   12a34:	mov	r0, r5
   12a38:	bne	12a48 <usage@@Base+0x112c>
   12a3c:	bl	11d10 <usage@@Base+0x3f4>
   12a40:	cmp	r0, #0
   12a44:	beq	12a68 <usage@@Base+0x114c>
   12a48:	mov	r0, r4
   12a4c:	bl	11ca8 <usage@@Base+0x38c>
   12a50:	mov	r0, r5
   12a54:	bl	11ca8 <usage@@Base+0x38c>
   12a58:	mov	r0, #0
   12a5c:	bl	11ce4 <usage@@Base+0x3c8>
   12a60:	mov	r4, r0
   12a64:	b	129f0 <usage@@Base+0x10d4>
   12a68:	mov	r0, r5
   12a6c:	bl	11ca8 <usage@@Base+0x38c>
   12a70:	b	129f0 <usage@@Base+0x10d4>
   12a74:	mov	r0, r4
   12a78:	pop	{r3, r4, r5, r6, r7, pc}
   12a7c:	strdeq	r3, [r0], -ip
   12a80:	push	{r3, r4, r5, r6, r7, lr}
   12a84:	mov	r6, r0
   12a88:	bl	129d8 <usage@@Base+0x10bc>
   12a8c:	ldr	r7, [pc, #144]	; 12b24 <usage@@Base+0x1208>
   12a90:	add	r7, pc, r7
   12a94:	mov	r4, r0
   12a98:	mov	r0, r7
   12a9c:	bl	11c0c <usage@@Base+0x2f0>
   12aa0:	mov	r3, r6
   12aa4:	cmp	r0, #0
   12aa8:	mov	r0, r4
   12aac:	beq	12b1c <usage@@Base+0x1200>
   12ab0:	cmp	r6, #0
   12ab4:	beq	12ac0 <usage@@Base+0x11a4>
   12ab8:	bl	11d10 <usage@@Base+0x3f4>
   12abc:	mov	r3, r0
   12ac0:	mov	r0, r3
   12ac4:	bl	129d8 <usage@@Base+0x10bc>
   12ac8:	mov	r5, r0
   12acc:	mov	r0, r4
   12ad0:	bl	11d10 <usage@@Base+0x3f4>
   12ad4:	cmp	r0, #0
   12ad8:	mov	r0, r4
   12adc:	beq	12b10 <usage@@Base+0x11f4>
   12ae0:	bl	11ca8 <usage@@Base+0x38c>
   12ae4:	mov	r0, r5
   12ae8:	bl	11d10 <usage@@Base+0x3f4>
   12aec:	mov	r4, r5
   12af0:	cmp	r0, #0
   12af4:	beq	12a98 <usage@@Base+0x117c>
   12af8:	mov	r0, r5
   12afc:	bl	11ca8 <usage@@Base+0x38c>
   12b00:	mov	r0, #0
   12b04:	bl	11ce4 <usage@@Base+0x3c8>
   12b08:	mov	r4, r0
   12b0c:	b	12a98 <usage@@Base+0x117c>
   12b10:	mov	r0, r5
   12b14:	bl	11ca8 <usage@@Base+0x38c>
   12b18:	b	12a98 <usage@@Base+0x117c>
   12b1c:	mov	r0, r4
   12b20:	pop	{r3, r4, r5, r6, r7, pc}
   12b24:	andeq	r3, r0, r8, asr r9
   12b28:	ldr	r3, [pc, #8]	; 12b38 <usage@@Base+0x121c>
   12b2c:	add	r3, pc, r3
   12b30:	str	r0, [r3]
   12b34:	bx	lr
   12b38:	andeq	r4, r1, ip, ror r6
   12b3c:	ldr	r3, [pc, #8]	; 12b4c <usage@@Base+0x1230>
   12b40:	add	r3, pc, r3
   12b44:	strb	r0, [r3, #4]
   12b48:	bx	lr
   12b4c:	andeq	r4, r1, r8, ror #12

00012b50 <close_stdout@@Base>:
   12b50:	push	{r4, r5, r6, r7, lr}
   12b54:	sub	sp, sp, #12
   12b58:	ldr	r4, [pc, #228]	; 12c44 <close_stdout@@Base+0xf4>
   12b5c:	ldr	r3, [pc, #228]	; 12c48 <close_stdout@@Base+0xf8>
   12b60:	add	r4, pc, r4
   12b64:	ldr	r3, [r4, r3]
   12b68:	ldr	r0, [r3]
   12b6c:	bl	15164 <close_stdout@@Base+0x2614>
   12b70:	cmp	r0, #0
   12b74:	beq	12b9c <close_stdout@@Base+0x4c>
   12b78:	ldr	r3, [pc, #204]	; 12c4c <close_stdout@@Base+0xfc>
   12b7c:	add	r3, pc, r3
   12b80:	ldrb	r3, [r3, #4]
   12b84:	cmp	r3, #0
   12b88:	beq	12bbc <close_stdout@@Base+0x6c>
   12b8c:	bl	114d8 <__errno_location@plt>
   12b90:	ldr	r3, [r0]
   12b94:	cmp	r3, #32
   12b98:	bne	12bbc <close_stdout@@Base+0x6c>
   12b9c:	ldr	r3, [pc, #172]	; 12c50 <close_stdout@@Base+0x100>
   12ba0:	ldr	r3, [r4, r3]
   12ba4:	ldr	r0, [r3]
   12ba8:	bl	15164 <close_stdout@@Base+0x2614>
   12bac:	cmp	r0, #0
   12bb0:	bne	12c10 <close_stdout@@Base+0xc0>
   12bb4:	add	sp, sp, #12
   12bb8:	pop	{r4, r5, r6, r7, pc}
   12bbc:	ldr	r1, [pc, #144]	; 12c54 <close_stdout@@Base+0x104>
   12bc0:	mov	r0, #0
   12bc4:	mov	r2, #5
   12bc8:	add	r1, pc, r1
   12bcc:	bl	11364 <dcgettext@plt>
   12bd0:	ldr	r3, [pc, #128]	; 12c58 <close_stdout@@Base+0x108>
   12bd4:	ldr	r5, [pc, r3]
   12bd8:	cmp	r5, #0
   12bdc:	mov	r6, r0
   12be0:	beq	12c20 <close_stdout@@Base+0xd0>
   12be4:	bl	114d8 <__errno_location@plt>
   12be8:	ldr	r7, [r0]
   12bec:	mov	r0, r5
   12bf0:	bl	14514 <close_stdout@@Base+0x19c4>
   12bf4:	ldr	r2, [pc, #96]	; 12c5c <close_stdout@@Base+0x10c>
   12bf8:	str	r6, [sp]
   12bfc:	mov	r1, r7
   12c00:	add	r2, pc, r2
   12c04:	mov	r3, r0
   12c08:	mov	r0, #0
   12c0c:	bl	1140c <error@plt>
   12c10:	ldr	r3, [pc, #72]	; 12c60 <close_stdout@@Base+0x110>
   12c14:	ldr	r3, [r4, r3]
   12c18:	ldr	r0, [r3]
   12c1c:	bl	11334 <_exit@plt>
   12c20:	bl	114d8 <__errno_location@plt>
   12c24:	ldr	r2, [pc, #56]	; 12c64 <close_stdout@@Base+0x114>
   12c28:	add	r2, pc, r2
   12c2c:	mov	r3, r0
   12c30:	mov	r0, r5
   12c34:	ldr	r1, [r3]
   12c38:	mov	r3, r6
   12c3c:	bl	1140c <error@plt>
   12c40:	b	12c10 <close_stdout@@Base+0xc0>
   12c44:	muleq	r1, r8, r4
   12c48:	andeq	r0, r0, ip, lsr r1
   12c4c:	andeq	r4, r1, ip, lsr #12
   12c50:	andeq	r0, r0, r4, lsr #2
   12c54:	andeq	r3, r0, r0, lsl #17
   12c58:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12c5c:	andeq	r3, r0, r4, asr r8
   12c60:	andeq	r0, r0, r4, asr #2
   12c64:	andeq	r3, r0, r0, lsr r8
   12c68:	ldrb	r3, [r0]
   12c6c:	cmp	r3, #47	; 0x2f
   12c70:	bne	12c8c <close_stdout@@Base+0x13c>
   12c74:	add	r2, r0, #1
   12c78:	mov	r0, r2
   12c7c:	add	r2, r2, #1
   12c80:	ldrb	r3, [r0]
   12c84:	cmp	r3, #47	; 0x2f
   12c88:	beq	12c78 <close_stdout@@Base+0x128>
   12c8c:	cmp	r3, #0
   12c90:	bxeq	lr
   12c94:	mov	r2, r0
   12c98:	mov	r1, #0
   12c9c:	cmp	r3, #47	; 0x2f
   12ca0:	moveq	r1, #1
   12ca4:	beq	12cb4 <close_stdout@@Base+0x164>
   12ca8:	cmp	r1, #0
   12cac:	movne	r0, r2
   12cb0:	movne	r1, #0
   12cb4:	ldrb	r3, [r2, #1]!
   12cb8:	cmp	r3, #0
   12cbc:	bne	12c9c <close_stdout@@Base+0x14c>
   12cc0:	bx	lr
   12cc4:	push	{r4, lr}
   12cc8:	mov	r4, r0
   12ccc:	bl	114a8 <strlen@plt>
   12cd0:	cmp	r0, #1
   12cd4:	popls	{r4, pc}
   12cd8:	sub	r3, r0, #1
   12cdc:	ldrb	r2, [r4, r3]
   12ce0:	cmp	r2, #47	; 0x2f
   12ce4:	popne	{r4, pc}
   12ce8:	mov	r0, r3
   12cec:	cmp	r0, #1
   12cf0:	sub	r3, r3, #1
   12cf4:	beq	12d08 <close_stdout@@Base+0x1b8>
   12cf8:	ldrb	r2, [r4, r3]
   12cfc:	cmp	r2, #47	; 0x2f
   12d00:	popne	{r4, pc}
   12d04:	b	12ce8 <close_stdout@@Base+0x198>
   12d08:	pop	{r4, pc}
   12d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d10:	mov	r9, r3
   12d14:	ldr	r4, [pc, #224]	; 12dfc <close_stdout@@Base+0x2ac>
   12d18:	sub	sp, sp, #28
   12d1c:	ldr	ip, [pc, #220]	; 12e00 <close_stdout@@Base+0x2b0>
   12d20:	cmp	r0, #2
   12d24:	add	r4, pc, r4
   12d28:	ldr	r5, [pc, #212]	; 12e04 <close_stdout@@Base+0x2b4>
   12d2c:	mov	r7, #0
   12d30:	mov	sl, r2
   12d34:	ldr	r6, [r4, ip]
   12d38:	ldr	r8, [sp, #64]	; 0x40
   12d3c:	ldr	fp, [sp, #68]	; 0x44
   12d40:	ldr	r3, [r6]
   12d44:	str	r3, [sp, #20]
   12d48:	ldr	r5, [r4, r5]
   12d4c:	ldr	ip, [r5]
   12d50:	str	r7, [r5]
   12d54:	beq	12d84 <close_stdout@@Base+0x234>
   12d58:	ldr	r3, [pc, #168]	; 12e08 <close_stdout@@Base+0x2b8>
   12d5c:	mov	r2, #0
   12d60:	ldr	r0, [sp, #20]
   12d64:	ldr	r1, [r6]
   12d68:	str	ip, [r5]
   12d6c:	ldr	r3, [r4, r3]
   12d70:	cmp	r0, r1
   12d74:	str	r2, [r3]
   12d78:	bne	12df8 <close_stdout@@Base+0x2a8>
   12d7c:	add	sp, sp, #28
   12d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d84:	ldr	r2, [pc, #128]	; 12e0c <close_stdout@@Base+0x2bc>
   12d88:	ldr	r3, [pc, #128]	; 12e10 <close_stdout@@Base+0x2c0>
   12d8c:	str	r7, [sp]
   12d90:	add	r2, pc, r2
   12d94:	add	r3, pc, r3
   12d98:	str	ip, [sp, #12]
   12d9c:	bl	11484 <getopt_long@plt>
   12da0:	ldr	ip, [sp, #12]
   12da4:	cmn	r0, #1
   12da8:	beq	12d58 <close_stdout@@Base+0x208>
   12dac:	cmp	r0, #104	; 0x68
   12db0:	beq	12dec <close_stdout@@Base+0x29c>
   12db4:	cmp	r0, #118	; 0x76
   12db8:	bne	12d58 <close_stdout@@Base+0x208>
   12dbc:	ldr	ip, [pc, #80]	; 12e14 <close_stdout@@Base+0x2c4>
   12dc0:	add	r0, sp, #72	; 0x48
   12dc4:	str	r0, [sp, #16]
   12dc8:	mov	r1, sl
   12dcc:	mov	r2, r9
   12dd0:	mov	r3, r8
   12dd4:	ldr	ip, [r4, ip]
   12dd8:	str	r0, [sp]
   12ddc:	ldr	r0, [ip]
   12de0:	bl	14d6c <close_stdout@@Base+0x221c>
   12de4:	mov	r0, #0
   12de8:	bl	1149c <exit@plt>
   12dec:	mov	r0, r7
   12df0:	blx	fp
   12df4:	b	12dbc <close_stdout@@Base+0x26c>
   12df8:	bl	1137c <__stack_chk_fail@plt>
   12dfc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12e00:	andeq	r0, r0, r4, lsl r1
   12e04:	andeq	r0, r0, r8, asr r1
   12e08:	andeq	r0, r0, ip, lsl r1
   12e0c:	andeq	r3, r0, ip, asr #11
   12e10:	andeq	r4, r1, r0, lsl r1
   12e14:	andeq	r0, r0, ip, lsr r1
   12e18:	push	{r3, r4, r5, r6, r7, lr}
   12e1c:	subs	r4, r0, #0
   12e20:	ldr	r5, [pc, #172]	; 12ed4 <close_stdout@@Base+0x384>
   12e24:	add	r5, pc, r5
   12e28:	beq	12eb0 <close_stdout@@Base+0x360>
   12e2c:	mov	r1, #47	; 0x2f
   12e30:	bl	11574 <strrchr@plt>
   12e34:	subs	r6, r0, #0
   12e38:	beq	12e94 <close_stdout@@Base+0x344>
   12e3c:	add	r7, r6, #1
   12e40:	rsb	r3, r4, r7
   12e44:	cmp	r3, #6
   12e48:	ble	12e94 <close_stdout@@Base+0x344>
   12e4c:	ldr	r1, [pc, #132]	; 12ed8 <close_stdout@@Base+0x388>
   12e50:	sub	r0, r6, #6
   12e54:	mov	r2, #7
   12e58:	add	r1, pc, r1
   12e5c:	bl	115b0 <strncmp@plt>
   12e60:	cmp	r0, #0
   12e64:	bne	12e94 <close_stdout@@Base+0x344>
   12e68:	ldr	r1, [pc, #108]	; 12edc <close_stdout@@Base+0x38c>
   12e6c:	mov	r0, r7
   12e70:	mov	r2, #3
   12e74:	add	r1, pc, r1
   12e78:	bl	115b0 <strncmp@plt>
   12e7c:	cmp	r0, #0
   12e80:	movne	r4, r7
   12e84:	ldreq	r3, [pc, #84]	; 12ee0 <close_stdout@@Base+0x390>
   12e88:	addeq	r4, r6, #4
   12e8c:	ldreq	r3, [r5, r3]
   12e90:	streq	r4, [r3]
   12e94:	ldr	r2, [pc, #72]	; 12ee4 <close_stdout@@Base+0x394>
   12e98:	ldr	r3, [pc, #72]	; 12ee8 <close_stdout@@Base+0x398>
   12e9c:	ldr	r2, [r5, r2]
   12ea0:	str	r4, [r2]
   12ea4:	ldr	r3, [r5, r3]
   12ea8:	str	r4, [r3]
   12eac:	pop	{r3, r4, r5, r6, r7, pc}
   12eb0:	ldr	r3, [pc, #52]	; 12eec <close_stdout@@Base+0x39c>
   12eb4:	mov	r1, #1
   12eb8:	ldr	r0, [pc, #48]	; 12ef0 <close_stdout@@Base+0x3a0>
   12ebc:	mov	r2, #55	; 0x37
   12ec0:	ldr	r3, [r5, r3]
   12ec4:	add	r0, pc, r0
   12ec8:	ldr	r3, [r3]
   12ecc:	bl	113b8 <fwrite@plt>
   12ed0:	bl	115bc <abort@plt>
   12ed4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12ed8:	andeq	r3, r0, ip, asr #12
   12edc:	andeq	r3, r0, r8, lsr r6
   12ee0:	andeq	r0, r0, ip, asr r1
   12ee4:	andeq	r0, r0, ip, asr #2
   12ee8:	andeq	r0, r0, r8, asr #2
   12eec:	andeq	r0, r0, r4, lsr #2
   12ef0:	andeq	r3, r0, r8, lsr #11
   12ef4:	push	{r3, lr}
   12ef8:	mov	r3, r0
   12efc:	mov	r2, #0
   12f00:	cmp	r1, #8
   12f04:	str	r2, [r3], #4
   12f08:	add	r3, r3, #4
   12f0c:	str	r2, [r0, #4]
   12f10:	str	r2, [r3], #4
   12f14:	str	r2, [r3], #4
   12f18:	str	r2, [r3], #4
   12f1c:	str	r2, [r3], #4
   12f20:	str	r2, [r3], #4
   12f24:	str	r2, [r3], #4
   12f28:	str	r2, [r3], #4
   12f2c:	str	r2, [r3], #4
   12f30:	str	r2, [r3], #4
   12f34:	str	r2, [r3]
   12f38:	beq	12f44 <close_stdout@@Base+0x3f4>
   12f3c:	str	r1, [r0]
   12f40:	pop	{r3, pc}
   12f44:	bl	115bc <abort@plt>
   12f48:	push	{r4, r5, r6, lr}
   12f4c:	mov	r4, r0
   12f50:	mov	r6, r1
   12f54:	mov	r0, #0
   12f58:	mov	r1, r4
   12f5c:	mov	r2, #5
   12f60:	bl	11364 <dcgettext@plt>
   12f64:	cmp	r0, r4
   12f68:	mov	r5, r0
   12f6c:	beq	12f74 <close_stdout@@Base+0x424>
   12f70:	pop	{r4, r5, r6, pc}
   12f74:	bl	151e4 <close_stdout@@Base+0x2694>
   12f78:	ldrb	r3, [r0]
   12f7c:	bic	r3, r3, #32
   12f80:	cmp	r3, #85	; 0x55
   12f84:	bne	12ff8 <close_stdout@@Base+0x4a8>
   12f88:	ldrb	r3, [r0, #1]
   12f8c:	bic	r3, r3, #32
   12f90:	cmp	r3, #84	; 0x54
   12f94:	bne	12fe4 <close_stdout@@Base+0x494>
   12f98:	ldrb	r3, [r0, #2]
   12f9c:	bic	r3, r3, #32
   12fa0:	cmp	r3, #70	; 0x46
   12fa4:	bne	12fe4 <close_stdout@@Base+0x494>
   12fa8:	ldrb	r3, [r0, #3]
   12fac:	cmp	r3, #45	; 0x2d
   12fb0:	bne	12fe4 <close_stdout@@Base+0x494>
   12fb4:	ldrb	r3, [r0, #4]
   12fb8:	cmp	r3, #56	; 0x38
   12fbc:	bne	12fe4 <close_stdout@@Base+0x494>
   12fc0:	ldrb	r3, [r0, #5]
   12fc4:	cmp	r3, #0
   12fc8:	bne	12fe4 <close_stdout@@Base+0x494>
   12fcc:	ldrb	r3, [r5]
   12fd0:	cmp	r3, #96	; 0x60
   12fd4:	beq	13070 <close_stdout@@Base+0x520>
   12fd8:	ldr	r0, [pc, #180]	; 13094 <close_stdout@@Base+0x544>
   12fdc:	add	r0, pc, r0
   12fe0:	pop	{r4, r5, r6, pc}
   12fe4:	cmp	r6, #7
   12fe8:	beq	1307c <close_stdout@@Base+0x52c>
   12fec:	ldr	r0, [pc, #164]	; 13098 <close_stdout@@Base+0x548>
   12ff0:	add	r0, pc, r0
   12ff4:	pop	{r4, r5, r6, pc}
   12ff8:	cmp	r3, #71	; 0x47
   12ffc:	bne	12fe4 <close_stdout@@Base+0x494>
   13000:	ldrb	r3, [r0, #1]
   13004:	bic	r3, r3, #32
   13008:	cmp	r3, #66	; 0x42
   1300c:	bne	12fe4 <close_stdout@@Base+0x494>
   13010:	ldrb	r3, [r0, #2]
   13014:	cmp	r3, #49	; 0x31
   13018:	bne	12fe4 <close_stdout@@Base+0x494>
   1301c:	ldrb	r3, [r0, #3]
   13020:	cmp	r3, #56	; 0x38
   13024:	bne	12fe4 <close_stdout@@Base+0x494>
   13028:	ldrb	r3, [r0, #4]
   1302c:	cmp	r3, #48	; 0x30
   13030:	bne	12fe4 <close_stdout@@Base+0x494>
   13034:	ldrb	r3, [r0, #5]
   13038:	cmp	r3, #51	; 0x33
   1303c:	bne	12fe4 <close_stdout@@Base+0x494>
   13040:	ldrb	r3, [r0, #6]
   13044:	cmp	r3, #48	; 0x30
   13048:	bne	12fe4 <close_stdout@@Base+0x494>
   1304c:	ldrb	r3, [r0, #7]
   13050:	cmp	r3, #0
   13054:	bne	12fe4 <close_stdout@@Base+0x494>
   13058:	ldrb	r3, [r5]
   1305c:	cmp	r3, #96	; 0x60
   13060:	beq	13088 <close_stdout@@Base+0x538>
   13064:	ldr	r0, [pc, #48]	; 1309c <close_stdout@@Base+0x54c>
   13068:	add	r0, pc, r0
   1306c:	pop	{r4, r5, r6, pc}
   13070:	ldr	r0, [pc, #40]	; 130a0 <close_stdout@@Base+0x550>
   13074:	add	r0, pc, r0
   13078:	pop	{r4, r5, r6, pc}
   1307c:	ldr	r0, [pc, #32]	; 130a4 <close_stdout@@Base+0x554>
   13080:	add	r0, pc, r0
   13084:	pop	{r4, r5, r6, pc}
   13088:	ldr	r0, [pc, #24]	; 130a8 <close_stdout@@Base+0x558>
   1308c:	add	r0, pc, r0
   13090:	pop	{r4, r5, r6, pc}
   13094:	strdeq	r3, [r0], -r4
   13098:	andeq	r3, r0, r8, ror #9
   1309c:	andeq	r3, r0, ip, ror #8
   130a0:	andeq	r3, r0, r0, ror r4
   130a4:	andeq	r3, r0, ip, asr r4
   130a8:	andeq	r3, r0, r4, asr r4
   130ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130b0:	sub	sp, sp, #124	; 0x7c
   130b4:	ldr	ip, [pc, #3304]	; 13da4 <close_stdout@@Base+0x1254>
   130b8:	mov	sl, r1
   130bc:	str	r0, [sp, #40]	; 0x28
   130c0:	mov	r8, r3
   130c4:	ldr	r0, [pc, #3292]	; 13da8 <close_stdout@@Base+0x1258>
   130c8:	add	ip, pc, ip
   130cc:	str	r2, [sp, #32]
   130d0:	ldr	r1, [sp, #164]	; 0xa4
   130d4:	mov	r3, ip
   130d8:	ldr	r0, [ip, r0]
   130dc:	ldr	r2, [sp, #172]	; 0xac
   130e0:	ubfx	r1, r1, #1, #1
   130e4:	str	r1, [sp, #36]	; 0x24
   130e8:	str	r0, [sp, #56]	; 0x38
   130ec:	ldr	r0, [sp, #168]	; 0xa8
   130f0:	ldr	r1, [sp, #176]	; 0xb0
   130f4:	str	r2, [sp, #72]	; 0x48
   130f8:	str	r0, [sp, #48]	; 0x30
   130fc:	ldr	r0, [sp, #56]	; 0x38
   13100:	str	r1, [sp, #68]	; 0x44
   13104:	ldr	r3, [r0]
   13108:	str	r3, [sp, #116]	; 0x74
   1310c:	bl	113dc <__ctype_get_mb_cur_max@plt>
   13110:	ldr	r2, [sp, #160]	; 0xa0
   13114:	str	r0, [sp, #64]	; 0x40
   13118:	cmp	r2, #8
   1311c:	addls	pc, pc, r2, lsl #2
   13120:	b	13c80 <close_stdout@@Base+0x1130>
   13124:	b	13148 <close_stdout@@Base+0x5f8>
   13128:	b	13998 <close_stdout@@Base+0xe48>
   1312c:	b	139c8 <close_stdout@@Base+0xe78>
   13130:	b	13878 <close_stdout@@Base+0xd28>
   13134:	b	138b8 <close_stdout@@Base+0xd68>
   13138:	b	138e4 <close_stdout@@Base+0xd94>
   1313c:	b	13904 <close_stdout@@Base+0xdb4>
   13140:	b	13904 <close_stdout@@Base+0xdb4>
   13144:	b	13904 <close_stdout@@Base+0xdb4>
   13148:	mov	r2, #0
   1314c:	str	r2, [sp, #36]	; 0x24
   13150:	mov	r9, r2
   13154:	str	r2, [sp, #24]
   13158:	str	r2, [sp, #28]
   1315c:	str	r2, [sp, #52]	; 0x34
   13160:	ldr	r0, [sp, #36]	; 0x24
   13164:	mov	fp, #0
   13168:	ldr	r1, [sp, #24]
   1316c:	eor	r2, r0, #1
   13170:	eor	r3, r1, #1
   13174:	and	r3, r2, r3
   13178:	and	r2, r1, r0
   1317c:	str	r3, [sp, #44]	; 0x2c
   13180:	str	r2, [sp, #76]	; 0x4c
   13184:	cmn	r8, #1
   13188:	beq	13508 <close_stdout@@Base+0x9b8>
   1318c:	subs	r3, fp, r8
   13190:	movne	r3, #1
   13194:	cmp	r3, #0
   13198:	beq	13520 <close_stdout@@Base+0x9d0>
   1319c:	ldr	r3, [sp, #28]
   131a0:	ldr	r0, [sp, #24]
   131a4:	adds	r7, r3, #0
   131a8:	movne	r7, #1
   131ac:	ands	r6, r7, r0
   131b0:	bne	13a0c <close_stdout@@Base+0xebc>
   131b4:	ldr	r1, [sp, #32]
   131b8:	add	r5, r1, fp
   131bc:	ldrb	r4, [r5]
   131c0:	cmp	r4, #126	; 0x7e
   131c4:	addls	pc, pc, r4, lsl #2
   131c8:	b	1378c <close_stdout@@Base+0xc3c>
   131cc:	b	13698 <close_stdout@@Base+0xb48>
   131d0:	b	1378c <close_stdout@@Base+0xc3c>
   131d4:	b	1378c <close_stdout@@Base+0xc3c>
   131d8:	b	1378c <close_stdout@@Base+0xc3c>
   131dc:	b	1378c <close_stdout@@Base+0xc3c>
   131e0:	b	1378c <close_stdout@@Base+0xc3c>
   131e4:	b	1378c <close_stdout@@Base+0xc3c>
   131e8:	b	13680 <close_stdout@@Base+0xb30>
   131ec:	b	13668 <close_stdout@@Base+0xb18>
   131f0:	b	13690 <close_stdout@@Base+0xb40>
   131f4:	b	13688 <close_stdout@@Base+0xb38>
   131f8:	b	13678 <close_stdout@@Base+0xb28>
   131fc:	b	13670 <close_stdout@@Base+0xb20>
   13200:	b	13634 <close_stdout@@Base+0xae4>
   13204:	b	1378c <close_stdout@@Base+0xc3c>
   13208:	b	1378c <close_stdout@@Base+0xc3c>
   1320c:	b	1378c <close_stdout@@Base+0xc3c>
   13210:	b	1378c <close_stdout@@Base+0xc3c>
   13214:	b	1378c <close_stdout@@Base+0xc3c>
   13218:	b	1378c <close_stdout@@Base+0xc3c>
   1321c:	b	1378c <close_stdout@@Base+0xc3c>
   13220:	b	1378c <close_stdout@@Base+0xc3c>
   13224:	b	1378c <close_stdout@@Base+0xc3c>
   13228:	b	1378c <close_stdout@@Base+0xc3c>
   1322c:	b	1378c <close_stdout@@Base+0xc3c>
   13230:	b	1378c <close_stdout@@Base+0xc3c>
   13234:	b	1378c <close_stdout@@Base+0xc3c>
   13238:	b	1378c <close_stdout@@Base+0xc3c>
   1323c:	b	1378c <close_stdout@@Base+0xc3c>
   13240:	b	1378c <close_stdout@@Base+0xc3c>
   13244:	b	1378c <close_stdout@@Base+0xc3c>
   13248:	b	1378c <close_stdout@@Base+0xc3c>
   1324c:	b	135c0 <close_stdout@@Base+0xa70>
   13250:	b	135c0 <close_stdout@@Base+0xa70>
   13254:	b	135c0 <close_stdout@@Base+0xa70>
   13258:	b	135b8 <close_stdout@@Base+0xa68>
   1325c:	b	135c0 <close_stdout@@Base+0xa70>
   13260:	b	13494 <close_stdout@@Base+0x944>
   13264:	b	135c0 <close_stdout@@Base+0xa70>
   13268:	b	13734 <close_stdout@@Base+0xbe4>
   1326c:	b	135c0 <close_stdout@@Base+0xa70>
   13270:	b	135c0 <close_stdout@@Base+0xa70>
   13274:	b	135c0 <close_stdout@@Base+0xa70>
   13278:	b	13494 <close_stdout@@Base+0x944>
   1327c:	b	13494 <close_stdout@@Base+0x944>
   13280:	b	13494 <close_stdout@@Base+0x944>
   13284:	b	13494 <close_stdout@@Base+0x944>
   13288:	b	13494 <close_stdout@@Base+0x944>
   1328c:	b	13494 <close_stdout@@Base+0x944>
   13290:	b	13494 <close_stdout@@Base+0x944>
   13294:	b	13494 <close_stdout@@Base+0x944>
   13298:	b	13494 <close_stdout@@Base+0x944>
   1329c:	b	13494 <close_stdout@@Base+0x944>
   132a0:	b	13494 <close_stdout@@Base+0x944>
   132a4:	b	13494 <close_stdout@@Base+0x944>
   132a8:	b	13494 <close_stdout@@Base+0x944>
   132ac:	b	13494 <close_stdout@@Base+0x944>
   132b0:	b	13494 <close_stdout@@Base+0x944>
   132b4:	b	13494 <close_stdout@@Base+0x944>
   132b8:	b	135c0 <close_stdout@@Base+0xa70>
   132bc:	b	135c0 <close_stdout@@Base+0xa70>
   132c0:	b	135c0 <close_stdout@@Base+0xa70>
   132c4:	b	135c0 <close_stdout@@Base+0xa70>
   132c8:	b	133c8 <close_stdout@@Base+0x878>
   132cc:	b	1378c <close_stdout@@Base+0xc3c>
   132d0:	b	13494 <close_stdout@@Base+0x944>
   132d4:	b	13494 <close_stdout@@Base+0x944>
   132d8:	b	13494 <close_stdout@@Base+0x944>
   132dc:	b	13494 <close_stdout@@Base+0x944>
   132e0:	b	13494 <close_stdout@@Base+0x944>
   132e4:	b	13494 <close_stdout@@Base+0x944>
   132e8:	b	13494 <close_stdout@@Base+0x944>
   132ec:	b	13494 <close_stdout@@Base+0x944>
   132f0:	b	13494 <close_stdout@@Base+0x944>
   132f4:	b	13494 <close_stdout@@Base+0x944>
   132f8:	b	13494 <close_stdout@@Base+0x944>
   132fc:	b	13494 <close_stdout@@Base+0x944>
   13300:	b	13494 <close_stdout@@Base+0x944>
   13304:	b	13494 <close_stdout@@Base+0x944>
   13308:	b	13494 <close_stdout@@Base+0x944>
   1330c:	b	13494 <close_stdout@@Base+0x944>
   13310:	b	13494 <close_stdout@@Base+0x944>
   13314:	b	13494 <close_stdout@@Base+0x944>
   13318:	b	13494 <close_stdout@@Base+0x944>
   1331c:	b	13494 <close_stdout@@Base+0x944>
   13320:	b	13494 <close_stdout@@Base+0x944>
   13324:	b	13494 <close_stdout@@Base+0x944>
   13328:	b	13494 <close_stdout@@Base+0x944>
   1332c:	b	13494 <close_stdout@@Base+0x944>
   13330:	b	13494 <close_stdout@@Base+0x944>
   13334:	b	13494 <close_stdout@@Base+0x944>
   13338:	b	135c0 <close_stdout@@Base+0xa70>
   1333c:	b	13718 <close_stdout@@Base+0xbc8>
   13340:	b	13494 <close_stdout@@Base+0x944>
   13344:	b	135c0 <close_stdout@@Base+0xa70>
   13348:	b	13494 <close_stdout@@Base+0x944>
   1334c:	b	135c0 <close_stdout@@Base+0xa70>
   13350:	b	13494 <close_stdout@@Base+0x944>
   13354:	b	13494 <close_stdout@@Base+0x944>
   13358:	b	13494 <close_stdout@@Base+0x944>
   1335c:	b	13494 <close_stdout@@Base+0x944>
   13360:	b	13494 <close_stdout@@Base+0x944>
   13364:	b	13494 <close_stdout@@Base+0x944>
   13368:	b	13494 <close_stdout@@Base+0x944>
   1336c:	b	13494 <close_stdout@@Base+0x944>
   13370:	b	13494 <close_stdout@@Base+0x944>
   13374:	b	13494 <close_stdout@@Base+0x944>
   13378:	b	13494 <close_stdout@@Base+0x944>
   1337c:	b	13494 <close_stdout@@Base+0x944>
   13380:	b	13494 <close_stdout@@Base+0x944>
   13384:	b	13494 <close_stdout@@Base+0x944>
   13388:	b	13494 <close_stdout@@Base+0x944>
   1338c:	b	13494 <close_stdout@@Base+0x944>
   13390:	b	13494 <close_stdout@@Base+0x944>
   13394:	b	13494 <close_stdout@@Base+0x944>
   13398:	b	13494 <close_stdout@@Base+0x944>
   1339c:	b	13494 <close_stdout@@Base+0x944>
   133a0:	b	13494 <close_stdout@@Base+0x944>
   133a4:	b	13494 <close_stdout@@Base+0x944>
   133a8:	b	13494 <close_stdout@@Base+0x944>
   133ac:	b	13494 <close_stdout@@Base+0x944>
   133b0:	b	13494 <close_stdout@@Base+0x944>
   133b4:	b	13494 <close_stdout@@Base+0x944>
   133b8:	b	135a0 <close_stdout@@Base+0xa50>
   133bc:	b	135c0 <close_stdout@@Base+0xa70>
   133c0:	b	135a0 <close_stdout@@Base+0xa50>
   133c4:	b	135b8 <close_stdout@@Base+0xa68>
   133c8:	ldr	r3, [sp, #160]	; 0xa0
   133cc:	cmp	r3, #2
   133d0:	beq	13c5c <close_stdout@@Base+0x110c>
   133d4:	cmp	r3, #3
   133d8:	bne	13494 <close_stdout@@Base+0x944>
   133dc:	ldr	r1, [sp, #164]	; 0xa4
   133e0:	tst	r1, #4
   133e4:	beq	13494 <close_stdout@@Base+0x944>
   133e8:	add	r3, fp, #2
   133ec:	cmp	r8, r3
   133f0:	bls	13494 <close_stdout@@Base+0x944>
   133f4:	ldrb	r2, [r5, #1]
   133f8:	mov	r1, #1
   133fc:	cmp	r2, #63	; 0x3f
   13400:	bne	13494 <close_stdout@@Base+0x944>
   13404:	ldr	r0, [sp, #32]
   13408:	ldrb	ip, [r0, r3]
   1340c:	sub	r0, ip, #33	; 0x21
   13410:	uxtb	r0, r0
   13414:	cmp	r0, #29
   13418:	bhi	13494 <close_stdout@@Base+0x944>
   1341c:	lsl	r1, r1, r0
   13420:	movw	r0, #20929	; 0x51c1
   13424:	movt	r0, #14336	; 0x3800
   13428:	and	r0, r1, r0
   1342c:	cmp	r0, #0
   13430:	beq	13494 <close_stdout@@Base+0x944>
   13434:	ldr	r1, [sp, #36]	; 0x24
   13438:	cmp	r1, #0
   1343c:	bne	135dc <close_stdout@@Base+0xa8c>
   13440:	cmp	r9, sl
   13444:	mov	r4, ip
   13448:	mov	fp, r3
   1344c:	ldrcc	r0, [sp, #40]	; 0x28
   13450:	strbcc	r2, [r0, r9]
   13454:	add	r2, r9, #1
   13458:	cmp	sl, r2
   1345c:	ldrhi	r0, [sp, #40]	; 0x28
   13460:	movhi	r1, #34	; 0x22
   13464:	strbhi	r1, [r0, r2]
   13468:	add	r2, r9, #2
   1346c:	cmp	sl, r2
   13470:	ldrhi	r0, [sp, #40]	; 0x28
   13474:	movhi	r1, #34	; 0x22
   13478:	strbhi	r1, [r0, r2]
   1347c:	add	r2, r9, #3
   13480:	cmp	sl, r2
   13484:	add	r9, r9, #4
   13488:	ldrhi	r0, [sp, #40]	; 0x28
   1348c:	movhi	r1, #63	; 0x3f
   13490:	strbhi	r1, [r0, r2]
   13494:	ldr	r0, [sp, #44]	; 0x2c
   13498:	cmp	r0, #0
   1349c:	bne	134c4 <close_stdout@@Base+0x974>
   134a0:	ldr	r1, [sp, #48]	; 0x30
   134a4:	cmp	r1, #0
   134a8:	beq	134c4 <close_stdout@@Base+0x974>
   134ac:	ubfx	r2, r4, #5, #8
   134b0:	and	r3, r4, #31
   134b4:	ldr	r2, [r1, r2, lsl #2]
   134b8:	lsr	r3, r2, r3
   134bc:	tst	r3, #1
   134c0:	bne	134cc <close_stdout@@Base+0x97c>
   134c4:	cmp	r6, #0
   134c8:	beq	134ec <close_stdout@@Base+0x99c>
   134cc:	ldr	r2, [sp, #36]	; 0x24
   134d0:	cmp	r2, #0
   134d4:	bne	135dc <close_stdout@@Base+0xa8c>
   134d8:	cmp	r9, sl
   134dc:	ldrcc	r0, [sp, #40]	; 0x28
   134e0:	movcc	r3, #92	; 0x5c
   134e4:	strbcc	r3, [r0, r9]
   134e8:	add	r9, r9, #1
   134ec:	add	fp, fp, #1
   134f0:	cmp	r9, sl
   134f4:	ldrcc	r1, [sp, #40]	; 0x28
   134f8:	strbcc	r4, [r1, r9]
   134fc:	cmn	r8, #1
   13500:	add	r9, r9, #1
   13504:	bne	1318c <close_stdout@@Base+0x63c>
   13508:	ldr	r2, [sp, #32]
   1350c:	ldrb	r3, [r2, fp]
   13510:	adds	r3, r3, #0
   13514:	movne	r3, #1
   13518:	cmp	r3, #0
   1351c:	bne	1319c <close_stdout@@Base+0x64c>
   13520:	ldr	r3, [sp, #160]	; 0xa0
   13524:	cmp	r9, #0
   13528:	cmpeq	r3, #2
   1352c:	bne	1353c <close_stdout@@Base+0x9ec>
   13530:	ldr	r0, [sp, #36]	; 0x24
   13534:	cmp	r0, #0
   13538:	bne	135dc <close_stdout@@Base+0xa8c>
   1353c:	ldr	r1, [sp, #36]	; 0x24
   13540:	ldr	r2, [sp, #52]	; 0x34
   13544:	eor	r3, r1, #1
   13548:	cmp	r2, #0
   1354c:	moveq	r3, #0
   13550:	andne	r3, r3, #1
   13554:	cmp	r3, #0
   13558:	beq	13584 <close_stdout@@Base+0xa34>
   1355c:	ldrb	r3, [r2]
   13560:	cmp	r3, #0
   13564:	beq	13584 <close_stdout@@Base+0xa34>
   13568:	ldr	r1, [sp, #40]	; 0x28
   1356c:	cmp	sl, r9
   13570:	strbhi	r3, [r1, r9]
   13574:	ldrb	r3, [r2, #1]!
   13578:	add	r9, r9, #1
   1357c:	cmp	r3, #0
   13580:	bne	1356c <close_stdout@@Base+0xa1c>
   13584:	cmp	r9, sl
   13588:	movcs	r0, r9
   1358c:	ldrcc	r1, [sp, #40]	; 0x28
   13590:	movcc	r3, #0
   13594:	movcc	r0, r9
   13598:	strbcc	r3, [r1, r9]
   1359c:	b	13618 <close_stdout@@Base+0xac8>
   135a0:	cmn	r8, #1
   135a4:	beq	13c6c <close_stdout@@Base+0x111c>
   135a8:	subs	r3, r8, #1
   135ac:	movne	r3, #1
   135b0:	cmp	r3, #0
   135b4:	bne	13494 <close_stdout@@Base+0x944>
   135b8:	cmp	fp, #0
   135bc:	bne	13494 <close_stdout@@Base+0x944>
   135c0:	ldr	r3, [sp, #36]	; 0x24
   135c4:	ldr	r0, [sp, #160]	; 0xa0
   135c8:	cmp	r0, #2
   135cc:	movne	r3, #0
   135d0:	andeq	r3, r3, #1
   135d4:	cmp	r3, #0
   135d8:	beq	13494 <close_stdout@@Base+0x944>
   135dc:	ldr	r2, [sp, #164]	; 0xa4
   135e0:	mov	ip, #0
   135e4:	ldr	r0, [sp, #160]	; 0xa0
   135e8:	bic	r3, r2, #2
   135ec:	ldr	r1, [sp, #72]	; 0x48
   135f0:	ldr	r2, [sp, #68]	; 0x44
   135f4:	stm	sp, {r0, r3}
   135f8:	mov	r3, r8
   135fc:	str	r1, [sp, #12]
   13600:	mov	r1, sl
   13604:	str	r2, [sp, #16]
   13608:	ldr	r0, [sp, #40]	; 0x28
   1360c:	ldr	r2, [sp, #32]
   13610:	str	ip, [sp, #8]
   13614:	bl	130ac <close_stdout@@Base+0x55c>
   13618:	ldr	r1, [sp, #56]	; 0x38
   1361c:	ldr	r2, [sp, #116]	; 0x74
   13620:	ldr	r3, [r1]
   13624:	cmp	r2, r3
   13628:	bne	13d5c <close_stdout@@Base+0x120c>
   1362c:	add	sp, sp, #124	; 0x7c
   13630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13634:	mov	r3, #114	; 0x72
   13638:	ldr	r2, [sp, #36]	; 0x24
   1363c:	ldr	r0, [sp, #160]	; 0xa0
   13640:	cmp	r0, #2
   13644:	movne	r2, #0
   13648:	andeq	r2, r2, #1
   1364c:	cmp	r2, #0
   13650:	bne	135dc <close_stdout@@Base+0xa8c>
   13654:	ldr	r1, [sp, #24]
   13658:	cmp	r1, #0
   1365c:	beq	13494 <close_stdout@@Base+0x944>
   13660:	mov	r4, r3
   13664:	b	134cc <close_stdout@@Base+0x97c>
   13668:	mov	r3, #98	; 0x62
   1366c:	b	13654 <close_stdout@@Base+0xb04>
   13670:	mov	r3, #102	; 0x66
   13674:	b	13654 <close_stdout@@Base+0xb04>
   13678:	mov	r3, #118	; 0x76
   1367c:	b	13654 <close_stdout@@Base+0xb04>
   13680:	mov	r3, #97	; 0x61
   13684:	b	13654 <close_stdout@@Base+0xb04>
   13688:	mov	r3, #110	; 0x6e
   1368c:	b	13638 <close_stdout@@Base+0xae8>
   13690:	mov	r3, #116	; 0x74
   13694:	b	13638 <close_stdout@@Base+0xae8>
   13698:	ldr	r2, [sp, #24]
   1369c:	cmp	r2, #0
   136a0:	beq	13c48 <close_stdout@@Base+0x10f8>
   136a4:	ldr	r3, [sp, #36]	; 0x24
   136a8:	cmp	r3, #0
   136ac:	bne	135dc <close_stdout@@Base+0xa8c>
   136b0:	cmp	r9, sl
   136b4:	add	r2, r9, #1
   136b8:	ldrcc	r0, [sp, #40]	; 0x28
   136bc:	movcc	r3, #92	; 0x5c
   136c0:	strbcc	r3, [r0, r9]
   136c4:	add	r3, fp, #1
   136c8:	cmp	r8, r3
   136cc:	bls	1370c <close_stdout@@Base+0xbbc>
   136d0:	ldr	r1, [sp, #32]
   136d4:	ldrb	r3, [r1, r3]
   136d8:	sub	r3, r3, #48	; 0x30
   136dc:	cmp	r3, #9
   136e0:	bhi	1370c <close_stdout@@Base+0xbbc>
   136e4:	cmp	sl, r2
   136e8:	ldrhi	r0, [sp, #40]	; 0x28
   136ec:	movhi	r3, #48	; 0x30
   136f0:	strbhi	r3, [r0, r2]
   136f4:	add	r3, r9, #2
   136f8:	cmp	sl, r3
   136fc:	ldrhi	r1, [sp, #40]	; 0x28
   13700:	movhi	r2, #48	; 0x30
   13704:	strbhi	r2, [r1, r3]
   13708:	add	r2, r9, #3
   1370c:	mov	r9, r2
   13710:	mov	r4, #48	; 0x30
   13714:	b	134a0 <close_stdout@@Base+0x950>
   13718:	ldr	r1, [sp, #76]	; 0x4c
   1371c:	cmp	r1, #0
   13720:	beq	1372c <close_stdout@@Base+0xbdc>
   13724:	cmp	r7, #0
   13728:	bne	134ec <close_stdout@@Base+0x99c>
   1372c:	mov	r3, r4
   13730:	b	13638 <close_stdout@@Base+0xae8>
   13734:	ldr	r1, [sp, #160]	; 0xa0
   13738:	cmp	r1, #2
   1373c:	bne	13494 <close_stdout@@Base+0x944>
   13740:	ldr	r2, [sp, #36]	; 0x24
   13744:	cmp	r2, #0
   13748:	bne	135dc <close_stdout@@Base+0xa8c>
   1374c:	cmp	r9, sl
   13750:	ldrcc	r0, [sp, #40]	; 0x28
   13754:	movcc	r3, #39	; 0x27
   13758:	strbcc	r3, [r0, r9]
   1375c:	add	r3, r9, #1
   13760:	cmp	sl, r3
   13764:	ldrhi	r1, [sp, #40]	; 0x28
   13768:	movhi	r2, #92	; 0x5c
   1376c:	strbhi	r2, [r1, r3]
   13770:	add	r3, r9, #2
   13774:	cmp	sl, r3
   13778:	add	r9, r9, #3
   1377c:	ldrhi	r0, [sp, #40]	; 0x28
   13780:	movhi	r2, #39	; 0x27
   13784:	strbhi	r2, [r0, r3]
   13788:	b	13494 <close_stdout@@Base+0x944>
   1378c:	ldr	r1, [sp, #64]	; 0x40
   13790:	cmp	r1, #1
   13794:	bne	13a8c <close_stdout@@Base+0xf3c>
   13798:	bl	11490 <__ctype_b_loc@plt>
   1379c:	ldr	r2, [sp, #64]	; 0x40
   137a0:	sxth	r3, r4
   137a4:	str	r2, [sp, #60]	; 0x3c
   137a8:	lsl	r3, r3, #1
   137ac:	ldr	r2, [r0]
   137b0:	ldrh	r2, [r2, r3]
   137b4:	eor	r2, r2, #16384	; 0x4000
   137b8:	ubfx	r2, r2, #14, #1
   137bc:	ldr	r1, [sp, #24]
   137c0:	ands	r2, r2, r1
   137c4:	beq	13494 <close_stdout@@Base+0x944>
   137c8:	ldr	r3, [sp, #60]	; 0x3c
   137cc:	mov	r0, #92	; 0x5c
   137d0:	ldr	r7, [sp, #36]	; 0x24
   137d4:	add	r1, r3, fp
   137d8:	str	r8, [sp, #60]	; 0x3c
   137dc:	ldr	r3, [sp, #40]	; 0x28
   137e0:	b	13844 <close_stdout@@Base+0xcf4>
   137e4:	cmp	r7, #0
   137e8:	bne	13c84 <close_stdout@@Base+0x1134>
   137ec:	add	ip, r9, #1
   137f0:	cmp	r9, sl
   137f4:	strbcc	r0, [r3, r9]
   137f8:	cmp	sl, ip
   137fc:	lsrhi	r8, r4, #6
   13800:	addhi	r8, r8, #48	; 0x30
   13804:	strbhi	r8, [r3, ip]
   13808:	add	ip, r9, #2
   1380c:	add	r9, r9, #3
   13810:	cmp	sl, ip
   13814:	ubfxhi	r8, r4, #3, #3
   13818:	and	r4, r4, #7
   1381c:	add	r4, r4, #48	; 0x30
   13820:	addhi	r8, r8, #48	; 0x30
   13824:	strbhi	r8, [r3, ip]
   13828:	add	fp, fp, #1
   1382c:	cmp	r1, fp
   13830:	bls	13870 <close_stdout@@Base+0xd20>
   13834:	cmp	r9, sl
   13838:	strbcc	r4, [r3, r9]
   1383c:	ldrb	r4, [r5, #1]!
   13840:	add	r9, r9, #1
   13844:	cmp	r2, #0
   13848:	bne	137e4 <close_stdout@@Base+0xc94>
   1384c:	cmp	r6, #0
   13850:	beq	13828 <close_stdout@@Base+0xcd8>
   13854:	add	fp, fp, #1
   13858:	cmp	r9, sl
   1385c:	strbcc	r0, [r3, r9]
   13860:	cmp	r1, fp
   13864:	add	r9, r9, #1
   13868:	mov	r6, #0
   1386c:	bhi	13834 <close_stdout@@Base+0xce4>
   13870:	ldr	r8, [sp, #60]	; 0x3c
   13874:	b	134f0 <close_stdout@@Base+0x9a0>
   13878:	ldr	r3, [sp, #36]	; 0x24
   1387c:	cmp	r3, #0
   13880:	bne	13d84 <close_stdout@@Base+0x1234>
   13884:	cmp	sl, #0
   13888:	beq	13c9c <close_stdout@@Base+0x114c>
   1388c:	ldr	r1, [sp, #40]	; 0x28
   13890:	mov	r0, #1
   13894:	ldr	r2, [pc, #1296]	; 13dac <close_stdout@@Base+0x125c>
   13898:	mov	r3, #34	; 0x22
   1389c:	str	r0, [sp, #24]
   138a0:	mov	r9, r0
   138a4:	add	r2, pc, r2
   138a8:	str	r0, [sp, #28]
   138ac:	strb	r3, [r1]
   138b0:	str	r2, [sp, #52]	; 0x34
   138b4:	b	13160 <close_stdout@@Base+0x610>
   138b8:	ldr	r3, [pc, #1264]	; 13db0 <close_stdout@@Base+0x1260>
   138bc:	mov	r2, #1
   138c0:	mov	r0, #3
   138c4:	str	r2, [sp, #36]	; 0x24
   138c8:	add	r3, pc, r3
   138cc:	str	r2, [sp, #24]
   138d0:	str	r3, [sp, #52]	; 0x34
   138d4:	mov	r9, #0
   138d8:	str	r2, [sp, #28]
   138dc:	str	r0, [sp, #160]	; 0xa0
   138e0:	b	13160 <close_stdout@@Base+0x610>
   138e4:	mov	r0, #0
   138e8:	mov	r1, #1
   138ec:	str	r0, [sp, #36]	; 0x24
   138f0:	mov	r9, r0
   138f4:	str	r1, [sp, #24]
   138f8:	str	r0, [sp, #28]
   138fc:	str	r0, [sp, #52]	; 0x34
   13900:	b	13160 <close_stdout@@Base+0x610>
   13904:	ldr	r3, [sp, #160]	; 0xa0
   13908:	cmp	r3, #8
   1390c:	beq	13938 <close_stdout@@Base+0xde8>
   13910:	ldr	r0, [pc, #1180]	; 13db4 <close_stdout@@Base+0x1264>
   13914:	mov	r1, r3
   13918:	add	r0, pc, r0
   1391c:	bl	12f48 <close_stdout@@Base+0x3f8>
   13920:	ldr	r1, [sp, #160]	; 0xa0
   13924:	str	r0, [sp, #72]	; 0x48
   13928:	ldr	r0, [pc, #1160]	; 13db8 <close_stdout@@Base+0x1268>
   1392c:	add	r0, pc, r0
   13930:	bl	12f48 <close_stdout@@Base+0x3f8>
   13934:	str	r0, [sp, #68]	; 0x44
   13938:	ldr	r0, [sp, #36]	; 0x24
   1393c:	cmp	r0, #0
   13940:	movne	r9, #0
   13944:	bne	1397c <close_stdout@@Base+0xe2c>
   13948:	ldr	r1, [sp, #72]	; 0x48
   1394c:	ldrb	r3, [r1]
   13950:	cmp	r3, #0
   13954:	beq	13d54 <close_stdout@@Base+0x1204>
   13958:	mov	r2, r1
   1395c:	ldr	r1, [sp, #40]	; 0x28
   13960:	mov	r9, r0
   13964:	cmp	r9, sl
   13968:	strbcc	r3, [r1, r9]
   1396c:	ldrb	r3, [r2, #1]!
   13970:	add	r9, r9, #1
   13974:	cmp	r3, #0
   13978:	bne	13964 <close_stdout@@Base+0xe14>
   1397c:	ldr	r0, [sp, #68]	; 0x44
   13980:	str	r0, [sp, #52]	; 0x34
   13984:	bl	114a8 <strlen@plt>
   13988:	mov	r2, #1
   1398c:	str	r2, [sp, #24]
   13990:	str	r0, [sp, #28]
   13994:	b	13160 <close_stdout@@Base+0x610>
   13998:	ldr	r3, [pc, #1052]	; 13dbc <close_stdout@@Base+0x126c>
   1399c:	mov	r2, #0
   139a0:	mov	r1, #1
   139a4:	mov	r0, #2
   139a8:	add	r3, pc, r3
   139ac:	str	r1, [sp, #36]	; 0x24
   139b0:	str	r2, [sp, #24]
   139b4:	mov	r9, r2
   139b8:	str	r1, [sp, #28]
   139bc:	str	r3, [sp, #52]	; 0x34
   139c0:	str	r0, [sp, #160]	; 0xa0
   139c4:	b	13160 <close_stdout@@Base+0x610>
   139c8:	ldr	r3, [sp, #36]	; 0x24
   139cc:	cmp	r3, #0
   139d0:	bne	13d60 <close_stdout@@Base+0x1210>
   139d4:	cmp	sl, #0
   139d8:	beq	13cbc <close_stdout@@Base+0x116c>
   139dc:	ldr	r1, [sp, #40]	; 0x28
   139e0:	mov	r3, #39	; 0x27
   139e4:	ldr	r2, [sp, #36]	; 0x24
   139e8:	mov	r0, #1
   139ec:	mov	r9, r0
   139f0:	str	r0, [sp, #28]
   139f4:	strb	r3, [r1]
   139f8:	ldr	r3, [pc, #960]	; 13dc0 <close_stdout@@Base+0x1270>
   139fc:	str	r2, [sp, #24]
   13a00:	add	r3, pc, r3
   13a04:	str	r3, [sp, #52]	; 0x34
   13a08:	b	13160 <close_stdout@@Base+0x610>
   13a0c:	ldr	r2, [sp, #28]
   13a10:	cmp	r2, #1
   13a14:	add	r4, fp, r2
   13a18:	movls	r3, #0
   13a1c:	movhi	r3, #1
   13a20:	cmn	r8, #1
   13a24:	movne	r3, #0
   13a28:	cmp	r3, #0
   13a2c:	beq	13a3c <close_stdout@@Base+0xeec>
   13a30:	ldr	r0, [sp, #32]
   13a34:	bl	114a8 <strlen@plt>
   13a38:	mov	r8, r0
   13a3c:	cmp	r8, r4
   13a40:	ldrcc	r3, [sp, #32]
   13a44:	movcc	r6, #0
   13a48:	addcc	r5, r3, fp
   13a4c:	bcc	131bc <close_stdout@@Base+0x66c>
   13a50:	ldr	r0, [sp, #32]
   13a54:	ldr	r1, [sp, #52]	; 0x34
   13a58:	add	r5, r0, fp
   13a5c:	ldr	r2, [sp, #28]
   13a60:	mov	r0, r5
   13a64:	bl	11358 <memcmp@plt>
   13a68:	cmp	r0, #0
   13a6c:	bne	13a84 <close_stdout@@Base+0xf34>
   13a70:	ldr	r1, [sp, #36]	; 0x24
   13a74:	cmp	r1, #0
   13a78:	bne	135dc <close_stdout@@Base+0xa8c>
   13a7c:	mov	r6, #1
   13a80:	b	131bc <close_stdout@@Base+0x66c>
   13a84:	mov	r6, #0
   13a88:	b	131bc <close_stdout@@Base+0x66c>
   13a8c:	add	r7, sp, #108	; 0x6c
   13a90:	cmn	r8, #1
   13a94:	mov	r3, #0
   13a98:	str	r3, [sp, #108]	; 0x6c
   13a9c:	str	r3, [r7, #4]
   13aa0:	beq	13c8c <close_stdout@@Base+0x113c>
   13aa4:	mov	r1, #0
   13aa8:	ldr	r0, [sp, #32]
   13aac:	mov	ip, #1
   13ab0:	str	r9, [sp, #88]	; 0x58
   13ab4:	str	r6, [sp, #96]	; 0x60
   13ab8:	mov	r9, r1
   13abc:	str	r5, [sp, #100]	; 0x64
   13ac0:	mov	r6, ip
   13ac4:	mov	r5, r7
   13ac8:	add	r3, sp, #104	; 0x68
   13acc:	sub	r0, r0, #1
   13ad0:	str	r3, [sp, #80]	; 0x50
   13ad4:	str	r0, [sp, #84]	; 0x54
   13ad8:	str	r1, [sp, #60]	; 0x3c
   13adc:	str	r4, [sp, #92]	; 0x5c
   13ae0:	ldr	r2, [sp, #32]
   13ae4:	add	r7, r9, fp
   13ae8:	add	r0, sp, #104	; 0x68
   13aec:	mov	r3, r5
   13af0:	add	r4, r2, r7
   13af4:	rsb	r2, r7, r8
   13af8:	mov	r1, r4
   13afc:	bl	11400 <mbrtowc@plt>
   13b00:	subs	r2, r0, #0
   13b04:	beq	13c10 <close_stdout@@Base+0x10c0>
   13b08:	cmn	r2, #1
   13b0c:	beq	13d38 <close_stdout@@Base+0x11e8>
   13b10:	cmn	r2, #2
   13b14:	beq	13cdc <close_stdout@@Base+0x118c>
   13b18:	ldr	r3, [sp, #36]	; 0x24
   13b1c:	ldr	r0, [sp, #160]	; 0xa0
   13b20:	cmp	r0, #2
   13b24:	movne	r3, #0
   13b28:	andeq	r3, r3, #1
   13b2c:	cmp	r3, #0
   13b30:	beq	13bec <close_stdout@@Base+0x109c>
   13b34:	cmp	r2, #1
   13b38:	beq	13bec <close_stdout@@Base+0x109c>
   13b3c:	ldr	r1, [sp, #84]	; 0x54
   13b40:	add	r3, r1, r2
   13b44:	add	r7, r3, r7
   13b48:	ldrb	r3, [r4, #1]!
   13b4c:	sub	r3, r3, #91	; 0x5b
   13b50:	cmp	r3, #33	; 0x21
   13b54:	addls	pc, pc, r3, lsl #2
   13b58:	b	13be4 <close_stdout@@Base+0x1094>
   13b5c:	b	135dc <close_stdout@@Base+0xa8c>
   13b60:	b	135dc <close_stdout@@Base+0xa8c>
   13b64:	b	13be4 <close_stdout@@Base+0x1094>
   13b68:	b	135dc <close_stdout@@Base+0xa8c>
   13b6c:	b	13be4 <close_stdout@@Base+0x1094>
   13b70:	b	135dc <close_stdout@@Base+0xa8c>
   13b74:	b	13be4 <close_stdout@@Base+0x1094>
   13b78:	b	13be4 <close_stdout@@Base+0x1094>
   13b7c:	b	13be4 <close_stdout@@Base+0x1094>
   13b80:	b	13be4 <close_stdout@@Base+0x1094>
   13b84:	b	13be4 <close_stdout@@Base+0x1094>
   13b88:	b	13be4 <close_stdout@@Base+0x1094>
   13b8c:	b	13be4 <close_stdout@@Base+0x1094>
   13b90:	b	13be4 <close_stdout@@Base+0x1094>
   13b94:	b	13be4 <close_stdout@@Base+0x1094>
   13b98:	b	13be4 <close_stdout@@Base+0x1094>
   13b9c:	b	13be4 <close_stdout@@Base+0x1094>
   13ba0:	b	13be4 <close_stdout@@Base+0x1094>
   13ba4:	b	13be4 <close_stdout@@Base+0x1094>
   13ba8:	b	13be4 <close_stdout@@Base+0x1094>
   13bac:	b	13be4 <close_stdout@@Base+0x1094>
   13bb0:	b	13be4 <close_stdout@@Base+0x1094>
   13bb4:	b	13be4 <close_stdout@@Base+0x1094>
   13bb8:	b	13be4 <close_stdout@@Base+0x1094>
   13bbc:	b	13be4 <close_stdout@@Base+0x1094>
   13bc0:	b	13be4 <close_stdout@@Base+0x1094>
   13bc4:	b	13be4 <close_stdout@@Base+0x1094>
   13bc8:	b	13be4 <close_stdout@@Base+0x1094>
   13bcc:	b	13be4 <close_stdout@@Base+0x1094>
   13bd0:	b	13be4 <close_stdout@@Base+0x1094>
   13bd4:	b	13be4 <close_stdout@@Base+0x1094>
   13bd8:	b	13be4 <close_stdout@@Base+0x1094>
   13bdc:	b	13be4 <close_stdout@@Base+0x1094>
   13be0:	b	135dc <close_stdout@@Base+0xa8c>
   13be4:	cmp	r4, r7
   13be8:	bne	13b48 <close_stdout@@Base+0xff8>
   13bec:	ldr	r0, [sp, #104]	; 0x68
   13bf0:	add	r9, r9, r2
   13bf4:	bl	113ac <iswprint@plt>
   13bf8:	cmp	r0, #0
   13bfc:	mov	r0, r5
   13c00:	moveq	r6, #0
   13c04:	bl	1134c <mbsinit@plt>
   13c08:	cmp	r0, #0
   13c0c:	beq	13ae0 <close_stdout@@Base+0xf90>
   13c10:	mov	ip, r6
   13c14:	eor	r2, ip, #1
   13c18:	str	r9, [sp, #60]	; 0x3c
   13c1c:	ldr	r4, [sp, #92]	; 0x5c
   13c20:	uxtb	r2, r2
   13c24:	ldr	r9, [sp, #88]	; 0x58
   13c28:	ldr	r6, [sp, #96]	; 0x60
   13c2c:	ldr	r5, [sp, #100]	; 0x64
   13c30:	ldr	r3, [sp, #60]	; 0x3c
   13c34:	cmp	r3, #1
   13c38:	bls	137bc <close_stdout@@Base+0xc6c>
   13c3c:	ldr	r0, [sp, #24]
   13c40:	and	r2, r2, r0
   13c44:	b	137c8 <close_stdout@@Base+0xc78>
   13c48:	ldr	r2, [sp, #164]	; 0xa4
   13c4c:	tst	r2, #1
   13c50:	addne	fp, fp, #1
   13c54:	bne	13184 <close_stdout@@Base+0x634>
   13c58:	b	13494 <close_stdout@@Base+0x944>
   13c5c:	ldr	r0, [sp, #36]	; 0x24
   13c60:	cmp	r0, #0
   13c64:	beq	13494 <close_stdout@@Base+0x944>
   13c68:	b	135dc <close_stdout@@Base+0xa8c>
   13c6c:	ldr	r2, [sp, #32]
   13c70:	ldrb	r3, [r2, #1]
   13c74:	adds	r3, r3, #0
   13c78:	movne	r3, #1
   13c7c:	b	135b0 <close_stdout@@Base+0xa60>
   13c80:	bl	115bc <abort@plt>
   13c84:	ldr	r8, [sp, #60]	; 0x3c
   13c88:	b	135dc <close_stdout@@Base+0xa8c>
   13c8c:	ldr	r0, [sp, #32]
   13c90:	bl	114a8 <strlen@plt>
   13c94:	mov	r8, r0
   13c98:	b	13aa4 <close_stdout@@Base+0xf54>
   13c9c:	ldr	r2, [pc, #288]	; 13dc4 <close_stdout@@Base+0x1274>
   13ca0:	mov	r1, #1
   13ca4:	mov	r9, r1
   13ca8:	str	r1, [sp, #24]
   13cac:	add	r2, pc, r2
   13cb0:	str	r1, [sp, #28]
   13cb4:	str	r2, [sp, #52]	; 0x34
   13cb8:	b	13160 <close_stdout@@Base+0x610>
   13cbc:	ldr	r2, [pc, #260]	; 13dc8 <close_stdout@@Base+0x1278>
   13cc0:	mov	r3, #1
   13cc4:	mov	r9, r3
   13cc8:	str	r3, [sp, #28]
   13ccc:	add	r2, pc, r2
   13cd0:	str	sl, [sp, #24]
   13cd4:	str	r2, [sp, #52]	; 0x34
   13cd8:	b	13160 <close_stdout@@Base+0x610>
   13cdc:	cmp	r8, r7
   13ce0:	str	r9, [sp, #60]	; 0x3c
   13ce4:	mov	ip, r4
   13ce8:	ldr	r6, [sp, #96]	; 0x60
   13cec:	ldr	r9, [sp, #88]	; 0x58
   13cf0:	ldr	r4, [sp, #92]	; 0x5c
   13cf4:	ldr	r5, [sp, #100]	; 0x64
   13cf8:	bls	13d30 <close_stdout@@Base+0x11e0>
   13cfc:	ldrb	r3, [ip]
   13d00:	cmp	r3, #0
   13d04:	beq	13d30 <close_stdout@@Base+0x11e0>
   13d08:	ldr	r3, [sp, #60]	; 0x3c
   13d0c:	b	13d1c <close_stdout@@Base+0x11cc>
   13d10:	ldrb	r2, [r5, r3]
   13d14:	cmp	r2, #0
   13d18:	beq	13d2c <close_stdout@@Base+0x11dc>
   13d1c:	add	r3, r3, #1
   13d20:	add	r2, fp, r3
   13d24:	cmp	r8, r2
   13d28:	bhi	13d10 <close_stdout@@Base+0x11c0>
   13d2c:	str	r3, [sp, #60]	; 0x3c
   13d30:	mov	r2, #1
   13d34:	b	13c30 <close_stdout@@Base+0x10e0>
   13d38:	str	r9, [sp, #60]	; 0x3c
   13d3c:	mov	r2, #1
   13d40:	ldr	r4, [sp, #92]	; 0x5c
   13d44:	ldr	r6, [sp, #96]	; 0x60
   13d48:	ldr	r9, [sp, #88]	; 0x58
   13d4c:	ldr	r5, [sp, #100]	; 0x64
   13d50:	b	13c30 <close_stdout@@Base+0x10e0>
   13d54:	ldr	r9, [sp, #36]	; 0x24
   13d58:	b	1397c <close_stdout@@Base+0xe2c>
   13d5c:	bl	1137c <__stack_chk_fail@plt>
   13d60:	ldr	r1, [pc, #100]	; 13dcc <close_stdout@@Base+0x127c>
   13d64:	mov	r3, #0
   13d68:	mov	r0, #1
   13d6c:	str	r3, [sp, #24]
   13d70:	add	r1, pc, r1
   13d74:	str	r0, [sp, #28]
   13d78:	mov	r9, r3
   13d7c:	str	r1, [sp, #52]	; 0x34
   13d80:	b	13160 <close_stdout@@Base+0x610>
   13d84:	ldr	r0, [pc, #68]	; 13dd0 <close_stdout@@Base+0x1280>
   13d88:	mov	r3, #1
   13d8c:	mov	r9, #0
   13d90:	str	r3, [sp, #24]
   13d94:	add	r0, pc, r0
   13d98:	str	r3, [sp, #28]
   13d9c:	str	r0, [sp, #52]	; 0x34
   13da0:	b	13160 <close_stdout@@Base+0x610>
   13da4:	andeq	r3, r1, r0, lsr pc
   13da8:	andeq	r0, r0, r4, lsl r1
   13dac:	andeq	r2, r0, r8, lsr ip
   13db0:	andeq	r2, r0, r4, lsl ip
   13db4:	ldrdeq	r2, [r0], -r0
   13db8:	andeq	r2, r0, ip, lsr #23
   13dbc:	andeq	r2, r0, r0, lsr fp
   13dc0:	ldrdeq	r2, [r0], -r8
   13dc4:	andeq	r2, r0, r0, lsr r8
   13dc8:	andeq	r2, r0, ip, lsl #16
   13dcc:	andeq	r2, r0, r8, ror #14
   13dd0:	andeq	r2, r0, r8, asr #14
   13dd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dd8:	sub	sp, sp, #44	; 0x2c
   13ddc:	mov	r6, r0
   13de0:	mov	r9, r1
   13de4:	mov	sl, r2
   13de8:	mov	r4, r3
   13dec:	bl	114d8 <__errno_location@plt>
   13df0:	ldr	fp, [pc, #412]	; 13f94 <close_stdout@@Base+0x1444>
   13df4:	cmp	r6, #0
   13df8:	add	fp, pc, fp
   13dfc:	ldr	r5, [fp]
   13e00:	ldr	r1, [r0]
   13e04:	mov	r8, r0
   13e08:	str	r1, [sp, #36]	; 0x24
   13e0c:	blt	13f8c <close_stdout@@Base+0x143c>
   13e10:	ldr	r3, [pc, #384]	; 13f98 <close_stdout@@Base+0x1448>
   13e14:	add	r3, pc, r3
   13e18:	ldr	r3, [r3]
   13e1c:	cmp	r6, r3
   13e20:	bcc	13e74 <close_stdout@@Base+0x1324>
   13e24:	add	r7, r6, #1
   13e28:	cmn	r7, #-536870911	; 0xe0000001
   13e2c:	bhi	13f90 <close_stdout@@Base+0x1440>
   13e30:	add	r3, fp, #4
   13e34:	cmp	r5, r3
   13e38:	beq	13f64 <close_stdout@@Base+0x1414>
   13e3c:	mov	r0, r5
   13e40:	lsl	r1, r7, #3
   13e44:	bl	14f50 <close_stdout@@Base+0x2400>
   13e48:	mov	r5, r0
   13e4c:	str	r0, [fp]
   13e50:	ldr	fp, [pc, #324]	; 13f9c <close_stdout@@Base+0x144c>
   13e54:	mov	r1, #0
   13e58:	add	fp, pc, fp
   13e5c:	ldr	r0, [fp]
   13e60:	rsb	r2, r0, r7
   13e64:	add	r0, r5, r0, lsl #3
   13e68:	lsl	r2, r2, #3
   13e6c:	bl	114f0 <memset@plt>
   13e70:	str	r7, [fp]
   13e74:	add	r2, r4, #8
   13e78:	str	r2, [sp, #32]
   13e7c:	ldr	r1, [r4]
   13e80:	add	fp, r5, r6, lsl #3
   13e84:	ldr	lr, [sp, #32]
   13e88:	mov	r2, r9
   13e8c:	ldr	r3, [r4, #4]
   13e90:	ldr	ip, [r5, r6, lsl #3]
   13e94:	ldr	r7, [fp, #4]
   13e98:	orr	r3, r3, #1
   13e9c:	str	r1, [sp]
   13ea0:	str	r3, [sp, #4]
   13ea4:	mov	r1, ip
   13ea8:	str	lr, [sp, #8]
   13eac:	mov	r0, r7
   13eb0:	ldr	lr, [r4, #40]	; 0x28
   13eb4:	str	r3, [sp, #28]
   13eb8:	mov	r3, sl
   13ebc:	str	lr, [sp, #12]
   13ec0:	ldr	lr, [r4, #44]	; 0x2c
   13ec4:	str	ip, [sp, #24]
   13ec8:	str	lr, [sp, #16]
   13ecc:	bl	130ac <close_stdout@@Base+0x55c>
   13ed0:	ldr	ip, [sp, #24]
   13ed4:	cmp	ip, r0
   13ed8:	bhi	13f50 <close_stdout@@Base+0x1400>
   13edc:	ldr	r3, [pc, #188]	; 13fa0 <close_stdout@@Base+0x1450>
   13ee0:	add	r1, r0, #1
   13ee4:	str	r1, [r5, r6, lsl #3]
   13ee8:	add	r3, pc, r3
   13eec:	cmp	r7, r3
   13ef0:	beq	13f04 <close_stdout@@Base+0x13b4>
   13ef4:	mov	r0, r7
   13ef8:	str	r1, [sp, #24]
   13efc:	bl	11328 <free@plt>
   13f00:	ldr	r1, [sp, #24]
   13f04:	mov	r0, r1
   13f08:	str	r1, [sp, #24]
   13f0c:	bl	14ef8 <close_stdout@@Base+0x23a8>
   13f10:	ldr	r3, [sp, #28]
   13f14:	ldr	lr, [sp, #32]
   13f18:	mov	r2, r9
   13f1c:	str	r0, [fp, #4]
   13f20:	mov	r7, r0
   13f24:	ldr	ip, [r4]
   13f28:	str	r3, [sp, #4]
   13f2c:	mov	r3, sl
   13f30:	str	lr, [sp, #8]
   13f34:	str	ip, [sp]
   13f38:	ldr	ip, [r4, #40]	; 0x28
   13f3c:	ldr	r1, [sp, #24]
   13f40:	str	ip, [sp, #12]
   13f44:	ldr	ip, [r4, #44]	; 0x2c
   13f48:	str	ip, [sp, #16]
   13f4c:	bl	130ac <close_stdout@@Base+0x55c>
   13f50:	ldr	r1, [sp, #36]	; 0x24
   13f54:	mov	r0, r7
   13f58:	str	r1, [r8]
   13f5c:	add	sp, sp, #44	; 0x2c
   13f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f64:	lsl	r1, r7, #3
   13f68:	mov	r0, #0
   13f6c:	str	r3, [sp, #24]
   13f70:	bl	14f50 <close_stdout@@Base+0x2400>
   13f74:	ldr	r3, [sp, #24]
   13f78:	mov	r5, r0
   13f7c:	ldm	r3, {r0, r1}
   13f80:	str	r5, [fp]
   13f84:	stm	r5, {r0, r1}
   13f88:	b	13e50 <close_stdout@@Base+0x1300>
   13f8c:	bl	115bc <abort@plt>
   13f90:	bl	1510c <close_stdout@@Base+0x25bc>
   13f94:	muleq	r1, ip, r3
   13f98:	andeq	r3, r1, ip, asr #6
   13f9c:	andeq	r3, r1, r8, lsl #6
   13fa0:	andeq	r3, r1, ip, asr #5
   13fa4:	push	{r4, r5, r6, lr}
   13fa8:	mov	r5, r0
   13fac:	bl	114d8 <__errno_location@plt>
   13fb0:	cmp	r5, #0
   13fb4:	mov	r1, #48	; 0x30
   13fb8:	mov	r4, r0
   13fbc:	ldr	r0, [pc, #24]	; 13fdc <close_stdout@@Base+0x148c>
   13fc0:	ldr	r6, [r4]
   13fc4:	add	r0, pc, r0
   13fc8:	add	r0, r0, #256	; 0x100
   13fcc:	movne	r0, r5
   13fd0:	bl	150cc <close_stdout@@Base+0x257c>
   13fd4:	str	r6, [r4]
   13fd8:	pop	{r4, r5, r6, pc}
   13fdc:	strdeq	r3, [r1], -r0
   13fe0:	cmp	r0, #0
   13fe4:	beq	13ff0 <close_stdout@@Base+0x14a0>
   13fe8:	ldr	r0, [r0]
   13fec:	bx	lr
   13ff0:	ldr	r0, [pc, #12]	; 14004 <close_stdout@@Base+0x14b4>
   13ff4:	add	r0, pc, r0
   13ff8:	add	r0, r0, #256	; 0x100
   13ffc:	ldr	r0, [r0]
   14000:	bx	lr
   14004:	andeq	r3, r1, r0, asr #3
   14008:	cmp	r0, #0
   1400c:	beq	14018 <close_stdout@@Base+0x14c8>
   14010:	str	r1, [r0]
   14014:	bx	lr
   14018:	ldr	r0, [pc, #12]	; 1402c <close_stdout@@Base+0x14dc>
   1401c:	add	r0, pc, r0
   14020:	add	r0, r0, #256	; 0x100
   14024:	str	r1, [r0]
   14028:	bx	lr
   1402c:	muleq	r1, r8, r1
   14030:	cmp	r0, #0
   14034:	movne	r3, r0
   14038:	beq	14068 <close_stdout@@Base+0x1518>
   1403c:	lsr	ip, r1, #5
   14040:	and	r1, r1, #31
   14044:	add	r3, r3, ip, lsl #2
   14048:	ldr	ip, [r3, #8]
   1404c:	lsr	r0, ip, r1
   14050:	eor	r2, r0, r2
   14054:	and	r0, r0, #1
   14058:	and	r2, r2, #1
   1405c:	eor	ip, ip, r2, lsl r1
   14060:	str	ip, [r3, #8]
   14064:	bx	lr
   14068:	ldr	r3, [pc, #8]	; 14078 <close_stdout@@Base+0x1528>
   1406c:	add	r3, pc, r3
   14070:	add	r3, r3, #256	; 0x100
   14074:	b	1403c <close_stdout@@Base+0x14ec>
   14078:	andeq	r3, r1, r8, asr #2
   1407c:	subs	r3, r0, #0
   14080:	beq	14090 <close_stdout@@Base+0x1540>
   14084:	ldr	r0, [r3, #4]
   14088:	str	r1, [r3, #4]
   1408c:	bx	lr
   14090:	ldr	r3, [pc, #8]	; 140a0 <close_stdout@@Base+0x1550>
   14094:	add	r3, pc, r3
   14098:	add	r3, r3, #256	; 0x100
   1409c:	b	14084 <close_stdout@@Base+0x1534>
   140a0:	andeq	r3, r1, r0, lsr #2
   140a4:	cmp	r0, #0
   140a8:	push	{r3, lr}
   140ac:	beq	140d0 <close_stdout@@Base+0x1580>
   140b0:	cmp	r2, #0
   140b4:	cmpne	r1, #0
   140b8:	mov	r3, #8
   140bc:	strne	r1, [r0, #40]	; 0x28
   140c0:	str	r3, [r0]
   140c4:	strne	r2, [r0, #44]	; 0x2c
   140c8:	popne	{r3, pc}
   140cc:	bl	115bc <abort@plt>
   140d0:	ldr	r0, [pc, #8]	; 140e0 <close_stdout@@Base+0x1590>
   140d4:	add	r0, pc, r0
   140d8:	add	r0, r0, #256	; 0x100
   140dc:	b	140b0 <close_stdout@@Base+0x1560>
   140e0:	andeq	r3, r1, r0, ror #1
   140e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140e8:	sub	sp, sp, #24
   140ec:	mov	r7, r0
   140f0:	mov	sl, r1
   140f4:	ldr	r4, [sp, #56]	; 0x38
   140f8:	mov	r9, r2
   140fc:	mov	r8, r3
   14100:	cmp	r4, #0
   14104:	beq	14158 <close_stdout@@Base+0x1608>
   14108:	bl	114d8 <__errno_location@plt>
   1410c:	ldr	r3, [r4]
   14110:	add	lr, r4, #8
   14114:	mov	r1, sl
   14118:	mov	r2, r9
   1411c:	ldr	r6, [r0]
   14120:	mov	r5, r0
   14124:	str	r3, [sp]
   14128:	mov	r0, r7
   1412c:	ldr	ip, [r4, #4]
   14130:	mov	r3, r8
   14134:	stmib	sp, {ip, lr}
   14138:	ldr	ip, [r4, #40]	; 0x28
   1413c:	str	ip, [sp, #12]
   14140:	ldr	ip, [r4, #44]	; 0x2c
   14144:	str	ip, [sp, #16]
   14148:	bl	130ac <close_stdout@@Base+0x55c>
   1414c:	str	r6, [r5]
   14150:	add	sp, sp, #24
   14154:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14158:	ldr	r4, [pc, #8]	; 14168 <close_stdout@@Base+0x1618>
   1415c:	add	r4, pc, r4
   14160:	add	r4, r4, #256	; 0x100
   14164:	b	14108 <close_stdout@@Base+0x15b8>
   14168:	andeq	r3, r1, r8, asr r0
   1416c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14170:	subs	r4, r3, #0
   14174:	sub	sp, sp, #36	; 0x24
   14178:	mov	r7, r0
   1417c:	mov	r6, r1
   14180:	mov	r5, r2
   14184:	beq	14240 <close_stdout@@Base+0x16f0>
   14188:	bl	114d8 <__errno_location@plt>
   1418c:	ldr	r3, [r4]
   14190:	ldr	sl, [r4, #4]
   14194:	add	r9, r4, #8
   14198:	mov	r8, r0
   1419c:	mov	r0, #0
   141a0:	ldr	r2, [r8]
   141a4:	cmp	r5, r0
   141a8:	orreq	sl, sl, #1
   141ac:	str	r9, [sp, #8]
   141b0:	mov	r1, r0
   141b4:	stm	sp, {r3, sl}
   141b8:	mov	r3, r6
   141bc:	ldr	ip, [r4, #40]	; 0x28
   141c0:	str	r2, [sp, #28]
   141c4:	mov	r2, r7
   141c8:	str	ip, [sp, #12]
   141cc:	ldr	ip, [r4, #44]	; 0x2c
   141d0:	str	ip, [sp, #16]
   141d4:	bl	130ac <close_stdout@@Base+0x55c>
   141d8:	add	r1, r0, #1
   141dc:	mov	fp, r0
   141e0:	str	r1, [sp, #24]
   141e4:	mov	r0, r1
   141e8:	bl	14ef8 <close_stdout@@Base+0x23a8>
   141ec:	ldr	lr, [r4]
   141f0:	str	sl, [sp, #4]
   141f4:	mov	r3, r6
   141f8:	str	r9, [sp, #8]
   141fc:	mov	r2, r7
   14200:	str	lr, [sp]
   14204:	ldr	lr, [r4, #40]	; 0x28
   14208:	ldr	r1, [sp, #24]
   1420c:	str	lr, [sp, #12]
   14210:	ldr	lr, [r4, #44]	; 0x2c
   14214:	str	lr, [sp, #16]
   14218:	str	r0, [sp, #24]
   1421c:	bl	130ac <close_stdout@@Base+0x55c>
   14220:	ldr	r3, [sp, #28]
   14224:	cmp	r5, #0
   14228:	str	r3, [r8]
   1422c:	ldr	ip, [sp, #24]
   14230:	strne	fp, [r5]
   14234:	mov	r0, ip
   14238:	add	sp, sp, #36	; 0x24
   1423c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14240:	ldr	r4, [pc, #8]	; 14250 <close_stdout@@Base+0x1700>
   14244:	add	r4, pc, r4
   14248:	add	r4, r4, #256	; 0x100
   1424c:	b	14188 <close_stdout@@Base+0x1638>
   14250:	andeq	r2, r1, r0, ror pc
   14254:	mov	r3, r2
   14258:	mov	r2, #0
   1425c:	b	1416c <close_stdout@@Base+0x161c>
   14260:	ldr	r2, [pc, #152]	; 14300 <close_stdout@@Base+0x17b0>
   14264:	push	{r3, r4, r5, r6, r7, lr}
   14268:	add	r2, pc, r2
   1426c:	ldr	r3, [pc, #144]	; 14304 <close_stdout@@Base+0x17b4>
   14270:	ldr	r6, [r2]
   14274:	add	r3, pc, r3
   14278:	cmp	r6, #1
   1427c:	ldr	r7, [r3]
   14280:	movhi	r4, #1
   14284:	movhi	r5, r7
   14288:	bls	142a4 <close_stdout@@Base+0x1754>
   1428c:	ldr	r0, [r5, #12]
   14290:	add	r4, r4, #1
   14294:	bl	11328 <free@plt>
   14298:	cmp	r4, r6
   1429c:	add	r5, r5, #8
   142a0:	bne	1428c <close_stdout@@Base+0x173c>
   142a4:	ldr	r4, [pc, #92]	; 14308 <close_stdout@@Base+0x17b8>
   142a8:	ldr	r0, [r7, #4]
   142ac:	add	r4, pc, r4
   142b0:	cmp	r0, r4
   142b4:	beq	142cc <close_stdout@@Base+0x177c>
   142b8:	bl	11328 <free@plt>
   142bc:	ldr	r3, [pc, #72]	; 1430c <close_stdout@@Base+0x17bc>
   142c0:	mov	r2, #256	; 0x100
   142c4:	add	r3, pc, r3
   142c8:	stmib	r3, {r2, r4}
   142cc:	ldr	r4, [pc, #60]	; 14310 <close_stdout@@Base+0x17c0>
   142d0:	add	r4, pc, r4
   142d4:	add	r5, r4, #4
   142d8:	cmp	r7, r5
   142dc:	beq	142ec <close_stdout@@Base+0x179c>
   142e0:	mov	r0, r7
   142e4:	bl	11328 <free@plt>
   142e8:	str	r5, [r4]
   142ec:	ldr	r3, [pc, #32]	; 14314 <close_stdout@@Base+0x17c4>
   142f0:	mov	r2, #1
   142f4:	add	r3, pc, r3
   142f8:	str	r2, [r3]
   142fc:	pop	{r3, r4, r5, r6, r7, pc}
   14300:	strdeq	r2, [r1], -r8
   14304:	andeq	r2, r1, r0, lsr #30
   14308:	andeq	r2, r1, r8, lsl #30
   1430c:	ldrdeq	r2, [r1], -r0
   14310:	andeq	r2, r1, r4, asr #29
   14314:	andeq	r2, r1, ip, ror #28
   14318:	ldr	r3, [pc, #12]	; 1432c <close_stdout@@Base+0x17dc>
   1431c:	mvn	r2, #0
   14320:	add	r3, pc, r3
   14324:	add	r3, r3, #256	; 0x100
   14328:	b	13dd4 <close_stdout@@Base+0x1284>
   1432c:	muleq	r1, r4, lr
   14330:	ldr	r3, [pc, #8]	; 14340 <close_stdout@@Base+0x17f0>
   14334:	add	r3, pc, r3
   14338:	add	r3, r3, #256	; 0x100
   1433c:	b	13dd4 <close_stdout@@Base+0x1284>
   14340:	andeq	r2, r1, r0, lsl #29
   14344:	mov	r1, r0
   14348:	mov	r0, #0
   1434c:	b	14318 <close_stdout@@Base+0x17c8>
   14350:	mov	r2, r1
   14354:	mov	r1, r0
   14358:	mov	r0, #0
   1435c:	b	14330 <close_stdout@@Base+0x17e0>
   14360:	ldr	r3, [pc, #92]	; 143c4 <close_stdout@@Base+0x1874>
   14364:	ldr	ip, [pc, #92]	; 143c8 <close_stdout@@Base+0x1878>
   14368:	add	r3, pc, r3
   1436c:	push	{r4, r5, r6, r7, lr}
   14370:	sub	sp, sp, #60	; 0x3c
   14374:	ldr	r4, [r3, ip]
   14378:	add	r5, sp, #4
   1437c:	mov	r7, r2
   14380:	mov	r6, r0
   14384:	mov	r0, r5
   14388:	ldr	r3, [r4]
   1438c:	str	r3, [sp, #52]	; 0x34
   14390:	bl	12ef4 <close_stdout@@Base+0x3a4>
   14394:	mov	r3, r5
   14398:	mvn	r2, #0
   1439c:	mov	r0, r6
   143a0:	mov	r1, r7
   143a4:	bl	13dd4 <close_stdout@@Base+0x1284>
   143a8:	ldr	r2, [sp, #52]	; 0x34
   143ac:	ldr	r3, [r4]
   143b0:	cmp	r2, r3
   143b4:	bne	143c0 <close_stdout@@Base+0x1870>
   143b8:	add	sp, sp, #60	; 0x3c
   143bc:	pop	{r4, r5, r6, r7, pc}
   143c0:	bl	1137c <__stack_chk_fail@plt>
   143c4:	muleq	r1, r0, ip
   143c8:	andeq	r0, r0, r4, lsl r1
   143cc:	ldr	ip, [pc, #96]	; 14434 <close_stdout@@Base+0x18e4>
   143d0:	push	{r4, r5, r6, r7, r8, lr}
   143d4:	add	ip, pc, ip
   143d8:	ldr	lr, [pc, #88]	; 14438 <close_stdout@@Base+0x18e8>
   143dc:	sub	sp, sp, #56	; 0x38
   143e0:	mov	r8, r3
   143e4:	add	r5, sp, #4
   143e8:	mov	r7, r2
   143ec:	mov	r6, r0
   143f0:	ldr	r4, [ip, lr]
   143f4:	mov	r0, r5
   143f8:	ldr	r3, [r4]
   143fc:	str	r3, [sp, #52]	; 0x34
   14400:	bl	12ef4 <close_stdout@@Base+0x3a4>
   14404:	mov	r2, r8
   14408:	mov	r3, r5
   1440c:	mov	r0, r6
   14410:	mov	r1, r7
   14414:	bl	13dd4 <close_stdout@@Base+0x1284>
   14418:	ldr	r2, [sp, #52]	; 0x34
   1441c:	ldr	r3, [r4]
   14420:	cmp	r2, r3
   14424:	bne	14430 <close_stdout@@Base+0x18e0>
   14428:	add	sp, sp, #56	; 0x38
   1442c:	pop	{r4, r5, r6, r7, r8, pc}
   14430:	bl	1137c <__stack_chk_fail@plt>
   14434:	andeq	r2, r1, r4, lsr #24
   14438:	andeq	r0, r0, r4, lsl r1
   1443c:	mov	r2, r1
   14440:	mov	r1, r0
   14444:	mov	r0, #0
   14448:	b	14360 <close_stdout@@Base+0x1810>
   1444c:	mov	ip, r1
   14450:	mov	r3, r2
   14454:	mov	r1, r0
   14458:	mov	r2, ip
   1445c:	mov	r0, #0
   14460:	b	143cc <close_stdout@@Base+0x187c>
   14464:	push	{r4, r5, r6, r7, r8, lr}
   14468:	mov	r5, r2
   1446c:	ldr	lr, [pc, #136]	; 144fc <close_stdout@@Base+0x19ac>
   14470:	mov	r7, r0
   14474:	mov	r6, r1
   14478:	ldr	r4, [pc, #128]	; 14500 <close_stdout@@Base+0x19b0>
   1447c:	add	lr, pc, lr
   14480:	sub	sp, sp, #56	; 0x38
   14484:	add	lr, lr, #256	; 0x100
   14488:	ldr	r8, [pc, #116]	; 14504 <close_stdout@@Base+0x19b4>
   1448c:	add	r4, pc, r4
   14490:	add	ip, sp, #4
   14494:	ldm	lr!, {r0, r1, r2, r3}
   14498:	ldr	r4, [r4, r8]
   1449c:	stmia	ip!, {r0, r1, r2, r3}
   144a0:	ldm	lr!, {r0, r1, r2, r3}
   144a4:	ldr	r8, [r4]
   144a8:	stmia	ip!, {r0, r1, r2, r3}
   144ac:	ldm	lr, {r0, r1, r2, r3}
   144b0:	str	r8, [sp, #52]	; 0x34
   144b4:	stm	ip, {r0, r1, r2, r3}
   144b8:	mov	r1, r5
   144bc:	add	r5, sp, #4
   144c0:	mov	r2, #1
   144c4:	mov	r0, r5
   144c8:	bl	14030 <close_stdout@@Base+0x14e0>
   144cc:	mov	r2, r6
   144d0:	mov	r3, r5
   144d4:	mov	r1, r7
   144d8:	mov	r0, #0
   144dc:	bl	13dd4 <close_stdout@@Base+0x1284>
   144e0:	ldr	r2, [sp, #52]	; 0x34
   144e4:	ldr	r3, [r4]
   144e8:	cmp	r2, r3
   144ec:	bne	144f8 <close_stdout@@Base+0x19a8>
   144f0:	add	sp, sp, #56	; 0x38
   144f4:	pop	{r4, r5, r6, r7, r8, pc}
   144f8:	bl	1137c <__stack_chk_fail@plt>
   144fc:	andeq	r2, r1, r8, lsr sp
   14500:	andeq	r2, r1, ip, ror #22
   14504:	andeq	r0, r0, r4, lsl r1
   14508:	mov	r2, r1
   1450c:	mvn	r1, #0
   14510:	b	14464 <close_stdout@@Base+0x1914>
   14514:	mov	r1, #58	; 0x3a
   14518:	b	14508 <close_stdout@@Base+0x19b8>
   1451c:	mov	r2, #58	; 0x3a
   14520:	b	14464 <close_stdout@@Base+0x1914>
   14524:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14528:	mov	r5, r2
   1452c:	ldr	lr, [pc, #144]	; 145c4 <close_stdout@@Base+0x1a74>
   14530:	mov	r8, r0
   14534:	mov	r9, r1
   14538:	mov	r7, r3
   1453c:	add	lr, pc, lr
   14540:	ldr	r4, [pc, #128]	; 145c8 <close_stdout@@Base+0x1a78>
   14544:	add	lr, lr, #256	; 0x100
   14548:	sub	sp, sp, #56	; 0x38
   1454c:	ldr	sl, [pc, #120]	; 145cc <close_stdout@@Base+0x1a7c>
   14550:	add	r4, pc, r4
   14554:	ldm	lr!, {r0, r1, r2, r3}
   14558:	add	ip, sp, #4
   1455c:	ldr	r4, [r4, sl]
   14560:	ldr	r6, [sp, #88]	; 0x58
   14564:	stmia	ip!, {r0, r1, r2, r3}
   14568:	ldm	lr!, {r0, r1, r2, r3}
   1456c:	ldr	sl, [r4]
   14570:	stmia	ip!, {r0, r1, r2, r3}
   14574:	ldm	lr, {r0, r1, r2, r3}
   14578:	str	sl, [sp, #52]	; 0x34
   1457c:	stm	ip, {r0, r1, r2, r3}
   14580:	mov	r2, r5
   14584:	add	r5, sp, #4
   14588:	mov	r1, r9
   1458c:	mov	r0, r5
   14590:	bl	140a4 <close_stdout@@Base+0x1554>
   14594:	mov	r2, r6
   14598:	mov	r3, r5
   1459c:	mov	r0, r8
   145a0:	mov	r1, r7
   145a4:	bl	13dd4 <close_stdout@@Base+0x1284>
   145a8:	ldr	r2, [sp, #52]	; 0x34
   145ac:	ldr	r3, [r4]
   145b0:	cmp	r2, r3
   145b4:	bne	145c0 <close_stdout@@Base+0x1a70>
   145b8:	add	sp, sp, #56	; 0x38
   145bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   145c0:	bl	1137c <__stack_chk_fail@plt>
   145c4:	andeq	r2, r1, r8, ror ip
   145c8:	andeq	r2, r1, r8, lsr #21
   145cc:	andeq	r0, r0, r4, lsl r1
   145d0:	push	{lr}		; (str lr, [sp, #-4]!)
   145d4:	sub	sp, sp, #12
   145d8:	mvn	ip, #0
   145dc:	str	ip, [sp]
   145e0:	bl	14524 <close_stdout@@Base+0x19d4>
   145e4:	add	sp, sp, #12
   145e8:	pop	{pc}		; (ldr pc, [sp], #4)
   145ec:	mov	ip, r1
   145f0:	mov	r3, r2
   145f4:	mov	r1, r0
   145f8:	mov	r2, ip
   145fc:	mov	r0, #0
   14600:	b	145d0 <close_stdout@@Base+0x1a80>
   14604:	push	{lr}		; (str lr, [sp, #-4]!)
   14608:	sub	sp, sp, #12
   1460c:	mov	lr, r1
   14610:	mov	ip, r2
   14614:	mov	r1, r0
   14618:	str	r3, [sp]
   1461c:	mov	r2, lr
   14620:	mov	r3, ip
   14624:	mov	r0, #0
   14628:	bl	14524 <close_stdout@@Base+0x19d4>
   1462c:	add	sp, sp, #12
   14630:	pop	{pc}		; (ldr pc, [sp], #4)
   14634:	ldr	r3, [pc, #12]	; 14648 <close_stdout@@Base+0x1af8>
   14638:	ldr	ip, [pc, #12]	; 1464c <close_stdout@@Base+0x1afc>
   1463c:	add	r3, pc, r3
   14640:	ldr	r3, [r3, ip]
   14644:	b	13dd4 <close_stdout@@Base+0x1284>
   14648:			; <UNDEFINED> instruction: 0x000129bc
   1464c:	andeq	r0, r0, ip, lsl #2
   14650:	mov	r2, r1
   14654:	mov	r1, r0
   14658:	mov	r0, #0
   1465c:	b	14634 <close_stdout@@Base+0x1ae4>
   14660:	mvn	r2, #0
   14664:	b	14634 <close_stdout@@Base+0x1ae4>
   14668:	mov	r1, r0
   1466c:	mov	r0, #0
   14670:	b	14660 <close_stdout@@Base+0x1b10>
   14674:	push	{r4, r5, r6}
   14678:	ldrb	r3, [r0]
   1467c:	ldrb	r2, [r1]
   14680:	cmp	r3, #45	; 0x2d
   14684:	beq	14754 <close_stdout@@Base+0x1c04>
   14688:	cmp	r2, #45	; 0x2d
   1468c:	beq	14700 <close_stdout@@Base+0x1bb0>
   14690:	cmp	r3, #48	; 0x30
   14694:	beq	14800 <close_stdout@@Base+0x1cb0>
   14698:	cmp	r2, #48	; 0x30
   1469c:	bne	146b4 <close_stdout@@Base+0x1b64>
   146a0:	add	ip, r1, #1
   146a4:	mov	r1, ip
   146a8:	ldrb	r2, [ip], #1
   146ac:	cmp	r2, #48	; 0x30
   146b0:	beq	146a4 <close_stdout@@Base+0x1b54>
   146b4:	cmp	r2, r3
   146b8:	bne	14830 <close_stdout@@Base+0x1ce0>
   146bc:	sub	r2, r2, #48	; 0x30
   146c0:	cmp	r2, #9
   146c4:	bhi	148ac <close_stdout@@Base+0x1d5c>
   146c8:	add	r4, r0, #1
   146cc:	add	ip, r1, #1
   146d0:	ldrb	r3, [r4]
   146d4:	mov	r0, r4
   146d8:	ldrb	r2, [ip]
   146dc:	mov	r1, ip
   146e0:	add	r4, r4, #1
   146e4:	add	ip, ip, #1
   146e8:	cmp	r3, r2
   146ec:	sub	r5, r3, #48	; 0x30
   146f0:	bne	148c0 <close_stdout@@Base+0x1d70>
   146f4:	cmp	r5, #9
   146f8:	bls	146d0 <close_stdout@@Base+0x1b80>
   146fc:	b	148a4 <close_stdout@@Base+0x1d54>
   14700:	ldrb	r2, [r1, #1]!
   14704:	cmp	r2, #48	; 0x30
   14708:	beq	14700 <close_stdout@@Base+0x1bb0>
   1470c:	sub	r2, r2, #48	; 0x30
   14710:	cmp	r2, #9
   14714:	bls	14748 <close_stdout@@Base+0x1bf8>
   14718:	cmp	r3, #48	; 0x30
   1471c:	beq	14738 <close_stdout@@Base+0x1be8>
   14720:	sub	r3, r3, #48	; 0x30
   14724:	cmp	r3, #9
   14728:	movhi	r0, #0
   1472c:	movls	r0, #1
   14730:	pop	{r4, r5, r6}
   14734:	bx	lr
   14738:	ldrb	r3, [r0, #1]!
   1473c:	b	14718 <close_stdout@@Base+0x1bc8>
   14740:	cmp	r5, #0
   14744:	beq	148a4 <close_stdout@@Base+0x1d54>
   14748:	mov	r0, #1
   1474c:	pop	{r4, r5, r6}
   14750:	bx	lr
   14754:	mov	ip, r0
   14758:	ldrb	r4, [ip, #1]
   1475c:	add	ip, ip, #1
   14760:	cmp	r4, #48	; 0x30
   14764:	beq	14758 <close_stdout@@Base+0x1c08>
   14768:	cmp	r2, #45	; 0x2d
   1476c:	beq	1479c <close_stdout@@Base+0x1c4c>
   14770:	sub	r4, r4, #48	; 0x30
   14774:	cmp	r4, #9
   14778:	bls	14828 <close_stdout@@Base+0x1cd8>
   1477c:	cmp	r2, #48	; 0x30
   14780:	beq	147f8 <close_stdout@@Base+0x1ca8>
   14784:	sub	r2, r2, #48	; 0x30
   14788:	cmp	r2, #9
   1478c:	movhi	r0, #0
   14790:	mvnls	r0, #0
   14794:	pop	{r4, r5, r6}
   14798:	bx	lr
   1479c:	ldrb	r3, [r1, #1]
   147a0:	add	r1, r1, #1
   147a4:	cmp	r3, #48	; 0x30
   147a8:	beq	1479c <close_stdout@@Base+0x1c4c>
   147ac:	cmp	r4, r3
   147b0:	bne	14948 <close_stdout@@Base+0x1df8>
   147b4:	sub	r4, r4, #48	; 0x30
   147b8:	cmp	r4, #9
   147bc:	bhi	148a4 <close_stdout@@Base+0x1d54>
   147c0:	add	r2, ip, #1
   147c4:	add	r3, r1, #1
   147c8:	ldrb	r4, [r2]
   147cc:	mov	ip, r2
   147d0:	ldrb	r5, [r3]
   147d4:	mov	r1, r3
   147d8:	add	r2, r2, #1
   147dc:	add	r3, r3, #1
   147e0:	cmp	r4, r5
   147e4:	sub	r0, r4, #48	; 0x30
   147e8:	bne	148c8 <close_stdout@@Base+0x1d78>
   147ec:	cmp	r0, #9
   147f0:	bls	147c8 <close_stdout@@Base+0x1c78>
   147f4:	b	148a4 <close_stdout@@Base+0x1d54>
   147f8:	ldrb	r2, [r1, #1]!
   147fc:	b	1477c <close_stdout@@Base+0x1c2c>
   14800:	add	ip, r0, #1
   14804:	mov	r0, ip
   14808:	ldrb	r3, [ip], #1
   1480c:	cmp	r3, #48	; 0x30
   14810:	beq	14804 <close_stdout@@Base+0x1cb4>
   14814:	cmp	r2, #48	; 0x30
   14818:	bne	146b4 <close_stdout@@Base+0x1b64>
   1481c:	b	146a0 <close_stdout@@Base+0x1b50>
   14820:	cmp	r3, #0
   14824:	beq	148a4 <close_stdout@@Base+0x1d54>
   14828:	mvn	r0, #0
   1482c:	b	14730 <close_stdout@@Base+0x1be0>
   14830:	sub	ip, r3, #48	; 0x30
   14834:	cmp	ip, #9
   14838:	rsb	r3, r2, r3
   1483c:	subhi	r2, r2, #48	; 0x30
   14840:	bhi	148b0 <close_stdout@@Base+0x1d60>
   14844:	mov	ip, r0
   14848:	ldrb	r4, [ip, #1]!
   1484c:	sub	r4, r4, #48	; 0x30
   14850:	rsb	r5, r0, ip
   14854:	cmp	r4, #9
   14858:	bls	14848 <close_stdout@@Base+0x1cf8>
   1485c:	sub	r2, r2, #48	; 0x30
   14860:	cmp	r2, #9
   14864:	bhi	14740 <close_stdout@@Base+0x1bf0>
   14868:	mov	r2, r1
   1486c:	ldrb	r0, [r2, #1]!
   14870:	sub	r0, r0, #48	; 0x30
   14874:	rsb	ip, r1, r2
   14878:	cmp	r0, #9
   1487c:	bls	1486c <close_stdout@@Base+0x1d1c>
   14880:	cmp	ip, r5
   14884:	beq	14898 <close_stdout@@Base+0x1d48>
   14888:	cmp	r5, ip
   1488c:	mvncc	r0, #0
   14890:	movcs	r0, #1
   14894:	b	14730 <close_stdout@@Base+0x1be0>
   14898:	cmp	r5, #0
   1489c:	movne	r0, r3
   148a0:	bne	14730 <close_stdout@@Base+0x1be0>
   148a4:	mov	r0, #0
   148a8:	b	14730 <close_stdout@@Base+0x1be0>
   148ac:	mov	r3, #0
   148b0:	cmp	r2, #9
   148b4:	movls	r5, #0
   148b8:	bls	14868 <close_stdout@@Base+0x1d18>
   148bc:	b	148a4 <close_stdout@@Base+0x1d54>
   148c0:	mov	ip, r5
   148c4:	b	14834 <close_stdout@@Base+0x1ce4>
   148c8:	rsb	r0, r4, r5
   148cc:	sub	r4, r4, #48	; 0x30
   148d0:	sub	r5, r5, #48	; 0x30
   148d4:	cmp	r4, #9
   148d8:	bhi	14938 <close_stdout@@Base+0x1de8>
   148dc:	mov	r4, ip
   148e0:	ldrb	r6, [r4, #1]!
   148e4:	sub	r6, r6, #48	; 0x30
   148e8:	rsb	r3, ip, r4
   148ec:	cmp	r6, #9
   148f0:	bls	148e0 <close_stdout@@Base+0x1d90>
   148f4:	cmp	r5, #9
   148f8:	bhi	14820 <close_stdout@@Base+0x1cd0>
   148fc:	mov	ip, r1
   14900:	ldrb	r4, [ip, #1]!
   14904:	sub	r4, r4, #48	; 0x30
   14908:	rsb	r2, r1, ip
   1490c:	cmp	r4, #9
   14910:	bls	14900 <close_stdout@@Base+0x1db0>
   14914:	cmp	r2, r3
   14918:	beq	1492c <close_stdout@@Base+0x1ddc>
   1491c:	cmp	r3, r2
   14920:	movcc	r0, #1
   14924:	mvncs	r0, #0
   14928:	b	14730 <close_stdout@@Base+0x1be0>
   1492c:	cmp	r3, #0
   14930:	bne	14730 <close_stdout@@Base+0x1be0>
   14934:	b	148a4 <close_stdout@@Base+0x1d54>
   14938:	cmp	r5, #9
   1493c:	movls	r3, #0
   14940:	bls	148fc <close_stdout@@Base+0x1dac>
   14944:	b	148a4 <close_stdout@@Base+0x1d54>
   14948:	rsb	r0, r4, r3
   1494c:	sub	r5, r3, #48	; 0x30
   14950:	sub	r4, r4, #48	; 0x30
   14954:	b	148d4 <close_stdout@@Base+0x1d84>
   14958:	push	{r4, r5, r6, r7, lr}
   1495c:	cmp	r1, #0
   14960:	sub	sp, sp, #36	; 0x24
   14964:	ldr	r7, [pc, #896]	; 14cec <close_stdout@@Base+0x219c>
   14968:	mov	ip, r3
   1496c:	mov	r5, r0
   14970:	add	r7, pc, r7
   14974:	ldr	r4, [sp, #56]	; 0x38
   14978:	ldr	r6, [sp, #60]	; 0x3c
   1497c:	beq	14cc0 <close_stdout@@Base+0x2170>
   14980:	str	r2, [sp]
   14984:	mov	r3, r1
   14988:	ldr	r2, [pc, #864]	; 14cf0 <close_stdout@@Base+0x21a0>
   1498c:	mov	r1, #1
   14990:	str	ip, [sp, #4]
   14994:	add	r2, pc, r2
   14998:	bl	11520 <__fprintf_chk@plt>
   1499c:	ldr	r1, [pc, #848]	; 14cf4 <close_stdout@@Base+0x21a4>
   149a0:	mov	r2, #5
   149a4:	mov	r0, #0
   149a8:	add	r1, pc, r1
   149ac:	bl	11364 <dcgettext@plt>
   149b0:	ldr	r2, [pc, #832]	; 14cf8 <close_stdout@@Base+0x21a8>
   149b4:	movw	ip, #2013	; 0x7dd
   149b8:	mov	r1, #1
   149bc:	ldr	r2, [r7, r2]
   149c0:	str	ip, [sp]
   149c4:	mov	r3, r0
   149c8:	mov	r0, r5
   149cc:	bl	11520 <__fprintf_chk@plt>
   149d0:	ldr	r1, [pc, #804]	; 14cfc <close_stdout@@Base+0x21ac>
   149d4:	mov	r0, #0
   149d8:	mov	r2, #5
   149dc:	add	r1, pc, r1
   149e0:	bl	11364 <dcgettext@plt>
   149e4:	mov	r1, r5
   149e8:	bl	112ec <fputs_unlocked@plt>
   149ec:	cmp	r6, #9
   149f0:	addls	pc, pc, r6, lsl #2
   149f4:	b	14cdc <close_stdout@@Base+0x218c>
   149f8:	b	14a8c <close_stdout@@Base+0x1f3c>
   149fc:	b	14a90 <close_stdout@@Base+0x1f40>
   14a00:	b	14ac0 <close_stdout@@Base+0x1f70>
   14a04:	b	14af4 <close_stdout@@Base+0x1fa4>
   14a08:	b	14b30 <close_stdout@@Base+0x1fe0>
   14a0c:	b	14b70 <close_stdout@@Base+0x2020>
   14a10:	b	14bb8 <close_stdout@@Base+0x2068>
   14a14:	b	14c08 <close_stdout@@Base+0x20b8>
   14a18:	b	14c60 <close_stdout@@Base+0x2110>
   14a1c:	b	14a20 <close_stdout@@Base+0x1ed0>
   14a20:	ldr	r1, [pc, #728]	; 14d00 <close_stdout@@Base+0x21b0>
   14a24:	mov	r0, #0
   14a28:	add	r1, pc, r1
   14a2c:	mov	r2, #5
   14a30:	bl	11364 <dcgettext@plt>
   14a34:	ldm	r4, {r3, ip}
   14a38:	mov	r1, #1
   14a3c:	str	ip, [sp]
   14a40:	ldr	ip, [r4, #8]
   14a44:	str	ip, [sp, #4]
   14a48:	ldr	ip, [r4, #12]
   14a4c:	str	ip, [sp, #8]
   14a50:	ldr	ip, [r4, #16]
   14a54:	str	ip, [sp, #12]
   14a58:	ldr	ip, [r4, #20]
   14a5c:	str	ip, [sp, #16]
   14a60:	ldr	ip, [r4, #24]
   14a64:	str	ip, [sp, #20]
   14a68:	ldr	ip, [r4, #28]
   14a6c:	str	ip, [sp, #24]
   14a70:	ldr	ip, [r4, #32]
   14a74:	str	ip, [sp, #28]
   14a78:	mov	r2, r0
   14a7c:	mov	r0, r5
   14a80:	bl	11520 <__fprintf_chk@plt>
   14a84:	add	sp, sp, #36	; 0x24
   14a88:	pop	{r4, r5, r6, r7, pc}
   14a8c:	bl	115bc <abort@plt>
   14a90:	ldr	r1, [pc, #620]	; 14d04 <close_stdout@@Base+0x21b4>
   14a94:	mov	r2, #5
   14a98:	mov	r0, #0
   14a9c:	add	r1, pc, r1
   14aa0:	bl	11364 <dcgettext@plt>
   14aa4:	ldr	r3, [r4]
   14aa8:	mov	r1, #1
   14aac:	mov	r2, r0
   14ab0:	mov	r0, r5
   14ab4:	add	sp, sp, #36	; 0x24
   14ab8:	pop	{r4, r5, r6, r7, lr}
   14abc:	b	11520 <__fprintf_chk@plt>
   14ac0:	ldr	r1, [pc, #576]	; 14d08 <close_stdout@@Base+0x21b8>
   14ac4:	mov	r2, #5
   14ac8:	mov	r0, #0
   14acc:	add	r1, pc, r1
   14ad0:	bl	11364 <dcgettext@plt>
   14ad4:	ldm	r4, {r3, ip}
   14ad8:	mov	r1, #1
   14adc:	str	ip, [sp, #56]	; 0x38
   14ae0:	mov	r2, r0
   14ae4:	mov	r0, r5
   14ae8:	add	sp, sp, #36	; 0x24
   14aec:	pop	{r4, r5, r6, r7, lr}
   14af0:	b	11520 <__fprintf_chk@plt>
   14af4:	ldr	r1, [pc, #528]	; 14d0c <close_stdout@@Base+0x21bc>
   14af8:	mov	r2, #5
   14afc:	mov	r0, #0
   14b00:	add	r1, pc, r1
   14b04:	bl	11364 <dcgettext@plt>
   14b08:	ldm	r4, {r3, ip}
   14b0c:	mov	r1, #1
   14b10:	str	ip, [sp, #56]	; 0x38
   14b14:	ldr	ip, [r4, #8]
   14b18:	str	ip, [sp, #60]	; 0x3c
   14b1c:	mov	r2, r0
   14b20:	mov	r0, r5
   14b24:	add	sp, sp, #36	; 0x24
   14b28:	pop	{r4, r5, r6, r7, lr}
   14b2c:	b	11520 <__fprintf_chk@plt>
   14b30:	ldr	r1, [pc, #472]	; 14d10 <close_stdout@@Base+0x21c0>
   14b34:	mov	r2, #5
   14b38:	mov	r0, #0
   14b3c:	add	r1, pc, r1
   14b40:	bl	11364 <dcgettext@plt>
   14b44:	ldm	r4, {r3, ip}
   14b48:	mov	r1, #1
   14b4c:	str	ip, [sp]
   14b50:	ldr	ip, [r4, #8]
   14b54:	str	ip, [sp, #4]
   14b58:	ldr	ip, [r4, #12]
   14b5c:	str	ip, [sp, #8]
   14b60:	mov	r2, r0
   14b64:	mov	r0, r5
   14b68:	bl	11520 <__fprintf_chk@plt>
   14b6c:	b	14a84 <close_stdout@@Base+0x1f34>
   14b70:	ldr	r1, [pc, #412]	; 14d14 <close_stdout@@Base+0x21c4>
   14b74:	mov	r2, #5
   14b78:	mov	r0, #0
   14b7c:	add	r1, pc, r1
   14b80:	bl	11364 <dcgettext@plt>
   14b84:	ldm	r4, {r3, ip}
   14b88:	mov	r1, #1
   14b8c:	str	ip, [sp]
   14b90:	ldr	ip, [r4, #8]
   14b94:	str	ip, [sp, #4]
   14b98:	ldr	ip, [r4, #12]
   14b9c:	str	ip, [sp, #8]
   14ba0:	ldr	ip, [r4, #16]
   14ba4:	str	ip, [sp, #12]
   14ba8:	mov	r2, r0
   14bac:	mov	r0, r5
   14bb0:	bl	11520 <__fprintf_chk@plt>
   14bb4:	b	14a84 <close_stdout@@Base+0x1f34>
   14bb8:	ldr	r1, [pc, #344]	; 14d18 <close_stdout@@Base+0x21c8>
   14bbc:	mov	r2, #5
   14bc0:	mov	r0, #0
   14bc4:	add	r1, pc, r1
   14bc8:	bl	11364 <dcgettext@plt>
   14bcc:	ldm	r4, {r3, ip}
   14bd0:	mov	r1, #1
   14bd4:	str	ip, [sp]
   14bd8:	ldr	ip, [r4, #8]
   14bdc:	str	ip, [sp, #4]
   14be0:	ldr	ip, [r4, #12]
   14be4:	str	ip, [sp, #8]
   14be8:	ldr	ip, [r4, #16]
   14bec:	str	ip, [sp, #12]
   14bf0:	ldr	ip, [r4, #20]
   14bf4:	str	ip, [sp, #16]
   14bf8:	mov	r2, r0
   14bfc:	mov	r0, r5
   14c00:	bl	11520 <__fprintf_chk@plt>
   14c04:	b	14a84 <close_stdout@@Base+0x1f34>
   14c08:	ldr	r1, [pc, #268]	; 14d1c <close_stdout@@Base+0x21cc>
   14c0c:	mov	r2, #5
   14c10:	mov	r0, #0
   14c14:	add	r1, pc, r1
   14c18:	bl	11364 <dcgettext@plt>
   14c1c:	ldm	r4, {r3, ip}
   14c20:	mov	r1, #1
   14c24:	str	ip, [sp]
   14c28:	ldr	ip, [r4, #8]
   14c2c:	str	ip, [sp, #4]
   14c30:	ldr	ip, [r4, #12]
   14c34:	str	ip, [sp, #8]
   14c38:	ldr	ip, [r4, #16]
   14c3c:	str	ip, [sp, #12]
   14c40:	ldr	ip, [r4, #20]
   14c44:	str	ip, [sp, #16]
   14c48:	ldr	ip, [r4, #24]
   14c4c:	str	ip, [sp, #20]
   14c50:	mov	r2, r0
   14c54:	mov	r0, r5
   14c58:	bl	11520 <__fprintf_chk@plt>
   14c5c:	b	14a84 <close_stdout@@Base+0x1f34>
   14c60:	ldr	r1, [pc, #184]	; 14d20 <close_stdout@@Base+0x21d0>
   14c64:	mov	r2, #5
   14c68:	mov	r0, #0
   14c6c:	add	r1, pc, r1
   14c70:	bl	11364 <dcgettext@plt>
   14c74:	ldm	r4, {r3, ip}
   14c78:	mov	r1, #1
   14c7c:	str	ip, [sp]
   14c80:	ldr	ip, [r4, #8]
   14c84:	str	ip, [sp, #4]
   14c88:	ldr	ip, [r4, #12]
   14c8c:	str	ip, [sp, #8]
   14c90:	ldr	ip, [r4, #16]
   14c94:	str	ip, [sp, #12]
   14c98:	ldr	ip, [r4, #20]
   14c9c:	str	ip, [sp, #16]
   14ca0:	ldr	ip, [r4, #24]
   14ca4:	str	ip, [sp, #20]
   14ca8:	ldr	ip, [r4, #28]
   14cac:	str	ip, [sp, #24]
   14cb0:	mov	r2, r0
   14cb4:	mov	r0, r5
   14cb8:	bl	11520 <__fprintf_chk@plt>
   14cbc:	b	14a84 <close_stdout@@Base+0x1f34>
   14cc0:	str	r3, [sp]
   14cc4:	mov	r3, r2
   14cc8:	ldr	r2, [pc, #84]	; 14d24 <close_stdout@@Base+0x21d4>
   14ccc:	mov	r1, #1
   14cd0:	add	r2, pc, r2
   14cd4:	bl	11520 <__fprintf_chk@plt>
   14cd8:	b	1499c <close_stdout@@Base+0x1e4c>
   14cdc:	ldr	r1, [pc, #68]	; 14d28 <close_stdout@@Base+0x21d8>
   14ce0:	mov	r0, #0
   14ce4:	add	r1, pc, r1
   14ce8:	b	14a2c <close_stdout@@Base+0x1edc>
   14cec:	andeq	r2, r1, r8, lsl #13
   14cf0:	muleq	r0, ip, fp
   14cf4:	muleq	r0, ip, fp
   14cf8:	andeq	r0, r0, r4, asr r1
   14cfc:	andeq	r1, r0, ip, ror #22
   14d00:	strdeq	r1, [r0], -r8
   14d04:	andeq	r1, r0, r8, ror fp
   14d08:	andeq	r1, r0, r8, asr fp
   14d0c:	andeq	r1, r0, ip, lsr fp
   14d10:	andeq	r1, r0, ip, lsl fp
   14d14:	strdeq	r1, [r0], -ip
   14d18:	ldrdeq	r1, [r0], -r8
   14d1c:			; <UNDEFINED> instruction: 0x00001ab0
   14d20:	andeq	r1, r0, r4, lsl #21
   14d24:	andeq	r1, r0, ip, ror #16
   14d28:	andeq	r1, r0, r0, ror sl
   14d2c:	push	{r4, r5, lr}
   14d30:	sub	sp, sp, #12
   14d34:	ldr	r5, [sp, #24]
   14d38:	ldr	ip, [r5]
   14d3c:	cmp	ip, #0
   14d40:	beq	14d5c <close_stdout@@Base+0x220c>
   14d44:	mov	lr, r5
   14d48:	mov	ip, #0
   14d4c:	ldr	r4, [lr, #4]!
   14d50:	add	ip, ip, #1
   14d54:	cmp	r4, #0
   14d58:	bne	14d4c <close_stdout@@Base+0x21fc>
   14d5c:	stm	sp, {r5, ip}
   14d60:	bl	14958 <close_stdout@@Base+0x1e08>
   14d64:	add	sp, sp, #12
   14d68:	pop	{r4, r5, pc}
   14d6c:	push	{r4, r5, r6, r7, lr}
   14d70:	sub	sp, sp, #60	; 0x3c
   14d74:	ldr	r4, [pc, #100]	; 14de0 <close_stdout@@Base+0x2290>
   14d78:	mov	ip, #0
   14d7c:	ldr	r5, [pc, #96]	; 14de4 <close_stdout@@Base+0x2294>
   14d80:	mov	lr, ip
   14d84:	add	r4, pc, r4
   14d88:	ldr	r6, [sp, #80]	; 0x50
   14d8c:	ldr	r7, [r4, r5]
   14d90:	add	r5, sp, #12
   14d94:	ldr	r4, [r7]
   14d98:	str	r4, [sp, #52]	; 0x34
   14d9c:	ldr	r4, [r6, ip]
   14da0:	cmp	r4, #0
   14da4:	str	r4, [r5, ip]
   14da8:	beq	14dbc <close_stdout@@Base+0x226c>
   14dac:	add	lr, lr, #1
   14db0:	add	ip, ip, #4
   14db4:	cmp	lr, #10
   14db8:	bne	14d9c <close_stdout@@Base+0x224c>
   14dbc:	stm	sp, {r5, lr}
   14dc0:	bl	14958 <close_stdout@@Base+0x1e08>
   14dc4:	ldr	r2, [sp, #52]	; 0x34
   14dc8:	ldr	r3, [r7]
   14dcc:	cmp	r2, r3
   14dd0:	bne	14ddc <close_stdout@@Base+0x228c>
   14dd4:	add	sp, sp, #60	; 0x3c
   14dd8:	pop	{r4, r5, r6, r7, pc}
   14ddc:	bl	1137c <__stack_chk_fail@plt>
   14de0:	andeq	r2, r1, r4, ror r2
   14de4:	andeq	r0, r0, r4, lsl r1
   14de8:	push	{r3}		; (str r3, [sp, #-4]!)
   14dec:	push	{r4, lr}
   14df0:	sub	sp, sp, #20
   14df4:	ldr	lr, [pc, #72]	; 14e44 <close_stdout@@Base+0x22f4>
   14df8:	add	ip, sp, #32
   14dfc:	ldr	r4, [pc, #68]	; 14e48 <close_stdout@@Base+0x22f8>
   14e00:	add	lr, pc, lr
   14e04:	ldr	r3, [sp, #28]
   14e08:	ldr	r4, [lr, r4]
   14e0c:	str	ip, [sp]
   14e10:	str	ip, [sp, #8]
   14e14:	ldr	ip, [r4]
   14e18:	str	ip, [sp, #12]
   14e1c:	bl	14d6c <close_stdout@@Base+0x221c>
   14e20:	ldr	r2, [sp, #12]
   14e24:	ldr	r3, [r4]
   14e28:	cmp	r2, r3
   14e2c:	bne	14e40 <close_stdout@@Base+0x22f0>
   14e30:	add	sp, sp, #20
   14e34:	pop	{r4, lr}
   14e38:	add	sp, sp, #4
   14e3c:	bx	lr
   14e40:	bl	1137c <__stack_chk_fail@plt>
   14e44:	strdeq	r2, [r1], -r8
   14e48:	andeq	r0, r0, r4, lsl r1
   14e4c:	ldr	r1, [pc, #132]	; 14ed8 <close_stdout@@Base+0x2388>
   14e50:	mov	r2, #5
   14e54:	push	{r4, lr}
   14e58:	add	r1, pc, r1
   14e5c:	mov	r0, #0
   14e60:	ldr	r4, [pc, #116]	; 14edc <close_stdout@@Base+0x238c>
   14e64:	bl	11364 <dcgettext@plt>
   14e68:	ldr	r2, [pc, #112]	; 14ee0 <close_stdout@@Base+0x2390>
   14e6c:	add	r4, pc, r4
   14e70:	add	r2, pc, r2
   14e74:	mov	r1, r0
   14e78:	mov	r0, #1
   14e7c:	bl	11508 <__printf_chk@plt>
   14e80:	ldr	r1, [pc, #92]	; 14ee4 <close_stdout@@Base+0x2394>
   14e84:	mov	r2, #5
   14e88:	mov	r0, #0
   14e8c:	add	r1, pc, r1
   14e90:	bl	11364 <dcgettext@plt>
   14e94:	ldr	r2, [pc, #76]	; 14ee8 <close_stdout@@Base+0x2398>
   14e98:	ldr	r3, [pc, #76]	; 14eec <close_stdout@@Base+0x239c>
   14e9c:	add	r2, pc, r2
   14ea0:	add	r3, pc, r3
   14ea4:	mov	r1, r0
   14ea8:	mov	r0, #1
   14eac:	bl	11508 <__printf_chk@plt>
   14eb0:	ldr	r1, [pc, #56]	; 14ef0 <close_stdout@@Base+0x23a0>
   14eb4:	mov	r0, #0
   14eb8:	mov	r2, #5
   14ebc:	add	r1, pc, r1
   14ec0:	bl	11364 <dcgettext@plt>
   14ec4:	ldr	r3, [pc, #40]	; 14ef4 <close_stdout@@Base+0x23a4>
   14ec8:	ldr	r3, [r4, r3]
   14ecc:	pop	{r4, lr}
   14ed0:	ldr	r1, [r3]
   14ed4:	b	112ec <fputs_unlocked@plt>
   14ed8:	andeq	r1, r0, r8, lsr r9
   14edc:	andeq	r2, r1, ip, lsl #3
   14ee0:	andeq	r1, r0, r8, lsr r9
   14ee4:	andeq	r1, r0, r4, lsr r9
   14ee8:	andeq	r1, r0, r4, asr #7
   14eec:	ldrdeq	r1, [r0], -r0
   14ef0:	andeq	r1, r0, r8, lsl r9
   14ef4:	andeq	r0, r0, ip, lsr r1
   14ef8:	push	{r4, lr}
   14efc:	mov	r4, r0
   14f00:	bl	11448 <malloc@plt>
   14f04:	rsbs	r3, r0, #1
   14f08:	movcc	r3, #0
   14f0c:	cmp	r4, #0
   14f10:	moveq	r3, #0
   14f14:	cmp	r3, #0
   14f18:	popeq	{r4, pc}
   14f1c:	bl	1510c <close_stdout@@Base+0x25bc>
   14f20:	push	{r3, r4, r5, lr}
   14f24:	mov	r4, r0
   14f28:	mvn	r0, #0
   14f2c:	mov	r5, r1
   14f30:	bl	157ac <close_stdout@@Base+0x2c5c>
   14f34:	cmp	r0, r4
   14f38:	bcc	14f48 <close_stdout@@Base+0x23f8>
   14f3c:	mul	r0, r4, r5
   14f40:	pop	{r3, r4, r5, lr}
   14f44:	b	14ef8 <close_stdout@@Base+0x23a8>
   14f48:	bl	1510c <close_stdout@@Base+0x25bc>
   14f4c:	b	14ef8 <close_stdout@@Base+0x23a8>
   14f50:	rsbs	r3, r1, #1
   14f54:	push	{r4, lr}
   14f58:	movcc	r3, #0
   14f5c:	cmp	r0, #0
   14f60:	mov	r4, r1
   14f64:	moveq	r3, #0
   14f68:	cmp	r3, #0
   14f6c:	bne	14f90 <close_stdout@@Base+0x2440>
   14f70:	bl	11388 <realloc@plt>
   14f74:	rsbs	r3, r0, #1
   14f78:	movcc	r3, #0
   14f7c:	cmp	r4, #0
   14f80:	moveq	r3, #0
   14f84:	cmp	r3, #0
   14f88:	popeq	{r4, pc}
   14f8c:	bl	1510c <close_stdout@@Base+0x25bc>
   14f90:	bl	11328 <free@plt>
   14f94:	mov	r0, #0
   14f98:	pop	{r4, pc}
   14f9c:	push	{r4, r5, r6, lr}
   14fa0:	mov	r5, r1
   14fa4:	mov	r6, r0
   14fa8:	mov	r1, r2
   14fac:	mvn	r0, #0
   14fb0:	mov	r4, r2
   14fb4:	bl	157ac <close_stdout@@Base+0x2c5c>
   14fb8:	cmp	r0, r5
   14fbc:	bcc	14fd0 <close_stdout@@Base+0x2480>
   14fc0:	mov	r0, r6
   14fc4:	mul	r1, r5, r4
   14fc8:	pop	{r4, r5, r6, lr}
   14fcc:	b	14f50 <close_stdout@@Base+0x2400>
   14fd0:	bl	1510c <close_stdout@@Base+0x25bc>
   14fd4:	push	{r3, r4, r5, r6, r7, lr}
   14fd8:	subs	r7, r0, #0
   14fdc:	mov	r5, r1
   14fe0:	mov	r6, r2
   14fe4:	ldr	r4, [r1]
   14fe8:	beq	15020 <close_stdout@@Base+0x24d0>
   14fec:	movw	r0, #43690	; 0xaaaa
   14ff0:	mov	r1, r2
   14ff4:	bfi	r0, r0, #16, #16
   14ff8:	bl	157ac <close_stdout@@Base+0x2c5c>
   14ffc:	cmp	r4, r0
   15000:	addcc	r3, r4, #1
   15004:	addcc	r4, r4, r3, lsr #1
   15008:	bcs	15044 <close_stdout@@Base+0x24f4>
   1500c:	str	r4, [r5]
   15010:	mov	r0, r7
   15014:	mul	r1, r6, r4
   15018:	pop	{r3, r4, r5, r6, r7, lr}
   1501c:	b	14f50 <close_stdout@@Base+0x2400>
   15020:	cmp	r4, #0
   15024:	bne	1500c <close_stdout@@Base+0x24bc>
   15028:	mov	r0, #64	; 0x40
   1502c:	mov	r1, r2
   15030:	bl	157ac <close_stdout@@Base+0x2c5c>
   15034:	cmp	r0, #0
   15038:	movne	r4, r0
   1503c:	addeq	r4, r0, #1
   15040:	b	1500c <close_stdout@@Base+0x24bc>
   15044:	bl	1510c <close_stdout@@Base+0x25bc>
   15048:	cmp	r0, #0
   1504c:	push	{r3, lr}
   15050:	ldr	r3, [r1]
   15054:	beq	15080 <close_stdout@@Base+0x2530>
   15058:	movw	r2, #43689	; 0xaaa9
   1505c:	movt	r2, #43690	; 0xaaaa
   15060:	cmp	r3, r2
   15064:	addls	r2, r3, #1
   15068:	addls	r3, r3, r2, lsr #1
   1506c:	bhi	15098 <close_stdout@@Base+0x2548>
   15070:	str	r3, [r1]
   15074:	mov	r1, r3
   15078:	pop	{r3, lr}
   1507c:	b	14f50 <close_stdout@@Base+0x2400>
   15080:	cmp	r3, #0
   15084:	moveq	r3, #64	; 0x40
   15088:	str	r3, [r1]
   1508c:	mov	r1, r3
   15090:	pop	{r3, lr}
   15094:	b	14f50 <close_stdout@@Base+0x2400>
   15098:	bl	1510c <close_stdout@@Base+0x25bc>
   1509c:	push	{r4, lr}
   150a0:	mov	r4, r0
   150a4:	bl	14ef8 <close_stdout@@Base+0x23a8>
   150a8:	mov	r2, r4
   150ac:	mov	r1, #0
   150b0:	pop	{r4, lr}
   150b4:	b	114f0 <memset@plt>
   150b8:	push	{r3, lr}
   150bc:	bl	112e0 <calloc@plt>
   150c0:	cmp	r0, #0
   150c4:	popne	{r3, pc}
   150c8:	bl	1510c <close_stdout@@Base+0x25bc>
   150cc:	push	{r3, r4, r5, lr}
   150d0:	mov	r4, r1
   150d4:	mov	r5, r0
   150d8:	mov	r0, r1
   150dc:	bl	14ef8 <close_stdout@@Base+0x23a8>
   150e0:	mov	r1, r5
   150e4:	mov	r2, r4
   150e8:	pop	{r3, r4, r5, lr}
   150ec:	b	11340 <memcpy@plt>
   150f0:	push	{r4, lr}
   150f4:	mov	r4, r0
   150f8:	bl	114a8 <strlen@plt>
   150fc:	add	r1, r0, #1
   15100:	mov	r0, r4
   15104:	pop	{r4, lr}
   15108:	b	150cc <close_stdout@@Base+0x257c>
   1510c:	ldr	r3, [pc, #64]	; 15154 <close_stdout@@Base+0x2604>
   15110:	mov	r2, #5
   15114:	ldr	ip, [pc, #60]	; 15158 <close_stdout@@Base+0x2608>
   15118:	mov	r0, #0
   1511c:	add	r3, pc, r3
   15120:	ldr	r1, [pc, #52]	; 1515c <close_stdout@@Base+0x260c>
   15124:	push	{r4, lr}
   15128:	add	r1, pc, r1
   1512c:	ldr	r3, [r3, ip]
   15130:	ldr	r4, [r3]
   15134:	bl	11364 <dcgettext@plt>
   15138:	ldr	r2, [pc, #32]	; 15160 <close_stdout@@Base+0x2610>
   1513c:	mov	r1, #0
   15140:	add	r2, pc, r2
   15144:	mov	r3, r0
   15148:	mov	r0, r4
   1514c:	bl	1140c <error@plt>
   15150:	bl	115bc <abort@plt>
   15154:	ldrdeq	r1, [r1], -ip
   15158:	andeq	r0, r0, r4, asr #2
   1515c:	andeq	r1, r0, ip, lsl r7
   15160:	andeq	r1, r0, r8, lsl r3
   15164:	push	{r4, r5, r6, lr}
   15168:	mov	r4, r0
   1516c:	bl	113f4 <__fpending@plt>
   15170:	mov	r6, r0
   15174:	mov	r0, r4
   15178:	ldr	r4, [r4]
   1517c:	bl	15604 <close_stdout@@Base+0x2ab4>
   15180:	and	r4, r4, #32
   15184:	adds	r5, r0, #0
   15188:	movne	r5, #1
   1518c:	cmp	r4, #0
   15190:	bne	151b0 <close_stdout@@Base+0x2660>
   15194:	cmp	r5, #0
   15198:	beq	151a8 <close_stdout@@Base+0x2658>
   1519c:	cmp	r6, #0
   151a0:	beq	151cc <close_stdout@@Base+0x267c>
   151a4:	mvn	r4, #0
   151a8:	mov	r0, r4
   151ac:	pop	{r4, r5, r6, pc}
   151b0:	cmp	r5, #0
   151b4:	bne	151a4 <close_stdout@@Base+0x2654>
   151b8:	bl	114d8 <__errno_location@plt>
   151bc:	mvn	r4, #0
   151c0:	str	r5, [r0]
   151c4:	mov	r0, r4
   151c8:	pop	{r4, r5, r6, pc}
   151cc:	bl	114d8 <__errno_location@plt>
   151d0:	ldr	r4, [r0]
   151d4:	subs	r4, r4, #9
   151d8:	mvnne	r4, #0
   151dc:	mov	r0, r4
   151e0:	pop	{r4, r5, r6, pc}
   151e4:	ldr	r3, [pc, #984]	; 155c4 <close_stdout@@Base+0x2a74>
   151e8:	mov	r0, #14
   151ec:	ldr	r2, [pc, #980]	; 155c8 <close_stdout@@Base+0x2a78>
   151f0:	add	r3, pc, r3
   151f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151f8:	sub	sp, sp, #132	; 0x84
   151fc:	ldr	r6, [r3, r2]
   15200:	ldr	r3, [r6]
   15204:	str	r3, [sp, #124]	; 0x7c
   15208:	bl	11580 <nl_langinfo@plt>
   1520c:	subs	r5, r0, #0
   15210:	beq	152c4 <close_stdout@@Base+0x2774>
   15214:	ldr	r3, [pc, #944]	; 155cc <close_stdout@@Base+0x2a7c>
   15218:	ldr	r4, [pc, r3]
   1521c:	cmp	r4, #0
   15220:	beq	152d0 <close_stdout@@Base+0x2780>
   15224:	ldrb	r7, [r4]
   15228:	cmp	r7, #0
   1522c:	bne	15260 <close_stdout@@Base+0x2710>
   15230:	b	15298 <close_stdout@@Base+0x2748>
   15234:	mov	r0, r4
   15238:	bl	114a8 <strlen@plt>
   1523c:	add	r0, r0, #1
   15240:	add	r7, r4, r0
   15244:	mov	r0, r7
   15248:	bl	114a8 <strlen@plt>
   1524c:	add	r0, r0, #1
   15250:	add	r4, r7, r0
   15254:	ldrb	r7, [r7, r0]
   15258:	cmp	r7, #0
   1525c:	beq	15298 <close_stdout@@Base+0x2748>
   15260:	mov	r0, r5
   15264:	mov	r1, r4
   15268:	bl	11304 <strcmp@plt>
   1526c:	cmp	r0, #0
   15270:	beq	15288 <close_stdout@@Base+0x2738>
   15274:	cmp	r7, #42	; 0x2a
   15278:	bne	15234 <close_stdout@@Base+0x26e4>
   1527c:	ldrb	r3, [r4, #1]
   15280:	cmp	r3, #0
   15284:	bne	15234 <close_stdout@@Base+0x26e4>
   15288:	mov	r0, r4
   1528c:	bl	114a8 <strlen@plt>
   15290:	add	r0, r0, #1
   15294:	add	r5, r4, r0
   15298:	ldrb	r3, [r5]
   1529c:	cmp	r3, #0
   152a0:	ldreq	r5, [pc, #808]	; 155d0 <close_stdout@@Base+0x2a80>
   152a4:	addeq	r5, pc, r5
   152a8:	ldr	r2, [sp, #124]	; 0x7c
   152ac:	mov	r0, r5
   152b0:	ldr	r3, [r6]
   152b4:	cmp	r2, r3
   152b8:	bne	15598 <close_stdout@@Base+0x2a48>
   152bc:	add	sp, sp, #132	; 0x84
   152c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152c4:	ldr	r5, [pc, #776]	; 155d4 <close_stdout@@Base+0x2a84>
   152c8:	add	r5, pc, r5
   152cc:	b	15214 <close_stdout@@Base+0x26c4>
   152d0:	ldr	r0, [pc, #768]	; 155d8 <close_stdout@@Base+0x2a88>
   152d4:	add	r0, pc, r0
   152d8:	bl	11430 <getenv@plt>
   152dc:	subs	r8, r0, #0
   152e0:	beq	15570 <close_stdout@@Base+0x2a20>
   152e4:	ldrb	r3, [r8]
   152e8:	cmp	r3, #0
   152ec:	beq	15504 <close_stdout@@Base+0x29b4>
   152f0:	bl	114a8 <strlen@plt>
   152f4:	subs	sl, r0, #0
   152f8:	subne	r3, sl, #1
   152fc:	bne	15514 <close_stdout@@Base+0x29c4>
   15300:	mov	r9, #0
   15304:	mov	fp, r9
   15308:	add	r9, sl, r9
   1530c:	add	r0, r9, #14
   15310:	bl	11448 <malloc@plt>
   15314:	subs	r7, r0, #0
   15318:	beq	15564 <close_stdout@@Base+0x2a14>
   1531c:	mov	r1, r8
   15320:	mov	r2, sl
   15324:	bl	11340 <memcpy@plt>
   15328:	cmp	fp, #0
   1532c:	add	ip, r7, r9
   15330:	movne	r3, #47	; 0x2f
   15334:	strbne	r3, [r7, sl]
   15338:	ldr	r3, [pc, #668]	; 155dc <close_stdout@@Base+0x2a8c>
   1533c:	add	r3, pc, r3
   15340:	ldm	r3!, {r0, r1, r2}
   15344:	ldrh	r3, [r3]
   15348:	str	r0, [r7, r9]
   1534c:	mov	r0, r7
   15350:	str	r1, [ip, #4]
   15354:	mov	r1, #32768	; 0x8000
   15358:	strh	r3, [ip, #12]
   1535c:	str	r2, [ip, #8]
   15360:	bl	11418 <open64@plt>
   15364:	subs	r8, r0, #0
   15368:	blt	1552c <close_stdout@@Base+0x29dc>
   1536c:	ldr	r1, [pc, #620]	; 155e0 <close_stdout@@Base+0x2a90>
   15370:	add	r1, pc, r1
   15374:	bl	112d4 <fdopen@plt>
   15378:	subs	fp, r0, #0
   1537c:	beq	15584 <close_stdout@@Base+0x2a34>
   15380:	ldr	r0, [pc, #604]	; 155e4 <close_stdout@@Base+0x2a94>
   15384:	add	sl, sp, #20
   15388:	add	r9, sp, #72	; 0x48
   1538c:	mov	r8, #0
   15390:	add	r0, pc, r0
   15394:	str	r0, [sp, #12]
   15398:	ldr	r3, [fp, #4]
   1539c:	ldr	r2, [fp, #8]
   153a0:	cmp	r3, r2
   153a4:	bcs	15490 <close_stdout@@Base+0x2940>
   153a8:	add	r2, r3, #1
   153ac:	str	r2, [fp, #4]
   153b0:	ldrb	r0, [r3]
   153b4:	cmp	r0, #32
   153b8:	beq	15398 <close_stdout@@Base+0x2848>
   153bc:	sub	r3, r0, #9
   153c0:	cmp	r3, #1
   153c4:	bls	15398 <close_stdout@@Base+0x2848>
   153c8:	cmp	r0, #35	; 0x23
   153cc:	beq	154a4 <close_stdout@@Base+0x2954>
   153d0:	mov	r1, fp
   153d4:	bl	114c0 <ungetc@plt>
   153d8:	mov	r0, fp
   153dc:	ldr	r1, [sp, #12]
   153e0:	mov	r2, sl
   153e4:	mov	r3, r9
   153e8:	bl	114fc <fscanf@plt>
   153ec:	cmp	r0, #1
   153f0:	ble	154d4 <close_stdout@@Base+0x2984>
   153f4:	mov	r0, sl
   153f8:	bl	114a8 <strlen@plt>
   153fc:	str	r0, [sp, #8]
   15400:	mov	r0, r9
   15404:	bl	114a8 <strlen@plt>
   15408:	cmp	r8, #0
   1540c:	mov	r2, r0
   15410:	bne	15538 <close_stdout@@Base+0x29e8>
   15414:	ldr	r3, [sp, #8]
   15418:	str	r2, [sp]
   1541c:	add	r8, r0, r3
   15420:	add	r0, r8, #3
   15424:	add	r8, r8, #2
   15428:	bl	11448 <malloc@plt>
   1542c:	ldr	r2, [sp]
   15430:	mov	r3, r0
   15434:	cmp	r3, #0
   15438:	beq	1559c <close_stdout@@Base+0x2a4c>
   1543c:	ldr	r0, [sp, #8]
   15440:	movw	r1, #65534	; 0xfffe
   15444:	movt	r1, #65535	; 0xffff
   15448:	rsb	r2, r2, r8
   1544c:	rsb	r1, r0, r1
   15450:	stm	sp, {r2, r3}
   15454:	add	r0, r1, r2
   15458:	mov	r1, sl
   1545c:	add	r0, r3, r0
   15460:	mov	r4, r3
   15464:	bl	113e8 <strcpy@plt>
   15468:	ldr	r2, [sp]
   1546c:	ldr	r3, [sp, #4]
   15470:	mov	r1, r9
   15474:	sub	r0, r2, #1
   15478:	add	r0, r3, r0
   1547c:	bl	113e8 <strcpy@plt>
   15480:	ldr	r3, [fp, #4]
   15484:	ldr	r2, [fp, #8]
   15488:	cmp	r3, r2
   1548c:	bcc	153a8 <close_stdout@@Base+0x2858>
   15490:	mov	r0, fp
   15494:	bl	11550 <__uflow@plt>
   15498:	cmn	r0, #1
   1549c:	beq	154d4 <close_stdout@@Base+0x2984>
   154a0:	b	153b4 <close_stdout@@Base+0x2864>
   154a4:	ldr	r3, [fp, #4]
   154a8:	ldr	r2, [fp, #8]
   154ac:	cmp	r3, r2
   154b0:	bcs	155b8 <close_stdout@@Base+0x2a68>
   154b4:	add	r2, r3, #1
   154b8:	str	r2, [fp, #4]
   154bc:	ldrb	r0, [r3]
   154c0:	cmp	r0, #10
   154c4:	cmnne	r0, #1
   154c8:	bne	154a4 <close_stdout@@Base+0x2954>
   154cc:	cmn	r0, #1
   154d0:	bne	15398 <close_stdout@@Base+0x2848>
   154d4:	mov	r0, fp
   154d8:	bl	15604 <close_stdout@@Base+0x2ab4>
   154dc:	cmp	r8, #0
   154e0:	beq	1552c <close_stdout@@Base+0x29dc>
   154e4:	mov	r3, #0
   154e8:	strb	r3, [r4, r8]
   154ec:	mov	r0, r7
   154f0:	bl	11328 <free@plt>
   154f4:	ldr	r3, [pc, #236]	; 155e8 <close_stdout@@Base+0x2a98>
   154f8:	add	r3, pc, r3
   154fc:	str	r4, [r3]
   15500:	b	15224 <close_stdout@@Base+0x26d4>
   15504:	ldr	r8, [pc, #224]	; 155ec <close_stdout@@Base+0x2a9c>
   15508:	mov	r3, #7
   1550c:	mov	sl, #8
   15510:	add	r8, pc, r8
   15514:	ldrb	r3, [r8, r3]
   15518:	cmp	r3, #47	; 0x2f
   1551c:	movne	r9, #1
   15520:	movne	fp, r9
   15524:	bne	15308 <close_stdout@@Base+0x27b8>
   15528:	b	15300 <close_stdout@@Base+0x27b0>
   1552c:	ldr	r4, [pc, #188]	; 155f0 <close_stdout@@Base+0x2aa0>
   15530:	add	r4, pc, r4
   15534:	b	154ec <close_stdout@@Base+0x299c>
   15538:	ldr	r0, [sp, #8]
   1553c:	str	r2, [sp]
   15540:	add	r3, r0, r2
   15544:	mov	r0, r4
   15548:	add	r8, r3, r8
   1554c:	add	r1, r8, #3
   15550:	add	r8, r8, #2
   15554:	bl	11388 <realloc@plt>
   15558:	ldr	r2, [sp]
   1555c:	mov	r3, r0
   15560:	b	15434 <close_stdout@@Base+0x28e4>
   15564:	ldr	r4, [pc, #136]	; 155f4 <close_stdout@@Base+0x2aa4>
   15568:	add	r4, pc, r4
   1556c:	b	154f4 <close_stdout@@Base+0x29a4>
   15570:	ldr	r8, [pc, #128]	; 155f8 <close_stdout@@Base+0x2aa8>
   15574:	mov	r3, #7
   15578:	mov	sl, #8
   1557c:	add	r8, pc, r8
   15580:	b	15514 <close_stdout@@Base+0x29c4>
   15584:	ldr	r4, [pc, #112]	; 155fc <close_stdout@@Base+0x2aac>
   15588:	mov	r0, r8
   1558c:	add	r4, pc, r4
   15590:	bl	115c8 <close@plt>
   15594:	b	154ec <close_stdout@@Base+0x299c>
   15598:	bl	1137c <__stack_chk_fail@plt>
   1559c:	mov	r0, r4
   155a0:	ldr	r4, [pc, #88]	; 15600 <close_stdout@@Base+0x2ab0>
   155a4:	bl	11328 <free@plt>
   155a8:	mov	r0, fp
   155ac:	add	r4, pc, r4
   155b0:	bl	15604 <close_stdout@@Base+0x2ab4>
   155b4:	b	154ec <close_stdout@@Base+0x299c>
   155b8:	mov	r0, fp
   155bc:	bl	11550 <__uflow@plt>
   155c0:	b	154c0 <close_stdout@@Base+0x2970>
   155c4:	andeq	r1, r1, r8, lsl #28
   155c8:	andeq	r0, r0, r4, lsl r1
   155cc:	andeq	r2, r1, ip, asr #1
   155d0:	andeq	r1, r0, r0, asr #11
   155d4:	andeq	r1, r0, ip, asr r0
   155d8:	muleq	r0, r8, r5
   155dc:	andeq	r1, r0, r0, asr #10
   155e0:	andeq	r1, r0, ip, lsl r5
   155e4:	andeq	r1, r0, r0, lsl #10
   155e8:	andeq	r1, r1, ip, ror #27
   155ec:	andeq	r1, r0, r8, asr #6
   155f0:	strdeq	r0, [r0], -r4
   155f4:			; <UNDEFINED> instruction: 0x00000dbc
   155f8:	ldrdeq	r1, [r0], -ip
   155fc:	muleq	r0, r8, sp
   15600:	andeq	r0, r0, r8, ror sp
   15604:	push	{r4, r5, r6, lr}
   15608:	sub	sp, sp, #8
   1560c:	mov	r4, r0
   15610:	bl	11514 <fileno@plt>
   15614:	cmp	r0, #0
   15618:	mov	r0, r4
   1561c:	blt	15698 <close_stdout@@Base+0x2b48>
   15620:	bl	11460 <__freading@plt>
   15624:	cmp	r0, #0
   15628:	bne	15664 <close_stdout@@Base+0x2b14>
   1562c:	mov	r0, r4
   15630:	bl	156a4 <close_stdout@@Base+0x2b54>
   15634:	cmp	r0, #0
   15638:	beq	15694 <close_stdout@@Base+0x2b44>
   1563c:	bl	114d8 <__errno_location@plt>
   15640:	ldr	r6, [r0]
   15644:	mov	r5, r0
   15648:	mov	r0, r4
   1564c:	bl	1152c <fclose@plt>
   15650:	cmp	r6, #0
   15654:	mvnne	r0, #0
   15658:	strne	r6, [r5]
   1565c:	add	sp, sp, #8
   15660:	pop	{r4, r5, r6, pc}
   15664:	mov	r0, r4
   15668:	bl	11514 <fileno@plt>
   1566c:	mov	r1, #1
   15670:	mov	r2, #0
   15674:	mov	r3, #0
   15678:	str	r1, [sp]
   1567c:	bl	113c4 <lseek64@plt>
   15680:	mvn	r2, #0
   15684:	mvn	r3, #0
   15688:	cmp	r1, r3
   1568c:	cmpeq	r0, r2
   15690:	bne	1562c <close_stdout@@Base+0x2adc>
   15694:	mov	r0, r4
   15698:	add	sp, sp, #8
   1569c:	pop	{r4, r5, r6, lr}
   156a0:	b	1152c <fclose@plt>
   156a4:	push	{r4, lr}
   156a8:	subs	r4, r0, #0
   156ac:	sub	sp, sp, #8
   156b0:	beq	156c0 <close_stdout@@Base+0x2b70>
   156b4:	bl	11460 <__freading@plt>
   156b8:	cmp	r0, #0
   156bc:	bne	156d0 <close_stdout@@Base+0x2b80>
   156c0:	mov	r0, r4
   156c4:	add	sp, sp, #8
   156c8:	pop	{r4, lr}
   156cc:	b	1131c <fflush@plt>
   156d0:	ldr	r3, [r4]
   156d4:	tst	r3, #256	; 0x100
   156d8:	beq	156c0 <close_stdout@@Base+0x2b70>
   156dc:	mov	r3, #1
   156e0:	mov	r0, r4
   156e4:	str	r3, [sp]
   156e8:	mov	r2, #0
   156ec:	mov	r3, #0
   156f0:	bl	15704 <close_stdout@@Base+0x2bb4>
   156f4:	mov	r0, r4
   156f8:	add	sp, sp, #8
   156fc:	pop	{r4, lr}
   15700:	b	1131c <fflush@plt>
   15704:	push	{r4, r5, r6, r7, lr}
   15708:	sub	sp, sp, #20
   1570c:	ldmib	r0, {r1, ip}
   15710:	mov	r6, r0
   15714:	ldr	r4, [sp, #40]	; 0x28
   15718:	cmp	ip, r1
   1571c:	beq	15734 <close_stdout@@Base+0x2be4>
   15720:	str	r4, [sp, #40]	; 0x28
   15724:	mov	r0, r6
   15728:	add	sp, sp, #20
   1572c:	pop	{r4, r5, r6, r7, lr}
   15730:	b	11538 <fseeko64@plt>
   15734:	ldr	ip, [r0, #20]
   15738:	ldr	r1, [r0, #16]
   1573c:	cmp	ip, r1
   15740:	bne	15720 <close_stdout@@Base+0x2bd0>
   15744:	ldr	r7, [r0, #36]	; 0x24
   15748:	cmp	r7, #0
   1574c:	bne	15720 <close_stdout@@Base+0x2bd0>
   15750:	str	r2, [sp, #12]
   15754:	mvn	r5, #0
   15758:	str	r3, [sp, #8]
   1575c:	bl	11514 <fileno@plt>
   15760:	str	r4, [sp]
   15764:	mvn	r4, #0
   15768:	ldr	r2, [sp, #12]
   1576c:	ldr	r3, [sp, #8]
   15770:	bl	113c4 <lseek64@plt>
   15774:	mov	r2, r0
   15778:	mov	r3, r1
   1577c:	cmp	r3, r5
   15780:	cmpeq	r2, r4
   15784:	beq	157a4 <close_stdout@@Base+0x2c54>
   15788:	ldr	r1, [r6]
   1578c:	mov	r0, r7
   15790:	strd	r2, [r6, #80]	; 0x50
   15794:	bic	r3, r1, #16
   15798:	str	r3, [r6]
   1579c:	add	sp, sp, #20
   157a0:	pop	{r4, r5, r6, r7, pc}
   157a4:	mvn	r0, #0
   157a8:	b	1579c <close_stdout@@Base+0x2c4c>
   157ac:	subs	r2, r1, #1
   157b0:	bxeq	lr
   157b4:	bcc	1598c <close_stdout@@Base+0x2e3c>
   157b8:	cmp	r0, r1
   157bc:	bls	15970 <close_stdout@@Base+0x2e20>
   157c0:	tst	r1, r2
   157c4:	beq	1597c <close_stdout@@Base+0x2e2c>
   157c8:	clz	r3, r0
   157cc:	clz	r2, r1
   157d0:	sub	r3, r2, r3
   157d4:	rsbs	r3, r3, #31
   157d8:	addne	r3, r3, r3, lsl #1
   157dc:	mov	r2, #0
   157e0:	addne	pc, pc, r3, lsl #2
   157e4:	nop	{0}
   157e8:	cmp	r0, r1, lsl #31
   157ec:	adc	r2, r2, r2
   157f0:	subcs	r0, r0, r1, lsl #31
   157f4:	cmp	r0, r1, lsl #30
   157f8:	adc	r2, r2, r2
   157fc:	subcs	r0, r0, r1, lsl #30
   15800:	cmp	r0, r1, lsl #29
   15804:	adc	r2, r2, r2
   15808:	subcs	r0, r0, r1, lsl #29
   1580c:	cmp	r0, r1, lsl #28
   15810:	adc	r2, r2, r2
   15814:	subcs	r0, r0, r1, lsl #28
   15818:	cmp	r0, r1, lsl #27
   1581c:	adc	r2, r2, r2
   15820:	subcs	r0, r0, r1, lsl #27
   15824:	cmp	r0, r1, lsl #26
   15828:	adc	r2, r2, r2
   1582c:	subcs	r0, r0, r1, lsl #26
   15830:	cmp	r0, r1, lsl #25
   15834:	adc	r2, r2, r2
   15838:	subcs	r0, r0, r1, lsl #25
   1583c:	cmp	r0, r1, lsl #24
   15840:	adc	r2, r2, r2
   15844:	subcs	r0, r0, r1, lsl #24
   15848:	cmp	r0, r1, lsl #23
   1584c:	adc	r2, r2, r2
   15850:	subcs	r0, r0, r1, lsl #23
   15854:	cmp	r0, r1, lsl #22
   15858:	adc	r2, r2, r2
   1585c:	subcs	r0, r0, r1, lsl #22
   15860:	cmp	r0, r1, lsl #21
   15864:	adc	r2, r2, r2
   15868:	subcs	r0, r0, r1, lsl #21
   1586c:	cmp	r0, r1, lsl #20
   15870:	adc	r2, r2, r2
   15874:	subcs	r0, r0, r1, lsl #20
   15878:	cmp	r0, r1, lsl #19
   1587c:	adc	r2, r2, r2
   15880:	subcs	r0, r0, r1, lsl #19
   15884:	cmp	r0, r1, lsl #18
   15888:	adc	r2, r2, r2
   1588c:	subcs	r0, r0, r1, lsl #18
   15890:	cmp	r0, r1, lsl #17
   15894:	adc	r2, r2, r2
   15898:	subcs	r0, r0, r1, lsl #17
   1589c:	cmp	r0, r1, lsl #16
   158a0:	adc	r2, r2, r2
   158a4:	subcs	r0, r0, r1, lsl #16
   158a8:	cmp	r0, r1, lsl #15
   158ac:	adc	r2, r2, r2
   158b0:	subcs	r0, r0, r1, lsl #15
   158b4:	cmp	r0, r1, lsl #14
   158b8:	adc	r2, r2, r2
   158bc:	subcs	r0, r0, r1, lsl #14
   158c0:	cmp	r0, r1, lsl #13
   158c4:	adc	r2, r2, r2
   158c8:	subcs	r0, r0, r1, lsl #13
   158cc:	cmp	r0, r1, lsl #12
   158d0:	adc	r2, r2, r2
   158d4:	subcs	r0, r0, r1, lsl #12
   158d8:	cmp	r0, r1, lsl #11
   158dc:	adc	r2, r2, r2
   158e0:	subcs	r0, r0, r1, lsl #11
   158e4:	cmp	r0, r1, lsl #10
   158e8:	adc	r2, r2, r2
   158ec:	subcs	r0, r0, r1, lsl #10
   158f0:	cmp	r0, r1, lsl #9
   158f4:	adc	r2, r2, r2
   158f8:	subcs	r0, r0, r1, lsl #9
   158fc:	cmp	r0, r1, lsl #8
   15900:	adc	r2, r2, r2
   15904:	subcs	r0, r0, r1, lsl #8
   15908:	cmp	r0, r1, lsl #7
   1590c:	adc	r2, r2, r2
   15910:	subcs	r0, r0, r1, lsl #7
   15914:	cmp	r0, r1, lsl #6
   15918:	adc	r2, r2, r2
   1591c:	subcs	r0, r0, r1, lsl #6
   15920:	cmp	r0, r1, lsl #5
   15924:	adc	r2, r2, r2
   15928:	subcs	r0, r0, r1, lsl #5
   1592c:	cmp	r0, r1, lsl #4
   15930:	adc	r2, r2, r2
   15934:	subcs	r0, r0, r1, lsl #4
   15938:	cmp	r0, r1, lsl #3
   1593c:	adc	r2, r2, r2
   15940:	subcs	r0, r0, r1, lsl #3
   15944:	cmp	r0, r1, lsl #2
   15948:	adc	r2, r2, r2
   1594c:	subcs	r0, r0, r1, lsl #2
   15950:	cmp	r0, r1, lsl #1
   15954:	adc	r2, r2, r2
   15958:	subcs	r0, r0, r1, lsl #1
   1595c:	cmp	r0, r1
   15960:	adc	r2, r2, r2
   15964:	subcs	r0, r0, r1
   15968:	mov	r0, r2
   1596c:	bx	lr
   15970:	moveq	r0, #1
   15974:	movne	r0, #0
   15978:	bx	lr
   1597c:	clz	r2, r1
   15980:	rsb	r2, r2, #31
   15984:	lsr	r0, r0, r2
   15988:	bx	lr
   1598c:	cmp	r0, #0
   15990:	mvnne	r0, #0
   15994:	b	159b8 <close_stdout@@Base+0x2e68>
   15998:	cmp	r1, #0
   1599c:	beq	1598c <close_stdout@@Base+0x2e3c>
   159a0:	push	{r0, r1, lr}
   159a4:	bl	157ac <close_stdout@@Base+0x2c5c>
   159a8:	pop	{r1, r2, lr}
   159ac:	mul	r3, r2, r0
   159b0:	sub	r1, r1, r3
   159b4:	bx	lr
   159b8:	push	{r1, lr}
   159bc:	mov	r0, #8
   159c0:	bl	112f8 <raise@plt>
   159c4:	pop	{r1, pc}
   159c8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   159cc:	mov	r7, r0
   159d0:	ldr	r6, [pc, #76]	; 15a24 <close_stdout@@Base+0x2ed4>
   159d4:	mov	r8, r1
   159d8:	ldr	r5, [pc, #72]	; 15a28 <close_stdout@@Base+0x2ed8>
   159dc:	mov	r9, r2
   159e0:	add	r6, pc, r6
   159e4:	bl	112b4 <_init@@Base>
   159e8:	add	r5, pc, r5
   159ec:	rsb	r6, r5, r6
   159f0:	asrs	r6, r6, #2
   159f4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   159f8:	sub	r5, r5, #4
   159fc:	mov	r4, #0
   15a00:	add	r4, r4, #1
   15a04:	ldr	r3, [r5, #4]!
   15a08:	mov	r0, r7
   15a0c:	mov	r1, r8
   15a10:	mov	r2, r9
   15a14:	blx	r3
   15a18:	cmp	r4, r6
   15a1c:	bne	15a00 <close_stdout@@Base+0x2eb0>
   15a20:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15a24:			; <UNDEFINED> instruction: 0x000114bc
   15a28:			; <UNDEFINED> instruction: 0x000114b0
   15a2c:	bx	lr
   15a30:	ldr	r3, [pc, #28]	; 15a54 <close_stdout@@Base+0x2f04>
   15a34:	mov	r1, #0
   15a38:	ldr	r2, [pc, #24]	; 15a58 <close_stdout@@Base+0x2f08>
   15a3c:	add	r3, pc, r3
   15a40:	ldr	r3, [r3, r2]
   15a44:	cmp	r3, #0
   15a48:	ldrne	r2, [r3]
   15a4c:	moveq	r2, r3
   15a50:	b	114e4 <__cxa_atexit@plt>
   15a54:			; <UNDEFINED> instruction: 0x000115bc
   15a58:	andeq	r0, r0, r4, lsr r1

Disassembly of section .fini:

00015a5c <_fini@@Base>:
   15a5c:	push	{r3, lr}
   15a60:	pop	{r3, pc}
