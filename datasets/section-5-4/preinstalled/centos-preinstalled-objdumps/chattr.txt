
centos-preinstalled/chattr:     file format elf32-littlearm


Disassembly of section .init:

00010a30 <_init@@Base>:
   10a30:	push	{r3, lr}
   10a34:	bl	11038 <set_com_err_gettext@plt+0x48c>
   10a38:	pop	{r3, pc}

Disassembly of section .plt:

00010a3c <strtol@plt-0x14>:
   10a3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a40:	ldr	lr, [pc, #4]	; 10a4c <_init@@Base+0x1c>
   10a44:	add	lr, pc, lr
   10a48:	ldr	pc, [lr, #8]!
   10a4c:			; <UNDEFINED> instruction: 0x000115b4

00010a50 <strtol@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a5c <fsetversion@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a68 <free@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a74 <fgetflags@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1436]!	; 0x59c

00010a80 <dcgettext@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1428]!	; 0x594

00010a8c <__stack_chk_fail@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1420]!	; 0x58c

00010a98 <fsetflags@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1412]!	; 0x584

00010aa4 <textdomain@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1404]!	; 0x57c

00010ab0 <com_err@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1396]!	; 0x574

00010abc <perror@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1388]!	; 0x56c

00010ac8 <fwrite@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #69632	; 0x11000
   10ad0:	ldr	pc, [ip, #1380]!	; 0x564

00010ad4 <malloc@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #69632	; 0x11000
   10adc:	ldr	pc, [ip, #1372]!	; 0x55c

00010ae0 <__libc_start_main@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1364]!	; 0x554

00010aec <__gmon_start__@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1356]!	; 0x54c

00010af8 <print_flags@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1348]!	; 0x544

00010b04 <exit@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1340]!	; 0x53c

00010b10 <gettext@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1332]!	; 0x534

00010b1c <strlen@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1324]!	; 0x52c

00010b28 <__errno_location@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1316]!	; 0x524

00010b34 <__sprintf_chk@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1308]!	; 0x51c

00010b40 <putchar@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1300]!	; 0x514

00010b4c <__printf_chk@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1292]!	; 0x50c

00010b58 <__fprintf_chk@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1284]!	; 0x504

00010b64 <setlocale@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b70 <iterate_on_dir@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b7c <bindtextdomain@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b88 <fputs@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b94 <abort@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1244]!	; 0x4dc

00010ba0 <__lxstat64@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1236]!	; 0x4d4

00010bac <set_com_err_gettext@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1228]!	; 0x4cc

Disassembly of section .text:

00010bb8 <.text>:
   10bb8:	movw	r3, #8336	; 0x2090
   10bbc:	movt	r3, #2
   10bc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10bc4:	sub	sp, sp, #16
   10bc8:	ldr	r3, [r3]
   10bcc:	mov	r6, r0
   10bd0:	mov	r7, r1
   10bd4:	mov	r0, #5
   10bd8:	movw	r1, #6152	; 0x1808
   10bdc:	movt	r1, #1
   10be0:	str	r3, [sp, #12]
   10be4:	bl	10b64 <setlocale@plt>
   10be8:	movw	r1, #6152	; 0x1808
   10bec:	mov	r0, #0
   10bf0:	movt	r1, #1
   10bf4:	bl	10b64 <setlocale@plt>
   10bf8:	movw	r0, #6032	; 0x1790
   10bfc:	movw	r1, #6044	; 0x179c
   10c00:	movt	r0, #1
   10c04:	movt	r1, #1
   10c08:	bl	10b7c <bindtextdomain@plt>
   10c0c:	movw	r0, #6032	; 0x1790
   10c10:	movt	r0, #1
   10c14:	bl	10aa4 <textdomain@plt>
   10c18:	movw	r0, #2832	; 0xb10
   10c1c:	movt	r0, #1
   10c20:	bl	10bac <set_com_err_gettext@plt>
   10c24:	cmp	r6, #0
   10c28:	beq	10c40 <set_com_err_gettext@plt+0x94>
   10c2c:	ldr	r2, [r7]
   10c30:	cmp	r2, #0
   10c34:	movwne	r3, #8332	; 0x208c
   10c38:	movtne	r3, #2
   10c3c:	strne	r2, [r3]
   10c40:	mov	r4, #1
   10c44:	movw	r5, #8352	; 0x20a0
   10c48:	movt	r5, #2
   10c4c:	mov	r8, r4
   10c50:	mov	r3, #0
   10c54:	eor	r3, r3, #1
   10c58:	cmp	r6, r4
   10c5c:	movle	r3, #0
   10c60:	andgt	r3, r3, #1
   10c64:	cmp	r3, #0
   10c68:	beq	10e54 <set_com_err_gettext@plt+0x2a8>
   10c6c:	ldr	r3, [r7, r4, lsl #2]
   10c70:	ldrb	r2, [r3]
   10c74:	cmp	r2, #45	; 0x2d
   10c78:	beq	10d64 <set_com_err_gettext@plt+0x1b8>
   10c7c:	cmp	r2, #61	; 0x3d
   10c80:	beq	10ce8 <set_com_err_gettext@plt+0x13c>
   10c84:	cmp	r2, #43	; 0x2b
   10c88:	movne	r3, #1
   10c8c:	bne	10c54 <set_com_err_gettext@plt+0xa8>
   10c90:	ldrb	r0, [r3, #1]
   10c94:	movw	ip, #8352	; 0x20a0
   10c98:	movt	ip, #2
   10c9c:	add	r9, r3, #1
   10ca0:	cmp	r0, #0
   10ca4:	str	r8, [r5, #24]
   10ca8:	ldrne	lr, [ip, #28]
   10cac:	beq	10d58 <set_com_err_gettext@plt+0x1ac>
   10cb0:	cmp	r0, #65	; 0x41
   10cb4:	beq	10f34 <set_com_err_gettext@plt+0x388>
   10cb8:	movw	r3, #5636	; 0x1604
   10cbc:	movt	r3, #1
   10cc0:	b	10cd4 <set_com_err_gettext@plt+0x128>
   10cc4:	add	r3, r3, #8
   10cc8:	ldrb	r1, [r3, #4]
   10ccc:	cmp	r1, r0
   10cd0:	beq	10f38 <set_com_err_gettext@plt+0x38c>
   10cd4:	ldr	r2, [r3, #8]
   10cd8:	cmp	r2, #0
   10cdc:	bne	10cc4 <set_com_err_gettext@plt+0x118>
   10ce0:	str	lr, [ip, #28]
   10ce4:	b	10d3c <set_com_err_gettext@plt+0x190>
   10ce8:	ldrb	r0, [r3, #1]
   10cec:	movw	ip, #8352	; 0x20a0
   10cf0:	movt	ip, #2
   10cf4:	add	r9, r3, #1
   10cf8:	cmp	r0, #0
   10cfc:	str	r8, [r5, #4]
   10d00:	ldrne	lr, [ip, #12]
   10d04:	beq	10d58 <set_com_err_gettext@plt+0x1ac>
   10d08:	cmp	r0, #65	; 0x41
   10d0c:	beq	10d40 <set_com_err_gettext@plt+0x194>
   10d10:	movw	r3, #5636	; 0x1604
   10d14:	movt	r3, #1
   10d18:	b	10d2c <set_com_err_gettext@plt+0x180>
   10d1c:	add	r3, r3, #8
   10d20:	ldrb	r1, [r3, #4]
   10d24:	cmp	r1, r0
   10d28:	beq	10d44 <set_com_err_gettext@plt+0x198>
   10d2c:	ldr	r2, [r3, #8]
   10d30:	cmp	r2, #0
   10d34:	bne	10d1c <set_com_err_gettext@plt+0x170>
   10d38:	str	lr, [ip, #12]
   10d3c:	bl	11130 <set_com_err_gettext@plt+0x584>
   10d40:	mov	r2, #128	; 0x80
   10d44:	ldrb	r0, [r9, #1]!
   10d48:	orr	lr, r2, lr
   10d4c:	cmp	r0, #0
   10d50:	bne	10d08 <set_com_err_gettext@plt+0x15c>
   10d54:	str	lr, [r5, #12]
   10d58:	add	r4, r4, #1
   10d5c:	mov	r3, #0
   10d60:	b	10c54 <set_com_err_gettext@plt+0xa8>
   10d64:	ldrb	r2, [r3, #1]
   10d68:	cmp	r2, #45	; 0x2d
   10d6c:	beq	10e3c <set_com_err_gettext@plt+0x290>
   10d70:	ldrb	r2, [r3, #1]
   10d74:	add	r9, r3, #1
   10d78:	cmp	r2, #0
   10d7c:	beq	10d58 <set_com_err_gettext@plt+0x1ac>
   10d80:	cmp	r2, #82	; 0x52
   10d84:	streq	r8, [r5, #40]	; 0x28
   10d88:	beq	10de8 <set_com_err_gettext@plt+0x23c>
   10d8c:	cmp	r2, #86	; 0x56
   10d90:	streq	r8, [r5, #8]
   10d94:	beq	10de8 <set_com_err_gettext@plt+0x23c>
   10d98:	cmp	r2, #102	; 0x66
   10d9c:	streq	r8, [r5]
   10da0:	beq	10de8 <set_com_err_gettext@plt+0x23c>
   10da4:	cmp	r2, #118	; 0x76
   10da8:	beq	10e00 <set_com_err_gettext@plt+0x254>
   10dac:	cmp	r2, #65	; 0x41
   10db0:	beq	10f50 <set_com_err_gettext@plt+0x3a4>
   10db4:	movw	r3, #5636	; 0x1604
   10db8:	movt	r3, #1
   10dbc:	ldr	r1, [r3, #8]
   10dc0:	cmp	r1, #0
   10dc4:	beq	10d3c <set_com_err_gettext@plt+0x190>
   10dc8:	add	r3, r3, #8
   10dcc:	ldrb	r0, [r3, #4]
   10dd0:	cmp	r0, r2
   10dd4:	bne	10dbc <set_com_err_gettext@plt+0x210>
   10dd8:	ldr	r3, [r5, #20]
   10ddc:	str	r8, [r5, #16]
   10de0:	orr	r1, r1, r3
   10de4:	str	r1, [r5, #20]
   10de8:	ldrb	r2, [r9, #1]!
   10dec:	cmp	r2, #0
   10df0:	bne	10d80 <set_com_err_gettext@plt+0x1d4>
   10df4:	add	r4, r4, #1
   10df8:	mov	r3, #0
   10dfc:	b	10c54 <set_com_err_gettext@plt+0xa8>
   10e00:	add	r4, r4, #1
   10e04:	cmp	r6, r4
   10e08:	ble	10d3c <set_com_err_gettext@plt+0x190>
   10e0c:	ldr	r0, [r7, r4, lsl #2]
   10e10:	add	r1, sp, #8
   10e14:	mov	r2, #0
   10e18:	add	sl, r7, r4, lsl #2
   10e1c:	bl	10a50 <strtol@plt>
   10e20:	ldr	r3, [sp, #8]
   10e24:	ldrb	r3, [r3]
   10e28:	cmp	r3, #0
   10e2c:	str	r0, [r5, #36]	; 0x24
   10e30:	bne	10fc4 <set_com_err_gettext@plt+0x418>
   10e34:	str	r8, [r5, #32]
   10e38:	b	10de8 <set_com_err_gettext@plt+0x23c>
   10e3c:	ldrb	r2, [r3, #2]
   10e40:	cmp	r2, #0
   10e44:	bne	10d70 <set_com_err_gettext@plt+0x1c4>
   10e48:	add	r4, r4, #1
   10e4c:	mov	r3, #1
   10e50:	b	10c54 <set_com_err_gettext@plt+0xa8>
   10e54:	cmp	r6, r4
   10e58:	ble	10d3c <set_com_err_gettext@plt+0x190>
   10e5c:	movw	ip, #8352	; 0x20a0
   10e60:	movt	ip, #2
   10e64:	ldr	r0, [ip, #4]
   10e68:	cmp	r0, #0
   10e6c:	beq	10eb4 <set_com_err_gettext@plt+0x308>
   10e70:	ldr	r3, [ip, #24]
   10e74:	cmp	r3, #0
   10e78:	bne	10e88 <set_com_err_gettext@plt+0x2dc>
   10e7c:	ldr	r3, [ip, #16]
   10e80:	cmp	r3, #0
   10e84:	beq	10eb4 <set_com_err_gettext@plt+0x308>
   10e88:	movw	r1, #6084	; 0x17c4
   10e8c:	movt	r1, #1
   10e90:	mov	r0, #0
   10e94:	mov	r2, #5
   10e98:	bl	10a80 <dcgettext@plt>
   10e9c:	movw	r3, #8340	; 0x2094
   10ea0:	movt	r3, #2
   10ea4:	ldr	r1, [r3]
   10ea8:	bl	10b88 <fputs@plt>
   10eac:	mov	r0, #1
   10eb0:	bl	10b04 <exit@plt>
   10eb4:	ldr	r1, [ip, #28]
   10eb8:	movw	r3, #8352	; 0x20a0
   10ebc:	ldr	r2, [ip, #20]
   10ec0:	movt	r3, #2
   10ec4:	tst	r1, r2
   10ec8:	bne	10f58 <set_com_err_gettext@plt+0x3ac>
   10ecc:	ldr	r2, [r3, #24]
   10ed0:	cmp	r2, #0
   10ed4:	bne	10ef8 <set_com_err_gettext@plt+0x34c>
   10ed8:	ldr	r2, [r3, #16]
   10edc:	cmp	r2, #0
   10ee0:	bne	10ef8 <set_com_err_gettext@plt+0x34c>
   10ee4:	cmp	r0, #0
   10ee8:	bne	10ef8 <set_com_err_gettext@plt+0x34c>
   10eec:	ldr	r3, [r3, #32]
   10ef0:	cmp	r3, #0
   10ef4:	beq	10fb4 <set_com_err_gettext@plt+0x408>
   10ef8:	ldr	r3, [ip, #8]
   10efc:	cmp	r3, #0
   10f00:	bne	10f80 <set_com_err_gettext@plt+0x3d4>
   10f04:	sub	r3, r4, #-1073741823	; 0xc0000001
   10f08:	mov	r5, #0
   10f0c:	add	r7, r7, r3, lsl #2
   10f10:	ldr	r0, [r7, #4]!
   10f14:	add	r4, r4, #1
   10f18:	bl	11178 <set_com_err_gettext@plt+0x5cc>
   10f1c:	cmp	r0, #0
   10f20:	movne	r5, #1
   10f24:	cmp	r4, r6
   10f28:	bne	10f10 <set_com_err_gettext@plt+0x364>
   10f2c:	mov	r0, r5
   10f30:	bl	10b04 <exit@plt>
   10f34:	mov	r2, #128	; 0x80
   10f38:	ldrb	r0, [r9, #1]!
   10f3c:	orr	lr, r2, lr
   10f40:	cmp	r0, #0
   10f44:	bne	10cb0 <set_com_err_gettext@plt+0x104>
   10f48:	str	lr, [r5, #28]
   10f4c:	b	10d58 <set_com_err_gettext@plt+0x1ac>
   10f50:	mov	r1, #128	; 0x80
   10f54:	b	10dd8 <set_com_err_gettext@plt+0x22c>
   10f58:	movw	r3, #8340	; 0x2094
   10f5c:	movt	r3, #2
   10f60:	movw	r0, #6116	; 0x17e4
   10f64:	mov	r1, #1
   10f68:	ldr	r3, [r3]
   10f6c:	movt	r0, #1
   10f70:	mov	r2, #36	; 0x24
   10f74:	bl	10ac8 <fwrite@plt>
   10f78:	mov	r0, #1
   10f7c:	bl	10b04 <exit@plt>
   10f80:	movw	r1, #8340	; 0x2094
   10f84:	movt	r1, #2
   10f88:	movw	r3, #6208	; 0x1840
   10f8c:	movw	r2, #6184	; 0x1828
   10f90:	ldr	r0, [r1]
   10f94:	movt	r3, #1
   10f98:	movt	r2, #1
   10f9c:	str	r3, [sp]
   10fa0:	mov	r1, #1
   10fa4:	movw	r3, #6200	; 0x1838
   10fa8:	movt	r3, #1
   10fac:	bl	10b58 <__fprintf_chk@plt>
   10fb0:	b	10f04 <set_com_err_gettext@plt+0x358>
   10fb4:	movw	r1, #6156	; 0x180c
   10fb8:	mov	r2, #5
   10fbc:	movt	r1, #1
   10fc0:	b	10e98 <set_com_err_gettext@plt+0x2ec>
   10fc4:	movw	r3, #8332	; 0x208c
   10fc8:	movt	r3, #2
   10fcc:	mov	r2, #5
   10fd0:	movw	r1, #6064	; 0x17b0
   10fd4:	mov	r0, #0
   10fd8:	movt	r1, #1
   10fdc:	ldr	r4, [r3]
   10fe0:	bl	10a80 <dcgettext@plt>
   10fe4:	ldr	r3, [sl]
   10fe8:	mov	r1, #0
   10fec:	mov	r2, r0
   10ff0:	mov	r0, r4
   10ff4:	bl	10ab0 <com_err@plt>
   10ff8:	b	10d3c <set_com_err_gettext@plt+0x190>
   10ffc:	mov	fp, #0
   11000:	mov	lr, #0
   11004:	pop	{r1}		; (ldr r1, [sp], #4)
   11008:	mov	r2, sp
   1100c:	push	{r2}		; (str r2, [sp, #-4]!)
   11010:	push	{r0}		; (str r0, [sp, #-4]!)
   11014:	ldr	ip, [pc, #16]	; 1102c <set_com_err_gettext@plt+0x480>
   11018:	push	{ip}		; (str ip, [sp, #-4]!)
   1101c:	ldr	r0, [pc, #12]	; 11030 <set_com_err_gettext@plt+0x484>
   11020:	ldr	r3, [pc, #12]	; 11034 <set_com_err_gettext@plt+0x488>
   11024:	bl	10ae0 <__libc_start_main@plt>
   11028:	bl	10b94 <abort@plt>
   1102c:	strdeq	r1, [r1], -r0
   11030:			; <UNDEFINED> instruction: 0x00010bb8
   11034:	andeq	r1, r1, ip, lsl #11
   11038:	ldr	r3, [pc, #20]	; 11054 <set_com_err_gettext@plt+0x4a8>
   1103c:	ldr	r2, [pc, #20]	; 11058 <set_com_err_gettext@plt+0x4ac>
   11040:	add	r3, pc, r3
   11044:	ldr	r2, [r3, r2]
   11048:	cmp	r2, #0
   1104c:	bxeq	lr
   11050:	b	10aec <__gmon_start__@plt>
   11054:			; <UNDEFINED> instruction: 0x00010fb8
   11058:	andeq	r0, r0, r4, lsl #1
   1105c:	push	{r3, lr}
   11060:	movw	r0, #8336	; 0x2090
   11064:	ldr	r3, [pc, #36]	; 11090 <set_com_err_gettext@plt+0x4e4>
   11068:	movt	r0, #2
   1106c:	rsb	r3, r0, r3
   11070:	cmp	r3, #6
   11074:	popls	{r3, pc}
   11078:	movw	r3, #0
   1107c:	movt	r3, #0
   11080:	cmp	r3, #0
   11084:	popeq	{r3, pc}
   11088:	blx	r3
   1108c:	pop	{r3, pc}
   11090:	muleq	r2, r3, r0
   11094:	push	{r3, lr}
   11098:	movw	r0, #8336	; 0x2090
   1109c:	movw	r3, #8336	; 0x2090
   110a0:	movt	r0, #2
   110a4:	movt	r3, #2
   110a8:	rsb	r3, r0, r3
   110ac:	asr	r3, r3, #2
   110b0:	add	r3, r3, r3, lsr #31
   110b4:	asrs	r1, r3, #1
   110b8:	popeq	{r3, pc}
   110bc:	movw	r2, #0
   110c0:	movt	r2, #0
   110c4:	cmp	r2, #0
   110c8:	popeq	{r3, pc}
   110cc:	blx	r2
   110d0:	pop	{r3, pc}
   110d4:	push	{r4, lr}
   110d8:	movw	r4, #8348	; 0x209c
   110dc:	movt	r4, #2
   110e0:	ldrb	r3, [r4]
   110e4:	cmp	r3, #0
   110e8:	popne	{r4, pc}
   110ec:	bl	1105c <set_com_err_gettext@plt+0x4b0>
   110f0:	mov	r3, #1
   110f4:	strb	r3, [r4]
   110f8:	pop	{r4, pc}
   110fc:	movw	r0, #7924	; 0x1ef4
   11100:	movt	r0, #2
   11104:	push	{r3, lr}
   11108:	ldr	r3, [r0]
   1110c:	cmp	r3, #0
   11110:	beq	11128 <set_com_err_gettext@plt+0x57c>
   11114:	movw	r3, #0
   11118:	movt	r3, #0
   1111c:	cmp	r3, #0
   11120:	beq	11128 <set_com_err_gettext@plt+0x57c>
   11124:	blx	r3
   11128:	pop	{r3, lr}
   1112c:	b	11094 <set_com_err_gettext@plt+0x4e8>
   11130:	movw	r3, #8340	; 0x2094
   11134:	movt	r3, #2
   11138:	push	{r4, lr}
   1113c:	mov	r2, #5
   11140:	movw	r1, #5756	; 0x167c
   11144:	mov	r0, #0
   11148:	movt	r1, #1
   1114c:	ldr	r4, [r3]
   11150:	bl	10a80 <dcgettext@plt>
   11154:	movw	r3, #8332	; 0x208c
   11158:	movt	r3, #2
   1115c:	mov	r1, #1
   11160:	ldr	r3, [r3]
   11164:	mov	r2, r0
   11168:	mov	r0, r4
   1116c:	bl	10b58 <__fprintf_chk@plt>
   11170:	mov	r0, #1
   11174:	bl	10b04 <exit@plt>
   11178:	push	{r4, r5, r6, r7, r8, r9, lr}
   1117c:	movw	r5, #8336	; 0x2090
   11180:	movt	r5, #2
   11184:	sub	sp, sp, #124	; 0x7c
   11188:	mov	r1, r0
   1118c:	mov	r6, r0
   11190:	ldr	r3, [r5]
   11194:	add	r2, sp, #8
   11198:	mov	r0, #3
   1119c:	str	r3, [sp, #116]	; 0x74
   111a0:	bl	10ba0 <__lxstat64@plt>
   111a4:	cmn	r0, #1
   111a8:	mov	r4, r0
   111ac:	beq	112c8 <set_com_err_gettext@plt+0x71c>
   111b0:	mov	r0, r6
   111b4:	add	r1, sp, #4
   111b8:	bl	10a74 <fgetflags@plt>
   111bc:	cmn	r0, #1
   111c0:	mov	r4, r0
   111c4:	beq	11328 <set_com_err_gettext@plt+0x77c>
   111c8:	movw	r7, #8352	; 0x20a0
   111cc:	movt	r7, #2
   111d0:	ldr	r3, [r7, #4]
   111d4:	cmp	r3, #0
   111d8:	bne	112fc <set_com_err_gettext@plt+0x750>
   111dc:	ldr	r3, [r7, #16]
   111e0:	cmp	r3, #0
   111e4:	ldrne	r3, [sp, #4]
   111e8:	ldrne	r2, [r7, #20]
   111ec:	bicne	r3, r3, r2
   111f0:	ldr	r2, [r7, #24]
   111f4:	strne	r3, [sp, #4]
   111f8:	movw	r3, #8352	; 0x20a0
   111fc:	cmp	r2, #0
   11200:	movt	r3, #2
   11204:	ldrne	r3, [r3, #28]
   11208:	ldrne	r2, [sp, #4]
   1120c:	orrne	r3, r2, r3
   11210:	strne	r3, [sp, #4]
   11214:	ldr	r3, [r7, #8]
   11218:	cmp	r3, #0
   1121c:	bne	113e4 <set_com_err_gettext@plt+0x838>
   11220:	ldr	r3, [sp, #24]
   11224:	mov	r0, r6
   11228:	ldr	r1, [sp, #4]
   1122c:	and	r3, r3, #61440	; 0xf000
   11230:	cmp	r3, #16384	; 0x4000
   11234:	bicne	r1, r1, #65536	; 0x10000
   11238:	strne	r1, [sp, #4]
   1123c:	bl	10a98 <fsetflags@plt>
   11240:	cmn	r0, #1
   11244:	mov	r4, r0
   11248:	beq	1142c <set_com_err_gettext@plt+0x880>
   1124c:	ldr	r3, [r7, #32]
   11250:	movw	r4, #8352	; 0x20a0
   11254:	movt	r4, #2
   11258:	cmp	r3, #0
   1125c:	beq	1128c <set_com_err_gettext@plt+0x6e0>
   11260:	ldr	r3, [r4, #8]
   11264:	cmp	r3, #0
   11268:	bne	11458 <set_com_err_gettext@plt+0x8ac>
   1126c:	mov	r0, r6
   11270:	ldr	r1, [r7, #36]	; 0x24
   11274:	bl	10a5c <fsetversion@plt>
   11278:	movw	r3, #8352	; 0x20a0
   1127c:	movt	r3, #2
   11280:	cmn	r0, #1
   11284:	mov	r4, r0
   11288:	beq	11484 <set_com_err_gettext@plt+0x8d8>
   1128c:	ldr	r3, [sp, #24]
   11290:	and	r3, r3, #61440	; 0xf000
   11294:	cmp	r3, #16384	; 0x4000
   11298:	movne	r4, #0
   1129c:	bne	112e0 <set_com_err_gettext@plt+0x734>
   112a0:	ldr	r4, [r7, #40]	; 0x28
   112a4:	cmp	r4, #0
   112a8:	beq	112e0 <set_com_err_gettext@plt+0x734>
   112ac:	mov	r0, r6
   112b0:	movw	r1, #5300	; 0x14b4
   112b4:	mov	r2, #0
   112b8:	movt	r1, #1
   112bc:	bl	10b70 <iterate_on_dir@plt>
   112c0:	mov	r4, r0
   112c4:	b	112e0 <set_com_err_gettext@plt+0x734>
   112c8:	movw	r3, #8352	; 0x20a0
   112cc:	movt	r3, #2
   112d0:	ldr	r7, [r3]
   112d4:	cmp	r7, #0
   112d8:	beq	1135c <set_com_err_gettext@plt+0x7b0>
   112dc:	mvn	r4, #0
   112e0:	ldr	r2, [sp, #116]	; 0x74
   112e4:	mov	r0, r4
   112e8:	ldr	r3, [r5]
   112ec:	cmp	r2, r3
   112f0:	bne	114b0 <set_com_err_gettext@plt+0x904>
   112f4:	add	sp, sp, #124	; 0x7c
   112f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   112fc:	ldr	r3, [r7, #8]
   11300:	cmp	r3, #0
   11304:	bne	1139c <set_com_err_gettext@plt+0x7f0>
   11308:	mov	r0, r6
   1130c:	ldr	r1, [r7, #12]
   11310:	bl	10a98 <fsetflags@plt>
   11314:	cmn	r0, #1
   11318:	bne	1124c <set_com_err_gettext@plt+0x6a0>
   1131c:	mov	r0, r6
   11320:	bl	10abc <perror@plt>
   11324:	b	1124c <set_com_err_gettext@plt+0x6a0>
   11328:	movw	r3, #8352	; 0x20a0
   1132c:	movt	r3, #2
   11330:	ldr	r7, [r3]
   11334:	cmp	r7, #0
   11338:	bne	112dc <set_com_err_gettext@plt+0x730>
   1133c:	movw	r3, #8332	; 0x208c
   11340:	movt	r3, #2
   11344:	ldr	r9, [r3]
   11348:	bl	10b28 <__errno_location@plt>
   1134c:	movw	r1, #5840	; 0x16d0
   11350:	mov	r2, #5
   11354:	movt	r1, #1
   11358:	b	11378 <set_com_err_gettext@plt+0x7cc>
   1135c:	movw	r3, #8332	; 0x208c
   11360:	movt	r3, #2
   11364:	ldr	r9, [r3]
   11368:	bl	10b28 <__errno_location@plt>
   1136c:	movw	r1, #5816	; 0x16b8
   11370:	movt	r1, #1
   11374:	mov	r2, #5
   11378:	ldr	r8, [r0]
   1137c:	mov	r0, r7
   11380:	bl	10a80 <dcgettext@plt>
   11384:	mov	r3, r6
   11388:	mov	r1, r8
   1138c:	mov	r2, r0
   11390:	mov	r0, r9
   11394:	bl	10ab0 <com_err@plt>
   11398:	b	112e0 <set_com_err_gettext@plt+0x734>
   1139c:	mov	r2, #5
   113a0:	movw	r1, #5868	; 0x16ec
   113a4:	mov	r0, #0
   113a8:	movt	r1, #1
   113ac:	bl	10a80 <dcgettext@plt>
   113b0:	mov	r2, r6
   113b4:	mov	r1, r0
   113b8:	mov	r0, #1
   113bc:	bl	10b4c <__printf_chk@plt>
   113c0:	movw	r3, #8344	; 0x2098
   113c4:	movt	r3, #2
   113c8:	ldr	r1, [r7, #12]
   113cc:	mov	r2, #0
   113d0:	ldr	r0, [r3]
   113d4:	bl	10af8 <print_flags@plt>
   113d8:	mov	r0, #10
   113dc:	bl	10b40 <putchar@plt>
   113e0:	b	11308 <set_com_err_gettext@plt+0x75c>
   113e4:	mov	r2, #5
   113e8:	movw	r1, #5868	; 0x16ec
   113ec:	mov	r0, #0
   113f0:	movt	r1, #1
   113f4:	bl	10a80 <dcgettext@plt>
   113f8:	mov	r2, r6
   113fc:	mov	r1, r0
   11400:	mov	r0, #1
   11404:	bl	10b4c <__printf_chk@plt>
   11408:	movw	r3, #8344	; 0x2098
   1140c:	movt	r3, #2
   11410:	ldr	r1, [sp, #4]
   11414:	mov	r2, #0
   11418:	ldr	r0, [r3]
   1141c:	bl	10af8 <print_flags@plt>
   11420:	mov	r0, #10
   11424:	bl	10b40 <putchar@plt>
   11428:	b	11220 <set_com_err_gettext@plt+0x674>
   1142c:	ldr	r7, [r7]
   11430:	cmp	r7, #0
   11434:	bne	112dc <set_com_err_gettext@plt+0x730>
   11438:	movw	r3, #8332	; 0x208c
   1143c:	movt	r3, #2
   11440:	ldr	r9, [r3]
   11444:	bl	10b28 <__errno_location@plt>
   11448:	movw	r1, #5888	; 0x1700
   1144c:	mov	r2, #5
   11450:	movt	r1, #1
   11454:	b	11378 <set_com_err_gettext@plt+0x7cc>
   11458:	mov	r2, #5
   1145c:	movw	r1, #5916	; 0x171c
   11460:	mov	r0, #0
   11464:	movt	r1, #1
   11468:	bl	10a80 <dcgettext@plt>
   1146c:	ldr	r3, [r4, #36]	; 0x24
   11470:	mov	r2, r6
   11474:	mov	r1, r0
   11478:	mov	r0, #1
   1147c:	bl	10b4c <__printf_chk@plt>
   11480:	b	1126c <set_com_err_gettext@plt+0x6c0>
   11484:	ldr	r7, [r3]
   11488:	cmp	r7, #0
   1148c:	bne	112dc <set_com_err_gettext@plt+0x730>
   11490:	movw	r3, #8332	; 0x208c
   11494:	movt	r3, #2
   11498:	ldr	r9, [r3]
   1149c:	bl	10b28 <__errno_location@plt>
   114a0:	movw	r1, #5944	; 0x1738
   114a4:	mov	r2, #5
   114a8:	movt	r1, #1
   114ac:	b	11378 <set_com_err_gettext@plt+0x7cc>
   114b0:	bl	10a8c <__stack_chk_fail@plt>
   114b4:	push	{r4, r5, r6, lr}
   114b8:	mov	r4, r0
   114bc:	ldrb	r3, [r1, #11]
   114c0:	sub	sp, sp, #8
   114c4:	cmp	r3, #46	; 0x2e
   114c8:	beq	11534 <set_com_err_gettext@plt+0x988>
   114cc:	mov	r0, r4
   114d0:	add	r5, r1, #11
   114d4:	bl	10b1c <strlen@plt>
   114d8:	mov	r6, r0
   114dc:	mov	r0, r5
   114e0:	bl	10b1c <strlen@plt>
   114e4:	add	r0, r6, r0
   114e8:	add	r0, r0, #2
   114ec:	bl	10ad4 <malloc@plt>
   114f0:	subs	r6, r0, #0
   114f4:	beq	11560 <set_com_err_gettext@plt+0x9b4>
   114f8:	mov	r1, #1
   114fc:	mvn	r2, #0
   11500:	str	r4, [sp]
   11504:	movw	r3, #6024	; 0x1788
   11508:	str	r5, [sp, #4]
   1150c:	movt	r3, #1
   11510:	bl	10b34 <__sprintf_chk@plt>
   11514:	mov	r0, r6
   11518:	bl	11178 <set_com_err_gettext@plt+0x5cc>
   1151c:	mov	r4, r0
   11520:	mov	r0, r6
   11524:	bl	10a68 <free@plt>
   11528:	mov	r0, r4
   1152c:	add	sp, sp, #8
   11530:	pop	{r4, r5, r6, pc}
   11534:	ldrb	r3, [r1, #12]
   11538:	cmp	r3, #0
   1153c:	moveq	r0, r3
   11540:	beq	1152c <set_com_err_gettext@plt+0x980>
   11544:	cmp	r3, #46	; 0x2e
   11548:	bne	114cc <set_com_err_gettext@plt+0x920>
   1154c:	ldrb	r0, [r1, #13]
   11550:	cmp	r0, #0
   11554:	bne	114cc <set_com_err_gettext@plt+0x920>
   11558:	add	sp, sp, #8
   1155c:	pop	{r4, r5, r6, pc}
   11560:	movw	r3, #8340	; 0x2094
   11564:	movt	r3, #2
   11568:	mov	r2, #5
   1156c:	movw	r1, #5972	; 0x1754
   11570:	ldr	r4, [r3]
   11574:	movt	r1, #1
   11578:	bl	10a80 <dcgettext@plt>
   1157c:	mov	r1, r4
   11580:	bl	10b88 <fputs@plt>
   11584:	mvn	r0, #0
   11588:	b	1152c <set_com_err_gettext@plt+0x980>
   1158c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11590:	mov	r7, r0
   11594:	ldr	r6, [pc, #76]	; 115e8 <set_com_err_gettext@plt+0xa3c>
   11598:	mov	r8, r1
   1159c:	ldr	r5, [pc, #72]	; 115ec <set_com_err_gettext@plt+0xa40>
   115a0:	mov	r9, r2
   115a4:	add	r6, pc, r6
   115a8:	bl	10a30 <_init@@Base>
   115ac:	add	r5, pc, r5
   115b0:	rsb	r6, r5, r6
   115b4:	asrs	r6, r6, #2
   115b8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   115bc:	sub	r5, r5, #4
   115c0:	mov	r4, #0
   115c4:	add	r4, r4, #1
   115c8:	ldr	r3, [r5, #4]!
   115cc:	mov	r0, r7
   115d0:	mov	r1, r8
   115d4:	mov	r2, r9
   115d8:	blx	r3
   115dc:	cmp	r4, r6
   115e0:	bne	115c4 <set_com_err_gettext@plt+0xa18>
   115e4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   115e8:	andeq	r0, r1, r4, asr #18
   115ec:	andeq	r0, r1, r8, lsr r9
   115f0:	bx	lr

Disassembly of section .fini:

000115f4 <_fini@@Base>:
   115f4:	push	{r3, lr}
   115f8:	pop	{r3, pc}
