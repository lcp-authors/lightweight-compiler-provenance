
centos-preinstalled/sg_reassign:     file format elf32-littlearm


Disassembly of section .init:

00010958 <_init@@Base>:
   10958:	push	{r3, lr}
   1095c:	bl	119bc <sg_ll_reassign_blocks@plt+0xf48>
   10960:	pop	{r3, pc}

Disassembly of section .plt:

00010964 <raise@plt-0x14>:
   10964:	push	{lr}		; (str lr, [sp, #-4]!)
   10968:	ldr	lr, [pc, #4]	; 10974 <_init@@Base+0x1c>
   1096c:	add	lr, pc, lr
   10970:	ldr	pc, [lr, #8]!
   10974:	andeq	r2, r1, ip, lsl #13

00010978 <raise@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #73728	; 0x12000
   10980:	ldr	pc, [ip, #1676]!	; 0x68c

00010984 <dStrHex@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #73728	; 0x12000
   1098c:	ldr	pc, [ip, #1668]!	; 0x684

00010990 <fgets@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #73728	; 0x12000
   10998:	ldr	pc, [ip, #1660]!	; 0x67c

0001099c <sg_cmds_close_device@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #73728	; 0x12000
   109a4:	ldr	pc, [ip, #1652]!	; 0x674

000109a8 <__stack_chk_fail@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #73728	; 0x12000
   109b0:	ldr	pc, [ip, #1644]!	; 0x66c

000109b4 <fwrite@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #73728	; 0x12000
   109bc:	ldr	pc, [ip, #1636]!	; 0x664

000109c0 <__libc_start_main@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #73728	; 0x12000
   109c8:	ldr	pc, [ip, #1628]!	; 0x65c

000109cc <__ctype_toupper_loc@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #73728	; 0x12000
   109d4:	ldr	pc, [ip, #1620]!	; 0x654

000109d8 <__gmon_start__@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #73728	; 0x12000
   109e0:	ldr	pc, [ip, #1612]!	; 0x64c

000109e4 <getopt_long@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #73728	; 0x12000
   109ec:	ldr	pc, [ip, #1604]!	; 0x644

000109f0 <strlen@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #73728	; 0x12000
   109f8:	ldr	pc, [ip, #1596]!	; 0x63c

000109fc <strchr@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #73728	; 0x12000
   10a04:	ldr	pc, [ip, #1588]!	; 0x634

00010a08 <__isoc99_sscanf@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #73728	; 0x12000
   10a10:	ldr	pc, [ip, #1580]!	; 0x62c

00010a14 <memset@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #73728	; 0x12000
   10a1c:	ldr	pc, [ip, #1572]!	; 0x624

00010a20 <__printf_chk@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #73728	; 0x12000
   10a28:	ldr	pc, [ip, #1564]!	; 0x61c

00010a2c <__fprintf_chk@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #73728	; 0x12000
   10a34:	ldr	pc, [ip, #1556]!	; 0x614

00010a38 <safe_strerror@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #73728	; 0x12000
   10a40:	ldr	pc, [ip, #1548]!	; 0x60c

00010a44 <sg_cmds_open_device@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #73728	; 0x12000
   10a4c:	ldr	pc, [ip, #1540]!	; 0x604

00010a50 <sg_ll_read_defect10@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #73728	; 0x12000
   10a58:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a5c <abort@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #73728	; 0x12000
   10a64:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a68 <strspn@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #73728	; 0x12000
   10a70:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a74 <sg_ll_reassign_blocks@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #73728	; 0x12000
   10a7c:	ldr	pc, [ip, #1508]!	; 0x5e4

Disassembly of section .text:

00010a80 <.text>:
   10a80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a84:	movw	r9, #12576	; 0x3120
   10a88:	sub	sp, sp, #16384	; 0x4000
   10a8c:	movt	r9, #2
   10a90:	sub	sp, sp, #92	; 0x5c
   10a94:	mov	r6, #0
   10a98:	ldr	r3, [r9]
   10a9c:	add	r7, sp, #8256	; 0x2040
   10aa0:	movw	r8, #49140	; 0xbff4
   10aa4:	add	lr, sp, #16384	; 0x4000
   10aa8:	movt	r8, #65535	; 0xffff
   10aac:	add	r7, r7, #16
   10ab0:	mov	sl, r0
   10ab4:	mov	r5, r1
   10ab8:	mov	fp, r6
   10abc:	add	ip, sp, #72	; 0x48
   10ac0:	str	r6, [sp, #24]
   10ac4:	str	ip, [sp, #40]	; 0x28
   10ac8:	movw	ip, #12600	; 0x3138
   10acc:	str	r6, [sp, #48]	; 0x30
   10ad0:	movt	ip, #2
   10ad4:	str	r6, [sp, #36]	; 0x24
   10ad8:	str	ip, [sp, #16]
   10adc:	mvn	ip, #0
   10ae0:	str	r6, [sp, #32]
   10ae4:	str	r6, [sp, #44]	; 0x2c
   10ae8:	str	r6, [sp, #20]
   10aec:	str	r6, [sp, #52]	; 0x34
   10af0:	str	ip, [sp, #28]
   10af4:	str	r3, [lr, #84]	; 0x54
   10af8:	add	ip, sp, #16384	; 0x4000
   10afc:	add	r0, sp, #76	; 0x4c
   10b00:	add	ip, ip, #88	; 0x58
   10b04:	str	r0, [sp]
   10b08:	movw	r2, #7884	; 0x1ecc
   10b0c:	movw	r3, #12396	; 0x306c
   10b10:	movt	r2, #1
   10b14:	movt	r3, #2
   10b18:	mov	r0, sl
   10b1c:	mov	r1, r5
   10b20:	str	fp, [ip, r8]
   10b24:	bl	109e4 <getopt_long@plt>
   10b28:	cmn	r0, #1
   10b2c:	beq	10f18 <sg_ll_reassign_blocks@plt+0x4a4>
   10b30:	sub	r3, r0, #63	; 0x3f
   10b34:	cmp	r3, #55	; 0x37
   10b38:	ldrls	pc, [pc, r3, lsl #2]
   10b3c:	b	10eb0 <sg_ll_reassign_blocks@plt+0x43c>
   10b40:	andeq	r0, r1, r4, lsl #28
   10b44:			; <UNDEFINED> instruction: 0x00010eb0
   10b48:			; <UNDEFINED> instruction: 0x00010eb0
   10b4c:			; <UNDEFINED> instruction: 0x00010eb0
   10b50:			; <UNDEFINED> instruction: 0x00010eb0
   10b54:			; <UNDEFINED> instruction: 0x00010eb0
   10b58:			; <UNDEFINED> instruction: 0x00010eb0
   10b5c:			; <UNDEFINED> instruction: 0x00010eb0
   10b60:			; <UNDEFINED> instruction: 0x00010eb0
   10b64:	strdeq	r0, [r1], -r4
   10b68:			; <UNDEFINED> instruction: 0x00010eb0
   10b6c:			; <UNDEFINED> instruction: 0x00010eb0
   10b70:			; <UNDEFINED> instruction: 0x00010eb0
   10b74:			; <UNDEFINED> instruction: 0x00010eb0
   10b78:			; <UNDEFINED> instruction: 0x00010eb0
   10b7c:			; <UNDEFINED> instruction: 0x00010eb0
   10b80:			; <UNDEFINED> instruction: 0x00010eb0
   10b84:			; <UNDEFINED> instruction: 0x00010eb0
   10b88:			; <UNDEFINED> instruction: 0x00010eb0
   10b8c:			; <UNDEFINED> instruction: 0x00010eb0
   10b90:			; <UNDEFINED> instruction: 0x00010eb0
   10b94:			; <UNDEFINED> instruction: 0x00010eb0
   10b98:			; <UNDEFINED> instruction: 0x00010eb0
   10b9c:	andeq	r0, r1, r8, lsr #27
   10ba0:			; <UNDEFINED> instruction: 0x00010eb0
   10ba4:			; <UNDEFINED> instruction: 0x00010eb0
   10ba8:			; <UNDEFINED> instruction: 0x00010eb0
   10bac:			; <UNDEFINED> instruction: 0x00010eb0
   10bb0:			; <UNDEFINED> instruction: 0x00010eb0
   10bb4:			; <UNDEFINED> instruction: 0x00010eb0
   10bb8:			; <UNDEFINED> instruction: 0x00010eb0
   10bbc:			; <UNDEFINED> instruction: 0x00010eb0
   10bc0:			; <UNDEFINED> instruction: 0x00010eb0
   10bc4:			; <UNDEFINED> instruction: 0x00010eb0
   10bc8:	andeq	r0, r1, r0, lsr #25
   10bcc:			; <UNDEFINED> instruction: 0x00010eb0
   10bd0:			; <UNDEFINED> instruction: 0x00010eb0
   10bd4:	muleq	r1, r4, ip
   10bd8:	andeq	r0, r1, ip, lsr #24
   10bdc:			; <UNDEFINED> instruction: 0x00010eb0
   10be0:	andeq	r0, r1, r0, lsr #24
   10be4:	andeq	r0, r1, r4, lsl #28
   10be8:			; <UNDEFINED> instruction: 0x00010eb0
   10bec:			; <UNDEFINED> instruction: 0x00010eb0
   10bf0:			; <UNDEFINED> instruction: 0x00010eb0
   10bf4:	andeq	r0, r1, r8, asr #28
   10bf8:			; <UNDEFINED> instruction: 0x00010eb0
   10bfc:			; <UNDEFINED> instruction: 0x00010eb0
   10c00:			; <UNDEFINED> instruction: 0x00010eb0
   10c04:	andeq	r0, r1, ip, lsr lr
   10c08:			; <UNDEFINED> instruction: 0x00010eb0
   10c0c:			; <UNDEFINED> instruction: 0x00010eb0
   10c10:			; <UNDEFINED> instruction: 0x00010eb0
   10c14:			; <UNDEFINED> instruction: 0x00010eb0
   10c18:			; <UNDEFINED> instruction: 0x00010eb0
   10c1c:	andeq	r0, r1, ip, lsr #28
   10c20:	mov	ip, #1
   10c24:	str	ip, [sp, #44]	; 0x2c
   10c28:	b	10af8 <sg_ll_reassign_blocks@plt+0x84>
   10c2c:	ldr	ip, [sp, #16]
   10c30:	movw	r1, #8128	; 0x1fc0
   10c34:	ldr	r2, [sp, #40]	; 0x28
   10c38:	movt	r1, #1
   10c3c:	ldr	r0, [ip]
   10c40:	bl	10a08 <__isoc99_sscanf@plt>
   10c44:	cmp	r0, #1
   10c48:	bne	10c6c <sg_ll_reassign_blocks@plt+0x1f8>
   10c4c:	add	lr, sp, #16384	; 0x4000
   10c50:	movw	r3, #49136	; 0xbff0
   10c54:	add	lr, lr, #88	; 0x58
   10c58:	movt	r3, #65535	; 0xffff
   10c5c:	ldr	r3, [lr, r3]
   10c60:	cmp	r3, #1
   10c64:	str	r3, [sp, #28]
   10c68:	bls	10af8 <sg_ll_reassign_blocks@plt+0x84>
   10c6c:	movw	r3, #12588	; 0x312c
   10c70:	movt	r3, #2
   10c74:	mov	r1, #1
   10c78:	movw	r0, #8132	; 0x1fc4
   10c7c:	ldr	r3, [r3]
   10c80:	mov	r2, #36	; 0x24
   10c84:	movt	r0, #1
   10c88:	mov	r7, r1
   10c8c:	bl	109b4 <fwrite@plt>
   10c90:	b	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   10c94:	mov	ip, #1
   10c98:	str	ip, [sp, #52]	; 0x34
   10c9c:	b	10af8 <sg_ll_reassign_blocks@plt+0x84>
   10ca0:	add	r3, sp, #80	; 0x50
   10ca4:	mov	r1, #0
   10ca8:	mov	r2, #8192	; 0x2000
   10cac:	str	r3, [sp, #56]	; 0x38
   10cb0:	mov	r0, r3
   10cb4:	bl	10a14 <memset@plt>
   10cb8:	ldr	ip, [sp, #16]
   10cbc:	ldr	ip, [ip]
   10cc0:	cmp	ip, #0
   10cc4:	str	ip, [sp, #20]
   10cc8:	beq	10ef0 <sg_ll_reassign_blocks@plt+0x47c>
   10ccc:	ldr	r0, [sp, #20]
   10cd0:	bl	109f0 <strlen@plt>
   10cd4:	ldr	r2, [sp, #20]
   10cd8:	ldrb	r3, [r2]
   10cdc:	cmp	r3, #45	; 0x2d
   10ce0:	mov	r4, r0
   10ce4:	beq	10fe8 <sg_ll_reassign_blocks@plt+0x574>
   10ce8:	movw	r1, #8064	; 0x1f80
   10cec:	ldr	r0, [sp, #20]
   10cf0:	movt	r1, #1
   10cf4:	bl	10a68 <strspn@plt>
   10cf8:	cmp	r4, r0
   10cfc:	bne	10fc4 <sg_ll_reassign_blocks@plt+0x550>
   10d00:	ldr	ip, [sp, #56]	; 0x38
   10d04:	mov	r4, #0
   10d08:	str	r5, [sp, #56]	; 0x38
   10d0c:	sub	r3, ip, #8
   10d10:	ldr	r6, [sp, #20]
   10d14:	str	r8, [sp, #60]	; 0x3c
   10d18:	mov	r5, r3
   10d1c:	b	10d3c <sg_ll_reassign_blocks@plt+0x2c8>
   10d20:	cmp	r0, #0
   10d24:	cmpne	r8, r0
   10d28:	movls	r0, r8
   10d2c:	add	r4, r4, #1
   10d30:	add	r6, r0, #1
   10d34:	cmp	r4, #1024	; 0x400
   10d38:	beq	10fa0 <sg_ll_reassign_blocks@plt+0x52c>
   10d3c:	mov	r0, r6
   10d40:	bl	11ab4 <sg_ll_reassign_blocks@plt+0x1040>
   10d44:	mov	r2, r0
   10d48:	mov	r3, r1
   10d4c:	mvn	r0, #0
   10d50:	mvn	r1, #0
   10d54:	cmp	r3, r1
   10d58:	cmpeq	r2, r0
   10d5c:	beq	111e8 <sg_ll_reassign_blocks@plt+0x774>
   10d60:	strd	r2, [r5, #8]!
   10d64:	mov	r1, #44	; 0x2c
   10d68:	mov	r0, r6
   10d6c:	bl	109fc <strchr@plt>
   10d70:	mov	r1, #32
   10d74:	mov	r8, r0
   10d78:	mov	r0, r6
   10d7c:	bl	109fc <strchr@plt>
   10d80:	cmp	r8, #0
   10d84:	bne	10d20 <sg_ll_reassign_blocks@plt+0x2ac>
   10d88:	cmp	r0, #0
   10d8c:	bne	10d2c <sg_ll_reassign_blocks@plt+0x2b8>
   10d90:	ldr	r5, [sp, #56]	; 0x38
   10d94:	add	r6, r4, #1
   10d98:	ldr	r8, [sp, #60]	; 0x3c
   10d9c:	mov	ip, #1
   10da0:	str	ip, [sp, #20]
   10da4:	b	10af8 <sg_ll_reassign_blocks@plt+0x84>
   10da8:	movw	r1, #12588	; 0x312c
   10dac:	movt	r1, #2
   10db0:	movw	r2, #9392	; 0x24b0
   10db4:	movw	r3, #9408	; 0x24c0
   10db8:	ldr	r0, [r1]
   10dbc:	movt	r2, #1
   10dc0:	movt	r3, #1
   10dc4:	mov	r1, #1
   10dc8:	bl	10a2c <__fprintf_chk@plt>
   10dcc:	mov	r7, #0
   10dd0:	add	r3, sp, #16384	; 0x4000
   10dd4:	mov	r0, r7
   10dd8:	ldr	r2, [r3, #84]	; 0x54
   10ddc:	ldr	r3, [r9]
   10de0:	cmp	r2, r3
   10de4:	bne	11900 <sg_ll_reassign_blocks@plt+0xe8c>
   10de8:	add	sp, sp, #16384	; 0x4000
   10dec:	add	sp, sp, #92	; 0x5c
   10df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10df4:	ldr	ip, [sp, #32]
   10df8:	add	ip, ip, #1
   10dfc:	str	ip, [sp, #32]
   10e00:	b	10af8 <sg_ll_reassign_blocks@plt+0x84>
   10e04:	movw	r3, #12588	; 0x312c
   10e08:	movt	r3, #2
   10e0c:	movw	r0, #8172	; 0x1fec
   10e10:	mov	r1, #1
   10e14:	ldr	r3, [r3]
   10e18:	movw	r2, #1176	; 0x498
   10e1c:	movt	r0, #1
   10e20:	mov	r7, #0
   10e24:	bl	109b4 <fwrite@plt>
   10e28:	b	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   10e2c:	ldr	ip, [sp, #24]
   10e30:	add	ip, ip, #1
   10e34:	str	ip, [sp, #24]
   10e38:	b	10af8 <sg_ll_reassign_blocks@plt+0x84>
   10e3c:	mov	ip, #1
   10e40:	str	ip, [sp, #48]	; 0x30
   10e44:	b	10af8 <sg_ll_reassign_blocks@plt+0x84>
   10e48:	ldr	ip, [sp, #16]
   10e4c:	movw	r1, #8128	; 0x1fc0
   10e50:	ldr	r2, [sp, #40]	; 0x28
   10e54:	movt	r1, #1
   10e58:	ldr	r0, [ip]
   10e5c:	bl	10a08 <__isoc99_sscanf@plt>
   10e60:	cmp	r0, #1
   10e64:	bne	10e88 <sg_ll_reassign_blocks@plt+0x414>
   10e68:	add	lr, sp, #16384	; 0x4000
   10e6c:	movw	r3, #49136	; 0xbff0
   10e70:	add	lr, lr, #88	; 0x58
   10e74:	movt	r3, #65535	; 0xffff
   10e78:	ldr	r3, [lr, r3]
   10e7c:	cmp	r3, #1
   10e80:	str	r3, [sp, #36]	; 0x24
   10e84:	bls	10af8 <sg_ll_reassign_blocks@plt+0x84>
   10e88:	movw	r3, #12588	; 0x312c
   10e8c:	movt	r3, #2
   10e90:	mov	r1, #1
   10e94:	movw	r0, #9352	; 0x2488
   10e98:	ldr	r3, [r3]
   10e9c:	mov	r2, #39	; 0x27
   10ea0:	movt	r0, #1
   10ea4:	mov	r7, r1
   10ea8:	bl	109b4 <fwrite@plt>
   10eac:	b	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   10eb0:	movw	r4, #12588	; 0x312c
   10eb4:	movt	r4, #2
   10eb8:	mov	r3, r0
   10ebc:	movw	r2, #9424	; 0x24d0
   10ec0:	mov	r1, #1
   10ec4:	ldr	r0, [r4]
   10ec8:	movt	r2, #1
   10ecc:	mov	r7, r1
   10ed0:	bl	10a2c <__fprintf_chk@plt>
   10ed4:	ldr	r3, [r4]
   10ed8:	movw	r0, #8172	; 0x1fec
   10edc:	mov	r1, r7
   10ee0:	movw	r2, #1176	; 0x498
   10ee4:	movt	r0, #1
   10ee8:	bl	109b4 <fwrite@plt>
   10eec:	b	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   10ef0:	movw	r8, #12588	; 0x312c
   10ef4:	movt	r8, #2
   10ef8:	mov	r1, #1
   10efc:	ldr	r3, [r8]
   10f00:	movw	r0, #10408	; 0x28a8
   10f04:	mov	r2, #28
   10f08:	movt	r0, #1
   10f0c:	mov	r7, r1
   10f10:	bl	109b4 <fwrite@plt>
   10f14:	b	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   10f18:	movw	r4, #12584	; 0x3128
   10f1c:	movt	r4, #2
   10f20:	ldr	r2, [r4]
   10f24:	cmp	sl, r2
   10f28:	ble	111ac <sg_ll_reassign_blocks@plt+0x738>
   10f2c:	add	r3, r2, #1
   10f30:	ldr	fp, [r5, r2, lsl #2]
   10f34:	cmp	sl, r3
   10f38:	str	r3, [r4]
   10f3c:	ble	11214 <sg_ll_reassign_blocks@plt+0x7a0>
   10f40:	movw	r8, #12588	; 0x312c
   10f44:	movt	r8, #2
   10f48:	ldr	r3, [r5, r3, lsl #2]
   10f4c:	movw	r2, #9484	; 0x250c
   10f50:	ldr	r0, [r8]
   10f54:	movt	r2, #1
   10f58:	mov	r1, #1
   10f5c:	movw	r6, #12588	; 0x312c
   10f60:	bl	10a2c <__fprintf_chk@plt>
   10f64:	ldr	r3, [r4]
   10f68:	movt	r6, #2
   10f6c:	add	r3, r3, #1
   10f70:	str	r3, [r4]
   10f74:	cmp	sl, r3
   10f78:	bgt	10f48 <sg_ll_reassign_blocks@plt+0x4d4>
   10f7c:	mov	r1, #1
   10f80:	ldr	r3, [r6]
   10f84:	movw	r0, #8172	; 0x1fec
   10f88:	movw	r2, #1176	; 0x498
   10f8c:	movt	r0, #1
   10f90:	mov	r7, r1
   10f94:	bl	109b4 <fwrite@plt>
   10f98:	b	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   10f9c:	ldr	r9, [sp, #20]
   10fa0:	movw	r8, #12588	; 0x312c
   10fa4:	movt	r8, #2
   10fa8:	movw	r0, #7980	; 0x1f2c
   10fac:	mov	r1, #1
   10fb0:	ldr	r3, [r8]
   10fb4:	mov	r2, #37	; 0x25
   10fb8:	movt	r0, #1
   10fbc:	bl	109b4 <fwrite@plt>
   10fc0:	b	10ef8 <sg_ll_reassign_blocks@plt+0x484>
   10fc4:	movw	r8, #12588	; 0x312c
   10fc8:	movt	r8, #2
   10fcc:	add	r3, r0, #1
   10fd0:	movw	r2, #8096	; 0x1fa0
   10fd4:	ldr	r0, [r8]
   10fd8:	movt	r2, #1
   10fdc:	mov	r1, #1
   10fe0:	bl	10a2c <__fprintf_chk@plt>
   10fe4:	b	10ef8 <sg_ll_reassign_blocks@plt+0x484>
   10fe8:	mov	r6, #0
   10fec:	movw	r4, #12592	; 0x3130
   10ff0:	movt	r4, #2
   10ff4:	str	sl, [sp, #60]	; 0x3c
   10ff8:	mov	sl, r6
   10ffc:	str	r5, [sp, #64]	; 0x40
   11000:	str	r9, [sp, #20]
   11004:	str	r8, [sp, #68]	; 0x44
   11008:	mov	r0, r7
   1100c:	mov	r1, #512	; 0x200
   11010:	ldr	r2, [r4]
   11014:	bl	10990 <fgets@plt>
   11018:	cmp	r0, #0
   1101c:	beq	11140 <sg_ll_reassign_blocks@plt+0x6cc>
   11020:	mov	r0, r7
   11024:	bl	109f0 <strlen@plt>
   11028:	subs	r9, r0, #0
   1102c:	ble	111a0 <sg_ll_reassign_blocks@plt+0x72c>
   11030:	sub	r3, r9, #1
   11034:	ldrb	r2, [r7, r3]
   11038:	cmp	r2, #10
   1103c:	beq	11194 <sg_ll_reassign_blocks@plt+0x720>
   11040:	mov	r8, #0
   11044:	b	1104c <sg_ll_reassign_blocks@plt+0x5d8>
   11048:	add	r8, r8, #1
   1104c:	ldrb	r1, [r8, r7]
   11050:	add	r5, r8, r7
   11054:	cmp	r1, #32
   11058:	beq	11048 <sg_ll_reassign_blocks@plt+0x5d4>
   1105c:	cmp	r1, #9
   11060:	beq	11048 <sg_ll_reassign_blocks@plt+0x5d4>
   11064:	cmp	r9, r8
   11068:	beq	11134 <sg_ll_reassign_blocks@plt+0x6c0>
   1106c:	cmp	r1, #35	; 0x23
   11070:	beq	11134 <sg_ll_reassign_blocks@plt+0x6c0>
   11074:	movw	r1, #7900	; 0x1edc
   11078:	mov	r0, r5
   1107c:	movt	r1, #1
   11080:	bl	10a68 <strspn@plt>
   11084:	rsb	ip, r8, r9
   11088:	cmp	ip, r0
   1108c:	ble	1109c <sg_ll_reassign_blocks@plt+0x628>
   11090:	ldrb	r1, [r5, r0]
   11094:	cmp	r1, #35	; 0x23
   11098:	bne	1175c <sg_ll_reassign_blocks@plt+0xce8>
   1109c:	sub	ip, r6, #-536870911	; 0xe0000001
   110a0:	ldr	r3, [sp, #56]	; 0x38
   110a4:	mov	r8, #0
   110a8:	add	r9, r3, ip, lsl #3
   110ac:	mov	r0, r5
   110b0:	bl	11ab4 <sg_ll_reassign_blocks@plt+0x1040>
   110b4:	mvn	r2, #0
   110b8:	mvn	r3, #0
   110bc:	cmp	r1, r3
   110c0:	cmpeq	r0, r2
   110c4:	beq	111d4 <sg_ll_reassign_blocks@plt+0x760>
   110c8:	add	r3, r6, r8
   110cc:	cmp	r3, #1024	; 0x400
   110d0:	bge	10f9c <sg_ll_reassign_blocks@plt+0x528>
   110d4:	ldrb	r3, [r5]
   110d8:	strd	r0, [r9, #8]!
   110dc:	cmp	r3, #0
   110e0:	beq	1112c <sg_ll_reassign_blocks@plt+0x6b8>
   110e4:	cmp	r3, #32
   110e8:	beq	11154 <sg_ll_reassign_blocks@plt+0x6e0>
   110ec:	cmp	r3, #44	; 0x2c
   110f0:	beq	11154 <sg_ll_reassign_blocks@plt+0x6e0>
   110f4:	cmp	r3, #9
   110f8:	beq	11154 <sg_ll_reassign_blocks@plt+0x6e0>
   110fc:	add	r2, r5, #1
   11100:	b	1111c <sg_ll_reassign_blocks@plt+0x6a8>
   11104:	cmp	r3, #32
   11108:	beq	11154 <sg_ll_reassign_blocks@plt+0x6e0>
   1110c:	cmp	r3, #44	; 0x2c
   11110:	beq	11154 <sg_ll_reassign_blocks@plt+0x6e0>
   11114:	cmp	r3, #9
   11118:	beq	11154 <sg_ll_reassign_blocks@plt+0x6e0>
   1111c:	mov	r5, r2
   11120:	ldrb	r3, [r2], #1
   11124:	cmp	r3, #0
   11128:	bne	11104 <sg_ll_reassign_blocks@plt+0x690>
   1112c:	add	r2, r8, #1
   11130:	add	r6, r6, r2
   11134:	add	sl, sl, #1
   11138:	cmp	sl, #512	; 0x200
   1113c:	bne	11008 <sg_ll_reassign_blocks@plt+0x594>
   11140:	ldr	sl, [sp, #60]	; 0x3c
   11144:	ldr	r5, [sp, #64]	; 0x40
   11148:	ldr	r9, [sp, #20]
   1114c:	ldr	r8, [sp, #68]	; 0x44
   11150:	b	10d9c <sg_ll_reassign_blocks@plt+0x328>
   11154:	mov	r2, r5
   11158:	mov	r5, r2
   1115c:	add	r2, r2, #1
   11160:	ldrb	r3, [r5]
   11164:	cmp	r3, #32
   11168:	beq	11158 <sg_ll_reassign_blocks@plt+0x6e4>
   1116c:	cmp	r3, #44	; 0x2c
   11170:	beq	11158 <sg_ll_reassign_blocks@plt+0x6e4>
   11174:	cmp	r3, #9
   11178:	beq	11158 <sg_ll_reassign_blocks@plt+0x6e4>
   1117c:	cmp	r3, #0
   11180:	beq	1112c <sg_ll_reassign_blocks@plt+0x6b8>
   11184:	add	r8, r8, #1
   11188:	cmp	r8, #1024	; 0x400
   1118c:	bne	110ac <sg_ll_reassign_blocks@plt+0x638>
   11190:	b	1112c <sg_ll_reassign_blocks@plt+0x6b8>
   11194:	mov	r9, r3
   11198:	mov	ip, #0
   1119c:	strb	ip, [r7, r3]
   111a0:	cmp	r9, #0
   111a4:	beq	11134 <sg_ll_reassign_blocks@plt+0x6c0>
   111a8:	b	11040 <sg_ll_reassign_blocks@plt+0x5cc>
   111ac:	movw	r4, #12588	; 0x312c
   111b0:	movt	r4, #2
   111b4:	movw	r0, #9460	; 0x24f4
   111b8:	movt	r0, #1
   111bc:	ldr	r3, [r4]
   111c0:	mov	r1, #1
   111c4:	mov	r2, #21
   111c8:	mov	r7, r1
   111cc:	bl	109b4 <fwrite@plt>
   111d0:	b	10ed4 <sg_ll_reassign_blocks@plt+0x460>
   111d4:	ldrb	r1, [r5]
   111d8:	cmp	r1, #35	; 0x23
   111dc:	bne	11904 <sg_ll_reassign_blocks@plt+0xe90>
   111e0:	sub	r8, r8, #1
   111e4:	b	1112c <sg_ll_reassign_blocks@plt+0x6b8>
   111e8:	ldr	r2, [sp, #20]
   111ec:	movw	r8, #12588	; 0x312c
   111f0:	movt	r8, #2
   111f4:	mov	r1, #1
   111f8:	rsb	r3, r2, r6
   111fc:	movw	r2, #8096	; 0x1fa0
   11200:	add	r3, r3, #1
   11204:	ldr	r0, [r8]
   11208:	movt	r2, #1
   1120c:	bl	10a2c <__fprintf_chk@plt>
   11210:	b	10ef8 <sg_ll_reassign_blocks@plt+0x484>
   11214:	cmp	fp, #0
   11218:	beq	111ac <sg_ll_reassign_blocks@plt+0x738>
   1121c:	ldr	ip, [sp, #44]	; 0x2c
   11220:	ldr	lr, [sp, #48]	; 0x30
   11224:	orrs	r7, ip, lr
   11228:	ldr	ip, [sp, #20]
   1122c:	beq	11390 <sg_ll_reassign_blocks@plt+0x91c>
   11230:	cmp	ip, #0
   11234:	bne	11694 <sg_ll_reassign_blocks@plt+0xc20>
   11238:	mov	r0, fp
   1123c:	ldr	r1, [sp, #20]
   11240:	ldr	r2, [sp, #24]
   11244:	bl	10a44 <sg_cmds_open_device@plt>
   11248:	subs	r8, r0, #0
   1124c:	blt	1165c <sg_ll_reassign_blocks@plt+0xbe8>
   11250:	ldr	r1, [sp, #20]
   11254:	add	ip, sp, #8256	; 0x2040
   11258:	ldr	r2, [sp, #24]
   1125c:	add	ip, ip, #24
   11260:	ldr	lr, [sp, #20]
   11264:	mov	r3, #4
   11268:	str	r1, [sp, #8]
   1126c:	sub	r5, ip, #8
   11270:	str	r2, [sp, #12]
   11274:	str	r3, [sp, #4]
   11278:	str	r5, [sp]
   1127c:	ldr	r1, [sp, #48]	; 0x30
   11280:	ldr	r2, [sp, #44]	; 0x2c
   11284:	str	lr, [ip, #-8]
   11288:	bl	10a50 <sg_ll_read_defect10@plt>
   1128c:	movw	r3, #49136	; 0xbff0
   11290:	movt	r3, #65535	; 0xffff
   11294:	mov	r7, r0
   11298:	cmp	r0, #2
   1129c:	add	r0, sp, #16384	; 0x4000
   112a0:	add	r0, r0, #88	; 0x58
   112a4:	str	r7, [r0, r3]
   112a8:	beq	1195c <sg_ll_reassign_blocks@plt+0xee8>
   112ac:	cmp	r7, #9
   112b0:	beq	11938 <sg_ll_reassign_blocks@plt+0xec4>
   112b4:	cmp	r7, #5
   112b8:	beq	118dc <sg_ll_reassign_blocks@plt+0xe68>
   112bc:	cmp	r7, #0
   112c0:	bne	118b8 <sg_ll_reassign_blocks@plt+0xe44>
   112c4:	ldr	ip, [sp, #32]
   112c8:	cmp	ip, #0
   112cc:	bne	118a4 <sg_ll_reassign_blocks@plt+0xe30>
   112d0:	ldrb	r2, [r5, #1]
   112d4:	ubfx	r1, r2, #3, #1
   112d8:	ubfx	r3, r2, #4, #1
   112dc:	tst	r3, r1
   112e0:	bne	116b4 <sg_ll_reassign_blocks@plt+0xc40>
   112e4:	cmp	r1, #0
   112e8:	bne	117e4 <sg_ll_reassign_blocks@plt+0xd70>
   112ec:	cmp	r3, #0
   112f0:	movwne	r4, #7864	; 0x1eb8
   112f4:	movtne	r4, #1
   112f8:	beq	117c0 <sg_ll_reassign_blocks@plt+0xd4c>
   112fc:	ldr	ip, [sp, #24]
   11300:	cmp	ip, #0
   11304:	bne	11794 <sg_ll_reassign_blocks@plt+0xd20>
   11308:	ldrb	r3, [r5, #1]
   1130c:	ands	r3, r3, #7
   11310:	beq	116fc <sg_ll_reassign_blocks@plt+0xc88>
   11314:	sub	r2, r3, #3
   11318:	cmp	r2, #2
   1131c:	bls	11730 <sg_ll_reassign_blocks@plt+0xcbc>
   11320:	movw	r1, #12588	; 0x312c
   11324:	movt	r1, #2
   11328:	movw	r2, #10256	; 0x2810
   1132c:	movt	r2, #1
   11330:	ldr	r0, [r1]
   11334:	mov	r1, #1
   11338:	bl	10a2c <__fprintf_chk@plt>
   1133c:	ldrb	r2, [r5, #2]
   11340:	ldrb	r3, [r5, #3]
   11344:	adds	r3, r3, r2, lsl #8
   11348:	beq	11744 <sg_ll_reassign_blocks@plt+0xcd0>
   1134c:	movw	r1, #10312	; 0x2848
   11350:	mov	r2, r4
   11354:	mov	r0, #1
   11358:	movt	r1, #1
   1135c:	bl	10a20 <__printf_chk@plt>
   11360:	mov	r0, r8
   11364:	bl	1099c <sg_cmds_close_device@plt>
   11368:	add	r1, sp, #16384	; 0x4000
   1136c:	movw	r3, #49136	; 0xbff0
   11370:	add	r1, r1, #88	; 0x58
   11374:	movt	r3, #65535	; 0xffff
   11378:	cmp	r0, #0
   1137c:	str	r0, [r1, r3]
   11380:	blt	116c0 <sg_ll_reassign_blocks@plt+0xc4c>
   11384:	cmp	r7, #0
   11388:	movlt	r7, #99	; 0x63
   1138c:	b	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   11390:	cmp	ip, #0
   11394:	beq	11578 <sg_ll_reassign_blocks@plt+0xb04>
   11398:	cmp	r6, #0
   1139c:	beq	11578 <sg_ll_reassign_blocks@plt+0xb04>
   113a0:	ldr	lr, [sp, #28]
   113a4:	add	sl, sp, #80	; 0x50
   113a8:	mov	ip, r7
   113ac:	mvn	r0, #1
   113b0:	mov	r1, #0
   113b4:	lsl	r3, ip, #3
   113b8:	ldrd	r2, [r3, sl]
   113bc:	cmp	r3, r1
   113c0:	cmpeq	r2, r0
   113c4:	bls	113d8 <sg_ll_reassign_blocks@plt+0x964>
   113c8:	cmn	lr, #1
   113cc:	beq	11650 <sg_ll_reassign_blocks@plt+0xbdc>
   113d0:	cmp	lr, #0
   113d4:	beq	11628 <sg_ll_reassign_blocks@plt+0xbb4>
   113d8:	add	ip, ip, #1
   113dc:	cmp	ip, r6
   113e0:	blt	113b4 <sg_ll_reassign_blocks@plt+0x940>
   113e4:	ldr	ip, [sp, #28]
   113e8:	cmn	ip, #1
   113ec:	moveq	ip, #0
   113f0:	str	ip, [sp, #28]
   113f4:	add	r5, sp, #8256	; 0x2040
   113f8:	lsl	ip, r6, #3
   113fc:	add	r5, r5, #16
   11400:	mov	r3, #0
   11404:	mov	r4, #4
   11408:	ldr	lr, [sp, #28]
   1140c:	str	r7, [sp, #16]
   11410:	b	11460 <sg_ll_reassign_blocks@plt+0x9ec>
   11414:	ldr	r2, [r1, r3]!
   11418:	add	r0, sp, #16384	; 0x4000
   1141c:	add	r3, r3, #8
   11420:	add	r0, r0, #88	; 0x58
   11424:	cmp	r3, ip
   11428:	add	r1, r0, r4
   1142c:	add	r0, r4, #3
   11430:	sub	r1, r1, #8192	; 0x2000
   11434:	lsr	r7, r2, #24
   11438:	strb	r7, [r5, r4]
   1143c:	lsr	r7, r2, #16
   11440:	add	r4, r4, #4
   11444:	strb	r7, [r1, #-7]
   11448:	lsr	r7, r2, #8
   1144c:	strb	r7, [r1, #-6]
   11450:	movw	r1, #57336	; 0xdff8
   11454:	strb	r2, [r5, r0]
   11458:	movt	r1, #65535	; 0xffff
   1145c:	beq	114ac <sg_ll_reassign_blocks@plt+0xa38>
   11460:	cmp	lr, #0
   11464:	mov	r1, sl
   11468:	beq	11414 <sg_ll_reassign_blocks@plt+0x9a0>
   1146c:	add	r2, sp, #16384	; 0x4000
   11470:	add	r7, r4, #3
   11474:	add	r2, r2, #88	; 0x58
   11478:	add	r0, r2, r4
   1147c:	ldr	r2, [r1, r3]!
   11480:	sub	r0, r0, #8192	; 0x2000
   11484:	ldr	r1, [r1, #4]
   11488:	lsr	r8, r1, #24
   1148c:	strb	r8, [r5, r4]
   11490:	lsr	r8, r1, #16
   11494:	add	r4, r4, #4
   11498:	strb	r8, [r0, #-7]
   1149c:	lsr	r8, r1, #8
   114a0:	strb	r8, [r0, #-6]
   114a4:	strb	r1, [r5, r7]
   114a8:	b	11418 <sg_ll_reassign_blocks@plt+0x9a4>
   114ac:	ldr	ip, [sp, #36]	; 0x24
   114b0:	sub	r3, r4, #4
   114b4:	ldr	r7, [sp, #16]
   114b8:	cmp	ip, #0
   114bc:	beq	114d8 <sg_ll_reassign_blocks@plt+0xa64>
   114c0:	add	lr, sp, #16384	; 0x4000
   114c4:	lsr	r2, r3, #24
   114c8:	add	lr, lr, #88	; 0x58
   114cc:	strb	r2, [lr, r1]
   114d0:	asr	r2, r3, #16
   114d4:	strb	r2, [r5, #1]
   114d8:	mov	r0, fp
   114dc:	mov	r1, #0
   114e0:	ldr	r2, [sp, #24]
   114e4:	strb	r3, [r5, #3]
   114e8:	asr	r3, r3, #8
   114ec:	strb	r3, [r5, #2]
   114f0:	bl	10a44 <sg_cmds_open_device@plt>
   114f4:	subs	r8, r0, #0
   114f8:	blt	1165c <sg_ll_reassign_blocks@plt+0xbe8>
   114fc:	ldr	ip, [sp, #52]	; 0x34
   11500:	cmp	ip, #0
   11504:	beq	11598 <sg_ll_reassign_blocks@plt+0xb24>
   11508:	movw	r4, #12588	; 0x312c
   1150c:	movt	r4, #2
   11510:	movw	r0, #9700	; 0x25e4
   11514:	mov	r1, #1
   11518:	ldr	r3, [r4]
   1151c:	movt	r0, #1
   11520:	mov	r2, #40	; 0x28
   11524:	bl	109b4 <fwrite@plt>
   11528:	ldr	ip, [sp, #24]
   1152c:	cmp	ip, #0
   11530:	beq	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   11534:	ldr	r3, [r4]
   11538:	movw	r0, #9744	; 0x2610
   1153c:	mov	r1, #1
   11540:	movt	r0, #1
   11544:	mov	r2, #38	; 0x26
   11548:	mov	r4, #0
   1154c:	bl	109b4 <fwrite@plt>
   11550:	lsl	r3, r4, #3
   11554:	movw	r1, #9784	; 0x2638
   11558:	add	r4, r4, #1
   1155c:	movt	r1, #1
   11560:	ldrd	r2, [r3, sl]
   11564:	mov	r0, #1
   11568:	bl	10a20 <__printf_chk@plt>
   1156c:	cmp	r4, r6
   11570:	blt	11550 <sg_ll_reassign_blocks@plt+0xadc>
   11574:	b	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   11578:	movw	r4, #12588	; 0x312c
   1157c:	movt	r4, #2
   11580:	movw	r0, #9572	; 0x2564
   11584:	mov	r1, #1
   11588:	ldr	r3, [r4]
   1158c:	movt	r0, #1
   11590:	mov	r2, #45	; 0x2d
   11594:	b	111c8 <sg_ll_reassign_blocks@plt+0x754>
   11598:	ldr	ip, [sp, #24]
   1159c:	mov	r3, r5
   115a0:	str	r4, [sp]
   115a4:	mov	r4, #1
   115a8:	ldr	r1, [sp, #28]
   115ac:	str	ip, [sp, #8]
   115b0:	ldr	r2, [sp, #36]	; 0x24
   115b4:	str	r4, [sp, #4]
   115b8:	bl	10a74 <sg_ll_reassign_blocks@plt>
   115bc:	add	lr, sp, #16384	; 0x4000
   115c0:	movw	r3, #49136	; 0xbff0
   115c4:	add	lr, lr, #88	; 0x58
   115c8:	movt	r3, #65535	; 0xffff
   115cc:	cmp	r0, #2
   115d0:	mov	r7, r0
   115d4:	str	r0, [lr, r3]
   115d8:	beq	1185c <sg_ll_reassign_blocks@plt+0xde8>
   115dc:	cmp	r0, #6
   115e0:	beq	11838 <sg_ll_reassign_blocks@plt+0xdc4>
   115e4:	cmp	r0, #11
   115e8:	beq	11814 <sg_ll_reassign_blocks@plt+0xda0>
   115ec:	cmp	r0, #9
   115f0:	beq	117f0 <sg_ll_reassign_blocks@plt+0xd7c>
   115f4:	cmp	r0, #5
   115f8:	beq	11880 <sg_ll_reassign_blocks@plt+0xe0c>
   115fc:	cmp	r0, #0
   11600:	beq	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   11604:	movw	r3, #12588	; 0x312c
   11608:	movt	r3, #2
   1160c:	mov	r1, r4
   11610:	movw	r0, #9980	; 0x26fc
   11614:	ldr	r3, [r3]
   11618:	mov	r2, #23
   1161c:	movt	r0, #1
   11620:	bl	109b4 <fwrite@plt>
   11624:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   11628:	movw	r1, #12588	; 0x312c
   1162c:	movt	r1, #2
   11630:	add	r3, ip, #1
   11634:	movw	r2, #9620	; 0x2594
   11638:	ldr	r0, [r1]
   1163c:	movt	r2, #1
   11640:	mov	r1, #1
   11644:	mov	r7, r1
   11648:	bl	10a2c <__fprintf_chk@plt>
   1164c:	b	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   11650:	mov	ip, #1
   11654:	str	ip, [sp, #28]
   11658:	b	113f4 <sg_ll_reassign_blocks@plt+0x980>
   1165c:	movw	r3, #12588	; 0x312c
   11660:	movt	r3, #2
   11664:	rsb	r0, r8, #0
   11668:	mov	r7, #15
   1166c:	ldr	r4, [r3]
   11670:	bl	10a38 <safe_strerror@plt>
   11674:	mov	r3, fp
   11678:	movw	r2, #9680	; 0x25d0
   1167c:	mov	r1, #1
   11680:	movt	r2, #1
   11684:	str	r0, [sp]
   11688:	mov	r0, r4
   1168c:	bl	10a2c <__fprintf_chk@plt>
   11690:	b	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   11694:	movw	r4, #12588	; 0x312c
   11698:	movt	r4, #2
   1169c:	movw	r0, #9516	; 0x252c
   116a0:	mov	r1, #1
   116a4:	ldr	r3, [r4]
   116a8:	movt	r0, #1
   116ac:	mov	r2, #54	; 0x36
   116b0:	b	111c8 <sg_ll_reassign_blocks@plt+0x754>
   116b4:	movw	r4, #7812	; 0x1e84
   116b8:	movt	r4, #1
   116bc:	b	112fc <sg_ll_reassign_blocks@plt+0x888>
   116c0:	movw	r3, #12588	; 0x312c
   116c4:	movt	r3, #2
   116c8:	rsb	r0, r0, #0
   116cc:	ldr	r4, [r3]
   116d0:	bl	10a38 <safe_strerror@plt>
   116d4:	movw	r2, #10388	; 0x2894
   116d8:	mov	r1, #1
   116dc:	movt	r2, #1
   116e0:	mov	r3, r0
   116e4:	mov	r0, r4
   116e8:	bl	10a2c <__fprintf_chk@plt>
   116ec:	cmp	r7, #0
   116f0:	bne	11384 <sg_ll_reassign_blocks@plt+0x910>
   116f4:	mov	r7, #15
   116f8:	b	10dd0 <sg_ll_reassign_blocks@plt+0x35c>
   116fc:	ldrb	r0, [r5, #2]
   11700:	ldrb	r3, [r5, #3]
   11704:	adds	r0, r3, r0, lsl #8
   11708:	movne	r1, #4
   1170c:	beq	11744 <sg_ll_reassign_blocks@plt+0xcd0>
   11710:	bl	11b90 <sg_ll_reassign_blocks@plt+0x111c>
   11714:	mov	r2, r4
   11718:	movw	r1, #10364	; 0x287c
   1171c:	movt	r1, #1
   11720:	mov	r3, r0
   11724:	mov	r0, #1
   11728:	bl	10a20 <__printf_chk@plt>
   1172c:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   11730:	ldrb	r0, [r5, #2]
   11734:	ldrb	r3, [r5, #3]
   11738:	adds	r0, r3, r0, lsl #8
   1173c:	movne	r1, #8
   11740:	bne	11710 <sg_ll_reassign_blocks@plt+0xc9c>
   11744:	mov	r2, r4
   11748:	movw	r1, #10288	; 0x2830
   1174c:	mov	r0, #1
   11750:	movt	r1, #1
   11754:	bl	10a20 <__printf_chk@plt>
   11758:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   1175c:	mov	r2, r8
   11760:	movw	r8, #12588	; 0x312c
   11764:	movt	r8, #2
   11768:	add	r2, r2, r0
   1176c:	add	r2, r2, #1
   11770:	add	r3, sl, #1
   11774:	ldr	r0, [r8]
   11778:	mov	r1, #1
   1177c:	str	r2, [sp]
   11780:	movw	r2, #7932	; 0x1efc
   11784:	movt	r2, #1
   11788:	ldr	r9, [sp, #20]
   1178c:	bl	10a2c <__fprintf_chk@plt>
   11790:	b	10ef8 <sg_ll_reassign_blocks@plt+0x484>
   11794:	movw	r3, #12588	; 0x312c
   11798:	movt	r3, #2
   1179c:	and	r1, r2, #7
   117a0:	movw	r2, #10212	; 0x27e4
   117a4:	str	r1, [sp]
   117a8:	movt	r2, #1
   117ac:	ldr	r0, [r3]
   117b0:	mov	r1, #1
   117b4:	mov	r3, #4
   117b8:	bl	10a2c <__fprintf_chk@plt>
   117bc:	b	11308 <sg_ll_reassign_blocks@plt+0x894>
   117c0:	movw	r3, #12588	; 0x312c
   117c4:	movt	r3, #2
   117c8:	movw	r0, #10164	; 0x27b4
   117cc:	mov	r1, #1
   117d0:	ldr	r3, [r3]
   117d4:	mov	r2, #45	; 0x2d
   117d8:	movt	r0, #1
   117dc:	bl	109b4 <fwrite@plt>
   117e0:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   117e4:	movw	r4, #7844	; 0x1ea4
   117e8:	movt	r4, #1
   117ec:	b	112fc <sg_ll_reassign_blocks@plt+0x888>
   117f0:	movw	r3, #12588	; 0x312c
   117f4:	movt	r3, #2
   117f8:	mov	r1, r4
   117fc:	movw	r0, #9912	; 0x26b8
   11800:	ldr	r3, [r3]
   11804:	mov	r2, #30
   11808:	movt	r0, #1
   1180c:	bl	109b4 <fwrite@plt>
   11810:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   11814:	movw	r3, #12588	; 0x312c
   11818:	movt	r3, #2
   1181c:	mov	r1, r4
   11820:	movw	r0, #9876	; 0x2694
   11824:	ldr	r3, [r3]
   11828:	mov	r2, #33	; 0x21
   1182c:	movt	r0, #1
   11830:	bl	109b4 <fwrite@plt>
   11834:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   11838:	movw	r3, #12588	; 0x312c
   1183c:	movt	r3, #2
   11840:	mov	r1, r4
   11844:	movw	r0, #9840	; 0x2670
   11848:	ldr	r3, [r3]
   1184c:	mov	r2, #32
   11850:	movt	r0, #1
   11854:	bl	109b4 <fwrite@plt>
   11858:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   1185c:	movw	r3, #12588	; 0x312c
   11860:	movt	r3, #2
   11864:	mov	r1, r4
   11868:	movw	r0, #9796	; 0x2644
   1186c:	ldr	r3, [r3]
   11870:	mov	r2, #41	; 0x29
   11874:	movt	r0, #1
   11878:	bl	109b4 <fwrite@plt>
   1187c:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   11880:	movw	r3, #12588	; 0x312c
   11884:	movt	r3, #2
   11888:	mov	r1, r4
   1188c:	movw	r0, #9944	; 0x26d8
   11890:	ldr	r3, [r3]
   11894:	mov	r2, #33	; 0x21
   11898:	movt	r0, #1
   1189c:	bl	109b4 <fwrite@plt>
   118a0:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   118a4:	mov	r0, r5
   118a8:	mov	r1, #4
   118ac:	mov	r2, #1
   118b0:	bl	10984 <dStrHex@plt>
   118b4:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   118b8:	movw	r3, #12588	; 0x312c
   118bc:	movt	r3, #2
   118c0:	movw	r0, #10132	; 0x2794
   118c4:	mov	r1, #1
   118c8:	ldr	r3, [r3]
   118cc:	mov	r2, #29
   118d0:	movt	r0, #1
   118d4:	bl	109b4 <fwrite@plt>
   118d8:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   118dc:	movw	r3, #12588	; 0x312c
   118e0:	movt	r3, #2
   118e4:	movw	r0, #10092	; 0x276c
   118e8:	mov	r1, #1
   118ec:	ldr	r3, [r3]
   118f0:	mov	r2, #39	; 0x27
   118f4:	movt	r0, #1
   118f8:	bl	109b4 <fwrite@plt>
   118fc:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   11900:	bl	109a8 <__stack_chk_fail@plt>
   11904:	movw	r8, #12588	; 0x312c
   11908:	movt	r8, #2
   1190c:	rsb	r2, r7, r5
   11910:	add	r3, sl, #1
   11914:	add	r2, r2, #1
   11918:	ldr	r0, [r8]
   1191c:	mov	r1, #1
   11920:	str	r2, [sp]
   11924:	movw	r2, #8020	; 0x1f54
   11928:	movt	r2, #1
   1192c:	ldr	r9, [sp, #20]
   11930:	bl	10a2c <__fprintf_chk@plt>
   11934:	b	10ef8 <sg_ll_reassign_blocks@plt+0x484>
   11938:	movw	r3, #12588	; 0x312c
   1193c:	movt	r3, #2
   11940:	movw	r0, #10052	; 0x2744
   11944:	mov	r1, #1
   11948:	ldr	r3, [r3]
   1194c:	mov	r2, #36	; 0x24
   11950:	movt	r0, #1
   11954:	bl	109b4 <fwrite@plt>
   11958:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   1195c:	movw	r3, #12588	; 0x312c
   11960:	movt	r3, #2
   11964:	movw	r0, #10004	; 0x2714
   11968:	mov	r1, #1
   1196c:	ldr	r3, [r3]
   11970:	mov	r2, #47	; 0x2f
   11974:	movt	r0, #1
   11978:	bl	109b4 <fwrite@plt>
   1197c:	b	11360 <sg_ll_reassign_blocks@plt+0x8ec>
   11980:	mov	fp, #0
   11984:	mov	lr, #0
   11988:	pop	{r1}		; (ldr r1, [sp], #4)
   1198c:	mov	r2, sp
   11990:	push	{r2}		; (str r2, [sp, #-4]!)
   11994:	push	{r0}		; (str r0, [sp, #-4]!)
   11998:	ldr	ip, [pc, #16]	; 119b0 <sg_ll_reassign_blocks@plt+0xf3c>
   1199c:	push	{ip}		; (str ip, [sp, #-4]!)
   119a0:	ldr	r0, [pc, #12]	; 119b4 <sg_ll_reassign_blocks@plt+0xf40>
   119a4:	ldr	r3, [pc, #12]	; 119b8 <sg_ll_reassign_blocks@plt+0xf44>
   119a8:	bl	109c0 <__libc_start_main@plt>
   119ac:	bl	10a5c <abort@plt>
   119b0:	andeq	r1, r1, r4, asr #28
   119b4:	andeq	r0, r1, r0, lsl #21
   119b8:	andeq	r1, r1, r0, ror #27
   119bc:	ldr	r3, [pc, #20]	; 119d8 <sg_ll_reassign_blocks@plt+0xf64>
   119c0:	ldr	r2, [pc, #20]	; 119dc <sg_ll_reassign_blocks@plt+0xf68>
   119c4:	add	r3, pc, r3
   119c8:	ldr	r2, [r3, r2]
   119cc:	cmp	r2, #0
   119d0:	bxeq	lr
   119d4:	b	109d8 <__gmon_start__@plt>
   119d8:	andeq	r1, r1, r4, lsr r6
   119dc:	andeq	r0, r0, r4, rrx
   119e0:	push	{r3, lr}
   119e4:	movw	r0, #12572	; 0x311c
   119e8:	ldr	r3, [pc, #36]	; 11a14 <sg_ll_reassign_blocks@plt+0xfa0>
   119ec:	movt	r0, #2
   119f0:	rsb	r3, r0, r3
   119f4:	cmp	r3, #6
   119f8:	popls	{r3, pc}
   119fc:	movw	r3, #0
   11a00:	movt	r3, #0
   11a04:	cmp	r3, #0
   11a08:	popeq	{r3, pc}
   11a0c:	blx	r3
   11a10:	pop	{r3, pc}
   11a14:	andeq	r3, r2, pc, lsl r1
   11a18:	push	{r3, lr}
   11a1c:	movw	r0, #12572	; 0x311c
   11a20:	movw	r3, #12572	; 0x311c
   11a24:	movt	r0, #2
   11a28:	movt	r3, #2
   11a2c:	rsb	r3, r0, r3
   11a30:	asr	r3, r3, #2
   11a34:	add	r3, r3, r3, lsr #31
   11a38:	asrs	r1, r3, #1
   11a3c:	popeq	{r3, pc}
   11a40:	movw	r2, #0
   11a44:	movt	r2, #0
   11a48:	cmp	r2, #0
   11a4c:	popeq	{r3, pc}
   11a50:	blx	r2
   11a54:	pop	{r3, pc}
   11a58:	push	{r4, lr}
   11a5c:	movw	r4, #12604	; 0x313c
   11a60:	movt	r4, #2
   11a64:	ldrb	r3, [r4]
   11a68:	cmp	r3, #0
   11a6c:	popne	{r4, pc}
   11a70:	bl	119e0 <sg_ll_reassign_blocks@plt+0xf6c>
   11a74:	mov	r3, #1
   11a78:	strb	r3, [r4]
   11a7c:	pop	{r4, pc}
   11a80:	movw	r0, #12028	; 0x2efc
   11a84:	movt	r0, #2
   11a88:	push	{r3, lr}
   11a8c:	ldr	r3, [r0]
   11a90:	cmp	r3, #0
   11a94:	beq	11aac <sg_ll_reassign_blocks@plt+0x1038>
   11a98:	movw	r3, #0
   11a9c:	movt	r3, #0
   11aa0:	cmp	r3, #0
   11aa4:	beq	11aac <sg_ll_reassign_blocks@plt+0x1038>
   11aa8:	blx	r3
   11aac:	pop	{r3, lr}
   11ab0:	b	11a18 <sg_ll_reassign_blocks@plt+0xfa4>
   11ab4:	push	{r4, r5, r6, r7, lr}
   11ab8:	movw	r4, #12576	; 0x3120
   11abc:	movt	r4, #2
   11ac0:	sub	sp, sp, #28
   11ac4:	subs	r5, r0, #0
   11ac8:	ldr	r3, [r4]
   11acc:	str	r3, [sp, #20]
   11ad0:	beq	11b80 <sg_ll_reassign_blocks@plt+0x110c>
   11ad4:	ldrb	r6, [r5]
   11ad8:	cmp	r6, #0
   11adc:	beq	11b80 <sg_ll_reassign_blocks@plt+0x110c>
   11ae0:	movw	r1, #7768	; 0x1e58
   11ae4:	movt	r1, #1
   11ae8:	bl	10a68 <strspn@plt>
   11aec:	subs	r7, r0, #0
   11af0:	beq	11b80 <sg_ll_reassign_blocks@plt+0x110c>
   11af4:	cmp	r6, #48	; 0x30
   11af8:	beq	11b50 <sg_ll_reassign_blocks@plt+0x10dc>
   11afc:	bl	109cc <__ctype_toupper_loc@plt>
   11b00:	add	r7, r5, r7
   11b04:	ldrb	r3, [r7, #-1]
   11b08:	ldr	r2, [r0]
   11b0c:	mov	r0, r5
   11b10:	ldr	r3, [r2, r3, lsl #2]
   11b14:	cmp	r3, #72	; 0x48
   11b18:	beq	11b64 <sg_ll_reassign_blocks@plt+0x10f0>
   11b1c:	movw	r1, #7804	; 0x1e7c
   11b20:	mov	r2, sp
   11b24:	movt	r1, #1
   11b28:	bl	10a08 <__isoc99_sscanf@plt>
   11b2c:	cmp	r0, #1
   11b30:	bne	11b80 <sg_ll_reassign_blocks@plt+0x110c>
   11b34:	ldrd	r0, [sp]
   11b38:	ldr	r2, [sp, #20]
   11b3c:	ldr	r3, [r4]
   11b40:	cmp	r2, r3
   11b44:	bne	11b8c <sg_ll_reassign_blocks@plt+0x1118>
   11b48:	add	sp, sp, #28
   11b4c:	pop	{r4, r5, r6, r7, pc}
   11b50:	ldrb	r3, [r5, #1]
   11b54:	and	r3, r3, #223	; 0xdf
   11b58:	cmp	r3, #88	; 0x58
   11b5c:	addeq	r0, r5, #2
   11b60:	bne	11afc <sg_ll_reassign_blocks@plt+0x1088>
   11b64:	add	r2, sp, #8
   11b68:	movw	r1, #7796	; 0x1e74
   11b6c:	movt	r1, #1
   11b70:	bl	10a08 <__isoc99_sscanf@plt>
   11b74:	ldrd	r2, [sp, #8]
   11b78:	strd	r2, [sp]
   11b7c:	b	11b2c <sg_ll_reassign_blocks@plt+0x10b8>
   11b80:	mvn	r0, #0
   11b84:	mvn	r1, #0
   11b88:	b	11b38 <sg_ll_reassign_blocks@plt+0x10c4>
   11b8c:	bl	109a8 <__stack_chk_fail@plt>
   11b90:	cmp	r1, #0
   11b94:	beq	11da0 <sg_ll_reassign_blocks@plt+0x132c>
   11b98:	eor	ip, r0, r1
   11b9c:	rsbmi	r1, r1, #0
   11ba0:	subs	r2, r1, #1
   11ba4:	beq	11d6c <sg_ll_reassign_blocks@plt+0x12f8>
   11ba8:	movs	r3, r0
   11bac:	rsbmi	r3, r0, #0
   11bb0:	cmp	r3, r1
   11bb4:	bls	11d78 <sg_ll_reassign_blocks@plt+0x1304>
   11bb8:	tst	r1, r2
   11bbc:	beq	11d88 <sg_ll_reassign_blocks@plt+0x1314>
   11bc0:	clz	r2, r3
   11bc4:	clz	r0, r1
   11bc8:	sub	r2, r0, r2
   11bcc:	rsbs	r2, r2, #31
   11bd0:	addne	r2, r2, r2, lsl #1
   11bd4:	mov	r0, #0
   11bd8:	addne	pc, pc, r2, lsl #2
   11bdc:	nop	{0}
   11be0:	cmp	r3, r1, lsl #31
   11be4:	adc	r0, r0, r0
   11be8:	subcs	r3, r3, r1, lsl #31
   11bec:	cmp	r3, r1, lsl #30
   11bf0:	adc	r0, r0, r0
   11bf4:	subcs	r3, r3, r1, lsl #30
   11bf8:	cmp	r3, r1, lsl #29
   11bfc:	adc	r0, r0, r0
   11c00:	subcs	r3, r3, r1, lsl #29
   11c04:	cmp	r3, r1, lsl #28
   11c08:	adc	r0, r0, r0
   11c0c:	subcs	r3, r3, r1, lsl #28
   11c10:	cmp	r3, r1, lsl #27
   11c14:	adc	r0, r0, r0
   11c18:	subcs	r3, r3, r1, lsl #27
   11c1c:	cmp	r3, r1, lsl #26
   11c20:	adc	r0, r0, r0
   11c24:	subcs	r3, r3, r1, lsl #26
   11c28:	cmp	r3, r1, lsl #25
   11c2c:	adc	r0, r0, r0
   11c30:	subcs	r3, r3, r1, lsl #25
   11c34:	cmp	r3, r1, lsl #24
   11c38:	adc	r0, r0, r0
   11c3c:	subcs	r3, r3, r1, lsl #24
   11c40:	cmp	r3, r1, lsl #23
   11c44:	adc	r0, r0, r0
   11c48:	subcs	r3, r3, r1, lsl #23
   11c4c:	cmp	r3, r1, lsl #22
   11c50:	adc	r0, r0, r0
   11c54:	subcs	r3, r3, r1, lsl #22
   11c58:	cmp	r3, r1, lsl #21
   11c5c:	adc	r0, r0, r0
   11c60:	subcs	r3, r3, r1, lsl #21
   11c64:	cmp	r3, r1, lsl #20
   11c68:	adc	r0, r0, r0
   11c6c:	subcs	r3, r3, r1, lsl #20
   11c70:	cmp	r3, r1, lsl #19
   11c74:	adc	r0, r0, r0
   11c78:	subcs	r3, r3, r1, lsl #19
   11c7c:	cmp	r3, r1, lsl #18
   11c80:	adc	r0, r0, r0
   11c84:	subcs	r3, r3, r1, lsl #18
   11c88:	cmp	r3, r1, lsl #17
   11c8c:	adc	r0, r0, r0
   11c90:	subcs	r3, r3, r1, lsl #17
   11c94:	cmp	r3, r1, lsl #16
   11c98:	adc	r0, r0, r0
   11c9c:	subcs	r3, r3, r1, lsl #16
   11ca0:	cmp	r3, r1, lsl #15
   11ca4:	adc	r0, r0, r0
   11ca8:	subcs	r3, r3, r1, lsl #15
   11cac:	cmp	r3, r1, lsl #14
   11cb0:	adc	r0, r0, r0
   11cb4:	subcs	r3, r3, r1, lsl #14
   11cb8:	cmp	r3, r1, lsl #13
   11cbc:	adc	r0, r0, r0
   11cc0:	subcs	r3, r3, r1, lsl #13
   11cc4:	cmp	r3, r1, lsl #12
   11cc8:	adc	r0, r0, r0
   11ccc:	subcs	r3, r3, r1, lsl #12
   11cd0:	cmp	r3, r1, lsl #11
   11cd4:	adc	r0, r0, r0
   11cd8:	subcs	r3, r3, r1, lsl #11
   11cdc:	cmp	r3, r1, lsl #10
   11ce0:	adc	r0, r0, r0
   11ce4:	subcs	r3, r3, r1, lsl #10
   11ce8:	cmp	r3, r1, lsl #9
   11cec:	adc	r0, r0, r0
   11cf0:	subcs	r3, r3, r1, lsl #9
   11cf4:	cmp	r3, r1, lsl #8
   11cf8:	adc	r0, r0, r0
   11cfc:	subcs	r3, r3, r1, lsl #8
   11d00:	cmp	r3, r1, lsl #7
   11d04:	adc	r0, r0, r0
   11d08:	subcs	r3, r3, r1, lsl #7
   11d0c:	cmp	r3, r1, lsl #6
   11d10:	adc	r0, r0, r0
   11d14:	subcs	r3, r3, r1, lsl #6
   11d18:	cmp	r3, r1, lsl #5
   11d1c:	adc	r0, r0, r0
   11d20:	subcs	r3, r3, r1, lsl #5
   11d24:	cmp	r3, r1, lsl #4
   11d28:	adc	r0, r0, r0
   11d2c:	subcs	r3, r3, r1, lsl #4
   11d30:	cmp	r3, r1, lsl #3
   11d34:	adc	r0, r0, r0
   11d38:	subcs	r3, r3, r1, lsl #3
   11d3c:	cmp	r3, r1, lsl #2
   11d40:	adc	r0, r0, r0
   11d44:	subcs	r3, r3, r1, lsl #2
   11d48:	cmp	r3, r1, lsl #1
   11d4c:	adc	r0, r0, r0
   11d50:	subcs	r3, r3, r1, lsl #1
   11d54:	cmp	r3, r1
   11d58:	adc	r0, r0, r0
   11d5c:	subcs	r3, r3, r1
   11d60:	cmp	ip, #0
   11d64:	rsbmi	r0, r0, #0
   11d68:	bx	lr
   11d6c:	teq	ip, r0
   11d70:	rsbmi	r0, r0, #0
   11d74:	bx	lr
   11d78:	movcc	r0, #0
   11d7c:	asreq	r0, ip, #31
   11d80:	orreq	r0, r0, #1
   11d84:	bx	lr
   11d88:	clz	r2, r1
   11d8c:	rsb	r2, r2, #31
   11d90:	cmp	ip, #0
   11d94:	lsr	r0, r3, r2
   11d98:	rsbmi	r0, r0, #0
   11d9c:	bx	lr
   11da0:	cmp	r0, #0
   11da4:	mvngt	r0, #-2147483648	; 0x80000000
   11da8:	movlt	r0, #-2147483648	; 0x80000000
   11dac:	b	11dd0 <sg_ll_reassign_blocks@plt+0x135c>
   11db0:	cmp	r1, #0
   11db4:	beq	11da0 <sg_ll_reassign_blocks@plt+0x132c>
   11db8:	push	{r0, r1, lr}
   11dbc:	bl	11b98 <sg_ll_reassign_blocks@plt+0x1124>
   11dc0:	pop	{r1, r2, lr}
   11dc4:	mul	r3, r2, r0
   11dc8:	sub	r1, r1, r3
   11dcc:	bx	lr
   11dd0:	push	{r1, lr}
   11dd4:	mov	r0, #8
   11dd8:	bl	10978 <raise@plt>
   11ddc:	pop	{r1, pc}
   11de0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11de4:	mov	r7, r0
   11de8:	ldr	r6, [pc, #76]	; 11e3c <sg_ll_reassign_blocks@plt+0x13c8>
   11dec:	mov	r8, r1
   11df0:	ldr	r5, [pc, #72]	; 11e40 <sg_ll_reassign_blocks@plt+0x13cc>
   11df4:	mov	r9, r2
   11df8:	add	r6, pc, r6
   11dfc:	bl	10958 <_init@@Base>
   11e00:	add	r5, pc, r5
   11e04:	rsb	r6, r5, r6
   11e08:	asrs	r6, r6, #2
   11e0c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11e10:	sub	r5, r5, #4
   11e14:	mov	r4, #0
   11e18:	add	r4, r4, #1
   11e1c:	ldr	r3, [r5, #4]!
   11e20:	mov	r0, r7
   11e24:	mov	r1, r8
   11e28:	mov	r2, r9
   11e2c:	blx	r3
   11e30:	cmp	r4, r6
   11e34:	bne	11e18 <sg_ll_reassign_blocks@plt+0x13a4>
   11e38:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11e3c:	strdeq	r1, [r1], -r8
   11e40:	andeq	r1, r1, ip, ror #1
   11e44:	bx	lr

Disassembly of section .fini:

00011e48 <_fini@@Base>:
   11e48:	push	{r3, lr}
   11e4c:	pop	{r3, pc}
