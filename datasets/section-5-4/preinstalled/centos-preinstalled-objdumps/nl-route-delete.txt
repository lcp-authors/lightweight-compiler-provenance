
centos-preinstalled/nl-route-delete:     file format elf32-littlearm


Disassembly of section .init:

00010b68 <.init>:
   10b68:	push	{r3, lr}
   10b6c:	bl	112b0 <exit@plt+0x5a8>
   10b70:	pop	{r3, pc}

Disassembly of section .plt:

00010b74 <abort@plt-0x14>:
   10b74:	push	{lr}		; (str lr, [sp, #-4]!)
   10b78:	ldr	lr, [pc, #4]	; 10b84 <abort@plt-0x4>
   10b7c:	add	lr, pc, lr
   10b80:	ldr	pc, [lr, #8]!
   10b84:	andeq	r1, r1, ip, ror r4

00010b88 <abort@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1148]!	; 0x47c

00010b94 <nl_cli_fatal@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1140]!	; 0x474

00010ba0 <nl_cache_foreach_filter@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1132]!	; 0x46c

00010bac <__libc_start_main@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1124]!	; 0x464

00010bb8 <__gmon_start__@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1116]!	; 0x45c

00010bc4 <nl_cli_route_parse_pref_src@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1108]!	; 0x454

00010bd0 <rtnl_route_delete@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1100]!	; 0x44c

00010bdc <__printf_chk@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1092]!	; 0x444

00010be8 <nl_cli_route_parse_family@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1084]!	; 0x43c

00010bf4 <nl_cli_alloc_socket@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #1076]!	; 0x434

00010c00 <getopt_long@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #69632	; 0x11000
   10c08:	ldr	pc, [ip, #1068]!	; 0x42c

00010c0c <nl_cli_route_parse_prio@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #69632	; 0x11000
   10c14:	ldr	pc, [ip, #1060]!	; 0x424

00010c18 <nl_cli_route_parse_scope@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #69632	; 0x11000
   10c20:	ldr	pc, [ip, #1052]!	; 0x41c

00010c24 <nl_cli_route_parse_protocol@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #69632	; 0x11000
   10c2c:	ldr	pc, [ip, #1044]!	; 0x414

00010c30 <nl_cli_route_parse_nexthop@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #69632	; 0x11000
   10c38:	ldr	pc, [ip, #1036]!	; 0x40c

00010c3c <nl_cli_link_alloc_cache@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #69632	; 0x11000
   10c44:	ldr	pc, [ip, #1028]!	; 0x404

00010c48 <fwrite@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #69632	; 0x11000
   10c50:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c54 <__stack_chk_fail@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #69632	; 0x11000
   10c5c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c60 <nl_cli_route_parse_type@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #69632	; 0x11000
   10c68:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c6c <nl_cli_route_parse_dst@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #69632	; 0x11000
   10c74:	ldr	pc, [ip, #996]!	; 0x3e4

00010c78 <__fprintf_chk@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #69632	; 0x11000
   10c80:	ldr	pc, [ip, #988]!	; 0x3dc

00010c84 <nl_cli_confirm@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #69632	; 0x11000
   10c8c:	ldr	pc, [ip, #980]!	; 0x3d4

00010c90 <nl_object_dump@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #69632	; 0x11000
   10c98:	ldr	pc, [ip, #972]!	; 0x3cc

00010c9c <nl_cli_route_parse_metric@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #69632	; 0x11000
   10ca4:	ldr	pc, [ip, #964]!	; 0x3c4

00010ca8 <nl_cli_route_alloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #69632	; 0x11000
   10cb0:	ldr	pc, [ip, #956]!	; 0x3bc

00010cb4 <puts@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #69632	; 0x11000
   10cbc:	ldr	pc, [ip, #948]!	; 0x3b4

00010cc0 <nl_cli_route_parse_table@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #69632	; 0x11000
   10cc8:	ldr	pc, [ip, #940]!	; 0x3ac

00010ccc <nl_geterror@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #932]!	; 0x3a4

00010cd8 <nl_cli_route_parse_iif@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #924]!	; 0x39c

00010ce4 <nl_cli_connect@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #916]!	; 0x394

00010cf0 <nl_cli_route_parse_src@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #908]!	; 0x38c

00010cfc <nl_cli_route_alloc_cache@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #900]!	; 0x384

00010d08 <exit@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #892]!	; 0x37c

Disassembly of section .text:

00010d14 <.text>:
   10d14:	movw	r2, #8632	; 0x21b8
   10d18:	movt	r2, #2
   10d1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d20:	sub	sp, sp, #36	; 0x24
   10d24:	ldr	r3, [r2]
   10d28:	mov	r7, r1
   10d2c:	str	r2, [sp, #12]
   10d30:	mov	r8, r0
   10d34:	mov	r4, #0
   10d38:	movw	sl, #8652	; 0x21cc
   10d3c:	str	r3, [sp, #28]
   10d40:	bl	10bf4 <nl_cli_alloc_socket@plt>
   10d44:	movt	sl, #2
   10d48:	mov	r1, r4
   10d4c:	movw	r9, #8644	; 0x21c4
   10d50:	add	r6, sp, #24
   10d54:	movt	r9, #2
   10d58:	mov	r5, r4
   10d5c:	str	r0, [sl, #4]
   10d60:	bl	10ce4 <nl_cli_connect@plt>
   10d64:	ldr	r0, [sl, #4]
   10d68:	bl	10c3c <nl_cli_link_alloc_cache@plt>
   10d6c:	mov	r1, r4
   10d70:	str	r0, [sp, #16]
   10d74:	ldr	r0, [sl, #4]
   10d78:	bl	10cfc <nl_cli_route_alloc_cache@plt>
   10d7c:	str	r0, [sp, #20]
   10d80:	bl	10ca8 <nl_cli_route_alloc@plt>
   10d84:	mov	fp, r0
   10d88:	str	r6, [sp]
   10d8c:	movw	r2, #5476	; 0x1564
   10d90:	movw	r3, #8344	; 0x2098
   10d94:	movt	r2, #1
   10d98:	movt	r3, #2
   10d9c:	mov	r0, r8
   10da0:	mov	r1, r7
   10da4:	str	r5, [sp, #24]
   10da8:	bl	10c00 <getopt_long@plt>
   10dac:	cmn	r0, #1
   10db0:	beq	111bc <exit@plt+0x4b4>
   10db4:	sub	r0, r0, #100	; 0x64
   10db8:	cmp	r0, #166	; 0xa6
   10dbc:	ldrls	pc, [pc, r0, lsl #2]
   10dc0:	b	10d88 <exit@plt+0x80>
   10dc4:	andeq	r1, r1, r8, lsr #3
   10dc8:	andeq	r0, r1, r8, lsl #27
   10dcc:	andeq	r0, r1, r8, lsl #27
   10dd0:	andeq	r0, r1, r8, lsl #27
   10dd4:	muleq	r1, r4, r1
   10dd8:	andeq	r1, r1, r8, lsl #3
   10ddc:	andeq	r0, r1, r8, lsl #27
   10de0:	andeq	r0, r1, r8, lsl #27
   10de4:	andeq	r0, r1, r8, lsl #27
   10de8:	andeq	r0, r1, r8, lsl #27
   10dec:	andeq	r1, r1, r0, ror r1
   10df0:	andeq	r0, r1, r8, lsl #27
   10df4:	andeq	r0, r1, r8, lsl #27
   10df8:	andeq	r1, r1, r4, ror #2
   10dfc:	andeq	r0, r1, r8, lsl #27
   10e00:	andeq	r0, r1, r8, lsl #27
   10e04:	andeq	r1, r1, r0, asr r1
   10e08:	andeq	r0, r1, r8, lsl #27
   10e0c:	andeq	r1, r1, r4, lsr #2
   10e10:	andeq	r0, r1, r8, lsl #27
   10e14:	andeq	r0, r1, r8, lsl #27
   10e18:	andeq	r0, r1, r8, lsl #27
   10e1c:	andeq	r0, r1, r8, lsl #27
   10e20:	andeq	r0, r1, r8, lsl #27
   10e24:	andeq	r0, r1, r8, lsl #27
   10e28:	andeq	r0, r1, r8, lsl #27
   10e2c:	andeq	r0, r1, r8, lsl #27
   10e30:	andeq	r0, r1, r8, lsl #27
   10e34:	andeq	r0, r1, r8, lsl #27
   10e38:	andeq	r0, r1, r8, lsl #27
   10e3c:	andeq	r0, r1, r8, lsl #27
   10e40:	andeq	r0, r1, r8, lsl #27
   10e44:	andeq	r0, r1, r8, lsl #27
   10e48:	andeq	r0, r1, r8, lsl #27
   10e4c:	andeq	r0, r1, r8, lsl #27
   10e50:	andeq	r0, r1, r8, lsl #27
   10e54:	andeq	r0, r1, r8, lsl #27
   10e58:	andeq	r0, r1, r8, lsl #27
   10e5c:	andeq	r0, r1, r8, lsl #27
   10e60:	andeq	r0, r1, r8, lsl #27
   10e64:	andeq	r0, r1, r8, lsl #27
   10e68:	andeq	r0, r1, r8, lsl #27
   10e6c:	andeq	r0, r1, r8, lsl #27
   10e70:	andeq	r0, r1, r8, lsl #27
   10e74:	andeq	r0, r1, r8, lsl #27
   10e78:	andeq	r0, r1, r8, lsl #27
   10e7c:	andeq	r0, r1, r8, lsl #27
   10e80:	andeq	r0, r1, r8, lsl #27
   10e84:	andeq	r0, r1, r8, lsl #27
   10e88:	andeq	r0, r1, r8, lsl #27
   10e8c:	andeq	r0, r1, r8, lsl #27
   10e90:	andeq	r0, r1, r8, lsl #27
   10e94:	andeq	r0, r1, r8, lsl #27
   10e98:	andeq	r0, r1, r8, lsl #27
   10e9c:	andeq	r0, r1, r8, lsl #27
   10ea0:	andeq	r0, r1, r8, lsl #27
   10ea4:	andeq	r0, r1, r8, lsl #27
   10ea8:	andeq	r0, r1, r8, lsl #27
   10eac:	andeq	r0, r1, r8, lsl #27
   10eb0:	andeq	r0, r1, r8, lsl #27
   10eb4:	andeq	r0, r1, r8, lsl #27
   10eb8:	andeq	r0, r1, r8, lsl #27
   10ebc:	andeq	r0, r1, r8, lsl #27
   10ec0:	andeq	r0, r1, r8, lsl #27
   10ec4:	andeq	r0, r1, r8, lsl #27
   10ec8:	andeq	r0, r1, r8, lsl #27
   10ecc:	andeq	r0, r1, r8, lsl #27
   10ed0:	andeq	r0, r1, r8, lsl #27
   10ed4:	andeq	r0, r1, r8, lsl #27
   10ed8:	andeq	r0, r1, r8, lsl #27
   10edc:	andeq	r0, r1, r8, lsl #27
   10ee0:	andeq	r0, r1, r8, lsl #27
   10ee4:	andeq	r0, r1, r8, lsl #27
   10ee8:	andeq	r0, r1, r8, lsl #27
   10eec:	andeq	r0, r1, r8, lsl #27
   10ef0:	andeq	r0, r1, r8, lsl #27
   10ef4:	andeq	r0, r1, r8, lsl #27
   10ef8:	andeq	r0, r1, r8, lsl #27
   10efc:	andeq	r0, r1, r8, lsl #27
   10f00:	andeq	r0, r1, r8, lsl #27
   10f04:	andeq	r0, r1, r8, lsl #27
   10f08:	andeq	r0, r1, r8, lsl #27
   10f0c:	andeq	r0, r1, r8, lsl #27
   10f10:	andeq	r0, r1, r8, lsl #27
   10f14:	andeq	r0, r1, r8, lsl #27
   10f18:	andeq	r0, r1, r8, lsl #27
   10f1c:	andeq	r0, r1, r8, lsl #27
   10f20:	andeq	r0, r1, r8, lsl #27
   10f24:	andeq	r0, r1, r8, lsl #27
   10f28:	andeq	r0, r1, r8, lsl #27
   10f2c:	andeq	r0, r1, r8, lsl #27
   10f30:	andeq	r0, r1, r8, lsl #27
   10f34:	andeq	r0, r1, r8, lsl #27
   10f38:	andeq	r0, r1, r8, lsl #27
   10f3c:	andeq	r0, r1, r8, lsl #27
   10f40:	andeq	r0, r1, r8, lsl #27
   10f44:	andeq	r0, r1, r8, lsl #27
   10f48:	andeq	r0, r1, r8, lsl #27
   10f4c:	andeq	r0, r1, r8, lsl #27
   10f50:	andeq	r0, r1, r8, lsl #27
   10f54:	andeq	r0, r1, r8, lsl #27
   10f58:	andeq	r0, r1, r8, lsl #27
   10f5c:	andeq	r0, r1, r8, lsl #27
   10f60:	andeq	r0, r1, r8, lsl #27
   10f64:	andeq	r0, r1, r8, lsl #27
   10f68:	andeq	r0, r1, r8, lsl #27
   10f6c:	andeq	r0, r1, r8, lsl #27
   10f70:	andeq	r0, r1, r8, lsl #27
   10f74:	andeq	r0, r1, r8, lsl #27
   10f78:	andeq	r0, r1, r8, lsl #27
   10f7c:	andeq	r0, r1, r8, lsl #27
   10f80:	andeq	r0, r1, r8, lsl #27
   10f84:	andeq	r0, r1, r8, lsl #27
   10f88:	andeq	r0, r1, r8, lsl #27
   10f8c:	andeq	r0, r1, r8, lsl #27
   10f90:	andeq	r0, r1, r8, lsl #27
   10f94:	andeq	r0, r1, r8, lsl #27
   10f98:	andeq	r0, r1, r8, lsl #27
   10f9c:	andeq	r0, r1, r8, lsl #27
   10fa0:	andeq	r0, r1, r8, lsl #27
   10fa4:	andeq	r0, r1, r8, lsl #27
   10fa8:	andeq	r0, r1, r8, lsl #27
   10fac:	andeq	r0, r1, r8, lsl #27
   10fb0:	andeq	r0, r1, r8, lsl #27
   10fb4:	andeq	r0, r1, r8, lsl #27
   10fb8:	andeq	r0, r1, r8, lsl #27
   10fbc:	andeq	r0, r1, r8, lsl #27
   10fc0:	andeq	r0, r1, r8, lsl #27
   10fc4:	andeq	r0, r1, r8, lsl #27
   10fc8:	andeq	r0, r1, r8, lsl #27
   10fcc:	andeq	r0, r1, r8, lsl #27
   10fd0:	andeq	r0, r1, r8, lsl #27
   10fd4:	andeq	r0, r1, r8, lsl #27
   10fd8:	andeq	r0, r1, r8, lsl #27
   10fdc:	andeq	r0, r1, r8, lsl #27
   10fe0:	andeq	r0, r1, r8, lsl #27
   10fe4:	andeq	r0, r1, r8, lsl #27
   10fe8:	andeq	r0, r1, r8, lsl #27
   10fec:	andeq	r0, r1, r8, lsl #27
   10ff0:	andeq	r0, r1, r8, lsl #27
   10ff4:	andeq	r0, r1, r8, lsl #27
   10ff8:	andeq	r0, r1, r8, lsl #27
   10ffc:	andeq	r0, r1, r8, lsl #27
   11000:	andeq	r0, r1, r8, lsl #27
   11004:	andeq	r0, r1, r8, lsl #27
   11008:	andeq	r0, r1, r8, lsl #27
   1100c:	andeq	r0, r1, r8, lsl #27
   11010:	andeq	r0, r1, r8, lsl #27
   11014:	andeq	r0, r1, r8, lsl #27
   11018:	andeq	r0, r1, r8, lsl #27
   1101c:	andeq	r0, r1, r8, lsl #27
   11020:	andeq	r0, r1, r8, lsl #27
   11024:	andeq	r0, r1, r8, lsl #27
   11028:	andeq	r0, r1, r8, lsl #27
   1102c:	andeq	r0, r1, r8, lsl #27
   11030:	andeq	r0, r1, r8, lsl #27
   11034:	andeq	r0, r1, r8, lsl #27
   11038:	andeq	r1, r1, r0, lsl r1
   1103c:	strdeq	r1, [r1], -ip
   11040:	andeq	r1, r1, r4, ror #1
   11044:	ldrdeq	r1, [r1], -r0
   11048:	strheq	r1, [r1], -ip
   1104c:	andeq	r1, r1, r8, lsr #1
   11050:	muleq	r1, r4, r0
   11054:	andeq	r1, r1, r0, lsl #1
   11058:	andeq	r1, r1, ip, rrx
   1105c:	andeq	r1, r1, r0, rrx
   11060:	mov	r1, #1
   11064:	str	r1, [sl, #8]
   11068:	b	10d88 <exit@plt+0x80>
   1106c:	mov	r0, fp
   11070:	ldr	r1, [r9]
   11074:	add	r4, r4, #1
   11078:	bl	10c60 <nl_cli_route_parse_type@plt>
   1107c:	b	10d88 <exit@plt+0x80>
   11080:	mov	r0, fp
   11084:	ldr	r1, [r9]
   11088:	add	r4, r4, #1
   1108c:	bl	10c24 <nl_cli_route_parse_protocol@plt>
   11090:	b	10d88 <exit@plt+0x80>
   11094:	mov	r0, fp
   11098:	ldr	r1, [r9]
   1109c:	add	r4, r4, #1
   110a0:	bl	10c18 <nl_cli_route_parse_scope@plt>
   110a4:	b	10d88 <exit@plt+0x80>
   110a8:	mov	r0, fp
   110ac:	ldr	r1, [r9]
   110b0:	add	r4, r4, #1
   110b4:	bl	10c0c <nl_cli_route_parse_prio@plt>
   110b8:	b	10d88 <exit@plt+0x80>
   110bc:	mov	r0, fp
   110c0:	ldr	r1, [r9]
   110c4:	add	r4, r4, #1
   110c8:	bl	10c9c <nl_cli_route_parse_metric@plt>
   110cc:	b	10d88 <exit@plt+0x80>
   110d0:	mov	r0, fp
   110d4:	ldr	r1, [r9]
   110d8:	add	r4, r4, #1
   110dc:	bl	10bc4 <nl_cli_route_parse_pref_src@plt>
   110e0:	b	10d88 <exit@plt+0x80>
   110e4:	mov	r0, fp
   110e8:	ldr	r1, [r9]
   110ec:	ldr	r2, [sp, #16]
   110f0:	add	r4, r4, #1
   110f4:	bl	10cd8 <nl_cli_route_parse_iif@plt>
   110f8:	b	10d88 <exit@plt+0x80>
   110fc:	mov	r0, fp
   11100:	ldr	r1, [r9]
   11104:	add	r4, r4, #1
   11108:	bl	10cf0 <nl_cli_route_parse_src@plt>
   1110c:	b	10d88 <exit@plt+0x80>
   11110:	mov	r0, fp
   11114:	ldr	r1, [r9]
   11118:	add	r4, r4, #1
   1111c:	bl	10be8 <nl_cli_route_parse_family@plt>
   11120:	b	10d88 <exit@plt+0x80>
   11124:	movw	r1, #8640	; 0x21c0
   11128:	movt	r1, #2
   1112c:	movw	r2, #6604	; 0x19cc
   11130:	movw	r3, #6608	; 0x19d0
   11134:	ldr	r0, [r1]
   11138:	movt	r2, #1
   1113c:	movt	r3, #1
   11140:	mov	r1, #1
   11144:	bl	10c78 <__fprintf_chk@plt>
   11148:	mov	r0, #0
   1114c:	bl	10d08 <exit@plt>
   11150:	mov	r0, fp
   11154:	ldr	r1, [r9]
   11158:	add	r4, r4, #1
   1115c:	bl	10cc0 <nl_cli_route_parse_table@plt>
   11160:	b	10d88 <exit@plt+0x80>
   11164:	mov	r2, #1
   11168:	str	r2, [sl, #12]
   1116c:	b	10d88 <exit@plt+0x80>
   11170:	mov	r0, fp
   11174:	ldr	r1, [r9]
   11178:	ldr	r2, [sp, #16]
   1117c:	add	r4, r4, #1
   11180:	bl	10c30 <nl_cli_route_parse_nexthop@plt>
   11184:	b	10d88 <exit@plt+0x80>
   11188:	mov	r3, #1
   1118c:	str	r3, [sl]
   11190:	b	10d88 <exit@plt+0x80>
   11194:	movw	r0, #5488	; 0x1570
   11198:	movt	r0, #1
   1119c:	bl	10cb4 <puts@plt>
   111a0:	mov	r0, #0
   111a4:	bl	10d08 <exit@plt>
   111a8:	mov	r0, fp
   111ac:	ldr	r1, [r9]
   111b0:	add	r4, r4, #1
   111b4:	bl	10c6c <nl_cli_route_parse_dst@plt>
   111b8:	b	10d88 <exit@plt+0x80>
   111bc:	cmp	r4, #0
   111c0:	bne	111e4 <exit@plt+0x4dc>
   111c4:	ldr	r2, [sl]
   111c8:	movw	r3, #8652	; 0x21cc
   111cc:	movt	r3, #2
   111d0:	cmp	r2, #0
   111d4:	bne	111e4 <exit@plt+0x4dc>
   111d8:	ldr	r3, [r3, #8]
   111dc:	cmp	r3, #0
   111e0:	beq	1124c <exit@plt+0x544>
   111e4:	mov	r3, #0
   111e8:	ldr	r0, [sp, #20]
   111ec:	mov	r1, fp
   111f0:	movw	r2, #5032	; 0x13a8
   111f4:	movt	r2, #1
   111f8:	bl	10ba0 <nl_cache_foreach_filter@plt>
   111fc:	ldr	r2, [sl, #12]
   11200:	movw	r3, #8652	; 0x21cc
   11204:	movt	r3, #2
   11208:	cmp	r2, #0
   1120c:	beq	11230 <exit@plt+0x528>
   11210:	ldr	r1, [sp, #12]
   11214:	mov	r0, #0
   11218:	ldr	r2, [sp, #28]
   1121c:	ldr	r3, [r1]
   11220:	cmp	r2, r3
   11224:	bne	11248 <exit@plt+0x540>
   11228:	add	sp, sp, #36	; 0x24
   1122c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11230:	ldr	r2, [r3, #16]
   11234:	movw	r1, #6696	; 0x1a28
   11238:	mov	r0, #1
   1123c:	movt	r1, #1
   11240:	bl	10bdc <__printf_chk@plt>
   11244:	b	11210 <exit@plt+0x508>
   11248:	bl	10c54 <__stack_chk_fail@plt>
   1124c:	movw	r3, #8640	; 0x21c0
   11250:	movt	r3, #2
   11254:	movw	r0, #6624	; 0x19e0
   11258:	mov	r1, #1
   1125c:	ldr	r3, [r3]
   11260:	movt	r0, #1
   11264:	mov	r2, #70	; 0x46
   11268:	bl	10c48 <fwrite@plt>
   1126c:	mov	r0, r4
   11270:	bl	10d08 <exit@plt>
   11274:	mov	fp, #0
   11278:	mov	lr, #0
   1127c:	pop	{r1}		; (ldr r1, [sp], #4)
   11280:	mov	r2, sp
   11284:	push	{r2}		; (str r2, [sp, #-4]!)
   11288:	push	{r0}		; (str r0, [sp, #-4]!)
   1128c:	ldr	ip, [pc, #16]	; 112a4 <exit@plt+0x59c>
   11290:	push	{ip}		; (str ip, [sp, #-4]!)
   11294:	ldr	r0, [pc, #12]	; 112a8 <exit@plt+0x5a0>
   11298:	ldr	r3, [pc, #12]	; 112ac <exit@plt+0x5a4>
   1129c:	bl	10bac <__libc_start_main@plt>
   112a0:	bl	10b88 <abort@plt>
   112a4:	andeq	r1, r1, r8, lsr #10
   112a8:	andeq	r0, r1, r4, lsl sp
   112ac:	andeq	r1, r1, r4, asr #9
   112b0:	ldr	r3, [pc, #20]	; 112cc <exit@plt+0x5c4>
   112b4:	ldr	r2, [pc, #20]	; 112d0 <exit@plt+0x5c8>
   112b8:	add	r3, pc, r3
   112bc:	ldr	r2, [r3, r2]
   112c0:	cmp	r2, #0
   112c4:	bxeq	lr
   112c8:	b	10bb8 <__gmon_start__@plt>
   112cc:	andeq	r0, r1, r0, asr #26
   112d0:	muleq	r0, r0, r0
   112d4:	push	{r3, lr}
   112d8:	movw	r0, #8632	; 0x21b8
   112dc:	ldr	r3, [pc, #36]	; 11308 <exit@plt+0x600>
   112e0:	movt	r0, #2
   112e4:	rsb	r3, r0, r3
   112e8:	cmp	r3, #6
   112ec:	popls	{r3, pc}
   112f0:	movw	r3, #0
   112f4:	movt	r3, #0
   112f8:	cmp	r3, #0
   112fc:	popeq	{r3, pc}
   11300:	blx	r3
   11304:	pop	{r3, pc}
   11308:			; <UNDEFINED> instruction: 0x000221bb
   1130c:	push	{r3, lr}
   11310:	movw	r0, #8632	; 0x21b8
   11314:	movw	r3, #8632	; 0x21b8
   11318:	movt	r0, #2
   1131c:	movt	r3, #2
   11320:	rsb	r3, r0, r3
   11324:	asr	r3, r3, #2
   11328:	add	r3, r3, r3, lsr #31
   1132c:	asrs	r1, r3, #1
   11330:	popeq	{r3, pc}
   11334:	movw	r2, #0
   11338:	movt	r2, #0
   1133c:	cmp	r2, #0
   11340:	popeq	{r3, pc}
   11344:	blx	r2
   11348:	pop	{r3, pc}
   1134c:	push	{r4, lr}
   11350:	movw	r4, #8648	; 0x21c8
   11354:	movt	r4, #2
   11358:	ldrb	r3, [r4]
   1135c:	cmp	r3, #0
   11360:	popne	{r4, pc}
   11364:	bl	112d4 <exit@plt+0x5cc>
   11368:	mov	r3, #1
   1136c:	strb	r3, [r4]
   11370:	pop	{r4, pc}
   11374:	movw	r0, #7868	; 0x1ebc
   11378:	movt	r0, #2
   1137c:	push	{r3, lr}
   11380:	ldr	r3, [r0]
   11384:	cmp	r3, #0
   11388:	beq	113a0 <exit@plt+0x698>
   1138c:	movw	r3, #0
   11390:	movt	r3, #0
   11394:	cmp	r3, #0
   11398:	beq	113a0 <exit@plt+0x698>
   1139c:	blx	r3
   113a0:	pop	{r3, lr}
   113a4:	b	1130c <exit@plt+0x604>
   113a8:	push	{r4, r5, r6, r7, lr}
   113ac:	movw	r4, #8652	; 0x21cc
   113b0:	movt	r4, #2
   113b4:	movw	r5, #8632	; 0x21b8
   113b8:	movw	r2, #8636	; 0x21bc
   113bc:	movt	r5, #2
   113c0:	movt	r2, #2
   113c4:	ldr	ip, [r4]
   113c8:	ldr	r1, [r5]
   113cc:	sub	sp, sp, #60	; 0x3c
   113d0:	ldr	r2, [r2]
   113d4:	mov	r3, #0
   113d8:	cmp	ip, r3
   113dc:	mov	r6, r0
   113e0:	str	r3, [sp]
   113e4:	str	r1, [sp, #52]	; 0x34
   113e8:	str	r2, [sp, #28]
   113ec:	str	r3, [sp, #4]
   113f0:	str	r3, [sp, #8]
   113f4:	str	r3, [sp, #12]
   113f8:	str	r3, [sp, #16]
   113fc:	str	r3, [sp, #20]
   11400:	str	r3, [sp, #24]
   11404:	str	r3, [sp, #32]
   11408:	str	r3, [sp, #36]	; 0x24
   1140c:	str	r3, [sp, #40]	; 0x28
   11410:	str	r3, [sp, #44]	; 0x2c
   11414:	str	r3, [sp, #48]	; 0x30
   11418:	beq	11448 <exit@plt+0x740>
   1141c:	mov	r1, sp
   11420:	ldr	r2, [r4, #8]
   11424:	bl	10c84 <nl_cli_confirm@plt>
   11428:	cmp	r0, #0
   1142c:	bne	11448 <exit@plt+0x740>
   11430:	ldr	r2, [sp, #52]	; 0x34
   11434:	ldr	r3, [r5]
   11438:	cmp	r2, r3
   1143c:	bne	114c0 <exit@plt+0x7b8>
   11440:	add	sp, sp, #60	; 0x3c
   11444:	pop	{r4, r5, r6, r7, pc}
   11448:	ldr	r0, [r4, #4]
   1144c:	mov	r1, r6
   11450:	mov	r2, #0
   11454:	bl	10bd0 <rtnl_route_delete@plt>
   11458:	subs	r7, r0, #0
   1145c:	blt	114a4 <exit@plt+0x79c>
   11460:	ldr	r3, [r4, #12]
   11464:	cmp	r3, #0
   11468:	ldrne	r3, [r4, #16]
   1146c:	addne	r3, r3, #1
   11470:	strne	r3, [r4, #16]
   11474:	bne	11430 <exit@plt+0x728>
   11478:	movw	r1, #5464	; 0x1558
   1147c:	mov	r0, #1
   11480:	movt	r1, #1
   11484:	bl	10bdc <__printf_chk@plt>
   11488:	mov	r0, r6
   1148c:	mov	r1, sp
   11490:	bl	10c90 <nl_object_dump@plt>
   11494:	ldr	r3, [r4, #16]
   11498:	add	r3, r3, #1
   1149c:	str	r3, [r4, #16]
   114a0:	b	11430 <exit@plt+0x728>
   114a4:	bl	10ccc <nl_geterror@plt>
   114a8:	movw	r1, #5436	; 0x153c
   114ac:	movt	r1, #1
   114b0:	mov	r2, r0
   114b4:	mov	r0, r7
   114b8:	bl	10b94 <nl_cli_fatal@plt>
   114bc:	b	11460 <exit@plt+0x758>
   114c0:	bl	10c54 <__stack_chk_fail@plt>
   114c4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   114c8:	mov	r7, r0
   114cc:	ldr	r6, [pc, #76]	; 11520 <exit@plt+0x818>
   114d0:	mov	r8, r1
   114d4:	ldr	r5, [pc, #72]	; 11524 <exit@plt+0x81c>
   114d8:	mov	r9, r2
   114dc:	add	r6, pc, r6
   114e0:	bl	10b68 <abort@plt-0x20>
   114e4:	add	r5, pc, r5
   114e8:	rsb	r6, r5, r6
   114ec:	asrs	r6, r6, #2
   114f0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   114f4:	sub	r5, r5, #4
   114f8:	mov	r4, #0
   114fc:	add	r4, r4, #1
   11500:	ldr	r3, [r5, #4]!
   11504:	mov	r0, r7
   11508:	mov	r1, r8
   1150c:	mov	r2, r9
   11510:	blx	r3
   11514:	cmp	r4, r6
   11518:	bne	114fc <exit@plt+0x7f4>
   1151c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11520:	ldrdeq	r0, [r1], -r4
   11524:	andeq	r0, r1, r8, asr #19
   11528:	bx	lr

Disassembly of section .fini:

0001152c <.fini>:
   1152c:	push	{r3, lr}
   11530:	pop	{r3, pc}
