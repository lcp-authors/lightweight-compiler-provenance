
centos-preinstalled/kbdrate:     file format elf32-littlearm


Disassembly of section .init:

00010884 <.init>:
   10884:	push	{r3, lr}
   10888:	bl	1102c <close@plt+0x638>
   1088c:	pop	{r3, pc}

Disassembly of section .plt:

00010890 <raise@plt-0x14>:
   10890:	push	{lr}		; (str lr, [sp, #-4]!)
   10894:	ldr	lr, [pc, #4]	; 108a0 <raise@plt-0x4>
   10898:	add	lr, pc, lr
   1089c:	ldr	pc, [lr, #8]!
   108a0:	andeq	r1, r1, r0, ror #14

000108a4 <raise@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1888]!	; 0x760

000108b0 <strcmp@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1880]!	; 0x758

000108bc <strtol@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1872]!	; 0x750

000108c8 <read@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1864]!	; 0x748

000108d4 <signal@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1856]!	; 0x740

000108e0 <lseek@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1848]!	; 0x738

000108ec <sleep@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1840]!	; 0x730

000108f8 <dcgettext@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1832]!	; 0x728

00010904 <__stack_chk_fail@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1824]!	; 0x720

00010910 <alarm@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1816]!	; 0x718

0001091c <textdomain@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1808]!	; 0x710

00010928 <perror@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1800]!	; 0x708

00010934 <fwrite@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1792]!	; 0x700

00010940 <ioctl@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1784]!	; 0x6f8

0001094c <__libc_start_main@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1776]!	; 0x6f0

00010958 <__gmon_start__@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #69632	; 0x11000
   10960:	ldr	pc, [ip, #1768]!	; 0x6e8

00010964 <open@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #69632	; 0x11000
   1096c:	ldr	pc, [ip, #1760]!	; 0x6e0

00010970 <exit@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #69632	; 0x11000
   10978:	ldr	pc, [ip, #1752]!	; 0x6d8

0001097c <getopt@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #69632	; 0x11000
   10984:	ldr	pc, [ip, #1744]!	; 0x6d0

00010988 <__errno_location@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #69632	; 0x11000
   10990:	ldr	pc, [ip, #1736]!	; 0x6c8

00010994 <__printf_chk@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1728]!	; 0x6c0

000109a0 <strtod@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1720]!	; 0x6b8

000109ac <write@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1712]!	; 0x6b0

000109b8 <__fprintf_chk@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1704]!	; 0x6a8

000109c4 <setlocale@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1696]!	; 0x6a0

000109d0 <strrchr@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1688]!	; 0x698

000109dc <bindtextdomain@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1680]!	; 0x690

000109e8 <abort@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1672]!	; 0x688

000109f4 <close@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1664]!	; 0x680

Disassembly of section .text:

00010a00 <.text>:
   10a00:	push	{r4, r5, r6, r7, r8, r9, lr}
   10a04:	vpush	{d8-d9}
   10a08:	movw	r7, #8328	; 0x2088
   10a0c:	movt	r7, #2
   10a10:	ldr	r6, [r1]
   10a14:	sub	sp, sp, #28
   10a18:	mov	r5, r0
   10a1c:	ldr	r3, [r7]
   10a20:	mov	r4, r1
   10a24:	mov	r0, r6
   10a28:	mov	r1, #47	; 0x2f
   10a2c:	mov	r2, #127	; 0x7f
   10a30:	str	r2, [sp, #8]
   10a34:	str	r3, [sp, #20]
   10a38:	bl	109d0 <strrchr@plt>
   10a3c:	movw	r1, #4744	; 0x1288
   10a40:	movt	r1, #1
   10a44:	cmp	r0, #0
   10a48:	addne	r3, r0, #1
   10a4c:	mov	r0, #6
   10a50:	moveq	r3, r6
   10a54:	movw	r6, #8344	; 0x2098
   10a58:	movt	r6, #2
   10a5c:	str	r3, [r6]
   10a60:	bl	109c4 <setlocale@plt>
   10a64:	movw	r0, #4748	; 0x128c
   10a68:	movw	r1, #4752	; 0x1290
   10a6c:	movt	r0, #1
   10a70:	movt	r1, #1
   10a74:	bl	109dc <bindtextdomain@plt>
   10a78:	movw	r0, #4748	; 0x128c
   10a7c:	movt	r0, #1
   10a80:	bl	1091c <textdomain@plt>
   10a84:	cmp	r5, #2
   10a88:	beq	10b44 <close@plt+0x150>
   10a8c:	movw	r6, #8336	; 0x2090
   10a90:	movt	r6, #2
   10a94:	mov	r8, #0
   10a98:	mov	r9, #250	; 0xfa
   10a9c:	vldr	d8, [pc, #1004]	; 10e90 <close@plt+0x49c>
   10aa0:	movw	r2, #4868	; 0x1304
   10aa4:	mov	r0, r5
   10aa8:	movt	r2, #1
   10aac:	mov	r1, r4
   10ab0:	bl	1097c <getopt@plt>
   10ab4:	cmn	r0, #1
   10ab8:	mov	r3, r0
   10abc:	beq	10bb4 <close@plt+0x1c0>
   10ac0:	cmp	r3, #114	; 0x72
   10ac4:	beq	10b10 <close@plt+0x11c>
   10ac8:	cmp	r3, #115	; 0x73
   10acc:	beq	10b3c <close@plt+0x148>
   10ad0:	cmp	r3, #100	; 0x64
   10ad4:	beq	10b24 <close@plt+0x130>
   10ad8:	movw	r3, #8332	; 0x208c
   10adc:	movt	r3, #2
   10ae0:	mov	r2, #5
   10ae4:	movw	r1, #4808	; 0x12c8
   10ae8:	mov	r0, #0
   10aec:	movt	r1, #1
   10af0:	ldr	r4, [r3]
   10af4:	bl	108f8 <dcgettext@plt>
   10af8:	mov	r1, #1
   10afc:	mov	r2, r0
   10b00:	mov	r0, r4
   10b04:	bl	109b8 <__fprintf_chk@plt>
   10b08:	mov	r0, #1
   10b0c:	bl	10970 <exit@plt>
   10b10:	ldr	r0, [r6]
   10b14:	mov	r1, #0
   10b18:	bl	109a0 <strtod@plt>
   10b1c:	vmov.f64	d8, d0
   10b20:	b	10aa0 <close@plt+0xac>
   10b24:	ldr	r0, [r6]
   10b28:	mov	r1, #0
   10b2c:	mov	r2, #10
   10b30:	bl	108bc <strtol@plt>
   10b34:	mov	r9, r0
   10b38:	b	10aa0 <close@plt+0xac>
   10b3c:	mov	r8, #1
   10b40:	b	10aa0 <close@plt+0xac>
   10b44:	ldr	r0, [r4, #4]
   10b48:	ldrb	r3, [r0]
   10b4c:	cmp	r3, #45	; 0x2d
   10b50:	bne	10b6c <close@plt+0x178>
   10b54:	ldrb	r3, [r0, #1]
   10b58:	cmp	r3, #86	; 0x56
   10b5c:	bne	10b6c <close@plt+0x178>
   10b60:	ldrb	r3, [r0, #2]
   10b64:	cmp	r3, #0
   10b68:	beq	10b80 <close@plt+0x18c>
   10b6c:	movw	r1, #4772	; 0x12a4
   10b70:	movt	r1, #1
   10b74:	bl	108b0 <strcmp@plt>
   10b78:	cmp	r0, #0
   10b7c:	bne	10a8c <close@plt+0x98>
   10b80:	mov	r2, #5
   10b84:	movw	r1, #4784	; 0x12b0
   10b88:	mov	r0, #0
   10b8c:	movt	r1, #1
   10b90:	bl	108f8 <dcgettext@plt>
   10b94:	ldr	r2, [r6]
   10b98:	movw	r3, #4796	; 0x12bc
   10b9c:	movt	r3, #1
   10ba0:	mov	r1, r0
   10ba4:	mov	r0, #1
   10ba8:	bl	10994 <__printf_chk@plt>
   10bac:	mov	r0, #0
   10bb0:	bl	10970 <exit@plt>
   10bb4:	add	r5, sp, #24
   10bb8:	mov	r0, #0
   10bbc:	movw	r1, #19282	; 0x4b52
   10bc0:	str	r3, [sp, #16]
   10bc4:	str	r3, [r5, #-12]!
   10bc8:	mov	r2, r5
   10bcc:	bl	10940 <ioctl@plt>
   10bd0:	cmp	r0, #0
   10bd4:	bne	10e68 <close@plt+0x474>
   10bd8:	vcmp.f64	d8, #0.0
   10bdc:	vmrs	APSR_nzcv, fpscr
   10be0:	bne	10eac <close@plt+0x4b8>
   10be4:	mov	r3, #1
   10be8:	str	r3, [sp, #16]
   10bec:	cmp	r9, #0
   10bf0:	mov	r0, #0
   10bf4:	movw	r1, #19282	; 0x4b52
   10bf8:	mov	r2, r5
   10bfc:	movle	r3, #1
   10c00:	strgt	r9, [sp, #12]
   10c04:	strle	r3, [sp, #12]
   10c08:	bl	10940 <ioctl@plt>
   10c0c:	cmp	r0, #0
   10c10:	bne	10e7c <close@plt+0x488>
   10c14:	ldr	r3, [sp, #16]
   10c18:	cmp	r3, #0
   10c1c:	vldrne	d9, [pc, #628]	; 10e98 <close@plt+0x4a4>
   10c20:	vldreq	d9, [pc, #632]	; 10ea0 <close@plt+0x4ac>
   10c24:	vmovne	s11, r3
   10c28:	vcvtne.f64.s32	d7, s11
   10c2c:	vdivne.f64	d9, d9, d7
   10c30:	cmp	r8, #0
   10c34:	beq	10f38 <close@plt+0x544>
   10c38:	mov	r0, #0
   10c3c:	movw	r1, #19282	; 0x4b52
   10c40:	mov	r2, r5
   10c44:	mvn	r3, #0
   10c48:	str	r3, [sp, #16]
   10c4c:	str	r3, [sp, #12]
   10c50:	bl	10940 <ioctl@plt>
   10c54:	cmp	r0, #0
   10c58:	beq	10ecc <close@plt+0x4d8>
   10c5c:	bl	10988 <__errno_location@plt>
   10c60:	ldr	r3, [r0]
   10c64:	cmp	r3, #22
   10c68:	bne	10e7c <close@plt+0x488>
   10c6c:	vmov.f64	d7, #36	; 0x41200000  10.0
   10c70:	ldr	r2, [pc, #560]	; 10ea8 <close@plt+0x4b4>
   10c74:	mov	r3, #0
   10c78:	vmul.f64	d8, d8, d7
   10c7c:	b	10c8c <close@plt+0x298>
   10c80:	add	r3, r3, #1
   10c84:	cmp	r3, #32
   10c88:	beq	10cb4 <close@plt+0x2c0>
   10c8c:	ldr	r1, [r2, #4]!
   10c90:	vmov	s14, r1
   10c94:	vcvt.f64.s32	d7, s14
   10c98:	vcmpe.f64	d8, d7
   10c9c:	vmrs	APSR_nzcv, fpscr
   10ca0:	blt	10c80 <close@plt+0x28c>
   10ca4:	ldr	r2, [sp, #8]
   10ca8:	and	r2, r2, #96	; 0x60
   10cac:	orr	r3, r3, r2
   10cb0:	str	r3, [sp, #8]
   10cb4:	cmp	r9, #250	; 0xfa
   10cb8:	ble	10f88 <close@plt+0x594>
   10cbc:	cmp	r9, #500	; 0x1f4
   10cc0:	ble	10f80 <close@plt+0x58c>
   10cc4:	movw	r3, #750	; 0x2ee
   10cc8:	cmp	r9, r3
   10ccc:	ble	10f68 <close@plt+0x574>
   10cd0:	cmp	r9, #1000	; 0x3e8
   10cd4:	movle	r3, #3
   10cd8:	ble	10f6c <close@plt+0x578>
   10cdc:	movw	r0, #4980	; 0x1374
   10ce0:	mov	r1, #2
   10ce4:	movt	r0, #1
   10ce8:	bl	10964 <open@plt>
   10cec:	subs	r4, r0, #0
   10cf0:	blt	10fbc <close@plt+0x5c8>
   10cf4:	movw	r1, #4388	; 0x1124
   10cf8:	mov	r0, #14
   10cfc:	movt	r1, #1
   10d00:	bl	108d4 <signal@plt>
   10d04:	mov	r0, #3
   10d08:	bl	10910 <alarm@plt>
   10d0c:	mov	r1, #100	; 0x64
   10d10:	mov	r2, #0
   10d14:	mov	r0, r4
   10d18:	bl	108e0 <lseek@plt>
   10d1c:	mov	r0, r4
   10d20:	mov	r1, r5
   10d24:	mov	r2, #1
   10d28:	bl	108c8 <read@plt>
   10d2c:	cmn	r0, #1
   10d30:	beq	10f90 <close@plt+0x59c>
   10d34:	ldrb	r3, [sp, #12]
   10d38:	and	r3, r3, #2
   10d3c:	ands	r2, r3, #255	; 0xff
   10d40:	bne	10d0c <close@plt+0x318>
   10d44:	mov	r1, #96	; 0x60
   10d48:	mov	r0, r4
   10d4c:	bl	108e0 <lseek@plt>
   10d50:	mov	r0, r4
   10d54:	mov	r1, r5
   10d58:	mov	r2, #1
   10d5c:	mvn	r3, #12
   10d60:	strb	r3, [sp, #12]
   10d64:	bl	109ac <write@plt>
   10d68:	cmn	r0, #1
   10d6c:	beq	10fa8 <close@plt+0x5b4>
   10d70:	mov	r1, #100	; 0x64
   10d74:	mov	r2, #0
   10d78:	mov	r0, r4
   10d7c:	bl	108e0 <lseek@plt>
   10d80:	mov	r0, r4
   10d84:	mov	r1, r5
   10d88:	mov	r2, #1
   10d8c:	bl	108c8 <read@plt>
   10d90:	cmn	r0, #1
   10d94:	beq	10f90 <close@plt+0x59c>
   10d98:	ldrb	r3, [sp, #12]
   10d9c:	and	r3, r3, #2
   10da0:	ands	r6, r3, #255	; 0xff
   10da4:	bne	10d70 <close@plt+0x37c>
   10da8:	mov	r0, r6
   10dac:	bl	10910 <alarm@plt>
   10db0:	mov	r2, r6
   10db4:	mov	r1, #96	; 0x60
   10db8:	mov	r0, r4
   10dbc:	bl	108e0 <lseek@plt>
   10dc0:	mov	r0, #1
   10dc4:	bl	108ec <sleep@plt>
   10dc8:	mov	r0, r4
   10dcc:	add	r1, sp, #8
   10dd0:	mov	r2, #1
   10dd4:	bl	109ac <write@plt>
   10dd8:	cmn	r0, #1
   10ddc:	beq	10fa8 <close@plt+0x5b4>
   10de0:	mov	r0, r4
   10de4:	bl	109f4 <close@plt>
   10de8:	cmp	r8, #0
   10dec:	bne	10e48 <close@plt+0x454>
   10df0:	mov	r2, #5
   10df4:	mov	r0, r8
   10df8:	movw	r1, #4892	; 0x131c
   10dfc:	movt	r1, #1
   10e00:	bl	108f8 <dcgettext@plt>
   10e04:	ldr	r2, [sp, #8]
   10e08:	movw	r3, #4556	; 0x11cc
   10e0c:	movt	r3, #1
   10e10:	and	ip, r2, #31
   10e14:	vmov.f64	d7, #36	; 0x41200000  10.0
   10e18:	ubfx	r2, r2, #5, #2
   10e1c:	ldr	ip, [r3, ip, lsl #2]
   10e20:	add	r3, r3, r2, lsl #2
   10e24:	vmov	s12, ip
   10e28:	ldr	r3, [r3, #128]	; 0x80
   10e2c:	str	r3, [sp]
   10e30:	vcvt.f64.s32	d6, s12
   10e34:	vdiv.f64	d5, d6, d7
   10e38:	mov	r1, r0
   10e3c:	mov	r0, #1
   10e40:	vmov	r2, r3, d5
   10e44:	bl	10994 <__printf_chk@plt>
   10e48:	ldr	r2, [sp, #20]
   10e4c:	mov	r0, #0
   10e50:	ldr	r3, [r7]
   10e54:	cmp	r2, r3
   10e58:	bne	10fa4 <close@plt+0x5b0>
   10e5c:	add	sp, sp, #28
   10e60:	vpop	{d8-d9}
   10e64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10e68:	bl	10988 <__errno_location@plt>
   10e6c:	ldr	r3, [r0]
   10e70:	cmp	r3, #22
   10e74:	cmpne	r3, #25
   10e78:	beq	10c6c <close@plt+0x278>
   10e7c:	movw	r0, #4876	; 0x130c
   10e80:	movt	r0, #1
   10e84:	bl	10928 <perror@plt>
   10e88:	mov	r0, #1
   10e8c:	bl	10970 <exit@plt>
   10e90:	stclgt	12, cr12, [ip], {205}	; 0xcd
   10e94:	eormi	ip, r5, ip, asr #25
   10e98:	andeq	r0, r0, r0
   10e9c:	addmi	r4, pc, r0
	...
   10ea8:	andeq	r1, r1, r8, asr #3
   10eac:	vldr	d7, [pc, #300]	; 10fe0 <close@plt+0x5ec>
   10eb0:	vdiv.f64	d7, d7, d8
   10eb4:	vcvt.s32.f64	s10, d7
   10eb8:	vmov	r3, s10
   10ebc:	vstr	s10, [sp, #16]
   10ec0:	cmp	r3, #0
   10ec4:	bgt	10bec <close@plt+0x1f8>
   10ec8:	b	10be4 <close@plt+0x1f0>
   10ecc:	ldr	r3, [sp, #16]
   10ed0:	movw	r1, #4940	; 0x134c
   10ed4:	mov	r0, #1
   10ed8:	movt	r1, #1
   10edc:	ldr	r2, [sp, #12]
   10ee0:	bl	10994 <__printf_chk@plt>
   10ee4:	ldr	r3, [sp, #16]
   10ee8:	cmp	r3, #0
   10eec:	vldrne	d8, [pc, #236]	; 10fe0 <close@plt+0x5ec>
   10ef0:	vldreq	d8, [pc, #240]	; 10fe8 <close@plt+0x5f4>
   10ef4:	vmovne	s13, r3
   10ef8:	vcvtne.f64.s32	d7, s13
   10efc:	vdivne.f64	d8, d8, d7
   10f00:	cmp	r8, #0
   10f04:	bne	10e48 <close@plt+0x454>
   10f08:	mov	r0, r8
   10f0c:	mov	r2, #5
   10f10:	movw	r1, #4892	; 0x131c
   10f14:	movt	r1, #1
   10f18:	bl	108f8 <dcgettext@plt>
   10f1c:	ldr	ip, [sp, #12]
   10f20:	vmov	r2, r3, d8
   10f24:	str	ip, [sp]
   10f28:	mov	r1, r0
   10f2c:	mov	r0, #1
   10f30:	bl	10994 <__printf_chk@plt>
   10f34:	b	10e48 <close@plt+0x454>
   10f38:	mov	r0, r8
   10f3c:	mov	r2, #5
   10f40:	movw	r1, #4892	; 0x131c
   10f44:	movt	r1, #1
   10f48:	bl	108f8 <dcgettext@plt>
   10f4c:	ldr	ip, [sp, #12]
   10f50:	vmov	r2, r3, d9
   10f54:	str	ip, [sp]
   10f58:	mov	r1, r0
   10f5c:	mov	r0, #1
   10f60:	bl	10994 <__printf_chk@plt>
   10f64:	b	10c38 <close@plt+0x244>
   10f68:	mov	r3, #2
   10f6c:	ldr	r2, [sp, #8]
   10f70:	and	r2, r2, #31
   10f74:	orr	r3, r2, r3, lsl #5
   10f78:	str	r3, [sp, #8]
   10f7c:	b	10cdc <close@plt+0x2e8>
   10f80:	mov	r3, #1
   10f84:	b	10f6c <close@plt+0x578>
   10f88:	mov	r3, #0
   10f8c:	b	10f6c <close@plt+0x578>
   10f90:	movw	r0, #4992	; 0x1380
   10f94:	movt	r0, #1
   10f98:	bl	10928 <perror@plt>
   10f9c:	mov	r0, #1
   10fa0:	bl	10970 <exit@plt>
   10fa4:	bl	10904 <__stack_chk_fail@plt>
   10fa8:	movw	r0, #5000	; 0x1388
   10fac:	movt	r0, #1
   10fb0:	bl	10928 <perror@plt>
   10fb4:	mov	r0, #1
   10fb8:	bl	10970 <exit@plt>
   10fbc:	mov	r2, #5
   10fc0:	movw	r1, #4968	; 0x1368
   10fc4:	mov	r0, #0
   10fc8:	movt	r1, #1
   10fcc:	bl	108f8 <dcgettext@plt>
   10fd0:	bl	10928 <perror@plt>
   10fd4:	mov	r0, #1
   10fd8:	bl	10970 <exit@plt>
   10fdc:	nop	{0}
   10fe0:	andeq	r0, r0, r0
   10fe4:	addmi	r4, pc, r0
	...
   10ff0:	mov	fp, #0
   10ff4:	mov	lr, #0
   10ff8:	pop	{r1}		; (ldr r1, [sp], #4)
   10ffc:	mov	r2, sp
   11000:	push	{r2}		; (str r2, [sp, #-4]!)
   11004:	push	{r0}		; (str r0, [sp, #-4]!)
   11008:	ldr	ip, [pc, #16]	; 11020 <close@plt+0x62c>
   1100c:	push	{ip}		; (str ip, [sp, #-4]!)
   11010:	ldr	r0, [pc, #12]	; 11024 <close@plt+0x630>
   11014:	ldr	r3, [pc, #12]	; 11028 <close@plt+0x634>
   11018:	bl	1094c <__libc_start_main@plt>
   1101c:	bl	109e8 <abort@plt>
   11020:			; <UNDEFINED> instruction: 0x000111b8
   11024:	andeq	r0, r1, r0, lsl #20
   11028:	andeq	r1, r1, r4, asr r1
   1102c:	ldr	r3, [pc, #20]	; 11048 <close@plt+0x654>
   11030:	ldr	r2, [pc, #20]	; 1104c <close@plt+0x658>
   11034:	add	r3, pc, r3
   11038:	ldr	r2, [r3, r2]
   1103c:	cmp	r2, #0
   11040:	bxeq	lr
   11044:	b	10958 <__gmon_start__@plt>
   11048:	andeq	r0, r1, r4, asr #31
   1104c:	andeq	r0, r0, r0, lsl #1
   11050:	push	{r3, lr}
   11054:	movw	r0, #8328	; 0x2088
   11058:	ldr	r3, [pc, #36]	; 11084 <close@plt+0x690>
   1105c:	movt	r0, #2
   11060:	rsb	r3, r0, r3
   11064:	cmp	r3, #6
   11068:	popls	{r3, pc}
   1106c:	movw	r3, #0
   11070:	movt	r3, #0
   11074:	cmp	r3, #0
   11078:	popeq	{r3, pc}
   1107c:	blx	r3
   11080:	pop	{r3, pc}
   11084:	andeq	r2, r2, fp, lsl #1
   11088:	push	{r3, lr}
   1108c:	movw	r0, #8328	; 0x2088
   11090:	movw	r3, #8328	; 0x2088
   11094:	movt	r0, #2
   11098:	movt	r3, #2
   1109c:	rsb	r3, r0, r3
   110a0:	asr	r3, r3, #2
   110a4:	add	r3, r3, r3, lsr #31
   110a8:	asrs	r1, r3, #1
   110ac:	popeq	{r3, pc}
   110b0:	movw	r2, #0
   110b4:	movt	r2, #0
   110b8:	cmp	r2, #0
   110bc:	popeq	{r3, pc}
   110c0:	blx	r2
   110c4:	pop	{r3, pc}
   110c8:	push	{r4, lr}
   110cc:	movw	r4, #8340	; 0x2094
   110d0:	movt	r4, #2
   110d4:	ldrb	r3, [r4]
   110d8:	cmp	r3, #0
   110dc:	popne	{r4, pc}
   110e0:	bl	11050 <close@plt+0x65c>
   110e4:	mov	r3, #1
   110e8:	strb	r3, [r4]
   110ec:	pop	{r4, pc}
   110f0:	movw	r0, #7940	; 0x1f04
   110f4:	movt	r0, #2
   110f8:	push	{r3, lr}
   110fc:	ldr	r3, [r0]
   11100:	cmp	r3, #0
   11104:	beq	1111c <close@plt+0x728>
   11108:	movw	r3, #0
   1110c:	movt	r3, #0
   11110:	cmp	r3, #0
   11114:	beq	1111c <close@plt+0x728>
   11118:	blx	r3
   1111c:	pop	{r3, lr}
   11120:	b	11088 <close@plt+0x694>
   11124:	push	{r3, lr}
   11128:	movw	r3, #8332	; 0x208c
   1112c:	movt	r3, #2
   11130:	movw	r0, #4700	; 0x125c
   11134:	mov	r1, #1
   11138:	movt	r0, #1
   1113c:	ldr	r3, [r3]
   11140:	mov	r2, #44	; 0x2c
   11144:	bl	10934 <fwrite@plt>
   11148:	mov	r0, #2
   1114c:	pop	{r3, lr}
   11150:	b	108a4 <raise@plt>
   11154:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11158:	mov	r7, r0
   1115c:	ldr	r6, [pc, #76]	; 111b0 <close@plt+0x7bc>
   11160:	mov	r8, r1
   11164:	ldr	r5, [pc, #72]	; 111b4 <close@plt+0x7c0>
   11168:	mov	r9, r2
   1116c:	add	r6, pc, r6
   11170:	bl	10884 <raise@plt-0x20>
   11174:	add	r5, pc, r5
   11178:	rsb	r6, r5, r6
   1117c:	asrs	r6, r6, #2
   11180:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11184:	sub	r5, r5, #4
   11188:	mov	r4, #0
   1118c:	add	r4, r4, #1
   11190:	ldr	r3, [r5, #4]!
   11194:	mov	r0, r7
   11198:	mov	r1, r8
   1119c:	mov	r2, r9
   111a0:	blx	r3
   111a4:	cmp	r4, r6
   111a8:	bne	1118c <close@plt+0x798>
   111ac:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   111b0:	andeq	r0, r1, ip, lsl #27
   111b4:	andeq	r0, r1, r0, lsl #27
   111b8:	bx	lr

Disassembly of section .fini:

000111bc <.fini>:
   111bc:	push	{r3, lr}
   111c0:	pop	{r3, pc}
