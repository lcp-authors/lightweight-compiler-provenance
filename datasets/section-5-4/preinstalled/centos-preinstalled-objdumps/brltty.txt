
centos-preinstalled/brltty:     file format elf32-littlearm


Disassembly of section .init:

0000f3c0 <_init@@Base>:
    f3c0:	push	{r3, lr}
    f3c4:	bl	ffac <_start@@Base+0x58>
    f3c8:	pop	{r3, pc}

Disassembly of section .plt:

0000f3cc <chdir@plt-0x14>:
    f3cc:	push	{lr}		; (str lr, [sp, #-4]!)
    f3d0:	ldr	lr, [pc, #4]	; f3dc <_init@@Base+0x1c>
    f3d4:	add	lr, pc, lr
    f3d8:	ldr	pc, [lr, #8]!
    f3dc:	andeq	r3, r6, r4, lsr #13

0000f3e0 <chdir@plt>:
    f3e0:	add	ip, pc, #0, 12
    f3e4:	add	ip, ip, #405504	; 0x63000
    f3e8:	ldr	pc, [ip, #1700]!	; 0x6a4

0000f3ec <getpwnam@plt>:
    f3ec:	add	ip, pc, #0, 12
    f3f0:	add	ip, ip, #405504	; 0x63000
    f3f4:	ldr	pc, [ip, #1692]!	; 0x69c

0000f3f8 <pthread_mutex_lock@plt>:
    f3f8:	add	ip, pc, #0, 12
    f3fc:	add	ip, ip, #405504	; 0x63000
    f400:	ldr	pc, [ip, #1684]!	; 0x694

0000f404 <localtime_r@plt>:
    f404:	add	ip, pc, #0, 12
    f408:	add	ip, ip, #405504	; 0x63000
    f40c:	ldr	pc, [ip, #1676]!	; 0x68c

0000f410 <wcslen@plt>:
    f410:	add	ip, pc, #0, 12
    f414:	add	ip, ip, #405504	; 0x63000
    f418:	ldr	pc, [ip, #1668]!	; 0x684

0000f41c <pthread_mutex_init@plt>:
    f41c:	add	ip, pc, #0, 12
    f420:	add	ip, ip, #405504	; 0x63000
    f424:	ldr	pc, [ip, #1660]!	; 0x67c

0000f428 <rand@plt>:
    f428:	add	ip, pc, #0, 12
    f42c:	add	ip, ip, #405504	; 0x63000
    f430:	ldr	pc, [ip, #1652]!	; 0x674

0000f434 <towlower@plt>:
    f434:	add	ip, pc, #0, 12
    f438:	add	ip, ip, #405504	; 0x63000
    f43c:	ldr	pc, [ip, #1644]!	; 0x66c

0000f440 <ftruncate@plt>:
    f440:	add	ip, pc, #0, 12
    f444:	add	ip, ip, #405504	; 0x63000
    f448:	ldr	pc, [ip, #1636]!	; 0x664

0000f44c <iswspace@plt>:
    f44c:	add	ip, pc, #0, 12
    f450:	add	ip, ip, #405504	; 0x63000
    f454:	ldr	pc, [ip, #1628]!	; 0x65c

0000f458 <getpid@plt>:
    f458:	add	ip, pc, #0, 12
    f45c:	add	ip, ip, #405504	; 0x63000
    f460:	ldr	pc, [ip, #1620]!	; 0x654

0000f464 <__memcpy_chk@plt>:
    f464:	add	ip, pc, #0, 12
    f468:	add	ip, ip, #405504	; 0x63000
    f46c:	ldr	pc, [ip, #1612]!	; 0x64c

0000f470 <mbrtowc@plt>:
    f470:	add	ip, pc, #0, 12
    f474:	add	ip, ip, #405504	; 0x63000
    f478:	ldr	pc, [ip, #1604]!	; 0x644

0000f47c <pthread_rwlock_destroy@plt>:
    f47c:	add	ip, pc, #0, 12
    f480:	add	ip, ip, #405504	; 0x63000
    f484:	ldr	pc, [ip, #1596]!	; 0x63c

0000f488 <dlerror@plt>:
    f488:	add	ip, pc, #0, 12
    f48c:	add	ip, ip, #405504	; 0x63000
    f490:	ldr	pc, [ip, #1588]!	; 0x634

0000f494 <gettimeofday@plt>:
    f494:	add	ip, pc, #0, 12
    f498:	add	ip, ip, #405504	; 0x63000
    f49c:	ldr	pc, [ip, #1580]!	; 0x62c

0000f4a0 <cfsetospeed@plt>:
    f4a0:	add	ip, pc, #0, 12
    f4a4:	add	ip, ip, #405504	; 0x63000
    f4a8:	ldr	pc, [ip, #1572]!	; 0x624

0000f4ac <iswupper@plt>:
    f4ac:	add	ip, pc, #0, 12
    f4b0:	add	ip, ip, #405504	; 0x63000
    f4b4:	ldr	pc, [ip, #1564]!	; 0x61c

0000f4b8 <getsockopt@plt>:
    f4b8:	add	ip, pc, #0, 12
    f4bc:	add	ip, ip, #405504	; 0x63000
    f4c0:	ldr	pc, [ip, #1556]!	; 0x614

0000f4c4 <strcasecmp@plt>:
    f4c4:	add	ip, pc, #0, 12
    f4c8:	add	ip, ip, #405504	; 0x63000
    f4cc:	ldr	pc, [ip, #1548]!	; 0x60c

0000f4d0 <fdopen@plt>:
    f4d0:	add	ip, pc, #0, 12
    f4d4:	add	ip, ip, #405504	; 0x63000
    f4d8:	ldr	pc, [ip, #1540]!	; 0x604

0000f4dc <freeaddrinfo@plt>:
    f4dc:	add	ip, pc, #0, 12
    f4e0:	add	ip, ip, #405504	; 0x63000
    f4e4:	ldr	pc, [ip, #1532]!	; 0x5fc

0000f4e8 <strtol@plt>:
    f4e8:	add	ip, pc, #0, 12
    f4ec:	add	ip, ip, #405504	; 0x63000
    f4f0:	ldr	pc, [ip, #1524]!	; 0x5f4

0000f4f4 <free@plt>:
    f4f4:	add	ip, pc, #0, 12
    f4f8:	add	ip, ip, #405504	; 0x63000
    f4fc:	ldr	pc, [ip, #1516]!	; 0x5ec

0000f500 <readdir@plt>:
    f500:	add	ip, pc, #0, 12
    f504:	add	ip, ip, #405504	; 0x63000
    f508:	ldr	pc, [ip, #1508]!	; 0x5e4

0000f50c <getaddrinfo@plt>:
    f50c:	add	ip, pc, #0, 12
    f510:	add	ip, ip, #405504	; 0x63000
    f514:	ldr	pc, [ip, #1500]!	; 0x5dc

0000f518 <iswalpha@plt>:
    f518:	add	ip, pc, #0, 12
    f51c:	add	ip, ip, #405504	; 0x63000
    f520:	ldr	pc, [ip, #1492]!	; 0x5d4

0000f524 <pthread_mutexattr_init@plt>:
    f524:	add	ip, pc, #0, 12
    f528:	add	ip, ip, #405504	; 0x63000
    f52c:	ldr	pc, [ip, #1484]!	; 0x5cc

0000f530 <__gcc_personality_v0@plt>:
    f530:	add	ip, pc, #0, 12
    f534:	add	ip, ip, #405504	; 0x63000
    f538:	ldr	pc, [ip, #1476]!	; 0x5c4

0000f53c <qsort@plt>:
    f53c:	add	ip, pc, #0, 12
    f540:	add	ip, ip, #405504	; 0x63000
    f544:	ldr	pc, [ip, #1468]!	; 0x5bc

0000f548 <strncmp@plt>:
    f548:	add	ip, pc, #0, 12
    f54c:	add	ip, ip, #405504	; 0x63000
    f550:	ldr	pc, [ip, #1460]!	; 0x5b4

0000f554 <regcomp@plt>:
    f554:	add	ip, pc, #0, 12
    f558:	add	ip, ip, #405504	; 0x63000
    f55c:	ldr	pc, [ip, #1452]!	; 0x5ac

0000f560 <mbstowcs@plt>:
    f560:	add	ip, pc, #0, 12
    f564:	add	ip, ip, #405504	; 0x63000
    f568:	ldr	pc, [ip, #1444]!	; 0x5a4

0000f56c <__open_2@plt>:
    f56c:	add	ip, pc, #0, 12
    f570:	add	ip, ip, #405504	; 0x63000
    f574:	ldr	pc, [ip, #1436]!	; 0x59c

0000f578 <statfs@plt>:
    f578:	add	ip, pc, #0, 12
    f57c:	add	ip, ip, #405504	; 0x63000
    f580:	ldr	pc, [ip, #1428]!	; 0x594

0000f584 <pthread_exit@plt>:
    f584:	add	ip, pc, #0, 12
    f588:	add	ip, ip, #405504	; 0x63000
    f58c:	ldr	pc, [ip, #1420]!	; 0x58c

0000f590 <closedir@plt>:
    f590:	add	ip, pc, #0, 12
    f594:	add	ip, ip, #405504	; 0x63000
    f598:	ldr	pc, [ip, #1412]!	; 0x584

0000f59c <endmntent@plt>:
    f59c:	add	ip, pc, #0, 12
    f5a0:	add	ip, ip, #405504	; 0x63000
    f5a4:	ldr	pc, [ip, #1404]!	; 0x57c

0000f5a8 <exit@plt>:
    f5a8:	add	ip, pc, #0, 12
    f5ac:	add	ip, ip, #405504	; 0x63000
    f5b0:	ldr	pc, [ip, #1396]!	; 0x574

0000f5b4 <getegid@plt>:
    f5b4:	add	ip, pc, #0, 12
    f5b8:	add	ip, ip, #405504	; 0x63000
    f5bc:	ldr	pc, [ip, #1388]!	; 0x56c

0000f5c0 <strerror@plt>:
    f5c0:	add	ip, pc, #0, 12
    f5c4:	add	ip, ip, #405504	; 0x63000
    f5c8:	ldr	pc, [ip, #1380]!	; 0x564

0000f5cc <__xmknod@plt>:
    f5cc:	add	ip, pc, #0, 12
    f5d0:	add	ip, ip, #405504	; 0x63000
    f5d4:	ldr	pc, [ip, #1372]!	; 0x55c

0000f5d8 <__vsnprintf_chk@plt>:
    f5d8:	add	ip, pc, #0, 12
    f5dc:	add	ip, ip, #405504	; 0x63000
    f5e0:	ldr	pc, [ip, #1364]!	; 0x554

0000f5e4 <dlclose@plt>:
    f5e4:	add	ip, pc, #0, 12
    f5e8:	add	ip, ip, #405504	; 0x63000
    f5ec:	ldr	pc, [ip, #1356]!	; 0x54c

0000f5f0 <regfree@plt>:
    f5f0:	add	ip, pc, #0, 12
    f5f4:	add	ip, ip, #405504	; 0x63000
    f5f8:	ldr	pc, [ip, #1348]!	; 0x544

0000f5fc <feof@plt>:
    f5fc:	add	ip, pc, #0, 12
    f600:	add	ip, ip, #405504	; 0x63000
    f604:	ldr	pc, [ip, #1340]!	; 0x53c

0000f608 <strtok@plt>:
    f608:	add	ip, pc, #0, 12
    f60c:	add	ip, ip, #405504	; 0x63000
    f610:	ldr	pc, [ip, #1332]!	; 0x534

0000f614 <nl_langinfo@plt>:
    f614:	add	ip, pc, #0, 12
    f618:	add	ip, ip, #405504	; 0x63000
    f61c:	ldr	pc, [ip, #1324]!	; 0x52c

0000f620 <wmemcpy@plt>:
    f620:	add	ip, pc, #0, 12
    f624:	add	ip, ip, #405504	; 0x63000
    f628:	ldr	pc, [ip, #1316]!	; 0x524

0000f62c <regexec@plt>:
    f62c:	add	ip, pc, #0, 12
    f630:	add	ip, ip, #405504	; 0x63000
    f634:	ldr	pc, [ip, #1308]!	; 0x51c

0000f638 <textdomain@plt>:
    f638:	add	ip, pc, #0, 12
    f63c:	add	ip, ip, #405504	; 0x63000
    f640:	ldr	pc, [ip, #1300]!	; 0x514

0000f644 <readlink@plt>:
    f644:	add	ip, pc, #0, 12
    f648:	add	ip, ip, #405504	; 0x63000
    f64c:	ldr	pc, [ip, #1292]!	; 0x50c

0000f650 <getmntent@plt>:
    f650:	add	ip, pc, #0, 12
    f654:	add	ip, ip, #405504	; 0x63000
    f658:	ldr	pc, [ip, #1284]!	; 0x504

0000f65c <__fprintf_chk@plt>:
    f65c:	add	ip, pc, #0, 12
    f660:	add	ip, ip, #405504	; 0x63000
    f664:	ldr	pc, [ip, #1276]!	; 0x4fc

0000f668 <link@plt>:
    f668:	add	ip, pc, #0, 12
    f66c:	add	ip, ip, #405504	; 0x63000
    f670:	ldr	pc, [ip, #1268]!	; 0x4f4

0000f674 <strtoul@plt>:
    f674:	add	ip, pc, #0, 12
    f678:	add	ip, ip, #405504	; 0x63000
    f67c:	ldr	pc, [ip, #1260]!	; 0x4ec

0000f680 <difftime@plt>:
    f680:	add	ip, pc, #0, 12
    f684:	add	ip, ip, #405504	; 0x63000
    f688:	ldr	pc, [ip, #1252]!	; 0x4e4

0000f68c <nanosleep@plt>:
    f68c:	add	ip, pc, #0, 12
    f690:	add	ip, ip, #405504	; 0x63000
    f694:	ldr	pc, [ip, #1244]!	; 0x4dc

0000f698 <strftime@plt>:
    f698:	add	ip, pc, #0, 12
    f69c:	add	ip, ip, #405504	; 0x63000
    f6a0:	ldr	pc, [ip, #1236]!	; 0x4d4

0000f6a4 <putchar@plt>:
    f6a4:	add	ip, pc, #0, 12
    f6a8:	add	ip, ip, #405504	; 0x63000
    f6ac:	ldr	pc, [ip, #1228]!	; 0x4cc

0000f6b0 <memset@plt>:
    f6b0:	add	ip, pc, #0, 12
    f6b4:	add	ip, ip, #405504	; 0x63000
    f6b8:	ldr	pc, [ip, #1220]!	; 0x4c4

0000f6bc <closelog@plt>:
    f6bc:	add	ip, pc, #0, 12
    f6c0:	add	ip, ip, #405504	; 0x63000
    f6c4:	ldr	pc, [ip, #1212]!	; 0x4bc

0000f6c8 <strspn@plt>:
    f6c8:	add	ip, pc, #0, 12
    f6cc:	add	ip, ip, #405504	; 0x63000
    f6d0:	ldr	pc, [ip, #1204]!	; 0x4b4

0000f6d4 <opendir@plt>:
    f6d4:	add	ip, pc, #0, 12
    f6d8:	add	ip, ip, #405504	; 0x63000
    f6dc:	ldr	pc, [ip, #1196]!	; 0x4ac

0000f6e0 <fcntl@plt>:
    f6e0:	add	ip, pc, #0, 12
    f6e4:	add	ip, ip, #405504	; 0x63000
    f6e8:	ldr	pc, [ip, #1188]!	; 0x4a4

0000f6ec <pthread_sigmask@plt>:
    f6ec:	add	ip, pc, #0, 12
    f6f0:	add	ip, ip, #405504	; 0x63000
    f6f4:	ldr	pc, [ip, #1180]!	; 0x49c

0000f6f8 <pthread_rwlock_rdlock@plt>:
    f6f8:	add	ip, pc, #0, 12
    f6fc:	add	ip, ip, #405504	; 0x63000
    f700:	ldr	pc, [ip, #1172]!	; 0x494

0000f704 <wcschr@plt>:
    f704:	add	ip, pc, #0, 12
    f708:	add	ip, ip, #405504	; 0x63000
    f70c:	ldr	pc, [ip, #1164]!	; 0x48c

0000f710 <cfsetispeed@plt>:
    f710:	add	ip, pc, #0, 12
    f714:	add	ip, ip, #405504	; 0x63000
    f718:	ldr	pc, [ip, #1156]!	; 0x484

0000f71c <fchdir@plt>:
    f71c:	add	ip, pc, #0, 12
    f720:	add	ip, ip, #405504	; 0x63000
    f724:	ldr	pc, [ip, #1148]!	; 0x47c

0000f728 <listen@plt>:
    f728:	add	ip, pc, #0, 12
    f72c:	add	ip, ip, #405504	; 0x63000
    f730:	ldr	pc, [ip, #1140]!	; 0x474

0000f734 <snprintf@plt>:
    f734:	add	ip, pc, #0, 12
    f738:	add	ip, ip, #405504	; 0x63000
    f73c:	ldr	pc, [ip, #1132]!	; 0x46c

0000f740 <__strdup@plt>:
    f740:	add	ip, pc, #0, 12
    f744:	add	ip, ip, #405504	; 0x63000
    f748:	ldr	pc, [ip, #1124]!	; 0x464

0000f74c <sigaddset@plt>:
    f74c:	add	ip, pc, #0, 12
    f750:	add	ip, ip, #405504	; 0x63000
    f754:	ldr	pc, [ip, #1116]!	; 0x45c

0000f758 <dcngettext@plt>:
    f758:	add	ip, pc, #0, 12
    f75c:	add	ip, ip, #405504	; 0x63000
    f760:	ldr	pc, [ip, #1108]!	; 0x454

0000f764 <close@plt>:
    f764:	add	ip, pc, #0, 12
    f768:	add	ip, ip, #405504	; 0x63000
    f76c:	ldr	pc, [ip, #1100]!	; 0x44c

0000f770 <wmemcmp@plt>:
    f770:	add	ip, pc, #0, 12
    f774:	add	ip, ip, #405504	; 0x63000
    f778:	ldr	pc, [ip, #1092]!	; 0x444

0000f77c <fopen@plt>:
    f77c:	add	ip, pc, #0, 12
    f780:	add	ip, ip, #405504	; 0x63000
    f784:	ldr	pc, [ip, #1084]!	; 0x43c

0000f788 <read@plt>:
    f788:	add	ip, pc, #0, 12
    f78c:	add	ip, ip, #405504	; 0x63000
    f790:	ldr	pc, [ip, #1076]!	; 0x434

0000f794 <clearerr@plt>:
    f794:	add	ip, pc, #0, 12
    f798:	add	ip, ip, #405504	; 0x63000
    f79c:	ldr	pc, [ip, #1068]!	; 0x42c

0000f7a0 <wmemchr@plt>:
    f7a0:	add	ip, pc, #0, 12
    f7a4:	add	ip, ip, #405504	; 0x63000
    f7a8:	ldr	pc, [ip, #1060]!	; 0x424

0000f7ac <abort@plt>:
    f7ac:	add	ip, pc, #0, 12
    f7b0:	add	ip, ip, #405504	; 0x63000
    f7b4:	ldr	pc, [ip, #1052]!	; 0x41c

0000f7b8 <bsearch@plt>:
    f7b8:	add	ip, pc, #0, 12
    f7bc:	add	ip, ip, #405504	; 0x63000
    f7c0:	ldr	pc, [ip, #1044]!	; 0x414

0000f7c4 <poll@plt>:
    f7c4:	add	ip, pc, #0, 12
    f7c8:	add	ip, ip, #405504	; 0x63000
    f7cc:	ldr	pc, [ip, #1036]!	; 0x40c

0000f7d0 <__ctype_toupper_loc@plt>:
    f7d0:	add	ip, pc, #0, 12
    f7d4:	add	ip, ip, #405504	; 0x63000
    f7d8:	ldr	pc, [ip, #1028]!	; 0x404

0000f7dc <memmove@plt>:
    f7dc:	add	ip, pc, #0, 12
    f7e0:	add	ip, ip, #405504	; 0x63000
    f7e4:	ldr	pc, [ip, #1020]!	; 0x3fc

0000f7e8 <freopen@plt>:
    f7e8:	add	ip, pc, #0, 12
    f7ec:	add	ip, ip, #405504	; 0x63000
    f7f0:	ldr	pc, [ip, #1012]!	; 0x3f4

0000f7f4 <mkfifo@plt>:
    f7f4:	add	ip, pc, #0, 12
    f7f8:	add	ip, ip, #405504	; 0x63000
    f7fc:	ldr	pc, [ip, #1004]!	; 0x3ec

0000f800 <unlink@plt>:
    f800:	add	ip, pc, #0, 12
    f804:	add	ip, ip, #405504	; 0x63000
    f808:	ldr	pc, [ip, #996]!	; 0x3e4

0000f80c <iswlower@plt>:
    f80c:	add	ip, pc, #0, 12
    f810:	add	ip, ip, #405504	; 0x63000
    f814:	ldr	pc, [ip, #988]!	; 0x3dc

0000f818 <dlopen@plt>:
    f818:	add	ip, pc, #0, 12
    f81c:	add	ip, ip, #405504	; 0x63000
    f820:	ldr	pc, [ip, #980]!	; 0x3d4

0000f824 <kill@plt>:
    f824:	add	ip, pc, #0, 12
    f828:	add	ip, ip, #405504	; 0x63000
    f82c:	ldr	pc, [ip, #972]!	; 0x3cc

0000f830 <u_getIntPropertyValue_50@plt>:
    f830:	add	ip, pc, #0, 12
    f834:	add	ip, ip, #405504	; 0x63000
    f838:	ldr	pc, [ip, #964]!	; 0x3c4

0000f83c <ioctl@plt>:
    f83c:	add	ip, pc, #0, 12
    f840:	add	ip, ip, #405504	; 0x63000
    f844:	ldr	pc, [ip, #956]!	; 0x3bc

0000f848 <tcflush@plt>:
    f848:	add	ip, pc, #0, 12
    f84c:	add	ip, ip, #405504	; 0x63000
    f850:	ldr	pc, [ip, #948]!	; 0x3b4

0000f854 <localtime@plt>:
    f854:	add	ip, pc, #0, 12
    f858:	add	ip, ip, #405504	; 0x63000
    f85c:	ldr	pc, [ip, #940]!	; 0x3ac

0000f860 <clock_gettime@plt>:
    f860:	add	ip, pc, #0, 12
    f864:	add	ip, ip, #405504	; 0x63000
    f868:	ldr	pc, [ip, #932]!	; 0x3a4

0000f86c <inet_ntoa@plt>:
    f86c:	add	ip, pc, #0, 12
    f870:	add	ip, ip, #405504	; 0x63000
    f874:	ldr	pc, [ip, #924]!	; 0x39c

0000f878 <realloc@plt>:
    f878:	add	ip, pc, #0, 12
    f87c:	add	ip, ip, #405504	; 0x63000
    f880:	ldr	pc, [ip, #916]!	; 0x394

0000f884 <pthread_attr_setdetachstate@plt>:
    f884:	add	ip, pc, #0, 12
    f888:	add	ip, ip, #405504	; 0x63000
    f88c:	ldr	pc, [ip, #908]!	; 0x38c

0000f890 <u_charFromName_50@plt>:
    f890:	add	ip, pc, #0, 12
    f894:	add	ip, ip, #405504	; 0x63000
    f898:	ldr	pc, [ip, #900]!	; 0x384

0000f89c <unorm_normalize_50@plt>:
    f89c:	add	ip, pc, #0, 12
    f8a0:	add	ip, ip, #405504	; 0x63000
    f8a4:	ldr	pc, [ip, #892]!	; 0x37c

0000f8a8 <strtod@plt>:
    f8a8:	add	ip, pc, #0, 12
    f8ac:	add	ip, ip, #405504	; 0x63000
    f8b0:	ldr	pc, [ip, #884]!	; 0x374

0000f8b4 <iswpunct@plt>:
    f8b4:	add	ip, pc, #0, 12
    f8b8:	add	ip, ip, #405504	; 0x63000
    f8bc:	ldr	pc, [ip, #876]!	; 0x36c

0000f8c0 <open@plt>:
    f8c0:	add	ip, pc, #0, 12
    f8c4:	add	ip, ip, #405504	; 0x63000
    f8c8:	ldr	pc, [ip, #868]!	; 0x364

0000f8cc <bind@plt>:
    f8cc:	add	ip, pc, #0, 12
    f8d0:	add	ip, ip, #405504	; 0x63000
    f8d4:	ldr	pc, [ip, #860]!	; 0x35c

0000f8d8 <waitpid@plt>:
    f8d8:	add	ip, pc, #0, 12
    f8dc:	add	ip, ip, #405504	; 0x63000
    f8e0:	ldr	pc, [ip, #852]!	; 0x354

0000f8e4 <chmod@plt>:
    f8e4:	add	ip, pc, #0, 12
    f8e8:	add	ip, ip, #405504	; 0x63000
    f8ec:	ldr	pc, [ip, #844]!	; 0x34c

0000f8f0 <pthread_mutex_destroy@plt>:
    f8f0:	add	ip, pc, #0, 12
    f8f4:	add	ip, ip, #405504	; 0x63000
    f8f8:	ldr	pc, [ip, #836]!	; 0x344

0000f8fc <tcsetattr@plt>:
    f8fc:	add	ip, pc, #0, 12
    f900:	add	ip, ip, #405504	; 0x63000
    f904:	ldr	pc, [ip, #828]!	; 0x33c

0000f908 <fread@plt>:
    f908:	add	ip, pc, #0, 12
    f90c:	add	ip, ip, #405504	; 0x63000
    f910:	ldr	pc, [ip, #820]!	; 0x334

0000f914 <fileno@plt>:
    f914:	add	ip, pc, #0, 12
    f918:	add	ip, ip, #405504	; 0x63000
    f91c:	ldr	pc, [ip, #812]!	; 0x32c

0000f920 <addmntent@plt>:
    f920:	add	ip, pc, #0, 12
    f924:	add	ip, ip, #405504	; 0x63000
    f928:	ldr	pc, [ip, #804]!	; 0x324

0000f92c <pthread_rwlock_unlock@plt>:
    f92c:	add	ip, pc, #0, 12
    f930:	add	ip, ip, #405504	; 0x63000
    f934:	ldr	pc, [ip, #796]!	; 0x31c

0000f938 <__syslog_chk@plt>:
    f938:	add	ip, pc, #0, 12
    f93c:	add	ip, ip, #405504	; 0x63000
    f940:	ldr	pc, [ip, #788]!	; 0x314

0000f944 <pthread_rwlock_wrlock@plt>:
    f944:	add	ip, pc, #0, 12
    f948:	add	ip, ip, #405504	; 0x63000
    f94c:	ldr	pc, [ip, #780]!	; 0x30c

0000f950 <__stack_chk_fail@plt>:
    f950:	add	ip, pc, #0, 12
    f954:	add	ip, ip, #405504	; 0x63000
    f958:	ldr	pc, [ip, #772]!	; 0x304

0000f95c <wmemset@plt>:
    f95c:	add	ip, pc, #0, 12
    f960:	add	ip, ip, #405504	; 0x63000
    f964:	ldr	pc, [ip, #764]!	; 0x2fc

0000f968 <pthread_rwlock_tryrdlock@plt>:
    f968:	add	ip, pc, #0, 12
    f96c:	add	ip, ip, #405504	; 0x63000
    f970:	ldr	pc, [ip, #756]!	; 0x2f4

0000f974 <fork@plt>:
    f974:	add	ip, pc, #0, 12
    f978:	add	ip, ip, #405504	; 0x63000
    f97c:	ldr	pc, [ip, #748]!	; 0x2ec

0000f980 <socket@plt>:
    f980:	add	ip, pc, #0, 12
    f984:	add	ip, ip, #405504	; 0x63000
    f988:	ldr	pc, [ip, #740]!	; 0x2e4

0000f98c <iswalnum@plt>:
    f98c:	add	ip, pc, #0, 12
    f990:	add	ip, ip, #405504	; 0x63000
    f994:	ldr	pc, [ip, #732]!	; 0x2dc

0000f998 <u_charName_50@plt>:
    f998:	add	ip, pc, #0, 12
    f99c:	add	ip, ip, #405504	; 0x63000
    f9a0:	ldr	pc, [ip, #724]!	; 0x2d4

0000f9a4 <access@plt>:
    f9a4:	add	ip, pc, #0, 12
    f9a8:	add	ip, ip, #405504	; 0x63000
    f9ac:	ldr	pc, [ip, #716]!	; 0x2cc

0000f9b0 <isatty@plt>:
    f9b0:	add	ip, pc, #0, 12
    f9b4:	add	ip, ip, #405504	; 0x63000
    f9b8:	ldr	pc, [ip, #708]!	; 0x2c4

0000f9bc <dcgettext@plt>:
    f9bc:	add	ip, pc, #0, 12
    f9c0:	add	ip, ip, #405504	; 0x63000
    f9c4:	ldr	pc, [ip, #700]!	; 0x2bc

0000f9c8 <setsid@plt>:
    f9c8:	add	ip, pc, #0, 12
    f9cc:	add	ip, ip, #405504	; 0x63000
    f9d0:	ldr	pc, [ip, #692]!	; 0x2b4

0000f9d4 <setmntent@plt>:
    f9d4:	add	ip, pc, #0, 12
    f9d8:	add	ip, ip, #405504	; 0x63000
    f9dc:	ldr	pc, [ip, #684]!	; 0x2ac

0000f9e0 <mkdir@plt>:
    f9e0:	add	ip, pc, #0, 12
    f9e4:	add	ip, ip, #405504	; 0x63000
    f9e8:	ldr	pc, [ip, #676]!	; 0x2a4

0000f9ec <__cxa_atexit@plt>:
    f9ec:	add	ip, pc, #0, 12
    f9f0:	add	ip, ip, #405504	; 0x63000
    f9f4:	ldr	pc, [ip, #668]!	; 0x29c

0000f9f8 <strstr@plt>:
    f9f8:	add	ip, pc, #0, 12
    f9fc:	add	ip, ip, #405504	; 0x63000
    fa00:	ldr	pc, [ip, #660]!	; 0x294

0000fa04 <getnameinfo@plt>:
    fa04:	add	ip, pc, #0, 12
    fa08:	add	ip, ip, #405504	; 0x63000
    fa0c:	ldr	pc, [ip, #652]!	; 0x28c

0000fa10 <strncasecmp@plt>:
    fa10:	add	ip, pc, #0, 12
    fa14:	add	ip, ip, #405504	; 0x63000
    fa18:	ldr	pc, [ip, #644]!	; 0x284

0000fa1c <getopt_long@plt>:
    fa1c:	add	ip, pc, #0, 12
    fa20:	add	ip, ip, #405504	; 0x63000
    fa24:	ldr	pc, [ip, #636]!	; 0x27c

0000fa28 <setsockopt@plt>:
    fa28:	add	ip, pc, #0, 12
    fa2c:	add	ip, ip, #405504	; 0x63000
    fa30:	ldr	pc, [ip, #628]!	; 0x274

0000fa34 <select@plt>:
    fa34:	add	ip, pc, #0, 12
    fa38:	add	ip, ip, #405504	; 0x63000
    fa3c:	ldr	pc, [ip, #620]!	; 0x26c

0000fa40 <pthread_cancel@plt>:
    fa40:	add	ip, pc, #0, 12
    fa44:	add	ip, ip, #405504	; 0x63000
    fa48:	ldr	pc, [ip, #612]!	; 0x264

0000fa4c <lseek@plt>:
    fa4c:	add	ip, pc, #0, 12
    fa50:	add	ip, ip, #405504	; 0x63000
    fa54:	ldr	pc, [ip, #604]!	; 0x25c

0000fa58 <raise@plt>:
    fa58:	add	ip, pc, #0, 12
    fa5c:	add	ip, ip, #405504	; 0x63000
    fa60:	ldr	pc, [ip, #596]!	; 0x254

0000fa64 <__ctype_b_loc@plt>:
    fa64:	add	ip, pc, #0, 12
    fa68:	add	ip, ip, #405504	; 0x63000
    fa6c:	ldr	pc, [ip, #588]!	; 0x24c

0000fa70 <pthread_attr_setstacksize@plt>:
    fa70:	add	ip, pc, #0, 12
    fa74:	add	ip, ip, #405504	; 0x63000
    fa78:	ldr	pc, [ip, #580]!	; 0x244

0000fa7c <bindtextdomain@plt>:
    fa7c:	add	ip, pc, #0, 12
    fa80:	add	ip, ip, #405504	; 0x63000
    fa84:	ldr	pc, [ip, #572]!	; 0x23c

0000fa88 <iswdigit@plt>:
    fa88:	add	ip, pc, #0, 12
    fa8c:	add	ip, ip, #405504	; 0x63000
    fa90:	ldr	pc, [ip, #564]!	; 0x234

0000fa94 <connect@plt>:
    fa94:	add	ip, pc, #0, 12
    fa98:	add	ip, ip, #405504	; 0x63000
    fa9c:	ldr	pc, [ip, #556]!	; 0x22c

0000faa0 <sigaction@plt>:
    faa0:	add	ip, pc, #0, 12
    faa4:	add	ip, ip, #405504	; 0x63000
    faa8:	ldr	pc, [ip, #548]!	; 0x224

0000faac <pthread_attr_init@plt>:
    faac:	add	ip, pc, #0, 12
    fab0:	add	ip, ip, #405504	; 0x63000
    fab4:	ldr	pc, [ip, #540]!	; 0x21c

0000fab8 <sysconf@plt>:
    fab8:	add	ip, pc, #0, 12
    fabc:	add	ip, ip, #405504	; 0x63000
    fac0:	ldr	pc, [ip, #532]!	; 0x214

0000fac4 <calloc@plt>:
    fac4:	add	ip, pc, #0, 12
    fac8:	add	ip, ip, #405504	; 0x63000
    facc:	ldr	pc, [ip, #524]!	; 0x20c

0000fad0 <setlocale@plt>:
    fad0:	add	ip, pc, #0, 12
    fad4:	add	ip, ip, #405504	; 0x63000
    fad8:	ldr	pc, [ip, #516]!	; 0x204

0000fadc <ferror@plt>:
    fadc:	add	ip, pc, #0, 12
    fae0:	add	ip, ip, #405504	; 0x63000
    fae4:	ldr	pc, [ip, #508]!	; 0x1fc

0000fae8 <iconv_close@plt>:
    fae8:	add	ip, pc, #0, 12
    faec:	add	ip, ip, #405504	; 0x63000
    faf0:	ldr	pc, [ip, #500]!	; 0x1f4

0000faf4 <fgets@plt>:
    faf4:	add	ip, pc, #0, 12
    faf8:	add	ip, ip, #405504	; 0x63000
    fafc:	ldr	pc, [ip, #492]!	; 0x1ec

0000fb00 <__fxstat@plt>:
    fb00:	add	ip, pc, #0, 12
    fb04:	add	ip, ip, #405504	; 0x63000
    fb08:	ldr	pc, [ip, #484]!	; 0x1e4

0000fb0c <fputc@plt>:
    fb0c:	add	ip, pc, #0, 12
    fb10:	add	ip, ip, #405504	; 0x63000
    fb14:	ldr	pc, [ip, #476]!	; 0x1dc

0000fb18 <fwrite@plt>:
    fb18:	add	ip, pc, #0, 12
    fb1c:	add	ip, ip, #405504	; 0x63000
    fb20:	ldr	pc, [ip, #468]!	; 0x1d4

0000fb24 <memcpy@plt>:
    fb24:	add	ip, pc, #0, 12
    fb28:	add	ip, ip, #405504	; 0x63000
    fb2c:	ldr	pc, [ip, #460]!	; 0x1cc

0000fb30 <umask@plt>:
    fb30:	add	ip, pc, #0, 12
    fb34:	add	ip, ip, #405504	; 0x63000
    fb38:	ldr	pc, [ip, #452]!	; 0x1c4

0000fb3c <geteuid@plt>:
    fb3c:	add	ip, pc, #0, 12
    fb40:	add	ip, ip, #405504	; 0x63000
    fb44:	ldr	pc, [ip, #444]!	; 0x1bc

0000fb48 <malloc@plt>:
    fb48:	add	ip, pc, #0, 12
    fb4c:	add	ip, ip, #405504	; 0x63000
    fb50:	ldr	pc, [ip, #436]!	; 0x1b4

0000fb54 <strlen@plt>:
    fb54:	add	ip, pc, #0, 12
    fb58:	add	ip, ip, #405504	; 0x63000
    fb5c:	ldr	pc, [ip, #428]!	; 0x1ac

0000fb60 <__snprintf_chk@plt>:
    fb60:	add	ip, pc, #0, 12
    fb64:	add	ip, ip, #405504	; 0x63000
    fb68:	ldr	pc, [ip, #420]!	; 0x1a4

0000fb6c <ioperm@plt>:
    fb6c:	add	ip, pc, #0, 12
    fb70:	add	ip, ip, #405504	; 0x63000
    fb74:	ldr	pc, [ip, #412]!	; 0x19c

0000fb78 <outb@plt>:
    fb78:	add	ip, pc, #0, 12
    fb7c:	add	ip, ip, #405504	; 0x63000
    fb80:	ldr	pc, [ip, #404]!	; 0x194

0000fb84 <getcwd@plt>:
    fb84:	add	ip, pc, #0, 12
    fb88:	add	ip, ip, #405504	; 0x63000
    fb8c:	ldr	pc, [ip, #396]!	; 0x18c

0000fb90 <__memset_chk@plt>:
    fb90:	add	ip, pc, #0, 12
    fb94:	add	ip, ip, #405504	; 0x63000
    fb98:	ldr	pc, [ip, #388]!	; 0x184

0000fb9c <accept@plt>:
    fb9c:	add	ip, pc, #0, 12
    fba0:	add	ip, ip, #405504	; 0x63000
    fba4:	ldr	pc, [ip, #380]!	; 0x17c

0000fba8 <globfree@plt>:
    fba8:	add	ip, pc, #0, 12
    fbac:	add	ip, ip, #405504	; 0x63000
    fbb0:	ldr	pc, [ip, #372]!	; 0x174

0000fbb4 <usleep@plt>:
    fbb4:	add	ip, pc, #0, 12
    fbb8:	add	ip, ip, #405504	; 0x63000
    fbbc:	ldr	pc, [ip, #364]!	; 0x16c

0000fbc0 <fclose@plt>:
    fbc0:	add	ip, pc, #0, 12
    fbc4:	add	ip, ip, #405504	; 0x63000
    fbc8:	ldr	pc, [ip, #356]!	; 0x164

0000fbcc <write@plt>:
    fbcc:	add	ip, pc, #0, 12
    fbd0:	add	ip, ip, #405504	; 0x63000
    fbd4:	ldr	pc, [ip, #348]!	; 0x15c

0000fbd8 <inb@plt>:
    fbd8:	add	ip, pc, #0, 12
    fbdc:	add	ip, ip, #405504	; 0x63000
    fbe0:	ldr	pc, [ip, #340]!	; 0x154

0000fbe4 <__fdelt_chk@plt>:
    fbe4:	add	ip, pc, #0, 12
    fbe8:	add	ip, ip, #405504	; 0x63000
    fbec:	ldr	pc, [ip, #332]!	; 0x14c

0000fbf0 <mempcpy@plt>:
    fbf0:	add	ip, pc, #0, 12
    fbf4:	add	ip, ip, #405504	; 0x63000
    fbf8:	ldr	pc, [ip, #324]!	; 0x144

0000fbfc <__xstat@plt>:
    fbfc:	add	ip, pc, #0, 12
    fc00:	add	ip, ip, #405504	; 0x63000
    fc04:	ldr	pc, [ip, #316]!	; 0x13c

0000fc08 <pthread_rwlock_trywrlock@plt>:
    fc08:	add	ip, pc, #0, 12
    fc0c:	add	ip, ip, #405504	; 0x63000
    fc10:	ldr	pc, [ip, #308]!	; 0x134

0000fc14 <__realpath_chk@plt>:
    fc14:	add	ip, pc, #0, 12
    fc18:	add	ip, ip, #405504	; 0x63000
    fc1c:	ldr	pc, [ip, #300]!	; 0x12c

0000fc20 <__lxstat@plt>:
    fc20:	add	ip, pc, #0, 12
    fc24:	add	ip, ip, #405504	; 0x63000
    fc28:	ldr	pc, [ip, #292]!	; 0x124

0000fc2c <iconv_open@plt>:
    fc2c:	add	ip, pc, #0, 12
    fc30:	add	ip, ip, #405504	; 0x63000
    fc34:	ldr	pc, [ip, #284]!	; 0x11c

0000fc38 <pthread_rwlock_init@plt>:
    fc38:	add	ip, pc, #0, 12
    fc3c:	add	ip, ip, #405504	; 0x63000
    fc40:	ldr	pc, [ip, #276]!	; 0x114

0000fc44 <_exit@plt>:
    fc44:	add	ip, pc, #0, 12
    fc48:	add	ip, ip, #405504	; 0x63000
    fc4c:	ldr	pc, [ip, #268]!	; 0x10c

0000fc50 <pthread_create@plt>:
    fc50:	add	ip, pc, #0, 12
    fc54:	add	ip, ip, #405504	; 0x63000
    fc58:	ldr	pc, [ip, #260]!	; 0x104

0000fc5c <strcmp@plt>:
    fc5c:	add	ip, pc, #0, 12
    fc60:	add	ip, ip, #405504	; 0x63000
    fc64:	ldr	pc, [ip, #252]!	; 0xfc

0000fc68 <pthread_mutexattr_settype@plt>:
    fc68:	add	ip, pc, #0, 12
    fc6c:	add	ip, ip, #405504	; 0x63000
    fc70:	ldr	pc, [ip, #244]!	; 0xf4

0000fc74 <time@plt>:
    fc74:	add	ip, pc, #0, 12
    fc78:	add	ip, ip, #405504	; 0x63000
    fc7c:	ldr	pc, [ip, #236]!	; 0xec

0000fc80 <wmemmove@plt>:
    fc80:	add	ip, pc, #0, 12
    fc84:	add	ip, ip, #405504	; 0x63000
    fc88:	ldr	pc, [ip, #228]!	; 0xe4

0000fc8c <iconv@plt>:
    fc8c:	add	ip, pc, #0, 12
    fc90:	add	ip, ip, #405504	; 0x63000
    fc94:	ldr	pc, [ip, #220]!	; 0xdc

0000fc98 <tcgetattr@plt>:
    fc98:	add	ip, pc, #0, 12
    fc9c:	add	ip, ip, #405504	; 0x63000
    fca0:	ldr	pc, [ip, #212]!	; 0xd4

0000fca4 <__errno_location@plt>:
    fca4:	add	ip, pc, #0, 12
    fca8:	add	ip, ip, #405504	; 0x63000
    fcac:	ldr	pc, [ip, #204]!	; 0xcc

0000fcb0 <send@plt>:
    fcb0:	add	ip, pc, #0, 12
    fcb4:	add	ip, ip, #405504	; 0x63000
    fcb8:	ldr	pc, [ip, #196]!	; 0xc4

0000fcbc <mount@plt>:
    fcbc:	add	ip, pc, #0, 12
    fcc0:	add	ip, ip, #405504	; 0x63000
    fcc4:	ldr	pc, [ip, #188]!	; 0xbc

0000fcc8 <memchr@plt>:
    fcc8:	add	ip, pc, #0, 12
    fccc:	add	ip, ip, #405504	; 0x63000
    fcd0:	ldr	pc, [ip, #180]!	; 0xb4

0000fcd4 <sscanf@plt>:
    fcd4:	add	ip, pc, #0, 12
    fcd8:	add	ip, ip, #405504	; 0x63000
    fcdc:	ldr	pc, [ip, #172]!	; 0xac

0000fce0 <strncpy@plt>:
    fce0:	add	ip, pc, #0, 12
    fce4:	add	ip, ip, #405504	; 0x63000
    fce8:	ldr	pc, [ip, #164]!	; 0xa4

0000fcec <towupper@plt>:
    fcec:	add	ip, pc, #0, 12
    fcf0:	add	ip, ip, #405504	; 0x63000
    fcf4:	ldr	pc, [ip, #156]!	; 0x9c

0000fcf8 <fflush@plt>:
    fcf8:	add	ip, pc, #0, 12
    fcfc:	add	ip, ip, #405504	; 0x63000
    fd00:	ldr	pc, [ip, #148]!	; 0x94

0000fd04 <_Unwind_Resume@plt>:
    fd04:	add	ip, pc, #0, 12
    fd08:	add	ip, ip, #405504	; 0x63000
    fd0c:	ldr	pc, [ip, #140]!	; 0x8c

0000fd10 <memcmp@plt>:
    fd10:	add	ip, pc, #0, 12
    fd14:	add	ip, ip, #405504	; 0x63000
    fd18:	ldr	pc, [ip, #132]!	; 0x84

0000fd1c <gai_strerror@plt>:
    fd1c:	add	ip, pc, #0, 12
    fd20:	add	ip, ip, #405504	; 0x63000
    fd24:	ldr	pc, [ip, #124]!	; 0x7c

0000fd28 <sigemptyset@plt>:
    fd28:	add	ip, pc, #0, 12
    fd2c:	add	ip, ip, #405504	; 0x63000
    fd30:	ldr	pc, [ip, #116]!	; 0x74

0000fd34 <strrchr@plt>:
    fd34:	add	ip, pc, #0, 12
    fd38:	add	ip, ip, #405504	; 0x63000
    fd3c:	ldr	pc, [ip, #108]!	; 0x6c

0000fd40 <__ctype_tolower_loc@plt>:
    fd40:	add	ip, pc, #0, 12
    fd44:	add	ip, ip, #405504	; 0x63000
    fd48:	ldr	pc, [ip, #100]!	; 0x64

0000fd4c <mktime@plt>:
    fd4c:	add	ip, pc, #0, 12
    fd50:	add	ip, ip, #405504	; 0x63000
    fd54:	ldr	pc, [ip, #92]!	; 0x5c

0000fd58 <openlog@plt>:
    fd58:	add	ip, pc, #0, 12
    fd5c:	add	ip, ip, #405504	; 0x63000
    fd60:	ldr	pc, [ip, #84]!	; 0x54

0000fd64 <fputs@plt>:
    fd64:	add	ip, pc, #0, 12
    fd68:	add	ip, ip, #405504	; 0x63000
    fd6c:	ldr	pc, [ip, #76]!	; 0x4c

0000fd70 <getenv@plt>:
    fd70:	add	ip, pc, #0, 12
    fd74:	add	ip, ip, #405504	; 0x63000
    fd78:	ldr	pc, [ip, #68]!	; 0x44

0000fd7c <__libc_start_main@plt>:
    fd7c:	add	ip, pc, #0, 12
    fd80:	add	ip, ip, #405504	; 0x63000
    fd84:	ldr	pc, [ip, #60]!	; 0x3c

0000fd88 <dlsym@plt>:
    fd88:	add	ip, pc, #0, 12
    fd8c:	add	ip, ip, #405504	; 0x63000
    fd90:	ldr	pc, [ip, #52]!	; 0x34

0000fd94 <execvp@plt>:
    fd94:	add	ip, pc, #0, 12
    fd98:	add	ip, ip, #405504	; 0x63000
    fd9c:	ldr	pc, [ip, #44]!	; 0x2c

0000fda0 <__gmon_start__@plt>:
    fda0:	add	ip, pc, #0, 12
    fda4:	add	ip, ip, #405504	; 0x63000
    fda8:	ldr	pc, [ip, #36]!	; 0x24

0000fdac <getgrnam@plt>:
    fdac:	add	ip, pc, #0, 12
    fdb0:	add	ip, ip, #405504	; 0x63000
    fdb4:	ldr	pc, [ip, #28]!

0000fdb8 <srand@plt>:
    fdb8:	add	ip, pc, #0, 12
    fdbc:	add	ip, ip, #405504	; 0x63000
    fdc0:	ldr	pc, [ip, #20]!

0000fdc4 <sigprocmask@plt>:
    fdc4:	add	ip, pc, #0, 12
    fdc8:	add	ip, ip, #405504	; 0x63000
    fdcc:	ldr	pc, [ip, #12]!

0000fdd0 <strchr@plt>:
    fdd0:	add	ip, pc, #0, 12
    fdd4:	add	ip, ip, #405504	; 0x63000
    fdd8:	ldr	pc, [ip, #4]!

0000fddc <__cxa_finalize@plt>:
    fddc:	add	ip, pc, #0, 12
    fde0:	add	ip, ip, #401408	; 0x62000
    fde4:	ldr	pc, [ip, #4092]!	; 0xffc

0000fde8 <tcdrain@plt>:
    fde8:	add	ip, pc, #0, 12
    fdec:	add	ip, ip, #401408	; 0x62000
    fdf0:	ldr	pc, [ip, #4084]!	; 0xff4

0000fdf4 <pthread_mutex_unlock@plt>:
    fdf4:	add	ip, pc, #0, 12
    fdf8:	add	ip, ip, #401408	; 0x62000
    fdfc:	ldr	pc, [ip, #4076]!	; 0xfec

0000fe00 <glob@plt>:
    fe00:	add	ip, pc, #0, 12
    fe04:	add	ip, ip, #401408	; 0x62000
    fe08:	ldr	pc, [ip, #4068]!	; 0xfe4

0000fe0c <iswcntrl@plt>:
    fe0c:	add	ip, pc, #0, 12
    fe10:	add	ip, ip, #401408	; 0x62000
    fe14:	ldr	pc, [ip, #4060]!	; 0xfdc

0000fe18 <pipe@plt>:
    fe18:	add	ip, pc, #0, 12
    fe1c:	add	ip, ip, #401408	; 0x62000
    fe20:	ldr	pc, [ip, #4052]!	; 0xfd4

0000fe24 <__printf_chk@plt>:
    fe24:	add	ip, pc, #0, 12
    fe28:	add	ip, ip, #401408	; 0x62000
    fe2c:	ldr	pc, [ip, #4044]!	; 0xfcc

Disassembly of section .text:

0000fe30 <main@@Base-0xf4>:
    fe30:	tst	r1, #65536	; 0x10000
    fe34:	orrne	r0, r0, #1073741824	; 0x40000000
    fe38:	tst	r1, #131072	; 0x20000
    fe3c:	orrne	r0, r0, #536870912	; 0x20000000
    fe40:	tst	r1, #262144	; 0x40000
    fe44:	orrne	r0, r0, #268435456	; 0x10000000
    fe48:	tst	r1, #524288	; 0x80000
    fe4c:	orrne	r0, r0, #134217728	; 0x8000000
    fe50:	b	391a8 <insertScreenKey@@Base>
    fe54:	push	{r4, r5, r6, lr}
    fe58:	cmp	r0, #255	; 0xff
    fe5c:	sub	sp, sp, #8
    fe60:	ldr	r4, [pc, #176]	; ff18 <__printf_chk@plt+0xf4>
    fe64:	mov	r6, r1
    fe68:	mov	r5, r2
    fe6c:	str	r0, [sp, #4]
    fe70:	add	r4, pc, r4
    fe74:	bne	fecc <__printf_chk@plt+0xa8>
    fe78:	ldr	r3, [pc, #156]	; ff1c <__printf_chk@plt+0xf8>
    fe7c:	ldr	r3, [r4, r3]
    fe80:	ldrsh	r0, [r3, #4]
    fe84:	cmp	r0, #0
    fe88:	blt	fec4 <__printf_chk@plt+0xa0>
    fe8c:	ldrsh	r2, [r3, #2]
    fe90:	cmp	r2, r0
    fe94:	ble	fec4 <__printf_chk@plt+0xa0>
    fe98:	ldrsh	r2, [r3, #6]
    fe9c:	cmp	r2, #0
    fea0:	blt	fec4 <__printf_chk@plt+0xa0>
    fea4:	ldrsh	r1, [r3]
    fea8:	cmp	r1, r2
    feac:	ble	fec4 <__printf_chk@plt+0xa0>
    feb0:	str	r0, [r6]
    feb4:	mov	r0, #1
    feb8:	ldrsh	r3, [r3, #6]
    febc:	str	r3, [r5]
    fec0:	b	ff10 <__printf_chk@plt+0xec>
    fec4:	mov	r0, #0
    fec8:	b	ff10 <__printf_chk@plt+0xec>
    fecc:	mov	r1, r3
    fed0:	add	r0, sp, #4
    fed4:	ldr	r2, [sp, #24]
    fed8:	bl	10384 <_start@@Base+0x430>
    fedc:	cmp	r0, #0
    fee0:	beq	ff10 <__printf_chk@plt+0xec>
    fee4:	ldr	r3, [pc, #52]	; ff20 <__printf_chk@plt+0xfc>
    fee8:	mov	r0, #1
    feec:	ldr	r2, [sp, #4]
    fef0:	ldr	r3, [r4, r3]
    fef4:	ldr	r1, [r3]
    fef8:	ldr	r1, [r1, #8]
    fefc:	add	r2, r1, r2
    ff00:	str	r2, [r6]
    ff04:	ldr	r3, [r3]
    ff08:	ldr	r3, [r3, #12]
    ff0c:	str	r3, [r5]
    ff10:	add	sp, sp, #8
    ff14:	pop	{r4, r5, r6, pc}
    ff18:	andeq	r2, r6, r8, lsl #24
    ff1c:	andeq	r0, r0, ip, lsl #9
    ff20:			; <UNDEFINED> instruction: 0x000003b8

0000ff24 <main@@Base>:
    ff24:	push	{r3, lr}
    ff28:	bl	1348c <brlttyConstruct@@Base>
    ff2c:	cmp	r0, #0
    ff30:	beq	ff40 <main@@Base+0x1c>
    ff34:	cmp	r0, #1
    ff38:	beq	ff4c <main@@Base+0x28>
    ff3c:	pop	{r3, pc}
    ff40:	bl	17e30 <brlttyUpdate@@Base>
    ff44:	cmp	r0, #0
    ff48:	bne	ff40 <main@@Base+0x1c>
    ff4c:	mov	r0, #0
    ff50:	pop	{r3, pc}

0000ff54 <_start@@Base>:
    ff54:	mov	fp, #0
    ff58:	mov	lr, #0
    ff5c:	pop	{r1}		; (ldr r1, [sp], #4)
    ff60:	mov	r2, sp
    ff64:	push	{r2}		; (str r2, [sp, #-4]!)
    ff68:	push	{r0}		; (str r0, [sp, #-4]!)
    ff6c:	ldr	sl, [pc, #40]	; ff9c <_start@@Base+0x48>
    ff70:	add	r3, pc, #36	; 0x24
    ff74:	add	sl, sl, r3
    ff78:	ldr	ip, [pc, #32]	; ffa0 <_start@@Base+0x4c>
    ff7c:	ldr	ip, [sl, ip]
    ff80:	push	{ip}		; (str ip, [sp, #-4]!)
    ff84:	ldr	r3, [pc, #24]	; ffa4 <_start@@Base+0x50>
    ff88:	ldr	r3, [sl, r3]
    ff8c:	ldr	r0, [pc, #20]	; ffa8 <_start@@Base+0x54>
    ff90:	ldr	r0, [sl, r0]
    ff94:	bl	fd7c <__libc_start_main@plt>
    ff98:	bl	f7ac <abort@plt>
    ff9c:	andeq	r2, r6, r4, ror #21
    ffa0:	andeq	r0, r0, r8, asr r5
    ffa4:	andeq	r0, r0, ip, lsl #10
    ffa8:	andeq	r0, r0, r4, ror #7
    ffac:	ldr	r3, [pc, #20]	; ffc8 <_start@@Base+0x74>
    ffb0:	ldr	r2, [pc, #20]	; ffcc <_start@@Base+0x78>
    ffb4:	add	r3, pc, r3
    ffb8:	ldr	r2, [r3, r2]
    ffbc:	cmp	r2, #0
    ffc0:	bxeq	lr
    ffc4:	b	fda0 <__gmon_start__@plt>
    ffc8:	andeq	r2, r6, r4, asr #21
    ffcc:	andeq	r0, r0, r8, ror #10
    ffd0:	ldr	r2, [pc, #60]	; 10014 <_start@@Base+0xc0>
    ffd4:	ldr	r0, [pc, #60]	; 10018 <_start@@Base+0xc4>
    ffd8:	add	r2, pc, r2
    ffdc:	add	r0, pc, r0
    ffe0:	add	r2, r2, #3
    ffe4:	rsb	r2, r0, r2
    ffe8:	push	{r3, lr}
    ffec:	cmp	r2, #6
    fff0:	ldr	r3, [pc, #36]	; 1001c <_start@@Base+0xc8>
    fff4:	add	r3, pc, r3
    fff8:	popls	{r3, pc}
    fffc:	ldr	r2, [pc, #28]	; 10020 <_start@@Base+0xcc>
   10000:	ldr	r3, [r3, r2]
   10004:	cmp	r3, #0
   10008:	popeq	{r3, pc}
   1000c:	blx	r3
   10010:	pop	{r3, pc}
   10014:	andeq	r3, r6, r8, ror #2
   10018:	andeq	r3, r6, r4, ror #2
   1001c:	andeq	r2, r6, r4, lsl #21
   10020:	andeq	r0, r0, r0, asr r5
   10024:	push	{r3, lr}
   10028:	ldr	r0, [pc, #64]	; 10070 <_start@@Base+0x11c>
   1002c:	ldr	r3, [pc, #64]	; 10074 <_start@@Base+0x120>
   10030:	add	r0, pc, r0
   10034:	ldr	r2, [pc, #60]	; 10078 <_start@@Base+0x124>
   10038:	add	r3, pc, r3
   1003c:	rsb	r3, r0, r3
   10040:	add	r2, pc, r2
   10044:	asr	r3, r3, #2
   10048:	add	r3, r3, r3, lsr #31
   1004c:	asrs	r3, r3, #1
   10050:	popeq	{r3, pc}
   10054:	ldr	r1, [pc, #32]	; 1007c <_start@@Base+0x128>
   10058:	ldr	r2, [r2, r1]
   1005c:	cmp	r2, #0
   10060:	popeq	{r3, pc}
   10064:	mov	r1, r3
   10068:	blx	r2
   1006c:	pop	{r3, pc}
   10070:	andeq	r3, r6, r0, lsl r1
   10074:	andeq	r3, r6, r8, lsl #2
   10078:	andeq	r2, r6, r8, lsr sl
   1007c:	andeq	r0, r0, ip, ror #10
   10080:	ldr	r2, [pc, #76]	; 100d4 <_start@@Base+0x180>
   10084:	push	{r3, lr}
   10088:	add	r2, pc, r2
   1008c:	ldr	r3, [pc, #68]	; 100d8 <_start@@Base+0x184>
   10090:	ldrb	r2, [r2]
   10094:	add	r3, pc, r3
   10098:	cmp	r2, #0
   1009c:	popne	{r3, pc}
   100a0:	ldr	r2, [pc, #52]	; 100dc <_start@@Base+0x188>
   100a4:	ldr	r3, [r3, r2]
   100a8:	cmp	r3, #0
   100ac:	beq	100bc <_start@@Base+0x168>
   100b0:	ldr	r0, [pc, #40]	; 100e0 <_start@@Base+0x18c>
   100b4:	add	r0, pc, r0
   100b8:	bl	fddc <__cxa_finalize@plt>
   100bc:	bl	ffd0 <_start@@Base+0x7c>
   100c0:	ldr	r3, [pc, #28]	; 100e4 <_start@@Base+0x190>
   100c4:	mov	r2, #1
   100c8:	add	r3, pc, r3
   100cc:	strb	r2, [r3]
   100d0:	pop	{r3, pc}
   100d4:	strheq	r3, [r6], -r8
   100d8:	andeq	r2, r6, r4, ror #19
   100dc:	andeq	r0, r0, r0, ror r5
   100e0:	muleq	r6, r4, sp
   100e4:	andeq	r3, r6, r8, ror r0
   100e8:	ldr	r0, [pc, #52]	; 10124 <_start@@Base+0x1d0>
   100ec:	push	{r3, lr}
   100f0:	add	r0, pc, r0
   100f4:	ldr	r3, [pc, #44]	; 10128 <_start@@Base+0x1d4>
   100f8:	ldr	r2, [r0]
   100fc:	add	r3, pc, r3
   10100:	cmp	r2, #0
   10104:	beq	1011c <_start@@Base+0x1c8>
   10108:	ldr	r2, [pc, #28]	; 1012c <_start@@Base+0x1d8>
   1010c:	ldr	r3, [r3, r2]
   10110:	cmp	r3, #0
   10114:	beq	1011c <_start@@Base+0x1c8>
   10118:	blx	r3
   1011c:	pop	{r3, lr}
   10120:	b	10024 <_start@@Base+0xd0>
   10124:	andeq	pc, r5, ip, lsl #9
   10128:	andeq	r2, r6, ip, ror r9
   1012c:	andeq	r0, r0, r4, lsl #9
   10130:	ldr	r3, [pc, #264]	; 10240 <_start@@Base+0x2ec>
   10134:	ldr	r2, [pc, #264]	; 10244 <_start@@Base+0x2f0>
   10138:	add	r3, pc, r3
   1013c:	push	{r4, r5, r6, r7}
   10140:	ldr	r2, [r3, r2]
   10144:	ldrb	r2, [r2, #47]	; 0x2f
   10148:	cmp	r2, #0
   1014c:	beq	101f0 <_start@@Base+0x29c>
   10150:	ldr	ip, [pc, #240]	; 10248 <_start@@Base+0x2f4>
   10154:	ldr	ip, [r3, ip]
   10158:	ldr	ip, [ip]
   1015c:	cmp	ip, #0
   10160:	beq	101f0 <_start@@Base+0x29c>
   10164:	ldr	ip, [pc, #224]	; 1024c <_start@@Base+0x2f8>
   10168:	ldr	ip, [r3, ip]
   1016c:	ldr	ip, [ip]
   10170:	adds	r4, ip, #0
   10174:	movne	r4, #1
   10178:	cmp	r4, #0
   1017c:	beq	101f8 <_start@@Base+0x2a4>
   10180:	sub	ip, ip, #1
   10184:	cmp	r2, #3
   10188:	add	r1, r1, ip
   1018c:	add	r0, r0, ip, lsl #2
   10190:	beq	10224 <_start@@Base+0x2d0>
   10194:	cmp	r2, #4
   10198:	beq	10208 <_start@@Base+0x2b4>
   1019c:	cmp	r2, #2
   101a0:	movw	r6, #9475	; 0x2503
   101a4:	moveq	r7, #255	; 0xff
   101a8:	movne	r7, #0
   101ac:	movne	r6, #32
   101b0:	ldr	r2, [pc, #152]	; 10250 <_start@@Base+0x2fc>
   101b4:	ldr	r3, [r3, r2]
   101b8:	ldr	r2, [r3, #4]
   101bc:	cmp	r2, #0
   101c0:	beq	101f0 <_start@@Base+0x29c>
   101c4:	mov	r2, #0
   101c8:	str	r6, [r0]
   101cc:	add	r2, r2, #1
   101d0:	ldr	r5, [r3]
   101d4:	strb	r7, [r1]
   101d8:	ldr	r4, [r3, #4]
   101dc:	ldr	ip, [r3]
   101e0:	add	r0, r0, r5, lsl #2
   101e4:	cmp	r4, r2
   101e8:	add	r1, r1, ip
   101ec:	bhi	101c8 <_start@@Base+0x274>
   101f0:	pop	{r4, r5, r6, r7}
   101f4:	bx	lr
   101f8:	ldr	ip, [pc, #84]	; 10254 <_start@@Base+0x300>
   101fc:	ldr	ip, [r3, ip]
   10200:	ldr	ip, [ip]
   10204:	b	10180 <_start@@Base+0x22c>
   10208:	cmp	r4, #0
   1020c:	movw	r6, #9144	; 0x23b8
   10210:	movw	r2, #9145	; 0x23b9
   10214:	moveq	r6, r2
   10218:	movne	r7, #71	; 0x47
   1021c:	moveq	r7, #184	; 0xb8
   10220:	b	101b0 <_start@@Base+0x25c>
   10224:	cmp	r4, #0
   10228:	movw	r6, #9145	; 0x23b9
   1022c:	movw	r2, #9144	; 0x23b8
   10230:	moveq	r6, r2
   10234:	movne	r7, #184	; 0xb8
   10238:	moveq	r7, #71	; 0x47
   1023c:	b	101b0 <_start@@Base+0x25c>
   10240:	andeq	r2, r6, r0, asr #18
   10244:	andeq	r0, r0, r0, asr #10
   10248:	andeq	r0, r0, r8, asr #9
   1024c:	andeq	r0, r0, ip, lsr r4
   10250:	andeq	r0, r0, r8, asr #10
   10254:	andeq	r0, r0, r0, ror r4
   10258:	ldr	r3, [r0]
   1025c:	ldr	r0, [r1]
   10260:	subs	r3, r3, r0
   10264:	rsbs	r0, r3, #0
   10268:	adcs	r0, r0, r3
   1026c:	bx	lr
   10270:	ldrb	r3, [r0, #4]
   10274:	ldrb	r0, [r1, #4]
   10278:	subs	r3, r3, r0
   1027c:	rsbs	r0, r3, #0
   10280:	adcs	r0, r0, r3
   10284:	bx	lr
   10288:	ldr	r3, [pc, #32]	; 102b0 <_start@@Base+0x35c>
   1028c:	ldr	r2, [pc, #32]	; 102b4 <_start@@Base+0x360>
   10290:	add	r3, pc, r3
   10294:	ldr	r3, [r3, r2]
   10298:	ldr	r3, [r3]
   1029c:	ldr	r0, [r3, #12]
   102a0:	cmp	r0, #0
   102a4:	movle	r0, #0
   102a8:	movgt	r0, #1
   102ac:	bx	lr
   102b0:	andeq	r2, r6, r8, ror #15
   102b4:			; <UNDEFINED> instruction: 0x000003b8
   102b8:	ldr	r3, [pc, #60]	; 102fc <_start@@Base+0x3a8>
   102bc:	ldr	r1, [pc, #60]	; 10300 <_start@@Base+0x3ac>
   102c0:	add	r3, pc, r3
   102c4:	ldr	r0, [pc, #56]	; 10304 <_start@@Base+0x3b0>
   102c8:	ldr	r2, [pc, #56]	; 10308 <_start@@Base+0x3b4>
   102cc:	ldr	r1, [r3, r1]
   102d0:	ldr	r2, [r3, r2]
   102d4:	ldr	r3, [r3, r0]
   102d8:	ldr	r1, [r1]
   102dc:	ldrsh	r2, [r2]
   102e0:	ldr	r3, [r3, #4]
   102e4:	ldr	r0, [r1, #12]
   102e8:	rsb	r3, r3, r2
   102ec:	cmp	r0, r3
   102f0:	movge	r0, #0
   102f4:	movlt	r0, #1
   102f8:	bx	lr
   102fc:			; <UNDEFINED> instruction: 0x000627b8
   10300:			; <UNDEFINED> instruction: 0x000003b8
   10304:	andeq	r0, r0, r8, asr #10
   10308:	andeq	r0, r0, ip, lsl #9
   1030c:	ldr	r3, [pc, #100]	; 10378 <_start@@Base+0x424>
   10310:	ldr	r1, [pc, #100]	; 1037c <_start@@Base+0x428>
   10314:	add	r3, pc, r3
   10318:	ldr	r2, [pc, #96]	; 10380 <_start@@Base+0x42c>
   1031c:	ldr	r1, [r3, r1]
   10320:	ldr	r2, [r3, r2]
   10324:	ldr	r3, [r1]
   10328:	ldrsh	ip, [r2, #6]
   1032c:	ldrh	r0, [r2, #4]
   10330:	ldr	r1, [r3, #12]
   10334:	cmp	ip, r1
   10338:	beq	10344 <_start@@Base+0x3f0>
   1033c:	mvn	r0, #0
   10340:	bx	lr
   10344:	ldr	r1, [r3, #8]
   10348:	sxth	r0, r0
   1034c:	cmp	r0, r1
   10350:	blt	1033c <_start@@Base+0x3e8>
   10354:	ldrsh	r2, [r2, #2]
   10358:	cmp	r0, r2
   1035c:	bge	1033c <_start@@Base+0x3e8>
   10360:	subs	r0, r0, r1
   10364:	bmi	1033c <_start@@Base+0x3e8>
   10368:	ldrb	r3, [r3, #5]
   1036c:	cmp	r3, #0
   10370:	mvnne	r0, #0
   10374:	bx	lr
   10378:	andeq	r2, r6, r4, ror #14
   1037c:			; <UNDEFINED> instruction: 0x000003b8
   10380:	andeq	r0, r0, ip, lsl #9
   10384:	ldr	r3, [pc, #280]	; 104a4 <_start@@Base+0x550>
   10388:	push	{r4, r5, r6}
   1038c:	add	r3, pc, r3
   10390:	ldr	r4, [pc, #272]	; 104a8 <_start@@Base+0x554>
   10394:	ldr	ip, [r0]
   10398:	ldr	r4, [r3, r4]
   1039c:	ldr	r4, [r4]
   103a0:	cmp	ip, r4
   103a4:	bcc	10468 <_start@@Base+0x514>
   103a8:	ldr	r5, [pc, #252]	; 104ac <_start@@Base+0x558>
   103ac:	rsb	r4, r4, ip
   103b0:	ldr	ip, [r3, r5]
   103b4:	ldr	ip, [ip]
   103b8:	cmp	r4, ip
   103bc:	bcs	10468 <_start@@Base+0x514>
   103c0:	ldr	r5, [pc, #232]	; 104b0 <_start@@Base+0x55c>
   103c4:	ldr	ip, [pc, #232]	; 104b4 <_start@@Base+0x560>
   103c8:	ldr	r5, [r3, r5]
   103cc:	ldr	ip, [r3, ip]
   103d0:	ldr	r3, [r5]
   103d4:	ldrsh	ip, [ip, #2]
   103d8:	ldr	r3, [r3, #8]
   103dc:	add	r5, r3, r4
   103e0:	cmp	r5, ip
   103e4:	blt	103fc <_start@@Base+0x4a8>
   103e8:	cmp	r2, #0
   103ec:	moveq	r0, r2
   103f0:	beq	1046c <_start@@Base+0x518>
   103f4:	sub	ip, ip, #1
   103f8:	rsb	r4, r3, ip
   103fc:	ldr	ip, [pc, #180]	; 104b8 <_start@@Base+0x564>
   10400:	add	ip, pc, ip
   10404:	ldr	r3, [ip]
   10408:	cmp	r3, #0
   1040c:	beq	10458 <_start@@Base+0x504>
   10410:	ldr	r5, [ip, #4]
   10414:	cmp	r5, #0
   10418:	ble	10474 <_start@@Base+0x520>
   1041c:	mov	r3, #0
   10420:	add	ip, ip, #4
   10424:	mov	r6, r3
   10428:	ldr	r2, [ip, #4]!
   1042c:	cmn	r2, #1
   10430:	beq	10440 <_start@@Base+0x4ec>
   10434:	cmp	r4, r2
   10438:	blt	10490 <_start@@Base+0x53c>
   1043c:	mov	r6, r3
   10440:	add	r3, r3, #1
   10444:	cmp	r3, r5
   10448:	bne	10428 <_start@@Base+0x4d4>
   1044c:	cmp	r1, #0
   10450:	beq	1049c <_start@@Base+0x548>
   10454:	sub	r4, r5, #1
   10458:	str	r4, [r0]
   1045c:	mov	r0, #1
   10460:	pop	{r4, r5, r6}
   10464:	bx	lr
   10468:	mov	r0, #0
   1046c:	pop	{r4, r5, r6}
   10470:	bx	lr
   10474:	cmp	r1, #0
   10478:	moveq	r4, r1
   1047c:	beq	10458 <_start@@Base+0x504>
   10480:	cmp	r5, #0
   10484:	movne	r4, #0
   10488:	bne	10458 <_start@@Base+0x504>
   1048c:	b	10454 <_start@@Base+0x500>
   10490:	cmp	r1, #0
   10494:	subne	r4, r3, #1
   10498:	bne	10458 <_start@@Base+0x504>
   1049c:	mov	r4, r6
   104a0:	b	10458 <_start@@Base+0x504>
   104a4:	andeq	r2, r6, ip, ror #13
   104a8:	andeq	r0, r0, r0, ror r4
   104ac:	andeq	r0, r0, r0, asr #7
   104b0:			; <UNDEFINED> instruction: 0x000003b8
   104b4:	andeq	r0, r0, ip, lsl #9
   104b8:	andeq	r2, r6, r4, asr #26
   104bc:	ldr	r3, [pc, #116]	; 10538 <_start@@Base+0x5e4>
   104c0:	mov	r1, #0
   104c4:	push	{r4, r5}
   104c8:	add	r3, pc, r3
   104cc:	mov	r0, #1
   104d0:	ldr	r2, [r3, #8]
   104d4:	str	r1, [r3, #12]
   104d8:	ldr	r5, [r3, #24]
   104dc:	ldrb	r2, [r2]
   104e0:	str	r0, [r3, #32]
   104e4:	ldr	r4, [r3, #44]	; 0x2c
   104e8:	add	r2, r2, r2, lsl #2
   104ec:	ldr	ip, [r3, #68]	; 0x44
   104f0:	lsl	r2, r2, r0
   104f4:	str	r2, [r3, #16]
   104f8:	ldrb	r2, [r5]
   104fc:	str	r0, [r3, #52]	; 0x34
   10500:	add	r2, r2, r2, lsl #2
   10504:	lsl	r2, r2, r0
   10508:	str	r2, [r3, #36]	; 0x24
   1050c:	ldrb	r2, [r4]
   10510:	str	r1, [r3, #72]	; 0x48
   10514:	add	r2, r2, r2, lsl #2
   10518:	lsl	r2, r2, r0
   1051c:	str	r2, [r3, #56]	; 0x38
   10520:	ldrb	r2, [ip]
   10524:	add	r2, r2, r2, lsl #2
   10528:	lsl	r2, r2, r0
   1052c:	str	r2, [r3, #76]	; 0x4c
   10530:	pop	{r4, r5}
   10534:	bx	lr
   10538:	andeq	r2, r6, r4, asr fp
   1053c:	push	{r3, r4, r5, lr}
   10540:	ldr	r4, [pc, #88]	; 105a0 <_start@@Base+0x64c>
   10544:	ldr	r3, [pc, #88]	; 105a4 <_start@@Base+0x650>
   10548:	add	r4, pc, r4
   1054c:	ldr	r5, [r4, r3]
   10550:	mov	r0, r5
   10554:	bl	3907c <describeScreen@@Base>
   10558:	ldr	r0, [r5, #8]
   1055c:	cmn	r0, #1
   10560:	beq	10590 <_start@@Base+0x63c>
   10564:	ldr	r3, [pc, #60]	; 105a8 <_start@@Base+0x654>
   10568:	ldr	r4, [r4, r3]
   1056c:	ldr	r3, [r4]
   10570:	cmp	r3, #0
   10574:	beq	10584 <_start@@Base+0x630>
   10578:	ldr	r3, [r3]
   1057c:	cmp	r3, r0
   10580:	popeq	{r3, r4, r5, pc}
   10584:	bl	25a28 <getSessionEntry@@Base>
   10588:	str	r0, [r4]
   1058c:	pop	{r3, r4, r5, pc}
   10590:	mov	r0, #0
   10594:	bl	392a8 <userVirtualTerminal@@Base>
   10598:	str	r0, [r5, #8]
   1059c:	b	10564 <_start@@Base+0x610>
   105a0:	andeq	r2, r6, r0, lsr r5
   105a4:	andeq	r0, r0, ip, lsl #9
   105a8:			; <UNDEFINED> instruction: 0x000003b8
   105ac:	push	{r4, r5, r6, r7, lr}
   105b0:	sub	sp, sp, #20
   105b4:	ldr	r5, [pc, #244]	; 106b0 <_start@@Base+0x75c>
   105b8:	ldr	r3, [pc, #244]	; 106b4 <_start@@Base+0x760>
   105bc:	add	r5, pc, r5
   105c0:	ldr	r4, [r5, r3]
   105c4:	ldr	r3, [r4]
   105c8:	str	r3, [sp, #12]
   105cc:	bl	1053c <_start@@Base+0x5e8>
   105d0:	ldr	r1, [pc, #224]	; 106b8 <_start@@Base+0x764>
   105d4:	mov	r0, #0
   105d8:	ldr	r2, [pc, #220]	; 106bc <_start@@Base+0x768>
   105dc:	ldr	r3, [pc, #220]	; 106c0 <_start@@Base+0x76c>
   105e0:	ldr	r7, [r5, r1]
   105e4:	ldr	r6, [r5, r2]
   105e8:	ldr	r2, [r5, r3]
   105ec:	ldr	r3, [r7]
   105f0:	ldrsh	ip, [r6]
   105f4:	add	r1, r3, #12
   105f8:	ldr	r2, [r2, #4]
   105fc:	cmp	r1, r0
   10600:	str	r1, [sp]
   10604:	rsb	ip, r2, ip
   10608:	str	r0, [sp, #8]
   1060c:	add	r2, r3, #20
   10610:	bic	ip, ip, ip, asr #31
   10614:	str	r2, [sp, #4]
   10618:	beq	10644 <_start@@Base+0x6f0>
   1061c:	add	r0, sp, #4
   10620:	b	1062c <_start@@Base+0x6d8>
   10624:	mov	r1, r2
   10628:	ldr	r2, [r0, #4]!
   1062c:	ldr	r3, [r1]
   10630:	cmp	ip, r3
   10634:	strlt	ip, [r1]
   10638:	cmp	r2, #0
   1063c:	bne	10624 <_start@@Base+0x6d0>
   10640:	ldr	r3, [r7]
   10644:	ldrsh	ip, [r6, #2]
   10648:	add	r2, r3, #8
   1064c:	mov	r1, #0
   10650:	add	r3, r3, #16
   10654:	cmp	ip, #1
   10658:	stm	sp, {r2, r3}
   1065c:	subgt	ip, ip, #1
   10660:	str	r1, [sp, #8]
   10664:	movle	ip, #0
   10668:	cmp	r2, #0
   1066c:	beq	10694 <_start@@Base+0x740>
   10670:	add	r0, sp, #4
   10674:	b	10680 <_start@@Base+0x72c>
   10678:	mov	r2, r3
   1067c:	ldr	r3, [r0, #4]!
   10680:	ldr	r1, [r2]
   10684:	cmp	ip, r1
   10688:	strlt	ip, [r2]
   1068c:	cmp	r3, #0
   10690:	bne	10678 <_start@@Base+0x724>
   10694:	ldr	r2, [sp, #12]
   10698:	ldr	r3, [r4]
   1069c:	cmp	r2, r3
   106a0:	bne	106ac <_start@@Base+0x758>
   106a4:	add	sp, sp, #20
   106a8:	pop	{r4, r5, r6, r7, pc}
   106ac:	bl	f950 <__stack_chk_fail@plt>
   106b0:			; <UNDEFINED> instruction: 0x000624bc
   106b4:			; <UNDEFINED> instruction: 0x000003b4
   106b8:			; <UNDEFINED> instruction: 0x000003b8
   106bc:	andeq	r0, r0, ip, lsl #9
   106c0:	andeq	r0, r0, r8, asr #10
   106c4:	push	{r4, lr}
   106c8:	ldr	r4, [pc, #56]	; 10708 <_start@@Base+0x7b4>
   106cc:	ldr	r3, [pc, #56]	; 1070c <_start@@Base+0x7b8>
   106d0:	add	r4, pc, r4
   106d4:	ldr	r2, [pc, #52]	; 10710 <_start@@Base+0x7bc>
   106d8:	ldr	r3, [r4, r3]
   106dc:	ldr	r0, [r4, r2]
   106e0:	ldr	r1, [r3]
   106e4:	bl	3d9a4 <drainBrailleOutput@@Base>
   106e8:	ldr	r3, [pc, #36]	; 10714 <_start@@Base+0x7c0>
   106ec:	ldr	r3, [r4, r3]
   106f0:	ldr	r2, [r3]
   106f4:	add	r2, r2, #1
   106f8:	str	r2, [r3]
   106fc:	bl	105ac <_start@@Base+0x658>
   10700:	mov	r0, #1
   10704:	pop	{r4, pc}
   10708:	andeq	r2, r6, r8, lsr #7
   1070c:	strdeq	r0, [r0], -r8
   10710:	andeq	r0, r0, r8, asr #10
   10714:	andeq	r0, r0, r4, ror #8
   10718:	ldr	ip, [pc, #164]	; 107c4 <_start@@Base+0x870>
   1071c:	add	r2, r0, #1
   10720:	push	{r4, r5, r6, fp, lr}
   10724:	add	fp, sp, #16
   10728:	ldr	lr, [pc, #152]	; 107c8 <_start@@Base+0x874>
   1072c:	sub	sp, sp, #20
   10730:	add	ip, pc, ip
   10734:	lsl	r3, r2, #3
   10738:	mov	r4, r0
   1073c:	ldr	r6, [ip, lr]
   10740:	add	r3, r3, #8
   10744:	sub	sp, sp, r3
   10748:	sxth	r1, r1
   1074c:	mov	r0, #0
   10750:	sxth	r2, r2
   10754:	ldr	ip, [r6]
   10758:	mov	r3, #1
   1075c:	add	r5, sp, #8
   10760:	str	r5, [sp]
   10764:	str	ip, [fp, #-24]	; 0xffffffe8
   10768:	bl	39094 <readScreen@@Base>
   1076c:	cmp	r4, #0
   10770:	blt	1079c <_start@@Base+0x848>
   10774:	ldr	r3, [r5, r4, lsl #3]
   10778:	cmp	r3, #32
   1077c:	bne	107b8 <_start@@Base+0x864>
   10780:	add	r3, r5, r4, lsl #3
   10784:	b	10794 <_start@@Base+0x840>
   10788:	ldr	r2, [r3, #-8]!
   1078c:	cmp	r2, #32
   10790:	bne	107b8 <_start@@Base+0x864>
   10794:	subs	r4, r4, #1
   10798:	bcs	10788 <_start@@Base+0x834>
   1079c:	mov	r0, #0
   107a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   107a4:	ldr	r3, [r6]
   107a8:	cmp	r2, r3
   107ac:	bne	107c0 <_start@@Base+0x86c>
   107b0:	sub	sp, fp, #16
   107b4:	pop	{r4, r5, r6, fp, pc}
   107b8:	mov	r0, #1
   107bc:	b	107a0 <_start@@Base+0x84c>
   107c0:	bl	f950 <__stack_chk_fail@plt>
   107c4:	andeq	r2, r6, r8, asr #6
   107c8:			; <UNDEFINED> instruction: 0x000003b4
   107cc:	push	{r4, r5, lr}
   107d0:	sub	sp, sp, #20
   107d4:	ldr	r4, [pc, #304]	; 1090c <_start@@Base+0x9b8>
   107d8:	ldr	r2, [pc, #304]	; 10910 <_start@@Base+0x9bc>
   107dc:	add	r4, pc, r4
   107e0:	ldr	r3, [pc, #300]	; 10914 <_start@@Base+0x9c0>
   107e4:	ldr	r5, [r4, r2]
   107e8:	ldr	r2, [r5]
   107ec:	str	r2, [sp, #12]
   107f0:	ldr	r3, [r4, r3]
   107f4:	ldrb	r3, [r3, #25]
   107f8:	cmp	r3, #0
   107fc:	bne	10834 <_start@@Base+0x8e0>
   10800:	ldr	r3, [pc, #272]	; 10918 <_start@@Base+0x9c4>
   10804:	mov	r0, #0
   10808:	mvn	r2, #0
   1080c:	ldr	r3, [r4, r3]
   10810:	ldr	r3, [r3]
   10814:	str	r2, [r3, #36]	; 0x24
   10818:	str	r2, [r3, #32]
   1081c:	ldr	r2, [sp, #12]
   10820:	ldr	r3, [r5]
   10824:	cmp	r2, r3
   10828:	bne	10908 <_start@@Base+0x9b4>
   1082c:	add	sp, sp, #20
   10830:	pop	{r4, r5, pc}
   10834:	add	r0, sp, #4
   10838:	add	r1, sp, #8
   1083c:	bl	39228 <getScreenPointer@@Base>
   10840:	cmp	r0, #0
   10844:	beq	10800 <_start@@Base+0x8ac>
   10848:	ldr	r3, [pc, #200]	; 10918 <_start@@Base+0x9c4>
   1084c:	ldr	r1, [sp, #4]
   10850:	ldr	r2, [sp, #8]
   10854:	ldr	r3, [r4, r3]
   10858:	ldr	r3, [r3]
   1085c:	ldr	r0, [r3, #32]
   10860:	ldr	ip, [r3, #36]	; 0x24
   10864:	cmp	r0, r1
   10868:	strne	r1, [r3, #32]
   1086c:	mvnne	r0, r0
   10870:	moveq	r0, #0
   10874:	lsrne	r0, r0, #31
   10878:	cmp	ip, r2
   1087c:	beq	1088c <_start@@Base+0x938>
   10880:	cmp	ip, #0
   10884:	str	r2, [r3, #36]	; 0x24
   10888:	movge	r0, #1
   1088c:	cmp	r0, #0
   10890:	beq	1081c <_start@@Base+0x8c8>
   10894:	ldr	r0, [r3, #8]
   10898:	cmp	r1, r0
   1089c:	bge	108e4 <_start@@Base+0x990>
   108a0:	str	r1, [r3, #8]
   108a4:	ldr	r1, [r3, #12]
   108a8:	cmp	r2, r1
   108ac:	strlt	r2, [r3, #12]
   108b0:	movlt	r0, #1
   108b4:	blt	1081c <_start@@Base+0x8c8>
   108b8:	ldr	r0, [pc, #92]	; 1091c <_start@@Base+0x9c8>
   108bc:	ldr	r0, [r4, r0]
   108c0:	ldr	r0, [r0, #4]
   108c4:	add	r1, r1, r0
   108c8:	cmp	r2, r1
   108cc:	movlt	r0, #1
   108d0:	rsbge	r2, r0, r2
   108d4:	movge	r0, #1
   108d8:	addge	r2, r2, r0
   108dc:	strge	r2, [r3, #12]
   108e0:	b	1081c <_start@@Base+0x8c8>
   108e4:	ldr	ip, [pc, #52]	; 10920 <_start@@Base+0x9cc>
   108e8:	ldr	ip, [r4, ip]
   108ec:	ldr	ip, [ip]
   108f0:	add	r0, r0, ip
   108f4:	cmp	r1, r0
   108f8:	blt	108a4 <_start@@Base+0x950>
   108fc:	rsb	r1, ip, r1
   10900:	add	r1, r1, #1
   10904:	b	108a0 <_start@@Base+0x94c>
   10908:	bl	f950 <__stack_chk_fail@plt>
   1090c:	muleq	r6, ip, r2
   10910:			; <UNDEFINED> instruction: 0x000003b4
   10914:	andeq	r0, r0, r0, asr #10
   10918:			; <UNDEFINED> instruction: 0x000003b8
   1091c:	andeq	r0, r0, r8, asr #10
   10920:	andeq	r0, r0, r0, asr #7
   10924:	ldr	r1, [pc, #20]	; 10940 <_start@@Base+0x9ec>
   10928:	mov	r0, #3
   1092c:	push	{r3, lr}
   10930:	add	r1, pc, r1
   10934:	bl	1c634 <logMessage@@Base>
   10938:	mov	r0, #0
   1093c:	pop	{r3, pc}
   10940:	andeq	sp, r3, ip, asr #28
   10944:	ldr	r3, [pc, #20]	; 10960 <_start@@Base+0xa0c>
   10948:	mov	r2, #0
   1094c:	ldr	r1, [pc, #16]	; 10964 <_start@@Base+0xa10>
   10950:	add	r3, pc, r3
   10954:	ldr	r3, [r3, r1]
   10958:	str	r2, [r3]
   1095c:	b	25be0 <deallocateSessionEntries@@Base>
   10960:	andeq	r2, r6, r8, lsr #2
   10964:			; <UNDEFINED> instruction: 0x000003b8
   10968:	push	{r3, r4, r5, lr}
   1096c:	mov	r0, #0
   10970:	bl	fc74 <time@plt>
   10974:	ldr	r4, [pc, #72]	; 109c4 <_start@@Base+0xa70>
   10978:	add	r4, pc, r4
   1097c:	ldr	r1, [r4, #1032]	; 0x408
   10980:	mov	r5, r0
   10984:	bl	f680 <difftime@plt>
   10988:	vmov.f64	d7, #20	; 0x40a00000  5.0
   1098c:	vcmpe.f64	d0, d7
   10990:	vmrs	APSR_nzcv, fpscr
   10994:	movgt	r3, #0
   10998:	strgt	r3, [r4, #1036]	; 0x40c
   1099c:	ldr	r3, [pc, #36]	; 109c8 <_start@@Base+0xa74>
   109a0:	add	r3, pc, r3
   109a4:	ldr	r2, [r3, #1036]	; 0x40c
   109a8:	add	r2, r2, #1
   109ac:	str	r2, [r3, #1036]	; 0x40c
   109b0:	cmp	r2, #3
   109b4:	strls	r5, [r3, #1032]	; 0x408
   109b8:	popls	{r3, r4, r5, pc}
   109bc:	mov	r0, #1
   109c0:	bl	f5a8 <exit@plt>
   109c4:	andeq	r2, r6, ip, asr #15
   109c8:	andeq	r2, r6, r4, lsr #15
   109cc:	push	{r3, lr}
   109d0:	bl	1c2c8 <closeSystemLog@@Base>
   109d4:	pop	{r3, lr}
   109d8:	b	1c228 <closeLogFile@@Base>
   109dc:	push	{r3, r4, r5, lr}
   109e0:	mov	r5, r0
   109e4:	mov	r0, r1
   109e8:	ldr	r4, [pc, #84]	; 10a44 <_start@@Base+0xaf0>
   109ec:	bl	3d134 <getRoutingStatus@@Base>
   109f0:	add	r4, pc, r4
   109f4:	cmp	r0, #0
   109f8:	popeq	{r3, r4, r5, pc}
   109fc:	cmp	r0, r5
   10a00:	bhi	10a38 <_start@@Base+0xae4>
   10a04:	ldr	r3, [pc, #60]	; 10a48 <_start@@Base+0xaf4>
   10a08:	ldr	r0, [r4, r3]
   10a0c:	bl	37160 <playTune@@Base>
   10a10:	ldr	r3, [pc, #52]	; 10a4c <_start@@Base+0xaf8>
   10a14:	ldr	r2, [pc, #52]	; 10a50 <_start@@Base+0xafc>
   10a18:	ldr	r3, [r4, r3]
   10a1c:	ldr	r2, [r4, r2]
   10a20:	ldr	r3, [r3]
   10a24:	ldrsh	r1, [r2, #4]
   10a28:	ldrsh	r2, [r2, #6]
   10a2c:	str	r1, [r3, #40]	; 0x28
   10a30:	str	r2, [r3, #44]	; 0x2c
   10a34:	pop	{r3, r4, r5, pc}
   10a38:	ldr	r3, [pc, #20]	; 10a54 <_start@@Base+0xb00>
   10a3c:	ldr	r0, [r4, r3]
   10a40:	b	10a0c <_start@@Base+0xab8>
   10a44:	andeq	r2, r6, r8, lsl #1
   10a48:	andeq	r0, r0, r0, lsl r4
   10a4c:			; <UNDEFINED> instruction: 0x000003b8
   10a50:	andeq	r0, r0, ip, lsl #9
   10a54:	andeq	r0, r0, r0, asr #8
   10a58:	ldr	r3, [pc, #48]	; 10a90 <_start@@Base+0xb3c>
   10a5c:	ldr	r2, [pc, #48]	; 10a94 <_start@@Base+0xb40>
   10a60:	add	r3, pc, r3
   10a64:	ldr	r2, [r3, r2]
   10a68:	ldr	r2, [r2]
   10a6c:	ldr	r1, [r2, #12]
   10a70:	cmp	r1, #0
   10a74:	ble	10a84 <_start@@Base+0xb30>
   10a78:	sub	r1, r1, #1
   10a7c:	str	r1, [r2, #12]
   10a80:	bx	lr
   10a84:	ldr	r2, [pc, #12]	; 10a98 <_start@@Base+0xb44>
   10a88:	ldr	r0, [r3, r2]
   10a8c:	b	37160 <playTune@@Base>
   10a90:	andeq	r2, r6, r8, lsl r0
   10a94:			; <UNDEFINED> instruction: 0x000003b8
   10a98:	andeq	r0, r0, r4, ror r5
   10a9c:	ldr	r3, [pc, #72]	; 10aec <_start@@Base+0xb98>
   10aa0:	ldr	r2, [pc, #72]	; 10af0 <_start@@Base+0xb9c>
   10aa4:	add	r3, pc, r3
   10aa8:	ldr	r0, [pc, #68]	; 10af4 <_start@@Base+0xba0>
   10aac:	ldr	r1, [pc, #68]	; 10af8 <_start@@Base+0xba4>
   10ab0:	ldr	r2, [r3, r2]
   10ab4:	ldr	r0, [r3, r0]
   10ab8:	ldr	r1, [r3, r1]
   10abc:	ldr	r2, [r2]
   10ac0:	ldrsh	ip, [r0]
   10ac4:	ldr	r0, [r1, #4]
   10ac8:	ldr	r1, [r2, #12]
   10acc:	rsb	r0, r0, ip
   10ad0:	cmp	r1, r0
   10ad4:	addlt	r1, r1, #1
   10ad8:	strlt	r1, [r2, #12]
   10adc:	bxlt	lr
   10ae0:	ldr	r2, [pc, #20]	; 10afc <_start@@Base+0xba8>
   10ae4:	ldr	r0, [r3, r2]
   10ae8:	b	37160 <playTune@@Base>
   10aec:	ldrdeq	r1, [r6], -r4
   10af0:			; <UNDEFINED> instruction: 0x000003b8
   10af4:	andeq	r0, r0, ip, lsl #9
   10af8:	andeq	r0, r0, r8, asr #10
   10afc:	andeq	r0, r0, r4, ror r5
   10b00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b04:	add	fp, sp, #32
   10b08:	ldr	r7, [pc, #608]	; 10d70 <_start@@Base+0xe1c>
   10b0c:	sub	sp, sp, #68	; 0x44
   10b10:	str	r1, [fp, #-56]	; 0xffffffc8
   10b14:	ldr	r1, [pc, #600]	; 10d74 <_start@@Base+0xe20>
   10b18:	add	r7, pc, r7
   10b1c:	str	r3, [fp, #-84]	; 0xffffffac
   10b20:	mov	r5, r0
   10b24:	str	r2, [fp, #-60]	; 0xffffffc4
   10b28:	ldr	r1, [r7, r1]
   10b2c:	ldr	ip, [fp, #-56]	; 0xffffffc8
   10b30:	ldr	r4, [fp, #4]
   10b34:	ldr	r3, [r1]
   10b38:	str	r1, [fp, #-88]	; 0xffffffa8
   10b3c:	str	r3, [fp, #-40]	; 0xffffffd8
   10b40:	blx	ip
   10b44:	cmp	r0, #0
   10b48:	beq	10cf4 <_start@@Base+0xda0>
   10b4c:	lsl	r6, r4, #3
   10b50:	str	sp, [fp, #-80]	; 0xffffffb0
   10b54:	add	r6, r6, #10
   10b58:	ldr	r2, [pc, #536]	; 10d78 <_start@@Base+0xe24>
   10b5c:	bic	r3, r6, #7
   10b60:	sub	sp, sp, r3
   10b64:	ldr	r3, [pc, #528]	; 10d7c <_start@@Base+0xe28>
   10b68:	add	r2, pc, r2
   10b6c:	add	ip, sp, #8
   10b70:	str	ip, [fp, #-72]	; 0xffffffb8
   10b74:	cmp	r5, r2
   10b78:	ldr	r3, [r7, r3]
   10b7c:	str	r3, [fp, #-52]	; 0xffffffcc
   10b80:	ldr	r3, [r3]
   10b84:	beq	10d58 <_start@@Base+0xe04>
   10b88:	ldr	ip, [fp, #-84]	; 0xffffffac
   10b8c:	bic	r6, r6, #7
   10b90:	ldrsh	r1, [r3, #12]
   10b94:	mov	r3, #1
   10b98:	sxth	ip, ip
   10b9c:	str	ip, [fp, #-64]	; 0xffffffc0
   10ba0:	sxth	ip, r4
   10ba4:	str	ip, [fp, #-68]	; 0xffffffbc
   10ba8:	ldr	ip, [fp, #-72]	; 0xffffffb8
   10bac:	str	ip, [sp]
   10bb0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   10bb4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   10bb8:	bl	39094 <readScreen@@Base>
   10bbc:	ldr	ip, [fp, #-84]	; 0xffffffac
   10bc0:	str	r6, [fp, #-76]	; 0xffffffb4
   10bc4:	mov	r6, #0
   10bc8:	add	ip, ip, r4
   10bcc:	str	ip, [fp, #-92]	; 0xffffffa4
   10bd0:	ldr	ip, [fp, #-52]	; 0xffffffcc
   10bd4:	mov	r3, #1
   10bd8:	str	sp, [fp, #-48]	; 0xffffffd0
   10bdc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   10be0:	ldr	lr, [ip]
   10be4:	ldr	ip, [fp, #-76]	; 0xffffffb4
   10be8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   10bec:	sub	sp, sp, ip
   10bf0:	ldr	r1, [lr, #12]
   10bf4:	ldr	ip, [fp, #-60]	; 0xffffffc4
   10bf8:	add	r8, sp, #8
   10bfc:	add	r1, ip, r1
   10c00:	str	r1, [lr, #12]
   10c04:	str	r8, [sp]
   10c08:	sxth	r1, r1
   10c0c:	bl	39094 <readScreen@@Base>
   10c10:	cmp	r4, #0
   10c14:	ble	10c74 <_start@@Base+0xd20>
   10c18:	mov	r9, r8
   10c1c:	mov	sl, #0
   10c20:	ldr	r8, [fp, #-72]	; 0xffffffb8
   10c24:	b	10c3c <_start@@Base+0xce8>
   10c28:	add	sl, sl, #1
   10c2c:	add	r8, r8, #8
   10c30:	cmp	sl, r4
   10c34:	add	r9, r9, #8
   10c38:	beq	10c74 <_start@@Base+0xd20>
   10c3c:	mov	r0, r8
   10c40:	mov	r1, r9
   10c44:	blx	r5
   10c48:	cmp	r0, #0
   10c4c:	bne	10c28 <_start@@Base+0xcd4>
   10c50:	ldr	sp, [fp, #-80]	; 0xffffffb0
   10c54:	mov	r0, #1
   10c58:	ldr	ip, [fp, #-88]	; 0xffffffa8
   10c5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10c60:	ldr	r3, [ip]
   10c64:	cmp	r2, r3
   10c68:	bne	10d6c <_start@@Base+0xe18>
   10c6c:	sub	sp, fp, #32
   10c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c74:	ldr	r3, [pc, #260]	; 10d80 <_start@@Base+0xe2c>
   10c78:	ldr	r3, [r7, r3]
   10c7c:	ldrb	r2, [r3, #12]
   10c80:	tst	r2, #1
   10c84:	beq	10cc0 <_start@@Base+0xd6c>
   10c88:	ldr	r2, [pc, #244]	; 10d84 <_start@@Base+0xe30>
   10c8c:	ldr	r2, [r7, r2]
   10c90:	ldrb	r2, [r2, #2]
   10c94:	cmp	r2, #0
   10c98:	beq	10cc0 <_start@@Base+0xd6c>
   10c9c:	ldr	ip, [fp, #-52]	; 0xffffffcc
   10ca0:	ldr	r2, [ip]
   10ca4:	ldrb	r1, [r2, #5]
   10ca8:	cmp	r1, #0
   10cac:	bne	10cc0 <_start@@Base+0xd6c>
   10cb0:	ldr	r2, [r2, #12]
   10cb4:	ldrsh	r1, [r3, #6]
   10cb8:	cmp	r1, r2
   10cbc:	beq	10d38 <_start@@Base+0xde4>
   10cc0:	cmp	r6, #0
   10cc4:	beq	10d08 <_start@@Base+0xdb4>
   10cc8:	cmp	r6, #4
   10ccc:	ble	10d18 <_start@@Base+0xdc4>
   10cd0:	tst	r6, #3
   10cd4:	beq	10d28 <_start@@Base+0xdd4>
   10cd8:	ldr	sp, [fp, #-48]	; 0xffffffd0
   10cdc:	add	r6, r6, #1
   10ce0:	ldr	ip, [fp, #-56]	; 0xffffffc8
   10ce4:	blx	ip
   10ce8:	cmp	r0, #0
   10cec:	bne	10bd0 <_start@@Base+0xc7c>
   10cf0:	ldr	sp, [fp, #-80]	; 0xffffffb0
   10cf4:	ldr	r3, [pc, #140]	; 10d88 <_start@@Base+0xe34>
   10cf8:	ldr	r0, [r7, r3]
   10cfc:	bl	37160 <playTune@@Base>
   10d00:	mov	r0, #0
   10d04:	b	10c58 <_start@@Base+0xd04>
   10d08:	ldr	r3, [pc, #124]	; 10d8c <_start@@Base+0xe38>
   10d0c:	ldr	r0, [r7, r3]
   10d10:	bl	37160 <playTune@@Base>
   10d14:	b	10cd8 <_start@@Base+0xd84>
   10d18:	ldr	r3, [pc, #112]	; 10d90 <_start@@Base+0xe3c>
   10d1c:	ldr	r0, [r7, r3]
   10d20:	bl	37160 <playTune@@Base>
   10d24:	b	10cd8 <_start@@Base+0xd84>
   10d28:	ldr	r3, [pc, #100]	; 10d94 <_start@@Base+0xe40>
   10d2c:	ldr	r0, [r7, r3]
   10d30:	bl	37160 <playTune@@Base>
   10d34:	b	10cd8 <_start@@Base+0xd84>
   10d38:	ldrsh	r3, [r3, #4]
   10d3c:	ldr	ip, [fp, #-84]	; 0xffffffac
   10d40:	cmp	ip, r3
   10d44:	bgt	10cc0 <_start@@Base+0xd6c>
   10d48:	ldr	ip, [fp, #-92]	; 0xffffffa4
   10d4c:	cmp	r3, ip
   10d50:	bge	10cc0 <_start@@Base+0xd6c>
   10d54:	b	10c50 <_start@@Base+0xcfc>
   10d58:	ldrb	r2, [r3, #6]
   10d5c:	cmp	r2, #0
   10d60:	ldrne	r5, [pc, #48]	; 10d98 <_start@@Base+0xe44>
   10d64:	addne	r5, pc, r5
   10d68:	b	10b88 <_start@@Base+0xc34>
   10d6c:	bl	f950 <__stack_chk_fail@plt>
   10d70:	andeq	r1, r6, r0, ror #30
   10d74:			; <UNDEFINED> instruction: 0x000003b4
   10d78:			; <UNDEFINED> instruction: 0xfffff6e8
   10d7c:			; <UNDEFINED> instruction: 0x000003b8
   10d80:	andeq	r0, r0, ip, lsl #9
   10d84:	andeq	r0, r0, r0, asr #10
   10d88:	andeq	r0, r0, r4, ror r5
   10d8c:	andeq	r0, r0, ip, lsr #7
   10d90:	andeq	r0, r0, r8, ror #9
   10d94:	ldrdeq	r0, [r0], -ip
   10d98:			; <UNDEFINED> instruction: 0xfffff504
   10d9c:	ldr	ip, [pc, #52]	; 10dd8 <_start@@Base+0xe84>
   10da0:	mvn	r2, #0
   10da4:	push	{lr}		; (str lr, [sp, #-4]!)
   10da8:	add	ip, pc, ip
   10dac:	ldr	lr, [pc, #40]	; 10ddc <_start@@Base+0xe88>
   10db0:	sub	sp, sp, #12
   10db4:	ldr	r1, [pc, #36]	; 10de0 <_start@@Base+0xe8c>
   10db8:	mov	r3, #0
   10dbc:	ldr	ip, [ip, lr]
   10dc0:	add	r1, pc, r1
   10dc4:	ldrsh	ip, [ip, #2]
   10dc8:	str	ip, [sp]
   10dcc:	bl	10b00 <_start@@Base+0xbac>
   10dd0:	add	sp, sp, #12
   10dd4:	pop	{pc}		; (ldr pc, [sp], #4)
   10dd8:	ldrdeq	r1, [r6], -r0
   10ddc:	andeq	r0, r0, ip, lsl #9
   10de0:			; <UNDEFINED> instruction: 0xfffff4c0
   10de4:	ldr	ip, [pc, #52]	; 10e20 <_start@@Base+0xecc>
   10de8:	mov	r2, #1
   10dec:	push	{lr}		; (str lr, [sp, #-4]!)
   10df0:	add	ip, pc, ip
   10df4:	ldr	lr, [pc, #40]	; 10e24 <_start@@Base+0xed0>
   10df8:	sub	sp, sp, #12
   10dfc:	ldr	r1, [pc, #36]	; 10e28 <_start@@Base+0xed4>
   10e00:	mov	r3, #0
   10e04:	ldr	ip, [ip, lr]
   10e08:	add	r1, pc, r1
   10e0c:	ldrsh	ip, [ip, #2]
   10e10:	str	ip, [sp]
   10e14:	bl	10b00 <_start@@Base+0xbac>
   10e18:	add	sp, sp, #12
   10e1c:	pop	{pc}		; (ldr pc, [sp], #4)
   10e20:	andeq	r1, r6, r8, lsl #25
   10e24:	andeq	r0, r0, ip, lsl #9
   10e28:			; <UNDEFINED> instruction: 0xfffff4a8
   10e2c:	and	r1, r1, #196608	; 0x30000
   10e30:	cmp	r1, #65536	; 0x10000
   10e34:	push	{r4, lr}
   10e38:	beq	10e74 <_start@@Base+0xf20>
   10e3c:	cmp	r1, #131072	; 0x20000
   10e40:	beq	10ea0 <_start@@Base+0xf4c>
   10e44:	cmp	r1, #0
   10e48:	ldrb	r4, [r0]
   10e4c:	beq	10e84 <_start@@Base+0xf30>
   10e50:	cmp	r4, #0
   10e54:	moveq	r3, r2
   10e58:	bne	10e7c <_start@@Base+0xf28>
   10e5c:	cmp	r3, #0
   10e60:	beq	10e6c <_start@@Base+0xf18>
   10e64:	mov	r0, r3
   10e68:	bl	37160 <playTune@@Base>
   10e6c:	mov	r0, r4
   10e70:	pop	{r4, pc}
   10e74:	mov	r2, #1
   10e78:	strb	r2, [r0]
   10e7c:	mov	r4, #1
   10e80:	b	10e5c <_start@@Base+0xf08>
   10e84:	rsbs	r4, r4, #1
   10e88:	movcc	r4, #0
   10e8c:	cmp	r4, #0
   10e90:	strb	r4, [r0]
   10e94:	moveq	r3, r2
   10e98:	beq	10e5c <_start@@Base+0xf08>
   10e9c:	b	10e7c <_start@@Base+0xf28>
   10ea0:	mov	r4, #0
   10ea4:	mov	r3, r2
   10ea8:	strb	r4, [r0]
   10eac:	b	10e5c <_start@@Base+0xf08>
   10eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10eb4:	mov	r4, r1
   10eb8:	ldr	sl, [pc, #176]	; 10f70 <_start@@Base+0x101c>
   10ebc:	mov	r9, r3
   10ec0:	ldr	r1, [pc, #172]	; 10f74 <_start@@Base+0x1020>
   10ec4:	sub	sp, sp, #12
   10ec8:	add	sl, pc, sl
   10ecc:	mov	r7, r0
   10ed0:	mov	r8, r2
   10ed4:	ldr	r1, [sl, r1]
   10ed8:	ldr	r3, [r1]
   10edc:	str	r1, [sp, #4]
   10ee0:	ldr	r3, [r3, #12]
   10ee4:	adds	fp, r4, r3
   10ee8:	bmi	10f5c <_start@@Base+0x1008>
   10eec:	ldr	r1, [pc, #132]	; 10f78 <_start@@Base+0x1024>
   10ef0:	ldr	r2, [pc, #132]	; 10f7c <_start@@Base+0x1028>
   10ef4:	ldr	r6, [sl, r1]
   10ef8:	ldr	r5, [sl, r2]
   10efc:	ldrsh	r1, [r6]
   10f00:	ldr	r2, [r5, #4]
   10f04:	rsb	r2, r2, r1
   10f08:	cmp	fp, r2
   10f0c:	ble	10f30 <_start@@Base+0xfdc>
   10f10:	b	10f5c <_start@@Base+0x1008>
   10f14:	adds	fp, fp, r4
   10f18:	bmi	10f5c <_start@@Base+0x1008>
   10f1c:	ldrsh	r1, [r6]
   10f20:	ldr	r2, [r5, #4]
   10f24:	rsb	r2, r2, r1
   10f28:	cmp	r2, fp
   10f2c:	blt	10f5c <_start@@Base+0x1008>
   10f30:	mov	r0, r7
   10f34:	mov	r1, fp
   10f38:	mov	r2, r9
   10f3c:	blx	r8
   10f40:	cmp	r0, #0
   10f44:	beq	10f14 <_start@@Base+0xfc0>
   10f48:	ldr	r3, [sp, #4]
   10f4c:	ldr	r2, [r3]
   10f50:	str	fp, [r2, #12]
   10f54:	add	sp, sp, #12
   10f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f5c:	ldr	r3, [pc, #28]	; 10f80 <_start@@Base+0x102c>
   10f60:	ldr	r0, [sl, r3]
   10f64:	add	sp, sp, #12
   10f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f6c:	b	37160 <playTune@@Base>
   10f70:			; <UNDEFINED> instruction: 0x00061bb0
   10f74:			; <UNDEFINED> instruction: 0x000003b8
   10f78:	andeq	r0, r0, ip, lsl #9
   10f7c:	andeq	r0, r0, r8, asr #10
   10f80:	andeq	r0, r0, r4, ror r5
   10f84:	push	{r4, r5, r6, r7, fp, lr}
   10f88:	add	fp, sp, #20
   10f8c:	ldr	r4, [pc, #204]	; 11060 <_start@@Base+0x110c>
   10f90:	sub	sp, sp, #32
   10f94:	ldr	lr, [pc, #200]	; 11064 <_start@@Base+0x1110>
   10f98:	add	r4, pc, r4
   10f9c:	ldr	r1, [pc, #196]	; 11068 <_start@@Base+0x1114>
   10fa0:	ldr	r2, [pc, #196]	; 1106c <_start@@Base+0x1118>
   10fa4:	add	ip, r0, #7
   10fa8:	ldr	r5, [r4, lr]
   10fac:	bic	ip, ip, #7
   10fb0:	mov	r3, #1
   10fb4:	ldr	lr, [r5]
   10fb8:	str	lr, [fp, #-24]	; 0xffffffe8
   10fbc:	ldr	r1, [r4, r1]
   10fc0:	ldr	r2, [r4, r2]
   10fc4:	str	r0, [fp, #-28]	; 0xffffffe4
   10fc8:	ldr	r1, [r1]
   10fcc:	ldrsh	r2, [r2, #2]
   10fd0:	ldr	r0, [r1, #8]
   10fd4:	ldrsh	r1, [r1, #12]
   10fd8:	rsb	r2, r0, r2
   10fdc:	str	r2, [fp, #-32]	; 0xffffffe0
   10fe0:	sxth	r0, r0
   10fe4:	lsl	lr, r2, #2
   10fe8:	sxth	r2, r2
   10fec:	add	lr, lr, #10
   10ff0:	bic	lr, lr, #7
   10ff4:	sub	sp, sp, lr
   10ff8:	add	r6, sp, #16
   10ffc:	sub	sp, sp, ip
   11000:	add	r7, sp, #16
   11004:	str	r6, [sp]
   11008:	bl	3910c <readScreenText@@Base>
   1100c:	ldr	r3, [pc, #92]	; 11070 <_start@@Base+0x111c>
   11010:	ldr	r3, [r4, r3]
   11014:	ldr	r4, [r3]
   11018:	bl	1030c <_start@@Base+0x3b8>
   1101c:	mov	r3, #0
   11020:	sub	r2, fp, #28
   11024:	mov	r1, r6
   11028:	stm	sp, {r2, r3}
   1102c:	mov	r3, r7
   11030:	sub	r2, fp, #32
   11034:	str	r0, [sp, #8]
   11038:	mov	r0, r4
   1103c:	bl	304a4 <contractText@@Base>
   11040:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11044:	ldr	r3, [r5]
   11048:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1104c:	cmp	r2, r3
   11050:	bne	1105c <_start@@Base+0x1108>
   11054:	sub	sp, fp, #20
   11058:	pop	{r4, r5, r6, r7, fp, pc}
   1105c:	bl	f950 <__stack_chk_fail@plt>
   11060:	andeq	r1, r6, r0, ror #21
   11064:			; <UNDEFINED> instruction: 0x000003b4
   11068:			; <UNDEFINED> instruction: 0x000003b8
   1106c:	andeq	r0, r0, ip, lsl #9
   11070:	ldrdeq	r0, [r0], -r4
   11074:	push	{r4, lr}
   11078:	mov	r1, r0
   1107c:	ldr	r4, [pc, #120]	; 110fc <_start@@Base+0x11a8>
   11080:	ldr	r3, [pc, #120]	; 11100 <_start@@Base+0x11ac>
   11084:	add	r4, pc, r4
   11088:	ldr	r3, [r4, r3]
   1108c:	ldrb	r3, [r3, #26]
   11090:	cmp	r3, #1
   11094:	beq	110dc <_start@@Base+0x1188>
   11098:	ldr	r3, [pc, #100]	; 11104 <_start@@Base+0x11b0>
   1109c:	ldr	r3, [r4, r3]
   110a0:	ldr	r2, [r3]
   110a4:	ldr	r3, [r2, #8]
   110a8:	add	r0, r1, r3
   110ac:	cmp	r3, r0
   110b0:	bge	110d4 <_start@@Base+0x1180>
   110b4:	ldr	r3, [pc, #76]	; 11108 <_start@@Base+0x11b4>
   110b8:	ldr	r3, [r4, r3]
   110bc:	ldrsh	r3, [r3, #2]
   110c0:	cmp	r0, r3
   110c4:	bge	110d4 <_start@@Base+0x1180>
   110c8:	str	r0, [r2, #8]
   110cc:	mov	r0, #1
   110d0:	pop	{r4, pc}
   110d4:	mov	r0, #0
   110d8:	pop	{r4, pc}
   110dc:	ldr	r3, [pc, #40]	; 1110c <_start@@Base+0x11b8>
   110e0:	ldr	r3, [r4, r3]
   110e4:	ldr	r3, [r3]
   110e8:	cmp	r3, #0
   110ec:	beq	11098 <_start@@Base+0x1144>
   110f0:	bl	10f84 <_start@@Base+0x1030>
   110f4:	mov	r1, r0
   110f8:	b	11098 <_start@@Base+0x1144>
   110fc:	strdeq	r1, [r6], -r4
   11100:	andeq	r0, r0, r0, asr #10
   11104:			; <UNDEFINED> instruction: 0x000003b8
   11108:	andeq	r0, r0, ip, lsl #9
   1110c:	ldrdeq	r0, [r0], -r4
   11110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11114:	sub	sp, sp, #12
   11118:	ldr	r4, [r1]
   1111c:	mov	r7, r3
   11120:	str	r1, [sp, #4]
   11124:	mov	fp, r0
   11128:	cmp	r4, r3
   1112c:	mov	r8, r2
   11130:	ldr	r5, [r0]
   11134:	bcc	11184 <_start@@Base+0x1230>
   11138:	ldr	r9, [r2]
   1113c:	b	1115c <_start@@Base+0x1208>
   11140:	sub	sl, r4, r3, asr #2
   11144:	bl	f770 <wmemcmp@plt>
   11148:	sub	r4, sl, #1
   1114c:	cmp	r0, #0
   11150:	beq	11190 <_start@@Base+0x123c>
   11154:	cmp	r7, r4
   11158:	bhi	11184 <_start@@Base+0x1230>
   1115c:	mov	r0, r5
   11160:	mov	r1, r9
   11164:	mov	r2, r4
   11168:	bl	f7a0 <wmemchr@plt>
   1116c:	mov	r1, r8
   11170:	mov	r2, r7
   11174:	subs	r6, r0, #0
   11178:	rsb	r3, r5, r6
   1117c:	add	r5, r6, #4
   11180:	bne	11140 <_start@@Base+0x11ec>
   11184:	mov	r0, #0
   11188:	add	sp, sp, #12
   1118c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11190:	ldr	r3, [sp, #4]
   11194:	mov	r0, #1
   11198:	str	r6, [fp]
   1119c:	str	sl, [r3]
   111a0:	add	sp, sp, #12
   111a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111a8:	push	{r4, r5, r6, r7, lr}
   111ac:	sub	sp, sp, #20
   111b0:	ldr	r5, [pc, #168]	; 11260 <_start@@Base+0x130c>
   111b4:	add	r7, sp, #4
   111b8:	ldr	r3, [pc, #164]	; 11264 <_start@@Base+0x1310>
   111bc:	mov	r4, r0
   111c0:	add	r5, pc, r5
   111c4:	mov	r0, r7
   111c8:	ldr	r6, [r5, r3]
   111cc:	ldr	r3, [r6]
   111d0:	str	r3, [sp, #12]
   111d4:	bl	1e6fc <getCurrentTime@@Base>
   111d8:	mov	r0, r7
   111dc:	mov	r1, r4
   111e0:	bl	1e814 <expandTimeValue@@Base>
   111e4:	ldr	r3, [pc, #124]	; 11268 <_start@@Base+0x1314>
   111e8:	ldr	r3, [r5, r3]
   111ec:	ldrb	r3, [r3, #72]	; 0x48
   111f0:	cmp	r3, #1
   111f4:	bne	11254 <_start@@Base+0x1300>
   111f8:	ldrb	r3, [r4, #4]
   111fc:	cmp	r3, #11
   11200:	movls	r0, #38	; 0x26
   11204:	movhi	r0, #39	; 0x27
   11208:	movt	r0, #2
   1120c:	bl	f614 <nl_langinfo@plt>
   11210:	ldrb	r2, [r4, #4]
   11214:	movw	r3, #43691	; 0xaaab
   11218:	movt	r3, #43690	; 0xaaaa
   1121c:	umull	r1, r3, r3, r2
   11220:	lsr	r3, r3, #3
   11224:	add	r3, r3, r3, lsl #1
   11228:	sub	r3, r2, r3, lsl #2
   1122c:	ands	r3, r3, #255	; 0xff
   11230:	moveq	r3, #12
   11234:	strb	r3, [r4, #4]
   11238:	ldr	r2, [sp, #12]
   1123c:	ldr	r3, [r6]
   11240:	str	r0, [r4, #12]
   11244:	cmp	r2, r3
   11248:	bne	1125c <_start@@Base+0x1308>
   1124c:	add	sp, sp, #20
   11250:	pop	{r4, r5, r6, r7, pc}
   11254:	mov	r0, #0
   11258:	b	11238 <_start@@Base+0x12e4>
   1125c:	bl	f950 <__stack_chk_fail@plt>
   11260:			; <UNDEFINED> instruction: 0x000618b8
   11264:			; <UNDEFINED> instruction: 0x000003b4
   11268:	andeq	r0, r0, r0, asr #10
   1126c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11270:	mov	r6, r2
   11274:	ldr	r4, [pc, #164]	; 11320 <_start@@Base+0x13cc>
   11278:	sub	sp, sp, #20
   1127c:	ldr	ip, [pc, #160]	; 11324 <_start@@Base+0x13d0>
   11280:	mov	r9, r1
   11284:	add	r4, pc, r4
   11288:	add	r2, sp, #8
   1128c:	mov	r1, r6
   11290:	mov	r8, r3
   11294:	ldr	r5, [r4, ip]
   11298:	ldr	ip, [r5]
   1129c:	str	ip, [sp, #12]
   112a0:	bl	2826c <makeUtf8FromWchars@@Base>
   112a4:	subs	r7, r0, #0
   112a8:	beq	11314 <_start@@Base+0x13c0>
   112ac:	ldr	r2, [pc, #116]	; 11328 <_start@@Base+0x13d4>
   112b0:	cmp	r8, #0
   112b4:	ldr	r3, [pc, #112]	; 1132c <_start@@Base+0x13d8>
   112b8:	ldr	r8, [r4, r2]
   112bc:	ldr	r4, [r4, r3]
   112c0:	beq	112d4 <_start@@Base+0x1380>
   112c4:	ldr	r3, [r8]
   112c8:	mov	r0, r4
   112cc:	ldr	r3, [r3, #44]	; 0x2c
   112d0:	blx	r3
   112d4:	ldr	ip, [r8]
   112d8:	mov	r0, r4
   112dc:	str	r9, [sp]
   112e0:	mov	r3, r6
   112e4:	ldr	r2, [sp, #8]
   112e8:	mov	r1, r7
   112ec:	ldr	ip, [ip, #40]	; 0x28
   112f0:	blx	ip
   112f4:	mov	r0, r7
   112f8:	bl	f4f4 <free@plt>
   112fc:	ldr	r2, [sp, #12]
   11300:	ldr	r3, [r5]
   11304:	cmp	r2, r3
   11308:	bne	1131c <_start@@Base+0x13c8>
   1130c:	add	sp, sp, #20
   11310:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11314:	bl	1c740 <logMallocError@@Base>
   11318:	b	112fc <_start@@Base+0x13a8>
   1131c:	bl	f950 <__stack_chk_fail@plt>
   11320:	strdeq	r1, [r6], -r4
   11324:			; <UNDEFINED> instruction: 0x000003b4
   11328:	andeq	r0, r0, ip, lsl r4
   1132c:	andeq	r0, r0, r4, ror #9
   11330:	ldr	ip, [pc, #168]	; 113e0 <_start@@Base+0x148c>
   11334:	add	r3, r1, #7
   11338:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1133c:	add	fp, sp, #28
   11340:	ldr	r5, [pc, #156]	; 113e4 <_start@@Base+0x1490>
   11344:	sub	sp, sp, #8
   11348:	add	ip, pc, ip
   1134c:	lsl	lr, r1, #2
   11350:	bic	r3, r3, #7
   11354:	ldr	r7, [ip, r5]
   11358:	add	r4, lr, #10
   1135c:	bic	r4, r4, #7
   11360:	cmp	r1, #0
   11364:	sub	sp, sp, r4
   11368:	ldr	r4, [r7]
   1136c:	mov	r9, sp
   11370:	sub	sp, sp, r3
   11374:	mov	r3, r2
   11378:	addne	r2, r9, lr
   1137c:	str	r4, [fp, #-32]	; 0xffffffe0
   11380:	mov	r8, sp
   11384:	movne	lr, r9
   11388:	movne	r5, sp
   1138c:	movne	r4, #0
   11390:	beq	113b4 <_start@@Base+0x1460>
   11394:	mov	ip, r0
   11398:	ldr	r6, [ip, r4]!
   1139c:	add	r4, r4, #8
   113a0:	str	r6, [lr], #4
   113a4:	cmp	lr, r2
   113a8:	ldrb	ip, [ip, #4]
   113ac:	strb	ip, [r5], #1
   113b0:	bne	11394 <_start@@Base+0x1440>
   113b4:	mov	r2, r1
   113b8:	mov	r0, r9
   113bc:	mov	r1, r8
   113c0:	bl	1126c <_start@@Base+0x1318>
   113c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   113c8:	ldr	r3, [r7]
   113cc:	cmp	r2, r3
   113d0:	bne	113dc <_start@@Base+0x1488>
   113d4:	sub	sp, fp, #28
   113d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   113dc:	bl	f950 <__stack_chk_fail@plt>
   113e0:	andeq	r1, r6, r0, lsr r7
   113e4:			; <UNDEFINED> instruction: 0x000003b4
   113e8:	push	{r4, lr}
   113ec:	bl	39268 <switchScreenVirtualTerminal@@Base>
   113f0:	ldr	r3, [pc, #40]	; 11420 <_start@@Base+0x14cc>
   113f4:	add	r3, pc, r3
   113f8:	subs	r4, r0, #0
   113fc:	bne	11414 <_start@@Base+0x14c0>
   11400:	ldr	r2, [pc, #28]	; 11424 <_start@@Base+0x14d0>
   11404:	ldr	r0, [r3, r2]
   11408:	bl	37160 <playTune@@Base>
   1140c:	mov	r0, r4
   11410:	pop	{r4, pc}
   11414:	bl	105ac <_start@@Base+0x658>
   11418:	mov	r0, r4
   1141c:	pop	{r4, pc}
   11420:	andeq	r1, r6, r4, lsl #13
   11424:	andeq	r0, r0, r4, asr #8
   11428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1142c:	add	fp, sp, #32
   11430:	ldr	r4, [pc, #332]	; 11584 <_start@@Base+0x1630>
   11434:	sub	sp, sp, #20
   11438:	ldr	r2, [pc, #328]	; 11588 <_start@@Base+0x1634>
   1143c:	add	r4, pc, r4
   11440:	ldr	r3, [pc, #324]	; 1158c <_start@@Base+0x1638>
   11444:	ldr	r5, [r4, r2]
   11448:	ldr	r2, [r5]
   1144c:	str	r2, [fp, #-40]	; 0xffffffd8
   11450:	ldr	r7, [r4, r3]
   11454:	ldr	r3, [r7]
   11458:	ldr	r3, [r3, #52]	; 0x34
   1145c:	cmp	r3, #0
   11460:	moveq	r0, #1
   11464:	beq	11524 <_start@@Base+0x15d0>
   11468:	ldr	r3, [pc, #288]	; 11590 <_start@@Base+0x163c>
   1146c:	ldr	r8, [r4, r3]
   11470:	add	r8, r8, #48	; 0x30
   11474:	mov	r0, r8
   11478:	bl	26758 <getStatusFieldsLength@@Base>
   1147c:	ldr	r3, [pc, #272]	; 11594 <_start@@Base+0x1640>
   11480:	subs	r6, r0, #0
   11484:	beq	1153c <_start@@Base+0x15e8>
   11488:	ldr	r4, [r4, r3]
   1148c:	add	r2, r6, #7
   11490:	bic	r2, r2, #7
   11494:	mov	r9, sp
   11498:	sub	sp, sp, r2
   1149c:	mov	r1, #0
   114a0:	ldr	r3, [r4, #12]
   114a4:	mov	r2, r6
   114a8:	ldr	ip, [r4, #8]
   114ac:	mov	r0, sp
   114b0:	str	sp, [fp, #-48]	; 0xffffffd0
   114b4:	mul	sl, ip, r3
   114b8:	bl	f6b0 <memset@plt>
   114bc:	mov	r0, r8
   114c0:	mov	r1, sp
   114c4:	bl	2679c <renderStatusFields@@Base>
   114c8:	cmp	r6, sl
   114cc:	bcs	11550 <_start@@Base+0x15fc>
   114d0:	add	r0, sl, #7
   114d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   114d8:	bic	r0, r0, #7
   114dc:	mov	r2, r6
   114e0:	sub	sp, sp, r0
   114e4:	mov	r0, sp
   114e8:	bl	fb24 <memcpy@plt>
   114ec:	rsb	r2, r6, sl
   114f0:	mov	r1, #0
   114f4:	add	r0, sp, r6
   114f8:	bl	f6b0 <memset@plt>
   114fc:	ldr	r3, [r7]
   11500:	mov	r0, r4
   11504:	mov	r1, sp
   11508:	ldr	r3, [r3, #52]	; 0x34
   1150c:	blx	r3
   11510:	cmp	r0, #0
   11514:	bne	11578 <_start@@Base+0x1624>
   11518:	ldr	sp, [fp, #-48]	; 0xffffffd0
   1151c:	mov	r0, #0
   11520:	mov	sp, r9
   11524:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11528:	ldr	r3, [r5]
   1152c:	cmp	r2, r3
   11530:	bne	11580 <_start@@Base+0x162c>
   11534:	sub	sp, fp, #32
   11538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1153c:	ldr	r0, [r4, r3]
   11540:	bl	3db78 <clearStatusCells@@Base>
   11544:	adds	r0, r0, #0
   11548:	movne	r0, #1
   1154c:	b	11524 <_start@@Base+0x15d0>
   11550:	ldr	r3, [r7]
   11554:	mov	r0, r4
   11558:	mov	r1, sp
   1155c:	ldr	r3, [r3, #52]	; 0x34
   11560:	blx	r3
   11564:	cmp	r0, #0
   11568:	beq	1151c <_start@@Base+0x15c8>
   1156c:	mov	r0, #1
   11570:	mov	sp, r9
   11574:	b	11524 <_start@@Base+0x15d0>
   11578:	ldr	sp, [fp, #-48]	; 0xffffffd0
   1157c:	b	1156c <_start@@Base+0x1618>
   11580:	bl	f950 <__stack_chk_fail@plt>
   11584:	andeq	r1, r6, ip, lsr r6
   11588:			; <UNDEFINED> instruction: 0x000003b4
   1158c:	andeq	r0, r0, ip, ror r4
   11590:	andeq	r0, r0, r0, asr #10
   11594:	andeq	r0, r0, r8, asr #10
   11598:	push	{r3, r4, r5, lr}
   1159c:	mov	r1, r0
   115a0:	ldr	r3, [pc, #100]	; 1160c <_start@@Base+0x16b8>
   115a4:	ldr	r2, [pc, #100]	; 11610 <_start@@Base+0x16bc>
   115a8:	add	r3, pc, r3
   115ac:	ldr	r2, [r3, r2]
   115b0:	ldrb	r2, [r2, #28]
   115b4:	cmp	r2, #0
   115b8:	ldr	r2, [pc, #84]	; 11614 <_start@@Base+0x16c0>
   115bc:	bne	115e8 <_start@@Base+0x1694>
   115c0:	ldr	r2, [r3, r2]
   115c4:	ldr	r1, [pc, #76]	; 11618 <_start@@Base+0x16c4>
   115c8:	ldr	r4, [r2]
   115cc:	ldr	r3, [r3, r1]
   115d0:	mov	r1, r4
   115d4:	ldr	r5, [r3]
   115d8:	bl	4e204 <formatAddress@@Base+0x258>
   115dc:	mul	r0, r4, r0
   115e0:	str	r0, [r5, #8]
   115e4:	pop	{r3, r4, r5, pc}
   115e8:	ldr	r0, [pc, #40]	; 11618 <_start@@Base+0x16c4>
   115ec:	ldr	r2, [r3, r2]
   115f0:	ldr	r3, [r3, r0]
   115f4:	ldr	r2, [r2]
   115f8:	ldr	r3, [r3]
   115fc:	sub	r1, r1, r2, lsr #1
   11600:	bic	r1, r1, r1, asr #31
   11604:	str	r1, [r3, #8]
   11608:	pop	{r3, r4, r5, pc}
   1160c:	ldrdeq	r1, [r6], -r0
   11610:	andeq	r0, r0, r0, asr #10
   11614:	andeq	r0, r0, r0, asr #7
   11618:			; <UNDEFINED> instruction: 0x000003b8
   1161c:	push	{r4, r5, r6, lr}
   11620:	mov	r6, r0
   11624:	ldr	r4, [pc, #116]	; 116a0 <_start@@Base+0x174c>
   11628:	ldr	r3, [pc, #116]	; 116a4 <_start@@Base+0x1750>
   1162c:	add	r4, pc, r4
   11630:	ldr	r5, [r4, r3]
   11634:	ldrsh	r1, [r5, #2]
   11638:	bl	4e630 <formatAddress@@Base+0x684>
   1163c:	mov	r0, r1
   11640:	bl	11598 <_start@@Base+0x1644>
   11644:	ldrsh	r1, [r5, #2]
   11648:	mov	r0, r6
   1164c:	bl	4e410 <formatAddress@@Base+0x464>
   11650:	ldr	r3, [pc, #80]	; 116a8 <_start@@Base+0x1754>
   11654:	ldr	r2, [pc, #80]	; 116ac <_start@@Base+0x1758>
   11658:	ldr	r3, [r4, r3]
   1165c:	add	r2, pc, r2
   11660:	ldr	r1, [r2, #1040]	; 0x410
   11664:	ldr	r3, [r3]
   11668:	ldr	r2, [r3, #12]
   1166c:	add	r0, r0, r1
   11670:	cmp	r0, r2
   11674:	blt	11698 <_start@@Base+0x1744>
   11678:	ldr	r1, [pc, #48]	; 116b0 <_start@@Base+0x175c>
   1167c:	ldr	r1, [r4, r1]
   11680:	ldr	r1, [r1, #4]
   11684:	add	r2, r2, r1
   11688:	cmp	r0, r2
   1168c:	poplt	{r4, r5, r6, pc}
   11690:	rsb	r1, r1, #1
   11694:	add	r0, r1, r0
   11698:	str	r0, [r3, #12]
   1169c:	pop	{r4, r5, r6, pc}
   116a0:	andeq	r1, r6, ip, asr #8
   116a4:	andeq	r0, r0, ip, lsl #9
   116a8:			; <UNDEFINED> instruction: 0x000003b8
   116ac:	andeq	r1, r6, r8, ror #21
   116b0:	andeq	r0, r0, r8, asr #10
   116b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116b8:	add	fp, sp, #32
   116bc:	ldr	r4, [pc, #792]	; 119dc <_start@@Base+0x1a88>
   116c0:	sub	sp, sp, #36	; 0x24
   116c4:	ldr	r2, [pc, #788]	; 119e0 <_start@@Base+0x1a8c>
   116c8:	add	r4, pc, r4
   116cc:	ldr	r3, [pc, #784]	; 119e4 <_start@@Base+0x1a90>
   116d0:	ldr	r6, [r4, r2]
   116d4:	ldr	r2, [r6]
   116d8:	str	r2, [fp, #-40]	; 0xffffffd8
   116dc:	ldr	r5, [r4, r3]
   116e0:	ldrsh	r3, [r5, #4]
   116e4:	cmp	r3, #0
   116e8:	blt	117c4 <_start@@Base+0x1870>
   116ec:	ldrsh	r2, [r5, #2]
   116f0:	cmp	r2, r3
   116f4:	ble	117c4 <_start@@Base+0x1870>
   116f8:	ldrsh	r7, [r5, #6]
   116fc:	cmp	r7, #0
   11700:	blt	117c4 <_start@@Base+0x1870>
   11704:	ldrsh	r2, [r5]
   11708:	cmp	r2, r7
   1170c:	ble	117c4 <_start@@Base+0x1870>
   11710:	ldr	r2, [pc, #720]	; 119e8 <_start@@Base+0x1a94>
   11714:	add	r2, pc, r2
   11718:	ldr	r2, [r2]
   1171c:	cmp	r2, #0
   11720:	ldr	r2, [pc, #708]	; 119ec <_start@@Base+0x1a98>
   11724:	bne	117e0 <_start@@Base+0x188c>
   11728:	cmp	r0, #0
   1172c:	mov	r0, r3
   11730:	bne	1183c <_start@@Base+0x18e8>
   11734:	ldr	r3, [pc, #692]	; 119f0 <_start@@Base+0x1a9c>
   11738:	ldr	r2, [r4, r2]
   1173c:	ldr	r3, [r4, r3]
   11740:	ldr	r9, [r2]
   11744:	ldr	sl, [r3]
   11748:	ldr	r8, [r9, #8]
   1174c:	ldr	r3, [pc, #672]	; 119f4 <_start@@Base+0x1aa0>
   11750:	ldr	r3, [r4, r3]
   11754:	ldrb	r2, [r3, #28]
   11758:	cmp	r2, #0
   1175c:	beq	11810 <_start@@Base+0x18bc>
   11760:	add	r1, sl, sl, lsl #1
   11764:	movw	r2, #52429	; 0xcccd
   11768:	movt	r2, #52428	; 0xcccc
   1176c:	ldrb	r3, [r3, #29]
   11770:	umull	ip, r2, r2, r1
   11774:	cmp	r3, #0
   11778:	lsr	r1, r2, #3
   1177c:	lsrne	r2, r2, #4
   11780:	moveq	r2, r3
   11784:	add	r3, r2, r8
   11788:	cmp	r3, r0
   1178c:	bgt	11904 <_start@@Base+0x19b0>
   11790:	add	r8, r8, sl
   11794:	rsb	r2, r2, r8
   11798:	cmp	r2, r0
   1179c:	bgt	118c4 <_start@@Base+0x1970>
   117a0:	add	r2, r1, r0
   117a4:	ldrsh	r3, [r5, #2]
   117a8:	add	r2, r2, #1
   117ac:	cmp	r2, r3
   117b0:	rsble	r3, sl, r2
   117b4:	rsbgt	r3, sl, r3
   117b8:	bic	r3, r3, r3, asr #31
   117bc:	str	r3, [r9, #8]
   117c0:	b	118c4 <_start@@Base+0x1970>
   117c4:	mov	r0, #0
   117c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   117cc:	ldr	r3, [r6]
   117d0:	cmp	r2, r3
   117d4:	bne	119d8 <_start@@Base+0x1a84>
   117d8:	sub	sp, fp, #32
   117dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117e0:	ldr	r9, [r4, r2]
   117e4:	ldr	r2, [r9]
   117e8:	ldr	r1, [r2, #8]
   117ec:	str	r7, [r2, #12]
   117f0:	cmp	r3, r1
   117f4:	blt	1193c <_start@@Base+0x19e8>
   117f8:	ldr	r2, [pc, #504]	; 119f8 <_start@@Base+0x1aa4>
   117fc:	mov	r3, #1
   11800:	mov	r0, r3
   11804:	add	r2, pc, r2
   11808:	str	r3, [r2, #1044]	; 0x414
   1180c:	b	117c8 <_start@@Base+0x1874>
   11810:	cmp	r8, r0
   11814:	ble	118b0 <_start@@Base+0x195c>
   11818:	rsb	r0, r0, r8
   1181c:	mov	r1, sl
   11820:	sub	r0, r0, #1
   11824:	bl	4e204 <formatAddress@@Base+0x258>
   11828:	mla	r0, r0, sl, sl
   1182c:	subs	r8, r8, r0
   11830:	movmi	r8, #0
   11834:	str	r8, [r9, #8]
   11838:	b	118c4 <_start@@Base+0x1970>
   1183c:	ldr	r9, [r4, r2]
   11840:	ldr	r2, [r9]
   11844:	ldr	r8, [r2, #8]
   11848:	cmp	r3, r8
   1184c:	blt	11914 <_start@@Base+0x19c0>
   11850:	ldr	r1, [pc, #408]	; 119f0 <_start@@Base+0x1a9c>
   11854:	ldr	sl, [r4, r1]
   11858:	ldr	r1, [sl]
   1185c:	add	ip, r8, r1
   11860:	cmp	r3, ip
   11864:	str	r1, [fp, #-56]	; 0xffffffc8
   11868:	bge	1191c <_start@@Base+0x19c8>
   1186c:	ldr	ip, [r2, #12]
   11870:	cmp	r7, ip
   11874:	str	ip, [fp, #-52]	; 0xffffffcc
   11878:	blt	1191c <_start@@Base+0x19c8>
   1187c:	ldr	r1, [pc, #376]	; 119fc <_start@@Base+0x1aa8>
   11880:	ldr	r1, [r4, r1]
   11884:	ldr	r1, [r1, #4]
   11888:	add	r1, ip, r1
   1188c:	cmp	r7, r1
   11890:	bge	1191c <_start@@Base+0x19c8>
   11894:	ldr	r3, [pc, #344]	; 119f4 <_start@@Base+0x1aa0>
   11898:	mov	r9, r2
   1189c:	ldr	sl, [fp, #-56]	; 0xffffffc8
   118a0:	ldr	r3, [r4, r3]
   118a4:	ldrb	ip, [r3, #28]
   118a8:	cmp	ip, #0
   118ac:	bne	11760 <_start@@Base+0x180c>
   118b0:	rsb	r0, r8, r0
   118b4:	mov	r1, sl
   118b8:	bl	4e204 <formatAddress@@Base+0x258>
   118bc:	mla	r0, sl, r0, r8
   118c0:	str	r0, [r9, #8]
   118c4:	ldr	r3, [r9, #12]
   118c8:	cmp	r7, r3
   118cc:	strlt	r7, [r9, #12]
   118d0:	movlt	r0, #1
   118d4:	blt	117c8 <_start@@Base+0x1874>
   118d8:	ldr	r2, [pc, #284]	; 119fc <_start@@Base+0x1aa8>
   118dc:	ldr	r2, [r4, r2]
   118e0:	ldr	r2, [r2, #4]
   118e4:	add	r3, r3, r2
   118e8:	cmp	r7, r3
   118ec:	movlt	r0, #1
   118f0:	rsbge	r2, r2, #1
   118f4:	movge	r0, #1
   118f8:	addge	r7, r2, r7
   118fc:	strge	r7, [r9, #12]
   11900:	b	117c8 <_start@@Base+0x1874>
   11904:	rsb	r1, r1, r0
   11908:	bic	r1, r1, r1, asr #31
   1190c:	str	r1, [r9, #8]
   11910:	b	118c4 <_start@@Base+0x1970>
   11914:	ldr	r2, [pc, #212]	; 119f0 <_start@@Base+0x1a9c>
   11918:	ldr	sl, [r4, r2]
   1191c:	mov	r0, r3
   11920:	bl	11598 <_start@@Base+0x1644>
   11924:	ldr	r9, [r9]
   11928:	ldr	sl, [sl]
   1192c:	ldrsh	r0, [r5, #4]
   11930:	ldr	r8, [r9, #8]
   11934:	ldrsh	r7, [r5, #6]
   11938:	b	1174c <_start@@Base+0x17f8>
   1193c:	add	r8, r3, #1
   11940:	mov	r1, r7
   11944:	str	sp, [fp, #-48]	; 0xffffffd0
   11948:	mov	r0, #0
   1194c:	lsl	r7, r8, #3
   11950:	sxth	r2, r8
   11954:	add	ip, r7, #8
   11958:	mov	r3, #1
   1195c:	sub	sp, sp, ip
   11960:	add	r5, sp, #8
   11964:	str	r5, [sp]
   11968:	bl	39094 <readScreen@@Base>
   1196c:	cmp	r8, #0
   11970:	beq	119d0 <_start@@Base+0x1a7c>
   11974:	sub	r7, r7, #8
   11978:	mov	r4, #0
   1197c:	add	r7, r5, r7
   11980:	mov	sl, #1
   11984:	b	1198c <_start@@Base+0x1a38>
   11988:	mov	r8, r5
   1198c:	ldr	r0, [r7, r4]
   11990:	sub	r5, r8, #1
   11994:	bl	f44c <iswspace@plt>
   11998:	adds	r0, r0, #0
   1199c:	movne	r0, #1
   119a0:	cmp	r0, sl
   119a4:	beq	119b4 <_start@@Base+0x1a60>
   119a8:	cmp	sl, #0
   119ac:	beq	119d0 <_start@@Base+0x1a7c>
   119b0:	mov	sl, #0
   119b4:	cmp	r5, #0
   119b8:	sub	r4, r4, #8
   119bc:	bne	11988 <_start@@Base+0x1a34>
   119c0:	ldr	r3, [r9]
   119c4:	str	r5, [r3, #8]
   119c8:	ldr	sp, [fp, #-48]	; 0xffffffd0
   119cc:	b	117f8 <_start@@Base+0x18a4>
   119d0:	mov	r5, r8
   119d4:	b	119c0 <_start@@Base+0x1a6c>
   119d8:	bl	f950 <__stack_chk_fail@plt>
   119dc:			; <UNDEFINED> instruction: 0x000613b0
   119e0:			; <UNDEFINED> instruction: 0x000003b4
   119e4:	andeq	r0, r0, ip, lsl #9
   119e8:	andeq	r1, r6, r0, lsr sl
   119ec:			; <UNDEFINED> instruction: 0x000003b8
   119f0:	andeq	r0, r0, r0, asr #7
   119f4:	andeq	r0, r0, r0, asr #10
   119f8:	andeq	r1, r6, r0, asr #18
   119fc:	andeq	r0, r0, r8, asr #10
   11a00:	ldr	r3, [pc, #116]	; 11a7c <_start@@Base+0x1b28>
   11a04:	ldr	r1, [pc, #116]	; 11a80 <_start@@Base+0x1b2c>
   11a08:	add	r3, pc, r3
   11a0c:	ldr	r2, [pc, #112]	; 11a84 <_start@@Base+0x1b30>
   11a10:	ldr	r1, [r3, r1]
   11a14:	ldr	r2, [r3, r2]
   11a18:	ldr	r1, [r1]
   11a1c:	ldr	r2, [r2, #4]
   11a20:	ldr	r1, [r1, #4]
   11a24:	cmp	r1, r2
   11a28:	beq	11a74 <_start@@Base+0x1b20>
   11a2c:	ldr	r2, [pc, #84]	; 11a88 <_start@@Base+0x1b34>
   11a30:	ldr	r2, [r3, r2]
   11a34:	ldrb	r2, [r2, #15]
   11a38:	cmp	r2, #0
   11a3c:	bne	11a6c <_start@@Base+0x1b18>
   11a40:	ldr	r2, [pc, #68]	; 11a8c <_start@@Base+0x1b38>
   11a44:	ldr	r1, [pc, #68]	; 11a90 <_start@@Base+0x1b3c>
   11a48:	ldr	r2, [r3, r2]
   11a4c:	ldr	r3, [r3, r1]
   11a50:	ldr	r2, [r2]
   11a54:	ldr	r3, [r3, #4]
   11a58:	ldr	r0, [r2, #4]
   11a5c:	subs	r3, r0, r3
   11a60:	rsbs	r0, r3, #0
   11a64:	adcs	r0, r0, r3
   11a68:	bx	lr
   11a6c:	mov	r0, #1
   11a70:	bx	lr
   11a74:	mov	r0, #0
   11a78:	bx	lr
   11a7c:	andeq	r1, r6, r0, ror r0
   11a80:	andeq	r0, r0, ip, lsl r4
   11a84:	andeq	r0, r0, r8, lsl #10
   11a88:	andeq	r0, r0, r0, asr #10
   11a8c:	andeq	r0, r0, ip, ror r4
   11a90:	andeq	r0, r0, r0, lsr #10
   11a94:	ldr	r2, [r0]
   11a98:	ldr	r3, [pc, #92]	; 11afc <_start@@Base+0x1ba8>
   11a9c:	ldrb	r2, [r2]
   11aa0:	add	r3, pc, r3
   11aa4:	cmp	r2, #0
   11aa8:	bxeq	lr
   11aac:	ldr	r1, [pc, #76]	; 11b00 <_start@@Base+0x1bac>
   11ab0:	ldr	r2, [r0, #16]
   11ab4:	ldr	r3, [r3, r1]
   11ab8:	ldr	r3, [r3]
   11abc:	rsb	r3, r3, r2
   11ac0:	str	r3, [r0, #16]
   11ac4:	cmp	r3, #0
   11ac8:	bxgt	lr
   11acc:	ldr	r3, [r0, #12]
   11ad0:	rsbs	r3, r3, #1
   11ad4:	movcc	r3, #0
   11ad8:	cmp	r3, #0
   11adc:	str	r3, [r0, #12]
   11ae0:	ldrne	r3, [r0, #4]
   11ae4:	ldreq	r3, [r0, #8]
   11ae8:	ldrb	r3, [r3]
   11aec:	add	r3, r3, r3, lsl #2
   11af0:	lsl	r3, r3, #1
   11af4:	str	r3, [r0, #16]
   11af8:	bx	lr
   11afc:	ldrdeq	r0, [r6], -r8
   11b00:	strdeq	r0, [r0], -r8
   11b04:	ldr	ip, [pc, #384]	; 11c8c <_start@@Base+0x1d38>
   11b08:	push	{r4, r5, r6, lr}
   11b0c:	add	ip, pc, ip
   11b10:	ldr	r5, [pc, #376]	; 11c90 <_start@@Base+0x1d3c>
   11b14:	ldr	r3, [ip]
   11b18:	add	r5, pc, r5
   11b1c:	cmp	r3, #0
   11b20:	ldr	r3, [pc, #364]	; 11c94 <_start@@Base+0x1d40>
   11b24:	ldr	r3, [r5, r3]
   11b28:	ldr	r3, [r3]
   11b2c:	beq	11b44 <_start@@Base+0x1bf0>
   11b30:	ldr	r2, [r3, #12]
   11b34:	cmp	r1, r2
   11b38:	beq	11bd0 <_start@@Base+0x1c7c>
   11b3c:	mvn	r0, #0
   11b40:	pop	{r4, r5, r6, pc}
   11b44:	ldr	r2, [r3, #8]
   11b48:	cmp	r0, r2
   11b4c:	blt	11b3c <_start@@Base+0x1be8>
   11b50:	ldr	ip, [pc, #320]	; 11c98 <_start@@Base+0x1d44>
   11b54:	ldr	ip, [r5, ip]
   11b58:	ldr	ip, [ip]
   11b5c:	add	ip, r2, ip
   11b60:	cmp	r0, ip
   11b64:	bge	11b3c <_start@@Base+0x1be8>
   11b68:	ldr	r3, [r3, #12]
   11b6c:	cmp	r1, r3
   11b70:	blt	11b3c <_start@@Base+0x1be8>
   11b74:	ldr	ip, [pc, #288]	; 11c9c <_start@@Base+0x1d48>
   11b78:	ldr	ip, [r5, ip]
   11b7c:	ldr	r4, [ip, #4]
   11b80:	add	r4, r3, r4
   11b84:	cmp	r1, r4
   11b88:	bge	11b3c <_start@@Base+0x1be8>
   11b8c:	ldr	r4, [pc, #268]	; 11ca0 <_start@@Base+0x1d4c>
   11b90:	ldr	r4, [r5, r4]
   11b94:	ldrsh	r6, [r4, #2]
   11b98:	cmp	r0, r6
   11b9c:	bge	11b3c <_start@@Base+0x1be8>
   11ba0:	ldrsh	r4, [r4]
   11ba4:	cmp	r1, r4
   11ba8:	bge	11b3c <_start@@Base+0x1be8>
   11bac:	ldr	r4, [pc, #240]	; 11ca4 <_start@@Base+0x1d50>
   11bb0:	rsb	r1, r3, r1
   11bb4:	ldr	r3, [ip]
   11bb8:	ldr	ip, [r5, r4]
   11bbc:	ldr	ip, [ip]
   11bc0:	rsb	r2, r2, ip
   11bc4:	add	r2, r2, r0
   11bc8:	mla	r0, r3, r1, r2
   11bcc:	pop	{r4, r5, r6, pc}
   11bd0:	ldr	r3, [r3, #8]
   11bd4:	cmp	r0, r3
   11bd8:	blt	11b3c <_start@@Base+0x1be8>
   11bdc:	ldr	r2, [pc, #188]	; 11ca0 <_start@@Base+0x1d4c>
   11be0:	ldr	r2, [r5, r2]
   11be4:	ldrsh	r2, [r2, #2]
   11be8:	cmp	r0, r2
   11bec:	bge	11b3c <_start@@Base+0x1be8>
   11bf0:	ldr	r2, [ip, #4]
   11bf4:	rsb	r3, r3, r0
   11bf8:	cmp	r3, r2
   11bfc:	bge	11b3c <_start@@Base+0x1be8>
   11c00:	cmp	r3, #0
   11c04:	blt	11b3c <_start@@Base+0x1be8>
   11c08:	lsl	r1, r3, #2
   11c0c:	add	r2, ip, r1
   11c10:	ldr	r4, [r2, #8]
   11c14:	cmn	r4, #1
   11c18:	addeq	r2, ip, #8
   11c1c:	addeq	r2, r2, r1
   11c20:	beq	11c34 <_start@@Base+0x1ce0>
   11c24:	b	11c44 <_start@@Base+0x1cf0>
   11c28:	ldr	r4, [r2, #-4]!
   11c2c:	cmn	r4, #1
   11c30:	bne	11c44 <_start@@Base+0x1cf0>
   11c34:	subs	r3, r3, #1
   11c38:	bcs	11c28 <_start@@Base+0x1cd4>
   11c3c:	mov	r0, r3
   11c40:	pop	{r4, r5, r6, pc}
   11c44:	ldr	r3, [pc, #76]	; 11c98 <_start@@Base+0x1d44>
   11c48:	mov	r0, r4
   11c4c:	ldr	r3, [r5, r3]
   11c50:	ldr	r6, [r3]
   11c54:	mov	r1, r6
   11c58:	bl	4e3f0 <formatAddress@@Base+0x444>
   11c5c:	ldr	r3, [pc, #64]	; 11ca4 <_start@@Base+0x1d50>
   11c60:	mov	r0, r4
   11c64:	ldr	r3, [r5, r3]
   11c68:	ldr	r4, [r3]
   11c6c:	add	r4, r1, r4
   11c70:	mov	r1, r6
   11c74:	bl	4e204 <formatAddress@@Base+0x258>
   11c78:	ldr	r3, [pc, #28]	; 11c9c <_start@@Base+0x1d48>
   11c7c:	ldr	r3, [r5, r3]
   11c80:	ldr	r3, [r3]
   11c84:	mla	r0, r3, r0, r4
   11c88:	pop	{r4, r5, r6, pc}
   11c8c:	andeq	r1, r6, r8, lsr r6
   11c90:	andeq	r0, r6, r0, ror #30
   11c94:			; <UNDEFINED> instruction: 0x000003b8
   11c98:	andeq	r0, r0, r0, asr #7
   11c9c:	andeq	r0, r0, r8, asr #10
   11ca0:	andeq	r0, r0, ip, lsl #9
   11ca4:	andeq	r0, r0, r0, ror r4
   11ca8:	ldr	r3, [pc, #128]	; 11d30 <_start@@Base+0x1ddc>
   11cac:	mov	r2, #140	; 0x8c
   11cb0:	ldr	ip, [pc, #124]	; 11d34 <_start@@Base+0x1de0>
   11cb4:	add	r3, pc, r3
   11cb8:	push	{r4, r5, r6, r7, lr}
   11cbc:	sub	sp, sp, #148	; 0x94
   11cc0:	ldr	r4, [r3, ip]
   11cc4:	mov	r7, r0
   11cc8:	mov	r6, r1
   11ccc:	mov	r0, sp
   11cd0:	mov	r1, #0
   11cd4:	ldr	r3, [r4]
   11cd8:	str	r3, [sp, #140]	; 0x8c
   11cdc:	bl	f6b0 <memset@plt>
   11ce0:	add	r0, sp, #4
   11ce4:	bl	fd28 <sigemptyset@plt>
   11ce8:	mov	r0, r7
   11cec:	mov	r1, sp
   11cf0:	mov	r2, #0
   11cf4:	str	r6, [sp]
   11cf8:	bl	faa0 <sigaction@plt>
   11cfc:	cmn	r0, #1
   11d00:	beq	11d1c <_start@@Base+0x1dc8>
   11d04:	ldr	r2, [sp, #140]	; 0x8c
   11d08:	ldr	r3, [r4]
   11d0c:	cmp	r2, r3
   11d10:	bne	11d2c <_start@@Base+0x1dd8>
   11d14:	add	sp, sp, #148	; 0x94
   11d18:	pop	{r4, r5, r6, r7, pc}
   11d1c:	ldr	r0, [pc, #20]	; 11d38 <_start@@Base+0x1de4>
   11d20:	add	r0, pc, r0
   11d24:	bl	1c6fc <logSystemError@@Base>
   11d28:	b	11d04 <_start@@Base+0x1db0>
   11d2c:	bl	f950 <__stack_chk_fail@plt>
   11d30:	andeq	r0, r6, r4, asr #27
   11d34:			; <UNDEFINED> instruction: 0x000003b4
   11d38:	andeq	ip, r3, r0, ror sl
   11d3c:	ldr	r3, [pc, #168]	; 11dec <_start@@Base+0x1e98>
   11d40:	ldr	r2, [pc, #168]	; 11df0 <_start@@Base+0x1e9c>
   11d44:	add	r3, pc, r3
   11d48:	push	{r4, r5, r6, lr}
   11d4c:	mov	r4, r0
   11d50:	ldr	r2, [r3, r2]
   11d54:	ldrb	r2, [r2, #26]
   11d58:	cmp	r2, #1
   11d5c:	beq	11d90 <_start@@Base+0x1e3c>
   11d60:	ldr	r2, [pc, #140]	; 11df4 <_start@@Base+0x1ea0>
   11d64:	mov	r0, r4
   11d68:	ldr	r1, [pc, #136]	; 11df8 <_start@@Base+0x1ea4>
   11d6c:	ldr	r2, [r3, r2]
   11d70:	ldr	r3, [r3, r1]
   11d74:	ldr	r4, [r2]
   11d78:	ldr	r5, [r3]
   11d7c:	mov	r1, r4
   11d80:	bl	4e204 <formatAddress@@Base+0x258>
   11d84:	mul	r0, r4, r0
   11d88:	str	r0, [r5, #8]
   11d8c:	pop	{r4, r5, r6, pc}
   11d90:	ldr	r2, [pc, #100]	; 11dfc <_start@@Base+0x1ea8>
   11d94:	ldr	r2, [r3, r2]
   11d98:	ldr	r2, [r2]
   11d9c:	cmp	r2, #0
   11da0:	beq	11d60 <_start@@Base+0x1e0c>
   11da4:	ldr	r1, [pc, #76]	; 11df8 <_start@@Base+0x1ea4>
   11da8:	mov	r0, #0
   11dac:	ldr	r2, [pc, #64]	; 11df4 <_start@@Base+0x1ea0>
   11db0:	ldr	r5, [r3, r1]
   11db4:	ldr	r1, [r5]
   11db8:	str	r0, [r1, #8]
   11dbc:	ldr	r6, [r3, r2]
   11dc0:	ldr	r0, [r6]
   11dc4:	bl	10f84 <_start@@Base+0x1030>
   11dc8:	ldr	r1, [r5]
   11dcc:	ldr	r2, [r1, #8]
   11dd0:	add	r0, r0, r2
   11dd4:	cmp	r4, r0
   11dd8:	poplt	{r4, r5, r6, pc}
   11ddc:	cmp	r2, r0
   11de0:	popeq	{r4, r5, r6, pc}
   11de4:	str	r0, [r1, #8]
   11de8:	b	11dc0 <_start@@Base+0x1e6c>
   11dec:	andeq	r0, r6, r4, lsr sp
   11df0:	andeq	r0, r0, r0, asr #10
   11df4:	andeq	r0, r0, r0, asr #7
   11df8:			; <UNDEFINED> instruction: 0x000003b8
   11dfc:	ldrdeq	r0, [r0], -r4
   11e00:	ldr	r3, [pc, #260]	; 11f0c <_start@@Base+0x1fb8>
   11e04:	ldr	r2, [pc, #260]	; 11f10 <_start@@Base+0x1fbc>
   11e08:	add	r3, pc, r3
   11e0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e10:	mov	r8, r0
   11e14:	ldr	r2, [r3, r2]
   11e18:	ldrb	r2, [r2, #26]
   11e1c:	cmp	r2, #1
   11e20:	beq	11e4c <_start@@Base+0x1ef8>
   11e24:	ldr	r2, [pc, #232]	; 11f14 <_start@@Base+0x1fc0>
   11e28:	ldr	r3, [r3, r2]
   11e2c:	ldr	r2, [r3]
   11e30:	ldr	r3, [r2, #8]
   11e34:	cmp	r3, #0
   11e38:	ble	11e44 <_start@@Base+0x1ef0>
   11e3c:	cmp	r8, #0
   11e40:	bne	11edc <_start@@Base+0x1f88>
   11e44:	mov	r0, #0
   11e48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e4c:	ldr	r2, [pc, #196]	; 11f18 <_start@@Base+0x1fc4>
   11e50:	ldr	r2, [r3, r2]
   11e54:	ldr	r2, [r2]
   11e58:	cmp	r2, #0
   11e5c:	beq	11e24 <_start@@Base+0x1ed0>
   11e60:	ldr	r2, [pc, #172]	; 11f14 <_start@@Base+0x1fc0>
   11e64:	ldr	r7, [r3, r2]
   11e68:	ldr	r3, [r7]
   11e6c:	ldr	r9, [r3, #8]
   11e70:	subs	sl, r9, #1
   11e74:	bmi	11f04 <_start@@Base+0x1fb0>
   11e78:	mov	r6, sl
   11e7c:	mov	r5, #0
   11e80:	b	11e88 <_start@@Base+0x1f34>
   11e84:	ldr	r3, [r7]
   11e88:	add	r4, r5, r6
   11e8c:	mov	r0, r8
   11e90:	add	r4, r4, r4, lsr #31
   11e94:	asr	r4, r4, #1
   11e98:	str	r4, [r3, #8]
   11e9c:	bl	10f84 <_start@@Base+0x1030>
   11ea0:	ldr	r3, [r7]
   11ea4:	add	r0, r4, r0
   11ea8:	cmp	r9, r0
   11eac:	ldrgt	r5, [r3, #8]
   11eb0:	ldrle	r6, [r3, #8]
   11eb4:	addgt	r5, r5, #1
   11eb8:	suble	r6, r6, #1
   11ebc:	cmp	r6, r5
   11ec0:	bge	11e84 <_start@@Base+0x1f30>
   11ec4:	cmp	r9, r5
   11ec8:	beq	11ef4 <_start@@Base+0x1fa0>
   11ecc:	ldr	r3, [r7]
   11ed0:	mov	r0, #1
   11ed4:	str	r5, [r3, #8]
   11ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11edc:	cmp	r8, r3
   11ee0:	movcs	r8, r3
   11ee4:	mov	r0, #1
   11ee8:	rsb	r3, r8, r3
   11eec:	str	r3, [r2, #8]
   11ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ef4:	cmp	r5, #0
   11ef8:	beq	11e44 <_start@@Base+0x1ef0>
   11efc:	mov	r5, sl
   11f00:	b	11ecc <_start@@Base+0x1f78>
   11f04:	mov	r5, #0
   11f08:	b	11ec4 <_start@@Base+0x1f70>
   11f0c:	andeq	r0, r6, r0, ror ip
   11f10:	andeq	r0, r0, r0, asr #10
   11f14:			; <UNDEFINED> instruction: 0x000003b8
   11f18:	ldrdeq	r0, [r0], -r4
   11f1c:	ldr	r3, [pc, #72]	; 11f6c <_start@@Base+0x2018>
   11f20:	ldr	r2, [pc, #72]	; 11f70 <_start@@Base+0x201c>
   11f24:	add	r3, pc, r3
   11f28:	ldr	r2, [r3, r2]
   11f2c:	ldrb	r2, [r2, #26]
   11f30:	cmp	r2, #1
   11f34:	beq	11f48 <_start@@Base+0x1ff4>
   11f38:	ldr	r2, [pc, #52]	; 11f74 <_start@@Base+0x2020>
   11f3c:	ldr	r3, [r3, r2]
   11f40:	ldr	r0, [r3]
   11f44:	bx	lr
   11f48:	ldr	r2, [pc, #40]	; 11f78 <_start@@Base+0x2024>
   11f4c:	ldr	r2, [r3, r2]
   11f50:	ldr	r2, [r2]
   11f54:	cmp	r2, #0
   11f58:	beq	11f38 <_start@@Base+0x1fe4>
   11f5c:	ldr	r2, [pc, #16]	; 11f74 <_start@@Base+0x2020>
   11f60:	ldr	r3, [r3, r2]
   11f64:	ldr	r0, [r3]
   11f68:	b	10f84 <_start@@Base+0x1030>
   11f6c:	andeq	r0, r6, r4, asr fp
   11f70:	andeq	r0, r0, r0, asr #10
   11f74:	andeq	r0, r0, r0, asr #7
   11f78:	ldrdeq	r0, [r0], -r4
   11f7c:	push	{r3, r4, r5, lr}
   11f80:	mov	r4, r0
   11f84:	bl	f44c <iswspace@plt>
   11f88:	subs	r5, r0, #0
   11f8c:	beq	11f98 <_start@@Base+0x2044>
   11f90:	mov	r0, #2
   11f94:	pop	{r3, r4, r5, pc}
   11f98:	mov	r0, r4
   11f9c:	bl	f98c <iswalnum@plt>
   11fa0:	cmp	r0, #0
   11fa4:	bne	11fc4 <_start@@Base+0x2070>
   11fa8:	ldr	r0, [pc, #28]	; 11fcc <_start@@Base+0x2078>
   11fac:	mov	r1, r4
   11fb0:	add	r0, pc, r0
   11fb4:	bl	f704 <wcschr@plt>
   11fb8:	rsbs	r0, r0, #1
   11fbc:	movcc	r0, #0
   11fc0:	pop	{r3, r4, r5, pc}
   11fc4:	mov	r0, r5
   11fc8:	pop	{r3, r4, r5, pc}
   11fcc:	andeq	ip, r3, r4, asr #15
   11fd0:	push	{r4, r5, r6, lr}
   11fd4:	subs	r6, r1, #0
   11fd8:	mov	r5, r0
   11fdc:	ble	1200c <_start@@Base+0x20b8>
   11fe0:	mov	r4, #0
   11fe4:	b	11ff4 <_start@@Base+0x20a0>
   11fe8:	add	r4, r4, #1
   11fec:	cmp	r4, r6
   11ff0:	beq	1200c <_start@@Base+0x20b8>
   11ff4:	ldr	r0, [r5, r4, lsl #3]
   11ff8:	bl	11f7c <_start@@Base+0x2028>
   11ffc:	cmp	r0, #2
   12000:	beq	11fe8 <_start@@Base+0x2094>
   12004:	mov	r0, r4
   12008:	pop	{r4, r5, r6, pc}
   1200c:	mvn	r0, #0
   12010:	pop	{r4, r5, r6, pc}
   12014:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12018:	add	fp, sp, #32
   1201c:	ldr	r4, [pc, #828]	; 12360 <_start@@Base+0x240c>
   12020:	sub	sp, sp, #1024	; 0x400
   12024:	sub	sp, sp, #12
   12028:	ldr	r3, [pc, #820]	; 12364 <_start@@Base+0x2410>
   1202c:	add	r4, pc, r4
   12030:	mov	r7, r2
   12034:	mov	r5, r0
   12038:	ldr	r6, [r4, r3]
   1203c:	mov	r8, r1
   12040:	ldr	r3, [r6]
   12044:	str	r3, [fp, #-40]	; 0xffffffd8
   12048:	bl	11fd0 <_start@@Base+0x207c>
   1204c:	cmp	r0, #0
   12050:	blt	120f0 <_start@@Base+0x219c>
   12054:	cmp	r8, #1
   12058:	beq	1214c <_start@@Base+0x21f8>
   1205c:	cmp	r7, #0
   12060:	beq	120c8 <_start@@Base+0x2174>
   12064:	lsl	r0, r8, #3
   12068:	mov	r7, sp
   1206c:	add	r3, r0, #8
   12070:	cmp	r8, #0
   12074:	sub	sp, sp, r3
   12078:	mov	r4, sp
   1207c:	beq	12348 <_start@@Base+0x23f4>
   12080:	mov	ip, sp
   12084:	mov	r3, #0
   12088:	mov	r2, #32
   1208c:	ldr	lr, [r5, r3]
   12090:	add	ip, ip, #8
   12094:	str	lr, [r4, r3]
   12098:	add	r3, r3, #8
   1209c:	cmp	r3, r0
   120a0:	str	r2, [ip, #-4]
   120a4:	bne	1208c <_start@@Base+0x2138>
   120a8:	lsl	r2, r8, #1
   120ac:	mov	r1, #0
   120b0:	mov	r0, r4
   120b4:	str	r1, [r4, r2, lsl #2]
   120b8:	mov	r3, #1
   120bc:	bl	1126c <_start@@Base+0x1318>
   120c0:	mov	sp, r7
   120c4:	b	120d8 <_start@@Base+0x2184>
   120c8:	mov	r0, r5
   120cc:	mov	r1, r8
   120d0:	mov	r2, #1
   120d4:	bl	11330 <_start@@Base+0x13dc>
   120d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   120dc:	ldr	r3, [r6]
   120e0:	cmp	r2, r3
   120e4:	bne	1235c <_start@@Base+0x2408>
   120e8:	sub	sp, fp, #32
   120ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120f0:	ldr	r3, [pc, #624]	; 12368 <_start@@Base+0x2414>
   120f4:	ldr	r3, [r4, r3]
   120f8:	ldrb	r5, [r3, #60]	; 0x3c
   120fc:	cmp	r5, #1
   12100:	bne	12234 <_start@@Base+0x22e0>
   12104:	ldr	r1, [pc, #608]	; 1236c <_start@@Base+0x2418>
   12108:	mov	r2, #5
   1210c:	mov	r0, #0
   12110:	sub	r4, fp, #1056	; 0x420
   12114:	add	r1, pc, r1
   12118:	sub	r4, r4, #4
   1211c:	bl	f9bc <dcgettext@plt>
   12120:	sub	r4, r4, #4
   12124:	mov	r2, #256	; 0x100
   12128:	mov	r1, r0
   1212c:	mov	r0, r4
   12130:	bl	f560 <mbstowcs@plt>
   12134:	mov	r3, r5
   12138:	mov	r1, #0
   1213c:	mov	r2, r0
   12140:	mov	r0, r4
   12144:	bl	1126c <_start@@Base+0x1318>
   12148:	b	120d8 <_start@@Base+0x2184>
   1214c:	ldr	r3, [r5]
   12150:	mov	r0, r3
   12154:	str	r3, [fp, #-1068]	; 0xfffffbd4
   12158:	bl	f4ac <iswupper@plt>
   1215c:	cmp	r0, #0
   12160:	bne	12254 <_start@@Base+0x2300>
   12164:	ldr	r3, [pc, #516]	; 12370 <_start@@Base+0x241c>
   12168:	mov	r8, r0
   1216c:	mov	r7, r0
   12170:	ldr	r5, [r4, r3]
   12174:	ldr	r3, [r5]
   12178:	ldr	r3, [r3, #72]	; 0x48
   1217c:	cmp	r3, #0
   12180:	beq	122bc <_start@@Base+0x2368>
   12184:	ldr	r2, [pc, #476]	; 12368 <_start@@Base+0x2414>
   12188:	ldr	r2, [r4, r2]
   1218c:	ldrb	r2, [r2, #43]	; 0x2b
   12190:	cmp	r2, #2
   12194:	beq	122bc <_start@@Base+0x2368>
   12198:	ldr	r2, [pc, #468]	; 12374 <_start@@Base+0x2420>
   1219c:	mov	r1, #2
   121a0:	mov	r9, #1
   121a4:	ldr	r0, [r4, r2]
   121a8:	blx	r3
   121ac:	cmp	r7, #0
   121b0:	beq	12328 <_start@@Base+0x23d4>
   121b4:	mov	r1, r7
   121b8:	sub	r7, fp, #1056	; 0x420
   121bc:	sub	r7, r7, #4
   121c0:	mov	r2, #256	; 0x100
   121c4:	sub	r7, r7, #4
   121c8:	mov	r0, r7
   121cc:	bl	f560 <mbstowcs@plt>
   121d0:	sub	r3, fp, #36	; 0x24
   121d4:	ldr	lr, [fp, #-1068]	; 0xfffffbd4
   121d8:	mov	r1, #0
   121dc:	add	sl, r3, r0, lsl #2
   121e0:	mov	r2, r0
   121e4:	mov	r3, #1
   121e8:	mov	r0, r7
   121ec:	add	r2, r2, #2
   121f0:	mov	r7, #32
   121f4:	str	lr, [sl, #-1024]	; 0xfffffc00
   121f8:	str	r7, [sl, #-1028]	; 0xfffffbfc
   121fc:	bl	1126c <_start@@Base+0x1318>
   12200:	cmp	r9, #0
   12204:	bne	122c4 <_start@@Base+0x2370>
   12208:	cmp	r8, #0
   1220c:	beq	120d8 <_start@@Base+0x2184>
   12210:	ldr	r2, [pc, #336]	; 12368 <_start@@Base+0x2414>
   12214:	ldr	r1, [pc, #344]	; 12374 <_start@@Base+0x2420>
   12218:	ldr	r3, [r5]
   1221c:	ldr	r2, [r4, r2]
   12220:	ldr	r0, [r4, r1]
   12224:	ldr	r3, [r3, #68]	; 0x44
   12228:	ldrb	r1, [r2, #44]	; 0x2c
   1222c:	blx	r3
   12230:	b	120d8 <_start@@Base+0x2184>
   12234:	ldr	r3, [pc, #308]	; 12370 <_start@@Base+0x241c>
   12238:	ldr	r2, [pc, #308]	; 12374 <_start@@Base+0x2420>
   1223c:	ldr	r3, [r4, r3]
   12240:	ldr	r0, [r4, r2]
   12244:	ldr	r3, [r3]
   12248:	ldr	r3, [r3, #44]	; 0x2c
   1224c:	blx	r3
   12250:	b	120d8 <_start@@Base+0x2184>
   12254:	ldr	r3, [pc, #268]	; 12368 <_start@@Base+0x2414>
   12258:	ldr	r2, [r4, r3]
   1225c:	ldrb	r3, [r2, #59]	; 0x3b
   12260:	cmp	r3, #1
   12264:	beq	122fc <_start@@Base+0x23a8>
   12268:	cmp	r3, #2
   1226c:	ldr	r3, [pc, #252]	; 12370 <_start@@Base+0x241c>
   12270:	bne	122e8 <_start@@Base+0x2394>
   12274:	ldr	r5, [r4, r3]
   12278:	ldr	r3, [r5]
   1227c:	ldr	ip, [r3, #68]	; 0x44
   12280:	cmp	ip, #0
   12284:	beq	12350 <_start@@Base+0x23fc>
   12288:	ldrb	r2, [r2, #44]	; 0x2c
   1228c:	add	r1, r2, #7
   12290:	uxtb	r1, r1
   12294:	cmp	r1, #20
   12298:	movcs	r1, #20
   1229c:	cmp	r2, r1
   122a0:	beq	12350 <_start@@Base+0x23fc>
   122a4:	ldr	r3, [pc, #200]	; 12374 <_start@@Base+0x2420>
   122a8:	mov	r7, #0
   122ac:	ldr	r0, [r4, r3]
   122b0:	blx	ip
   122b4:	ldr	r3, [r5]
   122b8:	b	12178 <_start@@Base+0x2224>
   122bc:	mov	r9, #0
   122c0:	b	121ac <_start@@Base+0x2258>
   122c4:	ldr	r2, [pc, #156]	; 12368 <_start@@Base+0x2414>
   122c8:	ldr	r1, [pc, #164]	; 12374 <_start@@Base+0x2420>
   122cc:	ldr	r3, [r5]
   122d0:	ldr	r2, [r4, r2]
   122d4:	ldr	r0, [r4, r1]
   122d8:	ldr	r3, [r3, #72]	; 0x48
   122dc:	ldrb	r1, [r2, #43]	; 0x2b
   122e0:	blx	r3
   122e4:	b	12208 <_start@@Base+0x22b4>
   122e8:	ldr	r5, [r4, r3]
   122ec:	mov	r8, #0
   122f0:	mov	r7, r8
   122f4:	ldr	r3, [r5]
   122f8:	b	12178 <_start@@Base+0x2224>
   122fc:	ldr	r1, [pc, #116]	; 12378 <_start@@Base+0x2424>
   12300:	mov	r0, #0
   12304:	mov	r2, #5
   12308:	mov	r8, r0
   1230c:	add	r1, pc, r1
   12310:	bl	f9bc <dcgettext@plt>
   12314:	ldr	r3, [pc, #84]	; 12370 <_start@@Base+0x241c>
   12318:	ldr	r5, [r4, r3]
   1231c:	ldr	r3, [r5]
   12320:	mov	r7, r0
   12324:	b	12178 <_start@@Base+0x2224>
   12328:	sub	r0, fp, #1056	; 0x420
   1232c:	mov	r2, #1
   12330:	sub	r0, r0, #4
   12334:	mov	r1, r7
   12338:	sub	r0, r0, #8
   1233c:	mov	r3, r2
   12340:	bl	1126c <_start@@Base+0x1318>
   12344:	b	12200 <_start@@Base+0x22ac>
   12348:	mov	r2, r8
   1234c:	b	120ac <_start@@Base+0x2158>
   12350:	mov	r8, #0
   12354:	mov	r7, r8
   12358:	b	12178 <_start@@Base+0x2224>
   1235c:	bl	f950 <__stack_chk_fail@plt>
   12360:	andeq	r0, r6, ip, asr #20
   12364:			; <UNDEFINED> instruction: 0x000003b4
   12368:	andeq	r0, r0, r0, asr #10
   1236c:	andeq	ip, r3, r8, lsl #13
   12370:	andeq	r0, r0, ip, lsl r4
   12374:	andeq	r0, r0, r4, ror #9
   12378:	muleq	r3, r8, r4
   1237c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12380:	mov	r5, r2
   12384:	ldr	r4, [pc, #216]	; 12464 <_start@@Base+0x2510>
   12388:	add	fp, sp, #28
   1238c:	ldr	r2, [pc, #212]	; 12468 <_start@@Base+0x2514>
   12390:	sub	sp, sp, #16
   12394:	add	r4, pc, r4
   12398:	lsl	ip, r5, #3
   1239c:	mov	r9, r3
   123a0:	ldr	r7, [r4, r2]
   123a4:	add	ip, ip, #8
   123a8:	cmp	r0, #0
   123ac:	sub	sp, sp, ip
   123b0:	add	r8, sp, #8
   123b4:	ldr	r3, [r7]
   123b8:	str	r3, [fp, #-32]	; 0xffffffe0
   123bc:	beq	12438 <_start@@Base+0x24e4>
   123c0:	ldr	r3, [pc, #164]	; 1246c <_start@@Base+0x2518>
   123c4:	add	r8, r0, r1, lsl #3
   123c8:	ldr	r6, [r4, r3]
   123cc:	mov	r1, r5
   123d0:	mov	r2, r9
   123d4:	mov	r0, r8
   123d8:	bl	12014 <_start@@Base+0x20c0>
   123dc:	ldr	r3, [r6]
   123e0:	ldr	r0, [r3, #40]	; 0x28
   123e4:	bl	11598 <_start@@Base+0x1644>
   123e8:	ldr	r3, [r6]
   123ec:	ldr	r2, [r3, #44]	; 0x2c
   123f0:	ldr	r1, [r3, #12]
   123f4:	cmp	r2, r1
   123f8:	blt	1241c <_start@@Base+0x24c8>
   123fc:	ldr	r0, [pc, #108]	; 12470 <_start@@Base+0x251c>
   12400:	ldr	r0, [r4, r0]
   12404:	ldr	r0, [r0, #4]
   12408:	add	r1, r1, r0
   1240c:	cmp	r2, r1
   12410:	blt	12420 <_start@@Base+0x24cc>
   12414:	rsb	r2, r0, r2
   12418:	add	r2, r2, #1
   1241c:	str	r2, [r3, #12]
   12420:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12424:	ldr	r3, [r7]
   12428:	cmp	r2, r3
   1242c:	bne	12460 <_start@@Base+0x250c>
   12430:	sub	sp, fp, #28
   12434:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12438:	ldr	ip, [pc, #44]	; 1246c <_start@@Base+0x2518>
   1243c:	sxth	r0, r1
   12440:	sxth	r2, r5
   12444:	mov	r3, #1
   12448:	ldr	r6, [r4, ip]
   1244c:	ldr	r1, [r6]
   12450:	ldrsh	r1, [r1, #44]	; 0x2c
   12454:	str	r8, [sp]
   12458:	bl	39094 <readScreen@@Base>
   1245c:	b	123cc <_start@@Base+0x2478>
   12460:	bl	f950 <__stack_chk_fail@plt>
   12464:	andeq	r0, r6, r4, ror #13
   12468:			; <UNDEFINED> instruction: 0x000003b4
   1246c:			; <UNDEFINED> instruction: 0x000003b8
   12470:	andeq	r0, r0, r8, asr #10
   12474:	ldr	r1, [pc, #32]	; 1249c <_start@@Base+0x2548>
   12478:	mov	r0, #0
   1247c:	ldr	ip, [pc, #28]	; 124a0 <_start@@Base+0x254c>
   12480:	mov	r3, r0
   12484:	add	r1, pc, r1
   12488:	mov	r2, #1
   1248c:	ldr	r1, [r1, ip]
   12490:	ldr	r1, [r1]
   12494:	ldr	r1, [r1, #40]	; 0x28
   12498:	b	1237c <_start@@Base+0x2428>
   1249c:	strdeq	r0, [r6], -r4
   124a0:			; <UNDEFINED> instruction: 0x000003b8
   124a4:	ldr	ip, [pc, #416]	; 1264c <_start@@Base+0x26f8>
   124a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   124ac:	add	ip, pc, ip
   124b0:	ldr	lr, [pc, #408]	; 12650 <_start@@Base+0x26fc>
   124b4:	sub	sp, sp, #108	; 0x6c
   124b8:	mov	r4, r0
   124bc:	sxth	r0, r1
   124c0:	sxth	r1, r2
   124c4:	mov	r2, #1
   124c8:	ldr	r6, [ip, lr]
   124cc:	add	ip, sp, #28
   124d0:	str	ip, [sp]
   124d4:	mov	r3, r2
   124d8:	ldr	r7, [pc, #372]	; 12654 <_start@@Base+0x2700>
   124dc:	add	r8, r4, #80	; 0x50
   124e0:	ldr	ip, [r6]
   124e4:	add	r7, pc, r7
   124e8:	str	ip, [sp, #100]	; 0x64
   124ec:	bl	39094 <readScreen@@Base>
   124f0:	ldrb	r3, [sp, #32]
   124f4:	mov	r2, #5
   124f8:	mov	r0, #0
   124fc:	ldr	r5, [sp, #28]
   12500:	and	r3, r3, #15
   12504:	ldr	r1, [r7, r3, lsl #2]
   12508:	bl	f9bc <dcgettext@plt>
   1250c:	ldrb	r3, [sp, #32]
   12510:	mov	r2, #5
   12514:	ubfx	r3, r3, #4, #3
   12518:	ldr	r1, [r7, r3, lsl #2]
   1251c:	mov	r9, r0
   12520:	mov	r0, #0
   12524:	bl	f9bc <dcgettext@plt>
   12528:	ldr	ip, [pc, #296]	; 12658 <_start@@Base+0x2704>
   1252c:	str	r5, [sp, #4]
   12530:	mvn	r3, #0
   12534:	add	ip, pc, ip
   12538:	str	r5, [sp, #8]
   1253c:	mov	r1, #80	; 0x50
   12540:	mov	r2, #1
   12544:	str	r9, [sp, #12]
   12548:	str	ip, [sp]
   1254c:	str	r0, [sp, #16]
   12550:	mov	r0, r4
   12554:	bl	fb60 <__snprintf_chk@plt>
   12558:	ldrsb	r3, [sp, #32]
   1255c:	add	r0, r4, r0
   12560:	cmp	r0, r8
   12564:	movcc	r5, r0
   12568:	movcs	r5, r8
   1256c:	cmp	r3, #0
   12570:	blt	125fc <_start@@Base+0x26a8>
   12574:	add	r7, sp, #36	; 0x24
   12578:	add	r3, sp, #24
   1257c:	ldr	r0, [sp, #28]
   12580:	mov	r1, #2
   12584:	str	r3, [sp]
   12588:	mov	r2, r7
   1258c:	mov	r3, #64	; 0x40
   12590:	mov	ip, #0
   12594:	str	ip, [sp, #24]
   12598:	bl	f998 <u_charName_50@plt>
   1259c:	ldr	r3, [sp, #24]
   125a0:	cmp	r3, #0
   125a4:	ble	125c4 <_start@@Base+0x2670>
   125a8:	ldr	r2, [sp, #100]	; 0x64
   125ac:	rsb	r0, r4, r5
   125b0:	ldr	r3, [r6]
   125b4:	cmp	r2, r3
   125b8:	bne	12648 <_start@@Base+0x26f4>
   125bc:	add	sp, sp, #108	; 0x6c
   125c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   125c4:	ldr	ip, [pc, #144]	; 1265c <_start@@Base+0x2708>
   125c8:	mov	r0, r5
   125cc:	rsb	r1, r5, r8
   125d0:	str	r7, [sp, #4]
   125d4:	add	ip, pc, ip
   125d8:	mov	r2, #1
   125dc:	mvn	r3, #0
   125e0:	str	ip, [sp]
   125e4:	bl	fb60 <__snprintf_chk@plt>
   125e8:	add	r0, r5, r0
   125ec:	cmp	r0, r8
   125f0:	movcc	r5, r0
   125f4:	movcs	r5, r8
   125f8:	b	125a8 <_start@@Base+0x2654>
   125fc:	ldr	r1, [pc, #92]	; 12660 <_start@@Base+0x270c>
   12600:	mov	r2, #5
   12604:	mov	r0, #0
   12608:	add	r1, pc, r1
   1260c:	bl	f9bc <dcgettext@plt>
   12610:	ldr	ip, [pc, #76]	; 12664 <_start@@Base+0x2710>
   12614:	rsb	r1, r5, r8
   12618:	mov	r2, #1
   1261c:	add	ip, pc, ip
   12620:	mvn	r3, #0
   12624:	str	ip, [sp]
   12628:	str	r0, [sp, #4]
   1262c:	mov	r0, r5
   12630:	bl	fb60 <__snprintf_chk@plt>
   12634:	add	r0, r5, r0
   12638:	cmp	r0, r8
   1263c:	movcc	r5, r0
   12640:	movcs	r5, r8
   12644:	b	12574 <_start@@Base+0x2620>
   12648:	bl	f950 <__stack_chk_fail@plt>
   1264c:	andeq	r0, r6, ip, asr #11
   12650:			; <UNDEFINED> instruction: 0x000003b4
   12654:	muleq	r5, ip, r0
   12658:	andeq	ip, r3, r4, ror r2
   1265c:	strdeq	ip, [r3], -r8
   12660:			; <UNDEFINED> instruction: 0x0003c1bc
   12664:	ldrdeq	ip, [r3], -r4
   12668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1266c:	add	fp, sp, #32
   12670:	mul	r7, r2, r1
   12674:	ldr	r4, [pc, #164]	; 12720 <_start@@Base+0x27cc>
   12678:	ldr	lr, [pc, #164]	; 12724 <_start@@Base+0x27d0>
   1267c:	sub	sp, sp, #20
   12680:	add	r4, pc, r4
   12684:	mov	ip, r2
   12688:	mov	sl, r3
   1268c:	ldr	r5, [r4, lr]
   12690:	sxth	r3, ip
   12694:	lsl	ip, r7, #3
   12698:	ldr	r9, [fp, #4]
   1269c:	add	ip, ip, #8
   126a0:	sxth	r2, r1
   126a4:	sub	sp, sp, ip
   126a8:	ldr	ip, [r5]
   126ac:	sxth	r1, r0
   126b0:	mov	r6, r0
   126b4:	add	r8, sp, #8
   126b8:	mov	r0, #0
   126bc:	str	r8, [sp]
   126c0:	str	ip, [fp, #-40]	; 0xffffffd8
   126c4:	bl	39094 <readScreen@@Base>
   126c8:	rsbs	r2, r9, #1
   126cc:	mov	r0, r8
   126d0:	mov	r1, r7
   126d4:	movcc	r2, #0
   126d8:	bl	11330 <_start@@Base+0x13dc>
   126dc:	ldr	r3, [pc, #68]	; 12728 <_start@@Base+0x27d4>
   126e0:	ldr	r2, [pc, #68]	; 1272c <_start@@Base+0x27d8>
   126e4:	add	r3, pc, r3
   126e8:	ldr	ip, [fp, #-40]	; 0xffffffd8
   126ec:	ldr	r1, [pc, #60]	; 12730 <_start@@Base+0x27dc>
   126f0:	str	sl, [r3, #1048]	; 0x418
   126f4:	ldr	r2, [r4, r2]
   126f8:	add	r1, pc, r1
   126fc:	ldr	r0, [r5]
   12700:	str	r6, [r3, #1040]	; 0x410
   12704:	ldr	r2, [r2, #8]
   12708:	cmp	ip, r0
   1270c:	str	r2, [r1]
   12710:	bne	1271c <_start@@Base+0x27c8>
   12714:	sub	sp, fp, #32
   12718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1271c:	bl	f950 <__stack_chk_fail@plt>
   12720:	strdeq	r0, [r6], -r8
   12724:			; <UNDEFINED> instruction: 0x000003b4
   12728:	andeq	r0, r6, r0, ror #20
   1272c:	andeq	r0, r0, ip, lsl #9
   12730:	andeq	r0, r6, r4, lsl #18
   12734:	ldr	r3, [pc, #60]	; 12778 <_start@@Base+0x2824>
   12738:	mov	r1, #2
   1273c:	ldr	r2, [pc, #56]	; 1277c <_start@@Base+0x2828>
   12740:	add	r3, pc, r3
   12744:	push	{r4, lr}
   12748:	ldr	r0, [r3, r2]
   1274c:	bl	3e004 <readBrailleCommand@@Base>
   12750:	cmn	r0, #1
   12754:	mov	r4, r0
   12758:	beq	12770 <_start@@Base+0x281c>
   1275c:	bl	2bdd0 <logCommand@@Base>
   12760:	and	r3, r4, #12582912	; 0xc00000
   12764:	cmp	r3, #4194304	; 0x400000
   12768:	uxthne	r4, r4
   1276c:	moveq	r4, #0
   12770:	mov	r0, r4
   12774:	pop	{r4, pc}
   12778:	andeq	r0, r6, r8, lsr r3
   1277c:	andeq	r0, r0, r8, asr #10
   12780:	ldr	r3, [pc, #1528]	; 12d80 <_start@@Base+0x2e2c>
   12784:	ldr	r2, [pc, #1528]	; 12d84 <_start@@Base+0x2e30>
   12788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1278c:	add	r3, pc, r3
   12790:	sub	sp, sp, #180	; 0xb4
   12794:	mov	r7, r0
   12798:	add	r0, r0, #128	; 0x80
   1279c:	mov	r6, r1
   127a0:	str	r0, [sp, #32]
   127a4:	ldr	r2, [r3, r2]
   127a8:	ldr	r1, [pc, #1496]	; 12d88 <_start@@Base+0x2e34>
   127ac:	str	r2, [sp, #24]
   127b0:	ldr	r2, [r2]
   127b4:	str	r2, [sp, #172]	; 0xac
   127b8:	ldr	r5, [r3, r1]
   127bc:	ldrb	sl, [r5, #73]	; 0x49
   127c0:	ldrb	r3, [r5, #72]	; 0x48
   127c4:	cmp	sl, #1
   127c8:	moveq	sl, #46	; 0x2e
   127cc:	movne	sl, #58	; 0x3a
   127d0:	cmp	r3, #1
   127d4:	beq	12a70 <_start@@Base+0x2b1c>
   127d8:	ldr	r3, [pc, #1452]	; 12d8c <_start@@Base+0x2e38>
   127dc:	add	r3, pc, r3
   127e0:	str	r3, [sp]
   127e4:	add	r1, sp, #44	; 0x2c
   127e8:	ldrb	ip, [r6, #4]
   127ec:	mov	r2, #1
   127f0:	str	r1, [sp, #20]
   127f4:	mov	r1, #64	; 0x40
   127f8:	mov	r3, r1
   127fc:	add	r0, sp, #44	; 0x2c
   12800:	str	ip, [sp, #4]
   12804:	add	r4, sp, #108	; 0x6c
   12808:	bl	fb60 <__snprintf_chk@plt>
   1280c:	add	lr, sp, #44	; 0x2c
   12810:	ldr	fp, [pc, #1400]	; 12d90 <_start@@Base+0x2e3c>
   12814:	mov	r2, #1
   12818:	mvn	r3, #0
   1281c:	str	sl, [sp, #4]
   12820:	add	fp, pc, fp
   12824:	str	fp, [sp]
   12828:	ldr	r9, [pc, #1380]	; 12d94 <_start@@Base+0x2e40>
   1282c:	add	r9, pc, r9
   12830:	add	r0, lr, r0
   12834:	cmp	r0, r4
   12838:	movcc	r8, r0
   1283c:	movcs	r8, r4
   12840:	rsb	r1, r8, r4
   12844:	mov	r0, r8
   12848:	bl	fb60 <__snprintf_chk@plt>
   1284c:	str	r9, [sp]
   12850:	ldrb	r1, [r6, #5]
   12854:	mvn	r3, #0
   12858:	mov	r2, #1
   1285c:	str	r1, [sp, #4]
   12860:	add	r0, r8, r0
   12864:	cmp	r0, r4
   12868:	movcc	r8, r0
   1286c:	movcs	r8, r4
   12870:	rsb	r1, r8, r4
   12874:	mov	r0, r8
   12878:	bl	fb60 <__snprintf_chk@plt>
   1287c:	ldrb	r3, [r5, #74]	; 0x4a
   12880:	add	r0, r8, r0
   12884:	cmp	r0, r4
   12888:	movcc	r8, r0
   1288c:	movcs	r8, r4
   12890:	cmp	r3, #0
   12894:	bne	12bfc <_start@@Base+0x2ca8>
   12898:	ldr	r3, [r6, #12]
   1289c:	cmp	r3, #0
   128a0:	beq	128b8 <_start@@Base+0x2964>
   128a4:	ldr	r2, [pc, #1260]	; 12d98 <_start@@Base+0x2e44>
   128a8:	mov	r0, r8
   128ac:	rsb	r1, r8, r4
   128b0:	add	r2, pc, r2
   128b4:	bl	f734 <snprintf@plt>
   128b8:	ldrb	r3, [r5, #75]	; 0x4b
   128bc:	cmp	r3, #0
   128c0:	beq	12bd0 <_start@@Base+0x2c7c>
   128c4:	ldrb	r9, [r6, #2]
   128c8:	ldrb	ip, [r6, #3]
   128cc:	ldrb	r3, [r5, #77]	; 0x4d
   128d0:	add	r9, r9, #1
   128d4:	add	ip, ip, #1
   128d8:	cmp	r3, #1
   128dc:	uxtb	r9, r9
   128e0:	uxtb	ip, ip
   128e4:	beq	12a7c <_start@@Base+0x2b28>
   128e8:	cmp	r3, #2
   128ec:	ldrb	r8, [r5, #76]	; 0x4c
   128f0:	moveq	r3, #46	; 0x2e
   128f4:	movne	r3, #45	; 0x2d
   128f8:	cmp	r8, #1
   128fc:	str	r3, [sp, #28]
   12900:	beq	12a90 <_start@@Base+0x2b3c>
   12904:	cmp	r8, #2
   12908:	beq	12c88 <_start@@Base+0x2d34>
   1290c:	ldrh	r6, [r6]
   12910:	mov	r1, #64	; 0x40
   12914:	ldr	lr, [pc, #1152]	; 12d9c <_start@@Base+0x2e48>
   12918:	mov	r3, r1
   1291c:	mov	r2, #1
   12920:	mov	r0, r4
   12924:	add	lr, pc, lr
   12928:	str	r6, [sp, #4]
   1292c:	str	lr, [sp]
   12930:	add	r6, sp, #172	; 0xac
   12934:	str	ip, [sp, #16]
   12938:	bl	fb60 <__snprintf_chk@plt>
   1293c:	ldr	r3, [sp, #28]
   12940:	mov	r2, #1
   12944:	ldr	sl, [pc, #1108]	; 12da0 <_start@@Base+0x2e4c>
   12948:	ldr	fp, [pc, #1108]	; 12da4 <_start@@Base+0x2e50>
   1294c:	add	sl, pc, sl
   12950:	str	r3, [sp, #4]
   12954:	str	sl, [sp]
   12958:	mvn	r3, #0
   1295c:	add	fp, pc, fp
   12960:	add	r0, r4, r0
   12964:	cmp	r0, r6
   12968:	movcc	r8, r0
   1296c:	movcs	r8, r6
   12970:	rsb	r1, r8, r6
   12974:	mov	r0, r8
   12978:	bl	fb60 <__snprintf_chk@plt>
   1297c:	mov	r2, #1
   12980:	mvn	r3, #0
   12984:	str	r9, [sp, #4]
   12988:	str	fp, [sp]
   1298c:	add	r0, r8, r0
   12990:	cmp	r0, r6
   12994:	movcc	r8, r0
   12998:	movcs	r8, r6
   1299c:	rsb	r1, r8, r6
   129a0:	mov	r0, r8
   129a4:	bl	fb60 <__snprintf_chk@plt>
   129a8:	ldr	lr, [sp, #28]
   129ac:	mov	r2, #1
   129b0:	mvn	r3, #0
   129b4:	str	sl, [sp]
   129b8:	str	lr, [sp, #4]
   129bc:	add	r0, r8, r0
   129c0:	cmp	r0, r6
   129c4:	movcc	r8, r0
   129c8:	movcs	r8, r6
   129cc:	rsb	r1, r8, r6
   129d0:	mov	r0, r8
   129d4:	bl	fb60 <__snprintf_chk@plt>
   129d8:	ldr	ip, [sp, #16]
   129dc:	str	fp, [sp]
   129e0:	mov	r2, #1
   129e4:	mvn	r3, #0
   129e8:	str	ip, [sp, #4]
   129ec:	add	r0, r8, r0
   129f0:	cmp	r0, r6
   129f4:	movcs	r0, r6
   129f8:	rsb	r1, r0, r6
   129fc:	bl	fb60 <__snprintf_chk@plt>
   12a00:	ldrb	r2, [r5, #75]	; 0x4b
   12a04:	cmp	r2, #1
   12a08:	beq	12b94 <_start@@Base+0x2c40>
   12a0c:	cmp	r2, #2
   12a10:	bne	12c5c <_start@@Base+0x2d08>
   12a14:	ldr	r3, [pc, #908]	; 12da8 <_start@@Base+0x2e54>
   12a18:	add	r2, sp, #44	; 0x2c
   12a1c:	mov	r0, r7
   12a20:	str	r2, [sp, #4]
   12a24:	add	r3, pc, r3
   12a28:	mov	r1, #128	; 0x80
   12a2c:	str	r3, [sp]
   12a30:	mov	r2, #1
   12a34:	mvn	r3, #0
   12a38:	str	r4, [sp, #8]
   12a3c:	bl	fb60 <__snprintf_chk@plt>
   12a40:	ldr	r3, [sp, #32]
   12a44:	add	r0, r7, r0
   12a48:	cmp	r0, r3
   12a4c:	movcs	r0, r3
   12a50:	ldr	r1, [sp, #24]
   12a54:	rsb	r0, r7, r0
   12a58:	ldr	r2, [sp, #172]	; 0xac
   12a5c:	ldr	r3, [r1]
   12a60:	cmp	r2, r3
   12a64:	bne	12d7c <_start@@Base+0x2e28>
   12a68:	add	sp, sp, #180	; 0xb4
   12a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a70:	ldr	r3, [pc, #820]	; 12dac <_start@@Base+0x2e58>
   12a74:	add	r3, pc, r3
   12a78:	b	127e0 <_start@@Base+0x288c>
   12a7c:	ldrb	r8, [r5, #76]	; 0x4c
   12a80:	mov	r2, #47	; 0x2f
   12a84:	str	r2, [sp, #28]
   12a88:	cmp	r8, #1
   12a8c:	bne	12904 <_start@@Base+0x29b0>
   12a90:	ldr	lr, [pc, #792]	; 12db0 <_start@@Base+0x2e5c>
   12a94:	mov	r1, #64	; 0x40
   12a98:	mov	r3, r1
   12a9c:	str	r9, [sp, #4]
   12aa0:	add	lr, pc, lr
   12aa4:	mov	r2, r8
   12aa8:	str	lr, [sp]
   12aac:	mov	r0, r4
   12ab0:	str	lr, [sp, #36]	; 0x24
   12ab4:	add	r9, sp, #172	; 0xac
   12ab8:	str	ip, [sp, #16]
   12abc:	bl	fb60 <__snprintf_chk@plt>
   12ac0:	ldr	r1, [sp, #28]
   12ac4:	mov	r2, r8
   12ac8:	ldr	fp, [pc, #740]	; 12db4 <_start@@Base+0x2e60>
   12acc:	mvn	r3, #0
   12ad0:	add	fp, pc, fp
   12ad4:	str	r1, [sp, #4]
   12ad8:	str	fp, [sp]
   12adc:	add	r0, r4, r0
   12ae0:	cmp	r0, r9
   12ae4:	movcc	sl, r0
   12ae8:	movcs	sl, r9
   12aec:	rsb	r1, sl, r9
   12af0:	mov	r0, sl
   12af4:	bl	fb60 <__snprintf_chk@plt>
   12af8:	ldr	ip, [sp, #16]
   12afc:	ldr	r2, [sp, #36]	; 0x24
   12b00:	mvn	r3, #0
   12b04:	str	ip, [sp, #4]
   12b08:	str	r2, [sp]
   12b0c:	mov	r2, r8
   12b10:	add	r0, sl, r0
   12b14:	cmp	r0, r9
   12b18:	movcc	sl, r0
   12b1c:	movcs	sl, r9
   12b20:	rsb	r1, sl, r9
   12b24:	mov	r0, sl
   12b28:	bl	fb60 <__snprintf_chk@plt>
   12b2c:	ldr	r3, [sp, #28]
   12b30:	mov	r2, r8
   12b34:	str	fp, [sp]
   12b38:	str	r3, [sp, #4]
   12b3c:	mvn	r3, #0
   12b40:	add	r0, sl, r0
   12b44:	cmp	r0, r9
   12b48:	movcc	sl, r0
   12b4c:	movcs	sl, r9
   12b50:	rsb	r1, sl, r9
   12b54:	mov	r0, sl
   12b58:	bl	fb60 <__snprintf_chk@plt>
   12b5c:	ldrh	ip, [r6]
   12b60:	ldr	r1, [pc, #592]	; 12db8 <_start@@Base+0x2e64>
   12b64:	mov	r2, r8
   12b68:	mvn	r3, #0
   12b6c:	add	r1, pc, r1
   12b70:	stm	sp, {r1, ip}
   12b74:	add	r0, sl, r0
   12b78:	cmp	r0, r9
   12b7c:	movcs	r0, r9
   12b80:	rsb	r1, r0, r9
   12b84:	bl	fb60 <__snprintf_chk@plt>
   12b88:	ldrb	r2, [r5, #75]	; 0x4b
   12b8c:	cmp	r2, #1
   12b90:	bne	12a0c <_start@@Base+0x2ab8>
   12b94:	ldr	r3, [pc, #544]	; 12dbc <_start@@Base+0x2e68>
   12b98:	add	lr, sp, #44	; 0x2c
   12b9c:	mov	r1, #128	; 0x80
   12ba0:	str	r4, [sp, #4]
   12ba4:	add	r3, pc, r3
   12ba8:	mov	r0, r7
   12bac:	str	r3, [sp]
   12bb0:	mvn	r3, #0
   12bb4:	str	lr, [sp, #8]
   12bb8:	bl	fb60 <__snprintf_chk@plt>
   12bbc:	ldr	r1, [sp, #32]
   12bc0:	add	r0, r7, r0
   12bc4:	cmp	r0, r1
   12bc8:	movcs	r0, r1
   12bcc:	b	12a50 <_start@@Base+0x2afc>
   12bd0:	ldr	r2, [pc, #488]	; 12dc0 <_start@@Base+0x2e6c>
   12bd4:	mov	r1, #128	; 0x80
   12bd8:	add	r3, sp, #44	; 0x2c
   12bdc:	mov	r0, r7
   12be0:	add	r2, pc, r2
   12be4:	bl	f734 <snprintf@plt>
   12be8:	ldr	r1, [sp, #32]
   12bec:	add	r0, r7, r0
   12bf0:	cmp	r0, r1
   12bf4:	movcs	r0, r1
   12bf8:	b	12a50 <_start@@Base+0x2afc>
   12bfc:	rsb	r1, r8, r4
   12c00:	mov	r0, r8
   12c04:	mov	r2, #1
   12c08:	mvn	r3, #0
   12c0c:	str	fp, [sp]
   12c10:	str	sl, [sp, #4]
   12c14:	bl	fb60 <__snprintf_chk@plt>
   12c18:	str	r9, [sp]
   12c1c:	ldrb	r1, [r6, #6]
   12c20:	mov	r2, #1
   12c24:	mvn	r3, #0
   12c28:	str	r1, [sp, #4]
   12c2c:	add	r0, r8, r0
   12c30:	cmp	r0, r4
   12c34:	movcc	r8, r0
   12c38:	movcs	r8, r4
   12c3c:	rsb	r1, r8, r4
   12c40:	mov	r0, r8
   12c44:	bl	fb60 <__snprintf_chk@plt>
   12c48:	add	r0, r8, r0
   12c4c:	cmp	r0, r4
   12c50:	movcc	r8, r0
   12c54:	movcs	r8, r4
   12c58:	b	12898 <_start@@Base+0x2944>
   12c5c:	ldr	r2, [pc, #352]	; 12dc4 <_start@@Base+0x2e70>
   12c60:	mov	r1, #128	; 0x80
   12c64:	mov	r3, r4
   12c68:	mov	r0, r7
   12c6c:	add	r2, pc, r2
   12c70:	bl	f734 <snprintf@plt>
   12c74:	ldr	r1, [sp, #32]
   12c78:	add	r0, r7, r0
   12c7c:	cmp	r0, r1
   12c80:	movcs	r0, r1
   12c84:	b	12a50 <_start@@Base+0x2afc>
   12c88:	ldr	lr, [pc, #312]	; 12dc8 <_start@@Base+0x2e74>
   12c8c:	mov	r1, #64	; 0x40
   12c90:	str	ip, [sp, #4]
   12c94:	mov	r3, r1
   12c98:	add	lr, pc, lr
   12c9c:	mov	r0, r4
   12ca0:	str	lr, [sp]
   12ca4:	mov	r2, #1
   12ca8:	str	lr, [sp, #16]
   12cac:	bl	fb60 <__snprintf_chk@plt>
   12cb0:	add	r8, sp, #172	; 0xac
   12cb4:	ldr	lr, [sp, #28]
   12cb8:	ldr	fp, [pc, #268]	; 12dcc <_start@@Base+0x2e78>
   12cbc:	mov	r2, #1
   12cc0:	mvn	r3, #0
   12cc4:	str	lr, [sp, #4]
   12cc8:	add	fp, pc, fp
   12ccc:	str	fp, [sp]
   12cd0:	add	r0, r4, r0
   12cd4:	cmp	r0, r8
   12cd8:	movcc	sl, r0
   12cdc:	movcs	sl, r8
   12ce0:	rsb	r1, sl, r8
   12ce4:	mov	r0, sl
   12ce8:	bl	fb60 <__snprintf_chk@plt>
   12cec:	ldr	ip, [sp, #16]
   12cf0:	str	r9, [sp, #4]
   12cf4:	mov	r2, #1
   12cf8:	mvn	r3, #0
   12cfc:	str	ip, [sp]
   12d00:	add	r0, sl, r0
   12d04:	cmp	r0, r8
   12d08:	movcc	sl, r0
   12d0c:	movcs	sl, r8
   12d10:	rsb	r1, sl, r8
   12d14:	mov	r0, sl
   12d18:	bl	fb60 <__snprintf_chk@plt>
   12d1c:	ldr	r1, [sp, #28]
   12d20:	str	fp, [sp]
   12d24:	mov	r2, #1
   12d28:	mvn	r3, #0
   12d2c:	str	r1, [sp, #4]
   12d30:	add	r0, sl, r0
   12d34:	cmp	r0, r8
   12d38:	movcc	sl, r0
   12d3c:	movcs	sl, r8
   12d40:	rsb	r1, sl, r8
   12d44:	mov	r0, sl
   12d48:	bl	fb60 <__snprintf_chk@plt>
   12d4c:	ldrh	ip, [r6]
   12d50:	ldr	r1, [pc, #120]	; 12dd0 <_start@@Base+0x2e7c>
   12d54:	mov	r2, #1
   12d58:	mvn	r3, #0
   12d5c:	add	r1, pc, r1
   12d60:	stm	sp, {r1, ip}
   12d64:	add	r0, sl, r0
   12d68:	cmp	r0, r8
   12d6c:	movcs	r0, r8
   12d70:	rsb	r1, r0, r8
   12d74:	bl	fb60 <__snprintf_chk@plt>
   12d78:	b	12a00 <_start@@Base+0x2aac>
   12d7c:	bl	f950 <__stack_chk_fail@plt>
   12d80:	andeq	r0, r6, ip, ror #5
   12d84:			; <UNDEFINED> instruction: 0x000003b4
   12d88:	andeq	r0, r0, r0, asr #10
   12d8c:	strdeq	fp, [r3], -r8
   12d90:	strdeq	ip, [r3], -r8
   12d94:	andeq	fp, r3, r8, lsr #31
   12d98:	andeq	fp, r3, r4, asr #31
   12d9c:			; <UNDEFINED> instruction: 0x0003beb8
   12da0:	andeq	fp, r3, ip, asr #31
   12da4:	andeq	fp, r3, r8, ror lr
   12da8:	andeq	sp, r3, r4, ror sp
   12dac:	ldrdeq	r6, [r4], -ip
   12db0:	andeq	fp, r3, r4, lsr sp
   12db4:	andeq	fp, r3, r8, asr #28
   12db8:	andeq	fp, r3, r0, ror ip
   12dbc:	strdeq	sp, [r3], -r4
   12dc0:	muleq	r3, r4, ip
   12dc4:	andeq	fp, r3, r8, lsl #24
   12dc8:	andeq	fp, r3, ip, lsr fp
   12dcc:	andeq	fp, r3, r0, asr ip
   12dd0:	andeq	fp, r3, r0, lsl #21
   12dd4:	ldr	ip, [pc, #184]	; 12e94 <_start@@Base+0x2f40>
   12dd8:	sxth	r1, r1
   12ddc:	push	{r4, r5, r6, r7, fp, lr}
   12de0:	add	r5, r0, #1
   12de4:	add	fp, sp, #20
   12de8:	ldr	r0, [pc, #168]	; 12e98 <_start@@Base+0x2f44>
   12dec:	sub	sp, sp, #16
   12df0:	add	ip, pc, ip
   12df4:	lsl	r3, r5, #3
   12df8:	add	r3, r3, #8
   12dfc:	mov	r7, r2
   12e00:	ldr	r6, [ip, r0]
   12e04:	sub	sp, sp, r3
   12e08:	add	r4, sp, #8
   12e0c:	sxth	r2, r5
   12e10:	str	r4, [sp]
   12e14:	mov	r0, #0
   12e18:	ldr	lr, [r6]
   12e1c:	mov	r3, #1
   12e20:	str	lr, [fp, #-24]	; 0xffffffe8
   12e24:	bl	39094 <readScreen@@Base>
   12e28:	cmp	r5, #0
   12e2c:	ble	12e6c <_start@@Base+0x2f18>
   12e30:	ldr	r2, [r4]
   12e34:	ldr	r3, [r7]
   12e38:	cmp	r2, r3
   12e3c:	bne	12e88 <_start@@Base+0x2f34>
   12e40:	mov	r1, r4
   12e44:	mov	r2, r7
   12e48:	mov	r3, #0
   12e4c:	b	12e60 <_start@@Base+0x2f0c>
   12e50:	ldr	r4, [r1, #8]!
   12e54:	ldr	ip, [r2, #8]!
   12e58:	cmp	r4, ip
   12e5c:	bne	12e88 <_start@@Base+0x2f34>
   12e60:	add	r3, r3, #1
   12e64:	cmp	r3, r5
   12e68:	bne	12e50 <_start@@Base+0x2efc>
   12e6c:	mov	r0, #1
   12e70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12e74:	ldr	r3, [r6]
   12e78:	cmp	r2, r3
   12e7c:	bne	12e90 <_start@@Base+0x2f3c>
   12e80:	sub	sp, fp, #20
   12e84:	pop	{r4, r5, r6, r7, fp, pc}
   12e88:	mov	r0, #0
   12e8c:	b	12e70 <_start@@Base+0x2f1c>
   12e90:	bl	f950 <__stack_chk_fail@plt>
   12e94:	andeq	pc, r5, r8, lsl #25
   12e98:			; <UNDEFINED> instruction: 0x000003b4

00012e9c <writeBrailleCharacters@@Base>:
   12e9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ea0:	add	fp, sp, #32
   12ea4:	ldr	r5, [pc, #336]	; 12ffc <writeBrailleCharacters@@Base+0x160>
   12ea8:	sub	sp, sp, #28
   12eac:	ldr	r3, [pc, #332]	; 13000 <writeBrailleCharacters@@Base+0x164>
   12eb0:	add	r5, pc, r5
   12eb4:	ldr	ip, [pc, #328]	; 13004 <writeBrailleCharacters@@Base+0x168>
   12eb8:	mov	r7, r0
   12ebc:	ldr	r0, [pc, #324]	; 13008 <writeBrailleCharacters@@Base+0x16c>
   12ec0:	ldr	r8, [r5, r3]
   12ec4:	ldr	r3, [pc, #320]	; 1300c <writeBrailleCharacters@@Base+0x170>
   12ec8:	ldr	lr, [r8]
   12ecc:	str	lr, [fp, #-40]	; 0xffffffd8
   12ed0:	ldr	r4, [r5, ip]
   12ed4:	ldr	r6, [r5, r0]
   12ed8:	ldr	r3, [r5, r3]
   12edc:	ldr	lr, [r4]
   12ee0:	ldr	ip, [r4, #4]
   12ee4:	ldr	r9, [r6]
   12ee8:	ldr	r0, [r4, #28]
   12eec:	mul	r6, ip, lr
   12ef0:	ldr	r3, [r3]
   12ef4:	lsl	r6, r6, #2
   12ef8:	add	r6, r6, #10
   12efc:	bic	r6, r6, #7
   12f00:	sub	sp, sp, r6
   12f04:	add	r6, sp, #16
   12f08:	str	r1, [sp, #8]
   12f0c:	mov	r1, r0
   12f10:	str	r2, [sp, #12]
   12f14:	mov	r0, r6
   12f18:	mov	r2, r9
   12f1c:	str	lr, [sp]
   12f20:	str	ip, [sp, #4]
   12f24:	mov	r9, sp
   12f28:	bl	3d9d0 <fillTextRegion@@Base>
   12f2c:	cmp	r7, #0
   12f30:	beq	12fe8 <writeBrailleCharacters@@Base+0x14c>
   12f34:	mov	r0, r7
   12f38:	bl	28108 <getUtf8Length@@Base>
   12f3c:	add	r3, r0, #1
   12f40:	mov	sl, r0
   12f44:	lsl	r3, r3, #2
   12f48:	lsr	r2, r3, #2
   12f4c:	add	r3, r3, #10
   12f50:	mov	r1, r7
   12f54:	bic	r3, r3, #7
   12f58:	sub	sp, sp, r3
   12f5c:	add	r7, sp, #16
   12f60:	mov	r0, r7
   12f64:	bl	f560 <mbstowcs@plt>
   12f68:	ldr	r2, [pc, #160]	; 13010 <writeBrailleCharacters@@Base+0x174>
   12f6c:	ldr	r3, [pc, #160]	; 13014 <writeBrailleCharacters@@Base+0x178>
   12f70:	mov	r0, r6
   12f74:	ldr	ip, [r4]
   12f78:	ldr	r2, [r5, r2]
   12f7c:	ldr	r3, [r5, r3]
   12f80:	ldr	r1, [r4, #28]
   12f84:	ldr	r2, [r2]
   12f88:	ldr	r3, [r3]
   12f8c:	str	ip, [sp]
   12f90:	ldr	ip, [r4, #4]
   12f94:	str	r7, [sp, #8]
   12f98:	str	sl, [sp, #12]
   12f9c:	str	ip, [sp, #4]
   12fa0:	bl	3d9d0 <fillTextRegion@@Base>
   12fa4:	mov	r0, r6
   12fa8:	mov	sp, r9
   12fac:	ldr	r1, [r4, #28]
   12fb0:	bl	10130 <_start@@Base+0x1dc>
   12fb4:	ldr	r3, [pc, #92]	; 13018 <writeBrailleCharacters@@Base+0x17c>
   12fb8:	mov	r0, r4
   12fbc:	mov	r1, r6
   12fc0:	ldr	r3, [r5, r3]
   12fc4:	ldr	r3, [r3]
   12fc8:	ldr	r3, [r3, #48]	; 0x30
   12fcc:	blx	r3
   12fd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12fd4:	ldr	r3, [r8]
   12fd8:	cmp	r2, r3
   12fdc:	bne	12ff8 <writeBrailleCharacters@@Base+0x15c>
   12fe0:	sub	sp, fp, #32
   12fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fe8:	mov	r2, #1
   12fec:	mov	r3, #4
   12ff0:	mov	sl, r7
   12ff4:	b	12f4c <writeBrailleCharacters@@Base+0xb0>
   12ff8:	bl	f950 <__stack_chk_fail@plt>
   12ffc:	andeq	pc, r5, r8, asr #23
   13000:			; <UNDEFINED> instruction: 0x000003b4
   13004:	andeq	r0, r0, r8, asr #10
   13008:	andeq	r0, r0, r0, ror r4
   1300c:	andeq	r0, r0, r0, asr #7
   13010:	andeq	r0, r0, ip, lsr r4
   13014:	andeq	r0, r0, r8, asr #9
   13018:	andeq	r0, r0, ip, ror r4

0001301c <writeBrailleText@@Base>:
   1301c:	ldr	r3, [pc, #120]	; 1309c <writeBrailleText@@Base+0x80>
   13020:	push	{r4, r5, r6, fp, lr}
   13024:	add	fp, sp, #16
   13028:	ldr	r2, [pc, #112]	; 130a0 <writeBrailleText@@Base+0x84>
   1302c:	sub	sp, sp, #12
   13030:	add	r3, pc, r3
   13034:	mov	r6, r0
   13038:	mov	r0, r1
   1303c:	ldr	r4, [r3, r2]
   13040:	mov	r5, r1
   13044:	ldr	r3, [r4]
   13048:	str	r3, [fp, #-24]	; 0xffffffe8
   1304c:	bl	27ebc <getTextLength@@Base>
   13050:	mov	r1, r5
   13054:	add	r2, r0, #1
   13058:	lsl	r3, r2, #2
   1305c:	add	r3, r3, #10
   13060:	bic	r3, r3, #7
   13064:	sub	sp, sp, r3
   13068:	mov	r0, sp
   1306c:	bl	f560 <mbstowcs@plt>
   13070:	mov	r1, sp
   13074:	mov	r2, r0
   13078:	mov	r0, r6
   1307c:	bl	12e9c <writeBrailleCharacters@@Base>
   13080:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13084:	ldr	r3, [r4]
   13088:	cmp	r2, r3
   1308c:	bne	13098 <writeBrailleText@@Base+0x7c>
   13090:	sub	sp, fp, #16
   13094:	pop	{r4, r5, r6, fp, pc}
   13098:	bl	f950 <__stack_chk_fail@plt>
   1309c:	andeq	pc, r5, r8, asr #20
   130a0:			; <UNDEFINED> instruction: 0x000003b4

000130a4 <showBrailleText@@Base>:
   130a4:	push	{r4, r5, r6, lr}
   130a8:	mov	r6, r2
   130ac:	bl	1301c <writeBrailleText@@Base>
   130b0:	ldr	r5, [pc, #32]	; 130d8 <showBrailleText@@Base+0x34>
   130b4:	mov	r1, r6
   130b8:	ldr	r2, [pc, #28]	; 130dc <showBrailleText@@Base+0x38>
   130bc:	add	r5, pc, r5
   130c0:	mov	r3, r5
   130c4:	mov	r4, r0
   130c8:	ldr	r0, [r5, r2]
   130cc:	bl	3d9a4 <drainBrailleOutput@@Base>
   130d0:	mov	r0, r4
   130d4:	pop	{r4, r5, r6, pc}
   130d8:			; <UNDEFINED> instruction: 0x0005f9bc
   130dc:	andeq	r0, r0, r8, asr #10

000130e0 <getCursorDots@@Base>:
   130e0:	ldr	r2, [pc, #64]	; 13128 <getCursorDots@@Base+0x48>
   130e4:	ldr	r3, [pc, #64]	; 1312c <getCursorDots@@Base+0x4c>
   130e8:	add	r2, pc, r2
   130ec:	add	r3, pc, r3
   130f0:	ldr	r1, [r2]
   130f4:	ldrb	r1, [r1]
   130f8:	cmp	r1, #0
   130fc:	beq	1310c <getCursorDots@@Base+0x2c>
   13100:	ldr	r0, [r2, #12]
   13104:	cmp	r0, #0
   13108:	bxeq	lr
   1310c:	ldr	r1, [pc, #28]	; 13130 <getCursorDots@@Base+0x50>
   13110:	ldr	r2, [pc, #28]	; 13134 <getCursorDots@@Base+0x54>
   13114:	ldr	r3, [r3, r1]
   13118:	add	r2, pc, r2
   1311c:	ldrb	r3, [r3, #12]
   13120:	ldrb	r0, [r2, r3]
   13124:	bx	lr
   13128:	andeq	pc, r5, r4, lsr pc	; <UNPREDICTABLE>
   1312c:	andeq	pc, r5, ip, lsl #19
   13130:	andeq	r0, r0, r0, asr #10
   13134:	andeq	fp, r3, r0, ror #11

00013138 <resetAutorepeat@@Base>:
   13138:	ldr	r0, [pc, #12]	; 1314c <resetAutorepeat@@Base+0x14>
   1313c:	add	r0, pc, r0
   13140:	add	r0, r0, #1040	; 0x410
   13144:	add	r0, r0, #12
   13148:	b	2be98 <resetRepeatState@@Base>
   1314c:	andeq	r0, r6, r8
   13150:	push	{r4, lr}
   13154:	bl	2c9d0 <resetScanCodes@@Base>
   13158:	ldr	r4, [pc, #52]	; 13194 <resetAutorepeat@@Base+0x5c>
   1315c:	bl	104bc <_start@@Base+0x568>
   13160:	ldr	r2, [pc, #48]	; 13198 <resetAutorepeat@@Base+0x60>
   13164:	add	r4, pc, r4
   13168:	mov	r3, r4
   1316c:	ldr	r3, [r4, r2]
   13170:	ldrb	r3, [r3, #7]
   13174:	cmp	r3, #0
   13178:	beq	13180 <resetAutorepeat@@Base+0x48>
   1317c:	bl	13138 <resetAutorepeat@@Base>
   13180:	ldr	r3, [pc, #20]	; 1319c <resetAutorepeat@@Base+0x64>
   13184:	mov	r2, #0
   13188:	add	r3, pc, r3
   1318c:	str	r2, [r3, #1072]	; 0x430
   13190:	pop	{r4, pc}
   13194:	andeq	pc, r5, r4, lsl r9	; <UNPREDICTABLE>
   13198:	andeq	r0, r0, r0, asr #10
   1319c:			; <UNDEFINED> instruction: 0x0005ffbc

000131a0 <handleAutorepeat@@Base>:
   131a0:	ldr	r3, [pc, #104]	; 13210 <handleAutorepeat@@Base+0x70>
   131a4:	ldr	r2, [pc, #104]	; 13214 <handleAutorepeat@@Base+0x74>
   131a8:	add	r3, pc, r3
   131ac:	push	{lr}		; (str lr, [sp, #-4]!)
   131b0:	sub	sp, sp, #12
   131b4:	ldr	r2, [r3, r2]
   131b8:	ldrb	r3, [r2, #7]
   131bc:	cmp	r3, #0
   131c0:	moveq	r1, r3
   131c4:	beq	131d0 <handleAutorepeat@@Base+0x30>
   131c8:	cmp	r1, #0
   131cc:	beq	131fc <handleAutorepeat@@Base+0x5c>
   131d0:	ldrb	ip, [r2, #11]
   131d4:	ldrb	r3, [r2, #9]
   131d8:	ldrb	r2, [r2, #27]
   131dc:	add	ip, ip, ip, lsl #2
   131e0:	add	r3, r3, r3, lsl #2
   131e4:	lsl	ip, ip, #1
   131e8:	str	ip, [sp]
   131ec:	lsl	r3, r3, #1
   131f0:	bl	2beac <handleRepeatFlags@@Base>
   131f4:	add	sp, sp, #12
   131f8:	pop	{pc}		; (ldr pc, [sp], #4)
   131fc:	ldr	r1, [pc, #20]	; 13218 <handleAutorepeat@@Base+0x78>
   13200:	add	r1, pc, r1
   13204:	add	r1, r1, #1040	; 0x410
   13208:	add	r1, r1, #12
   1320c:	b	131d0 <handleAutorepeat@@Base+0x30>
   13210:	ldrdeq	pc, [r5], -r0
   13214:	andeq	r0, r0, r0, asr #10
   13218:	andeq	pc, r5, r4, asr #30

0001321c <highlightWindow@@Base>:
   1321c:	push	{r4, r5, r6, r7, r8, lr}
   13220:	sub	sp, sp, #24
   13224:	ldr	r4, [pc, #372]	; 133a0 <highlightWindow@@Base+0x184>
   13228:	ldr	r2, [pc, #372]	; 133a4 <highlightWindow@@Base+0x188>
   1322c:	add	r4, pc, r4
   13230:	ldr	r3, [pc, #368]	; 133a8 <highlightWindow@@Base+0x18c>
   13234:	ldr	r5, [r4, r2]
   13238:	ldr	r2, [r5]
   1323c:	str	r2, [sp, #20]
   13240:	ldr	r3, [r4, r3]
   13244:	ldrb	r2, [r3, #23]
   13248:	cmp	r2, #0
   1324c:	beq	132c8 <highlightWindow@@Base+0xac>
   13250:	ldrb	r6, [r3, #4]
   13254:	mov	r2, #0
   13258:	str	r2, [sp, #4]
   1325c:	cmp	r6, r2
   13260:	str	r2, [sp, #12]
   13264:	bne	132e0 <highlightWindow@@Base+0xc4>
   13268:	ldr	r3, [pc, #316]	; 133ac <highlightWindow@@Base+0x190>
   1326c:	ldr	r3, [r4, r3]
   13270:	ldrb	r2, [r3, #48]	; 0x30
   13274:	ands	r2, r2, #1
   13278:	bne	132f8 <highlightWindow@@Base+0xdc>
   1327c:	ldr	r1, [pc, #300]	; 133b0 <highlightWindow@@Base+0x194>
   13280:	mov	r0, r2
   13284:	ldr	r3, [r3, #4]
   13288:	ldr	r1, [r4, r1]
   1328c:	sub	r3, r3, #1
   13290:	str	r3, [sp, #16]
   13294:	ldr	r1, [r1]
   13298:	sub	r1, r1, #1
   1329c:	str	r1, [sp, #8]
   132a0:	ldr	ip, [pc, #268]	; 133b4 <highlightWindow@@Base+0x198>
   132a4:	ldr	ip, [r4, ip]
   132a8:	ldr	ip, [ip]
   132ac:	ldr	lr, [ip, #8]
   132b0:	ldr	ip, [ip, #12]
   132b4:	add	r0, lr, r0
   132b8:	add	r1, lr, r1
   132bc:	add	r2, ip, r2
   132c0:	add	r3, ip, r3
   132c4:	bl	391e8 <highlightScreenRegion@@Base>
   132c8:	ldr	r2, [sp, #20]
   132cc:	ldr	r3, [r5]
   132d0:	cmp	r2, r3
   132d4:	bne	1339c <highlightWindow@@Base+0x180>
   132d8:	add	sp, sp, #24
   132dc:	pop	{r4, r5, r6, r7, r8, pc}
   132e0:	mov	r3, r2
   132e4:	str	r2, [sp, #8]
   132e8:	str	r2, [sp, #16]
   132ec:	mov	r1, r2
   132f0:	mov	r0, r2
   132f4:	b	132a0 <highlightWindow@@Base+0x84>
   132f8:	add	r7, sp, #4
   132fc:	add	r8, sp, #8
   13300:	add	r2, sp, #12
   13304:	add	r3, sp, #16
   13308:	mov	r0, r7
   1330c:	mov	r1, r8
   13310:	bl	26fbc <touchGetRegion@@Base>
   13314:	cmp	r0, #0
   13318:	bne	13324 <highlightWindow@@Base+0x108>
   1331c:	bl	39208 <unhighlightScreenRegion@@Base>
   13320:	b	132c8 <highlightWindow@@Base+0xac>
   13324:	ldr	r3, [pc, #140]	; 133b8 <highlightWindow@@Base+0x19c>
   13328:	mov	r1, r6
   1332c:	ldr	lr, [pc, #124]	; 133b0 <highlightWindow@@Base+0x194>
   13330:	mov	r0, r7
   13334:	ldr	r6, [sp, #4]
   13338:	mov	r2, r1
   1333c:	ldr	r3, [r4, r3]
   13340:	ldr	ip, [sp, #8]
   13344:	ldr	r3, [r3]
   13348:	cmp	r6, r3
   1334c:	strcs	r6, [sp, #4]
   13350:	strcc	r3, [sp, #4]
   13354:	ldr	lr, [r4, lr]
   13358:	ldr	lr, [lr]
   1335c:	add	r3, r3, lr
   13360:	sub	r3, r3, #1
   13364:	cmp	ip, r3
   13368:	strls	ip, [sp, #8]
   1336c:	strhi	r3, [sp, #8]
   13370:	bl	10384 <_start@@Base+0x430>
   13374:	cmp	r0, #0
   13378:	beq	1331c <highlightWindow@@Base+0x100>
   1337c:	mov	r1, #1
   13380:	mov	r0, r8
   13384:	mov	r2, r1
   13388:	bl	10384 <_start@@Base+0x430>
   1338c:	cmp	r0, #0
   13390:	beq	1331c <highlightWindow@@Base+0x100>
   13394:	ldmib	sp, {r0, r1, r2, r3}
   13398:	b	132a0 <highlightWindow@@Base+0x84>
   1339c:	bl	f950 <__stack_chk_fail@plt>
   133a0:	andeq	pc, r5, ip, asr #16
   133a4:			; <UNDEFINED> instruction: 0x000003b4
   133a8:	andeq	r0, r0, r0, asr #10
   133ac:	andeq	r0, r0, r8, asr #10
   133b0:	andeq	r0, r0, r0, asr #7
   133b4:			; <UNDEFINED> instruction: 0x000003b8
   133b8:	andeq	r0, r0, r0, ror r4
   133bc:	push	{r4, lr}
   133c0:	bl	1053c <_start@@Base+0x5e8>
   133c4:	mov	r0, #1
   133c8:	ldr	r3, [pc, #164]	; 13474 <highlightWindow@@Base+0x258>
   133cc:	ldr	r1, [pc, #164]	; 13478 <highlightWindow@@Base+0x25c>
   133d0:	ldr	r2, [pc, #164]	; 1347c <highlightWindow@@Base+0x260>
   133d4:	add	r3, pc, r3
   133d8:	ldr	r4, [r3, r1]
   133dc:	ldr	r2, [r3, r2]
   133e0:	ldr	r3, [r4]
   133e4:	ldrsh	r1, [r2, #4]
   133e8:	ldrsh	r2, [r2, #6]
   133ec:	str	r1, [r3, #24]
   133f0:	str	r2, [r3, #28]
   133f4:	bl	116b4 <_start@@Base+0x1760>
   133f8:	mov	r1, #0
   133fc:	cmp	r0, #0
   13400:	ldrne	r2, [r4]
   13404:	moveq	ip, r0
   13408:	ldreq	r3, [r4]
   1340c:	ldrne	r0, [r2, #8]
   13410:	moveq	r2, r3
   13414:	streq	r0, [r3, #12]
   13418:	streq	r0, [r3, #8]
   1341c:	ldrne	ip, [r2, #12]
   13420:	ldr	r3, [pc, #88]	; 13480 <highlightWindow@@Base+0x264>
   13424:	str	r0, [r2, #16]
   13428:	add	r3, pc, r3
   1342c:	str	ip, [r2, #20]
   13430:	str	ip, [r2, #44]	; 0x2c
   13434:	str	r0, [r2, #40]	; 0x28
   13438:	str	ip, [r3, #1080]	; 0x438
   1343c:	str	r1, [r3, #1084]	; 0x43c
   13440:	str	r1, [r3, #1088]	; 0x440
   13444:	str	r1, [r3, #1092]	; 0x444
   13448:	str	r0, [r3, #1076]	; 0x434
   1344c:	bl	1321c <highlightWindow@@Base>
   13450:	bl	107cc <_start@@Base+0x878>
   13454:	bl	13150 <resetAutorepeat@@Base+0x18>
   13458:	ldr	r3, [pc, #36]	; 13484 <highlightWindow@@Base+0x268>
   1345c:	ldr	r2, [pc, #36]	; 13488 <highlightWindow@@Base+0x26c>
   13460:	mov	r0, #1
   13464:	add	r3, pc, r3
   13468:	add	r2, pc, r2
   1346c:	str	r2, [r3]
   13470:	pop	{r4, pc}
   13474:	andeq	pc, r5, r4, lsr #13
   13478:			; <UNDEFINED> instruction: 0x000003b8
   1347c:	andeq	r0, r0, ip, lsl #9
   13480:	andeq	pc, r5, ip, lsl sp	; <UNPREDICTABLE>
   13484:			; <UNDEFINED> instruction: 0x0005fbb4
   13488:			; <UNDEFINED> instruction: 0xffffd254

0001348c <brlttyConstruct@@Base>:
   1348c:	push	{r3, r4, r5, r6, r7, lr}
   13490:	mov	r7, r0
   13494:	mov	r0, #0
   13498:	mov	r6, r1
   1349c:	bl	fc74 <time@plt>
   134a0:	ldr	r5, [pc, #148]	; 1353c <brlttyConstruct@@Base+0xb0>
   134a4:	bl	fdb8 <srand@plt>
   134a8:	ldr	r0, [pc, #144]	; 13540 <brlttyConstruct@@Base+0xb4>
   134ac:	add	r5, pc, r5
   134b0:	ldr	r4, [pc, #140]	; 13544 <brlttyConstruct@@Base+0xb8>
   134b4:	add	r0, pc, r0
   134b8:	bl	1a8f8 <onProgramExit@@Base>
   134bc:	add	r4, pc, r4
   134c0:	bl	1c288 <openSystemLog@@Base>
   134c4:	mov	r3, #0
   134c8:	mov	r0, r3
   134cc:	str	r3, [r5, #1036]	; 0x40c
   134d0:	bl	fc74 <time@plt>
   134d4:	mov	r1, #1
   134d8:	mov	r3, r0
   134dc:	mov	r0, #13
   134e0:	str	r3, [r5, #1032]	; 0x408
   134e4:	bl	11ca8 <_start@@Base+0x1d54>
   134e8:	mov	r1, r4
   134ec:	mov	r0, #15
   134f0:	bl	11ca8 <_start@@Base+0x1d54>
   134f4:	mov	r1, r4
   134f8:	mov	r0, #2
   134fc:	bl	11ca8 <_start@@Base+0x1d54>
   13500:	mov	r0, r7
   13504:	mov	r1, r6
   13508:	bl	22e00 <brlttyStart@@Base>
   1350c:	subs	r4, r0, #0
   13510:	bne	13534 <brlttyConstruct@@Base+0xa8>
   13514:	ldr	r0, [pc, #44]	; 13548 <brlttyConstruct@@Base+0xbc>
   13518:	add	r0, pc, r0
   1351c:	bl	1a8f8 <onProgramExit@@Base>
   13520:	ldr	r3, [pc, #36]	; 1354c <brlttyConstruct@@Base+0xc0>
   13524:	ldr	r2, [pc, #36]	; 13550 <brlttyConstruct@@Base+0xc4>
   13528:	add	r3, pc, r3
   1352c:	add	r2, pc, r2
   13530:	str	r2, [r3]
   13534:	mov	r0, r4
   13538:	pop	{r3, r4, r5, r6, r7, pc}
   1353c:	muleq	r5, r8, ip
   13540:			; <UNDEFINED> instruction: 0xffffd510
   13544:			; <UNDEFINED> instruction: 0xffffd4a4
   13548:			; <UNDEFINED> instruction: 0xffffd424
   1354c:	strdeq	pc, [r5], -r0
   13550:			; <UNDEFINED> instruction: 0xfffffe88

00013554 <brlttyDestruct@@Base>:
   13554:	b	19fa4 <endProgram@@Base>

00013558 <message@@Base>:
   13558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1355c:	add	fp, sp, #32
   13560:	ldr	r3, [pc, #992]	; 13948 <message@@Base+0x3f0>
   13564:	sub	sp, sp, #92	; 0x5c
   13568:	cmp	r0, #0
   1356c:	add	r3, pc, r3
   13570:	str	r3, [fp, #-64]	; 0xffffffc0
   13574:	ldr	ip, [fp, #-64]	; 0xffffffc0
   13578:	mov	r5, r1
   1357c:	ldr	r3, [pc, #968]	; 1394c <message@@Base+0x3f4>
   13580:	str	r0, [fp, #-76]	; 0xffffffb4
   13584:	ldr	r3, [ip, r3]
   13588:	str	r3, [fp, #-88]	; 0xffffffa8
   1358c:	ldr	r3, [r3]
   13590:	str	r3, [fp, #-40]	; 0xffffffd8
   13594:	beq	1391c <message@@Base+0x3c4>
   13598:	uxth	r2, r2
   1359c:	str	r2, [fp, #-72]	; 0xffffffb8
   135a0:	tst	r2, #1
   135a4:	bne	135b4 <message@@Base+0x5c>
   135a8:	bl	11a00 <_start@@Base+0x1aac>
   135ac:	cmp	r0, #0
   135b0:	bne	138f0 <message@@Base+0x398>
   135b4:	ldr	r3, [pc, #916]	; 13950 <message@@Base+0x3f8>
   135b8:	ldr	ip, [fp, #-64]	; 0xffffffc0
   135bc:	ldr	r3, [ip, r3]
   135c0:	ldr	r3, [r3]
   135c4:	cmp	r3, #0
   135c8:	beq	135f8 <message@@Base+0xa0>
   135cc:	ldr	r3, [pc, #896]	; 13954 <message@@Base+0x3fc>
   135d0:	ldr	r3, [ip, r3]
   135d4:	str	r3, [fp, #-68]	; 0xffffffbc
   135d8:	ldr	r3, [r3, #28]
   135dc:	cmp	r3, #0
   135e0:	beq	135f8 <message@@Base+0xa0>
   135e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   135e8:	ldrb	r7, [r3, #36]	; 0x24
   135ec:	ubfx	r7, r7, #2, #1
   135f0:	cmp	r7, #0
   135f4:	beq	1361c <message@@Base+0xc4>
   135f8:	mov	r4, #1
   135fc:	ldr	ip, [fp, #-88]	; 0xffffffa8
   13600:	mov	r0, r4
   13604:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13608:	ldr	r3, [ip]
   1360c:	cmp	r2, r3
   13610:	bne	13944 <message@@Base+0x3ec>
   13614:	sub	sp, fp, #32
   13618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1361c:	ldr	ip, [fp, #-68]	; 0xffffffbc
   13620:	mov	r0, r5
   13624:	ldr	r3, [pc, #812]	; 13958 <message@@Base+0x400>
   13628:	str	sp, [fp, #-116]	; 0xffffff8c
   1362c:	ldr	r6, [ip, #4]
   13630:	ldr	ip, [fp, #-64]	; 0xffffffc0
   13634:	ldr	r3, [ip, r3]
   13638:	ldr	r3, [r3]
   1363c:	mul	r6, r6, r3
   13640:	lsl	r3, r6, #2
   13644:	add	r3, r3, #10
   13648:	bic	r3, r3, #7
   1364c:	sub	sp, sp, r3
   13650:	bl	27ebc <getTextLength@@Base>
   13654:	ldr	ip, [fp, #-64]	; 0xffffffc0
   13658:	ldr	r3, [pc, #764]	; 1395c <message@@Base+0x404>
   1365c:	str	sp, [fp, #-56]	; 0xffffffc8
   13660:	ldr	r3, [ip, r3]
   13664:	str	r3, [fp, #-112]	; 0xffffff90
   13668:	ldr	ip, [fp, #-112]	; 0xffffff90
   1366c:	add	sl, r0, #1
   13670:	mov	r4, r0
   13674:	lsl	sl, sl, #2
   13678:	add	r3, sl, #10
   1367c:	bic	r3, r3, #7
   13680:	sub	sp, sp, r3
   13684:	ldr	r3, [fp, #-112]	; 0xffffff90
   13688:	mov	r8, sp
   1368c:	ldr	r3, [r3]
   13690:	str	r7, [ip]
   13694:	cmp	r3, #0
   13698:	str	r3, [fp, #-108]	; 0xffffff94
   1369c:	bne	13938 <message@@Base+0x3e0>
   136a0:	mov	r1, r5
   136a4:	lsr	r2, sl, #2
   136a8:	mov	r0, r8
   136ac:	bl	f560 <mbstowcs@plt>
   136b0:	cmp	r4, #0
   136b4:	beq	1380c <message@@Base+0x2b4>
   136b8:	sub	ip, r6, #1
   136bc:	str	ip, [fp, #-100]	; 0xffffff9c
   136c0:	ldr	ip, [pc, #664]	; 13960 <message@@Base+0x408>
   136c4:	ldr	r3, [pc, #664]	; 13964 <message@@Base+0x40c>
   136c8:	add	ip, pc, ip
   136cc:	str	ip, [fp, #-104]	; 0xffffff98
   136d0:	ldr	ip, [fp, #-100]	; 0xffffff9c
   136d4:	ldr	r7, [pc, #652]	; 13968 <message@@Base+0x410>
   136d8:	str	r8, [fp, #-60]	; 0xffffffc4
   136dc:	add	ip, r8, ip, lsl #2
   136e0:	str	ip, [fp, #-96]	; 0xffffffa0
   136e4:	ldr	ip, [fp, #-64]	; 0xffffffc0
   136e8:	add	r7, pc, r7
   136ec:	ldr	r3, [ip, r3]
   136f0:	str	r3, [fp, #-80]	; 0xffffffb0
   136f4:	sub	r3, r6, #2
   136f8:	str	r3, [fp, #-84]	; 0xffffffac
   136fc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13700:	ldr	r9, [fp, #-60]	; 0xffffffc4
   13704:	ldr	r8, [ip]
   13708:	cmp	r8, #100	; 0x64
   1370c:	movge	r8, #100	; 0x64
   13710:	b	13718 <message@@Base+0x1c0>
   13714:	sub	r4, r4, #1
   13718:	mov	r5, r9
   1371c:	add	r9, r9, #4
   13720:	ldr	r0, [r5]
   13724:	bl	f44c <iswspace@plt>
   13728:	cmp	r0, #0
   1372c:	bne	13714 <message@@Base+0x1bc>
   13730:	cmp	r6, r4
   13734:	movcs	r3, r4
   13738:	bcs	13770 <message@@Base+0x218>
   1373c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13740:	cmp	r3, #0
   13744:	mov	sl, r3
   13748:	ble	138e4 <message@@Base+0x38c>
   1374c:	ldr	r9, [fp, #-96]	; 0xffffffa0
   13750:	b	1375c <message@@Base+0x204>
   13754:	subs	sl, sl, #1
   13758:	beq	138e8 <message@@Base+0x390>
   1375c:	ldr	r0, [r9, #-4]!
   13760:	bl	f44c <iswspace@plt>
   13764:	cmp	r0, #0
   13768:	bne	13754 <message@@Base+0x1fc>
   1376c:	add	r3, sl, #1
   13770:	mov	r2, r3
   13774:	mov	r1, r5
   13778:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1377c:	add	r5, r5, r3, lsl #2
   13780:	str	r3, [fp, #-120]	; 0xffffff88
   13784:	str	r5, [fp, #-60]	; 0xffffffc4
   13788:	bl	f620 <wmemcpy@plt>
   1378c:	ldr	r3, [fp, #-120]	; 0xffffff88
   13790:	subs	r4, r4, r3
   13794:	moveq	r2, r3
   13798:	beq	137d8 <message@@Base+0x280>
   1379c:	cmp	r6, r3
   137a0:	bls	13914 <message@@Base+0x3bc>
   137a4:	sub	r2, r3, #1
   137a8:	ldr	ip, [fp, #-56]	; 0xffffffc8
   137ac:	mov	r1, #45	; 0x2d
   137b0:	add	r2, ip, r2, lsl #2
   137b4:	add	r3, r3, #1
   137b8:	str	r1, [r2, #4]!
   137bc:	cmp	r3, r6
   137c0:	bne	137b4 <message@@Base+0x25c>
   137c4:	mov	r2, r6
   137c8:	ldr	ip, [fp, #-56]	; 0xffffffc8
   137cc:	sub	r3, r3, #1
   137d0:	mov	r1, #62	; 0x3e
   137d4:	str	r1, [ip, r3, lsl #2]
   137d8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   137dc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   137e0:	bl	12e9c <writeBrailleCharacters@@Base>
   137e4:	cmp	r0, #0
   137e8:	beq	1390c <message@@Base+0x3b4>
   137ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   137f0:	tst	r3, #2
   137f4:	bne	13844 <message@@Base+0x2ec>
   137f8:	cmp	r4, #0
   137fc:	bne	13870 <message@@Base+0x318>
   13800:	ldr	ip, [fp, #-72]	; 0xffffffb8
   13804:	tst	ip, #4
   13808:	beq	13870 <message@@Base+0x318>
   1380c:	mov	r4, #1
   13810:	ldr	r3, [fp, #-108]	; 0xffffff94
   13814:	cmp	r3, #0
   13818:	bne	1392c <message@@Base+0x3d4>
   1381c:	ldr	ip, [fp, #-108]	; 0xffffff94
   13820:	ldr	r3, [fp, #-112]	; 0xffffff90
   13824:	str	ip, [r3]
   13828:	ldr	sp, [fp, #-116]	; 0xffffff8c
   1382c:	b	135fc <message@@Base+0xa4>
   13830:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13834:	mov	r1, r8
   13838:	bl	3d9a4 <drainBrailleOutput@@Base>
   1383c:	mov	r0, r5
   13840:	bl	37044 <closeTuneDevice@@Base>
   13844:	ldr	r5, [r7, #1036]	; 0x40c
   13848:	cmp	r5, #0
   1384c:	bne	13864 <message@@Base+0x30c>
   13850:	bl	12734 <_start@@Base+0x27e0>
   13854:	cmn	r0, #1
   13858:	beq	13830 <message@@Base+0x2d8>
   1385c:	cmp	r0, #0
   13860:	beq	13844 <message@@Base+0x2ec>
   13864:	cmp	r4, #0
   13868:	bne	136fc <message@@Base+0x1a4>
   1386c:	b	1380c <message@@Base+0x2b4>
   13870:	ldr	ip, [fp, #-64]	; 0xffffffc0
   13874:	sub	r5, fp, #52	; 0x34
   13878:	ldr	r3, [pc, #236]	; 1396c <message@@Base+0x414>
   1387c:	mov	r0, r5
   13880:	ldr	r3, [ip, r3]
   13884:	ldr	r1, [r3]
   13888:	bl	1ebf0 <startTimePeriod@@Base>
   1388c:	str	r4, [fp, #-92]	; 0xffffffa4
   13890:	ldr	sl, [fp, #-68]	; 0xffffffbc
   13894:	ldr	r9, [fp, #-104]	; 0xffffff98
   13898:	b	138c8 <message@@Base+0x370>
   1389c:	mov	r1, r8
   138a0:	mov	r0, sl
   138a4:	bl	3d9a4 <drainBrailleOutput@@Base>
   138a8:	mov	r0, r5
   138ac:	mov	r1, r4
   138b0:	bl	1ebf8 <afterTimePeriod@@Base>
   138b4:	cmp	r0, #0
   138b8:	bne	138d4 <message@@Base+0x37c>
   138bc:	bl	12734 <_start@@Base+0x27e0>
   138c0:	cmn	r0, #1
   138c4:	bne	138d4 <message@@Base+0x37c>
   138c8:	ldr	r4, [r9, #1036]	; 0x40c
   138cc:	cmp	r4, #0
   138d0:	beq	1389c <message@@Base+0x344>
   138d4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   138d8:	cmp	r4, #0
   138dc:	bne	136fc <message@@Base+0x1a4>
   138e0:	b	1380c <message@@Base+0x2b4>
   138e4:	bne	1376c <message@@Base+0x214>
   138e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   138ec:	b	13770 <message@@Base+0x218>
   138f0:	ldr	r3, [pc, #120]	; 13970 <message@@Base+0x418>
   138f4:	mov	r1, r5
   138f8:	ldr	ip, [fp, #-64]	; 0xffffffc0
   138fc:	mov	r2, #1
   13900:	ldr	r0, [ip, r3]
   13904:	bl	46780 <sayString@@Base>
   13908:	b	135b4 <message@@Base+0x5c>
   1390c:	mov	r4, r0
   13910:	b	13810 <message@@Base+0x2b8>
   13914:	mov	r2, r3
   13918:	b	137c8 <message@@Base+0x270>
   1391c:	ldr	r3, [pc, #80]	; 13974 <message@@Base+0x41c>
   13920:	add	r3, pc, r3
   13924:	str	r3, [fp, #-76]	; 0xffffffb4
   13928:	b	13598 <message@@Base+0x40>
   1392c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13930:	bl	4cb3c <api_link@@Base>
   13934:	b	1381c <message@@Base+0x2c4>
   13938:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1393c:	bl	4cc30 <api_unlink@@Base>
   13940:	b	136a0 <message@@Base+0x148>
   13944:	bl	f950 <__stack_chk_fail@plt>
   13948:	andeq	pc, r5, ip, lsl #10
   1394c:			; <UNDEFINED> instruction: 0x000003b4
   13950:	andeq	r0, r0, ip, ror r4
   13954:	andeq	r0, r0, r8, asr #10
   13958:	andeq	r0, r0, r0, asr #7
   1395c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13960:	andeq	pc, r5, ip, ror sl	; <UNPREDICTABLE>
   13964:	strdeq	r0, [r0], -r8
   13968:	andeq	pc, r5, ip, asr sl	; <UNPREDICTABLE>
   1396c:	andeq	r0, r0, r0, lsr r4
   13970:	andeq	r0, r0, r4, ror #9
   13974:	andeq	fp, r3, r4, ror #7
   13978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1397c:	add	fp, sp, #32
   13980:	ldr	r4, [pc, #4064]	; 14968 <message@@Base+0x1410>
   13984:	sub	sp, sp, #580	; 0x244
   13988:	ldr	r1, [pc, #4060]	; 1496c <message@@Base+0x1414>
   1398c:	add	r4, pc, r4
   13990:	ldr	r2, [pc, #4056]	; 14970 <message@@Base+0x1418>
   13994:	ldr	r3, [pc, #4056]	; 14974 <message@@Base+0x141c>
   13998:	ldr	r1, [r4, r1]
   1399c:	add	r2, pc, r2
   139a0:	str	r1, [fp, #-528]	; 0xfffffdf0
   139a4:	ldr	r6, [fp, #-528]	; 0xfffffdf0
   139a8:	ldr	r1, [r2, #1084]	; 0x43c
   139ac:	ldr	r2, [r6]
   139b0:	cmp	r1, #0
   139b4:	str	r2, [fp, #-40]	; 0xffffffd8
   139b8:	ldr	sl, [r4, r3]
   139bc:	ldr	r3, [sl]
   139c0:	ldr	r6, [r3, #8]
   139c4:	ldr	r3, [r3, #12]
   139c8:	str	r6, [fp, #-532]	; 0xfffffdec
   139cc:	str	r3, [fp, #-536]	; 0xfffffde8
   139d0:	beq	13c94 <message@@Base+0x73c>
   139d4:	ldr	r3, [pc, #3996]	; 14978 <message@@Base+0x1420>
   139d8:	mov	r0, #74	; 0x4a
   139dc:	ldr	r5, [r4, r3]
   139e0:	ldrb	r3, [r5, #48]	; 0x30
   139e4:	str	r0, [fp, #-524]	; 0xfffffdf4
   139e8:	tst	r3, #2
   139ec:	bne	13c80 <message@@Base+0x728>
   139f0:	cmn	r0, #1
   139f4:	beq	13a54 <message@@Base+0x4fc>
   139f8:	ldr	r3, [pc, #4036]	; 149c4 <message@@Base+0x146c>
   139fc:	ldr	r3, [r4, r3]
   13a00:	ldrb	r3, [r3, #32]
   13a04:	cmp	r3, #0
   13a08:	bne	13c54 <message@@Base+0x6fc>
   13a0c:	bl	2bdd0 <logCommand@@Base>
   13a10:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   13a14:	uxth	r3, r3
   13a18:	cmp	r3, #76	; 0x4c
   13a1c:	bne	13a54 <message@@Base+0x4fc>
   13a20:	ldr	r4, [pc, #3924]	; 1497c <message@@Base+0x1424>
   13a24:	add	r4, pc, r4
   13a28:	ldr	r5, [r4, #1088]	; 0x440
   13a2c:	cmp	r5, #0
   13a30:	beq	13d0c <message@@Base+0x7b4>
   13a34:	mov	r0, #0
   13a38:	ldr	r6, [fp, #-528]	; 0xfffffdf0
   13a3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13a40:	ldr	r3, [r6]
   13a44:	cmp	r2, r3
   13a48:	bne	16de4 <message@@Base+0x388c>
   13a4c:	sub	sp, fp, #32
   13a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a54:	ldr	r6, [pc, #3876]	; 14980 <message@@Base+0x1428>
   13a58:	add	r6, pc, r6
   13a5c:	ldr	r3, [r6, #1088]	; 0x440
   13a60:	cmp	r3, #0
   13a64:	bne	13cb0 <message@@Base+0x758>
   13a68:	sub	r6, fp, #524	; 0x20c
   13a6c:	mov	r1, #0
   13a70:	mov	r0, r6
   13a74:	bl	131a0 <handleAutorepeat@@Base>
   13a78:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   13a7c:	cmn	r3, #1
   13a80:	beq	13a34 <message@@Base+0x4dc>
   13a84:	mov	r0, r6
   13a88:	bl	392c4 <executeScreenCommand@@Base>
   13a8c:	cmp	r0, #0
   13a90:	bne	15bd0 <message@@Base+0x2678>
   13a94:	ldr	r7, [fp, #-524]	; 0xfffffdf4
   13a98:	uxth	r3, r7
   13a9c:	cmp	r3, #106	; 0x6a
   13aa0:	addls	pc, pc, r3, lsl #2
   13aa4:	b	1590c <message@@Base+0x23b4>
   13aa8:	b	14cf0 <message@@Base+0x1798>
   13aac:	b	14c9c <message@@Base+0x1744>
   13ab0:	b	14768 <message@@Base+0x1210>
   13ab4:	b	14804 <message@@Base+0x12ac>
   13ab8:	b	147b4 <message@@Base+0x125c>
   13abc:	b	14798 <message@@Base+0x1240>
   13ac0:	b	1477c <message@@Base+0x1224>
   13ac4:	b	14ccc <message@@Base+0x1774>
   13ac8:	b	14cb0 <message@@Base+0x1758>
   13acc:	b	14ce8 <message@@Base+0x1790>
   13ad0:	b	1483c <message@@Base+0x12e4>
   13ad4:	b	14694 <message@@Base+0x113c>
   13ad8:	b	14664 <message@@Base+0x110c>
   13adc:	b	1465c <message@@Base+0x1104>
   13ae0:	b	14208 <message@@Base+0xcb0>
   13ae4:	b	14654 <message@@Base+0x10fc>
   13ae8:	b	14170 <message@@Base+0xc18>
   13aec:	b	14fc8 <message@@Base+0x1a70>
   13af0:	b	14358 <message@@Base+0xe00>
   13af4:	b	14878 <message@@Base+0x1320>
   13af8:	b	14844 <message@@Base+0x12ec>
   13afc:	b	14c74 <message@@Base+0x171c>
   13b00:	b	14c4c <message@@Base+0x16f4>
   13b04:	b	14be4 <message@@Base+0x168c>
   13b08:	b	14b54 <message@@Base+0x15fc>
   13b0c:	b	13d2c <message@@Base+0x7d4>
   13b10:	b	13fbc <message@@Base+0xa64>
   13b14:	b	151a4 <message@@Base+0x1c4c>
   13b18:	b	15368 <message@@Base+0x1e10>
   13b1c:	b	14150 <message@@Base+0xbf8>
   13b20:	b	15358 <message@@Base+0x1e00>
   13b24:	b	15014 <message@@Base+0x1abc>
   13b28:	b	15658 <message@@Base+0x2100>
   13b2c:	b	153a8 <message@@Base+0x1e50>
   13b30:	b	151c4 <message@@Base+0x1c6c>
   13b34:	b	14f2c <message@@Base+0x19d4>
   13b38:	b	1513c <message@@Base+0x1be4>
   13b3c:	b	15108 <message@@Base+0x1bb0>
   13b40:	b	15170 <message@@Base+0x1c18>
   13b44:	b	150e0 <message@@Base+0x1b88>
   13b48:	b	150a8 <message@@Base+0x1b50>
   13b4c:	b	15074 <message@@Base+0x1b1c>
   13b50:	b	15038 <message@@Base+0x1ae0>
   13b54:	b	156c8 <message@@Base+0x2170>
   13b58:	b	1568c <message@@Base+0x2134>
   13b5c:	b	157ac <message@@Base+0x2254>
   13b60:	b	155bc <message@@Base+0x2064>
   13b64:	b	15580 <message@@Base+0x2028>
   13b68:	b	15324 <message@@Base+0x1dcc>
   13b6c:	b	152dc <message@@Base+0x1d84>
   13b70:	b	15294 <message@@Base+0x1d3c>
   13b74:	b	15264 <message@@Base+0x1d0c>
   13b78:	b	15484 <message@@Base+0x1f2c>
   13b7c:	b	15458 <message@@Base+0x1f00>
   13b80:	b	153fc <message@@Base+0x1ea4>
   13b84:	b	1590c <message@@Base+0x23b4>
   13b88:	b	1590c <message@@Base+0x23b4>
   13b8c:	b	1590c <message@@Base+0x23b4>
   13b90:	b	1590c <message@@Base+0x23b4>
   13b94:	b	1590c <message@@Base+0x23b4>
   13b98:	b	1590c <message@@Base+0x23b4>
   13b9c:	b	153d0 <message@@Base+0x1e78>
   13ba0:	b	15508 <message@@Base+0x1fb0>
   13ba4:	b	154c8 <message@@Base+0x1f70>
   13ba8:	b	15544 <message@@Base+0x1fec>
   13bac:	b	14618 <message@@Base+0x10c0>
   13bb0:	b	145d0 <message@@Base+0x1078>
   13bb4:	b	14588 <message@@Base+0x1030>
   13bb8:	b	158c4 <message@@Base+0x236c>
   13bbc:	b	157e8 <message@@Base+0x2290>
   13bc0:	b	15858 <message@@Base+0x2300>
   13bc4:	b	15240 <message@@Base+0x1ce8>
   13bc8:	b	15200 <message@@Base+0x1ca8>
   13bcc:	b	156fc <message@@Base+0x21a4>
   13bd0:	b	15830 <message@@Base+0x22d8>
   13bd4:	b	15000 <message@@Base+0x1aa8>
   13bd8:	b	1590c <message@@Base+0x23b4>
   13bdc:	b	14308 <message@@Base+0xdb0>
   13be0:	b	151f8 <message@@Base+0x1ca0>
   13be4:	b	15738 <message@@Base+0x21e0>
   13be8:	b	15730 <message@@Base+0x21d8>
   13bec:	b	15740 <message@@Base+0x21e8>
   13bf0:	b	1590c <message@@Base+0x23b4>
   13bf4:	b	14e7c <message@@Base+0x1924>
   13bf8:	b	15624 <message@@Base+0x20cc>
   13bfc:	b	155f0 <message@@Base+0x2098>
   13c00:	b	14f94 <message@@Base+0x1a3c>
   13c04:	b	14f60 <message@@Base+0x1a08>
   13c08:	b	15890 <message@@Base+0x2338>
   13c0c:	b	1587c <message@@Base+0x2324>
   13c10:	b	14fd4 <message@@Base+0x1a7c>
   13c14:	b	14704 <message@@Base+0x11ac>
   13c18:	b	146f4 <message@@Base+0x119c>
   13c1c:	b	146e0 <message@@Base+0x1188>
   13c20:	b	1441c <message@@Base+0xec4>
   13c24:	b	146b4 <message@@Base+0x115c>
   13c28:	b	143ac <message@@Base+0xe54>
   13c2c:	b	1578c <message@@Base+0x2234>
   13c30:	b	14eb0 <message@@Base+0x1958>
   13c34:	b	14dc4 <message@@Base+0x186c>
   13c38:	b	14d10 <message@@Base+0x17b8>
   13c3c:	b	14ab4 <message@@Base+0x155c>
   13c40:	b	14a78 <message@@Base+0x1520>
   13c44:	b	14a64 <message@@Base+0x150c>
   13c48:	b	14a24 <message@@Base+0x14cc>
   13c4c:	b	148cc <message@@Base+0x1374>
   13c50:	b	14898 <message@@Base+0x1340>
   13c54:	uxth	r3, r0
   13c58:	sub	r3, r3, #1
   13c5c:	cmp	r3, #5
   13c60:	addls	pc, pc, r3, lsl #2
   13c64:	b	13a0c <message@@Base+0x4b4>
   13c68:	b	13cec <message@@Base+0x794>
   13c6c:	b	13d04 <message@@Base+0x7ac>
   13c70:	b	13a0c <message@@Base+0x4b4>
   13c74:	b	13a0c <message@@Base+0x4b4>
   13c78:	b	13ccc <message@@Base+0x774>
   13c7c:	b	13cfc <message@@Base+0x7a4>
   13c80:	bfc	r3, #1, #1
   13c84:	strb	r3, [r5, #48]	; 0x30
   13c88:	bl	1321c <highlightWindow@@Base>
   13c8c:	ldr	r0, [fp, #-524]	; 0xfffffdf4
   13c90:	b	139f0 <message@@Base+0x498>
   13c94:	bl	392e4 <getScreenCommandContext@@Base>
   13c98:	ldr	r3, [pc, #3288]	; 14978 <message@@Base+0x1420>
   13c9c:	ldr	r5, [r4, r3]
   13ca0:	mov	r1, r0
   13ca4:	mov	r0, r5
   13ca8:	bl	3e004 <readBrailleCommand@@Base>
   13cac:	b	139e0 <message@@Base+0x488>
   13cb0:	ldr	r1, [pc, #3276]	; 14984 <message@@Base+0x142c>
   13cb4:	mov	r0, #7
   13cb8:	add	r1, pc, r1
   13cbc:	bl	1c634 <logMessage@@Base>
   13cc0:	mov	r3, #0
   13cc4:	str	r3, [r6, #1088]	; 0x440
   13cc8:	b	13a68 <message@@Base+0x510>
   13ccc:	mov	r6, #1
   13cd0:	lsr	r3, r0, #16
   13cd4:	orr	r6, r6, r3, lsl #16
   13cd8:	mov	r1, r6
   13cdc:	bl	2be34 <logTransformedCommand@@Base>
   13ce0:	mov	r3, r6
   13ce4:	str	r6, [fp, #-524]	; 0xfffffdf4
   13ce8:	b	13a14 <message@@Base+0x4bc>
   13cec:	mov	r6, #5
   13cf0:	cmp	r6, r0
   13cf4:	bne	13cd0 <message@@Base+0x778>
   13cf8:	b	13a0c <message@@Base+0x4b4>
   13cfc:	mov	r6, #2
   13d00:	b	13cd0 <message@@Base+0x778>
   13d04:	mov	r6, #6
   13d08:	b	13cf0 <message@@Base+0x798>
   13d0c:	ldr	r1, [pc, #3188]	; 14988 <message@@Base+0x1430>
   13d10:	mov	r0, #7
   13d14:	add	r1, pc, r1
   13d18:	bl	1c634 <logMessage@@Base>
   13d1c:	mov	r3, #1
   13d20:	mov	r0, r5
   13d24:	str	r3, [r4, #1088]	; 0x440
   13d28:	b	13a38 <message@@Base+0x4e0>
   13d2c:	ldr	r3, [sl]
   13d30:	mov	r8, #3
   13d34:	ldr	r1, [pc, #3276]	; 14a08 <message@@Base+0x14b0>
   13d38:	str	sp, [fp, #-544]	; 0xfffffde0
   13d3c:	ldr	ip, [r3, #8]
   13d40:	ldr	r6, [r4, r1]
   13d44:	ldr	r3, [r3, #12]
   13d48:	ldr	r2, [pc, #3192]	; 149c8 <message@@Base+0x1470>
   13d4c:	str	ip, [fp, #-552]	; 0xfffffdd8
   13d50:	str	r3, [fp, #-556]	; 0xfffffdd4
   13d54:	ldrsh	r3, [r6, #2]
   13d58:	ldr	ip, [pc, #3116]	; 1498c <message@@Base+0x1434>
   13d5c:	ldr	r9, [r4, r2]
   13d60:	lsl	r3, r3, r8
   13d64:	add	ip, pc, ip
   13d68:	add	r3, r3, #8
   13d6c:	str	ip, [fp, #-540]	; 0xfffffde4
   13d70:	sub	sp, sp, r3
   13d74:	str	r5, [fp, #-548]	; 0xfffffddc
   13d78:	add	r7, sp, #24
   13d7c:	ldr	r0, [r9]
   13d80:	bl	11e00 <_start@@Base+0x1eac>
   13d84:	cmp	r0, #0
   13d88:	bne	13dd8 <message@@Base+0x880>
   13d8c:	ldr	r3, [sl]
   13d90:	ldr	r3, [r3, #12]
   13d94:	cmp	r3, #0
   13d98:	beq	15ce8 <message@@Base+0x2790>
   13d9c:	cmp	r8, #0
   13da0:	sub	r8, r8, #1
   13da4:	ble	13db4 <message@@Base+0x85c>
   13da8:	ldr	r3, [pc, #3040]	; 14990 <message@@Base+0x1438>
   13dac:	ldr	r0, [r4, r3]
   13db0:	bl	37160 <playTune@@Base>
   13db4:	ldr	r3, [pc, #3080]	; 149c4 <message@@Base+0x146c>
   13db8:	ldr	r3, [r4, r3]
   13dbc:	ldrb	r3, [r3, #32]
   13dc0:	cmp	r3, #0
   13dc4:	bne	15a48 <message@@Base+0x24f0>
   13dc8:	bl	10a58 <_start@@Base+0xb04>
   13dcc:	ldrsh	r0, [r6, #2]
   13dd0:	sub	r0, r0, #1
   13dd4:	bl	11d3c <_start@@Base+0x1de8>
   13dd8:	bl	11f1c <_start@@Base+0x1fc8>
   13ddc:	ldr	r1, [sl]
   13de0:	ldrsh	ip, [r6, #2]
   13de4:	mov	r3, #1
   13de8:	ldr	r2, [r1, #8]
   13dec:	ldrsh	r1, [r1, #12]
   13df0:	rsb	ip, r2, ip
   13df4:	str	r7, [sp]
   13df8:	cmp	r0, ip
   13dfc:	movlt	r5, r0
   13e00:	movge	r5, ip
   13e04:	sxth	r0, r2
   13e08:	sxth	r2, r5
   13e0c:	bl	39094 <readScreen@@Base>
   13e10:	subs	r3, r5, #1
   13e14:	bmi	13e44 <message@@Base+0x8ec>
   13e18:	ldr	r2, [r7, r3, lsl #3]
   13e1c:	cmp	r2, #32
   13e20:	bne	13e44 <message@@Base+0x8ec>
   13e24:	add	r2, r7, r5, lsl #3
   13e28:	b	13e3c <message@@Base+0x8e4>
   13e2c:	sub	r2, r2, #8
   13e30:	ldr	r1, [r2, #-8]
   13e34:	cmp	r1, #32
   13e38:	bne	13e44 <message@@Base+0x8ec>
   13e3c:	subs	r3, r3, #1
   13e40:	bcs	13e2c <message@@Base+0x8d4>
   13e44:	ldrb	r2, [r6, #12]
   13e48:	tst	r2, #1
   13e4c:	beq	13e84 <message@@Base+0x92c>
   13e50:	ldr	r2, [pc, #2924]	; 149c4 <message@@Base+0x146c>
   13e54:	ldr	r2, [r4, r2]
   13e58:	ldrb	r2, [r2, #2]
   13e5c:	cmp	r2, #0
   13e60:	beq	13e84 <message@@Base+0x92c>
   13e64:	ldr	r2, [sl]
   13e68:	ldrb	r1, [r2, #5]
   13e6c:	cmp	r1, #0
   13e70:	bne	13e84 <message@@Base+0x92c>
   13e74:	ldrsh	r0, [r6, #6]
   13e78:	ldr	r1, [r2, #12]
   13e7c:	cmp	r0, r1
   13e80:	beq	15b78 <message@@Base+0x2620>
   13e84:	cmp	r3, #0
   13e88:	blt	13d7c <message@@Base+0x824>
   13e8c:	ldr	r5, [fp, #-548]	; 0xfffffddc
   13e90:	ldr	r2, [sl]
   13e94:	ldr	sp, [fp, #-544]	; 0xfffffde0
   13e98:	ldr	r3, [r2, #8]
   13e9c:	ldr	r0, [r2, #12]
   13ea0:	ldr	r6, [fp, #-532]	; 0xfffffdec
   13ea4:	cmp	r6, r3
   13ea8:	beq	15990 <message@@Base+0x2438>
   13eac:	ldrb	r6, [r2, #4]
   13eb0:	mov	ip, #0
   13eb4:	ldr	r1, [pc, #2776]	; 14994 <message@@Base+0x143c>
   13eb8:	cmp	r6, ip
   13ebc:	str	r3, [r2, #16]
   13ec0:	add	r1, pc, r1
   13ec4:	str	r0, [r2, #20]
   13ec8:	str	ip, [r1]
   13ecc:	beq	13efc <message@@Base+0x9a4>
   13ed0:	ldr	r3, [r1, #1048]	; 0x418
   13ed4:	cmp	r3, ip
   13ed8:	beq	13efc <message@@Base+0x9a4>
   13edc:	ldr	r1, [pc, #2852]	; 14a08 <message@@Base+0x14b0>
   13ee0:	ldr	r3, [pc, #2736]	; 14998 <message@@Base+0x1440>
   13ee4:	ldr	r1, [r4, r1]
   13ee8:	add	r3, pc, r3
   13eec:	ldr	r3, [r3]
   13ef0:	ldr	r1, [r1, #8]
   13ef4:	cmp	r1, r3
   13ef8:	beq	15b10 <message@@Base+0x25b8>
   13efc:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   13f00:	tst	r3, #65280	; 0xff00
   13f04:	bne	13fb4 <message@@Base+0xa5c>
   13f08:	tst	r3, #262144	; 0x40000
   13f0c:	beq	13fb4 <message@@Base+0xa5c>
   13f10:	ldr	r1, [pc, #2764]	; 149e4 <message@@Base+0x148c>
   13f14:	ldr	r3, [pc, #2796]	; 14a08 <message@@Base+0x14b0>
   13f18:	ldr	r2, [sl]
   13f1c:	ldr	r1, [r4, r1]
   13f20:	ldr	r6, [r4, r3]
   13f24:	ldr	ip, [r2, #12]
   13f28:	ldr	r3, [r2, #8]
   13f2c:	ldr	r0, [r1]
   13f30:	ldr	r1, [r5, #4]
   13f34:	ldrsh	r7, [r6]
   13f38:	add	r0, r3, r0
   13f3c:	ldrsh	r8, [r6, #2]
   13f40:	add	r1, ip, r1
   13f44:	ldrsh	r2, [r6, #4]
   13f48:	cmp	r1, r7
   13f4c:	movcs	r1, r7
   13f50:	cmp	r0, r8
   13f54:	movcs	r0, r8
   13f58:	ldrsh	r7, [r6, #6]
   13f5c:	cmp	r3, r2
   13f60:	sub	r0, r0, #1
   13f64:	sub	r1, r1, #1
   13f68:	bgt	13f84 <message@@Base+0xa2c>
   13f6c:	cmp	r0, r2
   13f70:	blt	13f84 <message@@Base+0xa2c>
   13f74:	cmp	ip, r7
   13f78:	bgt	13f84 <message@@Base+0xa2c>
   13f7c:	cmp	r1, r7
   13f80:	bge	13fb4 <message@@Base+0xa5c>
   13f84:	cmp	r3, r2
   13f88:	movlt	r3, r2
   13f8c:	cmp	ip, r7
   13f90:	movlt	ip, r7
   13f94:	cmp	r0, r3
   13f98:	movge	r0, r3
   13f9c:	cmp	r1, ip
   13fa0:	movge	r1, ip
   13fa4:	ldr	r2, [r6, #8]
   13fa8:	bl	391c8 <routeCursor@@Base>
   13fac:	cmp	r0, #0
   13fb0:	bne	159a0 <message@@Base+0x2448>
   13fb4:	mov	r0, #1
   13fb8:	b	13a38 <message@@Base+0x4e0>
   13fbc:	ldr	r3, [sl]
   13fc0:	mov	r8, #3
   13fc4:	ldr	r1, [pc, #2620]	; 14a08 <message@@Base+0x14b0>
   13fc8:	str	sp, [fp, #-548]	; 0xfffffddc
   13fcc:	ldr	ip, [r3, #8]
   13fd0:	ldr	r6, [r4, r1]
   13fd4:	ldr	r3, [r3, #12]
   13fd8:	ldr	r2, [pc, #2536]	; 149c8 <message@@Base+0x1470>
   13fdc:	str	ip, [fp, #-552]	; 0xfffffdd8
   13fe0:	str	r3, [fp, #-556]	; 0xfffffdd4
   13fe4:	ldrsh	r3, [r6, #2]
   13fe8:	ldr	r9, [r4, r2]
   13fec:	ldr	ip, [pc, #2472]	; 1499c <message@@Base+0x1444>
   13ff0:	lsl	r3, r3, r8
   13ff4:	add	r3, r3, #8
   13ff8:	add	ip, pc, ip
   13ffc:	sub	sp, sp, r3
   14000:	str	ip, [fp, #-544]	; 0xfffffde0
   14004:	add	r7, sp, #24
   14008:	str	r9, [fp, #-540]	; 0xfffffde4
   1400c:	ldr	ip, [fp, #-540]	; 0xfffffde4
   14010:	ldr	r0, [ip]
   14014:	bl	11074 <_start@@Base+0x1120>
   14018:	cmp	r0, #0
   1401c:	bne	14078 <message@@Base+0xb20>
   14020:	ldr	r2, [sl]
   14024:	ldrsh	r1, [r6]
   14028:	ldr	r3, [r5, #4]
   1402c:	ldr	r2, [r2, #12]
   14030:	rsb	r3, r3, r1
   14034:	cmp	r2, r3
   14038:	bcs	15cc4 <message@@Base+0x276c>
   1403c:	cmp	r8, #0
   14040:	sub	r8, r8, #1
   14044:	ble	14054 <message@@Base+0xafc>
   14048:	ldr	r3, [pc, #2384]	; 149a0 <message@@Base+0x1448>
   1404c:	ldr	r0, [r4, r3]
   14050:	bl	37160 <playTune@@Base>
   14054:	ldr	r3, [pc, #2408]	; 149c4 <message@@Base+0x146c>
   14058:	ldr	r3, [r4, r3]
   1405c:	ldrb	r3, [r3, #32]
   14060:	cmp	r3, #0
   14064:	bne	15a3c <message@@Base+0x24e4>
   14068:	bl	10a9c <_start@@Base+0xb48>
   1406c:	ldr	r3, [sl]
   14070:	mov	r0, #0
   14074:	str	r0, [r3, #8]
   14078:	bl	11f1c <_start@@Base+0x1fc8>
   1407c:	ldr	r1, [sl]
   14080:	ldrsh	ip, [r6, #2]
   14084:	mov	r3, #1
   14088:	ldr	r2, [r1, #8]
   1408c:	ldrsh	r1, [r1, #12]
   14090:	rsb	ip, r2, ip
   14094:	str	r7, [sp]
   14098:	cmp	r0, ip
   1409c:	movlt	r9, r0
   140a0:	movge	r9, ip
   140a4:	sxth	r0, r2
   140a8:	sxth	r2, r9
   140ac:	bl	39094 <readScreen@@Base>
   140b0:	cmp	r9, #0
   140b4:	ble	15bec <message@@Base+0x2694>
   140b8:	ldr	r3, [r7]
   140bc:	cmp	r3, #32
   140c0:	bne	15bec <message@@Base+0x2694>
   140c4:	mov	r2, r7
   140c8:	mov	r3, #0
   140cc:	b	140dc <message@@Base+0xb84>
   140d0:	ldr	r1, [r2, #8]!
   140d4:	cmp	r1, #32
   140d8:	bne	140e8 <message@@Base+0xb90>
   140dc:	add	r3, r3, #1
   140e0:	cmp	r3, r9
   140e4:	bne	140d0 <message@@Base+0xb78>
   140e8:	ldrb	r2, [r6, #12]
   140ec:	tst	r2, #1
   140f0:	beq	14128 <message@@Base+0xbd0>
   140f4:	ldr	r2, [pc, #2248]	; 149c4 <message@@Base+0x146c>
   140f8:	ldr	r2, [r4, r2]
   140fc:	ldrb	r2, [r2, #2]
   14100:	cmp	r2, #0
   14104:	beq	14128 <message@@Base+0xbd0>
   14108:	ldr	r2, [sl]
   1410c:	ldrb	r1, [r2, #5]
   14110:	cmp	r1, #0
   14114:	bne	14128 <message@@Base+0xbd0>
   14118:	ldrsh	r0, [r6, #6]
   1411c:	ldr	r1, [r2, #12]
   14120:	cmp	r0, r1
   14124:	beq	15ba4 <message@@Base+0x264c>
   14128:	cmp	r3, r9
   1412c:	bge	1400c <message@@Base+0xab4>
   14130:	ldr	r2, [sl]
   14134:	ldr	sp, [fp, #-548]	; 0xfffffddc
   14138:	ldr	r3, [r2, #8]
   1413c:	ldr	r0, [r2, #12]
   14140:	b	13ea0 <message@@Base+0x948>
   14144:	ldr	r1, [r2, #12]
   14148:	cmp	r1, r0
   1414c:	bne	1502c <message@@Base+0x1ad4>
   14150:	mov	r0, #1
   14154:	bl	116b4 <_start@@Base+0x1760>
   14158:	cmp	r0, #0
   1415c:	beq	16410 <message@@Base+0x2eb8>
   14160:	ldr	r2, [sl]
   14164:	ldr	r3, [r2, #8]
   14168:	ldr	r0, [r2, #12]
   1416c:	b	13ea0 <message@@Base+0x948>
   14170:	mov	r8, #1
   14174:	ldr	r1, [pc, #2188]	; 14a08 <message@@Base+0x14b0>
   14178:	mov	r7, sp
   1417c:	ldr	r2, [sl]
   14180:	mov	r0, #0
   14184:	mov	r3, #1
   14188:	ldr	r6, [r4, r1]
   1418c:	ldrsh	r1, [r2, #12]
   14190:	ldrsh	r2, [r6, #2]
   14194:	lsl	ip, r2, #3
   14198:	add	ip, ip, #8
   1419c:	sub	sp, sp, ip
   141a0:	add	r9, sp, #24
   141a4:	str	r9, [sp]
   141a8:	bl	39094 <readScreen@@Base>
   141ac:	ldrsh	r1, [r6, #2]
   141b0:	cmp	r1, #0
   141b4:	beq	141e8 <message@@Base+0xc90>
   141b8:	ldr	r3, [r9]
   141bc:	cmp	r3, #32
   141c0:	beq	15c24 <message@@Base+0x26cc>
   141c4:	mov	r3, r9
   141c8:	mov	r0, #0
   141cc:	b	141dc <message@@Base+0xc84>
   141d0:	ldr	r2, [r3, #8]!
   141d4:	cmp	r2, #32
   141d8:	beq	15c28 <message@@Base+0x26d0>
   141dc:	add	r0, r0, #1
   141e0:	cmp	r0, r1
   141e4:	bcc	141d0 <message@@Base+0xc78>
   141e8:	ldr	r3, [pc, #2092]	; 14a1c <message@@Base+0x14c4>
   141ec:	ldr	r0, [r4, r3]
   141f0:	bl	37160 <playTune@@Base>
   141f4:	ldr	r2, [sl]
   141f8:	mov	sp, r7
   141fc:	ldr	r3, [r2, #8]
   14200:	ldr	r0, [r2, #12]
   14204:	b	13ea0 <message@@Base+0x948>
   14208:	mov	ip, #1
   1420c:	ldr	r2, [pc, #2036]	; 14a08 <message@@Base+0x14b0>
   14210:	str	sp, [fp, #-540]	; 0xfffffde4
   14214:	ldr	r3, [sl]
   14218:	ldr	r6, [r4, r2]
   1421c:	ldr	r7, [r3, #12]
   14220:	ldrsh	r2, [r6, #2]
   14224:	cmp	r7, #0
   14228:	lsl	r3, r2, #3
   1422c:	add	r3, r3, #8
   14230:	sub	sp, sp, r3
   14234:	add	r8, sp, #24
   14238:	blt	142e8 <message@@Base+0xd90>
   1423c:	ldrsh	r1, [r6]
   14240:	ldr	r3, [r5, #4]
   14244:	rsb	r3, r3, r1
   14248:	cmp	r7, r3
   1424c:	bgt	142e8 <message@@Base+0xd90>
   14250:	mov	r9, #1
   14254:	str	r4, [fp, #-544]	; 0xfffffde0
   14258:	mov	r4, r9
   1425c:	mov	r9, r6
   14260:	mov	r6, ip
   14264:	str	r8, [sp]
   14268:	mov	r0, #0
   1426c:	sxth	r1, r7
   14270:	mov	r3, #1
   14274:	bl	39094 <readScreen@@Base>
   14278:	ldrsh	r2, [r9, #2]
   1427c:	cmp	r2, #0
   14280:	ble	15b70 <message@@Base+0x2618>
   14284:	ldr	r3, [r8]
   14288:	cmp	r3, #32
   1428c:	bne	15b70 <message@@Base+0x2618>
   14290:	mov	r1, r8
   14294:	mov	r3, #0
   14298:	b	142a8 <message@@Base+0xd50>
   1429c:	ldr	r0, [r1, #8]!
   142a0:	cmp	r0, #32
   142a4:	bne	142b4 <message@@Base+0xd5c>
   142a8:	add	r3, r3, #1
   142ac:	cmp	r3, r2
   142b0:	blt	1429c <message@@Base+0xd44>
   142b4:	subs	r1, r3, r2
   142b8:	rsbs	r3, r1, #0
   142bc:	adcs	r3, r3, r1
   142c0:	cmp	r3, r4
   142c4:	beq	15a2c <message@@Base+0x24d4>
   142c8:	adds	r7, r7, r6
   142cc:	bmi	142e4 <message@@Base+0xd8c>
   142d0:	ldrsh	r1, [r9]
   142d4:	ldr	r3, [r5, #4]
   142d8:	rsb	r3, r3, r1
   142dc:	cmp	r3, r7
   142e0:	bge	14264 <message@@Base+0xd0c>
   142e4:	ldr	r4, [fp, #-544]	; 0xfffffde0
   142e8:	ldr	r3, [pc, #1744]	; 149c0 <message@@Base+0x1468>
   142ec:	ldr	r0, [r4, r3]
   142f0:	bl	37160 <playTune@@Base>
   142f4:	ldr	r2, [sl]
   142f8:	ldr	sp, [fp, #-540]	; 0xfffffde4
   142fc:	ldr	r3, [r2, #8]
   14300:	ldr	r0, [r2, #12]
   14304:	b	13ea0 <message@@Base+0x948>
   14308:	mov	r2, #65536	; 0x10000
   1430c:	and	r7, r7, #196608	; 0x30000
   14310:	cmp	r7, #65536	; 0x10000
   14314:	beq	15c0c <message@@Base+0x26b4>
   14318:	cmp	r7, #131072	; 0x20000
   1431c:	beq	15bf4 <message@@Base+0x269c>
   14320:	cmp	r7, #0
   14324:	beq	15c40 <message@@Base+0x26e8>
   14328:	ldr	r3, [pc, #1652]	; 149a4 <message@@Base+0x144c>
   1432c:	add	r3, pc, r3
   14330:	ldr	r3, [r3, #1072]	; 0x430
   14334:	tst	r3, r2
   14338:	beq	15be0 <message@@Base+0x2688>
   1433c:	ldr	r3, [pc, #1740]	; 14a10 <message@@Base+0x14b8>
   14340:	ldr	r0, [r4, r3]
   14344:	bl	37160 <playTune@@Base>
   14348:	ldr	r2, [sl]
   1434c:	ldr	r3, [r2, #8]
   14350:	ldr	r0, [r2, #12]
   14354:	b	13ea0 <message@@Base+0x948>
   14358:	mov	r6, #1
   1435c:	str	r6, [fp, #-540]	; 0xfffffde4
   14360:	sub	r0, fp, #516	; 0x204
   14364:	bl	26a24 <cpbGetContent@@Base>
   14368:	subs	r9, r0, #0
   1436c:	beq	17120 <message@@Base+0x3bc8>
   14370:	ldr	r6, [fp, #-516]	; 0xfffffdfc
   14374:	ldr	r3, [pc, #1676]	; 14a08 <message@@Base+0x14b0>
   14378:	str	r6, [fp, #-544]	; 0xfffffde0
   1437c:	ldr	r6, [r4, r3]
   14380:	ldr	ip, [fp, #-544]	; 0xfffffde0
   14384:	ldrsh	r7, [r6, #2]
   14388:	cmp	ip, r7
   1438c:	bls	15d10 <message@@Base+0x27b8>
   14390:	ldr	r3, [pc, #1576]	; 149c0 <message@@Base+0x1468>
   14394:	ldr	r0, [r4, r3]
   14398:	bl	37160 <playTune@@Base>
   1439c:	ldr	r2, [sl]
   143a0:	ldr	r3, [r2, #8]
   143a4:	ldr	r0, [r2, #12]
   143a8:	b	13ea0 <message@@Base+0x948>
   143ac:	mov	ip, #0
   143b0:	mvn	r6, #0
   143b4:	str	ip, [fp, #-540]	; 0xfffffde4
   143b8:	str	r6, [fp, #-544]	; 0xfffffde0
   143bc:	ldr	r3, [sl]
   143c0:	ldr	ip, [fp, #-540]	; 0xfffffde4
   143c4:	ldr	r1, [r3, #44]	; 0x2c
   143c8:	cmp	r1, ip
   143cc:	beq	164cc <message@@Base+0x2f74>
   143d0:	ldr	r2, [pc, #1516]	; 149c4 <message@@Base+0x146c>
   143d4:	ldr	r2, [r4, r2]
   143d8:	ldrb	r2, [r2, #32]
   143dc:	cmp	r2, #0
   143e0:	ldr	r2, [pc, #1568]	; 14a08 <message@@Base+0x14b0>
   143e4:	bne	15ee4 <message@@Base+0x298c>
   143e8:	ldr	r6, [fp, #-544]	; 0xfffffde0
   143ec:	add	r1, r6, r1
   143f0:	str	r1, [r3, #44]	; 0x2c
   143f4:	ldr	r6, [r4, r2]
   143f8:	mov	r0, #0
   143fc:	ldrsh	r2, [r6, #2]
   14400:	mov	r3, r0
   14404:	mov	r1, r0
   14408:	bl	1237c <_start@@Base+0x2428>
   1440c:	ldr	r2, [sl]
   14410:	ldr	r3, [r2, #8]
   14414:	ldr	r0, [r2, #12]
   14418:	b	13ea0 <message@@Base+0x948>
   1441c:	mov	ip, #0
   14420:	mov	r6, #1
   14424:	str	ip, [fp, #-572]	; 0xfffffdc4
   14428:	str	r6, [fp, #-556]	; 0xfffffdd4
   1442c:	ldr	r2, [pc, #1492]	; 14a08 <message@@Base+0x14b0>
   14430:	ldr	r3, [sl]
   14434:	str	sp, [fp, #-580]	; 0xfffffdbc
   14438:	ldr	r6, [r4, r2]
   1443c:	ldr	r8, [r3, #40]	; 0x28
   14440:	ldr	r3, [r3, #44]	; 0x2c
   14444:	ldrsh	r2, [r6, #2]
   14448:	add	ip, r8, #1
   1444c:	str	ip, [fp, #-548]	; 0xfffffddc
   14450:	str	r3, [fp, #-540]	; 0xfffffde4
   14454:	ldr	r9, [fp, #-548]	; 0xfffffddc
   14458:	lsl	r3, r2, #3
   1445c:	add	r3, r3, #8
   14460:	str	sl, [fp, #-564]	; 0xfffffdcc
   14464:	sub	sp, sp, r3
   14468:	str	r5, [fp, #-576]	; 0xfffffdc0
   1446c:	str	r6, [fp, #-560]	; 0xfffffdd0
   14470:	mov	sl, r8
   14474:	mov	r5, r8
   14478:	mov	r6, r2
   1447c:	add	r0, sp, #24
   14480:	str	r4, [fp, #-568]	; 0xfffffdc8
   14484:	str	r0, [fp, #-544]	; 0xfffffde0
   14488:	ldr	ip, [fp, #-544]	; 0xfffffde0
   1448c:	mov	r2, r6
   14490:	mov	r0, #0
   14494:	mov	r3, #1
   14498:	str	ip, [sp]
   1449c:	ldr	r6, [fp, #-540]	; 0xfffffde4
   144a0:	sxth	r1, r6
   144a4:	bl	39094 <readScreen@@Base>
   144a8:	ldr	ip, [fp, #-564]	; 0xfffffdcc
   144ac:	ldr	ip, [ip]
   144b0:	ldr	r1, [ip, #44]	; 0x2c
   144b4:	str	ip, [fp, #-552]	; 0xfffffdd8
   144b8:	cmp	r1, r6
   144bc:	str	r1, [fp, #-548]	; 0xfffffddc
   144c0:	movne	r4, #0
   144c4:	movne	r8, #2
   144c8:	beq	15a54 <message@@Base+0x24fc>
   144cc:	ldr	ip, [fp, #-556]	; 0xfffffdd4
   144d0:	cmn	ip, #1
   144d4:	beq	15a70 <message@@Base+0x2518>
   144d8:	ldr	ip, [fp, #-556]	; 0xfffffdd4
   144dc:	cmp	ip, #1
   144e0:	bne	16a58 <message@@Base+0x3500>
   144e4:	ldr	ip, [fp, #-560]	; 0xfffffdd0
   144e8:	ldrsh	r6, [ip, #2]
   144ec:	ldr	ip, [fp, #-544]	; 0xfffffde0
   144f0:	add	r7, ip, sl, lsl #3
   144f4:	b	14530 <message@@Base+0xfd8>
   144f8:	ldr	r0, [r7, #8]
   144fc:	bl	11f7c <_start@@Base+0x2028>
   14500:	cmp	r8, r0
   14504:	beq	1452c <message@@Base+0xfd4>
   14508:	cmp	r4, #0
   1450c:	bne	14518 <message@@Base+0xfc0>
   14510:	cmp	r8, #2
   14514:	bne	15b24 <message@@Base+0x25cc>
   14518:	cmp	r0, #2
   1451c:	mov	r4, #0
   14520:	movne	r8, r0
   14524:	moveq	r8, #2
   14528:	movne	r5, sl
   1452c:	add	r7, r7, #8
   14530:	add	sl, sl, #1
   14534:	cmp	sl, r6
   14538:	bne	144f8 <message@@Base+0xfa0>
   1453c:	eor	r4, r4, #1
   14540:	cmp	r8, #2
   14544:	moveq	r2, #0
   14548:	andne	r2, r4, #1
   1454c:	cmp	r2, #0
   14550:	bne	15b24 <message@@Base+0x25cc>
   14554:	ldr	ip, [fp, #-560]	; 0xfffffdd0
   14558:	ldrsh	r3, [ip]
   1455c:	ldr	ip, [fp, #-540]	; 0xfffffde4
   14560:	sub	r3, r3, #1
   14564:	cmp	r3, ip
   14568:	beq	16c84 <message@@Base+0x372c>
   1456c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   14570:	add	r7, ip, #1
   14574:	cmp	ip, r1
   14578:	mvnne	sl, #0
   1457c:	beq	15c58 <message@@Base+0x2700>
   14580:	str	r7, [fp, #-540]	; 0xfffffde4
   14584:	b	14488 <message@@Base+0xf30>
   14588:	ldr	r3, [pc, #1156]	; 14a14 <message@@Base+0x14bc>
   1458c:	ldr	r3, [r4, r3]
   14590:	ldr	r3, [r3]
   14594:	ldr	r3, [r3, #64]	; 0x40
   14598:	cmp	r3, #0
   1459c:	beq	145b4 <message@@Base+0x105c>
   145a0:	ldr	r3, [pc, #1052]	; 149c4 <message@@Base+0x146c>
   145a4:	ldr	r3, [r4, r3]
   145a8:	ldrb	r2, [r3, #40]	; 0x28
   145ac:	cmp	r2, #19
   145b0:	bls	168a0 <message@@Base+0x3348>
   145b4:	ldr	r3, [pc, #1120]	; 14a1c <message@@Base+0x14c4>
   145b8:	ldr	r0, [r4, r3]
   145bc:	bl	37160 <playTune@@Base>
   145c0:	ldr	r2, [sl]
   145c4:	ldr	r3, [r2, #8]
   145c8:	ldr	r0, [r2, #12]
   145cc:	b	13ea0 <message@@Base+0x948>
   145d0:	ldr	r3, [pc, #1084]	; 14a14 <message@@Base+0x14bc>
   145d4:	ldr	r3, [r4, r3]
   145d8:	ldr	r3, [r3]
   145dc:	ldr	r3, [r3, #64]	; 0x40
   145e0:	cmp	r3, #0
   145e4:	beq	145fc <message@@Base+0x10a4>
   145e8:	ldr	r3, [pc, #980]	; 149c4 <message@@Base+0x146c>
   145ec:	ldr	r3, [r4, r3]
   145f0:	ldrb	r2, [r3, #40]	; 0x28
   145f4:	cmp	r2, #0
   145f8:	bne	168cc <message@@Base+0x3374>
   145fc:	ldr	r3, [pc, #1048]	; 14a1c <message@@Base+0x14c4>
   14600:	ldr	r0, [r4, r3]
   14604:	bl	37160 <playTune@@Base>
   14608:	ldr	r2, [sl]
   1460c:	ldr	r3, [r2, #8]
   14610:	ldr	r0, [r2, #12]
   14614:	b	13ea0 <message@@Base+0x948>
   14618:	ldr	r2, [pc, #1000]	; 14a08 <message@@Base+0x14b0>
   1461c:	mov	ip, #0
   14620:	ldr	r1, [sl]
   14624:	mov	r3, #1
   14628:	ldr	r2, [r4, r2]
   1462c:	ldr	r0, [r1, #12]
   14630:	ldrsh	r1, [r2, #2]
   14634:	ldrsh	r2, [r2]
   14638:	str	ip, [sp]
   1463c:	rsb	r2, r0, r2
   14640:	bl	12668 <_start@@Base+0x2714>
   14644:	ldr	r2, [sl]
   14648:	ldr	r3, [r2, #8]
   1464c:	ldr	r0, [r2, #12]
   14650:	b	13ea0 <message@@Base+0x948>
   14654:	mvn	r8, #0
   14658:	b	14174 <message@@Base+0xc1c>
   1465c:	mvn	ip, #0
   14660:	b	1420c <message@@Base+0xcb4>
   14664:	ldr	r3, [sl]
   14668:	mov	r1, #0
   1466c:	mov	r2, r3
   14670:	str	r1, [r3, #8]
   14674:	ldr	r0, [pc, #908]	; 14a08 <message@@Base+0x14b0>
   14678:	ldr	r1, [r5, #4]
   1467c:	ldr	r3, [r2, #8]
   14680:	ldr	r0, [r4, r0]
   14684:	ldrsh	r0, [r0]
   14688:	rsb	r0, r1, r0
   1468c:	str	r0, [r2, #12]
   14690:	b	13ea0 <message@@Base+0x948>
   14694:	ldr	r3, [sl]
   14698:	mov	r1, #0
   1469c:	mov	r2, r3
   146a0:	str	r1, [r3, #8]
   146a4:	mov	r1, #0
   146a8:	ldr	r3, [r2, #8]
   146ac:	str	r1, [r2, #12]
   146b0:	b	13ea0 <message@@Base+0x948>
   146b4:	ldr	r2, [pc, #844]	; 14a08 <message@@Base+0x14b0>
   146b8:	mov	r0, #0
   146bc:	mov	r3, r0
   146c0:	mov	r1, r0
   146c4:	ldr	r2, [r4, r2]
   146c8:	ldrsh	r2, [r2, #2]
   146cc:	bl	1237c <_start@@Base+0x2428>
   146d0:	ldr	r2, [sl]
   146d4:	ldr	r3, [r2, #8]
   146d8:	ldr	r0, [r2, #12]
   146dc:	b	13ea0 <message@@Base+0x948>
   146e0:	mov	ip, #0
   146e4:	mvn	r6, #0
   146e8:	str	ip, [fp, #-572]	; 0xfffffdc4
   146ec:	str	r6, [fp, #-556]	; 0xfffffdd4
   146f0:	b	1442c <message@@Base+0xed4>
   146f4:	mov	r6, #0
   146f8:	str	r6, [fp, #-572]	; 0xfffffdc4
   146fc:	str	r6, [fp, #-556]	; 0xfffffdd4
   14700:	b	1442c <message@@Base+0xed4>
   14704:	ldr	r2, [pc, #764]	; 14a08 <message@@Base+0x14b0>
   14708:	ldr	r3, [sl]
   1470c:	ldr	r2, [r4, r2]
   14710:	ldr	r1, [r3, #40]	; 0x28
   14714:	ldrsh	r0, [r2, #2]
   14718:	sub	r0, r0, #1
   1471c:	cmp	r1, r0
   14720:	blt	1647c <message@@Base+0x2f24>
   14724:	ldrsh	r1, [r2]
   14728:	ldr	r2, [r3, #44]	; 0x2c
   1472c:	sub	r1, r1, #1
   14730:	cmp	r2, r1
   14734:	bge	162d4 <message@@Base+0x2d7c>
   14738:	ldr	r1, [pc, #608]	; 149a0 <message@@Base+0x1448>
   1473c:	add	r2, r2, #1
   14740:	mov	r0, #0
   14744:	str	r2, [r3, #44]	; 0x2c
   14748:	str	r0, [r3, #40]	; 0x28
   1474c:	ldr	r0, [r4, r1]
   14750:	bl	37160 <playTune@@Base>
   14754:	bl	12474 <_start@@Base+0x2520>
   14758:	ldr	r2, [sl]
   1475c:	ldr	r3, [r2, #8]
   14760:	ldr	r0, [r2, #12]
   14764:	b	13ea0 <message@@Base+0x948>
   14768:	bl	10a9c <_start@@Base+0xb48>
   1476c:	ldr	r2, [sl]
   14770:	ldr	r3, [r2, #8]
   14774:	ldr	r0, [r2, #12]
   14778:	b	13ea0 <message@@Base+0x948>
   1477c:	ldr	r0, [pc, #548]	; 149a8 <message@@Base+0x1450>
   14780:	add	r0, pc, r0
   14784:	bl	10de4 <_start@@Base+0xe90>
   14788:	ldr	r2, [sl]
   1478c:	ldr	r3, [r2, #8]
   14790:	ldr	r0, [r2, #12]
   14794:	b	13ea0 <message@@Base+0x948>
   14798:	ldr	r0, [pc, #524]	; 149ac <message@@Base+0x1454>
   1479c:	add	r0, pc, r0
   147a0:	bl	10d9c <_start@@Base+0xe48>
   147a4:	ldr	r2, [sl]
   147a8:	ldr	r3, [r2, #8]
   147ac:	ldr	r0, [r2, #12]
   147b0:	b	13ea0 <message@@Base+0x948>
   147b4:	ldr	r2, [pc, #588]	; 14a08 <message@@Base+0x14b0>
   147b8:	ldr	r1, [sl]
   147bc:	ldr	r3, [r5, #4]
   147c0:	ldr	r2, [r4, r2]
   147c4:	ldr	ip, [r1, #12]
   147c8:	ldrsh	r2, [r2]
   147cc:	rsb	r3, r3, r2
   147d0:	cmp	ip, r3
   147d4:	bge	1673c <message@@Base+0x31e4>
   147d8:	ldr	r6, [pc, #464]	; 149b0 <message@@Base+0x1458>
   147dc:	rsb	r0, ip, r3
   147e0:	mov	r2, r1
   147e4:	ldr	r3, [r1, #8]
   147e8:	ldr	r6, [r4, r6]
   147ec:	ldr	r6, [r6]
   147f0:	cmp	r0, r6
   147f4:	addls	r0, ip, r0
   147f8:	addhi	r0, ip, r6
   147fc:	str	r0, [r1, #12]
   14800:	b	13ea0 <message@@Base+0x948>
   14804:	ldr	r1, [sl]
   14808:	ldr	r0, [r1, #12]
   1480c:	cmp	r0, #0
   14810:	ble	170e8 <message@@Base+0x3b90>
   14814:	ldr	ip, [pc, #404]	; 149b0 <message@@Base+0x1458>
   14818:	mov	r2, r1
   1481c:	ldr	r3, [r1, #8]
   14820:	ldr	ip, [r4, ip]
   14824:	ldr	ip, [ip]
   14828:	cmp	r0, ip
   1482c:	movcc	ip, r0
   14830:	rsb	r0, ip, r0
   14834:	str	r0, [r1, #12]
   14838:	b	13ea0 <message@@Base+0x948>
   1483c:	ldr	r2, [sl]
   14840:	b	14674 <message@@Base+0x111c>
   14844:	ldr	r2, [sl]
   14848:	ldr	r1, [r2, #8]
   1484c:	add	r3, r1, #1
   14850:	cmp	r1, r3
   14854:	bge	15ca8 <message@@Base+0x2750>
   14858:	ldr	r1, [pc, #424]	; 14a08 <message@@Base+0x14b0>
   1485c:	ldr	r1, [r4, r1]
   14860:	ldrsh	r1, [r1, #2]
   14864:	cmp	r3, r1
   14868:	bge	15ca8 <message@@Base+0x2750>
   1486c:	str	r3, [r2, #8]
   14870:	ldr	r0, [r2, #12]
   14874:	b	13ea0 <message@@Base+0x948>
   14878:	ldr	r2, [sl]
   1487c:	ldr	r3, [r2, #8]
   14880:	cmp	r3, #0
   14884:	ble	16884 <message@@Base+0x332c>
   14888:	sub	r3, r3, #1
   1488c:	ldr	r0, [r2, #12]
   14890:	str	r3, [r2, #8]
   14894:	b	13ea0 <message@@Base+0x948>
   14898:	ldr	r0, [pc, #292]	; 149c4 <message@@Base+0x146c>
   1489c:	mov	r1, r7
   148a0:	ldr	r2, [pc, #356]	; 14a0c <message@@Base+0x14b4>
   148a4:	ldr	r3, [pc, #356]	; 14a10 <message@@Base+0x14b8>
   148a8:	ldr	r0, [r4, r0]
   148ac:	ldr	r2, [r4, r2]
   148b0:	ldr	r3, [r4, r3]
   148b4:	add	r0, r0, #67	; 0x43
   148b8:	bl	10e2c <_start@@Base+0xed8>
   148bc:	ldr	r2, [sl]
   148c0:	ldr	r3, [r2, #8]
   148c4:	ldr	r0, [r2, #12]
   148c8:	b	13ea0 <message@@Base+0x948>
   148cc:	ldr	r1, [pc, #224]	; 149b4 <message@@Base+0x145c>
   148d0:	mov	r2, #5
   148d4:	mov	r0, #0
   148d8:	add	r1, pc, r1
   148dc:	bl	f9bc <dcgettext@plt>
   148e0:	ldr	r3, [sl]
   148e4:	ldr	r1, [pc, #204]	; 149b8 <message@@Base+0x1460>
   148e8:	mov	r2, #5
   148ec:	add	r1, pc, r1
   148f0:	ldr	r6, [r3, #44]	; 0x2c
   148f4:	add	r6, r6, #1
   148f8:	mov	r7, r0
   148fc:	mov	r0, #0
   14900:	bl	f9bc <dcgettext@plt>
   14904:	ldr	ip, [pc, #176]	; 149bc <message@@Base+0x1464>
   14908:	str	r6, [sp, #8]
   1490c:	sub	r6, fp, #296	; 0x128
   14910:	str	r7, [sp, #4]
   14914:	add	ip, pc, ip
   14918:	str	ip, [sp]
   1491c:	mov	r1, #80	; 0x50
   14920:	mov	r3, r1
   14924:	mov	r2, #1
   14928:	str	r0, [sp, #12]
   1492c:	mov	r0, r6
   14930:	ldr	ip, [sl]
   14934:	ldr	ip, [ip, #40]	; 0x28
   14938:	add	ip, ip, r2
   1493c:	str	ip, [sp, #16]
   14940:	bl	fb60 <__snprintf_chk@plt>
   14944:	ldr	r3, [pc, #156]	; 149e8 <message@@Base+0x1490>
   14948:	mov	r2, #1
   1494c:	mov	r1, r6
   14950:	ldr	r0, [r4, r3]
   14954:	bl	46780 <sayString@@Base>
   14958:	ldr	r2, [sl]
   1495c:	ldr	r3, [r2, #8]
   14960:	ldr	r0, [r2, #12]
   14964:	b	13ea0 <message@@Base+0x948>
   14968:	andeq	pc, r5, ip, ror #1
   1496c:			; <UNDEFINED> instruction: 0x000003b4
   14970:	andeq	pc, r5, r8, lsr #15
   14974:			; <UNDEFINED> instruction: 0x000003b8
   14978:	andeq	r0, r0, r8, asr #10
   1497c:	andeq	pc, r5, r0, lsr #14
   14980:	andeq	pc, r5, ip, ror #13
   14984:	andeq	sl, r3, r8, asr #22
   14988:	ldrdeq	sl, [r3], -r4
   1498c:			; <UNDEFINED> instruction: 0xffffc4ec
   14990:			; <UNDEFINED> instruction: 0x000003bc
   14994:	andeq	pc, r5, r4, lsl #5
   14998:	andeq	pc, r5, r4, lsl r1	; <UNPREDICTABLE>
   1499c:			; <UNDEFINED> instruction: 0xffffc258
   149a0:	andeq	r0, r0, r0, lsl r5
   149a4:	andeq	lr, r5, r8, lsl lr
   149a8:			; <UNDEFINED> instruction: 0xffffbad0
   149ac:			; <UNDEFINED> instruction: 0xffffbab4
   149b0:	andeq	r0, r0, r0, lsl #8
   149b4:	andeq	ip, r3, ip, lsl #23
   149b8:	andeq	r9, r3, ip, lsl #31
   149bc:	andeq	r9, r3, ip, ror #30
   149c0:	andeq	r0, r0, r4, ror r5
   149c4:	andeq	r0, r0, r0, asr #10
   149c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   149cc:	andeq	r0, r0, r8, lsl #7
   149d0:			; <UNDEFINED> instruction: 0xffffb5b4
   149d4:			; <UNDEFINED> instruction: 0xffffb598
   149d8:	andeq	r0, r0, ip, ror #9
   149dc:	muleq	r0, r4, r4
   149e0:	strdeq	r0, [r0], -r8
   149e4:	andeq	r0, r0, r0, asr #7
   149e8:	andeq	r0, r0, r4, ror #9
   149ec:	andeq	sp, r5, r8, lsr sp
   149f0:	strdeq	r9, [r3], -r0
   149f4:	andeq	r9, r3, r0, asr #5
   149f8:	andeq	r0, r0, r0, ror #9
   149fc:	andeq	sp, r5, r8, ror #21
   14a00:	andeq	r0, r0, r8, lsr #9
   14a04:	andeq	sp, r5, r0, lsl #18
   14a08:	andeq	r0, r0, ip, lsl #9
   14a0c:	andeq	r0, r0, ip, asr r4
   14a10:	andeq	r0, r0, r4, lsr #9
   14a14:	andeq	r0, r0, ip, lsl r4
   14a18:	andeq	r0, r0, r0, asr #10
   14a1c:	andeq	r0, r0, r4, asr #8
   14a20:	andeq	r0, r0, r0, lsl #10
   14a24:	ldr	r2, [pc, #-36]	; 14a08 <message@@Base+0x14b0>
   14a28:	ldr	r3, [sl]
   14a2c:	ldr	r2, [r4, r2]
   14a30:	ldr	r0, [r3, #40]	; 0x28
   14a34:	ldr	r1, [r3, #44]	; 0x2c
   14a38:	ldr	r2, [r2, #8]
   14a3c:	bl	391c8 <routeCursor@@Base>
   14a40:	cmp	r0, #0
   14a44:	beq	16028 <message@@Base+0x2ad0>
   14a48:	ldr	r3, [pc, #-48]	; 14a20 <message@@Base+0x14c8>
   14a4c:	ldr	r0, [r4, r3]
   14a50:	bl	37160 <playTune@@Base>
   14a54:	ldr	r2, [sl]
   14a58:	ldr	r3, [r2, #8]
   14a5c:	ldr	r0, [r2, #12]
   14a60:	b	13ea0 <message@@Base+0x948>
   14a64:	mov	ip, #1
   14a68:	mov	r6, #0
   14a6c:	str	ip, [fp, #-572]	; 0xfffffdc4
   14a70:	str	r6, [fp, #-556]	; 0xfffffdd4
   14a74:	b	1442c <message@@Base+0xed4>
   14a78:	ldr	r3, [sl]
   14a7c:	sub	r6, fp, #296	; 0x128
   14a80:	mov	r0, r6
   14a84:	ldr	r1, [r3, #40]	; 0x28
   14a88:	ldr	r2, [r3, #44]	; 0x2c
   14a8c:	bl	124a4 <_start@@Base+0x2550>
   14a90:	ldr	r3, [pc, #-176]	; 149e8 <message@@Base+0x1490>
   14a94:	mov	r2, #1
   14a98:	mov	r1, r6
   14a9c:	ldr	r0, [r4, r3]
   14aa0:	bl	46780 <sayString@@Base>
   14aa4:	ldr	r2, [sl]
   14aa8:	ldr	r3, [r2, #8]
   14aac:	ldr	r0, [r2, #12]
   14ab0:	b	13ea0 <message@@Base+0x948>
   14ab4:	ldr	r3, [pc, #-180]	; 14a08 <message@@Base+0x14b0>
   14ab8:	str	sp, [fp, #-540]	; 0xfffffde4
   14abc:	ldr	r6, [r4, r3]
   14ac0:	ldrsh	r8, [r6, #2]
   14ac4:	ldrsh	r9, [r6]
   14ac8:	lsl	r3, r8, #3
   14acc:	subs	r9, r9, #1
   14ad0:	add	r3, r3, #8
   14ad4:	sub	sp, sp, r3
   14ad8:	add	r7, sp, #24
   14adc:	bpl	14aec <message@@Base+0x1594>
   14ae0:	b	16138 <message@@Base+0x2be0>
   14ae4:	subs	r9, r9, #1
   14ae8:	bcc	16138 <message@@Base+0x2be0>
   14aec:	mov	r2, r8
   14af0:	sxth	r1, r9
   14af4:	mov	r3, #1
   14af8:	str	r7, [sp]
   14afc:	mov	r0, #0
   14b00:	bl	39094 <readScreen@@Base>
   14b04:	ldrsh	r8, [r6, #2]
   14b08:	mov	r0, r7
   14b0c:	mov	r1, r8
   14b10:	bl	11fd0 <_start@@Base+0x207c>
   14b14:	cmp	r0, #0
   14b18:	blt	14ae4 <message@@Base+0x158c>
   14b1c:	ldr	ip, [sl]
   14b20:	mov	lr, #0
   14b24:	mov	r0, lr
   14b28:	mov	r2, r8
   14b2c:	mov	r1, lr
   14b30:	mov	r3, lr
   14b34:	str	lr, [ip, #40]	; 0x28
   14b38:	str	r9, [ip, #44]	; 0x2c
   14b3c:	bl	1237c <_start@@Base+0x2428>
   14b40:	ldr	r2, [sl]
   14b44:	ldr	sp, [fp, #-540]	; 0xfffffde4
   14b48:	ldr	r3, [r2, #8]
   14b4c:	ldr	r0, [r2, #12]
   14b50:	b	13ea0 <message@@Base+0x948>
   14b54:	ldr	r3, [pc, #-408]	; 149c4 <message@@Base+0x146c>
   14b58:	ldr	r3, [r4, r3]
   14b5c:	str	r3, [fp, #-540]	; 0xfffffde4
   14b60:	ldrb	r3, [r3, #36]	; 0x24
   14b64:	cmp	r3, #0
   14b68:	beq	14b7c <message@@Base+0x1624>
   14b6c:	ldr	r6, [fp, #-540]	; 0xfffffde4
   14b70:	ldrb	r3, [r6, #34]	; 0x22
   14b74:	cmp	r3, #0
   14b78:	beq	13fbc <message@@Base+0xa64>
   14b7c:	ldr	r3, [pc, #-444]	; 149c8 <message@@Base+0x1470>
   14b80:	ldr	r2, [sl]
   14b84:	ldr	r3, [r4, r3]
   14b88:	ldr	r9, [r2, #8]
   14b8c:	ldr	r0, [r3]
   14b90:	bl	11074 <_start@@Base+0x1120>
   14b94:	cmp	r0, #0
   14b98:	bne	1642c <message@@Base+0x2ed4>
   14b9c:	ldr	r3, [pc, #-412]	; 14a08 <message@@Base+0x14b0>
   14ba0:	ldr	r6, [r4, r3]
   14ba4:	ldr	r2, [sl]
   14ba8:	ldrsh	r1, [r6]
   14bac:	ldr	r3, [r5, #4]
   14bb0:	ldr	r2, [r2, #12]
   14bb4:	rsb	r3, r3, r1
   14bb8:	cmp	r2, r3
   14bbc:	bcc	16d98 <message@@Base+0x3840>
   14bc0:	ldr	r3, [pc, #-520]	; 149c0 <message@@Base+0x1468>
   14bc4:	ldr	r0, [r4, r3]
   14bc8:	bl	37160 <playTune@@Base>
   14bcc:	ldr	r1, [sl]
   14bd0:	mov	r3, r9
   14bd4:	str	r9, [r1, #8]
   14bd8:	mov	r2, r1
   14bdc:	ldr	r0, [r1, #12]
   14be0:	b	13ea0 <message@@Base+0x948>
   14be4:	ldr	r3, [pc, #-552]	; 149c4 <message@@Base+0x146c>
   14be8:	ldr	r3, [r4, r3]
   14bec:	str	r3, [fp, #-540]	; 0xfffffde4
   14bf0:	ldrb	r3, [r3, #36]	; 0x24
   14bf4:	cmp	r3, #0
   14bf8:	beq	14c0c <message@@Base+0x16b4>
   14bfc:	ldr	r6, [fp, #-540]	; 0xfffffde4
   14c00:	ldrb	r3, [r6, #34]	; 0x22
   14c04:	cmp	r3, #0
   14c08:	beq	13d2c <message@@Base+0x7d4>
   14c0c:	ldr	r3, [pc, #-588]	; 149c8 <message@@Base+0x1470>
   14c10:	ldr	r2, [sl]
   14c14:	ldr	r3, [r4, r3]
   14c18:	ldr	r9, [r2, #8]
   14c1c:	ldr	r0, [r3]
   14c20:	bl	11e00 <_start@@Base+0x1eac>
   14c24:	cmp	r0, #0
   14c28:	beq	163c8 <message@@Base+0x2e70>
   14c2c:	ldr	ip, [fp, #-540]	; 0xfffffde4
   14c30:	ldrb	r3, [ip, #36]	; 0x24
   14c34:	cmp	r3, #0
   14c38:	bne	162f0 <message@@Base+0x2d98>
   14c3c:	ldr	r2, [sl]
   14c40:	ldr	r3, [r2, #8]
   14c44:	ldr	r0, [r2, #12]
   14c48:	b	13ea0 <message@@Base+0x948>
   14c4c:	ldr	r3, [pc, #-648]	; 149cc <message@@Base+0x1474>
   14c50:	ldr	r3, [r4, r3]
   14c54:	ldr	r0, [r3]
   14c58:	bl	11074 <_start@@Base+0x1120>
   14c5c:	cmp	r0, #0
   14c60:	beq	164e8 <message@@Base+0x2f90>
   14c64:	ldr	r2, [sl]
   14c68:	ldr	r3, [r2, #8]
   14c6c:	ldr	r0, [r2, #12]
   14c70:	b	13ea0 <message@@Base+0x948>
   14c74:	ldr	r3, [pc, #-688]	; 149cc <message@@Base+0x1474>
   14c78:	ldr	r3, [r4, r3]
   14c7c:	ldr	r0, [r3]
   14c80:	bl	11e00 <_start@@Base+0x1eac>
   14c84:	cmp	r0, #0
   14c88:	beq	16460 <message@@Base+0x2f08>
   14c8c:	ldr	r2, [sl]
   14c90:	ldr	r3, [r2, #8]
   14c94:	ldr	r0, [r2, #12]
   14c98:	b	13ea0 <message@@Base+0x948>
   14c9c:	bl	10a58 <_start@@Base+0xb04>
   14ca0:	ldr	r2, [sl]
   14ca4:	ldr	r3, [r2, #8]
   14ca8:	ldr	r0, [r2, #12]
   14cac:	b	13ea0 <message@@Base+0x948>
   14cb0:	ldr	r0, [pc, #-744]	; 149d0 <message@@Base+0x1478>
   14cb4:	add	r0, pc, r0
   14cb8:	bl	10de4 <_start@@Base+0xe90>
   14cbc:	ldr	r2, [sl]
   14cc0:	ldr	r3, [r2, #8]
   14cc4:	ldr	r0, [r2, #12]
   14cc8:	b	13ea0 <message@@Base+0x948>
   14ccc:	ldr	r0, [pc, #-768]	; 149d4 <message@@Base+0x147c>
   14cd0:	add	r0, pc, r0
   14cd4:	bl	10d9c <_start@@Base+0xe48>
   14cd8:	ldr	r2, [sl]
   14cdc:	ldr	r3, [r2, #8]
   14ce0:	ldr	r0, [r2, #12]
   14ce4:	b	13ea0 <message@@Base+0x948>
   14ce8:	ldr	r2, [sl]
   14cec:	b	146a4 <message@@Base+0x114c>
   14cf0:	tst	r7, #65536	; 0x10000
   14cf4:	bne	16758 <message@@Base+0x3200>
   14cf8:	tst	r7, #131072	; 0x20000
   14cfc:	bne	16a20 <message@@Base+0x34c8>
   14d00:	ldr	r2, [sl]
   14d04:	ldr	r3, [r2, #8]
   14d08:	ldr	r0, [r2, #12]
   14d0c:	b	13ea0 <message@@Base+0x948>
   14d10:	ldr	r3, [pc, #-784]	; 14a08 <message@@Base+0x14b0>
   14d14:	str	sp, [fp, #-540]	; 0xfffffde4
   14d18:	ldr	r6, [r4, r3]
   14d1c:	ldrsh	r8, [r6, #2]
   14d20:	ldrsh	r2, [r6]
   14d24:	lsl	r3, r8, #3
   14d28:	cmp	r2, #0
   14d2c:	add	r3, r3, #8
   14d30:	sub	sp, sp, r3
   14d34:	add	r7, sp, #24
   14d38:	ble	16018 <message@@Base+0x2ac0>
   14d3c:	mov	r9, #0
   14d40:	b	14d50 <message@@Base+0x17f8>
   14d44:	add	r9, r9, #1
   14d48:	cmp	r3, r9
   14d4c:	ble	16018 <message@@Base+0x2ac0>
   14d50:	mov	r2, r8
   14d54:	mov	r3, #1
   14d58:	sxth	r1, r9
   14d5c:	str	r7, [sp]
   14d60:	mov	r0, #0
   14d64:	bl	39094 <readScreen@@Base>
   14d68:	ldrsh	r8, [r6, #2]
   14d6c:	mov	r0, r7
   14d70:	mov	r1, r8
   14d74:	bl	11fd0 <_start@@Base+0x207c>
   14d78:	ldrsh	r3, [r6]
   14d7c:	cmp	r0, #0
   14d80:	blt	14d44 <message@@Base+0x17ec>
   14d84:	cmp	r3, r9
   14d88:	ble	16018 <message@@Base+0x2ac0>
   14d8c:	ldr	ip, [sl]
   14d90:	mov	lr, #0
   14d94:	mov	r0, lr
   14d98:	mov	r2, r8
   14d9c:	mov	r1, lr
   14da0:	mov	r3, lr
   14da4:	str	lr, [ip, #40]	; 0x28
   14da8:	str	r9, [ip, #44]	; 0x2c
   14dac:	bl	1237c <_start@@Base+0x2428>
   14db0:	ldr	r2, [sl]
   14db4:	ldr	sp, [fp, #-540]	; 0xfffffde4
   14db8:	ldr	r3, [r2, #8]
   14dbc:	ldr	r0, [r2, #12]
   14dc0:	b	13ea0 <message@@Base+0x948>
   14dc4:	ldr	r1, [pc, #-964]	; 14a08 <message@@Base+0x14b0>
   14dc8:	mov	r0, #0
   14dcc:	str	sp, [fp, #-544]	; 0xfffffde0
   14dd0:	mov	r3, #1
   14dd4:	ldr	r2, [sl]
   14dd8:	ldr	r6, [r4, r1]
   14ddc:	ldrsh	r1, [r2, #44]	; 0x2c
   14de0:	ldrsh	r2, [r6, #2]
   14de4:	lsl	ip, r2, #3
   14de8:	add	ip, ip, #8
   14dec:	sub	sp, sp, ip
   14df0:	add	ip, sp, #24
   14df4:	str	ip, [fp, #-540]	; 0xfffffde4
   14df8:	str	ip, [sp]
   14dfc:	bl	39094 <readScreen@@Base>
   14e00:	ldrsh	r9, [r6, #2]
   14e04:	cmp	r9, #0
   14e08:	ble	16008 <message@@Base+0x2ab0>
   14e0c:	rsb	r7, r9, r9, lsl #29
   14e10:	ldr	ip, [fp, #-540]	; 0xfffffde4
   14e14:	lsl	r6, r9, #3
   14e18:	add	r8, ip, r6
   14e1c:	lsl	r7, r7, #3
   14e20:	b	14e30 <message@@Base+0x18d8>
   14e24:	cmp	r9, #0
   14e28:	sub	r8, r8, #8
   14e2c:	beq	16008 <message@@Base+0x2ab0>
   14e30:	add	r3, r8, r7
   14e34:	sub	r9, r9, #1
   14e38:	add	r3, r3, r6
   14e3c:	ldr	r0, [r3, #-8]
   14e40:	bl	11f7c <_start@@Base+0x2028>
   14e44:	cmp	r0, #2
   14e48:	beq	14e24 <message@@Base+0x18cc>
   14e4c:	ldr	ip, [sl]
   14e50:	mov	r1, r9
   14e54:	ldr	r0, [fp, #-540]	; 0xfffffde4
   14e58:	mov	r2, #1
   14e5c:	mov	r3, #0
   14e60:	str	r9, [ip, #40]	; 0x28
   14e64:	bl	1237c <_start@@Base+0x2428>
   14e68:	ldr	r2, [sl]
   14e6c:	ldr	sp, [fp, #-544]	; 0xfffffde0
   14e70:	ldr	r3, [r2, #8]
   14e74:	ldr	r0, [r2, #12]
   14e78:	b	13ea0 <message@@Base+0x948>
   14e7c:	ldr	r0, [pc, #-1132]	; 14a18 <message@@Base+0x14c0>
   14e80:	mov	r1, r7
   14e84:	ldr	r2, [pc, #-1152]	; 14a0c <message@@Base+0x14b4>
   14e88:	ldr	r3, [pc, #-1152]	; 14a10 <message@@Base+0x14b8>
   14e8c:	ldr	r0, [r4, r0]
   14e90:	ldr	r2, [r4, r2]
   14e94:	ldr	r3, [r4, r3]
   14e98:	add	r0, r0, #61	; 0x3d
   14e9c:	bl	10e2c <_start@@Base+0xed8>
   14ea0:	ldr	r2, [sl]
   14ea4:	ldr	r3, [r2, #8]
   14ea8:	ldr	r0, [r2, #12]
   14eac:	b	13ea0 <message@@Base+0x948>
   14eb0:	ldr	r1, [pc, #-1200]	; 14a08 <message@@Base+0x14b0>
   14eb4:	mov	r8, sp
   14eb8:	ldr	r2, [sl]
   14ebc:	mov	r3, #1
   14ec0:	mov	r0, #0
   14ec4:	ldr	r7, [r4, r1]
   14ec8:	ldrsh	r1, [r2, #44]	; 0x2c
   14ecc:	ldrsh	r2, [r7, #2]
   14ed0:	lsl	ip, r2, #3
   14ed4:	add	ip, ip, #8
   14ed8:	sub	sp, sp, ip
   14edc:	add	r6, sp, #24
   14ee0:	str	r6, [sp]
   14ee4:	bl	39094 <readScreen@@Base>
   14ee8:	mov	r0, r6
   14eec:	ldrsh	r1, [r7, #2]
   14ef0:	bl	11fd0 <_start@@Base+0x207c>
   14ef4:	subs	ip, r0, #0
   14ef8:	blt	168f8 <message@@Base+0x33a0>
   14efc:	ldr	lr, [sl]
   14f00:	mov	r0, r6
   14f04:	mov	r1, ip
   14f08:	mov	r2, #1
   14f0c:	mov	r3, #0
   14f10:	str	ip, [lr, #40]	; 0x28
   14f14:	bl	1237c <_start@@Base+0x2428>
   14f18:	ldr	r2, [sl]
   14f1c:	mov	sp, r8
   14f20:	ldr	r3, [r2, #8]
   14f24:	ldr	r0, [r2, #12]
   14f28:	b	13ea0 <message@@Base+0x948>
   14f2c:	ldr	r0, [pc, #-1308]	; 14a18 <message@@Base+0x14c0>
   14f30:	mov	r1, r7
   14f34:	ldr	r2, [pc, #-1328]	; 14a0c <message@@Base+0x14b4>
   14f38:	ldr	r3, [pc, #-1328]	; 14a10 <message@@Base+0x14b8>
   14f3c:	ldr	r0, [r4, r0]
   14f40:	ldr	r2, [r4, r2]
   14f44:	ldr	r3, [r4, r3]
   14f48:	add	r0, r0, #28
   14f4c:	bl	10e2c <_start@@Base+0xed8>
   14f50:	ldr	r2, [sl]
   14f54:	ldr	r3, [r2, #8]
   14f58:	ldr	r0, [r2, #12]
   14f5c:	b	13ea0 <message@@Base+0x948>
   14f60:	ldr	r0, [pc, #-1360]	; 14a18 <message@@Base+0x14c0>
   14f64:	mov	r1, r7
   14f68:	ldr	r2, [pc, #-1380]	; 14a0c <message@@Base+0x14b4>
   14f6c:	ldr	r3, [pc, #-1380]	; 14a10 <message@@Base+0x14b8>
   14f70:	ldr	r0, [r4, r0]
   14f74:	ldr	r2, [r4, r2]
   14f78:	ldr	r3, [r4, r3]
   14f7c:	add	r0, r0, #65	; 0x41
   14f80:	bl	10e2c <_start@@Base+0xed8>
   14f84:	ldr	r2, [sl]
   14f88:	ldr	r3, [r2, #8]
   14f8c:	ldr	r0, [r2, #12]
   14f90:	b	13ea0 <message@@Base+0x948>
   14f94:	ldr	r0, [pc, #-1412]	; 14a18 <message@@Base+0x14c0>
   14f98:	mov	r1, r7
   14f9c:	ldr	r2, [pc, #-1432]	; 14a0c <message@@Base+0x14b4>
   14fa0:	ldr	r3, [pc, #-1432]	; 14a10 <message@@Base+0x14b8>
   14fa4:	ldr	r0, [r4, r0]
   14fa8:	ldr	r2, [r4, r2]
   14fac:	ldr	r3, [r4, r3]
   14fb0:	add	r0, r0, #64	; 0x40
   14fb4:	bl	10e2c <_start@@Base+0xed8>
   14fb8:	ldr	r2, [sl]
   14fbc:	ldr	r3, [r2, #8]
   14fc0:	ldr	r0, [r2, #12]
   14fc4:	b	13ea0 <message@@Base+0x948>
   14fc8:	mvn	r6, #0
   14fcc:	str	r6, [fp, #-540]	; 0xfffffde4
   14fd0:	b	14360 <message@@Base+0xe08>
   14fd4:	ldr	r3, [sl]
   14fd8:	ldr	r2, [r3, #40]	; 0x28
   14fdc:	cmp	r2, #0
   14fe0:	ble	1628c <message@@Base+0x2d34>
   14fe4:	sub	r2, r2, #1
   14fe8:	str	r2, [r3, #40]	; 0x28
   14fec:	bl	12474 <_start@@Base+0x2520>
   14ff0:	ldr	r2, [sl]
   14ff4:	ldr	r3, [r2, #8]
   14ff8:	ldr	r0, [r2, #12]
   14ffc:	b	13ea0 <message@@Base+0x948>
   15000:	bl	22dcc <restartSpeechDriver@@Base>
   15004:	ldr	r2, [sl]
   15008:	ldr	r3, [r2, #8]
   1500c:	ldr	r0, [r2, #12]
   15010:	b	13ea0 <message@@Base+0x948>
   15014:	ldr	r2, [sl]
   15018:	ldr	r1, [r2, #8]
   1501c:	ldr	r3, [r2, #16]
   15020:	ldr	r0, [r2, #20]
   15024:	cmp	r1, r3
   15028:	beq	14144 <message@@Base+0xbec>
   1502c:	str	r3, [r2, #8]
   15030:	str	r0, [r2, #12]
   15034:	b	13ea0 <message@@Base+0x948>
   15038:	ldr	r0, [pc, #-1576]	; 14a18 <message@@Base+0x14c0>
   1503c:	mov	r1, r7
   15040:	ldr	r2, [pc, #-1596]	; 14a0c <message@@Base+0x14b4>
   15044:	ldr	r3, [pc, #-1596]	; 14a10 <message@@Base+0x14b8>
   15048:	ldr	r0, [r4, r0]
   1504c:	ldr	r2, [r4, r2]
   15050:	ldr	r3, [r4, r3]
   15054:	add	r0, r0, #6
   15058:	bl	10e2c <_start@@Base+0xed8>
   1505c:	cmp	r0, #0
   15060:	bne	160fc <message@@Base+0x2ba4>
   15064:	ldr	r2, [sl]
   15068:	ldr	r3, [r2, #8]
   1506c:	ldr	r0, [r2, #12]
   15070:	b	13ea0 <message@@Base+0x948>
   15074:	ldr	r0, [pc, #-1636]	; 14a18 <message@@Base+0x14c0>
   15078:	mov	r1, r7
   1507c:	ldr	r2, [pc, #-1656]	; 14a0c <message@@Base+0x14b4>
   15080:	ldr	r3, [pc, #-1656]	; 14a10 <message@@Base+0x14b8>
   15084:	ldr	r0, [r4, r0]
   15088:	ldr	r2, [r4, r2]
   1508c:	ldr	r3, [r4, r3]
   15090:	add	r0, r0, #12
   15094:	bl	10e2c <_start@@Base+0xed8>
   15098:	ldr	r2, [sl]
   1509c:	ldr	r3, [r2, #8]
   150a0:	ldr	r0, [r2, #12]
   150a4:	b	13ea0 <message@@Base+0x948>
   150a8:	ldr	r2, [pc, #-1752]	; 149d8 <message@@Base+0x1480>
   150ac:	mov	r1, r7
   150b0:	ldr	r3, [pc, #-1756]	; 149dc <message@@Base+0x1484>
   150b4:	ldr	r0, [sl]
   150b8:	ldr	r2, [r4, r2]
   150bc:	ldr	r3, [r4, r3]
   150c0:	add	r0, r0, #4
   150c4:	bl	10e2c <_start@@Base+0xed8>
   150c8:	cmp	r0, #0
   150cc:	bne	16070 <message@@Base+0x2b18>
   150d0:	ldr	r2, [sl]
   150d4:	ldr	r3, [r2, #8]
   150d8:	ldr	r0, [r2, #12]
   150dc:	b	13ea0 <message@@Base+0x948>
   150e0:	ldr	r0, [sl]
   150e4:	mov	r2, #0
   150e8:	mov	r3, r2
   150ec:	mov	r1, r7
   150f0:	add	r0, r0, #5
   150f4:	bl	10e2c <_start@@Base+0xed8>
   150f8:	ldr	r2, [sl]
   150fc:	ldr	r3, [r2, #8]
   15100:	ldr	r0, [r2, #12]
   15104:	b	13ea0 <message@@Base+0x948>
   15108:	ldr	r0, [pc, #-1784]	; 14a18 <message@@Base+0x14c0>
   1510c:	mov	r1, r7
   15110:	ldr	r2, [pc, #-1804]	; 14a0c <message@@Base+0x14b4>
   15114:	ldr	r3, [pc, #-1804]	; 14a10 <message@@Base+0x14b8>
   15118:	ldr	r0, [r4, r0]
   1511c:	ldr	r2, [r4, r2]
   15120:	ldr	r3, [r4, r3]
   15124:	add	r0, r0, #36	; 0x24
   15128:	bl	10e2c <_start@@Base+0xed8>
   1512c:	ldr	r2, [sl]
   15130:	ldr	r3, [r2, #8]
   15134:	ldr	r0, [r2, #12]
   15138:	b	13ea0 <message@@Base+0x948>
   1513c:	ldr	r0, [pc, #-1836]	; 14a18 <message@@Base+0x14c0>
   15140:	mov	r1, r7
   15144:	ldr	r2, [pc, #-1856]	; 14a0c <message@@Base+0x14b4>
   15148:	ldr	r3, [pc, #-1856]	; 14a10 <message@@Base+0x14b8>
   1514c:	ldr	r0, [r4, r0]
   15150:	ldr	r2, [r4, r2]
   15154:	ldr	r3, [r4, r3]
   15158:	add	r0, r0, #32
   1515c:	bl	10e2c <_start@@Base+0xed8>
   15160:	ldr	r2, [sl]
   15164:	ldr	r3, [r2, #8]
   15168:	ldr	r0, [r2, #12]
   1516c:	b	13ea0 <message@@Base+0x948>
   15170:	ldr	r0, [pc, #-1888]	; 14a18 <message@@Base+0x14c0>
   15174:	mov	r1, r7
   15178:	ldr	r2, [pc, #-1908]	; 14a0c <message@@Base+0x14b4>
   1517c:	ldr	r3, [pc, #-1908]	; 14a10 <message@@Base+0x14b8>
   15180:	ldr	r0, [r4, r0]
   15184:	ldr	r2, [r4, r2]
   15188:	ldr	r3, [r4, r3]
   1518c:	add	r0, r0, #2
   15190:	bl	10e2c <_start@@Base+0xed8>
   15194:	ldr	r2, [sl]
   15198:	ldr	r3, [r2, #8]
   1519c:	ldr	r0, [r2, #12]
   151a0:	b	13ea0 <message@@Base+0x948>
   151a4:	ldr	r2, [sl]
   151a8:	ldr	r3, [r2, #8]
   151ac:	cmp	r3, #0
   151b0:	beq	166c0 <message@@Base+0x3168>
   151b4:	mov	r3, #0
   151b8:	ldr	r0, [r2, #12]
   151bc:	str	r3, [r2, #8]
   151c0:	b	13ea0 <message@@Base+0x948>
   151c4:	ldr	r0, [pc, #-1972]	; 14a18 <message@@Base+0x14c0>
   151c8:	mov	r1, r7
   151cc:	ldr	r2, [pc, #-1992]	; 14a0c <message@@Base+0x14b4>
   151d0:	ldr	r3, [pc, #-1992]	; 14a10 <message@@Base+0x14b8>
   151d4:	ldr	r0, [r4, r0]
   151d8:	ldr	r2, [r4, r2]
   151dc:	ldr	r3, [r4, r3]
   151e0:	add	r0, r0, #26
   151e4:	bl	10e2c <_start@@Base+0xed8>
   151e8:	ldr	r2, [sl]
   151ec:	ldr	r3, [r2, #8]
   151f0:	ldr	r0, [r2, #12]
   151f4:	b	13ea0 <message@@Base+0x948>
   151f8:	mov	r2, #131072	; 0x20000
   151fc:	b	1430c <message@@Base+0xdb4>
   15200:	ldr	r3, [pc, #-2048]	; 14a08 <message@@Base+0x14b0>
   15204:	mvn	r0, #0
   15208:	ldr	r2, [sl]
   1520c:	ldr	r3, [r4, r3]
   15210:	ldr	r1, [r2, #12]
   15214:	ldr	r2, [r3, #8]
   15218:	bl	391c8 <routeCursor@@Base>
   1521c:	cmp	r0, #0
   15220:	beq	160bc <message@@Base+0x2b64>
   15224:	ldr	r3, [pc, #-2060]	; 14a20 <message@@Base+0x14c8>
   15228:	ldr	r0, [r4, r3]
   1522c:	bl	37160 <playTune@@Base>
   15230:	ldr	r2, [sl]
   15234:	ldr	r3, [r2, #8]
   15238:	ldr	r0, [r2, #12]
   1523c:	b	13ea0 <message@@Base+0x948>
   15240:	ldr	r3, [pc, #-2112]	; 14a08 <message@@Base+0x14b0>
   15244:	ldr	r3, [r4, r3]
   15248:	ldr	r0, [r3, #8]
   1524c:	add	r0, r0, #1
   15250:	bl	113e8 <_start@@Base+0x1494>
   15254:	ldr	r2, [sl]
   15258:	ldr	r3, [r2, #8]
   1525c:	ldr	r0, [r2, #12]
   15260:	b	13ea0 <message@@Base+0x948>
   15264:	ldr	r3, [pc, #-2188]	; 149e0 <message@@Base+0x1488>
   15268:	mov	r0, r5
   1526c:	movw	r2, #10000	; 0x2710
   15270:	ldr	r3, [r4, r3]
   15274:	ldr	r1, [r3]
   15278:	bl	3e2f0 <learnMode@@Base>
   1527c:	cmp	r0, #0
   15280:	beq	16248 <message@@Base+0x2cf0>
   15284:	ldr	r2, [sl]
   15288:	ldr	r3, [r2, #8]
   1528c:	ldr	r0, [r2, #12]
   15290:	b	13ea0 <message@@Base+0x948>
   15294:	ldr	r3, [pc, #-2180]	; 14a18 <message@@Base+0x14c0>
   15298:	ldr	r3, [r4, r3]
   1529c:	ldrb	r3, [r3, #45]	; 0x2d
   152a0:	cmp	r3, #0
   152a4:	beq	16130 <message@@Base+0x2bd8>
   152a8:	bl	21a74 <haveStatusCells@@Base>
   152ac:	subs	r2, r0, #0
   152b0:	beq	16f94 <message@@Base+0x3a3c>
   152b4:	ldr	r1, [fp, #-524]	; 0xfffffdf4
   152b8:	ldr	r0, [pc, #-2248]	; 149f8 <message@@Base+0x14a0>
   152bc:	mov	r2, #0
   152c0:	mov	r3, r2
   152c4:	ldr	r0, [r4, r0]
   152c8:	bl	10e2c <_start@@Base+0xed8>
   152cc:	ldr	r2, [sl]
   152d0:	ldr	r3, [r2, #8]
   152d4:	ldr	r0, [r2, #12]
   152d8:	b	13ea0 <message@@Base+0x948>
   152dc:	bl	39344 <isHelpScreen@@Base>
   152e0:	cmp	r0, #0
   152e4:	beq	16268 <message@@Base+0x2d10>
   152e8:	bl	39474 <getHelpPageNumber@@Base>
   152ec:	mov	r7, #1
   152f0:	add	r8, r0, r7
   152f4:	cmp	r8, #0
   152f8:	bne	166f8 <message@@Base+0x31a0>
   152fc:	cmp	r7, #0
   15300:	beq	16498 <message@@Base+0x2f40>
   15304:	ldr	r3, [pc, #-2324]	; 149f8 <message@@Base+0x14a0>
   15308:	mov	ip, #0
   1530c:	ldr	r2, [sl]
   15310:	ldr	r1, [r4, r3]
   15314:	ldr	r0, [r2, #12]
   15318:	ldr	r3, [r2, #8]
   1531c:	strb	ip, [r1]
   15320:	b	13ea0 <message@@Base+0x948>
   15324:	ldr	r0, [pc, #-2324]	; 14a18 <message@@Base+0x14c0>
   15328:	mov	r1, r7
   1532c:	ldr	r2, [pc, #-2344]	; 14a0c <message@@Base+0x14b4>
   15330:	ldr	r3, [pc, #-2344]	; 14a10 <message@@Base+0x14b8>
   15334:	ldr	r0, [r4, r0]
   15338:	ldr	r2, [r4, r2]
   1533c:	ldr	r3, [r4, r3]
   15340:	add	r0, r0, #15
   15344:	bl	10e2c <_start@@Base+0xed8>
   15348:	ldr	r2, [sl]
   1534c:	ldr	r3, [r2, #8]
   15350:	ldr	r0, [r2, #12]
   15354:	b	13ea0 <message@@Base+0x948>
   15358:	ldr	r2, [sl]
   1535c:	ldr	r3, [r2, #16]
   15360:	ldr	r0, [r2, #20]
   15364:	b	1502c <message@@Base+0x1ad4>
   15368:	ldr	r1, [pc, #-2408]	; 14a08 <message@@Base+0x14b0>
   1536c:	ldr	r3, [pc, #-2448]	; 149e4 <message@@Base+0x148c>
   15370:	ldr	r2, [sl]
   15374:	ldr	r0, [r4, r1]
   15378:	ldr	r3, [r4, r3]
   1537c:	ldr	r1, [r2, #8]
   15380:	ldrsh	r0, [r0, #2]
   15384:	ldr	r3, [r3]
   15388:	cmp	r0, r3
   1538c:	rsbcs	r3, r3, r0
   15390:	rsbcc	r3, r3, r3
   15394:	cmp	r3, r1
   15398:	ble	166dc <message@@Base+0x3184>
   1539c:	str	r3, [r2, #8]
   153a0:	ldr	r0, [r2, #12]
   153a4:	b	13ea0 <message@@Base+0x948>
   153a8:	ldr	r0, [sl]
   153ac:	mov	r2, #0
   153b0:	mov	r3, r2
   153b4:	mov	r1, r7
   153b8:	add	r0, r0, #6
   153bc:	bl	10e2c <_start@@Base+0xed8>
   153c0:	ldr	r2, [sl]
   153c4:	ldr	r3, [r2, #8]
   153c8:	ldr	r0, [r2, #12]
   153cc:	b	13ea0 <message@@Base+0x948>
   153d0:	ldr	r3, [pc, #-2500]	; 14a14 <message@@Base+0x14bc>
   153d4:	ldr	r2, [pc, #-2548]	; 149e8 <message@@Base+0x1490>
   153d8:	ldr	r3, [r4, r3]
   153dc:	ldr	r0, [r4, r2]
   153e0:	ldr	r3, [r3]
   153e4:	ldr	r3, [r3, #44]	; 0x2c
   153e8:	blx	r3
   153ec:	ldr	r2, [sl]
   153f0:	ldr	r3, [r2, #8]
   153f4:	ldr	r0, [r2, #12]
   153f8:	b	13ea0 <message@@Base+0x948>
   153fc:	bl	39500 <isMenuScreen@@Base>
   15400:	cmp	r0, #0
   15404:	beq	161e8 <message@@Base+0x2c90>
   15408:	ldr	r0, [pc, #-2596]	; 149ec <message@@Base+0x1494>
   1540c:	add	r0, pc, r0
   15410:	add	r0, r0, #1088	; 0x440
   15414:	add	r0, r0, #8
   15418:	bl	21d54 <setPreferences@@Base>
   1541c:	ldr	r1, [pc, #-2612]	; 149f0 <message@@Base+0x1498>
   15420:	mov	r2, #5
   15424:	mov	r0, #0
   15428:	add	r1, pc, r1
   1542c:	bl	f9bc <dcgettext@plt>
   15430:	ldr	r3, [pc, #-2628]	; 149f4 <message@@Base+0x149c>
   15434:	mov	r2, #0
   15438:	add	r3, pc, r3
   1543c:	mov	r1, r0
   15440:	add	r0, r3, #4
   15444:	bl	13558 <message@@Base>
   15448:	ldr	r2, [sl]
   1544c:	ldr	r3, [r2, #8]
   15450:	ldr	r0, [r2, #12]
   15454:	b	13ea0 <message@@Base+0x948>
   15458:	bl	39500 <isMenuScreen@@Base>
   1545c:	cmp	r0, #0
   15460:	beq	161c0 <message@@Base+0x2c68>
   15464:	bl	21e44 <savePreferences@@Base>
   15468:	cmp	r0, #0
   1546c:	bne	16dd4 <message@@Base+0x387c>
   15470:	bl	395a8 <deactivateMenuScreen@@Base>
   15474:	ldr	r2, [sl]
   15478:	ldr	r3, [r2, #8]
   1547c:	ldr	r0, [r2, #12]
   15480:	b	13ea0 <message@@Base+0x948>
   15484:	bl	39500 <isMenuScreen@@Base>
   15488:	cmp	r0, #0
   1548c:	beq	16774 <message@@Base+0x321c>
   15490:	ldr	r3, [pc, #-2688]	; 14a18 <message@@Base+0x14c0>
   15494:	ldr	r3, [r4, r3]
   15498:	ldrb	r3, [r3, #78]	; 0x4e
   1549c:	cmp	r3, #0
   154a0:	bne	16a3c <message@@Base+0x34e4>
   154a4:	bl	395a8 <deactivateMenuScreen@@Base>
   154a8:	ldr	r3, [pc, #-2744]	; 149f8 <message@@Base+0x14a0>
   154ac:	mov	ip, #0
   154b0:	ldr	r2, [sl]
   154b4:	ldr	r1, [r4, r3]
   154b8:	ldr	r0, [r2, #12]
   154bc:	ldr	r3, [r2, #8]
   154c0:	strb	ip, [r1]
   154c4:	b	13ea0 <message@@Base+0x948>
   154c8:	ldr	ip, [pc, #-2744]	; 14a18 <message@@Base+0x14c0>
   154cc:	mov	r2, #1
   154d0:	ldr	r1, [pc, #-2768]	; 14a08 <message@@Base+0x14b0>
   154d4:	mov	r3, #0
   154d8:	ldr	r0, [sl]
   154dc:	ldr	ip, [r4, ip]
   154e0:	ldr	r1, [r4, r1]
   154e4:	ldr	r0, [r0, #12]
   154e8:	ldrb	ip, [ip, #13]
   154ec:	ldrsh	r1, [r1, #2]
   154f0:	str	ip, [sp]
   154f4:	bl	12668 <_start@@Base+0x2714>
   154f8:	ldr	r2, [sl]
   154fc:	ldr	r3, [r2, #8]
   15500:	ldr	r0, [r2, #12]
   15504:	b	13ea0 <message@@Base+0x948>
   15508:	ldr	r2, [pc, #-2824]	; 14a08 <message@@Base+0x14b0>
   1550c:	ldr	r3, [pc, #-2840]	; 149fc <message@@Base+0x14a4>
   15510:	ldr	r2, [r4, r2]
   15514:	add	r3, pc, r3
   15518:	ldr	r3, [r3]
   1551c:	ldr	r2, [r2, #8]
   15520:	cmp	r2, r3
   15524:	beq	1679c <message@@Base+0x3244>
   15528:	ldr	r3, [pc, #-2836]	; 14a1c <message@@Base+0x14c4>
   1552c:	ldr	r0, [r4, r3]
   15530:	bl	37160 <playTune@@Base>
   15534:	ldr	r2, [sl]
   15538:	ldr	r3, [r2, #8]
   1553c:	ldr	r0, [r2, #12]
   15540:	b	13ea0 <message@@Base+0x948>
   15544:	ldr	r1, [pc, #-2884]	; 14a08 <message@@Base+0x14b0>
   15548:	mov	ip, #0
   1554c:	ldr	r2, [sl]
   15550:	mov	r3, #1
   15554:	mov	r0, ip
   15558:	ldr	r1, [r4, r1]
   1555c:	ldr	r2, [r2, #12]
   15560:	ldrsh	r1, [r1, #2]
   15564:	add	r2, r2, r3
   15568:	str	ip, [sp]
   1556c:	bl	12668 <_start@@Base+0x2714>
   15570:	ldr	r2, [sl]
   15574:	ldr	r3, [r2, #8]
   15578:	ldr	r0, [r2, #12]
   1557c:	b	13ea0 <message@@Base+0x948>
   15580:	ldr	r0, [pc, #-2928]	; 14a18 <message@@Base+0x14c0>
   15584:	mov	r1, r7
   15588:	ldr	r2, [pc, #-2948]	; 14a0c <message@@Base+0x14b4>
   1558c:	ldr	r3, [pc, #-2948]	; 14a10 <message@@Base+0x14b8>
   15590:	ldr	r0, [r4, r0]
   15594:	ldr	r2, [r4, r2]
   15598:	ldr	r3, [r4, r3]
   1559c:	add	r0, r0, #7
   155a0:	bl	10e2c <_start@@Base+0xed8>
   155a4:	cmp	r0, #0
   155a8:	bne	16504 <message@@Base+0x2fac>
   155ac:	ldr	r2, [sl]
   155b0:	ldr	r3, [r2, #8]
   155b4:	ldr	r0, [r2, #12]
   155b8:	b	13ea0 <message@@Base+0x948>
   155bc:	ldr	r0, [pc, #-2988]	; 14a18 <message@@Base+0x14c0>
   155c0:	mov	r1, r7
   155c4:	ldr	r2, [pc, #-3008]	; 14a0c <message@@Base+0x14b4>
   155c8:	ldr	r3, [pc, #-3008]	; 14a10 <message@@Base+0x14b8>
   155cc:	ldr	r0, [r4, r0]
   155d0:	ldr	r2, [r4, r2]
   155d4:	ldr	r3, [r4, r3]
   155d8:	add	r0, r0, #30
   155dc:	bl	10e2c <_start@@Base+0xed8>
   155e0:	ldr	r2, [sl]
   155e4:	ldr	r3, [r2, #8]
   155e8:	ldr	r0, [r2, #12]
   155ec:	b	13ea0 <message@@Base+0x948>
   155f0:	ldr	r0, [pc, #-3040]	; 14a18 <message@@Base+0x14c0>
   155f4:	mov	r1, r7
   155f8:	ldr	r2, [pc, #-3060]	; 14a0c <message@@Base+0x14b4>
   155fc:	ldr	r3, [pc, #-3060]	; 14a10 <message@@Base+0x14b8>
   15600:	ldr	r0, [r4, r0]
   15604:	ldr	r2, [r4, r2]
   15608:	ldr	r3, [r4, r3]
   1560c:	add	r0, r0, #63	; 0x3f
   15610:	bl	10e2c <_start@@Base+0xed8>
   15614:	ldr	r2, [sl]
   15618:	ldr	r3, [r2, #8]
   1561c:	ldr	r0, [r2, #12]
   15620:	b	13ea0 <message@@Base+0x948>
   15624:	ldr	r0, [pc, #-3092]	; 14a18 <message@@Base+0x14c0>
   15628:	mov	r1, r7
   1562c:	ldr	r2, [pc, #-3112]	; 14a0c <message@@Base+0x14b4>
   15630:	ldr	r3, [pc, #-3112]	; 14a10 <message@@Base+0x14b8>
   15634:	ldr	r0, [r4, r0]
   15638:	ldr	r2, [r4, r2]
   1563c:	ldr	r3, [r4, r3]
   15640:	add	r0, r0, #62	; 0x3e
   15644:	bl	10e2c <_start@@Base+0xed8>
   15648:	ldr	r2, [sl]
   1564c:	ldr	r3, [r2, #8]
   15650:	ldr	r0, [r2, #12]
   15654:	b	13ea0 <message@@Base+0x948>
   15658:	bl	38d78 <isLiveScreen@@Base>
   1565c:	cmp	r0, #0
   15660:	beq	16044 <message@@Base+0x2aec>
   15664:	bl	395fc <activateFrozenScreen@@Base>
   15668:	cmp	r0, #0
   1566c:	beq	16878 <message@@Base+0x3320>
   15670:	ldr	r3, [pc, #-3192]	; 14a00 <message@@Base+0x14a8>
   15674:	ldr	r0, [r4, r3]
   15678:	bl	37160 <playTune@@Base>
   1567c:	ldr	r2, [sl]
   15680:	ldr	r3, [r2, #8]
   15684:	ldr	r0, [r2, #12]
   15688:	b	13ea0 <message@@Base+0x948>
   1568c:	ldr	r0, [pc, #-3196]	; 14a18 <message@@Base+0x14c0>
   15690:	mov	r1, r7
   15694:	ldr	r2, [pc, #-3216]	; 14a0c <message@@Base+0x14b4>
   15698:	ldr	r3, [pc, #-3216]	; 14a10 <message@@Base+0x14b8>
   1569c:	ldr	r0, [r4, r0]
   156a0:	ldr	r2, [r4, r2]
   156a4:	ldr	r3, [r4, r3]
   156a8:	add	r0, r0, #10
   156ac:	bl	10e2c <_start@@Base+0xed8>
   156b0:	cmp	r0, #0
   156b4:	bne	16214 <message@@Base+0x2cbc>
   156b8:	ldr	r2, [sl]
   156bc:	ldr	r3, [r2, #8]
   156c0:	ldr	r0, [r2, #12]
   156c4:	b	13ea0 <message@@Base+0x948>
   156c8:	ldr	r0, [pc, #-3256]	; 14a18 <message@@Base+0x14c0>
   156cc:	mov	r1, r7
   156d0:	ldr	r2, [pc, #-3276]	; 14a0c <message@@Base+0x14b4>
   156d4:	ldr	r3, [pc, #-3276]	; 14a10 <message@@Base+0x14b8>
   156d8:	ldr	r0, [r4, r0]
   156dc:	ldr	r2, [r4, r2]
   156e0:	ldr	r3, [r4, r3]
   156e4:	add	r0, r0, #4
   156e8:	bl	10e2c <_start@@Base+0xed8>
   156ec:	ldr	r2, [sl]
   156f0:	ldr	r3, [r2, #8]
   156f4:	ldr	r0, [r2, #12]
   156f8:	b	13ea0 <message@@Base+0x948>
   156fc:	bl	38d78 <isLiveScreen@@Base>
   15700:	cmp	r0, #0
   15704:	beq	15714 <message@@Base+0x21bc>
   15708:	bl	3d11c <isRouting@@Base>
   1570c:	cmp	r0, #0
   15710:	beq	16de8 <message@@Base+0x3890>
   15714:	ldr	r3, [pc, #-3328]	; 14a1c <message@@Base+0x14c4>
   15718:	ldr	r0, [r4, r3]
   1571c:	bl	37160 <playTune@@Base>
   15720:	ldr	r2, [sl]
   15724:	ldr	r3, [r2, #8]
   15728:	ldr	r0, [r2, #12]
   1572c:	b	13ea0 <message@@Base+0x948>
   15730:	mov	r2, #524288	; 0x80000
   15734:	b	1430c <message@@Base+0xdb4>
   15738:	mov	r2, #262144	; 0x40000
   1573c:	b	1430c <message@@Base+0xdb4>
   15740:	sub	r6, fp, #508	; 0x1fc
   15744:	str	r6, [fp, #-548]	; 0xfffffddc
   15748:	mov	r0, r6
   1574c:	bl	111a8 <_start@@Base+0x1254>
   15750:	bl	11a00 <_start@@Base+0x1aac>
   15754:	cmp	r0, #0
   15758:	subeq	r9, fp, #296	; 0x128
   1575c:	bne	16518 <message@@Base+0x2fc0>
   15760:	sub	r1, fp, #508	; 0x1fc
   15764:	mov	r0, r9
   15768:	bl	12780 <_start@@Base+0x282c>
   1576c:	mov	r2, #1
   15770:	mov	r1, r9
   15774:	mov	r0, #0
   15778:	bl	13558 <message@@Base>
   1577c:	ldr	r2, [sl]
   15780:	ldr	r3, [r2, #8]
   15784:	ldr	r0, [r2, #12]
   15788:	b	13ea0 <message@@Base+0x948>
   1578c:	ldr	r3, [pc, #-3468]	; 14a08 <message@@Base+0x14b0>
   15790:	mov	r6, #1
   15794:	str	r6, [fp, #-544]	; 0xfffffde0
   15798:	ldr	r6, [r4, r3]
   1579c:	ldrsh	r3, [r6]
   157a0:	sub	r3, r3, #1
   157a4:	str	r3, [fp, #-540]	; 0xfffffde4
   157a8:	b	143bc <message@@Base+0xe64>
   157ac:	ldr	r0, [pc, #-3484]	; 14a18 <message@@Base+0x14c0>
   157b0:	mov	r1, r7
   157b4:	ldr	r2, [pc, #-3504]	; 14a0c <message@@Base+0x14b4>
   157b8:	ldr	r3, [pc, #-3504]	; 14a10 <message@@Base+0x14b8>
   157bc:	ldr	r0, [r4, r0]
   157c0:	ldr	r2, [r4, r2]
   157c4:	ldr	r3, [r4, r3]
   157c8:	add	r0, r0, #8
   157cc:	bl	10e2c <_start@@Base+0xed8>
   157d0:	cmp	r0, #0
   157d4:	bne	160c8 <message@@Base+0x2b70>
   157d8:	ldr	r2, [sl]
   157dc:	ldr	r3, [r2, #8]
   157e0:	ldr	r0, [r2, #12]
   157e4:	b	13ea0 <message@@Base+0x948>
   157e8:	ldr	r3, [pc, #-3548]	; 14a14 <message@@Base+0x14bc>
   157ec:	ldr	r3, [r4, r3]
   157f0:	ldr	r3, [r3]
   157f4:	ldr	r3, [r3, #60]	; 0x3c
   157f8:	cmp	r3, #0
   157fc:	beq	15814 <message@@Base+0x22bc>
   15800:	ldr	r3, [pc, #-3568]	; 14a18 <message@@Base+0x14c0>
   15804:	ldr	r3, [r4, r3]
   15808:	ldrb	r2, [r3, #41]	; 0x29
   1580c:	cmp	r2, #19
   15810:	bls	16820 <message@@Base+0x32c8>
   15814:	ldr	r3, [pc, #-3584]	; 14a1c <message@@Base+0x14c4>
   15818:	ldr	r0, [r4, r3]
   1581c:	bl	37160 <playTune@@Base>
   15820:	ldr	r2, [sl]
   15824:	ldr	r3, [r2, #8]
   15828:	ldr	r0, [r2, #12]
   1582c:	b	13ea0 <message@@Base+0x948>
   15830:	bl	22a04 <restartBrailleDriver@@Base>
   15834:	bl	13150 <resetAutorepeat@@Base+0x18>
   15838:	ldr	r3, [pc, #-3644]	; 14a04 <message@@Base+0x14ac>
   1583c:	ldr	r2, [sl]
   15840:	mov	r1, #0
   15844:	add	r3, pc, r3
   15848:	ldr	r0, [r2, #12]
   1584c:	str	r1, [r3, #1084]	; 0x43c
   15850:	ldr	r3, [r2, #8]
   15854:	b	13ea0 <message@@Base+0x948>
   15858:	ldr	r3, [pc, #-3672]	; 14a08 <message@@Base+0x14b0>
   1585c:	ldr	r3, [r4, r3]
   15860:	ldr	r0, [r3, #8]
   15864:	sub	r0, r0, #1
   15868:	bl	113e8 <_start@@Base+0x1494>
   1586c:	ldr	r2, [sl]
   15870:	ldr	r3, [r2, #8]
   15874:	ldr	r0, [r2, #12]
   15878:	b	13ea0 <message@@Base+0x948>
   1587c:	bl	12474 <_start@@Base+0x2520>
   15880:	ldr	r2, [sl]
   15884:	ldr	r3, [r2, #8]
   15888:	ldr	r0, [r2, #12]
   1588c:	b	13ea0 <message@@Base+0x948>
   15890:	ldr	r0, [pc, #-3712]	; 14a18 <message@@Base+0x14c0>
   15894:	mov	r1, r7
   15898:	ldr	r2, [pc, #-3732]	; 14a0c <message@@Base+0x14b4>
   1589c:	ldr	r3, [pc, #-3732]	; 14a10 <message@@Base+0x14b8>
   158a0:	ldr	r0, [r4, r0]
   158a4:	ldr	r2, [r4, r2]
   158a8:	ldr	r3, [r4, r3]
   158ac:	add	r0, r0, #66	; 0x42
   158b0:	bl	10e2c <_start@@Base+0xed8>
   158b4:	ldr	r2, [sl]
   158b8:	ldr	r3, [r2, #8]
   158bc:	ldr	r0, [r2, #12]
   158c0:	b	13ea0 <message@@Base+0x948>
   158c4:	ldr	r3, [pc, #-3768]	; 14a14 <message@@Base+0x14bc>
   158c8:	ldr	r3, [r4, r3]
   158cc:	ldr	r3, [r3]
   158d0:	ldr	r3, [r3, #60]	; 0x3c
   158d4:	cmp	r3, #0
   158d8:	beq	158f0 <message@@Base+0x2398>
   158dc:	ldr	r3, [pc, #-3788]	; 14a18 <message@@Base+0x14c0>
   158e0:	ldr	r3, [r4, r3]
   158e4:	ldrb	r2, [r3, #41]	; 0x29
   158e8:	cmp	r2, #0
   158ec:	bne	1684c <message@@Base+0x32f4>
   158f0:	ldr	r3, [pc, #-3804]	; 14a1c <message@@Base+0x14c4>
   158f4:	ldr	r0, [r4, r3]
   158f8:	bl	37160 <playTune@@Base>
   158fc:	ldr	r2, [sl]
   15900:	ldr	r3, [r2, #8]
   15904:	ldr	r0, [r2, #12]
   15908:	b	13ea0 <message@@Base+0x948>
   1590c:	and	r2, r7, #65280	; 0xff00
   15910:	uxtb	r9, r7
   15914:	cmp	r2, #3072	; 0xc00
   15918:	lsr	r8, r7, #24
   1591c:	and	r3, r7, #16711680	; 0xff0000
   15920:	beq	1776c <message@@Base+0x4214>
   15924:	bgt	16148 <message@@Base+0x2bf0>
   15928:	cmp	r2, #1536	; 0x600
   1592c:	beq	179d0 <message@@Base+0x4478>
   15930:	bgt	169a8 <message@@Base+0x3450>
   15934:	cmp	r2, #768	; 0x300
   15938:	beq	17794 <message@@Base+0x423c>
   1593c:	bgt	1724c <message@@Base+0x3cf4>
   15940:	cmp	r2, #256	; 0x100
   15944:	beq	17b80 <message@@Base+0x4628>
   15948:	cmp	r2, #512	; 0x200
   1594c:	bne	16178 <message@@Base+0x2c20>
   15950:	mov	r3, #0
   15954:	mov	r0, r9
   15958:	str	r3, [sp]
   1595c:	sub	r1, fp, #512	; 0x200
   15960:	sub	r2, fp, #508	; 0x1fc
   15964:	bl	fe54 <__printf_chk@plt+0x30>
   15968:	cmp	r0, #0
   1596c:	beq	177b4 <message@@Base+0x425c>
   15970:	bl	26a5c <cpbClearContent@@Base>
   15974:	ldr	r0, [fp, #-512]	; 0xfffffe00
   15978:	ldr	r1, [fp, #-508]	; 0xfffffe04
   1597c:	bl	26b3c <cpbBeginOperation@@Base>
   15980:	ldr	r2, [sl]
   15984:	ldr	r3, [r2, #8]
   15988:	ldr	r0, [r2, #12]
   1598c:	b	13ea0 <message@@Base+0x948>
   15990:	ldr	r6, [fp, #-536]	; 0xfffffde8
   15994:	cmp	r6, r0
   15998:	bne	13eac <message@@Base+0x954>
   1599c:	b	13efc <message@@Base+0x9a4>
   159a0:	ldr	r3, [pc, #-3976]	; 14a20 <message@@Base+0x14c8>
   159a4:	ldr	r0, [r4, r3]
   159a8:	bl	37160 <playTune@@Base>
   159ac:	mov	r0, #2
   159b0:	mov	r1, #1
   159b4:	bl	109dc <_start@@Base+0xa88>
   159b8:	sub	r0, fp, #508	; 0x1fc
   159bc:	bl	3907c <describeScreen@@Base>
   159c0:	ldr	r3, [r6, #8]
   159c4:	ldr	r2, [fp, #-500]	; 0xfffffe0c
   159c8:	cmp	r2, r3
   159cc:	bne	13fb4 <message@@Base+0xa5c>
   159d0:	movw	r3, #65070	; 0xfe2e
   159d4:	sub	ip, fp, #36	; 0x24
   159d8:	movt	r3, #65535	; 0xffff
   159dc:	ldr	r2, [sl]
   159e0:	ldrh	r3, [ip, r3]
   159e4:	ldr	r1, [r2, #12]
   159e8:	sxth	r3, r3
   159ec:	cmp	r3, r1
   159f0:	blt	15a0c <message@@Base+0x24b4>
   159f4:	ldr	r0, [r5, #4]
   159f8:	add	r1, r1, r0
   159fc:	cmp	r3, r1
   15a00:	blt	15a10 <message@@Base+0x24b8>
   15a04:	rsb	r3, r0, r3
   15a08:	add	r3, r3, #1
   15a0c:	str	r3, [r2, #12]
   15a10:	sub	r1, fp, #36	; 0x24
   15a14:	movw	r3, #65068	; 0xfe2c
   15a18:	movt	r3, #65535	; 0xffff
   15a1c:	ldrh	r3, [r1, r3]
   15a20:	sxth	r0, r3
   15a24:	bl	11598 <_start@@Base+0x1644>
   15a28:	b	13fb4 <message@@Base+0xa5c>
   15a2c:	cmp	r4, #0
   15a30:	beq	16908 <message@@Base+0x33b0>
   15a34:	mov	r4, #0
   15a38:	b	142c8 <message@@Base+0xd70>
   15a3c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   15a40:	bl	10de4 <_start@@Base+0xe90>
   15a44:	b	1406c <message@@Base+0xb14>
   15a48:	ldr	r0, [fp, #-540]	; 0xfffffde4
   15a4c:	bl	10d9c <_start@@Base+0xe48>
   15a50:	b	13dcc <message@@Base+0x874>
   15a54:	ldr	r6, [fp, #-544]	; 0xfffffde0
   15a58:	ldr	r0, [r6, sl, lsl #3]
   15a5c:	bl	11f7c <_start@@Base+0x2028>
   15a60:	subs	r4, r0, #2
   15a64:	mov	r8, r0
   15a68:	movne	r4, #1
   15a6c:	b	144cc <message@@Base+0xf74>
   15a70:	cmp	sl, #0
   15a74:	ldrne	ip, [fp, #-544]	; 0xfffffde0
   15a78:	addne	r6, ip, sl, lsl #3
   15a7c:	bne	15a88 <message@@Base+0x2530>
   15a80:	b	15acc <message@@Base+0x2574>
   15a84:	mov	sl, r7
   15a88:	ldr	r0, [r6, #-8]
   15a8c:	sub	r7, sl, #1
   15a90:	bl	11f7c <_start@@Base+0x2028>
   15a94:	cmp	r8, r0
   15a98:	beq	15ac0 <message@@Base+0x2568>
   15a9c:	cmp	r4, #0
   15aa0:	bne	15aac <message@@Base+0x2554>
   15aa4:	cmp	r8, #2
   15aa8:	bne	15c78 <message@@Base+0x2720>
   15aac:	cmp	r0, #2
   15ab0:	mov	r4, #0
   15ab4:	movne	r8, r0
   15ab8:	moveq	r8, #2
   15abc:	movne	r9, sl
   15ac0:	cmp	r7, #0
   15ac4:	sub	r6, r6, #8
   15ac8:	bne	15a84 <message@@Base+0x252c>
   15acc:	eor	r4, r4, #1
   15ad0:	cmp	r8, #2
   15ad4:	moveq	r2, #0
   15ad8:	andne	r2, r4, #1
   15adc:	cmp	r2, #0
   15ae0:	bne	17698 <message@@Base+0x4140>
   15ae4:	ldr	r6, [fp, #-540]	; 0xfffffde4
   15ae8:	cmp	r6, #0
   15aec:	beq	16c84 <message@@Base+0x372c>
   15af0:	ldr	ip, [fp, #-548]	; 0xfffffddc
   15af4:	sub	r7, r6, #1
   15af8:	cmp	r6, ip
   15afc:	beq	163fc <message@@Base+0x2ea4>
   15b00:	ldr	ip, [fp, #-560]	; 0xfffffdd0
   15b04:	ldrsh	r6, [ip, #2]
   15b08:	mov	sl, r6
   15b0c:	b	14580 <message@@Base+0x1028>
   15b10:	ldr	r3, [pc, #3992]	; 16ab0 <message@@Base+0x3558>
   15b14:	strb	ip, [r2, #4]
   15b18:	ldr	r0, [r4, r3]
   15b1c:	bl	37160 <playTune@@Base>
   15b20:	b	13efc <message@@Base+0x9a4>
   15b24:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   15b28:	mov	ip, r5
   15b2c:	ldr	r4, [fp, #-568]	; 0xfffffdc8
   15b30:	mov	r8, sl
   15b34:	ldr	r5, [fp, #-576]	; 0xfffffdc0
   15b38:	ldr	sl, [fp, #-564]	; 0xfffffdcc
   15b3c:	str	ip, [r1, #40]	; 0x28
   15b40:	ldr	r6, [fp, #-540]	; 0xfffffde4
   15b44:	str	r6, [r1, #44]	; 0x2c
   15b48:	ldr	r0, [fp, #-544]	; 0xfffffde0
   15b4c:	rsb	r2, ip, r8
   15b50:	ldr	r3, [fp, #-572]	; 0xfffffdc4
   15b54:	mov	r1, ip
   15b58:	bl	1237c <_start@@Base+0x2428>
   15b5c:	ldr	r2, [sl]
   15b60:	ldr	sp, [fp, #-580]	; 0xfffffdbc
   15b64:	ldr	r3, [r2, #8]
   15b68:	ldr	r0, [r2, #12]
   15b6c:	b	13ea0 <message@@Base+0x948>
   15b70:	mov	r3, #0
   15b74:	b	142b4 <message@@Base+0xd5c>
   15b78:	ldrsh	r1, [r6, #4]
   15b7c:	cmp	r1, #0
   15b80:	blt	13e84 <message@@Base+0x92c>
   15b84:	ldr	r2, [r2, #8]
   15b88:	add	ip, r2, r5
   15b8c:	cmp	r1, ip
   15b90:	bge	13e84 <message@@Base+0x92c>
   15b94:	rsb	r2, r2, r1
   15b98:	cmp	r3, r2
   15b9c:	movlt	r3, r2
   15ba0:	b	13e84 <message@@Base+0x92c>
   15ba4:	ldrsh	r0, [r6, #2]
   15ba8:	ldrsh	r1, [r6, #4]
   15bac:	cmp	r0, r1
   15bb0:	ble	14128 <message@@Base+0xbd0>
   15bb4:	ldr	r2, [r2, #8]
   15bb8:	cmp	r1, r2
   15bbc:	blt	14128 <message@@Base+0xbd0>
   15bc0:	rsb	r2, r2, r1
   15bc4:	cmp	r3, r2
   15bc8:	movge	r3, r2
   15bcc:	b	14128 <message@@Base+0xbd0>
   15bd0:	ldr	r2, [sl]
   15bd4:	ldr	r3, [r2, #8]
   15bd8:	ldr	r0, [r2, #12]
   15bdc:	b	13ea0 <message@@Base+0x948>
   15be0:	ldr	r3, [pc, #3788]	; 16ab4 <message@@Base+0x355c>
   15be4:	ldr	r0, [r4, r3]
   15be8:	b	14344 <message@@Base+0xdec>
   15bec:	mov	r3, #0
   15bf0:	b	140e8 <message@@Base+0xb90>
   15bf4:	ldr	r1, [pc, #3772]	; 16ab8 <message@@Base+0x3560>
   15bf8:	add	r1, pc, r1
   15bfc:	ldr	r3, [r1, #1072]	; 0x430
   15c00:	bic	r3, r3, r2
   15c04:	str	r3, [r1, #1072]	; 0x430
   15c08:	b	14334 <message@@Base+0xddc>
   15c0c:	ldr	r1, [pc, #3752]	; 16abc <message@@Base+0x3564>
   15c10:	add	r1, pc, r1
   15c14:	ldr	r3, [r1, #1072]	; 0x430
   15c18:	orr	r3, r2, r3
   15c1c:	str	r3, [r1, #1072]	; 0x430
   15c20:	b	14334 <message@@Base+0xddc>
   15c24:	mov	r0, #0
   15c28:	ldr	r2, [pc, #3728]	; 16ac0 <message@@Base+0x3568>
   15c2c:	mov	r1, r8
   15c30:	mov	r3, r9
   15c34:	add	r2, pc, r2
   15c38:	bl	10eb0 <_start@@Base+0xf5c>
   15c3c:	b	141f4 <message@@Base+0xc9c>
   15c40:	ldr	r1, [pc, #3708]	; 16ac4 <message@@Base+0x356c>
   15c44:	add	r1, pc, r1
   15c48:	ldr	r3, [r1, #1072]	; 0x430
   15c4c:	eor	r3, r2, r3
   15c50:	str	r3, [r1, #1072]	; 0x430
   15c54:	b	14334 <message@@Base+0xddc>
   15c58:	ldr	r6, [fp, #-568]	; 0xfffffdc8
   15c5c:	mvn	sl, #0
   15c60:	ldr	r3, [pc, #3788]	; 16b34 <message@@Base+0x35dc>
   15c64:	ldr	r0, [r6, r3]
   15c68:	bl	37160 <playTune@@Base>
   15c6c:	ldr	ip, [fp, #-560]	; 0xfffffdd0
   15c70:	ldrsh	r6, [ip, #2]
   15c74:	b	14580 <message@@Base+0x1028>
   15c78:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   15c7c:	mov	r8, sl
   15c80:	ldr	r6, [fp, #-540]	; 0xfffffde4
   15c84:	mov	ip, r8
   15c88:	str	r9, [fp, #-548]	; 0xfffffddc
   15c8c:	str	r8, [r1, #40]	; 0x28
   15c90:	mov	r8, r9
   15c94:	ldr	r4, [fp, #-568]	; 0xfffffdc8
   15c98:	ldr	sl, [fp, #-564]	; 0xfffffdcc
   15c9c:	ldr	r5, [fp, #-576]	; 0xfffffdc0
   15ca0:	str	r6, [r1, #44]	; 0x2c
   15ca4:	b	15b48 <message@@Base+0x25f0>
   15ca8:	ldr	r3, [pc, #3760]	; 16b60 <message@@Base+0x3608>
   15cac:	ldr	r0, [r4, r3]
   15cb0:	bl	37160 <playTune@@Base>
   15cb4:	ldr	r2, [sl]
   15cb8:	ldr	r3, [r2, #8]
   15cbc:	ldr	r0, [r2, #12]
   15cc0:	b	13ea0 <message@@Base+0x948>
   15cc4:	ldr	r3, [pc, #3732]	; 16b60 <message@@Base+0x3608>
   15cc8:	ldr	r0, [r4, r3]
   15ccc:	bl	37160 <playTune@@Base>
   15cd0:	ldr	r3, [sl]
   15cd4:	ldr	r6, [fp, #-552]	; 0xfffffdd8
   15cd8:	ldr	ip, [fp, #-556]	; 0xfffffdd4
   15cdc:	str	r6, [r3, #8]
   15ce0:	str	ip, [r3, #12]
   15ce4:	b	14130 <message@@Base+0xbd8>
   15ce8:	ldr	r3, [pc, #3696]	; 16b60 <message@@Base+0x3608>
   15cec:	ldr	r5, [fp, #-548]	; 0xfffffddc
   15cf0:	ldr	r0, [r4, r3]
   15cf4:	bl	37160 <playTune@@Base>
   15cf8:	ldr	r3, [sl]
   15cfc:	ldr	r6, [fp, #-552]	; 0xfffffdd8
   15d00:	ldr	ip, [fp, #-556]	; 0xfffffdd4
   15d04:	str	r6, [r3, #8]
   15d08:	str	ip, [r3, #12]
   15d0c:	b	13e90 <message@@Base+0x938>
   15d10:	ldr	r3, [sl]
   15d14:	lsl	r0, r7, #2
   15d18:	lsl	r8, ip, #2
   15d1c:	add	r0, r0, #10
   15d20:	bic	r0, r0, #7
   15d24:	add	r2, r8, #10
   15d28:	ldr	r3, [r3, #12]
   15d2c:	bic	r2, r2, #7
   15d30:	str	sp, [fp, #-572]	; 0xfffffdc4
   15d34:	cmp	ip, #0
   15d38:	sub	sp, sp, r0
   15d3c:	add	r0, sp, #24
   15d40:	sub	sp, sp, r2
   15d44:	add	r1, sp, #24
   15d48:	str	r0, [fp, #-576]	; 0xfffffdc0
   15d4c:	str	r1, [fp, #-552]	; 0xfffffdd8
   15d50:	str	r3, [fp, #-568]	; 0xfffffdc8
   15d54:	beq	15d8c <message@@Base+0x2834>
   15d58:	str	r4, [fp, #-548]	; 0xfffffddc
   15d5c:	mov	r3, #0
   15d60:	ldr	r4, [fp, #-552]	; 0xfffffdd8
   15d64:	str	r5, [fp, #-556]	; 0xfffffdd4
   15d68:	mov	r5, r3
   15d6c:	ldr	r0, [r9, r5]
   15d70:	bl	f434 <towlower@plt>
   15d74:	str	r0, [r4, r5]
   15d78:	add	r5, r5, #4
   15d7c:	cmp	r8, r5
   15d80:	bne	15d6c <message@@Base+0x2814>
   15d84:	ldr	r4, [fp, #-548]	; 0xfffffddc
   15d88:	ldr	r5, [fp, #-556]	; 0xfffffdd4
   15d8c:	ldr	ip, [fp, #-568]	; 0xfffffdc8
   15d90:	cmp	ip, #0
   15d94:	blt	16458 <message@@Base+0x2f00>
   15d98:	ldrsh	r2, [r6]
   15d9c:	ldr	r3, [r5, #4]
   15da0:	ldr	ip, [fp, #-568]	; 0xfffffdc8
   15da4:	rsb	r3, r3, r2
   15da8:	cmp	ip, r3
   15dac:	bgt	16458 <message@@Base+0x2f00>
   15db0:	ldr	r9, [fp, #-576]	; 0xfffffdc0
   15db4:	mov	r3, r7
   15db8:	ldr	r0, [fp, #-544]	; 0xfffffde0
   15dbc:	mov	r8, ip
   15dc0:	mov	r7, r5
   15dc4:	sub	r1, fp, #512	; 0x200
   15dc8:	sub	r0, r0, #1
   15dcc:	sub	r2, fp, #508	; 0x1fc
   15dd0:	str	r0, [fp, #-580]	; 0xfffffdbc
   15dd4:	str	r1, [fp, #-556]	; 0xfffffdd4
   15dd8:	str	r2, [fp, #-560]	; 0xfffffdd0
   15ddc:	str	r4, [fp, #-564]	; 0xfffffdcc
   15de0:	str	sl, [fp, #-548]	; 0xfffffddc
   15de4:	str	r3, [fp, #-508]	; 0xfffffe04
   15de8:	mov	r2, r3
   15dec:	str	r9, [fp, #-512]	; 0xfffffe00
   15df0:	mov	r0, #0
   15df4:	str	r9, [sp]
   15df8:	sxth	r1, r8
   15dfc:	mov	r3, #1
   15e00:	bl	3910c <readScreenText@@Base>
   15e04:	ldr	r4, [fp, #-508]	; 0xfffffe04
   15e08:	cmp	r4, #0
   15e0c:	movne	r5, r9
   15e10:	movne	sl, #0
   15e14:	beq	15e30 <message@@Base+0x28d8>
   15e18:	ldr	r0, [r5]
   15e1c:	add	sl, sl, #1
   15e20:	bl	f434 <towlower@plt>
   15e24:	cmp	sl, r4
   15e28:	str	r0, [r5], #4
   15e2c:	bne	15e18 <message@@Base+0x28c0>
   15e30:	ldr	ip, [fp, #-548]	; 0xfffffddc
   15e34:	ldr	r3, [ip]
   15e38:	ldr	r2, [r3, #12]
   15e3c:	cmp	r2, r8
   15e40:	beq	15e88 <message@@Base+0x2930>
   15e44:	sub	r0, fp, #512	; 0x200
   15e48:	sub	r1, fp, #508	; 0x1fc
   15e4c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   15e50:	ldr	r3, [fp, #-544]	; 0xfffffde0
   15e54:	bl	11110 <_start@@Base+0x11bc>
   15e58:	cmp	r0, #0
   15e5c:	bne	16d04 <message@@Base+0x37ac>
   15e60:	ldr	r2, [fp, #-540]	; 0xfffffde4
   15e64:	adds	r8, r8, r2
   15e68:	bmi	1644c <message@@Base+0x2ef4>
   15e6c:	ldrsh	r2, [r6]
   15e70:	ldr	r3, [r7, #4]
   15e74:	rsb	r3, r3, r2
   15e78:	cmp	r3, r8
   15e7c:	blt	1644c <message@@Base+0x2ef4>
   15e80:	ldrsh	r3, [r6, #2]
   15e84:	b	15de4 <message@@Base+0x288c>
   15e88:	ldr	r0, [fp, #-540]	; 0xfffffde4
   15e8c:	cmn	r0, #1
   15e90:	beq	15ecc <message@@Base+0x2974>
   15e94:	ldr	r0, [pc, #3220]	; 16b30 <message@@Base+0x35d8>
   15e98:	ldr	ip, [fp, #-564]	; 0xfffffdcc
   15e9c:	ldr	r1, [r3, #8]
   15ea0:	ldr	r2, [fp, #-512]	; 0xfffffe00
   15ea4:	ldr	r3, [ip, r0]
   15ea8:	ldr	r3, [r3]
   15eac:	add	r3, r1, r3
   15eb0:	cmp	r3, r4
   15eb4:	movcs	r3, r4
   15eb8:	rsb	r4, r3, r4
   15ebc:	str	r4, [fp, #-508]	; 0xfffffe04
   15ec0:	add	r3, r2, r3, lsl #2
   15ec4:	str	r3, [fp, #-512]	; 0xfffffe00
   15ec8:	b	15e44 <message@@Base+0x28ec>
   15ecc:	ldr	r3, [r3, #8]
   15ed0:	ldr	r1, [fp, #-580]	; 0xfffffdbc
   15ed4:	add	r3, r1, r3
   15ed8:	cmp	r4, r3
   15edc:	strhi	r3, [fp, #-508]	; 0xfffffe04
   15ee0:	b	15e44 <message@@Base+0x28ec>
   15ee4:	str	sp, [fp, #-548]	; 0xfffffddc
   15ee8:	sxth	r1, r1
   15eec:	ldr	r6, [r4, r2]
   15ef0:	mov	r0, #0
   15ef4:	mov	r3, #1
   15ef8:	mov	r7, r0
   15efc:	ldrsh	r2, [r6, #2]
   15f00:	lsl	ip, r2, #3
   15f04:	add	ip, ip, #8
   15f08:	sub	sp, sp, ip
   15f0c:	add	r9, sp, #24
   15f10:	sub	sp, sp, ip
   15f14:	add	r8, sp, #24
   15f18:	str	r9, [sp]
   15f1c:	bl	39094 <readScreen@@Base>
   15f20:	ldr	r1, [sl]
   15f24:	str	r5, [fp, #-552]	; 0xfffffdd8
   15f28:	ldr	r5, [fp, #-544]	; 0xfffffde0
   15f2c:	ldr	r3, [r1, #44]	; 0x2c
   15f30:	add	r3, r5, r3
   15f34:	ldrsh	r2, [r6, #2]
   15f38:	str	r3, [r1, #44]	; 0x2c
   15f3c:	mov	r0, #0
   15f40:	sxth	r1, r3
   15f44:	str	r8, [sp]
   15f48:	mov	r3, #1
   15f4c:	bl	39094 <readScreen@@Base>
   15f50:	ldrsh	lr, [r6, #2]
   15f54:	cmp	lr, #0
   15f58:	ble	15f98 <message@@Base+0x2a40>
   15f5c:	ldr	r2, [r9]
   15f60:	ldr	r3, [r8]
   15f64:	cmp	r2, r3
   15f68:	bne	15fcc <message@@Base+0x2a74>
   15f6c:	mov	r1, r9
   15f70:	mov	r2, r8
   15f74:	mov	r3, #0
   15f78:	b	15f8c <message@@Base+0x2a34>
   15f7c:	ldr	ip, [r1, #8]!
   15f80:	ldr	r0, [r2, #8]!
   15f84:	cmp	ip, r0
   15f88:	bne	15fcc <message@@Base+0x2a74>
   15f8c:	add	r3, r3, #1
   15f90:	cmp	lr, r3
   15f94:	bgt	15f7c <message@@Base+0x2a24>
   15f98:	cmp	r7, #0
   15f9c:	beq	15fd8 <message@@Base+0x2a80>
   15fa0:	cmp	r7, #3
   15fa4:	ble	15fe8 <message@@Base+0x2a90>
   15fa8:	tst	r7, #3
   15fac:	beq	15ff8 <message@@Base+0x2aa0>
   15fb0:	ldr	r2, [sl]
   15fb4:	add	r7, r7, #1
   15fb8:	ldr	ip, [fp, #-540]	; 0xfffffde4
   15fbc:	ldr	r3, [r2, #44]	; 0x2c
   15fc0:	cmp	r3, ip
   15fc4:	movne	r1, r2
   15fc8:	bne	15f30 <message@@Base+0x29d8>
   15fcc:	ldr	r5, [fp, #-552]	; 0xfffffdd8
   15fd0:	ldr	sp, [fp, #-548]	; 0xfffffddc
   15fd4:	b	143f8 <message@@Base+0xea0>
   15fd8:	ldr	r3, [pc, #2792]	; 16ac8 <message@@Base+0x3570>
   15fdc:	ldr	r0, [r4, r3]
   15fe0:	bl	37160 <playTune@@Base>
   15fe4:	b	15fb0 <message@@Base+0x2a58>
   15fe8:	ldr	r3, [pc, #2780]	; 16acc <message@@Base+0x3574>
   15fec:	ldr	r0, [r4, r3]
   15ff0:	bl	37160 <playTune@@Base>
   15ff4:	b	15fb0 <message@@Base+0x2a58>
   15ff8:	ldr	r3, [pc, #2768]	; 16ad0 <message@@Base+0x3578>
   15ffc:	ldr	r0, [r4, r3]
   16000:	bl	37160 <playTune@@Base>
   16004:	b	15fb0 <message@@Base+0x2a58>
   16008:	ldr	r3, [pc, #3012]	; 16bd4 <message@@Base+0x367c>
   1600c:	ldr	r0, [r4, r3]
   16010:	bl	37160 <playTune@@Base>
   16014:	b	14e68 <message@@Base+0x1910>
   16018:	ldr	r3, [pc, #2996]	; 16bd4 <message@@Base+0x367c>
   1601c:	ldr	r0, [r4, r3]
   16020:	bl	37160 <playTune@@Base>
   16024:	b	14db0 <message@@Base+0x1858>
   16028:	ldr	r3, [pc, #2980]	; 16bd4 <message@@Base+0x367c>
   1602c:	ldr	r0, [r4, r3]
   16030:	bl	37160 <playTune@@Base>
   16034:	ldr	r2, [sl]
   16038:	ldr	r3, [r2, #8]
   1603c:	ldr	r0, [r2, #12]
   16040:	b	13ea0 <message@@Base+0x948>
   16044:	bl	395c4 <isFrozenScreen@@Base>
   16048:	cmp	r0, #0
   1604c:	beq	167cc <message@@Base+0x3274>
   16050:	bl	39650 <deactivateFrozenScreen@@Base>
   16054:	ldr	r3, [pc, #2680]	; 16ad4 <message@@Base+0x357c>
   16058:	ldr	r0, [r4, r3]
   1605c:	bl	37160 <playTune@@Base>
   16060:	ldr	r2, [sl]
   16064:	ldr	r3, [r2, #8]
   16068:	ldr	r0, [r2, #12]
   1606c:	b	13ea0 <message@@Base+0x948>
   16070:	ldr	r3, [pc, #2656]	; 16ad8 <message@@Base+0x3580>
   16074:	add	r3, pc, r3
   16078:	ldr	r3, [r3, #1048]	; 0x418
   1607c:	cmp	r3, #0
   16080:	beq	160a4 <message@@Base+0x2b4c>
   16084:	ldr	r2, [pc, #2884]	; 16bd0 <message@@Base+0x3678>
   16088:	ldr	r3, [pc, #2636]	; 16adc <message@@Base+0x3584>
   1608c:	ldr	r1, [r4, r2]
   16090:	add	r3, pc, r3
   16094:	ldr	r2, [r3]
   16098:	ldr	r1, [r1, #8]
   1609c:	cmp	r1, r2
   160a0:	beq	17148 <message@@Base+0x3bf0>
   160a4:	mov	r0, #1
   160a8:	bl	116b4 <_start@@Base+0x1760>
   160ac:	ldr	r2, [sl]
   160b0:	ldr	r3, [r2, #8]
   160b4:	ldr	r0, [r2, #12]
   160b8:	b	13ea0 <message@@Base+0x948>
   160bc:	ldr	r3, [pc, #2832]	; 16bd4 <message@@Base+0x367c>
   160c0:	ldr	r0, [r4, r3]
   160c4:	b	1522c <message@@Base+0x1cd4>
   160c8:	ldr	r3, [pc, #2576]	; 16ae0 <message@@Base+0x3588>
   160cc:	mov	r0, #1
   160d0:	ldr	r2, [sl]
   160d4:	add	r3, pc, r3
   160d8:	ldr	r1, [r3, #44]	; 0x2c
   160dc:	str	r0, [r3, #52]	; 0x34
   160e0:	ldrb	r1, [r1]
   160e4:	add	r1, r1, r1, lsl #2
   160e8:	lsl	r1, r1, r0
   160ec:	str	r1, [r3, #56]	; 0x38
   160f0:	ldr	r3, [r2, #8]
   160f4:	ldr	r0, [r2, #12]
   160f8:	b	13ea0 <message@@Base+0x948>
   160fc:	ldr	r3, [pc, #2528]	; 16ae4 <message@@Base+0x358c>
   16100:	mov	r0, #1
   16104:	ldr	r2, [sl]
   16108:	add	r3, pc, r3
   1610c:	ldr	r1, [r3, #4]
   16110:	str	r0, [r3, #12]
   16114:	ldrb	r1, [r1]
   16118:	add	r1, r1, r1, lsl #2
   1611c:	lsl	r1, r1, r0
   16120:	str	r1, [r3, #16]
   16124:	ldr	r3, [r2, #8]
   16128:	ldr	r0, [r2, #12]
   1612c:	b	13ea0 <message@@Base+0x948>
   16130:	mov	r1, r7
   16134:	b	152b8 <message@@Base+0x1d60>
   16138:	ldr	r3, [pc, #2708]	; 16bd4 <message@@Base+0x367c>
   1613c:	ldr	r0, [r4, r3]
   16140:	bl	37160 <playTune@@Base>
   16144:	b	14b40 <message@@Base+0x15e8>
   16148:	cmp	r2, #4608	; 0x1200
   1614c:	beq	17a84 <message@@Base+0x452c>
   16150:	ble	1692c <message@@Base+0x33d4>
   16154:	cmp	r2, #8704	; 0x2200
   16158:	beq	17984 <message@@Base+0x442c>
   1615c:	ble	172a0 <message@@Base+0x3d48>
   16160:	cmp	r2, #9216	; 0x2400
   16164:	beq	178b4 <message@@Base+0x435c>
   16168:	cmp	r2, #9472	; 0x2500
   1616c:	beq	17950 <message@@Base+0x43f8>
   16170:	cmp	r2, #8960	; 0x2300
   16174:	beq	17878 <message@@Base+0x4320>
   16178:	ldr	r3, [pc, #2644]	; 16bd4 <message@@Base+0x367c>
   1617c:	ldr	r0, [r4, r3]
   16180:	bl	37160 <playTune@@Base>
   16184:	ldr	r1, [pc, #2396]	; 16ae8 <message@@Base+0x3590>
   16188:	mov	r2, #5
   1618c:	mov	r0, #0
   16190:	add	r1, pc, r1
   16194:	bl	f9bc <dcgettext@plt>
   16198:	ldr	r1, [pc, #2380]	; 16aec <message@@Base+0x3594>
   1619c:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   161a0:	add	r1, pc, r1
   161a4:	mov	r2, r0
   161a8:	mov	r0, #4
   161ac:	bl	1c634 <logMessage@@Base>
   161b0:	ldr	r2, [sl]
   161b4:	ldr	r3, [r2, #8]
   161b8:	ldr	r0, [r2, #12]
   161bc:	b	13ea0 <message@@Base+0x948>
   161c0:	bl	21e44 <savePreferences@@Base>
   161c4:	cmp	r0, #0
   161c8:	beq	16804 <message@@Base+0x32ac>
   161cc:	ldr	r3, [pc, #2404]	; 16b38 <message@@Base+0x35e0>
   161d0:	ldr	r0, [r4, r3]
   161d4:	bl	37160 <playTune@@Base>
   161d8:	ldr	r2, [sl]
   161dc:	ldr	r3, [r2, #8]
   161e0:	ldr	r0, [r2, #12]
   161e4:	b	13ea0 <message@@Base+0x948>
   161e8:	bl	21d84 <loadPreferences@@Base>
   161ec:	cmp	r0, #0
   161f0:	beq	167e8 <message@@Base+0x3290>
   161f4:	bl	104bc <_start@@Base+0x568>
   161f8:	ldr	r3, [pc, #2360]	; 16b38 <message@@Base+0x35e0>
   161fc:	ldr	r0, [r4, r3]
   16200:	bl	37160 <playTune@@Base>
   16204:	ldr	r2, [sl]
   16208:	ldr	r3, [r2, #8]
   1620c:	ldr	r0, [r2, #12]
   16210:	b	13ea0 <message@@Base+0x948>
   16214:	ldr	r3, [pc, #2260]	; 16af0 <message@@Base+0x3598>
   16218:	mov	r0, #1
   1621c:	ldr	r2, [sl]
   16220:	add	r3, pc, r3
   16224:	ldr	r1, [r3, #24]
   16228:	str	r0, [r3, #32]
   1622c:	ldrb	r1, [r1]
   16230:	add	r1, r1, r1, lsl #2
   16234:	lsl	r1, r1, r0
   16238:	str	r1, [r3, #36]	; 0x24
   1623c:	ldr	r3, [r2, #8]
   16240:	ldr	r0, [r2, #12]
   16244:	b	13ea0 <message@@Base+0x948>
   16248:	ldr	r3, [pc, #2212]	; 16af4 <message@@Base+0x359c>
   1624c:	mov	r1, #1
   16250:	ldr	r2, [sl]
   16254:	add	r3, pc, r3
   16258:	str	r1, [r3, #1084]	; 0x43c
   1625c:	ldr	r3, [r2, #8]
   16260:	ldr	r0, [r2, #12]
   16264:	b	13ea0 <message@@Base+0x948>
   16268:	bl	39374 <haveHelpScreen@@Base>
   1626c:	cmp	r0, #0
   16270:	moveq	r8, #1
   16274:	bne	16e04 <message@@Base+0x38ac>
   16278:	bl	393d4 <activateHelpScreen@@Base>
   1627c:	cmp	r0, #0
   16280:	beq	16498 <message@@Base+0x2f40>
   16284:	mov	r7, #0
   16288:	b	152f4 <message@@Base+0x1d9c>
   1628c:	ldr	r2, [r3, #44]	; 0x2c
   16290:	cmp	r2, #0
   16294:	ble	17104 <message@@Base+0x3bac>
   16298:	ldr	r1, [pc, #2352]	; 16bd0 <message@@Base+0x3678>
   1629c:	sub	r2, r2, #1
   162a0:	str	r2, [r3, #44]	; 0x2c
   162a4:	ldr	r2, [pc, #2176]	; 16b2c <message@@Base+0x35d4>
   162a8:	ldr	r1, [r4, r1]
   162ac:	ldrsh	r1, [r1, #2]
   162b0:	sub	r1, r1, #1
   162b4:	str	r1, [r3, #40]	; 0x28
   162b8:	ldr	r0, [r4, r2]
   162bc:	bl	37160 <playTune@@Base>
   162c0:	bl	12474 <_start@@Base+0x2520>
   162c4:	ldr	r2, [sl]
   162c8:	ldr	r3, [r2, #8]
   162cc:	ldr	r0, [r2, #12]
   162d0:	b	13ea0 <message@@Base+0x948>
   162d4:	ldr	r3, [pc, #2180]	; 16b60 <message@@Base+0x3608>
   162d8:	ldr	r0, [r4, r3]
   162dc:	bl	37160 <playTune@@Base>
   162e0:	ldr	r2, [sl]
   162e4:	ldr	r3, [r2, #8]
   162e8:	ldr	r0, [r2, #12]
   162ec:	b	13ea0 <message@@Base+0x948>
   162f0:	ldr	r6, [fp, #-540]	; 0xfffffde4
   162f4:	ldrb	r3, [r6, #34]	; 0x22
   162f8:	cmp	r3, #1
   162fc:	beq	176dc <message@@Base+0x4184>
   16300:	ldr	r1, [pc, #2088]	; 16b30 <message@@Base+0x35d8>
   16304:	ldr	r3, [pc, #2244]	; 16bd0 <message@@Base+0x3678>
   16308:	ldr	r2, [sl]
   1630c:	ldr	r1, [r4, r1]
   16310:	ldr	ip, [r4, r3]
   16314:	ldr	r3, [r2, #8]
   16318:	ldr	r8, [r1]
   1631c:	ldrsh	r0, [ip, #2]
   16320:	ldrb	r1, [ip, #12]
   16324:	add	r8, r3, r8
   16328:	cmp	r8, r0
   1632c:	movcs	r8, r0
   16330:	tst	r1, #1
   16334:	beq	17080 <message@@Base+0x3b28>
   16338:	ldr	r6, [fp, #-540]	; 0xfffffde4
   1633c:	ldrb	r1, [r6, #2]
   16340:	cmp	r1, #0
   16344:	beq	17080 <message@@Base+0x3b28>
   16348:	ldrb	r1, [r2, #5]
   1634c:	cmp	r1, #0
   16350:	bne	17080 <message@@Base+0x3b28>
   16354:	ldrsh	r0, [ip, #6]
   16358:	ldr	r1, [r2, #12]
   1635c:	cmp	r0, r1
   16360:	beq	1796c <message@@Base+0x4414>
   16364:	lsl	r3, r8, #3
   16368:	mov	r7, sp
   1636c:	add	r3, r3, #8
   16370:	sxth	r1, r1
   16374:	sub	sp, sp, r3
   16378:	mov	r0, #0
   1637c:	add	r6, sp, #24
   16380:	sxth	r2, r8
   16384:	str	r6, [sp]
   16388:	mov	r3, #1
   1638c:	bl	39094 <readScreen@@Base>
   16390:	cmp	r8, #0
   16394:	ble	17680 <message@@Base+0x4128>
   16398:	ldr	r3, [r6]
   1639c:	cmp	r3, #32
   163a0:	bne	17684 <message@@Base+0x412c>
   163a4:	mov	r3, #0
   163a8:	b	163b8 <message@@Base+0x2e60>
   163ac:	ldr	r2, [r6, #8]!
   163b0:	cmp	r2, #32
   163b4:	bne	17684 <message@@Base+0x412c>
   163b8:	add	r3, r3, #1
   163bc:	cmp	r8, r3
   163c0:	bne	163ac <message@@Base+0x2e54>
   163c4:	mov	sp, r7
   163c8:	ldr	r3, [sl]
   163cc:	ldr	r3, [r3, #12]
   163d0:	cmp	r3, #0
   163d4:	bne	16cb0 <message@@Base+0x3758>
   163d8:	ldr	r3, [pc, #1920]	; 16b60 <message@@Base+0x3608>
   163dc:	ldr	r0, [r4, r3]
   163e0:	bl	37160 <playTune@@Base>
   163e4:	ldr	r1, [sl]
   163e8:	mov	r3, r9
   163ec:	str	r9, [r1, #8]
   163f0:	mov	r2, r1
   163f4:	ldr	r0, [r1, #12]
   163f8:	b	13ea0 <message@@Base+0x948>
   163fc:	ldr	r3, [pc, #1832]	; 16b2c <message@@Base+0x35d4>
   16400:	ldr	r6, [fp, #-568]	; 0xfffffdc8
   16404:	ldr	r0, [r6, r3]
   16408:	bl	37160 <playTune@@Base>
   1640c:	b	15b00 <message@@Base+0x25a8>
   16410:	ldr	r3, [pc, #1980]	; 16bd4 <message@@Base+0x367c>
   16414:	ldr	r0, [r4, r3]
   16418:	bl	37160 <playTune@@Base>
   1641c:	ldr	r2, [sl]
   16420:	ldr	r3, [r2, #8]
   16424:	ldr	r0, [r2, #12]
   16428:	b	13ea0 <message@@Base+0x948>
   1642c:	ldr	ip, [fp, #-540]	; 0xfffffde4
   16430:	ldrb	r3, [ip, #36]	; 0x24
   16434:	cmp	r3, #0
   16438:	bne	16fbc <message@@Base+0x3a64>
   1643c:	ldr	r2, [sl]
   16440:	ldr	r3, [r2, #8]
   16444:	ldr	r0, [r2, #12]
   16448:	b	13ea0 <message@@Base+0x948>
   1644c:	ldr	r4, [fp, #-564]	; 0xfffffdcc
   16450:	mov	r5, r7
   16454:	ldr	sl, [fp, #-548]	; 0xfffffddc
   16458:	ldr	sp, [fp, #-572]	; 0xfffffdc4
   1645c:	b	14390 <message@@Base+0xe38>
   16460:	ldr	r3, [pc, #1784]	; 16b60 <message@@Base+0x3608>
   16464:	ldr	r0, [r4, r3]
   16468:	bl	37160 <playTune@@Base>
   1646c:	ldr	r2, [sl]
   16470:	ldr	r3, [r2, #8]
   16474:	ldr	r0, [r2, #12]
   16478:	b	13ea0 <message@@Base+0x948>
   1647c:	add	r1, r1, #1
   16480:	str	r1, [r3, #40]	; 0x28
   16484:	bl	12474 <_start@@Base+0x2520>
   16488:	ldr	r2, [sl]
   1648c:	ldr	r3, [r2, #8]
   16490:	ldr	r0, [r2, #12]
   16494:	b	13ea0 <message@@Base+0x948>
   16498:	ldr	r1, [pc, #1624]	; 16af8 <message@@Base+0x35a0>
   1649c:	mov	r2, #5
   164a0:	mov	r0, #0
   164a4:	add	r1, pc, r1
   164a8:	bl	f9bc <dcgettext@plt>
   164ac:	mov	r1, r0
   164b0:	mov	r0, #0
   164b4:	mov	r2, r0
   164b8:	bl	13558 <message@@Base>
   164bc:	ldr	r2, [sl]
   164c0:	ldr	r3, [r2, #8]
   164c4:	ldr	r0, [r2, #12]
   164c8:	b	13ea0 <message@@Base+0x948>
   164cc:	ldr	r3, [pc, #1676]	; 16b60 <message@@Base+0x3608>
   164d0:	ldr	r0, [r4, r3]
   164d4:	bl	37160 <playTune@@Base>
   164d8:	ldr	r2, [sl]
   164dc:	ldr	r3, [r2, #8]
   164e0:	ldr	r0, [r2, #12]
   164e4:	b	13ea0 <message@@Base+0x948>
   164e8:	ldr	r3, [pc, #1648]	; 16b60 <message@@Base+0x3608>
   164ec:	ldr	r0, [r4, r3]
   164f0:	bl	37160 <playTune@@Base>
   164f4:	ldr	r2, [sl]
   164f8:	ldr	r3, [r2, #8]
   164fc:	ldr	r0, [r2, #12]
   16500:	b	13ea0 <message@@Base+0x948>
   16504:	bl	13138 <resetAutorepeat@@Base>
   16508:	ldr	r2, [sl]
   1650c:	ldr	r3, [r2, #8]
   16510:	ldr	r0, [r2, #12]
   16514:	b	13ea0 <message@@Base+0x948>
   16518:	ldr	ip, [pc, #1500]	; 16afc <message@@Base+0x35a4>
   1651c:	sub	r7, fp, #424	; 0x1a8
   16520:	mov	r1, #128	; 0x80
   16524:	mov	r2, #1
   16528:	add	ip, pc, ip
   1652c:	str	ip, [sp]
   16530:	ldrb	ip, [fp, #-504]	; 0xfffffe08
   16534:	mov	r3, r1
   16538:	mov	r0, r7
   1653c:	sub	r9, fp, #296	; 0x128
   16540:	str	ip, [sp, #4]
   16544:	bl	fb60 <__snprintf_chk@plt>
   16548:	ldrb	r3, [fp, #-503]	; 0xfffffe09
   1654c:	add	r0, r7, r0
   16550:	cmp	r0, r9
   16554:	movcc	r6, r0
   16558:	movcs	r6, r9
   1655c:	cmp	r3, #9
   16560:	bhi	1658c <message@@Base+0x3034>
   16564:	ldr	r2, [pc, #1428]	; 16b00 <message@@Base+0x35a8>
   16568:	mov	r0, r6
   1656c:	rsb	r1, r6, r9
   16570:	add	r2, pc, r2
   16574:	bl	f734 <snprintf@plt>
   16578:	ldrb	r3, [fp, #-503]	; 0xfffffe09
   1657c:	add	r0, r6, r0
   16580:	cmp	r0, r9
   16584:	movcc	r6, r0
   16588:	movcs	r6, r9
   1658c:	ldr	ip, [pc, #1392]	; 16b04 <message@@Base+0x35ac>
   16590:	mov	r0, r6
   16594:	str	r3, [sp, #4]
   16598:	rsb	r1, r6, r9
   1659c:	add	ip, pc, ip
   165a0:	mov	r2, #1
   165a4:	mvn	r3, #0
   165a8:	str	ip, [sp]
   165ac:	bl	fb60 <__snprintf_chk@plt>
   165b0:	ldr	r8, [fp, #-496]	; 0xfffffe10
   165b4:	add	r0, r6, r0
   165b8:	cmp	r0, r9
   165bc:	movcc	r6, r0
   165c0:	movcs	r6, r9
   165c4:	cmp	r8, #0
   165c8:	beq	16644 <message@@Base+0x30ec>
   165cc:	ldrb	r3, [r8]
   165d0:	cmp	r3, #0
   165d4:	beq	16644 <message@@Base+0x30ec>
   165d8:	ldr	ip, [pc, #1320]	; 16b08 <message@@Base+0x35b0>
   165dc:	mov	r2, r7
   165e0:	str	r4, [fp, #-540]	; 0xfffffde4
   165e4:	mov	r7, r5
   165e8:	add	ip, pc, ip
   165ec:	mov	r5, r9
   165f0:	mov	r9, r2
   165f4:	mov	r4, ip
   165f8:	mov	r0, r6
   165fc:	str	r3, [sp, #4]
   16600:	rsb	r1, r6, r5
   16604:	mvn	r3, #0
   16608:	str	r4, [sp]
   1660c:	mov	r2, #1
   16610:	bl	fb60 <__snprintf_chk@plt>
   16614:	ldrb	r3, [r8, #1]!
   16618:	add	r0, r6, r0
   1661c:	cmp	r0, r5
   16620:	movcc	r6, r0
   16624:	movcs	r6, r5
   16628:	cmp	r3, #0
   1662c:	bne	165f8 <message@@Base+0x30a0>
   16630:	ldr	r4, [fp, #-540]	; 0xfffffde4
   16634:	mov	r3, r9
   16638:	mov	r9, r5
   1663c:	mov	r5, r7
   16640:	mov	r7, r3
   16644:	ldr	r3, [pc, #1312]	; 16b6c <message@@Base+0x3614>
   16648:	ldr	r3, [r4, r3]
   1664c:	str	r3, [fp, #-540]	; 0xfffffde4
   16650:	ldrb	r3, [r3, #74]	; 0x4a
   16654:	cmp	r3, #0
   16658:	bne	17088 <message@@Base+0x3b30>
   1665c:	ldr	ip, [fp, #-540]	; 0xfffffde4
   16660:	ldrb	r3, [ip, #75]	; 0x4b
   16664:	cmp	r3, #0
   16668:	bne	16e10 <message@@Base+0x38b8>
   1666c:	ldr	r2, [pc, #1176]	; 16b0c <message@@Base+0x35b4>
   16670:	mov	r3, r7
   16674:	mov	r0, r9
   16678:	mov	r1, #256	; 0x100
   1667c:	add	r2, pc, r2
   16680:	bl	f734 <snprintf@plt>
   16684:	add	r3, r9, #256	; 0x100
   16688:	add	r0, r9, r0
   1668c:	cmp	r0, r3
   16690:	movcs	r0, r3
   16694:	ldr	r2, [pc, #1140]	; 16b10 <message@@Base+0x35b8>
   16698:	sub	r1, fp, #40	; 0x28
   1669c:	rsb	r1, r0, r1
   166a0:	add	r2, pc, r2
   166a4:	bl	f734 <snprintf@plt>
   166a8:	ldr	r3, [pc, #1124]	; 16b14 <message@@Base+0x35bc>
   166ac:	mov	r1, r9
   166b0:	mov	r2, #1
   166b4:	ldr	r0, [r4, r3]
   166b8:	bl	46780 <sayString@@Base>
   166bc:	b	15760 <message@@Base+0x2208>
   166c0:	ldr	r3, [pc, #1176]	; 16b60 <message@@Base+0x3608>
   166c4:	ldr	r0, [r4, r3]
   166c8:	bl	37160 <playTune@@Base>
   166cc:	ldr	r2, [sl]
   166d0:	ldr	r3, [r2, #8]
   166d4:	ldr	r0, [r2, #12]
   166d8:	b	13ea0 <message@@Base+0x948>
   166dc:	ldr	r3, [pc, #1148]	; 16b60 <message@@Base+0x3608>
   166e0:	ldr	r0, [r4, r3]
   166e4:	bl	37160 <playTune@@Base>
   166e8:	ldr	r2, [sl]
   166ec:	ldr	r3, [r2, #8]
   166f0:	ldr	r0, [r2, #12]
   166f4:	b	13ea0 <message@@Base+0x948>
   166f8:	bl	39458 <getHelpPageCount@@Base>
   166fc:	cmp	r8, r0
   16700:	mov	r6, r0
   16704:	bls	16718 <message@@Base+0x31c0>
   16708:	b	16920 <message@@Base+0x33c8>
   1670c:	add	r8, r8, #1
   16710:	cmp	r6, r8
   16714:	bcc	16920 <message@@Base+0x33c8>
   16718:	mov	r0, r8
   1671c:	bl	39490 <setHelpPageNumber@@Base>
   16720:	cmp	r0, #0
   16724:	beq	1670c <message@@Base+0x31b4>
   16728:	bl	394e4 <getHelpLineCount@@Base>
   1672c:	cmp	r0, #0
   16730:	beq	1670c <message@@Base+0x31b4>
   16734:	bl	105ac <_start@@Base+0x658>
   16738:	b	15304 <message@@Base+0x1dac>
   1673c:	ldr	r3, [pc, #1052]	; 16b60 <message@@Base+0x3608>
   16740:	ldr	r0, [r4, r3]
   16744:	bl	37160 <playTune@@Base>
   16748:	ldr	r2, [sl]
   1674c:	ldr	r3, [r2, #8]
   16750:	ldr	r0, [r2, #12]
   16754:	b	13ea0 <message@@Base+0x948>
   16758:	ldr	r3, [pc, #952]	; 16b18 <message@@Base+0x35c0>
   1675c:	ldr	r0, [r4, r3]
   16760:	bl	37160 <playTune@@Base>
   16764:	ldr	r2, [sl]
   16768:	ldr	r3, [r2, #8]
   1676c:	ldr	r0, [r2, #12]
   16770:	b	13ea0 <message@@Base+0x948>
   16774:	bl	39538 <activateMenuScreen@@Base>
   16778:	cmp	r0, #0
   1677c:	bne	17340 <message@@Base+0x3de8>
   16780:	ldr	r3, [pc, #1100]	; 16bd4 <message@@Base+0x367c>
   16784:	ldr	r0, [r4, r3]
   16788:	bl	37160 <playTune@@Base>
   1678c:	ldr	r2, [sl]
   16790:	ldr	r3, [r2, #8]
   16794:	ldr	r0, [r2, #12]
   16798:	b	13ea0 <message@@Base+0x948>
   1679c:	ldr	r3, [pc, #888]	; 16b1c <message@@Base+0x35c4>
   167a0:	ldr	r2, [pc, #876]	; 16b14 <message@@Base+0x35bc>
   167a4:	ldr	r3, [r4, r3]
   167a8:	ldr	r0, [r4, r2]
   167ac:	ldr	r3, [r3]
   167b0:	ldr	r3, [r3, #52]	; 0x34
   167b4:	blx	r3
   167b8:	bl	1161c <_start@@Base+0x16c8>
   167bc:	ldr	r2, [sl]
   167c0:	ldr	r3, [r2, #8]
   167c4:	ldr	r0, [r2, #12]
   167c8:	b	13ea0 <message@@Base+0x948>
   167cc:	ldr	r3, [pc, #1024]	; 16bd4 <message@@Base+0x367c>
   167d0:	ldr	r0, [r4, r3]
   167d4:	bl	37160 <playTune@@Base>
   167d8:	ldr	r2, [sl]
   167dc:	ldr	r3, [r2, #8]
   167e0:	ldr	r0, [r2, #12]
   167e4:	b	13ea0 <message@@Base+0x948>
   167e8:	ldr	r3, [pc, #996]	; 16bd4 <message@@Base+0x367c>
   167ec:	ldr	r0, [r4, r3]
   167f0:	bl	37160 <playTune@@Base>
   167f4:	ldr	r2, [sl]
   167f8:	ldr	r3, [r2, #8]
   167fc:	ldr	r0, [r2, #12]
   16800:	b	13ea0 <message@@Base+0x948>
   16804:	ldr	r3, [pc, #968]	; 16bd4 <message@@Base+0x367c>
   16808:	ldr	r0, [r4, r3]
   1680c:	bl	37160 <playTune@@Base>
   16810:	ldr	r2, [sl]
   16814:	ldr	r3, [r2, #8]
   16818:	ldr	r0, [r2, #12]
   1681c:	b	13ea0 <message@@Base+0x948>
   16820:	ldr	r0, [pc, #748]	; 16b14 <message@@Base+0x35bc>
   16824:	add	r1, r2, #1
   16828:	mov	r2, #1
   1682c:	uxtb	r1, r1
   16830:	strb	r1, [r3, #41]	; 0x29
   16834:	ldr	r0, [r4, r0]
   16838:	bl	46868 <setSpeechVolume@@Base>
   1683c:	ldr	r2, [sl]
   16840:	ldr	r3, [r2, #8]
   16844:	ldr	r0, [r2, #12]
   16848:	b	13ea0 <message@@Base+0x948>
   1684c:	ldr	r0, [pc, #704]	; 16b14 <message@@Base+0x35bc>
   16850:	sub	r1, r2, #1
   16854:	mov	r2, #1
   16858:	uxtb	r1, r1
   1685c:	strb	r1, [r3, #41]	; 0x29
   16860:	ldr	r0, [r4, r0]
   16864:	bl	46868 <setSpeechVolume@@Base>
   16868:	ldr	r2, [sl]
   1686c:	ldr	r3, [r2, #8]
   16870:	ldr	r0, [r2, #12]
   16874:	b	13ea0 <message@@Base+0x948>
   16878:	ldr	r3, [pc, #852]	; 16bd4 <message@@Base+0x367c>
   1687c:	ldr	r0, [r4, r3]
   16880:	b	15678 <message@@Base+0x2120>
   16884:	ldr	r3, [pc, #724]	; 16b60 <message@@Base+0x3608>
   16888:	ldr	r0, [r4, r3]
   1688c:	bl	37160 <playTune@@Base>
   16890:	ldr	r2, [sl]
   16894:	ldr	r3, [r2, #8]
   16898:	ldr	r0, [r2, #12]
   1689c:	b	13ea0 <message@@Base+0x948>
   168a0:	ldr	r0, [pc, #620]	; 16b14 <message@@Base+0x35bc>
   168a4:	add	r1, r2, #1
   168a8:	mov	r2, #1
   168ac:	uxtb	r1, r1
   168b0:	strb	r1, [r3, #40]	; 0x28
   168b4:	ldr	r0, [r4, r0]
   168b8:	bl	46934 <setSpeechRate@@Base>
   168bc:	ldr	r2, [sl]
   168c0:	ldr	r3, [r2, #8]
   168c4:	ldr	r0, [r2, #12]
   168c8:	b	13ea0 <message@@Base+0x948>
   168cc:	ldr	r0, [pc, #576]	; 16b14 <message@@Base+0x35bc>
   168d0:	sub	r1, r2, #1
   168d4:	mov	r2, #1
   168d8:	uxtb	r1, r1
   168dc:	strb	r1, [r3, #40]	; 0x28
   168e0:	ldr	r0, [r4, r0]
   168e4:	bl	46934 <setSpeechRate@@Base>
   168e8:	ldr	r2, [sl]
   168ec:	ldr	r3, [r2, #8]
   168f0:	ldr	r0, [r2, #12]
   168f4:	b	13ea0 <message@@Base+0x948>
   168f8:	ldr	r3, [pc, #724]	; 16bd4 <message@@Base+0x367c>
   168fc:	ldr	r0, [r4, r3]
   16900:	bl	37160 <playTune@@Base>
   16904:	b	14f18 <message@@Base+0x19c0>
   16908:	ldr	r3, [sl]
   1690c:	mov	r9, r4
   16910:	ldr	r4, [fp, #-544]	; 0xfffffde0
   16914:	str	r7, [r3, #12]
   16918:	str	r9, [r3, #8]
   1691c:	b	142f4 <message@@Base+0xd9c>
   16920:	bl	3937c <deactivateHelpScreen@@Base>
   16924:	bl	105ac <_start@@Base+0x658>
   16928:	b	152fc <message@@Base+0x1da4>
   1692c:	cmp	r2, #3840	; 0xf00
   16930:	beq	178e8 <message@@Base+0x4390>
   16934:	bgt	172e8 <message@@Base+0x3d90>
   16938:	cmp	r2, #3328	; 0xd00
   1693c:	beq	177d4 <message@@Base+0x427c>
   16940:	cmp	r2, #3584	; 0xe00
   16944:	bne	16178 <message@@Base+0x2c20>
   16948:	mov	r3, #0
   1694c:	mov	r0, r9
   16950:	str	r3, [sp]
   16954:	sub	r1, fp, #512	; 0x200
   16958:	sub	r2, fp, #508	; 0x1fc
   1695c:	bl	fe54 <__printf_chk@plt+0x30>
   16960:	cmp	r0, #0
   16964:	beq	177c4 <message@@Base+0x426c>
   16968:	ldr	ip, [sl]
   1696c:	mov	r3, #1
   16970:	ldr	lr, [fp, #-508]	; 0xfffffe04
   16974:	mvn	r2, #0
   16978:	ldr	r0, [pc, #416]	; 16b20 <message@@Base+0x35c8>
   1697c:	ldr	r1, [pc, #416]	; 16b24 <message@@Base+0x35cc>
   16980:	str	lr, [ip, #12]
   16984:	add	r0, pc, r0
   16988:	str	r3, [sp]
   1698c:	add	r1, pc, r1
   16990:	ldr	r3, [fp, #-512]	; 0xfffffe00
   16994:	bl	10b00 <_start@@Base+0xbac>
   16998:	ldr	r2, [sl]
   1699c:	ldr	r3, [r2, #8]
   169a0:	ldr	r0, [r2, #12]
   169a4:	b	13ea0 <message@@Base+0x948>
   169a8:	cmp	r2, #2304	; 0x900
   169ac:	beq	17a2c <message@@Base+0x44d4>
   169b0:	bgt	17374 <message@@Base+0x3e1c>
   169b4:	cmp	r2, #1792	; 0x700
   169b8:	beq	17b68 <message@@Base+0x4610>
   169bc:	cmp	r2, #2048	; 0x800
   169c0:	moveq	r7, #1
   169c4:	bne	16178 <message@@Base+0x2c20>
   169c8:	mov	r6, #0
   169cc:	mov	r0, r9
   169d0:	str	r6, [sp]
   169d4:	mov	r3, r6
   169d8:	sub	r1, fp, #512	; 0x200
   169dc:	sub	r2, fp, #508	; 0x1fc
   169e0:	bl	fe54 <__printf_chk@plt+0x30>
   169e4:	cmp	r0, r6
   169e8:	beq	17b58 <message@@Base+0x4600>
   169ec:	ldr	r0, [sl]
   169f0:	mov	r1, r7
   169f4:	ldr	ip, [fp, #-508]	; 0xfffffe04
   169f8:	mov	r3, r6
   169fc:	ldr	r2, [pc, #292]	; 16b28 <message@@Base+0x35d0>
   16a00:	str	ip, [r0, #12]
   16a04:	add	r2, pc, r2
   16a08:	ldr	r0, [fp, #-512]	; 0xfffffe00
   16a0c:	bl	10eb0 <_start@@Base+0xf5c>
   16a10:	ldr	r2, [sl]
   16a14:	ldr	r3, [r2, #8]
   16a18:	ldr	r0, [r2, #12]
   16a1c:	b	13ea0 <message@@Base+0x948>
   16a20:	ldr	r3, [pc, #140]	; 16ab4 <message@@Base+0x355c>
   16a24:	ldr	r0, [r4, r3]
   16a28:	bl	37160 <playTune@@Base>
   16a2c:	ldr	r2, [sl]
   16a30:	ldr	r3, [r2, #8]
   16a34:	ldr	r0, [r2, #12]
   16a38:	b	13ea0 <message@@Base+0x948>
   16a3c:	bl	21e44 <savePreferences@@Base>
   16a40:	cmp	r0, #0
   16a44:	beq	154a4 <message@@Base+0x1f4c>
   16a48:	ldr	r3, [pc, #232]	; 16b38 <message@@Base+0x35e0>
   16a4c:	ldr	r0, [r4, r3]
   16a50:	bl	37160 <playTune@@Base>
   16a54:	b	154a4 <message@@Base+0x1f4c>
   16a58:	cmp	r8, #2
   16a5c:	mov	r7, r8
   16a60:	mov	ip, r5
   16a64:	str	r9, [fp, #-548]	; 0xfffffddc
   16a68:	ldr	r4, [fp, #-568]	; 0xfffffdc8
   16a6c:	moveq	r8, r9
   16a70:	ldr	sl, [fp, #-564]	; 0xfffffdcc
   16a74:	ldr	r5, [fp, #-576]	; 0xfffffdc0
   16a78:	ldr	r6, [fp, #-560]	; 0xfffffdd0
   16a7c:	beq	15b48 <message@@Base+0x25f0>
   16a80:	cmp	ip, #0
   16a84:	ble	16c0c <message@@Base+0x36b4>
   16a88:	ldr	r0, [fp, #-544]	; 0xfffffde0
   16a8c:	mov	r3, r6
   16a90:	str	r4, [fp, #-540]	; 0xfffffde4
   16a94:	mov	r6, r5
   16a98:	add	r9, r0, ip, lsl #3
   16a9c:	mov	r8, ip
   16aa0:	mov	r4, ip
   16aa4:	mov	r5, r9
   16aa8:	mov	r9, r3
   16aac:	b	16be8 <message@@Base+0x3690>
   16ab0:	andeq	r0, r0, ip, ror #9
   16ab4:	andeq	r0, r0, ip, asr r4
   16ab8:	andeq	sp, r5, ip, asr #10
   16abc:	andeq	sp, r5, r4, lsr r5
   16ac0:			; <UNDEFINED> instruction: 0xffffd198
   16ac4:	andeq	sp, r5, r0, lsl #10
   16ac8:	andeq	r0, r0, ip, lsr #7
   16acc:	andeq	r0, r0, r8, ror #9
   16ad0:	ldrdeq	r0, [r0], -ip
   16ad4:	andeq	r0, r0, r0, ror #10
   16ad8:	ldrdeq	sp, [r5], -r0
   16adc:	andeq	ip, r5, ip, ror #30
   16ae0:	andeq	ip, r5, r8, asr #30
   16ae4:	andeq	ip, r5, r4, lsl pc
   16ae8:	andeq	r8, r3, r0, lsl #14
   16aec:	andeq	r8, r3, r8, lsl #14
   16af0:	strdeq	ip, [r5], -ip	; <UNPREDICTABLE>
   16af4:	strdeq	ip, [r5], -r0
   16af8:	andeq	r8, r3, r8, lsl #7
   16afc:	andeq	r3, r4, r8, lsr #8
   16b00:	ldrdeq	r8, [r3], -r0
   16b04:	andeq	r3, r4, r0, ror #6
   16b08:	andeq	r8, r3, ip, asr r2
   16b0c:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   16b10:	andeq	r9, r3, r0, lsr #18
   16b14:	andeq	r0, r0, r4, ror #9
   16b18:	andeq	r0, r0, r4, lsr #9
   16b1c:	andeq	r0, r0, ip, lsl r4
   16b20:			; <UNDEFINED> instruction: 0xffff98cc
   16b24:			; <UNDEFINED> instruction: 0xffff98f4
   16b28:			; <UNDEFINED> instruction: 0xffff9d0c
   16b2c:			; <UNDEFINED> instruction: 0x000003bc
   16b30:	andeq	r0, r0, r0, asr #7
   16b34:	andeq	r0, r0, r0, lsl r5
   16b38:			; <UNDEFINED> instruction: 0x000004bc
   16b3c:			; <UNDEFINED> instruction: 0x000379b4
   16b40:	andeq	r2, r4, ip, ror #21
   16b44:	andeq	sl, r3, r8, lsl #10
   16b48:	andeq	r7, r3, r4, lsr #19
   16b4c:	andeq	r7, r3, r4, lsl #18
   16b50:	strdeq	r0, [r0], -ip
   16b54:			; <UNDEFINED> instruction: 0x000377b4
   16b58:	andeq	r7, r3, r8, lsl #15
   16b5c:	andeq	r7, r3, r0, lsr #15
   16b60:	andeq	r0, r0, r4, ror r5
   16b64:	andeq	fp, r5, r8, lsl #29
   16b68:	strdeq	fp, [r5], -r0
   16b6c:	andeq	r0, r0, r0, asr #10
   16b70:	andeq	r0, r0, r8, lsr r4
   16b74:			; <UNDEFINED> instruction: 0xffff8e88
   16b78:	andeq	r9, r3, ip, lsr #30
   16b7c:	andeq	r7, r3, r8, asr r4
   16b80:	andeq	r7, r3, r8, asr r4
   16b84:	andeq	r7, r3, r8, lsr r4
   16b88:	andeq	r7, r3, r8, lsl r4
   16b8c:	ldrdeq	r7, [r3], -r4
   16b90:	andeq	r2, r4, ip, ror #8
   16b94:	muleq	r3, r8, lr
   16b98:	andeq	r7, r3, r8, asr #6
   16b9c:	strdeq	r7, [r3], -r8
   16ba0:			; <UNDEFINED> instruction: 0x000372b4
   16ba4:	andeq	r2, r4, r8, lsl #7
   16ba8:			; <UNDEFINED> instruction: 0x00039dbc
   16bac:	andeq	r7, r3, r0, lsl r2
   16bb0:			; <UNDEFINED> instruction: 0xffff8bdc
   16bb4:			; <UNDEFINED> instruction: 0x00036fb8
   16bb8:			; <UNDEFINED> instruction: 0xffff892c
   16bbc:			; <UNDEFINED> instruction: 0xffff8984
   16bc0:			; <UNDEFINED> instruction: 0x0005b7b0
   16bc4:	strdeq	r0, [r0], -ip
   16bc8:	andeq	r6, r3, ip, lsr ip
   16bcc:	muleq	r0, r0, r3
   16bd0:	andeq	r0, r0, ip, lsl #9
   16bd4:	andeq	r0, r0, r4, asr #8
   16bd8:	cmp	r4, #0
   16bdc:	sub	r5, r5, #8
   16be0:	beq	176c8 <message@@Base+0x4170>
   16be4:	mov	r8, r4
   16be8:	ldr	r0, [r5, #-8]
   16bec:	sub	r4, r4, #1
   16bf0:	bl	11f7c <_start@@Base+0x2028>
   16bf4:	cmp	r7, r0
   16bf8:	beq	16bd8 <message@@Base+0x3680>
   16bfc:	ldr	r4, [fp, #-540]	; 0xfffffde4
   16c00:	mov	r5, r6
   16c04:	mov	ip, r8
   16c08:	mov	r6, r9
   16c0c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   16c10:	ldrsh	r6, [r6, #2]
   16c14:	cmp	r6, r1
   16c18:	movle	r8, r1
   16c1c:	ble	15b48 <message@@Base+0x25f0>
   16c20:	ldr	r3, [fp, #-548]	; 0xfffffddc
   16c24:	mov	r9, #0
   16c28:	ldr	r2, [fp, #-544]	; 0xfffffde0
   16c2c:	mov	r8, r3
   16c30:	add	r2, r2, r3, lsl #3
   16c34:	mov	r3, r5
   16c38:	str	r2, [fp, #-540]	; 0xfffffde4
   16c3c:	mov	r5, r4
   16c40:	mov	r4, r9
   16c44:	mov	r9, r3
   16c48:	b	16c5c <message@@Base+0x3704>
   16c4c:	add	r8, r8, #1
   16c50:	add	r4, r4, #8
   16c54:	cmp	r8, r6
   16c58:	bge	16c78 <message@@Base+0x3720>
   16c5c:	ldr	r1, [fp, #-540]	; 0xfffffde4
   16c60:	ldr	r0, [r1, r4]
   16c64:	str	ip, [fp, #-584]	; 0xfffffdb8
   16c68:	bl	11f7c <_start@@Base+0x2028>
   16c6c:	ldr	ip, [fp, #-584]	; 0xfffffdb8
   16c70:	cmp	r7, r0
   16c74:	beq	16c4c <message@@Base+0x36f4>
   16c78:	mov	r4, r5
   16c7c:	mov	r5, r9
   16c80:	b	15b48 <message@@Base+0x25f0>
   16c84:	ldr	r4, [fp, #-568]	; 0xfffffdc8
   16c88:	ldr	r3, [pc, #-304]	; 16b60 <message@@Base+0x3608>
   16c8c:	ldr	sl, [fp, #-564]	; 0xfffffdcc
   16c90:	ldr	r5, [fp, #-576]	; 0xfffffdc0
   16c94:	ldr	r0, [r4, r3]
   16c98:	ldr	sp, [fp, #-580]	; 0xfffffdbc
   16c9c:	bl	37160 <playTune@@Base>
   16ca0:	ldr	r2, [sl]
   16ca4:	ldr	r3, [r2, #8]
   16ca8:	ldr	r0, [r2, #12]
   16cac:	b	13ea0 <message@@Base+0x948>
   16cb0:	ldr	r3, [pc, #-396]	; 16b2c <message@@Base+0x35d4>
   16cb4:	ldr	r0, [r4, r3]
   16cb8:	bl	37160 <playTune@@Base>
   16cbc:	ldr	ip, [fp, #-540]	; 0xfffffde4
   16cc0:	ldrb	r3, [ip, #32]
   16cc4:	cmp	r3, #0
   16cc8:	bne	17670 <message@@Base+0x4118>
   16ccc:	bl	10a58 <_start@@Base+0xb04>
   16cd0:	ldr	r3, [pc, #-264]	; 16bd0 <message@@Base+0x3678>
   16cd4:	ldr	r6, [r4, r3]
   16cd8:	ldrsh	r0, [r6, #2]
   16cdc:	sub	r0, r0, #1
   16ce0:	bl	11d3c <_start@@Base+0x1de8>
   16ce4:	ldr	ip, [fp, #-540]	; 0xfffffde4
   16ce8:	ldrb	r3, [ip, #36]	; 0x24
   16cec:	cmp	r3, #0
   16cf0:	bne	17160 <message@@Base+0x3c08>
   16cf4:	ldr	r2, [sl]
   16cf8:	ldr	r3, [r2, #8]
   16cfc:	ldr	r0, [r2, #12]
   16d00:	b	13ea0 <message@@Base+0x948>
   16d04:	ldr	r6, [fp, #-540]	; 0xfffffde4
   16d08:	mov	r5, r7
   16d0c:	str	r8, [fp, #-568]	; 0xfffffdc8
   16d10:	cmn	r6, #1
   16d14:	ldr	r4, [fp, #-564]	; 0xfffffdcc
   16d18:	ldr	sl, [fp, #-548]	; 0xfffffddc
   16d1c:	beq	16d78 <message@@Base+0x3820>
   16d20:	ldr	r6, [sl]
   16d24:	ldr	ip, [fp, #-568]	; 0xfffffdc8
   16d28:	ldr	r3, [pc, #-512]	; 16b30 <message@@Base+0x35d8>
   16d2c:	ldr	r1, [fp, #-576]	; 0xfffffdc0
   16d30:	str	ip, [r6, #12]
   16d34:	ldr	r3, [r4, r3]
   16d38:	ldr	r0, [fp, #-512]	; 0xfffffe00
   16d3c:	ldr	r7, [r3]
   16d40:	rsb	r0, r1, r0
   16d44:	asr	r0, r0, #2
   16d48:	mov	r1, r7
   16d4c:	bl	4e204 <formatAddress@@Base+0x258>
   16d50:	mul	r0, r7, r0
   16d54:	str	r0, [r6, #8]
   16d58:	ldr	sp, [fp, #-572]	; 0xfffffdc4
   16d5c:	b	1439c <message@@Base+0xe44>
   16d60:	ldr	r2, [fp, #-512]	; 0xfffffe00
   16d64:	ldr	r3, [fp, #-508]	; 0xfffffe04
   16d68:	add	r2, r2, #4
   16d6c:	str	r2, [fp, #-512]	; 0xfffffe00
   16d70:	sub	r3, r3, #1
   16d74:	str	r3, [fp, #-508]	; 0xfffffe04
   16d78:	sub	r0, fp, #512	; 0x200
   16d7c:	sub	r1, fp, #508	; 0x1fc
   16d80:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   16d84:	ldr	r3, [fp, #-544]	; 0xfffffde0
   16d88:	bl	11110 <_start@@Base+0x11bc>
   16d8c:	cmp	r0, #0
   16d90:	bne	16d60 <message@@Base+0x3808>
   16d94:	b	16d20 <message@@Base+0x37c8>
   16d98:	ldr	r3, [pc, #-620]	; 16b34 <message@@Base+0x35dc>
   16d9c:	ldr	r0, [r4, r3]
   16da0:	bl	37160 <playTune@@Base>
   16da4:	ldr	r6, [fp, #-540]	; 0xfffffde4
   16da8:	ldrb	r3, [r6, #32]
   16dac:	cmp	r3, #0
   16db0:	bne	173c4 <message@@Base+0x3e6c>
   16db4:	bl	10a9c <_start@@Base+0xb48>
   16db8:	ldr	r1, [sl]
   16dbc:	mov	r2, #0
   16dc0:	mov	r3, r2
   16dc4:	str	r2, [r1, #8]
   16dc8:	mov	r2, r1
   16dcc:	ldr	r0, [r1, #12]
   16dd0:	b	13ea0 <message@@Base+0x948>
   16dd4:	ldr	r3, [pc, #-676]	; 16b38 <message@@Base+0x35e0>
   16dd8:	ldr	r0, [r4, r3]
   16ddc:	bl	37160 <playTune@@Base>
   16de0:	b	15470 <message@@Base+0x1f18>
   16de4:	bl	f950 <__stack_chk_fail@plt>
   16de8:	bl	26f2c <cpbPaste@@Base>
   16dec:	cmp	r0, #0
   16df0:	beq	15714 <message@@Base+0x21bc>
   16df4:	ldr	r2, [sl]
   16df8:	ldr	r3, [r2, #8]
   16dfc:	ldr	r0, [r2, #12]
   16e00:	b	13ea0 <message@@Base+0x948>
   16e04:	bl	39474 <getHelpPageNumber@@Base>
   16e08:	mov	r8, r0
   16e0c:	b	16278 <message@@Base+0x2d20>
   16e10:	ldrb	r2, [fp, #-505]	; 0xfffffe07
   16e14:	ldrb	r3, [fp, #-506]	; 0xfffffe06
   16e18:	add	r2, r2, #1
   16e1c:	cmp	r3, #11
   16e20:	uxtb	r2, r2
   16e24:	str	r2, [fp, #-552]	; 0xfffffdd8
   16e28:	bls	1773c <message@@Base+0x41e4>
   16e2c:	ldr	ip, [pc, #-760]	; 16b3c <message@@Base+0x35e4>
   16e30:	add	ip, pc, ip
   16e34:	ldr	r6, [fp, #-540]	; 0xfffffde4
   16e38:	ldrb	r8, [r6, #76]	; 0x4c
   16e3c:	cmp	r8, #1
   16e40:	beq	175ac <message@@Base+0x4054>
   16e44:	cmp	r8, #2
   16e48:	beq	174c4 <message@@Base+0x3f6c>
   16e4c:	sub	r6, fp, #488	; 0x1e8
   16e50:	ldr	r0, [pc, #-792]	; 16b40 <message@@Base+0x35e8>
   16e54:	str	r6, [fp, #-544]	; 0xfffffde0
   16e58:	movw	r3, #65064	; 0xfe28
   16e5c:	sub	r6, fp, #36	; 0x24
   16e60:	movt	r3, #65535	; 0xffff
   16e64:	add	r0, pc, r0
   16e68:	str	r0, [fp, #-556]	; 0xfffffdd4
   16e6c:	str	r0, [sp]
   16e70:	mov	r1, #64	; 0x40
   16e74:	ldrh	r3, [r6, r3]
   16e78:	mov	r2, #1
   16e7c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   16e80:	ldr	r6, [pc, #-836]	; 16b44 <message@@Base+0x35ec>
   16e84:	uxth	lr, r3
   16e88:	mov	r3, r1
   16e8c:	str	lr, [sp, #4]
   16e90:	add	r6, pc, r6
   16e94:	str	ip, [fp, #-584]	; 0xfffffdb8
   16e98:	bl	fb60 <__snprintf_chk@plt>
   16e9c:	mov	r8, r6
   16ea0:	mov	r2, r6
   16ea4:	ldr	r6, [fp, #-544]	; 0xfffffde0
   16ea8:	add	r0, r6, r0
   16eac:	cmp	r0, r7
   16eb0:	movcc	r6, r0
   16eb4:	movcs	r6, r7
   16eb8:	rsb	r1, r6, r7
   16ebc:	mov	r0, r6
   16ec0:	bl	f734 <snprintf@plt>
   16ec4:	ldr	ip, [fp, #-584]	; 0xfffffdb8
   16ec8:	ldr	r2, [pc, #-904]	; 16b48 <message@@Base+0x35f0>
   16ecc:	mov	r3, ip
   16ed0:	add	r2, pc, r2
   16ed4:	add	r0, r6, r0
   16ed8:	cmp	r0, r7
   16edc:	movcc	r6, r0
   16ee0:	movcs	r6, r7
   16ee4:	rsb	r1, r6, r7
   16ee8:	mov	r0, r6
   16eec:	bl	f734 <snprintf@plt>
   16ef0:	mov	r2, r8
   16ef4:	add	r0, r6, r0
   16ef8:	cmp	r0, r7
   16efc:	movcc	r6, r0
   16f00:	movcs	r6, r7
   16f04:	rsb	r1, r6, r7
   16f08:	mov	r0, r6
   16f0c:	bl	f734 <snprintf@plt>
   16f10:	ldr	ip, [fp, #-556]	; 0xfffffdd4
   16f14:	mov	r2, #1
   16f18:	mvn	r3, #0
   16f1c:	str	ip, [sp]
   16f20:	ldr	ip, [fp, #-552]	; 0xfffffdd8
   16f24:	str	ip, [sp, #4]
   16f28:	add	r0, r6, r0
   16f2c:	cmp	r0, r7
   16f30:	movcs	r0, r7
   16f34:	rsb	r1, r0, r7
   16f38:	bl	fb60 <__snprintf_chk@plt>
   16f3c:	ldr	r6, [fp, #-540]	; 0xfffffde4
   16f40:	ldrb	r2, [r6, #75]	; 0x4b
   16f44:	cmp	r2, #1
   16f48:	beq	17488 <message@@Base+0x3f30>
   16f4c:	cmp	r2, #2
   16f50:	bne	1744c <message@@Base+0x3ef4>
   16f54:	str	r7, [sp, #4]
   16f58:	mov	r1, #256	; 0x100
   16f5c:	ldr	r6, [fp, #-544]	; 0xfffffde0
   16f60:	mov	r3, r1
   16f64:	ldr	r2, [pc, #-1056]	; 16b4c <message@@Base+0x35f4>
   16f68:	mov	r0, r9
   16f6c:	add	r2, pc, r2
   16f70:	str	r6, [sp, #8]
   16f74:	str	r2, [sp]
   16f78:	mov	r2, #1
   16f7c:	bl	fb60 <__snprintf_chk@plt>
   16f80:	add	r3, r9, #256	; 0x100
   16f84:	add	r0, r9, r0
   16f88:	cmp	r0, r3
   16f8c:	movcs	r0, r3
   16f90:	b	16694 <message@@Base+0x313c>
   16f94:	ldr	r0, [pc, #-1100]	; 16b50 <message@@Base+0x35f8>
   16f98:	mov	r3, r2
   16f9c:	ldr	r1, [fp, #-524]	; 0xfffffdf4
   16fa0:	ldr	r0, [r4, r0]
   16fa4:	bl	10e2c <_start@@Base+0xed8>
   16fa8:	bl	21cb8 <reconfigureWindow@@Base>
   16fac:	ldr	r2, [sl]
   16fb0:	ldr	r3, [r2, #8]
   16fb4:	ldr	r0, [r2, #12]
   16fb8:	b	13ea0 <message@@Base+0x948>
   16fbc:	ldr	r3, [pc, #-1012]	; 16bd0 <message@@Base+0x3678>
   16fc0:	ldr	r6, [r4, r3]
   16fc4:	ldrb	r3, [r6, #12]
   16fc8:	tst	r3, #1
   16fcc:	beq	17000 <message@@Base+0x3aa8>
   16fd0:	ldr	ip, [fp, #-540]	; 0xfffffde4
   16fd4:	ldrb	r3, [ip, #2]
   16fd8:	cmp	r3, #0
   16fdc:	beq	17000 <message@@Base+0x3aa8>
   16fe0:	ldr	r2, [sl]
   16fe4:	ldrb	r3, [r2, #5]
   16fe8:	cmp	r3, #0
   16fec:	bne	17000 <message@@Base+0x3aa8>
   16ff0:	ldrsh	r0, [r6, #6]
   16ff4:	ldr	r3, [r2, #12]
   16ff8:	cmp	r0, r3
   16ffc:	beq	17758 <message@@Base+0x4200>
   17000:	ldr	r2, [sl]
   17004:	mov	ip, sp
   17008:	ldrsh	r8, [r6, #2]
   1700c:	mov	r3, #1
   17010:	ldr	r0, [r2, #8]
   17014:	ldrsh	r1, [r2, #12]
   17018:	rsb	r8, r0, r8
   1701c:	sxth	r0, r0
   17020:	lsl	lr, r8, #3
   17024:	sxth	r2, r8
   17028:	add	lr, lr, #8
   1702c:	sub	sp, sp, lr
   17030:	add	r7, sp, #24
   17034:	str	r7, [sp]
   17038:	str	ip, [fp, #-584]	; 0xfffffdb8
   1703c:	bl	39094 <readScreen@@Base>
   17040:	cmp	r8, #0
   17044:	ldr	ip, [fp, #-584]	; 0xfffffdb8
   17048:	ble	17130 <message@@Base+0x3bd8>
   1704c:	ldr	r3, [r7]
   17050:	cmp	r3, #32
   17054:	bne	17134 <message@@Base+0x3bdc>
   17058:	mov	r3, #0
   1705c:	b	1706c <message@@Base+0x3b14>
   17060:	ldr	r2, [r7, #8]!
   17064:	cmp	r2, #32
   17068:	bne	17134 <message@@Base+0x3bdc>
   1706c:	add	r3, r3, #1
   17070:	cmp	r3, r8
   17074:	bne	17060 <message@@Base+0x3b08>
   17078:	mov	sp, ip
   1707c:	b	14ba4 <message@@Base+0x164c>
   17080:	ldr	r1, [r2, #12]
   17084:	b	16364 <message@@Base+0x2e0c>
   17088:	ldr	r2, [pc, #-1340]	; 16b54 <message@@Base+0x35fc>
   1708c:	mov	r0, r6
   17090:	rsb	r1, r6, r9
   17094:	add	r2, pc, r2
   17098:	bl	f734 <snprintf@plt>
   1709c:	ldrb	r3, [fp, #-502]	; 0xfffffe0a
   170a0:	add	r0, r6, r0
   170a4:	cmp	r0, r9
   170a8:	movcc	r8, r0
   170ac:	movcs	r8, r9
   170b0:	cmp	r3, #0
   170b4:	bne	173d4 <message@@Base+0x3e7c>
   170b8:	ldr	r1, [pc, #-1384]	; 16b58 <message@@Base+0x3600>
   170bc:	mov	r0, r3
   170c0:	mov	r2, #5
   170c4:	add	r1, pc, r1
   170c8:	bl	f9bc <dcgettext@plt>
   170cc:	ldr	r2, [pc, #-1400]	; 16b5c <message@@Base+0x3604>
   170d0:	rsb	r1, r8, r9
   170d4:	add	r2, pc, r2
   170d8:	mov	r3, r0
   170dc:	mov	r0, r8
   170e0:	bl	f734 <snprintf@plt>
   170e4:	b	1665c <message@@Base+0x3104>
   170e8:	ldr	r3, [pc, #-1424]	; 16b60 <message@@Base+0x3608>
   170ec:	ldr	r0, [r4, r3]
   170f0:	bl	37160 <playTune@@Base>
   170f4:	ldr	r2, [sl]
   170f8:	ldr	r3, [r2, #8]
   170fc:	ldr	r0, [r2, #12]
   17100:	b	13ea0 <message@@Base+0x948>
   17104:	ldr	r3, [pc, #-1452]	; 16b60 <message@@Base+0x3608>
   17108:	ldr	r0, [r4, r3]
   1710c:	bl	37160 <playTune@@Base>
   17110:	ldr	r2, [sl]
   17114:	ldr	r3, [r2, #8]
   17118:	ldr	r0, [r2, #12]
   1711c:	b	13ea0 <message@@Base+0x948>
   17120:	ldr	r3, [pc, #-1364]	; 16bd4 <message@@Base+0x367c>
   17124:	ldr	r0, [r4, r3]
   17128:	bl	37160 <playTune@@Base>
   1712c:	b	1439c <message@@Base+0xe44>
   17130:	beq	17078 <message@@Base+0x3b20>
   17134:	ldr	r2, [sl]
   17138:	mov	sp, ip
   1713c:	ldr	r3, [r2, #8]
   17140:	ldr	r0, [r2, #12]
   17144:	b	13ea0 <message@@Base+0x948>
   17148:	ldr	r2, [sl]
   1714c:	mvn	r1, #0
   17150:	str	r1, [r3, #4]
   17154:	ldr	r0, [r2, #12]
   17158:	ldr	r3, [r2, #8]
   1715c:	b	13ea0 <message@@Base+0x948>
   17160:	ldr	ip, [fp, #-540]	; 0xfffffde4
   17164:	ldrb	r3, [ip, #34]	; 0x22
   17168:	cmp	r3, #1
   1716c:	ldrne	r2, [sl]
   17170:	ldrne	r3, [r2, #8]
   17174:	ldrne	r0, [r2, #12]
   17178:	bne	13ea0 <message@@Base+0x948>
   1717c:	ldrsh	r2, [r6, #2]
   17180:	mov	r8, sp
   17184:	ldr	r1, [sl]
   17188:	mov	r3, #1
   1718c:	mov	r0, #0
   17190:	lsl	ip, r2, #3
   17194:	add	ip, ip, #8
   17198:	ldrsh	r1, [r1, #12]
   1719c:	sub	sp, sp, ip
   171a0:	add	r7, sp, #24
   171a4:	str	r7, [sp]
   171a8:	bl	39094 <readScreen@@Base>
   171ac:	ldrsh	r3, [r6, #2]
   171b0:	mvn	r1, #7
   171b4:	sub	r0, r3, #1
   171b8:	lsl	r2, r3, #3
   171bc:	add	r7, r7, r2
   171c0:	mul	ip, r1, r3
   171c4:	b	171e0 <message@@Base+0x3c88>
   171c8:	sub	r7, r7, #8
   171cc:	add	r1, ip, r7
   171d0:	ldr	r1, [r1, r2]
   171d4:	cmp	r1, #32
   171d8:	bne	171e8 <message@@Base+0x3c90>
   171dc:	sub	r0, r0, #1
   171e0:	cmp	r0, #0
   171e4:	bgt	171c8 <message@@Base+0x3c70>
   171e8:	ldrb	r2, [r6, #12]
   171ec:	tst	r2, #1
   171f0:	beq	17224 <message@@Base+0x3ccc>
   171f4:	ldr	ip, [fp, #-540]	; 0xfffffde4
   171f8:	ldrb	r2, [ip, #2]
   171fc:	cmp	r2, #0
   17200:	beq	17224 <message@@Base+0x3ccc>
   17204:	ldr	r2, [sl]
   17208:	ldrb	r1, [r2, #5]
   1720c:	cmp	r1, #0
   17210:	bne	17224 <message@@Base+0x3ccc>
   17214:	ldr	r2, [r2, #12]
   17218:	ldrsh	r1, [r6, #6]
   1721c:	cmp	r1, r2
   17220:	beq	17ca4 <message@@Base+0x474c>
   17224:	ldr	r3, [sl]
   17228:	ldr	r3, [r3, #8]
   1722c:	cmp	r0, r3
   17230:	bge	17238 <message@@Base+0x3ce0>
   17234:	bl	11d3c <_start@@Base+0x1de8>
   17238:	ldr	r2, [sl]
   1723c:	mov	sp, r8
   17240:	ldr	r3, [r2, #8]
   17244:	ldr	r0, [r2, #12]
   17248:	b	13ea0 <message@@Base+0x948>
   1724c:	cmp	r2, #1024	; 0x400
   17250:	beq	176e8 <message@@Base+0x4190>
   17254:	cmp	r2, #1280	; 0x500
   17258:	bne	16178 <message@@Base+0x2c20>
   1725c:	mov	r3, #1
   17260:	mov	r0, r9
   17264:	str	r3, [sp]
   17268:	sub	r1, fp, #512	; 0x200
   1726c:	sub	r2, fp, #508	; 0x1fc
   17270:	bl	fe54 <__printf_chk@plt+0x30>
   17274:	cmp	r0, #0
   17278:	beq	17478 <message@@Base+0x3f20>
   1727c:	ldr	r0, [fp, #-512]	; 0xfffffe00
   17280:	ldr	r1, [fp, #-508]	; 0xfffffe04
   17284:	bl	26cd0 <cpbLinearCopy@@Base>
   17288:	cmp	r0, #0
   1728c:	beq	17478 <message@@Base+0x3f20>
   17290:	ldr	r2, [sl]
   17294:	ldr	r3, [r2, #8]
   17298:	ldr	r0, [r2, #12]
   1729c:	b	13ea0 <message@@Base+0x948>
   172a0:	cmp	r2, #8192	; 0x2000
   172a4:	beq	17834 <message@@Base+0x42dc>
   172a8:	cmp	r2, #8448	; 0x2100
   172ac:	bne	16178 <message@@Base+0x2c20>
   172b0:	ldr	r2, [pc, #-1876]	; 16b64 <message@@Base+0x360c>
   172b4:	orr	r0, r9, r8, lsl #8
   172b8:	mov	ip, #0
   172bc:	add	r2, pc, r2
   172c0:	ldr	r1, [r2, #1072]	; 0x430
   172c4:	str	ip, [r2, #1072]	; 0x430
   172c8:	orr	r1, r3, r1
   172cc:	bl	fe30 <__printf_chk@plt+0xc>
   172d0:	cmp	r0, #0
   172d4:	beq	17d80 <message@@Base+0x4828>
   172d8:	ldr	r2, [sl]
   172dc:	ldr	r3, [r2, #8]
   172e0:	ldr	r0, [r2, #12]
   172e4:	b	13ea0 <message@@Base+0x948>
   172e8:	cmp	r2, #4096	; 0x1000
   172ec:	beq	17948 <message@@Base+0x43f0>
   172f0:	cmp	r2, #4352	; 0x1100
   172f4:	moveq	r6, #0
   172f8:	bne	16178 <message@@Base+0x2c20>
   172fc:	cmp	r8, r9
   17300:	ble	17324 <message@@Base+0x3dcc>
   17304:	mov	r3, #0
   17308:	mov	r0, r9
   1730c:	str	r3, [sp]
   17310:	sub	r1, fp, #520	; 0x208
   17314:	sub	r2, fp, #516	; 0x204
   17318:	bl	fe54 <__printf_chk@plt+0x30>
   1731c:	cmp	r0, #0
   17320:	bne	17c08 <message@@Base+0x46b0>
   17324:	ldr	r3, [pc, #-1880]	; 16bd4 <message@@Base+0x367c>
   17328:	ldr	r0, [r4, r3]
   1732c:	bl	37160 <playTune@@Base>
   17330:	ldr	r2, [sl]
   17334:	ldr	r3, [r2, #8]
   17338:	ldr	r0, [r2, #12]
   1733c:	b	13ea0 <message@@Base+0x948>
   17340:	bl	105ac <_start@@Base+0x658>
   17344:	ldr	r0, [pc, #-2020]	; 16b68 <message@@Base+0x3610>
   17348:	ldr	r1, [sl]
   1734c:	mov	ip, #1
   17350:	ldr	r3, [pc, #-2028]	; 16b6c <message@@Base+0x3614>
   17354:	add	r0, pc, r0
   17358:	add	r0, r0, #1088	; 0x440
   1735c:	mov	r2, #82	; 0x52
   17360:	strb	ip, [r1, #5]
   17364:	add	r0, r0, #8
   17368:	ldr	r1, [r4, r3]
   1736c:	bl	fb24 <memcpy@plt>
   17370:	b	154a8 <message@@Base+0x1f50>
   17374:	cmp	r2, #2560	; 0xa00
   17378:	beq	179e8 <message@@Base+0x4490>
   1737c:	cmp	r2, #2816	; 0xb00
   17380:	bne	16178 <message@@Base+0x2c20>
   17384:	ldr	r3, [sl]
   17388:	add	r2, r9, #12
   1738c:	ldr	r1, [pc, #-2084]	; 16b70 <message@@Base+0x3618>
   17390:	lsl	r2, r2, #2
   17394:	ldr	ip, [r3, #8]
   17398:	add	r0, r3, r2
   1739c:	strh	ip, [r3, r2]
   173a0:	ldr	r3, [sl]
   173a4:	ldr	r3, [r3, #12]
   173a8:	strh	r3, [r0, #2]
   173ac:	ldr	r0, [r4, r1]
   173b0:	bl	37160 <playTune@@Base>
   173b4:	ldr	r2, [sl]
   173b8:	ldr	r3, [r2, #8]
   173bc:	ldr	r0, [r2, #12]
   173c0:	b	13ea0 <message@@Base+0x948>
   173c4:	ldr	r0, [pc, #-2136]	; 16b74 <message@@Base+0x361c>
   173c8:	add	r0, pc, r0
   173cc:	bl	10de4 <_start@@Base+0xe90>
   173d0:	b	16db8 <message@@Base+0x3860>
   173d4:	ldr	r1, [pc, #-2148]	; 16b78 <message@@Base+0x3620>
   173d8:	mov	r2, #5
   173dc:	mov	r0, #0
   173e0:	add	r1, pc, r1
   173e4:	bl	f9bc <dcgettext@plt>
   173e8:	ldrb	r6, [fp, #-502]	; 0xfffffe0a
   173ec:	ldr	r1, [pc, #-2168]	; 16b7c <message@@Base+0x3624>
   173f0:	mov	r3, #5
   173f4:	ldr	r2, [pc, #-2172]	; 16b80 <message@@Base+0x3628>
   173f8:	str	r3, [sp]
   173fc:	add	r1, pc, r1
   17400:	mov	r3, r6
   17404:	add	r2, pc, r2
   17408:	mov	ip, r0
   1740c:	mov	r0, #0
   17410:	str	ip, [fp, #-584]	; 0xfffffdb8
   17414:	bl	f758 <dcngettext@plt>
   17418:	ldr	ip, [fp, #-584]	; 0xfffffdb8
   1741c:	ldr	r1, [pc, #-2208]	; 16b84 <message@@Base+0x362c>
   17420:	mov	r2, #1
   17424:	str	r6, [sp, #8]
   17428:	mvn	r3, #0
   1742c:	add	r1, pc, r1
   17430:	str	ip, [sp, #4]
   17434:	str	r1, [sp]
   17438:	rsb	r1, r8, r9
   1743c:	str	r0, [sp, #12]
   17440:	mov	r0, r8
   17444:	bl	fb60 <__snprintf_chk@plt>
   17448:	b	1665c <message@@Base+0x3104>
   1744c:	ldr	r2, [pc, #-2252]	; 16b88 <message@@Base+0x3630>
   17450:	mov	r0, r9
   17454:	ldr	r3, [fp, #-544]	; 0xfffffde0
   17458:	mov	r1, #256	; 0x100
   1745c:	add	r2, pc, r2
   17460:	bl	f734 <snprintf@plt>
   17464:	add	r3, r9, #256	; 0x100
   17468:	add	r0, r9, r0
   1746c:	cmp	r0, r3
   17470:	movcs	r0, r3
   17474:	b	16694 <message@@Base+0x313c>
   17478:	ldr	r3, [pc, #-2220]	; 16bd4 <message@@Base+0x367c>
   1747c:	ldr	r0, [r4, r3]
   17480:	bl	37160 <playTune@@Base>
   17484:	b	17290 <message@@Base+0x3d38>
   17488:	ldr	ip, [fp, #-544]	; 0xfffffde0
   1748c:	mov	r1, #256	; 0x100
   17490:	ldr	r0, [pc, #-2316]	; 16b8c <message@@Base+0x3634>
   17494:	mov	r3, r1
   17498:	str	r7, [sp, #8]
   1749c:	add	r0, pc, r0
   174a0:	str	ip, [sp, #4]
   174a4:	str	r0, [sp]
   174a8:	mov	r0, r9
   174ac:	bl	fb60 <__snprintf_chk@plt>
   174b0:	add	r3, r9, #256	; 0x100
   174b4:	add	r0, r9, r0
   174b8:	cmp	r0, r3
   174bc:	movcs	r0, r3
   174c0:	b	16694 <message@@Base+0x313c>
   174c4:	sub	r6, fp, #488	; 0x1e8
   174c8:	str	r6, [fp, #-544]	; 0xfffffde0
   174cc:	ldr	r6, [fp, #-552]	; 0xfffffdd8
   174d0:	mov	r1, #64	; 0x40
   174d4:	ldr	r8, [pc, #-2380]	; 16b90 <message@@Base+0x3638>
   174d8:	mov	r3, r1
   174dc:	mov	r2, #1
   174e0:	str	r6, [sp, #4]
   174e4:	add	r8, pc, r8
   174e8:	ldr	r0, [fp, #-544]	; 0xfffffde0
   174ec:	str	r8, [sp]
   174f0:	str	ip, [fp, #-584]	; 0xfffffdb8
   174f4:	bl	fb60 <__snprintf_chk@plt>
   174f8:	ldr	r6, [fp, #-544]	; 0xfffffde0
   174fc:	ldr	r2, [pc, #-2416]	; 16b94 <message@@Base+0x363c>
   17500:	add	r2, pc, r2
   17504:	add	r0, r6, r0
   17508:	cmp	r0, r7
   1750c:	movcc	r6, r0
   17510:	movcs	r6, r7
   17514:	rsb	r1, r6, r7
   17518:	mov	r0, r6
   1751c:	bl	f734 <snprintf@plt>
   17520:	ldr	ip, [fp, #-584]	; 0xfffffdb8
   17524:	ldr	r2, [pc, #-2452]	; 16b98 <message@@Base+0x3640>
   17528:	mov	r3, ip
   1752c:	add	r2, pc, r2
   17530:	add	r0, r6, r0
   17534:	cmp	r0, r7
   17538:	movcc	r6, r0
   1753c:	movcs	r6, r7
   17540:	rsb	r1, r6, r7
   17544:	mov	r0, r6
   17548:	bl	f734 <snprintf@plt>
   1754c:	ldr	r2, [pc, #-2488]	; 16b9c <message@@Base+0x3644>
   17550:	add	r2, pc, r2
   17554:	add	r0, r6, r0
   17558:	cmp	r0, r7
   1755c:	movcc	r6, r0
   17560:	movcs	r6, r7
   17564:	rsb	r1, r6, r7
   17568:	mov	r0, r6
   1756c:	bl	f734 <snprintf@plt>
   17570:	movw	r1, #65064	; 0xfe28
   17574:	movt	r1, #65535	; 0xffff
   17578:	mov	r2, #1
   1757c:	str	r8, [sp]
   17580:	sub	ip, fp, #36	; 0x24
   17584:	add	r0, r6, r0
   17588:	cmp	r0, r7
   1758c:	movcs	r0, r7
   17590:	mvn	r3, #0
   17594:	ldrh	r1, [ip, r1]
   17598:	uxth	r1, r1
   1759c:	str	r1, [sp, #4]
   175a0:	rsb	r1, r0, r7
   175a4:	bl	fb60 <__snprintf_chk@plt>
   175a8:	b	16f3c <message@@Base+0x39e4>
   175ac:	sub	r6, fp, #488	; 0x1e8
   175b0:	ldr	r2, [pc, #-2584]	; 16ba0 <message@@Base+0x3648>
   175b4:	mov	r3, ip
   175b8:	ldr	ip, [pc, #-2588]	; 16ba4 <message@@Base+0x364c>
   175bc:	mov	r1, #64	; 0x40
   175c0:	add	r2, pc, r2
   175c4:	mov	r0, r6
   175c8:	add	ip, pc, ip
   175cc:	str	r6, [fp, #-544]	; 0xfffffde0
   175d0:	str	ip, [fp, #-584]	; 0xfffffdb8
   175d4:	bl	f734 <snprintf@plt>
   175d8:	ldr	r2, [pc, #-2616]	; 16ba8 <message@@Base+0x3650>
   175dc:	add	r2, pc, r2
   175e0:	add	r0, r6, r0
   175e4:	cmp	r0, r7
   175e8:	movcc	r6, r0
   175ec:	movcs	r6, r7
   175f0:	rsb	r1, r6, r7
   175f4:	mov	r0, r6
   175f8:	bl	f734 <snprintf@plt>
   175fc:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   17600:	mov	r2, r8
   17604:	mvn	r3, #0
   17608:	str	r1, [sp, #4]
   1760c:	ldr	ip, [fp, #-584]	; 0xfffffdb8
   17610:	str	ip, [sp]
   17614:	str	ip, [fp, #-584]	; 0xfffffdb8
   17618:	add	r0, r6, r0
   1761c:	cmp	r0, r7
   17620:	movcc	r6, r0
   17624:	movcs	r6, r7
   17628:	rsb	r1, r6, r7
   1762c:	mov	r0, r6
   17630:	bl	fb60 <__snprintf_chk@plt>
   17634:	ldr	r2, [pc, #-2704]	; 16bac <message@@Base+0x3654>
   17638:	add	r2, pc, r2
   1763c:	add	r0, r6, r0
   17640:	cmp	r0, r7
   17644:	movcc	r6, r0
   17648:	movcs	r6, r7
   1764c:	rsb	r1, r6, r7
   17650:	mov	r0, r6
   17654:	bl	f734 <snprintf@plt>
   17658:	ldr	ip, [fp, #-584]	; 0xfffffdb8
   1765c:	movw	r1, #65064	; 0xfe28
   17660:	mov	r2, r8
   17664:	movt	r1, #65535	; 0xffff
   17668:	str	ip, [sp]
   1766c:	b	17580 <message@@Base+0x4028>
   17670:	ldr	r0, [pc, #-2760]	; 16bb0 <message@@Base+0x3658>
   17674:	add	r0, pc, r0
   17678:	bl	10d9c <_start@@Base+0xe48>
   1767c:	b	16cd0 <message@@Base+0x3778>
   17680:	beq	163c4 <message@@Base+0x2e6c>
   17684:	ldr	r2, [sl]
   17688:	mov	sp, r7
   1768c:	ldr	r3, [r2, #8]
   17690:	ldr	r0, [r2, #12]
   17694:	b	13ea0 <message@@Base+0x948>
   17698:	ldr	ip, [fp, #-552]	; 0xfffffdd8
   1769c:	mov	r3, #0
   176a0:	ldr	r6, [fp, #-540]	; 0xfffffde4
   176a4:	mov	r8, r9
   176a8:	str	r9, [fp, #-548]	; 0xfffffddc
   176ac:	str	r3, [ip, #40]	; 0x28
   176b0:	str	r6, [ip, #44]	; 0x2c
   176b4:	mov	ip, r3
   176b8:	ldr	r4, [fp, #-568]	; 0xfffffdc8
   176bc:	ldr	sl, [fp, #-564]	; 0xfffffdcc
   176c0:	ldr	r5, [fp, #-576]	; 0xfffffdc0
   176c4:	b	15b48 <message@@Base+0x25f0>
   176c8:	mov	ip, r4
   176cc:	mov	r5, r6
   176d0:	ldr	r4, [fp, #-540]	; 0xfffffde4
   176d4:	mov	r6, r9
   176d8:	b	16c0c <message@@Base+0x36b4>
   176dc:	ldr	r3, [pc, #-2836]	; 16bd0 <message@@Base+0x3678>
   176e0:	ldr	r6, [r4, r3]
   176e4:	b	1717c <message@@Base+0x3c24>
   176e8:	mov	r3, #1
   176ec:	mov	r0, r9
   176f0:	str	r3, [sp]
   176f4:	sub	r1, fp, #512	; 0x200
   176f8:	sub	r2, fp, #508	; 0x1fc
   176fc:	bl	fe54 <__printf_chk@plt+0x30>
   17700:	cmp	r0, #0
   17704:	beq	1772c <message@@Base+0x41d4>
   17708:	ldr	r0, [fp, #-512]	; 0xfffffe00
   1770c:	ldr	r1, [fp, #-508]	; 0xfffffe04
   17710:	bl	26b88 <cpbRectangularCopy@@Base>
   17714:	cmp	r0, #0
   17718:	beq	1772c <message@@Base+0x41d4>
   1771c:	ldr	r2, [sl]
   17720:	ldr	r3, [r2, #8]
   17724:	ldr	r0, [r2, #12]
   17728:	b	13ea0 <message@@Base+0x948>
   1772c:	ldr	r3, [pc, #-2912]	; 16bd4 <message@@Base+0x367c>
   17730:	ldr	r0, [r4, r3]
   17734:	bl	37160 <playTune@@Base>
   17738:	b	1771c <message@@Base+0x41c4>
   1773c:	ldr	r2, [pc, #-2960]	; 16bb4 <message@@Base+0x365c>
   17740:	add	r2, pc, r2
   17744:	add	r3, r2, r3, lsl #2
   17748:	ldr	r0, [r3, #8]
   1774c:	bl	f614 <nl_langinfo@plt>
   17750:	mov	ip, r0
   17754:	b	16e34 <message@@Base+0x38dc>
   17758:	ldr	r3, [r2, #8]
   1775c:	ldrsh	r1, [r6, #4]
   17760:	cmp	r1, r3
   17764:	bge	13ea0 <message@@Base+0x948>
   17768:	b	17000 <message@@Base+0x3aa8>
   1776c:	add	r3, r9, #12
   17770:	ldr	r1, [sl]
   17774:	lsl	r3, r3, #2
   17778:	add	r0, r1, r3
   1777c:	mov	r2, r1
   17780:	ldrsh	r3, [r1, r3]
   17784:	str	r3, [r1, #8]
   17788:	ldrsh	r0, [r0, #2]
   1778c:	str	r0, [r1, #12]
   17790:	b	13ea0 <message@@Base+0x948>
   17794:	mov	r3, #0
   17798:	mov	r0, r9
   1779c:	str	r3, [sp]
   177a0:	sub	r1, fp, #512	; 0x200
   177a4:	sub	r2, fp, #508	; 0x1fc
   177a8:	bl	fe54 <__printf_chk@plt+0x30>
   177ac:	cmp	r0, #0
   177b0:	bne	15974 <message@@Base+0x241c>
   177b4:	ldr	r3, [pc, #-3048]	; 16bd4 <message@@Base+0x367c>
   177b8:	ldr	r0, [r4, r3]
   177bc:	bl	37160 <playTune@@Base>
   177c0:	b	15980 <message@@Base+0x2428>
   177c4:	ldr	r3, [pc, #-3064]	; 16bd4 <message@@Base+0x367c>
   177c8:	ldr	r0, [r4, r3]
   177cc:	bl	37160 <playTune@@Base>
   177d0:	b	16998 <message@@Base+0x3440>
   177d4:	ldr	r3, [pc, #-3084]	; 16bd0 <message@@Base+0x3678>
   177d8:	tst	r7, #65536	; 0x10000
   177dc:	ldreq	r6, [r4, r3]
   177e0:	bne	17c80 <message@@Base+0x4728>
   177e4:	ldrsh	r3, [r6]
   177e8:	cmp	r9, r3
   177ec:	bge	17c64 <message@@Base+0x470c>
   177f0:	ldr	r2, [sl]
   177f4:	ldr	r0, [r2, #12]
   177f8:	cmp	r9, r0
   177fc:	strlt	r9, [r2, #12]
   17800:	movlt	r0, r9
   17804:	blt	17820 <message@@Base+0x42c8>
   17808:	ldr	r3, [r5, #4]
   1780c:	add	r1, r0, r3
   17810:	cmp	r9, r1
   17814:	rsbge	r3, r3, #1
   17818:	addge	r0, r3, r9
   1781c:	strge	r0, [r2, #12]
   17820:	tst	r7, #131072	; 0x20000
   17824:	movne	r3, #0
   17828:	ldreq	r3, [r2, #8]
   1782c:	strne	r3, [r2, #8]
   17830:	b	13ea0 <message@@Base+0x948>
   17834:	cmp	r9, #13
   17838:	addls	pc, pc, r9, lsl #2
   1783c:	b	17e14 <message@@Base+0x48bc>
   17840:	b	17e0c <message@@Base+0x48b4>
   17844:	b	17e04 <message@@Base+0x48ac>
   17848:	b	17dfc <message@@Base+0x48a4>
   1784c:	b	17df4 <message@@Base+0x489c>
   17850:	b	17dec <message@@Base+0x4894>
   17854:	b	17de4 <message@@Base+0x488c>
   17858:	b	17ddc <message@@Base+0x4884>
   1785c:	b	17dd4 <message@@Base+0x487c>
   17860:	b	17dcc <message@@Base+0x4874>
   17864:	b	17dc4 <message@@Base+0x486c>
   17868:	b	17dbc <message@@Base+0x4864>
   1786c:	b	17db4 <message@@Base+0x485c>
   17870:	b	17dac <message@@Base+0x4854>
   17874:	b	17cc4 <message@@Base+0x476c>
   17878:	tst	r7, #65536	; 0x10000
   1787c:	bne	17d50 <message@@Base+0x47f8>
   17880:	tst	r7, #131072	; 0x20000
   17884:	bne	17d40 <message@@Base+0x47e8>
   17888:	tst	r7, #262144	; 0x40000
   1788c:	bne	17d9c <message@@Base+0x4844>
   17890:	uxtb	r1, r9
   17894:	mov	r0, r6
   17898:	bl	2c810 <atInterpretScanCode@@Base>
   1789c:	cmp	r0, #0
   178a0:	bne	13a84 <message@@Base+0x52c>
   178a4:	ldr	r2, [sl]
   178a8:	ldr	r3, [r2, #8]
   178ac:	ldr	r0, [r2, #12]
   178b0:	b	13ea0 <message@@Base+0x948>
   178b4:	tst	r7, #131072	; 0x20000
   178b8:	bne	17d70 <message@@Base+0x4818>
   178bc:	tst	r7, #262144	; 0x40000
   178c0:	bne	17d60 <message@@Base+0x4808>
   178c4:	uxtb	r1, r9
   178c8:	mov	r0, r6
   178cc:	bl	2c908 <xtInterpretScanCode@@Base>
   178d0:	cmp	r0, #0
   178d4:	bne	13a84 <message@@Base+0x52c>
   178d8:	ldr	r2, [sl]
   178dc:	ldr	r3, [r2, #8]
   178e0:	ldr	r0, [r2, #12]
   178e4:	b	13ea0 <message@@Base+0x948>
   178e8:	mov	r3, #0
   178ec:	mov	r0, r9
   178f0:	str	r3, [sp]
   178f4:	sub	r1, fp, #512	; 0x200
   178f8:	sub	r2, fp, #508	; 0x1fc
   178fc:	bl	fe54 <__printf_chk@plt+0x30>
   17900:	cmp	r0, #0
   17904:	beq	17b70 <message@@Base+0x4618>
   17908:	ldr	ip, [sl]
   1790c:	mov	r3, #1
   17910:	ldr	lr, [fp, #-508]	; 0xfffffe04
   17914:	mov	r2, r3
   17918:	ldr	r0, [pc, #-3432]	; 16bb8 <message@@Base+0x3660>
   1791c:	ldr	r1, [pc, #-3432]	; 16bbc <message@@Base+0x3664>
   17920:	str	lr, [ip, #12]
   17924:	add	r0, pc, r0
   17928:	str	r3, [sp]
   1792c:	add	r1, pc, r1
   17930:	ldr	r3, [fp, #-512]	; 0xfffffe00
   17934:	bl	10b00 <_start@@Base+0xbac>
   17938:	ldr	r2, [sl]
   1793c:	ldr	r3, [r2, #8]
   17940:	ldr	r0, [r2, #12]
   17944:	b	13ea0 <message@@Base+0x948>
   17948:	mov	r6, #1
   1794c:	b	172fc <message@@Base+0x3da4>
   17950:	ldr	r3, [pc, #-3460]	; 16bd4 <message@@Base+0x367c>
   17954:	ldr	r0, [r4, r3]
   17958:	bl	37160 <playTune@@Base>
   1795c:	ldr	r2, [sl]
   17960:	ldr	r3, [r2, #8]
   17964:	ldr	r0, [r2, #12]
   17968:	b	13ea0 <message@@Base+0x948>
   1796c:	ldrsh	ip, [ip, #4]
   17970:	cmp	ip, #0
   17974:	blt	16364 <message@@Base+0x2e0c>
   17978:	cmp	r8, ip
   1797c:	bgt	13ea0 <message@@Base+0x948>
   17980:	b	16364 <message@@Base+0x2e0c>
   17984:	ldr	r2, [pc, #-3532]	; 16bc0 <message@@Base+0x3668>
   17988:	mov	ip, #0
   1798c:	ldr	r0, [pc, #-3536]	; 16bc4 <message@@Base+0x366c>
   17990:	uxtb	r1, r9
   17994:	add	r2, pc, r2
   17998:	ldr	r6, [r2, #1072]	; 0x430
   1799c:	str	ip, [r2, #1072]	; 0x430
   179a0:	ldr	r2, [r4, r0]
   179a4:	orr	r6, r3, r6
   179a8:	ldr	r0, [r2]
   179ac:	bl	2d94c <convertDotsToCharacter@@Base>
   179b0:	mov	r1, r6
   179b4:	bl	fe30 <__printf_chk@plt+0xc>
   179b8:	cmp	r0, #0
   179bc:	beq	17d14 <message@@Base+0x47bc>
   179c0:	ldr	r2, [sl]
   179c4:	ldr	r3, [r2, #8]
   179c8:	ldr	r0, [r2, #12]
   179cc:	b	13ea0 <message@@Base+0x948>
   179d0:	add	r0, r9, #1
   179d4:	bl	113e8 <_start@@Base+0x1494>
   179d8:	ldr	r2, [sl]
   179dc:	ldr	r3, [r2, #8]
   179e0:	ldr	r0, [r2, #12]
   179e4:	b	13ea0 <message@@Base+0x948>
   179e8:	mov	r3, #0
   179ec:	mov	r0, r9
   179f0:	str	r3, [sp]
   179f4:	sub	r1, fp, #512	; 0x200
   179f8:	sub	r2, fp, #508	; 0x1fc
   179fc:	bl	fe54 <__printf_chk@plt+0x30>
   17a00:	cmp	r0, #0
   17a04:	beq	17d30 <message@@Base+0x47d8>
   17a08:	ldr	r2, [fp, #-512]	; 0xfffffe00
   17a0c:	ldr	r3, [sl]
   17a10:	str	r2, [r3, #8]
   17a14:	ldr	r2, [fp, #-508]	; 0xfffffe04
   17a18:	str	r2, [r3, #12]
   17a1c:	ldr	r2, [sl]
   17a20:	ldr	r3, [r2, #8]
   17a24:	ldr	r0, [r2, #12]
   17a28:	b	13ea0 <message@@Base+0x948>
   17a2c:	mov	r6, #0
   17a30:	mov	r0, r9
   17a34:	str	r6, [sp]
   17a38:	mov	r3, r6
   17a3c:	sub	r1, fp, #512	; 0x200
   17a40:	sub	r2, fp, #508	; 0x1fc
   17a44:	bl	fe54 <__printf_chk@plt+0x30>
   17a48:	cmp	r0, r6
   17a4c:	beq	17be0 <message@@Base+0x4688>
   17a50:	sub	r7, fp, #296	; 0x128
   17a54:	ldr	r1, [fp, #-512]	; 0xfffffe00
   17a58:	ldr	r2, [fp, #-508]	; 0xfffffe04
   17a5c:	mov	r0, r7
   17a60:	bl	124a4 <_start@@Base+0x2550>
   17a64:	mov	r0, r6
   17a68:	mov	r1, r7
   17a6c:	mov	r2, r6
   17a70:	bl	13558 <message@@Base>
   17a74:	ldr	r2, [sl]
   17a78:	ldr	r3, [r2, #8]
   17a7c:	ldr	r0, [r2, #12]
   17a80:	b	13ea0 <message@@Base+0x948>
   17a84:	add	r8, r9, #1
   17a88:	mov	r7, sp
   17a8c:	lsl	r8, r8, #2
   17a90:	add	r3, r8, #10
   17a94:	bic	r3, r3, #7
   17a98:	sub	sp, sp, r3
   17a9c:	add	r6, sp, #24
   17aa0:	add	r8, r6, r8
   17aa4:	cmp	r6, r8
   17aa8:	bcs	17c00 <message@@Base+0x46a8>
   17aac:	ldr	r1, [pc, #-3820]	; 16bc8 <message@@Base+0x3670>
   17ab0:	movw	r3, #2115	; 0x843
   17ab4:	movt	r3, #33825	; 0x8421
   17ab8:	mov	ip, sl
   17abc:	add	r1, pc, r1
   17ac0:	mov	sl, r4
   17ac4:	str	r5, [fp, #-540]	; 0xfffffde4
   17ac8:	mov	r9, r6
   17acc:	mov	r4, r1
   17ad0:	mov	r5, r3
   17ad4:	str	ip, [fp, #-584]	; 0xfffffdb8
   17ad8:	bl	f428 <rand@plt>
   17adc:	lsr	r2, r0, #1
   17ae0:	umull	r1, r2, r5, r2
   17ae4:	lsr	r2, r2, #4
   17ae8:	rsb	r2, r2, r2, lsl #5
   17aec:	sub	r2, r0, r2, lsl #1
   17af0:	add	r2, r4, r2
   17af4:	ldrb	r2, [r2, #56]	; 0x38
   17af8:	str	r2, [r9], #4
   17afc:	cmp	r8, r9
   17b00:	ldr	ip, [fp, #-584]	; 0xfffffdb8
   17b04:	bhi	17ad4 <message@@Base+0x457c>
   17b08:	mvn	r3, r6
   17b0c:	add	r3, r8, r3
   17b10:	bic	r3, r3, #3
   17b14:	ldr	r5, [fp, #-540]	; 0xfffffde4
   17b18:	add	r3, r3, #4
   17b1c:	mov	r4, sl
   17b20:	add	r3, r6, r3
   17b24:	mov	sl, ip
   17b28:	rsb	r1, r6, r3
   17b2c:	mov	r0, r6
   17b30:	asr	r1, r1, #2
   17b34:	bl	26b1c <cpbSetContent@@Base>
   17b38:	ldr	r3, [pc, #-3956]	; 16bcc <message@@Base+0x3674>
   17b3c:	ldr	r0, [r4, r3]
   17b40:	bl	37160 <playTune@@Base>
   17b44:	ldr	r2, [sl]
   17b48:	mov	sp, r7
   17b4c:	ldr	r3, [r2, #8]
   17b50:	ldr	r0, [r2, #12]
   17b54:	b	13ea0 <message@@Base+0x948>
   17b58:	ldr	r3, [pc, #-3980]	; 16bd4 <message@@Base+0x367c>
   17b5c:	ldr	r0, [r4, r3]
   17b60:	bl	37160 <playTune@@Base>
   17b64:	b	16a10 <message@@Base+0x34b8>
   17b68:	mvn	r7, #0
   17b6c:	b	169c8 <message@@Base+0x3470>
   17b70:	ldr	r3, [pc, #-4004]	; 16bd4 <message@@Base+0x367c>
   17b74:	ldr	r0, [r4, r3]
   17b78:	bl	37160 <playTune@@Base>
   17b7c:	b	17938 <message@@Base+0x43e0>
   17b80:	mov	r3, #1
   17b84:	mov	r0, r9
   17b88:	str	r3, [sp]
   17b8c:	sub	r1, fp, #512	; 0x200
   17b90:	sub	r2, fp, #508	; 0x1fc
   17b94:	mov	r3, #0
   17b98:	bl	fe54 <__printf_chk@plt+0x30>
   17b9c:	cmp	r0, #0
   17ba0:	beq	17bc4 <message@@Base+0x466c>
   17ba4:	ldr	r3, [pc, #-4060]	; 16bd0 <message@@Base+0x3678>
   17ba8:	ldr	r0, [fp, #-512]	; 0xfffffe00
   17bac:	ldr	r1, [fp, #-508]	; 0xfffffe04
   17bb0:	ldr	r3, [r4, r3]
   17bb4:	ldr	r2, [r3, #8]
   17bb8:	bl	391c8 <routeCursor@@Base>
   17bbc:	cmp	r0, #0
   17bc0:	bne	17bf0 <message@@Base+0x4698>
   17bc4:	ldr	r3, [pc, #-4088]	; 16bd4 <message@@Base+0x367c>
   17bc8:	ldr	r0, [r4, r3]
   17bcc:	bl	37160 <playTune@@Base>
   17bd0:	ldr	r2, [sl]
   17bd4:	ldr	r3, [r2, #8]
   17bd8:	ldr	r0, [r2, #12]
   17bdc:	b	13ea0 <message@@Base+0x948>
   17be0:	ldr	r3, [pc, #572]	; 17e24 <message@@Base+0x48cc>
   17be4:	ldr	r0, [r4, r3]
   17be8:	bl	37160 <playTune@@Base>
   17bec:	b	17a74 <message@@Base+0x451c>
   17bf0:	ldr	r3, [pc, #560]	; 17e28 <message@@Base+0x48d0>
   17bf4:	ldr	r0, [r4, r3]
   17bf8:	bl	37160 <playTune@@Base>
   17bfc:	b	17bd0 <message@@Base+0x4678>
   17c00:	mov	r3, r6
   17c04:	b	17b28 <message@@Base+0x45d0>
   17c08:	mov	r3, #1
   17c0c:	mov	r0, r8
   17c10:	str	r3, [sp]
   17c14:	sub	r1, fp, #512	; 0x200
   17c18:	sub	r2, fp, #508	; 0x1fc
   17c1c:	bl	fe54 <__printf_chk@plt+0x30>
   17c20:	cmp	r0, #0
   17c24:	beq	17324 <message@@Base+0x3dcc>
   17c28:	cmp	r6, #0
   17c2c:	beq	17c34 <message@@Base+0x46dc>
   17c30:	bl	26a5c <cpbClearContent@@Base>
   17c34:	ldr	r0, [fp, #-520]	; 0xfffffdf8
   17c38:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   17c3c:	bl	26b3c <cpbBeginOperation@@Base>
   17c40:	ldr	r0, [fp, #-512]	; 0xfffffe00
   17c44:	ldr	r1, [fp, #-508]	; 0xfffffe04
   17c48:	bl	26cd0 <cpbLinearCopy@@Base>
   17c4c:	cmp	r0, #0
   17c50:	beq	17324 <message@@Base+0x3dcc>
   17c54:	ldr	r2, [sl]
   17c58:	ldr	r3, [r2, #8]
   17c5c:	ldr	r0, [r2, #12]
   17c60:	b	13ea0 <message@@Base+0x948>
   17c64:	ldr	r3, [pc, #440]	; 17e24 <message@@Base+0x48cc>
   17c68:	ldr	r0, [r4, r3]
   17c6c:	bl	37160 <playTune@@Base>
   17c70:	ldr	r2, [sl]
   17c74:	ldr	r3, [r2, #8]
   17c78:	ldr	r0, [r2, #12]
   17c7c:	b	13ea0 <message@@Base+0x948>
   17c80:	ldr	r6, [r4, r3]
   17c84:	mov	r0, r9
   17c88:	mov	r1, #255	; 0xff
   17c8c:	ldrsh	r2, [r6]
   17c90:	sub	r2, r2, #1
   17c94:	bl	1ddcc <rescaleInteger@@Base>
   17c98:	mov	r9, r0
   17c9c:	b	177e4 <message@@Base+0x428c>
   17ca0:	bl	fd04 <_Unwind_Resume@plt>
   17ca4:	ldrsh	r2, [r6, #4]
   17ca8:	cmp	r2, #0
   17cac:	blt	17224 <message@@Base+0x3ccc>
   17cb0:	cmp	r3, r2
   17cb4:	ble	17224 <message@@Base+0x3ccc>
   17cb8:	cmp	r0, r2
   17cbc:	movlt	r0, r2
   17cc0:	b	17224 <message@@Base+0x3ccc>
   17cc4:	movw	r0, #63501	; 0xf80d
   17cc8:	ldr	r2, [pc, #348]	; 17e2c <message@@Base+0x48d4>
   17ccc:	mov	ip, #0
   17cd0:	add	r2, pc, r2
   17cd4:	ldr	r1, [r2, #1072]	; 0x430
   17cd8:	str	ip, [r2, #1072]	; 0x430
   17cdc:	orr	r1, r3, r1
   17ce0:	bl	fe30 <__printf_chk@plt+0xc>
   17ce4:	cmp	r0, #0
   17ce8:	ldrne	r2, [sl]
   17cec:	ldrne	r3, [r2, #8]
   17cf0:	ldrne	r0, [r2, #12]
   17cf4:	bne	13ea0 <message@@Base+0x948>
   17cf8:	ldr	r3, [pc, #292]	; 17e24 <message@@Base+0x48cc>
   17cfc:	ldr	r0, [r4, r3]
   17d00:	bl	37160 <playTune@@Base>
   17d04:	ldr	r2, [sl]
   17d08:	ldr	r3, [r2, #8]
   17d0c:	ldr	r0, [r2, #12]
   17d10:	b	13ea0 <message@@Base+0x948>
   17d14:	ldr	r3, [pc, #264]	; 17e24 <message@@Base+0x48cc>
   17d18:	ldr	r0, [r4, r3]
   17d1c:	bl	37160 <playTune@@Base>
   17d20:	ldr	r2, [sl]
   17d24:	ldr	r3, [r2, #8]
   17d28:	ldr	r0, [r2, #12]
   17d2c:	b	13ea0 <message@@Base+0x948>
   17d30:	ldr	r3, [pc, #236]	; 17e24 <message@@Base+0x48cc>
   17d34:	ldr	r0, [r4, r3]
   17d38:	bl	37160 <playTune@@Base>
   17d3c:	b	17a1c <message@@Base+0x44c4>
   17d40:	mov	r0, r6
   17d44:	mov	r1, #224	; 0xe0
   17d48:	bl	2c810 <atInterpretScanCode@@Base>
   17d4c:	b	17888 <message@@Base+0x4330>
   17d50:	mov	r0, r6
   17d54:	mov	r1, #240	; 0xf0
   17d58:	bl	2c810 <atInterpretScanCode@@Base>
   17d5c:	b	17880 <message@@Base+0x4328>
   17d60:	mov	r0, r6
   17d64:	mov	r1, #225	; 0xe1
   17d68:	bl	2c908 <xtInterpretScanCode@@Base>
   17d6c:	b	178c4 <message@@Base+0x436c>
   17d70:	mov	r0, r6
   17d74:	mov	r1, #224	; 0xe0
   17d78:	bl	2c908 <xtInterpretScanCode@@Base>
   17d7c:	b	178bc <message@@Base+0x4364>
   17d80:	ldr	r3, [pc, #156]	; 17e24 <message@@Base+0x48cc>
   17d84:	ldr	r0, [r4, r3]
   17d88:	bl	37160 <playTune@@Base>
   17d8c:	ldr	r2, [sl]
   17d90:	ldr	r3, [r2, #8]
   17d94:	ldr	r0, [r2, #12]
   17d98:	b	13ea0 <message@@Base+0x948>
   17d9c:	mov	r0, r6
   17da0:	mov	r1, #225	; 0xe1
   17da4:	bl	2c810 <atInterpretScanCode@@Base>
   17da8:	b	17890 <message@@Base+0x4338>
   17dac:	movw	r0, #63500	; 0xf80c
   17db0:	b	17cc8 <message@@Base+0x4770>
   17db4:	movw	r0, #63499	; 0xf80b
   17db8:	b	17cc8 <message@@Base+0x4770>
   17dbc:	movw	r0, #63498	; 0xf80a
   17dc0:	b	17cc8 <message@@Base+0x4770>
   17dc4:	movw	r0, #63497	; 0xf809
   17dc8:	b	17cc8 <message@@Base+0x4770>
   17dcc:	movw	r0, #63496	; 0xf808
   17dd0:	b	17cc8 <message@@Base+0x4770>
   17dd4:	movw	r0, #63495	; 0xf807
   17dd8:	b	17cc8 <message@@Base+0x4770>
   17ddc:	movw	r0, #63494	; 0xf806
   17de0:	b	17cc8 <message@@Base+0x4770>
   17de4:	movw	r0, #63493	; 0xf805
   17de8:	b	17cc8 <message@@Base+0x4770>
   17dec:	movw	r0, #63492	; 0xf804
   17df0:	b	17cc8 <message@@Base+0x4770>
   17df4:	movw	r0, #63491	; 0xf803
   17df8:	b	17cc8 <message@@Base+0x4770>
   17dfc:	movw	r0, #63490	; 0xf802
   17e00:	b	17cc8 <message@@Base+0x4770>
   17e04:	movw	r0, #63489	; 0xf801
   17e08:	b	17cc8 <message@@Base+0x4770>
   17e0c:	mov	r0, #63488	; 0xf800
   17e10:	b	17cc8 <message@@Base+0x4770>
   17e14:	cmp	r9, #13
   17e18:	ble	17cf8 <message@@Base+0x47a0>
   17e1c:	add	r0, r9, #63488	; 0xf800
   17e20:	b	17cc8 <message@@Base+0x4770>
   17e24:	andeq	r0, r0, r4, asr #8
   17e28:	andeq	r0, r0, r0, lsl #10
   17e2c:	andeq	fp, r5, r4, ror r4

00017e30 <brlttyUpdate@@Base>:
   17e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e34:	add	fp, sp, #32
   17e38:	ldr	r4, [pc, #3668]	; 18c94 <brlttyUpdate@@Base+0xe64>
   17e3c:	sub	sp, sp, #332	; 0x14c
   17e40:	ldr	r2, [pc, #3664]	; 18c98 <brlttyUpdate@@Base+0xe68>
   17e44:	add	r4, pc, r4
   17e48:	ldr	r3, [pc, #3660]	; 18c9c <brlttyUpdate@@Base+0xe6c>
   17e4c:	ldr	r2, [r4, r2]
   17e50:	add	r3, pc, r3
   17e54:	ldr	r3, [r3]
   17e58:	str	r2, [fp, #-208]	; 0xffffff30
   17e5c:	ldr	r2, [r2]
   17e60:	str	r2, [fp, #-40]	; 0xffffffd8
   17e64:	blx	r3
   17e68:	cmp	r0, #0
   17e6c:	beq	17e84 <brlttyUpdate@@Base+0x54>
   17e70:	ldr	r6, [pc, #3624]	; 18ca0 <brlttyUpdate@@Base+0xe70>
   17e74:	add	r6, pc, r6
   17e78:	ldr	r5, [r6, #1036]	; 0x40c
   17e7c:	cmp	r5, #0
   17e80:	beq	17ea4 <brlttyUpdate@@Base+0x74>
   17e84:	mov	r0, #0
   17e88:	ldr	r7, [fp, #-208]	; 0xffffff30
   17e8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17e90:	ldr	r3, [r7]
   17e94:	cmp	r2, r3
   17e98:	bne	197fc <brlttyUpdate@@Base+0x19cc>
   17e9c:	sub	sp, fp, #32
   17ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ea4:	mov	r0, r5
   17ea8:	bl	37044 <closeTuneDevice@@Base>
   17eac:	mov	r1, r5
   17eb0:	mov	r0, #1
   17eb4:	bl	109dc <_start@@Base+0xa88>
   17eb8:	ldr	r3, [pc, #3556]	; 18ca4 <brlttyUpdate@@Base+0xe74>
   17ebc:	ldr	r3, [r4, r3]
   17ec0:	ldr	r3, [r3]
   17ec4:	cmp	r3, #0
   17ec8:	beq	17f24 <brlttyUpdate@@Base+0xf4>
   17ecc:	ldr	r3, [pc, #3720]	; 18d5c <brlttyUpdate@@Base+0xf2c>
   17ed0:	ldr	r5, [r4, r3]
   17ed4:	ldr	r3, [r5, #16]
   17ed8:	cmp	r3, #0
   17edc:	ldr	r3, [r6, #1092]	; 0x444
   17ee0:	beq	18678 <brlttyUpdate@@Base+0x848>
   17ee4:	cmp	r3, #0
   17ee8:	beq	1862c <brlttyUpdate@@Base+0x7fc>
   17eec:	ldr	r3, [pc, #3508]	; 18ca8 <brlttyUpdate@@Base+0xe78>
   17ef0:	ldr	r3, [r4, r3]
   17ef4:	str	r3, [fp, #-212]	; 0xffffff2c
   17ef8:	ldr	r9, [fp, #-212]	; 0xffffff2c
   17efc:	ldr	r3, [r9]
   17f00:	cmp	r3, #0
   17f04:	bne	185e8 <brlttyUpdate@@Base+0x7b8>
   17f08:	ldr	r3, [pc, #3484]	; 18cac <brlttyUpdate@@Base+0xe7c>
   17f0c:	ldr	r3, [r4, r3]
   17f10:	str	r3, [fp, #-224]	; 0xffffff20
   17f14:	ldr	r0, [fp, #-224]	; 0xffffff20
   17f18:	bl	46d14 <processSpeechInput@@Base>
   17f1c:	mov	r0, #1
   17f20:	b	17e88 <brlttyUpdate@@Base+0x58>
   17f24:	ldr	r2, [pc, #3452]	; 18ca8 <brlttyUpdate@@Base+0xe78>
   17f28:	ldr	r3, [r6, #1092]	; 0x444
   17f2c:	ldr	r2, [r4, r2]
   17f30:	str	r2, [fp, #-212]	; 0xffffff2c
   17f34:	cmp	r3, #0
   17f38:	bne	17ef8 <brlttyUpdate@@Base+0xc8>
   17f3c:	ldr	r5, [fp, #-212]	; 0xffffff2c
   17f40:	ldr	r3, [r5]
   17f44:	cmp	r3, #0
   17f48:	streq	r3, [fp, #-248]	; 0xffffff08
   17f4c:	bne	18610 <brlttyUpdate@@Base+0x7e0>
   17f50:	ldr	r6, [pc, #3416]	; 18cb0 <brlttyUpdate@@Base+0xe80>
   17f54:	add	r6, pc, r6
   17f58:	b	17f68 <brlttyUpdate@@Base+0x138>
   17f5c:	bl	13978 <message@@Base+0x420>
   17f60:	cmp	r0, #0
   17f64:	beq	17f78 <brlttyUpdate@@Base+0x148>
   17f68:	ldr	r3, [r6, #1036]	; 0x40c
   17f6c:	cmp	r3, #0
   17f70:	beq	17f5c <brlttyUpdate@@Base+0x12c>
   17f74:	b	17e84 <brlttyUpdate@@Base+0x54>
   17f78:	ldr	r5, [pc, #3380]	; 18cb4 <brlttyUpdate@@Base+0xe84>
   17f7c:	bl	105ac <_start@@Base+0x658>
   17f80:	add	r5, pc, r5
   17f84:	mov	r0, r5
   17f88:	bl	11a94 <_start@@Base+0x1b40>
   17f8c:	add	r0, r5, #20
   17f90:	bl	11a94 <_start@@Base+0x1b40>
   17f94:	add	r0, r5, #40	; 0x28
   17f98:	bl	11a94 <_start@@Base+0x1b40>
   17f9c:	add	r0, r5, #60	; 0x3c
   17fa0:	bl	11a94 <_start@@Base+0x1b40>
   17fa4:	ldr	r2, [pc, #3340]	; 18cb8 <brlttyUpdate@@Base+0xe88>
   17fa8:	ldr	r3, [pc, #3324]	; 18cac <brlttyUpdate@@Base+0xe7c>
   17fac:	ldr	r5, [r4, r2]
   17fb0:	ldr	r3, [r4, r3]
   17fb4:	str	r3, [fp, #-224]	; 0xffffff20
   17fb8:	ldr	r3, [r5]
   17fbc:	ldr	r0, [fp, #-224]	; 0xffffff20
   17fc0:	ldr	r3, [r3, #48]	; 0x30
   17fc4:	blx	r3
   17fc8:	ldr	r3, [r6, #1048]	; 0x418
   17fcc:	cmp	r3, #0
   17fd0:	bne	184d4 <brlttyUpdate@@Base+0x6a4>
   17fd4:	ldr	r3, [pc, #3296]	; 18cbc <brlttyUpdate@@Base+0xe8c>
   17fd8:	ldr	r3, [r4, r3]
   17fdc:	str	r3, [fp, #-244]	; 0xffffff0c
   17fe0:	ldr	r3, [r3]
   17fe4:	ldrb	r8, [r3, #4]
   17fe8:	cmp	r8, #0
   17fec:	moveq	r5, r3
   17ff0:	beq	1814c <brlttyUpdate@@Base+0x31c>
   17ff4:	ldr	r2, [pc, #3268]	; 18cc0 <brlttyUpdate@@Base+0xe90>
   17ff8:	add	r2, pc, r2
   17ffc:	ldr	r2, [r2, #1048]	; 0x418
   18000:	cmp	r2, #0
   18004:	beq	18030 <brlttyUpdate@@Base+0x200>
   18008:	ldr	r2, [pc, #3404]	; 18d5c <brlttyUpdate@@Base+0xf2c>
   1800c:	ldr	r6, [pc, #3248]	; 18cc4 <brlttyUpdate@@Base+0xe94>
   18010:	ldr	r2, [r4, r2]
   18014:	add	r6, pc, r6
   18018:	str	r2, [fp, #-216]	; 0xffffff28
   1801c:	ldr	r7, [fp, #-216]	; 0xffffff28
   18020:	ldr	r2, [r6]
   18024:	ldr	r1, [r7, #8]
   18028:	cmp	r1, r2
   1802c:	beq	19624 <brlttyUpdate@@Base+0x17f4>
   18030:	ldr	r2, [pc, #3420]	; 18d94 <brlttyUpdate@@Base+0xf64>
   18034:	ldr	r2, [r4, r2]
   18038:	ldrb	r2, [r2, #6]
   1803c:	cmp	r2, #0
   18040:	beq	18080 <brlttyUpdate@@Base+0x250>
   18044:	ldr	r2, [pc, #3344]	; 18d5c <brlttyUpdate@@Base+0xf2c>
   18048:	ldr	r1, [r3, #28]
   1804c:	ldr	r2, [r4, r2]
   18050:	ldrsh	r0, [r2, #6]
   18054:	cmp	r0, r1
   18058:	beq	19190 <brlttyUpdate@@Base+0x1360>
   1805c:	ldr	r3, [pc, #3172]	; 18cc8 <brlttyUpdate@@Base+0xe98>
   18060:	mov	r1, #0
   18064:	add	r3, pc, r3
   18068:	ldr	r2, [r3, #8]
   1806c:	str	r1, [r3, #12]
   18070:	ldrb	r2, [r2]
   18074:	add	r2, r2, r2, lsl #2
   18078:	lsl	r2, r2, #1
   1807c:	str	r2, [r3, #16]
   18080:	bl	3d11c <isRouting@@Base>
   18084:	cmp	r0, #0
   18088:	bne	18ad4 <brlttyUpdate@@Base+0xca4>
   1808c:	ldr	r2, [pc, #3272]	; 18d5c <brlttyUpdate@@Base+0xf2c>
   18090:	ldr	r9, [fp, #-244]	; 0xffffff0c
   18094:	ldr	r2, [r4, r2]
   18098:	ldr	r3, [r9]
   1809c:	str	r2, [fp, #-216]	; 0xffffff28
   180a0:	ldr	ip, [fp, #-216]	; 0xffffff28
   180a4:	ldr	r2, [r3, #24]
   180a8:	ldrsh	r1, [ip, #4]
   180ac:	cmp	r1, r2
   180b0:	bne	180c4 <brlttyUpdate@@Base+0x294>
   180b4:	ldrsh	r1, [ip, #6]
   180b8:	ldr	r2, [r3, #28]
   180bc:	cmp	r1, r2
   180c0:	beq	18ad4 <brlttyUpdate@@Base+0xca4>
   180c4:	mov	r0, #0
   180c8:	ldr	r5, [r3, #12]
   180cc:	ldr	r6, [r3, #8]
   180d0:	bl	116b4 <_start@@Base+0x1760>
   180d4:	ldr	r7, [fp, #-244]	; 0xffffff0c
   180d8:	mov	r0, #133	; 0x85
   180dc:	ldr	r9, [fp, #-216]	; 0xffffff28
   180e0:	mov	r8, #0
   180e4:	ldr	ip, [r7]
   180e8:	ldr	r2, [r9, #8]
   180ec:	ldr	r1, [ip, #28]
   180f0:	ldr	r3, [ip, #24]
   180f4:	str	r1, [sp]
   180f8:	ldrsh	lr, [r9, #4]
   180fc:	ldr	r1, [pc, #3016]	; 18ccc <brlttyUpdate@@Base+0xe9c>
   18100:	str	lr, [sp, #4]
   18104:	add	r1, pc, r1
   18108:	ldrsh	lr, [r9, #6]
   1810c:	str	r5, [sp, #16]
   18110:	str	r6, [sp, #12]
   18114:	str	lr, [sp, #8]
   18118:	ldr	lr, [ip, #8]
   1811c:	str	lr, [sp, #20]
   18120:	ldr	ip, [ip, #12]
   18124:	str	ip, [sp, #24]
   18128:	bl	1c634 <logMessage@@Base>
   1812c:	ldr	r3, [r7]
   18130:	ldrsh	r1, [r9, #4]
   18134:	ldrsh	r2, [r9, #6]
   18138:	mov	r5, r3
   1813c:	str	r1, [r3, #24]
   18140:	str	r1, [r3, #40]	; 0x28
   18144:	str	r2, [r3, #28]
   18148:	str	r2, [r3, #44]	; 0x2c
   1814c:	bl	11a00 <_start@@Base+0x1aac>
   18150:	cmp	r0, #0
   18154:	bne	184f0 <brlttyUpdate@@Base+0x6c0>
   18158:	ldr	r3, [pc, #2928]	; 18cd0 <brlttyUpdate@@Base+0xea0>
   1815c:	ldr	r1, [r5, #8]
   18160:	add	r3, pc, r3
   18164:	ldr	r2, [r3, #1076]	; 0x434
   18168:	cmp	r1, r2
   1816c:	beq	185c4 <brlttyUpdate@@Base+0x794>
   18170:	cmp	r8, #0
   18174:	beq	185d8 <brlttyUpdate@@Base+0x7a8>
   18178:	ldr	r3, [pc, #3092]	; 18d94 <brlttyUpdate@@Base+0xf64>
   1817c:	ldr	r3, [r4, r3]
   18180:	ldrb	r2, [r3, #4]
   18184:	cmp	r2, #0
   18188:	beq	181bc <brlttyUpdate@@Base+0x38c>
   1818c:	ldrb	r3, [r3, #10]
   18190:	cmp	r3, #0
   18194:	beq	181bc <brlttyUpdate@@Base+0x38c>
   18198:	ldr	r3, [pc, #2868]	; 18cd4 <brlttyUpdate@@Base+0xea4>
   1819c:	mov	r1, #1
   181a0:	add	r3, pc, r3
   181a4:	ldr	r2, [r3, #24]
   181a8:	str	r1, [r3, #32]
   181ac:	ldrb	r2, [r2]
   181b0:	add	r2, r2, r2, lsl #2
   181b4:	lsl	r2, r2, r1
   181b8:	str	r2, [r3, #36]	; 0x24
   181bc:	ldr	r2, [r5, #44]	; 0x2c
   181c0:	ldr	r3, [r5, #12]
   181c4:	cmp	r2, r3
   181c8:	bge	184b8 <brlttyUpdate@@Base+0x688>
   181cc:	str	r3, [r5, #44]	; 0x2c
   181d0:	ldr	r1, [r5, #40]	; 0x28
   181d4:	ldr	r2, [r5, #8]
   181d8:	cmp	r1, r2
   181dc:	blt	181f8 <brlttyUpdate@@Base+0x3c8>
   181e0:	ldr	r0, [pc, #2800]	; 18cd8 <brlttyUpdate@@Base+0xea8>
   181e4:	ldr	r0, [r4, r0]
   181e8:	ldr	r0, [r0]
   181ec:	add	r0, r2, r0
   181f0:	cmp	r1, r0
   181f4:	bcc	181fc <brlttyUpdate@@Base+0x3cc>
   181f8:	str	r2, [r5, #40]	; 0x28
   181fc:	ldr	r1, [pc, #2776]	; 18cdc <brlttyUpdate@@Base+0xeac>
   18200:	add	r1, pc, r1
   18204:	str	r2, [r1, #1076]	; 0x434
   18208:	str	r3, [r1, #1080]	; 0x438
   1820c:	ldr	r5, [pc, #2764]	; 18ce0 <brlttyUpdate@@Base+0xeb0>
   18210:	add	r5, pc, r5
   18214:	ldr	r3, [r5, #1088]	; 0x440
   18218:	cmp	r3, #0
   1821c:	bne	18478 <brlttyUpdate@@Base+0x648>
   18220:	ldr	r2, [pc, #2748]	; 18ce4 <brlttyUpdate@@Base+0xeb4>
   18224:	ldr	r2, [r4, r2]
   18228:	ldrb	r6, [r2]
   1822c:	ldr	r2, [pc, #2740]	; 18ce8 <brlttyUpdate@@Base+0xeb8>
   18230:	cmp	r6, #0
   18234:	beq	186d8 <brlttyUpdate@@Base+0x8a8>
   18238:	ldr	r2, [r4, r2]
   1823c:	mov	sl, sp
   18240:	ldr	r1, [pc, #2724]	; 18cec <brlttyUpdate@@Base+0xebc>
   18244:	ldr	ip, [r2, #4]
   18248:	mov	r0, r2
   1824c:	ldr	r8, [r2]
   18250:	add	r1, pc, r1
   18254:	str	r3, [fp, #-312]	; 0xfffffec8
   18258:	mul	r8, r8, ip
   1825c:	add	r2, r8, #8
   18260:	add	r6, r8, #1
   18264:	bic	r2, r2, #7
   18268:	sub	sp, sp, r2
   1826c:	bl	3da58 <setStatusText@@Base>
   18270:	add	r7, sp, #48	; 0x30
   18274:	ldr	r3, [fp, #-312]	; 0xfffffec8
   18278:	cmp	r0, #0
   1827c:	beq	18b60 <brlttyUpdate@@Base+0xd30>
   18280:	cmp	r8, #20
   18284:	bls	1921c <brlttyUpdate@@Base+0x13ec>
   18288:	ldr	r5, [fp, #-244]	; 0xffffff0c
   1828c:	add	r6, r7, r6
   18290:	rsb	r1, r7, r6
   18294:	ldr	r0, [pc, #2752]	; 18d5c <brlttyUpdate@@Base+0xf2c>
   18298:	ldr	r2, [r5]
   1829c:	ldr	r8, [r2, #8]
   182a0:	cmp	r8, #0
   182a4:	blt	195ec <brlttyUpdate@@Base+0x17bc>
   182a8:	ldr	r0, [r4, r0]
   182ac:	str	r0, [fp, #-216]	; 0xffffff28
   182b0:	ldrsh	r0, [r0, #2]
   182b4:	cmp	r8, r0
   182b8:	addlt	r8, r8, #1
   182bc:	movge	r8, r3
   182c0:	ldr	r9, [r2, #12]
   182c4:	cmp	r9, #0
   182c8:	blt	182e0 <brlttyUpdate@@Base+0x4b0>
   182cc:	ldr	ip, [fp, #-216]	; 0xffffff28
   182d0:	ldrsh	r3, [ip]
   182d4:	cmp	r9, r3
   182d8:	addlt	r9, r9, #1
   182dc:	blt	182e4 <brlttyUpdate@@Base+0x4b4>
   182e0:	mov	r9, #0
   182e4:	ldr	r5, [fp, #-216]	; 0xffffff28
   182e8:	ldrsh	r3, [r5, #4]
   182ec:	cmp	r3, #0
   182f0:	blt	195e0 <brlttyUpdate@@Base+0x17b0>
   182f4:	ldrsh	r0, [r5, #2]
   182f8:	cmp	r0, r3
   182fc:	addgt	r3, r3, #1
   18300:	strgt	r3, [fp, #-244]	; 0xffffff0c
   18304:	movle	r5, #0
   18308:	strle	r5, [fp, #-244]	; 0xffffff0c
   1830c:	ldr	ip, [fp, #-216]	; 0xffffff28
   18310:	ldrsh	r3, [ip, #6]
   18314:	cmp	r3, #0
   18318:	blt	193d4 <brlttyUpdate@@Base+0x15a4>
   1831c:	ldrsh	r0, [ip]
   18320:	cmp	r0, r3
   18324:	addgt	r3, r3, #1
   18328:	strgt	r3, [fp, #-236]	; 0xffffff14
   1832c:	movle	ip, #0
   18330:	strle	ip, [fp, #-236]	; 0xffffff14
   18334:	ldr	r5, [fp, #-216]	; 0xffffff28
   18338:	ldr	r0, [pc, #2644]	; 18d94 <brlttyUpdate@@Base+0xf64>
   1833c:	ldrb	r3, [r2, #4]
   18340:	ldr	r5, [r5, #8]
   18344:	cmp	r3, #0
   18348:	str	r5, [fp, #-216]	; 0xffffff28
   1834c:	moveq	r3, #32
   18350:	ldr	r0, [r4, r0]
   18354:	movne	r3, #116	; 0x74
   18358:	str	r3, [fp, #-220]	; 0xffffff24
   1835c:	ldrb	r3, [r0, #2]
   18360:	str	r0, [fp, #-228]	; 0xffffff1c
   18364:	cmp	r3, #0
   18368:	beq	19134 <brlttyUpdate@@Base+0x1304>
   1836c:	ldrb	r3, [r0, #6]
   18370:	cmp	r3, #0
   18374:	moveq	r3, #118	; 0x76
   18378:	movne	r3, #66	; 0x42
   1837c:	str	r3, [fp, #-232]	; 0xffffff18
   18380:	ldrb	r5, [r2, #6]
   18384:	str	r1, [fp, #-300]	; 0xfffffed4
   18388:	cmp	r5, #0
   1838c:	moveq	r5, #116	; 0x74
   18390:	movne	r5, #97	; 0x61
   18394:	bl	395c4 <isFrozenScreen@@Base>
   18398:	ldr	ip, [fp, #-228]	; 0xffffff1c
   1839c:	ldr	r1, [fp, #-300]	; 0xfffffed4
   183a0:	ldrb	r3, [ip, #26]
   183a4:	ldrb	r2, [ip, #8]
   183a8:	cmp	r3, #0
   183ac:	str	r5, [sp, #32]
   183b0:	str	r8, [sp, #4]
   183b4:	sub	r8, fp, #184	; 0xb8
   183b8:	moveq	r3, #56	; 0x38
   183bc:	movne	r3, #54	; 0x36
   183c0:	cmp	r2, #0
   183c4:	str	r3, [sp, #40]	; 0x28
   183c8:	str	r9, [sp, #8]
   183cc:	mov	r2, #1
   183d0:	moveq	lr, #32
   183d4:	movne	lr, #66	; 0x42
   183d8:	ldr	ip, [pc, #2320]	; 18cf0 <brlttyUpdate@@Base+0xec0>
   183dc:	mvn	r3, #0
   183e0:	sub	r5, fp, #168	; 0xa8
   183e4:	add	ip, pc, ip
   183e8:	str	lr, [sp, #44]	; 0x2c
   183ec:	cmp	r0, #0
   183f0:	ldr	r9, [fp, #-244]	; 0xffffff0c
   183f4:	mov	r0, r7
   183f8:	str	r9, [sp, #12]
   183fc:	ldr	r9, [fp, #-236]	; 0xffffff14
   18400:	str	r9, [sp, #16]
   18404:	ldr	r9, [fp, #-216]	; 0xffffff28
   18408:	str	r9, [sp, #20]
   1840c:	ldr	r9, [fp, #-220]	; 0xffffff24
   18410:	str	r9, [sp, #24]
   18414:	ldr	r9, [fp, #-232]	; 0xffffff18
   18418:	str	ip, [sp]
   1841c:	moveq	ip, #32
   18420:	movne	ip, #102	; 0x66
   18424:	str	ip, [sp, #36]	; 0x24
   18428:	str	r9, [sp, #28]
   1842c:	bl	fb60 <__snprintf_chk@plt>
   18430:	add	r9, r7, r0
   18434:	mov	r0, r8
   18438:	bl	111a8 <_start@@Base+0x1254>
   1843c:	mov	r1, r8
   18440:	mov	r0, r5
   18444:	cmp	r9, r6
   18448:	movcs	r9, r6
   1844c:	bl	12780 <_start@@Base+0x282c>
   18450:	rsb	r1, r9, r6
   18454:	cmp	r0, r1
   18458:	bcc	1943c <brlttyUpdate@@Base+0x160c>
   1845c:	ldr	r0, [pc, #2192]	; 18cf4 <brlttyUpdate@@Base+0xec4>
   18460:	mov	r1, r7
   18464:	add	r0, pc, r0
   18468:	bl	1301c <writeBrailleText@@Base>
   1846c:	cmp	r0, #0
   18470:	mov	sp, sl
   18474:	beq	18b64 <brlttyUpdate@@Base+0xd34>
   18478:	ldr	r7, [fp, #-248]	; 0xffffff08
   1847c:	cmp	r7, #0
   18480:	bne	186c0 <brlttyUpdate@@Base+0x890>
   18484:	ldr	r5, [fp, #-212]	; 0xffffff2c
   18488:	ldr	r3, [r5]
   1848c:	cmp	r3, #0
   18490:	beq	17f14 <brlttyUpdate@@Base+0xe4>
   18494:	ldr	r3, [pc, #2124]	; 18ce8 <brlttyUpdate@@Base+0xeb8>
   18498:	ldr	r0, [r4, r3]
   1849c:	bl	4c7ac <api_flush@@Base>
   184a0:	cmp	r0, #0
   184a4:	ldreq	r3, [pc, #2124]	; 18cf8 <brlttyUpdate@@Base+0xec8>
   184a8:	moveq	r2, #1
   184ac:	addeq	r3, pc, r3
   184b0:	streq	r2, [r3, #1084]	; 0x43c
   184b4:	b	17f14 <brlttyUpdate@@Base+0xe4>
   184b8:	ldr	r1, [pc, #2088]	; 18ce8 <brlttyUpdate@@Base+0xeb8>
   184bc:	ldr	r1, [r4, r1]
   184c0:	ldr	r1, [r1, #4]
   184c4:	add	r1, r3, r1
   184c8:	cmp	r2, r1
   184cc:	bcc	181d0 <brlttyUpdate@@Base+0x3a0>
   184d0:	b	181cc <brlttyUpdate@@Base+0x39c>
   184d4:	ldr	r3, [r5]
   184d8:	ldr	r0, [fp, #-224]	; 0xffffff20
   184dc:	ldr	r3, [r3, #56]	; 0x38
   184e0:	blx	r3
   184e4:	cmp	r0, #0
   184e8:	streq	r0, [r6, #1048]	; 0x418
   184ec:	b	17fd4 <brlttyUpdate@@Base+0x1a4>
   184f0:	ldr	r2, [pc, #2148]	; 18d5c <brlttyUpdate@@Base+0xf2c>
   184f4:	mov	r3, #1
   184f8:	str	sp, [fp, #-240]	; 0xffffff10
   184fc:	mov	r0, #0
   18500:	ldrsh	r1, [r5, #12]
   18504:	ldr	r2, [r4, r2]
   18508:	ldrh	r9, [r2, #2]
   1850c:	ldr	ip, [r2, #8]
   18510:	ldrsh	r5, [r2, #6]
   18514:	sxth	r7, r9
   18518:	ldrsh	r6, [r2, #4]
   1851c:	str	ip, [fp, #-232]	; 0xffffff18
   18520:	lsl	ip, r7, #3
   18524:	str	ip, [fp, #-236]	; 0xffffff14
   18528:	add	ip, ip, #8
   1852c:	str	r5, [fp, #-220]	; 0xffffff24
   18530:	sub	sp, sp, ip
   18534:	mov	r2, r7
   18538:	add	sl, sp, #51	; 0x33
   1853c:	lsr	sl, sl, #2
   18540:	lsl	r5, sl, #2
   18544:	str	r5, [sp]
   18548:	bl	39094 <readScreen@@Base>
   1854c:	ldr	r2, [pc, #1960]	; 18cfc <brlttyUpdate@@Base+0xecc>
   18550:	add	r2, pc, r2
   18554:	ldr	r3, [r2, #1048]	; 0x418
   18558:	cmp	r3, #0
   1855c:	beq	18af4 <brlttyUpdate@@Base+0xcc4>
   18560:	ldr	r0, [r2, #1180]	; 0x49c
   18564:	ldr	r1, [fp, #-236]	; 0xffffff14
   18568:	bl	f878 <realloc@plt>
   1856c:	ldr	r2, [pc, #1932]	; 18d00 <brlttyUpdate@@Base+0xed0>
   18570:	add	r2, pc, r2
   18574:	cmp	r0, #0
   18578:	str	r0, [r2, #1180]	; 0x49c
   1857c:	beq	193cc <brlttyUpdate@@Base+0x159c>
   18580:	mov	r1, r5
   18584:	ldr	r2, [fp, #-236]	; 0xffffff14
   18588:	bl	fb24 <memcpy@plt>
   1858c:	ldr	r3, [pc, #1904]	; 18d04 <brlttyUpdate@@Base+0xed4>
   18590:	ldr	r2, [pc, #1904]	; 18d08 <brlttyUpdate@@Base+0xed8>
   18594:	ldr	r5, [fp, #-220]	; 0xffffff24
   18598:	add	r3, pc, r3
   1859c:	ldr	ip, [fp, #-232]	; 0xffffff18
   185a0:	add	r2, pc, r2
   185a4:	str	r6, [r3, #16]
   185a8:	str	r5, [r3, #12]
   185ac:	str	r7, [r2, #1184]	; 0x4a0
   185b0:	str	ip, [r3, #8]
   185b4:	ldr	r7, [fp, #-244]	; 0xffffff0c
   185b8:	ldr	sp, [fp, #-240]	; 0xffffff10
   185bc:	ldr	r5, [r7]
   185c0:	b	18158 <brlttyUpdate@@Base+0x328>
   185c4:	ldr	r3, [r3, #1080]	; 0x438
   185c8:	ldr	r2, [r5, #12]
   185cc:	cmp	r2, r3
   185d0:	bne	18170 <brlttyUpdate@@Base+0x340>
   185d4:	b	1820c <brlttyUpdate@@Base+0x3dc>
   185d8:	bl	1321c <highlightWindow@@Base>
   185dc:	ldr	r9, [fp, #-244]	; 0xffffff0c
   185e0:	ldr	r5, [r9]
   185e4:	b	18178 <brlttyUpdate@@Base+0x348>
   185e8:	ldr	r3, [pc, #1784]	; 18ce8 <brlttyUpdate@@Base+0xeb8>
   185ec:	mov	r1, #3
   185f0:	ldr	r0, [r4, r3]
   185f4:	bl	3e004 <readBrailleCommand@@Base>
   185f8:	cmp	r0, #74	; 0x4a
   185fc:	beq	18aec <brlttyUpdate@@Base+0xcbc>
   18600:	ldr	r3, [pc, #1700]	; 18cac <brlttyUpdate@@Base+0xe7c>
   18604:	ldr	r3, [r4, r3]
   18608:	str	r3, [fp, #-224]	; 0xffffff20
   1860c:	b	18484 <brlttyUpdate@@Base+0x654>
   18610:	ldr	r3, [pc, #1744]	; 18ce8 <brlttyUpdate@@Base+0xeb8>
   18614:	ldr	r0, [r4, r3]
   18618:	bl	4cad0 <api_claimDriver@@Base>
   1861c:	adds	r0, r0, #0
   18620:	movne	r0, #1
   18624:	str	r0, [fp, #-248]	; 0xffffff08
   18628:	b	17f50 <brlttyUpdate@@Base+0x120>
   1862c:	bl	11428 <_start@@Base+0x14d4>
   18630:	ldr	r0, [pc, #1748]	; 18d0c <brlttyUpdate@@Base+0xedc>
   18634:	ldr	r1, [r5, #16]
   18638:	add	r0, pc, r0
   1863c:	bl	1301c <writeBrailleText@@Base>
   18640:	ldr	r3, [pc, #1632]	; 18ca8 <brlttyUpdate@@Base+0xe78>
   18644:	ldr	r3, [r4, r3]
   18648:	str	r3, [fp, #-212]	; 0xffffff2c
   1864c:	ldr	r3, [r3]
   18650:	cmp	r3, #0
   18654:	beq	186d0 <brlttyUpdate@@Base+0x8a0>
   18658:	ldr	r3, [pc, #1672]	; 18ce8 <brlttyUpdate@@Base+0xeb8>
   1865c:	ldr	r0, [r4, r3]
   18660:	bl	4cb24 <api_suspend@@Base>
   18664:	ldr	r3, [pc, #1700]	; 18d10 <brlttyUpdate@@Base+0xee0>
   18668:	mov	r2, #1
   1866c:	add	r3, pc, r3
   18670:	str	r2, [r3, #1092]	; 0x444
   18674:	b	17ef8 <brlttyUpdate@@Base+0xc8>
   18678:	cmp	r3, #0
   1867c:	ldr	r3, [pc, #1572]	; 18ca8 <brlttyUpdate@@Base+0xe78>
   18680:	ldr	r3, [r4, r3]
   18684:	str	r3, [fp, #-212]	; 0xffffff2c
   18688:	beq	17f3c <brlttyUpdate@@Base+0x10c>
   1868c:	ldr	r3, [r3]
   18690:	cmp	r3, #0
   18694:	beq	18c30 <brlttyUpdate@@Base+0xe00>
   18698:	ldr	r3, [pc, #1608]	; 18ce8 <brlttyUpdate@@Base+0xeb8>
   1869c:	ldr	r0, [r4, r3]
   186a0:	bl	4ca60 <api_resume@@Base>
   186a4:	rsbs	r0, r0, #1
   186a8:	movcc	r0, #0
   186ac:	ldr	r2, [pc, #1632]	; 18d14 <brlttyUpdate@@Base+0xee4>
   186b0:	mov	r3, r0
   186b4:	add	r2, pc, r2
   186b8:	str	r0, [r2, #1092]	; 0x444
   186bc:	b	17f34 <brlttyUpdate@@Base+0x104>
   186c0:	ldr	r3, [pc, #1568]	; 18ce8 <brlttyUpdate@@Base+0xeb8>
   186c4:	ldr	r0, [r4, r3]
   186c8:	bl	4cb10 <api_releaseDriver@@Base>
   186cc:	b	18484 <brlttyUpdate@@Base+0x654>
   186d0:	bl	22624 <destructBrailleDriver@@Base>
   186d4:	b	18664 <brlttyUpdate@@Base+0x834>
   186d8:	str	sp, [fp, #-280]	; 0xfffffee8
   186dc:	mov	r1, r6
   186e0:	ldr	r2, [r4, r2]
   186e4:	ldr	r3, [pc, #1516]	; 18cd8 <brlttyUpdate@@Base+0xea8>
   186e8:	str	r2, [fp, #-236]	; 0xffffff14
   186ec:	ldr	r7, [r2]
   186f0:	ldr	r8, [r4, r3]
   186f4:	ldr	r3, [r2, #4]
   186f8:	ldr	ip, [fp, #-236]	; 0xffffff14
   186fc:	ldr	r2, [r8]
   18700:	mul	r7, r7, r3
   18704:	ldr	r0, [ip, #28]
   18708:	mul	r2, r2, r3
   1870c:	lsl	r3, r7, #2
   18710:	add	r3, r3, #10
   18714:	bic	r3, r3, #7
   18718:	str	r2, [fp, #-220]	; 0xffffff24
   1871c:	sub	sp, sp, r3
   18720:	mov	r2, r7
   18724:	add	r9, sp, #48	; 0x30
   18728:	str	r9, [fp, #-256]	; 0xffffff00
   1872c:	bl	f6b0 <memset@plt>
   18730:	ldr	r0, [fp, #-256]	; 0xffffff00
   18734:	mov	r2, r7
   18738:	mov	r1, #32
   1873c:	bl	f95c <wmemset@plt>
   18740:	ldr	r3, [pc, #1612]	; 18d94 <brlttyUpdate@@Base+0xf64>
   18744:	str	r6, [r5]
   18748:	ldr	r3, [r4, r3]
   1874c:	str	r3, [fp, #-228]	; 0xffffff1c
   18750:	ldrb	r3, [r3, #26]
   18754:	cmp	r3, #1
   18758:	beq	18d98 <brlttyUpdate@@Base+0xf68>
   1875c:	ldr	r3, [pc, #1528]	; 18d5c <brlttyUpdate@@Base+0xf2c>
   18760:	ldr	r3, [r4, r3]
   18764:	str	r3, [fp, #-216]	; 0xffffff28
   18768:	ldr	r5, [fp, #-244]	; 0xffffff0c
   1876c:	ldr	r9, [fp, #-216]	; 0xffffff28
   18770:	ldr	r7, [fp, #-220]	; 0xffffff24
   18774:	ldr	r3, [r5]
   18778:	ldrsh	r5, [r9, #2]
   1877c:	ldr	r2, [r8]
   18780:	lsl	r1, r7, #3
   18784:	ldr	r0, [r3, #8]
   18788:	add	r1, r1, #8
   1878c:	ldr	r7, [fp, #-236]	; 0xffffff14
   18790:	rsb	r5, r0, r5
   18794:	str	sp, [fp, #-272]	; 0xfffffef0
   18798:	cmp	r5, r2
   1879c:	movcs	r5, r2
   187a0:	sub	sp, sp, r1
   187a4:	add	ip, sp, #48	; 0x30
   187a8:	ldrsh	r1, [r3, #12]
   187ac:	str	ip, [fp, #-260]	; 0xfffffefc
   187b0:	sxth	r0, r0
   187b4:	ldrsh	r3, [r7, #4]
   187b8:	sxth	r2, r5
   187bc:	str	ip, [sp]
   187c0:	bl	39094 <readScreen@@Base>
   187c4:	ldr	r7, [r8]
   187c8:	cmp	r5, r7
   187cc:	bcs	195fc <brlttyUpdate@@Base+0x17cc>
   187d0:	ldr	ip, [fp, #-236]	; 0xffffff14
   187d4:	ldr	r6, [ip, #4]
   187d8:	sub	r6, r6, #1
   187dc:	cmp	r6, #0
   187e0:	ble	18850 <brlttyUpdate@@Base+0xa20>
   187e4:	ldr	lr, [fp, #-260]	; 0xfffffefc
   187e8:	rsb	r9, r5, r5, lsl #29
   187ec:	lsl	r7, r7, #3
   187f0:	lsl	r3, r5, #3
   187f4:	mul	sl, r6, r5
   187f8:	lsl	ip, r9, #3
   187fc:	mla	r9, r7, r6, lr
   18800:	str	r4, [fp, #-232]	; 0xffffff18
   18804:	mov	r4, r3
   18808:	mov	r3, r8
   1880c:	str	r5, [fp, #-220]	; 0xffffff24
   18810:	mov	r8, r6
   18814:	add	sl, lr, sl, lsl #3
   18818:	mov	r5, ip
   1881c:	mov	r6, r9
   18820:	mov	r9, r3
   18824:	mov	r0, r6
   18828:	mov	r1, sl
   1882c:	mov	r2, r4
   18830:	rsb	r6, r7, r6
   18834:	bl	f7dc <memmove@plt>
   18838:	subs	r8, r8, #1
   1883c:	add	sl, sl, r5
   18840:	bne	18824 <brlttyUpdate@@Base+0x9f4>
   18844:	ldr	r5, [fp, #-220]	; 0xffffff24
   18848:	mov	r8, r9
   1884c:	ldr	r4, [fp, #-232]	; 0xffffff18
   18850:	ldr	r7, [fp, #-236]	; 0xffffff14
   18854:	ldr	r1, [r7, #4]
   18858:	cmp	r1, #0
   1885c:	beq	18898 <brlttyUpdate@@Base+0xa68>
   18860:	ldr	r7, [fp, #-260]	; 0xfffffefc
   18864:	mov	r2, #0
   18868:	ldr	r9, [fp, #-236]	; 0xffffff14
   1886c:	mov	r6, r2
   18870:	ldr	r3, [r8]
   18874:	add	r6, r6, #1
   18878:	rsb	r1, r5, r3
   1887c:	mla	r0, r3, r2, r5
   18880:	add	r0, r7, r0, lsl #3
   18884:	bl	38e74 <clearScreenCharacters@@Base>
   18888:	ldr	r1, [r9, #4]
   1888c:	mov	r2, r6
   18890:	cmp	r6, r1
   18894:	bcc	18870 <brlttyUpdate@@Base+0xa40>
   18898:	ldr	r3, [pc, #1144]	; 18d18 <brlttyUpdate@@Base+0xee8>
   1889c:	add	r3, pc, r3
   188a0:	ldr	r2, [r3, #40]	; 0x28
   188a4:	ldrb	r2, [r2]
   188a8:	cmp	r2, #0
   188ac:	beq	18920 <brlttyUpdate@@Base+0xaf0>
   188b0:	ldr	r7, [r3, #52]	; 0x34
   188b4:	cmp	r7, #0
   188b8:	bne	18920 <brlttyUpdate@@Base+0xaf0>
   188bc:	ldr	r5, [r8]
   188c0:	mul	r3, r5, r1
   188c4:	cmp	r3, #0
   188c8:	beq	18920 <brlttyUpdate@@Base+0xaf0>
   188cc:	ldr	r9, [fp, #-236]	; 0xffffff14
   188d0:	mov	r3, r8
   188d4:	ldr	sl, [fp, #-260]	; 0xfffffefc
   188d8:	mov	r8, r4
   188dc:	mov	r6, #32
   188e0:	mov	r4, r7
   188e4:	ldr	r1, [r9, #4]
   188e8:	mov	r9, r3
   188ec:	mul	r5, r5, r1
   188f0:	str	r1, [fp, #-220]	; 0xffffff24
   188f4:	ldr	r0, [sl, r7]
   188f8:	add	r4, r4, #1
   188fc:	bl	f4ac <iswupper@plt>
   18900:	cmp	r0, #0
   18904:	strne	r6, [sl, r7]
   18908:	cmp	r5, r4
   1890c:	add	r7, r7, #8
   18910:	bhi	188f4 <brlttyUpdate@@Base+0xac4>
   18914:	ldr	r1, [fp, #-220]	; 0xffffff24
   18918:	mov	r4, r8
   1891c:	mov	r8, r9
   18920:	ldr	r5, [fp, #-244]	; 0xffffff0c
   18924:	ldr	r3, [r5]
   18928:	ldrb	r3, [r3, #6]
   1892c:	cmp	r3, #0
   18930:	beq	19454 <brlttyUpdate@@Base+0x1624>
   18934:	cmp	r1, #0
   18938:	beq	189f8 <brlttyUpdate@@Base+0xbc8>
   1893c:	ldr	r2, [pc, #1068]	; 18d70 <brlttyUpdate@@Base+0xf40>
   18940:	mov	r3, #0
   18944:	str	r3, [fp, #-220]	; 0xffffff24
   18948:	ldr	r2, [r4, r2]
   1894c:	str	r4, [fp, #-232]	; 0xffffff18
   18950:	str	r2, [fp, #-264]	; 0xfffffef8
   18954:	ldr	r7, [fp, #-236]	; 0xffffff14
   18958:	ldr	r9, [fp, #-264]	; 0xfffffef8
   1895c:	ldr	r2, [r8]
   18960:	ldr	r0, [r7]
   18964:	ldr	r1, [r9]
   18968:	cmp	r2, #0
   1896c:	mul	r2, r2, r3
   18970:	ldr	r7, [r7, #28]
   18974:	mla	r3, r0, r3, r1
   18978:	ldr	ip, [fp, #-260]	; 0xfffffefc
   1897c:	ldr	r5, [fp, #-256]	; 0xffffff00
   18980:	add	r6, ip, r2, lsl #3
   18984:	add	r7, r7, r3
   18988:	add	r9, r5, r3, lsl #2
   1898c:	beq	189d4 <brlttyUpdate@@Base+0xba4>
   18990:	ldr	r1, [pc, #948]	; 18d4c <brlttyUpdate@@Base+0xf1c>
   18994:	mov	r4, #0
   18998:	ldr	ip, [fp, #-232]	; 0xffffff18
   1899c:	mov	sl, r4
   189a0:	ldr	r5, [ip, r1]
   189a4:	add	r3, r6, r4, lsl #3
   189a8:	ldr	r0, [r5]
   189ac:	add	sl, sl, #1
   189b0:	ldrb	r1, [r3, #4]
   189b4:	bl	2ddf4 <convertAttributesToDots@@Base>
   189b8:	strb	r0, [r7, r4]
   189bc:	orr	r0, r0, #10240	; 0x2800
   189c0:	str	r0, [r9, r4, lsl #2]
   189c4:	mov	r4, sl
   189c8:	ldr	r3, [r8]
   189cc:	cmp	sl, r3
   189d0:	bcc	189a4 <brlttyUpdate@@Base+0xb74>
   189d4:	ldr	r7, [fp, #-236]	; 0xffffff14
   189d8:	ldr	r9, [fp, #-220]	; 0xffffff24
   189dc:	ldr	r3, [r7, #4]
   189e0:	add	r9, r9, #1
   189e4:	str	r9, [fp, #-220]	; 0xffffff24
   189e8:	cmp	r9, r3
   189ec:	mov	r3, r9
   189f0:	bcc	18954 <brlttyUpdate@@Base+0xb24>
   189f4:	ldr	r4, [fp, #-232]	; 0xffffff18
   189f8:	ldr	sp, [fp, #-272]	; 0xfffffef0
   189fc:	ldr	r9, [fp, #-216]	; 0xffffff28
   18a00:	ldrsh	r0, [r9, #4]
   18a04:	ldrsh	r1, [r9, #6]
   18a08:	bl	11b04 <_start@@Base+0x1bb0>
   18a0c:	ldr	ip, [fp, #-236]	; 0xffffff14
   18a10:	cmp	r0, #0
   18a14:	mov	r5, r0
   18a18:	str	r0, [ip, #32]
   18a1c:	blt	18a68 <brlttyUpdate@@Base+0xc38>
   18a20:	ldrb	r3, [r9, #12]
   18a24:	tst	r3, #1
   18a28:	beq	18a68 <brlttyUpdate@@Base+0xc38>
   18a2c:	ldr	r7, [fp, #-228]	; 0xffffff1c
   18a30:	ldrb	r3, [r7, #2]
   18a34:	cmp	r3, #0
   18a38:	beq	18a68 <brlttyUpdate@@Base+0xc38>
   18a3c:	ldr	r9, [fp, #-244]	; 0xffffff0c
   18a40:	ldr	r3, [r9]
   18a44:	ldrb	r3, [r3, #5]
   18a48:	cmp	r3, #0
   18a4c:	bne	18a68 <brlttyUpdate@@Base+0xc38>
   18a50:	ldr	r7, [fp, #-236]	; 0xffffff14
   18a54:	ldr	r6, [r7, #28]
   18a58:	ldrb	r7, [r6, r0]
   18a5c:	bl	130e0 <getCursorDots@@Base>
   18a60:	orr	r0, r0, r7
   18a64:	strb	r0, [r6, r5]
   18a68:	ldr	r5, [fp, #-228]	; 0xffffff1c
   18a6c:	ldrb	r3, [r5, #67]	; 0x43
   18a70:	cmp	r3, #0
   18a74:	beq	18a9c <brlttyUpdate@@Base+0xc6c>
   18a78:	ldr	r3, [pc, #668]	; 18d1c <brlttyUpdate@@Base+0xeec>
   18a7c:	add	r3, pc, r3
   18a80:	ldr	r2, [r3, #60]	; 0x3c
   18a84:	ldrb	r2, [r2]
   18a88:	cmp	r2, #0
   18a8c:	beq	191c8 <brlttyUpdate@@Base+0x1398>
   18a90:	ldr	r3, [r3, #72]	; 0x48
   18a94:	cmp	r3, #0
   18a98:	bne	191c8 <brlttyUpdate@@Base+0x1398>
   18a9c:	ldr	r3, [pc, #636]	; 18d20 <brlttyUpdate@@Base+0xef0>
   18aa0:	ldr	r9, [r4, r3]
   18aa4:	ldr	r3, [r9]
   18aa8:	cmp	r3, #0
   18aac:	bne	18c68 <brlttyUpdate@@Base+0xe38>
   18ab0:	bl	11428 <_start@@Base+0x14d4>
   18ab4:	cmp	r0, #0
   18ab8:	bne	18c40 <brlttyUpdate@@Base+0xe10>
   18abc:	ldr	r3, [pc, #608]	; 18d24 <brlttyUpdate@@Base+0xef4>
   18ac0:	mov	r2, #1
   18ac4:	add	r3, pc, r3
   18ac8:	str	r2, [r3, #1084]	; 0x43c
   18acc:	ldr	sp, [fp, #-280]	; 0xfffffee8
   18ad0:	b	18478 <brlttyUpdate@@Base+0x648>
   18ad4:	bl	107cc <_start@@Base+0x878>
   18ad8:	ldr	r7, [fp, #-244]	; 0xffffff0c
   18adc:	ldr	r5, [r7]
   18ae0:	adds	r8, r0, #0
   18ae4:	movne	r8, #1
   18ae8:	b	1814c <brlttyUpdate@@Base+0x31c>
   18aec:	bl	22a04 <restartBrailleDriver@@Base>
   18af0:	b	18600 <brlttyUpdate@@Base+0x7d0>
   18af4:	ldr	r1, [r2, #1180]	; 0x49c
   18af8:	cmp	r1, #0
   18afc:	str	r1, [fp, #-216]	; 0xffffff28
   18b00:	beq	18c28 <brlttyUpdate@@Base+0xdf8>
   18b04:	ldr	r1, [pc, #540]	; 18d28 <brlttyUpdate@@Base+0xef8>
   18b08:	ldr	ip, [fp, #-232]	; 0xffffff18
   18b0c:	add	r1, pc, r1
   18b10:	ldr	r1, [r1, #8]
   18b14:	cmp	ip, r1
   18b18:	beq	19650 <brlttyUpdate@@Base+0x1820>
   18b1c:	ldr	r3, [pc, #624]	; 18d94 <brlttyUpdate@@Base+0xf64>
   18b20:	ldr	r3, [r4, r3]
   18b24:	ldrb	r3, [r3, #61]	; 0x3d
   18b28:	cmp	r3, #0
   18b2c:	beq	18c28 <brlttyUpdate@@Base+0xdf8>
   18b30:	mov	r3, r5
   18b34:	mov	r1, r7
   18b38:	mov	ip, #0
   18b3c:	cmp	r1, #0
   18b40:	beq	18c28 <brlttyUpdate@@Base+0xdf8>
   18b44:	add	r0, r3, ip
   18b48:	mov	r2, #0
   18b4c:	bl	12014 <_start@@Base+0x20c0>
   18b50:	ldr	r3, [pc, #468]	; 18d2c <brlttyUpdate@@Base+0xefc>
   18b54:	add	r3, pc, r3
   18b58:	ldr	r0, [r3, #1180]	; 0x49c
   18b5c:	b	18564 <brlttyUpdate@@Base+0x734>
   18b60:	mov	sp, sl
   18b64:	ldr	r3, [pc, #452]	; 18d30 <brlttyUpdate@@Base+0xf00>
   18b68:	mov	r2, #1
   18b6c:	add	r3, pc, r3
   18b70:	str	r2, [r3, #1084]	; 0x43c
   18b74:	b	18478 <brlttyUpdate@@Base+0x648>
   18b78:	ldr	r9, [fp, #-256]	; 0xffffff00
   18b7c:	mov	r8, r0
   18b80:	ldr	r0, [fp, #-220]	; 0xffffff24
   18b84:	cmp	r0, lr
   18b88:	beq	19858 <brlttyUpdate@@Base+0x1a28>
   18b8c:	ldr	r1, [fp, #-252]	; 0xffffff04
   18b90:	ldr	r2, [fp, #-260]	; 0xfffffefc
   18b94:	cmp	r1, r2
   18b98:	movne	lr, #0
   18b9c:	bne	18bc0 <brlttyUpdate@@Base+0xd90>
   18ba0:	ldr	r3, [fp, #-216]	; 0xffffff28
   18ba4:	mov	r2, r5
   18ba8:	mov	lr, #0
   18bac:	ldr	r0, [r2, #8]!
   18bb0:	add	lr, lr, #1
   18bb4:	ldr	r1, [r3, #8]!
   18bb8:	cmp	r0, r1
   18bbc:	beq	18bac <brlttyUpdate@@Base+0xd7c>
   18bc0:	ldr	ip, [fp, #-236]	; 0xffffff14
   18bc4:	mvn	sl, #7
   18bc8:	ldr	r1, [fp, #-216]	; 0xffffff28
   18bcc:	mov	r3, r7
   18bd0:	add	r2, r5, ip
   18bd4:	mul	sl, sl, r7
   18bd8:	add	r9, r1, ip
   18bdc:	b	18be4 <brlttyUpdate@@Base+0xdb4>
   18be0:	mov	r3, r1
   18be4:	ldr	r1, [fp, #-236]	; 0xffffff14
   18be8:	add	ip, r2, sl
   18bec:	ldr	r0, [r9, #-8]!
   18bf0:	sub	r2, r2, #8
   18bf4:	add	ip, ip, r1
   18bf8:	sub	r1, r3, #1
   18bfc:	ldr	ip, [ip, #-8]
   18c00:	cmp	ip, r0
   18c04:	beq	18be0 <brlttyUpdate@@Base+0xdb0>
   18c08:	ldr	r2, [pc, #388]	; 18d94 <brlttyUpdate@@Base+0xf64>
   18c0c:	rsb	r1, lr, r3
   18c10:	ldr	r3, [r4, r2]
   18c14:	ldrb	r3, [r3, #65]	; 0x41
   18c18:	cmp	r3, #0
   18c1c:	lslne	ip, lr, #3
   18c20:	movne	r3, r5
   18c24:	bne	18b3c <brlttyUpdate@@Base+0xd0c>
   18c28:	ldr	r0, [fp, #-216]	; 0xffffff28
   18c2c:	b	18564 <brlttyUpdate@@Base+0x734>
   18c30:	bl	21f04 <constructBrailleDriver@@Base>
   18c34:	rsbs	r0, r0, #1
   18c38:	movcc	r0, #0
   18c3c:	b	186ac <brlttyUpdate@@Base+0x87c>
   18c40:	ldr	r3, [pc, #236]	; 18d34 <brlttyUpdate@@Base+0xf04>
   18c44:	ldr	r0, [fp, #-236]	; 0xffffff14
   18c48:	ldr	r1, [fp, #-256]	; 0xffffff00
   18c4c:	ldr	r3, [r4, r3]
   18c50:	ldr	r3, [r3]
   18c54:	ldr	r3, [r3, #48]	; 0x30
   18c58:	blx	r3
   18c5c:	cmp	r0, #0
   18c60:	beq	18abc <brlttyUpdate@@Base+0xc8c>
   18c64:	b	18acc <brlttyUpdate@@Base+0xc9c>
   18c68:	ldr	r7, [fp, #-228]	; 0xffffff1c
   18c6c:	add	r6, r7, #48	; 0x30
   18c70:	mov	r0, r6
   18c74:	bl	26758 <getStatusFieldsLength@@Base>
   18c78:	subs	r5, r0, #0
   18c7c:	bne	19774 <brlttyUpdate@@Base+0x1944>
   18c80:	ldr	r5, [fp, #-236]	; 0xffffff14
   18c84:	ldr	r0, [fp, #-256]	; 0xffffff00
   18c88:	ldr	r1, [r5, #28]
   18c8c:	bl	10130 <_start@@Base+0x1dc>
   18c90:	b	18ab0 <brlttyUpdate@@Base+0xc80>
   18c94:	andeq	sl, r5, r4, lsr ip
   18c98:			; <UNDEFINED> instruction: 0x000003b4
   18c9c:	andeq	fp, r5, r8, asr #3
   18ca0:	ldrdeq	fp, [r5], -r0
   18ca4:	muleq	r0, r0, r4
   18ca8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   18cac:	andeq	r0, r0, r4, ror #9
   18cb0:	strdeq	fp, [r5], -r0
   18cb4:	muleq	r5, ip, r0
   18cb8:	andeq	r0, r0, ip, lsl r4
   18cbc:			; <UNDEFINED> instruction: 0x000003b8
   18cc0:	andeq	fp, r5, ip, asr #2
   18cc4:	andeq	sl, r5, r8, ror #31
   18cc8:			; <UNDEFINED> instruction: 0x0005afb8
   18ccc:			; <UNDEFINED> instruction: 0x000367b4
   18cd0:	andeq	sl, r5, r4, ror #31
   18cd4:	andeq	sl, r5, ip, ror lr
   18cd8:	andeq	r0, r0, r0, asr #7
   18cdc:	andeq	sl, r5, r4, asr #30
   18ce0:	andeq	sl, r5, r4, lsr pc
   18ce4:	andeq	r0, r0, r0, ror #9
   18ce8:	andeq	r0, r0, r8, asr #10
   18cec:	andeq	r6, r3, ip, lsr #13
   18cf0:	andeq	r6, r3, r8, lsr r5
   18cf4:	muleq	r3, r8, r4
   18cf8:	muleq	r5, r8, ip
   18cfc:	strdeq	sl, [r5], -r4
   18d00:	ldrdeq	sl, [r5], -r4
   18d04:	andeq	sl, r5, r4, ror #20
   18d08:	andeq	sl, r5, r4, lsr #23
   18d0c:	andeq	r6, r3, ip, ror r2
   18d10:	ldrdeq	sl, [r5], -r8
   18d14:	muleq	r5, r0, sl
   18d18:	andeq	sl, r5, r0, lsl #15
   18d1c:	andeq	sl, r5, r0, lsr #11
   18d20:	andeq	r0, r0, r8, asr #9
   18d24:	andeq	sl, r5, r0, lsl #13
   18d28:	strdeq	sl, [r5], -r0
   18d2c:	strdeq	sl, [r5], -r0
   18d30:	ldrdeq	sl, [r5], -r8
   18d34:	andeq	r0, r0, ip, ror r4
   18d38:	ldrdeq	r0, [r0], -r4
   18d3c:	andeq	sl, r5, r0, lsr #3
   18d40:	andeq	sl, r5, r4, asr #32
   18d44:	andeq	sl, r5, r0, lsl #2
   18d48:	strheq	sl, [r5], -ip
   18d4c:	andeq	r0, r0, ip, asr #9
   18d50:	andeq	r9, r5, r4, ror lr
   18d54:	strdeq	r5, [r3], -r4
   18d58:	andeq	r5, r3, ip, asr #9
   18d5c:	andeq	r0, r0, ip, lsl #9
   18d60:	andeq	r5, r3, ip, asr #11
   18d64:	andeq	r5, r3, r0, asr #10
   18d68:	andeq	r5, r3, ip, lsr #8
   18d6c:			; <UNDEFINED> instruction: 0x00059bb0
   18d70:	andeq	r0, r0, r0, ror r4
   18d74:	strdeq	r0, [r0], -ip
   18d78:	andeq	r9, r5, ip, lsl #18
   18d7c:	andeq	r0, r0, ip, lsr r4
   18d80:	muleq	r5, ip, r7
   18d84:	andeq	r9, r5, ip, asr r7
   18d88:	andeq	r9, r5, r0, asr r7
   18d8c:	andeq	r9, r5, ip, lsr #14
   18d90:	andeq	r9, r5, r0, lsr #14
   18d94:	andeq	r0, r0, r0, asr #10
   18d98:	ldr	r3, [pc, #-104]	; 18d38 <brlttyUpdate@@Base+0xf08>
   18d9c:	ldr	r3, [r4, r3]
   18da0:	str	r3, [fp, #-252]	; 0xffffff04
   18da4:	ldr	r3, [r3]
   18da8:	cmp	r3, #0
   18dac:	beq	1875c <brlttyUpdate@@Base+0x92c>
   18db0:	ldr	r3, [pc, #-92]	; 18d5c <brlttyUpdate@@Base+0xf2c>
   18db4:	add	ip, r5, #8
   18db8:	ldr	r9, [fp, #-220]	; 0xffffff24
   18dbc:	sub	r7, fp, #204	; 0xcc
   18dc0:	str	r5, [fp, #-260]	; 0xfffffefc
   18dc4:	sub	r5, fp, #184	; 0xb8
   18dc8:	add	r2, r9, #7
   18dcc:	str	ip, [fp, #-264]	; 0xfffffef8
   18dd0:	bic	r2, r2, #7
   18dd4:	str	r5, [fp, #-272]	; 0xfffffef0
   18dd8:	str	r2, [fp, #-276]	; 0xfffffeec
   18ddc:	ldr	r3, [r4, r3]
   18de0:	str	r8, [fp, #-288]	; 0xfffffee0
   18de4:	ldr	r8, [fp, #-244]	; 0xffffff0c
   18de8:	str	r3, [fp, #-216]	; 0xffffff28
   18dec:	str	r7, [fp, #-268]	; 0xfffffef4
   18df0:	str	r4, [fp, #-284]	; 0xfffffee4
   18df4:	ldr	r1, [r8]
   18df8:	mov	r3, #1
   18dfc:	ldr	r9, [fp, #-216]	; 0xffffff28
   18e00:	ldr	ip, [fp, #-220]	; 0xffffff24
   18e04:	ldr	r0, [r1, #8]
   18e08:	ldrsh	r2, [r9, #2]
   18e0c:	str	ip, [fp, #-184]	; 0xffffff48
   18e10:	rsb	r2, r0, r2
   18e14:	ldr	r5, [fp, #-276]	; 0xfffffeec
   18e18:	str	sp, [fp, #-240]	; 0xffffff10
   18e1c:	sxth	r0, r0
   18e20:	lsl	ip, r2, #3
   18e24:	lsl	lr, r2, #2
   18e28:	add	ip, ip, #8
   18e2c:	add	lr, lr, #10
   18e30:	sub	sp, sp, ip
   18e34:	bic	lr, lr, #7
   18e38:	add	r9, sp, #48	; 0x30
   18e3c:	sub	sp, sp, lr
   18e40:	add	r4, sp, #48	; 0x30
   18e44:	sub	sp, sp, r5
   18e48:	str	r2, [fp, #-204]	; 0xffffff34
   18e4c:	sxth	r2, r2
   18e50:	ldrsh	r1, [r1, #12]
   18e54:	add	r5, sp, #48	; 0x30
   18e58:	str	r9, [sp]
   18e5c:	bl	39094 <readScreen@@Base>
   18e60:	ldr	r0, [fp, #-204]	; 0xffffff34
   18e64:	cmp	r0, #0
   18e68:	subgt	r2, r4, #4
   18e6c:	movgt	r3, #0
   18e70:	ble	18e88 <brlttyUpdate@@Base+0x1058>
   18e74:	ldr	r1, [r9, r3, lsl #3]
   18e78:	add	r3, r3, #1
   18e7c:	cmp	r3, r0
   18e80:	str	r1, [r2, #4]!
   18e84:	bne	18e74 <brlttyUpdate@@Base+0x1044>
   18e88:	bl	1030c <_start@@Base+0x3b8>
   18e8c:	ldr	r7, [fp, #-252]	; 0xffffff04
   18e90:	sub	ip, fp, #184	; 0xb8
   18e94:	mov	r3, r5
   18e98:	mov	r1, r4
   18e9c:	sub	r2, fp, #204	; 0xcc
   18ea0:	ldr	lr, [r7]
   18ea4:	str	ip, [sp]
   18ea8:	ldr	r7, [fp, #-264]	; 0xfffffef8
   18eac:	str	r7, [sp, #4]
   18eb0:	str	r0, [sp, #8]
   18eb4:	mov	r0, lr
   18eb8:	bl	304a4 <contractText@@Base>
   18ebc:	ldr	ip, [fp, #-260]	; 0xfffffefc
   18ec0:	ldr	lr, [fp, #-204]	; 0xffffff34
   18ec4:	ldr	r3, [ip, #1044]	; 0x414
   18ec8:	cmp	r3, #0
   18ecc:	beq	19800 <brlttyUpdate@@Base+0x19d0>
   18ed0:	ldr	r0, [fp, #-184]	; 0xffffff48
   18ed4:	ldr	r7, [fp, #-220]	; 0xffffff24
   18ed8:	cmp	r0, r7
   18edc:	beq	19150 <brlttyUpdate@@Base+0x1320>
   18ee0:	mov	r1, lr
   18ee4:	ldr	r2, [r8]
   18ee8:	ldr	r7, [fp, #-216]	; 0xffffff28
   18eec:	ldr	r6, [r2, #8]
   18ef0:	ldrsh	r4, [r7, #4]
   18ef4:	add	r1, r6, r1
   18ef8:	str	r2, [fp, #-232]	; 0xffffff18
   18efc:	cmp	r4, r1
   18f00:	blt	18f78 <brlttyUpdate@@Base+0x1148>
   18f04:	ldrsh	r5, [r7, #2]
   18f08:	rsb	r5, r6, r5
   18f0c:	cmp	r5, #0
   18f10:	ble	19828 <brlttyUpdate@@Base+0x19f8>
   18f14:	mov	r7, #0
   18f18:	mov	sl, r7
   18f1c:	ldr	r0, [r9, sl, lsl #3]
   18f20:	bl	f44c <iswspace@plt>
   18f24:	adds	r0, r0, #0
   18f28:	movne	r0, #1
   18f2c:	cmp	r0, r7
   18f30:	beq	18f40 <brlttyUpdate@@Base+0x1110>
   18f34:	cmp	r7, #0
   18f38:	bne	18f4c <brlttyUpdate@@Base+0x111c>
   18f3c:	mov	r7, #1
   18f40:	add	sl, sl, #1
   18f44:	cmp	sl, r5
   18f48:	bne	18f1c <brlttyUpdate@@Base+0x10ec>
   18f4c:	add	r3, sl, r6
   18f50:	cmp	r4, r3
   18f54:	addlt	r4, r4, r6
   18f58:	ldrlt	r9, [fp, #-232]	; 0xffffff18
   18f5c:	ldrge	ip, [fp, #-232]	; 0xffffff18
   18f60:	addlt	r4, r4, r4, lsr #31
   18f64:	asrlt	r3, r4, #1
   18f68:	strlt	r3, [r9, #8]
   18f6c:	strge	r3, [ip, #8]
   18f70:	ldr	sp, [fp, #-240]	; 0xffffff10
   18f74:	b	18df4 <brlttyUpdate@@Base+0xfc4>
   18f78:	ldr	r4, [fp, #-284]	; 0xfffffee4
   18f7c:	mov	ip, r6
   18f80:	ldr	r8, [fp, #-288]	; 0xfffffee0
   18f84:	mov	sl, r5
   18f88:	ldr	r7, [fp, #-232]	; 0xffffff18
   18f8c:	mov	r6, r0
   18f90:	str	lr, [fp, #-252]	; 0xffffff04
   18f94:	ldr	r3, [pc, #-608]	; 18d3c <brlttyUpdate@@Base+0xf0c>
   18f98:	mov	r1, #0
   18f9c:	ldrb	r7, [r7, #6]
   18fa0:	mov	r2, #1
   18fa4:	add	r3, pc, r3
   18fa8:	cmp	r7, r1
   18fac:	str	ip, [r3, #1188]	; 0x4a4
   18fb0:	ldr	ip, [fp, #-252]	; 0xffffff04
   18fb4:	str	r1, [r3, #1044]	; 0x414
   18fb8:	str	r2, [r3]
   18fbc:	str	ip, [r3, #4]
   18fc0:	bne	19058 <brlttyUpdate@@Base+0x1228>
   18fc4:	ldr	r5, [fp, #-228]	; 0xffffff1c
   18fc8:	ldrb	r3, [r5, #4]
   18fcc:	cmp	r3, r1
   18fd0:	beq	18ff8 <brlttyUpdate@@Base+0x11c8>
   18fd4:	ldr	r3, [pc, #-668]	; 18d40 <brlttyUpdate@@Base+0xf10>
   18fd8:	add	r3, pc, r3
   18fdc:	ldr	r2, [r3, #20]
   18fe0:	ldrb	r2, [r2]
   18fe4:	cmp	r2, r1
   18fe8:	beq	19058 <brlttyUpdate@@Base+0x1228>
   18fec:	ldr	r3, [r3, #32]
   18ff0:	cmp	r3, r1
   18ff4:	bne	19058 <brlttyUpdate@@Base+0x1228>
   18ff8:	mov	ip, r0
   18ffc:	ldr	r3, [pc, #-660]	; 18d70 <brlttyUpdate@@Base+0xf40>
   19000:	ldr	r5, [fp, #-236]	; 0xffffff14
   19004:	ldr	r0, [fp, #-256]	; 0xffffff00
   19008:	ldr	r3, [r4, r3]
   1900c:	ldr	lr, [r5]
   19010:	ldr	r1, [r5, #28]
   19014:	str	r3, [fp, #-264]	; 0xfffffef8
   19018:	ldr	r7, [fp, #-264]	; 0xfffffef8
   1901c:	ldr	r3, [r8]
   19020:	ldr	r2, [r7]
   19024:	str	lr, [sp]
   19028:	ldr	lr, [r5, #4]
   1902c:	str	sl, [sp, #8]
   19030:	str	ip, [sp, #12]
   19034:	str	lr, [sp, #4]
   19038:	bl	3da14 <fillDotsRegion@@Base>
   1903c:	ldr	r3, [pc, #-768]	; 18d44 <brlttyUpdate@@Base+0xf14>
   19040:	ldr	sp, [fp, #-240]	; 0xffffff10
   19044:	add	r3, pc, r3
   19048:	ldr	r3, [r3]
   1904c:	cmp	r3, #0
   19050:	bne	189fc <brlttyUpdate@@Base+0xbcc>
   19054:	b	18768 <brlttyUpdate@@Base+0x938>
   19058:	ldr	ip, [fp, #-252]	; 0xffffff04
   1905c:	add	r3, r0, #7
   19060:	bic	r3, r3, #7
   19064:	str	sp, [fp, #-232]	; 0xffffff18
   19068:	cmp	ip, #0
   1906c:	sub	sp, sp, r3
   19070:	add	r5, sp, #48	; 0x30
   19074:	ble	19830 <brlttyUpdate@@Base+0x1a00>
   19078:	ldr	lr, [pc, #-824]	; 18d48 <brlttyUpdate@@Base+0xf18>
   1907c:	mov	r0, #0
   19080:	lsl	ip, ip, #2
   19084:	mov	r2, r0
   19088:	add	lr, pc, lr
   1908c:	mov	r3, r0
   19090:	add	r1, lr, #8
   19094:	ldr	r1, [r0, r1]
   19098:	cmn	r1, #1
   1909c:	beq	190bc <brlttyUpdate@@Base+0x128c>
   190a0:	cmp	r1, r3
   190a4:	ble	190b8 <brlttyUpdate@@Base+0x1288>
   190a8:	strb	r2, [r5, r3]
   190ac:	add	r3, r3, #1
   190b0:	cmp	r3, r1
   190b4:	bne	190a8 <brlttyUpdate@@Base+0x1278>
   190b8:	mov	r2, #0
   190bc:	add	r1, r9, r0, lsl #1
   190c0:	add	r0, r0, #4
   190c4:	cmp	r0, ip
   190c8:	ldrb	r1, [r1, #4]
   190cc:	orr	r2, r2, r1
   190d0:	bne	19090 <brlttyUpdate@@Base+0x1260>
   190d4:	cmp	r6, r3
   190d8:	ble	190ec <brlttyUpdate@@Base+0x12bc>
   190dc:	strb	r2, [r5, r3]
   190e0:	add	r3, r3, #1
   190e4:	cmp	r3, r6
   190e8:	bne	190dc <brlttyUpdate@@Base+0x12ac>
   190ec:	cmp	r7, #0
   190f0:	beq	193e0 <brlttyUpdate@@Base+0x15b0>
   190f4:	cmp	r6, #0
   190f8:	ble	19128 <brlttyUpdate@@Base+0x12f8>
   190fc:	ldr	r3, [pc, #-952]	; 18d4c <brlttyUpdate@@Base+0xf1c>
   19100:	mov	r7, #0
   19104:	ldr	r6, [r4, r3]
   19108:	ldrb	r1, [r5, r7]
   1910c:	ldr	r0, [r6]
   19110:	bl	2ddf4 <convertAttributesToDots@@Base>
   19114:	ldr	r3, [fp, #-184]	; 0xffffff48
   19118:	strb	r0, [sl, r7]
   1911c:	add	r7, r7, #1
   19120:	cmp	r3, r7
   19124:	bgt	19108 <brlttyUpdate@@Base+0x12d8>
   19128:	ldr	sp, [fp, #-232]	; 0xffffff18
   1912c:	ldr	ip, [fp, #-184]	; 0xffffff48
   19130:	b	18ffc <brlttyUpdate@@Base+0x11cc>
   19134:	ldr	r5, [fp, #-228]	; 0xffffff1c
   19138:	ldrb	r3, [r5, #6]
   1913c:	cmp	r3, #0
   19140:	moveq	r3, #32
   19144:	movne	r3, #98	; 0x62
   19148:	str	r3, [fp, #-232]	; 0xffffff18
   1914c:	b	18380 <brlttyUpdate@@Base+0x550>
   19150:	cmp	lr, #0
   19154:	beq	18ee0 <brlttyUpdate@@Base+0x10b0>
   19158:	ldr	ip, [fp, #-264]	; 0xfffffef8
   1915c:	mov	r3, lr
   19160:	mov	r1, lr
   19164:	add	r4, ip, lr, lsl #2
   19168:	ldr	r2, [r4, #-4]!
   1916c:	sub	r3, r3, #1
   19170:	cmn	r2, #1
   19174:	beq	19184 <brlttyUpdate@@Base+0x1354>
   19178:	cmp	r0, r2
   1917c:	bne	18ee4 <brlttyUpdate@@Base+0x10b4>
   19180:	mov	r1, r3
   19184:	cmp	r3, #0
   19188:	bne	19168 <brlttyUpdate@@Base+0x1338>
   1918c:	b	18ee4 <brlttyUpdate@@Base+0x10b4>
   19190:	ldrsh	r2, [r2, #4]
   19194:	ldr	r3, [r3, #24]
   19198:	cmp	r2, r3
   1919c:	beq	18080 <brlttyUpdate@@Base+0x250>
   191a0:	ldr	r3, [pc, #-1112]	; 18d50 <brlttyUpdate@@Base+0xf20>
   191a4:	mov	r1, #1
   191a8:	add	r3, pc, r3
   191ac:	ldr	r2, [r3, #4]
   191b0:	str	r1, [r3, #12]
   191b4:	ldrb	r2, [r2]
   191b8:	add	r2, r2, r2, lsl #2
   191bc:	lsl	r2, r2, r1
   191c0:	str	r2, [r3, #16]
   191c4:	b	18080 <brlttyUpdate@@Base+0x250>
   191c8:	ldr	r7, [fp, #-244]	; 0xffffff0c
   191cc:	ldr	r3, [r7]
   191d0:	ldr	r0, [r3, #40]	; 0x28
   191d4:	ldr	r1, [r3, #44]	; 0x2c
   191d8:	bl	11b04 <_start@@Base+0x1bb0>
   191dc:	cmp	r0, #0
   191e0:	blt	18a9c <brlttyUpdate@@Base+0xc6c>
   191e4:	ldr	r9, [fp, #-236]	; 0xffffff14
   191e8:	ldr	r3, [r9, #32]
   191ec:	cmp	r0, r3
   191f0:	beq	18a9c <brlttyUpdate@@Base+0xc6c>
   191f4:	ldr	r5, [fp, #-228]	; 0xffffff1c
   191f8:	ldr	ip, [pc, #-1196]	; 18d54 <brlttyUpdate@@Base+0xf24>
   191fc:	ldr	r3, [r9, #28]
   19200:	ldrb	r2, [r5, #68]	; 0x44
   19204:	add	ip, pc, ip
   19208:	ldrb	r1, [r3, r0]
   1920c:	ldrb	r2, [ip, r2]
   19210:	orr	r2, r1, r2
   19214:	strb	r2, [r3, r0]
   19218:	b	18a9c <brlttyUpdate@@Base+0xc6c>
   1921c:	lsl	r2, r8, #2
   19220:	ldr	r0, [pc, #-1232]	; 18d58 <brlttyUpdate@@Base+0xf28>
   19224:	sub	r5, fp, #200	; 0xc8
   19228:	add	r2, r2, #10
   1922c:	add	r0, pc, r0
   19230:	bic	r2, r2, #7
   19234:	str	sp, [fp, #-236]	; 0xffffff14
   19238:	add	r0, r0, #120	; 0x78
   1923c:	sub	sp, sp, r2
   19240:	mov	r1, r5
   19244:	str	r5, [fp, #-216]	; 0xffffff28
   19248:	add	r9, sp, #48	; 0x30
   1924c:	str	r3, [fp, #-200]	; 0xffffff38
   19250:	strb	r3, [fp, #-196]	; 0xffffff3c
   19254:	bl	2679c <renderStatusFields@@Base>
   19258:	sub	r5, fp, #192	; 0xc0
   1925c:	mov	r1, #120	; 0x78
   19260:	mov	r2, #5
   19264:	mov	r0, r5
   19268:	bl	f6b0 <memset@plt>
   1926c:	ldr	r1, [pc, #-1248]	; 18d94 <brlttyUpdate@@Base+0xf64>
   19270:	ldr	ip, [fp, #-244]	; 0xffffff0c
   19274:	ldr	r2, [pc, #-1312]	; 18d5c <brlttyUpdate@@Base+0xf2c>
   19278:	ldr	r1, [r4, r1]
   1927c:	ldr	r3, [ip]
   19280:	str	r1, [fp, #-228]	; 0xffffff1c
   19284:	ldrb	r0, [r3, #4]
   19288:	ldr	r2, [r4, r2]
   1928c:	cmp	r0, #0
   19290:	ldrb	r1, [r1, #2]
   19294:	ldr	r2, [r2, #8]
   19298:	moveq	r0, #32
   1929c:	movne	r0, #116	; 0x74
   192a0:	cmp	r1, #0
   192a4:	str	r0, [fp, #-232]	; 0xffffff18
   192a8:	str	r2, [fp, #-220]	; 0xffffff24
   192ac:	beq	19608 <brlttyUpdate@@Base+0x17d8>
   192b0:	ldr	lr, [fp, #-228]	; 0xffffff1c
   192b4:	ldrb	r2, [lr, #6]
   192b8:	cmp	r2, #0
   192bc:	moveq	r2, #118	; 0x76
   192c0:	movne	r2, #66	; 0x42
   192c4:	str	r2, [fp, #-244]	; 0xffffff0c
   192c8:	ldrb	r3, [r3, #6]
   192cc:	cmp	r3, #0
   192d0:	moveq	r3, #116	; 0x74
   192d4:	movne	r3, #97	; 0x61
   192d8:	str	r3, [fp, #-240]	; 0xffffff10
   192dc:	bl	395c4 <isFrozenScreen@@Base>
   192e0:	ldr	r1, [fp, #-228]	; 0xffffff1c
   192e4:	cmp	r0, #0
   192e8:	ldr	ip, [fp, #-228]	; 0xffffff1c
   192ec:	moveq	r0, #32
   192f0:	movne	r0, #102	; 0x66
   192f4:	ldrb	r2, [r1, #26]
   192f8:	mov	r1, r6
   192fc:	ldrb	r3, [ip, #8]
   19300:	mov	ip, #5
   19304:	cmp	r2, #0
   19308:	str	r0, [sp, #28]
   1930c:	str	r5, [sp, #8]
   19310:	mov	r0, r7
   19314:	moveq	r2, #56	; 0x38
   19318:	movne	r2, #54	; 0x36
   1931c:	cmp	r3, #0
   19320:	str	r2, [sp, #32]
   19324:	ldr	lr, [pc, #-1484]	; 18d60 <brlttyUpdate@@Base+0xf30>
   19328:	mov	r2, #1
   1932c:	moveq	r3, #32
   19330:	movne	r3, #66	; 0x42
   19334:	str	r3, [sp, #36]	; 0x24
   19338:	add	lr, pc, lr
   1933c:	ldr	r5, [fp, #-220]	; 0xffffff24
   19340:	mvn	r3, #0
   19344:	str	r5, [sp, #12]
   19348:	ldr	r5, [fp, #-232]	; 0xffffff18
   1934c:	str	r5, [sp, #16]
   19350:	ldr	r5, [fp, #-244]	; 0xffffff0c
   19354:	str	r5, [sp, #20]
   19358:	ldr	r5, [fp, #-240]	; 0xffffff10
   1935c:	str	lr, [sp]
   19360:	str	ip, [sp, #4]
   19364:	str	r5, [sp, #24]
   19368:	bl	fb60 <__snprintf_chk@plt>
   1936c:	cmp	r0, r8
   19370:	movcc	r8, r0
   19374:	cmp	r8, #0
   19378:	movne	r6, #0
   1937c:	movne	r5, r6
   19380:	beq	193b0 <brlttyUpdate@@Base+0x1580>
   19384:	cmp	r5, #4
   19388:	bls	19840 <brlttyUpdate@@Base+0x1a10>
   1938c:	ldrb	r0, [r7, r5]
   19390:	bl	285c8 <convertCharToWchar@@Base>
   19394:	cmn	r0, #1
   19398:	moveq	r0, #63	; 0x3f
   1939c:	str	r0, [r9, r6]
   193a0:	add	r5, r5, #1
   193a4:	add	r6, r6, #4
   193a8:	cmp	r5, r8
   193ac:	bne	19384 <brlttyUpdate@@Base+0x1554>
   193b0:	ldr	r0, [pc, #-1620]	; 18d64 <brlttyUpdate@@Base+0xf34>
   193b4:	mov	r1, r9
   193b8:	mov	r2, r8
   193bc:	add	r0, pc, r0
   193c0:	bl	12e9c <writeBrailleCharacters@@Base>
   193c4:	ldr	sp, [fp, #-236]	; 0xffffff14
   193c8:	b	1846c <brlttyUpdate@@Base+0x63c>
   193cc:	bl	1c740 <logMallocError@@Base>
   193d0:	b	1858c <brlttyUpdate@@Base+0x75c>
   193d4:	mov	r5, #0
   193d8:	str	r5, [fp, #-236]	; 0xffffff14
   193dc:	b	18334 <brlttyUpdate@@Base+0x504>
   193e0:	cmp	r6, #0
   193e4:	bgt	19418 <brlttyUpdate@@Base+0x15e8>
   193e8:	b	19128 <brlttyUpdate@@Base+0x12f8>
   193ec:	cmp	r3, #48	; 0x30
   193f0:	beq	1940c <brlttyUpdate@@Base+0x15dc>
   193f4:	cmp	r3, #112	; 0x70
   193f8:	moveq	r2, #192	; 0xc0
   193fc:	bne	19434 <brlttyUpdate@@Base+0x1604>
   19400:	ldrb	r3, [sl, r7]
   19404:	orr	r3, r2, r3
   19408:	strb	r3, [sl, r7]
   1940c:	add	r7, r7, #1
   19410:	cmp	r7, r6
   19414:	beq	19128 <brlttyUpdate@@Base+0x12f8>
   19418:	ldrb	r3, [r5, r7]
   1941c:	cmp	r3, #23
   19420:	beq	1940c <brlttyUpdate@@Base+0x15dc>
   19424:	bhi	193ec <brlttyUpdate@@Base+0x15bc>
   19428:	sub	r3, r3, #7
   1942c:	cmp	r3, #1
   19430:	bls	1940c <brlttyUpdate@@Base+0x15dc>
   19434:	mov	r2, #128	; 0x80
   19438:	b	19400 <brlttyUpdate@@Base+0x15d0>
   1943c:	ldr	r2, [pc, #-1756]	; 18d68 <brlttyUpdate@@Base+0xf38>
   19440:	mov	r0, r9
   19444:	mov	r3, r5
   19448:	add	r2, pc, r2
   1944c:	bl	f734 <snprintf@plt>
   19450:	b	1845c <brlttyUpdate@@Base+0x62c>
   19454:	ldr	r5, [fp, #-228]	; 0xffffff1c
   19458:	ldrb	sl, [r5, #4]
   1945c:	cmp	sl, #0
   19460:	streq	sl, [fp, #-240]	; 0xffffff10
   19464:	beq	19498 <brlttyUpdate@@Base+0x1668>
   19468:	ldr	r3, [pc, #-1796]	; 18d6c <brlttyUpdate@@Base+0xf3c>
   1946c:	add	r3, pc, r3
   19470:	ldr	r2, [r3, #20]
   19474:	ldrb	r2, [r2]
   19478:	cmp	r2, #0
   1947c:	moveq	r7, #1
   19480:	streq	r7, [fp, #-240]	; 0xffffff10
   19484:	beq	19498 <brlttyUpdate@@Base+0x1668>
   19488:	ldr	sl, [r3, #32]
   1948c:	adds	sl, sl, #0
   19490:	movne	sl, #1
   19494:	str	sl, [fp, #-240]	; 0xffffff10
   19498:	cmp	r1, #0
   1949c:	beq	189f8 <brlttyUpdate@@Base+0xbc8>
   194a0:	ldr	r3, [pc, #-1848]	; 18d70 <brlttyUpdate@@Base+0xf40>
   194a4:	mov	r2, #0
   194a8:	str	r2, [fp, #-252]	; 0xffffff04
   194ac:	ldr	r3, [r4, r3]
   194b0:	str	r4, [fp, #-268]	; 0xfffffef4
   194b4:	str	r3, [fp, #-264]	; 0xfffffef8
   194b8:	ldr	r9, [fp, #-236]	; 0xffffff14
   194bc:	ldr	ip, [fp, #-264]	; 0xfffffef8
   194c0:	ldr	r6, [r8]
   194c4:	ldr	sl, [r9]
   194c8:	ldr	r1, [ip]
   194cc:	cmp	r6, #0
   194d0:	mul	r6, r6, r2
   194d4:	ldr	r3, [r9, #28]
   194d8:	mla	sl, sl, r2, r1
   194dc:	ldr	r5, [fp, #-260]	; 0xfffffefc
   194e0:	ldr	r7, [fp, #-256]	; 0xffffff00
   194e4:	add	r9, r3, sl
   194e8:	add	r6, r5, r6, lsl #3
   194ec:	add	sl, r7, sl, lsl #2
   194f0:	str	sl, [fp, #-220]	; 0xffffff24
   194f4:	beq	195b8 <brlttyUpdate@@Base+0x1788>
   194f8:	ldr	r3, [pc, #-1932]	; 18d74 <brlttyUpdate@@Base+0xf44>
   194fc:	mov	r4, #0
   19500:	ldr	r2, [fp, #-268]	; 0xfffffef4
   19504:	mov	r5, r4
   19508:	ldr	r3, [r2, r3]
   1950c:	str	r3, [fp, #-232]	; 0xffffff18
   19510:	b	19554 <brlttyUpdate@@Base+0x1724>
   19514:	cmp	r1, #48	; 0x30
   19518:	beq	19534 <brlttyUpdate@@Base+0x1704>
   1951c:	cmp	r1, #112	; 0x70
   19520:	moveq	r0, #192	; 0xc0
   19524:	bne	195b0 <brlttyUpdate@@Base+0x1780>
   19528:	ldrb	r1, [lr]
   1952c:	orr	r1, r0, r1
   19530:	strb	r1, [lr]
   19534:	ldr	r3, [r6, sl]
   19538:	add	r5, r5, #1
   1953c:	ldr	r7, [fp, #-220]	; 0xffffff24
   19540:	str	r3, [r7, r4, lsl #2]
   19544:	mov	r4, r5
   19548:	ldr	r3, [r8]
   1954c:	cmp	r5, r3
   19550:	bcs	195b8 <brlttyUpdate@@Base+0x1788>
   19554:	ldr	r3, [fp, #-232]	; 0xffffff18
   19558:	lsl	sl, r4, #3
   1955c:	ldr	r1, [r6, r4, lsl #3]
   19560:	add	r7, r6, sl
   19564:	ldr	r0, [r3]
   19568:	bl	2d7f8 <convertCharacterToDots@@Base>
   1956c:	ldr	ip, [fp, #-228]	; 0xffffff1c
   19570:	ldr	r2, [fp, #-240]	; 0xffffff10
   19574:	add	lr, r9, r4
   19578:	strb	r0, [r9, r4]
   1957c:	ldrb	r1, [ip, #26]
   19580:	cmp	r1, #0
   19584:	andne	r0, r0, #63	; 0x3f
   19588:	strbne	r0, [r9, r4]
   1958c:	cmp	r2, #0
   19590:	beq	19534 <brlttyUpdate@@Base+0x1704>
   19594:	ldrb	r1, [r7, #4]
   19598:	cmp	r1, #23
   1959c:	beq	19534 <brlttyUpdate@@Base+0x1704>
   195a0:	bhi	19514 <brlttyUpdate@@Base+0x16e4>
   195a4:	sub	r1, r1, #7
   195a8:	cmp	r1, #1
   195ac:	bls	19534 <brlttyUpdate@@Base+0x1704>
   195b0:	mov	r0, #128	; 0x80
   195b4:	b	19528 <brlttyUpdate@@Base+0x16f8>
   195b8:	ldr	r9, [fp, #-236]	; 0xffffff14
   195bc:	ldr	ip, [fp, #-252]	; 0xffffff04
   195c0:	ldr	r3, [r9, #4]
   195c4:	add	ip, ip, #1
   195c8:	str	ip, [fp, #-252]	; 0xffffff04
   195cc:	cmp	ip, r3
   195d0:	mov	r2, ip
   195d4:	bcc	194b8 <brlttyUpdate@@Base+0x1688>
   195d8:	ldr	r4, [fp, #-268]	; 0xfffffef4
   195dc:	b	189f8 <brlttyUpdate@@Base+0xbc8>
   195e0:	mov	ip, #0
   195e4:	str	ip, [fp, #-244]	; 0xffffff0c
   195e8:	b	1830c <brlttyUpdate@@Base+0x4dc>
   195ec:	mov	r8, r3
   195f0:	ldr	r3, [r4, r0]
   195f4:	str	r3, [fp, #-216]	; 0xffffff28
   195f8:	b	182c0 <brlttyUpdate@@Base+0x490>
   195fc:	ldr	r9, [fp, #-236]	; 0xffffff14
   19600:	ldr	r1, [r9, #4]
   19604:	b	18898 <brlttyUpdate@@Base+0xa68>
   19608:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1960c:	ldrb	r2, [r0, #6]
   19610:	cmp	r2, #0
   19614:	moveq	r2, #32
   19618:	movne	r2, #98	; 0x62
   1961c:	str	r2, [fp, #-244]	; 0xffffff0c
   19620:	b	192c8 <brlttyUpdate@@Base+0x1498>
   19624:	ldr	r3, [r5]
   19628:	ldr	r0, [fp, #-224]	; 0xffffff20
   1962c:	ldr	r3, [r3, #52]	; 0x34
   19630:	blx	r3
   19634:	ldr	r2, [r6, #4]
   19638:	cmp	r0, r2
   1963c:	bne	197e4 <brlttyUpdate@@Base+0x19b4>
   19640:	ldr	r9, [fp, #-244]	; 0xffffff0c
   19644:	mov	r8, #0
   19648:	ldr	r5, [r9]
   1964c:	b	1814c <brlttyUpdate@@Base+0x31c>
   19650:	ldr	lr, [fp, #-244]	; 0xffffff0c
   19654:	ldr	r1, [r2, #1080]	; 0x438
   19658:	ldr	r0, [lr]
   1965c:	ldr	lr, [r0, #12]
   19660:	cmp	lr, r1
   19664:	bne	18b1c <brlttyUpdate@@Base+0xcec>
   19668:	ldr	r2, [r2, #1184]	; 0x4a0
   1966c:	cmp	r7, r2
   19670:	bne	18b1c <brlttyUpdate@@Base+0xcec>
   19674:	cmp	r6, r7
   19678:	movge	ip, #0
   1967c:	movlt	ip, #1
   19680:	cmp	r6, #0
   19684:	movlt	ip, #0
   19688:	cmp	r7, #0
   1968c:	ble	196e0 <brlttyUpdate@@Base+0x18b0>
   19690:	ldr	r2, [fp, #-216]	; 0xffffff28
   19694:	ldr	r1, [r5]
   19698:	ldr	r2, [r2]
   1969c:	str	r1, [fp, #-252]	; 0xffffff04
   196a0:	cmp	r1, r2
   196a4:	str	r2, [fp, #-260]	; 0xfffffefc
   196a8:	bne	18b80 <brlttyUpdate@@Base+0xd50>
   196ac:	mov	r1, r5
   196b0:	ldr	r2, [fp, #-216]	; 0xffffff28
   196b4:	mov	r0, r8
   196b8:	str	r9, [fp, #-256]	; 0xffffff00
   196bc:	b	196d0 <brlttyUpdate@@Base+0x18a0>
   196c0:	ldr	r8, [r1, #8]!
   196c4:	ldr	r9, [r2, #8]!
   196c8:	cmp	r8, r9
   196cc:	bne	18b78 <brlttyUpdate@@Base+0xd48>
   196d0:	add	r3, r3, #1
   196d4:	cmp	r7, r3
   196d8:	bgt	196c0 <brlttyUpdate@@Base+0x1890>
   196dc:	mov	r8, r0
   196e0:	ldr	r9, [fp, #-220]	; 0xffffff24
   196e4:	cmp	r9, lr
   196e8:	bne	18c28 <brlttyUpdate@@Base+0xdf8>
   196ec:	ldr	r2, [pc, #-2428]	; 18d78 <brlttyUpdate@@Base+0xf48>
   196f0:	add	r2, pc, r2
   196f4:	ldr	r3, [r2, #16]
   196f8:	cmp	r6, r3
   196fc:	beq	19ccc <brlttyUpdate@@Base+0x1e9c>
   19700:	cmp	ip, #0
   19704:	beq	18c28 <brlttyUpdate@@Base+0xdf8>
   19708:	ldr	r2, [pc, #-2428]	; 18d94 <brlttyUpdate@@Base+0xf64>
   1970c:	ldr	r2, [r4, r2]
   19710:	ldrb	r1, [r2, #62]	; 0x3e
   19714:	ldrb	r2, [r2, #66]	; 0x42
   19718:	adds	r1, r1, #0
   1971c:	movne	r1, #1
   19720:	cmp	r2, #0
   19724:	beq	19cc4 <brlttyUpdate@@Base+0x1e94>
   19728:	cmp	r6, r3
   1972c:	ble	19cc4 <brlttyUpdate@@Base+0x1e94>
   19730:	cmp	r6, #1
   19734:	ble	19cc4 <brlttyUpdate@@Base+0x1e94>
   19738:	mov	r3, r6
   1973c:	mov	r9, r7
   19740:	mov	r6, r4
   19744:	mov	r4, r1
   19748:	cmp	r9, #0
   1974c:	ble	19ce0 <brlttyUpdate@@Base+0x1eb0>
   19750:	sub	sl, r9, #1
   19754:	ldr	r0, [r5, sl, lsl #3]
   19758:	str	r3, [fp, #-312]	; 0xfffffec8
   1975c:	bl	f44c <iswspace@plt>
   19760:	ldr	r3, [fp, #-312]	; 0xfffffec8
   19764:	cmp	r0, #0
   19768:	beq	19ce0 <brlttyUpdate@@Base+0x1eb0>
   1976c:	mov	r9, sl
   19770:	b	19748 <brlttyUpdate@@Base+0x1918>
   19774:	add	r3, r5, #7
   19778:	mov	r8, sp
   1977c:	bic	r3, r3, #7
   19780:	mov	r2, r5
   19784:	sub	sp, sp, r3
   19788:	mov	r1, #0
   1978c:	add	r7, sp, #48	; 0x30
   19790:	mov	r0, r7
   19794:	bl	f6b0 <memset@plt>
   19798:	mov	r0, r6
   1979c:	mov	r1, r7
   197a0:	bl	2679c <renderStatusFields@@Base>
   197a4:	ldr	lr, [fp, #-236]	; 0xffffff14
   197a8:	ldr	r2, [pc, #-2612]	; 18d7c <brlttyUpdate@@Base+0xf4c>
   197ac:	ldr	r0, [fp, #-256]	; 0xffffff00
   197b0:	ldr	ip, [lr]
   197b4:	ldr	r2, [r4, r2]
   197b8:	ldr	r3, [r9]
   197bc:	ldr	r1, [lr, #28]
   197c0:	ldr	r2, [r2]
   197c4:	str	ip, [sp]
   197c8:	ldr	ip, [lr, #4]
   197cc:	str	r7, [sp, #8]
   197d0:	str	r5, [sp, #12]
   197d4:	str	ip, [sp, #4]
   197d8:	bl	3da14 <fillDotsRegion@@Base>
   197dc:	mov	sp, r8
   197e0:	b	18c80 <brlttyUpdate@@Base+0xe50>
   197e4:	str	r0, [r6, #4]
   197e8:	bl	1161c <_start@@Base+0x16c8>
   197ec:	ldr	r7, [fp, #-244]	; 0xffffff0c
   197f0:	mov	r8, #0
   197f4:	ldr	r5, [r7]
   197f8:	b	1814c <brlttyUpdate@@Base+0x31c>
   197fc:	bl	f950 <__stack_chk_fail@plt>
   19800:	mov	sl, r5
   19804:	ldr	r5, [fp, #-244]	; 0xffffff0c
   19808:	ldr	r6, [fp, #-184]	; 0xffffff48
   1980c:	str	lr, [fp, #-252]	; 0xffffff04
   19810:	ldr	r7, [r5]
   19814:	ldr	r4, [fp, #-284]	; 0xfffffee4
   19818:	mov	r0, r6
   1981c:	ldr	r8, [fp, #-288]	; 0xfffffee0
   19820:	ldr	ip, [r7, #8]
   19824:	b	18f94 <brlttyUpdate@@Base+0x1164>
   19828:	mov	sl, #0
   1982c:	b	18f4c <brlttyUpdate@@Base+0x111c>
   19830:	mov	r2, #0
   19834:	mov	r3, r2
   19838:	b	190d4 <brlttyUpdate@@Base+0x12a4>
   1983c:	bl	fd04 <_Unwind_Resume@plt>
   19840:	sub	ip, fp, #200	; 0xc8
   19844:	ldrb	ip, [ip, r5]
   19848:	uxtb	r3, ip
   1984c:	orr	r3, r3, #10240	; 0x2800
   19850:	str	r3, [r9, r6]
   19854:	b	193a0 <brlttyUpdate@@Base+0x1570>
   19858:	ldr	r3, [pc, #-2784]	; 18d80 <brlttyUpdate@@Base+0xf50>
   1985c:	ldr	lr, [fp, #-220]	; 0xffffff24
   19860:	add	r3, pc, r3
   19864:	ldr	r2, [r3, #12]
   19868:	cmp	lr, r2
   1986c:	bne	18b8c <brlttyUpdate@@Base+0xd5c>
   19870:	cmp	ip, #0
   19874:	beq	18b8c <brlttyUpdate@@Base+0xd5c>
   19878:	ldr	r3, [r3, #16]
   1987c:	cmp	r6, r3
   19880:	str	r3, [fp, #-256]	; 0xffffff00
   19884:	ldreq	r0, [fp, #-216]	; 0xffffff28
   19888:	moveq	r3, #0
   1988c:	beq	19934 <brlttyUpdate@@Base+0x1b04>
   19890:	ldr	r1, [fp, #-256]	; 0xffffff00
   19894:	cmp	r1, #0
   19898:	ldrlt	r3, [pc, #-2844]	; 18d84 <brlttyUpdate@@Base+0xf54>
   1989c:	movlt	r2, #0
   198a0:	addlt	r3, pc, r3
   198a4:	strlt	r2, [r3, #16]
   198a8:	ldr	r3, [pc, #-2856]	; 18d88 <brlttyUpdate@@Base+0xf58>
   198ac:	add	r3, pc, r3
   198b0:	ldr	r2, [r3, #16]
   198b4:	cmp	r6, r2
   198b8:	movgt	r3, #0
   198bc:	ldrgt	ip, [fp, #-216]	; 0xffffff28
   198c0:	bgt	19914 <brlttyUpdate@@Base+0x1ae4>
   198c4:	cmp	r7, r2
   198c8:	ldrle	r3, [pc, #-2884]	; 18d8c <brlttyUpdate@@Base+0xf5c>
   198cc:	suble	r2, r7, #1
   198d0:	addle	r3, pc, r3
   198d4:	strle	r2, [r3, #16]
   198d8:	ldr	r3, [pc, #-2896]	; 18d90 <brlttyUpdate@@Base+0xf60>
   198dc:	add	r3, pc, r3
   198e0:	ldr	r9, [r3, #16]
   198e4:	cmp	r6, r9
   198e8:	movlt	r3, #0
   198ec:	ldrlt	r0, [fp, #-216]	; 0xffffff28
   198f0:	bge	18b8c <brlttyUpdate@@Base+0xd5c>
   198f4:	cmp	r6, r3
   198f8:	ble	19954 <brlttyUpdate@@Base+0x1b24>
   198fc:	ldr	r1, [r5, r3, lsl #3]
   19900:	ldr	r2, [r0, r3, lsl #3]
   19904:	cmp	r1, r2
   19908:	bne	18b8c <brlttyUpdate@@Base+0xd5c>
   1990c:	add	r3, r3, #1
   19910:	b	198f4 <brlttyUpdate@@Base+0x1ac4>
   19914:	cmp	r2, r3
   19918:	ble	1998c <brlttyUpdate@@Base+0x1b5c>
   1991c:	ldr	r0, [r5, r3, lsl #3]
   19920:	ldr	r1, [ip, r3, lsl #3]
   19924:	cmp	r0, r1
   19928:	bne	198c4 <brlttyUpdate@@Base+0x1a94>
   1992c:	add	r3, r3, #1
   19930:	b	19914 <brlttyUpdate@@Base+0x1ae4>
   19934:	cmp	r6, r3
   19938:	ble	199e0 <brlttyUpdate@@Base+0x1bb0>
   1993c:	ldr	r1, [r5, r3, lsl #3]
   19940:	ldr	r2, [r0, r3, lsl #3]
   19944:	cmp	r1, r2
   19948:	bne	19890 <brlttyUpdate@@Base+0x1a60>
   1994c:	add	r3, r3, #1
   19950:	b	19934 <brlttyUpdate@@Base+0x1b04>
   19954:	ldr	r1, [fp, #-216]	; 0xffffff28
   19958:	lsl	ip, r6, #3
   1995c:	rsb	r2, r9, r7
   19960:	mov	r3, #0
   19964:	add	r0, r1, r9, lsl #3
   19968:	add	r1, r5, ip
   1996c:	cmp	r2, r3
   19970:	ble	19a2c <brlttyUpdate@@Base+0x1bfc>
   19974:	ldr	sl, [r1, r3, lsl #3]
   19978:	ldr	lr, [r0, r3, lsl #3]
   1997c:	cmp	sl, lr
   19980:	bne	18b8c <brlttyUpdate@@Base+0xd5c>
   19984:	add	r3, r3, #1
   19988:	b	1996c <brlttyUpdate@@Base+0x1b3c>
   1998c:	str	r7, [fp, #-228]	; 0xffffff1c
   19990:	rsb	lr, r6, r7
   19994:	ldr	r3, [fp, #-216]	; 0xffffff28
   19998:	lsl	r9, r6, #3
   1999c:	mov	r7, r8
   199a0:	ldr	r8, [fp, #-228]	; 0xffffff1c
   199a4:	lsl	ip, r2, #3
   199a8:	add	r0, r5, r9
   199ac:	add	r1, r3, ip
   199b0:	mov	r3, #0
   199b4:	str	ip, [fp, #-256]	; 0xffffff00
   199b8:	str	lr, [fp, #-264]	; 0xfffffef8
   199bc:	ldr	ip, [fp, #-264]	; 0xfffffef8
   199c0:	cmp	ip, r3
   199c4:	ble	19ab8 <brlttyUpdate@@Base+0x1c88>
   199c8:	ldr	ip, [r0, r3, lsl #3]
   199cc:	ldr	lr, [r1, r3, lsl #3]
   199d0:	cmp	ip, lr
   199d4:	bne	19aa8 <brlttyUpdate@@Base+0x1c78>
   199d8:	add	r3, r3, #1
   199dc:	b	199bc <brlttyUpdate@@Base+0x1b8c>
   199e0:	mov	r2, #8
   199e4:	mvn	r3, #7
   199e8:	smlabb	r3, r9, r2, r3
   199ec:	ldr	ip, [fp, #-216]	; 0xffffff28
   199f0:	mov	r2, sl
   199f4:	mov	r9, r7
   199f8:	mov	sl, r4
   199fc:	add	r3, ip, r3
   19a00:	mov	r4, r3
   19a04:	cmp	r9, r6
   19a08:	ble	19a4c <brlttyUpdate@@Base+0x1c1c>
   19a0c:	ldr	r0, [r4], #-8
   19a10:	str	r2, [fp, #-308]	; 0xfffffecc
   19a14:	bl	f44c <iswspace@plt>
   19a18:	ldr	r2, [fp, #-308]	; 0xfffffecc
   19a1c:	cmp	r0, #0
   19a20:	beq	19a4c <brlttyUpdate@@Base+0x1c1c>
   19a24:	sub	r9, r9, #1
   19a28:	b	19a04 <brlttyUpdate@@Base+0x1bd4>
   19a2c:	ldr	r3, [pc, #-3232]	; 18d94 <brlttyUpdate@@Base+0xf64>
   19a30:	ldr	r3, [r4, r3]
   19a34:	ldrb	r3, [r3, #64]	; 0x40
   19a38:	cmp	r3, #0
   19a3c:	beq	18c28 <brlttyUpdate@@Base+0xdf8>
   19a40:	rsb	r1, r6, r9
   19a44:	ldr	r3, [fp, #-216]	; 0xffffff28
   19a48:	b	18b3c <brlttyUpdate@@Base+0xd0c>
   19a4c:	cmp	r7, r9
   19a50:	mov	r4, sl
   19a54:	addgt	r9, r9, #1
   19a58:	mov	sl, r2
   19a5c:	mov	r3, r4
   19a60:	mov	r2, sl
   19a64:	mov	r4, r7
   19a68:	mov	sl, r7
   19a6c:	mov	r7, r6
   19a70:	mov	r6, r5
   19a74:	cmp	r4, r7
   19a78:	ble	19b6c <brlttyUpdate@@Base+0x1d3c>
   19a7c:	sub	r5, r4, #1
   19a80:	ldr	r0, [r6, r5, lsl #3]
   19a84:	str	r2, [fp, #-308]	; 0xfffffecc
   19a88:	str	r3, [fp, #-312]	; 0xfffffec8
   19a8c:	bl	f44c <iswspace@plt>
   19a90:	ldr	r2, [fp, #-308]	; 0xfffffecc
   19a94:	ldr	r3, [fp, #-312]	; 0xfffffec8
   19a98:	cmp	r0, #0
   19a9c:	beq	19b6c <brlttyUpdate@@Base+0x1d3c>
   19aa0:	mov	r4, r5
   19aa4:	b	19a74 <brlttyUpdate@@Base+0x1c44>
   19aa8:	mov	r3, r8
   19aac:	mov	r8, r7
   19ab0:	mov	r7, r3
   19ab4:	b	198c4 <brlttyUpdate@@Base+0x1a94>
   19ab8:	mov	r3, r8
   19abc:	mov	r8, r7
   19ac0:	mov	r7, r3
   19ac4:	ldr	r3, [pc, #-3384]	; 18d94 <brlttyUpdate@@Base+0xf64>
   19ac8:	ldr	ip, [fp, #-256]	; 0xffffff00
   19acc:	rsb	r1, r2, r6
   19ad0:	ldr	r3, [r4, r3]
   19ad4:	str	r3, [fp, #-228]	; 0xffffff1c
   19ad8:	ldrb	r3, [r3, #66]	; 0x42
   19adc:	cmp	r3, #0
   19ae0:	beq	19c88 <brlttyUpdate@@Base+0x1e58>
   19ae4:	sub	r9, r9, #8
   19ae8:	sub	r3, r6, #1
   19aec:	ldr	r0, [r9, sl, lsl #2]
   19af0:	add	r9, r5, r9
   19af4:	str	r1, [fp, #-300]	; 0xfffffed4
   19af8:	str	r2, [fp, #-308]	; 0xfffffecc
   19afc:	str	r3, [fp, #-312]	; 0xfffffec8
   19b00:	str	ip, [fp, #-304]	; 0xfffffed0
   19b04:	str	r9, [fp, #-260]	; 0xfffffefc
   19b08:	bl	f44c <iswspace@plt>
   19b0c:	ldr	r1, [fp, #-300]	; 0xfffffed4
   19b10:	ldr	r2, [fp, #-308]	; 0xfffffecc
   19b14:	ldr	r3, [fp, #-312]	; 0xfffffec8
   19b18:	ldr	ip, [fp, #-304]	; 0xfffffed0
   19b1c:	cmp	r0, #0
   19b20:	beq	19c88 <brlttyUpdate@@Base+0x1e58>
   19b24:	str	r4, [fp, #-256]	; 0xffffff00
   19b28:	mov	r9, r2
   19b2c:	str	r6, [fp, #-252]	; 0xffffff04
   19b30:	mov	r4, r1
   19b34:	mov	r6, r3
   19b38:	cmp	r9, #0
   19b3c:	ble	19c28 <brlttyUpdate@@Base+0x1df8>
   19b40:	sub	sl, r9, #1
   19b44:	ldr	r0, [r5, sl, lsl #3]
   19b48:	str	r2, [fp, #-308]	; 0xfffffecc
   19b4c:	str	ip, [fp, #-304]	; 0xfffffed0
   19b50:	bl	f44c <iswspace@plt>
   19b54:	ldr	r2, [fp, #-308]	; 0xfffffecc
   19b58:	ldr	ip, [fp, #-304]	; 0xfffffed0
   19b5c:	cmp	r0, #0
   19b60:	bne	19c28 <brlttyUpdate@@Base+0x1df8>
   19b64:	mov	r9, sl
   19b68:	b	19b38 <brlttyUpdate@@Base+0x1d08>
   19b6c:	mov	r5, r6
   19b70:	mov	r6, r7
   19b74:	mov	r1, r4
   19b78:	mov	r7, sl
   19b7c:	lsl	ip, r6, #3
   19b80:	cmp	r7, r1
   19b84:	ldr	r0, [fp, #-216]	; 0xffffff28
   19b88:	mov	r4, r3
   19b8c:	addgt	r1, r1, #1
   19b90:	mov	r3, r7
   19b94:	rsb	lr, r6, r7
   19b98:	add	r0, r0, ip
   19b9c:	str	lr, [fp, #-264]	; 0xfffffef8
   19ba0:	mov	r7, r8
   19ba4:	str	r0, [fp, #-280]	; 0xfffffee8
   19ba8:	mov	lr, r6
   19bac:	str	r4, [fp, #-228]	; 0xffffff1c
   19bb0:	mov	r0, #0
   19bb4:	mov	r4, ip
   19bb8:	mov	r8, r3
   19bbc:	mov	sl, r2
   19bc0:	add	r2, r5, ip
   19bc4:	str	r2, [fp, #-272]	; 0xfffffef0
   19bc8:	cmp	lr, r1
   19bcc:	bge	19d7c <brlttyUpdate@@Base+0x1f4c>
   19bd0:	add	r2, r6, r0
   19bd4:	str	r1, [fp, #-276]	; 0xfffffeec
   19bd8:	ldr	r3, [fp, #-264]	; 0xfffffef8
   19bdc:	mov	r1, r7
   19be0:	mov	r7, r9
   19be4:	ldr	r9, [fp, #-276]	; 0xfffffeec
   19be8:	add	ip, r5, r2, lsl #3
   19bec:	rsb	r3, r0, r3
   19bf0:	str	r3, [fp, #-268]	; 0xfffffef4
   19bf4:	mov	r3, #0
   19bf8:	str	r0, [fp, #-284]	; 0xfffffee4
   19bfc:	str	r2, [fp, #-288]	; 0xfffffee0
   19c00:	ldr	r0, [fp, #-268]	; 0xfffffef4
   19c04:	cmp	r0, r3
   19c08:	ble	19d4c <brlttyUpdate@@Base+0x1f1c>
   19c0c:	ldr	r0, [fp, #-280]	; 0xfffffee8
   19c10:	ldr	r2, [ip, r3, lsl #3]
   19c14:	ldr	r0, [r0, r3, lsl #3]
   19c18:	cmp	r2, r0
   19c1c:	bne	19ddc <brlttyUpdate@@Base+0x1fac>
   19c20:	add	r3, r3, #1
   19c24:	b	19c00 <brlttyUpdate@@Base+0x1dd0>
   19c28:	cmp	r2, r9
   19c2c:	mov	r1, r4
   19c30:	mov	r3, r6
   19c34:	ldr	r4, [fp, #-256]	; 0xffffff00
   19c38:	ldr	r6, [fp, #-252]	; 0xffffff04
   19c3c:	ble	19c88 <brlttyUpdate@@Base+0x1e58>
   19c40:	ldr	sl, [fp, #-260]	; 0xfffffefc
   19c44:	mov	r2, r4
   19c48:	str	r6, [fp, #-256]	; 0xffffff00
   19c4c:	mov	r4, r3
   19c50:	mov	r6, r5
   19c54:	mov	r5, r1
   19c58:	cmp	r4, r9
   19c5c:	blt	19e08 <brlttyUpdate@@Base+0x1fd8>
   19c60:	ldr	r0, [sl], #-8
   19c64:	str	r2, [fp, #-308]	; 0xfffffecc
   19c68:	str	ip, [fp, #-304]	; 0xfffffed0
   19c6c:	bl	f44c <iswspace@plt>
   19c70:	ldr	r2, [fp, #-308]	; 0xfffffecc
   19c74:	ldr	ip, [fp, #-304]	; 0xfffffed0
   19c78:	cmp	r0, #0
   19c7c:	beq	19e08 <brlttyUpdate@@Base+0x1fd8>
   19c80:	sub	r4, r4, #1
   19c84:	b	19c58 <brlttyUpdate@@Base+0x1e28>
   19c88:	ldr	r9, [fp, #-228]	; 0xffffff1c
   19c8c:	ldrb	r3, [r9, #63]	; 0x3f
   19c90:	cmp	r3, #0
   19c94:	beq	18c28 <brlttyUpdate@@Base+0xdf8>
   19c98:	mov	r3, r5
   19c9c:	b	18b3c <brlttyUpdate@@Base+0xd0c>
   19ca0:	rsb	r9, sl, r9
   19ca4:	mov	r1, r5
   19ca8:	cmp	r9, #1
   19cac:	mov	r5, r6
   19cb0:	mov	r4, r2
   19cb4:	mov	r6, ip
   19cb8:	addgt	r0, r5, sl, lsl #3
   19cbc:	movgt	r1, r9
   19cc0:	bgt	18b48 <brlttyUpdate@@Base+0xd18>
   19cc4:	lsl	ip, r6, #3
   19cc8:	b	19c98 <brlttyUpdate@@Base+0x1e68>
   19ccc:	ldr	r2, [r2, #12]
   19cd0:	ldr	r9, [fp, #-220]	; 0xffffff24
   19cd4:	cmp	r9, r2
   19cd8:	bne	19700 <brlttyUpdate@@Base+0x18d0>
   19cdc:	b	18c28 <brlttyUpdate@@Base+0xdf8>
   19ce0:	mov	r1, r4
   19ce4:	mov	r4, r6
   19ce8:	mov	r6, r3
   19cec:	add	r3, r9, #1
   19cf0:	cmp	r6, r3
   19cf4:	bne	19cc4 <brlttyUpdate@@Base+0x1e94>
   19cf8:	add	r3, r5, r9, lsl #3
   19cfc:	sub	sl, r9, #1
   19d00:	mov	r2, r4
   19d04:	mov	ip, r6
   19d08:	mov	r4, r3
   19d0c:	mov	r6, r5
   19d10:	mov	r5, r1
   19d14:	cmp	sl, #0
   19d18:	ble	19ca0 <brlttyUpdate@@Base+0x1e70>
   19d1c:	ldr	r0, [r4, #-16]
   19d20:	sub	r4, r4, #8
   19d24:	str	r2, [fp, #-308]	; 0xfffffecc
   19d28:	str	ip, [fp, #-304]	; 0xfffffed0
   19d2c:	bl	f44c <iswspace@plt>
   19d30:	sub	r3, sl, #1
   19d34:	ldr	r2, [fp, #-308]	; 0xfffffecc
   19d38:	ldr	ip, [fp, #-304]	; 0xfffffed0
   19d3c:	cmp	r0, #0
   19d40:	bne	19ca0 <brlttyUpdate@@Base+0x1e70>
   19d44:	mov	sl, r3
   19d48:	b	19d14 <brlttyUpdate@@Base+0x1ee4>
   19d4c:	mov	ip, r4
   19d50:	ldr	r3, [pc, #-4036]	; 18d94 <brlttyUpdate@@Base+0xf64>
   19d54:	ldr	r4, [fp, #-228]	; 0xffffff1c
   19d58:	mov	r7, r8
   19d5c:	mov	r8, r1
   19d60:	ldr	r3, [r4, r3]
   19d64:	ldrb	r3, [r3, #63]	; 0x3f
   19d68:	cmp	r3, #0
   19d6c:	beq	18c28 <brlttyUpdate@@Base+0xdf8>
   19d70:	rsb	r1, r6, lr
   19d74:	mov	r3, r5
   19d78:	b	18b3c <brlttyUpdate@@Base+0xd0c>
   19d7c:	cmp	lr, r9
   19d80:	bge	19e80 <brlttyUpdate@@Base+0x2050>
   19d84:	add	r2, r6, r0
   19d88:	ldr	r3, [fp, #-216]	; 0xffffff28
   19d8c:	str	r1, [fp, #-268]	; 0xfffffef4
   19d90:	mov	r1, r7
   19d94:	add	r2, r3, r2, lsl #3
   19d98:	mov	r7, r9
   19d9c:	ldr	r3, [fp, #-264]	; 0xfffffef8
   19da0:	ldr	r9, [fp, #-268]	; 0xfffffef4
   19da4:	rsb	ip, r0, r3
   19da8:	mov	r3, #0
   19dac:	str	ip, [fp, #-276]	; 0xfffffeec
   19db0:	str	r0, [fp, #-284]	; 0xfffffee4
   19db4:	ldr	ip, [fp, #-276]	; 0xfffffeec
   19db8:	cmp	ip, r3
   19dbc:	ble	19e50 <brlttyUpdate@@Base+0x2020>
   19dc0:	ldr	ip, [fp, #-272]	; 0xfffffef0
   19dc4:	ldr	r0, [r2, r3, lsl #3]
   19dc8:	ldr	ip, [ip, r3, lsl #3]
   19dcc:	cmp	ip, r0
   19dd0:	bne	19e38 <brlttyUpdate@@Base+0x2008>
   19dd4:	add	r3, r3, #1
   19dd8:	b	19db4 <brlttyUpdate@@Base+0x1f84>
   19ddc:	mov	r3, r9
   19de0:	mov	r9, r7
   19de4:	cmp	lr, r9
   19de8:	mov	r7, r1
   19dec:	ldr	r0, [fp, #-284]	; 0xfffffee4
   19df0:	mov	r1, r3
   19df4:	ldr	r2, [fp, #-288]	; 0xfffffee0
   19df8:	blt	19d88 <brlttyUpdate@@Base+0x1f58>
   19dfc:	add	lr, lr, #1
   19e00:	add	r0, r0, #1
   19e04:	b	19bc8 <brlttyUpdate@@Base+0x1d98>
   19e08:	mov	r3, r4
   19e0c:	cmp	r9, r3
   19e10:	mov	r1, r5
   19e14:	mov	r4, r2
   19e18:	mov	r5, r6
   19e1c:	ldr	r6, [fp, #-256]	; 0xffffff00
   19e20:	bge	19c88 <brlttyUpdate@@Base+0x1e58>
   19e24:	rsb	r3, r9, r3
   19e28:	lsl	ip, r9, #3
   19e2c:	add	r1, r3, #1
   19e30:	mov	r3, r5
   19e34:	b	18b3c <brlttyUpdate@@Base+0xd0c>
   19e38:	mov	r3, r9
   19e3c:	ldr	r0, [fp, #-284]	; 0xfffffee4
   19e40:	mov	r9, r7
   19e44:	mov	r7, r1
   19e48:	mov	r1, r3
   19e4c:	b	19dfc <brlttyUpdate@@Base+0x1fcc>
   19e50:	mov	ip, r4
   19e54:	ldr	r3, [pc, #56]	; 19e94 <brlttyUpdate@@Base+0x2064>
   19e58:	ldr	r4, [fp, #-228]	; 0xffffff1c
   19e5c:	mov	r7, r8
   19e60:	mov	r8, r1
   19e64:	ldr	r3, [r4, r3]
   19e68:	ldrb	r3, [r3, #64]	; 0x40
   19e6c:	cmp	r3, #0
   19e70:	beq	18c28 <brlttyUpdate@@Base+0xdf8>
   19e74:	rsb	r1, r6, lr
   19e78:	ldr	r3, [fp, #-216]	; 0xffffff28
   19e7c:	b	18b3c <brlttyUpdate@@Base+0xd0c>
   19e80:	mov	r3, r8
   19e84:	ldr	r4, [fp, #-228]	; 0xffffff1c
   19e88:	mov	r8, r7
   19e8c:	mov	r7, r3
   19e90:	b	19890 <brlttyUpdate@@Base+0x1a60>
   19e94:	andeq	r0, r0, r0, asr #10

00019e98 <showDotPattern@@Base>:
   19e98:	ldr	r3, [pc, #244]	; 19f94 <showDotPattern@@Base+0xfc>
   19e9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19ea0:	add	fp, sp, #32
   19ea4:	ldr	r2, [pc, #236]	; 19f98 <showDotPattern@@Base+0x100>
   19ea8:	sub	sp, sp, #12
   19eac:	add	r3, pc, r3
   19eb0:	mov	r8, r1
   19eb4:	ldr	r1, [pc, #224]	; 19f9c <showDotPattern@@Base+0x104>
   19eb8:	ldr	r5, [r3, r2]
   19ebc:	mov	r9, r0
   19ec0:	ldr	r2, [r5]
   19ec4:	str	r2, [fp, #-40]	; 0xffffffd8
   19ec8:	ldr	r6, [r3, r1]
   19ecc:	ldr	r7, [r6]
   19ed0:	ldr	r2, [r7, #52]	; 0x34
   19ed4:	cmp	r2, #0
   19ed8:	ldr	r2, [pc, #192]	; 19fa0 <showDotPattern@@Base+0x108>
   19edc:	ldr	r4, [r3, r2]
   19ee0:	beq	19ef0 <showDotPattern@@Base+0x58>
   19ee4:	ldr	r3, [r4, #8]
   19ee8:	cmp	r3, #0
   19eec:	bne	19f48 <showDotPattern@@Base+0xb0>
   19ef0:	ldm	r4, {r2, r3}
   19ef4:	mov	r1, r9
   19ef8:	ldr	r0, [r4, #28]
   19efc:	mul	r2, r2, r3
   19f00:	bl	f6b0 <memset@plt>
   19f04:	ldr	r3, [r6]
   19f08:	mov	r0, r4
   19f0c:	mov	r1, #0
   19f10:	ldr	r3, [r3, #48]	; 0x30
   19f14:	blx	r3
   19f18:	cmp	r0, #0
   19f1c:	beq	19f30 <showDotPattern@@Base+0x98>
   19f20:	mov	r0, r4
   19f24:	mov	r1, r8
   19f28:	bl	3d9a4 <drainBrailleOutput@@Base>
   19f2c:	mov	r0, #1
   19f30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19f34:	ldr	r3, [r5]
   19f38:	cmp	r2, r3
   19f3c:	bne	19f90 <showDotPattern@@Base+0xf8>
   19f40:	sub	sp, fp, #32
   19f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f48:	ldr	r2, [r4, #12]
   19f4c:	mov	sl, sp
   19f50:	mov	r1, r0
   19f54:	mul	r2, r2, r3
   19f58:	add	r3, r2, #7
   19f5c:	bic	r3, r3, #7
   19f60:	sub	sp, sp, r3
   19f64:	mov	r0, sp
   19f68:	bl	f6b0 <memset@plt>
   19f6c:	mov	r1, sp
   19f70:	ldr	r3, [r7, #52]	; 0x34
   19f74:	mov	r0, r4
   19f78:	blx	r3
   19f7c:	cmp	r0, #0
   19f80:	moveq	sp, sl
   19f84:	beq	19f30 <showDotPattern@@Base+0x98>
   19f88:	mov	sp, sl
   19f8c:	b	19ef0 <showDotPattern@@Base+0x58>
   19f90:	bl	f950 <__stack_chk_fail@plt>
   19f94:	andeq	r8, r5, ip, asr #23
   19f98:			; <UNDEFINED> instruction: 0x000003b4
   19f9c:	andeq	r0, r0, ip, ror r4
   19fa0:	andeq	r0, r0, r8, asr #10

00019fa4 <endProgram@@Base>:
   19fa4:	push	{r3, r4, r5, lr}
   19fa8:	ldr	r5, [pc, #48]	; 19fe0 <endProgram@@Base+0x3c>
   19fac:	add	r5, pc, r5
   19fb0:	ldr	r4, [r5]
   19fb4:	cmp	r4, #0
   19fb8:	popeq	{r3, r4, r5, pc}
   19fbc:	ldm	r4, {r2, r3}
   19fc0:	str	r2, [r5]
   19fc4:	blx	r3
   19fc8:	mov	r0, r4
   19fcc:	bl	f4f4 <free@plt>
   19fd0:	ldr	r4, [r5]
   19fd4:	cmp	r4, #0
   19fd8:	bne	19fbc <endProgram@@Base+0x18>
   19fdc:	pop	{r3, r4, r5, pc}
   19fe0:	andeq	r9, r5, r0, asr r6
   19fe4:	push	{r3, r4, r5, lr}
   19fe8:	bl	1c9c8 <makePath@@Base>
   19fec:	subs	r4, r0, #0
   19ff0:	beq	1a008 <endProgram@@Base+0x64>
   19ff4:	bl	1cc20 <testProgramPath@@Base>
   19ff8:	subs	r5, r0, #0
   19ffc:	mov	r0, r4
   1a000:	beq	1a010 <endProgram@@Base+0x6c>
   1a004:	pop	{r3, r4, r5, pc}
   1a008:	mov	r0, r4
   1a00c:	pop	{r3, r4, r5, pc}
   1a010:	bl	f4f4 <free@plt>
   1a014:	mov	r0, r5
   1a018:	pop	{r3, r4, r5, pc}

0001a01c <beginProgram@@Base>:
   1a01c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a020:	sub	sp, sp, #4096	; 0x1000
   1a024:	ldr	r4, [pc, #564]	; 1a260 <beginProgram@@Base+0x244>
   1a028:	sub	sp, sp, #20
   1a02c:	ldr	r2, [pc, #560]	; 1a264 <beginProgram@@Base+0x248>
   1a030:	mov	r7, r1
   1a034:	add	r4, pc, r4
   1a038:	ldr	r3, [pc, #552]	; 1a268 <beginProgram@@Base+0x24c>
   1a03c:	add	r1, sp, #8192	; 0x2000
   1a040:	ldr	r5, [pc, #548]	; 1a26c <beginProgram@@Base+0x250>
   1a044:	ldr	r6, [r4, r2]
   1a048:	add	r5, pc, r5
   1a04c:	ldr	r2, [r6]
   1a050:	str	r2, [r1, #-4084]	; 0xfffff00c
   1a054:	ldr	r0, [r4, r3]
   1a058:	bl	4e6c8 <__libc_csu_fini@@Base+0x4>
   1a05c:	ldr	r1, [pc, #524]	; 1a270 <beginProgram@@Base+0x254>
   1a060:	mov	r0, #6
   1a064:	add	r1, pc, r1
   1a068:	bl	fad0 <setlocale@plt>
   1a06c:	ldr	r1, [pc, #512]	; 1a274 <beginProgram@@Base+0x258>
   1a070:	mov	r0, r5
   1a074:	add	r1, pc, r1
   1a078:	bl	fa7c <bindtextdomain@plt>
   1a07c:	mov	r0, r5
   1a080:	bl	f638 <textdomain@plt>
   1a084:	bl	1f258 <getProgramPath@@Base>
   1a088:	ldr	r3, [pc, #488]	; 1a278 <beginProgram@@Base+0x25c>
   1a08c:	ldr	r5, [r4, r3]
   1a090:	cmp	r0, #0
   1a094:	str	r0, [r5]
   1a098:	ldreq	r0, [r7]
   1a09c:	streq	r0, [r5]
   1a0a0:	bl	1c9b0 <isExplicitPath@@Base>
   1a0a4:	subs	fp, r0, #0
   1a0a8:	beq	1a13c <beginProgram@@Base+0x120>
   1a0ac:	ldr	r0, [r5]
   1a0b0:	bl	1c9b0 <isExplicitPath@@Base>
   1a0b4:	cmp	r0, #0
   1a0b8:	bne	1a0f4 <beginProgram@@Base+0xd8>
   1a0bc:	ldr	r0, [r5]
   1a0c0:	bl	1c948 <locatePathName@@Base>
   1a0c4:	ldr	r3, [pc, #432]	; 1a27c <beginProgram@@Base+0x260>
   1a0c8:	ldr	r3, [r4, r3]
   1a0cc:	str	r0, [r3]
   1a0d0:	bl	1c20c <setLogPrefix@@Base>
   1a0d4:	add	r3, sp, #8192	; 0x2000
   1a0d8:	ldr	r2, [r3, #-4084]	; 0xfffff00c
   1a0dc:	ldr	r3, [r6]
   1a0e0:	cmp	r2, r3
   1a0e4:	bne	1a25c <beginProgram@@Base+0x240>
   1a0e8:	add	sp, sp, #4096	; 0x1000
   1a0ec:	add	sp, sp, #20
   1a0f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0f4:	ldr	r0, [r5]
   1a0f8:	bl	1c838 <isAbsolutePath@@Base>
   1a0fc:	cmp	r0, #0
   1a100:	ldr	r0, [r5]
   1a104:	beq	1a214 <beginProgram@@Base+0x1f8>
   1a108:	bl	1c838 <isAbsolutePath@@Base>
   1a10c:	cmp	r0, #0
   1a110:	bne	1a0bc <beginProgram@@Base+0xa0>
   1a114:	bl	1ce78 <getWorkingDirectory@@Base>
   1a118:	subs	r7, r0, #0
   1a11c:	beq	1a0bc <beginProgram@@Base+0xa0>
   1a120:	ldr	r1, [r5]
   1a124:	bl	1c9c8 <makePath@@Base>
   1a128:	cmp	r0, #0
   1a12c:	strne	r0, [r5]
   1a130:	mov	r0, r7
   1a134:	bl	f4f4 <free@plt>
   1a138:	b	1a0bc <beginProgram@@Base+0xa0>
   1a13c:	ldr	r0, [pc, #316]	; 1a280 <beginProgram@@Base+0x264>
   1a140:	ldr	r7, [r5]
   1a144:	add	r0, pc, r0
   1a148:	bl	fd70 <getenv@plt>
   1a14c:	cmp	r0, #0
   1a150:	beq	1a1f8 <beginProgram@@Base+0x1dc>
   1a154:	mov	r1, #58	; 0x3a
   1a158:	add	r2, sp, #8
   1a15c:	bl	1dbbc <splitString@@Base>
   1a160:	cmp	r0, #0
   1a164:	str	r0, [sp, #4]
   1a168:	beq	1a1f8 <beginProgram@@Base+0x1dc>
   1a16c:	add	r2, sp, #4096	; 0x1000
   1a170:	movw	r9, #61432	; 0xeff8
   1a174:	add	r2, r2, #16
   1a178:	movt	r9, #65535	; 0xffff
   1a17c:	ldr	r3, [r2, r9]
   1a180:	cmp	r3, #0
   1a184:	ble	1a1f0 <beginProgram@@Base+0x1d4>
   1a188:	ldr	r8, [pc, #244]	; 1a284 <beginProgram@@Base+0x268>
   1a18c:	ldr	r3, [sp, #4]
   1a190:	add	r8, pc, r8
   1a194:	sub	sl, r3, #4
   1a198:	b	1a1b4 <beginProgram@@Base+0x198>
   1a19c:	add	r1, sp, #4096	; 0x1000
   1a1a0:	add	fp, fp, #1
   1a1a4:	add	r1, r1, #16
   1a1a8:	ldr	r2, [r1, r9]
   1a1ac:	cmp	fp, r2
   1a1b0:	bge	1a1f0 <beginProgram@@Base+0x1d4>
   1a1b4:	ldr	r0, [sl, #4]!
   1a1b8:	mov	r1, r7
   1a1bc:	ldrb	r2, [r0]
   1a1c0:	cmp	r2, #0
   1a1c4:	moveq	r0, r8
   1a1c8:	bl	19fe4 <endProgram@@Base+0x40>
   1a1cc:	subs	r2, r0, #0
   1a1d0:	beq	1a19c <beginProgram@@Base+0x180>
   1a1d4:	ldr	r0, [sp, #4]
   1a1d8:	str	r2, [sp]
   1a1dc:	bl	1db88 <deallocateStrings@@Base>
   1a1e0:	ldr	r2, [sp]
   1a1e4:	mov	r0, r2
   1a1e8:	str	r2, [r5]
   1a1ec:	b	1a0b0 <beginProgram@@Base+0x94>
   1a1f0:	ldr	r0, [sp, #4]
   1a1f4:	bl	1db88 <deallocateStrings@@Base>
   1a1f8:	ldr	r0, [pc, #136]	; 1a288 <beginProgram@@Base+0x26c>
   1a1fc:	ldr	r1, [r5]
   1a200:	add	r0, pc, r0
   1a204:	bl	19fe4 <endProgram@@Base+0x40>
   1a208:	subs	r2, r0, #0
   1a20c:	beq	1a0ac <beginProgram@@Base+0x90>
   1a210:	b	1a1e4 <beginProgram@@Base+0x1c8>
   1a214:	add	r1, sp, #12
   1a218:	mov	r2, #4096	; 0x1000
   1a21c:	bl	fc14 <__realpath_chk@plt>
   1a220:	cmp	r0, #0
   1a224:	beq	1a23c <beginProgram@@Base+0x220>
   1a228:	bl	f740 <__strdup@plt>
   1a22c:	cmp	r0, #0
   1a230:	beq	1a250 <beginProgram@@Base+0x234>
   1a234:	str	r0, [r5]
   1a238:	b	1a108 <beginProgram@@Base+0xec>
   1a23c:	ldr	r0, [pc, #72]	; 1a28c <beginProgram@@Base+0x270>
   1a240:	add	r0, pc, r0
   1a244:	bl	1c6fc <logSystemError@@Base>
   1a248:	ldr	r0, [r5]
   1a24c:	b	1a108 <beginProgram@@Base+0xec>
   1a250:	bl	1c740 <logMallocError@@Base>
   1a254:	ldr	r0, [r5]
   1a258:	b	1a108 <beginProgram@@Base+0xec>
   1a25c:	bl	f950 <__stack_chk_fail@plt>
   1a260:	andeq	r8, r5, r4, asr #20
   1a264:			; <UNDEFINED> instruction: 0x000003b4
   1a268:	andeq	r0, r0, r8, lsl #9
   1a26c:	ldrdeq	r4, [r3], -r8
   1a270:	andeq	r4, r3, r0, lsr #25
   1a274:			; <UNDEFINED> instruction: 0x000349b4
   1a278:	andeq	r0, r0, r4, lsl r5
   1a27c:	muleq	r0, ip, r4
   1a280:	strdeq	r4, [r3], -r8
   1a284:	andeq	r5, r3, r0, lsr lr
   1a288:	andeq	r5, r3, r0, asr #27
   1a28c:	andeq	r4, r3, r4, lsl #16

0001a290 <makeProgramBanner@@Base>:
   1a290:	push	{r4, r5, r6, lr}
   1a294:	sub	sp, sp, #24
   1a298:	ldr	r6, [pc, #72]	; 1a2e8 <makeProgramBanner@@Base+0x58>
   1a29c:	mov	r2, #1
   1a2a0:	ldr	r5, [pc, #68]	; 1a2ec <makeProgramBanner@@Base+0x5c>
   1a2a4:	mvn	r3, #0
   1a2a8:	ldr	r4, [pc, #64]	; 1a2f0 <makeProgramBanner@@Base+0x60>
   1a2ac:	add	r6, pc, r6
   1a2b0:	ldr	lr, [pc, #60]	; 1a2f4 <makeProgramBanner@@Base+0x64>
   1a2b4:	add	r5, pc, r5
   1a2b8:	ldr	ip, [pc, #56]	; 1a2f8 <makeProgramBanner@@Base+0x68>
   1a2bc:	add	r4, pc, r4
   1a2c0:	add	lr, pc, lr
   1a2c4:	str	r6, [sp]
   1a2c8:	add	ip, pc, ip
   1a2cc:	str	r5, [sp, #4]
   1a2d0:	str	r4, [sp, #8]
   1a2d4:	str	lr, [sp, #12]
   1a2d8:	str	ip, [sp, #16]
   1a2dc:	bl	fb60 <__snprintf_chk@plt>
   1a2e0:	add	sp, sp, #24
   1a2e4:	pop	{r4, r5, r6, pc}
   1a2e8:	andeq	r4, r3, r4, lsr #15
   1a2ec:	andeq	r4, r3, r8, lsr #15
   1a2f0:	andeq	r4, r3, r8, lsr #15
   1a2f4:	andeq	r4, r3, r8, lsr #15
   1a2f8:	andeq	lr, r3, r4, asr #7

0001a2fc <fixInstallPaths@@Base>:
   1a2fc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a300:	mov	r4, r0
   1a304:	ldr	r5, [pc, #340]	; 1a460 <fixInstallPaths@@Base+0x164>
   1a308:	ldr	r3, [pc, #340]	; 1a464 <fixInstallPaths@@Base+0x168>
   1a30c:	add	r5, pc, r5
   1a310:	add	r3, pc, r3
   1a314:	ldr	r2, [r5, #4]
   1a318:	cmp	r2, #0
   1a31c:	beq	1a400 <fixInstallPaths@@Base+0x104>
   1a320:	ldr	r3, [r4]
   1a324:	cmp	r3, #0
   1a328:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a32c:	ldr	r5, [pc, #308]	; 1a468 <fixInstallPaths@@Base+0x16c>
   1a330:	add	r4, r4, #4
   1a334:	ldr	r7, [pc, #304]	; 1a46c <fixInstallPaths@@Base+0x170>
   1a338:	ldr	r6, [pc, #304]	; 1a470 <fixInstallPaths@@Base+0x174>
   1a33c:	add	r5, pc, r5
   1a340:	ldr	r9, [pc, #300]	; 1a474 <fixInstallPaths@@Base+0x178>
   1a344:	add	r7, pc, r7
   1a348:	ldr	r8, [pc, #296]	; 1a478 <fixInstallPaths@@Base+0x17c>
   1a34c:	add	r6, pc, r6
   1a350:	add	r9, pc, r9
   1a354:	add	r8, pc, r8
   1a358:	b	1a368 <fixInstallPaths@@Base+0x6c>
   1a35c:	ldr	r3, [r4], #4
   1a360:	cmp	r3, #0
   1a364:	beq	1a3d4 <fixInstallPaths@@Base+0xd8>
   1a368:	ldr	r1, [r3]
   1a36c:	cmp	r1, #0
   1a370:	beq	1a35c <fixInstallPaths@@Base+0x60>
   1a374:	ldrb	r3, [r1]
   1a378:	cmp	r3, #0
   1a37c:	beq	1a35c <fixInstallPaths@@Base+0x60>
   1a380:	ldr	r0, [r5, #4]
   1a384:	bl	1c9c8 <makePath@@Base>
   1a388:	subs	r3, r0, #0
   1a38c:	beq	1a3d8 <fixInstallPaths@@Base+0xdc>
   1a390:	ldr	r2, [r4, #-4]
   1a394:	str	r3, [r2]
   1a398:	bl	1c838 <isAbsolutePath@@Base>
   1a39c:	cmp	r0, #0
   1a3a0:	bne	1a35c <fixInstallPaths@@Base+0x60>
   1a3a4:	mov	r1, r7
   1a3a8:	mov	r2, #5
   1a3ac:	bl	f9bc <dcgettext@plt>
   1a3b0:	ldr	r3, [r4, #-4]
   1a3b4:	mov	r1, r6
   1a3b8:	ldr	r3, [r3]
   1a3bc:	mov	r2, r0
   1a3c0:	mov	r0, #4
   1a3c4:	bl	1c634 <logMessage@@Base>
   1a3c8:	ldr	r3, [r4], #4
   1a3cc:	cmp	r3, #0
   1a3d0:	bne	1a368 <fixInstallPaths@@Base+0x6c>
   1a3d4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a3d8:	mov	r1, r9
   1a3dc:	mov	r2, #5
   1a3e0:	bl	f9bc <dcgettext@plt>
   1a3e4:	ldr	r3, [r4, #-4]
   1a3e8:	mov	r1, r8
   1a3ec:	ldr	r3, [r3]
   1a3f0:	mov	r2, r0
   1a3f4:	mov	r0, #4
   1a3f8:	bl	1c634 <logMessage@@Base>
   1a3fc:	b	1a35c <fixInstallPaths@@Base+0x60>
   1a400:	ldr	r2, [pc, #116]	; 1a47c <fixInstallPaths@@Base+0x180>
   1a404:	ldr	r3, [r3, r2]
   1a408:	ldr	r0, [r3]
   1a40c:	bl	1c850 <getPathDirectory@@Base>
   1a410:	cmp	r0, #0
   1a414:	mov	r2, r0
   1a418:	str	r0, [r5, #4]
   1a41c:	beq	1a434 <fixInstallPaths@@Base+0x138>
   1a420:	ldr	r1, [pc, #88]	; 1a480 <fixInstallPaths@@Base+0x184>
   1a424:	mov	r0, #7
   1a428:	add	r1, pc, r1
   1a42c:	bl	1c634 <logMessage@@Base>
   1a430:	b	1a320 <fixInstallPaths@@Base+0x24>
   1a434:	ldr	r1, [pc, #72]	; 1a484 <fixInstallPaths@@Base+0x188>
   1a438:	mov	r2, #5
   1a43c:	add	r1, pc, r1
   1a440:	bl	f9bc <dcgettext@plt>
   1a444:	mov	r1, r0
   1a448:	mov	r0, #4
   1a44c:	bl	1c634 <logMessage@@Base>
   1a450:	ldr	r2, [pc, #48]	; 1a488 <fixInstallPaths@@Base+0x18c>
   1a454:	add	r2, pc, r2
   1a458:	str	r2, [r5, #4]
   1a45c:	b	1a420 <fixInstallPaths@@Base+0x124>
   1a460:	strdeq	r9, [r5], -r0
   1a464:	andeq	r8, r5, r8, ror #14
   1a468:	andeq	r9, r5, r0, asr #5
   1a46c:	andeq	r4, r3, r0, lsl #15
   1a470:	andeq	r4, r3, r8, ror #31
   1a474:	andeq	r4, r3, ip, asr r7
   1a478:	andeq	r4, r3, r0, ror #31
   1a47c:	andeq	r0, r0, r4, lsl r5
   1a480:	andeq	r4, r3, ip, ror #12
   1a484:	andeq	r4, r3, r4, lsr r6
   1a488:	andeq	r5, r3, ip, ror #22

0001a48c <fixInstallPath@@Base>:
   1a48c:	ldr	r3, [pc, #72]	; 1a4dc <fixInstallPath@@Base+0x50>
   1a490:	mov	r2, #0
   1a494:	ldr	r1, [pc, #68]	; 1a4e0 <fixInstallPath@@Base+0x54>
   1a498:	add	r3, pc, r3
   1a49c:	push	{r4, lr}
   1a4a0:	sub	sp, sp, #16
   1a4a4:	ldr	r4, [r3, r1]
   1a4a8:	str	r0, [sp, #4]
   1a4ac:	add	r0, sp, #4
   1a4b0:	str	r2, [sp, #8]
   1a4b4:	ldr	r3, [r4]
   1a4b8:	str	r3, [sp, #12]
   1a4bc:	bl	1a2fc <fixInstallPaths@@Base>
   1a4c0:	ldr	r2, [sp, #12]
   1a4c4:	ldr	r3, [r4]
   1a4c8:	cmp	r2, r3
   1a4cc:	bne	1a4d8 <fixInstallPath@@Base+0x4c>
   1a4d0:	add	sp, sp, #16
   1a4d4:	pop	{r4, pc}
   1a4d8:	bl	f950 <__stack_chk_fail@plt>
   1a4dc:	andeq	r8, r5, r0, ror #11
   1a4e0:			; <UNDEFINED> instruction: 0x000003b4

0001a4e4 <createPidFile@@Base>:
   1a4e4:	ldr	r3, [pc, #700]	; 1a7a8 <createPidFile@@Base+0x2c4>
   1a4e8:	ldr	r2, [pc, #700]	; 1a7ac <createPidFile@@Base+0x2c8>
   1a4ec:	add	r3, pc, r3
   1a4f0:	push	{r4, r5, r6, r7, r8, lr}
   1a4f4:	subs	r6, r1, #0
   1a4f8:	ldr	r5, [r3, r2]
   1a4fc:	sub	sp, sp, #56	; 0x38
   1a500:	mov	r4, r0
   1a504:	ldr	r3, [r5]
   1a508:	str	r3, [sp, #52]	; 0x34
   1a50c:	beq	1a58c <createPidFile@@Base+0xa8>
   1a510:	cmp	r4, #0
   1a514:	beq	1a584 <createPidFile@@Base+0xa0>
   1a518:	ldrb	r3, [r4]
   1a51c:	cmp	r3, #0
   1a520:	bne	1a540 <createPidFile@@Base+0x5c>
   1a524:	ldr	r2, [sp, #52]	; 0x34
   1a528:	mov	r0, r3
   1a52c:	ldr	r3, [r5]
   1a530:	cmp	r2, r3
   1a534:	bne	1a7a4 <createPidFile@@Base+0x2c0>
   1a538:	add	sp, sp, #56	; 0x38
   1a53c:	pop	{r4, r5, r6, r7, r8, pc}
   1a540:	mov	r0, r4
   1a544:	mov	r1, #66	; 0x42
   1a548:	mov	r2, #420	; 0x1a4
   1a54c:	bl	f8c0 <open@plt>
   1a550:	cmn	r0, #1
   1a554:	mov	r7, r0
   1a558:	beq	1a6ac <createPidFile@@Base+0x1c8>
   1a55c:	mov	r1, #1
   1a560:	bl	1d2f0 <acquireFileLock@@Base>
   1a564:	subs	r8, r0, #0
   1a568:	bne	1a598 <createPidFile@@Base+0xb4>
   1a56c:	bl	fca4 <__errno_location@plt>
   1a570:	ldr	r3, [r0]
   1a574:	cmp	r3, #38	; 0x26
   1a578:	beq	1a598 <createPidFile@@Base+0xb4>
   1a57c:	mov	r0, r7
   1a580:	bl	f764 <close@plt>
   1a584:	mov	r3, #0
   1a588:	b	1a524 <createPidFile@@Base+0x40>
   1a58c:	bl	1a938 <getProcessIdentifier@@Base>
   1a590:	mov	r6, r0
   1a594:	b	1a510 <createPidFile@@Base+0x2c>
   1a598:	add	r4, sp, #20
   1a59c:	mov	r0, r7
   1a5a0:	mov	r2, #32
   1a5a4:	mov	r1, r4
   1a5a8:	bl	f788 <read@plt>
   1a5ac:	cmn	r0, #1
   1a5b0:	mov	r3, r0
   1a5b4:	beq	1a768 <createPidFile@@Base+0x284>
   1a5b8:	cmp	r0, #32
   1a5bc:	add	r2, sp, #56	; 0x38
   1a5c0:	ldr	r1, [pc, #488]	; 1a7b0 <createPidFile@@Base+0x2cc>
   1a5c4:	mov	r0, r4
   1a5c8:	moveq	r3, #31
   1a5cc:	add	ip, r2, r3
   1a5d0:	add	r1, pc, r1
   1a5d4:	add	r2, sp, #16
   1a5d8:	add	r3, sp, #15
   1a5dc:	mov	lr, #0
   1a5e0:	strb	lr, [ip, #-36]	; 0xffffffdc
   1a5e4:	bl	fcd4 <sscanf@plt>
   1a5e8:	cmp	r0, #1
   1a5ec:	beq	1a728 <createPidFile@@Base+0x244>
   1a5f0:	cmp	r0, #2
   1a5f4:	beq	1a718 <createPidFile@@Base+0x234>
   1a5f8:	mov	r1, #0
   1a5fc:	mov	r0, r7
   1a600:	mov	r2, r1
   1a604:	bl	fa4c <lseek@plt>
   1a608:	cmn	r0, #1
   1a60c:	beq	1a77c <createPidFile@@Base+0x298>
   1a610:	mov	r0, r7
   1a614:	mov	r1, #0
   1a618:	bl	f440 <ftruncate@plt>
   1a61c:	cmn	r0, #1
   1a620:	beq	1a6f0 <createPidFile@@Base+0x20c>
   1a624:	ldr	ip, [pc, #392]	; 1a7b4 <createPidFile@@Base+0x2d0>
   1a628:	mov	r1, #32
   1a62c:	mov	r3, r1
   1a630:	mov	r2, #1
   1a634:	add	ip, pc, ip
   1a638:	str	r6, [sp, #4]
   1a63c:	str	ip, [sp]
   1a640:	mov	r0, r4
   1a644:	bl	fb60 <__snprintf_chk@plt>
   1a648:	mov	r1, r4
   1a64c:	mov	r2, r0
   1a650:	mov	r0, r7
   1a654:	bl	fbcc <write@plt>
   1a658:	cmn	r0, #1
   1a65c:	beq	1a790 <createPidFile@@Base+0x2ac>
   1a660:	mov	r4, #0
   1a664:	cmp	r8, #0
   1a668:	bne	1a75c <createPidFile@@Base+0x278>
   1a66c:	mov	r0, r7
   1a670:	bl	f764 <close@plt>
   1a674:	cmp	r4, #2
   1a678:	beq	1a704 <createPidFile@@Base+0x220>
   1a67c:	cmp	r4, #3
   1a680:	beq	1a584 <createPidFile@@Base+0xa0>
   1a684:	cmp	r4, #0
   1a688:	moveq	r3, #1
   1a68c:	beq	1a524 <createPidFile@@Base+0x40>
   1a690:	ldr	r1, [pc, #288]	; 1a7b8 <createPidFile@@Base+0x2d4>
   1a694:	mov	r2, r4
   1a698:	mov	r0, #4
   1a69c:	add	r1, pc, r1
   1a6a0:	bl	1c634 <logMessage@@Base>
   1a6a4:	mov	r3, #0
   1a6a8:	b	1a524 <createPidFile@@Base+0x40>
   1a6ac:	ldr	r1, [pc, #264]	; 1a7bc <createPidFile@@Base+0x2d8>
   1a6b0:	mov	r2, #5
   1a6b4:	mov	r0, #0
   1a6b8:	add	r1, pc, r1
   1a6bc:	bl	f9bc <dcgettext@plt>
   1a6c0:	mov	r6, r0
   1a6c4:	bl	fca4 <__errno_location@plt>
   1a6c8:	ldr	r0, [r0]
   1a6cc:	bl	f5c0 <strerror@plt>
   1a6d0:	ldr	r1, [pc, #232]	; 1a7c0 <createPidFile@@Base+0x2dc>
   1a6d4:	mov	r2, r6
   1a6d8:	mov	r3, r4
   1a6dc:	add	r1, pc, r1
   1a6e0:	str	r0, [sp]
   1a6e4:	mov	r0, #4
   1a6e8:	bl	1c634 <logMessage@@Base>
   1a6ec:	b	1a584 <createPidFile@@Base+0xa0>
   1a6f0:	ldr	r0, [pc, #204]	; 1a7c4 <createPidFile@@Base+0x2e0>
   1a6f4:	mov	r4, #3
   1a6f8:	add	r0, pc, r0
   1a6fc:	bl	1c6fc <logSystemError@@Base>
   1a700:	b	1a664 <createPidFile@@Base+0x180>
   1a704:	bl	fca4 <__errno_location@plt>
   1a708:	mov	r2, #17
   1a70c:	mov	r3, #0
   1a710:	str	r2, [r0]
   1a714:	b	1a524 <createPidFile@@Base+0x40>
   1a718:	ldrb	r3, [sp, #15]
   1a71c:	cmp	r3, #10
   1a720:	cmpne	r3, #13
   1a724:	bne	1a5f8 <createPidFile@@Base+0x114>
   1a728:	ldr	r0, [sp, #16]
   1a72c:	cmp	r0, r6
   1a730:	beq	1a660 <createPidFile@@Base+0x17c>
   1a734:	bl	1a93c <testProcessIdentifier@@Base>
   1a738:	cmp	r0, #0
   1a73c:	beq	1a5f8 <createPidFile@@Base+0x114>
   1a740:	ldr	r1, [pc, #128]	; 1a7c8 <createPidFile@@Base+0x2e4>
   1a744:	mov	r0, #3
   1a748:	ldr	r2, [sp, #16]
   1a74c:	mov	r4, #2
   1a750:	add	r1, pc, r1
   1a754:	bl	1c634 <logMessage@@Base>
   1a758:	b	1a664 <createPidFile@@Base+0x180>
   1a75c:	mov	r0, r7
   1a760:	bl	1d310 <releaseFileLock@@Base>
   1a764:	b	1a66c <createPidFile@@Base+0x188>
   1a768:	ldr	r0, [pc, #92]	; 1a7cc <createPidFile@@Base+0x2e8>
   1a76c:	mov	r4, #3
   1a770:	add	r0, pc, r0
   1a774:	bl	1c6fc <logSystemError@@Base>
   1a778:	b	1a664 <createPidFile@@Base+0x180>
   1a77c:	ldr	r0, [pc, #76]	; 1a7d0 <createPidFile@@Base+0x2ec>
   1a780:	mov	r4, #3
   1a784:	add	r0, pc, r0
   1a788:	bl	1c6fc <logSystemError@@Base>
   1a78c:	b	1a664 <createPidFile@@Base+0x180>
   1a790:	ldr	r0, [pc, #60]	; 1a7d4 <createPidFile@@Base+0x2f0>
   1a794:	mov	r4, #3
   1a798:	add	r0, pc, r0
   1a79c:	bl	1c6fc <logSystemError@@Base>
   1a7a0:	b	1a664 <createPidFile@@Base+0x180>
   1a7a4:	bl	f950 <__stack_chk_fail@plt>
   1a7a8:	andeq	r8, r5, ip, lsl #11
   1a7ac:			; <UNDEFINED> instruction: 0x000003b4
   1a7b0:	andeq	r4, r3, r0, lsl r5
   1a7b4:	andeq	r4, r3, r0, ror #9
   1a7b8:	andeq	r4, r3, r0, asr #9
   1a7bc:	andeq	r4, r3, r4, ror r4
   1a7c0:	andeq	r4, r3, r4, ror r4
   1a7c4:	andeq	r4, r3, r0, lsr #8
   1a7c8:	muleq	r3, r8, r3
   1a7cc:	muleq	r3, ip, r3
   1a7d0:	andeq	r4, r3, r0, lsr #7
   1a7d4:	andeq	r4, r3, ip, lsl r8

0001a7d8 <cancelProgram@@Base>:
   1a7d8:	ldr	r2, [pc, #260]	; 1a8e4 <cancelProgram@@Base+0x10c>
   1a7dc:	ldr	ip, [pc, #260]	; 1a8e8 <cancelProgram@@Base+0x110>
   1a7e0:	add	r2, pc, r2
   1a7e4:	ldr	r1, [pc, #256]	; 1a8ec <cancelProgram@@Base+0x114>
   1a7e8:	push	{r4, r5, r6, r7, r8, lr}
   1a7ec:	sub	sp, sp, #272	; 0x110
   1a7f0:	ldr	r4, [r2, ip]
   1a7f4:	add	r1, pc, r1
   1a7f8:	mov	r6, r0
   1a7fc:	ldr	r2, [r4]
   1a800:	str	r2, [sp, #268]	; 0x10c
   1a804:	bl	f77c <fopen@plt>
   1a808:	subs	r5, r0, #0
   1a80c:	beq	1a89c <cancelProgram@@Base+0xc4>
   1a810:	add	r0, sp, #12
   1a814:	mov	r1, #256	; 0x100
   1a818:	mov	r2, r5
   1a81c:	bl	faf4 <fgets@plt>
   1a820:	subs	r7, r0, #0
   1a824:	beq	1a878 <cancelProgram@@Base+0xa0>
   1a828:	add	r1, sp, #8
   1a82c:	mov	r2, #10
   1a830:	bl	f4e8 <strtol@plt>
   1a834:	ldr	r3, [sp, #8]
   1a838:	ldrb	r6, [r3]
   1a83c:	cmp	r6, #0
   1a840:	mov	r8, r0
   1a844:	beq	1a868 <cancelProgram@@Base+0x90>
   1a848:	bl	fa64 <__ctype_b_loc@plt>
   1a84c:	lsl	r6, r6, #1
   1a850:	ldr	r3, [r0]
   1a854:	ldrh	r7, [r3, r6]
   1a858:	and	r7, r7, #8192	; 0x2000
   1a85c:	uxth	r7, r7
   1a860:	cmp	r7, #0
   1a864:	beq	1a878 <cancelProgram@@Base+0xa0>
   1a868:	mov	r0, r8
   1a86c:	bl	1a954 <cancelProcess@@Base>
   1a870:	adds	r7, r0, #0
   1a874:	movne	r7, #1
   1a878:	mov	r0, r5
   1a87c:	bl	fbc0 <fclose@plt>
   1a880:	ldr	r2, [sp, #268]	; 0x10c
   1a884:	mov	r0, r7
   1a888:	ldr	r3, [r4]
   1a88c:	cmp	r2, r3
   1a890:	bne	1a8e0 <cancelProgram@@Base+0x108>
   1a894:	add	sp, sp, #272	; 0x110
   1a898:	pop	{r4, r5, r6, r7, r8, pc}
   1a89c:	ldr	r1, [pc, #76]	; 1a8f0 <cancelProgram@@Base+0x118>
   1a8a0:	mov	r2, #5
   1a8a4:	mov	r7, r5
   1a8a8:	add	r1, pc, r1
   1a8ac:	bl	f9bc <dcgettext@plt>
   1a8b0:	mov	r8, r0
   1a8b4:	bl	fca4 <__errno_location@plt>
   1a8b8:	ldr	r0, [r0]
   1a8bc:	bl	f5c0 <strerror@plt>
   1a8c0:	ldr	r1, [pc, #44]	; 1a8f4 <cancelProgram@@Base+0x11c>
   1a8c4:	mov	r2, r8
   1a8c8:	mov	r3, r6
   1a8cc:	add	r1, pc, r1
   1a8d0:	str	r0, [sp]
   1a8d4:	mov	r0, #3
   1a8d8:	bl	1c634 <logMessage@@Base>
   1a8dc:	b	1a880 <cancelProgram@@Base+0xa8>
   1a8e0:	bl	f950 <__stack_chk_fail@plt>
   1a8e4:	muleq	r5, r8, r2
   1a8e8:			; <UNDEFINED> instruction: 0x000003b4
   1a8ec:	muleq	r3, r8, r8
   1a8f0:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1a8f4:	andeq	r4, r3, r4, lsl #5

0001a8f8 <onProgramExit@@Base>:
   1a8f8:	push	{r4, lr}
   1a8fc:	mov	r4, r0
   1a900:	mov	r0, #8
   1a904:	bl	fb48 <malloc@plt>
   1a908:	cmp	r0, #0
   1a90c:	beq	1a92c <onProgramExit@@Base+0x34>
   1a910:	ldr	r2, [pc, #28]	; 1a934 <onProgramExit@@Base+0x3c>
   1a914:	str	r4, [r0, #4]
   1a918:	add	r2, pc, r2
   1a91c:	ldr	r1, [r2]
   1a920:	str	r0, [r2]
   1a924:	str	r1, [r0]
   1a928:	pop	{r4, pc}
   1a92c:	pop	{r4, lr}
   1a930:	b	1c740 <logMallocError@@Base>
   1a934:	andeq	r8, r5, r4, ror #25

0001a938 <getProcessIdentifier@@Base>:
   1a938:	b	f458 <getpid@plt>

0001a93c <testProcessIdentifier@@Base>:
   1a93c:	push	{r3, lr}
   1a940:	mov	r1, #0
   1a944:	bl	f824 <kill@plt>
   1a948:	adds	r0, r0, #1
   1a94c:	movne	r0, #1
   1a950:	pop	{r3, pc}

0001a954 <cancelProcess@@Base>:
   1a954:	push	{r3, lr}
   1a958:	mov	r1, #15
   1a95c:	bl	f824 <kill@plt>
   1a960:	adds	r0, r0, #1
   1a964:	movne	r0, #1
   1a968:	pop	{r3, pc}
   1a96c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a970:	mov	r4, r0
   1a974:	ldr	r5, [r0]
   1a978:	sub	sp, sp, #20
   1a97c:	mov	r6, r1
   1a980:	mov	r8, r2
   1a984:	cmp	r5, #0
   1a988:	beq	1aa24 <cancelProcess@@Base+0xd0>
   1a98c:	mov	r0, r5
   1a990:	bl	fb54 <strlen@plt>
   1a994:	mov	r7, r0
   1a998:	mov	r0, r6
   1a99c:	bl	fb54 <strlen@plt>
   1a9a0:	add	r0, r7, r0
   1a9a4:	add	r7, r0, #2
   1a9a8:	mov	r0, r7
   1a9ac:	bl	fb48 <malloc@plt>
   1a9b0:	subs	r9, r0, #0
   1a9b4:	beq	1aa3c <cancelProcess@@Base+0xe8>
   1a9b8:	cmp	r8, #0
   1a9bc:	bne	1a9fc <cancelProcess@@Base+0xa8>
   1a9c0:	ldr	ip, [pc, #128]	; 1aa48 <cancelProcess@@Base+0xf4>
   1a9c4:	mov	r1, r7
   1a9c8:	str	r5, [sp, #4]
   1a9cc:	mov	r2, #1
   1a9d0:	add	ip, pc, ip
   1a9d4:	str	r6, [sp, #8]
   1a9d8:	mvn	r3, #0
   1a9dc:	str	ip, [sp]
   1a9e0:	bl	fb60 <__snprintf_chk@plt>
   1a9e4:	ldr	r0, [r4]
   1a9e8:	bl	f4f4 <free@plt>
   1a9ec:	mov	r0, #1
   1a9f0:	str	r9, [r4]
   1a9f4:	add	sp, sp, #20
   1a9f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a9fc:	ldr	ip, [pc, #72]	; 1aa4c <cancelProcess@@Base+0xf8>
   1aa00:	mov	r1, r7
   1aa04:	str	r6, [sp, #4]
   1aa08:	mov	r2, #1
   1aa0c:	add	ip, pc, ip
   1aa10:	str	r5, [sp, #8]
   1aa14:	mvn	r3, #0
   1aa18:	str	ip, [sp]
   1aa1c:	bl	fb60 <__snprintf_chk@plt>
   1aa20:	b	1a9e4 <cancelProcess@@Base+0x90>
   1aa24:	mov	r0, r1
   1aa28:	bl	f740 <__strdup@plt>
   1aa2c:	cmp	r0, #0
   1aa30:	str	r0, [r4]
   1aa34:	movne	r0, #1
   1aa38:	bne	1a9f4 <cancelProcess@@Base+0xa0>
   1aa3c:	bl	1c740 <logMallocError@@Base>
   1aa40:	mov	r0, #0
   1aa44:	b	1a9f4 <cancelProcess@@Base+0xa0>
   1aa48:	andeq	r4, r3, r0, asr #3
   1aa4c:	andeq	r4, r3, r4, lsl #3
   1aa50:	ldr	ip, [pc, #468]	; 1ac2c <cancelProcess@@Base+0x2d8>
   1aa54:	push	{r4, r5, r6, r7, r8, r9, lr}
   1aa58:	add	ip, pc, ip
   1aa5c:	ldr	r5, [pc, #460]	; 1ac30 <cancelProcess@@Base+0x2dc>
   1aa60:	sub	sp, sp, #20
   1aa64:	ldrb	r6, [r1, #8]
   1aa68:	mov	r4, r1
   1aa6c:	mov	r7, r0
   1aa70:	mov	r8, r2
   1aa74:	ldr	r5, [ip, r5]
   1aa78:	add	r6, r0, r6
   1aa7c:	ldrb	r3, [r6, #8]
   1aa80:	ldr	ip, [r5]
   1aa84:	cmp	r3, #0
   1aa88:	str	ip, [sp, #12]
   1aa8c:	bne	1aad0 <cancelProcess@@Base+0x17c>
   1aa90:	mov	r9, #1
   1aa94:	strb	r9, [r6, #8]
   1aa98:	ldr	r3, [r1, #4]
   1aa9c:	ldr	r6, [r1, #12]
   1aaa0:	cmp	r3, #0
   1aaa4:	beq	1ab2c <cancelProcess@@Base+0x1d8>
   1aaa8:	cmp	r6, #0
   1aaac:	beq	1aad0 <cancelProcess@@Base+0x17c>
   1aab0:	ldrb	r3, [r1, #10]
   1aab4:	tst	r3, #2
   1aab8:	beq	1ab08 <cancelProcess@@Base+0x1b4>
   1aabc:	cmp	r2, #0
   1aac0:	beq	1aad0 <cancelProcess@@Base+0x17c>
   1aac4:	ldrb	r3, [r2]
   1aac8:	cmp	r3, #0
   1aacc:	bne	1aaec <cancelProcess@@Base+0x198>
   1aad0:	mov	r0, #1
   1aad4:	ldr	r1, [sp, #12]
   1aad8:	ldr	r3, [r5]
   1aadc:	cmp	r1, r3
   1aae0:	bne	1ac28 <cancelProcess@@Base+0x2d4>
   1aae4:	add	sp, sp, #20
   1aae8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1aaec:	mov	r1, r2
   1aaf0:	mov	r0, r6
   1aaf4:	mov	r2, r9
   1aaf8:	bl	1a96c <cancelProcess@@Base+0x18>
   1aafc:	cmp	r0, #0
   1ab00:	beq	1aad4 <cancelProcess@@Base+0x180>
   1ab04:	b	1aad0 <cancelProcess@@Base+0x17c>
   1ab08:	mov	r0, r2
   1ab0c:	bl	f740 <__strdup@plt>
   1ab10:	cmp	r0, #0
   1ab14:	str	r0, [r6]
   1ab18:	bne	1aad0 <cancelProcess@@Base+0x17c>
   1ab1c:	str	r0, [sp, #4]
   1ab20:	bl	1c740 <logMallocError@@Base>
   1ab24:	ldr	r0, [sp, #4]
   1ab28:	b	1aad4 <cancelProcess@@Base+0x180>
   1ab2c:	cmp	r6, #0
   1ab30:	beq	1aad0 <cancelProcess@@Base+0x17c>
   1ab34:	ldr	r1, [pc, #248]	; 1ac34 <cancelProcess@@Base+0x2e0>
   1ab38:	mov	r0, r2
   1ab3c:	add	r1, pc, r1
   1ab40:	bl	f4c4 <strcasecmp@plt>
   1ab44:	cmp	r0, #0
   1ab48:	streq	r9, [r6]
   1ab4c:	moveq	r0, r9
   1ab50:	beq	1aad4 <cancelProcess@@Base+0x180>
   1ab54:	ldr	r1, [pc, #220]	; 1ac38 <cancelProcess@@Base+0x2e4>
   1ab58:	mov	r0, r8
   1ab5c:	add	r1, pc, r1
   1ab60:	bl	f4c4 <strcasecmp@plt>
   1ab64:	cmp	r0, #0
   1ab68:	streq	r0, [r6]
   1ab6c:	moveq	r0, r9
   1ab70:	beq	1aad4 <cancelProcess@@Base+0x180>
   1ab74:	ldrb	r3, [r4, #10]
   1ab78:	and	r3, r3, #2
   1ab7c:	ands	r0, r3, #255	; 0xff
   1ab80:	beq	1abb0 <cancelProcess@@Base+0x25c>
   1ab84:	add	r0, sp, #8
   1ab88:	mov	r1, r8
   1ab8c:	bl	1ddfc <isInteger@@Base>
   1ab90:	cmp	r0, #0
   1ab94:	beq	1abec <cancelProcess@@Base+0x298>
   1ab98:	ldr	r3, [sp, #8]
   1ab9c:	cmp	r3, #0
   1aba0:	blt	1abec <cancelProcess@@Base+0x298>
   1aba4:	ldr	r2, [r4, #12]
   1aba8:	str	r3, [r2]
   1abac:	b	1aad0 <cancelProcess@@Base+0x17c>
   1abb0:	ldr	r1, [pc, #132]	; 1ac3c <cancelProcess@@Base+0x2e8>
   1abb4:	mov	r2, #5
   1abb8:	add	r1, pc, r1
   1abbc:	bl	f9bc <dcgettext@plt>
   1abc0:	ldr	r1, [pc, #120]	; 1ac40 <cancelProcess@@Base+0x2ec>
   1abc4:	mov	r3, r8
   1abc8:	add	r1, pc, r1
   1abcc:	mov	r2, r0
   1abd0:	mov	r0, #3
   1abd4:	bl	1c634 <logMessage@@Base>
   1abd8:	ldrb	r3, [r7, #264]	; 0x108
   1abdc:	mov	r0, r9
   1abe0:	orr	r3, r3, #2
   1abe4:	strb	r3, [r7, #264]	; 0x108
   1abe8:	b	1aad4 <cancelProcess@@Base+0x180>
   1abec:	ldr	r1, [pc, #80]	; 1ac44 <cancelProcess@@Base+0x2f0>
   1abf0:	mov	r2, #5
   1abf4:	mov	r0, #0
   1abf8:	add	r1, pc, r1
   1abfc:	bl	f9bc <dcgettext@plt>
   1ac00:	ldr	r1, [pc, #64]	; 1ac48 <cancelProcess@@Base+0x2f4>
   1ac04:	mov	r3, r8
   1ac08:	add	r1, pc, r1
   1ac0c:	mov	r2, r0
   1ac10:	mov	r0, #3
   1ac14:	bl	1c634 <logMessage@@Base>
   1ac18:	ldrb	r3, [r7, #264]	; 0x108
   1ac1c:	orr	r3, r3, #2
   1ac20:	strb	r3, [r7, #264]	; 0x108
   1ac24:	b	1aad0 <cancelProcess@@Base+0x17c>
   1ac28:	bl	f950 <__stack_chk_fail@plt>
   1ac2c:	andeq	r8, r5, r0, lsr #32
   1ac30:			; <UNDEFINED> instruction: 0x000003b4
   1ac34:			; <UNDEFINED> instruction: 0x000364b4
   1ac38:	muleq	r3, r4, r6
   1ac3c:	andeq	r3, r3, r0, ror #31
   1ac40:	andeq	r4, r3, ip, ror #14
   1ac44:			; <UNDEFINED> instruction: 0x00033fb8
   1ac48:	andeq	r4, r3, ip, lsr #14
   1ac4c:	push	{r4, r5, r6, r7, r8, lr}
   1ac50:	mov	r5, r0
   1ac54:	ldr	ip, [r0, #4]
   1ac58:	cmp	ip, #0
   1ac5c:	popeq	{r4, r5, r6, r7, r8, pc}
   1ac60:	ldr	r7, [pc, #120]	; 1ace0 <cancelProcess@@Base+0x38c>
   1ac64:	rsbs	r8, r1, #1
   1ac68:	ldr	r6, [pc, #116]	; 1ace4 <cancelProcess@@Base+0x390>
   1ac6c:	mov	r3, #0
   1ac70:	add	r7, pc, r7
   1ac74:	movcc	r8, #0
   1ac78:	add	r6, pc, r6
   1ac7c:	mov	r4, r3
   1ac80:	ldr	r2, [r5]
   1ac84:	rsb	r3, r3, r3, lsl #3
   1ac88:	mov	r0, r5
   1ac8c:	add	r4, r4, #1
   1ac90:	add	r3, r2, r3, lsl #2
   1ac94:	ldrb	r2, [r3, #10]
   1ac98:	mov	r1, r3
   1ac9c:	ubfx	r2, r2, #2, #1
   1aca0:	cmp	r8, r2
   1aca4:	beq	1acbc <cancelProcess@@Base+0x368>
   1aca8:	ldr	r2, [r3, #16]
   1acac:	cmp	r2, #0
   1acb0:	beq	1accc <cancelProcess@@Base+0x378>
   1acb4:	bl	1aa50 <cancelProcess@@Base+0xfc>
   1acb8:	ldr	ip, [r5, #4]
   1acbc:	cmp	r4, ip
   1acc0:	mov	r3, r4
   1acc4:	bcc	1ac80 <cancelProcess@@Base+0x32c>
   1acc8:	pop	{r4, r5, r6, r7, r8, pc}
   1accc:	ldr	r3, [r3, #4]
   1acd0:	cmp	r3, #0
   1acd4:	moveq	r2, r7
   1acd8:	movne	r2, r6
   1acdc:	b	1acb4 <cancelProcess@@Base+0x360>
   1ace0:	andeq	r7, r3, r0, lsl #11
   1ace4:	andeq	r4, r3, ip, lsl #1
   1ace8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1acec:	mov	r9, r1
   1acf0:	sub	sp, sp, #12
   1acf4:	mov	r1, #35	; 0x23
   1acf8:	mov	r8, r0
   1acfc:	bl	fdd0 <strchr@plt>
   1ad00:	ldr	r1, [pc, #620]	; 1af74 <cancelProcess@@Base+0x620>
   1ad04:	add	r1, pc, r1
   1ad08:	cmp	r0, #0
   1ad0c:	movne	r3, #0
   1ad10:	strbne	r3, [r0]
   1ad14:	mov	r0, r8
   1ad18:	bl	f608 <strtok@plt>
   1ad1c:	subs	fp, r0, #0
   1ad20:	beq	1ae8c <cancelProcess@@Base+0x538>
   1ad24:	ldr	r3, [r9]
   1ad28:	ldr	sl, [r3, #4]
   1ad2c:	cmp	sl, #0
   1ad30:	beq	1ad80 <cancelProcess@@Base+0x42c>
   1ad34:	ldr	r7, [r3]
   1ad38:	mov	r5, #0
   1ad3c:	mov	r4, r5
   1ad40:	rsb	r2, r5, r5, lsl #3
   1ad44:	mov	r0, fp
   1ad48:	add	r4, r4, #1
   1ad4c:	add	r6, r7, r2, lsl #2
   1ad50:	ldrb	ip, [r6, #10]
   1ad54:	tst	ip, #4
   1ad58:	beq	1ad74 <cancelProcess@@Base+0x420>
   1ad5c:	ldr	r1, [r7, r2, lsl #2]
   1ad60:	cmp	r1, #0
   1ad64:	beq	1ad74 <cancelProcess@@Base+0x420>
   1ad68:	bl	f4c4 <strcasecmp@plt>
   1ad6c:	subs	ip, r0, #0
   1ad70:	beq	1add4 <cancelProcess@@Base+0x480>
   1ad74:	cmp	r4, sl
   1ad78:	mov	r5, r4
   1ad7c:	bne	1ad40 <cancelProcess@@Base+0x3ec>
   1ad80:	ldr	r1, [pc, #496]	; 1af78 <cancelProcess@@Base+0x624>
   1ad84:	mov	r2, #5
   1ad88:	mov	r0, #0
   1ad8c:	mov	ip, #1
   1ad90:	add	r1, pc, r1
   1ad94:	str	ip, [sp, #4]
   1ad98:	bl	f9bc <dcgettext@plt>
   1ad9c:	ldr	r1, [pc, #472]	; 1af7c <cancelProcess@@Base+0x628>
   1ada0:	mov	r3, r8
   1ada4:	add	r1, pc, r1
   1ada8:	mov	r2, r0
   1adac:	mov	r0, #3
   1adb0:	bl	1c634 <logMessage@@Base>
   1adb4:	ldr	r3, [r9]
   1adb8:	ldrb	r2, [r3, #264]	; 0x108
   1adbc:	orr	r2, r2, #2
   1adc0:	strb	r2, [r3, #264]	; 0x108
   1adc4:	ldr	ip, [sp, #4]
   1adc8:	mov	r0, ip
   1adcc:	add	sp, sp, #12
   1add0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1add4:	ldr	r4, [pc, #420]	; 1af80 <cancelProcess@@Base+0x62c>
   1add8:	str	ip, [sp, #4]
   1addc:	add	r4, pc, r4
   1ade0:	mov	r1, r4
   1ade4:	bl	f608 <strtok@plt>
   1ade8:	ldr	ip, [sp, #4]
   1adec:	subs	r7, r0, #0
   1adf0:	beq	1af4c <cancelProcess@@Base+0x5f8>
   1adf4:	mov	r0, ip
   1adf8:	mov	r1, r4
   1adfc:	str	ip, [sp, #4]
   1ae00:	bl	f608 <strtok@plt>
   1ae04:	ldr	ip, [sp, #4]
   1ae08:	cmp	r0, #0
   1ae0c:	beq	1ae9c <cancelProcess@@Base+0x548>
   1ae10:	mov	r0, #0
   1ae14:	mov	r1, r4
   1ae18:	bl	f608 <strtok@plt>
   1ae1c:	cmp	r0, #0
   1ae20:	bne	1ae10 <cancelProcess@@Base+0x4bc>
   1ae24:	ldr	r1, [pc, #344]	; 1af84 <cancelProcess@@Base+0x630>
   1ae28:	mov	r2, #5
   1ae2c:	add	r1, pc, r1
   1ae30:	bl	f9bc <dcgettext@plt>
   1ae34:	ldr	r1, [pc, #332]	; 1af88 <cancelProcess@@Base+0x634>
   1ae38:	mov	r3, r8
   1ae3c:	add	r1, pc, r1
   1ae40:	mov	r2, r0
   1ae44:	mov	r0, #3
   1ae48:	bl	1c634 <logMessage@@Base>
   1ae4c:	ldr	r3, [r9]
   1ae50:	mov	ip, #1
   1ae54:	mov	r0, ip
   1ae58:	ldrb	r2, [r3, #264]	; 0x108
   1ae5c:	orr	r2, r2, #2
   1ae60:	strb	r2, [r3, #264]	; 0x108
   1ae64:	add	sp, sp, #12
   1ae68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae6c:	ldrb	r3, [r7]
   1ae70:	cmp	r3, #0
   1ae74:	beq	1ae8c <cancelProcess@@Base+0x538>
   1ae78:	mov	r2, ip
   1ae7c:	mov	r1, r7
   1ae80:	bl	1a96c <cancelProcess@@Base+0x18>
   1ae84:	subs	ip, r0, #0
   1ae88:	beq	1adc8 <cancelProcess@@Base+0x474>
   1ae8c:	mov	ip, #1
   1ae90:	mov	r0, ip
   1ae94:	add	sp, sp, #12
   1ae98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae9c:	ldr	r4, [r9, #4]
   1aea0:	lsl	sl, r5, #2
   1aea4:	add	r0, r4, sl
   1aea8:	ldr	r3, [r4, r5, lsl #2]
   1aeac:	cmp	r3, #0
   1aeb0:	beq	1af20 <cancelProcess@@Base+0x5cc>
   1aeb4:	ldr	r3, [r6, #4]
   1aeb8:	cmp	r3, #0
   1aebc:	beq	1aecc <cancelProcess@@Base+0x578>
   1aec0:	ldrb	r3, [r6, #10]
   1aec4:	tst	r3, #2
   1aec8:	bne	1ae6c <cancelProcess@@Base+0x518>
   1aecc:	ldr	r1, [pc, #184]	; 1af8c <cancelProcess@@Base+0x638>
   1aed0:	mov	r2, #5
   1aed4:	mov	r0, #0
   1aed8:	str	ip, [sp, #4]
   1aedc:	add	r1, pc, r1
   1aee0:	bl	f9bc <dcgettext@plt>
   1aee4:	ldr	r1, [pc, #164]	; 1af90 <cancelProcess@@Base+0x63c>
   1aee8:	mov	r3, r8
   1aeec:	add	r1, pc, r1
   1aef0:	mov	r2, r0
   1aef4:	mov	r0, #3
   1aef8:	bl	1c634 <logMessage@@Base>
   1aefc:	ldr	r3, [r9]
   1af00:	ldrb	r2, [r3, #264]	; 0x108
   1af04:	orr	r2, r2, #2
   1af08:	strb	r2, [r3, #264]	; 0x108
   1af0c:	ldr	r0, [r4, sl]
   1af10:	bl	f4f4 <free@plt>
   1af14:	mov	r3, #0
   1af18:	str	r3, [r4, sl]
   1af1c:	ldr	ip, [sp, #4]
   1af20:	mov	r0, r7
   1af24:	str	ip, [sp, #4]
   1af28:	bl	f740 <__strdup@plt>
   1af2c:	cmp	r0, #0
   1af30:	str	r0, [r4, sl]
   1af34:	ldr	ip, [sp, #4]
   1af38:	bne	1ae8c <cancelProcess@@Base+0x538>
   1af3c:	str	ip, [sp, #4]
   1af40:	bl	1c740 <logMallocError@@Base>
   1af44:	ldr	ip, [sp, #4]
   1af48:	b	1adc8 <cancelProcess@@Base+0x474>
   1af4c:	ldr	r1, [pc, #64]	; 1af94 <cancelProcess@@Base+0x640>
   1af50:	mov	r2, #5
   1af54:	add	r1, pc, r1
   1af58:	bl	f9bc <dcgettext@plt>
   1af5c:	ldr	r1, [pc, #52]	; 1af98 <cancelProcess@@Base+0x644>
   1af60:	mov	r3, r8
   1af64:	add	r1, pc, r1
   1af68:	mov	r2, r0
   1af6c:	mov	r0, #3
   1af70:	b	1ae48 <cancelProcess@@Base+0x4f4>
   1af74:	andeq	r3, r3, r4, asr #29
   1af78:	ldrdeq	r3, [r3], -r4
   1af7c:	muleq	r3, r0, r5
   1af80:	andeq	r3, r3, ip, ror #27
   1af84:	ldrdeq	r3, [r3], -r4
   1af88:	strdeq	r4, [r3], -r8
   1af8c:	andeq	r3, r3, r4, asr sp
   1af90:	andeq	r4, r3, r8, asr #8
   1af94:	andeq	r3, r3, r8, ror ip
   1af98:	ldrdeq	r4, [r3], -r0

0001af9c <processOptions@@Base>:
   1af9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afa0:	add	fp, sp, #32
   1afa4:	ldr	r8, [pc, #4068]	; 1bf90 <processOptions@@Base+0xff4>
   1afa8:	sub	sp, sp, #1680	; 0x690
   1afac:	sub	sp, sp, #4
   1afb0:	ldr	r3, [pc, #4060]	; 1bf94 <processOptions@@Base+0xff8>
   1afb4:	add	r8, pc, r8
   1afb8:	sub	r5, fp, #1584	; 0x630
   1afbc:	str	r0, [fp, #-1648]	; 0xfffff990
   1afc0:	sub	r5, r5, #4
   1afc4:	str	r5, [fp, #-1652]	; 0xfffff98c
   1afc8:	ldr	r3, [r8, r3]
   1afcc:	mov	r9, r1
   1afd0:	mov	r0, r5
   1afd4:	mov	r1, #0
   1afd8:	mov	sl, r2
   1afdc:	mov	r2, #268	; 0x10c
   1afe0:	str	r3, [fp, #-1668]	; 0xfffff97c
   1afe4:	ldr	r3, [r3]
   1afe8:	str	r3, [fp, #-40]	; 0xffffffd8
   1afec:	bl	f6b0 <memset@plt>
   1aff0:	ldr	r5, [fp, #-1648]	; 0xfffff990
   1aff4:	sub	r2, fp, #1328	; 0x530
   1aff8:	sub	r1, fp, #1584	; 0x630
   1affc:	add	r2, r2, #3
   1b000:	sub	r1, r1, #4
   1b004:	ldr	ip, [r5]
   1b008:	add	r3, r1, #7
   1b00c:	ldr	r0, [r5, #4]
   1b010:	mov	r1, #0
   1b014:	str	ip, [fp, #-1588]	; 0xfffff9cc
   1b018:	str	r0, [fp, #-1584]	; 0xfffff9d0
   1b01c:	strb	r1, [r3, #1]!
   1b020:	cmp	r3, r2
   1b024:	bne	1b01c <processOptions@@Base+0x80>
   1b028:	ldr	r1, [sl]
   1b02c:	ldr	r0, [r9]
   1b030:	str	sp, [fp, #-1672]	; 0xfffff978
   1b034:	bl	1a01c <beginProgram@@Base>
   1b038:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1b03c:	ldr	r5, [fp, #-1648]	; 0xfffff990
   1b040:	add	r2, r3, #1
   1b044:	cmp	r3, #0
   1b048:	lsl	r2, r2, #1
   1b04c:	ldr	r5, [r5, #24]
   1b050:	add	r1, r2, #7
   1b054:	bic	r1, r1, #7
   1b058:	lsl	r2, r2, #4
   1b05c:	sub	sp, sp, r1
   1b060:	sub	r2, r2, #8
   1b064:	add	ip, sp, #24
   1b068:	sub	sp, sp, r2
   1b06c:	str	r5, [fp, #-1660]	; 0xfffff984
   1b070:	add	r5, sp, #24
   1b074:	str	ip, [fp, #-1632]	; 0xfffff9a0
   1b078:	str	r5, [fp, #-1664]	; 0xfffff980
   1b07c:	beq	1c048 <processOptions@@Base+0x10ac>
   1b080:	ldr	r5, [pc, #3856]	; 1bf98 <processOptions@@Base+0xffc>
   1b084:	sub	r2, fp, #1600	; 0x640
   1b088:	ldr	ip, [pc, #3852]	; 1bf9c <processOptions@@Base+0x1000>
   1b08c:	sub	r2, r2, #4
   1b090:	add	r5, pc, r5
   1b094:	str	r5, [fp, #-1644]	; 0xfffff994
   1b098:	mov	r5, #0
   1b09c:	add	ip, pc, ip
   1b0a0:	sub	r2, r2, #8
   1b0a4:	str	ip, [fp, #-1624]	; 0xfffff9a8
   1b0a8:	str	r2, [fp, #-1628]	; 0xfffff9a4
   1b0ac:	mov	r1, r5
   1b0b0:	ldr	r4, [fp, #-1664]	; 0xfffff980
   1b0b4:	mov	ip, r5
   1b0b8:	str	r9, [fp, #-1636]	; 0xfffff99c
   1b0bc:	str	r8, [fp, #-1640]	; 0xfffff998
   1b0c0:	b	1b0dc <processOptions@@Base+0x140>
   1b0c4:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1b0c8:	add	r5, r5, #1
   1b0cc:	cmp	r5, r3
   1b0d0:	mov	r1, r5
   1b0d4:	bcs	1b19c <processOptions@@Base+0x200>
   1b0d8:	mov	r4, r7
   1b0dc:	ldr	r2, [fp, #-1588]	; 0xfffff9cc
   1b0e0:	rsb	r1, r1, r1, lsl #3
   1b0e4:	add	r6, r2, r1, lsl #2
   1b0e8:	ldr	r0, [r2, r1, lsl #2]
   1b0ec:	cmp	r0, #0
   1b0f0:	moveq	r7, r4
   1b0f4:	beq	1b0c8 <processOptions@@Base+0x12c>
   1b0f8:	str	r0, [r4]
   1b0fc:	add	r7, r4, #16
   1b100:	ldr	r3, [r6, #4]
   1b104:	str	ip, [r4, #8]
   1b108:	adds	r3, r3, #0
   1b10c:	movne	r3, #1
   1b110:	str	r3, [r4, #4]
   1b114:	ldrb	r3, [r6, #8]
   1b118:	str	r3, [r4, #12]
   1b11c:	ldr	r3, [r6, #4]
   1b120:	cmp	r3, #0
   1b124:	bne	1b0c4 <processOptions@@Base+0x128>
   1b128:	ldr	r3, [r6, #12]
   1b12c:	cmp	r3, #0
   1b130:	beq	1b0c4 <processOptions@@Base+0x128>
   1b134:	ldr	r8, [r2, r1, lsl #2]
   1b138:	mov	r2, #3
   1b13c:	ldr	r0, [fp, #-1624]	; 0xfffff9a8
   1b140:	str	ip, [fp, #-1688]	; 0xfffff968
   1b144:	mov	r1, r8
   1b148:	bl	fa10 <strncasecmp@plt>
   1b14c:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1b150:	cmp	r0, #0
   1b154:	bne	1b794 <processOptions@@Base+0x7f8>
   1b158:	add	r0, r8, #3
   1b15c:	bl	f740 <__strdup@plt>
   1b160:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1b164:	subs	r9, r0, #0
   1b168:	beq	1befc <processOptions@@Base+0xf60>
   1b16c:	ldr	r0, [fp, #-1628]	; 0xfffff9a4
   1b170:	add	r5, r5, #1
   1b174:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1b178:	add	r7, r4, #32
   1b17c:	str	r9, [r4, #16]
   1b180:	mov	r1, r5
   1b184:	str	ip, [r4, #20]
   1b188:	cmp	r5, r3
   1b18c:	str	r0, [r4, #24]
   1b190:	ldrb	r2, [r6, #8]
   1b194:	str	r2, [r4, #28]
   1b198:	bcc	1b0d8 <processOptions@@Base+0x13c>
   1b19c:	ldr	r9, [fp, #-1636]	; 0xfffff99c
   1b1a0:	ldr	r8, [fp, #-1640]	; 0xfffff998
   1b1a4:	mov	r1, #0
   1b1a8:	mov	r2, #16
   1b1ac:	mov	r0, r7
   1b1b0:	bl	f6b0 <memset@plt>
   1b1b4:	sub	r3, fp, #1312	; 0x520
   1b1b8:	sub	r3, r3, #4
   1b1bc:	sub	r1, fp, #300	; 0x12c
   1b1c0:	sub	r3, r3, #8
   1b1c4:	mov	r2, #0
   1b1c8:	str	r2, [r3, #4]!
   1b1cc:	cmp	r3, r1
   1b1d0:	bne	1b1c8 <processOptions@@Base+0x22c>
   1b1d4:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1b1d8:	mov	r2, #43	; 0x2b
   1b1dc:	ldr	r5, [fp, #-1632]	; 0xfffff9a0
   1b1e0:	cmp	r3, #0
   1b1e4:	add	r1, r5, #1
   1b1e8:	strb	r2, [r5]
   1b1ec:	beq	1b254 <processOptions@@Base+0x2b8>
   1b1f0:	mov	r2, #0
   1b1f4:	mov	lr, #58	; 0x3a
   1b1f8:	mov	r3, r2
   1b1fc:	mov	r4, r2
   1b200:	ldr	r0, [fp, #-1588]	; 0xfffff9cc
   1b204:	rsb	r3, r3, r3, lsl #3
   1b208:	sub	r5, fp, #36	; 0x24
   1b20c:	add	r2, r2, #1
   1b210:	add	r3, r0, r3, lsl #2
   1b214:	ldrb	r0, [r3, #8]
   1b218:	add	ip, r5, r0, lsl #2
   1b21c:	str	r3, [ip, #-1284]	; 0xfffffafc
   1b220:	strb	r0, [r1]
   1b224:	ldr	r0, [r3, #4]
   1b228:	cmp	r0, #0
   1b22c:	strbne	lr, [r1, #1]
   1b230:	ldr	r3, [r3, #12]
   1b234:	addne	r1, r1, #2
   1b238:	addeq	r1, r1, #1
   1b23c:	cmp	r3, #0
   1b240:	strne	r4, [r3]
   1b244:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1b248:	cmp	r2, r3
   1b24c:	mov	r3, r2
   1b250:	bcc	1b200 <processOptions@@Base+0x264>
   1b254:	mov	r3, #0
   1b258:	strb	r3, [r1]
   1b25c:	ldr	r2, [r9]
   1b260:	cmp	r2, #1
   1b264:	ldrgt	r2, [pc, #3380]	; 1bfa0 <processOptions@@Base+0x1004>
   1b268:	ldrgt	r2, [r8, r2]
   1b26c:	strgt	r3, [r2]
   1b270:	mov	ip, #0
   1b274:	ldr	r2, [pc, #3368]	; 1bfa4 <processOptions@@Base+0x1008>
   1b278:	str	ip, [fp, #-1640]	; 0xfffff998
   1b27c:	mov	r5, ip
   1b280:	str	ip, [fp, #-1624]	; 0xfffff9a8
   1b284:	mov	r3, #1
   1b288:	ldr	ip, [pc, #3352]	; 1bfa8 <processOptions@@Base+0x100c>
   1b28c:	mov	r4, r3
   1b290:	ldr	r6, [r8, r2]
   1b294:	mvn	r7, #0
   1b298:	add	ip, pc, ip
   1b29c:	str	ip, [fp, #-1628]	; 0xfffff9a4
   1b2a0:	ldr	ip, [pc, #3332]	; 1bfac <processOptions@@Base+0x1010>
   1b2a4:	str	r3, [r6]
   1b2a8:	add	ip, pc, ip
   1b2ac:	str	ip, [fp, #-1636]	; 0xfffff99c
   1b2b0:	ldr	ip, [pc, #3320]	; 1bfb0 <processOptions@@Base+0x1014>
   1b2b4:	ldr	r0, [r9]
   1b2b8:	ldr	r1, [sl]
   1b2bc:	add	ip, pc, ip
   1b2c0:	str	ip, [fp, #-1644]	; 0xfffff994
   1b2c4:	ldr	ip, [pc, #3304]	; 1bfb4 <processOptions@@Base+0x1018>
   1b2c8:	add	ip, pc, ip
   1b2cc:	str	ip, [fp, #-1656]	; 0xfffff988
   1b2d0:	cmp	r4, r0
   1b2d4:	beq	1b30c <processOptions@@Base+0x370>
   1b2d8:	cmp	r5, #0
   1b2dc:	ldr	r3, [r1, r4, lsl #2]
   1b2e0:	beq	1b638 <processOptions@@Base+0x69c>
   1b2e4:	ldrb	r3, [r5]
   1b2e8:	cmp	r3, #0
   1b2ec:	bne	1b56c <processOptions@@Base+0x5d0>
   1b2f0:	add	r4, r4, #1
   1b2f4:	str	r4, [r6]
   1b2f8:	ldr	r0, [r9]
   1b2fc:	mov	r5, r3
   1b300:	ldr	r1, [sl]
   1b304:	cmp	r4, r0
   1b308:	bne	1b2d8 <processOptions@@Base+0x33c>
   1b30c:	ldr	r5, [fp, #-1624]	; 0xfffff9a8
   1b310:	add	r1, r1, r4, lsl #2
   1b314:	str	r1, [sl]
   1b318:	cmp	r5, #0
   1b31c:	ldr	r3, [r6]
   1b320:	ldr	r2, [r9]
   1b324:	rsb	r3, r3, r2
   1b328:	str	r3, [r9]
   1b32c:	bne	1b818 <processOptions@@Base+0x87c>
   1b330:	ldr	r5, [fp, #-1664]	; 0xfffff980
   1b334:	ldr	r0, [r5]
   1b338:	cmp	r0, #0
   1b33c:	ldrne	r4, [fp, #-1664]	; 0xfffff980
   1b340:	beq	1b360 <processOptions@@Base+0x3c4>
   1b344:	ldr	r3, [r4, #8]
   1b348:	cmp	r3, #0
   1b34c:	beq	1b354 <processOptions@@Base+0x3b8>
   1b350:	bl	f4f4 <free@plt>
   1b354:	ldr	r0, [r4, #16]!
   1b358:	cmp	r0, #0
   1b35c:	bne	1b344 <processOptions@@Base+0x3a8>
   1b360:	ldr	ip, [fp, #-1648]	; 0xfffff990
   1b364:	ldr	sp, [fp, #-1672]	; 0xfffff978
   1b368:	ldr	sl, [ip, #16]
   1b36c:	cmp	sl, #0
   1b370:	beq	1b380 <processOptions@@Base+0x3e4>
   1b374:	ldr	sl, [sl]
   1b378:	adds	sl, sl, #0
   1b37c:	movne	sl, #1
   1b380:	ldr	r5, [fp, #-1648]	; 0xfffff990
   1b384:	str	sl, [fp, #-1624]	; 0xfffff9a8
   1b388:	ldr	r3, [r5, #8]
   1b38c:	cmp	r3, #0
   1b390:	beq	1b3a0 <processOptions@@Base+0x404>
   1b394:	ldr	r3, [r3]
   1b398:	cmp	r3, #0
   1b39c:	bne	1be08 <processOptions@@Base+0xe6c>
   1b3a0:	ldr	ip, [fp, #-1648]	; 0xfffff990
   1b3a4:	ldr	r3, [ip, #12]
   1b3a8:	cmp	r3, #0
   1b3ac:	beq	1b3bc <processOptions@@Base+0x420>
   1b3b0:	ldr	r3, [r3]
   1b3b4:	cmp	r3, #0
   1b3b8:	bne	1bcd4 <processOptions@@Base+0xd38>
   1b3bc:	sub	r0, fp, #1584	; 0x630
   1b3c0:	mov	r1, #0
   1b3c4:	sub	r0, r0, #4
   1b3c8:	bl	1ac4c <cancelProcess@@Base+0x2f8>
   1b3cc:	ldr	r5, [fp, #-1648]	; 0xfffff990
   1b3d0:	ldr	r3, [r5, #16]
   1b3d4:	cmp	r3, #0
   1b3d8:	beq	1b524 <processOptions@@Base+0x588>
   1b3dc:	ldr	r3, [r3]
   1b3e0:	cmp	r3, #0
   1b3e4:	beq	1b524 <processOptions@@Base+0x588>
   1b3e8:	sub	r4, fp, #1600	; 0x640
   1b3ec:	ldr	r5, [fp, #-1624]	; 0xfffff9a8
   1b3f0:	sub	r4, r4, #4
   1b3f4:	str	r3, [fp, #-1616]	; 0xfffff9b0
   1b3f8:	sub	r0, r4, #12
   1b3fc:	eor	sl, r5, #1
   1b400:	bl	1a48c <fixInstallPath@@Base>
   1b404:	ldr	r5, [fp, #-1616]	; 0xfffff9b0
   1b408:	ldr	r1, [pc, #2984]	; 1bfb8 <processOptions@@Base+0x101c>
   1b40c:	mov	r2, sl
   1b410:	add	r1, pc, r1
   1b414:	mov	r0, r5
   1b418:	bl	1d1c0 <openDataFile@@Base>
   1b41c:	subs	r6, r0, #0
   1b420:	beq	1b7ec <processOptions@@Base+0x850>
   1b424:	ldr	r7, [fp, #-1584]	; 0xfffff9d0
   1b428:	sub	ip, fp, #1584	; 0x630
   1b42c:	sub	ip, ip, #4
   1b430:	str	ip, [fp, #-1612]	; 0xfffff9b4
   1b434:	lsl	r0, r7, #2
   1b438:	bl	fb48 <malloc@plt>
   1b43c:	cmp	r0, #0
   1b440:	str	r0, [fp, #-1608]	; 0xfffff9b8
   1b444:	beq	1c050 <processOptions@@Base+0x10b4>
   1b448:	cmp	r7, #0
   1b44c:	movne	r3, #0
   1b450:	movne	r2, r0
   1b454:	movne	r1, r3
   1b458:	bne	1b464 <processOptions@@Base+0x4c8>
   1b45c:	b	1b478 <processOptions@@Base+0x4dc>
   1b460:	ldr	r2, [fp, #-1608]	; 0xfffff9b8
   1b464:	str	r1, [r2, r3, lsl #2]
   1b468:	add	r3, r3, #1
   1b46c:	ldr	r2, [fp, #-1584]	; 0xfffff9d0
   1b470:	cmp	r3, r2
   1b474:	bcc	1b460 <processOptions@@Base+0x4c4>
   1b478:	ldr	r1, [pc, #2876]	; 1bfbc <processOptions@@Base+0x1020>
   1b47c:	sub	r2, r4, #8
   1b480:	mov	r0, r6
   1b484:	add	r1, pc, r1
   1b488:	bl	1d49c <processLines@@Base>
   1b48c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1b490:	cmp	r3, #0
   1b494:	subne	sl, fp, #1584	; 0x630
   1b498:	movne	r4, #0
   1b49c:	subne	sl, sl, #4
   1b4a0:	movne	r9, r4
   1b4a4:	mov	r7, r0
   1b4a8:	beq	1b4f0 <processOptions@@Base+0x554>
   1b4ac:	ldr	r2, [fp, #-1608]	; 0xfffff9b8
   1b4b0:	ldr	r8, [r2, r4]
   1b4b4:	cmp	r8, #0
   1b4b8:	beq	1b4e0 <processOptions@@Base+0x544>
   1b4bc:	ldr	r1, [fp, #-1588]	; 0xfffff9cc
   1b4c0:	rsb	r3, r4, r4, lsl #3
   1b4c4:	mov	r2, r8
   1b4c8:	mov	r0, sl
   1b4cc:	add	r1, r1, r3
   1b4d0:	bl	1aa50 <cancelProcess@@Base+0xfc>
   1b4d4:	mov	r0, r8
   1b4d8:	bl	f4f4 <free@plt>
   1b4dc:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1b4e0:	add	r9, r9, #1
   1b4e4:	add	r4, r4, #4
   1b4e8:	cmp	r9, r3
   1b4ec:	bcc	1b4ac <processOptions@@Base+0x510>
   1b4f0:	cmp	r7, #0
   1b4f4:	beq	1bf5c <processOptions@@Base+0xfc0>
   1b4f8:	ldr	r0, [fp, #-1608]	; 0xfffff9b8
   1b4fc:	bl	f4f4 <free@plt>
   1b500:	mov	r0, r6
   1b504:	bl	fbc0 <fclose@plt>
   1b508:	ldr	r5, [fp, #-1648]	; 0xfffff990
   1b50c:	ldr	r0, [fp, #-1616]	; 0xfffff9b0
   1b510:	ldr	r3, [r5, #16]
   1b514:	ldr	r3, [r3]
   1b518:	cmp	r3, r0
   1b51c:	beq	1b524 <processOptions@@Base+0x588>
   1b520:	bl	f4f4 <free@plt>
   1b524:	sub	r0, fp, #1584	; 0x630
   1b528:	mov	r1, #1
   1b52c:	sub	r0, r0, #4
   1b530:	bl	1ac4c <cancelProcess@@Base+0x2f8>
   1b534:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   1b538:	tst	r3, #1
   1b53c:	movne	r0, #1
   1b540:	bne	1b550 <processOptions@@Base+0x5b4>
   1b544:	tst	r3, #4
   1b548:	moveq	r0, #0
   1b54c:	movne	r0, #2
   1b550:	ldr	ip, [fp, #-1668]	; 0xfffff97c
   1b554:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b558:	ldr	r3, [ip]
   1b55c:	cmp	r2, r3
   1b560:	bne	1c084 <processOptions@@Base+0x10e8>
   1b564:	sub	sp, fp, #32
   1b568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b56c:	sub	r0, fp, #36	; 0x24
   1b570:	add	r2, r0, r3, lsl #2
   1b574:	ldr	r2, [r2, #-1284]	; 0xfffffafc
   1b578:	cmp	r2, #0
   1b57c:	beq	1b58c <processOptions@@Base+0x5f0>
   1b580:	ldr	ip, [r2, #4]
   1b584:	cmp	ip, #0
   1b588:	beq	1b780 <processOptions@@Base+0x7e4>
   1b58c:	ldr	r2, [pc, #2604]	; 1bfc0 <processOptions@@Base+0x1024>
   1b590:	mov	ip, #63	; 0x3f
   1b594:	ldr	r2, [r8, r2]
   1b598:	str	r3, [r2]
   1b59c:	cmp	ip, #63	; 0x3f
   1b5a0:	add	r5, r5, #1
   1b5a4:	mov	r4, #43	; 0x2b
   1b5a8:	beq	1b67c <processOptions@@Base+0x6e0>
   1b5ac:	bgt	1b610 <processOptions@@Base+0x674>
   1b5b0:	cmp	ip, #0
   1b5b4:	beq	1b6ec <processOptions@@Base+0x750>
   1b5b8:	cmp	ip, #58	; 0x3a
   1b5bc:	bne	1b6a4 <processOptions@@Base+0x708>
   1b5c0:	ldr	r1, [fp, #-1644]	; 0xfffff994
   1b5c4:	mov	r2, #5
   1b5c8:	mov	r0, #0
   1b5cc:	bl	f9bc <dcgettext@plt>
   1b5d0:	ldr	ip, [pc, #2536]	; 1bfc0 <processOptions@@Base+0x1024>
   1b5d4:	ldr	r1, [fp, #-1656]	; 0xfffff988
   1b5d8:	mov	r3, r4
   1b5dc:	mov	r2, r0
   1b5e0:	mov	r0, #3
   1b5e4:	ldr	ip, [r8, ip]
   1b5e8:	ldr	ip, [ip]
   1b5ec:	str	ip, [sp]
   1b5f0:	bl	1c634 <logMessage@@Base>
   1b5f4:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   1b5f8:	ldr	r0, [r9]
   1b5fc:	orr	r3, r3, #4
   1b600:	ldr	r4, [r6]
   1b604:	strb	r3, [fp, #-1324]	; 0xfffffad4
   1b608:	ldr	r1, [sl]
   1b60c:	b	1b2d0 <processOptions@@Base+0x334>
   1b610:	cmp	ip, #72	; 0x48
   1b614:	beq	1b728 <processOptions@@Base+0x78c>
   1b618:	cmp	ip, #104	; 0x68
   1b61c:	bne	1b6a4 <processOptions@@Base+0x708>
   1b620:	mov	ip, #1
   1b624:	ldr	r0, [r9]
   1b628:	str	ip, [fp, #-1624]	; 0xfffff9a8
   1b62c:	ldr	r4, [r6]
   1b630:	ldr	r1, [sl]
   1b634:	b	1b2d0 <processOptions@@Base+0x334>
   1b638:	cmp	r7, r4
   1b63c:	beq	1b64c <processOptions@@Base+0x6b0>
   1b640:	ldrb	r2, [r3]
   1b644:	cmp	r2, #43	; 0x2b
   1b648:	beq	1b804 <processOptions@@Base+0x868>
   1b64c:	mov	r2, #0
   1b650:	str	r2, [sp]
   1b654:	ldr	r2, [fp, #-1632]	; 0xfffff9a0
   1b658:	ldr	r3, [fp, #-1664]	; 0xfffff980
   1b65c:	bl	fa1c <getopt_long@plt>
   1b660:	cmn	r0, #1
   1b664:	mov	ip, r0
   1b668:	beq	1c078 <processOptions@@Base+0x10dc>
   1b66c:	cmp	ip, #63	; 0x3f
   1b670:	mov	r7, r4
   1b674:	mov	r4, #45	; 0x2d
   1b678:	bne	1b5ac <processOptions@@Base+0x610>
   1b67c:	ldr	r1, [fp, #-1628]	; 0xfffff9a4
   1b680:	mov	r2, #5
   1b684:	mov	r0, #0
   1b688:	bl	f9bc <dcgettext@plt>
   1b68c:	ldr	ip, [pc, #2348]	; 1bfc0 <processOptions@@Base+0x1024>
   1b690:	mov	r3, r4
   1b694:	ldr	r1, [fp, #-1636]	; 0xfffff99c
   1b698:	mov	r2, r0
   1b69c:	mov	r0, #3
   1b6a0:	b	1b5e4 <processOptions@@Base+0x648>
   1b6a4:	sub	r0, fp, #36	; 0x24
   1b6a8:	add	r3, r0, ip, lsl #2
   1b6ac:	ldr	r3, [r3, #-1284]	; 0xfffffafc
   1b6b0:	ldr	r2, [r3, #4]
   1b6b4:	cmp	r2, #0
   1b6b8:	beq	1bcac <processOptions@@Base+0xd10>
   1b6bc:	ldr	r2, [pc, #2304]	; 1bfc4 <processOptions@@Base+0x1028>
   1b6c0:	ldr	r2, [r8, r2]
   1b6c4:	ldr	r1, [r2]
   1b6c8:	ldrb	r2, [r1]
   1b6cc:	cmp	r2, #0
   1b6d0:	bne	1b744 <processOptions@@Base+0x7a8>
   1b6d4:	add	ip, r0, ip
   1b6d8:	ldr	r4, [r6]
   1b6dc:	ldr	r0, [r9]
   1b6e0:	strb	r2, [ip, #-1544]	; 0xfffff9f8
   1b6e4:	ldr	r1, [sl]
   1b6e8:	b	1b2d0 <processOptions@@Base+0x334>
   1b6ec:	ldr	r3, [fp, #-1612]	; 0xfffff9b4
   1b6f0:	sub	r0, fp, #36	; 0x24
   1b6f4:	sub	r1, fp, #36	; 0x24
   1b6f8:	mov	r2, #1
   1b6fc:	add	r3, r0, r3, lsl #2
   1b700:	ldr	r3, [r3, #-1284]	; 0xfffffafc
   1b704:	ldr	r3, [r3, #12]
   1b708:	str	ip, [r3]
   1b70c:	ldr	r3, [fp, #-1612]	; 0xfffff9b4
   1b710:	ldr	r0, [r9]
   1b714:	add	r3, r1, r3
   1b718:	ldr	r4, [r6]
   1b71c:	ldr	r1, [sl]
   1b720:	strb	r2, [r3, #-1544]	; 0xfffff9f8
   1b724:	b	1b2d0 <processOptions@@Base+0x334>
   1b728:	mov	ip, #1
   1b72c:	ldr	r0, [r9]
   1b730:	str	ip, [fp, #-1640]	; 0xfffff998
   1b734:	str	ip, [fp, #-1624]	; 0xfffff9a8
   1b738:	ldr	r4, [r6]
   1b73c:	ldr	r1, [sl]
   1b740:	b	1b2d0 <processOptions@@Base+0x334>
   1b744:	ldr	r0, [r3, #12]
   1b748:	cmp	r0, #0
   1b74c:	beq	1b760 <processOptions@@Base+0x7c4>
   1b750:	ldrb	r3, [r3, #10]
   1b754:	tst	r3, #2
   1b758:	streq	r1, [r0]
   1b75c:	bne	1bf10 <processOptions@@Base+0xf74>
   1b760:	sub	r2, fp, #36	; 0x24
   1b764:	mov	r3, #1
   1b768:	add	ip, r2, ip
   1b76c:	ldr	r0, [r9]
   1b770:	ldr	r4, [r6]
   1b774:	strb	r3, [ip, #-1544]	; 0xfffff9f8
   1b778:	ldr	r1, [sl]
   1b77c:	b	1b2d0 <processOptions@@Base+0x334>
   1b780:	ldr	r2, [r2, #12]
   1b784:	cmp	r2, #0
   1b788:	strne	r3, [fp, #-1612]	; 0xfffff9b4
   1b78c:	bne	1b59c <processOptions@@Base+0x600>
   1b790:	b	1b58c <processOptions@@Base+0x5f0>
   1b794:	mov	r0, r8
   1b798:	str	ip, [fp, #-1688]	; 0xfffff968
   1b79c:	bl	fb54 <strlen@plt>
   1b7a0:	add	r1, r0, #4
   1b7a4:	str	r1, [fp, #-1684]	; 0xfffff96c
   1b7a8:	mov	r0, r1
   1b7ac:	bl	fb48 <malloc@plt>
   1b7b0:	ldr	r1, [fp, #-1684]	; 0xfffff96c
   1b7b4:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1b7b8:	subs	r9, r0, #0
   1b7bc:	beq	1befc <processOptions@@Base+0xf60>
   1b7c0:	ldr	r2, [fp, #-1644]	; 0xfffff994
   1b7c4:	str	r2, [sp]
   1b7c8:	mov	r2, #1
   1b7cc:	ldr	r3, [fp, #-1624]	; 0xfffff9a8
   1b7d0:	str	r8, [sp, #8]
   1b7d4:	str	r3, [sp, #4]
   1b7d8:	mvn	r3, #0
   1b7dc:	str	ip, [fp, #-1688]	; 0xfffff968
   1b7e0:	bl	fb60 <__snprintf_chk@plt>
   1b7e4:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1b7e8:	b	1b16c <processOptions@@Base+0x1d0>
   1b7ec:	cmp	sl, #0
   1b7f0:	bne	1bf24 <processOptions@@Base+0xf88>
   1b7f4:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   1b7f8:	orr	r3, r3, #2
   1b7fc:	strb	r3, [fp, #-1324]	; 0xfffffad4
   1b800:	b	1b508 <processOptions@@Base+0x56c>
   1b804:	adds	r3, r3, #1
   1b808:	movne	r5, r3
   1b80c:	movne	r7, r4
   1b810:	bne	1b2d0 <processOptions@@Base+0x334>
   1b814:	b	1b64c <processOptions@@Base+0x6b0>
   1b818:	ldr	r3, [pc, #1960]	; 1bfc8 <processOptions@@Base+0x102c>
   1b81c:	str	sp, [fp, #-1680]	; 0xfffff970
   1b820:	sub	sp, sp, #80	; 0x50
   1b824:	ldr	r6, [fp, #-1584]	; 0xfffff9d0
   1b828:	add	sl, sp, #24
   1b82c:	ldr	r3, [r8, r3]
   1b830:	cmp	r6, #0
   1b834:	ldr	r3, [r3]
   1b838:	str	r3, [fp, #-1632]	; 0xfffff9a0
   1b83c:	beq	1c058 <processOptions@@Base+0x10bc>
   1b840:	ldr	r5, [fp, #-1588]	; 0xfffff9cc
   1b844:	mov	r7, #0
   1b848:	mov	r4, r7
   1b84c:	mov	r3, r7
   1b850:	mov	r9, r7
   1b854:	str	r7, [fp, #-1656]	; 0xfffff988
   1b858:	str	r8, [fp, #-1624]	; 0xfffff9a8
   1b85c:	rsb	r3, r3, r3, lsl #3
   1b860:	ldr	r0, [r5, r3, lsl #2]
   1b864:	add	r8, r5, r3, lsl #2
   1b868:	cmp	r0, #0
   1b86c:	beq	1b87c <processOptions@@Base+0x8e0>
   1b870:	bl	fb54 <strlen@plt>
   1b874:	cmp	r4, r0
   1b878:	movcc	r4, r0
   1b87c:	ldr	r0, [r8, #4]
   1b880:	cmp	r0, #0
   1b884:	beq	1b894 <processOptions@@Base+0x8f8>
   1b888:	bl	fb54 <strlen@plt>
   1b88c:	cmp	r9, r0
   1b890:	movcc	r9, r0
   1b894:	add	r7, r7, #1
   1b898:	cmp	r7, r6
   1b89c:	mov	r3, r7
   1b8a0:	bne	1b85c <processOptions@@Base+0x8c0>
   1b8a4:	ldr	r8, [fp, #-1624]	; 0xfffff9a8
   1b8a8:	str	r9, [fp, #-1656]	; 0xfffff988
   1b8ac:	ldr	r1, [pc, #1816]	; 1bfcc <processOptions@@Base+0x1030>
   1b8b0:	mov	r2, #5
   1b8b4:	mov	r0, #0
   1b8b8:	add	r1, pc, r1
   1b8bc:	bl	f9bc <dcgettext@plt>
   1b8c0:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   1b8c4:	bl	fd64 <fputs@plt>
   1b8c8:	ldr	r3, [pc, #1792]	; 1bfd0 <processOptions@@Base+0x1034>
   1b8cc:	ldr	r2, [pc, #1792]	; 1bfd4 <processOptions@@Base+0x1038>
   1b8d0:	mov	r1, #1
   1b8d4:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   1b8d8:	ldr	r3, [r8, r3]
   1b8dc:	add	r2, pc, r2
   1b8e0:	ldr	r3, [r3]
   1b8e4:	bl	f65c <__fprintf_chk@plt>
   1b8e8:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1b8ec:	cmp	r3, #0
   1b8f0:	bne	1bff8 <processOptions@@Base+0x105c>
   1b8f4:	ldr	ip, [fp, #-1660]	; 0xfffff984
   1b8f8:	cmp	ip, #0
   1b8fc:	beq	1b90c <processOptions@@Base+0x970>
   1b900:	ldrb	r3, [ip]
   1b904:	cmp	r3, #0
   1b908:	bne	1bf38 <processOptions@@Base+0xf9c>
   1b90c:	mov	r0, #10
   1b910:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   1b914:	bl	fb0c <fputc@plt>
   1b918:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1b91c:	cmp	r3, #0
   1b920:	beq	1bc74 <processOptions@@Base+0xcd8>
   1b924:	ldr	r5, [pc, #1708]	; 1bfd8 <processOptions@@Base+0x103c>
   1b928:	add	r4, r4, #3
   1b92c:	ldr	ip, [pc, #1704]	; 1bfdc <processOptions@@Base+0x1040>
   1b930:	add	r5, pc, r5
   1b934:	str	r5, [fp, #-1628]	; 0xfffff9a4
   1b938:	add	ip, pc, ip
   1b93c:	mov	r5, #0
   1b940:	str	ip, [fp, #-1676]	; 0xfffff974
   1b944:	mov	r7, r5
   1b948:	ldr	ip, [fp, #-1656]	; 0xfffff988
   1b94c:	str	r5, [fp, #-1636]	; 0xfffff99c
   1b950:	mov	r5, #32
   1b954:	add	ip, ip, #3
   1b958:	str	r4, [fp, #-1660]	; 0xfffff984
   1b95c:	str	ip, [fp, #-1644]	; 0xfffff994
   1b960:	ldr	ip, [fp, #-1640]	; 0xfffff998
   1b964:	rsb	r7, r7, r7, lsl #3
   1b968:	ldr	r6, [fp, #-1588]	; 0xfffff9cc
   1b96c:	cmp	ip, #0
   1b970:	add	r8, r6, r7, lsl #2
   1b974:	bne	1b984 <processOptions@@Base+0x9e8>
   1b978:	ldrb	r2, [r8, #10]
   1b97c:	tst	r2, #1
   1b980:	bne	1bc5c <processOptions@@Base+0xcc0>
   1b984:	mov	r0, #45	; 0x2d
   1b988:	strb	r0, [sl]
   1b98c:	ldrb	r3, [r8, #8]
   1b990:	strb	r5, [sl, #2]
   1b994:	ldr	ip, [fp, #-1644]	; 0xfffff994
   1b998:	strb	r3, [sl, #1]
   1b99c:	ldr	r9, [r8, #4]
   1b9a0:	cmp	r9, #0
   1b9a4:	beq	1bc90 <processOptions@@Base+0xcf4>
   1b9a8:	mov	r0, r9
   1b9ac:	str	ip, [fp, #-1688]	; 0xfffff968
   1b9b0:	bl	fb54 <strlen@plt>
   1b9b4:	mov	r1, r9
   1b9b8:	mov	r3, #77	; 0x4d
   1b9bc:	mov	r4, r0
   1b9c0:	mov	r2, r0
   1b9c4:	add	r0, sl, #3
   1b9c8:	bl	f464 <__memcpy_chk@plt>
   1b9cc:	ldr	r1, [fp, #-1644]	; 0xfffff994
   1b9d0:	add	r3, r4, #3
   1b9d4:	add	r2, r4, #4
   1b9d8:	cmp	r1, r3
   1b9dc:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1b9e0:	bls	1bca4 <processOptions@@Base+0xd08>
   1b9e4:	mov	r2, r1
   1b9e8:	strb	r5, [sl, r3]
   1b9ec:	add	r3, r3, #1
   1b9f0:	cmp	r2, r3
   1b9f4:	bne	1b9e8 <processOptions@@Base+0xa4c>
   1b9f8:	ldr	r3, [fp, #-1656]	; 0xfffff988
   1b9fc:	add	r2, r3, #4
   1ba00:	ldr	r0, [fp, #-1660]	; 0xfffff984
   1ba04:	strb	r5, [sl, ip]
   1ba08:	add	r4, r0, r2
   1ba0c:	ldr	r0, [r6, r7, lsl #2]
   1ba10:	cmp	r0, #0
   1ba14:	beq	1ba74 <processOptions@@Base+0xad8>
   1ba18:	add	r9, ip, #3
   1ba1c:	str	r2, [fp, #-1684]	; 0xfffff96c
   1ba20:	str	ip, [fp, #-1688]	; 0xfffff968
   1ba24:	bl	fb54 <strlen@plt>
   1ba28:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1ba2c:	mov	r1, #45	; 0x2d
   1ba30:	ldr	r2, [fp, #-1684]	; 0xfffff96c
   1ba34:	add	ip, sl, ip
   1ba38:	strb	r1, [sl, r2]
   1ba3c:	strb	r1, [ip, #2]
   1ba40:	ldr	r1, [r6, r7, lsl #2]
   1ba44:	mov	r3, r0
   1ba48:	add	r0, sl, r9
   1ba4c:	mov	r2, r3
   1ba50:	str	r3, [fp, #-1684]	; 0xfffff96c
   1ba54:	bl	fb24 <memcpy@plt>
   1ba58:	ldr	r3, [fp, #-1684]	; 0xfffff96c
   1ba5c:	ldr	r1, [r8, #4]
   1ba60:	add	r2, r3, r9
   1ba64:	cmp	r1, #0
   1ba68:	movne	r3, #61	; 0x3d
   1ba6c:	strbne	r3, [sl, r2]
   1ba70:	addne	r2, r2, #1
   1ba74:	cmp	r4, r2
   1ba78:	bls	1bef4 <processOptions@@Base+0xf58>
   1ba7c:	mov	r3, r2
   1ba80:	strb	r5, [sl, r3]
   1ba84:	add	r3, r3, #1
   1ba88:	cmp	r3, r4
   1ba8c:	bne	1ba80 <processOptions@@Base+0xae4>
   1ba90:	mov	r3, sl
   1ba94:	add	r6, r4, #2
   1ba98:	strb	r5, [r3, r4]!
   1ba9c:	rsb	r9, r4, #77	; 0x4d
   1baa0:	strb	r5, [r3, #1]
   1baa4:	ldr	r1, [r8, #20]
   1baa8:	cmp	r1, #0
   1baac:	beq	1bc88 <processOptions@@Base+0xcec>
   1bab0:	mov	r0, #0
   1bab4:	mov	r2, #5
   1bab8:	bl	f9bc <dcgettext@plt>
   1babc:	mov	r7, r0
   1bac0:	ldr	r0, [r8, #24]
   1bac4:	cmp	r0, #0
   1bac8:	beq	1bb64 <processOptions@@Base+0xbc8>
   1bacc:	ldr	r2, [r0]
   1bad0:	sub	lr, fp, #1600	; 0x640
   1bad4:	sub	lr, lr, #4
   1bad8:	mov	r4, sp
   1badc:	cmp	r2, #0
   1bae0:	subne	r1, lr, #4
   1bae4:	movne	r3, #0
   1bae8:	beq	1bf54 <processOptions@@Base+0xfb8>
   1baec:	str	r2, [r1, #4]!
   1baf0:	add	r3, r3, #1
   1baf4:	ldr	r2, [r0, #4]!
   1baf8:	cmp	r2, #0
   1bafc:	bne	1baec <processOptions@@Base+0xb50>
   1bb00:	cmp	r3, #3
   1bb04:	bgt	1bb24 <processOptions@@Base+0xb88>
   1bb08:	sub	r2, r3, #1
   1bb0c:	mov	r1, #0
   1bb10:	add	r2, lr, r2, lsl #2
   1bb14:	add	r3, r3, #1
   1bb18:	str	r1, [r2, #4]!
   1bb1c:	cmp	r3, #3
   1bb20:	ble	1bb14 <processOptions@@Base+0xb78>
   1bb24:	str	r7, [sp]
   1bb28:	sub	r7, fp, #296	; 0x128
   1bb2c:	ldr	lr, [fp, #-1604]	; 0xfffff9bc
   1bb30:	mov	r1, #256	; 0x100
   1bb34:	mov	r0, r7
   1bb38:	mov	r3, r1
   1bb3c:	mov	r2, #1
   1bb40:	str	lr, [sp, #4]
   1bb44:	ldr	lr, [fp, #-1600]	; 0xfffff9c0
   1bb48:	str	lr, [sp, #8]
   1bb4c:	ldr	lr, [fp, #-1596]	; 0xfffff9c4
   1bb50:	str	lr, [sp, #12]
   1bb54:	ldr	lr, [fp, #-1592]	; 0xfffff9c8
   1bb58:	str	lr, [sp, #16]
   1bb5c:	bl	fb60 <__snprintf_chk@plt>
   1bb60:	mov	sp, r4
   1bb64:	mov	r0, r7
   1bb68:	add	ip, sl, r6
   1bb6c:	str	ip, [fp, #-1624]	; 0xfffff9a8
   1bb70:	bl	fb54 <strlen@plt>
   1bb74:	mov	r8, r0
   1bb78:	cmp	r9, r8
   1bb7c:	movcs	r4, r8
   1bb80:	bcs	1bbc4 <processOptions@@Base+0xc28>
   1bb84:	ldrb	r2, [r7, r9]
   1bb88:	add	r3, r7, r9
   1bb8c:	mov	r4, r9
   1bb90:	cmp	r2, #32
   1bb94:	beq	1bba8 <processOptions@@Base+0xc0c>
   1bb98:	ldrb	r2, [r3, #-1]!
   1bb9c:	sub	r4, r4, #1
   1bba0:	cmp	r2, #32
   1bba4:	bne	1bb98 <processOptions@@Base+0xbfc>
   1bba8:	add	r3, r7, r4
   1bbac:	b	1bbb4 <processOptions@@Base+0xc18>
   1bbb0:	mov	r4, r1
   1bbb4:	ldrb	r2, [r3, #-1]!
   1bbb8:	sub	r1, r4, #1
   1bbbc:	cmp	r2, #32
   1bbc0:	beq	1bbb0 <processOptions@@Base+0xc14>
   1bbc4:	mov	r1, r7
   1bbc8:	mov	r2, r4
   1bbcc:	ldr	r0, [fp, #-1624]	; 0xfffff9a8
   1bbd0:	bl	fb24 <memcpy@plt>
   1bbd4:	ldr	ip, [fp, #-1624]	; 0xfffff9a8
   1bbd8:	mov	r0, #0
   1bbdc:	ldr	r2, [fp, #-1628]	; 0xfffff9a4
   1bbe0:	mov	r3, sl
   1bbe4:	mov	r1, #1
   1bbe8:	strb	r0, [ip, r4]
   1bbec:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   1bbf0:	bl	f65c <__fprintf_chk@plt>
   1bbf4:	ldrb	r3, [r7, r4]
   1bbf8:	add	r2, r7, r4
   1bbfc:	cmp	r3, #32
   1bc00:	bne	1bc2c <processOptions@@Base+0xc90>
   1bc04:	rsb	r7, r7, #1
   1bc08:	mov	r4, r2
   1bc0c:	b	1bc14 <processOptions@@Base+0xc78>
   1bc10:	mov	r4, r3
   1bc14:	ldrb	r2, [r4, #1]
   1bc18:	add	r3, r4, #1
   1bc1c:	add	r4, r7, r4
   1bc20:	cmp	r2, #32
   1bc24:	mov	r2, r3
   1bc28:	beq	1bc10 <processOptions@@Base+0xc74>
   1bc2c:	subs	r8, r8, r4
   1bc30:	beq	1bc58 <processOptions@@Base+0xcbc>
   1bc34:	cmp	r6, #0
   1bc38:	beq	1bc50 <processOptions@@Base+0xcb4>
   1bc3c:	mov	r3, #0
   1bc40:	strb	r5, [sl, r3]
   1bc44:	add	r3, r3, #1
   1bc48:	cmp	r3, r6
   1bc4c:	bne	1bc40 <processOptions@@Base+0xca4>
   1bc50:	mov	r7, r2
   1bc54:	b	1bb78 <processOptions@@Base+0xbdc>
   1bc58:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1bc5c:	ldr	ip, [fp, #-1636]	; 0xfffff99c
   1bc60:	add	ip, ip, #1
   1bc64:	str	ip, [fp, #-1636]	; 0xfffff99c
   1bc68:	cmp	ip, r3
   1bc6c:	mov	r7, ip
   1bc70:	bcc	1b960 <processOptions@@Base+0x9c4>
   1bc74:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   1bc78:	ldr	sp, [fp, #-1680]	; 0xfffff970
   1bc7c:	orr	r3, r3, #1
   1bc80:	strb	r3, [fp, #-1324]	; 0xfffffad4
   1bc84:	b	1b330 <processOptions@@Base+0x394>
   1bc88:	ldr	r7, [fp, #-1676]	; 0xfffff974
   1bc8c:	b	1bac0 <processOptions@@Base+0xb24>
   1bc90:	ldr	r1, [fp, #-1644]	; 0xfffff994
   1bc94:	mov	r3, #3
   1bc98:	mov	r2, #4
   1bc9c:	cmp	r1, r3
   1bca0:	bhi	1b9e4 <processOptions@@Base+0xa48>
   1bca4:	mov	ip, r3
   1bca8:	b	1ba00 <processOptions@@Base+0xa64>
   1bcac:	ldr	r2, [r3, #12]
   1bcb0:	cmp	r2, #0
   1bcb4:	beq	1b760 <processOptions@@Base+0x7c4>
   1bcb8:	ldrb	r3, [r3, #10]
   1bcbc:	tst	r3, #2
   1bcc0:	ldrne	r3, [r2]
   1bcc4:	moveq	r3, #1
   1bcc8:	addne	r3, r3, #1
   1bccc:	str	r3, [r2]
   1bcd0:	b	1b760 <processOptions@@Base+0x7c4>
   1bcd4:	ldr	ip, [fp, #-1648]	; 0xfffff990
   1bcd8:	ldr	ip, [ip, #20]
   1bcdc:	mov	r0, ip
   1bce0:	str	ip, [fp, #-1628]	; 0xfffff9a4
   1bce4:	bl	fb54 <strlen@plt>
   1bce8:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1bcec:	cmp	r3, #0
   1bcf0:	beq	1b3bc <processOptions@@Base+0x420>
   1bcf4:	ldr	r5, [pc, #740]	; 1bfe0 <processOptions@@Base+0x1044>
   1bcf8:	mov	r4, #0
   1bcfc:	mov	r7, #95	; 0x5f
   1bd00:	add	r0, r0, #2
   1bd04:	add	r5, pc, r5
   1bd08:	str	r5, [fp, #-1640]	; 0xfffff998
   1bd0c:	mov	r5, r4
   1bd10:	str	r0, [fp, #-1636]	; 0xfffff99c
   1bd14:	ldr	r2, [fp, #-1588]	; 0xfffff9cc
   1bd18:	add	r6, r2, r4
   1bd1c:	ldrb	r1, [r6, #10]
   1bd20:	tst	r1, #8
   1bd24:	beq	1bdf4 <processOptions@@Base+0xe58>
   1bd28:	ldr	r9, [r2, r4]
   1bd2c:	cmp	r9, #0
   1bd30:	beq	1bdf4 <processOptions@@Base+0xe58>
   1bd34:	mov	r0, r9
   1bd38:	str	sp, [fp, #-1632]	; 0xfffff9a0
   1bd3c:	bl	fb54 <strlen@plt>
   1bd40:	ldr	ip, [fp, #-1636]	; 0xfffff99c
   1bd44:	mov	r2, #1
   1bd48:	mvn	r3, #0
   1bd4c:	add	r1, ip, r0
   1bd50:	ldr	ip, [fp, #-1640]	; 0xfffff998
   1bd54:	add	r0, r1, #7
   1bd58:	bic	r0, r0, #7
   1bd5c:	sub	sp, sp, r0
   1bd60:	add	r8, sp, #24
   1bd64:	str	ip, [sp]
   1bd68:	ldr	ip, [fp, #-1628]	; 0xfffff9a4
   1bd6c:	mov	r0, r8
   1bd70:	str	r9, [sp, #8]
   1bd74:	str	ip, [sp, #4]
   1bd78:	bl	fb60 <__snprintf_chk@plt>
   1bd7c:	ldrb	r9, [sp, #24]
   1bd80:	cmp	r9, #0
   1bd84:	addne	sl, sp, #25
   1bd88:	beq	1bdd0 <processOptions@@Base+0xe34>
   1bd8c:	cmp	r9, #45	; 0x2d
   1bd90:	strbeq	r7, [sl, #-1]
   1bd94:	beq	1bdc4 <processOptions@@Base+0xe28>
   1bd98:	bl	fa64 <__ctype_b_loc@plt>
   1bd9c:	sxth	r9, r9
   1bda0:	lsl	r3, r9, #1
   1bda4:	ldr	r2, [r0]
   1bda8:	ldrh	r3, [r2, r3]
   1bdac:	tst	r3, #512	; 0x200
   1bdb0:	beq	1bdc4 <processOptions@@Base+0xe28>
   1bdb4:	bl	f7d0 <__ctype_toupper_loc@plt>
   1bdb8:	ldr	r3, [r0]
   1bdbc:	ldr	r3, [r3, r9, lsl #2]
   1bdc0:	strb	r3, [sl, #-1]
   1bdc4:	ldrb	r9, [sl], #1
   1bdc8:	cmp	r9, #0
   1bdcc:	bne	1bd8c <processOptions@@Base+0xdf0>
   1bdd0:	mov	r0, r8
   1bdd4:	bl	fd70 <getenv@plt>
   1bdd8:	subs	r2, r0, #0
   1bddc:	beq	1bdec <processOptions@@Base+0xe50>
   1bde0:	ldrb	r3, [r2]
   1bde4:	cmp	r3, #0
   1bde8:	bne	1bee0 <processOptions@@Base+0xf44>
   1bdec:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1bdf0:	ldr	sp, [fp, #-1632]	; 0xfffff9a0
   1bdf4:	add	r5, r5, #1
   1bdf8:	add	r4, r4, #28
   1bdfc:	cmp	r5, r3
   1be00:	bcc	1bd14 <processOptions@@Base+0xd78>
   1be04:	b	1b3bc <processOptions@@Base+0x420>
   1be08:	ldr	r4, [r5, #20]
   1be0c:	mov	r0, r4
   1be10:	bl	1f328 <getBootParameters@@Base>
   1be14:	subs	r5, r0, #0
   1be18:	movne	r0, r5
   1be1c:	beq	1c064 <processOptions@@Base+0x10c8>
   1be20:	sub	r2, fp, #1600	; 0x640
   1be24:	mov	r1, #44	; 0x2c
   1be28:	sub	r2, r2, #4
   1be2c:	mov	r4, #0
   1be30:	sub	r2, r2, #8
   1be34:	str	r4, [fp, #-1612]	; 0xfffff9b4
   1be38:	bl	1dbbc <splitString@@Base>
   1be3c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1be40:	cmp	r3, r4
   1be44:	movne	r7, #44	; 0x2c
   1be48:	movne	r2, r4
   1be4c:	mov	r6, r0
   1be50:	beq	1bec4 <processOptions@@Base+0xf28>
   1be54:	rsb	r2, r2, r2, lsl #3
   1be58:	ldr	r1, [fp, #-1588]	; 0xfffff9cc
   1be5c:	add	r1, r1, r2, lsl #2
   1be60:	ldrb	r2, [r1, #9]
   1be64:	cmp	r2, #0
   1be68:	beq	1beb4 <processOptions@@Base+0xf18>
   1be6c:	ldr	r0, [fp, #-1612]	; 0xfffff9b4
   1be70:	cmp	r2, r0
   1be74:	bgt	1beb4 <processOptions@@Base+0xf18>
   1be78:	sub	r2, r2, #-1073741823	; 0xc0000001
   1be7c:	ldr	r2, [r6, r2, lsl #2]
   1be80:	ldrb	r0, [r2]
   1be84:	cmp	r0, #0
   1be88:	beq	1beb4 <processOptions@@Base+0xf18>
   1be8c:	add	r3, r2, #1
   1be90:	cmp	r0, #43	; 0x2b
   1be94:	strbeq	r7, [r3, #-1]
   1be98:	ldrb	r0, [r3], #1
   1be9c:	cmp	r0, #0
   1bea0:	bne	1be90 <processOptions@@Base+0xef4>
   1bea4:	sub	r0, fp, #1584	; 0x630
   1bea8:	sub	r0, r0, #4
   1beac:	bl	1aa50 <cancelProcess@@Base+0xfc>
   1beb0:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1beb4:	add	r4, r4, #1
   1beb8:	cmp	r4, r3
   1bebc:	mov	r2, r4
   1bec0:	bcc	1be54 <processOptions@@Base+0xeb8>
   1bec4:	mov	r0, r6
   1bec8:	bl	1db88 <deallocateStrings@@Base>
   1becc:	cmp	r5, #0
   1bed0:	beq	1b3a0 <processOptions@@Base+0x404>
   1bed4:	mov	r0, r5
   1bed8:	bl	f4f4 <free@plt>
   1bedc:	b	1b3a0 <processOptions@@Base+0x404>
   1bee0:	sub	r0, fp, #1584	; 0x630
   1bee4:	mov	r1, r6
   1bee8:	sub	r0, r0, #4
   1beec:	bl	1aa50 <cancelProcess@@Base+0xfc>
   1bef0:	b	1bdec <processOptions@@Base+0xe50>
   1bef4:	mov	r4, r2
   1bef8:	b	1ba90 <processOptions@@Base+0xaf4>
   1befc:	str	ip, [fp, #-1688]	; 0xfffff968
   1bf00:	bl	1c740 <logMallocError@@Base>
   1bf04:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1bf08:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1bf0c:	b	1b0c8 <processOptions@@Base+0x12c>
   1bf10:	mov	r2, #0
   1bf14:	str	ip, [fp, #-1688]	; 0xfffff968
   1bf18:	bl	1a96c <cancelProcess@@Base+0x18>
   1bf1c:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1bf20:	b	1b760 <processOptions@@Base+0x7c4>
   1bf24:	bl	fca4 <__errno_location@plt>
   1bf28:	ldr	r3, [r0]
   1bf2c:	cmp	r3, #2
   1bf30:	bne	1b7f4 <processOptions@@Base+0x858>
   1bf34:	b	1b508 <processOptions@@Base+0x56c>
   1bf38:	ldr	r2, [pc, #164]	; 1bfe4 <processOptions@@Base+0x1048>
   1bf3c:	mov	r3, ip
   1bf40:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   1bf44:	mov	r1, #1
   1bf48:	add	r2, pc, r2
   1bf4c:	bl	f65c <__fprintf_chk@plt>
   1bf50:	b	1b90c <processOptions@@Base+0x970>
   1bf54:	mov	r3, r2
   1bf58:	b	1bb08 <processOptions@@Base+0xb6c>
   1bf5c:	ldr	r1, [pc, #132]	; 1bfe8 <processOptions@@Base+0x104c>
   1bf60:	mov	r2, #5
   1bf64:	mov	r0, r7
   1bf68:	add	r1, pc, r1
   1bf6c:	bl	f9bc <dcgettext@plt>
   1bf70:	mov	r2, r5
   1bf74:	mov	r1, r0
   1bf78:	mov	r0, #3
   1bf7c:	bl	1c634 <logMessage@@Base>
   1bf80:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   1bf84:	orr	r3, r3, #2
   1bf88:	strb	r3, [fp, #-1324]	; 0xfffffad4
   1bf8c:	b	1b4f8 <processOptions@@Base+0x55c>
   1bf90:	andeq	r7, r5, r4, asr #21
   1bf94:			; <UNDEFINED> instruction: 0x000003b4
   1bf98:	andeq	lr, r3, r4, ror #27
   1bf9c:	andeq	r3, r3, r8, ror #23
   1bfa0:	andeq	r0, r0, r8, lsr #7
   1bfa4:	andeq	r0, r0, ip, asr #7
   1bfa8:	strdeq	r3, [r3], -r0
   1bfac:	strdeq	r3, [r3], -r0
   1bfb0:	andeq	r3, r3, r8, ror #19
   1bfb4:	ldrdeq	r3, [r3], -r0
   1bfb8:	andeq	ip, r3, ip, ror ip
   1bfbc:			; <UNDEFINED> instruction: 0xfffff85c
   1bfc0:	andeq	r0, r0, r4, ror r4
   1bfc4:	andeq	r0, r0, ip, lsr #8
   1bfc8:	andeq	r0, r0, r8, lsr #10
   1bfcc:	strdeq	r3, [r3], -ip
   1bfd0:	muleq	r0, ip, r4
   1bfd4:	muleq	r4, r4, r1
   1bfd8:	muleq	r3, r8, r3
   1bfdc:	andeq	r3, r3, ip, asr #7
   1bfe0:	andeq	r2, r3, r8, asr #31
   1bfe4:	andeq	r3, r3, r8, lsr #1
   1bfe8:	andeq	r2, r3, ip, ror #26
   1bfec:			; <UNDEFINED> instruction: 0x00032cb4
   1bff0:	andeq	r2, r3, r4, ror ip
   1bff4:	andeq	r2, r3, r4, lsl #25
   1bff8:	ldr	r0, [pc, #-20]	; 1bfec <processOptions@@Base+0x1050>
   1bffc:	mov	r1, #1
   1c000:	ldr	r3, [fp, #-1632]	; 0xfffff9a0
   1c004:	mov	r2, #2
   1c008:	add	r0, pc, r0
   1c00c:	bl	fb18 <fwrite@plt>
   1c010:	ldr	r1, [pc, #-40]	; 1bff0 <processOptions@@Base+0x1054>
   1c014:	mov	r2, #5
   1c018:	mov	r0, #0
   1c01c:	add	r1, pc, r1
   1c020:	bl	f9bc <dcgettext@plt>
   1c024:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   1c028:	bl	fd64 <fputs@plt>
   1c02c:	ldr	r0, [pc, #-64]	; 1bff4 <processOptions@@Base+0x1058>
   1c030:	mov	r1, #1
   1c034:	mov	r2, #5
   1c038:	ldr	r3, [fp, #-1632]	; 0xfffff9a0
   1c03c:	add	r0, pc, r0
   1c040:	bl	fb18 <fwrite@plt>
   1c044:	b	1b8f4 <processOptions@@Base+0x958>
   1c048:	ldr	r7, [fp, #-1664]	; 0xfffff980
   1c04c:	b	1b1a4 <processOptions@@Base+0x208>
   1c050:	bl	1c740 <logMallocError@@Base>
   1c054:	b	1b500 <processOptions@@Base+0x564>
   1c058:	str	r6, [fp, #-1656]	; 0xfffff988
   1c05c:	mov	r4, r6
   1c060:	b	1b8ac <processOptions@@Base+0x910>
   1c064:	mov	r0, r4
   1c068:	bl	fd70 <getenv@plt>
   1c06c:	cmp	r0, #0
   1c070:	bne	1be20 <processOptions@@Base+0xe84>
   1c074:	b	1b3a0 <processOptions@@Base+0x404>
   1c078:	ldr	r4, [r6]
   1c07c:	ldr	r1, [sl]
   1c080:	b	1b30c <processOptions@@Base+0x370>
   1c084:	bl	f950 <__stack_chk_fail@plt>
   1c088:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c08c:	sub	sp, sp, #12
   1c090:	ldr	ip, [r2]
   1c094:	add	r6, r0, r1
   1c098:	ldr	r3, [pc, #140]	; 1c12c <processOptions@@Base+0x1190>
   1c09c:	rsb	r1, r0, r6
   1c0a0:	ldr	r5, [r2, #4]
   1c0a4:	mov	r9, r0
   1c0a8:	ldr	r7, [r2, #8]
   1c0ac:	add	r3, pc, r3
   1c0b0:	str	ip, [sp, #4]
   1c0b4:	mov	r2, #1
   1c0b8:	str	r3, [sp]
   1c0bc:	mvn	r3, #0
   1c0c0:	bl	fb60 <__snprintf_chk@plt>
   1c0c4:	add	r7, r5, r7
   1c0c8:	add	r0, r9, r0
   1c0cc:	cmp	r0, r6
   1c0d0:	movcc	r4, r0
   1c0d4:	movcs	r4, r6
   1c0d8:	cmp	r5, r7
   1c0dc:	bcs	1c120 <processOptions@@Base+0x1184>
   1c0e0:	ldr	r8, [pc, #72]	; 1c130 <processOptions@@Base+0x1194>
   1c0e4:	add	r8, pc, r8
   1c0e8:	str	r8, [sp]
   1c0ec:	mov	r0, r4
   1c0f0:	ldrb	ip, [r5], #1
   1c0f4:	rsb	r1, r4, r6
   1c0f8:	mov	r2, #1
   1c0fc:	mvn	r3, #0
   1c100:	str	ip, [sp, #4]
   1c104:	bl	fb60 <__snprintf_chk@plt>
   1c108:	add	r0, r4, r0
   1c10c:	cmp	r0, r6
   1c110:	movcc	r4, r0
   1c114:	movcs	r4, r6
   1c118:	cmp	r5, r7
   1c11c:	bne	1c0e8 <processOptions@@Base+0x114c>
   1c120:	rsb	r0, r9, r4
   1c124:	add	sp, sp, #12
   1c128:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c12c:	andeq	r2, r3, r8, asr #24
   1c130:	andeq	r2, r3, r4, lsl ip
   1c134:	push	{r4, r5, lr}
   1c138:	mov	ip, r2
   1c13c:	ldr	r4, [r2, #4]
   1c140:	sub	sp, sp, #12
   1c144:	ldr	lr, [ip]
   1c148:	mvn	r3, #0
   1c14c:	mov	r2, #1
   1c150:	mov	r5, r1
   1c154:	ldr	ip, [r4]
   1c158:	str	lr, [sp]
   1c15c:	str	ip, [sp, #4]
   1c160:	bl	f5d8 <__vsnprintf_chk@plt>
   1c164:	cmp	r0, #0
   1c168:	movlt	r0, #0
   1c16c:	blt	1c178 <processOptions@@Base+0x11dc>
   1c170:	cmp	r0, r5
   1c174:	movcs	r0, r5
   1c178:	add	sp, sp, #12
   1c17c:	pop	{r4, r5, pc}

0001c180 <enableLogCategory@@Base>:
   1c180:	push	{r3, r4, r5, r6, r7, lr}
   1c184:	mov	r5, r0
   1c188:	ldr	r6, [pc, #104]	; 1c1f8 <enableLogCategory@@Base+0x78>
   1c18c:	ldr	r4, [pc, #104]	; 1c1fc <enableLogCategory@@Base+0x7c>
   1c190:	ldr	r7, [pc, #104]	; 1c200 <enableLogCategory@@Base+0x80>
   1c194:	add	r6, pc, r6
   1c198:	add	r4, pc, r4
   1c19c:	add	r6, r6, #56	; 0x38
   1c1a0:	add	r7, pc, r7
   1c1a4:	ldr	r1, [r4]
   1c1a8:	mov	r0, r5
   1c1ac:	cmp	r1, #0
   1c1b0:	beq	1c1c0 <enableLogCategory@@Base+0x40>
   1c1b4:	bl	f4c4 <strcasecmp@plt>
   1c1b8:	cmp	r0, #0
   1c1bc:	beq	1c1d4 <enableLogCategory@@Base+0x54>
   1c1c0:	add	r4, r4, #8
   1c1c4:	cmp	r4, r6
   1c1c8:	bcc	1c1a4 <enableLogCategory@@Base+0x24>
   1c1cc:	mov	r0, #0
   1c1d0:	pop	{r3, r4, r5, r6, r7, pc}
   1c1d4:	ldr	r2, [pc, #40]	; 1c204 <enableLogCategory@@Base+0x84>
   1c1d8:	mov	r3, #1
   1c1dc:	ldr	r1, [pc, #36]	; 1c208 <enableLogCategory@@Base+0x88>
   1c1e0:	mov	r0, r3
   1c1e4:	add	r1, pc, r1
   1c1e8:	ldr	r2, [r7, r2]
   1c1ec:	rsb	r4, r1, r4
   1c1f0:	strb	r3, [r2, r4, asr #3]
   1c1f4:	pop	{r3, r4, r5, r6, r7, pc}
   1c1f8:	andeq	r3, r5, ip, lsr #8
   1c1fc:	andeq	r3, r5, r8, lsr #8
   1c200:	ldrdeq	r6, [r5], -r8
   1c204:	andeq	r0, r0, ip, ror r3
   1c208:	ldrdeq	r3, [r5], -ip

0001c20c <setLogPrefix@@Base>:
   1c20c:	ldr	r3, [pc, #16]	; 1c224 <setLogPrefix@@Base+0x18>
   1c210:	add	r3, pc, r3
   1c214:	ldr	r2, [r3]
   1c218:	str	r0, [r3]
   1c21c:	mov	r0, r2
   1c220:	bx	lr
   1c224:	strdeq	r7, [r5], -r4

0001c228 <closeLogFile@@Base>:
   1c228:	push	{r4, lr}
   1c22c:	ldr	r4, [pc, #28]	; 1c250 <closeLogFile@@Base+0x28>
   1c230:	add	r4, pc, r4
   1c234:	ldr	r0, [r4, #4]
   1c238:	cmp	r0, #0
   1c23c:	popeq	{r4, pc}
   1c240:	bl	fbc0 <fclose@plt>
   1c244:	mov	r3, #0
   1c248:	str	r3, [r4, #4]
   1c24c:	pop	{r4, pc}
   1c250:	ldrdeq	r7, [r5], -r4

0001c254 <openLogFile@@Base>:
   1c254:	push	{r4, lr}
   1c258:	mov	r4, r0
   1c25c:	bl	1c228 <closeLogFile@@Base>
   1c260:	ldr	r1, [pc, #24]	; 1c280 <openLogFile@@Base+0x2c>
   1c264:	mov	r0, r4
   1c268:	add	r1, pc, r1
   1c26c:	bl	f77c <fopen@plt>
   1c270:	ldr	r3, [pc, #12]	; 1c284 <openLogFile@@Base+0x30>
   1c274:	add	r3, pc, r3
   1c278:	str	r0, [r3, #4]
   1c27c:	pop	{r4, pc}
   1c280:	strdeq	ip, [r3], -r0
   1c284:	muleq	r5, r0, r3

0001c288 <openSystemLog@@Base>:
   1c288:	push	{r4, lr}
   1c28c:	ldr	r4, [pc, #44]	; 1c2c0 <openSystemLog@@Base+0x38>
   1c290:	add	r4, pc, r4
   1c294:	ldr	r3, [r4, #8]
   1c298:	cmp	r3, #0
   1c29c:	popne	{r4, pc}
   1c2a0:	ldr	r0, [pc, #28]	; 1c2c4 <openSystemLog@@Base+0x3c>
   1c2a4:	mov	r1, #1
   1c2a8:	mov	r2, #24
   1c2ac:	add	r0, pc, r0
   1c2b0:	bl	fd58 <openlog@plt>
   1c2b4:	mov	r3, #1
   1c2b8:	str	r3, [r4, #8]
   1c2bc:	pop	{r4, pc}
   1c2c0:	andeq	r7, r5, r4, ror r3
   1c2c4:	andeq	r2, r3, r4, ror r7

0001c2c8 <closeSystemLog@@Base>:
   1c2c8:	push	{r4, lr}
   1c2cc:	ldr	r4, [pc, #28]	; 1c2f0 <closeSystemLog@@Base+0x28>
   1c2d0:	add	r4, pc, r4
   1c2d4:	ldr	r3, [r4, #8]
   1c2d8:	cmp	r3, #0
   1c2dc:	popeq	{r4, pc}
   1c2e0:	bl	f6bc <closelog@plt>
   1c2e4:	mov	r3, #0
   1c2e8:	str	r3, [r4, #8]
   1c2ec:	pop	{r4, pc}
   1c2f0:	andeq	r7, r5, r4, lsr r3

0001c2f4 <logData@@Base>:
   1c2f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c2f8:	sub	sp, sp, #4160	; 0x1040
   1c2fc:	ldr	r4, [pc, #660]	; 1c598 <logData@@Base+0x2a4>
   1c300:	sub	sp, sp, #12
   1c304:	ldr	r3, [pc, #656]	; 1c59c <logData@@Base+0x2a8>
   1c308:	mov	r5, r0
   1c30c:	add	r4, pc, r4
   1c310:	mov	r8, r1
   1c314:	ands	r0, r0, #128	; 0x80
   1c318:	add	r1, sp, #8192	; 0x2000
   1c31c:	ldr	r3, [r4, r3]
   1c320:	mov	r9, r2
   1c324:	str	r3, [sp, #12]
   1c328:	ldr	r3, [r3]
   1c32c:	str	r3, [r1, #-4028]	; 0xfffff044
   1c330:	beq	1c36c <logData@@Base+0x78>
   1c334:	ldr	r3, [pc, #612]	; 1c5a0 <logData@@Base+0x2ac>
   1c338:	and	r5, r5, #127	; 0x7f
   1c33c:	ldr	r3, [r4, r3]
   1c340:	ldrb	r3, [r3, r5]
   1c344:	cmp	r3, #0
   1c348:	beq	1c490 <logData@@Base+0x19c>
   1c34c:	ldr	r2, [pc, #592]	; 1c5a4 <logData@@Base+0x2b0>
   1c350:	ldr	r3, [pc, #592]	; 1c5a8 <logData@@Base+0x2b4>
   1c354:	ldr	r2, [r4, r2]
   1c358:	add	r3, pc, r3
   1c35c:	add	r5, r3, r5, lsl #3
   1c360:	ldr	r3, [r5, #4]
   1c364:	ldrb	r5, [r2]
   1c368:	b	1c370 <logData@@Base+0x7c>
   1c36c:	mov	r3, r0
   1c370:	ldr	r1, [pc, #564]	; 1c5ac <logData@@Base+0x2b8>
   1c374:	ldr	r2, [pc, #564]	; 1c5b0 <logData@@Base+0x2bc>
   1c378:	ldr	r1, [r4, r1]
   1c37c:	ldr	r2, [r4, r2]
   1c380:	ldrb	r7, [r1]
   1c384:	ldrb	r6, [r2]
   1c388:	cmp	r7, r5
   1c38c:	movlt	r7, #0
   1c390:	movge	r7, #1
   1c394:	cmp	r6, r5
   1c398:	movlt	r6, #0
   1c39c:	movge	r6, #1
   1c3a0:	orrs	r2, r6, r7
   1c3a4:	beq	1c490 <logData@@Base+0x19c>
   1c3a8:	str	r3, [sp, #8]
   1c3ac:	bl	fca4 <__errno_location@plt>
   1c3b0:	ldr	r3, [sp, #8]
   1c3b4:	add	fp, sp, #72	; 0x48
   1c3b8:	cmp	r3, #0
   1c3bc:	ldr	ip, [r0]
   1c3c0:	str	r0, [sp, #16]
   1c3c4:	str	ip, [sp, #20]
   1c3c8:	beq	1c4b4 <logData@@Base+0x1c0>
   1c3cc:	sub	sl, fp, #4
   1c3d0:	ldr	r2, [pc, #476]	; 1c5b4 <logData@@Base+0x2c0>
   1c3d4:	mov	r1, #4096	; 0x1000
   1c3d8:	str	r3, [sp, #4]
   1c3dc:	add	r2, pc, r2
   1c3e0:	mov	r3, r1
   1c3e4:	str	r2, [sp]
   1c3e8:	mov	r0, sl
   1c3ec:	mov	r2, #1
   1c3f0:	bl	fb60 <__snprintf_chk@plt>
   1c3f4:	add	r3, sl, #4096	; 0x1000
   1c3f8:	add	r0, sl, r0
   1c3fc:	cmp	r0, r3
   1c400:	movcs	r0, r3
   1c404:	add	r1, sl, #4096	; 0x1000
   1c408:	mov	r2, r9
   1c40c:	rsb	r1, r0, r1
   1c410:	blx	r8
   1c414:	cmp	r7, #0
   1c418:	bne	1c4c0 <logData@@Base+0x1cc>
   1c41c:	cmp	r6, #0
   1c420:	beq	1c484 <logData@@Base+0x190>
   1c424:	ldr	r2, [pc, #396]	; 1c5b8 <logData@@Base+0x2c4>
   1c428:	ldr	r3, [pc, #396]	; 1c5bc <logData@@Base+0x2c8>
   1c42c:	add	r2, pc, r2
   1c430:	ldr	r0, [r2]
   1c434:	ldr	r3, [r4, r3]
   1c438:	cmp	r0, #0
   1c43c:	ldr	r4, [r3]
   1c440:	beq	1c464 <logData@@Base+0x170>
   1c444:	mov	r1, r4
   1c448:	bl	fd64 <fputs@plt>
   1c44c:	ldr	r0, [pc, #364]	; 1c5c0 <logData@@Base+0x2cc>
   1c450:	mov	r1, #1
   1c454:	mov	r2, #2
   1c458:	add	r0, pc, r0
   1c45c:	mov	r3, r4
   1c460:	bl	fb18 <fwrite@plt>
   1c464:	mov	r1, r4
   1c468:	mov	r0, sl
   1c46c:	bl	fd64 <fputs@plt>
   1c470:	mov	r0, #10
   1c474:	mov	r1, r4
   1c478:	bl	fb0c <fputc@plt>
   1c47c:	mov	r0, r4
   1c480:	bl	fcf8 <fflush@plt>
   1c484:	ldr	ip, [sp, #20]
   1c488:	ldr	r1, [sp, #16]
   1c48c:	str	ip, [r1]
   1c490:	ldr	ip, [sp, #12]
   1c494:	add	r3, sp, #8192	; 0x2000
   1c498:	ldr	r2, [r3, #-4028]	; 0xfffff044
   1c49c:	ldr	r3, [ip]
   1c4a0:	cmp	r2, r3
   1c4a4:	bne	1c594 <logData@@Base+0x2a0>
   1c4a8:	add	sp, sp, #4160	; 0x1040
   1c4ac:	add	sp, sp, #12
   1c4b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c4b4:	add	sl, sp, #68	; 0x44
   1c4b8:	mov	r0, sl
   1c4bc:	b	1c404 <logData@@Base+0x110>
   1c4c0:	ldr	r7, [pc, #252]	; 1c5c4 <logData@@Base+0x2d0>
   1c4c4:	add	r7, pc, r7
   1c4c8:	ldr	r3, [r7, #4]
   1c4cc:	cmp	r3, #0
   1c4d0:	beq	1c564 <logData@@Base+0x270>
   1c4d4:	sub	r8, fp, #44	; 0x2c
   1c4d8:	sub	fp, fp, #36	; 0x24
   1c4dc:	mov	r0, r8
   1c4e0:	bl	1e6fc <getCurrentTime@@Base>
   1c4e4:	add	ip, sp, #4160	; 0x1040
   1c4e8:	add	ip, ip, #8
   1c4ec:	movw	r3, #61396	; 0xefd4
   1c4f0:	ldr	r2, [pc, #208]	; 1c5c8 <logData@@Base+0x2d4>
   1c4f4:	movt	r3, #65535	; 0xffff
   1c4f8:	mov	r1, #32
   1c4fc:	mov	r0, fp
   1c500:	ldr	r3, [ip, r3]
   1c504:	add	r2, pc, r2
   1c508:	bl	1e8b8 <formatSeconds@@Base>
   1c50c:	ldr	r2, [r8, #4]
   1c510:	movw	lr, #56963	; 0xde83
   1c514:	movt	lr, #17179	; 0x431b
   1c518:	smull	r1, lr, lr, r2
   1c51c:	asr	r8, r2, #31
   1c520:	ldr	r2, [pc, #164]	; 1c5cc <logData@@Base+0x2d8>
   1c524:	mov	r1, #1
   1c528:	add	r2, pc, r2
   1c52c:	rsb	lr, r8, lr, asr #18
   1c530:	mov	r3, r0
   1c534:	ldr	r0, [r7, #4]
   1c538:	str	lr, [sp, #4]
   1c53c:	str	fp, [sp]
   1c540:	bl	f65c <__fprintf_chk@plt>
   1c544:	ldr	r1, [r7, #4]
   1c548:	mov	r0, sl
   1c54c:	bl	fd64 <fputs@plt>
   1c550:	mov	r0, #10
   1c554:	ldr	r1, [r7, #4]
   1c558:	bl	fb0c <fputc@plt>
   1c55c:	ldr	r0, [r7, #4]
   1c560:	bl	fcf8 <fflush@plt>
   1c564:	ldr	r3, [pc, #100]	; 1c5d0 <logData@@Base+0x2dc>
   1c568:	add	r3, pc, r3
   1c56c:	ldr	r3, [r3, #8]
   1c570:	cmp	r3, #0
   1c574:	beq	1c41c <logData@@Base+0x128>
   1c578:	ldr	r2, [pc, #84]	; 1c5d4 <logData@@Base+0x2e0>
   1c57c:	mov	r0, r5
   1c580:	mov	r1, #1
   1c584:	mov	r3, sl
   1c588:	add	r2, pc, r2
   1c58c:	bl	f938 <__syslog_chk@plt>
   1c590:	b	1c41c <logData@@Base+0x128>
   1c594:	bl	f950 <__stack_chk_fail@plt>
   1c598:	andeq	r6, r5, ip, ror #14
   1c59c:			; <UNDEFINED> instruction: 0x000003b4
   1c5a0:	andeq	r0, r0, ip, ror r3
   1c5a4:	andeq	r0, r0, ip, lsl #7
   1c5a8:	andeq	r3, r5, r8, ror #4
   1c5ac:	muleq	r0, r8, r4
   1c5b0:	muleq	r0, ip, r3
   1c5b4:	andeq	r2, r3, r4, lsr #18
   1c5b8:	ldrdeq	r7, [r5], -r8
   1c5bc:	andeq	r0, r0, r8, ror #8
   1c5c0:	ldrdeq	r2, [r3], -r0
   1c5c4:	andeq	r7, r5, r0, asr #2
   1c5c8:	andeq	r2, r3, r4, lsl #16
   1c5cc:	strdeq	r2, [r3], -r4
   1c5d0:	muleq	r5, ip, r0
   1c5d4:	andeq	r2, r3, ip, ror #5

0001c5d8 <vlogMessage@@Base>:
   1c5d8:	ldr	r3, [pc, #72]	; 1c628 <vlogMessage@@Base+0x50>
   1c5dc:	ldr	ip, [pc, #72]	; 1c62c <vlogMessage@@Base+0x54>
   1c5e0:	add	r3, pc, r3
   1c5e4:	push	{r4, lr}
   1c5e8:	sub	sp, sp, #16
   1c5ec:	ldr	r4, [r3, ip]
   1c5f0:	stmib	sp, {r1, r2}
   1c5f4:	add	r2, sp, #4
   1c5f8:	ldr	r1, [pc, #48]	; 1c630 <vlogMessage@@Base+0x58>
   1c5fc:	ldr	r3, [r4]
   1c600:	add	r1, pc, r1
   1c604:	str	r3, [sp, #12]
   1c608:	bl	1c2f4 <logData@@Base>
   1c60c:	ldr	r2, [sp, #12]
   1c610:	ldr	r3, [r4]
   1c614:	cmp	r2, r3
   1c618:	bne	1c624 <vlogMessage@@Base+0x4c>
   1c61c:	add	sp, sp, #16
   1c620:	pop	{r4, pc}
   1c624:	bl	f950 <__stack_chk_fail@plt>
   1c628:	muleq	r5, r8, r4
   1c62c:			; <UNDEFINED> instruction: 0x000003b4
   1c630:			; <UNDEFINED> instruction: 0xfffffb2c

0001c634 <logMessage@@Base>:
   1c634:	push	{r1, r2, r3}
   1c638:	ldr	r3, [pc, #84]	; 1c694 <logMessage@@Base+0x60>
   1c63c:	push	{r4, lr}
   1c640:	add	r3, pc, r3
   1c644:	ldr	lr, [pc, #76]	; 1c698 <logMessage@@Base+0x64>
   1c648:	sub	sp, sp, #12
   1c64c:	add	r2, sp, #8
   1c650:	add	ip, sp, #24
   1c654:	ldr	r1, [sp, #20]
   1c658:	ldr	r4, [r3, lr]
   1c65c:	str	ip, [r2, #-8]!
   1c660:	mov	r2, sp
   1c664:	ldr	r3, [r4]
   1c668:	str	r3, [sp, #4]
   1c66c:	bl	1c5d8 <vlogMessage@@Base>
   1c670:	ldr	r2, [sp, #4]
   1c674:	ldr	r3, [r4]
   1c678:	cmp	r2, r3
   1c67c:	bne	1c690 <logMessage@@Base+0x5c>
   1c680:	add	sp, sp, #12
   1c684:	pop	{r4, lr}
   1c688:	add	sp, sp, #12
   1c68c:	bx	lr
   1c690:	bl	f950 <__stack_chk_fail@plt>
   1c694:	andeq	r6, r5, r8, lsr r4
   1c698:			; <UNDEFINED> instruction: 0x000003b4

0001c69c <logBytes@@Base>:
   1c69c:	ldr	ip, [pc, #76]	; 1c6f0 <logBytes@@Base+0x54>
   1c6a0:	push	{r4, lr}
   1c6a4:	add	ip, pc, ip
   1c6a8:	ldr	lr, [pc, #68]	; 1c6f4 <logBytes@@Base+0x58>
   1c6ac:	sub	sp, sp, #16
   1c6b0:	ldr	r4, [ip, lr]
   1c6b4:	stm	sp, {r1, r2}
   1c6b8:	mov	r2, sp
   1c6bc:	ldr	r1, [pc, #52]	; 1c6f8 <logBytes@@Base+0x5c>
   1c6c0:	ldr	ip, [r4]
   1c6c4:	add	r1, pc, r1
   1c6c8:	str	r3, [sp, #8]
   1c6cc:	str	ip, [sp, #12]
   1c6d0:	bl	1c2f4 <logData@@Base>
   1c6d4:	ldr	r2, [sp, #12]
   1c6d8:	ldr	r3, [r4]
   1c6dc:	cmp	r2, r3
   1c6e0:	bne	1c6ec <logBytes@@Base+0x50>
   1c6e4:	add	sp, sp, #16
   1c6e8:	pop	{r4, pc}
   1c6ec:	bl	f950 <__stack_chk_fail@plt>
   1c6f0:	ldrdeq	r6, [r5], -r4
   1c6f4:			; <UNDEFINED> instruction: 0x000003b4
   1c6f8:			; <UNDEFINED> instruction: 0xfffff9bc

0001c6fc <logSystemError@@Base>:
   1c6fc:	push	{r4, r5, lr}
   1c700:	sub	sp, sp, #12
   1c704:	mov	r5, r0
   1c708:	bl	fca4 <__errno_location@plt>
   1c70c:	ldr	r4, [r0]
   1c710:	mov	r0, r4
   1c714:	bl	f5c0 <strerror@plt>
   1c718:	ldr	r1, [pc, #28]	; 1c73c <logSystemError@@Base+0x40>
   1c71c:	mov	r3, r4
   1c720:	mov	r2, r5
   1c724:	add	r1, pc, r1
   1c728:	str	r0, [sp]
   1c72c:	mov	r0, #3
   1c730:	bl	1c634 <logMessage@@Base>
   1c734:	add	sp, sp, #12
   1c738:	pop	{r4, r5, pc}
   1c73c:	andeq	r2, r3, r8, lsl #12

0001c740 <logMallocError@@Base>:
   1c740:	ldr	r0, [pc, #4]	; 1c74c <logMallocError@@Base+0xc>
   1c744:	add	r0, pc, r0
   1c748:	b	1c6fc <logSystemError@@Base>
   1c74c:	strdeq	r2, [r3], -ip
   1c750:	ldr	r3, [pc, #196]	; 1c81c <logMallocError@@Base+0xdc>
   1c754:	push	{r4, r5, r6, r7, lr}
   1c758:	add	r3, pc, r3
   1c75c:	mov	r6, r0
   1c760:	ldr	r0, [pc, #184]	; 1c820 <logMallocError@@Base+0xe0>
   1c764:	mov	r5, r1
   1c768:	mov	r1, r3
   1c76c:	sub	sp, sp, #28
   1c770:	mov	r3, #0
   1c774:	ldr	r7, [r1, r0]
   1c778:	add	r4, sp, #24
   1c77c:	str	r3, [sp, #4]
   1c780:	str	r3, [sp, #8]
   1c784:	ldr	r1, [r7]
   1c788:	str	r3, [sp, #12]
   1c78c:	str	r3, [sp, #16]
   1c790:	str	r1, [sp, #20]
   1c794:	strh	r2, [r4, #-20]!	; 0xffffffec
   1c798:	b	1c7ac <logMallocError@@Base+0x6c>
   1c79c:	bl	fca4 <__errno_location@plt>
   1c7a0:	ldr	r3, [r0]
   1c7a4:	cmp	r3, #4
   1c7a8:	bne	1c7e4 <logMallocError@@Base+0xa4>
   1c7ac:	mov	r0, r6
   1c7b0:	mov	r1, r5
   1c7b4:	mov	r2, r4
   1c7b8:	bl	f6e0 <fcntl@plt>
   1c7bc:	cmn	r0, #1
   1c7c0:	beq	1c79c <logMallocError@@Base+0x5c>
   1c7c4:	mov	r3, #1
   1c7c8:	ldr	r2, [sp, #20]
   1c7cc:	mov	r0, r3
   1c7d0:	ldr	r3, [r7]
   1c7d4:	cmp	r2, r3
   1c7d8:	bne	1c818 <logMallocError@@Base+0xd8>
   1c7dc:	add	sp, sp, #28
   1c7e0:	pop	{r4, r5, r6, r7, pc}
   1c7e4:	cmp	r3, #13
   1c7e8:	moveq	r2, #11
   1c7ec:	moveq	r3, #0
   1c7f0:	streq	r2, [r0]
   1c7f4:	beq	1c7c8 <logMallocError@@Base+0x88>
   1c7f8:	cmp	r3, #11
   1c7fc:	moveq	r3, #0
   1c800:	beq	1c7c8 <logMallocError@@Base+0x88>
   1c804:	ldr	r0, [pc, #24]	; 1c824 <logMallocError@@Base+0xe4>
   1c808:	add	r0, pc, r0
   1c80c:	bl	1c6fc <logSystemError@@Base>
   1c810:	mov	r3, #0
   1c814:	b	1c7c8 <logMallocError@@Base+0x88>
   1c818:	bl	f950 <__stack_chk_fail@plt>
   1c81c:	andeq	r6, r5, r0, lsr #6
   1c820:			; <UNDEFINED> instruction: 0x000003b4
   1c824:	andeq	r2, r3, r4, lsr r6

0001c828 <isPathDelimiter@@Base>:
   1c828:	subs	r3, r0, #47	; 0x2f
   1c82c:	rsbs	r0, r3, #0
   1c830:	adcs	r0, r0, r3
   1c834:	bx	lr

0001c838 <isAbsolutePath@@Base>:
   1c838:	push	{r3, lr}
   1c83c:	ldrb	r0, [r0]
   1c840:	bl	1c828 <isPathDelimiter@@Base>
   1c844:	adds	r0, r0, #0
   1c848:	movne	r0, #1
   1c84c:	pop	{r3, pc}

0001c850 <getPathDirectory@@Base>:
   1c850:	push	{r4, r5, r6, r7, r8, lr}
   1c854:	mov	r8, r0
   1c858:	bl	fb54 <strlen@plt>
   1c85c:	subs	r7, r0, #0
   1c860:	addne	r6, r8, r7
   1c864:	movne	r5, r7
   1c868:	bne	1c87c <getPathDirectory@@Base+0x2c>
   1c86c:	b	1c8bc <getPathDirectory@@Base+0x6c>
   1c870:	cmp	r4, #0
   1c874:	mov	r5, r4
   1c878:	beq	1c8ec <getPathDirectory@@Base+0x9c>
   1c87c:	ldrb	r0, [r6, #-1]!
   1c880:	sub	r4, r5, #1
   1c884:	bl	1c828 <isPathDelimiter@@Base>
   1c888:	cmp	r0, #0
   1c88c:	bne	1c870 <getPathDirectory@@Base+0x20>
   1c890:	add	r6, r8, r5
   1c894:	b	1c8ac <getPathDirectory@@Base+0x5c>
   1c898:	ldrb	r0, [r6, #-2]
   1c89c:	sub	r6, r6, #1
   1c8a0:	bl	1c828 <isPathDelimiter@@Base>
   1c8a4:	cmp	r0, #0
   1c8a8:	bne	1c918 <getPathDirectory@@Base+0xc8>
   1c8ac:	cmp	r4, #0
   1c8b0:	mov	r5, r4
   1c8b4:	sub	r4, r4, #1
   1c8b8:	bne	1c898 <getPathDirectory@@Base+0x48>
   1c8bc:	mov	r0, #2
   1c8c0:	ldr	r8, [pc, #124]	; 1c944 <getPathDirectory@@Base+0xf4>
   1c8c4:	bl	fb48 <malloc@plt>
   1c8c8:	mov	r7, #1
   1c8cc:	add	r8, pc, r8
   1c8d0:	subs	r4, r0, #0
   1c8d4:	bne	1c8fc <getPathDirectory@@Base+0xac>
   1c8d8:	bl	1c740 <logMallocError@@Base>
   1c8dc:	mov	r0, r4
   1c8e0:	pop	{r4, r5, r6, r7, r8, pc}
   1c8e4:	mov	r5, r6
   1c8e8:	mov	r7, r5
   1c8ec:	add	r0, r7, #1
   1c8f0:	bl	fb48 <malloc@plt>
   1c8f4:	subs	r4, r0, #0
   1c8f8:	beq	1c8d8 <getPathDirectory@@Base+0x88>
   1c8fc:	mov	r1, r8
   1c900:	mov	r2, r7
   1c904:	bl	fb24 <memcpy@plt>
   1c908:	mov	r3, #0
   1c90c:	mov	r0, r4
   1c910:	strb	r3, [r4, r7]
   1c914:	pop	{r4, r5, r6, r7, r8, pc}
   1c918:	add	r7, r8, r5
   1c91c:	mov	r6, r5
   1c920:	ldrb	r0, [r7, #-1]!
   1c924:	sub	r4, r6, #1
   1c928:	bl	1c828 <isPathDelimiter@@Base>
   1c92c:	cmp	r0, #0
   1c930:	beq	1c8e4 <getPathDirectory@@Base+0x94>
   1c934:	cmp	r4, #0
   1c938:	mov	r6, r4
   1c93c:	bne	1c920 <getPathDirectory@@Base+0xd0>
   1c940:	b	1c8e8 <getPathDirectory@@Base+0x98>
   1c944:	strdeq	r3, [r3], -r4

0001c948 <locatePathName@@Base>:
   1c948:	push	{r4, r5, r6, lr}
   1c94c:	mov	r6, r0
   1c950:	bl	fb54 <strlen@plt>
   1c954:	add	r4, r6, r0
   1c958:	cmp	r6, r4
   1c95c:	beq	1c988 <locatePathName@@Base+0x40>
   1c960:	mov	r5, r4
   1c964:	b	1c970 <locatePathName@@Base+0x28>
   1c968:	cmp	r6, r5
   1c96c:	beq	1c990 <locatePathName@@Base+0x48>
   1c970:	mov	r4, r5
   1c974:	sub	r5, r5, #1
   1c978:	ldrb	r0, [r4, #-1]
   1c97c:	bl	1c828 <isPathDelimiter@@Base>
   1c980:	cmp	r0, #0
   1c984:	beq	1c968 <locatePathName@@Base+0x20>
   1c988:	mov	r0, r4
   1c98c:	pop	{r4, r5, r6, pc}
   1c990:	mov	r4, r6
   1c994:	mov	r0, r4
   1c998:	pop	{r4, r5, r6, pc}

0001c99c <locatePathExtension@@Base>:
   1c99c:	push	{r3, lr}
   1c9a0:	bl	1c948 <locatePathName@@Base>
   1c9a4:	mov	r1, #46	; 0x2e
   1c9a8:	pop	{r3, lr}
   1c9ac:	b	fd34 <strrchr@plt>

0001c9b0 <isExplicitPath@@Base>:
   1c9b0:	push	{r4, lr}
   1c9b4:	mov	r4, r0
   1c9b8:	bl	1c948 <locatePathName@@Base>
   1c9bc:	subs	r0, r4, r0
   1c9c0:	movne	r0, #1
   1c9c4:	pop	{r4, pc}

0001c9c8 <makePath@@Base>:
   1c9c8:	ldr	r3, [pc, #192]	; 1ca90 <makePath@@Base+0xc8>
   1c9cc:	ldr	r2, [pc, #192]	; 1ca94 <makePath@@Base+0xcc>
   1c9d0:	add	r3, pc, r3
   1c9d4:	push	{r4, r5, lr}
   1c9d8:	sub	sp, sp, #20
   1c9dc:	ldr	r4, [r3, r2]
   1c9e0:	mov	r5, r0
   1c9e4:	mov	r0, r1
   1c9e8:	str	r1, [sp, #8]
   1c9ec:	ldr	r3, [r4]
   1c9f0:	str	r3, [sp, #12]
   1c9f4:	bl	1c838 <isAbsolutePath@@Base>
   1c9f8:	cmp	r0, #0
   1c9fc:	bne	1ca14 <makePath@@Base+0x4c>
   1ca00:	cmp	r5, #0
   1ca04:	beq	1ca14 <makePath@@Base+0x4c>
   1ca08:	ldrb	r3, [r5]
   1ca0c:	cmp	r3, #0
   1ca10:	bne	1ca3c <makePath@@Base+0x74>
   1ca14:	mov	r1, #1
   1ca18:	mov	r3, #8
   1ca1c:	add	r0, sp, r3
   1ca20:	bl	1dcd0 <joinStrings@@Base>
   1ca24:	ldr	r2, [sp, #12]
   1ca28:	ldr	r3, [r4]
   1ca2c:	cmp	r2, r3
   1ca30:	bne	1ca88 <makePath@@Base+0xc0>
   1ca34:	add	sp, sp, #20
   1ca38:	pop	{r4, r5, pc}
   1ca3c:	mov	r0, r5
   1ca40:	bl	fb54 <strlen@plt>
   1ca44:	add	r0, r5, r0
   1ca48:	ldrb	r0, [r0, #-1]
   1ca4c:	bl	1c828 <isPathDelimiter@@Base>
   1ca50:	cmp	r0, #0
   1ca54:	movne	r1, #2
   1ca58:	movne	r3, #1
   1ca5c:	bne	1ca74 <makePath@@Base+0xac>
   1ca60:	ldr	r2, [pc, #48]	; 1ca98 <makePath@@Base+0xd0>
   1ca64:	mov	r3, r0
   1ca68:	mov	r1, #3
   1ca6c:	add	r2, pc, r2
   1ca70:	str	r2, [sp, #4]
   1ca74:	lsl	r3, r3, #2
   1ca78:	add	r0, sp, #16
   1ca7c:	add	r2, r0, r3
   1ca80:	str	r5, [r2, #-16]
   1ca84:	b	1ca1c <makePath@@Base+0x54>
   1ca88:	bl	f950 <__stack_chk_fail@plt>
   1ca8c:	bl	fd04 <_Unwind_Resume@plt>
   1ca90:	andeq	r6, r5, r8, lsr #1
   1ca94:			; <UNDEFINED> instruction: 0x000003b4
   1ca98:	andeq	r2, r3, r8, ror #7

0001ca9c <ensureFileExtension@@Base>:
   1ca9c:	ldr	r3, [pc, #144]	; 1cb34 <ensureFileExtension@@Base+0x98>
   1caa0:	ldr	r2, [pc, #144]	; 1cb38 <ensureFileExtension@@Base+0x9c>
   1caa4:	add	r3, pc, r3
   1caa8:	push	{r4, r5, r6, r7, lr}
   1caac:	sub	sp, sp, #20
   1cab0:	ldr	r4, [r3, r2]
   1cab4:	mov	r5, r1
   1cab8:	mov	r6, r0
   1cabc:	ldr	r3, [r4]
   1cac0:	str	r3, [sp, #12]
   1cac4:	bl	fb54 <strlen@plt>
   1cac8:	mov	r7, r0
   1cacc:	mov	r0, r5
   1cad0:	bl	fb54 <strlen@plt>
   1cad4:	str	r6, [sp, #4]
   1cad8:	cmp	r0, #0
   1cadc:	beq	1cb0c <ensureFileExtension@@Base+0x70>
   1cae0:	cmp	r7, r0
   1cae4:	bcs	1caf4 <ensureFileExtension@@Base+0x58>
   1cae8:	str	r5, [sp, #8]
   1caec:	mov	r1, #2
   1caf0:	b	1cb10 <ensureFileExtension@@Base+0x74>
   1caf4:	rsb	r0, r0, r7
   1caf8:	mov	r1, r5
   1cafc:	add	r0, r6, r0
   1cb00:	bl	fc5c <strcmp@plt>
   1cb04:	cmp	r0, #0
   1cb08:	bne	1cae8 <ensureFileExtension@@Base+0x4c>
   1cb0c:	mov	r1, #1
   1cb10:	add	r0, sp, #4
   1cb14:	bl	1dcd0 <joinStrings@@Base>
   1cb18:	ldr	r2, [sp, #12]
   1cb1c:	ldr	r3, [r4]
   1cb20:	cmp	r2, r3
   1cb24:	bne	1cb30 <ensureFileExtension@@Base+0x94>
   1cb28:	add	sp, sp, #20
   1cb2c:	pop	{r4, r5, r6, r7, pc}
   1cb30:	bl	f950 <__stack_chk_fail@plt>
   1cb34:	ldrdeq	r5, [r5], -r4
   1cb38:			; <UNDEFINED> instruction: 0x000003b4

0001cb3c <makeFilePath@@Base>:
   1cb3c:	push	{r3, r4, r5, lr}
   1cb40:	mov	r5, r0
   1cb44:	mov	r0, r1
   1cb48:	mov	r1, r2
   1cb4c:	bl	1ca9c <ensureFileExtension@@Base>
   1cb50:	subs	r4, r0, #0
   1cb54:	beq	1cb78 <makeFilePath@@Base+0x3c>
   1cb58:	mov	r0, r5
   1cb5c:	mov	r1, r4
   1cb60:	bl	1c9c8 <makePath@@Base>
   1cb64:	mov	r5, r0
   1cb68:	mov	r0, r4
   1cb6c:	bl	f4f4 <free@plt>
   1cb70:	mov	r0, r5
   1cb74:	pop	{r3, r4, r5, pc}
   1cb78:	mov	r5, r4
   1cb7c:	b	1cb70 <makeFilePath@@Base+0x34>

0001cb80 <testPath@@Base>:
   1cb80:	push	{r3, lr}
   1cb84:	mov	r1, #0
   1cb88:	bl	f9a4 <access@plt>
   1cb8c:	adds	r0, r0, #1
   1cb90:	movne	r0, #1
   1cb94:	pop	{r3, pc}

0001cb98 <testFilePath@@Base>:
   1cb98:	ldr	r3, [pc, #120]	; 1cc18 <testFilePath@@Base+0x80>
   1cb9c:	mov	r1, r0
   1cba0:	ldr	ip, [pc, #116]	; 1cc1c <testFilePath@@Base+0x84>
   1cba4:	mov	r0, #3
   1cba8:	add	r3, pc, r3
   1cbac:	push	{r4, lr}
   1cbb0:	sub	sp, sp, #96	; 0x60
   1cbb4:	ldr	r4, [r3, ip]
   1cbb8:	mov	r2, sp
   1cbbc:	ldr	r3, [r4]
   1cbc0:	str	r3, [sp, #92]	; 0x5c
   1cbc4:	bl	fbfc <__xstat@plt>
   1cbc8:	cmn	r0, #1
   1cbcc:	moveq	r3, #0
   1cbd0:	beq	1cbf8 <testFilePath@@Base+0x60>
   1cbd4:	ldr	r3, [sp, #16]
   1cbd8:	and	r3, r3, #61440	; 0xf000
   1cbdc:	cmp	r3, #32768	; 0x8000
   1cbe0:	moveq	r3, #1
   1cbe4:	beq	1cbf8 <testFilePath@@Base+0x60>
   1cbe8:	bl	fca4 <__errno_location@plt>
   1cbec:	mov	r3, #0
   1cbf0:	mov	r2, #17
   1cbf4:	str	r2, [r0]
   1cbf8:	ldr	r2, [sp, #92]	; 0x5c
   1cbfc:	mov	r0, r3
   1cc00:	ldr	r3, [r4]
   1cc04:	cmp	r2, r3
   1cc08:	bne	1cc14 <testFilePath@@Base+0x7c>
   1cc0c:	add	sp, sp, #96	; 0x60
   1cc10:	pop	{r4, pc}
   1cc14:	bl	f950 <__stack_chk_fail@plt>
   1cc18:	ldrdeq	r5, [r5], -r0
   1cc1c:			; <UNDEFINED> instruction: 0x000003b4

0001cc20 <testProgramPath@@Base>:
   1cc20:	push	{r3, lr}
   1cc24:	mov	r1, #1
   1cc28:	bl	f9a4 <access@plt>
   1cc2c:	adds	r0, r0, #1
   1cc30:	movne	r0, #1
   1cc34:	pop	{r3, pc}

0001cc38 <testDirectoryPath@@Base>:
   1cc38:	ldr	r3, [pc, #120]	; 1ccb8 <testDirectoryPath@@Base+0x80>
   1cc3c:	mov	r1, r0
   1cc40:	ldr	ip, [pc, #116]	; 1ccbc <testDirectoryPath@@Base+0x84>
   1cc44:	mov	r0, #3
   1cc48:	add	r3, pc, r3
   1cc4c:	push	{r4, lr}
   1cc50:	sub	sp, sp, #96	; 0x60
   1cc54:	ldr	r4, [r3, ip]
   1cc58:	mov	r2, sp
   1cc5c:	ldr	r3, [r4]
   1cc60:	str	r3, [sp, #92]	; 0x5c
   1cc64:	bl	fbfc <__xstat@plt>
   1cc68:	cmn	r0, #1
   1cc6c:	moveq	r3, #0
   1cc70:	beq	1cc98 <testDirectoryPath@@Base+0x60>
   1cc74:	ldr	r3, [sp, #16]
   1cc78:	and	r3, r3, #61440	; 0xf000
   1cc7c:	cmp	r3, #16384	; 0x4000
   1cc80:	moveq	r3, #1
   1cc84:	beq	1cc98 <testDirectoryPath@@Base+0x60>
   1cc88:	bl	fca4 <__errno_location@plt>
   1cc8c:	mov	r3, #0
   1cc90:	mov	r2, #17
   1cc94:	str	r2, [r0]
   1cc98:	ldr	r2, [sp, #92]	; 0x5c
   1cc9c:	mov	r0, r3
   1cca0:	ldr	r3, [r4]
   1cca4:	cmp	r2, r3
   1cca8:	bne	1ccb4 <testDirectoryPath@@Base+0x7c>
   1ccac:	add	sp, sp, #96	; 0x60
   1ccb0:	pop	{r4, pc}
   1ccb4:	bl	f950 <__stack_chk_fail@plt>
   1ccb8:	andeq	r5, r5, r0, lsr lr
   1ccbc:			; <UNDEFINED> instruction: 0x000003b4

0001ccc0 <createDirectory@@Base>:
   1ccc0:	push	{r4, r5, lr}
   1ccc4:	movw	r1, #493	; 0x1ed
   1ccc8:	sub	sp, sp, #12
   1cccc:	mov	r4, r0
   1ccd0:	bl	f9e0 <mkdir@plt>
   1ccd4:	cmn	r0, #1
   1ccd8:	movne	r0, #1
   1ccdc:	beq	1cce8 <createDirectory@@Base+0x28>
   1cce0:	add	sp, sp, #12
   1cce4:	pop	{r4, r5, pc}
   1cce8:	ldr	r1, [pc, #68]	; 1cd34 <createDirectory@@Base+0x74>
   1ccec:	mov	r2, #5
   1ccf0:	mov	r0, #0
   1ccf4:	add	r1, pc, r1
   1ccf8:	bl	f9bc <dcgettext@plt>
   1ccfc:	mov	r5, r0
   1cd00:	bl	fca4 <__errno_location@plt>
   1cd04:	ldr	r0, [r0]
   1cd08:	bl	f5c0 <strerror@plt>
   1cd0c:	ldr	r1, [pc, #36]	; 1cd38 <createDirectory@@Base+0x78>
   1cd10:	mov	r2, r5
   1cd14:	mov	r3, r4
   1cd18:	add	r1, pc, r1
   1cd1c:	str	r0, [sp]
   1cd20:	mov	r0, #4
   1cd24:	bl	1c634 <logMessage@@Base>
   1cd28:	mov	r0, #0
   1cd2c:	add	sp, sp, #12
   1cd30:	pop	{r4, r5, pc}
   1cd34:	andeq	r2, r3, r4, ror #2
   1cd38:	andeq	r1, r3, r8, lsr lr

0001cd3c <ensureDirectory@@Base>:
   1cd3c:	push	{r3, r4, r5, r6, r7, lr}
   1cd40:	mov	r5, r0
   1cd44:	bl	1cc38 <testDirectoryPath@@Base>
   1cd48:	subs	r4, r0, #0
   1cd4c:	movne	r4, #1
   1cd50:	bne	1cd88 <ensureDirectory@@Base+0x4c>
   1cd54:	bl	fca4 <__errno_location@plt>
   1cd58:	ldr	r0, [r0]
   1cd5c:	cmp	r0, #17
   1cd60:	beq	1cde4 <ensureDirectory@@Base+0xa8>
   1cd64:	cmp	r0, #2
   1cd68:	beq	1cd90 <ensureDirectory@@Base+0x54>
   1cd6c:	bl	f5c0 <strerror@plt>
   1cd70:	ldr	r1, [pc, #132]	; 1cdfc <ensureDirectory@@Base+0xc0>
   1cd74:	mov	r2, r5
   1cd78:	add	r1, pc, r1
   1cd7c:	mov	r3, r0
   1cd80:	mov	r0, #3
   1cd84:	bl	1c634 <logMessage@@Base>
   1cd88:	mov	r0, r4
   1cd8c:	pop	{r3, r4, r5, r6, r7, pc}
   1cd90:	mov	r0, r5
   1cd94:	bl	1c850 <getPathDirectory@@Base>
   1cd98:	subs	r6, r0, #0
   1cd9c:	beq	1cd88 <ensureDirectory@@Base+0x4c>
   1cda0:	bl	1cd3c <ensureDirectory@@Base>
   1cda4:	mov	r7, r0
   1cda8:	mov	r0, r6
   1cdac:	bl	f4f4 <free@plt>
   1cdb0:	cmp	r7, #0
   1cdb4:	beq	1cd88 <ensureDirectory@@Base+0x4c>
   1cdb8:	mov	r0, r5
   1cdbc:	bl	1ccc0 <createDirectory@@Base>
   1cdc0:	cmp	r0, #0
   1cdc4:	beq	1cd88 <ensureDirectory@@Base+0x4c>
   1cdc8:	ldr	r1, [pc, #48]	; 1ce00 <ensureDirectory@@Base+0xc4>
   1cdcc:	mov	r2, r5
   1cdd0:	mov	r0, #5
   1cdd4:	mov	r4, #1
   1cdd8:	add	r1, pc, r1
   1cddc:	bl	1c634 <logMessage@@Base>
   1cde0:	b	1cd88 <ensureDirectory@@Base+0x4c>
   1cde4:	ldr	r1, [pc, #24]	; 1ce04 <ensureDirectory@@Base+0xc8>
   1cde8:	mov	r2, r5
   1cdec:	mov	r0, #3
   1cdf0:	add	r1, pc, r1
   1cdf4:	bl	1c634 <logMessage@@Base>
   1cdf8:	b	1cd88 <ensureDirectory@@Base+0x4c>
   1cdfc:	andeq	r2, r3, ip, lsl #2
   1ce00:	andeq	r2, r3, ip, asr #1
   1ce04:	andeq	r2, r3, r0, lsl #1

0001ce08 <getWritableDirectory@@Base>:
   1ce08:	ldr	r3, [pc, #64]	; 1ce50 <getWritableDirectory@@Base+0x48>
   1ce0c:	ldr	r2, [pc, #64]	; 1ce54 <getWritableDirectory@@Base+0x4c>
   1ce10:	add	r3, pc, r3
   1ce14:	push	{r4, lr}
   1ce18:	ldr	r4, [r3, r2]
   1ce1c:	ldr	r0, [r4]
   1ce20:	cmp	r0, #0
   1ce24:	beq	1ce48 <getWritableDirectory@@Base+0x40>
   1ce28:	ldrb	r3, [r0]
   1ce2c:	cmp	r3, #0
   1ce30:	beq	1ce48 <getWritableDirectory@@Base+0x40>
   1ce34:	bl	1cd3c <ensureDirectory@@Base>
   1ce38:	cmp	r0, #0
   1ce3c:	beq	1ce48 <getWritableDirectory@@Base+0x40>
   1ce40:	ldr	r0, [r4]
   1ce44:	pop	{r4, pc}
   1ce48:	mov	r0, #0
   1ce4c:	pop	{r4, pc}
   1ce50:	andeq	r5, r5, r8, ror #24
   1ce54:	andeq	r0, r0, ip, asr r5

0001ce58 <makeWritablePath@@Base>:
   1ce58:	push	{r4, lr}
   1ce5c:	mov	r4, r0
   1ce60:	bl	1ce08 <getWritableDirectory@@Base>
   1ce64:	cmp	r0, #0
   1ce68:	popeq	{r4, pc}
   1ce6c:	mov	r1, r4
   1ce70:	pop	{r4, lr}
   1ce74:	b	1c9c8 <makePath@@Base>

0001ce78 <getWorkingDirectory@@Base>:
   1ce78:	push	{r3, r4, r5, r6, r7, lr}
   1ce7c:	mov	r5, #0
   1ce80:	mov	r4, #128	; 0x80
   1ce84:	b	1ceac <getWorkingDirectory@@Base+0x34>
   1ce88:	bl	fb84 <getcwd@plt>
   1ce8c:	mov	r5, r6
   1ce90:	cmp	r0, #0
   1ce94:	bne	1cf1c <getWorkingDirectory@@Base+0xa4>
   1ce98:	bl	fca4 <__errno_location@plt>
   1ce9c:	ldr	r3, [r0]
   1cea0:	mov	r7, r0
   1cea4:	cmp	r3, #34	; 0x22
   1cea8:	bne	1cf24 <getWorkingDirectory@@Base+0xac>
   1ceac:	lsl	r4, r4, #1
   1ceb0:	mov	r0, r5
   1ceb4:	mov	r1, r4
   1ceb8:	bl	f878 <realloc@plt>
   1cebc:	mov	r1, r4
   1cec0:	subs	r6, r0, #0
   1cec4:	bne	1ce88 <getWorkingDirectory@@Base+0x10>
   1cec8:	bl	1c740 <logMallocError@@Base>
   1cecc:	cmp	r5, #0
   1ced0:	bne	1cf3c <getWorkingDirectory@@Base+0xc4>
   1ced4:	bl	fca4 <__errno_location@plt>
   1ced8:	mov	r7, r0
   1cedc:	ldr	r1, [pc, #104]	; 1cf4c <getWorkingDirectory@@Base+0xd4>
   1cee0:	mov	r2, #5
   1cee4:	mov	r0, #0
   1cee8:	add	r1, pc, r1
   1ceec:	bl	f9bc <dcgettext@plt>
   1cef0:	mov	r4, r0
   1cef4:	ldr	r0, [r7]
   1cef8:	bl	f5c0 <strerror@plt>
   1cefc:	ldr	r1, [pc, #76]	; 1cf50 <getWorkingDirectory@@Base+0xd8>
   1cf00:	mov	r2, r4
   1cf04:	add	r1, pc, r1
   1cf08:	mov	r3, r0
   1cf0c:	mov	r0, #4
   1cf10:	bl	1c634 <logMessage@@Base>
   1cf14:	mov	r0, #0
   1cf18:	pop	{r3, r4, r5, r6, r7, pc}
   1cf1c:	mov	r0, r6
   1cf20:	pop	{r3, r4, r5, r6, r7, pc}
   1cf24:	ldr	r0, [pc, #40]	; 1cf54 <getWorkingDirectory@@Base+0xdc>
   1cf28:	add	r0, pc, r0
   1cf2c:	bl	1c6fc <logSystemError@@Base>
   1cf30:	mov	r0, r6
   1cf34:	bl	f4f4 <free@plt>
   1cf38:	b	1cedc <getWorkingDirectory@@Base+0x64>
   1cf3c:	bl	fca4 <__errno_location@plt>
   1cf40:	mov	r6, r5
   1cf44:	mov	r7, r0
   1cf48:	b	1cf30 <getWorkingDirectory@@Base+0xb8>
   1cf4c:	ldrdeq	r1, [r3], -ip
   1cf50:	andeq	r2, r3, r0, lsr r4
   1cf54:	muleq	r3, r4, pc	; <UNPREDICTABLE>

0001cf58 <setWorkingDirectory@@Base>:
   1cf58:	push	{r4, r5, lr}
   1cf5c:	sub	sp, sp, #12
   1cf60:	mov	r4, r0
   1cf64:	bl	f3e0 <chdir@plt>
   1cf68:	cmn	r0, #1
   1cf6c:	movne	r0, #1
   1cf70:	beq	1cf7c <setWorkingDirectory@@Base+0x24>
   1cf74:	add	sp, sp, #12
   1cf78:	pop	{r4, r5, pc}
   1cf7c:	ldr	r1, [pc, #68]	; 1cfc8 <setWorkingDirectory@@Base+0x70>
   1cf80:	mov	r2, #5
   1cf84:	mov	r0, #0
   1cf88:	add	r1, pc, r1
   1cf8c:	bl	f9bc <dcgettext@plt>
   1cf90:	mov	r5, r0
   1cf94:	bl	fca4 <__errno_location@plt>
   1cf98:	ldr	r0, [r0]
   1cf9c:	bl	f5c0 <strerror@plt>
   1cfa0:	ldr	r1, [pc, #36]	; 1cfcc <setWorkingDirectory@@Base+0x74>
   1cfa4:	mov	r2, r5
   1cfa8:	mov	r3, r4
   1cfac:	add	r1, pc, r1
   1cfb0:	str	r0, [sp]
   1cfb4:	mov	r0, #4
   1cfb8:	bl	1c634 <logMessage@@Base>
   1cfbc:	mov	r0, #0
   1cfc0:	add	sp, sp, #12
   1cfc4:	pop	{r4, r5, pc}
   1cfc8:	andeq	r1, r3, ip, asr pc
   1cfcc:	andeq	r1, r3, r4, lsr #23

0001cfd0 <getHomeDirectory@@Base>:
   1cfd0:	ldr	r0, [pc, #80]	; 1d028 <getHomeDirectory@@Base+0x58>
   1cfd4:	push	{lr}		; (str lr, [sp, #-4]!)
   1cfd8:	add	r0, pc, r0
   1cfdc:	sub	sp, sp, #12
   1cfe0:	bl	fd70 <getenv@plt>
   1cfe4:	subs	r3, r0, #0
   1cfe8:	beq	1d00c <getHomeDirectory@@Base+0x3c>
   1cfec:	ldrb	r3, [r3]
   1cff0:	cmp	r3, #0
   1cff4:	beq	1d00c <getHomeDirectory@@Base+0x3c>
   1cff8:	bl	f740 <__strdup@plt>
   1cffc:	cmp	r0, #0
   1d000:	beq	1d018 <getHomeDirectory@@Base+0x48>
   1d004:	add	sp, sp, #12
   1d008:	pop	{pc}		; (ldr pc, [sp], #4)
   1d00c:	mov	r0, r3
   1d010:	add	sp, sp, #12
   1d014:	pop	{pc}		; (ldr pc, [sp], #4)
   1d018:	str	r0, [sp, #4]
   1d01c:	bl	1c740 <logMallocError@@Base>
   1d020:	ldr	r0, [sp, #4]
   1d024:	b	1d004 <getHomeDirectory@@Base+0x34>
   1d028:	strdeq	r5, [r3], -r8

0001d02c <getOverrideDirectory@@Base>:
   1d02c:	push	{r4, r5, r6, lr}
   1d030:	ldr	r4, [pc, #208]	; 1d108 <getOverrideDirectory@@Base+0xdc>
   1d034:	add	r4, pc, r4
   1d038:	ldr	r0, [r4]
   1d03c:	cmp	r0, #0
   1d040:	beq	1d054 <getOverrideDirectory@@Base+0x28>
   1d044:	ldrb	r3, [r0]
   1d048:	cmp	r3, #0
   1d04c:	moveq	r0, #0
   1d050:	pop	{r4, r5, r6, pc}
   1d054:	bl	1cfd0 <getHomeDirectory@@Base>
   1d058:	subs	r6, r0, #0
   1d05c:	beq	1d0a4 <getOverrideDirectory@@Base+0x78>
   1d060:	ldr	r1, [pc, #164]	; 1d10c <getOverrideDirectory@@Base+0xe0>
   1d064:	add	r1, pc, r1
   1d068:	bl	1c9c8 <makePath@@Base>
   1d06c:	mov	r5, r0
   1d070:	mov	r0, r6
   1d074:	str	r5, [r4]
   1d078:	bl	f4f4 <free@plt>
   1d07c:	cmp	r5, #0
   1d080:	beq	1d0a4 <getOverrideDirectory@@Base+0x78>
   1d084:	ldr	r1, [pc, #132]	; 1d110 <getOverrideDirectory@@Base+0xe4>
   1d088:	mov	r0, #6
   1d08c:	mov	r2, r5
   1d090:	add	r1, pc, r1
   1d094:	bl	1c634 <logMessage@@Base>
   1d098:	ldr	r3, [pc, #116]	; 1d114 <getOverrideDirectory@@Base+0xe8>
   1d09c:	ldr	r0, [pc, r3]
   1d0a0:	b	1d044 <getOverrideDirectory@@Base+0x18>
   1d0a4:	bl	1ce78 <getWorkingDirectory@@Base>
   1d0a8:	subs	r4, r0, #0
   1d0ac:	beq	1d0dc <getOverrideDirectory@@Base+0xb0>
   1d0b0:	ldr	r1, [pc, #96]	; 1d118 <getOverrideDirectory@@Base+0xec>
   1d0b4:	add	r1, pc, r1
   1d0b8:	bl	1c9c8 <makePath@@Base>
   1d0bc:	ldr	r3, [pc, #88]	; 1d11c <getOverrideDirectory@@Base+0xf0>
   1d0c0:	add	r3, pc, r3
   1d0c4:	mov	r5, r0
   1d0c8:	mov	r0, r4
   1d0cc:	str	r5, [r3]
   1d0d0:	bl	f4f4 <free@plt>
   1d0d4:	cmp	r5, #0
   1d0d8:	bne	1d084 <getOverrideDirectory@@Base+0x58>
   1d0dc:	ldr	r4, [pc, #60]	; 1d120 <getOverrideDirectory@@Base+0xf4>
   1d0e0:	mov	r0, #4
   1d0e4:	ldr	r1, [pc, #56]	; 1d124 <getOverrideDirectory@@Base+0xf8>
   1d0e8:	add	r4, pc, r4
   1d0ec:	ldr	r3, [pc, #52]	; 1d128 <getOverrideDirectory@@Base+0xfc>
   1d0f0:	add	r1, pc, r1
   1d0f4:	add	r3, pc, r3
   1d0f8:	str	r3, [r4]
   1d0fc:	bl	1c634 <logMessage@@Base>
   1d100:	ldr	r0, [r4]
   1d104:	b	1d044 <getOverrideDirectory@@Base+0x18>
   1d108:	ldrdeq	r6, [r5], -ip
   1d10c:	andeq	r1, r3, ip, asr #27
   1d110:	andeq	r1, r3, ip, lsl #29
   1d114:	andeq	r6, r5, r4, ror r5
   1d118:	andeq	r1, r3, ip, ror sp
   1d11c:	andeq	r6, r5, r0, asr r5
   1d120:	andeq	r6, r5, r8, lsr #10
   1d124:	andeq	r1, r3, r4, lsl lr
   1d128:	andeq	r1, r3, r0, lsl ip

0001d12c <openFile@@Base>:
   1d12c:	push	{r4, r5, r6, lr}
   1d130:	mov	r6, r2
   1d134:	mov	r5, r0
   1d138:	bl	f77c <fopen@plt>
   1d13c:	subs	r4, r0, #0
   1d140:	beq	1d168 <openFile@@Base+0x3c>
   1d144:	bl	f914 <fileno@plt>
   1d148:	ldr	r1, [pc, #104]	; 1d1b8 <openFile@@Base+0x8c>
   1d14c:	mov	r2, r5
   1d150:	add	r1, pc, r1
   1d154:	mov	r3, r0
   1d158:	mov	r0, #7
   1d15c:	bl	1c634 <logMessage@@Base>
   1d160:	mov	r0, r4
   1d164:	pop	{r4, r5, r6, pc}
   1d168:	cmp	r6, #0
   1d16c:	bne	1d1a0 <openFile@@Base+0x74>
   1d170:	bl	fca4 <__errno_location@plt>
   1d174:	ldr	r0, [r0]
   1d178:	mov	r6, #3
   1d17c:	bl	f5c0 <strerror@plt>
   1d180:	ldr	r1, [pc, #52]	; 1d1bc <openFile@@Base+0x90>
   1d184:	mov	r2, r5
   1d188:	add	r1, pc, r1
   1d18c:	mov	r3, r0
   1d190:	mov	r0, r6
   1d194:	bl	1c634 <logMessage@@Base>
   1d198:	mov	r0, r4
   1d19c:	pop	{r4, r5, r6, pc}
   1d1a0:	bl	fca4 <__errno_location@plt>
   1d1a4:	ldr	r0, [r0]
   1d1a8:	cmp	r0, #2
   1d1ac:	moveq	r6, #7
   1d1b0:	bne	1d178 <openFile@@Base+0x4c>
   1d1b4:	b	1d17c <openFile@@Base+0x50>
   1d1b8:	andeq	r1, r3, r4, ror #27
   1d1bc:	andeq	r1, r3, r4, asr #27

0001d1c0 <openDataFile@@Base>:
   1d1c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1c4:	sub	sp, sp, #12
   1d1c8:	mov	r5, r1
   1d1cc:	mov	r6, r2
   1d1d0:	mov	r8, r0
   1d1d4:	bl	1c948 <locatePathName@@Base>
   1d1d8:	mov	r4, r0
   1d1dc:	bl	1d02c <getOverrideDirectory@@Base>
   1d1e0:	subs	r9, r0, #0
   1d1e4:	beq	1d238 <openDataFile@@Base+0x78>
   1d1e8:	mov	r1, r4
   1d1ec:	bl	1c9c8 <makePath@@Base>
   1d1f0:	subs	r4, r0, #0
   1d1f4:	beq	1d238 <openDataFile@@Base+0x78>
   1d1f8:	bl	1cb98 <testFilePath@@Base>
   1d1fc:	cmp	r0, #0
   1d200:	bne	1d288 <openDataFile@@Base+0xc8>
   1d204:	mov	r0, r8
   1d208:	mov	r1, r5
   1d20c:	mov	r2, r6
   1d210:	bl	1d12c <openFile@@Base>
   1d214:	subs	r7, r0, #0
   1d218:	beq	1d240 <openDataFile@@Base+0x80>
   1d21c:	cmp	r4, #0
   1d220:	beq	1d22c <openDataFile@@Base+0x6c>
   1d224:	mov	r0, r4
   1d228:	bl	f4f4 <free@plt>
   1d22c:	mov	r0, r7
   1d230:	add	sp, sp, #12
   1d234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d238:	mov	r4, #0
   1d23c:	b	1d204 <openDataFile@@Base+0x44>
   1d240:	ldrb	r3, [r5]
   1d244:	cmp	r3, #119	; 0x77
   1d248:	cmpne	r3, #97	; 0x61
   1d24c:	bne	1d21c <openDataFile@@Base+0x5c>
   1d250:	bl	fca4 <__errno_location@plt>
   1d254:	ldr	r3, [r0]
   1d258:	mov	sl, r0
   1d25c:	cmp	r3, #2
   1d260:	beq	1d2a0 <openDataFile@@Base+0xe0>
   1d264:	cmp	r3, #13
   1d268:	cmpne	r3, #30
   1d26c:	bne	1d21c <openDataFile@@Base+0x5c>
   1d270:	cmp	r4, #0
   1d274:	beq	1d22c <openDataFile@@Base+0x6c>
   1d278:	mov	r0, r9
   1d27c:	bl	1cd3c <ensureDirectory@@Base>
   1d280:	cmp	r0, #0
   1d284:	beq	1d224 <openDataFile@@Base+0x64>
   1d288:	mov	r1, r5
   1d28c:	mov	r2, r6
   1d290:	mov	r0, r4
   1d294:	bl	1d12c <openFile@@Base>
   1d298:	mov	r7, r0
   1d29c:	b	1d224 <openDataFile@@Base+0x64>
   1d2a0:	mov	r0, r8
   1d2a4:	bl	1c850 <getPathDirectory@@Base>
   1d2a8:	subs	fp, r0, #0
   1d2ac:	beq	1d2d0 <openDataFile@@Base+0x110>
   1d2b0:	bl	1cd3c <ensureDirectory@@Base>
   1d2b4:	mov	r3, r0
   1d2b8:	mov	r0, fp
   1d2bc:	str	r3, [sp, #4]
   1d2c0:	bl	f4f4 <free@plt>
   1d2c4:	ldr	r3, [sp, #4]
   1d2c8:	cmp	r3, #0
   1d2cc:	bne	1d2d8 <openDataFile@@Base+0x118>
   1d2d0:	ldr	r3, [sl]
   1d2d4:	b	1d264 <openDataFile@@Base+0xa4>
   1d2d8:	mov	r0, r8
   1d2dc:	mov	r1, r5
   1d2e0:	mov	r2, r6
   1d2e4:	bl	1d12c <openFile@@Base>
   1d2e8:	mov	r7, r0
   1d2ec:	b	1d21c <openDataFile@@Base+0x5c>

0001d2f0 <acquireFileLock@@Base>:
   1d2f0:	adds	r2, r1, #0
   1d2f4:	mov	r1, #7
   1d2f8:	movne	r2, #1
   1d2fc:	b	1c750 <logMallocError@@Base+0x10>

0001d300 <attemptFileLock@@Base>:
   1d300:	adds	r2, r1, #0
   1d304:	mov	r1, #6
   1d308:	movne	r2, #1
   1d30c:	b	1c750 <logMallocError@@Base+0x10>

0001d310 <releaseFileLock@@Base>:
   1d310:	mov	r1, #6
   1d314:	mov	r2, #2
   1d318:	b	1c750 <logMallocError@@Base+0x10>

0001d31c <readLine@@Base>:
   1d31c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1d320:	mov	r6, r1
   1d324:	mov	r7, r2
   1d328:	mov	r8, r0
   1d32c:	bl	fadc <ferror@plt>
   1d330:	cmp	r0, #0
   1d334:	beq	1d344 <readLine@@Base+0x28>
   1d338:	mov	r9, #0
   1d33c:	mov	r0, r9
   1d340:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d344:	mov	r0, r8
   1d348:	bl	f5fc <feof@plt>
   1d34c:	subs	r9, r0, #0
   1d350:	bne	1d338 <readLine@@Base+0x1c>
   1d354:	ldr	r1, [r7]
   1d358:	cmp	r1, #0
   1d35c:	ldrne	r0, [r6]
   1d360:	beq	1d404 <readLine@@Base+0xe8>
   1d364:	mov	r2, r8
   1d368:	bl	faf4 <fgets@plt>
   1d36c:	subs	r5, r0, #0
   1d370:	beq	1d484 <readLine@@Base+0x168>
   1d374:	bl	fb54 <strlen@plt>
   1d378:	sub	r2, r0, #1
   1d37c:	mov	r4, r0
   1d380:	ldrb	r3, [r5, r2]
   1d384:	cmp	r3, #10
   1d388:	beq	1d424 <readLine@@Base+0x108>
   1d38c:	ldr	r3, [r6]
   1d390:	b	1d3c8 <readLine@@Base+0xac>
   1d394:	mov	r2, r8
   1d398:	add	r0, r3, r4
   1d39c:	bl	faf4 <fgets@plt>
   1d3a0:	cmp	r0, #0
   1d3a4:	beq	1d458 <readLine@@Base+0x13c>
   1d3a8:	bl	fb54 <strlen@plt>
   1d3ac:	ldr	r5, [r6]
   1d3b0:	mov	r3, r5
   1d3b4:	add	r4, r4, r0
   1d3b8:	sub	r2, r4, #1
   1d3bc:	ldrb	r1, [r5, r2]
   1d3c0:	cmp	r1, #10
   1d3c4:	beq	1d424 <readLine@@Base+0x108>
   1d3c8:	ldr	r2, [r7]
   1d3cc:	rsb	r1, r4, r2
   1d3d0:	cmp	r1, #1
   1d3d4:	bne	1d394 <readLine@@Base+0x78>
   1d3d8:	lsl	r5, r2, #1
   1d3dc:	mov	r0, r3
   1d3e0:	mov	r1, r5
   1d3e4:	bl	f878 <realloc@plt>
   1d3e8:	rsb	r1, r4, r5
   1d3ec:	cmp	r0, #0
   1d3f0:	beq	1d47c <readLine@@Base+0x160>
   1d3f4:	str	r0, [r6]
   1d3f8:	str	r5, [r7]
   1d3fc:	ldr	r3, [r6]
   1d400:	b	1d394 <readLine@@Base+0x78>
   1d404:	mov	r0, #128	; 0x80
   1d408:	str	r0, [r7]
   1d40c:	bl	fb48 <malloc@plt>
   1d410:	cmp	r0, #0
   1d414:	str	r0, [r6]
   1d418:	beq	1d47c <readLine@@Base+0x160>
   1d41c:	ldr	r1, [r7]
   1d420:	b	1d364 <readLine@@Base+0x48>
   1d424:	cmp	r2, #0
   1d428:	moveq	r3, r5
   1d42c:	beq	1d444 <readLine@@Base+0x128>
   1d430:	sub	r4, r4, #2
   1d434:	add	r3, r5, r4
   1d438:	ldrb	r1, [r5, r4]
   1d43c:	cmp	r1, #13
   1d440:	addne	r3, r5, r2
   1d444:	mov	r9, #1
   1d448:	mov	r2, #0
   1d44c:	mov	r0, r9
   1d450:	strb	r2, [r3]
   1d454:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d458:	mov	r0, r8
   1d45c:	bl	fadc <ferror@plt>
   1d460:	cmp	r0, #0
   1d464:	moveq	r9, #1
   1d468:	beq	1d33c <readLine@@Base+0x20>
   1d46c:	ldr	r0, [pc, #36]	; 1d498 <readLine@@Base+0x17c>
   1d470:	add	r0, pc, r0
   1d474:	bl	1c6fc <logSystemError@@Base>
   1d478:	b	1d33c <readLine@@Base+0x20>
   1d47c:	bl	1c740 <logMallocError@@Base>
   1d480:	b	1d33c <readLine@@Base+0x20>
   1d484:	mov	r0, r8
   1d488:	bl	fadc <ferror@plt>
   1d48c:	cmp	r0, #0
   1d490:	beq	1d338 <readLine@@Base+0x1c>
   1d494:	b	1d46c <readLine@@Base+0x150>
   1d498:	muleq	r3, ip, r6

0001d49c <processLines@@Base>:
   1d49c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d4a0:	sub	sp, sp, #28
   1d4a4:	ldr	lr, [pc, #224]	; 1d58c <processLines@@Base+0xf0>
   1d4a8:	mov	r3, #0
   1d4ac:	ldr	ip, [pc, #220]	; 1d590 <processLines@@Base+0xf4>
   1d4b0:	mov	r4, r3
   1d4b4:	add	lr, pc, lr
   1d4b8:	ldr	sl, [pc, #212]	; 1d594 <processLines@@Base+0xf8>
   1d4bc:	mov	r8, r2
   1d4c0:	mov	r5, r0
   1d4c4:	ldr	ip, [lr, ip]
   1d4c8:	add	sl, pc, sl
   1d4cc:	str	r3, [sp, #12]
   1d4d0:	mov	r2, lr
   1d4d4:	str	r3, [sp, #16]
   1d4d8:	mov	r9, r1
   1d4dc:	ldr	r3, [ip]
   1d4e0:	add	sl, sl, #8
   1d4e4:	str	ip, [sp, #4]
   1d4e8:	add	r7, sp, #12
   1d4ec:	add	r6, sp, #16
   1d4f0:	str	r3, [sp, #20]
   1d4f4:	b	1d534 <processLines@@Base+0x98>
   1d4f8:	cmp	r4, #0
   1d4fc:	ldr	fp, [sp, #12]
   1d500:	bne	1d51c <processLines@@Base+0x80>
   1d504:	mov	r0, fp
   1d508:	mov	r1, sl
   1d50c:	mov	r2, #3
   1d510:	bl	f548 <strncmp@plt>
   1d514:	cmp	r0, #0
   1d518:	addeq	fp, fp, #3
   1d51c:	mov	r0, fp
   1d520:	mov	r1, r8
   1d524:	blx	r9
   1d528:	add	r4, r4, #1
   1d52c:	cmp	r0, #0
   1d530:	beq	1d54c <processLines@@Base+0xb0>
   1d534:	mov	r0, r5
   1d538:	mov	r1, r7
   1d53c:	mov	r2, r6
   1d540:	bl	1d31c <readLine@@Base>
   1d544:	cmp	r0, #0
   1d548:	bne	1d4f8 <processLines@@Base+0x5c>
   1d54c:	ldr	r0, [sp, #12]
   1d550:	cmp	r0, #0
   1d554:	beq	1d55c <processLines@@Base+0xc0>
   1d558:	bl	f4f4 <free@plt>
   1d55c:	mov	r0, r5
   1d560:	bl	fadc <ferror@plt>
   1d564:	ldr	r1, [sp, #4]
   1d568:	ldr	r2, [sp, #20]
   1d56c:	ldr	r3, [r1]
   1d570:	rsbs	r0, r0, #1
   1d574:	movcc	r0, #0
   1d578:	cmp	r2, r3
   1d57c:	bne	1d588 <processLines@@Base+0xec>
   1d580:	add	sp, sp, #28
   1d584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d588:	bl	f950 <__stack_chk_fail@plt>
   1d58c:	andeq	r5, r5, r4, asr #11
   1d590:			; <UNDEFINED> instruction: 0x000003b4
   1d594:	andeq	r1, r3, r8, ror #18

0001d598 <formatInputError@@Base>:
   1d598:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d59c:	cmp	r2, #0
   1d5a0:	sub	sp, sp, #12
   1d5a4:	mov	r7, r3
   1d5a8:	mov	r4, r0
   1d5ac:	add	r5, r0, r1
   1d5b0:	ldr	r9, [sp, #40]	; 0x28
   1d5b4:	moveq	r6, r0
   1d5b8:	ldr	r8, [sp, #44]	; 0x2c
   1d5bc:	beq	1d5e8 <formatInputError@@Base+0x50>
   1d5c0:	mov	r3, r2
   1d5c4:	ldr	r2, [pc, #184]	; 1d684 <formatInputError@@Base+0xec>
   1d5c8:	rsb	r1, r0, r5
   1d5cc:	mov	r6, r4
   1d5d0:	add	r2, pc, r2
   1d5d4:	bl	f734 <snprintf@plt>
   1d5d8:	add	r0, r4, r0
   1d5dc:	cmp	r0, r5
   1d5e0:	movcc	r4, r0
   1d5e4:	movcs	r4, r5
   1d5e8:	cmp	r7, #0
   1d5ec:	beq	1d624 <formatInputError@@Base+0x8c>
   1d5f0:	ldr	lr, [r7]
   1d5f4:	mov	r0, r4
   1d5f8:	ldr	ip, [pc, #136]	; 1d688 <formatInputError@@Base+0xf0>
   1d5fc:	rsb	r1, r4, r5
   1d600:	mov	r2, #1
   1d604:	mvn	r3, #0
   1d608:	add	ip, pc, ip
   1d60c:	stm	sp, {ip, lr}
   1d610:	bl	fb60 <__snprintf_chk@plt>
   1d614:	add	r0, r4, r0
   1d618:	cmp	r0, r5
   1d61c:	movcc	r4, r0
   1d620:	movcs	r4, r5
   1d624:	cmp	r6, r4
   1d628:	beq	1d650 <formatInputError@@Base+0xb8>
   1d62c:	ldr	r2, [pc, #88]	; 1d68c <formatInputError@@Base+0xf4>
   1d630:	mov	r0, r4
   1d634:	rsb	r1, r4, r5
   1d638:	add	r2, pc, r2
   1d63c:	bl	f734 <snprintf@plt>
   1d640:	add	r0, r4, r0
   1d644:	cmp	r0, r5
   1d648:	movcc	r4, r0
   1d64c:	movcs	r4, r5
   1d650:	str	r9, [sp]
   1d654:	mov	r0, r4
   1d658:	str	r8, [sp, #4]
   1d65c:	rsb	r1, r4, r5
   1d660:	mov	r2, #1
   1d664:	mvn	r3, #0
   1d668:	bl	f5d8 <__vsnprintf_chk@plt>
   1d66c:	add	r0, r4, r0
   1d670:	cmp	r0, r5
   1d674:	rsbls	r0, r6, r0
   1d678:	rsbhi	r0, r6, r5
   1d67c:	add	sp, sp, #12
   1d680:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d684:	andeq	r1, r3, r4, lsr #5
   1d688:	andeq	r1, r3, r0, ror #18
   1d68c:	strdeq	r1, [r3], -r0

0001d690 <getConsole@@Base>:
   1d690:	push	{r4, lr}
   1d694:	ldr	r4, [pc, #96]	; 1d6fc <getConsole@@Base+0x6c>
   1d698:	add	r4, pc, r4
   1d69c:	ldr	r0, [r4]
   1d6a0:	cmp	r0, #0
   1d6a4:	popne	{r4, pc}
   1d6a8:	ldr	r0, [pc, #80]	; 1d700 <getConsole@@Base+0x70>
   1d6ac:	ldr	r1, [pc, #80]	; 1d704 <getConsole@@Base+0x74>
   1d6b0:	add	r0, pc, r0
   1d6b4:	add	r1, pc, r1
   1d6b8:	bl	f77c <fopen@plt>
   1d6bc:	cmp	r0, #0
   1d6c0:	str	r0, [r4]
   1d6c4:	beq	1d6e8 <getConsole@@Base+0x58>
   1d6c8:	bl	f914 <fileno@plt>
   1d6cc:	ldr	r1, [pc, #52]	; 1d708 <getConsole@@Base+0x78>
   1d6d0:	add	r1, pc, r1
   1d6d4:	mov	r2, r0
   1d6d8:	mov	r0, #7
   1d6dc:	bl	1c634 <logMessage@@Base>
   1d6e0:	ldr	r0, [r4]
   1d6e4:	pop	{r4, pc}
   1d6e8:	ldr	r0, [pc, #28]	; 1d70c <getConsole@@Base+0x7c>
   1d6ec:	add	r0, pc, r0
   1d6f0:	bl	1c6fc <logSystemError@@Base>
   1d6f4:	ldr	r0, [r4]
   1d6f8:	pop	{r4, pc}
   1d6fc:	andeq	r5, r5, r0, lsl #31
   1d700:	andeq	r1, r3, r0, asr #17
   1d704:	andeq	r1, r3, ip, asr #17
   1d708:			; <UNDEFINED> instruction: 0x000318b4
   1d70c:			; <UNDEFINED> instruction: 0x000318b0

0001d710 <writeConsole@@Base>:
   1d710:	push	{r3, r4, r5, r6, r7, lr}
   1d714:	mov	r7, r0
   1d718:	mov	r4, r1
   1d71c:	bl	1d690 <getConsole@@Base>
   1d720:	subs	r6, r0, #0
   1d724:	beq	1d79c <writeConsole@@Base+0x8c>
   1d728:	cmp	r4, #0
   1d72c:	bne	1d74c <writeConsole@@Base+0x3c>
   1d730:	b	1d7a4 <writeConsole@@Base+0x94>
   1d734:	mov	r0, r6
   1d738:	bl	fadc <ferror@plt>
   1d73c:	cmp	r0, #0
   1d740:	bne	1d790 <writeConsole@@Base+0x80>
   1d744:	subs	r4, r4, r5
   1d748:	beq	1d7a4 <writeConsole@@Base+0x94>
   1d74c:	mov	r0, r7
   1d750:	mov	r1, #1
   1d754:	mov	r2, r4
   1d758:	mov	r3, r6
   1d75c:	bl	fb18 <fwrite@plt>
   1d760:	mov	r5, r0
   1d764:	mov	r0, r6
   1d768:	bl	fadc <ferror@plt>
   1d76c:	add	r7, r7, r5
   1d770:	cmp	r0, #0
   1d774:	bne	1d734 <writeConsole@@Base+0x24>
   1d778:	mov	r0, r6
   1d77c:	bl	fcf8 <fflush@plt>
   1d780:	mov	r0, r6
   1d784:	bl	fadc <ferror@plt>
   1d788:	cmp	r0, #0
   1d78c:	beq	1d744 <writeConsole@@Base+0x34>
   1d790:	ldr	r0, [pc, #20]	; 1d7ac <writeConsole@@Base+0x9c>
   1d794:	add	r0, pc, r0
   1d798:	bl	1c6fc <logSystemError@@Base>
   1d79c:	mov	r0, #0
   1d7a0:	pop	{r3, r4, r5, r6, r7, pc}
   1d7a4:	mov	r0, #1
   1d7a8:	pop	{r3, r4, r5, r6, r7, pc}
   1d7ac:	andeq	r1, r3, r8, lsl r8

0001d7b0 <ringBell@@Base>:
   1d7b0:	ldr	r0, [pc, #8]	; 1d7c0 <ringBell@@Base+0x10>
   1d7b4:	mov	r1, #1
   1d7b8:	add	r0, pc, r0
   1d7bc:	b	1d710 <writeConsole@@Base>
   1d7c0:			; <UNDEFINED> instruction: 0x000558b8

0001d7c4 <getDeviceDirectory@@Base>:
   1d7c4:	ldr	r3, [pc, #408]	; 1d964 <getDeviceDirectory@@Base+0x1a0>
   1d7c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7cc:	add	fp, sp, #32
   1d7d0:	ldr	r1, [pc, #400]	; 1d968 <getDeviceDirectory@@Base+0x1a4>
   1d7d4:	sub	sp, sp, #36	; 0x24
   1d7d8:	add	r3, pc, r3
   1d7dc:	ldr	r2, [pc, #392]	; 1d96c <getDeviceDirectory@@Base+0x1a8>
   1d7e0:	ldr	r6, [r3, r1]
   1d7e4:	add	r2, pc, r2
   1d7e8:	ldr	r0, [r2, #4]
   1d7ec:	ldr	r3, [r6]
   1d7f0:	cmp	r0, #0
   1d7f4:	str	r3, [fp, #-40]	; 0xffffffd8
   1d7f8:	beq	1d814 <getDeviceDirectory@@Base+0x50>
   1d7fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d800:	ldr	r3, [r6]
   1d804:	cmp	r2, r3
   1d808:	bne	1d960 <getDeviceDirectory@@Base+0x19c>
   1d80c:	sub	sp, fp, #32
   1d810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d814:	ldr	r3, [pc, #340]	; 1d970 <getDeviceDirectory@@Base+0x1ac>
   1d818:	ldr	r4, [pc, #340]	; 1d974 <getDeviceDirectory@@Base+0x1b0>
   1d81c:	add	r3, pc, r3
   1d820:	ldr	r0, [pc, #336]	; 1d978 <getDeviceDirectory@@Base+0x1b4>
   1d824:	ldr	r9, [pc, #336]	; 1d97c <getDeviceDirectory@@Base+0x1b8>
   1d828:	add	r4, pc, r4
   1d82c:	ldr	r8, [pc, #332]	; 1d980 <getDeviceDirectory@@Base+0x1bc>
   1d830:	add	r0, pc, r0
   1d834:	str	r3, [fp, #-48]	; 0xffffffd0
   1d838:	add	r9, pc, r9
   1d83c:	ldr	r3, [pc, #320]	; 1d984 <getDeviceDirectory@@Base+0x1c0>
   1d840:	add	r4, r4, #4
   1d844:	add	r8, pc, r8
   1d848:	add	r3, pc, r3
   1d84c:	str	r3, [fp, #-52]	; 0xffffffcc
   1d850:	b	1d860 <getDeviceDirectory@@Base+0x9c>
   1d854:	ldr	r0, [r4], #4
   1d858:	cmp	r0, #0
   1d85c:	beq	1d8fc <getDeviceDirectory@@Base+0x138>
   1d860:	bl	fd70 <getenv@plt>
   1d864:	subs	sl, r0, #0
   1d868:	beq	1d854 <getDeviceDirectory@@Base+0x90>
   1d86c:	ldrb	r3, [sl]
   1d870:	cmp	r3, #0
   1d874:	beq	1d854 <getDeviceDirectory@@Base+0x90>
   1d878:	bl	fb54 <strlen@plt>
   1d87c:	mov	r7, sp
   1d880:	mov	r2, #1
   1d884:	add	r3, r0, #12
   1d888:	add	r1, r0, #5
   1d88c:	bic	r3, r3, #7
   1d890:	sub	sp, sp, r3
   1d894:	mvn	r3, #0
   1d898:	add	r5, sp, #16
   1d89c:	stm	sp, {r9, sl}
   1d8a0:	mov	r0, r5
   1d8a4:	str	r8, [sp, #8]
   1d8a8:	bl	fb60 <__snprintf_chk@plt>
   1d8ac:	mov	r0, r5
   1d8b0:	bl	1cc38 <testDirectoryPath@@Base>
   1d8b4:	cmp	r0, #0
   1d8b8:	bne	1d934 <getDeviceDirectory@@Base+0x170>
   1d8bc:	bl	fca4 <__errno_location@plt>
   1d8c0:	ldr	r0, [r0]
   1d8c4:	cmp	r0, #2
   1d8c8:	beq	1d8ec <getDeviceDirectory@@Base+0x128>
   1d8cc:	ldr	sl, [r4, #-4]
   1d8d0:	bl	f5c0 <strerror@plt>
   1d8d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1d8d8:	mov	r2, r5
   1d8dc:	mov	r3, sl
   1d8e0:	str	r0, [sp]
   1d8e4:	mov	r0, #3
   1d8e8:	bl	1c634 <logMessage@@Base>
   1d8ec:	ldr	r0, [r4], #4
   1d8f0:	mov	sp, r7
   1d8f4:	cmp	r0, #0
   1d8f8:	bne	1d860 <getDeviceDirectory@@Base+0x9c>
   1d8fc:	ldr	r3, [pc, #132]	; 1d988 <getDeviceDirectory@@Base+0x1c4>
   1d900:	ldr	r1, [pc, #132]	; 1d98c <getDeviceDirectory@@Base+0x1c8>
   1d904:	add	r3, pc, r3
   1d908:	add	r1, pc, r1
   1d90c:	mov	r2, r3
   1d910:	str	r3, [r1, #4]
   1d914:	ldr	r1, [pc, #116]	; 1d990 <getDeviceDirectory@@Base+0x1cc>
   1d918:	mov	r0, #7
   1d91c:	add	r1, pc, r1
   1d920:	bl	1c634 <logMessage@@Base>
   1d924:	ldr	r3, [pc, #104]	; 1d994 <getDeviceDirectory@@Base+0x1d0>
   1d928:	add	r3, pc, r3
   1d92c:	ldr	r0, [r3, #4]
   1d930:	b	1d7fc <getDeviceDirectory@@Base+0x38>
   1d934:	mov	r0, r5
   1d938:	bl	f740 <__strdup@plt>
   1d93c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d940:	cmp	r0, #0
   1d944:	str	r0, [r3, #4]
   1d948:	bne	1d954 <getDeviceDirectory@@Base+0x190>
   1d94c:	bl	1c740 <logMallocError@@Base>
   1d950:	b	1d8ec <getDeviceDirectory@@Base+0x128>
   1d954:	mov	r2, r0
   1d958:	mov	sp, r7
   1d95c:	b	1d914 <getDeviceDirectory@@Base+0x150>
   1d960:	bl	f950 <__stack_chk_fail@plt>
   1d964:	andeq	r5, r5, r0, lsr #5
   1d968:			; <UNDEFINED> instruction: 0x000003b4
   1d96c:	andeq	r5, r5, r4, lsr lr
   1d970:			; <UNDEFINED> instruction: 0x000317b4
   1d974:	strdeq	r1, [r5], -r0
   1d978:	andeq	r1, r3, ip, lsl #15
   1d97c:	andeq	ip, r3, ip, lsr r6
   1d980:	andeq	r1, r3, r4, lsl #15
   1d984:	ldrdeq	r5, [r5], -r0
   1d988:	andeq	r1, r3, r4, asr #13
   1d98c:	andeq	r5, r5, r0, lsl sp
   1d990:	ldrdeq	r1, [r3], -r8
   1d994:	strdeq	r5, [r5], -r0

0001d998 <getDevicePath@@Base>:
   1d998:	push	{r4, lr}
   1d99c:	mov	r4, r0
   1d9a0:	bl	1d7c4 <getDeviceDirectory@@Base>
   1d9a4:	mov	r1, r4
   1d9a8:	pop	{r4, lr}
   1d9ac:	b	1c9c8 <makePath@@Base>

0001d9b0 <resolveDeviceName@@Base>:
   1d9b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d9b4:	sub	sp, sp, #20
   1d9b8:	ldr	r3, [r0]
   1d9bc:	mov	r7, r1
   1d9c0:	cmp	r3, #0
   1d9c4:	str	r3, [sp, #12]
   1d9c8:	beq	1dab0 <resolveDeviceName@@Base+0x100>
   1d9cc:	ldr	r9, [pc, #248]	; 1dacc <resolveDeviceName@@Base+0x11c>
   1d9d0:	mov	r8, r0
   1d9d4:	ldr	sl, [pc, #244]	; 1dad0 <resolveDeviceName@@Base+0x120>
   1d9d8:	mov	r6, #0
   1d9dc:	add	r9, pc, r9
   1d9e0:	ldr	r5, [sp, #12]
   1d9e4:	add	sl, pc, sl
   1d9e8:	b	1da50 <resolveDeviceName@@Base+0xa0>
   1d9ec:	bl	1c634 <logMessage@@Base>
   1d9f0:	mov	r0, r4
   1d9f4:	bl	1cb80 <testPath@@Base>
   1d9f8:	cmp	r0, #0
   1d9fc:	bne	1daa0 <resolveDeviceName@@Base+0xf0>
   1da00:	bl	fca4 <__errno_location@plt>
   1da04:	mov	fp, r0
   1da08:	ldr	r0, [r0]
   1da0c:	bl	f5c0 <strerror@plt>
   1da10:	mov	r3, r4
   1da14:	mov	r1, sl
   1da18:	mov	r2, r7
   1da1c:	str	r0, [sp]
   1da20:	mov	r0, #7
   1da24:	bl	1c634 <logMessage@@Base>
   1da28:	ldr	r3, [fp]
   1da2c:	mov	r0, r4
   1da30:	cmp	r3, #2
   1da34:	beq	1da40 <resolveDeviceName@@Base+0x90>
   1da38:	cmp	r6, #0
   1da3c:	moveq	r6, r5
   1da40:	bl	f4f4 <free@plt>
   1da44:	ldr	r5, [r8, #4]!
   1da48:	cmp	r5, #0
   1da4c:	beq	1da70 <resolveDeviceName@@Base+0xc0>
   1da50:	mov	r0, r5
   1da54:	bl	1d998 <getDevicePath@@Base>
   1da58:	mov	r1, r9
   1da5c:	mov	r2, r7
   1da60:	subs	r4, r0, #0
   1da64:	mov	r0, #7
   1da68:	mov	r3, r4
   1da6c:	bne	1d9ec <resolveDeviceName@@Base+0x3c>
   1da70:	ldr	r3, [sp, #12]
   1da74:	cmp	r6, #0
   1da78:	moveq	r6, r3
   1da7c:	ldr	r1, [pc, #80]	; 1dad4 <resolveDeviceName@@Base+0x124>
   1da80:	mov	r2, r7
   1da84:	mov	r0, #6
   1da88:	mov	r3, r6
   1da8c:	add	r1, pc, r1
   1da90:	bl	1c634 <logMessage@@Base>
   1da94:	mov	r0, r6
   1da98:	add	sp, sp, #20
   1da9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1daa0:	mov	r0, r4
   1daa4:	mov	r6, r5
   1daa8:	bl	f4f4 <free@plt>
   1daac:	b	1da7c <resolveDeviceName@@Base+0xcc>
   1dab0:	mov	r2, r1
   1dab4:	ldr	r1, [pc, #28]	; 1dad8 <resolveDeviceName@@Base+0x128>
   1dab8:	mov	r0, #3
   1dabc:	mov	r6, r3
   1dac0:	add	r1, pc, r1
   1dac4:	bl	1c634 <logMessage@@Base>
   1dac8:	b	1da94 <resolveDeviceName@@Base+0xe4>
   1dacc:	andeq	r1, r3, ip, asr #12
   1dad0:	andeq	r1, r3, ip, asr r6
   1dad4:	ldrdeq	r1, [r3], -r4
   1dad8:	andeq	r1, r3, ip, asr #10

0001dadc <isQualifiedDevice@@Base>:
   1dadc:	push	{r3, r4, r5, r6, r7, lr}
   1dae0:	mov	r7, r0
   1dae4:	ldr	r5, [r0]
   1dae8:	mov	r6, r1
   1daec:	ldrb	r4, [r5]
   1daf0:	cmp	r4, #0
   1daf4:	beq	1db24 <isQualifiedDevice@@Base+0x48>
   1daf8:	cmp	r4, #58	; 0x3a
   1dafc:	beq	1db80 <isQualifiedDevice@@Base+0xa4>
   1db00:	mov	r2, r5
   1db04:	mov	r4, #0
   1db08:	b	1db14 <isQualifiedDevice@@Base+0x38>
   1db0c:	cmp	r3, #58	; 0x3a
   1db10:	beq	1db24 <isQualifiedDevice@@Base+0x48>
   1db14:	ldrb	r3, [r2, #1]!
   1db18:	add	r4, r4, #1
   1db1c:	cmp	r3, #0
   1db20:	bne	1db0c <isQualifiedDevice@@Base+0x30>
   1db24:	mov	r0, r5
   1db28:	bl	fb54 <strlen@plt>
   1db2c:	cmp	r0, r4
   1db30:	beq	1db70 <isQualifiedDevice@@Base+0x94>
   1db34:	cmp	r6, #0
   1db38:	beq	1db78 <isQualifiedDevice@@Base+0x9c>
   1db3c:	cmp	r4, #0
   1db40:	beq	1db70 <isQualifiedDevice@@Base+0x94>
   1db44:	mov	r1, r6
   1db48:	mov	r0, r5
   1db4c:	mov	r2, r4
   1db50:	bl	fa10 <strncasecmp@plt>
   1db54:	cmp	r0, #0
   1db58:	bne	1db70 <isQualifiedDevice@@Base+0x94>
   1db5c:	add	r4, r4, #1
   1db60:	mov	r0, #1
   1db64:	add	r5, r5, r4
   1db68:	str	r5, [r7]
   1db6c:	pop	{r3, r4, r5, r6, r7, pc}
   1db70:	mov	r0, #0
   1db74:	pop	{r3, r4, r5, r6, r7, pc}
   1db78:	mov	r0, #1
   1db7c:	pop	{r3, r4, r5, r6, r7, pc}
   1db80:	mov	r4, #0
   1db84:	b	1db24 <isQualifiedDevice@@Base+0x48>

0001db88 <deallocateStrings@@Base>:
   1db88:	push	{r3, r4, r5, lr}
   1db8c:	mov	r5, r0
   1db90:	ldr	r0, [r0]
   1db94:	cmp	r0, #0
   1db98:	movne	r4, r5
   1db9c:	beq	1dbb0 <deallocateStrings@@Base+0x28>
   1dba0:	bl	f4f4 <free@plt>
   1dba4:	ldr	r0, [r4, #4]!
   1dba8:	cmp	r0, #0
   1dbac:	bne	1dba0 <deallocateStrings@@Base+0x18>
   1dbb0:	mov	r0, r5
   1dbb4:	pop	{r3, r4, r5, lr}
   1dbb8:	b	f4f4 <free@plt>

0001dbbc <splitString@@Base>:
   1dbbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dbc0:	cmp	r0, #0
   1dbc4:	sub	sp, sp, #12
   1dbc8:	mov	r8, r1
   1dbcc:	str	r0, [sp]
   1dbd0:	str	r2, [sp, #4]
   1dbd4:	beq	1dc84 <splitString@@Base+0xc8>
   1dbd8:	mov	r7, #0
   1dbdc:	mov	r9, r7
   1dbe0:	ldr	r3, [sp]
   1dbe4:	ldrb	r6, [r3]
   1dbe8:	cmp	r6, #0
   1dbec:	beq	1dc64 <splitString@@Base+0xa8>
   1dbf0:	mov	r5, r3
   1dbf4:	mov	r6, #0
   1dbf8:	b	1dc3c <splitString@@Base+0x80>
   1dbfc:	cmp	r7, #0
   1dc00:	add	r0, fp, #1
   1dc04:	beq	1dc2c <splitString@@Base+0x70>
   1dc08:	bl	fb48 <malloc@plt>
   1dc0c:	mov	r1, r5
   1dc10:	mov	r2, fp
   1dc14:	cmp	r0, #0
   1dc18:	mov	sl, r0
   1dc1c:	str	r0, [r7, r6, lsl #2]
   1dc20:	beq	1dca4 <splitString@@Base+0xe8>
   1dc24:	bl	fb24 <memcpy@plt>
   1dc28:	strb	r9, [sl, fp]
   1dc2c:	cmp	r4, #0
   1dc30:	add	r5, r4, #1
   1dc34:	add	r6, r6, #1
   1dc38:	beq	1dc64 <splitString@@Base+0xa8>
   1dc3c:	mov	r0, r5
   1dc40:	mov	r1, r8
   1dc44:	bl	fdd0 <strchr@plt>
   1dc48:	subs	r4, r0, #0
   1dc4c:	rsb	fp, r5, r4
   1dc50:	bne	1dbfc <splitString@@Base+0x40>
   1dc54:	mov	r0, r5
   1dc58:	bl	fb54 <strlen@plt>
   1dc5c:	mov	fp, r0
   1dc60:	b	1dbfc <splitString@@Base+0x40>
   1dc64:	cmp	r7, #0
   1dc68:	bne	1dcb4 <splitString@@Base+0xf8>
   1dc6c:	add	r0, r6, #1
   1dc70:	lsl	r0, r0, #2
   1dc74:	bl	fb48 <malloc@plt>
   1dc78:	subs	r7, r0, #0
   1dc7c:	bne	1dbe0 <splitString@@Base+0x24>
   1dc80:	bl	1c740 <logMallocError@@Base>
   1dc84:	ldr	r3, [sp, #4]
   1dc88:	cmp	r3, #0
   1dc8c:	ldreq	r7, [sp, #4]
   1dc90:	movne	r7, #0
   1dc94:	strne	r7, [r3]
   1dc98:	mov	r0, r7
   1dc9c:	add	sp, sp, #12
   1dca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dca4:	bl	1c740 <logMallocError@@Base>
   1dca8:	mov	r0, r7
   1dcac:	bl	1db88 <deallocateStrings@@Base>
   1dcb0:	b	1dc84 <splitString@@Base+0xc8>
   1dcb4:	ldr	r3, [sp, #4]
   1dcb8:	cmp	r3, #0
   1dcbc:	mov	r3, #0
   1dcc0:	str	r3, [r7, r6, lsl #2]
   1dcc4:	ldrne	r3, [sp, #4]
   1dcc8:	strne	r6, [r3]
   1dccc:	b	1dc98 <splitString@@Base+0xdc>

0001dcd0 <joinStrings@@Base>:
   1dcd0:	ldr	r3, [pc, #236]	; 1ddc4 <joinStrings@@Base+0xf4>
   1dcd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dcd8:	mov	r7, r1
   1dcdc:	add	fp, sp, #32
   1dce0:	ldr	r1, [pc, #224]	; 1ddc8 <joinStrings@@Base+0xf8>
   1dce4:	sub	sp, sp, #20
   1dce8:	add	r3, pc, r3
   1dcec:	lsl	r9, r7, #2
   1dcf0:	add	r2, r9, #10
   1dcf4:	cmp	r7, #0
   1dcf8:	ldr	r1, [r3, r1]
   1dcfc:	bic	r2, r2, #7
   1dd00:	sub	sp, sp, r2
   1dd04:	mov	r6, r0
   1dd08:	ldr	r3, [r1]
   1dd0c:	mov	r5, sp
   1dd10:	str	r1, [fp, #-48]	; 0xffffffd0
   1dd14:	str	r3, [fp, #-40]	; 0xffffffd8
   1dd18:	ble	1ddac <joinStrings@@Base+0xdc>
   1dd1c:	mov	r4, #0
   1dd20:	mov	sl, r4
   1dd24:	ldr	r0, [r6, r4]
   1dd28:	bl	fb54 <strlen@plt>
   1dd2c:	str	r0, [r5, r4]
   1dd30:	add	r4, r4, #4
   1dd34:	cmp	r9, r4
   1dd38:	add	sl, sl, r0
   1dd3c:	bne	1dd24 <joinStrings@@Base+0x54>
   1dd40:	add	r0, sl, #1
   1dd44:	bl	fb48 <malloc@plt>
   1dd48:	subs	sl, r0, #0
   1dd4c:	beq	1dd88 <joinStrings@@Base+0xb8>
   1dd50:	mov	r4, #0
   1dd54:	mov	r9, sl
   1dd58:	mov	r8, r4
   1dd5c:	ldr	r2, [r5, r4]
   1dd60:	mov	r0, r9
   1dd64:	ldr	r1, [r6, r4]
   1dd68:	add	r8, r8, #1
   1dd6c:	add	r9, r9, r2
   1dd70:	bl	fb24 <memcpy@plt>
   1dd74:	cmp	r8, r7
   1dd78:	add	r4, r4, #4
   1dd7c:	bne	1dd5c <joinStrings@@Base+0x8c>
   1dd80:	mov	r3, #0
   1dd84:	strb	r3, [r9]
   1dd88:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1dd8c:	mov	r0, sl
   1dd90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dd94:	ldr	r3, [r1]
   1dd98:	cmp	r2, r3
   1dd9c:	bne	1dda8 <joinStrings@@Base+0xd8>
   1dda0:	sub	sp, fp, #32
   1dda4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dda8:	bl	f950 <__stack_chk_fail@plt>
   1ddac:	mov	r0, #1
   1ddb0:	bl	fb48 <malloc@plt>
   1ddb4:	subs	r9, r0, #0
   1ddb8:	mov	sl, r9
   1ddbc:	bne	1dd80 <joinStrings@@Base+0xb0>
   1ddc0:	b	1dd88 <joinStrings@@Base+0xb8>
   1ddc4:	muleq	r5, r0, sp
   1ddc8:			; <UNDEFINED> instruction: 0x000003b4

0001ddcc <rescaleInteger@@Base>:
   1ddcc:	push	{r4, r5, r6, lr}
   1ddd0:	mov	r4, r1
   1ddd4:	mov	r6, r0
   1ddd8:	lsl	r1, r2, #1
   1dddc:	mov	r0, r4
   1dde0:	mov	r5, r2
   1dde4:	bl	4e410 <formatAddress@@Base+0x464>
   1dde8:	mov	r1, r4
   1ddec:	add	r0, r0, r6
   1ddf0:	mul	r0, r5, r0
   1ddf4:	bl	4e410 <formatAddress@@Base+0x464>
   1ddf8:	pop	{r4, r5, r6, pc}

0001ddfc <isInteger@@Base>:
   1ddfc:	ldr	r3, [pc, #112]	; 1de74 <isInteger@@Base+0x78>
   1de00:	ldr	ip, [pc, #112]	; 1de78 <isInteger@@Base+0x7c>
   1de04:	add	r3, pc, r3
   1de08:	push	{r4, r5, lr}
   1de0c:	sub	sp, sp, #12
   1de10:	ldr	r4, [r3, ip]
   1de14:	mov	r5, r0
   1de18:	ldrb	r2, [r1]
   1de1c:	ldr	r3, [r4]
   1de20:	cmp	r2, #0
   1de24:	moveq	r0, r2
   1de28:	str	r3, [sp, #4]
   1de2c:	beq	1de58 <isInteger@@Base+0x5c>
   1de30:	mov	r0, r1
   1de34:	mov	r2, #0
   1de38:	mov	r1, sp
   1de3c:	bl	f4e8 <strtol@plt>
   1de40:	ldr	r3, [sp]
   1de44:	ldrb	r3, [r3]
   1de48:	cmp	r3, #0
   1de4c:	movne	r0, #0
   1de50:	streq	r0, [r5]
   1de54:	moveq	r0, #1
   1de58:	ldr	r1, [sp, #4]
   1de5c:	ldr	r3, [r4]
   1de60:	cmp	r1, r3
   1de64:	bne	1de70 <isInteger@@Base+0x74>
   1de68:	add	sp, sp, #12
   1de6c:	pop	{r4, r5, pc}
   1de70:	bl	f950 <__stack_chk_fail@plt>
   1de74:	andeq	r4, r5, r4, ror ip
   1de78:			; <UNDEFINED> instruction: 0x000003b4

0001de7c <isUnsignedInteger@@Base>:
   1de7c:	ldr	r3, [pc, #112]	; 1def4 <isUnsignedInteger@@Base+0x78>
   1de80:	ldr	ip, [pc, #112]	; 1def8 <isUnsignedInteger@@Base+0x7c>
   1de84:	add	r3, pc, r3
   1de88:	push	{r4, r5, lr}
   1de8c:	sub	sp, sp, #12
   1de90:	ldr	r4, [r3, ip]
   1de94:	mov	r5, r0
   1de98:	ldrb	r2, [r1]
   1de9c:	ldr	r3, [r4]
   1dea0:	cmp	r2, #0
   1dea4:	moveq	r0, r2
   1dea8:	str	r3, [sp, #4]
   1deac:	beq	1ded8 <isUnsignedInteger@@Base+0x5c>
   1deb0:	mov	r0, r1
   1deb4:	mov	r2, #0
   1deb8:	mov	r1, sp
   1debc:	bl	f674 <strtoul@plt>
   1dec0:	ldr	r3, [sp]
   1dec4:	ldrb	r3, [r3]
   1dec8:	cmp	r3, #0
   1decc:	movne	r0, #0
   1ded0:	streq	r0, [r5]
   1ded4:	moveq	r0, #1
   1ded8:	ldr	r1, [sp, #4]
   1dedc:	ldr	r3, [r4]
   1dee0:	cmp	r1, r3
   1dee4:	bne	1def0 <isUnsignedInteger@@Base+0x74>
   1dee8:	add	sp, sp, #12
   1deec:	pop	{r4, r5, pc}
   1def0:	bl	f950 <__stack_chk_fail@plt>
   1def4:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   1def8:			; <UNDEFINED> instruction: 0x000003b4

0001defc <isLogLevel@@Base>:
   1defc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1df00:	sub	sp, sp, #8
   1df04:	ldr	r5, [pc, #220]	; 1dfe8 <isLogLevel@@Base+0xec>
   1df08:	mov	sl, r0
   1df0c:	ldr	r3, [pc, #216]	; 1dfec <isLogLevel@@Base+0xf0>
   1df10:	mov	r6, r1
   1df14:	add	r5, pc, r5
   1df18:	ldrb	r2, [r1]
   1df1c:	ldr	r9, [r5, r3]
   1df20:	cmp	r2, #0
   1df24:	moveq	r0, #1
   1df28:	ldr	r3, [r9]
   1df2c:	str	r3, [sp, #4]
   1df30:	beq	1df94 <isLogLevel@@Base+0x98>
   1df34:	mov	r0, r1
   1df38:	bl	fb54 <strlen@plt>
   1df3c:	ldr	r3, [pc, #172]	; 1dff0 <isLogLevel@@Base+0xf4>
   1df40:	ldr	r3, [r5, r3]
   1df44:	ldr	r7, [r3]
   1df48:	cmp	r7, #0
   1df4c:	mov	r8, r0
   1df50:	beq	1dfac <isLogLevel@@Base+0xb0>
   1df54:	ldr	r3, [pc, #152]	; 1dff4 <isLogLevel@@Base+0xf8>
   1df58:	mov	r4, #0
   1df5c:	ldr	r5, [r5, r3]
   1df60:	sub	r5, r5, #4
   1df64:	b	1df74 <isLogLevel@@Base+0x78>
   1df68:	add	r4, r4, #1
   1df6c:	cmp	r4, r7
   1df70:	beq	1dfac <isLogLevel@@Base+0xb0>
   1df74:	mov	r0, r6
   1df78:	ldr	r1, [r5, #4]!
   1df7c:	mov	r2, r8
   1df80:	bl	fa10 <strncasecmp@plt>
   1df84:	cmp	r0, #0
   1df88:	bne	1df68 <isLogLevel@@Base+0x6c>
   1df8c:	mov	r0, #1
   1df90:	str	r4, [sl]
   1df94:	ldr	r2, [sp, #4]
   1df98:	ldr	r3, [r9]
   1df9c:	cmp	r2, r3
   1dfa0:	bne	1dfe4 <isLogLevel@@Base+0xe8>
   1dfa4:	add	sp, sp, #8
   1dfa8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dfac:	mov	r1, r6
   1dfb0:	mov	r0, sp
   1dfb4:	bl	1ddfc <isInteger@@Base>
   1dfb8:	cmp	r0, #0
   1dfbc:	beq	1dfdc <isLogLevel@@Base+0xe0>
   1dfc0:	ldr	r3, [sp]
   1dfc4:	cmp	r3, #0
   1dfc8:	blt	1dfdc <isLogLevel@@Base+0xe0>
   1dfcc:	cmp	r3, r7
   1dfd0:	strcc	r3, [sl]
   1dfd4:	movcc	r0, #1
   1dfd8:	bcc	1df94 <isLogLevel@@Base+0x98>
   1dfdc:	mov	r0, #0
   1dfe0:	b	1df94 <isLogLevel@@Base+0x98>
   1dfe4:	bl	f950 <__stack_chk_fail@plt>
   1dfe8:	andeq	r4, r5, r4, ror #22
   1dfec:			; <UNDEFINED> instruction: 0x000003b4
   1dff0:	andeq	r0, r0, r4, lsl #7
   1dff4:	andeq	r0, r0, r0, asr r4

0001dff8 <validateInteger@@Base>:
   1dff8:	ldr	ip, [pc, #164]	; 1e0a4 <validateInteger@@Base+0xac>
   1dffc:	push	{r4, r5, r6, r7, r8, lr}
   1e000:	add	ip, pc, ip
   1e004:	ldr	r4, [pc, #156]	; 1e0a8 <validateInteger@@Base+0xb0>
   1e008:	sub	sp, sp, #8
   1e00c:	ldrb	r5, [r1]
   1e010:	mov	r7, r0
   1e014:	mov	r6, r2
   1e018:	mov	r8, r3
   1e01c:	ldr	r4, [ip, r4]
   1e020:	cmp	r5, #0
   1e024:	moveq	r0, #1
   1e028:	ldr	ip, [r4]
   1e02c:	str	ip, [sp, #4]
   1e030:	bne	1e04c <validateInteger@@Base+0x54>
   1e034:	ldr	r2, [sp, #4]
   1e038:	ldr	r3, [r4]
   1e03c:	cmp	r2, r3
   1e040:	bne	1e0a0 <validateInteger@@Base+0xa8>
   1e044:	add	sp, sp, #8
   1e048:	pop	{r4, r5, r6, r7, r8, pc}
   1e04c:	mov	r0, sp
   1e050:	bl	1ddfc <isInteger@@Base>
   1e054:	cmp	r0, #0
   1e058:	beq	1e08c <validateInteger@@Base+0x94>
   1e05c:	cmp	r6, #0
   1e060:	ldreq	r3, [sp]
   1e064:	beq	1e078 <validateInteger@@Base+0x80>
   1e068:	ldr	r2, [r6]
   1e06c:	ldr	r3, [sp]
   1e070:	cmp	r2, r3
   1e074:	bgt	1e08c <validateInteger@@Base+0x94>
   1e078:	cmp	r8, #0
   1e07c:	beq	1e094 <validateInteger@@Base+0x9c>
   1e080:	ldr	r2, [r8]
   1e084:	cmp	r2, r3
   1e088:	bge	1e094 <validateInteger@@Base+0x9c>
   1e08c:	mov	r0, #0
   1e090:	b	1e034 <validateInteger@@Base+0x3c>
   1e094:	str	r3, [r7]
   1e098:	mov	r0, #1
   1e09c:	b	1e034 <validateInteger@@Base+0x3c>
   1e0a0:	bl	f950 <__stack_chk_fail@plt>
   1e0a4:	andeq	r4, r5, r8, ror sl
   1e0a8:			; <UNDEFINED> instruction: 0x000003b4

0001e0ac <validateChoice@@Base>:
   1e0ac:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1e0b0:	mov	r9, r0
   1e0b4:	mov	r0, r1
   1e0b8:	mov	r6, r1
   1e0bc:	mov	r5, r2
   1e0c0:	bl	fb54 <strlen@plt>
   1e0c4:	mov	r7, #0
   1e0c8:	str	r7, [r9]
   1e0cc:	subs	r8, r0, #0
   1e0d0:	beq	1e11c <validateChoice@@Base+0x70>
   1e0d4:	ldr	r1, [r5]
   1e0d8:	cmp	r1, r7
   1e0dc:	beq	1e124 <validateChoice@@Base+0x78>
   1e0e0:	mov	r4, r7
   1e0e4:	b	1e0f8 <validateChoice@@Base+0x4c>
   1e0e8:	ldr	r1, [r5, #4]!
   1e0ec:	mov	r7, r4
   1e0f0:	cmp	r1, #0
   1e0f4:	beq	1e124 <validateChoice@@Base+0x78>
   1e0f8:	mov	r0, r6
   1e0fc:	mov	r2, r8
   1e100:	bl	fa10 <strncasecmp@plt>
   1e104:	add	r4, r4, #1
   1e108:	cmp	r0, #0
   1e10c:	bne	1e0e8 <validateChoice@@Base+0x3c>
   1e110:	str	r7, [r9]
   1e114:	mov	r0, #1
   1e118:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1e11c:	mov	r0, #1
   1e120:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1e124:	mov	r0, r1
   1e128:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

0001e12c <validateFlag@@Base>:
   1e12c:	ldr	ip, [pc, #76]	; 1e180 <validateFlag@@Base+0x54>
   1e130:	push	{r4, lr}
   1e134:	add	ip, pc, ip
   1e138:	ldr	r4, [pc, #68]	; 1e184 <validateFlag@@Base+0x58>
   1e13c:	sub	sp, sp, #16
   1e140:	mov	lr, #0
   1e144:	ldr	r4, [ip, r4]
   1e148:	str	r3, [sp]
   1e14c:	str	r2, [sp, #4]
   1e150:	mov	r2, sp
   1e154:	ldr	r3, [r4]
   1e158:	str	lr, [sp, #8]
   1e15c:	str	r3, [sp, #12]
   1e160:	bl	1e0ac <validateChoice@@Base>
   1e164:	ldr	r2, [sp, #12]
   1e168:	ldr	r3, [r4]
   1e16c:	cmp	r2, r3
   1e170:	bne	1e17c <validateFlag@@Base+0x50>
   1e174:	add	sp, sp, #16
   1e178:	pop	{r4, pc}
   1e17c:	bl	f950 <__stack_chk_fail@plt>
   1e180:	andeq	r4, r5, r4, asr #18
   1e184:			; <UNDEFINED> instruction: 0x000003b4

0001e188 <validateOnOff@@Base>:
   1e188:	ldr	r2, [pc, #12]	; 1e19c <validateOnOff@@Base+0x14>
   1e18c:	ldr	r3, [pc, #12]	; 1e1a0 <validateOnOff@@Base+0x18>
   1e190:	add	r2, pc, r2
   1e194:	add	r3, pc, r3
   1e198:	b	1e12c <validateFlag@@Base>
   1e19c:	andeq	r2, r3, r0, ror #28
   1e1a0:	andeq	r4, r3, ip, asr r0

0001e1a4 <validateYesNo@@Base>:
   1e1a4:	ldr	r2, [pc, #12]	; 1e1b8 <validateYesNo@@Base+0x14>
   1e1a8:	ldr	r3, [pc, #12]	; 1e1bc <validateYesNo@@Base+0x18>
   1e1ac:	add	r2, pc, r2
   1e1b0:	add	r3, pc, r3
   1e1b4:	b	1e12c <validateFlag@@Base>
   1e1b8:	ldrdeq	r0, [r3], -r4
   1e1bc:	ldrdeq	r0, [r3], -r4

0001e1c0 <isFloat@@Base>:
   1e1c0:	ldr	r3, [pc, #112]	; 1e238 <isFloat@@Base+0x78>
   1e1c4:	ldr	ip, [pc, #112]	; 1e23c <isFloat@@Base+0x7c>
   1e1c8:	add	r3, pc, r3
   1e1cc:	push	{r4, r5, lr}
   1e1d0:	sub	sp, sp, #12
   1e1d4:	ldr	r4, [r3, ip]
   1e1d8:	mov	r5, r0
   1e1dc:	ldrb	r2, [r1]
   1e1e0:	ldr	r3, [r4]
   1e1e4:	cmp	r2, #0
   1e1e8:	moveq	r0, r2
   1e1ec:	str	r3, [sp, #4]
   1e1f0:	beq	1e21c <isFloat@@Base+0x5c>
   1e1f4:	mov	r0, r1
   1e1f8:	mov	r1, sp
   1e1fc:	bl	f8a8 <strtod@plt>
   1e200:	ldr	r3, [sp]
   1e204:	ldrb	r3, [r3]
   1e208:	cmp	r3, #0
   1e20c:	moveq	r0, #1
   1e210:	movne	r0, #0
   1e214:	vcvteq.f32.f64	s0, d0
   1e218:	vstreq	s0, [r5]
   1e21c:	ldr	r1, [sp, #4]
   1e220:	ldr	r3, [r4]
   1e224:	cmp	r1, r3
   1e228:	bne	1e234 <isFloat@@Base+0x74>
   1e22c:	add	sp, sp, #12
   1e230:	pop	{r4, r5, pc}
   1e234:	bl	f950 <__stack_chk_fail@plt>
   1e238:			; <UNDEFINED> instruction: 0x000548b0
   1e23c:			; <UNDEFINED> instruction: 0x000003b4

0001e240 <validateFloat@@Base>:
   1e240:	ldr	ip, [pc, #168]	; 1e2f0 <validateFloat@@Base+0xb0>
   1e244:	push	{r4, r5, r6, r7, r8, lr}
   1e248:	add	ip, pc, ip
   1e24c:	ldr	r4, [pc, #160]	; 1e2f4 <validateFloat@@Base+0xb4>
   1e250:	sub	sp, sp, #8
   1e254:	ldrb	r5, [r1]
   1e258:	mov	r7, r0
   1e25c:	mov	r6, r2
   1e260:	mov	r8, r3
   1e264:	ldr	r4, [ip, r4]
   1e268:	cmp	r5, #0
   1e26c:	moveq	r0, #1
   1e270:	ldr	ip, [r4]
   1e274:	str	ip, [sp, #4]
   1e278:	bne	1e294 <validateFloat@@Base+0x54>
   1e27c:	ldr	r2, [sp, #4]
   1e280:	ldr	r3, [r4]
   1e284:	cmp	r2, r3
   1e288:	bne	1e2ec <validateFloat@@Base+0xac>
   1e28c:	add	sp, sp, #8
   1e290:	pop	{r4, r5, r6, r7, r8, pc}
   1e294:	mov	r0, sp
   1e298:	bl	1e1c0 <isFloat@@Base>
   1e29c:	cmp	r0, #0
   1e2a0:	beq	1e2d8 <validateFloat@@Base+0x98>
   1e2a4:	cmp	r6, #0
   1e2a8:	vldr	s15, [sp]
   1e2ac:	beq	1e2c0 <validateFloat@@Base+0x80>
   1e2b0:	vldr	s14, [r6]
   1e2b4:	vcmpe.f32	s14, s15
   1e2b8:	vmrs	APSR_nzcv, fpscr
   1e2bc:	bgt	1e2d8 <validateFloat@@Base+0x98>
   1e2c0:	cmp	r8, #0
   1e2c4:	beq	1e2e0 <validateFloat@@Base+0xa0>
   1e2c8:	vldr	s14, [r8]
   1e2cc:	vcmpe.f32	s14, s15
   1e2d0:	vmrs	APSR_nzcv, fpscr
   1e2d4:	bpl	1e2e0 <validateFloat@@Base+0xa0>
   1e2d8:	mov	r0, #0
   1e2dc:	b	1e27c <validateFloat@@Base+0x3c>
   1e2e0:	vstr	s15, [r7]
   1e2e4:	mov	r0, #1
   1e2e8:	b	1e27c <validateFloat@@Base+0x3c>
   1e2ec:	bl	f950 <__stack_chk_fail@plt>
   1e2f0:	andeq	r4, r5, r0, lsr r8
   1e2f4:			; <UNDEFINED> instruction: 0x000003b4

0001e2f8 <getParameters@@Base>:
   1e2f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2fc:	subs	r8, r0, #0
   1e300:	sub	sp, sp, #44	; 0x2c
   1e304:	mov	r7, r2
   1e308:	str	r1, [sp, #8]
   1e30c:	beq	1e628 <getParameters@@Base+0x330>
   1e310:	ldr	r4, [r8]
   1e314:	cmp	r4, #0
   1e318:	beq	1e634 <getParameters@@Base+0x33c>
   1e31c:	mov	r3, r8
   1e320:	mov	r4, #0
   1e324:	ldr	r5, [r3, #4]!
   1e328:	add	r4, r4, #1
   1e32c:	cmp	r5, #0
   1e330:	bne	1e324 <getParameters@@Base+0x2c>
   1e334:	add	r0, r4, #1
   1e338:	lsl	r0, r0, #2
   1e33c:	bl	fb48 <malloc@plt>
   1e340:	cmp	r0, #0
   1e344:	str	r0, [sp, #4]
   1e348:	beq	1e668 <getParameters@@Base+0x370>
   1e34c:	cmp	r4, #0
   1e350:	beq	1e648 <getParameters@@Base+0x350>
   1e354:	sub	r6, r0, #4
   1e358:	b	1e368 <getParameters@@Base+0x70>
   1e35c:	add	r5, r5, #1
   1e360:	cmp	r4, r5
   1e364:	beq	1e3a0 <getParameters@@Base+0xa8>
   1e368:	mov	r0, #1
   1e36c:	mov	r1, r0
   1e370:	bl	fac4 <calloc@plt>
   1e374:	cmp	r0, #0
   1e378:	str	r0, [r6, #4]!
   1e37c:	bne	1e35c <getParameters@@Base+0x64>
   1e380:	bl	1c740 <logMallocError@@Base>
   1e384:	cmp	r4, r5
   1e388:	beq	1e3a0 <getParameters@@Base+0xa8>
   1e38c:	ldr	r0, [sp, #4]
   1e390:	bl	1db88 <deallocateStrings@@Base>
   1e394:	mov	r0, #0
   1e398:	add	sp, sp, #44	; 0x2c
   1e39c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3a0:	lsl	r5, r5, #2
   1e3a4:	ldr	r2, [sp, #4]
   1e3a8:	cmp	r7, #0
   1e3ac:	mov	r3, #0
   1e3b0:	str	r3, [r2, r5]
   1e3b4:	beq	1e3c4 <getParameters@@Base+0xcc>
   1e3b8:	ldrb	r3, [r7]
   1e3bc:	cmp	r3, #0
   1e3c0:	bne	1e3d0 <getParameters@@Base+0xd8>
   1e3c4:	ldr	r0, [sp, #4]
   1e3c8:	add	sp, sp, #44	; 0x2c
   1e3cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3d0:	mov	r0, r7
   1e3d4:	bl	f740 <__strdup@plt>
   1e3d8:	cmp	r0, #0
   1e3dc:	str	r0, [sp, #20]
   1e3e0:	beq	1e660 <getParameters@@Base+0x368>
   1e3e4:	ldr	r3, [pc, #648]	; 1e674 <getParameters@@Base+0x37c>
   1e3e8:	mov	r4, r0
   1e3ec:	ldr	r2, [pc, #644]	; 1e678 <getParameters@@Base+0x380>
   1e3f0:	add	r3, pc, r3
   1e3f4:	str	r3, [sp, #32]
   1e3f8:	add	r2, pc, r2
   1e3fc:	ldr	r3, [pc, #632]	; 1e67c <getParameters@@Base+0x384>
   1e400:	str	r2, [sp, #36]	; 0x24
   1e404:	ldr	r2, [pc, #628]	; 1e680 <getParameters@@Base+0x388>
   1e408:	add	r3, pc, r3
   1e40c:	str	r3, [sp, #24]
   1e410:	add	r2, pc, r2
   1e414:	ldr	r3, [pc, #616]	; 1e684 <getParameters@@Base+0x38c>
   1e418:	str	r2, [sp, #28]
   1e41c:	ldr	r2, [pc, #612]	; 1e688 <getParameters@@Base+0x390>
   1e420:	add	r3, pc, r3
   1e424:	str	r3, [sp, #12]
   1e428:	add	r2, pc, r2
   1e42c:	str	r2, [sp, #16]
   1e430:	b	1e450 <getParameters@@Base+0x158>
   1e434:	ldr	r0, [sp, #8]
   1e438:	bl	fb54 <strlen@plt>
   1e43c:	cmp	r9, r0
   1e440:	beq	1e518 <getParameters@@Base+0x220>
   1e444:	cmp	r5, #0
   1e448:	bne	1e50c <getParameters@@Base+0x214>
   1e44c:	add	r4, r6, #1
   1e450:	mov	r0, r4
   1e454:	mov	r1, #44	; 0x2c
   1e458:	bl	fdd0 <strchr@plt>
   1e45c:	rsbs	r5, r0, #1
   1e460:	mov	r6, r0
   1e464:	movcc	r5, #0
   1e468:	cmp	r5, #0
   1e46c:	strbeq	r5, [r0]
   1e470:	ldrb	r3, [r4]
   1e474:	cmp	r3, #0
   1e478:	beq	1e444 <getParameters@@Base+0x14c>
   1e47c:	mov	r0, r4
   1e480:	mov	r1, #61	; 0x3d
   1e484:	bl	fdd0 <strchr@plt>
   1e488:	subs	r3, r0, #0
   1e48c:	str	r3, [sp]
   1e490:	beq	1e5fc <getParameters@@Base+0x304>
   1e494:	ldr	r3, [sp]
   1e498:	cmp	r4, r3
   1e49c:	beq	1e4e0 <getParameters@@Base+0x1e8>
   1e4a0:	ldr	r2, [sp, #8]
   1e4a4:	ldr	r3, [sp]
   1e4a8:	cmp	r2, #0
   1e4ac:	rsb	r7, r4, r3
   1e4b0:	beq	1e534 <getParameters@@Base+0x23c>
   1e4b4:	mov	r0, r4
   1e4b8:	mov	r1, #58	; 0x3a
   1e4bc:	mov	r2, r7
   1e4c0:	bl	fcc8 <memchr@plt>
   1e4c4:	cmp	r0, #0
   1e4c8:	beq	1e534 <getParameters@@Base+0x23c>
   1e4cc:	subs	r9, r0, r4
   1e4d0:	beq	1e5d4 <getParameters@@Base+0x2dc>
   1e4d4:	add	sl, r9, #1
   1e4d8:	subs	r7, r7, sl
   1e4dc:	bne	1e434 <getParameters@@Base+0x13c>
   1e4e0:	ldr	r1, [sp, #12]
   1e4e4:	mov	r2, #5
   1e4e8:	mov	r0, #0
   1e4ec:	bl	f9bc <dcgettext@plt>
   1e4f0:	mov	r3, r4
   1e4f4:	ldr	r1, [sp, #16]
   1e4f8:	mov	r2, r0
   1e4fc:	mov	r0, #3
   1e500:	bl	1c634 <logMessage@@Base>
   1e504:	cmp	r5, #0
   1e508:	beq	1e44c <getParameters@@Base+0x154>
   1e50c:	ldr	r0, [sp, #20]
   1e510:	bl	f4f4 <free@plt>
   1e514:	b	1e3c4 <getParameters@@Base+0xcc>
   1e518:	mov	r0, r4
   1e51c:	mov	r2, r9
   1e520:	ldr	r1, [sp, #8]
   1e524:	bl	fd10 <memcmp@plt>
   1e528:	cmp	r0, #0
   1e52c:	addeq	r4, r4, sl
   1e530:	bne	1e444 <getParameters@@Base+0x14c>
   1e534:	ldr	r1, [r8]
   1e538:	cmp	r1, #0
   1e53c:	beq	1e5ac <getParameters@@Base+0x2b4>
   1e540:	add	fp, r8, #4
   1e544:	mov	sl, r8
   1e548:	mov	r9, #0
   1e54c:	b	1e564 <getParameters@@Base+0x26c>
   1e550:	rsb	r9, r8, fp
   1e554:	mov	sl, fp
   1e558:	ldr	r1, [fp], #4
   1e55c:	cmp	r1, #0
   1e560:	beq	1e5ac <getParameters@@Base+0x2b4>
   1e564:	mov	r0, r4
   1e568:	mov	r2, r7
   1e56c:	bl	fa10 <strncasecmp@plt>
   1e570:	cmp	r0, #0
   1e574:	bne	1e550 <getParameters@@Base+0x258>
   1e578:	ldr	r3, [sp]
   1e57c:	add	r0, r3, #1
   1e580:	bl	f740 <__strdup@plt>
   1e584:	subs	r7, r0, #0
   1e588:	beq	1e650 <getParameters@@Base+0x358>
   1e58c:	ldr	r2, [sp, #4]
   1e590:	ldr	r0, [r2, r9]
   1e594:	bl	f4f4 <free@plt>
   1e598:	ldr	r3, [sp, #4]
   1e59c:	str	r7, [r3, r9]
   1e5a0:	ldr	r3, [sl]
   1e5a4:	cmp	r3, #0
   1e5a8:	bne	1e444 <getParameters@@Base+0x14c>
   1e5ac:	ldr	r1, [sp, #32]
   1e5b0:	mov	r2, #5
   1e5b4:	mov	r0, #0
   1e5b8:	bl	f9bc <dcgettext@plt>
   1e5bc:	mov	r3, r4
   1e5c0:	ldr	r1, [sp, #36]	; 0x24
   1e5c4:	mov	r2, r0
   1e5c8:	mov	r0, #3
   1e5cc:	bl	1c634 <logMessage@@Base>
   1e5d0:	b	1e444 <getParameters@@Base+0x14c>
   1e5d4:	ldr	r1, [sp, #24]
   1e5d8:	mov	r0, r9
   1e5dc:	mov	r2, #5
   1e5e0:	bl	f9bc <dcgettext@plt>
   1e5e4:	mov	r3, r4
   1e5e8:	ldr	r1, [sp, #28]
   1e5ec:	mov	r2, r0
   1e5f0:	mov	r0, #3
   1e5f4:	bl	1c634 <logMessage@@Base>
   1e5f8:	b	1e444 <getParameters@@Base+0x14c>
   1e5fc:	ldr	r1, [pc, #136]	; 1e68c <getParameters@@Base+0x394>
   1e600:	mov	r2, #5
   1e604:	add	r1, pc, r1
   1e608:	bl	f9bc <dcgettext@plt>
   1e60c:	ldr	r1, [pc, #124]	; 1e690 <getParameters@@Base+0x398>
   1e610:	mov	r3, r4
   1e614:	add	r1, pc, r1
   1e618:	mov	r2, r0
   1e61c:	mov	r0, #3
   1e620:	bl	1c634 <logMessage@@Base>
   1e624:	b	1e444 <getParameters@@Base+0x14c>
   1e628:	ldr	r8, [pc, #100]	; 1e694 <getParameters@@Base+0x39c>
   1e62c:	add	r8, pc, r8
   1e630:	b	1e310 <getParameters@@Base+0x18>
   1e634:	mov	r0, #4
   1e638:	bl	fb48 <malloc@plt>
   1e63c:	cmp	r0, #0
   1e640:	str	r0, [sp, #4]
   1e644:	beq	1e668 <getParameters@@Base+0x370>
   1e648:	mov	r5, r4
   1e64c:	b	1e3a4 <getParameters@@Base+0xac>
   1e650:	bl	1c740 <logMallocError@@Base>
   1e654:	ldr	r0, [sp, #20]
   1e658:	bl	f4f4 <free@plt>
   1e65c:	b	1e38c <getParameters@@Base+0x94>
   1e660:	bl	1c740 <logMallocError@@Base>
   1e664:	b	1e38c <getParameters@@Base+0x94>
   1e668:	bl	1c740 <logMallocError@@Base>
   1e66c:	mov	r0, #0
   1e670:	b	1e3c8 <getParameters@@Base+0xd0>
   1e674:	andeq	r0, r3, r4, ror #25
   1e678:	andeq	r0, r3, ip, lsr pc
   1e67c:			; <UNDEFINED> instruction: 0x00030cb0
   1e680:	andeq	r0, r3, r4, lsr #30
   1e684:	andeq	r0, r3, r0, lsl #25
   1e688:	andeq	r0, r3, ip, lsl #30
   1e68c:	andeq	r0, r3, r4, lsl #21
   1e690:	andeq	r0, r3, r0, lsr #26
   1e694:	andeq	r0, r3, r0, asr sl

0001e698 <logParameters@@Base>:
   1e698:	cmp	r0, #0
   1e69c:	cmpne	r1, #0
   1e6a0:	push	{r4, r5, r6, r7, lr}
   1e6a4:	mov	r4, r1
   1e6a8:	sub	sp, sp, #12
   1e6ac:	mov	r6, r2
   1e6b0:	beq	1e6f0 <logParameters@@Base+0x58>
   1e6b4:	ldr	r3, [r0]
   1e6b8:	cmp	r3, #0
   1e6bc:	beq	1e6f0 <logParameters@@Base+0x58>
   1e6c0:	ldr	r7, [pc, #48]	; 1e6f8 <logParameters@@Base+0x60>
   1e6c4:	mov	r5, r0
   1e6c8:	add	r7, pc, r7
   1e6cc:	ldr	ip, [r4], #4
   1e6d0:	mov	r0, #6
   1e6d4:	mov	r1, r7
   1e6d8:	mov	r2, r6
   1e6dc:	str	ip, [sp]
   1e6e0:	bl	1c634 <logMessage@@Base>
   1e6e4:	ldr	r3, [r5, #4]!
   1e6e8:	cmp	r3, #0
   1e6ec:	bne	1e6cc <logParameters@@Base+0x34>
   1e6f0:	add	sp, sp, #12
   1e6f4:	pop	{r4, r5, r6, r7, pc}
   1e6f8:	andeq	r0, r3, r4, lsr #20

0001e6fc <getCurrentTime@@Base>:
   1e6fc:	ldr	r3, [pc, #84]	; 1e758 <getCurrentTime@@Base+0x5c>
   1e700:	ldr	r2, [pc, #84]	; 1e75c <getCurrentTime@@Base+0x60>
   1e704:	add	r3, pc, r3
   1e708:	push	{r4, r5, lr}
   1e70c:	sub	sp, sp, #20
   1e710:	ldr	r4, [r3, r2]
   1e714:	mov	r5, r0
   1e718:	add	r1, sp, #4
   1e71c:	mov	r0, #0
   1e720:	ldr	r3, [r4]
   1e724:	str	r3, [sp, #12]
   1e728:	bl	f860 <clock_gettime@plt>
   1e72c:	ldr	r3, [sp, #4]
   1e730:	ldr	r2, [sp, #12]
   1e734:	ldr	r1, [sp, #8]
   1e738:	str	r3, [r5]
   1e73c:	ldr	r3, [r4]
   1e740:	str	r1, [r5, #4]
   1e744:	cmp	r2, r3
   1e748:	bne	1e754 <getCurrentTime@@Base+0x58>
   1e74c:	add	sp, sp, #20
   1e750:	pop	{r4, r5, pc}
   1e754:	bl	f950 <__stack_chk_fail@plt>
   1e758:	andeq	r4, r5, r4, ror r3
   1e75c:			; <UNDEFINED> instruction: 0x000003b4

0001e760 <makeTimeValue@@Base>:
   1e760:	ldr	r2, [pc, #164]	; 1e80c <makeTimeValue@@Base+0xac>
   1e764:	mov	r3, #0
   1e768:	push	{r4, r5, r6, r7, r8, r9, lr}
   1e76c:	add	r2, pc, r2
   1e770:	ldr	r4, [pc, #152]	; 1e810 <makeTimeValue@@Base+0xb0>
   1e774:	mov	r5, r0
   1e778:	ldr	lr, [r1, #8]
   1e77c:	sub	sp, sp, #52	; 0x34
   1e780:	mvn	ip, #0
   1e784:	ldr	r4, [r2, r4]
   1e788:	mov	r0, sp
   1e78c:	str	lr, [r5, #4]
   1e790:	ldrh	r9, [r1]
   1e794:	ldrb	r8, [r1, #6]
   1e798:	ldrb	r7, [r1, #5]
   1e79c:	sub	r9, r9, #1888	; 0x760
   1e7a0:	ldrb	r6, [r1, #4]
   1e7a4:	sub	r9, r9, #12
   1e7a8:	ldrb	lr, [r1, #2]
   1e7ac:	ldr	r2, [r4]
   1e7b0:	ldrb	r1, [r1, #3]
   1e7b4:	str	r3, [sp, #24]
   1e7b8:	add	r1, r1, #1
   1e7bc:	str	r2, [sp, #44]	; 0x2c
   1e7c0:	str	r3, [sp, #28]
   1e7c4:	str	r3, [sp, #36]	; 0x24
   1e7c8:	str	r3, [sp, #40]	; 0x28
   1e7cc:	str	r9, [sp, #20]
   1e7d0:	str	r8, [sp]
   1e7d4:	str	r1, [sp, #12]
   1e7d8:	str	r7, [sp, #4]
   1e7dc:	str	r6, [sp, #8]
   1e7e0:	str	lr, [sp, #16]
   1e7e4:	str	ip, [sp, #32]
   1e7e8:	bl	fd4c <mktime@plt>
   1e7ec:	ldr	r3, [sp, #44]	; 0x2c
   1e7f0:	str	r0, [r5]
   1e7f4:	ldr	r2, [r4]
   1e7f8:	cmp	r3, r2
   1e7fc:	bne	1e808 <makeTimeValue@@Base+0xa8>
   1e800:	add	sp, sp, #52	; 0x34
   1e804:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e808:	bl	f950 <__stack_chk_fail@plt>
   1e80c:	andeq	r4, r5, ip, lsl #6
   1e810:			; <UNDEFINED> instruction: 0x000003b4

0001e814 <expandTimeValue@@Base>:
   1e814:	ldr	r2, [pc, #148]	; 1e8b0 <expandTimeValue@@Base+0x9c>
   1e818:	ldr	ip, [pc, #148]	; 1e8b4 <expandTimeValue@@Base+0xa0>
   1e81c:	add	r2, pc, r2
   1e820:	push	{r4, r5, r6, lr}
   1e824:	mov	r6, r0
   1e828:	sub	sp, sp, #56	; 0x38
   1e82c:	ldr	r5, [r2, ip]
   1e830:	ldr	r3, [r6]
   1e834:	add	r0, sp, #56	; 0x38
   1e838:	mov	r4, r1
   1e83c:	add	r1, sp, #8
   1e840:	str	r3, [r0, #-52]!	; 0xffffffcc
   1e844:	ldr	r3, [r5]
   1e848:	str	r3, [sp, #52]	; 0x34
   1e84c:	bl	f404 <localtime_r@plt>
   1e850:	ldr	r1, [sp, #24]
   1e854:	ldr	r3, [sp, #28]
   1e858:	ldr	r2, [sp, #20]
   1e85c:	add	r3, r3, #1888	; 0x760
   1e860:	ldr	r0, [r6, #4]
   1e864:	add	r3, r3, #12
   1e868:	strb	r1, [r4, #2]
   1e86c:	sub	r2, r2, #1
   1e870:	ldr	ip, [sp, #52]	; 0x34
   1e874:	strb	r2, [r4, #3]
   1e878:	strh	r3, [r4]
   1e87c:	ldr	r3, [r5]
   1e880:	ldr	r1, [sp, #16]
   1e884:	ldr	r2, [sp, #12]
   1e888:	cmp	ip, r3
   1e88c:	ldr	r3, [sp, #8]
   1e890:	str	r0, [r4, #8]
   1e894:	strb	r1, [r4, #4]
   1e898:	strb	r2, [r4, #5]
   1e89c:	strb	r3, [r4, #6]
   1e8a0:	bne	1e8ac <expandTimeValue@@Base+0x98>
   1e8a4:	add	sp, sp, #56	; 0x38
   1e8a8:	pop	{r4, r5, r6, pc}
   1e8ac:	bl	f950 <__stack_chk_fail@plt>
   1e8b0:	andeq	r4, r5, ip, asr r2
   1e8b4:			; <UNDEFINED> instruction: 0x000003b4

0001e8b8 <formatSeconds@@Base>:
   1e8b8:	push	{r4, r5, r6, r7, r8, lr}
   1e8bc:	sub	sp, sp, #56	; 0x38
   1e8c0:	ldr	lr, [pc, #100]	; 1e92c <formatSeconds@@Base+0x74>
   1e8c4:	add	ip, sp, #56	; 0x38
   1e8c8:	ldr	r4, [pc, #96]	; 1e930 <formatSeconds@@Base+0x78>
   1e8cc:	add	r5, sp, #8
   1e8d0:	add	lr, pc, lr
   1e8d4:	mov	r7, r0
   1e8d8:	mov	r6, r1
   1e8dc:	mov	r8, r2
   1e8e0:	ldr	r4, [lr, r4]
   1e8e4:	mov	r1, r5
   1e8e8:	str	r3, [ip, #-52]!	; 0xffffffcc
   1e8ec:	mov	r0, ip
   1e8f0:	ldr	r3, [r4]
   1e8f4:	str	r3, [sp, #52]	; 0x34
   1e8f8:	bl	f404 <localtime_r@plt>
   1e8fc:	mov	r2, r8
   1e900:	mov	r3, r5
   1e904:	mov	r0, r7
   1e908:	mov	r1, r6
   1e90c:	bl	f698 <strftime@plt>
   1e910:	ldr	r2, [sp, #52]	; 0x34
   1e914:	ldr	r3, [r4]
   1e918:	cmp	r2, r3
   1e91c:	bne	1e928 <formatSeconds@@Base+0x70>
   1e920:	add	sp, sp, #56	; 0x38
   1e924:	pop	{r4, r5, r6, r7, r8, pc}
   1e928:	bl	f950 <__stack_chk_fail@plt>
   1e92c:	andeq	r4, r5, r8, lsr #3
   1e930:			; <UNDEFINED> instruction: 0x000003b4

0001e934 <normalizeTimeValue@@Base>:
   1e934:	ldr	r3, [r0, #4]
   1e938:	cmp	r3, #0
   1e93c:	bge	1e968 <normalizeTimeValue@@Base+0x34>
   1e940:	ldr	r2, [r0]
   1e944:	sub	r2, r2, #1
   1e948:	add	r3, r3, #998244352	; 0x3b800000
   1e94c:	mov	r1, r2
   1e950:	add	r3, r3, #1753088	; 0x1ac000
   1e954:	sub	r2, r2, #1
   1e958:	add	r3, r3, #2560	; 0xa00
   1e95c:	cmp	r3, #0
   1e960:	blt	1e948 <normalizeTimeValue@@Base+0x14>
   1e964:	stm	r0, {r1, r3}
   1e968:	movw	r1, #51711	; 0xc9ff
   1e96c:	movt	r1, #15258	; 0x3b9a
   1e970:	cmp	r3, r1
   1e974:	bxle	lr
   1e978:	mov	r2, #13824	; 0x3600
   1e97c:	movt	r2, #50277	; 0xc465
   1e980:	add	r2, r3, r2
   1e984:	ldr	ip, [r0]
   1e988:	cmp	r2, r1
   1e98c:	add	r1, ip, #1
   1e990:	addgt	ip, ip, #2
   1e994:	movgt	r2, #27648	; 0x6c00
   1e998:	movtgt	r2, #35018	; 0x88ca
   1e99c:	addgt	r2, r3, r2
   1e9a0:	movle	ip, r1
   1e9a4:	str	r2, [r0, #4]
   1e9a8:	str	ip, [r0]
   1e9ac:	bx	lr

0001e9b0 <adjustTimeValue@@Base>:
   1e9b0:	movw	r3, #19923	; 0x4dd3
   1e9b4:	movt	r3, #4194	; 0x1062
   1e9b8:	ldr	ip, [pc, #148]	; 1ea54 <adjustTimeValue@@Base+0xa4>
   1e9bc:	smull	r2, r3, r3, r1
   1e9c0:	add	ip, pc, ip
   1e9c4:	push	{r4, r5, r6, lr}
   1e9c8:	asr	r6, r1, #31
   1e9cc:	ldr	r5, [pc, #132]	; 1ea58 <adjustTimeValue@@Base+0xa8>
   1e9d0:	sub	sp, sp, #16
   1e9d4:	mov	lr, #1000	; 0x3e8
   1e9d8:	movw	r2, #16960	; 0x4240
   1e9dc:	rsb	r3, r6, r3, asr #6
   1e9e0:	movt	r2, #15
   1e9e4:	ldr	r5, [ip, r5]
   1e9e8:	mov	r4, r0
   1e9ec:	str	r3, [sp, #4]
   1e9f0:	mls	r3, lr, r3, r1
   1e9f4:	ldr	r1, [r5]
   1e9f8:	str	r1, [sp, #12]
   1e9fc:	mul	r2, r2, r3
   1ea00:	str	r2, [sp, #8]
   1ea04:	bl	1e934 <normalizeTimeValue@@Base>
   1ea08:	add	r0, sp, #4
   1ea0c:	bl	1e934 <normalizeTimeValue@@Base>
   1ea10:	ldr	r2, [r4, #4]
   1ea14:	ldr	ip, [r4]
   1ea18:	mov	r0, r4
   1ea1c:	ldr	r1, [sp, #4]
   1ea20:	ldr	r3, [sp, #8]
   1ea24:	add	r1, ip, r1
   1ea28:	str	r1, [r4]
   1ea2c:	add	r3, r2, r3
   1ea30:	str	r3, [r4, #4]
   1ea34:	bl	1e934 <normalizeTimeValue@@Base>
   1ea38:	ldr	r2, [sp, #12]
   1ea3c:	ldr	r3, [r5]
   1ea40:	cmp	r2, r3
   1ea44:	bne	1ea50 <adjustTimeValue@@Base+0xa0>
   1ea48:	add	sp, sp, #16
   1ea4c:	pop	{r4, r5, r6, pc}
   1ea50:	bl	f950 <__stack_chk_fail@plt>
   1ea54:	strheq	r4, [r5], -r8
   1ea58:			; <UNDEFINED> instruction: 0x000003b4

0001ea5c <compareTimeValues@@Base>:
   1ea5c:	ldr	r2, [r0]
   1ea60:	ldr	r3, [r1]
   1ea64:	cmp	r2, r3
   1ea68:	blt	1ea94 <compareTimeValues@@Base+0x38>
   1ea6c:	bgt	1ea8c <compareTimeValues@@Base+0x30>
   1ea70:	ldr	r2, [r0, #4]
   1ea74:	ldr	r3, [r1, #4]
   1ea78:	cmp	r2, r3
   1ea7c:	blt	1ea94 <compareTimeValues@@Base+0x38>
   1ea80:	movle	r0, #0
   1ea84:	movgt	r0, #1
   1ea88:	bx	lr
   1ea8c:	mov	r0, #1
   1ea90:	bx	lr
   1ea94:	mvn	r0, #0
   1ea98:	bx	lr

0001ea9c <millisecondsBetween@@Base>:
   1ea9c:	ldr	r2, [pc, #124]	; 1eb20 <millisecondsBetween@@Base+0x84>
   1eaa0:	mov	r3, r0
   1eaa4:	ldr	ip, [pc, #120]	; 1eb24 <millisecondsBetween@@Base+0x88>
   1eaa8:	add	r2, pc, r2
   1eaac:	push	{r4, r5, lr}
   1eab0:	sub	sp, sp, #20
   1eab4:	ldr	r4, [r2, ip]
   1eab8:	add	r0, sp, #4
   1eabc:	ldr	r5, [r1]
   1eac0:	ldr	lr, [r1, #4]
   1eac4:	ldm	r3, {r1, r2}
   1eac8:	ldr	r3, [r4]
   1eacc:	rsb	r1, r1, r5
   1ead0:	rsb	r2, r2, lr
   1ead4:	stmib	sp, {r1, r2}
   1ead8:	str	r3, [sp, #12]
   1eadc:	bl	1e934 <normalizeTimeValue@@Base>
   1eae0:	ldr	r3, [sp, #8]
   1eae4:	movw	r2, #56963	; 0xde83
   1eae8:	movt	r2, #17179	; 0x431b
   1eaec:	ldr	r5, [sp, #12]
   1eaf0:	ldr	ip, [r4]
   1eaf4:	mov	r0, #1000	; 0x3e8
   1eaf8:	smull	r1, r2, r2, r3
   1eafc:	asr	r3, r3, #31
   1eb00:	ldr	r1, [sp, #4]
   1eb04:	cmp	r5, ip
   1eb08:	rsb	r3, r3, r2, asr #18
   1eb0c:	mla	r0, r0, r1, r3
   1eb10:	bne	1eb1c <millisecondsBetween@@Base+0x80>
   1eb14:	add	sp, sp, #20
   1eb18:	pop	{r4, r5, pc}
   1eb1c:	bl	f950 <__stack_chk_fail@plt>
   1eb20:	ldrdeq	r3, [r5], -r0
   1eb24:			; <UNDEFINED> instruction: 0x000003b4

0001eb28 <getMonotonicTime@@Base>:
   1eb28:	ldr	r3, [pc, #84]	; 1eb84 <getMonotonicTime@@Base+0x5c>
   1eb2c:	ldr	r2, [pc, #84]	; 1eb88 <getMonotonicTime@@Base+0x60>
   1eb30:	add	r3, pc, r3
   1eb34:	push	{r4, r5, lr}
   1eb38:	sub	sp, sp, #20
   1eb3c:	ldr	r4, [r3, r2]
   1eb40:	mov	r5, r0
   1eb44:	add	r1, sp, #4
   1eb48:	mov	r0, #1
   1eb4c:	ldr	r3, [r4]
   1eb50:	str	r3, [sp, #12]
   1eb54:	bl	f860 <clock_gettime@plt>
   1eb58:	ldr	r3, [sp, #4]
   1eb5c:	ldr	r2, [sp, #12]
   1eb60:	ldr	r1, [sp, #8]
   1eb64:	str	r3, [r5]
   1eb68:	ldr	r3, [r4]
   1eb6c:	str	r1, [r5, #4]
   1eb70:	cmp	r2, r3
   1eb74:	bne	1eb80 <getMonotonicTime@@Base+0x58>
   1eb78:	add	sp, sp, #20
   1eb7c:	pop	{r4, r5, pc}
   1eb80:	bl	f950 <__stack_chk_fail@plt>
   1eb84:	andeq	r3, r5, r8, asr #30
   1eb88:			; <UNDEFINED> instruction: 0x000003b4

0001eb8c <getMonotonicElapsed@@Base>:
   1eb8c:	ldr	r3, [pc, #80]	; 1ebe4 <getMonotonicElapsed@@Base+0x58>
   1eb90:	ldr	r2, [pc, #80]	; 1ebe8 <getMonotonicElapsed@@Base+0x5c>
   1eb94:	add	r3, pc, r3
   1eb98:	push	{r4, r5, r6, lr}
   1eb9c:	sub	sp, sp, #16
   1eba0:	ldr	r4, [r3, r2]
   1eba4:	add	r5, sp, #4
   1eba8:	mov	r6, r0
   1ebac:	mov	r0, r5
   1ebb0:	ldr	r3, [r4]
   1ebb4:	str	r3, [sp, #12]
   1ebb8:	bl	1eb28 <getMonotonicTime@@Base>
   1ebbc:	mov	r0, r6
   1ebc0:	mov	r1, r5
   1ebc4:	bl	1ea9c <millisecondsBetween@@Base>
   1ebc8:	ldr	r2, [sp, #12]
   1ebcc:	ldr	r3, [r4]
   1ebd0:	cmp	r2, r3
   1ebd4:	bne	1ebe0 <getMonotonicElapsed@@Base+0x54>
   1ebd8:	add	sp, sp, #16
   1ebdc:	pop	{r4, r5, r6, pc}
   1ebe0:	bl	f950 <__stack_chk_fail@plt>
   1ebe4:	andeq	r3, r5, r4, ror #29
   1ebe8:			; <UNDEFINED> instruction: 0x000003b4

0001ebec <restartTimePeriod@@Base>:
   1ebec:	b	1eb28 <getMonotonicTime@@Base>

0001ebf0 <startTimePeriod@@Base>:
   1ebf0:	str	r1, [r0, #8]
   1ebf4:	b	1ebec <restartTimePeriod@@Base>

0001ebf8 <afterTimePeriod@@Base>:
   1ebf8:	push	{r3, r4, r5, lr}
   1ebfc:	mov	r4, r1
   1ec00:	mov	r5, r0
   1ec04:	bl	1eb8c <getMonotonicElapsed@@Base>
   1ec08:	cmp	r4, #0
   1ec0c:	strne	r0, [r4]
   1ec10:	ldr	r3, [r5, #8]
   1ec14:	cmp	r0, r3
   1ec18:	movlt	r0, #0
   1ec1c:	movge	r0, #1
   1ec20:	pop	{r3, r4, r5, pc}

0001ec24 <approximateDelay@@Base>:
   1ec24:	ldr	r3, [pc, #160]	; 1eccc <approximateDelay@@Base+0xa8>
   1ec28:	subs	r2, r0, #0
   1ec2c:	ldr	r1, [pc, #156]	; 1ecd0 <approximateDelay@@Base+0xac>
   1ec30:	add	r3, pc, r3
   1ec34:	push	{r4, r5, lr}
   1ec38:	sub	sp, sp, #20
   1ec3c:	ldr	r4, [r3, r1]
   1ec40:	ldr	r3, [r4]
   1ec44:	str	r3, [sp, #12]
   1ec48:	ble	1ec90 <approximateDelay@@Base+0x6c>
   1ec4c:	movw	r1, #19923	; 0x4dd3
   1ec50:	movt	r1, #4194	; 0x1062
   1ec54:	asr	r5, r2, #31
   1ec58:	mov	lr, #1000	; 0x3e8
   1ec5c:	smull	r3, ip, r1, r2
   1ec60:	movw	r3, #16960	; 0x4240
   1ec64:	movt	r3, #15
   1ec68:	add	r0, sp, #4
   1ec6c:	mov	r1, #0
   1ec70:	rsb	ip, r5, ip, asr #6
   1ec74:	str	ip, [sp, #4]
   1ec78:	mls	r2, lr, ip, r2
   1ec7c:	mul	r3, r3, r2
   1ec80:	str	r3, [sp, #8]
   1ec84:	bl	f68c <nanosleep@plt>
   1ec88:	cmn	r0, #1
   1ec8c:	beq	1eca8 <approximateDelay@@Base+0x84>
   1ec90:	ldr	r2, [sp, #12]
   1ec94:	ldr	r3, [r4]
   1ec98:	cmp	r2, r3
   1ec9c:	bne	1ecc8 <approximateDelay@@Base+0xa4>
   1eca0:	add	sp, sp, #20
   1eca4:	pop	{r4, r5, pc}
   1eca8:	bl	fca4 <__errno_location@plt>
   1ecac:	ldr	r3, [r0]
   1ecb0:	cmp	r3, #4
   1ecb4:	beq	1ec90 <approximateDelay@@Base+0x6c>
   1ecb8:	ldr	r0, [pc, #20]	; 1ecd4 <approximateDelay@@Base+0xb0>
   1ecbc:	add	r0, pc, r0
   1ecc0:	bl	1c6fc <logSystemError@@Base>
   1ecc4:	b	1ec90 <approximateDelay@@Base+0x6c>
   1ecc8:	bl	f950 <__stack_chk_fail@plt>
   1eccc:	andeq	r3, r5, r8, asr #28
   1ecd0:			; <UNDEFINED> instruction: 0x000003b4
   1ecd4:	andeq	r0, r3, ip, lsr r4

0001ecd8 <accurateDelay@@Base>:
   1ecd8:	ldr	r3, [pc, #184]	; 1ed98 <accurateDelay@@Base+0xc0>
   1ecdc:	ldr	r2, [pc, #184]	; 1ed9c <accurateDelay@@Base+0xc4>
   1ece0:	push	{r4, r5, r6, r7, lr}
   1ece4:	add	r3, pc, r3
   1ece8:	ldr	r4, [pc, #176]	; 1eda0 <accurateDelay@@Base+0xc8>
   1ecec:	sub	sp, sp, #20
   1ecf0:	ldr	r6, [r3, r2]
   1ecf4:	mov	r5, r0
   1ecf8:	add	r4, pc, r4
   1ecfc:	ldr	r1, [r4]
   1ed00:	ldr	r3, [r6]
   1ed04:	cmp	r1, #0
   1ed08:	str	r3, [sp, #12]
   1ed0c:	movne	r7, r1
   1ed10:	bne	1ed3c <accurateDelay@@Base+0x64>
   1ed14:	mov	r0, #2
   1ed18:	bl	fab8 <sysconf@plt>
   1ed1c:	mov	r1, r0
   1ed20:	mov	r0, #1000	; 0x3e8
   1ed24:	bl	4e410 <formatAddress@@Base+0x464>
   1ed28:	cmp	r0, #0
   1ed2c:	strne	r0, [r4]
   1ed30:	movne	r7, r0
   1ed34:	moveq	r7, #1
   1ed38:	streq	r7, [r4]
   1ed3c:	mov	r1, r5
   1ed40:	mov	r0, sp
   1ed44:	bl	1ebf0 <startTimePeriod@@Base>
   1ed48:	cmp	r7, r5
   1ed4c:	ble	1ed7c <accurateDelay@@Base+0xa4>
   1ed50:	mov	r0, sp
   1ed54:	mov	r1, #0
   1ed58:	bl	1ebf8 <afterTimePeriod@@Base>
   1ed5c:	cmp	r0, #0
   1ed60:	beq	1ed50 <accurateDelay@@Base+0x78>
   1ed64:	ldr	r2, [sp, #12]
   1ed68:	ldr	r3, [r6]
   1ed6c:	cmp	r2, r3
   1ed70:	bne	1ed94 <accurateDelay@@Base+0xbc>
   1ed74:	add	sp, sp, #20
   1ed78:	pop	{r4, r5, r6, r7, pc}
   1ed7c:	mov	r0, r5
   1ed80:	mov	r1, r7
   1ed84:	bl	4e410 <formatAddress@@Base+0x464>
   1ed88:	mul	r0, r0, r7
   1ed8c:	bl	1ec24 <approximateDelay@@Base>
   1ed90:	b	1ed50 <accurateDelay@@Base+0x78>
   1ed94:	bl	f950 <__stack_chk_fail@plt>
   1ed98:	muleq	r5, r4, sp
   1ed9c:			; <UNDEFINED> instruction: 0x000003b4
   1eda0:	andeq	r4, r5, r8, lsr #18
   1eda4:	ldr	r3, [pc, #236]	; 1ee98 <accurateDelay@@Base+0x1c0>
   1eda8:	ldr	ip, [pc, #236]	; 1ee9c <accurateDelay@@Base+0x1c4>
   1edac:	add	r3, pc, r3
   1edb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1edb4:	sub	sp, sp, #16
   1edb8:	ldr	r5, [r3, ip]
   1edbc:	add	sl, sp, #4
   1edc0:	mov	r9, r0
   1edc4:	mov	r6, r1
   1edc8:	mov	r8, r2
   1edcc:	mov	r7, #0
   1edd0:	ldr	r3, [r5]
   1edd4:	str	r3, [sp, #12]
   1edd8:	cmp	r8, #0
   1eddc:	mov	r1, #1
   1ede0:	mov	r0, sl
   1ede4:	mov	r2, r6
   1ede8:	moveq	r3, r1
   1edec:	movne	r3, #4
   1edf0:	str	r7, [sp, #8]
   1edf4:	str	r9, [sp, #4]
   1edf8:	strh	r3, [sp, #8]
   1edfc:	bl	f7c4 <poll@plt>
   1ee00:	cmn	r0, #1
   1ee04:	mov	r4, r0
   1ee08:	bne	1ee48 <accurateDelay@@Base+0x170>
   1ee0c:	bl	fca4 <__errno_location@plt>
   1ee10:	ldr	r3, [r0]
   1ee14:	cmp	r3, #4
   1ee18:	beq	1edd8 <accurateDelay@@Base+0x100>
   1ee1c:	ldr	r0, [pc, #124]	; 1eea0 <accurateDelay@@Base+0x1c8>
   1ee20:	mov	r4, #0
   1ee24:	add	r0, pc, r0
   1ee28:	bl	1c6fc <logSystemError@@Base>
   1ee2c:	ldr	r2, [sp, #12]
   1ee30:	mov	r0, r4
   1ee34:	ldr	r3, [r5]
   1ee38:	cmp	r2, r3
   1ee3c:	bne	1ee94 <accurateDelay@@Base+0x1bc>
   1ee40:	add	sp, sp, #16
   1ee44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee48:	cmp	r0, #0
   1ee4c:	movne	r4, #1
   1ee50:	bne	1ee2c <accurateDelay@@Base+0x154>
   1ee54:	cmp	r6, #0
   1ee58:	ble	1ee84 <accurateDelay@@Base+0x1ac>
   1ee5c:	ldr	r3, [pc, #64]	; 1eea4 <accurateDelay@@Base+0x1cc>
   1ee60:	cmp	r6, #1
   1ee64:	add	r3, pc, r3
   1ee68:	ldrne	r3, [pc, #56]	; 1eea8 <accurateDelay@@Base+0x1d0>
   1ee6c:	addne	r3, pc, r3
   1ee70:	ldr	r1, [pc, #52]	; 1eeac <accurateDelay@@Base+0x1d4>
   1ee74:	mov	r2, r6
   1ee78:	mov	r0, #7
   1ee7c:	add	r1, pc, r1
   1ee80:	bl	1c634 <logMessage@@Base>
   1ee84:	bl	fca4 <__errno_location@plt>
   1ee88:	mov	r3, #11
   1ee8c:	str	r3, [r0]
   1ee90:	b	1ee2c <accurateDelay@@Base+0x154>
   1ee94:	bl	f950 <__stack_chk_fail@plt>
   1ee98:	andeq	r3, r5, ip, asr #25
   1ee9c:			; <UNDEFINED> instruction: 0x000003b4
   1eea0:	strdeq	r0, [r3], -ip
   1eea4:	andeq	r0, r3, r0, lsr #5
   1eea8:	andeq	r0, r3, r4, lsr #5
   1eeac:	andeq	r0, r3, ip, lsr #5

0001eeb0 <awaitInput@@Base>:
   1eeb0:	mov	r2, #0
   1eeb4:	b	1eda4 <accurateDelay@@Base+0xcc>

0001eeb8 <readChunk@@Base>:
   1eeb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1eebc:	subs	r4, r3, #0
   1eec0:	mov	r6, r0
   1eec4:	mov	r7, r1
   1eec8:	mov	r5, r2
   1eecc:	ldr	r9, [sp, #32]
   1eed0:	ldr	r8, [sp, #36]	; 0x24
   1eed4:	bne	1eef4 <readChunk@@Base+0x3c>
   1eed8:	b	1ef8c <readChunk@@Base+0xd4>
   1eedc:	ldr	r3, [r5]
   1eee0:	rsb	r4, r0, r4
   1eee4:	add	r0, r3, r0
   1eee8:	str	r0, [r5]
   1eeec:	cmp	r4, #0
   1eef0:	beq	1ef8c <readChunk@@Base+0xd4>
   1eef4:	ldr	r1, [r5]
   1eef8:	mov	r0, r6
   1eefc:	mov	r2, r4
   1ef00:	add	r1, r7, r1
   1ef04:	bl	f788 <read@plt>
   1ef08:	cmn	r0, #1
   1ef0c:	beq	1ef60 <readChunk@@Base+0xa8>
   1ef10:	cmp	r0, #0
   1ef14:	bne	1eedc <readChunk@@Base+0x24>
   1ef18:	ldr	sl, [r5]
   1ef1c:	mov	r0, r6
   1ef20:	cmp	sl, #0
   1ef24:	moveq	sl, r9
   1ef28:	movne	sl, r8
   1ef2c:	cmp	sl, #0
   1ef30:	mov	r1, sl
   1ef34:	beq	1ef98 <readChunk@@Base+0xe0>
   1ef38:	bl	1eeb0 <awaitInput@@Base>
   1ef3c:	subs	sl, r0, #0
   1ef40:	bne	1eeec <readChunk@@Base+0x34>
   1ef44:	ldr	r1, [pc, #92]	; 1efa8 <readChunk@@Base+0xf0>
   1ef48:	mov	r0, #4
   1ef4c:	ldr	r2, [r5]
   1ef50:	add	r1, pc, r1
   1ef54:	bl	1c634 <logMessage@@Base>
   1ef58:	mov	r0, sl
   1ef5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ef60:	bl	fca4 <__errno_location@plt>
   1ef64:	ldr	r3, [r0]
   1ef68:	cmp	r3, #4
   1ef6c:	beq	1eeec <readChunk@@Base+0x34>
   1ef70:	cmp	r3, #11
   1ef74:	beq	1ef18 <readChunk@@Base+0x60>
   1ef78:	ldr	r0, [pc, #44]	; 1efac <readChunk@@Base+0xf4>
   1ef7c:	mov	sl, #0
   1ef80:	add	r0, pc, r0
   1ef84:	bl	1c6fc <logSystemError@@Base>
   1ef88:	b	1ef58 <readChunk@@Base+0xa0>
   1ef8c:	mov	sl, #1
   1ef90:	mov	r0, sl
   1ef94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ef98:	bl	fca4 <__errno_location@plt>
   1ef9c:	mov	r3, #11
   1efa0:	str	r3, [r0]
   1efa4:	b	1ef58 <readChunk@@Base+0xa0>
   1efa8:	andeq	r0, r3, ip, ror #3
   1efac:	andeq	pc, r2, ip, lsl #23

0001efb0 <readData@@Base>:
   1efb0:	push	{r4, r5, r6, lr}
   1efb4:	sub	sp, sp, #16
   1efb8:	ldr	lr, [pc, #116]	; 1f034 <readData@@Base+0x84>
   1efbc:	add	ip, sp, #16
   1efc0:	ldr	r4, [pc, #112]	; 1f038 <readData@@Base+0x88>
   1efc4:	mov	r5, r2
   1efc8:	add	lr, pc, lr
   1efcc:	ldr	r6, [sp, #32]
   1efd0:	mov	r2, #0
   1efd4:	ldr	r4, [lr, r4]
   1efd8:	str	r3, [sp]
   1efdc:	mov	r3, r5
   1efe0:	str	r2, [ip, #-8]!
   1efe4:	mov	r2, ip
   1efe8:	ldr	ip, [r4]
   1efec:	str	r6, [sp, #4]
   1eff0:	str	ip, [sp, #12]
   1eff4:	bl	1eeb8 <readChunk@@Base>
   1eff8:	cmp	r0, #0
   1effc:	movne	r0, r5
   1f000:	bne	1f018 <readData@@Base+0x68>
   1f004:	bl	fca4 <__errno_location@plt>
   1f008:	ldr	r3, [r0]
   1f00c:	cmp	r3, #11
   1f010:	ldreq	r0, [sp, #8]
   1f014:	mvnne	r0, #0
   1f018:	ldr	r2, [sp, #12]
   1f01c:	ldr	r3, [r4]
   1f020:	cmp	r2, r3
   1f024:	bne	1f030 <readData@@Base+0x80>
   1f028:	add	sp, sp, #16
   1f02c:	pop	{r4, r5, r6, pc}
   1f030:	bl	f950 <__stack_chk_fail@plt>
   1f034:			; <UNDEFINED> instruction: 0x00053ab0
   1f038:			; <UNDEFINED> instruction: 0x000003b4

0001f03c <awaitOutput@@Base>:
   1f03c:	mov	r2, #1
   1f040:	b	1eda4 <accurateDelay@@Base+0xcc>

0001f044 <writeData@@Base>:
   1f044:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f048:	subs	r6, r2, #0
   1f04c:	mov	r4, r0
   1f050:	mov	r9, r1
   1f054:	beq	1f10c <writeData@@Base+0xc8>
   1f058:	mov	r7, r1
   1f05c:	mov	r8, #11
   1f060:	mov	r0, r4
   1f064:	mov	r1, r7
   1f068:	mov	r2, r6
   1f06c:	bl	fbcc <write@plt>
   1f070:	cmn	r0, #1
   1f074:	mov	r5, r0
   1f078:	beq	1f0d8 <writeData@@Base+0x94>
   1f07c:	cmp	r0, #0
   1f080:	bne	1f0c4 <writeData@@Base+0x80>
   1f084:	bl	fca4 <__errno_location@plt>
   1f088:	str	r8, [r0]
   1f08c:	b	1f0a0 <writeData@@Base+0x5c>
   1f090:	bl	fca4 <__errno_location@plt>
   1f094:	ldr	r3, [r0]
   1f098:	cmp	r3, #11
   1f09c:	bne	1f104 <writeData@@Base+0xc0>
   1f0a0:	mov	r0, r4
   1f0a4:	movw	r1, #15000	; 0x3a98
   1f0a8:	bl	1f03c <awaitOutput@@Base>
   1f0ac:	cmp	r0, #0
   1f0b0:	beq	1f090 <writeData@@Base+0x4c>
   1f0b4:	cmp	r6, #0
   1f0b8:	bne	1f060 <writeData@@Base+0x1c>
   1f0bc:	rsb	r0, r9, r7
   1f0c0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1f0c4:	rsb	r6, r0, r6
   1f0c8:	add	r7, r7, r0
   1f0cc:	cmp	r6, #0
   1f0d0:	bne	1f060 <writeData@@Base+0x1c>
   1f0d4:	b	1f0bc <writeData@@Base+0x78>
   1f0d8:	bl	fca4 <__errno_location@plt>
   1f0dc:	ldr	r3, [r0]
   1f0e0:	cmp	r3, #4
   1f0e4:	beq	1f0b4 <writeData@@Base+0x70>
   1f0e8:	cmp	r3, #11
   1f0ec:	beq	1f0a0 <writeData@@Base+0x5c>
   1f0f0:	ldr	r0, [pc, #28]	; 1f114 <writeData@@Base+0xd0>
   1f0f4:	add	r0, pc, r0
   1f0f8:	bl	1c6fc <logSystemError@@Base>
   1f0fc:	mov	r0, r5
   1f100:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1f104:	mvn	r0, #0
   1f108:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1f10c:	mov	r0, r6
   1f110:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1f114:	andeq	r0, r3, r8, rrx

0001f118 <changeOpenFlags@@Base>:
   1f118:	push	{r4, r5, r6, lr}
   1f11c:	mov	r5, r1
   1f120:	mov	r1, #3
   1f124:	mov	r6, r2
   1f128:	mov	r4, r0
   1f12c:	bl	f6e0 <fcntl@plt>
   1f130:	cmn	r0, #1
   1f134:	beq	1f15c <changeOpenFlags@@Base+0x44>
   1f138:	bic	r2, r0, r5
   1f13c:	mov	r1, #4
   1f140:	mov	r0, r4
   1f144:	orr	r2, r2, r6
   1f148:	bl	f6e0 <fcntl@plt>
   1f14c:	cmn	r0, #1
   1f150:	beq	1f170 <changeOpenFlags@@Base+0x58>
   1f154:	mov	r0, #1
   1f158:	pop	{r4, r5, r6, pc}
   1f15c:	ldr	r0, [pc, #32]	; 1f184 <changeOpenFlags@@Base+0x6c>
   1f160:	add	r0, pc, r0
   1f164:	bl	1c6fc <logSystemError@@Base>
   1f168:	mov	r0, #0
   1f16c:	pop	{r4, r5, r6, pc}
   1f170:	ldr	r0, [pc, #16]	; 1f188 <changeOpenFlags@@Base+0x70>
   1f174:	add	r0, pc, r0
   1f178:	bl	1c6fc <logSystemError@@Base>
   1f17c:	mov	r0, #0
   1f180:	pop	{r4, r5, r6, pc}
   1f184:	andeq	r0, r3, ip
   1f188:	strdeq	pc, [r2], -r0

0001f18c <setOpenFlags@@Base>:
   1f18c:	subs	r3, r1, #0
   1f190:	mov	r1, r2
   1f194:	bne	1f1a0 <setOpenFlags@@Base+0x14>
   1f198:	mov	r2, r3
   1f19c:	b	1f118 <changeOpenFlags@@Base>
   1f1a0:	mov	r1, #0
   1f1a4:	b	1f118 <changeOpenFlags@@Base>

0001f1a8 <setBlockingIo@@Base>:
   1f1a8:	rsbs	r1, r1, #1
   1f1ac:	mov	r2, #2048	; 0x800
   1f1b0:	push	{r3, lr}
   1f1b4:	movcc	r1, #0
   1f1b8:	bl	1f18c <setOpenFlags@@Base>
   1f1bc:	adds	r0, r0, #0
   1f1c0:	movne	r0, #1
   1f1c4:	pop	{r3, pc}

0001f1c8 <setCloseOnExec@@Base>:
   1f1c8:	adds	r2, r1, #0
   1f1cc:	mov	r1, #2
   1f1d0:	push	{r3, lr}
   1f1d4:	movne	r2, #1
   1f1d8:	bl	f6e0 <fcntl@plt>
   1f1dc:	adds	r0, r0, #1
   1f1e0:	movne	r0, #1
   1f1e4:	pop	{r3, pc}
   1f1e8:	push	{lr}		; (str lr, [sp, #-4]!)
   1f1ec:	sub	sp, sp, #12
   1f1f0:	add	r2, sp, #8
   1f1f4:	str	r1, [r2, #-4]!
   1f1f8:	movw	r1, #20485	; 0x5005
   1f1fc:	movt	r1, #49156	; 0xc004
   1f200:	bl	f83c <ioctl@plt>
   1f204:	cmn	r0, #1
   1f208:	moveq	r0, #8
   1f20c:	beq	1f244 <setCloseOnExec@@Base+0x7c>
   1f210:	ldr	r1, [sp, #4]
   1f214:	cmp	r1, #8
   1f218:	beq	1f24c <setCloseOnExec@@Base+0x84>
   1f21c:	ldr	r3, [pc, #48]	; 1f254 <setCloseOnExec@@Base+0x8c>
   1f220:	add	r3, pc, r3
   1f224:	b	1f234 <setCloseOnExec@@Base+0x6c>
   1f228:	ldr	r2, [r3, #4]
   1f22c:	cmp	r2, r1
   1f230:	beq	1f244 <setCloseOnExec@@Base+0x7c>
   1f234:	ldr	r0, [r3, #8]
   1f238:	add	r3, r3, #8
   1f23c:	cmp	r0, #8
   1f240:	bne	1f228 <setCloseOnExec@@Base+0x60>
   1f244:	add	sp, sp, #12
   1f248:	pop	{pc}		; (ldr pc, [sp], #4)
   1f24c:	mov	r0, #0
   1f250:	b	1f244 <setCloseOnExec@@Base+0x7c>
   1f254:	andeq	pc, r2, r4, asr pc	; <UNPREDICTABLE>

0001f258 <getProgramPath@@Base>:
   1f258:	push	{r3, r4, r5, r6, r7, lr}
   1f25c:	mov	r6, #0
   1f260:	ldr	r7, [pc, #184]	; 1f320 <getProgramPath@@Base+0xc8>
   1f264:	mov	r4, #128	; 0x80
   1f268:	add	r7, pc, r7
   1f26c:	b	1f28c <getProgramPath@@Base+0x34>
   1f270:	bl	f644 <readlink@plt>
   1f274:	mov	r6, r5
   1f278:	cmn	r0, #1
   1f27c:	mov	r3, r0
   1f280:	beq	1f2c4 <getProgramPath@@Base+0x6c>
   1f284:	cmp	r4, r0
   1f288:	bhi	1f300 <getProgramPath@@Base+0xa8>
   1f28c:	lsl	r4, r4, #1
   1f290:	mov	r0, r6
   1f294:	mov	r1, r4
   1f298:	bl	f878 <realloc@plt>
   1f29c:	mov	r2, r4
   1f2a0:	subs	r5, r0, #0
   1f2a4:	mov	r0, r7
   1f2a8:	mov	r1, r5
   1f2ac:	bne	1f270 <getProgramPath@@Base+0x18>
   1f2b0:	bl	1c740 <logMallocError@@Base>
   1f2b4:	cmp	r6, #0
   1f2b8:	bne	1f2e8 <getProgramPath@@Base+0x90>
   1f2bc:	mov	r0, r6
   1f2c0:	pop	{r3, r4, r5, r6, r7, pc}
   1f2c4:	bl	fca4 <__errno_location@plt>
   1f2c8:	ldr	r3, [r0]
   1f2cc:	cmp	r3, #2
   1f2d0:	beq	1f2ec <getProgramPath@@Base+0x94>
   1f2d4:	ldr	r0, [pc, #72]	; 1f324 <getProgramPath@@Base+0xcc>
   1f2d8:	mov	r6, #0
   1f2dc:	add	r0, pc, r0
   1f2e0:	bl	1c6fc <logSystemError@@Base>
   1f2e4:	b	1f2f0 <getProgramPath@@Base+0x98>
   1f2e8:	mov	r5, r6
   1f2ec:	mov	r6, #0
   1f2f0:	mov	r0, r5
   1f2f4:	bl	f4f4 <free@plt>
   1f2f8:	mov	r0, r6
   1f2fc:	pop	{r3, r4, r5, r6, r7, pc}
   1f300:	mov	r2, #0
   1f304:	mov	r0, r5
   1f308:	strb	r2, [r5, r3]
   1f30c:	bl	f740 <__strdup@plt>
   1f310:	subs	r6, r0, #0
   1f314:	bne	1f2f0 <getProgramPath@@Base+0x98>
   1f318:	bl	1c740 <logMallocError@@Base>
   1f31c:	b	1f2f0 <getProgramPath@@Base+0x98>
   1f320:	andeq	pc, r2, r4, asr pc	; <UNPREDICTABLE>
   1f324:	strdeq	pc, [r2], -r0

0001f328 <getBootParameters@@Base>:
   1f328:	ldr	r3, [pc, #280]	; 1f448 <getBootParameters@@Base+0x120>
   1f32c:	ldr	r2, [pc, #280]	; 1f44c <getBootParameters@@Base+0x124>
   1f330:	add	r3, pc, r3
   1f334:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f338:	sub	sp, sp, #4096	; 0x1000
   1f33c:	ldr	r7, [r3, r2]
   1f340:	sub	sp, sp, #12
   1f344:	add	r2, sp, #8192	; 0x2000
   1f348:	mov	r6, r0
   1f34c:	ldr	r3, [r7]
   1f350:	str	r3, [r2, #-4092]	; 0xfffff004
   1f354:	bl	fb54 <strlen@plt>
   1f358:	mov	r4, r0
   1f35c:	mov	r0, #1
   1f360:	mov	r1, r0
   1f364:	bl	fac4 <calloc@plt>
   1f368:	subs	r8, r0, #0
   1f36c:	beq	1f434 <getBootParameters@@Base+0x10c>
   1f370:	ldr	r0, [pc, #216]	; 1f450 <getBootParameters@@Base+0x128>
   1f374:	ldr	r1, [pc, #216]	; 1f454 <getBootParameters@@Base+0x12c>
   1f378:	add	r0, pc, r0
   1f37c:	add	r1, pc, r1
   1f380:	bl	f77c <fopen@plt>
   1f384:	subs	r9, r0, #0
   1f388:	beq	1f3f0 <getBootParameters@@Base+0xc8>
   1f38c:	mov	r1, #4096	; 0x1000
   1f390:	add	r0, sp, #4
   1f394:	mov	r2, r9
   1f398:	bl	faf4 <fgets@plt>
   1f39c:	cmp	r0, #0
   1f3a0:	beq	1f3e8 <getBootParameters@@Base+0xc0>
   1f3a4:	ldr	r5, [pc, #172]	; 1f458 <getBootParameters@@Base+0x130>
   1f3a8:	add	sl, r4, #1
   1f3ac:	add	r5, pc, r5
   1f3b0:	b	1f3d8 <getBootParameters@@Base+0xb0>
   1f3b4:	mov	r1, r6
   1f3b8:	mov	r2, r4
   1f3bc:	bl	f548 <strncmp@plt>
   1f3c0:	cmp	r0, #0
   1f3c4:	bne	1f3d4 <getBootParameters@@Base+0xac>
   1f3c8:	ldrb	r3, [fp, r4]
   1f3cc:	cmp	r3, #61	; 0x3d
   1f3d0:	beq	1f414 <getBootParameters@@Base+0xec>
   1f3d4:	mov	r0, #0
   1f3d8:	mov	r1, r5
   1f3dc:	bl	f608 <strtok@plt>
   1f3e0:	subs	fp, r0, #0
   1f3e4:	bne	1f3b4 <getBootParameters@@Base+0x8c>
   1f3e8:	mov	r0, r9
   1f3ec:	bl	fbc0 <fclose@plt>
   1f3f0:	add	r3, sp, #8192	; 0x2000
   1f3f4:	mov	r0, r8
   1f3f8:	ldr	r2, [r3, #-4092]	; 0xfffff004
   1f3fc:	ldr	r3, [r7]
   1f400:	cmp	r2, r3
   1f404:	bne	1f444 <getBootParameters@@Base+0x11c>
   1f408:	add	sp, sp, #4096	; 0x1000
   1f40c:	add	sp, sp, #12
   1f410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f414:	add	r0, fp, sl
   1f418:	bl	f740 <__strdup@plt>
   1f41c:	subs	r3, r0, #0
   1f420:	beq	1f43c <getBootParameters@@Base+0x114>
   1f424:	mov	r0, r8
   1f428:	mov	r8, r3
   1f42c:	bl	f4f4 <free@plt>
   1f430:	b	1f3d4 <getBootParameters@@Base+0xac>
   1f434:	bl	1c740 <logMallocError@@Base>
   1f438:	b	1f3f0 <getBootParameters@@Base+0xc8>
   1f43c:	bl	1c740 <logMallocError@@Base>
   1f440:	b	1f3d4 <getBootParameters@@Base+0xac>
   1f444:	bl	f950 <__stack_chk_fail@plt>
   1f448:	andeq	r3, r5, r8, asr #14
   1f44c:			; <UNDEFINED> instruction: 0x000003b4
   1f450:	andeq	pc, r2, r0, ror #28
   1f454:	andeq	r8, r3, r0, lsl sp
   1f458:	andeq	pc, r2, ip, lsr lr	; <UNPREDICTABLE>

0001f45c <executeHostCommand@@Base>:
   1f45c:	ldr	r3, [pc, #392]	; 1f5ec <executeHostCommand@@Base+0x190>
   1f460:	ldr	r2, [pc, #392]	; 1f5f0 <executeHostCommand@@Base+0x194>
   1f464:	add	r3, pc, r3
   1f468:	push	{r4, r5, r6, r7, lr}
   1f46c:	sub	sp, sp, #268	; 0x10c
   1f470:	ldr	r6, [r3, r2]
   1f474:	add	r4, sp, #4
   1f478:	mov	r7, r0
   1f47c:	add	r5, sp, #132	; 0x84
   1f480:	mov	r0, r4
   1f484:	ldr	r3, [r6]
   1f488:	str	r3, [sp, #260]	; 0x104
   1f48c:	bl	fd28 <sigemptyset@plt>
   1f490:	mov	r1, #17
   1f494:	mov	r0, r4
   1f498:	bl	f74c <sigaddset@plt>
   1f49c:	mov	r2, r5
   1f4a0:	mov	r1, r4
   1f4a4:	mov	r0, #0
   1f4a8:	bl	fdc4 <sigprocmask@plt>
   1f4ac:	bl	f974 <fork@plt>
   1f4b0:	cmn	r0, #1
   1f4b4:	mov	r2, r0
   1f4b8:	beq	1f53c <executeHostCommand@@Base+0xe0>
   1f4bc:	cmp	r0, #0
   1f4c0:	beq	1f510 <executeHostCommand@@Base+0xb4>
   1f4c4:	mov	r1, sp
   1f4c8:	mov	r2, #0
   1f4cc:	bl	f8d8 <waitpid@plt>
   1f4d0:	cmn	r0, #1
   1f4d4:	beq	1f5b8 <executeHostCommand@@Base+0x15c>
   1f4d8:	ldr	r2, [sp]
   1f4dc:	ands	r4, r2, #127	; 0x7f
   1f4e0:	beq	1f59c <executeHostCommand@@Base+0x140>
   1f4e4:	add	r3, r4, #1
   1f4e8:	sbfx	r3, r3, #1, #7
   1f4ec:	cmp	r3, #0
   1f4f0:	ble	1f578 <executeHostCommand@@Base+0x11c>
   1f4f4:	ldr	r1, [pc, #248]	; 1f5f4 <executeHostCommand@@Base+0x198>
   1f4f8:	mov	r2, r4
   1f4fc:	mov	r0, #7
   1f500:	add	r4, r4, #128	; 0x80
   1f504:	add	r1, pc, r1
   1f508:	bl	1c634 <logMessage@@Base>
   1f50c:	b	1f54c <executeHostCommand@@Base+0xf0>
   1f510:	mov	r1, r5
   1f514:	mov	r0, #2
   1f518:	bl	fdc4 <sigprocmask@plt>
   1f51c:	mov	r1, r7
   1f520:	ldr	r0, [r7]
   1f524:	bl	fd94 <execvp@plt>
   1f528:	ldr	r0, [pc, #200]	; 1f5f8 <executeHostCommand@@Base+0x19c>
   1f52c:	add	r0, pc, r0
   1f530:	bl	1c6fc <logSystemError@@Base>
   1f534:	mov	r0, #1
   1f538:	bl	fc44 <_exit@plt>
   1f53c:	ldr	r0, [pc, #184]	; 1f5fc <executeHostCommand@@Base+0x1a0>
   1f540:	mov	r4, #255	; 0xff
   1f544:	add	r0, pc, r0
   1f548:	bl	1c6fc <logSystemError@@Base>
   1f54c:	mov	r2, #0
   1f550:	mov	r1, r5
   1f554:	mov	r0, #2
   1f558:	bl	fdc4 <sigprocmask@plt>
   1f55c:	ldr	r2, [sp, #260]	; 0x104
   1f560:	ldr	r3, [r6]
   1f564:	mov	r0, r4
   1f568:	cmp	r2, r3
   1f56c:	bne	1f5e8 <executeHostCommand@@Base+0x18c>
   1f570:	add	sp, sp, #268	; 0x10c
   1f574:	pop	{r4, r5, r6, r7, pc}
   1f578:	uxtb	r3, r2
   1f57c:	cmp	r3, #127	; 0x7f
   1f580:	beq	1f5cc <executeHostCommand@@Base+0x170>
   1f584:	ldr	r1, [pc, #116]	; 1f600 <executeHostCommand@@Base+0x1a4>
   1f588:	mov	r0, #7
   1f58c:	mov	r4, #255	; 0xff
   1f590:	add	r1, pc, r1
   1f594:	bl	1c634 <logMessage@@Base>
   1f598:	b	1f54c <executeHostCommand@@Base+0xf0>
   1f59c:	ubfx	r4, r2, #8, #8
   1f5a0:	ldr	r1, [pc, #92]	; 1f604 <executeHostCommand@@Base+0x1a8>
   1f5a4:	mov	r0, #7
   1f5a8:	add	r1, pc, r1
   1f5ac:	mov	r2, r4
   1f5b0:	bl	1c634 <logMessage@@Base>
   1f5b4:	b	1f54c <executeHostCommand@@Base+0xf0>
   1f5b8:	ldr	r0, [pc, #72]	; 1f608 <executeHostCommand@@Base+0x1ac>
   1f5bc:	mov	r4, #255	; 0xff
   1f5c0:	add	r0, pc, r0
   1f5c4:	bl	1c6fc <logSystemError@@Base>
   1f5c8:	b	1f54c <executeHostCommand@@Base+0xf0>
   1f5cc:	ldr	r1, [pc, #56]	; 1f60c <executeHostCommand@@Base+0x1b0>
   1f5d0:	ubfx	r2, r2, #8, #8
   1f5d4:	mov	r0, #7
   1f5d8:	add	r4, r2, #128	; 0x80
   1f5dc:	add	r1, pc, r1
   1f5e0:	bl	1c634 <logMessage@@Base>
   1f5e4:	b	1f54c <executeHostCommand@@Base+0xf0>
   1f5e8:	bl	f950 <__stack_chk_fail@plt>
   1f5ec:	andeq	r3, r5, r4, lsl r6
   1f5f0:			; <UNDEFINED> instruction: 0x000003b4
   1f5f4:	andeq	pc, r2, r0, lsl sp	; <UNPREDICTABLE>
   1f5f8:	andeq	pc, r2, r8, asr #25
   1f5fc:	andeq	pc, r2, r8, lsr #25
   1f600:	andeq	pc, r2, ip, lsr #25
   1f604:	andeq	pc, r2, ip, asr ip	; <UNPREDICTABLE>
   1f608:	andeq	pc, r2, ip, lsr ip	; <UNPREDICTABLE>
   1f60c:	andeq	pc, r2, r0, asr ip	; <UNPREDICTABLE>
   1f610:	ldr	r3, [pc, #332]	; 1f764 <executeHostCommand@@Base+0x308>
   1f614:	ldr	r2, [pc, #332]	; 1f768 <executeHostCommand@@Base+0x30c>
   1f618:	add	r3, pc, r3
   1f61c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1f620:	subs	r4, r1, #0
   1f624:	ldr	r5, [r3, r2]
   1f628:	sub	sp, sp, #284	; 0x11c
   1f62c:	ldr	r9, [pc, #312]	; 1f76c <executeHostCommand@@Base+0x310>
   1f630:	mov	r8, r0
   1f634:	ldr	r1, [pc, #308]	; 1f770 <executeHostCommand@@Base+0x314>
   1f638:	ldr	r3, [r5]
   1f63c:	add	r9, pc, r9
   1f640:	add	r1, pc, r1
   1f644:	mov	r0, r9
   1f648:	str	r3, [sp, #276]	; 0x114
   1f64c:	ldrne	r3, [r4]
   1f650:	addne	r3, r3, #1
   1f654:	strne	r3, [r4]
   1f658:	bl	f77c <fopen@plt>
   1f65c:	subs	r7, r0, #0
   1f660:	beq	1f730 <executeHostCommand@@Base+0x2d4>
   1f664:	add	r0, sp, #20
   1f668:	mov	r1, #256	; 0x100
   1f66c:	mov	r2, r7
   1f670:	bl	faf4 <fgets@plt>
   1f674:	subs	r6, r0, #0
   1f678:	beq	1f688 <executeHostCommand@@Base+0x22c>
   1f67c:	bl	fb54 <strlen@plt>
   1f680:	cmp	r0, #0
   1f684:	bne	1f6f0 <executeHostCommand@@Base+0x294>
   1f688:	ldr	r6, [pc, #228]	; 1f774 <executeHostCommand@@Base+0x318>
   1f68c:	add	r6, pc, r6
   1f690:	mov	r0, r7
   1f694:	bl	fbc0 <fclose@plt>
   1f698:	ldr	r3, [pc, #216]	; 1f778 <executeHostCommand@@Base+0x31c>
   1f69c:	add	r0, sp, #4
   1f6a0:	str	r6, [sp, #4]
   1f6a4:	mov	r6, #0
   1f6a8:	add	r3, pc, r3
   1f6ac:	str	r8, [sp, #12]
   1f6b0:	str	r3, [sp, #8]
   1f6b4:	str	r6, [sp, #16]
   1f6b8:	bl	1f45c <executeHostCommand@@Base>
   1f6bc:	cmp	r0, r6
   1f6c0:	bne	1f714 <executeHostCommand@@Base+0x2b8>
   1f6c4:	cmp	r4, #0
   1f6c8:	mov	r0, #1
   1f6cc:	ldrne	r3, [r4]
   1f6d0:	addne	r3, r3, #1
   1f6d4:	strne	r3, [r4]
   1f6d8:	ldr	r2, [sp, #276]	; 0x114
   1f6dc:	ldr	r3, [r5]
   1f6e0:	cmp	r2, r3
   1f6e4:	bne	1f760 <executeHostCommand@@Base+0x304>
   1f6e8:	add	sp, sp, #284	; 0x11c
   1f6ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1f6f0:	sub	r0, r0, #1
   1f6f4:	ldrb	r3, [r6, r0]
   1f6f8:	cmp	r3, #10
   1f6fc:	bne	1f690 <executeHostCommand@@Base+0x234>
   1f700:	cmp	r0, #0
   1f704:	mov	r3, #0
   1f708:	strb	r3, [r6, r0]
   1f70c:	bne	1f690 <executeHostCommand@@Base+0x234>
   1f710:	b	1f688 <executeHostCommand@@Base+0x22c>
   1f714:	ldr	r1, [pc, #96]	; 1f77c <executeHostCommand@@Base+0x320>
   1f718:	mov	r0, #4
   1f71c:	mov	r2, r8
   1f720:	add	r1, pc, r1
   1f724:	bl	1c634 <logMessage@@Base>
   1f728:	mov	r0, r6
   1f72c:	b	1f6d8 <executeHostCommand@@Base+0x27c>
   1f730:	bl	fca4 <__errno_location@plt>
   1f734:	ldr	r6, [pc, #68]	; 1f780 <executeHostCommand@@Base+0x324>
   1f738:	add	r6, pc, r6
   1f73c:	ldr	r0, [r0]
   1f740:	bl	f5c0 <strerror@plt>
   1f744:	ldr	r1, [pc, #56]	; 1f784 <executeHostCommand@@Base+0x328>
   1f748:	mov	r2, r9
   1f74c:	add	r1, pc, r1
   1f750:	mov	r3, r0
   1f754:	mov	r0, #4
   1f758:	bl	1c634 <logMessage@@Base>
   1f75c:	b	1f698 <executeHostCommand@@Base+0x23c>
   1f760:	bl	f950 <__stack_chk_fail@plt>
   1f764:	andeq	r3, r5, r0, ror #8
   1f768:			; <UNDEFINED> instruction: 0x000003b4
   1f76c:	andeq	pc, r2, r4, lsr #24
   1f770:	andeq	r8, r3, ip, asr #20
   1f774:	andeq	pc, r2, r8, asr #23
   1f778:	andeq	pc, r2, r8, ror #23
   1f77c:	andeq	pc, r2, r4, ror fp	; <UNPREDICTABLE>
   1f780:	andeq	pc, r2, ip, lsl fp	; <UNPREDICTABLE>
   1f784:	andeq	pc, r2, r0, lsr fp	; <UNPREDICTABLE>

0001f788 <mountFileSystem@@Base>:
   1f788:	push	{lr}		; (str lr, [sp, #-4]!)
   1f78c:	sub	sp, sp, #12
   1f790:	mov	ip, r0
   1f794:	mov	r3, #0
   1f798:	mov	r0, r1
   1f79c:	str	r3, [sp]
   1f7a0:	mov	r1, ip
   1f7a4:	bl	fcbc <mount@plt>
   1f7a8:	adds	r0, r0, #1
   1f7ac:	movne	r0, #1
   1f7b0:	add	sp, sp, #12
   1f7b4:	pop	{pc}		; (ldr pc, [sp], #4)

0001f7b8 <loadSharedObject@@Base>:
   1f7b8:	push	{r4, lr}
   1f7bc:	movw	r1, #258	; 0x102
   1f7c0:	bl	f818 <dlopen@plt>
   1f7c4:	subs	r4, r0, #0
   1f7c8:	beq	1f7d4 <loadSharedObject@@Base+0x1c>
   1f7cc:	mov	r0, r4
   1f7d0:	pop	{r4, pc}
   1f7d4:	bl	f488 <dlerror@plt>
   1f7d8:	ldr	r1, [pc, #16]	; 1f7f0 <loadSharedObject@@Base+0x38>
   1f7dc:	add	r1, pc, r1
   1f7e0:	mov	r2, r0
   1f7e4:	mov	r0, #3
   1f7e8:	bl	1c634 <logMessage@@Base>
   1f7ec:	b	1f7cc <loadSharedObject@@Base+0x14>
   1f7f0:	muleq	r2, r8, r0

0001f7f4 <unloadSharedObject@@Base>:
   1f7f4:	b	f5e4 <dlclose@plt>

0001f7f8 <findSharedSymbol@@Base>:
   1f7f8:	push	{r4, r5, r6, lr}
   1f7fc:	mov	r4, r0
   1f800:	mov	r6, r1
   1f804:	mov	r5, r2
   1f808:	bl	f488 <dlerror@plt>
   1f80c:	mov	r1, r6
   1f810:	mov	r0, r4
   1f814:	bl	fd88 <dlsym@plt>
   1f818:	str	r0, [r5]
   1f81c:	bl	f488 <dlerror@plt>
   1f820:	subs	r2, r0, #0
   1f824:	beq	1f840 <findSharedSymbol@@Base+0x48>
   1f828:	ldr	r1, [pc, #24]	; 1f848 <findSharedSymbol@@Base+0x50>
   1f82c:	mov	r0, #3
   1f830:	add	r1, pc, r1
   1f834:	bl	1c634 <logMessage@@Base>
   1f838:	mov	r0, #0
   1f83c:	pop	{r4, r5, r6, pc}
   1f840:	mov	r0, #1
   1f844:	pop	{r4, r5, r6, pc}
   1f848:	andeq	pc, r2, r4, asr #32

0001f84c <synchronousBeep@@Base>:
   1f84c:	mov	r0, #0
   1f850:	bx	lr

0001f854 <asynchronousBeep@@Base>:
   1f854:	push	{r4, r5, r6, lr}
   1f858:	mov	r5, r0
   1f85c:	mov	r4, r1
   1f860:	bl	1d690 <getConsole@@Base>
   1f864:	subs	r3, r0, #0
   1f868:	beq	1f8b4 <asynchronousBeep@@Base+0x60>
   1f86c:	bl	f914 <fileno@plt>
   1f870:	mov	r1, r5
   1f874:	lsl	r4, r4, #16
   1f878:	mov	r6, r0
   1f87c:	movw	r0, #13532	; 0x34dc
   1f880:	movt	r0, #18
   1f884:	bl	4e410 <formatAddress@@Base+0x464>
   1f888:	movw	r1, #19248	; 0x4b30
   1f88c:	orr	r2, r4, r0
   1f890:	mov	r0, r6
   1f894:	bl	f83c <ioctl@plt>
   1f898:	cmn	r0, #1
   1f89c:	beq	1f8a8 <asynchronousBeep@@Base+0x54>
   1f8a0:	mov	r0, #1
   1f8a4:	pop	{r4, r5, r6, pc}
   1f8a8:	ldr	r0, [pc, #12]	; 1f8bc <asynchronousBeep@@Base+0x68>
   1f8ac:	add	r0, pc, r0
   1f8b0:	bl	1c6fc <logSystemError@@Base>
   1f8b4:	mov	r0, #0
   1f8b8:	pop	{r4, r5, r6, pc}
   1f8bc:	andeq	pc, r2, r8, lsl #20

0001f8c0 <startBeep@@Base>:
   1f8c0:	push	{r3, r4, r5, lr}
   1f8c4:	mov	r4, r0
   1f8c8:	bl	1d690 <getConsole@@Base>
   1f8cc:	subs	r3, r0, #0
   1f8d0:	beq	1f918 <startBeep@@Base+0x58>
   1f8d4:	bl	f914 <fileno@plt>
   1f8d8:	mov	r1, r4
   1f8dc:	mov	r5, r0
   1f8e0:	movw	r0, #13532	; 0x34dc
   1f8e4:	movt	r0, #18
   1f8e8:	bl	4e410 <formatAddress@@Base+0x464>
   1f8ec:	movw	r1, #19247	; 0x4b2f
   1f8f0:	mov	r2, r0
   1f8f4:	mov	r0, r5
   1f8f8:	bl	f83c <ioctl@plt>
   1f8fc:	cmn	r0, #1
   1f900:	beq	1f90c <startBeep@@Base+0x4c>
   1f904:	mov	r0, #1
   1f908:	pop	{r3, r4, r5, pc}
   1f90c:	ldr	r0, [pc, #12]	; 1f920 <startBeep@@Base+0x60>
   1f910:	add	r0, pc, r0
   1f914:	bl	1c6fc <logSystemError@@Base>
   1f918:	mov	r0, #0
   1f91c:	pop	{r3, r4, r5, pc}
   1f920:			; <UNDEFINED> instruction: 0x0002f9b4

0001f924 <stopBeep@@Base>:
   1f924:	push	{r3, lr}
   1f928:	bl	1d690 <getConsole@@Base>
   1f92c:	subs	r3, r0, #0
   1f930:	beq	1f960 <stopBeep@@Base+0x3c>
   1f934:	bl	f914 <fileno@plt>
   1f938:	movw	r1, #19247	; 0x4b2f
   1f93c:	mov	r2, #0
   1f940:	bl	f83c <ioctl@plt>
   1f944:	cmn	r0, #1
   1f948:	beq	1f954 <stopBeep@@Base+0x30>
   1f94c:	mov	r0, #1
   1f950:	pop	{r3, pc}
   1f954:	ldr	r0, [pc, #12]	; 1f968 <stopBeep@@Base+0x44>
   1f958:	add	r0, pc, r0
   1f95c:	bl	1c6fc <logSystemError@@Base>
   1f960:	mov	r0, #0
   1f964:	pop	{r3, pc}
   1f968:	andeq	pc, r2, ip, ror #18

0001f96c <endBeep@@Base>:
   1f96c:	bx	lr

0001f970 <closePcmDevice@@Base>:
   1f970:	push	{r4, lr}
   1f974:	mov	r4, r0
   1f978:	ldr	r0, [r0]
   1f97c:	bl	f764 <close@plt>
   1f980:	mov	r0, r4
   1f984:	pop	{r4, lr}
   1f988:	b	f4f4 <free@plt>

0001f98c <writePcmData@@Base>:
   1f98c:	push	{r3, lr}
   1f990:	ldr	r0, [r0]
   1f994:	bl	1f044 <writeData@@Base>
   1f998:	adds	r0, r0, #1
   1f99c:	movne	r0, #1
   1f9a0:	pop	{r3, pc}

0001f9a4 <getPcmBlockSize@@Base>:
   1f9a4:	ldr	r3, [pc, #120]	; 1fa24 <getPcmBlockSize@@Base+0x80>
   1f9a8:	mov	ip, #7
   1f9ac:	push	{r4, r5, lr}
   1f9b0:	add	r3, pc, r3
   1f9b4:	ldr	lr, [pc, #108]	; 1fa28 <getPcmBlockSize@@Base+0x84>
   1f9b8:	sub	sp, sp, #20
   1f9bc:	add	r2, sp, #16
   1f9c0:	movt	ip, #65535	; 0xffff
   1f9c4:	mov	r5, r0
   1f9c8:	movw	r1, #20490	; 0x500a
   1f9cc:	ldr	r4, [r3, lr]
   1f9d0:	movt	r1, #49156	; 0xc004
   1f9d4:	str	ip, [r2, #-12]!
   1f9d8:	ldr	r0, [r0]
   1f9dc:	ldr	r3, [r4]
   1f9e0:	str	r3, [sp, #12]
   1f9e4:	bl	f83c <ioctl@plt>
   1f9e8:	add	r2, sp, #8
   1f9ec:	ldr	r0, [r5]
   1f9f0:	movw	r1, #20484	; 0x5004
   1f9f4:	movt	r1, #49156	; 0xc004
   1f9f8:	bl	f83c <ioctl@plt>
   1f9fc:	ldr	r2, [sp, #12]
   1fa00:	ldr	r3, [r4]
   1fa04:	cmn	r0, #1
   1fa08:	ldrne	r0, [sp, #8]
   1fa0c:	moveq	r0, #128	; 0x80
   1fa10:	cmp	r2, r3
   1fa14:	bne	1fa20 <getPcmBlockSize@@Base+0x7c>
   1fa18:	add	sp, sp, #20
   1fa1c:	pop	{r4, r5, pc}
   1fa20:	bl	f950 <__stack_chk_fail@plt>
   1fa24:	andeq	r3, r5, r8, asr #1
   1fa28:			; <UNDEFINED> instruction: 0x000003b4

0001fa2c <getPcmSampleRate@@Base>:
   1fa2c:	ldr	r0, [r0, #8]
   1fa30:	bx	lr

0001fa34 <setPcmSampleRate@@Base>:
   1fa34:	push	{r4, lr}
   1fa38:	sub	sp, sp, #8
   1fa3c:	add	r2, sp, #8
   1fa40:	mov	r4, r0
   1fa44:	ldr	r0, [r0]
   1fa48:	str	r1, [r2, #-4]!
   1fa4c:	movw	r1, #20482	; 0x5002
   1fa50:	movt	r1, #49156	; 0xc004
   1fa54:	bl	f83c <ioctl@plt>
   1fa58:	cmn	r0, #1
   1fa5c:	mov	r0, r4
   1fa60:	ldrne	r3, [sp, #4]
   1fa64:	strne	r3, [r4, #8]
   1fa68:	bl	1fa2c <getPcmSampleRate@@Base>
   1fa6c:	add	sp, sp, #8
   1fa70:	pop	{r4, pc}

0001fa74 <getPcmChannelCount@@Base>:
   1fa74:	ldr	r0, [r0, #12]
   1fa78:	bx	lr

0001fa7c <setPcmChannelCount@@Base>:
   1fa7c:	push	{r4, lr}
   1fa80:	sub	sp, sp, #8
   1fa84:	add	r2, sp, #8
   1fa88:	mov	r4, r0
   1fa8c:	ldr	r0, [r0]
   1fa90:	str	r1, [r2, #-4]!
   1fa94:	movw	r1, #20486	; 0x5006
   1fa98:	movt	r1, #49156	; 0xc004
   1fa9c:	bl	f83c <ioctl@plt>
   1faa0:	cmn	r0, #1
   1faa4:	mov	r0, r4
   1faa8:	ldrne	r3, [sp, #4]
   1faac:	strne	r3, [r4, #12]
   1fab0:	bl	1fa74 <getPcmChannelCount@@Base>
   1fab4:	add	sp, sp, #8
   1fab8:	pop	{r4, pc}

0001fabc <openPcmDevice@@Base>:
   1fabc:	push	{r4, r5, r6, lr}
   1fac0:	mov	r6, r0
   1fac4:	mov	r0, #16
   1fac8:	mov	r5, r1
   1facc:	bl	fb48 <malloc@plt>
   1fad0:	subs	r4, r0, #0
   1fad4:	beq	1fbb0 <openPcmDevice@@Base+0xf4>
   1fad8:	ldrb	r3, [r5]
   1fadc:	cmp	r3, #0
   1fae0:	beq	1fb5c <openPcmDevice@@Base+0xa0>
   1fae4:	mov	r0, r5
   1fae8:	movw	r1, #2049	; 0x801
   1faec:	bl	f8c0 <open@plt>
   1faf0:	cmn	r0, #1
   1faf4:	str	r0, [r4]
   1faf8:	beq	1fb7c <openPcmDevice@@Base+0xc0>
   1fafc:	mov	r1, #1
   1fb00:	bl	1f1a8 <setBlockingIo@@Base>
   1fb04:	mov	r2, r4
   1fb08:	mov	r3, #196608	; 0x30000
   1fb0c:	movw	r1, #19830	; 0x4d76
   1fb10:	str	r3, [r4, #4]
   1fb14:	movt	r1, #32772	; 0x8004
   1fb18:	ldr	r0, [r2], #4
   1fb1c:	bl	f83c <ioctl@plt>
   1fb20:	cmn	r0, #1
   1fb24:	beq	1fb68 <openPcmDevice@@Base+0xac>
   1fb28:	ldr	r1, [pc, #148]	; 1fbc4 <openPcmDevice@@Base+0x108>
   1fb2c:	mov	r0, #7
   1fb30:	ldr	r2, [r4, #4]
   1fb34:	add	r1, pc, r1
   1fb38:	bl	1c634 <logMessage@@Base>
   1fb3c:	mov	r0, r4
   1fb40:	mov	r1, #8000	; 0x1f40
   1fb44:	bl	1fa34 <setPcmSampleRate@@Base>
   1fb48:	mov	r0, r4
   1fb4c:	mov	r1, #1
   1fb50:	bl	1fa7c <setPcmChannelCount@@Base>
   1fb54:	mov	r0, r4
   1fb58:	pop	{r4, r5, r6, pc}
   1fb5c:	ldr	r5, [pc, #100]	; 1fbc8 <openPcmDevice@@Base+0x10c>
   1fb60:	add	r5, pc, r5
   1fb64:	b	1fae4 <openPcmDevice@@Base+0x28>
   1fb68:	ldr	r1, [pc, #92]	; 1fbcc <openPcmDevice@@Base+0x110>
   1fb6c:	mov	r0, r6
   1fb70:	add	r1, pc, r1
   1fb74:	bl	1c634 <logMessage@@Base>
   1fb78:	b	1fb28 <openPcmDevice@@Base+0x6c>
   1fb7c:	bl	fca4 <__errno_location@plt>
   1fb80:	ldr	r0, [r0]
   1fb84:	bl	f5c0 <strerror@plt>
   1fb88:	ldr	r1, [pc, #64]	; 1fbd0 <openPcmDevice@@Base+0x114>
   1fb8c:	mov	r2, r5
   1fb90:	add	r1, pc, r1
   1fb94:	mov	r3, r0
   1fb98:	mov	r0, r6
   1fb9c:	bl	1c634 <logMessage@@Base>
   1fba0:	mov	r0, r4
   1fba4:	bl	f4f4 <free@plt>
   1fba8:	mov	r0, #0
   1fbac:	pop	{r4, r5, r6, pc}
   1fbb0:	ldr	r0, [pc, #28]	; 1fbd4 <openPcmDevice@@Base+0x118>
   1fbb4:	add	r0, pc, r0
   1fbb8:	bl	1c6fc <logSystemError@@Base>
   1fbbc:	mov	r0, r4
   1fbc0:	pop	{r4, r5, r6, pc}
   1fbc4:	andeq	pc, r2, ip, asr #15
   1fbc8:	andeq	pc, r2, r4, ror r7	; <UNPREDICTABLE>
   1fbcc:	andeq	pc, r2, r0, ror r7	; <UNPREDICTABLE>
   1fbd0:	andeq	pc, r2, ip, lsl #15
   1fbd4:	andeq	pc, r2, r8, lsl #15

0001fbd8 <getPcmAmplitudeFormat@@Base>:
   1fbd8:	ldr	r0, [r0]
   1fbdc:	mov	r1, #0
   1fbe0:	b	1f1e8 <setCloseOnExec@@Base+0x20>

0001fbe4 <setPcmAmplitudeFormat@@Base>:
   1fbe4:	cmp	r1, #0
   1fbe8:	beq	1fc24 <setPcmAmplitudeFormat@@Base+0x40>
   1fbec:	ldr	r3, [pc, #60]	; 1fc30 <setPcmAmplitudeFormat@@Base+0x4c>
   1fbf0:	add	r3, pc, r3
   1fbf4:	add	r3, r3, #8
   1fbf8:	b	1fc04 <setPcmAmplitudeFormat@@Base+0x20>
   1fbfc:	cmp	r2, r1
   1fc00:	beq	1fc18 <setPcmAmplitudeFormat@@Base+0x34>
   1fc04:	ldr	r2, [r3]
   1fc08:	mov	ip, r3
   1fc0c:	add	r3, r3, #8
   1fc10:	cmp	r2, #8
   1fc14:	bne	1fbfc <setPcmAmplitudeFormat@@Base+0x18>
   1fc18:	ldr	r0, [r0]
   1fc1c:	ldr	r1, [ip, #4]
   1fc20:	b	1f1e8 <setCloseOnExec@@Base+0x20>
   1fc24:	ldr	ip, [pc, #8]	; 1fc34 <setPcmAmplitudeFormat@@Base+0x50>
   1fc28:	add	ip, pc, ip
   1fc2c:	b	1fc18 <setPcmAmplitudeFormat@@Base+0x34>
   1fc30:	andeq	pc, r2, r4, lsl #11
   1fc34:	andeq	pc, r2, ip, asr #10

0001fc38 <forcePcmOutput@@Base>:
   1fc38:	ldr	r0, [r0]
   1fc3c:	movw	r1, #20488	; 0x5008
   1fc40:	mov	r2, #0
   1fc44:	b	f83c <ioctl@plt>

0001fc48 <awaitPcmOutput@@Base>:
   1fc48:	ldr	r0, [r0]
   1fc4c:	movw	r1, #20481	; 0x5001
   1fc50:	mov	r2, #0
   1fc54:	b	f83c <ioctl@plt>

0001fc58 <cancelPcmOutput@@Base>:
   1fc58:	ldr	r0, [r0]
   1fc5c:	mov	r1, #20480	; 0x5000
   1fc60:	mov	r2, #0
   1fc64:	b	f83c <ioctl@plt>

0001fc68 <seqbuf_dump@@Base>:
   1fc68:	push	{r4, lr}
   1fc6c:	ldr	r4, [pc, #68]	; 1fcb8 <seqbuf_dump@@Base+0x50>
   1fc70:	add	r4, pc, r4
   1fc74:	ldr	r1, [r4]
   1fc78:	ldr	r2, [r1, #140]	; 0x8c
   1fc7c:	cmp	r2, #0
   1fc80:	bne	1fc90 <seqbuf_dump@@Base+0x28>
   1fc84:	mov	r3, #0
   1fc88:	str	r3, [r1, #140]	; 0x8c
   1fc8c:	pop	{r4, pc}
   1fc90:	ldr	r0, [r1], #8
   1fc94:	bl	1f044 <writeData@@Base>
   1fc98:	cmn	r0, #1
   1fc9c:	beq	1fca8 <seqbuf_dump@@Base+0x40>
   1fca0:	ldr	r1, [r4]
   1fca4:	b	1fc84 <seqbuf_dump@@Base+0x1c>
   1fca8:	ldr	r0, [pc, #12]	; 1fcbc <seqbuf_dump@@Base+0x54>
   1fcac:	add	r0, pc, r0
   1fcb0:	bl	1c6fc <logSystemError@@Base>
   1fcb4:	b	1fca0 <seqbuf_dump@@Base+0x38>
   1fcb8:			; <UNDEFINED> instruction: 0x000539b4
   1fcbc:	andeq	pc, r2, r8, lsr #13

0001fcc0 <openMidiDevice@@Base>:
   1fcc0:	ldr	r3, [pc, #744]	; 1ffb0 <openMidiDevice@@Base+0x2f0>
   1fcc4:	ldr	r2, [pc, #744]	; 1ffb4 <openMidiDevice@@Base+0x2f4>
   1fcc8:	add	r3, pc, r3
   1fccc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fcd0:	sub	sp, sp, #172	; 0xac
   1fcd4:	ldr	r2, [r3, r2]
   1fcd8:	mov	sl, r0
   1fcdc:	mov	r0, #144	; 0x90
   1fce0:	mov	r5, r1
   1fce4:	ldr	r3, [r2]
   1fce8:	str	r2, [sp, #8]
   1fcec:	str	r3, [sp, #164]	; 0xa4
   1fcf0:	bl	fb48 <malloc@plt>
   1fcf4:	subs	r4, r0, #0
   1fcf8:	beq	1ff98 <openMidiDevice@@Base+0x2d8>
   1fcfc:	ldrb	r3, [r5]
   1fd00:	cmp	r3, #0
   1fd04:	beq	1feb0 <openMidiDevice@@Base+0x1f0>
   1fd08:	mov	r0, r5
   1fd0c:	mov	r1, #1
   1fd10:	bl	f8c0 <open@plt>
   1fd14:	cmn	r0, #1
   1fd18:	str	r0, [r4]
   1fd1c:	beq	1ff64 <openMidiDevice@@Base+0x2a4>
   1fd20:	add	r9, sp, #16
   1fd24:	movw	r1, #20746	; 0x510a
   1fd28:	movt	r1, #32772	; 0x8004
   1fd2c:	mvn	r6, #0
   1fd30:	mov	r2, r9
   1fd34:	str	r6, [sp, #20]
   1fd38:	bl	f83c <ioctl@plt>
   1fd3c:	cmp	r0, r6
   1fd40:	mov	r5, r0
   1fd44:	beq	1ff0c <openMidiDevice@@Base+0x24c>
   1fd48:	ldr	r3, [sp, #16]
   1fd4c:	cmp	r3, #0
   1fd50:	ble	1ff5c <openMidiDevice@@Base+0x29c>
   1fd54:	ldr	r1, [pc, #604]	; 1ffb8 <openMidiDevice@@Base+0x2f8>
   1fd58:	add	r5, sp, #24
   1fd5c:	ldr	r7, [pc, #600]	; 1ffbc <openMidiDevice@@Base+0x2fc>
   1fd60:	mov	r8, r6
   1fd64:	add	r1, pc, r1
   1fd68:	mov	fp, #0
   1fd6c:	str	r1, [sp, #12]
   1fd70:	add	r7, pc, r7
   1fd74:	b	1fdcc <openMidiDevice@@Base+0x10c>
   1fd78:	ldr	r2, [sp, #60]	; 0x3c
   1fd7c:	cmp	r2, #0
   1fd80:	moveq	r6, fp
   1fd84:	beq	1fdbc <openMidiDevice@@Base+0xfc>
   1fd88:	cmp	r2, #1
   1fd8c:	ldr	r3, [sp, #64]	; 0x40
   1fd90:	bne	1fdac <openMidiDevice@@Base+0xec>
   1fd94:	cmp	r3, #16
   1fd98:	streq	fp, [sp, #20]
   1fd9c:	beq	1fdbc <openMidiDevice@@Base+0xfc>
   1fda0:	cmp	r3, #32
   1fda4:	moveq	r8, fp
   1fda8:	beq	1fdbc <openMidiDevice@@Base+0xfc>
   1fdac:	str	r5, [sp]
   1fdb0:	mov	r0, #7
   1fdb4:	mov	r1, r7
   1fdb8:	bl	1c634 <logMessage@@Base>
   1fdbc:	ldr	r3, [sp, #16]
   1fdc0:	add	fp, fp, #1
   1fdc4:	cmp	r3, fp
   1fdc8:	ble	1fe1c <openMidiDevice@@Base+0x15c>
   1fdcc:	movw	r1, #20738	; 0x5102
   1fdd0:	ldr	r0, [r4]
   1fdd4:	movt	r1, #49292	; 0xc08c
   1fdd8:	mov	r2, r5
   1fddc:	str	fp, [sp, #56]	; 0x38
   1fde0:	bl	f83c <ioctl@plt>
   1fde4:	cmn	r0, #1
   1fde8:	bne	1fd78 <openMidiDevice@@Base+0xb8>
   1fdec:	bl	fca4 <__errno_location@plt>
   1fdf0:	ldr	r0, [r0]
   1fdf4:	bl	f5c0 <strerror@plt>
   1fdf8:	mov	r2, fp
   1fdfc:	ldr	r1, [sp, #12]
   1fe00:	add	fp, fp, #1
   1fe04:	mov	r3, r0
   1fe08:	mov	r0, sl
   1fe0c:	bl	1c634 <logMessage@@Base>
   1fe10:	ldr	r3, [sp, #16]
   1fe14:	cmp	r3, fp
   1fe18:	bgt	1fdcc <openMidiDevice@@Base+0x10c>
   1fe1c:	ldr	r3, [sp, #20]
   1fe20:	cmp	r3, #0
   1fe24:	blt	1fe44 <openMidiDevice@@Base+0x184>
   1fe28:	movw	r1, #20745	; 0x5109
   1fe2c:	ldr	r0, [r4]
   1fe30:	movt	r1, #16388	; 0x4004
   1fe34:	add	r2, sp, #20
   1fe38:	bl	f83c <ioctl@plt>
   1fe3c:	cmn	r0, #1
   1fe40:	beq	1fee0 <openMidiDevice@@Base+0x220>
   1fe44:	mov	r2, r9
   1fe48:	movw	r1, #20747	; 0x510b
   1fe4c:	ldr	r0, [r4]
   1fe50:	movt	r1, #32772	; 0x8004
   1fe54:	bl	f83c <ioctl@plt>
   1fe58:	cmn	r0, #1
   1fe5c:	mov	r5, r0
   1fe60:	beq	1ff38 <openMidiDevice@@Base+0x278>
   1fe64:	ldr	r0, [sp, #16]
   1fe68:	cmp	r0, #0
   1fe6c:	subgt	r5, r0, #1
   1fe70:	ble	1fed8 <openMidiDevice@@Base+0x218>
   1fe74:	cmn	r8, #1
   1fe78:	beq	1febc <openMidiDevice@@Base+0x1fc>
   1fe7c:	mov	r0, r4
   1fe80:	mov	r2, #128	; 0x80
   1fe84:	mov	r3, #0
   1fe88:	str	r8, [r4, #4]
   1fe8c:	str	r2, [r4, #136]	; 0x88
   1fe90:	str	r3, [r4, #140]	; 0x8c
   1fe94:	ldr	r1, [sp, #8]
   1fe98:	ldr	r2, [sp, #164]	; 0xa4
   1fe9c:	ldr	r3, [r1]
   1fea0:	cmp	r2, r3
   1fea4:	bne	1ffac <openMidiDevice@@Base+0x2ec>
   1fea8:	add	sp, sp, #172	; 0xac
   1feac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1feb0:	ldr	r5, [pc, #264]	; 1ffc0 <openMidiDevice@@Base+0x300>
   1feb4:	add	r5, pc, r5
   1feb8:	b	1fd08 <openMidiDevice@@Base+0x48>
   1febc:	ldr	r8, [sp, #20]
   1fec0:	cmp	r8, #0
   1fec4:	bge	1fe7c <openMidiDevice@@Base+0x1bc>
   1fec8:	cmn	r6, #1
   1fecc:	biceq	r8, r5, r5, asr #31
   1fed0:	movne	r8, r6
   1fed4:	b	1fe7c <openMidiDevice@@Base+0x1bc>
   1fed8:	mvn	r5, #0
   1fedc:	b	1fe74 <openMidiDevice@@Base+0x1b4>
   1fee0:	bl	fca4 <__errno_location@plt>
   1fee4:	ldr	r5, [sp, #20]
   1fee8:	ldr	r0, [r0]
   1feec:	bl	f5c0 <strerror@plt>
   1fef0:	ldr	r1, [pc, #204]	; 1ffc4 <openMidiDevice@@Base+0x304>
   1fef4:	mov	r2, r5
   1fef8:	add	r1, pc, r1
   1fefc:	mov	r3, r0
   1ff00:	mov	r0, sl
   1ff04:	bl	1c634 <logMessage@@Base>
   1ff08:	b	1fe44 <openMidiDevice@@Base+0x184>
   1ff0c:	bl	fca4 <__errno_location@plt>
   1ff10:	mov	r6, r5
   1ff14:	mov	r8, r5
   1ff18:	ldr	r0, [r0]
   1ff1c:	bl	f5c0 <strerror@plt>
   1ff20:	ldr	r1, [pc, #160]	; 1ffc8 <openMidiDevice@@Base+0x308>
   1ff24:	add	r1, pc, r1
   1ff28:	mov	r2, r0
   1ff2c:	mov	r0, sl
   1ff30:	bl	1c634 <logMessage@@Base>
   1ff34:	b	1fe44 <openMidiDevice@@Base+0x184>
   1ff38:	bl	fca4 <__errno_location@plt>
   1ff3c:	ldr	r0, [r0]
   1ff40:	bl	f5c0 <strerror@plt>
   1ff44:	ldr	r1, [pc, #128]	; 1ffcc <openMidiDevice@@Base+0x30c>
   1ff48:	add	r1, pc, r1
   1ff4c:	mov	r2, r0
   1ff50:	mov	r0, sl
   1ff54:	bl	1c634 <logMessage@@Base>
   1ff58:	b	1fe74 <openMidiDevice@@Base+0x1b4>
   1ff5c:	mov	r8, r6
   1ff60:	b	1fe1c <openMidiDevice@@Base+0x15c>
   1ff64:	bl	fca4 <__errno_location@plt>
   1ff68:	ldr	r0, [r0]
   1ff6c:	bl	f5c0 <strerror@plt>
   1ff70:	ldr	r1, [pc, #88]	; 1ffd0 <openMidiDevice@@Base+0x310>
   1ff74:	mov	r2, r5
   1ff78:	add	r1, pc, r1
   1ff7c:	mov	r3, r0
   1ff80:	mov	r0, sl
   1ff84:	bl	1c634 <logMessage@@Base>
   1ff88:	mov	r0, r4
   1ff8c:	bl	f4f4 <free@plt>
   1ff90:	mov	r0, #0
   1ff94:	b	1fe94 <openMidiDevice@@Base+0x1d4>
   1ff98:	ldr	r0, [pc, #52]	; 1ffd4 <openMidiDevice@@Base+0x314>
   1ff9c:	add	r0, pc, r0
   1ffa0:	bl	1c6fc <logSystemError@@Base>
   1ffa4:	mov	r0, r4
   1ffa8:	b	1fe94 <openMidiDevice@@Base+0x1d4>
   1ffac:	bl	f950 <__stack_chk_fail@plt>
   1ffb0:			; <UNDEFINED> instruction: 0x00052db0
   1ffb4:			; <UNDEFINED> instruction: 0x000003b4
   1ffb8:	andeq	pc, r2, ip, lsr #12
   1ffbc:	andeq	pc, r2, r0, lsl #12
   1ffc0:	andeq	pc, r2, ip, lsr #9
   1ffc4:	andeq	pc, r2, r8, asr #9
   1ffc8:	andeq	pc, r2, ip, asr #9
   1ffcc:	ldrdeq	pc, [r2], -r0
   1ffd0:	andeq	pc, r2, r4, asr #9
   1ffd4:	andeq	pc, r2, r0, asr #9

0001ffd8 <closeMidiDevice@@Base>:
   1ffd8:	push	{r4, lr}
   1ffdc:	mov	r4, r0
   1ffe0:	ldr	r0, [r0]
   1ffe4:	bl	f764 <close@plt>
   1ffe8:	mov	r0, r4
   1ffec:	pop	{r4, lr}
   1fff0:	b	f4f4 <free@plt>

0001fff4 <flushMidiDevice@@Base>:
   1fff4:	push	{r4, lr}
   1fff8:	ldr	r4, [pc, #24]	; 20018 <flushMidiDevice@@Base+0x24>
   1fffc:	add	r4, pc, r4
   20000:	str	r0, [r4]
   20004:	bl	1fc68 <seqbuf_dump@@Base>
   20008:	mov	r3, #0
   2000c:	mov	r0, #1
   20010:	str	r3, [r4]
   20014:	pop	{r4, pc}
   20018:	andeq	r3, r5, r8, lsr #12

0002001c <setMidiInstrument@@Base>:
   2001c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20020:	mov	r4, r0
   20024:	ldr	r0, [r0, #140]	; 0x8c
   20028:	mov	r9, r2
   2002c:	ldr	r5, [pc, #124]	; 200b0 <setMidiInstrument@@Base+0x94>
   20030:	mov	sl, r1
   20034:	ldr	r3, [r4, #136]	; 0x88
   20038:	add	r2, r0, #7
   2003c:	add	r5, pc, r5
   20040:	cmp	r2, r3
   20044:	str	r4, [r5]
   20048:	movlt	ip, r4
   2004c:	blt	2005c <setMidiInstrument@@Base+0x40>
   20050:	bl	1fc68 <seqbuf_dump@@Base>
   20054:	ldr	ip, [r5]
   20058:	ldr	r0, [ip, #140]	; 0x8c
   2005c:	add	r3, ip, r0
   20060:	mvn	r2, #109	; 0x6d
   20064:	add	r6, r0, #14
   20068:	ldr	r5, [pc, #68]	; 200b4 <setMidiInstrument@@Base+0x98>
   2006c:	strb	r2, [r3, #8]
   20070:	mvn	r7, #63	; 0x3f
   20074:	ldr	r8, [r4, #4]
   20078:	add	r5, pc, r5
   2007c:	mov	r4, #0
   20080:	strb	sl, [r3, #11]
   20084:	strb	r9, [r3, #12]
   20088:	mov	r0, #1
   2008c:	strb	r8, [r3, #9]
   20090:	strb	r7, [r3, #10]
   20094:	strb	r4, [r3, #13]
   20098:	strh	r4, [ip, r6]
   2009c:	ldr	r3, [ip, #140]	; 0x8c
   200a0:	str	r4, [r5]
   200a4:	add	r3, r3, #8
   200a8:	str	r3, [ip, #140]	; 0x8c
   200ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   200b0:	andeq	r3, r5, r8, ror #11
   200b4:	andeq	r3, r5, ip, lsr #11

000200b8 <beginMidiBlock@@Base>:
   200b8:	push	{r4, lr}
   200bc:	ldr	r2, [r0, #140]	; 0x8c
   200c0:	ldr	r3, [r0, #136]	; 0x88
   200c4:	ldr	r4, [pc, #104]	; 20134 <beginMidiBlock@@Base+0x7c>
   200c8:	add	r1, r2, #7
   200cc:	cmp	r1, r3
   200d0:	add	r4, pc, r4
   200d4:	movlt	r3, r0
   200d8:	str	r0, [r4]
   200dc:	blt	200ec <beginMidiBlock@@Base+0x34>
   200e0:	bl	1fc68 <seqbuf_dump@@Base>
   200e4:	ldr	r3, [r4]
   200e8:	ldr	r2, [r3, #140]	; 0x8c
   200ec:	add	r1, r3, r2
   200f0:	add	r4, r2, #12
   200f4:	ldr	ip, [pc, #60]	; 20138 <beginMidiBlock@@Base+0x80>
   200f8:	mvn	r0, #126	; 0x7e
   200fc:	mov	r2, #4
   20100:	strb	r0, [r1, #8]
   20104:	strb	r2, [r1, #9]
   20108:	add	ip, pc, ip
   2010c:	mov	r2, #0
   20110:	strb	r2, [r1, #10]
   20114:	strb	r2, [r1, #11]
   20118:	mov	r0, #1
   2011c:	str	r2, [r3, r4]
   20120:	ldr	r1, [r3, #140]	; 0x8c
   20124:	str	r2, [ip]
   20128:	add	r2, r1, #8
   2012c:	str	r2, [r3, #140]	; 0x8c
   20130:	pop	{r4, pc}
   20134:	andeq	r3, r5, r4, asr r5
   20138:	andeq	r3, r5, ip, lsl r5

0002013c <endMidiBlock@@Base>:
   2013c:	push	{r3, r4, r5, lr}
   20140:	mov	r4, r0
   20144:	ldr	r1, [r0, #140]	; 0x8c
   20148:	ldr	r3, [r0, #136]	; 0x88
   2014c:	ldr	r5, [pc, #120]	; 201cc <endMidiBlock@@Base+0x90>
   20150:	add	r2, r1, #7
   20154:	cmp	r2, r3
   20158:	add	r5, pc, r5
   2015c:	movlt	r3, r0
   20160:	str	r0, [r5]
   20164:	blt	20174 <endMidiBlock@@Base+0x38>
   20168:	bl	1fc68 <seqbuf_dump@@Base>
   2016c:	ldr	r3, [r5]
   20170:	ldr	r1, [r3, #140]	; 0x8c
   20174:	add	r2, r3, r1
   20178:	add	r1, r1, #12
   2017c:	mov	r5, #0
   20180:	mvn	ip, #126	; 0x7e
   20184:	strb	r5, [r2, #10]
   20188:	mov	r0, #3
   2018c:	strb	ip, [r2, #8]
   20190:	strb	r0, [r2, #9]
   20194:	strb	r5, [r2, #11]
   20198:	str	r5, [r3, r1]
   2019c:	ldr	r2, [r3, #140]	; 0x8c
   201a0:	add	r2, r2, #8
   201a4:	str	r2, [r3, #140]	; 0x8c
   201a8:	bl	1fc68 <seqbuf_dump@@Base>
   201ac:	ldr	r0, [r4]
   201b0:	movw	r1, #20737	; 0x5101
   201b4:	bl	f83c <ioctl@plt>
   201b8:	ldr	r3, [pc, #16]	; 201d0 <endMidiBlock@@Base+0x94>
   201bc:	mov	r0, #1
   201c0:	add	r3, pc, r3
   201c4:	str	r5, [r3]
   201c8:	pop	{r3, r4, r5, pc}
   201cc:	andeq	r3, r5, ip, asr #9
   201d0:	andeq	r3, r5, r4, ror #8

000201d4 <startMidiNote@@Base>:
   201d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   201d8:	mov	r4, r0
   201dc:	ldr	r0, [r0, #140]	; 0x8c
   201e0:	mov	r8, r1
   201e4:	ldr	r5, [pc, #156]	; 20288 <startMidiNote@@Base+0xb4>
   201e8:	mov	r9, r2
   201ec:	ldr	r1, [r4, #136]	; 0x88
   201f0:	add	r6, r0, #7
   201f4:	add	r5, pc, r5
   201f8:	mov	r7, r3
   201fc:	cmp	r6, r1
   20200:	str	r4, [r5]
   20204:	movlt	r5, r4
   20208:	blt	2021c <startMidiNote@@Base+0x48>
   2020c:	bl	1fc68 <seqbuf_dump@@Base>
   20210:	ldr	r5, [r5]
   20214:	ldr	r0, [r5, #140]	; 0x8c
   20218:	add	r6, r0, #7
   2021c:	rsb	r3, r7, r7, lsl #7
   20220:	movw	r7, #34079	; 0x851f
   20224:	movt	r7, #20971	; 0x51eb
   20228:	add	ip, r5, r0
   2022c:	ldr	sl, [pc, #88]	; 2028c <startMidiNote@@Base+0xb8>
   20230:	mvn	r2, #108	; 0x6c
   20234:	smull	r1, r7, r7, r3
   20238:	strb	r2, [ip, #8]
   2023c:	ldr	r1, [r4, #4]
   20240:	add	sl, pc, sl
   20244:	add	r6, r5, r6
   20248:	asr	r3, r3, #31
   2024c:	add	r2, r0, #8
   20250:	strb	r8, [ip, #11]
   20254:	strb	r1, [ip, #9]
   20258:	mvn	r4, #111	; 0x6f
   2025c:	mov	r1, #0
   20260:	strb	r9, [ip, #12]
   20264:	strb	r4, [ip, #10]
   20268:	rsb	r7, r3, r7, asr #5
   2026c:	strb	r1, [ip, #14]
   20270:	mov	r0, #1
   20274:	strb	r7, [ip, #13]
   20278:	str	r1, [sl]
   2027c:	strb	r1, [r6, #8]
   20280:	str	r2, [r5, #140]	; 0x8c
   20284:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20288:	andeq	r3, r5, r0, lsr r4
   2028c:	andeq	r3, r5, r4, ror #7

00020290 <stopMidiNote@@Base>:
   20290:	push	{r4, r5, r6, r7, r8, lr}
   20294:	mov	r4, r0
   20298:	ldr	r2, [r0, #140]	; 0x8c
   2029c:	mov	r8, r1
   202a0:	ldr	r3, [r0, #136]	; 0x88
   202a4:	ldr	r5, [pc, #120]	; 20324 <stopMidiNote@@Base+0x94>
   202a8:	add	r0, r2, #7
   202ac:	cmp	r0, r3
   202b0:	add	r5, pc, r5
   202b4:	movlt	ip, r4
   202b8:	str	r4, [r5]
   202bc:	blt	202d0 <stopMidiNote@@Base+0x40>
   202c0:	bl	1fc68 <seqbuf_dump@@Base>
   202c4:	ldr	ip, [r5]
   202c8:	ldr	r2, [ip, #140]	; 0x8c
   202cc:	add	r0, r2, #7
   202d0:	add	r3, ip, r2
   202d4:	ldr	r7, [pc, #76]	; 20328 <stopMidiNote@@Base+0x98>
   202d8:	mvn	r1, #108	; 0x6c
   202dc:	add	r6, ip, r0
   202e0:	strb	r1, [r3, #8]
   202e4:	add	r7, pc, r7
   202e8:	ldr	r4, [r4, #4]
   202ec:	add	r5, r2, #8
   202f0:	strb	r8, [r3, #11]
   202f4:	mov	r2, #0
   202f8:	mvn	r0, #127	; 0x7f
   202fc:	strb	r2, [r3, #12]
   20300:	strb	r0, [r3, #10]
   20304:	mov	r0, #1
   20308:	strb	r4, [r3, #9]
   2030c:	strb	r2, [r3, #13]
   20310:	strb	r2, [r3, #14]
   20314:	str	r2, [r7]
   20318:	strb	r2, [r6, #8]
   2031c:	str	r5, [ip, #140]	; 0x8c
   20320:	pop	{r4, r5, r6, r7, r8, pc}
   20324:	andeq	r3, r5, r4, ror r3
   20328:	andeq	r3, r5, r0, asr #6

0002032c <insertMidiWait@@Base>:
   2032c:	push	{r4, r5, r6, lr}
   20330:	mov	r5, r1
   20334:	ldr	ip, [r0, #140]	; 0x8c
   20338:	ldr	r3, [r0, #136]	; 0x88
   2033c:	ldr	r4, [pc, #124]	; 203c0 <insertMidiWait@@Base+0x94>
   20340:	add	r2, ip, #7
   20344:	cmp	r2, r3
   20348:	add	r4, pc, r4
   2034c:	movlt	r3, r0
   20350:	str	r0, [r4]
   20354:	blt	20364 <insertMidiWait@@Base+0x38>
   20358:	bl	1fc68 <seqbuf_dump@@Base>
   2035c:	ldr	r3, [r4]
   20360:	ldr	ip, [r3, #140]	; 0x8c
   20364:	add	r1, r5, #9
   20368:	movw	r0, #26215	; 0x6667
   2036c:	movt	r0, #26214	; 0x6666
   20370:	add	r2, r3, ip
   20374:	asr	r5, r1, #31
   20378:	add	ip, ip, #12
   2037c:	smull	r4, r6, r0, r1
   20380:	ldr	r1, [pc, #60]	; 203c4 <insertMidiWait@@Base+0x98>
   20384:	mvn	r4, #126	; 0x7e
   20388:	mov	r0, #1
   2038c:	strb	r4, [r2, #8]
   20390:	add	r1, pc, r1
   20394:	mov	r4, #0
   20398:	strb	r0, [r2, #9]
   2039c:	strb	r4, [r2, #10]
   203a0:	strb	r4, [r2, #11]
   203a4:	rsb	r5, r5, r6, asr #2
   203a8:	str	r5, [r3, ip]
   203ac:	ldr	r2, [r3, #140]	; 0x8c
   203b0:	str	r4, [r1]
   203b4:	add	r2, r2, #8
   203b8:	str	r2, [r3, #140]	; 0x8c
   203bc:	pop	{r4, r5, r6, pc}
   203c0:	ldrdeq	r3, [r5], -ip
   203c4:	muleq	r5, r4, r2

000203c8 <enablePorts@@Base>:
   203c8:	push	{r4, r5, r6, lr}
   203cc:	mov	r5, r1
   203d0:	sub	sp, sp, #8
   203d4:	mov	r1, r2
   203d8:	mov	r4, r2
   203dc:	mov	r6, r0
   203e0:	mov	r2, #1
   203e4:	mov	r0, r5
   203e8:	bl	fb6c <ioperm@plt>
   203ec:	cmn	r0, #1
   203f0:	movne	r0, #1
   203f4:	beq	20400 <enablePorts@@Base+0x38>
   203f8:	add	sp, sp, #8
   203fc:	pop	{r4, r5, r6, pc}
   20400:	bl	fca4 <__errno_location@plt>
   20404:	ldr	r0, [r0]
   20408:	bl	f5c0 <strerror@plt>
   2040c:	ldr	r1, [pc, #32]	; 20434 <enablePorts@@Base+0x6c>
   20410:	mov	r2, r5
   20414:	mov	r3, r4
   20418:	add	r1, pc, r1
   2041c:	str	r0, [sp]
   20420:	mov	r0, r6
   20424:	bl	1c634 <logMessage@@Base>
   20428:	mov	r0, #0
   2042c:	add	sp, sp, #8
   20430:	pop	{r4, r5, r6, pc}
   20434:	andeq	pc, r2, ip, asr r0	; <UNPREDICTABLE>

00020438 <disablePorts@@Base>:
   20438:	push	{r4, r5, lr}
   2043c:	mov	r2, #0
   20440:	sub	sp, sp, #12
   20444:	mov	r5, r0
   20448:	mov	r4, r1
   2044c:	bl	fb6c <ioperm@plt>
   20450:	cmn	r0, #1
   20454:	movne	r0, #1
   20458:	beq	20464 <disablePorts@@Base+0x2c>
   2045c:	add	sp, sp, #12
   20460:	pop	{r4, r5, pc}
   20464:	bl	fca4 <__errno_location@plt>
   20468:	ldr	r0, [r0]
   2046c:	bl	f5c0 <strerror@plt>
   20470:	ldr	r1, [pc, #32]	; 20498 <disablePorts@@Base+0x60>
   20474:	mov	r2, r5
   20478:	mov	r3, r4
   2047c:	add	r1, pc, r1
   20480:	str	r0, [sp]
   20484:	mov	r0, #3
   20488:	bl	1c634 <logMessage@@Base>
   2048c:	mov	r0, #0
   20490:	add	sp, sp, #12
   20494:	pop	{r4, r5, pc}
   20498:	andeq	pc, r2, r8, lsl r0	; <UNPREDICTABLE>

0002049c <readPort1@@Base>:
   2049c:	b	fbd8 <inb@plt>

000204a0 <writePort1@@Base>:
   204a0:	mov	r3, r0
   204a4:	mov	r0, r1
   204a8:	mov	r1, r3
   204ac:	b	fb78 <outb@plt>

000204b0 <installKernelModule@@Base>:
   204b0:	cmp	r1, #0
   204b4:	beq	204c4 <installKernelModule@@Base+0x14>
   204b8:	ldr	r3, [r1]
   204bc:	cmp	r3, #0
   204c0:	bne	204c8 <installKernelModule@@Base+0x18>
   204c4:	b	1f610 <executeHostCommand@@Base+0x1b4>
   204c8:	subs	r3, r3, #2
   204cc:	rsbs	r0, r3, #0
   204d0:	adcs	r0, r0, r3
   204d4:	bx	lr

000204d8 <canBeep@@Base>:
   204d8:	ldr	r1, [pc, #36]	; 20504 <canBeep@@Base+0x2c>
   204dc:	ldr	r0, [pc, #36]	; 20508 <canBeep@@Base+0x30>
   204e0:	add	r1, pc, r1
   204e4:	push	{r3, lr}
   204e8:	add	r1, r1, #4
   204ec:	add	r0, pc, r0
   204f0:	bl	204b0 <installKernelModule@@Base>
   204f4:	bl	1d690 <getConsole@@Base>
   204f8:	adds	r0, r0, #0
   204fc:	movne	r0, #1
   20500:	pop	{r3, pc}
   20504:	andeq	r3, r5, r4, asr #2
   20508:	andeq	lr, r2, r8, asr #31

0002050c <openCharacterDevice@@Base>:
   2050c:	ldr	ip, [pc, #716]	; 207e0 <openCharacterDevice@@Base+0x2d4>
   20510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20514:	mov	r7, r1
   20518:	ldr	r1, [pc, #708]	; 207e4 <openCharacterDevice@@Base+0x2d8>
   2051c:	add	ip, pc, ip
   20520:	mov	r9, r3
   20524:	sub	sp, sp, #124	; 0x7c
   20528:	mov	r3, ip
   2052c:	mov	sl, r2
   20530:	ldr	r6, [ip, r1]
   20534:	mov	r8, r0
   20538:	ldr	r3, [r6]
   2053c:	str	r3, [sp, #116]	; 0x74
   20540:	bl	1d998 <getDevicePath@@Base>
   20544:	subs	r5, r0, #0
   20548:	beq	20648 <openCharacterDevice@@Base+0x13c>
   2054c:	mov	r1, r7
   20550:	bl	f56c <__open_2@plt>
   20554:	cmn	r0, #1
   20558:	mov	r4, r0
   2055c:	beq	20600 <openCharacterDevice@@Base+0xf4>
   20560:	ldr	r1, [pc, #640]	; 207e8 <openCharacterDevice@@Base+0x2dc>
   20564:	mov	r0, #7
   20568:	mov	r2, r5
   2056c:	mov	r3, r4
   20570:	add	r1, pc, r1
   20574:	bl	1c634 <logMessage@@Base>
   20578:	mov	r0, #3
   2057c:	mov	r1, r4
   20580:	add	r2, sp, #24
   20584:	bl	fb00 <__fxstat@plt>
   20588:	cmn	r0, #1
   2058c:	beq	20650 <openCharacterDevice@@Base+0x144>
   20590:	ldr	r3, [sp, #40]	; 0x28
   20594:	and	r3, r3, #61440	; 0xf000
   20598:	cmp	r3, #8192	; 0x2000
   2059c:	beq	205dc <openCharacterDevice@@Base+0xd0>
   205a0:	ldr	r1, [pc, #580]	; 207ec <openCharacterDevice@@Base+0x2e0>
   205a4:	mov	r0, #7
   205a8:	mov	r2, r5
   205ac:	mov	r3, r4
   205b0:	add	r1, pc, r1
   205b4:	bl	1c634 <logMessage@@Base>
   205b8:	mov	r0, r4
   205bc:	bl	f764 <close@plt>
   205c0:	ldr	r1, [pc, #552]	; 207f0 <openCharacterDevice@@Base+0x2e4>
   205c4:	mov	r3, r4
   205c8:	mov	r0, #7
   205cc:	add	r1, pc, r1
   205d0:	mov	r2, r5
   205d4:	mvn	r4, #0
   205d8:	bl	1c634 <logMessage@@Base>
   205dc:	mov	r0, r5
   205e0:	bl	f4f4 <free@plt>
   205e4:	ldr	r2, [sp, #116]	; 0x74
   205e8:	mov	r0, r4
   205ec:	ldr	r3, [r6]
   205f0:	cmp	r2, r3
   205f4:	bne	20798 <openCharacterDevice@@Base+0x28c>
   205f8:	add	sp, sp, #124	; 0x7c
   205fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20600:	bl	fca4 <__errno_location@plt>
   20604:	ldr	r3, [pc, #488]	; 207f4 <openCharacterDevice@@Base+0x2e8>
   20608:	add	r3, pc, r3
   2060c:	str	r3, [sp, #12]
   20610:	mov	fp, r0
   20614:	ldr	r0, [r0]
   20618:	bl	f5c0 <strerror@plt>
   2061c:	ldr	r1, [sp, #12]
   20620:	mov	r2, r5
   20624:	mov	r3, r0
   20628:	mov	r0, #7
   2062c:	bl	1c634 <logMessage@@Base>
   20630:	ldr	r3, [fp]
   20634:	cmp	r3, #2
   20638:	beq	2067c <openCharacterDevice@@Base+0x170>
   2063c:	cmp	r5, #0
   20640:	mvnne	r4, #0
   20644:	bne	205dc <openCharacterDevice@@Base+0xd0>
   20648:	mvn	r4, #0
   2064c:	b	205e4 <openCharacterDevice@@Base+0xd8>
   20650:	bl	fca4 <__errno_location@plt>
   20654:	ldr	r0, [r0]
   20658:	bl	f5c0 <strerror@plt>
   2065c:	ldr	r1, [pc, #404]	; 207f8 <openCharacterDevice@@Base+0x2ec>
   20660:	mov	r2, r4
   20664:	mov	r3, r5
   20668:	add	r1, pc, r1
   2066c:	str	r0, [sp]
   20670:	mov	r0, #7
   20674:	bl	1c634 <logMessage@@Base>
   20678:	b	205b8 <openCharacterDevice@@Base+0xac>
   2067c:	mov	r0, r5
   20680:	bl	f4f4 <free@plt>
   20684:	mov	r0, r8
   20688:	bl	1c948 <locatePathName@@Base>
   2068c:	bl	1ce58 <makeWritablePath@@Base>
   20690:	subs	r5, r0, #0
   20694:	beq	20648 <openCharacterDevice@@Base+0x13c>
   20698:	mov	r1, r7
   2069c:	bl	f56c <__open_2@plt>
   206a0:	cmn	r0, #1
   206a4:	mov	r4, r0
   206a8:	beq	206c8 <openCharacterDevice@@Base+0x1bc>
   206ac:	ldr	r1, [pc, #328]	; 207fc <openCharacterDevice@@Base+0x2f0>
   206b0:	mov	r0, #7
   206b4:	mov	r2, r5
   206b8:	mov	r3, r4
   206bc:	add	r1, pc, r1
   206c0:	bl	1c634 <logMessage@@Base>
   206c4:	b	20578 <openCharacterDevice@@Base+0x6c>
   206c8:	ldr	r0, [fp]
   206cc:	bl	f5c0 <strerror@plt>
   206d0:	ldr	r1, [sp, #12]
   206d4:	mov	r2, r5
   206d8:	mov	r3, r0
   206dc:	mov	r0, #7
   206e0:	bl	1c634 <logMessage@@Base>
   206e4:	ldr	r3, [fp]
   206e8:	cmp	r3, #2
   206ec:	bne	2063c <openCharacterDevice@@Base+0x130>
   206f0:	bic	lr, r9, #255	; 0xff
   206f4:	ubfx	r8, sl, #0, #12
   206f8:	bic	r3, sl, #4080	; 0xff0
   206fc:	uxtb	r4, r9
   20700:	lsr	r1, lr, #20
   20704:	lsl	r0, lr, #12
   20708:	add	lr, sp, #120	; 0x78
   2070c:	bic	r3, r3, #15
   20710:	mov	r2, #0
   20714:	orr	r4, r4, r8, lsl #8
   20718:	orr	r2, r2, r0
   2071c:	orr	r3, r3, r1
   20720:	orr	r2, r2, r4
   20724:	mov	r0, #1
   20728:	strd	r2, [lr, #-104]!	; 0xffffff98
   2072c:	mov	r1, r5
   20730:	mov	r2, #8576	; 0x2180
   20734:	mov	r3, lr
   20738:	bl	f5cc <__xmknod@plt>
   2073c:	cmn	r0, #1
   20740:	beq	2079c <openCharacterDevice@@Base+0x290>
   20744:	ldr	r1, [pc, #180]	; 20800 <openCharacterDevice@@Base+0x2f4>
   20748:	mov	r0, #7
   2074c:	mov	r2, r5
   20750:	mov	r3, #8576	; 0x2180
   20754:	add	r1, pc, r1
   20758:	str	sl, [sp]
   2075c:	str	r9, [sp, #4]
   20760:	bl	1c634 <logMessage@@Base>
   20764:	mov	r0, r5
   20768:	mov	r1, r7
   2076c:	bl	f56c <__open_2@plt>
   20770:	cmn	r0, #1
   20774:	mov	r4, r0
   20778:	beq	207c0 <openCharacterDevice@@Base+0x2b4>
   2077c:	ldr	r1, [pc, #128]	; 20804 <openCharacterDevice@@Base+0x2f8>
   20780:	mov	r0, #7
   20784:	mov	r2, r5
   20788:	mov	r3, r4
   2078c:	add	r1, pc, r1
   20790:	bl	1c634 <logMessage@@Base>
   20794:	b	20578 <openCharacterDevice@@Base+0x6c>
   20798:	bl	f950 <__stack_chk_fail@plt>
   2079c:	ldr	r0, [fp]
   207a0:	bl	f5c0 <strerror@plt>
   207a4:	ldr	r1, [pc, #92]	; 20808 <openCharacterDevice@@Base+0x2fc>
   207a8:	mov	r2, r5
   207ac:	add	r1, pc, r1
   207b0:	mov	r3, r0
   207b4:	mov	r0, #7
   207b8:	bl	1c634 <logMessage@@Base>
   207bc:	b	2063c <openCharacterDevice@@Base+0x130>
   207c0:	ldr	r0, [fp]
   207c4:	bl	f5c0 <strerror@plt>
   207c8:	ldr	r1, [sp, #12]
   207cc:	mov	r2, r5
   207d0:	mov	r3, r0
   207d4:	mov	r0, #7
   207d8:	bl	1c634 <logMessage@@Base>
   207dc:	b	2063c <openCharacterDevice@@Base+0x130>
   207e0:	andeq	r2, r5, ip, asr r5
   207e4:			; <UNDEFINED> instruction: 0x000003b4
   207e8:	andeq	lr, r2, ip, asr #30
   207ec:			; <UNDEFINED> instruction: 0x0002efb8
   207f0:	andeq	lr, r2, r0, asr #31
   207f4:	ldrdeq	lr, [r2], -r0
   207f8:	ldrdeq	lr, [r2], -ip
   207fc:	andeq	lr, r2, r0, lsl #28
   20800:	andeq	lr, r2, r0, asr #27
   20804:	andeq	lr, r2, r0, lsr sp
   20808:	andeq	lr, r2, r8, asr #26

0002080c <getUinputDevice@@Base>:
   2080c:	ldr	r3, [pc, #616]	; 20a7c <getUinputDevice@@Base+0x270>
   20810:	ldr	r1, [pc, #616]	; 20a80 <getUinputDevice@@Base+0x274>
   20814:	add	r3, pc, r3
   20818:	ldr	r2, [pc, #612]	; 20a84 <getUinputDevice@@Base+0x278>
   2081c:	push	{r4, r5, r6, r7, lr}
   20820:	add	r2, pc, r2
   20824:	ldr	r6, [r3, r1]
   20828:	sub	sp, sp, #1120	; 0x460
   2082c:	ldr	r0, [r2]
   20830:	sub	sp, sp, #4
   20834:	ldr	r3, [r6]
   20838:	cmn	r0, #1
   2083c:	str	r3, [sp, #1116]	; 0x45c
   20840:	beq	20860 <getUinputDevice@@Base+0x54>
   20844:	ldr	r2, [sp, #1116]	; 0x45c
   20848:	ldr	r3, [r6]
   2084c:	cmp	r2, r3
   20850:	bne	20a78 <getUinputDevice@@Base+0x26c>
   20854:	add	sp, sp, #1120	; 0x460
   20858:	add	sp, sp, #4
   2085c:	pop	{r4, r5, r6, r7, pc}
   20860:	ldr	r1, [pc, #544]	; 20a88 <getUinputDevice@@Base+0x27c>
   20864:	ldr	r0, [pc, #544]	; 20a8c <getUinputDevice@@Base+0x280>
   20868:	add	r1, pc, r1
   2086c:	add	r0, pc, r0
   20870:	ldr	r4, [r1, #8]!
   20874:	bl	204b0 <installKernelModule@@Base>
   20878:	cmp	r0, #0
   2087c:	beq	20890 <getUinputDevice@@Base+0x84>
   20880:	cmp	r4, #0
   20884:	bne	20890 <getUinputDevice@@Base+0x84>
   20888:	mov	r0, #500	; 0x1f4
   2088c:	bl	1ec24 <approximateDelay@@Base>
   20890:	ldr	r0, [pc, #504]	; 20a90 <getUinputDevice@@Base+0x284>
   20894:	ldr	r1, [pc, #504]	; 20a94 <getUinputDevice@@Base+0x288>
   20898:	add	r0, pc, r0
   2089c:	add	r1, pc, r1
   208a0:	bl	1d9b0 <resolveDeviceName@@Base>
   208a4:	subs	r4, r0, #0
   208a8:	beq	20a3c <getUinputDevice@@Base+0x230>
   208ac:	mov	r1, #1
   208b0:	mov	r2, #10
   208b4:	mov	r3, #223	; 0xdf
   208b8:	bl	2050c <openCharacterDevice@@Base>
   208bc:	cmn	r0, #1
   208c0:	mov	r5, r0
   208c4:	beq	20a20 <getUinputDevice@@Base+0x214>
   208c8:	ldr	r1, [pc, #456]	; 20a98 <getUinputDevice@@Base+0x28c>
   208cc:	mov	r3, r5
   208d0:	mov	r2, r4
   208d4:	mov	r0, #7
   208d8:	add	r1, pc, r1
   208dc:	bl	1c634 <logMessage@@Base>
   208e0:	mov	r1, #0
   208e4:	movw	r2, #1116	; 0x45c
   208e8:	mov	r0, sp
   208ec:	bl	f6b0 <memset@plt>
   208f0:	ldr	r3, [pc, #420]	; 20a9c <getUinputDevice@@Base+0x290>
   208f4:	movw	r2, #1116	; 0x45c
   208f8:	add	r3, pc, r3
   208fc:	ldm	r3, {r0, r1}
   20900:	lsr	r3, r1, #16
   20904:	strb	r3, [sp, #6]
   20908:	str	r0, [sp]
   2090c:	mov	r0, r5
   20910:	strh	r1, [sp, #4]
   20914:	mov	r1, sp
   20918:	bl	fbcc <write@plt>
   2091c:	cmn	r0, #1
   20920:	beq	20a48 <getUinputDevice@@Base+0x23c>
   20924:	movw	r1, #21860	; 0x5564
   20928:	mov	r0, r5
   2092c:	movt	r1, #16388	; 0x4004
   20930:	mov	r2, #1
   20934:	bl	f83c <ioctl@plt>
   20938:	ldr	r7, [pc, #352]	; 20aa0 <getUinputDevice@@Base+0x294>
   2093c:	mov	r4, #0
   20940:	add	r7, pc, r7
   20944:	cmn	r0, #1
   20948:	bne	2095c <getUinputDevice@@Base+0x150>
   2094c:	b	20a58 <getUinputDevice@@Base+0x24c>
   20950:	add	r4, r4, #1
   20954:	cmp	r4, #768	; 0x300
   20958:	beq	2099c <getUinputDevice@@Base+0x190>
   2095c:	movw	r1, #21861	; 0x5565
   20960:	mov	r0, r5
   20964:	movt	r1, #16388	; 0x4004
   20968:	mov	r2, r4
   2096c:	bl	f83c <ioctl@plt>
   20970:	cmn	r0, #1
   20974:	bne	20950 <getUinputDevice@@Base+0x144>
   20978:	bl	fca4 <__errno_location@plt>
   2097c:	ldr	r0, [r0]
   20980:	bl	f5c0 <strerror@plt>
   20984:	mov	r1, r7
   20988:	mov	r2, r4
   2098c:	mov	r3, r0
   20990:	mov	r0, #4
   20994:	bl	1c634 <logMessage@@Base>
   20998:	b	20950 <getUinputDevice@@Base+0x144>
   2099c:	movw	r1, #21860	; 0x5564
   209a0:	mov	r0, r5
   209a4:	movt	r1, #16388	; 0x4004
   209a8:	mov	r2, #20
   209ac:	bl	f83c <ioctl@plt>
   209b0:	cmn	r0, #1
   209b4:	beq	20a68 <getUinputDevice@@Base+0x25c>
   209b8:	mov	r0, r5
   209bc:	movw	r1, #21761	; 0x5501
   209c0:	bl	f83c <ioctl@plt>
   209c4:	cmn	r0, #1
   209c8:	beq	209e0 <getUinputDevice@@Base+0x1d4>
   209cc:	ldr	r3, [pc, #208]	; 20aa4 <getUinputDevice@@Base+0x298>
   209d0:	mov	r0, r5
   209d4:	add	r3, pc, r3
   209d8:	str	r5, [r3]
   209dc:	b	20844 <getUinputDevice@@Base+0x38>
   209e0:	ldr	r0, [pc, #192]	; 20aa8 <getUinputDevice@@Base+0x29c>
   209e4:	add	r0, pc, r0
   209e8:	bl	1c6fc <logSystemError@@Base>
   209ec:	ldr	r4, [pc, #184]	; 20aac <getUinputDevice@@Base+0x2a0>
   209f0:	mov	r0, r5
   209f4:	add	r4, pc, r4
   209f8:	ldr	r3, [r4]
   209fc:	cmp	r5, r3
   20a00:	beq	20844 <getUinputDevice@@Base+0x38>
   20a04:	bl	f764 <close@plt>
   20a08:	ldr	r1, [pc, #160]	; 20ab0 <getUinputDevice@@Base+0x2a4>
   20a0c:	mov	r0, #7
   20a10:	add	r1, pc, r1
   20a14:	bl	1c634 <logMessage@@Base>
   20a18:	ldr	r0, [r4]
   20a1c:	b	20844 <getUinputDevice@@Base+0x38>
   20a20:	ldr	r1, [pc, #140]	; 20ab4 <getUinputDevice@@Base+0x2a8>
   20a24:	mov	r0, #7
   20a28:	add	r1, pc, r1
   20a2c:	bl	1c634 <logMessage@@Base>
   20a30:	ldr	r3, [pc, #128]	; 20ab8 <getUinputDevice@@Base+0x2ac>
   20a34:	ldr	r0, [pc, r3]
   20a38:	b	20844 <getUinputDevice@@Base+0x38>
   20a3c:	ldr	r3, [pc, #120]	; 20abc <getUinputDevice@@Base+0x2b0>
   20a40:	ldr	r0, [pc, r3]
   20a44:	b	20844 <getUinputDevice@@Base+0x38>
   20a48:	ldr	r0, [pc, #112]	; 20ac0 <getUinputDevice@@Base+0x2b4>
   20a4c:	add	r0, pc, r0
   20a50:	bl	1c6fc <logSystemError@@Base>
   20a54:	b	209ec <getUinputDevice@@Base+0x1e0>
   20a58:	ldr	r0, [pc, #100]	; 20ac4 <getUinputDevice@@Base+0x2b8>
   20a5c:	add	r0, pc, r0
   20a60:	bl	1c6fc <logSystemError@@Base>
   20a64:	b	209ec <getUinputDevice@@Base+0x1e0>
   20a68:	ldr	r0, [pc, #88]	; 20ac8 <getUinputDevice@@Base+0x2bc>
   20a6c:	add	r0, pc, r0
   20a70:	bl	1c6fc <logSystemError@@Base>
   20a74:	b	209ec <getUinputDevice@@Base+0x1e0>
   20a78:	bl	f950 <__stack_chk_fail@plt>
   20a7c:	andeq	r2, r5, r4, ror #4
   20a80:			; <UNDEFINED> instruction: 0x000003b4
   20a84:	andeq	r2, r5, r4, asr r8
   20a88:			; <UNDEFINED> instruction: 0x00052dbc
   20a8c:	andeq	lr, r2, r0, lsl lr
   20a90:	andeq	lr, r4, ip, lsl #27
   20a94:	andeq	lr, r2, r0, ror #27
   20a98:	ldrdeq	lr, [r2], -r0
   20a9c:	andeq	lr, r2, r8, lsr #2
   20aa0:	muleq	r2, ip, ip
   20aa4:	andeq	r2, r5, r0, lsr #13
   20aa8:	andeq	lr, r2, r4, asr #24
   20aac:	andeq	r2, r5, r0, lsl #13
   20ab0:	andeq	lr, r2, r0, asr ip
   20ab4:	andeq	lr, r2, r8, asr #24
   20ab8:	andeq	r2, r5, r0, asr #12
   20abc:	andeq	r2, r5, r4, lsr r6
   20ac0:	strdeq	lr, [r2], -r4
   20ac4:	andeq	lr, r2, r4, ror #22
   20ac8:	andeq	lr, r2, r0, lsr #23

00020acc <hasInputEvent@@Base>:
   20acc:	push	{r4, r5, r6, fp, lr}
   20ad0:	lsr	r3, r3, #5
   20ad4:	ldr	lr, [pc, #132]	; 20b60 <hasInputEvent@@Base+0x94>
   20ad8:	add	fp, sp, #16
   20adc:	ldr	r4, [pc, #128]	; 20b64 <hasInputEvent@@Base+0x98>
   20ae0:	sub	sp, sp, #12
   20ae4:	add	lr, pc, lr
   20ae8:	add	r3, r3, #1
   20aec:	add	r1, r1, #32
   20af0:	ldr	r4, [lr, r4]
   20af4:	orr	r1, r1, #-2147483648	; 0x80000000
   20af8:	lsl	r5, r3, #2
   20afc:	movw	ip, #32760	; 0x7ff8
   20b00:	add	r5, r5, #10
   20b04:	orr	r1, r1, #17664	; 0x4500
   20b08:	and	ip, r5, ip
   20b0c:	orr	r1, r1, r3, lsl #18
   20b10:	sub	sp, sp, ip
   20b14:	ldr	r3, [r4]
   20b18:	mov	r6, r2
   20b1c:	mov	r2, sp
   20b20:	str	r3, [fp, #-24]	; 0xffffffe8
   20b24:	bl	f83c <ioctl@plt>
   20b28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20b2c:	cmn	r0, #1
   20b30:	lsrne	r3, r6, #5
   20b34:	andne	r6, r6, #31
   20b38:	moveq	r0, #0
   20b3c:	ldrne	r0, [sp, r3, lsl #2]
   20b40:	ldr	r3, [r4]
   20b44:	lsrne	r0, r0, r6
   20b48:	andne	r0, r0, #1
   20b4c:	cmp	r2, r3
   20b50:	bne	20b5c <hasInputEvent@@Base+0x90>
   20b54:	sub	sp, fp, #16
   20b58:	pop	{r4, r5, r6, fp, pc}
   20b5c:	bl	f950 <__stack_chk_fail@plt>
   20b60:	muleq	r5, r4, pc	; <UNPREDICTABLE>
   20b64:			; <UNDEFINED> instruction: 0x000003b4

00020b68 <writeInputEvent@@Base>:
   20b68:	ldr	r3, [pc, #180]	; 20c24 <writeInputEvent@@Base+0xbc>
   20b6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20b70:	mov	r9, r0
   20b74:	ldr	r0, [pc, #172]	; 20c28 <writeInputEvent@@Base+0xc0>
   20b78:	add	r3, pc, r3
   20b7c:	sub	sp, sp, #24
   20b80:	mov	r8, r1
   20b84:	mov	r7, r2
   20b88:	ldr	r5, [r3, r0]
   20b8c:	ldr	r3, [r5]
   20b90:	str	r3, [sp, #20]
   20b94:	bl	2080c <getUinputDevice@@Base>
   20b98:	cmn	r0, #1
   20b9c:	mov	r6, r0
   20ba0:	moveq	r0, #0
   20ba4:	beq	20bf4 <writeInputEvent@@Base+0x8c>
   20ba8:	add	sl, sp, #4
   20bac:	mov	r4, #0
   20bb0:	mov	r1, r4
   20bb4:	str	r4, [sp, #4]
   20bb8:	mov	r0, sl
   20bbc:	str	r4, [sp, #8]
   20bc0:	str	r4, [sp, #12]
   20bc4:	str	r4, [sp, #16]
   20bc8:	bl	f494 <gettimeofday@plt>
   20bcc:	mov	r1, sl
   20bd0:	mov	r0, r6
   20bd4:	mov	r2, #16
   20bd8:	strh	r9, [sp, #12]
   20bdc:	strh	r8, [sp, #14]
   20be0:	str	r7, [sp, #16]
   20be4:	bl	fbcc <write@plt>
   20be8:	cmn	r0, #1
   20bec:	movne	r0, #1
   20bf0:	beq	20c0c <writeInputEvent@@Base+0xa4>
   20bf4:	ldr	r2, [sp, #20]
   20bf8:	ldr	r3, [r5]
   20bfc:	cmp	r2, r3
   20c00:	bne	20c20 <writeInputEvent@@Base+0xb8>
   20c04:	add	sp, sp, #24
   20c08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20c0c:	ldr	r0, [pc, #24]	; 20c2c <writeInputEvent@@Base+0xc4>
   20c10:	add	r0, pc, r0
   20c14:	bl	1c6fc <logSystemError@@Base>
   20c18:	mov	r0, r4
   20c1c:	b	20bf4 <writeInputEvent@@Base+0x8c>
   20c20:	bl	f950 <__stack_chk_fail@plt>
   20c24:	andeq	r1, r5, r0, lsl #30
   20c28:			; <UNDEFINED> instruction: 0x000003b4
   20c2c:	andeq	lr, r2, r4, ror sl

00020c30 <writeKeyEvent@@Base>:
   20c30:	push	{r3, r4, r5, lr}
   20c34:	mov	r2, r1
   20c38:	mov	r4, r0
   20c3c:	mov	r5, r1
   20c40:	uxth	r1, r0
   20c44:	mov	r0, #1
   20c48:	bl	20b68 <writeInputEvent@@Base>
   20c4c:	cmp	r0, #0
   20c50:	popeq	{r3, r4, r5, pc}
   20c54:	cmp	r5, #0
   20c58:	bne	20c94 <writeKeyEvent@@Base+0x64>
   20c5c:	ldr	r2, [pc, #84]	; 20cb8 <writeKeyEvent@@Base+0x88>
   20c60:	and	r3, r4, #7
   20c64:	mov	r1, #1
   20c68:	add	r2, pc, r2
   20c6c:	add	r4, r2, r4, lsr #3
   20c70:	ldrb	r2, [r4, #12]
   20c74:	bic	r3, r2, r1, lsl r3
   20c78:	strb	r3, [r4, #12]
   20c7c:	mov	r0, #0
   20c80:	mov	r1, r0
   20c84:	mov	r2, r0
   20c88:	bl	20b68 <writeInputEvent@@Base>
   20c8c:	mov	r0, #1
   20c90:	pop	{r3, r4, r5, pc}
   20c94:	ldr	r2, [pc, #32]	; 20cbc <writeKeyEvent@@Base+0x8c>
   20c98:	and	r3, r4, #7
   20c9c:	mov	r1, #1
   20ca0:	add	r2, pc, r2
   20ca4:	add	r4, r2, r4, lsr #3
   20ca8:	ldrb	r2, [r4, #12]
   20cac:	orr	r3, r2, r1, lsl r3
   20cb0:	strb	r3, [r4, #12]
   20cb4:	b	20c7c <writeKeyEvent@@Base+0x4c>
   20cb8:			; <UNDEFINED> instruction: 0x000529bc
   20cbc:	andeq	r2, r5, r4, lsl #19

00020cc0 <releaseAllKeys@@Base>:
   20cc0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   20cc4:	mov	r6, #1
   20cc8:	ldr	r9, [pc, #88]	; 20d28 <releaseAllKeys@@Base+0x68>
   20ccc:	mov	r7, #0
   20cd0:	mov	r8, #0
   20cd4:	add	r9, pc, r9
   20cd8:	b	20ce8 <releaseAllKeys@@Base+0x28>
   20cdc:	add	r8, r8, #1
   20ce0:	cmp	r8, #768	; 0x300
   20ce4:	beq	20d24 <releaseAllKeys@@Base+0x64>
   20ce8:	add	r3, r9, r8, lsr #3
   20cec:	and	r1, r8, #7
   20cf0:	mov	r5, #0
   20cf4:	ldrb	r2, [r3, #12]
   20cf8:	and	r3, r5, r7
   20cfc:	lsr	r4, r2, r1
   20d00:	and	r2, r4, r6
   20d04:	orrs	r1, r2, r3
   20d08:	beq	20cdc <releaseAllKeys@@Base+0x1c>
   20d0c:	mov	r0, r8
   20d10:	mov	r1, r5
   20d14:	bl	20c30 <writeKeyEvent@@Base>
   20d18:	cmp	r0, #0
   20d1c:	bne	20cdc <releaseAllKeys@@Base+0x1c>
   20d20:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   20d24:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   20d28:	andeq	r2, r5, r0, asr r9
   20d2c:	ldr	r3, [pc, #40]	; 20d5c <releaseAllKeys@@Base+0x9c>
   20d30:	ldr	r2, [pc, #40]	; 20d60 <releaseAllKeys@@Base+0xa0>
   20d34:	add	r3, pc, r3
   20d38:	push	{r4, lr}
   20d3c:	ldr	r4, [r3, r2]
   20d40:	ldr	r0, [r4]
   20d44:	cmp	r0, #0
   20d48:	popeq	{r4, pc}
   20d4c:	bl	2f0c0 <destroyContractionTable@@Base>
   20d50:	mov	r3, #0
   20d54:	str	r3, [r4]
   20d58:	pop	{r4, pc}
   20d5c:	andeq	r1, r5, r4, asr #26
   20d60:	ldrdeq	r0, [r0], -r4
   20d64:	push	{r3, r4, r5, lr}
   20d68:	mov	r2, #0
   20d6c:	ldr	r3, [pc, #80]	; 20dc4 <releaseAllKeys@@Base+0x104>
   20d70:	ldr	r0, [pc, #80]	; 20dc8 <releaseAllKeys@@Base+0x108>
   20d74:	ldr	r1, [pc, #80]	; 20dcc <releaseAllKeys@@Base+0x10c>
   20d78:	add	r3, pc, r3
   20d7c:	ldr	r5, [r3, r0]
   20d80:	ldr	r4, [r3, r1]
   20d84:	mov	r0, r5
   20d88:	ldrb	r1, [r4, #41]	; 0x29
   20d8c:	bl	46868 <setSpeechVolume@@Base>
   20d90:	ldrb	r1, [r4, #40]	; 0x28
   20d94:	mov	r0, r5
   20d98:	mov	r2, #0
   20d9c:	bl	46934 <setSpeechRate@@Base>
   20da0:	ldrb	r1, [r4, #44]	; 0x2c
   20da4:	mov	r0, r5
   20da8:	mov	r2, #0
   20dac:	bl	46a04 <setSpeechPitch@@Base>
   20db0:	mov	r0, r5
   20db4:	ldrb	r1, [r4, #43]	; 0x2b
   20db8:	mov	r2, #0
   20dbc:	pop	{r3, r4, r5, lr}
   20dc0:	b	46ad0 <setSpeechPunctuation@@Base>
   20dc4:	andeq	r1, r5, r0, lsl #26
   20dc8:	andeq	r0, r0, r4, ror #9
   20dcc:	andeq	r0, r0, r0, asr #10
   20dd0:	b	394c8 <addHelpLine@@Base>
   20dd4:	ldr	r3, [pc, #108]	; 20e48 <releaseAllKeys@@Base+0x188>
   20dd8:	push	{r4, r5, fp, lr}
   20ddc:	add	fp, sp, #12
   20de0:	ldr	r2, [pc, #100]	; 20e4c <releaseAllKeys@@Base+0x18c>
   20de4:	sub	sp, sp, #16
   20de8:	add	r3, pc, r3
   20dec:	ldr	r4, [r3, r2]
   20df0:	str	r0, [fp, #-24]	; 0xffffffe8
   20df4:	ldr	r3, [r4]
   20df8:	str	r3, [fp, #-16]
   20dfc:	bl	fb54 <strlen@plt>
   20e00:	sub	r1, fp, #20
   20e04:	add	r2, r0, #1
   20e08:	sub	r0, fp, #24
   20e0c:	lsl	r3, r2, #2
   20e10:	add	r3, r3, #10
   20e14:	bic	r3, r3, #7
   20e18:	sub	sp, sp, r3
   20e1c:	str	sp, [fp, #-20]	; 0xffffffec
   20e20:	bl	281a0 <convertUtf8ToWchars@@Base>
   20e24:	mov	r0, sp
   20e28:	bl	394c8 <addHelpLine@@Base>
   20e2c:	ldr	r2, [fp, #-16]
   20e30:	ldr	r3, [r4]
   20e34:	cmp	r2, r3
   20e38:	bne	20e44 <releaseAllKeys@@Base+0x184>
   20e3c:	sub	sp, fp, #12
   20e40:	pop	{r4, r5, fp, pc}
   20e44:	bl	f950 <__stack_chk_fail@plt>
   20e48:	muleq	r5, r0, ip
   20e4c:			; <UNDEFINED> instruction: 0x000003b4
   20e50:	ldr	r3, [pc, #428]	; 21004 <releaseAllKeys@@Base+0x344>
   20e54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20e58:	mov	r6, r0
   20e5c:	ldr	r0, [pc, #420]	; 21008 <releaseAllKeys@@Base+0x348>
   20e60:	add	r3, pc, r3
   20e64:	ldr	r2, [r6, #4]
   20e68:	sub	sp, sp, #16
   20e6c:	mov	r8, r1
   20e70:	ldr	sl, [r3, r0]
   20e74:	ldr	r0, [r2]
   20e78:	ldr	r3, [sl]
   20e7c:	cmp	r0, #0
   20e80:	str	r3, [sp, #12]
   20e84:	beq	20e94 <releaseAllKeys@@Base+0x1d4>
   20e88:	ldr	r4, [r2, #4]
   20e8c:	cmp	r4, #0
   20e90:	beq	20f6c <releaseAllKeys@@Base+0x2ac>
   20e94:	ldr	r3, [r6, #12]
   20e98:	blx	r3
   20e9c:	mov	r3, #0
   20ea0:	mov	r8, r3
   20ea4:	stmib	sp, {r0, r3}
   20ea8:	ldr	r4, [r6, #4]
   20eac:	mov	r7, #0
   20eb0:	ldr	r5, [r4]
   20eb4:	cmp	r5, #0
   20eb8:	beq	20f54 <releaseAllKeys@@Base+0x294>
   20ebc:	ldr	r9, [pc, #328]	; 2100c <releaseAllKeys@@Base+0x34c>
   20ec0:	add	r4, r4, #4
   20ec4:	add	r9, pc, r9
   20ec8:	cmp	r7, #0
   20ecc:	beq	20ee4 <releaseAllKeys@@Base+0x224>
   20ed0:	mov	r0, r5
   20ed4:	ldr	r3, [r6, #16]
   20ed8:	blx	r3
   20edc:	cmp	r0, #0
   20ee0:	beq	20f10 <releaseAllKeys@@Base+0x250>
   20ee4:	mov	r0, #7
   20ee8:	mov	r1, r9
   20eec:	ldr	r2, [r6]
   20ef0:	ldr	r3, [r4, #-4]
   20ef4:	bl	1c634 <logMessage@@Base>
   20ef8:	ldr	r3, [r6, #20]
   20efc:	ldr	r0, [r4, #-4]
   20f00:	mov	r1, r8
   20f04:	blx	r3
   20f08:	cmp	r0, #0
   20f0c:	bne	20f4c <releaseAllKeys@@Base+0x28c>
   20f10:	ldr	r5, [r4], #4
   20f14:	cmp	r5, #0
   20f18:	bne	20ec8 <releaseAllKeys@@Base+0x208>
   20f1c:	ldr	r1, [pc, #236]	; 21010 <releaseAllKeys@@Base+0x350>
   20f20:	mov	r0, #7
   20f24:	ldr	r2, [r6]
   20f28:	add	r1, pc, r1
   20f2c:	bl	1c634 <logMessage@@Base>
   20f30:	mov	r0, r5
   20f34:	ldr	r2, [sp, #12]
   20f38:	ldr	r3, [sl]
   20f3c:	cmp	r2, r3
   20f40:	bne	21000 <releaseAllKeys@@Base+0x340>
   20f44:	add	sp, sp, #16
   20f48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20f4c:	mov	r0, #1
   20f50:	b	20f34 <releaseAllKeys@@Base+0x274>
   20f54:	mov	r7, r5
   20f58:	ldr	r4, [pc, #180]	; 21014 <releaseAllKeys@@Base+0x354>
   20f5c:	ldr	r5, [pc, #180]	; 21018 <releaseAllKeys@@Base+0x358>
   20f60:	add	r4, pc, r4
   20f64:	add	r5, pc, r5
   20f68:	b	20ebc <releaseAllKeys@@Base+0x1fc>
   20f6c:	ldr	r1, [pc, #168]	; 2101c <releaseAllKeys@@Base+0x35c>
   20f70:	add	r1, pc, r1
   20f74:	bl	fc5c <strcmp@plt>
   20f78:	ldr	r3, [r6, #12]
   20f7c:	subs	r7, r0, #0
   20f80:	beq	20f90 <releaseAllKeys@@Base+0x2d0>
   20f84:	blx	r3
   20f88:	stmib	sp, {r0, r4}
   20f8c:	b	20ea8 <releaseAllKeys@@Base+0x1e8>
   20f90:	blx	r3
   20f94:	cmp	r0, #0
   20f98:	mov	r5, r0
   20f9c:	addne	r4, sp, #4
   20fa0:	stmib	sp, {r5, r7}
   20fa4:	movne	r8, r7
   20fa8:	movne	r7, #1
   20fac:	bne	20ebc <releaseAllKeys@@Base+0x1fc>
   20fb0:	ldr	r4, [r6, #8]
   20fb4:	mov	r0, #7
   20fb8:	ldr	r8, [r4]
   20fbc:	cmp	r8, #0
   20fc0:	beq	20fe4 <releaseAllKeys@@Base+0x324>
   20fc4:	ldr	r1, [pc, #84]	; 21020 <releaseAllKeys@@Base+0x360>
   20fc8:	mov	r8, r5
   20fcc:	ldr	r2, [r6]
   20fd0:	mov	r7, #1
   20fd4:	add	r1, pc, r1
   20fd8:	bl	1c634 <logMessage@@Base>
   20fdc:	ldr	r5, [r4]
   20fe0:	b	20eb4 <releaseAllKeys@@Base+0x1f4>
   20fe4:	ldr	r1, [pc, #56]	; 21024 <releaseAllKeys@@Base+0x364>
   20fe8:	mov	r7, #1
   20fec:	ldr	r2, [r6]
   20ff0:	add	r1, pc, r1
   20ff4:	bl	1c634 <logMessage@@Base>
   20ff8:	ldr	r5, [r4]
   20ffc:	b	20eb4 <releaseAllKeys@@Base+0x1f4>
   21000:	bl	f950 <__stack_chk_fail@plt>
   21004:	andeq	r1, r5, r8, lsl ip
   21008:			; <UNDEFINED> instruction: 0x000003b4
   2100c:	andeq	lr, r2, r0, ror #16
   21010:	andeq	lr, r2, r8, lsl r8
   21014:	ldrdeq	lr, [r4], -r0
   21018:	andeq	lr, r2, r0, lsr #2
   2101c:	andeq	lr, r2, r4, ror #15
   21020:	andeq	lr, r2, ip, lsl #14
   21024:	andeq	lr, r2, r4, lsl r7
   21028:	ldr	r2, [pc, #384]	; 211b0 <releaseAllKeys@@Base+0x4f0>
   2102c:	ldr	r3, [pc, #384]	; 211b4 <releaseAllKeys@@Base+0x4f4>
   21030:	add	r2, pc, r2
   21034:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21038:	sub	sp, sp, #52	; 0x34
   2103c:	ldr	r5, [pc, #372]	; 211b8 <releaseAllKeys@@Base+0x4f8>
   21040:	mov	r7, r0
   21044:	ldr	r3, [r2, r3]
   21048:	add	r5, pc, r5
   2104c:	str	r3, [sp, #8]
   21050:	ldr	r6, [r5, #4]
   21054:	ldr	r0, [sp, #8]
   21058:	ldr	r3, [r6]
   2105c:	ldr	r1, [r0]
   21060:	cmp	r3, #0
   21064:	str	r1, [sp, #44]	; 0x2c
   21068:	beq	21174 <releaseAllKeys@@Base+0x4b4>
   2106c:	ldr	r0, [pc, #328]	; 211bc <releaseAllKeys@@Base+0x4fc>
   21070:	add	r4, sp, #20
   21074:	ldr	ip, [pc, #324]	; 211c0 <releaseAllKeys@@Base+0x500>
   21078:	ldr	r1, [r6, #4]
   2107c:	ldr	sl, [r2, r0]
   21080:	ldr	fp, [r2, ip]
   21084:	cmp	r1, #0
   21088:	ldr	r9, [pc, #308]	; 211c4 <releaseAllKeys@@Base+0x504>
   2108c:	ldr	r1, [pc, #308]	; 211c8 <releaseAllKeys@@Base+0x508>
   21090:	movne	r7, #0
   21094:	ldr	r2, [pc, #304]	; 211cc <releaseAllKeys@@Base+0x50c>
   21098:	add	r9, pc, r9
   2109c:	ldr	r0, [pc, #300]	; 211d0 <releaseAllKeys@@Base+0x510>
   210a0:	add	r1, pc, r1
   210a4:	ldr	r8, [pc, #296]	; 211d4 <releaseAllKeys@@Base+0x514>
   210a8:	add	r2, pc, r2
   210ac:	add	r0, pc, r0
   210b0:	str	r1, [sp]
   210b4:	str	r2, [sp, #4]
   210b8:	add	r8, pc, r8
   210bc:	str	r0, [sp, #12]
   210c0:	b	21118 <releaseAllKeys@@Base+0x458>
   210c4:	ldr	r3, [sp]
   210c8:	add	r1, r3, #8
   210cc:	ldr	r2, [pc, #260]	; 211d8 <releaseAllKeys@@Base+0x518>
   210d0:	mov	r0, r4
   210d4:	ldr	r3, [pc, #256]	; 211dc <releaseAllKeys@@Base+0x51c>
   210d8:	add	r2, pc, r2
   210dc:	str	r1, [sp, #28]
   210e0:	mov	r1, r7
   210e4:	add	r3, pc, r3
   210e8:	ldr	r2, [r2, #12]
   210ec:	str	r8, [sp, #20]
   210f0:	str	fp, [sp, #32]
   210f4:	str	sl, [sp, #36]	; 0x24
   210f8:	str	r2, [sp, #24]
   210fc:	str	r3, [sp, #40]	; 0x28
   21100:	bl	20e50 <releaseAllKeys@@Base+0x190>
   21104:	cmp	r0, #0
   21108:	bne	211a4 <releaseAllKeys@@Base+0x4e4>
   2110c:	ldr	r3, [r6, #4]!
   21110:	cmp	r3, #0
   21114:	beq	21174 <releaseAllKeys@@Base+0x4b4>
   21118:	mov	r2, r3
   2111c:	mov	r0, #7
   21120:	mov	r1, r9
   21124:	str	r3, [r5, #8]
   21128:	bl	1c634 <logMessage@@Base>
   2112c:	ldr	r3, [r5, #8]
   21130:	mov	r0, r4
   21134:	str	r3, [sp, #20]
   21138:	bl	409e4 <isSerialDevice@@Base>
   2113c:	cmp	r0, #0
   21140:	bne	210c4 <releaseAllKeys@@Base+0x404>
   21144:	mov	r0, r4
   21148:	bl	42a6c <isUsbDevice@@Base>
   2114c:	cmp	r0, #0
   21150:	ldrne	r3, [sp, #4]
   21154:	addne	r1, r3, #48	; 0x30
   21158:	bne	210cc <releaseAllKeys@@Base+0x40c>
   2115c:	mov	r0, r4
   21160:	bl	462c0 <isBluetoothDevice@@Base>
   21164:	ldr	r1, [sp, #12]
   21168:	cmp	r0, #0
   2116c:	moveq	r1, r5
   21170:	b	210cc <releaseAllKeys@@Base+0x40c>
   21174:	ldr	r2, [pc, #100]	; 211e0 <releaseAllKeys@@Base+0x520>
   21178:	mov	r3, #0
   2117c:	mov	r0, r3
   21180:	add	r2, pc, r2
   21184:	str	r3, [r2, #8]
   21188:	ldr	r1, [sp, #8]
   2118c:	ldr	r2, [sp, #44]	; 0x2c
   21190:	ldr	r3, [r1]
   21194:	cmp	r2, r3
   21198:	bne	211ac <releaseAllKeys@@Base+0x4ec>
   2119c:	add	sp, sp, #52	; 0x34
   211a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   211a4:	mov	r0, #1
   211a8:	b	21188 <releaseAllKeys@@Base+0x4c8>
   211ac:	bl	f950 <__stack_chk_fail@plt>
   211b0:	andeq	r1, r5, r8, asr #20
   211b4:			; <UNDEFINED> instruction: 0x000003b4
   211b8:	andeq	r2, r5, r8, asr #12
   211bc:	andeq	r0, r0, r4, lsl r4
   211c0:	andeq	r0, r0, r4, lsr #8
   211c4:	andeq	lr, r2, r4, asr #13
   211c8:	muleq	r4, r0, r5
   211cc:	andeq	lr, r4, r8, lsl #11
   211d0:	andeq	r1, r5, r8, ror #31
   211d4:	andeq	lr, r2, r0, asr #13
   211d8:			; <UNDEFINED> instruction: 0x000525b8
   211dc:	andeq	r1, r0, r8, lsr #4
   211e0:	andeq	r2, r5, r0, lsl r5
   211e4:	ldr	r3, [pc, #140]	; 21278 <releaseAllKeys@@Base+0x5b8>
   211e8:	mov	r1, r0
   211ec:	ldr	ip, [pc, #136]	; 2127c <releaseAllKeys@@Base+0x5bc>
   211f0:	add	r3, pc, r3
   211f4:	ldr	r2, [pc, #132]	; 21280 <releaseAllKeys@@Base+0x5c0>
   211f8:	push	{r4, r5, r6, lr}
   211fc:	add	r2, pc, r2
   21200:	ldr	r4, [r3, ip]
   21204:	sub	sp, sp, #32
   21208:	ldr	r6, [r2, #16]
   2120c:	add	r0, sp, #4
   21210:	ldr	r2, [pc, #108]	; 21284 <releaseAllKeys@@Base+0x5c4>
   21214:	ldr	r5, [r4]
   21218:	ldr	lr, [pc, #104]	; 21288 <releaseAllKeys@@Base+0x5c8>
   2121c:	ldr	ip, [pc, #104]	; 2128c <releaseAllKeys@@Base+0x5cc>
   21220:	str	r6, [sp, #8]
   21224:	add	lr, pc, lr
   21228:	str	r5, [sp, #28]
   2122c:	add	ip, pc, ip
   21230:	str	lr, [sp, #4]
   21234:	str	ip, [sp, #12]
   21238:	ldr	ip, [pc, #80]	; 21290 <releaseAllKeys@@Base+0x5d0>
   2123c:	ldr	lr, [r3, r2]
   21240:	ldr	r2, [pc, #76]	; 21294 <releaseAllKeys@@Base+0x5d4>
   21244:	str	lr, [sp, #16]
   21248:	add	r2, pc, r2
   2124c:	ldr	r3, [r3, ip]
   21250:	str	r2, [sp, #24]
   21254:	str	r3, [sp, #20]
   21258:	bl	20e50 <releaseAllKeys@@Base+0x190>
   2125c:	ldr	r2, [sp, #28]
   21260:	ldr	r3, [r4]
   21264:	cmp	r2, r3
   21268:	bne	21274 <releaseAllKeys@@Base+0x5b4>
   2126c:	add	sp, sp, #32
   21270:	pop	{r4, r5, r6, pc}
   21274:	bl	f950 <__stack_chk_fail@plt>
   21278:	andeq	r1, r5, r8, lsl #17
   2127c:			; <UNDEFINED> instruction: 0x000003b4
   21280:	muleq	r5, r4, r4
   21284:	andeq	r0, r0, ip, lsl #8
   21288:	andeq	lr, r2, ip, asr r5
   2128c:	andeq	lr, r2, r4, lsl #9
   21290:	andeq	r0, r0, r8, asr #7
   21294:	muleq	r0, r8, r8
   21298:	ldr	r3, [pc, #144]	; 21330 <releaseAllKeys@@Base+0x670>
   2129c:	mov	r1, r0
   212a0:	ldr	ip, [pc, #140]	; 21334 <releaseAllKeys@@Base+0x674>
   212a4:	add	r3, pc, r3
   212a8:	ldr	r2, [pc, #136]	; 21338 <releaseAllKeys@@Base+0x678>
   212ac:	push	{r4, r5, r6, lr}
   212b0:	add	r2, pc, r2
   212b4:	ldr	r4, [r3, ip]
   212b8:	sub	sp, sp, #32
   212bc:	ldr	r6, [r2, #20]
   212c0:	add	r0, sp, #4
   212c4:	ldr	r2, [pc, #112]	; 2133c <releaseAllKeys@@Base+0x67c>
   212c8:	ldr	r5, [r4]
   212cc:	ldr	ip, [pc, #108]	; 21340 <releaseAllKeys@@Base+0x680>
   212d0:	ldr	lr, [pc, #108]	; 21344 <releaseAllKeys@@Base+0x684>
   212d4:	add	ip, pc, ip
   212d8:	str	r6, [sp, #8]
   212dc:	str	r5, [sp, #28]
   212e0:	add	lr, pc, lr
   212e4:	add	ip, ip, #4
   212e8:	str	lr, [sp, #4]
   212ec:	str	ip, [sp, #12]
   212f0:	ldr	ip, [pc, #80]	; 21348 <releaseAllKeys@@Base+0x688>
   212f4:	ldr	lr, [r3, r2]
   212f8:	ldr	r2, [pc, #76]	; 2134c <releaseAllKeys@@Base+0x68c>
   212fc:	str	lr, [sp, #16]
   21300:	add	r2, pc, r2
   21304:	ldr	r3, [r3, ip]
   21308:	str	r2, [sp, #24]
   2130c:	str	r3, [sp, #20]
   21310:	bl	20e50 <releaseAllKeys@@Base+0x190>
   21314:	ldr	r2, [sp, #28]
   21318:	ldr	r3, [r4]
   2131c:	cmp	r2, r3
   21320:	bne	2132c <releaseAllKeys@@Base+0x66c>
   21324:	add	sp, sp, #32
   21328:	pop	{r4, r5, r6, pc}
   2132c:	bl	f950 <__stack_chk_fail@plt>
   21330:	ldrdeq	r1, [r5], -r4
   21334:			; <UNDEFINED> instruction: 0x000003b4
   21338:	andeq	r2, r5, r0, ror #7
   2133c:	andeq	r0, r0, r4, ror #10
   21340:	ldrdeq	lr, [r2], -ip
   21344:	andeq	r1, r3, r4, lsr r2
   21348:	andeq	r0, r0, r4, lsr #10
   2134c:	muleq	r0, ip, r0
   21350:	push	{r4, lr}
   21354:	ldr	r4, [pc, #32]	; 2137c <releaseAllKeys@@Base+0x6bc>
   21358:	ldr	r3, [pc, #32]	; 21380 <releaseAllKeys@@Base+0x6c0>
   2135c:	add	r4, pc, r4
   21360:	ldr	r0, [r4, r3]
   21364:	bl	4d0d8 <api_stop@@Base>
   21368:	ldr	r3, [pc, #20]	; 21384 <releaseAllKeys@@Base+0x6c4>
   2136c:	mov	r2, #0
   21370:	ldr	r3, [r4, r3]
   21374:	str	r2, [r3]
   21378:	pop	{r4, pc}
   2137c:	andeq	r1, r5, ip, lsl r7
   21380:	andeq	r0, r0, r8, asr #10
   21384:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21388:	mov	r0, #1
   2138c:	b	37044 <closeTuneDevice@@Base>
   21390:	ldr	r3, [pc, #8]	; 213a0 <releaseAllKeys@@Base+0x6e0>
   21394:	add	r3, pc, r3
   21398:	ldr	r0, [r3, #24]
   2139c:	b	f800 <unlink@plt>
   213a0:	strdeq	r2, [r5], -ip
   213a4:	push	{r4, r5, r6, r7, r8, lr}
   213a8:	mov	r7, r1
   213ac:	ldr	r5, [pc, #444]	; 21570 <releaseAllKeys@@Base+0x8b0>
   213b0:	sub	sp, sp, #8
   213b4:	mov	r8, r0
   213b8:	ldr	r6, [pc, #436]	; 21574 <releaseAllKeys@@Base+0x8b4>
   213bc:	add	r5, pc, r5
   213c0:	add	r1, r5, #28
   213c4:	add	r6, pc, r6
   213c8:	ldr	r2, [r5, #32]
   213cc:	bl	38ba4 <loadScreenDriver@@Base>
   213d0:	ldr	ip, [pc, #416]	; 21578 <releaseAllKeys@@Base+0x8b8>
   213d4:	ldr	r4, [r6, ip]
   213d8:	cmp	r0, #0
   213dc:	str	r0, [r4]
   213e0:	beq	21534 <releaseAllKeys@@Base+0x874>
   213e4:	bl	38b6c <getScreenParameters@@Base>
   213e8:	mov	r8, r0
   213ec:	ldr	r0, [r4]
   213f0:	bl	38b74 <getScreenDriverDefinition@@Base>
   213f4:	ldr	r2, [r5, #36]	; 0x24
   213f8:	ldr	r1, [r0, #4]
   213fc:	mov	r0, r8
   21400:	bl	1e2f8 <getParameters@@Base>
   21404:	cmp	r0, #0
   21408:	str	r0, [r5, #40]	; 0x28
   2140c:	beq	214f0 <releaseAllKeys@@Base+0x830>
   21410:	cmp	r7, #0
   21414:	beq	214b8 <releaseAllKeys@@Base+0x7f8>
   21418:	ldr	r1, [pc, #348]	; 2157c <releaseAllKeys@@Base+0x8bc>
   2141c:	mov	r2, #5
   21420:	mov	r0, #0
   21424:	add	r1, pc, r1
   21428:	bl	f9bc <dcgettext@plt>
   2142c:	mov	r6, r0
   21430:	ldr	r0, [r4]
   21434:	bl	38b74 <getScreenDriverDefinition@@Base>
   21438:	ldr	r5, [r0, #4]
   2143c:	ldr	r0, [r4]
   21440:	bl	38b74 <getScreenDriverDefinition@@Base>
   21444:	ldr	r1, [pc, #308]	; 21580 <releaseAllKeys@@Base+0x8c0>
   21448:	mov	r2, r6
   2144c:	mov	r3, r5
   21450:	add	r1, pc, r1
   21454:	ldr	ip, [r0]
   21458:	mov	r0, #6
   2145c:	str	ip, [sp]
   21460:	bl	1c634 <logMessage@@Base>
   21464:	ldr	r0, [r4]
   21468:	mov	r1, #0
   2146c:	bl	38ce4 <identifyScreenDriver@@Base>
   21470:	ldr	r0, [r4]
   21474:	bl	38b6c <getScreenParameters@@Base>
   21478:	ldr	r3, [pc, #260]	; 21584 <releaseAllKeys@@Base+0x8c4>
   2147c:	ldr	r1, [pc, #260]	; 21588 <releaseAllKeys@@Base+0x8c8>
   21480:	mov	r2, #5
   21484:	add	r3, pc, r3
   21488:	add	r1, pc, r1
   2148c:	ldr	r4, [r3, #40]	; 0x28
   21490:	mov	r5, r0
   21494:	mov	r0, #0
   21498:	bl	f9bc <dcgettext@plt>
   2149c:	mov	r1, r4
   214a0:	mov	r2, r0
   214a4:	mov	r0, r5
   214a8:	bl	1e698 <logParameters@@Base>
   214ac:	mov	r0, #1
   214b0:	add	sp, sp, #8
   214b4:	pop	{r4, r5, r6, r7, r8, pc}
   214b8:	ldr	r0, [r4]
   214bc:	bl	38b74 <getScreenDriverDefinition@@Base>
   214c0:	ldr	r1, [pc, #196]	; 2158c <releaseAllKeys@@Base+0x8cc>
   214c4:	add	r1, pc, r1
   214c8:	ldr	r2, [r0, #4]
   214cc:	mov	r0, #7
   214d0:	bl	1c634 <logMessage@@Base>
   214d4:	ldr	r0, [r5, #40]	; 0x28
   214d8:	bl	38c44 <constructScreenDriver@@Base>
   214dc:	subs	r7, r0, #0
   214e0:	bne	21528 <releaseAllKeys@@Base+0x868>
   214e4:	ldr	r0, [r5, #40]	; 0x28
   214e8:	bl	1db88 <deallocateStrings@@Base>
   214ec:	str	r7, [r5, #40]	; 0x28
   214f0:	ldr	r5, [pc, #152]	; 21590 <releaseAllKeys@@Base+0x8d0>
   214f4:	add	r5, pc, r5
   214f8:	ldr	r0, [r5, #28]
   214fc:	cmp	r0, #0
   21500:	beq	21510 <releaseAllKeys@@Base+0x850>
   21504:	bl	1f7f4 <unloadSharedObject@@Base>
   21508:	mov	r3, #0
   2150c:	str	r3, [r5, #28]
   21510:	ldr	r3, [pc, #124]	; 21594 <releaseAllKeys@@Base+0x8d4>
   21514:	mov	r0, #0
   21518:	ldr	r3, [r6, r3]
   2151c:	str	r3, [r4]
   21520:	add	sp, sp, #8
   21524:	pop	{r4, r5, r6, r7, r8, pc}
   21528:	ldr	r3, [r4]
   2152c:	str	r3, [r5, #44]	; 0x2c
   21530:	b	21418 <releaseAllKeys@@Base+0x758>
   21534:	ldr	r1, [pc, #92]	; 21598 <releaseAllKeys@@Base+0x8d8>
   21538:	mov	r2, #5
   2153c:	add	r1, pc, r1
   21540:	bl	f9bc <dcgettext@plt>
   21544:	ldr	r1, [pc, #80]	; 2159c <releaseAllKeys@@Base+0x8dc>
   21548:	mov	r3, r8
   2154c:	add	r1, pc, r1
   21550:	mov	r2, r0
   21554:	mov	r0, #3
   21558:	bl	1c634 <logMessage@@Base>
   2155c:	ldr	r3, [pc, #48]	; 21594 <releaseAllKeys@@Base+0x8d4>
   21560:	mov	r0, #0
   21564:	ldr	r3, [r6, r3]
   21568:	str	r3, [r4]
   2156c:	b	21520 <releaseAllKeys@@Base+0x860>
   21570:	ldrdeq	r2, [r5], -r4
   21574:			; <UNDEFINED> instruction: 0x000516b4
   21578:	andeq	r0, r0, r4, lsr #7
   2157c:	andeq	lr, r2, r0, lsr #7
   21580:	andeq	lr, r2, r4, lsl #7
   21584:	andeq	r2, r5, ip, lsl #4
   21588:	andeq	lr, r2, r8, asr r3
   2158c:	andeq	lr, r2, r4, asr #5
   21590:	muleq	r5, ip, r1
   21594:	andeq	r0, r0, r0, ror #8
   21598:	andeq	lr, r2, ip, ror #4
   2159c:	andeq	sp, r2, r8, ror #27
   215a0:	push	{r3, r4, r5, lr}
   215a4:	ldr	r5, [pc, #120]	; 21624 <releaseAllKeys@@Base+0x964>
   215a8:	ldr	r4, [pc, #120]	; 21628 <releaseAllKeys@@Base+0x968>
   215ac:	add	r5, pc, r5
   215b0:	add	r4, pc, r4
   215b4:	ldr	r3, [r5, #44]	; 0x2c
   215b8:	cmp	r3, #0
   215bc:	beq	215e0 <releaseAllKeys@@Base+0x920>
   215c0:	bl	38cc8 <destructScreenDriver@@Base>
   215c4:	ldr	r3, [pc, #96]	; 2162c <releaseAllKeys@@Base+0x96c>
   215c8:	ldr	r2, [pc, #96]	; 21630 <releaseAllKeys@@Base+0x970>
   215cc:	mov	r1, #0
   215d0:	ldr	r3, [r4, r3]
   215d4:	ldr	r2, [r4, r2]
   215d8:	str	r1, [r5, #44]	; 0x2c
   215dc:	str	r2, [r3]
   215e0:	ldr	r4, [pc, #76]	; 21634 <releaseAllKeys@@Base+0x974>
   215e4:	add	r4, pc, r4
   215e8:	ldr	r0, [r4, #28]
   215ec:	cmp	r0, #0
   215f0:	beq	21600 <releaseAllKeys@@Base+0x940>
   215f4:	bl	1f7f4 <unloadSharedObject@@Base>
   215f8:	mov	r3, #0
   215fc:	str	r3, [r4, #28]
   21600:	ldr	r4, [pc, #48]	; 21638 <releaseAllKeys@@Base+0x978>
   21604:	add	r4, pc, r4
   21608:	ldr	r0, [r4, #40]	; 0x28
   2160c:	cmp	r0, #0
   21610:	popeq	{r3, r4, r5, pc}
   21614:	bl	1db88 <deallocateStrings@@Base>
   21618:	mov	r3, #0
   2161c:	str	r3, [r4, #40]	; 0x28
   21620:	pop	{r3, r4, r5, pc}
   21624:	andeq	r2, r5, r4, ror #1
   21628:	andeq	r1, r5, r8, asr #9
   2162c:	andeq	r0, r0, r4, lsr #7
   21630:	andeq	r0, r0, r0, ror #8
   21634:	andeq	r2, r5, ip, lsr #1
   21638:	andeq	r2, r5, ip, lsl #1
   2163c:	push	{r3, lr}
   21640:	bl	215a0 <releaseAllKeys@@Base+0x8e0>
   21644:	pop	{r3, lr}
   21648:	b	38d2c <destructSpecialScreens@@Base>
   2164c:	push	{r4, lr}
   21650:	mov	r4, r0
   21654:	ldr	r0, [r0]
   21658:	cmp	r0, #0
   2165c:	bne	21684 <releaseAllKeys@@Base+0x9c4>
   21660:	bl	39398 <constructHelpScreen@@Base>
   21664:	cmp	r0, #0
   21668:	bne	21674 <releaseAllKeys@@Base+0x9b4>
   2166c:	mov	r0, #0
   21670:	pop	{r4, pc}
   21674:	bl	3943c <addHelpPage@@Base>
   21678:	cmp	r0, #0
   2167c:	str	r0, [r4]
   21680:	beq	2166c <releaseAllKeys@@Base+0x9ac>
   21684:	pop	{r4, lr}
   21688:	b	39490 <setHelpPageNumber@@Base>
   2168c:	push	{r3, lr}
   21690:	bl	39490 <setHelpPageNumber@@Base>
   21694:	cmp	r0, #0
   21698:	popeq	{r3, pc}
   2169c:	pop	{r3, lr}
   216a0:	b	394ac <clearHelpPage@@Base>
   216a4:	ldr	r3, [pc, #64]	; 216ec <releaseAllKeys@@Base+0xa2c>
   216a8:	ldr	r2, [pc, #64]	; 216f0 <releaseAllKeys@@Base+0xa30>
   216ac:	add	r3, pc, r3
   216b0:	push	{r4, lr}
   216b4:	ldr	r4, [r3, r2]
   216b8:	ldr	r0, [r4]
   216bc:	cmp	r0, #0
   216c0:	beq	216d0 <releaseAllKeys@@Base+0xa10>
   216c4:	bl	34448 <destroyKeyTable@@Base>
   216c8:	mov	r3, #0
   216cc:	str	r3, [r4]
   216d0:	ldr	r3, [pc, #28]	; 216f4 <releaseAllKeys@@Base+0xa34>
   216d4:	add	r3, pc, r3
   216d8:	ldr	r0, [r3, #48]	; 0x30
   216dc:	cmp	r0, #0
   216e0:	popeq	{r4, pc}
   216e4:	pop	{r4, lr}
   216e8:	b	2168c <releaseAllKeys@@Base+0x9cc>
   216ec:	andeq	r1, r5, ip, asr #7
   216f0:	andeq	r0, r0, r4, lsr r4
   216f4:			; <UNDEFINED> instruction: 0x00051fbc
   216f8:	push	{r4, r5, r6, lr}
   216fc:	sub	sp, sp, #264	; 0x108
   21700:	ldr	r4, [pc, #152]	; 217a0 <releaseAllKeys@@Base+0xae0>
   21704:	mov	r0, #0
   21708:	ldr	r3, [pc, #148]	; 217a4 <releaseAllKeys@@Base+0xae4>
   2170c:	add	r4, pc, r4
   21710:	ldr	r5, [r4, r3]
   21714:	ldr	r3, [r5]
   21718:	str	r3, [sp, #260]	; 0x104
   2171c:	bl	211e4 <releaseAllKeys@@Base+0x524>
   21720:	subs	r6, r0, #0
   21724:	bne	21758 <releaseAllKeys@@Base+0xa98>
   21728:	ldr	r1, [pc, #120]	; 217a8 <releaseAllKeys@@Base+0xae8>
   2172c:	movw	r0, #5000	; 0x1388
   21730:	mov	r2, r6
   21734:	add	r1, pc, r1
   21738:	bl	27b48 <asyncRelativeAlarm@@Base>
   2173c:	ldr	r2, [sp, #260]	; 0x104
   21740:	mov	r0, r6
   21744:	ldr	r3, [r5]
   21748:	cmp	r2, r3
   2174c:	bne	2179c <releaseAllKeys@@Base+0xadc>
   21750:	add	sp, sp, #264	; 0x108
   21754:	pop	{r4, r5, r6, pc}
   21758:	bl	20d64 <releaseAllKeys@@Base+0xa4>
   2175c:	ldr	r3, [pc, #72]	; 217ac <releaseAllKeys@@Base+0xaec>
   21760:	add	r3, pc, r3
   21764:	ldr	r3, [r3, #52]	; 0x34
   21768:	cmp	r3, #0
   2176c:	bne	21794 <releaseAllKeys@@Base+0xad4>
   21770:	add	r6, sp, #4
   21774:	mov	r1, #256	; 0x100
   21778:	mov	r0, r6
   2177c:	bl	1a290 <makeProgramBanner@@Base>
   21780:	ldr	r3, [pc, #40]	; 217b0 <releaseAllKeys@@Base+0xaf0>
   21784:	mov	r1, r6
   21788:	mov	r2, #1
   2178c:	ldr	r0, [r4, r3]
   21790:	bl	46780 <sayString@@Base>
   21794:	mov	r6, #1
   21798:	b	2173c <releaseAllKeys@@Base+0xa7c>
   2179c:	bl	f950 <__stack_chk_fail@plt>
   217a0:	andeq	r1, r5, ip, ror #6
   217a4:			; <UNDEFINED> instruction: 0x000003b4
   217a8:	andeq	r0, r0, r8, ror r0
   217ac:	andeq	r1, r5, r0, lsr pc
   217b0:	andeq	r0, r0, r4, ror #9
   217b4:	ldr	r3, [pc, #16]	; 217cc <releaseAllKeys@@Base+0xb0c>
   217b8:	add	r3, pc, r3
   217bc:	ldr	r3, [r3, #56]	; 0x38
   217c0:	cmp	r3, #0
   217c4:	bxne	lr
   217c8:	b	216f8 <releaseAllKeys@@Base+0xa38>
   217cc:	ldrdeq	r1, [r5], -r8
   217d0:	ldr	r3, [pc, #96]	; 21838 <releaseAllKeys@@Base+0xb78>
   217d4:	mov	r1, #0
   217d8:	push	{r4, lr}
   217dc:	add	r3, pc, r3
   217e0:	ldr	r0, [r3, #24]
   217e4:	bl	1a4e4 <createPidFile@@Base>
   217e8:	subs	r4, r0, #0
   217ec:	bne	21820 <releaseAllKeys@@Base+0xb60>
   217f0:	bl	fca4 <__errno_location@plt>
   217f4:	ldr	r3, [r0]
   217f8:	cmp	r3, #17
   217fc:	beq	21818 <releaseAllKeys@@Base+0xb58>
   21800:	ldr	r1, [pc, #52]	; 2183c <releaseAllKeys@@Base+0xb7c>
   21804:	mov	r2, r4
   21808:	movw	r0, #5000	; 0x1388
   2180c:	mov	r4, #1
   21810:	add	r1, pc, r1
   21814:	bl	27b48 <asyncRelativeAlarm@@Base>
   21818:	mov	r0, r4
   2181c:	pop	{r4, pc}
   21820:	ldr	r0, [pc, #24]	; 21840 <releaseAllKeys@@Base+0xb80>
   21824:	mov	r4, #1
   21828:	add	r0, pc, r0
   2182c:	bl	1a8f8 <onProgramExit@@Base>
   21830:	mov	r0, r4
   21834:	pop	{r4, pc}
   21838:			; <UNDEFINED> instruction: 0x00051eb4
   2183c:	andeq	r0, r0, ip, lsr #32
   21840:			; <UNDEFINED> instruction: 0xfffffb60
   21844:	b	217d0 <releaseAllKeys@@Base+0xb10>
   21848:	ldr	r1, [pc, #84]	; 218a4 <releaseAllKeys@@Base+0xbe4>
   2184c:	mov	r0, #7
   21850:	push	{r4, lr}
   21854:	add	r1, pc, r1
   21858:	bl	1c634 <logMessage@@Base>
   2185c:	ldr	r0, [pc, #68]	; 218a8 <releaseAllKeys@@Base+0xbe8>
   21860:	ldr	r1, [pc, #68]	; 218ac <releaseAllKeys@@Base+0xbec>
   21864:	add	r0, pc, r0
   21868:	add	r1, pc, r1
   2186c:	add	r0, r0, #60	; 0x3c
   21870:	bl	36d08 <startKeyboardMonitor@@Base>
   21874:	subs	r4, r0, #0
   21878:	popne	{r4, pc}
   2187c:	ldr	r1, [pc, #44]	; 218b0 <releaseAllKeys@@Base+0xbf0>
   21880:	mov	r0, #7
   21884:	add	r1, pc, r1
   21888:	bl	1c634 <logMessage@@Base>
   2188c:	ldr	r1, [pc, #32]	; 218b4 <releaseAllKeys@@Base+0xbf4>
   21890:	mov	r2, r4
   21894:	movw	r0, #5000	; 0x1388
   21898:	add	r1, pc, r1
   2189c:	pop	{r4, lr}
   218a0:	b	27b48 <asyncRelativeAlarm@@Base>
   218a4:	andeq	sp, r2, r0, lsr #31
   218a8:	andeq	r1, r5, ip, lsr #28
   218ac:	andeq	r0, r0, r8, asr #32
   218b0:	andeq	sp, r2, ip, lsl #31
   218b4:			; <UNDEFINED> instruction: 0xffffffa8
   218b8:	ldr	ip, [pc, #108]	; 2192c <releaseAllKeys@@Base+0xc6c>
   218bc:	push	{r4, r5, r6, r7, lr}
   218c0:	add	ip, pc, ip
   218c4:	ldr	lr, [pc, #100]	; 21930 <releaseAllKeys@@Base+0xc70>
   218c8:	sub	sp, sp, #12
   218cc:	ldr	r3, [pc, #96]	; 21934 <releaseAllKeys@@Base+0xc74>
   218d0:	mov	r4, r0
   218d4:	mov	r5, r1
   218d8:	mov	r6, r2
   218dc:	ldr	lr, [ip, lr]
   218e0:	ldr	r3, [ip, r3]
   218e4:	ldr	lr, [lr, #16]
   218e8:	cmp	lr, #0
   218ec:	beq	21904 <releaseAllKeys@@Base+0xc44>
   218f0:	ldr	r0, [r3]
   218f4:	bl	33fa0 <resetKeyTable@@Base>
   218f8:	mov	r0, #0
   218fc:	add	sp, sp, #12
   21900:	pop	{r4, r5, r6, r7, pc}
   21904:	ldr	r7, [r3]
   21908:	bl	3dff4 <getCurrentCommandContext@@Base>
   2190c:	str	r6, [sp]
   21910:	mov	r2, r4
   21914:	mov	r3, r5
   21918:	uxtb	r1, r0
   2191c:	mov	r0, r7
   21920:	bl	34b90 <processKeyEvent@@Base>
   21924:	add	sp, sp, #12
   21928:	pop	{r4, r5, r6, r7, pc}
   2192c:			; <UNDEFINED> instruction: 0x000511b8
   21930:	andeq	r0, r0, ip, lsl #9
   21934:	andeq	r0, r0, r4, lsr r4
   21938:	push	{r4, lr}
   2193c:	mov	r0, #0
   21940:	bl	21298 <releaseAllKeys@@Base+0x5d8>
   21944:	subs	r4, r0, #0
   21948:	movne	r4, #1
   2194c:	bne	21968 <releaseAllKeys@@Base+0xca8>
   21950:	ldr	r1, [pc, #24]	; 21970 <releaseAllKeys@@Base+0xcb0>
   21954:	mov	r2, r4
   21958:	movw	r0, #5000	; 0x1388
   2195c:	add	r1, pc, r1
   21960:	bl	27b48 <asyncRelativeAlarm@@Base>
   21964:	bl	38c0c <initializeScreen@@Base>
   21968:	mov	r0, r4
   2196c:	pop	{r4, pc}
   21970:	andeq	r0, r0, r0, lsl r0
   21974:	ldr	r3, [pc, #16]	; 2198c <releaseAllKeys@@Base+0xccc>
   21978:	add	r3, pc, r3
   2197c:	ldr	r3, [r3, #44]	; 0x2c
   21980:	cmp	r3, #0
   21984:	bxne	lr
   21988:	b	21938 <releaseAllKeys@@Base+0xc78>
   2198c:	andeq	r1, r5, r8, lsl sp

00021990 <loadContractionTable@@Base>:
   21990:	push	{r4, r5, r6, lr}
   21994:	ldrb	r3, [r0]
   21998:	ldr	r4, [pc, #188]	; 21a5c <loadContractionTable@@Base+0xcc>
   2199c:	cmp	r3, #0
   219a0:	add	r4, pc, r4
   219a4:	moveq	r5, r3
   219a8:	bne	219d0 <loadContractionTable@@Base+0x40>
   219ac:	ldr	r2, [pc, #172]	; 21a60 <loadContractionTable@@Base+0xd0>
   219b0:	ldr	r4, [r4, r2]
   219b4:	ldr	r0, [r4]
   219b8:	cmp	r0, #0
   219bc:	beq	219c4 <loadContractionTable@@Base+0x34>
   219c0:	bl	2f0c0 <destroyContractionTable@@Base>
   219c4:	str	r5, [r4]
   219c8:	mov	r0, #1
   219cc:	pop	{r4, r5, r6, pc}
   219d0:	ldr	r3, [pc, #140]	; 21a64 <loadContractionTable@@Base+0xd4>
   219d4:	mov	r1, r0
   219d8:	ldr	r3, [r4, r3]
   219dc:	ldr	r0, [r3]
   219e0:	bl	2f180 <makeContractionTablePath@@Base>
   219e4:	subs	r6, r0, #0
   219e8:	beq	21a1c <loadContractionTable@@Base+0x8c>
   219ec:	ldr	r1, [pc, #116]	; 21a68 <loadContractionTable@@Base+0xd8>
   219f0:	mov	r0, #7
   219f4:	mov	r2, r6
   219f8:	add	r1, pc, r1
   219fc:	bl	1c634 <logMessage@@Base>
   21a00:	mov	r0, r6
   21a04:	bl	2ed54 <compileContractionTable@@Base>
   21a08:	subs	r5, r0, #0
   21a0c:	beq	21a24 <loadContractionTable@@Base+0x94>
   21a10:	mov	r0, r6
   21a14:	bl	f4f4 <free@plt>
   21a18:	b	219ac <loadContractionTable@@Base+0x1c>
   21a1c:	mov	r0, r6
   21a20:	pop	{r4, r5, r6, pc}
   21a24:	ldr	r1, [pc, #64]	; 21a6c <loadContractionTable@@Base+0xdc>
   21a28:	mov	r2, #5
   21a2c:	add	r1, pc, r1
   21a30:	bl	f9bc <dcgettext@plt>
   21a34:	ldr	r1, [pc, #52]	; 21a70 <loadContractionTable@@Base+0xe0>
   21a38:	mov	r3, r6
   21a3c:	add	r1, pc, r1
   21a40:	mov	r2, r0
   21a44:	mov	r0, #3
   21a48:	bl	1c634 <logMessage@@Base>
   21a4c:	mov	r0, r6
   21a50:	bl	f4f4 <free@plt>
   21a54:	mov	r0, r5
   21a58:	pop	{r4, r5, r6, pc}
   21a5c:	ldrdeq	r1, [r5], -r8
   21a60:	ldrdeq	r0, [r0], -r4
   21a64:	andeq	r0, r0, r4, lsr r5
   21a68:	andeq	sp, r2, r0, lsr lr
   21a6c:	andeq	sp, r2, ip, lsl lr
   21a70:	strdeq	sp, [r2], -r8

00021a74 <haveStatusCells@@Base>:
   21a74:	ldr	r3, [pc, #24]	; 21a94 <haveStatusCells@@Base+0x20>
   21a78:	ldr	r2, [pc, #24]	; 21a98 <haveStatusCells@@Base+0x24>
   21a7c:	add	r3, pc, r3
   21a80:	ldr	r3, [r3, r2]
   21a84:	ldr	r0, [r3, #8]
   21a88:	adds	r0, r0, #0
   21a8c:	movne	r0, #1
   21a90:	bx	lr
   21a94:	strdeq	r0, [r5], -ip
   21a98:	andeq	r0, r0, r8, asr #10
   21a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21aa0:	mov	r2, #0
   21aa4:	ldr	r4, [pc, #472]	; 21c84 <haveStatusCells@@Base+0x210>
   21aa8:	mov	r6, r0
   21aac:	ldr	r3, [pc, #468]	; 21c88 <haveStatusCells@@Base+0x214>
   21ab0:	sub	sp, sp, #28
   21ab4:	add	r4, pc, r4
   21ab8:	ldr	ip, [pc, #460]	; 21c8c <haveStatusCells@@Base+0x218>
   21abc:	ldr	lr, [pc, #460]	; 21c90 <haveStatusCells@@Base+0x21c>
   21ac0:	mov	fp, r1
   21ac4:	ldr	r7, [r4, r3]
   21ac8:	ldr	r0, [pc, #452]	; 21c94 <haveStatusCells@@Base+0x220>
   21acc:	ldr	r3, [pc, #452]	; 21c98 <haveStatusCells@@Base+0x224>
   21ad0:	str	r2, [r7]
   21ad4:	ldr	r5, [r4, ip]
   21ad8:	str	r1, [r5]
   21adc:	ldr	r8, [r4, lr]
   21ae0:	str	r2, [r8]
   21ae4:	ldr	sl, [r4, r0]
   21ae8:	str	r2, [sl]
   21aec:	ldr	r3, [r4, r3]
   21af0:	ldrb	r3, [r3]
   21af4:	cmp	r3, r2
   21af8:	beq	21b88 <haveStatusCells@@Base+0x114>
   21afc:	ldr	r0, [pc, #408]	; 21c9c <haveStatusCells@@Base+0x228>
   21b00:	mov	r3, r1
   21b04:	mov	ip, r2
   21b08:	mov	r1, r2
   21b0c:	ldr	r9, [r4, r0]
   21b10:	stm	sp, {r1, ip}
   21b14:	mov	r0, #7
   21b18:	ldr	r1, [pc, #384]	; 21ca0 <haveStatusCells@@Base+0x22c>
   21b1c:	add	r1, pc, r1
   21b20:	bl	1c634 <logMessage@@Base>
   21b24:	ldr	r3, [pc, #376]	; 21ca4 <haveStatusCells@@Base+0x230>
   21b28:	ldr	ip, [r5]
   21b2c:	cmp	r6, #1
   21b30:	ldrb	r2, [r9, #39]	; 0x27
   21b34:	mov	r0, #7
   21b38:	ldr	r1, [r4, r3]
   21b3c:	movls	r6, #5
   21b40:	ldr	r3, [pc, #352]	; 21ca8 <haveStatusCells@@Base+0x234>
   21b44:	rsb	r2, r2, ip
   21b48:	cmp	r2, #1
   21b4c:	movcc	r2, #1
   21b50:	ldr	lr, [pc, #340]	; 21cac <haveStatusCells@@Base+0x238>
   21b54:	str	r2, [r1]
   21b58:	lsr	ip, ip, #1
   21b5c:	ldr	r5, [r4, r3]
   21b60:	mov	r3, ip
   21b64:	ldr	r1, [pc, #324]	; 21cb0 <haveStatusCells@@Base+0x23c>
   21b68:	str	ip, [r5]
   21b6c:	add	r1, pc, r1
   21b70:	ldr	ip, [r4, lr]
   21b74:	str	r6, [sp]
   21b78:	str	r6, [ip]
   21b7c:	bl	1c634 <logMessage@@Base>
   21b80:	add	sp, sp, #28
   21b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b88:	bl	21a74 <haveStatusCells@@Base>
   21b8c:	cmp	r0, #0
   21b90:	bne	21c1c <haveStatusCells@@Base+0x1a8>
   21b94:	ldr	r2, [pc, #256]	; 21c9c <haveStatusCells@@Base+0x228>
   21b98:	ldr	r3, [pc, #276]	; 21cb4 <haveStatusCells@@Base+0x240>
   21b9c:	ldr	r9, [r4, r2]
   21ba0:	ldr	r3, [r4, r3]
   21ba4:	ldrb	ip, [r9, #47]	; 0x2f
   21ba8:	str	r3, [sp, #20]
   21bac:	adds	ip, ip, #0
   21bb0:	ldr	r3, [r3]
   21bb4:	movne	ip, #1
   21bb8:	add	r2, ip, #1
   21bbc:	cmp	r2, r3
   21bc0:	bcs	21c24 <haveStatusCells@@Base+0x1b0>
   21bc4:	ldrb	r0, [r9, #46]	; 0x2e
   21bc8:	cmp	r0, #0
   21bcc:	beq	21c38 <haveStatusCells@@Base+0x1c4>
   21bd0:	rsb	r3, r2, r3
   21bd4:	cmp	r3, r0
   21bd8:	movcc	r0, r3
   21bdc:	cmp	r0, #0
   21be0:	beq	21c24 <haveStatusCells@@Base+0x1b0>
   21be4:	ldrb	r3, [r9, #45]	; 0x2d
   21be8:	cmp	r3, #1
   21bec:	beq	21c5c <haveStatusCells@@Base+0x1e8>
   21bf0:	cmp	r3, #2
   21bf4:	bne	21c24 <haveStatusCells@@Base+0x1b0>
   21bf8:	rsb	r1, r0, fp
   21bfc:	mov	r2, #0
   21c00:	rsb	r3, ip, r1
   21c04:	str	r1, [r8]
   21c08:	str	r3, [r5]
   21c0c:	mov	ip, r0
   21c10:	str	r0, [sl]
   21c14:	str	r2, [r7]
   21c18:	b	21b10 <haveStatusCells@@Base+0x9c>
   21c1c:	ldr	r3, [pc, #120]	; 21c9c <haveStatusCells@@Base+0x228>
   21c20:	ldr	r9, [r4, r3]
   21c24:	ldr	r2, [r7]
   21c28:	ldr	r1, [r8]
   21c2c:	ldr	ip, [sl]
   21c30:	ldr	r3, [r5]
   21c34:	b	21b10 <haveStatusCells@@Base+0x9c>
   21c38:	add	r0, r9, #48	; 0x30
   21c3c:	str	r2, [sp, #12]
   21c40:	str	ip, [sp, #16]
   21c44:	bl	26758 <getStatusFieldsLength@@Base>
   21c48:	ldr	r1, [sp, #20]
   21c4c:	ldr	ip, [sp, #16]
   21c50:	ldr	r2, [sp, #12]
   21c54:	ldr	r3, [r1]
   21c58:	b	21bd0 <haveStatusCells@@Base+0x15c>
   21c5c:	add	r2, r0, ip
   21c60:	mov	lr, #0
   21c64:	rsb	r3, r2, fp
   21c68:	str	r2, [r7]
   21c6c:	str	r3, [r5]
   21c70:	mov	ip, r0
   21c74:	str	r0, [sl]
   21c78:	mov	r1, lr
   21c7c:	str	lr, [r8]
   21c80:	b	21b10 <haveStatusCells@@Base+0x9c>
   21c84:	andeq	r0, r5, r4, asr #31
   21c88:	andeq	r0, r0, r0, ror r4
   21c8c:	andeq	r0, r0, r0, asr #7
   21c90:	andeq	r0, r0, ip, lsr r4
   21c94:	andeq	r0, r0, r8, asr #9
   21c98:	strdeq	r0, [r0], -ip
   21c9c:	andeq	r0, r0, r0, asr #10
   21ca0:	andeq	sp, r2, r0, asr sp
   21ca4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ca8:	andeq	r0, r0, r8, lsl #7
   21cac:	andeq	r0, r0, r0, lsl #8
   21cb0:	andeq	sp, r2, r4, lsr #26
   21cb4:	andeq	r0, r0, r8, asr #10

00021cb8 <reconfigureWindow@@Base>:
   21cb8:	ldr	r3, [pc, #20]	; 21cd4 <reconfigureWindow@@Base+0x1c>
   21cbc:	ldr	r2, [pc, #20]	; 21cd8 <reconfigureWindow@@Base+0x20>
   21cc0:	add	r3, pc, r3
   21cc4:	ldr	r3, [r3, r2]
   21cc8:	ldr	r0, [r3, #4]
   21ccc:	ldr	r1, [r3]
   21cd0:	b	21a9c <haveStatusCells@@Base+0x28>
   21cd4:			; <UNDEFINED> instruction: 0x00050db8
   21cd8:	andeq	r0, r0, r8, asr #10
   21cdc:	push	{r3, r4, r5, lr}
   21ce0:	bl	21cb8 <reconfigureWindow@@Base>
   21ce4:	ldr	r3, [pc, #44]	; 21d18 <reconfigureWindow@@Base+0x60>
   21ce8:	ldr	r1, [pc, #44]	; 21d1c <reconfigureWindow@@Base+0x64>
   21cec:	ldr	r2, [pc, #44]	; 21d20 <reconfigureWindow@@Base+0x68>
   21cf0:	add	r3, pc, r3
   21cf4:	ldr	r5, [r3, r1]
   21cf8:	ldr	r4, [r3, r2]
   21cfc:	mov	r0, r5
   21d00:	ldrb	r1, [r4, #42]	; 0x2a
   21d04:	bl	3ece8 <setBrailleFirmness@@Base>
   21d08:	mov	r0, r5
   21d0c:	ldrb	r1, [r4, #5]
   21d10:	pop	{r3, r4, r5, lr}
   21d14:	b	3ed2c <setBrailleSensitivity@@Base>
   21d18:	andeq	r0, r5, r8, lsl #27
   21d1c:	andeq	r0, r0, r8, asr #10
   21d20:	andeq	r0, r0, r0, asr #10
   21d24:	push	{r3, lr}
   21d28:	ldr	r3, [pc, #28]	; 21d4c <reconfigureWindow@@Base+0x94>
   21d2c:	ldr	r2, [pc, #28]	; 21d50 <reconfigureWindow@@Base+0x98>
   21d30:	add	r3, pc, r3
   21d34:	ldr	r3, [r3, r2]
   21d38:	ldrb	r0, [r3, #31]
   21d3c:	bl	370c0 <setTuneDevice@@Base>
   21d40:	bl	21cdc <reconfigureWindow@@Base+0x24>
   21d44:	pop	{r3, lr}
   21d48:	b	20d64 <releaseAllKeys@@Base+0xa4>
   21d4c:	andeq	r0, r5, r8, asr #26
   21d50:	andeq	r0, r0, r0, asr #10

00021d54 <setPreferences@@Base>:
   21d54:	push	{r3, lr}
   21d58:	mov	r1, r0
   21d5c:	ldr	r3, [pc, #24]	; 21d7c <setPreferences@@Base+0x28>
   21d60:	mov	r2, #82	; 0x52
   21d64:	ldr	ip, [pc, #20]	; 21d80 <setPreferences@@Base+0x2c>
   21d68:	add	r3, pc, r3
   21d6c:	ldr	r0, [r3, ip]
   21d70:	bl	fb24 <memcpy@plt>
   21d74:	pop	{r3, lr}
   21d78:	b	21d24 <reconfigureWindow@@Base+0x6c>
   21d7c:	andeq	r0, r5, r0, lsl sp
   21d80:	andeq	r0, r0, r0, asr #10

00021d84 <loadPreferences@@Base>:
   21d84:	push	{r3, r4, r5, lr}
   21d88:	ldr	r3, [pc, #164]	; 21e34 <loadPreferences@@Base+0xb0>
   21d8c:	add	r3, pc, r3
   21d90:	ldr	r0, [r3, #72]	; 0x48
   21d94:	bl	24438 <makePreferencesFilePath@@Base>
   21d98:	subs	r5, r0, #0
   21d9c:	moveq	r4, r5
   21da0:	beq	21dbc <loadPreferences@@Base+0x38>
   21da4:	bl	1cb98 <testFilePath@@Base>
   21da8:	cmp	r0, #0
   21dac:	moveq	r4, r0
   21db0:	bne	21e10 <loadPreferences@@Base+0x8c>
   21db4:	mov	r0, r5
   21db8:	bl	f4f4 <free@plt>
   21dbc:	ldr	r3, [pc, #116]	; 21e38 <loadPreferences@@Base+0xb4>
   21dc0:	add	r3, pc, r3
   21dc4:	ldr	r3, [r3]
   21dc8:	cmp	r3, #0
   21dcc:	beq	21e00 <loadPreferences@@Base+0x7c>
   21dd0:	ldr	r3, [pc, #100]	; 21e3c <loadPreferences@@Base+0xb8>
   21dd4:	add	r3, pc, r3
   21dd8:	ldr	r0, [r3, #76]	; 0x4c
   21ddc:	cmp	r0, #0
   21de0:	beq	21e00 <loadPreferences@@Base+0x7c>
   21de4:	bl	24460 <loadPreferencesFile@@Base>
   21de8:	cmp	r0, #0
   21dec:	beq	21e00 <loadPreferences@@Base+0x7c>
   21df0:	mov	r4, #1
   21df4:	bl	21d24 <reconfigureWindow@@Base+0x6c>
   21df8:	mov	r0, r4
   21dfc:	pop	{r3, r4, r5, pc}
   21e00:	cmp	r4, #0
   21e04:	bne	21df0 <loadPreferences@@Base+0x6c>
   21e08:	bl	243b0 <resetPreferences@@Base>
   21e0c:	b	21df4 <loadPreferences@@Base+0x70>
   21e10:	ldr	r3, [pc, #40]	; 21e40 <loadPreferences@@Base+0xbc>
   21e14:	mov	r0, r5
   21e18:	mov	r2, #0
   21e1c:	add	r3, pc, r3
   21e20:	str	r2, [r3]
   21e24:	bl	24460 <loadPreferencesFile@@Base>
   21e28:	adds	r4, r0, #0
   21e2c:	movne	r4, #1
   21e30:	b	21db4 <loadPreferences@@Base+0x30>
   21e34:	andeq	r1, r5, r4, lsl #18
   21e38:			; <UNDEFINED> instruction: 0x000512b8
   21e3c:			; <UNDEFINED> instruction: 0x000518bc
   21e40:	andeq	r1, r5, ip, asr r2

00021e44 <savePreferences@@Base>:
   21e44:	ldr	r3, [pc, #116]	; 21ec0 <savePreferences@@Base+0x7c>
   21e48:	push	{r4, lr}
   21e4c:	add	r3, pc, r3
   21e50:	ldr	r0, [r3, #72]	; 0x48
   21e54:	bl	24438 <makePreferencesFilePath@@Base>
   21e58:	subs	r4, r0, #0
   21e5c:	beq	21e74 <savePreferences@@Base+0x30>
   21e60:	bl	2476c <savePreferencesFile@@Base>
   21e64:	cmp	r0, #0
   21e68:	bne	21ea0 <savePreferences@@Base+0x5c>
   21e6c:	mov	r0, r4
   21e70:	bl	f4f4 <free@plt>
   21e74:	ldr	r1, [pc, #72]	; 21ec4 <savePreferences@@Base+0x80>
   21e78:	mov	r2, #5
   21e7c:	mov	r0, #0
   21e80:	add	r1, pc, r1
   21e84:	bl	f9bc <dcgettext@plt>
   21e88:	mov	r1, r0
   21e8c:	mov	r0, #0
   21e90:	mov	r2, r0
   21e94:	bl	13558 <message@@Base>
   21e98:	mov	r0, #0
   21e9c:	pop	{r4, pc}
   21ea0:	ldr	r3, [pc, #32]	; 21ec8 <savePreferences@@Base+0x84>
   21ea4:	mov	r0, r4
   21ea8:	mov	r2, #0
   21eac:	add	r3, pc, r3
   21eb0:	str	r2, [r3]
   21eb4:	bl	f4f4 <free@plt>
   21eb8:	mov	r0, #1
   21ebc:	pop	{r4, pc}
   21ec0:	andeq	r1, r5, r4, asr #16
   21ec4:	andeq	sp, r2, r4, lsr sl
   21ec8:	andeq	r1, r5, ip, asr #3

00021ecc <initializeBraille@@Base>:
   21ecc:	ldr	r3, [pc, #36]	; 21ef8 <initializeBraille@@Base+0x2c>
   21ed0:	ldr	r2, [pc, #36]	; 21efc <initializeBraille@@Base+0x30>
   21ed4:	add	r3, pc, r3
   21ed8:	push	{r4, lr}
   21edc:	ldr	r4, [r3, r2]
   21ee0:	mov	r0, r4
   21ee4:	bl	3d948 <initializeBrailleDisplay@@Base>
   21ee8:	ldr	r3, [pc, #16]	; 21f00 <initializeBraille@@Base+0x34>
   21eec:	add	r3, pc, r3
   21ef0:	str	r3, [r4, #44]	; 0x2c
   21ef4:	pop	{r4, pc}
   21ef8:	andeq	r0, r5, r4, lsr #23
   21efc:	andeq	r0, r0, r8, asr #10
   21f00:			; <UNDEFINED> instruction: 0xfffffba8

00021f04 <constructBrailleDriver@@Base>:
   21f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f08:	sub	sp, sp, #36	; 0x24
   21f0c:	ldr	r4, [pc, #912]	; 222a4 <constructBrailleDriver@@Base+0x3a0>
   21f10:	ldr	r3, [pc, #912]	; 222a8 <constructBrailleDriver@@Base+0x3a4>
   21f14:	add	r4, pc, r4
   21f18:	ldr	r6, [pc, #908]	; 222ac <constructBrailleDriver@@Base+0x3a8>
   21f1c:	ldr	r7, [r4, r3]
   21f20:	add	r6, pc, r6
   21f24:	ldr	r3, [r7]
   21f28:	str	r3, [sp, #28]
   21f2c:	bl	21ecc <initializeBraille@@Base>
   21f30:	ldr	r2, [pc, #888]	; 222b0 <constructBrailleDriver@@Base+0x3ac>
   21f34:	ldr	r3, [pc, #888]	; 222b4 <constructBrailleDriver@@Base+0x3b0>
   21f38:	ldr	r1, [r6, #80]	; 0x50
   21f3c:	ldr	r9, [r4, r2]
   21f40:	ldr	r5, [r4, r3]
   21f44:	ldr	r2, [r6, #8]
   21f48:	ldr	r3, [r9]
   21f4c:	mov	r0, r5
   21f50:	ldr	r3, [r3, #36]	; 0x24
   21f54:	blx	r3
   21f58:	subs	r8, r0, #0
   21f5c:	beq	220b8 <constructBrailleDriver@@Base+0x1b4>
   21f60:	mov	r0, r5
   21f64:	mov	r1, #6
   21f68:	bl	3db88 <ensureBrailleBuffer@@Base>
   21f6c:	subs	r8, r0, #0
   21f70:	beq	22108 <constructBrailleDriver@@Base+0x204>
   21f74:	ldr	r3, [r5, #16]
   21f78:	mov	r2, #1
   21f7c:	str	r2, [r6, #84]	; 0x54
   21f80:	cmp	r3, #0
   21f84:	beq	220b0 <constructBrailleDriver@@Base+0x1ac>
   21f88:	ldr	r1, [pc, #808]	; 222b8 <constructBrailleDriver@@Base+0x3b4>
   21f8c:	mov	r2, #5
   21f90:	mov	r0, #0
   21f94:	ldr	r8, [pc, #800]	; 222bc <constructBrailleDriver@@Base+0x3b8>
   21f98:	add	r1, pc, r1
   21f9c:	bl	f9bc <dcgettext@plt>
   21fa0:	add	r8, pc, r8
   21fa4:	ldr	r3, [r5, #16]
   21fa8:	mov	r1, r8
   21fac:	mov	r2, r0
   21fb0:	mov	r0, #6
   21fb4:	bl	1c634 <logMessage@@Base>
   21fb8:	ldr	r3, [r5, #20]
   21fbc:	cmp	r3, #0
   21fc0:	beq	22098 <constructBrailleDriver@@Base+0x194>
   21fc4:	ldr	r3, [r9]
   21fc8:	add	r0, sp, #8
   21fcc:	ldr	r2, [pc, #748]	; 222c0 <constructBrailleDriver@@Base+0x3bc>
   21fd0:	mov	r1, #5
   21fd4:	ldr	lr, [pc, #744]	; 222c4 <constructBrailleDriver@@Base+0x3c0>
   21fd8:	add	r2, pc, r2
   21fdc:	str	r2, [sp, #8]
   21fe0:	ldr	r2, [r5, #16]
   21fe4:	add	lr, pc, lr
   21fe8:	ldr	ip, [r3, #4]
   21fec:	ldr	r3, [pc, #724]	; 222c8 <constructBrailleDriver@@Base+0x3c4>
   21ff0:	str	lr, [sp, #16]
   21ff4:	add	r3, pc, r3
   21ff8:	str	ip, [sp, #12]
   21ffc:	str	r2, [sp, #20]
   22000:	str	r3, [sp, #24]
   22004:	bl	1dcd0 <joinStrings@@Base>
   22008:	subs	sl, r0, #0
   2200c:	beq	22098 <constructBrailleDriver@@Base+0x194>
   22010:	ldr	r3, [pc, #692]	; 222cc <constructBrailleDriver@@Base+0x3c8>
   22014:	mov	r1, sl
   22018:	ldr	r3, [r4, r3]
   2201c:	ldr	r0, [r3]
   22020:	bl	1c9c8 <makePath@@Base>
   22024:	subs	fp, r0, #0
   22028:	beq	22090 <constructBrailleDriver@@Base+0x18c>
   2202c:	ldr	r1, [r5, #20]
   22030:	bl	34568 <compileKeyTable@@Base>
   22034:	cmp	r0, #0
   22038:	str	r0, [r5, #24]
   2203c:	beq	22208 <constructBrailleDriver@@Base+0x304>
   22040:	ldr	r3, [pc, #648]	; 222d0 <constructBrailleDriver@@Base+0x3cc>
   22044:	ldr	r1, [r4, r3]
   22048:	add	r1, r1, #3
   2204c:	bl	352d0 <setKeyEventLoggingFlag@@Base>
   22050:	ldr	r1, [pc, #636]	; 222d4 <constructBrailleDriver@@Base+0x3d0>
   22054:	mov	r2, #5
   22058:	mov	r0, #0
   2205c:	add	r1, pc, r1
   22060:	bl	f9bc <dcgettext@plt>
   22064:	mov	r1, r8
   22068:	mov	r3, fp
   2206c:	mov	r2, r0
   22070:	mov	r0, #6
   22074:	bl	1c634 <logMessage@@Base>
   22078:	add	r0, r6, #88	; 0x58
   2207c:	bl	2164c <releaseAllKeys@@Base+0x98c>
   22080:	cmp	r0, #0
   22084:	bne	22130 <constructBrailleDriver@@Base+0x22c>
   22088:	mov	r0, fp
   2208c:	bl	f4f4 <free@plt>
   22090:	mov	r0, sl
   22094:	bl	f4f4 <free@plt>
   22098:	ldr	r6, [r5, #24]
   2209c:	cmp	r6, #0
   220a0:	beq	22148 <constructBrailleDriver@@Base+0x244>
   220a4:	bl	394e4 <getHelpLineCount@@Base>
   220a8:	cmp	r0, #0
   220ac:	beq	2211c <constructBrailleDriver@@Base+0x218>
   220b0:	mov	r8, #1
   220b4:	b	220ec <constructBrailleDriver@@Base+0x1e8>
   220b8:	ldr	r1, [pc, #536]	; 222d8 <constructBrailleDriver@@Base+0x3d4>
   220bc:	mov	r2, #5
   220c0:	add	r1, pc, r1
   220c4:	bl	f9bc <dcgettext@plt>
   220c8:	ldr	r3, [r9]
   220cc:	ldr	ip, [r6, #8]
   220d0:	ldr	r1, [pc, #516]	; 222dc <constructBrailleDriver@@Base+0x3d8>
   220d4:	ldr	r3, [r3, #4]
   220d8:	add	r1, pc, r1
   220dc:	str	ip, [sp]
   220e0:	mov	r2, r0
   220e4:	mov	r0, #7
   220e8:	bl	1c634 <logMessage@@Base>
   220ec:	ldr	r2, [sp, #28]
   220f0:	mov	r0, r8
   220f4:	ldr	r3, [r7]
   220f8:	cmp	r2, r3
   220fc:	bne	222a0 <constructBrailleDriver@@Base+0x39c>
   22100:	add	sp, sp, #36	; 0x24
   22104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22108:	ldr	r3, [r9]
   2210c:	mov	r0, r5
   22110:	ldr	r3, [r3, #40]	; 0x28
   22114:	blx	r3
   22118:	b	220ec <constructBrailleDriver@@Base+0x1e8>
   2211c:	ldr	r0, [pc, #444]	; 222e0 <constructBrailleDriver@@Base+0x3dc>
   22120:	mov	r8, #1
   22124:	add	r0, pc, r0
   22128:	bl	394c8 <addHelpLine@@Base>
   2212c:	b	220ec <constructBrailleDriver@@Base+0x1e8>
   22130:	ldr	r1, [pc, #428]	; 222e4 <constructBrailleDriver@@Base+0x3e0>
   22134:	mov	r2, #0
   22138:	ldr	r0, [r5, #24]
   2213c:	add	r1, pc, r1
   22140:	bl	35e08 <listKeyTable@@Base>
   22144:	b	22088 <constructBrailleDriver@@Base+0x184>
   22148:	ldr	r2, [r9]
   2214c:	add	r0, sp, #8
   22150:	ldr	r3, [pc, #400]	; 222e8 <constructBrailleDriver@@Base+0x3e4>
   22154:	mov	r1, #5
   22158:	ldr	lr, [r5, #16]
   2215c:	add	r3, pc, r3
   22160:	str	r3, [sp, #8]
   22164:	ldr	r2, [r2, #4]
   22168:	ldr	ip, [pc, #380]	; 222ec <constructBrailleDriver@@Base+0x3e8>
   2216c:	ldr	r3, [pc, #380]	; 222f0 <constructBrailleDriver@@Base+0x3ec>
   22170:	add	ip, pc, ip
   22174:	str	lr, [sp, #20]
   22178:	add	r3, pc, r3
   2217c:	str	ip, [sp, #16]
   22180:	str	r2, [sp, #12]
   22184:	str	r3, [sp, #24]
   22188:	bl	1dcd0 <joinStrings@@Base>
   2218c:	subs	r5, r0, #0
   22190:	beq	220a4 <constructBrailleDriver@@Base+0x1a0>
   22194:	ldr	r3, [pc, #304]	; 222cc <constructBrailleDriver@@Base+0x3c8>
   22198:	mov	r1, r5
   2219c:	ldr	r3, [r4, r3]
   221a0:	ldr	r0, [r3]
   221a4:	bl	1c9c8 <makePath@@Base>
   221a8:	subs	r4, r0, #0
   221ac:	beq	221fc <constructBrailleDriver@@Base+0x2f8>
   221b0:	ldr	r0, [pc, #316]	; 222f4 <constructBrailleDriver@@Base+0x3f0>
   221b4:	add	r0, pc, r0
   221b8:	add	r0, r0, #88	; 0x58
   221bc:	bl	2164c <releaseAllKeys@@Base+0x98c>
   221c0:	cmp	r0, #0
   221c4:	bne	22230 <constructBrailleDriver@@Base+0x32c>
   221c8:	ldr	r1, [pc, #296]	; 222f8 <constructBrailleDriver@@Base+0x3f4>
   221cc:	mov	r2, #5
   221d0:	mov	r0, #0
   221d4:	add	r1, pc, r1
   221d8:	bl	f9bc <dcgettext@plt>
   221dc:	ldr	r1, [pc, #280]	; 222fc <constructBrailleDriver@@Base+0x3f8>
   221e0:	mov	r3, r4
   221e4:	add	r1, pc, r1
   221e8:	mov	r2, r0
   221ec:	mov	r0, #4
   221f0:	bl	1c634 <logMessage@@Base>
   221f4:	mov	r0, r4
   221f8:	bl	f4f4 <free@plt>
   221fc:	mov	r0, r5
   22200:	bl	f4f4 <free@plt>
   22204:	b	220a4 <constructBrailleDriver@@Base+0x1a0>
   22208:	ldr	r1, [pc, #240]	; 22300 <constructBrailleDriver@@Base+0x3fc>
   2220c:	mov	r2, #5
   22210:	add	r1, pc, r1
   22214:	bl	f9bc <dcgettext@plt>
   22218:	mov	r1, r8
   2221c:	mov	r3, fp
   22220:	mov	r2, r0
   22224:	mov	r0, #4
   22228:	bl	1c634 <logMessage@@Base>
   2222c:	b	22088 <constructBrailleDriver@@Base+0x184>
   22230:	ldr	r1, [pc, #204]	; 22304 <constructBrailleDriver@@Base+0x400>
   22234:	mov	r0, r4
   22238:	mov	r2, r6
   2223c:	add	r1, pc, r1
   22240:	bl	1d1c0 <openDataFile@@Base>
   22244:	subs	r8, r0, #0
   22248:	beq	221c8 <constructBrailleDriver@@Base+0x2c4>
   2224c:	ldr	r1, [pc, #180]	; 22308 <constructBrailleDriver@@Base+0x404>
   22250:	mov	r2, r6
   22254:	add	r1, pc, r1
   22258:	bl	1d49c <processLines@@Base>
   2225c:	mov	r9, r0
   22260:	mov	r0, r8
   22264:	bl	fbc0 <fclose@plt>
   22268:	cmp	r9, #0
   2226c:	beq	221c8 <constructBrailleDriver@@Base+0x2c4>
   22270:	ldr	r1, [pc, #148]	; 2230c <constructBrailleDriver@@Base+0x408>
   22274:	mov	r0, r6
   22278:	mov	r2, #5
   2227c:	add	r1, pc, r1
   22280:	bl	f9bc <dcgettext@plt>
   22284:	ldr	r1, [pc, #132]	; 22310 <constructBrailleDriver@@Base+0x40c>
   22288:	mov	r3, r4
   2228c:	add	r1, pc, r1
   22290:	mov	r2, r0
   22294:	mov	r0, #6
   22298:	bl	1c634 <logMessage@@Base>
   2229c:	b	221f4 <constructBrailleDriver@@Base+0x2f0>
   222a0:	bl	f950 <__stack_chk_fail@plt>
   222a4:	andeq	r0, r5, r4, ror #22
   222a8:			; <UNDEFINED> instruction: 0x000003b4
   222ac:	andeq	r1, r5, r0, ror r7
   222b0:	andeq	r0, r0, ip, ror r4
   222b4:	andeq	r0, r0, r8, asr #10
   222b8:	andeq	sp, r2, r8, lsr #18
   222bc:	muleq	r2, r4, r3
   222c0:	strdeq	sp, [r2], -r8
   222c4:	strdeq	sp, [r2], -r4
   222c8:	andeq	sp, r2, r8, ror #17
   222cc:	andeq	r0, r0, r4, lsr r5
   222d0:	andeq	r0, r0, ip, ror r3
   222d4:	andeq	sp, r2, r8, lsl #17
   222d8:	andeq	sp, r2, r0, asr r8
   222dc:	andeq	sp, r2, r0, ror #16
   222e0:	andeq	lr, r2, r8, ror #11
   222e4:			; <UNDEFINED> instruction: 0xffffec8c
   222e8:	andeq	sp, r2, r4, ror r7
   222ec:	andeq	sp, r2, r8, ror #14
   222f0:	muleq	r2, r0, r7
   222f4:	ldrdeq	r1, [r5], -ip
   222f8:	andeq	sp, r2, r0, lsl #15
   222fc:	andeq	sp, r2, r0, asr r1
   22300:	andeq	sp, r2, r0, ror #13
   22304:	andeq	r5, r3, r0, asr lr
   22308:			; <UNDEFINED> instruction: 0xffffeb78
   2230c:	andeq	sp, r2, ip, asr #13
   22310:	andeq	sp, r2, r8, lsr #1
   22314:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22318:	sub	sp, sp, #40	; 0x28
   2231c:	ldr	r6, [pc, #668]	; 225c0 <constructBrailleDriver@@Base+0x6bc>
   22320:	mov	r8, r1
   22324:	ldr	r3, [pc, #664]	; 225c4 <constructBrailleDriver@@Base+0x6c0>
   22328:	mov	r9, r0
   2232c:	add	r6, pc, r6
   22330:	ldr	r5, [pc, #656]	; 225c8 <constructBrailleDriver@@Base+0x6c4>
   22334:	ldr	r7, [r6, r3]
   22338:	add	r5, pc, r5
   2233c:	add	r1, r5, #92	; 0x5c
   22340:	ldr	r2, [r5, #32]
   22344:	ldr	ip, [r7]
   22348:	str	ip, [sp, #36]	; 0x24
   2234c:	bl	3d8c4 <loadBrailleDriver@@Base>
   22350:	ldr	r3, [pc, #628]	; 225cc <constructBrailleDriver@@Base+0x6c8>
   22354:	ldr	r4, [r6, r3]
   22358:	cmp	r0, #0
   2235c:	mov	r2, r0
   22360:	str	r0, [r4]
   22364:	beq	22580 <constructBrailleDriver@@Base+0x67c>
   22368:	ldr	r1, [r2, #4]
   2236c:	ldr	r0, [r0, #28]
   22370:	ldr	r2, [r5, #96]	; 0x60
   22374:	bl	1e2f8 <getParameters@@Base>
   22378:	cmp	r0, #0
   2237c:	str	r0, [r5, #80]	; 0x50
   22380:	beq	224e8 <constructBrailleDriver@@Base+0x5e4>
   22384:	cmp	r8, #0
   22388:	beq	22530 <constructBrailleDriver@@Base+0x62c>
   2238c:	ldr	r1, [pc, #572]	; 225d0 <constructBrailleDriver@@Base+0x6cc>
   22390:	mov	r2, #5
   22394:	mov	r0, #0
   22398:	ldr	r5, [pc, #564]	; 225d4 <constructBrailleDriver@@Base+0x6d0>
   2239c:	add	r1, pc, r1
   223a0:	ldr	r9, [pc, #560]	; 225d8 <constructBrailleDriver@@Base+0x6d4>
   223a4:	bl	f9bc <dcgettext@plt>
   223a8:	ldr	ip, [r4]
   223ac:	ldr	r1, [pc, #552]	; 225dc <constructBrailleDriver@@Base+0x6d8>
   223b0:	add	r5, pc, r5
   223b4:	add	r9, pc, r9
   223b8:	ldr	r3, [ip, #4]
   223bc:	add	r1, pc, r1
   223c0:	ldr	ip, [ip]
   223c4:	str	ip, [sp]
   223c8:	mov	r2, r0
   223cc:	mov	r0, #6
   223d0:	bl	1c634 <logMessage@@Base>
   223d4:	ldr	r0, [r4]
   223d8:	mov	r1, #0
   223dc:	bl	3d92c <identifyBrailleDriver@@Base>
   223e0:	ldr	r3, [r4]
   223e4:	ldr	r1, [pc, #500]	; 225e0 <constructBrailleDriver@@Base+0x6dc>
   223e8:	mov	r2, #5
   223ec:	mov	r0, #0
   223f0:	ldr	r8, [r5, #80]	; 0x50
   223f4:	add	r1, pc, r1
   223f8:	ldr	sl, [r3, #28]
   223fc:	bl	f9bc <dcgettext@plt>
   22400:	mov	r1, r8
   22404:	ldr	r8, [pc, #472]	; 225e4 <constructBrailleDriver@@Base+0x6e0>
   22408:	add	r8, pc, r8
   2240c:	mov	r2, r0
   22410:	mov	r0, sl
   22414:	bl	1e698 <logParameters@@Base>
   22418:	ldr	r1, [pc, #456]	; 225e8 <constructBrailleDriver@@Base+0x6e4>
   2241c:	mov	r2, #5
   22420:	mov	r0, #0
   22424:	add	r1, pc, r1
   22428:	bl	f9bc <dcgettext@plt>
   2242c:	ldr	r3, [r5, #8]
   22430:	mov	r1, r9
   22434:	mov	r2, r0
   22438:	mov	r0, #6
   2243c:	bl	1c634 <logMessage@@Base>
   22440:	ldr	r3, [r4]
   22444:	ldr	lr, [pc, #416]	; 225ec <constructBrailleDriver@@Base+0x6e8>
   22448:	add	r0, sp, #12
   2244c:	ldr	ip, [pc, #412]	; 225f0 <constructBrailleDriver@@Base+0x6ec>
   22450:	mov	r1, #6
   22454:	ldr	r2, [pc, #408]	; 225f4 <constructBrailleDriver@@Base+0x6f0>
   22458:	add	lr, pc, lr
   2245c:	str	r8, [sp, #12]
   22460:	add	ip, pc, ip
   22464:	add	r2, pc, r2
   22468:	str	lr, [sp, #16]
   2246c:	str	r2, [sp, #24]
   22470:	str	ip, [sp, #20]
   22474:	ldr	r3, [r3, #4]
   22478:	ldr	r2, [pc, #376]	; 225f8 <constructBrailleDriver@@Base+0x6f4>
   2247c:	str	r3, [sp, #28]
   22480:	add	r2, pc, r2
   22484:	str	r2, [sp, #32]
   22488:	bl	1dcd0 <joinStrings@@Base>
   2248c:	cmp	r0, #0
   22490:	mov	r8, r0
   22494:	str	r0, [r5, #76]	; 0x4c
   22498:	beq	224cc <constructBrailleDriver@@Base+0x5c8>
   2249c:	ldr	r1, [pc, #344]	; 225fc <constructBrailleDriver@@Base+0x6f8>
   224a0:	mov	r2, #5
   224a4:	mov	r0, #0
   224a8:	add	r1, pc, r1
   224ac:	bl	f9bc <dcgettext@plt>
   224b0:	mov	r1, r9
   224b4:	mov	r3, r8
   224b8:	mov	r2, r0
   224bc:	mov	r0, #6
   224c0:	bl	1c634 <logMessage@@Base>
   224c4:	mov	r0, #1
   224c8:	b	22518 <constructBrailleDriver@@Base+0x614>
   224cc:	bl	1c740 <logMallocError@@Base>
   224d0:	ldr	r5, [pc, #296]	; 22600 <constructBrailleDriver@@Base+0x6fc>
   224d4:	add	r5, pc, r5
   224d8:	ldr	r0, [r5, #80]	; 0x50
   224dc:	bl	1db88 <deallocateStrings@@Base>
   224e0:	mov	r3, #0
   224e4:	str	r3, [r5, #80]	; 0x50
   224e8:	ldr	r5, [pc, #276]	; 22604 <constructBrailleDriver@@Base+0x700>
   224ec:	add	r5, pc, r5
   224f0:	ldr	r0, [r5, #92]	; 0x5c
   224f4:	cmp	r0, #0
   224f8:	beq	22508 <constructBrailleDriver@@Base+0x604>
   224fc:	bl	1f7f4 <unloadSharedObject@@Base>
   22500:	mov	r3, #0
   22504:	str	r3, [r5, #92]	; 0x5c
   22508:	ldr	r3, [pc, #248]	; 22608 <constructBrailleDriver@@Base+0x704>
   2250c:	mov	r0, #0
   22510:	ldr	r3, [r6, r3]
   22514:	str	r3, [r4]
   22518:	ldr	r2, [sp, #36]	; 0x24
   2251c:	ldr	r3, [r7]
   22520:	cmp	r2, r3
   22524:	bne	225bc <constructBrailleDriver@@Base+0x6b8>
   22528:	add	sp, sp, #40	; 0x28
   2252c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22530:	ldr	r2, [r4]
   22534:	mov	r0, #7
   22538:	ldr	r1, [pc, #204]	; 2260c <constructBrailleDriver@@Base+0x708>
   2253c:	ldr	r3, [r5, #8]
   22540:	add	r1, pc, r1
   22544:	ldr	r2, [r2, #4]
   22548:	bl	1c634 <logMessage@@Base>
   2254c:	bl	21f04 <constructBrailleDriver@@Base>
   22550:	cmp	r0, #0
   22554:	beq	224d0 <constructBrailleDriver@@Base+0x5cc>
   22558:	ldr	r3, [pc, #176]	; 22610 <constructBrailleDriver@@Base+0x70c>
   2255c:	ldr	r3, [r6, r3]
   22560:	ldr	r3, [r3]
   22564:	cmp	r3, #0
   22568:	bne	225ac <constructBrailleDriver@@Base+0x6a8>
   2256c:	ldr	r3, [pc, #160]	; 22614 <constructBrailleDriver@@Base+0x710>
   22570:	ldr	r2, [r4]
   22574:	add	r3, pc, r3
   22578:	str	r2, [r3, #100]	; 0x64
   2257c:	b	2238c <constructBrailleDriver@@Base+0x488>
   22580:	ldr	r1, [pc, #144]	; 22618 <constructBrailleDriver@@Base+0x714>
   22584:	mov	r2, #5
   22588:	add	r1, pc, r1
   2258c:	bl	f9bc <dcgettext@plt>
   22590:	ldr	r1, [pc, #132]	; 2261c <constructBrailleDriver@@Base+0x718>
   22594:	mov	r3, r9
   22598:	add	r1, pc, r1
   2259c:	mov	r2, r0
   225a0:	mov	r0, #3
   225a4:	bl	1c634 <logMessage@@Base>
   225a8:	b	22508 <constructBrailleDriver@@Base+0x604>
   225ac:	ldr	r3, [pc, #108]	; 22620 <constructBrailleDriver@@Base+0x71c>
   225b0:	ldr	r0, [r6, r3]
   225b4:	bl	4cb3c <api_link@@Base>
   225b8:	b	2256c <constructBrailleDriver@@Base+0x668>
   225bc:	bl	f950 <__stack_chk_fail@plt>
   225c0:	andeq	r0, r5, ip, asr #14
   225c4:			; <UNDEFINED> instruction: 0x000003b4
   225c8:	andeq	r1, r5, r8, asr r3
   225cc:	andeq	r0, r0, ip, ror r4
   225d0:	andeq	sp, r2, ip, lsr #12
   225d4:	andeq	r1, r5, r0, ror #5
   225d8:	andeq	ip, r2, r0, lsl #31
   225dc:	andeq	sp, r2, r8, lsl r4
   225e0:	andeq	sp, r2, r4, ror #11
   225e4:	strdeq	sp, [r2], -r4
   225e8:	andeq	sp, r2, r8, asr #11
   225ec:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   225f0:	andeq	ip, r2, r0, asr #11
   225f4:	andeq	sp, r2, r4, ror r4
   225f8:	andeq	sp, r2, r4, lsl #11
   225fc:	andeq	sp, r2, ip, ror #9
   22600:			; <UNDEFINED> instruction: 0x000511bc
   22604:	andeq	r1, r5, r4, lsr #3
   22608:	andeq	r0, r0, r0, lsr #10
   2260c:	andeq	sp, r2, ip, lsr #8
   22610:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22614:	andeq	r1, r5, ip, lsl r1
   22618:	andeq	sp, r2, r4, lsr #8
   2261c:	muleq	r2, ip, sp
   22620:	andeq	r0, r0, r8, asr #10

00022624 <destructBrailleDriver@@Base>:
   22624:	push	{r4, r5, r6, lr}
   22628:	mov	r3, #0
   2262c:	ldr	r6, [pc, #104]	; 2269c <destructBrailleDriver@@Base+0x78>
   22630:	mov	r1, r3
   22634:	ldr	r5, [pc, #100]	; 226a0 <destructBrailleDriver@@Base+0x7c>
   22638:	ldr	r2, [pc, #100]	; 226a4 <destructBrailleDriver@@Base+0x80>
   2263c:	add	r6, pc, r6
   22640:	add	r5, pc, r5
   22644:	str	r3, [r6, #84]	; 0x54
   22648:	ldr	r4, [r5, r2]
   2264c:	mov	r0, r4
   22650:	bl	3d9a4 <drainBrailleOutput@@Base>
   22654:	ldr	r3, [pc, #76]	; 226a8 <destructBrailleDriver@@Base+0x84>
   22658:	mov	r0, r4
   2265c:	ldr	r3, [r5, r3]
   22660:	ldr	r3, [r3]
   22664:	ldr	r3, [r3, #40]	; 0x28
   22668:	blx	r3
   2266c:	ldr	r0, [r6, #88]	; 0x58
   22670:	cmp	r0, #0
   22674:	bne	22694 <destructBrailleDriver@@Base+0x70>
   22678:	ldr	r0, [r4, #24]
   2267c:	cmp	r0, #0
   22680:	popeq	{r4, r5, r6, pc}
   22684:	bl	34448 <destroyKeyTable@@Base>
   22688:	mov	r3, #0
   2268c:	str	r3, [r4, #24]
   22690:	pop	{r4, r5, r6, pc}
   22694:	bl	2168c <releaseAllKeys@@Base+0x9cc>
   22698:	b	22678 <destructBrailleDriver@@Base+0x54>
   2269c:	andeq	r1, r5, r4, asr r0
   226a0:	andeq	r0, r5, r8, lsr r4
   226a4:	andeq	r0, r0, r8, asr #10
   226a8:	andeq	r0, r0, ip, ror r4
   226ac:	ldr	r3, [pc, #228]	; 22798 <destructBrailleDriver@@Base+0x174>
   226b0:	push	{r4, lr}
   226b4:	add	r3, pc, r3
   226b8:	ldr	r4, [pc, #220]	; 2279c <destructBrailleDriver@@Base+0x178>
   226bc:	ldr	r3, [r3, #100]	; 0x64
   226c0:	add	r4, pc, r4
   226c4:	cmp	r3, #0
   226c8:	beq	2271c <destructBrailleDriver@@Base+0xf8>
   226cc:	ldr	r3, [pc, #204]	; 227a0 <destructBrailleDriver@@Base+0x17c>
   226d0:	ldr	r3, [r4, r3]
   226d4:	ldr	r3, [r3]
   226d8:	cmp	r3, #0
   226dc:	bne	22780 <destructBrailleDriver@@Base+0x15c>
   226e0:	ldr	r3, [pc, #188]	; 227a4 <destructBrailleDriver@@Base+0x180>
   226e4:	add	r3, pc, r3
   226e8:	ldr	r3, [r3, #84]	; 0x54
   226ec:	cmp	r3, #0
   226f0:	bne	22790 <destructBrailleDriver@@Base+0x16c>
   226f4:	ldr	r1, [pc, #172]	; 227a8 <destructBrailleDriver@@Base+0x184>
   226f8:	mov	r2, #0
   226fc:	ldr	r0, [pc, #168]	; 227ac <destructBrailleDriver@@Base+0x188>
   22700:	ldr	r3, [pc, #168]	; 227b0 <destructBrailleDriver@@Base+0x18c>
   22704:	ldr	r1, [r4, r1]
   22708:	ldr	r0, [r4, r0]
   2270c:	add	r3, pc, r3
   22710:	str	r2, [r3, #8]
   22714:	str	r2, [r3, #100]	; 0x64
   22718:	str	r0, [r1]
   2271c:	ldr	r4, [pc, #144]	; 227b4 <destructBrailleDriver@@Base+0x190>
   22720:	add	r4, pc, r4
   22724:	ldr	r0, [r4, #92]	; 0x5c
   22728:	cmp	r0, #0
   2272c:	beq	2273c <destructBrailleDriver@@Base+0x118>
   22730:	bl	1f7f4 <unloadSharedObject@@Base>
   22734:	mov	r3, #0
   22738:	str	r3, [r4, #92]	; 0x5c
   2273c:	ldr	r4, [pc, #116]	; 227b8 <destructBrailleDriver@@Base+0x194>
   22740:	add	r4, pc, r4
   22744:	ldr	r0, [r4, #80]	; 0x50
   22748:	cmp	r0, #0
   2274c:	beq	2275c <destructBrailleDriver@@Base+0x138>
   22750:	bl	1db88 <deallocateStrings@@Base>
   22754:	mov	r3, #0
   22758:	str	r3, [r4, #80]	; 0x50
   2275c:	ldr	r4, [pc, #88]	; 227bc <destructBrailleDriver@@Base+0x198>
   22760:	add	r4, pc, r4
   22764:	ldr	r0, [r4, #76]	; 0x4c
   22768:	cmp	r0, #0
   2276c:	popeq	{r4, pc}
   22770:	bl	f4f4 <free@plt>
   22774:	mov	r3, #0
   22778:	str	r3, [r4, #76]	; 0x4c
   2277c:	pop	{r4, pc}
   22780:	ldr	r3, [pc, #56]	; 227c0 <destructBrailleDriver@@Base+0x19c>
   22784:	ldr	r0, [r4, r3]
   22788:	bl	4cc30 <api_unlink@@Base>
   2278c:	b	226e0 <destructBrailleDriver@@Base+0xbc>
   22790:	bl	22624 <destructBrailleDriver@@Base>
   22794:	b	226f4 <destructBrailleDriver@@Base+0xd0>
   22798:	ldrdeq	r0, [r5], -ip
   2279c:			; <UNDEFINED> instruction: 0x000503b8
   227a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227a4:	andeq	r0, r5, ip, lsr #31
   227a8:	andeq	r0, r0, ip, ror r4
   227ac:	andeq	r0, r0, r0, lsr #10
   227b0:	andeq	r0, r5, r4, lsl #31
   227b4:	andeq	r0, r5, r0, ror pc
   227b8:	andeq	r0, r5, r0, asr pc
   227bc:	andeq	r0, r5, r0, lsr pc
   227c0:	andeq	r0, r0, r8, asr #10
   227c4:	ldr	r3, [pc, #92]	; 22828 <destructBrailleDriver@@Base+0x204>
   227c8:	push	{r4, lr}
   227cc:	add	r3, pc, r3
   227d0:	ldr	r4, [pc, #84]	; 2282c <destructBrailleDriver@@Base+0x208>
   227d4:	ldr	r3, [r3, #84]	; 0x54
   227d8:	add	r4, pc, r4
   227dc:	cmp	r3, #0
   227e0:	beq	22814 <destructBrailleDriver@@Base+0x1f0>
   227e4:	ldr	r3, [pc, #68]	; 22830 <destructBrailleDriver@@Base+0x20c>
   227e8:	ldr	r0, [r4, r3]
   227ec:	bl	3db78 <clearStatusCells@@Base>
   227f0:	ldr	r1, [pc, #60]	; 22834 <destructBrailleDriver@@Base+0x210>
   227f4:	mov	r2, #5
   227f8:	mov	r0, #0
   227fc:	add	r1, pc, r1
   22800:	bl	f9bc <dcgettext@plt>
   22804:	mov	r2, #5
   22808:	mov	r1, r0
   2280c:	mov	r0, #0
   22810:	bl	13558 <message@@Base>
   22814:	bl	226ac <destructBrailleDriver@@Base+0x88>
   22818:	ldr	r3, [pc, #24]	; 22838 <destructBrailleDriver@@Base+0x214>
   2281c:	ldr	r0, [r4, r3]
   22820:	pop	{r4, lr}
   22824:	b	37160 <playTune@@Base>
   22828:	andeq	r0, r5, r4, asr #29
   2282c:	andeq	r0, r5, r0, lsr #5
   22830:	andeq	r0, r0, r8, asr #10
   22834:	andeq	sp, r2, r0, lsl r2
   22838:	andeq	r0, r0, r8, asr #8
   2283c:	push	{r4, r5, r6, r7, lr}
   22840:	sub	sp, sp, #268	; 0x10c
   22844:	ldr	r4, [pc, #372]	; 229c0 <destructBrailleDriver@@Base+0x39c>
   22848:	ldr	r3, [pc, #372]	; 229c4 <destructBrailleDriver@@Base+0x3a0>
   2284c:	add	r4, pc, r4
   22850:	ldr	r6, [r4, r3]
   22854:	ldr	r3, [r6]
   22858:	str	r3, [sp, #260]	; 0x104
   2285c:	bl	45ec0 <usbForgetDevices@@Base>
   22860:	bl	45f44 <bthForgetConnectErrors@@Base>
   22864:	mov	r0, #0
   22868:	bl	21028 <releaseAllKeys@@Base+0x368>
   2286c:	cmp	r0, #0
   22870:	beq	22950 <destructBrailleDriver@@Base+0x32c>
   22874:	ldr	r3, [pc, #332]	; 229c8 <destructBrailleDriver@@Base+0x3a4>
   22878:	add	r3, pc, r3
   2287c:	ldr	r3, [r3]
   22880:	cmp	r3, #0
   22884:	bne	22930 <destructBrailleDriver@@Base+0x30c>
   22888:	bl	21cdc <reconfigureWindow@@Base+0x24>
   2288c:	ldr	r2, [pc, #312]	; 229cc <destructBrailleDriver@@Base+0x3a8>
   22890:	ldr	r3, [pc, #312]	; 229d0 <destructBrailleDriver@@Base+0x3ac>
   22894:	ldr	r5, [r4, r2]
   22898:	ldr	r2, [r4, r3]
   2289c:	ldr	r1, [r5, #8]
   228a0:	ldr	r3, [r5, #12]
   228a4:	ldr	r2, [r2]
   228a8:	mul	r3, r1, r3
   228ac:	ldr	r0, [r2, #32]
   228b0:	adds	r2, r3, #0
   228b4:	movne	r2, #1
   228b8:	cmp	r0, #0
   228bc:	movne	r2, #0
   228c0:	cmp	r2, #0
   228c4:	beq	228e0 <destructBrailleDriver@@Base+0x2bc>
   228c8:	ldr	r2, [pc, #260]	; 229d4 <destructBrailleDriver@@Base+0x3b0>
   228cc:	cmp	r3, #7
   228d0:	movcs	r3, #7
   228d4:	add	r2, pc, r2
   228d8:	add	r3, r2, r3, lsl #2
   228dc:	ldr	r0, [r3, #96]	; 0x60
   228e0:	bl	24348 <setStatusFields@@Base>
   228e4:	ldr	r3, [pc, #236]	; 229d8 <destructBrailleDriver@@Base+0x3b4>
   228e8:	ldr	r0, [r4, r3]
   228ec:	bl	37160 <playTune@@Base>
   228f0:	mov	r0, r5
   228f4:	bl	3db78 <clearStatusCells@@Base>
   228f8:	cmp	r0, #0
   228fc:	beq	229ac <destructBrailleDriver@@Base+0x388>
   22900:	ldr	r3, [pc, #212]	; 229dc <destructBrailleDriver@@Base+0x3b8>
   22904:	add	r3, pc, r3
   22908:	ldr	r4, [r3, #52]	; 0x34
   2290c:	cmp	r4, #0
   22910:	beq	22984 <destructBrailleDriver@@Base+0x360>
   22914:	mov	r0, #1
   22918:	ldr	r2, [sp, #260]	; 0x104
   2291c:	ldr	r3, [r6]
   22920:	cmp	r2, r3
   22924:	bne	229bc <destructBrailleDriver@@Base+0x398>
   22928:	add	sp, sp, #268	; 0x10c
   2292c:	pop	{r4, r5, r6, r7, pc}
   22930:	ldr	r3, [pc, #168]	; 229e0 <destructBrailleDriver@@Base+0x3bc>
   22934:	add	r3, pc, r3
   22938:	ldr	r0, [r3, #76]	; 0x4c
   2293c:	bl	24460 <loadPreferencesFile@@Base>
   22940:	cmp	r0, #0
   22944:	beq	229b4 <destructBrailleDriver@@Base+0x390>
   22948:	bl	21d24 <reconfigureWindow@@Base+0x6c>
   2294c:	b	2288c <destructBrailleDriver@@Base+0x268>
   22950:	ldr	r3, [pc, #116]	; 229cc <destructBrailleDriver@@Base+0x3a8>
   22954:	ldr	r5, [r4, r3]
   22958:	ldr	r1, [pc, #132]	; 229e4 <destructBrailleDriver@@Base+0x3c0>
   2295c:	mov	r2, #0
   22960:	movw	r0, #5000	; 0x1388
   22964:	add	r1, pc, r1
   22968:	bl	27b48 <asyncRelativeAlarm@@Base>
   2296c:	bl	21ecc <initializeBraille@@Base>
   22970:	mov	r0, r5
   22974:	mov	r1, #7
   22978:	bl	3db88 <ensureBrailleBuffer@@Base>
   2297c:	mov	r0, #0
   22980:	b	22918 <destructBrailleDriver@@Base+0x2f4>
   22984:	add	r7, sp, #4
   22988:	mov	r1, #256	; 0x100
   2298c:	mov	r0, r7
   22990:	bl	1a290 <makeProgramBanner@@Base>
   22994:	mov	r0, r4
   22998:	mov	r1, r7
   2299c:	mov	r2, #1
   229a0:	bl	13558 <message@@Base>
   229a4:	cmp	r0, #0
   229a8:	bne	22914 <destructBrailleDriver@@Base+0x2f0>
   229ac:	bl	226ac <destructBrailleDriver@@Base+0x88>
   229b0:	b	22958 <destructBrailleDriver@@Base+0x334>
   229b4:	bl	243b0 <resetPreferences@@Base>
   229b8:	b	22948 <destructBrailleDriver@@Base+0x324>
   229bc:	bl	f950 <__stack_chk_fail@plt>
   229c0:	andeq	r0, r5, ip, lsr #4
   229c4:			; <UNDEFINED> instruction: 0x000003b4
   229c8:	andeq	r0, r5, r0, lsl #16
   229cc:	andeq	r0, r0, r8, asr #10
   229d0:	andeq	r0, r0, ip, ror r4
   229d4:	andeq	ip, r4, ip, asr sp
   229d8:	andeq	r0, r0, r4, asr r5
   229dc:	andeq	r0, r5, ip, lsl #27
   229e0:	andeq	r0, r5, ip, asr sp
   229e4:	andeq	r0, r0, ip, ror r0
   229e8:	ldr	r3, [pc, #16]	; 22a00 <destructBrailleDriver@@Base+0x3dc>
   229ec:	add	r3, pc, r3
   229f0:	ldr	r3, [r3, #100]	; 0x64
   229f4:	cmp	r3, #0
   229f8:	bxne	lr
   229fc:	b	2283c <destructBrailleDriver@@Base+0x218>
   22a00:	andeq	r0, r5, r4, lsr #25

00022a04 <restartBrailleDriver@@Base>:
   22a04:	push	{r3, lr}
   22a08:	bl	226ac <destructBrailleDriver@@Base+0x88>
   22a0c:	ldr	r3, [pc, #52]	; 22a48 <restartBrailleDriver@@Base+0x44>
   22a10:	ldr	r2, [pc, #52]	; 22a4c <restartBrailleDriver@@Base+0x48>
   22a14:	add	r3, pc, r3
   22a18:	ldr	r0, [r3, r2]
   22a1c:	bl	37160 <playTune@@Base>
   22a20:	ldr	r1, [pc, #40]	; 22a50 <restartBrailleDriver@@Base+0x4c>
   22a24:	mov	r2, #5
   22a28:	mov	r0, #0
   22a2c:	add	r1, pc, r1
   22a30:	bl	f9bc <dcgettext@plt>
   22a34:	mov	r1, r0
   22a38:	mov	r0, #6
   22a3c:	bl	1c634 <logMessage@@Base>
   22a40:	pop	{r3, lr}
   22a44:	b	2283c <destructBrailleDriver@@Base+0x218>
   22a48:	andeq	r0, r5, r4, rrx
   22a4c:	andeq	r0, r0, r8, asr #8
   22a50:	strdeq	ip, [r2], -r4

00022a54 <initializeSpeech@@Base>:
   22a54:	ldr	r3, [pc, #12]	; 22a68 <initializeSpeech@@Base+0x14>
   22a58:	ldr	r2, [pc, #12]	; 22a6c <initializeSpeech@@Base+0x18>
   22a5c:	add	r3, pc, r3
   22a60:	ldr	r0, [r3, r2]
   22a64:	b	46624 <initializeSpeechSynthesizer@@Base>
   22a68:	andeq	r0, r5, ip, lsl r0
   22a6c:	andeq	r0, r0, r4, ror #9

00022a70 <constructSpeechDriver@@Base>:
   22a70:	push	{r3, r4, r5, lr}
   22a74:	bl	22a54 <initializeSpeech@@Base>
   22a78:	ldr	r3, [pc, #84]	; 22ad4 <constructSpeechDriver@@Base+0x64>
   22a7c:	ldr	r0, [pc, #84]	; 22ad8 <constructSpeechDriver@@Base+0x68>
   22a80:	add	r3, pc, r3
   22a84:	ldr	r1, [pc, #80]	; 22adc <constructSpeechDriver@@Base+0x6c>
   22a88:	ldr	r2, [pc, #80]	; 22ae0 <constructSpeechDriver@@Base+0x70>
   22a8c:	ldr	r5, [r3, r0]
   22a90:	ldr	r0, [r3, r1]
   22a94:	add	r2, pc, r2
   22a98:	ldr	r3, [r5]
   22a9c:	ldr	r1, [r2, #104]	; 0x68
   22aa0:	ldr	r3, [r3, #32]
   22aa4:	blx	r3
   22aa8:	subs	r4, r0, #0
   22aac:	movne	r4, #1
   22ab0:	bne	22acc <constructSpeechDriver@@Base+0x5c>
   22ab4:	ldr	r3, [r5]
   22ab8:	mov	r0, #7
   22abc:	ldr	r1, [pc, #32]	; 22ae4 <constructSpeechDriver@@Base+0x74>
   22ac0:	ldr	r2, [r3, #4]
   22ac4:	add	r1, pc, r1
   22ac8:	bl	1c634 <logMessage@@Base>
   22acc:	mov	r0, r4
   22ad0:	pop	{r3, r4, r5, pc}
   22ad4:	strdeq	pc, [r4], -r8
   22ad8:	andeq	r0, r0, ip, lsl r4
   22adc:	andeq	r0, r0, r4, ror #9
   22ae0:	strdeq	r0, [r5], -ip
   22ae4:	andeq	ip, r2, ip, ror pc
   22ae8:	push	{r4, r5, r6, r7, r8, lr}
   22aec:	mov	r7, r1
   22af0:	ldr	r4, [pc, #400]	; 22c88 <constructSpeechDriver@@Base+0x218>
   22af4:	sub	sp, sp, #8
   22af8:	mov	r8, r0
   22afc:	ldr	r6, [pc, #392]	; 22c8c <constructSpeechDriver@@Base+0x21c>
   22b00:	add	r4, pc, r4
   22b04:	add	r1, r4, #108	; 0x6c
   22b08:	add	r6, pc, r6
   22b0c:	ldr	r2, [r4, #32]
   22b10:	bl	465a0 <loadSpeechDriver@@Base>
   22b14:	ldr	ip, [pc, #372]	; 22c90 <constructSpeechDriver@@Base+0x220>
   22b18:	ldr	r5, [r6, ip]
   22b1c:	cmp	r0, #0
   22b20:	mov	r2, r0
   22b24:	str	r0, [r5]
   22b28:	beq	22c4c <constructSpeechDriver@@Base+0x1dc>
   22b2c:	ldr	r1, [r2, #4]
   22b30:	ldr	r0, [r0, #28]
   22b34:	ldr	r2, [r4, #112]	; 0x70
   22b38:	bl	1e2f8 <getParameters@@Base>
   22b3c:	cmp	r0, #0
   22b40:	str	r0, [r4, #104]	; 0x68
   22b44:	beq	22c08 <constructSpeechDriver@@Base+0x198>
   22b48:	cmp	r7, #0
   22b4c:	beq	22bd8 <constructSpeechDriver@@Base+0x168>
   22b50:	ldr	r1, [pc, #316]	; 22c94 <constructSpeechDriver@@Base+0x224>
   22b54:	mov	r2, #5
   22b58:	mov	r0, #0
   22b5c:	add	r1, pc, r1
   22b60:	bl	f9bc <dcgettext@plt>
   22b64:	ldr	ip, [r5]
   22b68:	ldr	r1, [pc, #296]	; 22c98 <constructSpeechDriver@@Base+0x228>
   22b6c:	ldr	r3, [ip, #4]
   22b70:	add	r1, pc, r1
   22b74:	ldr	ip, [ip]
   22b78:	str	ip, [sp]
   22b7c:	mov	r2, r0
   22b80:	mov	r0, #6
   22b84:	bl	1c634 <logMessage@@Base>
   22b88:	ldr	r0, [r5]
   22b8c:	mov	r1, #0
   22b90:	bl	46608 <identifySpeechDriver@@Base>
   22b94:	ldr	r3, [pc, #256]	; 22c9c <constructSpeechDriver@@Base+0x22c>
   22b98:	ldr	ip, [r5]
   22b9c:	mov	r2, #5
   22ba0:	ldr	r1, [pc, #248]	; 22ca0 <constructSpeechDriver@@Base+0x230>
   22ba4:	add	r3, pc, r3
   22ba8:	mov	r0, #0
   22bac:	add	r1, pc, r1
   22bb0:	ldr	r5, [ip, #28]
   22bb4:	ldr	r4, [r3, #104]	; 0x68
   22bb8:	bl	f9bc <dcgettext@plt>
   22bbc:	mov	r1, r4
   22bc0:	mov	r2, r0
   22bc4:	mov	r0, r5
   22bc8:	bl	1e698 <logParameters@@Base>
   22bcc:	mov	r0, #1
   22bd0:	add	sp, sp, #8
   22bd4:	pop	{r4, r5, r6, r7, r8, pc}
   22bd8:	ldr	r3, [r5]
   22bdc:	mov	r0, #7
   22be0:	ldr	r1, [pc, #188]	; 22ca4 <constructSpeechDriver@@Base+0x234>
   22be4:	ldr	r2, [r3, #4]
   22be8:	add	r1, pc, r1
   22bec:	bl	1c634 <logMessage@@Base>
   22bf0:	bl	22a70 <constructSpeechDriver@@Base>
   22bf4:	subs	r7, r0, #0
   22bf8:	bne	22c40 <constructSpeechDriver@@Base+0x1d0>
   22bfc:	ldr	r0, [r4, #104]	; 0x68
   22c00:	bl	1db88 <deallocateStrings@@Base>
   22c04:	str	r7, [r4, #104]	; 0x68
   22c08:	ldr	r4, [pc, #152]	; 22ca8 <constructSpeechDriver@@Base+0x238>
   22c0c:	add	r4, pc, r4
   22c10:	ldr	r0, [r4, #108]	; 0x6c
   22c14:	cmp	r0, #0
   22c18:	beq	22c28 <constructSpeechDriver@@Base+0x1b8>
   22c1c:	bl	1f7f4 <unloadSharedObject@@Base>
   22c20:	mov	r3, #0
   22c24:	str	r3, [r4, #108]	; 0x6c
   22c28:	ldr	r3, [pc, #124]	; 22cac <constructSpeechDriver@@Base+0x23c>
   22c2c:	mov	r0, #0
   22c30:	ldr	r3, [r6, r3]
   22c34:	str	r3, [r5]
   22c38:	add	sp, sp, #8
   22c3c:	pop	{r4, r5, r6, r7, r8, pc}
   22c40:	ldr	r3, [r5]
   22c44:	str	r3, [r4, #56]	; 0x38
   22c48:	b	22b50 <constructSpeechDriver@@Base+0xe0>
   22c4c:	ldr	r1, [pc, #92]	; 22cb0 <constructSpeechDriver@@Base+0x240>
   22c50:	mov	r2, #5
   22c54:	add	r1, pc, r1
   22c58:	bl	f9bc <dcgettext@plt>
   22c5c:	ldr	r1, [pc, #80]	; 22cb4 <constructSpeechDriver@@Base+0x244>
   22c60:	mov	r3, r8
   22c64:	add	r1, pc, r1
   22c68:	mov	r2, r0
   22c6c:	mov	r0, #3
   22c70:	bl	1c634 <logMessage@@Base>
   22c74:	ldr	r3, [pc, #48]	; 22cac <constructSpeechDriver@@Base+0x23c>
   22c78:	mov	r0, #0
   22c7c:	ldr	r3, [r6, r3]
   22c80:	str	r3, [r5]
   22c84:	b	22c38 <constructSpeechDriver@@Base+0x1c8>
   22c88:	muleq	r5, r0, fp
   22c8c:	andeq	pc, r4, r0, ror pc	; <UNPREDICTABLE>
   22c90:	andeq	r0, r0, ip, lsl r4
   22c94:	andeq	ip, r2, r8, asr #30
   22c98:	andeq	ip, r2, r4, ror #24
   22c9c:	andeq	r0, r5, ip, ror #21
   22ca0:	andeq	ip, r2, r8, lsl #30
   22ca4:	andeq	ip, r2, r0, lsl #29
   22ca8:	andeq	r0, r5, r4, lsl #21
   22cac:	andeq	r0, r0, r8, lsl #10
   22cb0:	andeq	ip, r2, r4, lsr lr
   22cb4:	ldrdeq	ip, [r2], -r0

00022cb8 <destructSpeechDriver@@Base>:
   22cb8:	push	{r3, lr}
   22cbc:	ldr	r3, [pc, #32]	; 22ce4 <destructSpeechDriver@@Base+0x2c>
   22cc0:	ldr	r2, [pc, #32]	; 22ce8 <destructSpeechDriver@@Base+0x30>
   22cc4:	add	r3, pc, r3
   22cc8:	ldr	r1, [pc, #28]	; 22cec <destructSpeechDriver@@Base+0x34>
   22ccc:	ldr	r2, [r3, r2]
   22cd0:	ldr	r0, [r3, r1]
   22cd4:	ldr	r3, [r2]
   22cd8:	ldr	r3, [r3, #36]	; 0x24
   22cdc:	blx	r3
   22ce0:	pop	{r3, pc}
   22ce4:			; <UNDEFINED> instruction: 0x0004fdb4
   22ce8:	andeq	r0, r0, ip, lsl r4
   22cec:	andeq	r0, r0, r4, ror #9
   22cf0:	push	{r3, r4, r5, lr}
   22cf4:	ldr	r5, [pc, #120]	; 22d74 <destructSpeechDriver@@Base+0xbc>
   22cf8:	ldr	r4, [pc, #120]	; 22d78 <destructSpeechDriver@@Base+0xc0>
   22cfc:	add	r5, pc, r5
   22d00:	add	r4, pc, r4
   22d04:	ldr	r3, [r5, #56]	; 0x38
   22d08:	cmp	r3, #0
   22d0c:	beq	22d30 <destructSpeechDriver@@Base+0x78>
   22d10:	bl	22cb8 <destructSpeechDriver@@Base>
   22d14:	ldr	r3, [pc, #96]	; 22d7c <destructSpeechDriver@@Base+0xc4>
   22d18:	ldr	r2, [pc, #96]	; 22d80 <destructSpeechDriver@@Base+0xc8>
   22d1c:	mov	r1, #0
   22d20:	ldr	r3, [r4, r3]
   22d24:	ldr	r2, [r4, r2]
   22d28:	str	r1, [r5, #56]	; 0x38
   22d2c:	str	r2, [r3]
   22d30:	ldr	r4, [pc, #76]	; 22d84 <destructSpeechDriver@@Base+0xcc>
   22d34:	add	r4, pc, r4
   22d38:	ldr	r0, [r4, #108]	; 0x6c
   22d3c:	cmp	r0, #0
   22d40:	beq	22d50 <destructSpeechDriver@@Base+0x98>
   22d44:	bl	1f7f4 <unloadSharedObject@@Base>
   22d48:	mov	r3, #0
   22d4c:	str	r3, [r4, #108]	; 0x6c
   22d50:	ldr	r4, [pc, #48]	; 22d88 <destructSpeechDriver@@Base+0xd0>
   22d54:	add	r4, pc, r4
   22d58:	ldr	r0, [r4, #104]	; 0x68
   22d5c:	cmp	r0, #0
   22d60:	popeq	{r3, r4, r5, pc}
   22d64:	bl	1db88 <deallocateStrings@@Base>
   22d68:	mov	r3, #0
   22d6c:	str	r3, [r4, #104]	; 0x68
   22d70:	pop	{r3, r4, r5, pc}
   22d74:	muleq	r5, r4, r9
   22d78:	andeq	pc, r4, r8, ror sp	; <UNPREDICTABLE>
   22d7c:	andeq	r0, r0, ip, lsl r4
   22d80:	andeq	r0, r0, r8, lsl #10
   22d84:	andeq	r0, r5, ip, asr r9
   22d88:	andeq	r0, r5, ip, lsr r9
   22d8c:	push	{r3, lr}
   22d90:	ldr	r3, [pc, #36]	; 22dbc <destructSpeechDriver@@Base+0x104>
   22d94:	ldr	r2, [pc, #36]	; 22dc0 <destructSpeechDriver@@Base+0x108>
   22d98:	add	r3, pc, r3
   22d9c:	ldr	r1, [pc, #32]	; 22dc4 <destructSpeechDriver@@Base+0x10c>
   22da0:	ldr	r2, [r3, r2]
   22da4:	ldr	r0, [r3, r1]
   22da8:	ldr	r3, [r2]
   22dac:	ldr	r3, [r3, #44]	; 0x2c
   22db0:	blx	r3
   22db4:	pop	{r3, lr}
   22db8:	b	22cf0 <destructSpeechDriver@@Base+0x38>
   22dbc:	andeq	pc, r4, r0, ror #25
   22dc0:	andeq	r0, r0, ip, lsl r4
   22dc4:	andeq	r0, r0, r4, ror #9
   22dc8:	b	22d8c <destructSpeechDriver@@Base+0xd4>

00022dcc <restartSpeechDriver@@Base>:
   22dcc:	push	{r3, lr}
   22dd0:	bl	22d8c <destructSpeechDriver@@Base+0xd4>
   22dd4:	mov	r2, #5
   22dd8:	ldr	r1, [pc, #28]	; 22dfc <restartSpeechDriver@@Base+0x30>
   22ddc:	mov	r0, #0
   22de0:	add	r1, pc, r1
   22de4:	bl	f9bc <dcgettext@plt>
   22de8:	mov	r1, r0
   22dec:	mov	r0, #6
   22df0:	bl	1c634 <logMessage@@Base>
   22df4:	pop	{r3, lr}
   22df8:	b	216f8 <releaseAllKeys@@Base+0xa38>
   22dfc:	andeq	ip, r2, r8, ror #25

00022e00 <brlttyStart@@Base>:
   22e00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22e04:	sub	sp, sp, #308	; 0x134
   22e08:	ldr	r4, [pc, #3932]	; 23d6c <brlttyStart@@Base+0xf6c>
   22e0c:	add	r2, sp, #8
   22e10:	ldr	r3, [pc, #3928]	; 23d70 <brlttyStart@@Base+0xf70>
   22e14:	add	r4, pc, r4
   22e18:	str	r0, [sp, #12]
   22e1c:	str	r1, [sp, #8]
   22e20:	add	r1, sp, #12
   22e24:	ldr	r8, [r4, r3]
   22e28:	ldr	r0, [pc, #3908]	; 23d74 <brlttyStart@@Base+0xf74>
   22e2c:	ldr	r3, [r8]
   22e30:	add	r0, pc, r0
   22e34:	add	r0, r0, #128	; 0x80
   22e38:	str	r3, [sp, #300]	; 0x12c
   22e3c:	bl	1af9c <processOptions@@Base>
   22e40:	cmp	r0, #1
   22e44:	beq	23590 <brlttyStart@@Base+0x790>
   22e48:	ldr	lr, [pc, #3880]	; 23d78 <brlttyStart@@Base+0xf78>
   22e4c:	add	ip, sp, #24
   22e50:	add	lr, pc, lr
   22e54:	mov	r9, ip
   22e58:	add	lr, lr, #4
   22e5c:	ldm	lr!, {r0, r1, r2, r3}
   22e60:	ldr	lr, [lr]
   22e64:	stmia	ip!, {r0, r1, r2, r3}
   22e68:	mov	r0, r9
   22e6c:	str	lr, [ip]
   22e70:	bl	1a2fc <fixInstallPaths@@Base>
   22e74:	ldr	r3, [sp, #12]
   22e78:	cmp	r3, #0
   22e7c:	bne	235e8 <brlttyStart@@Base+0x7e8>
   22e80:	ldr	r5, [pc, #3828]	; 23d7c <brlttyStart@@Base+0xf7c>
   22e84:	add	r5, pc, r5
   22e88:	ldr	r3, [r5, #116]	; 0x74
   22e8c:	cmp	r3, #0
   22e90:	bne	235ac <brlttyStart@@Base+0x7ac>
   22e94:	ldr	r1, [r5, #120]	; 0x78
   22e98:	ldrb	r2, [r1]
   22e9c:	cmp	r2, #0
   22ea0:	bne	236a4 <brlttyStart@@Base+0x8a4>
   22ea4:	ldr	r5, [pc, #3796]	; 23d80 <brlttyStart@@Base+0xf80>
   22ea8:	add	r5, pc, r5
   22eac:	ldr	r1, [r5, #124]	; 0x7c
   22eb0:	ldrb	r3, [r1]
   22eb4:	cmp	r3, #0
   22eb8:	bne	23668 <brlttyStart@@Base+0x868>
   22ebc:	ldr	r3, [pc, #3776]	; 23d84 <brlttyStart@@Base+0xf84>
   22ec0:	mov	r1, #44	; 0x2c
   22ec4:	mov	r2, #0
   22ec8:	add	r3, pc, r3
   22ecc:	ldr	r0, [r3, #128]	; 0x80
   22ed0:	bl	1dbbc <splitString@@Base>
   22ed4:	subs	sl, r0, #0
   22ed8:	beq	22f94 <brlttyStart@@Base+0x194>
   22edc:	ldr	r3, [sl]
   22ee0:	cmp	r3, #0
   22ee4:	beq	22f8c <brlttyStart@@Base+0x18c>
   22ee8:	ldr	r3, [pc, #3736]	; 23d88 <brlttyStart@@Base+0xf88>
   22eec:	add	fp, sl, #4
   22ef0:	add	r7, sp, #20
   22ef4:	mov	r6, #5
   22ef8:	add	r3, pc, r3
   22efc:	str	r3, [sp]
   22f00:	ldr	r3, [pc, #3716]	; 23d8c <brlttyStart@@Base+0xf8c>
   22f04:	add	r3, pc, r3
   22f08:	str	r3, [sp, #4]
   22f0c:	b	22f30 <brlttyStart@@Base+0x130>
   22f10:	ldr	r3, [pc, #3704]	; 23d90 <brlttyStart@@Base+0xf90>
   22f14:	ldr	r2, [sp, #20]
   22f18:	ldr	r3, [r4, r3]
   22f1c:	strb	r2, [r3]
   22f20:	ldr	r3, [r5]
   22f24:	add	fp, fp, #4
   22f28:	cmp	r3, #0
   22f2c:	beq	22f8c <brlttyStart@@Base+0x18c>
   22f30:	str	r6, [sp, #20]
   22f34:	mov	r0, r7
   22f38:	ldr	r1, [fp, #-4]
   22f3c:	mov	r5, fp
   22f40:	bl	1defc <isLogLevel@@Base>
   22f44:	cmp	r0, #0
   22f48:	bne	22f10 <brlttyStart@@Base+0x110>
   22f4c:	ldr	r0, [fp, #-4]
   22f50:	bl	1c180 <enableLogCategory@@Base>
   22f54:	cmp	r0, #0
   22f58:	bne	22f20 <brlttyStart@@Base+0x120>
   22f5c:	ldr	r1, [sp]
   22f60:	mov	r2, #5
   22f64:	bl	f9bc <dcgettext@plt>
   22f68:	ldr	r3, [fp, #-4]
   22f6c:	ldr	r1, [sp, #4]
   22f70:	add	fp, fp, #4
   22f74:	mov	r2, r0
   22f78:	mov	r0, #3
   22f7c:	bl	1c634 <logMessage@@Base>
   22f80:	ldr	r3, [r5]
   22f84:	cmp	r3, #0
   22f88:	bne	22f30 <brlttyStart@@Base+0x130>
   22f8c:	mov	r0, sl
   22f90:	bl	1db88 <deallocateStrings@@Base>
   22f94:	ldr	r3, [pc, #3576]	; 23d94 <brlttyStart@@Base+0xf94>
   22f98:	add	r3, pc, r3
   22f9c:	ldr	r2, [r3, #132]	; 0x84
   22fa0:	cmp	r2, #0
   22fa4:	bne	23654 <brlttyStart@@Base+0x854>
   22fa8:	ldr	r2, [r3, #136]	; 0x88
   22fac:	cmp	r2, #0
   22fb0:	movne	r5, #6
   22fb4:	beq	23634 <brlttyStart@@Base+0x834>
   22fb8:	ldr	r3, [pc, #3544]	; 23d98 <brlttyStart@@Base+0xf98>
   22fbc:	add	r3, pc, r3
   22fc0:	ldr	r3, [r3, #52]	; 0x34
   22fc4:	cmp	r3, #0
   22fc8:	subne	r5, r5, #1
   22fcc:	uxtbne	r5, r5
   22fd0:	ldr	r3, [pc, #3524]	; 23d9c <brlttyStart@@Base+0xf9c>
   22fd4:	ldr	r2, [pc, #3524]	; 23da0 <brlttyStart@@Base+0xfa0>
   22fd8:	add	r3, pc, r3
   22fdc:	ldr	r6, [r4, r2]
   22fe0:	ldr	r0, [r3, #144]	; 0x90
   22fe4:	strb	r5, [r6]
   22fe8:	ldrb	r3, [r0]
   22fec:	cmp	r3, #0
   22ff0:	bne	23648 <brlttyStart@@Base+0x848>
   22ff4:	mov	r0, #0
   22ff8:	add	r5, sp, #44	; 0x2c
   22ffc:	bl	1c20c <setLogPrefix@@Base>
   23000:	mov	r1, #256	; 0x100
   23004:	mov	r7, r0
   23008:	mov	r0, r5
   2300c:	bl	1a290 <makeProgramBanner@@Base>
   23010:	ldr	r1, [pc, #3468]	; 23da4 <brlttyStart@@Base+0xfa4>
   23014:	ldr	r3, [pc, #3468]	; 23da8 <brlttyStart@@Base+0xfa8>
   23018:	mov	r2, r5
   2301c:	mov	r0, #5
   23020:	add	r1, pc, r1
   23024:	add	r3, pc, r3
   23028:	bl	1c634 <logMessage@@Base>
   2302c:	mov	r0, r7
   23030:	bl	1c20c <setLogPrefix@@Base>
   23034:	ldr	r3, [pc, #3440]	; 23dac <brlttyStart@@Base+0xfac>
   23038:	add	r3, pc, r3
   2303c:	ldr	r2, [r3, #136]	; 0x88
   23040:	cmp	r2, #0
   23044:	bne	23558 <brlttyStart@@Base+0x758>
   23048:	ldr	r2, [r3, #140]	; 0x8c
   2304c:	cmp	r2, #0
   23050:	movne	r2, #1
   23054:	strne	r2, [r3, #148]	; 0x94
   23058:	bne	230f4 <brlttyStart@@Base+0x2f4>
   2305c:	ldr	r3, [r3, #148]	; 0x94
   23060:	cmp	r3, #0
   23064:	bne	230f4 <brlttyStart@@Base+0x2f4>
   23068:	mov	r0, r9
   2306c:	bl	fe18 <pipe@plt>
   23070:	cmn	r0, #1
   23074:	beq	23cbc <brlttyStart@@Base+0xebc>
   23078:	ldr	r3, [pc, #3376]	; 23db0 <brlttyStart@@Base+0xfb0>
   2307c:	ldr	r3, [r4, r3]
   23080:	ldr	r0, [r3]
   23084:	bl	fcf8 <fflush@plt>
   23088:	ldr	r3, [pc, #3364]	; 23db4 <brlttyStart@@Base+0xfb4>
   2308c:	ldr	r3, [r4, r3]
   23090:	ldr	r0, [r3]
   23094:	bl	fcf8 <fflush@plt>
   23098:	bl	f974 <fork@plt>
   2309c:	cmn	r0, #1
   230a0:	mov	r7, r0
   230a4:	beq	23d58 <brlttyStart@@Base+0xf58>
   230a8:	cmp	r0, #0
   230ac:	bne	23ce4 <brlttyStart@@Base+0xee4>
   230b0:	ldr	r0, [sp, #28]
   230b4:	bl	f764 <close@plt>
   230b8:	cmn	r0, #1
   230bc:	beq	23b98 <brlttyStart@@Base+0xd98>
   230c0:	mov	r1, r5
   230c4:	ldr	r0, [sp, #24]
   230c8:	mov	r2, #1
   230cc:	bl	f788 <read@plt>
   230d0:	cmn	r0, #1
   230d4:	beq	23b88 <brlttyStart@@Base+0xd88>
   230d8:	ldr	r0, [sp, #24]
   230dc:	bl	f764 <close@plt>
   230e0:	cmn	r0, #1
   230e4:	beq	23b78 <brlttyStart@@Base+0xd78>
   230e8:	bl	f9c8 <setsid@plt>
   230ec:	cmn	r0, #1
   230f0:	beq	23cd0 <brlttyStart@@Base+0xed0>
   230f4:	bl	217d0 <releaseAllKeys@@Base+0xb10>
   230f8:	cmp	r0, #0
   230fc:	moveq	r0, #3
   23100:	beq	23594 <brlttyStart@@Base+0x794>
   23104:	ldr	r3, [pc, #3244]	; 23db8 <brlttyStart@@Base+0xfb8>
   23108:	add	r3, pc, r3
   2310c:	ldr	r5, [r3, #148]	; 0x94
   23110:	cmp	r5, #0
   23114:	beq	23a08 <brlttyStart@@Base+0xc08>
   23118:	ldr	r0, [pc, #3228]	; 23dbc <brlttyStart@@Base+0xfbc>
   2311c:	add	r0, pc, r0
   23120:	bl	1a8f8 <onProgramExit@@Base>
   23124:	bl	38d00 <constructSpecialScreens@@Base>
   23128:	ldr	r0, [pc, #3216]	; 23dc0 <brlttyStart@@Base+0xfc0>
   2312c:	add	r0, pc, r0
   23130:	add	r0, r0, #88	; 0x58
   23134:	bl	2164c <releaseAllKeys@@Base+0x98c>
   23138:	ldr	r0, [pc, #3204]	; 23dc4 <brlttyStart@@Base+0xfc4>
   2313c:	add	r0, pc, r0
   23140:	bl	1a8f8 <onProgramExit@@Base>
   23144:	bl	3702c <suppressTuneDeviceOpenErrors@@Base>
   23148:	bl	1ce78 <getWorkingDirectory@@Base>
   2314c:	subs	r5, r0, #0
   23150:	beq	23b10 <brlttyStart@@Base+0xd10>
   23154:	ldr	r1, [pc, #3180]	; 23dc8 <brlttyStart@@Base+0xfc8>
   23158:	mov	r2, #5
   2315c:	mov	r0, #0
   23160:	add	r1, pc, r1
   23164:	bl	f9bc <dcgettext@plt>
   23168:	ldr	r1, [pc, #3164]	; 23dcc <brlttyStart@@Base+0xfcc>
   2316c:	mov	r3, r5
   23170:	add	r1, pc, r1
   23174:	mov	r2, r0
   23178:	mov	r0, #6
   2317c:	bl	1c634 <logMessage@@Base>
   23180:	mov	r0, r5
   23184:	bl	f4f4 <free@plt>
   23188:	ldr	r1, [pc, #3136]	; 23dd0 <brlttyStart@@Base+0xfd0>
   2318c:	mov	r2, #5
   23190:	mov	r0, #0
   23194:	ldr	r5, [pc, #3128]	; 23dd4 <brlttyStart@@Base+0xfd4>
   23198:	add	r1, pc, r1
   2319c:	ldr	r6, [pc, #3124]	; 23dd8 <brlttyStart@@Base+0xfd8>
   231a0:	bl	f9bc <dcgettext@plt>
   231a4:	add	r5, pc, r5
   231a8:	add	r6, pc, r6
   231ac:	mov	r1, r5
   231b0:	ldr	r3, [r6, #152]	; 0x98
   231b4:	mov	r2, r0
   231b8:	mov	r0, #6
   231bc:	bl	1c634 <logMessage@@Base>
   231c0:	ldr	r3, [pc, #3092]	; 23ddc <brlttyStart@@Base+0xfdc>
   231c4:	ldr	ip, [r6, #152]	; 0x98
   231c8:	mov	r2, #5
   231cc:	ldr	r1, [pc, #3084]	; 23de0 <brlttyStart@@Base+0xfe0>
   231d0:	mov	r0, #0
   231d4:	ldr	r3, [r4, r3]
   231d8:	add	r1, pc, r1
   231dc:	str	ip, [r3]
   231e0:	bl	f9bc <dcgettext@plt>
   231e4:	ldr	r3, [r6, #156]	; 0x9c
   231e8:	mov	r1, r5
   231ec:	mov	r2, r0
   231f0:	mov	r0, #6
   231f4:	bl	1c634 <logMessage@@Base>
   231f8:	ldr	r1, [pc, #3044]	; 23de4 <brlttyStart@@Base+0xfe4>
   231fc:	mov	r2, #5
   23200:	mov	r0, #0
   23204:	add	r1, pc, r1
   23208:	bl	f9bc <dcgettext@plt>
   2320c:	ldr	r3, [r6, #72]	; 0x48
   23210:	mov	r1, r5
   23214:	mov	r2, r0
   23218:	mov	r0, #6
   2321c:	bl	1c634 <logMessage@@Base>
   23220:	bl	21d84 <loadPreferences@@Base>
   23224:	ldr	r1, [pc, #3004]	; 23de8 <brlttyStart@@Base+0xfe8>
   23228:	mov	r2, #5
   2322c:	mov	r0, #0
   23230:	add	r1, pc, r1
   23234:	bl	f9bc <dcgettext@plt>
   23238:	ldr	r3, [r6, #32]
   2323c:	mov	r1, r5
   23240:	mov	r2, r0
   23244:	mov	r0, #6
   23248:	bl	1c634 <logMessage@@Base>
   2324c:	ldr	r1, [pc, #2968]	; 23dec <brlttyStart@@Base+0xfec>
   23250:	mov	r2, #5
   23254:	mov	r0, #0
   23258:	add	r1, pc, r1
   2325c:	bl	f9bc <dcgettext@plt>
   23260:	ldr	r3, [pc, #2952]	; 23df0 <brlttyStart@@Base+0xff0>
   23264:	mov	r1, r5
   23268:	ldr	r6, [r4, r3]
   2326c:	ldr	r3, [r6]
   23270:	mov	r2, r0
   23274:	mov	r0, #6
   23278:	bl	1c634 <logMessage@@Base>
   2327c:	ldr	r0, [pc, #2928]	; 23df4 <brlttyStart@@Base+0xff4>
   23280:	ldr	r1, [r6]
   23284:	add	r0, pc, r0
   23288:	bl	28fc8 <setGlobalDataVariable@@Base>
   2328c:	ldr	r3, [pc, #2916]	; 23df8 <brlttyStart@@Base+0xff8>
   23290:	ldr	r5, [r4, r3]
   23294:	ldr	r7, [r5]
   23298:	ldrb	r3, [r7]
   2329c:	cmp	r3, #0
   232a0:	bne	23734 <brlttyStart@@Base+0x934>
   232a4:	ldr	r3, [pc, #2896]	; 23dfc <brlttyStart@@Base+0xffc>
   232a8:	add	r3, pc, r3
   232ac:	str	r3, [r5]
   232b0:	ldr	r1, [pc, #2888]	; 23e00 <brlttyStart@@Base+0x1000>
   232b4:	mov	r2, #5
   232b8:	mov	r0, #0
   232bc:	add	r1, pc, r1
   232c0:	bl	f9bc <dcgettext@plt>
   232c4:	ldr	r1, [pc, #2872]	; 23e04 <brlttyStart@@Base+0x1004>
   232c8:	ldr	r3, [r5]
   232cc:	add	r1, pc, r1
   232d0:	mov	r2, r0
   232d4:	mov	r0, #6
   232d8:	bl	1c634 <logMessage@@Base>
   232dc:	ldr	r3, [pc, #2852]	; 23e08 <brlttyStart@@Base+0x1008>
   232e0:	ldr	r5, [r4, r3]
   232e4:	ldr	r1, [r5]
   232e8:	ldrb	r3, [r1]
   232ec:	cmp	r3, #0
   232f0:	bne	23944 <brlttyStart@@Base+0xb44>
   232f4:	ldr	r3, [pc, #2832]	; 23e0c <brlttyStart@@Base+0x100c>
   232f8:	add	r3, pc, r3
   232fc:	str	r3, [r5]
   23300:	ldr	r1, [pc, #2824]	; 23e10 <brlttyStart@@Base+0x1010>
   23304:	mov	r2, #5
   23308:	mov	r0, #0
   2330c:	add	r1, pc, r1
   23310:	bl	f9bc <dcgettext@plt>
   23314:	ldr	r1, [pc, #2808]	; 23e14 <brlttyStart@@Base+0x1014>
   23318:	ldr	r3, [r5]
   2331c:	add	r1, pc, r1
   23320:	mov	r2, r0
   23324:	mov	r0, #6
   23328:	bl	1c634 <logMessage@@Base>
   2332c:	ldr	r0, [pc, #2788]	; 23e18 <brlttyStart@@Base+0x1018>
   23330:	add	r0, pc, r0
   23334:	bl	1a8f8 <onProgramExit@@Base>
   23338:	ldr	r3, [pc, #2780]	; 23e1c <brlttyStart@@Base+0x101c>
   2333c:	ldr	r5, [r4, r3]
   23340:	ldr	r0, [r5]
   23344:	ldrb	r3, [r0]
   23348:	cmp	r3, #0
   2334c:	bne	2393c <brlttyStart@@Base+0xb3c>
   23350:	ldr	r1, [pc, #2760]	; 23e20 <brlttyStart@@Base+0x1020>
   23354:	mov	r0, #0
   23358:	mov	r2, #5
   2335c:	add	r1, pc, r1
   23360:	bl	f9bc <dcgettext@plt>
   23364:	ldr	r3, [r5]
   23368:	mov	r7, r0
   2336c:	ldrb	r0, [r3]
   23370:	cmp	r0, #0
   23374:	beq	23924 <brlttyStart@@Base+0xb24>
   23378:	ldr	r1, [pc, #2724]	; 23e24 <brlttyStart@@Base+0x1024>
   2337c:	mov	r2, r7
   23380:	mov	r0, #6
   23384:	add	r1, pc, r1
   23388:	bl	1c634 <logMessage@@Base>
   2338c:	ldr	r0, [pc, #2708]	; 23e28 <brlttyStart@@Base+0x1028>
   23390:	add	r0, pc, r0
   23394:	bl	1a8f8 <onProgramExit@@Base>
   23398:	ldr	r3, [pc, #2700]	; 23e2c <brlttyStart@@Base+0x102c>
   2339c:	add	r3, pc, r3
   233a0:	ldr	r0, [r3, #160]	; 0xa0
   233a4:	ldrb	r5, [r0]
   233a8:	cmp	r5, #0
   233ac:	bne	238b8 <brlttyStart@@Base+0xab8>
   233b0:	ldr	r3, [pc, #2680]	; 23e30 <brlttyStart@@Base+0x1030>
   233b4:	ldr	r6, [r4, r3]
   233b8:	ldr	r0, [r6]
   233bc:	cmp	r0, #0
   233c0:	beq	233dc <brlttyStart@@Base+0x5dc>
   233c4:	bl	34448 <destroyKeyTable@@Base>
   233c8:	ldr	r3, [pc, #2660]	; 23e34 <brlttyStart@@Base+0x1034>
   233cc:	add	r3, pc, r3
   233d0:	ldr	r0, [r3, #48]	; 0x30
   233d4:	cmp	r0, #0
   233d8:	bne	23ad4 <brlttyStart@@Base+0xcd4>
   233dc:	cmp	r5, #0
   233e0:	str	r5, [r6]
   233e4:	beq	23428 <brlttyStart@@Base+0x628>
   233e8:	ldr	r3, [pc, #2632]	; 23e38 <brlttyStart@@Base+0x1038>
   233ec:	mov	r0, r5
   233f0:	ldr	r1, [r4, r3]
   233f4:	add	r1, r1, #4
   233f8:	bl	352d0 <setKeyEventLoggingFlag@@Base>
   233fc:	ldr	r0, [pc, #2616]	; 23e3c <brlttyStart@@Base+0x103c>
   23400:	add	r0, pc, r0
   23404:	add	r0, r0, #48	; 0x30
   23408:	bl	2164c <releaseAllKeys@@Base+0x98c>
   2340c:	cmp	r0, #0
   23410:	beq	23428 <brlttyStart@@Base+0x628>
   23414:	ldr	r1, [pc, #2596]	; 23e40 <brlttyStart@@Base+0x1040>
   23418:	mov	r2, #0
   2341c:	ldr	r0, [r6]
   23420:	add	r1, pc, r1
   23424:	bl	35e08 <listKeyTable@@Base>
   23428:	ldr	r1, [pc, #2580]	; 23e44 <brlttyStart@@Base+0x1044>
   2342c:	mov	r0, #0
   23430:	mov	r2, #5
   23434:	add	r1, pc, r1
   23438:	bl	f9bc <dcgettext@plt>
   2343c:	ldr	r3, [pc, #2564]	; 23e48 <brlttyStart@@Base+0x1048>
   23440:	add	r3, pc, r3
   23444:	ldr	r3, [r3, #160]	; 0xa0
   23448:	mov	r5, r0
   2344c:	ldrb	r0, [r3]
   23450:	cmp	r0, #0
   23454:	beq	23968 <brlttyStart@@Base+0xb68>
   23458:	ldr	r1, [pc, #2540]	; 23e4c <brlttyStart@@Base+0x104c>
   2345c:	mov	r2, r5
   23460:	mov	r0, #6
   23464:	add	r1, pc, r1
   23468:	bl	1c634 <logMessage@@Base>
   2346c:	ldr	r3, [pc, #2524]	; 23e50 <brlttyStart@@Base+0x1050>
   23470:	add	r3, pc, r3
   23474:	add	r0, r3, #60	; 0x3c
   23478:	ldr	r1, [r3, #164]	; 0xa4
   2347c:	bl	361a8 <parseKeyboardProperties@@Base>
   23480:	cmp	r0, #0
   23484:	beq	234b0 <brlttyStart@@Base+0x6b0>
   23488:	ldr	r3, [pc, #2464]	; 23e30 <brlttyStart@@Base+0x1030>
   2348c:	ldr	r3, [r4, r3]
   23490:	ldr	r3, [r3]
   23494:	cmp	r3, #0
   23498:	beq	234b0 <brlttyStart@@Base+0x6b0>
   2349c:	ldr	r1, [pc, #2480]	; 23e54 <brlttyStart@@Base+0x1054>
   234a0:	mov	r0, #0
   234a4:	mov	r2, r0
   234a8:	add	r1, pc, r1
   234ac:	bl	27b48 <asyncRelativeAlarm@@Base>
   234b0:	ldr	r3, [pc, #2464]	; 23e58 <brlttyStart@@Base+0x1058>
   234b4:	add	r3, pc, r3
   234b8:	ldr	r0, [r3, #168]	; 0xa8
   234bc:	cmp	r0, #0
   234c0:	beq	23b04 <brlttyStart@@Base+0xd04>
   234c4:	mov	r2, #0
   234c8:	mov	r1, #44	; 0x2c
   234cc:	bl	1dbbc <splitString@@Base>
   234d0:	ldr	r3, [pc, #2436]	; 23e5c <brlttyStart@@Base+0x105c>
   234d4:	add	r3, pc, r3
   234d8:	ldr	r2, [r3, #140]	; 0x8c
   234dc:	cmp	r2, #0
   234e0:	str	r0, [r3, #20]
   234e4:	beq	23794 <brlttyStart@@Base+0x994>
   234e8:	mov	r0, #1
   234ec:	bl	21298 <releaseAllKeys@@Base+0x5d8>
   234f0:	cmp	r0, #0
   234f4:	bne	23b4c <brlttyStart@@Base+0xd4c>
   234f8:	ldr	r5, [pc, #2400]	; 23e60 <brlttyStart@@Base+0x1060>
   234fc:	mov	r3, #0
   23500:	ldr	r2, [pc, #2396]	; 23e64 <brlttyStart@@Base+0x1064>
   23504:	add	r5, pc, r5
   23508:	ldr	r6, [r5, #172]	; 0xac
   2350c:	ldr	r7, [r4, r2]
   23510:	cmp	r6, r3
   23514:	str	r3, [r7]
   23518:	beq	23980 <brlttyStart@@Base+0xb80>
   2351c:	ldr	r4, [pc, #2372]	; 23e68 <brlttyStart@@Base+0x1068>
   23520:	add	r4, pc, r4
   23524:	ldr	r3, [r4, #184]	; 0xb8
   23528:	ldrb	r0, [r3]
   2352c:	cmp	r0, #0
   23530:	bne	2379c <brlttyStart@@Base+0x99c>
   23534:	ldr	r1, [pc, #2352]	; 23e6c <brlttyStart@@Base+0x106c>
   23538:	mov	r2, #5
   2353c:	add	r1, pc, r1
   23540:	bl	f9bc <dcgettext@plt>
   23544:	mov	r1, r0
   23548:	mov	r0, #3
   2354c:	bl	1c634 <logMessage@@Base>
   23550:	mov	r0, #2
   23554:	b	23594 <brlttyStart@@Base+0x794>
   23558:	ldr	r1, [pc, #2320]	; 23e70 <brlttyStart@@Base+0x1070>
   2355c:	mov	r0, #6
   23560:	ldr	r2, [pc, #2316]	; 23e74 <brlttyStart@@Base+0x1074>
   23564:	add	r1, pc, r1
   23568:	add	r2, pc, r2
   2356c:	bl	1c634 <logMessage@@Base>
   23570:	mov	r0, #1
   23574:	bl	38cfc <identifyScreenDrivers@@Base>
   23578:	mov	r0, #1
   2357c:	bl	4cd18 <api_identify@@Base>
   23580:	mov	r0, #1
   23584:	bl	3d944 <identifyBrailleDrivers@@Base>
   23588:	mov	r0, #1
   2358c:	bl	46620 <identifySpeechDrivers@@Base>
   23590:	mov	r0, #1
   23594:	ldr	r2, [sp, #300]	; 0x12c
   23598:	ldr	r3, [r8]
   2359c:	cmp	r2, r3
   235a0:	bne	23c7c <brlttyStart@@Base+0xe7c>
   235a4:	add	sp, sp, #308	; 0x134
   235a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235ac:	ldr	r3, [r5, #24]
   235b0:	ldrb	r0, [r3]
   235b4:	cmp	r0, #0
   235b8:	bne	2361c <brlttyStart@@Base+0x81c>
   235bc:	ldr	r1, [pc, #2228]	; 23e78 <brlttyStart@@Base+0x1078>
   235c0:	mov	r2, #5
   235c4:	add	r1, pc, r1
   235c8:	bl	f9bc <dcgettext@plt>
   235cc:	ldr	r1, [pc, #2216]	; 23e7c <brlttyStart@@Base+0x107c>
   235d0:	add	r1, pc, r1
   235d4:	mov	r2, r0
   235d8:	mov	r0, #3
   235dc:	bl	1c634 <logMessage@@Base>
   235e0:	mov	r0, #3
   235e4:	b	23594 <brlttyStart@@Base+0x794>
   235e8:	ldr	r1, [pc, #2192]	; 23e80 <brlttyStart@@Base+0x1080>
   235ec:	mov	r2, #5
   235f0:	mov	r0, #0
   235f4:	add	r1, pc, r1
   235f8:	bl	f9bc <dcgettext@plt>
   235fc:	ldr	r3, [sp, #8]
   23600:	ldr	r1, [pc, #2172]	; 23e84 <brlttyStart@@Base+0x1084>
   23604:	ldr	r3, [r3]
   23608:	add	r1, pc, r1
   2360c:	mov	r2, r0
   23610:	mov	r0, #3
   23614:	bl	1c634 <logMessage@@Base>
   23618:	b	22e80 <brlttyStart@@Base+0x80>
   2361c:	mov	r0, r3
   23620:	bl	1a7d8 <cancelProgram@@Base>
   23624:	cmp	r0, #0
   23628:	moveq	r0, #4
   2362c:	beq	23594 <brlttyStart@@Base+0x794>
   23630:	b	23590 <brlttyStart@@Base+0x790>
   23634:	ldr	r5, [r3, #140]	; 0x8c
   23638:	cmp	r5, #0
   2363c:	moveq	r5, #5
   23640:	movne	r5, #6
   23644:	b	22fb8 <brlttyStart@@Base+0x1b8>
   23648:	bl	1c254 <openLogFile@@Base>
   2364c:	bl	1c2c8 <closeSystemLog@@Base>
   23650:	b	22ff4 <brlttyStart@@Base+0x1f4>
   23654:	ldr	r3, [pc, #1844]	; 23d90 <brlttyStart@@Base+0xf90>
   23658:	ldr	r3, [r4, r3]
   2365c:	ldrb	r5, [r3]
   23660:	bl	1c2c8 <closeSystemLog@@Base>
   23664:	b	22fd0 <brlttyStart@@Base+0x1d0>
   23668:	ldr	r0, [pc, #2072]	; 23e88 <brlttyStart@@Base+0x1088>
   2366c:	mov	r3, #0
   23670:	ldr	r2, [pc, #2068]	; 23e8c <brlttyStart@@Base+0x108c>
   23674:	ldr	r6, [r4, r0]
   23678:	add	r2, pc, r2
   2367c:	add	r2, r2, #8
   23680:	mov	r0, r6
   23684:	bl	1dff8 <validateInteger@@Base>
   23688:	cmp	r0, #0
   2368c:	beq	23708 <brlttyStart@@Base+0x908>
   23690:	ldr	r3, [r6]
   23694:	add	r3, r3, r3, lsl #2
   23698:	lsl	r3, r3, #1
   2369c:	str	r3, [r6]
   236a0:	b	22ebc <brlttyStart@@Base+0xbc>
   236a4:	ldr	r0, [pc, #2020]	; 23e90 <brlttyStart@@Base+0x1090>
   236a8:	ldr	r2, [pc, #2020]	; 23e94 <brlttyStart@@Base+0x1094>
   236ac:	ldr	r6, [r4, r0]
   236b0:	add	r2, pc, r2
   236b4:	add	r2, r2, #8
   236b8:	mov	r0, r6
   236bc:	bl	1dff8 <validateInteger@@Base>
   236c0:	cmp	r0, #0
   236c4:	beq	236dc <brlttyStart@@Base+0x8dc>
   236c8:	ldr	r3, [r6]
   236cc:	add	r3, r3, r3, lsl #2
   236d0:	lsl	r3, r3, #1
   236d4:	str	r3, [r6]
   236d8:	b	22ea4 <brlttyStart@@Base+0xa4>
   236dc:	ldr	r1, [pc, #1972]	; 23e98 <brlttyStart@@Base+0x1098>
   236e0:	mov	r2, #5
   236e4:	add	r1, pc, r1
   236e8:	bl	f9bc <dcgettext@plt>
   236ec:	ldr	r1, [pc, #1960]	; 23e9c <brlttyStart@@Base+0x109c>
   236f0:	ldr	r3, [r5, #120]	; 0x78
   236f4:	add	r1, pc, r1
   236f8:	mov	r2, r0
   236fc:	mov	r0, #3
   23700:	bl	1c634 <logMessage@@Base>
   23704:	b	22ea4 <brlttyStart@@Base+0xa4>
   23708:	ldr	r1, [pc, #1936]	; 23ea0 <brlttyStart@@Base+0x10a0>
   2370c:	mov	r2, #5
   23710:	add	r1, pc, r1
   23714:	bl	f9bc <dcgettext@plt>
   23718:	ldr	r1, [pc, #1924]	; 23ea4 <brlttyStart@@Base+0x10a4>
   2371c:	ldr	r3, [r5, #124]	; 0x7c
   23720:	add	r1, pc, r1
   23724:	mov	r2, r0
   23728:	mov	r0, #3
   2372c:	bl	1c634 <logMessage@@Base>
   23730:	b	22ebc <brlttyStart@@Base+0xbc>
   23734:	ldr	r1, [pc, #1900]	; 23ea8 <brlttyStart@@Base+0x10a8>
   23738:	mov	r0, r7
   2373c:	add	r1, pc, r1
   23740:	bl	fc5c <strcmp@plt>
   23744:	cmp	r0, #0
   23748:	bne	23ab8 <brlttyStart@@Base+0xcb8>
   2374c:	ldr	r0, [r6]
   23750:	bl	2d030 <selectTextTable@@Base>
   23754:	ldr	r3, [pc, #1872]	; 23eac <brlttyStart@@Base+0x10ac>
   23758:	add	r3, pc, r3
   2375c:	str	r3, [r5]
   23760:	subs	r7, r0, #0
   23764:	beq	23784 <brlttyStart@@Base+0x984>
   23768:	ldr	r0, [r6]
   2376c:	mov	r1, r7
   23770:	bl	2d994 <replaceTextTable@@Base>
   23774:	cmp	r0, #0
   23778:	beq	23bcc <brlttyStart@@Base+0xdcc>
   2377c:	mov	r3, r7
   23780:	str	r7, [r5]
   23784:	ldrb	r3, [r3]
   23788:	cmp	r3, #0
   2378c:	bne	232b0 <brlttyStart@@Base+0x4b0>
   23790:	b	232a4 <brlttyStart@@Base+0x4a4>
   23794:	bl	21938 <releaseAllKeys@@Base+0xc78>
   23798:	b	234f8 <brlttyStart@@Base+0x6f8>
   2379c:	mov	r0, r3
   237a0:	mov	r1, #44	; 0x2c
   237a4:	mov	r2, #0
   237a8:	bl	1dbbc <splitString@@Base>
   237ac:	ldr	r3, [r4, #188]	; 0xbc
   237b0:	cmp	r3, #0
   237b4:	str	r0, [r4, #4]
   237b8:	movne	r0, r3
   237bc:	beq	23bf4 <brlttyStart@@Base+0xdf4>
   237c0:	mov	r1, #44	; 0x2c
   237c4:	mov	r2, #0
   237c8:	bl	1dbbc <splitString@@Base>
   237cc:	ldr	r3, [pc, #1756]	; 23eb0 <brlttyStart@@Base+0x10b0>
   237d0:	mov	r1, #0
   237d4:	add	r3, pc, r3
   237d8:	ldr	r2, [r3, #140]	; 0x8c
   237dc:	str	r1, [r3, #84]	; 0x54
   237e0:	cmp	r2, r1
   237e4:	str	r0, [r3, #12]
   237e8:	beq	23adc <brlttyStart@@Base+0xcdc>
   237ec:	mov	r0, #1
   237f0:	bl	21028 <releaseAllKeys@@Base+0x368>
   237f4:	cmp	r0, #0
   237f8:	bne	23c0c <brlttyStart@@Base+0xe0c>
   237fc:	ldr	r3, [pc, #1712]	; 23eb4 <brlttyStart@@Base+0x10b4>
   23800:	add	r3, pc, r3
   23804:	ldr	r0, [r3, #192]	; 0xc0
   23808:	cmp	r0, #0
   2380c:	beq	23c00 <brlttyStart@@Base+0xe00>
   23810:	mov	r2, #0
   23814:	mov	r1, #44	; 0x2c
   23818:	bl	1dbbc <splitString@@Base>
   2381c:	ldr	r3, [pc, #1684]	; 23eb8 <brlttyStart@@Base+0x10b8>
   23820:	add	r3, pc, r3
   23824:	ldr	r2, [r3, #140]	; 0x8c
   23828:	cmp	r2, #0
   2382c:	str	r0, [r3, #16]
   23830:	beq	23af0 <brlttyStart@@Base+0xcf0>
   23834:	mov	r0, #1
   23838:	bl	211e4 <releaseAllKeys@@Base+0x524>
   2383c:	cmp	r0, #0
   23840:	bne	23bec <brlttyStart@@Base+0xdec>
   23844:	ldr	r1, [pc, #1648]	; 23ebc <brlttyStart@@Base+0x10bc>
   23848:	mov	r0, #0
   2384c:	mov	r2, #5
   23850:	add	r1, pc, r1
   23854:	bl	f9bc <dcgettext@plt>
   23858:	ldr	r3, [pc, #1632]	; 23ec0 <brlttyStart@@Base+0x10c0>
   2385c:	add	r3, pc, r3
   23860:	ldr	r3, [r3, #196]	; 0xc4
   23864:	mov	r5, r0
   23868:	ldrb	r0, [r3]
   2386c:	cmp	r0, #0
   23870:	beq	23ba8 <brlttyStart@@Base+0xda8>
   23874:	ldr	r4, [pc, #1608]	; 23ec4 <brlttyStart@@Base+0x10c4>
   23878:	mov	r0, #6
   2387c:	ldr	r1, [pc, #1604]	; 23ec8 <brlttyStart@@Base+0x10c8>
   23880:	mov	r2, r5
   23884:	add	r4, pc, r4
   23888:	add	r1, pc, r1
   2388c:	bl	1c634 <logMessage@@Base>
   23890:	ldr	r0, [r4, #140]	; 0x8c
   23894:	cmp	r0, #0
   23898:	bne	238ac <brlttyStart@@Base+0xaac>
   2389c:	ldr	r3, [r4, #196]	; 0xc4
   238a0:	ldrb	r0, [r3]
   238a4:	cmp	r0, #0
   238a8:	bne	23bdc <brlttyStart@@Base+0xddc>
   238ac:	adds	r0, r0, #0
   238b0:	movne	r0, #1
   238b4:	b	23594 <brlttyStart@@Base+0x794>
   238b8:	bl	3481c <ensureKeyTableExtension@@Base>
   238bc:	subs	r7, r0, #0
   238c0:	beq	23428 <brlttyStart@@Base+0x628>
   238c4:	bl	1c948 <locatePathName@@Base>
   238c8:	cmp	r7, r0
   238cc:	beq	23c14 <brlttyStart@@Base+0xe14>
   238d0:	ldr	r0, [r6]
   238d4:	mov	r1, r7
   238d8:	bl	1c9c8 <makePath@@Base>
   238dc:	subs	r6, r0, #0
   238e0:	beq	23bc0 <brlttyStart@@Base+0xdc0>
   238e4:	ldr	r1, [pc, #1504]	; 23ecc <brlttyStart@@Base+0x10cc>
   238e8:	mov	r0, #7
   238ec:	mov	r2, r6
   238f0:	add	r1, pc, r1
   238f4:	bl	1c634 <logMessage@@Base>
   238f8:	ldr	r3, [pc, #1488]	; 23ed0 <brlttyStart@@Base+0x10d0>
   238fc:	mov	r0, r6
   23900:	ldr	r1, [r4, r3]
   23904:	bl	34568 <compileKeyTable@@Base>
   23908:	subs	r5, r0, #0
   2390c:	beq	23c80 <brlttyStart@@Base+0xe80>
   23910:	mov	r0, r6
   23914:	bl	f4f4 <free@plt>
   23918:	mov	r0, r7
   2391c:	bl	f4f4 <free@plt>
   23920:	b	233b0 <brlttyStart@@Base+0x5b0>
   23924:	ldr	r1, [pc, #1448]	; 23ed4 <brlttyStart@@Base+0x10d4>
   23928:	mov	r2, #5
   2392c:	add	r1, pc, r1
   23930:	bl	f9bc <dcgettext@plt>
   23934:	mov	r3, r0
   23938:	b	23378 <brlttyStart@@Base+0x578>
   2393c:	bl	21990 <loadContractionTable@@Base>
   23940:	b	23350 <brlttyStart@@Base+0x550>
   23944:	ldr	r0, [r6]
   23948:	bl	2de00 <replaceAttributesTable@@Base>
   2394c:	cmp	r0, #0
   23950:	beq	23b54 <brlttyStart@@Base+0xd54>
   23954:	ldr	r3, [r5]
   23958:	ldrb	r3, [r3]
   2395c:	cmp	r3, #0
   23960:	bne	23300 <brlttyStart@@Base+0x500>
   23964:	b	232f4 <brlttyStart@@Base+0x4f4>
   23968:	ldr	r1, [pc, #1384]	; 23ed8 <brlttyStart@@Base+0x10d8>
   2396c:	mov	r2, #5
   23970:	add	r1, pc, r1
   23974:	bl	f9bc <dcgettext@plt>
   23978:	mov	r3, r0
   2397c:	b	23458 <brlttyStart@@Base+0x658>
   23980:	mov	r0, r6
   23984:	bl	4cd18 <api_identify@@Base>
   23988:	ldr	r3, [pc, #1356]	; 23edc <brlttyStart@@Base+0x10dc>
   2398c:	mov	r1, r6
   23990:	ldr	r2, [r5, #176]	; 0xb0
   23994:	ldr	r9, [r4, r3]
   23998:	mov	r0, r9
   2399c:	bl	1e2f8 <getParameters@@Base>
   239a0:	ldr	r1, [pc, #1336]	; 23ee0 <brlttyStart@@Base+0x10e0>
   239a4:	mov	r2, #5
   239a8:	add	r1, pc, r1
   239ac:	mov	sl, r0
   239b0:	mov	r0, r6
   239b4:	str	sl, [r5, #180]	; 0xb4
   239b8:	bl	f9bc <dcgettext@plt>
   239bc:	mov	r1, sl
   239c0:	mov	r2, r0
   239c4:	mov	r0, r9
   239c8:	bl	1e698 <logParameters@@Base>
   239cc:	ldr	r3, [r5, #140]	; 0x8c
   239d0:	cmp	r3, #0
   239d4:	bne	2351c <brlttyStart@@Base+0x71c>
   239d8:	ldr	r3, [pc, #1284]	; 23ee4 <brlttyStart@@Base+0x10e4>
   239dc:	ldr	r1, [r5, #180]	; 0xb4
   239e0:	ldr	r0, [r4, r3]
   239e4:	bl	4cd54 <api_start@@Base>
   239e8:	cmp	r0, #0
   239ec:	beq	2351c <brlttyStart@@Base+0x71c>
   239f0:	ldr	r0, [pc, #1264]	; 23ee8 <brlttyStart@@Base+0x10e8>
   239f4:	add	r0, pc, r0
   239f8:	bl	1a8f8 <onProgramExit@@Base>
   239fc:	mov	r3, #1
   23a00:	str	r3, [r7]
   23a04:	b	2351c <brlttyStart@@Base+0x71c>
   23a08:	ldr	r3, [pc, #928]	; 23db0 <brlttyStart@@Base+0xfb0>
   23a0c:	ldr	r7, [r4, r3]
   23a10:	ldr	r0, [r7]
   23a14:	bl	fcf8 <fflush@plt>
   23a18:	ldr	r3, [pc, #916]	; 23db4 <brlttyStart@@Base+0xfb4>
   23a1c:	ldr	sl, [r4, r3]
   23a20:	ldr	r0, [sl]
   23a24:	bl	fcf8 <fflush@plt>
   23a28:	ldr	r3, [pc, #1212]	; 23eec <brlttyStart@@Base+0x10ec>
   23a2c:	strb	r5, [r6]
   23a30:	ldr	r0, [pc, #1208]	; 23ef0 <brlttyStart@@Base+0x10f0>
   23a34:	ldr	r3, [r4, r3]
   23a38:	ldr	r1, [pc, #1204]	; 23ef4 <brlttyStart@@Base+0x10f4>
   23a3c:	add	r0, pc, r0
   23a40:	add	r1, pc, r1
   23a44:	ldr	r2, [r3]
   23a48:	bl	f7e8 <freopen@plt>
   23a4c:	cmp	r0, #0
   23a50:	beq	23c6c <brlttyStart@@Base+0xe6c>
   23a54:	ldr	r0, [pc, #1180]	; 23ef8 <brlttyStart@@Base+0x10f8>
   23a58:	ldr	r1, [pc, #1180]	; 23efc <brlttyStart@@Base+0x10fc>
   23a5c:	ldr	r2, [r7]
   23a60:	add	r0, pc, r0
   23a64:	add	r1, pc, r1
   23a68:	bl	f7e8 <freopen@plt>
   23a6c:	cmp	r0, #0
   23a70:	beq	23c5c <brlttyStart@@Base+0xe5c>
   23a74:	ldr	r3, [pc, #1156]	; 23f00 <brlttyStart@@Base+0x1100>
   23a78:	add	r3, pc, r3
   23a7c:	ldr	r3, [r3, #132]	; 0x84
   23a80:	cmp	r3, #0
   23a84:	bne	23118 <brlttyStart@@Base+0x318>
   23a88:	ldr	r0, [pc, #1140]	; 23f04 <brlttyStart@@Base+0x1104>
   23a8c:	ldr	r1, [pc, #1140]	; 23f08 <brlttyStart@@Base+0x1108>
   23a90:	ldr	r2, [sl]
   23a94:	add	r0, pc, r0
   23a98:	add	r1, pc, r1
   23a9c:	bl	f7e8 <freopen@plt>
   23aa0:	cmp	r0, #0
   23aa4:	bne	23118 <brlttyStart@@Base+0x318>
   23aa8:	ldr	r0, [pc, #1116]	; 23f0c <brlttyStart@@Base+0x110c>
   23aac:	add	r0, pc, r0
   23ab0:	bl	1c6fc <logSystemError@@Base>
   23ab4:	b	23118 <brlttyStart@@Base+0x318>
   23ab8:	mov	r1, r7
   23abc:	ldr	r0, [r6]
   23ac0:	bl	2d994 <replaceTextTable@@Base>
   23ac4:	cmp	r0, #0
   23ac8:	beq	23b68 <brlttyStart@@Base+0xd68>
   23acc:	ldr	r3, [r5]
   23ad0:	b	23784 <brlttyStart@@Base+0x984>
   23ad4:	bl	2168c <releaseAllKeys@@Base+0x9cc>
   23ad8:	b	233dc <brlttyStart@@Base+0x5dc>
   23adc:	ldr	r0, [pc, #1068]	; 23f10 <brlttyStart@@Base+0x1110>
   23ae0:	add	r0, pc, r0
   23ae4:	bl	1a8f8 <onProgramExit@@Base>
   23ae8:	bl	2283c <destructBrailleDriver@@Base+0x218>
   23aec:	b	237fc <brlttyStart@@Base+0x9fc>
   23af0:	ldr	r0, [pc, #1052]	; 23f14 <brlttyStart@@Base+0x1114>
   23af4:	add	r0, pc, r0
   23af8:	bl	1a8f8 <onProgramExit@@Base>
   23afc:	bl	216f8 <releaseAllKeys@@Base+0xa38>
   23b00:	b	23844 <brlttyStart@@Base+0xa44>
   23b04:	ldr	r0, [pc, #1036]	; 23f18 <brlttyStart@@Base+0x1118>
   23b08:	add	r0, pc, r0
   23b0c:	b	234c4 <brlttyStart@@Base+0x6c4>
   23b10:	ldr	r1, [pc, #1028]	; 23f1c <brlttyStart@@Base+0x111c>
   23b14:	mov	r2, #5
   23b18:	add	r1, pc, r1
   23b1c:	bl	f9bc <dcgettext@plt>
   23b20:	mov	r5, r0
   23b24:	bl	fca4 <__errno_location@plt>
   23b28:	ldr	r0, [r0]
   23b2c:	bl	f5c0 <strerror@plt>
   23b30:	ldr	r1, [pc, #1000]	; 23f20 <brlttyStart@@Base+0x1120>
   23b34:	mov	r2, r5
   23b38:	add	r1, pc, r1
   23b3c:	mov	r3, r0
   23b40:	mov	r0, #3
   23b44:	bl	1c634 <logMessage@@Base>
   23b48:	b	23188 <brlttyStart@@Base+0x388>
   23b4c:	bl	215a0 <releaseAllKeys@@Base+0x8e0>
   23b50:	b	234f8 <brlttyStart@@Base+0x6f8>
   23b54:	ldr	r2, [pc, #968]	; 23f24 <brlttyStart@@Base+0x1124>
   23b58:	add	r2, pc, r2
   23b5c:	str	r2, [r5]
   23b60:	mov	r3, r2
   23b64:	b	23958 <brlttyStart@@Base+0xb58>
   23b68:	ldr	r3, [pc, #952]	; 23f28 <brlttyStart@@Base+0x1128>
   23b6c:	add	r3, pc, r3
   23b70:	str	r3, [r5]
   23b74:	b	23784 <brlttyStart@@Base+0x984>
   23b78:	ldr	r0, [pc, #940]	; 23f2c <brlttyStart@@Base+0x112c>
   23b7c:	add	r0, pc, r0
   23b80:	bl	1c6fc <logSystemError@@Base>
   23b84:	b	230e8 <brlttyStart@@Base+0x2e8>
   23b88:	ldr	r0, [pc, #928]	; 23f30 <brlttyStart@@Base+0x1130>
   23b8c:	add	r0, pc, r0
   23b90:	bl	1c6fc <logSystemError@@Base>
   23b94:	b	230d8 <brlttyStart@@Base+0x2d8>
   23b98:	ldr	r0, [pc, #916]	; 23f34 <brlttyStart@@Base+0x1134>
   23b9c:	add	r0, pc, r0
   23ba0:	bl	1c6fc <logSystemError@@Base>
   23ba4:	b	230c0 <brlttyStart@@Base+0x2c0>
   23ba8:	ldr	r1, [pc, #904]	; 23f38 <brlttyStart@@Base+0x1138>
   23bac:	mov	r2, #5
   23bb0:	add	r1, pc, r1
   23bb4:	bl	f9bc <dcgettext@plt>
   23bb8:	mov	r3, r0
   23bbc:	b	23874 <brlttyStart@@Base+0xa74>
   23bc0:	mov	r0, r7
   23bc4:	bl	f4f4 <free@plt>
   23bc8:	b	23428 <brlttyStart@@Base+0x628>
   23bcc:	mov	r0, r7
   23bd0:	bl	f4f4 <free@plt>
   23bd4:	ldr	r3, [r5]
   23bd8:	b	23784 <brlttyStart@@Base+0x984>
   23bdc:	mov	r0, r3
   23be0:	bl	46b40 <enableSpeechInput@@Base>
   23be4:	ldr	r0, [r4, #140]	; 0x8c
   23be8:	b	238ac <brlttyStart@@Base+0xaac>
   23bec:	bl	22cf0 <destructSpeechDriver@@Base+0x38>
   23bf0:	b	23844 <brlttyStart@@Base+0xa44>
   23bf4:	ldr	r0, [pc, #832]	; 23f3c <brlttyStart@@Base+0x113c>
   23bf8:	add	r0, pc, r0
   23bfc:	b	237c0 <brlttyStart@@Base+0x9c0>
   23c00:	ldr	r0, [pc, #824]	; 23f40 <brlttyStart@@Base+0x1140>
   23c04:	add	r0, pc, r0
   23c08:	b	23810 <brlttyStart@@Base+0xa10>
   23c0c:	bl	226ac <destructBrailleDriver@@Base+0x88>
   23c10:	b	237fc <brlttyStart@@Base+0x9fc>
   23c14:	ldr	r5, [pc, #808]	; 23f44 <brlttyStart@@Base+0x1144>
   23c18:	mov	r2, #4
   23c1c:	add	r5, pc, r5
   23c20:	mov	r1, r5
   23c24:	bl	f548 <strncmp@plt>
   23c28:	cmp	r0, #0
   23c2c:	beq	238d0 <brlttyStart@@Base+0xad0>
   23c30:	mov	r0, r9
   23c34:	mov	r1, #2
   23c38:	str	r5, [sp, #24]
   23c3c:	str	r7, [sp, #28]
   23c40:	bl	1dcd0 <joinStrings@@Base>
   23c44:	subs	r3, r0, #0
   23c48:	beq	238d0 <brlttyStart@@Base+0xad0>
   23c4c:	mov	r0, r7
   23c50:	mov	r7, r3
   23c54:	bl	f4f4 <free@plt>
   23c58:	b	238d0 <brlttyStart@@Base+0xad0>
   23c5c:	ldr	r0, [pc, #740]	; 23f48 <brlttyStart@@Base+0x1148>
   23c60:	add	r0, pc, r0
   23c64:	bl	1c6fc <logSystemError@@Base>
   23c68:	b	23a74 <brlttyStart@@Base+0xc74>
   23c6c:	ldr	r0, [pc, #728]	; 23f4c <brlttyStart@@Base+0x114c>
   23c70:	add	r0, pc, r0
   23c74:	bl	1c6fc <logSystemError@@Base>
   23c78:	b	23a54 <brlttyStart@@Base+0xc54>
   23c7c:	bl	f950 <__stack_chk_fail@plt>
   23c80:	ldr	r1, [pc, #712]	; 23f50 <brlttyStart@@Base+0x1150>
   23c84:	mov	r2, #5
   23c88:	add	r1, pc, r1
   23c8c:	bl	f9bc <dcgettext@plt>
   23c90:	ldr	r1, [pc, #700]	; 23f54 <brlttyStart@@Base+0x1154>
   23c94:	mov	r3, r6
   23c98:	add	r1, pc, r1
   23c9c:	mov	r2, r0
   23ca0:	mov	r0, #3
   23ca4:	bl	1c634 <logMessage@@Base>
   23ca8:	mov	r0, r6
   23cac:	bl	f4f4 <free@plt>
   23cb0:	mov	r0, r7
   23cb4:	bl	f4f4 <free@plt>
   23cb8:	b	23428 <brlttyStart@@Base+0x628>
   23cbc:	ldr	r0, [pc, #660]	; 23f58 <brlttyStart@@Base+0x1158>
   23cc0:	add	r0, pc, r0
   23cc4:	bl	1c6fc <logSystemError@@Base>
   23cc8:	mov	r0, #4
   23ccc:	bl	f5a8 <exit@plt>
   23cd0:	ldr	r0, [pc, #644]	; 23f5c <brlttyStart@@Base+0x115c>
   23cd4:	add	r0, pc, r0
   23cd8:	bl	1c6fc <logSystemError@@Base>
   23cdc:	mov	r0, #4
   23ce0:	bl	f5a8 <exit@plt>
   23ce4:	ldr	r0, [sp, #24]
   23ce8:	bl	f764 <close@plt>
   23cec:	cmn	r0, #1
   23cf0:	bne	23d00 <brlttyStart@@Base+0xf00>
   23cf4:	ldr	r0, [pc, #612]	; 23f60 <brlttyStart@@Base+0x1160>
   23cf8:	add	r0, pc, r0
   23cfc:	bl	1c6fc <logSystemError@@Base>
   23d00:	ldr	r3, [pc, #604]	; 23f64 <brlttyStart@@Base+0x1164>
   23d04:	mov	r1, r7
   23d08:	add	r3, pc, r3
   23d0c:	ldr	r0, [r3, #24]
   23d10:	bl	1a4e4 <createPidFile@@Base>
   23d14:	cmp	r0, #0
   23d18:	movne	r4, #0
   23d1c:	bne	23d34 <brlttyStart@@Base+0xf34>
   23d20:	bl	fca4 <__errno_location@plt>
   23d24:	ldr	r4, [r0]
   23d28:	cmp	r4, #17
   23d2c:	moveq	r4, #3
   23d30:	movne	r4, #0
   23d34:	ldr	r0, [sp, #28]
   23d38:	bl	f764 <close@plt>
   23d3c:	cmn	r0, #1
   23d40:	bne	23d50 <brlttyStart@@Base+0xf50>
   23d44:	ldr	r0, [pc, #540]	; 23f68 <brlttyStart@@Base+0x1168>
   23d48:	add	r0, pc, r0
   23d4c:	bl	1c6fc <logSystemError@@Base>
   23d50:	mov	r0, r4
   23d54:	bl	fc44 <_exit@plt>
   23d58:	ldr	r0, [pc, #524]	; 23f6c <brlttyStart@@Base+0x116c>
   23d5c:	add	r0, pc, r0
   23d60:	bl	1c6fc <logSystemError@@Base>
   23d64:	mov	r0, #4
   23d68:	bl	f5a8 <exit@plt>
   23d6c:	andeq	pc, r4, r4, ror #24
   23d70:			; <UNDEFINED> instruction: 0x000003b4
   23d74:	andeq	ip, r4, r0, lsl #16
   23d78:	andeq	r0, r5, r8, lsr #4
   23d7c:	andeq	r0, r5, ip, lsl #16
   23d80:	andeq	r0, r5, r8, ror #15
   23d84:	andeq	r0, r5, r8, asr #15
   23d88:	andeq	ip, r2, r8, lsl ip
   23d8c:	andeq	ip, r2, r0, lsr r4
   23d90:	muleq	r0, r8, r4
   23d94:	strdeq	r0, [r5], -r8
   23d98:	ldrdeq	r0, [r5], -r4
   23d9c:			; <UNDEFINED> instruction: 0x000506b8
   23da0:	muleq	r0, ip, r3
   23da4:			; <UNDEFINED> instruction: 0x0002c7b8
   23da8:	andeq	ip, r2, ip, lsl #22
   23dac:	andeq	r0, r5, r8, asr r6
   23db0:	andeq	r0, r0, r8, lsr #10
   23db4:	andeq	r0, r0, r8, ror #8
   23db8:	andeq	r0, r5, r8, lsl #11
   23dbc:			; <UNDEFINED> instruction: 0xffffe518
   23dc0:	andeq	r0, r5, r4, ror #10
   23dc4:			; <UNDEFINED> instruction: 0xffffe244
   23dc8:	andeq	ip, r2, r4, ror sl
   23dcc:	andeq	ip, r2, r4, asr #3
   23dd0:	andeq	ip, r2, r4, ror sl
   23dd4:	muleq	r2, r0, r1
   23dd8:	andeq	r0, r5, r8, ror #9
   23ddc:	andeq	r0, r0, ip, asr r5
   23de0:	andeq	ip, r2, r8, asr #20
   23de4:	muleq	r2, r4, r7
   23de8:	andeq	ip, r2, r4, lsl #20
   23dec:	strdeq	ip, [r2], -r0
   23df0:	andeq	r0, r0, r4, lsr r5
   23df4:	ldrdeq	ip, [r2], -r8
   23df8:	andeq	r0, r0, r8, ror #7
   23dfc:	andeq	ip, r2, r4, asr #19
   23e00:			; <UNDEFINED> instruction: 0x0002c9bc
   23e04:	andeq	ip, r2, r8, rrx
   23e08:	strdeq	r0, [r0], -r4
   23e0c:	andeq	ip, r2, ip, lsl #19
   23e10:	andeq	ip, r2, r4, lsl #19
   23e14:	andeq	ip, r2, r8, lsl r0
   23e18:			; <UNDEFINED> instruction: 0xffffd9f4
   23e1c:	andeq	r0, r0, r8, lsr r5
   23e20:	andeq	ip, r2, r8, asr #18
   23e24:			; <UNDEFINED> instruction: 0x0002bfb0
   23e28:			; <UNDEFINED> instruction: 0xffffe30c
   23e2c:	strdeq	r0, [r5], -r4
   23e30:	andeq	r0, r0, r4, lsr r4
   23e34:	andeq	r0, r5, r4, asr #5
   23e38:	andeq	r0, r0, ip, ror r3
   23e3c:	muleq	r5, r0, r2
   23e40:			; <UNDEFINED> instruction: 0xffffd9a8
   23e44:			; <UNDEFINED> instruction: 0x0002c4b0
   23e48:	andeq	r0, r5, r0, asr r2
   23e4c:	ldrdeq	fp, [r2], -r0
   23e50:	andeq	r0, r5, r0, lsr #4
   23e54:			; <UNDEFINED> instruction: 0xffffe398
   23e58:	ldrdeq	r0, [r5], -ip
   23e5c:			; <UNDEFINED> instruction: 0x000501bc
   23e60:	andeq	r0, r5, ip, lsl #3
   23e64:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   23e68:	andeq	r0, r5, r0, ror r1
   23e6c:	ldrdeq	ip, [r2], -r0
   23e70:	andeq	fp, r2, r0, lsl r3
   23e74:	andeq	ip, r2, r4, ror #11
   23e78:	andeq	ip, r2, r4, lsr r5
   23e7c:	andeq	fp, r2, r4, lsr #5
   23e80:	strdeq	ip, [r2], -r4
   23e84:	andeq	fp, r2, ip, lsr #26
   23e88:	andeq	r0, r0, r0, lsr r4
   23e8c:	andeq	ip, r2, r8, lsr r0
   23e90:	strdeq	r0, [r0], -r8
   23e94:	andeq	ip, r2, r0
   23e98:	andeq	ip, r2, r8, asr r6
   23e9c:	andeq	fp, r2, r0, asr #24
   23ea0:	andeq	ip, r2, r4, asr #12
   23ea4:	andeq	fp, r2, r4, lsl ip
   23ea8:	andeq	ip, r2, r8, lsl r0
   23eac:	andeq	fp, r2, ip, lsr #11
   23eb0:			; <UNDEFINED> instruction: 0x0004febc
   23eb4:	muleq	r4, r0, lr
   23eb8:	andeq	pc, r4, r0, ror lr	; <UNPREDICTABLE>
   23ebc:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   23ec0:	andeq	pc, r4, r4, lsr lr	; <UNPREDICTABLE>
   23ec4:	andeq	pc, r4, ip, lsl #28
   23ec8:	andeq	fp, r2, ip, lsr #21
   23ecc:	ldrdeq	ip, [r2], -r8
   23ed0:	andeq	r0, r0, r0, lsr #8
   23ed4:	andeq	ip, r2, ip, lsl #7
   23ed8:	andeq	ip, r2, r8, asr #6
   23edc:	muleq	r0, r4, r3
   23ee0:	andeq	ip, r2, r4, asr r3
   23ee4:	andeq	r0, r0, r8, asr #10
   23ee8:			; <UNDEFINED> instruction: 0xffffd954
   23eec:	andeq	r0, r0, r0, lsl #7
   23ef0:	andeq	ip, r2, ip, asr r1
   23ef4:	andeq	r4, r3, ip, asr #12
   23ef8:	andeq	ip, r2, r8, lsr r1
   23efc:	andeq	r4, r3, r0, asr #2
   23f00:	andeq	pc, r4, r8, lsl ip	; <UNPREDICTABLE>
   23f04:	andeq	ip, r2, r4, lsl #2
   23f08:	andeq	r4, r3, ip, lsl #2
   23f0c:	andeq	ip, r2, r8, lsl r1
   23f10:			; <UNDEFINED> instruction: 0xffffecdc
   23f14:			; <UNDEFINED> instruction: 0xfffff2cc
   23f18:	strdeq	fp, [r2], -ip
   23f1c:	ldrdeq	ip, [r2], -r0
   23f20:	strdeq	fp, [r2], -ip
   23f24:	andeq	fp, r2, ip, lsr #3
   23f28:	muleq	r2, r8, r1
   23f2c:	andeq	ip, r2, ip
   23f30:	andeq	sl, r2, r0, lsl #31
   23f34:	andeq	fp, r2, ip, ror #31
   23f38:	andeq	ip, r2, r8, lsl #2
   23f3c:	andeq	fp, r2, ip, lsl #2
   23f40:	andeq	fp, r2, r0, lsl #2
   23f44:	andeq	ip, r2, r4, lsr #1
   23f48:	andeq	fp, r2, r4, asr pc
   23f4c:	andeq	fp, r2, r4, lsr pc
   23f50:	andeq	ip, r2, r8, asr r0
   23f54:	muleq	r2, ip, r6
   23f58:	andeq	fp, r2, r0, asr #29
   23f5c:			; <UNDEFINED> instruction: 0x0002bebc
   23f60:	muleq	r2, r0, lr
   23f64:	andeq	pc, r4, r8, lsl #19
   23f68:	andeq	fp, r2, r0, asr #28
   23f6c:	muleq	r2, r0, r4
   23f70:	push	{r4, lr}
   23f74:	mov	r4, r0
   23f78:	ldrb	r2, [r0, #13]
   23f7c:	cmp	r2, #0
   23f80:	beq	23fa4 <brlttyStart@@Base+0x11a4>
   23f84:	ldr	r0, [r0, #16]
   23f88:	ldrb	r1, [r4, #12]
   23f8c:	bl	f6b0 <memset@plt>
   23f90:	ldr	r3, [r4, #4]
   23f94:	cmp	r3, #0
   23f98:	movne	r2, #0
   23f9c:	strbne	r2, [r3]
   23fa0:	pop	{r4, pc}
   23fa4:	ldr	r3, [r0, #16]
   23fa8:	ldrb	r2, [r0, #12]
   23fac:	strb	r2, [r3]
   23fb0:	b	23f90 <brlttyStart@@Base+0x1190>
   23fb4:	ldr	r3, [r1]
   23fb8:	ldr	r1, [r3]
   23fbc:	b	fc5c <strcmp@plt>
   23fc0:	ldr	r2, [r0]
   23fc4:	ldr	r3, [r1]
   23fc8:	ldr	r0, [r2]
   23fcc:	ldr	r1, [r3]
   23fd0:	b	fc5c <strcmp@plt>
   23fd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23fd8:	mov	r4, r3
   23fdc:	ldr	lr, [pc, #212]	; 240b8 <brlttyStart@@Base+0x12b8>
   23fe0:	sub	sp, sp, #8
   23fe4:	ldr	ip, [pc, #208]	; 240bc <brlttyStart@@Base+0x12bc>
   23fe8:	mov	r9, r0
   23fec:	add	lr, pc, lr
   23ff0:	mov	r0, sp
   23ff4:	mov	sl, r2
   23ff8:	mov	r6, r1
   23ffc:	ldr	r8, [lr, ip]
   24000:	mov	r2, lr
   24004:	ldr	r3, [r8]
   24008:	str	r3, [sp, #4]
   2400c:	bl	1ddfc <isInteger@@Base>
   24010:	cmp	r0, #0
   24014:	beq	24060 <brlttyStart@@Base+0x1260>
   24018:	ldr	r3, [sp]
   2401c:	cmp	r3, #255	; 0xff
   24020:	strbls	r3, [sl]
   24024:	movls	r0, #1
   24028:	bls	24048 <brlttyStart@@Base+0x1248>
   2402c:	ldr	r1, [pc, #140]	; 240c0 <brlttyStart@@Base+0x12c0>
   24030:	mov	r0, #4
   24034:	mov	r2, r9
   24038:	mov	r3, r6
   2403c:	add	r1, pc, r1
   24040:	bl	1c634 <logMessage@@Base>
   24044:	mov	r0, #0
   24048:	ldr	r2, [sp, #4]
   2404c:	ldr	r3, [r8]
   24050:	cmp	r2, r3
   24054:	bne	240b4 <brlttyStart@@Base+0x12b4>
   24058:	add	sp, sp, #8
   2405c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24060:	ldrb	r7, [r4, #4]
   24064:	str	r0, [sp]
   24068:	cmp	r7, #0
   2406c:	beq	2402c <brlttyStart@@Base+0x122c>
   24070:	ldr	r4, [r4]
   24074:	mov	r5, r0
   24078:	sub	r4, r4, #4
   2407c:	b	24094 <brlttyStart@@Base+0x1294>
   24080:	add	ip, r5, #1
   24084:	str	ip, [sp]
   24088:	cmp	ip, r7
   2408c:	bge	2402c <brlttyStart@@Base+0x122c>
   24090:	mov	r5, ip
   24094:	mov	r0, r6
   24098:	ldr	r1, [r4, #4]!
   2409c:	bl	fc5c <strcmp@plt>
   240a0:	cmp	r0, #0
   240a4:	bne	24080 <brlttyStart@@Base+0x1280>
   240a8:	strb	r5, [sl]
   240ac:	mov	r0, #1
   240b0:	b	24048 <brlttyStart@@Base+0x1248>
   240b4:	bl	f950 <__stack_chk_fail@plt>
   240b8:	andeq	lr, r4, ip, lsl #21
   240bc:			; <UNDEFINED> instruction: 0x000003b4
   240c0:	andeq	ip, r2, r0, asr #14
   240c4:	ldr	r1, [pc, #456]	; 24294 <brlttyStart@@Base+0x1494>
   240c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   240cc:	add	r1, pc, r1
   240d0:	sub	sp, sp, #12
   240d4:	ldr	r4, [pc, #444]	; 24298 <brlttyStart@@Base+0x1498>
   240d8:	bl	f608 <strtok@plt>
   240dc:	add	r4, pc, r4
   240e0:	subs	r6, r0, #0
   240e4:	beq	241a8 <brlttyStart@@Base+0x13a8>
   240e8:	ldr	r7, [pc, #428]	; 2429c <brlttyStart@@Base+0x149c>
   240ec:	ldr	r3, [pc, #428]	; 242a0 <brlttyStart@@Base+0x14a0>
   240f0:	add	r7, pc, r7
   240f4:	ldr	r1, [r7]
   240f8:	ldr	r3, [r4, r3]
   240fc:	cmp	r1, #0
   24100:	ldrb	r5, [r3]
   24104:	beq	241f8 <brlttyStart@@Base+0x13f8>
   24108:	ldr	ip, [pc, #404]	; 242a4 <brlttyStart@@Base+0x14a4>
   2410c:	mov	r2, r5
   24110:	mov	r0, r6
   24114:	mov	r3, #4
   24118:	add	ip, pc, ip
   2411c:	str	ip, [sp]
   24120:	bl	f7b8 <bsearch@plt>
   24124:	cmp	r0, #0
   24128:	beq	24264 <brlttyStart@@Base+0x1464>
   2412c:	ldr	r4, [r0]
   24130:	cmp	r4, #0
   24134:	beq	24264 <brlttyStart@@Base+0x1464>
   24138:	ldr	r3, [r4, #4]
   2413c:	cmp	r3, #0
   24140:	movne	r2, #1
   24144:	strbne	r2, [r3]
   24148:	ldrb	r0, [r4, #13]
   2414c:	cmp	r0, #0
   24150:	beq	241c8 <brlttyStart@@Base+0x13c8>
   24154:	sub	r8, r0, #1
   24158:	ldr	r5, [r4, #16]
   2415c:	ldr	r7, [pc, #324]	; 242a8 <brlttyStart@@Base+0x14a8>
   24160:	uxtb	r8, r8
   24164:	add	r8, r8, #1
   24168:	add	r7, pc, r7
   2416c:	add	r8, r5, r8
   24170:	mov	r1, r7
   24174:	mov	r0, #0
   24178:	bl	f608 <strtok@plt>
   2417c:	mov	r2, r5
   24180:	subs	r1, r0, #0
   24184:	mov	r0, r6
   24188:	beq	241b4 <brlttyStart@@Base+0x13b4>
   2418c:	ldr	r3, [r4, #8]
   24190:	bl	23fd4 <brlttyStart@@Base+0x11d4>
   24194:	cmp	r0, #0
   24198:	beq	241b4 <brlttyStart@@Base+0x13b4>
   2419c:	add	r5, r5, #1
   241a0:	cmp	r5, r8
   241a4:	bne	24170 <brlttyStart@@Base+0x1370>
   241a8:	mov	r0, #1
   241ac:	add	sp, sp, #12
   241b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   241b4:	mov	r3, #0
   241b8:	mov	r0, #1
   241bc:	strb	r3, [r5]
   241c0:	add	sp, sp, #12
   241c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   241c8:	ldr	r1, [pc, #220]	; 242ac <brlttyStart@@Base+0x14ac>
   241cc:	add	r1, pc, r1
   241d0:	bl	f608 <strtok@plt>
   241d4:	subs	r1, r0, #0
   241d8:	beq	2427c <brlttyStart@@Base+0x147c>
   241dc:	mov	r0, r6
   241e0:	ldr	r2, [r4, #16]
   241e4:	ldr	r3, [r4, #8]
   241e8:	bl	23fd4 <brlttyStart@@Base+0x11d4>
   241ec:	mov	r0, #1
   241f0:	add	sp, sp, #12
   241f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   241f8:	sxth	r8, r5
   241fc:	lsl	r9, r8, #2
   24200:	mov	r0, r9
   24204:	bl	fb48 <malloc@plt>
   24208:	cmp	r0, #0
   2420c:	str	r0, [r7]
   24210:	beq	24260 <brlttyStart@@Base+0x1460>
   24214:	cmp	r5, #0
   24218:	beq	24240 <brlttyStart@@Base+0x1440>
   2421c:	ldr	r3, [pc, #140]	; 242b0 <brlttyStart@@Base+0x14b0>
   24220:	add	r2, r9, r8
   24224:	sub	ip, r0, #4
   24228:	ldr	r3, [r4, r3]
   2422c:	add	r2, r3, r2, lsl #2
   24230:	str	r3, [ip, #4]!
   24234:	add	r3, r3, #20
   24238:	cmp	r3, r2
   2423c:	bne	24230 <brlttyStart@@Base+0x1430>
   24240:	ldr	r3, [pc, #108]	; 242b4 <brlttyStart@@Base+0x14b4>
   24244:	mov	r1, r5
   24248:	mov	r2, #4
   2424c:	add	r3, pc, r3
   24250:	bl	f53c <qsort@plt>
   24254:	ldr	r3, [pc, #92]	; 242b8 <brlttyStart@@Base+0x14b8>
   24258:	ldr	r1, [pc, r3]
   2425c:	b	24108 <brlttyStart@@Base+0x1308>
   24260:	bl	1c740 <logMallocError@@Base>
   24264:	ldr	r1, [pc, #80]	; 242bc <brlttyStart@@Base+0x14bc>
   24268:	mov	r2, r6
   2426c:	mov	r0, #4
   24270:	add	r1, pc, r1
   24274:	bl	1c634 <logMessage@@Base>
   24278:	b	241a8 <brlttyStart@@Base+0x13a8>
   2427c:	ldr	r1, [pc, #60]	; 242c0 <brlttyStart@@Base+0x14c0>
   24280:	mov	r2, r6
   24284:	mov	r0, #4
   24288:	add	r1, pc, r1
   2428c:	bl	1c634 <logMessage@@Base>
   24290:	b	241a8 <brlttyStart@@Base+0x13a8>
   24294:	andeq	ip, r2, ip, lsl #13
   24298:	muleq	r4, ip, r9
   2429c:	andeq	pc, r4, r4, ror r6	; <UNPREDICTABLE>
   242a0:	ldrdeq	r0, [r0], -r4
   242a4:			; <UNDEFINED> instruction: 0xfffffe94
   242a8:	strdeq	ip, [r2], -r0
   242ac:	andeq	ip, r2, ip, lsl #11
   242b0:	andeq	r0, r0, r4, asr r4
   242b4:			; <UNDEFINED> instruction: 0xfffffd6c
   242b8:	andeq	pc, r4, ip, lsl #10
   242bc:	andeq	ip, r2, r0, asr r5
   242c0:	andeq	ip, r2, r8, lsl r5
   242c4:	push	{r4, r5, r6, lr}
   242c8:	mov	r4, r0
   242cc:	mov	r6, r1
   242d0:	mov	r0, #32
   242d4:	mov	r1, r4
   242d8:	mov	r5, r2
   242dc:	bl	fb0c <fputc@plt>
   242e0:	cmn	r0, #1
   242e4:	beq	2433c <brlttyStart@@Base+0x153c>
   242e8:	cmp	r5, #0
   242ec:	beq	242fc <brlttyStart@@Base+0x14fc>
   242f0:	ldrb	r3, [r5, #4]
   242f4:	cmp	r3, r6
   242f8:	bhi	24320 <brlttyStart@@Base+0x1520>
   242fc:	ldr	r2, [pc, #64]	; 24344 <brlttyStart@@Base+0x1544>
   24300:	mov	r0, r4
   24304:	mov	r3, r6
   24308:	mov	r1, #1
   2430c:	add	r2, pc, r2
   24310:	bl	f65c <__fprintf_chk@plt>
   24314:	mvn	r0, r0
   24318:	lsr	r0, r0, #31
   2431c:	pop	{r4, r5, r6, pc}
   24320:	ldr	r3, [r5]
   24324:	mov	r1, r4
   24328:	ldr	r0, [r3, r6, lsl #2]
   2432c:	bl	fd64 <fputs@plt>
   24330:	adds	r0, r0, #1
   24334:	movne	r0, #1
   24338:	pop	{r4, r5, r6, pc}
   2433c:	mov	r0, #0
   24340:	pop	{r4, r5, r6, pc}
   24344:	andeq	r5, r3, r4, asr #12

00024348 <setStatusFields@@Base>:
   24348:	ldr	r3, [pc, #84]	; 243a4 <setStatusFields@@Base+0x5c>
   2434c:	ldr	r2, [pc, #84]	; 243a8 <setStatusFields@@Base+0x60>
   24350:	add	r3, pc, r3
   24354:	ldr	ip, [r3, r2]
   24358:	ldrb	r2, [ip]
   2435c:	cmp	r2, #0
   24360:	bxne	lr
   24364:	cmp	r0, #0
   24368:	bxeq	lr
   2436c:	ldr	r2, [pc, #56]	; 243ac <setStatusFields@@Base+0x64>
   24370:	sub	r0, r0, #1
   24374:	ldr	r1, [r3, r2]
   24378:	add	r3, r1, #47	; 0x2f
   2437c:	add	r1, r1, #56	; 0x38
   24380:	ldrb	r2, [r0, #1]!
   24384:	cmp	r2, #0
   24388:	beq	24398 <setStatusFields@@Base+0x50>
   2438c:	strb	r2, [r3, #1]!
   24390:	cmp	r3, r1
   24394:	bne	24380 <setStatusFields@@Base+0x38>
   24398:	mov	r3, #1
   2439c:	strb	r3, [ip]
   243a0:	bx	lr
   243a4:	andeq	lr, r4, r8, lsr #14
   243a8:	andeq	r0, r0, r0, lsr #9
   243ac:	andeq	r0, r0, r0, asr #10

000243b0 <resetPreferences@@Base>:
   243b0:	push	{r3, r4, r5, lr}
   243b4:	mov	r1, #0
   243b8:	ldr	r4, [pc, #104]	; 24428 <resetPreferences@@Base+0x78>
   243bc:	mov	r2, #82	; 0x52
   243c0:	ldr	r3, [pc, #100]	; 2442c <resetPreferences@@Base+0x7c>
   243c4:	add	r4, pc, r4
   243c8:	ldr	r5, [r4, r3]
   243cc:	mov	r0, r5
   243d0:	bl	f6b0 <memset@plt>
   243d4:	ldr	r3, [pc, #84]	; 24430 <resetPreferences@@Base+0x80>
   243d8:	mov	r2, #5
   243dc:	mov	r1, #64	; 0x40
   243e0:	strb	r2, [r5]
   243e4:	mov	r2, #6
   243e8:	strb	r1, [r5, #1]
   243ec:	strb	r2, [r5, #3]
   243f0:	ldr	r2, [r4, r3]
   243f4:	ldr	r3, [pc, #56]	; 24434 <resetPreferences@@Base+0x84>
   243f8:	ldrb	r5, [r2]
   243fc:	ldr	r0, [r4, r3]
   24400:	add	r5, r5, r5, lsl #2
   24404:	add	r5, r0, r5, lsl #2
   24408:	cmp	r5, r0
   2440c:	popls	{r3, r4, r5, pc}
   24410:	add	r4, r0, #20
   24414:	bl	23f70 <brlttyStart@@Base+0x1170>
   24418:	cmp	r5, r4
   2441c:	mov	r0, r4
   24420:	bhi	24410 <resetPreferences@@Base+0x60>
   24424:	pop	{r3, r4, r5, pc}
   24428:			; <UNDEFINED> instruction: 0x0004e6b4
   2442c:	andeq	r0, r0, r0, asr #10
   24430:	ldrdeq	r0, [r0], -r4
   24434:	andeq	r0, r0, r4, asr r4

00024438 <makePreferencesFilePath@@Base>:
   24438:	subs	r1, r0, #0
   2443c:	beq	2444c <makePreferencesFilePath@@Base+0x14>
   24440:	ldr	r0, [pc, #16]	; 24458 <makePreferencesFilePath@@Base+0x20>
   24444:	add	r0, pc, r0
   24448:	b	1c9c8 <makePath@@Base>
   2444c:	ldr	r1, [pc, #8]	; 2445c <makePreferencesFilePath@@Base+0x24>
   24450:	add	r1, pc, r1
   24454:	b	24440 <makePreferencesFilePath@@Base+0x8>
   24458:	muleq	r2, r4, r3
   2445c:			; <UNDEFINED> instruction: 0x0002bab4

00024460 <loadPreferencesFile@@Base>:
   24460:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24464:	sub	sp, sp, #100	; 0x64
   24468:	ldr	r5, [pc, #716]	; 2473c <loadPreferencesFile@@Base+0x2dc>
   2446c:	mov	r2, #1
   24470:	ldr	ip, [pc, #712]	; 24740 <loadPreferencesFile@@Base+0x2e0>
   24474:	mov	r7, r0
   24478:	add	r5, pc, r5
   2447c:	ldr	r1, [pc, #704]	; 24744 <loadPreferencesFile@@Base+0x2e4>
   24480:	ldr	r6, [r5, ip]
   24484:	add	r1, pc, r1
   24488:	ldr	ip, [r6]
   2448c:	str	ip, [sp, #92]	; 0x5c
   24490:	bl	1d1c0 <openDataFile@@Base>
   24494:	subs	r4, r0, #0
   24498:	beq	24544 <loadPreferencesFile@@Base+0xe4>
   2449c:	add	r8, sp, #8
   244a0:	mov	r1, #1
   244a4:	mov	r2, #82	; 0x52
   244a8:	mov	r3, r4
   244ac:	mov	r0, r8
   244b0:	bl	f908 <fread@plt>
   244b4:	mov	r9, r0
   244b8:	mov	r0, r4
   244bc:	bl	fadc <ferror@plt>
   244c0:	cmp	r0, #0
   244c4:	bne	2454c <loadPreferencesFile@@Base+0xec>
   244c8:	cmp	r9, #39	; 0x27
   244cc:	bls	244dc <loadPreferencesFile@@Base+0x7c>
   244d0:	ldrb	r3, [sp, #8]
   244d4:	cmp	r3, #5
   244d8:	beq	24594 <loadPreferencesFile@@Base+0x134>
   244dc:	mov	r0, r4
   244e0:	bl	fbc0 <fclose@plt>
   244e4:	ldr	r1, [pc, #604]	; 24748 <loadPreferencesFile@@Base+0x2e8>
   244e8:	mov	r0, r7
   244ec:	mov	r2, #1
   244f0:	add	r1, pc, r1
   244f4:	bl	1d1c0 <openDataFile@@Base>
   244f8:	subs	r4, r0, #0
   244fc:	beq	24544 <loadPreferencesFile@@Base+0xe4>
   24500:	bl	243b0 <resetPreferences@@Base>
   24504:	ldr	r1, [pc, #576]	; 2474c <loadPreferencesFile@@Base+0x2ec>
   24508:	mov	r0, r4
   2450c:	mov	r2, #0
   24510:	add	r1, pc, r1
   24514:	bl	1d49c <processLines@@Base>
   24518:	adds	r5, r0, #0
   2451c:	movne	r5, #1
   24520:	mov	r0, r4
   24524:	bl	fbc0 <fclose@plt>
   24528:	ldr	r2, [sp, #92]	; 0x5c
   2452c:	mov	r0, r5
   24530:	ldr	r3, [r6]
   24534:	cmp	r2, r3
   24538:	bne	24738 <loadPreferencesFile@@Base+0x2d8>
   2453c:	add	sp, sp, #100	; 0x64
   24540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24544:	mov	r5, r4
   24548:	b	24528 <loadPreferencesFile@@Base+0xc8>
   2454c:	ldr	r1, [pc, #508]	; 24750 <loadPreferencesFile@@Base+0x2f0>
   24550:	mov	r2, #5
   24554:	mov	r0, #0
   24558:	add	r1, pc, r1
   2455c:	mov	r5, r0
   24560:	bl	f9bc <dcgettext@plt>
   24564:	mov	r8, r0
   24568:	bl	fca4 <__errno_location@plt>
   2456c:	ldr	r0, [r0]
   24570:	bl	f5c0 <strerror@plt>
   24574:	ldr	r1, [pc, #472]	; 24754 <loadPreferencesFile@@Base+0x2f4>
   24578:	mov	r2, r8
   2457c:	mov	r3, r7
   24580:	add	r1, pc, r1
   24584:	str	r0, [sp]
   24588:	mov	r0, #3
   2458c:	bl	1c634 <logMessage@@Base>
   24590:	b	24520 <loadPreferencesFile@@Base+0xc0>
   24594:	ldrb	r3, [sp, #9]
   24598:	cmp	r3, #64	; 0x40
   2459c:	bne	244dc <loadPreferencesFile@@Base+0x7c>
   245a0:	ldr	r3, [pc, #432]	; 24758 <loadPreferencesFile@@Base+0x2f8>
   245a4:	mov	r1, r8
   245a8:	mov	r2, #82	; 0x52
   245ac:	ldr	fp, [r5, r3]
   245b0:	add	sl, fp, r9
   245b4:	mov	r0, fp
   245b8:	bl	fb24 <memcpy@plt>
   245bc:	ldr	r3, [pc, #408]	; 2475c <loadPreferencesFile@@Base+0x2fc>
   245c0:	ldr	r2, [pc, #408]	; 24760 <loadPreferencesFile@@Base+0x300>
   245c4:	ldr	r3, [r5, r3]
   245c8:	ldr	r7, [r5, r2]
   245cc:	ldrb	r8, [r3]
   245d0:	add	r8, r8, r8, lsl #2
   245d4:	add	r8, r7, r8, lsl #2
   245d8:	cmp	r8, r7
   245dc:	bls	24618 <loadPreferencesFile@@Base+0x1b8>
   245e0:	ldrb	r3, [r7, #13]
   245e4:	ldr	r2, [r7, #16]
   245e8:	cmp	r3, #0
   245ec:	moveq	r3, #1
   245f0:	cmp	r2, fp
   245f4:	bcc	24604 <loadPreferencesFile@@Base+0x1a4>
   245f8:	add	r3, r2, r3
   245fc:	cmp	sl, r3
   24600:	bcs	2460c <loadPreferencesFile@@Base+0x1ac>
   24604:	mov	r0, r7
   24608:	bl	23f70 <brlttyStart@@Base+0x1170>
   2460c:	add	r7, r7, #20
   24610:	cmp	r8, r7
   24614:	bhi	245e0 <loadPreferencesFile@@Base+0x180>
   24618:	cmp	r9, #57	; 0x39
   2461c:	bls	2470c <loadPreferencesFile@@Base+0x2ac>
   24620:	ldr	r3, [pc, #316]	; 24764 <loadPreferencesFile@@Base+0x304>
   24624:	mov	r2, #1
   24628:	ldr	r3, [r5, r3]
   2462c:	strb	r2, [r3]
   24630:	ldrb	r3, [fp, #3]
   24634:	cmp	r3, #0
   24638:	bne	246dc <loadPreferencesFile@@Base+0x27c>
   2463c:	mov	r3, #70	; 0x46
   24640:	strb	r3, [fp, #17]
   24644:	strb	r3, [fp, #19]
   24648:	strb	r3, [fp, #21]
   2464c:	mov	r3, #0
   24650:	strb	r3, [fp, #13]
   24654:	strb	r3, [fp, #15]
   24658:	ldrb	r8, [fp, #14]
   2465c:	mov	r1, #1
   24660:	ldrb	r7, [fp, #16]
   24664:	mov	r2, #50	; 0x32
   24668:	ldrb	r5, [fp, #22]
   2466c:	mov	r3, #10
   24670:	ldrb	lr, [fp, #24]
   24674:	lsl	r8, r8, #2
   24678:	ldrb	ip, [fp, #18]
   2467c:	lsl	r7, r7, #2
   24680:	ldrb	r0, [fp, #20]
   24684:	lsl	r5, r5, #2
   24688:	lsl	lr, lr, #2
   2468c:	strb	r8, [fp, #14]
   24690:	lsl	ip, ip, #2
   24694:	strb	r7, [fp, #16]
   24698:	lsl	r0, r0, #2
   2469c:	strb	r5, [fp, #22]
   246a0:	strb	lr, [fp, #24]
   246a4:	strb	ip, [fp, #18]
   246a8:	strb	r0, [fp, #20]
   246ac:	strb	r1, [fp, #7]
   246b0:	strb	r2, [fp, #9]
   246b4:	strb	r3, [fp, #11]
   246b8:	mov	r3, #0
   246bc:	strb	r3, [fp, #27]
   246c0:	mov	r3, #2
   246c4:	strb	r3, [fp, #5]
   246c8:	mov	r5, #1
   246cc:	mov	r3, #6
   246d0:	strb	r5, [fp, #38]	; 0x26
   246d4:	strb	r3, [fp, #3]
   246d8:	b	24520 <loadPreferencesFile@@Base+0xc0>
   246dc:	cmp	r3, #1
   246e0:	beq	2464c <loadPreferencesFile@@Base+0x1ec>
   246e4:	cmp	r3, #2
   246e8:	beq	24658 <loadPreferencesFile@@Base+0x1f8>
   246ec:	cmp	r3, #3
   246f0:	beq	246b8 <loadPreferencesFile@@Base+0x258>
   246f4:	cmp	r3, #4
   246f8:	beq	246c0 <loadPreferencesFile@@Base+0x260>
   246fc:	cmp	r3, #5
   24700:	movne	r5, #1
   24704:	bne	24520 <loadPreferencesFile@@Base+0xc0>
   24708:	b	246c8 <loadPreferencesFile@@Base+0x268>
   2470c:	ldrb	r3, [fp, #38]	; 0x26
   24710:	cmp	r3, #7
   24714:	bhi	24630 <loadPreferencesFile@@Base+0x1d0>
   24718:	ldr	r2, [pc, #72]	; 24768 <loadPreferencesFile@@Base+0x308>
   2471c:	add	r2, pc, r2
   24720:	ldr	r0, [r2, r3, lsl #2]
   24724:	ldrb	r3, [r0]
   24728:	cmp	r3, #0
   2472c:	beq	24630 <loadPreferencesFile@@Base+0x1d0>
   24730:	bl	24348 <setStatusFields@@Base>
   24734:	b	24630 <loadPreferencesFile@@Base+0x1d0>
   24738:	bl	f950 <__stack_chk_fail@plt>
   2473c:	andeq	lr, r4, r0, lsl #12
   24740:			; <UNDEFINED> instruction: 0x000003b4
   24744:	andeq	ip, r2, r4, ror #6
   24748:	muleq	r3, ip, fp
   2474c:			; <UNDEFINED> instruction: 0xfffffbac
   24750:	muleq	r2, r4, r2
   24754:	ldrdeq	sl, [r2], -r0
   24758:	andeq	r0, r0, r0, asr #10
   2475c:	ldrdeq	r0, [r0], -r4
   24760:	andeq	r0, r0, r4, asr r4
   24764:	andeq	r0, r0, r0, lsr #9
   24768:	ldrdeq	sl, [r4], -ip

0002476c <savePreferencesFile@@Base>:
   2476c:	ldr	r1, [pc, #384]	; 248f4 <savePreferencesFile@@Base+0x188>
   24770:	mov	r2, #0
   24774:	push	{r4, r5, r6, r7, r8, r9, lr}
   24778:	add	r1, pc, r1
   2477c:	sub	sp, sp, #12
   24780:	mov	r9, r0
   24784:	bl	1d1c0 <openDataFile@@Base>
   24788:	ldr	r3, [pc, #360]	; 248f8 <savePreferencesFile@@Base+0x18c>
   2478c:	add	r3, pc, r3
   24790:	subs	r6, r0, #0
   24794:	beq	248dc <savePreferencesFile@@Base+0x170>
   24798:	ldr	r2, [pc, #348]	; 248fc <savePreferencesFile@@Base+0x190>
   2479c:	ldr	r1, [pc, #348]	; 24900 <savePreferencesFile@@Base+0x194>
   247a0:	ldr	r2, [r3, r2]
   247a4:	ldr	r5, [r3, r1]
   247a8:	ldrb	r8, [r2]
   247ac:	add	r8, r8, r8, lsl #2
   247b0:	add	r8, r5, r8, lsl #2
   247b4:	cmp	r8, r5
   247b8:	bls	24834 <savePreferencesFile@@Base+0xc8>
   247bc:	ldr	r0, [r5]
   247c0:	mov	r1, r6
   247c4:	bl	fd64 <fputs@plt>
   247c8:	cmn	r0, #1
   247cc:	beq	24834 <savePreferencesFile@@Base+0xc8>
   247d0:	ldrb	r7, [r5, #13]
   247d4:	cmp	r7, #0
   247d8:	beq	248a8 <savePreferencesFile@@Base+0x13c>
   247dc:	ldr	r4, [r5, #16]
   247e0:	sub	r7, r7, #1
   247e4:	uxtab	r7, r4, r7
   247e8:	sub	r4, r4, #1
   247ec:	ldrb	r1, [r4, #1]!
   247f0:	mov	r0, r6
   247f4:	cmp	r1, #0
   247f8:	beq	24814 <savePreferencesFile@@Base+0xa8>
   247fc:	ldr	r2, [r5, #8]
   24800:	bl	242c4 <brlttyStart@@Base+0x14c4>
   24804:	cmp	r0, #0
   24808:	beq	2483c <savePreferencesFile@@Base+0xd0>
   2480c:	cmp	r4, r7
   24810:	bne	247ec <savePreferencesFile@@Base+0x80>
   24814:	mov	r0, #10
   24818:	mov	r1, r6
   2481c:	bl	fb0c <fputc@plt>
   24820:	cmn	r0, #1
   24824:	beq	24834 <savePreferencesFile@@Base+0xc8>
   24828:	add	r5, r5, #20
   2482c:	cmp	r8, r5
   24830:	bhi	247bc <savePreferencesFile@@Base+0x50>
   24834:	cmp	r5, r8
   24838:	beq	248ec <savePreferencesFile@@Base+0x180>
   2483c:	mov	r0, r6
   24840:	bl	fadc <ferror@plt>
   24844:	cmp	r0, #0
   24848:	beq	248c8 <savePreferencesFile@@Base+0x15c>
   2484c:	bl	fca4 <__errno_location@plt>
   24850:	mov	r5, r0
   24854:	ldr	r1, [pc, #168]	; 24904 <savePreferencesFile@@Base+0x198>
   24858:	mov	r2, #5
   2485c:	mov	r0, #0
   24860:	add	r1, pc, r1
   24864:	mov	r4, r0
   24868:	bl	f9bc <dcgettext@plt>
   2486c:	mov	r7, r0
   24870:	ldr	r0, [r5]
   24874:	bl	f5c0 <strerror@plt>
   24878:	ldr	r1, [pc, #136]	; 24908 <savePreferencesFile@@Base+0x19c>
   2487c:	mov	r2, r7
   24880:	mov	r3, r9
   24884:	add	r1, pc, r1
   24888:	str	r0, [sp]
   2488c:	mov	r0, #3
   24890:	bl	1c634 <logMessage@@Base>
   24894:	mov	r0, r6
   24898:	bl	fbc0 <fclose@plt>
   2489c:	mov	r0, r4
   248a0:	add	sp, sp, #12
   248a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   248a8:	ldr	r3, [r5, #16]
   248ac:	mov	r0, r6
   248b0:	ldr	r2, [r5, #8]
   248b4:	ldrb	r1, [r3]
   248b8:	bl	242c4 <brlttyStart@@Base+0x14c4>
   248bc:	cmp	r0, #0
   248c0:	bne	24814 <savePreferencesFile@@Base+0xa8>
   248c4:	b	24834 <savePreferencesFile@@Base+0xc8>
   248c8:	bl	fca4 <__errno_location@plt>
   248cc:	mov	r3, #5
   248d0:	mov	r5, r0
   248d4:	str	r3, [r0]
   248d8:	b	24854 <savePreferencesFile@@Base+0xe8>
   248dc:	mov	r4, r6
   248e0:	mov	r0, r4
   248e4:	add	sp, sp, #12
   248e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   248ec:	mov	r4, #1
   248f0:	b	24894 <savePreferencesFile@@Base+0x128>
   248f4:	andeq	r4, r3, r0, ror #5
   248f8:	andeq	lr, r4, ip, ror #5
   248fc:	ldrdeq	r0, [r0], -r4
   24900:	andeq	r0, r0, r4, asr r4
   24904:	andeq	fp, r2, ip, lsr #31
   24908:	andeq	sl, r2, ip, asr #5
   2490c:	ldr	r2, [r0]
   24910:	ldr	r3, [r0, #32]
   24914:	ldr	r2, [r2, #20]
   24918:	cmp	r2, r0
   2491c:	ldrbeq	r2, [r3, #68]	; 0x44
   24920:	ldreq	r3, [r3, #60]	; 0x3c
   24924:	ldrne	r0, [r3, #16]
   24928:	ldreq	r0, [r3, r2, lsl #2]
   2492c:	cmp	r0, #0
   24930:	bxne	lr
   24934:	ldr	r0, [pc, #4]	; 24940 <savePreferencesFile@@Base+0x1d4>
   24938:	add	r0, pc, r0
   2493c:	bx	lr
   24940:	andeq	sl, r2, ip, asr #7
   24944:	push	{r4, lr}
   24948:	mov	r4, r0
   2494c:	ldr	r3, [r0, #16]
   24950:	ldr	r3, [r3, #4]
   24954:	cmp	r3, #0
   24958:	beq	24964 <savePreferencesFile@@Base+0x1f8>
   2495c:	mov	r1, #0
   24960:	blx	r3
   24964:	ldr	r3, [r4, #32]
   24968:	ldrb	r2, [r3, #4]
   2496c:	orr	r2, r2, #1
   24970:	strb	r2, [r3, #4]
   24974:	pop	{r4, pc}
   24978:	ldr	r0, [pc, #4]	; 24984 <savePreferencesFile@@Base+0x218>
   2497c:	add	r0, pc, r0
   24980:	bx	lr
   24984:	andeq	ip, r2, r8, lsr #10
   24988:	push	{r3, r4, r5, r6, r7, lr}
   2498c:	mov	r4, r0
   24990:	ldrb	r5, [r0, #29]
   24994:	mov	r7, r1
   24998:	ldrb	r3, [r0, #28]
   2499c:	rsb	r5, r3, r5
   249a0:	add	r5, r5, #1
   249a4:	mov	r0, r4
   249a8:	blx	r7
   249ac:	subs	r5, r5, #1
   249b0:	beq	249f8 <savePreferencesFile@@Base+0x28c>
   249b4:	ldr	r3, [r4, #4]
   249b8:	ldrb	r1, [r4, #30]
   249bc:	ldrb	r6, [r3]
   249c0:	mov	r0, r6
   249c4:	bl	4e3f0 <formatAddress@@Base+0x444>
   249c8:	mov	r0, r4
   249cc:	tst	r1, #255	; 0xff
   249d0:	mov	r1, r6
   249d4:	bne	249a4 <savePreferencesFile@@Base+0x238>
   249d8:	ldr	r3, [r4, #24]
   249dc:	cmp	r3, #0
   249e0:	beq	249f0 <savePreferencesFile@@Base+0x284>
   249e4:	blx	r3
   249e8:	cmp	r0, #0
   249ec:	beq	249a4 <savePreferencesFile@@Base+0x238>
   249f0:	mov	r0, #1
   249f4:	pop	{r3, r4, r5, r6, r7, pc}
   249f8:	mov	r0, r5
   249fc:	pop	{r3, r4, r5, r6, r7, pc}
   24a00:	ldr	r2, [r0, #4]
   24a04:	ldrb	r3, [r2]
   24a08:	sub	r1, r3, #1
   24a0c:	strb	r1, [r2]
   24a10:	ldrb	r2, [r0, #28]
   24a14:	cmp	r2, r3
   24a18:	ldrcs	r3, [r0, #4]
   24a1c:	ldrbcs	r2, [r0, #29]
   24a20:	strbcs	r2, [r3]
   24a24:	bx	lr
   24a28:	ldr	r2, [r0, #4]
   24a2c:	ldrb	r3, [r2]
   24a30:	add	r1, r3, #1
   24a34:	strb	r1, [r2]
   24a38:	ldrb	r2, [r0, #29]
   24a3c:	cmp	r2, r3
   24a40:	ldrls	r3, [r0, #4]
   24a44:	ldrbls	r2, [r0, #28]
   24a48:	strbls	r2, [r3]
   24a4c:	bx	lr
   24a50:	push	{r1, r2, r3}
   24a54:	mov	r2, #1
   24a58:	push	{r4, r5, r6, lr}
   24a5c:	sub	sp, sp, #20
   24a60:	ldr	lr, [pc, #96]	; 24ac8 <savePreferencesFile@@Base+0x35c>
   24a64:	add	ip, sp, #40	; 0x28
   24a68:	ldr	r3, [pc, #92]	; 24acc <savePreferencesFile@@Base+0x360>
   24a6c:	add	r5, r0, #24
   24a70:	add	lr, pc, lr
   24a74:	ldr	r6, [sp, #36]	; 0x24
   24a78:	mov	r0, r5
   24a7c:	mov	r1, #16
   24a80:	ldr	r4, [lr, r3]
   24a84:	mvn	r3, #0
   24a88:	str	r6, [sp]
   24a8c:	str	ip, [sp, #4]
   24a90:	ldr	lr, [r4]
   24a94:	str	ip, [sp, #8]
   24a98:	str	lr, [sp, #12]
   24a9c:	bl	f5d8 <__vsnprintf_chk@plt>
   24aa0:	ldr	r2, [sp, #12]
   24aa4:	mov	r0, r5
   24aa8:	ldr	r3, [r4]
   24aac:	cmp	r2, r3
   24ab0:	bne	24ac4 <savePreferencesFile@@Base+0x358>
   24ab4:	add	sp, sp, #20
   24ab8:	pop	{r4, r5, r6, lr}
   24abc:	add	sp, sp, #12
   24ac0:	bx	lr
   24ac4:	bl	f950 <__stack_chk_fail@plt>
   24ac8:	andeq	lr, r4, r8
   24acc:			; <UNDEFINED> instruction: 0x000003b4
   24ad0:	ldm	r0, {r0, r3}
   24ad4:	ldr	r1, [pc, #8]	; 24ae4 <savePreferencesFile@@Base+0x378>
   24ad8:	ldrb	r2, [r3]
   24adc:	add	r1, pc, r1
   24ae0:	b	24a50 <savePreferencesFile@@Base+0x2e4>
   24ae4:	andeq	r4, r3, r4, ror lr
   24ae8:	push	{r3, r4, r5, lr}
   24aec:	mov	r5, r1
   24af0:	ldr	r4, [r0, #32]
   24af4:	ldr	r0, [r4, #16]
   24af8:	cmp	r0, #0
   24afc:	beq	24b04 <savePreferencesFile@@Base+0x398>
   24b00:	bl	f4f4 <free@plt>
   24b04:	cmp	r5, #0
   24b08:	movne	r0, #0
   24b0c:	beq	24b68 <savePreferencesFile@@Base+0x3fc>
   24b10:	ldr	r3, [r4, #24]
   24b14:	str	r0, [r4, #16]
   24b18:	cmp	r3, #0
   24b1c:	popeq	{r3, r4, r5, pc}
   24b20:	ldr	r3, [r4, #32]
   24b24:	cmp	r3, #0
   24b28:	movne	r2, #0
   24b2c:	movne	r3, r2
   24b30:	movne	r0, r2
   24b34:	beq	24b54 <savePreferencesFile@@Base+0x3e8>
   24b38:	ldr	r1, [r4, #28]
   24b3c:	add	r3, r3, #1
   24b40:	str	r0, [r1, r2, lsl #2]
   24b44:	mov	r2, r3
   24b48:	ldr	r1, [r4, #32]
   24b4c:	cmp	r3, r1
   24b50:	bcc	24b38 <savePreferencesFile@@Base+0x3cc>
   24b54:	add	r0, r4, #24
   24b58:	bl	fba8 <globfree@plt>
   24b5c:	mov	r3, #0
   24b60:	str	r3, [r4, #24]
   24b64:	pop	{r3, r4, r5, pc}
   24b68:	ldrb	r2, [r4, #68]	; 0x44
   24b6c:	ldr	r3, [r4, #60]	; 0x3c
   24b70:	ldr	r0, [r3, r2, lsl #2]
   24b74:	bl	f740 <__strdup@plt>
   24b78:	b	24b10 <savePreferencesFile@@Base+0x3a4>
   24b7c:	ldr	r0, [r0]
   24b80:	ldr	r1, [r1]
   24b84:	b	fc5c <strcmp@plt>
   24b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24b8c:	mov	r9, r0
   24b90:	ldr	r6, [r0, #32]
   24b94:	mov	r4, #0
   24b98:	ldr	r0, [pc, #620]	; 24e0c <savePreferencesFile@@Base+0x6a0>
   24b9c:	mov	r2, #2
   24ba0:	add	r3, r6, #72	; 0x48
   24ba4:	sub	sp, sp, #12
   24ba8:	mov	r1, r4
   24bac:	add	r0, pc, r0
   24bb0:	str	r2, [r6, #64]	; 0x40
   24bb4:	str	r3, [r6, #60]	; 0x3c
   24bb8:	str	r4, [r6, #80]	; 0x50
   24bbc:	bl	f8c0 <open@plt>
   24bc0:	cmn	r0, #1
   24bc4:	mov	r5, r0
   24bc8:	beq	24d68 <savePreferencesFile@@Base+0x5fc>
   24bcc:	ldr	r0, [r6]
   24bd0:	bl	f3e0 <chdir@plt>
   24bd4:	cmn	r0, #1
   24bd8:	beq	24da8 <savePreferencesFile@@Base+0x63c>
   24bdc:	add	r7, r6, #24
   24be0:	mov	r1, r4
   24be4:	mov	r2, #36	; 0x24
   24be8:	mov	r0, r7
   24bec:	bl	f6b0 <memset@plt>
   24bf0:	ldr	ip, [r6, #64]	; 0x40
   24bf4:	mov	r3, r7
   24bf8:	mov	r2, r4
   24bfc:	ldr	r0, [r6, #8]
   24c00:	mov	r1, #8
   24c04:	str	ip, [r6, #32]
   24c08:	bl	fe00 <glob@plt>
   24c0c:	cmp	r0, r4
   24c10:	bne	24c44 <savePreferencesFile@@Base+0x4d8>
   24c14:	ldr	r2, [r6, #28]
   24c18:	ldr	r3, [r6, #64]	; 0x40
   24c1c:	str	r2, [r6, #60]	; 0x3c
   24c20:	ldr	r1, [r2, r3, lsl #2]
   24c24:	add	r2, r2, r3, lsl #2
   24c28:	cmp	r1, #0
   24c2c:	beq	24c44 <savePreferencesFile@@Base+0x4d8>
   24c30:	add	r3, r3, #1
   24c34:	str	r3, [r6, #64]	; 0x40
   24c38:	ldr	r1, [r2, #4]!
   24c3c:	cmp	r1, #0
   24c40:	bne	24c30 <savePreferencesFile@@Base+0x4c4>
   24c44:	mov	r0, r5
   24c48:	bl	f71c <fchdir@plt>
   24c4c:	cmn	r0, #1
   24c50:	beq	24df0 <savePreferencesFile@@Base+0x684>
   24c54:	mov	r0, r5
   24c58:	bl	f764 <close@plt>
   24c5c:	ldr	r0, [r6, #60]	; 0x3c
   24c60:	mov	r2, #4
   24c64:	ldr	r1, [r6, #64]	; 0x40
   24c68:	ldr	r3, [pc, #416]	; 24e10 <savePreferencesFile@@Base+0x6a4>
   24c6c:	add	r0, r0, #8
   24c70:	sub	r1, r1, #2
   24c74:	add	r3, pc, r3
   24c78:	bl	f53c <qsort@plt>
   24c7c:	ldrb	r3, [r6, #20]
   24c80:	tst	r3, #1
   24c84:	moveq	r3, #4
   24c88:	moveq	r1, #1
   24c8c:	beq	24ca8 <savePreferencesFile@@Base+0x53c>
   24c90:	ldr	r2, [r6, #60]	; 0x3c
   24c94:	mov	r3, #0
   24c98:	ldr	r0, [pc, #372]	; 24e14 <savePreferencesFile@@Base+0x6a8>
   24c9c:	mov	r1, r3
   24ca0:	add	r0, pc, r0
   24ca4:	str	r0, [r2, #4]
   24ca8:	ldr	r0, [r6, #60]	; 0x3c
   24cac:	mov	r2, #0
   24cb0:	ldr	ip, [r6, #12]
   24cb4:	str	ip, [r0, r3]
   24cb8:	ldr	r5, [r6, #64]	; 0x40
   24cbc:	ldr	r7, [r6, #60]	; 0x3c
   24cc0:	rsb	r5, r1, r5
   24cc4:	strb	r2, [r6, #68]	; 0x44
   24cc8:	add	r7, r7, r3
   24ccc:	cmp	r5, #1
   24cd0:	str	r5, [r6, #64]	; 0x40
   24cd4:	str	r7, [r6, #60]	; 0x3c
   24cd8:	mov	fp, r7
   24cdc:	ble	24e00 <savePreferencesFile@@Base+0x694>
   24ce0:	ldr	sl, [r6, #12]
   24ce4:	mov	r8, r7
   24ce8:	mov	r4, #1
   24cec:	b	24cf8 <savePreferencesFile@@Base+0x58c>
   24cf0:	cmp	r4, r5
   24cf4:	beq	24d20 <savePreferencesFile@@Base+0x5b4>
   24cf8:	ldr	r0, [r8, #4]!
   24cfc:	mov	r1, sl
   24d00:	bl	fc5c <strcmp@plt>
   24d04:	add	r4, r4, #1
   24d08:	cmp	r0, #0
   24d0c:	bne	24cf0 <savePreferencesFile@@Base+0x584>
   24d10:	add	r7, fp, #4
   24d14:	sub	r5, r5, #1
   24d18:	str	r7, [r6, #60]	; 0x3c
   24d1c:	str	r5, [r6, #64]	; 0x40
   24d20:	ldr	r8, [r6, #16]
   24d24:	sub	r7, r7, #4
   24d28:	mov	r4, #0
   24d2c:	b	24d3c <savePreferencesFile@@Base+0x5d0>
   24d30:	add	r4, r4, #1
   24d34:	cmp	r4, r5
   24d38:	beq	24d54 <savePreferencesFile@@Base+0x5e8>
   24d3c:	ldr	r0, [r7, #4]!
   24d40:	mov	r1, r8
   24d44:	bl	fc5c <strcmp@plt>
   24d48:	cmp	r0, #0
   24d4c:	bne	24d30 <savePreferencesFile@@Base+0x5c4>
   24d50:	strb	r4, [r6, #68]	; 0x44
   24d54:	sub	r5, r5, #1
   24d58:	mov	r0, #1
   24d5c:	strb	r5, [r9, #29]
   24d60:	add	sp, sp, #12
   24d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d68:	ldr	r1, [pc, #168]	; 24e18 <savePreferencesFile@@Base+0x6ac>
   24d6c:	mov	r2, #5
   24d70:	mov	r0, r4
   24d74:	add	r1, pc, r1
   24d78:	bl	f9bc <dcgettext@plt>
   24d7c:	mov	r4, r0
   24d80:	bl	fca4 <__errno_location@plt>
   24d84:	ldr	r0, [r0]
   24d88:	bl	f5c0 <strerror@plt>
   24d8c:	ldr	r1, [pc, #136]	; 24e1c <savePreferencesFile@@Base+0x6b0>
   24d90:	mov	r2, r4
   24d94:	add	r1, pc, r1
   24d98:	mov	r3, r0
   24d9c:	mov	r0, #3
   24da0:	bl	1c634 <logMessage@@Base>
   24da4:	b	24c5c <savePreferencesFile@@Base+0x4f0>
   24da8:	ldr	r1, [pc, #112]	; 24e20 <savePreferencesFile@@Base+0x6b4>
   24dac:	mov	r2, #5
   24db0:	mov	r0, r4
   24db4:	add	r1, pc, r1
   24db8:	bl	f9bc <dcgettext@plt>
   24dbc:	mov	r7, r0
   24dc0:	bl	fca4 <__errno_location@plt>
   24dc4:	ldr	r4, [r6]
   24dc8:	ldr	r0, [r0]
   24dcc:	bl	f5c0 <strerror@plt>
   24dd0:	ldr	r1, [pc, #76]	; 24e24 <savePreferencesFile@@Base+0x6b8>
   24dd4:	mov	r2, r7
   24dd8:	mov	r3, r4
   24ddc:	add	r1, pc, r1
   24de0:	str	r0, [sp]
   24de4:	mov	r0, #3
   24de8:	bl	1c634 <logMessage@@Base>
   24dec:	b	24c54 <savePreferencesFile@@Base+0x4e8>
   24df0:	ldr	r0, [pc, #48]	; 24e28 <savePreferencesFile@@Base+0x6bc>
   24df4:	add	r0, pc, r0
   24df8:	bl	1c6fc <logSystemError@@Base>
   24dfc:	b	24c54 <savePreferencesFile@@Base+0x4e8>
   24e00:	cmp	r5, #0
   24e04:	ble	24d54 <savePreferencesFile@@Base+0x5e8>
   24e08:	b	24d20 <savePreferencesFile@@Base+0x5b4>
   24e0c:	andeq	fp, r2, r4, lsl r4
   24e10:			; <UNDEFINED> instruction: 0xffffff00
   24e14:	andeq	sl, r2, r4, rrx
   24e18:	andeq	ip, r2, r0, asr #2
   24e1c:	andeq	sl, r2, r0, lsr #11
   24e20:	andeq	sl, r2, r0, lsr r1
   24e24:	andeq	r9, r2, r4, ror sp
   24e28:	strheq	ip, [r2], -r8
   24e2c:	ldr	r3, [pc, #88]	; 24e8c <savePreferencesFile@@Base+0x720>
   24e30:	ldr	r2, [pc, #88]	; 24e90 <savePreferencesFile@@Base+0x724>
   24e34:	add	r3, pc, r3
   24e38:	ldr	r3, [r3, r2]
   24e3c:	ldrb	r2, [r3, #79]	; 0x4f
   24e40:	cmp	r2, #0
   24e44:	beq	24e80 <savePreferencesFile@@Base+0x714>
   24e48:	ldrb	r2, [r3, #81]	; 0x51
   24e4c:	ldr	r3, [r0, #32]
   24e50:	cmp	r2, #0
   24e54:	ldr	r0, [r0]
   24e58:	beq	24e6c <savePreferencesFile@@Base+0x700>
   24e5c:	ldr	r1, [pc, #48]	; 24e94 <savePreferencesFile@@Base+0x728>
   24e60:	ldr	r2, [r3, #8]
   24e64:	add	r1, pc, r1
   24e68:	b	24a50 <savePreferencesFile@@Base+0x2e4>
   24e6c:	ldr	r1, [pc, #36]	; 24e98 <savePreferencesFile@@Base+0x72c>
   24e70:	ldr	r2, [r3, #12]
   24e74:	add	r1, pc, r1
   24e78:	ldr	r3, [r3, #8]
   24e7c:	b	24a50 <savePreferencesFile@@Base+0x2e4>
   24e80:	ldr	r0, [pc, #20]	; 24e9c <savePreferencesFile@@Base+0x730>
   24e84:	add	r0, pc, r0
   24e88:	bx	lr
   24e8c:	andeq	sp, r4, r4, asr #24
   24e90:	andeq	r0, r0, r0, asr #10
   24e94:	andeq	r4, r3, ip, ror #21
   24e98:	andeq	ip, r2, r0, rrx
   24e9c:	andeq	r9, r2, r0, lsl #29
   24ea0:	ldr	r1, [pc, #12]	; 24eb4 <savePreferencesFile@@Base+0x748>
   24ea4:	mov	r0, #0
   24ea8:	mov	r2, #5
   24eac:	add	r1, pc, r1
   24eb0:	b	f9bc <dcgettext@plt>
   24eb4:	andeq	ip, r2, r0, lsr r0
   24eb8:	ldr	r1, [r0, #4]
   24ebc:	ldrb	r3, [r0, #28]
   24ec0:	ldr	r2, [r0, #32]
   24ec4:	ldrb	r1, [r1]
   24ec8:	rsb	r3, r3, r1
   24ecc:	add	r3, r2, r3, lsl #3
   24ed0:	ldr	r1, [r3, #4]
   24ed4:	cmp	r1, #0
   24ed8:	beq	24f00 <savePreferencesFile@@Base+0x794>
   24edc:	ldrb	r3, [r1]
   24ee0:	cmp	r3, #0
   24ee4:	bne	24ef4 <savePreferencesFile@@Base+0x788>
   24ee8:	ldr	r0, [pc, #28]	; 24f0c <savePreferencesFile@@Base+0x7a0>
   24eec:	add	r0, pc, r0
   24ef0:	bx	lr
   24ef4:	mov	r0, #0
   24ef8:	mov	r2, #5
   24efc:	b	f9bc <dcgettext@plt>
   24f00:	ldr	r0, [pc, #8]	; 24f10 <savePreferencesFile@@Base+0x7a4>
   24f04:	add	r0, pc, r0
   24f08:	bx	lr
   24f0c:	andeq	r9, r2, r8, lsl lr
   24f10:	andeq	r9, r2, r0, lsl #28
   24f14:	ldr	r1, [r0, #4]
   24f18:	ldrb	r2, [r0, #28]
   24f1c:	ldr	r3, [r0, #32]
   24f20:	ldrb	r1, [r1]
   24f24:	rsb	r2, r2, r1
   24f28:	ldr	r1, [r3, r2, lsl #3]
   24f2c:	cmp	r1, #0
   24f30:	beq	24f58 <savePreferencesFile@@Base+0x7ec>
   24f34:	ldrb	r3, [r1]
   24f38:	cmp	r3, #0
   24f3c:	bne	24f4c <savePreferencesFile@@Base+0x7e0>
   24f40:	ldr	r0, [pc, #28]	; 24f64 <savePreferencesFile@@Base+0x7f8>
   24f44:	add	r0, pc, r0
   24f48:	bx	lr
   24f4c:	mov	r0, #0
   24f50:	mov	r2, #5
   24f54:	b	f9bc <dcgettext@plt>
   24f58:	ldr	r0, [pc, #8]	; 24f68 <savePreferencesFile@@Base+0x7fc>
   24f5c:	add	r0, pc, r0
   24f60:	bx	lr
   24f64:	andeq	r9, r2, r0, asr #27
   24f68:	andeq	r9, r2, r8, lsr #27

00024f6c <newMenu@@Base>:
   24f6c:	push	{r3, lr}
   24f70:	mov	r0, #40	; 0x28
   24f74:	bl	fb48 <malloc@plt>
   24f78:	cmp	r0, #0
   24f7c:	popeq	{r3, pc}
   24f80:	mov	r3, #0
   24f84:	str	r3, [r0]
   24f88:	str	r3, [r0, #4]
   24f8c:	str	r3, [r0, #8]
   24f90:	str	r3, [r0, #12]
   24f94:	str	r3, [r0, #16]
   24f98:	str	r3, [r0, #20]
   24f9c:	pop	{r3, pc}

00024fa0 <deallocateMenu@@Base>:
   24fa0:	push	{r4, r5, r6, lr}
   24fa4:	subs	r6, r0, #0
   24fa8:	popeq	{r4, r5, r6, pc}
   24fac:	ldr	r4, [r6, #4]
   24fb0:	cmp	r4, #0
   24fb4:	beq	24ffc <deallocateMenu@@Base+0x5c>
   24fb8:	ldr	r5, [r6, #12]
   24fbc:	add	r5, r5, r5, lsl #3
   24fc0:	add	r5, r4, r5, lsl #2
   24fc4:	cmp	r4, r5
   24fc8:	bcs	25008 <deallocateMenu@@Base+0x68>
   24fcc:	mov	r0, r4
   24fd0:	add	r4, r4, #36	; 0x24
   24fd4:	ldr	r3, [r4, #-20]	; 0xffffffec
   24fd8:	mov	r1, #1
   24fdc:	ldr	r3, [r3, #4]
   24fe0:	cmp	r3, #0
   24fe4:	beq	24fec <deallocateMenu@@Base+0x4c>
   24fe8:	blx	r3
   24fec:	cmp	r5, r4
   24ff0:	bhi	24fcc <deallocateMenu@@Base+0x2c>
   24ff4:	ldr	r0, [r6, #4]
   24ff8:	bl	f4f4 <free@plt>
   24ffc:	mov	r0, r6
   25000:	pop	{r4, r5, r6, lr}
   25004:	b	f4f4 <free@plt>
   25008:	mov	r0, r4
   2500c:	b	24ff8 <deallocateMenu@@Base+0x58>
   25010:	cmp	r1, #0
   25014:	push	{r4, lr}
   25018:	popeq	{r4, pc}
   2501c:	ldr	r4, [r0, #32]
   25020:	ldr	r0, [r4]
   25024:	bl	24fa0 <deallocateMenu@@Base>
   25028:	mov	r0, r4
   2502c:	pop	{r4, lr}
   25030:	b	f4f4 <free@plt>

00025034 <getMenuParent@@Base>:
   25034:	ldr	r0, [r0]
   25038:	bx	lr

0002503c <getMenuSize@@Base>:
   2503c:	ldr	r0, [r0, #12]
   25040:	bx	lr

00025044 <getMenuIndex@@Base>:
   25044:	ldr	r0, [r0, #16]
   25048:	bx	lr

0002504c <getMenuItem@@Base>:
   2504c:	ldr	r3, [r0, #12]
   25050:	cmp	r3, r1
   25054:	addhi	r1, r1, r1, lsl #3
   25058:	ldrhi	r3, [r0, #4]
   2505c:	addhi	r0, r3, r1, lsl #2
   25060:	movls	r0, #0
   25064:	bx	lr
   25068:	push	{r4, r5, r6, r7, lr}
   2506c:	mov	r7, r1
   25070:	mov	r6, r2
   25074:	ldr	r1, [r0, #12]
   25078:	ldr	r2, [r0, #8]
   2507c:	sub	sp, sp, #12
   25080:	mov	r5, r0
   25084:	cmp	r1, r2
   25088:	beq	25118 <getMenuItem@@Base+0xcc>
   2508c:	add	r2, r1, #1
   25090:	mov	r0, r5
   25094:	str	r2, [r5, #12]
   25098:	bl	2504c <getMenuItem@@Base>
   2509c:	stm	r0, {r5, r7}
   250a0:	mov	r4, r0
   250a4:	ldr	r1, [r6]
   250a8:	cmp	r1, #0
   250ac:	beq	25188 <getMenuItem@@Base+0x13c>
   250b0:	ldrb	r3, [r1]
   250b4:	ldr	r0, [pc, #232]	; 251a4 <getMenuItem@@Base+0x158>
   250b8:	cmp	r3, #0
   250bc:	add	r0, pc, r0
   250c0:	bne	25160 <getMenuItem@@Base+0x114>
   250c4:	str	r0, [r4, #8]
   250c8:	ldr	r1, [r6, #4]
   250cc:	cmp	r1, #0
   250d0:	beq	2517c <getMenuItem@@Base+0x130>
   250d4:	ldrb	r3, [r1]
   250d8:	cmp	r3, #0
   250dc:	bne	2514c <getMenuItem@@Base+0x100>
   250e0:	ldr	r3, [pc, #192]	; 251a8 <getMenuItem@@Base+0x15c>
   250e4:	add	r3, pc, r3
   250e8:	mov	r0, r4
   250ec:	str	r3, [r4, #12]
   250f0:	mov	r2, #1
   250f4:	mov	r3, #0
   250f8:	strb	r2, [r4, #30]
   250fc:	str	r3, [r4, #16]
   25100:	str	r3, [r4, #20]
   25104:	str	r3, [r4, #24]
   25108:	strb	r3, [r4, #28]
   2510c:	strb	r3, [r4, #29]
   25110:	add	sp, sp, #12
   25114:	pop	{r4, r5, r6, r7, pc}
   25118:	cmp	r1, #0
   2511c:	ldr	r0, [r0, #4]
   25120:	lslne	r4, r1, #1
   25124:	addne	r3, r4, r1, lsl #4
   25128:	moveq	r1, #576	; 0x240
   2512c:	moveq	r4, #16
   25130:	lslne	r1, r3, #2
   25134:	bl	f878 <realloc@plt>
   25138:	cmp	r0, #0
   2513c:	beq	25194 <getMenuItem@@Base+0x148>
   25140:	ldr	r1, [r5, #12]
   25144:	stmib	r5, {r0, r4}
   25148:	b	2508c <getMenuItem@@Base+0x40>
   2514c:	mov	r0, #0
   25150:	mov	r2, #5
   25154:	bl	f9bc <dcgettext@plt>
   25158:	mov	r3, r0
   2515c:	b	250e8 <getMenuItem@@Base+0x9c>
   25160:	mov	r0, #0
   25164:	mov	r2, #5
   25168:	bl	f9bc <dcgettext@plt>
   2516c:	str	r0, [r4, #8]
   25170:	ldr	r1, [r6, #4]
   25174:	cmp	r1, #0
   25178:	bne	250d4 <getMenuItem@@Base+0x88>
   2517c:	ldr	r3, [pc, #40]	; 251ac <getMenuItem@@Base+0x160>
   25180:	add	r3, pc, r3
   25184:	b	250e8 <getMenuItem@@Base+0x9c>
   25188:	ldr	r0, [pc, #32]	; 251b0 <getMenuItem@@Base+0x164>
   2518c:	add	r0, pc, r0
   25190:	b	250c4 <getMenuItem@@Base+0x78>
   25194:	str	r0, [sp, #4]
   25198:	bl	1c740 <logMallocError@@Base>
   2519c:	ldr	r0, [sp, #4]
   251a0:	b	25110 <getMenuItem@@Base+0xc4>
   251a4:	andeq	r9, r2, r8, asr #24
   251a8:	andeq	r9, r2, r0, lsr #24
   251ac:	andeq	r9, r2, r4, lsl #23
   251b0:	andeq	r9, r2, r8, ror fp
   251b4:	push	{r4, lr}
   251b8:	mov	r4, r2
   251bc:	bl	2504c <getMenuItem@@Base>
   251c0:	cmp	r0, #0
   251c4:	popeq	{r4, pc}
   251c8:	cmp	r4, #0
   251cc:	bne	251e4 <getMenuItem@@Base+0x198>
   251d0:	ldr	r3, [r0, #20]
   251d4:	cmp	r3, #0
   251d8:	beq	251e4 <getMenuItem@@Base+0x198>
   251dc:	blx	r3
   251e0:	pop	{r4, pc}
   251e4:	mov	r0, #1
   251e8:	pop	{r4, pc}
   251ec:	push	{r3, r4, r5, r6, r7, lr}
   251f0:	mov	r2, #0
   251f4:	ldr	r3, [r0, #32]
   251f8:	mov	r7, r0
   251fc:	str	r2, [r3, #12]
   25200:	ldr	r3, [r0, #32]
   25204:	ldr	r6, [r3]
   25208:	mov	r0, r6
   2520c:	bl	2503c <getMenuSize@@Base>
   25210:	cmp	r0, #1
   25214:	mov	r5, r0
   25218:	bls	25250 <getMenuItem@@Base+0x204>
   2521c:	mov	r4, #1
   25220:	mov	r2, #0
   25224:	mov	r1, r4
   25228:	mov	r0, r6
   2522c:	add	r4, r4, #1
   25230:	bl	251b4 <getMenuItem@@Base+0x168>
   25234:	cmp	r0, #0
   25238:	ldrne	r3, [r7, #32]
   2523c:	ldrne	r2, [r3, #12]
   25240:	addne	r2, r2, #1
   25244:	strne	r2, [r3, #12]
   25248:	cmp	r4, r5
   2524c:	bne	25220 <getMenuItem@@Base+0x1d4>
   25250:	ldr	r3, [r7, #32]
   25254:	sub	r5, r5, #1
   25258:	mov	r0, #1
   2525c:	str	r5, [r3, #8]
   25260:	pop	{r3, r4, r5, r6, r7, pc}
   25264:	push	{r3, lr}
   25268:	ldr	r3, [r0]
   2526c:	ldr	r0, [r3]
   25270:	ldr	r1, [r0, #16]
   25274:	bl	2504c <getMenuItem@@Base>
   25278:	ldr	r2, [r0, #32]
   2527c:	ldrb	r1, [r2, #4]
   25280:	bfc	r1, #0, #1
   25284:	strb	r1, [r2, #4]
   25288:	ldr	r3, [r0, #16]
   2528c:	ldr	r3, [r3]
   25290:	cmp	r3, #0
   25294:	popeq	{r3, pc}
   25298:	blx	r3
   2529c:	pop	{r3, pc}

000252a0 <isSettableMenuItem@@Base>:
   252a0:	ldr	r0, [r0, #4]
   252a4:	adds	r0, r0, #0
   252a8:	movne	r0, #1
   252ac:	bx	lr

000252b0 <getMenuItemName@@Base>:
   252b0:	add	r0, r0, #8
   252b4:	bx	lr
   252b8:	push	{r3, lr}
   252bc:	ldr	r3, [r0]
   252c0:	ldr	r0, [r3]
   252c4:	ldr	r1, [r0, #16]
   252c8:	bl	2504c <getMenuItem@@Base>
   252cc:	bl	252b0 <getMenuItemName@@Base>
   252d0:	ldr	r1, [r0]
   252d4:	cmp	r1, #0
   252d8:	beq	25304 <getMenuItemName@@Base+0x54>
   252dc:	ldrb	r3, [r1]
   252e0:	cmp	r3, #0
   252e4:	bne	252f4 <getMenuItemName@@Base+0x44>
   252e8:	ldr	r0, [pc, #32]	; 25310 <getMenuItemName@@Base+0x60>
   252ec:	add	r0, pc, r0
   252f0:	pop	{r3, pc}
   252f4:	mov	r0, #0
   252f8:	mov	r2, #5
   252fc:	pop	{r3, lr}
   25300:	b	f9bc <dcgettext@plt>
   25304:	ldr	r0, [pc, #8]	; 25314 <getMenuItemName@@Base+0x64>
   25308:	add	r0, pc, r0
   2530c:	pop	{r3, pc}
   25310:	andeq	r9, r2, r8, lsl sl
   25314:	strdeq	r9, [r2], -ip

00025318 <getMenuItemValue@@Base>:
   25318:	push	{r3, lr}
   2531c:	ldr	r3, [r0, #16]
   25320:	ldr	r3, [r3, #12]
   25324:	blx	r3
   25328:	pop	{r3, pc}

0002532c <getMenuItemComment@@Base>:
   2532c:	push	{r3, lr}
   25330:	ldr	r3, [r0, #16]
   25334:	ldr	r3, [r3, #16]
   25338:	cmp	r3, #0
   2533c:	beq	25348 <getMenuItemComment@@Base+0x1c>
   25340:	blx	r3
   25344:	pop	{r3, pc}
   25348:	ldr	r0, [pc, #4]	; 25354 <getMenuItemComment@@Base+0x28>
   2534c:	add	r0, pc, r0
   25350:	pop	{r3, pc}
   25354:			; <UNDEFINED> instruction: 0x000299b8

00025358 <setMenuItemTester@@Base>:
   25358:	str	r1, [r0, #20]
   2535c:	bx	lr

00025360 <setMenuItemChanged@@Base>:
   25360:	str	r1, [r0, #24]
   25364:	bx	lr

00025368 <newNumericMenuItem@@Base>:
   25368:	push	{r4, r5, r6, lr}
   2536c:	mov	r6, r3
   25370:	ldrb	r5, [sp, #16]
   25374:	ldrb	r4, [sp, #20]
   25378:	bl	25068 <getMenuItem@@Base+0x1c>
   2537c:	cmp	r0, #0
   25380:	popeq	{r4, r5, r6, pc}
   25384:	ldr	r3, [pc, #20]	; 253a0 <newNumericMenuItem@@Base+0x38>
   25388:	strb	r6, [r0, #28]
   2538c:	add	r3, pc, r3
   25390:	strb	r5, [r0, #29]
   25394:	strb	r4, [r0, #30]
   25398:	str	r3, [r0, #16]
   2539c:	pop	{r4, r5, r6, pc}
   253a0:	andeq	sl, r4, ip, asr r5

000253a4 <newStringsMenuItem@@Base>:
   253a4:	push	{r3, r4, r5, lr}
   253a8:	mov	r5, r3
   253ac:	ldrb	r4, [sp, #16]
   253b0:	bl	25068 <getMenuItem@@Base+0x1c>
   253b4:	cmp	r0, #0
   253b8:	popeq	{r3, r4, r5, pc}
   253bc:	ldr	r2, [pc, #40]	; 253ec <newStringsMenuItem@@Base+0x48>
   253c0:	sub	r4, r4, #1
   253c4:	mov	r3, #0
   253c8:	str	r5, [r0, #32]
   253cc:	add	r2, pc, r2
   253d0:	strb	r3, [r0, #28]
   253d4:	add	r2, r2, #20
   253d8:	mov	r3, #1
   253dc:	strb	r4, [r0, #29]
   253e0:	str	r2, [r0, #16]
   253e4:	strb	r3, [r0, #30]
   253e8:	pop	{r3, r4, r5, pc}
   253ec:	andeq	sl, r4, ip, lsl r5

000253f0 <newBooleanMenuItem@@Base>:
   253f0:	ldr	r3, [pc, #32]	; 25418 <newBooleanMenuItem@@Base+0x28>
   253f4:	mov	ip, #2
   253f8:	push	{lr}		; (str lr, [sp, #-4]!)
   253fc:	sub	sp, sp, #12
   25400:	add	r3, pc, r3
   25404:	str	ip, [sp]
   25408:	add	r3, r3, #40	; 0x28
   2540c:	bl	253a4 <newStringsMenuItem@@Base>
   25410:	add	sp, sp, #12
   25414:	pop	{pc}		; (ldr pc, [sp], #4)
   25418:	andeq	sl, r4, r8, ror #9

0002541c <newFilesMenuItem@@Base>:
   2541c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25420:	mov	r5, r3
   25424:	ldr	lr, [pc, #360]	; 25594 <newFilesMenuItem@@Base+0x178>
   25428:	sub	sp, sp, #16
   2542c:	ldr	ip, [pc, #356]	; 25598 <newFilesMenuItem@@Base+0x17c>
   25430:	mov	r9, r0
   25434:	add	lr, pc, lr
   25438:	mov	r0, #84	; 0x54
   2543c:	mov	r8, r1
   25440:	mov	r7, r2
   25444:	ldr	r6, [lr, ip]
   25448:	mov	r3, lr
   2544c:	ldr	sl, [sp, #48]	; 0x30
   25450:	ldr	r3, [r6]
   25454:	str	r3, [sp, #12]
   25458:	bl	fb48 <malloc@plt>
   2545c:	subs	r4, r0, #0
   25460:	beq	25544 <newFilesMenuItem@@Base+0x128>
   25464:	mov	r1, #0
   25468:	mov	r2, #84	; 0x54
   2546c:	bl	f6b0 <memset@plt>
   25470:	ldr	r0, [sp, #52]	; 0x34
   25474:	ldrb	r3, [r4, #20]
   25478:	adds	r1, r0, #0
   2547c:	ldr	r2, [pc, #280]	; 2559c <newFilesMenuItem@@Base+0x180>
   25480:	str	r7, [r4]
   25484:	add	r0, sp, #4
   25488:	movne	r1, #1
   2548c:	str	r5, [r4, #4]
   25490:	bfi	r3, r1, #0, #1
   25494:	mov	r1, #2
   25498:	strb	r3, [r4, #20]
   2549c:	add	r2, pc, r2
   254a0:	str	r5, [sp, #8]
   254a4:	str	r2, [sp, #4]
   254a8:	bl	1dcd0 <joinStrings@@Base>
   254ac:	subs	r7, r0, #0
   254b0:	beq	2557c <newFilesMenuItem@@Base+0x160>
   254b4:	str	r7, [r4, #8]
   254b8:	ldrb	r3, [sl]
   254bc:	cmp	r3, #0
   254c0:	bne	25534 <newFilesMenuItem@@Base+0x118>
   254c4:	mov	r0, #1
   254c8:	mov	r1, r0
   254cc:	bl	fac4 <calloc@plt>
   254d0:	cmp	r0, #0
   254d4:	str	r0, [r4, #12]
   254d8:	beq	25550 <newFilesMenuItem@@Base+0x134>
   254dc:	bl	f740 <__strdup@plt>
   254e0:	cmp	r0, #0
   254e4:	str	r0, [r4, #16]
   254e8:	beq	2556c <newFilesMenuItem@@Base+0x150>
   254ec:	mov	r0, r9
   254f0:	mov	r2, r8
   254f4:	add	r1, r4, #68	; 0x44
   254f8:	bl	25068 <getMenuItem@@Base+0x1c>
   254fc:	subs	r3, r0, #0
   25500:	beq	25584 <newFilesMenuItem@@Base+0x168>
   25504:	ldr	r2, [pc, #148]	; 255a0 <newFilesMenuItem@@Base+0x184>
   25508:	mov	r0, r3
   2550c:	str	r4, [r3, #32]
   25510:	add	r2, pc, r2
   25514:	add	r2, r2, #56	; 0x38
   25518:	str	r2, [r3, #16]
   2551c:	ldr	r2, [sp, #12]
   25520:	ldr	r3, [r6]
   25524:	cmp	r2, r3
   25528:	bne	25590 <newFilesMenuItem@@Base+0x174>
   2552c:	add	sp, sp, #16
   25530:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25534:	mov	r0, sl
   25538:	mov	r1, r5
   2553c:	bl	1ca9c <ensureFileExtension@@Base>
   25540:	b	254d0 <newFilesMenuItem@@Base+0xb4>
   25544:	bl	1c740 <logMallocError@@Base>
   25548:	mov	r0, r4
   2554c:	b	2551c <newFilesMenuItem@@Base+0x100>
   25550:	bl	1c740 <logMallocError@@Base>
   25554:	mov	r0, r7
   25558:	bl	f4f4 <free@plt>
   2555c:	mov	r0, r4
   25560:	bl	f4f4 <free@plt>
   25564:	mov	r0, #0
   25568:	b	2551c <newFilesMenuItem@@Base+0x100>
   2556c:	bl	1c740 <logMallocError@@Base>
   25570:	ldr	r0, [r4, #12]
   25574:	bl	f4f4 <free@plt>
   25578:	b	25554 <newFilesMenuItem@@Base+0x138>
   2557c:	bl	1c740 <logMallocError@@Base>
   25580:	b	2555c <newFilesMenuItem@@Base+0x140>
   25584:	ldr	r0, [r4, #16]
   25588:	bl	f4f4 <free@plt>
   2558c:	b	25570 <newFilesMenuItem@@Base+0x154>
   25590:	bl	f950 <__stack_chk_fail@plt>
   25594:	andeq	sp, r4, r4, asr #12
   25598:			; <UNDEFINED> instruction: 0x000003b4
   2559c:	andeq	fp, r2, r8, asr #20
   255a0:	ldrdeq	sl, [r4], -r8

000255a4 <newSubmenuMenuItem@@Base>:
   255a4:	push	{r4, r5, r6, r7, r8, lr}
   255a8:	mov	r6, r0
   255ac:	mov	r0, #16
   255b0:	mov	r7, r1
   255b4:	bl	fb48 <malloc@plt>
   255b8:	subs	r4, r0, #0
   255bc:	beq	2564c <newSubmenuMenuItem@@Base+0xa8>
   255c0:	bl	24f6c <newMenu@@Base>
   255c4:	cmp	r0, #0
   255c8:	str	r0, [r4]
   255cc:	beq	2563c <newSubmenuMenuItem@@Base+0x98>
   255d0:	ldr	r5, [pc, #128]	; 25658 <newSubmenuMenuItem@@Base+0xb4>
   255d4:	mov	r1, #0
   255d8:	add	r5, pc, r5
   255dc:	add	r2, r5, #76	; 0x4c
   255e0:	bl	25068 <getMenuItem@@Base+0x1c>
   255e4:	subs	r8, r0, #0
   255e8:	beq	25634 <newSubmenuMenuItem@@Base+0x90>
   255ec:	mov	r2, r7
   255f0:	mov	r0, r6
   255f4:	mov	r1, #0
   255f8:	bl	25068 <getMenuItem@@Base+0x1c>
   255fc:	cmp	r0, #0
   25600:	beq	25634 <newSubmenuMenuItem@@Base+0x90>
   25604:	ldr	r2, [r4]
   25608:	add	r1, r5, #84	; 0x54
   2560c:	add	r5, r5, #104	; 0x68
   25610:	str	r6, [r2]
   25614:	ldrb	r2, [r4, #4]
   25618:	bfc	r2, #0, #1
   2561c:	strb	r2, [r4, #4]
   25620:	str	r1, [r8, #16]
   25624:	str	r5, [r0, #16]
   25628:	str	r4, [r0, #32]
   2562c:	ldr	r0, [r4]
   25630:	pop	{r4, r5, r6, r7, r8, pc}
   25634:	ldr	r0, [r4]
   25638:	bl	24fa0 <deallocateMenu@@Base>
   2563c:	mov	r0, r4
   25640:	bl	f4f4 <free@plt>
   25644:	mov	r0, #0
   25648:	pop	{r4, r5, r6, r7, r8, pc}
   2564c:	bl	1c740 <logMallocError@@Base>
   25650:	mov	r0, r4
   25654:	pop	{r4, r5, r6, r7, r8, pc}
   25658:	andeq	sl, r4, r0, lsl r3

0002565c <setMenuPreviousItem@@Base>:
   2565c:	push	{r3, r4, r5, lr}
   25660:	mov	r4, r0
   25664:	ldr	r5, [pc, #84]	; 256c0 <setMenuPreviousItem@@Base+0x64>
   25668:	add	r5, pc, r5
   2566c:	b	2568c <setMenuPreviousItem@@Base+0x30>
   25670:	sub	r1, r1, #1
   25674:	str	r1, [r4, #16]
   25678:	ldr	r3, [r5, r3]
   2567c:	ldrb	r2, [r3, #81]	; 0x51
   25680:	bl	251b4 <getMenuItem@@Base+0x168>
   25684:	cmp	r0, #0
   25688:	bne	256b8 <setMenuPreviousItem@@Base+0x5c>
   2568c:	ldr	r1, [r4, #16]
   25690:	mov	r0, r4
   25694:	ldr	r3, [pc, #40]	; 256c4 <setMenuPreviousItem@@Base+0x68>
   25698:	cmp	r1, #0
   2569c:	bne	25670 <setMenuPreviousItem@@Base+0x14>
   256a0:	ldr	r1, [r4, #12]
   256a4:	cmp	r1, #0
   256a8:	str	r1, [r4, #16]
   256ac:	bne	25670 <setMenuPreviousItem@@Base+0x14>
   256b0:	mov	r0, r1
   256b4:	pop	{r3, r4, r5, pc}
   256b8:	mov	r0, #1
   256bc:	pop	{r3, r4, r5, pc}
   256c0:	andeq	sp, r4, r0, lsl r4
   256c4:	andeq	r0, r0, r0, asr #10

000256c8 <setMenuNextItem@@Base>:
   256c8:	push	{r4, r5, r6, lr}
   256cc:	mov	r4, r0
   256d0:	ldr	r1, [r0, #16]
   256d4:	ldr	r3, [r0, #12]
   256d8:	ldr	r2, [pc, #88]	; 25738 <setMenuNextItem@@Base+0x70>
   256dc:	cmp	r1, r3
   256e0:	add	r2, pc, r2
   256e4:	bcs	25730 <setMenuNextItem@@Base+0x68>
   256e8:	ldr	r0, [pc, #76]	; 2573c <setMenuNextItem@@Base+0x74>
   256ec:	mov	r6, #0
   256f0:	ldr	r5, [r2, r0]
   256f4:	b	25700 <setMenuNextItem@@Base+0x38>
   256f8:	ldr	r1, [r4, #16]
   256fc:	ldr	r3, [r4, #12]
   25700:	add	r1, r1, #1
   25704:	mov	r0, r4
   25708:	cmp	r1, r3
   2570c:	strne	r1, [r4, #16]
   25710:	streq	r6, [r4, #16]
   25714:	moveq	r1, #0
   25718:	ldrb	r2, [r5, #81]	; 0x51
   2571c:	bl	251b4 <getMenuItem@@Base+0x168>
   25720:	cmp	r0, #0
   25724:	beq	256f8 <setMenuNextItem@@Base+0x30>
   25728:	mov	r0, #1
   2572c:	pop	{r4, r5, r6, pc}
   25730:	mov	r0, #0
   25734:	pop	{r4, r5, r6, pc}
   25738:	muleq	r4, r8, r3
   2573c:	andeq	r0, r0, r0, asr #10

00025740 <setMenuFirstItem@@Base>:
   25740:	push	{r4, lr}
   25744:	mov	r4, r0
   25748:	ldr	r3, [r0, #12]
   2574c:	ldr	r2, [pc, #76]	; 257a0 <setMenuFirstItem@@Base+0x60>
   25750:	cmp	r3, #0
   25754:	add	r2, pc, r2
   25758:	bne	25764 <setMenuFirstItem@@Base+0x24>
   2575c:	mov	r0, r3
   25760:	pop	{r4, pc}
   25764:	ldr	r3, [pc, #56]	; 257a4 <setMenuFirstItem@@Base+0x64>
   25768:	mov	r1, #0
   2576c:	str	r1, [r0, #16]
   25770:	ldr	r3, [r2, r3]
   25774:	ldrb	r2, [r3, #81]	; 0x51
   25778:	bl	251b4 <getMenuItem@@Base+0x168>
   2577c:	cmp	r0, #0
   25780:	beq	2578c <setMenuFirstItem@@Base+0x4c>
   25784:	mov	r0, #1
   25788:	pop	{r4, pc}
   2578c:	mov	r0, r4
   25790:	bl	256c8 <setMenuNextItem@@Base>
   25794:	adds	r0, r0, #0
   25798:	movne	r0, #1
   2579c:	pop	{r4, pc}
   257a0:	andeq	sp, r4, r4, lsr #6
   257a4:	andeq	r0, r0, r0, asr #10

000257a8 <setMenuLastItem@@Base>:
   257a8:	push	{r4, lr}
   257ac:	mov	r4, r0
   257b0:	ldr	r1, [r0, #12]
   257b4:	ldr	r3, [pc, #76]	; 25808 <setMenuLastItem@@Base+0x60>
   257b8:	cmp	r1, #0
   257bc:	add	r3, pc, r3
   257c0:	bne	257cc <setMenuLastItem@@Base+0x24>
   257c4:	mov	r0, r1
   257c8:	pop	{r4, pc}
   257cc:	ldr	r2, [pc, #56]	; 2580c <setMenuLastItem@@Base+0x64>
   257d0:	sub	r1, r1, #1
   257d4:	str	r1, [r0, #16]
   257d8:	ldr	r3, [r3, r2]
   257dc:	ldrb	r2, [r3, #81]	; 0x51
   257e0:	bl	251b4 <getMenuItem@@Base+0x168>
   257e4:	cmp	r0, #0
   257e8:	beq	257f4 <setMenuLastItem@@Base+0x4c>
   257ec:	mov	r0, #1
   257f0:	pop	{r4, pc}
   257f4:	mov	r0, r4
   257f8:	bl	2565c <setMenuPreviousItem@@Base>
   257fc:	adds	r0, r0, #0
   25800:	movne	r0, #1
   25804:	pop	{r4, pc}
   25808:			; <UNDEFINED> instruction: 0x0004d2bc
   2580c:	andeq	r0, r0, r0, asr #10

00025810 <changeMenuItemPrevious@@Base>:
   25810:	push	{r3, lr}
   25814:	ldr	r3, [r0, #16]
   25818:	ldr	r3, [r3, #8]
   2581c:	cmp	r3, #0
   25820:	beq	25830 <changeMenuItemPrevious@@Base+0x20>
   25824:	blx	r3
   25828:	mov	r0, #1
   2582c:	pop	{r3, pc}
   25830:	ldr	r3, [r0, #4]
   25834:	cmp	r3, #0
   25838:	beq	2584c <changeMenuItemPrevious@@Base+0x3c>
   2583c:	ldr	r1, [pc, #16]	; 25854 <changeMenuItemPrevious@@Base+0x44>
   25840:	pop	{r3, lr}
   25844:	add	r1, pc, r1
   25848:	b	24988 <savePreferencesFile@@Base+0x21c>
   2584c:	mov	r0, r3
   25850:	pop	{r3, pc}
   25854:			; <UNDEFINED> instruction: 0xfffff1b4

00025858 <changeMenuItemNext@@Base>:
   25858:	push	{r3, lr}
   2585c:	ldr	r3, [r0, #16]
   25860:	ldr	r3, [r3, #8]
   25864:	cmp	r3, #0
   25868:	beq	25878 <changeMenuItemNext@@Base+0x20>
   2586c:	blx	r3
   25870:	mov	r0, #1
   25874:	pop	{r3, pc}
   25878:	ldr	r3, [r0, #4]
   2587c:	cmp	r3, #0
   25880:	beq	25894 <changeMenuItemNext@@Base+0x3c>
   25884:	ldr	r1, [pc, #16]	; 2589c <changeMenuItemNext@@Base+0x44>
   25888:	pop	{r3, lr}
   2588c:	add	r1, pc, r1
   25890:	b	24988 <savePreferencesFile@@Base+0x21c>
   25894:	mov	r0, r3
   25898:	pop	{r3, pc}
   2589c:			; <UNDEFINED> instruction: 0xfffff194

000258a0 <changeMenuItemScaled@@Base>:
   258a0:	push	{r4, r5, r6, lr}
   258a4:	mov	r4, r0
   258a8:	ldr	ip, [r0, #16]
   258ac:	ldr	r3, [ip, #8]
   258b0:	cmp	r3, #0
   258b4:	beq	258c4 <changeMenuItemScaled@@Base+0x24>
   258b8:	blx	r3
   258bc:	mov	r0, #1
   258c0:	pop	{r4, r5, r6, pc}
   258c4:	ldr	r5, [r0, #4]
   258c8:	cmp	r5, #0
   258cc:	beq	2595c <changeMenuItemScaled@@Base+0xbc>
   258d0:	ldr	r3, [pc, #140]	; 25964 <changeMenuItemScaled@@Base+0xc4>
   258d4:	ldr	r0, [ip, #12]
   258d8:	add	r3, pc, r3
   258dc:	ldrb	r6, [r5]
   258e0:	cmp	r0, r3
   258e4:	beq	25934 <changeMenuItemScaled@@Base+0x94>
   258e8:	ldrb	r3, [r4, #29]
   258ec:	mov	r0, r1
   258f0:	add	r1, r3, #1
   258f4:	bl	4e3f0 <formatAddress@@Base+0x444>
   258f8:	strb	r1, [r5]
   258fc:	ldr	r3, [r4, #24]
   25900:	cmp	r3, #0
   25904:	beq	2592c <changeMenuItemScaled@@Base+0x8c>
   25908:	ldr	r2, [r4, #4]
   2590c:	mov	r0, r4
   25910:	ldrb	r1, [r2]
   25914:	blx	r3
   25918:	cmp	r0, #0
   2591c:	bne	2592c <changeMenuItemScaled@@Base+0x8c>
   25920:	ldr	r3, [r4, #4]
   25924:	strb	r6, [r3]
   25928:	pop	{r4, r5, r6, pc}
   2592c:	mov	r0, #1
   25930:	pop	{r4, r5, r6, pc}
   25934:	ldrb	r3, [r4, #28]
   25938:	mov	r0, r1
   2593c:	ldrb	ip, [r4, #29]
   25940:	sub	r1, r2, #1
   25944:	rsb	r2, r3, ip
   25948:	bl	1ddcc <rescaleInteger@@Base>
   2594c:	ldrb	r3, [r4, #28]
   25950:	add	r0, r0, r3
   25954:	strb	r0, [r5]
   25958:	b	258fc <changeMenuItemScaled@@Base+0x5c>
   2595c:	mov	r0, r5
   25960:	pop	{r4, r5, r6, pc}
   25964:			; <UNDEFINED> instruction: 0xfffff1f0

00025968 <getCurrentMenuItem@@Base>:
   25968:	push	{r3, r4, r5, lr}
   2596c:	mov	r5, r0
   25970:	ldr	r1, [r0, #16]
   25974:	bl	2504c <getMenuItem@@Base>
   25978:	mov	r4, r0
   2597c:	ldr	r0, [r5, #20]
   25980:	cmp	r0, r4
   25984:	beq	259cc <getCurrentMenuItem@@Base+0x64>
   25988:	cmp	r0, #0
   2598c:	beq	259a8 <getCurrentMenuItem@@Base+0x40>
   25990:	ldr	r3, [r0, #16]
   25994:	ldr	r3, [r3, #4]
   25998:	cmp	r3, #0
   2599c:	beq	259a8 <getCurrentMenuItem@@Base+0x40>
   259a0:	mov	r1, #0
   259a4:	blx	r3
   259a8:	ldr	r3, [r4, #16]
   259ac:	ldr	r3, [r3]
   259b0:	cmp	r3, #0
   259b4:	beq	259d4 <getCurrentMenuItem@@Base+0x6c>
   259b8:	mov	r0, r4
   259bc:	blx	r3
   259c0:	cmp	r0, #0
   259c4:	bne	259d4 <getCurrentMenuItem@@Base+0x6c>
   259c8:	str	r0, [r5, #20]
   259cc:	mov	r0, r4
   259d0:	pop	{r3, r4, r5, pc}
   259d4:	mov	r0, r4
   259d8:	b	259c8 <getCurrentMenuItem@@Base+0x60>

000259dc <getCurrentSubmenu@@Base>:
   259dc:	push	{r3, r4, r5, lr}
   259e0:	mov	r4, r0
   259e4:	ldr	r5, [pc, #56]	; 25a24 <getCurrentSubmenu@@Base+0x48>
   259e8:	add	r5, pc, r5
   259ec:	add	r5, r5, #104	; 0x68
   259f0:	b	25a08 <getCurrentSubmenu@@Base+0x2c>
   259f4:	ldr	r3, [r0, #32]
   259f8:	ldrb	r2, [r3, #4]
   259fc:	tst	r2, #1
   25a00:	beq	25a1c <getCurrentSubmenu@@Base+0x40>
   25a04:	ldr	r4, [r3]
   25a08:	mov	r0, r4
   25a0c:	bl	25968 <getCurrentMenuItem@@Base>
   25a10:	ldr	r3, [r0, #16]
   25a14:	cmp	r3, r5
   25a18:	beq	259f4 <getCurrentSubmenu@@Base+0x18>
   25a1c:	mov	r0, r4
   25a20:	pop	{r3, r4, r5, pc}
   25a24:	andeq	r9, r4, r0, lsl #30

00025a28 <getSessionEntry@@Base>:
   25a28:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   25a2c:	mov	r5, r0
   25a30:	ldr	r3, [pc, #404]	; 25bcc <getSessionEntry@@Base+0x1a4>
   25a34:	add	r3, pc, r3
   25a38:	ldr	r6, [r3, #1072]	; 0x430
   25a3c:	subs	r1, r6, #1
   25a40:	bmi	25bac <getSessionEntry@@Base+0x184>
   25a44:	ldr	ip, [r3, #1076]	; 0x434
   25a48:	asr	r3, r1, #1
   25a4c:	ldr	r0, [ip, r3, lsl #2]
   25a50:	ldr	r2, [r0]
   25a54:	cmp	r2, r5
   25a58:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   25a5c:	mov	r4, #0
   25a60:	b	25a78 <getSessionEntry@@Base+0x50>
   25a64:	asr	r3, r3, #1
   25a68:	ldr	r0, [ip, r3, lsl #2]
   25a6c:	ldr	r2, [r0]
   25a70:	cmp	r2, r5
   25a74:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   25a78:	cmp	r5, r2
   25a7c:	sublt	r1, r3, #1
   25a80:	addge	r4, r3, #1
   25a84:	add	r3, r1, r4
   25a88:	cmp	r1, r4
   25a8c:	add	r3, r3, r3, lsr #31
   25a90:	bge	25a64 <getSessionEntry@@Base+0x3c>
   25a94:	ldr	r3, [pc, #308]	; 25bd0 <getSessionEntry@@Base+0x1a8>
   25a98:	add	r3, pc, r3
   25a9c:	ldr	r3, [r3, #1080]	; 0x438
   25aa0:	cmp	r6, r3
   25aa4:	beq	25b64 <getSessionEntry@@Base+0x13c>
   25aa8:	cmp	r3, r6
   25aac:	bhi	25af0 <getSessionEntry@@Base+0xc8>
   25ab0:	ldr	r4, [pc, #284]	; 25bd4 <getSessionEntry@@Base+0x1ac>
   25ab4:	add	r4, pc, r4
   25ab8:	ldr	r1, [r4, #1084]	; 0x43c
   25abc:	mov	r0, r4
   25ac0:	cmp	r1, #0
   25ac4:	bne	25ba8 <getSessionEntry@@Base+0x180>
   25ac8:	mov	r2, #1072	; 0x430
   25acc:	bl	f6b0 <memset@plt>
   25ad0:	mov	r2, #1
   25ad4:	mvn	r3, #0
   25ad8:	strb	r2, [r4, #4]
   25adc:	str	r2, [r4, #1084]	; 0x43c
   25ae0:	mov	r0, r4
   25ae4:	str	r3, [r4, #32]
   25ae8:	str	r3, [r4, #36]	; 0x24
   25aec:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   25af0:	mov	r0, #1072	; 0x430
   25af4:	bl	fb48 <malloc@plt>
   25af8:	subs	r7, r0, #0
   25afc:	beq	25bb4 <getSessionEntry@@Base+0x18c>
   25b00:	ldr	r8, [pc, #208]	; 25bd8 <getSessionEntry@@Base+0x1b0>
   25b04:	mov	r1, #0
   25b08:	mov	r2, #1072	; 0x430
   25b0c:	bl	f6b0 <memset@plt>
   25b10:	add	r8, pc, r8
   25b14:	add	r0, r4, #1
   25b18:	rsb	r2, r4, r6
   25b1c:	str	r5, [r7]
   25b20:	mov	r3, #1
   25b24:	ldr	r5, [r8, #1076]	; 0x434
   25b28:	lsl	r0, r0, #2
   25b2c:	sub	r9, r0, #4
   25b30:	strb	r3, [r7, #4]
   25b34:	lsl	r2, r2, #2
   25b38:	mvn	r3, #0
   25b3c:	add	r0, r5, r0
   25b40:	add	r1, r5, r9
   25b44:	str	r3, [r7, #32]
   25b48:	add	r6, r6, #1
   25b4c:	str	r3, [r7, #36]	; 0x24
   25b50:	bl	f7dc <memmove@plt>
   25b54:	str	r7, [r5, r9]
   25b58:	mov	r0, r7
   25b5c:	str	r6, [r8, #1072]	; 0x430
   25b60:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   25b64:	ldr	r7, [pc, #112]	; 25bdc <getSessionEntry@@Base+0x1b4>
   25b68:	cmp	r6, #0
   25b6c:	lslne	r1, r6, #3
   25b70:	lslne	r8, r6, #1
   25b74:	add	r7, pc, r7
   25b78:	moveq	r1, #64	; 0x40
   25b7c:	moveq	r8, #16
   25b80:	ldr	r0, [r7, #1076]	; 0x434
   25b84:	bl	f878 <realloc@plt>
   25b88:	cmp	r0, #0
   25b8c:	beq	25bbc <getSessionEntry@@Base+0x194>
   25b90:	mov	r3, r8
   25b94:	cmp	r3, r6
   25b98:	str	r0, [r7, #1076]	; 0x434
   25b9c:	str	r8, [r7, #1080]	; 0x438
   25ba0:	bls	25ab0 <getSessionEntry@@Base+0x88>
   25ba4:	b	25af0 <getSessionEntry@@Base+0xc8>
   25ba8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   25bac:	mov	r4, #0
   25bb0:	b	25a94 <getSessionEntry@@Base+0x6c>
   25bb4:	bl	1c740 <logMallocError@@Base>
   25bb8:	b	25ab0 <getSessionEntry@@Base+0x88>
   25bbc:	bl	1c740 <logMallocError@@Base>
   25bc0:	ldr	r6, [r7, #1072]	; 0x430
   25bc4:	ldr	r3, [r7, #1080]	; 0x438
   25bc8:	b	25aa8 <getSessionEntry@@Base+0x80>
   25bcc:	andeq	sp, r4, r4, lsr sp
   25bd0:	ldrdeq	sp, [r4], -r0
   25bd4:			; <UNDEFINED> instruction: 0x0004dcb4
   25bd8:	andeq	sp, r4, r8, asr ip
   25bdc:	strdeq	sp, [r4], -r4

00025be0 <deallocateSessionEntries@@Base>:
   25be0:	push	{r3, r4, r5, r6, r7, lr}
   25be4:	ldr	r6, [pc, #100]	; 25c50 <deallocateSessionEntries@@Base+0x70>
   25be8:	add	r6, pc, r6
   25bec:	ldr	r7, [r6, #1076]	; 0x434
   25bf0:	cmp	r7, #0
   25bf4:	streq	r7, [r6, #1072]	; 0x430
   25bf8:	beq	25c3c <deallocateSessionEntries@@Base+0x5c>
   25bfc:	ldr	r4, [r6, #1072]	; 0x430
   25c00:	cmp	r4, #0
   25c04:	addne	r5, r7, r4, lsl #2
   25c08:	beq	25c24 <deallocateSessionEntries@@Base+0x44>
   25c0c:	sub	r4, r4, #1
   25c10:	ldr	r0, [r5, #-4]!
   25c14:	str	r4, [r6, #1072]	; 0x430
   25c18:	bl	f4f4 <free@plt>
   25c1c:	cmp	r4, #0
   25c20:	bne	25c0c <deallocateSessionEntries@@Base+0x2c>
   25c24:	mov	r0, r7
   25c28:	bl	f4f4 <free@plt>
   25c2c:	ldr	r3, [pc, #32]	; 25c54 <deallocateSessionEntries@@Base+0x74>
   25c30:	mov	r2, #0
   25c34:	add	r3, pc, r3
   25c38:	str	r2, [r3, #1076]	; 0x434
   25c3c:	ldr	r3, [pc, #20]	; 25c58 <deallocateSessionEntries@@Base+0x78>
   25c40:	mov	r2, #0
   25c44:	add	r3, pc, r3
   25c48:	str	r2, [r3, #1080]	; 0x438
   25c4c:	pop	{r3, r4, r5, r6, r7, pc}
   25c50:	andeq	sp, r4, r0, lsl #23
   25c54:	andeq	sp, r4, r4, lsr fp
   25c58:	andeq	sp, r4, r4, lsr #22
   25c5c:	push	{r3, r4, r5, r6, r7, lr}
   25c60:	mov	r4, r0
   25c64:	bl	395c4 <isFrozenScreen@@Base>
   25c68:	ldr	r3, [pc, #176]	; 25d20 <deallocateSessionEntries@@Base+0x140>
   25c6c:	ldr	r1, [pc, #176]	; 25d24 <deallocateSessionEntries@@Base+0x144>
   25c70:	ldr	r2, [pc, #176]	; 25d28 <deallocateSessionEntries@@Base+0x148>
   25c74:	add	r3, pc, r3
   25c78:	ldr	r2, [r3, r2]
   25c7c:	ldr	r3, [r3, r1]
   25c80:	ldr	r2, [r2]
   25c84:	ldrb	r7, [r3, #2]
   25c88:	ldrb	r5, [r3, #12]
   25c8c:	cmp	r7, #0
   25c90:	ldrb	r6, [r2, #6]
   25c94:	ldrb	ip, [r3, #30]
   25c98:	movne	r7, #8
   25c9c:	moveq	r7, #0
   25ca0:	cmp	r5, #0
   25ca4:	ldrb	r1, [r3, #6]
   25ca8:	ldrb	r2, [r2, #4]
   25cac:	movne	r5, #16
   25cb0:	moveq	r5, #0
   25cb4:	cmp	r6, #0
   25cb8:	ldrb	r3, [r3, #28]
   25cbc:	movne	r6, #2
   25cc0:	moveq	r6, #0
   25cc4:	cmp	ip, #0
   25cc8:	movne	ip, #4
   25ccc:	moveq	ip, #0
   25cd0:	cmp	r1, #0
   25cd4:	movne	r1, #32
   25cd8:	moveq	r1, #0
   25cdc:	cmp	r2, #0
   25ce0:	movne	r2, #64	; 0x40
   25ce4:	moveq	r2, #0
   25ce8:	cmp	r3, #0
   25cec:	movne	r3, #128	; 0x80
   25cf0:	moveq	r3, #0
   25cf4:	cmp	r0, #0
   25cf8:	moveq	r0, r7
   25cfc:	orrne	r0, r7, #1
   25d00:	orr	r6, r0, r6
   25d04:	orr	r5, r6, r5
   25d08:	orr	ip, r5, ip
   25d0c:	orr	r1, ip, r1
   25d10:	orr	r2, r1, r2
   25d14:	orr	r3, r2, r3
   25d18:	strb	r3, [r4]
   25d1c:	pop	{r3, r4, r5, r6, r7, pc}
   25d20:	andeq	ip, r4, r4, lsl #28
   25d24:	andeq	r0, r0, r0, asr #10
   25d28:			; <UNDEFINED> instruction: 0x000003b8
   25d2c:	push	{r3, r4, r5, r6, r7, lr}
   25d30:	mvn	r2, #0
   25d34:	ldr	r6, [pc, #412]	; 25ed8 <deallocateSessionEntries@@Base+0x2f8>
   25d38:	mov	r4, r0
   25d3c:	ldr	r3, [pc, #408]	; 25edc <deallocateSessionEntries@@Base+0x2fc>
   25d40:	add	r6, pc, r6
   25d44:	strb	r2, [r0]
   25d48:	ldr	r5, [r6, r3]
   25d4c:	ldr	r3, [r5]
   25d50:	ldr	r2, [r3, #8]
   25d54:	ldr	r3, [pc, #388]	; 25ee0 <deallocateSessionEntries@@Base+0x300>
   25d58:	cmp	r2, #0
   25d5c:	blt	25ecc <deallocateSessionEntries@@Base+0x2ec>
   25d60:	ldr	r3, [r6, r3]
   25d64:	ldrsh	r1, [r3, #2]
   25d68:	cmp	r2, r1
   25d6c:	addlt	r2, r2, #1
   25d70:	uxtblt	r2, r2
   25d74:	bge	25ec4 <deallocateSessionEntries@@Base+0x2e4>
   25d78:	strb	r2, [r4, #1]
   25d7c:	ldr	r2, [r5]
   25d80:	ldr	r2, [r2, #12]
   25d84:	cmp	r2, #0
   25d88:	blt	25eb4 <deallocateSessionEntries@@Base+0x2d4>
   25d8c:	ldrsh	r1, [r3]
   25d90:	cmp	r2, r1
   25d94:	addlt	r2, r2, #1
   25d98:	uxtblt	r2, r2
   25d9c:	bge	25eb4 <deallocateSessionEntries@@Base+0x2d4>
   25da0:	strb	r2, [r4, #2]
   25da4:	ldrh	r1, [r3, #4]
   25da8:	sxth	r2, r1
   25dac:	cmp	r2, #0
   25db0:	blt	25eac <deallocateSessionEntries@@Base+0x2cc>
   25db4:	ldrsh	r0, [r3, #2]
   25db8:	cmp	r0, r2
   25dbc:	addgt	r1, r1, #1
   25dc0:	uxtbgt	r1, r1
   25dc4:	ble	25eac <deallocateSessionEntries@@Base+0x2cc>
   25dc8:	strb	r1, [r4, #3]
   25dcc:	ldrh	r1, [r3, #6]
   25dd0:	sxth	r2, r1
   25dd4:	cmp	r2, #0
   25dd8:	blt	25ebc <deallocateSessionEntries@@Base+0x2dc>
   25ddc:	ldrsh	r0, [r3]
   25de0:	cmp	r0, r2
   25de4:	addgt	r1, r1, #1
   25de8:	uxtbgt	r1, r1
   25dec:	ble	25ebc <deallocateSessionEntries@@Base+0x2dc>
   25df0:	strb	r1, [r4, #4]
   25df4:	ldr	r3, [r3, #8]
   25df8:	strb	r3, [r4, #5]
   25dfc:	bl	395c4 <isFrozenScreen@@Base>
   25e00:	ldr	r3, [r5]
   25e04:	ldr	r2, [pc, #216]	; 25ee4 <deallocateSessionEntries@@Base+0x304>
   25e08:	strb	r0, [r4, #6]
   25e0c:	ldrb	r1, [r3, #6]
   25e10:	strb	r1, [r4, #7]
   25e14:	ldr	r5, [r6, r2]
   25e18:	ldrb	r2, [r5, #26]
   25e1c:	ldrb	ip, [r5, #2]
   25e20:	ldrb	r1, [r5, #6]
   25e24:	strb	r2, [r4, #8]
   25e28:	ldrb	lr, [r5, #28]
   25e2c:	ldrb	r2, [r5, #4]
   25e30:	ldrb	r0, [r5, #8]
   25e34:	strb	lr, [r4, #9]
   25e38:	ldrb	lr, [r5, #32]
   25e3c:	strb	lr, [r4, #10]
   25e40:	ldrb	lr, [r5, #36]	; 0x24
   25e44:	strb	ip, [r4, #12]
   25e48:	ldrb	ip, [r5, #10]
   25e4c:	strb	lr, [r4, #11]
   25e50:	ldrb	r7, [r3, #5]
   25e54:	ldrb	lr, [r5, #12]
   25e58:	strb	r7, [r4, #13]
   25e5c:	ldrb	r3, [r3, #4]
   25e60:	strb	r1, [r4, #16]
   25e64:	strb	r2, [r4, #17]
   25e68:	strb	lr, [r4, #15]
   25e6c:	strb	ip, [r4, #18]
   25e70:	strb	r3, [r4, #14]
   25e74:	strb	r0, [r4, #19]
   25e78:	ldrb	r3, [r5, #30]
   25e7c:	strb	r3, [r4, #20]
   25e80:	bl	39344 <isHelpScreen@@Base>
   25e84:	ldr	r1, [pc, #92]	; 25ee8 <deallocateSessionEntries@@Base+0x308>
   25e88:	ldrb	r3, [r5, #15]
   25e8c:	ldrb	r2, [r5, #7]
   25e90:	strb	r0, [r4, #21]
   25e94:	ldr	r1, [r6, r1]
   25e98:	strb	r3, [r4, #24]
   25e9c:	strb	r2, [r4, #23]
   25ea0:	ldrb	r3, [r1]
   25ea4:	strb	r3, [r4, #22]
   25ea8:	pop	{r3, r4, r5, r6, r7, pc}
   25eac:	mov	r1, #0
   25eb0:	b	25dc8 <deallocateSessionEntries@@Base+0x1e8>
   25eb4:	mov	r2, #0
   25eb8:	b	25da0 <deallocateSessionEntries@@Base+0x1c0>
   25ebc:	mov	r1, #0
   25ec0:	b	25df0 <deallocateSessionEntries@@Base+0x210>
   25ec4:	mov	r2, #0
   25ec8:	b	25d78 <deallocateSessionEntries@@Base+0x198>
   25ecc:	mov	r2, #0
   25ed0:	ldr	r3, [r6, r3]
   25ed4:	b	25d78 <deallocateSessionEntries@@Base+0x198>
   25ed8:	andeq	ip, r4, r8, lsr sp
   25edc:			; <UNDEFINED> instruction: 0x000003b8
   25ee0:	andeq	r0, r0, ip, lsl #9
   25ee4:	andeq	r0, r0, r0, asr #10
   25ee8:	andeq	r0, r0, r0, ror #9
   25eec:	push	{r4, r5, r6, r7, r8, lr}
   25ef0:	subs	r7, r1, #0
   25ef4:	ldr	r4, [pc, #204]	; 25fc8 <deallocateSessionEntries@@Base+0x3e8>
   25ef8:	mov	r6, r0
   25efc:	mov	r5, r2
   25f00:	add	r4, pc, r4
   25f04:	blt	25fac <deallocateSessionEntries@@Base+0x3cc>
   25f08:	ldr	r3, [pc, #188]	; 25fcc <deallocateSessionEntries@@Base+0x3ec>
   25f0c:	ldr	r3, [r4, r3]
   25f10:	ldrsh	r2, [r3, #2]
   25f14:	cmp	r7, r2
   25f18:	bge	25fac <deallocateSessionEntries@@Base+0x3cc>
   25f1c:	cmp	r5, #0
   25f20:	blt	25fac <deallocateSessionEntries@@Base+0x3cc>
   25f24:	ldrsh	r3, [r3]
   25f28:	cmp	r5, r3
   25f2c:	bge	25fac <deallocateSessionEntries@@Base+0x3cc>
   25f30:	movw	r3, #34079	; 0x851f
   25f34:	movt	r3, #20971	; 0x51eb
   25f38:	ldr	r2, [pc, #144]	; 25fd0 <deallocateSessionEntries@@Base+0x3f0>
   25f3c:	asr	r8, r5, #31
   25f40:	smull	r1, r3, r3, r5
   25f44:	ldr	r2, [r4, r2]
   25f48:	ldr	r0, [r2]
   25f4c:	rsb	r8, r8, r3, asr #3
   25f50:	add	r1, r8, #1
   25f54:	lsr	r0, r0, #4
   25f58:	bl	4e3f0 <formatAddress@@Base+0x444>
   25f5c:	cmp	r1, #0
   25f60:	movne	r0, #0
   25f64:	bne	25fc0 <deallocateSessionEntries@@Base+0x3e0>
   25f68:	ldr	r3, [pc, #100]	; 25fd4 <deallocateSessionEntries@@Base+0x3f4>
   25f6c:	add	r8, r8, r8, lsl #2
   25f70:	add	r8, r8, r8, lsl #2
   25f74:	ldr	r3, [r4, r3]
   25f78:	rsb	r1, r8, r5
   25f7c:	add	r1, r1, #97	; 0x61
   25f80:	ldr	r0, [r3]
   25f84:	bl	2d7f8 <convertCharacterToDots@@Base>
   25f88:	ldr	r3, [pc, #72]	; 25fd8 <deallocateSessionEntries@@Base+0x3f8>
   25f8c:	ldr	r3, [r4, r3]
   25f90:	ldr	r1, [r3]
   25f94:	mov	r5, r0
   25f98:	mov	r0, r7
   25f9c:	bl	4e204 <formatAddress@@Base+0x258>
   25fa0:	orr	r0, r5, r0, lsl #6
   25fa4:	uxtb	r0, r0
   25fa8:	b	25fc0 <deallocateSessionEntries@@Base+0x3e0>
   25fac:	ldr	r3, [pc, #32]	; 25fd4 <deallocateSessionEntries@@Base+0x3f4>
   25fb0:	mov	r1, #122	; 0x7a
   25fb4:	ldr	r3, [r4, r3]
   25fb8:	ldr	r0, [r3]
   25fbc:	bl	2d7f8 <convertCharacterToDots@@Base>
   25fc0:	strb	r0, [r6]
   25fc4:	pop	{r4, r5, r6, r7, r8, pc}
   25fc8:	andeq	ip, r4, r8, ror fp
   25fcc:	andeq	r0, r0, ip, lsl #9
   25fd0:	andeq	r0, r0, r4, ror #8
   25fd4:	strdeq	r0, [r0], -ip
   25fd8:	andeq	r0, r0, r0, asr #7
   25fdc:	ldr	r3, [pc, #20]	; 25ff8 <deallocateSessionEntries@@Base+0x418>
   25fe0:	ldr	r2, [pc, #20]	; 25ffc <deallocateSessionEntries@@Base+0x41c>
   25fe4:	add	r3, pc, r3
   25fe8:	ldr	r3, [r3, r2]
   25fec:	ldrsh	r1, [r3, #4]
   25ff0:	ldrsh	r2, [r3, #6]
   25ff4:	b	25eec <deallocateSessionEntries@@Base+0x30c>
   25ff8:	muleq	r4, r4, sl
   25ffc:	andeq	r0, r0, ip, lsl #9
   26000:	ldr	r3, [pc, #24]	; 26020 <deallocateSessionEntries@@Base+0x440>
   26004:	ldr	r2, [pc, #24]	; 26024 <deallocateSessionEntries@@Base+0x444>
   26008:	add	r3, pc, r3
   2600c:	ldr	r3, [r3, r2]
   26010:	ldr	r3, [r3]
   26014:	ldr	r1, [r3, #8]
   26018:	ldr	r2, [r3, #12]
   2601c:	b	25eec <deallocateSessionEntries@@Base+0x30c>
   26020:	andeq	ip, r4, r0, ror sl
   26024:			; <UNDEFINED> instruction: 0x000003b8
   26028:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2602c:	movw	r3, #26215	; 0x6667
   26030:	movt	r3, #26214	; 0x6666
   26034:	mov	r6, r1
   26038:	ldr	r2, [pc, #96]	; 260a0 <deallocateSessionEntries@@Base+0x4c0>
   2603c:	mov	r5, r0
   26040:	smull	r1, r4, r3, r6
   26044:	ldr	ip, [pc, #88]	; 260a4 <deallocateSessionEntries@@Base+0x4c4>
   26048:	asr	r1, r6, #31
   2604c:	add	r2, pc, r2
   26050:	ldrb	r9, [r0]
   26054:	ldr	r7, [r2, ip]
   26058:	rsb	r4, r1, r4, asr #2
   2605c:	smull	r2, r3, r3, r4
   26060:	asr	r2, r4, #31
   26064:	rsb	r3, r2, r3, asr #2
   26068:	add	r3, r3, r3, lsl #2
   2606c:	sub	r3, r4, r3, lsl #1
   26070:	add	r4, r4, r4, lsl #2
   26074:	ldrb	r0, [r7, r3]
   26078:	sub	r6, r6, r4, lsl #1
   2607c:	bl	3ea80 <lowerDigit@@Base>
   26080:	ldrb	r8, [r5, #1]
   26084:	orr	r9, r0, r9
   26088:	ldrb	r0, [r7, r6]
   2608c:	strb	r9, [r5]
   26090:	bl	3ea80 <lowerDigit@@Base>
   26094:	orr	r0, r0, r8
   26098:	strb	r0, [r5, #1]
   2609c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   260a0:	andeq	ip, r4, ip, lsr #20
   260a4:	ldrdeq	r0, [r0], -r8
   260a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   260ac:	sub	sp, sp, #12
   260b0:	ldr	r5, [pc, #180]	; 2616c <deallocateSessionEntries@@Base+0x58c>
   260b4:	mov	r4, r0
   260b8:	ldr	r3, [pc, #176]	; 26170 <deallocateSessionEntries@@Base+0x590>
   260bc:	mov	r0, #0
   260c0:	add	r5, pc, r5
   260c4:	ldr	r6, [r5, r3]
   260c8:	ldr	r3, [r6]
   260cc:	str	r3, [sp, #4]
   260d0:	bl	fc74 <time@plt>
   260d4:	add	r3, sp, #8
   260d8:	str	r0, [r3, #-8]!
   260dc:	mov	r0, sp
   260e0:	bl	f854 <localtime@plt>
   260e4:	movw	r1, #26215	; 0x6667
   260e8:	movt	r1, #26214	; 0x6666
   260ec:	ldr	lr, [pc, #128]	; 26174 <deallocateSessionEntries@@Base+0x594>
   260f0:	ldrb	r7, [r4]
   260f4:	ldr	lr, [r5, lr]
   260f8:	ldrb	r5, [r4, #1]
   260fc:	ldr	r2, [r0, #8]
   26100:	mov	ip, r0
   26104:	mov	r0, r4
   26108:	smull	r3, r8, r1, r2
   2610c:	asr	r3, r2, #31
   26110:	rsb	r3, r3, r8, asr #2
   26114:	smull	r8, r1, r1, r3
   26118:	asr	r8, r3, #31
   2611c:	add	r9, r3, r3, lsl #2
   26120:	sub	r2, r2, r9, lsl #1
   26124:	rsb	r1, r8, r1, asr #2
   26128:	ldrb	r2, [lr, r2]
   2612c:	add	r1, r1, r1, lsl #2
   26130:	orr	r2, r5, r2
   26134:	strb	r2, [r4, #1]
   26138:	sub	r3, r3, r1, lsl #1
   2613c:	ldrb	r3, [lr, r3]
   26140:	orr	r3, r3, r7
   26144:	strb	r3, [r4]
   26148:	ldr	r1, [ip, #4]
   2614c:	bl	26028 <deallocateSessionEntries@@Base+0x448>
   26150:	ldr	r2, [sp, #4]
   26154:	ldr	r3, [r6]
   26158:	cmp	r2, r3
   2615c:	bne	26168 <deallocateSessionEntries@@Base+0x588>
   26160:	add	sp, sp, #12
   26164:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26168:	bl	f950 <__stack_chk_fail@plt>
   2616c:			; <UNDEFINED> instruction: 0x0004c9b8
   26170:			; <UNDEFINED> instruction: 0x000003b4
   26174:	ldrdeq	r0, [r0], -r8
   26178:	ldr	r3, [pc, #200]	; 26248 <deallocateSessionEntries@@Base+0x668>
   2617c:	ldr	r2, [pc, #200]	; 2624c <deallocateSessionEntries@@Base+0x66c>
   26180:	add	r3, pc, r3
   26184:	push	{r4, r5, r6, r7, r8}
   26188:	ldr	r2, [r3, r2]
   2618c:	ldrsh	r1, [r2, #6]
   26190:	cmp	r1, #0
   26194:	blt	261a4 <deallocateSessionEntries@@Base+0x5c4>
   26198:	ldrsh	ip, [r2]
   2619c:	cmp	ip, r1
   261a0:	bgt	26210 <deallocateSessionEntries@@Base+0x630>
   261a4:	mov	r4, #0
   261a8:	mov	r1, r4
   261ac:	ldr	ip, [pc, #156]	; 26250 <deallocateSessionEntries@@Base+0x670>
   261b0:	ldr	r5, [pc, #156]	; 26254 <deallocateSessionEntries@@Base+0x674>
   261b4:	ldrb	r7, [r0]
   261b8:	ldr	ip, [r3, ip]
   261bc:	ldrb	r6, [r0, #1]
   261c0:	ldrb	r8, [ip, r1]
   261c4:	ldrb	r1, [ip, r4]
   261c8:	orr	ip, r8, r7
   261cc:	strb	ip, [r0]
   261d0:	orr	r1, r1, r6
   261d4:	strb	r1, [r0, #1]
   261d8:	ldr	r3, [r3, r5]
   261dc:	ldr	r3, [r3]
   261e0:	ldr	r1, [r3, #12]
   261e4:	cmp	r1, #0
   261e8:	blt	26204 <deallocateSessionEntries@@Base+0x624>
   261ec:	ldrsh	r3, [r2]
   261f0:	cmp	r1, r3
   261f4:	addlt	r1, r1, #1
   261f8:	bge	26204 <deallocateSessionEntries@@Base+0x624>
   261fc:	pop	{r4, r5, r6, r7, r8}
   26200:	b	26028 <deallocateSessionEntries@@Base+0x448>
   26204:	mov	r1, #0
   26208:	pop	{r4, r5, r6, r7, r8}
   2620c:	b	26028 <deallocateSessionEntries@@Base+0x448>
   26210:	add	r4, r1, #1
   26214:	movw	r1, #26215	; 0x6667
   26218:	movt	r1, #26214	; 0x6666
   2621c:	asr	ip, r4, #31
   26220:	smull	r6, r5, r1, r4
   26224:	rsb	ip, ip, r5, asr #2
   26228:	smull	r5, r1, r1, ip
   2622c:	asr	r5, ip, #31
   26230:	add	r6, ip, ip, lsl #2
   26234:	sub	r4, r4, r6, lsl #1
   26238:	rsb	r1, r5, r1, asr #2
   2623c:	add	r1, r1, r1, lsl #2
   26240:	sub	r1, ip, r1, lsl #1
   26244:	b	261ac <deallocateSessionEntries@@Base+0x5cc>
   26248:	strdeq	ip, [r4], -r8
   2624c:	andeq	r0, r0, ip, lsl #9
   26250:	ldrdeq	r0, [r0], -r8
   26254:			; <UNDEFINED> instruction: 0x000003b8
   26258:	ldr	r3, [pc, #200]	; 26328 <deallocateSessionEntries@@Base+0x748>
   2625c:	ldr	r2, [pc, #200]	; 2632c <deallocateSessionEntries@@Base+0x74c>
   26260:	add	r3, pc, r3
   26264:	push	{r4, r5, r6, r7, r8}
   26268:	ldr	r2, [r3, r2]
   2626c:	ldrsh	r1, [r2, #4]
   26270:	cmp	r1, #0
   26274:	blt	26284 <deallocateSessionEntries@@Base+0x6a4>
   26278:	ldrsh	ip, [r2, #2]
   2627c:	cmp	ip, r1
   26280:	bgt	262f0 <deallocateSessionEntries@@Base+0x710>
   26284:	mov	r4, #0
   26288:	mov	r1, r4
   2628c:	ldr	ip, [pc, #156]	; 26330 <deallocateSessionEntries@@Base+0x750>
   26290:	ldr	r5, [pc, #156]	; 26334 <deallocateSessionEntries@@Base+0x754>
   26294:	ldrb	r7, [r0]
   26298:	ldr	ip, [r3, ip]
   2629c:	ldrb	r6, [r0, #1]
   262a0:	ldrb	r8, [ip, r1]
   262a4:	ldrb	r1, [ip, r4]
   262a8:	orr	ip, r8, r7
   262ac:	strb	ip, [r0]
   262b0:	orr	r1, r1, r6
   262b4:	strb	r1, [r0, #1]
   262b8:	ldr	r3, [r3, r5]
   262bc:	ldr	r3, [r3]
   262c0:	ldr	r1, [r3, #8]
   262c4:	cmp	r1, #0
   262c8:	blt	262e4 <deallocateSessionEntries@@Base+0x704>
   262cc:	ldrsh	r3, [r2, #2]
   262d0:	cmp	r1, r3
   262d4:	addlt	r1, r1, #1
   262d8:	bge	262e4 <deallocateSessionEntries@@Base+0x704>
   262dc:	pop	{r4, r5, r6, r7, r8}
   262e0:	b	26028 <deallocateSessionEntries@@Base+0x448>
   262e4:	mov	r1, #0
   262e8:	pop	{r4, r5, r6, r7, r8}
   262ec:	b	26028 <deallocateSessionEntries@@Base+0x448>
   262f0:	add	r4, r1, #1
   262f4:	movw	r1, #26215	; 0x6667
   262f8:	movt	r1, #26214	; 0x6666
   262fc:	asr	ip, r4, #31
   26300:	smull	r6, r5, r1, r4
   26304:	rsb	ip, ip, r5, asr #2
   26308:	smull	r5, r1, r1, ip
   2630c:	asr	r5, ip, #31
   26310:	add	r6, ip, ip, lsl #2
   26314:	sub	r4, r4, r6, lsl #1
   26318:	rsb	r1, r5, r1, asr #2
   2631c:	add	r1, r1, r1, lsl #2
   26320:	sub	r1, ip, r1, lsl #1
   26324:	b	2628c <deallocateSessionEntries@@Base+0x6ac>
   26328:	andeq	ip, r4, r8, lsl r8
   2632c:	andeq	r0, r0, ip, lsl #9
   26330:	ldrdeq	r0, [r0], -r8
   26334:			; <UNDEFINED> instruction: 0x000003b8
   26338:	ldr	r2, [pc, #220]	; 2641c <deallocateSessionEntries@@Base+0x83c>
   2633c:	mov	r3, r0
   26340:	ldr	r1, [pc, #216]	; 26420 <deallocateSessionEntries@@Base+0x840>
   26344:	add	r2, pc, r2
   26348:	push	{r4, r5, r6, r7}
   2634c:	ldr	r1, [r2, r1]
   26350:	ldr	r0, [r1]
   26354:	ldr	r1, [r0, #8]
   26358:	cmp	r1, #0
   2635c:	blt	263d0 <deallocateSessionEntries@@Base+0x7f0>
   26360:	ldr	ip, [pc, #188]	; 26424 <deallocateSessionEntries@@Base+0x844>
   26364:	ldr	ip, [r2, ip]
   26368:	ldrsh	ip, [ip, #2]
   2636c:	cmp	r1, ip
   26370:	addlt	r1, r1, #1
   26374:	bge	263d0 <deallocateSessionEntries@@Base+0x7f0>
   26378:	ldr	r0, [r0, #12]
   2637c:	cmp	r0, #0
   26380:	blt	263e0 <deallocateSessionEntries@@Base+0x800>
   26384:	ldr	ip, [pc, #152]	; 26424 <deallocateSessionEntries@@Base+0x844>
   26388:	ldr	ip, [r2, ip]
   2638c:	ldrsh	ip, [ip]
   26390:	cmp	r0, ip
   26394:	bge	263e0 <deallocateSessionEntries@@Base+0x800>
   26398:	add	r0, r0, #1
   2639c:	movw	ip, #26215	; 0x6667
   263a0:	movt	ip, #26214	; 0x6666
   263a4:	asr	r4, r0, #31
   263a8:	smull	r6, r5, ip, r0
   263ac:	rsb	r4, r4, r5, asr #2
   263b0:	smull	r5, ip, ip, r4
   263b4:	asr	r6, r4, #31
   263b8:	add	r5, r4, r4, lsl #2
   263bc:	sub	r5, r0, r5, lsl #1
   263c0:	rsb	ip, r6, ip, asr #2
   263c4:	add	ip, ip, ip, lsl #2
   263c8:	sub	ip, r4, ip, lsl #1
   263cc:	b	263e8 <deallocateSessionEntries@@Base+0x808>
   263d0:	ldr	r0, [r0, #12]
   263d4:	mov	r1, #0
   263d8:	cmp	r0, #0
   263dc:	bge	26384 <deallocateSessionEntries@@Base+0x7a4>
   263e0:	mov	r5, #0
   263e4:	mov	ip, r5
   263e8:	ldr	r7, [pc, #56]	; 26428 <deallocateSessionEntries@@Base+0x848>
   263ec:	mov	r0, r3
   263f0:	ldrb	r6, [r3]
   263f4:	ldrb	r4, [r3, #1]
   263f8:	ldr	r2, [r2, r7]
   263fc:	ldrb	ip, [r2, ip]
   26400:	ldrb	r2, [r2, r5]
   26404:	orr	ip, ip, r6
   26408:	strb	ip, [r3]
   2640c:	orr	r2, r2, r4
   26410:	strb	r2, [r3, #1]
   26414:	pop	{r4, r5, r6, r7}
   26418:	b	26028 <deallocateSessionEntries@@Base+0x448>
   2641c:	andeq	ip, r4, r4, lsr r7
   26420:			; <UNDEFINED> instruction: 0x000003b8
   26424:	andeq	r0, r0, ip, lsl #9
   26428:	ldrdeq	r0, [r0], -r8
   2642c:	movw	r2, #26215	; 0x6667
   26430:	movt	r2, #26214	; 0x6666
   26434:	push	{r4, r5, r6, lr}
   26438:	mov	r4, r0
   2643c:	smull	r3, r5, r2, r1
   26440:	asr	r3, r1, #31
   26444:	ldrb	lr, [r0]
   26448:	ldr	ip, [pc, #72]	; 26498 <deallocateSessionEntries@@Base+0x8b8>
   2644c:	ldr	r6, [pc, #72]	; 2649c <deallocateSessionEntries@@Base+0x8bc>
   26450:	add	ip, pc, ip
   26454:	rsb	r3, r3, r5, asr #2
   26458:	ldr	ip, [ip, r6]
   2645c:	smull	r0, r2, r2, r3
   26460:	asr	r0, r3, #31
   26464:	add	r5, r3, r3, lsl #2
   26468:	sub	r1, r1, r5, lsl #1
   2646c:	rsb	r2, r0, r2, asr #2
   26470:	ldrb	r0, [ip, r1]
   26474:	add	r2, r2, r2, lsl #2
   26478:	sub	r3, r3, r2, lsl #1
   2647c:	ldrb	r5, [ip, r3]
   26480:	orr	r5, r5, lr
   26484:	strb	r5, [r4]
   26488:	bl	3ea80 <lowerDigit@@Base>
   2648c:	orr	r0, r0, r5
   26490:	strb	r0, [r4]
   26494:	pop	{r4, r5, r6, pc}
   26498:	andeq	ip, r4, r8, lsr #12
   2649c:	ldrdeq	r0, [r0], -r8
   264a0:	ldr	r3, [pc, #16]	; 264b8 <deallocateSessionEntries@@Base+0x8d8>
   264a4:	ldr	r2, [pc, #16]	; 264bc <deallocateSessionEntries@@Base+0x8dc>
   264a8:	add	r3, pc, r3
   264ac:	ldr	r3, [r3, r2]
   264b0:	ldr	r1, [r3, #8]
   264b4:	b	2642c <deallocateSessionEntries@@Base+0x84c>
   264b8:	ldrdeq	ip, [r4], -r0
   264bc:	andeq	r0, r0, ip, lsl #9
   264c0:	ldr	r3, [pc, #48]	; 264f8 <deallocateSessionEntries@@Base+0x918>
   264c4:	ldr	r2, [pc, #48]	; 264fc <deallocateSessionEntries@@Base+0x91c>
   264c8:	add	r3, pc, r3
   264cc:	ldr	r3, [r3, r2]
   264d0:	ldrsh	r1, [r3, #6]
   264d4:	cmp	r1, #0
   264d8:	blt	264f0 <deallocateSessionEntries@@Base+0x910>
   264dc:	ldrsh	r3, [r3]
   264e0:	cmp	r3, r1
   264e4:	addgt	r1, r1, #1
   264e8:	ble	264f0 <deallocateSessionEntries@@Base+0x910>
   264ec:	b	2642c <deallocateSessionEntries@@Base+0x84c>
   264f0:	mov	r1, #0
   264f4:	b	2642c <deallocateSessionEntries@@Base+0x84c>
   264f8:			; <UNDEFINED> instruction: 0x0004c5b0
   264fc:	andeq	r0, r0, ip, lsl #9
   26500:	ldr	r3, [pc, #48]	; 26538 <deallocateSessionEntries@@Base+0x958>
   26504:	ldr	r2, [pc, #48]	; 2653c <deallocateSessionEntries@@Base+0x95c>
   26508:	add	r3, pc, r3
   2650c:	ldr	r3, [r3, r2]
   26510:	ldrsh	r1, [r3, #4]
   26514:	cmp	r1, #0
   26518:	blt	26530 <deallocateSessionEntries@@Base+0x950>
   2651c:	ldrsh	r3, [r3, #2]
   26520:	cmp	r3, r1
   26524:	addgt	r1, r1, #1
   26528:	ble	26530 <deallocateSessionEntries@@Base+0x950>
   2652c:	b	2642c <deallocateSessionEntries@@Base+0x84c>
   26530:	mov	r1, #0
   26534:	b	2642c <deallocateSessionEntries@@Base+0x84c>
   26538:	andeq	ip, r4, r0, ror r5
   2653c:	andeq	r0, r0, ip, lsl #9
   26540:	ldr	r3, [pc, #60]	; 26584 <deallocateSessionEntries@@Base+0x9a4>
   26544:	ldr	r2, [pc, #60]	; 26588 <deallocateSessionEntries@@Base+0x9a8>
   26548:	add	r3, pc, r3
   2654c:	ldr	r2, [r3, r2]
   26550:	ldr	r2, [r2]
   26554:	ldr	r1, [r2, #12]
   26558:	cmp	r1, #0
   2655c:	blt	2657c <deallocateSessionEntries@@Base+0x99c>
   26560:	ldr	r2, [pc, #36]	; 2658c <deallocateSessionEntries@@Base+0x9ac>
   26564:	ldr	r3, [r3, r2]
   26568:	ldrsh	r3, [r3]
   2656c:	cmp	r1, r3
   26570:	addlt	r1, r1, #1
   26574:	bge	2657c <deallocateSessionEntries@@Base+0x99c>
   26578:	b	2642c <deallocateSessionEntries@@Base+0x84c>
   2657c:	mov	r1, #0
   26580:	b	2642c <deallocateSessionEntries@@Base+0x84c>
   26584:	andeq	ip, r4, r0, lsr r5
   26588:			; <UNDEFINED> instruction: 0x000003b8
   2658c:	andeq	r0, r0, ip, lsl #9
   26590:	ldr	r3, [pc, #60]	; 265d4 <deallocateSessionEntries@@Base+0x9f4>
   26594:	ldr	r2, [pc, #60]	; 265d8 <deallocateSessionEntries@@Base+0x9f8>
   26598:	add	r3, pc, r3
   2659c:	ldr	r2, [r3, r2]
   265a0:	ldr	r2, [r2]
   265a4:	ldr	r1, [r2, #8]
   265a8:	cmp	r1, #0
   265ac:	blt	265cc <deallocateSessionEntries@@Base+0x9ec>
   265b0:	ldr	r2, [pc, #36]	; 265dc <deallocateSessionEntries@@Base+0x9fc>
   265b4:	ldr	r3, [r3, r2]
   265b8:	ldrsh	r3, [r3, #2]
   265bc:	cmp	r1, r3
   265c0:	addlt	r1, r1, #1
   265c4:	bge	265cc <deallocateSessionEntries@@Base+0x9ec>
   265c8:	b	2642c <deallocateSessionEntries@@Base+0x84c>
   265cc:	mov	r1, #0
   265d0:	b	2642c <deallocateSessionEntries@@Base+0x84c>
   265d4:	andeq	ip, r4, r0, ror #9
   265d8:			; <UNDEFINED> instruction: 0x000003b8
   265dc:	andeq	r0, r0, ip, lsl #9
   265e0:	ldr	r3, [pc, #136]	; 26670 <deallocateSessionEntries@@Base+0xa90>
   265e4:	ldr	r1, [pc, #136]	; 26674 <deallocateSessionEntries@@Base+0xa94>
   265e8:	add	r3, pc, r3
   265ec:	ldr	r2, [pc, #132]	; 26678 <deallocateSessionEntries@@Base+0xa98>
   265f0:	push	{r4, r5, r6, lr}
   265f4:	mov	r5, r0
   265f8:	ldr	r4, [r3, r1]
   265fc:	ldr	r2, [r3, r2]
   26600:	ldr	r3, [r4]
   26604:	ldr	r6, [r2]
   26608:	ldrb	r3, [r3, #6]
   2660c:	cmp	r3, #0
   26610:	movne	r1, #97	; 0x61
   26614:	beq	26628 <deallocateSessionEntries@@Base+0xa48>
   26618:	mov	r0, r6
   2661c:	bl	2d7f8 <convertCharacterToDots@@Base>
   26620:	strb	r0, [r5]
   26624:	pop	{r4, r5, r6, pc}
   26628:	bl	39344 <isHelpScreen@@Base>
   2662c:	cmp	r0, #0
   26630:	movne	r1, #104	; 0x68
   26634:	bne	26618 <deallocateSessionEntries@@Base+0xa38>
   26638:	bl	39500 <isMenuScreen@@Base>
   2663c:	cmp	r0, #0
   26640:	movne	r1, #109	; 0x6d
   26644:	bne	26618 <deallocateSessionEntries@@Base+0xa38>
   26648:	bl	395c4 <isFrozenScreen@@Base>
   2664c:	cmp	r0, #0
   26650:	movne	r1, #102	; 0x66
   26654:	bne	26618 <deallocateSessionEntries@@Base+0xa38>
   26658:	ldr	r3, [r4]
   2665c:	ldrb	r1, [r3, #4]
   26660:	cmp	r1, #0
   26664:	moveq	r1, #32
   26668:	movne	r1, #116	; 0x74
   2666c:	b	26618 <deallocateSessionEntries@@Base+0xa38>
   26670:	muleq	r4, r0, r4
   26674:			; <UNDEFINED> instruction: 0x000003b8
   26678:	strdeq	r0, [r0], -ip
   2667c:	ldr	ip, [pc, #200]	; 2674c <deallocateSessionEntries@@Base+0xb6c>
   26680:	mov	r3, r0
   26684:	ldr	r2, [pc, #196]	; 26750 <deallocateSessionEntries@@Base+0xb70>
   26688:	add	ip, pc, ip
   2668c:	push	{r4, r5, r6, r7}
   26690:	ldr	r2, [ip, r2]
   26694:	ldrsh	r1, [r2, #4]
   26698:	cmp	r1, #0
   2669c:	blt	26700 <deallocateSessionEntries@@Base+0xb20>
   266a0:	ldrsh	r0, [r2, #2]
   266a4:	cmp	r0, r1
   266a8:	addgt	r1, r1, #1
   266ac:	ble	26700 <deallocateSessionEntries@@Base+0xb20>
   266b0:	ldrsh	r0, [r2, #6]
   266b4:	cmp	r0, #0
   266b8:	blt	26710 <deallocateSessionEntries@@Base+0xb30>
   266bc:	ldrsh	r2, [r2]
   266c0:	cmp	r2, r0
   266c4:	ble	26710 <deallocateSessionEntries@@Base+0xb30>
   266c8:	add	r0, r0, #1
   266cc:	movw	r2, #26215	; 0x6667
   266d0:	movt	r2, #26214	; 0x6666
   266d4:	asr	r4, r0, #31
   266d8:	smull	r6, r5, r2, r0
   266dc:	rsb	r4, r4, r5, asr #2
   266e0:	smull	r5, r2, r2, r4
   266e4:	asr	r6, r4, #31
   266e8:	add	r5, r4, r4, lsl #2
   266ec:	sub	r5, r0, r5, lsl #1
   266f0:	rsb	r2, r6, r2, asr #2
   266f4:	add	r2, r2, r2, lsl #2
   266f8:	sub	r2, r4, r2, lsl #1
   266fc:	b	26718 <deallocateSessionEntries@@Base+0xb38>
   26700:	ldrsh	r0, [r2, #6]
   26704:	mov	r1, #0
   26708:	cmp	r0, #0
   2670c:	bge	266bc <deallocateSessionEntries@@Base+0xadc>
   26710:	mov	r5, #0
   26714:	mov	r2, r5
   26718:	ldr	r7, [pc, #52]	; 26754 <deallocateSessionEntries@@Base+0xb74>
   2671c:	mov	r0, r3
   26720:	ldrb	r6, [r3]
   26724:	ldrb	r4, [r3, #1]
   26728:	ldr	ip, [ip, r7]
   2672c:	ldrb	r7, [ip, r2]
   26730:	ldrb	r2, [ip, r5]
   26734:	orr	ip, r7, r6
   26738:	strb	ip, [r3]
   2673c:	orr	r2, r2, r4
   26740:	strb	r2, [r3, #1]
   26744:	pop	{r4, r5, r6, r7}
   26748:	b	26028 <deallocateSessionEntries@@Base+0x448>
   2674c:	strdeq	ip, [r4], -r0
   26750:	andeq	r0, r0, ip, lsl #9
   26754:	ldrdeq	r0, [r0], -r8

00026758 <getStatusFieldsLength@@Base>:
   26758:	ldrb	r3, [r0]
   2675c:	cmp	r3, #0
   26760:	beq	26790 <getStatusFieldsLength@@Base+0x38>
   26764:	ldr	ip, [pc, #44]	; 26798 <getStatusFieldsLength@@Base+0x40>
   26768:	mov	r2, r0
   2676c:	mov	r0, #0
   26770:	add	ip, pc, ip
   26774:	add	r1, ip, r3, lsl #3
   26778:	ldrb	r3, [r2, #1]!
   2677c:	ldrb	r1, [r1, #4]
   26780:	cmp	r3, #0
   26784:	add	r0, r0, r1
   26788:	bne	26774 <getStatusFieldsLength@@Base+0x1c>
   2678c:	bx	lr
   26790:	mov	r0, r3
   26794:	bx	lr
   26798:	strdeq	r9, [r4], -r4

0002679c <renderStatusFields@@Base>:
   2679c:	push	{r3, r4, r5, r6, r7, lr}
   267a0:	sub	r4, r0, #1
   267a4:	ldr	r6, [pc, #64]	; 267ec <renderStatusFields@@Base+0x50>
   267a8:	mov	r5, r1
   267ac:	add	r6, pc, r6
   267b0:	ldrb	r3, [r4, #1]!
   267b4:	cmp	r3, #0
   267b8:	beq	267e8 <renderStatusFields@@Base+0x4c>
   267bc:	cmp	r3, #15
   267c0:	bhi	267b0 <renderStatusFields@@Base+0x14>
   267c4:	add	r7, r6, r3, lsl #3
   267c8:	mov	r0, r5
   267cc:	ldr	r3, [r6, r3, lsl #3]
   267d0:	blx	r3
   267d4:	ldrb	r3, [r7, #4]
   267d8:	add	r5, r5, r3
   267dc:	ldrb	r3, [r4, #1]!
   267e0:	cmp	r3, #0
   267e4:	bne	267bc <renderStatusFields@@Base+0x20>
   267e8:	pop	{r3, r4, r5, r6, r7, pc}
   267ec:			; <UNDEFINED> instruction: 0x000491b8
   267f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   267f4:	add	fp, sp, #32
   267f8:	ldr	ip, [pc, #536]	; 26a18 <renderStatusFields@@Base+0x27c>
   267fc:	sub	sp, sp, #60	; 0x3c
   26800:	str	r1, [fp, #-52]	; 0xffffffcc
   26804:	ldr	r1, [pc, #528]	; 26a1c <renderStatusFields@@Base+0x280>
   26808:	add	ip, pc, ip
   2680c:	str	r3, [fp, #-56]	; 0xffffffc8
   26810:	mov	r7, r2
   26814:	str	r0, [fp, #-76]	; 0xffffffb4
   26818:	ldr	r1, [ip, r1]
   2681c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26820:	str	r1, [fp, #-64]	; 0xffffffc0
   26824:	rsb	r4, r2, r3
   26828:	ldr	r1, [fp, #4]
   2682c:	mov	r3, ip
   26830:	add	r4, r4, #1
   26834:	rsb	r5, r7, r1
   26838:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2683c:	add	r5, r5, #1
   26840:	cmp	r4, #0
   26844:	cmpgt	r5, #0
   26848:	ldr	r3, [r1]
   2684c:	movle	r2, #0
   26850:	movgt	r2, #1
   26854:	str	r3, [fp, #-40]	; 0xffffffd8
   26858:	ble	269f0 <renderStatusFields@@Base+0x254>
   2685c:	ldr	r3, [pc, #444]	; 26a20 <renderStatusFields@@Base+0x284>
   26860:	add	r3, pc, r3
   26864:	ldr	r3, [r3]
   26868:	cmp	r3, #0
   2686c:	blt	269f8 <renderStatusFields@@Base+0x25c>
   26870:	mul	r6, r4, r5
   26874:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26878:	str	sp, [fp, #-72]	; 0xffffffb8
   2687c:	sxth	r1, r7
   26880:	sxth	r3, r5
   26884:	sxth	r0, r2
   26888:	sxth	r2, r4
   2688c:	lsl	ip, r6, #2
   26890:	add	ip, ip, #10
   26894:	bic	ip, ip, #7
   26898:	sub	sp, sp, ip
   2689c:	add	r8, sp, #8
   268a0:	str	r8, [sp]
   268a4:	bl	3910c <readScreenText@@Base>
   268a8:	cmp	r0, #0
   268ac:	moveq	r4, r0
   268b0:	bne	268d8 <renderStatusFields@@Base+0x13c>
   268b4:	ldr	sp, [fp, #-72]	; 0xffffffb8
   268b8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   268bc:	mov	r0, r4
   268c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   268c4:	ldr	r3, [r1]
   268c8:	cmp	r2, r3
   268cc:	bne	26a14 <renderStatusFields@@Base+0x278>
   268d0:	sub	sp, fp, #32
   268d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   268d8:	add	r3, r6, r5
   268dc:	ldr	r1, [fp, #4]
   268e0:	str	sp, [fp, #-84]	; 0xffffffac
   268e4:	lsl	r3, r3, #2
   268e8:	cmp	r1, r7
   268ec:	add	r3, r3, #10
   268f0:	bic	r3, r3, #7
   268f4:	sub	sp, sp, r3
   268f8:	add	r2, sp, #8
   268fc:	str	r2, [fp, #-80]	; 0xffffffb0
   26900:	blt	26a00 <renderStatusFields@@Base+0x264>
   26904:	add	r3, r1, #1
   26908:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2690c:	lsl	r4, r4, #2
   26910:	str	r3, [fp, #-68]	; 0xffffffbc
   26914:	add	r6, r1, #1
   26918:	str	r4, [fp, #-60]	; 0xffffffc4
   2691c:	str	r2, [fp, #-48]	; 0xffffffd0
   26920:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26924:	ldr	r1, [fp, #-52]	; 0xffffffcc
   26928:	cmp	r3, r1
   2692c:	blt	269e8 <renderStatusFields@@Base+0x24c>
   26930:	ldr	r4, [fp, #-48]	; 0xffffffd0
   26934:	mov	sl, r1
   26938:	mov	r5, r8
   2693c:	ldr	r9, [r5], #4
   26940:	mov	r0, r9
   26944:	bl	fe0c <iswcntrl@plt>
   26948:	cmp	r0, #0
   2694c:	movne	r9, #32
   26950:	bne	26964 <renderStatusFields@@Base+0x1c8>
   26954:	mov	r0, r9
   26958:	bl	f44c <iswspace@plt>
   2695c:	cmp	r0, #0
   26960:	movne	r9, #32
   26964:	add	sl, sl, #1
   26968:	str	r9, [r4], #4
   2696c:	cmp	sl, r6
   26970:	bne	2693c <renderStatusFields@@Base+0x1a0>
   26974:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26978:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2697c:	add	r8, r8, r2
   26980:	add	r9, r3, r2
   26984:	ldr	r1, [fp, #4]
   26988:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2698c:	cmp	r7, r1
   26990:	add	r7, r7, #1
   26994:	movne	r2, #13
   26998:	strne	r2, [r9]
   2699c:	addne	r9, r9, #4
   269a0:	cmp	r7, r3
   269a4:	str	r9, [fp, #-48]	; 0xffffffd0
   269a8:	bne	26920 <renderStatusFields@@Base+0x184>
   269ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   269b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   269b4:	rsb	r5, r2, r1
   269b8:	asr	r5, r5, #2
   269bc:	lsl	r0, r5, #2
   269c0:	bl	fb48 <malloc@plt>
   269c4:	subs	r4, r0, #0
   269c8:	beq	26a0c <renderStatusFields@@Base+0x270>
   269cc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   269d0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   269d4:	str	r5, [r2]
   269d8:	mov	r2, r5
   269dc:	bl	f620 <wmemcpy@plt>
   269e0:	ldr	sp, [fp, #-84]	; 0xffffffac
   269e4:	b	268b4 <renderStatusFields@@Base+0x118>
   269e8:	ldr	r9, [fp, #-48]	; 0xffffffd0
   269ec:	b	26984 <renderStatusFields@@Base+0x1e8>
   269f0:	mov	r4, r2
   269f4:	b	268b8 <renderStatusFields@@Base+0x11c>
   269f8:	mov	r4, #0
   269fc:	b	268b8 <renderStatusFields@@Base+0x11c>
   26a00:	mov	r0, #0
   26a04:	mov	r5, r0
   26a08:	b	269c0 <renderStatusFields@@Base+0x224>
   26a0c:	bl	1c740 <logMallocError@@Base>
   26a10:	b	269e0 <renderStatusFields@@Base+0x244>
   26a14:	bl	f950 <__stack_chk_fail@plt>
   26a18:	andeq	ip, r4, r0, ror r2
   26a1c:			; <UNDEFINED> instruction: 0x000003b4
   26a20:	andeq	ip, r4, r8, asr #16

00026a24 <cpbGetContent@@Base>:
   26a24:	ldr	r3, [pc, #16]	; 26a3c <cpbGetContent@@Base+0x18>
   26a28:	add	r3, pc, r3
   26a2c:	ldr	r2, [r3]
   26a30:	str	r2, [r0]
   26a34:	ldr	r0, [r3, #4]
   26a38:	bx	lr
   26a3c:	andeq	sp, r4, r0, lsl #3

00026a40 <cpbTruncateContent@@Base>:
   26a40:	ldr	r3, [pc, #16]	; 26a58 <cpbTruncateContent@@Base+0x18>
   26a44:	add	r3, pc, r3
   26a48:	ldr	r2, [r3]
   26a4c:	cmp	r2, r0
   26a50:	strhi	r0, [r3]
   26a54:	bx	lr
   26a58:	andeq	sp, r4, r4, ror #2

00026a5c <cpbClearContent@@Base>:
   26a5c:	mov	r0, #0
   26a60:	b	26a40 <cpbTruncateContent@@Base>

00026a64 <cpbAddContent@@Base>:
   26a64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26a68:	mov	r7, r1
   26a6c:	ldr	r4, [pc, #156]	; 26b10 <cpbAddContent@@Base+0xac>
   26a70:	mov	r8, r0
   26a74:	add	r4, pc, r4
   26a78:	ldr	r6, [r4]
   26a7c:	ldr	r3, [r4, #8]
   26a80:	add	r5, r1, r6
   26a84:	cmp	r5, r3
   26a88:	bhi	26ab4 <cpbAddContent@@Base+0x50>
   26a8c:	ldr	r0, [r4, #4]
   26a90:	add	r0, r0, r6, lsl #2
   26a94:	mov	r1, r8
   26a98:	mov	r2, r7
   26a9c:	bl	f620 <wmemcpy@plt>
   26aa0:	ldr	r3, [pc, #108]	; 26b14 <cpbAddContent@@Base+0xb0>
   26aa4:	mov	r0, #1
   26aa8:	add	r3, pc, r3
   26aac:	str	r5, [r3]
   26ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26ab4:	orr	r9, r5, #255	; 0xff
   26ab8:	lsl	r0, r9, #2
   26abc:	bl	fb48 <malloc@plt>
   26ac0:	subs	sl, r0, #0
   26ac4:	beq	26b00 <cpbAddContent@@Base+0x9c>
   26ac8:	ldr	r4, [r4, #4]
   26acc:	mov	r2, r6
   26ad0:	mov	r1, r4
   26ad4:	bl	f620 <wmemcpy@plt>
   26ad8:	cmp	r4, #0
   26adc:	beq	26ae8 <cpbAddContent@@Base+0x84>
   26ae0:	mov	r0, r4
   26ae4:	bl	f4f4 <free@plt>
   26ae8:	ldr	r3, [pc, #40]	; 26b18 <cpbAddContent@@Base+0xb4>
   26aec:	mov	r0, sl
   26af0:	add	r3, pc, r3
   26af4:	str	sl, [r3, #4]
   26af8:	str	r9, [r3, #8]
   26afc:	b	26a90 <cpbAddContent@@Base+0x2c>
   26b00:	bl	1c740 <logMallocError@@Base>
   26b04:	bl	1c740 <logMallocError@@Base>
   26b08:	mov	r0, sl
   26b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26b10:	andeq	sp, r4, r4, lsr r1
   26b14:	andeq	sp, r4, r0, lsl #2
   26b18:	strheq	sp, [r4], -r8

00026b1c <cpbSetContent@@Base>:
   26b1c:	push	{r3, r4, r5, lr}
   26b20:	mov	r5, r0
   26b24:	mov	r4, r1
   26b28:	bl	26a5c <cpbClearContent@@Base>
   26b2c:	mov	r0, r5
   26b30:	mov	r1, r4
   26b34:	pop	{r3, r4, r5, lr}
   26b38:	b	26a64 <cpbAddContent@@Base>

00026b3c <cpbBeginOperation@@Base>:
   26b3c:	ldr	r3, [pc, #52]	; 26b78 <cpbBeginOperation@@Base+0x3c>
   26b40:	push	{r4, r5}
   26b44:	add	r3, pc, r3
   26b48:	ldr	r5, [pc, #44]	; 26b7c <cpbBeginOperation@@Base+0x40>
   26b4c:	ldr	r2, [pc, #44]	; 26b80 <cpbBeginOperation@@Base+0x44>
   26b50:	ldr	r4, [r3]
   26b54:	add	r5, pc, r5
   26b58:	ldr	ip, [pc, #36]	; 26b84 <cpbBeginOperation@@Base+0x48>
   26b5c:	add	r2, pc, r2
   26b60:	str	r0, [r3, #12]
   26b64:	str	r1, [r3, #16]
   26b68:	str	r4, [r5]
   26b6c:	ldr	r0, [r2, ip]
   26b70:	pop	{r4, r5}
   26b74:	b	37160 <playTune@@Base>
   26b78:	andeq	sp, r4, r4, rrx
   26b7c:	andeq	ip, r4, r4, asr r5
   26b80:	andeq	fp, r4, ip, lsl pc
   26b84:	andeq	r0, r0, r8, lsl #8

00026b88 <cpbRectangularCopy@@Base>:
   26b88:	push	{r4, r5, r6, r7, r8, r9, lr}
   26b8c:	sub	sp, sp, #20
   26b90:	ldr	r5, [pc, #292]	; 26cbc <cpbRectangularCopy@@Base+0x134>
   26b94:	mov	r3, r0
   26b98:	ldr	ip, [pc, #288]	; 26cc0 <cpbRectangularCopy@@Base+0x138>
   26b9c:	add	r0, sp, #8
   26ba0:	add	r5, pc, r5
   26ba4:	ldr	r2, [pc, #280]	; 26cc4 <cpbRectangularCopy@@Base+0x13c>
   26ba8:	ldr	r6, [r5, ip]
   26bac:	add	r2, pc, r2
   26bb0:	ldr	lr, [r2, #12]
   26bb4:	ldr	ip, [r6]
   26bb8:	ldr	r2, [r2, #16]
   26bbc:	str	r1, [sp]
   26bc0:	mov	r1, lr
   26bc4:	str	ip, [sp, #12]
   26bc8:	bl	267f0 <renderStatusFields@@Base+0x54>
   26bcc:	subs	r9, r0, #0
   26bd0:	beq	26ca8 <cpbRectangularCopy@@Base+0x120>
   26bd4:	ldr	r8, [sp, #8]
   26bd8:	add	r8, r9, r8, lsl #2
   26bdc:	cmp	r9, r8
   26be0:	beq	26cb0 <cpbRectangularCopy@@Base+0x128>
   26be4:	mov	ip, r9
   26be8:	mov	r4, r9
   26bec:	mov	r7, #0
   26bf0:	mov	r1, #32
   26bf4:	ldr	lr, [r4], #4
   26bf8:	cmp	lr, #13
   26bfc:	beq	26c2c <cpbRectangularCopy@@Base+0xa4>
   26c00:	cmp	lr, #32
   26c04:	addeq	r7, r7, #1
   26c08:	beq	26c38 <cpbRectangularCopy@@Base+0xb0>
   26c0c:	cmp	r7, #0
   26c10:	beq	26c2c <cpbRectangularCopy@@Base+0xa4>
   26c14:	mov	r3, r7
   26c18:	mov	r2, ip
   26c1c:	subs	r3, r3, #1
   26c20:	str	r1, [r2], #4
   26c24:	bne	26c1c <cpbRectangularCopy@@Base+0x94>
   26c28:	add	ip, ip, r7, lsl #2
   26c2c:	str	lr, [ip]
   26c30:	add	ip, ip, #4
   26c34:	mov	r7, #0
   26c38:	cmp	r8, r4
   26c3c:	bne	26bf4 <cpbRectangularCopy@@Base+0x6c>
   26c40:	rsb	ip, r9, ip
   26c44:	asr	r4, ip, #2
   26c48:	ldr	r3, [pc, #120]	; 26cc8 <cpbRectangularCopy@@Base+0x140>
   26c4c:	str	r4, [sp, #8]
   26c50:	add	r3, pc, r3
   26c54:	ldr	r0, [r3]
   26c58:	bl	26a40 <cpbTruncateContent@@Base>
   26c5c:	mov	r1, r4
   26c60:	mov	r0, r9
   26c64:	bl	26a64 <cpbAddContent@@Base>
   26c68:	cmp	r0, #0
   26c6c:	moveq	r4, r0
   26c70:	beq	26c84 <cpbRectangularCopy@@Base+0xfc>
   26c74:	ldr	r3, [pc, #80]	; 26ccc <cpbRectangularCopy@@Base+0x144>
   26c78:	mov	r4, #1
   26c7c:	ldr	r0, [r5, r3]
   26c80:	bl	37160 <playTune@@Base>
   26c84:	mov	r0, r9
   26c88:	bl	f4f4 <free@plt>
   26c8c:	ldr	r2, [sp, #12]
   26c90:	mov	r0, r4
   26c94:	ldr	r3, [r6]
   26c98:	cmp	r2, r3
   26c9c:	bne	26cb8 <cpbRectangularCopy@@Base+0x130>
   26ca0:	add	sp, sp, #20
   26ca4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26ca8:	mov	r4, r9
   26cac:	b	26c8c <cpbRectangularCopy@@Base+0x104>
   26cb0:	mov	r4, #0
   26cb4:	b	26c48 <cpbRectangularCopy@@Base+0xc0>
   26cb8:	bl	f950 <__stack_chk_fail@plt>
   26cbc:	ldrdeq	fp, [r4], -r8
   26cc0:			; <UNDEFINED> instruction: 0x000003b4
   26cc4:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   26cc8:	andeq	ip, r4, r8, asr r4
   26ccc:	muleq	r0, r0, r3

00026cd0 <cpbLinearCopy@@Base>:
   26cd0:	push	{r4, r5, r6, r7, r8, lr}
   26cd4:	sub	sp, sp, #40	; 0x28
   26cd8:	ldr	r5, [pc, #564]	; 26f14 <cpbLinearCopy@@Base+0x244>
   26cdc:	mov	r8, r0
   26ce0:	ldr	r3, [pc, #560]	; 26f18 <cpbLinearCopy@@Base+0x248>
   26ce4:	add	r0, sp, #16
   26ce8:	add	r5, pc, r5
   26cec:	mov	r7, r1
   26cf0:	ldr	r6, [r5, r3]
   26cf4:	ldr	r3, [r6]
   26cf8:	str	r3, [sp, #36]	; 0x24
   26cfc:	bl	3907c <describeScreen@@Base>
   26d00:	ldrsh	r4, [sp, #18]
   26d04:	add	r0, sp, #12
   26d08:	ldr	r3, [pc, #524]	; 26f1c <cpbLinearCopy@@Base+0x24c>
   26d0c:	mov	r1, #0
   26d10:	sub	r4, r4, #1
   26d14:	str	r7, [sp]
   26d18:	add	r3, pc, r3
   26d1c:	ldr	r2, [r3, #16]
   26d20:	mov	r3, r4
   26d24:	bl	267f0 <renderStatusFields@@Base+0x54>
   26d28:	subs	r7, r0, #0
   26d2c:	beq	26ef8 <cpbLinearCopy@@Base+0x228>
   26d30:	cmp	r4, r8
   26d34:	ldr	r4, [sp, #12]
   26d38:	ble	26d90 <cpbLinearCopy@@Base+0xc0>
   26d3c:	add	ip, r7, r4, lsl #2
   26d40:	cmp	r7, ip
   26d44:	beq	26f08 <cpbLinearCopy@@Base+0x238>
   26d48:	ldr	r2, [ip, #-4]
   26d4c:	sub	r3, ip, #4
   26d50:	cmp	r2, #13
   26d54:	bne	26d68 <cpbLinearCopy@@Base+0x98>
   26d58:	b	26f08 <cpbLinearCopy@@Base+0x238>
   26d5c:	ldr	r2, [r3, #-4]!
   26d60:	cmp	r2, #13
   26d64:	beq	26ee8 <cpbLinearCopy@@Base+0x218>
   26d68:	cmp	r7, r3
   26d6c:	mov	r1, r3
   26d70:	bne	26d5c <cpbLinearCopy@@Base+0x8c>
   26d74:	rsb	r3, r7, ip
   26d78:	asr	r3, r3, #2
   26d7c:	rsb	r3, r3, #0
   26d80:	add	r8, r8, #1
   26d84:	adds	r3, r8, r3
   26d88:	addmi	r4, r3, r4
   26d8c:	strmi	r4, [sp, #12]
   26d90:	ldr	r3, [pc, #392]	; 26f20 <cpbLinearCopy@@Base+0x250>
   26d94:	add	r3, pc, r3
   26d98:	ldr	r8, [r3, #12]
   26d9c:	cmp	r8, #0
   26da0:	bne	26e98 <cpbLinearCopy@@Base+0x1c8>
   26da4:	add	r0, r7, r4, lsl #2
   26da8:	cmp	r7, r0
   26dac:	beq	26f00 <cpbLinearCopy@@Base+0x230>
   26db0:	mov	r3, #0
   26db4:	mov	r8, r7
   26db8:	mov	r4, r3
   26dbc:	mov	ip, r7
   26dc0:	mov	r1, #32
   26dc4:	ldr	lr, [ip], #4
   26dc8:	cmp	lr, #13
   26dcc:	addeq	r3, r3, #1
   26dd0:	beq	26e28 <cpbLinearCopy@@Base+0x158>
   26dd4:	cmp	lr, #32
   26dd8:	addeq	r4, r4, #1
   26ddc:	beq	26e28 <cpbLinearCopy@@Base+0x158>
   26de0:	cmp	r3, #0
   26de4:	beq	26df8 <cpbLinearCopy@@Base+0x128>
   26de8:	cmp	r3, #1
   26dec:	cmple	r4, #0
   26df0:	movle	r4, #0
   26df4:	movgt	r4, #1
   26df8:	cmp	r4, #0
   26dfc:	beq	26ee0 <cpbLinearCopy@@Base+0x210>
   26e00:	mov	r3, r4
   26e04:	mov	r2, r8
   26e08:	subs	r3, r3, #1
   26e0c:	str	r1, [r2], #4
   26e10:	bne	26e08 <cpbLinearCopy@@Base+0x138>
   26e14:	add	r2, r8, r4, lsl #2
   26e18:	mov	r3, #0
   26e1c:	add	r8, r2, #4
   26e20:	mov	r4, r3
   26e24:	str	lr, [r2]
   26e28:	cmp	r0, ip
   26e2c:	bne	26dc4 <cpbLinearCopy@@Base+0xf4>
   26e30:	rsb	r8, r7, r8
   26e34:	asr	r8, r8, #2
   26e38:	ldr	r3, [pc, #228]	; 26f24 <cpbLinearCopy@@Base+0x254>
   26e3c:	str	r8, [sp, #12]
   26e40:	add	r3, pc, r3
   26e44:	ldr	r0, [r3]
   26e48:	bl	26a40 <cpbTruncateContent@@Base>
   26e4c:	mov	r0, r7
   26e50:	mov	r1, r8
   26e54:	bl	26a64 <cpbAddContent@@Base>
   26e58:	cmp	r0, #0
   26e5c:	moveq	r4, r0
   26e60:	beq	26e74 <cpbLinearCopy@@Base+0x1a4>
   26e64:	ldr	r3, [pc, #188]	; 26f28 <cpbLinearCopy@@Base+0x258>
   26e68:	mov	r4, #1
   26e6c:	ldr	r0, [r5, r3]
   26e70:	bl	37160 <playTune@@Base>
   26e74:	mov	r0, r7
   26e78:	bl	f4f4 <free@plt>
   26e7c:	ldr	r2, [sp, #36]	; 0x24
   26e80:	mov	r0, r4
   26e84:	ldr	r3, [r6]
   26e88:	cmp	r2, r3
   26e8c:	bne	26f10 <cpbLinearCopy@@Base+0x240>
   26e90:	add	sp, sp, #40	; 0x28
   26e94:	pop	{r4, r5, r6, r7, r8, pc}
   26e98:	mov	r1, #13
   26e9c:	mov	r0, r7
   26ea0:	mov	r2, r4
   26ea4:	bl	f7a0 <wmemchr@plt>
   26ea8:	subs	r1, r0, #0
   26eac:	addeq	r1, r7, r4, lsl #2
   26eb0:	rsb	r3, r7, r1
   26eb4:	cmp	r8, r3, asr #2
   26eb8:	addlt	r1, r7, r8, lsl #2
   26ebc:	cmp	r1, r7
   26ec0:	beq	26da4 <cpbLinearCopy@@Base+0xd4>
   26ec4:	rsb	r2, r7, r1
   26ec8:	mov	r0, r7
   26ecc:	sub	r2, r4, r2, asr #2
   26ed0:	str	r2, [sp, #12]
   26ed4:	bl	fc80 <wmemmove@plt>
   26ed8:	ldr	r4, [sp, #12]
   26edc:	b	26da4 <cpbLinearCopy@@Base+0xd4>
   26ee0:	mov	r2, r8
   26ee4:	b	26e18 <cpbLinearCopy@@Base+0x148>
   26ee8:	rsb	r3, r1, ip
   26eec:	asr	r3, r3, #2
   26ef0:	rsb	r3, r3, #0
   26ef4:	b	26d80 <cpbLinearCopy@@Base+0xb0>
   26ef8:	mov	r4, r7
   26efc:	b	26e7c <cpbLinearCopy@@Base+0x1ac>
   26f00:	mov	r8, #0
   26f04:	b	26e38 <cpbLinearCopy@@Base+0x168>
   26f08:	mov	r3, #0
   26f0c:	b	26d80 <cpbLinearCopy@@Base+0xb0>
   26f10:	bl	f950 <__stack_chk_fail@plt>
   26f14:	muleq	r4, r0, sp
   26f18:			; <UNDEFINED> instruction: 0x000003b4
   26f1c:	muleq	r4, r0, lr
   26f20:	andeq	ip, r4, r4, lsl lr
   26f24:	andeq	ip, r4, r8, ror #4
   26f28:	muleq	r0, r0, r3

00026f2c <cpbPaste@@Base>:
   26f2c:	ldr	r3, [pc, #128]	; 26fb4 <cpbPaste@@Base+0x88>
   26f30:	ldr	r2, [pc, #128]	; 26fb8 <cpbPaste@@Base+0x8c>
   26f34:	add	r3, pc, r3
   26f38:	push	{r4, r5, r6, lr}
   26f3c:	sub	sp, sp, #8
   26f40:	ldr	r6, [r3, r2]
   26f44:	mov	r0, sp
   26f48:	ldr	r3, [r6]
   26f4c:	str	r3, [sp, #4]
   26f50:	bl	26a24 <cpbGetContent@@Base>
   26f54:	ldr	r3, [sp]
   26f58:	cmp	r3, #0
   26f5c:	movne	r4, #0
   26f60:	subne	r5, r0, #4
   26f64:	bne	26f7c <cpbPaste@@Base+0x50>
   26f68:	b	26f8c <cpbPaste@@Base+0x60>
   26f6c:	ldr	r3, [sp]
   26f70:	add	r4, r4, #1
   26f74:	cmp	r3, r4
   26f78:	bls	26fa8 <cpbPaste@@Base+0x7c>
   26f7c:	ldr	r0, [r5, #4]!
   26f80:	bl	391a8 <insertScreenKey@@Base>
   26f84:	cmp	r0, #0
   26f88:	bne	26f6c <cpbPaste@@Base+0x40>
   26f8c:	mov	r0, #0
   26f90:	ldr	r2, [sp, #4]
   26f94:	ldr	r3, [r6]
   26f98:	cmp	r2, r3
   26f9c:	bne	26fb0 <cpbPaste@@Base+0x84>
   26fa0:	add	sp, sp, #8
   26fa4:	pop	{r4, r5, r6, pc}
   26fa8:	mov	r0, #1
   26fac:	b	26f90 <cpbPaste@@Base+0x64>
   26fb0:	bl	f950 <__stack_chk_fail@plt>
   26fb4:	andeq	fp, r4, r4, asr #22
   26fb8:			; <UNDEFINED> instruction: 0x000003b4

00026fbc <touchGetRegion@@Base>:
   26fbc:	ldr	ip, [pc, #76]	; 27010 <touchGetRegion@@Base+0x54>
   26fc0:	push	{r4, r5, r6}
   26fc4:	add	ip, pc, ip
   26fc8:	ldr	r5, [ip]
   26fcc:	ldr	r4, [ip, #4]
   26fd0:	cmp	r5, r4
   26fd4:	bgt	27004 <touchGetRegion@@Base+0x48>
   26fd8:	ldr	r6, [ip, #8]
   26fdc:	ldr	ip, [ip, #12]
   26fe0:	cmp	r6, ip
   26fe4:	bgt	27004 <touchGetRegion@@Base+0x48>
   26fe8:	str	r5, [r0]
   26fec:	mov	r0, #1
   26ff0:	str	r4, [r1]
   26ff4:	str	r6, [r2]
   26ff8:	str	ip, [r3]
   26ffc:	pop	{r4, r5, r6}
   27000:	bx	lr
   27004:	mov	r0, #0
   27008:	pop	{r4, r5, r6}
   2700c:	bx	lr
   27010:	strdeq	ip, [r4], -r8

00027014 <touchAnalyzePressure@@Base>:
   27014:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27018:	subs	sl, r1, #0
   2701c:	ldr	r4, [pc, #784]	; 27334 <touchAnalyzePressure@@Base+0x320>
   27020:	mov	r9, r0
   27024:	add	r4, pc, r4
   27028:	beq	27160 <touchAnalyzePressure@@Base+0x14c>
   2702c:	ldr	r3, [r0, #4]
   27030:	mov	r2, sl
   27034:	ldr	ip, [r9]
   27038:	mov	r0, #7
   2703c:	ldr	r1, [pc, #756]	; 27338 <touchAnalyzePressure@@Base+0x324>
   27040:	mul	r3, ip, r3
   27044:	add	r1, pc, r1
   27048:	bl	1c69c <logBytes@@Base>
   2704c:	ldr	r2, [pc, #744]	; 2733c <touchAnalyzePressure@@Base+0x328>
   27050:	ldr	r3, [pc, #744]	; 27340 <touchAnalyzePressure@@Base+0x32c>
   27054:	mov	ip, #0
   27058:	ldr	r0, [pc, #740]	; 27344 <touchAnalyzePressure@@Base+0x330>
   2705c:	ldr	r2, [r4, r2]
   27060:	add	r3, pc, r3
   27064:	ldr	r5, [r9, #4]
   27068:	ldr	r1, [r2]
   2706c:	sub	r5, r5, #1
   27070:	str	r1, [r3]
   27074:	mov	r2, r1
   27078:	ldr	r0, [r4, r0]
   2707c:	str	ip, [r3, #8]
   27080:	str	r5, [r3, #12]
   27084:	ldr	r0, [r0]
   27088:	add	r0, r1, r0
   2708c:	sub	r0, r0, #1
   27090:	str	r0, [r3, #4]
   27094:	cmp	r1, r0
   27098:	movle	r8, r0
   2709c:	bgt	271a4 <touchAnalyzePressure@@Base+0x190>
   270a0:	cmp	r5, #0
   270a4:	blt	270e0 <touchAnalyzePressure@@Base+0xcc>
   270a8:	ldrb	r3, [sl, r8]
   270ac:	ldr	r6, [r9]
   270b0:	cmp	r3, #0
   270b4:	bne	272a4 <touchAnalyzePressure@@Base+0x290>
   270b8:	add	r7, sl, r8
   270bc:	mov	ip, r3
   270c0:	b	270d0 <touchAnalyzePressure@@Base+0xbc>
   270c4:	ldrb	r4, [r7, r3]
   270c8:	cmp	r4, #0
   270cc:	bne	270f4 <touchAnalyzePressure@@Base+0xe0>
   270d0:	add	ip, ip, #1
   270d4:	add	r3, r3, r6
   270d8:	cmp	ip, r5
   270dc:	ble	270c4 <touchAnalyzePressure@@Base+0xb0>
   270e0:	sub	r8, r8, #1
   270e4:	cmp	r8, r1
   270e8:	blt	272c4 <touchAnalyzePressure@@Base+0x2b0>
   270ec:	mov	r0, r8
   270f0:	b	270a0 <touchAnalyzePressure@@Base+0x8c>
   270f4:	ldr	r3, [pc, #588]	; 27348 <touchAnalyzePressure@@Base+0x334>
   270f8:	add	r3, pc, r3
   270fc:	str	r0, [r3, #4]
   27100:	cmp	r8, r1
   27104:	blt	271d4 <touchAnalyzePressure@@Base+0x1c0>
   27108:	ldr	r3, [pc, #572]	; 2734c <touchAnalyzePressure@@Base+0x338>
   2710c:	sub	r1, r1, #1
   27110:	add	ip, sl, r1
   27114:	add	r3, pc, r3
   27118:	ldr	r4, [r3]
   2711c:	ldrb	r3, [ip, #1]!
   27120:	cmp	r3, #0
   27124:	bne	272f4 <touchAnalyzePressure@@Base+0x2e0>
   27128:	mov	r1, r3
   2712c:	b	2713c <touchAnalyzePressure@@Base+0x128>
   27130:	ldrb	r0, [ip, r3]
   27134:	cmp	r0, #0
   27138:	bne	271c8 <touchAnalyzePressure@@Base+0x1b4>
   2713c:	add	r1, r1, #1
   27140:	add	r3, r3, r6
   27144:	cmp	r1, r5
   27148:	ble	27130 <touchAnalyzePressure@@Base+0x11c>
   2714c:	add	r2, r2, #1
   27150:	cmp	r8, r2
   27154:	blt	27324 <touchAnalyzePressure@@Base+0x310>
   27158:	mov	r4, r2
   2715c:	b	2711c <touchAnalyzePressure@@Base+0x108>
   27160:	ldr	r1, [pc, #488]	; 27350 <touchAnalyzePressure@@Base+0x33c>
   27164:	mov	r0, #7
   27168:	add	r1, pc, r1
   2716c:	bl	1c634 <logMessage@@Base>
   27170:	ldr	r2, [pc, #452]	; 2733c <touchAnalyzePressure@@Base+0x328>
   27174:	ldr	r3, [pc, #472]	; 27354 <touchAnalyzePressure@@Base+0x340>
   27178:	ldr	r1, [pc, #452]	; 27344 <touchAnalyzePressure@@Base+0x330>
   2717c:	ldr	r2, [r4, r2]
   27180:	add	r3, pc, r3
   27184:	ldr	r2, [r2]
   27188:	str	r2, [r3]
   2718c:	ldr	r1, [r4, r1]
   27190:	str	sl, [r3, #8]
   27194:	ldr	r1, [r1]
   27198:	add	r2, r2, r1
   2719c:	sub	r2, r2, #1
   271a0:	str	r2, [r3, #4]
   271a4:	ldr	r3, [pc, #428]	; 27358 <touchAnalyzePressure@@Base+0x344>
   271a8:	mvn	r2, #0
   271ac:	add	r3, pc, r3
   271b0:	str	r2, [r3, #12]
   271b4:	ldrb	r3, [r9, #48]	; 0x30
   271b8:	mvn	r0, #0
   271bc:	orr	r3, r3, #2
   271c0:	strb	r3, [r9, #48]	; 0x30
   271c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   271c8:	ldr	r3, [pc, #396]	; 2735c <touchAnalyzePressure@@Base+0x348>
   271cc:	add	r3, pc, r3
   271d0:	str	r4, [r3]
   271d4:	ldr	r3, [pc, #388]	; 27360 <touchAnalyzePressure@@Base+0x34c>
   271d8:	mov	r0, sl
   271dc:	mov	ip, #0
   271e0:	add	r3, pc, r3
   271e4:	ldr	r4, [r3, #8]
   271e8:	cmp	r8, r2
   271ec:	blt	2721c <touchAnalyzePressure@@Base+0x208>
   271f0:	ldrb	r3, [r0, r2]
   271f4:	cmp	r3, #0
   271f8:	bne	272d4 <touchAnalyzePressure@@Base+0x2c0>
   271fc:	mov	r3, r2
   27200:	b	27210 <touchAnalyzePressure@@Base+0x1fc>
   27204:	ldrb	r1, [r0, r3]
   27208:	cmp	r1, #0
   2720c:	bne	27234 <touchAnalyzePressure@@Base+0x220>
   27210:	add	r3, r3, #1
   27214:	cmp	r8, r3
   27218:	bge	27204 <touchAnalyzePressure@@Base+0x1f0>
   2721c:	add	ip, ip, #1
   27220:	add	r0, r0, r6
   27224:	cmp	ip, r5
   27228:	bgt	27314 <touchAnalyzePressure@@Base+0x300>
   2722c:	mov	r4, ip
   27230:	b	271e8 <touchAnalyzePressure@@Base+0x1d4>
   27234:	ldr	r3, [pc, #296]	; 27364 <touchAnalyzePressure@@Base+0x350>
   27238:	add	r3, pc, r3
   2723c:	str	r4, [r3, #8]
   27240:	cmp	ip, r5
   27244:	bgt	271b4 <touchAnalyzePressure@@Base+0x1a0>
   27248:	ldr	r3, [pc, #280]	; 27368 <touchAnalyzePressure@@Base+0x354>
   2724c:	mla	sl, r5, r6, sl
   27250:	add	r3, pc, r3
   27254:	ldr	r0, [r3, #12]
   27258:	cmp	r8, r2
   2725c:	blt	2728c <touchAnalyzePressure@@Base+0x278>
   27260:	ldrb	r3, [sl, r2]
   27264:	cmp	r3, #0
   27268:	bne	272e4 <touchAnalyzePressure@@Base+0x2d0>
   2726c:	mov	r3, r2
   27270:	b	27280 <touchAnalyzePressure@@Base+0x26c>
   27274:	ldrb	r1, [sl, r3]
   27278:	cmp	r1, #0
   2727c:	bne	272b4 <touchAnalyzePressure@@Base+0x2a0>
   27280:	add	r3, r3, #1
   27284:	cmp	r8, r3
   27288:	bge	27274 <touchAnalyzePressure@@Base+0x260>
   2728c:	sub	r5, r5, #1
   27290:	rsb	sl, r6, sl
   27294:	cmp	ip, r5
   27298:	bgt	27304 <touchAnalyzePressure@@Base+0x2f0>
   2729c:	mov	r0, r5
   272a0:	b	27258 <touchAnalyzePressure@@Base+0x244>
   272a4:	ldr	r3, [pc, #192]	; 2736c <touchAnalyzePressure@@Base+0x358>
   272a8:	add	r3, pc, r3
   272ac:	str	r0, [r3, #4]
   272b0:	b	27100 <touchAnalyzePressure@@Base+0xec>
   272b4:	ldr	r3, [pc, #180]	; 27370 <touchAnalyzePressure@@Base+0x35c>
   272b8:	add	r3, pc, r3
   272bc:	str	r0, [r3, #12]
   272c0:	b	271b4 <touchAnalyzePressure@@Base+0x1a0>
   272c4:	ldr	r3, [pc, #168]	; 27374 <touchAnalyzePressure@@Base+0x360>
   272c8:	add	r3, pc, r3
   272cc:	str	r8, [r3, #4]
   272d0:	b	271a4 <touchAnalyzePressure@@Base+0x190>
   272d4:	ldr	r3, [pc, #156]	; 27378 <touchAnalyzePressure@@Base+0x364>
   272d8:	add	r3, pc, r3
   272dc:	str	r4, [r3, #8]
   272e0:	b	27240 <touchAnalyzePressure@@Base+0x22c>
   272e4:	ldr	r3, [pc, #144]	; 2737c <touchAnalyzePressure@@Base+0x368>
   272e8:	add	r3, pc, r3
   272ec:	str	r0, [r3, #12]
   272f0:	b	271b4 <touchAnalyzePressure@@Base+0x1a0>
   272f4:	ldr	r3, [pc, #132]	; 27380 <touchAnalyzePressure@@Base+0x36c>
   272f8:	add	r3, pc, r3
   272fc:	str	r4, [r3]
   27300:	b	271d4 <touchAnalyzePressure@@Base+0x1c0>
   27304:	ldr	r3, [pc, #120]	; 27384 <touchAnalyzePressure@@Base+0x370>
   27308:	add	r3, pc, r3
   2730c:	str	r5, [r3, #12]
   27310:	b	271b4 <touchAnalyzePressure@@Base+0x1a0>
   27314:	ldr	r3, [pc, #108]	; 27388 <touchAnalyzePressure@@Base+0x374>
   27318:	add	r3, pc, r3
   2731c:	str	ip, [r3, #8]
   27320:	b	271b4 <touchAnalyzePressure@@Base+0x1a0>
   27324:	ldr	r3, [pc, #96]	; 2738c <touchAnalyzePressure@@Base+0x378>
   27328:	add	r3, pc, r3
   2732c:	str	r2, [r3]
   27330:	b	271d4 <touchAnalyzePressure@@Base+0x1c0>
   27334:	andeq	fp, r4, r4, asr sl
   27338:			; <UNDEFINED> instruction: 0x00029eb4
   2733c:	andeq	r0, r0, r0, ror r4
   27340:	andeq	ip, r4, ip, asr fp
   27344:	andeq	r0, r0, r0, asr #7
   27348:	andeq	ip, r4, r4, asr #21
   2734c:	andeq	ip, r4, r8, lsr #21
   27350:	andeq	r9, r2, r0, lsr #27
   27354:	andeq	ip, r4, ip, lsr sl
   27358:	andeq	ip, r4, r0, lsl sl
   2735c:	strdeq	ip, [r4], -r0
   27360:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   27364:	andeq	ip, r4, r4, lsl #19
   27368:	andeq	ip, r4, ip, ror #18
   2736c:	andeq	ip, r4, r4, lsl r9
   27370:	andeq	ip, r4, r4, lsl #18
   27374:	strdeq	ip, [r4], -r4
   27378:	andeq	ip, r4, r4, ror #17
   2737c:	ldrdeq	ip, [r4], -r4
   27380:	andeq	ip, r4, r4, asr #17
   27384:			; <UNDEFINED> instruction: 0x0004c8b4
   27388:	andeq	ip, r4, r4, lsr #17
   2738c:	muleq	r4, r4, r8

00027390 <touchAnalyzeCells@@Base>:
   27390:	bx	lr
   27394:	mov	r3, #1
   27398:	strh	r3, [r0, #12]
   2739c:	bx	lr
   273a0:	mov	r3, #4
   273a4:	strh	r3, [r0, #12]
   273a8:	bx	lr
   273ac:	ldr	r3, [r1]
   273b0:	ldrsh	r0, [r3, #6]
   273b4:	cmp	r0, #0
   273b8:	addeq	r3, r3, #8
   273bc:	streq	r3, [r1]
   273c0:	movne	r0, #1
   273c4:	bx	lr
   273c8:	ldr	r1, [pc, #164]	; 27474 <touchAnalyzeCells@@Base+0xe4>
   273cc:	mov	r2, r0
   273d0:	ldr	r0, [pc, #160]	; 27478 <touchAnalyzeCells@@Base+0xe8>
   273d4:	add	r1, pc, r1
   273d8:	push	{r4, lr}
   273dc:	sub	sp, sp, #24
   273e0:	ldr	r4, [r1, r0]
   273e4:	ldr	ip, [r2, #16]
   273e8:	ldr	r3, [r2, #4]
   273ec:	ldr	r1, [r4]
   273f0:	cmp	ip, #0
   273f4:	str	r1, [sp, #20]
   273f8:	bne	2740c <touchAnalyzeCells@@Base+0x7c>
   273fc:	ldr	r0, [r3, #12]
   27400:	ldr	r1, [r3, #8]
   27404:	cmp	r0, r1
   27408:	bcc	2745c <touchAnalyzeCells@@Base+0xcc>
   2740c:	ldr	r0, [r3]
   27410:	cmp	r0, #0
   27414:	beq	27444 <touchAnalyzeCells@@Base+0xb4>
   27418:	ldr	r1, [r3, #8]
   2741c:	add	r0, sp, #4
   27420:	ldr	lr, [r2, #8]
   27424:	add	r2, r3, #16
   27428:	str	ip, [sp, #16]
   2742c:	str	r1, [sp, #12]
   27430:	str	lr, [sp, #4]
   27434:	str	r2, [sp, #8]
   27438:	ldr	r3, [r3]
   2743c:	blx	r3
   27440:	mov	r0, #0
   27444:	ldr	r2, [sp, #20]
   27448:	ldr	r3, [r4]
   2744c:	cmp	r2, r3
   27450:	bne	27470 <touchAnalyzeCells@@Base+0xe0>
   27454:	add	sp, sp, #24
   27458:	pop	{r4, pc}
   2745c:	ldrb	r3, [r2, #12]
   27460:	mov	r0, #1
   27464:	bfi	r3, ip, #0, #1
   27468:	strb	r3, [r2, #12]
   2746c:	b	27444 <touchAnalyzeCells@@Base+0xb4>
   27470:	bl	f950 <__stack_chk_fail@plt>
   27474:	andeq	fp, r4, r4, lsr #13
   27478:			; <UNDEFINED> instruction: 0x000003b4
   2747c:	ldr	r2, [r0]
   27480:	ldr	r3, [r1]
   27484:	cmp	r2, r3
   27488:	beq	27494 <touchAnalyzeCells@@Base+0x104>
   2748c:	mov	r0, #0
   27490:	bx	lr
   27494:	ldr	r0, [r0, #4]
   27498:	ldr	r3, [r1, #4]
   2749c:	subs	r3, r0, r3
   274a0:	rsbs	r0, r3, #0
   274a4:	adcs	r0, r0, r3
   274a8:	bx	lr
   274ac:	push	{r4, lr}
   274b0:	mov	r4, r0
   274b4:	ldr	r0, [r0, #4]
   274b8:	cmp	r0, #0
   274bc:	beq	274c4 <touchAnalyzeCells@@Base+0x134>
   274c0:	bl	f4f4 <free@plt>
   274c4:	mov	r0, r4
   274c8:	pop	{r4, lr}
   274cc:	b	f4f4 <free@plt>
   274d0:	b	f4f4 <free@plt>
   274d4:	push	{r4, lr}
   274d8:	mov	r4, r0
   274dc:	ldr	r0, [r0, #8]
   274e0:	cmp	r0, #0
   274e4:	beq	274ec <touchAnalyzeCells@@Base+0x15c>
   274e8:	bl	2ac6c <deallocateQueue@@Base>
   274ec:	ldr	r3, [r4, #4]
   274f0:	ldr	r3, [r3, #4]
   274f4:	cmp	r3, #0
   274f8:	beq	27504 <touchAnalyzeCells@@Base+0x174>
   274fc:	mov	r0, r4
   27500:	blx	r3
   27504:	mov	r0, r4
   27508:	pop	{r4, lr}
   2750c:	b	f4f4 <free@plt>
   27510:	ldr	r3, [pc, #260]	; 2761c <touchAnalyzeCells@@Base+0x28c>
   27514:	ldr	r2, [pc, #260]	; 27620 <touchAnalyzeCells@@Base+0x290>
   27518:	add	r3, pc, r3
   2751c:	push	{r4, r5, r6, r7, lr}
   27520:	sub	sp, sp, #36	; 0x24
   27524:	ldr	r4, [r0, #4]
   27528:	mov	r5, r0
   2752c:	ldr	r6, [r3, r2]
   27530:	ldr	r2, [r4]
   27534:	ldr	r3, [r6]
   27538:	cmp	r2, #0
   2753c:	str	r3, [sp, #28]
   27540:	beq	275c0 <touchAnalyzeCells@@Base+0x230>
   27544:	ldr	ip, [r4, #8]
   27548:	add	r7, r4, #16
   2754c:	ldr	r2, [r4, #12]
   27550:	add	r0, sp, #4
   27554:	ldr	r3, [r5, #16]
   27558:	ldr	r1, [r5, #8]
   2755c:	str	ip, [sp, #12]
   27560:	str	r3, [sp, #20]
   27564:	str	r2, [sp, #16]
   27568:	str	r7, [sp, #8]
   2756c:	ldrb	r3, [sp, #24]
   27570:	ldrb	r2, [r4, #4]
   27574:	str	r1, [sp, #4]
   27578:	bfi	r3, r2, #0, #1
   2757c:	strb	r3, [sp, #24]
   27580:	ldr	r3, [r4]
   27584:	blx	r3
   27588:	ldr	r3, [r5, #16]
   2758c:	cmp	r3, #0
   27590:	mov	r2, r0
   27594:	bne	275c0 <touchAnalyzeCells@@Base+0x230>
   27598:	ldrb	r3, [r4, #4]
   2759c:	ands	r3, r3, #1
   275a0:	bne	275c0 <touchAnalyzeCells@@Base+0x230>
   275a4:	ldrb	r1, [r5, #12]
   275a8:	cmp	r0, #0
   275ac:	bfi	r1, r3, #0, #1
   275b0:	strb	r1, [r5, #12]
   275b4:	bne	275dc <touchAnalyzeCells@@Base+0x24c>
   275b8:	mov	r0, #1
   275bc:	b	275c4 <touchAnalyzeCells@@Base+0x234>
   275c0:	mov	r0, #0
   275c4:	ldr	r2, [sp, #28]
   275c8:	ldr	r3, [r6]
   275cc:	cmp	r2, r3
   275d0:	bne	27618 <touchAnalyzeCells@@Base+0x288>
   275d4:	add	sp, sp, #36	; 0x24
   275d8:	pop	{r4, r5, r6, r7, pc}
   275dc:	ldr	r3, [r4, #12]
   275e0:	add	r1, r0, #16
   275e4:	add	r1, r4, r1
   275e8:	mov	r0, r7
   275ec:	rsb	r2, r2, r3
   275f0:	str	r2, [r4, #12]
   275f4:	bl	f7dc <memmove@plt>
   275f8:	ldr	r3, [r4, #12]
   275fc:	cmp	r3, #0
   27600:	beq	275b8 <touchAnalyzeCells@@Base+0x228>
   27604:	ldrb	r3, [r5, #12]
   27608:	mov	r0, #1
   2760c:	orr	r3, r3, r0
   27610:	strb	r3, [r5, #12]
   27614:	b	275c4 <touchAnalyzeCells@@Base+0x234>
   27618:	bl	f950 <__stack_chk_fail@plt>
   2761c:	andeq	fp, r4, r0, ror #10
   27620:			; <UNDEFINED> instruction: 0x000003b4
   27624:	cmn	r1, #1
   27628:	push	{r4, lr}
   2762c:	mov	r4, r0
   27630:	ldr	r3, [r0, #4]
   27634:	beq	27664 <touchAnalyzeCells@@Base+0x2d4>
   27638:	cmp	r1, #0
   2763c:	ldrbeq	r2, [r3, #4]
   27640:	ldrne	r2, [r3, #12]
   27644:	orreq	r2, r2, #1
   27648:	addne	r1, r2, r1
   2764c:	strbeq	r2, [r3, #4]
   27650:	strne	r1, [r3, #12]
   27654:	ldrb	r3, [r4, #12]
   27658:	orr	r3, r3, #1
   2765c:	strb	r3, [r4, #12]
   27660:	pop	{r4, pc}
   27664:	bl	fca4 <__errno_location@plt>
   27668:	ldr	r3, [r0]
   2766c:	str	r3, [r4, #16]
   27670:	b	27654 <touchAnalyzeCells@@Base+0x2c4>
   27674:	push	{r4, lr}
   27678:	mov	r4, r0
   2767c:	ldm	r0, {r0, r3}
   27680:	ldr	r2, [r3, #12]
   27684:	ldr	ip, [r3, #8]
   27688:	add	r1, r2, #16
   2768c:	ldr	r0, [r0]
   27690:	add	r1, r3, r1
   27694:	rsb	r2, r2, ip
   27698:	bl	f788 <read@plt>
   2769c:	mov	r1, r0
   276a0:	mov	r0, r4
   276a4:	pop	{r4, lr}
   276a8:	b	27624 <touchAnalyzeCells@@Base+0x294>
   276ac:	push	{r4, lr}
   276b0:	mov	r4, r0
   276b4:	ldm	r0, {r0, r3}
   276b8:	ldr	r2, [r3, #12]
   276bc:	ldr	ip, [r3, #8]
   276c0:	add	r1, r2, #16
   276c4:	ldr	r0, [r0]
   276c8:	add	r1, r3, r1
   276cc:	rsb	r2, r2, ip
   276d0:	bl	fbcc <write@plt>
   276d4:	mov	r1, r0
   276d8:	mov	r0, r4
   276dc:	pop	{r4, lr}
   276e0:	b	27624 <touchAnalyzeCells@@Base+0x294>
   276e4:	push	{r3, lr}
   276e8:	bl	1ea5c <compareTimeValues@@Base>
   276ec:	lsr	r0, r0, #31
   276f0:	pop	{r3, pc}
   276f4:	push	{r3, r4, r5, lr}
   276f8:	mov	r4, r0
   276fc:	ldr	r0, [r0, #8]
   27700:	mov	r5, r1
   27704:	bl	2ac84 <getQueueHead@@Base>
   27708:	bl	2abec <getElementItem@@Base>
   2770c:	ldrb	r3, [r0, #12]
   27710:	ands	r2, r3, #1
   27714:	ldreq	r3, [r5]
   27718:	moveq	r0, r2
   2771c:	movne	r0, #1
   27720:	addeq	r1, r3, #8
   27724:	streq	r1, [r5]
   27728:	ldreq	r1, [r4]
   2772c:	streq	r1, [r3]
   27730:	ldrheq	r1, [r4, #12]
   27734:	strheq	r2, [r3, #6]
   27738:	strheq	r1, [r3, #4]
   2773c:	pop	{r3, r4, r5, pc}
   27740:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27744:	mov	r8, r0
   27748:	ldr	lr, [pc, #572]	; 2798c <touchAnalyzeCells@@Base+0x5fc>
   2774c:	add	r0, r3, #16
   27750:	ldr	ip, [pc, #568]	; 27990 <touchAnalyzeCells@@Base+0x600>
   27754:	mov	r5, r3
   27758:	add	lr, pc, lr
   2775c:	sub	sp, sp, #28
   27760:	mov	r6, r1
   27764:	mov	sl, r2
   27768:	ldr	r7, [lr, ip]
   2776c:	mov	r3, lr
   27770:	ldr	fp, [sp, #64]	; 0x40
   27774:	ldr	r9, [sp, #68]	; 0x44
   27778:	ldr	r3, [r7]
   2777c:	str	r3, [sp, #20]
   27780:	bl	fb48 <malloc@plt>
   27784:	subs	r4, r0, #0
   27788:	beq	27974 <touchAnalyzeCells@@Base+0x5e4>
   2778c:	ldm	sl, {r0, r1}
   27790:	cmp	fp, #0
   27794:	mov	r3, #0
   27798:	str	r5, [r4, #8]
   2779c:	str	r3, [r4, #12]
   277a0:	stm	r4, {r0, r1}
   277a4:	beq	277b8 <touchAnalyzeCells@@Base+0x428>
   277a8:	mov	r1, fp
   277ac:	mov	r2, r5
   277b0:	add	r0, r4, #16
   277b4:	bl	fb24 <memcpy@plt>
   277b8:	mov	r0, #20
   277bc:	bl	fb48 <malloc@plt>
   277c0:	subs	r5, r0, #0
   277c4:	beq	27958 <touchAnalyzeCells@@Base+0x5c8>
   277c8:	ldr	fp, [pc, #452]	; 27994 <touchAnalyzeCells@@Base+0x604>
   277cc:	add	fp, pc, fp
   277d0:	ldr	r1, [fp]
   277d4:	cmp	r1, #0
   277d8:	movne	sl, r1
   277dc:	beq	27894 <touchAnalyzeCells@@Base+0x504>
   277e0:	ldr	r1, [pc, #432]	; 27998 <touchAnalyzeCells@@Base+0x608>
   277e4:	mov	r0, sl
   277e8:	add	r2, sp, #12
   277ec:	str	r8, [sp, #12]
   277f0:	add	r1, pc, r1
   277f4:	str	r6, [sp, #16]
   277f8:	bl	2acac <findElement@@Base>
   277fc:	subs	fp, r0, #0
   27800:	movne	r8, fp
   27804:	beq	278c8 <touchAnalyzeCells@@Base+0x538>
   27808:	mov	r0, r8
   2780c:	bl	2abec <getElementItem@@Base>
   27810:	mov	r6, r0
   27814:	ldr	r0, [r0, #8]
   27818:	bl	2ac8c <getQueueSize@@Base>
   2781c:	mov	r1, r5
   27820:	rsbs	sl, r0, #1
   27824:	ldr	r0, [r6, #8]
   27828:	movcc	sl, #0
   2782c:	bl	2ade4 <enqueueItem@@Base>
   27830:	cmp	r0, #0
   27834:	beq	27960 <touchAnalyzeCells@@Base+0x5d0>
   27838:	ldrb	r3, [r5, #12]
   2783c:	cmp	sl, #0
   27840:	mov	r2, #0
   27844:	str	r6, [r5]
   27848:	bfc	r3, #0, #1
   2784c:	str	r4, [r5, #4]
   27850:	str	r9, [r5, #8]
   27854:	strb	r3, [r5, #12]
   27858:	str	r2, [r5, #16]
   2785c:	beq	27878 <touchAnalyzeCells@@Base+0x4e8>
   27860:	ldr	r3, [r6, #4]
   27864:	ldr	r3, [r3, #8]
   27868:	cmp	r3, r2
   2786c:	beq	27878 <touchAnalyzeCells@@Base+0x4e8>
   27870:	mov	r0, r5
   27874:	blx	r3
   27878:	mov	r0, #1
   2787c:	ldr	r2, [sp, #20]
   27880:	ldr	r3, [r7]
   27884:	cmp	r2, r3
   27888:	bne	27988 <touchAnalyzeCells@@Base+0x5f8>
   2788c:	add	sp, sp, #28
   27890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27894:	ldr	r0, [pc, #256]	; 2799c <touchAnalyzeCells@@Base+0x60c>
   27898:	add	r0, pc, r0
   2789c:	bl	2abf4 <newQueue@@Base>
   278a0:	cmp	r0, #0
   278a4:	mov	sl, r0
   278a8:	str	r0, [fp]
   278ac:	bne	277e0 <touchAnalyzeCells@@Base+0x450>
   278b0:	mov	r0, r5
   278b4:	bl	f4f4 <free@plt>
   278b8:	mov	r0, r4
   278bc:	bl	f4f4 <free@plt>
   278c0:	mov	r0, #0
   278c4:	b	2787c <touchAnalyzeCells@@Base+0x4ec>
   278c8:	mov	r0, #16
   278cc:	bl	fb48 <malloc@plt>
   278d0:	subs	r3, r0, #0
   278d4:	beq	27980 <touchAnalyzeCells@@Base+0x5f0>
   278d8:	ldr	r0, [pc, #192]	; 279a0 <touchAnalyzeCells@@Base+0x610>
   278dc:	mov	r1, fp
   278e0:	str	r8, [r3]
   278e4:	str	r6, [r3, #4]
   278e8:	add	r0, pc, r0
   278ec:	str	r3, [sp, #4]
   278f0:	bl	2abf4 <newQueue@@Base>
   278f4:	ldr	r3, [sp, #4]
   278f8:	cmp	r0, #0
   278fc:	str	r0, [r3, #8]
   27900:	beq	2794c <touchAnalyzeCells@@Base+0x5bc>
   27904:	ldr	r2, [r6]
   27908:	cmp	r2, #0
   2790c:	beq	27920 <touchAnalyzeCells@@Base+0x590>
   27910:	mov	r0, r3
   27914:	str	r3, [sp, #4]
   27918:	blx	r2
   2791c:	ldr	r3, [sp, #4]
   27920:	mov	r1, r3
   27924:	mov	r0, sl
   27928:	str	r3, [sp, #4]
   2792c:	bl	2ade4 <enqueueItem@@Base>
   27930:	ldr	r3, [sp, #4]
   27934:	cmp	r0, #0
   27938:	movne	r8, r0
   2793c:	bne	27808 <touchAnalyzeCells@@Base+0x478>
   27940:	ldr	r0, [r3, #8]
   27944:	bl	2ac6c <deallocateQueue@@Base>
   27948:	ldr	r3, [sp, #4]
   2794c:	mov	r0, r3
   27950:	bl	f4f4 <free@plt>
   27954:	b	278b0 <touchAnalyzeCells@@Base+0x520>
   27958:	bl	1c740 <logMallocError@@Base>
   2795c:	b	278b8 <touchAnalyzeCells@@Base+0x528>
   27960:	cmp	sl, #0
   27964:	beq	278b0 <touchAnalyzeCells@@Base+0x520>
   27968:	mov	r0, r8
   2796c:	bl	2ab08 <deleteElement@@Base>
   27970:	b	278b0 <touchAnalyzeCells@@Base+0x520>
   27974:	bl	1c740 <logMallocError@@Base>
   27978:	mov	r0, r4
   2797c:	b	2787c <touchAnalyzeCells@@Base+0x4ec>
   27980:	bl	1c740 <logMallocError@@Base>
   27984:	b	278b0 <touchAnalyzeCells@@Base+0x520>
   27988:	bl	f950 <__stack_chk_fail@plt>
   2798c:	andeq	fp, r4, r0, lsr #6
   27990:			; <UNDEFINED> instruction: 0x000003b4
   27994:	andeq	ip, r4, r0, lsl #8
   27998:			; <UNDEFINED> instruction: 0xfffffc84
   2799c:			; <UNDEFINED> instruction: 0xfffffc34
   279a0:			; <UNDEFINED> instruction: 0xfffffbbc

000279a4 <asyncRead@@Base>:
   279a4:	push	{r4, r5, r6, lr}
   279a8:	sub	sp, sp, #24
   279ac:	ldr	lr, [pc, #96]	; 27a14 <asyncRead@@Base+0x70>
   279b0:	mov	r6, r1
   279b4:	ldr	r4, [pc, #92]	; 27a18 <asyncRead@@Base+0x74>
   279b8:	mov	r5, #0
   279bc:	add	lr, pc, lr
   279c0:	ldr	r1, [pc, #84]	; 27a1c <asyncRead@@Base+0x78>
   279c4:	ldrb	ip, [sp, #16]
   279c8:	ldr	r4, [lr, r4]
   279cc:	add	r1, pc, r1
   279d0:	str	r3, [sp, #4]
   279d4:	mov	r3, r6
   279d8:	str	r2, [sp, #12]
   279dc:	add	r2, sp, #12
   279e0:	ldr	lr, [r4]
   279e4:	bfc	ip, #0, #1
   279e8:	str	r5, [sp]
   279ec:	strb	ip, [sp, #16]
   279f0:	str	lr, [sp, #20]
   279f4:	bl	27740 <touchAnalyzeCells@@Base+0x3b0>
   279f8:	ldr	r2, [sp, #20]
   279fc:	ldr	r3, [r4]
   27a00:	cmp	r2, r3
   27a04:	bne	27a10 <asyncRead@@Base+0x6c>
   27a08:	add	sp, sp, #24
   27a0c:	pop	{r4, r5, r6, pc}
   27a10:	bl	f950 <__stack_chk_fail@plt>
   27a14:	strheq	fp, [r4], -ip
   27a18:			; <UNDEFINED> instruction: 0x000003b4
   27a1c:	andeq	r8, r4, r8, lsl r0

00027a20 <asyncWrite@@Base>:
   27a20:	ldr	ip, [pc, #96]	; 27a88 <asyncWrite@@Base+0x68>
   27a24:	push	{r4, r5, r6, lr}
   27a28:	add	ip, pc, ip
   27a2c:	ldr	r4, [pc, #88]	; 27a8c <asyncWrite@@Base+0x6c>
   27a30:	sub	sp, sp, #24
   27a34:	ldr	r6, [pc, #84]	; 27a90 <asyncWrite@@Base+0x70>
   27a38:	mov	r5, r2
   27a3c:	ldr	lr, [sp, #40]	; 0x28
   27a40:	add	r2, sp, #24
   27a44:	ldr	r4, [ip, r4]
   27a48:	add	r6, pc, r6
   27a4c:	str	r1, [sp]
   27a50:	add	r1, r6, #20
   27a54:	str	r3, [r2, #-12]!
   27a58:	mov	r3, r5
   27a5c:	ldr	ip, [r4]
   27a60:	str	lr, [sp, #4]
   27a64:	str	ip, [sp, #20]
   27a68:	bl	27740 <touchAnalyzeCells@@Base+0x3b0>
   27a6c:	ldr	r2, [sp, #20]
   27a70:	ldr	r3, [r4]
   27a74:	cmp	r2, r3
   27a78:	bne	27a84 <asyncWrite@@Base+0x64>
   27a7c:	add	sp, sp, #24
   27a80:	pop	{r4, r5, r6, pc}
   27a84:	bl	f950 <__stack_chk_fail@plt>
   27a88:	andeq	fp, r4, r0, asr r0
   27a8c:			; <UNDEFINED> instruction: 0x000003b4
   27a90:	muleq	r4, ip, pc	; <UNPREDICTABLE>

00027a94 <asyncAbsoluteAlarm@@Base>:
   27a94:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   27a98:	mov	r5, r0
   27a9c:	ldr	r7, [pc, #152]	; 27b3c <asyncAbsoluteAlarm@@Base+0xa8>
   27aa0:	mov	r8, r1
   27aa4:	mov	r9, r2
   27aa8:	add	r7, pc, r7
   27aac:	ldr	r4, [r7, #4]
   27ab0:	cmp	r4, #0
   27ab4:	movne	r6, r4
   27ab8:	beq	27af8 <asyncAbsoluteAlarm@@Base+0x64>
   27abc:	mov	r0, #16
   27ac0:	bl	fb48 <malloc@plt>
   27ac4:	subs	r4, r0, #0
   27ac8:	beq	27b20 <asyncAbsoluteAlarm@@Base+0x8c>
   27acc:	ldm	r5, {r0, r1}
   27ad0:	str	r8, [r4, #8]
   27ad4:	str	r9, [r4, #12]
   27ad8:	stm	r4, {r0, r1}
   27adc:	mov	r0, r6
   27ae0:	mov	r1, r4
   27ae4:	bl	2ade4 <enqueueItem@@Base>
   27ae8:	subs	r6, r0, #0
   27aec:	beq	27b2c <asyncAbsoluteAlarm@@Base+0x98>
   27af0:	mov	r0, #1
   27af4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   27af8:	ldr	r0, [pc, #64]	; 27b40 <asyncAbsoluteAlarm@@Base+0xac>
   27afc:	ldr	r1, [pc, #64]	; 27b44 <asyncAbsoluteAlarm@@Base+0xb0>
   27b00:	add	r0, pc, r0
   27b04:	add	r1, pc, r1
   27b08:	bl	2abf4 <newQueue@@Base>
   27b0c:	cmp	r0, #0
   27b10:	mov	r6, r0
   27b14:	str	r0, [r7, #4]
   27b18:	bne	27abc <asyncAbsoluteAlarm@@Base+0x28>
   27b1c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   27b20:	bl	1c740 <logMallocError@@Base>
   27b24:	mov	r0, r4
   27b28:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   27b2c:	mov	r0, r4
   27b30:	bl	f4f4 <free@plt>
   27b34:	mov	r0, r6
   27b38:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   27b3c:	andeq	ip, r4, r4, lsr #2
   27b40:			; <UNDEFINED> instruction: 0xfffff9c8
   27b44:			; <UNDEFINED> instruction: 0xfffffbd8

00027b48 <asyncRelativeAlarm@@Base>:
   27b48:	ldr	r3, [pc, #104]	; 27bb8 <asyncRelativeAlarm@@Base+0x70>
   27b4c:	ldr	ip, [pc, #104]	; 27bbc <asyncRelativeAlarm@@Base+0x74>
   27b50:	add	r3, pc, r3
   27b54:	push	{r4, r5, r6, r7, r8, lr}
   27b58:	sub	sp, sp, #16
   27b5c:	ldr	r5, [r3, ip]
   27b60:	add	r4, sp, #4
   27b64:	mov	r7, r0
   27b68:	mov	r6, r1
   27b6c:	mov	r0, r4
   27b70:	mov	r8, r2
   27b74:	ldr	r3, [r5]
   27b78:	str	r3, [sp, #12]
   27b7c:	bl	1e6fc <getCurrentTime@@Base>
   27b80:	mov	r0, r4
   27b84:	mov	r1, r7
   27b88:	bl	1e9b0 <adjustTimeValue@@Base>
   27b8c:	mov	r2, r8
   27b90:	mov	r0, r4
   27b94:	mov	r1, r6
   27b98:	bl	27a94 <asyncAbsoluteAlarm@@Base>
   27b9c:	ldr	r2, [sp, #12]
   27ba0:	ldr	r3, [r5]
   27ba4:	cmp	r2, r3
   27ba8:	bne	27bb4 <asyncRelativeAlarm@@Base+0x6c>
   27bac:	add	sp, sp, #16
   27bb0:	pop	{r4, r5, r6, r7, r8, pc}
   27bb4:	bl	f950 <__stack_chk_fail@plt>
   27bb8:	andeq	sl, r4, r8, lsr #30
   27bbc:			; <UNDEFINED> instruction: 0x000003b4

00027bc0 <asyncWait@@Base>:
   27bc0:	ldr	r2, [pc, #728]	; 27ea0 <asyncWait@@Base+0x2e0>
   27bc4:	mov	r3, #0
   27bc8:	ldr	ip, [pc, #724]	; 27ea4 <asyncWait@@Base+0x2e4>
   27bcc:	mov	r1, r0
   27bd0:	add	r2, pc, r2
   27bd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27bd8:	sub	sp, sp, #68	; 0x44
   27bdc:	ldr	ip, [r2, ip]
   27be0:	add	r7, sp, #48	; 0x30
   27be4:	str	r3, [sp, #36]	; 0x24
   27be8:	mov	sl, r0
   27bec:	ldr	r3, [pc, #692]	; 27ea8 <asyncWait@@Base+0x2e8>
   27bf0:	mov	r0, r7
   27bf4:	ldr	r2, [pc, #688]	; 27eac <asyncWait@@Base+0x2ec>
   27bf8:	add	r8, sp, #36	; 0x24
   27bfc:	add	r3, pc, r3
   27c00:	str	r3, [sp, #12]
   27c04:	ldr	r3, [ip]
   27c08:	add	r2, pc, r2
   27c0c:	ldr	r9, [pc, #668]	; 27eb0 <asyncWait@@Base+0x2f0>
   27c10:	str	r2, [sp, #24]
   27c14:	ldr	r2, [pc, #664]	; 27eb4 <asyncWait@@Base+0x2f4>
   27c18:	add	r9, pc, r9
   27c1c:	str	r3, [sp, #60]	; 0x3c
   27c20:	add	r2, pc, r2
   27c24:	str	ip, [sp, #20]
   27c28:	str	r2, [sp, #28]
   27c2c:	bl	1ebf0 <startTimePeriod@@Base>
   27c30:	ldr	r3, [pc, #640]	; 27eb8 <asyncWait@@Base+0x2f8>
   27c34:	add	r3, pc, r3
   27c38:	str	r3, [sp, #16]
   27c3c:	ldr	r0, [r9, #4]
   27c40:	cmp	r0, #0
   27c44:	beq	27cec <asyncWait@@Base+0x12c>
   27c48:	bl	2ac84 <getQueueHead@@Base>
   27c4c:	subs	r6, r0, #0
   27c50:	beq	27cec <asyncWait@@Base+0x12c>
   27c54:	bl	2abec <getElementItem@@Base>
   27c58:	add	r5, sp, #40	; 0x28
   27c5c:	mov	r4, r0
   27c60:	mov	r0, r5
   27c64:	bl	1e6fc <getCurrentTime@@Base>
   27c68:	mov	r0, r5
   27c6c:	mov	r1, r4
   27c70:	bl	1ea9c <millisecondsBetween@@Base>
   27c74:	ldr	r3, [sp, #36]	; 0x24
   27c78:	cmp	r0, sl
   27c7c:	movlt	r5, r0
   27c80:	movge	r5, sl
   27c84:	cmp	r0, r3
   27c88:	ble	27e18 <asyncWait@@Base+0x258>
   27c8c:	ldr	r3, [sp, #12]
   27c90:	ldr	fp, [r3]
   27c94:	cmp	fp, #0
   27c98:	beq	27cac <asyncWait@@Base+0xec>
   27c9c:	mov	r0, fp
   27ca0:	bl	2ac8c <getQueueSize@@Base>
   27ca4:	cmp	r0, #0
   27ca8:	bne	27cf4 <asyncWait@@Base+0x134>
   27cac:	mov	r1, #0
   27cb0:	mov	r4, r1
   27cb4:	ldr	r2, [sp, #36]	; 0x24
   27cb8:	mov	r0, r4
   27cbc:	rsb	r2, r2, r5
   27cc0:	bl	f7c4 <poll@plt>
   27cc4:	cmp	r0, #0
   27cc8:	ble	27e70 <asyncWait@@Base+0x2b0>
   27ccc:	add	r2, sp, #64	; 0x40
   27cd0:	mov	r0, fp
   27cd4:	ldr	r1, [sp, #24]
   27cd8:	str	r4, [r2, #-24]!	; 0xffffffe8
   27cdc:	bl	2aed0 <processQueue@@Base>
   27ce0:	subs	r6, r0, #0
   27ce4:	beq	27dd8 <asyncWait@@Base+0x218>
   27ce8:	b	27d34 <asyncWait@@Base+0x174>
   27cec:	mov	r5, sl
   27cf0:	b	27c8c <asyncWait@@Base+0xcc>
   27cf4:	lsl	r0, r0, #3
   27cf8:	bl	fb48 <malloc@plt>
   27cfc:	subs	r4, r0, #0
   27d00:	beq	27e94 <asyncWait@@Base+0x2d4>
   27d04:	add	r2, sp, #64	; 0x40
   27d08:	ldr	r1, [sp, #16]
   27d0c:	mov	r0, fp
   27d10:	str	r4, [r2, #-24]!	; 0xffffffe8
   27d14:	bl	2aed0 <processQueue@@Base>
   27d18:	ldr	r1, [sp, #40]	; 0x28
   27d1c:	rsb	r1, r4, r1
   27d20:	asrs	r1, r1, #3
   27d24:	mov	r6, r0
   27d28:	beq	27e58 <asyncWait@@Base+0x298>
   27d2c:	cmp	r6, #0
   27d30:	beq	27cb4 <asyncWait@@Base+0xf4>
   27d34:	mov	r0, r6
   27d38:	bl	2abec <getElementItem@@Base>
   27d3c:	mov	r5, r0
   27d40:	ldr	r0, [r0, #8]
   27d44:	bl	2ac84 <getQueueHead@@Base>
   27d48:	str	r0, [sp, #8]
   27d4c:	bl	2abec <getElementItem@@Base>
   27d50:	ldrb	r2, [r0, #12]
   27d54:	mov	fp, r0
   27d58:	tst	r2, #1
   27d5c:	bne	27d78 <asyncWait@@Base+0x1b8>
   27d60:	ldr	r2, [r0]
   27d64:	ldr	r2, [r2, #4]
   27d68:	ldr	r2, [r2, #12]
   27d6c:	cmp	r2, #0
   27d70:	beq	27d78 <asyncWait@@Base+0x1b8>
   27d74:	blx	r2
   27d78:	ldr	r2, [r5, #4]
   27d7c:	mov	r0, fp
   27d80:	ldr	r2, [r2, #16]
   27d84:	blx	r2
   27d88:	cmp	r0, #0
   27d8c:	beq	27e34 <asyncWait@@Base+0x274>
   27d90:	mov	r1, #0
   27d94:	str	r1, [fp, #16]
   27d98:	ldr	r0, [r5, #8]
   27d9c:	bl	2ac84 <getQueueHead@@Base>
   27da0:	cmp	r0, #0
   27da4:	beq	27e4c <asyncWait@@Base+0x28c>
   27da8:	bl	2abec <getElementItem@@Base>
   27dac:	ldrb	r2, [r0, #12]
   27db0:	tst	r2, #1
   27db4:	bne	27dd0 <asyncWait@@Base+0x210>
   27db8:	ldr	r3, [r0]
   27dbc:	ldr	r3, [r3, #4]
   27dc0:	ldr	r3, [r3, #8]
   27dc4:	cmp	r3, #0
   27dc8:	beq	27dd0 <asyncWait@@Base+0x210>
   27dcc:	blx	r3
   27dd0:	mov	r0, r6
   27dd4:	bl	2ae6c <requeueElement@@Base>
   27dd8:	cmp	r4, #0
   27ddc:	beq	27de8 <asyncWait@@Base+0x228>
   27de0:	mov	r0, r4
   27de4:	bl	f4f4 <free@plt>
   27de8:	mov	r0, r7
   27dec:	mov	r1, r8
   27df0:	bl	1ebf8 <afterTimePeriod@@Base>
   27df4:	cmp	r0, #0
   27df8:	beq	27c3c <asyncWait@@Base+0x7c>
   27dfc:	ldr	r1, [sp, #20]
   27e00:	ldr	r2, [sp, #60]	; 0x3c
   27e04:	ldr	r3, [r1]
   27e08:	cmp	r2, r3
   27e0c:	bne	27e9c <asyncWait@@Base+0x2dc>
   27e10:	add	sp, sp, #68	; 0x44
   27e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e18:	ldr	r5, [r4, #12]
   27e1c:	mov	r0, r6
   27e20:	ldr	r4, [r4, #8]
   27e24:	bl	2ab08 <deleteElement@@Base>
   27e28:	mov	r0, r5
   27e2c:	blx	r4
   27e30:	b	27de8 <asyncWait@@Base+0x228>
   27e34:	ldr	r0, [sp, #8]
   27e38:	bl	2ab08 <deleteElement@@Base>
   27e3c:	ldr	r0, [r5, #8]
   27e40:	bl	2ac84 <getQueueHead@@Base>
   27e44:	cmp	r0, #0
   27e48:	bne	27da8 <asyncWait@@Base+0x1e8>
   27e4c:	mov	r0, r6
   27e50:	bl	2ab08 <deleteElement@@Base>
   27e54:	b	27dd8 <asyncWait@@Base+0x218>
   27e58:	mov	r0, r4
   27e5c:	str	r1, [sp, #4]
   27e60:	mov	r4, r1
   27e64:	bl	f4f4 <free@plt>
   27e68:	ldr	r1, [sp, #4]
   27e6c:	b	27d2c <asyncWait@@Base+0x16c>
   27e70:	cmn	r0, #1
   27e74:	bne	27dd8 <asyncWait@@Base+0x218>
   27e78:	bl	fca4 <__errno_location@plt>
   27e7c:	ldr	r3, [r0]
   27e80:	cmp	r3, #4
   27e84:	beq	27dd8 <asyncWait@@Base+0x218>
   27e88:	ldr	r0, [sp, #28]
   27e8c:	bl	1c6fc <logSystemError@@Base>
   27e90:	b	27dd8 <asyncWait@@Base+0x218>
   27e94:	bl	1c740 <logMallocError@@Base>
   27e98:	b	27cac <asyncWait@@Base+0xec>
   27e9c:	bl	f950 <__stack_chk_fail@plt>
   27ea0:	andeq	sl, r4, r8, lsr #29
   27ea4:			; <UNDEFINED> instruction: 0x000003b4
   27ea8:	ldrdeq	fp, [r4], -r0
   27eac:			; <UNDEFINED> instruction: 0xfffff79c
   27eb0:			; <UNDEFINED> instruction: 0x0004bfb4
   27eb4:	andeq	r7, r2, r0, lsl #10
   27eb8:			; <UNDEFINED> instruction: 0xfffffab8

00027ebc <getTextLength@@Base>:
   27ebc:	mov	r1, r0
   27ec0:	mov	r0, #0
   27ec4:	mov	r2, r0
   27ec8:	b	f560 <mbstowcs@plt>

00027ecc <convertWcharToUtf8@@Base>:
   27ecc:	ldr	r2, [pc, #196]	; 27f98 <convertWcharToUtf8@@Base+0xcc>
   27ed0:	mov	r3, r0
   27ed4:	ldr	r0, [pc, #192]	; 27f9c <convertWcharToUtf8@@Base+0xd0>
   27ed8:	bics	ip, r3, #127	; 0x7f
   27edc:	add	r2, pc, r2
   27ee0:	push	{r4, r5, r6, r7, r8, lr}
   27ee4:	sub	sp, sp, #16
   27ee8:	ldr	r7, [r2, r0]
   27eec:	mov	r8, r1
   27ef0:	moveq	r6, #1
   27ef4:	ldr	r2, [r7]
   27ef8:	strbeq	r3, [r1]
   27efc:	str	r2, [sp, #12]
   27f00:	beq	27f70 <convertWcharToUtf8@@Base+0xa4>
   27f04:	add	lr, sp, #11
   27f08:	and	r4, r3, #63	; 0x3f
   27f0c:	lsrs	r3, r3, #6
   27f10:	mov	ip, lr
   27f14:	orr	r5, r4, #128	; 0x80
   27f18:	sub	lr, lr, #1
   27f1c:	strb	r5, [ip]
   27f20:	bne	27f08 <convertWcharToUtf8@@Base+0x3c>
   27f24:	add	r6, sp, #12
   27f28:	mov	r1, #1
   27f2c:	rsb	r6, ip, r6
   27f30:	mov	r0, ip
   27f34:	rsb	r2, r6, #7
   27f38:	cmp	r4, r1, lsl r2
   27f3c:	strbge	r3, [r0, #-1]
   27f40:	addge	r6, r6, #1
   27f44:	uxtblt	r2, r5
   27f48:	movge	r2, r3
   27f4c:	movge	ip, lr
   27f50:	rsb	r5, r6, #8
   27f54:	mvn	r3, #0
   27f58:	orr	r5, r2, r3, lsl r5
   27f5c:	mov	r1, ip
   27f60:	strb	r5, [ip]
   27f64:	mov	r0, r8
   27f68:	mov	r2, r6
   27f6c:	bl	fb24 <memcpy@plt>
   27f70:	mov	r3, #0
   27f74:	ldr	r2, [sp, #12]
   27f78:	strb	r3, [r8, r6]
   27f7c:	mov	r0, r6
   27f80:	ldr	r3, [r7]
   27f84:	cmp	r2, r3
   27f88:	bne	27f94 <convertWcharToUtf8@@Base+0xc8>
   27f8c:	add	sp, sp, #16
   27f90:	pop	{r4, r5, r6, r7, r8, pc}
   27f94:	bl	f950 <__stack_chk_fail@plt>
   27f98:	muleq	r4, ip, fp
   27f9c:			; <UNDEFINED> instruction: 0x000003b4

00027fa0 <convertUtf8ToWchar@@Base>:
   27fa0:	ldr	ip, [r1]
   27fa4:	mov	r2, r0
   27fa8:	push	{r4, r5}
   27fac:	mvn	r0, #0
   27fb0:	mov	r4, #0
   27fb4:	mov	r5, #1
   27fb8:	cmp	ip, #0
   27fbc:	beq	28058 <convertUtf8ToWchar@@Base+0xb8>
   27fc0:	ldr	r3, [r2]
   27fc4:	add	ip, r3, #1
   27fc8:	str	ip, [r2]
   27fcc:	ldrb	r3, [r3]
   27fd0:	ldr	ip, [r1]
   27fd4:	tst	r3, #128	; 0x80
   27fd8:	sub	ip, ip, #1
   27fdc:	str	ip, [r1]
   27fe0:	beq	280b8 <convertUtf8ToWchar@@Base+0x118>
   27fe4:	tst	r3, #64	; 0x40
   27fe8:	bne	28060 <convertUtf8ToWchar@@Base+0xc0>
   27fec:	cmn	r0, #1
   27ff0:	beq	28004 <convertUtf8ToWchar@@Base+0x64>
   27ff4:	subs	r4, r4, #1
   27ff8:	and	r3, r3, #63	; 0x3f
   27ffc:	orr	r0, r3, r0, lsl #6
   28000:	bne	27fb8 <convertUtf8ToWchar@@Base+0x18>
   28004:	cmp	ip, #0
   28008:	beq	28058 <convertUtf8ToWchar@@Base+0xb8>
   2800c:	ldr	r3, [r2]
   28010:	ldrb	ip, [r3]
   28014:	and	ip, ip, #192	; 0xc0
   28018:	cmp	ip, #128	; 0x80
   2801c:	beq	28038 <convertUtf8ToWchar@@Base+0x98>
   28020:	b	28058 <convertUtf8ToWchar@@Base+0xb8>
   28024:	ldr	r3, [r2]
   28028:	ldrb	r0, [r3]
   2802c:	and	r0, r0, #192	; 0xc0
   28030:	cmp	r0, #128	; 0x80
   28034:	bne	28054 <convertUtf8ToWchar@@Base+0xb4>
   28038:	add	r3, r3, #1
   2803c:	str	r3, [r2]
   28040:	ldr	r3, [r1]
   28044:	sub	r3, r3, #1
   28048:	str	r3, [r1]
   2804c:	cmp	r3, #0
   28050:	bne	28024 <convertUtf8ToWchar@@Base+0x84>
   28054:	mvn	r0, #0
   28058:	pop	{r4, r5}
   2805c:	bx	lr
   28060:	tst	r3, #32
   28064:	beq	280a0 <convertUtf8ToWchar@@Base+0x100>
   28068:	tst	r3, #16
   2806c:	beq	280a8 <convertUtf8ToWchar@@Base+0x108>
   28070:	tst	r3, #8
   28074:	beq	280b0 <convertUtf8ToWchar@@Base+0x110>
   28078:	tst	r3, #4
   2807c:	moveq	r4, #4
   28080:	bne	280e4 <convertUtf8ToWchar@@Base+0x144>
   28084:	cmn	r0, #1
   28088:	bne	280c0 <convertUtf8ToWchar@@Base+0x120>
   2808c:	rsb	r0, r4, #6
   28090:	lsl	r0, r5, r0
   28094:	sub	r0, r0, #1
   28098:	and	r0, r0, r3
   2809c:	b	27fb8 <convertUtf8ToWchar@@Base+0x18>
   280a0:	mov	r4, #1
   280a4:	b	28084 <convertUtf8ToWchar@@Base+0xe4>
   280a8:	mov	r4, #2
   280ac:	b	28084 <convertUtf8ToWchar@@Base+0xe4>
   280b0:	mov	r4, #3
   280b4:	b	28084 <convertUtf8ToWchar@@Base+0xe4>
   280b8:	cmn	r0, #1
   280bc:	beq	280f4 <convertUtf8ToWchar@@Base+0x154>
   280c0:	ldr	r3, [r2]
   280c4:	mvn	r0, #0
   280c8:	add	r3, r3, r0
   280cc:	str	r3, [r2]
   280d0:	ldr	r3, [r1]
   280d4:	pop	{r4, r5}
   280d8:	add	r3, r3, #1
   280dc:	str	r3, [r1]
   280e0:	bx	lr
   280e4:	tst	r3, #2
   280e8:	bne	280fc <convertUtf8ToWchar@@Base+0x15c>
   280ec:	mov	r4, #5
   280f0:	b	28084 <convertUtf8ToWchar@@Base+0xe4>
   280f4:	mov	r0, r3
   280f8:	b	28004 <convertUtf8ToWchar@@Base+0x64>
   280fc:	cmn	r0, #1
   28100:	beq	28004 <convertUtf8ToWchar@@Base+0x64>
   28104:	b	280c0 <convertUtf8ToWchar@@Base+0x120>

00028108 <getUtf8Length@@Base>:
   28108:	ldr	r3, [pc, #136]	; 28198 <getUtf8Length@@Base+0x90>
   2810c:	ldr	r2, [pc, #136]	; 2819c <getUtf8Length@@Base+0x94>
   28110:	push	{r4, r5, r6, r7, r8, lr}
   28114:	add	r3, pc, r3
   28118:	sub	sp, sp, #16
   2811c:	str	r0, [sp, #4]
   28120:	ldr	r8, [r3, r2]
   28124:	ldrb	r4, [r0]
   28128:	ldr	r3, [r8]
   2812c:	cmp	r4, #0
   28130:	str	r3, [sp, #12]
   28134:	beq	28178 <getUtf8Length@@Base+0x70>
   28138:	add	r7, sp, #4
   2813c:	add	r6, sp, #8
   28140:	mov	r4, #0
   28144:	mov	r5, #7
   28148:	b	28160 <getUtf8Length@@Base+0x58>
   2814c:	ldr	r3, [sp, #4]
   28150:	add	r4, r4, #1
   28154:	ldrb	r3, [r3]
   28158:	cmp	r3, #0
   2815c:	beq	28178 <getUtf8Length@@Base+0x70>
   28160:	mov	r0, r7
   28164:	mov	r1, r6
   28168:	str	r5, [sp, #8]
   2816c:	bl	27fa0 <convertUtf8ToWchar@@Base>
   28170:	cmn	r0, #1
   28174:	bne	2814c <getUtf8Length@@Base+0x44>
   28178:	ldr	r2, [sp, #12]
   2817c:	mov	r0, r4
   28180:	ldr	r3, [r8]
   28184:	cmp	r2, r3
   28188:	bne	28194 <getUtf8Length@@Base+0x8c>
   2818c:	add	sp, sp, #16
   28190:	pop	{r4, r5, r6, r7, r8, pc}
   28194:	bl	f950 <__stack_chk_fail@plt>
   28198:	andeq	sl, r4, r4, ror #18
   2819c:			; <UNDEFINED> instruction: 0x000003b4

000281a0 <convertUtf8ToWchars@@Base>:
   281a0:	ldr	r3, [pc, #188]	; 28264 <convertUtf8ToWchars@@Base+0xc4>
   281a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   281a8:	mov	r5, r0
   281ac:	ldr	r0, [pc, #180]	; 28268 <convertUtf8ToWchars@@Base+0xc8>
   281b0:	add	r3, pc, r3
   281b4:	mov	r6, r1
   281b8:	ldr	r1, [r5]
   281bc:	mov	r4, r2
   281c0:	sub	sp, sp, #12
   281c4:	ldr	r9, [r3, r0]
   281c8:	ldrb	r2, [r1]
   281cc:	ldr	r3, [r9]
   281d0:	cmp	r2, #0
   281d4:	str	r3, [sp, #4]
   281d8:	beq	28254 <convertUtf8ToWchars@@Base+0xb4>
   281dc:	cmp	r4, #1
   281e0:	movhi	r7, #7
   281e4:	bhi	28218 <convertUtf8ToWchars@@Base+0x78>
   281e8:	b	28254 <convertUtf8ToWchars@@Base+0xb4>
   281ec:	ldr	r3, [r6]
   281f0:	sub	r4, r4, #1
   281f4:	add	r2, r3, #4
   281f8:	str	r2, [r6]
   281fc:	str	r0, [r3]
   28200:	ldr	r3, [r5]
   28204:	ldrb	r3, [r3]
   28208:	cmp	r3, #0
   2820c:	beq	28254 <convertUtf8ToWchars@@Base+0xb4>
   28210:	cmp	r4, #1
   28214:	beq	28230 <convertUtf8ToWchars@@Base+0x90>
   28218:	mov	r0, r5
   2821c:	mov	r1, sp
   28220:	str	r7, [sp]
   28224:	bl	27fa0 <convertUtf8ToWchar@@Base>
   28228:	cmn	r0, #1
   2822c:	bne	281ec <convertUtf8ToWchars@@Base+0x4c>
   28230:	ldr	r3, [r6]
   28234:	mov	r2, #0
   28238:	str	r2, [r3]
   2823c:	ldr	r2, [sp, #4]
   28240:	ldr	r3, [r9]
   28244:	cmp	r2, r3
   28248:	bne	28260 <convertUtf8ToWchars@@Base+0xc0>
   2824c:	add	sp, sp, #12
   28250:	pop	{r4, r5, r6, r7, r8, r9, pc}
   28254:	cmp	r4, #0
   28258:	beq	2823c <convertUtf8ToWchars@@Base+0x9c>
   2825c:	b	28230 <convertUtf8ToWchars@@Base+0x90>
   28260:	bl	f950 <__stack_chk_fail@plt>
   28264:	andeq	sl, r4, r8, asr #17
   28268:			; <UNDEFINED> instruction: 0x000003b4

0002826c <makeUtf8FromWchars@@Base>:
   2826c:	ldr	r3, [pc, #232]	; 2835c <makeUtf8FromWchars@@Base+0xf0>
   28270:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28274:	mov	r6, r1
   28278:	ldr	r1, [pc, #224]	; 28360 <makeUtf8FromWchars@@Base+0xf4>
   2827c:	add	r3, pc, r3
   28280:	sub	sp, sp, #28
   28284:	rsb	ip, r6, r6, lsl #3
   28288:	mov	r5, r0
   2828c:	add	r0, ip, #1
   28290:	ldr	r1, [r3, r1]
   28294:	mov	fp, r2
   28298:	ldr	r3, [r1]
   2829c:	str	r1, [sp, #4]
   282a0:	str	r3, [sp, #20]
   282a4:	bl	fb48 <malloc@plt>
   282a8:	subs	r9, r0, #0
   282ac:	beq	28350 <makeUtf8FromWchars@@Base+0xe4>
   282b0:	cmp	r6, #0
   282b4:	beq	28348 <makeUtf8FromWchars@@Base+0xdc>
   282b8:	sub	r5, r5, #4
   282bc:	add	r7, sp, #12
   282c0:	mov	sl, r9
   282c4:	mov	r4, #0
   282c8:	mov	r8, #32
   282cc:	b	282dc <makeUtf8FromWchars@@Base+0x70>
   282d0:	add	r4, r4, #1
   282d4:	cmp	r4, r6
   282d8:	beq	28314 <makeUtf8FromWchars@@Base+0xa8>
   282dc:	ldr	r0, [r5, #4]!
   282e0:	mov	r1, r7
   282e4:	bl	27ecc <convertWcharToUtf8@@Base>
   282e8:	subs	r2, r0, #0
   282ec:	strbeq	r8, [sl]
   282f0:	addeq	sl, sl, #1
   282f4:	beq	282d0 <makeUtf8FromWchars@@Base+0x64>
   282f8:	mov	r0, sl
   282fc:	mov	r1, r7
   28300:	bl	fbf0 <mempcpy@plt>
   28304:	add	r4, r4, #1
   28308:	cmp	r4, r6
   2830c:	mov	sl, r0
   28310:	bne	282dc <makeUtf8FromWchars@@Base+0x70>
   28314:	cmp	fp, #0
   28318:	mov	r2, #0
   2831c:	strb	r2, [sl]
   28320:	rsbne	r3, r9, sl
   28324:	strne	r3, [fp]
   28328:	ldr	r1, [sp, #4]
   2832c:	mov	r0, r9
   28330:	ldr	r2, [sp, #20]
   28334:	ldr	r3, [r1]
   28338:	cmp	r2, r3
   2833c:	bne	28358 <makeUtf8FromWchars@@Base+0xec>
   28340:	add	sp, sp, #28
   28344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28348:	mov	sl, r9
   2834c:	b	28314 <makeUtf8FromWchars@@Base+0xa8>
   28350:	bl	1c740 <logMallocError@@Base>
   28354:	b	28328 <makeUtf8FromWchars@@Base+0xbc>
   28358:	bl	f950 <__stack_chk_fail@plt>
   2835c:	strdeq	sl, [r4], -ip
   28360:			; <UNDEFINED> instruction: 0x000003b4

00028364 <convertCharToUtf8@@Base>:
   28364:	push	{r4, lr}
   28368:	mov	r4, r1
   2836c:	bl	285c8 <convertCharToWchar@@Base>
   28370:	cmn	r0, #1
   28374:	beq	28384 <convertCharToUtf8@@Base+0x20>
   28378:	mov	r1, r4
   2837c:	pop	{r4, lr}
   28380:	b	27ecc <convertWcharToUtf8@@Base>
   28384:	mov	r0, #0
   28388:	pop	{r4, pc}

0002838c <convertUtf8ToChar@@Base>:
   2838c:	push	{r3, lr}
   28390:	bl	27fa0 <convertUtf8ToWchar@@Base>
   28394:	cmn	r0, #1
   28398:	popeq	{r3, pc}
   2839c:	pop	{r3, lr}
   283a0:	b	286a4 <convertWcharToChar@@Base>

000283a4 <getWcharCharset@@Base>:
   283a4:	ldr	r3, [pc, #156]	; 28448 <getWcharCharset@@Base+0xa4>
   283a8:	ldr	r2, [pc, #156]	; 2844c <getWcharCharset@@Base+0xa8>
   283ac:	push	{r4, r5, r6, lr}
   283b0:	add	r3, pc, r3
   283b4:	ldr	r5, [pc, #148]	; 28450 <getWcharCharset@@Base+0xac>
   283b8:	sub	sp, sp, #40	; 0x28
   283bc:	ldr	r4, [r3, r2]
   283c0:	add	r5, pc, r5
   283c4:	ldr	r0, [r5]
   283c8:	ldr	r3, [r4]
   283cc:	cmp	r0, #0
   283d0:	str	r3, [sp, #36]	; 0x24
   283d4:	beq	283f0 <getWcharCharset@@Base+0x4c>
   283d8:	ldr	r2, [sp, #36]	; 0x24
   283dc:	ldr	r3, [r4]
   283e0:	cmp	r2, r3
   283e4:	bne	28444 <getWcharCharset@@Base+0xa0>
   283e8:	add	sp, sp, #40	; 0x28
   283ec:	pop	{r4, r5, r6, pc}
   283f0:	add	r6, sp, #20
   283f4:	ldr	ip, [pc, #88]	; 28454 <getWcharCharset@@Base+0xb0>
   283f8:	mov	r1, #16
   283fc:	mov	r2, #4
   28400:	add	ip, pc, ip
   28404:	mov	r3, r1
   28408:	str	ip, [sp]
   2840c:	mov	r0, r6
   28410:	mov	ip, #76	; 0x4c
   28414:	str	r2, [sp, #4]
   28418:	str	ip, [sp, #8]
   2841c:	mov	r2, #1
   28420:	bl	fb60 <__snprintf_chk@plt>
   28424:	mov	r0, r6
   28428:	bl	f740 <__strdup@plt>
   2842c:	cmp	r0, #0
   28430:	str	r0, [r5]
   28434:	bne	283d8 <getWcharCharset@@Base+0x34>
   28438:	bl	1c740 <logMallocError@@Base>
   2843c:	ldr	r0, [r5]
   28440:	b	283d8 <getWcharCharset@@Base+0x34>
   28444:	bl	f950 <__stack_chk_fail@plt>
   28448:	andeq	sl, r4, r8, asr #13
   2844c:			; <UNDEFINED> instruction: 0x000003b4
   28450:	andeq	fp, r4, r4, lsl r8
   28454:	andeq	r8, r2, r8, lsr #22

00028458 <setCharset@@Base>:
   28458:	push	{r3, r4, r5, lr}
   2845c:	subs	r5, r0, #0
   28460:	beq	284dc <setCharset@@Base+0x84>
   28464:	ldr	r3, [pc, #172]	; 28518 <setCharset@@Base+0xc0>
   28468:	add	r3, pc, r3
   2846c:	ldr	r4, [r3, #4]
   28470:	cmp	r4, #0
   28474:	beq	2848c <setCharset@@Base+0x34>
   28478:	mov	r0, r4
   2847c:	mov	r1, r5
   28480:	bl	fc5c <strcmp@plt>
   28484:	cmp	r0, #0
   28488:	beq	284d4 <setCharset@@Base+0x7c>
   2848c:	mov	r0, r5
   28490:	bl	f740 <__strdup@plt>
   28494:	subs	r5, r0, #0
   28498:	beq	2850c <setCharset@@Base+0xb4>
   2849c:	bl	287d8 <registerCharacterSet@@Base>
   284a0:	subs	r4, r0, #0
   284a4:	beq	284fc <setCharset@@Base+0xa4>
   284a8:	ldr	r3, [pc, #108]	; 2851c <setCharset@@Base+0xc4>
   284ac:	add	r3, pc, r3
   284b0:	ldr	r0, [r3, #4]
   284b4:	cmp	r0, #0
   284b8:	beq	284c0 <setCharset@@Base+0x68>
   284bc:	bl	f4f4 <free@plt>
   284c0:	ldr	r3, [pc, #88]	; 28520 <setCharset@@Base+0xc8>
   284c4:	mov	r0, r5
   284c8:	add	r3, pc, r3
   284cc:	str	r5, [r3, #4]
   284d0:	pop	{r3, r4, r5, pc}
   284d4:	mov	r0, r4
   284d8:	pop	{r3, r4, r5, pc}
   284dc:	ldr	r3, [pc, #64]	; 28524 <setCharset@@Base+0xcc>
   284e0:	add	r3, pc, r3
   284e4:	ldr	r0, [r3, #4]
   284e8:	cmp	r0, #0
   284ec:	popne	{r3, r4, r5, pc}
   284f0:	bl	28784 <getLocaleCharset@@Base>
   284f4:	mov	r5, r0
   284f8:	b	2848c <setCharset@@Base+0x34>
   284fc:	mov	r0, r5
   28500:	bl	f4f4 <free@plt>
   28504:	mov	r0, r4
   28508:	pop	{r3, r4, r5, pc}
   2850c:	bl	1c740 <logMallocError@@Base>
   28510:	mov	r0, r5
   28514:	pop	{r3, r4, r5, pc}
   28518:	andeq	fp, r4, ip, ror #14
   2851c:	andeq	fp, r4, r8, lsr #14
   28520:	andeq	fp, r4, ip, lsl #14
   28524:	strdeq	fp, [r4], -r4

00028528 <getCharset@@Base>:
   28528:	mov	r0, #0
   2852c:	b	28458 <setCharset@@Base>

00028530 <lockCharset@@Base>:
   28530:	ldr	r3, [pc, #36]	; 2855c <lockCharset@@Base+0x2c>
   28534:	push	{r4, lr}
   28538:	add	r3, pc, r3
   2853c:	mov	r4, r0
   28540:	add	r0, r3, #8
   28544:	bl	2a6f8 <getLockDescriptor@@Base>
   28548:	cmp	r0, #0
   2854c:	popeq	{r4, pc}
   28550:	mov	r1, r4
   28554:	pop	{r4, lr}
   28558:	b	2a6a0 <obtainLock@@Base>
   2855c:	muleq	r4, ip, r6

00028560 <unlockCharset@@Base>:
   28560:	ldr	r0, [pc, #28]	; 28584 <unlockCharset@@Base+0x24>
   28564:	push	{r3, lr}
   28568:	add	r0, pc, r0
   2856c:	add	r0, r0, #8
   28570:	bl	2a6f8 <getLockDescriptor@@Base>
   28574:	cmp	r0, #0
   28578:	popeq	{r3, pc}
   2857c:	pop	{r3, lr}
   28580:	b	2a6f4 <releaseLock@@Base>
   28584:	andeq	fp, r4, ip, ror #12

00028588 <isPosixLocale@@Base>:
   28588:	push	{r3, lr}
   2858c:	ldrb	r3, [r0]
   28590:	cmp	r3, #67	; 0x43
   28594:	bne	285ac <isPosixLocale@@Base+0x24>
   28598:	ldrb	r3, [r0, #1]
   2859c:	cmp	r3, #0
   285a0:	bne	285ac <isPosixLocale@@Base+0x24>
   285a4:	mov	r0, #1
   285a8:	pop	{r3, pc}
   285ac:	ldr	r1, [pc, #16]	; 285c4 <isPosixLocale@@Base+0x3c>
   285b0:	add	r1, pc, r1
   285b4:	bl	fc5c <strcmp@plt>
   285b8:	rsbs	r0, r0, #1
   285bc:	movcc	r0, #0
   285c0:	pop	{r3, pc}
   285c4:	andeq	r8, r2, r4, lsl #19

000285c8 <convertCharToWchar@@Base>:
   285c8:	ldr	r3, [pc, #196]	; 28694 <convertCharToWchar@@Base+0xcc>
   285cc:	ldr	r2, [pc, #196]	; 28698 <convertCharToWchar@@Base+0xd0>
   285d0:	push	{r4, r5, lr}
   285d4:	add	r3, pc, r3
   285d8:	sub	sp, sp, #44	; 0x2c
   285dc:	strb	r0, [sp, #15]
   285e0:	ldr	r4, [r3, r2]
   285e4:	ldr	r3, [r4]
   285e8:	str	r3, [sp, #36]	; 0x24
   285ec:	bl	28528 <getCharset@@Base>
   285f0:	cmp	r0, #0
   285f4:	mvneq	r0, #0
   285f8:	beq	28650 <convertCharToWchar@@Base+0x88>
   285fc:	ldr	r0, [pc, #152]	; 2869c <convertCharToWchar@@Base+0xd4>
   28600:	add	r3, sp, #32
   28604:	add	r1, sp, #16
   28608:	str	r3, [sp]
   2860c:	add	r0, pc, r0
   28610:	add	r2, sp, #20
   28614:	add	r3, sp, #28
   28618:	mov	ip, #1
   2861c:	ldr	r0, [r0]
   28620:	add	lr, sp, #15
   28624:	str	ip, [sp, #20]
   28628:	add	ip, sp, #24
   2862c:	str	lr, [sp, #16]
   28630:	str	ip, [sp, #28]
   28634:	mov	ip, #4
   28638:	str	ip, [sp, #32]
   2863c:	bl	fc8c <iconv@plt>
   28640:	cmn	r0, #1
   28644:	mov	r5, r0
   28648:	beq	28668 <convertCharToWchar@@Base+0xa0>
   2864c:	ldr	r0, [sp, #24]
   28650:	ldr	r2, [sp, #36]	; 0x24
   28654:	ldr	r3, [r4]
   28658:	cmp	r2, r3
   2865c:	bne	28690 <convertCharToWchar@@Base+0xc8>
   28660:	add	sp, sp, #44	; 0x2c
   28664:	pop	{r4, r5, pc}
   28668:	bl	fca4 <__errno_location@plt>
   2866c:	ldr	r0, [r0]
   28670:	bl	f5c0 <strerror@plt>
   28674:	ldr	r1, [pc, #36]	; 286a0 <convertCharToWchar@@Base+0xd8>
   28678:	add	r1, pc, r1
   2867c:	mov	r2, r0
   28680:	mov	r0, #7
   28684:	bl	1c634 <logMessage@@Base>
   28688:	mov	r0, r5
   2868c:	b	28650 <convertCharToWchar@@Base+0x88>
   28690:	bl	f950 <__stack_chk_fail@plt>
   28694:	andeq	sl, r4, r4, lsr #9
   28698:			; <UNDEFINED> instruction: 0x000003b4
   2869c:	andeq	sl, r4, r0, lsr #21
   286a0:	andeq	r8, r2, r4, asr #17

000286a4 <convertWcharToChar@@Base>:
   286a4:	ldr	r3, [pc, #200]	; 28774 <convertWcharToChar@@Base+0xd0>
   286a8:	ldr	r2, [pc, #200]	; 28778 <convertWcharToChar@@Base+0xd4>
   286ac:	push	{r4, r5, lr}
   286b0:	add	r3, pc, r3
   286b4:	sub	sp, sp, #44	; 0x2c
   286b8:	str	r0, [sp, #12]
   286bc:	ldr	r4, [r3, r2]
   286c0:	ldr	r3, [r4]
   286c4:	str	r3, [sp, #36]	; 0x24
   286c8:	bl	28528 <getCharset@@Base>
   286cc:	cmp	r0, #0
   286d0:	beq	28740 <convertWcharToChar@@Base+0x9c>
   286d4:	ldr	r0, [pc, #160]	; 2877c <convertWcharToChar@@Base+0xd8>
   286d8:	add	r3, sp, #32
   286dc:	add	r1, sp, #20
   286e0:	str	r3, [sp]
   286e4:	add	r0, pc, r0
   286e8:	add	r2, sp, #24
   286ec:	add	r3, sp, #28
   286f0:	mov	ip, #4
   286f4:	ldr	r0, [r0, #4]
   286f8:	add	lr, sp, #12
   286fc:	str	ip, [sp, #24]
   28700:	add	ip, sp, #19
   28704:	str	lr, [sp, #20]
   28708:	str	ip, [sp, #28]
   2870c:	mov	ip, #1
   28710:	str	ip, [sp, #32]
   28714:	bl	fc8c <iconv@plt>
   28718:	cmn	r0, #1
   2871c:	mov	r5, r0
   28720:	beq	28748 <convertWcharToChar@@Base+0xa4>
   28724:	ldrb	r0, [sp, #19]
   28728:	ldr	r2, [sp, #36]	; 0x24
   2872c:	ldr	r3, [r4]
   28730:	cmp	r2, r3
   28734:	bne	28770 <convertWcharToChar@@Base+0xcc>
   28738:	add	sp, sp, #44	; 0x2c
   2873c:	pop	{r4, r5, pc}
   28740:	mvn	r0, #0
   28744:	b	28728 <convertWcharToChar@@Base+0x84>
   28748:	bl	fca4 <__errno_location@plt>
   2874c:	ldr	r0, [r0]
   28750:	bl	f5c0 <strerror@plt>
   28754:	ldr	r1, [pc, #36]	; 28780 <convertWcharToChar@@Base+0xdc>
   28758:	add	r1, pc, r1
   2875c:	mov	r2, r0
   28760:	mov	r0, #7
   28764:	bl	1c634 <logMessage@@Base>
   28768:	mov	r0, r5
   2876c:	b	28728 <convertWcharToChar@@Base+0x84>
   28770:	bl	f950 <__stack_chk_fail@plt>
   28774:	andeq	sl, r4, r8, asr #7
   28778:			; <UNDEFINED> instruction: 0x000003b4
   2877c:	andeq	sl, r4, r8, asr #19
   28780:	andeq	r8, r2, r8, lsl #16

00028784 <getLocaleCharset@@Base>:
   28784:	ldr	r1, [pc, #64]	; 287cc <getLocaleCharset@@Base+0x48>
   28788:	mov	r0, #6
   2878c:	push	{r4, lr}
   28790:	add	r1, pc, r1
   28794:	bl	fad0 <setlocale@plt>
   28798:	ldr	r4, [pc, #48]	; 287d0 <getLocaleCharset@@Base+0x4c>
   2879c:	add	r4, pc, r4
   287a0:	cmp	r0, #0
   287a4:	beq	287b4 <getLocaleCharset@@Base+0x30>
   287a8:	bl	28588 <isPosixLocale@@Base>
   287ac:	cmp	r0, #0
   287b0:	beq	287c0 <getLocaleCharset@@Base+0x3c>
   287b4:	ldr	r3, [pc, #24]	; 287d4 <getLocaleCharset@@Base+0x50>
   287b8:	ldr	r0, [r4, r3]
   287bc:	pop	{r4, pc}
   287c0:	mov	r0, #14
   287c4:	pop	{r4, lr}
   287c8:	b	f614 <nl_langinfo@plt>
   287cc:	andeq	r6, r2, r4, ror r5
   287d0:	ldrdeq	sl, [r4], -ip
   287d4:	andeq	r0, r0, r4, asr #10

000287d8 <registerCharacterSet@@Base>:
   287d8:	ldr	r3, [pc, #444]	; 2899c <registerCharacterSet@@Base+0x1c4>
   287dc:	ldr	r2, [pc, #444]	; 289a0 <registerCharacterSet@@Base+0x1c8>
   287e0:	add	r3, pc, r3
   287e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   287e8:	sub	sp, sp, #64	; 0x40
   287ec:	ldr	r8, [r3, r2]
   287f0:	mov	r6, r0
   287f4:	add	r4, sp, #20
   287f8:	ldr	r3, [r8]
   287fc:	str	r3, [sp, #60]	; 0x3c
   28800:	bl	283a4 <getWcharCharset@@Base>
   28804:	ldr	r3, [pc, #408]	; 289a4 <registerCharacterSet@@Base+0x1cc>
   28808:	mvn	r1, #0
   2880c:	ldrb	r9, [sp, #52]	; 0x34
   28810:	mov	r2, #0
   28814:	add	r3, pc, r3
   28818:	ldrb	r7, [sp, #12]
   2881c:	ldrb	ip, [sp, #32]
   28820:	add	sl, r3, #4
   28824:	mov	r5, r3
   28828:	bfc	r7, #0, #1
   2882c:	bfc	ip, #0, #1
   28830:	str	r3, [sp]
   28834:	str	r6, [sp, #4]
   28838:	mov	r3, r2
   2883c:	str	r6, [sp, #28]
   28840:	str	sl, [sp, #20]
   28844:	strb	r7, [sp, #12]
   28848:	strb	ip, [sp, #32]
   2884c:	str	r1, [sp, #16]
   28850:	str	r1, [sp, #36]	; 0x24
   28854:	str	r1, [sp, #56]	; 0x38
   28858:	str	r2, [sp, #40]	; 0x28
   2885c:	str	r2, [sp, #44]	; 0x2c
   28860:	str	r2, [sp, #48]	; 0x30
   28864:	str	r0, [sp, #8]
   28868:	str	r0, [sp, #24]
   2886c:	orr	r0, r9, #1
   28870:	mov	r9, r1
   28874:	strb	r0, [sp, #52]	; 0x34
   28878:	b	288a4 <registerCharacterSet@@Base+0xcc>
   2887c:	ldr	r6, [r5]
   28880:	cmn	r6, #1
   28884:	strne	r9, [r4, #-4]
   28888:	beq	28978 <registerCharacterSet@@Base+0x1a0>
   2888c:	mov	r6, r4
   28890:	ldr	r5, [r4], #20
   28894:	cmp	r5, #0
   28898:	beq	28914 <registerCharacterSet@@Base+0x13c>
   2889c:	ldrb	r3, [r7, #32]
   288a0:	and	r3, r3, #1
   288a4:	cmp	r3, #0
   288a8:	sub	r7, r4, #20
   288ac:	bne	2887c <registerCharacterSet@@Base+0xa4>
   288b0:	ldr	r0, [r4, #-12]
   288b4:	ldr	r1, [r4, #-16]
   288b8:	bl	fc2c <iconv_open@plt>
   288bc:	cmn	r0, #1
   288c0:	str	r0, [r4, #-4]
   288c4:	bne	2888c <registerCharacterSet@@Base+0xb4>
   288c8:	ldr	r0, [pc, #216]	; 289a8 <registerCharacterSet@@Base+0x1d0>
   288cc:	mov	r9, sp
   288d0:	add	r0, pc, r0
   288d4:	bl	1c6fc <logSystemError@@Base>
   288d8:	cmp	r7, r9
   288dc:	subne	r5, r7, #20
   288e0:	movne	r4, r5
   288e4:	beq	2890c <registerCharacterSet@@Base+0x134>
   288e8:	rsb	r3, r7, r4
   288ec:	add	r3, r3, r5
   288f0:	ldr	r0, [r3, #36]	; 0x24
   288f4:	cmn	r0, #1
   288f8:	beq	28900 <registerCharacterSet@@Base+0x128>
   288fc:	bl	fae8 <iconv_close@plt>
   28900:	cmp	r9, r4
   28904:	sub	r4, r4, #20
   28908:	bne	288e8 <registerCharacterSet@@Base+0x110>
   2890c:	mov	r0, #0
   28910:	b	2895c <registerCharacterSet@@Base+0x184>
   28914:	mov	r9, sp
   28918:	cmp	r6, r9
   2891c:	beq	28958 <registerCharacterSet@@Base+0x180>
   28920:	sub	r4, r6, #4
   28924:	ldr	r5, [r4]
   28928:	sub	r6, r6, #20
   2892c:	cmn	r5, #1
   28930:	beq	2894c <registerCharacterSet@@Base+0x174>
   28934:	ldr	r7, [r4, #-16]
   28938:	ldr	r0, [r7]
   2893c:	cmn	r0, #1
   28940:	beq	28948 <registerCharacterSet@@Base+0x170>
   28944:	bl	fae8 <iconv_close@plt>
   28948:	str	r5, [r7]
   2894c:	cmp	r6, r9
   28950:	sub	r4, r4, #20
   28954:	bne	28924 <registerCharacterSet@@Base+0x14c>
   28958:	mov	r0, #1
   2895c:	ldr	r2, [sp, #60]	; 0x3c
   28960:	ldr	r3, [r8]
   28964:	cmp	r2, r3
   28968:	bne	28974 <registerCharacterSet@@Base+0x19c>
   2896c:	add	sp, sp, #64	; 0x40
   28970:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28974:	bl	f950 <__stack_chk_fail@plt>
   28978:	ldr	r0, [r4, #-12]
   2897c:	ldr	r1, [r4, #-16]
   28980:	bl	fc2c <iconv_open@plt>
   28984:	cmn	r0, #1
   28988:	str	r0, [r4, #-4]
   2898c:	beq	288c8 <registerCharacterSet@@Base+0xf0>
   28990:	str	r0, [r5]
   28994:	str	r6, [r4, #-4]
   28998:	b	2888c <registerCharacterSet@@Base+0xb4>
   2899c:	muleq	r4, r8, r2
   289a0:			; <UNDEFINED> instruction: 0x000003b4
   289a4:	muleq	r4, r8, r8
   289a8:			; <UNDEFINED> instruction: 0x000286bc

000289ac <resetDataArea@@Base>:
   289ac:	mov	r3, #0
   289b0:	str	r3, [r0]
   289b4:	str	r3, [r0, #4]
   289b8:	str	r3, [r0, #8]
   289bc:	bx	lr

000289c0 <newDataArea@@Base>:
   289c0:	push	{r4, lr}
   289c4:	mov	r0, #12
   289c8:	bl	fb48 <malloc@plt>
   289cc:	subs	r4, r0, #0
   289d0:	beq	289d8 <newDataArea@@Base+0x18>
   289d4:	bl	289ac <resetDataArea@@Base>
   289d8:	mov	r0, r4
   289dc:	pop	{r4, pc}

000289e0 <destroyDataArea@@Base>:
   289e0:	push	{r4, lr}
   289e4:	mov	r4, r0
   289e8:	ldr	r0, [r0]
   289ec:	cmp	r0, #0
   289f0:	beq	289f8 <destroyDataArea@@Base+0x18>
   289f4:	bl	f4f4 <free@plt>
   289f8:	mov	r0, r4
   289fc:	pop	{r4, lr}
   28a00:	b	f4f4 <free@plt>

00028a04 <allocateDataItem@@Base>:
   28a04:	push	{r4, r5, r6, r7, r8, lr}
   28a08:	mov	r4, r0
   28a0c:	ldr	r0, [r0, #8]
   28a10:	mov	r7, r1
   28a14:	mov	r1, r3
   28a18:	mov	r5, r3
   28a1c:	sub	r0, r0, #1
   28a20:	mov	r6, r2
   28a24:	add	r0, r0, r3
   28a28:	bl	4e204 <formatAddress@@Base+0x258>
   28a2c:	ldr	r3, [r4, #4]
   28a30:	mul	r0, r5, r0
   28a34:	add	r6, r0, r6
   28a38:	cmp	r6, r3
   28a3c:	str	r0, [r4, #8]
   28a40:	bhi	28a5c <allocateDataItem@@Base+0x58>
   28a44:	cmp	r7, #0
   28a48:	mov	r0, #1
   28a4c:	ldrne	r3, [r4, #8]
   28a50:	strne	r3, [r7]
   28a54:	str	r6, [r4, #8]
   28a58:	pop	{r4, r5, r6, r7, r8, pc}
   28a5c:	mvn	r5, r6, lsr #12
   28a60:	ldr	r0, [r4]
   28a64:	mvn	r5, r5, lsl #12
   28a68:	mov	r1, r5
   28a6c:	bl	f878 <realloc@plt>
   28a70:	subs	r8, r0, #0
   28a74:	beq	28a98 <allocateDataItem@@Base+0x94>
   28a78:	ldr	r2, [r4, #4]
   28a7c:	mov	r1, #0
   28a80:	add	r0, r8, r2
   28a84:	rsb	r2, r2, r5
   28a88:	bl	f6b0 <memset@plt>
   28a8c:	str	r8, [r4]
   28a90:	str	r5, [r4, #4]
   28a94:	b	28a44 <allocateDataItem@@Base+0x40>
   28a98:	ldr	r1, [pc, #16]	; 28ab0 <allocateDataItem@@Base+0xac>
   28a9c:	mov	r0, #3
   28aa0:	add	r1, pc, r1
   28aa4:	bl	1c634 <logMessage@@Base>
   28aa8:	mov	r0, r8
   28aac:	pop	{r4, r5, r6, r7, r8, pc}
   28ab0:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>

00028ab4 <getDataItem@@Base>:
   28ab4:	ldr	r0, [r0]
   28ab8:	add	r0, r0, r1
   28abc:	bx	lr

00028ac0 <getDataSize@@Base>:
   28ac0:	ldr	r0, [r0, #8]
   28ac4:	bx	lr

00028ac8 <saveDataItem@@Base>:
   28ac8:	push	{r3, r4, r5, r6, r7, lr}
   28acc:	mov	r4, r3
   28ad0:	mov	r5, r2
   28ad4:	ldr	r3, [sp, #24]
   28ad8:	mov	r2, r4
   28adc:	mov	r7, r0
   28ae0:	mov	r6, r1
   28ae4:	bl	28a04 <allocateDataItem@@Base>
   28ae8:	cmp	r0, #0
   28aec:	popeq	{r3, r4, r5, r6, r7, pc}
   28af0:	ldr	r1, [r6]
   28af4:	mov	r0, r7
   28af8:	bl	28ab4 <getDataItem@@Base>
   28afc:	mov	r1, r5
   28b00:	mov	r2, r4
   28b04:	bl	fb24 <memcpy@plt>
   28b08:	mov	r0, #1
   28b0c:	pop	{r3, r4, r5, r6, r7, pc}

00028b10 <isHexadecimalDigit@@Base>:
   28b10:	sub	r3, r0, #48	; 0x30
   28b14:	cmp	r3, #9
   28b18:	strls	r3, [r1]
   28b1c:	bls	28b48 <isHexadecimalDigit@@Base+0x38>
   28b20:	sub	r3, r0, #97	; 0x61
   28b24:	cmp	r3, #5
   28b28:	subls	r0, r0, #87	; 0x57
   28b2c:	strls	r0, [r1]
   28b30:	bls	28b48 <isHexadecimalDigit@@Base+0x38>
   28b34:	sub	r3, r0, #65	; 0x41
   28b38:	cmp	r3, #5
   28b3c:	bhi	28b58 <isHexadecimalDigit@@Base+0x48>
   28b40:	sub	r0, r0, #55	; 0x37
   28b44:	str	r0, [r1]
   28b48:	mov	r3, #4
   28b4c:	mov	r0, #1
   28b50:	str	r3, [r2]
   28b54:	bx	lr
   28b58:	mov	r0, #0
   28b5c:	bx	lr

00028b60 <isOctalDigit@@Base>:
   28b60:	sub	r0, r0, #48	; 0x30
   28b64:	cmp	r0, #7
   28b68:	strls	r0, [r1]
   28b6c:	movls	r3, #3
   28b70:	movls	r0, #1
   28b74:	strls	r3, [r2]
   28b78:	movhi	r0, #0
   28b7c:	bx	lr
   28b80:	push	{r4, lr}
   28b84:	mov	r4, r0
   28b88:	ldr	r0, [r0]
   28b8c:	cmp	r0, #0
   28b90:	beq	28b98 <isOctalDigit@@Base+0x38>
   28b94:	bl	f4f4 <free@plt>
   28b98:	ldr	r0, [r4, #8]
   28b9c:	cmp	r0, #0
   28ba0:	beq	28ba8 <isOctalDigit@@Base+0x48>
   28ba4:	bl	f4f4 <free@plt>
   28ba8:	mov	r0, r4
   28bac:	pop	{r4, lr}
   28bb0:	b	f4f4 <free@plt>
   28bb4:	push	{r3, lr}
   28bb8:	ldr	r2, [r0, #4]
   28bbc:	ldr	r3, [r1, #4]
   28bc0:	cmp	r2, r3
   28bc4:	beq	28bd0 <isOctalDigit@@Base+0x70>
   28bc8:	mov	r0, #0
   28bcc:	pop	{r3, pc}
   28bd0:	ldr	r0, [r0]
   28bd4:	ldr	r1, [r1]
   28bd8:	bl	f770 <wmemcmp@plt>
   28bdc:	rsbs	r0, r0, #1
   28be0:	movcc	r0, #0
   28be4:	pop	{r3, pc}
   28be8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   28bec:	mov	r8, r0
   28bf0:	mov	r0, #16
   28bf4:	mov	r6, r1
   28bf8:	bl	fb48 <malloc@plt>
   28bfc:	subs	r4, r0, #0
   28c00:	beq	28c70 <isOctalDigit@@Base+0x110>
   28c04:	mov	r3, r4
   28c08:	mov	r5, #0
   28c0c:	str	r5, [r3], #4
   28c10:	add	r3, r3, #4
   28c14:	str	r5, [r4, #4]
   28c18:	str	r5, [r3], #4
   28c1c:	str	r5, [r3]
   28c20:	ldr	r7, [r6, #4]
   28c24:	lsl	r0, r7, #2
   28c28:	bl	fb48 <malloc@plt>
   28c2c:	subs	r9, r0, #0
   28c30:	beq	28c94 <isOctalDigit@@Base+0x134>
   28c34:	mov	r2, r7
   28c38:	ldr	r1, [r6]
   28c3c:	bl	f620 <wmemcpy@plt>
   28c40:	mov	r1, r4
   28c44:	str	r0, [r4]
   28c48:	mov	r0, r8
   28c4c:	ldr	r3, [r6, #4]
   28c50:	str	r5, [r4, #8]
   28c54:	str	r5, [r4, #12]
   28c58:	str	r3, [r4, #4]
   28c5c:	bl	2ade4 <enqueueItem@@Base>
   28c60:	cmp	r0, r5
   28c64:	beq	28c7c <isOctalDigit@@Base+0x11c>
   28c68:	mov	r0, r4
   28c6c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   28c70:	bl	1c740 <logMallocError@@Base>
   28c74:	mov	r0, r4
   28c78:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   28c7c:	mov	r0, r9
   28c80:	bl	f4f4 <free@plt>
   28c84:	mov	r0, r4
   28c88:	bl	f4f4 <free@plt>
   28c8c:	mov	r0, #0
   28c90:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   28c94:	bl	1c740 <logMallocError@@Base>
   28c98:	b	28c84 <isOctalDigit@@Base+0x124>
   28c9c:	push	{r4, r5, r6, r7, r8, lr}
   28ca0:	subs	r4, r3, #0
   28ca4:	mov	r5, r0
   28ca8:	mov	r7, r1
   28cac:	mov	r8, r2
   28cb0:	moveq	r6, r4
   28cb4:	bne	28cd8 <isOctalDigit@@Base+0x178>
   28cb8:	ldr	r0, [r5]
   28cbc:	cmp	r0, #0
   28cc0:	beq	28cc8 <isOctalDigit@@Base+0x168>
   28cc4:	bl	f4f4 <free@plt>
   28cc8:	str	r6, [r5]
   28ccc:	mov	r0, #1
   28cd0:	str	r4, [r7]
   28cd4:	pop	{r4, r5, r6, r7, r8, pc}
   28cd8:	lsl	r0, r4, #2
   28cdc:	bl	fb48 <malloc@plt>
   28ce0:	subs	r6, r0, #0
   28ce4:	beq	28cf8 <isOctalDigit@@Base+0x198>
   28ce8:	mov	r1, r8
   28cec:	mov	r2, r4
   28cf0:	bl	f620 <wmemcpy@plt>
   28cf4:	b	28cb8 <isOctalDigit@@Base+0x158>
   28cf8:	bl	1c740 <logMallocError@@Base>
   28cfc:	mov	r0, r6
   28d00:	pop	{r4, r5, r6, r7, r8, pc}
   28d04:	push	{r3, r4, r5, lr}
   28d08:	ldr	r3, [pc, #68]	; 28d54 <isOctalDigit@@Base+0x1f4>
   28d0c:	ldr	r4, [pc, r3]
   28d10:	cmp	r4, #0
   28d14:	beq	28d20 <isOctalDigit@@Base+0x1c0>
   28d18:	mov	r0, r4
   28d1c:	pop	{r3, r4, r5, pc}
   28d20:	ldr	r0, [pc, #48]	; 28d58 <isOctalDigit@@Base+0x1f8>
   28d24:	mov	r1, r4
   28d28:	add	r0, pc, r0
   28d2c:	bl	2abf4 <newQueue@@Base>
   28d30:	subs	r5, r0, #0
   28d34:	beq	28d40 <isOctalDigit@@Base+0x1e0>
   28d38:	mov	r1, r4
   28d3c:	bl	2ac9c <setQueueData@@Base>
   28d40:	ldr	r3, [pc, #20]	; 28d5c <isOctalDigit@@Base+0x1fc>
   28d44:	mov	r0, r5
   28d48:	add	r3, pc, r3
   28d4c:	str	r5, [r3]
   28d50:	pop	{r3, r4, r5, pc}
   28d54:	ldrdeq	sl, [r4], -r4
   28d58:			; <UNDEFINED> instruction: 0xfffffe50
   28d5c:	muleq	r4, r8, lr

00028d60 <brlDotNumberToIndex@@Base>:
   28d60:	push	{r3, r4, r5, lr}
   28d64:	mov	r2, #8
   28d68:	ldr	r3, [pc, #48]	; 28da0 <brlDotNumberToIndex@@Base+0x40>
   28d6c:	mov	r5, r1
   28d70:	ldr	ip, [pc, #44]	; 28da4 <brlDotNumberToIndex@@Base+0x44>
   28d74:	mov	r1, r0
   28d78:	add	r3, pc, r3
   28d7c:	ldr	r4, [r3, ip]
   28d80:	mov	r0, r4
   28d84:	bl	f7a0 <wmemchr@plt>
   28d88:	cmp	r0, #0
   28d8c:	rsbne	r4, r4, r0
   28d90:	movne	r0, #1
   28d94:	asrne	r4, r4, #2
   28d98:	strne	r4, [r5]
   28d9c:	pop	{r3, r4, r5, pc}
   28da0:	andeq	r9, r4, r0, lsl #26
   28da4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>

00028da8 <brlDotBitToIndex@@Base>:
   28da8:	push	{r3, r4, r5, lr}
   28dac:	mov	r2, #8
   28db0:	ldr	r3, [pc, #44]	; 28de4 <brlDotBitToIndex@@Base+0x3c>
   28db4:	mov	r5, r1
   28db8:	ldr	ip, [pc, #40]	; 28de8 <brlDotBitToIndex@@Base+0x40>
   28dbc:	mov	r1, r0
   28dc0:	add	r3, pc, r3
   28dc4:	ldr	r4, [r3, ip]
   28dc8:	mov	r0, r4
   28dcc:	bl	fcc8 <memchr@plt>
   28dd0:	cmp	r0, #0
   28dd4:	rsbne	r4, r4, r0
   28dd8:	strne	r4, [r5]
   28ddc:	movne	r0, #1
   28de0:	pop	{r3, r4, r5, pc}
   28de4:			; <UNDEFINED> instruction: 0x00049cb8
   28de8:	andeq	r0, r0, r8, asr r4

00028dec <reportDataError@@Base>:
   28dec:	push	{r1, r2, r3}
   28df0:	cmp	r0, #0
   28df4:	ldr	r3, [pc, #144]	; 28e8c <reportDataError@@Base+0xa0>
   28df8:	ldr	r2, [pc, #144]	; 28e90 <reportDataError@@Base+0xa4>
   28dfc:	add	r3, pc, r3
   28e00:	push	{r4, r5, lr}
   28e04:	sub	sp, sp, #272	; 0x110
   28e08:	ldr	r4, [r3, r2]
   28e0c:	ldr	r1, [sp, #284]	; 0x11c
   28e10:	ldr	r3, [r4]
   28e14:	str	r3, [sp, #268]	; 0x10c
   28e18:	beq	28e7c <reportDataError@@Base+0x90>
   28e1c:	ldm	r0, {r2, r3}
   28e20:	cmp	r3, #0
   28e24:	addne	r3, r0, #4
   28e28:	add	r5, sp, #12
   28e2c:	add	ip, sp, #288	; 0x120
   28e30:	str	r1, [sp]
   28e34:	mov	r1, #256	; 0x100
   28e38:	str	ip, [sp, #4]
   28e3c:	mov	r0, r5
   28e40:	str	ip, [sp, #8]
   28e44:	bl	1d598 <formatInputError@@Base>
   28e48:	ldr	r1, [pc, #68]	; 28e94 <reportDataError@@Base+0xa8>
   28e4c:	mov	r2, r5
   28e50:	mov	r0, #4
   28e54:	add	r1, pc, r1
   28e58:	bl	1c634 <logMessage@@Base>
   28e5c:	ldr	r2, [sp, #268]	; 0x10c
   28e60:	ldr	r3, [r4]
   28e64:	cmp	r2, r3
   28e68:	bne	28e88 <reportDataError@@Base+0x9c>
   28e6c:	add	sp, sp, #272	; 0x110
   28e70:	pop	{r4, r5, lr}
   28e74:	add	sp, sp, #12
   28e78:	bx	lr
   28e7c:	mov	r3, r0
   28e80:	mov	r2, r0
   28e84:	b	28e28 <reportDataError@@Base+0x3c>
   28e88:	bl	f950 <__stack_chk_fail@plt>
   28e8c:	andeq	r9, r4, ip, ror ip
   28e90:			; <UNDEFINED> instruction: 0x000003b4
   28e94:	andeq	r5, r2, r0, lsr #20

00028e98 <isKeyword@@Base>:
   28e98:	push	{r3, r4, r5, r6, r7, lr}
   28e9c:	mov	r7, r2
   28ea0:	mov	r6, r1
   28ea4:	mov	r5, r0
   28ea8:	bl	f410 <wcslen@plt>
   28eac:	cmp	r0, r7
   28eb0:	mov	r4, r0
   28eb4:	beq	28ec0 <isKeyword@@Base+0x28>
   28eb8:	mov	r0, #0
   28ebc:	pop	{r3, r4, r5, r6, r7, pc}
   28ec0:	cmp	r0, #0
   28ec4:	beq	28eec <isKeyword@@Base+0x54>
   28ec8:	ldr	r0, [r6], #4
   28ecc:	bl	f434 <towlower@plt>
   28ed0:	mov	r7, r0
   28ed4:	ldr	r0, [r5], #4
   28ed8:	bl	f434 <towlower@plt>
   28edc:	cmp	r7, r0
   28ee0:	bne	28eb8 <isKeyword@@Base+0x20>
   28ee4:	subs	r4, r4, #1
   28ee8:	bne	28ec8 <isKeyword@@Base+0x30>
   28eec:	mov	r0, #1
   28ef0:	pop	{r3, r4, r5, r6, r7, pc}

00028ef4 <isNumber@@Base>:
   28ef4:	ldr	r3, [pc, #196]	; 28fc0 <isNumber@@Base+0xcc>
   28ef8:	cmp	r2, #0
   28efc:	push	{r4, r5, r6, r7, fp, lr}
   28f00:	add	fp, sp, #20
   28f04:	ldr	ip, [pc, #184]	; 28fc4 <isNumber@@Base+0xd0>
   28f08:	sub	sp, sp, #8
   28f0c:	add	r3, pc, r3
   28f10:	mov	r5, r0
   28f14:	movle	r0, #0
   28f18:	ldr	r4, [r3, ip]
   28f1c:	ldr	r3, [r4]
   28f20:	str	r3, [fp, #-24]	; 0xffffffe8
   28f24:	ble	28f90 <isNumber@@Base+0x9c>
   28f28:	add	r3, r2, #8
   28f2c:	mov	r6, sp
   28f30:	bic	r3, r3, #7
   28f34:	sub	r1, r1, #4
   28f38:	sub	sp, sp, r3
   28f3c:	mov	r7, #0
   28f40:	add	ip, sp, r2
   28f44:	mov	r0, sp
   28f48:	mov	r3, sp
   28f4c:	strb	r7, [sp, r2]
   28f50:	ldr	r2, [r1, #4]!
   28f54:	cmp	r2, #255	; 0xff
   28f58:	bhi	28fa8 <isNumber@@Base+0xb4>
   28f5c:	strb	r2, [r3], #1
   28f60:	cmp	r3, ip
   28f64:	bne	28f50 <isNumber@@Base+0x5c>
   28f68:	sub	r1, fp, #28
   28f6c:	mov	r2, #0
   28f70:	bl	f4e8 <strtol@plt>
   28f74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28f78:	ldrb	r3, [r3]
   28f7c:	cmp	r3, #0
   28f80:	bne	28fb0 <isNumber@@Base+0xbc>
   28f84:	str	r0, [r5]
   28f88:	mov	r0, #1
   28f8c:	mov	sp, r6
   28f90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28f94:	ldr	r3, [r4]
   28f98:	cmp	r2, r3
   28f9c:	bne	28fbc <isNumber@@Base+0xc8>
   28fa0:	sub	sp, fp, #20
   28fa4:	pop	{r4, r5, r6, r7, fp, pc}
   28fa8:	mov	r0, #0
   28fac:	b	28f8c <isNumber@@Base+0x98>
   28fb0:	mov	r0, #0
   28fb4:	mov	sp, r6
   28fb8:	b	28f90 <isNumber@@Base+0x9c>
   28fbc:	bl	f950 <__stack_chk_fail@plt>
   28fc0:	andeq	r9, r4, ip, ror #22
   28fc4:			; <UNDEFINED> instruction: 0x000003b4

00028fc8 <setGlobalDataVariable@@Base>:
   28fc8:	ldr	r3, [pc, #316]	; 2910c <setGlobalDataVariable@@Base+0x144>
   28fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28fd0:	add	fp, sp, #32
   28fd4:	ldr	r2, [pc, #308]	; 29110 <setGlobalDataVariable@@Base+0x148>
   28fd8:	sub	sp, sp, #28
   28fdc:	add	r3, pc, r3
   28fe0:	mov	r6, r1
   28fe4:	mov	sl, r0
   28fe8:	ldr	r2, [r3, r2]
   28fec:	sub	r4, fp, #48	; 0x30
   28ff0:	ldr	r3, [r2]
   28ff4:	str	r2, [fp, #-56]	; 0xffffffc8
   28ff8:	str	r3, [fp, #-40]	; 0xffffffd8
   28ffc:	bl	28108 <getUtf8Length@@Base>
   29000:	add	r7, r0, #1
   29004:	mov	r5, r0
   29008:	mov	r0, r6
   2900c:	lsl	r7, r7, #2
   29010:	add	r2, r7, #10
   29014:	bic	r2, r2, #7
   29018:	sub	sp, sp, r2
   2901c:	bl	28108 <getUtf8Length@@Base>
   29020:	lsr	r2, r7, #2
   29024:	sub	r7, fp, #52	; 0x34
   29028:	mov	ip, sp
   2902c:	mov	r1, r4
   29030:	str	sp, [fp, #-48]	; 0xffffffd0
   29034:	str	ip, [fp, #-60]	; 0xffffffc4
   29038:	str	sl, [fp, #-52]	; 0xffffffcc
   2903c:	add	r8, r0, #1
   29040:	mov	r9, r0
   29044:	mov	r0, r7
   29048:	lsl	r8, r8, #2
   2904c:	add	lr, r8, #10
   29050:	bic	lr, lr, #7
   29054:	sub	sp, sp, lr
   29058:	bl	281a0 <convertUtf8ToWchars@@Base>
   2905c:	mov	r0, r7
   29060:	lsr	r2, r8, #2
   29064:	mov	r1, r4
   29068:	str	r6, [fp, #-52]	; 0xffffffcc
   2906c:	mov	r6, sp
   29070:	str	sp, [fp, #-48]	; 0xffffffd0
   29074:	bl	281a0 <convertUtf8ToWchars@@Base>
   29078:	bl	28d04 <isOctalDigit@@Base+0x1a4>
   2907c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   29080:	subs	r7, r0, #0
   29084:	moveq	r0, r7
   29088:	beq	290d4 <setGlobalDataVariable@@Base+0x10c>
   2908c:	ldr	r1, [pc, #128]	; 29114 <setGlobalDataVariable@@Base+0x14c>
   29090:	mov	r2, r4
   29094:	str	ip, [fp, #-48]	; 0xffffffd0
   29098:	add	r1, pc, r1
   2909c:	str	r5, [fp, #-44]	; 0xffffffd4
   290a0:	bl	2aebc <findItem@@Base>
   290a4:	cmp	r0, #0
   290a8:	movne	r1, r0
   290ac:	beq	290f0 <setGlobalDataVariable@@Base+0x128>
   290b0:	add	r0, r1, #8
   290b4:	mov	r2, r6
   290b8:	mov	r3, r9
   290bc:	add	r1, r1, #12
   290c0:	bl	28c9c <isOctalDigit@@Base+0x13c>
   290c4:	cmp	r0, #0
   290c8:	movne	r0, #1
   290cc:	bne	290d4 <setGlobalDataVariable@@Base+0x10c>
   290d0:	mov	r0, #0
   290d4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   290d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   290dc:	ldr	r3, [r1]
   290e0:	cmp	r2, r3
   290e4:	bne	29108 <setGlobalDataVariable@@Base+0x140>
   290e8:	sub	sp, fp, #32
   290ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   290f0:	mov	r1, r4
   290f4:	mov	r0, r7
   290f8:	bl	28be8 <isOctalDigit@@Base+0x88>
   290fc:	subs	r1, r0, #0
   29100:	beq	290d0 <setGlobalDataVariable@@Base+0x108>
   29104:	b	290b0 <setGlobalDataVariable@@Base+0xe8>
   29108:	bl	f950 <__stack_chk_fail@plt>
   2910c:	muleq	r4, ip, sl
   29110:			; <UNDEFINED> instruction: 0x000003b4
   29114:			; <UNDEFINED> instruction: 0xfffffb14

00029118 <setGlobalTableVariables@@Base>:
   29118:	mov	r3, r0
   2911c:	ldr	r0, [pc, #52]	; 29158 <setGlobalTableVariables@@Base+0x40>
   29120:	push	{r4, lr}
   29124:	add	r0, pc, r0
   29128:	mov	r4, r1
   2912c:	mov	r1, r3
   29130:	bl	28fc8 <setGlobalDataVariable@@Base>
   29134:	cmp	r0, #0
   29138:	popeq	{r4, pc}
   2913c:	ldr	r0, [pc, #24]	; 2915c <setGlobalTableVariables@@Base+0x44>
   29140:	mov	r1, r4
   29144:	add	r0, pc, r0
   29148:	bl	28fc8 <setGlobalDataVariable@@Base>
   2914c:	adds	r0, r0, #0
   29150:	movne	r0, #1
   29154:	pop	{r4, pc}
   29158:	andeq	r7, r2, r0, asr #29
   2915c:			; <UNDEFINED> instruction: 0x00027eb0

00029160 <findDataOperand@@Base>:
   29160:	push	{r4, r5, r6, r7, r8, lr}
   29164:	mov	r6, r0
   29168:	ldr	r4, [r0, #24]
   2916c:	mov	r8, r1
   29170:	str	r4, [r0, #20]
   29174:	b	2917c <findDataOperand@@Base+0x1c>
   29178:	str	r4, [r6, #20]
   2917c:	mov	r5, r4
   29180:	add	r4, r4, #4
   29184:	ldr	r0, [r5]
   29188:	bl	f44c <iswspace@plt>
   2918c:	subs	r7, r0, #0
   29190:	bne	29178 <findDataOperand@@Base+0x18>
   29194:	str	r5, [r6, #24]
   29198:	ldr	r3, [r5]
   2919c:	cmp	r3, #0
   291a0:	movne	r7, #1
   291a4:	bne	291c4 <findDataOperand@@Base+0x64>
   291a8:	cmp	r8, #0
   291ac:	beq	291c4 <findDataOperand@@Base+0x64>
   291b0:	ldr	r1, [pc, #20]	; 291cc <findDataOperand@@Base+0x6c>
   291b4:	mov	r0, r6
   291b8:	mov	r2, r8
   291bc:	add	r1, pc, r1
   291c0:	bl	28dec <reportDataError@@Base>
   291c4:	mov	r0, r7
   291c8:	pop	{r4, r5, r6, r7, r8, pc}
   291cc:	andeq	r7, r2, ip, asr #28
   291d0:	ldr	r3, [pc, #228]	; 292bc <findDataOperand@@Base+0x15c>
   291d4:	push	{r4, r5, r6, r7, fp, lr}
   291d8:	add	fp, sp, #20
   291dc:	ldr	r2, [pc, #220]	; 292c0 <findDataOperand@@Base+0x160>
   291e0:	sub	sp, sp, #16
   291e4:	add	r3, pc, r3
   291e8:	mov	r4, r1
   291ec:	mov	r7, r0
   291f0:	ldr	r6, [r3, r2]
   291f4:	ldr	r3, [r6]
   291f8:	str	r3, [fp, #-24]	; 0xffffffe8
   291fc:	bl	fb54 <strlen@plt>
   29200:	ldr	r3, [r4, #4]
   29204:	sub	r1, fp, #28
   29208:	str	r7, [fp, #-32]	; 0xffffffe0
   2920c:	add	r3, r3, #1
   29210:	str	r3, [r4, #4]
   29214:	add	r2, r0, #1
   29218:	sub	r0, fp, #32
   2921c:	lsl	r3, r2, #2
   29220:	add	r3, r3, #10
   29224:	bic	r3, r3, #7
   29228:	sub	sp, sp, r3
   2922c:	str	sp, [fp, #-28]	; 0xffffffe4
   29230:	bl	281a0 <convertUtf8ToWchars@@Base>
   29234:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29238:	ldrb	r1, [r2]
   2923c:	cmp	r1, #0
   29240:	bne	2929c <findDataOperand@@Base+0x13c>
   29244:	str	sp, [r4, #20]
   29248:	mov	r0, r4
   2924c:	str	sp, [r4, #24]
   29250:	bl	29160 <findDataOperand@@Base>
   29254:	cmp	r0, #0
   29258:	beq	29294 <findDataOperand@@Base+0x134>
   2925c:	ldr	r3, [r4, #20]
   29260:	ldr	r3, [r3]
   29264:	cmp	r3, #35	; 0x23
   29268:	beq	29294 <findDataOperand@@Base+0x134>
   2926c:	mov	r0, r4
   29270:	ldr	r3, [r4, #8]
   29274:	ldr	r1, [r4, #12]
   29278:	blx	r3
   2927c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29280:	ldr	r3, [r6]
   29284:	cmp	r2, r3
   29288:	bne	292b8 <findDataOperand@@Base+0x158>
   2928c:	sub	sp, fp, #20
   29290:	pop	{r4, r5, r6, r7, fp, pc}
   29294:	mov	r0, #1
   29298:	b	2927c <findDataOperand@@Base+0x11c>
   2929c:	ldr	r1, [pc, #32]	; 292c4 <findDataOperand@@Base+0x164>
   292a0:	mov	r0, r4
   292a4:	rsb	r2, r7, r2
   292a8:	add	r1, pc, r1
   292ac:	bl	28dec <reportDataError@@Base>
   292b0:	mov	r0, #1
   292b4:	b	2927c <findDataOperand@@Base+0x11c>
   292b8:	bl	f950 <__stack_chk_fail@plt>
   292bc:	muleq	r4, r4, r8
   292c0:			; <UNDEFINED> instruction: 0x000003b4
   292c4:	andeq	r7, r2, r4, ror sp

000292c8 <getDataCharacter@@Base>:
   292c8:	ldr	r3, [r0, #24]
   292cc:	ldr	r2, [r3]
   292d0:	cmp	r2, #0
   292d4:	addne	r2, r3, #4
   292d8:	strne	r2, [r0, #24]
   292dc:	ldrne	r3, [r3]
   292e0:	movne	r0, #1
   292e4:	moveq	r0, r2
   292e8:	strne	r3, [r1]
   292ec:	bx	lr

000292f0 <ungetDataCharacters@@Base>:
   292f0:	push	{r3, lr}
   292f4:	mov	ip, r0
   292f8:	ldr	r2, [r0, #24]
   292fc:	ldr	r3, [r0, #20]
   29300:	rsb	r3, r3, r2
   29304:	asr	r3, r3, #2
   29308:	cmp	r3, r1
   2930c:	bcc	29320 <ungetDataCharacters@@Base+0x30>
   29310:	sub	r1, r2, r1, lsl #2
   29314:	mov	r0, #1
   29318:	str	r1, [ip, #24]
   2931c:	pop	{r3, pc}
   29320:	mov	r2, r1
   29324:	ldr	r1, [pc, #12]	; 29338 <ungetDataCharacters@@Base+0x48>
   29328:	add	r1, pc, r1
   2932c:	bl	28dec <reportDataError@@Base>
   29330:	mov	r0, #0
   29334:	pop	{r3, pc}
   29338:	andeq	r7, r2, ip, lsl sp

0002933c <getDataOperand@@Base>:
   2933c:	push	{r4, r5, r6, lr}
   29340:	mov	r6, r1
   29344:	mov	r1, r2
   29348:	mov	r5, r0
   2934c:	bl	29160 <findDataOperand@@Base>
   29350:	cmp	r0, #0
   29354:	popeq	{r4, r5, r6, pc}
   29358:	ldr	r3, [r5, #24]
   2935c:	b	29370 <getDataOperand@@Base+0x34>
   29360:	bl	f44c <iswspace@plt>
   29364:	mov	r3, r4
   29368:	cmp	r0, #0
   2936c:	bne	29384 <getDataOperand@@Base+0x48>
   29370:	add	r4, r3, #4
   29374:	str	r4, [r5, #24]
   29378:	ldr	r0, [r3, #4]
   2937c:	cmp	r0, #0
   29380:	bne	29360 <getDataOperand@@Base+0x24>
   29384:	ldr	r3, [r5, #20]
   29388:	mov	r0, #1
   2938c:	str	r3, [r6]
   29390:	ldr	r2, [r5, #24]
   29394:	ldr	r3, [r5, #20]
   29398:	rsb	r3, r3, r2
   2939c:	asr	r3, r3, #2
   293a0:	str	r3, [r6, #4]
   293a4:	pop	{r4, r5, r6, pc}

000293a8 <getDataText@@Base>:
   293a8:	push	{r4, r5, r6, lr}
   293ac:	mov	r6, r1
   293b0:	mov	r1, r2
   293b4:	mov	r4, r0
   293b8:	bl	29160 <findDataOperand@@Base>
   293bc:	cmp	r0, #0
   293c0:	popeq	{r4, r5, r6, pc}
   293c4:	ldr	r5, [r4, #20]
   293c8:	mov	r0, r5
   293cc:	bl	f410 <wcslen@plt>
   293d0:	add	r0, r5, r0, lsl #2
   293d4:	str	r0, [r4, #24]
   293d8:	str	r5, [r6]
   293dc:	ldr	r2, [r4, #24]
   293e0:	ldr	r3, [r4, #20]
   293e4:	rsb	r3, r3, r2
   293e8:	asr	r3, r3, #2
   293ec:	str	r3, [r6, #4]
   293f0:	cmp	r3, #0
   293f4:	addne	r5, r5, r3, lsl #2
   293f8:	bne	2940c <getDataText@@Base+0x64>
   293fc:	b	29424 <getDataText@@Base+0x7c>
   29400:	cmp	r4, #0
   29404:	str	r4, [r6, #4]
   29408:	beq	29424 <getDataText@@Base+0x7c>
   2940c:	ldr	r0, [r5, #-4]!
   29410:	sub	r4, r3, #1
   29414:	bl	f44c <iswspace@plt>
   29418:	mov	r3, r4
   2941c:	cmp	r0, #0
   29420:	bne	29400 <getDataText@@Base+0x58>
   29424:	mov	r0, #1
   29428:	pop	{r4, r5, r6, pc}

0002942c <parseDataString@@Base>:
   2942c:	ldr	ip, [pc, #1444]	; 299d8 <parseDataString@@Base+0x5ac>
   29430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29434:	subs	sl, r3, #0
   29438:	add	fp, sp, #32
   2943c:	ldr	r3, [pc, #1432]	; 299dc <parseDataString@@Base+0x5b0>
   29440:	sub	sp, sp, #76	; 0x4c
   29444:	add	ip, pc, ip
   29448:	str	ip, [fp, #-80]	; 0xffffffb0
   2944c:	str	r0, [fp, #-92]	; 0xffffffa4
   29450:	mov	r4, #0
   29454:	ldr	r3, [ip, r3]
   29458:	mov	r6, r1
   2945c:	mov	r7, r2
   29460:	str	r3, [fp, #-84]	; 0xffffffac
   29464:	ldr	r3, [r3]
   29468:	strb	r4, [r1]
   2946c:	str	r3, [fp, #-40]	; 0xffffffd8
   29470:	ble	29964 <parseDataString@@Base+0x538>
   29474:	ldr	r1, [pc, #1380]	; 299e0 <parseDataString@@Base+0x5b4>
   29478:	sub	r2, fp, #48	; 0x30
   2947c:	str	r2, [fp, #-68]	; 0xffffffbc
   29480:	add	r1, pc, r1
   29484:	str	r1, [fp, #-76]	; 0xffffffb4
   29488:	b	294c4 <parseDataString@@Base+0x98>
   2948c:	sub	r1, fp, #56	; 0x38
   29490:	mov	r2, #1
   29494:	ldrb	r0, [r6]
   29498:	add	r4, r4, #1
   2949c:	add	r5, r2, r0
   294a0:	cmp	r5, #254	; 0xfe
   294a4:	bhi	29994 <parseDataString@@Base+0x568>
   294a8:	add	r0, r6, r0, lsl #2
   294ac:	uxtb	r5, r5
   294b0:	add	r0, r0, #4
   294b4:	bl	f620 <wmemcpy@plt>
   294b8:	cmp	sl, r4
   294bc:	strb	r5, [r6]
   294c0:	ble	29968 <parseDataString@@Base+0x53c>
   294c4:	ldr	r3, [r7, r4, lsl #2]
   294c8:	lsl	r2, r4, #2
   294cc:	add	ip, r7, r2
   294d0:	str	ip, [fp, #-64]	; 0xffffffc0
   294d4:	cmp	r3, #92	; 0x5c
   294d8:	str	r3, [fp, #-56]	; 0xffffffc8
   294dc:	bne	2948c <parseDataString@@Base+0x60>
   294e0:	add	r5, r4, #1
   294e4:	cmp	sl, r5
   294e8:	ble	296f0 <parseDataString@@Base+0x2c4>
   294ec:	add	r1, r2, #4
   294f0:	add	r3, r7, r1
   294f4:	ldr	r0, [r7, r1]
   294f8:	sub	r1, r0, #35	; 0x23
   294fc:	str	r0, [fp, #-56]	; 0xffffffc8
   29500:	cmp	r1, #88	; 0x58
   29504:	addls	pc, pc, r1, lsl #2
   29508:	b	296e8 <parseDataString@@Base+0x2bc>
   2950c:	b	29728 <parseDataString@@Base+0x2fc>
   29510:	b	296e8 <parseDataString@@Base+0x2bc>
   29514:	b	296e8 <parseDataString@@Base+0x2bc>
   29518:	b	296e8 <parseDataString@@Base+0x2bc>
   2951c:	b	296e8 <parseDataString@@Base+0x2bc>
   29520:	b	296e8 <parseDataString@@Base+0x2bc>
   29524:	b	296e8 <parseDataString@@Base+0x2bc>
   29528:	b	296e8 <parseDataString@@Base+0x2bc>
   2952c:	b	296e8 <parseDataString@@Base+0x2bc>
   29530:	b	296e8 <parseDataString@@Base+0x2bc>
   29534:	b	296e8 <parseDataString@@Base+0x2bc>
   29538:	b	296e8 <parseDataString@@Base+0x2bc>
   2953c:	b	296e8 <parseDataString@@Base+0x2bc>
   29540:	b	296e8 <parseDataString@@Base+0x2bc>
   29544:	b	296e8 <parseDataString@@Base+0x2bc>
   29548:	b	296e8 <parseDataString@@Base+0x2bc>
   2954c:	b	296e8 <parseDataString@@Base+0x2bc>
   29550:	b	296e8 <parseDataString@@Base+0x2bc>
   29554:	b	296e8 <parseDataString@@Base+0x2bc>
   29558:	b	296e8 <parseDataString@@Base+0x2bc>
   2955c:	b	296e8 <parseDataString@@Base+0x2bc>
   29560:	b	296e8 <parseDataString@@Base+0x2bc>
   29564:	b	296e8 <parseDataString@@Base+0x2bc>
   29568:	b	296e8 <parseDataString@@Base+0x2bc>
   2956c:	b	296e8 <parseDataString@@Base+0x2bc>
   29570:	b	29754 <parseDataString@@Base+0x328>
   29574:	b	296e8 <parseDataString@@Base+0x2bc>
   29578:	b	296e8 <parseDataString@@Base+0x2bc>
   2957c:	b	296e8 <parseDataString@@Base+0x2bc>
   29580:	b	296e8 <parseDataString@@Base+0x2bc>
   29584:	b	296e8 <parseDataString@@Base+0x2bc>
   29588:	b	296e8 <parseDataString@@Base+0x2bc>
   2958c:	b	296e8 <parseDataString@@Base+0x2bc>
   29590:	b	296e8 <parseDataString@@Base+0x2bc>
   29594:	b	296e8 <parseDataString@@Base+0x2bc>
   29598:	b	296e8 <parseDataString@@Base+0x2bc>
   2959c:	b	296e8 <parseDataString@@Base+0x2bc>
   295a0:	b	296e8 <parseDataString@@Base+0x2bc>
   295a4:	b	296e8 <parseDataString@@Base+0x2bc>
   295a8:	b	296e8 <parseDataString@@Base+0x2bc>
   295ac:	b	296e8 <parseDataString@@Base+0x2bc>
   295b0:	b	296e8 <parseDataString@@Base+0x2bc>
   295b4:	b	296e8 <parseDataString@@Base+0x2bc>
   295b8:	b	296e8 <parseDataString@@Base+0x2bc>
   295bc:	b	296e8 <parseDataString@@Base+0x2bc>
   295c0:	b	296e8 <parseDataString@@Base+0x2bc>
   295c4:	b	296e8 <parseDataString@@Base+0x2bc>
   295c8:	b	296e8 <parseDataString@@Base+0x2bc>
   295cc:	b	296e8 <parseDataString@@Base+0x2bc>
   295d0:	b	296e8 <parseDataString@@Base+0x2bc>
   295d4:	b	29730 <parseDataString@@Base+0x304>
   295d8:	b	296e8 <parseDataString@@Base+0x2bc>
   295dc:	b	296e8 <parseDataString@@Base+0x2bc>
   295e0:	b	29670 <parseDataString@@Base+0x244>
   295e4:	b	296e8 <parseDataString@@Base+0x2bc>
   295e8:	b	296e8 <parseDataString@@Base+0x2bc>
   295ec:	b	296e8 <parseDataString@@Base+0x2bc>
   295f0:	b	29728 <parseDataString@@Base+0x2fc>
   295f4:	b	296e8 <parseDataString@@Base+0x2bc>
   295f8:	b	296e8 <parseDataString@@Base+0x2bc>
   295fc:	b	296e8 <parseDataString@@Base+0x2bc>
   29600:	b	296e8 <parseDataString@@Base+0x2bc>
   29604:	b	296e8 <parseDataString@@Base+0x2bc>
   29608:	b	29938 <parseDataString@@Base+0x50c>
   2960c:	b	296e8 <parseDataString@@Base+0x2bc>
   29610:	b	296e8 <parseDataString@@Base+0x2bc>
   29614:	b	296e8 <parseDataString@@Base+0x2bc>
   29618:	b	29928 <parseDataString@@Base+0x4fc>
   2961c:	b	296e8 <parseDataString@@Base+0x2bc>
   29620:	b	296e8 <parseDataString@@Base+0x2bc>
   29624:	b	296e8 <parseDataString@@Base+0x2bc>
   29628:	b	296e8 <parseDataString@@Base+0x2bc>
   2962c:	b	296e8 <parseDataString@@Base+0x2bc>
   29630:	b	296e8 <parseDataString@@Base+0x2bc>
   29634:	b	296e8 <parseDataString@@Base+0x2bc>
   29638:	b	29918 <parseDataString@@Base+0x4ec>
   2963c:	b	29900 <parseDataString@@Base+0x4d4>
   29640:	b	296e8 <parseDataString@@Base+0x2bc>
   29644:	b	296e8 <parseDataString@@Base+0x2bc>
   29648:	b	298f0 <parseDataString@@Base+0x4c4>
   2964c:	b	298e0 <parseDataString@@Base+0x4b4>
   29650:	b	298d0 <parseDataString@@Base+0x4a4>
   29654:	b	298ac <parseDataString@@Base+0x480>
   29658:	b	2989c <parseDataString@@Base+0x470>
   2965c:	b	296e8 <parseDataString@@Base+0x2bc>
   29660:	b	29670 <parseDataString@@Base+0x244>
   29664:	b	296e8 <parseDataString@@Base+0x2bc>
   29668:	b	296e8 <parseDataString@@Base+0x2bc>
   2966c:	b	2982c <parseDataString@@Base+0x400>
   29670:	ldr	r2, [pc, #876]	; 299e4 <parseDataString@@Base+0x5b8>
   29674:	mov	r8, #2
   29678:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2967c:	ldr	r2, [r1, r2]
   29680:	str	r2, [fp, #-72]	; 0xffffffb8
   29684:	sub	ip, fp, #52	; 0x34
   29688:	mov	r9, #0
   2968c:	str	r4, [fp, #-88]	; 0xffffffa8
   29690:	mov	r4, r9
   29694:	str	r6, [fp, #-96]	; 0xffffffa0
   29698:	mov	r9, r3
   2969c:	ldr	r6, [fp, #-72]	; 0xffffffb8
   296a0:	str	r7, [fp, #-72]	; 0xffffffb8
   296a4:	mov	r7, ip
   296a8:	b	296d8 <parseDataString@@Base+0x2ac>
   296ac:	ldr	r0, [r9, #4]!
   296b0:	mov	r1, r7
   296b4:	sub	r2, fp, #48	; 0x30
   296b8:	blx	r6
   296bc:	cmp	r0, #0
   296c0:	beq	296e4 <parseDataString@@Base+0x2b8>
   296c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   296c8:	subs	r8, r8, #1
   296cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   296d0:	orr	r4, r2, r4, lsl r1
   296d4:	beq	299ac <parseDataString@@Base+0x580>
   296d8:	add	r5, r5, #1
   296dc:	cmp	r5, sl
   296e0:	bne	296ac <parseDataString@@Base+0x280>
   296e4:	ldr	r4, [fp, #-88]	; 0xffffffa8
   296e8:	cmp	sl, r5
   296ec:	addgt	r5, r5, #1
   296f0:	ldr	r1, [pc, #752]	; 299e8 <parseDataString@@Base+0x5bc>
   296f4:	mov	r2, #5
   296f8:	mov	r0, #0
   296fc:	add	r1, pc, r1
   29700:	bl	f9bc <dcgettext@plt>
   29704:	ldr	ip, [fp, #-64]	; 0xffffffc0
   29708:	ldr	r1, [pc, #732]	; 299ec <parseDataString@@Base+0x5c0>
   2970c:	rsb	r3, r4, r5
   29710:	str	ip, [sp]
   29714:	add	r1, pc, r1
   29718:	mov	r2, r0
   2971c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   29720:	bl	28dec <reportDataError@@Base>
   29724:	b	299a4 <parseDataString@@Base+0x578>
   29728:	mov	r4, r5
   2972c:	b	2948c <parseDataString@@Base+0x60>
   29730:	ldr	ip, [fp, #4]
   29734:	cmp	ip, #0
   29738:	bne	296e8 <parseDataString@@Base+0x2bc>
   2973c:	ldr	r2, [pc, #672]	; 299e4 <parseDataString@@Base+0x5b8>
   29740:	mov	r8, #8
   29744:	ldr	r1, [fp, #-80]	; 0xffffffb0
   29748:	ldr	r2, [r1, r2]
   2974c:	str	r2, [fp, #-72]	; 0xffffffb8
   29750:	b	29684 <parseDataString@@Base+0x258>
   29754:	add	r2, r2, #8
   29758:	add	r5, r4, #2
   2975c:	add	r9, r7, r2
   29760:	mov	r1, #62	; 0x3e
   29764:	rsb	r2, r5, sl
   29768:	mov	r0, r9
   2976c:	bl	f7a0 <wmemchr@plt>
   29770:	ldr	r3, [fp, #4]
   29774:	cmp	r3, #0
   29778:	bne	296e8 <parseDataString@@Base+0x2bc>
   2977c:	cmp	r0, #0
   29780:	beq	299c8 <parseDataString@@Base+0x59c>
   29784:	rsb	ip, r9, r0
   29788:	mov	r8, sp
   2978c:	asr	lr, ip, #2
   29790:	add	r3, lr, #8
   29794:	cmp	lr, #0
   29798:	bic	r3, r3, #7
   2979c:	add	r5, r5, lr
   297a0:	sub	sp, sp, r3
   297a4:	subgt	r0, r9, #4
   297a8:	add	r1, sp, #8
   297ac:	addgt	lr, r1, lr
   297b0:	movgt	r2, r1
   297b4:	bgt	297d4 <parseDataString@@Base+0x3a8>
   297b8:	b	297f0 <parseDataString@@Base+0x3c4>
   297bc:	cmp	r3, #255	; 0xff
   297c0:	bhi	299c0 <parseDataString@@Base+0x594>
   297c4:	uxtb	r3, r3
   297c8:	strb	r3, [r2], #1
   297cc:	cmp	r2, lr
   297d0:	beq	297f0 <parseDataString@@Base+0x3c4>
   297d4:	ldr	r3, [r0, #4]!
   297d8:	cmp	r3, #95	; 0x5f
   297dc:	bne	297bc <parseDataString@@Base+0x390>
   297e0:	mov	r3, #32
   297e4:	strb	r3, [r2], #1
   297e8:	cmp	r2, lr
   297ec:	bne	297d4 <parseDataString@@Base+0x3a8>
   297f0:	mov	r2, #0
   297f4:	mov	r0, #2
   297f8:	strb	r2, [r1, ip, asr #2]
   297fc:	sub	r2, fp, #48	; 0x30
   29800:	mov	r3, #0
   29804:	str	r3, [fp, #-48]	; 0xffffffd0
   29808:	bl	f890 <u_charFromName_50@plt>
   2980c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29810:	mov	r2, #1
   29814:	str	r0, [fp, #-56]	; 0xffffffc8
   29818:	sub	r1, fp, #56	; 0x38
   2981c:	cmp	r3, #0
   29820:	mov	sp, r8
   29824:	ble	29894 <parseDataString@@Base+0x468>
   29828:	b	296e8 <parseDataString@@Base+0x2bc>
   2982c:	add	r2, r2, #8
   29830:	add	r9, r4, #2
   29834:	add	r5, r7, r2
   29838:	mov	r1, #125	; 0x7d
   2983c:	rsb	r2, r9, sl
   29840:	mov	r0, r5
   29844:	bl	f7a0 <wmemchr@plt>
   29848:	cmp	r0, #0
   2984c:	beq	299c8 <parseDataString@@Base+0x59c>
   29850:	ldr	r2, [fp, #-92]	; 0xffffffa4
   29854:	rsb	r0, r5, r0
   29858:	str	r4, [fp, #-72]	; 0xffffffb8
   2985c:	sub	r4, fp, #48	; 0x30
   29860:	str	r5, [fp, #-48]	; 0xffffffd0
   29864:	asr	r5, r0, #2
   29868:	ldr	r8, [r2, #16]
   2986c:	str	r5, [fp, #-44]	; 0xffffffd4
   29870:	mov	r0, r8
   29874:	ldr	r1, [fp, #-76]	; 0xffffffb4
   29878:	mov	r2, r4
   2987c:	bl	2aebc <findItem@@Base>
   29880:	cmp	r0, #0
   29884:	beq	29948 <parseDataString@@Base+0x51c>
   29888:	ldr	r1, [r0, #8]
   2988c:	add	r5, r9, r5
   29890:	ldr	r2, [r0, #12]
   29894:	mov	r4, r5
   29898:	b	29494 <parseDataString@@Base+0x68>
   2989c:	mov	r3, #11
   298a0:	mov	r4, r5
   298a4:	str	r3, [fp, #-56]	; 0xffffffc8
   298a8:	b	2948c <parseDataString@@Base+0x60>
   298ac:	ldr	r2, [fp, #4]
   298b0:	cmp	r2, #0
   298b4:	bne	296e8 <parseDataString@@Base+0x2bc>
   298b8:	ldr	r2, [pc, #292]	; 299e4 <parseDataString@@Base+0x5b8>
   298bc:	mov	r8, #4
   298c0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   298c4:	ldr	r2, [ip, r2]
   298c8:	str	r2, [fp, #-72]	; 0xffffffb8
   298cc:	b	29684 <parseDataString@@Base+0x258>
   298d0:	mov	r3, #9
   298d4:	mov	r4, r5
   298d8:	str	r3, [fp, #-56]	; 0xffffffc8
   298dc:	b	2948c <parseDataString@@Base+0x60>
   298e0:	mov	r2, #32
   298e4:	mov	r4, r5
   298e8:	str	r2, [fp, #-56]	; 0xffffffc8
   298ec:	b	2948c <parseDataString@@Base+0x60>
   298f0:	mov	r3, #13
   298f4:	mov	r4, r5
   298f8:	str	r3, [fp, #-56]	; 0xffffffc8
   298fc:	b	2948c <parseDataString@@Base+0x60>
   29900:	ldr	r2, [pc, #232]	; 299f0 <parseDataString@@Base+0x5c4>
   29904:	mov	r8, #3
   29908:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2990c:	ldr	r2, [r1, r2]
   29910:	str	r2, [fp, #-72]	; 0xffffffb8
   29914:	b	29684 <parseDataString@@Base+0x258>
   29918:	mov	r3, #10
   2991c:	mov	r4, r5
   29920:	str	r3, [fp, #-56]	; 0xffffffc8
   29924:	b	2948c <parseDataString@@Base+0x60>
   29928:	mov	r3, #12
   2992c:	mov	r4, r5
   29930:	str	r3, [fp, #-56]	; 0xffffffc8
   29934:	b	2948c <parseDataString@@Base+0x60>
   29938:	mov	r3, #8
   2993c:	mov	r4, r5
   29940:	str	r3, [fp, #-56]	; 0xffffffc8
   29944:	b	2948c <parseDataString@@Base+0x60>
   29948:	mov	r0, r8
   2994c:	bl	2ac94 <getQueueData@@Base>
   29950:	subs	r8, r0, #0
   29954:	bne	29870 <parseDataString@@Base+0x444>
   29958:	ldr	r4, [fp, #-72]	; 0xffffffb8
   2995c:	add	r5, r9, r5
   29960:	b	296e8 <parseDataString@@Base+0x2bc>
   29964:	mov	r5, r4
   29968:	add	r6, r6, r5, lsl #2
   2996c:	mov	r0, #1
   29970:	mov	r3, #0
   29974:	str	r3, [r6, #4]
   29978:	ldr	r1, [fp, #-84]	; 0xffffffac
   2997c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29980:	ldr	r3, [r1]
   29984:	cmp	r2, r3
   29988:	bne	299d0 <parseDataString@@Base+0x5a4>
   2998c:	sub	sp, fp, #32
   29990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29994:	ldr	r1, [pc, #88]	; 299f4 <parseDataString@@Base+0x5c8>
   29998:	ldr	r0, [fp, #-92]	; 0xffffffa4
   2999c:	add	r1, pc, r1
   299a0:	bl	28dec <reportDataError@@Base>
   299a4:	mov	r0, #0
   299a8:	b	29978 <parseDataString@@Base+0x54c>
   299ac:	str	r4, [fp, #-56]	; 0xffffffc8
   299b0:	mov	r4, r5
   299b4:	ldr	r6, [fp, #-96]	; 0xffffffa0
   299b8:	ldr	r7, [fp, #-72]	; 0xffffffb8
   299bc:	b	2948c <parseDataString@@Base+0x60>
   299c0:	mov	sp, r8
   299c4:	b	296e8 <parseDataString@@Base+0x2bc>
   299c8:	sub	r5, sl, #1
   299cc:	b	296e8 <parseDataString@@Base+0x2bc>
   299d0:	bl	f950 <__stack_chk_fail@plt>
   299d4:	bl	fd04 <_Unwind_Resume@plt>
   299d8:	andeq	r9, r4, r4, lsr r6
   299dc:			; <UNDEFINED> instruction: 0x000003b4
   299e0:			; <UNDEFINED> instruction: 0xfffff72c
   299e4:	andeq	r0, r0, r4, lsl #8
   299e8:	andeq	r7, r2, r4, ror r9
   299ec:			; <UNDEFINED> instruction: 0x0002a3b8
   299f0:	strdeq	r0, [r0], -r4
   299f4:	andeq	r7, r2, ip, ror #13

000299f8 <getDataString@@Base>:
   299f8:	push	{r4, r5, r6, r7, lr}
   299fc:	mov	r5, r2
   29a00:	ldr	lr, [pc, #112]	; 29a78 <getDataString@@Base+0x80>
   29a04:	mov	r2, r3
   29a08:	ldr	ip, [pc, #108]	; 29a7c <getDataString@@Base+0x84>
   29a0c:	sub	sp, sp, #28
   29a10:	add	lr, pc, lr
   29a14:	mov	r6, r1
   29a18:	add	r1, sp, #12
   29a1c:	mov	r7, r0
   29a20:	ldr	r4, [lr, ip]
   29a24:	mov	r3, lr
   29a28:	ldr	r3, [r4]
   29a2c:	str	r3, [sp, #20]
   29a30:	bl	2933c <getDataOperand@@Base>
   29a34:	cmp	r0, #0
   29a38:	beq	29a5c <getDataString@@Base+0x64>
   29a3c:	ldr	r2, [sp, #12]
   29a40:	mov	r0, r7
   29a44:	ldr	r3, [sp, #16]
   29a48:	mov	r1, r6
   29a4c:	str	r5, [sp]
   29a50:	bl	2942c <parseDataString@@Base>
   29a54:	adds	r0, r0, #0
   29a58:	movne	r0, #1
   29a5c:	ldr	r2, [sp, #20]
   29a60:	ldr	r3, [r4]
   29a64:	cmp	r2, r3
   29a68:	bne	29a74 <getDataString@@Base+0x7c>
   29a6c:	add	sp, sp, #28
   29a70:	pop	{r4, r5, r6, r7, pc}
   29a74:	bl	f950 <__stack_chk_fail@plt>
   29a78:	andeq	r9, r4, r8, rrx
   29a7c:			; <UNDEFINED> instruction: 0x000003b4

00029a80 <getDotOperand@@Base>:
   29a80:	ldr	r3, [pc, #160]	; 29b28 <getDotOperand@@Base+0xa8>
   29a84:	ldr	ip, [pc, #160]	; 29b2c <getDotOperand@@Base+0xac>
   29a88:	add	r3, pc, r3
   29a8c:	ldr	r2, [pc, #156]	; 29b30 <getDotOperand@@Base+0xb0>
   29a90:	push	{r4, r5, r6, r7, r8, lr}
   29a94:	sub	sp, sp, #16
   29a98:	ldr	r5, [r3, ip]
   29a9c:	mov	r6, r1
   29aa0:	add	r2, pc, r2
   29aa4:	add	r1, sp, #4
   29aa8:	mov	r7, r0
   29aac:	ldr	r3, [r5]
   29ab0:	str	r3, [sp, #12]
   29ab4:	bl	2933c <getDataOperand@@Base>
   29ab8:	subs	r4, r0, #0
   29abc:	bne	29adc <getDotOperand@@Base+0x5c>
   29ac0:	ldr	r2, [sp, #12]
   29ac4:	mov	r0, r4
   29ac8:	ldr	r3, [r5]
   29acc:	cmp	r2, r3
   29ad0:	bne	29b24 <getDotOperand@@Base+0xa4>
   29ad4:	add	sp, sp, #16
   29ad8:	pop	{r4, r5, r6, r7, r8, pc}
   29adc:	ldr	r4, [sp, #8]
   29ae0:	ldr	r8, [sp, #4]
   29ae4:	cmp	r4, #1
   29ae8:	beq	29b0c <getDotOperand@@Base+0x8c>
   29aec:	ldr	r1, [pc, #64]	; 29b34 <getDotOperand@@Base+0xb4>
   29af0:	mov	r2, r4
   29af4:	mov	r0, r7
   29af8:	mov	r3, r8
   29afc:	add	r1, pc, r1
   29b00:	mov	r4, #0
   29b04:	bl	28dec <reportDataError@@Base>
   29b08:	b	29ac0 <getDotOperand@@Base+0x40>
   29b0c:	mov	r1, r6
   29b10:	ldr	r0, [r8]
   29b14:	bl	28d60 <brlDotNumberToIndex@@Base>
   29b18:	cmp	r0, #0
   29b1c:	beq	29aec <getDotOperand@@Base+0x6c>
   29b20:	b	29ac0 <getDotOperand@@Base+0x40>
   29b24:	bl	f950 <__stack_chk_fail@plt>
   29b28:	strdeq	r8, [r4], -r0
   29b2c:			; <UNDEFINED> instruction: 0x000003b4
   29b30:	andeq	r7, r2, r0, lsl #12
   29b34:			; <UNDEFINED> instruction: 0x000275b0

00029b38 <processAssignOperands@@Base>:
   29b38:	ldr	r3, [pc, #200]	; 29c08 <processAssignOperands@@Base+0xd0>
   29b3c:	ldr	ip, [pc, #200]	; 29c0c <processAssignOperands@@Base+0xd4>
   29b40:	add	r3, pc, r3
   29b44:	ldr	r2, [pc, #196]	; 29c10 <processAssignOperands@@Base+0xd8>
   29b48:	push	{r4, r5, r6, lr}
   29b4c:	sub	sp, sp, #24
   29b50:	ldr	r4, [r3, ip]
   29b54:	add	r5, sp, #4
   29b58:	add	r2, pc, r2
   29b5c:	mov	r6, r0
   29b60:	mov	r1, r5
   29b64:	ldr	r3, [r4]
   29b68:	str	r3, [sp, #20]
   29b6c:	bl	2933c <getDataOperand@@Base>
   29b70:	cmp	r0, #0
   29b74:	bne	29b94 <processAssignOperands@@Base+0x5c>
   29b78:	ldr	r2, [sp, #20]
   29b7c:	mov	r0, #1
   29b80:	ldr	r3, [r4]
   29b84:	cmp	r2, r3
   29b88:	bne	29c04 <processAssignOperands@@Base+0xcc>
   29b8c:	add	sp, sp, #24
   29b90:	pop	{r4, r5, r6, pc}
   29b94:	mov	r0, r6
   29b98:	add	r1, sp, #12
   29b9c:	mov	r2, #0
   29ba0:	bl	2933c <getDataOperand@@Base>
   29ba4:	ldr	r6, [r6, #16]
   29ba8:	ldr	r1, [pc, #100]	; 29c14 <processAssignOperands@@Base+0xdc>
   29bac:	mov	r2, r5
   29bb0:	add	r1, pc, r1
   29bb4:	cmp	r0, #0
   29bb8:	streq	r0, [sp, #12]
   29bbc:	streq	r0, [sp, #16]
   29bc0:	mov	r0, r6
   29bc4:	bl	2aebc <findItem@@Base>
   29bc8:	cmp	r0, #0
   29bcc:	movne	r1, r0
   29bd0:	beq	29bec <processAssignOperands@@Base+0xb4>
   29bd4:	add	r0, r1, #8
   29bd8:	ldr	r2, [sp, #12]
   29bdc:	add	r1, r1, #12
   29be0:	ldr	r3, [sp, #16]
   29be4:	bl	28c9c <isOctalDigit@@Base+0x13c>
   29be8:	b	29b78 <processAssignOperands@@Base+0x40>
   29bec:	mov	r1, r5
   29bf0:	mov	r0, r6
   29bf4:	bl	28be8 <isOctalDigit@@Base+0x88>
   29bf8:	subs	r1, r0, #0
   29bfc:	beq	29b78 <processAssignOperands@@Base+0x40>
   29c00:	b	29bd4 <processAssignOperands@@Base+0x9c>
   29c04:	bl	f950 <__stack_chk_fail@plt>
   29c08:	andeq	r8, r4, r8, lsr pc
   29c0c:			; <UNDEFINED> instruction: 0x000003b4
   29c10:	andeq	r7, r2, r8, ror r5
   29c14:			; <UNDEFINED> instruction: 0xffffeffc

00029c18 <processPropertyOperand@@Base>:
   29c18:	ldr	ip, [pc, #220]	; 29cfc <processPropertyOperand@@Base+0xe4>
   29c1c:	push	{r4, r5, r6, r7, r8, lr}
   29c20:	add	ip, pc, ip
   29c24:	ldr	lr, [pc, #212]	; 29d00 <processPropertyOperand@@Base+0xe8>
   29c28:	mov	r7, r3
   29c2c:	sub	sp, sp, #24
   29c30:	mov	r4, r1
   29c34:	add	r1, sp, #12
   29c38:	mov	r6, r0
   29c3c:	ldr	r5, [ip, lr]
   29c40:	mov	r8, r2
   29c44:	ldr	r3, [r5]
   29c48:	str	r3, [sp, #20]
   29c4c:	bl	2933c <getDataOperand@@Base>
   29c50:	cmp	r0, #0
   29c54:	moveq	r0, #1
   29c58:	beq	29c9c <processPropertyOperand@@Base+0x84>
   29c5c:	ldr	r0, [r4]
   29c60:	cmp	r0, #0
   29c64:	bne	29c78 <processPropertyOperand@@Base+0x60>
   29c68:	b	29cb4 <processPropertyOperand@@Base+0x9c>
   29c6c:	ldr	r0, [r4, #8]!
   29c70:	cmp	r0, #0
   29c74:	beq	29cb4 <processPropertyOperand@@Base+0x9c>
   29c78:	ldr	r1, [sp, #12]
   29c7c:	ldr	r2, [sp, #16]
   29c80:	bl	28e98 <isKeyword@@Base>
   29c84:	cmp	r0, #0
   29c88:	beq	29c6c <processPropertyOperand@@Base+0x54>
   29c8c:	ldr	r3, [r4, #4]
   29c90:	mov	r0, r6
   29c94:	mov	r1, r7
   29c98:	blx	r3
   29c9c:	ldr	r2, [sp, #20]
   29ca0:	ldr	r3, [r5]
   29ca4:	cmp	r2, r3
   29ca8:	bne	29cf8 <processPropertyOperand@@Base+0xe0>
   29cac:	add	sp, sp, #24
   29cb0:	pop	{r4, r5, r6, r7, r8, pc}
   29cb4:	ldr	r3, [r4, #4]
   29cb8:	cmp	r3, #0
   29cbc:	beq	29cd0 <processPropertyOperand@@Base+0xb8>
   29cc0:	mov	r0, r6
   29cc4:	ldr	r1, [sp, #16]
   29cc8:	bl	292f0 <ungetDataCharacters@@Base>
   29ccc:	b	29c8c <processPropertyOperand@@Base+0x74>
   29cd0:	ldr	ip, [sp, #12]
   29cd4:	mov	r0, r6
   29cd8:	ldr	r1, [pc, #36]	; 29d04 <processPropertyOperand@@Base+0xec>
   29cdc:	mov	r2, r8
   29ce0:	ldr	r3, [sp, #16]
   29ce4:	add	r1, pc, r1
   29ce8:	str	ip, [sp]
   29cec:	bl	28dec <reportDataError@@Base>
   29cf0:	mov	r0, #1
   29cf4:	b	29c9c <processPropertyOperand@@Base+0x84>
   29cf8:	bl	f950 <__stack_chk_fail@plt>
   29cfc:	andeq	r8, r4, r8, asr lr
   29d00:			; <UNDEFINED> instruction: 0x000003b4
   29d04:	strdeq	r7, [r2], -ip

00029d08 <processDataStream@@Base>:
   29d08:	ldr	ip, [pc, #204]	; 29ddc <processDataStream@@Base+0xd4>
   29d0c:	push	{r4, r5, r6, r7, lr}
   29d10:	add	ip, pc, ip
   29d14:	ldr	lr, [pc, #196]	; 29de0 <processDataStream@@Base+0xd8>
   29d18:	sub	sp, sp, #36	; 0x24
   29d1c:	subs	r6, r0, #0
   29d20:	mov	r7, r1
   29d24:	ldr	r5, [sp, #56]	; 0x38
   29d28:	mov	r1, #0
   29d2c:	ldr	r4, [ip, lr]
   29d30:	str	r3, [sp, #8]
   29d34:	str	r2, [sp]
   29d38:	ldr	r3, [r4]
   29d3c:	str	r5, [sp, #12]
   29d40:	str	r1, [sp, #4]
   29d44:	str	r3, [sp, #28]
   29d48:	beq	29dc0 <processDataStream@@Base+0xb8>
   29d4c:	ldr	r1, [pc, #144]	; 29de4 <processDataStream@@Base+0xdc>
   29d50:	mov	r0, #7
   29d54:	add	r1, pc, r1
   29d58:	bl	1c634 <logMessage@@Base>
   29d5c:	ldr	r0, [pc, #132]	; 29de8 <processDataStream@@Base+0xe0>
   29d60:	mov	r1, #0
   29d64:	add	r0, pc, r0
   29d68:	bl	2abf4 <newQueue@@Base>
   29d6c:	subs	r5, r0, #0
   29d70:	beq	29dd0 <processDataStream@@Base+0xc8>
   29d74:	mov	r1, r6
   29d78:	bl	2ac9c <setQueueData@@Base>
   29d7c:	ldr	r1, [pc, #104]	; 29dec <processDataStream@@Base+0xe4>
   29d80:	mov	r0, r7
   29d84:	mov	r2, sp
   29d88:	add	r1, pc, r1
   29d8c:	str	r5, [sp, #16]
   29d90:	bl	1d49c <processLines@@Base>
   29d94:	adds	r5, r0, #0
   29d98:	ldr	r0, [sp, #16]
   29d9c:	movne	r5, #1
   29da0:	bl	2ac6c <deallocateQueue@@Base>
   29da4:	ldr	r2, [sp, #28]
   29da8:	mov	r0, r5
   29dac:	ldr	r3, [r4]
   29db0:	cmp	r2, r3
   29db4:	bne	29dd8 <processDataStream@@Base+0xd0>
   29db8:	add	sp, sp, #36	; 0x24
   29dbc:	pop	{r4, r5, r6, r7, pc}
   29dc0:	bl	28d04 <isOctalDigit@@Base+0x1a4>
   29dc4:	subs	r6, r0, #0
   29dc8:	ldrne	r2, [sp]
   29dcc:	bne	29d4c <processDataStream@@Base+0x44>
   29dd0:	mov	r5, #0
   29dd4:	b	29da4 <processDataStream@@Base+0x9c>
   29dd8:	bl	f950 <__stack_chk_fail@plt>
   29ddc:	andeq	r8, r4, r8, ror #26
   29de0:			; <UNDEFINED> instruction: 0x000003b4
   29de4:	andeq	r7, r2, r0, lsr #7
   29de8:			; <UNDEFINED> instruction: 0xffffee14
   29dec:			; <UNDEFINED> instruction: 0xfffff440

00029df0 <includeDataFile@@Base>:
   29df0:	ldr	r3, [pc, #320]	; 29f38 <includeDataFile@@Base+0x148>
   29df4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29df8:	add	fp, sp, #32
   29dfc:	ldr	ip, [pc, #312]	; 29f3c <includeDataFile@@Base+0x14c>
   29e00:	sub	sp, sp, #36	; 0x24
   29e04:	add	r3, pc, r3
   29e08:	mov	r4, r0
   29e0c:	mov	r0, r1
   29e10:	ldr	r7, [r3, ip]
   29e14:	mov	r1, r2
   29e18:	sub	r2, fp, #44	; 0x2c
   29e1c:	ldr	r9, [r4]
   29e20:	ldr	r3, [r7]
   29e24:	str	r3, [fp, #-40]	; 0xffffffd8
   29e28:	bl	2826c <makeUtf8FromWchars@@Base>
   29e2c:	subs	r8, r0, #0
   29e30:	beq	29f28 <includeDataFile@@Base+0x138>
   29e34:	bl	1c838 <isAbsolutePath@@Base>
   29e38:	subs	r5, r0, #0
   29e3c:	movne	r5, #0
   29e40:	movne	lr, r5
   29e44:	beq	29f08 <includeDataFile@@Base+0x118>
   29e48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29e4c:	mov	r2, #1
   29e50:	mov	sl, sp
   29e54:	ldr	ip, [pc, #228]	; 29f40 <includeDataFile@@Base+0x150>
   29e58:	add	r1, r0, r2
   29e5c:	mvn	r3, #0
   29e60:	add	r1, r1, lr
   29e64:	add	ip, pc, ip
   29e68:	add	lr, r1, #7
   29e6c:	bic	lr, lr, #7
   29e70:	sub	sp, sp, lr
   29e74:	add	r6, sp, #24
   29e78:	str	r0, [sp, #12]
   29e7c:	str	r5, [sp, #4]
   29e80:	mov	r0, r6
   29e84:	str	ip, [sp]
   29e88:	str	r9, [sp, #8]
   29e8c:	str	r8, [sp, #16]
   29e90:	bl	fb60 <__snprintf_chk@plt>
   29e94:	ldr	r1, [pc, #168]	; 29f44 <includeDataFile@@Base+0x154>
   29e98:	mov	r0, r6
   29e9c:	mov	r2, #0
   29ea0:	add	r1, pc, r1
   29ea4:	bl	1d1c0 <openDataFile@@Base>
   29ea8:	subs	r5, r0, #0
   29eac:	moveq	r4, r5
   29eb0:	beq	29ee0 <includeDataFile@@Base+0xf0>
   29eb4:	ldr	ip, [r4, #12]
   29eb8:	mov	r2, r6
   29ebc:	ldr	r0, [r4, #16]
   29ec0:	mov	r1, r5
   29ec4:	ldr	r3, [r4, #8]
   29ec8:	str	ip, [sp]
   29ecc:	bl	29d08 <processDataStream@@Base>
   29ed0:	adds	r4, r0, #0
   29ed4:	mov	r0, r5
   29ed8:	movne	r4, #1
   29edc:	bl	fbc0 <fclose@plt>
   29ee0:	mov	r0, r8
   29ee4:	mov	sp, sl
   29ee8:	bl	f4f4 <free@plt>
   29eec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29ef0:	mov	r0, r4
   29ef4:	ldr	r3, [r7]
   29ef8:	cmp	r2, r3
   29efc:	bne	29f34 <includeDataFile@@Base+0x144>
   29f00:	sub	sp, fp, #32
   29f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29f08:	mov	r0, r9
   29f0c:	mov	r1, #47	; 0x2f
   29f10:	bl	fd34 <strrchr@plt>
   29f14:	cmp	r0, #0
   29f18:	rsbne	r5, r9, r0
   29f1c:	addne	r5, r5, #1
   29f20:	mov	lr, r5
   29f24:	b	29e48 <includeDataFile@@Base+0x58>
   29f28:	bl	1c740 <logMallocError@@Base>
   29f2c:	mov	r4, r8
   29f30:	b	29eec <includeDataFile@@Base+0xfc>
   29f34:	bl	f950 <__stack_chk_fail@plt>
   29f38:	andeq	r8, r4, r4, ror ip
   29f3c:			; <UNDEFINED> instruction: 0x000003b4
   29f40:	andeq	r7, r2, r8, lsr #5
   29f44:	andeq	lr, r2, ip, ror #3

00029f48 <processIncludeOperands@@Base>:
   29f48:	ldr	ip, [pc, #124]	; 29fcc <processIncludeOperands@@Base+0x84>
   29f4c:	mov	r2, #0
   29f50:	push	{r4, r5, r6, lr}
   29f54:	add	ip, pc, ip
   29f58:	ldr	lr, [pc, #112]	; 29fd0 <processIncludeOperands@@Base+0x88>
   29f5c:	sub	sp, sp, #1024	; 0x400
   29f60:	ldr	r3, [pc, #108]	; 29fd4 <processIncludeOperands@@Base+0x8c>
   29f64:	sub	sp, sp, #8
   29f68:	add	r1, sp, #4
   29f6c:	mov	r6, r0
   29f70:	ldr	r4, [ip, lr]
   29f74:	add	r3, pc, r3
   29f78:	add	r5, sp, #8
   29f7c:	ldr	ip, [r4]
   29f80:	str	ip, [sp, #1028]	; 0x404
   29f84:	bl	299f8 <getDataString@@Base>
   29f88:	cmp	r0, #0
   29f8c:	moveq	r0, #1
   29f90:	beq	29fac <processIncludeOperands@@Base+0x64>
   29f94:	mov	r0, r6
   29f98:	mov	r1, r5
   29f9c:	ldrb	r2, [sp, #4]
   29fa0:	bl	29df0 <includeDataFile@@Base>
   29fa4:	adds	r0, r0, #0
   29fa8:	movne	r0, #1
   29fac:	ldr	r2, [sp, #1028]	; 0x404
   29fb0:	ldr	r3, [r4]
   29fb4:	cmp	r2, r3
   29fb8:	bne	29fc8 <processIncludeOperands@@Base+0x80>
   29fbc:	add	sp, sp, #1024	; 0x400
   29fc0:	add	sp, sp, #8
   29fc4:	pop	{r4, r5, r6, pc}
   29fc8:	bl	f950 <__stack_chk_fail@plt>
   29fcc:	andeq	r8, r4, r4, lsr #22
   29fd0:			; <UNDEFINED> instruction: 0x000003b4
   29fd4:	andeq	r7, r2, r4, lsr #3

00029fd8 <processDataFile@@Base>:
   29fd8:	push	{r4, r5, r6, r7, lr}
   29fdc:	mov	r7, r1
   29fe0:	ldr	r1, [pc, #84]	; 2a03c <processDataFile@@Base+0x64>
   29fe4:	sub	sp, sp, #12
   29fe8:	mov	r6, r2
   29fec:	mov	r2, #0
   29ff0:	add	r1, pc, r1
   29ff4:	mov	r5, r0
   29ff8:	bl	1d1c0 <openDataFile@@Base>
   29ffc:	subs	r4, r0, #0
   2a000:	moveq	r5, r4
   2a004:	beq	2a030 <processDataFile@@Base+0x58>
   2a008:	mov	r2, r5
   2a00c:	str	r6, [sp]
   2a010:	mov	r3, r7
   2a014:	mov	r0, #0
   2a018:	mov	r1, r4
   2a01c:	bl	29d08 <processDataStream@@Base>
   2a020:	adds	r5, r0, #0
   2a024:	mov	r0, r4
   2a028:	movne	r5, #1
   2a02c:	bl	fbc0 <fclose@plt>
   2a030:	mov	r0, r5
   2a034:	add	sp, sp, #12
   2a038:	pop	{r4, r5, r6, r7, pc}
   2a03c:	muleq	r2, ip, r0
   2a040:	push	{r4, lr}
   2a044:	mov	r4, r0
   2a048:	bl	2a39c <subdestructHostCommandStream@@Base>
   2a04c:	ldr	r3, [r4]
   2a050:	ldr	r3, [r3]
   2a054:	ldr	r0, [r3]
   2a058:	cmp	r0, #0
   2a05c:	beq	2a074 <processDataFile@@Base+0x9c>
   2a060:	bl	fbc0 <fclose@plt>
   2a064:	ldr	r3, [r4]
   2a068:	mov	r2, #0
   2a06c:	ldr	r3, [r3]
   2a070:	str	r2, [r3]
   2a074:	mov	r0, #1
   2a078:	pop	{r4, pc}
   2a07c:	push	{r3, lr}
   2a080:	mov	r2, #0
   2a084:	ldr	r3, [r0]
   2a088:	ldr	r3, [r3]
   2a08c:	str	r2, [r3]
   2a090:	bl	2a38c <subconstructHostCommandStream@@Base>
   2a094:	mov	r0, #1
   2a098:	pop	{r3, pc}

0002a09c <processHostCommandStreams@@Base>:
   2a09c:	push	{r3, r4, r5, lr}
   2a0a0:	mov	r5, r0
   2a0a4:	ldr	r3, [r1]
   2a0a8:	cmp	r3, #0
   2a0ac:	movne	r4, r1
   2a0b0:	beq	2a0dc <processHostCommandStreams@@Base+0x40>
   2a0b4:	ldr	r3, [r3]
   2a0b8:	mov	r0, r4
   2a0bc:	cmp	r3, #0
   2a0c0:	beq	2a0d0 <processHostCommandStreams@@Base+0x34>
   2a0c4:	blx	r5
   2a0c8:	cmp	r0, #0
   2a0cc:	beq	2a0e4 <processHostCommandStreams@@Base+0x48>
   2a0d0:	ldr	r3, [r4, #20]!
   2a0d4:	cmp	r3, #0
   2a0d8:	bne	2a0b4 <processHostCommandStreams@@Base+0x18>
   2a0dc:	mov	r0, #1
   2a0e0:	pop	{r3, r4, r5, pc}
   2a0e4:	pop	{r3, r4, r5, pc}

0002a0e8 <initializeHostCommandOptions@@Base>:
   2a0e8:	ldrb	r2, [r0]
   2a0ec:	mov	r3, #0
   2a0f0:	str	r3, [r0, #4]
   2a0f4:	bfc	r2, #0, #1
   2a0f8:	str	r3, [r0, #8]
   2a0fc:	strb	r2, [r0]
   2a100:	str	r3, [r0, #12]
   2a104:	bx	lr

0002a108 <runHostCommand@@Base>:
   2a108:	push	{r4, r5, r6, r7, r8, lr}
   2a10c:	subs	r4, r1, #0
   2a110:	ldr	r6, [pc, #272]	; 2a228 <runHostCommand@@Base+0x120>
   2a114:	sub	sp, sp, #104	; 0x68
   2a118:	ldr	r3, [pc, #268]	; 2a22c <runHostCommand@@Base+0x124>
   2a11c:	mov	r2, #255	; 0xff
   2a120:	add	r6, pc, r6
   2a124:	mov	r8, r0
   2a128:	ldr	r7, [r6, r3]
   2a12c:	str	r2, [sp]
   2a130:	ldr	r3, [r7]
   2a134:	str	r3, [sp, #100]	; 0x64
   2a138:	beq	2a214 <runHostCommand@@Base+0x10c>
   2a13c:	ldr	r1, [pc, #236]	; 2a230 <runHostCommand@@Base+0x128>
   2a140:	add	r5, sp, #20
   2a144:	mov	r0, #7
   2a148:	ldr	r2, [r8]
   2a14c:	add	r1, pc, r1
   2a150:	bl	1c634 <logMessage@@Base>
   2a154:	mov	r1, #0
   2a158:	mov	r2, #80	; 0x50
   2a15c:	mov	r0, r5
   2a160:	bl	f6b0 <memset@plt>
   2a164:	ldr	r0, [pc, #200]	; 2a234 <runHostCommand@@Base+0x12c>
   2a168:	mov	r1, r5
   2a16c:	mov	r3, #1
   2a170:	add	r0, pc, r0
   2a174:	add	r2, r4, #4
   2a178:	strb	r3, [sp, #28]
   2a17c:	str	r2, [sp, #20]
   2a180:	add	r2, r4, #8
   2a184:	str	r3, [sp, #44]	; 0x2c
   2a188:	mov	r3, #2
   2a18c:	str	r2, [sp, #40]	; 0x28
   2a190:	add	r2, r4, #12
   2a194:	str	r3, [sp, #64]	; 0x40
   2a198:	str	r2, [sp, #60]	; 0x3c
   2a19c:	bl	2a09c <processHostCommandStreams@@Base>
   2a1a0:	cmp	r0, #0
   2a1a4:	bne	2a1c4 <runHostCommand@@Base+0xbc>
   2a1a8:	ldr	r2, [sp, #100]	; 0x64
   2a1ac:	ldr	r3, [r7]
   2a1b0:	ldr	r0, [sp]
   2a1b4:	cmp	r2, r3
   2a1b8:	bne	2a224 <runHostCommand@@Base+0x11c>
   2a1bc:	add	sp, sp, #104	; 0x68
   2a1c0:	pop	{r4, r5, r6, r7, r8, pc}
   2a1c4:	ldr	r3, [pc, #108]	; 2a238 <runHostCommand@@Base+0x130>
   2a1c8:	mov	r1, r5
   2a1cc:	ldr	r0, [r6, r3]
   2a1d0:	bl	2a09c <processHostCommandStreams@@Base>
   2a1d4:	cmp	r0, #0
   2a1d8:	bne	2a1f0 <runHostCommand@@Base+0xe8>
   2a1dc:	ldr	r0, [pc, #88]	; 2a23c <runHostCommand@@Base+0x134>
   2a1e0:	mov	r1, r5
   2a1e4:	add	r0, pc, r0
   2a1e8:	bl	2a09c <processHostCommandStreams@@Base>
   2a1ec:	b	2a1a8 <runHostCommand@@Base+0xa0>
   2a1f0:	ldrb	r3, [r4]
   2a1f4:	mov	r1, r8
   2a1f8:	mov	r0, sp
   2a1fc:	mov	r2, r5
   2a200:	and	r3, r3, #1
   2a204:	bl	2a408 <runCommand@@Base>
   2a208:	cmp	r0, #0
   2a20c:	beq	2a1dc <runHostCommand@@Base+0xd4>
   2a210:	b	2a1a8 <runHostCommand@@Base+0xa0>
   2a214:	add	r4, sp, #4
   2a218:	mov	r0, r4
   2a21c:	bl	2a0e8 <initializeHostCommandOptions@@Base>
   2a220:	b	2a13c <runHostCommand@@Base+0x34>
   2a224:	bl	f950 <__stack_chk_fail@plt>
   2a228:	andeq	r8, r4, r8, asr r9
   2a22c:			; <UNDEFINED> instruction: 0x000003b4
   2a230:	andeq	r6, r2, r0, ror #31
   2a234:			; <UNDEFINED> instruction: 0xffffff04
   2a238:	andeq	r0, r0, ip, lsr #9
   2a23c:			; <UNDEFINED> instruction: 0xfffffe54
   2a240:	push	{r4, r5, r6, r7, r8, lr}
   2a244:	mov	r4, r0
   2a248:	ldrb	r3, [r0, #8]
   2a24c:	tst	r3, #1
   2a250:	beq	2a2a4 <runHostCommand@@Base+0x19c>
   2a254:	ldr	r8, [pc, #112]	; 2a2cc <runHostCommand@@Base+0x1c4>
   2a258:	add	r6, r0, #16
   2a25c:	add	r5, r0, #12
   2a260:	add	r8, pc, r8
   2a264:	ldr	r0, [r5]
   2a268:	mvn	r7, #0
   2a26c:	bl	f764 <close@plt>
   2a270:	str	r7, [r5]
   2a274:	ldr	r3, [r4]
   2a278:	mov	r1, r8
   2a27c:	ldr	r0, [r6]
   2a280:	ldr	r5, [r3]
   2a284:	bl	f4d0 <fdopen@plt>
   2a288:	cmp	r0, #0
   2a28c:	mov	r4, r0
   2a290:	str	r0, [r5]
   2a294:	beq	2a2b8 <runHostCommand@@Base+0x1b0>
   2a298:	mov	r0, #1
   2a29c:	str	r7, [r6]
   2a2a0:	pop	{r4, r5, r6, r7, r8, pc}
   2a2a4:	ldr	r8, [pc, #36]	; 2a2d0 <runHostCommand@@Base+0x1c8>
   2a2a8:	add	r6, r0, #12
   2a2ac:	add	r5, r0, #16
   2a2b0:	add	r8, pc, r8
   2a2b4:	b	2a264 <runHostCommand@@Base+0x15c>
   2a2b8:	ldr	r0, [pc, #20]	; 2a2d4 <runHostCommand@@Base+0x1cc>
   2a2bc:	add	r0, pc, r0
   2a2c0:	bl	1c6fc <logSystemError@@Base>
   2a2c4:	mov	r0, r4
   2a2c8:	pop	{r4, r5, r6, r7, r8, pc}
   2a2cc:	strdeq	lr, [r2], -r8
   2a2d0:	ldrdeq	sp, [r2], -ip
   2a2d4:	andeq	r6, r2, ip, lsl #29
   2a2d8:	push	{r3, r4, r5, r6, r7, lr}
   2a2dc:	mov	r4, r0
   2a2e0:	ldrb	r3, [r0, #8]
   2a2e4:	mvn	r7, #0
   2a2e8:	tst	r3, #1
   2a2ec:	addne	r6, r0, #16
   2a2f0:	addeq	r6, r0, #12
   2a2f4:	addne	r5, r0, #12
   2a2f8:	addeq	r5, r0, #16
   2a2fc:	ldr	r0, [r6]
   2a300:	bl	f764 <close@plt>
   2a304:	str	r7, [r6]
   2a308:	ldr	r0, [r4, #4]
   2a30c:	bl	f764 <close@plt>
   2a310:	cmp	r0, r7
   2a314:	beq	2a344 <runHostCommand@@Base+0x23c>
   2a318:	ldr	r2, [r4, #4]
   2a31c:	mov	r1, #0
   2a320:	ldr	r0, [r5]
   2a324:	bl	f6e0 <fcntl@plt>
   2a328:	cmn	r0, #1
   2a32c:	beq	2a358 <runHostCommand@@Base+0x250>
   2a330:	ldr	r0, [r5]
   2a334:	bl	f764 <close@plt>
   2a338:	mov	r0, #1
   2a33c:	str	r7, [r5]
   2a340:	pop	{r3, r4, r5, r6, r7, pc}
   2a344:	ldr	r0, [pc, #32]	; 2a36c <runHostCommand@@Base+0x264>
   2a348:	add	r0, pc, r0
   2a34c:	bl	1c6fc <logSystemError@@Base>
   2a350:	mov	r0, #0
   2a354:	pop	{r3, r4, r5, r6, r7, pc}
   2a358:	ldr	r0, [pc, #16]	; 2a370 <runHostCommand@@Base+0x268>
   2a35c:	add	r0, pc, r0
   2a360:	bl	1c6fc <logSystemError@@Base>
   2a364:	mov	r0, #0
   2a368:	pop	{r3, r4, r5, r6, r7, pc}
   2a36c:	andeq	r5, r2, r0, asr #16
   2a370:	strdeq	r6, [r2], -r4

0002a374 <isHostCommand@@Base>:
   2a374:	push	{r3, lr}
   2a378:	mov	r1, #1
   2a37c:	bl	f9a4 <access@plt>
   2a380:	adds	r0, r0, #1
   2a384:	movne	r0, #1
   2a388:	pop	{r3, pc}

0002a38c <subconstructHostCommandStream@@Base>:
   2a38c:	mvn	r3, #0
   2a390:	str	r3, [r0, #16]
   2a394:	str	r3, [r0, #12]
   2a398:	bx	lr

0002a39c <subdestructHostCommandStream@@Base>:
   2a39c:	push	{r4, r5, r6, lr}
   2a3a0:	add	r4, r0, #12
   2a3a4:	add	r5, r0, #20
   2a3a8:	cmp	r4, r5
   2a3ac:	popcs	{r4, r5, r6, pc}
   2a3b0:	mvn	r6, #0
   2a3b4:	ldr	r0, [r4], #4
   2a3b8:	cmn	r0, #1
   2a3bc:	beq	2a3c8 <subdestructHostCommandStream@@Base+0x2c>
   2a3c0:	bl	f764 <close@plt>
   2a3c4:	str	r6, [r4, #-4]
   2a3c8:	cmp	r5, r4
   2a3cc:	bhi	2a3b4 <subdestructHostCommandStream@@Base+0x18>
   2a3d0:	pop	{r4, r5, r6, pc}

0002a3d4 <prepareHostCommandStream@@Base>:
   2a3d4:	push	{r3, lr}
   2a3d8:	add	r0, r0, #12
   2a3dc:	bl	fe18 <pipe@plt>
   2a3e0:	cmn	r0, #1
   2a3e4:	beq	2a3f0 <prepareHostCommandStream@@Base+0x1c>
   2a3e8:	mov	r0, #1
   2a3ec:	pop	{r3, pc}
   2a3f0:	ldr	r0, [pc, #12]	; 2a404 <prepareHostCommandStream@@Base+0x30>
   2a3f4:	add	r0, pc, r0
   2a3f8:	bl	1c6fc <logSystemError@@Base>
   2a3fc:	mov	r0, #0
   2a400:	pop	{r3, pc}
   2a404:	andeq	r5, r2, ip, lsl #15

0002a408 <runCommand@@Base>:
   2a408:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a40c:	sub	sp, sp, #264	; 0x108
   2a410:	ldr	lr, [pc, #524]	; 2a624 <runCommand@@Base+0x21c>
   2a414:	add	r4, sp, #4
   2a418:	ldr	ip, [pc, #520]	; 2a628 <runCommand@@Base+0x220>
   2a41c:	mov	r8, r3
   2a420:	add	lr, pc, lr
   2a424:	mov	sl, r0
   2a428:	add	r5, sp, #132	; 0x84
   2a42c:	mov	r0, r4
   2a430:	ldr	r6, [lr, ip]
   2a434:	mov	r9, r1
   2a438:	mov	r7, r2
   2a43c:	mov	r2, lr
   2a440:	ldr	r3, [r6]
   2a444:	str	r3, [sp, #260]	; 0x104
   2a448:	bl	fd28 <sigemptyset@plt>
   2a44c:	mov	r0, r4
   2a450:	mov	r1, #17
   2a454:	bl	f74c <sigaddset@plt>
   2a458:	mov	r1, r4
   2a45c:	mov	r2, r5
   2a460:	mov	r0, #0
   2a464:	bl	fdc4 <sigprocmask@plt>
   2a468:	bl	f974 <fork@plt>
   2a46c:	cmn	r0, #1
   2a470:	mov	r4, r0
   2a474:	beq	2a50c <runCommand@@Base+0x104>
   2a478:	cmp	r0, #0
   2a47c:	bne	2a4b0 <runCommand@@Base+0xa8>
   2a480:	mov	r2, r0
   2a484:	mov	r1, r5
   2a488:	mov	r0, #2
   2a48c:	bl	fdc4 <sigprocmask@plt>
   2a490:	ldr	r0, [pc, #404]	; 2a62c <runCommand@@Base+0x224>
   2a494:	mov	r1, r7
   2a498:	add	r0, pc, r0
   2a49c:	bl	2a09c <processHostCommandStreams@@Base>
   2a4a0:	cmp	r0, #0
   2a4a4:	bne	2a580 <runCommand@@Base+0x178>
   2a4a8:	mov	r0, #1
   2a4ac:	bl	fc44 <_exit@plt>
   2a4b0:	ldr	r0, [pc, #376]	; 2a630 <runCommand@@Base+0x228>
   2a4b4:	mov	r1, r7
   2a4b8:	add	r0, pc, r0
   2a4bc:	bl	2a09c <processHostCommandStreams@@Base>
   2a4c0:	cmp	r0, #0
   2a4c4:	moveq	r4, r0
   2a4c8:	beq	2a4e0 <runCommand@@Base+0xd8>
   2a4cc:	cmp	r8, #0
   2a4d0:	beq	2a520 <runCommand@@Base+0x118>
   2a4d4:	mov	r4, #1
   2a4d8:	mov	r3, #0
   2a4dc:	str	r3, [sl]
   2a4e0:	mov	r2, #0
   2a4e4:	mov	r1, r5
   2a4e8:	mov	r0, #2
   2a4ec:	bl	fdc4 <sigprocmask@plt>
   2a4f0:	ldr	r2, [sp, #260]	; 0x104
   2a4f4:	ldr	r3, [r6]
   2a4f8:	mov	r0, r4
   2a4fc:	cmp	r2, r3
   2a500:	bne	2a620 <runCommand@@Base+0x218>
   2a504:	add	sp, sp, #264	; 0x108
   2a508:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a50c:	ldr	r0, [pc, #288]	; 2a634 <runCommand@@Base+0x22c>
   2a510:	mov	r4, #0
   2a514:	add	r0, pc, r0
   2a518:	bl	1c6fc <logSystemError@@Base>
   2a51c:	b	2a4e0 <runCommand@@Base+0xd8>
   2a520:	mov	r0, r4
   2a524:	mov	r2, r8
   2a528:	mov	r1, sp
   2a52c:	bl	f8d8 <waitpid@plt>
   2a530:	cmn	r0, #1
   2a534:	beq	2a5e4 <runCommand@@Base+0x1dc>
   2a538:	ldr	r3, [sp]
   2a53c:	ands	r2, r3, #127	; 0x7f
   2a540:	beq	2a59c <runCommand@@Base+0x194>
   2a544:	add	r1, r2, #1
   2a548:	sbfx	r1, r1, #1, #7
   2a54c:	cmp	r1, #0
   2a550:	ble	2a5bc <runCommand@@Base+0x1b4>
   2a554:	ldr	r1, [pc, #220]	; 2a638 <runCommand@@Base+0x230>
   2a558:	mov	r0, #7
   2a55c:	str	r2, [sl]
   2a560:	add	r1, pc, r1
   2a564:	ldr	r3, [r9]
   2a568:	bl	1c634 <logMessage@@Base>
   2a56c:	ldr	r3, [sl]
   2a570:	add	r3, r3, #128	; 0x80
   2a574:	str	r3, [sl]
   2a578:	mov	r4, #1
   2a57c:	b	2a4e0 <runCommand@@Base+0xd8>
   2a580:	ldr	r0, [r9]
   2a584:	mov	r1, r9
   2a588:	bl	fd94 <execvp@plt>
   2a58c:	ldr	r0, [pc, #168]	; 2a63c <runCommand@@Base+0x234>
   2a590:	add	r0, pc, r0
   2a594:	bl	1c6fc <logSystemError@@Base>
   2a598:	b	2a4a8 <runCommand@@Base+0xa0>
   2a59c:	ldr	r1, [pc, #156]	; 2a640 <runCommand@@Base+0x238>
   2a5a0:	ubfx	r2, r3, #8, #8
   2a5a4:	mov	r0, #7
   2a5a8:	str	r2, [sl]
   2a5ac:	add	r1, pc, r1
   2a5b0:	ldr	r3, [r9]
   2a5b4:	bl	1c634 <logMessage@@Base>
   2a5b8:	b	2a578 <runCommand@@Base+0x170>
   2a5bc:	uxtb	r2, r3
   2a5c0:	cmp	r2, #127	; 0x7f
   2a5c4:	beq	2a5f4 <runCommand@@Base+0x1ec>
   2a5c8:	ldr	r1, [pc, #116]	; 2a644 <runCommand@@Base+0x23c>
   2a5cc:	mov	r2, r3
   2a5d0:	mov	r0, #7
   2a5d4:	ldr	r3, [r9]
   2a5d8:	add	r1, pc, r1
   2a5dc:	bl	1c634 <logMessage@@Base>
   2a5e0:	b	2a578 <runCommand@@Base+0x170>
   2a5e4:	ldr	r0, [pc, #92]	; 2a648 <runCommand@@Base+0x240>
   2a5e8:	add	r0, pc, r0
   2a5ec:	bl	1c6fc <logSystemError@@Base>
   2a5f0:	b	2a578 <runCommand@@Base+0x170>
   2a5f4:	ldr	r1, [pc, #80]	; 2a64c <runCommand@@Base+0x244>
   2a5f8:	ubfx	r2, r3, #8, #8
   2a5fc:	mov	r0, #7
   2a600:	str	r2, [sl]
   2a604:	add	r1, pc, r1
   2a608:	ldr	r3, [r9]
   2a60c:	bl	1c634 <logMessage@@Base>
   2a610:	ldr	r3, [sl]
   2a614:	add	r3, r3, #128	; 0x80
   2a618:	str	r3, [sl]
   2a61c:	b	2a578 <runCommand@@Base+0x170>
   2a620:	bl	f950 <__stack_chk_fail@plt>
   2a624:	andeq	r8, r4, r8, asr r6
   2a628:			; <UNDEFINED> instruction: 0x000003b4
   2a62c:			; <UNDEFINED> instruction: 0xfffffe38
   2a630:			; <UNDEFINED> instruction: 0xfffffd80
   2a634:	ldrdeq	r4, [r2], -r8
   2a638:	andeq	r6, r2, r4, lsr #24
   2a63c:	andeq	r4, r2, r4, ror #24
   2a640:			; <UNDEFINED> instruction: 0x00026bb4
   2a644:	strdeq	r6, [r2], -r8
   2a648:	andeq	r4, r2, r4, lsl ip
   2a64c:	andeq	r6, r2, r8, lsr #23

0002a650 <newLockDescriptor@@Base>:
   2a650:	push	{r4, lr}
   2a654:	mov	r0, #32
   2a658:	bl	fb48 <malloc@plt>
   2a65c:	subs	r4, r0, #0
   2a660:	beq	2a680 <newLockDescriptor@@Base+0x30>
   2a664:	mov	r1, #0
   2a668:	bl	fc38 <pthread_rwlock_init@plt>
   2a66c:	cmp	r0, #0
   2a670:	mov	r0, r4
   2a674:	bne	2a67c <newLockDescriptor@@Base+0x2c>
   2a678:	pop	{r4, pc}
   2a67c:	bl	f4f4 <free@plt>
   2a680:	mov	r0, #0
   2a684:	pop	{r4, pc}

0002a688 <freeLockDescriptor@@Base>:
   2a688:	push	{r4, lr}
   2a68c:	mov	r4, r0
   2a690:	bl	f47c <pthread_rwlock_destroy@plt>
   2a694:	mov	r0, r4
   2a698:	pop	{r4, lr}
   2a69c:	b	f4f4 <free@plt>

0002a6a0 <obtainLock@@Base>:
   2a6a0:	tst	r1, #1
   2a6a4:	push	{r3, lr}
   2a6a8:	beq	2a6c4 <obtainLock@@Base+0x24>
   2a6ac:	tst	r1, #2
   2a6b0:	beq	2a6d8 <obtainLock@@Base+0x38>
   2a6b4:	bl	fc08 <pthread_rwlock_trywrlock@plt>
   2a6b8:	rsbs	r0, r0, #1
   2a6bc:	movcc	r0, #0
   2a6c0:	pop	{r3, pc}
   2a6c4:	tst	r1, #2
   2a6c8:	bne	2a6e4 <obtainLock@@Base+0x44>
   2a6cc:	bl	f6f8 <pthread_rwlock_rdlock@plt>
   2a6d0:	mov	r0, #1
   2a6d4:	pop	{r3, pc}
   2a6d8:	bl	f944 <pthread_rwlock_wrlock@plt>
   2a6dc:	mov	r0, #1
   2a6e0:	pop	{r3, pc}
   2a6e4:	bl	f968 <pthread_rwlock_tryrdlock@plt>
   2a6e8:	rsbs	r0, r0, #1
   2a6ec:	movcc	r0, #0
   2a6f0:	pop	{r3, pc}

0002a6f4 <releaseLock@@Base>:
   2a6f4:	b	f92c <pthread_rwlock_unlock@plt>

0002a6f8 <getLockDescriptor@@Base>:
   2a6f8:	push	{r4, lr}
   2a6fc:	mov	r4, r0
   2a700:	ldr	r0, [r0]
   2a704:	cmp	r0, #0
   2a708:	popne	{r4, pc}
   2a70c:	ldr	r0, [pc, #48]	; 2a744 <getLockDescriptor@@Base+0x4c>
   2a710:	add	r0, pc, r0
   2a714:	bl	f3f8 <pthread_mutex_lock@plt>
   2a718:	ldr	r3, [r4]
   2a71c:	cmp	r3, #0
   2a720:	beq	2a738 <getLockDescriptor@@Base+0x40>
   2a724:	ldr	r0, [pc, #28]	; 2a748 <getLockDescriptor@@Base+0x50>
   2a728:	add	r0, pc, r0
   2a72c:	bl	fdf4 <pthread_mutex_unlock@plt>
   2a730:	ldr	r0, [r4]
   2a734:	pop	{r4, pc}
   2a738:	bl	2a650 <newLockDescriptor@@Base>
   2a73c:	str	r0, [r4]
   2a740:	b	2a724 <getLockDescriptor@@Base+0x2c>
   2a744:	ldrdeq	r9, [r4], -r4
   2a748:			; <UNDEFINED> instruction: 0x000494bc
   2a74c:	push	{r3, r4, r5, lr}
   2a750:	mov	r4, r0
   2a754:	mov	r0, #1
   2a758:	bl	2a9e8 <openMountsTable@@Base>
   2a75c:	subs	r5, r0, #0
   2a760:	beq	2a7c0 <getLockDescriptor@@Base+0xc8>
   2a764:	mov	r1, r4
   2a768:	bl	2aa70 <addMountEntry@@Base>
   2a76c:	mov	r0, r5
   2a770:	bl	2aa68 <closeMountsTable@@Base>
   2a774:	ldr	r0, [r4, #4]
   2a778:	cmp	r0, #0
   2a77c:	beq	2a784 <getLockDescriptor@@Base+0x8c>
   2a780:	bl	f4f4 <free@plt>
   2a784:	ldr	r0, [r4]
   2a788:	cmp	r0, #0
   2a78c:	beq	2a794 <getLockDescriptor@@Base+0x9c>
   2a790:	bl	f4f4 <free@plt>
   2a794:	ldr	r0, [r4, #8]
   2a798:	cmp	r0, #0
   2a79c:	beq	2a7a4 <getLockDescriptor@@Base+0xac>
   2a7a0:	bl	f4f4 <free@plt>
   2a7a4:	ldr	r0, [r4, #12]
   2a7a8:	cmp	r0, #0
   2a7ac:	beq	2a7b4 <getLockDescriptor@@Base+0xbc>
   2a7b0:	bl	f4f4 <free@plt>
   2a7b4:	mov	r0, r4
   2a7b8:	pop	{r3, r4, r5, lr}
   2a7bc:	b	f4f4 <free@plt>
   2a7c0:	bl	fca4 <__errno_location@plt>
   2a7c4:	ldr	r3, [r0]
   2a7c8:	cmp	r3, #30
   2a7cc:	cmpne	r3, #13
   2a7d0:	bne	2a774 <getLockDescriptor@@Base+0x7c>
   2a7d4:	ldr	r1, [pc, #16]	; 2a7ec <getLockDescriptor@@Base+0xf4>
   2a7d8:	mov	r2, r4
   2a7dc:	movw	r0, #5000	; 0x1388
   2a7e0:	add	r1, pc, r1
   2a7e4:	pop	{r3, r4, r5, lr}
   2a7e8:	b	27b48 <asyncRelativeAlarm@@Base>
   2a7ec:	andeq	r0, r0, r8
   2a7f0:	b	2a74c <getLockDescriptor@@Base+0x54>

0002a7f4 <findMountPoint@@Base>:
   2a7f4:	push	{r4, r5, r6, lr}
   2a7f8:	mov	r6, r0
   2a7fc:	mov	r0, #0
   2a800:	bl	2a9e8 <openMountsTable@@Base>
   2a804:	subs	r5, r0, #0
   2a808:	moveq	r4, r5
   2a80c:	bne	2a824 <findMountPoint@@Base+0x30>
   2a810:	b	2a83c <findMountPoint@@Base+0x48>
   2a814:	ldmib	r4, {r0, r1}
   2a818:	blx	r6
   2a81c:	cmp	r0, #0
   2a820:	bne	2a844 <findMountPoint@@Base+0x50>
   2a824:	mov	r0, r5
   2a828:	bl	2aa6c <readMountsTable@@Base>
   2a82c:	subs	r4, r0, #0
   2a830:	bne	2a814 <findMountPoint@@Base+0x20>
   2a834:	mov	r0, r5
   2a838:	bl	2aa68 <closeMountsTable@@Base>
   2a83c:	mov	r0, r4
   2a840:	pop	{r4, r5, r6, pc}
   2a844:	ldr	r0, [r4, #4]
   2a848:	bl	f740 <__strdup@plt>
   2a84c:	subs	r4, r0, #0
   2a850:	bne	2a834 <findMountPoint@@Base+0x40>
   2a854:	bl	1c740 <logMallocError@@Base>
   2a858:	b	2a834 <findMountPoint@@Base+0x40>

0002a85c <makeMountPoint@@Base>:
   2a85c:	push	{r4, r5, r6, r7, lr}
   2a860:	sub	sp, sp, #12
   2a864:	mov	r5, r0
   2a868:	mov	r6, r1
   2a86c:	mov	r7, r2
   2a870:	bl	1f788 <mountFileSystem@@Base>
   2a874:	subs	r4, r0, #0
   2a878:	beq	2a94c <makeMountPoint@@Base+0xf0>
   2a87c:	ldr	r1, [pc, #344]	; 2a9dc <makeMountPoint@@Base+0x180>
   2a880:	mov	r0, #5
   2a884:	mov	r2, r7
   2a888:	mov	r3, r6
   2a88c:	add	r1, pc, r1
   2a890:	str	r5, [sp]
   2a894:	bl	1c634 <logMessage@@Base>
   2a898:	mov	r0, #24
   2a89c:	bl	fb48 <malloc@plt>
   2a8a0:	subs	r4, r0, #0
   2a8a4:	beq	2a9bc <makeMountPoint@@Base+0x160>
   2a8a8:	mov	ip, r4
   2a8ac:	mov	lr, #0
   2a8b0:	str	lr, [ip], #4
   2a8b4:	add	ip, ip, #4
   2a8b8:	str	lr, [r4, #4]
   2a8bc:	mov	r0, r5
   2a8c0:	str	lr, [ip], #4
   2a8c4:	str	lr, [ip], #4
   2a8c8:	str	lr, [ip], #4
   2a8cc:	str	lr, [ip]
   2a8d0:	bl	f740 <__strdup@plt>
   2a8d4:	cmp	r0, #0
   2a8d8:	str	r0, [r4, #4]
   2a8dc:	beq	2a9c4 <makeMountPoint@@Base+0x168>
   2a8e0:	mov	r0, r6
   2a8e4:	bl	f740 <__strdup@plt>
   2a8e8:	cmp	r0, #0
   2a8ec:	str	r0, [r4]
   2a8f0:	beq	2a9cc <makeMountPoint@@Base+0x170>
   2a8f4:	mov	r0, r7
   2a8f8:	bl	f740 <__strdup@plt>
   2a8fc:	cmp	r0, #0
   2a900:	str	r0, [r4, #8]
   2a904:	beq	2a9d4 <makeMountPoint@@Base+0x178>
   2a908:	mov	r0, #3
   2a90c:	bl	fb48 <malloc@plt>
   2a910:	subs	r3, r0, #0
   2a914:	beq	2a984 <makeMountPoint@@Base+0x128>
   2a918:	ldr	r2, [pc, #192]	; 2a9e0 <makeMountPoint@@Base+0x184>
   2a91c:	mov	r0, r4
   2a920:	str	r3, [r4, #12]
   2a924:	mov	r4, #1
   2a928:	add	r2, pc, r2
   2a92c:	ldr	r2, [r2]
   2a930:	strh	r2, [r3]
   2a934:	lsr	r2, r2, #16
   2a938:	strb	r2, [r3, #2]
   2a93c:	bl	2a74c <getLockDescriptor@@Base+0x54>
   2a940:	mov	r0, r4
   2a944:	add	sp, sp, #12
   2a948:	pop	{r4, r5, r6, r7, pc}
   2a94c:	bl	fca4 <__errno_location@plt>
   2a950:	ldr	r0, [r0]
   2a954:	bl	f5c0 <strerror@plt>
   2a958:	ldr	r1, [pc, #132]	; 2a9e4 <makeMountPoint@@Base+0x188>
   2a95c:	str	r5, [sp]
   2a960:	mov	r2, r7
   2a964:	mov	r3, r6
   2a968:	add	r1, pc, r1
   2a96c:	str	r0, [sp, #4]
   2a970:	mov	r0, #3
   2a974:	bl	1c634 <logMessage@@Base>
   2a978:	mov	r0, r4
   2a97c:	add	sp, sp, #12
   2a980:	pop	{r4, r5, r6, r7, pc}
   2a984:	str	r3, [r4, #12]
   2a988:	bl	1c740 <logMallocError@@Base>
   2a98c:	ldr	r0, [r4, #8]
   2a990:	bl	f4f4 <free@plt>
   2a994:	ldr	r0, [r4]
   2a998:	bl	f4f4 <free@plt>
   2a99c:	ldr	r0, [r4, #4]
   2a9a0:	bl	f4f4 <free@plt>
   2a9a4:	mov	r0, r4
   2a9a8:	mov	r4, #0
   2a9ac:	bl	f4f4 <free@plt>
   2a9b0:	mov	r0, r4
   2a9b4:	add	sp, sp, #12
   2a9b8:	pop	{r4, r5, r6, r7, pc}
   2a9bc:	bl	1c740 <logMallocError@@Base>
   2a9c0:	b	2a978 <makeMountPoint@@Base+0x11c>
   2a9c4:	bl	1c740 <logMallocError@@Base>
   2a9c8:	b	2a9a4 <makeMountPoint@@Base+0x148>
   2a9cc:	bl	1c740 <logMallocError@@Base>
   2a9d0:	b	2a99c <makeMountPoint@@Base+0x140>
   2a9d4:	bl	1c740 <logMallocError@@Base>
   2a9d8:	b	2a994 <makeMountPoint@@Base+0x138>
   2a9dc:	andeq	r6, r2, ip, ror #18
   2a9e0:	strdeq	r6, [r2], -r4
   2a9e4:			; <UNDEFINED> instruction: 0x000268b8

0002a9e8 <openMountsTable@@Base>:
   2a9e8:	ldr	r1, [pc, #104]	; 2aa58 <openMountsTable@@Base+0x70>
   2a9ec:	cmp	r0, #0
   2a9f0:	push	{r4, r5, r6, lr}
   2a9f4:	add	r1, pc, r1
   2a9f8:	ldreq	r1, [pc, #92]	; 2aa5c <openMountsTable@@Base+0x74>
   2a9fc:	addeq	r1, pc, r1
   2aa00:	ldr	r4, [pc, #88]	; 2aa60 <openMountsTable@@Base+0x78>
   2aa04:	add	r4, pc, r4
   2aa08:	mov	r0, r4
   2aa0c:	bl	f9d4 <setmntent@plt>
   2aa10:	subs	r5, r0, #0
   2aa14:	beq	2aa20 <openMountsTable@@Base+0x38>
   2aa18:	mov	r0, r5
   2aa1c:	pop	{r4, r5, r6, pc}
   2aa20:	bl	fca4 <__errno_location@plt>
   2aa24:	ldr	r0, [r0]
   2aa28:	cmp	r0, #2
   2aa2c:	movne	r6, #3
   2aa30:	moveq	r6, #4
   2aa34:	bl	f5c0 <strerror@plt>
   2aa38:	ldr	r1, [pc, #36]	; 2aa64 <openMountsTable@@Base+0x7c>
   2aa3c:	mov	r2, r4
   2aa40:	add	r1, pc, r1
   2aa44:	mov	r3, r0
   2aa48:	mov	r0, r6
   2aa4c:	bl	1c634 <logMessage@@Base>
   2aa50:	mov	r0, r5
   2aa54:	pop	{r4, r5, r6, pc}
   2aa58:			; <UNDEFINED> instruction: 0x0002d1b0
   2aa5c:	muleq	r2, r0, r6
   2aa60:	andeq	r6, r2, r8, asr #16
   2aa64:	andeq	r6, r2, r8, lsl r8

0002aa68 <closeMountsTable@@Base>:
   2aa68:	b	f59c <endmntent@plt>

0002aa6c <readMountsTable@@Base>:
   2aa6c:	b	f650 <getmntent@plt>

0002aa70 <addMountEntry@@Base>:
   2aa70:	push	{r4, r5, r6, lr}
   2aa74:	sub	sp, sp, #8
   2aa78:	mov	r4, r1
   2aa7c:	bl	f920 <addmntent@plt>
   2aa80:	cmp	r0, #0
   2aa84:	moveq	r0, #1
   2aa88:	beq	2aac8 <addMountEntry@@Base+0x58>
   2aa8c:	bl	fca4 <__errno_location@plt>
   2aa90:	ldr	r6, [r4, #8]
   2aa94:	ldr	r5, [r4]
   2aa98:	ldr	r4, [r4, #4]
   2aa9c:	ldr	r0, [r0]
   2aaa0:	bl	f5c0 <strerror@plt>
   2aaa4:	ldr	r1, [pc, #36]	; 2aad0 <addMountEntry@@Base+0x60>
   2aaa8:	str	r4, [sp]
   2aaac:	mov	r2, r6
   2aab0:	mov	r3, r5
   2aab4:	add	r1, pc, r1
   2aab8:	str	r0, [sp, #4]
   2aabc:	mov	r0, #3
   2aac0:	bl	1c634 <logMessage@@Base>
   2aac4:	mov	r0, #0
   2aac8:	add	sp, sp, #8
   2aacc:	pop	{r4, r5, r6, pc}
   2aad0:	ldrdeq	r6, [r2], -r4
   2aad4:	mov	r2, r1
   2aad8:	mov	r1, r0
   2aadc:	push	{r3, lr}
   2aae0:	ldr	r3, [r2]
   2aae4:	ldr	r0, [r2, #4]
   2aae8:	ldr	ip, [r3, #16]
   2aaec:	ldr	r2, [r3, #8]
   2aaf0:	blx	ip
   2aaf4:	pop	{r3, pc}
   2aaf8:	subs	r3, r1, r0
   2aafc:	rsbs	r0, r3, #0
   2ab00:	adcs	r0, r0, r3
   2ab04:	bx	lr

0002ab08 <deleteElement@@Base>:
   2ab08:	push	{r3, r4, r5, lr}
   2ab0c:	mov	r4, r0
   2ab10:	ldr	r3, [r0]
   2ab14:	ldr	r2, [r0, #8]
   2ab18:	cmp	r0, r3
   2ab1c:	moveq	r3, #0
   2ab20:	streq	r3, [r2]
   2ab24:	beq	2ab48 <deleteElement@@Base+0x40>
   2ab28:	ldr	r1, [r2]
   2ab2c:	cmp	r0, r1
   2ab30:	streq	r3, [r2]
   2ab34:	ldr	r2, [r0, #4]
   2ab38:	ldreq	r3, [r0]
   2ab3c:	str	r2, [r3, #4]
   2ab40:	ldm	r0, {r2, r3}
   2ab44:	str	r2, [r3]
   2ab48:	ldr	r0, [r4, #12]
   2ab4c:	mov	r3, #0
   2ab50:	ldr	r5, [r4, #8]
   2ab54:	cmp	r0, r3
   2ab58:	str	r3, [r4]
   2ab5c:	str	r3, [r4, #4]
   2ab60:	beq	2ab80 <deleteElement@@Base+0x78>
   2ab64:	ldr	r3, [r5, #12]
   2ab68:	cmp	r3, #0
   2ab6c:	beq	2ab78 <deleteElement@@Base+0x70>
   2ab70:	ldr	r1, [r5, #8]
   2ab74:	blx	r3
   2ab78:	mov	r3, #0
   2ab7c:	str	r3, [r4, #12]
   2ab80:	ldr	r3, [pc, #36]	; 2abac <deleteElement@@Base+0xa4>
   2ab84:	mov	r2, #0
   2ab88:	str	r2, [r4, #8]
   2ab8c:	add	r3, pc, r3
   2ab90:	ldr	r1, [r5, #4]
   2ab94:	ldr	r2, [r3]
   2ab98:	sub	r1, r1, #1
   2ab9c:	str	r4, [r3]
   2aba0:	str	r1, [r5, #4]
   2aba4:	str	r2, [r4]
   2aba8:	pop	{r3, r4, r5, pc}
   2abac:	andeq	r9, r4, r0, ror r0

0002abb0 <dequeueItem@@Base>:
   2abb0:	push	{r4, lr}
   2abb4:	ldr	r3, [r0]
   2abb8:	cmp	r3, #0
   2abbc:	beq	2abdc <dequeueItem@@Base+0x2c>
   2abc0:	ldr	r4, [r3, #12]
   2abc4:	mov	r2, #0
   2abc8:	mov	r0, r3
   2abcc:	str	r2, [r3, #12]
   2abd0:	bl	2ab08 <deleteElement@@Base>
   2abd4:	mov	r0, r4
   2abd8:	pop	{r4, pc}
   2abdc:	mov	r0, r3
   2abe0:	pop	{r4, pc}

0002abe4 <getElementQueue@@Base>:
   2abe4:	ldr	r0, [r0, #8]
   2abe8:	bx	lr

0002abec <getElementItem@@Base>:
   2abec:	ldr	r0, [r0, #12]
   2abf0:	bx	lr

0002abf4 <newQueue@@Base>:
   2abf4:	push	{r4, r5, lr}
   2abf8:	mov	r4, r0
   2abfc:	sub	sp, sp, #12
   2ac00:	mov	r0, #20
   2ac04:	mov	r5, r1
   2ac08:	bl	fb48 <malloc@plt>
   2ac0c:	cmp	r0, #0
   2ac10:	beq	2ac34 <newQueue@@Base+0x40>
   2ac14:	mov	r3, #0
   2ac18:	str	r4, [r0, #12]
   2ac1c:	str	r5, [r0, #16]
   2ac20:	str	r3, [r0]
   2ac24:	str	r3, [r0, #4]
   2ac28:	str	r3, [r0, #8]
   2ac2c:	add	sp, sp, #12
   2ac30:	pop	{r4, r5, pc}
   2ac34:	str	r0, [sp, #4]
   2ac38:	bl	1c740 <logMallocError@@Base>
   2ac3c:	ldr	r0, [sp, #4]
   2ac40:	b	2ac2c <newQueue@@Base+0x38>

0002ac44 <deleteElements@@Base>:
   2ac44:	push	{r4, lr}
   2ac48:	mov	r4, r0
   2ac4c:	ldr	r0, [r0]
   2ac50:	cmp	r0, #0
   2ac54:	popeq	{r4, pc}
   2ac58:	bl	2ab08 <deleteElement@@Base>
   2ac5c:	ldr	r0, [r4]
   2ac60:	cmp	r0, #0
   2ac64:	bne	2ac58 <deleteElements@@Base+0x14>
   2ac68:	pop	{r4, pc}

0002ac6c <deallocateQueue@@Base>:
   2ac6c:	push	{r4, lr}
   2ac70:	mov	r4, r0
   2ac74:	bl	2ac44 <deleteElements@@Base>
   2ac78:	mov	r0, r4
   2ac7c:	pop	{r4, lr}
   2ac80:	b	f4f4 <free@plt>

0002ac84 <getQueueHead@@Base>:
   2ac84:	ldr	r0, [r0]
   2ac88:	bx	lr

0002ac8c <getQueueSize@@Base>:
   2ac8c:	ldr	r0, [r0, #4]
   2ac90:	bx	lr

0002ac94 <getQueueData@@Base>:
   2ac94:	ldr	r0, [r0, #8]
   2ac98:	bx	lr

0002ac9c <setQueueData@@Base>:
   2ac9c:	mov	r3, r0
   2aca0:	ldr	r0, [r0, #8]
   2aca4:	str	r1, [r3, #8]
   2aca8:	bx	lr

0002acac <findElement@@Base>:
   2acac:	push	{r3, r4, r5, r6, r7, lr}
   2acb0:	mov	r5, r0
   2acb4:	ldr	r4, [r0]
   2acb8:	mov	r7, r1
   2acbc:	mov	r6, r2
   2acc0:	cmp	r4, #0
   2acc4:	bne	2acdc <findElement@@Base+0x30>
   2acc8:	b	2acf8 <findElement@@Base+0x4c>
   2accc:	ldr	r4, [r4]
   2acd0:	ldr	r3, [r5]
   2acd4:	cmp	r4, r3
   2acd8:	beq	2acf8 <findElement@@Base+0x4c>
   2acdc:	ldr	r0, [r4, #12]
   2ace0:	mov	r1, r6
   2ace4:	blx	r7
   2ace8:	cmp	r0, #0
   2acec:	beq	2accc <findElement@@Base+0x20>
   2acf0:	mov	r0, r4
   2acf4:	pop	{r3, r4, r5, r6, r7, pc}
   2acf8:	mov	r0, #0
   2acfc:	pop	{r3, r4, r5, r6, r7, pc}
   2ad00:	ldr	r3, [pc, #208]	; 2add8 <findElement@@Base+0x12c>
   2ad04:	ldr	r2, [pc, #208]	; 2addc <findElement@@Base+0x130>
   2ad08:	add	r3, pc, r3
   2ad0c:	push	{r4, r5, r6, lr}
   2ad10:	sub	sp, sp, #16
   2ad14:	ldr	r5, [r0, #8]
   2ad18:	mov	r4, r0
   2ad1c:	ldr	r6, [r3, r2]
   2ad20:	ldr	r3, [r5]
   2ad24:	ldr	r2, [r6]
   2ad28:	cmp	r3, #0
   2ad2c:	str	r2, [sp, #12]
   2ad30:	beq	2adc8 <findElement@@Base+0x11c>
   2ad34:	ldr	r2, [r5, #16]
   2ad38:	cmp	r2, #0
   2ad3c:	beq	2adac <findElement@@Base+0x100>
   2ad40:	ldr	r3, [r0, #12]
   2ad44:	add	r2, sp, #4
   2ad48:	ldr	r1, [pc, #144]	; 2ade0 <findElement@@Base+0x134>
   2ad4c:	mov	r0, r5
   2ad50:	str	r5, [sp, #4]
   2ad54:	add	r1, pc, r1
   2ad58:	str	r3, [sp, #8]
   2ad5c:	bl	2acac <findElement@@Base>
   2ad60:	cmp	r0, #0
   2ad64:	ldreq	r3, [r5]
   2ad68:	beq	2adac <findElement@@Base+0x100>
   2ad6c:	ldr	r2, [r5]
   2ad70:	str	r0, [r4]
   2ad74:	ldr	r3, [r0, #4]
   2ad78:	cmp	r0, r2
   2ad7c:	str	r3, [r4, #4]
   2ad80:	str	r4, [r0, #4]
   2ad84:	ldr	r3, [r4, #4]
   2ad88:	str	r4, [r3]
   2ad8c:	bne	2ad94 <findElement@@Base+0xe8>
   2ad90:	str	r4, [r5]
   2ad94:	ldr	r2, [sp, #12]
   2ad98:	ldr	r3, [r6]
   2ad9c:	cmp	r2, r3
   2ada0:	bne	2add4 <findElement@@Base+0x128>
   2ada4:	add	sp, sp, #16
   2ada8:	pop	{r4, r5, r6, pc}
   2adac:	str	r3, [r4]
   2adb0:	ldr	r2, [r3, #4]
   2adb4:	str	r2, [r4, #4]
   2adb8:	str	r4, [r3, #4]
   2adbc:	ldr	r3, [r4, #4]
   2adc0:	str	r4, [r3]
   2adc4:	b	2ad94 <findElement@@Base+0xe8>
   2adc8:	str	r0, [r4]
   2adcc:	str	r0, [r4, #4]
   2add0:	b	2ad90 <findElement@@Base+0xe4>
   2add4:	bl	f950 <__stack_chk_fail@plt>
   2add8:	andeq	r7, r4, r0, ror sp
   2addc:			; <UNDEFINED> instruction: 0x000003b4
   2ade0:			; <UNDEFINED> instruction: 0xfffffd78

0002ade4 <enqueueItem@@Base>:
   2ade4:	ldr	r3, [pc, #124]	; 2ae68 <enqueueItem@@Base+0x84>
   2ade8:	push	{r4, r5, lr}
   2adec:	add	r3, pc, r3
   2adf0:	sub	sp, sp, #12
   2adf4:	mov	r5, r0
   2adf8:	ldr	r4, [r3]
   2adfc:	cmp	r4, #0
   2ae00:	beq	2ae3c <enqueueItem@@Base+0x58>
   2ae04:	ldr	r2, [r4]
   2ae08:	mov	r0, #0
   2ae0c:	str	r0, [r4]
   2ae10:	str	r2, [r3]
   2ae14:	str	r5, [r4, #8]
   2ae18:	mov	r0, r4
   2ae1c:	ldr	r3, [r5, #4]
   2ae20:	add	r3, r3, #1
   2ae24:	str	r3, [r5, #4]
   2ae28:	str	r1, [r4, #12]
   2ae2c:	bl	2ad00 <findElement@@Base+0x54>
   2ae30:	mov	r0, r4
   2ae34:	add	sp, sp, #12
   2ae38:	pop	{r4, r5, pc}
   2ae3c:	mov	r0, #16
   2ae40:	str	r1, [sp, #4]
   2ae44:	bl	fb48 <malloc@plt>
   2ae48:	ldr	r1, [sp, #4]
   2ae4c:	subs	r4, r0, #0
   2ae50:	movne	r3, #0
   2ae54:	strne	r3, [r4]
   2ae58:	strne	r3, [r4, #4]
   2ae5c:	bne	2ae14 <enqueueItem@@Base+0x30>
   2ae60:	bl	1c740 <logMallocError@@Base>
   2ae64:	b	2ae30 <enqueueItem@@Base+0x4c>
   2ae68:	andeq	r8, r4, r0, lsl lr

0002ae6c <requeueElement@@Base>:
   2ae6c:	ldr	r2, [r0]
   2ae70:	mov	r3, r0
   2ae74:	ldr	r1, [r0, #8]
   2ae78:	cmp	r0, r2
   2ae7c:	moveq	r2, #0
   2ae80:	streq	r2, [r1]
   2ae84:	beq	2aea8 <requeueElement@@Base+0x3c>
   2ae88:	ldr	r0, [r1]
   2ae8c:	cmp	r3, r0
   2ae90:	streq	r2, [r1]
   2ae94:	ldr	r1, [r3, #4]
   2ae98:	ldreq	r2, [r3]
   2ae9c:	str	r1, [r2, #4]
   2aea0:	ldm	r3, {r1, r2}
   2aea4:	str	r1, [r2]
   2aea8:	mov	r2, #0
   2aeac:	mov	r0, r3
   2aeb0:	str	r2, [r3]
   2aeb4:	str	r2, [r3, #4]
   2aeb8:	b	2ad00 <findElement@@Base+0x54>

0002aebc <findItem@@Base>:
   2aebc:	push	{r3, lr}
   2aec0:	bl	2acac <findElement@@Base>
   2aec4:	cmp	r0, #0
   2aec8:	ldrne	r0, [r0, #12]
   2aecc:	pop	{r3, pc}

0002aed0 <processQueue@@Base>:
   2aed0:	push	{r4, r5, r6, r7, r8, lr}
   2aed4:	mov	r6, r0
   2aed8:	ldr	r5, [r0]
   2aedc:	mov	r7, r1
   2aee0:	mov	r8, r2
   2aee4:	cmp	r5, #0
   2aee8:	movne	r3, r5
   2aeec:	bne	2af14 <processQueue@@Base+0x44>
   2aef0:	b	2af38 <processQueue@@Base+0x68>
   2aef4:	ldr	r0, [r5, #12]
   2aef8:	blx	r7
   2aefc:	cmp	r0, #0
   2af00:	bne	2af40 <processQueue@@Base+0x70>
   2af04:	cmp	r4, #0
   2af08:	mov	r5, r4
   2af0c:	beq	2af38 <processQueue@@Base+0x68>
   2af10:	ldr	r3, [r6]
   2af14:	ldr	r4, [r5]
   2af18:	mov	r1, r8
   2af1c:	cmp	r3, r4
   2af20:	bne	2aef4 <processQueue@@Base+0x24>
   2af24:	mov	r1, r8
   2af28:	ldr	r0, [r5, #12]
   2af2c:	blx	r7
   2af30:	cmp	r0, #0
   2af34:	bne	2af40 <processQueue@@Base+0x70>
   2af38:	mov	r0, #0
   2af3c:	pop	{r4, r5, r6, r7, r8, pc}
   2af40:	mov	r0, r5
   2af44:	pop	{r4, r5, r6, r7, r8, pc}

0002af48 <deleteItem@@Base>:
   2af48:	mov	r2, r1
   2af4c:	ldr	r1, [pc, #44]	; 2af80 <deleteItem@@Base+0x38>
   2af50:	push	{r3, lr}
   2af54:	add	r1, pc, r1
   2af58:	bl	2acac <findElement@@Base>
   2af5c:	subs	r3, r0, #0
   2af60:	beq	2af78 <deleteItem@@Base+0x30>
   2af64:	mov	r2, #0
   2af68:	str	r2, [r3, #12]
   2af6c:	bl	2ab08 <deleteElement@@Base>
   2af70:	mov	r0, #1
   2af74:	pop	{r3, pc}
   2af78:	mov	r0, r3
   2af7c:	pop	{r3, pc}
   2af80:			; <UNDEFINED> instruction: 0xfffffb9c

0002af84 <getBaseCharacter@@Base>:
   2af84:	ldr	ip, [pc, #124]	; 2b008 <getBaseCharacter@@Base+0x84>
   2af88:	mov	r1, #1
   2af8c:	ldr	r2, [pc, #120]	; 2b00c <getBaseCharacter@@Base+0x88>
   2af90:	add	ip, pc, ip
   2af94:	push	{r4, r5, r6, lr}
   2af98:	sub	sp, sp, #64	; 0x40
   2af9c:	ldr	r5, [ip, r2]
   2afa0:	add	r6, sp, #28
   2afa4:	str	r6, [sp]
   2afa8:	mov	r4, #0
   2afac:	mov	r3, r4
   2afb0:	mov	lr, #16
   2afb4:	ldr	ip, [r5]
   2afb8:	mov	r2, #2
   2afbc:	strh	r0, [sp, #20]
   2afc0:	add	r0, sp, #20
   2afc4:	str	lr, [sp, #4]
   2afc8:	add	lr, sp, #24
   2afcc:	str	lr, [sp, #8]
   2afd0:	str	ip, [sp, #60]	; 0x3c
   2afd4:	str	r4, [sp, #24]
   2afd8:	bl	f89c <unorm_normalize_50@plt>
   2afdc:	ldr	r3, [sp, #24]
   2afe0:	ldr	r2, [sp, #60]	; 0x3c
   2afe4:	cmp	r3, r4
   2afe8:	ldr	r3, [r5]
   2afec:	ldrhle	r0, [sp, #28]
   2aff0:	movgt	r0, r4
   2aff4:	cmp	r2, r3
   2aff8:	bne	2b004 <getBaseCharacter@@Base+0x80>
   2affc:	add	sp, sp, #64	; 0x40
   2b000:	pop	{r4, r5, r6, pc}
   2b004:	bl	f950 <__stack_chk_fail@plt>
   2b008:	andeq	r7, r4, r8, ror #21
   2b00c:			; <UNDEFINED> instruction: 0x000003b4

0002b010 <getTransliteratedCharacter@@Base>:
   2b010:	ldr	r3, [pc, #224]	; 2b0f8 <getTransliteratedCharacter@@Base+0xe8>
   2b014:	push	{r4, r5, fp, lr}
   2b018:	add	fp, sp, #12
   2b01c:	ldr	r2, [pc, #216]	; 2b0fc <getTransliteratedCharacter@@Base+0xec>
   2b020:	sub	sp, sp, #56	; 0x38
   2b024:	add	r3, pc, r3
   2b028:	ldr	r5, [pc, #208]	; 2b100 <getTransliteratedCharacter@@Base+0xf0>
   2b02c:	str	r0, [fp, #-56]	; 0xffffffc8
   2b030:	add	r5, pc, r5
   2b034:	ldr	r4, [r3, r2]
   2b038:	ldr	r0, [r5]
   2b03c:	ldr	r3, [r4]
   2b040:	cmp	r0, #0
   2b044:	str	r3, [fp, #-16]
   2b048:	beq	2b0cc <getTransliteratedCharacter@@Base+0xbc>
   2b04c:	cmn	r0, #1
   2b050:	moveq	r0, #0
   2b054:	beq	2b0b4 <getTransliteratedCharacter@@Base+0xa4>
   2b058:	sub	r3, fp, #56	; 0x38
   2b05c:	mov	r2, #4
   2b060:	str	r3, [fp, #-48]	; 0xffffffd0
   2b064:	sub	r5, fp, #32
   2b068:	str	r2, [fp, #-44]	; 0xffffffd4
   2b06c:	mov	r3, #16
   2b070:	str	r5, [fp, #-36]	; 0xffffffdc
   2b074:	sub	r1, fp, #48	; 0x30
   2b078:	str	r3, [fp, #-40]	; 0xffffffd8
   2b07c:	sub	r2, fp, #44	; 0x2c
   2b080:	sub	r3, fp, #40	; 0x28
   2b084:	str	r3, [sp]
   2b088:	sub	r3, fp, #36	; 0x24
   2b08c:	bl	fc8c <iconv@plt>
   2b090:	mov	r3, sp
   2b094:	cmn	r0, #1
   2b098:	beq	2b0ac <getTransliteratedCharacter@@Base+0x9c>
   2b09c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b0a0:	rsb	r5, r5, r2
   2b0a4:	cmp	r5, #1
   2b0a8:	beq	2b0ec <getTransliteratedCharacter@@Base+0xdc>
   2b0ac:	mov	r0, #0
   2b0b0:	mov	sp, r3
   2b0b4:	ldr	r2, [fp, #-16]
   2b0b8:	ldr	r3, [r4]
   2b0bc:	cmp	r2, r3
   2b0c0:	bne	2b0f4 <getTransliteratedCharacter@@Base+0xe4>
   2b0c4:	sub	sp, fp, #12
   2b0c8:	pop	{r4, r5, fp, pc}
   2b0cc:	ldr	r0, [pc, #48]	; 2b104 <getTransliteratedCharacter@@Base+0xf4>
   2b0d0:	ldr	r1, [pc, #48]	; 2b108 <getTransliteratedCharacter@@Base+0xf8>
   2b0d4:	add	r0, pc, r0
   2b0d8:	add	r1, pc, r1
   2b0dc:	bl	fc2c <iconv_open@plt>
   2b0e0:	mov	r3, r0
   2b0e4:	str	r3, [r5]
   2b0e8:	b	2b04c <getTransliteratedCharacter@@Base+0x3c>
   2b0ec:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   2b0f0:	b	2b0b4 <getTransliteratedCharacter@@Base+0xa4>
   2b0f4:	bl	f950 <__stack_chk_fail@plt>
   2b0f8:	andeq	r7, r4, r4, asr sl
   2b0fc:			; <UNDEFINED> instruction: 0x000003b4
   2b100:	ldrdeq	r8, [r4], -r0
   2b104:	andeq	r6, r2, r4, ror #3
   2b108:	strdeq	r6, [r2], -r0

0002b10c <getCharacterWidth@@Base>:
   2b10c:	push	{r3, r4, r5, lr}
   2b110:	movw	r1, #4101	; 0x1005
   2b114:	mov	r4, r0
   2b118:	bl	f830 <u_getIntPropertyValue_50@plt>
   2b11c:	movw	r1, #4100	; 0x1004
   2b120:	mov	r5, r0
   2b124:	mov	r0, r4
   2b128:	bl	f830 <u_getIntPropertyValue_50@plt>
   2b12c:	cmp	r4, #0
   2b130:	beq	2b1b0 <getCharacterWidth@@Base+0xa4>
   2b134:	cmp	r5, #15
   2b138:	beq	2b1ec <getCharacterWidth@@Base+0xe0>
   2b13c:	sub	r3, r5, #6
   2b140:	cmp	r3, #1
   2b144:	bls	2b1a8 <getCharacterWidth@@Base+0x9c>
   2b148:	sub	r3, r4, #4416	; 0x1140
   2b14c:	sub	r3, r3, #32
   2b150:	cmp	r3, #159	; 0x9f
   2b154:	bls	2b1a0 <getCharacterWidth@@Base+0x94>
   2b158:	cmp	r4, #173	; 0xad
   2b15c:	beq	2b1b8 <getCharacterWidth@@Base+0xac>
   2b160:	cmp	r5, #16
   2b164:	beq	2b1a8 <getCharacterWidth@@Base+0x9c>
   2b168:	cmp	r0, #3
   2b16c:	beq	2b1e4 <getCharacterWidth@@Base+0xd8>
   2b170:	cmp	r0, #2
   2b174:	beq	2b1b8 <getCharacterWidth@@Base+0xac>
   2b178:	cmp	r0, #5
   2b17c:	beq	2b1e4 <getCharacterWidth@@Base+0xd8>
   2b180:	cmp	r0, #4
   2b184:	beq	2b1b8 <getCharacterWidth@@Base+0xac>
   2b188:	cmp	r0, #1
   2b18c:	beq	2b1c0 <getCharacterWidth@@Base+0xb4>
   2b190:	cmp	r5, #0
   2b194:	movne	r0, #1
   2b198:	mvneq	r0, #0
   2b19c:	pop	{r3, r4, r5, pc}
   2b1a0:	cmp	r5, #5
   2b1a4:	bne	2b160 <getCharacterWidth@@Base+0x54>
   2b1a8:	mov	r0, #0
   2b1ac:	pop	{r3, r4, r5, pc}
   2b1b0:	mov	r0, r4
   2b1b4:	pop	{r3, r4, r5, pc}
   2b1b8:	mov	r0, #1
   2b1bc:	pop	{r3, r4, r5, pc}
   2b1c0:	sub	r3, r4, #19968	; 0x4e00
   2b1c4:	cmp	r3, #20992	; 0x5200
   2b1c8:	bcc	2b1e4 <getCharacterWidth@@Base+0xd8>
   2b1cc:	sub	r3, r4, #13312	; 0x3400
   2b1d0:	cmp	r3, #6592	; 0x19c0
   2b1d4:	bcc	2b1e4 <getCharacterWidth@@Base+0xd8>
   2b1d8:	sub	r4, r4, #63744	; 0xf900
   2b1dc:	cmp	r4, #512	; 0x200
   2b1e0:	bcs	2b190 <getCharacterWidth@@Base+0x84>
   2b1e4:	mov	r0, #2
   2b1e8:	pop	{r3, r4, r5, pc}
   2b1ec:	mvn	r0, #0
   2b1f0:	pop	{r3, r4, r5, pc}

0002b1f4 <handleBestCharacter@@Base>:
   2b1f4:	push	{r3, r4, r5, r6, r7, lr}
   2b1f8:	mov	r4, r0
   2b1fc:	ldr	r5, [pc, #76]	; 2b250 <handleBestCharacter@@Base+0x5c>
   2b200:	mov	r7, r1
   2b204:	mov	r6, r2
   2b208:	add	r5, pc, r5
   2b20c:	sub	r5, r5, #4
   2b210:	b	2b22c <handleBestCharacter@@Base+0x38>
   2b214:	ldr	r3, [r5, #4]!
   2b218:	cmp	r3, #0
   2b21c:	beq	2b248 <handleBestCharacter@@Base+0x54>
   2b220:	blx	r3
   2b224:	cmp	r0, #0
   2b228:	movne	r4, r0
   2b22c:	mov	r0, r4
   2b230:	mov	r1, r6
   2b234:	blx	r7
   2b238:	subs	ip, r0, #0
   2b23c:	mov	r0, r4
   2b240:	beq	2b214 <handleBestCharacter@@Base+0x20>
   2b244:	mov	ip, #1
   2b248:	mov	r0, ip
   2b24c:	pop	{r3, r4, r5, r6, r7, pc}
   2b250:	andeq	r7, r4, r8, asr #11
   2b254:	ldr	r3, [r0]
   2b258:	ldr	r1, [r1]
   2b25c:	ldr	r2, [r3, #8]
   2b260:	ldr	r3, [r1, #8]
   2b264:	cmp	r2, r3
   2b268:	blt	2b278 <handleBestCharacter@@Base+0x84>
   2b26c:	movle	r0, #0
   2b270:	movgt	r0, #1
   2b274:	bx	lr
   2b278:	mvn	r0, #0
   2b27c:	bx	lr
   2b280:	push	{r4, r5, r6, r7, r8, r9, lr}
   2b284:	mov	r9, r0
   2b288:	ldr	ip, [r3]
   2b28c:	sub	sp, sp, #12
   2b290:	add	r7, r0, r1
   2b294:	mov	r6, r2
   2b298:	cmp	ip, #0
   2b29c:	beq	2b310 <handleBestCharacter@@Base+0x11c>
   2b2a0:	ldr	r8, [pc, #112]	; 2b318 <handleBestCharacter@@Base+0x124>
   2b2a4:	add	r4, r3, #8
   2b2a8:	mov	r5, r0
   2b2ac:	add	r8, pc, r8
   2b2b0:	b	2b2c0 <handleBestCharacter@@Base+0xcc>
   2b2b4:	ldr	ip, [r4], #8
   2b2b8:	cmp	ip, #0
   2b2bc:	beq	2b304 <handleBestCharacter@@Base+0x110>
   2b2c0:	ldr	r3, [r4, #-4]
   2b2c4:	tst	r6, r3
   2b2c8:	beq	2b2b4 <handleBestCharacter@@Base+0xc0>
   2b2cc:	mov	r0, r5
   2b2d0:	str	ip, [sp, #4]
   2b2d4:	rsb	r1, r5, r7
   2b2d8:	str	r8, [sp]
   2b2dc:	mov	r2, #1
   2b2e0:	mvn	r3, #0
   2b2e4:	bl	fb60 <__snprintf_chk@plt>
   2b2e8:	ldr	ip, [r4], #8
   2b2ec:	add	r0, r5, r0
   2b2f0:	cmp	r0, r7
   2b2f4:	movcc	r5, r0
   2b2f8:	movcs	r5, r7
   2b2fc:	cmp	ip, #0
   2b300:	bne	2b2c0 <handleBestCharacter@@Base+0xcc>
   2b304:	rsb	r0, r9, r5
   2b308:	add	sp, sp, #12
   2b30c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b310:	mov	r0, ip
   2b314:	b	2b308 <handleBestCharacter@@Base+0x114>
   2b318:	andeq	r6, r2, ip, asr #32

0002b31c <getCommandEntry@@Base>:
   2b31c:	ldr	r2, [pc, #308]	; 2b458 <getCommandEntry@@Base+0x13c>
   2b320:	push	{r3, r4, r5, r6, r7, lr}
   2b324:	add	r2, pc, r2
   2b328:	ldr	r3, [pc, #300]	; 2b45c <getCommandEntry@@Base+0x140>
   2b32c:	mov	r5, r0
   2b330:	ldr	r2, [r2]
   2b334:	add	r3, pc, r3
   2b338:	cmp	r2, #0
   2b33c:	beq	2b3cc <getCommandEntry@@Base+0xb0>
   2b340:	ldr	r3, [pc, #280]	; 2b460 <getCommandEntry@@Base+0x144>
   2b344:	uxth	r0, r5
   2b348:	add	r3, pc, r3
   2b34c:	ldr	r2, [r3, #4]
   2b350:	subs	r2, r2, #1
   2b354:	bmi	2b3c4 <getCommandEntry@@Base+0xa8>
   2b358:	ldr	r4, [r3]
   2b35c:	mov	r1, #0
   2b360:	add	r3, r1, r2
   2b364:	add	r3, r3, r3, lsr #31
   2b368:	asr	r3, r3, #1
   2b36c:	ldr	ip, [r4, r3, lsl #2]
   2b370:	ldr	ip, [ip, #8]
   2b374:	cmp	r0, ip
   2b378:	sublt	r2, r3, #1
   2b37c:	addge	r1, r3, #1
   2b380:	cmp	r1, r2
   2b384:	ble	2b360 <getCommandEntry@@Base+0x44>
   2b388:	cmp	r2, #0
   2b38c:	blt	2b3c4 <getCommandEntry@@Base+0xa8>
   2b390:	ldr	r0, [r4, r2, lsl #2]
   2b394:	and	r2, r5, #65280	; 0xff00
   2b398:	ldr	r3, [r0, #8]
   2b39c:	and	r1, r3, #65280	; 0xff00
   2b3a0:	cmp	r2, r1
   2b3a4:	uxtb	r3, r3
   2b3a8:	bne	2b3c4 <getCommandEntry@@Base+0xa8>
   2b3ac:	uxtb	r5, r5
   2b3b0:	cmp	r5, r3
   2b3b4:	popeq	{r3, r4, r5, r6, r7, pc}
   2b3b8:	cmp	r2, #0
   2b3bc:	moveq	r0, #0
   2b3c0:	pop	{r3, r4, r5, r6, r7, pc}
   2b3c4:	mov	r0, #0
   2b3c8:	pop	{r3, r4, r5, r6, r7, pc}
   2b3cc:	ldr	r2, [pc, #144]	; 2b464 <getCommandEntry@@Base+0x148>
   2b3d0:	ldr	r7, [r3, r2]
   2b3d4:	add	r3, r7, #16
   2b3d8:	mov	r1, r3
   2b3dc:	ldr	r2, [r3], #16
   2b3e0:	cmp	r2, #0
   2b3e4:	bne	2b3d8 <getCommandEntry@@Base+0xbc>
   2b3e8:	rsb	r1, r7, r1
   2b3ec:	ldr	r3, [pc, #116]	; 2b468 <getCommandEntry@@Base+0x14c>
   2b3f0:	asr	r6, r1, #4
   2b3f4:	add	r3, pc, r3
   2b3f8:	lsl	r0, r6, #2
   2b3fc:	str	r6, [r3, #4]
   2b400:	bl	fb48 <malloc@plt>
   2b404:	subs	r4, r0, #0
   2b408:	movne	r3, r7
   2b40c:	movne	r2, r4
   2b410:	beq	2b44c <getCommandEntry@@Base+0x130>
   2b414:	str	r3, [r2], #4
   2b418:	ldr	ip, [r3, #16]!
   2b41c:	cmp	ip, #0
   2b420:	bne	2b414 <getCommandEntry@@Base+0xf8>
   2b424:	ldr	r3, [pc, #64]	; 2b46c <getCommandEntry@@Base+0x150>
   2b428:	mov	r1, r6
   2b42c:	mov	r0, r4
   2b430:	mov	r2, #4
   2b434:	add	r3, pc, r3
   2b438:	bl	f53c <qsort@plt>
   2b43c:	ldr	r3, [pc, #44]	; 2b470 <getCommandEntry@@Base+0x154>
   2b440:	add	r3, pc, r3
   2b444:	str	r4, [r3]
   2b448:	b	2b340 <getCommandEntry@@Base+0x24>
   2b44c:	bl	1c740 <logMallocError@@Base>
   2b450:	mov	r0, r4
   2b454:	pop	{r3, r4, r5, r6, r7, pc}
   2b458:	andeq	r8, r4, r0, ror #17
   2b45c:	andeq	r7, r4, r4, asr #14
   2b460:			; <UNDEFINED> instruction: 0x000488bc
   2b464:	andeq	r0, r0, r0, lsr #7
   2b468:	andeq	r8, r4, r0, lsl r8
   2b46c:			; <UNDEFINED> instruction: 0xfffffe18
   2b470:	andeq	r8, r4, r4, asr #15

0002b474 <describeCommand@@Base>:
   2b474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b478:	mov	r5, r1
   2b47c:	ldr	r8, [pc, #1864]	; 2bbcc <describeCommand@@Base+0x758>
   2b480:	add	fp, sp, #32
   2b484:	ldr	r1, [pc, #1860]	; 2bbd0 <describeCommand@@Base+0x75c>
   2b488:	sub	sp, sp, #76	; 0x4c
   2b48c:	add	r8, pc, r8
   2b490:	mov	sl, r3
   2b494:	add	r4, r5, r2
   2b498:	ldr	r1, [r8, r1]
   2b49c:	mov	r7, r0
   2b4a0:	ldr	r3, [r1]
   2b4a4:	str	r1, [fp, #-48]	; 0xffffffd0
   2b4a8:	str	r3, [fp, #-40]	; 0xffffffd8
   2b4ac:	bl	2b31c <getCommandEntry@@Base>
   2b4b0:	subs	r6, r0, #0
   2b4b4:	beq	2bb24 <describeCommand@@Base+0x6b0>
   2b4b8:	tst	sl, #1
   2b4bc:	streq	r5, [fp, #-52]	; 0xffffffcc
   2b4c0:	bne	2b624 <describeCommand@@Base+0x1b0>
   2b4c4:	ldrb	r3, [r6, #12]
   2b4c8:	mov	r0, #0
   2b4cc:	ldr	r1, [r6, #4]
   2b4d0:	mov	r2, #5
   2b4d4:	tst	r3, #1
   2b4d8:	beq	2b4e4 <describeCommand@@Base+0x70>
   2b4dc:	tst	r7, #196608	; 0x30000
   2b4e0:	bne	2b664 <describeCommand@@Base+0x1f0>
   2b4e4:	bl	f9bc <dcgettext@plt>
   2b4e8:	ldr	r2, [pc, #1764]	; 2bbd4 <describeCommand@@Base+0x760>
   2b4ec:	rsb	r1, r5, r4
   2b4f0:	add	r2, pc, r2
   2b4f4:	mov	r3, r0
   2b4f8:	mov	r0, r5
   2b4fc:	bl	f734 <snprintf@plt>
   2b500:	add	r0, r5, r0
   2b504:	cmp	r0, r4
   2b508:	movcc	r5, r0
   2b50c:	movcs	r5, r4
   2b510:	tst	sl, #2
   2b514:	beq	2b588 <describeCommand@@Base+0x114>
   2b518:	ldrb	r3, [r6, #13]
   2b51c:	lsr	r1, r7, #24
   2b520:	uxtb	r2, r7
   2b524:	str	r1, [fp, #-60]	; 0xffffffc4
   2b528:	tst	r3, #1
   2b52c:	orr	r1, r2, r1, lsl #8
   2b530:	str	r2, [fp, #-56]	; 0xffffffc8
   2b534:	str	r1, [fp, #-64]	; 0xffffffc0
   2b538:	bne	2b998 <describeCommand@@Base+0x524>
   2b53c:	tst	r3, #2
   2b540:	bne	2b8a4 <describeCommand@@Base+0x430>
   2b544:	tst	r3, #4
   2b548:	bne	2b7f0 <describeCommand@@Base+0x37c>
   2b54c:	ldrb	r3, [r6, #12]
   2b550:	and	r2, r3, #12
   2b554:	cmp	r2, #8
   2b558:	beq	2b838 <describeCommand@@Base+0x3c4>
   2b55c:	tst	r3, #56	; 0x38
   2b560:	bne	2b9d4 <describeCommand@@Base+0x560>
   2b564:	tst	r3, #64	; 0x40
   2b568:	bne	2ba48 <describeCommand@@Base+0x5d4>
   2b56c:	lsrs	r3, r3, #7
   2b570:	bne	2b7c4 <describeCommand@@Base+0x350>
   2b574:	ldrb	r3, [r6, #13]
   2b578:	tst	r3, #1
   2b57c:	bne	2b794 <describeCommand@@Base+0x320>
   2b580:	tst	r3, #4
   2b584:	bne	2b71c <describeCommand@@Base+0x2a8>
   2b588:	ldrb	r3, [r6, #12]
   2b58c:	tst	r3, #2
   2b590:	beq	2b5b4 <describeCommand@@Base+0x140>
   2b594:	tst	r3, #16
   2b598:	beq	2b5ac <describeCommand@@Base+0x138>
   2b59c:	tst	r7, #131072	; 0x20000
   2b5a0:	bne	2ba90 <describeCommand@@Base+0x61c>
   2b5a4:	tst	r7, #65536	; 0x10000
   2b5a8:	bne	2b748 <describeCommand@@Base+0x2d4>
   2b5ac:	tst	r7, #262144	; 0x40000
   2b5b0:	bne	2b5d8 <describeCommand@@Base+0x164>
   2b5b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2b5b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b5bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b5c0:	rsb	r0, r3, r5
   2b5c4:	ldr	r3, [r1]
   2b5c8:	cmp	r2, r3
   2b5cc:	bne	2bbc8 <describeCommand@@Base+0x754>
   2b5d0:	sub	sp, fp, #32
   2b5d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b5d8:	ldr	r1, [pc, #1528]	; 2bbd8 <describeCommand@@Base+0x764>
   2b5dc:	mov	r2, #5
   2b5e0:	mov	r0, #0
   2b5e4:	add	r1, pc, r1
   2b5e8:	bl	f9bc <dcgettext@plt>
   2b5ec:	ldr	ip, [pc, #1512]	; 2bbdc <describeCommand@@Base+0x768>
   2b5f0:	rsb	r1, r5, r4
   2b5f4:	mov	r2, #1
   2b5f8:	add	ip, pc, ip
   2b5fc:	mvn	r3, #0
   2b600:	str	ip, [sp]
   2b604:	str	r0, [sp, #4]
   2b608:	mov	r0, r5
   2b60c:	bl	fb60 <__snprintf_chk@plt>
   2b610:	add	r0, r5, r0
   2b614:	cmp	r0, r4
   2b618:	movcc	r5, r0
   2b61c:	movcs	r5, r4
   2b620:	b	2b5b4 <describeCommand@@Base+0x140>
   2b624:	ldr	ip, [pc, #1460]	; 2bbe0 <describeCommand@@Base+0x76c>
   2b628:	mov	r0, r5
   2b62c:	rsb	r1, r5, r4
   2b630:	mov	r2, #1
   2b634:	add	ip, pc, ip
   2b638:	str	ip, [sp]
   2b63c:	ldr	ip, [r6]
   2b640:	mvn	r3, #0
   2b644:	str	r5, [fp, #-52]	; 0xffffffcc
   2b648:	str	ip, [sp, #4]
   2b64c:	bl	fb60 <__snprintf_chk@plt>
   2b650:	add	r0, r5, r0
   2b654:	cmp	r0, r4
   2b658:	movcc	r5, r0
   2b65c:	movcs	r5, r4
   2b660:	b	2b4c4 <describeCommand@@Base+0x50>
   2b664:	str	sp, [fp, #-56]	; 0xffffffc8
   2b668:	bl	f9bc <dcgettext@plt>
   2b66c:	mov	r9, r0
   2b670:	bl	fb54 <strlen@plt>
   2b674:	mov	r1, r9
   2b678:	add	r3, r0, #8
   2b67c:	add	r2, r0, #1
   2b680:	bic	r3, r3, #7
   2b684:	sub	sp, sp, r3
   2b688:	add	r9, sp, #16
   2b68c:	mov	r0, r9
   2b690:	bl	fb24 <memcpy@plt>
   2b694:	mov	r0, r9
   2b698:	mov	r1, #47	; 0x2f
   2b69c:	bl	fdd0 <strchr@plt>
   2b6a0:	subs	r3, r0, #0
   2b6a4:	beq	2b6ec <describeCommand@@Base+0x278>
   2b6a8:	ands	r2, r7, #65536	; 0x10000
   2b6ac:	beq	2badc <describeCommand@@Base+0x668>
   2b6b0:	mov	r1, #32
   2b6b4:	str	r3, [fp, #-88]	; 0xffffffa8
   2b6b8:	bl	fdd0 <strchr@plt>
   2b6bc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b6c0:	subs	r1, r0, #0
   2b6c4:	beq	2bbb4 <describeCommand@@Base+0x740>
   2b6c8:	mov	r0, r1
   2b6cc:	str	r1, [fp, #-84]	; 0xffffffac
   2b6d0:	str	r3, [fp, #-88]	; 0xffffffa8
   2b6d4:	bl	fb54 <strlen@plt>
   2b6d8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b6dc:	ldr	r1, [fp, #-84]	; 0xffffffac
   2b6e0:	add	r2, r0, #1
   2b6e4:	mov	r0, r3
   2b6e8:	bl	f7dc <memmove@plt>
   2b6ec:	ldr	r2, [pc, #1264]	; 2bbe4 <describeCommand@@Base+0x770>
   2b6f0:	mov	r0, r5
   2b6f4:	rsb	r1, r5, r4
   2b6f8:	mov	r3, r9
   2b6fc:	add	r2, pc, r2
   2b700:	bl	f734 <snprintf@plt>
   2b704:	ldr	sp, [fp, #-56]	; 0xffffffc8
   2b708:	add	r0, r5, r0
   2b70c:	cmp	r0, r4
   2b710:	movcc	r5, r0
   2b714:	movcs	r5, r4
   2b718:	b	2b510 <describeCommand@@Base+0x9c>
   2b71c:	ldr	r3, [pc, #1220]	; 2bbe8 <describeCommand@@Base+0x774>
   2b720:	mov	r0, r5
   2b724:	rsb	r1, r5, r4
   2b728:	mov	r2, r7
   2b72c:	ldr	r3, [r8, r3]
   2b730:	bl	2b280 <handleBestCharacter@@Base+0x8c>
   2b734:	add	r0, r5, r0
   2b738:	cmp	r0, r4
   2b73c:	movcc	r5, r0
   2b740:	movcs	r5, r4
   2b744:	b	2b588 <describeCommand@@Base+0x114>
   2b748:	ldr	r1, [pc, #1180]	; 2bbec <describeCommand@@Base+0x778>
   2b74c:	mov	r2, #5
   2b750:	mov	r0, #0
   2b754:	add	r1, pc, r1
   2b758:	bl	f9bc <dcgettext@plt>
   2b75c:	ldr	ip, [pc, #1164]	; 2bbf0 <describeCommand@@Base+0x77c>
   2b760:	rsb	r1, r5, r4
   2b764:	mov	r2, #1
   2b768:	add	ip, pc, ip
   2b76c:	mvn	r3, #0
   2b770:	str	ip, [sp]
   2b774:	str	r0, [sp, #4]
   2b778:	mov	r0, r5
   2b77c:	bl	fb60 <__snprintf_chk@plt>
   2b780:	add	r0, r5, r0
   2b784:	cmp	r0, r4
   2b788:	movcc	r5, r0
   2b78c:	movcs	r5, r4
   2b790:	b	2b5ac <describeCommand@@Base+0x138>
   2b794:	ldr	r3, [pc, #1112]	; 2bbf4 <describeCommand@@Base+0x780>
   2b798:	mov	r0, r5
   2b79c:	rsb	r1, r5, r4
   2b7a0:	mov	r2, r7
   2b7a4:	ldr	r3, [r8, r3]
   2b7a8:	bl	2b280 <handleBestCharacter@@Base+0x8c>
   2b7ac:	ldrb	r3, [r6, #13]
   2b7b0:	add	r0, r5, r0
   2b7b4:	cmp	r0, r4
   2b7b8:	movcc	r5, r0
   2b7bc:	movcs	r5, r4
   2b7c0:	b	2b580 <describeCommand@@Base+0x10c>
   2b7c4:	ldr	r3, [pc, #1068]	; 2bbf8 <describeCommand@@Base+0x784>
   2b7c8:	mov	r0, r5
   2b7cc:	rsb	r1, r5, r4
   2b7d0:	mov	r2, r7
   2b7d4:	ldr	r3, [r8, r3]
   2b7d8:	bl	2b280 <handleBestCharacter@@Base+0x8c>
   2b7dc:	add	r0, r5, r0
   2b7e0:	cmp	r0, r4
   2b7e4:	movcc	r5, r0
   2b7e8:	movcs	r5, r4
   2b7ec:	b	2b574 <describeCommand@@Base+0x100>
   2b7f0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2b7f4:	mov	r0, r5
   2b7f8:	ldr	ip, [pc, #1020]	; 2bbfc <describeCommand@@Base+0x788>
   2b7fc:	mov	r2, #1
   2b800:	mvn	r3, #0
   2b804:	add	ip, pc, ip
   2b808:	str	r1, [sp, #4]
   2b80c:	str	ip, [sp]
   2b810:	rsb	r1, r5, r4
   2b814:	bl	fb60 <__snprintf_chk@plt>
   2b818:	ldrb	r3, [r6, #12]
   2b81c:	and	r2, r3, #12
   2b820:	add	r0, r5, r0
   2b824:	cmp	r0, r4
   2b828:	movcc	r5, r0
   2b82c:	movcs	r5, r4
   2b830:	cmp	r2, #8
   2b834:	bne	2b55c <describeCommand@@Base+0xe8>
   2b838:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2b83c:	cmp	r2, #255	; 0xff
   2b840:	beq	2b854 <describeCommand@@Base+0x3e0>
   2b844:	tst	sl, #4
   2b848:	beq	2b55c <describeCommand@@Base+0xe8>
   2b84c:	cmp	r2, #0
   2b850:	bne	2b55c <describeCommand@@Base+0xe8>
   2b854:	ldr	r1, [pc, #932]	; 2bc00 <describeCommand@@Base+0x78c>
   2b858:	mov	r2, #5
   2b85c:	mov	r0, #0
   2b860:	add	r1, pc, r1
   2b864:	bl	f9bc <dcgettext@plt>
   2b868:	ldr	ip, [pc, #916]	; 2bc04 <describeCommand@@Base+0x790>
   2b86c:	rsb	r1, r5, r4
   2b870:	mvn	r3, #0
   2b874:	add	ip, pc, ip
   2b878:	mov	r2, #1
   2b87c:	str	ip, [sp]
   2b880:	str	r0, [sp, #4]
   2b884:	mov	r0, r5
   2b888:	bl	fb60 <__snprintf_chk@plt>
   2b88c:	ldrb	r3, [r6, #12]
   2b890:	add	r0, r5, r0
   2b894:	cmp	r0, r4
   2b898:	movcc	r5, r0
   2b89c:	movcs	r5, r4
   2b8a0:	b	2b56c <describeCommand@@Base+0xf8>
   2b8a4:	ldr	r2, [pc, #860]	; 2bc08 <describeCommand@@Base+0x794>
   2b8a8:	mov	r0, r5
   2b8ac:	rsb	r1, r5, r4
   2b8b0:	ldr	r9, [pc, #852]	; 2bc0c <describeCommand@@Base+0x798>
   2b8b4:	add	r2, pc, r2
   2b8b8:	bl	f734 <snprintf@plt>
   2b8bc:	ldr	r2, [pc, #844]	; 2bc10 <describeCommand@@Base+0x79c>
   2b8c0:	ldr	ip, [pc, #844]	; 2bc14 <describeCommand@@Base+0x7a0>
   2b8c4:	add	r9, pc, r9
   2b8c8:	add	r2, pc, r2
   2b8cc:	str	r2, [fp, #-68]	; 0xffffffbc
   2b8d0:	add	ip, pc, ip
   2b8d4:	str	r8, [fp, #-76]	; 0xffffffb4
   2b8d8:	ldr	r8, [fp, #-68]	; 0xffffffbc
   2b8dc:	mov	r3, #16777216	; 0x1000000
   2b8e0:	ldr	lr, [pc, #816]	; 2bc18 <describeCommand@@Base+0x7a4>
   2b8e4:	mov	r2, #1
   2b8e8:	str	r6, [fp, #-72]	; 0xffffffb8
   2b8ec:	mov	r6, ip
   2b8f0:	add	lr, pc, lr
   2b8f4:	str	lr, [fp, #-80]	; 0xffffffb0
   2b8f8:	add	r0, r5, r0
   2b8fc:	cmp	r0, r4
   2b900:	movcc	r5, r0
   2b904:	movcs	r5, r4
   2b908:	tst	r3, r7
   2b90c:	beq	2b950 <describeCommand@@Base+0x4dc>
   2b910:	cmp	r6, r9
   2b914:	beq	2ba20 <describeCommand@@Base+0x5ac>
   2b918:	rsb	r3, r6, r9
   2b91c:	mov	r0, r5
   2b920:	rsb	r1, r5, r4
   2b924:	mov	r2, #1
   2b928:	asr	r3, r3, #2
   2b92c:	str	r8, [sp]
   2b930:	str	r3, [sp, #4]
   2b934:	mvn	r3, #0
   2b938:	bl	fb60 <__snprintf_chk@plt>
   2b93c:	mov	r2, #0
   2b940:	add	r0, r5, r0
   2b944:	cmp	r0, r4
   2b948:	movcc	r5, r0
   2b94c:	movcs	r5, r4
   2b950:	ldr	r3, [r9, #4]!
   2b954:	cmp	r3, #0
   2b958:	bne	2b908 <describeCommand@@Base+0x494>
   2b95c:	cmp	r2, #0
   2b960:	ldr	r6, [fp, #-72]	; 0xffffffb8
   2b964:	ldr	r8, [fp, #-76]	; 0xffffffb4
   2b968:	bne	2bb74 <describeCommand@@Base+0x700>
   2b96c:	ldr	r2, [pc, #680]	; 2bc1c <describeCommand@@Base+0x7a8>
   2b970:	mov	r0, r5
   2b974:	rsb	r1, r5, r4
   2b978:	add	r2, pc, r2
   2b97c:	bl	f734 <snprintf@plt>
   2b980:	ldrb	r3, [r6, #13]
   2b984:	add	r0, r5, r0
   2b988:	cmp	r0, r4
   2b98c:	movcc	r5, r0
   2b990:	movcs	r5, r4
   2b994:	b	2b544 <describeCommand@@Base+0xd0>
   2b998:	ldr	ip, [pc, #640]	; 2bc20 <describeCommand@@Base+0x7ac>
   2b99c:	mov	r0, r5
   2b9a0:	str	r1, [sp, #4]
   2b9a4:	mvn	r3, #0
   2b9a8:	add	ip, pc, ip
   2b9ac:	rsb	r1, r5, r4
   2b9b0:	mov	r2, #1
   2b9b4:	str	ip, [sp]
   2b9b8:	bl	fb60 <__snprintf_chk@plt>
   2b9bc:	ldrb	r3, [r6, #13]
   2b9c0:	add	r0, r5, r0
   2b9c4:	cmp	r0, r4
   2b9c8:	movcc	r5, r0
   2b9cc:	movcs	r5, r4
   2b9d0:	b	2b53c <describeCommand@@Base+0xc8>
   2b9d4:	ldr	ip, [pc, #584]	; 2bc24 <describeCommand@@Base+0x7b0>
   2b9d8:	mov	r2, #1
   2b9dc:	mov	r0, r5
   2b9e0:	rsb	r1, r5, r4
   2b9e4:	add	ip, pc, ip
   2b9e8:	str	ip, [sp]
   2b9ec:	ldrb	ip, [r6, #8]
   2b9f0:	mvn	r3, #0
   2b9f4:	ldr	lr, [fp, #-64]	; 0xffffffc0
   2b9f8:	rsb	ip, ip, r2
   2b9fc:	add	ip, ip, lr
   2ba00:	str	ip, [sp, #4]
   2ba04:	bl	fb60 <__snprintf_chk@plt>
   2ba08:	ldrb	r3, [r6, #12]
   2ba0c:	add	r0, r5, r0
   2ba10:	cmp	r0, r4
   2ba14:	movcc	r5, r0
   2ba18:	movcs	r5, r4
   2ba1c:	b	2b56c <describeCommand@@Base+0xf8>
   2ba20:	mov	r0, r5
   2ba24:	rsb	r1, r5, r4
   2ba28:	ldr	r2, [fp, #-80]	; 0xffffffb0
   2ba2c:	bl	f734 <snprintf@plt>
   2ba30:	mov	r2, #0
   2ba34:	add	r0, r5, r0
   2ba38:	cmp	r0, r4
   2ba3c:	movcc	r5, r0
   2ba40:	movcs	r5, r4
   2ba44:	b	2b950 <describeCommand@@Base+0x4dc>
   2ba48:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2ba4c:	mov	r0, r5
   2ba50:	ldr	r3, [pc, #464]	; 2bc28 <describeCommand@@Base+0x7b4>
   2ba54:	str	r1, [sp, #4]
   2ba58:	add	r3, pc, r3
   2ba5c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2ba60:	rsb	r1, r5, r4
   2ba64:	str	r3, [sp]
   2ba68:	mvn	r3, #0
   2ba6c:	str	r2, [sp, #8]
   2ba70:	mov	r2, #1
   2ba74:	bl	fb60 <__snprintf_chk@plt>
   2ba78:	ldrb	r3, [r6, #12]
   2ba7c:	add	r0, r5, r0
   2ba80:	cmp	r0, r4
   2ba84:	movcc	r5, r0
   2ba88:	movcs	r5, r4
   2ba8c:	b	2b56c <describeCommand@@Base+0xf8>
   2ba90:	ldr	r1, [pc, #404]	; 2bc2c <describeCommand@@Base+0x7b8>
   2ba94:	mov	r2, #5
   2ba98:	mov	r0, #0
   2ba9c:	add	r1, pc, r1
   2baa0:	bl	f9bc <dcgettext@plt>
   2baa4:	ldr	ip, [pc, #388]	; 2bc30 <describeCommand@@Base+0x7bc>
   2baa8:	rsb	r1, r5, r4
   2baac:	mov	r2, #1
   2bab0:	add	ip, pc, ip
   2bab4:	mvn	r3, #0
   2bab8:	str	ip, [sp]
   2babc:	str	r0, [sp, #4]
   2bac0:	mov	r0, r5
   2bac4:	bl	fb60 <__snprintf_chk@plt>
   2bac8:	add	r0, r5, r0
   2bacc:	cmp	r0, r4
   2bad0:	movcc	r5, r0
   2bad4:	movcs	r5, r4
   2bad8:	b	2b5a4 <describeCommand@@Base+0x130>
   2badc:	tst	r7, #131072	; 0x20000
   2bae0:	beq	2b6ec <describeCommand@@Base+0x278>
   2bae4:	ldrb	ip, [r3]
   2bae8:	mov	r1, #32
   2baec:	strb	r2, [r3]
   2baf0:	mov	r0, r9
   2baf4:	str	r3, [fp, #-88]	; 0xffffffa8
   2baf8:	str	ip, [fp, #-84]	; 0xffffffac
   2bafc:	bl	fd34 <strrchr@plt>
   2bb00:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2bb04:	ldr	ip, [fp, #-84]	; 0xffffffac
   2bb08:	add	r1, r3, #1
   2bb0c:	strb	ip, [r3]
   2bb10:	cmp	r0, #0
   2bb14:	addne	r2, r0, #1
   2bb18:	moveq	r2, r9
   2bb1c:	mov	r3, r2
   2bb20:	b	2b6c8 <describeCommand@@Base+0x254>
   2bb24:	ldr	r1, [pc, #264]	; 2bc34 <describeCommand@@Base+0x7c0>
   2bb28:	mov	r2, #5
   2bb2c:	add	r1, pc, r1
   2bb30:	bl	f9bc <dcgettext@plt>
   2bb34:	ldr	ip, [pc, #252]	; 2bc38 <describeCommand@@Base+0x7c4>
   2bb38:	str	r7, [sp, #8]
   2bb3c:	rsb	r1, r5, r4
   2bb40:	add	ip, pc, ip
   2bb44:	mov	r2, #1
   2bb48:	str	ip, [sp]
   2bb4c:	mvn	r3, #0
   2bb50:	str	r5, [fp, #-52]	; 0xffffffcc
   2bb54:	str	r0, [sp, #4]
   2bb58:	mov	r0, r5
   2bb5c:	bl	fb60 <__snprintf_chk@plt>
   2bb60:	add	r0, r5, r0
   2bb64:	cmp	r0, r4
   2bb68:	movcc	r5, r0
   2bb6c:	movcs	r5, r4
   2bb70:	b	2b5b4 <describeCommand@@Base+0x140>
   2bb74:	ldr	r1, [pc, #192]	; 2bc3c <describeCommand@@Base+0x7c8>
   2bb78:	mov	r0, r3
   2bb7c:	mov	r2, #5
   2bb80:	add	r1, pc, r1
   2bb84:	bl	f9bc <dcgettext@plt>
   2bb88:	ldr	r2, [pc, #176]	; 2bc40 <describeCommand@@Base+0x7cc>
   2bb8c:	rsb	r1, r5, r4
   2bb90:	add	r2, pc, r2
   2bb94:	mov	r3, r0
   2bb98:	mov	r0, r5
   2bb9c:	bl	f734 <snprintf@plt>
   2bba0:	add	r0, r5, r0
   2bba4:	cmp	r0, r4
   2bba8:	movcc	r5, r0
   2bbac:	movcs	r5, r4
   2bbb0:	b	2b96c <describeCommand@@Base+0x4f8>
   2bbb4:	mov	r0, r3
   2bbb8:	bl	fb54 <strlen@plt>
   2bbbc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2bbc0:	add	r1, r3, r0
   2bbc4:	b	2b6c8 <describeCommand@@Base+0x254>
   2bbc8:	bl	f950 <__stack_chk_fail@plt>
   2bbcc:	andeq	r7, r4, ip, ror #11
   2bbd0:			; <UNDEFINED> instruction: 0x000003b4
   2bbd4:	andeq	r3, r2, r4, lsl #7
   2bbd8:	muleq	r2, r8, sp
   2bbdc:	andeq	r5, r2, r8, ror #26
   2bbe0:	andeq	r3, r2, ip, asr #13
   2bbe4:	andeq	r3, r2, r8, ror r1
   2bbe8:	andeq	r0, r0, r0, lsr r5
   2bbec:	andeq	r5, r2, r4, lsl ip
   2bbf0:	strdeq	r5, [r2], -r8
   2bbf4:	andeq	r0, r0, r0, lsl #9
   2bbf8:			; <UNDEFINED> instruction: 0x000004b4
   2bbfc:	andeq	r5, r2, r8, lsr #22
   2bc00:	ldrdeq	r5, [r2], -r8
   2bc04:	andeq	r3, r2, ip, ror r7
   2bc08:	andeq	r3, r2, r8, lsl #8
   2bc0c:	andeq	r5, r2, ip, lsl #20
   2bc10:	andeq	lr, r2, r8, lsl #1
   2bc14:	andeq	r5, r2, r0, lsl #20
   2bc18:	andeq	r5, r2, r8, lsr sl
   2bc1c:	andeq	r0, r3, r4, ror #16
   2bc20:	andeq	r5, r2, r4, ror r9
   2bc24:	andeq	r5, r2, r0, ror #18
   2bc28:	strdeq	r5, [r2], -r4
   2bc2c:			; <UNDEFINED> instruction: 0x000258b8
   2bc30:			; <UNDEFINED> instruction: 0x000258b0
   2bc34:	ldrdeq	r5, [r2], -r4
   2bc38:	ldrdeq	r5, [r2], -r0
   2bc3c:	andeq	r2, r2, ip, lsl ip
   2bc40:	andeq	r2, r2, r4, ror #25
   2bc44:	push	{r4, r5, r6, r7, lr}
   2bc48:	sub	sp, sp, #12
   2bc4c:	ldr	r3, [pc, #124]	; 2bcd0 <describeCommand@@Base+0x85c>
   2bc50:	add	r4, r0, r1
   2bc54:	mov	r7, r2
   2bc58:	rsb	r1, r0, r4
   2bc5c:	add	r3, pc, r3
   2bc60:	mov	r2, #1
   2bc64:	stm	sp, {r3, r7}
   2bc68:	mvn	r3, #0
   2bc6c:	mov	r5, r0
   2bc70:	bl	fb60 <__snprintf_chk@plt>
   2bc74:	mov	r3, #3
   2bc78:	add	r6, r5, r0
   2bc7c:	mov	r0, r7
   2bc80:	cmp	r6, r4
   2bc84:	movcs	r6, r4
   2bc88:	rsb	r2, r6, r4
   2bc8c:	mov	r1, r6
   2bc90:	bl	2b474 <describeCommand@@Base>
   2bc94:	ldr	r2, [pc, #56]	; 2bcd4 <describeCommand@@Base+0x860>
   2bc98:	add	r2, pc, r2
   2bc9c:	add	r0, r6, r0
   2bca0:	cmp	r0, r4
   2bca4:	movcc	r6, r0
   2bca8:	movcs	r6, r4
   2bcac:	rsb	r1, r6, r4
   2bcb0:	mov	r0, r6
   2bcb4:	bl	f734 <snprintf@plt>
   2bcb8:	add	r0, r6, r0
   2bcbc:	cmp	r0, r4
   2bcc0:	rsbls	r0, r5, r0
   2bcc4:	rsbhi	r0, r5, r4
   2bcc8:	add	sp, sp, #12
   2bccc:	pop	{r4, r5, r6, r7, pc}
   2bcd0:	andeq	r5, r2, ip, lsr #14
   2bcd4:	andeq	pc, r2, r0, lsr #7
   2bcd8:	push	{r4, r5, r6, lr}
   2bcdc:	mov	r6, r2
   2bce0:	ldr	r2, [pc, #68]	; 2bd2c <describeCommand@@Base+0x8b8>
   2bce4:	add	r5, r0, r1
   2bce8:	rsb	r1, r0, r5
   2bcec:	mov	r4, r0
   2bcf0:	add	r2, pc, r2
   2bcf4:	bl	f734 <snprintf@plt>
   2bcf8:	ldr	r2, [r6]
   2bcfc:	add	r0, r4, r0
   2bd00:	cmp	r0, r5
   2bd04:	movcc	r6, r0
   2bd08:	movcs	r6, r5
   2bd0c:	rsb	r1, r6, r5
   2bd10:	mov	r0, r6
   2bd14:	bl	2bc44 <describeCommand@@Base+0x7d0>
   2bd18:	add	r0, r6, r0
   2bd1c:	cmp	r0, r5
   2bd20:	rsbls	r0, r4, r0
   2bd24:	rsbhi	r0, r4, r5
   2bd28:	pop	{r4, r5, r6, pc}
   2bd2c:	andeq	r5, r2, r0, lsr #13
   2bd30:	push	{r3, r4, r5, r6, r7, lr}
   2bd34:	mov	r7, r2
   2bd38:	ldr	r2, [pc, #136]	; 2bdc8 <describeCommand@@Base+0x954>
   2bd3c:	add	r4, r0, r1
   2bd40:	rsb	r1, r0, r4
   2bd44:	mov	r5, r0
   2bd48:	add	r2, pc, r2
   2bd4c:	bl	f734 <snprintf@plt>
   2bd50:	ldr	r2, [r7]
   2bd54:	add	r0, r5, r0
   2bd58:	cmp	r0, r4
   2bd5c:	movcc	r6, r0
   2bd60:	movcs	r6, r4
   2bd64:	rsb	r1, r6, r4
   2bd68:	mov	r0, r6
   2bd6c:	bl	2bc44 <describeCommand@@Base+0x7d0>
   2bd70:	ldr	r2, [pc, #84]	; 2bdcc <describeCommand@@Base+0x958>
   2bd74:	add	r2, pc, r2
   2bd78:	add	r0, r6, r0
   2bd7c:	cmp	r0, r4
   2bd80:	movcc	r6, r0
   2bd84:	movcs	r6, r4
   2bd88:	rsb	r1, r6, r4
   2bd8c:	mov	r0, r6
   2bd90:	bl	f734 <snprintf@plt>
   2bd94:	ldr	r2, [r7, #4]
   2bd98:	add	r0, r6, r0
   2bd9c:	cmp	r0, r4
   2bda0:	movcc	r6, r0
   2bda4:	movcs	r6, r4
   2bda8:	rsb	r1, r6, r4
   2bdac:	mov	r0, r6
   2bdb0:	bl	2bc44 <describeCommand@@Base+0x7d0>
   2bdb4:	add	r0, r6, r0
   2bdb8:	cmp	r0, r4
   2bdbc:	rsbls	r0, r5, r0
   2bdc0:	rsbhi	r0, r5, r4
   2bdc4:	pop	{r3, r4, r5, r6, r7, pc}
   2bdc8:	andeq	r5, r2, r8, asr #12
   2bdcc:	andeq	r5, r2, r8, lsr #12

0002bdd0 <logCommand@@Base>:
   2bdd0:	ldr	r3, [pc, #80]	; 2be28 <logCommand@@Base+0x58>
   2bdd4:	ldr	ip, [pc, #80]	; 2be2c <logCommand@@Base+0x5c>
   2bdd8:	add	r3, pc, r3
   2bddc:	ldr	r1, [pc, #76]	; 2be30 <logCommand@@Base+0x60>
   2bde0:	push	{r4, lr}
   2bde4:	sub	sp, sp, #8
   2bde8:	ldr	r4, [r3, ip]
   2bdec:	add	r2, sp, #8
   2bdf0:	add	r1, pc, r1
   2bdf4:	str	r0, [r2, #-8]!
   2bdf8:	mov	r2, sp
   2bdfc:	ldr	r3, [r4]
   2be00:	mov	r0, #7
   2be04:	str	r3, [sp, #4]
   2be08:	bl	1c2f4 <logData@@Base>
   2be0c:	ldr	r2, [sp, #4]
   2be10:	ldr	r3, [r4]
   2be14:	cmp	r2, r3
   2be18:	bne	2be24 <logCommand@@Base+0x54>
   2be1c:	add	sp, sp, #8
   2be20:	pop	{r4, pc}
   2be24:	bl	f950 <__stack_chk_fail@plt>
   2be28:	andeq	r6, r4, r0, lsr #25
   2be2c:			; <UNDEFINED> instruction: 0x000003b4
   2be30:			; <UNDEFINED> instruction: 0xfffffee0

0002be34 <logTransformedCommand@@Base>:
   2be34:	ldr	r3, [pc, #80]	; 2be8c <logTransformedCommand@@Base+0x58>
   2be38:	ldr	ip, [pc, #80]	; 2be90 <logTransformedCommand@@Base+0x5c>
   2be3c:	add	r3, pc, r3
   2be40:	push	{r4, lr}
   2be44:	sub	sp, sp, #16
   2be48:	ldr	r4, [r3, ip]
   2be4c:	add	r2, sp, #4
   2be50:	str	r1, [sp, #8]
   2be54:	ldr	r1, [pc, #56]	; 2be94 <logTransformedCommand@@Base+0x60>
   2be58:	ldr	r3, [r4]
   2be5c:	str	r0, [sp, #4]
   2be60:	add	r1, pc, r1
   2be64:	mov	r0, #7
   2be68:	str	r3, [sp, #12]
   2be6c:	bl	1c2f4 <logData@@Base>
   2be70:	ldr	r2, [sp, #12]
   2be74:	ldr	r3, [r4]
   2be78:	cmp	r2, r3
   2be7c:	bne	2be88 <logTransformedCommand@@Base+0x54>
   2be80:	add	sp, sp, #16
   2be84:	pop	{r4, pc}
   2be88:	bl	f950 <__stack_chk_fail@plt>
   2be8c:	andeq	r6, r4, ip, lsr ip
   2be90:			; <UNDEFINED> instruction: 0x000003b4
   2be94:			; <UNDEFINED> instruction: 0xfffffec8

0002be98 <resetRepeatState@@Base>:
   2be98:	mov	r3, #0
   2be9c:	mvn	r2, #0
   2bea0:	str	r3, [r0, #8]
   2bea4:	stm	r0, {r2, r3}
   2bea8:	bx	lr

0002beac <handleRepeatFlags@@Base>:
   2beac:	ldr	ip, [pc, #592]	; 2c104 <handleRepeatFlags@@Base+0x258>
   2beb0:	push	{r4, r5, r6, r7, r8, lr}
   2beb4:	add	ip, pc, ip
   2beb8:	ldr	r6, [pc, #584]	; 2c108 <handleRepeatFlags@@Base+0x25c>
   2bebc:	subs	r4, r1, #0
   2bec0:	mov	r1, ip
   2bec4:	sub	sp, sp, #24
   2bec8:	mov	r5, r0
   2becc:	ldr	r6, [ip, r6]
   2bed0:	ldr	r1, [r6]
   2bed4:	str	r1, [sp, #20]
   2bed8:	beq	2c08c <handleRepeatFlags@@Base+0x1e0>
   2bedc:	ldr	r1, [r0]
   2bee0:	cmn	r1, #1
   2bee4:	beq	2bfec <handleRepeatFlags@@Base+0x140>
   2bee8:	and	r0, r1, #65280	; 0xff00
   2beec:	bic	ip, r1, #12582912	; 0xc00000
   2bef0:	cmp	r0, #8448	; 0x2100
   2bef4:	str	ip, [r5]
   2bef8:	and	r7, r1, #12582912	; 0xc00000
   2befc:	beq	2bf54 <handleRepeatFlags@@Base+0xa8>
   2bf00:	cmp	r0, #8704	; 0x2200
   2bf04:	beq	2bf54 <handleRepeatFlags@@Base+0xa8>
   2bf08:	uxth	r1, r1
   2bf0c:	cmp	r1, #60	; 0x3c
   2bf10:	bgt	2c040 <handleRepeatFlags@@Base+0x194>
   2bf14:	cmp	r1, #57	; 0x39
   2bf18:	bge	2bf54 <handleRepeatFlags@@Base+0xa8>
   2bf1c:	cmp	r1, #6
   2bf20:	ble	2c0e8 <handleRepeatFlags@@Base+0x23c>
   2bf24:	cmp	r1, #19
   2bf28:	blt	2bf48 <handleRepeatFlags@@Base+0x9c>
   2bf2c:	cmp	r1, #20
   2bf30:	ble	2bf54 <handleRepeatFlags@@Base+0xa8>
   2bf34:	sub	r1, r1, #23
   2bf38:	cmp	r1, #1
   2bf3c:	bhi	2bf48 <handleRepeatFlags@@Base+0x9c>
   2bf40:	cmp	r2, #0
   2bf44:	bne	2bf54 <handleRepeatFlags@@Base+0xa8>
   2bf48:	cmp	r7, #4194304	; 0x400000
   2bf4c:	mov	r7, #0
   2bf50:	streq	r7, [r5]
   2bf54:	ldr	r2, [r4, #8]
   2bf58:	cmp	r2, #0
   2bf5c:	bne	2bf98 <handleRepeatFlags@@Base+0xec>
   2bf60:	ldr	r2, [r5]
   2bf64:	tst	r7, #4194304	; 0x400000
   2bf68:	str	r2, [r4]
   2bf6c:	bne	2bfc4 <handleRepeatFlags@@Base+0x118>
   2bf70:	tst	r7, #8388608	; 0x800000
   2bf74:	bne	2c070 <handleRepeatFlags@@Base+0x1c4>
   2bf78:	mov	r3, #0
   2bf7c:	str	r3, [r4, #4]
   2bf80:	ldr	r2, [sp, #20]
   2bf84:	ldr	r3, [r6]
   2bf88:	cmp	r2, r3
   2bf8c:	bne	2c100 <handleRepeatFlags@@Base+0x254>
   2bf90:	add	sp, sp, #24
   2bf94:	pop	{r4, r5, r6, r7, r8, pc}
   2bf98:	mov	r1, #0
   2bf9c:	ldr	r0, [r4]
   2bfa0:	str	r1, [r4, #8]
   2bfa4:	ldr	r2, [r5]
   2bfa8:	cmp	r2, r0
   2bfac:	streq	r1, [r5]
   2bfb0:	streq	r1, [r4]
   2bfb4:	beq	2bf78 <handleRepeatFlags@@Base+0xcc>
   2bfb8:	tst	r7, #4194304	; 0x400000
   2bfbc:	str	r2, [r4]
   2bfc0:	beq	2bf70 <handleRepeatFlags@@Base+0xc4>
   2bfc4:	add	r0, r4, #12
   2bfc8:	str	r3, [sp, #4]
   2bfcc:	bl	1eb28 <getMonotonicTime@@Base>
   2bfd0:	ldr	r3, [sp, #4]
   2bfd4:	tst	r7, #8388608	; 0x800000
   2bfd8:	str	r3, [r4, #4]
   2bfdc:	bne	2c080 <handleRepeatFlags@@Base+0x1d4>
   2bfe0:	mov	r3, #0
   2bfe4:	str	r3, [r5]
   2bfe8:	b	2bf80 <handleRepeatFlags@@Base+0xd4>
   2bfec:	ldr	r3, [r4, #4]
   2bff0:	cmp	r3, #0
   2bff4:	beq	2bf80 <handleRepeatFlags@@Base+0xd4>
   2bff8:	add	r7, sp, #12
   2bffc:	add	r8, r4, #12
   2c000:	mov	r0, r7
   2c004:	bl	1eb28 <getMonotonicTime@@Base>
   2c008:	mov	r1, r7
   2c00c:	mov	r0, r8
   2c010:	bl	1ea9c <millisecondsBetween@@Base>
   2c014:	ldr	r3, [r4, #4]
   2c018:	cmp	r0, r3
   2c01c:	blt	2bf80 <handleRepeatFlags@@Base+0xd4>
   2c020:	ldr	r2, [r4]
   2c024:	mov	r3, #1
   2c028:	ldm	r7, {r0, r1}
   2c02c:	str	r2, [r5]
   2c030:	stm	r8, {r0, r1}
   2c034:	ldr	r1, [sp, #48]	; 0x30
   2c038:	stmib	r4, {r1, r3}
   2c03c:	b	2bf80 <handleRepeatFlags@@Base+0xd4>
   2c040:	cmp	r1, #97	; 0x61
   2c044:	bgt	2c0b0 <handleRepeatFlags@@Base+0x204>
   2c048:	cmp	r1, #96	; 0x60
   2c04c:	bge	2bf54 <handleRepeatFlags@@Base+0xa8>
   2c050:	cmp	r1, #90	; 0x5a
   2c054:	blt	2bf48 <handleRepeatFlags@@Base+0x9c>
   2c058:	cmp	r1, #91	; 0x5b
   2c05c:	ble	2bf54 <handleRepeatFlags@@Base+0xa8>
   2c060:	sub	r1, r1, #93	; 0x5d
   2c064:	cmp	r1, #1
   2c068:	bhi	2bf48 <handleRepeatFlags@@Base+0x9c>
   2c06c:	b	2bf54 <handleRepeatFlags@@Base+0xa8>
   2c070:	add	r0, r4, #12
   2c074:	bl	1eb28 <getMonotonicTime@@Base>
   2c078:	ldr	r2, [sp, #48]	; 0x30
   2c07c:	str	r2, [r4, #4]
   2c080:	mov	r3, #1
   2c084:	str	r3, [r4, #8]
   2c088:	b	2bf80 <handleRepeatFlags@@Base+0xd4>
   2c08c:	ldr	r3, [r0]
   2c090:	cmn	r3, #1
   2c094:	beq	2bf80 <handleRepeatFlags@@Base+0xd4>
   2c098:	and	r2, r3, #12582912	; 0xc00000
   2c09c:	cmp	r2, #4194304	; 0x400000
   2c0a0:	beq	2bfe0 <handleRepeatFlags@@Base+0x134>
   2c0a4:	bic	r3, r3, #12582912	; 0xc00000
   2c0a8:	str	r3, [r0]
   2c0ac:	b	2bf80 <handleRepeatFlags@@Base+0xd4>
   2c0b0:	movw	r2, #8201	; 0x2009
   2c0b4:	cmp	r1, r2
   2c0b8:	bgt	2c0d8 <handleRepeatFlags@@Base+0x22c>
   2c0bc:	movw	r2, #8196	; 0x2004
   2c0c0:	cmp	r1, r2
   2c0c4:	bge	2bf54 <handleRepeatFlags@@Base+0xa8>
   2c0c8:	movw	r2, #8194	; 0x2002
   2c0cc:	cmp	r1, r2
   2c0d0:	bne	2bf48 <handleRepeatFlags@@Base+0x9c>
   2c0d4:	b	2bf54 <handleRepeatFlags@@Base+0xa8>
   2c0d8:	movw	r2, #8205	; 0x200d
   2c0dc:	cmp	r1, r2
   2c0e0:	bne	2bf48 <handleRepeatFlags@@Base+0x9c>
   2c0e4:	b	2bf54 <handleRepeatFlags@@Base+0xa8>
   2c0e8:	cmp	r1, #5
   2c0ec:	bge	2bf54 <handleRepeatFlags@@Base+0xa8>
   2c0f0:	sub	r1, r1, #1
   2c0f4:	cmp	r1, #1
   2c0f8:	bhi	2bf48 <handleRepeatFlags@@Base+0x9c>
   2c0fc:	b	2bf54 <handleRepeatFlags@@Base+0xa8>
   2c100:	bl	f950 <__stack_chk_fail@plt>
   2c104:	andeq	r6, r4, r4, asr #23
   2c108:			; <UNDEFINED> instruction: 0x000003b4

0002c10c <cmdBrlttyToBrlapi@@Base>:
   2c10c:	lsr	ip, r0, #24
   2c110:	uxtb	r3, r0
   2c114:	push	{r4, r5, r6, lr}
   2c118:	and	r4, r0, #65280	; 0xff00
   2c11c:	cmp	r4, #8448	; 0x2100
   2c120:	orr	ip, r3, ip, lsl #8
   2c124:	ldr	r3, [pc, #680]	; 2c3d4 <cmdBrlttyToBrlapi@@Base+0x2c8>
   2c128:	mov	r6, r0
   2c12c:	add	r3, pc, r3
   2c130:	beq	2c2e8 <cmdBrlttyToBrlapi@@Base+0x1dc>
   2c134:	cmp	r4, #8704	; 0x2200
   2c138:	beq	2c2c8 <cmdBrlttyToBrlapi@@Base+0x1bc>
   2c13c:	cmp	r4, #8192	; 0x2000
   2c140:	beq	2c204 <cmdBrlttyToBrlapi@@Base+0xf8>
   2c144:	orr	r2, ip, r4, lsl #8
   2c148:	cmp	r4, #3328	; 0xd00
   2c14c:	orr	r2, r2, #536870912	; 0x20000000
   2c150:	asr	r3, r2, #31
   2c154:	bne	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c158:	ands	r4, r6, #65536	; 0x10000
   2c15c:	mov	r0, #0
   2c160:	orr	r2, r2, r0
   2c164:	mov	r0, #0
   2c168:	movne	r1, #256	; 0x100
   2c16c:	moveq	r1, #0
   2c170:	ands	ip, r6, #131072	; 0x20000
   2c174:	orr	r3, r3, r1
   2c178:	orr	r2, r2, r0
   2c17c:	movne	r1, #512	; 0x200
   2c180:	moveq	r1, #0
   2c184:	orr	r3, r3, r1
   2c188:	cmp	r4, #0
   2c18c:	mov	r0, #0
   2c190:	orr	r2, r2, r0
   2c194:	mov	r4, #0
   2c198:	moveq	r1, #0
   2c19c:	movne	r1, #256	; 0x100
   2c1a0:	cmp	ip, #0
   2c1a4:	orr	r3, r3, r1
   2c1a8:	mov	r0, #0
   2c1ac:	orr	r2, r2, r0
   2c1b0:	moveq	r1, #0
   2c1b4:	movne	r1, #512	; 0x200
   2c1b8:	tst	r6, #262144	; 0x40000
   2c1bc:	orr	r3, r3, r1
   2c1c0:	movne	r5, #1024	; 0x400
   2c1c4:	moveq	r5, #0
   2c1c8:	tst	r6, #8388608	; 0x800000
   2c1cc:	orr	r3, r3, r5
   2c1d0:	orr	r2, r2, r4
   2c1d4:	mov	r4, #0
   2c1d8:	movne	r5, #32768	; 0x8000
   2c1dc:	moveq	r5, #0
   2c1e0:	tst	r6, #4194304	; 0x400000
   2c1e4:	orr	r1, r5, r3
   2c1e8:	orr	r0, r4, r2
   2c1ec:	mov	r4, #0
   2c1f0:	movne	r5, #16384	; 0x4000
   2c1f4:	moveq	r5, #0
   2c1f8:	orr	r0, r0, r4
   2c1fc:	orr	r1, r1, r5
   2c200:	pop	{r4, r5, r6, pc}
   2c204:	cmp	ip, #13
   2c208:	addls	pc, pc, ip, lsl #2
   2c20c:	b	2c3c0 <cmdBrlttyToBrlapi@@Base+0x2b4>
   2c210:	b	2c248 <cmdBrlttyToBrlapi@@Base+0x13c>
   2c214:	b	2c324 <cmdBrlttyToBrlapi@@Base+0x218>
   2c218:	b	2c390 <cmdBrlttyToBrlapi@@Base+0x284>
   2c21c:	b	2c39c <cmdBrlttyToBrlapi@@Base+0x290>
   2c220:	b	2c3a8 <cmdBrlttyToBrlapi@@Base+0x29c>
   2c224:	b	2c3b4 <cmdBrlttyToBrlapi@@Base+0x2a8>
   2c228:	b	2c330 <cmdBrlttyToBrlapi@@Base+0x224>
   2c22c:	b	2c33c <cmdBrlttyToBrlapi@@Base+0x230>
   2c230:	b	2c348 <cmdBrlttyToBrlapi@@Base+0x23c>
   2c234:	b	2c354 <cmdBrlttyToBrlapi@@Base+0x248>
   2c238:	b	2c360 <cmdBrlttyToBrlapi@@Base+0x254>
   2c23c:	b	2c36c <cmdBrlttyToBrlapi@@Base+0x260>
   2c240:	b	2c378 <cmdBrlttyToBrlapi@@Base+0x26c>
   2c244:	b	2c384 <cmdBrlttyToBrlapi@@Base+0x278>
   2c248:	movw	r2, #65293	; 0xff0d
   2c24c:	mov	r3, #0
   2c250:	and	r1, r6, #65024	; 0xfe00
   2c254:	cmp	r1, #8192	; 0x2000
   2c258:	beq	2c26c <cmdBrlttyToBrlapi@@Base+0x160>
   2c25c:	cmp	r4, #8704	; 0x2200
   2c260:	andne	r4, r6, #65536	; 0x10000
   2c264:	andne	ip, r6, #131072	; 0x20000
   2c268:	bne	2c188 <cmdBrlttyToBrlapi@@Base+0x7c>
   2c26c:	tst	r6, #262144	; 0x40000
   2c270:	mov	r0, #0
   2c274:	orr	r2, r2, r0
   2c278:	mov	r0, #0
   2c27c:	movne	r1, #4
   2c280:	moveq	r1, #0
   2c284:	tst	r6, #524288	; 0x80000
   2c288:	orr	r3, r3, r1
   2c28c:	orr	r2, r2, r0
   2c290:	mov	r4, #0
   2c294:	movne	r1, #8
   2c298:	moveq	r1, #0
   2c29c:	tst	r6, #131072	; 0x20000
   2c2a0:	orr	r3, r3, r1
   2c2a4:	mov	r0, #0
   2c2a8:	orr	r2, r2, r0
   2c2ac:	movne	r1, #2
   2c2b0:	moveq	r1, #0
   2c2b4:	tst	r6, #65536	; 0x10000
   2c2b8:	orr	r3, r3, r1
   2c2bc:	movne	r5, #1
   2c2c0:	moveq	r5, #0
   2c2c4:	b	2c1c8 <cmdBrlttyToBrlapi@@Base+0xbc>
   2c2c8:	cmp	r1, #0
   2c2cc:	beq	2c2fc <cmdBrlttyToBrlapi@@Base+0x1f0>
   2c2d0:	cmp	ip, #256	; 0x100
   2c2d4:	moveq	ip, #0
   2c2d8:	orr	r2, ip, #536870912	; 0x20000000
   2c2dc:	orr	r2, r2, #2228224	; 0x220000
   2c2e0:	asr	r3, r2, #31
   2c2e4:	b	2c26c <cmdBrlttyToBrlapi@@Base+0x160>
   2c2e8:	cmp	ip, #255	; 0xff
   2c2ec:	mov	r3, #0
   2c2f0:	orrhi	r2, ip, #16777216	; 0x1000000
   2c2f4:	movls	r2, ip
   2c2f8:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c2fc:	ldr	r2, [pc, #212]	; 2c3d8 <cmdBrlttyToBrlapi@@Base+0x2cc>
   2c300:	uxtb	r1, ip
   2c304:	ldr	r3, [r3, r2]
   2c308:	ldr	r0, [r3]
   2c30c:	bl	2d94c <convertDotsToCharacter@@Base>
   2c310:	mov	r3, #0
   2c314:	cmp	r0, #255	; 0xff
   2c318:	orrhi	r2, r0, #16777216	; 0x1000000
   2c31c:	movls	r2, r0
   2c320:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c324:	movw	r2, #65289	; 0xff09
   2c328:	mov	r3, #0
   2c32c:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c330:	movw	r2, #65362	; 0xff52
   2c334:	mov	r3, #0
   2c338:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c33c:	movw	r2, #65364	; 0xff54
   2c340:	mov	r3, #0
   2c344:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c348:	movw	r2, #65365	; 0xff55
   2c34c:	mov	r3, #0
   2c350:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c354:	movw	r2, #65366	; 0xff56
   2c358:	mov	r3, #0
   2c35c:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c360:	movw	r2, #65360	; 0xff50
   2c364:	mov	r3, #0
   2c368:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c36c:	movw	r2, #65367	; 0xff57
   2c370:	mov	r3, #0
   2c374:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c378:	movw	r2, #65379	; 0xff63
   2c37c:	mov	r3, #0
   2c380:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c384:	movw	r2, #65535	; 0xffff
   2c388:	mov	r3, #0
   2c38c:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c390:	movw	r2, #65288	; 0xff08
   2c394:	mov	r3, #0
   2c398:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c39c:	movw	r2, #65307	; 0xff1b
   2c3a0:	mov	r3, #0
   2c3a4:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c3a8:	movw	r2, #65361	; 0xff51
   2c3ac:	mov	r3, #0
   2c3b0:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c3b4:	movw	r2, #65363	; 0xff53
   2c3b8:	mov	r3, #0
   2c3bc:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c3c0:	movw	r0, #65456	; 0xffb0
   2c3c4:	mov	r1, #0
   2c3c8:	adds	r2, r0, ip
   2c3cc:	adc	r3, r1, ip, asr #31
   2c3d0:	b	2c250 <cmdBrlttyToBrlapi@@Base+0x144>
   2c3d4:	andeq	r6, r4, ip, asr #18
   2c3d8:	strdeq	r0, [r0], -ip

0002c3dc <cmdBrlapiToBrltty@@Base>:
   2c3dc:	mov	r2, #-536870912	; 0xe0000000
   2c3e0:	mov	r3, #0
   2c3e4:	and	r2, r2, r0
   2c3e8:	and	r3, r3, r1
   2c3ec:	push	{r4, r5, r6, r7, r8, r9, sl}
   2c3f0:	orrs	r6, r2, r3
   2c3f4:	beq	2c570 <cmdBrlapiToBrltty@@Base+0x194>
   2c3f8:	cmp	r3, #0
   2c3fc:	cmpeq	r2, #536870912	; 0x20000000
   2c400:	bne	2c564 <cmdBrlapiToBrltty@@Base+0x188>
   2c404:	mov	r2, #0
   2c408:	movt	r2, #8191	; 0x1fff
   2c40c:	and	r2, r2, r0
   2c410:	mov	r3, #0
   2c414:	and	r3, r3, r1
   2c418:	ubfx	ip, r0, #8, #8
   2c41c:	lsr	r2, r2, #16
   2c420:	uxtb	r9, r0
   2c424:	orr	r2, r2, r3, lsl #16
   2c428:	lsl	ip, ip, #24
   2c42c:	orr	r2, ip, r2, lsl #8
   2c430:	orr	r9, r2, r9
   2c434:	mov	r2, #0
   2c438:	mov	r3, #256	; 0x100
   2c43c:	and	r2, r2, r0
   2c440:	and	r3, r3, r1
   2c444:	orrs	r7, r2, r3
   2c448:	mov	r4, #0
   2c44c:	mov	r5, #512	; 0x200
   2c450:	and	r4, r4, r0
   2c454:	and	r5, r5, r1
   2c458:	moveq	r8, #0
   2c45c:	movne	r8, #65536	; 0x10000
   2c460:	orrs	sl, r4, r5
   2c464:	mov	r6, #0
   2c468:	mov	r7, #1024	; 0x400
   2c46c:	and	r6, r6, r0
   2c470:	and	r7, r7, r1
   2c474:	moveq	ip, #0
   2c478:	movne	ip, #131072	; 0x20000
   2c47c:	orrs	sl, r6, r7
   2c480:	mov	r2, #0
   2c484:	mov	r3, #32768	; 0x8000
   2c488:	and	r2, r2, r0
   2c48c:	and	r3, r3, r1
   2c490:	moveq	r6, #0
   2c494:	movne	r6, #262144	; 0x40000
   2c498:	orrs	r7, r2, r3
   2c49c:	mov	r4, #0
   2c4a0:	mov	r5, #16384	; 0x4000
   2c4a4:	and	r4, r4, r0
   2c4a8:	and	r5, r5, r1
   2c4ac:	orr	r9, r8, r9
   2c4b0:	moveq	r7, #0
   2c4b4:	movne	r7, #8388608	; 0x800000
   2c4b8:	orrs	sl, r4, r5
   2c4bc:	orr	r9, r9, ip
   2c4c0:	mov	r2, #0
   2c4c4:	mov	r3, #4
   2c4c8:	and	r2, r2, r0
   2c4cc:	and	r3, r3, r1
   2c4d0:	orr	r6, r9, r6
   2c4d4:	moveq	sl, #0
   2c4d8:	movne	sl, #4194304	; 0x400000
   2c4dc:	orrs	r9, r2, r3
   2c4e0:	orr	r7, r6, r7
   2c4e4:	mov	r4, #0
   2c4e8:	mov	r5, #8
   2c4ec:	and	r4, r4, r0
   2c4f0:	and	r5, r5, r1
   2c4f4:	orr	r7, r7, sl
   2c4f8:	moveq	r9, #0
   2c4fc:	movne	r9, #262144	; 0x40000
   2c500:	orrs	sl, r4, r5
   2c504:	orr	r8, r7, r8
   2c508:	mov	r2, #0
   2c50c:	mov	r3, #2
   2c510:	and	r4, r0, r2
   2c514:	and	r5, r1, r3
   2c518:	moveq	r6, #0
   2c51c:	movne	r6, #524288	; 0x80000
   2c520:	orr	ip, r8, ip
   2c524:	orrs	r7, r4, r5
   2c528:	orr	ip, ip, r9
   2c52c:	mov	r3, #1
   2c530:	mov	r2, #0
   2c534:	and	r1, r1, r3
   2c538:	and	r0, r0, r2
   2c53c:	moveq	r3, #0
   2c540:	movne	r3, #131072	; 0x20000
   2c544:	orr	ip, ip, r6
   2c548:	orrs	r9, r0, r1
   2c54c:	orr	r0, ip, r3
   2c550:	pop	{r4, r5, r6, r7, r8, r9, sl}
   2c554:	moveq	r3, #0
   2c558:	movne	r3, #65536	; 0x10000
   2c55c:	orr	r0, r0, r3
   2c560:	bx	lr
   2c564:	mvn	r0, #0
   2c568:	pop	{r4, r5, r6, r7, r8, r9, sl}
   2c56c:	bx	lr
   2c570:	bic	r3, r0, #-536870912	; 0xe0000000
   2c574:	movw	r2, #65362	; 0xff52
   2c578:	cmp	r3, r2
   2c57c:	beq	2c6a4 <cmdBrlapiToBrltty@@Base+0x2c8>
   2c580:	bls	2c5b0 <cmdBrlapiToBrltty@@Base+0x1d4>
   2c584:	movw	r2, #65366	; 0xff56
   2c588:	cmp	r3, r2
   2c58c:	beq	2c69c <cmdBrlapiToBrltty@@Base+0x2c0>
   2c590:	bhi	2c5e4 <cmdBrlapiToBrltty@@Base+0x208>
   2c594:	movw	r2, #65364	; 0xff54
   2c598:	cmp	r3, r2
   2c59c:	movweq	r9, #8199	; 0x2007
   2c5a0:	beq	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c5a4:	movwls	r9, #8197	; 0x2005
   2c5a8:	movwhi	r9, #8200	; 0x2008
   2c5ac:	b	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c5b0:	movw	r2, #65293	; 0xff0d
   2c5b4:	cmp	r3, r2
   2c5b8:	beq	2c684 <cmdBrlapiToBrltty@@Base+0x2a8>
   2c5bc:	bls	2c610 <cmdBrlapiToBrltty@@Base+0x234>
   2c5c0:	movw	r2, #65360	; 0xff50
   2c5c4:	cmp	r3, r2
   2c5c8:	beq	2c694 <cmdBrlapiToBrltty@@Base+0x2b8>
   2c5cc:	bhi	2c67c <cmdBrlapiToBrltty@@Base+0x2a0>
   2c5d0:	movw	r2, #65307	; 0xff1b
   2c5d4:	cmp	r3, r2
   2c5d8:	movweq	r9, #8195	; 0x2003
   2c5dc:	beq	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c5e0:	b	2c62c <cmdBrlapiToBrltty@@Base+0x250>
   2c5e4:	movw	r2, #65379	; 0xff63
   2c5e8:	cmp	r3, r2
   2c5ec:	beq	2c68c <cmdBrlapiToBrltty@@Base+0x2b0>
   2c5f0:	add	r2, r2, #156	; 0x9c
   2c5f4:	cmp	r3, r2
   2c5f8:	beq	2c674 <cmdBrlapiToBrltty@@Base+0x298>
   2c5fc:	movw	r2, #65367	; 0xff57
   2c600:	cmp	r3, r2
   2c604:	bne	2c62c <cmdBrlapiToBrltty@@Base+0x250>
   2c608:	movw	r9, #8203	; 0x200b
   2c60c:	b	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c610:	movw	r2, #65288	; 0xff08
   2c614:	cmp	r3, r2
   2c618:	beq	2c66c <cmdBrlapiToBrltty@@Base+0x290>
   2c61c:	add	r2, r2, #1
   2c620:	cmp	r3, r2
   2c624:	movweq	r9, #8193	; 0x2001
   2c628:	beq	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c62c:	sub	r2, r3, #65280	; 0xff00
   2c630:	sub	ip, r2, #190	; 0xbe
   2c634:	cmp	ip, #34	; 0x22
   2c638:	subls	r2, r2, #176	; 0xb0
   2c63c:	orrls	r9, r2, #8192	; 0x2000
   2c640:	bls	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c644:	cmp	r3, #255	; 0xff
   2c648:	bls	2c658 <cmdBrlapiToBrltty@@Base+0x27c>
   2c64c:	and	r3, r0, #520093696	; 0x1f000000
   2c650:	cmp	r3, #16777216	; 0x1000000
   2c654:	bne	2c564 <cmdBrlapiToBrltty@@Base+0x188>
   2c658:	uxtb	r3, r0
   2c65c:	ubfx	r9, r0, #8, #16
   2c660:	orr	r3, r3, #8448	; 0x2100
   2c664:	orr	r9, r3, r9, lsl #24
   2c668:	b	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c66c:	movw	r9, #8194	; 0x2002
   2c670:	b	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c674:	movw	r9, #8205	; 0x200d
   2c678:	b	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c67c:	movw	r9, #8196	; 0x2004
   2c680:	b	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c684:	mov	r9, #8192	; 0x2000
   2c688:	b	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c68c:	movw	r9, #8204	; 0x200c
   2c690:	b	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c694:	movw	r9, #8202	; 0x200a
   2c698:	b	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c69c:	movw	r9, #8201	; 0x2009
   2c6a0:	b	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c6a4:	movw	r9, #8198	; 0x2006
   2c6a8:	b	2c434 <cmdBrlapiToBrltty@@Base+0x58>
   2c6ac:	push	{r4, r5}
   2c6b0:	ldm	r1, {r1, r4}
   2c6b4:	cmp	r4, #0
   2c6b8:	and	ip, r1, #65280	; 0xff00
   2c6bc:	beq	2c71c <cmdBrlapiToBrltty@@Base+0x340>
   2c6c0:	cmp	ip, #8448	; 0x2100
   2c6c4:	ldr	r5, [r3]
   2c6c8:	beq	2c730 <cmdBrlapiToBrltty@@Base+0x354>
   2c6cc:	tst	r5, #192	; 0xc0
   2c6d0:	beq	2c71c <cmdBrlapiToBrltty@@Base+0x340>
   2c6d4:	and	ip, r4, #65280	; 0xff00
   2c6d8:	mov	r1, r4
   2c6dc:	cmp	ip, #0
   2c6e0:	bne	2c738 <cmdBrlapiToBrltty@@Base+0x35c>
   2c6e4:	sub	r0, r1, #4
   2c6e8:	cmp	r0, #9
   2c6ec:	addls	pc, pc, r0, lsl #2
   2c6f0:	b	2c724 <cmdBrlapiToBrltty@@Base+0x348>
   2c6f4:	b	2c7c4 <cmdBrlapiToBrltty@@Base+0x3e8>
   2c6f8:	b	2c7c4 <cmdBrlapiToBrltty@@Base+0x3e8>
   2c6fc:	b	2c7c4 <cmdBrlapiToBrltty@@Base+0x3e8>
   2c700:	b	2c794 <cmdBrlapiToBrltty@@Base+0x3b8>
   2c704:	b	2c794 <cmdBrlapiToBrltty@@Base+0x3b8>
   2c708:	b	2c794 <cmdBrlapiToBrltty@@Base+0x3b8>
   2c70c:	b	2c794 <cmdBrlapiToBrltty@@Base+0x3b8>
   2c710:	b	2c794 <cmdBrlapiToBrltty@@Base+0x3b8>
   2c714:	b	2c794 <cmdBrlapiToBrltty@@Base+0x3b8>
   2c718:	b	2c794 <cmdBrlapiToBrltty@@Base+0x3b8>
   2c71c:	cmp	r1, #0
   2c720:	bne	2c6dc <cmdBrlapiToBrltty@@Base+0x300>
   2c724:	mov	r0, #0
   2c728:	pop	{r4, r5}
   2c72c:	bx	lr
   2c730:	tst	r5, #768	; 0x300
   2c734:	bne	2c6d4 <cmdBrlapiToBrltty@@Base+0x2f8>
   2c738:	cmp	r2, #0
   2c73c:	bne	2c724 <cmdBrlapiToBrltty@@Base+0x348>
   2c740:	cmp	ip, #8448	; 0x2100
   2c744:	beq	2c7f0 <cmdBrlapiToBrltty@@Base+0x414>
   2c748:	cmp	ip, #8192	; 0x2000
   2c74c:	bne	2c784 <cmdBrlapiToBrltty@@Base+0x3a8>
   2c750:	ldr	r3, [r3]
   2c754:	tst	r3, #4096	; 0x1000
   2c758:	beq	2c784 <cmdBrlapiToBrltty@@Base+0x3a8>
   2c75c:	uxtb	r3, r1
   2c760:	cmp	r3, #4
   2c764:	moveq	r1, #70	; 0x46
   2c768:	beq	2c784 <cmdBrlapiToBrltty@@Base+0x3a8>
   2c76c:	cmp	r3, #5
   2c770:	moveq	r1, #71	; 0x47
   2c774:	beq	2c784 <cmdBrlapiToBrltty@@Base+0x3a8>
   2c778:	cmp	r3, #13
   2c77c:	addgt	r1, r3, #1520	; 0x5f0
   2c780:	addgt	r1, r1, #2
   2c784:	str	r1, [r0]
   2c788:	mov	r0, #1
   2c78c:	pop	{r4, r5}
   2c790:	bx	lr
   2c794:	cmp	r2, #0
   2c798:	ldrne	r2, [r3]
   2c79c:	moveq	r4, #1
   2c7a0:	ldreq	ip, [r3]
   2c7a4:	movne	ip, #1
   2c7a8:	movne	r0, #0
   2c7ac:	bicne	r1, r2, ip, lsl r1
   2c7b0:	orreq	r1, ip, r4, lsl r1
   2c7b4:	moveq	r0, r2
   2c7b8:	str	r1, [r3]
   2c7bc:	pop	{r4, r5}
   2c7c0:	bx	lr
   2c7c4:	cmp	r2, #0
   2c7c8:	bne	2c724 <cmdBrlapiToBrltty@@Base+0x348>
   2c7cc:	ldr	r0, [r3]
   2c7d0:	mov	ip, #1
   2c7d4:	lsl	r1, ip, r1
   2c7d8:	tst	r1, r0
   2c7dc:	bicne	r1, r0, r1
   2c7e0:	orreq	r1, r1, r0
   2c7e4:	mov	r0, r2
   2c7e8:	str	r1, [r3]
   2c7ec:	b	2c728 <cmdBrlapiToBrltty@@Base+0x34c>
   2c7f0:	ldr	r3, [r3]
   2c7f4:	tst	r3, #16
   2c7f8:	orrne	r1, r1, #131072	; 0x20000
   2c7fc:	tst	r3, #4096	; 0x1000
   2c800:	orrne	r1, r1, #524288	; 0x80000
   2c804:	tst	r3, #3072	; 0xc00
   2c808:	orrne	r1, r1, #262144	; 0x40000
   2c80c:	b	2c784 <cmdBrlapiToBrltty@@Base+0x3a8>

0002c810 <atInterpretScanCode@@Base>:
   2c810:	cmp	r1, #240	; 0xf0
   2c814:	push	{r4, r5, r6, r7}
   2c818:	beq	2c888 <atInterpretScanCode@@Base+0x78>
   2c81c:	cmp	r1, #224	; 0xe0
   2c820:	beq	2c8a8 <atInterpretScanCode@@Base+0x98>
   2c824:	cmp	r1, #225	; 0xe1
   2c828:	beq	2c8d0 <atInterpretScanCode@@Base+0xc0>
   2c82c:	ldr	ip, [pc, #188]	; 2c8f0 <atInterpretScanCode@@Base+0xe0>
   2c830:	add	ip, pc, ip
   2c834:	ldr	r3, [ip, #8]
   2c838:	cmp	r1, r3
   2c83c:	bcc	2c84c <atInterpretScanCode@@Base+0x3c>
   2c840:	mov	r0, #0
   2c844:	pop	{r4, r5, r6, r7}
   2c848:	bx	lr
   2c84c:	ldr	r5, [pc, #160]	; 2c8f4 <atInterpretScanCode@@Base+0xe4>
   2c850:	mov	r4, #132	; 0x84
   2c854:	ldr	r2, [ip]
   2c858:	mov	r3, ip
   2c85c:	ldr	r7, [ip, #4]
   2c860:	add	r5, pc, r5
   2c864:	bic	r6, r2, #1
   2c868:	add	r5, r5, #1008	; 0x3f0
   2c86c:	add	r1, r7, r1, lsl #3
   2c870:	str	r6, [ip]
   2c874:	str	r5, [ip, #4]
   2c878:	and	r2, r2, #1
   2c87c:	str	r4, [ip, #8]
   2c880:	pop	{r4, r5, r6, r7}
   2c884:	b	2c6ac <cmdBrlapiToBrltty@@Base+0x2d0>
   2c888:	ldr	r3, [pc, #104]	; 2c8f8 <atInterpretScanCode@@Base+0xe8>
   2c88c:	mov	r0, #0
   2c890:	add	r3, pc, r3
   2c894:	ldr	r2, [r3]
   2c898:	orr	r2, r2, #1
   2c89c:	str	r2, [r3]
   2c8a0:	pop	{r4, r5, r6, r7}
   2c8a4:	bx	lr
   2c8a8:	ldr	r3, [pc, #76]	; 2c8fc <atInterpretScanCode@@Base+0xec>
   2c8ac:	mov	r1, #126	; 0x7e
   2c8b0:	ldr	r2, [pc, #72]	; 2c900 <atInterpretScanCode@@Base+0xf0>
   2c8b4:	mov	r0, #0
   2c8b8:	add	r3, pc, r3
   2c8bc:	add	r2, pc, r2
   2c8c0:	str	r1, [r3, #8]
   2c8c4:	str	r2, [r3, #4]
   2c8c8:	pop	{r4, r5, r6, r7}
   2c8cc:	bx	lr
   2c8d0:	ldr	r3, [pc, #44]	; 2c904 <atInterpretScanCode@@Base+0xf4>
   2c8d4:	mov	r2, #0
   2c8d8:	mov	r0, #0
   2c8dc:	add	r3, pc, r3
   2c8e0:	str	r2, [r3, #4]
   2c8e4:	str	r2, [r3, #8]
   2c8e8:	pop	{r4, r5, r6, r7}
   2c8ec:	bx	lr
   2c8f0:	ldrdeq	r7, [r4], -ip
   2c8f4:	andeq	r6, r2, r8, asr #7
   2c8f8:	andeq	r7, r4, ip, ror r3
   2c8fc:	andeq	r7, r4, r4, asr r3
   2c900:	andeq	r6, r2, ip, ror #6
   2c904:	andeq	r7, r4, r0, lsr r3

0002c908 <xtInterpretScanCode@@Base>:
   2c908:	cmp	r1, #224	; 0xe0
   2c90c:	push	{r4, r5, r6}
   2c910:	beq	2c970 <xtInterpretScanCode@@Base+0x68>
   2c914:	cmp	r1, #225	; 0xe1
   2c918:	beq	2c99c <xtInterpretScanCode@@Base+0x94>
   2c91c:	ldr	ip, [pc, #152]	; 2c9bc <xtInterpretScanCode@@Base+0xb4>
   2c920:	add	ip, pc, ip
   2c924:	ldr	r3, [ip, #16]
   2c928:	cmp	r1, r3
   2c92c:	bcc	2c93c <xtInterpretScanCode@@Base+0x34>
   2c930:	mov	r0, #0
   2c934:	pop	{r4, r5, r6}
   2c938:	bx	lr
   2c93c:	ldr	r5, [pc, #124]	; 2c9c0 <xtInterpretScanCode@@Base+0xb8>
   2c940:	and	r6, r1, #127	; 0x7f
   2c944:	ldr	r3, [ip, #12]
   2c948:	mov	r4, #89	; 0x59
   2c94c:	add	r5, pc, r5
   2c950:	lsr	r2, r1, #7
   2c954:	add	r5, r5, #2816	; 0xb00
   2c958:	add	r1, r3, r6, lsl #3
   2c95c:	str	r5, [ip, #12]
   2c960:	add	r3, ip, #20
   2c964:	str	r4, [ip, #16]
   2c968:	pop	{r4, r5, r6}
   2c96c:	b	2c6ac <cmdBrlapiToBrltty@@Base+0x2d0>
   2c970:	ldr	r3, [pc, #76]	; 2c9c4 <xtInterpretScanCode@@Base+0xbc>
   2c974:	mov	r1, #94	; 0x5e
   2c978:	ldr	r2, [pc, #72]	; 2c9c8 <xtInterpretScanCode@@Base+0xc0>
   2c97c:	mov	r0, #0
   2c980:	add	r3, pc, r3
   2c984:	add	r2, pc, r2
   2c988:	str	r1, [r3, #16]
   2c98c:	add	r2, r2, #2064	; 0x810
   2c990:	str	r2, [r3, #12]
   2c994:	pop	{r4, r5, r6}
   2c998:	bx	lr
   2c99c:	ldr	r3, [pc, #40]	; 2c9cc <xtInterpretScanCode@@Base+0xc4>
   2c9a0:	mov	r2, #0
   2c9a4:	mov	r0, #0
   2c9a8:	add	r3, pc, r3
   2c9ac:	str	r2, [r3, #12]
   2c9b0:	str	r2, [r3, #16]
   2c9b4:	pop	{r4, r5, r6}
   2c9b8:	bx	lr
   2c9bc:	andeq	r7, r4, ip, ror #5
   2c9c0:	ldrdeq	r6, [r2], -ip
   2c9c4:	andeq	r7, r4, ip, lsl #5
   2c9c8:	andeq	r6, r2, r4, lsr #5
   2c9cc:	andeq	r7, r4, r4, ror #4

0002c9d0 <resetScanCodes@@Base>:
   2c9d0:	ldr	r3, [pc, #64]	; 2ca18 <resetScanCodes@@Base+0x48>
   2c9d4:	mov	r2, #0
   2c9d8:	ldr	r1, [pc, #60]	; 2ca1c <resetScanCodes@@Base+0x4c>
   2c9dc:	mov	ip, #132	; 0x84
   2c9e0:	add	r3, pc, r3
   2c9e4:	mov	r0, #89	; 0x59
   2c9e8:	add	r1, pc, r1
   2c9ec:	push	{r4}		; (str r4, [sp, #-4]!)
   2c9f0:	add	r4, r1, #1008	; 0x3f0
   2c9f4:	str	ip, [r3, #8]
   2c9f8:	add	r1, r1, #2816	; 0xb00
   2c9fc:	str	r4, [r3, #4]
   2ca00:	str	r1, [r3, #12]
   2ca04:	str	r0, [r3, #16]
   2ca08:	str	r2, [r3]
   2ca0c:	str	r2, [r3, #20]
   2ca10:	pop	{r4}		; (ldr r4, [sp], #4)
   2ca14:	bx	lr
   2ca18:	andeq	r7, r4, ip, lsr #4
   2ca1c:	andeq	r6, r2, r0, asr #4

0002ca20 <getTextTableItem@@Base>:
   2ca20:	ldr	r0, [r0]
   2ca24:	b	28ab4 <getDataItem@@Base>

0002ca28 <getTextTableHeader@@Base>:
   2ca28:	mov	r1, #0
   2ca2c:	b	2ca20 <getTextTableItem@@Base>
   2ca30:	ldr	r3, [pc, #412]	; 2cbd4 <getTextTableHeader@@Base+0x1ac>
   2ca34:	push	{r4, r5, r6, r7, r8, r9, lr}
   2ca38:	mov	r7, r1
   2ca3c:	ldr	r1, [pc, #404]	; 2cbd8 <getTextTableHeader@@Base+0x1b0>
   2ca40:	add	r3, pc, r3
   2ca44:	adds	r6, r2, #0
   2ca48:	sub	sp, sp, #12
   2ca4c:	mov	r4, r0
   2ca50:	ubfx	r8, r7, #24, #7
   2ca54:	ldr	r5, [r3, r1]
   2ca58:	movne	r6, #1
   2ca5c:	ldr	r3, [r5]
   2ca60:	str	r3, [sp, #4]
   2ca64:	bl	2ca28 <getTextTableHeader@@Base>
   2ca68:	ldr	r3, [r0, r8, lsl #2]
   2ca6c:	cmp	r3, #0
   2ca70:	movne	r2, #0
   2ca74:	andeq	r2, r6, #1
   2ca78:	cmp	r2, #0
   2ca7c:	str	r3, [sp]
   2ca80:	moveq	r8, r3
   2ca84:	bne	2cb2c <getTextTableHeader@@Base+0x104>
   2ca88:	cmp	r8, #0
   2ca8c:	bne	2caac <getTextTableHeader@@Base+0x84>
   2ca90:	mov	r0, #0
   2ca94:	ldr	r2, [sp, #4]
   2ca98:	ldr	r3, [r5]
   2ca9c:	cmp	r2, r3
   2caa0:	bne	2cbd0 <getTextTableHeader@@Base+0x1a8>
   2caa4:	add	sp, sp, #12
   2caa8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2caac:	mov	r1, r8
   2cab0:	ldr	r0, [r4]
   2cab4:	bl	28ab4 <getDataItem@@Base>
   2cab8:	ubfx	r9, r7, #16, #8
   2cabc:	ldr	r1, [r0, r9, lsl #2]
   2cac0:	cmp	r1, #0
   2cac4:	movne	r3, #0
   2cac8:	andeq	r3, r6, #1
   2cacc:	cmp	r3, #0
   2cad0:	str	r1, [sp]
   2cad4:	moveq	r8, r1
   2cad8:	bne	2cb98 <getTextTableHeader@@Base+0x170>
   2cadc:	cmp	r8, #0
   2cae0:	beq	2ca90 <getTextTableHeader@@Base+0x68>
   2cae4:	mov	r1, r8
   2cae8:	ldr	r0, [r4]
   2caec:	bl	28ab4 <getDataItem@@Base>
   2caf0:	ubfx	r7, r7, #8, #8
   2caf4:	ldr	r0, [r0, r7, lsl #2]
   2caf8:	cmp	r0, #0
   2cafc:	movne	r6, #0
   2cb00:	andeq	r6, r6, #1
   2cb04:	cmp	r6, #0
   2cb08:	str	r0, [sp]
   2cb0c:	moveq	r1, r0
   2cb10:	bne	2cb60 <getTextTableHeader@@Base+0x138>
   2cb14:	cmp	r1, #0
   2cb18:	moveq	r0, r1
   2cb1c:	beq	2ca94 <getTextTableHeader@@Base+0x6c>
   2cb20:	ldr	r0, [r4]
   2cb24:	bl	28ab4 <getDataItem@@Base>
   2cb28:	b	2ca94 <getTextTableHeader@@Base+0x6c>
   2cb2c:	ldr	r0, [r4]
   2cb30:	mov	r1, sp
   2cb34:	mov	r2, #1024	; 0x400
   2cb38:	mov	r3, #4
   2cb3c:	bl	28a04 <allocateDataItem@@Base>
   2cb40:	cmp	r0, #0
   2cb44:	beq	2ca90 <getTextTableHeader@@Base+0x68>
   2cb48:	mov	r0, r4
   2cb4c:	bl	2ca28 <getTextTableHeader@@Base>
   2cb50:	ldr	r3, [sp]
   2cb54:	str	r3, [r0, r8, lsl #2]
   2cb58:	ldr	r8, [sp]
   2cb5c:	b	2ca88 <getTextTableHeader@@Base+0x60>
   2cb60:	ldr	r0, [r4]
   2cb64:	mov	r1, sp
   2cb68:	mov	r2, #288	; 0x120
   2cb6c:	mov	r3, #1
   2cb70:	bl	28a04 <allocateDataItem@@Base>
   2cb74:	cmp	r0, #0
   2cb78:	beq	2ca94 <getTextTableHeader@@Base+0x6c>
   2cb7c:	mov	r1, r8
   2cb80:	ldr	r0, [r4]
   2cb84:	bl	28ab4 <getDataItem@@Base>
   2cb88:	ldr	r3, [sp]
   2cb8c:	str	r3, [r0, r7, lsl #2]
   2cb90:	ldr	r1, [sp]
   2cb94:	b	2cb14 <getTextTableHeader@@Base+0xec>
   2cb98:	ldr	r0, [r4]
   2cb9c:	mov	r1, sp
   2cba0:	mov	r2, #1024	; 0x400
   2cba4:	mov	r3, #4
   2cba8:	bl	28a04 <allocateDataItem@@Base>
   2cbac:	cmp	r0, #0
   2cbb0:	beq	2ca90 <getTextTableHeader@@Base+0x68>
   2cbb4:	mov	r1, r8
   2cbb8:	ldr	r0, [r4]
   2cbbc:	bl	28ab4 <getDataItem@@Base>
   2cbc0:	ldr	r3, [sp]
   2cbc4:	str	r3, [r0, r9, lsl #2]
   2cbc8:	ldr	r8, [sp]
   2cbcc:	b	2cadc <getTextTableHeader@@Base+0xb4>
   2cbd0:	bl	f950 <__stack_chk_fail@plt>
   2cbd4:	andeq	r6, r4, r8, lsr r0
   2cbd8:			; <UNDEFINED> instruction: 0x000003b4
   2cbdc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2cbe0:	mov	r8, r1
   2cbe4:	mov	r9, r2
   2cbe8:	bl	2ca28 <getTextTableHeader@@Base>
   2cbec:	and	r1, r8, #7
   2cbf0:	mov	r6, #1
   2cbf4:	mov	r7, #0
   2cbf8:	mov	r5, #0
   2cbfc:	and	r7, r7, r5
   2cc00:	add	r3, r0, r8, lsr #3
   2cc04:	ldrb	r2, [r3, #1536]	; 0x600
   2cc08:	lsr	r4, r2, r1
   2cc0c:	and	r6, r6, r4
   2cc10:	orrs	ip, r6, r7
   2cc14:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   2cc18:	add	r8, r0, r8, lsl #2
   2cc1c:	ldr	r0, [r8, #512]	; 0x200
   2cc20:	cmp	r0, r9
   2cc24:	streq	r5, [r8, #512]	; 0x200
   2cc28:	moveq	r0, #1
   2cc2c:	biceq	r2, r2, r0, lsl r1
   2cc30:	strbeq	r2, [r3, #1536]	; 0x600
   2cc34:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

0002cc38 <getUnicodeCellEntry@@Base>:
   2cc38:	push	{r3, r4, r5, r6, r7, lr}
   2cc3c:	mov	r2, #0
   2cc40:	mov	r4, r1
   2cc44:	bl	2ca30 <getTextTableHeader@@Base+0x8>
   2cc48:	cmp	r0, #0
   2cc4c:	popeq	{r3, r4, r5, r6, r7, pc}
   2cc50:	uxtb	r1, r4
   2cc54:	mov	r3, #0
   2cc58:	and	ip, r1, #7
   2cc5c:	mov	r4, #1
   2cc60:	add	r6, r0, r1, lsr #3
   2cc64:	mov	r5, #0
   2cc68:	and	r5, r5, r3
   2cc6c:	mov	r7, #0
   2cc70:	ldrb	r6, [r6, #256]	; 0x100
   2cc74:	lsr	r2, r6, ip
   2cc78:	and	r4, r4, r2
   2cc7c:	orrs	ip, r4, r5
   2cc80:	addne	r0, r0, r1
   2cc84:	moveq	r0, r3
   2cc88:	pop	{r3, r4, r5, r6, r7, pc}

0002cc8c <setTextTableGlyph@@Base>:
   2cc8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cc90:	sub	sp, sp, #12
   2cc94:	mov	r9, r2
   2cc98:	mov	r2, #1
   2cc9c:	str	r0, [sp, #4]
   2cca0:	mov	fp, r1
   2cca4:	bl	2ca30 <getTextTableHeader@@Base+0x8>
   2cca8:	subs	sl, r0, #0
   2ccac:	beq	2cd18 <setTextTableGlyph@@Base+0x8c>
   2ccb0:	uxtb	r8, fp
   2ccb4:	mov	r6, #1
   2ccb8:	and	r1, r8, #7
   2ccbc:	mov	r7, #0
   2ccc0:	add	r3, sl, r8, lsr #3
   2ccc4:	mov	r5, #0
   2ccc8:	and	r5, r5, r7
   2cccc:	ldrb	r2, [r3, #256]	; 0x100
   2ccd0:	lsr	r4, r2, r1
   2ccd4:	and	r4, r4, r6
   2ccd8:	orrs	r0, r4, r5
   2ccdc:	beq	2cd08 <setTextTableGlyph@@Base+0x7c>
   2cce0:	ldrb	r1, [sl, r8]
   2cce4:	cmp	r1, r9
   2cce8:	beq	2ccf8 <setTextTableGlyph@@Base+0x6c>
   2ccec:	ldr	r0, [sp, #4]
   2ccf0:	mov	r2, fp
   2ccf4:	bl	2cbdc <getTextTableHeader@@Base+0x1b4>
   2ccf8:	mov	r0, #1
   2ccfc:	strb	r9, [sl, r8]
   2cd00:	add	sp, sp, #12
   2cd04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cd08:	mov	r0, #1
   2cd0c:	orr	r2, r2, r0, lsl r1
   2cd10:	strb	r2, [r3, #256]	; 0x100
   2cd14:	b	2ccf8 <setTextTableGlyph@@Base+0x6c>
   2cd18:	mov	r0, sl
   2cd1c:	add	sp, sp, #12
   2cd20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002cd24 <setTextTableCharacter@@Base>:
   2cd24:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2cd28:	mov	r4, r0
   2cd2c:	mov	r9, r1
   2cd30:	mov	r8, r2
   2cd34:	bl	2cc8c <setTextTableGlyph@@Base>
   2cd38:	subs	r3, r0, #0
   2cd3c:	beq	2cd88 <setTextTableCharacter@@Base+0x64>
   2cd40:	mov	r0, r4
   2cd44:	mov	r6, #1
   2cd48:	bl	2ca28 <getTextTableHeader@@Base>
   2cd4c:	and	ip, r8, #7
   2cd50:	mov	r7, #0
   2cd54:	mov	r5, #0
   2cd58:	and	r5, r5, r7
   2cd5c:	add	r2, r0, r8, lsr #3
   2cd60:	ldrb	r1, [r2, #1536]	; 0x600
   2cd64:	lsr	r4, r1, ip
   2cd68:	and	r4, r4, r6
   2cd6c:	orrs	r3, r4, r5
   2cd70:	addeq	r8, r8, #128	; 0x80
   2cd74:	moveq	r3, #1
   2cd78:	movne	r3, #1
   2cd7c:	orreq	r1, r1, r3, lsl ip
   2cd80:	streq	r9, [r0, r8, lsl #2]
   2cd84:	strbeq	r1, [r2, #1536]	; 0x600
   2cd88:	mov	r0, r3
   2cd8c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

0002cd90 <unsetTextTableCharacter@@Base>:
   2cd90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cd94:	sub	sp, sp, #12
   2cd98:	mov	r2, #0
   2cd9c:	mov	fp, r1
   2cda0:	str	r0, [sp, #4]
   2cda4:	bl	2ca30 <getTextTableHeader@@Base+0x8>
   2cda8:	subs	r9, r0, #0
   2cdac:	beq	2ce0c <unsetTextTableCharacter@@Base+0x7c>
   2cdb0:	uxtb	r8, fp
   2cdb4:	mov	r0, #1
   2cdb8:	and	r3, r8, #7
   2cdbc:	mov	r1, #0
   2cdc0:	add	sl, r9, r8, lsr #3
   2cdc4:	mov	r5, #0
   2cdc8:	and	r1, r1, r5
   2cdcc:	ldrb	r6, [sl, #256]	; 0x100
   2cdd0:	lsr	r4, r6, r3
   2cdd4:	and	r0, r0, r4
   2cdd8:	orrs	r2, r0, r1
   2cddc:	beq	2ce0c <unsetTextTableCharacter@@Base+0x7c>
   2cde0:	ldrb	r1, [r9, r8]
   2cde4:	mov	r2, fp
   2cde8:	ldr	r0, [sp, #4]
   2cdec:	str	r3, [sp]
   2cdf0:	bl	2cbdc <getTextTableHeader@@Base+0x1b4>
   2cdf4:	strb	r5, [r9, r8]
   2cdf8:	mov	r1, #1
   2cdfc:	ldr	r3, [sp]
   2ce00:	ldrb	r2, [sl, #256]	; 0x100
   2ce04:	bic	r3, r2, r1, lsl r3
   2ce08:	strb	r3, [sl, #256]	; 0x100
   2ce0c:	add	sp, sp, #12
   2ce10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002ce14 <setTextTableByte@@Base>:
   2ce14:	push	{r3, r4, r5, lr}
   2ce18:	mov	r4, r0
   2ce1c:	mov	r0, r1
   2ce20:	mov	r5, r2
   2ce24:	bl	285c8 <convertCharToWchar@@Base>
   2ce28:	cmn	r0, #1
   2ce2c:	mov	r1, r0
   2ce30:	beq	2ce4c <setTextTableByte@@Base+0x38>
   2ce34:	mov	r0, r4
   2ce38:	mov	r2, r5
   2ce3c:	bl	2cd24 <setTextTableCharacter@@Base>
   2ce40:	adds	r0, r0, #0
   2ce44:	movne	r0, #1
   2ce48:	pop	{r3, r4, r5, pc}
   2ce4c:	mov	r0, #1
   2ce50:	pop	{r3, r4, r5, pc}

0002ce54 <newTextTableData@@Base>:
   2ce54:	push	{r3, r4, r5, lr}
   2ce58:	mov	r0, #4
   2ce5c:	bl	fb48 <malloc@plt>
   2ce60:	subs	r4, r0, #0
   2ce64:	beq	2ceb0 <newTextTableData@@Base+0x5c>
   2ce68:	mov	r5, #0
   2ce6c:	str	r5, [r4]
   2ce70:	bl	289c0 <newDataArea@@Base>
   2ce74:	cmp	r0, r5
   2ce78:	str	r0, [r4]
   2ce7c:	beq	2cea8 <newTextTableData@@Base+0x54>
   2ce80:	mov	r1, r5
   2ce84:	mov	r2, #1568	; 0x620
   2ce88:	mov	r3, #4
   2ce8c:	bl	28a04 <allocateDataItem@@Base>
   2ce90:	cmp	r0, r5
   2ce94:	beq	2cea0 <newTextTableData@@Base+0x4c>
   2ce98:	mov	r0, r4
   2ce9c:	pop	{r3, r4, r5, pc}
   2cea0:	ldr	r0, [r4]
   2cea4:	bl	289e0 <destroyDataArea@@Base>
   2cea8:	mov	r0, r4
   2ceac:	bl	f4f4 <free@plt>
   2ceb0:	mov	r0, #0
   2ceb4:	pop	{r3, r4, r5, pc}

0002ceb8 <destroyTextTableData@@Base>:
   2ceb8:	push	{r4, lr}
   2cebc:	mov	r4, r0
   2cec0:	ldr	r0, [r0]
   2cec4:	bl	289e0 <destroyDataArea@@Base>
   2cec8:	mov	r0, r4
   2cecc:	pop	{r4, lr}
   2ced0:	b	f4f4 <free@plt>

0002ced4 <processTextTableLines@@Base>:
   2ced4:	push	{r4, r5, r6, r7, lr}
   2ced8:	mov	r7, r0
   2cedc:	mov	r6, r1
   2cee0:	ldr	r0, [pc, #108]	; 2cf54 <processTextTableLines@@Base+0x80>
   2cee4:	ldr	r1, [pc, #108]	; 2cf58 <processTextTableLines@@Base+0x84>
   2cee8:	sub	sp, sp, #12
   2ceec:	add	r0, pc, r0
   2cef0:	mov	r5, r2
   2cef4:	add	r1, pc, r1
   2cef8:	bl	29118 <setGlobalTableVariables@@Base>
   2cefc:	cmp	r0, #0
   2cf00:	beq	2cf3c <processTextTableLines@@Base+0x68>
   2cf04:	bl	2ce54 <newTextTableData@@Base>
   2cf08:	subs	r4, r0, #0
   2cf0c:	beq	2cf3c <processTextTableLines@@Base+0x68>
   2cf10:	mov	r3, r5
   2cf14:	str	r4, [sp]
   2cf18:	mov	r1, r7
   2cf1c:	mov	r2, r6
   2cf20:	mov	r0, #0
   2cf24:	bl	29d08 <processDataStream@@Base>
   2cf28:	subs	r5, r0, #0
   2cf2c:	mov	r0, r4
   2cf30:	beq	2cf48 <processTextTableLines@@Base+0x74>
   2cf34:	add	sp, sp, #12
   2cf38:	pop	{r4, r5, r6, r7, pc}
   2cf3c:	mov	r0, #0
   2cf40:	add	sp, sp, #12
   2cf44:	pop	{r4, r5, r6, r7, pc}
   2cf48:	bl	2ceb8 <destroyTextTableData@@Base>
   2cf4c:	mov	r0, r5
   2cf50:	b	2cf34 <processTextTableLines@@Base+0x60>
   2cf54:	andeq	r6, r2, r4, lsl #23
   2cf58:	andeq	r6, r2, r4, lsl #23

0002cf5c <makeTextTable@@Base>:
   2cf5c:	push	{r3, r4, r5, lr}
   2cf60:	mov	r5, r0
   2cf64:	mov	r0, #8
   2cf68:	bl	fb48 <malloc@plt>
   2cf6c:	subs	r4, r0, #0
   2cf70:	beq	2cf94 <makeTextTable@@Base+0x38>
   2cf74:	mov	r0, r5
   2cf78:	bl	2ca28 <getTextTableHeader@@Base>
   2cf7c:	str	r0, [r4]
   2cf80:	ldr	r0, [r5]
   2cf84:	bl	28ac0 <getDataSize@@Base>
   2cf88:	str	r0, [r4, #4]
   2cf8c:	ldr	r0, [r5]
   2cf90:	bl	289ac <resetDataArea@@Base>
   2cf94:	mov	r0, r4
   2cf98:	pop	{r3, r4, r5, pc}

0002cf9c <destroyTextTable@@Base>:
   2cf9c:	push	{r4, lr}
   2cfa0:	mov	r4, r0
   2cfa4:	ldr	r3, [r0, #4]
   2cfa8:	cmp	r3, #0
   2cfac:	popeq	{r4, pc}
   2cfb0:	ldr	r0, [r0]
   2cfb4:	bl	f4f4 <free@plt>
   2cfb8:	mov	r0, r4
   2cfbc:	pop	{r4, lr}
   2cfc0:	b	f4f4 <free@plt>

0002cfc4 <ensureTextTableExtension@@Base>:
   2cfc4:	ldr	r1, [pc, #4]	; 2cfd0 <ensureTextTableExtension@@Base+0xc>
   2cfc8:	add	r1, pc, r1
   2cfcc:	b	1ca9c <ensureFileExtension@@Base>
   2cfd0:	andeq	r6, r2, r8, lsr #21

0002cfd4 <makeTextTablePath@@Base>:
   2cfd4:	ldr	r2, [pc, #4]	; 2cfe0 <makeTextTablePath@@Base+0xc>
   2cfd8:	add	r2, pc, r2
   2cfdc:	b	1cb3c <makeFilePath@@Base>
   2cfe0:	muleq	r2, r8, sl
   2cfe4:	push	{r3, r4, r5, lr}
   2cfe8:	bl	2cfd4 <makeTextTablePath@@Base>
   2cfec:	subs	r4, r0, #0
   2cff0:	moveq	r5, r4
   2cff4:	beq	2d024 <makeTextTablePath@@Base+0x50>
   2cff8:	ldr	r1, [pc, #44]	; 2d02c <makeTextTablePath@@Base+0x58>
   2cffc:	mov	r0, #7
   2d000:	mov	r2, r4
   2d004:	add	r1, pc, r1
   2d008:	bl	1c634 <logMessage@@Base>
   2d00c:	mov	r0, r4
   2d010:	bl	1cb98 <testFilePath@@Base>
   2d014:	adds	r5, r0, #0
   2d018:	mov	r0, r4
   2d01c:	movne	r5, #1
   2d020:	bl	f4f4 <free@plt>
   2d024:	mov	r0, r5
   2d028:	pop	{r3, r4, r5, pc}
   2d02c:	andeq	r6, r2, ip, ror sl

0002d030 <selectTextTable@@Base>:
   2d030:	ldr	r3, [pc, #368]	; 2d1a8 <selectTextTable@@Base+0x178>
   2d034:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2d038:	add	fp, sp, #28
   2d03c:	ldr	r2, [pc, #360]	; 2d1ac <selectTextTable@@Base+0x17c>
   2d040:	sub	sp, sp, #8
   2d044:	add	r3, pc, r3
   2d048:	mov	r8, r0
   2d04c:	mov	r0, #0
   2d050:	ldr	r6, [r3, r2]
   2d054:	mov	r1, r0
   2d058:	ldr	r3, [r6]
   2d05c:	str	r3, [fp, #-32]	; 0xffffffe0
   2d060:	bl	fad0 <setlocale@plt>
   2d064:	subs	r9, r0, #0
   2d068:	beq	2d194 <selectTextTable@@Base+0x164>
   2d06c:	bl	fb54 <strlen@plt>
   2d070:	ldrb	r4, [r9]
   2d074:	mov	r7, sp
   2d078:	cmp	r4, #0
   2d07c:	add	r0, r0, #8
   2d080:	bic	r3, r0, #7
   2d084:	sub	sp, sp, r3
   2d088:	mov	r5, sp
   2d08c:	beq	2d0cc <selectTextTable@@Base+0x9c>
   2d090:	cmp	r4, #46	; 0x2e
   2d094:	beq	2d18c <selectTextTable@@Base+0x15c>
   2d098:	cmp	r4, #64	; 0x40
   2d09c:	beq	2d18c <selectTextTable@@Base+0x15c>
   2d0a0:	mov	r2, r9
   2d0a4:	mov	r4, #0
   2d0a8:	b	2d0bc <selectTextTable@@Base+0x8c>
   2d0ac:	cmp	r3, #46	; 0x2e
   2d0b0:	beq	2d0cc <selectTextTable@@Base+0x9c>
   2d0b4:	cmp	r3, #64	; 0x40
   2d0b8:	beq	2d0cc <selectTextTable@@Base+0x9c>
   2d0bc:	ldrb	r3, [r2, #1]!
   2d0c0:	add	r4, r4, #1
   2d0c4:	cmp	r3, #0
   2d0c8:	bne	2d0ac <selectTextTable@@Base+0x7c>
   2d0cc:	mov	r1, r9
   2d0d0:	mov	r0, r5
   2d0d4:	mov	r2, r4
   2d0d8:	bl	fce0 <strncpy@plt>
   2d0dc:	mov	r3, #0
   2d0e0:	strb	r3, [r5, r4]
   2d0e4:	ldrb	r3, [r5]
   2d0e8:	cmp	r3, #67	; 0x43
   2d0ec:	bne	2d10c <selectTextTable@@Base+0xdc>
   2d0f0:	ldrb	r3, [r5, #1]
   2d0f4:	cmp	r3, #0
   2d0f8:	bne	2d10c <selectTextTable@@Base+0xdc>
   2d0fc:	strb	r3, [r5]
   2d100:	mov	r0, #0
   2d104:	mov	sp, r7
   2d108:	b	2d140 <selectTextTable@@Base+0x110>
   2d10c:	mov	r0, r8
   2d110:	mov	r1, r5
   2d114:	bl	2cfe4 <makeTextTablePath@@Base+0x10>
   2d118:	subs	r4, r0, #0
   2d11c:	beq	2d158 <selectTextTable@@Base+0x128>
   2d120:	ldrb	r3, [r5]
   2d124:	cmp	r3, #0
   2d128:	beq	2d100 <selectTextTable@@Base+0xd0>
   2d12c:	mov	r0, r5
   2d130:	bl	f740 <__strdup@plt>
   2d134:	cmp	r0, #0
   2d138:	beq	2d19c <selectTextTable@@Base+0x16c>
   2d13c:	mov	sp, r7
   2d140:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d144:	ldr	r3, [r6]
   2d148:	cmp	r2, r3
   2d14c:	bne	2d1a4 <selectTextTable@@Base+0x174>
   2d150:	sub	sp, fp, #28
   2d154:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2d158:	mov	r0, r5
   2d15c:	mov	r1, #95	; 0x5f
   2d160:	bl	fdd0 <strchr@plt>
   2d164:	cmp	r0, #0
   2d168:	beq	2d120 <selectTextTable@@Base+0xf0>
   2d16c:	strb	r4, [r0]
   2d170:	mov	r1, r5
   2d174:	mov	r0, r8
   2d178:	bl	2cfe4 <makeTextTablePath@@Base+0x10>
   2d17c:	cmp	r0, #0
   2d180:	strbeq	r0, [r5]
   2d184:	beq	2d100 <selectTextTable@@Base+0xd0>
   2d188:	b	2d120 <selectTextTable@@Base+0xf0>
   2d18c:	mov	r4, #0
   2d190:	b	2d0cc <selectTextTable@@Base+0x9c>
   2d194:	mov	r0, r9
   2d198:	b	2d140 <selectTextTable@@Base+0x110>
   2d19c:	bl	1c740 <logMallocError@@Base>
   2d1a0:	b	2d100 <selectTextTable@@Base+0xd0>
   2d1a4:	bl	f950 <__stack_chk_fail@plt>
   2d1a8:	andeq	r5, r4, r4, lsr sl
   2d1ac:			; <UNDEFINED> instruction: 0x000003b4
   2d1b0:	mov	r3, r1
   2d1b4:	ldr	r2, [pc, #12]	; 2d1c8 <selectTextTable@@Base+0x198>
   2d1b8:	ldr	r1, [pc, #12]	; 2d1cc <selectTextTable@@Base+0x19c>
   2d1bc:	add	r2, pc, r2
   2d1c0:	add	r1, pc, r1
   2d1c4:	b	29c18 <processPropertyOperand@@Base>
   2d1c8:	andeq	r6, r2, r0, ror #17
   2d1cc:	andeq	r5, r4, ip, lsl r6
   2d1d0:	ldr	ip, [pc, #168]	; 2d280 <selectTextTable@@Base+0x250>
   2d1d4:	mov	r2, #1
   2d1d8:	push	{r4, r5, r6, r7, lr}
   2d1dc:	add	ip, pc, ip
   2d1e0:	ldr	lr, [pc, #156]	; 2d284 <selectTextTable@@Base+0x254>
   2d1e4:	sub	sp, sp, #1040	; 0x410
   2d1e8:	sub	sp, sp, #4
   2d1ec:	ldr	r3, [pc, #148]	; 2d288 <selectTextTable@@Base+0x258>
   2d1f0:	add	r5, sp, #16
   2d1f4:	mov	r7, r1
   2d1f8:	ldr	r4, [ip, lr]
   2d1fc:	sub	r1, r5, #4
   2d200:	add	r3, pc, r3
   2d204:	mov	r6, r0
   2d208:	ldr	ip, [r4]
   2d20c:	str	ip, [sp, #1036]	; 0x40c
   2d210:	bl	299f8 <getDataString@@Base>
   2d214:	cmp	r0, #0
   2d218:	beq	2d248 <selectTextTable@@Base+0x218>
   2d21c:	ldrb	r3, [sp, #12]
   2d220:	cmp	r3, #1
   2d224:	beq	2d264 <selectTextTable@@Base+0x234>
   2d228:	ldr	r1, [pc, #92]	; 2d28c <selectTextTable@@Base+0x25c>
   2d22c:	mov	r0, r6
   2d230:	ldr	r2, [pc, #88]	; 2d290 <selectTextTable@@Base+0x260>
   2d234:	str	r5, [sp]
   2d238:	add	r1, pc, r1
   2d23c:	add	r2, pc, r2
   2d240:	bl	28dec <reportDataError@@Base>
   2d244:	mov	r0, #0
   2d248:	ldr	r2, [sp, #1036]	; 0x40c
   2d24c:	ldr	r3, [r4]
   2d250:	cmp	r2, r3
   2d254:	bne	2d27c <selectTextTable@@Base+0x24c>
   2d258:	add	sp, sp, #1040	; 0x410
   2d25c:	add	sp, sp, #4
   2d260:	pop	{r4, r5, r6, r7, pc}
   2d264:	ldr	r2, [sp, #16]
   2d268:	cmp	r2, #255	; 0xff
   2d26c:	strbls	r2, [r7]
   2d270:	movls	r0, r3
   2d274:	bhi	2d228 <selectTextTable@@Base+0x1f8>
   2d278:	b	2d248 <selectTextTable@@Base+0x218>
   2d27c:	bl	f950 <__stack_chk_fail@plt>
   2d280:	muleq	r4, ip, r8
   2d284:			; <UNDEFINED> instruction: 0x000003b4
   2d288:			; <UNDEFINED> instruction: 0x000268b4
   2d28c:	andeq	r6, r2, ip, lsl #17
   2d290:	andeq	r6, r2, r8, ror r8
   2d294:	ldr	ip, [pc, #152]	; 2d334 <selectTextTable@@Base+0x304>
   2d298:	mov	r2, #0
   2d29c:	ldr	r3, [pc, #148]	; 2d338 <selectTextTable@@Base+0x308>
   2d2a0:	add	ip, pc, ip
   2d2a4:	push	{r4, r5, r6, r7, r8, lr}
   2d2a8:	sub	sp, sp, #1040	; 0x410
   2d2ac:	ldr	r4, [ip, r3]
   2d2b0:	add	r6, sp, #16
   2d2b4:	ldr	r5, [pc, #128]	; 2d33c <selectTextTable@@Base+0x30c>
   2d2b8:	mov	r7, r1
   2d2bc:	sub	r1, r6, #4
   2d2c0:	mov	r8, r0
   2d2c4:	ldr	ip, [r4]
   2d2c8:	add	r5, pc, r5
   2d2cc:	mov	r3, r5
   2d2d0:	str	ip, [sp, #1036]	; 0x40c
   2d2d4:	bl	299f8 <getDataString@@Base>
   2d2d8:	cmp	r0, #0
   2d2dc:	beq	2d2f4 <selectTextTable@@Base+0x2c4>
   2d2e0:	ldr	r3, [sp, #16]
   2d2e4:	cmp	r3, #0
   2d2e8:	blt	2d30c <selectTextTable@@Base+0x2dc>
   2d2ec:	mov	r0, #1
   2d2f0:	str	r3, [r7]
   2d2f4:	ldr	r2, [sp, #1036]	; 0x40c
   2d2f8:	ldr	r3, [r4]
   2d2fc:	cmp	r2, r3
   2d300:	bne	2d330 <selectTextTable@@Base+0x300>
   2d304:	add	sp, sp, #1040	; 0x410
   2d308:	pop	{r4, r5, r6, r7, r8, pc}
   2d30c:	ldr	r1, [pc, #44]	; 2d340 <selectTextTable@@Base+0x310>
   2d310:	mov	r0, r8
   2d314:	ldrb	r3, [sp, #12]
   2d318:	mov	r2, r5
   2d31c:	str	r6, [sp]
   2d320:	add	r1, pc, r1
   2d324:	bl	28dec <reportDataError@@Base>
   2d328:	mov	r0, #0
   2d32c:	b	2d2f4 <selectTextTable@@Base+0x2c4>
   2d330:	bl	f950 <__stack_chk_fail@plt>
   2d334:	ldrdeq	r5, [r4], -r8
   2d338:			; <UNDEFINED> instruction: 0x000003b4
   2d33c:	andeq	r6, r2, r0, lsl r8
   2d340:	andeq	r6, r2, r4, lsr #15
   2d344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d348:	sub	sp, sp, #28
   2d34c:	ldr	r5, [pc, #436]	; 2d508 <selectTextTable@@Base+0x4d8>
   2d350:	mov	r4, r1
   2d354:	ldr	r3, [pc, #432]	; 2d50c <selectTextTable@@Base+0x4dc>
   2d358:	mov	r7, r0
   2d35c:	add	r5, pc, r5
   2d360:	ldr	r1, [pc, #424]	; 2d510 <selectTextTable@@Base+0x4e0>
   2d364:	ldr	r3, [r5, r3]
   2d368:	add	r1, pc, r1
   2d36c:	str	r3, [sp, #4]
   2d370:	ldr	r3, [r3]
   2d374:	str	r3, [sp, #20]
   2d378:	bl	29160 <findDataOperand@@Base>
   2d37c:	subs	r3, r0, #0
   2d380:	bne	2d3a4 <selectTextTable@@Base+0x374>
   2d384:	ldr	r1, [sp, #4]
   2d388:	mov	r0, r3
   2d38c:	ldr	r2, [sp, #20]
   2d390:	ldr	r3, [r1]
   2d394:	cmp	r2, r3
   2d398:	bne	2d504 <selectTextTable@@Base+0x4d4>
   2d39c:	add	sp, sp, #28
   2d3a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d3a4:	add	r8, sp, #12
   2d3a8:	mov	r0, r7
   2d3ac:	mov	r1, r8
   2d3b0:	bl	292c8 <getDataCharacter@@Base>
   2d3b4:	subs	r3, r0, #0
   2d3b8:	beq	2d384 <selectTextTable@@Base+0x354>
   2d3bc:	ldr	r1, [sp, #12]
   2d3c0:	cmp	r1, #40	; 0x28
   2d3c4:	beq	2d468 <selectTextTable@@Base+0x438>
   2d3c8:	ldr	r0, [pc, #324]	; 2d514 <selectTextTable@@Base+0x4e4>
   2d3cc:	mov	r6, #0
   2d3d0:	strb	r6, [r4]
   2d3d4:	add	r0, pc, r0
   2d3d8:	bl	f704 <wcschr@plt>
   2d3dc:	cmp	r0, #0
   2d3e0:	movne	sl, #1
   2d3e4:	beq	2d4ec <selectTextTable@@Base+0x4bc>
   2d3e8:	add	fp, sp, #16
   2d3ec:	mov	r0, r7
   2d3f0:	mov	r1, r8
   2d3f4:	bl	292c8 <getDataCharacter@@Base>
   2d3f8:	subs	r3, r0, #0
   2d3fc:	beq	2d4b0 <selectTextTable@@Base+0x480>
   2d400:	ldr	r9, [sp, #12]
   2d404:	mov	r0, r9
   2d408:	bl	f44c <iswspace@plt>
   2d40c:	cmp	r6, #0
   2d410:	beq	2d478 <selectTextTable@@Base+0x448>
   2d414:	cmp	r6, r9
   2d418:	beq	2d48c <selectTextTable@@Base+0x45c>
   2d41c:	cmp	r0, #0
   2d420:	bne	2d3ec <selectTextTable@@Base+0x3bc>
   2d424:	cmp	sl, #0
   2d428:	bne	2d494 <selectTextTable@@Base+0x464>
   2d42c:	mov	r0, r9
   2d430:	mov	r1, fp
   2d434:	bl	28d60 <brlDotNumberToIndex@@Base>
   2d438:	cmp	r0, #0
   2d43c:	beq	2d494 <selectTextTable@@Base+0x464>
   2d440:	ldr	r1, [pc, #208]	; 2d518 <selectTextTable@@Base+0x4e8>
   2d444:	ldr	r3, [sp, #16]
   2d448:	ldrb	r2, [r4]
   2d44c:	ldr	r1, [r5, r1]
   2d450:	ldrb	r3, [r1, r3]
   2d454:	tst	r2, r3
   2d458:	bne	2d4d4 <selectTextTable@@Base+0x4a4>
   2d45c:	orr	r3, r2, r3
   2d460:	strb	r3, [r4]
   2d464:	b	2d3ec <selectTextTable@@Base+0x3bc>
   2d468:	mov	sl, #0
   2d46c:	mov	r6, #41	; 0x29
   2d470:	strb	sl, [r4]
   2d474:	b	2d3e8 <selectTextTable@@Base+0x3b8>
   2d478:	cmp	r0, #0
   2d47c:	beq	2d424 <selectTextTable@@Base+0x3f4>
   2d480:	mov	r0, r7
   2d484:	mov	r1, #1
   2d488:	bl	292f0 <ungetDataCharacters@@Base>
   2d48c:	mov	r3, #1
   2d490:	b	2d384 <selectTextTable@@Base+0x354>
   2d494:	ldr	r1, [pc, #128]	; 2d51c <selectTextTable@@Base+0x4ec>
   2d498:	mov	r0, r7
   2d49c:	mov	r2, r8
   2d4a0:	add	r1, pc, r1
   2d4a4:	bl	28dec <reportDataError@@Base>
   2d4a8:	mov	r3, #0
   2d4ac:	b	2d384 <selectTextTable@@Base+0x354>
   2d4b0:	cmp	r6, #0
   2d4b4:	beq	2d48c <selectTextTable@@Base+0x45c>
   2d4b8:	ldr	r1, [pc, #96]	; 2d520 <selectTextTable@@Base+0x4f0>
   2d4bc:	mov	r0, r7
   2d4c0:	str	r3, [sp]
   2d4c4:	add	r1, pc, r1
   2d4c8:	bl	28dec <reportDataError@@Base>
   2d4cc:	ldr	r3, [sp]
   2d4d0:	b	2d384 <selectTextTable@@Base+0x354>
   2d4d4:	ldr	r1, [pc, #72]	; 2d524 <selectTextTable@@Base+0x4f4>
   2d4d8:	mov	r0, r7
   2d4dc:	mov	r2, r8
   2d4e0:	add	r1, pc, r1
   2d4e4:	bl	28dec <reportDataError@@Base>
   2d4e8:	b	2d4a8 <selectTextTable@@Base+0x478>
   2d4ec:	mov	r6, r0
   2d4f0:	mov	r1, #1
   2d4f4:	mov	r0, r7
   2d4f8:	mov	sl, r6
   2d4fc:	bl	292f0 <ungetDataCharacters@@Base>
   2d500:	b	2d3e8 <selectTextTable@@Base+0x3b8>
   2d504:	bl	f950 <__stack_chk_fail@plt>
   2d508:	andeq	r5, r4, ip, lsl r7
   2d50c:			; <UNDEFINED> instruction: 0x000003b4
   2d510:	andeq	r6, r2, r4, lsl #15
   2d514:	andeq	r7, r2, ip, lsr #24
   2d518:	andeq	r0, r0, r8, asr r4
   2d51c:	andeq	r6, r2, r4, asr r6
   2d520:	andeq	r6, r2, r8, ror #12
   2d524:	andeq	r6, r2, r0, lsr r6
   2d528:	ldr	r3, [pc, #128]	; 2d5b0 <selectTextTable@@Base+0x580>
   2d52c:	ldr	r2, [pc, #128]	; 2d5b4 <selectTextTable@@Base+0x584>
   2d530:	add	r3, pc, r3
   2d534:	push	{r4, r5, r6, lr}
   2d538:	sub	sp, sp, #8
   2d53c:	ldr	r4, [r3, r2]
   2d540:	mov	r6, r1
   2d544:	add	r1, sp, #2
   2d548:	mov	r5, r0
   2d54c:	ldr	r3, [r4]
   2d550:	str	r3, [sp, #4]
   2d554:	bl	2d1d0 <selectTextTable@@Base+0x1a0>
   2d558:	cmp	r0, #0
   2d55c:	bne	2d57c <selectTextTable@@Base+0x54c>
   2d560:	mov	r0, #1
   2d564:	ldr	r2, [sp, #4]
   2d568:	ldr	r3, [r4]
   2d56c:	cmp	r2, r3
   2d570:	bne	2d5ac <selectTextTable@@Base+0x57c>
   2d574:	add	sp, sp, #8
   2d578:	pop	{r4, r5, r6, pc}
   2d57c:	mov	r0, r5
   2d580:	add	r1, sp, #3
   2d584:	bl	2d344 <selectTextTable@@Base+0x314>
   2d588:	cmp	r0, #0
   2d58c:	beq	2d560 <selectTextTable@@Base+0x530>
   2d590:	mov	r0, r6
   2d594:	ldrb	r1, [sp, #2]
   2d598:	ldrb	r2, [sp, #3]
   2d59c:	bl	2ce14 <setTextTableByte@@Base>
   2d5a0:	cmp	r0, #0
   2d5a4:	bne	2d560 <selectTextTable@@Base+0x530>
   2d5a8:	b	2d564 <selectTextTable@@Base+0x534>
   2d5ac:	bl	f950 <__stack_chk_fail@plt>
   2d5b0:	andeq	r5, r4, r8, asr #10
   2d5b4:			; <UNDEFINED> instruction: 0x000003b4
   2d5b8:	ldr	r3, [pc, #128]	; 2d640 <selectTextTable@@Base+0x610>
   2d5bc:	ldr	r2, [pc, #128]	; 2d644 <selectTextTable@@Base+0x614>
   2d5c0:	add	r3, pc, r3
   2d5c4:	push	{r4, r5, r6, lr}
   2d5c8:	sub	sp, sp, #16
   2d5cc:	ldr	r4, [r3, r2]
   2d5d0:	mov	r6, r1
   2d5d4:	add	r1, sp, #8
   2d5d8:	mov	r5, r0
   2d5dc:	ldr	r3, [r4]
   2d5e0:	str	r3, [sp, #12]
   2d5e4:	bl	2d294 <selectTextTable@@Base+0x264>
   2d5e8:	cmp	r0, #0
   2d5ec:	bne	2d60c <selectTextTable@@Base+0x5dc>
   2d5f0:	mov	r0, #1
   2d5f4:	ldr	r2, [sp, #12]
   2d5f8:	ldr	r3, [r4]
   2d5fc:	cmp	r2, r3
   2d600:	bne	2d63c <selectTextTable@@Base+0x60c>
   2d604:	add	sp, sp, #16
   2d608:	pop	{r4, r5, r6, pc}
   2d60c:	mov	r0, r5
   2d610:	add	r1, sp, #7
   2d614:	bl	2d344 <selectTextTable@@Base+0x314>
   2d618:	cmp	r0, #0
   2d61c:	beq	2d5f0 <selectTextTable@@Base+0x5c0>
   2d620:	mov	r0, r6
   2d624:	ldr	r1, [sp, #8]
   2d628:	ldrb	r2, [sp, #7]
   2d62c:	bl	2cc8c <setTextTableGlyph@@Base>
   2d630:	cmp	r0, #0
   2d634:	bne	2d5f0 <selectTextTable@@Base+0x5c0>
   2d638:	b	2d5f4 <selectTextTable@@Base+0x5c4>
   2d63c:	bl	f950 <__stack_chk_fail@plt>
   2d640:			; <UNDEFINED> instruction: 0x000454b8
   2d644:			; <UNDEFINED> instruction: 0x000003b4
   2d648:	ldr	r3, [pc, #128]	; 2d6d0 <selectTextTable@@Base+0x6a0>
   2d64c:	ldr	r2, [pc, #128]	; 2d6d4 <selectTextTable@@Base+0x6a4>
   2d650:	add	r3, pc, r3
   2d654:	push	{r4, r5, r6, lr}
   2d658:	sub	sp, sp, #16
   2d65c:	ldr	r4, [r3, r2]
   2d660:	mov	r6, r1
   2d664:	add	r1, sp, #8
   2d668:	mov	r5, r0
   2d66c:	ldr	r3, [r4]
   2d670:	str	r3, [sp, #12]
   2d674:	bl	2d294 <selectTextTable@@Base+0x264>
   2d678:	cmp	r0, #0
   2d67c:	bne	2d69c <selectTextTable@@Base+0x66c>
   2d680:	mov	r0, #1
   2d684:	ldr	r2, [sp, #12]
   2d688:	ldr	r3, [r4]
   2d68c:	cmp	r2, r3
   2d690:	bne	2d6cc <selectTextTable@@Base+0x69c>
   2d694:	add	sp, sp, #16
   2d698:	pop	{r4, r5, r6, pc}
   2d69c:	mov	r0, r5
   2d6a0:	add	r1, sp, #7
   2d6a4:	bl	2d344 <selectTextTable@@Base+0x314>
   2d6a8:	cmp	r0, #0
   2d6ac:	beq	2d680 <selectTextTable@@Base+0x650>
   2d6b0:	mov	r0, r6
   2d6b4:	ldr	r1, [sp, #8]
   2d6b8:	ldrb	r2, [sp, #7]
   2d6bc:	bl	2cd24 <setTextTableCharacter@@Base>
   2d6c0:	cmp	r0, #0
   2d6c4:	bne	2d680 <selectTextTable@@Base+0x650>
   2d6c8:	b	2d684 <selectTextTable@@Base+0x654>
   2d6cc:	bl	f950 <__stack_chk_fail@plt>
   2d6d0:	andeq	r5, r4, r8, lsr #8
   2d6d4:			; <UNDEFINED> instruction: 0x000003b4

0002d6d8 <processTextTableStream@@Base>:
   2d6d8:	ldr	r2, [pc, #4]	; 2d6e4 <processTextTableStream@@Base+0xc>
   2d6dc:	add	r2, pc, r2
   2d6e0:	b	2ced4 <processTextTableLines@@Base>
   2d6e4:			; <UNDEFINED> instruction: 0xfffffacc

0002d6e8 <compileTextTable@@Base>:
   2d6e8:	ldr	r1, [pc, #84]	; 2d744 <compileTextTable@@Base+0x5c>
   2d6ec:	mov	r2, #0
   2d6f0:	push	{r4, r5, r6, lr}
   2d6f4:	add	r1, pc, r1
   2d6f8:	mov	r5, r0
   2d6fc:	bl	1d1c0 <openDataFile@@Base>
   2d700:	subs	r4, r0, #0
   2d704:	beq	2d73c <compileTextTable@@Base+0x54>
   2d708:	mov	r1, r5
   2d70c:	bl	2d6d8 <processTextTableStream@@Base>
   2d710:	subs	r6, r0, #0
   2d714:	moveq	r5, r6
   2d718:	beq	2d72c <compileTextTable@@Base+0x44>
   2d71c:	bl	2cf5c <makeTextTable@@Base>
   2d720:	mov	r5, r0
   2d724:	mov	r0, r6
   2d728:	bl	2ceb8 <destroyTextTableData@@Base>
   2d72c:	mov	r0, r4
   2d730:	bl	fbc0 <fclose@plt>
   2d734:	mov	r0, r5
   2d738:	pop	{r4, r5, r6, pc}
   2d73c:	mov	r5, r4
   2d740:	b	2d734 <compileTextTable@@Base+0x4c>
   2d744:	muleq	r2, r8, r9
   2d748:	ldr	r3, [r1]
   2d74c:	ubfx	r2, r0, #24, #7
   2d750:	push	{r4, r5, r6, r7, r8}
   2d754:	ldr	r3, [r3]
   2d758:	ldr	r2, [r3, r2, lsl #2]
   2d75c:	cmp	r2, #0
   2d760:	beq	2d7e4 <compileTextTable@@Base+0xfc>
   2d764:	adds	r2, r3, r2
   2d768:	beq	2d7e4 <compileTextTable@@Base+0xfc>
   2d76c:	ubfx	ip, r0, #16, #8
   2d770:	ldr	r2, [r2, ip, lsl #2]
   2d774:	cmp	r2, #0
   2d778:	beq	2d7e4 <compileTextTable@@Base+0xfc>
   2d77c:	adds	r2, r3, r2
   2d780:	beq	2d7e4 <compileTextTable@@Base+0xfc>
   2d784:	ubfx	ip, r0, #8, #8
   2d788:	ldr	r2, [r2, ip, lsl #2]
   2d78c:	cmp	r2, #0
   2d790:	beq	2d7e4 <compileTextTable@@Base+0xfc>
   2d794:	adds	ip, r3, r2
   2d798:	moveq	r0, ip
   2d79c:	beq	2d7e8 <compileTextTable@@Base+0x100>
   2d7a0:	uxtb	r0, r0
   2d7a4:	mov	r4, #1
   2d7a8:	and	r8, r0, #7
   2d7ac:	mov	r5, #0
   2d7b0:	add	r6, ip, r0, lsr #3
   2d7b4:	mov	r3, #0
   2d7b8:	and	r5, r5, r3
   2d7bc:	ldrb	r6, [r6, #256]	; 0x100
   2d7c0:	lsr	r2, r6, r8
   2d7c4:	and	r4, r4, r2
   2d7c8:	orrs	r6, r4, r5
   2d7cc:	beq	2d7f0 <compileTextTable@@Base+0x108>
   2d7d0:	ldrb	r3, [ip, r0]
   2d7d4:	mov	r0, #1
   2d7d8:	strb	r3, [r1, #4]
   2d7dc:	pop	{r4, r5, r6, r7, r8}
   2d7e0:	bx	lr
   2d7e4:	mov	r0, r2
   2d7e8:	pop	{r4, r5, r6, r7, r8}
   2d7ec:	bx	lr
   2d7f0:	mov	r0, r3
   2d7f4:	b	2d7e8 <compileTextTable@@Base+0x100>

0002d7f8 <convertCharacterToDots@@Base>:
   2d7f8:	ldr	r3, [pc, #320]	; 2d940 <convertCharacterToDots@@Base+0x148>
   2d7fc:	bic	r2, r1, #255	; 0xff
   2d800:	ldr	ip, [pc, #316]	; 2d944 <convertCharacterToDots@@Base+0x14c>
   2d804:	cmp	r2, #10240	; 0x2800
   2d808:	add	r3, pc, r3
   2d80c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2d810:	sub	sp, sp, #20
   2d814:	ldr	r4, [r3, ip]
   2d818:	mov	r5, r0
   2d81c:	uxtbeq	r0, r1
   2d820:	ldr	r3, [r4]
   2d824:	str	r3, [sp, #12]
   2d828:	beq	2d8dc <convertCharacterToDots@@Base+0xe4>
   2d82c:	cmp	r2, #61440	; 0xf000
   2d830:	bne	2d848 <convertCharacterToDots@@Base+0x50>
   2d834:	uxtb	r0, r1
   2d838:	bl	285c8 <convertCharToWchar@@Base>
   2d83c:	cmn	r0, #1
   2d840:	mov	r1, r0
   2d844:	beq	2d870 <convertCharacterToDots@@Base+0x78>
   2d848:	mov	r0, r1
   2d84c:	ldr	r1, [pc, #244]	; 2d948 <convertCharacterToDots@@Base+0x150>
   2d850:	add	r2, sp, #4
   2d854:	mov	r3, #0
   2d858:	add	r1, pc, r1
   2d85c:	str	r5, [sp, #4]
   2d860:	strb	r3, [sp, #8]
   2d864:	bl	2b1f4 <handleBestCharacter@@Base>
   2d868:	cmp	r0, #0
   2d86c:	bne	2d8f4 <convertCharacterToDots@@Base+0xfc>
   2d870:	ldr	ip, [r5]
   2d874:	ldr	r3, [ip]
   2d878:	cmp	r3, #0
   2d87c:	beq	2d8fc <convertCharacterToDots@@Base+0x104>
   2d880:	add	r2, ip, r3
   2d884:	cmp	r2, #0
   2d888:	beq	2d8fc <convertCharacterToDots@@Base+0x104>
   2d88c:	ldr	r5, [ip, r3]
   2d890:	cmp	r5, #0
   2d894:	beq	2d8fc <convertCharacterToDots@@Base+0x104>
   2d898:	adds	r8, ip, r5
   2d89c:	beq	2d8fc <convertCharacterToDots@@Base+0x104>
   2d8a0:	ldr	r3, [r8, #1020]	; 0x3fc
   2d8a4:	cmp	r3, #0
   2d8a8:	beq	2d904 <convertCharacterToDots@@Base+0x10c>
   2d8ac:	adds	r9, ip, r3
   2d8b0:	beq	2d904 <convertCharacterToDots@@Base+0x10c>
   2d8b4:	ldrb	r6, [r9, #287]	; 0x11f
   2d8b8:	mov	r1, #0
   2d8bc:	mov	r0, #1
   2d8c0:	mov	r3, #0
   2d8c4:	and	r3, r3, r1
   2d8c8:	lsr	r2, r6, #5
   2d8cc:	and	r2, r2, r0
   2d8d0:	orrs	r1, r2, r3
   2d8d4:	beq	2d904 <convertCharacterToDots@@Base+0x10c>
   2d8d8:	ldrb	r0, [r9, #253]	; 0xfd
   2d8dc:	ldr	r2, [sp, #12]
   2d8e0:	ldr	r3, [r4]
   2d8e4:	cmp	r2, r3
   2d8e8:	bne	2d93c <convertCharacterToDots@@Base+0x144>
   2d8ec:	add	sp, sp, #20
   2d8f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d8f4:	ldrb	r0, [sp, #8]
   2d8f8:	b	2d8dc <convertCharacterToDots@@Base+0xe4>
   2d8fc:	mov	r0, #255	; 0xff
   2d900:	b	2d8dc <convertCharacterToDots@@Base+0xe4>
   2d904:	cmp	r8, #0
   2d908:	beq	2d8fc <convertCharacterToDots@@Base+0x104>
   2d90c:	ldr	r3, [ip, r5]
   2d910:	cmp	r3, #0
   2d914:	beq	2d8fc <convertCharacterToDots@@Base+0x104>
   2d918:	adds	ip, ip, r3
   2d91c:	beq	2d8fc <convertCharacterToDots@@Base+0x104>
   2d920:	ldrb	r0, [ip, #263]	; 0x107
   2d924:	mov	r3, #0
   2d928:	lsr	r2, r0, #7
   2d92c:	orrs	r1, r2, r3
   2d930:	beq	2d8fc <convertCharacterToDots@@Base+0x104>
   2d934:	ldrb	r0, [ip, #63]	; 0x3f
   2d938:	b	2d8dc <convertCharacterToDots@@Base+0xe4>
   2d93c:	bl	f950 <__stack_chk_fail@plt>
   2d940:	andeq	r5, r4, r0, ror r2
   2d944:			; <UNDEFINED> instruction: 0x000003b4
   2d948:			; <UNDEFINED> instruction: 0xfffffee8

0002d94c <convertDotsToCharacter@@Base>:
   2d94c:	push	{r4, r5, r6, r7}
   2d950:	and	r7, r1, #7
   2d954:	ldr	r6, [r0]
   2d958:	mov	ip, r1
   2d95c:	mov	r0, #1
   2d960:	mov	r3, #0
   2d964:	add	r4, r6, r1, lsr #3
   2d968:	mov	r1, #0
   2d96c:	and	r3, r3, r1
   2d970:	ldrb	r4, [r4, #1536]	; 0x600
   2d974:	lsr	r2, r4, r7
   2d978:	and	r2, r2, r0
   2d97c:	orrs	r1, r2, r3
   2d980:	addne	ip, ip, #128	; 0x80
   2d984:	movweq	r0, #65533	; 0xfffd
   2d988:	ldrne	r0, [r6, ip, lsl #2]
   2d98c:	pop	{r4, r5, r6, r7}
   2d990:	bx	lr

0002d994 <replaceTextTable@@Base>:
   2d994:	push	{r4, r5, r6, lr}
   2d998:	mov	r6, r1
   2d99c:	bl	2cfd4 <makeTextTablePath@@Base>
   2d9a0:	ldr	r5, [pc, #180]	; 2da5c <replaceTextTable@@Base+0xc8>
   2d9a4:	add	r5, pc, r5
   2d9a8:	subs	r4, r0, #0
   2d9ac:	beq	2da28 <replaceTextTable@@Base+0x94>
   2d9b0:	ldr	r1, [pc, #168]	; 2da60 <replaceTextTable@@Base+0xcc>
   2d9b4:	mov	r2, r4
   2d9b8:	mov	r0, #7
   2d9bc:	add	r1, pc, r1
   2d9c0:	bl	1c634 <logMessage@@Base>
   2d9c4:	mov	r0, r4
   2d9c8:	bl	2d6e8 <compileTextTable@@Base>
   2d9cc:	subs	r2, r0, #0
   2d9d0:	beq	2d9f8 <replaceTextTable@@Base+0x64>
   2d9d4:	ldr	r3, [pc, #136]	; 2da64 <replaceTextTable@@Base+0xd0>
   2d9d8:	ldr	r3, [r5, r3]
   2d9dc:	ldr	r0, [r3]
   2d9e0:	str	r2, [r3]
   2d9e4:	bl	2cf9c <destroyTextTable@@Base>
   2d9e8:	mov	r0, r4
   2d9ec:	bl	f4f4 <free@plt>
   2d9f0:	mov	r0, #1
   2d9f4:	pop	{r4, r5, r6, pc}
   2d9f8:	ldr	r1, [pc, #104]	; 2da68 <replaceTextTable@@Base+0xd4>
   2d9fc:	mov	r2, #5
   2da00:	add	r1, pc, r1
   2da04:	bl	f9bc <dcgettext@plt>
   2da08:	ldr	r1, [pc, #92]	; 2da6c <replaceTextTable@@Base+0xd8>
   2da0c:	mov	r3, r4
   2da10:	add	r1, pc, r1
   2da14:	mov	r2, r0
   2da18:	mov	r0, #3
   2da1c:	bl	1c634 <logMessage@@Base>
   2da20:	mov	r0, r4
   2da24:	bl	f4f4 <free@plt>
   2da28:	ldr	r1, [pc, #64]	; 2da70 <replaceTextTable@@Base+0xdc>
   2da2c:	mov	r2, #5
   2da30:	mov	r0, #0
   2da34:	add	r1, pc, r1
   2da38:	bl	f9bc <dcgettext@plt>
   2da3c:	ldr	r1, [pc, #48]	; 2da74 <replaceTextTable@@Base+0xe0>
   2da40:	mov	r3, r6
   2da44:	add	r1, pc, r1
   2da48:	mov	r2, r0
   2da4c:	mov	r0, #3
   2da50:	bl	1c634 <logMessage@@Base>
   2da54:	mov	r0, #0
   2da58:	pop	{r4, r5, r6, pc}
   2da5c:	ldrdeq	r5, [r4], -r4
   2da60:	andeq	r7, r2, r0, ror #6
   2da64:	strdeq	r0, [r0], -ip
   2da68:	andeq	r7, r2, r8, lsr r3
   2da6c:	andeq	r1, r2, r4, lsr #18
   2da70:	andeq	r7, r2, r0, lsr #6
   2da74:	strdeq	r1, [r2], -r0
   2da78:	mov	r3, r1
   2da7c:	ldr	r2, [pc, #12]	; 2da90 <replaceTextTable@@Base+0xfc>
   2da80:	ldr	r1, [pc, #12]	; 2da94 <replaceTextTable@@Base+0x100>
   2da84:	add	r2, pc, r2
   2da88:	add	r1, pc, r1
   2da8c:	b	29c18 <processPropertyOperand@@Base>
   2da90:	strdeq	r7, [r2], -r0
   2da94:	andeq	r4, r4, ip, ror sp
   2da98:	ldr	r3, [pc, #332]	; 2dbec <replaceTextTable@@Base+0x258>
   2da9c:	ldr	r2, [pc, #332]	; 2dbf0 <replaceTextTable@@Base+0x25c>
   2daa0:	add	r3, pc, r3
   2daa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2daa8:	sub	sp, sp, #28
   2daac:	ldr	r5, [r3, r2]
   2dab0:	mov	r8, r1
   2dab4:	add	r1, sp, #8
   2dab8:	mov	r7, r0
   2dabc:	ldr	r3, [r5]
   2dac0:	str	r3, [sp, #20]
   2dac4:	bl	29a80 <getDotOperand@@Base>
   2dac8:	cmp	r0, #0
   2dacc:	bne	2daec <replaceTextTable@@Base+0x158>
   2dad0:	ldr	r2, [sp, #20]
   2dad4:	mov	r0, #1
   2dad8:	ldr	r3, [r5]
   2dadc:	cmp	r2, r3
   2dae0:	bne	2dbe8 <replaceTextTable@@Base+0x254>
   2dae4:	add	sp, sp, #28
   2dae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2daec:	ldr	r2, [pc, #256]	; 2dbf4 <replaceTextTable@@Base+0x260>
   2daf0:	mov	r0, r7
   2daf4:	add	r1, sp, #12
   2daf8:	ldr	sl, [sp, #8]
   2dafc:	add	r2, pc, r2
   2db00:	bl	2933c <getDataOperand@@Base>
   2db04:	cmp	r0, #0
   2db08:	beq	2dad0 <replaceTextTable@@Base+0x13c>
   2db0c:	ldr	r6, [sp, #16]
   2db10:	ldr	r9, [sp, #12]
   2db14:	cmp	r6, #1
   2db18:	ble	2dad0 <replaceTextTable@@Base+0x13c>
   2db1c:	ldr	r0, [pc, #212]	; 2dbf8 <replaceTextTable@@Base+0x264>
   2db20:	mov	r2, #2
   2db24:	ldr	r1, [r9]
   2db28:	add	r0, pc, r0
   2db2c:	bl	f7a0 <wmemchr@plt>
   2db30:	cmp	r0, #0
   2db34:	str	r0, [sp, #4]
   2db38:	beq	2dbd0 <replaceTextTable@@Base+0x23c>
   2db3c:	ldr	r4, [pc, #184]	; 2dbfc <replaceTextTable@@Base+0x268>
   2db40:	add	r9, r9, #4
   2db44:	ldr	fp, [pc, #180]	; 2dc00 <replaceTextTable@@Base+0x26c>
   2db48:	sub	r6, r6, #1
   2db4c:	add	r4, pc, r4
   2db50:	add	fp, pc, fp
   2db54:	b	2db64 <replaceTextTable@@Base+0x1d0>
   2db58:	ldr	fp, [r4, #8]!
   2db5c:	cmp	fp, #0
   2db60:	beq	2dbb4 <replaceTextTable@@Base+0x220>
   2db64:	mov	r0, fp
   2db68:	bl	f410 <wcslen@plt>
   2db6c:	cmp	r0, r6
   2db70:	bne	2db58 <replaceTextTable@@Base+0x1c4>
   2db74:	mov	r1, fp
   2db78:	mov	r0, r9
   2db7c:	mov	r2, r6
   2db80:	bl	f770 <wmemcmp@plt>
   2db84:	cmp	r0, #0
   2db88:	bne	2db58 <replaceTextTable@@Base+0x1c4>
   2db8c:	ldr	r3, [pc, #112]	; 2dc04 <replaceTextTable@@Base+0x270>
   2db90:	add	r8, r8, sl, lsl #1
   2db94:	ldr	r1, [sp, #4]
   2db98:	ldrb	r2, [r4, #4]
   2db9c:	add	r3, pc, r3
   2dba0:	rsb	r3, r3, r1
   2dba4:	strb	r2, [r8, #4]
   2dba8:	asr	r3, r3, #2
   2dbac:	strb	r3, [r8, #5]
   2dbb0:	b	2dad0 <replaceTextTable@@Base+0x13c>
   2dbb4:	ldr	r1, [pc, #76]	; 2dc08 <replaceTextTable@@Base+0x274>
   2dbb8:	mov	r0, r7
   2dbbc:	mov	r2, r6
   2dbc0:	mov	r3, r9
   2dbc4:	add	r1, pc, r1
   2dbc8:	bl	28dec <reportDataError@@Base>
   2dbcc:	b	2dad0 <replaceTextTable@@Base+0x13c>
   2dbd0:	ldr	r1, [pc, #52]	; 2dc0c <replaceTextTable@@Base+0x278>
   2dbd4:	mov	r0, r7
   2dbd8:	mov	r2, r9
   2dbdc:	add	r1, pc, r1
   2dbe0:	bl	28dec <reportDataError@@Base>
   2dbe4:	b	2dad0 <replaceTextTable@@Base+0x13c>
   2dbe8:	bl	f950 <__stack_chk_fail@plt>
   2dbec:	ldrdeq	r4, [r4], -r8
   2dbf0:			; <UNDEFINED> instruction: 0x000003b4
   2dbf4:	muleq	r2, r4, r2
   2dbf8:	andeq	r7, r2, r4, asr #4
   2dbfc:	andeq	r2, r4, r0, ror #17
   2dc00:	andeq	r7, r2, r0, lsr #5
   2dc04:	ldrdeq	r7, [r2], -r0
   2dc08:	ldrdeq	r7, [r2], -r8
   2dc0c:	andeq	r7, r2, r0, ror #3

0002dc10 <compileAttributesTable@@Base>:
   2dc10:	push	{r4, r5, r6, r7, r8, r9, lr}
   2dc14:	mov	r7, r0
   2dc18:	ldr	r4, [pc, #372]	; 2dd94 <compileAttributesTable@@Base+0x184>
   2dc1c:	sub	sp, sp, #28
   2dc20:	ldr	r3, [pc, #368]	; 2dd98 <compileAttributesTable@@Base+0x188>
   2dc24:	add	r4, pc, r4
   2dc28:	ldr	r0, [pc, #364]	; 2dd9c <compileAttributesTable@@Base+0x18c>
   2dc2c:	ldr	r1, [pc, #364]	; 2dda0 <compileAttributesTable@@Base+0x190>
   2dc30:	ldr	r5, [r4, r3]
   2dc34:	add	r0, pc, r0
   2dc38:	add	r1, pc, r1
   2dc3c:	ldr	r3, [r5]
   2dc40:	str	r3, [sp, #20]
   2dc44:	bl	29118 <setGlobalTableVariables@@Base>
   2dc48:	cmp	r0, #0
   2dc4c:	moveq	r4, r0
   2dc50:	beq	2dca4 <compileAttributesTable@@Base+0x94>
   2dc54:	mov	r8, #0
   2dc58:	str	r8, [sp]
   2dc5c:	str	r8, [sp, #4]
   2dc60:	str	r8, [sp, #8]
   2dc64:	str	r8, [sp, #12]
   2dc68:	str	r8, [sp, #16]
   2dc6c:	bl	289c0 <newDataArea@@Base>
   2dc70:	cmp	r0, r8
   2dc74:	str	r0, [sp]
   2dc78:	moveq	r4, r0
   2dc7c:	beq	2dca4 <compileAttributesTable@@Base+0x94>
   2dc80:	mov	r1, r8
   2dc84:	mov	r2, #256	; 0x100
   2dc88:	mov	r3, #1
   2dc8c:	bl	28a04 <allocateDataItem@@Base>
   2dc90:	cmp	r0, r8
   2dc94:	bne	2dcc0 <compileAttributesTable@@Base+0xb0>
   2dc98:	mov	r4, #0
   2dc9c:	ldr	r0, [sp]
   2dca0:	bl	289e0 <destroyDataArea@@Base>
   2dca4:	ldr	r2, [sp, #20]
   2dca8:	mov	r0, r4
   2dcac:	ldr	r3, [r5]
   2dcb0:	cmp	r2, r3
   2dcb4:	bne	2dd90 <compileAttributesTable@@Base+0x180>
   2dcb8:	add	sp, sp, #28
   2dcbc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2dcc0:	ldr	r1, [pc, #220]	; 2dda4 <compileAttributesTable@@Base+0x194>
   2dcc4:	mov	r0, r7
   2dcc8:	mov	r2, sp
   2dccc:	add	r1, pc, r1
   2dcd0:	bl	29fd8 <processDataFile@@Base>
   2dcd4:	cmp	r0, #0
   2dcd8:	beq	2dc98 <compileAttributesTable@@Base+0x88>
   2dcdc:	ldr	r0, [sp]
   2dce0:	mov	r1, r8
   2dce4:	bl	28ab4 <getDataItem@@Base>
   2dce8:	mov	r9, r8
   2dcec:	uxtb	r7, r8
   2dcf0:	add	r2, r0, r8
   2dcf4:	mov	r3, sp
   2dcf8:	mov	r1, #0
   2dcfc:	strb	r9, [r0, r8]
   2dd00:	ldrb	ip, [r3, #4]
   2dd04:	ldrb	lr, [r3, #5]
   2dd08:	tst	r7, ip
   2dd0c:	moveq	ip, #0
   2dd10:	movne	ip, #1
   2dd14:	cmp	lr, #0
   2dd18:	eoreq	ip, ip, #1
   2dd1c:	cmp	ip, #0
   2dd20:	beq	2dd3c <compileAttributesTable@@Base+0x12c>
   2dd24:	ldr	lr, [pc, #124]	; 2dda8 <compileAttributesTable@@Base+0x198>
   2dd28:	ldrb	ip, [r2]
   2dd2c:	ldr	lr, [r4, lr]
   2dd30:	ldrb	lr, [r1, lr]
   2dd34:	orr	ip, lr, ip
   2dd38:	strb	ip, [r2]
   2dd3c:	add	r1, r1, #1
   2dd40:	add	r3, r3, #2
   2dd44:	cmp	r1, #8
   2dd48:	bne	2dd00 <compileAttributesTable@@Base+0xf0>
   2dd4c:	add	r8, r8, #1
   2dd50:	cmp	r8, #256	; 0x100
   2dd54:	bne	2dcec <compileAttributesTable@@Base+0xdc>
   2dd58:	mov	r0, r1
   2dd5c:	bl	fb48 <malloc@plt>
   2dd60:	subs	r4, r0, #0
   2dd64:	beq	2dc9c <compileAttributesTable@@Base+0x8c>
   2dd68:	mov	r1, #0
   2dd6c:	ldr	r0, [sp]
   2dd70:	bl	28ab4 <getDataItem@@Base>
   2dd74:	str	r0, [r4]
   2dd78:	ldr	r0, [sp]
   2dd7c:	bl	28ac0 <getDataSize@@Base>
   2dd80:	str	r0, [r4, #4]
   2dd84:	ldr	r0, [sp]
   2dd88:	bl	289ac <resetDataArea@@Base>
   2dd8c:	b	2dc9c <compileAttributesTable@@Base+0x8c>
   2dd90:	bl	f950 <__stack_chk_fail@plt>
   2dd94:	andeq	r4, r4, r4, asr lr
   2dd98:			; <UNDEFINED> instruction: 0x000003b4
   2dd9c:	andeq	r7, r2, ip, lsr #3
   2dda0:			; <UNDEFINED> instruction: 0x000271b0
   2dda4:			; <UNDEFINED> instruction: 0xfffffda4
   2dda8:	andeq	r0, r0, r8, asr r4

0002ddac <destroyAttributesTable@@Base>:
   2ddac:	push	{r4, lr}
   2ddb0:	mov	r4, r0
   2ddb4:	ldr	r3, [r0, #4]
   2ddb8:	cmp	r3, #0
   2ddbc:	popeq	{r4, pc}
   2ddc0:	ldr	r0, [r0]
   2ddc4:	bl	f4f4 <free@plt>
   2ddc8:	mov	r0, r4
   2ddcc:	pop	{r4, lr}
   2ddd0:	b	f4f4 <free@plt>

0002ddd4 <ensureAttributesTableExtension@@Base>:
   2ddd4:	ldr	r1, [pc, #4]	; 2dde0 <ensureAttributesTableExtension@@Base+0xc>
   2ddd8:	add	r1, pc, r1
   2dddc:	b	1ca9c <ensureFileExtension@@Base>
   2dde0:	andeq	r7, r2, r8

0002dde4 <makeAttributesTablePath@@Base>:
   2dde4:	ldr	r2, [pc, #4]	; 2ddf0 <makeAttributesTablePath@@Base+0xc>
   2dde8:	add	r2, pc, r2
   2ddec:	b	1cb3c <makeFilePath@@Base>
   2ddf0:	strdeq	r6, [r2], -r8

0002ddf4 <convertAttributesToDots@@Base>:
   2ddf4:	ldr	r3, [r0]
   2ddf8:	ldrb	r0, [r3, r1]
   2ddfc:	bx	lr

0002de00 <replaceAttributesTable@@Base>:
   2de00:	push	{r4, r5, r6, lr}
   2de04:	mov	r6, r1
   2de08:	bl	2dde4 <makeAttributesTablePath@@Base>
   2de0c:	ldr	r5, [pc, #180]	; 2dec8 <replaceAttributesTable@@Base+0xc8>
   2de10:	add	r5, pc, r5
   2de14:	subs	r4, r0, #0
   2de18:	beq	2de94 <replaceAttributesTable@@Base+0x94>
   2de1c:	ldr	r1, [pc, #168]	; 2decc <replaceAttributesTable@@Base+0xcc>
   2de20:	mov	r2, r4
   2de24:	mov	r0, #7
   2de28:	add	r1, pc, r1
   2de2c:	bl	1c634 <logMessage@@Base>
   2de30:	mov	r0, r4
   2de34:	bl	2dc10 <compileAttributesTable@@Base>
   2de38:	subs	r2, r0, #0
   2de3c:	beq	2de64 <replaceAttributesTable@@Base+0x64>
   2de40:	ldr	r3, [pc, #136]	; 2ded0 <replaceAttributesTable@@Base+0xd0>
   2de44:	ldr	r3, [r5, r3]
   2de48:	ldr	r0, [r3]
   2de4c:	str	r2, [r3]
   2de50:	bl	2ddac <destroyAttributesTable@@Base>
   2de54:	mov	r0, r4
   2de58:	bl	f4f4 <free@plt>
   2de5c:	mov	r0, #1
   2de60:	pop	{r4, r5, r6, pc}
   2de64:	ldr	r1, [pc, #104]	; 2ded4 <replaceAttributesTable@@Base+0xd4>
   2de68:	mov	r2, #5
   2de6c:	add	r1, pc, r1
   2de70:	bl	f9bc <dcgettext@plt>
   2de74:	ldr	r1, [pc, #92]	; 2ded8 <replaceAttributesTable@@Base+0xd8>
   2de78:	mov	r3, r4
   2de7c:	add	r1, pc, r1
   2de80:	mov	r2, r0
   2de84:	mov	r0, #3
   2de88:	bl	1c634 <logMessage@@Base>
   2de8c:	mov	r0, r4
   2de90:	bl	f4f4 <free@plt>
   2de94:	ldr	r1, [pc, #64]	; 2dedc <replaceAttributesTable@@Base+0xdc>
   2de98:	mov	r2, #5
   2de9c:	mov	r0, #0
   2dea0:	add	r1, pc, r1
   2dea4:	bl	f9bc <dcgettext@plt>
   2dea8:	ldr	r1, [pc, #48]	; 2dee0 <replaceAttributesTable@@Base+0xe0>
   2deac:	mov	r3, r6
   2deb0:	add	r1, pc, r1
   2deb4:	mov	r2, r0
   2deb8:	mov	r0, #3
   2debc:	bl	1c634 <logMessage@@Base>
   2dec0:	mov	r0, #0
   2dec4:	pop	{r4, r5, r6, pc}
   2dec8:	andeq	r4, r4, r8, ror #24
   2decc:	andeq	r7, r2, r8, lsr r3
   2ded0:	andeq	r0, r0, ip, asr #9
   2ded4:	andeq	r7, r2, r4, lsl r3
   2ded8:			; <UNDEFINED> instruction: 0x000214b8
   2dedc:	andeq	r7, r2, r0, lsl #6
   2dee0:	andeq	r1, r2, r4, lsl #9
   2dee4:	ldr	ip, [pc, #476]	; 2e0c8 <replaceAttributesTable@@Base+0x2c8>
   2dee8:	cmp	r3, #0
   2deec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2def0:	add	ip, pc, ip
   2def4:	ldr	r4, [pc, #464]	; 2e0cc <replaceAttributesTable@@Base+0x2cc>
   2def8:	sub	sp, sp, #12
   2defc:	mov	fp, #0
   2df00:	ldr	r9, [ip, r4]
   2df04:	movgt	r4, fp
   2df08:	ldr	ip, [r9]
   2df0c:	strb	fp, [r1]
   2df10:	str	ip, [sp, #4]
   2df14:	movgt	ip, #1
   2df18:	ble	2e088 <replaceAttributesTable@@Base+0x288>
   2df1c:	mov	sl, r2
   2df20:	sub	r7, ip, #1
   2df24:	ldr	r6, [r2], #4
   2df28:	subs	r8, fp, r7
   2df2c:	sub	r5, r6, #45	; 0x2d
   2df30:	movne	r8, #1
   2df34:	str	r6, [sp]
   2df38:	cmp	r5, #11
   2df3c:	addls	pc, pc, r5, lsl #2
   2df40:	b	2e048 <replaceAttributesTable@@Base+0x248>
   2df44:	b	2dfe0 <replaceAttributesTable@@Base+0x1e0>
   2df48:	b	2e048 <replaceAttributesTable@@Base+0x248>
   2df4c:	b	2e048 <replaceAttributesTable@@Base+0x248>
   2df50:	b	2dfd0 <replaceAttributesTable@@Base+0x1d0>
   2df54:	b	2dfc8 <replaceAttributesTable@@Base+0x1c8>
   2df58:	b	2df74 <replaceAttributesTable@@Base+0x174>
   2df5c:	b	2e040 <replaceAttributesTable@@Base+0x240>
   2df60:	b	2e038 <replaceAttributesTable@@Base+0x238>
   2df64:	b	2e030 <replaceAttributesTable@@Base+0x230>
   2df68:	b	2e028 <replaceAttributesTable@@Base+0x228>
   2df6c:	b	2e020 <replaceAttributesTable@@Base+0x220>
   2df70:	b	2e018 <replaceAttributesTable@@Base+0x218>
   2df74:	mov	r5, #2
   2df78:	cmp	r4, #0
   2df7c:	movne	r8, #0
   2df80:	andeq	r8, r8, #1
   2df84:	cmp	r8, #0
   2df88:	bne	2e048 <replaceAttributesTable@@Base+0x248>
   2df8c:	tst	r5, r4
   2df90:	bne	2e074 <replaceAttributesTable@@Base+0x274>
   2df94:	orr	r4, r5, r4
   2df98:	mov	r5, ip
   2df9c:	cmp	r3, r5
   2dfa0:	add	ip, ip, #1
   2dfa4:	bgt	2df1c <replaceAttributesTable@@Base+0x11c>
   2dfa8:	cmp	fp, r5
   2dfac:	beq	2e088 <replaceAttributesTable@@Base+0x288>
   2dfb0:	ldrb	r2, [r1]
   2dfb4:	mov	r0, #1
   2dfb8:	add	r3, r2, r0
   2dfbc:	strb	r3, [r1], r2
   2dfc0:	strb	r4, [r1, #1]
   2dfc4:	b	2e05c <replaceAttributesTable@@Base+0x25c>
   2dfc8:	mov	r5, #1
   2dfcc:	b	2df78 <replaceAttributesTable@@Base+0x178>
   2dfd0:	cmp	r8, #0
   2dfd4:	bne	2e048 <replaceAttributesTable@@Base+0x248>
   2dfd8:	mov	r5, ip
   2dfdc:	b	2df9c <replaceAttributesTable@@Base+0x19c>
   2dfe0:	cmp	r8, #0
   2dfe4:	beq	2e09c <replaceAttributesTable@@Base+0x29c>
   2dfe8:	ldrb	r7, [r1]
   2dfec:	mov	r5, r1
   2dff0:	add	r6, r7, #1
   2dff4:	uxtb	r6, r6
   2dff8:	strb	r6, [r5], r7
   2dffc:	cmp	r6, #255	; 0xff
   2e000:	strb	r4, [r5, #1]
   2e004:	beq	2e0b4 <replaceAttributesTable@@Base+0x2b4>
   2e008:	mov	fp, ip
   2e00c:	mov	r5, ip
   2e010:	mov	r4, #0
   2e014:	b	2df9c <replaceAttributesTable@@Base+0x19c>
   2e018:	mov	r5, #128	; 0x80
   2e01c:	b	2df78 <replaceAttributesTable@@Base+0x178>
   2e020:	mov	r5, #64	; 0x40
   2e024:	b	2df78 <replaceAttributesTable@@Base+0x178>
   2e028:	mov	r5, #32
   2e02c:	b	2df78 <replaceAttributesTable@@Base+0x178>
   2e030:	mov	r5, #16
   2e034:	b	2df78 <replaceAttributesTable@@Base+0x178>
   2e038:	mov	r5, #8
   2e03c:	b	2df78 <replaceAttributesTable@@Base+0x178>
   2e040:	mov	r5, #4
   2e044:	b	2df78 <replaceAttributesTable@@Base+0x178>
   2e048:	ldr	r1, [pc, #128]	; 2e0d0 <replaceAttributesTable@@Base+0x2d0>
   2e04c:	mov	r2, sp
   2e050:	add	r1, pc, r1
   2e054:	bl	28dec <reportDataError@@Base>
   2e058:	mov	r0, #0
   2e05c:	ldr	r2, [sp, #4]
   2e060:	ldr	r3, [r9]
   2e064:	cmp	r2, r3
   2e068:	bne	2e0c4 <replaceAttributesTable@@Base+0x2c4>
   2e06c:	add	sp, sp, #12
   2e070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e074:	ldr	r1, [pc, #88]	; 2e0d4 <replaceAttributesTable@@Base+0x2d4>
   2e078:	mov	r2, sp
   2e07c:	add	r1, pc, r1
   2e080:	bl	28dec <reportDataError@@Base>
   2e084:	b	2e058 <replaceAttributesTable@@Base+0x258>
   2e088:	ldr	r1, [pc, #72]	; 2e0d8 <replaceAttributesTable@@Base+0x2d8>
   2e08c:	add	r1, pc, r1
   2e090:	bl	28dec <reportDataError@@Base>
   2e094:	mov	r0, #0
   2e098:	b	2e05c <replaceAttributesTable@@Base+0x25c>
   2e09c:	ldr	r1, [pc, #56]	; 2e0dc <replaceAttributesTable@@Base+0x2dc>
   2e0a0:	rsb	r2, r7, r3
   2e0a4:	mov	r3, sl
   2e0a8:	add	r1, pc, r1
   2e0ac:	bl	28dec <reportDataError@@Base>
   2e0b0:	b	2e058 <replaceAttributesTable@@Base+0x258>
   2e0b4:	ldr	r1, [pc, #36]	; 2e0e0 <replaceAttributesTable@@Base+0x2e0>
   2e0b8:	add	r1, pc, r1
   2e0bc:	bl	28dec <reportDataError@@Base>
   2e0c0:	b	2e058 <replaceAttributesTable@@Base+0x258>
   2e0c4:	bl	f950 <__stack_chk_fail@plt>
   2e0c8:	andeq	r4, r4, r8, lsl #23
   2e0cc:			; <UNDEFINED> instruction: 0x000003b4
   2e0d0:	andeq	r5, r2, r4, lsr #21
   2e0d4:	andeq	r7, r2, r0, ror #2
   2e0d8:	andeq	r7, r2, r4, lsr r1
   2e0dc:	andeq	r7, r2, r8, asr r1
   2e0e0:	andeq	r7, r2, ip, ror #2
   2e0e4:	ldr	r3, [pc, #100]	; 2e150 <replaceAttributesTable@@Base+0x350>
   2e0e8:	ldr	ip, [pc, #100]	; 2e154 <replaceAttributesTable@@Base+0x354>
   2e0ec:	add	r3, pc, r3
   2e0f0:	push	{r4, r5, r6, lr}
   2e0f4:	sub	sp, sp, #16
   2e0f8:	ldr	r4, [r3, ip]
   2e0fc:	mov	r5, r1
   2e100:	add	r1, sp, #4
   2e104:	mov	r6, r0
   2e108:	ldr	r3, [r4]
   2e10c:	str	r3, [sp, #12]
   2e110:	bl	2933c <getDataOperand@@Base>
   2e114:	cmp	r0, #0
   2e118:	beq	2e134 <replaceAttributesTable@@Base+0x334>
   2e11c:	mov	r0, r6
   2e120:	mov	r1, r5
   2e124:	ldmib	sp, {r2, r3}
   2e128:	bl	2dee4 <replaceAttributesTable@@Base+0xe4>
   2e12c:	adds	r0, r0, #0
   2e130:	movne	r0, #1
   2e134:	ldr	r2, [sp, #12]
   2e138:	ldr	r3, [r4]
   2e13c:	cmp	r2, r3
   2e140:	bne	2e14c <replaceAttributesTable@@Base+0x34c>
   2e144:	add	sp, sp, #16
   2e148:	pop	{r4, r5, r6, pc}
   2e14c:	bl	f950 <__stack_chk_fail@plt>
   2e150:	andeq	r4, r4, ip, lsl #19
   2e154:			; <UNDEFINED> instruction: 0x000003b4
   2e158:	push	{r4, r5, r6, r7, r8, lr}
   2e15c:	mov	r7, r1
   2e160:	ldr	r1, [r1, #12]
   2e164:	mov	r6, r0
   2e168:	ldr	ip, [r7, #4]
   2e16c:	mov	r4, #0
   2e170:	subs	r2, r1, #1
   2e174:	bmi	2e1a8 <replaceAttributesTable@@Base+0x3a8>
   2e178:	add	r3, r4, r2
   2e17c:	add	r3, r3, r3, lsr #31
   2e180:	asr	r3, r3, #1
   2e184:	ldr	r5, [ip, r3, lsl #4]
   2e188:	add	r0, ip, r3, lsl #4
   2e18c:	cmp	r5, r6
   2e190:	addcc	r4, r3, #1
   2e194:	bcc	2e1a0 <replaceAttributesTable@@Base+0x3a0>
   2e198:	sub	r2, r3, #1
   2e19c:	popls	{r4, r5, r6, r7, r8, pc}
   2e1a0:	cmp	r2, r4
   2e1a4:	bge	2e178 <replaceAttributesTable@@Base+0x378>
   2e1a8:	ldr	r3, [r7, #8]
   2e1ac:	cmp	r1, r3
   2e1b0:	beq	2e204 <replaceAttributesTable@@Base+0x404>
   2e1b4:	add	r0, r4, #1
   2e1b8:	rsb	r2, r4, r1
   2e1bc:	lsl	r0, r0, #4
   2e1c0:	lsl	r2, r2, #4
   2e1c4:	sub	r4, r0, #16
   2e1c8:	add	r0, ip, r0
   2e1cc:	add	r1, ip, r4
   2e1d0:	bl	f7dc <memmove@plt>
   2e1d4:	ldr	r8, [r7, #4]
   2e1d8:	ldr	r3, [r7, #12]
   2e1dc:	mov	r1, #0
   2e1e0:	add	r5, r8, r4
   2e1e4:	mov	r2, #16
   2e1e8:	add	r3, r3, #1
   2e1ec:	str	r3, [r7, #12]
   2e1f0:	mov	r0, r5
   2e1f4:	bl	f6b0 <memset@plt>
   2e1f8:	str	r6, [r8, r4]
   2e1fc:	mov	r0, r5
   2e200:	pop	{r4, r5, r6, r7, r8, pc}
   2e204:	cmp	r1, #0
   2e208:	mov	r0, ip
   2e20c:	lslne	r5, r1, #1
   2e210:	lslne	r1, r1, #5
   2e214:	moveq	r1, #2048	; 0x800
   2e218:	moveq	r5, #128	; 0x80
   2e21c:	bl	f878 <realloc@plt>
   2e220:	cmp	r0, #0
   2e224:	popeq	{r4, r5, r6, r7, r8, pc}
   2e228:	ldr	r1, [r7, #12]
   2e22c:	mov	ip, r0
   2e230:	stmib	r7, {r0, r5}
   2e234:	b	2e1b4 <replaceAttributesTable@@Base+0x3b4>
   2e238:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2e23c:	mov	r5, r2
   2e240:	ldr	r6, [sp, #32]
   2e244:	mov	r9, r0
   2e248:	mov	r8, r1
   2e24c:	mov	r7, r3
   2e250:	ldr	r2, [r6]
   2e254:	cmp	r2, #0
   2e258:	beq	2e2c4 <replaceAttributesTable@@Base+0x4c4>
   2e25c:	add	r0, r5, #3
   2e260:	lsl	r0, r0, #2
   2e264:	bl	fb48 <malloc@plt>
   2e268:	subs	r4, r0, #0
   2e26c:	beq	2e2c4 <replaceAttributesTable@@Base+0x4c4>
   2e270:	mov	ip, r4
   2e274:	mov	lr, #0
   2e278:	str	lr, [ip], #4
   2e27c:	add	ip, ip, #4
   2e280:	str	lr, [r4, #4]
   2e284:	mov	r1, r8
   2e288:	str	lr, [ip], #4
   2e28c:	uxtb	r2, r5
   2e290:	str	lr, [ip]
   2e294:	add	r0, r4, #12
   2e298:	strb	r5, [r4, #8]
   2e29c:	bl	f620 <wmemcpy@plt>
   2e2a0:	ldr	r3, [r6]
   2e2a4:	mov	r0, r4
   2e2a8:	str	r3, [r4, #4]
   2e2ac:	lsl	r3, r3, #1
   2e2b0:	str	r3, [r6]
   2e2b4:	ldr	r3, [r7]
   2e2b8:	str	r3, [r4]
   2e2bc:	str	r4, [r7]
   2e2c0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2e2c4:	ldr	r1, [pc, #24]	; 2e2e4 <replaceAttributesTable@@Base+0x4e4>
   2e2c8:	mov	r0, r9
   2e2cc:	mov	r2, r5
   2e2d0:	mov	r3, r8
   2e2d4:	add	r1, pc, r1
   2e2d8:	bl	28dec <reportDataError@@Base>
   2e2dc:	mov	r0, #0
   2e2e0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2e2e4:	andeq	r6, r2, r8, ror #30
   2e2e8:	push	{r4, r5, r6, lr}
   2e2ec:	mov	r5, r0
   2e2f0:	ldrb	r3, [r1]
   2e2f4:	mov	r4, r1
   2e2f8:	ldr	r0, [r2]
   2e2fc:	mov	r6, r2
   2e300:	mov	r1, r5
   2e304:	add	r2, r3, #1
   2e308:	mov	r3, #1
   2e30c:	bl	28a04 <allocateDataItem@@Base>
   2e310:	cmp	r0, #0
   2e314:	popeq	{r4, r5, r6, pc}
   2e318:	ldr	r1, [r5]
   2e31c:	ldr	r0, [r6]
   2e320:	bl	28ab4 <getDataItem@@Base>
   2e324:	mov	r1, r4
   2e328:	ldrb	r3, [r1], #1
   2e32c:	mov	r2, r3
   2e330:	strb	r3, [r0], #1
   2e334:	bl	fb24 <memcpy@plt>
   2e338:	mov	r0, #1
   2e33c:	pop	{r4, r5, r6, pc}
   2e340:	ldr	ip, [pc, #540]	; 2e564 <replaceAttributesTable@@Base+0x764>
   2e344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e348:	subs	r5, r1, #0
   2e34c:	ldr	r1, [pc, #532]	; 2e568 <replaceAttributesTable@@Base+0x768>
   2e350:	add	ip, pc, ip
   2e354:	mov	r4, r2
   2e358:	mov	r9, r3
   2e35c:	ldrbne	r2, [r5]
   2e360:	mov	r3, ip
   2e364:	ldr	r8, [ip, r1]
   2e368:	sub	sp, sp, #12
   2e36c:	moveq	r2, #20
   2e370:	mov	sl, r0
   2e374:	ldr	r7, [sp, #52]	; 0x34
   2e378:	mov	r1, sp
   2e37c:	ldr	r3, [r8]
   2e380:	ldr	r0, [r7]
   2e384:	str	r3, [sp, #4]
   2e388:	movne	r3, #20
   2e38c:	addne	r2, r3, r2, lsl #2
   2e390:	cmp	r4, #0
   2e394:	ldrbne	r3, [r4]
   2e398:	addne	r2, r2, r3
   2e39c:	mov	r3, #4
   2e3a0:	bl	28a04 <allocateDataItem@@Base>
   2e3a4:	cmp	r0, #0
   2e3a8:	beq	2e54c <replaceAttributesTable@@Base+0x74c>
   2e3ac:	ldr	r1, [sp]
   2e3b0:	ldr	r0, [r7]
   2e3b4:	bl	28ab4 <getDataItem@@Base>
   2e3b8:	ldr	r1, [sp, #48]	; 0x30
   2e3bc:	cmp	r5, #0
   2e3c0:	mov	r6, r0
   2e3c4:	str	sl, [r0, #4]
   2e3c8:	str	r9, [r0, #8]
   2e3cc:	str	r1, [r0, #12]
   2e3d0:	beq	2e554 <replaceAttributesTable@@Base+0x754>
   2e3d4:	mov	r1, r5
   2e3d8:	add	r0, r0, #20
   2e3dc:	ldrb	r2, [r1], #4
   2e3e0:	strb	r2, [r6, #16]
   2e3e4:	bl	f620 <wmemcpy@plt>
   2e3e8:	ldrb	r3, [r6, #16]
   2e3ec:	cmp	r4, #0
   2e3f0:	strbeq	r4, [r6, #17]
   2e3f4:	beq	2e414 <replaceAttributesTable@@Base+0x614>
   2e3f8:	mov	r1, r4
   2e3fc:	add	r0, r6, r3, lsl #2
   2e400:	ldrb	r2, [r1], #1
   2e404:	add	r0, r0, #20
   2e408:	strb	r2, [r6, #17]
   2e40c:	bl	fb24 <memcpy@plt>
   2e410:	ldrb	r3, [r6, #16]
   2e414:	cmp	r3, #1
   2e418:	beq	2e520 <replaceAttributesTable@@Base+0x720>
   2e41c:	mov	r1, #0
   2e420:	ldr	r0, [r7]
   2e424:	bl	28ab4 <getDataItem@@Base>
   2e428:	ldr	r1, [r6, #20]
   2e42c:	ldr	r2, [r6, #24]
   2e430:	movw	r3, #44917	; 0xaf75
   2e434:	movt	r3, #61737	; 0xf129
   2e438:	add	r2, r2, r1, lsl #8
   2e43c:	umull	r1, r3, r3, r2
   2e440:	lsr	r3, r3, #10
   2e444:	add	r1, r3, r3, lsl #4
   2e448:	rsb	r3, r3, r1, lsl #6
   2e44c:	rsb	r2, r3, r2
   2e450:	add	r0, r0, r2, lsl #2
   2e454:	add	r5, r0, #28
   2e458:	ldr	r1, [r5]
   2e45c:	cmp	r1, #0
   2e460:	addne	r9, r6, #20
   2e464:	bne	2e47c <replaceAttributesTable@@Base+0x67c>
   2e468:	b	2e4c0 <replaceAttributesTable@@Base+0x6c0>
   2e46c:	ldr	r1, [r4]
   2e470:	mov	r5, r4
   2e474:	cmp	r1, #0
   2e478:	beq	2e4c0 <replaceAttributesTable@@Base+0x6c0>
   2e47c:	ldr	r0, [r7]
   2e480:	bl	28ab4 <getDataItem@@Base>
   2e484:	ldrb	r2, [r6, #16]
   2e488:	ldrb	r3, [r0, #16]
   2e48c:	mov	r4, r0
   2e490:	cmp	r2, r3
   2e494:	bhi	2e4bc <replaceAttributesTable@@Base+0x6bc>
   2e498:	bne	2e46c <replaceAttributesTable@@Base+0x66c>
   2e49c:	ldr	fp, [r6, #4]
   2e4a0:	ldr	sl, [r0, #4]
   2e4a4:	cmp	fp, sl
   2e4a8:	beq	2e4e8 <replaceAttributesTable@@Base+0x6e8>
   2e4ac:	cmp	sl, #6
   2e4b0:	bne	2e46c <replaceAttributesTable@@Base+0x66c>
   2e4b4:	cmp	fp, #6
   2e4b8:	beq	2e46c <replaceAttributesTable@@Base+0x66c>
   2e4bc:	ldr	r1, [r5]
   2e4c0:	str	r1, [r6]
   2e4c4:	mov	r0, r6
   2e4c8:	ldr	r3, [sp]
   2e4cc:	str	r3, [r5]
   2e4d0:	ldr	r2, [sp, #4]
   2e4d4:	ldr	r3, [r8]
   2e4d8:	cmp	r2, r3
   2e4dc:	bne	2e560 <replaceAttributesTable@@Base+0x760>
   2e4e0:	add	sp, sp, #12
   2e4e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e4e8:	ldr	r1, [r6, #8]
   2e4ec:	ldr	r3, [r0, #8]
   2e4f0:	cmp	r1, r3
   2e4f4:	bne	2e4ac <replaceAttributesTable@@Base+0x6ac>
   2e4f8:	ldr	r1, [r6, #12]
   2e4fc:	ldr	r3, [r0, #12]
   2e500:	cmp	r1, r3
   2e504:	bne	2e4ac <replaceAttributesTable@@Base+0x6ac>
   2e508:	mov	r0, r9
   2e50c:	add	r1, r4, #20
   2e510:	bl	f770 <wmemcmp@plt>
   2e514:	cmp	r0, #0
   2e518:	bne	2e4ac <replaceAttributesTable@@Base+0x6ac>
   2e51c:	b	2e4bc <replaceAttributesTable@@Base+0x6bc>
   2e520:	ldr	r0, [r6, #20]
   2e524:	mov	r1, r7
   2e528:	bl	2e158 <replaceAttributesTable@@Base+0x358>
   2e52c:	cmp	r0, #0
   2e530:	beq	2e54c <replaceAttributesTable@@Base+0x74c>
   2e534:	ldr	r3, [r6, #4]
   2e538:	add	r5, r0, #4
   2e53c:	cmp	r3, #6
   2e540:	ldreq	r3, [sp]
   2e544:	streq	r3, [r0, #8]
   2e548:	b	2e458 <replaceAttributesTable@@Base+0x658>
   2e54c:	mov	r0, #0
   2e550:	b	2e4d0 <replaceAttributesTable@@Base+0x6d0>
   2e554:	mov	r3, r5
   2e558:	strb	r5, [r0, #16]
   2e55c:	b	2e3ec <replaceAttributesTable@@Base+0x5ec>
   2e560:	bl	f950 <__stack_chk_fail@plt>
   2e564:	andeq	r4, r4, r8, lsr #14
   2e568:			; <UNDEFINED> instruction: 0x000003b4
   2e56c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e570:	sub	sp, sp, #1328	; 0x530
   2e574:	sub	sp, sp, #12
   2e578:	ldr	r3, [pc, #1624]	; 2ebd8 <replaceAttributesTable@@Base+0xdd8>
   2e57c:	add	r2, sp, #56	; 0x38
   2e580:	ldr	sl, [pc, #1620]	; 2ebdc <replaceAttributesTable@@Base+0xddc>
   2e584:	str	r2, [sp, #28]
   2e588:	add	r3, pc, r3
   2e58c:	ldr	r2, [pc, #1612]	; 2ebe0 <replaceAttributesTable@@Base+0xde0>
   2e590:	add	r8, sp, #44	; 0x2c
   2e594:	str	r1, [sp, #24]
   2e598:	add	sl, pc, sl
   2e59c:	ldr	r7, [pc, #1600]	; 2ebe4 <replaceAttributesTable@@Base+0xde4>
   2e5a0:	mov	r6, r0
   2e5a4:	ldr	r2, [r3, r2]
   2e5a8:	mov	r3, #0
   2e5ac:	ldr	lr, [pc, #1588]	; 2ebe8 <replaceAttributesTable@@Base+0xde8>
   2e5b0:	add	r7, pc, r7
   2e5b4:	str	r3, [sp, #36]	; 0x24
   2e5b8:	str	r2, [sp, #16]
   2e5bc:	add	lr, pc, lr
   2e5c0:	ldr	r2, [r2]
   2e5c4:	str	lr, [sp, #20]
   2e5c8:	str	r3, [sp, #40]	; 0x28
   2e5cc:	str	r2, [sp, #1332]	; 0x534
   2e5d0:	mov	r0, r6
   2e5d4:	mov	r1, r8
   2e5d8:	mov	r2, sl
   2e5dc:	bl	2933c <getDataOperand@@Base>
   2e5e0:	cmp	r0, #0
   2e5e4:	bne	2e610 <replaceAttributesTable@@Base+0x810>
   2e5e8:	mov	ip, #1
   2e5ec:	ldr	r1, [sp, #16]
   2e5f0:	mov	r0, ip
   2e5f4:	ldr	r2, [sp, #1332]	; 0x534
   2e5f8:	ldr	r3, [r1]
   2e5fc:	cmp	r2, r3
   2e600:	bne	2ebd4 <replaceAttributesTable@@Base+0xdd4>
   2e604:	add	sp, sp, #1328	; 0x530
   2e608:	add	sp, sp, #12
   2e60c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e610:	ldr	r1, [sp, #24]
   2e614:	mov	r4, #0
   2e618:	ldr	fp, [sp, #48]	; 0x30
   2e61c:	add	r5, r1, #23
   2e620:	ldr	r9, [sp, #44]	; 0x2c
   2e624:	b	2e634 <replaceAttributesTable@@Base+0x834>
   2e628:	add	r4, r4, #1
   2e62c:	cmp	r4, #30
   2e630:	beq	2e6dc <replaceAttributesTable@@Base+0x8dc>
   2e634:	ldrb	r3, [r5, #1]!
   2e638:	cmp	r3, fp
   2e63c:	bne	2e628 <replaceAttributesTable@@Base+0x828>
   2e640:	mov	r0, r9
   2e644:	ldr	r1, [r7, r4, lsl #2]
   2e648:	mov	r2, fp
   2e64c:	bl	f770 <wmemcmp@plt>
   2e650:	cmp	r0, #0
   2e654:	bne	2e628 <replaceAttributesTable@@Base+0x828>
   2e658:	sub	r3, r4, #1
   2e65c:	cmp	r3, #28
   2e660:	addls	pc, pc, r3, lsl #2
   2e664:	b	2e9fc <replaceAttributesTable@@Base+0xbfc>
   2e668:	b	2e9a8 <replaceAttributesTable@@Base+0xba8>
   2e66c:	b	2e954 <replaceAttributesTable@@Base+0xb54>
   2e670:	b	2e900 <replaceAttributesTable@@Base+0xb00>
   2e674:	b	2e8ac <replaceAttributesTable@@Base+0xaac>
   2e678:	b	2e84c <replaceAttributesTable@@Base+0xa4c>
   2e67c:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e680:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e684:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e688:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e68c:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e690:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e694:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e698:	b	2e84c <replaceAttributesTable@@Base+0xa4c>
   2e69c:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6a0:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6a4:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6a8:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6ac:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6b0:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6b4:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6b8:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6bc:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6c0:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6c4:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6c8:	b	2e78c <replaceAttributesTable@@Base+0x98c>
   2e6cc:	b	2e6f8 <replaceAttributesTable@@Base+0x8f8>
   2e6d0:	b	2eae4 <replaceAttributesTable@@Base+0xce4>
   2e6d4:	b	2ea68 <replaceAttributesTable@@Base+0xc68>
   2e6d8:	b	2ea50 <replaceAttributesTable@@Base+0xc50>
   2e6dc:	ldr	r1, [pc, #1288]	; 2ebec <replaceAttributesTable@@Base+0xdec>
   2e6e0:	mov	r0, r6
   2e6e4:	mov	r2, fp
   2e6e8:	mov	r3, r9
   2e6ec:	add	r1, pc, r1
   2e6f0:	bl	28dec <reportDataError@@Base>
   2e6f4:	b	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e6f8:	ldr	r2, [pc, #1264]	; 2ebf0 <replaceAttributesTable@@Base+0xdf0>
   2e6fc:	mov	ip, r0
   2e700:	mov	r1, r8
   2e704:	mov	r0, r6
   2e708:	add	r2, pc, r2
   2e70c:	str	ip, [sp, #12]
   2e710:	bl	2933c <getDataOperand@@Base>
   2e714:	ldr	ip, [sp, #12]
   2e718:	cmp	r0, #0
   2e71c:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e720:	ldr	lr, [sp, #24]
   2e724:	ldr	r7, [sp, #44]	; 0x2c
   2e728:	ldr	r5, [sp, #48]	; 0x30
   2e72c:	ldr	r4, [lr, #16]
   2e730:	cmp	r4, #0
   2e734:	beq	2eb0c <replaceAttributesTable@@Base+0xd0c>
   2e738:	mov	r8, ip
   2e73c:	b	2e74c <replaceAttributesTable@@Base+0x94c>
   2e740:	ldr	r4, [r4]
   2e744:	cmp	r4, #0
   2e748:	beq	2eb08 <replaceAttributesTable@@Base+0xd08>
   2e74c:	ldrb	r3, [r4, #8]
   2e750:	cmp	r5, r3
   2e754:	bne	2e740 <replaceAttributesTable@@Base+0x940>
   2e758:	mov	r0, r7
   2e75c:	add	r1, r4, #12
   2e760:	mov	r2, r5
   2e764:	bl	f770 <wmemcmp@plt>
   2e768:	cmp	r0, #0
   2e76c:	bne	2e740 <replaceAttributesTable@@Base+0x940>
   2e770:	ldr	r1, [pc, #1148]	; 2ebf4 <replaceAttributesTable@@Base+0xdf4>
   2e774:	mov	r0, r6
   2e778:	mov	r2, r5
   2e77c:	mov	r3, r7
   2e780:	add	r1, pc, r1
   2e784:	bl	28dec <reportDataError@@Base>
   2e788:	b	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e78c:	add	r5, sp, #308	; 0x134
   2e790:	ldr	r3, [pc, #1120]	; 2ebf8 <replaceAttributesTable@@Base+0xdf8>
   2e794:	mov	ip, r0
   2e798:	mov	r2, #0
   2e79c:	mov	r0, r6
   2e7a0:	add	r3, pc, r3
   2e7a4:	mov	r1, r5
   2e7a8:	str	ip, [sp, #12]
   2e7ac:	bl	299f8 <getDataString@@Base>
   2e7b0:	cmp	r0, #0
   2e7b4:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e7b8:	ldr	r2, [pc, #1084]	; 2ebfc <replaceAttributesTable@@Base+0xdfc>
   2e7bc:	mov	r1, r8
   2e7c0:	mov	r0, r6
   2e7c4:	add	r2, pc, r2
   2e7c8:	bl	2933c <getDataOperand@@Base>
   2e7cc:	ldr	ip, [sp, #12]
   2e7d0:	cmp	r0, #0
   2e7d4:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e7d8:	ldr	r3, [sp, #48]	; 0x30
   2e7dc:	ldr	r2, [sp, #44]	; 0x2c
   2e7e0:	cmp	r3, #1
   2e7e4:	bne	2e7f4 <replaceAttributesTable@@Base+0x9f4>
   2e7e8:	ldr	r1, [r2]
   2e7ec:	cmp	r1, #61	; 0x3d
   2e7f0:	beq	2ebc0 <replaceAttributesTable@@Base+0xdc0>
   2e7f4:	add	r7, sp, #52	; 0x34
   2e7f8:	mov	r0, r6
   2e7fc:	str	ip, [sp, #12]
   2e800:	mov	r1, r7
   2e804:	bl	2dee4 <replaceAttributesTable@@Base+0xe4>
   2e808:	ldr	ip, [sp, #12]
   2e80c:	cmp	r0, #0
   2e810:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e814:	ldr	r2, [sp, #24]
   2e818:	mov	r0, r4
   2e81c:	ldr	lr, [sp, #40]	; 0x28
   2e820:	mov	r1, r5
   2e824:	ldr	r3, [sp, #36]	; 0x24
   2e828:	str	r2, [sp, #4]
   2e82c:	mov	r2, r7
   2e830:	str	lr, [sp]
   2e834:	str	ip, [sp, #12]
   2e838:	bl	2e340 <replaceAttributesTable@@Base+0x540>
   2e83c:	ldr	ip, [sp, #12]
   2e840:	cmp	r0, #0
   2e844:	bne	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e848:	b	2e5ec <replaceAttributesTable@@Base+0x7ec>
   2e84c:	add	r5, sp, #308	; 0x134
   2e850:	ldr	r3, [pc, #936]	; 2ec00 <replaceAttributesTable@@Base+0xe00>
   2e854:	mov	ip, r0
   2e858:	mov	r2, #0
   2e85c:	mov	r0, r6
   2e860:	add	r3, pc, r3
   2e864:	mov	r1, r5
   2e868:	str	ip, [sp, #12]
   2e86c:	bl	299f8 <getDataString@@Base>
   2e870:	cmp	r0, #0
   2e874:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e878:	ldr	r2, [sp, #24]
   2e87c:	mov	r0, r4
   2e880:	ldr	lr, [sp, #40]	; 0x28
   2e884:	mov	r1, r5
   2e888:	ldr	r3, [sp, #36]	; 0x24
   2e88c:	str	r2, [sp, #4]
   2e890:	mov	r2, #0
   2e894:	str	lr, [sp]
   2e898:	bl	2e340 <replaceAttributesTable@@Base+0x540>
   2e89c:	ldr	ip, [sp, #12]
   2e8a0:	cmp	r0, #0
   2e8a4:	bne	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e8a8:	b	2e5ec <replaceAttributesTable@@Base+0x7ec>
   2e8ac:	add	r4, sp, #308	; 0x134
   2e8b0:	ldr	r2, [pc, #844]	; 2ec04 <replaceAttributesTable@@Base+0xe04>
   2e8b4:	mov	r0, r6
   2e8b8:	add	r2, pc, r2
   2e8bc:	mov	r1, r4
   2e8c0:	bl	2e0e4 <replaceAttributesTable@@Base+0x2e4>
   2e8c4:	cmp	r0, #0
   2e8c8:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e8cc:	mov	r0, r8
   2e8d0:	mov	r1, r4
   2e8d4:	ldr	r2, [sp, #24]
   2e8d8:	bl	2e2e8 <replaceAttributesTable@@Base+0x4e8>
   2e8dc:	subs	ip, r0, #0
   2e8e0:	beq	2e5ec <replaceAttributesTable@@Base+0x7ec>
   2e8e4:	ldr	r3, [sp, #24]
   2e8e8:	mov	r1, #0
   2e8ec:	ldr	r0, [r3]
   2e8f0:	bl	28ab4 <getDataItem@@Base>
   2e8f4:	ldr	r3, [sp, #44]	; 0x2c
   2e8f8:	str	r3, [r0, #16]
   2e8fc:	b	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e900:	add	r4, sp, #308	; 0x134
   2e904:	ldr	r2, [pc, #764]	; 2ec08 <replaceAttributesTable@@Base+0xe08>
   2e908:	mov	r0, r6
   2e90c:	add	r2, pc, r2
   2e910:	mov	r1, r4
   2e914:	bl	2e0e4 <replaceAttributesTable@@Base+0x2e4>
   2e918:	cmp	r0, #0
   2e91c:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e920:	mov	r0, r8
   2e924:	mov	r1, r4
   2e928:	ldr	r2, [sp, #24]
   2e92c:	bl	2e2e8 <replaceAttributesTable@@Base+0x4e8>
   2e930:	subs	ip, r0, #0
   2e934:	beq	2e5ec <replaceAttributesTable@@Base+0x7ec>
   2e938:	ldr	r2, [sp, #24]
   2e93c:	mov	r1, #0
   2e940:	ldr	r0, [r2]
   2e944:	bl	28ab4 <getDataItem@@Base>
   2e948:	ldr	r3, [sp, #44]	; 0x2c
   2e94c:	str	r3, [r0, #12]
   2e950:	b	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e954:	add	r4, sp, #308	; 0x134
   2e958:	ldr	r2, [pc, #684]	; 2ec0c <replaceAttributesTable@@Base+0xe0c>
   2e95c:	mov	r0, r6
   2e960:	add	r2, pc, r2
   2e964:	mov	r1, r4
   2e968:	bl	2e0e4 <replaceAttributesTable@@Base+0x2e4>
   2e96c:	cmp	r0, #0
   2e970:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e974:	mov	r0, r8
   2e978:	mov	r1, r4
   2e97c:	ldr	r2, [sp, #24]
   2e980:	bl	2e2e8 <replaceAttributesTable@@Base+0x4e8>
   2e984:	subs	ip, r0, #0
   2e988:	beq	2e5ec <replaceAttributesTable@@Base+0x7ec>
   2e98c:	ldr	r1, [sp, #24]
   2e990:	ldr	r0, [r1]
   2e994:	mov	r1, #0
   2e998:	bl	28ab4 <getDataItem@@Base>
   2e99c:	ldr	r3, [sp, #44]	; 0x2c
   2e9a0:	str	r3, [r0, #8]
   2e9a4:	b	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e9a8:	add	r4, sp, #308	; 0x134
   2e9ac:	ldr	r2, [pc, #604]	; 2ec10 <replaceAttributesTable@@Base+0xe10>
   2e9b0:	mov	r0, r6
   2e9b4:	add	r2, pc, r2
   2e9b8:	mov	r1, r4
   2e9bc:	bl	2e0e4 <replaceAttributesTable@@Base+0x2e4>
   2e9c0:	cmp	r0, #0
   2e9c4:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e9c8:	mov	r0, r8
   2e9cc:	mov	r1, r4
   2e9d0:	ldr	r2, [sp, #24]
   2e9d4:	bl	2e2e8 <replaceAttributesTable@@Base+0x4e8>
   2e9d8:	subs	ip, r0, #0
   2e9dc:	beq	2e5ec <replaceAttributesTable@@Base+0x7ec>
   2e9e0:	ldr	lr, [sp, #24]
   2e9e4:	mov	r1, #0
   2e9e8:	ldr	r0, [lr]
   2e9ec:	bl	28ab4 <getDataItem@@Base>
   2e9f0:	ldr	r3, [sp, #44]	; 0x2c
   2e9f4:	str	r3, [r0, #4]
   2e9f8:	b	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2e9fc:	add	r4, sp, #308	; 0x134
   2ea00:	ldr	r2, [pc, #524]	; 2ec14 <replaceAttributesTable@@Base+0xe14>
   2ea04:	mov	r0, r6
   2ea08:	add	r2, pc, r2
   2ea0c:	mov	r1, r4
   2ea10:	bl	2e0e4 <replaceAttributesTable@@Base+0x2e4>
   2ea14:	cmp	r0, #0
   2ea18:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2ea1c:	mov	r0, r8
   2ea20:	mov	r1, r4
   2ea24:	ldr	r2, [sp, #24]
   2ea28:	bl	2e2e8 <replaceAttributesTable@@Base+0x4e8>
   2ea2c:	subs	ip, r0, #0
   2ea30:	beq	2e5ec <replaceAttributesTable@@Base+0x7ec>
   2ea34:	ldr	r3, [sp, #24]
   2ea38:	mov	r1, #0
   2ea3c:	ldr	r0, [r3]
   2ea40:	bl	28ab4 <getDataItem@@Base>
   2ea44:	ldr	r3, [sp, #44]	; 0x2c
   2ea48:	str	r3, [r0]
   2ea4c:	b	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2ea50:	mov	r0, r6
   2ea54:	ldr	r1, [sp, #24]
   2ea58:	bl	29f48 <processIncludeOperands@@Base>
   2ea5c:	adds	ip, r0, #0
   2ea60:	movne	ip, #1
   2ea64:	b	2e5ec <replaceAttributesTable@@Base+0x7ec>
   2ea68:	add	fp, sp, #40	; 0x28
   2ea6c:	mov	r0, r6
   2ea70:	mov	r1, r8
   2ea74:	ldr	r2, [sp, #20]
   2ea78:	bl	2933c <getDataOperand@@Base>
   2ea7c:	cmp	r0, #0
   2ea80:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2ea84:	ldr	r0, [sp, #24]
   2ea88:	ldr	r4, [sp, #44]	; 0x2c
   2ea8c:	ldr	r5, [sp, #48]	; 0x30
   2ea90:	ldr	r9, [r0, #16]
   2ea94:	cmp	r9, #0
   2ea98:	bne	2eaac <replaceAttributesTable@@Base+0xcac>
   2ea9c:	b	2eaec <replaceAttributesTable@@Base+0xcec>
   2eaa0:	ldr	r9, [r9]
   2eaa4:	cmp	r9, #0
   2eaa8:	beq	2eaec <replaceAttributesTable@@Base+0xcec>
   2eaac:	ldrb	r3, [r9, #8]
   2eab0:	cmp	r5, r3
   2eab4:	bne	2eaa0 <replaceAttributesTable@@Base+0xca0>
   2eab8:	mov	r0, r4
   2eabc:	add	r1, r9, #12
   2eac0:	mov	r2, r5
   2eac4:	bl	f770 <wmemcmp@plt>
   2eac8:	cmp	r0, #0
   2eacc:	bne	2eaa0 <replaceAttributesTable@@Base+0xca0>
   2ead0:	ldr	r2, [fp]
   2ead4:	ldr	r3, [r9, #4]
   2ead8:	orr	r3, r2, r3
   2eadc:	str	r3, [fp]
   2eae0:	b	2e5d0 <replaceAttributesTable@@Base+0x7d0>
   2eae4:	add	fp, sp, #36	; 0x24
   2eae8:	b	2ea6c <replaceAttributesTable@@Base+0xc6c>
   2eaec:	ldr	r1, [pc, #292]	; 2ec18 <replaceAttributesTable@@Base+0xe18>
   2eaf0:	mov	r0, r6
   2eaf4:	mov	r2, r5
   2eaf8:	mov	r3, r4
   2eafc:	add	r1, pc, r1
   2eb00:	bl	28dec <reportDataError@@Base>
   2eb04:	b	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2eb08:	mov	ip, r8
   2eb0c:	ldr	lr, [sp, #24]
   2eb10:	mov	r2, r5
   2eb14:	mov	r1, r7
   2eb18:	mov	r0, r6
   2eb1c:	add	r3, lr, #20
   2eb20:	str	r3, [sp]
   2eb24:	add	r3, lr, #16
   2eb28:	str	ip, [sp, #12]
   2eb2c:	bl	2e238 <replaceAttributesTable@@Base+0x438>
   2eb30:	ldr	ip, [sp, #12]
   2eb34:	subs	r5, r0, #0
   2eb38:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2eb3c:	mov	r0, r6
   2eb40:	ldr	r3, [pc, #212]	; 2ec1c <replaceAttributesTable@@Base+0xe1c>
   2eb44:	add	r6, sp, #308	; 0x134
   2eb48:	mov	r2, #0
   2eb4c:	add	r3, pc, r3
   2eb50:	str	ip, [sp, #12]
   2eb54:	mov	r1, r6
   2eb58:	bl	299f8 <getDataString@@Base>
   2eb5c:	ldr	ip, [sp, #12]
   2eb60:	cmp	r0, #0
   2eb64:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2eb68:	ldrb	r3, [sp, #308]	; 0x134
   2eb6c:	cmp	r3, #0
   2eb70:	beq	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2eb74:	mov	r4, #0
   2eb78:	mov	r8, ip
   2eb7c:	ldr	r7, [sp, #24]
   2eb80:	b	2eba4 <replaceAttributesTable@@Base+0xda4>
   2eb84:	ldr	r2, [r0, #12]
   2eb88:	add	r4, r4, #1
   2eb8c:	ldr	r3, [r5, #4]
   2eb90:	orr	r3, r2, r3
   2eb94:	str	r3, [r0, #12]
   2eb98:	ldrb	r3, [sp, #308]	; 0x134
   2eb9c:	cmp	r3, r4
   2eba0:	ble	2e5e8 <replaceAttributesTable@@Base+0x7e8>
   2eba4:	ldr	r0, [r6, #4]!
   2eba8:	mov	r1, r7
   2ebac:	bl	2e158 <replaceAttributesTable@@Base+0x358>
   2ebb0:	cmp	r0, #0
   2ebb4:	bne	2eb84 <replaceAttributesTable@@Base+0xd84>
   2ebb8:	mov	ip, r8
   2ebbc:	b	2e5ec <replaceAttributesTable@@Base+0x7ec>
   2ebc0:	add	r7, sp, #1328	; 0x530
   2ebc4:	mov	r3, #0
   2ebc8:	add	r7, r7, #8
   2ebcc:	strb	r3, [r7, #-1284]!	; 0xfffffafc
   2ebd0:	b	2e814 <replaceAttributesTable@@Base+0xa14>
   2ebd4:	bl	f950 <__stack_chk_fail@plt>
   2ebd8:	strdeq	r4, [r4], -r0
   2ebdc:	andeq	r6, r2, ip, asr #25
   2ebe0:			; <UNDEFINED> instruction: 0x000003b4
   2ebe4:	andeq	r1, r4, r4, asr #30
   2ebe8:	andeq	r6, r2, ip, lsr #26
   2ebec:	andeq	r6, r2, r0, lsl #23
   2ebf0:	andeq	r6, r2, r0, ror #23
   2ebf4:	andeq	r6, r2, ip, lsl #23
   2ebf8:	andeq	r6, r2, r8, ror #21
   2ebfc:	ldrdeq	r6, [r2], -r0
   2ec00:	andeq	r6, r2, r8, lsr #20
   2ec04:	andeq	r6, r2, r4, lsr #20
   2ec08:	andeq	r6, r2, r4, asr #19
   2ec0c:	andeq	r6, r2, ip, asr r9
   2ec10:	strdeq	r6, [r2], -r4
   2ec14:			; <UNDEFINED> instruction: 0x000268b8
   2ec18:	andeq	r6, r2, r8, lsr r8
   2ec1c:			; <UNDEFINED> instruction: 0x000267b4

0002ec20 <startContractionCommand@@Base>:
   2ec20:	ldr	r3, [pc, #208]	; 2ecf8 <startContractionCommand@@Base+0xd8>
   2ec24:	ldr	r2, [pc, #208]	; 2ecfc <startContractionCommand@@Base+0xdc>
   2ec28:	add	r3, pc, r3
   2ec2c:	push	{r4, r5, r6, r7, lr}
   2ec30:	mov	r4, r0
   2ec34:	ldr	r5, [r3, r2]
   2ec38:	sub	sp, sp, #36	; 0x24
   2ec3c:	ldrb	r0, [r0, #68]	; 0x44
   2ec40:	ldr	r3, [r5]
   2ec44:	ands	r6, r0, #1
   2ec48:	movne	r0, #1
   2ec4c:	str	r3, [sp, #28]
   2ec50:	beq	2ec6c <startContractionCommand@@Base+0x4c>
   2ec54:	ldr	r2, [sp, #28]
   2ec58:	ldr	r3, [r5]
   2ec5c:	cmp	r2, r3
   2ec60:	bne	2ecf4 <startContractionCommand@@Base+0xd4>
   2ec64:	add	sp, sp, #36	; 0x24
   2ec68:	pop	{r4, r5, r6, r7, pc}
   2ec6c:	ldr	r3, [r4, #64]	; 0x40
   2ec70:	add	r7, sp, #12
   2ec74:	str	r6, [sp, #8]
   2ec78:	mov	r0, r7
   2ec7c:	str	r3, [sp, #4]
   2ec80:	bl	2a0e8 <initializeHostCommandOptions@@Base>
   2ec84:	ldr	r1, [pc, #116]	; 2ed00 <startContractionCommand@@Base+0xe0>
   2ec88:	mov	r0, #7
   2ec8c:	ldrb	ip, [sp, #12]
   2ec90:	add	r3, r4, #72	; 0x48
   2ec94:	add	r1, pc, r1
   2ec98:	ldr	r2, [r4, #64]	; 0x40
   2ec9c:	orr	ip, ip, #1
   2eca0:	str	r3, [sp, #16]
   2eca4:	strb	ip, [sp, #12]
   2eca8:	add	r3, r4, #76	; 0x4c
   2ecac:	str	r3, [sp, #20]
   2ecb0:	bl	1c634 <logMessage@@Base>
   2ecb4:	mov	r1, r7
   2ecb8:	add	r0, sp, #4
   2ecbc:	bl	2a108 <runHostCommand@@Base>
   2ecc0:	cmp	r0, #0
   2ecc4:	movne	r0, r6
   2ecc8:	bne	2ec54 <startContractionCommand@@Base+0x34>
   2eccc:	ldr	r1, [pc, #48]	; 2ed04 <startContractionCommand@@Base+0xe4>
   2ecd0:	mov	r0, #7
   2ecd4:	ldr	r2, [r4, #64]	; 0x40
   2ecd8:	add	r1, pc, r1
   2ecdc:	bl	1c634 <logMessage@@Base>
   2ece0:	ldrb	r3, [r4, #68]	; 0x44
   2ece4:	mov	r0, #1
   2ece8:	orr	r3, r3, r0
   2ecec:	strb	r3, [r4, #68]	; 0x44
   2ecf0:	b	2ec54 <startContractionCommand@@Base+0x34>
   2ecf4:	bl	f950 <__stack_chk_fail@plt>
   2ecf8:	andeq	r3, r4, r0, asr lr
   2ecfc:			; <UNDEFINED> instruction: 0x000003b4
   2ed00:	andeq	r6, r2, r4, asr #13
   2ed04:	andeq	r6, r2, r8, lsr #13

0002ed08 <stopContractionCommand@@Base>:
   2ed08:	push	{r4, lr}
   2ed0c:	mov	r4, r0
   2ed10:	ldrb	r3, [r0, #68]	; 0x44
   2ed14:	tst	r3, #1
   2ed18:	popeq	{r4, pc}
   2ed1c:	ldr	r0, [r0, #72]	; 0x48
   2ed20:	bl	fbc0 <fclose@plt>
   2ed24:	ldr	r0, [r4, #76]	; 0x4c
   2ed28:	bl	fbc0 <fclose@plt>
   2ed2c:	ldr	r1, [pc, #28]	; 2ed50 <stopContractionCommand@@Base+0x48>
   2ed30:	mov	r0, #7
   2ed34:	ldr	r2, [r4, #64]	; 0x40
   2ed38:	add	r1, pc, r1
   2ed3c:	bl	1c634 <logMessage@@Base>
   2ed40:	ldrb	r3, [r4, #68]	; 0x44
   2ed44:	bfc	r3, #0, #1
   2ed48:	strb	r3, [r4, #68]	; 0x44
   2ed4c:	pop	{r4, pc}
   2ed50:	andeq	r6, r2, r0, ror r6

0002ed54 <compileContractionTable@@Base>:
   2ed54:	ldr	r3, [pc, #836]	; 2f0a0 <compileContractionTable@@Base+0x34c>
   2ed58:	ldr	r2, [pc, #836]	; 2f0a4 <compileContractionTable@@Base+0x350>
   2ed5c:	add	r3, pc, r3
   2ed60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ed64:	sub	sp, sp, #72	; 0x48
   2ed68:	ldr	r7, [r3, r2]
   2ed6c:	mov	r9, r0
   2ed70:	ldr	r3, [r7]
   2ed74:	str	r3, [sp, #68]	; 0x44
   2ed78:	bl	2a374 <isHostCommand@@Base>
   2ed7c:	subs	r8, r0, #0
   2ed80:	beq	2ee20 <compileContractionTable@@Base+0xcc>
   2ed84:	mov	r0, #80	; 0x50
   2ed88:	bl	fb48 <malloc@plt>
   2ed8c:	subs	r4, r0, #0
   2ed90:	beq	2eeec <compileContractionTable@@Base+0x198>
   2ed94:	mov	r1, #0
   2ed98:	mov	r2, #80	; 0x50
   2ed9c:	bl	f6b0 <memset@plt>
   2eda0:	mov	r0, r9
   2eda4:	bl	f740 <__strdup@plt>
   2eda8:	cmp	r0, #0
   2edac:	str	r0, [r4, #64]	; 0x40
   2edb0:	beq	2efcc <compileContractionTable@@Base+0x278>
   2edb4:	ldrb	r2, [r4, #68]	; 0x44
   2edb8:	mov	r3, #0
   2edbc:	mov	r0, r4
   2edc0:	str	r3, [r4]
   2edc4:	bfi	r2, r3, #0, #1
   2edc8:	str	r3, [r4, #4]
   2edcc:	strb	r2, [r4, #68]	; 0x44
   2edd0:	str	r3, [r4, #8]
   2edd4:	str	r3, [r4, #12]
   2edd8:	str	r3, [r4, #16]
   2eddc:	str	r3, [r4, #20]
   2ede0:	str	r3, [r4, #28]
   2ede4:	str	r3, [r4, #32]
   2ede8:	str	r3, [r4, #36]	; 0x24
   2edec:	str	r3, [r4, #44]	; 0x2c
   2edf0:	str	r3, [r4, #48]	; 0x30
   2edf4:	str	r3, [r4, #52]	; 0x34
   2edf8:	bl	2ec20 <startContractionCommand@@Base>
   2edfc:	cmp	r0, #0
   2ee00:	beq	2ef78 <compileContractionTable@@Base+0x224>
   2ee04:	mov	r0, r4
   2ee08:	ldr	r2, [sp, #68]	; 0x44
   2ee0c:	ldr	r3, [r7]
   2ee10:	cmp	r2, r3
   2ee14:	bne	2f050 <compileContractionTable@@Base+0x2fc>
   2ee18:	add	sp, sp, #72	; 0x48
   2ee1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ee20:	ldr	r0, [pc, #640]	; 2f0a8 <compileContractionTable@@Base+0x354>
   2ee24:	ldr	r1, [pc, #640]	; 2f0ac <compileContractionTable@@Base+0x358>
   2ee28:	add	r0, pc, r0
   2ee2c:	add	r1, pc, r1
   2ee30:	bl	29118 <setGlobalTableVariables@@Base>
   2ee34:	cmp	r0, #0
   2ee38:	beq	2ee08 <compileContractionTable@@Base+0xb4>
   2ee3c:	ldr	r6, [pc, #620]	; 2f0b0 <compileContractionTable@@Base+0x35c>
   2ee40:	add	r5, sp, #35	; 0x23
   2ee44:	mov	r3, #1
   2ee48:	str	r8, [sp, #12]
   2ee4c:	add	r6, pc, r6
   2ee50:	str	r8, [sp, #16]
   2ee54:	sub	r4, r6, #4
   2ee58:	add	r6, r6, #116	; 0x74
   2ee5c:	str	r8, [sp, #20]
   2ee60:	str	r8, [sp, #24]
   2ee64:	str	r8, [sp, #28]
   2ee68:	str	r8, [sp, #36]	; 0x24
   2ee6c:	str	r8, [sp, #40]	; 0x28
   2ee70:	str	r8, [sp, #44]	; 0x2c
   2ee74:	str	r8, [sp, #48]	; 0x30
   2ee78:	str	r8, [sp, #52]	; 0x34
   2ee7c:	str	r8, [sp, #56]	; 0x38
   2ee80:	str	r8, [sp, #60]	; 0x3c
   2ee84:	str	r8, [sp, #64]	; 0x40
   2ee88:	str	r3, [sp, #32]
   2ee8c:	ldr	r0, [r4, #4]!
   2ee90:	bl	f410 <wcslen@plt>
   2ee94:	cmp	r4, r6
   2ee98:	strb	r0, [r5, #1]!
   2ee9c:	bne	2ee8c <compileContractionTable@@Base+0x138>
   2eea0:	bl	289c0 <newDataArea@@Base>
   2eea4:	cmp	r0, #0
   2eea8:	mov	r4, r0
   2eeac:	str	r0, [sp, #12]
   2eeb0:	beq	2eed8 <compileContractionTable@@Base+0x184>
   2eeb4:	mov	r1, #0
   2eeb8:	movw	r2, #4376	; 0x1118
   2eebc:	mov	r3, #4
   2eec0:	bl	28a04 <allocateDataItem@@Base>
   2eec4:	cmp	r0, #0
   2eec8:	bne	2eef8 <compileContractionTable@@Base+0x1a4>
   2eecc:	mov	r4, #0
   2eed0:	ldr	r0, [sp, #12]
   2eed4:	bl	289e0 <destroyDataArea@@Base>
   2eed8:	ldr	r0, [sp, #16]
   2eedc:	cmp	r0, #0
   2eee0:	beq	2ee04 <compileContractionTable@@Base+0xb0>
   2eee4:	bl	f4f4 <free@plt>
   2eee8:	b	2ee04 <compileContractionTable@@Base+0xb0>
   2eeec:	bl	1c740 <logMallocError@@Base>
   2eef0:	mov	r0, r4
   2eef4:	b	2ee08 <compileContractionTable@@Base+0xb4>
   2eef8:	ldr	r5, [pc, #436]	; 2f0b4 <compileContractionTable@@Base+0x360>
   2eefc:	add	sl, sp, #12
   2ef00:	ldr	r4, [pc, #432]	; 2f0b8 <compileContractionTable@@Base+0x364>
   2ef04:	add	r8, sp, #28
   2ef08:	add	r5, pc, r5
   2ef0c:	add	r6, sp, #32
   2ef10:	add	r4, pc, r4
   2ef14:	add	r5, r5, #120	; 0x78
   2ef18:	b	2ef28 <compileContractionTable@@Base+0x1d4>
   2ef1c:	ldr	r4, [r5, #4]!
   2ef20:	cmp	r4, #0
   2ef24:	beq	2ef90 <compileContractionTable@@Base+0x23c>
   2ef28:	mov	r0, r4
   2ef2c:	bl	f410 <wcslen@plt>
   2ef30:	str	r6, [sp]
   2ef34:	mov	r1, r4
   2ef38:	mov	r3, r8
   2ef3c:	mov	r2, r0
   2ef40:	mov	r0, #0
   2ef44:	bl	2e238 <replaceAttributesTable@@Base+0x438>
   2ef48:	cmp	r0, #0
   2ef4c:	bne	2ef1c <compileContractionTable@@Base+0x1c8>
   2ef50:	ldr	r0, [sp, #28]
   2ef54:	cmp	r0, #0
   2ef58:	beq	2eecc <compileContractionTable@@Base+0x178>
   2ef5c:	ldr	r3, [r0]
   2ef60:	str	r3, [sp, #28]
   2ef64:	bl	f4f4 <free@plt>
   2ef68:	ldr	r0, [sp, #28]
   2ef6c:	cmp	r0, #0
   2ef70:	bne	2ef5c <compileContractionTable@@Base+0x208>
   2ef74:	b	2eecc <compileContractionTable@@Base+0x178>
   2ef78:	ldr	r0, [r4, #64]	; 0x40
   2ef7c:	bl	f4f4 <free@plt>
   2ef80:	mov	r0, r4
   2ef84:	bl	f4f4 <free@plt>
   2ef88:	mov	r0, #0
   2ef8c:	b	2ee08 <compileContractionTable@@Base+0xb4>
   2ef90:	ldr	r1, [pc, #292]	; 2f0bc <compileContractionTable@@Base+0x368>
   2ef94:	mov	r0, r9
   2ef98:	mov	r2, sl
   2ef9c:	add	r1, pc, r1
   2efa0:	bl	29fd8 <processDataFile@@Base>
   2efa4:	cmp	r0, #0
   2efa8:	beq	2efbc <compileContractionTable@@Base+0x268>
   2efac:	b	2efd4 <compileContractionTable@@Base+0x280>
   2efb0:	ldr	r3, [r0]
   2efb4:	str	r3, [sp, #28]
   2efb8:	bl	f4f4 <free@plt>
   2efbc:	ldr	r0, [sp, #28]
   2efc0:	cmp	r0, #0
   2efc4:	bne	2efb0 <compileContractionTable@@Base+0x25c>
   2efc8:	b	2eed0 <compileContractionTable@@Base+0x17c>
   2efcc:	bl	1c740 <logMallocError@@Base>
   2efd0:	b	2ef80 <compileContractionTable@@Base+0x22c>
   2efd4:	ldr	r3, [sp, #24]
   2efd8:	cmp	r3, #0
   2efdc:	bne	2f054 <compileContractionTable@@Base+0x300>
   2efe0:	mov	r0, #80	; 0x50
   2efe4:	bl	fb48 <malloc@plt>
   2efe8:	subs	r4, r0, #0
   2efec:	beq	2f098 <compileContractionTable@@Base+0x344>
   2eff0:	mov	r3, #0
   2eff4:	ldr	r0, [sp, #12]
   2eff8:	str	r3, [r4]
   2effc:	mov	r1, r3
   2f000:	str	r3, [r4, #4]
   2f004:	str	r3, [r4, #8]
   2f008:	str	r3, [r4, #12]
   2f00c:	str	r3, [r4, #16]
   2f010:	str	r3, [r4, #20]
   2f014:	str	r3, [r4, #28]
   2f018:	str	r3, [r4, #32]
   2f01c:	str	r3, [r4, #36]	; 0x24
   2f020:	str	r3, [r4, #44]	; 0x2c
   2f024:	str	r3, [r4, #48]	; 0x30
   2f028:	str	r3, [r4, #52]	; 0x34
   2f02c:	str	r3, [r4, #64]	; 0x40
   2f030:	bl	28ab4 <getDataItem@@Base>
   2f034:	str	r0, [r4, #68]	; 0x44
   2f038:	ldr	r0, [sp, #12]
   2f03c:	bl	28ac0 <getDataSize@@Base>
   2f040:	str	r0, [r4, #72]	; 0x48
   2f044:	ldr	r0, [sp, #12]
   2f048:	bl	289ac <resetDataArea@@Base>
   2f04c:	b	2efbc <compileContractionTable@@Base+0x268>
   2f050:	bl	f950 <__stack_chk_fail@plt>
   2f054:	mov	ip, #4
   2f058:	ldr	r0, [sp, #12]
   2f05c:	lsl	r3, r3, #4
   2f060:	ldr	r2, [sp, #16]
   2f064:	add	r1, sp, #8
   2f068:	str	ip, [sp]
   2f06c:	bl	28ac8 <saveDataItem@@Base>
   2f070:	cmp	r0, #0
   2f074:	beq	2efbc <compileContractionTable@@Base+0x268>
   2f078:	mov	r1, r4
   2f07c:	ldr	r0, [sp, #12]
   2f080:	bl	28ab4 <getDataItem@@Base>
   2f084:	ldr	r2, [sp, #8]
   2f088:	ldr	r3, [sp, #24]
   2f08c:	str	r2, [r0, #20]
   2f090:	str	r3, [r0, #24]
   2f094:	b	2efe0 <compileContractionTable@@Base+0x28c>
   2f098:	bl	1c740 <logMallocError@@Base>
   2f09c:	b	2efbc <compileContractionTable@@Base+0x268>
   2f0a0:	andeq	r3, r4, ip, lsl sp
   2f0a4:			; <UNDEFINED> instruction: 0x000003b4
   2f0a8:	andeq	r6, r2, r8, lsr #11
   2f0ac:	andeq	r6, r2, ip, lsr #11
   2f0b0:	andeq	r1, r4, r8, lsr #13
   2f0b4:	andeq	r1, r4, ip, ror #11
   2f0b8:	ldrdeq	r6, [r2], -r0
   2f0bc:			; <UNDEFINED> instruction: 0xfffff5c8

0002f0c0 <destroyContractionTable@@Base>:
   2f0c0:	push	{r4, lr}
   2f0c4:	mov	r4, r0
   2f0c8:	ldr	r0, [r0]
   2f0cc:	cmp	r0, #0
   2f0d0:	beq	2f0e0 <destroyContractionTable@@Base+0x20>
   2f0d4:	bl	f4f4 <free@plt>
   2f0d8:	mov	r3, #0
   2f0dc:	str	r3, [r4]
   2f0e0:	ldr	r0, [r4, #12]
   2f0e4:	cmp	r0, #0
   2f0e8:	beq	2f0f8 <destroyContractionTable@@Base+0x38>
   2f0ec:	bl	f4f4 <free@plt>
   2f0f0:	mov	r3, #0
   2f0f4:	str	r3, [r4, #12]
   2f0f8:	ldr	r0, [r4, #28]
   2f0fc:	cmp	r0, #0
   2f100:	beq	2f110 <destroyContractionTable@@Base+0x50>
   2f104:	bl	f4f4 <free@plt>
   2f108:	mov	r3, #0
   2f10c:	str	r3, [r4, #28]
   2f110:	ldr	r0, [r4, #44]	; 0x2c
   2f114:	cmp	r0, #0
   2f118:	beq	2f128 <destroyContractionTable@@Base+0x68>
   2f11c:	bl	f4f4 <free@plt>
   2f120:	mov	r3, #0
   2f124:	str	r3, [r4, #44]	; 0x2c
   2f128:	ldr	r3, [r4, #64]	; 0x40
   2f12c:	cmp	r3, #0
   2f130:	beq	2f150 <destroyContractionTable@@Base+0x90>
   2f134:	mov	r0, r4
   2f138:	bl	2ed08 <stopContractionCommand@@Base>
   2f13c:	ldr	r0, [r4, #64]	; 0x40
   2f140:	bl	f4f4 <free@plt>
   2f144:	mov	r0, r4
   2f148:	pop	{r4, lr}
   2f14c:	b	f4f4 <free@plt>
   2f150:	ldr	r3, [r4, #72]	; 0x48
   2f154:	cmp	r3, #0
   2f158:	popeq	{r4, pc}
   2f15c:	ldr	r0, [r4, #68]	; 0x44
   2f160:	bl	f4f4 <free@plt>
   2f164:	mov	r0, r4
   2f168:	pop	{r4, lr}
   2f16c:	b	f4f4 <free@plt>

0002f170 <ensureContractionTableExtension@@Base>:
   2f170:	ldr	r1, [pc, #4]	; 2f17c <ensureContractionTableExtension@@Base+0xc>
   2f174:	add	r1, pc, r1
   2f178:	b	1ca9c <ensureFileExtension@@Base>
   2f17c:	andeq	r6, r2, ip, asr r2

0002f180 <makeContractionTablePath@@Base>:
   2f180:	ldr	r2, [pc, #4]	; 2f18c <makeContractionTablePath@@Base+0xc>
   2f184:	add	r2, pc, r2
   2f188:	b	1cb3c <makeFilePath@@Base>
   2f18c:	andeq	r6, r2, ip, asr #4
   2f190:	ldr	r3, [pc, #108]	; 2f204 <makeContractionTablePath@@Base+0x84>
   2f194:	push	{r4, r5}
   2f198:	add	r3, pc, r3
   2f19c:	ldr	r3, [r3]
   2f1a0:	ldr	r3, [r3, #68]	; 0x44
   2f1a4:	ldr	r2, [r3, #24]
   2f1a8:	ldr	ip, [r3, #20]
   2f1ac:	subs	r2, r2, #1
   2f1b0:	add	ip, r3, ip
   2f1b4:	bmi	2f1ec <makeContractionTablePath@@Base+0x6c>
   2f1b8:	mov	r1, #0
   2f1bc:	add	r3, r1, r2
   2f1c0:	add	r3, r3, r3, lsr #31
   2f1c4:	asr	r3, r3, #1
   2f1c8:	ldr	r4, [ip, r3, lsl #4]
   2f1cc:	add	r5, ip, r3, lsl #4
   2f1d0:	cmp	r4, r0
   2f1d4:	addcc	r1, r3, #1
   2f1d8:	bcc	2f1e4 <makeContractionTablePath@@Base+0x64>
   2f1dc:	sub	r2, r3, #1
   2f1e0:	bls	2f1f8 <makeContractionTablePath@@Base+0x78>
   2f1e4:	cmp	r1, r2
   2f1e8:	ble	2f1bc <makeContractionTablePath@@Base+0x3c>
   2f1ec:	mov	r0, #0
   2f1f0:	pop	{r4, r5}
   2f1f4:	bx	lr
   2f1f8:	mov	r0, r5
   2f1fc:	pop	{r4, r5}
   2f200:	bx	lr
   2f204:	andeq	r4, r4, ip, lsl #21
   2f208:	push	{r3, lr}
   2f20c:	bl	2f190 <makeContractionTablePath@@Base+0x10>
   2f210:	cmp	r0, #0
   2f214:	popeq	{r3, pc}
   2f218:	ldr	r0, [r0, #8]
   2f21c:	cmp	r0, #0
   2f220:	popeq	{r3, pc}
   2f224:	ldr	r3, [pc, #28]	; 2f248 <makeContractionTablePath@@Base+0xc8>
   2f228:	add	r3, pc, r3
   2f22c:	ldr	r3, [r3]
   2f230:	ldr	r3, [r3, #68]	; 0x44
   2f234:	add	r0, r3, r0
   2f238:	ldrb	r3, [r0, #17]
   2f23c:	cmp	r3, #0
   2f240:	moveq	r0, #0
   2f244:	pop	{r3, pc}
   2f248:	strdeq	r4, [r4], -ip
   2f24c:	push	{r4, lr}
   2f250:	mov	r4, r1
   2f254:	bl	2f208 <makeContractionTablePath@@Base+0x88>
   2f258:	cmp	r0, #0
   2f25c:	strne	r0, [r4]
   2f260:	movne	r0, #1
   2f264:	pop	{r4, pc}
   2f268:	ldr	r2, [pc, #220]	; 2f34c <makeContractionTablePath@@Base+0x1cc>
   2f26c:	ldr	r1, [pc, #220]	; 2f350 <makeContractionTablePath@@Base+0x1d0>
   2f270:	add	r2, pc, r2
   2f274:	push	{r4, r5, r6, r7}
   2f278:	ldrb	r3, [r0]
   2f27c:	ldr	r2, [r2, r1]
   2f280:	cmp	r3, #0
   2f284:	ldrb	r6, [r2, #58]	; 0x3a
   2f288:	beq	2f328 <makeContractionTablePath@@Base+0x1a8>
   2f28c:	ldr	r1, [pc, #192]	; 2f354 <makeContractionTablePath@@Base+0x1d4>
   2f290:	add	r1, pc, r1
   2f294:	ldmib	r1, {r2, r5}
   2f298:	cmp	r2, r5
   2f29c:	bcs	2f328 <makeContractionTablePath@@Base+0x1a8>
   2f2a0:	ldr	r4, [pc, #176]	; 2f358 <makeContractionTablePath@@Base+0x1d8>
   2f2a4:	add	r2, r2, #1
   2f2a8:	add	r5, r5, #1
   2f2ac:	add	r4, pc, r4
   2f2b0:	b	2f2c0 <makeContractionTablePath@@Base+0x140>
   2f2b4:	add	r2, r2, #1
   2f2b8:	cmp	r2, r5
   2f2bc:	beq	2f334 <makeContractionTablePath@@Base+0x1b4>
   2f2c0:	sub	r1, r3, #96	; 0x60
   2f2c4:	sub	r7, r3, #32
   2f2c8:	cmp	r1, #31
   2f2cc:	sub	ip, r3, #65	; 0x41
   2f2d0:	mov	r1, #0
   2f2d4:	uxtbls	r3, r7
   2f2d8:	bls	2f2f0 <makeContractionTablePath@@Base+0x170>
   2f2dc:	cmp	ip, #25
   2f2e0:	mov	r1, #0
   2f2e4:	bhi	2f2f0 <makeContractionTablePath@@Base+0x170>
   2f2e8:	cmp	r6, #2
   2f2ec:	moveq	r1, #64	; 0x40
   2f2f0:	add	ip, r4, r3
   2f2f4:	sub	r3, r3, #32
   2f2f8:	cmp	r3, #63	; 0x3f
   2f2fc:	mov	r3, #0
   2f300:	ldrbls	r3, [ip, #-32]	; 0xffffffe0
   2f304:	orrls	r3, r1, r3
   2f308:	mov	r1, r2
   2f30c:	strb	r3, [r2, #-1]
   2f310:	ldrb	r3, [r0, #1]!
   2f314:	cmp	r3, #0
   2f318:	bne	2f2b4 <makeContractionTablePath@@Base+0x134>
   2f31c:	ldr	r3, [pc, #56]	; 2f35c <makeContractionTablePath@@Base+0x1dc>
   2f320:	add	r3, pc, r3
   2f324:	str	r2, [r3, #4]
   2f328:	mov	r0, #1
   2f32c:	pop	{r4, r5, r6, r7}
   2f330:	bx	lr
   2f334:	ldr	r3, [pc, #36]	; 2f360 <makeContractionTablePath@@Base+0x1e0>
   2f338:	mov	r0, #1
   2f33c:	add	r3, pc, r3
   2f340:	str	r1, [r3, #4]
   2f344:	pop	{r4, r5, r6, r7}
   2f348:	bx	lr
   2f34c:	andeq	r3, r4, r8, lsl #16
   2f350:	andeq	r0, r0, r0, asr #10
   2f354:	muleq	r4, r4, r9
   2f358:	andeq	r6, r2, r0, asr r5
   2f35c:	andeq	r4, r4, r4, lsl #18
   2f360:	andeq	r4, r4, r8, ror #17
   2f364:	push	{r3, r4, r5, lr}
   2f368:	mov	r2, r1
   2f36c:	ldr	r4, [pc, #44]	; 2f3a0 <makeContractionTablePath@@Base+0x220>
   2f370:	mov	r1, r0
   2f374:	add	r4, pc, r4
   2f378:	ldmib	r4, {r0, ip}
   2f37c:	add	r5, r0, r2
   2f380:	cmp	r5, ip
   2f384:	bls	2f390 <makeContractionTablePath@@Base+0x210>
   2f388:	mov	r0, #0
   2f38c:	pop	{r3, r4, r5, pc}
   2f390:	bl	fb24 <memcpy@plt>
   2f394:	str	r5, [r4, #4]
   2f398:	mov	r0, #1
   2f39c:	pop	{r3, r4, r5, pc}
   2f3a0:			; <UNDEFINED> instruction: 0x000448b0
   2f3a4:	ldr	r2, [pc, #28]	; 2f3c8 <makeContractionTablePath@@Base+0x248>
   2f3a8:	mov	r3, r0
   2f3ac:	add	r2, pc, r2
   2f3b0:	ldr	r2, [r2]
   2f3b4:	ldr	r2, [r2, #68]	; 0x44
   2f3b8:	add	r0, r2, r0
   2f3bc:	add	r0, r0, #1
   2f3c0:	ldrb	r1, [r2, r3]
   2f3c4:	b	2f364 <makeContractionTablePath@@Base+0x1e4>
   2f3c8:	andeq	r4, r4, r8, ror r8
   2f3cc:	ldr	r3, [pc, #132]	; 2f458 <makeContractionTablePath@@Base+0x2d8>
   2f3d0:	mov	r1, r0
   2f3d4:	ldr	r2, [pc, #128]	; 2f45c <makeContractionTablePath@@Base+0x2dc>
   2f3d8:	add	r3, pc, r3
   2f3dc:	push	{r4, lr}
   2f3e0:	sub	sp, sp, #8
   2f3e4:	ldr	r4, [r3, r2]
   2f3e8:	mov	r0, sp
   2f3ec:	ldr	r3, [r4]
   2f3f0:	str	r3, [sp, #4]
   2f3f4:	bl	1ddfc <isInteger@@Base>
   2f3f8:	cmp	r0, #0
   2f3fc:	beq	2f434 <makeContractionTablePath@@Base+0x2b4>
   2f400:	ldr	r3, [sp]
   2f404:	cmp	r3, #0
   2f408:	ble	2f44c <makeContractionTablePath@@Base+0x2cc>
   2f40c:	ldr	r2, [pc, #76]	; 2f460 <makeContractionTablePath@@Base+0x2e0>
   2f410:	add	r2, pc, r2
   2f414:	ldr	r1, [r2, #12]
   2f418:	ldr	r0, [r2, #16]
   2f41c:	rsb	r0, r1, r0
   2f420:	cmp	r3, r0, asr #2
   2f424:	bgt	2f44c <makeContractionTablePath@@Base+0x2cc>
   2f428:	mov	r0, #1
   2f42c:	add	r3, r1, r3, lsl #2
   2f430:	str	r3, [r2, #20]
   2f434:	ldr	r2, [sp, #4]
   2f438:	ldr	r3, [r4]
   2f43c:	cmp	r2, r3
   2f440:	bne	2f454 <makeContractionTablePath@@Base+0x2d4>
   2f444:	add	sp, sp, #8
   2f448:	pop	{r4, pc}
   2f44c:	mov	r0, #0
   2f450:	b	2f434 <makeContractionTablePath@@Base+0x2b4>
   2f454:	bl	f950 <__stack_chk_fail@plt>
   2f458:	andeq	r3, r4, r0, lsr #13
   2f45c:			; <UNDEFINED> instruction: 0x000003b4
   2f460:	andeq	r4, r4, r4, lsl r8
   2f464:	ldr	r2, [pc, #344]	; 2f5c4 <makeContractionTablePath@@Base+0x444>
   2f468:	ldr	r1, [pc, #344]	; 2f5c8 <makeContractionTablePath@@Base+0x448>
   2f46c:	add	r2, pc, r2
   2f470:	ldr	r3, [pc, #340]	; 2f5cc <makeContractionTablePath@@Base+0x44c>
   2f474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f478:	sub	sp, sp, #20
   2f47c:	ldr	r1, [r2, r1]
   2f480:	mov	r5, r0
   2f484:	add	r3, pc, r3
   2f488:	str	r1, [sp, #4]
   2f48c:	ldr	r0, [sp, #4]
   2f490:	ldr	r1, [r3, #24]
   2f494:	ldr	r2, [r0]
   2f498:	cmp	r1, #0
   2f49c:	str	r2, [sp, #12]
   2f4a0:	beq	2f5b8 <makeContractionTablePath@@Base+0x438>
   2f4a4:	ldr	r7, [r3, #16]
   2f4a8:	ldr	r2, [r3, #12]
   2f4ac:	ldrb	r3, [r5]
   2f4b0:	rsb	r7, r2, r7
   2f4b4:	cmp	r3, #0
   2f4b8:	asr	r7, r7, #2
   2f4bc:	beq	2f5b8 <makeContractionTablePath@@Base+0x438>
   2f4c0:	cmp	r7, #0
   2f4c4:	beq	2f5b8 <makeContractionTablePath@@Base+0x438>
   2f4c8:	ldr	sl, [pc, #256]	; 2f5d0 <makeContractionTablePath@@Base+0x450>
   2f4cc:	mov	r4, #0
   2f4d0:	add	r8, sp, #8
   2f4d4:	mov	r9, r4
   2f4d8:	add	sl, pc, sl
   2f4dc:	mvn	r6, #0
   2f4e0:	b	2f560 <makeContractionTablePath@@Base+0x3e0>
   2f4e4:	mov	r1, r5
   2f4e8:	mov	r0, r8
   2f4ec:	ldrb	r5, [fp]
   2f4f0:	strb	r9, [fp]
   2f4f4:	bl	1ddfc <isInteger@@Base>
   2f4f8:	strb	r5, [fp]
   2f4fc:	cmp	r0, #0
   2f500:	beq	2f598 <makeContractionTablePath@@Base+0x418>
   2f504:	add	r5, fp, #1
   2f508:	cmp	r4, #0
   2f50c:	ldr	r3, [sp, #8]
   2f510:	movne	r1, r6
   2f514:	moveq	r1, #0
   2f518:	cmp	r1, r3
   2f51c:	bgt	2f598 <makeContractionTablePath@@Base+0x418>
   2f520:	ldr	r0, [sl, #8]
   2f524:	ldr	r1, [sl, #28]
   2f528:	rsb	r1, r1, r0
   2f52c:	cmp	r3, r1
   2f530:	bge	2f598 <makeContractionTablePath@@Base+0x418>
   2f534:	ldr	r1, [sl, #24]
   2f538:	cmp	r6, r3
   2f53c:	mvneq	r3, #0
   2f540:	str	r3, [r1, r4, lsl #2]
   2f544:	ldrb	r3, [r5]
   2f548:	ldr	r6, [sp, #8]
   2f54c:	cmp	r3, #0
   2f550:	beq	2f5b8 <makeContractionTablePath@@Base+0x438>
   2f554:	add	r4, r4, #1
   2f558:	cmp	r4, r7
   2f55c:	beq	2f5b8 <makeContractionTablePath@@Base+0x438>
   2f560:	mov	r0, r5
   2f564:	mov	r1, #44	; 0x2c
   2f568:	bl	fdd0 <strchr@plt>
   2f56c:	subs	fp, r0, #0
   2f570:	bne	2f4e4 <makeContractionTablePath@@Base+0x364>
   2f574:	mov	r0, r8
   2f578:	mov	r1, r5
   2f57c:	bl	1ddfc <isInteger@@Base>
   2f580:	cmp	r0, #0
   2f584:	beq	2f598 <makeContractionTablePath@@Base+0x418>
   2f588:	mov	r0, r5
   2f58c:	bl	fb54 <strlen@plt>
   2f590:	add	r5, r5, r0
   2f594:	b	2f508 <makeContractionTablePath@@Base+0x388>
   2f598:	mov	r0, #0
   2f59c:	ldr	r1, [sp, #4]
   2f5a0:	ldr	r2, [sp, #12]
   2f5a4:	ldr	r3, [r1]
   2f5a8:	cmp	r2, r3
   2f5ac:	bne	2f5c0 <makeContractionTablePath@@Base+0x440>
   2f5b0:	add	sp, sp, #20
   2f5b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f5b8:	mov	r0, #1
   2f5bc:	b	2f59c <makeContractionTablePath@@Base+0x41c>
   2f5c0:	bl	f950 <__stack_chk_fail@plt>
   2f5c4:	andeq	r3, r4, ip, lsl #12
   2f5c8:			; <UNDEFINED> instruction: 0x000003b4
   2f5cc:	andeq	r4, r4, r0, lsr #15
   2f5d0:	andeq	r4, r4, ip, asr #14
   2f5d4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2f5d8:	mov	r5, r0
   2f5dc:	ldr	r3, [pc, #480]	; 2f7c4 <makeContractionTablePath@@Base+0x644>
   2f5e0:	mov	r4, #0
   2f5e4:	add	r3, pc, r3
   2f5e8:	ldr	r6, [r3]
   2f5ec:	ldr	r7, [r6, #8]
   2f5f0:	ldr	ip, [r6]
   2f5f4:	subs	r2, r7, #1
   2f5f8:	bmi	2f62c <makeContractionTablePath@@Base+0x4ac>
   2f5fc:	add	r3, r4, r2
   2f600:	add	r3, r3, r3, lsr #31
   2f604:	asr	r3, r3, #1
   2f608:	ldr	r1, [ip, r3, lsl #4]
   2f60c:	add	r0, ip, r3, lsl #4
   2f610:	cmp	r1, r5
   2f614:	addcc	r4, r3, #1
   2f618:	bcc	2f624 <makeContractionTablePath@@Base+0x4a4>
   2f61c:	sub	r2, r3, #1
   2f620:	popls	{r3, r4, r5, r6, r7, r8, r9, pc}
   2f624:	cmp	r4, r2
   2f628:	ble	2f5fc <makeContractionTablePath@@Base+0x47c>
   2f62c:	ldr	r3, [r6, #4]
   2f630:	cmp	r7, r3
   2f634:	beq	2f724 <makeContractionTablePath@@Base+0x5a4>
   2f638:	add	r0, r4, #1
   2f63c:	rsb	r2, r4, r7
   2f640:	lsl	r0, r0, #4
   2f644:	lsl	r2, r2, #4
   2f648:	sub	r7, r0, #16
   2f64c:	add	r0, ip, r0
   2f650:	add	r1, ip, r7
   2f654:	bl	f7dc <memmove@plt>
   2f658:	ldr	r8, [r6]
   2f65c:	ldr	r3, [r6, #8]
   2f660:	mov	r1, #0
   2f664:	add	r4, r8, r7
   2f668:	mov	r2, #16
   2f66c:	add	r3, r3, #1
   2f670:	str	r3, [r6, #8]
   2f674:	mov	r0, r4
   2f678:	bl	f6b0 <memset@plt>
   2f67c:	str	r5, [r4, #8]
   2f680:	str	r5, [r4, #4]
   2f684:	mov	r0, r5
   2f688:	str	r5, [r8, r7]
   2f68c:	bl	f44c <iswspace@plt>
   2f690:	cmp	r0, #0
   2f694:	beq	2f6b8 <makeContractionTablePath@@Base+0x538>
   2f698:	ldr	r3, [r4, #12]
   2f69c:	orr	r3, r3, #1
   2f6a0:	str	r3, [r4, #12]
   2f6a4:	ldr	r3, [r6, #64]	; 0x40
   2f6a8:	cmp	r3, #0
   2f6ac:	beq	2f790 <makeContractionTablePath@@Base+0x610>
   2f6b0:	mov	r0, r4
   2f6b4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2f6b8:	mov	r0, r5
   2f6bc:	bl	f518 <iswalpha@plt>
   2f6c0:	cmp	r0, #0
   2f6c4:	beq	2f758 <makeContractionTablePath@@Base+0x5d8>
   2f6c8:	ldr	r7, [r4, #12]
   2f6cc:	mov	r0, r5
   2f6d0:	orr	r3, r7, #2
   2f6d4:	str	r3, [r4, #12]
   2f6d8:	bl	f4ac <iswupper@plt>
   2f6dc:	cmp	r0, #0
   2f6e0:	beq	2f6f8 <makeContractionTablePath@@Base+0x578>
   2f6e4:	orr	r7, r7, #18
   2f6e8:	mov	r0, r5
   2f6ec:	str	r7, [r4, #12]
   2f6f0:	bl	f434 <towlower@plt>
   2f6f4:	str	r0, [r4, #8]
   2f6f8:	mov	r0, r5
   2f6fc:	bl	f80c <iswlower@plt>
   2f700:	cmp	r0, #0
   2f704:	beq	2f6a4 <makeContractionTablePath@@Base+0x524>
   2f708:	ldr	r3, [r4, #12]
   2f70c:	mov	r0, r5
   2f710:	orr	r3, r3, #32
   2f714:	str	r3, [r4, #12]
   2f718:	bl	fcec <towupper@plt>
   2f71c:	str	r0, [r4, #4]
   2f720:	b	2f6a4 <makeContractionTablePath@@Base+0x524>
   2f724:	cmp	r7, #0
   2f728:	mov	r0, ip
   2f72c:	lslne	r1, r7, #5
   2f730:	lslne	r9, r7, #1
   2f734:	moveq	r1, #2048	; 0x800
   2f738:	moveq	r9, #128	; 0x80
   2f73c:	bl	f878 <realloc@plt>
   2f740:	subs	r8, r0, #0
   2f744:	beq	2f7b8 <makeContractionTablePath@@Base+0x638>
   2f748:	ldr	r7, [r6, #8]
   2f74c:	mov	ip, r8
   2f750:	stm	r6, {r8, r9}
   2f754:	b	2f638 <makeContractionTablePath@@Base+0x4b8>
   2f758:	mov	r0, r5
   2f75c:	bl	fa88 <iswdigit@plt>
   2f760:	cmp	r0, #0
   2f764:	ldrne	r3, [r4, #12]
   2f768:	orrne	r3, r3, #4
   2f76c:	strne	r3, [r4, #12]
   2f770:	bne	2f6a4 <makeContractionTablePath@@Base+0x524>
   2f774:	mov	r0, r5
   2f778:	bl	f8b4 <iswpunct@plt>
   2f77c:	cmp	r0, #0
   2f780:	ldrne	r3, [r4, #12]
   2f784:	orrne	r3, r3, #8
   2f788:	strne	r3, [r4, #12]
   2f78c:	b	2f6a4 <makeContractionTablePath@@Base+0x524>
   2f790:	mov	r0, r5
   2f794:	bl	2f190 <makeContractionTablePath@@Base+0x10>
   2f798:	cmp	r0, #0
   2f79c:	beq	2f6b0 <makeContractionTablePath@@Base+0x530>
   2f7a0:	ldr	r3, [r0, #12]
   2f7a4:	mov	r0, r4
   2f7a8:	ldr	r2, [r4, #12]
   2f7ac:	orr	r3, r2, r3
   2f7b0:	str	r3, [r4, #12]
   2f7b4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2f7b8:	bl	1c740 <logMallocError@@Base>
   2f7bc:	mov	r0, r8
   2f7c0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2f7c4:	andeq	r4, r4, r0, asr #12
   2f7c8:	ldr	r3, [pc, #108]	; 2f83c <makeContractionTablePath@@Base+0x6bc>
   2f7cc:	push	{r4, r5, r6, r7, r8, lr}
   2f7d0:	add	r3, pc, r3
   2f7d4:	ldr	r4, [r3, #36]	; 0x24
   2f7d8:	ldr	r6, [r3, #32]
   2f7dc:	cmp	r4, #0
   2f7e0:	subne	r7, r0, #4
   2f7e4:	addne	r6, r6, #16
   2f7e8:	bne	2f7f8 <makeContractionTablePath@@Base+0x678>
   2f7ec:	b	2f834 <makeContractionTablePath@@Base+0x6b4>
   2f7f0:	subs	r4, r4, #1
   2f7f4:	beq	2f834 <makeContractionTablePath@@Base+0x6b4>
   2f7f8:	ldr	r5, [r7, #4]!
   2f7fc:	mov	r0, r5
   2f800:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2f804:	cmp	r0, #0
   2f808:	moveq	r8, r5
   2f80c:	ldr	r5, [r6, #4]!
   2f810:	ldrne	r8, [r0, #8]
   2f814:	mov	r0, r5
   2f818:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2f81c:	cmp	r0, #0
   2f820:	ldrne	r5, [r0, #8]
   2f824:	cmp	r8, r5
   2f828:	beq	2f7f0 <makeContractionTablePath@@Base+0x670>
   2f82c:	mov	r0, #0
   2f830:	pop	{r4, r5, r6, r7, r8, pc}
   2f834:	mov	r0, #1
   2f838:	pop	{r4, r5, r6, r7, r8, pc}
   2f83c:	andeq	r4, r4, r4, asr r4
   2f840:	push	{r3, r4, r5, lr}
   2f844:	ldr	r5, [pc, #92]	; 2f8a8 <makeContractionTablePath@@Base+0x728>
   2f848:	add	r5, pc, r5
   2f84c:	ldr	r4, [r5, #20]
   2f850:	ldr	r3, [r5, #12]
   2f854:	mov	r2, r4
   2f858:	cmp	r4, r3
   2f85c:	sub	r4, r4, #4
   2f860:	bls	2f89c <makeContractionTablePath@@Base+0x71c>
   2f864:	ldr	r0, [r2, #-4]
   2f868:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2f86c:	cmp	r0, #0
   2f870:	beq	2f880 <makeContractionTablePath@@Base+0x700>
   2f874:	ldr	r3, [r0, #12]
   2f878:	tst	r3, #8
   2f87c:	bne	2f850 <makeContractionTablePath@@Base+0x6d0>
   2f880:	ldr	r0, [r4]
   2f884:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2f888:	cmp	r0, #0
   2f88c:	beq	2f8a4 <makeContractionTablePath@@Base+0x724>
   2f890:	ldr	r0, [r0, #12]
   2f894:	ands	r0, r0, #1
   2f898:	popeq	{r3, r4, r5, pc}
   2f89c:	mov	r0, #1
   2f8a0:	pop	{r3, r4, r5, pc}
   2f8a4:	pop	{r3, r4, r5, pc}
   2f8a8:	ldrdeq	r4, [r4], -ip
   2f8ac:	ldr	r3, [pc, #124]	; 2f930 <makeContractionTablePath@@Base+0x7b0>
   2f8b0:	push	{r4, r5, r6, lr}
   2f8b4:	add	r3, pc, r3
   2f8b8:	ldr	r4, [r3, #36]	; 0x24
   2f8bc:	ldr	r2, [r3, #20]
   2f8c0:	ldr	r3, [r3, #16]
   2f8c4:	add	r4, r2, r4, lsl #2
   2f8c8:	cmp	r4, r3
   2f8cc:	bcs	2f908 <makeContractionTablePath@@Base+0x788>
   2f8d0:	ldr	r6, [pc, #92]	; 2f934 <makeContractionTablePath@@Base+0x7b4>
   2f8d4:	add	r6, pc, r6
   2f8d8:	mov	r5, r4
   2f8dc:	add	r4, r4, #4
   2f8e0:	ldr	r0, [r5]
   2f8e4:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2f8e8:	cmp	r0, #0
   2f8ec:	beq	2f910 <makeContractionTablePath@@Base+0x790>
   2f8f0:	ldr	r3, [r0, #12]
   2f8f4:	tst	r3, #8
   2f8f8:	beq	2f910 <makeContractionTablePath@@Base+0x790>
   2f8fc:	ldr	r3, [r6, #16]
   2f900:	cmp	r3, r4
   2f904:	bhi	2f8d8 <makeContractionTablePath@@Base+0x758>
   2f908:	mov	r0, #1
   2f90c:	pop	{r4, r5, r6, pc}
   2f910:	ldr	r0, [r5]
   2f914:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2f918:	cmp	r0, #0
   2f91c:	beq	2f92c <makeContractionTablePath@@Base+0x7ac>
   2f920:	ldr	r0, [r0, #12]
   2f924:	and	r0, r0, #1
   2f928:	pop	{r4, r5, r6, pc}
   2f92c:	pop	{r4, r5, r6, pc}
   2f930:	andeq	r4, r4, r0, ror r3
   2f934:	andeq	r4, r4, r0, asr r3
   2f938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f93c:	subs	r5, r0, #0
   2f940:	sub	sp, sp, #36	; 0x24
   2f944:	ldr	r3, [pc, #2340]	; 30270 <makeContractionTablePath@@Base+0x10f0>
   2f948:	add	r3, pc, r3
   2f94c:	str	r3, [sp, #12]
   2f950:	ble	2fd9c <makeContractionTablePath@@Base+0xc1c>
   2f954:	cmp	r5, #1
   2f958:	beq	2fda8 <makeContractionTablePath@@Base+0xc28>
   2f95c:	ldr	r3, [pc, #2320]	; 30274 <makeContractionTablePath@@Base+0x10f4>
   2f960:	add	r3, pc, r3
   2f964:	ldr	r3, [r3, #20]
   2f968:	ldr	r4, [r3]
   2f96c:	mov	r0, r4
   2f970:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2f974:	ldr	r3, [pc, #2300]	; 30278 <makeContractionTablePath@@Base+0x10f8>
   2f978:	add	r3, pc, r3
   2f97c:	ldr	r3, [r3, #20]
   2f980:	cmp	r0, #0
   2f984:	moveq	r6, r4
   2f988:	ldr	r4, [r3, #4]
   2f98c:	ldrne	r6, [r0, #8]
   2f990:	mov	r0, r4
   2f994:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2f998:	movw	r3, #44917	; 0xaf75
   2f99c:	movt	r3, #61737	; 0xf129
   2f9a0:	ldr	r1, [pc, #2260]	; 3027c <makeContractionTablePath@@Base+0x10fc>
   2f9a4:	add	r1, pc, r1
   2f9a8:	ldr	r1, [r1]
   2f9ac:	ldr	r1, [r1, #68]	; 0x44
   2f9b0:	cmp	r0, #0
   2f9b4:	ldrne	r4, [r0, #8]
   2f9b8:	add	r2, r4, r6, lsl #8
   2f9bc:	mov	r4, #0
   2f9c0:	umull	r0, r3, r3, r2
   2f9c4:	lsr	r3, r3, #10
   2f9c8:	add	r0, r3, r3, lsl #4
   2f9cc:	rsb	r3, r3, r0, lsl #6
   2f9d0:	rsb	r2, r3, r2
   2f9d4:	add	r2, r1, r2, lsl #2
   2f9d8:	ldr	r0, [r2, #28]
   2f9dc:	cmp	r0, #0
   2f9e0:	beq	2fd9c <makeContractionTablePath@@Base+0xc1c>
   2f9e4:	ldr	r3, [pc, #2196]	; 30280 <makeContractionTablePath@@Base+0x1100>
   2f9e8:	ldr	fp, [pc, #2196]	; 30284 <makeContractionTablePath@@Base+0x1104>
   2f9ec:	add	r3, pc, r3
   2f9f0:	str	r3, [sp, #4]
   2f9f4:	ldr	r3, [pc, #2188]	; 30288 <makeContractionTablePath@@Base+0x1108>
   2f9f8:	add	fp, pc, fp
   2f9fc:	ldr	sl, [pc, #2184]	; 3028c <makeContractionTablePath@@Base+0x110c>
   2fa00:	add	r3, pc, r3
   2fa04:	str	r3, [sp, #8]
   2fa08:	ldr	r3, [pc, #2176]	; 30290 <makeContractionTablePath@@Base+0x1110>
   2fa0c:	add	sl, pc, sl
   2fa10:	add	r3, pc, r3
   2fa14:	str	r3, [sp, #24]
   2fa18:	ldr	r3, [pc, #2164]	; 30294 <makeContractionTablePath@@Base+0x1114>
   2fa1c:	add	r3, pc, r3
   2fa20:	str	r3, [sp, #16]
   2fa24:	b	2fa3c <makeContractionTablePath@@Base+0x8bc>
   2fa28:	cmp	r5, r6
   2fa2c:	bge	2fb30 <makeContractionTablePath@@Base+0x9b0>
   2fa30:	ldr	r0, [r0]
   2fa34:	cmp	r0, #0
   2fa38:	beq	2fb50 <makeContractionTablePath@@Base+0x9d0>
   2fa3c:	ldr	r2, [fp]
   2fa40:	cmp	r5, #1
   2fa44:	ldr	r2, [r2, #68]	; 0x44
   2fa48:	add	r0, r2, r0
   2fa4c:	str	r0, [fp, #32]
   2fa50:	ldr	r2, [r0, #4]
   2fa54:	ldrb	r6, [r0, #16]
   2fa58:	str	r2, [fp, #40]	; 0x28
   2fa5c:	str	r6, [fp, #36]	; 0x24
   2fa60:	bne	2fa28 <makeContractionTablePath@@Base+0x8a8>
   2fa64:	ldr	r2, [sl, #20]
   2fa68:	ldr	r1, [sl, #16]
   2fa6c:	add	r0, r2, r6, lsl #2
   2fa70:	ldr	r3, [sp, #4]
   2fa74:	cmp	r0, r1
   2fa78:	ldrcc	r2, [r2, r6, lsl #2]
   2fa7c:	movcs	r2, #32
   2fa80:	cmp	r4, #0
   2fa84:	str	r2, [r3, #44]	; 0x2c
   2fa88:	bne	2fb58 <makeContractionTablePath@@Base+0x9d8>
   2fa8c:	ldr	r2, [pc, #2052]	; 30298 <makeContractionTablePath@@Base+0x1118>
   2fa90:	ldr	r3, [sp, #12]
   2fa94:	ldr	r9, [r3, r2]
   2fa98:	ldrb	r2, [r9, #58]	; 0x3a
   2fa9c:	cmp	r2, #0
   2faa0:	bne	2fbdc <makeContractionTablePath@@Base+0xa5c>
   2faa4:	ldr	r3, [sp, #8]
   2faa8:	ldr	r2, [r3, #32]
   2faac:	ldr	r4, [r2, #8]
   2fab0:	cmp	r4, #0
   2fab4:	bne	2fb7c <makeContractionTablePath@@Base+0x9fc>
   2fab8:	ldr	r4, [r2, #12]
   2fabc:	cmp	r4, #0
   2fac0:	bne	2fbac <makeContractionTablePath@@Base+0xa2c>
   2fac4:	ldr	r3, [sp, #16]
   2fac8:	ldr	r2, [r3, #40]	; 0x28
   2facc:	sub	r2, r2, #5
   2fad0:	cmp	r2, #20
   2fad4:	addls	pc, pc, r2, lsl #2
   2fad8:	b	301f0 <makeContractionTablePath@@Base+0x1070>
   2fadc:	b	2fd68 <makeContractionTablePath@@Base+0xbe8>
   2fae0:	b	2fd68 <makeContractionTablePath@@Base+0xbe8>
   2fae4:	b	2fd68 <makeContractionTablePath@@Base+0xbe8>
   2fae8:	b	2fe44 <makeContractionTablePath@@Base+0xcc4>
   2faec:	b	2fe44 <makeContractionTablePath@@Base+0xcc4>
   2faf0:	b	2fe6c <makeContractionTablePath@@Base+0xcec>
   2faf4:	b	2fe94 <makeContractionTablePath@@Base+0xd14>
   2faf8:	b	2ff40 <makeContractionTablePath@@Base+0xdc0>
   2fafc:	b	2fe6c <makeContractionTablePath@@Base+0xcec>
   2fb00:	b	30018 <makeContractionTablePath@@Base+0xe98>
   2fb04:	b	2ffac <makeContractionTablePath@@Base+0xe2c>
   2fb08:	b	2ffd4 <makeContractionTablePath@@Base+0xe54>
   2fb0c:	b	3005c <makeContractionTablePath@@Base+0xedc>
   2fb10:	b	30084 <makeContractionTablePath@@Base+0xf04>
   2fb14:	b	300ac <makeContractionTablePath@@Base+0xf2c>
   2fb18:	b	300d4 <makeContractionTablePath@@Base+0xf54>
   2fb1c:	b	300fc <makeContractionTablePath@@Base+0xf7c>
   2fb20:	b	30140 <makeContractionTablePath@@Base+0xfc0>
   2fb24:	b	30184 <makeContractionTablePath@@Base+0x1004>
   2fb28:	b	301c8 <makeContractionTablePath@@Base+0x1048>
   2fb2c:	b	2fdf8 <makeContractionTablePath@@Base+0xc78>
   2fb30:	ldr	r0, [fp, #20]
   2fb34:	bl	2f7c8 <makeContractionTablePath@@Base+0x648>
   2fb38:	cmp	r0, #0
   2fb3c:	bne	2fb74 <makeContractionTablePath@@Base+0x9f4>
   2fb40:	ldr	r0, [fp, #32]
   2fb44:	ldr	r0, [r0]
   2fb48:	cmp	r0, #0
   2fb4c:	bne	2fa3c <makeContractionTablePath@@Base+0x8bc>
   2fb50:	add	sp, sp, #36	; 0x24
   2fb54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fb58:	mov	r1, r6
   2fb5c:	cmp	r4, r1
   2fb60:	bge	2fd44 <makeContractionTablePath@@Base+0xbc4>
   2fb64:	ldr	r2, [pc, #1840]	; 3029c <makeContractionTablePath@@Base+0x111c>
   2fb68:	add	r2, pc, r2
   2fb6c:	ldr	r0, [r2, #32]
   2fb70:	b	2fa30 <makeContractionTablePath@@Base+0x8b0>
   2fb74:	ldr	r6, [fp, #36]	; 0x24
   2fb78:	b	2fa64 <makeContractionTablePath@@Base+0x8e4>
   2fb7c:	ldr	r0, [r3, #48]	; 0x30
   2fb80:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2fb84:	cmp	r0, #0
   2fb88:	beq	2fd4c <makeContractionTablePath@@Base+0xbcc>
   2fb8c:	ldr	r2, [r0, #12]
   2fb90:	tst	r4, r2
   2fb94:	beq	2fd4c <makeContractionTablePath@@Base+0xbcc>
   2fb98:	ldr	r3, [sp, #8]
   2fb9c:	ldr	r2, [r3, #32]
   2fba0:	ldr	r4, [r2, #12]
   2fba4:	cmp	r4, #0
   2fba8:	beq	2fac4 <makeContractionTablePath@@Base+0x944>
   2fbac:	ldr	r3, [sp, #24]
   2fbb0:	ldr	r0, [r3, #44]	; 0x2c
   2fbb4:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2fbb8:	cmp	r0, #0
   2fbbc:	beq	2fbcc <makeContractionTablePath@@Base+0xa4c>
   2fbc0:	ldr	r2, [r0, #12]
   2fbc4:	tst	r4, r2
   2fbc8:	bne	2fac4 <makeContractionTablePath@@Base+0x944>
   2fbcc:	ldr	r3, [sp, #24]
   2fbd0:	mov	r4, r6
   2fbd4:	ldr	r0, [r3, #32]
   2fbd8:	b	2fa30 <makeContractionTablePath@@Base+0x8b0>
   2fbdc:	ldr	r3, [sp, #4]
   2fbe0:	ldr	r0, [r3, #48]	; 0x30
   2fbe4:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2fbe8:	cmp	r0, #0
   2fbec:	beq	2fc00 <makeContractionTablePath@@Base+0xa80>
   2fbf0:	ldr	r2, [r0, #12]
   2fbf4:	tst	r2, #16
   2fbf8:	movne	r7, #2
   2fbfc:	bne	2fc20 <makeContractionTablePath@@Base+0xaa0>
   2fc00:	ldr	r2, [pc, #1688]	; 302a0 <makeContractionTablePath@@Base+0x1120>
   2fc04:	add	r2, pc, r2
   2fc08:	ldr	r0, [r2, #48]	; 0x30
   2fc0c:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2fc10:	cmp	r0, #0
   2fc14:	moveq	r7, r0
   2fc18:	ldrne	r2, [r0, #12]
   2fc1c:	ubfxne	r7, r2, #5, #1
   2fc20:	ldr	r8, [pc, #1660]	; 302a4 <makeContractionTablePath@@Base+0x1124>
   2fc24:	add	r8, pc, r8
   2fc28:	ldr	r1, [r8, #36]	; 0x24
   2fc2c:	cmp	r1, #0
   2fc30:	ble	2fd38 <makeContractionTablePath@@Base+0xbb8>
   2fc34:	ldr	r3, [pc, #1644]	; 302a8 <makeContractionTablePath@@Base+0x1128>
   2fc38:	str	r6, [sp, #28]
   2fc3c:	mov	r6, r7
   2fc40:	add	r3, pc, r3
   2fc44:	str	r5, [sp, #20]
   2fc48:	mov	r7, r3
   2fc4c:	b	2fcac <makeContractionTablePath@@Base+0xb2c>
   2fc50:	subs	r1, r0, #2
   2fc54:	rsbs	r2, r1, #0
   2fc58:	adcs	r2, r2, r1
   2fc5c:	cmp	r6, #1
   2fc60:	cmpeq	r0, #2
   2fc64:	beq	2fd74 <makeContractionTablePath@@Base+0xbf4>
   2fc68:	cmp	r0, #1
   2fc6c:	cmpeq	r6, #3
   2fc70:	beq	2fd88 <makeContractionTablePath@@Base+0xc08>
   2fc74:	ldrb	r1, [r9, #58]	; 0x3a
   2fc78:	cmp	r1, #1
   2fc7c:	beq	2fd08 <makeContractionTablePath@@Base+0xb88>
   2fc80:	cmp	r2, #0
   2fc84:	bne	2fde4 <makeContractionTablePath@@Base+0xc64>
   2fc88:	cmp	r0, #0
   2fc8c:	movne	r6, r0
   2fc90:	bne	2fc9c <makeContractionTablePath@@Base+0xb1c>
   2fc94:	cmp	r6, #0
   2fc98:	moveq	r6, #1
   2fc9c:	ldr	r1, [r7, #36]	; 0x24
   2fca0:	add	r4, r4, #1
   2fca4:	cmp	r1, r4
   2fca8:	ble	2fd30 <makeContractionTablePath@@Base+0xbb0>
   2fcac:	ldr	r2, [r8, #20]
   2fcb0:	ldr	r5, [r2, r4, lsl #2]
   2fcb4:	mov	r0, r5
   2fcb8:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2fcbc:	cmp	r0, #0
   2fcc0:	beq	2fcd4 <makeContractionTablePath@@Base+0xb54>
   2fcc4:	ldr	r1, [r0, #12]
   2fcc8:	tst	r1, #16
   2fccc:	movne	r0, #2
   2fcd0:	bne	2fce8 <makeContractionTablePath@@Base+0xb68>
   2fcd4:	mov	r0, r5
   2fcd8:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2fcdc:	cmp	r0, #0
   2fce0:	ldrne	r0, [r0, #12]
   2fce4:	ubfxne	r0, r0, #5, #1
   2fce8:	cmp	r4, #0
   2fcec:	bne	2fc50 <makeContractionTablePath@@Base+0xad0>
   2fcf0:	ldrb	r2, [r9, #58]	; 0x3a
   2fcf4:	cmp	r2, #1
   2fcf8:	bne	2fc88 <makeContractionTablePath@@Base+0xb08>
   2fcfc:	subs	r3, r0, #2
   2fd00:	rsbs	r2, r3, #0
   2fd04:	adcs	r2, r2, r3
   2fd08:	cmp	r6, #1
   2fd0c:	movls	r2, #0
   2fd10:	andhi	r2, r2, #1
   2fd14:	cmp	r2, #0
   2fd18:	movne	r6, #3
   2fd1c:	beq	2fc88 <makeContractionTablePath@@Base+0xb08>
   2fd20:	ldr	r1, [r7, #36]	; 0x24
   2fd24:	add	r4, r4, #1
   2fd28:	cmp	r1, r4
   2fd2c:	bgt	2fcac <makeContractionTablePath@@Base+0xb2c>
   2fd30:	ldr	r6, [sp, #28]
   2fd34:	ldr	r5, [sp, #20]
   2fd38:	mov	r4, r6
   2fd3c:	cmp	r4, r1
   2fd40:	blt	2fb64 <makeContractionTablePath@@Base+0x9e4>
   2fd44:	mov	r6, r4
   2fd48:	b	2faa4 <makeContractionTablePath@@Base+0x924>
   2fd4c:	ldr	r3, [sp, #8]
   2fd50:	mov	r4, r6
   2fd54:	ldr	r0, [r3, #32]
   2fd58:	b	2fa30 <makeContractionTablePath@@Base+0x8b0>
   2fd5c:	bl	2f8ac <makeContractionTablePath@@Base+0x72c>
   2fd60:	cmp	r0, #0
   2fd64:	beq	2fe50 <makeContractionTablePath@@Base+0xcd0>
   2fd68:	mov	r0, #1
   2fd6c:	add	sp, sp, #36	; 0x24
   2fd70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fd74:	ldr	r2, [pc, #1328]	; 302ac <makeContractionTablePath@@Base+0x112c>
   2fd78:	ldr	r5, [sp, #20]
   2fd7c:	add	r2, pc, r2
   2fd80:	ldr	r1, [r2, #36]	; 0x24
   2fd84:	b	2fb5c <makeContractionTablePath@@Base+0x9dc>
   2fd88:	ldr	r2, [pc, #1312]	; 302b0 <makeContractionTablePath@@Base+0x1130>
   2fd8c:	ldr	r5, [sp, #20]
   2fd90:	add	r2, pc, r2
   2fd94:	ldr	r1, [r2, #36]	; 0x24
   2fd98:	b	2fb5c <makeContractionTablePath@@Base+0x9dc>
   2fd9c:	mov	r0, #0
   2fda0:	add	sp, sp, #36	; 0x24
   2fda4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fda8:	ldr	r3, [pc, #1284]	; 302b4 <makeContractionTablePath@@Base+0x1134>
   2fdac:	add	r3, pc, r3
   2fdb0:	ldr	r3, [r3, #20]
   2fdb4:	ldr	r4, [r3]
   2fdb8:	mov	r0, r4
   2fdbc:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2fdc0:	cmp	r0, #0
   2fdc4:	ldrne	r0, [r0, #8]
   2fdc8:	moveq	r0, r4
   2fdcc:	bl	2f190 <makeContractionTablePath@@Base+0x10>
   2fdd0:	cmp	r0, #0
   2fdd4:	beq	2fd9c <makeContractionTablePath@@Base+0xc1c>
   2fdd8:	ldr	r0, [r0, #4]
   2fddc:	mov	r4, #1
   2fde0:	b	2f9dc <makeContractionTablePath@@Base+0x85c>
   2fde4:	ldr	r2, [pc, #1228]	; 302b8 <makeContractionTablePath@@Base+0x1138>
   2fde8:	ldr	r5, [sp, #20]
   2fdec:	add	r2, pc, r2
   2fdf0:	ldr	r1, [r2, #36]	; 0x24
   2fdf4:	b	2fb5c <makeContractionTablePath@@Base+0x9dc>
   2fdf8:	ldr	r4, [pc, #1212]	; 302bc <makeContractionTablePath@@Base+0x113c>
   2fdfc:	add	r4, pc, r4
   2fe00:	ldr	r0, [r4, #48]	; 0x30
   2fe04:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2fe08:	cmp	r0, #0
   2fe0c:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2fe10:	ldr	r2, [r0, #12]
   2fe14:	tst	r2, #4
   2fe18:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2fe1c:	ldr	r0, [r4, #44]	; 0x2c
   2fe20:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2fe24:	cmp	r0, #0
   2fe28:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2fe2c:	ldr	r2, [r0, #12]
   2fe30:	tst	r2, #9
   2fe34:	bne	2fd68 <makeContractionTablePath@@Base+0xbe8>
   2fe38:	ldr	r0, [r4, #32]
   2fe3c:	mov	r4, r6
   2fe40:	b	2fa30 <makeContractionTablePath@@Base+0x8b0>
   2fe44:	bl	2f840 <makeContractionTablePath@@Base+0x6c0>
   2fe48:	cmp	r0, #0
   2fe4c:	bne	2fd5c <makeContractionTablePath@@Base+0xbdc>
   2fe50:	ldr	r3, [pc, #1128]	; 302c0 <makeContractionTablePath@@Base+0x1140>
   2fe54:	mov	r2, #6
   2fe58:	mov	r0, #1
   2fe5c:	add	r3, pc, r3
   2fe60:	str	r2, [r3, #40]	; 0x28
   2fe64:	add	sp, sp, #36	; 0x24
   2fe68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fe6c:	ldr	r4, [pc, #1104]	; 302c4 <makeContractionTablePath@@Base+0x1144>
   2fe70:	add	r4, pc, r4
   2fe74:	ldr	r0, [r4, #48]	; 0x30
   2fe78:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2fe7c:	cmp	r0, #0
   2fe80:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2fe84:	ldr	r2, [r0, #12]
   2fe88:	tst	r2, #9
   2fe8c:	bne	2fe1c <makeContractionTablePath@@Base+0xc9c>
   2fe90:	b	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2fe94:	ldr	r7, [pc, #1068]	; 302c8 <makeContractionTablePath@@Base+0x1148>
   2fe98:	add	r7, pc, r7
   2fe9c:	ldr	r0, [r7, #48]	; 0x30
   2fea0:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2fea4:	cmp	r0, #0
   2fea8:	beq	2ff34 <makeContractionTablePath@@Base+0xdb4>
   2feac:	ldr	r2, [r0, #12]
   2feb0:	tst	r2, #9
   2feb4:	beq	2ff34 <makeContractionTablePath@@Base+0xdb4>
   2feb8:	ldr	r2, [r7, #48]	; 0x30
   2febc:	cmp	r2, #45	; 0x2d
   2fec0:	beq	2ff34 <makeContractionTablePath@@Base+0xdb4>
   2fec4:	ldr	r0, [r7, #32]
   2fec8:	ldr	ip, [r7, #4]
   2fecc:	ldr	r1, [r7, #8]
   2fed0:	ldrb	r2, [r0, #17]
   2fed4:	add	r2, ip, r2
   2fed8:	cmp	r1, r2
   2fedc:	bls	30204 <makeContractionTablePath@@Base+0x1084>
   2fee0:	ldr	r3, [r7, #36]	; 0x24
   2fee4:	mov	r8, r7
   2fee8:	ldr	r2, [r7, #20]
   2feec:	add	r2, r2, r3, lsl #2
   2fef0:	str	r2, [sp, #20]
   2fef4:	mov	r9, r2
   2fef8:	ldr	r3, [r8, #16]
   2fefc:	mov	r4, r9
   2ff00:	cmp	r9, r3
   2ff04:	add	r9, r9, #4
   2ff08:	bcs	2ff34 <makeContractionTablePath@@Base+0xdb4>
   2ff0c:	ldr	r0, [r4]
   2ff10:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2ff14:	cmp	r0, #0
   2ff18:	beq	3020c <makeContractionTablePath@@Base+0x108c>
   2ff1c:	ldr	r3, [r0, #12]
   2ff20:	tst	r3, #1
   2ff24:	beq	3020c <makeContractionTablePath@@Base+0x108c>
   2ff28:	ldr	r3, [r8, #56]	; 0x38
   2ff2c:	cmp	r4, r3
   2ff30:	bne	2fef8 <makeContractionTablePath@@Base+0xd78>
   2ff34:	ldr	r0, [r7, #32]
   2ff38:	mov	r4, r6
   2ff3c:	b	2fa30 <makeContractionTablePath@@Base+0x8b0>
   2ff40:	ldr	r4, [pc, #900]	; 302cc <makeContractionTablePath@@Base+0x114c>
   2ff44:	add	r4, pc, r4
   2ff48:	ldr	r0, [r4, #48]	; 0x30
   2ff4c:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2ff50:	cmp	r0, #0
   2ff54:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2ff58:	ldr	r2, [r0, #12]
   2ff5c:	tst	r2, #1
   2ff60:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2ff64:	ldr	r0, [r4, #44]	; 0x2c
   2ff68:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2ff6c:	cmp	r0, #0
   2ff70:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2ff74:	ldr	r2, [r0, #12]
   2ff78:	tst	r2, #1
   2ff7c:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2ff80:	ldr	r2, [r4, #52]	; 0x34
   2ff84:	cmp	r2, #11
   2ff88:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2ff8c:	ldr	r2, [r4, #4]
   2ff90:	ldr	r1, [r4, #28]
   2ff94:	cmp	r2, r1
   2ff98:	beq	2fd68 <makeContractionTablePath@@Base+0xbe8>
   2ff9c:	ldrb	r2, [r2, #-1]
   2ffa0:	cmp	r2, #0
   2ffa4:	bne	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2ffa8:	b	2fd68 <makeContractionTablePath@@Base+0xbe8>
   2ffac:	ldr	r4, [pc, #796]	; 302d0 <makeContractionTablePath@@Base+0x1150>
   2ffb0:	add	r4, pc, r4
   2ffb4:	ldr	r0, [r4, #48]	; 0x30
   2ffb8:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2ffbc:	cmp	r0, #0
   2ffc0:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2ffc4:	ldr	r2, [r0, #12]
   2ffc8:	tst	r2, #11
   2ffcc:	bne	2fe1c <makeContractionTablePath@@Base+0xc9c>
   2ffd0:	b	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2ffd4:	ldr	r4, [pc, #760]	; 302d4 <makeContractionTablePath@@Base+0x1154>
   2ffd8:	add	r4, pc, r4
   2ffdc:	ldr	r0, [r4, #48]	; 0x30
   2ffe0:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   2ffe4:	cmp	r0, #0
   2ffe8:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2ffec:	ldr	r2, [r0, #12]
   2fff0:	tst	r2, #9
   2fff4:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   2fff8:	ldr	r0, [r4, #44]	; 0x2c
   2fffc:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   30000:	cmp	r0, #0
   30004:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30008:	ldr	r2, [r0, #12]
   3000c:	tst	r2, #2
   30010:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30014:	b	2fd68 <makeContractionTablePath@@Base+0xbe8>
   30018:	ldr	r4, [pc, #696]	; 302d8 <makeContractionTablePath@@Base+0x1158>
   3001c:	add	r4, pc, r4
   30020:	ldr	r0, [r4, #48]	; 0x30
   30024:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   30028:	cmp	r0, #0
   3002c:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30030:	ldr	r2, [r0, #12]
   30034:	tst	r2, #9
   30038:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   3003c:	ldr	r0, [r4, #44]	; 0x2c
   30040:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   30044:	cmp	r0, #0
   30048:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   3004c:	ldr	r2, [r0, #12]
   30050:	tst	r2, #11
   30054:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30058:	b	2fd68 <makeContractionTablePath@@Base+0xbe8>
   3005c:	ldr	r4, [pc, #632]	; 302dc <makeContractionTablePath@@Base+0x115c>
   30060:	add	r4, pc, r4
   30064:	ldr	r0, [r4, #48]	; 0x30
   30068:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   3006c:	cmp	r0, #0
   30070:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30074:	ldr	r2, [r0, #12]
   30078:	tst	r2, #11
   3007c:	bne	2fff8 <makeContractionTablePath@@Base+0xe78>
   30080:	b	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30084:	ldr	r4, [pc, #596]	; 302e0 <makeContractionTablePath@@Base+0x1160>
   30088:	add	r4, pc, r4
   3008c:	ldr	r0, [r4, #48]	; 0x30
   30090:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   30094:	cmp	r0, #0
   30098:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   3009c:	ldr	r2, [r0, #12]
   300a0:	tst	r2, #2
   300a4:	bne	2fff8 <makeContractionTablePath@@Base+0xe78>
   300a8:	b	2fe38 <makeContractionTablePath@@Base+0xcb8>
   300ac:	ldr	r4, [pc, #560]	; 302e4 <makeContractionTablePath@@Base+0x1164>
   300b0:	add	r4, pc, r4
   300b4:	ldr	r0, [r4, #48]	; 0x30
   300b8:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   300bc:	cmp	r0, #0
   300c0:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   300c4:	ldr	r2, [r0, #12]
   300c8:	tst	r2, #2
   300cc:	bne	3003c <makeContractionTablePath@@Base+0xebc>
   300d0:	b	2fe38 <makeContractionTablePath@@Base+0xcb8>
   300d4:	ldr	r4, [pc, #524]	; 302e8 <makeContractionTablePath@@Base+0x1168>
   300d8:	add	r4, pc, r4
   300dc:	ldr	r0, [r4, #48]	; 0x30
   300e0:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   300e4:	cmp	r0, #0
   300e8:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   300ec:	ldr	r2, [r0, #12]
   300f0:	tst	r2, #2
   300f4:	bne	2fe1c <makeContractionTablePath@@Base+0xc9c>
   300f8:	b	2fe38 <makeContractionTablePath@@Base+0xcb8>
   300fc:	ldr	r4, [pc, #488]	; 302ec <makeContractionTablePath@@Base+0x116c>
   30100:	add	r4, pc, r4
   30104:	ldr	r2, [r4, #20]
   30108:	ldr	r0, [r2]
   3010c:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   30110:	cmp	r0, #0
   30114:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30118:	ldr	r2, [r0, #12]
   3011c:	tst	r2, #8
   30120:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30124:	bl	2f840 <makeContractionTablePath@@Base+0x6c0>
   30128:	cmp	r0, #0
   3012c:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30130:	bl	2f8ac <makeContractionTablePath@@Base+0x72c>
   30134:	cmp	r0, #0
   30138:	bne	2fe38 <makeContractionTablePath@@Base+0xcb8>
   3013c:	b	2fd68 <makeContractionTablePath@@Base+0xbe8>
   30140:	ldr	r4, [pc, #424]	; 302f0 <makeContractionTablePath@@Base+0x1170>
   30144:	add	r4, pc, r4
   30148:	ldr	r2, [r4, #20]
   3014c:	ldr	r0, [r2]
   30150:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   30154:	cmp	r0, #0
   30158:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   3015c:	ldr	r2, [r0, #12]
   30160:	tst	r2, #8
   30164:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30168:	bl	2f840 <makeContractionTablePath@@Base+0x6c0>
   3016c:	cmp	r0, #0
   30170:	bne	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30174:	bl	2f8ac <makeContractionTablePath@@Base+0x72c>
   30178:	cmp	r0, #0
   3017c:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   30180:	b	2fd68 <makeContractionTablePath@@Base+0xbe8>
   30184:	ldr	r4, [pc, #360]	; 302f4 <makeContractionTablePath@@Base+0x1174>
   30188:	add	r4, pc, r4
   3018c:	ldr	r0, [r4, #48]	; 0x30
   30190:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   30194:	cmp	r0, #0
   30198:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   3019c:	ldr	r2, [r0, #12]
   301a0:	tst	r2, #9
   301a4:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   301a8:	ldr	r0, [r4, #44]	; 0x2c
   301ac:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   301b0:	cmp	r0, #0
   301b4:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   301b8:	ldr	r2, [r0, #12]
   301bc:	tst	r2, #4
   301c0:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   301c4:	b	2fd68 <makeContractionTablePath@@Base+0xbe8>
   301c8:	ldr	r4, [pc, #296]	; 302f8 <makeContractionTablePath@@Base+0x1178>
   301cc:	add	r4, pc, r4
   301d0:	ldr	r0, [r4, #48]	; 0x30
   301d4:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   301d8:	cmp	r0, #0
   301dc:	beq	2fe38 <makeContractionTablePath@@Base+0xcb8>
   301e0:	ldr	r2, [r0, #12]
   301e4:	tst	r2, #4
   301e8:	bne	301a8 <makeContractionTablePath@@Base+0x1028>
   301ec:	b	2fe38 <makeContractionTablePath@@Base+0xcb8>
   301f0:	ldr	r2, [pc, #260]	; 302fc <makeContractionTablePath@@Base+0x117c>
   301f4:	mov	r4, r6
   301f8:	add	r2, pc, r2
   301fc:	ldr	r0, [r2, #32]
   30200:	b	2fa30 <makeContractionTablePath@@Base+0x8b0>
   30204:	mov	r4, r6
   30208:	b	2fa30 <makeContractionTablePath@@Base+0x8b0>
   3020c:	ldr	r0, [r4]
   30210:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   30214:	cmp	r0, #0
   30218:	beq	3023c <makeContractionTablePath@@Base+0x10bc>
   3021c:	ldr	r2, [r0, #12]
   30220:	tst	r2, #2
   30224:	bne	30250 <makeContractionTablePath@@Base+0x10d0>
   30228:	ldr	r2, [pc, #208]	; 30300 <makeContractionTablePath@@Base+0x1180>
   3022c:	mov	r4, r6
   30230:	add	r2, pc, r2
   30234:	ldr	r0, [r2, #32]
   30238:	b	2fa30 <makeContractionTablePath@@Base+0x8b0>
   3023c:	ldr	r2, [pc, #192]	; 30304 <makeContractionTablePath@@Base+0x1184>
   30240:	mov	r4, r6
   30244:	add	r2, pc, r2
   30248:	ldr	r0, [r2, #32]
   3024c:	b	2fa30 <makeContractionTablePath@@Base+0x8b0>
   30250:	ldr	r3, [sp, #20]
   30254:	cmp	r4, r3
   30258:	bne	2fd68 <makeContractionTablePath@@Base+0xbe8>
   3025c:	ldr	r2, [pc, #164]	; 30308 <makeContractionTablePath@@Base+0x1188>
   30260:	mov	r4, r6
   30264:	add	r2, pc, r2
   30268:	ldr	r0, [r2, #32]
   3026c:	b	2fa30 <makeContractionTablePath@@Base+0x8b0>
   30270:	andeq	r3, r4, r0, lsr r1
   30274:	andeq	r4, r4, r4, asr #5
   30278:	andeq	r4, r4, ip, lsr #5
   3027c:	andeq	r4, r4, r0, lsl #5
   30280:	andeq	r4, r4, r8, lsr r2
   30284:	andeq	r4, r4, ip, lsr #4
   30288:	andeq	r4, r4, r4, lsr #4
   3028c:	andeq	r4, r4, r8, lsl r2
   30290:	andeq	r4, r4, r4, lsl r2
   30294:	andeq	r4, r4, r8, lsl #4
   30298:	andeq	r0, r0, r0, asr #10
   3029c:	strheq	r4, [r4], -ip
   302a0:	andeq	r4, r4, r0, lsr #32
   302a4:	andeq	r4, r4, r0
   302a8:	andeq	r3, r4, r4, ror #31
   302ac:	andeq	r3, r4, r8, lsr #29
   302b0:	muleq	r4, r4, lr
   302b4:	andeq	r3, r4, r8, ror lr
   302b8:	andeq	r3, r4, r8, lsr lr
   302bc:	andeq	r3, r4, r8, lsr #28
   302c0:	andeq	r3, r4, r8, asr #27
   302c4:			; <UNDEFINED> instruction: 0x00043db4
   302c8:	andeq	r3, r4, ip, lsl #27
   302cc:	andeq	r3, r4, r0, ror #25
   302d0:	andeq	r3, r4, r4, ror ip
   302d4:	andeq	r3, r4, ip, asr #24
   302d8:	andeq	r3, r4, r8, lsl #24
   302dc:	andeq	r3, r4, r4, asr #23
   302e0:	muleq	r4, ip, fp
   302e4:	andeq	r3, r4, r4, ror fp
   302e8:	andeq	r3, r4, ip, asr #22
   302ec:	andeq	r3, r4, r4, lsr #22
   302f0:	andeq	r3, r4, r0, ror #21
   302f4:	muleq	r4, ip, sl
   302f8:	andeq	r3, r4, r8, asr sl
   302fc:	andeq	r3, r4, ip, lsr #20
   30300:	strdeq	r3, [r4], -r4
   30304:	andeq	r3, r4, r0, ror #19
   30308:	andeq	r3, r4, r0, asr #19
   3030c:	ldr	r3, [pc, #184]	; 303cc <makeContractionTablePath@@Base+0x124c>
   30310:	ldr	r2, [pc, #184]	; 303d0 <makeContractionTablePath@@Base+0x1250>
   30314:	add	r3, pc, r3
   30318:	ldr	ip, [pc, #180]	; 303d4 <makeContractionTablePath@@Base+0x1254>
   3031c:	push	{r4, r5, r6, r7, lr}
   30320:	sub	sp, sp, #12
   30324:	ldr	r4, [r3, r2]
   30328:	ldrb	r5, [r0, #16]
   3032c:	ldrb	r6, [r0, #17]
   30330:	ldr	r2, [r4]
   30334:	add	r5, r5, #4
   30338:	add	r5, r0, r5, lsl #2
   3033c:	str	r2, [sp, #4]
   30340:	add	r7, r5, #4
   30344:	ldr	r3, [r3, ip]
   30348:	ldrb	r3, [r3, #58]	; 0x3a
   3034c:	cmp	r3, #2
   30350:	beq	30378 <makeContractionTablePath@@Base+0x11f8>
   30354:	mov	r0, r7
   30358:	mov	r1, r6
   3035c:	bl	2f364 <makeContractionTablePath@@Base+0x1e4>
   30360:	ldr	r2, [sp, #4]
   30364:	ldr	r3, [r4]
   30368:	cmp	r2, r3
   3036c:	bne	303c8 <makeContractionTablePath@@Base+0x1248>
   30370:	add	sp, sp, #12
   30374:	pop	{r4, r5, r6, r7, pc}
   30378:	mov	r0, r1
   3037c:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   30380:	cmp	r0, #0
   30384:	beq	30354 <makeContractionTablePath@@Base+0x11d4>
   30388:	ldr	r3, [r0, #12]
   3038c:	tst	r3, #16
   30390:	beq	30354 <makeContractionTablePath@@Base+0x11d4>
   30394:	ldrb	r3, [r5, #4]
   30398:	add	r0, sp, #8
   3039c:	mov	r1, #1
   303a0:	orr	r3, r3, #64	; 0x40
   303a4:	strb	r3, [r0, #-5]!
   303a8:	bl	2f364 <makeContractionTablePath@@Base+0x1e4>
   303ac:	cmp	r0, #0
   303b0:	beq	30360 <makeContractionTablePath@@Base+0x11e0>
   303b4:	subs	r6, r6, #1
   303b8:	moveq	r0, #1
   303bc:	beq	30360 <makeContractionTablePath@@Base+0x11e0>
   303c0:	add	r7, r5, #5
   303c4:	b	30354 <makeContractionTablePath@@Base+0x11d4>
   303c8:	bl	f950 <__stack_chk_fail@plt>
   303cc:	andeq	r2, r4, r4, ror #14
   303d0:			; <UNDEFINED> instruction: 0x000003b4
   303d4:	andeq	r0, r0, r0, asr #10
   303d8:	ldr	r3, [pc, #184]	; 30498 <makeContractionTablePath@@Base+0x1318>
   303dc:	mov	r2, #0
   303e0:	ldr	ip, [pc, #180]	; 3049c <makeContractionTablePath@@Base+0x131c>
   303e4:	add	r3, pc, r3
   303e8:	ldr	r1, [pc, #176]	; 304a0 <makeContractionTablePath@@Base+0x1320>
   303ec:	push	{r4, r5, r6, lr}
   303f0:	sub	sp, sp, #8
   303f4:	ldr	r5, [r3, ip]
   303f8:	add	r4, sp, #8
   303fc:	add	r1, pc, r1
   30400:	mov	r6, r0
   30404:	str	r2, [r4, #-8]!
   30408:	mov	r2, sp
   3040c:	ldr	r3, [r5]
   30410:	str	r3, [sp, #4]
   30414:	bl	2b1f4 <handleBestCharacter@@Base>
   30418:	cmp	r0, #0
   3041c:	bne	30484 <makeContractionTablePath@@Base+0x1304>
   30420:	mov	r0, r6
   30424:	bl	2b10c <getCharacterWidth@@Base>
   30428:	cmp	r0, #0
   3042c:	moveq	r0, #1
   30430:	beq	30454 <makeContractionTablePath@@Base+0x12d4>
   30434:	movw	r0, #65533	; 0xfffd
   30438:	cmp	r6, r0
   3043c:	beq	3046c <makeContractionTablePath@@Base+0x12ec>
   30440:	bl	2f208 <makeContractionTablePath@@Base+0x88>
   30444:	cmp	r0, #0
   30448:	beq	3046c <makeContractionTablePath@@Base+0x12ec>
   3044c:	mov	r1, r6
   30450:	bl	3030c <makeContractionTablePath@@Base+0x118c>
   30454:	ldr	r2, [sp, #4]
   30458:	ldr	r3, [r5]
   3045c:	cmp	r2, r3
   30460:	bne	30494 <makeContractionTablePath@@Base+0x1314>
   30464:	add	sp, sp, #8
   30468:	pop	{r4, r5, r6, pc}
   3046c:	mov	r0, sp
   30470:	mov	r1, #1
   30474:	mvn	r3, #0
   30478:	strb	r3, [sp]
   3047c:	bl	2f364 <makeContractionTablePath@@Base+0x1e4>
   30480:	b	30454 <makeContractionTablePath@@Base+0x12d4>
   30484:	mov	r1, r6
   30488:	ldr	r0, [sp]
   3048c:	bl	3030c <makeContractionTablePath@@Base+0x118c>
   30490:	b	30454 <makeContractionTablePath@@Base+0x12d4>
   30494:	bl	f950 <__stack_chk_fail@plt>
   30498:	muleq	r4, r4, r6
   3049c:			; <UNDEFINED> instruction: 0x000003b4
   304a0:			; <UNDEFINED> instruction: 0xffffee48

000304a4 <contractText@@Base>:
   304a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   304a8:	add	fp, sp, #32
   304ac:	sub	sp, sp, #236	; 0xec
   304b0:	ldr	r6, [pc, #4080]	; 314a8 <contractText@@Base+0x1004>
   304b4:	ldr	ip, [pc, #4080]	; 314ac <contractText@@Base+0x1008>
   304b8:	ldr	sl, [fp, #4]
   304bc:	add	r6, pc, r6
   304c0:	str	r2, [fp, #-184]	; 0xffffff48
   304c4:	mov	r9, r3
   304c8:	ldr	r3, [pc, #4064]	; 314b0 <contractText@@Base+0x100c>
   304cc:	mov	r5, r1
   304d0:	str	sl, [fp, #-188]	; 0xffffff44
   304d4:	mov	r8, r0
   304d8:	ldr	ip, [r6, ip]
   304dc:	add	r3, pc, r3
   304e0:	ldr	r4, [fp, #8]
   304e4:	ldr	r2, [fp, #12]
   304e8:	str	ip, [fp, #-192]	; 0xffffff40
   304ec:	ldr	ip, [fp, #-184]	; 0xffffff48
   304f0:	cmn	r2, #1
   304f4:	ldr	sl, [fp, #-192]	; 0xffffff40
   304f8:	addne	r2, r5, r2, lsl #2
   304fc:	str	r8, [r3]
   30500:	moveq	r2, #0
   30504:	ldr	r7, [ip]
   30508:	ldr	ip, [fp, #-188]	; 0xffffff44
   3050c:	ldr	r1, [sl]
   30510:	add	r7, r5, r7, lsl #2
   30514:	str	r5, [r3, #20]
   30518:	ldr	r0, [ip]
   3051c:	str	r7, [r3, #16]
   30520:	add	r0, r9, r0
   30524:	str	r5, [r3, #12]
   30528:	str	r9, [r3, #4]
   3052c:	str	r9, [r3, #28]
   30530:	str	r1, [fp, #-40]	; 0xffffffd8
   30534:	str	r0, [r3, #8]
   30538:	str	r4, [r3, #24]
   3053c:	ldr	r1, [r8, #12]
   30540:	ldr	r3, [pc, #3948]	; 314b4 <contractText@@Base+0x1010>
   30544:	cmp	r1, #0
   30548:	add	r3, pc, r3
   3054c:	str	r2, [r3, #56]	; 0x38
   30550:	beq	30584 <contractText@@Base+0xe0>
   30554:	ldr	sl, [r8, #28]
   30558:	cmp	sl, #0
   3055c:	beq	30584 <contractText@@Base+0xe0>
   30560:	cmp	r4, #0
   30564:	beq	30574 <contractText@@Base+0xd0>
   30568:	ldr	r3, [r8, #52]	; 0x34
   3056c:	cmp	r3, #0
   30570:	beq	319c4 <contractText@@Base+0x1520>
   30574:	ldr	r3, [r8, #40]	; 0x28
   30578:	rsb	r0, r9, r0
   3057c:	cmp	r3, r0
   30580:	beq	30854 <contractText@@Base+0x3b0>
   30584:	ldr	r3, [pc, #3884]	; 314b8 <contractText@@Base+0x1014>
   30588:	ldr	r3, [r6, r3]
   3058c:	str	r3, [fp, #-200]	; 0xffffff38
   30590:	ldr	r3, [r8, #64]	; 0x40
   30594:	cmp	r3, #0
   30598:	beq	30888 <contractText@@Base+0x3e4>
   3059c:	cmp	r4, #0
   305a0:	beq	305ac <contractText@@Base+0x108>
   305a4:	mov	r3, #0
   305a8:	str	r3, [r4]
   305ac:	mov	r2, r5
   305b0:	mvn	r1, #0
   305b4:	add	r3, r2, #4
   305b8:	b	305c8 <contractText@@Base+0x124>
   305bc:	cmp	r4, #0
   305c0:	add	r3, r3, #4
   305c4:	bne	30bf8 <contractText@@Base+0x754>
   305c8:	cmp	r7, r3
   305cc:	mov	r2, r3
   305d0:	bhi	305bc <contractText@@Base+0x118>
   305d4:	ldr	r4, [pc, #3808]	; 314bc <contractText@@Base+0x1018>
   305d8:	mov	r0, r8
   305dc:	add	r4, pc, r4
   305e0:	str	r3, [r4, #20]
   305e4:	bl	2ec20 <startContractionCommand@@Base>
   305e8:	cmp	r0, #0
   305ec:	beq	30c30 <contractText@@Base+0x78c>
   305f0:	sub	r9, fp, #144	; 0x90
   305f4:	mov	r1, #0
   305f8:	mov	r2, #96	; 0x60
   305fc:	ldr	r7, [pc, #3772]	; 314c0 <contractText@@Base+0x101c>
   30600:	mov	r0, r9
   30604:	sub	r5, fp, #48	; 0x30
   30608:	bl	f6b0 <memset@plt>
   3060c:	ldr	ip, [r4, #56]	; 0x38
   30610:	ldr	r3, [pc, #3756]	; 314c4 <contractText@@Base+0x1020>
   30614:	add	r7, pc, r7
   30618:	cmp	ip, #0
   3061c:	ldr	sl, [fp, #-200]	; 0xffffff38
   30620:	add	r3, pc, r3
   30624:	str	r3, [fp, #-144]	; 0xffffff70
   30628:	ldr	r3, [pc, #3736]	; 314c8 <contractText@@Base+0x1024>
   3062c:	mov	r2, #1
   30630:	ldrne	r8, [r4, #12]
   30634:	add	r3, pc, r3
   30638:	ldreq	r1, [r4, #12]
   3063c:	rsbne	ip, r8, ip
   30640:	ldrb	r4, [sl, #38]	; 0x26
   30644:	ldr	r0, [r3, #16]
   30648:	movne	r1, r8
   3064c:	asrne	ip, ip, #2
   30650:	str	r7, [fp, #-128]	; 0xffffff80
   30654:	addne	ip, ip, #1
   30658:	str	ip, [fp, #-136]	; 0xffffff78
   3065c:	ldr	ip, [r3]
   30660:	ldr	lr, [pc, #3684]	; 314cc <contractText@@Base+0x1028>
   30664:	ldr	r7, [pc, #3684]	; 314d0 <contractText@@Base+0x102c>
   30668:	strb	r2, [fp, #-140]	; 0xffffff74
   3066c:	add	lr, pc, lr
   30670:	mov	r2, #1
   30674:	add	r7, pc, r7
   30678:	str	r4, [fp, #-120]	; 0xffffff88
   3067c:	str	lr, [fp, #-112]	; 0xffffff90
   30680:	str	r7, [fp, #-80]	; 0xffffffb0
   30684:	strb	r2, [fp, #-124]	; 0xffffff84
   30688:	strb	r2, [fp, #-108]	; 0xffffff94
   3068c:	strb	r2, [fp, #-92]	; 0xffffffa4
   30690:	moveq	r8, r1
   30694:	rsb	r8, r8, r0
   30698:	ldrb	r0, [sl, #58]	; 0x3a
   3069c:	asr	r8, r8, #2
   306a0:	str	r1, [fp, #-72]	; 0xffffffb8
   306a4:	str	r8, [fp, #-68]	; 0xffffffbc
   306a8:	ldr	r1, [pc, #3620]	; 314d4 <contractText@@Base+0x1030>
   306ac:	ldr	r8, [r3, #8]
   306b0:	ldr	r3, [r3, #28]
   306b4:	add	r1, pc, r1
   306b8:	str	r0, [fp, #-104]	; 0xffffff98
   306bc:	ldr	sl, [pc, #3604]	; 314d8 <contractText@@Base+0x1034>
   306c0:	rsb	r3, r3, r8
   306c4:	ldr	r0, [pc, #3600]	; 314dc <contractText@@Base+0x1038>
   306c8:	str	r3, [fp, #-88]	; 0xffffffa8
   306cc:	add	sl, pc, sl
   306d0:	str	r1, [fp, #-96]	; 0xffffffa0
   306d4:	add	r0, pc, r0
   306d8:	ldr	r7, [ip, #72]	; 0x48
   306dc:	mov	r1, r7
   306e0:	bl	fd64 <fputs@plt>
   306e4:	cmn	r0, #1
   306e8:	beq	318dc <contractText@@Base+0x1438>
   306ec:	mov	r0, #61	; 0x3d
   306f0:	mov	r1, r7
   306f4:	bl	fb0c <fputc@plt>
   306f8:	cmn	r0, #1
   306fc:	beq	318dc <contractText@@Base+0x1438>
   30700:	ldrb	r1, [r9, #4]
   30704:	cmp	r1, #0
   30708:	beq	30e34 <contractText@@Base+0x990>
   3070c:	cmp	r1, #1
   30710:	bne	30c04 <contractText@@Base+0x760>
   30714:	mov	r0, r7
   30718:	mov	r2, sl
   3071c:	ldr	r3, [r9, #8]
   30720:	bl	f65c <__fprintf_chk@plt>
   30724:	cmn	r0, #1
   30728:	beq	318dc <contractText@@Base+0x1438>
   3072c:	mov	r0, #10
   30730:	mov	r1, r7
   30734:	bl	fb0c <fputc@plt>
   30738:	cmn	r0, #1
   3073c:	beq	318dc <contractText@@Base+0x1438>
   30740:	ldr	r0, [r9, #16]!
   30744:	cmp	r0, #0
   30748:	bne	306dc <contractText@@Base+0x238>
   3074c:	mov	r0, r7
   30750:	bl	fcf8 <fflush@plt>
   30754:	cmn	r0, #1
   30758:	beq	318dc <contractText@@Base+0x1438>
   3075c:	ldr	r7, [pc, #3452]	; 314e0 <contractText@@Base+0x103c>
   30760:	ldr	sl, [pc, #3452]	; 314e4 <contractText@@Base+0x1040>
   30764:	add	r7, pc, r7
   30768:	ldr	ip, [pc, #3448]	; 314e8 <contractText@@Base+0x1044>
   3076c:	add	sl, pc, sl
   30770:	str	sl, [fp, #-204]	; 0xffffff34
   30774:	ldr	r3, [r7]
   30778:	add	ip, pc, ip
   3077c:	ldr	sl, [pc, #3432]	; 314ec <contractText@@Base+0x1048>
   30780:	str	ip, [fp, #-208]	; 0xffffff30
   30784:	ldr	r8, [r3, #76]	; 0x4c
   30788:	add	sl, pc, sl
   3078c:	ldr	ip, [pc, #3420]	; 314f0 <contractText@@Base+0x104c>
   30790:	str	sl, [fp, #-196]	; 0xffffff3c
   30794:	add	sl, r7, #60	; 0x3c
   30798:	add	ip, pc, ip
   3079c:	str	r6, [fp, #-212]	; 0xffffff2c
   307a0:	str	ip, [fp, #-216]	; 0xffffff28
   307a4:	mov	r0, r8
   307a8:	mov	r1, sl
   307ac:	add	r2, r7, #64	; 0x40
   307b0:	bl	1d31c <readLine@@Base>
   307b4:	cmp	r0, #0
   307b8:	beq	31b3c <contractText@@Base+0x1698>
   307bc:	ldr	r4, [r7, #60]	; 0x3c
   307c0:	mov	r1, #61	; 0x3d
   307c4:	mov	r0, r4
   307c8:	bl	fdd0 <strchr@plt>
   307cc:	subs	r5, r0, #0
   307d0:	beq	31a6c <contractText@@Base+0x15c8>
   307d4:	ldr	r1, [pc, #3352]	; 314f4 <contractText@@Base+0x1050>
   307d8:	mov	r2, #0
   307dc:	ldrb	r6, [r5]
   307e0:	add	r1, pc, r1
   307e4:	strb	r2, [r5]
   307e8:	ldr	r9, [fp, #-196]	; 0xffffff3c
   307ec:	ldr	r4, [r7, #60]	; 0x3c
   307f0:	b	30800 <contractText@@Base+0x35c>
   307f4:	ldr	r1, [r9, #12]!
   307f8:	cmp	r1, #0
   307fc:	beq	31a3c <contractText@@Base+0x1598>
   30800:	mov	r0, r4
   30804:	bl	fc5c <strcmp@plt>
   30808:	cmp	r0, #0
   3080c:	bne	307f4 <contractText@@Base+0x350>
   30810:	ldr	r2, [r9, #4]
   30814:	add	r0, r5, #1
   30818:	blx	r2
   3081c:	ldrb	r4, [r9, #8]
   30820:	strb	r6, [r5]
   30824:	and	r4, r4, #1
   30828:	cmp	r0, #0
   3082c:	ldreq	ip, [fp, #-216]	; 0xffffff28
   30830:	ldreq	r3, [ip, #60]	; 0x3c
   30834:	beq	31a50 <contractText@@Base+0x15ac>
   30838:	cmp	r4, #0
   3083c:	beq	307a4 <contractText@@Base+0x300>
   30840:	ldr	r3, [pc, #3248]	; 314f8 <contractText@@Base+0x1054>
   30844:	add	r3, pc, r3
   30848:	ldr	ip, [r3, #16]
   3084c:	ldr	r5, [r3, #20]
   30850:	b	30a84 <contractText@@Base+0x5e0>
   30854:	cmp	r2, #0
   30858:	ldr	r3, [r8, #56]	; 0x38
   3085c:	rsbne	r2, r5, r2
   30860:	mvneq	r2, #0
   30864:	asrne	r2, r2, #2
   30868:	cmp	r3, r2
   3086c:	ldr	r3, [pc, #3140]	; 314b8 <contractText@@Base+0x1014>
   30870:	beq	30d54 <contractText@@Base+0x8b0>
   30874:	ldr	r3, [r6, r3]
   30878:	str	r3, [fp, #-200]	; 0xffffff38
   3087c:	ldr	r3, [r8, #64]	; 0x40
   30880:	cmp	r3, #0
   30884:	bne	3059c <contractText@@Base+0xf8>
   30888:	ldr	r1, [pc, #3180]	; 314fc <contractText@@Base+0x1058>
   3088c:	rsb	r0, r5, r7
   30890:	mov	r3, #0
   30894:	mov	r2, #26
   30898:	add	r1, pc, r1
   3089c:	asr	r0, r0, #2
   308a0:	mov	r9, r3
   308a4:	str	r2, [fp, #-196]	; 0xffffff3c
   308a8:	str	r3, [fp, #-176]	; 0xffffff50
   308ac:	mov	r4, r3
   308b0:	str	r3, [fp, #-172]	; 0xffffff54
   308b4:	mov	sl, r2
   308b8:	str	r3, [fp, #-224]	; 0xffffff20
   308bc:	mov	r8, r2
   308c0:	str	r3, [fp, #-168]	; 0xffffff58
   308c4:	add	r0, r0, #7
   308c8:	str	r3, [fp, #-228]	; 0xffffff1c
   308cc:	bic	r0, r0, #7
   308d0:	str	r2, [fp, #-152]	; 0xffffff68
   308d4:	mov	r2, #30
   308d8:	ldr	r3, [pc, #3104]	; 31500 <contractText@@Base+0x105c>
   308dc:	mov	ip, r7
   308e0:	str	r2, [r1, #52]	; 0x34
   308e4:	ldr	r2, [pc, #3096]	; 31504 <contractText@@Base+0x1060>
   308e8:	add	r3, pc, r3
   308ec:	str	r3, [fp, #-204]	; 0xffffff34
   308f0:	add	r2, pc, r2
   308f4:	ldr	r3, [pc, #3084]	; 31508 <contractText@@Base+0x1064>
   308f8:	str	r2, [fp, #-216]	; 0xffffff28
   308fc:	ldr	r2, [pc, #3080]	; 3150c <contractText@@Base+0x1068>
   30900:	add	r3, pc, r3
   30904:	str	sp, [fp, #-232]	; 0xffffff18
   30908:	sub	sp, sp, r0
   3090c:	add	r2, pc, r2
   30910:	str	r3, [fp, #-220]	; 0xffffff24
   30914:	str	r2, [fp, #-240]	; 0xffffff10
   30918:	add	r7, sp, #8
   3091c:	ldr	r3, [pc, #3052]	; 31510 <contractText@@Base+0x106c>
   30920:	ldr	r2, [pc, #3052]	; 31514 <contractText@@Base+0x1070>
   30924:	add	r3, pc, r3
   30928:	str	r3, [fp, #-256]	; 0xffffff00
   3092c:	add	r2, pc, r2
   30930:	str	r2, [fp, #-244]	; 0xffffff0c
   30934:	cmp	ip, r5
   30938:	bls	30a80 <contractText@@Base+0x5dc>
   3093c:	ldr	r3, [fp, #-204]	; 0xffffff34
   30940:	ldr	r0, [fp, #-204]	; 0xffffff34
   30944:	ldr	r2, [r3, #24]
   30948:	ldr	r1, [r0, #28]
   3094c:	cmp	r2, #0
   30950:	ldr	r3, [r3, #4]
   30954:	ldrne	r0, [fp, #-204]	; 0xffffff34
   30958:	str	r3, [fp, #-168]	; 0xffffff58
   3095c:	rsb	r3, r1, r3
   30960:	ldreq	r1, [r0, #12]
   30964:	ldrne	r1, [r0, #12]
   30968:	rsbne	r0, r1, r5
   3096c:	strne	r3, [r2, r0]
   30970:	cmp	r1, r5
   30974:	ldr	r2, [fp, #-216]	; 0xffffff28
   30978:	ldrne	r3, [r5, #-4]
   3097c:	moveq	r3, #32
   30980:	cmp	r4, #0
   30984:	str	r3, [r2, #48]	; 0x30
   30988:	beq	31a78 <contractText@@Base+0x15d4>
   3098c:	cmp	r4, r5
   30990:	bls	31784 <contractText@@Base+0x12e0>
   30994:	mov	r0, #1
   30998:	bl	2f938 <makeContractionTablePath@@Base+0x7b8>
   3099c:	cmp	r0, #0
   309a0:	strne	r4, [fp, #-212]	; 0xffffff2c
   309a4:	beq	3174c <contractText@@Base+0x12a8>
   309a8:	ldr	r6, [pc, #2920]	; 31518 <contractText@@Base+0x1074>
   309ac:	add	r6, pc, r6
   309b0:	ldr	r3, [r6]
   309b4:	ldr	r3, [r3, #68]	; 0x44
   309b8:	ldr	r2, [r3, #16]
   309bc:	cmp	r2, #0
   309c0:	beq	30fb0 <contractText@@Base+0xb0c>
   309c4:	ldr	r2, [r6, #52]	; 0x34
   309c8:	cmp	r2, #24
   309cc:	beq	30fb0 <contractText@@Base+0xb0c>
   309d0:	ldr	r0, [r6, #48]	; 0x30
   309d4:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   309d8:	cmp	r0, #0
   309dc:	beq	309ec <contractText@@Base+0x548>
   309e0:	ldr	r3, [r0, #12]
   309e4:	tst	r3, #4
   309e8:	bne	30fa8 <contractText@@Base+0xb04>
   309ec:	ldr	r6, [pc, #2856]	; 3151c <contractText@@Base+0x1078>
   309f0:	add	r6, pc, r6
   309f4:	ldr	r3, [r6, #20]
   309f8:	ldr	r0, [r3]
   309fc:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   30a00:	cmp	r0, #0
   30a04:	beq	30fa8 <contractText@@Base+0xb04>
   30a08:	ldr	r3, [r0, #12]
   30a0c:	tst	r3, #4
   30a10:	ldr	r3, [r6]
   30a14:	ldr	r3, [r3, #68]	; 0x44
   30a18:	beq	30fb0 <contractText@@Base+0xb0c>
   30a1c:	ldr	r0, [r3, #16]
   30a20:	bl	2f3a4 <makeContractionTablePath@@Base+0x224>
   30a24:	cmp	r0, #0
   30a28:	bne	30fbc <contractText@@Base+0xb18>
   30a2c:	ldr	r3, [pc, #2796]	; 31520 <contractText@@Base+0x107c>
   30a30:	add	r3, pc, r3
   30a34:	ldr	r7, [r3, #16]
   30a38:	ldr	r5, [r3, #20]
   30a3c:	cmp	r5, r7
   30a40:	movcs	ip, r7
   30a44:	bcs	30a80 <contractText@@Base+0x5dc>
   30a48:	ldr	r2, [fp, #-176]	; 0xffffff50
   30a4c:	cmp	r2, #0
   30a50:	beq	30a60 <contractText@@Base+0x5bc>
   30a54:	ldr	r3, [r3, #28]
   30a58:	cmp	r2, r3
   30a5c:	bhi	31d78 <contractText@@Base+0x18d4>
   30a60:	ldr	r2, [fp, #-168]	; 0xffffff58
   30a64:	cmp	r2, #0
   30a68:	beq	31e64 <contractText@@Base+0x19c0>
   30a6c:	ldr	r3, [pc, #2736]	; 31524 <contractText@@Base+0x1080>
   30a70:	add	r3, pc, r3
   30a74:	ldr	r5, [r3, #20]
   30a78:	ldr	ip, [r3, #16]
   30a7c:	str	r2, [r3, #4]
   30a80:	ldr	sp, [fp, #-232]	; 0xffffff18
   30a84:	cmp	r5, ip
   30a88:	bcc	316e8 <contractText@@Base+0x1244>
   30a8c:	ldr	r3, [pc, #2708]	; 31528 <contractText@@Base+0x1084>
   30a90:	add	r3, pc, r3
   30a94:	ldr	r6, [r3, #12]
   30a98:	ldr	r8, [pc, #2700]	; 3152c <contractText@@Base+0x1088>
   30a9c:	rsb	r7, r6, ip
   30aa0:	add	r8, pc, r8
   30aa4:	asr	r7, r7, #2
   30aa8:	ldr	r5, [r8]
   30aac:	ldr	r3, [r5, #16]
   30ab0:	cmp	r7, r3
   30ab4:	bhi	30e00 <contractText@@Base+0x95c>
   30ab8:	ldr	r0, [r5, #12]
   30abc:	mov	r1, r6
   30ac0:	mov	r2, r7
   30ac4:	bl	f620 <wmemcpy@plt>
   30ac8:	ldr	r3, [pc, #2656]	; 31530 <contractText@@Base+0x108c>
   30acc:	mov	r4, r5
   30ad0:	str	r7, [r5, #20]
   30ad4:	add	r3, pc, r3
   30ad8:	ldr	r3, [r3, #20]
   30adc:	rsb	r6, r6, r3
   30ae0:	asr	r6, r6, #2
   30ae4:	str	r6, [r5, #24]
   30ae8:	ldr	r8, [pc, #2628]	; 31534 <contractText@@Base+0x1090>
   30aec:	ldr	r3, [r4, #32]
   30af0:	add	r8, pc, r8
   30af4:	ldr	r7, [r8, #28]
   30af8:	ldr	r5, [r8, #4]
   30afc:	rsb	r5, r7, r5
   30b00:	cmp	r5, r3
   30b04:	bhi	30cec <contractText@@Base+0x848>
   30b08:	ldr	r0, [r4, #28]
   30b0c:	mov	r1, r7
   30b10:	mov	r2, r5
   30b14:	bl	fb24 <memcpy@plt>
   30b18:	ldr	r3, [pc, #2584]	; 31538 <contractText@@Base+0x1094>
   30b1c:	str	r5, [r4, #36]	; 0x24
   30b20:	add	r3, pc, r3
   30b24:	ldr	r3, [r3, #8]
   30b28:	rsb	r7, r7, r3
   30b2c:	str	r7, [r4, #40]	; 0x28
   30b30:	ldr	sl, [pc, #2564]	; 3153c <contractText@@Base+0x1098>
   30b34:	add	sl, pc, sl
   30b38:	ldr	r8, [sl, #24]
   30b3c:	ldr	r5, [sl, #12]
   30b40:	cmp	r8, #0
   30b44:	streq	r8, [r4, #52]	; 0x34
   30b48:	beq	30b78 <contractText@@Base+0x6d4>
   30b4c:	ldr	r7, [sl, #16]
   30b50:	ldr	r3, [r4, #48]	; 0x30
   30b54:	rsb	r7, r5, r7
   30b58:	asr	r7, r7, #2
   30b5c:	cmp	r7, r3
   30b60:	bhi	30d20 <contractText@@Base+0x87c>
   30b64:	ldr	r0, [r4, #44]	; 0x2c
   30b68:	mov	r1, r8
   30b6c:	lsl	r2, r7, #2
   30b70:	bl	fb24 <memcpy@plt>
   30b74:	str	r7, [r4, #52]	; 0x34
   30b78:	ldr	r3, [pc, #2496]	; 31540 <contractText@@Base+0x109c>
   30b7c:	ldr	r2, [pc, #2496]	; 31544 <contractText@@Base+0x10a0>
   30b80:	add	r3, pc, r3
   30b84:	ldr	sl, [fp, #-200]	; 0xffffff38
   30b88:	add	r2, pc, r2
   30b8c:	ldr	r3, [r3, #56]	; 0x38
   30b90:	ldrb	r1, [sl, #38]	; 0x26
   30b94:	cmp	r3, #0
   30b98:	ldr	r6, [r2, #20]
   30b9c:	rsbne	r3, r5, r3
   30ba0:	ldr	r9, [r2, #28]
   30ba4:	mvneq	r3, #0
   30ba8:	strb	r1, [r4, #60]	; 0x3c
   30bac:	asrne	r3, r3, #2
   30bb0:	str	r3, [r4, #56]	; 0x38
   30bb4:	ldr	r3, [r2, #4]
   30bb8:	ldrb	r0, [sl, #58]	; 0x3a
   30bbc:	strb	r0, [r4, #61]	; 0x3d
   30bc0:	ldr	ip, [fp, #-184]	; 0xffffff48
   30bc4:	rsb	r5, r5, r6
   30bc8:	ldr	sl, [fp, #-188]	; 0xffffff44
   30bcc:	rsb	r9, r9, r3
   30bd0:	asr	r5, r5, #2
   30bd4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   30bd8:	str	r5, [ip]
   30bdc:	ldr	ip, [fp, #-192]	; 0xffffff40
   30be0:	str	r9, [sl]
   30be4:	ldr	r3, [ip]
   30be8:	cmp	r2, r3
   30bec:	bne	31f80 <contractText@@Base+0x1adc>
   30bf0:	sub	sp, fp, #32
   30bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30bf8:	rsb	r3, r5, r2
   30bfc:	str	r1, [r4, r3]
   30c00:	b	305b4 <contractText@@Base+0x110>
   30c04:	ldr	r2, [pc, #2364]	; 31548 <contractText@@Base+0x10a4>
   30c08:	mov	r3, r1
   30c0c:	ldr	ip, [r9]
   30c10:	mov	r0, #4
   30c14:	add	r2, pc, r2
   30c18:	ldr	r1, [pc, #2348]	; 3154c <contractText@@Base+0x10a8>
   30c1c:	ldr	r2, [r2]
   30c20:	add	r1, pc, r1
   30c24:	ldr	r2, [r2, #64]	; 0x40
   30c28:	str	ip, [sp]
   30c2c:	bl	1c634 <logMessage@@Base>
   30c30:	ldr	r9, [pc, #2328]	; 31550 <contractText@@Base+0x10ac>
   30c34:	add	r9, pc, r9
   30c38:	ldr	r0, [r9]
   30c3c:	bl	2ed08 <stopContractionCommand@@Base>
   30c40:	ldr	r5, [r9, #12]
   30c44:	ldr	r7, [r9, #16]
   30c48:	ldr	r2, [r9, #28]
   30c4c:	cmp	r5, r7
   30c50:	str	r5, [r9, #20]
   30c54:	str	r2, [r9, #4]
   30c58:	movcs	r6, r5
   30c5c:	movcs	ip, r7
   30c60:	bcs	30a98 <contractText@@Base+0x5f4>
   30c64:	ldr	r3, [r9, #8]
   30c68:	cmp	r2, r3
   30c6c:	bcs	31dc8 <contractText@@Base+0x1924>
   30c70:	ldr	r3, [pc, #2268]	; 31554 <contractText@@Base+0x10b0>
   30c74:	mov	r8, r2
   30c78:	mov	r4, r9
   30c7c:	ldr	r6, [r6, r3]
   30c80:	b	30c98 <contractText@@Base+0x7f4>
   30c84:	ldr	r8, [r4, #4]
   30c88:	ldr	r3, [r4, #8]
   30c8c:	cmp	r8, r3
   30c90:	bcs	30e80 <contractText@@Base+0x9dc>
   30c94:	ldr	r2, [r4, #28]
   30c98:	ldr	r3, [r9, #24]
   30c9c:	rsb	r2, r2, r8
   30ca0:	cmp	r3, #0
   30ca4:	ldrne	r1, [r9, #12]
   30ca8:	rsbne	r1, r1, r5
   30cac:	add	r5, r5, #4
   30cb0:	strne	r2, [r3, r1]
   30cb4:	add	r3, r8, #1
   30cb8:	ldr	r1, [r5, #-4]
   30cbc:	ldr	r0, [r6]
   30cc0:	str	r5, [r4, #20]
   30cc4:	str	r3, [r4, #4]
   30cc8:	bl	2d7f8 <convertCharacterToDots@@Base>
   30ccc:	ldr	r5, [r4, #20]
   30cd0:	ldr	r7, [r4, #16]
   30cd4:	cmp	r5, r7
   30cd8:	strb	r0, [r8]
   30cdc:	bcc	30c84 <contractText@@Base+0x7e0>
   30ce0:	ldr	r6, [r4, #12]
   30ce4:	mov	ip, r7
   30ce8:	b	30a98 <contractText@@Base+0x5f4>
   30cec:	orr	r6, r5, #127	; 0x7f
   30cf0:	mov	r0, r6
   30cf4:	bl	fb48 <malloc@plt>
   30cf8:	subs	r9, r0, #0
   30cfc:	beq	31d44 <contractText@@Base+0x18a0>
   30d00:	ldr	r0, [r4, #28]
   30d04:	cmp	r0, #0
   30d08:	beq	30d10 <contractText@@Base+0x86c>
   30d0c:	bl	f4f4 <free@plt>
   30d10:	mov	r0, r9
   30d14:	str	r9, [r4, #28]
   30d18:	str	r6, [r4, #32]
   30d1c:	b	30b0c <contractText@@Base+0x668>
   30d20:	orr	r6, r7, #127	; 0x7f
   30d24:	lsl	r0, r6, #2
   30d28:	bl	fb48 <malloc@plt>
   30d2c:	subs	r9, r0, #0
   30d30:	beq	31a28 <contractText@@Base+0x1584>
   30d34:	ldr	r0, [r4, #44]	; 0x2c
   30d38:	cmp	r0, #0
   30d3c:	beq	30d44 <contractText@@Base+0x8a0>
   30d40:	bl	f4f4 <free@plt>
   30d44:	mov	r0, r9
   30d48:	str	r9, [r4, #44]	; 0x2c
   30d4c:	str	r6, [r4, #48]	; 0x30
   30d50:	b	30b68 <contractText@@Base+0x6c4>
   30d54:	ldr	r3, [r6, r3]
   30d58:	ldrb	r2, [r8, #60]	; 0x3c
   30d5c:	str	r3, [fp, #-200]	; 0xffffff38
   30d60:	ldrb	r3, [r3, #38]	; 0x26
   30d64:	cmp	r2, r3
   30d68:	bne	30590 <contractText@@Base+0xec>
   30d6c:	ldr	ip, [fp, #-200]	; 0xffffff38
   30d70:	ldrb	r2, [r8, #61]	; 0x3d
   30d74:	ldrb	r3, [ip, #58]	; 0x3a
   30d78:	cmp	r2, r3
   30d7c:	bne	30590 <contractText@@Base+0xec>
   30d80:	rsb	r2, r5, r7
   30d84:	ldr	r3, [r8, #20]
   30d88:	asr	r2, r2, #2
   30d8c:	cmp	r2, r3
   30d90:	bne	30590 <contractText@@Base+0xec>
   30d94:	mov	r0, r5
   30d98:	bl	f770 <wmemcmp@plt>
   30d9c:	cmp	r0, #0
   30da0:	bne	30590 <contractText@@Base+0xec>
   30da4:	ldr	r3, [pc, #1964]	; 31558 <contractText@@Base+0x10b4>
   30da8:	cmp	r4, #0
   30dac:	ldr	r6, [r8, #24]
   30db0:	add	r3, pc, r3
   30db4:	add	r6, r5, r6, lsl #2
   30db8:	str	r6, [r3, #20]
   30dbc:	beq	30dd8 <contractText@@Base+0x934>
   30dc0:	ldr	r2, [r8, #52]	; 0x34
   30dc4:	mov	r0, r4
   30dc8:	ldr	r1, [r8, #44]	; 0x2c
   30dcc:	lsl	r2, r2, #2
   30dd0:	bl	fb24 <memcpy@plt>
   30dd4:	ldr	sl, [r8, #28]
   30dd8:	ldr	r2, [r8, #36]	; 0x24
   30ddc:	mov	r1, sl
   30de0:	ldr	r3, [pc, #1908]	; 3155c <contractText@@Base+0x10b8>
   30de4:	mov	r0, r9
   30de8:	add	r4, r9, r2
   30dec:	add	r3, pc, r3
   30df0:	str	r4, [r3, #4]
   30df4:	bl	fb24 <memcpy@plt>
   30df8:	mov	r3, r4
   30dfc:	b	30bc0 <contractText@@Base+0x71c>
   30e00:	orr	r4, r7, #127	; 0x7f
   30e04:	lsl	r0, r4, #2
   30e08:	bl	fb48 <malloc@plt>
   30e0c:	subs	r9, r0, #0
   30e10:	beq	31dd0 <contractText@@Base+0x192c>
   30e14:	ldr	r0, [r5, #12]
   30e18:	cmp	r0, #0
   30e1c:	beq	30e24 <contractText@@Base+0x980>
   30e20:	bl	f4f4 <free@plt>
   30e24:	mov	r0, r9
   30e28:	str	r9, [r5, #12]
   30e2c:	str	r4, [r5, #16]
   30e30:	b	30abc <contractText@@Base+0x618>
   30e34:	ldr	r8, [r9, #12]
   30e38:	ldr	r4, [r9, #8]
   30e3c:	add	r8, r4, r8, lsl #2
   30e40:	cmp	r4, r8
   30e44:	bcc	30e68 <contractText@@Base+0x9c4>
   30e48:	b	3072c <contractText@@Base+0x288>
   30e4c:	mov	r0, r5
   30e50:	mov	r1, r7
   30e54:	bl	fd64 <fputs@plt>
   30e58:	cmn	r0, #1
   30e5c:	beq	318dc <contractText@@Base+0x1438>
   30e60:	cmp	r8, r4
   30e64:	bls	3072c <contractText@@Base+0x288>
   30e68:	ldr	r0, [r4], #4
   30e6c:	mov	r1, r5
   30e70:	bl	27ecc <convertWcharToUtf8@@Base>
   30e74:	cmp	r0, #0
   30e78:	bne	30e4c <contractText@@Base+0x9a8>
   30e7c:	b	30c30 <contractText@@Base+0x78c>
   30e80:	ldr	r3, [r4, #28]
   30e84:	rsb	r8, r3, r8
   30e88:	ldr	r2, [pc, #1744]	; 31560 <contractText@@Base+0x10bc>
   30e8c:	mov	r0, #1
   30e90:	ldr	r4, [pc, #1740]	; 31564 <contractText@@Base+0x10c0>
   30e94:	add	r2, pc, r2
   30e98:	ldr	r6, [pc, #1736]	; 31568 <contractText@@Base+0x10c4>
   30e9c:	add	r4, pc, r4
   30ea0:	ldr	sl, [pc, #1732]	; 3156c <contractText@@Base+0x10c8>
   30ea4:	ldr	r3, [r2, #24]
   30ea8:	add	r6, pc, r6
   30eac:	ldr	r9, [pc, #1724]	; 31570 <contractText@@Base+0x10cc>
   30eb0:	add	sl, pc, sl
   30eb4:	cmp	r3, #0
   30eb8:	ldr	r7, [r4, #20]
   30ebc:	add	r9, pc, r9
   30ec0:	ldrne	r2, [r2, #12]
   30ec4:	rsbne	r2, r2, r5
   30ec8:	strne	r8, [r3, r2]
   30ecc:	ldr	r8, [pc, #1696]	; 31574 <contractText@@Base+0x10d0>
   30ed0:	add	r8, pc, r8
   30ed4:	cmp	r0, #0
   30ed8:	bne	30f14 <contractText@@Base+0xa70>
   30edc:	ldr	r3, [r4, #16]
   30ee0:	add	r7, r7, #4
   30ee4:	str	r7, [r4, #20]
   30ee8:	cmp	r7, r3
   30eec:	beq	30f8c <contractText@@Base+0xae8>
   30ef0:	ldr	r3, [r4, #24]
   30ef4:	cmp	r3, #0
   30ef8:	beq	30ed4 <contractText@@Base+0xa30>
   30efc:	ldr	r2, [r4, #12]
   30f00:	cmp	r0, #0
   30f04:	mvn	r1, #0
   30f08:	rsb	r2, r2, r7
   30f0c:	str	r1, [r3, r2]
   30f10:	beq	30edc <contractText@@Base+0xa38>
   30f14:	ldr	r0, [r7]
   30f18:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   30f1c:	cmp	r0, #0
   30f20:	beq	30f38 <contractText@@Base+0xa94>
   30f24:	ldr	r3, [r0, #12]
   30f28:	tst	r3, #1
   30f2c:	ldrne	r7, [r8, #20]
   30f30:	movne	r0, #1
   30f34:	bne	30edc <contractText@@Base+0xa38>
   30f38:	ldr	r3, [r6, #56]	; 0x38
   30f3c:	cmp	r3, #0
   30f40:	beq	30fa0 <contractText@@Base+0xafc>
   30f44:	cmp	r5, r3
   30f48:	bhi	30fa0 <contractText@@Base+0xafc>
   30f4c:	ldr	r7, [r6, #20]
   30f50:	cmp	r3, r7
   30f54:	movcc	r0, #0
   30f58:	bcc	30edc <contractText@@Base+0xa38>
   30f5c:	mov	r5, r7
   30f60:	ldr	r3, [sl, #24]
   30f64:	mov	r7, r5
   30f68:	ldr	r1, [sl, #4]
   30f6c:	mov	r0, #0
   30f70:	cmp	r3, #0
   30f74:	ldr	r2, [sl, #28]
   30f78:	rsb	r2, r2, r1
   30f7c:	ldrne	r1, [sl, #12]
   30f80:	rsbne	r1, r1, r5
   30f84:	strne	r2, [r3, r1]
   30f88:	b	30edc <contractText@@Base+0xa38>
   30f8c:	cmp	r0, #0
   30f90:	ldr	r6, [r4, #12]
   30f94:	mov	ip, r7
   30f98:	streq	r5, [r4, #20]
   30f9c:	b	30a98 <contractText@@Base+0x5f4>
   30fa0:	ldr	r5, [r9, #20]
   30fa4:	b	30f60 <contractText@@Base+0xabc>
   30fa8:	ldr	r3, [r6]
   30fac:	ldr	r3, [r3, #68]	; 0x44
   30fb0:	ldr	r3, [r3, #12]
   30fb4:	cmp	r3, #0
   30fb8:	bne	31858 <contractText@@Base+0x13b4>
   30fbc:	ldr	ip, [fp, #-200]	; 0xffffff38
   30fc0:	ldrb	r3, [ip, #58]	; 0x3a
   30fc4:	cmp	r3, #1
   30fc8:	beq	31b5c <contractText@@Base+0x16b8>
   30fcc:	ldr	r3, [pc, #1444]	; 31578 <contractText@@Base+0x10d4>
   30fd0:	add	r3, pc, r3
   30fd4:	ldr	r2, [r3, #20]
   30fd8:	ldr	r3, [pc, #1436]	; 3157c <contractText@@Base+0x10d8>
   30fdc:	add	r3, pc, r3
   30fe0:	ldr	ip, [r3, #40]	; 0x28
   30fe4:	sub	r1, ip, #8
   30fe8:	cmp	r1, #1
   30fec:	bhi	30ffc <contractText@@Base+0xb58>
   30ff0:	ldr	r1, [r3, #52]	; 0x34
   30ff4:	cmp	r1, #8
   30ff8:	beq	31a80 <contractText@@Base+0x15dc>
   30ffc:	ldr	r3, [pc, #1404]	; 31580 <contractText@@Base+0x10dc>
   31000:	add	r3, pc, r3
   31004:	ldr	r0, [r3, #32]
   31008:	ldr	r4, [r3, #36]	; 0x24
   3100c:	ldrb	r1, [r0, #17]
   31010:	cmp	r1, #0
   31014:	beq	313a0 <contractText@@Base+0xefc>
   31018:	cmp	ip, #6
   3101c:	bne	31028 <contractText@@Base+0xb84>
   31020:	cmp	r4, #1
   31024:	beq	313a0 <contractText@@Base+0xefc>
   31028:	ldr	r1, [r2]
   3102c:	add	r4, r2, r4, lsl #2
   31030:	bl	3030c <makeContractionTablePath@@Base+0x118c>
   31034:	cmp	r0, #0
   31038:	beq	30a2c <contractText@@Base+0x588>
   3103c:	ldr	r1, [pc, #1344]	; 31584 <contractText@@Base+0x10e0>
   31040:	mvn	r0, #0
   31044:	add	r1, pc, r1
   31048:	ldr	r3, [r1, #20]
   3104c:	ldr	r2, [r1, #24]
   31050:	ldr	r1, [r1, #12]
   31054:	b	31064 <contractText@@Base+0xbc0>
   31058:	cmp	r2, #0
   3105c:	rsbne	ip, r1, r3
   31060:	strne	r0, [r2, ip]
   31064:	add	r3, r3, #4
   31068:	cmp	r4, r3
   3106c:	bne	31058 <contractText@@Base+0xbb4>
   31070:	ldr	r3, [pc, #1296]	; 31588 <contractText@@Base+0x10e4>
   31074:	str	r4, [fp, #-208]	; 0xffffff30
   31078:	add	r3, pc, r3
   3107c:	str	r4, [r3, #20]
   31080:	ldr	r3, [pc, #1284]	; 3158c <contractText@@Base+0x10e8>
   31084:	add	r3, pc, r3
   31088:	ldr	r2, [r3, #40]	; 0x28
   3108c:	cmp	r2, #7
   31090:	beq	3191c <contractText@@Base+0x1478>
   31094:	cmp	r2, #11
   31098:	bne	31914 <contractText@@Base+0x1470>
   3109c:	ldr	r2, [r3, #16]
   310a0:	ldr	r1, [fp, #-208]	; 0xffffff30
   310a4:	ldr	r3, [r3, #4]
   310a8:	cmp	r1, r2
   310ac:	str	r3, [fp, #-236]	; 0xffffff14
   310b0:	movcs	r3, r1
   310b4:	movcs	r4, r3
   310b8:	bcs	31100 <contractText@@Base+0xc5c>
   310bc:	ldr	r5, [pc, #1228]	; 31590 <contractText@@Base+0x10ec>
   310c0:	mvn	r4, #0
   310c4:	ldr	r6, [pc, #1224]	; 31594 <contractText@@Base+0x10f0>
   310c8:	ldr	r3, [fp, #-208]	; 0xffffff30
   310cc:	add	r5, pc, r5
   310d0:	add	r6, pc, r6
   310d4:	ldr	r0, [r3]
   310d8:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   310dc:	cmp	r0, #0
   310e0:	beq	31724 <contractText@@Base+0x1280>
   310e4:	ldr	r3, [r0, #12]
   310e8:	tst	r3, #1
   310ec:	bne	316b4 <contractText@@Base+0x1210>
   310f0:	ldr	r3, [pc, #1184]	; 31598 <contractText@@Base+0x10f4>
   310f4:	ldr	r4, [fp, #-208]	; 0xffffff30
   310f8:	add	r3, pc, r3
   310fc:	ldr	r3, [r3, #20]
   31100:	cmp	r4, #0
   31104:	beq	31124 <contractText@@Base+0xc80>
   31108:	ldr	r1, [pc, #1164]	; 3159c <contractText@@Base+0x10f8>
   3110c:	add	r1, pc, r1
   31110:	ldr	r2, [r1, #56]	; 0x38
   31114:	cmp	r4, r2
   31118:	bhi	31124 <contractText@@Base+0xc80>
   3111c:	cmp	r2, r3
   31120:	bcc	319f8 <contractText@@Base+0x1554>
   31124:	mov	r4, r3
   31128:	ldr	r3, [pc, #1136]	; 315a0 <contractText@@Base+0x10fc>
   3112c:	sub	r6, r9, #-1073741823	; 0xc0000001
   31130:	mov	r5, #1
   31134:	add	r3, pc, r3
   31138:	ldr	r3, [r3, #12]
   3113c:	rsb	r4, r3, r4
   31140:	add	r6, r3, r6, lsl #2
   31144:	asr	r4, r4, #2
   31148:	cmp	r4, r9
   3114c:	bcc	31440 <contractText@@Base+0xf9c>
   31150:	ldr	r0, [r6, #4]!
   31154:	movw	r1, #4104	; 0x1008
   31158:	str	sl, [fp, #-152]	; 0xffffff68
   3115c:	bl	f830 <u_getIntPropertyValue_50@plt>
   31160:	cmp	r0, #9
   31164:	beq	31400 <contractText@@Base+0xf5c>
   31168:	cmp	r8, #26
   3116c:	add	r2, r7, r9
   31170:	beq	31698 <contractText@@Base+0x11f4>
   31174:	cmp	r7, r2
   31178:	str	r8, [fp, #-196]	; 0xffffff3c
   3117c:	beq	316a0 <contractText@@Base+0x11fc>
   31180:	cmp	r8, #6
   31184:	beq	3164c <contractText@@Base+0x11a8>
   31188:	cmp	r8, #10
   3118c:	beq	3165c <contractText@@Base+0x11b8>
   31190:	cmp	r8, #17
   31194:	beq	31634 <contractText@@Base+0x1190>
   31198:	cmp	r8, #29
   3119c:	beq	31634 <contractText@@Base+0x1190>
   311a0:	cmp	r0, #10
   311a4:	cmpne	r0, #6
   311a8:	movne	r2, #0
   311ac:	moveq	r2, #1
   311b0:	beq	31684 <contractText@@Base+0x11e0>
   311b4:	cmp	r0, #17
   311b8:	beq	31684 <contractText@@Base+0x11e0>
   311bc:	cmp	r0, #29
   311c0:	beq	31684 <contractText@@Base+0x11e0>
   311c4:	cmp	r0, #26
   311c8:	cmpne	r0, #28
   311cc:	movne	r1, #0
   311d0:	moveq	r1, #1
   311d4:	beq	319e8 <contractText@@Base+0x1544>
   311d8:	cmp	r8, #28
   311dc:	beq	31634 <contractText@@Base+0x1190>
   311e0:	cmp	r8, #30
   311e4:	beq	31684 <contractText@@Base+0x11e0>
   311e8:	cmp	r0, #30
   311ec:	beq	31684 <contractText@@Base+0x11e0>
   311f0:	cmp	r8, #26
   311f4:	beq	31214 <contractText@@Base+0xd70>
   311f8:	cmp	r0, #12
   311fc:	strbeq	r1, [r7, r9]
   31200:	moveq	sl, r8
   31204:	moveq	r8, r0
   31208:	beq	31434 <contractText@@Base+0xf90>
   3120c:	cmp	r8, #12
   31210:	beq	31684 <contractText@@Base+0x11e0>
   31214:	bic	r2, r0, #16
   31218:	cmp	r2, #11
   3121c:	cmpne	r0, #8
   31220:	movne	r2, #0
   31224:	moveq	r2, #1
   31228:	beq	31684 <contractText@@Base+0x11e0>
   3122c:	cmp	r0, #16
   31230:	beq	31684 <contractText@@Base+0x11e0>
   31234:	ldr	r3, [fp, #-196]	; 0xffffff3c
   31238:	cmp	r3, #20
   3123c:	beq	319e8 <contractText@@Base+0x1544>
   31240:	ldr	ip, [fp, #-196]	; 0xffffff3c
   31244:	cmp	ip, #23
   31248:	beq	319e0 <contractText@@Base+0x153c>
   3124c:	ldr	r3, [fp, #-196]	; 0xffffff3c
   31250:	cmp	r3, #8
   31254:	bne	31f50 <contractText@@Base+0x1aac>
   31258:	cmp	r0, #18
   3125c:	beq	319e8 <contractText@@Base+0x1544>
   31260:	cmp	r8, #26
   31264:	beq	31634 <contractText@@Base+0x1190>
   31268:	cmp	r8, #23
   3126c:	beq	31684 <contractText@@Base+0x11e0>
   31270:	cmp	r0, #23
   31274:	beq	31684 <contractText@@Base+0x11e0>
   31278:	cmp	r0, #7
   3127c:	beq	31634 <contractText@@Base+0x1190>
   31280:	cmp	r8, #7
   31284:	beq	31634 <contractText@@Base+0x1190>
   31288:	cmp	r0, #13
   3128c:	cmpne	r0, #4
   31290:	beq	31684 <contractText@@Base+0x11e0>
   31294:	cmp	r0, #18
   31298:	beq	31684 <contractText@@Base+0x11e0>
   3129c:	cmp	r8, #5
   312a0:	beq	31684 <contractText@@Base+0x11e0>
   312a4:	cmp	r0, #15
   312a8:	beq	31f84 <contractText@@Base+0x1ae0>
   312ac:	cmp	r8, #14
   312b0:	beq	320a8 <contractText@@Base+0x1c04>
   312b4:	cmp	r8, #2
   312b8:	beq	3209c <contractText@@Base+0x1bf8>
   312bc:	cmp	r8, #19
   312c0:	beq	32044 <contractText@@Base+0x1ba0>
   312c4:	cmp	r8, #22
   312c8:	beq	3208c <contractText@@Base+0x1be8>
   312cc:	cmp	r8, #21
   312d0:	beq	32064 <contractText@@Base+0x1bc0>
   312d4:	cmp	r8, #8
   312d8:	beq	3207c <contractText@@Base+0x1bd8>
   312dc:	cmp	r8, #19
   312e0:	beq	3204c <contractText@@Base+0x1ba8>
   312e4:	cmp	r8, #22
   312e8:	beq	3206c <contractText@@Base+0x1bc8>
   312ec:	cmp	r8, #13
   312f0:	beq	3209c <contractText@@Base+0x1bf8>
   312f4:	cmp	r8, #16
   312f8:	beq	32058 <contractText@@Base+0x1bb4>
   312fc:	cmp	r8, #19
   31300:	beq	32058 <contractText@@Base+0x1bb4>
   31304:	cmp	r8, #27
   31308:	beq	32058 <contractText@@Base+0x1bb4>
   3130c:	cmp	r8, #33	; 0x21
   31310:	beq	3201c <contractText@@Base+0x1b78>
   31314:	cmp	r8, #35	; 0x23
   31318:	cmpne	r8, #31
   3131c:	bne	3132c <contractText@@Base+0xe88>
   31320:	sub	r2, r0, #34	; 0x22
   31324:	cmp	r2, #1
   31328:	bls	31684 <contractText@@Base+0x11e0>
   3132c:	bic	r2, r8, #2
   31330:	cmp	r2, #32
   31334:	bne	32000 <contractText@@Base+0x1b5c>
   31338:	cmp	r0, #34	; 0x22
   3133c:	beq	31684 <contractText@@Base+0x11e0>
   31340:	cmp	r8, #34	; 0x22
   31344:	beq	32008 <contractText@@Base+0x1b64>
   31348:	sub	r2, r8, #31
   3134c:	cmp	r2, #1
   31350:	bls	32008 <contractText@@Base+0x1b64>
   31354:	cmp	r8, #22
   31358:	beq	31ff0 <contractText@@Base+0x1b4c>
   3135c:	cmp	r8, #2
   31360:	beq	31fd8 <contractText@@Base+0x1b34>
   31364:	cmp	r8, #16
   31368:	beq	31fb0 <contractText@@Base+0x1b0c>
   3136c:	cmp	r8, #2
   31370:	cmpne	r8, #19
   31374:	bne	31380 <contractText@@Base+0xedc>
   31378:	cmp	r0, #20
   3137c:	beq	31684 <contractText@@Base+0x11e0>
   31380:	cmp	r8, #8
   31384:	beq	31678 <contractText@@Base+0x11d4>
   31388:	cmp	r8, #13
   3138c:	beq	31f74 <contractText@@Base+0x1ad0>
   31390:	mov	sl, r8
   31394:	strb	r5, [r7, r9]
   31398:	mov	r8, r0
   3139c:	b	31434 <contractText@@Base+0xf90>
   313a0:	ldr	r5, [pc, #508]	; 315a4 <contractText@@Base+0x1100>
   313a4:	add	r4, r2, r4, lsl #2
   313a8:	add	r5, pc, r5
   313ac:	b	313ec <contractText@@Base+0xf48>
   313b0:	ldr	r3, [r5, #20]
   313b4:	add	r3, r3, #4
   313b8:	str	r3, [r5, #20]
   313bc:	cmp	r4, r3
   313c0:	beq	318d4 <contractText@@Base+0x1430>
   313c4:	ldr	r1, [r5, #24]
   313c8:	ldr	r2, [r5, #28]
   313cc:	cmp	r1, #0
   313d0:	ldr	r0, [r5, #4]
   313d4:	ldrne	ip, [r5, #12]
   313d8:	rsbne	r0, r2, r0
   313dc:	movne	r2, r3
   313e0:	moveq	r2, r3
   313e4:	rsbne	r3, ip, r3
   313e8:	strne	r0, [r1, r3]
   313ec:	ldr	r0, [r2]
   313f0:	bl	303d8 <makeContractionTablePath@@Base+0x1258>
   313f4:	cmp	r0, #0
   313f8:	bne	313b0 <contractText@@Base+0xf0c>
   313fc:	b	30a2c <contractText@@Base+0x588>
   31400:	bic	r2, r8, #16
   31404:	cmp	r2, #10
   31408:	cmpne	r8, #6
   3140c:	beq	31644 <contractText@@Base+0x11a0>
   31410:	cmp	r8, #17
   31414:	beq	31644 <contractText@@Base+0x11a0>
   31418:	sub	sl, r8, #28
   3141c:	cmp	sl, #1
   31420:	movhi	sl, r8
   31424:	movls	sl, #2
   31428:	mov	r8, sl
   3142c:	mov	r2, #0
   31430:	strb	r2, [r7, r9]
   31434:	add	r9, r9, #1
   31438:	cmp	r4, r9
   3143c:	bcs	31150 <contractText@@Base+0xcac>
   31440:	ldr	r3, [pc, #352]	; 315a8 <contractText@@Base+0x1104>
   31444:	add	r3, pc, r3
   31448:	ldr	r5, [r3, #20]
   3144c:	ldr	r2, [r3, #12]
   31450:	rsb	r2, r2, r5
   31454:	ldrb	r2, [r7, r2, asr #2]
   31458:	cmp	r2, #0
   3145c:	bne	31700 <contractText@@Base+0x125c>
   31460:	ldr	r3, [r3, #4]
   31464:	ldr	r2, [pc, #320]	; 315ac <contractText@@Base+0x1108>
   31468:	add	r2, pc, r2
   3146c:	ldr	r2, [r2, #28]
   31470:	cmp	r2, r3
   31474:	beq	31484 <contractText@@Base+0xfe0>
   31478:	ldrb	r3, [r3, #-1]
   3147c:	cmp	r3, #0
   31480:	beq	31494 <contractText@@Base+0xff0>
   31484:	ldr	r3, [pc, #292]	; 315b0 <contractText@@Base+0x110c>
   31488:	add	r3, pc, r3
   3148c:	ldr	r2, [r3, #40]	; 0x28
   31490:	str	r2, [r3, #52]	; 0x34
   31494:	ldr	r3, [pc, #280]	; 315b4 <contractText@@Base+0x1110>
   31498:	ldr	r4, [fp, #-212]	; 0xffffff2c
   3149c:	add	r3, pc, r3
   314a0:	ldr	ip, [r3, #16]
   314a4:	b	30934 <contractText@@Base+0x490>
   314a8:			; <UNDEFINED> instruction: 0x000425bc
   314ac:			; <UNDEFINED> instruction: 0x000003b4
   314b0:	andeq	r3, r4, r8, asr #14
   314b4:	ldrdeq	r3, [r4], -ip
   314b8:	andeq	r0, r0, r0, asr #10
   314bc:	andeq	r3, r4, r8, asr #12
   314c0:	andeq	r0, r2, r4, ror r2
   314c4:	andeq	r5, r2, ip, lsl r2
   314c8:	strdeq	r3, [r4], -r0
   314cc:	andeq	r0, r2, r0, lsr r2
   314d0:			; <UNDEFINED> instruction: 0x000212b0
   314d4:	muleq	r2, ip, r1
   314d8:	andeq	r9, r2, r4, lsl #5
   314dc:	andeq	r5, r2, r8, ror #2
   314e0:	andeq	r3, r4, r0, asr #9
   314e4:	andeq	r5, r2, r8, ror #2
   314e8:	andeq	r3, r4, ip, lsr #9
   314ec:	andeq	pc, r3, r0, lsl #28
   314f0:	andeq	r3, r4, ip, lsl #9
   314f4:	andeq	r5, r2, ip, rrx
   314f8:	andeq	r3, r4, r0, ror #7
   314fc:	andeq	r3, r4, ip, lsl #7
   31500:	andeq	r3, r4, ip, lsr r3
   31504:	andeq	r3, r4, r4, lsr r3
   31508:	andeq	r3, r4, r4, lsr #6
   3150c:	andeq	r3, r4, r8, lsl r3
   31510:	andeq	r3, r4, r0, lsl #6
   31514:	strdeq	r3, [r4], -r8
   31518:	andeq	r3, r4, r8, ror r2
   3151c:	andeq	r3, r4, r4, lsr r2
   31520:	strdeq	r3, [r4], -r4
   31524:			; <UNDEFINED> instruction: 0x000431b4
   31528:	muleq	r4, r4, r1
   3152c:	andeq	r3, r4, r4, lsl #3
   31530:	andeq	r3, r4, r0, asr r1
   31534:	andeq	r3, r4, r4, lsr r1
   31538:	andeq	r3, r4, r4, lsl #2
   3153c:	strdeq	r3, [r4], -r0
   31540:	andeq	r3, r4, r4, lsr #1
   31544:	muleq	r4, ip, r0
   31548:	andeq	r3, r4, r0, lsl r0
   3154c:	andeq	r4, r2, r0, asr #24
   31550:	strdeq	r2, [r4], -r0
   31554:	strdeq	r0, [r0], -ip
   31558:	andeq	r2, r4, r4, ror lr
   3155c:	andeq	r2, r4, r8, lsr lr
   31560:	muleq	r4, r0, sp
   31564:	andeq	r2, r4, r8, lsl #27
   31568:	andeq	r2, r4, ip, ror sp
   3156c:	andeq	r2, r4, r4, ror sp
   31570:	andeq	r2, r4, r8, ror #26
   31574:	andeq	r2, r4, r4, asr sp
   31578:	andeq	r2, r4, r4, asr ip
   3157c:	andeq	r2, r4, r8, asr #24
   31580:	andeq	r2, r4, r4, lsr #24
   31584:	andeq	r2, r4, r0, ror #23
   31588:	andeq	r2, r4, ip, lsr #23
   3158c:	andeq	r2, r4, r0, lsr #23
   31590:	andeq	r2, r4, r8, asr fp
   31594:	andeq	r2, r4, r4, asr fp
   31598:	andeq	r2, r4, ip, lsr #22
   3159c:	andeq	r2, r4, r8, lsl fp
   315a0:	strdeq	r2, [r4], -r0
   315a4:	andeq	r2, r4, ip, ror r8
   315a8:	andeq	r2, r4, r0, ror #15
   315ac:			; <UNDEFINED> instruction: 0x000427bc
   315b0:	muleq	r4, ip, r7
   315b4:	andeq	r2, r4, r8, lsl #15
   315b8:	andeq	r2, r4, r8, lsr r5
   315bc:	strdeq	r2, [r4], -r8
   315c0:	ldrdeq	r2, [r4], -r0
   315c4:	andeq	r2, r4, r0, lsl #9
   315c8:	ldrdeq	r2, [r4], -r8
   315cc:	andeq	r2, r4, r8, asr #7
   315d0:	andeq	r2, r4, r0, ror r3
   315d4:	andeq	r2, r4, r4, asr #6
   315d8:	andeq	r3, r2, r8, lsr #31
   315dc:	andeq	r2, r4, r0, ror #5
   315e0:	ldrdeq	r2, [r4], -ip
   315e4:	andeq	r0, r0, r0, asr #10
   315e8:	ldrdeq	r2, [r4], -ip
   315ec:	andeq	r2, r4, r8, asr r1
   315f0:	andeq	r2, r4, r8, asr #2
   315f4:			; <UNDEFINED> instruction: 0x00023dbc
   315f8:	andeq	r2, r4, r4, asr #1
   315fc:	andeq	r2, r4, r4, rrx
   31600:	andeq	r2, r4, r0, asr r0
   31604:	andeq	r1, r4, r4, ror pc
   31608:	andeq	r1, r4, ip, asr #29
   3160c:			; <UNDEFINED> instruction: 0x00041eb8
   31610:	andeq	r1, r4, ip, lsl #29
   31614:	andeq	r1, r4, r0, ror lr
   31618:	andeq	r1, r4, r0, asr #28
   3161c:	andeq	r1, r4, r4, lsl #28
   31620:	andeq	r1, r4, r8, ror #27
   31624:			; <UNDEFINED> instruction: 0x00041dbc
   31628:	muleq	r4, r8, sp
   3162c:	andeq	r1, r4, ip, asr #26
   31630:	andeq	r1, r4, r0, ror #25
   31634:	mov	sl, r8
   31638:	strb	r5, [r7, r9]
   3163c:	mov	r8, r0
   31640:	b	31434 <contractText@@Base+0xf90>
   31644:	mov	sl, #2
   31648:	b	31428 <contractText@@Base+0xf84>
   3164c:	strb	r5, [r7, r9]
   31650:	mov	r8, r0
   31654:	ldr	sl, [fp, #-196]	; 0xffffff3c
   31658:	b	31434 <contractText@@Base+0xf90>
   3165c:	cmp	r0, #17
   31660:	bne	31634 <contractText@@Base+0x1190>
   31664:	mov	r2, #0
   31668:	mov	r8, r0
   3166c:	ldr	sl, [fp, #-196]	; 0xffffff3c
   31670:	strb	r2, [r7, r9]
   31674:	b	31434 <contractText@@Base+0xf90>
   31678:	cmp	r0, #2
   3167c:	cmpne	r0, #19
   31680:	bne	31390 <contractText@@Base+0xeec>
   31684:	mov	sl, r8
   31688:	mov	r2, #0
   3168c:	mov	r8, r0
   31690:	strb	r2, [r7, r9]
   31694:	b	31434 <contractText@@Base+0xf90>
   31698:	cmp	r7, r2
   3169c:	bne	311a0 <contractText@@Base+0xcfc>
   316a0:	mov	sl, r8
   316a4:	mov	r2, #0
   316a8:	mov	r8, r0
   316ac:	strb	r2, [r7]
   316b0:	b	31434 <contractText@@Base+0xf90>
   316b4:	ldr	r2, [r5, #24]
   316b8:	ldr	r3, [r5, #20]
   316bc:	cmp	r2, #0
   316c0:	ldrne	r1, [r5, #12]
   316c4:	rsbne	r1, r1, r3
   316c8:	strne	r4, [r2, r1]
   316cc:	ldr	r2, [r6, #16]
   316d0:	add	r3, r3, #4
   316d4:	str	r3, [r6, #20]
   316d8:	cmp	r3, r2
   316dc:	bcc	310d4 <contractText@@Base+0xc30>
   316e0:	ldr	r4, [fp, #-208]	; 0xffffff30
   316e4:	b	31100 <contractText@@Base+0xc5c>
   316e8:	ldr	r3, [pc, #-312]	; 315b8 <contractText@@Base+0x1114>
   316ec:	add	r3, pc, r3
   316f0:	ldr	r8, [r3, #4]
   316f4:	ldr	r3, [r3, #28]
   316f8:	rsb	r8, r3, r8
   316fc:	b	30e88 <contractText@@Base+0x9e4>
   31700:	ldr	r2, [r3, #40]	; 0x28
   31704:	ldr	r3, [r3, #4]
   31708:	cmp	r2, #11
   3170c:	str	r5, [fp, #-224]	; 0xffffff20
   31710:	movne	r2, r5
   31714:	str	r3, [fp, #-172]	; 0xffffff54
   31718:	strne	r3, [fp, #-176]	; 0xffffff50
   3171c:	strne	r2, [fp, #-228]	; 0xffffff1c
   31720:	b	31464 <contractText@@Base+0xfc0>
   31724:	ldr	r3, [pc, #-368]	; 315bc <contractText@@Base+0x1118>
   31728:	ldr	r4, [fp, #-208]	; 0xffffff30
   3172c:	add	r3, pc, r3
   31730:	ldr	r3, [r3, #20]
   31734:	b	31100 <contractText@@Base+0xc5c>
   31738:	mov	r0, #1
   3173c:	bl	2f938 <makeContractionTablePath@@Base+0x7b8>
   31740:	cmp	r0, #0
   31744:	bne	317e4 <contractText@@Base+0x1340>
   31748:	mov	r4, r0
   3174c:	ldr	r5, [pc, #-404]	; 315c0 <contractText@@Base+0x111c>
   31750:	mov	r2, #6
   31754:	add	r5, pc, r5
   31758:	ldr	r3, [r5, #20]
   3175c:	str	r2, [r5, #40]	; 0x28
   31760:	ldr	r0, [r3]
   31764:	bl	303d8 <makeContractionTablePath@@Base+0x1258>
   31768:	cmp	r0, #0
   3176c:	beq	30a2c <contractText@@Base+0x588>
   31770:	ldr	r3, [r5, #20]
   31774:	str	r4, [fp, #-212]	; 0xffffff2c
   31778:	add	r4, r3, #4
   3177c:	str	r4, [r5, #20]
   31780:	b	31128 <contractText@@Base+0xc84>
   31784:	ldr	r0, [r5]
   31788:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   3178c:	cmp	r0, #0
   31790:	beq	317a0 <contractText@@Base+0x12fc>
   31794:	ldr	r3, [r0, #12]
   31798:	tst	r3, #1
   3179c:	bne	31a18 <contractText@@Base+0x1574>
   317a0:	ldr	r6, [pc, #-484]	; 315c4 <contractText@@Base+0x1120>
   317a4:	add	r6, pc, r6
   317a8:	ldr	r3, [r6, #20]
   317ac:	ldr	r0, [r3, #-4]
   317b0:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   317b4:	cmp	r0, #0
   317b8:	beq	30994 <contractText@@Base+0x4f0>
   317bc:	ldr	r3, [r0, #12]
   317c0:	tst	r3, #1
   317c4:	beq	30994 <contractText@@Base+0x4f0>
   317c8:	ldr	ip, [r6, #16]
   317cc:	ldr	r0, [r6, #20]
   317d0:	rsb	r0, r0, ip
   317d4:	asr	r0, r0, #2
   317d8:	bl	2f938 <makeContractionTablePath@@Base+0x7b8>
   317dc:	cmp	r0, #0
   317e0:	beq	31738 <contractText@@Base+0x1294>
   317e4:	ldr	ip, [fp, #-220]	; 0xffffff24
   317e8:	ldr	r3, [ip, #40]	; 0x28
   317ec:	cmp	r3, #5
   317f0:	beq	31e9c <contractText@@Base+0x19f8>
   317f4:	ldr	ip, [fp, #-200]	; 0xffffff38
   317f8:	ldrb	r3, [ip, #38]	; 0x26
   317fc:	cmp	r3, #0
   31800:	beq	31ca4 <contractText@@Base+0x1800>
   31804:	ldr	r2, [fp, #-220]	; 0xffffff24
   31808:	ldr	r1, [r2, #56]	; 0x38
   3180c:	ldr	r3, [r2, #20]
   31810:	cmp	r1, r3
   31814:	bcc	31e2c <contractText@@Base+0x1988>
   31818:	ldr	r2, [r2, #36]	; 0x24
   3181c:	add	r2, r3, r2, lsl #2
   31820:	cmp	r1, r2
   31824:	bcs	31ca0 <contractText@@Base+0x17fc>
   31828:	str	r2, [fp, #-212]	; 0xffffff2c
   3182c:	ldr	r0, [r3]
   31830:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31834:	cmp	r0, #0
   31838:	beq	31e78 <contractText@@Base+0x19d4>
   3183c:	ldr	r3, [r0, #12]
   31840:	tst	r3, #1
   31844:	beq	31e78 <contractText@@Base+0x19d4>
   31848:	ldr	r3, [pc, #-648]	; 315c8 <contractText@@Base+0x1124>
   3184c:	add	r3, pc, r3
   31850:	ldr	r5, [r3, #20]
   31854:	b	31494 <contractText@@Base+0xff0>
   31858:	ldr	r6, [pc, #-660]	; 315cc <contractText@@Base+0x1128>
   3185c:	add	r6, pc, r6
   31860:	ldr	r3, [r6, #20]
   31864:	ldr	r0, [r3]
   31868:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   3186c:	cmp	r0, #0
   31870:	beq	30fbc <contractText@@Base+0xb18>
   31874:	ldr	r3, [r0, #12]
   31878:	tst	r3, #2
   3187c:	beq	30fbc <contractText@@Base+0xb18>
   31880:	ldr	r3, [r6, #40]	; 0x28
   31884:	cmp	r3, #13
   31888:	beq	318b0 <contractText@@Base+0x140c>
   3188c:	cmp	r3, #25
   31890:	beq	31bd0 <contractText@@Base+0x172c>
   31894:	ldr	r0, [r6, #48]	; 0x30
   31898:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   3189c:	cmp	r0, #0
   318a0:	beq	31bd0 <contractText@@Base+0x172c>
   318a4:	ldr	r3, [r0, #12]
   318a8:	tst	r3, #4
   318ac:	beq	31bd0 <contractText@@Base+0x172c>
   318b0:	ldr	r3, [pc, #-744]	; 315d0 <contractText@@Base+0x112c>
   318b4:	add	r3, pc, r3
   318b8:	ldr	r3, [r3]
   318bc:	ldr	r3, [r3, #68]	; 0x44
   318c0:	ldr	r0, [r3, #12]
   318c4:	bl	2f3a4 <makeContractionTablePath@@Base+0x224>
   318c8:	cmp	r0, #0
   318cc:	bne	30fbc <contractText@@Base+0xb18>
   318d0:	b	30a2c <contractText@@Base+0x588>
   318d4:	str	r4, [fp, #-208]	; 0xffffff30
   318d8:	b	31080 <contractText@@Base+0xbdc>
   318dc:	ldr	r3, [pc, #-784]	; 315d4 <contractText@@Base+0x1130>
   318e0:	add	r3, pc, r3
   318e4:	ldr	r3, [r3]
   318e8:	ldr	r4, [r3, #64]	; 0x40
   318ec:	bl	fca4 <__errno_location@plt>
   318f0:	ldr	r0, [r0]
   318f4:	bl	f5c0 <strerror@plt>
   318f8:	ldr	r1, [pc, #-808]	; 315d8 <contractText@@Base+0x1134>
   318fc:	mov	r2, r4
   31900:	add	r1, pc, r1
   31904:	mov	r3, r0
   31908:	mov	r0, #4
   3190c:	bl	1c634 <logMessage@@Base>
   31910:	b	30c30 <contractText@@Base+0x78c>
   31914:	ldr	r4, [fp, #-208]	; 0xffffff30
   31918:	b	31128 <contractText@@Base+0xc84>
   3191c:	ldr	r4, [r3, #36]	; 0x24
   31920:	mvn	r5, #0
   31924:	ldr	r3, [r3, #16]
   31928:	ldr	r2, [pc, #-852]	; 315dc <contractText@@Base+0x1138>
   3192c:	lsl	r4, r4, #2
   31930:	ldr	r6, [pc, #-856]	; 315e0 <contractText@@Base+0x113c>
   31934:	rsb	r4, r4, #0
   31938:	ldr	r0, [fp, #-208]	; 0xffffff30
   3193c:	add	r3, r3, r4
   31940:	ldr	ip, [fp, #-168]	; 0xffffff58
   31944:	add	r2, pc, r2
   31948:	add	r6, pc, r6
   3194c:	add	r4, r0, r4
   31950:	str	sl, [fp, #-252]	; 0xffffff04
   31954:	str	r4, [fp, #-248]	; 0xffffff08
   31958:	mov	sl, r2
   3195c:	mov	r4, r3
   31960:	str	ip, [fp, #-236]	; 0xffffff14
   31964:	cmp	r0, r4
   31968:	bhi	31ba8 <contractText@@Base+0x1704>
   3196c:	bl	2f7c8 <makeContractionTablePath@@Base+0x648>
   31970:	cmp	r0, #0
   31974:	beq	31bb8 <contractText@@Base+0x1714>
   31978:	ldr	ip, [r6, #36]	; 0x24
   3197c:	ldr	r0, [r6, #20]
   31980:	ldr	r2, [r6, #24]
   31984:	ldr	lr, [r6, #12]
   31988:	add	ip, r0, ip, lsl #2
   3198c:	mov	r3, r0
   31990:	cmp	r2, #0
   31994:	rsbne	r1, lr, r3
   31998:	add	r3, r3, #4
   3199c:	strne	r5, [r2, r1]
   319a0:	cmp	ip, r3
   319a4:	bne	31990 <contractText@@Base+0x14ec>
   319a8:	add	r3, r0, #4
   319ac:	rsb	r3, r3, ip
   319b0:	bic	r3, r3, #3
   319b4:	add	r3, r3, #4
   319b8:	add	r0, r0, r3
   319bc:	str	r0, [sl, #20]
   319c0:	b	31964 <contractText@@Base+0x14c0>
   319c4:	ldr	r3, [r8, #64]	; 0x40
   319c8:	cmp	r3, #0
   319cc:	ldr	r3, [pc, #-1008]	; 315e4 <contractText@@Base+0x1140>
   319d0:	ldr	r3, [r6, r3]
   319d4:	str	r3, [fp, #-200]	; 0xffffff38
   319d8:	bne	305a4 <contractText@@Base+0x100>
   319dc:	b	30888 <contractText@@Base+0x3e4>
   319e0:	cmp	r0, #20
   319e4:	bne	31260 <contractText@@Base+0xdbc>
   319e8:	mov	sl, r8
   319ec:	strb	r2, [r7, r9]
   319f0:	mov	r8, r0
   319f4:	b	31434 <contractText@@Base+0xf90>
   319f8:	ldr	r2, [fp, #-212]	; 0xffffff2c
   319fc:	cmp	r2, #0
   31a00:	beq	31eb0 <contractText@@Base+0x1a0c>
   31a04:	ldr	r2, [fp, #-208]	; 0xffffff30
   31a08:	str	r3, [fp, #-212]	; 0xffffff2c
   31a0c:	str	r2, [r1, #20]
   31a10:	mov	r4, r2
   31a14:	b	31128 <contractText@@Base+0xc84>
   31a18:	ldr	r3, [fp, #-216]	; 0xffffff28
   31a1c:	ldr	ip, [r3, #16]
   31a20:	ldr	r0, [r3, #20]
   31a24:	b	317d0 <contractText@@Base+0x132c>
   31a28:	bl	1c740 <logMallocError@@Base>
   31a2c:	ldr	r4, [sl]
   31a30:	ldr	r5, [sl, #12]
   31a34:	str	r9, [r4, #52]	; 0x34
   31a38:	b	30b78 <contractText@@Base+0x6d4>
   31a3c:	ldr	r3, [pc, #-1116]	; 315e8 <contractText@@Base+0x1144>
   31a40:	mov	r4, r1
   31a44:	strb	r6, [r5]
   31a48:	add	r3, pc, r3
   31a4c:	ldr	r3, [r3, #60]	; 0x3c
   31a50:	ldr	ip, [fp, #-208]	; 0xffffff30
   31a54:	mov	r0, #4
   31a58:	ldr	r1, [fp, #-204]	; 0xffffff34
   31a5c:	ldr	r2, [ip]
   31a60:	ldr	r2, [r2, #64]	; 0x40
   31a64:	bl	1c634 <logMessage@@Base>
   31a68:	b	30838 <contractText@@Base+0x394>
   31a6c:	mov	r3, r4
   31a70:	mov	r4, r5
   31a74:	b	31a50 <contractText@@Base+0x15ac>
   31a78:	mov	r0, r5
   31a7c:	b	317d0 <contractText@@Base+0x132c>
   31a80:	cmp	r4, r5
   31a84:	beq	30ffc <contractText@@Base+0xb58>
   31a88:	ldr	r1, [r3, #4]
   31a8c:	ldr	r0, [r3, #28]
   31a90:	cmp	r0, r1
   31a94:	bcs	31ad4 <contractText@@Base+0x1630>
   31a98:	ldrb	r3, [r1, #-1]
   31a9c:	cmp	r3, #0
   31aa0:	bne	31ad4 <contractText@@Base+0x1630>
   31aa4:	mov	r3, r1
   31aa8:	b	31ab8 <contractText@@Base+0x1614>
   31aac:	ldrb	r1, [r3, #-1]
   31ab0:	cmp	r1, #0
   31ab4:	bne	31d64 <contractText@@Base+0x18c0>
   31ab8:	sub	r3, r3, #1
   31abc:	cmp	r3, r0
   31ac0:	bne	31aac <contractText@@Base+0x1608>
   31ac4:	ldr	r3, [pc, #-1248]	; 315ec <contractText@@Base+0x1148>
   31ac8:	mov	r1, r0
   31acc:	add	r3, pc, r3
   31ad0:	str	r0, [r3, #4]
   31ad4:	ldr	lr, [pc, #-1260]	; 315f0 <contractText@@Base+0x114c>
   31ad8:	rsb	r0, r0, r1
   31adc:	add	lr, pc, lr
   31ae0:	ldr	r3, [lr, #24]
   31ae4:	cmp	r3, #0
   31ae8:	ldrne	lr, [lr, #12]
   31aec:	rsbne	lr, lr, r2
   31af0:	strne	r0, [r3, lr]
   31af4:	sub	lr, fp, #144	; 0x90
   31af8:	sub	r0, fp, #172	; 0xac
   31afc:	sub	r3, fp, #176	; 0xb0
   31b00:	str	r0, [fp, #-140]	; 0xffffff74
   31b04:	sub	r0, fp, #168	; 0xa8
   31b08:	str	r3, [fp, #-144]	; 0xffffff70
   31b0c:	str	r0, [fp, #-136]	; 0xffffff78
   31b10:	mov	r0, #0
   31b14:	str	r0, [fp, #-132]	; 0xffffff7c
   31b18:	ldr	r0, [r3]
   31b1c:	cmp	r0, #0
   31b20:	beq	31b2c <contractText@@Base+0x1688>
   31b24:	cmp	r0, r1
   31b28:	strhi	r1, [r3]
   31b2c:	ldr	r3, [lr, #4]!
   31b30:	cmp	r3, #0
   31b34:	bne	31b18 <contractText@@Base+0x1674>
   31b38:	b	30ffc <contractText@@Base+0xb58>
   31b3c:	ldr	r3, [r7]
   31b40:	mov	r0, #4
   31b44:	ldr	r1, [pc, #-1368]	; 315f4 <contractText@@Base+0x1150>
   31b48:	ldr	r6, [fp, #-212]	; 0xffffff2c
   31b4c:	add	r1, pc, r1
   31b50:	ldr	r2, [r3, #64]	; 0x40
   31b54:	bl	1c634 <logMessage@@Base>
   31b58:	b	30c30 <contractText@@Base+0x78c>
   31b5c:	ldr	r6, [pc, #-1388]	; 315f8 <contractText@@Base+0x1154>
   31b60:	add	r6, pc, r6
   31b64:	ldr	r3, [r6, #20]
   31b68:	ldr	r0, [r3]
   31b6c:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31b70:	cmp	r0, #0
   31b74:	beq	31cac <contractText@@Base+0x1808>
   31b78:	ldr	r3, [r0, #12]
   31b7c:	tst	r3, #16
   31b80:	beq	31cac <contractText@@Base+0x1808>
   31b84:	ldr	r0, [r6, #48]	; 0x30
   31b88:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31b8c:	cmp	r0, #0
   31b90:	beq	31de0 <contractText@@Base+0x193c>
   31b94:	ldr	r3, [r0, #12]
   31b98:	tst	r3, #16
   31b9c:	beq	31de0 <contractText@@Base+0x193c>
   31ba0:	ldr	r2, [r6, #20]
   31ba4:	b	30fd8 <contractText@@Base+0xb34>
   31ba8:	ldr	r4, [fp, #-248]	; 0xffffff08
   31bac:	mov	r3, r0
   31bb0:	ldr	sl, [fp, #-252]	; 0xffffff04
   31bb4:	b	31100 <contractText@@Base+0xc5c>
   31bb8:	ldr	r3, [pc, #-1476]	; 315fc <contractText@@Base+0x1158>
   31bbc:	ldr	r4, [fp, #-248]	; 0xffffff08
   31bc0:	add	r3, pc, r3
   31bc4:	ldr	sl, [fp, #-252]	; 0xffffff04
   31bc8:	ldr	r3, [r3, #20]
   31bcc:	b	31100 <contractText@@Base+0xc5c>
   31bd0:	ldr	r6, [pc, #-1496]	; 31600 <contractText@@Base+0x115c>
   31bd4:	add	r6, pc, r6
   31bd8:	ldr	r3, [r6, #20]
   31bdc:	ldr	r0, [r3]
   31be0:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31be4:	cmp	r0, #0
   31be8:	beq	30fbc <contractText@@Base+0xb18>
   31bec:	ldr	r3, [r0, #12]
   31bf0:	tst	r3, #2
   31bf4:	beq	30fbc <contractText@@Base+0xb18>
   31bf8:	ldr	r3, [r6, #40]	; 0x28
   31bfc:	cmp	r3, #6
   31c00:	bne	30fbc <contractText@@Base+0xb18>
   31c04:	ldr	r3, [r6, #36]	; 0x24
   31c08:	cmp	r3, #1
   31c0c:	bne	30fbc <contractText@@Base+0xb18>
   31c10:	ldr	r0, [r6, #48]	; 0x30
   31c14:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31c18:	cmp	r0, #0
   31c1c:	beq	30fbc <contractText@@Base+0xb18>
   31c20:	ldr	r3, [r0, #12]
   31c24:	tst	r3, #1
   31c28:	beq	30fbc <contractText@@Base+0xb18>
   31c2c:	ldr	r3, [r6, #20]
   31c30:	ldr	r1, [r6, #16]
   31c34:	add	r2, r3, #4
   31c38:	cmp	r1, r2
   31c3c:	beq	318b0 <contractText@@Base+0x140c>
   31c40:	ldr	r0, [r3, #4]
   31c44:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31c48:	cmp	r0, #0
   31c4c:	beq	31c5c <contractText@@Base+0x17b8>
   31c50:	ldr	r3, [r0, #12]
   31c54:	tst	r3, #1
   31c58:	bne	318b0 <contractText@@Base+0x140c>
   31c5c:	ldr	r2, [fp, #-244]	; 0xffffff0c
   31c60:	ldr	r3, [r2, #20]
   31c64:	ldr	r0, [r3, #4]
   31c68:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31c6c:	cmp	r0, #0
   31c70:	beq	30fbc <contractText@@Base+0xb18>
   31c74:	ldr	r3, [r0, #12]
   31c78:	tst	r3, #8
   31c7c:	beq	30fbc <contractText@@Base+0xb18>
   31c80:	ldr	ip, [fp, #-244]	; 0xffffff0c
   31c84:	ldr	r3, [ip, #20]
   31c88:	ldr	r3, [r3, #4]
   31c8c:	cmp	r3, #46	; 0x2e
   31c90:	beq	30fbc <contractText@@Base+0xb18>
   31c94:	cmp	r3, #39	; 0x27
   31c98:	bne	318b0 <contractText@@Base+0x140c>
   31c9c:	b	30fbc <contractText@@Base+0xb18>
   31ca0:	mov	r3, #0
   31ca4:	str	r3, [fp, #-212]	; 0xffffff2c
   31ca8:	b	309a8 <contractText@@Base+0x504>
   31cac:	ldr	r6, [pc, #-1712]	; 31604 <contractText@@Base+0x1160>
   31cb0:	add	r6, pc, r6
   31cb4:	ldr	r3, [r6, #20]
   31cb8:	ldr	r0, [r3]
   31cbc:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31cc0:	cmp	r0, #0
   31cc4:	beq	31d54 <contractText@@Base+0x18b0>
   31cc8:	ldr	r3, [r0, #12]
   31ccc:	tst	r3, #32
   31cd0:	beq	31d54 <contractText@@Base+0x18b0>
   31cd4:	ldr	r3, [r6]
   31cd8:	ldr	r3, [r3, #68]	; 0x44
   31cdc:	ldr	r3, [r3, #8]
   31ce0:	cmp	r3, #0
   31ce4:	beq	31d54 <contractText@@Base+0x18b0>
   31ce8:	ldr	r2, [r6, #20]
   31cec:	ldr	r1, [r6, #12]
   31cf0:	sub	r3, r2, #8
   31cf4:	cmp	r1, r3
   31cf8:	bhi	30fd8 <contractText@@Base+0xb34>
   31cfc:	ldr	r0, [r2, #-4]
   31d00:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31d04:	cmp	r0, #0
   31d08:	beq	31f40 <contractText@@Base+0x1a9c>
   31d0c:	ldr	r3, [r0, #12]
   31d10:	tst	r3, #16
   31d14:	beq	31f40 <contractText@@Base+0x1a9c>
   31d18:	ldr	r3, [r6, #20]
   31d1c:	ldr	r0, [r3, #-8]
   31d20:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31d24:	cmp	r0, #0
   31d28:	beq	31d38 <contractText@@Base+0x1894>
   31d2c:	ldr	r3, [r0, #12]
   31d30:	tst	r3, #16
   31d34:	bne	31fbc <contractText@@Base+0x1b18>
   31d38:	ldr	r3, [fp, #-256]	; 0xffffff00
   31d3c:	ldr	r2, [r3, #20]
   31d40:	b	30fd8 <contractText@@Base+0xb34>
   31d44:	bl	1c740 <logMallocError@@Base>
   31d48:	ldr	r4, [r8]
   31d4c:	str	r9, [r4, #36]	; 0x24
   31d50:	b	30b30 <contractText@@Base+0x68c>
   31d54:	ldr	r3, [pc, #-1876]	; 31608 <contractText@@Base+0x1164>
   31d58:	add	r3, pc, r3
   31d5c:	ldr	r2, [r3, #20]
   31d60:	b	30fd8 <contractText@@Base+0xb34>
   31d64:	ldr	lr, [pc, #-1888]	; 3160c <contractText@@Base+0x1168>
   31d68:	mov	r1, r3
   31d6c:	add	lr, pc, lr
   31d70:	str	r3, [lr, #4]
   31d74:	b	31ad4 <contractText@@Base+0x1630>
   31d78:	ldr	r0, [r5, #-4]
   31d7c:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31d80:	cmp	r0, #0
   31d84:	beq	31e38 <contractText@@Base+0x1994>
   31d88:	ldr	r3, [r0, #12]
   31d8c:	tst	r3, #1
   31d90:	beq	31e38 <contractText@@Base+0x1994>
   31d94:	ldr	r3, [pc, #-1932]	; 31610 <contractText@@Base+0x116c>
   31d98:	add	r3, pc, r3
   31d9c:	ldr	r3, [r3, #52]	; 0x34
   31da0:	cmp	r3, #11
   31da4:	bne	30a60 <contractText@@Base+0x5bc>
   31da8:	ldr	r3, [pc, #-1948]	; 31614 <contractText@@Base+0x1170>
   31dac:	ldr	r5, [fp, #-228]	; 0xffffff1c
   31db0:	ldr	r2, [fp, #-176]	; 0xffffff50
   31db4:	add	r3, pc, r3
   31db8:	str	r5, [r3, #20]
   31dbc:	str	r2, [r3, #4]
   31dc0:	ldr	ip, [r3, #16]
   31dc4:	b	30a80 <contractText@@Base+0x5dc>
   31dc8:	mov	r8, #0
   31dcc:	b	30e88 <contractText@@Base+0x9e4>
   31dd0:	bl	1c740 <logMallocError@@Base>
   31dd4:	ldr	r4, [r8]
   31dd8:	str	r9, [r4, #20]
   31ddc:	b	30ae8 <contractText@@Base+0x644>
   31de0:	ldr	r6, [pc, #-2000]	; 31618 <contractText@@Base+0x1174>
   31de4:	add	r6, pc, r6
   31de8:	ldr	r3, [r6]
   31dec:	ldr	r3, [r3, #68]	; 0x44
   31df0:	ldr	r2, [r3, #4]
   31df4:	cmp	r2, #0
   31df8:	beq	31e10 <contractText@@Base+0x196c>
   31dfc:	ldr	r2, [r6, #20]
   31e00:	ldr	r0, [r6, #16]
   31e04:	add	r1, r2, #4
   31e08:	cmp	r0, r1
   31e0c:	bhi	31ee4 <contractText@@Base+0x1a40>
   31e10:	ldr	r0, [r3]
   31e14:	cmp	r0, #0
   31e18:	bne	31ec8 <contractText@@Base+0x1a24>
   31e1c:	ldr	r3, [pc, #-2056]	; 3161c <contractText@@Base+0x1178>
   31e20:	add	r3, pc, r3
   31e24:	ldr	r2, [r3, #20]
   31e28:	b	30fd8 <contractText@@Base+0xb34>
   31e2c:	mov	r2, #0
   31e30:	str	r2, [fp, #-212]	; 0xffffff2c
   31e34:	b	309a8 <contractText@@Base+0x504>
   31e38:	ldr	r3, [pc, #-2080]	; 31620 <contractText@@Base+0x117c>
   31e3c:	add	r3, pc, r3
   31e40:	ldr	r3, [r3, #20]
   31e44:	ldr	r0, [r3]
   31e48:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31e4c:	cmp	r0, #0
   31e50:	beq	31da8 <contractText@@Base+0x1904>
   31e54:	ldr	r3, [r0, #12]
   31e58:	tst	r3, #1
   31e5c:	bne	31d94 <contractText@@Base+0x18f0>
   31e60:	b	31da8 <contractText@@Base+0x1904>
   31e64:	ldr	r3, [pc, #-2120]	; 31624 <contractText@@Base+0x1180>
   31e68:	add	r3, pc, r3
   31e6c:	ldr	r5, [r3, #20]
   31e70:	ldr	ip, [r3, #16]
   31e74:	b	30a80 <contractText@@Base+0x5dc>
   31e78:	ldr	r3, [fp, #-172]	; 0xffffff54
   31e7c:	cmp	r3, #0
   31e80:	beq	31f24 <contractText@@Base+0x1a80>
   31e84:	ldr	r2, [pc, #-2148]	; 31628 <contractText@@Base+0x1184>
   31e88:	ldr	r5, [fp, #-224]	; 0xffffff20
   31e8c:	add	r2, pc, r2
   31e90:	str	r5, [r2, #20]
   31e94:	str	r3, [r2, #4]
   31e98:	b	31494 <contractText@@Base+0xff0>
   31e9c:	ldr	r2, [ip, #36]	; 0x24
   31ea0:	ldr	r3, [ip, #20]
   31ea4:	add	r2, r3, r2, lsl #2
   31ea8:	str	r2, [fp, #-212]	; 0xffffff2c
   31eac:	b	3182c <contractText@@Base+0x1388>
   31eb0:	ldr	ip, [fp, #-236]	; 0xffffff14
   31eb4:	mov	r5, r4
   31eb8:	str	r4, [r1, #20]
   31ebc:	str	r3, [fp, #-212]	; 0xffffff2c
   31ec0:	str	ip, [r1, #4]
   31ec4:	b	31494 <contractText@@Base+0xff0>
   31ec8:	bl	2f3a4 <makeContractionTablePath@@Base+0x224>
   31ecc:	cmp	r0, #0
   31ed0:	beq	30a2c <contractText@@Base+0x588>
   31ed4:	ldr	r3, [pc, #-2224]	; 3162c <contractText@@Base+0x1188>
   31ed8:	add	r3, pc, r3
   31edc:	ldr	r2, [r3, #20]
   31ee0:	b	30fd8 <contractText@@Base+0xb34>
   31ee4:	ldr	r0, [r2, #4]
   31ee8:	bl	2f5d4 <makeContractionTablePath@@Base+0x454>
   31eec:	cmp	r0, #0
   31ef0:	ldreq	r3, [r6]
   31ef4:	ldreq	r3, [r3, #68]	; 0x44
   31ef8:	beq	31e10 <contractText@@Base+0x196c>
   31efc:	ldr	r3, [r0, #12]
   31f00:	tst	r3, #16
   31f04:	ldr	r3, [r6]
   31f08:	ldr	r3, [r3, #68]	; 0x44
   31f0c:	beq	31e10 <contractText@@Base+0x196c>
   31f10:	ldr	r0, [r3, #4]
   31f14:	bl	2f3a4 <makeContractionTablePath@@Base+0x224>
   31f18:	cmp	r0, #0
   31f1c:	bne	31ba0 <contractText@@Base+0x16fc>
   31f20:	b	30a2c <contractText@@Base+0x588>
   31f24:	ldr	r3, [fp, #-240]	; 0xffffff10
   31f28:	ldr	ip, [fp, #-240]	; 0xffffff10
   31f2c:	ldr	r5, [r3, #12]
   31f30:	ldr	r3, [r3, #28]
   31f34:	str	r5, [ip, #20]
   31f38:	str	r3, [ip, #4]
   31f3c:	b	31494 <contractText@@Base+0xff0>
   31f40:	ldr	r3, [pc, #-2328]	; 31630 <contractText@@Base+0x118c>
   31f44:	add	r3, pc, r3
   31f48:	ldr	r2, [r3, #20]
   31f4c:	b	30fd8 <contractText@@Base+0xb34>
   31f50:	ldr	ip, [fp, #-196]	; 0xffffff3c
   31f54:	cmp	ip, #3
   31f58:	bne	31260 <contractText@@Base+0xdbc>
   31f5c:	cmp	r0, #3
   31f60:	strbeq	r2, [r7, r9]
   31f64:	moveq	sl, r8
   31f68:	moveq	r8, ip
   31f6c:	bne	31260 <contractText@@Base+0xdbc>
   31f70:	b	31434 <contractText@@Base+0xf90>
   31f74:	cmp	sl, #26
   31f78:	bne	31390 <contractText@@Base+0xeec>
   31f7c:	b	31684 <contractText@@Base+0x11e0>
   31f80:	bl	f950 <__stack_chk_fail@plt>
   31f84:	sub	r2, r8, #14
   31f88:	cmp	r8, #2
   31f8c:	cmpne	r2, #1
   31f90:	bls	31f9c <contractText@@Base+0x1af8>
   31f94:	cmp	r8, #19
   31f98:	bne	312c4 <contractText@@Base+0xe20>
   31f9c:	mov	sl, r8
   31fa0:	mov	r2, #0
   31fa4:	mov	r8, #15
   31fa8:	strb	r2, [r7, r9]
   31fac:	b	31434 <contractText@@Base+0xf90>
   31fb0:	cmp	r0, #2
   31fb4:	bne	31390 <contractText@@Base+0xeec>
   31fb8:	b	31684 <contractText@@Base+0x11e0>
   31fbc:	ldr	r3, [r6]
   31fc0:	ldr	r3, [r3, #68]	; 0x44
   31fc4:	ldr	r0, [r3, #8]
   31fc8:	bl	2f3a4 <makeContractionTablePath@@Base+0x224>
   31fcc:	cmp	r0, #0
   31fd0:	bne	31ba0 <contractText@@Base+0x16fc>
   31fd4:	b	30a2c <contractText@@Base+0x588>
   31fd8:	cmp	r0, #2
   31fdc:	moveq	r2, #0
   31fe0:	moveq	sl, r8
   31fe4:	strbeq	r2, [r7, r9]
   31fe8:	bne	31378 <contractText@@Base+0xed4>
   31fec:	b	31434 <contractText@@Base+0xf90>
   31ff0:	sub	r2, r0, #31
   31ff4:	cmp	r2, #4
   31ff8:	bhi	31390 <contractText@@Base+0xeec>
   31ffc:	b	31684 <contractText@@Base+0x11e0>
   32000:	cmp	r2, #33	; 0x21
   32004:	bne	31340 <contractText@@Base+0xe9c>
   32008:	cmp	r0, #15
   3200c:	beq	31f9c <contractText@@Base+0x1af8>
   32010:	cmp	r0, #21
   32014:	bne	31354 <contractText@@Base+0xeb0>
   32018:	b	31684 <contractText@@Base+0x11e0>
   3201c:	cmp	r0, #35	; 0x23
   32020:	beq	32030 <contractText@@Base+0x1b8c>
   32024:	sub	r2, r0, #31
   32028:	cmp	r2, #2
   3202c:	bhi	3132c <contractText@@Base+0xe88>
   32030:	mov	r2, #0
   32034:	mov	r8, r0
   32038:	strb	r2, [r7, r9]
   3203c:	mov	sl, #33	; 0x21
   32040:	b	31434 <contractText@@Base+0xf90>
   32044:	cmp	r0, #2
   32048:	beq	31684 <contractText@@Base+0x11e0>
   3204c:	sub	r2, r0, #21
   32050:	cmp	r2, #1
   32054:	bls	31684 <contractText@@Base+0x11e0>
   32058:	cmp	r0, #19
   3205c:	bne	3132c <contractText@@Base+0xe88>
   32060:	b	31684 <contractText@@Base+0x11e0>
   32064:	cmp	r0, #2
   32068:	beq	31684 <contractText@@Base+0x11e0>
   3206c:	sub	r2, r0, #19
   32070:	cmp	r2, #1
   32074:	bhi	31314 <contractText@@Base+0xe70>
   32078:	b	31684 <contractText@@Base+0x11e0>
   3207c:	sub	r2, r0, #21
   32080:	cmp	r2, #1
   32084:	bhi	31314 <contractText@@Base+0xe70>
   32088:	b	31684 <contractText@@Base+0x11e0>
   3208c:	cmp	r0, #14
   32090:	cmpne	r0, #2
   32094:	beq	31684 <contractText@@Base+0x11e0>
   32098:	b	3206c <contractText@@Base+0x1bc8>
   3209c:	cmp	r0, #19
   320a0:	bne	31314 <contractText@@Base+0xe70>
   320a4:	b	31684 <contractText@@Base+0x11e0>
   320a8:	cmp	r0, #21
   320ac:	bne	31314 <contractText@@Base+0xe70>
   320b0:	b	31684 <contractText@@Base+0x11e0>
   320b4:	push	{r4, r5, r6, r7, r8, lr}
   320b8:	mov	r5, r0
   320bc:	ldr	r3, [r0, #12]
   320c0:	mov	r4, r1
   320c4:	ldr	r2, [r0, #8]
   320c8:	cmp	r3, r2
   320cc:	beq	32108 <contractText@@Base+0x1c64>
   320d0:	ldr	r6, [r0, #4]
   320d4:	add	r2, r3, #1
   320d8:	add	ip, r3, r3, lsl #2
   320dc:	str	r2, [r5, #12]
   320e0:	mov	r5, #1
   320e4:	ldm	r4!, {r0, r1, r2, r3}
   320e8:	add	ip, r6, ip, lsl #3
   320ec:	stmia	ip!, {r0, r1, r2, r3}
   320f0:	ldm	r4!, {r0, r1, r2, r3}
   320f4:	stmia	ip!, {r0, r1, r2, r3}
   320f8:	ldm	r4, {r0, r1}
   320fc:	stm	ip, {r0, r1}
   32100:	mov	r0, r5
   32104:	pop	{r4, r5, r6, r7, r8, pc}
   32108:	cmp	r3, #0
   3210c:	ldr	r0, [r0, #4]
   32110:	lslne	r8, r3, #1
   32114:	addne	r3, r8, r3, lsl #3
   32118:	moveq	r1, #640	; 0x280
   3211c:	moveq	r8, #16
   32120:	lslne	r1, r3, #3
   32124:	bl	f878 <realloc@plt>
   32128:	subs	r7, r0, #0
   3212c:	ldrne	r3, [r5, #12]
   32130:	movne	r6, r7
   32134:	stmibne	r5, {r7, r8}
   32138:	bne	320d4 <contractText@@Base+0x1c30>
   3213c:	ldr	r0, [pc, #12]	; 32150 <contractText@@Base+0x1cac>
   32140:	mov	r5, r7
   32144:	add	r0, pc, r0
   32148:	bl	1c6fc <logSystemError@@Base>
   3214c:	b	32100 <contractText@@Base+0x1c5c>
   32150:	andeq	r3, r2, r4, lsl r8
   32154:	mov	r3, r1
   32158:	ldr	r2, [pc, #12]	; 3216c <contractText@@Base+0x1cc8>
   3215c:	ldr	r1, [pc, #12]	; 32170 <contractText@@Base+0x1ccc>
   32160:	add	r2, pc, r2
   32164:	add	r1, pc, r1
   32168:	b	29c18 <processPropertyOperand@@Base>
   3216c:	andeq	r3, r2, r0, lsl #16
   32170:			; <UNDEFINED> instruction: 0x000406b8
   32174:	ldr	r3, [pc, #212]	; 32250 <contractText@@Base+0x1dac>
   32178:	ldr	ip, [pc, #212]	; 32254 <contractText@@Base+0x1db0>
   3217c:	add	r3, pc, r3
   32180:	ldr	r2, [pc, #208]	; 32258 <contractText@@Base+0x1db4>
   32184:	push	{r4, r5, r6, r7, r8, lr}
   32188:	sub	sp, sp, #24
   3218c:	ldr	r4, [r3, ip]
   32190:	mov	r5, r1
   32194:	add	r2, pc, r2
   32198:	add	r1, sp, #12
   3219c:	mov	r6, r0
   321a0:	ldr	r3, [r4]
   321a4:	str	r3, [sp, #20]
   321a8:	bl	293a8 <getDataText@@Base>
   321ac:	cmp	r0, #0
   321b0:	moveq	r0, #1
   321b4:	beq	321dc <contractText@@Base+0x1d38>
   321b8:	ldr	r7, [r5]
   321bc:	ldr	r8, [r7]
   321c0:	cmp	r8, #0
   321c4:	beq	321f4 <contractText@@Base+0x1d50>
   321c8:	ldr	r1, [pc, #140]	; 3225c <contractText@@Base+0x1db8>
   321cc:	mov	r0, r6
   321d0:	add	r1, pc, r1
   321d4:	bl	28dec <reportDataError@@Base>
   321d8:	mov	r0, #1
   321dc:	ldr	r2, [sp, #20]
   321e0:	ldr	r3, [r4]
   321e4:	cmp	r2, r3
   321e8:	bne	3224c <contractText@@Base+0x1da8>
   321ec:	add	sp, sp, #24
   321f0:	pop	{r4, r5, r6, r7, r8, pc}
   321f4:	ldr	r0, [sp, #16]
   321f8:	add	r0, r0, #1
   321fc:	lsl	r0, r0, #2
   32200:	bl	fb48 <malloc@plt>
   32204:	cmp	r0, #0
   32208:	str	r0, [r7]
   3220c:	beq	3223c <contractText@@Base+0x1d98>
   32210:	ldr	r3, [r5]
   32214:	ldr	r2, [sp, #16]
   32218:	ldr	r1, [sp, #12]
   3221c:	ldr	r0, [r3]
   32220:	bl	f620 <wmemcpy@plt>
   32224:	ldr	r3, [r5]
   32228:	ldr	r2, [sp, #16]
   3222c:	mov	r0, #1
   32230:	ldr	r3, [r3]
   32234:	str	r8, [r3, r2, lsl #2]
   32238:	b	321dc <contractText@@Base+0x1d38>
   3223c:	str	r0, [sp, #4]
   32240:	bl	1c740 <logMallocError@@Base>
   32244:	ldr	r0, [sp, #4]
   32248:	b	321dc <contractText@@Base+0x1d38>
   3224c:	bl	f950 <__stack_chk_fail@plt>
   32250:	strdeq	r0, [r4], -ip
   32254:			; <UNDEFINED> instruction: 0x000003b4
   32258:	andeq	r3, r2, r0, ror #15
   3225c:			; <UNDEFINED> instruction: 0x000237b0
   32260:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   32264:	add	r8, r0, r1, lsl #2
   32268:	cmp	r0, r8
   3226c:	mov	r5, r0
   32270:	mov	r7, r2
   32274:	beq	322d4 <contractText@@Base+0x1e30>
   32278:	ldrb	r4, [r2]
   3227c:	cmp	r4, #0
   32280:	beq	322cc <contractText@@Base+0x1e28>
   32284:	bl	fd40 <__ctype_tolower_loc@plt>
   32288:	add	r6, r7, #1
   3228c:	ldr	r9, [r0]
   32290:	b	322ac <contractText@@Base+0x1e08>
   32294:	bhi	322cc <contractText@@Base+0x1e28>
   32298:	cmp	r8, r5
   3229c:	beq	322d4 <contractText@@Base+0x1e30>
   322a0:	ldrb	r4, [r6], #1
   322a4:	cmp	r4, #0
   322a8:	beq	322cc <contractText@@Base+0x1e28>
   322ac:	ldr	r0, [r5], #4
   322b0:	mov	r7, r6
   322b4:	bl	f434 <towlower@plt>
   322b8:	ldrb	r3, [r9, r4, lsl #2]
   322bc:	cmp	r0, r3
   322c0:	bcs	32294 <contractText@@Base+0x1df0>
   322c4:	mvn	r0, #0
   322c8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   322cc:	mov	r0, #1
   322d0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   322d4:	ldrb	r0, [r7]
   322d8:	subs	r0, r0, #0
   322dc:	mvnne	r0, #0
   322e0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   322e4:	ldr	r2, [r1]
   322e8:	ldm	r0, {r0, r1}
   322ec:	ldr	r2, [r2]
   322f0:	b	32260 <contractText@@Base+0x1dbc>
   322f4:	ldr	r2, [r1]
   322f8:	ldm	r0, {r0, r1}
   322fc:	ldr	r2, [r2]
   32300:	b	32260 <contractText@@Base+0x1dbc>
   32304:	ldr	r2, [r1]
   32308:	ldm	r0, {r0, r1}
   3230c:	ldr	r2, [r2]
   32310:	b	32260 <contractText@@Base+0x1dbc>
   32314:	push	{r4, r5, r6, r7, r8, lr}
   32318:	mov	r8, r0
   3231c:	ldr	r3, [r1]
   32320:	mov	r7, r2
   32324:	cmp	r3, #0
   32328:	beq	32374 <contractText@@Base+0x1ed0>
   3232c:	ldr	r6, [r0]
   32330:	add	r4, r1, #8
   32334:	b	32344 <contractText@@Base+0x1ea0>
   32338:	ldr	r3, [r4], #8
   3233c:	cmp	r3, #0
   32340:	beq	32374 <contractText@@Base+0x1ed0>
   32344:	ldr	r5, [r4, #-4]
   32348:	tst	r5, r6
   3234c:	bne	32338 <contractText@@Base+0x1e94>
   32350:	mov	r2, r3
   32354:	ldm	r7, {r0, r1}
   32358:	bl	32260 <contractText@@Base+0x1dbc>
   3235c:	cmp	r0, #0
   32360:	bne	32338 <contractText@@Base+0x1e94>
   32364:	orr	r5, r6, r5
   32368:	mov	r0, #1
   3236c:	str	r5, [r8]
   32370:	pop	{r4, r5, r6, r7, r8, pc}
   32374:	mov	r0, r3
   32378:	pop	{r4, r5, r6, r7, r8, pc}
   3237c:	ldr	r2, [r0]
   32380:	ldr	r3, [r1]
   32384:	ldr	r0, [r2]
   32388:	ldr	r1, [r3]
   3238c:	b	f4c4 <strcasecmp@plt>
   32390:	ldr	r2, [r0]
   32394:	ldr	r3, [r1]
   32398:	ldr	r0, [r2]
   3239c:	ldr	r1, [r3]
   323a0:	b	f4c4 <strcasecmp@plt>
   323a4:	ldr	r2, [r0]
   323a8:	ldr	r3, [r1]
   323ac:	ldr	r0, [r2]
   323b0:	ldr	r1, [r3]
   323b4:	b	f4c4 <strcasecmp@plt>
   323b8:	ldr	r3, [pc, #284]	; 324dc <contractText@@Base+0x2038>
   323bc:	ldr	ip, [pc, #284]	; 324e0 <contractText@@Base+0x203c>
   323c0:	add	r3, pc, r3
   323c4:	ldr	r2, [pc, #280]	; 324e4 <contractText@@Base+0x2040>
   323c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   323cc:	sub	sp, sp, #1040	; 0x410
   323d0:	ldr	r4, [r3, ip]
   323d4:	sub	sp, sp, #12
   323d8:	add	r5, sp, #24
   323dc:	mov	r6, r1
   323e0:	add	r2, pc, r2
   323e4:	sub	r1, r5, #12
   323e8:	ldr	r3, [r4]
   323ec:	mov	r7, r0
   323f0:	str	r3, [sp, #1044]	; 0x414
   323f4:	bl	293a8 <getDataText@@Base>
   323f8:	cmp	r0, #0
   323fc:	beq	3240c <contractText@@Base+0x1f68>
   32400:	ldrb	r3, [r6, #13]
   32404:	ands	r8, r3, #3
   32408:	beq	3242c <contractText@@Base+0x1f88>
   3240c:	mov	r0, #1
   32410:	ldr	r2, [sp, #1044]	; 0x414
   32414:	ldr	r3, [r4]
   32418:	cmp	r2, r3
   3241c:	bne	324d8 <contractText@@Base+0x2034>
   32420:	add	sp, sp, #1040	; 0x410
   32424:	add	sp, sp, #12
   32428:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3242c:	ldr	r2, [sp, #12]
   32430:	mov	r0, r7
   32434:	ldr	r3, [sp, #16]
   32438:	sub	r1, r5, #4
   3243c:	str	r8, [sp]
   32440:	bl	2942c <parseDataString@@Base>
   32444:	cmp	r0, #0
   32448:	beq	3240c <contractText@@Base+0x1f68>
   3244c:	ldr	r3, [r6]
   32450:	ldmib	r3, {r0, r1}
   32454:	add	r1, r1, #1
   32458:	lsl	r1, r1, #2
   3245c:	bl	f878 <realloc@plt>
   32460:	subs	r7, r0, #0
   32464:	beq	324b8 <contractText@@Base+0x2014>
   32468:	ldrb	r9, [sp, #20]
   3246c:	ldr	r3, [r6]
   32470:	add	r0, r9, #1
   32474:	str	r7, [r3, #4]
   32478:	lsl	r0, r0, #2
   3247c:	bl	fb48 <malloc@plt>
   32480:	subs	r7, r0, #0
   32484:	beq	324cc <contractText@@Base+0x2028>
   32488:	mov	r1, r5
   3248c:	mov	r2, r9
   32490:	bl	f620 <wmemcpy@plt>
   32494:	ldrb	r3, [sp, #20]
   32498:	mov	r0, #1
   3249c:	str	r8, [r7, r3, lsl #2]
   324a0:	ldr	r3, [r6]
   324a4:	ldmib	r3, {r1, r2}
   324a8:	add	ip, r2, r0
   324ac:	str	ip, [r3, #8]
   324b0:	str	r7, [r1, r2, lsl #2]
   324b4:	b	32410 <contractText@@Base+0x1f6c>
   324b8:	ldr	r0, [pc, #40]	; 324e8 <contractText@@Base+0x2044>
   324bc:	add	r0, pc, r0
   324c0:	bl	1c6fc <logSystemError@@Base>
   324c4:	mov	r0, r7
   324c8:	b	32410 <contractText@@Base+0x1f6c>
   324cc:	bl	1c740 <logMallocError@@Base>
   324d0:	mov	r0, r7
   324d4:	b	32410 <contractText@@Base+0x1f6c>
   324d8:	bl	f950 <__stack_chk_fail@plt>
   324dc:			; <UNDEFINED> instruction: 0x000406b8
   324e0:			; <UNDEFINED> instruction: 0x000003b4
   324e4:	andeq	r3, r2, r8, asr #11
   324e8:	muleq	r2, ip, r4
   324ec:	ldr	ip, [pc, #476]	; 326d0 <contractText@@Base+0x222c>
   324f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   324f4:	add	ip, pc, ip
   324f8:	ldr	lr, [pc, #468]	; 326d4 <contractText@@Base+0x2230>
   324fc:	sub	sp, sp, #36	; 0x24
   32500:	mov	r5, r2
   32504:	mov	r8, r0
   32508:	mov	sl, r1
   3250c:	mov	r0, r2
   32510:	ldr	lr, [ip, lr]
   32514:	mov	r2, r3
   32518:	mov	r1, #46	; 0x2e
   3251c:	mov	r6, r3
   32520:	ldr	fp, [sp, #72]	; 0x48
   32524:	ldr	ip, [lr]
   32528:	str	lr, [sp, #12]
   3252c:	str	ip, [sp, #28]
   32530:	bl	f7a0 <wmemchr@plt>
   32534:	subs	r4, r0, #0
   32538:	beq	32694 <contractText@@Base+0x21f0>
   3253c:	rsb	r7, r5, r4
   32540:	asrs	r7, r7, #2
   32544:	beq	32648 <contractText@@Base+0x21a4>
   32548:	add	r4, r4, #4
   3254c:	add	r9, r5, r6, lsl #2
   32550:	rsb	r9, r4, r9
   32554:	asrs	r9, r9, #2
   32558:	movne	r1, r7
   3255c:	beq	32668 <contractText@@Base+0x21c4>
   32560:	ldr	r2, [fp]
   32564:	add	fp, sp, #20
   32568:	ldr	ip, [pc, #360]	; 326d8 <contractText@@Base+0x2234>
   3256c:	mov	r3, #4
   32570:	str	r5, [sp, #20]
   32574:	mov	r0, fp
   32578:	str	r1, [sp, #24]
   3257c:	add	ip, pc, ip
   32580:	ldr	r1, [r2, #12]
   32584:	ldr	r2, [r2, #16]
   32588:	str	ip, [sp]
   3258c:	bl	f7b8 <bsearch@plt>
   32590:	subs	ip, r0, #0
   32594:	beq	326a4 <contractText@@Base+0x2200>
   32598:	ldr	r3, [ip]
   3259c:	cmp	r4, #0
   325a0:	moveq	r0, #1
   325a4:	ldrh	r3, [r3, #4]
   325a8:	strh	r3, [sl]
   325ac:	beq	3260c <contractText@@Base+0x2168>
   325b0:	mov	r0, fp
   325b4:	mov	r1, r4
   325b8:	mov	r2, r9
   325bc:	bl	28ef4 <isNumber@@Base>
   325c0:	cmp	r0, #0
   325c4:	beq	32628 <contractText@@Base+0x2184>
   325c8:	ldr	r3, [sp, #20]
   325cc:	cmp	r3, #0
   325d0:	ble	32628 <contractText@@Base+0x2184>
   325d4:	sub	r3, r3, #1
   325d8:	str	r3, [sp, #20]
   325dc:	cmp	r3, #254	; 0xfe
   325e0:	bgt	32628 <contractText@@Base+0x2184>
   325e4:	ldrb	r2, [sl, #1]
   325e8:	cmp	r2, #255	; 0xff
   325ec:	beq	32688 <contractText@@Base+0x21e4>
   325f0:	ldr	r1, [pc, #228]	; 326dc <contractText@@Base+0x2238>
   325f4:	mov	r0, r8
   325f8:	mov	r2, r7
   325fc:	mov	r3, r5
   32600:	add	r1, pc, r1
   32604:	bl	28dec <reportDataError@@Base>
   32608:	mov	r0, #0
   3260c:	ldr	r1, [sp, #12]
   32610:	ldr	r2, [sp, #28]
   32614:	ldr	r3, [r1]
   32618:	cmp	r2, r3
   3261c:	bne	326cc <contractText@@Base+0x2228>
   32620:	add	sp, sp, #36	; 0x24
   32624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32628:	ldr	r1, [pc, #176]	; 326e0 <contractText@@Base+0x223c>
   3262c:	mov	r0, r8
   32630:	mov	r2, r9
   32634:	mov	r3, r4
   32638:	add	r1, pc, r1
   3263c:	bl	28dec <reportDataError@@Base>
   32640:	mov	r0, #0
   32644:	b	3260c <contractText@@Base+0x2168>
   32648:	ldr	r1, [pc, #148]	; 326e4 <contractText@@Base+0x2240>
   3264c:	mov	r0, r8
   32650:	mov	r2, r6
   32654:	mov	r3, r5
   32658:	add	r1, pc, r1
   3265c:	bl	28dec <reportDataError@@Base>
   32660:	mov	r0, r7
   32664:	b	3260c <contractText@@Base+0x2168>
   32668:	ldr	r1, [pc, #120]	; 326e8 <contractText@@Base+0x2244>
   3266c:	mov	r0, r8
   32670:	mov	r2, r6
   32674:	mov	r3, r5
   32678:	add	r1, pc, r1
   3267c:	bl	28dec <reportDataError@@Base>
   32680:	mov	r0, r9
   32684:	b	3260c <contractText@@Base+0x2168>
   32688:	strb	r3, [sl, #1]
   3268c:	mov	r0, #1
   32690:	b	3260c <contractText@@Base+0x2168>
   32694:	mov	r1, r6
   32698:	mov	r9, r4
   3269c:	mov	r7, r6
   326a0:	b	32560 <contractText@@Base+0x20bc>
   326a4:	ldr	r1, [pc, #64]	; 326ec <contractText@@Base+0x2248>
   326a8:	mov	r0, r8
   326ac:	mov	r2, r7
   326b0:	mov	r3, r5
   326b4:	add	r1, pc, r1
   326b8:	str	ip, [sp, #8]
   326bc:	bl	28dec <reportDataError@@Base>
   326c0:	ldr	ip, [sp, #8]
   326c4:	mov	r0, ip
   326c8:	b	3260c <contractText@@Base+0x2168>
   326cc:	bl	f950 <__stack_chk_fail@plt>
   326d0:	andeq	r0, r4, r4, lsl #11
   326d4:			; <UNDEFINED> instruction: 0x000003b4
   326d8:			; <UNDEFINED> instruction: 0xfffffd70
   326dc:	andeq	r3, r2, r4, lsl #8
   326e0:	andeq	r3, r2, r4, ror #7
   326e4:	andeq	r3, r2, ip, asr r3
   326e8:	andeq	r3, r2, r8, asr r3
   326ec:	andeq	r3, r2, r8, lsr r3
   326f0:	ldr	ip, [pc, #128]	; 32778 <contractText@@Base+0x22d4>
   326f4:	push	{r4, r5, r6, r7, r8, lr}
   326f8:	add	ip, pc, ip
   326fc:	ldr	lr, [pc, #120]	; 3277c <contractText@@Base+0x22d8>
   32700:	sub	sp, sp, #1040	; 0x410
   32704:	ldr	r3, [pc, #116]	; 32780 <contractText@@Base+0x22dc>
   32708:	mov	r6, r1
   3270c:	mov	r7, r2
   32710:	add	r1, sp, #12
   32714:	ldr	r4, [ip, lr]
   32718:	mov	r2, #1
   3271c:	add	r3, pc, r3
   32720:	mov	r8, r0
   32724:	add	r5, sp, #16
   32728:	ldr	ip, [r4]
   3272c:	str	ip, [sp, #1036]	; 0x40c
   32730:	bl	299f8 <getDataString@@Base>
   32734:	cmp	r0, #0
   32738:	beq	3275c <contractText@@Base+0x22b8>
   3273c:	ldrb	r3, [sp, #12]
   32740:	mov	r0, r8
   32744:	str	r7, [sp]
   32748:	mov	r1, r6
   3274c:	mov	r2, r5
   32750:	bl	324ec <contractText@@Base+0x2048>
   32754:	adds	r0, r0, #0
   32758:	movne	r0, #1
   3275c:	ldr	r2, [sp, #1036]	; 0x40c
   32760:	ldr	r3, [r4]
   32764:	cmp	r2, r3
   32768:	bne	32774 <contractText@@Base+0x22d0>
   3276c:	add	sp, sp, #1040	; 0x410
   32770:	pop	{r4, r5, r6, r7, r8, pc}
   32774:	bl	f950 <__stack_chk_fail@plt>
   32778:	andeq	r0, r4, r0, lsl #7
   3277c:			; <UNDEFINED> instruction: 0x000003b4
   32780:	andeq	r3, r2, ip, lsl r3
   32784:	push	{r4, r5, r6, lr}
   32788:	mov	r4, r1
   3278c:	ldrb	r3, [r1, #13]
   32790:	ands	r6, r3, #1
   32794:	ubfx	r5, r3, #1, #1
   32798:	orrne	r3, r3, #2
   3279c:	strbne	r3, [r1, #13]
   327a0:	bl	29f48 <processIncludeOperands@@Base>
   327a4:	ldrb	r3, [r4, #13]
   327a8:	bfi	r3, r6, #0, #1
   327ac:	bfi	r3, r5, #1, #1
   327b0:	strb	r3, [r4, #13]
   327b4:	pop	{r4, r5, r6, pc}
   327b8:	ldr	ip, [pc, #212]	; 32894 <contractText@@Base+0x23f0>
   327bc:	mov	r2, #1
   327c0:	push	{r4, r5, r6, r7, r8, lr}
   327c4:	add	ip, pc, ip
   327c8:	ldr	lr, [pc, #200]	; 32898 <contractText@@Base+0x23f4>
   327cc:	sub	sp, sp, #1024	; 0x400
   327d0:	sub	sp, sp, #8
   327d4:	ldr	r3, [pc, #192]	; 3289c <contractText@@Base+0x23f8>
   327d8:	add	r5, sp, #8
   327dc:	mov	r6, r1
   327e0:	ldr	r4, [ip, lr]
   327e4:	sub	r1, r5, #4
   327e8:	add	r3, pc, r3
   327ec:	mov	r7, r0
   327f0:	ldr	ip, [r4]
   327f4:	str	ip, [sp, #1028]	; 0x404
   327f8:	bl	299f8 <getDataString@@Base>
   327fc:	cmp	r0, #0
   32800:	bne	32824 <contractText@@Base+0x2380>
   32804:	ldr	r2, [sp, #1028]	; 0x404
   32808:	mov	r0, #1
   3280c:	ldr	r3, [r4]
   32810:	cmp	r2, r3
   32814:	bne	32890 <contractText@@Base+0x23ec>
   32818:	add	sp, sp, #1024	; 0x400
   3281c:	add	sp, sp, #8
   32820:	pop	{r4, r5, r6, r7, r8, pc}
   32824:	ldr	r0, [pc, #116]	; 328a0 <contractText@@Base+0x23fc>
   32828:	mov	r1, r5
   3282c:	ldrb	r2, [sp, #4]
   32830:	add	r0, pc, r0
   32834:	bl	28e98 <isKeyword@@Base>
   32838:	subs	r8, r0, #0
   3283c:	ldrbne	r3, [r6, #13]
   32840:	orrne	r3, r3, #1
   32844:	strbne	r3, [r6, #13]
   32848:	bne	32804 <contractText@@Base+0x2360>
   3284c:	ldr	r0, [pc, #80]	; 328a4 <contractText@@Base+0x2400>
   32850:	mov	r1, r5
   32854:	ldrb	r2, [sp, #4]
   32858:	add	r0, pc, r0
   3285c:	bl	28e98 <isKeyword@@Base>
   32860:	cmp	r0, #0
   32864:	ldrbne	r3, [r6, #13]
   32868:	bfine	r3, r8, #0, #1
   3286c:	strbne	r3, [r6, #13]
   32870:	bne	32804 <contractText@@Base+0x2360>
   32874:	ldr	r1, [pc, #44]	; 328a8 <contractText@@Base+0x2404>
   32878:	mov	r0, r7
   3287c:	mov	r3, r5
   32880:	ldrb	r2, [sp, #4]
   32884:	add	r1, pc, r1
   32888:	bl	28dec <reportDataError@@Base>
   3288c:	b	32804 <contractText@@Base+0x2360>
   32890:	bl	f950 <__stack_chk_fail@plt>
   32894:			; <UNDEFINED> instruction: 0x000402b4
   32898:			; <UNDEFINED> instruction: 0x000003b4
   3289c:	andeq	r3, r2, ip, asr r2
   328a0:	andeq	r2, r2, r0, ror pc
   328a4:	ldrdeq	r3, [r2], -r8
   328a8:	andeq	r3, r2, ip, asr #3
   328ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   328b0:	mov	r7, r0
   328b4:	ldr	r3, [r0]
   328b8:	mov	r8, r1
   328bc:	ldr	r2, [r3, #24]
   328c0:	cmp	r1, r2
   328c4:	bcs	328d8 <contractText@@Base+0x2434>
   328c8:	add	r8, r8, r8, lsl #1
   328cc:	ldr	r3, [r3, #20]
   328d0:	add	r0, r3, r8, lsl #4
   328d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   328d8:	add	r9, r1, #1
   328dc:	ldr	r0, [r3, #20]
   328e0:	add	r1, r9, r9, lsl #1
   328e4:	lsl	r1, r1, #4
   328e8:	bl	f878 <realloc@plt>
   328ec:	subs	r4, r0, #0
   328f0:	beq	32978 <contractText@@Base+0x24d4>
   328f4:	ldr	r3, [r7]
   328f8:	str	r4, [r3, #20]
   328fc:	ldr	r3, [r7]
   32900:	ldr	r2, [r3, #24]
   32904:	cmp	r9, r2
   32908:	bls	328c8 <contractText@@Base+0x2424>
   3290c:	mov	r5, #0
   32910:	ldr	r6, [r3, #20]
   32914:	add	sl, r2, r2, lsl #1
   32918:	mov	r1, #0
   3291c:	add	r2, r2, #1
   32920:	add	r4, r6, sl, lsl #4
   32924:	str	r2, [r3, #24]
   32928:	mov	r2, #48	; 0x30
   3292c:	mov	r0, r4
   32930:	bl	f6b0 <memset@plt>
   32934:	str	r5, [r6, sl, lsl #4]
   32938:	str	r5, [r4, #4]
   3293c:	str	r5, [r4, #8]
   32940:	str	r5, [r4, #12]
   32944:	str	r5, [r4, #16]
   32948:	str	r5, [r4, #20]
   3294c:	str	r5, [r4, #24]
   32950:	str	r5, [r4, #28]
   32954:	str	r5, [r4, #32]
   32958:	str	r5, [r4, #36]	; 0x24
   3295c:	str	r5, [r4, #40]	; 0x28
   32960:	str	r5, [r4, #44]	; 0x2c
   32964:	ldr	r3, [r7]
   32968:	ldr	r2, [r3, #24]
   3296c:	cmp	r9, r2
   32970:	bhi	32910 <contractText@@Base+0x246c>
   32974:	b	328c8 <contractText@@Base+0x2424>
   32978:	ldr	r0, [pc, #12]	; 3298c <contractText@@Base+0x24e8>
   3297c:	add	r0, pc, r0
   32980:	bl	1c6fc <logSystemError@@Base>
   32984:	mov	r0, r4
   32988:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3298c:	ldrdeq	r2, [r2], -ip
   32990:	push	{r4, r5, r6, r7, r8, lr}
   32994:	mov	r4, r0
   32998:	ldr	r0, [r0]
   3299c:	mov	r8, r1
   329a0:	mov	r7, r2
   329a4:	cmp	r0, #0
   329a8:	beq	329b0 <contractText@@Base+0x250c>
   329ac:	bl	f4f4 <free@plt>
   329b0:	add	r6, r7, #1
   329b4:	lsl	r6, r6, #2
   329b8:	mov	r0, r6
   329bc:	bl	fb48 <malloc@plt>
   329c0:	cmp	r0, #0
   329c4:	mov	r5, r0
   329c8:	str	r0, [r4]
   329cc:	beq	329f4 <contractText@@Base+0x2550>
   329d0:	mov	r2, r7
   329d4:	mov	r1, r8
   329d8:	bl	f620 <wmemcpy@plt>
   329dc:	ldr	r2, [r4]
   329e0:	mov	r3, #0
   329e4:	mov	r0, #1
   329e8:	add	r6, r2, r6
   329ec:	str	r3, [r6, #-4]
   329f0:	pop	{r4, r5, r6, r7, r8, pc}
   329f4:	bl	1c740 <logMallocError@@Base>
   329f8:	mov	r0, r5
   329fc:	pop	{r4, r5, r6, r7, r8, pc}
   32a00:	ldr	ip, [pc, #424]	; 32bb0 <contractText@@Base+0x270c>
   32a04:	mov	r2, #1
   32a08:	push	{r4, r5, r6, r7, r8, lr}
   32a0c:	add	ip, pc, ip
   32a10:	ldr	lr, [pc, #412]	; 32bb4 <contractText@@Base+0x2710>
   32a14:	sub	sp, sp, #1040	; 0x410
   32a18:	ldr	r3, [pc, #408]	; 32bb8 <contractText@@Base+0x2714>
   32a1c:	add	r5, sp, #16
   32a20:	mov	r6, r1
   32a24:	sub	r1, r5, #4
   32a28:	ldr	r4, [ip, lr]
   32a2c:	add	r3, pc, r3
   32a30:	mov	r7, r0
   32a34:	ldr	ip, [r4]
   32a38:	str	ip, [sp, #1036]	; 0x40c
   32a3c:	bl	299f8 <getDataString@@Base>
   32a40:	cmp	r0, #0
   32a44:	bne	32a64 <contractText@@Base+0x25c0>
   32a48:	mov	r0, #1
   32a4c:	ldr	r2, [sp, #1036]	; 0x40c
   32a50:	ldr	r3, [r4]
   32a54:	cmp	r2, r3
   32a58:	bne	32bac <contractText@@Base+0x2708>
   32a5c:	add	sp, sp, #1040	; 0x410
   32a60:	pop	{r4, r5, r6, r7, r8, pc}
   32a64:	ldr	r0, [pc, #336]	; 32bbc <contractText@@Base+0x2718>
   32a68:	mov	r1, r5
   32a6c:	ldrb	r2, [sp, #12]
   32a70:	add	r0, pc, r0
   32a74:	bl	28e98 <isKeyword@@Base>
   32a78:	subs	r8, r0, #0
   32a7c:	beq	32ae8 <contractText@@Base+0x2644>
   32a80:	mov	r1, #3
   32a84:	strb	r1, [r6, #12]
   32a88:	mov	r0, r6
   32a8c:	bl	328ac <contractText@@Base+0x2408>
   32a90:	subs	r6, r0, #0
   32a94:	beq	32a48 <contractText@@Base+0x25a4>
   32a98:	sub	r1, r5, #12
   32a9c:	mov	r0, r7
   32aa0:	mov	r2, #0
   32aa4:	bl	293a8 <getDataText@@Base>
   32aa8:	cmp	r0, #0
   32aac:	beq	32a48 <contractText@@Base+0x25a4>
   32ab0:	ldr	r5, [r6]
   32ab4:	cmp	r5, #0
   32ab8:	beq	32b94 <contractText@@Base+0x26f0>
   32abc:	mov	r0, r5
   32ac0:	ldr	r6, [sp, #8]
   32ac4:	bl	f410 <wcslen@plt>
   32ac8:	cmp	r6, r0
   32acc:	beq	32b10 <contractText@@Base+0x266c>
   32ad0:	ldr	r1, [pc, #232]	; 32bc0 <contractText@@Base+0x271c>
   32ad4:	mov	r0, r7
   32ad8:	add	r1, pc, r1
   32adc:	bl	28dec <reportDataError@@Base>
   32ae0:	mov	r0, #0
   32ae4:	b	32a4c <contractText@@Base+0x25a8>
   32ae8:	ldr	r0, [pc, #212]	; 32bc4 <contractText@@Base+0x2720>
   32aec:	mov	r1, r5
   32af0:	ldrb	r2, [sp, #12]
   32af4:	add	r0, pc, r0
   32af8:	bl	28e98 <isKeyword@@Base>
   32afc:	cmp	r0, #0
   32b00:	beq	32b2c <contractText@@Base+0x2688>
   32b04:	strb	r8, [r6, #12]
   32b08:	mov	r1, r8
   32b0c:	b	32a88 <contractText@@Base+0x25e4>
   32b10:	mov	r1, r5
   32b14:	mov	r2, r6
   32b18:	ldr	r0, [sp, #4]
   32b1c:	bl	f770 <wmemcmp@plt>
   32b20:	cmp	r0, #0
   32b24:	bne	32ad0 <contractText@@Base+0x262c>
   32b28:	b	32a48 <contractText@@Base+0x25a4>
   32b2c:	sub	r0, r5, #12
   32b30:	mov	r1, r5
   32b34:	ldrb	r2, [sp, #12]
   32b38:	bl	28ef4 <isNumber@@Base>
   32b3c:	cmp	r0, #0
   32b40:	beq	32b78 <contractText@@Base+0x26d4>
   32b44:	ldr	r1, [sp, #4]
   32b48:	cmp	r1, #252	; 0xfc
   32b4c:	addls	r1, r1, #3
   32b50:	uxtbls	r1, r1
   32b54:	strbls	r1, [r6, #12]
   32b58:	bls	32a88 <contractText@@Base+0x25e4>
   32b5c:	ldr	r1, [pc, #100]	; 32bc8 <contractText@@Base+0x2724>
   32b60:	mov	r0, r7
   32b64:	mov	r3, r5
   32b68:	ldrb	r2, [sp, #12]
   32b6c:	add	r1, pc, r1
   32b70:	bl	28dec <reportDataError@@Base>
   32b74:	b	32a48 <contractText@@Base+0x25a4>
   32b78:	ldr	r1, [pc, #76]	; 32bcc <contractText@@Base+0x2728>
   32b7c:	mov	r0, r7
   32b80:	mov	r3, r5
   32b84:	ldrb	r2, [sp, #12]
   32b88:	add	r1, pc, r1
   32b8c:	bl	28dec <reportDataError@@Base>
   32b90:	b	32a48 <contractText@@Base+0x25a4>
   32b94:	mov	r0, r6
   32b98:	ldmib	sp, {r1, r2}
   32b9c:	bl	32990 <contractText@@Base+0x24ec>
   32ba0:	cmp	r0, #0
   32ba4:	beq	32ae0 <contractText@@Base+0x263c>
   32ba8:	b	32a48 <contractText@@Base+0x25a4>
   32bac:	bl	f950 <__stack_chk_fail@plt>
   32bb0:	andeq	r0, r4, ip, rrx
   32bb4:			; <UNDEFINED> instruction: 0x000003b4
   32bb8:	andeq	r3, r2, r0, asr #32
   32bbc:	ldrdeq	r3, [r2], -r0
   32bc0:	andeq	r2, r2, r8, ror #31
   32bc4:	andeq	r3, r2, ip, ror #2
   32bc8:	andeq	r2, r2, r4, lsr pc
   32bcc:	strdeq	r2, [r2], -ip
   32bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32bd4:	sub	sp, sp, #44	; 0x2c
   32bd8:	ldr	r4, [pc, #312]	; 32d18 <contractText@@Base+0x2874>
   32bdc:	mov	r6, r1
   32be0:	ldr	r3, [pc, #308]	; 32d1c <contractText@@Base+0x2878>
   32be4:	add	r1, sp, #20
   32be8:	add	r4, pc, r4
   32bec:	ldr	r2, [pc, #300]	; 32d20 <contractText@@Base+0x287c>
   32bf0:	mov	r7, r0
   32bf4:	ldr	r5, [r4, r3]
   32bf8:	add	r2, pc, r2
   32bfc:	ldr	r3, [r5]
   32c00:	str	r3, [sp, #36]	; 0x24
   32c04:	bl	2933c <getDataOperand@@Base>
   32c08:	cmp	r0, #0
   32c0c:	bne	32c28 <contractText@@Base+0x2784>
   32c10:	ldr	r2, [sp, #36]	; 0x24
   32c14:	ldr	r3, [r5]
   32c18:	cmp	r2, r3
   32c1c:	bne	32d14 <contractText@@Base+0x2870>
   32c20:	add	sp, sp, #44	; 0x2c
   32c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c28:	ldr	r3, [pc, #244]	; 32d24 <contractText@@Base+0x2880>
   32c2c:	ldr	r9, [sp, #20]
   32c30:	add	r3, pc, r3
   32c34:	ldr	sl, [sp, #24]
   32c38:	ldr	r1, [r3]
   32c3c:	ldr	r3, [pc, #228]	; 32d28 <contractText@@Base+0x2884>
   32c40:	cmp	r1, #0
   32c44:	ldr	r8, [r4, r3]
   32c48:	beq	32c88 <contractText@@Base+0x27e4>
   32c4c:	ldr	ip, [pc, #216]	; 32d2c <contractText@@Base+0x2888>
   32c50:	add	r0, sp, #28
   32c54:	ldrb	r2, [r8]
   32c58:	mov	r3, #4
   32c5c:	add	ip, pc, ip
   32c60:	str	ip, [sp]
   32c64:	str	r9, [sp, #28]
   32c68:	str	sl, [sp, #32]
   32c6c:	bl	f7b8 <bsearch@plt>
   32c70:	cmp	r0, #0
   32c74:	beq	32cec <contractText@@Base+0x2848>
   32c78:	ldr	r3, [r0]
   32c7c:	mov	r0, #1
   32c80:	str	r3, [r6]
   32c84:	b	32c10 <contractText@@Base+0x276c>
   32c88:	ldrb	r1, [r8]
   32c8c:	lsl	r0, r1, #2
   32c90:	str	r1, [sp, #12]
   32c94:	bl	fb48 <malloc@plt>
   32c98:	ldr	r1, [sp, #12]
   32c9c:	subs	fp, r0, #0
   32ca0:	beq	32d0c <contractText@@Base+0x2868>
   32ca4:	ldr	r3, [pc, #132]	; 32d30 <contractText@@Base+0x288c>
   32ca8:	mov	ip, r1
   32cac:	mov	r2, fp
   32cb0:	ldr	r3, [r4, r3]
   32cb4:	subs	ip, ip, #1
   32cb8:	str	r3, [r2], #4
   32cbc:	add	r3, r3, #8
   32cc0:	bne	32cb4 <contractText@@Base+0x2810>
   32cc4:	ldr	r3, [pc, #104]	; 32d34 <contractText@@Base+0x2890>
   32cc8:	mov	r0, fp
   32ccc:	mov	r2, #4
   32cd0:	add	r3, pc, r3
   32cd4:	bl	f53c <qsort@plt>
   32cd8:	ldr	r3, [pc, #88]	; 32d38 <contractText@@Base+0x2894>
   32cdc:	mov	r1, fp
   32ce0:	add	r3, pc, r3
   32ce4:	str	fp, [r3]
   32ce8:	b	32c4c <contractText@@Base+0x27a8>
   32cec:	ldr	r1, [pc, #72]	; 32d3c <contractText@@Base+0x2898>
   32cf0:	mov	r0, r7
   32cf4:	mov	r2, sl
   32cf8:	mov	r3, r9
   32cfc:	add	r1, pc, r1
   32d00:	bl	28dec <reportDataError@@Base>
   32d04:	mov	r0, #0
   32d08:	b	32c10 <contractText@@Base+0x276c>
   32d0c:	bl	1c740 <logMallocError@@Base>
   32d10:	b	32d04 <contractText@@Base+0x2860>
   32d14:	bl	f950 <__stack_chk_fail@plt>
   32d18:	muleq	r3, r0, lr
   32d1c:			; <UNDEFINED> instruction: 0x000003b4
   32d20:	andeq	r2, r2, r0, ror #29
   32d24:	andeq	r1, r4, r8, lsr r0
   32d28:	andeq	r0, r0, r8, lsl r4
   32d2c:			; <UNDEFINED> instruction: 0xfffff680
   32d30:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   32d34:			; <UNDEFINED> instruction: 0xfffff6a4
   32d38:	andeq	r0, r4, r8, lsl #31
   32d3c:	strdeq	r2, [r2], -r4
   32d40:	ldr	r3, [pc, #124]	; 32dc4 <contractText@@Base+0x2920>
   32d44:	ldr	r2, [pc, #124]	; 32dc8 <contractText@@Base+0x2924>
   32d48:	add	r3, pc, r3
   32d4c:	push	{r4, r5, r6, lr}
   32d50:	sub	sp, sp, #8
   32d54:	ldr	r4, [r3, r2]
   32d58:	mov	r5, r0
   32d5c:	mov	r0, r1
   32d60:	ldrb	r1, [r1, #12]
   32d64:	ldr	r3, [r4]
   32d68:	str	r3, [sp, #4]
   32d6c:	bl	328ac <contractText@@Base+0x2408>
   32d70:	subs	r6, r0, #0
   32d74:	moveq	r0, r6
   32d78:	beq	32da8 <contractText@@Base+0x2904>
   32d7c:	mov	r0, r5
   32d80:	mov	r1, sp
   32d84:	bl	32bd0 <contractText@@Base+0x272c>
   32d88:	cmp	r0, #0
   32d8c:	ldrne	r3, [sp]
   32d90:	movne	r0, #1
   32d94:	ldrne	r2, [r6, #44]	; 0x2c
   32d98:	moveq	r0, #1
   32d9c:	ldrne	r3, [r3, #4]
   32da0:	orrne	r3, r2, r3
   32da4:	strne	r3, [r6, #44]	; 0x2c
   32da8:	ldr	r2, [sp, #4]
   32dac:	ldr	r3, [r4]
   32db0:	cmp	r2, r3
   32db4:	bne	32dc0 <contractText@@Base+0x291c>
   32db8:	add	sp, sp, #8
   32dbc:	pop	{r4, r5, r6, pc}
   32dc0:	bl	f950 <__stack_chk_fail@plt>
   32dc4:	andeq	pc, r3, r0, lsr sp	; <UNPREDICTABLE>
   32dc8:			; <UNDEFINED> instruction: 0x000003b4
   32dcc:	ldr	ip, [pc, #192]	; 32e94 <contractText@@Base+0x29f0>
   32dd0:	mov	r2, #1
   32dd4:	push	{r4, r5, r6, r7, lr}
   32dd8:	add	ip, pc, ip
   32ddc:	ldr	lr, [pc, #180]	; 32e98 <contractText@@Base+0x29f4>
   32de0:	sub	sp, sp, #1040	; 0x410
   32de4:	sub	sp, sp, #12
   32de8:	ldr	r3, [pc, #172]	; 32e9c <contractText@@Base+0x29f8>
   32dec:	add	r5, sp, #24
   32df0:	mov	r6, r1
   32df4:	ldr	r4, [ip, lr]
   32df8:	sub	r1, r5, #4
   32dfc:	add	r3, pc, r3
   32e00:	mov	r7, r0
   32e04:	ldr	ip, [r4]
   32e08:	str	ip, [sp, #1044]	; 0x414
   32e0c:	bl	299f8 <getDataString@@Base>
   32e10:	cmp	r0, #0
   32e14:	bne	32e38 <contractText@@Base+0x2994>
   32e18:	mov	r0, #1
   32e1c:	ldr	r2, [sp, #1044]	; 0x414
   32e20:	ldr	r3, [r4]
   32e24:	cmp	r2, r3
   32e28:	bne	32e90 <contractText@@Base+0x29ec>
   32e2c:	add	sp, sp, #1040	; 0x410
   32e30:	add	sp, sp, #12
   32e34:	pop	{r4, r5, r6, r7, pc}
   32e38:	ldr	r2, [r6]
   32e3c:	sub	r0, r5, #12
   32e40:	ldrb	ip, [sp, #20]
   32e44:	mov	r3, #4
   32e48:	ldr	lr, [pc, #80]	; 32ea0 <contractText@@Base+0x29fc>
   32e4c:	ldr	r1, [r2, #12]
   32e50:	add	lr, pc, lr
   32e54:	ldr	r2, [r2, #16]
   32e58:	str	lr, [sp]
   32e5c:	str	r5, [sp, #12]
   32e60:	str	ip, [sp, #16]
   32e64:	bl	f7b8 <bsearch@plt>
   32e68:	cmp	r0, #0
   32e6c:	beq	32e18 <contractText@@Base+0x2974>
   32e70:	ldr	r1, [pc, #44]	; 32ea4 <contractText@@Base+0x2a00>
   32e74:	mov	r0, r7
   32e78:	ldr	r2, [pc, #40]	; 32ea8 <contractText@@Base+0x2a04>
   32e7c:	mov	r3, r6
   32e80:	add	r1, pc, r1
   32e84:	add	r2, pc, r2
   32e88:	bl	29c18 <processPropertyOperand@@Base>
   32e8c:	b	32e1c <contractText@@Base+0x2978>
   32e90:	bl	f950 <__stack_chk_fail@plt>
   32e94:	andeq	pc, r3, r0, lsr #25
   32e98:			; <UNDEFINED> instruction: 0x000003b4
   32e9c:	andeq	r2, r2, ip, lsr ip
   32ea0:			; <UNDEFINED> instruction: 0xfffff49c
   32ea4:	muleq	r3, ip, r9
   32ea8:	ldrdeq	r2, [r2], -ip
   32eac:	ldr	r3, [pc, #264]	; 32fbc <contractText@@Base+0x2b18>
   32eb0:	ldr	r2, [pc, #264]	; 32fc0 <contractText@@Base+0x2b1c>
   32eb4:	add	r3, pc, r3
   32eb8:	push	{r4, r5, r6, r7, r8, lr}
   32ebc:	mov	r4, r1
   32ec0:	ldr	r5, [r3, r2]
   32ec4:	sub	sp, sp, #16
   32ec8:	mov	r7, r0
   32ecc:	ldrb	r1, [r1, #12]
   32ed0:	mov	r0, r4
   32ed4:	ldr	r3, [r5]
   32ed8:	str	r3, [sp, #12]
   32edc:	bl	328ac <contractText@@Base+0x2408>
   32ee0:	subs	r8, r0, #0
   32ee4:	moveq	r3, r8
   32ee8:	beq	32f38 <contractText@@Base+0x2a94>
   32eec:	add	r6, sp, #4
   32ef0:	mov	r2, r4
   32ef4:	mov	r0, r7
   32ef8:	mov	r3, #0
   32efc:	mov	r1, r6
   32f00:	str	r3, [r6, #4]
   32f04:	str	r3, [sp, #4]
   32f08:	bl	326f0 <contractText@@Base+0x224c>
   32f0c:	cmp	r0, #0
   32f10:	beq	32f34 <contractText@@Base+0x2a90>
   32f14:	ldrb	r3, [sp, #5]
   32f18:	mov	r0, r7
   32f1c:	cmp	r3, #255	; 0xff
   32f20:	beq	32f94 <contractText@@Base+0x2af0>
   32f24:	add	r1, sp, #8
   32f28:	bl	32bd0 <contractText@@Base+0x272c>
   32f2c:	cmp	r0, #0
   32f30:	bne	32f54 <contractText@@Base+0x2ab0>
   32f34:	mov	r3, #1
   32f38:	ldr	r2, [sp, #12]
   32f3c:	mov	r0, r3
   32f40:	ldr	r3, [r5]
   32f44:	cmp	r2, r3
   32f48:	bne	32fb8 <contractText@@Base+0x2b14>
   32f4c:	add	sp, sp, #16
   32f50:	pop	{r4, r5, r6, r7, r8, pc}
   32f54:	ldr	r1, [r8, #36]	; 0x24
   32f58:	ldr	r0, [r8, #32]
   32f5c:	add	r1, r1, #1
   32f60:	lsl	r1, r1, #3
   32f64:	bl	f878 <realloc@plt>
   32f68:	subs	r4, r0, #0
   32f6c:	beq	32fa4 <contractText@@Base+0x2b00>
   32f70:	ldr	r2, [r8, #36]	; 0x24
   32f74:	mov	r3, #1
   32f78:	ldm	r6, {r0, r1}
   32f7c:	str	r4, [r8, #32]
   32f80:	add	ip, r2, r3
   32f84:	add	r4, r4, r2, lsl #3
   32f88:	str	ip, [r8, #36]	; 0x24
   32f8c:	stm	r4, {r0, r1}
   32f90:	b	32f38 <contractText@@Base+0x2a94>
   32f94:	ldr	r1, [pc, #40]	; 32fc4 <contractText@@Base+0x2b20>
   32f98:	add	r1, pc, r1
   32f9c:	bl	28dec <reportDataError@@Base>
   32fa0:	b	32f34 <contractText@@Base+0x2a90>
   32fa4:	ldr	r0, [pc, #28]	; 32fc8 <contractText@@Base+0x2b24>
   32fa8:	add	r0, pc, r0
   32fac:	bl	1c6fc <logSystemError@@Base>
   32fb0:	mov	r3, r4
   32fb4:	b	32f38 <contractText@@Base+0x2a94>
   32fb8:	bl	f950 <__stack_chk_fail@plt>
   32fbc:	andeq	pc, r3, r4, asr #23
   32fc0:			; <UNDEFINED> instruction: 0x000003b4
   32fc4:	andeq	r2, r2, ip, ror fp
   32fc8:			; <UNDEFINED> instruction: 0x000229b0
   32fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32fd0:	sub	sp, sp, #1056	; 0x420
   32fd4:	ldr	r8, [pc, #1000]	; 333c4 <contractText@@Base+0x2f20>
   32fd8:	sub	sp, sp, #12
   32fdc:	ldr	ip, [pc, #996]	; 333c8 <contractText@@Base+0x2f24>
   32fe0:	add	r4, sp, #40	; 0x28
   32fe4:	add	r8, pc, r8
   32fe8:	ldr	r3, [pc, #988]	; 333cc <contractText@@Base+0x2f28>
   32fec:	mov	r6, r1
   32ff0:	mov	r5, r2
   32ff4:	ldr	ip, [r8, ip]
   32ff8:	sub	r1, r4, #4
   32ffc:	mov	r2, #1
   33000:	add	r3, pc, r3
   33004:	str	r0, [sp, #16]
   33008:	str	ip, [sp, #12]
   3300c:	ldr	ip, [ip]
   33010:	str	ip, [sp, #1060]	; 0x424
   33014:	bl	299f8 <getDataString@@Base>
   33018:	cmp	r0, #0
   3301c:	beq	33324 <contractText@@Base+0x2e80>
   33020:	ldrb	sl, [sp, #36]	; 0x24
   33024:	mov	r0, r4
   33028:	mov	r1, #43	; 0x2b
   3302c:	mov	r2, sl
   33030:	bl	f7a0 <wmemchr@plt>
   33034:	str	r4, [sp, #28]
   33038:	subs	fp, r0, #0
   3303c:	rsbne	r3, r4, fp
   33040:	moveq	r3, sl
   33044:	asrne	r3, r3, #2
   33048:	str	r3, [sp, #32]
   3304c:	cmp	r3, #0
   33050:	beq	33390 <contractText@@Base+0x2eec>
   33054:	sub	r9, r4, #12
   33058:	ldr	lr, [pc, #880]	; 333d0 <contractText@@Base+0x2f2c>
   3305c:	ldr	r1, [r5, #4]
   33060:	mov	r3, #4
   33064:	ldr	r2, [r5, #8]
   33068:	add	lr, pc, lr
   3306c:	mov	r0, r9
   33070:	str	lr, [sp]
   33074:	bl	f7b8 <bsearch@plt>
   33078:	subs	r7, r0, #0
   3307c:	beq	333a4 <contractText@@Base+0x2f00>
   33080:	ldr	r3, [r7]
   33084:	cmp	fp, #0
   33088:	ldr	r3, [r3, #8]
   3308c:	str	r3, [r6]
   33090:	beq	3336c <contractText@@Base+0x2ec8>
   33094:	rsb	r5, r4, fp
   33098:	mvn	r5, r5, asr #2
   3309c:	adds	r5, sl, r5
   330a0:	addne	r3, sp, #24
   330a4:	strne	r3, [sp, #8]
   330a8:	movne	sl, #0
   330ac:	strne	sl, [sp, #20]
   330b0:	bne	3315c <contractText@@Base+0x2cb8>
   330b4:	b	3337c <contractText@@Base+0x2ed8>
   330b8:	ldrb	r2, [r3, #12]
   330bc:	lsrs	r2, r2, #7
   330c0:	bne	33208 <contractText@@Base+0x2d64>
   330c4:	ldrb	r2, [r3, #13]
   330c8:	tst	r2, #1
   330cc:	bne	33234 <contractText@@Base+0x2d90>
   330d0:	ldrb	r2, [r3, #13]
   330d4:	tst	r2, #2
   330d8:	bne	33278 <contractText@@Base+0x2dd4>
   330dc:	ldrb	r2, [r3, #13]
   330e0:	tst	r2, #4
   330e4:	bne	332c0 <contractText@@Base+0x2e1c>
   330e8:	ldrb	r2, [r3, #12]
   330ec:	tst	r2, #40	; 0x28
   330f0:	beq	33308 <contractText@@Base+0x2e64>
   330f4:	cmp	sl, #0
   330f8:	bne	33308 <contractText@@Base+0x2e64>
   330fc:	add	r0, sp, #24
   33100:	ldr	r1, [sp, #28]
   33104:	ldr	r2, [sp, #32]
   33108:	ldr	sl, [r3, #8]
   3310c:	bl	28ef4 <isNumber@@Base>
   33110:	mvn	sl, sl
   33114:	uxtb	sl, sl
   33118:	cmp	r0, #0
   3311c:	beq	33308 <contractText@@Base+0x2e64>
   33120:	ldr	r3, [sp, #24]
   33124:	cmp	r3, #0
   33128:	blt	33308 <contractText@@Base+0x2e64>
   3312c:	cmp	sl, r3
   33130:	blt	33308 <contractText@@Base+0x2e64>
   33134:	ldr	r2, [r6]
   33138:	mov	sl, #1
   3313c:	add	r3, r2, r3
   33140:	str	r3, [r6]
   33144:	cmp	fp, #0
   33148:	beq	3336c <contractText@@Base+0x2ec8>
   3314c:	rsb	r4, r4, fp
   33150:	mvn	r4, r4, asr #2
   33154:	adds	r5, r5, r4
   33158:	beq	3337c <contractText@@Base+0x2ed8>
   3315c:	add	r4, fp, #4
   33160:	mov	r2, r5
   33164:	mov	r1, #43	; 0x2b
   33168:	mov	r0, r4
   3316c:	bl	f7a0 <wmemchr@plt>
   33170:	str	r4, [sp, #28]
   33174:	subs	fp, r0, #0
   33178:	rsbne	r3, r4, fp
   3317c:	moveq	r3, r5
   33180:	asrne	r3, r3, #2
   33184:	str	r3, [sp, #32]
   33188:	ldr	r3, [r7]
   3318c:	ldrb	r2, [r3, #12]
   33190:	tst	r2, #1
   33194:	beq	331a4 <contractText@@Base+0x2d00>
   33198:	ldr	r2, [r6]
   3319c:	tst	r2, #196608	; 0x30000
   331a0:	beq	332e4 <contractText@@Base+0x2e40>
   331a4:	ldrb	r2, [r3, #12]
   331a8:	tst	r2, #2
   331ac:	beq	330b8 <contractText@@Base+0x2c14>
   331b0:	ldr	r3, [pc, #540]	; 333d4 <contractText@@Base+0x2f30>
   331b4:	mov	r0, r6
   331b8:	mov	r2, r9
   331bc:	ldr	r1, [r8, r3]
   331c0:	bl	32314 <contractText@@Base+0x1e70>
   331c4:	cmp	r0, #0
   331c8:	bne	33144 <contractText@@Base+0x2ca0>
   331cc:	ldr	r3, [r7]
   331d0:	ldrb	r2, [r3, #12]
   331d4:	tst	r2, #16
   331d8:	beq	330b8 <contractText@@Base+0x2c14>
   331dc:	ldr	r3, [pc, #500]	; 333d8 <contractText@@Base+0x2f34>
   331e0:	mov	r0, r6
   331e4:	mov	r2, r9
   331e8:	ldr	r1, [r8, r3]
   331ec:	bl	32314 <contractText@@Base+0x1e70>
   331f0:	cmp	r0, #0
   331f4:	bne	33144 <contractText@@Base+0x2ca0>
   331f8:	ldr	r3, [r7]
   331fc:	ldrb	r2, [r3, #12]
   33200:	lsrs	r2, r2, #7
   33204:	beq	330c4 <contractText@@Base+0x2c20>
   33208:	ldr	r3, [pc, #460]	; 333dc <contractText@@Base+0x2f38>
   3320c:	mov	r0, r6
   33210:	mov	r2, r9
   33214:	ldr	r1, [r8, r3]
   33218:	bl	32314 <contractText@@Base+0x1e70>
   3321c:	cmp	r0, #0
   33220:	bne	33144 <contractText@@Base+0x2ca0>
   33224:	ldr	r3, [r7]
   33228:	ldrb	r2, [r3, #13]
   3322c:	tst	r2, #1
   33230:	beq	330d0 <contractText@@Base+0x2c2c>
   33234:	ldr	r3, [pc, #420]	; 333e0 <contractText@@Base+0x2f3c>
   33238:	mov	r0, r6
   3323c:	mov	r2, r9
   33240:	ldr	r1, [r8, r3]
   33244:	bl	32314 <contractText@@Base+0x1e70>
   33248:	cmp	r0, #0
   3324c:	bne	33144 <contractText@@Base+0x2ca0>
   33250:	ldr	r3, [sp, #20]
   33254:	cmp	r3, #0
   33258:	bne	33268 <contractText@@Base+0x2dc4>
   3325c:	ldr	r3, [sp, #32]
   33260:	cmp	r3, #1
   33264:	beq	33344 <contractText@@Base+0x2ea0>
   33268:	ldr	r3, [r7]
   3326c:	ldrb	r2, [r3, #13]
   33270:	tst	r2, #2
   33274:	beq	330dc <contractText@@Base+0x2c38>
   33278:	ldr	r3, [pc, #356]	; 333e4 <contractText@@Base+0x2f40>
   3327c:	mov	r0, r6
   33280:	mov	r2, r9
   33284:	ldr	r1, [r8, r3]
   33288:	bl	32314 <contractText@@Base+0x1e70>
   3328c:	cmp	r0, #0
   33290:	bne	33144 <contractText@@Base+0x2ca0>
   33294:	ldr	r3, [pc, #324]	; 333e0 <contractText@@Base+0x2f3c>
   33298:	mov	r0, r6
   3329c:	mov	r2, r9
   332a0:	ldr	r1, [r8, r3]
   332a4:	bl	32314 <contractText@@Base+0x1e70>
   332a8:	cmp	r0, #0
   332ac:	bne	33144 <contractText@@Base+0x2ca0>
   332b0:	ldr	r3, [r7]
   332b4:	ldrb	r2, [r3, #13]
   332b8:	tst	r2, #4
   332bc:	beq	330e8 <contractText@@Base+0x2c44>
   332c0:	ldr	r3, [pc, #288]	; 333e8 <contractText@@Base+0x2f44>
   332c4:	mov	r0, r6
   332c8:	mov	r2, r9
   332cc:	ldr	r1, [r8, r3]
   332d0:	bl	32314 <contractText@@Base+0x1e70>
   332d4:	cmp	r0, #0
   332d8:	bne	33144 <contractText@@Base+0x2ca0>
   332dc:	ldr	r3, [r7]
   332e0:	b	330e8 <contractText@@Base+0x2c44>
   332e4:	ldr	r3, [pc, #256]	; 333ec <contractText@@Base+0x2f48>
   332e8:	mov	r0, r6
   332ec:	mov	r2, r9
   332f0:	ldr	r1, [r8, r3]
   332f4:	bl	32314 <contractText@@Base+0x1e70>
   332f8:	cmp	r0, #0
   332fc:	bne	33144 <contractText@@Base+0x2ca0>
   33300:	ldr	r3, [r7]
   33304:	b	331a4 <contractText@@Base+0x2d00>
   33308:	ldr	r1, [pc, #224]	; 333f0 <contractText@@Base+0x2f4c>
   3330c:	ldr	r0, [sp, #16]
   33310:	add	r1, pc, r1
   33314:	ldr	r2, [sp, #32]
   33318:	ldr	r3, [sp, #28]
   3331c:	bl	28dec <reportDataError@@Base>
   33320:	mov	r0, #0
   33324:	ldr	r1, [sp, #12]
   33328:	ldr	r2, [sp, #1060]	; 0x424
   3332c:	ldr	r3, [r1]
   33330:	cmp	r2, r3
   33334:	bne	333c0 <contractText@@Base+0x2f1c>
   33338:	add	sp, sp, #1056	; 0x420
   3333c:	add	sp, sp, #12
   33340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33344:	ldr	r1, [sp, #28]
   33348:	str	r3, [sp, #20]
   3334c:	ldr	r2, [r6]
   33350:	ldr	r3, [r1]
   33354:	lsr	r1, r3, #8
   33358:	uxtb	r3, r3
   3335c:	orr	r3, r3, r1, lsl #24
   33360:	orr	r3, r2, r3
   33364:	str	r3, [r6]
   33368:	b	33144 <contractText@@Base+0x2ca0>
   3336c:	ldr	r0, [r7]
   33370:	cmp	r0, #0
   33374:	bne	33324 <contractText@@Base+0x2e80>
   33378:	b	33320 <contractText@@Base+0x2e7c>
   3337c:	ldr	r1, [pc, #112]	; 333f4 <contractText@@Base+0x2f50>
   33380:	ldr	r0, [sp, #16]
   33384:	add	r1, pc, r1
   33388:	bl	28dec <reportDataError@@Base>
   3338c:	b	33320 <contractText@@Base+0x2e7c>
   33390:	ldr	r1, [pc, #96]	; 333f8 <contractText@@Base+0x2f54>
   33394:	ldr	r0, [sp, #16]
   33398:	add	r1, pc, r1
   3339c:	bl	28dec <reportDataError@@Base>
   333a0:	b	33320 <contractText@@Base+0x2e7c>
   333a4:	ldr	r1, [pc, #80]	; 333fc <contractText@@Base+0x2f58>
   333a8:	ldr	r0, [sp, #16]
   333ac:	add	r1, pc, r1
   333b0:	ldr	r2, [sp, #32]
   333b4:	ldr	r3, [sp, #28]
   333b8:	bl	28dec <reportDataError@@Base>
   333bc:	b	33320 <contractText@@Base+0x2e7c>
   333c0:	bl	f950 <__stack_chk_fail@plt>
   333c4:	muleq	r3, r4, sl
   333c8:			; <UNDEFINED> instruction: 0x000003b4
   333cc:	andeq	r2, r2, r0, lsr fp
   333d0:			; <UNDEFINED> instruction: 0xfffff294
   333d4:	andeq	r0, r0, r4, lsl #10
   333d8:			; <UNDEFINED> instruction: 0x000004b8
   333dc:			; <UNDEFINED> instruction: 0x000004b4
   333e0:	andeq	r0, r0, r0, lsl #9
   333e4:	andeq	r0, r0, r8, lsl r5
   333e8:	andeq	r0, r0, r0, lsr r5
   333ec:	muleq	r0, r8, r3
   333f0:	andeq	r2, r2, r8, ror #16
   333f4:	ldrdeq	r2, [r2], -r8
   333f8:	muleq	r2, r0, r7
   333fc:	muleq	r2, r4, r7
   33400:	ldr	r3, [pc, #288]	; 33528 <contractText@@Base+0x3084>
   33404:	ldr	r2, [pc, #288]	; 3352c <contractText@@Base+0x3088>
   33408:	add	r3, pc, r3
   3340c:	push	{r4, r5, r6, r7, r8, lr}
   33410:	mov	r4, r1
   33414:	ldr	r5, [r3, r2]
   33418:	sub	sp, sp, #24
   3341c:	mov	r6, r0
   33420:	ldrb	r1, [r1, #12]
   33424:	mov	r0, r4
   33428:	ldr	r3, [r5]
   3342c:	str	r3, [sp, #20]
   33430:	bl	328ac <contractText@@Base+0x2408>
   33434:	subs	r8, r0, #0
   33438:	moveq	ip, r8
   3343c:	beq	33484 <contractText@@Base+0x2fe0>
   33440:	ldrb	r2, [r4, #13]
   33444:	add	r7, sp, #4
   33448:	mov	r0, r6
   3344c:	mov	r3, #0
   33450:	tst	r2, #3
   33454:	mov	r1, r7
   33458:	mov	r2, r4
   3345c:	str	r3, [sp, #16]
   33460:	str	r3, [sp, #4]
   33464:	str	r3, [sp, #8]
   33468:	str	r3, [sp, #12]
   3346c:	movne	r3, #1
   33470:	strbne	r3, [sp, #16]
   33474:	bl	326f0 <contractText@@Base+0x224c>
   33478:	cmp	r0, #0
   3347c:	bne	334a0 <contractText@@Base+0x2ffc>
   33480:	mov	ip, #1
   33484:	ldr	r2, [sp, #20]
   33488:	mov	r0, ip
   3348c:	ldr	r3, [r5]
   33490:	cmp	r2, r3
   33494:	bne	33524 <contractText@@Base+0x3080>
   33498:	add	sp, sp, #24
   3349c:	pop	{r4, r5, r6, r7, r8, pc}
   334a0:	mov	r0, r6
   334a4:	add	r1, sp, #8
   334a8:	mov	r2, r4
   334ac:	bl	32fcc <contractText@@Base+0x2b28>
   334b0:	cmp	r0, #0
   334b4:	beq	33480 <contractText@@Base+0x2fdc>
   334b8:	mov	r0, r6
   334bc:	mov	r2, r4
   334c0:	add	r1, sp, #12
   334c4:	bl	32fcc <contractText@@Base+0x2b28>
   334c8:	cmp	r0, #0
   334cc:	beq	33480 <contractText@@Base+0x2fdc>
   334d0:	ldr	r1, [r8, #24]
   334d4:	ldr	r0, [r8, #20]
   334d8:	add	r1, r1, #1
   334dc:	lsl	r1, r1, #4
   334e0:	bl	f878 <realloc@plt>
   334e4:	subs	r4, r0, #0
   334e8:	beq	33510 <contractText@@Base+0x306c>
   334ec:	ldr	r6, [r8, #24]
   334f0:	mov	ip, #1
   334f4:	str	r4, [r8, #20]
   334f8:	add	r3, r6, ip
   334fc:	str	r3, [r8, #24]
   33500:	ldm	r7, {r0, r1, r2, r3}
   33504:	add	r4, r4, r6, lsl #4
   33508:	stm	r4, {r0, r1, r2, r3}
   3350c:	b	33484 <contractText@@Base+0x2fe0>
   33510:	ldr	r0, [pc, #24]	; 33530 <contractText@@Base+0x308c>
   33514:	add	r0, pc, r0
   33518:	bl	1c6fc <logSystemError@@Base>
   3351c:	mov	ip, r4
   33520:	b	33484 <contractText@@Base+0x2fe0>
   33524:	bl	f950 <__stack_chk_fail@plt>
   33528:	andeq	pc, r3, r0, ror r6	; <UNPREDICTABLE>
   3352c:			; <UNDEFINED> instruction: 0x000003b4
   33530:	andeq	r2, r2, r4, asr #8

00033534 <copyKeyValues@@Base>:
   33534:	lsl	r2, r2, #1
   33538:	b	fb24 <memcpy@plt>
   3353c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33540:	sub	sp, sp, #76	; 0x4c
   33544:	ldr	lr, [pc, #500]	; 33740 <copyKeyValues@@Base+0x20c>
   33548:	mov	r9, r1
   3354c:	ldr	fp, [sp, #112]	; 0x70
   33550:	mov	r7, r2
   33554:	add	lr, pc, lr
   33558:	str	r0, [sp, #12]
   3355c:	ldr	r0, [pc, #480]	; 33744 <copyKeyValues@@Base+0x210>
   33560:	str	r3, [sp, #16]
   33564:	mov	r3, lr
   33568:	ldr	r3, [fp, #8]
   3356c:	ldr	r0, [lr, r0]
   33570:	str	r3, [sp, #4]
   33574:	ldr	r1, [sp, #4]
   33578:	ldr	r3, [r0]
   3357c:	subs	r6, r1, #1
   33580:	str	r0, [sp, #8]
   33584:	str	r3, [sp, #68]	; 0x44
   33588:	bmi	33720 <copyKeyValues@@Base+0x1ec>
   3358c:	ldr	r2, [sp, #12]
   33590:	lsl	r4, r7, #1
   33594:	ldr	r8, [fp]
   33598:	mov	r5, #0
   3359c:	str	fp, [sp, #20]
   335a0:	ldr	sl, [r2, #4]
   335a4:	b	335b4 <copyKeyValues@@Base+0x80>
   335a8:	sub	r6, fp, #1
   335ac:	cmp	r6, r5
   335b0:	blt	33604 <copyKeyValues@@Base+0xd0>
   335b4:	add	r3, r5, r6
   335b8:	add	r3, r3, r3, lsr #31
   335bc:	asr	fp, r3, #1
   335c0:	ldr	r3, [r8, fp, lsl #2]
   335c4:	add	r3, r3, r3, lsl #2
   335c8:	add	r1, sl, r3, lsl #3
   335cc:	ldrb	r2, [r1, #6]
   335d0:	cmp	r2, r7
   335d4:	bhi	335a8 <copyKeyValues@@Base+0x74>
   335d8:	bcc	335f8 <copyKeyValues@@Base+0xc4>
   335dc:	add	r1, r1, #17
   335e0:	mov	r0, r9
   335e4:	mov	r2, r4
   335e8:	bl	fd10 <memcmp@plt>
   335ec:	cmp	r0, #0
   335f0:	beq	33670 <copyKeyValues@@Base+0x13c>
   335f4:	blt	335a8 <copyKeyValues@@Base+0x74>
   335f8:	add	r5, fp, #1
   335fc:	cmp	r6, r5
   33600:	bge	335b4 <copyKeyValues@@Base+0x80>
   33604:	ldr	fp, [sp, #20]
   33608:	ldr	r3, [fp, #4]
   3360c:	ldr	r1, [sp, #4]
   33610:	cmp	r1, r3
   33614:	beq	33690 <copyKeyValues@@Base+0x15c>
   33618:	ldr	r2, [sp, #12]
   3361c:	ldr	r1, [sp, #16]
   33620:	ldr	r3, [r2, #12]
   33624:	cmp	r3, r1
   33628:	beq	336bc <copyKeyValues@@Base+0x188>
   3362c:	ldr	r3, [fp, #8]
   33630:	add	r0, r5, #1
   33634:	ldr	r1, [fp]
   33638:	lsl	r0, r0, #2
   3363c:	rsb	r2, r5, r3
   33640:	sub	r4, r0, #4
   33644:	add	r3, r3, #1
   33648:	add	r0, r1, r0
   3364c:	lsl	r2, r2, #2
   33650:	str	r3, [fp, #8]
   33654:	add	r1, r1, r4
   33658:	bl	f7dc <memmove@plt>
   3365c:	ldr	r3, [fp]
   33660:	ldr	r2, [sp, #16]
   33664:	mov	r0, #1
   33668:	str	r2, [r3, r4]
   3366c:	b	33674 <copyKeyValues@@Base+0x140>
   33670:	mov	r0, #1
   33674:	ldr	r1, [sp, #8]
   33678:	ldr	r2, [sp, #68]	; 0x44
   3367c:	ldr	r3, [r1]
   33680:	cmp	r2, r3
   33684:	bne	3373c <copyKeyValues@@Base+0x208>
   33688:	add	sp, sp, #76	; 0x4c
   3368c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33690:	cmp	r1, #0
   33694:	ldr	r0, [fp]
   33698:	lslne	r6, r1, #1
   3369c:	lslne	r1, r1, #3
   336a0:	moveq	r1, #256	; 0x100
   336a4:	moveq	r6, #64	; 0x40
   336a8:	bl	f878 <realloc@plt>
   336ac:	subs	r4, r0, #0
   336b0:	beq	33728 <copyKeyValues@@Base+0x1f4>
   336b4:	stm	fp, {r4, r6}
   336b8:	b	33618 <copyKeyValues@@Base+0xe4>
   336bc:	mov	r1, r9
   336c0:	mov	r2, r7
   336c4:	add	r0, sp, #45	; 0x2d
   336c8:	mov	r3, #0
   336cc:	mov	lr, #1
   336d0:	str	r3, [sp, #32]
   336d4:	str	r3, [sp, #64]	; 0x40
   336d8:	mvn	r4, #0
   336dc:	str	r3, [sp, #36]	; 0x24
   336e0:	str	r3, [sp, #40]	; 0x28
   336e4:	str	r3, [sp, #44]	; 0x2c
   336e8:	str	r3, [sp, #48]	; 0x30
   336ec:	str	r3, [sp, #52]	; 0x34
   336f0:	str	r3, [sp, #56]	; 0x38
   336f4:	str	r3, [sp, #60]	; 0x3c
   336f8:	strb	lr, [sp, #67]	; 0x43
   336fc:	strb	r7, [sp, #34]	; 0x22
   33700:	str	r4, [sp, #28]
   33704:	bl	33534 <copyKeyValues@@Base>
   33708:	ldr	r0, [sp, #12]
   3370c:	add	r1, sp, #28
   33710:	bl	320b4 <contractText@@Base+0x1c10>
   33714:	cmp	r0, #0
   33718:	bne	3362c <copyKeyValues@@Base+0xf8>
   3371c:	b	33674 <copyKeyValues@@Base+0x140>
   33720:	mov	r5, #0
   33724:	b	33608 <copyKeyValues@@Base+0xd4>
   33728:	ldr	r0, [pc, #24]	; 33748 <copyKeyValues@@Base+0x214>
   3372c:	add	r0, pc, r0
   33730:	bl	1c6fc <logSystemError@@Base>
   33734:	mov	r0, r4
   33738:	b	33674 <copyKeyValues@@Base+0x140>
   3373c:	bl	f950 <__stack_chk_fail@plt>
   33740:	andeq	pc, r3, r4, lsr #10
   33744:			; <UNDEFINED> instruction: 0x000003b4
   33748:	andeq	r2, r2, ip, lsr #4
   3374c:	ldr	ip, [pc, #256]	; 33854 <copyKeyValues@@Base+0x320>
   33750:	cmp	r2, #1
   33754:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33758:	add	fp, sp, #32
   3375c:	ldr	r4, [pc, #244]	; 33858 <copyKeyValues@@Base+0x324>
   33760:	sub	sp, sp, #28
   33764:	add	ip, pc, ip
   33768:	mov	r9, r3
   3376c:	mov	r6, r0
   33770:	ldr	r4, [ip, r4]
   33774:	mov	r3, ip
   33778:	mov	sl, r1
   3377c:	movls	r0, #1
   33780:	ldr	r3, [r4]
   33784:	str	r4, [fp, #-48]	; 0xffffffd0
   33788:	str	r3, [fp, #-40]	; 0xffffffd8
   3378c:	bls	33828 <copyKeyValues@@Base+0x2f4>
   33790:	sub	r5, r2, #1
   33794:	str	sp, [fp, #-52]	; 0xffffffcc
   33798:	mov	r4, #0
   3379c:	add	r1, r1, #2
   337a0:	uxtb	r5, r5
   337a4:	mov	r8, r4
   337a8:	lsl	r3, r5, #1
   337ac:	mov	r2, r5
   337b0:	add	r3, r3, #7
   337b4:	and	r3, r3, #1016	; 0x3f8
   337b8:	sub	sp, sp, r3
   337bc:	add	r7, sp, #8
   337c0:	mov	r0, r7
   337c4:	bl	33534 <copyKeyValues@@Base>
   337c8:	b	33800 <copyKeyValues@@Base+0x2cc>
   337cc:	mov	r0, r6
   337d0:	mov	r1, r7
   337d4:	mov	r2, r5
   337d8:	mov	r3, r9
   337dc:	bl	3374c <copyKeyValues@@Base+0x218>
   337e0:	cmp	r0, #0
   337e4:	beq	33820 <copyKeyValues@@Base+0x2ec>
   337e8:	cmp	r5, r8
   337ec:	beq	33844 <copyKeyValues@@Base+0x310>
   337f0:	ldrh	r3, [sl, r4]
   337f4:	add	r8, r8, #1
   337f8:	strh	r3, [r7, r4]
   337fc:	add	r4, r4, #2
   33800:	ldr	r3, [r6, #12]
   33804:	mov	r0, r6
   33808:	str	r9, [sp]
   3380c:	mov	r1, r7
   33810:	mov	r2, r5
   33814:	bl	3353c <copyKeyValues@@Base+0x8>
   33818:	cmp	r0, #0
   3381c:	bne	337cc <copyKeyValues@@Base+0x298>
   33820:	ldr	sp, [fp, #-52]	; 0xffffffcc
   33824:	mov	r0, #0
   33828:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3382c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33830:	ldr	r3, [r1]
   33834:	cmp	r2, r3
   33838:	bne	33850 <copyKeyValues@@Base+0x31c>
   3383c:	sub	sp, fp, #32
   33840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33844:	mov	r0, #1
   33848:	ldr	sp, [fp, #-52]	; 0xffffffcc
   3384c:	b	33828 <copyKeyValues@@Base+0x2f4>
   33850:	bl	f950 <__stack_chk_fail@plt>
   33854:	andeq	pc, r3, r4, lsl r3	; <UNPREDICTABLE>
   33858:			; <UNDEFINED> instruction: 0x000003b4

0003385c <compareKeyValues@@Base>:
   3385c:	ldrb	r2, [r0]
   33860:	ldrb	r3, [r1]
   33864:	cmp	r2, r3
   33868:	bcc	33894 <compareKeyValues@@Base+0x38>
   3386c:	bhi	3388c <compareKeyValues@@Base+0x30>
   33870:	ldrb	r2, [r0, #1]
   33874:	ldrb	r3, [r1, #1]
   33878:	cmp	r2, r3
   3387c:	bcc	33894 <compareKeyValues@@Base+0x38>
   33880:	movls	r0, #0
   33884:	movhi	r0, #1
   33888:	bx	lr
   3388c:	mov	r0, #1
   33890:	bx	lr
   33894:	mvn	r0, #0
   33898:	bx	lr
   3389c:	push	{r3, r4, r5, lr}
   338a0:	mov	r5, r0
   338a4:	mov	r4, r1
   338a8:	ldr	r0, [r0]
   338ac:	ldr	r1, [r1]
   338b0:	add	r0, r0, #4
   338b4:	add	r1, r1, #4
   338b8:	bl	3385c <compareKeyValues@@Base>
   338bc:	cmp	r0, #0
   338c0:	popne	{r3, r4, r5, pc}
   338c4:	ldr	r2, [r5]
   338c8:	ldr	r3, [r4]
   338cc:	cmp	r2, r3
   338d0:	bcc	338e0 <compareKeyValues@@Base+0x84>
   338d4:	movls	r0, #0
   338d8:	movhi	r0, #1
   338dc:	pop	{r3, r4, r5, pc}
   338e0:	mvn	r0, #0
   338e4:	pop	{r3, r4, r5, pc}
   338e8:	ldr	r0, [r0]
   338ec:	ldr	r1, [r1]
   338f0:	b	3385c <compareKeyValues@@Base>
   338f4:	ldr	r0, [r0]
   338f8:	ldr	r1, [r1]
   338fc:	b	3385c <compareKeyValues@@Base>

00033900 <findKeyValue@@Base>:
   33900:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   33904:	subs	r6, r1, #1
   33908:	mov	r5, #0
   3390c:	mov	r7, r0
   33910:	mov	r8, r2
   33914:	mov	r9, r3
   33918:	bpl	33930 <findKeyValue@@Base+0x30>
   3391c:	b	3395c <findKeyValue@@Base+0x5c>
   33920:	sublt	r6, r4, #1
   33924:	addge	r5, r4, #1
   33928:	cmp	r5, r6
   3392c:	bgt	3395c <findKeyValue@@Base+0x5c>
   33930:	add	ip, r5, r6
   33934:	mov	r0, r8
   33938:	add	ip, ip, ip, lsr #31
   3393c:	asr	r4, ip, #1
   33940:	add	r1, r7, r4, lsl #1
   33944:	bl	3385c <compareKeyValues@@Base>
   33948:	cmp	r0, #0
   3394c:	bne	33920 <findKeyValue@@Base+0x20>
   33950:	str	r4, [r9]
   33954:	mov	r0, #1
   33958:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3395c:	mov	r0, #0
   33960:	str	r5, [r9]
   33964:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   33968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3396c:	sub	sp, sp, #1056	; 0x420
   33970:	ldr	lr, [pc, #836]	; 33cbc <findKeyValue@@Base+0x3bc>
   33974:	sub	sp, sp, #12
   33978:	ldr	r4, [pc, #832]	; 33cc0 <findKeyValue@@Base+0x3c0>
   3397c:	add	ip, sp, #40	; 0x28
   33980:	add	lr, pc, lr
   33984:	str	ip, [sp, #16]
   33988:	ldr	r3, [pc, #820]	; 33cc4 <findKeyValue@@Base+0x3c4>
   3398c:	mov	fp, r1
   33990:	ldr	r4, [lr, r4]
   33994:	mov	sl, r2
   33998:	add	r1, sp, #36	; 0x24
   3399c:	mov	r2, #1
   339a0:	add	r3, pc, r3
   339a4:	mov	r9, r0
   339a8:	ldr	lr, [r4]
   339ac:	str	r4, [sp, #20]
   339b0:	str	lr, [sp, #1060]	; 0x424
   339b4:	bl	299f8 <getDataString@@Base>
   339b8:	cmp	r0, #0
   339bc:	bne	339e0 <findKeyValue@@Base+0xe0>
   339c0:	ldr	ip, [sp, #20]
   339c4:	ldr	r2, [sp, #1060]	; 0x424
   339c8:	ldr	r3, [ip]
   339cc:	cmp	r2, r3
   339d0:	bne	33cb8 <findKeyValue@@Base+0x3b8>
   339d4:	add	sp, sp, #1056	; 0x420
   339d8:	add	sp, sp, #12
   339dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   339e0:	add	r1, sp, #40	; 0x28
   339e4:	add	r8, sp, #28
   339e8:	add	r4, sp, #40	; 0x28
   339ec:	add	ip, fp, #13
   339f0:	mov	r0, fp
   339f4:	str	ip, [sp, #8]
   339f8:	mov	r2, #35	; 0x23
   339fc:	sub	ip, r1, #8
   33a00:	mov	r1, #0
   33a04:	str	ip, [sp, #12]
   33a08:	ldrb	r6, [sp, #36]	; 0x24
   33a0c:	bl	f6b0 <memset@plt>
   33a10:	mov	r3, #0
   33a14:	strb	r3, [fp, #2]
   33a18:	mov	r0, r4
   33a1c:	mov	r1, #43	; 0x2b
   33a20:	mov	r2, r6
   33a24:	bl	f7a0 <wmemchr@plt>
   33a28:	subs	r7, r0, #0
   33a2c:	beq	33b48 <findKeyValue@@Base+0x248>
   33a30:	rsb	r5, r4, r7
   33a34:	asrs	r5, r5, #2
   33a38:	beq	33bc4 <findKeyValue@@Base+0x2c4>
   33a3c:	str	sl, [sp]
   33a40:	mov	r0, r9
   33a44:	mov	r1, r8
   33a48:	mov	r2, r4
   33a4c:	mov	r3, r5
   33a50:	bl	324ec <contractText@@Base+0x2048>
   33a54:	cmp	r0, #0
   33a58:	beq	33a9c <findKeyValue@@Base+0x19c>
   33a5c:	ldr	r0, [sp, #8]
   33a60:	mov	r2, r8
   33a64:	ldrb	r1, [fp, #2]
   33a68:	ldr	r3, [sp, #12]
   33a6c:	bl	33900 <findKeyValue@@Base>
   33a70:	cmp	r0, #0
   33a74:	beq	33aa4 <findKeyValue@@Base+0x1a4>
   33a78:	ldrb	r3, [sp, #29]
   33a7c:	cmp	r3, #255	; 0xff
   33a80:	beq	33aa4 <findKeyValue@@Base+0x1a4>
   33a84:	ldr	r1, [pc, #572]	; 33cc8 <findKeyValue@@Base+0x3c8>
   33a88:	mov	r0, r9
   33a8c:	mov	r2, r5
   33a90:	mov	r3, r4
   33a94:	add	r1, pc, r1
   33a98:	bl	28dec <reportDataError@@Base>
   33a9c:	mov	r0, #0
   33aa0:	b	339c0 <findKeyValue@@Base+0xc0>
   33aa4:	ldrb	r4, [fp, #2]
   33aa8:	ldr	lr, [sp, #32]
   33aac:	cmp	r4, #10
   33ab0:	beq	33b34 <findKeyValue@@Base+0x234>
   33ab4:	add	r1, fp, r4
   33ab8:	add	r2, fp, r4, lsl #1
   33abc:	add	r1, r1, #2
   33ac0:	add	r2, r2, #11
   33ac4:	mov	r3, r4
   33ac8:	b	33aec <findKeyValue@@Base+0x1ec>
   33acc:	cmp	lr, r3
   33ad0:	sub	r2, r2, #2
   33ad4:	ldrhls	r0, [r2, #2]
   33ad8:	strhls	r0, [r2, #4]
   33adc:	ldrb	r0, [r1], #-1
   33ae0:	cmp	lr, r0
   33ae4:	addls	r0, r0, #1
   33ae8:	strbls	r0, [r1, #1]
   33aec:	subs	r3, r3, #1
   33af0:	bcs	33acc <findKeyValue@@Base+0x1cc>
   33af4:	ldrb	r3, [sp, #29]
   33af8:	add	r2, fp, lr, lsl #1
   33afc:	ldrh	r1, [r8]
   33b00:	mvn	r5, r5
   33b04:	cmp	r3, #255	; 0xff
   33b08:	add	r3, fp, r4
   33b0c:	add	r4, r4, #1
   33b10:	add	r6, r6, r5
   33b14:	strh	r1, [r2, #13]
   33b18:	strb	r4, [fp, #2]
   33b1c:	add	r4, r7, #4
   33b20:	strb	lr, [r3, #3]
   33b24:	ldrbeq	r3, [fp, #1]
   33b28:	addeq	r3, r3, #1
   33b2c:	strbeq	r3, [fp, #1]
   33b30:	b	33a18 <findKeyValue@@Base+0x118>
   33b34:	ldr	r1, [pc, #400]	; 33ccc <findKeyValue@@Base+0x3cc>
   33b38:	mov	r0, r9
   33b3c:	add	r1, pc, r1
   33b40:	bl	28dec <reportDataError@@Base>
   33b44:	b	33a9c <findKeyValue@@Base+0x19c>
   33b48:	cmp	r6, #0
   33b4c:	beq	33bf0 <findKeyValue@@Base+0x2f0>
   33b50:	ldr	r3, [r4]
   33b54:	cmp	r3, #33	; 0x21
   33b58:	beq	33bd8 <findKeyValue@@Base+0x2d8>
   33b5c:	add	r5, sp, #28
   33b60:	str	sl, [sp]
   33b64:	mov	r0, r9
   33b68:	mov	r2, r4
   33b6c:	mov	r1, r5
   33b70:	mov	r3, r6
   33b74:	bl	324ec <contractText@@Base+0x2048>
   33b78:	cmp	r0, #0
   33b7c:	beq	33a9c <findKeyValue@@Base+0x19c>
   33b80:	add	r3, sp, #32
   33b84:	add	r0, fp, #13
   33b88:	ldrb	r1, [fp, #2]
   33b8c:	mov	r2, r5
   33b90:	bl	33900 <findKeyValue@@Base>
   33b94:	cmp	r0, #0
   33b98:	beq	33c04 <findKeyValue@@Base+0x304>
   33b9c:	ldrb	r3, [sp, #29]
   33ba0:	cmp	r3, #255	; 0xff
   33ba4:	beq	33c04 <findKeyValue@@Base+0x304>
   33ba8:	ldr	r1, [pc, #288]	; 33cd0 <findKeyValue@@Base+0x3d0>
   33bac:	mov	r0, r9
   33bb0:	mov	r2, r6
   33bb4:	mov	r3, r4
   33bb8:	add	r1, pc, r1
   33bbc:	bl	28dec <reportDataError@@Base>
   33bc0:	b	33a9c <findKeyValue@@Base+0x19c>
   33bc4:	ldr	r1, [pc, #264]	; 33cd4 <findKeyValue@@Base+0x3d4>
   33bc8:	mov	r0, r9
   33bcc:	add	r1, pc, r1
   33bd0:	bl	28dec <reportDataError@@Base>
   33bd4:	b	33a9c <findKeyValue@@Base+0x19c>
   33bd8:	ldrb	r3, [fp]
   33bdc:	subs	r6, r6, #1
   33be0:	add	r4, r4, #4
   33be4:	orr	r3, r3, #1
   33be8:	strb	r3, [fp]
   33bec:	bne	33b5c <findKeyValue@@Base+0x25c>
   33bf0:	ldr	r1, [pc, #224]	; 33cd8 <findKeyValue@@Base+0x3d8>
   33bf4:	mov	r0, r9
   33bf8:	add	r1, pc, r1
   33bfc:	bl	28dec <reportDataError@@Base>
   33c00:	b	33a9c <findKeyValue@@Base+0x19c>
   33c04:	ldrb	r3, [fp]
   33c08:	tst	r3, #1
   33c0c:	ldrhne	r3, [r5]
   33c10:	strhne	r3, [fp, #33]	; 0x21
   33c14:	beq	33c34 <findKeyValue@@Base+0x334>
   33c18:	ldrb	r3, [sp, #29]
   33c1c:	mov	r0, #1
   33c20:	cmp	r3, #255	; 0xff
   33c24:	ldrbeq	r3, [fp, #1]
   33c28:	addeq	r3, r3, #1
   33c2c:	strbeq	r3, [fp, #1]
   33c30:	b	339c0 <findKeyValue@@Base+0xc0>
   33c34:	ldrb	r3, [fp, #2]
   33c38:	ldr	r2, [sp, #32]
   33c3c:	cmp	r3, #10
   33c40:	beq	33ca4 <findKeyValue@@Base+0x3a4>
   33c44:	add	r4, fp, r3
   33c48:	add	r0, fp, r3, lsl #1
   33c4c:	add	r4, r4, #2
   33c50:	add	r0, r0, #11
   33c54:	mov	r1, r3
   33c58:	b	33c7c <findKeyValue@@Base+0x37c>
   33c5c:	cmp	r2, r1
   33c60:	sub	r0, r0, #2
   33c64:	ldrhls	ip, [r0, #2]
   33c68:	strhls	ip, [r0, #4]
   33c6c:	ldrb	ip, [r4], #-1
   33c70:	cmp	r2, ip
   33c74:	addls	ip, ip, #1
   33c78:	strbls	ip, [r4, #1]
   33c7c:	subs	r1, r1, #1
   33c80:	bcs	33c5c <findKeyValue@@Base+0x35c>
   33c84:	ldrh	r4, [r5]
   33c88:	add	r1, fp, r3
   33c8c:	add	r0, fp, r2, lsl #1
   33c90:	add	r3, r3, #1
   33c94:	strh	r4, [r0, #13]
   33c98:	strb	r3, [fp, #2]
   33c9c:	strb	r2, [r1, #3]
   33ca0:	b	33c18 <findKeyValue@@Base+0x318>
   33ca4:	ldr	r1, [pc, #48]	; 33cdc <findKeyValue@@Base+0x3dc>
   33ca8:	mov	r0, r9
   33cac:	add	r1, pc, r1
   33cb0:	bl	28dec <reportDataError@@Base>
   33cb4:	b	33a9c <findKeyValue@@Base+0x19c>
   33cb8:	bl	f950 <__stack_chk_fail@plt>
   33cbc:	strdeq	pc, [r3], -r8
   33cc0:			; <UNDEFINED> instruction: 0x000003b4
   33cc4:	strdeq	r2, [r2], -r8
   33cc8:	andeq	r2, r2, r0, asr r1
   33ccc:	andeq	r2, r2, r4, lsl #1
   33cd0:	andeq	r2, r2, ip, asr #32
   33cd4:	ldrdeq	r1, [r2], -ip
   33cd8:	andeq	r1, r2, r0, ror #31
   33cdc:	andeq	r1, r2, r4, lsl pc
   33ce0:	ldr	r3, [pc, #344]	; 33e40 <findKeyValue@@Base+0x540>
   33ce4:	ldr	r2, [pc, #344]	; 33e44 <findKeyValue@@Base+0x544>
   33ce8:	add	r3, pc, r3
   33cec:	push	{r4, r5, r6, r7, r8, lr}
   33cf0:	mov	r4, r1
   33cf4:	ldr	r5, [r3, r2]
   33cf8:	sub	sp, sp, #48	; 0x30
   33cfc:	mov	r6, r0
   33d00:	ldrb	r1, [r1, #12]
   33d04:	mov	r0, r4
   33d08:	ldr	r3, [r5]
   33d0c:	str	r3, [sp, #44]	; 0x2c
   33d10:	bl	328ac <contractText@@Base+0x2408>
   33d14:	subs	r7, r0, #0
   33d18:	moveq	r0, r7
   33d1c:	beq	33d7c <findKeyValue@@Base+0x47c>
   33d20:	ldrb	r2, [r4, #13]
   33d24:	mov	r0, r6
   33d28:	add	r1, sp, #8
   33d2c:	mov	r3, #0
   33d30:	tst	r2, #3
   33d34:	mov	r2, r4
   33d38:	str	r3, [sp, #40]	; 0x28
   33d3c:	add	r8, sp, #4
   33d40:	str	r3, [sp, #4]
   33d44:	str	r3, [sp, #8]
   33d48:	str	r3, [sp, #12]
   33d4c:	str	r3, [sp, #16]
   33d50:	str	r3, [sp, #20]
   33d54:	str	r3, [sp, #24]
   33d58:	str	r3, [sp, #28]
   33d5c:	str	r3, [sp, #32]
   33d60:	str	r3, [sp, #36]	; 0x24
   33d64:	movne	r3, #1
   33d68:	strbne	r3, [sp, #43]	; 0x2b
   33d6c:	bl	33968 <findKeyValue@@Base+0x68>
   33d70:	cmp	r0, #0
   33d74:	bne	33d94 <findKeyValue@@Base+0x494>
   33d78:	mov	r0, #1
   33d7c:	ldr	r2, [sp, #44]	; 0x2c
   33d80:	ldr	r3, [r5]
   33d84:	cmp	r2, r3
   33d88:	bne	33e3c <findKeyValue@@Base+0x53c>
   33d8c:	add	sp, sp, #48	; 0x30
   33d90:	pop	{r4, r5, r6, r7, r8, pc}
   33d94:	mov	r0, r6
   33d98:	mov	r2, r4
   33d9c:	mov	r1, r8
   33da0:	bl	32fcc <contractText@@Base+0x2b28>
   33da4:	cmp	r0, #0
   33da8:	beq	33d78 <findKeyValue@@Base+0x478>
   33dac:	ldrb	r3, [r0, #12]
   33db0:	mov	r1, r8
   33db4:	tst	r3, #32
   33db8:	ldrbne	r3, [sp, #43]	; 0x2b
   33dbc:	orrne	r3, r3, #2
   33dc0:	strbne	r3, [sp, #43]	; 0x2b
   33dc4:	ldrbne	r3, [r0, #12]
   33dc8:	tst	r3, #8
   33dcc:	ldrbne	r3, [sp, #43]	; 0x2b
   33dd0:	orrne	r3, r3, #4
   33dd4:	strbne	r3, [sp, #43]	; 0x2b
   33dd8:	ldrbne	r3, [r0, #12]
   33ddc:	tst	r3, #16
   33de0:	ldrbne	r3, [sp, #43]	; 0x2b
   33de4:	orrne	r3, r3, #8
   33de8:	strbne	r3, [sp, #43]	; 0x2b
   33dec:	ldrbne	r3, [r0, #12]
   33df0:	tst	r3, #64	; 0x40
   33df4:	ldrbne	r3, [sp, #43]	; 0x2b
   33df8:	orrne	r3, r3, #16
   33dfc:	strbne	r3, [sp, #43]	; 0x2b
   33e00:	ldrbne	r3, [r0, #12]
   33e04:	tst	r3, #4
   33e08:	ldrbne	r3, [sp, #43]	; 0x2b
   33e0c:	orrne	r3, r3, #32
   33e10:	strbne	r3, [sp, #43]	; 0x2b
   33e14:	ldrb	r3, [r0, #13]
   33e18:	mov	r0, r7
   33e1c:	tst	r3, #4
   33e20:	ldrbne	r3, [sp, #43]	; 0x2b
   33e24:	orrne	r3, r3, #64	; 0x40
   33e28:	strbne	r3, [sp, #43]	; 0x2b
   33e2c:	bl	320b4 <contractText@@Base+0x1c10>
   33e30:	adds	r0, r0, #0
   33e34:	movne	r0, #1
   33e38:	b	33d7c <findKeyValue@@Base+0x47c>
   33e3c:	bl	f950 <__stack_chk_fail@plt>
   33e40:	muleq	r3, r0, sp
   33e44:			; <UNDEFINED> instruction: 0x000003b4

00033e48 <insertKeyValue@@Base>:
   33e48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33e4c:	mov	r8, r2
   33e50:	ldr	ip, [r1]
   33e54:	mov	r5, r1
   33e58:	ldr	r2, [r2]
   33e5c:	mov	r4, r0
   33e60:	mov	r7, r3
   33e64:	ldr	r6, [sp, #32]
   33e68:	cmp	ip, r2
   33e6c:	beq	33eb0 <insertKeyValue@@Base+0x68>
   33e70:	add	r0, r6, #1
   33e74:	ldr	r1, [r4]
   33e78:	rsb	r2, r6, ip
   33e7c:	add	ip, ip, #1
   33e80:	lsl	r0, r0, #1
   33e84:	str	ip, [r5]
   33e88:	sub	r6, r0, #2
   33e8c:	lsl	r2, r2, #1
   33e90:	add	r0, r1, r0
   33e94:	add	r1, r1, r6
   33e98:	bl	f7dc <memmove@plt>
   33e9c:	ldr	r3, [r4]
   33ea0:	ldrh	r2, [r7]
   33ea4:	mov	r0, #1
   33ea8:	strh	r2, [r3, r6]
   33eac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   33eb0:	cmp	ip, #0
   33eb4:	ldr	r0, [r0]
   33eb8:	lslne	r1, ip, #2
   33ebc:	lslne	sl, ip, #1
   33ec0:	moveq	r1, #32
   33ec4:	moveq	sl, #16
   33ec8:	bl	f878 <realloc@plt>
   33ecc:	subs	r9, r0, #0
   33ed0:	strne	r9, [r4]
   33ed4:	strne	sl, [r8]
   33ed8:	ldrne	ip, [r5]
   33edc:	bne	33e70 <insertKeyValue@@Base+0x28>
   33ee0:	ldr	r0, [pc, #12]	; 33ef4 <insertKeyValue@@Base+0xac>
   33ee4:	add	r0, pc, r0
   33ee8:	bl	1c6fc <logSystemError@@Base>
   33eec:	mov	r0, r9
   33ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   33ef4:	andeq	r1, r2, r4, ror sl

00033ef8 <removeKeyValue@@Base>:
   33ef8:	push	{r4}		; (str r4, [sp, #-4]!)
   33efc:	lsl	ip, r2, #1
   33f00:	ldr	r4, [r1]
   33f04:	mov	r3, r1
   33f08:	add	r1, ip, #2
   33f0c:	sub	r4, r4, #1
   33f10:	str	r4, [r3]
   33f14:	rsb	r2, r2, r4
   33f18:	add	r1, r0, r1
   33f1c:	pop	{r4}		; (ldr r4, [sp], #4)
   33f20:	add	r0, r0, ip
   33f24:	lsl	r2, r2, #1
   33f28:	b	f7dc <memmove@plt>

00033f2c <deleteKeyValue@@Base>:
   33f2c:	ldr	ip, [pc, #100]	; 33f98 <deleteKeyValue@@Base+0x6c>
   33f30:	push	{r4, r5, r6, r7, lr}
   33f34:	add	ip, pc, ip
   33f38:	ldr	lr, [pc, #92]	; 33f9c <deleteKeyValue@@Base+0x70>
   33f3c:	sub	sp, sp, #12
   33f40:	mov	r5, r1
   33f44:	ldr	r1, [r1]
   33f48:	mov	r3, sp
   33f4c:	mov	r7, r0
   33f50:	ldr	r4, [ip, lr]
   33f54:	ldr	ip, [r4]
   33f58:	str	ip, [sp, #4]
   33f5c:	bl	33900 <findKeyValue@@Base>
   33f60:	subs	r6, r0, #0
   33f64:	beq	33f78 <deleteKeyValue@@Base+0x4c>
   33f68:	mov	r0, r7
   33f6c:	mov	r1, r5
   33f70:	ldr	r2, [sp]
   33f74:	bl	33ef8 <removeKeyValue@@Base>
   33f78:	ldr	r2, [sp, #4]
   33f7c:	mov	r0, r6
   33f80:	ldr	r3, [r4]
   33f84:	cmp	r2, r3
   33f88:	bne	33f94 <deleteKeyValue@@Base+0x68>
   33f8c:	add	sp, sp, #12
   33f90:	pop	{r4, r5, r6, r7, pc}
   33f94:	bl	f950 <__stack_chk_fail@plt>
   33f98:	andeq	lr, r3, r4, asr #22
   33f9c:			; <UNDEFINED> instruction: 0x000003b4

00033fa0 <resetKeyTable@@Base>:
   33fa0:	ldrb	r2, [r0, #48]	; 0x30
   33fa4:	mvn	r3, #0
   33fa8:	mov	r1, #0
   33fac:	str	r3, [r0, #44]	; 0x2c
   33fb0:	bfi	r2, r1, #0, #1
   33fb4:	mov	r3, #3
   33fb8:	str	r1, [r0, #40]	; 0x28
   33fbc:	strb	r2, [r0, #48]	; 0x30
   33fc0:	strb	r3, [r0, #28]
   33fc4:	strb	r3, [r0, #29]
   33fc8:	strb	r3, [r0, #30]
   33fcc:	bx	lr

00033fd0 <compareKeyBindings@@Base>:
   33fd0:	push	{r3, r4, r5, lr}
   33fd4:	mov	r5, r0
   33fd8:	ldrb	r3, [r0, #4]
   33fdc:	mov	r4, r1
   33fe0:	tst	r3, #1
   33fe4:	ldrb	r3, [r1, #4]
   33fe8:	beq	34020 <compareKeyBindings@@Base+0x50>
   33fec:	tst	r3, #1
   33ff0:	beq	34018 <compareKeyBindings@@Base+0x48>
   33ff4:	add	r0, r0, #37	; 0x25
   33ff8:	add	r1, r1, #37	; 0x25
   33ffc:	bl	3385c <compareKeyValues@@Base>
   34000:	cmp	r0, #0
   34004:	popne	{r3, r4, r5, pc}
   34008:	ldrb	r2, [r5, #6]
   3400c:	ldrb	r3, [r4, #6]
   34010:	cmp	r2, r3
   34014:	bcs	34030 <compareKeyBindings@@Base+0x60>
   34018:	mvn	r0, #0
   3401c:	pop	{r3, r4, r5, pc}
   34020:	tst	r3, #1
   34024:	beq	34008 <compareKeyBindings@@Base+0x38>
   34028:	mov	r0, #1
   3402c:	pop	{r3, r4, r5, pc}
   34030:	bhi	34028 <compareKeyBindings@@Base+0x58>
   34034:	add	r0, r5, #17
   34038:	add	r1, r4, #17
   3403c:	lsl	r2, r2, #1
   34040:	pop	{r3, r4, r5, lr}
   34044:	b	fd10 <memcmp@plt>
   34048:	ldr	r0, [r0]
   3404c:	ldr	r1, [r1]
   34050:	b	33fd0 <compareKeyBindings@@Base>

00034054 <finishKeyTable@@Base>:
   34054:	ldr	r2, [pc, #972]	; 34428 <finishKeyTable@@Base+0x3d4>
   34058:	ldr	r1, [pc, #972]	; 3442c <finishKeyTable@@Base+0x3d8>
   3405c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34060:	add	r2, pc, r2
   34064:	sub	sp, sp, #52	; 0x34
   34068:	ldr	r3, [r0]
   3406c:	str	r0, [sp, #12]
   34070:	ldr	r1, [r2, r1]
   34074:	str	r1, [sp, #28]
   34078:	ldr	r0, [sp, #28]
   3407c:	ldr	r1, [r3, #24]
   34080:	ldr	r2, [r0]
   34084:	cmp	r1, #0
   34088:	str	r2, [sp, #44]	; 0x2c
   3408c:	beq	34260 <finishKeyTable@@Base+0x20c>
   34090:	ldr	r1, [pc, #920]	; 34430 <finishKeyTable@@Base+0x3dc>
   34094:	add	r9, sp, #32
   34098:	ldr	r2, [pc, #916]	; 34434 <finishKeyTable@@Base+0x3e0>
   3409c:	mov	sl, #0
   340a0:	ldr	r0, [pc, #912]	; 34438 <finishKeyTable@@Base+0x3e4>
   340a4:	add	r1, pc, r1
   340a8:	add	r2, pc, r2
   340ac:	str	r1, [sp, #24]
   340b0:	add	r0, pc, r0
   340b4:	str	r2, [sp, #16]
   340b8:	str	r0, [sp, #20]
   340bc:	str	sl, [sp, #8]
   340c0:	ldr	r4, [r3, #20]
   340c4:	mov	r1, #0
   340c8:	str	r1, [sp, #32]
   340cc:	add	r4, r4, sl
   340d0:	str	r1, [sp, #36]	; 0x24
   340d4:	str	r1, [sp, #40]	; 0x28
   340d8:	ldr	r6, [r4, #12]
   340dc:	cmp	r6, r1
   340e0:	beq	341e4 <finishKeyTable@@Base+0x190>
   340e4:	mov	r5, r1
   340e8:	mov	r3, r1
   340ec:	b	34100 <finishKeyTable@@Base+0xac>
   340f0:	add	r5, r5, #1
   340f4:	cmp	r5, r6
   340f8:	mov	r3, r5
   340fc:	bcs	34148 <finishKeyTable@@Base+0xf4>
   34100:	ldr	r2, [r4, #4]
   34104:	add	r1, r3, r3, lsl #2
   34108:	add	r1, r2, r1, lsl #3
   3410c:	ldrb	r2, [r1, #4]
   34110:	tst	r2, #1
   34114:	bne	340f0 <finishKeyTable@@Base+0x9c>
   34118:	ldrb	r2, [r1, #6]
   3411c:	mov	r0, r4
   34120:	str	r9, [sp]
   34124:	add	r1, r1, #17
   34128:	bl	3353c <copyKeyValues@@Base+0x8>
   3412c:	cmp	r0, #0
   34130:	beq	341c4 <finishKeyTable@@Base+0x170>
   34134:	ldr	r6, [r4, #12]
   34138:	add	r5, r5, #1
   3413c:	cmp	r5, r6
   34140:	mov	r3, r5
   34144:	bcc	34100 <finishKeyTable@@Base+0xac>
   34148:	cmp	r6, #0
   3414c:	movgt	r7, #0
   34150:	movgt	r8, r7
   34154:	bgt	3416c <finishKeyTable@@Base+0x118>
   34158:	b	34370 <finishKeyTable@@Base+0x31c>
   3415c:	add	r8, r8, #1
   34160:	add	r7, r7, #40	; 0x28
   34164:	cmp	r6, r8
   34168:	beq	34370 <finishKeyTable@@Base+0x31c>
   3416c:	ldr	r5, [r4, #4]
   34170:	add	r5, r5, r7
   34174:	ldrb	r3, [r5, #4]
   34178:	tst	r3, #1
   3417c:	addeq	fp, r5, #17
   34180:	beq	341a8 <finishKeyTable@@Base+0x154>
   34184:	add	fp, r5, #17
   34188:	ldrb	r2, [r5, #6]
   3418c:	ldr	r3, [r4, #12]
   34190:	mov	r0, r4
   34194:	str	r9, [sp]
   34198:	mov	r1, fp
   3419c:	bl	3353c <copyKeyValues@@Base+0x8>
   341a0:	cmp	r0, #0
   341a4:	beq	341c4 <finishKeyTable@@Base+0x170>
   341a8:	mov	r1, fp
   341ac:	ldrb	r2, [r5, #6]
   341b0:	mov	r0, r4
   341b4:	mov	r3, r9
   341b8:	bl	3374c <copyKeyValues@@Base+0x218>
   341bc:	cmp	r0, #0
   341c0:	bne	3415c <finishKeyTable@@Base+0x108>
   341c4:	mov	r5, r0
   341c8:	ldr	r0, [sp, #32]
   341cc:	cmp	r0, #0
   341d0:	beq	341d8 <finishKeyTable@@Base+0x184>
   341d4:	bl	f4f4 <free@plt>
   341d8:	cmp	r5, #0
   341dc:	beq	342c8 <finishKeyTable@@Base+0x274>
   341e0:	ldr	r6, [r4, #12]
   341e4:	ldr	r3, [r4, #8]
   341e8:	cmp	r6, r3
   341ec:	bcs	3421c <finishKeyTable@@Base+0x1c8>
   341f0:	cmp	r6, #0
   341f4:	beq	343bc <finishKeyTable@@Base+0x368>
   341f8:	add	r1, r6, r6, lsl #2
   341fc:	ldr	r0, [r4, #4]
   34200:	lsl	r1, r1, #3
   34204:	bl	f878 <realloc@plt>
   34208:	cmp	r0, #0
   3420c:	beq	34414 <finishKeyTable@@Base+0x3c0>
   34210:	str	r0, [r4, #4]
   34214:	ldr	r6, [r4, #12]
   34218:	str	r6, [r4, #8]
   3421c:	cmp	r6, #0
   34220:	bne	3437c <finishKeyTable@@Base+0x328>
   34224:	ldr	r5, [r4, #24]
   34228:	cmp	r5, #0
   3422c:	bne	342e8 <finishKeyTable@@Base+0x294>
   34230:	ldr	r5, [r4, #36]	; 0x24
   34234:	cmp	r5, #0
   34238:	bne	34330 <finishKeyTable@@Base+0x2dc>
   3423c:	ldr	r2, [sp, #12]
   34240:	add	sl, sl, #48	; 0x30
   34244:	ldr	r0, [sp, #8]
   34248:	ldr	r3, [r2]
   3424c:	add	r0, r0, #1
   34250:	str	r0, [sp, #8]
   34254:	ldr	r2, [r3, #24]
   34258:	cmp	r2, r0
   3425c:	bhi	340c0 <finishKeyTable@@Base+0x6c>
   34260:	ldr	r4, [pc, #468]	; 3443c <finishKeyTable@@Base+0x3e8>
   34264:	ldr	r6, [sp, #12]
   34268:	add	r4, pc, r4
   3426c:	add	r4, r4, #8
   34270:	b	34284 <finishKeyTable@@Base+0x230>
   34274:	add	r4, r4, #8
   34278:	ldr	r3, [r4, #-4]
   3427c:	cmp	r3, #0
   34280:	beq	343d8 <finishKeyTable@@Base+0x384>
   34284:	mov	r0, r6
   34288:	ldrb	r1, [r4, #-8]
   3428c:	bl	328ac <contractText@@Base+0x2408>
   34290:	subs	r5, r0, #0
   34294:	beq	342c8 <finishKeyTable@@Base+0x274>
   34298:	ldr	r3, [r5]
   3429c:	cmp	r3, #0
   342a0:	bne	34274 <finishKeyTable@@Base+0x220>
   342a4:	ldr	r7, [r4, #-4]
   342a8:	mov	r0, r7
   342ac:	bl	f410 <wcslen@plt>
   342b0:	mov	r1, r7
   342b4:	mov	r2, r0
   342b8:	mov	r0, r5
   342bc:	bl	32990 <contractText@@Base+0x24ec>
   342c0:	cmp	r0, #0
   342c4:	bne	34274 <finishKeyTable@@Base+0x220>
   342c8:	mov	r0, #0
   342cc:	ldr	r1, [sp, #28]
   342d0:	ldr	r2, [sp, #44]	; 0x2c
   342d4:	ldr	r3, [r1]
   342d8:	cmp	r2, r3
   342dc:	bne	34424 <finishKeyTable@@Base+0x3d0>
   342e0:	add	sp, sp, #52	; 0x34
   342e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   342e8:	lsl	r0, r5, #2
   342ec:	bl	fb48 <malloc@plt>
   342f0:	cmp	r0, #0
   342f4:	str	r0, [r4, #28]
   342f8:	beq	343cc <finishKeyTable@@Base+0x378>
   342fc:	ldr	r3, [r4, #20]
   34300:	subs	r5, r5, #1
   34304:	str	r3, [r0], #4
   34308:	add	r3, r3, #16
   3430c:	bne	34300 <finishKeyTable@@Base+0x2ac>
   34310:	ldr	r0, [r4, #28]
   34314:	mov	r2, #4
   34318:	ldr	r1, [r4, #24]
   3431c:	ldr	r3, [sp, #16]
   34320:	bl	f53c <qsort@plt>
   34324:	ldr	r5, [r4, #36]	; 0x24
   34328:	cmp	r5, #0
   3432c:	beq	3423c <finishKeyTable@@Base+0x1e8>
   34330:	lsl	r0, r5, #2
   34334:	bl	fb48 <malloc@plt>
   34338:	cmp	r0, #0
   3433c:	str	r0, [r4, #40]	; 0x28
   34340:	beq	343cc <finishKeyTable@@Base+0x378>
   34344:	ldr	r3, [r4, #32]
   34348:	subs	r5, r5, #1
   3434c:	str	r3, [r0], #4
   34350:	add	r3, r3, #8
   34354:	bne	34348 <finishKeyTable@@Base+0x2f4>
   34358:	ldr	r0, [r4, #40]	; 0x28
   3435c:	mov	r2, #4
   34360:	ldr	r1, [r4, #36]	; 0x24
   34364:	ldr	r3, [sp, #20]
   34368:	bl	f53c <qsort@plt>
   3436c:	b	3423c <finishKeyTable@@Base+0x1e8>
   34370:	ldr	r0, [sp, #32]
   34374:	mov	r5, #1
   34378:	b	341cc <finishKeyTable@@Base+0x178>
   3437c:	lsl	r0, r6, #2
   34380:	bl	fb48 <malloc@plt>
   34384:	cmp	r0, #0
   34388:	str	r0, [r4, #16]
   3438c:	beq	3440c <finishKeyTable@@Base+0x3b8>
   34390:	ldr	r3, [r4, #4]
   34394:	subs	r6, r6, #1
   34398:	str	r3, [r0], #4
   3439c:	add	r3, r3, #40	; 0x28
   343a0:	bne	34394 <finishKeyTable@@Base+0x340>
   343a4:	ldr	r0, [r4, #16]
   343a8:	mov	r2, #4
   343ac:	ldr	r1, [r4, #12]
   343b0:	ldr	r3, [sp, #24]
   343b4:	bl	f53c <qsort@plt>
   343b8:	b	34224 <finishKeyTable@@Base+0x1d0>
   343bc:	ldr	r0, [r4, #4]
   343c0:	bl	f4f4 <free@plt>
   343c4:	str	r6, [r4, #4]
   343c8:	b	34214 <finishKeyTable@@Base+0x1c0>
   343cc:	bl	1c740 <logMallocError@@Base>
   343d0:	mov	r0, #0
   343d4:	b	342cc <finishKeyTable@@Base+0x278>
   343d8:	ldr	r2, [sp, #12]
   343dc:	ldr	r3, [pc, #92]	; 34440 <finishKeyTable@@Base+0x3ec>
   343e0:	ldr	r1, [r2]
   343e4:	add	r3, pc, r3
   343e8:	mov	r2, #4
   343ec:	ldr	r0, [r1, #12]
   343f0:	ldr	r1, [r1, #16]
   343f4:	bl	f53c <qsort@plt>
   343f8:	ldr	r3, [sp, #12]
   343fc:	ldr	r0, [r3]
   34400:	bl	33fa0 <resetKeyTable@@Base>
   34404:	mov	r0, #1
   34408:	b	342cc <finishKeyTable@@Base+0x278>
   3440c:	bl	1c740 <logMallocError@@Base>
   34410:	b	342c8 <finishKeyTable@@Base+0x274>
   34414:	ldr	r0, [pc, #40]	; 34444 <finishKeyTable@@Base+0x3f0>
   34418:	add	r0, pc, r0
   3441c:	bl	1c6fc <logSystemError@@Base>
   34420:	b	342c8 <finishKeyTable@@Base+0x274>
   34424:	bl	f950 <__stack_chk_fail@plt>
   34428:	andeq	lr, r3, r8, lsl sl
   3442c:			; <UNDEFINED> instruction: 0x000003b4
   34430:			; <UNDEFINED> instruction: 0xffffff9c
   34434:			; <UNDEFINED> instruction: 0xfffff838
   34438:			; <UNDEFINED> instruction: 0xfffff83c
   3443c:	andeq	ip, r3, r0, asr r3
   34440:			; <UNDEFINED> instruction: 0xfffff4b0
   34444:	andeq	r1, r2, r0, asr #10

00034448 <destroyKeyTable@@Base>:
   34448:	push	{r3, r4, r5, lr}
   3444c:	mov	r5, r0
   34450:	ldr	r3, [r0, #8]
   34454:	cmp	r3, #0
   34458:	beq	34508 <destroyKeyTable@@Base+0xc0>
   3445c:	ldr	r2, [r5, #4]
   34460:	sub	r3, r3, #1
   34464:	str	r3, [r5, #8]
   34468:	ldr	r0, [r2, r3, lsl #2]
   3446c:	bl	f4f4 <free@plt>
   34470:	ldr	r3, [r5, #8]
   34474:	cmp	r3, #0
   34478:	bne	3445c <destroyKeyTable@@Base+0x14>
   3447c:	ldr	r3, [r5, #24]
   34480:	cmp	r3, #0
   34484:	beq	34514 <destroyKeyTable@@Base+0xcc>
   34488:	sub	r3, r3, #1
   3448c:	ldr	r2, [r5, #20]
   34490:	str	r3, [r5, #24]
   34494:	add	r3, r3, r3, lsl #1
   34498:	ldr	r0, [r2, r3, lsl #4]
   3449c:	add	r4, r2, r3, lsl #4
   344a0:	cmp	r0, #0
   344a4:	beq	344ac <destroyKeyTable@@Base+0x64>
   344a8:	bl	f4f4 <free@plt>
   344ac:	ldr	r0, [r4, #4]
   344b0:	cmp	r0, #0
   344b4:	beq	344bc <destroyKeyTable@@Base+0x74>
   344b8:	bl	f4f4 <free@plt>
   344bc:	ldr	r0, [r4, #16]
   344c0:	cmp	r0, #0
   344c4:	beq	344cc <destroyKeyTable@@Base+0x84>
   344c8:	bl	f4f4 <free@plt>
   344cc:	ldr	r0, [r4, #20]
   344d0:	cmp	r0, #0
   344d4:	beq	344dc <destroyKeyTable@@Base+0x94>
   344d8:	bl	f4f4 <free@plt>
   344dc:	ldr	r0, [r4, #28]
   344e0:	cmp	r0, #0
   344e4:	beq	344ec <destroyKeyTable@@Base+0xa4>
   344e8:	bl	f4f4 <free@plt>
   344ec:	ldr	r0, [r4, #32]
   344f0:	cmp	r0, #0
   344f4:	beq	344fc <destroyKeyTable@@Base+0xb4>
   344f8:	bl	f4f4 <free@plt>
   344fc:	ldr	r0, [r4, #40]	; 0x28
   34500:	cmp	r0, #0
   34504:	bne	34560 <destroyKeyTable@@Base+0x118>
   34508:	ldr	r3, [r5, #24]
   3450c:	cmp	r3, #0
   34510:	bne	34488 <destroyKeyTable@@Base+0x40>
   34514:	ldr	r0, [r5, #20]
   34518:	cmp	r0, #0
   3451c:	beq	34524 <destroyKeyTable@@Base+0xdc>
   34520:	bl	f4f4 <free@plt>
   34524:	ldr	r0, [r5, #12]
   34528:	cmp	r0, #0
   3452c:	beq	34534 <destroyKeyTable@@Base+0xec>
   34530:	bl	f4f4 <free@plt>
   34534:	ldr	r0, [r5]
   34538:	cmp	r0, #0
   3453c:	beq	34544 <destroyKeyTable@@Base+0xfc>
   34540:	bl	f4f4 <free@plt>
   34544:	ldr	r0, [r5, #32]
   34548:	cmp	r0, #0
   3454c:	beq	34554 <destroyKeyTable@@Base+0x10c>
   34550:	bl	f4f4 <free@plt>
   34554:	mov	r0, r5
   34558:	pop	{r3, r4, r5, lr}
   3455c:	b	f4f4 <free@plt>
   34560:	bl	f4f4 <free@plt>
   34564:	b	34508 <destroyKeyTable@@Base+0xc0>

00034568 <compileKeyTable@@Base>:
   34568:	push	{r4, r5, r6, r7, r8, r9, lr}
   3456c:	mov	r6, r0
   34570:	ldr	r4, [pc, #644]	; 347fc <compileKeyTable@@Base+0x294>
   34574:	mov	r7, r1
   34578:	ldr	r3, [pc, #640]	; 34800 <compileKeyTable@@Base+0x298>
   3457c:	sub	sp, sp, #28
   34580:	add	r4, pc, r4
   34584:	ldr	r0, [pc, #632]	; 34804 <compileKeyTable@@Base+0x29c>
   34588:	ldr	r1, [pc, #632]	; 34808 <compileKeyTable@@Base+0x2a0>
   3458c:	ldr	r5, [r4, r3]
   34590:	add	r0, pc, r0
   34594:	add	r1, pc, r1
   34598:	ldr	r3, [r5]
   3459c:	str	r3, [sp, #20]
   345a0:	bl	29118 <setGlobalTableVariables@@Base>
   345a4:	cmp	r0, #0
   345a8:	moveq	r4, r0
   345ac:	beq	3477c <compileKeyTable@@Base+0x214>
   345b0:	mov	r0, #56	; 0x38
   345b4:	mov	r8, #0
   345b8:	mov	r3, #3
   345bc:	str	r8, [sp, #16]
   345c0:	str	r8, [sp, #4]
   345c4:	str	r8, [sp, #8]
   345c8:	str	r8, [sp, #12]
   345cc:	strb	r3, [sp, #16]
   345d0:	bl	fb48 <malloc@plt>
   345d4:	cmp	r0, r8
   345d8:	mov	r9, r0
   345dc:	str	r0, [sp, #4]
   345e0:	beq	34798 <compileKeyTable@@Base+0x230>
   345e4:	ldr	ip, [r7]
   345e8:	str	r8, [r0]
   345ec:	cmp	ip, r8
   345f0:	str	r8, [r0, #4]
   345f4:	str	r8, [r0, #8]
   345f8:	str	r8, [r0, #12]
   345fc:	str	r8, [r0, #16]
   34600:	str	r8, [r0, #20]
   34604:	str	r8, [r0, #24]
   34608:	str	r8, [r0, #32]
   3460c:	str	r8, [r0, #36]	; 0x24
   34610:	str	r8, [r0, #40]	; 0x28
   34614:	beq	347ac <compileKeyTable@@Base+0x244>
   34618:	mov	r1, r7
   3461c:	ldr	r3, [ip]
   34620:	cmp	r3, #0
   34624:	beq	34640 <compileKeyTable@@Base+0xd8>
   34628:	mov	r3, ip
   3462c:	ldr	r2, [r3, #8]!
   34630:	cmp	r2, #0
   34634:	bne	3462c <compileKeyTable@@Base+0xc4>
   34638:	rsb	r3, ip, r3
   3463c:	asr	r3, r3, #3
   34640:	ldr	ip, [r1, #4]!
   34644:	add	r8, r8, r3
   34648:	str	r8, [r9, #16]
   3464c:	cmp	ip, #0
   34650:	bne	3461c <compileKeyTable@@Base+0xb4>
   34654:	lsl	r0, r8, #2
   34658:	bl	fb48 <malloc@plt>
   3465c:	cmp	r0, #0
   34660:	str	r0, [r9, #12]
   34664:	beq	347a4 <compileKeyTable@@Base+0x23c>
   34668:	sub	r1, r7, #4
   3466c:	mov	r2, r0
   34670:	ldr	r7, [r1, #4]!
   34674:	cmp	r7, #0
   34678:	beq	346a8 <compileKeyTable@@Base+0x140>
   3467c:	ldr	r3, [r7]
   34680:	cmp	r3, #0
   34684:	beq	34670 <compileKeyTable@@Base+0x108>
   34688:	mov	r3, r7
   3468c:	str	r3, [r2], #4
   34690:	ldr	ip, [r3, #8]!
   34694:	cmp	ip, #0
   34698:	bne	3468c <compileKeyTable@@Base+0x124>
   3469c:	ldr	r7, [r1, #4]!
   346a0:	cmp	r7, #0
   346a4:	bne	3467c <compileKeyTable@@Base+0x114>
   346a8:	ldr	r3, [pc, #348]	; 3480c <compileKeyTable@@Base+0x2a4>
   346ac:	mov	r1, r8
   346b0:	mov	r2, #4
   346b4:	add	r3, pc, r3
   346b8:	bl	f53c <qsort@plt>
   346bc:	ldr	r3, [pc, #332]	; 34810 <compileKeyTable@@Base+0x2a8>
   346c0:	str	r7, [sp, #12]
   346c4:	ldr	r7, [r4, r3]
   346c8:	ldr	r4, [r7]
   346cc:	cmp	r4, #0
   346d0:	beq	347b8 <compileKeyTable@@Base+0x250>
   346d4:	mov	r4, #1
   346d8:	b	346e0 <compileKeyTable@@Base+0x178>
   346dc:	mov	r4, r1
   346e0:	ldr	r2, [r7, r4, lsl #4]
   346e4:	add	r1, r4, #1
   346e8:	cmp	r2, #0
   346ec:	bne	346dc <compileKeyTable@@Base+0x174>
   346f0:	lsl	r0, r4, #2
   346f4:	str	r4, [sp, #12]
   346f8:	bl	fb48 <malloc@plt>
   346fc:	cmp	r0, #0
   34700:	str	r0, [sp, #8]
   34704:	movne	r3, r7
   34708:	movne	r2, r0
   3470c:	beq	347cc <compileKeyTable@@Base+0x264>
   34710:	str	r3, [r2], #4
   34714:	ldr	r1, [r3, #16]!
   34718:	cmp	r1, #0
   3471c:	bne	34710 <compileKeyTable@@Base+0x1a8>
   34720:	ldr	r3, [pc, #236]	; 34814 <compileKeyTable@@Base+0x2ac>
   34724:	mov	r1, r4
   34728:	mov	r2, #4
   3472c:	add	r7, sp, #4
   34730:	add	r3, pc, r3
   34734:	bl	f53c <qsort@plt>
   34738:	ldr	r1, [pc, #216]	; 34818 <compileKeyTable@@Base+0x2b0>
   3473c:	mov	r0, r6
   34740:	mov	r2, r7
   34744:	add	r1, pc, r1
   34748:	bl	29fd8 <processDataFile@@Base>
   3474c:	cmp	r0, #0
   34750:	bne	347d8 <compileKeyTable@@Base+0x270>
   34754:	mov	r4, #0
   34758:	ldr	r0, [sp, #8]
   3475c:	cmp	r0, #0
   34760:	beq	34768 <compileKeyTable@@Base+0x200>
   34764:	bl	f4f4 <free@plt>
   34768:	ldr	r9, [sp, #4]
   3476c:	cmp	r9, #0
   34770:	beq	3477c <compileKeyTable@@Base+0x214>
   34774:	mov	r0, r9
   34778:	bl	34448 <destroyKeyTable@@Base>
   3477c:	ldr	r2, [sp, #20]
   34780:	mov	r0, r4
   34784:	ldr	r3, [r5]
   34788:	cmp	r2, r3
   3478c:	bne	347f8 <compileKeyTable@@Base+0x290>
   34790:	add	sp, sp, #28
   34794:	pop	{r4, r5, r6, r7, r8, r9, pc}
   34798:	bl	1c740 <logMallocError@@Base>
   3479c:	mov	r4, r9
   347a0:	b	3477c <compileKeyTable@@Base+0x214>
   347a4:	mov	r4, r0
   347a8:	b	34774 <compileKeyTable@@Base+0x20c>
   347ac:	mov	r0, ip
   347b0:	mov	r8, ip
   347b4:	b	34658 <compileKeyTable@@Base+0xf0>
   347b8:	mov	r0, r4
   347bc:	bl	fb48 <malloc@plt>
   347c0:	cmp	r0, #0
   347c4:	str	r0, [sp, #8]
   347c8:	bne	34720 <compileKeyTable@@Base+0x1b8>
   347cc:	ldr	r9, [sp, #4]
   347d0:	mov	r4, #0
   347d4:	b	3476c <compileKeyTable@@Base+0x204>
   347d8:	mov	r0, r7
   347dc:	bl	34054 <finishKeyTable@@Base>
   347e0:	cmp	r0, #0
   347e4:	beq	34754 <compileKeyTable@@Base+0x1ec>
   347e8:	ldr	r4, [sp, #4]
   347ec:	mov	r3, #0
   347f0:	str	r3, [sp, #4]
   347f4:	b	34758 <compileKeyTable@@Base+0x1f0>
   347f8:	bl	f950 <__stack_chk_fail@plt>
   347fc:	strdeq	lr, [r3], -r8
   34800:			; <UNDEFINED> instruction: 0x000003b4
   34804:	andeq	fp, r1, ip, asr #6
   34808:	andeq	r1, r2, r8, lsl #13
   3480c:			; <UNDEFINED> instruction: 0xffffdcd4
   34810:	andeq	r0, r0, r0, lsr #7
   34814:			; <UNDEFINED> instruction: 0xffffdc6c
   34818:			; <UNDEFINED> instruction: 0xffffda08

0003481c <ensureKeyTableExtension@@Base>:
   3481c:	ldr	r1, [pc, #4]	; 34828 <ensureKeyTableExtension@@Base+0xc>
   34820:	add	r1, pc, r1
   34824:	b	1ca9c <ensureFileExtension@@Base>
   34828:	strheq	fp, [r1], -ip

0003482c <makeKeyTablePath@@Base>:
   3482c:	ldr	r2, [pc, #4]	; 34838 <makeKeyTablePath@@Base+0xc>
   34830:	add	r2, pc, r2
   34834:	b	1cb3c <makeFilePath@@Base>
   34838:	andeq	fp, r1, ip, lsr #1
   3483c:	ldrb	r3, [r0, #1]
   34840:	ldrb	r2, [r1, #1]
   34844:	cmp	r3, r2
   34848:	bcc	34858 <makeKeyTablePath@@Base+0x2c>
   3484c:	movls	r0, #0
   34850:	movhi	r0, #1
   34854:	bx	lr
   34858:	mvn	r0, #0
   3485c:	bx	lr
   34860:	ldr	r3, [pc, #172]	; 34914 <makeKeyTablePath@@Base+0xe8>
   34864:	ldr	ip, [pc, #172]	; 34918 <makeKeyTablePath@@Base+0xec>
   34868:	add	r3, pc, r3
   3486c:	push	{r4, r5, r6, lr}
   34870:	sub	sp, sp, #32
   34874:	ldr	r4, [r3, ip]
   34878:	ldr	r5, [r0, #24]
   3487c:	ldr	r0, [r0, #20]
   34880:	ldr	r3, [r4]
   34884:	cmp	r5, r1
   34888:	movls	r0, #0
   3488c:	str	r3, [sp, #28]
   34890:	bls	348f0 <makeKeyTablePath@@Base+0xc4>
   34894:	add	r1, r1, r1, lsl #1
   34898:	adds	r0, r0, r1, lsl #4
   3489c:	beq	348f0 <makeKeyTablePath@@Base+0xc4>
   348a0:	ldr	r1, [r0, #28]
   348a4:	cmp	r1, #0
   348a8:	beq	34908 <makeKeyTablePath@@Base+0xdc>
   348ac:	mov	ip, #0
   348b0:	str	ip, [sp, #24]
   348b4:	ldr	r5, [r0, #24]
   348b8:	mov	r3, #4
   348bc:	ldrh	lr, [r2]
   348c0:	add	r0, sp, #12
   348c4:	ldr	r6, [pc, #80]	; 3491c <makeKeyTablePath@@Base+0xf0>
   348c8:	mov	r2, r5
   348cc:	str	ip, [sp, #12]
   348d0:	add	r6, pc, r6
   348d4:	str	r6, [sp]
   348d8:	str	ip, [sp, #16]
   348dc:	strh	lr, [sp, #12]
   348e0:	str	ip, [sp, #20]
   348e4:	bl	f7b8 <bsearch@plt>
   348e8:	cmp	r0, #0
   348ec:	ldrne	r0, [r0]
   348f0:	ldr	r2, [sp, #28]
   348f4:	ldr	r3, [r4]
   348f8:	cmp	r2, r3
   348fc:	bne	34910 <makeKeyTablePath@@Base+0xe4>
   34900:	add	sp, sp, #32
   34904:	pop	{r4, r5, r6, pc}
   34908:	mov	r0, r1
   3490c:	b	348f0 <makeKeyTablePath@@Base+0xc4>
   34910:	bl	f950 <__stack_chk_fail@plt>
   34914:	andeq	lr, r3, r0, lsl r2
   34918:			; <UNDEFINED> instruction: 0x000003b4
   3491c:	andeq	r0, r0, r8, asr #32
   34920:	ldr	r1, [r1]
   34924:	b	3385c <compareKeyValues@@Base>
   34928:	ldr	r1, [r1]
   3492c:	b	3385c <compareKeyValues@@Base>
   34930:	b	3385c <compareKeyValues@@Base>
   34934:	ldr	r1, [r1]
   34938:	b	33fd0 <compareKeyBindings@@Base>
   3493c:	and	r3, r1, #65280	; 0xff00
   34940:	cmp	r3, #9728	; 0x2600
   34944:	push	{r4}		; (str r4, [sp, #-4]!)
   34948:	bne	349a4 <makeKeyTablePath@@Base+0x178>
   3494c:	and	r3, r1, #12582912	; 0xc00000
   34950:	cmp	r3, #4194304	; 0x400000
   34954:	beq	349a4 <makeKeyTablePath@@Base+0x178>
   34958:	add	r3, r1, #3
   3495c:	ldr	ip, [r0, #24]
   34960:	and	r3, r3, #255	; 0xff
   34964:	ldr	r2, [r0, #20]
   34968:	cmp	ip, r3
   3496c:	bls	349a4 <makeKeyTablePath@@Base+0x178>
   34970:	add	ip, r3, r3, lsl #1
   34974:	lsl	ip, ip, #4
   34978:	adds	r4, r2, ip
   3497c:	beq	349a4 <makeKeyTablePath@@Base+0x178>
   34980:	rsb	r1, r2, r4
   34984:	strb	r3, [r0, #29]
   34988:	cmp	r1, #191	; 0xbf
   3498c:	ble	3499c <makeKeyTablePath@@Base+0x170>
   34990:	ldr	r2, [r2, ip]
   34994:	cmp	r2, #0
   34998:	beq	349b0 <makeKeyTablePath@@Base+0x184>
   3499c:	mov	r1, #131072	; 0x20000
   349a0:	strb	r3, [r0, #28]
   349a4:	mov	r0, r1
   349a8:	pop	{r4}		; (ldr r4, [sp], #4)
   349ac:	b	3dbb8 <enqueueCommand@@Base>
   349b0:	mov	r1, #65536	; 0x10000
   349b4:	b	349a4 <makeKeyTablePath@@Base+0x178>
   349b8:	ldr	ip, [pc, #448]	; 34b80 <makeKeyTablePath@@Base+0x354>
   349bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   349c0:	add	ip, pc, ip
   349c4:	sub	sp, sp, #76	; 0x4c
   349c8:	mov	fp, r0
   349cc:	ldr	r0, [pc, #432]	; 34b84 <makeKeyTablePath@@Base+0x358>
   349d0:	str	r3, [sp, #16]
   349d4:	mov	r3, ip
   349d8:	ldr	r4, [fp, #24]
   349dc:	ldr	r0, [r3, r0]
   349e0:	cmp	r4, r1
   349e4:	ldr	ip, [fp, #20]
   349e8:	ldr	r3, [r0]
   349ec:	str	r0, [sp, #20]
   349f0:	str	r3, [sp, #68]	; 0x44
   349f4:	bls	34b38 <makeKeyTablePath@@Base+0x30c>
   349f8:	add	r1, r1, r1, lsl #1
   349fc:	adds	r6, ip, r1, lsl #4
   34a00:	moveq	r0, r6
   34a04:	beq	34b3c <makeKeyTablePath@@Base+0x310>
   34a08:	ldr	r0, [r6, #16]
   34a0c:	cmp	r0, #0
   34a10:	beq	34b3c <makeKeyTablePath@@Base+0x310>
   34a14:	ldr	r1, [fp, #40]	; 0x28
   34a18:	cmp	r1, #10
   34a1c:	bhi	34b38 <makeKeyTablePath@@Base+0x30c>
   34a20:	cmp	r2, #0
   34a24:	ldr	sl, [pc, #348]	; 34b88 <makeKeyTablePath@@Base+0x35c>
   34a28:	mov	r3, #0
   34a2c:	str	r3, [sp, #32]
   34a30:	str	r3, [sp, #64]	; 0x40
   34a34:	add	sl, pc, sl
   34a38:	str	r3, [sp, #28]
   34a3c:	add	r7, sp, #28
   34a40:	str	r3, [sp, #36]	; 0x24
   34a44:	add	r9, sp, #45	; 0x2d
   34a48:	str	r3, [sp, #40]	; 0x28
   34a4c:	mvn	r5, #0
   34a50:	str	r3, [sp, #44]	; 0x2c
   34a54:	str	r3, [sp, #48]	; 0x30
   34a58:	str	r3, [sp, #52]	; 0x34
   34a5c:	str	r3, [sp, #56]	; 0x38
   34a60:	str	r3, [sp, #60]	; 0x3c
   34a64:	ldrhne	r3, [r2]
   34a68:	movne	r2, #1
   34a6c:	ldr	r0, [pc, #280]	; 34b8c <makeKeyTablePath@@Base+0x360>
   34a70:	strbne	r2, [sp, #32]
   34a74:	add	r0, pc, r0
   34a78:	strhne	r3, [sp, #65]	; 0x41
   34a7c:	str	r0, [sp, #12]
   34a80:	strb	r1, [sp, #34]	; 0x22
   34a84:	mov	r2, #1
   34a88:	mov	r8, #0
   34a8c:	lsl	r4, r2, r1
   34a90:	sub	r4, r4, #1
   34a94:	cmp	r1, #0
   34a98:	beq	34ad4 <makeKeyTablePath@@Base+0x2a8>
   34a9c:	ldr	lr, [fp, #32]
   34aa0:	mov	r3, r7
   34aa4:	mov	r0, #1
   34aa8:	mov	r2, #0
   34aac:	add	ip, lr, r2, lsl #1
   34ab0:	add	r2, r2, #1
   34ab4:	tst	r0, r8
   34ab8:	add	r3, r3, #2
   34abc:	ldrh	ip, [ip]
   34ac0:	lsl	r0, r0, #1
   34ac4:	strh	ip, [r3, #15]
   34ac8:	strbne	r5, [r3, #16]
   34acc:	cmp	r1, r2
   34ad0:	bhi	34aac <makeKeyTablePath@@Base+0x280>
   34ad4:	mov	r0, r9
   34ad8:	mov	r2, #2
   34adc:	mov	r3, sl
   34ae0:	bl	f53c <qsort@plt>
   34ae4:	ldr	r3, [sp, #12]
   34ae8:	ldr	r1, [r6, #16]
   34aec:	mov	r0, r7
   34af0:	ldr	r2, [r6, #12]
   34af4:	str	r3, [sp]
   34af8:	mov	r3, #4
   34afc:	bl	f7b8 <bsearch@plt>
   34b00:	cmp	r0, #0
   34b04:	beq	34b24 <makeKeyTablePath@@Base+0x2f8>
   34b08:	ldr	r0, [r0]
   34b0c:	ldr	r3, [r0]
   34b10:	cmn	r3, #1
   34b14:	bne	34b3c <makeKeyTablePath@@Base+0x310>
   34b18:	ldr	r0, [sp, #16]
   34b1c:	mov	r1, #1
   34b20:	str	r1, [r0]
   34b24:	add	r8, r8, #1
   34b28:	cmp	r4, r8
   34b2c:	bcc	34b58 <makeKeyTablePath@@Base+0x32c>
   34b30:	ldr	r1, [fp, #40]	; 0x28
   34b34:	b	34a94 <makeKeyTablePath@@Base+0x268>
   34b38:	mov	r0, #0
   34b3c:	ldr	r1, [sp, #20]
   34b40:	ldr	r2, [sp, #68]	; 0x44
   34b44:	ldr	r3, [r1]
   34b48:	cmp	r2, r3
   34b4c:	bne	34b7c <makeKeyTablePath@@Base+0x350>
   34b50:	add	sp, sp, #76	; 0x4c
   34b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34b58:	ldrb	r3, [sp, #32]
   34b5c:	tst	r3, #1
   34b60:	beq	34b38 <makeKeyTablePath@@Base+0x30c>
   34b64:	ldrb	r3, [sp, #66]	; 0x42
   34b68:	cmp	r3, #255	; 0xff
   34b6c:	beq	34b38 <makeKeyTablePath@@Base+0x30c>
   34b70:	strb	r5, [sp, #66]	; 0x42
   34b74:	ldr	r1, [fp, #40]	; 0x28
   34b78:	b	34a84 <makeKeyTablePath@@Base+0x258>
   34b7c:	bl	f950 <__stack_chk_fail@plt>
   34b80:	strheq	lr, [r3], -r8
   34b84:			; <UNDEFINED> instruction: 0x000003b4
   34b88:			; <UNDEFINED> instruction: 0xfffffef4
   34b8c:			; <UNDEFINED> instruction: 0xfffffeb8

00034b90 <processKeyEvent@@Base>:
   34b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34b94:	mov	r8, r2
   34b98:	ldr	r7, [pc, #1800]	; 352a8 <processKeyEvent@@Base+0x718>
   34b9c:	add	fp, sp, #32
   34ba0:	ldr	r2, [pc, #1796]	; 352ac <processKeyEvent@@Base+0x71c>
   34ba4:	sub	sp, sp, #164	; 0xa4
   34ba8:	add	r7, pc, r7
   34bac:	mov	r5, r0
   34bb0:	ldr	r0, [fp, #4]
   34bb4:	ldr	r2, [r7, r2]
   34bb8:	mov	r9, r3
   34bbc:	strb	r3, [fp, #-123]	; 0xffffff85
   34bc0:	cmp	r0, #0
   34bc4:	mov	r6, r1
   34bc8:	strb	r8, [fp, #-124]	; 0xffffff84
   34bcc:	ldr	r3, [r2]
   34bd0:	str	r2, [fp, #-128]	; 0xffffff80
   34bd4:	str	r3, [fp, #-40]	; 0xffffffd8
   34bd8:	beq	34bf4 <processKeyEvent@@Base+0x64>
   34bdc:	ldr	r3, [r5, #40]	; 0x28
   34be0:	cmp	r3, #0
   34be4:	ldrbeq	r2, [r5, #29]
   34be8:	ldrbeq	r3, [r5, #28]
   34bec:	strbeq	r2, [r5, #30]
   34bf0:	strbeq	r3, [r5, #29]
   34bf4:	cmp	r6, #3
   34bf8:	sub	sl, fp, #124	; 0x7c
   34bfc:	mov	r0, r5
   34c00:	ldrbeq	r6, [r5, #30]
   34c04:	mov	r2, sl
   34c08:	mov	r1, r6
   34c0c:	bl	34860 <makeKeyTablePath@@Base+0x34>
   34c10:	cmp	r0, #0
   34c14:	beq	34d24 <processKeyEvent@@Base+0x194>
   34c18:	ldr	r2, [fp, #4]
   34c1c:	ldr	r3, [r0, #8]
   34c20:	ldr	r4, [r0, #4]
   34c24:	cmp	r2, #0
   34c28:	moveq	r4, r3
   34c2c:	cmp	r4, #0
   34c30:	mvneq	r4, #0
   34c34:	moveq	sl, #3
   34c38:	bne	34d10 <processKeyEvent@@Base+0x180>
   34c3c:	ldr	r3, [r5, #52]	; 0x34
   34c40:	cmp	r3, #0
   34c44:	beq	34cf0 <processKeyEvent@@Base+0x160>
   34c48:	ldrb	r3, [r3]
   34c4c:	cmp	r3, #0
   34c50:	beq	34cf0 <processKeyEvent@@Base+0x160>
   34c54:	ldr	r1, [fp, #4]
   34c58:	ldr	r3, [pc, #1616]	; 352b0 <processKeyEvent@@Base+0x720>
   34c5c:	cmp	r1, #0
   34c60:	add	r3, pc, r3
   34c64:	ldreq	r3, [pc, #1608]	; 352b4 <processKeyEvent@@Base+0x724>
   34c68:	addeq	r3, pc, r3
   34c6c:	ldr	ip, [pc, #1604]	; 352b8 <processKeyEvent@@Base+0x728>
   34c70:	sub	r5, fp, #104	; 0x68
   34c74:	mov	r1, #64	; 0x40
   34c78:	stmib	sp, {r3, r6}
   34c7c:	add	ip, pc, ip
   34c80:	mov	r0, r5
   34c84:	str	r8, [sp, #12]
   34c88:	mov	r3, r1
   34c8c:	str	r9, [sp, #16]
   34c90:	mov	r2, #1
   34c94:	str	ip, [sp]
   34c98:	bl	fb60 <__snprintf_chk@plt>
   34c9c:	cmn	r4, #1
   34ca0:	beq	34cd4 <processKeyEvent@@Base+0x144>
   34ca4:	sub	r1, fp, #40	; 0x28
   34ca8:	add	r0, r5, r0
   34cac:	ldr	ip, [pc, #1544]	; 352bc <processKeyEvent@@Base+0x72c>
   34cb0:	cmp	r0, r1
   34cb4:	movcs	r0, r1
   34cb8:	str	r4, [sp, #4]
   34cbc:	mov	r2, #1
   34cc0:	add	ip, pc, ip
   34cc4:	mvn	r3, #0
   34cc8:	rsb	r1, r0, r1
   34ccc:	str	ip, [sp]
   34cd0:	bl	fb60 <__snprintf_chk@plt>
   34cd4:	ldr	r3, [pc, #1508]	; 352c0 <processKeyEvent@@Base+0x730>
   34cd8:	mov	r2, r5
   34cdc:	ldr	r1, [pc, #1504]	; 352c4 <processKeyEvent@@Base+0x734>
   34ce0:	ldr	r3, [r7, r3]
   34ce4:	add	r1, pc, r1
   34ce8:	ldrb	r0, [r3]
   34cec:	bl	1c634 <logMessage@@Base>
   34cf0:	ldr	r1, [fp, #-128]	; 0xffffff80
   34cf4:	mov	r0, sl
   34cf8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   34cfc:	ldr	r3, [r1]
   34d00:	cmp	r2, r3
   34d04:	bne	350e8 <processKeyEvent@@Base+0x558>
   34d08:	sub	sp, fp, #32
   34d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34d10:	mov	r0, r5
   34d14:	mov	r1, r4
   34d18:	bl	3493c <makeKeyTablePath@@Base+0x110>
   34d1c:	mov	sl, #3
   34d20:	b	34c3c <processKeyEvent@@Base+0xac>
   34d24:	ldrb	ip, [fp, #-124]	; 0xffffff84
   34d28:	sub	r1, fp, #112	; 0x70
   34d2c:	mov	r0, r5
   34d30:	str	r1, [fp, #-132]	; 0xffffff7c
   34d34:	sub	r2, fp, #112	; 0x70
   34d38:	mov	r1, r6
   34d3c:	mvn	r3, #0
   34d40:	strb	ip, [fp, #-112]	; 0xffffff90
   34d44:	strb	r3, [fp, #-111]	; 0xffffff91
   34d48:	bl	34860 <makeKeyTablePath@@Base+0x34>
   34d4c:	cmp	r0, #0
   34d50:	bne	34c18 <processKeyEvent@@Base+0x88>
   34d54:	ldr	r0, [r5, #32]
   34d58:	mov	r2, sl
   34d5c:	ldr	r1, [r5, #40]	; 0x28
   34d60:	sub	r3, fp, #120	; 0x78
   34d64:	bl	33900 <findKeyValue@@Base>
   34d68:	cmp	r0, #0
   34d6c:	bne	34e98 <processKeyEvent@@Base+0x308>
   34d70:	ldr	r3, [fp, #4]
   34d74:	cmp	r3, #0
   34d78:	bne	34dbc <processKeyEvent@@Base+0x22c>
   34d7c:	cmp	r6, #2
   34d80:	beq	34eac <processKeyEvent@@Base+0x31c>
   34d84:	ldr	r4, [r5, #44]	; 0x2c
   34d88:	cmn	r4, #1
   34d8c:	ldreq	sl, [fp, #4]
   34d90:	beq	34c3c <processKeyEvent@@Base+0xac>
   34d94:	ldrb	r3, [r5, #48]	; 0x30
   34d98:	mvn	r2, #0
   34d9c:	mov	r0, r5
   34da0:	str	r2, [r5, #44]	; 0x2c
   34da4:	tst	r3, #1
   34da8:	ldr	sl, [fp, #4]
   34dac:	movne	r4, #0
   34db0:	mov	r1, r4
   34db4:	bl	3493c <makeKeyTablePath@@Base+0x110>
   34db8:	b	34c3c <processKeyEvent@@Base+0xac>
   34dbc:	sub	ip, fp, #36	; 0x24
   34dc0:	mov	r4, #0
   34dc4:	mov	r1, r6
   34dc8:	mov	r2, sl
   34dcc:	str	r4, [ip, #-80]!	; 0xffffffb0
   34dd0:	mov	r0, r5
   34dd4:	mov	r3, ip
   34dd8:	add	lr, r5, #32
   34ddc:	str	ip, [fp, #-168]	; 0xffffff58
   34de0:	str	lr, [fp, #-144]	; 0xffffff70
   34de4:	bl	349b8 <makeKeyTablePath@@Base+0x18c>
   34de8:	ldr	r2, [fp, #-120]	; 0xffffff88
   34dec:	add	r1, r5, #36	; 0x24
   34df0:	str	r1, [fp, #-148]	; 0xffffff6c
   34df4:	mov	r3, sl
   34df8:	str	r0, [fp, #-136]	; 0xffffff78
   34dfc:	add	r0, r5, #40	; 0x28
   34e00:	str	r0, [fp, #-140]	; 0xffffff74
   34e04:	ldr	r1, [fp, #-140]	; 0xffffff74
   34e08:	ldr	r0, [fp, #-144]	; 0xffffff70
   34e0c:	str	r2, [sp]
   34e10:	ldr	r2, [fp, #-148]	; 0xffffff6c
   34e14:	bl	33e48 <insertKeyValue@@Base>
   34e18:	ldr	r2, [fp, #-136]	; 0xffffff78
   34e1c:	ldr	ip, [fp, #-168]	; 0xffffff58
   34e20:	cmp	r2, r4
   34e24:	str	r0, [fp, #-152]	; 0xffffff68
   34e28:	beq	35098 <processKeyEvent@@Base+0x508>
   34e2c:	ldr	r4, [r2]
   34e30:	mov	r3, #1
   34e34:	str	r3, [fp, #-140]	; 0xffffff74
   34e38:	cmn	r4, #1
   34e3c:	beq	34ebc <processKeyEvent@@Base+0x32c>
   34e40:	ldr	r3, [r5, #44]	; 0x2c
   34e44:	cmp	r4, r3
   34e48:	beq	34f3c <processKeyEvent@@Base+0x3ac>
   34e4c:	ldr	r1, [fp, #-136]	; 0xffffff78
   34e50:	ldrb	r3, [r1, #39]	; 0x27
   34e54:	tst	r3, #94	; 0x5e
   34e58:	bne	34f60 <processKeyEvent@@Base+0x3d0>
   34e5c:	cmp	r6, #2
   34e60:	beq	34f48 <processKeyEvent@@Base+0x3b8>
   34e64:	ldr	r2, [fp, #-140]	; 0xffffff74
   34e68:	ldrb	r3, [r5, #48]	; 0x30
   34e6c:	cmp	r2, #0
   34e70:	str	r4, [r5, #44]	; 0x2c
   34e74:	orrne	r4, r4, #12582912	; 0xc00000
   34e78:	orreq	r4, r4, #4194304	; 0x400000
   34e7c:	bfi	r3, r2, #0, #1
   34e80:	strb	r3, [r5, #48]	; 0x30
   34e84:	mov	r0, r5
   34e88:	mov	r1, r4
   34e8c:	bl	3493c <makeKeyTablePath@@Base+0x110>
   34e90:	mov	sl, #2
   34e94:	b	34c3c <processKeyEvent@@Base+0xac>
   34e98:	ldr	r0, [r5, #32]
   34e9c:	add	r1, r5, #40	; 0x28
   34ea0:	ldr	r2, [fp, #-120]	; 0xffffff88
   34ea4:	bl	33ef8 <removeKeyValue@@Base>
   34ea8:	b	34d70 <processKeyEvent@@Base+0x1e0>
   34eac:	mvn	r4, #0
   34eb0:	ldr	sl, [fp, #4]
   34eb4:	str	r4, [r5, #44]	; 0x2c
   34eb8:	b	34c3c <processKeyEvent@@Base+0xac>
   34ebc:	ldr	sl, [fp, #-116]	; 0xffffff8c
   34ec0:	ldr	r4, [r5, #44]	; 0x2c
   34ec4:	adds	sl, sl, #0
   34ec8:	movne	sl, #1
   34ecc:	cmn	r4, #1
   34ed0:	beq	34c3c <processKeyEvent@@Base+0xac>
   34ed4:	mvn	r3, #0
   34ed8:	mov	r0, r5
   34edc:	str	r3, [r5, #44]	; 0x2c
   34ee0:	mov	r1, #0
   34ee4:	bl	3493c <makeKeyTablePath@@Base+0x110>
   34ee8:	mov	r4, #0
   34eec:	b	34c3c <processKeyEvent@@Base+0xac>
   34ef0:	ands	r3, r4, #255	; 0xff
   34ef4:	ldr	r0, [fp, #-160]	; 0xffffff60
   34ef8:	ubfx	r2, r4, #24, #1
   34efc:	ldrne	r3, [fp, #-136]	; 0xffffff78
   34f00:	ldrne	r1, [r3, #44]	; 0x2c
   34f04:	movne	r3, #1
   34f08:	orrne	r4, r4, r1
   34f0c:	cmp	r0, #0
   34f10:	bne	34f20 <processKeyEvent@@Base+0x390>
   34f14:	cmp	r2, r3
   34f18:	beq	351f4 <processKeyEvent@@Base+0x664>
   34f1c:	bic	r4, r4, #16777216	; 0x1000000
   34f20:	cmn	r4, #1
   34f24:	beq	351f4 <processKeyEvent@@Base+0x664>
   34f28:	ldr	r3, [r5, #44]	; 0x2c
   34f2c:	cmp	r4, r3
   34f30:	movne	r0, #0
   34f34:	strne	r0, [fp, #-140]	; 0xffffff74
   34f38:	bne	34e5c <processKeyEvent@@Base+0x2cc>
   34f3c:	mvn	r4, #0
   34f40:	mov	sl, #2
   34f44:	b	34c3c <processKeyEvent@@Base+0xac>
   34f48:	ldrb	r3, [r5, #48]	; 0x30
   34f4c:	mvn	r2, #0
   34f50:	str	r2, [r5, #44]	; 0x2c
   34f54:	bfc	r3, #0, #1
   34f58:	strb	r3, [r5, #48]	; 0x30
   34f5c:	b	34e84 <processKeyEvent@@Base+0x2f4>
   34f60:	ldr	r3, [r5, #40]	; 0x28
   34f64:	str	sp, [fp, #-148]	; 0xffffff6c
   34f68:	ldr	r1, [r5, #32]
   34f6c:	lsl	r0, r3, #1
   34f70:	mov	r2, r3
   34f74:	add	r0, r0, #7
   34f78:	str	r3, [fp, #-112]	; 0xffffff90
   34f7c:	bic	r3, r0, #7
   34f80:	sub	sp, sp, r3
   34f84:	add	r3, sp, #24
   34f88:	str	r3, [fp, #-144]	; 0xffffff70
   34f8c:	mov	r0, r3
   34f90:	bl	33534 <copyKeyValues@@Base>
   34f94:	ldr	lr, [fp, #-136]	; 0xffffff78
   34f98:	ldrb	r1, [lr, #6]
   34f9c:	cmp	r1, #0
   34fa0:	beq	35014 <processKeyEvent@@Base+0x484>
   34fa4:	ldr	r2, [fp, #-136]	; 0xffffff78
   34fa8:	mov	r3, #0
   34fac:	str	r6, [fp, #-160]	; 0xffffff60
   34fb0:	add	sl, r2, #17
   34fb4:	ldr	r6, [fp, #-144]	; 0xffffff70
   34fb8:	str	r7, [fp, #-164]	; 0xffffff5c
   34fbc:	sub	r7, fp, #112	; 0x70
   34fc0:	str	r4, [fp, #-152]	; 0xffffff68
   34fc4:	mov	r4, r3
   34fc8:	str	r5, [fp, #-156]	; 0xffffff64
   34fcc:	mov	r5, sl
   34fd0:	mov	sl, r2
   34fd4:	ldrb	r2, [r5, #1]
   34fd8:	cmp	r2, #255	; 0xff
   34fdc:	beq	34ff4 <processKeyEvent@@Base+0x464>
   34fe0:	mov	r1, r7
   34fe4:	mov	r0, r6
   34fe8:	mov	r2, r5
   34fec:	bl	33f2c <deleteKeyValue@@Base>
   34ff0:	ldrb	r1, [sl, #6]
   34ff4:	add	r4, r4, #1
   34ff8:	add	r5, r5, #2
   34ffc:	cmp	r1, r4
   35000:	bgt	34fd4 <processKeyEvent@@Base+0x444>
   35004:	ldr	r4, [fp, #-152]	; 0xffffff68
   35008:	ldr	r5, [fp, #-156]	; 0xffffff64
   3500c:	ldr	r6, [fp, #-160]	; 0xffffff60
   35010:	ldr	r7, [fp, #-164]	; 0xffffff5c
   35014:	ldr	r0, [fp, #-136]	; 0xffffff78
   35018:	ldrb	r3, [r0, #4]
   3501c:	tst	r3, #1
   35020:	beq	35044 <processKeyEvent@@Base+0x4b4>
   35024:	ldr	lr, [fp, #-136]	; 0xffffff78
   35028:	ldrb	r3, [lr, #38]	; 0x26
   3502c:	cmp	r3, #255	; 0xff
   35030:	beq	35044 <processKeyEvent@@Base+0x4b4>
   35034:	sub	r1, fp, #112	; 0x70
   35038:	ldr	r0, [fp, #-144]	; 0xffffff70
   3503c:	add	r2, lr, #37	; 0x25
   35040:	bl	33f2c <deleteKeyValue@@Base>
   35044:	ldr	r1, [fp, #-112]	; 0xffffff90
   35048:	cmp	r1, #0
   3504c:	beq	350cc <processKeyEvent@@Base+0x53c>
   35050:	cmp	r1, #1
   35054:	bls	35084 <processKeyEvent@@Base+0x4f4>
   35058:	ldr	r3, [pc, #616]	; 352c8 <processKeyEvent@@Base+0x738>
   3505c:	mov	r2, #2
   35060:	ldr	r0, [fp, #-144]	; 0xffffff70
   35064:	add	r3, pc, r3
   35068:	bl	f53c <qsort@plt>
   3506c:	ldr	r0, [fp, #-136]	; 0xffffff78
   35070:	ldrb	r3, [r0, #39]	; 0x27
   35074:	tst	r3, #16
   35078:	ldrne	r1, [fp, #-144]	; 0xffffff70
   3507c:	ldrbne	r3, [r1, #3]
   35080:	orrne	r4, r4, r3, lsl #24
   35084:	ldr	r2, [fp, #-144]	; 0xffffff70
   35088:	ldrb	r3, [r2, #1]
   3508c:	add	r4, r4, r3
   35090:	ldr	sp, [fp, #-148]	; 0xffffff6c
   35094:	b	34e5c <processKeyEvent@@Base+0x2cc>
   35098:	mov	r3, ip
   3509c:	ldr	r2, [fp, #-136]	; 0xffffff78
   350a0:	mov	r0, r5
   350a4:	mov	r1, r6
   350a8:	str	ip, [fp, #-168]	; 0xffffff58
   350ac:	bl	349b8 <makeKeyTablePath@@Base+0x18c>
   350b0:	ldr	ip, [fp, #-168]	; 0xffffff58
   350b4:	cmp	r0, #0
   350b8:	str	r0, [fp, #-136]	; 0xffffff78
   350bc:	beq	350ec <processKeyEvent@@Base+0x55c>
   350c0:	str	r4, [fp, #-140]	; 0xffffff74
   350c4:	ldr	r4, [r0]
   350c8:	b	34e38 <processKeyEvent@@Base+0x2a8>
   350cc:	ldr	lr, [fp, #-136]	; 0xffffff78
   350d0:	ldrb	r3, [lr, #39]	; 0x27
   350d4:	tst	r3, #4
   350d8:	beq	35090 <processKeyEvent@@Base+0x500>
   350dc:	tst	r3, #32
   350e0:	orreq	r4, r4, #255	; 0xff
   350e4:	b	35090 <processKeyEvent@@Base+0x500>
   350e8:	bl	f950 <__stack_chk_fail@plt>
   350ec:	subs	r3, r6, #1
   350f0:	ldr	r1, [r5, #24]
   350f4:	rsbs	r0, r3, #0
   350f8:	ldr	r2, [r5, #20]
   350fc:	adcs	r0, r0, r3
   35100:	str	r0, [fp, #-160]	; 0xffffff60
   35104:	cmp	r0, #0
   35108:	ldrbne	r3, [r5, #28]
   3510c:	moveq	r3, r6
   35110:	cmp	r1, r3
   35114:	bls	351f4 <processKeyEvent@@Base+0x664>
   35118:	sxth	r3, r3
   3511c:	add	r3, r3, r3, lsl #1
   35120:	adds	r3, r2, r3, lsl #4
   35124:	str	r3, [fp, #-136]	; 0xffffff78
   35128:	beq	351f4 <processKeyEvent@@Base+0x664>
   3512c:	ldr	r3, [r5, #40]	; 0x28
   35130:	cmp	r3, #0
   35134:	beq	35294 <processKeyEvent@@Base+0x704>
   35138:	ldr	r2, [fp, #-136]	; 0xffffff78
   3513c:	ldr	r3, [r5, #32]
   35140:	ldr	r1, [r2, #40]	; 0x28
   35144:	ldr	r2, [r2, #36]	; 0x24
   35148:	cmp	r1, #0
   3514c:	beq	351f4 <processKeyEvent@@Base+0x664>
   35150:	ldr	r0, [pc, #372]	; 352cc <processKeyEvent@@Base+0x73c>
   35154:	mov	lr, #0
   35158:	mov	r4, #8704	; 0x2200
   3515c:	str	lr, [fp, #-156]	; 0xffffff64
   35160:	add	r0, pc, r0
   35164:	str	r0, [fp, #-164]	; 0xffffff5c
   35168:	b	351bc <processKeyEvent@@Base+0x62c>
   3516c:	ldr	r3, [r0]
   35170:	cmp	r3, #0
   35174:	beq	351f4 <processKeyEvent@@Base+0x664>
   35178:	ldr	r0, [fp, #-156]	; 0xffffff64
   3517c:	ldr	r3, [r3, #4]
   35180:	ldr	r2, [r5, #40]	; 0x28
   35184:	add	r0, r0, #1
   35188:	str	r0, [fp, #-156]	; 0xffffff64
   3518c:	ldr	r3, [r3, #4]
   35190:	cmp	r0, r2
   35194:	orr	r4, r4, r3
   35198:	bcs	34ef0 <processKeyEvent@@Base+0x360>
   3519c:	ldr	r2, [fp, #-136]	; 0xffffff78
   351a0:	ldr	r0, [fp, #-156]	; 0xffffff64
   351a4:	ldr	r3, [r5, #32]
   351a8:	ldr	r1, [r2, #40]	; 0x28
   351ac:	add	r3, r3, r0, lsl #1
   351b0:	ldr	r2, [r2, #36]	; 0x24
   351b4:	cmp	r1, #0
   351b8:	beq	351f4 <processKeyEvent@@Base+0x664>
   351bc:	mov	lr, #0
   351c0:	str	lr, [fp, #-112]	; 0xffffff90
   351c4:	str	lr, [fp, #-108]	; 0xffffff94
   351c8:	sub	r0, fp, #112	; 0x70
   351cc:	ldrh	lr, [r3]
   351d0:	mov	r3, #4
   351d4:	strh	lr, [fp, #-112]	; 0xffffff90
   351d8:	ldr	lr, [fp, #-164]	; 0xffffff5c
   351dc:	str	lr, [sp]
   351e0:	str	ip, [fp, #-168]	; 0xffffff58
   351e4:	bl	f7b8 <bsearch@plt>
   351e8:	ldr	ip, [fp, #-168]	; 0xffffff58
   351ec:	cmp	r0, #0
   351f0:	bne	3516c <processKeyEvent@@Base+0x5dc>
   351f4:	cmp	r6, #3
   351f8:	beq	34ebc <processKeyEvent@@Base+0x32c>
   351fc:	ldr	r1, [fp, #-152]	; 0xffffff68
   35200:	cmp	r1, #0
   35204:	beq	34ebc <processKeyEvent@@Base+0x32c>
   35208:	ldr	r0, [r5, #32]
   3520c:	ldr	r1, [fp, #-140]	; 0xffffff74
   35210:	ldr	r2, [fp, #-120]	; 0xffffff88
   35214:	str	ip, [fp, #-168]	; 0xffffff58
   35218:	bl	33ef8 <removeKeyValue@@Base>
   3521c:	ldr	ip, [fp, #-168]	; 0xffffff58
   35220:	mov	r1, #3
   35224:	mov	r2, sl
   35228:	mov	r0, r5
   3522c:	mov	r3, ip
   35230:	bl	349b8 <makeKeyTablePath@@Base+0x18c>
   35234:	ldr	lr, [fp, #-120]	; 0xffffff88
   35238:	ldr	r2, [fp, #-148]	; 0xffffff6c
   3523c:	mov	r3, sl
   35240:	ldr	r1, [fp, #-140]	; 0xffffff74
   35244:	str	r0, [fp, #-136]	; 0xffffff78
   35248:	ldr	r0, [fp, #-144]	; 0xffffff70
   3524c:	str	lr, [sp]
   35250:	bl	33e48 <insertKeyValue@@Base>
   35254:	ldr	r2, [fp, #-136]	; 0xffffff78
   35258:	ldr	ip, [fp, #-168]	; 0xffffff58
   3525c:	cmp	r2, #0
   35260:	bne	34e2c <processKeyEvent@@Base+0x29c>
   35264:	ldr	r2, [fp, #-136]	; 0xffffff78
   35268:	mov	r3, ip
   3526c:	mov	r0, r5
   35270:	mov	r1, #3
   35274:	bl	349b8 <makeKeyTablePath@@Base+0x18c>
   35278:	cmp	r0, #0
   3527c:	str	r0, [fp, #-136]	; 0xffffff78
   35280:	beq	34ebc <processKeyEvent@@Base+0x32c>
   35284:	ldr	r4, [r0]
   35288:	mov	r0, #0
   3528c:	str	r0, [fp, #-140]	; 0xffffff74
   35290:	b	34e38 <processKeyEvent@@Base+0x2a8>
   35294:	ldr	r2, [fp, #-160]	; 0xffffff60
   35298:	cmp	r2, #0
   3529c:	movne	r4, #8704	; 0x2200
   352a0:	bne	34f28 <processKeyEvent@@Base+0x398>
   352a4:	b	351f4 <processKeyEvent@@Base+0x664>
   352a8:	ldrdeq	sp, [r3], -r0
   352ac:			; <UNDEFINED> instruction: 0x000003b4
   352b0:	muleq	r2, r4, r1
   352b4:	muleq	r2, r4, r1
   352b8:	andeq	r1, r2, r8, lsl #3
   352bc:	andeq	r1, r2, r4, ror #2
   352c0:	andeq	r0, r0, ip, lsl #7
   352c4:	muleq	r1, r0, fp
   352c8:			; <UNDEFINED> instruction: 0xfffff7d0
   352cc:			; <UNDEFINED> instruction: 0xfffff7c0

000352d0 <setKeyEventLoggingFlag@@Base>:
   352d0:	str	r1, [r0, #52]	; 0x34
   352d4:	bx	lr
   352d8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   352dc:	mov	r4, r0
   352e0:	ldr	r3, [r0, #4]
   352e4:	mov	r7, r1
   352e8:	mov	r5, r2
   352ec:	ldr	r6, [r0, #16]
   352f0:	cmp	r3, #0
   352f4:	beq	3533c <setKeyEventLoggingFlag@@Base+0x6c>
   352f8:	ldr	r3, [r0, #20]
   352fc:	ldr	r0, [pc, #168]	; 353ac <setKeyEventLoggingFlag@@Base+0xdc>
   35300:	ldr	r1, [r4, #24]
   35304:	add	r0, pc, r0
   35308:	blx	r3
   3530c:	cmp	r0, #0
   35310:	bne	3531c <setKeyEventLoggingFlag@@Base+0x4c>
   35314:	mov	r0, #0
   35318:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3531c:	ldr	r3, [r4, #20]
   35320:	ldr	r0, [r4, #4]
   35324:	ldr	r1, [r4, #24]
   35328:	blx	r3
   3532c:	cmp	r0, #0
   35330:	beq	35314 <setKeyEventLoggingFlag@@Base+0x44>
   35334:	mov	r3, #0
   35338:	str	r3, [r4, #4]
   3533c:	ldr	r3, [r4, #12]
   35340:	add	r6, r5, r6
   35344:	cmp	r6, r3
   35348:	bhi	35370 <setKeyEventLoggingFlag@@Base+0xa0>
   3534c:	ldr	r3, [r4, #8]
   35350:	ldr	r0, [r4, #16]
   35354:	mov	r1, r7
   35358:	mov	r2, r5
   3535c:	add	r0, r3, r0, lsl #2
   35360:	bl	f620 <wmemcpy@plt>
   35364:	mov	r0, #1
   35368:	str	r6, [r4, #16]
   3536c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   35370:	orr	r8, r6, #63	; 0x3f
   35374:	ldr	r0, [r4, #8]
   35378:	add	r8, r8, #1
   3537c:	lsl	r1, r8, #2
   35380:	bl	f878 <realloc@plt>
   35384:	subs	r9, r0, #0
   35388:	strne	r9, [r4, #8]
   3538c:	strne	r8, [r4, #12]
   35390:	movne	r3, r9
   35394:	bne	35350 <setKeyEventLoggingFlag@@Base+0x80>
   35398:	ldr	r0, [pc, #16]	; 353b0 <setKeyEventLoggingFlag@@Base+0xe0>
   3539c:	add	r0, pc, r0
   353a0:	bl	1c6fc <logSystemError@@Base>
   353a4:	mov	r0, r9
   353a8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   353ac:	andeq	r0, r2, ip, ror #22
   353b0:			; <UNDEFINED> instruction: 0x000205bc
   353b4:	ldr	r3, [pc, #136]	; 35444 <setKeyEventLoggingFlag@@Base+0x174>
   353b8:	push	{r4, r5, r6, fp, lr}
   353bc:	add	fp, sp, #16
   353c0:	ldr	r2, [pc, #128]	; 35448 <setKeyEventLoggingFlag@@Base+0x178>
   353c4:	sub	sp, sp, #20
   353c8:	add	r3, pc, r3
   353cc:	str	r1, [fp, #-32]	; 0xffffffe0
   353d0:	mov	r6, r0
   353d4:	ldr	r5, [r3, r2]
   353d8:	mov	r0, r1
   353dc:	ldr	r3, [r5]
   353e0:	str	r3, [fp, #-24]	; 0xffffffe8
   353e4:	bl	fb54 <strlen@plt>
   353e8:	sub	r1, fp, #28
   353ec:	add	r2, r0, #1
   353f0:	sub	r0, fp, #32
   353f4:	lsl	r3, r2, #2
   353f8:	add	r3, r3, #10
   353fc:	bic	r3, r3, #7
   35400:	sub	sp, sp, r3
   35404:	str	sp, [fp, #-28]	; 0xffffffe4
   35408:	bl	281a0 <convertUtf8ToWchars@@Base>
   3540c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35410:	mov	r4, sp
   35414:	mov	r0, r6
   35418:	rsb	r2, r4, r3
   3541c:	mov	r1, sp
   35420:	asr	r2, r2, #2
   35424:	bl	352d8 <setKeyEventLoggingFlag@@Base+0x8>
   35428:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3542c:	ldr	r3, [r5]
   35430:	cmp	r2, r3
   35434:	bne	35440 <setKeyEventLoggingFlag@@Base+0x170>
   35438:	sub	sp, fp, #16
   3543c:	pop	{r4, r5, r6, fp, pc}
   35440:	bl	f950 <__stack_chk_fail@plt>
   35444:			; <UNDEFINED> instruction: 0x0003d6b0
   35448:			; <UNDEFINED> instruction: 0x000003b4
   3544c:	push	{r3, r4, r5, lr}
   35450:	mov	r5, r0
   35454:	mov	r0, r1
   35458:	mov	r4, r1
   3545c:	bl	f410 <wcslen@plt>
   35460:	mov	r1, r4
   35464:	mov	r2, r0
   35468:	mov	r0, r5
   3546c:	pop	{r3, r4, r5, lr}
   35470:	b	352d8 <setKeyEventLoggingFlag@@Base+0x8>
   35474:	ldr	r1, [r1]
   35478:	add	r1, r1, #4
   3547c:	b	3385c <compareKeyValues@@Base>
   35480:	ldr	r3, [pc, #116]	; 354fc <setKeyEventLoggingFlag@@Base+0x22c>
   35484:	mov	r2, #1
   35488:	ldr	ip, [pc, #112]	; 35500 <setKeyEventLoggingFlag@@Base+0x230>
   3548c:	add	r3, pc, r3
   35490:	push	{r4, r5, r6, lr}
   35494:	sub	sp, sp, #8
   35498:	ldr	r4, [r3, ip]
   3549c:	add	r1, sp, #8
   354a0:	mov	r6, #0
   354a4:	mov	r5, r0
   354a8:	str	r6, [r1, #-8]!
   354ac:	mov	r1, sp
   354b0:	ldr	r3, [r4]
   354b4:	str	r3, [sp, #4]
   354b8:	bl	352d8 <setKeyEventLoggingFlag@@Base+0x8>
   354bc:	cmp	r0, #0
   354c0:	beq	354e0 <setKeyEventLoggingFlag@@Base+0x210>
   354c4:	ldr	r3, [r5, #20]
   354c8:	ldr	r0, [r5, #8]
   354cc:	ldr	r1, [r5, #24]
   354d0:	blx	r3
   354d4:	cmp	r0, #0
   354d8:	strne	r6, [r5, #16]
   354dc:	movne	r0, #1
   354e0:	ldr	r2, [sp, #4]
   354e4:	ldr	r3, [r4]
   354e8:	cmp	r2, r3
   354ec:	bne	354f8 <setKeyEventLoggingFlag@@Base+0x228>
   354f0:	add	sp, sp, #8
   354f4:	pop	{r4, r5, r6, pc}
   354f8:	bl	f950 <__stack_chk_fail@plt>
   354fc:	andeq	sp, r3, ip, ror #11
   35500:			; <UNDEFINED> instruction: 0x000003b4
   35504:	push	{r4, r5, r6, r7, lr}
   35508:	sub	sp, sp, #12
   3550c:	ldr	r6, [r0, #12]
   35510:	mov	r7, r1
   35514:	ldr	r3, [pc, #116]	; 35590 <setKeyEventLoggingFlag@@Base+0x2c0>
   35518:	ldr	r2, [r0, #16]
   3551c:	mov	r0, r1
   35520:	add	r3, pc, r3
   35524:	mov	r1, r6
   35528:	str	r3, [sp]
   3552c:	mov	r3, #4
   35530:	bl	f7b8 <bsearch@plt>
   35534:	subs	r4, r0, #0
   35538:	beq	35588 <setKeyEventLoggingFlag@@Base+0x2b8>
   3553c:	cmp	r6, r4
   35540:	movcc	r5, r4
   35544:	bcc	35554 <setKeyEventLoggingFlag@@Base+0x284>
   35548:	b	35574 <setKeyEventLoggingFlag@@Base+0x2a4>
   3554c:	cmp	r6, r5
   35550:	bcs	35580 <setKeyEventLoggingFlag@@Base+0x2b0>
   35554:	ldr	r1, [r5, #-4]
   35558:	mov	r0, r7
   3555c:	mov	r4, r5
   35560:	sub	r5, r5, #4
   35564:	add	r1, r1, #4
   35568:	bl	3385c <compareKeyValues@@Base>
   3556c:	cmp	r0, #0
   35570:	beq	3554c <setKeyEventLoggingFlag@@Base+0x27c>
   35574:	ldr	r0, [r4]
   35578:	add	sp, sp, #12
   3557c:	pop	{r4, r5, r6, r7, pc}
   35580:	mov	r4, r5
   35584:	b	35574 <setKeyEventLoggingFlag@@Base+0x2a4>
   35588:	mov	r0, r4
   3558c:	b	35578 <setKeyEventLoggingFlag@@Base+0x2a8>
   35590:			; <UNDEFINED> instruction: 0xffffff4c
   35594:	ldr	r3, [pc, #288]	; 356bc <setKeyEventLoggingFlag@@Base+0x3ec>
   35598:	ldr	r2, [pc, #288]	; 356c0 <setKeyEventLoggingFlag@@Base+0x3f0>
   3559c:	add	r3, pc, r3
   355a0:	push	{r4, r5, r6, r7, lr}
   355a4:	sub	sp, sp, #44	; 0x2c
   355a8:	ldr	r5, [r3, r2]
   355ac:	mov	r4, r0
   355b0:	ldr	r0, [r0]
   355b4:	mov	r6, r1
   355b8:	ldr	r3, [r5]
   355bc:	str	r3, [sp, #36]	; 0x24
   355c0:	bl	35504 <setKeyEventLoggingFlag@@Base+0x234>
   355c4:	subs	r3, r0, #0
   355c8:	beq	355f0 <setKeyEventLoggingFlag@@Base+0x320>
   355cc:	mov	r0, r4
   355d0:	ldr	r1, [r3]
   355d4:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   355d8:	ldr	r2, [sp, #36]	; 0x24
   355dc:	ldr	r3, [r5]
   355e0:	cmp	r2, r3
   355e4:	bne	356b8 <setKeyEventLoggingFlag@@Base+0x3e8>
   355e8:	add	sp, sp, #44	; 0x2c
   355ec:	pop	{r4, r5, r6, r7, pc}
   355f0:	ldrb	r3, [r6, #1]
   355f4:	cmp	r3, #255	; 0xff
   355f8:	beq	3563c <setKeyEventLoggingFlag@@Base+0x36c>
   355fc:	ldrb	r3, [r6]
   35600:	add	r1, sp, #12
   35604:	ldr	r0, [r4]
   35608:	mvn	r2, #0
   3560c:	strb	r2, [sp, #13]
   35610:	strb	r3, [sp, #12]
   35614:	bl	35504 <setKeyEventLoggingFlag@@Base+0x234>
   35618:	cmp	r0, #0
   3561c:	beq	3563c <setKeyEventLoggingFlag@@Base+0x36c>
   35620:	ldr	r1, [r0]
   35624:	mov	r0, r4
   35628:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   3562c:	cmp	r0, #0
   35630:	bne	35650 <setKeyEventLoggingFlag@@Base+0x380>
   35634:	mov	r0, #0
   35638:	b	355d8 <setKeyEventLoggingFlag@@Base+0x308>
   3563c:	ldr	r1, [pc, #128]	; 356c4 <setKeyEventLoggingFlag@@Base+0x3f4>
   35640:	mov	r0, r4
   35644:	add	r1, pc, r1
   35648:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   3564c:	b	355d8 <setKeyEventLoggingFlag@@Base+0x308>
   35650:	add	r1, sp, #40	; 0x28
   35654:	mov	r3, #46	; 0x2e
   35658:	mov	r0, r4
   3565c:	mov	r2, #1
   35660:	str	r3, [r1, #-24]!	; 0xffffffe8
   35664:	bl	352d8 <setKeyEventLoggingFlag@@Base+0x8>
   35668:	cmp	r0, #0
   3566c:	beq	35634 <setKeyEventLoggingFlag@@Base+0x364>
   35670:	ldr	ip, [pc, #80]	; 356c8 <setKeyEventLoggingFlag@@Base+0x3f8>
   35674:	add	r7, sp, #20
   35678:	mov	r1, #16
   3567c:	mov	r2, #1
   35680:	add	ip, pc, ip
   35684:	str	ip, [sp]
   35688:	ldrb	ip, [r6, #1]
   3568c:	mov	r3, r1
   35690:	mov	r0, r7
   35694:	add	ip, ip, r2
   35698:	str	ip, [sp, #4]
   3569c:	bl	fb60 <__snprintf_chk@plt>
   356a0:	mov	r0, r4
   356a4:	mov	r1, r7
   356a8:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   356ac:	adds	r0, r0, #0
   356b0:	movne	r0, #1
   356b4:	b	355d8 <setKeyEventLoggingFlag@@Base+0x308>
   356b8:	bl	f950 <__stack_chk_fail@plt>
   356bc:	ldrdeq	sp, [r3], -ip
   356c0:			; <UNDEFINED> instruction: 0x000003b4
   356c4:	andeq	r9, r1, r0, lsr #3
   356c8:	andeq	r4, r2, ip, ror r6
   356cc:	ldr	ip, [pc, #344]	; 3582c <setKeyEventLoggingFlag@@Base+0x55c>
   356d0:	push	{r4, r5, r6, r7, r8, r9, lr}
   356d4:	add	ip, pc, ip
   356d8:	ldr	r4, [pc, #336]	; 35830 <setKeyEventLoggingFlag@@Base+0x560>
   356dc:	and	r5, r3, #65280	; 0xff00
   356e0:	mov	r7, r2
   356e4:	sub	sp, sp, #108	; 0x6c
   356e8:	cmp	r5, #9728	; 0x2600
   356ec:	mov	r6, r1
   356f0:	ldr	r4, [ip, r4]
   356f4:	mov	r5, r0
   356f8:	ldr	r2, [r4]
   356fc:	str	r2, [sp, #100]	; 0x64
   35700:	beq	35770 <setKeyEventLoggingFlag@@Base+0x4a0>
   35704:	ldrb	r1, [r1, #1]
   35708:	add	r8, sp, #4
   3570c:	mov	r0, r3
   35710:	mov	r2, #96	; 0x60
   35714:	cmp	r1, #255	; 0xff
   35718:	mov	r1, r8
   3571c:	movne	r3, #6
   35720:	moveq	r3, #0
   35724:	bl	2b474 <describeCommand@@Base>
   35728:	mov	r0, r5
   3572c:	mov	r1, r8
   35730:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   35734:	cmp	r0, #0
   35738:	beq	35754 <setKeyEventLoggingFlag@@Base+0x484>
   3573c:	ldr	r1, [pc, #240]	; 35834 <setKeyEventLoggingFlag@@Base+0x564>
   35740:	mov	r0, r5
   35744:	add	r1, pc, r1
   35748:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   3574c:	cmp	r0, #0
   35750:	bne	357c8 <setKeyEventLoggingFlag@@Base+0x4f8>
   35754:	mov	r0, #0
   35758:	ldr	r2, [sp, #100]	; 0x64
   3575c:	ldr	r3, [r4]
   35760:	cmp	r2, r3
   35764:	bne	35828 <setKeyEventLoggingFlag@@Base+0x558>
   35768:	add	sp, sp, #108	; 0x6c
   3576c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   35770:	ldr	r2, [r0]
   35774:	add	r3, r3, #3
   35778:	uxtb	r3, r3
   3577c:	ldr	r1, [r2, #24]
   35780:	ldr	r8, [r2, #20]
   35784:	cmp	r1, r3
   35788:	bls	35754 <setKeyEventLoggingFlag@@Base+0x484>
   3578c:	add	r3, r3, r3, lsl #1
   35790:	cmn	r8, r3, lsl #4
   35794:	lsl	r9, r3, #4
   35798:	beq	35754 <setKeyEventLoggingFlag@@Base+0x484>
   3579c:	ldr	r1, [pc, #148]	; 35838 <setKeyEventLoggingFlag@@Base+0x568>
   357a0:	add	r1, pc, r1
   357a4:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   357a8:	cmp	r0, #0
   357ac:	beq	35754 <setKeyEventLoggingFlag@@Base+0x484>
   357b0:	ldr	r1, [r8, r9]
   357b4:	mov	r0, r5
   357b8:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   357bc:	cmp	r0, #0
   357c0:	bne	3573c <setKeyEventLoggingFlag@@Base+0x46c>
   357c4:	b	35754 <setKeyEventLoggingFlag@@Base+0x484>
   357c8:	mov	r1, r7
   357cc:	mov	r0, r5
   357d0:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   357d4:	cmp	r0, #0
   357d8:	beq	35754 <setKeyEventLoggingFlag@@Base+0x484>
   357dc:	add	r1, sp, #104	; 0x68
   357e0:	mov	r3, #32
   357e4:	mov	r0, r5
   357e8:	mov	r2, #1
   357ec:	str	r3, [r1, #-104]!	; 0xffffff98
   357f0:	mov	r1, sp
   357f4:	bl	352d8 <setKeyEventLoggingFlag@@Base+0x8>
   357f8:	cmp	r0, #0
   357fc:	beq	35754 <setKeyEventLoggingFlag@@Base+0x484>
   35800:	mov	r1, r6
   35804:	mov	r0, r5
   35808:	bl	35594 <setKeyEventLoggingFlag@@Base+0x2c4>
   3580c:	cmp	r0, #0
   35810:	beq	35754 <setKeyEventLoggingFlag@@Base+0x484>
   35814:	mov	r0, r5
   35818:	bl	35480 <setKeyEventLoggingFlag@@Base+0x1b0>
   3581c:	adds	r0, r0, #0
   35820:	movne	r0, #1
   35824:	b	35758 <setKeyEventLoggingFlag@@Base+0x488>
   35828:	bl	f950 <__stack_chk_fail@plt>
   3582c:	andeq	sp, r3, r4, lsr #7
   35830:			; <UNDEFINED> instruction: 0x000003b4
   35834:	andeq	r0, r2, r8, lsl r7
   35838:	muleq	r2, r4, r6
   3583c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35840:	add	fp, sp, #32
   35844:	ldr	r3, [pc, #1412]	; 35dd0 <setKeyEventLoggingFlag@@Base+0xb00>
   35848:	sub	sp, sp, #172	; 0xac
   3584c:	str	r1, [fp, #-180]	; 0xffffff4c
   35850:	add	r3, pc, r3
   35854:	str	r3, [fp, #-184]	; 0xffffff48
   35858:	ldr	r7, [r1, #24]
   3585c:	mov	sl, r0
   35860:	ldr	r3, [pc, #1388]	; 35dd4 <setKeyEventLoggingFlag@@Base+0xb04>
   35864:	ldr	r4, [r1, #20]
   35868:	cmp	r7, #0
   3586c:	ldr	r1, [fp, #-184]	; 0xffffff48
   35870:	str	r2, [fp, #-172]	; 0xffffff54
   35874:	ldr	r5, [pc, #1372]	; 35dd8 <setKeyEventLoggingFlag@@Base+0xb08>
   35878:	ldr	r3, [r1, r3]
   3587c:	ldr	r6, [pc, #1368]	; 35ddc <setKeyEventLoggingFlag@@Base+0xb0c>
   35880:	add	r5, pc, r5
   35884:	str	r3, [fp, #-188]	; 0xffffff44
   35888:	add	r6, pc, r6
   3588c:	ldr	r3, [r3]
   35890:	str	r3, [fp, #-40]	; 0xffffffd8
   35894:	bne	358b4 <setKeyEventLoggingFlag@@Base+0x5e4>
   35898:	b	35928 <setKeyEventLoggingFlag@@Base+0x658>
   3589c:	ldr	r3, [r4, #8]
   358a0:	cmp	r3, #0
   358a4:	bne	35904 <setKeyEventLoggingFlag@@Base+0x634>
   358a8:	subs	r7, r7, #1
   358ac:	add	r4, r4, #16
   358b0:	beq	35928 <setKeyEventLoggingFlag@@Base+0x658>
   358b4:	ldrb	r3, [r4, #12]
   358b8:	tst	r3, #1
   358bc:	bne	358a8 <setKeyEventLoggingFlag@@Base+0x5d8>
   358c0:	ldr	r3, [r4, #4]
   358c4:	cmp	r3, #0
   358c8:	beq	3589c <setKeyEventLoggingFlag@@Base+0x5cc>
   358cc:	mov	r0, sl
   358d0:	mov	r1, r4
   358d4:	mov	r2, r5
   358d8:	bl	356cc <setKeyEventLoggingFlag@@Base+0x3fc>
   358dc:	cmp	r0, #0
   358e0:	bne	3589c <setKeyEventLoggingFlag@@Base+0x5cc>
   358e4:	mov	r0, #0
   358e8:	ldr	r1, [fp, #-188]	; 0xffffff44
   358ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   358f0:	ldr	r3, [r1]
   358f4:	cmp	r2, r3
   358f8:	bne	35dcc <setKeyEventLoggingFlag@@Base+0xafc>
   358fc:	sub	sp, fp, #32
   35900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35904:	mov	r0, sl
   35908:	mov	r1, r4
   3590c:	mov	r2, r6
   35910:	bl	356cc <setKeyEventLoggingFlag@@Base+0x3fc>
   35914:	cmp	r0, #0
   35918:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   3591c:	subs	r7, r7, #1
   35920:	add	r4, r4, #16
   35924:	bne	358b4 <setKeyEventLoggingFlag@@Base+0x5e4>
   35928:	ldr	r2, [fp, #-180]	; 0xffffff4c
   3592c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   35930:	ldr	r2, [r2, #12]
   35934:	ldr	r3, [r3, #4]
   35938:	cmp	r2, #0
   3593c:	str	r2, [fp, #-152]	; 0xffffff68
   35940:	str	r3, [fp, #-164]	; 0xffffff5c
   35944:	beq	35c54 <setKeyEventLoggingFlag@@Base+0x984>
   35948:	ldr	r3, [fp, #-164]	; 0xffffff5c
   3594c:	ldr	r1, [pc, #1164]	; 35de0 <setKeyEventLoggingFlag@@Base+0xb10>
   35950:	ldr	r2, [pc, #1164]	; 35de4 <setKeyEventLoggingFlag@@Base+0xb14>
   35954:	add	r8, r3, #37	; 0x25
   35958:	add	r1, pc, r1
   3595c:	ldr	r3, [pc, #1156]	; 35de8 <setKeyEventLoggingFlag@@Base+0xb18>
   35960:	str	r1, [fp, #-196]	; 0xffffff3c
   35964:	add	r2, pc, r2
   35968:	ldr	r1, [pc, #1148]	; 35dec <setKeyEventLoggingFlag@@Base+0xb1c>
   3596c:	add	r3, pc, r3
   35970:	str	r2, [fp, #-192]	; 0xffffff40
   35974:	sub	r2, fp, #136	; 0x88
   35978:	add	r1, pc, r1
   3597c:	str	r2, [fp, #-168]	; 0xffffff58
   35980:	str	r3, [fp, #-200]	; 0xffffff38
   35984:	ldr	r9, [fp, #-164]	; 0xffffff5c
   35988:	str	r1, [fp, #-204]	; 0xffffff34
   3598c:	b	359a8 <setKeyEventLoggingFlag@@Base+0x6d8>
   35990:	ldr	r2, [fp, #-152]	; 0xffffff68
   35994:	add	r9, r9, #40	; 0x28
   35998:	add	r8, r8, #40	; 0x28
   3599c:	subs	r2, r2, #1
   359a0:	str	r2, [fp, #-152]	; 0xffffff68
   359a4:	beq	35c54 <setKeyEventLoggingFlag@@Base+0x984>
   359a8:	ldrb	r3, [r9, #39]	; 0x27
   359ac:	tst	r3, #1
   359b0:	bne	35990 <setKeyEventLoggingFlag@@Base+0x6c0>
   359b4:	ldrb	r3, [r8, #-32]	; 0xffffffe0
   359b8:	sub	r1, fp, #136	; 0x88
   359bc:	mov	r2, #96	; 0x60
   359c0:	ldr	r0, [r8, #-37]	; 0xffffffdb
   359c4:	cmp	r3, #0
   359c8:	moveq	r3, #6
   359cc:	movne	r3, #0
   359d0:	bl	2b474 <describeCommand@@Base>
   359d4:	mov	r0, sl
   359d8:	sub	r1, fp, #136	; 0x88
   359dc:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   359e0:	cmp	r0, #0
   359e4:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   359e8:	mov	r0, sl
   359ec:	ldr	r1, [fp, #-192]	; 0xffffff40
   359f0:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   359f4:	cmp	r0, #0
   359f8:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   359fc:	ldr	r2, [fp, #-172]	; 0xffffff54
   35a00:	ldr	r3, [sl, #16]
   35a04:	cmp	r2, #0
   35a08:	str	r3, [fp, #-176]	; 0xffffff50
   35a0c:	beq	35a38 <setKeyEventLoggingFlag@@Base+0x768>
   35a10:	mov	r0, sl
   35a14:	ldr	r1, [fp, #-172]	; 0xffffff54
   35a18:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   35a1c:	cmp	r0, #0
   35a20:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35a24:	mov	r0, sl
   35a28:	ldr	r1, [fp, #-196]	; 0xffffff3c
   35a2c:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   35a30:	cmp	r0, #0
   35a34:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35a38:	ldr	r3, [fp, #-164]	; 0xffffff5c
   35a3c:	rsb	r3, r3, r9
   35a40:	str	r3, [fp, #-156]	; 0xffffff64
   35a44:	ldr	r3, [fp, #-164]	; 0xffffff5c
   35a48:	ldr	r1, [fp, #-156]	; 0xffffff64
   35a4c:	add	r3, r3, #4
   35a50:	str	r3, [fp, #-160]	; 0xffffff60
   35a54:	add	r4, r1, r3
   35a58:	ldrb	r3, [r4, #2]
   35a5c:	cmp	r3, #0
   35a60:	addne	r5, r9, #4
   35a64:	subne	r6, fp, #140	; 0x8c
   35a68:	movne	r7, #0
   35a6c:	beq	35db4 <setKeyEventLoggingFlag@@Base+0xae4>
   35a70:	add	r3, r9, r7
   35a74:	mov	r0, sl
   35a78:	ldrb	r1, [r3, #7]
   35a7c:	add	r1, r5, r1, lsl #1
   35a80:	add	r1, r1, #13
   35a84:	bl	35594 <setKeyEventLoggingFlag@@Base+0x2c4>
   35a88:	cmp	r0, #0
   35a8c:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35a90:	add	r7, r7, #1
   35a94:	ldrb	r3, [r4, #2]
   35a98:	uxtb	r7, r7
   35a9c:	cmp	r3, r7
   35aa0:	bls	35ac8 <setKeyEventLoggingFlag@@Base+0x7f8>
   35aa4:	mov	r0, sl
   35aa8:	mov	r1, r6
   35aac:	mov	r2, #1
   35ab0:	mov	r3, #43	; 0x2b
   35ab4:	str	r3, [fp, #-140]	; 0xffffff74
   35ab8:	bl	352d8 <setKeyEventLoggingFlag@@Base+0x8>
   35abc:	cmp	r0, #0
   35ac0:	bne	35a70 <setKeyEventLoggingFlag@@Base+0x7a0>
   35ac4:	b	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35ac8:	ldr	r2, [fp, #-156]	; 0xffffff64
   35acc:	ldr	r1, [fp, #-160]	; 0xffffff60
   35ad0:	ldrb	r3, [r2, r1]
   35ad4:	tst	r3, #1
   35ad8:	beq	35b10 <setKeyEventLoggingFlag@@Base+0x840>
   35adc:	sub	r1, fp, #36	; 0x24
   35ae0:	mov	r3, #43	; 0x2b
   35ae4:	mov	r0, sl
   35ae8:	mov	r2, #1
   35aec:	str	r3, [r1, #-108]!	; 0xffffff94
   35af0:	bl	352d8 <setKeyEventLoggingFlag@@Base+0x8>
   35af4:	cmp	r0, #0
   35af8:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35afc:	mov	r0, sl
   35b00:	mov	r1, r8
   35b04:	bl	35594 <setKeyEventLoggingFlag@@Base+0x2c4>
   35b08:	cmp	r0, #0
   35b0c:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35b10:	ldr	r5, [r8, #-37]	; 0xffffffdb
   35b14:	and	r3, r5, #65280	; 0xff00
   35b18:	cmp	r3, #9728	; 0x2600
   35b1c:	beq	35b34 <setKeyEventLoggingFlag@@Base+0x864>
   35b20:	mov	r0, sl
   35b24:	bl	35480 <setKeyEventLoggingFlag@@Base+0x1b0>
   35b28:	cmp	r0, #0
   35b2c:	bne	35990 <setKeyEventLoggingFlag@@Base+0x6c0>
   35b30:	b	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35b34:	ldr	r3, [sl]
   35b38:	add	r5, r5, #3
   35b3c:	uxtb	r5, r5
   35b40:	ldr	r2, [r3, #24]
   35b44:	ldr	r4, [r3, #20]
   35b48:	cmp	r2, r5
   35b4c:	bls	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35b50:	add	r5, r5, r5, lsl #1
   35b54:	adds	r3, r4, r5, lsl #4
   35b58:	str	r3, [fp, #-156]	; 0xffffff64
   35b5c:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35b60:	ldr	r2, [fp, #-176]	; 0xffffff50
   35b64:	ldr	r3, [sl, #16]
   35b68:	str	sp, [fp, #-160]	; 0xffffff60
   35b6c:	rsb	r7, r2, r3
   35b70:	ldr	r1, [sl, #8]
   35b74:	lsl	r0, r7, #2
   35b78:	add	r1, r1, r2, lsl #2
   35b7c:	add	r0, r0, #14
   35b80:	mov	r2, r7
   35b84:	bic	r0, r0, #7
   35b88:	sub	sp, sp, r0
   35b8c:	mov	r0, sp
   35b90:	mov	r6, sp
   35b94:	bl	f620 <wmemcpy@plt>
   35b98:	mov	r2, #0
   35b9c:	str	r2, [sp, r7, lsl #2]
   35ba0:	ldr	r3, [sl]
   35ba4:	str	r2, [sl, #16]
   35ba8:	ldr	r1, [fp, #-156]	; 0xffffff64
   35bac:	ldr	r3, [r3, #20]
   35bb0:	rsb	r3, r3, r1
   35bb4:	cmp	r3, #191	; 0xbf
   35bb8:	ble	35bc8 <setKeyEventLoggingFlag@@Base+0x8f8>
   35bbc:	ldr	r3, [r4, r5, lsl #4]
   35bc0:	cmp	r3, r2
   35bc4:	beq	35c30 <setKeyEventLoggingFlag@@Base+0x960>
   35bc8:	mov	r0, sl
   35bcc:	ldr	r1, [fp, #-200]	; 0xffffff38
   35bd0:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   35bd4:	cmp	r0, #0
   35bd8:	beq	35c48 <setKeyEventLoggingFlag@@Base+0x978>
   35bdc:	ldr	r1, [r4, r5, lsl #4]
   35be0:	mov	r0, sl
   35be4:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   35be8:	cmp	r0, #0
   35bec:	beq	35c48 <setKeyEventLoggingFlag@@Base+0x978>
   35bf0:	mov	r0, sl
   35bf4:	ldr	r1, [fp, #-204]	; 0xffffff34
   35bf8:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   35bfc:	cmp	r0, #0
   35c00:	beq	35c48 <setKeyEventLoggingFlag@@Base+0x978>
   35c04:	mov	r1, r6
   35c08:	mov	r0, sl
   35c0c:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   35c10:	cmp	r0, #0
   35c14:	beq	35c48 <setKeyEventLoggingFlag@@Base+0x978>
   35c18:	mov	r0, sl
   35c1c:	bl	35480 <setKeyEventLoggingFlag@@Base+0x1b0>
   35c20:	cmp	r0, #0
   35c24:	beq	35c48 <setKeyEventLoggingFlag@@Base+0x978>
   35c28:	ldr	sp, [fp, #-160]	; 0xffffff60
   35c2c:	b	35990 <setKeyEventLoggingFlag@@Base+0x6c0>
   35c30:	ldr	r1, [fp, #-156]	; 0xffffff64
   35c34:	mov	r2, sp
   35c38:	mov	r0, sl
   35c3c:	bl	3583c <setKeyEventLoggingFlag@@Base+0x56c>
   35c40:	cmp	r0, #0
   35c44:	bne	35c28 <setKeyEventLoggingFlag@@Base+0x958>
   35c48:	mov	r0, #0
   35c4c:	ldr	sp, [fp, #-160]	; 0xffffff60
   35c50:	b	358e8 <setKeyEventLoggingFlag@@Base+0x618>
   35c54:	ldr	r1, [fp, #-180]	; 0xffffff4c
   35c58:	ldr	r3, [r1, #36]	; 0x24
   35c5c:	cmp	r3, #0
   35c60:	beq	35d00 <setKeyEventLoggingFlag@@Base+0xa30>
   35c64:	ldr	r7, [pc, #388]	; 35df0 <setKeyEventLoggingFlag@@Base+0xb20>
   35c68:	mov	r4, #0
   35c6c:	ldr	r8, [pc, #384]	; 35df4 <setKeyEventLoggingFlag@@Base+0xb24>
   35c70:	add	r7, pc, r7
   35c74:	ldr	r6, [fp, #-180]	; 0xffffff4c
   35c78:	add	r8, pc, r8
   35c7c:	b	35cdc <setKeyEventLoggingFlag@@Base+0xa0c>
   35c80:	ldr	r1, [r9]
   35c84:	mov	r0, sl
   35c88:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   35c8c:	cmp	r0, #0
   35c90:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35c94:	mov	r0, sl
   35c98:	mov	r1, r8
   35c9c:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   35ca0:	cmp	r0, #0
   35ca4:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35ca8:	mov	r1, r5
   35cac:	mov	r0, sl
   35cb0:	bl	35594 <setKeyEventLoggingFlag@@Base+0x2c4>
   35cb4:	cmp	r0, #0
   35cb8:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35cbc:	mov	r0, sl
   35cc0:	bl	35480 <setKeyEventLoggingFlag@@Base+0x1b0>
   35cc4:	cmp	r0, #0
   35cc8:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35ccc:	ldr	r3, [r6, #36]	; 0x24
   35cd0:	add	r4, r4, #1
   35cd4:	cmp	r4, r3
   35cd8:	bcs	35d00 <setKeyEventLoggingFlag@@Base+0xa30>
   35cdc:	ldr	r5, [r6, #32]
   35ce0:	mov	r0, sl
   35ce4:	mov	r1, r7
   35ce8:	add	r5, r5, r4, lsl #3
   35cec:	ldr	r9, [r5, #4]
   35cf0:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   35cf4:	cmp	r0, #0
   35cf8:	bne	35c80 <setKeyEventLoggingFlag@@Base+0x9b0>
   35cfc:	b	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35d00:	ldr	r1, [fp, #-184]	; 0xffffff48
   35d04:	ldr	r3, [pc, #236]	; 35df8 <setKeyEventLoggingFlag@@Base+0xb28>
   35d08:	ldr	r2, [pc, #236]	; 35dfc <setKeyEventLoggingFlag@@Base+0xb2c>
   35d0c:	ldr	r3, [r1, r3]
   35d10:	ldr	r4, [r1, r2]
   35d14:	ldrb	r5, [r3]
   35d18:	add	r5, r4, r5, lsl #3
   35d1c:	cmp	r5, r4
   35d20:	bls	35dac <setKeyEventLoggingFlag@@Base+0xadc>
   35d24:	ldr	r7, [pc, #212]	; 35e00 <setKeyEventLoggingFlag@@Base+0xb30>
   35d28:	add	r4, r4, #8
   35d2c:	ldr	r6, [pc, #208]	; 35e04 <setKeyEventLoggingFlag@@Base+0xb34>
   35d30:	add	r7, pc, r7
   35d34:	ldr	r8, [fp, #-180]	; 0xffffff4c
   35d38:	add	r6, pc, r6
   35d3c:	b	35d4c <setKeyEventLoggingFlag@@Base+0xa7c>
   35d40:	cmp	r5, r4
   35d44:	add	r4, r4, #8
   35d48:	bls	35dac <setKeyEventLoggingFlag@@Base+0xadc>
   35d4c:	ldr	r2, [r4, #-4]
   35d50:	ldr	r3, [r8, #44]	; 0x2c
   35d54:	tst	r2, r3
   35d58:	beq	35d40 <setKeyEventLoggingFlag@@Base+0xa70>
   35d5c:	mov	r0, sl
   35d60:	mov	r1, r7
   35d64:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   35d68:	cmp	r0, #0
   35d6c:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35d70:	mov	r0, sl
   35d74:	ldr	r1, [r4, #-8]
   35d78:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   35d7c:	cmp	r0, #0
   35d80:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35d84:	mov	r0, sl
   35d88:	mov	r1, r6
   35d8c:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   35d90:	cmp	r0, #0
   35d94:	beq	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35d98:	mov	r0, sl
   35d9c:	bl	35480 <setKeyEventLoggingFlag@@Base+0x1b0>
   35da0:	cmp	r0, #0
   35da4:	bne	35d40 <setKeyEventLoggingFlag@@Base+0xa70>
   35da8:	b	358e4 <setKeyEventLoggingFlag@@Base+0x614>
   35dac:	mov	r0, #1
   35db0:	b	358e8 <setKeyEventLoggingFlag@@Base+0x618>
   35db4:	ldr	r1, [fp, #-156]	; 0xffffff64
   35db8:	ldr	r2, [fp, #-160]	; 0xffffff60
   35dbc:	ldrb	r3, [r1, r2]
   35dc0:	tst	r3, #1
   35dc4:	bne	35afc <setKeyEventLoggingFlag@@Base+0x82c>
   35dc8:	b	35b10 <setKeyEventLoggingFlag@@Base+0x840>
   35dcc:	bl	f950 <__stack_chk_fail@plt>
   35dd0:	andeq	sp, r3, r8, lsr #4
   35dd4:			; <UNDEFINED> instruction: 0x000003b4
   35dd8:	andeq	r0, r2, r0, asr #11
   35ddc:	andeq	fp, r1, r4, lsr fp
   35de0:	andeq	r0, r2, r0, lsl r5
   35de4:	strdeq	r0, [r2], -r8
   35de8:	andeq	r0, r2, r4, asr #10
   35dec:	andeq	r0, r2, r4, ror #9
   35df0:	ldrdeq	r0, [r2], -r8
   35df4:	andeq	r0, r2, r4, ror #3
   35df8:	andeq	r0, r0, r8, lsl r4
   35dfc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   35e00:	andeq	r0, r2, r8, lsl r1
   35e04:	andeq	r0, r2, ip, lsr r1

00035e08 <listKeyTable@@Base>:
   35e08:	ldr	ip, [pc, #580]	; 36054 <listKeyTable@@Base+0x24c>
   35e0c:	mov	r3, #0
   35e10:	push	{r4, r5, r6, r7, lr}
   35e14:	add	ip, pc, ip
   35e18:	ldr	lr, [pc, #568]	; 36058 <listKeyTable@@Base+0x250>
   35e1c:	sub	sp, sp, #36	; 0x24
   35e20:	ldr	r6, [ip, lr]
   35e24:	str	r1, [sp, #20]
   35e28:	ldr	r1, [pc, #556]	; 3605c <listKeyTable@@Base+0x254>
   35e2c:	ldr	ip, [r6]
   35e30:	str	r0, [sp]
   35e34:	add	r1, pc, r1
   35e38:	mov	r0, r3
   35e3c:	str	r2, [sp, #24]
   35e40:	mov	r2, #5
   35e44:	str	ip, [sp, #28]
   35e48:	str	r3, [sp, #4]
   35e4c:	str	r3, [sp, #8]
   35e50:	str	r3, [sp, #12]
   35e54:	str	r3, [sp, #16]
   35e58:	bl	f9bc <dcgettext@plt>
   35e5c:	mov	r1, r0
   35e60:	mov	r0, sp
   35e64:	bl	353b4 <setKeyEventLoggingFlag@@Base+0xe4>
   35e68:	cmp	r0, #0
   35e6c:	beq	35e98 <listKeyTable@@Base+0x90>
   35e70:	ldr	r3, [sp]
   35e74:	ldr	r2, [r3]
   35e78:	cmp	r2, #0
   35e7c:	beq	35ef4 <listKeyTable@@Base+0xec>
   35e80:	ldr	r1, [pc, #472]	; 36060 <listKeyTable@@Base+0x258>
   35e84:	mov	r0, sp
   35e88:	add	r1, pc, r1
   35e8c:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   35e90:	cmp	r0, #0
   35e94:	bne	35ec8 <listKeyTable@@Base+0xc0>
   35e98:	mov	r4, #0
   35e9c:	ldr	r0, [sp, #8]
   35ea0:	cmp	r0, #0
   35ea4:	beq	35eac <listKeyTable@@Base+0xa4>
   35ea8:	bl	f4f4 <free@plt>
   35eac:	ldr	r2, [sp, #28]
   35eb0:	mov	r0, r4
   35eb4:	ldr	r3, [r6]
   35eb8:	cmp	r2, r3
   35ebc:	bne	36050 <listKeyTable@@Base+0x248>
   35ec0:	add	sp, sp, #36	; 0x24
   35ec4:	pop	{r4, r5, r6, r7, pc}
   35ec8:	ldr	r3, [sp]
   35ecc:	mov	r0, sp
   35ed0:	ldr	r1, [r3]
   35ed4:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   35ed8:	cmp	r0, #0
   35edc:	beq	35e98 <listKeyTable@@Base+0x90>
   35ee0:	mov	r0, sp
   35ee4:	bl	35480 <setKeyEventLoggingFlag@@Base+0x1b0>
   35ee8:	cmp	r0, #0
   35eec:	beq	35e98 <listKeyTable@@Base+0x90>
   35ef0:	ldr	r3, [sp]
   35ef4:	ldr	r2, [r3, #8]
   35ef8:	cmp	r2, #0
   35efc:	bne	35fe0 <listKeyTable@@Base+0x1d8>
   35f00:	ldr	r2, [pc, #348]	; 36064 <listKeyTable@@Base+0x25c>
   35f04:	ldr	ip, [r3, #24]
   35f08:	add	r2, pc, r2
   35f0c:	sub	r4, r2, #1
   35f10:	add	r7, r2, #1
   35f14:	ldrb	r2, [r4, #1]!
   35f18:	ldr	r0, [r3, #20]
   35f1c:	cmp	r2, ip
   35f20:	bcs	35f54 <listKeyTable@@Base+0x14c>
   35f24:	add	r2, r2, r2, lsl #1
   35f28:	adds	r1, r0, r2, lsl #4
   35f2c:	beq	35f54 <listKeyTable@@Base+0x14c>
   35f30:	ldr	r3, [r0, r2, lsl #4]
   35f34:	mov	r0, sp
   35f38:	mov	r2, #0
   35f3c:	str	r3, [sp, #4]
   35f40:	bl	3583c <setKeyEventLoggingFlag@@Base+0x56c>
   35f44:	cmp	r0, #0
   35f48:	beq	35e98 <listKeyTable@@Base+0x90>
   35f4c:	ldr	r3, [sp]
   35f50:	ldr	ip, [r3, #24]
   35f54:	cmp	r4, r7
   35f58:	bne	35f14 <listKeyTable@@Base+0x10c>
   35f5c:	cmp	ip, #4
   35f60:	movhi	r2, r3
   35f64:	movhi	r4, #4
   35f68:	bhi	35fb0 <listKeyTable@@Base+0x1a8>
   35f6c:	b	36048 <listKeyTable@@Base+0x240>
   35f70:	ldr	r2, [r2, ip, lsl #4]
   35f74:	cmp	r2, #0
   35f78:	movne	r3, r2
   35f7c:	beq	35f9c <listKeyTable@@Base+0x194>
   35f80:	mov	r0, sp
   35f84:	mov	r2, #0
   35f88:	str	r3, [sp, #4]
   35f8c:	bl	3583c <setKeyEventLoggingFlag@@Base+0x56c>
   35f90:	cmp	r0, #0
   35f94:	beq	35e98 <listKeyTable@@Base+0x90>
   35f98:	ldr	r3, [sp]
   35f9c:	ldr	ip, [r3, #24]
   35fa0:	add	r4, r4, #1
   35fa4:	mov	r2, r3
   35fa8:	cmp	ip, r4
   35fac:	bls	36048 <listKeyTable@@Base+0x240>
   35fb0:	uxtb	r1, r4
   35fb4:	ldr	r2, [r2, #20]
   35fb8:	cmp	r1, ip
   35fbc:	bcs	35f9c <listKeyTable@@Base+0x194>
   35fc0:	add	ip, r1, r1, lsl #1
   35fc4:	adds	r1, r2, ip, lsl #4
   35fc8:	beq	35f9c <listKeyTable@@Base+0x194>
   35fcc:	rsb	r0, r2, r1
   35fd0:	cmp	r0, #191	; 0xbf
   35fd4:	bgt	35f70 <listKeyTable@@Base+0x168>
   35fd8:	ldr	r3, [r2, ip, lsl #4]
   35fdc:	b	35f80 <listKeyTable@@Base+0x178>
   35fe0:	mov	r0, sp
   35fe4:	bl	35480 <setKeyEventLoggingFlag@@Base+0x1b0>
   35fe8:	cmp	r0, #0
   35fec:	beq	35e98 <listKeyTable@@Base+0x90>
   35ff0:	ldr	r3, [sp]
   35ff4:	ldr	r2, [r3, #8]
   35ff8:	cmp	r2, #0
   35ffc:	beq	35f00 <listKeyTable@@Base+0xf8>
   36000:	mov	r4, #0
   36004:	b	3602c <listKeyTable@@Base+0x224>
   36008:	mov	r0, sp
   3600c:	bl	35480 <setKeyEventLoggingFlag@@Base+0x1b0>
   36010:	cmp	r0, #0
   36014:	beq	35e98 <listKeyTable@@Base+0x90>
   36018:	ldr	r3, [sp]
   3601c:	add	r4, r4, #1
   36020:	ldr	r2, [r3, #8]
   36024:	cmp	r4, r2
   36028:	bcs	35f00 <listKeyTable@@Base+0xf8>
   3602c:	ldr	r3, [r3, #4]
   36030:	mov	r0, sp
   36034:	ldr	r1, [r3, r4, lsl #2]
   36038:	bl	3544c <setKeyEventLoggingFlag@@Base+0x17c>
   3603c:	cmp	r0, #0
   36040:	bne	36008 <listKeyTable@@Base+0x200>
   36044:	b	35e98 <listKeyTable@@Base+0x90>
   36048:	mov	r4, #1
   3604c:	b	35e9c <listKeyTable@@Base+0x94>
   36050:	bl	f950 <__stack_chk_fail@plt>
   36054:	andeq	ip, r3, r4, ror #24
   36058:			; <UNDEFINED> instruction: 0x000003b4
   3605c:			; <UNDEFINED> instruction: 0x00019ab0
   36060:	ldrdeq	pc, [r1], -r4
   36064:	andeq	pc, r1, r8, lsr #30

00036068 <listKeyNames@@Base>:
   36068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3606c:	add	fp, sp, #32
   36070:	ldr	r3, [pc, #292]	; 3619c <listKeyNames@@Base+0x134>
   36074:	sub	sp, sp, #36	; 0x24
   36078:	str	r0, [fp, #-56]	; 0xffffffc8
   3607c:	ldr	r0, [pc, #284]	; 361a0 <listKeyNames@@Base+0x138>
   36080:	add	r3, pc, r3
   36084:	mov	r7, r1
   36088:	ldr	r1, [fp, #-56]	; 0xffffffc8
   3608c:	mov	r8, r2
   36090:	ldr	r0, [r3, r0]
   36094:	ldr	r6, [r1]
   36098:	ldr	r3, [r0]
   3609c:	cmp	r6, #0
   360a0:	str	r0, [fp, #-64]	; 0xffffffc0
   360a4:	str	r3, [fp, #-40]	; 0xffffffd8
   360a8:	beq	3618c <listKeyNames@@Base+0x124>
   360ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   360b0:	sub	r9, fp, #48	; 0x30
   360b4:	ldr	r3, [pc, #232]	; 361a4 <listKeyNames@@Base+0x13c>
   360b8:	sub	sl, fp, #44	; 0x2c
   360bc:	add	r3, pc, r3
   360c0:	str	r2, [fp, #-60]	; 0xffffffc4
   360c4:	str	r3, [fp, #-68]	; 0xffffffbc
   360c8:	ldr	r3, [r6]
   360cc:	cmp	r3, #0
   360d0:	bne	360e8 <listKeyNames@@Base+0x80>
   360d4:	b	36150 <listKeyNames@@Base+0xe8>
   360d8:	ldr	r3, [r6, #8]!
   360dc:	mov	sp, r5
   360e0:	cmp	r3, #0
   360e4:	beq	36150 <listKeyNames@@Base+0xe8>
   360e8:	mov	r0, r3
   360ec:	str	r3, [fp, #-48]	; 0xffffffd0
   360f0:	bl	fb54 <strlen@plt>
   360f4:	mov	r5, sp
   360f8:	mov	r1, sl
   360fc:	add	r2, r0, #1
   36100:	mov	r0, r9
   36104:	lsl	r3, r2, #2
   36108:	add	r3, r3, #10
   3610c:	bic	r3, r3, #7
   36110:	sub	sp, sp, r3
   36114:	str	sp, [fp, #-44]	; 0xffffffd4
   36118:	bl	281a0 <convertUtf8ToWchars@@Base>
   3611c:	mov	r0, sp
   36120:	mov	r1, r8
   36124:	blx	r7
   36128:	cmp	r0, #0
   3612c:	bne	360d8 <listKeyNames@@Base+0x70>
   36130:	mov	sp, r5
   36134:	ldr	r1, [fp, #-64]	; 0xffffffc0
   36138:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3613c:	ldr	r3, [r1]
   36140:	cmp	r2, r3
   36144:	bne	36194 <listKeyNames@@Base+0x12c>
   36148:	sub	sp, fp, #32
   3614c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36150:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36154:	ldr	r6, [r3, #4]!
   36158:	cmp	r6, #0
   3615c:	str	r3, [fp, #-60]	; 0xffffffc4
   36160:	beq	3618c <listKeyNames@@Base+0x124>
   36164:	ldr	r1, [fp, #-56]	; 0xffffffc8
   36168:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3616c:	cmp	r1, r2
   36170:	beq	360c8 <listKeyNames@@Base+0x60>
   36174:	ldr	r0, [fp, #-68]	; 0xffffffbc
   36178:	mov	r1, r8
   3617c:	blx	r7
   36180:	cmp	r0, #0
   36184:	bne	360c8 <listKeyNames@@Base+0x60>
   36188:	b	36134 <listKeyNames@@Base+0xcc>
   3618c:	mov	r0, #1
   36190:	b	36134 <listKeyNames@@Base+0xcc>
   36194:	bl	f950 <__stack_chk_fail@plt>
   36198:	bl	fd04 <_Unwind_Resume@plt>
   3619c:	strdeq	ip, [r3], -r8
   361a0:			; <UNDEFINED> instruction: 0x000003b4
   361a4:			; <UNDEFINED> instruction: 0x0001fdb4

000361a8 <parseKeyboardProperties@@Base>:
   361a8:	ldr	r3, [pc, #404]	; 36344 <parseKeyboardProperties@@Base+0x19c>
   361ac:	mov	r2, r1
   361b0:	ldr	ip, [pc, #400]	; 36348 <parseKeyboardProperties@@Base+0x1a0>
   361b4:	mov	r1, #0
   361b8:	add	r3, pc, r3
   361bc:	push	{r4, r5, r6, r7, lr}
   361c0:	sub	sp, sp, #12
   361c4:	ldr	r6, [r3, ip]
   361c8:	mov	r5, r0
   361cc:	ldr	r7, [pc, #376]	; 3634c <parseKeyboardProperties@@Base+0x1a4>
   361d0:	ldr	r3, [r6]
   361d4:	add	r7, pc, r7
   361d8:	mov	r0, r7
   361dc:	str	r3, [sp, #4]
   361e0:	bl	1e2f8 <getParameters@@Base>
   361e4:	ldr	r2, [pc, #356]	; 36350 <parseKeyboardProperties@@Base+0x1a8>
   361e8:	add	r2, pc, r2
   361ec:	mov	r4, r0
   361f0:	mov	r0, r7
   361f4:	mov	r1, r4
   361f8:	bl	1e698 <logParameters@@Base>
   361fc:	mov	r3, #0
   36200:	str	r3, [r5]
   36204:	str	r3, [r5, #4]
   36208:	str	r3, [r5, #8]
   3620c:	ldr	r1, [r4]
   36210:	ldrb	r3, [r1]
   36214:	cmp	r3, #0
   36218:	moveq	r7, #1
   3621c:	bne	362bc <parseKeyboardProperties@@Base+0x114>
   36220:	ldr	r1, [r4, #4]
   36224:	ldrb	r3, [r1]
   36228:	cmp	r3, #0
   3622c:	bne	36290 <parseKeyboardProperties@@Base+0xe8>
   36230:	ldr	r1, [r4, #8]
   36234:	ldrb	r3, [r1]
   36238:	cmp	r3, #0
   3623c:	bne	36264 <parseKeyboardProperties@@Base+0xbc>
   36240:	mov	r0, r4
   36244:	bl	1db88 <deallocateStrings@@Base>
   36248:	ldr	r2, [sp, #4]
   3624c:	ldr	r3, [r6]
   36250:	mov	r0, r7
   36254:	cmp	r2, r3
   36258:	bne	36340 <parseKeyboardProperties@@Base+0x198>
   3625c:	add	sp, sp, #12
   36260:	pop	{r4, r5, r6, r7, pc}
   36264:	ldr	r3, [pc, #232]	; 36354 <parseKeyboardProperties@@Base+0x1ac>
   36268:	mov	r0, sp
   3626c:	add	r3, pc, r3
   36270:	add	r2, r3, #24
   36274:	add	r3, r3, #28
   36278:	bl	1dff8 <validateInteger@@Base>
   3627c:	subs	r3, r0, #0
   36280:	beq	362f0 <parseKeyboardProperties@@Base+0x148>
   36284:	ldr	r3, [sp]
   36288:	str	r3, [r5, #8]
   3628c:	b	36240 <parseKeyboardProperties@@Base+0x98>
   36290:	ldr	r3, [pc, #192]	; 36358 <parseKeyboardProperties@@Base+0x1b0>
   36294:	mov	r0, sp
   36298:	add	r3, pc, r3
   3629c:	add	r2, r3, #16
   362a0:	add	r3, r3, #20
   362a4:	bl	1dff8 <validateInteger@@Base>
   362a8:	subs	r3, r0, #0
   362ac:	beq	36324 <parseKeyboardProperties@@Base+0x17c>
   362b0:	ldr	r3, [sp]
   362b4:	str	r3, [r5, #4]
   362b8:	b	36230 <parseKeyboardProperties@@Base+0x88>
   362bc:	ldr	r2, [pc, #152]	; 3635c <parseKeyboardProperties@@Base+0x1b4>
   362c0:	mov	r0, sp
   362c4:	add	r2, pc, r2
   362c8:	bl	1e0ac <validateChoice@@Base>
   362cc:	subs	r7, r0, #0
   362d0:	beq	3630c <parseKeyboardProperties@@Base+0x164>
   362d4:	ldr	r3, [pc, #132]	; 36360 <parseKeyboardProperties@@Base+0x1b8>
   362d8:	mov	r7, #1
   362dc:	ldr	r2, [sp]
   362e0:	add	r3, pc, r3
   362e4:	ldr	r3, [r3, r2, lsl #2]
   362e8:	str	r3, [r5]
   362ec:	b	36220 <parseKeyboardProperties@@Base+0x78>
   362f0:	ldr	r1, [pc, #108]	; 36364 <parseKeyboardProperties@@Base+0x1bc>
   362f4:	mov	r0, #4
   362f8:	ldr	r2, [r4, #8]
   362fc:	mov	r7, r3
   36300:	add	r1, pc, r1
   36304:	bl	1c634 <logMessage@@Base>
   36308:	b	36240 <parseKeyboardProperties@@Base+0x98>
   3630c:	ldr	r1, [pc, #84]	; 36368 <parseKeyboardProperties@@Base+0x1c0>
   36310:	mov	r0, #4
   36314:	ldr	r2, [r4]
   36318:	add	r1, pc, r1
   3631c:	bl	1c634 <logMessage@@Base>
   36320:	b	36220 <parseKeyboardProperties@@Base+0x78>
   36324:	ldr	r1, [pc, #64]	; 3636c <parseKeyboardProperties@@Base+0x1c4>
   36328:	mov	r0, #4
   3632c:	ldr	r2, [r4, #4]
   36330:	mov	r7, r3
   36334:	add	r1, pc, r1
   36338:	bl	1c634 <logMessage@@Base>
   3633c:	b	36230 <parseKeyboardProperties@@Base+0x88>
   36340:	bl	f950 <__stack_chk_fail@plt>
   36344:	andeq	ip, r3, r0, asr #17
   36348:			; <UNDEFINED> instruction: 0x000003b4
   3634c:	andeq	sl, r3, r4, lsl #29
   36350:			; <UNDEFINED> instruction: 0x00020db4
   36354:	andeq	r0, r2, r4, lsl #26
   36358:	ldrdeq	r0, [r2], -r8
   3635c:	andeq	ip, r3, ip, lsl #28
   36360:	muleq	r2, r0, ip
   36364:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   36368:	muleq	r2, r8, ip
   3636c:	muleq	r2, r8, ip

00036370 <checkKeyboardProperties@@Base>:
   36370:	cmp	r1, #0
   36374:	ldr	r3, [pc, #128]	; 363fc <checkKeyboardProperties@@Base+0x8c>
   36378:	add	r3, pc, r3
   3637c:	beq	363e8 <checkKeyboardProperties@@Base+0x78>
   36380:	cmp	r0, #0
   36384:	beq	363f0 <checkKeyboardProperties@@Base+0x80>
   36388:	ldr	r3, [r1]
   3638c:	cmp	r3, #0
   36390:	beq	363a8 <checkKeyboardProperties@@Base+0x38>
   36394:	ldr	r2, [r0]
   36398:	cmp	r3, r2
   3639c:	beq	363a8 <checkKeyboardProperties@@Base+0x38>
   363a0:	mov	r0, #0
   363a4:	bx	lr
   363a8:	ldr	r3, [r1, #4]
   363ac:	cmp	r3, #0
   363b0:	bne	363d4 <checkKeyboardProperties@@Base+0x64>
   363b4:	ldr	r3, [r1, #8]
   363b8:	cmp	r3, #0
   363bc:	beq	363e8 <checkKeyboardProperties@@Base+0x78>
   363c0:	ldr	r0, [r0, #8]
   363c4:	subs	r3, r3, r0
   363c8:	rsbs	r0, r3, #0
   363cc:	adcs	r0, r0, r3
   363d0:	bx	lr
   363d4:	ldr	r2, [r0, #4]
   363d8:	cmp	r3, r2
   363dc:	beq	363b4 <checkKeyboardProperties@@Base+0x44>
   363e0:	mov	r0, #0
   363e4:	bx	lr
   363e8:	mov	r0, #1
   363ec:	bx	lr
   363f0:	ldr	r2, [pc, #8]	; 36400 <checkKeyboardProperties@@Base+0x90>
   363f4:	ldr	r0, [r3, r2]
   363f8:	b	36388 <checkKeyboardProperties@@Base+0x18>
   363fc:	andeq	ip, r3, r0, lsl #14
   36400:	andeq	r0, r0, r0, asr #9
   36404:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   36408:	ldr	r4, [r0, #16]
   3640c:	ldr	r8, [r0]
   36410:	cmp	r4, #0
   36414:	bne	36454 <checkKeyboardProperties@@Base+0xe4>
   36418:	ldrb	r3, [r0, #20]
   3641c:	ands	r3, r3, #1
   36420:	bne	36490 <checkKeyboardProperties@@Base+0x120>
   36424:	ldr	r2, [r0, #12]
   36428:	ldr	r9, [r0, #4]
   3642c:	cmp	r2, #15
   36430:	bls	36488 <checkKeyboardProperties@@Base+0x118>
   36434:	ldrh	r0, [r9, #8]
   36438:	cmp	r0, #1
   3643c:	beq	364a8 <checkKeyboardProperties@@Base+0x138>
   36440:	ldrh	r1, [r9, #10]
   36444:	ldr	r2, [r9, #12]
   36448:	bl	20b68 <writeInputEvent@@Base>
   3644c:	mov	r0, #16
   36450:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   36454:	mov	r0, r4
   36458:	ldr	r5, [r8, #4]
   3645c:	bl	f5c0 <strerror@plt>
   36460:	ldr	r1, [pc, #612]	; 366cc <checkKeyboardProperties@@Base+0x35c>
   36464:	mov	r2, r5
   36468:	add	r1, pc, r1
   3646c:	mov	r3, r0
   36470:	mov	r0, #7
   36474:	bl	1c634 <logMessage@@Base>
   36478:	ldr	r0, [r8, #4]
   3647c:	bl	f764 <close@plt>
   36480:	mov	r0, r8
   36484:	bl	f4f4 <free@plt>
   36488:	mov	r0, #0
   3648c:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   36490:	ldr	r1, [pc, #568]	; 366d0 <checkKeyboardProperties@@Base+0x360>
   36494:	mov	r0, #7
   36498:	ldr	r2, [r8, #4]
   3649c:	add	r1, pc, r1
   364a0:	bl	1c634 <logMessage@@Base>
   364a4:	b	36478 <checkKeyboardProperties@@Base+0x108>
   364a8:	ldr	r6, [r9, #12]
   364ac:	cmp	r6, #1
   364b0:	bls	364bc <checkKeyboardProperties@@Base+0x14c>
   364b4:	mov	r0, #16
   364b8:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   364bc:	ldr	r1, [pc, #528]	; 366d4 <checkKeyboardProperties@@Base+0x364>
   364c0:	ldrh	r2, [r9, #10]
   364c4:	add	r1, pc, r1
   364c8:	ldrb	r4, [r1, r2]
   364cc:	cmp	r4, #0
   364d0:	beq	3656c <checkKeyboardProperties@@Base+0x1fc>
   364d4:	ldr	lr, [r8]
   364d8:	mov	r0, r3
   364dc:	mov	r1, r4
   364e0:	mov	r2, r6
   364e4:	ldr	r3, [lr]
   364e8:	blx	r3
   364ec:	cmp	r0, #3
   364f0:	beq	364b4 <checkKeyboardProperties@@Base+0x144>
   364f4:	cmp	r6, #0
   364f8:	beq	365dc <checkKeyboardProperties@@Base+0x26c>
   364fc:	subs	r3, r0, #1
   36500:	rsbs	r2, r3, #0
   36504:	adcs	r2, r2, r3
   36508:	ldrb	r3, [r8, #116]	; 0x74
   3650c:	cmp	r0, #0
   36510:	bfi	r3, r2, #0, #1
   36514:	strb	r3, [r8, #116]	; 0x74
   36518:	beq	36584 <checkKeyboardProperties@@Base+0x214>
   3651c:	ldr	ip, [r8, #128]	; 0x80
   36520:	ldr	r3, [r8, #124]	; 0x7c
   36524:	cmp	ip, r3
   36528:	beq	36698 <checkKeyboardProperties@@Base+0x328>
   3652c:	cmp	ip, r3
   36530:	bcs	364b4 <checkKeyboardProperties@@Base+0x144>
   36534:	add	r3, ip, #1
   36538:	str	r3, [r8, #128]	; 0x80
   3653c:	ldm	r9, {r0, r1, r2, r3}
   36540:	mov	r4, #1
   36544:	ldr	r5, [r8, #120]	; 0x78
   36548:	add	ip, r5, ip, lsl #4
   3654c:	stm	ip, {r0, r1, r2, r3}
   36550:	ldrh	r3, [r9, #10]
   36554:	and	r1, r3, #7
   36558:	add	r3, r8, r3, lsr #3
   3655c:	ldrb	r2, [r3, #20]
   36560:	orr	r4, r2, r4, lsl r1
   36564:	strb	r4, [r3, #20]
   36568:	b	364b4 <checkKeyboardProperties@@Base+0x144>
   3656c:	ldr	r1, [pc, #356]	; 366d8 <checkKeyboardProperties@@Base+0x368>
   36570:	mov	r0, #6
   36574:	add	r1, pc, r1
   36578:	bl	1c634 <logMessage@@Base>
   3657c:	mov	r0, r4
   36580:	b	364f4 <checkKeyboardProperties@@Base+0x184>
   36584:	ldr	r3, [r8, #128]	; 0x80
   36588:	ldr	r4, [r8, #120]	; 0x78
   3658c:	cmp	r3, #0
   36590:	beq	365b8 <checkKeyboardProperties@@Base+0x248>
   36594:	ldrh	r0, [r4, #10]
   36598:	add	r4, r4, #16
   3659c:	ldr	r1, [r4, #-4]
   365a0:	bl	20c30 <writeKeyEvent@@Base>
   365a4:	ldr	r3, [r8, #128]	; 0x80
   365a8:	sub	r3, r3, #1
   365ac:	str	r3, [r8, #128]	; 0x80
   365b0:	cmp	r3, #0
   365b4:	bne	36594 <checkKeyboardProperties@@Base+0x224>
   365b8:	add	r0, r8, #20
   365bc:	mov	r1, #0
   365c0:	mov	r2, #96	; 0x60
   365c4:	bl	f6b0 <memset@plt>
   365c8:	ldrh	r0, [r9, #10]
   365cc:	ldr	r1, [r9, #12]
   365d0:	bl	20c30 <writeKeyEvent@@Base>
   365d4:	mov	r0, #16
   365d8:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   365dc:	ldrb	r3, [r8, #116]	; 0x74
   365e0:	tst	r3, #1
   365e4:	bfine	r3, r6, #0, #1
   365e8:	strbne	r3, [r8, #116]	; 0x74
   365ec:	bne	36584 <checkKeyboardProperties@@Base+0x214>
   365f0:	ldrh	r0, [r9, #10]
   365f4:	mov	fp, #0
   365f8:	and	r3, r0, #7
   365fc:	add	r2, r8, r0, lsr #3
   36600:	ldrb	sl, [r2, #20]
   36604:	mov	r2, #1
   36608:	lsr	r4, sl, r3
   3660c:	mov	r3, #0
   36610:	and	r4, r4, r2
   36614:	and	r5, r6, r3
   36618:	orrs	r3, r4, r5
   3661c:	beq	365cc <checkKeyboardProperties@@Base+0x25c>
   36620:	ldr	r5, [r8, #128]	; 0x80
   36624:	ldr	r4, [r8, #120]	; 0x78
   36628:	cmp	r5, #0
   3662c:	mov	r3, r4
   36630:	beq	3666c <checkKeyboardProperties@@Base+0x2fc>
   36634:	mov	ip, r4
   36638:	b	36640 <checkKeyboardProperties@@Base+0x2d0>
   3663c:	ldrh	r0, [r9, #10]
   36640:	ldrh	r3, [ip, #10]
   36644:	cmp	r3, r0
   36648:	beq	3665c <checkKeyboardProperties@@Base+0x2ec>
   3664c:	cmp	r4, ip
   36650:	ldmne	ip, {r0, r1, r2, r3}
   36654:	stmne	r4, {r0, r1, r2, r3}
   36658:	addne	r4, r4, #16
   3665c:	subs	r5, r5, #1
   36660:	add	ip, ip, #16
   36664:	bne	3663c <checkKeyboardProperties@@Base+0x2cc>
   36668:	ldr	r3, [r8, #120]	; 0x78
   3666c:	rsb	r3, r3, r4
   36670:	mov	r0, #1
   36674:	asr	r3, r3, #4
   36678:	str	r3, [r8, #128]	; 0x80
   3667c:	ldrh	r3, [r9, #10]
   36680:	and	r2, r3, #7
   36684:	add	r3, r8, r3, lsr #3
   36688:	ldrb	r1, [r3, #20]
   3668c:	bic	r2, r1, r0, lsl r2
   36690:	strb	r2, [r3, #20]
   36694:	b	364b4 <checkKeyboardProperties@@Base+0x144>
   36698:	cmp	ip, #0
   3669c:	ldr	r0, [r8, #120]	; 0x78
   366a0:	lslne	r4, ip, #1
   366a4:	moveq	r4, #1
   366a8:	lsl	r1, r4, #4
   366ac:	bl	f878 <realloc@plt>
   366b0:	ldr	ip, [r8, #128]	; 0x80
   366b4:	cmp	r0, #0
   366b8:	strne	r0, [r8, #120]	; 0x78
   366bc:	strne	r4, [r8, #124]	; 0x7c
   366c0:	ldreq	r3, [r8, #124]	; 0x7c
   366c4:	movne	r3, r4
   366c8:	b	3652c <checkKeyboardProperties@@Base+0x1bc>
   366cc:	andeq	r0, r2, r4, lsr pc
   366d0:	andeq	r0, r2, r0, lsr #30
   366d4:	andeq	r0, r2, r0, lsl #23
   366d8:	andeq	r0, r2, r4, ror #28
   366dc:	ldr	r3, [pc, #740]	; 369c8 <checkKeyboardProperties@@Base+0x658>
   366e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   366e4:	add	fp, sp, #32
   366e8:	ldr	r2, [pc, #732]	; 369cc <checkKeyboardProperties@@Base+0x65c>
   366ec:	sub	sp, sp, #156	; 0x9c
   366f0:	add	r3, pc, r3
   366f4:	mov	r7, r0
   366f8:	ldr	r2, [r3, r2]
   366fc:	ldr	r4, [r0, #16]
   36700:	ldr	r3, [r2]
   36704:	cmp	r4, #0
   36708:	str	r2, [fp, #-136]	; 0xffffff78
   3670c:	str	r3, [fp, #-40]	; 0xffffffd8
   36710:	bne	36904 <checkKeyboardProperties@@Base+0x594>
   36714:	ldrb	r1, [r0, #20]
   36718:	ands	r1, r1, #1
   3671c:	bne	36928 <checkKeyboardProperties@@Base+0x5b8>
   36720:	ldr	r9, [r0, #4]
   36724:	ldr	r2, [r0, #12]
   36728:	mov	r0, r9
   3672c:	bl	fcc8 <memchr@plt>
   36730:	cmp	r0, #0
   36734:	str	r0, [fp, #-164]	; 0xffffff5c
   36738:	beq	369b8 <checkKeyboardProperties@@Base+0x648>
   3673c:	mov	r0, r9
   36740:	mov	r1, #64	; 0x40
   36744:	bl	fdd0 <strchr@plt>
   36748:	cmp	r0, #0
   3674c:	beq	368dc <checkKeyboardProperties@@Base+0x56c>
   36750:	rsb	r4, r9, r0
   36754:	ldr	r1, [pc, #628]	; 369d0 <checkKeyboardProperties@@Base+0x660>
   36758:	add	sl, r0, #1
   3675c:	mov	r3, r9
   36760:	mov	r0, #7
   36764:	mov	r2, r4
   36768:	add	r1, pc, r1
   3676c:	str	sl, [sp]
   36770:	bl	1c634 <logMessage@@Base>
   36774:	ldr	r1, [pc, #600]	; 369d4 <checkKeyboardProperties@@Base+0x664>
   36778:	mov	r0, r9
   3677c:	mov	r2, r4
   36780:	add	r1, pc, r1
   36784:	bl	f548 <strncmp@plt>
   36788:	cmp	r0, #0
   3678c:	bne	368dc <checkKeyboardProperties@@Base+0x56c>
   36790:	ldr	r5, [pc, #576]	; 369d8 <checkKeyboardProperties@@Base+0x668>
   36794:	mov	r4, sl
   36798:	ldr	r6, [pc, #572]	; 369dc <checkKeyboardProperties@@Base+0x66c>
   3679c:	ldr	r0, [pc, #572]	; 369e0 <checkKeyboardProperties@@Base+0x670>
   367a0:	add	r5, pc, r5
   367a4:	ldr	r2, [pc, #568]	; 369e4 <checkKeyboardProperties@@Base+0x674>
   367a8:	add	r6, pc, r6
   367ac:	ldr	r3, [pc, #564]	; 369e8 <checkKeyboardProperties@@Base+0x678>
   367b0:	add	r0, pc, r0
   367b4:	add	r1, r0, #768	; 0x300
   367b8:	add	r2, pc, r2
   367bc:	add	r3, pc, r3
   367c0:	str	r0, [fp, #-152]	; 0xffffff68
   367c4:	str	r1, [fp, #-160]	; 0xffffff60
   367c8:	str	r2, [fp, #-156]	; 0xffffff64
   367cc:	str	r3, [fp, #-168]	; 0xffffff58
   367d0:	mov	r0, r4
   367d4:	mov	r1, r5
   367d8:	bl	f9f8 <strstr@plt>
   367dc:	cmp	r0, #0
   367e0:	beq	368dc <checkKeyboardProperties@@Base+0x56c>
   367e4:	add	r4, r0, #1
   367e8:	mov	r1, r6
   367ec:	sub	r2, fp, #128	; 0x80
   367f0:	sub	r3, fp, #124	; 0x7c
   367f4:	mov	r0, r4
   367f8:	bl	fcd4 <sscanf@plt>
   367fc:	cmp	r0, #2
   36800:	bne	367d0 <checkKeyboardProperties@@Base+0x460>
   36804:	mov	r0, sl
   36808:	str	sp, [fp, #-144]	; 0xffffff70
   3680c:	bl	fb54 <strlen@plt>
   36810:	mov	r2, #1
   36814:	add	r1, r0, #9
   36818:	add	r3, r0, #16
   3681c:	ldr	r0, [fp, #-152]	; 0xffffff68
   36820:	bic	r3, r3, #7
   36824:	sub	sp, sp, r3
   36828:	mvn	r3, #0
   3682c:	add	ip, r0, #776	; 0x308
   36830:	ldr	r0, [fp, #-156]	; 0xffffff64
   36834:	add	r8, sp, #16
   36838:	str	r0, [sp]
   3683c:	ldr	r0, [fp, #-160]	; 0xffffff60
   36840:	str	sl, [sp, #8]
   36844:	str	ip, [sp, #12]
   36848:	str	r0, [sp, #4]
   3684c:	mov	r0, r8
   36850:	bl	fb60 <__snprintf_chk@plt>
   36854:	mov	r0, r8
   36858:	mov	r1, #0
   3685c:	bl	f8c0 <open@plt>
   36860:	cmn	r0, #1
   36864:	mov	r8, r0
   36868:	beq	368c8 <checkKeyboardProperties@@Base+0x558>
   3686c:	sub	r1, fp, #120	; 0x78
   36870:	mov	r2, #16
   36874:	str	r1, [fp, #-140]	; 0xffffff74
   36878:	bl	f788 <read@plt>
   3687c:	cmp	r0, #0
   36880:	ble	368c0 <checkKeyboardProperties@@Base+0x550>
   36884:	mov	r0, #16
   36888:	bl	fb48 <malloc@plt>
   3688c:	cmp	r0, #0
   36890:	str	r0, [fp, #-148]	; 0xffffff6c
   36894:	beq	368c0 <checkKeyboardProperties@@Base+0x550>
   36898:	ldr	r3, [fp, #-148]	; 0xffffff6c
   3689c:	sub	r0, fp, #120	; 0x78
   368a0:	ldr	r1, [fp, #-168]	; 0xffffff58
   368a4:	add	r2, r3, #4
   368a8:	add	r3, r3, #8
   368ac:	bl	fcd4 <sscanf@plt>
   368b0:	cmp	r0, #2
   368b4:	beq	36940 <checkKeyboardProperties@@Base+0x5d0>
   368b8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   368bc:	bl	f4f4 <free@plt>
   368c0:	mov	r0, r8
   368c4:	bl	f764 <close@plt>
   368c8:	ldr	sp, [fp, #-144]	; 0xffffff70
   368cc:	b	367d0 <checkKeyboardProperties@@Base+0x460>
   368d0:	mov	r0, r8
   368d4:	bl	f764 <close@plt>
   368d8:	ldr	sp, [fp, #-144]	; 0xffffff70
   368dc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   368e0:	rsb	r0, r9, r3
   368e4:	add	r0, r0, #1
   368e8:	ldr	ip, [fp, #-136]	; 0xffffff78
   368ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   368f0:	ldr	r3, [ip]
   368f4:	cmp	r2, r3
   368f8:	bne	369c0 <checkKeyboardProperties@@Base+0x650>
   368fc:	sub	sp, fp, #32
   36900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36904:	mov	r0, r4
   36908:	bl	f5c0 <strerror@plt>
   3690c:	ldr	r1, [pc, #216]	; 369ec <checkKeyboardProperties@@Base+0x67c>
   36910:	add	r1, pc, r1
   36914:	mov	r2, r0
   36918:	mov	r0, #7
   3691c:	bl	1c634 <logMessage@@Base>
   36920:	mov	r0, #0
   36924:	b	368e8 <checkKeyboardProperties@@Base+0x578>
   36928:	ldr	r1, [pc, #192]	; 369f0 <checkKeyboardProperties@@Base+0x680>
   3692c:	mov	r0, #7
   36930:	add	r1, pc, r1
   36934:	bl	1c634 <logMessage@@Base>
   36938:	mov	r0, r4
   3693c:	b	368e8 <checkKeyboardProperties@@Base+0x578>
   36940:	ldr	ip, [pc, #172]	; 369f4 <checkKeyboardProperties@@Base+0x684>
   36944:	sub	r0, fp, #104	; 0x68
   36948:	str	r0, [fp, #-140]	; 0xffffff74
   3694c:	mov	r1, #64	; 0x40
   36950:	add	ip, pc, ip
   36954:	str	ip, [sp]
   36958:	ldr	ip, [fp, #-124]	; 0xffffff84
   3695c:	mov	r3, r1
   36960:	mov	r2, #1
   36964:	str	ip, [sp, #4]
   36968:	bl	fb60 <__snprintf_chk@plt>
   3696c:	ldr	r0, [fp, #-140]	; 0xffffff74
   36970:	bl	f740 <__strdup@plt>
   36974:	ldr	r1, [fp, #-148]	; 0xffffff6c
   36978:	cmp	r0, #0
   3697c:	str	r0, [r1]
   36980:	beq	368b8 <checkKeyboardProperties@@Base+0x548>
   36984:	ldr	r3, [r7]
   36988:	mov	r0, #1000	; 0x3e8
   3698c:	ldr	r2, [fp, #-148]	; 0xffffff6c
   36990:	ldr	r1, [pc, #96]	; 369f8 <checkKeyboardProperties@@Base+0x688>
   36994:	str	r3, [r2, #12]
   36998:	add	r1, pc, r1
   3699c:	bl	27b48 <asyncRelativeAlarm@@Base>
   369a0:	cmp	r0, #0
   369a4:	bne	368d0 <checkKeyboardProperties@@Base+0x560>
   369a8:	ldr	r2, [fp, #-148]	; 0xffffff6c
   369ac:	ldr	r0, [r2]
   369b0:	bl	f4f4 <free@plt>
   369b4:	b	368b8 <checkKeyboardProperties@@Base+0x548>
   369b8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   369bc:	b	368e8 <checkKeyboardProperties@@Base+0x578>
   369c0:	bl	f950 <__stack_chk_fail@plt>
   369c4:	bl	fd04 <_Unwind_Resume@plt>
   369c8:	andeq	ip, r3, r8, lsl #7
   369cc:			; <UNDEFINED> instruction: 0x000003b4
   369d0:			; <UNDEFINED> instruction: 0x00020cb8
   369d4:			; <UNDEFINED> instruction: 0x00020cb8
   369d8:	andeq	r0, r2, r4, lsl #28
   369dc:	muleq	r2, r4, ip
   369e0:	muleq	r2, r4, r8
   369e4:	muleq	r2, r4, ip
   369e8:	muleq	r2, r8, ip
   369ec:	andeq	r0, r2, r4, ror #21
   369f0:	ldrdeq	r0, [r2], -ip
   369f4:	andeq	r0, r2, ip, lsl #22
   369f8:	andeq	r0, r0, ip, lsr #5
   369fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   36a00:	mov	r6, r0
   36a04:	ldr	r4, [pc, #540]	; 36c28 <checkKeyboardProperties@@Base+0x8b8>
   36a08:	sub	sp, sp, #124	; 0x7c
   36a0c:	ldr	r3, [pc, #536]	; 36c2c <checkKeyboardProperties@@Base+0x8bc>
   36a10:	mov	r7, r1
   36a14:	add	r4, pc, r4
   36a18:	mov	r0, #3
   36a1c:	mov	r1, r6
   36a20:	add	r2, sp, #24
   36a24:	ldr	r5, [r4, r3]
   36a28:	ldr	r3, [r5]
   36a2c:	str	r3, [sp, #116]	; 0x74
   36a30:	bl	fb00 <__fxstat@plt>
   36a34:	cmn	r0, #1
   36a38:	beq	36b44 <checkKeyboardProperties@@Base+0x7d4>
   36a3c:	ldr	r3, [sp, #40]	; 0x28
   36a40:	and	r3, r3, #61440	; 0xf000
   36a44:	cmp	r3, #8192	; 0x2000
   36a48:	beq	36a68 <checkKeyboardProperties@@Base+0x6f8>
   36a4c:	mov	r0, #0
   36a50:	ldr	r2, [sp, #116]	; 0x74
   36a54:	ldr	r3, [r5]
   36a58:	cmp	r2, r3
   36a5c:	bne	36c24 <checkKeyboardProperties@@Base+0x8b4>
   36a60:	add	sp, sp, #124	; 0x7c
   36a64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   36a68:	mov	r0, #132	; 0x84
   36a6c:	bl	fb48 <malloc@plt>
   36a70:	subs	r8, r0, #0
   36a74:	beq	36a4c <checkKeyboardProperties@@Base+0x6dc>
   36a78:	mov	r1, #0
   36a7c:	mov	r2, #132	; 0x84
   36a80:	bl	f6b0 <memset@plt>
   36a84:	ldr	r2, [pc, #420]	; 36c30 <checkKeyboardProperties@@Base+0x8c0>
   36a88:	mov	r3, #0
   36a8c:	str	r7, [r8]
   36a90:	str	r6, [r8, #4]
   36a94:	add	r9, r8, #8
   36a98:	str	r3, [r8, #120]	; 0x78
   36a9c:	str	r3, [r8, #124]	; 0x7c
   36aa0:	str	r3, [r8, #128]	; 0x80
   36aa4:	ldr	r3, [r4, r2]
   36aa8:	ldm	r3, {r0, r1, r2}
   36aac:	stm	r9, {r0, r1, r2}
   36ab0:	movw	r1, #17666	; 0x4502
   36ab4:	mov	r0, r6
   36ab8:	movt	r1, #32776	; 0x8008
   36abc:	add	r2, sp, #16
   36ac0:	bl	f83c <ioctl@plt>
   36ac4:	cmn	r0, #1
   36ac8:	beq	36b8c <checkKeyboardProperties@@Base+0x81c>
   36acc:	ldrh	r1, [sp, #22]
   36ad0:	mov	r0, #7
   36ad4:	ldrh	lr, [sp, #18]
   36ad8:	mov	r2, r6
   36adc:	ldrh	ip, [sp, #20]
   36ae0:	str	r1, [sp, #8]
   36ae4:	ldr	r1, [pc, #328]	; 36c34 <checkKeyboardProperties@@Base+0x8c4>
   36ae8:	ldrh	r3, [sp, #16]
   36aec:	str	lr, [sp]
   36af0:	add	r1, pc, r1
   36af4:	str	ip, [sp, #4]
   36af8:	bl	1c634 <logMessage@@Base>
   36afc:	ldrh	r3, [sp, #16]
   36b00:	cmp	r3, #17
   36b04:	bls	36b70 <checkKeyboardProperties@@Base+0x800>
   36b08:	ldr	r3, [r8, #8]
   36b0c:	ldrh	r1, [sp, #18]
   36b10:	ldrh	r2, [sp, #20]
   36b14:	str	r1, [r8, #12]
   36b18:	str	r2, [r8, #16]
   36b1c:	cmp	r3, #0
   36b20:	beq	36b38 <checkKeyboardProperties@@Base+0x7c8>
   36b24:	mov	r0, r9
   36b28:	add	r1, r7, #4
   36b2c:	bl	36370 <checkKeyboardProperties@@Base>
   36b30:	cmp	r0, #0
   36b34:	bne	36bb8 <checkKeyboardProperties@@Base+0x848>
   36b38:	mov	r0, r8
   36b3c:	bl	f4f4 <free@plt>
   36b40:	b	36a4c <checkKeyboardProperties@@Base+0x6dc>
   36b44:	bl	fca4 <__errno_location@plt>
   36b48:	ldr	r0, [r0]
   36b4c:	bl	f5c0 <strerror@plt>
   36b50:	ldr	r1, [pc, #224]	; 36c38 <checkKeyboardProperties@@Base+0x8c8>
   36b54:	mov	r2, r6
   36b58:	add	r1, pc, r1
   36b5c:	mov	r3, r0
   36b60:	mov	r0, #7
   36b64:	bl	1c634 <logMessage@@Base>
   36b68:	mov	r0, #0
   36b6c:	b	36a50 <checkKeyboardProperties@@Base+0x6e0>
   36b70:	ldr	r2, [pc, #196]	; 36c3c <checkKeyboardProperties@@Base+0x8cc>
   36b74:	add	r2, pc, r2
   36b78:	add	r3, r2, r3, lsl #2
   36b7c:	ldr	r2, [r3, #784]	; 0x310
   36b80:	mov	r3, r2
   36b84:	str	r2, [r8, #8]
   36b88:	b	36b0c <checkKeyboardProperties@@Base+0x79c>
   36b8c:	bl	fca4 <__errno_location@plt>
   36b90:	ldr	r0, [r0]
   36b94:	bl	f5c0 <strerror@plt>
   36b98:	ldr	r1, [pc, #160]	; 36c40 <checkKeyboardProperties@@Base+0x8d0>
   36b9c:	mov	r2, r6
   36ba0:	add	r1, pc, r1
   36ba4:	mov	r3, r0
   36ba8:	mov	r0, #7
   36bac:	bl	1c634 <logMessage@@Base>
   36bb0:	ldr	r3, [r8, #8]
   36bb4:	b	36b1c <checkKeyboardProperties@@Base+0x7ac>
   36bb8:	mov	r0, r6
   36bbc:	mov	r1, #1
   36bc0:	mov	r2, #28
   36bc4:	movw	r3, #767	; 0x2ff
   36bc8:	bl	20acc <hasInputEvent@@Base>
   36bcc:	cmp	r0, #0
   36bd0:	beq	36b38 <checkKeyboardProperties@@Base+0x7c8>
   36bd4:	ldr	r2, [pc, #104]	; 36c44 <checkKeyboardProperties@@Base+0x8d4>
   36bd8:	mov	r0, r6
   36bdc:	mov	r1, #16
   36be0:	mov	r3, r8
   36be4:	add	r2, pc, r2
   36be8:	bl	279a4 <asyncRead@@Base>
   36bec:	cmp	r0, #0
   36bf0:	beq	36b38 <checkKeyboardProperties@@Base+0x7c8>
   36bf4:	mov	r2, #1
   36bf8:	movw	r1, #17808	; 0x4590
   36bfc:	mov	r0, r6
   36c00:	movt	r1, #16388	; 0x4004
   36c04:	bl	f83c <ioctl@plt>
   36c08:	ldr	r1, [pc, #56]	; 36c48 <checkKeyboardProperties@@Base+0x8d8>
   36c0c:	mov	r0, #7
   36c10:	mov	r2, r6
   36c14:	add	r1, pc, r1
   36c18:	bl	1c634 <logMessage@@Base>
   36c1c:	mov	r0, #1
   36c20:	b	36a50 <checkKeyboardProperties@@Base+0x6e0>
   36c24:	bl	f950 <__stack_chk_fail@plt>
   36c28:	andeq	ip, r3, r4, rrx
   36c2c:			; <UNDEFINED> instruction: 0x000003b4
   36c30:	andeq	r0, r0, r0, asr #9
   36c34:	andeq	r0, r2, ip, ror r9
   36c38:	andeq	r0, r2, r8, lsr #19
   36c3c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   36c40:	andeq	r0, r2, ip, lsl r9
   36c44:			; <UNDEFINED> instruction: 0xfffff818
   36c48:	ldrdeq	r0, [r2], -r4
   36c4c:	push	{r3, r4, r5, lr}
   36c50:	mov	r1, #0
   36c54:	mov	r4, r0
   36c58:	ldm	r0, {r0, r2, r3}
   36c5c:	bl	2050c <openCharacterDevice@@Base>
   36c60:	cmn	r0, #1
   36c64:	mov	r5, r0
   36c68:	beq	36cac <checkKeyboardProperties@@Base+0x93c>
   36c6c:	ldr	r1, [pc, #136]	; 36cfc <checkKeyboardProperties@@Base+0x98c>
   36c70:	mov	r0, #7
   36c74:	ldr	r2, [r4]
   36c78:	mov	r3, r5
   36c7c:	add	r1, pc, r1
   36c80:	bl	1c634 <logMessage@@Base>
   36c84:	mov	r0, r5
   36c88:	ldr	r1, [r4, #12]
   36c8c:	bl	369fc <checkKeyboardProperties@@Base+0x68c>
   36c90:	cmp	r0, #0
   36c94:	beq	36cd8 <checkKeyboardProperties@@Base+0x968>
   36c98:	ldr	r0, [r4]
   36c9c:	bl	f4f4 <free@plt>
   36ca0:	mov	r0, r4
   36ca4:	pop	{r3, r4, r5, lr}
   36ca8:	b	f4f4 <free@plt>
   36cac:	bl	fca4 <__errno_location@plt>
   36cb0:	ldr	r5, [r4]
   36cb4:	ldr	r0, [r0]
   36cb8:	bl	f5c0 <strerror@plt>
   36cbc:	ldr	r1, [pc, #60]	; 36d00 <checkKeyboardProperties@@Base+0x990>
   36cc0:	mov	r2, r5
   36cc4:	add	r1, pc, r1
   36cc8:	mov	r3, r0
   36ccc:	mov	r0, #7
   36cd0:	bl	1c634 <logMessage@@Base>
   36cd4:	b	36c98 <checkKeyboardProperties@@Base+0x928>
   36cd8:	mov	r0, r5
   36cdc:	bl	f764 <close@plt>
   36ce0:	ldr	r1, [pc, #28]	; 36d04 <checkKeyboardProperties@@Base+0x994>
   36ce4:	mov	r3, r5
   36ce8:	mov	r0, #7
   36cec:	add	r1, pc, r1
   36cf0:	ldr	r2, [r4]
   36cf4:	bl	1c634 <logMessage@@Base>
   36cf8:	b	36c98 <checkKeyboardProperties@@Base+0x928>
   36cfc:	andeq	r0, r2, r8, lsr #17
   36d00:	andeq	r0, r2, r0, lsr #17
   36d04:	andeq	r0, r2, r8, asr r8

00036d08 <startKeyboardMonitor@@Base>:
   36d08:	ldr	r3, [pc, #736]	; 36ff0 <startKeyboardMonitor@@Base+0x2e8>
   36d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36d10:	add	fp, sp, #32
   36d14:	ldr	r2, [pc, #728]	; 36ff4 <startKeyboardMonitor@@Base+0x2ec>
   36d18:	sub	sp, sp, #52	; 0x34
   36d1c:	add	r3, pc, r3
   36d20:	mov	r4, r0
   36d24:	mov	r5, r1
   36d28:	ldr	r2, [r3, r2]
   36d2c:	ldr	r3, [r2]
   36d30:	str	r2, [fp, #-60]	; 0xffffffc4
   36d34:	str	r3, [fp, #-40]	; 0xffffffd8
   36d38:	bl	2080c <getUinputDevice@@Base>
   36d3c:	cmn	r0, #1
   36d40:	beq	36eac <startKeyboardMonitor@@Base+0x1a4>
   36d44:	mov	r0, #16
   36d48:	bl	fb48 <malloc@plt>
   36d4c:	subs	r7, r0, #0
   36d50:	beq	36eac <startKeyboardMonitor@@Base+0x1a4>
   36d54:	add	r2, r7, #8
   36d58:	mov	r3, r7
   36d5c:	mov	r1, #0
   36d60:	str	r1, [r7, #4]
   36d64:	str	r1, [r2], #4
   36d68:	str	r1, [r2]
   36d6c:	str	r5, [r3], #4
   36d70:	ldm	r4, {r0, r1, r2}
   36d74:	ldr	r4, [pc, #636]	; 36ff8 <startKeyboardMonitor@@Base+0x2f0>
   36d78:	add	r4, pc, r4
   36d7c:	stm	r3, {r0, r1, r2}
   36d80:	mov	r0, #7
   36d84:	ldr	r1, [pc, #624]	; 36ffc <startKeyboardMonitor@@Base+0x2f4>
   36d88:	add	r1, pc, r1
   36d8c:	bl	1c634 <logMessage@@Base>
   36d90:	mov	r0, r4
   36d94:	bl	f6d4 <opendir@plt>
   36d98:	subs	r6, r0, #0
   36d9c:	beq	36fa8 <startKeyboardMonitor@@Base+0x2a0>
   36da0:	ldr	r9, [pc, #600]	; 37000 <startKeyboardMonitor@@Base+0x2f8>
   36da4:	ldr	r8, [pc, #600]	; 37004 <startKeyboardMonitor@@Base+0x2fc>
   36da8:	ldr	r1, [pc, #600]	; 37008 <startKeyboardMonitor@@Base+0x300>
   36dac:	add	r9, pc, r9
   36db0:	ldr	r2, [pc, #596]	; 3700c <startKeyboardMonitor@@Base+0x304>
   36db4:	add	r8, pc, r8
   36db8:	ldr	r3, [pc, #592]	; 37010 <startKeyboardMonitor@@Base+0x308>
   36dbc:	add	r1, pc, r1
   36dc0:	add	r2, pc, r2
   36dc4:	str	r1, [fp, #-68]	; 0xffffffbc
   36dc8:	add	r3, pc, r3
   36dcc:	str	r2, [fp, #-56]	; 0xffffffc8
   36dd0:	str	r3, [fp, #-64]	; 0xffffffc0
   36dd4:	b	36e20 <startKeyboardMonitor@@Base+0x118>
   36dd8:	mov	r0, #7
   36ddc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   36de0:	mov	r2, r4
   36de4:	mov	r3, r5
   36de8:	bl	1c634 <logMessage@@Base>
   36dec:	mov	r0, r5
   36df0:	mov	r1, r7
   36df4:	bl	369fc <checkKeyboardProperties@@Base+0x68c>
   36df8:	cmp	r0, #0
   36dfc:	bne	36e1c <startKeyboardMonitor@@Base+0x114>
   36e00:	mov	r0, r5
   36e04:	bl	f764 <close@plt>
   36e08:	mov	r2, r4
   36e0c:	mov	r3, r5
   36e10:	mov	r0, #7
   36e14:	ldr	r1, [fp, #-64]	; 0xffffffc0
   36e18:	bl	1c634 <logMessage@@Base>
   36e1c:	mov	sp, sl
   36e20:	mov	r0, r6
   36e24:	bl	f500 <readdir@plt>
   36e28:	cmp	r0, #0
   36e2c:	beq	36ecc <startKeyboardMonitor@@Base+0x1c4>
   36e30:	add	r5, r0, #11
   36e34:	mov	sl, sp
   36e38:	mov	r0, r5
   36e3c:	bl	fb54 <strlen@plt>
   36e40:	mov	r2, #1
   36e44:	add	r3, r0, #19
   36e48:	add	r1, r0, #12
   36e4c:	bic	r3, r3, #7
   36e50:	sub	sp, sp, r3
   36e54:	mvn	r3, #0
   36e58:	add	r4, sp, #16
   36e5c:	str	r5, [sp, #8]
   36e60:	str	r9, [sp]
   36e64:	mov	r0, r4
   36e68:	str	r8, [sp, #4]
   36e6c:	bl	fb60 <__snprintf_chk@plt>
   36e70:	mov	r0, r4
   36e74:	mov	r1, #0
   36e78:	bl	f8c0 <open@plt>
   36e7c:	cmn	r0, #1
   36e80:	mov	r5, r0
   36e84:	bne	36dd8 <startKeyboardMonitor@@Base+0xd0>
   36e88:	bl	fca4 <__errno_location@plt>
   36e8c:	ldr	r0, [r0]
   36e90:	bl	f5c0 <strerror@plt>
   36e94:	mov	r2, r4
   36e98:	ldr	r1, [fp, #-68]	; 0xffffffbc
   36e9c:	mov	r3, r0
   36ea0:	mov	r0, #7
   36ea4:	bl	1c634 <logMessage@@Base>
   36ea8:	b	36e1c <startKeyboardMonitor@@Base+0x114>
   36eac:	mov	r0, #0
   36eb0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   36eb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   36eb8:	ldr	r3, [r1]
   36ebc:	cmp	r2, r3
   36ec0:	bne	36fec <startKeyboardMonitor@@Base+0x2e4>
   36ec4:	sub	sp, fp, #32
   36ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36ecc:	mov	r0, r6
   36ed0:	bl	f590 <closedir@plt>
   36ed4:	ldr	r5, [pc, #312]	; 37014 <startKeyboardMonitor@@Base+0x30c>
   36ed8:	mov	r0, #7
   36edc:	ldr	r1, [pc, #308]	; 37018 <startKeyboardMonitor@@Base+0x310>
   36ee0:	add	r5, pc, r5
   36ee4:	add	r1, pc, r1
   36ee8:	bl	1c634 <logMessage@@Base>
   36eec:	ldr	r4, [r5]
   36ef0:	cmn	r4, #1
   36ef4:	beq	36f30 <startKeyboardMonitor@@Base+0x228>
   36ef8:	ldr	r2, [pc, #284]	; 3701c <startKeyboardMonitor@@Base+0x314>
   36efc:	mov	r3, r7
   36f00:	mov	r0, r4
   36f04:	movw	r1, #4104	; 0x1008
   36f08:	add	r2, pc, r2
   36f0c:	bl	279a4 <asyncRead@@Base>
   36f10:	cmp	r0, #0
   36f14:	beq	36f20 <startKeyboardMonitor@@Base+0x218>
   36f18:	mov	r0, #1
   36f1c:	b	36eb0 <startKeyboardMonitor@@Base+0x1a8>
   36f20:	mov	r0, r4
   36f24:	bl	f764 <close@plt>
   36f28:	mov	r0, #1
   36f2c:	b	36eb0 <startKeyboardMonitor@@Base+0x1a8>
   36f30:	mov	r3, #0
   36f34:	mov	r6, #16
   36f38:	str	r3, [fp, #-52]	; 0xffffffcc
   36f3c:	str	r3, [fp, #-48]	; 0xffffffd0
   36f40:	str	r3, [fp, #-44]	; 0xffffffd4
   36f44:	strh	r6, [fp, #-52]	; 0xffffffcc
   36f48:	bl	f458 <getpid@plt>
   36f4c:	mov	r1, #2
   36f50:	mov	r2, #15
   36f54:	str	r4, [fp, #-44]	; 0xffffffd4
   36f58:	str	r0, [fp, #-48]	; 0xffffffd0
   36f5c:	mov	r0, r6
   36f60:	bl	f980 <socket@plt>
   36f64:	cmn	r0, #1
   36f68:	mov	r4, r0
   36f6c:	str	r0, [r5]
   36f70:	beq	36fd0 <startKeyboardMonitor@@Base+0x2c8>
   36f74:	sub	r1, fp, #52	; 0x34
   36f78:	mov	r2, #12
   36f7c:	bl	f8cc <bind@plt>
   36f80:	cmn	r0, #1
   36f84:	mov	r6, r0
   36f88:	bne	36ef8 <startKeyboardMonitor@@Base+0x1f0>
   36f8c:	ldr	r0, [pc, #140]	; 37020 <startKeyboardMonitor@@Base+0x318>
   36f90:	add	r0, pc, r0
   36f94:	bl	1c6fc <logSystemError@@Base>
   36f98:	ldr	r0, [r5]
   36f9c:	bl	f764 <close@plt>
   36fa0:	str	r6, [r5]
   36fa4:	b	36f18 <startKeyboardMonitor@@Base+0x210>
   36fa8:	bl	fca4 <__errno_location@plt>
   36fac:	ldr	r0, [r0]
   36fb0:	bl	f5c0 <strerror@plt>
   36fb4:	ldr	r1, [pc, #104]	; 37024 <startKeyboardMonitor@@Base+0x31c>
   36fb8:	mov	r2, r4
   36fbc:	add	r1, pc, r1
   36fc0:	mov	r3, r0
   36fc4:	mov	r0, #7
   36fc8:	bl	1c634 <logMessage@@Base>
   36fcc:	b	36ed4 <startKeyboardMonitor@@Base+0x1cc>
   36fd0:	ldr	r0, [pc, #80]	; 37028 <startKeyboardMonitor@@Base+0x320>
   36fd4:	add	r0, pc, r0
   36fd8:	bl	1c6fc <logSystemError@@Base>
   36fdc:	ldr	r4, [r5]
   36fe0:	cmn	r4, #1
   36fe4:	beq	36f18 <startKeyboardMonitor@@Base+0x210>
   36fe8:	b	36ef8 <startKeyboardMonitor@@Base+0x1f0>
   36fec:	bl	f950 <__stack_chk_fail@plt>
   36ff0:	andeq	fp, r3, ip, asr sp
   36ff4:			; <UNDEFINED> instruction: 0x000003b4
   36ff8:	andeq	r0, r2, r8, lsr #16
   36ffc:	andeq	r0, r2, r0, lsl #16
   37000:	andeq	r0, r2, r0, lsl #16
   37004:	andeq	r0, r2, ip, ror #15
   37008:	andeq	r0, r2, r8, lsr #15
   3700c:	andeq	r0, r2, r4, ror #14
   37010:	andeq	r0, r2, ip, ror r7
   37014:	andeq	ip, r3, r4, lsl #4
   37018:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   3701c:			; <UNDEFINED> instruction: 0xfffff7cc
   37020:	andeq	r0, r2, r0, ror #12
   37024:	strdeq	r0, [r2], -r8
   37028:	strdeq	r3, [r2], -r0

0003702c <suppressTuneDeviceOpenErrors@@Base>:
   3702c:	ldr	r3, [pc, #12]	; 37040 <suppressTuneDeviceOpenErrors@@Base+0x14>
   37030:	mov	r2, #7
   37034:	add	r3, pc, r3
   37038:	str	r2, [r3]
   3703c:	bx	lr
   37040:	strheq	ip, [r3], -r4

00037044 <closeTuneDevice@@Base>:
   37044:	cmp	r0, #0
   37048:	push	{r4, lr}
   3704c:	beq	3708c <closeTuneDevice@@Base+0x48>
   37050:	ldr	r3, [pc, #92]	; 370b4 <closeTuneDevice@@Base+0x70>
   37054:	mov	r2, #0
   37058:	add	r3, pc, r3
   3705c:	str	r2, [r3]
   37060:	ldr	r4, [pc, #80]	; 370b8 <closeTuneDevice@@Base+0x74>
   37064:	add	r4, pc, r4
   37068:	ldr	r0, [r4, #4]
   3706c:	cmp	r0, #0
   37070:	popeq	{r4, pc}
   37074:	ldr	r3, [r4, #8]
   37078:	ldr	r3, [r3, #12]
   3707c:	blx	r3
   37080:	mov	r3, #0
   37084:	str	r3, [r4, #4]
   37088:	pop	{r4, pc}
   3708c:	ldr	r3, [pc, #40]	; 370bc <closeTuneDevice@@Base+0x78>
   37090:	add	r3, pc, r3
   37094:	ldr	r2, [r3]
   37098:	cmp	r2, #0
   3709c:	beq	37060 <closeTuneDevice@@Base+0x1c>
   370a0:	sub	r2, r2, #1
   370a4:	str	r2, [r3]
   370a8:	cmp	r2, #0
   370ac:	popne	{r4, pc}
   370b0:	b	37060 <closeTuneDevice@@Base+0x1c>
   370b4:	andeq	ip, r3, r4, lsl ip
   370b8:	andeq	ip, r3, r8, lsl #24
   370bc:	ldrdeq	ip, [r3], -ip	; <UNPREDICTABLE>

000370c0 <setTuneDevice@@Base>:
   370c0:	push	{r3, r4, r5, lr}
   370c4:	ldr	r3, [pc, #124]	; 37148 <setTuneDevice@@Base+0x88>
   370c8:	add	r3, pc, r3
   370cc:	cmp	r0, #3
   370d0:	addls	pc, pc, r0, lsl #2
   370d4:	b	37140 <setTuneDevice@@Base+0x80>
   370d8:	b	37118 <setTuneDevice@@Base+0x58>
   370dc:	b	370e8 <setTuneDevice@@Base+0x28>
   370e0:	b	37130 <setTuneDevice@@Base+0x70>
   370e4:	b	37124 <setTuneDevice@@Base+0x64>
   370e8:	ldr	r2, [pc, #92]	; 3714c <setTuneDevice@@Base+0x8c>
   370ec:	ldr	r4, [r3, r2]
   370f0:	ldr	r5, [pc, #88]	; 37150 <setTuneDevice@@Base+0x90>
   370f4:	mov	r0, #1
   370f8:	add	r5, pc, r5
   370fc:	ldr	r3, [r5, #8]
   37100:	cmp	r4, r3
   37104:	beq	3713c <setTuneDevice@@Base+0x7c>
   37108:	bl	37044 <closeTuneDevice@@Base>
   3710c:	str	r4, [r5, #8]
   37110:	mov	r0, #1
   37114:	pop	{r3, r4, r5, pc}
   37118:	ldr	r2, [pc, #52]	; 37154 <setTuneDevice@@Base+0x94>
   3711c:	ldr	r4, [r3, r2]
   37120:	b	370f0 <setTuneDevice@@Base+0x30>
   37124:	ldr	r2, [pc, #44]	; 37158 <setTuneDevice@@Base+0x98>
   37128:	ldr	r4, [r3, r2]
   3712c:	b	370f0 <setTuneDevice@@Base+0x30>
   37130:	ldr	r2, [pc, #36]	; 3715c <setTuneDevice@@Base+0x9c>
   37134:	ldr	r4, [r3, r2]
   37138:	b	370f0 <setTuneDevice@@Base+0x30>
   3713c:	pop	{r3, r4, r5, pc}
   37140:	mov	r0, #0
   37144:	pop	{r3, r4, r5, pc}
   37148:			; <UNDEFINED> instruction: 0x0003b9b0
   3714c:	andeq	r0, r0, ip, ror #8
   37150:	andeq	ip, r3, r4, ror fp
   37154:	andeq	r0, r0, ip, lsr r5
   37158:	andeq	r0, r0, r8, lsr #8
   3715c:	andeq	r0, r0, ip, lsl r5

00037160 <playTune@@Base>:
   37160:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   37164:	mov	r8, r0
   37168:	ldr	r9, [pc, #344]	; 372c8 <playTune@@Base+0x168>
   3716c:	ldr	r3, [pc, #344]	; 372cc <playTune@@Base+0x16c>
   37170:	add	r9, pc, r9
   37174:	ldr	r7, [r9, r3]
   37178:	ldrb	r3, [r7, #30]
   3717c:	cmp	r3, #0
   37180:	beq	37214 <playTune@@Base+0xb4>
   37184:	ldr	r4, [r0, #8]
   37188:	cmp	r4, #0
   3718c:	beq	37214 <playTune@@Base+0xb4>
   37190:	ldr	r6, [pc, #312]	; 372d0 <playTune@@Base+0x170>
   37194:	add	r6, pc, r6
   37198:	ldr	r5, [r6, #4]
   3719c:	cmp	r5, #0
   371a0:	beq	37290 <playTune@@Base+0x130>
   371a4:	ldr	r3, [pc, #296]	; 372d4 <playTune@@Base+0x174>
   371a8:	mov	r0, #2000	; 0x7d0
   371ac:	ldr	r6, [pc, #292]	; 372d8 <playTune@@Base+0x178>
   371b0:	ldr	r3, [r9, r3]
   371b4:	add	r6, pc, r6
   371b8:	ldr	r1, [r3]
   371bc:	bl	4e410 <formatAddress@@Base+0x464>
   371c0:	ldrb	r2, [r4, #1]
   371c4:	cmp	r2, #0
   371c8:	str	r0, [r6]
   371cc:	beq	37274 <playTune@@Base+0x114>
   371d0:	add	r4, r4, #2
   371d4:	b	371e8 <playTune@@Base+0x88>
   371d8:	ldrb	r2, [r4, #-1]
   371dc:	ldr	r5, [r6, #4]
   371e0:	cmp	r2, #0
   371e4:	beq	37274 <playTune@@Base+0x114>
   371e8:	ldr	r3, [r6, #8]
   371ec:	mov	r0, r5
   371f0:	ldrb	r1, [r4, #-2]
   371f4:	add	r4, r4, #2
   371f8:	ldr	r3, [r3, #4]
   371fc:	blx	r3
   37200:	cmp	r0, #0
   37204:	bne	371d8 <playTune@@Base+0x78>
   37208:	ldmib	r6, {r0, r3}
   3720c:	ldr	r3, [r3, #8]
   37210:	blx	r3
   37214:	ldrb	r3, [r7, #35]	; 0x23
   37218:	cmp	r3, #0
   3721c:	beq	3722c <playTune@@Base+0xcc>
   37220:	ldr	r1, [r8, #4]
   37224:	cmp	r1, #0
   37228:	bne	37264 <playTune@@Base+0x104>
   3722c:	ldrb	r3, [r7, #33]	; 0x21
   37230:	cmp	r3, #0
   37234:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   37238:	ldr	r1, [r8]
   3723c:	cmp	r1, #0
   37240:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   37244:	mov	r2, #5
   37248:	mov	r0, #0
   3724c:	bl	f9bc <dcgettext@plt>
   37250:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   37254:	mov	r1, r0
   37258:	mov	r0, #0
   3725c:	mov	r2, r0
   37260:	b	13558 <message@@Base>
   37264:	uxtb	r0, r1
   37268:	ubfx	r1, r1, #8, #8
   3726c:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   37270:	b	19e98 <showDotPattern@@Base>
   37274:	ldr	r3, [pc, #96]	; 372dc <playTune@@Base+0x17c>
   37278:	mov	r0, r5
   3727c:	add	r3, pc, r3
   37280:	ldr	r3, [r3, #8]
   37284:	ldr	r3, [r3, #8]
   37288:	blx	r3
   3728c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   37290:	ldr	r3, [r6, #8]
   37294:	cmp	r3, #0
   37298:	beq	37214 <playTune@@Base+0xb4>
   3729c:	ldr	r2, [pc, #60]	; 372e0 <playTune@@Base+0x180>
   372a0:	ldr	r3, [r3]
   372a4:	add	r2, pc, r2
   372a8:	ldr	r0, [r2]
   372ac:	blx	r3
   372b0:	cmp	r0, #0
   372b4:	mov	r5, r0
   372b8:	str	r0, [r6, #4]
   372bc:	beq	37214 <playTune@@Base+0xb4>
   372c0:	ldr	r4, [r8, #8]
   372c4:	b	371a4 <playTune@@Base+0x44>
   372c8:	andeq	fp, r3, r8, lsl #18
   372cc:	andeq	r0, r0, r0, asr #10
   372d0:	ldrdeq	ip, [r3], -r8
   372d4:	strdeq	r0, [r0], -r8
   372d8:			; <UNDEFINED> instruction: 0x0003cab8
   372dc:	strdeq	ip, [r3], -r0
   372e0:	andeq	fp, r3, r4, asr #28

000372e4 <getIntegerNoteFrequency@@Base>:
   372e4:	ldr	r2, [pc, #28]	; 37308 <getIntegerNoteFrequency@@Base+0x24>
   372e8:	movw	r3, #19923	; 0x4dd3
   372ec:	movt	r3, #4194	; 0x1062
   372f0:	add	r2, pc, r2
   372f4:	ldr	r2, [r2, r0, lsl #2]
   372f8:	smull	r1, r3, r3, r2
   372fc:	asr	r0, r2, #31
   37300:	rsb	r0, r0, r3, asr #6
   37304:	bx	lr
   37308:	andeq	r0, r2, r8, asr r4

0003730c <getRealNoteFrequency@@Base>:
   3730c:	ldr	r3, [pc, #28]	; 37330 <getRealNoteFrequency@@Base+0x24>
   37310:	vldr	s15, [pc, #20]	; 3732c <getRealNoteFrequency@@Base+0x20>
   37314:	add	r3, pc, r3
   37318:	ldr	r3, [r3, r0, lsl #2]
   3731c:	vmov	s0, r3
   37320:	vcvt.f32.s32	s0, s0
   37324:	vdiv.f32	s0, s0, s15
   37328:	bx	lr
   3732c:	ldrbtmi	r0, [sl], #-0
   37330:	andeq	r0, r2, r4, lsr r4
   37334:	mov	r0, #1
   37338:	bx	lr
   3733c:	push	{r4, lr}
   37340:	mov	r4, r0
   37344:	bl	1f96c <endBeep@@Base>
   37348:	mov	r0, r4
   3734c:	bl	f4f4 <free@plt>
   37350:	ldr	r1, [pc, #12]	; 37364 <getRealNoteFrequency@@Base+0x58>
   37354:	mov	r0, #7
   37358:	add	r1, pc, r1
   3735c:	pop	{r4, lr}
   37360:	b	1c634 <logMessage@@Base>
   37364:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   37368:	push	{r3, r4, r5, lr}
   3736c:	mov	r4, r1
   37370:	mov	r3, r1
   37374:	ldr	r1, [pc, #140]	; 37408 <getRealNoteFrequency@@Base+0xfc>
   37378:	mov	r0, #7
   3737c:	mov	r5, r2
   37380:	add	r1, pc, r1
   37384:	bl	1c634 <logMessage@@Base>
   37388:	cmp	r4, #0
   3738c:	beq	373f8 <getRealNoteFrequency@@Base+0xec>
   37390:	mov	r0, r4
   37394:	bl	372e4 <getIntegerNoteFrequency@@Base>
   37398:	lsl	r3, r5, #2
   3739c:	movw	r1, #65532	; 0xfffc
   373a0:	and	r1, r3, r1
   373a4:	uxth	r0, r0
   373a8:	bl	1f854 <asynchronousBeep@@Base>
   373ac:	cmp	r0, #0
   373b0:	bne	373e4 <getRealNoteFrequency@@Base+0xd8>
   373b4:	mov	r0, r4
   373b8:	bl	372e4 <getIntegerNoteFrequency@@Base>
   373bc:	uxth	r0, r0
   373c0:	bl	1f8c0 <startBeep@@Base>
   373c4:	cmp	r0, #0
   373c8:	bne	373e4 <getRealNoteFrequency@@Base+0xd8>
   373cc:	mov	r0, r4
   373d0:	bl	372e4 <getIntegerNoteFrequency@@Base>
   373d4:	uxth	r1, r5
   373d8:	pop	{r3, r4, r5, lr}
   373dc:	uxth	r0, r0
   373e0:	b	1f84c <synchronousBeep@@Base>
   373e4:	mov	r0, r5
   373e8:	bl	1ecd8 <accurateDelay@@Base>
   373ec:	bl	1f924 <stopBeep@@Base>
   373f0:	mov	r0, #1
   373f4:	pop	{r3, r4, r5, pc}
   373f8:	mov	r0, r5
   373fc:	bl	1ecd8 <accurateDelay@@Base>
   37400:	mov	r0, #1
   37404:	pop	{r3, r4, r5, pc}
   37408:	ldrdeq	r0, [r2], -r8
   3740c:	push	{r4, lr}
   37410:	mov	r0, #1
   37414:	bl	fb48 <malloc@plt>
   37418:	subs	r4, r0, #0
   3741c:	beq	37464 <getRealNoteFrequency@@Base+0x158>
   37420:	bl	204d8 <canBeep@@Base>
   37424:	cmp	r0, #0
   37428:	beq	37444 <getRealNoteFrequency@@Base+0x138>
   3742c:	ldr	r1, [pc, #56]	; 3746c <getRealNoteFrequency@@Base+0x160>
   37430:	mov	r0, #7
   37434:	add	r1, pc, r1
   37438:	bl	1c634 <logMessage@@Base>
   3743c:	mov	r0, r4
   37440:	pop	{r4, pc}
   37444:	mov	r0, r4
   37448:	bl	f4f4 <free@plt>
   3744c:	ldr	r1, [pc, #28]	; 37470 <getRealNoteFrequency@@Base+0x164>
   37450:	mov	r0, #7
   37454:	add	r1, pc, r1
   37458:	bl	1c634 <logMessage@@Base>
   3745c:	mov	r0, #0
   37460:	pop	{r4, pc}
   37464:	bl	1c740 <logMallocError@@Base>
   37468:	b	3744c <getRealNoteFrequency@@Base+0x140>
   3746c:	andeq	r0, r2, ip, lsr r5
   37470:	andeq	r0, r2, ip, lsr #10
   37474:	ldr	r2, [pc, #528]	; 3768c <getRealNoteFrequency@@Base+0x380>
   37478:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3747c:	mov	r4, r0
   37480:	ldr	r0, [pc, #520]	; 37690 <getRealNoteFrequency@@Base+0x384>
   37484:	add	r2, pc, r2
   37488:	sub	sp, sp, #12
   3748c:	ldr	r3, [r4, #16]
   37490:	ldr	sl, [r2, r0]
   37494:	ldr	r2, [sl]
   37498:	str	r2, [sp, #4]
   3749c:	cmp	r3, #7
   374a0:	addls	pc, pc, r3, lsl #2
   374a4:	b	37684 <getRealNoteFrequency@@Base+0x378>
   374a8:	b	375b8 <getRealNoteFrequency@@Base+0x2ac>
   374ac:	b	375bc <getRealNoteFrequency@@Base+0x2b0>
   374b0:	b	375a0 <getRealNoteFrequency@@Base+0x294>
   374b4:	b	375a4 <getRealNoteFrequency@@Base+0x298>
   374b8:	b	374c8 <getRealNoteFrequency@@Base+0x1bc>
   374bc:	b	374cc <getRealNoteFrequency@@Base+0x1c0>
   374c0:	b	375cc <getRealNoteFrequency@@Base+0x2c0>
   374c4:	b	37620 <getRealNoteFrequency@@Base+0x314>
   374c8:	add	r1, r1, #32768	; 0x8000
   374cc:	mov	r8, #2
   374d0:	strb	r1, [sp]
   374d4:	asr	r1, r1, #8
   374d8:	strb	r1, [sp, #1]
   374dc:	ldr	r3, [r4, #12]
   374e0:	cmp	r3, #0
   374e4:	movgt	r7, #0
   374e8:	movgt	r9, r7
   374ec:	ble	37584 <getRealNoteFrequency@@Base+0x278>
   374f0:	cmp	r8, #0
   374f4:	beq	37578 <getRealNoteFrequency@@Base+0x26c>
   374f8:	mov	r6, r8
   374fc:	mov	fp, sp
   37500:	b	3750c <getRealNoteFrequency@@Base+0x200>
   37504:	cmp	r6, #0
   37508:	beq	37574 <getRealNoteFrequency@@Base+0x268>
   3750c:	ldr	r3, [r4, #24]
   37510:	mov	r1, fp
   37514:	ldr	r5, [r4, #4]
   37518:	ldr	r0, [r4, #20]
   3751c:	rsb	r5, r3, r5
   37520:	cmp	r6, r5
   37524:	movcc	r5, r6
   37528:	add	r0, r0, r3
   3752c:	rsb	r6, r5, r6
   37530:	add	fp, fp, r5
   37534:	mov	r2, r5
   37538:	bl	fb24 <memcpy@plt>
   3753c:	ldr	r2, [r4, #24]
   37540:	ldr	r3, [r4, #4]
   37544:	add	r2, r5, r2
   37548:	str	r2, [r4, #24]
   3754c:	cmp	r2, r3
   37550:	bne	37504 <getRealNoteFrequency@@Base+0x1f8>
   37554:	ldr	r0, [r4]
   37558:	ldr	r1, [r4, #20]
   3755c:	bl	1f98c <writePcmData@@Base>
   37560:	cmp	r0, #0
   37564:	beq	37588 <getRealNoteFrequency@@Base+0x27c>
   37568:	cmp	r6, #0
   3756c:	str	r9, [r4, #24]
   37570:	bne	3750c <getRealNoteFrequency@@Base+0x200>
   37574:	ldr	r3, [r4, #12]
   37578:	add	r7, r7, #1
   3757c:	cmp	r3, r7
   37580:	bgt	374f0 <getRealNoteFrequency@@Base+0x1e4>
   37584:	mov	r0, #1
   37588:	ldr	r2, [sp, #4]
   3758c:	ldr	r3, [sl]
   37590:	cmp	r2, r3
   37594:	bne	37680 <getRealNoteFrequency@@Base+0x374>
   37598:	add	sp, sp, #12
   3759c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   375a0:	add	r1, r1, #32768	; 0x8000
   375a4:	strb	r1, [sp, #1]
   375a8:	mov	r8, #2
   375ac:	asr	r1, r1, #8
   375b0:	strb	r1, [sp]
   375b4:	b	374dc <getRealNoteFrequency@@Base+0x1d0>
   375b8:	add	r1, r1, #32768	; 0x8000
   375bc:	asr	r1, r1, #8
   375c0:	mov	r8, #1
   375c4:	strb	r1, [sp]
   375c8:	b	374dc <getRealNoteFrequency@@Base+0x1d0>
   375cc:	lsrs	r2, r1, #31
   375d0:	movw	r3, #32635	; 0x7f7b
   375d4:	rsbne	r1, r1, #0
   375d8:	cmp	r1, r3
   375dc:	mov	r3, #7
   375e0:	addls	r1, r1, #132	; 0x84
   375e4:	movwhi	r1, #32767	; 0x7fff
   375e8:	tst	r1, #16384	; 0x4000
   375ec:	bne	37668 <getRealNoteFrequency@@Base+0x35c>
   375f0:	subs	r3, r3, #1
   375f4:	lsl	r1, r1, #1
   375f8:	bne	375e8 <getRealNoteFrequency@@Base+0x2dc>
   375fc:	ubfx	r1, r1, #10, #4
   37600:	cmp	r2, #0
   37604:	orr	r3, r1, r3
   37608:	mov	r8, #1
   3760c:	uxtb	r3, r3
   37610:	orrne	r3, r3, #128	; 0x80
   37614:	mvn	r3, r3
   37618:	strb	r3, [sp]
   3761c:	b	374dc <getRealNoteFrequency@@Base+0x1d0>
   37620:	lsrs	r2, r1, #31
   37624:	mov	r3, #7
   37628:	rsbne	r1, r1, #0
   3762c:	tst	r1, #16384	; 0x4000
   37630:	bne	37674 <getRealNoteFrequency@@Base+0x368>
   37634:	subs	r3, r3, #1
   37638:	lsl	r1, r1, #1
   3763c:	bne	3762c <getRealNoteFrequency@@Base+0x320>
   37640:	asr	r1, r1, #1
   37644:	ubfx	r1, r1, #10, #4
   37648:	cmp	r2, #0
   3764c:	orr	r3, r1, r3
   37650:	mov	r8, #1
   37654:	uxtb	r3, r3
   37658:	orrne	r3, r3, #128	; 0x80
   3765c:	eor	r3, r3, #85	; 0x55
   37660:	strb	r3, [sp]
   37664:	b	374dc <getRealNoteFrequency@@Base+0x1d0>
   37668:	lsl	r3, r3, #4
   3766c:	uxtb	r3, r3
   37670:	b	375fc <getRealNoteFrequency@@Base+0x2f0>
   37674:	lsl	r3, r3, #4
   37678:	uxtb	r3, r3
   3767c:	b	37644 <getRealNoteFrequency@@Base+0x338>
   37680:	bl	f950 <__stack_chk_fail@plt>
   37684:	mov	r8, #0
   37688:	b	374dc <getRealNoteFrequency@@Base+0x1d0>
   3768c:	strdeq	fp, [r3], -r4
   37690:			; <UNDEFINED> instruction: 0x000003b4
   37694:	push	{r4, lr}
   37698:	mov	r4, r0
   3769c:	b	376ac <getRealNoteFrequency@@Base+0x3a0>
   376a0:	bl	37474 <getRealNoteFrequency@@Base+0x168>
   376a4:	cmp	r0, #0
   376a8:	popeq	{r4, pc}
   376ac:	ldr	r3, [r4, #24]
   376b0:	mov	r1, #0
   376b4:	mov	r0, r4
   376b8:	cmp	r3, r1
   376bc:	bne	376a0 <getRealNoteFrequency@@Base+0x394>
   376c0:	mov	r0, #1
   376c4:	pop	{r4, pc}
   376c8:	push	{r4, lr}
   376cc:	mov	r4, r0
   376d0:	bl	37694 <getRealNoteFrequency@@Base+0x388>
   376d4:	ldr	r0, [r4, #20]
   376d8:	bl	f4f4 <free@plt>
   376dc:	ldr	r0, [r4]
   376e0:	bl	1f970 <closePcmDevice@@Base>
   376e4:	mov	r0, r4
   376e8:	bl	f4f4 <free@plt>
   376ec:	ldr	r1, [pc, #12]	; 37700 <getRealNoteFrequency@@Base+0x3f4>
   376f0:	mov	r0, #7
   376f4:	add	r1, pc, r1
   376f8:	pop	{r4, lr}
   376fc:	b	1c634 <logMessage@@Base>
   37700:	andeq	r0, r2, r4, lsr #5
   37704:	b	37694 <getRealNoteFrequency@@Base+0x388>
   37708:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3770c:	movw	r3, #19923	; 0x4dd3
   37710:	ldr	r8, [r0, #8]
   37714:	movt	r3, #4194	; 0x1062
   37718:	subs	r4, r1, #0
   3771c:	ldr	r9, [pc, #364]	; 37890 <getRealNoteFrequency@@Base+0x584>
   37720:	sub	sp, sp, #8
   37724:	mov	r7, r0
   37728:	mul	r6, r8, r2
   3772c:	add	r9, pc, r9
   37730:	mov	r5, r2
   37734:	umull	r1, r6, r3, r6
   37738:	lsr	r6, r6, #6
   3773c:	beq	37824 <getRealNoteFrequency@@Base+0x518>
   37740:	mov	r0, r4
   37744:	bl	3730c <getRealNoteFrequency@@Base>
   37748:	vmov	s14, r8
   3774c:	ldr	r3, [pc, #320]	; 37894 <getRealNoteFrequency@@Base+0x588>
   37750:	movw	r2, #34079	; 0x851f
   37754:	vcvt.f32.s32	s15, s14
   37758:	vldr	s14, [pc, #300]	; 3788c <getRealNoteFrequency@@Base+0x580>
   3775c:	movt	r2, #20971	; 0x51eb
   37760:	mvn	r0, #-268435456	; 0xf0000000
   37764:	ldr	r3, [r9, r3]
   37768:	ldrb	r3, [r3, #17]
   3776c:	vdiv.f32	s15, s14, s15
   37770:	rsb	r3, r3, r3, lsl #15
   37774:	smull	r1, r2, r2, r3
   37778:	asr	r1, r3, #31
   3777c:	rsb	r1, r1, r2, asr #5
   37780:	vmul.f32	s0, s15, s0
   37784:	vcvt.s32.f32	s0, s0
   37788:	vmov	r8, s0
   3778c:	bl	4e410 <formatAddress@@Base+0x464>
   37790:	ldr	r1, [pc, #256]	; 37898 <getRealNoteFrequency@@Base+0x58c>
   37794:	mov	r2, r5
   37798:	str	r4, [sp]
   3779c:	mov	r3, r6
   377a0:	add	r1, pc, r1
   377a4:	mov	r9, r0
   377a8:	mov	r0, #7
   377ac:	bl	1c634 <logMessage@@Base>
   377b0:	cmp	r6, #0
   377b4:	rsbne	sl, r8, #0
   377b8:	movne	r5, #0
   377bc:	beq	37844 <getRealNoteFrequency@@Base+0x538>
   377c0:	movw	r4, #65534	; 0xfffe
   377c4:	movt	r4, #8191	; 0x1fff
   377c8:	rsb	r4, r5, r4
   377cc:	b	377d8 <getRealNoteFrequency@@Base+0x4cc>
   377d0:	cmn	r5, #-1073741819	; 0xc0000005
   377d4:	bgt	37870 <getRealNoteFrequency@@Base+0x564>
   377d8:	cmn	r4, #-268435455	; 0xf0000001
   377dc:	mov	r0, r4
   377e0:	movgt	r0, r5
   377e4:	bgt	377f0 <getRealNoteFrequency@@Base+0x4e4>
   377e8:	cmp	r4, #-268435455	; 0xf0000001
   377ec:	addlt	r0, r5, #-1073741820	; 0xc0000004
   377f0:	mov	r1, r9
   377f4:	add	r5, r5, r8
   377f8:	bl	4e410 <formatAddress@@Base+0x464>
   377fc:	sub	r6, r6, #1
   37800:	add	r4, r4, sl
   37804:	mov	r1, r0
   37808:	mov	r0, r7
   3780c:	bl	37474 <getRealNoteFrequency@@Base+0x168>
   37810:	cmp	r0, #0
   37814:	bne	377d0 <getRealNoteFrequency@@Base+0x4c4>
   37818:	mov	r0, #0
   3781c:	add	sp, sp, #8
   37820:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   37824:	ldr	r1, [pc, #112]	; 3789c <getRealNoteFrequency@@Base+0x590>
   37828:	mov	r0, #7
   3782c:	str	r4, [sp]
   37830:	mov	r3, r6
   37834:	add	r1, pc, r1
   37838:	bl	1c634 <logMessage@@Base>
   3783c:	cmp	r6, #0
   37840:	bne	37858 <getRealNoteFrequency@@Base+0x54c>
   37844:	mov	r0, #1
   37848:	add	sp, sp, #8
   3784c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   37850:	subs	r6, r6, #1
   37854:	beq	37844 <getRealNoteFrequency@@Base+0x538>
   37858:	mov	r0, r7
   3785c:	mov	r1, #0
   37860:	bl	37474 <getRealNoteFrequency@@Base+0x168>
   37864:	cmp	r0, #0
   37868:	bne	37850 <getRealNoteFrequency@@Base+0x544>
   3786c:	b	37818 <getRealNoteFrequency@@Base+0x50c>
   37870:	add	r3, r5, #-1073741820	; 0xc0000004
   37874:	cmn	r3, #-1073741819	; 0xc0000005
   37878:	addgt	r5, r5, #-2147483640	; 0x80000008
   3787c:	movle	r5, r3
   37880:	cmp	r6, #0
   37884:	bgt	377c0 <getRealNoteFrequency@@Base+0x4b4>
   37888:	b	37844 <getRealNoteFrequency@@Base+0x538>
   3788c:	cdpmi	0, 8, cr0, cr0, cr0, {0}
   37890:	andeq	fp, r3, ip, asr #6
   37894:	andeq	r0, r0, r0, asr #10
   37898:	andeq	r0, r2, r8, lsl #4
   3789c:	andeq	r0, r2, r4, ror r1
   378a0:	push	{r4, r5, r6, lr}
   378a4:	mov	r5, r0
   378a8:	sub	sp, sp, #8
   378ac:	mov	r0, #28
   378b0:	bl	fb48 <malloc@plt>
   378b4:	ldr	r3, [pc, #220]	; 37998 <getRealNoteFrequency@@Base+0x68c>
   378b8:	add	r3, pc, r3
   378bc:	subs	r4, r0, #0
   378c0:	beq	37990 <getRealNoteFrequency@@Base+0x684>
   378c4:	ldr	r2, [pc, #208]	; 3799c <getRealNoteFrequency@@Base+0x690>
   378c8:	mov	r0, r5
   378cc:	ldr	r3, [r3, r2]
   378d0:	ldr	r1, [r3]
   378d4:	bl	1fabc <openPcmDevice@@Base>
   378d8:	cmp	r0, #0
   378dc:	str	r0, [r4]
   378e0:	beq	37970 <getRealNoteFrequency@@Base+0x664>
   378e4:	bl	1f9a4 <getPcmBlockSize@@Base>
   378e8:	str	r0, [r4, #4]
   378ec:	ldr	r0, [r4]
   378f0:	bl	1fa2c <getPcmSampleRate@@Base>
   378f4:	str	r0, [r4, #8]
   378f8:	ldr	r0, [r4]
   378fc:	bl	1fa74 <getPcmChannelCount@@Base>
   37900:	str	r0, [r4, #12]
   37904:	ldr	r0, [r4]
   37908:	bl	1fbd8 <getPcmAmplitudeFormat@@Base>
   3790c:	ldr	r6, [r4, #4]
   37910:	mov	r3, #0
   37914:	str	r3, [r4, #24]
   37918:	str	r0, [r4, #16]
   3791c:	mov	r5, r0
   37920:	mov	r0, r6
   37924:	bl	fb48 <malloc@plt>
   37928:	cmp	r0, #0
   3792c:	str	r0, [r4, #20]
   37930:	beq	37964 <getRealNoteFrequency@@Base+0x658>
   37934:	ldr	ip, [r4, #12]
   37938:	mov	r0, #7
   3793c:	ldr	r1, [pc, #92]	; 379a0 <getRealNoteFrequency@@Base+0x694>
   37940:	mov	r2, r6
   37944:	ldr	r3, [r4, #8]
   37948:	add	r1, pc, r1
   3794c:	str	r5, [sp, #4]
   37950:	str	ip, [sp]
   37954:	bl	1c634 <logMessage@@Base>
   37958:	mov	r0, r4
   3795c:	add	sp, sp, #8
   37960:	pop	{r4, r5, r6, pc}
   37964:	bl	1c740 <logMallocError@@Base>
   37968:	ldr	r0, [r4]
   3796c:	bl	1f970 <closePcmDevice@@Base>
   37970:	mov	r0, r4
   37974:	bl	f4f4 <free@plt>
   37978:	ldr	r1, [pc, #36]	; 379a4 <getRealNoteFrequency@@Base+0x698>
   3797c:	mov	r0, #7
   37980:	add	r1, pc, r1
   37984:	bl	1c634 <logMessage@@Base>
   37988:	mov	r0, #0
   3798c:	b	3795c <getRealNoteFrequency@@Base+0x650>
   37990:	bl	1c740 <logMallocError@@Base>
   37994:	b	37978 <getRealNoteFrequency@@Base+0x66c>
   37998:	andeq	fp, r3, r0, asr #3
   3799c:	andeq	r0, r0, r4, asr #9
   379a0:	andeq	r0, r2, r0, lsl #1
   379a4:	andeq	r0, r2, r4, ror r0
   379a8:	push	{r4, lr}
   379ac:	mov	r4, r0
   379b0:	ldr	r0, [r0]
   379b4:	bl	1ffd8 <closeMidiDevice@@Base>
   379b8:	mov	r0, r4
   379bc:	bl	f4f4 <free@plt>
   379c0:	ldr	r1, [pc, #12]	; 379d4 <getRealNoteFrequency@@Base+0x6c8>
   379c4:	mov	r0, #7
   379c8:	add	r1, pc, r1
   379cc:	pop	{r4, lr}
   379d0:	b	1c634 <logMessage@@Base>
   379d4:	andeq	r0, r2, r4, asr #32
   379d8:	ldr	r0, [r0]
   379dc:	b	1fff4 <flushMidiDevice@@Base>
   379e0:	push	{r3, r4, r5, r6, r7, lr}
   379e4:	mov	r4, r0
   379e8:	ldr	r0, [r0]
   379ec:	mov	r6, r1
   379f0:	mov	r5, r2
   379f4:	ldr	r7, [pc, #136]	; 37a84 <getRealNoteFrequency@@Base+0x778>
   379f8:	bl	200b8 <beginMidiBlock@@Base>
   379fc:	cmp	r6, #0
   37a00:	mov	r0, #7
   37a04:	add	r7, pc, r7
   37a08:	bne	37a38 <getRealNoteFrequency@@Base+0x72c>
   37a0c:	ldr	r1, [pc, #116]	; 37a88 <getRealNoteFrequency@@Base+0x77c>
   37a10:	mov	r2, r5
   37a14:	add	r1, pc, r1
   37a18:	bl	1c634 <logMessage@@Base>
   37a1c:	mov	r1, r5
   37a20:	ldr	r0, [r4]
   37a24:	bl	2032c <insertMidiWait@@Base>
   37a28:	ldr	r0, [r4]
   37a2c:	bl	2013c <endMidiBlock@@Base>
   37a30:	mov	r0, #1
   37a34:	pop	{r3, r4, r5, r6, r7, pc}
   37a38:	ldr	r1, [pc, #76]	; 37a8c <getRealNoteFrequency@@Base+0x780>
   37a3c:	mov	r2, r5
   37a40:	mov	r3, r6
   37a44:	add	r1, pc, r1
   37a48:	bl	1c634 <logMessage@@Base>
   37a4c:	ldr	r3, [pc, #60]	; 37a90 <getRealNoteFrequency@@Base+0x784>
   37a50:	mov	r2, r6
   37a54:	ldrb	r1, [r4, #4]
   37a58:	ldr	r0, [r4]
   37a5c:	ldr	r3, [r7, r3]
   37a60:	ldrb	r3, [r3, #19]
   37a64:	bl	201d4 <startMidiNote@@Base>
   37a68:	mov	r1, r5
   37a6c:	ldr	r0, [r4]
   37a70:	bl	2032c <insertMidiWait@@Base>
   37a74:	ldr	r0, [r4]
   37a78:	ldrb	r1, [r4, #4]
   37a7c:	bl	20290 <stopMidiNote@@Base>
   37a80:	b	37a28 <getRealNoteFrequency@@Base+0x71c>
   37a84:	andeq	fp, r3, r4, ror r0
   37a88:	andeq	r0, r2, r8
   37a8c:	andeq	pc, r1, r4, lsl pc	; <UNPREDICTABLE>
   37a90:	andeq	r0, r0, r0, asr #10
   37a94:	push	{r4, r5, r6, lr}
   37a98:	mov	r6, r0
   37a9c:	mov	r0, #8
   37aa0:	ldr	r4, [pc, #132]	; 37b2c <getRealNoteFrequency@@Base+0x820>
   37aa4:	bl	fb48 <malloc@plt>
   37aa8:	add	r4, pc, r4
   37aac:	subs	r5, r0, #0
   37ab0:	beq	37b04 <getRealNoteFrequency@@Base+0x7f8>
   37ab4:	ldr	r3, [pc, #116]	; 37b30 <getRealNoteFrequency@@Base+0x824>
   37ab8:	mov	r0, r6
   37abc:	ldr	r3, [r4, r3]
   37ac0:	ldr	r1, [r3]
   37ac4:	bl	1fcc0 <openMidiDevice@@Base>
   37ac8:	cmp	r0, #0
   37acc:	str	r0, [r5]
   37ad0:	beq	37b20 <getRealNoteFrequency@@Base+0x814>
   37ad4:	ldr	r3, [pc, #88]	; 37b34 <getRealNoteFrequency@@Base+0x828>
   37ad8:	mov	r1, #0
   37adc:	str	r1, [r5, #4]
   37ae0:	ldr	r3, [r4, r3]
   37ae4:	ldrb	r2, [r3, #37]	; 0x25
   37ae8:	bl	2001c <setMidiInstrument@@Base>
   37aec:	ldr	r1, [pc, #68]	; 37b38 <getRealNoteFrequency@@Base+0x82c>
   37af0:	mov	r0, #7
   37af4:	add	r1, pc, r1
   37af8:	bl	1c634 <logMessage@@Base>
   37afc:	mov	r0, r5
   37b00:	pop	{r4, r5, r6, pc}
   37b04:	bl	1c740 <logMallocError@@Base>
   37b08:	ldr	r1, [pc, #44]	; 37b3c <getRealNoteFrequency@@Base+0x830>
   37b0c:	mov	r0, #7
   37b10:	add	r1, pc, r1
   37b14:	bl	1c634 <logMessage@@Base>
   37b18:	mov	r0, #0
   37b1c:	pop	{r4, r5, r6, pc}
   37b20:	mov	r0, r5
   37b24:	bl	f4f4 <free@plt>
   37b28:	b	37b08 <getRealNoteFrequency@@Base+0x7fc>
   37b2c:	ldrdeq	sl, [r3], -r0
   37b30:	andeq	r0, r0, ip, asr #8
   37b34:	andeq	r0, r0, r0, asr #10
   37b38:	andeq	pc, r1, r8, lsr pc	; <UNPREDICTABLE>
   37b3c:	andeq	pc, r1, ip, lsr #30

00037b40 <midiGetInstrumentType@@Base>:
   37b40:	ldr	r3, [pc, #12]	; 37b54 <midiGetInstrumentType@@Base+0x14>
   37b44:	lsr	r0, r0, #3
   37b48:	add	r3, pc, r3
   37b4c:	ldr	r0, [r3, r0, lsl #2]
   37b50:	bx	lr
   37b54:	andeq	r9, r3, r8, asr #12
   37b58:	mov	r0, #1
   37b5c:	bx	lr
   37b60:	push	{r3, lr}
   37b64:	bl	f4f4 <free@plt>
   37b68:	bl	37d0c <AL_disablePorts@@Base>
   37b6c:	ldr	r1, [pc, #12]	; 37b80 <midiGetInstrumentType@@Base+0x40>
   37b70:	mov	r0, #7
   37b74:	add	r1, pc, r1
   37b78:	pop	{r3, lr}
   37b7c:	b	1c634 <logMessage@@Base>
   37b80:	andeq	r0, r2, ip, asr #13
   37b84:	push	{r3, r4, r5, r6, r7, lr}
   37b88:	mov	r4, r1
   37b8c:	mov	r3, r1
   37b90:	ldr	r1, [pc, #96]	; 37bf8 <midiGetInstrumentType@@Base+0xb8>
   37b94:	mov	r7, r0
   37b98:	mov	r0, #7
   37b9c:	add	r1, pc, r1
   37ba0:	mov	r6, r2
   37ba4:	ldr	r5, [pc, #80]	; 37bfc <midiGetInstrumentType@@Base+0xbc>
   37ba8:	bl	1c634 <logMessage@@Base>
   37bac:	cmp	r4, #0
   37bb0:	add	r5, pc, r5
   37bb4:	bne	37bc8 <midiGetInstrumentType@@Base+0x88>
   37bb8:	mov	r0, r6
   37bbc:	bl	1ecd8 <accurateDelay@@Base>
   37bc0:	mov	r0, #1
   37bc4:	pop	{r3, r4, r5, r6, r7, pc}
   37bc8:	mov	r0, r4
   37bcc:	ldr	r4, [r7]
   37bd0:	bl	372e4 <getIntegerNoteFrequency@@Base>
   37bd4:	ldr	r3, [pc, #36]	; 37c00 <midiGetInstrumentType@@Base+0xc0>
   37bd8:	mov	r2, r6
   37bdc:	ldr	r3, [r5, r3]
   37be0:	ldrb	r3, [r3, #21]
   37be4:	mov	r1, r0
   37be8:	mov	r0, r4
   37bec:	bl	37f74 <AL_playTone@@Base>
   37bf0:	mov	r0, #1
   37bf4:	pop	{r3, r4, r5, r6, r7, pc}
   37bf8:			; <UNDEFINED> instruction: 0x0001fdbc
   37bfc:	andeq	sl, r3, r8, asr #29
   37c00:	andeq	r0, r0, r0, asr #10
   37c04:	push	{r3, r4, r5, lr}
   37c08:	mov	r4, r0
   37c0c:	mov	r0, #4
   37c10:	bl	fb48 <malloc@plt>
   37c14:	subs	r5, r0, #0
   37c18:	beq	37c80 <midiGetInstrumentType@@Base+0x140>
   37c1c:	mov	r0, r4
   37c20:	bl	37c90 <AL_enablePorts@@Base>
   37c24:	cmp	r0, #0
   37c28:	beq	37c60 <midiGetInstrumentType@@Base+0x120>
   37c2c:	mov	r0, r4
   37c30:	bl	37de8 <AL_testCard@@Base>
   37c34:	cmp	r0, #0
   37c38:	beq	37c5c <midiGetInstrumentType@@Base+0x11c>
   37c3c:	ldr	r1, [pc, #68]	; 37c88 <midiGetInstrumentType@@Base+0x148>
   37c40:	mov	r3, #0
   37c44:	mov	r0, #7
   37c48:	str	r3, [r5]
   37c4c:	add	r1, pc, r1
   37c50:	bl	1c634 <logMessage@@Base>
   37c54:	mov	r0, r5
   37c58:	pop	{r3, r4, r5, pc}
   37c5c:	bl	37d0c <AL_disablePorts@@Base>
   37c60:	mov	r0, r5
   37c64:	bl	f4f4 <free@plt>
   37c68:	ldr	r1, [pc, #28]	; 37c8c <midiGetInstrumentType@@Base+0x14c>
   37c6c:	mov	r0, #7
   37c70:	add	r1, pc, r1
   37c74:	bl	1c634 <logMessage@@Base>
   37c78:	mov	r0, #0
   37c7c:	pop	{r3, r4, r5, pc}
   37c80:	bl	1c740 <logMallocError@@Base>
   37c84:	b	37c68 <midiGetInstrumentType@@Base+0x128>
   37c88:	andeq	r0, r2, r0, lsl #12
   37c8c:	andeq	r0, r2, r8, ror #11

00037c90 <AL_enablePorts@@Base>:
   37c90:	push	{r4, r5, r6, lr}
   37c94:	mov	r6, r0
   37c98:	ldr	r5, [pc, #104]	; 37d08 <AL_enablePorts@@Base+0x78>
   37c9c:	add	r5, pc, r5
   37ca0:	ldr	r3, [r5]
   37ca4:	cmp	r3, #0
   37ca8:	movne	r4, #1
   37cac:	beq	37cb8 <AL_enablePorts@@Base+0x28>
   37cb0:	mov	r0, r4
   37cb4:	pop	{r4, r5, r6, pc}
   37cb8:	mov	r1, #904	; 0x388
   37cbc:	mov	r2, #1
   37cc0:	bl	203c8 <enablePorts@@Base>
   37cc4:	subs	r4, r0, #0
   37cc8:	beq	37cb0 <AL_enablePorts@@Base+0x20>
   37ccc:	mov	r0, r6
   37cd0:	movw	r1, #905	; 0x389
   37cd4:	mov	r2, #1
   37cd8:	bl	203c8 <enablePorts@@Base>
   37cdc:	subs	r4, r0, #0
   37ce0:	beq	37cf8 <AL_enablePorts@@Base+0x68>
   37ce4:	ldr	r3, [r5]
   37ce8:	mov	r4, #1
   37cec:	add	r3, r3, r4
   37cf0:	str	r3, [r5]
   37cf4:	b	37cb0 <AL_enablePorts@@Base+0x20>
   37cf8:	mov	r1, #1
   37cfc:	mov	r0, #904	; 0x388
   37d00:	bl	20438 <disablePorts@@Base>
   37d04:	b	37cb0 <AL_enablePorts@@Base+0x20>
   37d08:	ldrdeq	fp, [r3], -ip

00037d0c <AL_disablePorts@@Base>:
   37d0c:	ldr	r2, [pc, #52]	; 37d48 <AL_disablePorts@@Base+0x3c>
   37d10:	push	{r3, lr}
   37d14:	add	r2, pc, r2
   37d18:	ldr	r3, [r2]
   37d1c:	sub	r3, r3, #1
   37d20:	str	r3, [r2]
   37d24:	cmp	r3, #0
   37d28:	popne	{r3, pc}
   37d2c:	mov	r1, #1
   37d30:	mov	r0, #904	; 0x388
   37d34:	bl	20438 <disablePorts@@Base>
   37d38:	movw	r0, #905	; 0x389
   37d3c:	mov	r1, #1
   37d40:	pop	{r3, lr}
   37d44:	b	20438 <disablePorts@@Base>
   37d48:	andeq	fp, r3, r4, ror #30

00037d4c <AL_readStatus@@Base>:
   37d4c:	mov	r0, #904	; 0x388
   37d50:	b	2049c <readPort1@@Base>

00037d54 <AL_writeRegister@@Base>:
   37d54:	push	{r3, r4, r5, lr}
   37d58:	uxtb	r3, r0
   37d5c:	mov	r5, r1
   37d60:	mov	r0, #904	; 0x388
   37d64:	mov	r1, r3
   37d68:	mov	r4, #35	; 0x23
   37d6c:	bl	204a0 <writePort1@@Base>
   37d70:	bl	37d4c <AL_readStatus@@Base>
   37d74:	bl	37d4c <AL_readStatus@@Base>
   37d78:	bl	37d4c <AL_readStatus@@Base>
   37d7c:	bl	37d4c <AL_readStatus@@Base>
   37d80:	bl	37d4c <AL_readStatus@@Base>
   37d84:	bl	37d4c <AL_readStatus@@Base>
   37d88:	mov	r1, r5
   37d8c:	movw	r0, #905	; 0x389
   37d90:	bl	204a0 <writePort1@@Base>
   37d94:	bl	37d4c <AL_readStatus@@Base>
   37d98:	subs	r4, r4, #1
   37d9c:	bne	37d94 <AL_writeRegister@@Base+0x40>
   37da0:	pop	{r3, r4, r5, pc}
   37da4:	push	{r3, lr}
   37da8:	mov	r0, #4
   37dac:	mov	r1, #96	; 0x60
   37db0:	bl	37d54 <AL_writeRegister@@Base>
   37db4:	mov	r0, #4
   37db8:	mov	r1, #128	; 0x80
   37dbc:	pop	{r3, lr}
   37dc0:	b	37d54 <AL_writeRegister@@Base>

00037dc4 <AL_resetCard@@Base>:
   37dc4:	push	{r4, lr}
   37dc8:	mov	r4, #1
   37dcc:	mov	r0, r4
   37dd0:	mov	r1, #0
   37dd4:	add	r4, r4, #1
   37dd8:	bl	37d54 <AL_writeRegister@@Base>
   37ddc:	cmp	r4, #246	; 0xf6
   37de0:	bne	37dcc <AL_resetCard@@Base+0x8>
   37de4:	pop	{r4, pc}

00037de8 <AL_testCard@@Base>:
   37de8:	push	{r3, r4, r5, lr}
   37dec:	mov	r4, r0
   37df0:	bl	37da4 <AL_writeRegister@@Base+0x50>
   37df4:	bl	37d4c <AL_readStatus@@Base>
   37df8:	tst	r0, #224	; 0xe0
   37dfc:	bne	37e38 <AL_testCard@@Base+0x50>
   37e00:	mov	r0, #2
   37e04:	mov	r1, #255	; 0xff
   37e08:	bl	37d54 <AL_writeRegister@@Base>
   37e0c:	mov	r1, #33	; 0x21
   37e10:	mov	r0, #4
   37e14:	bl	37d54 <AL_writeRegister@@Base>
   37e18:	mov	r0, #80	; 0x50
   37e1c:	bl	fbb4 <usleep@plt>
   37e20:	bl	37d4c <AL_readStatus@@Base>
   37e24:	mov	r5, r0
   37e28:	bl	37da4 <AL_writeRegister@@Base+0x50>
   37e2c:	and	r0, r5, #224	; 0xe0
   37e30:	cmp	r0, #192	; 0xc0
   37e34:	beq	37e50 <AL_testCard@@Base+0x68>
   37e38:	ldr	r1, [pc, #24]	; 37e58 <AL_testCard@@Base+0x70>
   37e3c:	mov	r0, r4
   37e40:	add	r1, pc, r1
   37e44:	bl	1c634 <logMessage@@Base>
   37e48:	mov	r0, #0
   37e4c:	pop	{r3, r4, r5, pc}
   37e50:	mov	r0, #1
   37e54:	pop	{r3, r4, r5, pc}
   37e58:	andeq	r0, r2, ip, lsr r4

00037e5c <AL_evaluatePitch@@Base>:
   37e5c:	vmov	s10, r0
   37e60:	mov	ip, #1
   37e64:	push	{r4}		; (str r4, [sp, #-4]!)
   37e68:	vldr	d6, [pc, #80]	; 37ec0 <AL_evaluatePitch@@Base+0x64>
   37e6c:	vcvt.f32.s32	s11, s10
   37e70:	mov	r0, #21
   37e74:	b	37e7c <AL_evaluatePitch@@Base+0x20>
   37e78:	mov	r0, r3
   37e7c:	sub	r3, r0, #1
   37e80:	lsl	r4, ip, r3
   37e84:	vmov	s14, r4
   37e88:	vcvt.f32.s32	s14, s14
   37e8c:	vmul.f32	s14, s14, s11
   37e90:	vcvt.f64.f32	d7, s14
   37e94:	vdiv.f64	d7, d7, d6
   37e98:	vcvt.s32.f64	s10, d7
   37e9c:	vmov	r4, s10
   37ea0:	cmp	r4, #1024	; 0x400
   37ea4:	bge	37e78 <AL_evaluatePitch@@Base+0x1c>
   37ea8:	vstr	s10, [r2]
   37eac:	rsb	r0, r0, #21
   37eb0:	pop	{r4}		; (ldr r4, [sp], #4)
   37eb4:	str	r0, [r1]
   37eb8:	bx	lr
   37ebc:	nop	{0}
   37ec0:	andeq	r0, r0, r0
   37ec4:	rscmi	r6, r8, r0, lsl #20

00037ec8 <AL_initiateTone@@Base>:
   37ec8:	push	{r4, r5, r6, lr}
   37ecc:	mov	r4, r0
   37ed0:	mov	r6, r1
   37ed4:	add	r0, r0, #160	; 0xa0
   37ed8:	uxtb	r1, r2
   37edc:	mov	r5, r2
   37ee0:	bl	37d54 <AL_writeRegister@@Base>
   37ee4:	and	r1, r6, #7
   37ee8:	ubfx	r5, r5, #8, #2
   37eec:	add	r0, r4, #176	; 0xb0
   37ef0:	lsl	r1, r1, #2
   37ef4:	orr	r1, r1, #32
   37ef8:	orr	r1, r1, r5
   37efc:	pop	{r4, r5, r6, lr}
   37f00:	b	37d54 <AL_writeRegister@@Base>

00037f04 <AL_startTone@@Base>:
   37f04:	ldr	r3, [pc, #84]	; 37f60 <AL_startTone@@Base+0x5c>
   37f08:	ldr	ip, [pc, #84]	; 37f64 <AL_startTone@@Base+0x60>
   37f0c:	add	r3, pc, r3
   37f10:	push	{r4, r5, lr}
   37f14:	sub	sp, sp, #20
   37f18:	ldr	r4, [r3, ip]
   37f1c:	mov	r5, r0
   37f20:	add	r2, sp, #8
   37f24:	mov	r0, r1
   37f28:	add	r1, sp, #4
   37f2c:	ldr	r3, [r4]
   37f30:	str	r3, [sp, #12]
   37f34:	bl	37e5c <AL_evaluatePitch@@Base>
   37f38:	ldmib	sp, {r1, r2}
   37f3c:	mov	r0, r5
   37f40:	bl	37ec8 <AL_initiateTone@@Base>
   37f44:	ldr	r2, [sp, #12]
   37f48:	ldr	r3, [r4]
   37f4c:	cmp	r2, r3
   37f50:	bne	37f5c <AL_startTone@@Base+0x58>
   37f54:	add	sp, sp, #20
   37f58:	pop	{r4, r5, pc}
   37f5c:	bl	f950 <__stack_chk_fail@plt>
   37f60:	andeq	sl, r3, ip, ror #22
   37f64:			; <UNDEFINED> instruction: 0x000003b4

00037f68 <AL_stopTone@@Base>:
   37f68:	add	r0, r0, #176	; 0xb0
   37f6c:	mov	r1, #0
   37f70:	b	37d54 <AL_writeRegister@@Base>

00037f74 <AL_playTone@@Base>:
   37f74:	ldr	ip, [pc, #152]	; 38014 <AL_playTone@@Base+0xa0>
   37f78:	push	{r4, r5, r6, r7, r8, lr}
   37f7c:	mov	r5, r0
   37f80:	ldr	r0, [pc, #144]	; 38018 <AL_playTone@@Base+0xa4>
   37f84:	add	ip, pc, ip
   37f88:	mov	r6, r3
   37f8c:	mov	r7, r1
   37f90:	mov	r3, ip
   37f94:	mov	r1, #1
   37f98:	ldr	r3, [ip, r0]
   37f9c:	mov	r8, r2
   37fa0:	rsb	r6, r6, r6, lsl #6
   37fa4:	ldrb	r4, [r3, r5]
   37fa8:	add	r0, r4, #32
   37fac:	bl	37d54 <AL_writeRegister@@Base>
   37fb0:	add	r0, r4, #35	; 0x23
   37fb4:	mov	r1, #1
   37fb8:	bl	37d54 <AL_writeRegister@@Base>
   37fbc:	movw	r3, #34079	; 0x851f
   37fc0:	movt	r3, #20971	; 0x51eb
   37fc4:	add	r0, r4, #67	; 0x43
   37fc8:	umull	r2, r1, r3, r6
   37fcc:	lsr	r1, r1, #5
   37fd0:	rsb	r1, r1, #63	; 0x3f
   37fd4:	uxtb	r1, r1
   37fd8:	bl	37d54 <AL_writeRegister@@Base>
   37fdc:	add	r0, r4, #99	; 0x63
   37fe0:	mov	r1, #240	; 0xf0
   37fe4:	bl	37d54 <AL_writeRegister@@Base>
   37fe8:	add	r0, r4, #131	; 0x83
   37fec:	mov	r1, #255	; 0xff
   37ff0:	bl	37d54 <AL_writeRegister@@Base>
   37ff4:	mov	r0, r5
   37ff8:	mov	r1, r7
   37ffc:	bl	37f04 <AL_startTone@@Base>
   38000:	mov	r0, r8
   38004:	bl	1ecd8 <accurateDelay@@Base>
   38008:	mov	r0, r5
   3800c:	pop	{r4, r5, r6, r7, r8, lr}
   38010:	b	37f68 <AL_stopTone@@Base>
   38014:	strdeq	sl, [r3], -r4
   38018:			; <UNDEFINED> instruction: 0x000003b0
   3801c:	nop	{0}
   38020:	push	{r4, r5, r6, r7}
   38024:	mov	ip, #1
   38028:	ldr	r7, [pc, #128]	; 380b0 <AL_playTone@@Base+0x13c>
   3802c:	mov	r3, #0
   38030:	add	r7, pc, r7
   38034:	add	r2, r7, ip
   38038:	add	r7, r7, #9
   3803c:	ldrb	r5, [r0]
   38040:	lsl	r4, ip, #1
   38044:	add	r6, r3, #1
   38048:	add	r2, r2, #1
   3804c:	tst	ip, r5
   38050:	uxtb	ip, r4
   38054:	ldrbne	r4, [r2, #-2]
   38058:	strbne	r4, [r1, r3]
   3805c:	uxtbne	r3, r6
   38060:	cmp	r2, r7
   38064:	bne	3803c <AL_playTone@@Base+0xc8>
   38068:	add	r4, r3, #6
   3806c:	sub	r2, r0, #1
   38070:	uxtb	r4, r4
   38074:	add	r2, r2, #1
   38078:	ldrb	ip, [r2, #2]
   3807c:	add	r0, r3, #1
   38080:	cmp	ip, #0
   38084:	uxtb	r0, r0
   38088:	beq	380a4 <AL_playTone@@Base+0x130>
   3808c:	cmp	r0, r4
   38090:	strb	ip, [r1, r3]
   38094:	mov	r3, r0
   38098:	bne	38074 <AL_playTone@@Base+0x100>
   3809c:	pop	{r4, r5, r6, r7}
   380a0:	bx	lr
   380a4:	mov	r0, r3
   380a8:	pop	{r4, r5, r6, r7}
   380ac:	bx	lr
   380b0:	andeq	r0, r2, r4, ror r2
   380b4:	ldr	r3, [pc, #132]	; 38140 <AL_playTone@@Base+0x1cc>
   380b8:	push	{r4, lr}
   380bc:	add	r3, pc, r3
   380c0:	add	r0, r3, r0, lsl #2
   380c4:	sub	sp, sp, #8
   380c8:	ldrh	r4, [r0, #8]
   380cc:	cmp	r4, #0
   380d0:	beq	3810c <AL_playTone@@Base+0x198>
   380d4:	lsrs	r0, r4, #8
   380d8:	bne	38118 <AL_playTone@@Base+0x1a4>
   380dc:	cmp	r1, #0
   380e0:	uxtb	r0, r4
   380e4:	bne	380f4 <AL_playTone@@Base+0x180>
   380e8:	tst	r4, #128	; 0x80
   380ec:	bne	3810c <AL_playTone@@Base+0x198>
   380f0:	orr	r0, r0, #128	; 0x80
   380f4:	orr	r0, r0, #9216	; 0x2400
   380f8:	bl	3dbb8 <enqueueCommand@@Base>
   380fc:	adds	r0, r0, #0
   38100:	movne	r0, #1
   38104:	add	sp, sp, #8
   38108:	pop	{r4, pc}
   3810c:	mov	r0, #1
   38110:	add	sp, sp, #8
   38114:	pop	{r4, pc}
   38118:	orr	r0, r0, #9216	; 0x2400
   3811c:	str	r1, [sp, #4]
   38120:	bl	3dbb8 <enqueueCommand@@Base>
   38124:	ldr	r1, [sp, #4]
   38128:	cmp	r0, #0
   3812c:	beq	38110 <AL_playTone@@Base+0x19c>
   38130:	cmp	r1, #0
   38134:	uxtb	r0, r4
   38138:	beq	380e8 <AL_playTone@@Base+0x174>
   3813c:	b	380f4 <AL_playTone@@Base+0x180>
   38140:	andeq	r0, r2, r8, ror #3

00038144 <initializeHidKeyboardPacket@@Base>:
   38144:	mov	r3, r0
   38148:	mov	r2, #0
   3814c:	strb	r2, [r3], #1
   38150:	add	r3, r3, #1
   38154:	strb	r2, [r0, #1]
   38158:	strb	r2, [r3], #1
   3815c:	strb	r2, [r3], #1
   38160:	strb	r2, [r3], #1
   38164:	strb	r2, [r3], #1
   38168:	strb	r2, [r3], #1
   3816c:	strb	r2, [r3]
   38170:	bx	lr

00038174 <processHidKeyboardPacket@@Base>:
   38174:	ldr	r3, [pc, #480]	; 3835c <processHidKeyboardPacket@@Base+0x1e8>
   38178:	ldr	r2, [pc, #480]	; 38360 <processHidKeyboardPacket@@Base+0x1ec>
   3817c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38180:	add	r3, pc, r3
   38184:	sub	sp, sp, #108	; 0x6c
   38188:	add	ip, sp, #52	; 0x34
   3818c:	add	fp, sp, #36	; 0x24
   38190:	str	ip, [sp, #20]
   38194:	str	r1, [sp, #12]
   38198:	mov	r1, fp
   3819c:	str	r0, [sp, #24]
   381a0:	ldr	r2, [r3, r2]
   381a4:	ldr	r3, [r2]
   381a8:	str	r2, [sp, #28]
   381ac:	str	r3, [sp, #100]	; 0x64
   381b0:	bl	38020 <AL_playTone@@Base+0xac>
   381b4:	add	r1, sp, #52	; 0x34
   381b8:	mov	r9, r0
   381bc:	ldr	r0, [sp, #12]
   381c0:	bl	38020 <AL_playTone@@Base+0xac>
   381c4:	mov	r3, #0
   381c8:	str	r3, [sp, #68]	; 0x44
   381cc:	str	r3, [sp, #72]	; 0x48
   381d0:	str	r3, [sp, #76]	; 0x4c
   381d4:	str	r3, [sp, #80]	; 0x50
   381d8:	str	r3, [sp, #84]	; 0x54
   381dc:	str	r3, [sp, #88]	; 0x58
   381e0:	str	r3, [sp, #92]	; 0x5c
   381e4:	str	r3, [sp, #96]	; 0x60
   381e8:	cmp	r0, #0
   381ec:	str	r0, [sp, #16]
   381f0:	beq	38230 <processHidKeyboardPacket@@Base+0xbc>
   381f4:	ldr	r2, [sp, #16]
   381f8:	add	ip, sp, #52	; 0x34
   381fc:	add	r3, sp, #51	; 0x33
   38200:	mov	r8, #1
   38204:	sub	r0, r2, #1
   38208:	uxtab	r0, ip, r0
   3820c:	ldrb	r2, [r3, #1]!
   38210:	add	r1, sp, #104	; 0x68
   38214:	and	ip, r2, #7
   38218:	cmp	r3, r0
   3821c:	add	r2, r1, r2, lsr #3
   38220:	ldrb	r1, [r2, #-36]	; 0xffffffdc
   38224:	orr	r1, r1, r8, lsl ip
   38228:	strb	r1, [r2, #-36]	; 0xffffffdc
   3822c:	bne	3820c <processHidKeyboardPacket@@Base+0x98>
   38230:	cmp	r9, #0
   38234:	beq	382ac <processHidKeyboardPacket@@Base+0x138>
   38238:	sub	r9, r9, #1
   3823c:	add	r8, sp, #35	; 0x23
   38240:	mov	sl, #1
   38244:	strd	r6, [sp]
   38248:	uxtab	r9, fp, r9
   3824c:	b	38260 <processHidKeyboardPacket@@Base+0xec>
   38250:	bic	ip, ip, sl, lsl fp
   38254:	strb	ip, [r1, #-36]	; 0xffffffdc
   38258:	cmp	r8, r9
   3825c:	beq	382ac <processHidKeyboardPacket@@Base+0x138>
   38260:	ldrb	r0, [r8, #1]!
   38264:	add	r3, sp, #104	; 0x68
   38268:	mov	r5, #0
   3826c:	mov	r2, #1
   38270:	and	fp, r0, #7
   38274:	add	r1, r3, r0, lsr #3
   38278:	mov	r3, #0
   3827c:	and	r3, r3, r5
   38280:	ldrb	ip, [r1, #-36]	; 0xffffffdc
   38284:	lsr	r4, ip, fp
   38288:	and	r2, r2, r4
   3828c:	orrs	r6, r2, r3
   38290:	bne	38250 <processHidKeyboardPacket@@Base+0xdc>
   38294:	cmp	r0, #231	; 0xe7
   38298:	bhi	38258 <processHidKeyboardPacket@@Base+0xe4>
   3829c:	mov	r1, r5
   382a0:	bl	380b4 <AL_playTone@@Base+0x140>
   382a4:	cmp	r8, r9
   382a8:	bne	38260 <processHidKeyboardPacket@@Base+0xec>
   382ac:	ldr	r2, [sp, #16]
   382b0:	cmp	r2, #0
   382b4:	beq	38324 <processHidKeyboardPacket@@Base+0x1b0>
   382b8:	ldr	r2, [sp, #16]
   382bc:	add	r3, sp, #52	; 0x34
   382c0:	add	r8, sp, #51	; 0x33
   382c4:	mov	r4, #1
   382c8:	sub	r9, r2, #1
   382cc:	mov	r5, #0
   382d0:	uxtab	r9, r3, r9
   382d4:	b	382e0 <processHidKeyboardPacket@@Base+0x16c>
   382d8:	cmp	r8, r9
   382dc:	beq	38324 <processHidKeyboardPacket@@Base+0x1b0>
   382e0:	ldrb	r0, [r8, #1]!
   382e4:	add	r6, sp, #104	; 0x68
   382e8:	mov	r7, #0
   382ec:	and	r1, r0, #7
   382f0:	add	r3, r6, r0, lsr #3
   382f4:	ldrb	r2, [r3, #-36]	; 0xffffffdc
   382f8:	and	r3, r7, r5
   382fc:	lsr	r6, r2, r1
   38300:	and	r2, r6, r4
   38304:	orrs	ip, r2, r3
   38308:	beq	382d8 <processHidKeyboardPacket@@Base+0x164>
   3830c:	cmp	r0, #231	; 0xe7
   38310:	bhi	382d8 <processHidKeyboardPacket@@Base+0x164>
   38314:	mov	r1, #1
   38318:	bl	380b4 <AL_playTone@@Base+0x140>
   3831c:	cmp	r8, r9
   38320:	bne	382e0 <processHidKeyboardPacket@@Base+0x16c>
   38324:	ldr	ip, [sp, #12]
   38328:	ldr	r6, [sp, #24]
   3832c:	ldr	r2, [sp, #100]	; 0x64
   38330:	ldr	r3, [ip]
   38334:	ldr	r1, [ip, #4]
   38338:	ldr	ip, [sp, #28]
   3833c:	str	r3, [r6]
   38340:	str	r1, [r6, #4]
   38344:	ldr	r3, [ip]
   38348:	cmp	r2, r3
   3834c:	bne	38358 <processHidKeyboardPacket@@Base+0x1e4>
   38350:	add	sp, sp, #108	; 0x6c
   38354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38358:	bl	f950 <__stack_chk_fail@plt>
   3835c:	strdeq	sl, [r3], -r8
   38360:			; <UNDEFINED> instruction: 0x000003b4

00038364 <isDriverAvailable@@Base>:
   38364:	push	{r4, r5, r6, lr}
   38368:	mov	r5, r1
   3836c:	mov	r6, r0
   38370:	bl	fb54 <strlen@plt>
   38374:	mov	r4, r0
   38378:	mov	r0, r5
   3837c:	mov	r1, r6
   38380:	bl	f9f8 <strstr@plt>
   38384:	subs	r3, r0, #0
   38388:	add	r0, r3, r4
   3838c:	beq	383bc <isDriverAvailable@@Base+0x58>
   38390:	cmp	r3, r5
   38394:	beq	383a4 <isDriverAvailable@@Base+0x40>
   38398:	ldrb	r2, [r3, #-1]
   3839c:	cmp	r2, #32
   383a0:	bne	3837c <isDriverAvailable@@Base+0x18>
   383a4:	ldrb	r2, [r3, r4]
   383a8:	add	r0, r3, r4
   383ac:	tst	r2, #223	; 0xdf
   383b0:	bne	3837c <isDriverAvailable@@Base+0x18>
   383b4:	mov	r0, #1
   383b8:	pop	{r4, r5, r6, pc}
   383bc:	mov	r0, r3
   383c0:	pop	{r4, r5, r6, pc}

000383c4 <isDriverIncluded@@Base>:
   383c4:	push	{r3, r4, r5, lr}
   383c8:	mov	r5, r0
   383cc:	ldr	r3, [r1]
   383d0:	cmp	r3, #0
   383d4:	beq	3840c <isDriverIncluded@@Base+0x48>
   383d8:	add	r4, r1, #8
   383dc:	b	383ec <isDriverIncluded@@Base+0x28>
   383e0:	ldr	r3, [r4], #8
   383e4:	cmp	r3, #0
   383e8:	beq	3840c <isDriverIncluded@@Base+0x48>
   383ec:	ldr	r3, [r4, #-4]
   383f0:	mov	r0, r5
   383f4:	ldr	r1, [r3, #4]
   383f8:	bl	fc5c <strcmp@plt>
   383fc:	cmp	r0, #0
   38400:	bne	383e0 <isDriverIncluded@@Base+0x1c>
   38404:	mov	r0, #1
   38408:	pop	{r3, r4, r5, pc}
   3840c:	mov	r0, r3
   38410:	pop	{r3, r4, r5, pc}

00038414 <haveDriver@@Base>:
   38414:	cmp	r2, #0
   38418:	mov	ip, r0
   3841c:	beq	38434 <haveDriver@@Base+0x20>
   38420:	ldr	r3, [r2]
   38424:	cmp	r3, #0
   38428:	beq	38434 <haveDriver@@Base+0x20>
   3842c:	mov	r1, r2
   38430:	b	383c4 <isDriverIncluded@@Base>
   38434:	mov	r0, ip
   38438:	b	38364 <isDriverAvailable@@Base>

0003843c <getDefaultDriver@@Base>:
   3843c:	cmp	r0, #0
   38440:	bxeq	lr
   38444:	ldr	r3, [r0]
   38448:	cmp	r3, #0
   3844c:	beq	38470 <getDefaultDriver@@Base+0x34>
   38450:	ldr	r3, [r0, #8]
   38454:	cmp	r3, #0
   38458:	bne	38468 <getDefaultDriver@@Base+0x2c>
   3845c:	ldr	r3, [r0, #4]
   38460:	ldr	r0, [r3, #4]
   38464:	bx	lr
   38468:	mov	r0, #0
   3846c:	bx	lr
   38470:	mov	r0, r3
   38474:	bx	lr

00038478 <loadDriver@@Base>:
   38478:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3847c:	add	fp, sp, #32
   38480:	ldr	r6, [pc, #816]	; 387b8 <loadDriver@@Base+0x340>
   38484:	sub	sp, sp, #68	; 0x44
   38488:	mov	r5, r1
   3848c:	add	r6, pc, r6
   38490:	ldr	ip, [pc, #804]	; 387bc <loadDriver@@Base+0x344>
   38494:	subs	r4, r0, #0
   38498:	mov	r7, r2
   3849c:	mov	r1, r6
   384a0:	ldr	r6, [fp, #4]
   384a4:	mov	r2, #0
   384a8:	ldrb	r8, [fp, #8]
   384ac:	str	r6, [fp, #-60]	; 0xffffffc4
   384b0:	ldr	ip, [r1, ip]
   384b4:	ldr	r6, [fp, #12]
   384b8:	str	r2, [fp, #-48]	; 0xffffffd0
   384bc:	ldr	r1, [ip]
   384c0:	str	ip, [fp, #-56]	; 0xffffffc8
   384c4:	str	r2, [r5]
   384c8:	str	r1, [fp, #-40]	; 0xffffffd8
   384cc:	ldr	r2, [fp, #16]
   384d0:	ldr	ip, [fp, #20]
   384d4:	beq	384e4 <loadDriver@@Base+0x6c>
   384d8:	ldrb	r1, [r4]
   384dc:	cmp	r1, #0
   384e0:	bne	38518 <loadDriver@@Base+0xa0>
   384e4:	cmp	r3, #0
   384e8:	beq	38708 <loadDriver@@Base+0x290>
   384ec:	ldr	sl, [r3]
   384f0:	cmp	sl, #0
   384f4:	moveq	sl, r2
   384f8:	ldr	ip, [fp, #-56]	; 0xffffffc8
   384fc:	mov	r0, sl
   38500:	ldr	r2, [fp, #-40]	; 0xffffffd8
   38504:	ldr	r3, [ip]
   38508:	cmp	r2, r3
   3850c:	bne	387b4 <loadDriver@@Base+0x33c>
   38510:	sub	sp, fp, #32
   38514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38518:	ldr	r1, [ip, #4]
   3851c:	str	r2, [fp, #-72]	; 0xffffffb8
   38520:	str	r3, [fp, #-68]	; 0xffffffbc
   38524:	bl	fc5c <strcmp@plt>
   38528:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3852c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38530:	cmp	r0, #0
   38534:	beq	38708 <loadDriver@@Base+0x290>
   38538:	cmp	r3, #0
   3853c:	beq	38574 <loadDriver@@Base+0xfc>
   38540:	ldr	sl, [r3]
   38544:	cmp	sl, #0
   38548:	addne	r9, r3, #8
   3854c:	beq	38574 <loadDriver@@Base+0xfc>
   38550:	ldr	r3, [r9, #-4]
   38554:	mov	r0, r4
   38558:	ldr	r1, [r3, #4]
   3855c:	bl	fc5c <strcmp@plt>
   38560:	cmp	r0, #0
   38564:	beq	384f8 <loadDriver@@Base+0x80>
   38568:	ldr	sl, [r9], #8
   3856c:	cmp	sl, #0
   38570:	bne	38550 <loadDriver@@Base+0xd8>
   38574:	mov	r0, r4
   38578:	mov	r9, sp
   3857c:	bl	fb54 <strlen@plt>
   38580:	ldr	r3, [pc, #568]	; 387c0 <loadDriver@@Base+0x348>
   38584:	ldr	lr, [pc, #568]	; 387c4 <loadDriver@@Base+0x34c>
   38588:	ldr	ip, [pc, #568]	; 387c8 <loadDriver@@Base+0x350>
   3858c:	add	r3, pc, r3
   38590:	add	lr, pc, lr
   38594:	add	ip, pc, ip
   38598:	add	r2, r0, #21
   3859c:	add	r1, r0, #14
   385a0:	bic	r2, r2, #7
   385a4:	sub	sp, sp, r2
   385a8:	mov	r2, #1
   385ac:	add	sl, sp, #24
   385b0:	str	r3, [sp]
   385b4:	mvn	r3, #0
   385b8:	mov	r0, sl
   385bc:	str	lr, [sp, #4]
   385c0:	str	ip, [sp, #16]
   385c4:	str	r8, [sp, #8]
   385c8:	str	r4, [sp, #12]
   385cc:	bl	fb60 <__snprintf_chk@plt>
   385d0:	mov	r1, sl
   385d4:	mov	r0, r7
   385d8:	bl	1c9c8 <makePath@@Base>
   385dc:	subs	sl, r0, #0
   385e0:	beq	38748 <loadDriver@@Base+0x2d0>
   385e4:	bl	1f7b8 <loadSharedObject@@Base>
   385e8:	subs	r7, r0, #0
   385ec:	beq	38754 <loadDriver@@Base+0x2dc>
   385f0:	mov	r0, r6
   385f4:	str	sp, [fp, #-64]	; 0xffffffc0
   385f8:	bl	fb54 <strlen@plt>
   385fc:	mov	r8, r0
   38600:	mov	r0, r4
   38604:	bl	fb54 <strlen@plt>
   38608:	ldr	ip, [pc, #444]	; 387cc <loadDriver@@Base+0x354>
   3860c:	mov	r2, #1
   38610:	mvn	r3, #0
   38614:	add	ip, pc, ip
   38618:	add	r0, r8, r0
   3861c:	add	lr, r0, #16
   38620:	add	r1, r0, #9
   38624:	bic	r0, lr, #7
   38628:	sub	sp, sp, r0
   3862c:	add	r8, sp, #24
   38630:	str	ip, [sp]
   38634:	str	r6, [sp, #4]
   38638:	mov	r0, r8
   3863c:	str	r4, [sp, #8]
   38640:	bl	fb60 <__snprintf_chk@plt>
   38644:	mov	r0, r7
   38648:	mov	r1, r8
   3864c:	sub	r2, fp, #48	; 0x30
   38650:	bl	1f7f8 <findSharedSymbol@@Base>
   38654:	subs	ip, r0, #0
   38658:	beq	38710 <loadDriver@@Base+0x298>
   3865c:	sub	ip, fp, #36	; 0x24
   38660:	str	r7, [r5]
   38664:	mov	r0, r6
   38668:	mov	r3, #0
   3866c:	str	r3, [ip, #-8]!
   38670:	mov	r8, sp
   38674:	str	ip, [fp, #-68]	; 0xffffffbc
   38678:	bl	fb54 <strlen@plt>
   3867c:	mov	r5, r0
   38680:	mov	r0, r4
   38684:	bl	fb54 <strlen@plt>
   38688:	ldr	lr, [pc, #320]	; 387d0 <loadDriver@@Base+0x358>
   3868c:	mov	r2, #1
   38690:	mvn	r3, #0
   38694:	add	lr, pc, lr
   38698:	add	r1, r5, r0
   3869c:	add	r0, r1, #17
   386a0:	add	r1, r1, #10
   386a4:	bic	r0, r0, #7
   386a8:	sub	sp, sp, r0
   386ac:	add	r5, sp, #24
   386b0:	str	lr, [sp]
   386b4:	str	r6, [sp, #4]
   386b8:	mov	r0, r5
   386bc:	str	r4, [sp, #8]
   386c0:	bl	fb60 <__snprintf_chk@plt>
   386c4:	ldr	ip, [fp, #-68]	; 0xffffffbc
   386c8:	mov	r0, r7
   386cc:	mov	r1, r5
   386d0:	mov	r2, ip
   386d4:	bl	1f7f8 <findSharedSymbol@@Base>
   386d8:	cmp	r0, #0
   386dc:	beq	38770 <loadDriver@@Base+0x2f8>
   386e0:	ldr	r5, [pc, #236]	; 387d4 <loadDriver@@Base+0x35c>
   386e4:	ldr	r6, [fp, #-44]	; 0xffffffd4
   386e8:	add	r5, pc, r5
   386ec:	mov	r0, r6
   386f0:	mov	r1, r5
   386f4:	bl	fc5c <strcmp@plt>
   386f8:	cmp	r0, #0
   386fc:	bne	38790 <loadDriver@@Base+0x318>
   38700:	mov	sp, r8
   38704:	b	3873c <loadDriver@@Base+0x2c4>
   38708:	mov	sl, r2
   3870c:	b	384f8 <loadDriver@@Base+0x80>
   38710:	ldr	r1, [pc, #192]	; 387d8 <loadDriver@@Base+0x360>
   38714:	mov	r3, r8
   38718:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3871c:	mov	r0, #3
   38720:	add	r1, pc, r1
   38724:	str	ip, [fp, #-68]	; 0xffffffbc
   38728:	bl	1c634 <logMessage@@Base>
   3872c:	mov	r0, r7
   38730:	bl	1f7f4 <unloadSharedObject@@Base>
   38734:	ldr	ip, [fp, #-68]	; 0xffffffbc
   38738:	str	ip, [fp, #-48]	; 0xffffffd0
   3873c:	ldr	sp, [fp, #-64]	; 0xffffffc0
   38740:	mov	r0, sl
   38744:	bl	f4f4 <free@plt>
   38748:	mov	sp, r9
   3874c:	ldr	sl, [fp, #-48]	; 0xffffffd0
   38750:	b	384f8 <loadDriver@@Base+0x80>
   38754:	ldr	r1, [pc, #128]	; 387dc <loadDriver@@Base+0x364>
   38758:	mov	r0, #3
   3875c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   38760:	mov	r3, sl
   38764:	add	r1, pc, r1
   38768:	bl	1c634 <logMessage@@Base>
   3876c:	b	38740 <loadDriver@@Base+0x2c8>
   38770:	ldr	r1, [pc, #104]	; 387e0 <loadDriver@@Base+0x368>
   38774:	mov	r2, r4
   38778:	str	r5, [sp]
   3877c:	mov	r0, #4
   38780:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38784:	add	r1, pc, r1
   38788:	bl	1c634 <logMessage@@Base>
   3878c:	b	38700 <loadDriver@@Base+0x288>
   38790:	ldr	r1, [pc, #76]	; 387e4 <loadDriver@@Base+0x36c>
   38794:	mov	r2, r4
   38798:	str	r6, [sp]
   3879c:	mov	r0, #4
   387a0:	str	r5, [sp, #4]
   387a4:	add	r1, pc, r1
   387a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   387ac:	bl	1c634 <logMessage@@Base>
   387b0:	b	38700 <loadDriver@@Base+0x288>
   387b4:	bl	f950 <__stack_chk_fail@plt>
   387b8:	andeq	sl, r3, ip, ror #11
   387bc:			; <UNDEFINED> instruction: 0x000003b4
   387c0:	andeq	r0, r2, r0, asr #1
   387c4:	andeq	r0, r2, r8, asr #1
   387c8:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   387cc:	andeq	r0, r2, r4, asr r0
   387d0:	andeq	pc, r1, r4, ror #31
   387d4:	andeq	pc, r1, r0, lsr #31
   387d8:	ldrdeq	pc, [r1], -ip
   387dc:			; <UNDEFINED> instruction: 0x0001ffbc
   387e0:	andeq	pc, r1, ip, asr #30
   387e4:	strdeq	pc, [r1], -r0

000387e8 <identifyDriver@@Base>:
   387e8:	ldr	ip, [pc, #348]	; 3894c <identifyDriver@@Base+0x164>
   387ec:	ldr	r3, [pc, #348]	; 38950 <identifyDriver@@Base+0x168>
   387f0:	add	ip, pc, ip
   387f4:	push	{r4, r5, r6, r7, r8, r9, lr}
   387f8:	sub	sp, sp, #284	; 0x11c
   387fc:	ldr	r6, [ip, r3]
   38800:	add	r4, sp, #20
   38804:	ldr	lr, [r1]
   38808:	mov	r5, r1
   3880c:	str	r0, [sp, #8]
   38810:	mov	r1, #256	; 0x100
   38814:	ldr	r8, [pc, #312]	; 38954 <identifyDriver@@Base+0x16c>
   38818:	mov	r3, r1
   3881c:	str	lr, [sp, #4]
   38820:	mov	r9, r2
   38824:	ldr	lr, [r6]
   38828:	add	r8, pc, r8
   3882c:	mov	r2, #1
   38830:	str	r8, [sp]
   38834:	mov	r0, r4
   38838:	add	r7, sp, #276	; 0x114
   3883c:	str	lr, [sp, #276]	; 0x114
   38840:	bl	fb60 <__snprintf_chk@plt>
   38844:	ldr	r3, [r5, #12]
   38848:	add	r0, r4, r0
   3884c:	cmp	r0, r7
   38850:	movcc	r8, r0
   38854:	movcs	r8, r7
   38858:	cmp	r3, #0
   3885c:	beq	3886c <identifyDriver@@Base+0x84>
   38860:	ldrb	r2, [r3]
   38864:	cmp	r2, #0
   38868:	bne	38910 <identifyDriver@@Base+0x128>
   3886c:	cmp	r9, #0
   38870:	bne	388a0 <identifyDriver@@Base+0xb8>
   38874:	ldr	r1, [pc, #220]	; 38958 <identifyDriver@@Base+0x170>
   38878:	mov	r2, r4
   3887c:	mov	r0, #5
   38880:	add	r1, pc, r1
   38884:	bl	1c634 <logMessage@@Base>
   38888:	ldr	r2, [sp, #276]	; 0x114
   3888c:	ldr	r3, [r6]
   38890:	cmp	r2, r3
   38894:	bne	38948 <identifyDriver@@Base+0x160>
   38898:	add	sp, sp, #284	; 0x11c
   3889c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   388a0:	ldr	ip, [pc, #180]	; 3895c <identifyDriver@@Base+0x174>
   388a4:	mov	r2, #1
   388a8:	rsb	r1, r8, r7
   388ac:	mvn	r3, #0
   388b0:	add	ip, pc, ip
   388b4:	str	ip, [sp]
   388b8:	ldr	ip, [r5, #20]
   388bc:	mov	r0, r8
   388c0:	str	ip, [sp, #4]
   388c4:	ldr	ip, [r5, #24]
   388c8:	str	ip, [sp, #8]
   388cc:	bl	fb60 <__snprintf_chk@plt>
   388d0:	ldr	r1, [pc, #136]	; 38960 <identifyDriver@@Base+0x178>
   388d4:	mov	r2, r4
   388d8:	mov	r0, #5
   388dc:	add	r1, pc, r1
   388e0:	bl	1c634 <logMessage@@Base>
   388e4:	ldr	r2, [r5, #16]
   388e8:	cmp	r2, #0
   388ec:	beq	38888 <identifyDriver@@Base+0xa0>
   388f0:	ldrb	r3, [r2]
   388f4:	cmp	r3, #0
   388f8:	beq	38888 <identifyDriver@@Base+0xa0>
   388fc:	ldr	r1, [pc, #96]	; 38964 <identifyDriver@@Base+0x17c>
   38900:	mov	r0, #6
   38904:	add	r1, pc, r1
   38908:	bl	1c634 <logMessage@@Base>
   3890c:	b	38888 <identifyDriver@@Base+0xa0>
   38910:	ldr	ip, [pc, #80]	; 38968 <identifyDriver@@Base+0x180>
   38914:	mov	r0, r8
   38918:	str	r3, [sp, #4]
   3891c:	rsb	r1, r8, r7
   38920:	add	ip, pc, ip
   38924:	mov	r2, #1
   38928:	mvn	r3, #0
   3892c:	str	ip, [sp]
   38930:	bl	fb60 <__snprintf_chk@plt>
   38934:	add	r0, r8, r0
   38938:	cmp	r0, r7
   3893c:	movcc	r8, r0
   38940:	movcs	r8, r7
   38944:	b	3886c <identifyDriver@@Base+0x84>
   38948:	bl	f950 <__stack_chk_fail@plt>
   3894c:	andeq	sl, r3, r8, lsl #5
   38950:			; <UNDEFINED> instruction: 0x000003b4
   38954:	andeq	pc, r1, r4, lsl pc	; <UNPREDICTABLE>
   38958:	strdeq	r5, [r1], -r4
   3895c:	andeq	pc, r1, r8, lsr #29
   38960:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   38964:	andeq	pc, r1, ip, ror #28
   38968:	andeq	pc, r1, ip, lsr #28

0003896c <unsupportedDevice@@Base>:
   3896c:	ldr	r1, [pc, #12]	; 38980 <unsupportedDevice@@Base+0x14>
   38970:	mov	r2, r0
   38974:	mov	r0, #4
   38978:	add	r1, pc, r1
   3897c:	b	1c634 <logMessage@@Base>
   38980:	andeq	pc, r1, ip, lsl #28

00038984 <logOutputPacket@@Base>:
   38984:	ldr	ip, [pc, #68]	; 389d0 <logOutputPacket@@Base+0x4c>
   38988:	push	{r4}		; (str r4, [sp, #-4]!)
   3898c:	add	ip, pc, ip
   38990:	ldr	r4, [pc, #60]	; 389d4 <logOutputPacket@@Base+0x50>
   38994:	ldr	r4, [ip, r4]
   38998:	ldrb	r4, [r4, #2]
   3899c:	cmp	r4, #0
   389a0:	bne	389ac <logOutputPacket@@Base+0x28>
   389a4:	pop	{r4}		; (ldr r4, [sp], #4)
   389a8:	bx	lr
   389ac:	ldr	r4, [pc, #36]	; 389d8 <logOutputPacket@@Base+0x54>
   389b0:	mov	r2, r0
   389b4:	mov	r3, r1
   389b8:	ldr	r1, [pc, #28]	; 389dc <logOutputPacket@@Base+0x58>
   389bc:	ldr	r0, [ip, r4]
   389c0:	add	r1, pc, r1
   389c4:	pop	{r4}		; (ldr r4, [sp], #4)
   389c8:	ldrb	r0, [r0]
   389cc:	b	1c69c <logBytes@@Base>
   389d0:	andeq	sl, r3, ip, ror #1
   389d4:	andeq	r0, r0, ip, ror r3
   389d8:	andeq	r0, r0, ip, lsl #7
   389dc:	ldrdeq	pc, [r1], -ip

000389e0 <logInputPacket@@Base>:
   389e0:	ldr	ip, [pc, #68]	; 38a2c <logInputPacket@@Base+0x4c>
   389e4:	push	{r4}		; (str r4, [sp, #-4]!)
   389e8:	add	ip, pc, ip
   389ec:	ldr	r4, [pc, #60]	; 38a30 <logInputPacket@@Base+0x50>
   389f0:	ldr	r4, [ip, r4]
   389f4:	ldrb	r4, [r4, #1]
   389f8:	cmp	r4, #0
   389fc:	bne	38a08 <logInputPacket@@Base+0x28>
   38a00:	pop	{r4}		; (ldr r4, [sp], #4)
   38a04:	bx	lr
   38a08:	ldr	r4, [pc, #36]	; 38a34 <logInputPacket@@Base+0x54>
   38a0c:	mov	r2, r0
   38a10:	mov	r3, r1
   38a14:	ldr	r1, [pc, #28]	; 38a38 <logInputPacket@@Base+0x58>
   38a18:	ldr	r0, [ip, r4]
   38a1c:	add	r1, pc, r1
   38a20:	pop	{r4}		; (ldr r4, [sp], #4)
   38a24:	ldrb	r0, [r0]
   38a28:	b	1c69c <logBytes@@Base>
   38a2c:	muleq	r3, r0, r0
   38a30:	andeq	r0, r0, ip, ror r3
   38a34:	andeq	r0, r0, ip, lsl #7
   38a38:	muleq	r1, r0, sp

00038a3c <logInputProblem@@Base>:
   38a3c:	mov	ip, r1
   38a40:	mov	r3, r2
   38a44:	mov	r1, r0
   38a48:	mov	r2, ip
   38a4c:	mov	r0, #4
   38a50:	b	1c69c <logBytes@@Base>

00038a54 <logIgnoredByte@@Base>:
   38a54:	push	{lr}		; (str lr, [sp, #-4]!)
   38a58:	sub	sp, sp, #12
   38a5c:	add	r1, sp, #8
   38a60:	mov	r2, #1
   38a64:	strb	r0, [r1, #-1]!
   38a68:	ldr	r0, [pc, #12]	; 38a7c <logIgnoredByte@@Base+0x28>
   38a6c:	add	r0, pc, r0
   38a70:	bl	38a3c <logInputProblem@@Base>
   38a74:	add	sp, sp, #12
   38a78:	pop	{pc}		; (ldr pc, [sp], #4)
   38a7c:	andeq	pc, r1, r0, asr sp	; <UNPREDICTABLE>

00038a80 <logDiscardedByte@@Base>:
   38a80:	push	{lr}		; (str lr, [sp, #-4]!)
   38a84:	sub	sp, sp, #12
   38a88:	add	r1, sp, #8
   38a8c:	mov	r2, #1
   38a90:	strb	r0, [r1, #-1]!
   38a94:	ldr	r0, [pc, #12]	; 38aa8 <logDiscardedByte@@Base+0x28>
   38a98:	add	r0, pc, r0
   38a9c:	bl	38a3c <logInputProblem@@Base>
   38aa0:	add	sp, sp, #12
   38aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   38aa8:	andeq	pc, r1, r4, lsr sp	; <UNPREDICTABLE>

00038aac <logUnknownPacket@@Base>:
   38aac:	push	{lr}		; (str lr, [sp, #-4]!)
   38ab0:	sub	sp, sp, #12
   38ab4:	add	r1, sp, #8
   38ab8:	mov	r2, #1
   38abc:	strb	r0, [r1, #-1]!
   38ac0:	ldr	r0, [pc, #12]	; 38ad4 <logUnknownPacket@@Base+0x28>
   38ac4:	add	r0, pc, r0
   38ac8:	bl	38a3c <logInputProblem@@Base>
   38acc:	add	sp, sp, #12
   38ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   38ad4:	andeq	pc, r1, r8, lsl sp	; <UNPREDICTABLE>

00038ad8 <logPartialPacket@@Base>:
   38ad8:	mov	r2, r1
   38adc:	mov	r1, r0
   38ae0:	ldr	r0, [pc, #4]	; 38aec <logPartialPacket@@Base+0x14>
   38ae4:	add	r0, pc, r0
   38ae8:	b	38a3c <logInputProblem@@Base>
   38aec:	andeq	pc, r1, r8, lsl #26

00038af0 <logTruncatedPacket@@Base>:
   38af0:	mov	r2, r1
   38af4:	mov	r1, r0
   38af8:	ldr	r0, [pc, #4]	; 38b04 <logTruncatedPacket@@Base+0x14>
   38afc:	add	r0, pc, r0
   38b00:	b	38a3c <logInputProblem@@Base>
   38b04:	andeq	pc, r1, r0, lsl #26

00038b08 <logShortPacket@@Base>:
   38b08:	mov	r2, r1
   38b0c:	mov	r1, r0
   38b10:	ldr	r0, [pc, #4]	; 38b1c <logShortPacket@@Base+0x14>
   38b14:	add	r0, pc, r0
   38b18:	b	38a3c <logInputProblem@@Base>
   38b1c:	strdeq	pc, [r1], -ip

00038b20 <logUnexpectedPacket@@Base>:
   38b20:	mov	r2, r1
   38b24:	mov	r1, r0
   38b28:	ldr	r0, [pc, #4]	; 38b34 <logUnexpectedPacket@@Base+0x14>
   38b2c:	add	r0, pc, r0
   38b30:	b	38a3c <logInputProblem@@Base>
   38b34:	strdeq	pc, [r1], -r4

00038b38 <logCorruptPacket@@Base>:
   38b38:	mov	r2, r1
   38b3c:	mov	r1, r0
   38b40:	ldr	r0, [pc, #4]	; 38b4c <logCorruptPacket@@Base+0x14>
   38b44:	add	r0, pc, r0
   38b48:	b	38a3c <logInputProblem@@Base>
   38b4c:	strdeq	pc, [r1], -r0

00038b50 <logDiscardedBytes@@Base>:
   38b50:	mov	r2, r1
   38b54:	mov	r1, r0
   38b58:	ldr	r0, [pc, #4]	; 38b64 <logDiscardedBytes@@Base+0x14>
   38b5c:	add	r0, pc, r0
   38b60:	b	38a3c <logInputProblem@@Base>
   38b64:	andeq	pc, r1, r8, ror #25
   38b68:	b	3c910 <initializeMainScreen@@Base>

00038b6c <getScreenParameters@@Base>:
   38b6c:	ldr	r0, [r0, #28]
   38b70:	bx	lr

00038b74 <getScreenDriverDefinition@@Base>:
   38b74:	bx	lr

00038b78 <haveScreenDriver@@Base>:
   38b78:	ldr	r1, [pc, #12]	; 38b8c <haveScreenDriver@@Base+0x14>
   38b7c:	ldr	r2, [pc, #12]	; 38b90 <haveScreenDriver@@Base+0x18>
   38b80:	add	r1, pc, r1
   38b84:	add	r2, pc, r2
   38b88:	b	38414 <haveDriver@@Base>
   38b8c:	andeq	r7, r1, ip, asr #21
   38b90:	ldrdeq	pc, [r1], -r0

00038b94 <getDefaultScreenDriver@@Base>:
   38b94:	ldr	r0, [pc, #4]	; 38ba0 <getDefaultScreenDriver@@Base+0xc>
   38b98:	add	r0, pc, r0
   38b9c:	b	3843c <getDefaultDriver@@Base>
   38ba0:			; <UNDEFINED> instruction: 0x0001fcbc

00038ba4 <loadScreenDriver@@Base>:
   38ba4:	ldr	r3, [pc, #76]	; 38bf8 <loadScreenDriver@@Base+0x54>
   38ba8:	ldr	ip, [pc, #76]	; 38bfc <loadScreenDriver@@Base+0x58>
   38bac:	push	{r4, r5, lr}
   38bb0:	add	r3, pc, r3
   38bb4:	sub	sp, sp, #28
   38bb8:	ldr	r5, [pc, #64]	; 38c00 <loadScreenDriver@@Base+0x5c>
   38bbc:	ldr	r4, [pc, #64]	; 38c04 <loadScreenDriver@@Base+0x60>
   38bc0:	mov	lr, #120	; 0x78
   38bc4:	add	r5, pc, r5
   38bc8:	str	lr, [sp, #4]
   38bcc:	str	r5, [sp]
   38bd0:	add	r4, pc, r4
   38bd4:	str	r4, [sp, #8]
   38bd8:	ldr	ip, [r3, ip]
   38bdc:	ldr	r3, [pc, #36]	; 38c08 <loadScreenDriver@@Base+0x64>
   38be0:	str	ip, [sp, #12]
   38be4:	add	r3, pc, r3
   38be8:	str	ip, [sp, #16]
   38bec:	bl	38478 <loadDriver@@Base>
   38bf0:	add	sp, sp, #28
   38bf4:	pop	{r4, r5, pc}
   38bf8:	andeq	r9, r3, r8, asr #29
   38bfc:	andeq	r0, r0, r0, ror #8
   38c00:	andeq	r9, r1, r0, asr r9
   38c04:	muleq	r1, r8, ip
   38c08:	andeq	pc, r1, r0, ror ip	; <UNPREDICTABLE>

00038c0c <initializeScreen@@Base>:
   38c0c:	push	{r3, lr}
   38c10:	ldr	r3, [pc, #32]	; 38c38 <initializeScreen@@Base+0x2c>
   38c14:	ldr	r2, [pc, #32]	; 38c3c <initializeScreen@@Base+0x30>
   38c18:	add	r3, pc, r3
   38c1c:	ldr	r0, [pc, #28]	; 38c40 <initializeScreen@@Base+0x34>
   38c20:	ldr	r3, [r3, r2]
   38c24:	add	r0, pc, r0
   38c28:	ldr	r3, [r3]
   38c2c:	ldr	r3, [r3, #32]
   38c30:	blx	r3
   38c34:	pop	{r3, pc}
   38c38:	andeq	r9, r3, r0, ror #28
   38c3c:	andeq	r0, r0, r4, lsr #7
   38c40:	andeq	fp, r3, r8, asr r0

00038c44 <constructScreenDriver@@Base>:
   38c44:	push	{r4, r5, r6, lr}
   38c48:	mov	r4, r0
   38c4c:	bl	38c0c <initializeScreen@@Base>
   38c50:	ldr	r5, [pc, #96]	; 38cb8 <constructScreenDriver@@Base+0x74>
   38c54:	mov	r0, r4
   38c58:	ldr	r6, [pc, #92]	; 38cbc <constructScreenDriver@@Base+0x78>
   38c5c:	add	r5, pc, r5
   38c60:	add	r6, pc, r6
   38c64:	ldr	r3, [r5, #52]	; 0x34
   38c68:	blx	r3
   38c6c:	subs	r4, r0, #0
   38c70:	bne	38c7c <constructScreenDriver@@Base+0x38>
   38c74:	mov	r0, r4
   38c78:	pop	{r4, r5, r6, pc}
   38c7c:	ldr	r3, [r5, #56]	; 0x38
   38c80:	blx	r3
   38c84:	subs	r4, r0, #0
   38c88:	movne	r4, #1
   38c8c:	bne	38c74 <constructScreenDriver@@Base+0x30>
   38c90:	ldr	r3, [pc, #40]	; 38cc0 <constructScreenDriver@@Base+0x7c>
   38c94:	mov	r0, #7
   38c98:	ldr	r1, [pc, #36]	; 38cc4 <constructScreenDriver@@Base+0x80>
   38c9c:	ldr	r3, [r6, r3]
   38ca0:	add	r1, pc, r1
   38ca4:	ldr	r3, [r3]
   38ca8:	ldr	r2, [r3, #4]
   38cac:	bl	1c634 <logMessage@@Base>
   38cb0:	mov	r0, r4
   38cb4:	pop	{r4, r5, r6, pc}
   38cb8:	andeq	fp, r3, r0, lsr #32
   38cbc:	andeq	r9, r3, r8, lsl lr
   38cc0:	andeq	r0, r0, r4, lsr #7
   38cc4:	andeq	pc, r1, ip, asr #23

00038cc8 <destructScreenDriver@@Base>:
   38cc8:	push	{r3, lr}
   38ccc:	ldr	r3, [pc, #12]	; 38ce0 <destructScreenDriver@@Base+0x18>
   38cd0:	add	r3, pc, r3
   38cd4:	ldr	r3, [r3, #60]	; 0x3c
   38cd8:	blx	r3
   38cdc:	pop	{r3, pc}
   38ce0:	andeq	sl, r3, ip, lsr #31

00038ce4 <identifyScreenDriver@@Base>:
   38ce4:	mov	r2, r1
   38ce8:	mov	r1, r0
   38cec:	ldr	r0, [pc, #4]	; 38cf8 <identifyScreenDriver@@Base+0x14>
   38cf0:	add	r0, pc, r0
   38cf4:	b	387e8 <identifyDriver@@Base>
   38cf8:	andeq	pc, r1, r4, lsr #23

00038cfc <identifyScreenDrivers@@Base>:
   38cfc:	bx	lr

00038d00 <constructSpecialScreens@@Base>:
   38d00:	push	{r4, lr}
   38d04:	ldr	r4, [pc, #28]	; 38d28 <constructSpecialScreens@@Base+0x28>
   38d08:	add	r4, pc, r4
   38d0c:	add	r0, r4, #68	; 0x44
   38d10:	bl	39fa4 <initializeHelpScreen@@Base>
   38d14:	add	r0, r4, #156	; 0x9c
   38d18:	bl	3abb4 <initializeMenuScreen@@Base>
   38d1c:	add	r0, r4, #216	; 0xd8
   38d20:	pop	{r4, lr}
   38d24:	b	3a268 <initializeFrozenScreen@@Base>
   38d28:	andeq	sl, r3, r4, ror pc

00038d2c <destructSpecialScreens@@Base>:
   38d2c:	push	{r4, lr}
   38d30:	ldr	r4, [pc, #28]	; 38d54 <destructSpecialScreens@@Base+0x28>
   38d34:	add	r4, pc, r4
   38d38:	ldr	r3, [r4, #124]	; 0x7c
   38d3c:	blx	r3
   38d40:	ldr	r3, [r4, #212]	; 0xd4
   38d44:	blx	r3
   38d48:	ldr	r3, [r4, #272]	; 0x110
   38d4c:	blx	r3
   38d50:	pop	{r4, pc}
   38d54:	andeq	sl, r3, r8, asr #30

00038d58 <haveScreen@@Base>:
   38d58:	ldr	r3, [pc, #20]	; 38d74 <haveScreen@@Base+0x1c>
   38d5c:	add	r3, pc, r3
   38d60:	ldr	r3, [r3, #276]	; 0x114
   38d64:	tst	r0, r3
   38d68:	moveq	r0, #0
   38d6c:	movne	r0, #1
   38d70:	bx	lr
   38d74:	andeq	sl, r3, r0, lsr #30

00038d78 <isLiveScreen@@Base>:
   38d78:	ldr	r3, [pc, #28]	; 38d9c <isLiveScreen@@Base+0x24>
   38d7c:	ldr	r0, [pc, #28]	; 38da0 <isLiveScreen@@Base+0x28>
   38d80:	add	r3, pc, r3
   38d84:	add	r0, pc, r0
   38d88:	ldr	r3, [r3]
   38d8c:	subs	r3, r3, r0
   38d90:	rsbs	r0, r3, #0
   38d94:	adcs	r0, r0, r3
   38d98:	bx	lr
   38d9c:	andeq	sl, r3, ip, ror #6
   38da0:	strdeq	sl, [r3], -r8

00038da4 <validateScreenBox@@Base>:
   38da4:	push	{r4, r5, r6, lr}
   38da8:	mov	r4, r2
   38dac:	ldrsh	r3, [r0]
   38db0:	sub	sp, sp, #16
   38db4:	ldrsh	ip, [r0, #4]
   38db8:	cmp	r3, #0
   38dbc:	blt	38e28 <validateScreenBox@@Base+0x84>
   38dc0:	cmp	ip, #0
   38dc4:	ble	38e28 <validateScreenBox@@Base+0x84>
   38dc8:	add	r2, r3, ip
   38dcc:	ldrsh	r6, [r0, #2]
   38dd0:	cmp	r2, r1
   38dd4:	ldrsh	r5, [r0, #6]
   38dd8:	bgt	38dfc <validateScreenBox@@Base+0x58>
   38ddc:	cmp	r6, #0
   38de0:	blt	38dfc <validateScreenBox@@Base+0x58>
   38de4:	cmp	r5, #0
   38de8:	ble	38dfc <validateScreenBox@@Base+0x58>
   38dec:	add	r2, r6, r5
   38df0:	cmp	r2, r4
   38df4:	movle	r0, #1
   38df8:	ble	38e20 <validateScreenBox@@Base+0x7c>
   38dfc:	mov	r2, r1
   38e00:	ldr	r1, [pc, #44]	; 38e34 <validateScreenBox@@Base+0x90>
   38e04:	mov	r0, #3
   38e08:	str	ip, [sp]
   38e0c:	stmib	sp, {r4, r6}
   38e10:	add	r1, pc, r1
   38e14:	str	r5, [sp, #12]
   38e18:	bl	1c634 <logMessage@@Base>
   38e1c:	mov	r0, #0
   38e20:	add	sp, sp, #16
   38e24:	pop	{r4, r5, r6, pc}
   38e28:	ldrsh	r6, [r0, #2]
   38e2c:	ldrsh	r5, [r0, #6]
   38e30:	b	38dfc <validateScreenBox@@Base+0x58>
   38e34:	andeq	pc, r1, ip, lsl #21

00038e38 <setScreenCharacterText@@Base>:
   38e38:	cmp	r2, #0
   38e3c:	bxeq	lr
   38e40:	add	r0, r0, r2, lsl #3
   38e44:	subs	r2, r2, #1
   38e48:	str	r1, [r0, #-8]!
   38e4c:	bne	38e44 <setScreenCharacterText@@Base+0xc>
   38e50:	bx	lr

00038e54 <setScreenCharacterAttributes@@Base>:
   38e54:	cmp	r2, #0
   38e58:	bxeq	lr
   38e5c:	add	r0, r0, r2, lsl #3
   38e60:	subs	r2, r2, #1
   38e64:	strb	r1, [r0, #-4]
   38e68:	sub	r0, r0, #8
   38e6c:	bne	38e60 <setScreenCharacterAttributes@@Base+0xc>
   38e70:	bx	lr

00038e74 <clearScreenCharacters@@Base>:
   38e74:	push	{r3, r4, r5, lr}
   38e78:	mov	r2, r1
   38e7c:	mov	r4, r1
   38e80:	mov	r5, r0
   38e84:	mov	r1, #32
   38e88:	bl	38e38 <setScreenCharacterText@@Base>
   38e8c:	mov	r0, r5
   38e90:	mov	r2, r4
   38e94:	mov	r1, #7
   38e98:	pop	{r3, r4, r5, lr}
   38e9c:	b	38e54 <setScreenCharacterAttributes@@Base>

00038ea0 <setScreenMessage@@Base>:
   38ea0:	ldr	r3, [pc, #228]	; 38f8c <setScreenMessage@@Base+0xec>
   38ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38ea8:	add	r3, pc, r3
   38eac:	ldr	lr, [pc, #220]	; 38f90 <setScreenMessage@@Base+0xf0>
   38eb0:	sub	sp, sp, #28
   38eb4:	ldrh	r8, [r0, #4]
   38eb8:	mov	r6, r0
   38ebc:	mov	r0, r2
   38ec0:	mov	r5, r1
   38ec4:	ldr	lr, [r3, lr]
   38ec8:	mov	fp, r2
   38ecc:	sxth	r9, r8
   38ed0:	add	r7, sp, #12
   38ed4:	mov	sl, #0
   38ed8:	ldr	r3, [lr]
   38edc:	add	r9, r1, r9, lsl #3
   38ee0:	str	lr, [sp, #4]
   38ee4:	str	r3, [sp, #20]
   38ee8:	bl	fb54 <strlen@plt>
   38eec:	ldrh	r1, [r6, #6]
   38ef0:	str	sl, [r7, #4]
   38ef4:	str	sl, [sp, #12]
   38ef8:	smulbb	r1, r8, r1
   38efc:	mov	r4, r0
   38f00:	mov	r0, r5
   38f04:	bl	38e74 <clearScreenCharacters@@Base>
   38f08:	cmp	r4, sl
   38f0c:	beq	38f6c <setScreenMessage@@Base+0xcc>
   38f10:	add	r8, sp, #8
   38f14:	b	38f50 <setScreenMessage@@Base+0xb0>
   38f18:	ldrsh	r3, [r6]
   38f1c:	add	fp, fp, r0
   38f20:	rsb	r4, r0, r4
   38f24:	add	r2, sl, #1
   38f28:	cmp	r3, sl
   38f2c:	bhi	38f44 <setScreenMessage@@Base+0xa4>
   38f30:	cmp	r5, r9
   38f34:	beq	38f6c <setScreenMessage@@Base+0xcc>
   38f38:	ldr	r3, [sp, #8]
   38f3c:	add	r5, r5, #8
   38f40:	str	r3, [r5, #-8]
   38f44:	cmp	r4, #0
   38f48:	beq	38f6c <setScreenMessage@@Base+0xcc>
   38f4c:	mov	sl, r2
   38f50:	mov	r0, r8
   38f54:	mov	r1, fp
   38f58:	mov	r2, r4
   38f5c:	mov	r3, r7
   38f60:	bl	f470 <mbrtowc@plt>
   38f64:	cmp	r0, #0
   38f68:	bgt	38f18 <setScreenMessage@@Base+0x78>
   38f6c:	ldr	r1, [sp, #4]
   38f70:	ldr	r2, [sp, #20]
   38f74:	ldr	r3, [r1]
   38f78:	cmp	r2, r3
   38f7c:	bne	38f88 <setScreenMessage@@Base+0xe8>
   38f80:	add	sp, sp, #28
   38f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38f88:	bl	f950 <__stack_chk_fail@plt>
   38f8c:	ldrdeq	r9, [r3], -r0
   38f90:			; <UNDEFINED> instruction: 0x000003b4

00038f94 <formatScreenTitle@@Base>:
   38f94:	push	{r3, lr}
   38f98:	ldr	r3, [pc, #16]	; 38fb0 <formatScreenTitle@@Base+0x1c>
   38f9c:	add	r3, pc, r3
   38fa0:	ldr	r3, [r3]
   38fa4:	ldr	r3, [r3]
   38fa8:	blx	r3
   38fac:	pop	{r3, pc}
   38fb0:	andeq	sl, r3, r0, asr r1
   38fb4:	ldr	r3, [pc, #172]	; 39068 <formatScreenTitle@@Base+0xd4>
   38fb8:	tst	r0, #1
   38fbc:	ldr	r2, [pc, #168]	; 3906c <formatScreenTitle@@Base+0xd8>
   38fc0:	add	r3, pc, r3
   38fc4:	push	{r4, r5, lr}
   38fc8:	sub	sp, sp, #140	; 0x8c
   38fcc:	ldr	r4, [r3, r2]
   38fd0:	ldr	r3, [r4]
   38fd4:	str	r3, [sp, #132]	; 0x84
   38fd8:	bne	39058 <formatScreenTitle@@Base+0xc4>
   38fdc:	ldr	r3, [pc, #140]	; 39070 <formatScreenTitle@@Base+0xdc>
   38fe0:	add	r3, pc, r3
   38fe4:	add	r3, r3, #8
   38fe8:	b	38ff8 <formatScreenTitle@@Base+0x64>
   38fec:	tst	r2, r0
   38ff0:	add	r3, r3, #8
   38ff4:	bne	39008 <formatScreenTitle@@Base+0x74>
   38ff8:	ldr	r2, [r3]
   38ffc:	mov	r1, r3
   39000:	cmp	r2, #0
   39004:	bne	38fec <formatScreenTitle@@Base+0x58>
   39008:	ldr	r3, [pc, #100]	; 39074 <formatScreenTitle@@Base+0xe0>
   3900c:	add	r5, sp, #4
   39010:	ldr	r2, [r1, #4]
   39014:	mov	r1, #128	; 0x80
   39018:	add	r3, pc, r3
   3901c:	mov	r0, r5
   39020:	str	r2, [r3]
   39024:	bl	38f94 <formatScreenTitle@@Base>
   39028:	cmp	r0, #0
   3902c:	beq	39040 <formatScreenTitle@@Base+0xac>
   39030:	mov	r0, #0
   39034:	mov	r1, r5
   39038:	mov	r2, r0
   3903c:	bl	13558 <message@@Base>
   39040:	ldr	r2, [sp, #132]	; 0x84
   39044:	ldr	r3, [r4]
   39048:	cmp	r2, r3
   3904c:	bne	39064 <formatScreenTitle@@Base+0xd0>
   39050:	add	sp, sp, #140	; 0x8c
   39054:	pop	{r4, r5, pc}
   39058:	ldr	r1, [pc, #24]	; 39078 <formatScreenTitle@@Base+0xe4>
   3905c:	add	r1, pc, r1
   39060:	b	39008 <formatScreenTitle@@Base+0x74>
   39064:	bl	f950 <__stack_chk_fail@plt>
   39068:			; <UNDEFINED> instruction: 0x00039ab8
   3906c:			; <UNDEFINED> instruction: 0x000003b4
   39070:	andeq	r8, r3, r0, lsl r4
   39074:	ldrdeq	sl, [r3], -r4
   39078:	muleq	r3, r4, r3

0003907c <describeScreen@@Base>:
   3907c:	ldr	r3, [pc, #12]	; 39090 <describeScreen@@Base+0x14>
   39080:	mov	r1, r0
   39084:	add	r3, pc, r3
   39088:	ldr	r0, [r3]
   3908c:	b	39938 <describeBaseScreen@@Base>
   39090:	andeq	sl, r3, r8, rrx

00039094 <readScreen@@Base>:
   39094:	ldr	ip, [pc, #100]	; 39100 <readScreen@@Base+0x6c>
   39098:	push	{r4, r5, lr}
   3909c:	add	ip, pc, ip
   390a0:	ldr	r4, [pc, #92]	; 39104 <readScreen@@Base+0x70>
   390a4:	sub	sp, sp, #20
   390a8:	ldr	lr, [pc, #88]	; 39108 <readScreen@@Base+0x74>
   390ac:	ldr	r5, [sp, #32]
   390b0:	ldr	r4, [ip, r4]
   390b4:	add	lr, pc, lr
   390b8:	strh	r0, [sp, #4]
   390bc:	add	r0, sp, #4
   390c0:	ldr	lr, [lr]
   390c4:	ldr	ip, [r4]
   390c8:	strh	r1, [sp, #6]
   390cc:	mov	r1, r5
   390d0:	strh	r2, [sp, #8]
   390d4:	strh	r3, [sp, #10]
   390d8:	ldr	r3, [lr, #8]
   390dc:	str	ip, [sp, #12]
   390e0:	blx	r3
   390e4:	ldr	r2, [sp, #12]
   390e8:	ldr	r3, [r4]
   390ec:	cmp	r2, r3
   390f0:	bne	390fc <readScreen@@Base+0x68>
   390f4:	add	sp, sp, #20
   390f8:	pop	{r4, r5, pc}
   390fc:	bl	f950 <__stack_chk_fail@plt>
   39100:	ldrdeq	r9, [r3], -ip
   39104:			; <UNDEFINED> instruction: 0x000003b4
   39108:	andeq	sl, r3, r8, lsr r0

0003910c <readScreenText@@Base>:
   3910c:	push	{r4, r5, r6, r7, fp, lr}
   39110:	add	fp, sp, #20
   39114:	mul	r4, r2, r3
   39118:	ldr	ip, [pc, #128]	; 391a0 <readScreenText@@Base+0x94>
   3911c:	sub	sp, sp, #16
   39120:	ldr	lr, [pc, #124]	; 391a4 <readScreenText@@Base+0x98>
   39124:	add	ip, pc, ip
   39128:	ldr	r6, [fp, #4]
   3912c:	ldr	r7, [ip, lr]
   39130:	lsl	ip, r4, #3
   39134:	add	ip, ip, #8
   39138:	sub	sp, sp, ip
   3913c:	ldr	ip, [r7]
   39140:	add	r5, sp, #8
   39144:	str	r5, [sp]
   39148:	str	ip, [fp, #-24]	; 0xffffffe8
   3914c:	bl	39094 <readScreen@@Base>
   39150:	cmp	r0, #0
   39154:	beq	39184 <readScreenText@@Base+0x78>
   39158:	cmp	r4, #0
   3915c:	movne	r2, #0
   39160:	movne	r3, r2
   39164:	beq	39180 <readScreenText@@Base+0x74>
   39168:	ldr	r1, [r5, r3, lsl #3]
   3916c:	add	r3, r3, #1
   39170:	cmp	r3, r4
   39174:	str	r1, [r6, r2, lsl #2]
   39178:	mov	r2, r3
   3917c:	bne	39168 <readScreenText@@Base+0x5c>
   39180:	mov	r0, #1
   39184:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39188:	ldr	r3, [r7]
   3918c:	cmp	r2, r3
   39190:	bne	3919c <readScreenText@@Base+0x90>
   39194:	sub	sp, fp, #20
   39198:	pop	{r4, r5, r6, r7, fp, pc}
   3919c:	bl	f950 <__stack_chk_fail@plt>
   391a0:	andeq	r9, r3, r4, asr r9
   391a4:			; <UNDEFINED> instruction: 0x000003b4

000391a8 <insertScreenKey@@Base>:
   391a8:	push	{r3, lr}
   391ac:	ldr	r3, [pc, #16]	; 391c4 <insertScreenKey@@Base+0x1c>
   391b0:	add	r3, pc, r3
   391b4:	ldr	r3, [r3]
   391b8:	ldr	r3, [r3, #12]
   391bc:	blx	r3
   391c0:	pop	{r3, pc}
   391c4:	andeq	r9, r3, ip, lsr pc

000391c8 <routeCursor@@Base>:
   391c8:	push	{r3, lr}
   391cc:	ldr	r3, [pc, #16]	; 391e4 <routeCursor@@Base+0x1c>
   391d0:	add	r3, pc, r3
   391d4:	ldr	r3, [r3]
   391d8:	ldr	r3, [r3, #16]
   391dc:	blx	r3
   391e0:	pop	{r3, pc}
   391e4:	andeq	r9, r3, ip, lsl pc

000391e8 <highlightScreenRegion@@Base>:
   391e8:	ldr	ip, [pc, #20]	; 39204 <highlightScreenRegion@@Base+0x1c>
   391ec:	push	{r3, lr}
   391f0:	add	ip, pc, ip
   391f4:	ldr	ip, [ip]
   391f8:	ldr	ip, [ip, #20]
   391fc:	blx	ip
   39200:	pop	{r3, pc}
   39204:	strdeq	r9, [r3], -ip

00039208 <unhighlightScreenRegion@@Base>:
   39208:	push	{r3, lr}
   3920c:	ldr	r3, [pc, #16]	; 39224 <unhighlightScreenRegion@@Base+0x1c>
   39210:	add	r3, pc, r3
   39214:	ldr	r3, [r3]
   39218:	ldr	r3, [r3, #24]
   3921c:	blx	r3
   39220:	pop	{r3, pc}
   39224:	ldrdeq	r9, [r3], -ip

00039228 <getScreenPointer@@Base>:
   39228:	push	{r3, lr}
   3922c:	ldr	r3, [pc, #16]	; 39244 <getScreenPointer@@Base+0x1c>
   39230:	add	r3, pc, r3
   39234:	ldr	r3, [r3]
   39238:	ldr	r3, [r3, #28]
   3923c:	blx	r3
   39240:	pop	{r3, pc}
   39244:			; <UNDEFINED> instruction: 0x00039ebc

00039248 <selectScreenVirtualTerminal@@Base>:
   39248:	push	{r3, lr}
   3924c:	ldr	r3, [pc, #16]	; 39264 <selectScreenVirtualTerminal@@Base+0x1c>
   39250:	add	r3, pc, r3
   39254:	ldr	r3, [r3]
   39258:	ldr	r3, [r3, #32]
   3925c:	blx	r3
   39260:	pop	{r3, pc}
   39264:	muleq	r3, ip, lr

00039268 <switchScreenVirtualTerminal@@Base>:
   39268:	push	{r3, lr}
   3926c:	ldr	r3, [pc, #16]	; 39284 <switchScreenVirtualTerminal@@Base+0x1c>
   39270:	add	r3, pc, r3
   39274:	ldr	r3, [r3]
   39278:	ldr	r3, [r3, #36]	; 0x24
   3927c:	blx	r3
   39280:	pop	{r3, pc}
   39284:	andeq	r9, r3, ip, ror lr

00039288 <currentVirtualTerminal@@Base>:
   39288:	push	{r3, lr}
   3928c:	ldr	r3, [pc, #16]	; 392a4 <currentVirtualTerminal@@Base+0x1c>
   39290:	add	r3, pc, r3
   39294:	ldr	r3, [r3]
   39298:	ldr	r3, [r3, #40]	; 0x28
   3929c:	blx	r3
   392a0:	pop	{r3, pc}
   392a4:	andeq	r9, r3, ip, asr lr

000392a8 <userVirtualTerminal@@Base>:
   392a8:	push	{r3, lr}
   392ac:	ldr	r3, [pc, #12]	; 392c0 <userVirtualTerminal@@Base+0x18>
   392b0:	add	r3, pc, r3
   392b4:	ldr	r3, [r3, #64]	; 0x40
   392b8:	blx	r3
   392bc:	pop	{r3, pc}
   392c0:	andeq	sl, r3, ip, asr #19

000392c4 <executeScreenCommand@@Base>:
   392c4:	push	{r3, lr}
   392c8:	ldr	r3, [pc, #16]	; 392e0 <executeScreenCommand@@Base+0x1c>
   392cc:	add	r3, pc, r3
   392d0:	ldr	r3, [r3]
   392d4:	ldr	r3, [r3, #44]	; 0x2c
   392d8:	blx	r3
   392dc:	pop	{r3, pc}
   392e0:	andeq	r9, r3, r0, lsr #28

000392e4 <getScreenCommandContext@@Base>:
   392e4:	push	{r3, lr}
   392e8:	ldr	r3, [pc, #16]	; 39300 <getScreenCommandContext@@Base+0x1c>
   392ec:	add	r3, pc, r3
   392f0:	ldr	r3, [r3]
   392f4:	ldr	r3, [r3, #48]	; 0x30
   392f8:	blx	r3
   392fc:	pop	{r3, pc}
   39300:	andeq	r9, r3, r0, lsl #28

00039304 <constructRoutingScreen@@Base>:
   39304:	push	{r4, lr}
   39308:	ldr	r4, [pc, #20]	; 39324 <constructRoutingScreen@@Base+0x20>
   3930c:	add	r4, pc, r4
   39310:	ldr	r3, [r4, #60]	; 0x3c
   39314:	blx	r3
   39318:	ldr	r3, [r4, #56]	; 0x38
   3931c:	blx	r3
   39320:	pop	{r4, pc}
   39324:	andeq	sl, r3, r0, ror r9

00039328 <destructRoutingScreen@@Base>:
   39328:	push	{r3, lr}
   3932c:	ldr	r3, [pc, #12]	; 39340 <destructRoutingScreen@@Base+0x18>
   39330:	add	r3, pc, r3
   39334:	ldr	r3, [r3, #60]	; 0x3c
   39338:	blx	r3
   3933c:	pop	{r3, pc}
   39340:	andeq	sl, r3, ip, asr #18

00039344 <isHelpScreen@@Base>:
   39344:	ldr	r2, [pc, #32]	; 3936c <isHelpScreen@@Base+0x28>
   39348:	ldr	r3, [pc, #32]	; 39370 <isHelpScreen@@Base+0x2c>
   3934c:	add	r2, pc, r2
   39350:	add	r3, pc, r3
   39354:	ldr	r0, [r2]
   39358:	add	r3, r3, #68	; 0x44
   3935c:	subs	r3, r0, r3
   39360:	rsbs	r0, r3, #0
   39364:	adcs	r0, r0, r3
   39368:	bx	lr
   3936c:	andeq	r9, r3, r0, lsr #27
   39370:	andeq	sl, r3, ip, lsr #18

00039374 <haveHelpScreen@@Base>:
   39374:	mov	r0, #1
   39378:	b	38d58 <haveScreen@@Base>

0003937c <deactivateHelpScreen@@Base>:
   3937c:	ldr	r3, [pc, #16]	; 39394 <deactivateHelpScreen@@Base+0x18>
   39380:	add	r3, pc, r3
   39384:	ldr	r0, [r3, #276]	; 0x114
   39388:	bic	r0, r0, #1
   3938c:	str	r0, [r3, #276]	; 0x114
   39390:	b	38fb4 <formatScreenTitle@@Base+0x20>
   39394:	strdeq	sl, [r3], -ip

00039398 <constructHelpScreen@@Base>:
   39398:	push	{r4, lr}
   3939c:	ldr	r4, [pc, #44]	; 393d0 <constructHelpScreen@@Base+0x38>
   393a0:	add	r4, pc, r4
   393a4:	ldr	r3, [r4, #280]	; 0x118
   393a8:	cmp	r3, #0
   393ac:	beq	393b8 <constructHelpScreen@@Base+0x20>
   393b0:	mov	r0, #1
   393b4:	pop	{r4, pc}
   393b8:	ldr	r3, [r4, #120]	; 0x78
   393bc:	blx	r3
   393c0:	cmp	r0, #0
   393c4:	movne	r0, #1
   393c8:	strne	r0, [r4, #280]	; 0x118
   393cc:	pop	{r4, pc}
   393d0:	ldrdeq	sl, [r3], -ip

000393d4 <activateHelpScreen@@Base>:
   393d4:	push	{r3, lr}
   393d8:	bl	39398 <constructHelpScreen@@Base>
   393dc:	cmp	r0, #0
   393e0:	popeq	{r3, pc}
   393e4:	ldr	r3, [pc, #28]	; 39408 <activateHelpScreen@@Base+0x34>
   393e8:	mov	r0, #1
   393ec:	add	r3, pc, r3
   393f0:	ldr	r2, [r3, #276]	; 0x114
   393f4:	orr	r2, r2, r0
   393f8:	str	r2, [r3, #276]	; 0x114
   393fc:	bl	38fb4 <formatScreenTitle@@Base+0x20>
   39400:	mov	r0, #1
   39404:	pop	{r3, pc}
   39408:	muleq	r3, r0, r8

0003940c <destructHelpScreen@@Base>:
   3940c:	push	{r4, lr}
   39410:	ldr	r4, [pc, #32]	; 39438 <destructHelpScreen@@Base+0x2c>
   39414:	add	r4, pc, r4
   39418:	ldr	r3, [r4, #280]	; 0x118
   3941c:	cmp	r3, #0
   39420:	popeq	{r4, pc}
   39424:	ldr	r3, [r4, #124]	; 0x7c
   39428:	blx	r3
   3942c:	mov	r3, #0
   39430:	str	r3, [r4, #280]	; 0x118
   39434:	pop	{r4, pc}
   39438:	andeq	sl, r3, r8, ror #16

0003943c <addHelpPage@@Base>:
   3943c:	push	{r3, lr}
   39440:	ldr	r3, [pc, #12]	; 39454 <addHelpPage@@Base+0x18>
   39444:	add	r3, pc, r3
   39448:	ldr	r3, [r3, #128]	; 0x80
   3944c:	blx	r3
   39450:	pop	{r3, pc}
   39454:	andeq	sl, r3, r8, lsr r8

00039458 <getHelpPageCount@@Base>:
   39458:	push	{r3, lr}
   3945c:	ldr	r3, [pc, #12]	; 39470 <getHelpPageCount@@Base+0x18>
   39460:	add	r3, pc, r3
   39464:	ldr	r3, [r3, #132]	; 0x84
   39468:	blx	r3
   3946c:	pop	{r3, pc}
   39470:	andeq	sl, r3, ip, lsl r8

00039474 <getHelpPageNumber@@Base>:
   39474:	push	{r3, lr}
   39478:	ldr	r3, [pc, #12]	; 3948c <getHelpPageNumber@@Base+0x18>
   3947c:	add	r3, pc, r3
   39480:	ldr	r3, [r3, #136]	; 0x88
   39484:	blx	r3
   39488:	pop	{r3, pc}
   3948c:	andeq	sl, r3, r0, lsl #16

00039490 <setHelpPageNumber@@Base>:
   39490:	push	{r3, lr}
   39494:	ldr	r3, [pc, #12]	; 394a8 <setHelpPageNumber@@Base+0x18>
   39498:	add	r3, pc, r3
   3949c:	ldr	r3, [r3, #140]	; 0x8c
   394a0:	blx	r3
   394a4:	pop	{r3, pc}
   394a8:	andeq	sl, r3, r4, ror #15

000394ac <clearHelpPage@@Base>:
   394ac:	push	{r3, lr}
   394b0:	ldr	r3, [pc, #12]	; 394c4 <clearHelpPage@@Base+0x18>
   394b4:	add	r3, pc, r3
   394b8:	ldr	r3, [r3, #144]	; 0x90
   394bc:	blx	r3
   394c0:	pop	{r3, pc}
   394c4:	andeq	sl, r3, r8, asr #15

000394c8 <addHelpLine@@Base>:
   394c8:	push	{r3, lr}
   394cc:	ldr	r3, [pc, #12]	; 394e0 <addHelpLine@@Base+0x18>
   394d0:	add	r3, pc, r3
   394d4:	ldr	r3, [r3, #148]	; 0x94
   394d8:	blx	r3
   394dc:	pop	{r3, pc}
   394e0:	andeq	sl, r3, ip, lsr #15

000394e4 <getHelpLineCount@@Base>:
   394e4:	push	{r3, lr}
   394e8:	ldr	r3, [pc, #12]	; 394fc <getHelpLineCount@@Base+0x18>
   394ec:	add	r3, pc, r3
   394f0:	ldr	r3, [r3, #152]	; 0x98
   394f4:	blx	r3
   394f8:	pop	{r3, pc}
   394fc:	muleq	r3, r0, r7

00039500 <isMenuScreen@@Base>:
   39500:	ldr	r2, [pc, #32]	; 39528 <isMenuScreen@@Base+0x28>
   39504:	ldr	r3, [pc, #32]	; 3952c <isMenuScreen@@Base+0x2c>
   39508:	add	r2, pc, r2
   3950c:	add	r3, pc, r3
   39510:	ldr	r0, [r2]
   39514:	add	r3, r3, #156	; 0x9c
   39518:	subs	r3, r0, r3
   3951c:	rsbs	r0, r3, #0
   39520:	adcs	r0, r0, r3
   39524:	bx	lr
   39528:	andeq	r9, r3, r4, ror #23
   3952c:	andeq	sl, r3, r0, ror r7

00039530 <haveMenuScreen@@Base>:
   39530:	mov	r0, #2
   39534:	b	38d58 <haveScreen@@Base>

00039538 <activateMenuScreen@@Base>:
   39538:	push	{r4, lr}
   3953c:	ldr	r4, [pc, #92]	; 395a0 <activateMenuScreen@@Base+0x68>
   39540:	add	r4, pc, r4
   39544:	ldr	r3, [r4, #284]	; 0x11c
   39548:	cmp	r3, #0
   3954c:	bne	39574 <activateMenuScreen@@Base+0x3c>
   39550:	bl	3b650 <getPreferencesMenu@@Base>
   39554:	cmp	r0, #0
   39558:	beq	39598 <activateMenuScreen@@Base+0x60>
   3955c:	ldr	r3, [r4, #208]	; 0xd0
   39560:	blx	r3
   39564:	cmp	r0, #0
   39568:	beq	39598 <activateMenuScreen@@Base+0x60>
   3956c:	mov	r3, #1
   39570:	str	r3, [r4, #284]	; 0x11c
   39574:	ldr	r3, [pc, #40]	; 395a4 <activateMenuScreen@@Base+0x6c>
   39578:	mov	r0, #2
   3957c:	add	r3, pc, r3
   39580:	ldr	r2, [r3, #276]	; 0x114
   39584:	orr	r2, r2, r0
   39588:	str	r2, [r3, #276]	; 0x114
   3958c:	bl	38fb4 <formatScreenTitle@@Base+0x20>
   39590:	mov	r0, #1
   39594:	pop	{r4, pc}
   39598:	mov	r0, #0
   3959c:	pop	{r4, pc}
   395a0:	andeq	sl, r3, ip, lsr r7
   395a4:	andeq	sl, r3, r0, lsl #14

000395a8 <deactivateMenuScreen@@Base>:
   395a8:	ldr	r3, [pc, #16]	; 395c0 <deactivateMenuScreen@@Base+0x18>
   395ac:	add	r3, pc, r3
   395b0:	ldr	r0, [r3, #276]	; 0x114
   395b4:	bic	r0, r0, #2
   395b8:	str	r0, [r3, #276]	; 0x114
   395bc:	b	38fb4 <formatScreenTitle@@Base+0x20>
   395c0:	ldrdeq	sl, [r3], -r0

000395c4 <isFrozenScreen@@Base>:
   395c4:	ldr	r2, [pc, #32]	; 395ec <isFrozenScreen@@Base+0x28>
   395c8:	ldr	r3, [pc, #32]	; 395f0 <isFrozenScreen@@Base+0x2c>
   395cc:	add	r2, pc, r2
   395d0:	add	r3, pc, r3
   395d4:	ldr	r0, [r2]
   395d8:	add	r3, r3, #216	; 0xd8
   395dc:	subs	r3, r0, r3
   395e0:	rsbs	r0, r3, #0
   395e4:	adcs	r0, r0, r3
   395e8:	bx	lr
   395ec:	andeq	r9, r3, r0, lsr #22
   395f0:	andeq	sl, r3, ip, lsr #13

000395f4 <haveFrozenScreen@@Base>:
   395f4:	mov	r0, #4
   395f8:	b	38d58 <haveScreen@@Base>

000395fc <activateFrozenScreen@@Base>:
   395fc:	push	{r4, lr}
   39600:	bl	395f4 <haveFrozenScreen@@Base>
   39604:	cmp	r0, #0
   39608:	beq	39614 <activateFrozenScreen@@Base+0x18>
   3960c:	mov	r0, #0
   39610:	pop	{r4, pc}
   39614:	ldr	r4, [pc, #48]	; 3964c <activateFrozenScreen@@Base+0x50>
   39618:	add	r4, pc, r4
   3961c:	ldr	r3, [r4, #268]	; 0x10c
   39620:	mov	r0, r4
   39624:	blx	r3
   39628:	cmp	r0, #0
   3962c:	beq	3960c <activateFrozenScreen@@Base+0x10>
   39630:	ldr	r3, [r4, #276]	; 0x114
   39634:	mov	r0, #4
   39638:	orr	r3, r3, r0
   3963c:	str	r3, [r4, #276]	; 0x114
   39640:	bl	38fb4 <formatScreenTitle@@Base+0x20>
   39644:	mov	r0, #1
   39648:	pop	{r4, pc}
   3964c:	andeq	sl, r3, r4, ror #12

00039650 <deactivateFrozenScreen@@Base>:
   39650:	push	{r4, lr}
   39654:	bl	395f4 <haveFrozenScreen@@Base>
   39658:	cmp	r0, #0
   3965c:	popeq	{r4, pc}
   39660:	ldr	r4, [pc, #28]	; 39684 <deactivateFrozenScreen@@Base+0x34>
   39664:	add	r4, pc, r4
   39668:	ldr	r3, [r4, #272]	; 0x110
   3966c:	blx	r3
   39670:	ldr	r0, [r4, #276]	; 0x114
   39674:	bic	r0, r0, #4
   39678:	str	r0, [r4, #276]	; 0x114
   3967c:	pop	{r4, lr}
   39680:	b	38fb4 <formatScreenTitle@@Base+0x20>
   39684:	andeq	sl, r3, r8, lsl r6
   39688:	mov	r0, #0
   3968c:	bx	lr
   39690:	mov	r0, #0
   39694:	bx	lr
   39698:	mvn	r0, #0
   3969c:	bx	lr
   396a0:	mov	r2, r0
   396a4:	mov	r3, #0
   396a8:	mov	r0, r3
   396ac:	strb	r3, [r2]
   396b0:	bx	lr
   396b4:	mov	r0, #0
   396b8:	bx	lr
   396bc:	mov	r0, #0
   396c0:	bx	lr
   396c4:	mov	r0, #0
   396c8:	bx	lr

000396cc <unhighlightRegion_BaseScreen@@Base>:
   396cc:	mov	r0, #0
   396d0:	bx	lr
   396d4:	mov	r0, #0
   396d8:	bx	lr
   396dc:	mov	r0, #0
   396e0:	bx	lr
   396e4:	mov	r0, #3
   396e8:	bx	lr
   396ec:	mov	r2, #1
   396f0:	mov	r3, #9
   396f4:	strh	r2, [r0]
   396f8:	mvn	r2, #0
   396fc:	strh	r3, [r0, #2]
   39700:	mov	r3, #0
   39704:	str	r2, [r0, #8]
   39708:	strh	r3, [r0, #4]
   3970c:	strh	r3, [r0, #6]
   39710:	bx	lr
   39714:	push	{r3, r4, r5, lr}
   39718:	mov	r2, #1
   3971c:	mov	r4, r1
   39720:	mov	r1, #9
   39724:	mov	r5, r0
   39728:	bl	38da4 <validateScreenBox@@Base>
   3972c:	cmp	r0, #0
   39730:	popeq	{r3, r4, r5, pc}
   39734:	ldr	r2, [pc, #20]	; 39750 <unhighlightRegion_BaseScreen@@Base+0x84>
   39738:	mov	r0, r5
   3973c:	mov	r1, r4
   39740:	add	r2, pc, r2
   39744:	bl	38ea0 <setScreenMessage@@Base>
   39748:	mov	r0, #1
   3974c:	pop	{r3, r4, r5, pc}
   39750:	ldrdeq	pc, [r1], -ip

00039754 <isSpecialKey@@Base>:
   39754:	bic	r0, r0, #-16777216	; 0xff000000
   39758:	bic	r0, r0, #255	; 0xff
   3975c:	subs	r3, r0, #63488	; 0xf800
   39760:	rsbs	r0, r3, #0
   39764:	adcs	r0, r0, r3
   39768:	bx	lr

0003976c <setKeyModifiers@@Base>:
   3976c:	push	{r4, r5, r6, r7, r8, lr}
   39770:	mov	r4, r0
   39774:	ldr	r0, [r0]
   39778:	mov	r8, r1
   3977c:	bl	39754 <isSpecialKey@@Base>
   39780:	cmp	r0, #0
   39784:	popne	{r4, r5, r6, r7, r8, pc}
   39788:	ldr	r6, [r4]
   3978c:	tst	r8, #1610612736	; 0x60000000
   39790:	bic	r7, r6, #-16777216	; 0xff000000
   39794:	and	r5, r6, #-16777216	; 0xff000000
   39798:	beq	397f4 <setKeyModifiers@@Base+0x88>
   3979c:	tst	r6, #1610612736	; 0x60000000
   397a0:	bne	397cc <setKeyModifiers@@Base+0x60>
   397a4:	mov	r0, r7
   397a8:	bl	f4ac <iswupper@plt>
   397ac:	cmp	r0, #0
   397b0:	beq	397cc <setKeyModifiers@@Base+0x60>
   397b4:	mov	r0, r7
   397b8:	bl	f434 <towlower@plt>
   397bc:	tst	r8, #536870912	; 0x20000000
   397c0:	orrne	r5, r5, #536870912	; 0x20000000
   397c4:	orreq	r5, r5, #1073741824	; 0x40000000
   397c8:	mov	r7, r0
   397cc:	tst	r8, #268435456	; 0x10000000
   397d0:	beq	39828 <setKeyModifiers@@Base+0xbc>
   397d4:	tst	r5, #268435456	; 0x10000000
   397d8:	bne	397e8 <setKeyModifiers@@Base+0x7c>
   397dc:	cmp	r7, #31
   397e0:	orrls	r7, r7, #96	; 0x60
   397e4:	orrls	r5, r5, #268435456	; 0x10000000
   397e8:	orr	r5, r5, r7
   397ec:	str	r5, [r4]
   397f0:	pop	{r4, r5, r6, r7, r8, pc}
   397f4:	tst	r6, #1610612736	; 0x60000000
   397f8:	beq	397cc <setKeyModifiers@@Base+0x60>
   397fc:	mov	r0, r7
   39800:	bl	f518 <iswalpha@plt>
   39804:	cmp	r0, #0
   39808:	beq	3981c <setKeyModifiers@@Base+0xb0>
   3980c:	mov	r0, r7
   39810:	and	r5, r6, #-1090519040	; 0xbf000000
   39814:	bl	fcec <towupper@plt>
   39818:	mov	r7, r0
   3981c:	tst	r8, #268435456	; 0x10000000
   39820:	bic	r5, r5, #536870912	; 0x20000000
   39824:	bne	397d4 <setKeyModifiers@@Base+0x68>
   39828:	tst	r5, #268435456	; 0x10000000
   3982c:	beq	397e8 <setKeyModifiers@@Base+0x7c>
   39830:	cmp	r7, #255	; 0xff
   39834:	bhi	39848 <setKeyModifiers@@Base+0xdc>
   39838:	and	r3, r7, #111	; 0x6f
   3983c:	cmp	r3, #47	; 0x2f
   39840:	orreq	r7, r7, #80	; 0x50
   39844:	andne	r7, r7, #159	; 0x9f
   39848:	bic	r5, r5, #268435456	; 0x10000000
   3984c:	b	397e8 <setKeyModifiers@@Base+0x7c>

00039850 <initializeBaseScreen@@Base>:
   39850:	ldr	r3, [pc, #168]	; 39900 <initializeBaseScreen@@Base+0xb0>
   39854:	ldr	ip, [pc, #168]	; 39904 <initializeBaseScreen@@Base+0xb4>
   39858:	push	{r4, r5, r6, r7, r8, r9, sl}
   3985c:	add	r3, pc, r3
   39860:	ldr	r2, [pc, #160]	; 39908 <initializeBaseScreen@@Base+0xb8>
   39864:	ldr	sl, [pc, #160]	; 3990c <initializeBaseScreen@@Base+0xbc>
   39868:	ldr	r9, [pc, #160]	; 39910 <initializeBaseScreen@@Base+0xc0>
   3986c:	add	r2, pc, r2
   39870:	ldr	r8, [pc, #156]	; 39914 <initializeBaseScreen@@Base+0xc4>
   39874:	add	sl, pc, sl
   39878:	ldr	r7, [pc, #152]	; 39918 <initializeBaseScreen@@Base+0xc8>
   3987c:	add	r9, pc, r9
   39880:	ldr	r6, [pc, #148]	; 3991c <initializeBaseScreen@@Base+0xcc>
   39884:	add	r8, pc, r8
   39888:	ldr	r5, [pc, #144]	; 39920 <initializeBaseScreen@@Base+0xd0>
   3988c:	add	r7, pc, r7
   39890:	ldr	r4, [pc, #140]	; 39924 <initializeBaseScreen@@Base+0xd4>
   39894:	add	r6, pc, r6
   39898:	ldr	r1, [pc, #136]	; 39928 <initializeBaseScreen@@Base+0xd8>
   3989c:	add	r5, pc, r5
   398a0:	add	r4, pc, r4
   398a4:	str	r2, [r0]
   398a8:	add	r1, pc, r1
   398ac:	str	sl, [r0, #32]
   398b0:	str	r1, [r0, #20]
   398b4:	str	r9, [r0, #36]	; 0x24
   398b8:	str	r8, [r0, #40]	; 0x28
   398bc:	str	r7, [r0, #4]
   398c0:	str	r6, [r0, #8]
   398c4:	str	r5, [r0, #12]
   398c8:	str	r4, [r0, #16]
   398cc:	ldr	ip, [r3, ip]
   398d0:	ldr	r1, [pc, #84]	; 3992c <initializeBaseScreen@@Base+0xdc>
   398d4:	ldr	r2, [pc, #84]	; 39930 <initializeBaseScreen@@Base+0xe0>
   398d8:	ldr	r3, [pc, #84]	; 39934 <initializeBaseScreen@@Base+0xe4>
   398dc:	add	r1, pc, r1
   398e0:	add	r2, pc, r2
   398e4:	str	ip, [r0, #24]
   398e8:	add	r3, pc, r3
   398ec:	str	r1, [r0, #28]
   398f0:	str	r2, [r0, #44]	; 0x2c
   398f4:	str	r3, [r0, #48]	; 0x30
   398f8:	pop	{r4, r5, r6, r7, r8, r9, sl}
   398fc:	bx	lr
   39900:	andeq	r9, r3, ip, lsl r2
   39904:	andeq	r0, r0, ip, ror r5
   39908:			; <UNDEFINED> instruction: 0xfffffe2c
   3990c:			; <UNDEFINED> instruction: 0xfffffe0c
   39910:			; <UNDEFINED> instruction: 0xfffffe0c
   39914:			; <UNDEFINED> instruction: 0xfffffe0c
   39918:			; <UNDEFINED> instruction: 0xfffffe58
   3991c:			; <UNDEFINED> instruction: 0xfffffe78
   39920:			; <UNDEFINED> instruction: 0xfffffe10
   39924:			; <UNDEFINED> instruction: 0xfffffe14
   39928:			; <UNDEFINED> instruction: 0xfffffe14
   3992c:			; <UNDEFINED> instruction: 0xfffffdf0
   39930:			; <UNDEFINED> instruction: 0xfffffdf4
   39934:			; <UNDEFINED> instruction: 0xfffffdf4

00039938 <describeBaseScreen@@Base>:
   39938:	push	{r3, r4, r5, lr}
   3993c:	mov	r5, #0
   39940:	ldrb	r2, [r1, #12]
   39944:	mov	r3, #1
   39948:	mov	r4, r1
   3994c:	strh	r3, [r1]
   39950:	orr	r2, r2, r3
   39954:	strh	r3, [r1, #2]
   39958:	strb	r2, [r1, #12]
   3995c:	strh	r5, [r1, #6]
   39960:	strh	r5, [r1, #4]
   39964:	str	r5, [r1, #8]
   39968:	str	r5, [r1, #16]
   3996c:	ldr	r3, [r0, #4]
   39970:	mov	r0, r1
   39974:	blx	r3
   39978:	ldr	r3, [r4, #16]
   3997c:	cmp	r3, r5
   39980:	beq	39994 <describeBaseScreen@@Base+0x5c>
   39984:	ldrb	r3, [r4, #12]
   39988:	bfi	r3, r5, #0, #1
   3998c:	strb	r3, [r4, #12]
   39990:	pop	{r3, r4, r5, pc}
   39994:	ldr	r3, [r4, #8]
   39998:	cmn	r3, #1
   3999c:	ldreq	r3, [pc, #8]	; 399ac <describeBaseScreen@@Base+0x74>
   399a0:	addeq	r3, pc, r3
   399a4:	streq	r3, [r4, #16]
   399a8:	pop	{r3, r4, r5, pc}
   399ac:	andeq	lr, r1, r8, lsl #31
   399b0:	ldr	r3, [pc, #28]	; 399d4 <describeBaseScreen@@Base+0x9c>
   399b4:	mov	r2, #0
   399b8:	mov	r0, #1
   399bc:	add	r3, pc, r3
   399c0:	str	r2, [r3]
   399c4:	str	r2, [r3, #4]
   399c8:	str	r2, [r3, #8]
   399cc:	str	r2, [r3, #12]
   399d0:	bx	lr
   399d4:	andeq	sl, r3, r0, ror #7
   399d8:	ldr	r3, [pc, #8]	; 399e8 <describeBaseScreen@@Base+0xb0>
   399dc:	add	r3, pc, r3
   399e0:	ldr	r0, [r3, #8]
   399e4:	bx	lr
   399e8:	andeq	sl, r3, r0, asr #7
   399ec:	ldr	r3, [pc, #12]	; 39a00 <describeBaseScreen@@Base+0xc8>
   399f0:	add	r3, pc, r3
   399f4:	ldr	r0, [r3, #12]
   399f8:	add	r0, r0, #1
   399fc:	bx	lr
   39a00:	andeq	sl, r3, ip, lsr #7
   39a04:	ldr	r1, [pc, #60]	; 39a48 <describeBaseScreen@@Base+0x110>
   39a08:	push	{r3, lr}
   39a0c:	add	r1, pc, r1
   39a10:	ldr	r2, [r1, #12]
   39a14:	ldr	r3, [r1, #8]
   39a18:	cmp	r2, r3
   39a1c:	bcs	39a30 <describeBaseScreen@@Base+0xf8>
   39a20:	add	r2, r2, r2, lsl #2
   39a24:	ldr	r3, [r1]
   39a28:	add	r0, r3, r2, lsl #2
   39a2c:	pop	{r3, pc}
   39a30:	ldr	r1, [pc, #20]	; 39a4c <describeBaseScreen@@Base+0x114>
   39a34:	mov	r0, #4
   39a38:	add	r1, pc, r1
   39a3c:	bl	1c634 <logMessage@@Base>
   39a40:	mov	r0, #0
   39a44:	pop	{r3, pc}
   39a48:	muleq	r3, r0, r3
   39a4c:	andeq	lr, r1, r4, lsl #30
   39a50:	push	{r3, lr}
   39a54:	bl	39a04 <describeBaseScreen@@Base+0xcc>
   39a58:	cmp	r0, #0
   39a5c:	ldrne	r0, [r0, #8]
   39a60:	pop	{r3, pc}
   39a64:	push	{r3, r4, r5, lr}
   39a68:	mov	r5, r0
   39a6c:	mov	r4, r1
   39a70:	bl	39a04 <describeBaseScreen@@Base+0xcc>
   39a74:	cmp	r0, #0
   39a78:	beq	39ac4 <describeBaseScreen@@Base+0x18c>
   39a7c:	cmn	r4, #1
   39a80:	beq	39a9c <describeBaseScreen@@Base+0x164>
   39a84:	cmp	r4, #0
   39a88:	blt	39ac4 <describeBaseScreen@@Base+0x18c>
   39a8c:	ldr	r3, [r0, #8]
   39a90:	cmp	r4, r3
   39a94:	bcs	39ac4 <describeBaseScreen@@Base+0x18c>
   39a98:	strb	r4, [r0, #16]
   39a9c:	cmn	r5, #1
   39aa0:	beq	39acc <describeBaseScreen@@Base+0x194>
   39aa4:	cmp	r5, #0
   39aa8:	blt	39ac4 <describeBaseScreen@@Base+0x18c>
   39aac:	ldr	r3, [r0, #12]
   39ab0:	cmp	r5, r3
   39ab4:	bcs	39ac4 <describeBaseScreen@@Base+0x18c>
   39ab8:	strb	r5, [r0, #17]
   39abc:	mov	r0, #1
   39ac0:	pop	{r3, r4, r5, pc}
   39ac4:	mov	r0, #0
   39ac8:	pop	{r3, r4, r5, pc}
   39acc:	mov	r0, #1
   39ad0:	pop	{r3, r4, r5, pc}
   39ad4:	push	{r4, lr}
   39ad8:	mov	r4, r0
   39adc:	bl	39a04 <describeBaseScreen@@Base+0xcc>
   39ae0:	subs	r2, r0, #0
   39ae4:	beq	39b0c <describeBaseScreen@@Base+0x1d4>
   39ae8:	sub	r3, r4, #63488	; 0xf800
   39aec:	sub	r3, r3, #4
   39af0:	cmp	r3, #3
   39af4:	addls	pc, pc, r3, lsl #2
   39af8:	b	39b0c <describeBaseScreen@@Base+0x1d4>
   39afc:	b	39b38 <describeBaseScreen@@Base+0x200>
   39b00:	b	39b50 <describeBaseScreen@@Base+0x218>
   39b04:	b	39b74 <describeBaseScreen@@Base+0x23c>
   39b08:	b	39b14 <describeBaseScreen@@Base+0x1dc>
   39b0c:	mov	r0, #0
   39b10:	pop	{r4, pc}
   39b14:	ldr	r1, [r2, #8]
   39b18:	ldrb	r3, [r2, #16]
   39b1c:	sub	r1, r1, #1
   39b20:	cmp	r3, r1
   39b24:	bcs	39b0c <describeBaseScreen@@Base+0x1d4>
   39b28:	add	r3, r3, #1
   39b2c:	mov	r0, #1
   39b30:	strb	r3, [r2, #16]
   39b34:	pop	{r4, pc}
   39b38:	ldrb	r0, [r2, #17]
   39b3c:	cmp	r0, #0
   39b40:	subne	r3, r0, #1
   39b44:	strbne	r3, [r2, #17]
   39b48:	movne	r0, #1
   39b4c:	pop	{r4, pc}
   39b50:	ldr	r1, [r2, #12]
   39b54:	ldrb	r3, [r2, #17]
   39b58:	sub	r1, r1, #1
   39b5c:	cmp	r3, r1
   39b60:	bcs	39b0c <describeBaseScreen@@Base+0x1d4>
   39b64:	add	r3, r3, #1
   39b68:	mov	r0, #1
   39b6c:	strb	r3, [r2, #17]
   39b70:	pop	{r4, pc}
   39b74:	ldrb	r0, [r2, #16]
   39b78:	cmp	r0, #0
   39b7c:	subne	r3, r0, #1
   39b80:	strbne	r3, [r2, #16]
   39b84:	movne	r0, #1
   39b88:	pop	{r4, pc}
   39b8c:	push	{r3, r4, r5, r6, r7, lr}
   39b90:	ldr	r5, [pc, #136]	; 39c20 <describeBaseScreen@@Base+0x2e8>
   39b94:	add	r5, pc, r5
   39b98:	ldmib	r5, {r3, r4}
   39b9c:	cmp	r4, r3
   39ba0:	beq	39be8 <describeBaseScreen@@Base+0x2b0>
   39ba4:	ldr	r1, [r5]
   39ba8:	add	r0, r4, #1
   39bac:	add	r4, r4, r4, lsl #2
   39bb0:	ldr	r5, [pc, #108]	; 39c24 <describeBaseScreen@@Base+0x2ec>
   39bb4:	mov	r2, #0
   39bb8:	mov	ip, #1
   39bbc:	lsl	r4, r4, #2
   39bc0:	add	r5, pc, r5
   39bc4:	add	r3, r1, r4
   39bc8:	str	r2, [r1, r4]
   39bcc:	str	r0, [r5, #8]
   39bd0:	str	r2, [r3, #4]
   39bd4:	str	r2, [r3, #8]
   39bd8:	strb	r2, [r3, #16]
   39bdc:	strb	r2, [r3, #17]
   39be0:	str	ip, [r3, #12]
   39be4:	pop	{r3, r4, r5, r6, r7, pc}
   39be8:	add	r6, r4, #1
   39bec:	ldr	r0, [r5]
   39bf0:	add	r1, r6, r6, lsl #2
   39bf4:	lsl	r1, r1, #2
   39bf8:	bl	f878 <realloc@plt>
   39bfc:	subs	r7, r0, #0
   39c00:	strne	r7, [r5]
   39c04:	strne	r6, [r5, #4]
   39c08:	movne	r1, r7
   39c0c:	movne	r0, r6
   39c10:	bne	39bac <describeBaseScreen@@Base+0x274>
   39c14:	bl	1c740 <logMallocError@@Base>
   39c18:	mov	r0, r7
   39c1c:	pop	{r3, r4, r5, r6, r7, pc}
   39c20:	andeq	sl, r3, r8, lsl #4
   39c24:	ldrdeq	sl, [r3], -ip
   39c28:	push	{r3, r4, r5, r6, r7, lr}
   39c2c:	mov	r6, r0
   39c30:	bl	39a04 <describeBaseScreen@@Base+0xcc>
   39c34:	subs	r4, r0, #0
   39c38:	beq	39ca4 <describeBaseScreen@@Base+0x36c>
   39c3c:	ldmib	r4, {r2, r3}
   39c40:	cmp	r3, r2
   39c44:	beq	39cac <describeBaseScreen@@Base+0x374>
   39c48:	ldr	r7, [r4]
   39c4c:	mov	r0, r6
   39c50:	add	r7, r7, r3, lsl #3
   39c54:	bl	f410 <wcslen@plt>
   39c58:	str	r0, [r7, #4]
   39c5c:	mov	r5, r0
   39c60:	ldr	r3, [r4, #12]
   39c64:	cmp	r0, r3
   39c68:	strhi	r0, [r4, #12]
   39c6c:	lsl	r0, r0, #2
   39c70:	bl	fb48 <malloc@plt>
   39c74:	cmp	r0, #0
   39c78:	str	r0, [r7]
   39c7c:	beq	39ca0 <describeBaseScreen@@Base+0x368>
   39c80:	mov	r1, r6
   39c84:	mov	r2, r5
   39c88:	bl	f620 <wmemcpy@plt>
   39c8c:	ldr	r3, [r4, #8]
   39c90:	mov	r0, #1
   39c94:	add	r3, r3, r0
   39c98:	str	r3, [r4, #8]
   39c9c:	pop	{r3, r4, r5, r6, r7, pc}
   39ca0:	bl	1c740 <logMallocError@@Base>
   39ca4:	mov	r0, #0
   39ca8:	pop	{r3, r4, r5, r6, r7, pc}
   39cac:	cmp	r3, #0
   39cb0:	ldr	r0, [r4]
   39cb4:	lslne	r1, r3, #4
   39cb8:	lslne	r5, r3, #1
   39cbc:	moveq	r1, #512	; 0x200
   39cc0:	moveq	r5, #64	; 0x40
   39cc4:	bl	f878 <realloc@plt>
   39cc8:	cmp	r0, #0
   39ccc:	beq	39ca0 <describeBaseScreen@@Base+0x368>
   39cd0:	ldr	r3, [r4, #8]
   39cd4:	mov	r7, r0
   39cd8:	stm	r4, {r0, r5}
   39cdc:	b	39c4c <describeBaseScreen@@Base+0x314>
   39ce0:	push	{r3, r4, r5, lr}
   39ce4:	mov	r5, r0
   39ce8:	ldr	r0, [r0]
   39cec:	cmp	r0, #0
   39cf0:	popeq	{r3, r4, r5, pc}
   39cf4:	ldr	r4, [r5, #8]
   39cf8:	add	r3, r0, r4, lsl #3
   39cfc:	b	39d14 <describeBaseScreen@@Base+0x3dc>
   39d00:	sub	r4, r4, #1
   39d04:	str	r4, [r5, #8]
   39d08:	ldr	r2, [r3, #-8]!
   39d0c:	cmp	r2, #0
   39d10:	bne	39d40 <describeBaseScreen@@Base+0x408>
   39d14:	cmp	r4, #0
   39d18:	bne	39d00 <describeBaseScreen@@Base+0x3c8>
   39d1c:	bl	f4f4 <free@plt>
   39d20:	mov	r3, #1
   39d24:	str	r4, [r5]
   39d28:	str	r4, [r5, #4]
   39d2c:	str	r4, [r5, #8]
   39d30:	strb	r4, [r5, #16]
   39d34:	strb	r4, [r5, #17]
   39d38:	str	r3, [r5, #12]
   39d3c:	pop	{r3, r4, r5, pc}
   39d40:	mov	r0, r2
   39d44:	bl	f4f4 <free@plt>
   39d48:	ldr	r0, [r5]
   39d4c:	b	39cf4 <describeBaseScreen@@Base+0x3bc>
   39d50:	push	{r3, lr}
   39d54:	bl	39a04 <describeBaseScreen@@Base+0xcc>
   39d58:	subs	r3, r0, #0
   39d5c:	beq	39d6c <describeBaseScreen@@Base+0x434>
   39d60:	bl	39ce0 <describeBaseScreen@@Base+0x3a8>
   39d64:	mov	r0, #1
   39d68:	pop	{r3, pc}
   39d6c:	mov	r0, r3
   39d70:	pop	{r3, pc}
   39d74:	push	{r3, r4, r5, r6, r7, lr}
   39d78:	ldr	r6, [pc, #104]	; 39de8 <describeBaseScreen@@Base+0x4b0>
   39d7c:	add	r6, pc, r6
   39d80:	ldr	r7, [r6]
   39d84:	cmp	r7, #0
   39d88:	beq	39dc8 <describeBaseScreen@@Base+0x490>
   39d8c:	ldr	r4, [r6, #8]
   39d90:	cmp	r4, #0
   39d94:	addne	r5, r4, r4, lsl #2
   39d98:	addne	r5, r7, r5, lsl #2
   39d9c:	subne	r5, r5, #20
   39da0:	beq	39dc0 <describeBaseScreen@@Base+0x488>
   39da4:	sub	r4, r4, #1
   39da8:	mov	r0, r5
   39dac:	str	r4, [r6, #8]
   39db0:	bl	39ce0 <describeBaseScreen@@Base+0x3a8>
   39db4:	cmp	r4, #0
   39db8:	sub	r5, r5, #20
   39dbc:	bne	39da4 <describeBaseScreen@@Base+0x46c>
   39dc0:	mov	r0, r7
   39dc4:	bl	f4f4 <free@plt>
   39dc8:	ldr	r3, [pc, #28]	; 39dec <describeBaseScreen@@Base+0x4b4>
   39dcc:	mov	r2, #0
   39dd0:	add	r3, pc, r3
   39dd4:	str	r2, [r3]
   39dd8:	str	r2, [r3, #4]
   39ddc:	str	r2, [r3, #8]
   39de0:	str	r2, [r3, #12]
   39de4:	pop	{r3, r4, r5, r6, r7, pc}
   39de8:	andeq	sl, r3, r0, lsr #32
   39dec:	andeq	r9, r3, ip, asr #31
   39df0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   39df4:	mov	r5, r0
   39df8:	mov	r4, r1
   39dfc:	bl	39a04 <describeBaseScreen@@Base+0xcc>
   39e00:	subs	r7, r0, #0
   39e04:	beq	39eb0 <describeBaseScreen@@Base+0x578>
   39e08:	mov	r0, r5
   39e0c:	ldr	r1, [r7, #12]
   39e10:	ldr	r2, [r7, #8]
   39e14:	bl	38da4 <validateScreenBox@@Base>
   39e18:	cmp	r0, #0
   39e1c:	beq	39eb0 <describeBaseScreen@@Base+0x578>
   39e20:	ldrsh	r3, [r5, #6]
   39e24:	cmp	r3, #0
   39e28:	ble	39ea8 <describeBaseScreen@@Base+0x570>
   39e2c:	ldrsh	r1, [r5, #4]
   39e30:	mov	r9, #0
   39e34:	mov	r8, #32
   39e38:	mov	r0, #7
   39e3c:	ldrsh	r6, [r5, #2]
   39e40:	cmp	r1, #0
   39e44:	ldr	r2, [r7]
   39e48:	add	r6, r6, r9
   39e4c:	add	r6, r2, r6, lsl #3
   39e50:	ble	39e9c <describeBaseScreen@@Base+0x564>
   39e54:	add	r2, r4, #8
   39e58:	mov	r3, #0
   39e5c:	ldrsh	r1, [r5]
   39e60:	mov	r4, r2
   39e64:	ldr	ip, [r6, #4]
   39e68:	add	r2, r2, #8
   39e6c:	add	r1, r1, r3
   39e70:	add	r3, r3, #1
   39e74:	cmp	r1, ip
   39e78:	strcs	r8, [r2, #-16]
   39e7c:	ldrcc	ip, [r6]
   39e80:	ldrcc	r1, [ip, r1, lsl #2]
   39e84:	strcc	r1, [r2, #-16]
   39e88:	strb	r0, [r4, #-4]
   39e8c:	ldrsh	r1, [r5, #4]
   39e90:	cmp	r1, r3
   39e94:	bgt	39e5c <describeBaseScreen@@Base+0x524>
   39e98:	ldrsh	r3, [r5, #6]
   39e9c:	add	r9, r9, #1
   39ea0:	cmp	r3, r9
   39ea4:	bgt	39e3c <describeBaseScreen@@Base+0x504>
   39ea8:	mov	r0, #1
   39eac:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   39eb0:	mov	r0, #0
   39eb4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   39eb8:	push	{r3, r4, r5, lr}
   39ebc:	add	r5, r0, r1
   39ec0:	ldr	r1, [pc, #60]	; 39f04 <describeBaseScreen@@Base+0x5cc>
   39ec4:	mov	r4, r0
   39ec8:	mov	r2, #5
   39ecc:	mov	r0, #0
   39ed0:	add	r1, pc, r1
   39ed4:	bl	f9bc <dcgettext@plt>
   39ed8:	ldr	r2, [pc, #40]	; 39f08 <describeBaseScreen@@Base+0x5d0>
   39edc:	rsb	r1, r4, r5
   39ee0:	add	r2, pc, r2
   39ee4:	mov	r3, r0
   39ee8:	mov	r0, r4
   39eec:	bl	f734 <snprintf@plt>
   39ef0:	add	r0, r4, r0
   39ef4:	cmp	r0, r5
   39ef8:	rsbls	r0, r4, r0
   39efc:	rsbhi	r0, r4, r5
   39f00:	pop	{r3, r4, r5, pc}
   39f04:	muleq	r1, r4, sl
   39f08:	muleq	r1, r4, r9
   39f0c:	mov	r0, #1
   39f10:	b	392a8 <userVirtualTerminal@@Base>
   39f14:	cmp	r0, #0
   39f18:	bxeq	lr
   39f1c:	ldr	r3, [pc, #28]	; 39f40 <describeBaseScreen@@Base+0x608>
   39f20:	add	r3, pc, r3
   39f24:	ldr	r2, [r3, #8]
   39f28:	cmp	r0, r2
   39f2c:	subls	r2, r0, #1
   39f30:	strls	r2, [r3, #12]
   39f34:	movls	r0, #1
   39f38:	movhi	r0, #0
   39f3c:	bx	lr
   39f40:	andeq	r9, r3, ip, ror lr
   39f44:	push	{r4, lr}
   39f48:	mov	r4, r0
   39f4c:	bl	39a04 <describeBaseScreen@@Base+0xcc>
   39f50:	subs	r3, r0, #0
   39f54:	beq	39f88 <describeBaseScreen@@Base+0x650>
   39f58:	ldrb	r2, [r3, #17]
   39f5c:	mov	r0, #1
   39f60:	strh	r2, [r4, #4]
   39f64:	ldrb	r2, [r3, #16]
   39f68:	strh	r2, [r4, #6]
   39f6c:	ldr	r2, [r3, #12]
   39f70:	strh	r2, [r4, #2]
   39f74:	ldr	r3, [r3, #8]
   39f78:	strh	r3, [r4]
   39f7c:	bl	392a8 <userVirtualTerminal@@Base>
   39f80:	str	r0, [r4, #8]
   39f84:	pop	{r4, pc}
   39f88:	ldr	r1, [pc, #16]	; 39fa0 <describeBaseScreen@@Base+0x668>
   39f8c:	mov	r2, #5
   39f90:	add	r1, pc, r1
   39f94:	bl	f9bc <dcgettext@plt>
   39f98:	str	r0, [r4, #16]
   39f9c:	pop	{r4, pc}
   39fa0:	andeq	lr, r1, r0, ror #19

00039fa4 <initializeHelpScreen@@Base>:
   39fa4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39fa8:	mov	r4, r0
   39fac:	bl	39850 <initializeBaseScreen@@Base>
   39fb0:	ldr	r1, [pc, #176]	; 3a068 <initializeHelpScreen@@Base+0xc4>
   39fb4:	ldr	r3, [pc, #176]	; 3a06c <initializeHelpScreen@@Base+0xc8>
   39fb8:	add	r1, pc, r1
   39fbc:	str	r1, [r4, #68]	; 0x44
   39fc0:	ldr	r1, [pc, #168]	; 3a070 <initializeHelpScreen@@Base+0xcc>
   39fc4:	add	r3, pc, r3
   39fc8:	ldr	fp, [pc, #164]	; 3a074 <initializeHelpScreen@@Base+0xd0>
   39fcc:	add	r1, pc, r1
   39fd0:	ldr	sl, [pc, #160]	; 3a078 <initializeHelpScreen@@Base+0xd4>
   39fd4:	ldr	r9, [pc, #160]	; 3a07c <initializeHelpScreen@@Base+0xd8>
   39fd8:	add	fp, pc, fp
   39fdc:	ldr	r8, [pc, #156]	; 3a080 <initializeHelpScreen@@Base+0xdc>
   39fe0:	add	sl, pc, sl
   39fe4:	ldr	r7, [pc, #152]	; 3a084 <initializeHelpScreen@@Base+0xe0>
   39fe8:	add	r9, pc, r9
   39fec:	ldr	r6, [pc, #148]	; 3a088 <initializeHelpScreen@@Base+0xe4>
   39ff0:	add	r8, pc, r8
   39ff4:	ldr	r5, [pc, #144]	; 3a08c <initializeHelpScreen@@Base+0xe8>
   39ff8:	add	r7, pc, r7
   39ffc:	ldr	ip, [pc, #140]	; 3a090 <initializeHelpScreen@@Base+0xec>
   3a000:	add	r6, pc, r6
   3a004:	ldr	r0, [pc, #136]	; 3a094 <initializeHelpScreen@@Base+0xf0>
   3a008:	add	r5, pc, r5
   3a00c:	ldr	r2, [pc, #132]	; 3a098 <initializeHelpScreen@@Base+0xf4>
   3a010:	add	ip, pc, ip
   3a014:	str	r3, [r4, #40]	; 0x28
   3a018:	add	r0, pc, r0
   3a01c:	ldr	r3, [pc, #120]	; 3a09c <initializeHelpScreen@@Base+0xf8>
   3a020:	add	r2, pc, r2
   3a024:	str	r1, [r4, #72]	; 0x48
   3a028:	ldr	r1, [pc, #112]	; 3a0a0 <initializeHelpScreen@@Base+0xfc>
   3a02c:	add	r3, pc, r3
   3a030:	str	fp, [r4]
   3a034:	add	r1, pc, r1
   3a038:	str	sl, [r4, #4]
   3a03c:	str	r9, [r4, #8]
   3a040:	str	r8, [r4, #12]
   3a044:	str	r7, [r4, #16]
   3a048:	str	r6, [r4, #52]	; 0x34
   3a04c:	str	r5, [r4, #56]	; 0x38
   3a050:	str	ip, [r4, #60]	; 0x3c
   3a054:	str	r0, [r4, #64]	; 0x40
   3a058:	str	r1, [r4, #76]	; 0x4c
   3a05c:	str	r2, [r4, #80]	; 0x50
   3a060:	str	r3, [r4, #84]	; 0x54
   3a064:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a068:			; <UNDEFINED> instruction: 0xfffffa2c
   3a06c:			; <UNDEFINED> instruction: 0xffffff40
   3a070:			; <UNDEFINED> instruction: 0xffffff40
   3a074:			; <UNDEFINED> instruction: 0xfffffed8
   3a078:			; <UNDEFINED> instruction: 0xffffff5c
   3a07c:			; <UNDEFINED> instruction: 0xfffffe00
   3a080:			; <UNDEFINED> instruction: 0xfffffadc
   3a084:			; <UNDEFINED> instruction: 0xfffffa64
   3a088:			; <UNDEFINED> instruction: 0xfffff9a8
   3a08c:			; <UNDEFINED> instruction: 0xfffffd64
   3a090:			; <UNDEFINED> instruction: 0xfffffb74
   3a094:			; <UNDEFINED> instruction: 0xfffff9b8
   3a098:			; <UNDEFINED> instruction: 0xfffffc00
   3a09c:			; <UNDEFINED> instruction: 0xfffffa1c
   3a0a0:			; <UNDEFINED> instruction: 0xfffffd14
   3a0a4:	push	{r4}		; (str r4, [sp, #-4]!)
   3a0a8:	mov	ip, r0
   3a0ac:	ldr	r4, [pc, #24]	; 3a0cc <initializeHelpScreen@@Base+0x128>
   3a0b0:	add	r4, pc, r4
   3a0b4:	ldm	r4!, {r0, r1, r2, r3}
   3a0b8:	stmia	ip!, {r0, r1, r2, r3}
   3a0bc:	ldr	r3, [r4]
   3a0c0:	str	r3, [ip]
   3a0c4:	pop	{r4}		; (ldr r4, [sp], #4)
   3a0c8:	bx	lr
   3a0cc:	strdeq	r9, [r3], -ip
   3a0d0:	ldr	r3, [pc, #8]	; 3a0e0 <initializeHelpScreen@@Base+0x13c>
   3a0d4:	add	r3, pc, r3
   3a0d8:	ldr	r0, [r3, #8]
   3a0dc:	bx	lr
   3a0e0:	ldrdeq	r9, [r3], -r8
   3a0e4:	push	{r4, lr}
   3a0e8:	ldr	r4, [pc, #28]	; 3a10c <initializeHelpScreen@@Base+0x168>
   3a0ec:	add	r4, pc, r4
   3a0f0:	ldr	r0, [r4, #20]
   3a0f4:	cmp	r0, #0
   3a0f8:	popeq	{r4, pc}
   3a0fc:	bl	f4f4 <free@plt>
   3a100:	mov	r3, #0
   3a104:	str	r3, [r4, #20]
   3a108:	pop	{r4, pc}
   3a10c:	andeq	r9, r3, r0, asr #25
   3a110:	ldr	r3, [pc, #192]	; 3a1d8 <initializeHelpScreen@@Base+0x234>
   3a114:	ldr	r2, [pc, #192]	; 3a1dc <initializeHelpScreen@@Base+0x238>
   3a118:	add	r3, pc, r3
   3a11c:	push	{r4, r5, r6, r7, r8, lr}
   3a120:	sub	sp, sp, #24
   3a124:	ldr	r5, [r3, r2]
   3a128:	mov	r8, r0
   3a12c:	ldr	r4, [pc, #172]	; 3a1e0 <initializeHelpScreen@@Base+0x23c>
   3a130:	ldr	r3, [r5]
   3a134:	add	r4, pc, r4
   3a138:	mov	r1, r4
   3a13c:	str	r3, [sp, #20]
   3a140:	bl	39938 <describeBaseScreen@@Base>
   3a144:	ldrh	r6, [r4]
   3a148:	mov	r1, #8
   3a14c:	ldrh	r7, [r4, #2]
   3a150:	smulbb	r0, r6, r7
   3a154:	bl	fac4 <calloc@plt>
   3a158:	cmp	r0, #0
   3a15c:	str	r0, [r4, #20]
   3a160:	beq	3a1c0 <initializeHelpScreen@@Base+0x21c>
   3a164:	mov	r3, #0
   3a168:	mov	r1, r0
   3a16c:	strh	r6, [sp, #18]
   3a170:	add	r0, sp, #12
   3a174:	strh	r7, [sp, #16]
   3a178:	ldr	r2, [r8, #8]
   3a17c:	strh	r3, [sp, #12]
   3a180:	strh	r3, [sp, #14]
   3a184:	blx	r2
   3a188:	subs	r6, r0, #0
   3a18c:	movne	r6, #1
   3a190:	beq	3a1b0 <initializeHelpScreen@@Base+0x20c>
   3a194:	ldr	r2, [sp, #20]
   3a198:	mov	r0, r6
   3a19c:	ldr	r3, [r5]
   3a1a0:	cmp	r2, r3
   3a1a4:	bne	3a1d4 <initializeHelpScreen@@Base+0x230>
   3a1a8:	add	sp, sp, #24
   3a1ac:	pop	{r4, r5, r6, r7, r8, pc}
   3a1b0:	ldr	r0, [r4, #20]
   3a1b4:	bl	f4f4 <free@plt>
   3a1b8:	str	r6, [r4, #20]
   3a1bc:	b	3a194 <initializeHelpScreen@@Base+0x1f0>
   3a1c0:	str	r0, [sp, #4]
   3a1c4:	bl	1c740 <logMallocError@@Base>
   3a1c8:	ldr	r0, [sp, #4]
   3a1cc:	mov	r6, r0
   3a1d0:	b	3a194 <initializeHelpScreen@@Base+0x1f0>
   3a1d4:	bl	f950 <__stack_chk_fail@plt>
   3a1d8:	andeq	r8, r3, r0, ror #18
   3a1dc:			; <UNDEFINED> instruction: 0x000003b4
   3a1e0:	andeq	r9, r3, r8, ror ip
   3a1e4:	push	{r4, r5, r6, r7, r8, lr}
   3a1e8:	mov	r6, r1
   3a1ec:	ldr	r7, [pc, #112]	; 3a264 <initializeHelpScreen@@Base+0x2c0>
   3a1f0:	mov	r5, r0
   3a1f4:	add	r7, pc, r7
   3a1f8:	ldrsh	r1, [r7, #2]
   3a1fc:	ldrsh	r2, [r7]
   3a200:	bl	38da4 <validateScreenBox@@Base>
   3a204:	cmp	r0, #0
   3a208:	popeq	{r4, r5, r6, r7, r8, pc}
   3a20c:	ldrsh	r3, [r5, #6]
   3a210:	cmp	r3, #0
   3a214:	ldrgt	r8, [r7, #20]
   3a218:	movgt	r4, #0
   3a21c:	ble	3a25c <initializeHelpScreen@@Base+0x2b8>
   3a220:	ldrsh	r1, [r5, #2]
   3a224:	ldrsh	r2, [r7, #2]
   3a228:	ldrsh	r3, [r5]
   3a22c:	add	r1, r4, r1
   3a230:	ldrsh	r0, [r5, #4]
   3a234:	mla	r1, r2, r1, r3
   3a238:	lsl	r2, r0, #3
   3a23c:	mul	r0, r4, r0
   3a240:	add	r4, r4, #1
   3a244:	add	r1, r8, r1, lsl #3
   3a248:	add	r0, r6, r0, lsl #3
   3a24c:	bl	fb24 <memcpy@plt>
   3a250:	ldrsh	r3, [r5, #6]
   3a254:	cmp	r4, r3
   3a258:	blt	3a220 <initializeHelpScreen@@Base+0x27c>
   3a25c:	mov	r0, #1
   3a260:	pop	{r4, r5, r6, r7, r8, pc}
   3a264:			; <UNDEFINED> instruction: 0x00039bb8

0003a268 <initializeFrozenScreen@@Base>:
   3a268:	push	{r4, r5, r6, lr}
   3a26c:	mov	r4, r0
   3a270:	bl	39850 <initializeBaseScreen@@Base>
   3a274:	ldr	r3, [pc, #72]	; 3a2c4 <initializeFrozenScreen@@Base+0x5c>
   3a278:	mov	r2, #0
   3a27c:	ldr	r6, [pc, #68]	; 3a2c8 <initializeFrozenScreen@@Base+0x60>
   3a280:	ldr	r5, [pc, #68]	; 3a2cc <initializeFrozenScreen@@Base+0x64>
   3a284:	add	r3, pc, r3
   3a288:	ldr	ip, [pc, #64]	; 3a2d0 <initializeFrozenScreen@@Base+0x68>
   3a28c:	add	r6, pc, r6
   3a290:	ldr	r0, [pc, #60]	; 3a2d4 <initializeFrozenScreen@@Base+0x6c>
   3a294:	add	r5, pc, r5
   3a298:	ldr	r1, [pc, #56]	; 3a2d8 <initializeFrozenScreen@@Base+0x70>
   3a29c:	add	ip, pc, ip
   3a2a0:	add	r0, pc, r0
   3a2a4:	str	r6, [r4, #4]
   3a2a8:	add	r1, pc, r1
   3a2ac:	str	r5, [r4, #8]
   3a2b0:	str	ip, [r4, #40]	; 0x28
   3a2b4:	str	r0, [r4, #52]	; 0x34
   3a2b8:	str	r1, [r4, #56]	; 0x38
   3a2bc:	str	r2, [r3, #20]
   3a2c0:	pop	{r4, r5, r6, pc}
   3a2c4:	andeq	r9, r3, r8, lsr #22
   3a2c8:			; <UNDEFINED> instruction: 0xfffffe10
   3a2cc:			; <UNDEFINED> instruction: 0xffffff48
   3a2d0:			; <UNDEFINED> instruction: 0xfffffe2c
   3a2d4:			; <UNDEFINED> instruction: 0xfffffe68
   3a2d8:			; <UNDEFINED> instruction: 0xfffffe34
   3a2dc:	ldr	r3, [pc, #12]	; 3a2f0 <initializeFrozenScreen@@Base+0x88>
   3a2e0:	mov	r2, #0
   3a2e4:	add	r3, pc, r3
   3a2e8:	str	r2, [r3]
   3a2ec:	bx	lr
   3a2f0:	andeq	r9, r3, r0, ror #21
   3a2f4:	mov	r0, #0
   3a2f8:	bx	lr
   3a2fc:	push	{r3, r4, r5, lr}
   3a300:	add	r5, r0, r1
   3a304:	ldr	r1, [pc, #60]	; 3a348 <initializeFrozenScreen@@Base+0xe0>
   3a308:	mov	r4, r0
   3a30c:	mov	r2, #5
   3a310:	mov	r0, #0
   3a314:	add	r1, pc, r1
   3a318:	bl	f9bc <dcgettext@plt>
   3a31c:	ldr	r2, [pc, #40]	; 3a34c <initializeFrozenScreen@@Base+0xe4>
   3a320:	rsb	r1, r4, r5
   3a324:	add	r2, pc, r2
   3a328:	mov	r3, r0
   3a32c:	mov	r0, r4
   3a330:	bl	f734 <snprintf@plt>
   3a334:	add	r0, r4, r0
   3a338:	cmp	r0, r5
   3a33c:	rsbls	r0, r4, r0
   3a340:	rsbhi	r0, r4, r5
   3a344:	pop	{r3, r4, r5, pc}
   3a348:	andeq	lr, r1, r8, ror r6
   3a34c:	andeq	r4, r1, r0, asr r5
   3a350:	mov	r0, #2
   3a354:	b	392a8 <userVirtualTerminal@@Base>
   3a358:	push	{r4, r5, r6, lr}
   3a35c:	mov	r4, r0
   3a360:	ldr	r5, [pc, #64]	; 3a3a8 <initializeFrozenScreen@@Base+0x140>
   3a364:	add	r5, pc, r5
   3a368:	ldr	r0, [r5]
   3a36c:	bl	259dc <getCurrentSubmenu@@Base>
   3a370:	mov	r3, #0
   3a374:	strh	r3, [r4, #4]
   3a378:	mov	r6, r0
   3a37c:	bl	25044 <getMenuIndex@@Base>
   3a380:	ldr	r3, [r5, #4]
   3a384:	strh	r3, [r4, #2]
   3a388:	strh	r0, [r4, #6]
   3a38c:	mov	r0, r6
   3a390:	bl	2503c <getMenuSize@@Base>
   3a394:	strh	r0, [r4]
   3a398:	mov	r0, #2
   3a39c:	bl	392a8 <userVirtualTerminal@@Base>
   3a3a0:	str	r0, [r4, #8]
   3a3a4:	pop	{r4, r5, r6, pc}
   3a3a8:	andeq	r9, r3, r0, ror #20
   3a3ac:	ldr	r3, [pc, #636]	; 3a630 <initializeFrozenScreen@@Base+0x3c8>
   3a3b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a3b4:	add	fp, sp, #32
   3a3b8:	ldr	ip, [pc, #628]	; 3a634 <initializeFrozenScreen@@Base+0x3cc>
   3a3bc:	sub	sp, sp, #540	; 0x21c
   3a3c0:	add	r3, pc, r3
   3a3c4:	mov	r8, r1
   3a3c8:	mov	r6, r2
   3a3cc:	ldr	ip, [r3, ip]
   3a3d0:	mov	r9, r0
   3a3d4:	sub	r5, fp, #552	; 0x228
   3a3d8:	sub	r4, fp, #296	; 0x128
   3a3dc:	ldr	r3, [ip]
   3a3e0:	str	ip, [fp, #-560]	; 0xfffffdd0
   3a3e4:	str	r3, [fp, #-40]	; 0xffffffd8
   3a3e8:	bl	252b0 <getMenuItemName@@Base>
   3a3ec:	ldr	r2, [pc, #580]	; 3a638 <initializeFrozenScreen@@Base+0x3d0>
   3a3f0:	mov	r1, #256	; 0x100
   3a3f4:	add	r2, pc, r2
   3a3f8:	mov	r7, r0
   3a3fc:	mov	r0, r5
   3a400:	ldr	r3, [r7]
   3a404:	bl	f734 <snprintf@plt>
   3a408:	ldr	r3, [r7, #4]
   3a40c:	ldrb	r2, [r3]
   3a410:	add	r0, r5, r0
   3a414:	cmp	r0, r4
   3a418:	movcc	sl, r0
   3a41c:	movcs	sl, r4
   3a420:	cmp	r2, #0
   3a424:	bne	3a568 <initializeFrozenScreen@@Base+0x300>
   3a428:	mov	r0, r9
   3a42c:	bl	252a0 <isSettableMenuItem@@Base>
   3a430:	cmp	r0, #0
   3a434:	bne	3a5ac <initializeFrozenScreen@@Base+0x344>
   3a438:	ldr	r2, [pc, #508]	; 3a63c <initializeFrozenScreen@@Base+0x3d4>
   3a43c:	rsb	r1, sl, r4
   3a440:	mov	r0, sl
   3a444:	add	r2, pc, r2
   3a448:	bl	f734 <snprintf@plt>
   3a44c:	add	sl, sl, r0
   3a450:	mov	r0, r9
   3a454:	bl	25318 <getMenuItemValue@@Base>
   3a458:	cmp	sl, r4
   3a45c:	rsbls	sl, r5, sl
   3a460:	rsbhi	sl, r5, r4
   3a464:	mov	r7, r0
   3a468:	mov	r0, r9
   3a46c:	bl	2532c <getMenuItemComment@@Base>
   3a470:	mov	r9, r0
   3a474:	ldrb	r0, [r7]
   3a478:	cmp	r0, #0
   3a47c:	beq	3a614 <initializeFrozenScreen@@Base+0x3ac>
   3a480:	ldr	r2, [pc, #440]	; 3a640 <initializeFrozenScreen@@Base+0x3d8>
   3a484:	mov	r3, r7
   3a488:	mov	r0, r4
   3a48c:	mov	r1, #256	; 0x100
   3a490:	add	r2, pc, r2
   3a494:	bl	f734 <snprintf@plt>
   3a498:	ldrb	r3, [r9]
   3a49c:	sub	ip, fp, #40	; 0x28
   3a4a0:	add	r0, r4, r0
   3a4a4:	cmp	r0, ip
   3a4a8:	movcc	r7, r0
   3a4ac:	movcs	r7, ip
   3a4b0:	cmp	r3, #0
   3a4b4:	bne	3a5d4 <initializeFrozenScreen@@Base+0x36c>
   3a4b8:	rsb	r7, r4, r7
   3a4bc:	mov	r1, r5
   3a4c0:	add	sl, r7, sl
   3a4c4:	ldr	r9, [pc, #376]	; 3a644 <initializeFrozenScreen@@Base+0x3dc>
   3a4c8:	lsl	r3, sl, #2
   3a4cc:	mov	r2, sl
   3a4d0:	add	r3, r3, #10
   3a4d4:	add	r9, pc, r9
   3a4d8:	bic	r3, r3, #7
   3a4dc:	sub	sp, sp, r3
   3a4e0:	add	r7, sp, #8
   3a4e4:	mov	r0, r7
   3a4e8:	bl	f560 <mbstowcs@plt>
   3a4ec:	mov	r1, r4
   3a4f0:	mov	r5, r0
   3a4f4:	rsb	r2, r0, sl
   3a4f8:	add	r0, r7, r0, lsl #2
   3a4fc:	cmp	r5, r6
   3a500:	strls	r5, [r9, #8]
   3a504:	strhi	r6, [r9, #8]
   3a508:	bl	f560 <mbstowcs@plt>
   3a50c:	ldr	r3, [r9, #4]
   3a510:	mov	r1, r7
   3a514:	add	r0, r0, r5
   3a518:	cmp	r0, r6
   3a51c:	movcc	r4, r0
   3a520:	movcs	r4, r6
   3a524:	cmp	r0, r3
   3a528:	strhi	r0, [r9, #4]
   3a52c:	mov	r0, r8
   3a530:	mov	r2, r4
   3a534:	str	r4, [r9, #12]
   3a538:	bl	f620 <wmemcpy@plt>
   3a53c:	rsb	r2, r4, r6
   3a540:	mov	r1, #32
   3a544:	add	r0, r8, r4, lsl #2
   3a548:	bl	f95c <wmemset@plt>
   3a54c:	ldr	r1, [fp, #-560]	; 0xfffffdd0
   3a550:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3a554:	ldr	r3, [r1]
   3a558:	cmp	r2, r3
   3a55c:	bne	3a62c <initializeFrozenScreen@@Base+0x3c4>
   3a560:	sub	sp, fp, #32
   3a564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a568:	ldr	ip, [pc, #216]	; 3a648 <initializeFrozenScreen@@Base+0x3e0>
   3a56c:	rsb	r1, sl, r4
   3a570:	mov	r0, sl
   3a574:	str	r3, [sp, #4]
   3a578:	add	ip, pc, ip
   3a57c:	mov	r2, #1
   3a580:	mvn	r3, #0
   3a584:	str	ip, [sp]
   3a588:	bl	fb60 <__snprintf_chk@plt>
   3a58c:	add	r0, sl, r0
   3a590:	cmp	r0, r4
   3a594:	movcc	sl, r0
   3a598:	movcs	sl, r4
   3a59c:	mov	r0, r9
   3a5a0:	bl	252a0 <isSettableMenuItem@@Base>
   3a5a4:	cmp	r0, #0
   3a5a8:	beq	3a438 <initializeFrozenScreen@@Base+0x1d0>
   3a5ac:	ldr	r2, [pc, #152]	; 3a64c <initializeFrozenScreen@@Base+0x3e4>
   3a5b0:	mov	r0, sl
   3a5b4:	rsb	r1, sl, r4
   3a5b8:	add	r2, pc, r2
   3a5bc:	bl	f734 <snprintf@plt>
   3a5c0:	add	r0, sl, r0
   3a5c4:	cmp	r0, r4
   3a5c8:	movcc	sl, r0
   3a5cc:	movcs	sl, r4
   3a5d0:	b	3a438 <initializeFrozenScreen@@Base+0x1d0>
   3a5d4:	ldr	lr, [pc, #116]	; 3a650 <initializeFrozenScreen@@Base+0x3e8>
   3a5d8:	rsb	r1, r7, ip
   3a5dc:	mov	r0, r7
   3a5e0:	str	r9, [sp, #4]
   3a5e4:	add	lr, pc, lr
   3a5e8:	mov	r2, #1
   3a5ec:	mvn	r3, #0
   3a5f0:	str	lr, [sp]
   3a5f4:	str	ip, [fp, #-564]	; 0xfffffdcc
   3a5f8:	bl	fb60 <__snprintf_chk@plt>
   3a5fc:	ldr	ip, [fp, #-564]	; 0xfffffdcc
   3a600:	add	r0, r7, r0
   3a604:	cmp	r0, ip
   3a608:	movcc	r7, r0
   3a60c:	movcs	r7, ip
   3a610:	b	3a4b8 <initializeFrozenScreen@@Base+0x250>
   3a614:	ldr	r1, [pc, #56]	; 3a654 <initializeFrozenScreen@@Base+0x3ec>
   3a618:	mov	r2, #5
   3a61c:	add	r1, pc, r1
   3a620:	bl	f9bc <dcgettext@plt>
   3a624:	mov	r7, r0
   3a628:	b	3a480 <initializeFrozenScreen@@Base+0x218>
   3a62c:	bl	f950 <__stack_chk_fail@plt>
   3a630:			; <UNDEFINED> instruction: 0x000386b8
   3a634:			; <UNDEFINED> instruction: 0x000003b4
   3a638:	andeq	r4, r1, r0, lsl #9
   3a63c:	andeq	r6, r1, r4, asr pc
   3a640:	andeq	r4, r1, r4, ror #7
   3a644:	strdeq	r9, [r3], -r0
   3a648:	andeq	r4, r1, r8, ror sl
   3a64c:	muleq	r1, r0, r1
   3a650:	strdeq	pc, [r1], -r8
   3a654:	andeq	lr, r1, r4, lsl #7
   3a658:	ldr	r3, [pc, #308]	; 3a794 <initializeFrozenScreen@@Base+0x52c>
   3a65c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a660:	add	fp, sp, #32
   3a664:	ldr	r2, [pc, #300]	; 3a798 <initializeFrozenScreen@@Base+0x530>
   3a668:	sub	sp, sp, #28
   3a66c:	add	r3, pc, r3
   3a670:	ldr	r6, [pc, #292]	; 3a79c <initializeFrozenScreen@@Base+0x534>
   3a674:	mov	r5, r0
   3a678:	ldr	r2, [r3, r2]
   3a67c:	mov	r4, r1
   3a680:	add	r6, pc, r6
   3a684:	ldr	r3, [r2]
   3a688:	ldr	r0, [r6]
   3a68c:	str	r2, [fp, #-52]	; 0xffffffcc
   3a690:	str	r3, [fp, #-40]	; 0xffffffd8
   3a694:	bl	259dc <getCurrentSubmenu@@Base>
   3a698:	ldr	r8, [r6, #4]
   3a69c:	mov	r7, r0
   3a6a0:	bl	2503c <getMenuSize@@Base>
   3a6a4:	mov	r1, r8
   3a6a8:	mov	r2, r0
   3a6ac:	mov	r0, r5
   3a6b0:	bl	38da4 <validateScreenBox@@Base>
   3a6b4:	cmp	r0, #0
   3a6b8:	bne	3a6d8 <initializeFrozenScreen@@Base+0x470>
   3a6bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3a6c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3a6c4:	ldr	r3, [r1]
   3a6c8:	cmp	r2, r3
   3a6cc:	bne	3a790 <initializeFrozenScreen@@Base+0x528>
   3a6d0:	sub	sp, fp, #32
   3a6d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a6d8:	ldr	r8, [r6, #4]
   3a6dc:	ldrsh	r9, [r5, #6]
   3a6e0:	str	sp, [fp, #-56]	; 0xffffffc8
   3a6e4:	lsl	r8, r8, #2
   3a6e8:	cmp	r9, #0
   3a6ec:	add	r3, r8, #10
   3a6f0:	bic	r3, r3, #7
   3a6f4:	sub	sp, sp, r3
   3a6f8:	mov	sl, sp
   3a6fc:	beq	3a784 <initializeFrozenScreen@@Base+0x51c>
   3a700:	ldr	r3, [pc, #152]	; 3a7a0 <initializeFrozenScreen@@Base+0x538>
   3a704:	lsr	r8, r8, #2
   3a708:	mov	r6, #7
   3a70c:	add	r3, pc, r3
   3a710:	str	r3, [fp, #-48]	; 0xffffffd0
   3a714:	ldrsh	r1, [r5, #2]
   3a718:	sub	r9, r9, #1
   3a71c:	mov	r0, r7
   3a720:	add	r1, r9, r1
   3a724:	bl	2504c <getMenuItem@@Base>
   3a728:	mov	r2, r8
   3a72c:	mov	r1, sl
   3a730:	bl	3a3ac <initializeFrozenScreen@@Base+0x144>
   3a734:	ldrsh	r2, [r5, #4]
   3a738:	cmp	r2, #0
   3a73c:	beq	3a77c <initializeFrozenScreen@@Base+0x514>
   3a740:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a744:	mov	r2, #0
   3a748:	ldr	r0, [r3, #12]
   3a74c:	ldrsh	r1, [r5]
   3a750:	add	r4, r4, #8
   3a754:	add	r1, r2, r1
   3a758:	add	r2, r2, #1
   3a75c:	cmp	r1, r0
   3a760:	ldrcc	r1, [sl, r1, lsl #2]
   3a764:	movcs	r1, #32
   3a768:	strb	r6, [r4, #-4]
   3a76c:	str	r1, [r4, #-8]
   3a770:	ldrsh	r1, [r5, #4]
   3a774:	cmp	r1, r2
   3a778:	bhi	3a74c <initializeFrozenScreen@@Base+0x4e4>
   3a77c:	cmp	r9, #0
   3a780:	bne	3a714 <initializeFrozenScreen@@Base+0x4ac>
   3a784:	mov	r0, #1
   3a788:	ldr	sp, [fp, #-56]	; 0xffffffc8
   3a78c:	b	3a6bc <initializeFrozenScreen@@Base+0x454>
   3a790:	bl	f950 <__stack_chk_fail@plt>
   3a794:	andeq	r8, r3, ip, lsl #8
   3a798:			; <UNDEFINED> instruction: 0x000003b4
   3a79c:	andeq	r9, r3, r4, asr #14
   3a7a0:			; <UNDEFINED> instruction: 0x000396b8
   3a7a4:	ldr	r2, [pc, #104]	; 3a814 <initializeFrozenScreen@@Base+0x5ac>
   3a7a8:	ldr	r3, [pc, #104]	; 3a818 <initializeFrozenScreen@@Base+0x5b0>
   3a7ac:	push	{r4, r5, r6, fp, lr}
   3a7b0:	add	fp, sp, #16
   3a7b4:	ldr	r1, [pc, #96]	; 3a81c <initializeFrozenScreen@@Base+0x5b4>
   3a7b8:	sub	sp, sp, #12
   3a7bc:	add	r3, pc, r3
   3a7c0:	add	r2, pc, r2
   3a7c4:	ldr	r4, [r3, r1]
   3a7c8:	ldm	r2, {r0, r5}
   3a7cc:	lsl	r5, r5, #2
   3a7d0:	ldr	r3, [r4]
   3a7d4:	add	r2, r5, #10
   3a7d8:	bic	r2, r2, #7
   3a7dc:	sub	sp, sp, r2
   3a7e0:	str	r3, [fp, #-24]	; 0xffffffe8
   3a7e4:	bl	259dc <getCurrentSubmenu@@Base>
   3a7e8:	bl	25968 <getCurrentMenuItem@@Base>
   3a7ec:	lsr	r2, r5, #2
   3a7f0:	mov	r1, sp
   3a7f4:	bl	3a3ac <initializeFrozenScreen@@Base+0x144>
   3a7f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a7fc:	ldr	r3, [r4]
   3a800:	cmp	r2, r3
   3a804:	bne	3a810 <initializeFrozenScreen@@Base+0x5a8>
   3a808:	sub	sp, fp, #16
   3a80c:	pop	{r4, r5, r6, fp, pc}
   3a810:	bl	f950 <__stack_chk_fail@plt>
   3a814:	andeq	r9, r3, r4, lsl #12
   3a818:			; <UNDEFINED> instruction: 0x000382bc
   3a81c:			; <UNDEFINED> instruction: 0x000003b4
   3a820:	ldr	r3, [pc, #24]	; 3a840 <initializeFrozenScreen@@Base+0x5d8>
   3a824:	push	{r4, lr}
   3a828:	add	r3, pc, r3
   3a82c:	mov	r4, #1
   3a830:	stm	r3, {r0, r4}
   3a834:	bl	3a7a4 <initializeFrozenScreen@@Base+0x53c>
   3a838:	mov	r0, r4
   3a83c:	pop	{r4, pc}
   3a840:	muleq	r3, ip, r5
   3a844:	ldr	r3, [pc, #84]	; 3a8a0 <initializeFrozenScreen@@Base+0x638>
   3a848:	ldr	r0, [pc, #84]	; 3a8a4 <initializeFrozenScreen@@Base+0x63c>
   3a84c:	ldr	r1, [pc, #84]	; 3a8a8 <initializeFrozenScreen@@Base+0x640>
   3a850:	add	r3, pc, r3
   3a854:	ldr	r2, [pc, #80]	; 3a8ac <initializeFrozenScreen@@Base+0x644>
   3a858:	ldr	r0, [r3, r0]
   3a85c:	ldr	r1, [r3, r1]
   3a860:	ldr	r2, [r3, r2]
   3a864:	ldr	r3, [r0]
   3a868:	ldr	ip, [r1, #4]
   3a86c:	ldr	r1, [r2]
   3a870:	ldr	r2, [pc, #56]	; 3a8b0 <initializeFrozenScreen@@Base+0x648>
   3a874:	mul	ip, ip, r3
   3a878:	add	r2, pc, r2
   3a87c:	ldr	r3, [r1, #8]
   3a880:	ldr	r0, [r2, #12]
   3a884:	rsb	r0, r3, r0
   3a888:	cmp	ip, r0
   3a88c:	bcs	3a89c <initializeFrozenScreen@@Base+0x634>
   3a890:	ldr	r2, [r2, #8]
   3a894:	cmp	r3, r2
   3a898:	strcc	r2, [r1, #8]
   3a89c:	b	3a7a4 <initializeFrozenScreen@@Base+0x53c>
   3a8a0:	andeq	r8, r3, r8, lsr #4
   3a8a4:	andeq	r0, r0, r0, asr #7
   3a8a8:	andeq	r0, r0, r8, asr #10
   3a8ac:			; <UNDEFINED> instruction: 0x000003b8
   3a8b0:	andeq	r9, r3, ip, asr #10
   3a8b4:	push	{r3, r4, r5, r6, r7, lr}
   3a8b8:	ldr	r3, [r0]
   3a8bc:	ldr	r4, [pc, #700]	; 3ab80 <initializeFrozenScreen@@Base+0x918>
   3a8c0:	cmp	r3, #56	; 0x38
   3a8c4:	add	r4, pc, r4
   3a8c8:	beq	3ab2c <initializeFrozenScreen@@Base+0x8c4>
   3a8cc:	ble	3a9b4 <initializeFrozenScreen@@Base+0x74c>
   3a8d0:	movw	r2, #8196	; 0x2004
   3a8d4:	cmp	r3, r2
   3a8d8:	beq	3aaec <initializeFrozenScreen@@Base+0x884>
   3a8dc:	bgt	3a978 <initializeFrozenScreen@@Base+0x710>
   3a8e0:	cmp	r3, #60	; 0x3c
   3a8e4:	beq	3aac0 <initializeFrozenScreen@@Base+0x858>
   3a8e8:	ble	3aa74 <initializeFrozenScreen@@Base+0x80c>
   3a8ec:	cmp	r3, #8192	; 0x2000
   3a8f0:	beq	3ab0c <initializeFrozenScreen@@Base+0x8a4>
   3a8f4:	movw	r2, #8195	; 0x2003
   3a8f8:	cmp	r3, r2
   3a8fc:	beq	3a9a4 <initializeFrozenScreen@@Base+0x73c>
   3a900:	cmp	r3, #82	; 0x52
   3a904:	beq	3a9dc <initializeFrozenScreen@@Base+0x774>
   3a908:	and	r2, r3, #65280	; 0xff00
   3a90c:	cmp	r2, #256	; 0x100
   3a910:	movne	r3, #0
   3a914:	bne	3aa10 <initializeFrozenScreen@@Base+0x7a8>
   3a918:	ldr	r2, [pc, #612]	; 3ab84 <initializeFrozenScreen@@Base+0x91c>
   3a91c:	uxtb	r5, r3
   3a920:	ldr	r6, [r4, r2]
   3a924:	ldr	r3, [r6]
   3a928:	cmp	r5, r3
   3a92c:	bcc	3aa98 <initializeFrozenScreen@@Base+0x830>
   3a930:	ldr	r2, [pc, #592]	; 3ab88 <initializeFrozenScreen@@Base+0x920>
   3a934:	ldr	r7, [r4, r2]
   3a938:	ldr	r2, [r7]
   3a93c:	add	r3, r3, r2
   3a940:	cmp	r5, r3
   3a944:	bcs	3aa98 <initializeFrozenScreen@@Base+0x830>
   3a948:	ldr	r3, [pc, #572]	; 3ab8c <initializeFrozenScreen@@Base+0x924>
   3a94c:	ldr	r0, [pc, r3]
   3a950:	bl	259dc <getCurrentSubmenu@@Base>
   3a954:	bl	25968 <getCurrentMenuItem@@Base>
   3a958:	ldr	r1, [r6]
   3a95c:	ldr	r2, [r7]
   3a960:	rsb	r1, r1, r5
   3a964:	bl	258a0 <changeMenuItemScaled@@Base>
   3a968:	cmp	r0, #0
   3a96c:	beq	3aa98 <initializeFrozenScreen@@Base+0x830>
   3a970:	bl	3a844 <initializeFrozenScreen@@Base+0x5dc>
   3a974:	b	3aa0c <initializeFrozenScreen@@Base+0x7a4>
   3a978:	movw	r2, #8200	; 0x2008
   3a97c:	cmp	r3, r2
   3a980:	beq	3ab50 <initializeFrozenScreen@@Base+0x8e8>
   3a984:	ble	3aab0 <initializeFrozenScreen@@Base+0x848>
   3a988:	movw	r2, #8202	; 0x200a
   3a98c:	cmp	r3, r2
   3a990:	beq	3ab1c <initializeFrozenScreen@@Base+0x8b4>
   3a994:	blt	3ab2c <initializeFrozenScreen@@Base+0x8c4>
   3a998:	add	r2, r2, #1
   3a99c:	cmp	r3, r2
   3a9a0:	bne	3a908 <initializeFrozenScreen@@Base+0x6a0>
   3a9a4:	mov	r2, #52	; 0x34
   3a9a8:	mov	r3, #0
   3a9ac:	str	r2, [r0]
   3a9b0:	b	3aa10 <initializeFrozenScreen@@Base+0x7a8>
   3a9b4:	cmp	r3, #9
   3a9b8:	beq	3ab50 <initializeFrozenScreen@@Base+0x8e8>
   3a9bc:	ble	3aa18 <initializeFrozenScreen@@Base+0x7b0>
   3a9c0:	cmp	r3, #29
   3a9c4:	beq	3aac0 <initializeFrozenScreen@@Base+0x858>
   3a9c8:	bgt	3aae0 <initializeFrozenScreen@@Base+0x878>
   3a9cc:	cmp	r3, #10
   3a9d0:	beq	3ab2c <initializeFrozenScreen@@Base+0x8c4>
   3a9d4:	cmp	r3, #12
   3a9d8:	bgt	3a908 <initializeFrozenScreen@@Base+0x6a0>
   3a9dc:	ldr	r5, [pc, #428]	; 3ab90 <initializeFrozenScreen@@Base+0x928>
   3a9e0:	add	r5, pc, r5
   3a9e4:	ldr	r0, [r5]
   3a9e8:	bl	259dc <getCurrentSubmenu@@Base>
   3a9ec:	ldr	r3, [r5]
   3a9f0:	cmp	r3, r0
   3a9f4:	beq	3aa98 <initializeFrozenScreen@@Base+0x830>
   3a9f8:	mov	r1, #0
   3a9fc:	bl	2504c <getMenuItem@@Base>
   3aa00:	bl	25858 <changeMenuItemNext@@Base>
   3aa04:	cmp	r0, #0
   3aa08:	beq	3aa98 <initializeFrozenScreen@@Base+0x830>
   3aa0c:	mov	r3, #1
   3aa10:	mov	r0, r3
   3aa14:	pop	{r3, r4, r5, r6, r7, pc}
   3aa18:	cmp	r3, #3
   3aa1c:	beq	3aaec <initializeFrozenScreen@@Base+0x884>
   3aa20:	ble	3ab6c <initializeFrozenScreen@@Base+0x904>
   3aa24:	cmp	r3, #5
   3aa28:	beq	3aa80 <initializeFrozenScreen@@Base+0x818>
   3aa2c:	blt	3aac0 <initializeFrozenScreen@@Base+0x858>
   3aa30:	cmp	r3, #6
   3aa34:	bne	3a908 <initializeFrozenScreen@@Base+0x6a0>
   3aa38:	ldr	r3, [pc, #340]	; 3ab94 <initializeFrozenScreen@@Base+0x92c>
   3aa3c:	ldr	r0, [pc, r3]
   3aa40:	bl	259dc <getCurrentSubmenu@@Base>
   3aa44:	bl	256c8 <setMenuNextItem@@Base>
   3aa48:	cmp	r0, #0
   3aa4c:	beq	3aa98 <initializeFrozenScreen@@Base+0x830>
   3aa50:	ldr	r3, [pc, #320]	; 3ab98 <initializeFrozenScreen@@Base+0x930>
   3aa54:	mov	r2, #0
   3aa58:	ldr	r3, [r4, r3]
   3aa5c:	ldr	r3, [r3]
   3aa60:	str	r2, [r3, #8]
   3aa64:	bl	3a7a4 <initializeFrozenScreen@@Base+0x53c>
   3aa68:	mov	r3, #1
   3aa6c:	mov	r0, r3
   3aa70:	pop	{r3, r4, r5, r6, r7, pc}
   3aa74:	cmp	r3, #58	; 0x3a
   3aa78:	beq	3aa38 <initializeFrozenScreen@@Base+0x7d0>
   3aa7c:	bgt	3aaec <initializeFrozenScreen@@Base+0x884>
   3aa80:	ldr	r3, [pc, #276]	; 3ab9c <initializeFrozenScreen@@Base+0x934>
   3aa84:	ldr	r0, [pc, r3]
   3aa88:	bl	259dc <getCurrentSubmenu@@Base>
   3aa8c:	bl	2565c <setMenuPreviousItem@@Base>
   3aa90:	cmp	r0, #0
   3aa94:	bne	3aa50 <initializeFrozenScreen@@Base+0x7e8>
   3aa98:	ldr	r3, [pc, #256]	; 3aba0 <initializeFrozenScreen@@Base+0x938>
   3aa9c:	ldr	r0, [r4, r3]
   3aaa0:	bl	37160 <playTune@@Base>
   3aaa4:	mov	r3, #1
   3aaa8:	mov	r0, r3
   3aaac:	pop	{r3, r4, r5, r6, r7, pc}
   3aab0:	movw	r2, #8198	; 0x2006
   3aab4:	cmp	r3, r2
   3aab8:	beq	3aa80 <initializeFrozenScreen@@Base+0x818>
   3aabc:	bgt	3aa38 <initializeFrozenScreen@@Base+0x7d0>
   3aac0:	ldr	r3, [pc, #220]	; 3aba4 <initializeFrozenScreen@@Base+0x93c>
   3aac4:	ldr	r0, [pc, r3]
   3aac8:	bl	259dc <getCurrentSubmenu@@Base>
   3aacc:	bl	25968 <getCurrentMenuItem@@Base>
   3aad0:	bl	25858 <changeMenuItemNext@@Base>
   3aad4:	cmp	r0, #0
   3aad8:	bne	3a970 <initializeFrozenScreen@@Base+0x708>
   3aadc:	b	3aa98 <initializeFrozenScreen@@Base+0x830>
   3aae0:	cmp	r3, #31
   3aae4:	beq	3aac0 <initializeFrozenScreen@@Base+0x858>
   3aae8:	bge	3ab48 <initializeFrozenScreen@@Base+0x8e0>
   3aaec:	ldr	r3, [pc, #180]	; 3aba8 <initializeFrozenScreen@@Base+0x940>
   3aaf0:	ldr	r0, [pc, r3]
   3aaf4:	bl	259dc <getCurrentSubmenu@@Base>
   3aaf8:	bl	25968 <getCurrentMenuItem@@Base>
   3aafc:	bl	25810 <changeMenuItemPrevious@@Base>
   3ab00:	cmp	r0, #0
   3ab04:	beq	3aa98 <initializeFrozenScreen@@Base+0x830>
   3ab08:	b	3a970 <initializeFrozenScreen@@Base+0x708>
   3ab0c:	mov	r2, #53	; 0x35
   3ab10:	mov	r3, #0
   3ab14:	str	r2, [r0]
   3ab18:	b	3aa10 <initializeFrozenScreen@@Base+0x7a8>
   3ab1c:	mov	r2, #54	; 0x36
   3ab20:	mov	r3, #0
   3ab24:	str	r2, [r0]
   3ab28:	b	3aa10 <initializeFrozenScreen@@Base+0x7a8>
   3ab2c:	ldr	r3, [pc, #120]	; 3abac <initializeFrozenScreen@@Base+0x944>
   3ab30:	ldr	r0, [pc, r3]
   3ab34:	bl	259dc <getCurrentSubmenu@@Base>
   3ab38:	bl	257a8 <setMenuLastItem@@Base>
   3ab3c:	cmp	r0, #0
   3ab40:	beq	3aa98 <initializeFrozenScreen@@Base+0x830>
   3ab44:	b	3aa50 <initializeFrozenScreen@@Base+0x7e8>
   3ab48:	cmp	r3, #55	; 0x37
   3ab4c:	bne	3a908 <initializeFrozenScreen@@Base+0x6a0>
   3ab50:	ldr	r3, [pc, #88]	; 3abb0 <initializeFrozenScreen@@Base+0x948>
   3ab54:	ldr	r0, [pc, r3]
   3ab58:	bl	259dc <getCurrentSubmenu@@Base>
   3ab5c:	bl	25740 <setMenuFirstItem@@Base>
   3ab60:	cmp	r0, #0
   3ab64:	beq	3aa98 <initializeFrozenScreen@@Base+0x830>
   3ab68:	b	3aa50 <initializeFrozenScreen@@Base+0x7e8>
   3ab6c:	cmp	r3, #1
   3ab70:	beq	3aa80 <initializeFrozenScreen@@Base+0x818>
   3ab74:	cmp	r3, #2
   3ab78:	beq	3aa38 <initializeFrozenScreen@@Base+0x7d0>
   3ab7c:	b	3a908 <initializeFrozenScreen@@Base+0x6a0>
   3ab80:			; <UNDEFINED> instruction: 0x000381b4
   3ab84:	andeq	r0, r0, r0, ror r4
   3ab88:	andeq	r0, r0, r0, asr #7
   3ab8c:	andeq	r9, r3, r8, ror r4
   3ab90:	andeq	r9, r3, r4, ror #7
   3ab94:	andeq	r9, r3, r8, lsl #7
   3ab98:			; <UNDEFINED> instruction: 0x000003b8
   3ab9c:	andeq	r9, r3, r0, asr #6
   3aba0:	andeq	r0, r0, r4, asr #8
   3aba4:	andeq	r9, r3, r0, lsl #6
   3aba8:	ldrdeq	r9, [r3], -r4
   3abac:	muleq	r3, r4, r2
   3abb0:	andeq	r9, r3, r0, ror r2

0003abb4 <initializeMenuScreen@@Base>:
   3abb4:	push	{r3, r4, r5, r6, r7, lr}
   3abb8:	mov	r4, r0
   3abbc:	bl	39850 <initializeBaseScreen@@Base>
   3abc0:	ldr	r7, [pc, #88]	; 3ac20 <initializeMenuScreen@@Base+0x6c>
   3abc4:	ldr	r6, [pc, #88]	; 3ac24 <initializeMenuScreen@@Base+0x70>
   3abc8:	ldr	r5, [pc, #88]	; 3ac28 <initializeMenuScreen@@Base+0x74>
   3abcc:	add	r7, pc, r7
   3abd0:	ldr	ip, [pc, #84]	; 3ac2c <initializeMenuScreen@@Base+0x78>
   3abd4:	add	r6, pc, r6
   3abd8:	ldr	r0, [pc, #80]	; 3ac30 <initializeMenuScreen@@Base+0x7c>
   3abdc:	add	r5, pc, r5
   3abe0:	ldr	r1, [pc, #76]	; 3ac34 <initializeMenuScreen@@Base+0x80>
   3abe4:	add	ip, pc, ip
   3abe8:	ldr	r2, [pc, #72]	; 3ac38 <initializeMenuScreen@@Base+0x84>
   3abec:	add	r0, pc, r0
   3abf0:	ldr	r3, [pc, #68]	; 3ac3c <initializeMenuScreen@@Base+0x88>
   3abf4:	add	r1, pc, r1
   3abf8:	add	r2, pc, r2
   3abfc:	str	r7, [r4, #40]	; 0x28
   3ac00:	add	r3, pc, r3
   3ac04:	str	r6, [r4]
   3ac08:	stmib	r4, {r5, ip}
   3ac0c:	str	r0, [r4, #44]	; 0x2c
   3ac10:	str	r1, [r4, #48]	; 0x30
   3ac14:	str	r2, [r4, #52]	; 0x34
   3ac18:	str	r3, [r4, #56]	; 0x38
   3ac1c:	pop	{r3, r4, r5, r6, r7, pc}
   3ac20:			; <UNDEFINED> instruction: 0xfffff77c
   3ac24:			; <UNDEFINED> instruction: 0xfffff720
   3ac28:			; <UNDEFINED> instruction: 0xfffff774
   3ac2c:			; <UNDEFINED> instruction: 0xfffffa6c
   3ac30:			; <UNDEFINED> instruction: 0xfffffcc0
   3ac34:			; <UNDEFINED> instruction: 0xfffff6f8
   3ac38:			; <UNDEFINED> instruction: 0xfffffc20
   3ac3c:			; <UNDEFINED> instruction: 0xfffff6d4
   3ac40:	ldr	r3, [pc, #16]	; 3ac58 <initializeMenuScreen@@Base+0xa4>
   3ac44:	ldr	r2, [pc, #16]	; 3ac5c <initializeMenuScreen@@Base+0xa8>
   3ac48:	add	r3, pc, r3
   3ac4c:	ldr	r3, [r3, r2]
   3ac50:	ldrb	r0, [r3, #80]	; 0x50
   3ac54:	bx	lr
   3ac58:	andeq	r7, r3, r0, lsr lr
   3ac5c:	andeq	r0, r0, r0, asr #10
   3ac60:	ldr	r3, [pc, #16]	; 3ac78 <initializeMenuScreen@@Base+0xc4>
   3ac64:	ldr	r2, [pc, #16]	; 3ac7c <initializeMenuScreen@@Base+0xc8>
   3ac68:	add	r3, pc, r3
   3ac6c:	ldr	r3, [r3, r2]
   3ac70:	ldrb	r0, [r3, #36]	; 0x24
   3ac74:	bx	lr
   3ac78:	andeq	r7, r3, r0, lsl lr
   3ac7c:	andeq	r0, r0, r0, asr #10
   3ac80:	ldr	r3, [pc, #16]	; 3ac98 <initializeMenuScreen@@Base+0xe4>
   3ac84:	ldr	r2, [pc, #16]	; 3ac9c <initializeMenuScreen@@Base+0xe8>
   3ac88:	add	r3, pc, r3
   3ac8c:	ldr	r3, [r3, r2]
   3ac90:	ldrb	r0, [r3, #28]
   3ac94:	bx	lr
   3ac98:	strdeq	r7, [r3], -r0
   3ac9c:	andeq	r0, r0, r0, asr #10
   3aca0:	ldr	r3, [pc, #16]	; 3acb8 <initializeMenuScreen@@Base+0x104>
   3aca4:	ldr	r2, [pc, #16]	; 3acbc <initializeMenuScreen@@Base+0x108>
   3aca8:	add	r3, pc, r3
   3acac:	ldr	r3, [r3, r2]
   3acb0:	ldrb	r0, [r3, #7]
   3acb4:	bx	lr
   3acb8:	ldrdeq	r7, [r3], -r0
   3acbc:	andeq	r0, r0, r0, asr #10
   3acc0:	ldr	r3, [pc, #16]	; 3acd8 <initializeMenuScreen@@Base+0x124>
   3acc4:	ldr	r2, [pc, #16]	; 3acdc <initializeMenuScreen@@Base+0x128>
   3acc8:	add	r3, pc, r3
   3accc:	ldr	r3, [r3, r2]
   3acd0:	ldrb	r0, [r3, #2]
   3acd4:	bx	lr
   3acd8:			; <UNDEFINED> instruction: 0x00037db0
   3acdc:	andeq	r0, r0, r0, asr #10
   3ace0:	ldr	r3, [pc, #36]	; 3ad0c <initializeMenuScreen@@Base+0x158>
   3ace4:	ldr	r2, [pc, #36]	; 3ad10 <initializeMenuScreen@@Base+0x15c>
   3ace8:	add	r3, pc, r3
   3acec:	ldr	r3, [r3, r2]
   3acf0:	ldrb	r0, [r3, #2]
   3acf4:	cmp	r0, #0
   3acf8:	bxeq	lr
   3acfc:	ldrb	r0, [r3, #6]
   3ad00:	adds	r0, r0, #0
   3ad04:	movne	r0, #1
   3ad08:	bx	lr
   3ad0c:	muleq	r3, r0, sp
   3ad10:	andeq	r0, r0, r0, asr #10
   3ad14:	ldr	r3, [pc, #16]	; 3ad2c <initializeMenuScreen@@Base+0x178>
   3ad18:	ldr	r2, [pc, #16]	; 3ad30 <initializeMenuScreen@@Base+0x17c>
   3ad1c:	add	r3, pc, r3
   3ad20:	ldr	r3, [r3, r2]
   3ad24:	ldrb	r0, [r3, #4]
   3ad28:	bx	lr
   3ad2c:	andeq	r7, r3, ip, asr sp
   3ad30:	andeq	r0, r0, r0, asr #10
   3ad34:	ldr	r3, [pc, #36]	; 3ad60 <initializeMenuScreen@@Base+0x1ac>
   3ad38:	ldr	r2, [pc, #36]	; 3ad64 <initializeMenuScreen@@Base+0x1b0>
   3ad3c:	add	r3, pc, r3
   3ad40:	ldr	r3, [r3, r2]
   3ad44:	ldrb	r0, [r3, #4]
   3ad48:	cmp	r0, #0
   3ad4c:	bxeq	lr
   3ad50:	ldrb	r0, [r3, #10]
   3ad54:	adds	r0, r0, #0
   3ad58:	movne	r0, #1
   3ad5c:	bx	lr
   3ad60:	andeq	r7, r3, ip, lsr sp
   3ad64:	andeq	r0, r0, r0, asr #10
   3ad68:	ldr	r3, [pc, #16]	; 3ad80 <initializeMenuScreen@@Base+0x1cc>
   3ad6c:	ldr	r2, [pc, #16]	; 3ad84 <initializeMenuScreen@@Base+0x1d0>
   3ad70:	add	r3, pc, r3
   3ad74:	ldr	r3, [r3, r2]
   3ad78:	ldrb	r0, [r3, #8]
   3ad7c:	bx	lr
   3ad80:	andeq	r7, r3, r8, lsl #26
   3ad84:	andeq	r0, r0, r0, asr #10
   3ad88:	ldr	r3, [pc, #24]	; 3ada8 <initializeMenuScreen@@Base+0x1f4>
   3ad8c:	ldr	r2, [pc, #24]	; 3adac <initializeMenuScreen@@Base+0x1f8>
   3ad90:	add	r3, pc, r3
   3ad94:	ldr	r3, [r3, r2]
   3ad98:	ldr	r0, [r3, #56]	; 0x38
   3ad9c:	adds	r0, r0, #0
   3ada0:	movne	r0, #1
   3ada4:	bx	lr
   3ada8:	andeq	r7, r3, r8, ror #25
   3adac:	andeq	r0, r0, r8, asr #10
   3adb0:	ldr	r3, [pc, #24]	; 3add0 <initializeMenuScreen@@Base+0x21c>
   3adb4:	ldr	r2, [pc, #24]	; 3add4 <initializeMenuScreen@@Base+0x220>
   3adb8:	add	r3, pc, r3
   3adbc:	ldr	r3, [r3, r2]
   3adc0:	ldr	r0, [r3, #60]	; 0x3c
   3adc4:	adds	r0, r0, #0
   3adc8:	movne	r0, #1
   3adcc:	bx	lr
   3add0:	andeq	r7, r3, r0, asr #25
   3add4:	andeq	r0, r0, r8, asr #10
   3add8:	ldr	r3, [pc, #16]	; 3adf0 <initializeMenuScreen@@Base+0x23c>
   3addc:	ldr	r2, [pc, #16]	; 3adf4 <initializeMenuScreen@@Base+0x240>
   3ade0:	add	r3, pc, r3
   3ade4:	ldr	r3, [r3, r2]
   3ade8:	ldrb	r0, [r3, #30]
   3adec:	bx	lr
   3adf0:	muleq	r3, r8, ip
   3adf4:	andeq	r0, r0, r0, asr #10
   3adf8:	ldr	r3, [pc, #40]	; 3ae28 <initializeMenuScreen@@Base+0x274>
   3adfc:	ldr	r2, [pc, #40]	; 3ae2c <initializeMenuScreen@@Base+0x278>
   3ae00:	add	r3, pc, r3
   3ae04:	ldr	r3, [r3, r2]
   3ae08:	ldrb	r0, [r3, #30]
   3ae0c:	cmp	r0, #0
   3ae10:	bxeq	lr
   3ae14:	ldrb	r0, [r3, #31]
   3ae18:	subs	r3, r0, #1
   3ae1c:	rsbs	r0, r3, #0
   3ae20:	adcs	r0, r0, r3
   3ae24:	bx	lr
   3ae28:	andeq	r7, r3, r8, ror ip
   3ae2c:	andeq	r0, r0, r0, asr #10
   3ae30:	ldr	r3, [pc, #40]	; 3ae60 <initializeMenuScreen@@Base+0x2ac>
   3ae34:	ldr	r2, [pc, #40]	; 3ae64 <initializeMenuScreen@@Base+0x2b0>
   3ae38:	add	r3, pc, r3
   3ae3c:	ldr	r3, [r3, r2]
   3ae40:	ldrb	r0, [r3, #30]
   3ae44:	cmp	r0, #0
   3ae48:	bxeq	lr
   3ae4c:	ldrb	r0, [r3, #31]
   3ae50:	subs	r3, r0, #2
   3ae54:	rsbs	r0, r3, #0
   3ae58:	adcs	r0, r0, r3
   3ae5c:	bx	lr
   3ae60:	andeq	r7, r3, r0, asr #24
   3ae64:	andeq	r0, r0, r0, asr #10
   3ae68:	ldr	r3, [pc, #40]	; 3ae98 <initializeMenuScreen@@Base+0x2e4>
   3ae6c:	ldr	r2, [pc, #40]	; 3ae9c <initializeMenuScreen@@Base+0x2e8>
   3ae70:	add	r3, pc, r3
   3ae74:	ldr	r3, [r3, r2]
   3ae78:	ldrb	r0, [r3, #30]
   3ae7c:	cmp	r0, #0
   3ae80:	bxeq	lr
   3ae84:	ldrb	r0, [r3, #31]
   3ae88:	subs	r3, r0, #3
   3ae8c:	rsbs	r0, r3, #0
   3ae90:	adcs	r0, r0, r3
   3ae94:	bx	lr
   3ae98:	andeq	r7, r3, r8, lsl #24
   3ae9c:	andeq	r0, r0, r0, asr #10
   3aea0:	ldr	r3, [pc, #28]	; 3aec4 <initializeMenuScreen@@Base+0x310>
   3aea4:	ldr	r2, [pc, #28]	; 3aec8 <initializeMenuScreen@@Base+0x314>
   3aea8:	add	r3, pc, r3
   3aeac:	ldr	r3, [r3, r2]
   3aeb0:	ldr	r3, [r3]
   3aeb4:	ldr	r0, [r3, #60]	; 0x3c
   3aeb8:	adds	r0, r0, #0
   3aebc:	movne	r0, #1
   3aec0:	bx	lr
   3aec4:	ldrdeq	r7, [r3], -r0
   3aec8:	andeq	r0, r0, ip, lsl r4
   3aecc:	ldr	r3, [pc, #28]	; 3aef0 <initializeMenuScreen@@Base+0x33c>
   3aed0:	ldr	r2, [pc, #28]	; 3aef4 <initializeMenuScreen@@Base+0x340>
   3aed4:	add	r3, pc, r3
   3aed8:	ldr	r3, [r3, r2]
   3aedc:	ldr	r3, [r3]
   3aee0:	ldr	r0, [r3, #64]	; 0x40
   3aee4:	adds	r0, r0, #0
   3aee8:	movne	r0, #1
   3aeec:	bx	lr
   3aef0:	andeq	r7, r3, r4, lsr #23
   3aef4:	andeq	r0, r0, ip, lsl r4
   3aef8:	ldr	r3, [pc, #28]	; 3af1c <initializeMenuScreen@@Base+0x368>
   3aefc:	ldr	r2, [pc, #28]	; 3af20 <initializeMenuScreen@@Base+0x36c>
   3af00:	add	r3, pc, r3
   3af04:	ldr	r3, [r3, r2]
   3af08:	ldr	r3, [r3]
   3af0c:	ldr	r0, [r3, #68]	; 0x44
   3af10:	adds	r0, r0, #0
   3af14:	movne	r0, #1
   3af18:	bx	lr
   3af1c:	andeq	r7, r3, r8, ror fp
   3af20:	andeq	r0, r0, ip, lsl r4
   3af24:	ldr	r3, [pc, #28]	; 3af48 <initializeMenuScreen@@Base+0x394>
   3af28:	ldr	r2, [pc, #28]	; 3af4c <initializeMenuScreen@@Base+0x398>
   3af2c:	add	r3, pc, r3
   3af30:	ldr	r3, [r3, r2]
   3af34:	ldr	r3, [r3]
   3af38:	ldr	r0, [r3, #72]	; 0x48
   3af3c:	adds	r0, r0, #0
   3af40:	movne	r0, #1
   3af44:	bx	lr
   3af48:	andeq	r7, r3, ip, asr #22
   3af4c:	andeq	r0, r0, ip, lsl r4
   3af50:	ldr	r3, [pc, #16]	; 3af68 <initializeMenuScreen@@Base+0x3b4>
   3af54:	ldr	r2, [pc, #16]	; 3af6c <initializeMenuScreen@@Base+0x3b8>
   3af58:	add	r3, pc, r3
   3af5c:	ldr	r3, [r3, r2]
   3af60:	ldrb	r0, [r3, #15]
   3af64:	bx	lr
   3af68:	andeq	r7, r3, r0, lsr #22
   3af6c:	andeq	r0, r0, r0, asr #10
   3af70:	ldr	r3, [pc, #16]	; 3af88 <initializeMenuScreen@@Base+0x3d4>
   3af74:	ldr	r2, [pc, #16]	; 3af8c <initializeMenuScreen@@Base+0x3d8>
   3af78:	add	r3, pc, r3
   3af7c:	ldr	r3, [r3, r2]
   3af80:	ldrb	r0, [r3, #67]	; 0x43
   3af84:	bx	lr
   3af88:	andeq	r7, r3, r0, lsl #22
   3af8c:	andeq	r0, r0, r0, asr #10
   3af90:	ldr	r3, [pc, #36]	; 3afbc <initializeMenuScreen@@Base+0x408>
   3af94:	ldr	r2, [pc, #36]	; 3afc0 <initializeMenuScreen@@Base+0x40c>
   3af98:	add	r3, pc, r3
   3af9c:	ldr	r3, [r3, r2]
   3afa0:	ldrb	r0, [r3, #67]	; 0x43
   3afa4:	cmp	r0, #0
   3afa8:	bxeq	lr
   3afac:	ldrb	r0, [r3, #69]	; 0x45
   3afb0:	adds	r0, r0, #0
   3afb4:	movne	r0, #1
   3afb8:	bx	lr
   3afbc:	andeq	r7, r3, r0, ror #21
   3afc0:	andeq	r0, r0, r0, asr #10
   3afc4:	ldr	r3, [pc, #24]	; 3afe4 <initializeMenuScreen@@Base+0x430>
   3afc8:	ldr	r2, [pc, #24]	; 3afe8 <initializeMenuScreen@@Base+0x434>
   3afcc:	add	r3, pc, r3
   3afd0:	ldr	r3, [r3, r2]
   3afd4:	ldrb	r0, [r3, #75]	; 0x4b
   3afd8:	adds	r0, r0, #0
   3afdc:	movne	r0, #1
   3afe0:	bx	lr
   3afe4:	andeq	r7, r3, ip, lsr #21
   3afe8:	andeq	r0, r0, r0, asr #10
   3afec:	ldr	r3, [pc, #28]	; 3b010 <initializeMenuScreen@@Base+0x45c>
   3aff0:	ldr	r2, [pc, #28]	; 3b014 <initializeMenuScreen@@Base+0x460>
   3aff4:	add	r3, pc, r3
   3aff8:	ldr	r3, [r3, r2]
   3affc:	ldrb	r0, [r3, #26]
   3b000:	subs	r3, r0, #1
   3b004:	rsbs	r0, r3, #0
   3b008:	adcs	r0, r0, r3
   3b00c:	bx	lr
   3b010:	andeq	r7, r3, r4, lsl #21
   3b014:	andeq	r0, r0, r0, asr #10
   3b018:	ldr	r3, [pc, #24]	; 3b038 <initializeMenuScreen@@Base+0x484>
   3b01c:	ldr	r2, [pc, #24]	; 3b03c <initializeMenuScreen@@Base+0x488>
   3b020:	add	r3, pc, r3
   3b024:	ldr	r3, [r3, r2]
   3b028:	ldr	r0, [r3, #24]
   3b02c:	adds	r0, r0, #0
   3b030:	movne	r0, #1
   3b034:	bx	lr
   3b038:	andeq	r7, r3, r8, asr sl
   3b03c:	andeq	r0, r0, r8, asr #10
   3b040:	ldr	r3, [pc, #24]	; 3b060 <initializeMenuScreen@@Base+0x4ac>
   3b044:	ldr	r2, [pc, #24]	; 3b064 <initializeMenuScreen@@Base+0x4b0>
   3b048:	add	r3, pc, r3
   3b04c:	ldr	r3, [r3, r2]
   3b050:	ldr	r0, [r3]
   3b054:	adds	r0, r0, #0
   3b058:	movne	r0, #1
   3b05c:	bx	lr
   3b060:	andeq	r7, r3, r0, lsr sl
   3b064:	andeq	r0, r0, r4, lsr r4
   3b068:	push	{r3, lr}
   3b06c:	bl	25318 <getMenuItemValue@@Base>
   3b070:	pop	{r3, lr}
   3b074:	b	21990 <loadContractionTable@@Base>
   3b078:	ldr	r3, [pc, #36]	; 3b0a4 <initializeMenuScreen@@Base+0x4f0>
   3b07c:	ldr	r2, [pc, #36]	; 3b0a8 <initializeMenuScreen@@Base+0x4f4>
   3b080:	add	r3, pc, r3
   3b084:	push	{r4, lr}
   3b088:	ldr	r3, [r3, r2]
   3b08c:	ldr	r4, [r3]
   3b090:	bl	25318 <getMenuItemValue@@Base>
   3b094:	mov	r1, r0
   3b098:	mov	r0, r4
   3b09c:	pop	{r4, lr}
   3b0a0:	b	2de00 <replaceAttributesTable@@Base>
   3b0a4:	strdeq	r7, [r3], -r8
   3b0a8:	andeq	r0, r0, r4, lsr r5
   3b0ac:	ldr	r3, [pc, #36]	; 3b0d8 <initializeMenuScreen@@Base+0x524>
   3b0b0:	ldr	r2, [pc, #36]	; 3b0dc <initializeMenuScreen@@Base+0x528>
   3b0b4:	add	r3, pc, r3
   3b0b8:	push	{r4, lr}
   3b0bc:	ldr	r3, [r3, r2]
   3b0c0:	ldr	r4, [r3]
   3b0c4:	bl	25318 <getMenuItemValue@@Base>
   3b0c8:	mov	r1, r0
   3b0cc:	mov	r0, r4
   3b0d0:	pop	{r4, lr}
   3b0d4:	b	2d994 <replaceTextTable@@Base>
   3b0d8:	andeq	r7, r3, r4, asr #19
   3b0dc:	andeq	r0, r0, r4, lsr r5
   3b0e0:	push	{r4, lr}
   3b0e4:	mov	r4, r0
   3b0e8:	bl	21a74 <haveStatusCells@@Base>
   3b0ec:	ldr	r3, [pc, #72]	; 3b13c <initializeMenuScreen@@Base+0x588>
   3b0f0:	add	r3, pc, r3
   3b0f4:	cmp	r0, #0
   3b0f8:	bne	3b110 <initializeMenuScreen@@Base+0x55c>
   3b0fc:	ldr	r2, [pc, #60]	; 3b140 <initializeMenuScreen@@Base+0x58c>
   3b100:	ldr	r2, [r3, r2]
   3b104:	ldrb	r0, [r2, #45]	; 0x2d
   3b108:	cmp	r0, #0
   3b10c:	popeq	{r4, pc}
   3b110:	cmp	r4, #0
   3b114:	beq	3b134 <initializeMenuScreen@@Base+0x580>
   3b118:	ldr	r2, [pc, #32]	; 3b140 <initializeMenuScreen@@Base+0x58c>
   3b11c:	ldr	r3, [r3, r2]
   3b120:	add	r4, r3, r4
   3b124:	ldrb	r0, [r4, #47]	; 0x2f
   3b128:	adds	r0, r0, #0
   3b12c:	movne	r0, #1
   3b130:	pop	{r4, pc}
   3b134:	mov	r0, #1
   3b138:	pop	{r4, pc}
   3b13c:	andeq	r7, r3, r8, lsl #19
   3b140:	andeq	r0, r0, r0, asr #10
   3b144:	mov	r0, #8
   3b148:	b	3b0e0 <initializeMenuScreen@@Base+0x52c>
   3b14c:	mov	r0, #7
   3b150:	b	3b0e0 <initializeMenuScreen@@Base+0x52c>
   3b154:	mov	r0, #6
   3b158:	b	3b0e0 <initializeMenuScreen@@Base+0x52c>
   3b15c:	mov	r0, #5
   3b160:	b	3b0e0 <initializeMenuScreen@@Base+0x52c>
   3b164:	mov	r0, #4
   3b168:	b	3b0e0 <initializeMenuScreen@@Base+0x52c>
   3b16c:	mov	r0, #3
   3b170:	b	3b0e0 <initializeMenuScreen@@Base+0x52c>
   3b174:	mov	r0, #2
   3b178:	b	3b0e0 <initializeMenuScreen@@Base+0x52c>
   3b17c:	mov	r0, #1
   3b180:	b	3b0e0 <initializeMenuScreen@@Base+0x52c>
   3b184:	mov	r0, #0
   3b188:	b	3b0e0 <initializeMenuScreen@@Base+0x52c>
   3b18c:	push	{r3, lr}
   3b190:	bl	21a74 <haveStatusCells@@Base>
   3b194:	rsbs	r0, r0, #1
   3b198:	movcc	r0, #0
   3b19c:	pop	{r3, pc}
   3b1a0:	push	{r3, lr}
   3b1a4:	bl	21a74 <haveStatusCells@@Base>
   3b1a8:	ldr	r3, [pc, #40]	; 3b1d8 <initializeMenuScreen@@Base+0x624>
   3b1ac:	add	r3, pc, r3
   3b1b0:	cmp	r0, #0
   3b1b4:	bne	3b1d0 <initializeMenuScreen@@Base+0x61c>
   3b1b8:	ldr	r2, [pc, #28]	; 3b1dc <initializeMenuScreen@@Base+0x628>
   3b1bc:	ldr	r3, [r3, r2]
   3b1c0:	ldrb	r0, [r3, #45]	; 0x2d
   3b1c4:	adds	r0, r0, #0
   3b1c8:	movne	r0, #1
   3b1cc:	pop	{r3, pc}
   3b1d0:	mov	r0, #0
   3b1d4:	pop	{r3, pc}
   3b1d8:	andeq	r7, r3, ip, asr #17
   3b1dc:	andeq	r0, r0, r0, asr #10
   3b1e0:	push	{r3, lr}
   3b1e4:	bl	21a74 <haveStatusCells@@Base>
   3b1e8:	ldr	r3, [pc, #40]	; 3b218 <initializeMenuScreen@@Base+0x664>
   3b1ec:	add	r3, pc, r3
   3b1f0:	cmp	r0, #0
   3b1f4:	bne	3b210 <initializeMenuScreen@@Base+0x65c>
   3b1f8:	ldr	r2, [pc, #28]	; 3b21c <initializeMenuScreen@@Base+0x668>
   3b1fc:	ldr	r3, [r3, r2]
   3b200:	ldrb	r0, [r3, #45]	; 0x2d
   3b204:	adds	r0, r0, #0
   3b208:	movne	r0, #1
   3b20c:	pop	{r3, pc}
   3b210:	mov	r0, #0
   3b214:	pop	{r3, pc}
   3b218:	andeq	r7, r3, ip, lsl #17
   3b21c:	andeq	r0, r0, r0, asr #10
   3b220:	push	{r3, r4, r5, lr}
   3b224:	cmp	r1, #0
   3b228:	ldr	r4, [pc, #152]	; 3b2c8 <initializeMenuScreen@@Base+0x714>
   3b22c:	mov	r5, r0
   3b230:	add	r4, pc, r4
   3b234:	beq	3b2ac <initializeMenuScreen@@Base+0x6f8>
   3b238:	cmp	r1, #15
   3b23c:	bne	3b250 <initializeMenuScreen@@Base+0x69c>
   3b240:	cmp	r0, #0
   3b244:	beq	3b27c <initializeMenuScreen@@Base+0x6c8>
   3b248:	mov	r0, #0
   3b24c:	pop	{r3, r4, r5, pc}
   3b250:	cmp	r0, #0
   3b254:	beq	3b270 <initializeMenuScreen@@Base+0x6bc>
   3b258:	ldr	r3, [pc, #108]	; 3b2cc <initializeMenuScreen@@Base+0x718>
   3b25c:	ldr	r3, [r4, r3]
   3b260:	add	r5, r3, r0
   3b264:	ldrb	r3, [r5, #47]	; 0x2f
   3b268:	cmp	r3, #15
   3b26c:	beq	3b248 <initializeMenuScreen@@Base+0x694>
   3b270:	bl	21cb8 <reconfigureWindow@@Base>
   3b274:	mov	r0, #1
   3b278:	pop	{r3, r4, r5, pc}
   3b27c:	bl	21a74 <haveStatusCells@@Base>
   3b280:	cmp	r0, #0
   3b284:	beq	3b248 <initializeMenuScreen@@Base+0x694>
   3b288:	ldr	r3, [pc, #64]	; 3b2d0 <initializeMenuScreen@@Base+0x71c>
   3b28c:	ldr	r3, [r4, r3]
   3b290:	ldr	r3, [r3]
   3b294:	ldr	r3, [r3, #32]
   3b298:	cmp	r3, #0
   3b29c:	beq	3b248 <initializeMenuScreen@@Base+0x694>
   3b2a0:	ldrb	r3, [r3]
   3b2a4:	cmp	r3, #15
   3b2a8:	bne	3b248 <initializeMenuScreen@@Base+0x694>
   3b2ac:	ldr	r3, [pc, #24]	; 3b2cc <initializeMenuScreen@@Base+0x718>
   3b2b0:	ldr	r3, [r4, r3]
   3b2b4:	add	r5, r3, r5
   3b2b8:	ldrb	r3, [r5, #49]	; 0x31
   3b2bc:	cmp	r3, #0
   3b2c0:	beq	3b270 <initializeMenuScreen@@Base+0x6bc>
   3b2c4:	b	3b248 <initializeMenuScreen@@Base+0x694>
   3b2c8:	andeq	r7, r3, r8, asr #16
   3b2cc:	andeq	r0, r0, r0, asr #10
   3b2d0:	andeq	r0, r0, ip, ror r4
   3b2d4:	mov	r0, #8
   3b2d8:	b	3b220 <initializeMenuScreen@@Base+0x66c>
   3b2dc:	mov	r0, #7
   3b2e0:	b	3b220 <initializeMenuScreen@@Base+0x66c>
   3b2e4:	mov	r0, #6
   3b2e8:	b	3b220 <initializeMenuScreen@@Base+0x66c>
   3b2ec:	mov	r0, #5
   3b2f0:	b	3b220 <initializeMenuScreen@@Base+0x66c>
   3b2f4:	mov	r0, #4
   3b2f8:	b	3b220 <initializeMenuScreen@@Base+0x66c>
   3b2fc:	mov	r0, #3
   3b300:	b	3b220 <initializeMenuScreen@@Base+0x66c>
   3b304:	mov	r0, #2
   3b308:	b	3b220 <initializeMenuScreen@@Base+0x66c>
   3b30c:	mov	r0, #1
   3b310:	b	3b220 <initializeMenuScreen@@Base+0x66c>
   3b314:	mov	r0, #0
   3b318:	b	3b220 <initializeMenuScreen@@Base+0x66c>
   3b31c:	push	{r3, lr}
   3b320:	bl	21cb8 <reconfigureWindow@@Base>
   3b324:	mov	r0, #1
   3b328:	pop	{r3, pc}
   3b32c:	push	{r3, lr}
   3b330:	bl	21cb8 <reconfigureWindow@@Base>
   3b334:	mov	r0, #1
   3b338:	pop	{r3, pc}
   3b33c:	push	{r3, lr}
   3b340:	bl	21cb8 <reconfigureWindow@@Base>
   3b344:	mov	r0, #1
   3b348:	pop	{r3, pc}
   3b34c:	push	{r3, lr}
   3b350:	ldr	r3, [pc, #40]	; 3b380 <initializeMenuScreen@@Base+0x7cc>
   3b354:	ldr	r2, [pc, #40]	; 3b384 <initializeMenuScreen@@Base+0x7d0>
   3b358:	add	r3, pc, r3
   3b35c:	ldr	r3, [r3, r2]
   3b360:	ldr	r3, [r3]
   3b364:	cmp	r1, r3
   3b368:	bcc	3b374 <initializeMenuScreen@@Base+0x7c0>
   3b36c:	mov	r0, #0
   3b370:	pop	{r3, pc}
   3b374:	bl	21cb8 <reconfigureWindow@@Base>
   3b378:	mov	r0, #1
   3b37c:	pop	{r3, pc}
   3b380:	andeq	r7, r3, r0, lsr #14
   3b384:	andeq	r0, r0, r0, asr #7
   3b388:	ldr	r3, [pc, #32]	; 3b3b0 <initializeMenuScreen@@Base+0x7fc>
   3b38c:	ldr	r2, [pc, #32]	; 3b3b4 <initializeMenuScreen@@Base+0x800>
   3b390:	add	r3, pc, r3
   3b394:	ldr	r0, [pc, #28]	; 3b3b8 <initializeMenuScreen@@Base+0x804>
   3b398:	ldr	r2, [r3, r2]
   3b39c:	ldr	r0, [r3, r0]
   3b3a0:	ldrb	r2, [r2, #15]
   3b3a4:	rsbs	r2, r2, #1
   3b3a8:	movcc	r2, #0
   3b3ac:	b	46ad0 <setSpeechPunctuation@@Base>
   3b3b0:	andeq	r7, r3, r8, ror #13
   3b3b4:	andeq	r0, r0, r0, asr #10
   3b3b8:	andeq	r0, r0, r4, ror #9
   3b3bc:	ldr	r3, [pc, #32]	; 3b3e4 <initializeMenuScreen@@Base+0x830>
   3b3c0:	ldr	r2, [pc, #32]	; 3b3e8 <initializeMenuScreen@@Base+0x834>
   3b3c4:	add	r3, pc, r3
   3b3c8:	ldr	r0, [pc, #28]	; 3b3ec <initializeMenuScreen@@Base+0x838>
   3b3cc:	ldr	r2, [r3, r2]
   3b3d0:	ldr	r0, [r3, r0]
   3b3d4:	ldrb	r2, [r2, #15]
   3b3d8:	rsbs	r2, r2, #1
   3b3dc:	movcc	r2, #0
   3b3e0:	b	46a04 <setSpeechPitch@@Base>
   3b3e4:			; <UNDEFINED> instruction: 0x000376b4
   3b3e8:	andeq	r0, r0, r0, asr #10
   3b3ec:	andeq	r0, r0, r4, ror #9
   3b3f0:	ldr	r3, [pc, #32]	; 3b418 <initializeMenuScreen@@Base+0x864>
   3b3f4:	ldr	r2, [pc, #32]	; 3b41c <initializeMenuScreen@@Base+0x868>
   3b3f8:	add	r3, pc, r3
   3b3fc:	ldr	r0, [pc, #28]	; 3b420 <initializeMenuScreen@@Base+0x86c>
   3b400:	ldr	r2, [r3, r2]
   3b404:	ldr	r0, [r3, r0]
   3b408:	ldrb	r2, [r2, #15]
   3b40c:	rsbs	r2, r2, #1
   3b410:	movcc	r2, #0
   3b414:	b	46934 <setSpeechRate@@Base>
   3b418:	andeq	r7, r3, r0, lsl #13
   3b41c:	andeq	r0, r0, r0, asr #10
   3b420:	andeq	r0, r0, r4, ror #9
   3b424:	ldr	r3, [pc, #32]	; 3b44c <initializeMenuScreen@@Base+0x898>
   3b428:	ldr	r2, [pc, #32]	; 3b450 <initializeMenuScreen@@Base+0x89c>
   3b42c:	add	r3, pc, r3
   3b430:	ldr	r0, [pc, #28]	; 3b454 <initializeMenuScreen@@Base+0x8a0>
   3b434:	ldr	r2, [r3, r2]
   3b438:	ldr	r0, [r3, r0]
   3b43c:	ldrb	r2, [r2, #15]
   3b440:	rsbs	r2, r2, #1
   3b444:	movcc	r2, #0
   3b448:	b	46868 <setSpeechVolume@@Base>
   3b44c:	andeq	r7, r3, ip, asr #12
   3b450:	andeq	r0, r0, r0, asr #10
   3b454:	andeq	r0, r0, r4, ror #9
   3b458:	mov	r0, r1
   3b45c:	b	370c0 <setTuneDevice@@Base>
   3b460:	ldr	r3, [pc, #12]	; 3b474 <initializeMenuScreen@@Base+0x8c0>
   3b464:	ldr	r2, [pc, #12]	; 3b478 <initializeMenuScreen@@Base+0x8c4>
   3b468:	add	r3, pc, r3
   3b46c:	ldr	r0, [r3, r2]
   3b470:	b	3ed2c <setBrailleSensitivity@@Base>
   3b474:	andeq	r7, r3, r0, lsl r6
   3b478:	andeq	r0, r0, r8, asr #10
   3b47c:	cmp	r1, #0
   3b480:	push	{r3, lr}
   3b484:	beq	3b48c <initializeMenuScreen@@Base+0x8d8>
   3b488:	bl	13138 <resetAutorepeat@@Base>
   3b48c:	mov	r0, #1
   3b490:	pop	{r3, pc}
   3b494:	ldr	r3, [pc, #12]	; 3b4a8 <initializeMenuScreen@@Base+0x8f4>
   3b498:	ldr	r2, [pc, #12]	; 3b4ac <initializeMenuScreen@@Base+0x8f8>
   3b49c:	add	r3, pc, r3
   3b4a0:	ldr	r0, [r3, r2]
   3b4a4:	b	3ece8 <setBrailleFirmness@@Base>
   3b4a8:	ldrdeq	r7, [r3], -ip
   3b4ac:	andeq	r0, r0, r8, asr #10
   3b4b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3b4b4:	sub	sp, sp, #24
   3b4b8:	ldr	r4, [pc, #248]	; 3b5b8 <initializeMenuScreen@@Base+0xa04>
   3b4bc:	mov	r7, r1
   3b4c0:	ldr	r5, [pc, #244]	; 3b5bc <initializeMenuScreen@@Base+0xa08>
   3b4c4:	mov	r1, #3
   3b4c8:	add	r4, pc, r4
   3b4cc:	ldr	ip, [pc, #236]	; 3b5c0 <initializeMenuScreen@@Base+0xa0c>
   3b4d0:	ldr	lr, [pc, #236]	; 3b5c4 <initializeMenuScreen@@Base+0xa10>
   3b4d4:	mov	sl, r0
   3b4d8:	ldr	r6, [r4, r5]
   3b4dc:	add	ip, pc, ip
   3b4e0:	add	r5, sp, #16
   3b4e4:	str	r7, [sp, #4]
   3b4e8:	str	ip, [sp]
   3b4ec:	mov	r9, r2
   3b4f0:	ldr	ip, [r6]
   3b4f4:	mov	r0, r5
   3b4f8:	mov	r2, #1
   3b4fc:	mov	r8, r3
   3b500:	mov	r3, r1
   3b504:	add	lr, pc, lr
   3b508:	str	ip, [sp, #20]
   3b50c:	str	lr, [sp, #8]
   3b510:	mov	lr, #0
   3b514:	str	lr, [sp, #12]
   3b518:	bl	fb60 <__snprintf_chk@plt>
   3b51c:	mov	r0, r5
   3b520:	bl	f740 <__strdup@plt>
   3b524:	cmp	r0, #0
   3b528:	mov	r5, r0
   3b52c:	str	r0, [sp, #12]
   3b530:	beq	3b598 <initializeMenuScreen@@Base+0x9e4>
   3b534:	ldr	r1, [pc, #140]	; 3b5c8 <initializeMenuScreen@@Base+0xa14>
   3b538:	add	r7, r7, #47	; 0x2f
   3b53c:	ldr	r3, [pc, #136]	; 3b5cc <initializeMenuScreen@@Base+0xa18>
   3b540:	mov	ip, #16
   3b544:	mov	r0, sl
   3b548:	add	r2, sp, #8
   3b54c:	ldr	r1, [r4, r1]
   3b550:	add	r3, pc, r3
   3b554:	str	ip, [sp]
   3b558:	add	r1, r1, r7
   3b55c:	bl	253a4 <newStringsMenuItem@@Base>
   3b560:	subs	r4, r0, #0
   3b564:	beq	3b5a4 <initializeMenuScreen@@Base+0x9f0>
   3b568:	mov	r1, r9
   3b56c:	bl	25358 <setMenuItemTester@@Base>
   3b570:	mov	r0, r4
   3b574:	mov	r1, r8
   3b578:	bl	25360 <setMenuItemChanged@@Base>
   3b57c:	mov	r0, r4
   3b580:	ldr	r2, [sp, #20]
   3b584:	ldr	r3, [r6]
   3b588:	cmp	r2, r3
   3b58c:	bne	3b5b4 <initializeMenuScreen@@Base+0xa00>
   3b590:	add	sp, sp, #24
   3b594:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3b598:	bl	1c740 <logMallocError@@Base>
   3b59c:	mov	r0, r5
   3b5a0:	b	3b580 <initializeMenuScreen@@Base+0x9cc>
   3b5a4:	mov	r0, r5
   3b5a8:	bl	f4f4 <free@plt>
   3b5ac:	mov	r0, r4
   3b5b0:	b	3b580 <initializeMenuScreen@@Base+0x9cc>
   3b5b4:	bl	f950 <__stack_chk_fail@plt>
   3b5b8:			; <UNDEFINED> instruction: 0x000375b0
   3b5bc:			; <UNDEFINED> instruction: 0x000003b4
   3b5c0:	andeq	lr, r1, r4, ror r4
   3b5c4:	andeq	sp, r1, r4, lsr #9
   3b5c8:	andeq	r0, r0, r0, asr #10
   3b5cc:	andeq	r5, r3, r4, ror #29

0003b5d0 <makeMidiInstrumentMenuStrings@@Base>:
   3b5d0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   3b5d4:	ldr	r5, [pc, #104]	; 3b644 <makeMidiInstrumentMenuStrings@@Base+0x74>
   3b5d8:	ldr	r3, [pc, #104]	; 3b648 <makeMidiInstrumentMenuStrings@@Base+0x78>
   3b5dc:	add	r5, pc, r5
   3b5e0:	ldr	r3, [r5, r3]
   3b5e4:	ldr	r9, [r3]
   3b5e8:	lsl	r0, r9, #3
   3b5ec:	bl	fb48 <malloc@plt>
   3b5f0:	subs	r8, r0, #0
   3b5f4:	beq	3b63c <makeMidiInstrumentMenuStrings@@Base+0x6c>
   3b5f8:	cmp	r9, #0
   3b5fc:	beq	3b63c <makeMidiInstrumentMenuStrings@@Base+0x6c>
   3b600:	ldr	r3, [pc, #68]	; 3b64c <makeMidiInstrumentMenuStrings@@Base+0x7c>
   3b604:	mov	r6, #0
   3b608:	mov	r4, r6
   3b60c:	ldr	r7, [r5, r3]
   3b610:	sub	r7, r7, #4
   3b614:	ldr	r3, [r7, #4]!
   3b618:	mov	r5, r8
   3b61c:	uxtb	r0, r4
   3b620:	add	r4, r4, #1
   3b624:	str	r3, [r5, r6]!
   3b628:	add	r6, r6, #8
   3b62c:	bl	37b40 <midiGetInstrumentType@@Base>
   3b630:	cmp	r4, r9
   3b634:	str	r0, [r5, #4]
   3b638:	bne	3b614 <makeMidiInstrumentMenuStrings@@Base+0x44>
   3b63c:	mov	r0, r8
   3b640:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3b644:	muleq	r3, ip, r4
   3b648:	andeq	r0, r0, r0, ror #7
   3b64c:	andeq	r0, r0, r8, ror r5

0003b650 <getPreferencesMenu@@Base>:
   3b650:	ldr	r3, [pc, #36]	; 3b67c <getPreferencesMenu@@Base+0x2c>
   3b654:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b658:	add	r3, pc, r3
   3b65c:	ldr	r4, [pc, #28]	; 3b680 <getPreferencesMenu@@Base+0x30>
   3b660:	sub	sp, sp, #20
   3b664:	ldr	r0, [r3]
   3b668:	add	r4, pc, r4
   3b66c:	cmp	r0, #0
   3b670:	beq	3b7dc <getPreferencesMenu@@Base+0x18c>
   3b674:	add	sp, sp, #20
   3b678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b67c:	andeq	r8, r3, ip, ror r7
   3b680:	andeq	r7, r3, r0, lsl r4
   3b684:	andeq	r5, r3, r4, asr #24
   3b688:	andeq	r0, r0, r0, asr #10
   3b68c:			; <UNDEFINED> instruction: 0xfffff728
   3b690:	andeq	r5, r3, r4, ror fp
   3b694:			; <UNDEFINED> instruction: 0xfffff460
   3b698:			; <UNDEFINED> instruction: 0xfffffb5c
   3b69c:			; <UNDEFINED> instruction: 0xfffff330
   3b6a0:	strdeq	r0, [r0], -r8
   3b6a4:			; <UNDEFINED> instruction: 0xfffff2d4
   3b6a8:			; <UNDEFINED> instruction: 0xfffff27c
   3b6ac:	muleq	r3, r8, r9
   3b6b0:			; <UNDEFINED> instruction: 0xfffff254
   3b6b4:			; <UNDEFINED> instruction: 0xfffff1e8
   3b6b8:			; <UNDEFINED> instruction: 0xfffff02c
   3b6bc:	ldrdeq	r5, [r3], -ip
   3b6c0:			; <UNDEFINED> instruction: 0xfffff004
   3b6c4:			; <UNDEFINED> instruction: 0xfffff69c
   3b6c8:			; <UNDEFINED> instruction: 0xfffff780
   3b6cc:			; <UNDEFINED> instruction: 0xffffef78
   3b6d0:			; <UNDEFINED> instruction: 0xffffefcc
   3b6d4:			; <UNDEFINED> instruction: 0xfffff66c
   3b6d8:	andeq	r5, r3, r0, lsr #12
   3b6dc:			; <UNDEFINED> instruction: 0xffffef7c
   3b6e0:			; <UNDEFINED> instruction: 0xfffff5e8
   3b6e4:			; <UNDEFINED> instruction: 0xffffef58
   3b6e8:			; <UNDEFINED> instruction: 0xffffef60
   3b6ec:	andeq	r0, r0, r0, ror #7
   3b6f0:			; <UNDEFINED> instruction: 0xffffef28
   3b6f4:	andeq	r5, r3, r0, lsr #9
   3b6f8:			; <UNDEFINED> instruction: 0xffffeedc
   3b6fc:			; <UNDEFINED> instruction: 0xfffff450
   3b700:			; <UNDEFINED> instruction: 0xffffeec8
   3b704:			; <UNDEFINED> instruction: 0xfffff3dc
   3b708:			; <UNDEFINED> instruction: 0xffffeeb0
   3b70c:			; <UNDEFINED> instruction: 0xfffff364
   3b710:			; <UNDEFINED> instruction: 0xffffeea0
   3b714:			; <UNDEFINED> instruction: 0xfffff2f4
   3b718:			; <UNDEFINED> instruction: 0xffffee1c
   3b71c:			; <UNDEFINED> instruction: 0xffffedf4
   3b720:	ldrdeq	r5, [r3], -ip
   3b724:			; <UNDEFINED> instruction: 0xffffed44
   3b728:			; <UNDEFINED> instruction: 0xffffecf0
   3b72c:	andeq	r5, r3, ip, lsr #2
   3b730:			; <UNDEFINED> instruction: 0xffffec14
   3b734:			; <UNDEFINED> instruction: 0xffffed68
   3b738:	andeq	r5, r3, r8
   3b73c:			; <UNDEFINED> instruction: 0xffffef04
   3b740:	andeq	r0, r0, r8, asr #10
   3b744:			; <UNDEFINED> instruction: 0xffffed0c
   3b748:			; <UNDEFINED> instruction: 0xffffee88
   3b74c:			; <UNDEFINED> instruction: 0xffffed10
   3b750:			; <UNDEFINED> instruction: 0xffffee3c
   3b754:			; <UNDEFINED> instruction: 0xffffec8c
   3b758:			; <UNDEFINED> instruction: 0xffffee18
   3b75c:			; <UNDEFINED> instruction: 0xffffec60
   3b760:			; <UNDEFINED> instruction: 0xffffedec
   3b764:			; <UNDEFINED> instruction: 0xffffec34
   3b768:			; <UNDEFINED> instruction: 0xffffedc0
   3b76c:			; <UNDEFINED> instruction: 0xffffec08
   3b770:			; <UNDEFINED> instruction: 0xffffed94
   3b774:			; <UNDEFINED> instruction: 0xffffebdc
   3b778:			; <UNDEFINED> instruction: 0xffffed68
   3b77c:			; <UNDEFINED> instruction: 0xffffebb0
   3b780:			; <UNDEFINED> instruction: 0xffffed3c
   3b784:			; <UNDEFINED> instruction: 0xffffeb84
   3b788:			; <UNDEFINED> instruction: 0xffffed10
   3b78c:			; <UNDEFINED> instruction: 0xffffeb58
   3b790:			; <UNDEFINED> instruction: 0xffffece4
   3b794:			; <UNDEFINED> instruction: 0xffffeb2c
   3b798:			; <UNDEFINED> instruction: 0xffffecb8
   3b79c:	andeq	r4, r3, r8, lsl #28
   3b7a0:	andeq	r0, r0, r4, lsr r5
   3b7a4:	andeq	r0, r0, r8, ror #7
   3b7a8:	andeq	r7, r1, ip, lsl #8
   3b7ac:			; <UNDEFINED> instruction: 0xffffea1c
   3b7b0:	strdeq	r0, [r0], -r4
   3b7b4:	andeq	r8, r1, r4, lsr r7
   3b7b8:			; <UNDEFINED> instruction: 0xffffe9a4
   3b7bc:	andeq	r0, r0, r8, lsr r5
   3b7c0:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   3b7c4:			; <UNDEFINED> instruction: 0xffffe950
   3b7c8:	andeq	r4, r3, r0, ror #25
   3b7cc:	muleq	r0, r8, r4
   3b7d0:	muleq	r0, ip, r3
   3b7d4:	andeq	r0, r0, ip, lsl #7
   3b7d8:	andeq	r0, r0, ip, ror r3
   3b7dc:	bl	24f6c <newMenu@@Base>
   3b7e0:	subs	fp, r0, #0
   3b7e4:	str	fp, [sp, #12]
   3b7e8:	beq	3c89c <getPreferencesMenu@@Base+0x124c>
   3b7ec:	ldr	r6, [pc, #-368]	; 3b684 <getPreferencesMenu@@Base+0x34>
   3b7f0:	add	r6, pc, r6
   3b7f4:	add	r1, r6, #128	; 0x80
   3b7f8:	bl	255a4 <newSubmenuMenuItem@@Base>
   3b7fc:	subs	r7, r0, #0
   3b800:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b804:	ldr	r3, [pc, #-388]	; 3b688 <getPreferencesMenu@@Base+0x38>
   3b808:	add	r2, r6, #136	; 0x88
   3b80c:	ldr	r5, [r4, r3]
   3b810:	add	r1, r5, #78	; 0x4e
   3b814:	bl	253f0 <newBooleanMenuItem@@Base>
   3b818:	cmp	r0, #0
   3b81c:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b820:	mov	r0, r7
   3b824:	add	r1, r5, #79	; 0x4f
   3b828:	add	r2, r6, #144	; 0x90
   3b82c:	bl	253f0 <newBooleanMenuItem@@Base>
   3b830:	cmp	r0, #0
   3b834:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b838:	mov	r0, r7
   3b83c:	add	r1, r5, #80	; 0x50
   3b840:	add	r2, r6, #152	; 0x98
   3b844:	bl	253f0 <newBooleanMenuItem@@Base>
   3b848:	cmp	r0, #0
   3b84c:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b850:	mov	r0, r7
   3b854:	add	r1, r5, #81	; 0x51
   3b858:	add	r2, r6, #160	; 0xa0
   3b85c:	bl	253f0 <newBooleanMenuItem@@Base>
   3b860:	cmp	r0, #0
   3b864:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b868:	ldr	r0, [sp, #12]
   3b86c:	add	r1, r6, #168	; 0xa8
   3b870:	bl	255a4 <newSubmenuMenuItem@@Base>
   3b874:	subs	r7, r0, #0
   3b878:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b87c:	mov	r3, #3
   3b880:	add	r1, r5, #26
   3b884:	str	r3, [sp]
   3b888:	add	r2, r6, #176	; 0xb0
   3b88c:	add	r3, r6, #184	; 0xb8
   3b890:	bl	253a4 <newStringsMenuItem@@Base>
   3b894:	cmp	r0, #0
   3b898:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b89c:	add	r2, r6, #208	; 0xd0
   3b8a0:	mov	r0, r7
   3b8a4:	add	r1, r5, #38	; 0x26
   3b8a8:	bl	253f0 <newBooleanMenuItem@@Base>
   3b8ac:	cmp	r0, #0
   3b8b0:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b8b4:	ldr	r6, [pc, #-560]	; 3b68c <getPreferencesMenu@@Base+0x3c>
   3b8b8:	ldr	r8, [pc, #-560]	; 3b690 <getPreferencesMenu@@Base+0x40>
   3b8bc:	add	r6, pc, r6
   3b8c0:	add	r8, pc, r8
   3b8c4:	mov	r1, r6
   3b8c8:	bl	25358 <setMenuItemTester@@Base>
   3b8cc:	mov	r1, #3
   3b8d0:	add	r2, r8, #216	; 0xd8
   3b8d4:	str	r1, [sp]
   3b8d8:	add	r3, r8, #224	; 0xe0
   3b8dc:	mov	r0, r7
   3b8e0:	add	r1, r5, #58	; 0x3a
   3b8e4:	bl	253a4 <newStringsMenuItem@@Base>
   3b8e8:	cmp	r0, #0
   3b8ec:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b8f0:	mov	r1, r6
   3b8f4:	bl	25358 <setMenuItemTester@@Base>
   3b8f8:	mov	r3, #5
   3b8fc:	mov	r0, r7
   3b900:	str	r3, [sp]
   3b904:	add	r1, r5, #42	; 0x2a
   3b908:	add	r2, r8, #248	; 0xf8
   3b90c:	add	r3, r8, #256	; 0x100
   3b910:	bl	253a4 <newStringsMenuItem@@Base>
   3b914:	subs	r6, r0, #0
   3b918:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b91c:	ldr	r1, [pc, #-656]	; 3b694 <getPreferencesMenu@@Base+0x44>
   3b920:	add	r1, pc, r1
   3b924:	bl	25358 <setMenuItemTester@@Base>
   3b928:	ldr	r1, [pc, #-664]	; 3b698 <getPreferencesMenu@@Base+0x48>
   3b92c:	mov	r0, r6
   3b930:	add	r1, pc, r1
   3b934:	bl	25360 <setMenuItemChanged@@Base>
   3b938:	ldr	r0, [sp, #12]
   3b93c:	add	r1, r8, #296	; 0x128
   3b940:	bl	255a4 <newSubmenuMenuItem@@Base>
   3b944:	subs	r7, r0, #0
   3b948:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b94c:	add	r1, r5, #2
   3b950:	add	r2, r8, #304	; 0x130
   3b954:	bl	253f0 <newBooleanMenuItem@@Base>
   3b958:	cmp	r0, #0
   3b95c:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b960:	mov	r3, #4
   3b964:	mov	r0, r7
   3b968:	str	r3, [sp]
   3b96c:	add	r1, r5, #12
   3b970:	add	r2, r8, #312	; 0x138
   3b974:	add	r3, r8, #320	; 0x140
   3b978:	bl	253a4 <newStringsMenuItem@@Base>
   3b97c:	cmp	r0, #0
   3b980:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b984:	ldr	r6, [pc, #-752]	; 3b69c <getPreferencesMenu@@Base+0x4c>
   3b988:	add	r6, pc, r6
   3b98c:	mov	r1, r6
   3b990:	bl	25358 <setMenuItemTester@@Base>
   3b994:	mov	r0, r7
   3b998:	add	r1, r5, #6
   3b99c:	add	r2, r8, #352	; 0x160
   3b9a0:	bl	253f0 <newBooleanMenuItem@@Base>
   3b9a4:	cmp	r0, #0
   3b9a8:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3b9ac:	mov	r1, r6
   3b9b0:	mov	sl, #100	; 0x64
   3b9b4:	bl	25358 <setMenuItemTester@@Base>
   3b9b8:	ldr	r3, [pc, #-800]	; 3b6a0 <getPreferencesMenu@@Base+0x50>
   3b9bc:	str	sl, [sp]
   3b9c0:	movw	r9, #26215	; 0x6667
   3b9c4:	movt	r9, #26214	; 0x6666
   3b9c8:	mov	r0, r7
   3b9cc:	ldr	r6, [r4, r3]
   3b9d0:	add	r1, r5, #14
   3b9d4:	add	r2, r8, #360	; 0x168
   3b9d8:	mov	r3, #1
   3b9dc:	ldr	ip, [r6]
   3b9e0:	smull	fp, lr, r9, ip
   3b9e4:	asr	ip, ip, #31
   3b9e8:	rsb	ip, ip, lr, asr #2
   3b9ec:	uxtb	ip, ip
   3b9f0:	str	ip, [sp, #4]
   3b9f4:	bl	25368 <newNumericMenuItem@@Base>
   3b9f8:	cmp	r0, #0
   3b9fc:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3ba00:	ldr	fp, [pc, #-868]	; 3b6a4 <getPreferencesMenu@@Base+0x54>
   3ba04:	add	fp, pc, fp
   3ba08:	mov	r1, fp
   3ba0c:	bl	25358 <setMenuItemTester@@Base>
   3ba10:	ldr	r3, [r6]
   3ba14:	mov	r0, r7
   3ba18:	str	sl, [sp]
   3ba1c:	add	r1, r5, #16
   3ba20:	add	r2, r8, #368	; 0x170
   3ba24:	smull	ip, r9, r9, r3
   3ba28:	asr	ip, r3, #31
   3ba2c:	mov	r3, #1
   3ba30:	rsb	ip, ip, r9, asr #2
   3ba34:	uxtb	ip, ip
   3ba38:	str	ip, [sp, #4]
   3ba3c:	bl	25368 <newNumericMenuItem@@Base>
   3ba40:	cmp	r0, #0
   3ba44:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3ba48:	mov	r1, fp
   3ba4c:	bl	25358 <setMenuItemTester@@Base>
   3ba50:	mov	r0, r7
   3ba54:	add	r1, r5, #4
   3ba58:	add	r2, r8, #376	; 0x178
   3ba5c:	bl	253f0 <newBooleanMenuItem@@Base>
   3ba60:	cmp	r0, #0
   3ba64:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3ba68:	add	r2, r8, #384	; 0x180
   3ba6c:	mov	r0, r7
   3ba70:	add	r1, r5, #10
   3ba74:	bl	253f0 <newBooleanMenuItem@@Base>
   3ba78:	cmp	r0, #0
   3ba7c:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3ba80:	ldr	r1, [pc, #-992]	; 3b6a8 <getPreferencesMenu@@Base+0x58>
   3ba84:	movw	r9, #26215	; 0x6667
   3ba88:	movt	r9, #26214	; 0x6666
   3ba8c:	ldr	r8, [pc, #-1000]	; 3b6ac <getPreferencesMenu@@Base+0x5c>
   3ba90:	add	r1, pc, r1
   3ba94:	bl	25358 <setMenuItemTester@@Base>
   3ba98:	ldr	r3, [r6]
   3ba9c:	add	r8, pc, r8
   3baa0:	str	sl, [sp]
   3baa4:	mov	r0, r7
   3baa8:	add	r1, r5, #22
   3baac:	smull	r2, ip, r9, r3
   3bab0:	asr	lr, r3, #31
   3bab4:	add	r2, r8, #392	; 0x188
   3bab8:	mov	r3, #1
   3babc:	rsb	ip, lr, ip, asr #2
   3bac0:	uxtb	ip, ip
   3bac4:	str	ip, [sp, #4]
   3bac8:	bl	25368 <newNumericMenuItem@@Base>
   3bacc:	cmp	r0, #0
   3bad0:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bad4:	ldr	fp, [pc, #-1068]	; 3b6b0 <getPreferencesMenu@@Base+0x60>
   3bad8:	add	fp, pc, fp
   3badc:	mov	r1, fp
   3bae0:	bl	25358 <setMenuItemTester@@Base>
   3bae4:	ldr	ip, [r6]
   3bae8:	mov	r0, r7
   3baec:	str	sl, [sp]
   3baf0:	add	r1, r5, #24
   3baf4:	add	r2, r8, #400	; 0x190
   3baf8:	smull	r3, lr, r9, ip
   3bafc:	asr	ip, ip, #31
   3bb00:	mov	r3, #1
   3bb04:	rsb	ip, ip, lr, asr #2
   3bb08:	uxtb	ip, ip
   3bb0c:	str	ip, [sp, #4]
   3bb10:	bl	25368 <newNumericMenuItem@@Base>
   3bb14:	cmp	r0, #0
   3bb18:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bb1c:	mov	r1, fp
   3bb20:	bl	25358 <setMenuItemTester@@Base>
   3bb24:	mov	r0, r7
   3bb28:	add	r1, r5, #8
   3bb2c:	add	r2, r8, #408	; 0x198
   3bb30:	bl	253f0 <newBooleanMenuItem@@Base>
   3bb34:	cmp	r0, #0
   3bb38:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bb3c:	ldr	ip, [r6]
   3bb40:	mov	r0, r7
   3bb44:	str	sl, [sp]
   3bb48:	add	r1, r5, #18
   3bb4c:	add	r2, r8, #416	; 0x1a0
   3bb50:	mov	r3, #1
   3bb54:	smull	fp, lr, r9, ip
   3bb58:	asr	ip, ip, #31
   3bb5c:	rsb	ip, ip, lr, asr #2
   3bb60:	uxtb	ip, ip
   3bb64:	str	ip, [sp, #4]
   3bb68:	bl	25368 <newNumericMenuItem@@Base>
   3bb6c:	cmp	r0, #0
   3bb70:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bb74:	ldr	fp, [pc, #-1224]	; 3b6b4 <getPreferencesMenu@@Base+0x64>
   3bb78:	add	fp, pc, fp
   3bb7c:	mov	r1, fp
   3bb80:	bl	25358 <setMenuItemTester@@Base>
   3bb84:	ldr	r3, [r6]
   3bb88:	mov	r0, r7
   3bb8c:	str	sl, [sp]
   3bb90:	add	r1, r5, #20
   3bb94:	add	r2, r8, #424	; 0x1a8
   3bb98:	smull	ip, r9, r9, r3
   3bb9c:	asr	ip, r3, #31
   3bba0:	mov	r3, #1
   3bba4:	rsb	ip, ip, r9, asr #2
   3bba8:	uxtb	ip, ip
   3bbac:	str	ip, [sp, #4]
   3bbb0:	bl	25368 <newNumericMenuItem@@Base>
   3bbb4:	cmp	r0, #0
   3bbb8:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bbbc:	mov	r1, fp
   3bbc0:	bl	25358 <setMenuItemTester@@Base>
   3bbc4:	ldr	r0, [sp, #12]
   3bbc8:	add	r1, r8, #432	; 0x1b0
   3bbcc:	bl	255a4 <newSubmenuMenuItem@@Base>
   3bbd0:	subs	sl, r0, #0
   3bbd4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bbd8:	add	r1, r5, #32
   3bbdc:	add	r2, r8, #440	; 0x1b8
   3bbe0:	bl	253f0 <newBooleanMenuItem@@Base>
   3bbe4:	cmp	r0, #0
   3bbe8:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bbec:	mov	r0, sl
   3bbf0:	add	r1, r5, #36	; 0x24
   3bbf4:	add	r2, r8, #448	; 0x1c0
   3bbf8:	bl	253f0 <newBooleanMenuItem@@Base>
   3bbfc:	cmp	r0, #0
   3bc00:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bc04:	mov	r3, #3
   3bc08:	mov	r0, sl
   3bc0c:	str	r3, [sp]
   3bc10:	add	r1, r5, #34	; 0x22
   3bc14:	add	r2, r8, #456	; 0x1c8
   3bc18:	add	r3, r8, #464	; 0x1d0
   3bc1c:	bl	253a4 <newStringsMenuItem@@Base>
   3bc20:	cmp	r0, #0
   3bc24:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bc28:	ldr	r1, [pc, #-1400]	; 3b6b8 <getPreferencesMenu@@Base+0x68>
   3bc2c:	add	r1, pc, r1
   3bc30:	bl	25358 <setMenuItemTester@@Base>
   3bc34:	mov	r0, sl
   3bc38:	add	r2, r8, #488	; 0x1e8
   3bc3c:	add	r1, r5, #28
   3bc40:	bl	253f0 <newBooleanMenuItem@@Base>
   3bc44:	cmp	r0, #0
   3bc48:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bc4c:	ldr	r7, [pc, #-1432]	; 3b6bc <getPreferencesMenu@@Base+0x6c>
   3bc50:	mov	r0, sl
   3bc54:	add	r1, r5, #29
   3bc58:	add	r7, pc, r7
   3bc5c:	add	r2, r7, #496	; 0x1f0
   3bc60:	bl	253f0 <newBooleanMenuItem@@Base>
   3bc64:	cmp	r0, #0
   3bc68:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bc6c:	ldr	r1, [pc, #-1460]	; 3b6c0 <getPreferencesMenu@@Base+0x70>
   3bc70:	mov	r9, #1
   3bc74:	add	r1, pc, r1
   3bc78:	bl	25358 <setMenuItemTester@@Base>
   3bc7c:	mov	r3, #20
   3bc80:	str	r9, [sp, #4]
   3bc84:	mov	r0, sl
   3bc88:	str	r3, [sp]
   3bc8c:	add	r1, r5, #39	; 0x27
   3bc90:	add	r2, r7, #504	; 0x1f8
   3bc94:	mov	r3, #0
   3bc98:	bl	25368 <newNumericMenuItem@@Base>
   3bc9c:	cmp	r0, #0
   3bca0:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bca4:	ldr	r1, [pc, #-1512]	; 3b6c4 <getPreferencesMenu@@Base+0x74>
   3bca8:	add	r1, pc, r1
   3bcac:	bl	25360 <setMenuItemChanged@@Base>
   3bcb0:	mov	r0, sl
   3bcb4:	add	r1, r5, #23
   3bcb8:	add	r2, r7, #512	; 0x200
   3bcbc:	bl	253f0 <newBooleanMenuItem@@Base>
   3bcc0:	cmp	r0, #0
   3bcc4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bcc8:	ldr	r0, [sp, #12]
   3bccc:	add	r1, r7, #520	; 0x208
   3bcd0:	bl	255a4 <newSubmenuMenuItem@@Base>
   3bcd4:	subs	r8, r0, #0
   3bcd8:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bcdc:	add	r1, r5, #7
   3bce0:	add	r2, r7, #528	; 0x210
   3bce4:	bl	253f0 <newBooleanMenuItem@@Base>
   3bce8:	cmp	r0, #0
   3bcec:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bcf0:	ldr	r1, [pc, #-1584]	; 3b6c8 <getPreferencesMenu@@Base+0x78>
   3bcf4:	add	r1, pc, r1
   3bcf8:	bl	25360 <setMenuItemChanged@@Base>
   3bcfc:	mov	r0, r8
   3bd00:	add	r1, r5, #27
   3bd04:	add	r2, r7, #536	; 0x218
   3bd08:	bl	253f0 <newBooleanMenuItem@@Base>
   3bd0c:	cmp	r0, #0
   3bd10:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bd14:	ldr	sl, [pc, #-1616]	; 3b6cc <getPreferencesMenu@@Base+0x7c>
   3bd18:	movw	fp, #26215	; 0x6667
   3bd1c:	movt	fp, #26214	; 0x6666
   3bd20:	add	sl, pc, sl
   3bd24:	mov	r1, sl
   3bd28:	bl	25358 <setMenuItemTester@@Base>
   3bd2c:	ldr	ip, [r6]
   3bd30:	mov	r2, #100	; 0x64
   3bd34:	mov	r0, r8
   3bd38:	str	r2, [sp]
   3bd3c:	add	r1, r5, #9
   3bd40:	smull	r3, lr, fp, ip
   3bd44:	asr	ip, ip, #31
   3bd48:	add	r2, r7, #544	; 0x220
   3bd4c:	mov	r3, r9
   3bd50:	rsb	ip, ip, lr, asr #2
   3bd54:	uxtb	ip, ip
   3bd58:	str	ip, [sp, #4]
   3bd5c:	bl	25368 <newNumericMenuItem@@Base>
   3bd60:	cmp	r0, #0
   3bd64:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bd68:	mov	r1, sl
   3bd6c:	bl	25358 <setMenuItemTester@@Base>
   3bd70:	ldr	r2, [r6]
   3bd74:	mov	ip, #100	; 0x64
   3bd78:	str	ip, [sp]
   3bd7c:	mov	r3, r9
   3bd80:	mov	r0, r8
   3bd84:	smull	ip, fp, fp, r2
   3bd88:	asr	ip, r2, #31
   3bd8c:	add	r1, r5, #11
   3bd90:	add	r2, r7, #552	; 0x228
   3bd94:	rsb	ip, ip, fp, asr #2
   3bd98:	uxtb	ip, ip
   3bd9c:	str	ip, [sp, #4]
   3bda0:	bl	25368 <newNumericMenuItem@@Base>
   3bda4:	cmp	r0, #0
   3bda8:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bdac:	mov	r1, sl
   3bdb0:	bl	25358 <setMenuItemTester@@Base>
   3bdb4:	mov	r3, #5
   3bdb8:	mov	r0, r8
   3bdbc:	add	r1, r5, r3
   3bdc0:	str	r3, [sp]
   3bdc4:	add	r2, r7, #560	; 0x230
   3bdc8:	add	r3, r7, #568	; 0x238
   3bdcc:	bl	253a4 <newStringsMenuItem@@Base>
   3bdd0:	subs	r8, r0, #0
   3bdd4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bdd8:	ldr	r1, [pc, #-1808]	; 3b6d0 <getPreferencesMenu@@Base+0x80>
   3bddc:	add	r1, pc, r1
   3bde0:	bl	25358 <setMenuItemTester@@Base>
   3bde4:	ldr	r1, [pc, #-1816]	; 3b6d4 <getPreferencesMenu@@Base+0x84>
   3bde8:	mov	r0, r8
   3bdec:	add	r1, pc, r1
   3bdf0:	bl	25360 <setMenuItemChanged@@Base>
   3bdf4:	ldr	r0, [sp, #12]
   3bdf8:	add	r1, r7, #608	; 0x260
   3bdfc:	bl	255a4 <newSubmenuMenuItem@@Base>
   3be00:	subs	r8, r0, #0
   3be04:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3be08:	ldr	r7, [pc, #-1848]	; 3b6d8 <getPreferencesMenu@@Base+0x88>
   3be0c:	mov	r0, r8
   3be10:	add	r1, r5, #30
   3be14:	add	r7, pc, r7
   3be18:	add	r2, r7, #616	; 0x268
   3be1c:	bl	253f0 <newBooleanMenuItem@@Base>
   3be20:	cmp	r0, #0
   3be24:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3be28:	mov	r3, #4
   3be2c:	mov	r0, r8
   3be30:	str	r3, [sp]
   3be34:	add	r1, r5, #31
   3be38:	add	r2, r7, #624	; 0x270
   3be3c:	add	r3, r7, #632	; 0x278
   3be40:	bl	253a4 <newStringsMenuItem@@Base>
   3be44:	subs	r9, r0, #0
   3be48:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3be4c:	ldr	r1, [pc, #-1912]	; 3b6dc <getPreferencesMenu@@Base+0x8c>
   3be50:	mov	sl, #100	; 0x64
   3be54:	add	r1, pc, r1
   3be58:	bl	25358 <setMenuItemTester@@Base>
   3be5c:	ldr	r1, [pc, #-1924]	; 3b6e0 <getPreferencesMenu@@Base+0x90>
   3be60:	mov	r0, r9
   3be64:	mov	r9, #5
   3be68:	add	r1, pc, r1
   3be6c:	bl	25360 <setMenuItemChanged@@Base>
   3be70:	str	sl, [sp]
   3be74:	str	r9, [sp, #4]
   3be78:	mov	r0, r8
   3be7c:	add	r1, r5, #17
   3be80:	add	r2, r7, #664	; 0x298
   3be84:	mov	r3, #0
   3be88:	bl	25368 <newNumericMenuItem@@Base>
   3be8c:	cmp	r0, #0
   3be90:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3be94:	ldr	r1, [pc, #-1976]	; 3b6e4 <getPreferencesMenu@@Base+0x94>
   3be98:	add	r1, pc, r1
   3be9c:	bl	25358 <setMenuItemTester@@Base>
   3bea0:	str	sl, [sp]
   3bea4:	str	r9, [sp, #4]
   3bea8:	mov	r0, r8
   3beac:	add	r1, r5, #19
   3beb0:	add	r2, r7, #672	; 0x2a0
   3beb4:	mov	r3, #0
   3beb8:	bl	25368 <newNumericMenuItem@@Base>
   3bebc:	cmp	r0, #0
   3bec0:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bec4:	ldr	fp, [pc, #-2020]	; 3b6e8 <getPreferencesMenu@@Base+0x98>
   3bec8:	add	fp, pc, fp
   3becc:	mov	r1, fp
   3bed0:	bl	25358 <setMenuItemTester@@Base>
   3bed4:	bl	3b5d0 <makeMidiInstrumentMenuStrings@@Base>
   3bed8:	subs	r3, r0, #0
   3bedc:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bee0:	ldr	ip, [pc, #-2044]	; 3b6ec <getPreferencesMenu@@Base+0x9c>
   3bee4:	mov	r0, r8
   3bee8:	add	r1, r5, #37	; 0x25
   3beec:	add	r2, r7, #680	; 0x2a8
   3bef0:	ldr	ip, [r4, ip]
   3bef4:	ldrb	ip, [ip]
   3bef8:	str	ip, [sp]
   3befc:	bl	253a4 <newStringsMenuItem@@Base>
   3bf00:	cmp	r0, #0
   3bf04:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bf08:	mov	r1, fp
   3bf0c:	bl	25358 <setMenuItemTester@@Base>
   3bf10:	str	sl, [sp]
   3bf14:	str	r9, [sp, #4]
   3bf18:	mov	r0, r8
   3bf1c:	add	r1, r5, #21
   3bf20:	add	r2, r7, #688	; 0x2b0
   3bf24:	mov	r3, #0
   3bf28:	bl	25368 <newNumericMenuItem@@Base>
   3bf2c:	cmp	r0, #0
   3bf30:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bf34:	ldr	r1, [pc, #-2124]	; 3b6f0 <getPreferencesMenu@@Base+0xa0>
   3bf38:	add	r1, pc, r1
   3bf3c:	bl	25358 <setMenuItemTester@@Base>
   3bf40:	mov	r0, r8
   3bf44:	add	r1, r5, #35	; 0x23
   3bf48:	add	r2, r7, #696	; 0x2b8
   3bf4c:	bl	253f0 <newBooleanMenuItem@@Base>
   3bf50:	cmp	r0, #0
   3bf54:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bf58:	mov	r0, r8
   3bf5c:	add	r1, r5, #33	; 0x21
   3bf60:	add	r2, r7, #704	; 0x2c0
   3bf64:	bl	253f0 <newBooleanMenuItem@@Base>
   3bf68:	cmp	r0, #0
   3bf6c:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bf70:	add	r1, r7, #712	; 0x2c8
   3bf74:	ldr	r0, [sp, #12]
   3bf78:	bl	255a4 <newSubmenuMenuItem@@Base>
   3bf7c:	subs	r7, r0, #0
   3bf80:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bf84:	ldr	r8, [pc, #-2200]	; 3b6f4 <getPreferencesMenu@@Base+0xa4>
   3bf88:	mov	sl, #20
   3bf8c:	mov	r9, #1
   3bf90:	str	sl, [sp]
   3bf94:	add	r8, pc, r8
   3bf98:	str	r9, [sp, #4]
   3bf9c:	add	r2, r8, #720	; 0x2d0
   3bfa0:	mov	r0, r7
   3bfa4:	add	r1, r5, #41	; 0x29
   3bfa8:	mov	r3, #0
   3bfac:	bl	25368 <newNumericMenuItem@@Base>
   3bfb0:	subs	fp, r0, #0
   3bfb4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bfb8:	ldr	r1, [pc, #-2248]	; 3b6f8 <getPreferencesMenu@@Base+0xa8>
   3bfbc:	add	r1, pc, r1
   3bfc0:	bl	25358 <setMenuItemTester@@Base>
   3bfc4:	ldr	r1, [pc, #-2256]	; 3b6fc <getPreferencesMenu@@Base+0xac>
   3bfc8:	mov	r0, fp
   3bfcc:	add	r1, pc, r1
   3bfd0:	bl	25360 <setMenuItemChanged@@Base>
   3bfd4:	str	sl, [sp]
   3bfd8:	str	r9, [sp, #4]
   3bfdc:	mov	r0, r7
   3bfe0:	add	r1, r5, #40	; 0x28
   3bfe4:	add	r2, r8, #728	; 0x2d8
   3bfe8:	mov	r3, #0
   3bfec:	bl	25368 <newNumericMenuItem@@Base>
   3bff0:	subs	fp, r0, #0
   3bff4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3bff8:	ldr	r1, [pc, #-2304]	; 3b700 <getPreferencesMenu@@Base+0xb0>
   3bffc:	add	r1, pc, r1
   3c000:	bl	25358 <setMenuItemTester@@Base>
   3c004:	ldr	r1, [pc, #-2312]	; 3b704 <getPreferencesMenu@@Base+0xb4>
   3c008:	mov	r0, fp
   3c00c:	add	r1, pc, r1
   3c010:	bl	25360 <setMenuItemChanged@@Base>
   3c014:	str	sl, [sp]
   3c018:	str	r9, [sp, #4]
   3c01c:	mov	r0, r7
   3c020:	add	r1, r5, #44	; 0x2c
   3c024:	add	r2, r8, #736	; 0x2e0
   3c028:	mov	r3, #0
   3c02c:	bl	25368 <newNumericMenuItem@@Base>
   3c030:	subs	sl, r0, #0
   3c034:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c038:	ldr	r1, [pc, #-2360]	; 3b708 <getPreferencesMenu@@Base+0xb8>
   3c03c:	mov	r9, #3
   3c040:	add	r1, pc, r1
   3c044:	bl	25358 <setMenuItemTester@@Base>
   3c048:	ldr	r1, [pc, #-2372]	; 3b70c <getPreferencesMenu@@Base+0xbc>
   3c04c:	mov	r0, sl
   3c050:	add	r1, pc, r1
   3c054:	bl	25360 <setMenuItemChanged@@Base>
   3c058:	str	r9, [sp]
   3c05c:	mov	r0, r7
   3c060:	add	r1, r5, #43	; 0x2b
   3c064:	add	r2, r8, #744	; 0x2e8
   3c068:	add	r3, r8, #752	; 0x2f0
   3c06c:	bl	253a4 <newStringsMenuItem@@Base>
   3c070:	subs	sl, r0, #0
   3c074:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c078:	ldr	r1, [pc, #-2416]	; 3b710 <getPreferencesMenu@@Base+0xc0>
   3c07c:	add	r1, pc, r1
   3c080:	bl	25358 <setMenuItemTester@@Base>
   3c084:	ldr	r1, [pc, #-2424]	; 3b714 <getPreferencesMenu@@Base+0xc4>
   3c088:	mov	r0, sl
   3c08c:	add	r1, pc, r1
   3c090:	bl	25360 <setMenuItemChanged@@Base>
   3c094:	str	r9, [sp]
   3c098:	mov	r0, r7
   3c09c:	add	r1, r5, #59	; 0x3b
   3c0a0:	add	r2, r8, #776	; 0x308
   3c0a4:	add	r3, r8, #784	; 0x310
   3c0a8:	bl	253a4 <newStringsMenuItem@@Base>
   3c0ac:	cmp	r0, #0
   3c0b0:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c0b4:	mov	r9, #2
   3c0b8:	mov	r0, r7
   3c0bc:	str	r9, [sp]
   3c0c0:	add	r1, r5, #60	; 0x3c
   3c0c4:	add	r2, r8, #808	; 0x328
   3c0c8:	add	r3, r8, #816	; 0x330
   3c0cc:	bl	253a4 <newStringsMenuItem@@Base>
   3c0d0:	cmp	r0, #0
   3c0d4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c0d8:	str	r9, [sp]
   3c0dc:	mov	r0, r7
   3c0e0:	add	r1, r5, #13
   3c0e4:	add	r2, r8, #832	; 0x340
   3c0e8:	add	r3, r8, #840	; 0x348
   3c0ec:	bl	253a4 <newStringsMenuItem@@Base>
   3c0f0:	cmp	r0, #0
   3c0f4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c0f8:	mov	r0, r7
   3c0fc:	add	r1, r5, #15
   3c100:	add	r2, r8, #856	; 0x358
   3c104:	bl	253f0 <newBooleanMenuItem@@Base>
   3c108:	cmp	r0, #0
   3c10c:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c110:	mov	r0, r7
   3c114:	add	r1, r5, #61	; 0x3d
   3c118:	add	r2, r8, #864	; 0x360
   3c11c:	bl	253f0 <newBooleanMenuItem@@Base>
   3c120:	cmp	r0, #0
   3c124:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c128:	ldr	r1, [pc, #-2584]	; 3b718 <getPreferencesMenu@@Base+0xc8>
   3c12c:	add	r1, pc, r1
   3c130:	bl	25358 <setMenuItemTester@@Base>
   3c134:	mov	r0, r7
   3c138:	add	r2, r8, #872	; 0x368
   3c13c:	add	r1, r5, #62	; 0x3e
   3c140:	bl	253f0 <newBooleanMenuItem@@Base>
   3c144:	cmp	r0, #0
   3c148:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c14c:	ldr	r9, [pc, #-2616]	; 3b71c <getPreferencesMenu@@Base+0xcc>
   3c150:	ldr	r8, [pc, #-2616]	; 3b720 <getPreferencesMenu@@Base+0xd0>
   3c154:	add	r9, pc, r9
   3c158:	add	r8, pc, r8
   3c15c:	mov	r1, r9
   3c160:	bl	25358 <setMenuItemTester@@Base>
   3c164:	add	r2, r8, #880	; 0x370
   3c168:	mov	r0, r7
   3c16c:	add	r1, r5, #63	; 0x3f
   3c170:	bl	253f0 <newBooleanMenuItem@@Base>
   3c174:	cmp	r0, #0
   3c178:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c17c:	mov	r1, r9
   3c180:	bl	25358 <setMenuItemTester@@Base>
   3c184:	mov	r0, r7
   3c188:	add	r1, r5, #64	; 0x40
   3c18c:	add	r2, r8, #888	; 0x378
   3c190:	bl	253f0 <newBooleanMenuItem@@Base>
   3c194:	cmp	r0, #0
   3c198:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c19c:	mov	r1, r9
   3c1a0:	bl	25358 <setMenuItemTester@@Base>
   3c1a4:	mov	r0, r7
   3c1a8:	add	r1, r5, #65	; 0x41
   3c1ac:	add	r2, r8, #896	; 0x380
   3c1b0:	bl	253f0 <newBooleanMenuItem@@Base>
   3c1b4:	cmp	r0, #0
   3c1b8:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c1bc:	mov	r1, r9
   3c1c0:	bl	25358 <setMenuItemTester@@Base>
   3c1c4:	mov	r0, r7
   3c1c8:	add	r1, r5, #66	; 0x42
   3c1cc:	add	r2, r8, #904	; 0x388
   3c1d0:	bl	253f0 <newBooleanMenuItem@@Base>
   3c1d4:	cmp	r0, #0
   3c1d8:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c1dc:	mov	r1, r9
   3c1e0:	bl	25358 <setMenuItemTester@@Base>
   3c1e4:	mov	r0, r7
   3c1e8:	add	r1, r5, #67	; 0x43
   3c1ec:	add	r2, r8, #912	; 0x390
   3c1f0:	bl	253f0 <newBooleanMenuItem@@Base>
   3c1f4:	cmp	r0, #0
   3c1f8:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c1fc:	mov	r3, #4
   3c200:	mov	r0, r7
   3c204:	str	r3, [sp]
   3c208:	add	r1, r5, #68	; 0x44
   3c20c:	add	r2, r8, #920	; 0x398
   3c210:	add	r3, r8, #320	; 0x140
   3c214:	bl	253a4 <newStringsMenuItem@@Base>
   3c218:	cmp	r0, #0
   3c21c:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c220:	ldr	r9, [pc, #-2820]	; 3b724 <getPreferencesMenu@@Base+0xd4>
   3c224:	add	r9, pc, r9
   3c228:	mov	r1, r9
   3c22c:	bl	25358 <setMenuItemTester@@Base>
   3c230:	mov	r0, r7
   3c234:	add	r1, r5, #69	; 0x45
   3c238:	add	r2, r8, #928	; 0x3a0
   3c23c:	bl	253f0 <newBooleanMenuItem@@Base>
   3c240:	cmp	r0, #0
   3c244:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c248:	mov	r1, r9
   3c24c:	movw	r9, #26215	; 0x6667
   3c250:	bl	25358 <setMenuItemTester@@Base>
   3c254:	ldr	r3, [r6]
   3c258:	movt	r9, #26214	; 0x6666
   3c25c:	mov	sl, #100	; 0x64
   3c260:	mov	r0, r7
   3c264:	str	sl, [sp]
   3c268:	smull	r2, ip, r9, r3
   3c26c:	asr	lr, r3, #31
   3c270:	add	r1, r5, #70	; 0x46
   3c274:	add	r2, r8, #936	; 0x3a8
   3c278:	mov	r3, #1
   3c27c:	rsb	ip, lr, ip, asr #2
   3c280:	uxtb	ip, ip
   3c284:	str	ip, [sp, #4]
   3c288:	bl	25368 <newNumericMenuItem@@Base>
   3c28c:	cmp	r0, #0
   3c290:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c294:	ldr	fp, [pc, #-2932]	; 3b728 <getPreferencesMenu@@Base+0xd8>
   3c298:	add	fp, pc, fp
   3c29c:	mov	r1, fp
   3c2a0:	bl	25358 <setMenuItemTester@@Base>
   3c2a4:	ldr	r3, [r6]
   3c2a8:	mov	r0, r7
   3c2ac:	str	sl, [sp]
   3c2b0:	add	r1, r5, #71	; 0x47
   3c2b4:	add	r2, r8, #944	; 0x3b0
   3c2b8:	smull	ip, r9, r9, r3
   3c2bc:	asr	ip, r3, #31
   3c2c0:	mov	r3, #1
   3c2c4:	rsb	ip, ip, r9, asr #2
   3c2c8:	uxtb	ip, ip
   3c2cc:	str	ip, [sp, #4]
   3c2d0:	bl	25368 <newNumericMenuItem@@Base>
   3c2d4:	cmp	r0, #0
   3c2d8:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c2dc:	mov	r1, fp
   3c2e0:	bl	25358 <setMenuItemTester@@Base>
   3c2e4:	ldr	r0, [sp, #12]
   3c2e8:	add	r1, r8, #952	; 0x3b8
   3c2ec:	bl	255a4 <newSubmenuMenuItem@@Base>
   3c2f0:	subs	r7, r0, #0
   3c2f4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c2f8:	ldr	r6, [pc, #-3028]	; 3b72c <getPreferencesMenu@@Base+0xdc>
   3c2fc:	mov	r8, #2
   3c300:	mov	r0, r7
   3c304:	str	r8, [sp]
   3c308:	add	r6, pc, r6
   3c30c:	add	r1, r5, #72	; 0x48
   3c310:	add	r2, r6, #960	; 0x3c0
   3c314:	add	r3, r6, #968	; 0x3c8
   3c318:	bl	253a4 <newStringsMenuItem@@Base>
   3c31c:	cmp	r0, #0
   3c320:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c324:	str	r8, [sp]
   3c328:	mov	r0, r7
   3c32c:	add	r1, r5, #73	; 0x49
   3c330:	add	r2, r6, #984	; 0x3d8
   3c334:	add	r3, r6, #992	; 0x3e0
   3c338:	bl	253a4 <newStringsMenuItem@@Base>
   3c33c:	cmp	r0, #0
   3c340:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c344:	mov	r0, r7
   3c348:	add	r1, r5, #74	; 0x4a
   3c34c:	add	r2, r6, #1008	; 0x3f0
   3c350:	bl	253f0 <newBooleanMenuItem@@Base>
   3c354:	cmp	r0, #0
   3c358:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c35c:	mov	r8, #3
   3c360:	mov	r0, r7
   3c364:	str	r8, [sp]
   3c368:	add	r1, r5, #75	; 0x4b
   3c36c:	add	r2, r6, #1016	; 0x3f8
   3c370:	add	r3, r6, #1024	; 0x400
   3c374:	bl	253a4 <newStringsMenuItem@@Base>
   3c378:	cmp	r0, #0
   3c37c:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c380:	add	r2, r6, #1040	; 0x410
   3c384:	str	r8, [sp]
   3c388:	add	r2, r2, #8
   3c38c:	mov	r0, r7
   3c390:	add	r1, r5, #76	; 0x4c
   3c394:	add	r3, r6, #1056	; 0x420
   3c398:	bl	253a4 <newStringsMenuItem@@Base>
   3c39c:	cmp	r0, #0
   3c3a0:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c3a4:	ldr	r9, [pc, #-3196]	; 3b730 <getPreferencesMenu@@Base+0xe0>
   3c3a8:	add	r9, pc, r9
   3c3ac:	mov	r1, r9
   3c3b0:	bl	25358 <setMenuItemTester@@Base>
   3c3b4:	add	r2, r6, #1072	; 0x430
   3c3b8:	str	r8, [sp]
   3c3bc:	mov	r0, r7
   3c3c0:	add	r2, r2, #8
   3c3c4:	add	r1, r5, #77	; 0x4d
   3c3c8:	add	r3, r6, #1088	; 0x440
   3c3cc:	bl	253a4 <newStringsMenuItem@@Base>
   3c3d0:	cmp	r0, #0
   3c3d4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c3d8:	mov	r1, r9
   3c3dc:	bl	25358 <setMenuItemTester@@Base>
   3c3e0:	add	r1, r6, #1104	; 0x450
   3c3e4:	ldr	r0, [sp, #12]
   3c3e8:	add	r1, r1, #8
   3c3ec:	bl	255a4 <newSubmenuMenuItem@@Base>
   3c3f0:	subs	r7, r0, #0
   3c3f4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c3f8:	add	r2, r6, #1120	; 0x460
   3c3fc:	str	r8, [sp]
   3c400:	add	r1, r5, #45	; 0x2d
   3c404:	add	r3, r2, #8
   3c408:	bl	253a4 <newStringsMenuItem@@Base>
   3c40c:	subs	r6, r0, #0
   3c410:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c414:	ldr	r1, [pc, #-3304]	; 3b734 <getPreferencesMenu@@Base+0xe4>
   3c418:	ldr	r9, [pc, #-3304]	; 3b738 <getPreferencesMenu@@Base+0xe8>
   3c41c:	add	r1, pc, r1
   3c420:	bl	25358 <setMenuItemTester@@Base>
   3c424:	ldr	r1, [pc, #-3312]	; 3b73c <getPreferencesMenu@@Base+0xec>
   3c428:	mov	r0, r6
   3c42c:	add	r9, pc, r9
   3c430:	add	r1, pc, r1
   3c434:	add	sl, r9, #1152	; 0x480
   3c438:	bl	25360 <setMenuItemChanged@@Base>
   3c43c:	ldr	r3, [pc, #-3332]	; 3b740 <getPreferencesMenu@@Base+0xf0>
   3c440:	mov	r0, r7
   3c444:	add	r1, r5, #46	; 0x2e
   3c448:	mov	r2, sl
   3c44c:	ldr	r3, [r4, r3]
   3c450:	ldr	r3, [r3]
   3c454:	cmp	r3, r8
   3c458:	mov	r8, #1
   3c45c:	asrgt	r3, r3, #1
   3c460:	str	r8, [sp, #4]
   3c464:	subgt	r3, r3, #1
   3c468:	movle	r3, #0
   3c46c:	uxtbgt	r3, r3
   3c470:	str	r3, [sp]
   3c474:	mov	r3, #0
   3c478:	bl	25368 <newNumericMenuItem@@Base>
   3c47c:	subs	fp, r0, #0
   3c480:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c484:	ldr	r1, [pc, #-3400]	; 3b744 <getPreferencesMenu@@Base+0xf4>
   3c488:	mov	r6, #5
   3c48c:	add	r1, pc, r1
   3c490:	bl	25358 <setMenuItemTester@@Base>
   3c494:	ldr	r1, [pc, #-3412]	; 3b748 <getPreferencesMenu@@Base+0xf8>
   3c498:	mov	r0, fp
   3c49c:	add	r1, pc, r1
   3c4a0:	bl	25360 <setMenuItemChanged@@Base>
   3c4a4:	add	r1, r5, #47	; 0x2f
   3c4a8:	add	r2, sl, #8
   3c4ac:	add	r3, r9, #1168	; 0x490
   3c4b0:	str	r6, [sp]
   3c4b4:	mov	r0, r7
   3c4b8:	bl	253a4 <newStringsMenuItem@@Base>
   3c4bc:	subs	r5, r0, #0
   3c4c0:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c4c4:	ldr	r1, [pc, #-3456]	; 3b74c <getPreferencesMenu@@Base+0xfc>
   3c4c8:	add	r1, pc, r1
   3c4cc:	bl	25358 <setMenuItemTester@@Base>
   3c4d0:	ldr	r1, [pc, #-3464]	; 3b750 <getPreferencesMenu@@Base+0x100>
   3c4d4:	mov	r0, r5
   3c4d8:	add	r1, pc, r1
   3c4dc:	bl	25360 <setMenuItemChanged@@Base>
   3c4e0:	ldr	r2, [pc, #-3476]	; 3b754 <getPreferencesMenu@@Base+0x104>
   3c4e4:	ldr	r3, [pc, #-3476]	; 3b758 <getPreferencesMenu@@Base+0x108>
   3c4e8:	mov	r0, r7
   3c4ec:	mov	r1, r8
   3c4f0:	add	r2, pc, r2
   3c4f4:	add	r3, pc, r3
   3c4f8:	bl	3b4b0 <initializeMenuScreen@@Base+0x8fc>
   3c4fc:	cmp	r0, #0
   3c500:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c504:	ldr	r2, [pc, #-3504]	; 3b75c <getPreferencesMenu@@Base+0x10c>
   3c508:	mov	r0, r7
   3c50c:	ldr	r3, [pc, #-3508]	; 3b760 <getPreferencesMenu@@Base+0x110>
   3c510:	mov	r1, #2
   3c514:	add	r2, pc, r2
   3c518:	add	r3, pc, r3
   3c51c:	bl	3b4b0 <initializeMenuScreen@@Base+0x8fc>
   3c520:	cmp	r0, #0
   3c524:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c528:	ldr	r2, [pc, #-3532]	; 3b764 <getPreferencesMenu@@Base+0x114>
   3c52c:	mov	r0, r7
   3c530:	ldr	r3, [pc, #-3536]	; 3b768 <getPreferencesMenu@@Base+0x118>
   3c534:	mov	r1, #3
   3c538:	add	r2, pc, r2
   3c53c:	add	r3, pc, r3
   3c540:	bl	3b4b0 <initializeMenuScreen@@Base+0x8fc>
   3c544:	cmp	r0, #0
   3c548:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c54c:	ldr	r2, [pc, #-3560]	; 3b76c <getPreferencesMenu@@Base+0x11c>
   3c550:	mov	r0, r7
   3c554:	ldr	r3, [pc, #-3564]	; 3b770 <getPreferencesMenu@@Base+0x120>
   3c558:	mov	r1, #4
   3c55c:	add	r2, pc, r2
   3c560:	add	r3, pc, r3
   3c564:	bl	3b4b0 <initializeMenuScreen@@Base+0x8fc>
   3c568:	cmp	r0, #0
   3c56c:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c570:	ldr	r2, [pc, #-3588]	; 3b774 <getPreferencesMenu@@Base+0x124>
   3c574:	mov	r1, r6
   3c578:	ldr	r3, [pc, #-3592]	; 3b778 <getPreferencesMenu@@Base+0x128>
   3c57c:	mov	r0, r7
   3c580:	add	r2, pc, r2
   3c584:	add	r3, pc, r3
   3c588:	bl	3b4b0 <initializeMenuScreen@@Base+0x8fc>
   3c58c:	cmp	r0, #0
   3c590:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c594:	ldr	r2, [pc, #-3616]	; 3b77c <getPreferencesMenu@@Base+0x12c>
   3c598:	mov	r0, r7
   3c59c:	ldr	r3, [pc, #-3620]	; 3b780 <getPreferencesMenu@@Base+0x130>
   3c5a0:	mov	r1, #6
   3c5a4:	add	r2, pc, r2
   3c5a8:	add	r3, pc, r3
   3c5ac:	bl	3b4b0 <initializeMenuScreen@@Base+0x8fc>
   3c5b0:	cmp	r0, #0
   3c5b4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c5b8:	ldr	r2, [pc, #-3644]	; 3b784 <getPreferencesMenu@@Base+0x134>
   3c5bc:	mov	r0, r7
   3c5c0:	ldr	r3, [pc, #-3648]	; 3b788 <getPreferencesMenu@@Base+0x138>
   3c5c4:	mov	r1, #7
   3c5c8:	add	r2, pc, r2
   3c5cc:	add	r3, pc, r3
   3c5d0:	bl	3b4b0 <initializeMenuScreen@@Base+0x8fc>
   3c5d4:	cmp	r0, #0
   3c5d8:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c5dc:	ldr	r2, [pc, #-3672]	; 3b78c <getPreferencesMenu@@Base+0x13c>
   3c5e0:	mov	r0, r7
   3c5e4:	ldr	r3, [pc, #-3676]	; 3b790 <getPreferencesMenu@@Base+0x140>
   3c5e8:	mov	r1, #8
   3c5ec:	add	r2, pc, r2
   3c5f0:	add	r3, pc, r3
   3c5f4:	bl	3b4b0 <initializeMenuScreen@@Base+0x8fc>
   3c5f8:	cmp	r0, #0
   3c5fc:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c600:	ldr	r2, [pc, #-3700]	; 3b794 <getPreferencesMenu@@Base+0x144>
   3c604:	mov	r0, r7
   3c608:	ldr	r3, [pc, #-3704]	; 3b798 <getPreferencesMenu@@Base+0x148>
   3c60c:	mov	r1, #9
   3c610:	add	r2, pc, r2
   3c614:	add	r3, pc, r3
   3c618:	bl	3b4b0 <initializeMenuScreen@@Base+0x8fc>
   3c61c:	cmp	r0, #0
   3c620:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c624:	ldr	r6, [pc, #-3728]	; 3b79c <getPreferencesMenu@@Base+0x14c>
   3c628:	ldr	r0, [sp, #12]
   3c62c:	add	r6, pc, r6
   3c630:	add	r1, r6, #1200	; 0x4b0
   3c634:	add	r1, r1, #8
   3c638:	bl	255a4 <newSubmenuMenuItem@@Base>
   3c63c:	subs	r7, r0, #0
   3c640:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c644:	ldr	ip, [pc, #-3756]	; 3b7a0 <getPreferencesMenu@@Base+0x150>
   3c648:	mov	r8, #0
   3c64c:	ldr	r2, [pc, #-3760]	; 3b7a4 <getPreferencesMenu@@Base+0x154>
   3c650:	add	r9, r6, #1216	; 0x4c0
   3c654:	ldr	r3, [pc, #-3764]	; 3b7a8 <getPreferencesMenu@@Base+0x158>
   3c658:	ldr	r5, [r4, ip]
   3c65c:	mov	r1, r9
   3c660:	ldr	ip, [r4, r2]
   3c664:	add	r3, pc, r3
   3c668:	str	r8, [sp, #4]
   3c66c:	ldr	r2, [r5]
   3c670:	ldr	ip, [ip]
   3c674:	str	ip, [sp]
   3c678:	bl	2541c <newFilesMenuItem@@Base>
   3c67c:	cmp	r0, r8
   3c680:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c684:	ldr	r1, [pc, #-3808]	; 3b7ac <getPreferencesMenu@@Base+0x15c>
   3c688:	add	r1, pc, r1
   3c68c:	bl	25360 <setMenuItemChanged@@Base>
   3c690:	ldr	ip, [pc, #-3816]	; 3b7b0 <getPreferencesMenu@@Base+0x160>
   3c694:	ldr	r2, [r5]
   3c698:	add	r1, r9, #8
   3c69c:	ldr	r3, [pc, #-3824]	; 3b7b4 <getPreferencesMenu@@Base+0x164>
   3c6a0:	mov	r0, r7
   3c6a4:	ldr	ip, [r4, ip]
   3c6a8:	str	r8, [sp, #4]
   3c6ac:	add	r3, pc, r3
   3c6b0:	ldr	ip, [ip]
   3c6b4:	str	ip, [sp]
   3c6b8:	bl	2541c <newFilesMenuItem@@Base>
   3c6bc:	cmp	r0, r8
   3c6c0:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c6c4:	ldr	r1, [pc, #-3860]	; 3b7b8 <getPreferencesMenu@@Base+0x168>
   3c6c8:	add	r6, r6, #1232	; 0x4d0
   3c6cc:	add	r1, pc, r1
   3c6d0:	bl	25360 <setMenuItemChanged@@Base>
   3c6d4:	ldr	ip, [pc, #-3872]	; 3b7bc <getPreferencesMenu@@Base+0x16c>
   3c6d8:	ldr	r2, [r5]
   3c6dc:	mov	r3, #1
   3c6e0:	mov	r0, r7
   3c6e4:	mov	r1, r6
   3c6e8:	ldr	ip, [r4, ip]
   3c6ec:	str	r3, [sp, #4]
   3c6f0:	ldr	r3, [pc, #-3896]	; 3b7c0 <getPreferencesMenu@@Base+0x170>
   3c6f4:	ldr	ip, [ip]
   3c6f8:	add	r3, pc, r3
   3c6fc:	str	ip, [sp]
   3c700:	bl	2541c <newFilesMenuItem@@Base>
   3c704:	cmp	r0, r8
   3c708:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c70c:	ldr	r1, [pc, #-3920]	; 3b7c4 <getPreferencesMenu@@Base+0x174>
   3c710:	add	r1, pc, r1
   3c714:	bl	25360 <setMenuItemChanged@@Base>
   3c718:	ldr	r0, [sp, #12]
   3c71c:	add	r1, r6, #8
   3c720:	bl	255a4 <newSubmenuMenuItem@@Base>
   3c724:	subs	r5, r0, #0
   3c728:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c72c:	bl	25034 <getMenuParent@@Base>
   3c730:	subs	r6, r0, #0
   3c734:	beq	3c744 <getPreferencesMenu@@Base+0x10f4>
   3c738:	bl	2503c <getMenuSize@@Base>
   3c73c:	subs	r1, r0, #0
   3c740:	bne	3c8c4 <getPreferencesMenu@@Base+0x1274>
   3c744:	ldr	r6, [pc, #-3972]	; 3b7c8 <getPreferencesMenu@@Base+0x178>
   3c748:	mov	r7, #8
   3c74c:	ldr	r3, [pc, #-3976]	; 3b7cc <getPreferencesMenu@@Base+0x17c>
   3c750:	mov	r0, r5
   3c754:	add	r6, pc, r6
   3c758:	add	r2, r6, #1248	; 0x4e0
   3c75c:	add	r8, r2, r7
   3c760:	ldr	r1, [r4, r3]
   3c764:	str	r7, [sp]
   3c768:	mov	r3, r8
   3c76c:	bl	253a4 <newStringsMenuItem@@Base>
   3c770:	cmp	r0, #0
   3c774:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c778:	ldr	r1, [pc, #-4016]	; 3b7d0 <getPreferencesMenu@@Base+0x180>
   3c77c:	add	r2, r6, #1312	; 0x520
   3c780:	add	r2, r2, r7
   3c784:	mov	r0, r5
   3c788:	mov	r3, r8
   3c78c:	ldr	r1, [r4, r1]
   3c790:	str	r7, [sp]
   3c794:	bl	253a4 <newStringsMenuItem@@Base>
   3c798:	cmp	r0, #0
   3c79c:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c7a0:	ldr	r1, [pc, #-4052]	; 3b7d4 <getPreferencesMenu@@Base+0x184>
   3c7a4:	add	r9, r6, #1328	; 0x530
   3c7a8:	mov	r3, r8
   3c7ac:	mov	r0, r5
   3c7b0:	mov	r2, r9
   3c7b4:	ldr	r1, [r4, r1]
   3c7b8:	str	r7, [sp]
   3c7bc:	bl	253a4 <newStringsMenuItem@@Base>
   3c7c0:	cmp	r0, #0
   3c7c4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c7c8:	ldr	r3, [pc, #-4088]	; 3b7d8 <getPreferencesMenu@@Base+0x188>
   3c7cc:	add	r2, r9, r7
   3c7d0:	mov	r0, r5
   3c7d4:	ldr	r4, [r4, r3]
   3c7d8:	mov	r1, r4
   3c7dc:	bl	253f0 <newBooleanMenuItem@@Base>
   3c7e0:	cmp	r0, #0
   3c7e4:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c7e8:	add	r7, r6, #1344	; 0x540
   3c7ec:	mov	r0, r5
   3c7f0:	add	r1, r4, #1
   3c7f4:	mov	r2, r7
   3c7f8:	bl	253f0 <newBooleanMenuItem@@Base>
   3c7fc:	cmp	r0, #0
   3c800:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c804:	add	r2, r7, #8
   3c808:	mov	r0, r5
   3c80c:	add	r1, r4, #2
   3c810:	bl	253f0 <newBooleanMenuItem@@Base>
   3c814:	cmp	r0, #0
   3c818:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c81c:	add	r7, r6, #1360	; 0x550
   3c820:	mov	r0, r5
   3c824:	add	r1, r4, #3
   3c828:	mov	r2, r7
   3c82c:	bl	253f0 <newBooleanMenuItem@@Base>
   3c830:	cmp	r0, #0
   3c834:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c838:	ldr	r1, [pc, #168]	; 3c8e8 <getPreferencesMenu@@Base+0x1298>
   3c83c:	add	r1, pc, r1
   3c840:	bl	25358 <setMenuItemTester@@Base>
   3c844:	mov	r0, r5
   3c848:	add	r2, r7, #8
   3c84c:	add	r1, r4, #4
   3c850:	bl	253f0 <newBooleanMenuItem@@Base>
   3c854:	cmp	r0, #0
   3c858:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c85c:	ldr	r1, [pc, #136]	; 3c8ec <getPreferencesMenu@@Base+0x129c>
   3c860:	add	r6, r6, #1376	; 0x560
   3c864:	add	r1, pc, r1
   3c868:	bl	25358 <setMenuItemTester@@Base>
   3c86c:	mov	r0, r5
   3c870:	mov	r2, r6
   3c874:	add	r1, r4, #5
   3c878:	bl	253f0 <newBooleanMenuItem@@Base>
   3c87c:	cmp	r0, #0
   3c880:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c884:	mov	r0, r5
   3c888:	add	r1, r4, #6
   3c88c:	add	r2, r6, #8
   3c890:	bl	253f0 <newBooleanMenuItem@@Base>
   3c894:	cmp	r0, #0
   3c898:	beq	3c8a4 <getPreferencesMenu@@Base+0x1254>
   3c89c:	ldr	r0, [sp, #12]
   3c8a0:	b	3c8b0 <getPreferencesMenu@@Base+0x1260>
   3c8a4:	ldr	r0, [sp, #12]
   3c8a8:	bl	24fa0 <deallocateMenu@@Base>
   3c8ac:	mov	r0, #0
   3c8b0:	ldr	r3, [pc, #56]	; 3c8f0 <getPreferencesMenu@@Base+0x12a0>
   3c8b4:	add	r3, pc, r3
   3c8b8:	str	r0, [r3]
   3c8bc:	add	sp, sp, #20
   3c8c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c8c4:	mov	r0, r6
   3c8c8:	sub	r1, r1, #1
   3c8cc:	bl	2504c <getMenuItem@@Base>
   3c8d0:	cmp	r0, r8
   3c8d4:	beq	3c744 <getPreferencesMenu@@Base+0x10f4>
   3c8d8:	ldr	r1, [pc, #20]	; 3c8f4 <getPreferencesMenu@@Base+0x12a4>
   3c8dc:	add	r1, pc, r1
   3c8e0:	bl	25358 <setMenuItemTester@@Base>
   3c8e4:	b	3c744 <getPreferencesMenu@@Base+0x10f4>
   3c8e8:			; <UNDEFINED> instruction: 0xffffe7d4
   3c8ec:			; <UNDEFINED> instruction: 0xffffe7d4
   3c8f0:	andeq	r7, r3, r0, lsr #10
   3c8f4:			; <UNDEFINED> instruction: 0xffffe35c
   3c8f8:	mov	r0, #1
   3c8fc:	bx	lr
   3c900:	mov	r0, #1
   3c904:	bx	lr
   3c908:	bx	lr
   3c90c:	bx	lr

0003c910 <initializeMainScreen@@Base>:
   3c910:	push	{r4, lr}
   3c914:	mov	r4, r0
   3c918:	bl	39850 <initializeBaseScreen@@Base>
   3c91c:	ldr	r0, [pc, #44]	; 3c950 <initializeMainScreen@@Base+0x40>
   3c920:	ldr	r1, [pc, #44]	; 3c954 <initializeMainScreen@@Base+0x44>
   3c924:	ldr	r2, [pc, #44]	; 3c958 <initializeMainScreen@@Base+0x48>
   3c928:	add	r0, pc, r0
   3c92c:	ldr	r3, [pc, #40]	; 3c95c <initializeMainScreen@@Base+0x4c>
   3c930:	add	r1, pc, r1
   3c934:	add	r2, pc, r2
   3c938:	str	r0, [r4, #52]	; 0x34
   3c93c:	add	r3, pc, r3
   3c940:	str	r1, [r4, #56]	; 0x38
   3c944:	str	r2, [r4, #60]	; 0x3c
   3c948:	str	r3, [r4, #64]	; 0x40
   3c94c:	pop	{r4, pc}
   3c950:			; <UNDEFINED> instruction: 0xffffffc8
   3c954:			; <UNDEFINED> instruction: 0xffffffc8
   3c958:			; <UNDEFINED> instruction: 0xffffffcc
   3c95c:			; <UNDEFINED> instruction: 0xffffffc8
   3c960:	mov	r0, #0
   3c964:	bx	lr
   3c968:	push	{r3, lr}
   3c96c:	bl	1d690 <getConsole@@Base>
   3c970:	mov	r0, #0
   3c974:	pop	{r3, pc}
   3c978:	b	3d268 <startRouting@@Base>

0003c97c <initializeRealScreen@@Base>:
   3c97c:	push	{r4, lr}
   3c980:	mov	r4, r0
   3c984:	bl	3c910 <initializeMainScreen@@Base>
   3c988:	ldr	r1, [pc, #32]	; 3c9b0 <initializeRealScreen@@Base+0x34>
   3c98c:	ldr	r2, [pc, #32]	; 3c9b4 <initializeRealScreen@@Base+0x38>
   3c990:	ldr	r3, [pc, #32]	; 3c9b8 <initializeRealScreen@@Base+0x3c>
   3c994:	add	r1, pc, r1
   3c998:	add	r2, pc, r2
   3c99c:	str	r1, [r4, #16]
   3c9a0:	add	r3, pc, r3
   3c9a4:	str	r2, [r4, #20]
   3c9a8:	str	r3, [r4, #28]
   3c9ac:	pop	{r4, pc}
   3c9b0:			; <UNDEFINED> instruction: 0xffffffdc
   3c9b4:			; <UNDEFINED> instruction: 0xffffffc8
   3c9b8:			; <UNDEFINED> instruction: 0xffffffb8
   3c9bc:	ldr	r3, [r1]
   3c9c0:	add	r2, r3, r2
   3c9c4:	str	r2, [r1]
   3c9c8:	bx	lr
   3c9cc:	ldr	r3, [r0]
   3c9d0:	add	r2, r3, r2
   3c9d4:	str	r2, [r0]
   3c9d8:	bx	lr
   3c9dc:	push	{r0, r1, r2, r3}
   3c9e0:	mov	r0, #134	; 0x86
   3c9e4:	ldr	r3, [pc, #84]	; 3ca40 <initializeRealScreen@@Base+0xc4>
   3c9e8:	push	{r4, lr}
   3c9ec:	add	r3, pc, r3
   3c9f0:	ldr	lr, [pc, #76]	; 3ca44 <initializeRealScreen@@Base+0xc8>
   3c9f4:	sub	sp, sp, #8
   3c9f8:	add	r2, sp, #8
   3c9fc:	add	ip, sp, #20
   3ca00:	ldr	r1, [sp, #16]
   3ca04:	ldr	r4, [r3, lr]
   3ca08:	str	ip, [r2, #-8]!
   3ca0c:	mov	r2, sp
   3ca10:	ldr	r3, [r4]
   3ca14:	str	r3, [sp, #4]
   3ca18:	bl	1c5d8 <vlogMessage@@Base>
   3ca1c:	ldr	r2, [sp, #4]
   3ca20:	ldr	r3, [r4]
   3ca24:	cmp	r2, r3
   3ca28:	bne	3ca3c <initializeRealScreen@@Base+0xc0>
   3ca2c:	add	sp, sp, #8
   3ca30:	pop	{r4, lr}
   3ca34:	add	sp, sp, #16
   3ca38:	bx	lr
   3ca3c:	bl	f950 <__stack_chk_fail@plt>
   3ca40:	andeq	r6, r3, ip, lsl #1
   3ca44:			; <UNDEFINED> instruction: 0x000003b4
   3ca48:	ldr	r3, [pc, #352]	; 3cbb0 <initializeRealScreen@@Base+0x234>
   3ca4c:	ldr	r2, [pc, #352]	; 3cbb4 <initializeRealScreen@@Base+0x238>
   3ca50:	add	r3, pc, r3
   3ca54:	push	{r4, r5, r6, r7, r8, lr}
   3ca58:	sub	sp, sp, #32
   3ca5c:	ldr	r5, [r3, r2]
   3ca60:	mov	r4, r0
   3ca64:	add	r0, sp, #8
   3ca68:	ldr	r3, [r5]
   3ca6c:	str	r3, [sp, #28]
   3ca70:	bl	3907c <describeScreen@@Base>
   3ca74:	ldr	r3, [r4, #128]	; 0x80
   3ca78:	ldr	r6, [sp, #16]
   3ca7c:	cmp	r6, r3
   3ca80:	bne	3cb34 <initializeRealScreen@@Base+0x1b8>
   3ca84:	ldr	ip, [r4, #144]	; 0x90
   3ca88:	cmp	ip, #0
   3ca8c:	beq	3cb54 <initializeRealScreen@@Base+0x1d8>
   3ca90:	ldrsh	r2, [sp, #8]
   3ca94:	ldr	r3, [r4, #132]	; 0x84
   3ca98:	cmp	r3, r2
   3ca9c:	beq	3cad4 <initializeRealScreen@@Base+0x158>
   3caa0:	ldrsh	r1, [sp, #10]
   3caa4:	ldr	r0, [pc, #268]	; 3cbb8 <initializeRealScreen@@Base+0x23c>
   3caa8:	add	r0, pc, r0
   3caac:	bl	3c9dc <initializeRealScreen@@Base+0x60>
   3cab0:	mov	r0, #0
   3cab4:	mvn	r3, #0
   3cab8:	str	r3, [r4, #128]	; 0x80
   3cabc:	ldr	r2, [sp, #28]
   3cac0:	ldr	r3, [r5]
   3cac4:	cmp	r2, r3
   3cac8:	bne	3cbac <initializeRealScreen@@Base+0x230>
   3cacc:	add	sp, sp, #32
   3cad0:	pop	{r4, r5, r6, r7, r8, pc}
   3cad4:	ldr	r3, [r4, #136]	; 0x88
   3cad8:	ldrsh	r1, [sp, #10]
   3cadc:	cmp	r3, r1
   3cae0:	bne	3caa4 <initializeRealScreen@@Base+0x128>
   3cae4:	ldrsh	lr, [sp, #14]
   3cae8:	sxth	r2, r3
   3caec:	ldrsh	r6, [sp, #12]
   3caf0:	mov	r0, #0
   3caf4:	ldr	r7, [r4, #140]	; 0x8c
   3caf8:	mov	r3, #1
   3cafc:	mov	r1, lr
   3cb00:	str	r6, [r4, #152]	; 0x98
   3cb04:	rsb	lr, r7, lr
   3cb08:	str	lr, [r4, #148]	; 0x94
   3cb0c:	str	ip, [sp]
   3cb10:	bl	39094 <readScreen@@Base>
   3cb14:	cmp	r0, #0
   3cb18:	movne	r0, #1
   3cb1c:	bne	3cabc <initializeRealScreen@@Base+0x140>
   3cb20:	ldr	r0, [pc, #148]	; 3cbbc <initializeRealScreen@@Base+0x240>
   3cb24:	ldrsh	r1, [sp, #14]
   3cb28:	add	r0, pc, r0
   3cb2c:	bl	3c9dc <initializeRealScreen@@Base+0x60>
   3cb30:	b	3cab0 <initializeRealScreen@@Base+0x134>
   3cb34:	ldr	r0, [pc, #132]	; 3cbc0 <initializeRealScreen@@Base+0x244>
   3cb38:	mov	r1, r6
   3cb3c:	add	r0, pc, r0
   3cb40:	bl	3c9dc <initializeRealScreen@@Base+0x60>
   3cb44:	ldr	r3, [sp, #16]
   3cb48:	mov	r0, #0
   3cb4c:	str	r3, [r4, #128]	; 0x80
   3cb50:	b	3cabc <initializeRealScreen@@Base+0x140>
   3cb54:	ldrsh	r7, [sp, #10]
   3cb58:	mov	r1, #8
   3cb5c:	ldrsh	r8, [sp, #8]
   3cb60:	str	ip, [r4, #140]	; 0x8c
   3cb64:	str	r7, [r4, #136]	; 0x88
   3cb68:	mov	r0, r7
   3cb6c:	str	r8, [r4, #132]	; 0x84
   3cb70:	bl	fac4 <calloc@plt>
   3cb74:	cmp	r0, #0
   3cb78:	str	r0, [r4, #144]	; 0x90
   3cb7c:	beq	3cba4 <initializeRealScreen@@Base+0x228>
   3cb80:	ldr	r0, [pc, #60]	; 3cbc4 <initializeRealScreen@@Base+0x248>
   3cb84:	mov	r3, r8
   3cb88:	mov	r1, r6
   3cb8c:	mov	r2, r7
   3cb90:	add	r0, pc, r0
   3cb94:	bl	3c9dc <initializeRealScreen@@Base+0x60>
   3cb98:	ldr	r3, [r4, #136]	; 0x88
   3cb9c:	ldr	ip, [r4, #144]	; 0x90
   3cba0:	b	3cae4 <initializeRealScreen@@Base+0x168>
   3cba4:	bl	1c740 <logMallocError@@Base>
   3cba8:	b	3cab0 <initializeRealScreen@@Base+0x134>
   3cbac:	bl	f950 <__stack_chk_fail@plt>
   3cbb0:	andeq	r6, r3, r8, lsr #32
   3cbb4:			; <UNDEFINED> instruction: 0x000003b4
   3cbb8:			; <UNDEFINED> instruction: 0x0001c9bc
   3cbbc:	andeq	ip, r1, ip, asr r9
   3cbc0:	strdeq	ip, [r1], -r0
   3cbc4:			; <UNDEFINED> instruction: 0x0001c8b4
   3cbc8:	ldr	r3, [pc, #116]	; 3cc44 <initializeRealScreen@@Base+0x2c8>
   3cbcc:	ldr	ip, [pc, #116]	; 3cc48 <initializeRealScreen@@Base+0x2cc>
   3cbd0:	add	r3, pc, r3
   3cbd4:	push	{r4, r5, r6, lr}
   3cbd8:	sub	sp, sp, #136	; 0x88
   3cbdc:	ldr	r4, [r3, ip]
   3cbe0:	add	r6, sp, #4
   3cbe4:	mov	r5, r1
   3cbe8:	mov	r1, r0
   3cbec:	mov	r2, r6
   3cbf0:	mov	r0, #0
   3cbf4:	ldr	r3, [r4]
   3cbf8:	str	r3, [sp, #132]	; 0x84
   3cbfc:	bl	fdc4 <sigprocmask@plt>
   3cc00:	ldr	r0, [pc, #68]	; 3cc4c <initializeRealScreen@@Base+0x2d0>
   3cc04:	ldr	r1, [r5]
   3cc08:	add	r0, pc, r0
   3cc0c:	bl	3c9dc <initializeRealScreen@@Base+0x60>
   3cc10:	ldr	r0, [r5, #4]
   3cc14:	bl	391a8 <insertScreenKey@@Base>
   3cc18:	mov	r2, #0
   3cc1c:	mov	r1, r6
   3cc20:	mov	r0, #2
   3cc24:	bl	fdc4 <sigprocmask@plt>
   3cc28:	ldr	r2, [sp, #132]	; 0x84
   3cc2c:	ldr	r3, [r4]
   3cc30:	cmp	r2, r3
   3cc34:	bne	3cc40 <initializeRealScreen@@Base+0x2c4>
   3cc38:	add	sp, sp, #136	; 0x88
   3cc3c:	pop	{r4, r5, r6, pc}
   3cc40:	bl	f950 <__stack_chk_fail@plt>
   3cc44:	andeq	r5, r3, r8, lsr #29
   3cc48:			; <UNDEFINED> instruction: 0x000003b4
   3cc4c:	muleq	r1, r0, r8
   3cc50:	ldr	r3, [pc, #712]	; 3cf20 <initializeRealScreen@@Base+0x5a4>
   3cc54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cc58:	add	fp, sp, #32
   3cc5c:	ldr	ip, [pc, #704]	; 3cf24 <initializeRealScreen@@Base+0x5a8>
   3cc60:	sub	sp, sp, #76	; 0x4c
   3cc64:	add	r3, pc, r3
   3cc68:	mov	r5, r2
   3cc6c:	sub	r2, fp, #56	; 0x38
   3cc70:	str	r2, [fp, #-76]	; 0xffffffb4
   3cc74:	mov	r4, r0
   3cc78:	ldr	ip, [r3, ip]
   3cc7c:	sub	r3, fp, #48	; 0x30
   3cc80:	str	r3, [fp, #-72]	; 0xffffffb8
   3cc84:	mov	r3, #0
   3cc88:	str	r3, [fp, #-84]	; 0xffffffac
   3cc8c:	mov	r8, r1
   3cc90:	ldr	r3, [ip]
   3cc94:	ldr	r2, [pc, #652]	; 3cf28 <initializeRealScreen@@Base+0x5ac>
   3cc98:	ldr	r0, [r0, #164]	; 0xa4
   3cc9c:	ldr	r1, [r4, #168]	; 0xa8
   3cca0:	add	r2, pc, r2
   3cca4:	str	ip, [fp, #-96]	; 0xffffffa0
   3cca8:	str	r2, [fp, #-88]	; 0xffffffa8
   3ccac:	str	r3, [fp, #-40]	; 0xffffffd8
   3ccb0:	bl	4e410 <formatAddress@@Base+0x464>
   3ccb4:	ldr	r3, [r4, #152]	; 0x98
   3ccb8:	mov	r2, r8
   3ccbc:	ldr	ip, [r4, #148]	; 0x94
   3ccc0:	sub	r1, fp, #60	; 0x3c
   3ccc4:	str	r3, [r4, #160]	; 0xa0
   3ccc8:	str	ip, [r4, #156]	; 0x9c
   3cccc:	str	r3, [fp, #-60]	; 0xffffffc4
   3ccd0:	str	ip, [fp, #-64]	; 0xffffffc0
   3ccd4:	ldr	r3, [r5]
   3ccd8:	str	r0, [fp, #-92]	; 0xffffffa4
   3ccdc:	sub	r0, fp, #64	; 0x40
   3cce0:	blx	r3
   3cce4:	sub	r0, fp, #56	; 0x38
   3cce8:	bl	1eb28 <getMonotonicTime@@Base>
   3ccec:	mov	r0, #1
   3ccf0:	mov	r6, #0
   3ccf4:	bl	1ec24 <approximateDelay@@Base>
   3ccf8:	sub	r0, fp, #48	; 0x30
   3ccfc:	bl	1eb28 <getMonotonicTime@@Base>
   3cd00:	sub	r0, fp, #56	; 0x38
   3cd04:	sub	r1, fp, #48	; 0x30
   3cd08:	bl	1ea9c <millisecondsBetween@@Base>
   3cd0c:	ldr	r9, [r4, #148]	; 0x94
   3cd10:	ldr	r3, [r4, #140]	; 0x8c
   3cd14:	add	r9, r9, r3
   3cd18:	mov	r7, r9
   3cd1c:	add	r0, r0, #1
   3cd20:	str	r0, [fp, #-80]	; 0xffffffb0
   3cd24:	ldr	r2, [r4, #136]	; 0x88
   3cd28:	mov	r5, sp
   3cd2c:	mov	r0, #0
   3cd30:	sxth	r1, r9
   3cd34:	mov	r3, #1
   3cd38:	lsl	ip, r2, #3
   3cd3c:	sxth	r2, r2
   3cd40:	add	ip, ip, #8
   3cd44:	sub	sp, sp, ip
   3cd48:	add	sl, sp, #8
   3cd4c:	str	sl, [sp]
   3cd50:	bl	39094 <readScreen@@Base>
   3cd54:	cmp	r0, #0
   3cd58:	beq	3ceb8 <initializeRealScreen@@Base+0x53c>
   3cd5c:	ldr	r2, [r4, #152]	; 0x98
   3cd60:	mov	r3, #0
   3cd64:	ldr	ip, [r4, #144]	; 0x90
   3cd68:	lsl	r0, r2, #3
   3cd6c:	mov	r1, r2
   3cd70:	add	sl, sl, r0
   3cd74:	add	r0, ip, r0
   3cd78:	b	3cd88 <initializeRealScreen@@Base+0x40c>
   3cd7c:	subs	r1, r1, #1
   3cd80:	sub	r3, r3, #8
   3cd84:	bmi	3cd98 <initializeRealScreen@@Base+0x41c>
   3cd88:	ldr	lr, [sl, r3]
   3cd8c:	ldr	ip, [r0, r3]
   3cd90:	cmp	lr, ip
   3cd94:	beq	3cd7c <initializeRealScreen@@Base+0x400>
   3cd98:	mov	r3, #0
   3cd9c:	b	3cdb4 <initializeRealScreen@@Base+0x438>
   3cda0:	ldr	ip, [r4, #136]	; 0x88
   3cda4:	add	r2, r2, #1
   3cda8:	add	r3, r3, #8
   3cdac:	cmp	r2, ip
   3cdb0:	bge	3cdc4 <initializeRealScreen@@Base+0x448>
   3cdb4:	ldr	lr, [sl, r3]
   3cdb8:	ldr	ip, [r0, r3]
   3cdbc:	cmp	lr, ip
   3cdc0:	beq	3cda0 <initializeRealScreen@@Base+0x424>
   3cdc4:	rsb	r2, r1, r2
   3cdc8:	sub	r2, r2, #1
   3cdcc:	cmp	r2, r6
   3cdd0:	ble	3cde8 <initializeRealScreen@@Base+0x46c>
   3cdd4:	ldr	r3, [r4, #136]	; 0x88
   3cdd8:	cmp	r2, r3
   3cddc:	beq	3ceb4 <initializeRealScreen@@Base+0x538>
   3cde0:	mov	r6, r2
   3cde4:	mov	r7, r9
   3cde8:	subs	r9, r9, r8
   3cdec:	mov	sp, r5
   3cdf0:	bmi	3ce00 <initializeRealScreen@@Base+0x484>
   3cdf4:	ldr	r3, [r4, #132]	; 0x84
   3cdf8:	cmp	r9, r3
   3cdfc:	blt	3cd24 <initializeRealScreen@@Base+0x3a8>
   3ce00:	ldr	r5, [r4, #148]	; 0x94
   3ce04:	mov	r0, r4
   3ce08:	ldr	r6, [r4, #152]	; 0x98
   3ce0c:	rsb	r7, r5, r7
   3ce10:	str	r7, [r4, #140]	; 0x8c
   3ce14:	bl	3ca48 <initializeRealScreen@@Base+0xcc>
   3ce18:	cmp	r0, #0
   3ce1c:	beq	3ced4 <initializeRealScreen@@Base+0x558>
   3ce20:	ldr	r2, [r4, #148]	; 0x94
   3ce24:	ldr	r3, [r4, #152]	; 0x98
   3ce28:	cmp	r5, r2
   3ce2c:	bne	3ce38 <initializeRealScreen@@Base+0x4bc>
   3ce30:	cmp	r6, r3
   3ce34:	beq	3cef0 <initializeRealScreen@@Base+0x574>
   3ce38:	str	r2, [sp]
   3ce3c:	mov	r1, r6
   3ce40:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3ce44:	str	r2, [sp, #4]
   3ce48:	mov	r2, r5
   3ce4c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3ce50:	bl	3c9dc <initializeRealScreen@@Base+0x60>
   3ce54:	ldr	r3, [fp, #-84]	; 0xffffffac
   3ce58:	cmp	r3, #0
   3ce5c:	bne	3ce88 <initializeRealScreen@@Base+0x50c>
   3ce60:	ldr	r1, [fp, #-80]	; 0xffffffb0
   3ce64:	ldr	r2, [r4, #164]	; 0xa4
   3ce68:	lsl	r3, r1, #1
   3ce6c:	add	r2, r2, r1, lsl #3
   3ce70:	add	r3, r3, #1
   3ce74:	str	r3, [fp, #-92]	; 0xffffffa4
   3ce78:	ldr	r3, [r4, #168]	; 0xa8
   3ce7c:	str	r2, [r4, #164]	; 0xa4
   3ce80:	add	r3, r3, #1
   3ce84:	str	r3, [r4, #168]	; 0xa8
   3ce88:	ldr	r2, [r4, #148]	; 0x94
   3ce8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3ce90:	cmp	r2, r3
   3ce94:	beq	3cec0 <initializeRealScreen@@Base+0x544>
   3ce98:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3ce9c:	mov	r3, #1
   3cea0:	str	r3, [fp, #-84]	; 0xffffffac
   3cea4:	ldm	r2, {r0, r1}
   3cea8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3ceac:	stm	r2, {r0, r1}
   3ceb0:	b	3ccec <initializeRealScreen@@Base+0x370>
   3ceb4:	mov	r7, r9
   3ceb8:	mov	sp, r5
   3cebc:	b	3ce00 <initializeRealScreen@@Base+0x484>
   3cec0:	ldr	r2, [r4, #152]	; 0x98
   3cec4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3cec8:	cmp	r2, r3
   3cecc:	bne	3ce98 <initializeRealScreen@@Base+0x51c>
   3ced0:	mov	r0, #1
   3ced4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   3ced8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3cedc:	ldr	r3, [r1]
   3cee0:	cmp	r2, r3
   3cee4:	bne	3cf1c <initializeRealScreen@@Base+0x5a0>
   3cee8:	sub	sp, fp, #32
   3ceec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3cef0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3cef4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   3cef8:	cmp	r3, r1
   3cefc:	ble	3ccec <initializeRealScreen@@Base+0x370>
   3cf00:	ldr	r2, [fp, #-84]	; 0xffffffac
   3cf04:	cmp	r2, #0
   3cf08:	bne	3ced0 <initializeRealScreen@@Base+0x554>
   3cf0c:	ldr	r0, [pc, #24]	; 3cf2c <initializeRealScreen@@Base+0x5b0>
   3cf10:	add	r0, pc, r0
   3cf14:	bl	3c9dc <initializeRealScreen@@Base+0x60>
   3cf18:	b	3ced0 <initializeRealScreen@@Base+0x554>
   3cf1c:	bl	f950 <__stack_chk_fail@plt>
   3cf20:	andeq	r5, r3, r4, lsl lr
   3cf24:			; <UNDEFINED> instruction: 0x000003b4
   3cf28:	andeq	ip, r1, r4, lsl #16
   3cf2c:			; <UNDEFINED> instruction: 0x0001c5b8
   3cf30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cf34:	mov	r4, r0
   3cf38:	sub	sp, sp, #12
   3cf3c:	ldr	r0, [pc, #468]	; 3d118 <initializeRealScreen@@Base+0x79c>
   3cf40:	mov	sl, r3
   3cf44:	mov	r6, r2
   3cf48:	str	r1, [sp, #4]
   3cf4c:	add	r0, pc, r0
   3cf50:	ldr	r7, [sp, #48]	; 0x30
   3cf54:	mov	r1, r3
   3cf58:	bl	3c9dc <initializeRealScreen@@Base+0x60>
   3cf5c:	ldr	ip, [r4, #148]	; 0x94
   3cf60:	add	r9, r7, #8
   3cf64:	rsb	r0, ip, r6
   3cf68:	cmp	sl, #0
   3cf6c:	mov	fp, r0
   3cf70:	blt	3d09c <initializeRealScreen@@Base+0x720>
   3cf74:	ldr	r8, [r4, #152]	; 0x98
   3cf78:	cmp	r0, #0
   3cf7c:	rsb	r8, r8, sl
   3cf80:	beq	3d03c <initializeRealScreen@@Base+0x6c0>
   3cf84:	cmp	r0, #0
   3cf88:	ble	3d048 <initializeRealScreen@@Base+0x6cc>
   3cf8c:	ldr	r1, [r7]
   3cf90:	mov	r5, #1
   3cf94:	mov	r0, r4
   3cf98:	bl	3cbc8 <initializeRealScreen@@Base+0x24c>
   3cf9c:	mov	r0, r4
   3cfa0:	mov	r1, r5
   3cfa4:	mov	r2, r9
   3cfa8:	bl	3cc50 <initializeRealScreen@@Base+0x2d4>
   3cfac:	cmp	r0, #0
   3cfb0:	beq	3d0ac <initializeRealScreen@@Base+0x730>
   3cfb4:	ldr	ip, [r4, #148]	; 0x94
   3cfb8:	ldr	r2, [r4, #156]	; 0x9c
   3cfbc:	cmp	ip, r2
   3cfc0:	beq	3d054 <initializeRealScreen@@Base+0x6d8>
   3cfc4:	cmp	r6, r2
   3cfc8:	beq	3d000 <initializeRealScreen@@Base+0x684>
   3cfcc:	rsb	r2, r2, ip
   3cfd0:	mul	r2, r5, r2
   3cfd4:	cmp	r2, #0
   3cfd8:	ble	3d000 <initializeRealScreen@@Base+0x684>
   3cfdc:	rsb	r0, ip, r6
   3cfe0:	mul	r2, fp, r0
   3cfe4:	cmp	r2, #0
   3cfe8:	bge	3cf68 <initializeRealScreen@@Base+0x5ec>
   3cfec:	ldr	r3, [sp, #4]
   3cff0:	cmp	r3, #0
   3cff4:	ble	3d0b8 <initializeRealScreen@@Base+0x73c>
   3cff8:	cmp	r6, ip
   3cffc:	blt	3d030 <initializeRealScreen@@Base+0x6b4>
   3d000:	ldr	r3, [r7]
   3d004:	cmp	r5, #1
   3d008:	ldr	r1, [r7, #4]
   3d00c:	mov	r0, r4
   3d010:	movne	r1, r3
   3d014:	bl	3cbc8 <initializeRealScreen@@Base+0x24c>
   3d018:	mov	r0, r4
   3d01c:	rsb	r1, r5, #0
   3d020:	mov	r2, r9
   3d024:	bl	3cc50 <initializeRealScreen@@Base+0x2d4>
   3d028:	cmp	r0, #0
   3d02c:	beq	3d0ac <initializeRealScreen@@Base+0x730>
   3d030:	mov	r0, #1
   3d034:	add	sp, sp, #12
   3d038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d03c:	cmp	r8, #0
   3d040:	beq	3d034 <initializeRealScreen@@Base+0x6b8>
   3d044:	bgt	3cf8c <initializeRealScreen@@Base+0x610>
   3d048:	ldr	r1, [r7, #4]
   3d04c:	mvn	r5, #0
   3d050:	b	3cf94 <initializeRealScreen@@Base+0x618>
   3d054:	ldr	r2, [r4, #152]	; 0x98
   3d058:	ldr	r1, [r4, #160]	; 0xa0
   3d05c:	cmp	r2, r1
   3d060:	beq	3d030 <initializeRealScreen@@Base+0x6b4>
   3d064:	rsb	r1, r1, r2
   3d068:	mul	r1, r5, r1
   3d06c:	cmp	r1, #0
   3d070:	ble	3d000 <initializeRealScreen@@Base+0x684>
   3d074:	cmp	r6, ip
   3d078:	bne	3cf64 <initializeRealScreen@@Base+0x5e8>
   3d07c:	rsb	r1, r2, sl
   3d080:	mul	r0, r1, r8
   3d084:	cmp	r0, #0
   3d088:	blt	3d0d0 <initializeRealScreen@@Base+0x754>
   3d08c:	cmp	sl, #0
   3d090:	mov	r0, #0
   3d094:	mov	fp, r0
   3d098:	bge	3cf74 <initializeRealScreen@@Base+0x5f8>
   3d09c:	cmp	r0, #0
   3d0a0:	beq	3d034 <initializeRealScreen@@Base+0x6b8>
   3d0a4:	mov	r8, #0
   3d0a8:	b	3cf84 <initializeRealScreen@@Base+0x608>
   3d0ac:	mov	r0, #2
   3d0b0:	add	sp, sp, #12
   3d0b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d0b8:	bne	3d0e8 <initializeRealScreen@@Base+0x76c>
   3d0bc:	mul	r0, r0, r0
   3d0c0:	mul	fp, fp, fp
   3d0c4:	cmp	r0, fp
   3d0c8:	bge	3d000 <initializeRealScreen@@Base+0x684>
   3d0cc:	b	3d030 <initializeRealScreen@@Base+0x6b4>
   3d0d0:	ldr	r3, [sp, #4]
   3d0d4:	cmp	r3, #0
   3d0d8:	ble	3d0f4 <initializeRealScreen@@Base+0x778>
   3d0dc:	cmp	sl, r2
   3d0e0:	bge	3d000 <initializeRealScreen@@Base+0x684>
   3d0e4:	b	3d030 <initializeRealScreen@@Base+0x6b4>
   3d0e8:	cmp	r6, ip
   3d0ec:	ble	3d000 <initializeRealScreen@@Base+0x684>
   3d0f0:	b	3d030 <initializeRealScreen@@Base+0x6b4>
   3d0f4:	bne	3d10c <initializeRealScreen@@Base+0x790>
   3d0f8:	mul	r1, r1, r1
   3d0fc:	mul	r8, r8, r8
   3d100:	cmp	r1, r8
   3d104:	bge	3d000 <initializeRealScreen@@Base+0x684>
   3d108:	b	3d030 <initializeRealScreen@@Base+0x6b4>
   3d10c:	cmp	sl, r2
   3d110:	ble	3d000 <initializeRealScreen@@Base+0x684>
   3d114:	b	3d030 <initializeRealScreen@@Base+0x6b4>
   3d118:	muleq	r1, r0, r5

0003d11c <isRouting@@Base>:
   3d11c:	ldr	r3, [pc, #12]	; 3d130 <isRouting@@Base+0x14>
   3d120:	ldr	r0, [pc, r3]
   3d124:	adds	r0, r0, #0
   3d128:	movne	r0, #1
   3d12c:	bx	lr
   3d130:			; <UNDEFINED> instruction: 0x00036cb8

0003d134 <getRoutingStatus@@Base>:
   3d134:	ldr	r3, [pc, #220]	; 3d218 <getRoutingStatus@@Base+0xe4>
   3d138:	ldr	r2, [pc, #220]	; 3d21c <getRoutingStatus@@Base+0xe8>
   3d13c:	add	r3, pc, r3
   3d140:	push	{r4, r5, r6, r7, r8, lr}
   3d144:	sub	sp, sp, #8
   3d148:	ldr	r8, [r3, r2]
   3d14c:	mov	r7, r0
   3d150:	ldr	r3, [r8]
   3d154:	str	r3, [sp, #4]
   3d158:	bl	3d11c <isRouting@@Base>
   3d15c:	cmp	r0, #0
   3d160:	beq	3d1c8 <getRoutingStatus@@Base+0x94>
   3d164:	ldr	r5, [pc, #180]	; 3d220 <getRoutingStatus@@Base+0xec>
   3d168:	rsbs	r7, r7, #1
   3d16c:	add	r5, pc, r5
   3d170:	movcc	r7, #0
   3d174:	ldr	r0, [r5]
   3d178:	b	3d198 <getRoutingStatus@@Base+0x64>
   3d17c:	cmn	r0, #1
   3d180:	bne	3d1ec <getRoutingStatus@@Base+0xb8>
   3d184:	bl	fca4 <__errno_location@plt>
   3d188:	ldr	r3, [r0]
   3d18c:	cmp	r3, #4
   3d190:	bne	3d1fc <getRoutingStatus@@Base+0xc8>
   3d194:	mov	r0, r4
   3d198:	mov	r1, sp
   3d19c:	mov	r2, r7
   3d1a0:	bl	f8d8 <waitpid@plt>
   3d1a4:	ldr	r4, [r5]
   3d1a8:	cmp	r0, r4
   3d1ac:	bne	3d17c <getRoutingStatus@@Base+0x48>
   3d1b0:	ldr	r0, [sp]
   3d1b4:	mov	r3, #0
   3d1b8:	str	r3, [r5]
   3d1bc:	tst	r0, #127	; 0x7f
   3d1c0:	ubfxeq	r0, r0, #8, #8
   3d1c4:	bne	3d1f4 <getRoutingStatus@@Base+0xc0>
   3d1c8:	ldr	r2, [sp, #4]
   3d1cc:	ldr	r3, [r8]
   3d1d0:	cmp	r2, r3
   3d1d4:	bne	3d214 <getRoutingStatus@@Base+0xe0>
   3d1d8:	add	sp, sp, #8
   3d1dc:	pop	{r4, r5, r6, r7, r8, pc}
   3d1e0:	ldr	r0, [pc, #60]	; 3d224 <getRoutingStatus@@Base+0xf0>
   3d1e4:	add	r0, pc, r0
   3d1e8:	bl	1c6fc <logSystemError@@Base>
   3d1ec:	mov	r0, #0
   3d1f0:	b	3d1c8 <getRoutingStatus@@Base+0x94>
   3d1f4:	mov	r0, #4
   3d1f8:	b	3d1c8 <getRoutingStatus@@Base+0x94>
   3d1fc:	cmp	r3, #10
   3d200:	bne	3d1e0 <getRoutingStatus@@Base+0xac>
   3d204:	mov	r3, #0
   3d208:	mov	r0, #4
   3d20c:	str	r3, [r5]
   3d210:	b	3d1c8 <getRoutingStatus@@Base+0x94>
   3d214:	bl	f950 <__stack_chk_fail@plt>
   3d218:	andeq	r5, r3, ip, lsr r9
   3d21c:			; <UNDEFINED> instruction: 0x000003b4
   3d220:	andeq	r6, r3, ip, ror #24
   3d224:	andeq	r2, r1, r8, lsl r0
   3d228:	push	{r3, lr}
   3d22c:	mov	r1, #10
   3d230:	ldr	r3, [pc, #20]	; 3d24c <getRoutingStatus@@Base+0x118>
   3d234:	add	r3, pc, r3
   3d238:	ldr	r0, [r3]
   3d23c:	bl	f824 <kill@plt>
   3d240:	mov	r0, #1
   3d244:	pop	{r3, lr}
   3d248:	b	3d134 <getRoutingStatus@@Base>
   3d24c:	andeq	r6, r3, r4, lsr #23
   3d250:	push	{r3, lr}
   3d254:	bl	3d11c <isRouting@@Base>
   3d258:	cmp	r0, #0
   3d25c:	popeq	{r3, pc}
   3d260:	pop	{r3, lr}
   3d264:	b	3d228 <getRoutingStatus@@Base+0xf4>

0003d268 <startRouting@@Base>:
   3d268:	ldr	ip, [pc, #600]	; 3d4c8 <startRouting@@Base+0x260>
   3d26c:	ldr	r3, [pc, #600]	; 3d4cc <startRouting@@Base+0x264>
   3d270:	add	ip, pc, ip
   3d274:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3d278:	sub	sp, sp, #184	; 0xb8
   3d27c:	ldr	r5, [ip, r3]
   3d280:	mov	r9, r0
   3d284:	mov	r8, r1
   3d288:	mov	r7, r2
   3d28c:	ldr	r3, [r5]
   3d290:	str	r3, [sp, #180]	; 0xb4
   3d294:	bl	3d11c <isRouting@@Base>
   3d298:	cmp	r0, #0
   3d29c:	beq	3d2a4 <startRouting@@Base+0x3c>
   3d2a0:	bl	3d228 <getRoutingStatus@@Base+0xf4>
   3d2a4:	bl	f974 <fork@plt>
   3d2a8:	ldr	r6, [pc, #544]	; 3d4d0 <startRouting@@Base+0x268>
   3d2ac:	add	r6, pc, r6
   3d2b0:	cmn	r0, #1
   3d2b4:	mov	r4, r0
   3d2b8:	str	r0, [r6]
   3d2bc:	beq	3d328 <startRouting@@Base+0xc0>
   3d2c0:	cmp	r0, #0
   3d2c4:	bne	3d2e0 <startRouting@@Base+0x78>
   3d2c8:	bl	39304 <constructRoutingScreen@@Base>
   3d2cc:	cmp	r0, #0
   3d2d0:	moveq	r9, #4
   3d2d4:	bne	3d344 <startRouting@@Base+0xdc>
   3d2d8:	mov	r0, r9
   3d2dc:	bl	fc44 <_exit@plt>
   3d2e0:	ldr	r3, [pc, #492]	; 3d4d4 <startRouting@@Base+0x26c>
   3d2e4:	add	r3, pc, r3
   3d2e8:	ldr	r2, [r3]
   3d2ec:	cmp	r2, #0
   3d2f0:	moveq	r0, #1
   3d2f4:	beq	3d310 <startRouting@@Base+0xa8>
   3d2f8:	ldr	r0, [pc, #472]	; 3d4d8 <startRouting@@Base+0x270>
   3d2fc:	mov	r2, #0
   3d300:	str	r2, [r3]
   3d304:	add	r0, pc, r0
   3d308:	bl	1a8f8 <onProgramExit@@Base>
   3d30c:	mov	r0, #1
   3d310:	ldr	r2, [sp, #180]	; 0xb4
   3d314:	ldr	r3, [r5]
   3d318:	cmp	r2, r3
   3d31c:	bne	3d4c4 <startRouting@@Base+0x25c>
   3d320:	add	sp, sp, #184	; 0xb8
   3d324:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3d328:	ldr	r0, [pc, #428]	; 3d4dc <startRouting@@Base+0x274>
   3d32c:	add	r0, pc, r0
   3d330:	bl	1c6fc <logSystemError@@Base>
   3d334:	mov	r3, #0
   3d338:	mov	r0, r3
   3d33c:	str	r3, [r6]
   3d340:	b	3d310 <startRouting@@Base+0xa8>
   3d344:	add	r5, sp, #8
   3d348:	mov	r0, r5
   3d34c:	bl	fd28 <sigemptyset@plt>
   3d350:	mov	r1, #10
   3d354:	mov	r0, r5
   3d358:	bl	f74c <sigaddset@plt>
   3d35c:	mov	r1, r5
   3d360:	mov	r2, r4
   3d364:	mov	r0, #1
   3d368:	bl	fdc4 <sigprocmask@plt>
   3d36c:	mov	r0, r5
   3d370:	mov	r2, #2000	; 0x7d0
   3d374:	mov	r3, #1
   3d378:	str	r7, [sp, #136]	; 0x88
   3d37c:	str	r4, [sp, #152]	; 0x98
   3d380:	str	r2, [sp, #172]	; 0xac
   3d384:	str	r3, [sp, #176]	; 0xb0
   3d388:	bl	3ca48 <initializeRealScreen@@Base+0xcc>
   3d38c:	cmp	r0, #0
   3d390:	bne	3d3bc <startRouting@@Base+0x154>
   3d394:	ldr	r0, [sp, #152]	; 0x98
   3d398:	cmp	r0, #0
   3d39c:	beq	3d3a4 <startRouting@@Base+0x13c>
   3d3a0:	bl	f4f4 <free@plt>
   3d3a4:	ldr	r3, [sp, #136]	; 0x88
   3d3a8:	cmp	r7, r3
   3d3ac:	movne	r9, #4
   3d3b0:	beq	3d46c <startRouting@@Base+0x204>
   3d3b4:	bl	39328 <destructRoutingScreen@@Base>
   3d3b8:	b	3d2d8 <startRouting@@Base+0x70>
   3d3bc:	ldr	r0, [pc, #284]	; 3d4e0 <startRouting@@Base+0x278>
   3d3c0:	ldr	r1, [sp, #160]	; 0xa0
   3d3c4:	add	r0, pc, r0
   3d3c8:	ldr	r2, [sp, #156]	; 0x9c
   3d3cc:	bl	3c9dc <initializeRealScreen@@Base+0x60>
   3d3d0:	cmp	r9, #0
   3d3d4:	blt	3d49c <startRouting@@Base+0x234>
   3d3d8:	ldr	r6, [pc, #260]	; 3d4e4 <startRouting@@Base+0x27c>
   3d3dc:	mvn	r1, #0
   3d3e0:	mov	r3, r1
   3d3e4:	mov	r0, r5
   3d3e8:	add	r6, pc, r6
   3d3ec:	mov	r2, r8
   3d3f0:	add	sl, r6, #12
   3d3f4:	str	sl, [sp]
   3d3f8:	bl	3cf30 <initializeRealScreen@@Base+0x5b4>
   3d3fc:	cmp	r0, #2
   3d400:	beq	3d394 <startRouting@@Base+0x12c>
   3d404:	str	r6, [sp]
   3d408:	mov	r0, r5
   3d40c:	mov	r1, r4
   3d410:	mov	r2, r8
   3d414:	mov	r3, r9
   3d418:	bl	3cf30 <initializeRealScreen@@Base+0x5b4>
   3d41c:	cmp	r0, #1
   3d420:	bne	3d394 <startRouting@@Base+0x12c>
   3d424:	ldr	r2, [sp, #156]	; 0x9c
   3d428:	cmp	r8, r2
   3d42c:	ble	3d394 <startRouting@@Base+0x12c>
   3d430:	mov	r1, r0
   3d434:	str	sl, [sp]
   3d438:	add	r2, r2, #1
   3d43c:	mov	r0, r5
   3d440:	mvn	r3, #0
   3d444:	bl	3cf30 <initializeRealScreen@@Base+0x5b4>
   3d448:	cmp	r0, #2
   3d44c:	beq	3d394 <startRouting@@Base+0x12c>
   3d450:	str	r6, [sp]
   3d454:	mov	r0, r5
   3d458:	mov	r1, r4
   3d45c:	mov	r2, r8
   3d460:	mov	r3, r9
   3d464:	bl	3cf30 <initializeRealScreen@@Base+0x5b4>
   3d468:	b	3d394 <startRouting@@Base+0x12c>
   3d46c:	ldr	r3, [sp, #156]	; 0x9c
   3d470:	cmp	r8, r3
   3d474:	movne	r9, #3
   3d478:	bne	3d3b4 <startRouting@@Base+0x14c>
   3d47c:	cmp	r9, #0
   3d480:	movlt	r9, #1
   3d484:	blt	3d3b4 <startRouting@@Base+0x14c>
   3d488:	ldr	r3, [sp, #160]	; 0xa0
   3d48c:	cmp	r9, r3
   3d490:	movne	r9, #2
   3d494:	moveq	r9, #1
   3d498:	b	3d3b4 <startRouting@@Base+0x14c>
   3d49c:	ldr	ip, [pc, #68]	; 3d4e8 <startRouting@@Base+0x280>
   3d4a0:	mov	r0, r5
   3d4a4:	mov	r1, r4
   3d4a8:	mov	r2, r8
   3d4ac:	add	ip, pc, ip
   3d4b0:	mvn	r3, #0
   3d4b4:	add	ip, ip, #12
   3d4b8:	str	ip, [sp]
   3d4bc:	bl	3cf30 <initializeRealScreen@@Base+0x5b4>
   3d4c0:	b	3d394 <startRouting@@Base+0x12c>
   3d4c4:	bl	f950 <__stack_chk_fail@plt>
   3d4c8:	andeq	r5, r3, r8, lsl #16
   3d4cc:			; <UNDEFINED> instruction: 0x000003b4
   3d4d0:	andeq	r6, r3, ip, lsr #22
   3d4d4:	andeq	r5, r3, r0, lsl lr
   3d4d8:			; <UNDEFINED> instruction: 0xffffff44
   3d4dc:	andeq	r1, r1, r0, asr #29
   3d4e0:	andeq	ip, r1, r4, lsr #2
   3d4e4:			; <UNDEFINED> instruction: 0x000345bc
   3d4e8:	strdeq	r4, [r3], -r8
   3d4ec:	mov	r3, r0
   3d4f0:	mov	r2, #0
   3d4f4:	mov	r0, #1
   3d4f8:	str	r2, [r3, #16]
   3d4fc:	bx	lr
   3d500:	bx	lr
   3d504:	mvn	r0, #0
   3d508:	bx	lr
   3d50c:	mov	r0, #1
   3d510:	bx	lr
   3d514:	ldr	r3, [r2]
   3d518:	add	ip, r3, #1
   3d51c:	str	ip, [r2]
   3d520:	ldrb	r3, [r3]
   3d524:	orr	r2, r3, #10240	; 0x2800
   3d528:	strb	r3, [r1]
   3d52c:	str	r2, [r0]
   3d530:	bx	lr
   3d534:	ldr	ip, [pc, #56]	; 3d574 <startRouting@@Base+0x30c>
   3d538:	push	{r4, lr}
   3d53c:	add	ip, pc, ip
   3d540:	ldr	lr, [pc, #48]	; 3d578 <startRouting@@Base+0x310>
   3d544:	mov	r4, r1
   3d548:	ldr	r3, [r2]
   3d54c:	ldr	ip, [ip, lr]
   3d550:	add	r1, r3, #4
   3d554:	ldr	ip, [ip]
   3d558:	str	r1, [r2]
   3d55c:	ldr	r1, [r3]
   3d560:	str	r1, [r0]
   3d564:	mov	r0, ip
   3d568:	bl	2d7f8 <convertCharacterToDots@@Base>
   3d56c:	strb	r0, [r4]
   3d570:	pop	{r4, pc}
   3d574:	andeq	r5, r3, ip, lsr r5
   3d578:	strdeq	r0, [r0], -ip
   3d57c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d580:	sub	sp, sp, #12
   3d584:	add	r8, r0, r2, lsl #2
   3d588:	add	r9, r1, r2
   3d58c:	ldr	ip, [sp, #52]	; 0x34
   3d590:	str	r3, [sp]
   3d594:	cmp	ip, #0
   3d598:	ldr	r5, [sp, #56]	; 0x38
   3d59c:	ldr	r6, [sp, #64]	; 0x40
   3d5a0:	beq	3d64c <startRouting@@Base+0x3e4>
   3d5a4:	ldr	r3, [sp, #48]	; 0x30
   3d5a8:	lsl	r3, r3, #2
   3d5ac:	str	r3, [sp, #4]
   3d5b0:	ldr	r7, [sp, #60]	; 0x3c
   3d5b4:	ldr	ip, [sp]
   3d5b8:	cmp	r7, ip
   3d5bc:	movcs	r7, ip
   3d5c0:	cmp	r7, #0
   3d5c4:	beq	3d654 <startRouting@@Base+0x3ec>
   3d5c8:	add	r4, r7, r9
   3d5cc:	mov	fp, r8
   3d5d0:	mov	sl, r9
   3d5d4:	mov	r0, fp
   3d5d8:	mov	r1, sl
   3d5dc:	mov	r2, r5
   3d5e0:	add	sl, sl, #1
   3d5e4:	blx	r6
   3d5e8:	cmp	sl, r4
   3d5ec:	add	fp, fp, #4
   3d5f0:	bne	3d5d4 <startRouting@@Base+0x36c>
   3d5f4:	lsl	r0, r7, #2
   3d5f8:	ldr	r3, [sp]
   3d5fc:	add	r0, r8, r0
   3d600:	ldr	ip, [sp, #60]	; 0x3c
   3d604:	mov	r1, #32
   3d608:	rsb	sl, r7, r3
   3d60c:	ldr	r3, [sp, #4]
   3d610:	rsb	ip, r7, ip
   3d614:	str	ip, [sp, #60]	; 0x3c
   3d618:	mov	r2, sl
   3d61c:	add	r8, r8, r3
   3d620:	bl	f95c <wmemset@plt>
   3d624:	mov	r0, r4
   3d628:	mov	r2, sl
   3d62c:	mov	r1, #0
   3d630:	bl	f6b0 <memset@plt>
   3d634:	ldr	ip, [sp, #52]	; 0x34
   3d638:	ldr	r3, [sp, #48]	; 0x30
   3d63c:	subs	ip, ip, #1
   3d640:	str	ip, [sp, #52]	; 0x34
   3d644:	add	r9, r9, r3
   3d648:	bne	3d5b0 <startRouting@@Base+0x348>
   3d64c:	add	sp, sp, #12
   3d650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d654:	mov	r0, r7
   3d658:	mov	r4, r9
   3d65c:	b	3d5f8 <startRouting@@Base+0x390>
   3d660:	push	{r4, r5, r6, r7, r8, r9, lr}
   3d664:	mov	r4, r0
   3d668:	ldr	ip, [r0]
   3d66c:	sub	sp, sp, #20
   3d670:	ldrb	r3, [r0, #36]	; 0x24
   3d674:	rsbs	ip, ip, #1
   3d678:	movcc	ip, #0
   3d67c:	cmp	ip, #0
   3d680:	bfi	r3, ip, #2, #1
   3d684:	strb	r3, [r0, #36]	; 0x24
   3d688:	movne	r3, #1
   3d68c:	strne	r3, [r0]
   3d690:	ldrb	r3, [r0, #36]	; 0x24
   3d694:	tst	r3, #2
   3d698:	beq	3d724 <startRouting@@Base+0x4bc>
   3d69c:	bfc	r3, #1, #1
   3d6a0:	strb	r3, [r0, #36]	; 0x24
   3d6a4:	tst	r3, #1
   3d6a8:	bne	3d738 <startRouting@@Base+0x4d0>
   3d6ac:	ldm	r4, {r5, r6}
   3d6b0:	ldr	r3, [pc, #252]	; 3d7b4 <startRouting@@Base+0x54c>
   3d6b4:	cmp	r6, #1
   3d6b8:	add	r3, pc, r3
   3d6bc:	ldrne	r3, [pc, #244]	; 3d7b8 <startRouting@@Base+0x550>
   3d6c0:	addne	r3, pc, r3
   3d6c4:	ldr	r1, [pc, #240]	; 3d7bc <startRouting@@Base+0x554>
   3d6c8:	cmp	r5, #1
   3d6cc:	add	r1, pc, r1
   3d6d0:	ldrne	r1, [pc, #232]	; 3d7c0 <startRouting@@Base+0x558>
   3d6d4:	addne	r1, pc, r1
   3d6d8:	str	r1, [sp, #4]
   3d6dc:	mov	r0, r2
   3d6e0:	ldr	r1, [pc, #220]	; 3d7c4 <startRouting@@Base+0x55c>
   3d6e4:	mov	r2, r6
   3d6e8:	str	r5, [sp]
   3d6ec:	add	r1, pc, r1
   3d6f0:	bl	1c634 <logMessage@@Base>
   3d6f4:	ldm	r4, {r2, r3}
   3d6f8:	mov	r1, #0
   3d6fc:	ldr	r0, [r4, #28]
   3d700:	mul	r2, r2, r3
   3d704:	bl	f6b0 <memset@plt>
   3d708:	ldr	r3, [r4, #44]	; 0x2c
   3d70c:	cmp	r3, #0
   3d710:	beq	3d72c <startRouting@@Base+0x4c4>
   3d714:	ldr	r0, [r4, #4]
   3d718:	ldr	r1, [r4]
   3d71c:	blx	r3
   3d720:	b	3d72c <startRouting@@Base+0x4c4>
   3d724:	cmp	r1, #0
   3d728:	bne	3d6ac <startRouting@@Base+0x444>
   3d72c:	mov	r0, #1
   3d730:	add	sp, sp, #20
   3d734:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3d738:	ldm	r0, {r5, r6}
   3d73c:	ldr	r7, [pc, #132]	; 3d7c8 <startRouting@@Base+0x560>
   3d740:	mul	r8, r5, r6
   3d744:	add	r7, pc, r7
   3d748:	ldr	r3, [r7]
   3d74c:	cmp	r8, r3
   3d750:	bhi	3d760 <startRouting@@Base+0x4f8>
   3d754:	ldr	r3, [r7, #4]
   3d758:	str	r3, [r4, #28]
   3d75c:	b	3d6b0 <startRouting@@Base+0x448>
   3d760:	mov	r0, r8
   3d764:	str	r2, [sp, #12]
   3d768:	bl	fb48 <malloc@plt>
   3d76c:	ldr	r2, [sp, #12]
   3d770:	subs	r9, r0, #0
   3d774:	beq	3d7a8 <startRouting@@Base+0x540>
   3d778:	ldr	r0, [r7, #4]
   3d77c:	cmp	r0, #0
   3d780:	beq	3d794 <startRouting@@Base+0x52c>
   3d784:	str	r2, [sp, #12]
   3d788:	bl	f4f4 <free@plt>
   3d78c:	ldm	r4, {r5, r6}
   3d790:	ldr	r2, [sp, #12]
   3d794:	ldr	r1, [pc, #48]	; 3d7cc <startRouting@@Base+0x564>
   3d798:	mov	r3, r9
   3d79c:	add	r1, pc, r1
   3d7a0:	stm	r1, {r8, r9}
   3d7a4:	b	3d758 <startRouting@@Base+0x4f0>
   3d7a8:	bl	1c740 <logMallocError@@Base>
   3d7ac:	mov	r0, r9
   3d7b0:	b	3d730 <startRouting@@Base+0x4c8>
   3d7b4:	andeq	fp, r1, r8, lsl #29
   3d7b8:	andeq	fp, r1, r4, lsl #29
   3d7bc:	andeq	r1, r1, ip, lsr #3
   3d7c0:	andeq	fp, r1, r8, ror lr
   3d7c4:	andeq	fp, r1, r8, ror #28
   3d7c8:	muleq	r3, r8, r6
   3d7cc:	andeq	r6, r3, r0, asr #12
   3d7d0:	push	{r3, r4, r5, lr}
   3d7d4:	mov	r5, r0
   3d7d8:	ldr	r4, [pc, #56]	; 3d818 <startRouting@@Base+0x5b0>
   3d7dc:	add	r4, pc, r4
   3d7e0:	ldr	r0, [r4, #8]
   3d7e4:	cmp	r0, #0
   3d7e8:	beq	3d800 <startRouting@@Base+0x598>
   3d7ec:	mov	r1, r5
   3d7f0:	bl	2ade4 <enqueueItem@@Base>
   3d7f4:	adds	r0, r0, #0
   3d7f8:	movne	r0, #1
   3d7fc:	pop	{r3, r4, r5, pc}
   3d800:	mov	r1, r0
   3d804:	bl	2abf4 <newQueue@@Base>
   3d808:	cmp	r0, #0
   3d80c:	str	r0, [r4, #8]
   3d810:	popeq	{r3, r4, r5, pc}
   3d814:	b	3d7ec <startRouting@@Base+0x584>
   3d818:	andeq	r6, r3, r0, lsl #12
   3d81c:	ldr	r3, [pc, #104]	; 3d88c <startRouting@@Base+0x624>
   3d820:	push	{r4, r5, r6, lr}
   3d824:	add	r3, pc, r3
   3d828:	ldr	r5, [pc, #96]	; 3d890 <startRouting@@Base+0x628>
   3d82c:	ldr	r4, [r3, #12]
   3d830:	add	r5, pc, r5
   3d834:	cmp	r4, #0
   3d838:	beq	3d87c <startRouting@@Base+0x614>
   3d83c:	mov	r0, r4
   3d840:	bl	2abb0 <dequeueItem@@Base>
   3d844:	subs	r3, r0, #0
   3d848:	beq	3d87c <startRouting@@Base+0x614>
   3d84c:	ldr	r6, [r3]
   3d850:	bl	f4f4 <free@plt>
   3d854:	ldr	r3, [pc, #56]	; 3d894 <startRouting@@Base+0x62c>
   3d858:	mov	r0, r6
   3d85c:	ldr	r3, [r5, r3]
   3d860:	ldr	r3, [r3]
   3d864:	cmp	r3, #0
   3d868:	beq	3d884 <startRouting@@Base+0x61c>
   3d86c:	bl	4c5bc <api_handleCommand@@Base>
   3d870:	cmn	r0, #1
   3d874:	popne	{r4, r5, r6, pc}
   3d878:	b	3d83c <startRouting@@Base+0x5d4>
   3d87c:	mvn	r0, #0
   3d880:	pop	{r4, r5, r6, pc}
   3d884:	mov	r0, r6
   3d888:	pop	{r4, r5, r6, pc}
   3d88c:			; <UNDEFINED> instruction: 0x000365b8
   3d890:	andeq	r5, r3, r8, asr #4
   3d894:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>

0003d898 <haveBrailleDriver@@Base>:
   3d898:	ldr	r1, [pc, #12]	; 3d8ac <haveBrailleDriver@@Base+0x14>
   3d89c:	ldr	r2, [pc, #12]	; 3d8b0 <haveBrailleDriver@@Base+0x18>
   3d8a0:	add	r1, pc, r1
   3d8a4:	add	r2, pc, r2
   3d8a8:	b	38414 <haveDriver@@Base>
   3d8ac:			; <UNDEFINED> instruction: 0x00012db8
   3d8b0:	andeq	fp, r1, ip, asr ip

0003d8b4 <getDefaultBrailleDriver@@Base>:
   3d8b4:	ldr	r0, [pc, #4]	; 3d8c0 <getDefaultBrailleDriver@@Base+0xc>
   3d8b8:	add	r0, pc, r0
   3d8bc:	b	3843c <getDefaultDriver@@Base>
   3d8c0:	andeq	fp, r1, r8, asr #24

0003d8c4 <loadBrailleDriver@@Base>:
   3d8c4:	ldr	r3, [pc, #76]	; 3d918 <loadBrailleDriver@@Base+0x54>
   3d8c8:	ldr	ip, [pc, #76]	; 3d91c <loadBrailleDriver@@Base+0x58>
   3d8cc:	push	{r4, r5, lr}
   3d8d0:	add	r3, pc, r3
   3d8d4:	sub	sp, sp, #28
   3d8d8:	ldr	r5, [pc, #64]	; 3d920 <loadBrailleDriver@@Base+0x5c>
   3d8dc:	ldr	r4, [pc, #64]	; 3d924 <loadBrailleDriver@@Base+0x60>
   3d8e0:	mov	lr, #98	; 0x62
   3d8e4:	add	r5, pc, r5
   3d8e8:	str	lr, [sp, #4]
   3d8ec:	str	r5, [sp]
   3d8f0:	add	r4, pc, r4
   3d8f4:	str	r4, [sp, #8]
   3d8f8:	ldr	ip, [r3, ip]
   3d8fc:	ldr	r3, [pc, #36]	; 3d928 <loadBrailleDriver@@Base+0x64>
   3d900:	str	ip, [sp, #12]
   3d904:	add	r3, pc, r3
   3d908:	str	ip, [sp, #16]
   3d90c:	bl	38478 <loadDriver@@Base>
   3d910:	add	sp, sp, #28
   3d914:	pop	{r4, r5, pc}
   3d918:	andeq	r5, r3, r8, lsr #3
   3d91c:	andeq	r0, r0, r0, lsr #10
   3d920:	muleq	r1, r4, lr
   3d924:	muleq	r1, r0, ip
   3d928:	strdeq	fp, [r1], -ip

0003d92c <identifyBrailleDriver@@Base>:
   3d92c:	mov	r2, r1
   3d930:	mov	r1, r0
   3d934:	ldr	r0, [pc, #4]	; 3d940 <identifyBrailleDriver@@Base+0x14>
   3d938:	add	r0, pc, r0
   3d93c:	b	387e8 <identifyDriver@@Base>
   3d940:	andeq	fp, r1, ip, asr #24

0003d944 <identifyBrailleDrivers@@Base>:
   3d944:	bx	lr

0003d948 <initializeBrailleDisplay@@Base>:
   3d948:	ldrb	r2, [r0, #48]	; 0x30
   3d94c:	mov	r3, #0
   3d950:	ldr	r1, [pc, #72]	; 3d9a0 <initializeBrailleDisplay@@Base+0x58>
   3d954:	mov	ip, #1
   3d958:	and	r2, r2, #254	; 0xfe
   3d95c:	str	ip, [r0, #4]
   3d960:	add	r1, pc, r1
   3d964:	bfi	r2, r3, #1, #1
   3d968:	str	r1, [r0, #16]
   3d96c:	str	r3, [r0]
   3d970:	strb	r2, [r0, #48]	; 0x30
   3d974:	str	r3, [r0, #8]
   3d978:	str	r3, [r0, #12]
   3d97c:	str	r3, [r0, #20]
   3d980:	str	r3, [r0, #24]
   3d984:	str	r3, [r0, #28]
   3d988:	str	r3, [r0, #40]	; 0x28
   3d98c:	str	r3, [r0, #44]	; 0x2c
   3d990:	str	r3, [r0, #52]	; 0x34
   3d994:	str	r3, [r0, #56]	; 0x38
   3d998:	str	r3, [r0, #60]	; 0x3c
   3d99c:	bx	lr
   3d9a0:			; <UNDEFINED> instruction: 0x000194bc

0003d9a4 <drainBrailleOutput@@Base>:
   3d9a4:	push	{r4, lr}
   3d9a8:	mov	r3, #0
   3d9ac:	ldr	r4, [r0, #40]	; 0x28
   3d9b0:	str	r3, [r0, #40]	; 0x28
   3d9b4:	add	r4, r4, #1
   3d9b8:	cmp	r4, r1
   3d9bc:	movlt	r4, r1
   3d9c0:	mov	r0, r4
   3d9c4:	bl	27bc0 <asyncWait@@Base>
   3d9c8:	mov	r0, r4
   3d9cc:	pop	{r4, pc}

0003d9d0 <fillTextRegion@@Base>:
   3d9d0:	push	{r4, r5, r6, lr}
   3d9d4:	sub	sp, sp, #24
   3d9d8:	ldr	lr, [pc, #48]	; 3da10 <fillTextRegion@@Base+0x40>
   3d9dc:	add	ip, sp, #48	; 0x30
   3d9e0:	ldr	r6, [sp, #40]	; 0x28
   3d9e4:	ldr	r5, [sp, #44]	; 0x2c
   3d9e8:	add	lr, pc, lr
   3d9ec:	ldr	r4, [sp, #52]	; 0x34
   3d9f0:	str	r6, [sp]
   3d9f4:	str	r5, [sp, #4]
   3d9f8:	str	r4, [sp, #12]
   3d9fc:	str	lr, [sp, #16]
   3da00:	str	ip, [sp, #8]
   3da04:	bl	3d57c <startRouting@@Base+0x314>
   3da08:	add	sp, sp, #24
   3da0c:	pop	{r4, r5, r6, pc}
   3da10:			; <UNDEFINED> instruction: 0xfffffb44

0003da14 <fillDotsRegion@@Base>:
   3da14:	push	{r4, r5, r6, lr}
   3da18:	sub	sp, sp, #24
   3da1c:	ldr	lr, [pc, #48]	; 3da54 <fillDotsRegion@@Base+0x40>
   3da20:	add	ip, sp, #48	; 0x30
   3da24:	ldr	r6, [sp, #40]	; 0x28
   3da28:	ldr	r5, [sp, #44]	; 0x2c
   3da2c:	add	lr, pc, lr
   3da30:	ldr	r4, [sp, #52]	; 0x34
   3da34:	str	r6, [sp]
   3da38:	str	r5, [sp, #4]
   3da3c:	str	r4, [sp, #12]
   3da40:	str	lr, [sp, #16]
   3da44:	str	ip, [sp, #8]
   3da48:	bl	3d57c <startRouting@@Base+0x314>
   3da4c:	add	sp, sp, #24
   3da50:	pop	{r4, r5, r6, pc}
   3da54:			; <UNDEFINED> instruction: 0xfffffae0

0003da58 <setStatusText@@Base>:
   3da58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3da5c:	add	fp, sp, #32
   3da60:	ldr	r4, [pc, #256]	; 3db68 <setStatusText@@Base+0x110>
   3da64:	sub	sp, sp, #28
   3da68:	ldr	r3, [pc, #252]	; 3db6c <setStatusText@@Base+0x114>
   3da6c:	add	r4, pc, r4
   3da70:	ldr	r2, [pc, #248]	; 3db70 <setStatusText@@Base+0x118>
   3da74:	mov	r6, r1
   3da78:	ldr	r5, [r0, #8]
   3da7c:	ldr	r3, [r4, r3]
   3da80:	mov	r7, r0
   3da84:	ldr	r1, [r0, #12]
   3da88:	str	r3, [fp, #-48]	; 0xffffffd0
   3da8c:	ldr	r3, [r3]
   3da90:	mul	r5, r5, r1
   3da94:	str	r3, [fp, #-40]	; 0xffffffd8
   3da98:	ldr	r9, [r4, r2]
   3da9c:	ldr	r3, [r9]
   3daa0:	ldr	r3, [r3, #52]	; 0x34
   3daa4:	cmp	r3, #0
   3daa8:	beq	3dab4 <setStatusText@@Base+0x5c>
   3daac:	cmp	r5, #0
   3dab0:	bne	3dad4 <setStatusText@@Base+0x7c>
   3dab4:	mov	r0, #1
   3dab8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3dabc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3dac0:	ldr	r3, [r1]
   3dac4:	cmp	r2, r3
   3dac8:	bne	3db64 <setStatusText@@Base+0x10c>
   3dacc:	sub	sp, fp, #32
   3dad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dad4:	add	r2, r5, #7
   3dad8:	str	sp, [fp, #-56]	; 0xffffffc8
   3dadc:	bic	r2, r2, #7
   3dae0:	mov	r8, #0
   3dae4:	sub	sp, sp, r2
   3dae8:	str	sp, [fp, #-52]	; 0xffffffcc
   3daec:	sub	sl, sp, #1
   3daf0:	ldrb	r0, [r6, r8]
   3daf4:	cmp	r0, #0
   3daf8:	beq	3db2c <setStatusText@@Base+0xd4>
   3dafc:	bl	285c8 <convertCharToWchar@@Base>
   3db00:	ldr	r1, [pc, #108]	; 3db74 <setStatusText@@Base+0x11c>
   3db04:	add	r8, r8, #1
   3db08:	ldr	ip, [r4, r1]
   3db0c:	cmn	r0, #1
   3db10:	movne	r1, r0
   3db14:	moveq	r1, #63	; 0x3f
   3db18:	ldr	r0, [ip]
   3db1c:	bl	2d7f8 <convertCharacterToDots@@Base>
   3db20:	cmp	r8, r5
   3db24:	strb	r0, [sl, #1]!
   3db28:	bne	3daf0 <setStatusText@@Base+0x98>
   3db2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3db30:	rsb	r2, r8, r5
   3db34:	mov	r1, #0
   3db38:	add	r0, r3, r8
   3db3c:	bl	f6b0 <memset@plt>
   3db40:	ldr	r3, [r9]
   3db44:	mov	r0, r7
   3db48:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3db4c:	ldr	r3, [r3, #52]	; 0x34
   3db50:	blx	r3
   3db54:	ldr	sp, [fp, #-56]	; 0xffffffc8
   3db58:	cmp	r0, #0
   3db5c:	movne	r0, #1
   3db60:	b	3dab8 <setStatusText@@Base+0x60>
   3db64:	bl	f950 <__stack_chk_fail@plt>
   3db68:	andeq	r5, r3, ip
   3db6c:			; <UNDEFINED> instruction: 0x000003b4
   3db70:	andeq	r0, r0, ip, ror r4
   3db74:	strdeq	r0, [r0], -ip

0003db78 <clearStatusCells@@Base>:
   3db78:	ldr	r1, [pc, #4]	; 3db84 <clearStatusCells@@Base+0xc>
   3db7c:	add	r1, pc, r1
   3db80:	b	3da58 <setStatusText@@Base>
   3db84:	andeq	r1, r1, r8, lsl #3

0003db88 <ensureBrailleBuffer@@Base>:
   3db88:	push	{r4}		; (str r4, [sp, #-4]!)
   3db8c:	mov	r2, r1
   3db90:	ldr	r4, [r0, #28]
   3db94:	mov	r1, #1
   3db98:	ldrb	ip, [r0, #36]	; 0x24
   3db9c:	rsbs	r4, r4, #1
   3dba0:	movcc	r4, #0
   3dba4:	bfi	ip, r4, #0, #1
   3dba8:	bfi	ip, r4, #1, #1
   3dbac:	strb	ip, [r0, #36]	; 0x24
   3dbb0:	pop	{r4}		; (ldr r4, [sp], #4)
   3dbb4:	b	3d660 <startRouting@@Base+0x3f8>

0003dbb8 <enqueueCommand@@Base>:
   3dbb8:	cmn	r0, #1
   3dbbc:	push	{r4, r5, r6, lr}
   3dbc0:	mov	r4, r0
   3dbc4:	beq	3dc28 <enqueueCommand@@Base+0x70>
   3dbc8:	ldr	r5, [pc, #112]	; 3dc40 <enqueueCommand@@Base+0x88>
   3dbcc:	add	r5, pc, r5
   3dbd0:	ldr	r0, [r5, #12]
   3dbd4:	cmp	r0, #0
   3dbd8:	movne	r6, r0
   3dbdc:	beq	3dc10 <enqueueCommand@@Base+0x58>
   3dbe0:	mov	r0, #4
   3dbe4:	bl	fb48 <malloc@plt>
   3dbe8:	subs	r5, r0, #0
   3dbec:	beq	3dc28 <enqueueCommand@@Base+0x70>
   3dbf0:	str	r4, [r5]
   3dbf4:	mov	r0, r6
   3dbf8:	mov	r1, r5
   3dbfc:	bl	2ade4 <enqueueItem@@Base>
   3dc00:	subs	r4, r0, #0
   3dc04:	beq	3dc30 <enqueueCommand@@Base+0x78>
   3dc08:	mov	r0, #1
   3dc0c:	pop	{r4, r5, r6, pc}
   3dc10:	mov	r1, r0
   3dc14:	bl	2abf4 <newQueue@@Base>
   3dc18:	cmp	r0, #0
   3dc1c:	mov	r6, r0
   3dc20:	str	r0, [r5, #12]
   3dc24:	bne	3dbe0 <enqueueCommand@@Base+0x28>
   3dc28:	mov	r0, #0
   3dc2c:	pop	{r4, r5, r6, pc}
   3dc30:	mov	r0, r5
   3dc34:	bl	f4f4 <free@plt>
   3dc38:	mov	r0, r4
   3dc3c:	pop	{r4, r5, r6, pc}
   3dc40:	andeq	r6, r3, r0, lsl r2

0003dc44 <enqueueKeyEvent@@Base>:
   3dc44:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   3dc48:	mov	r7, r0
   3dc4c:	ldr	r4, [pc, #228]	; 3dd38 <enqueueKeyEvent@@Base+0xf4>
   3dc50:	mov	r8, r1
   3dc54:	mov	r6, r2
   3dc58:	add	r4, pc, r4
   3dc5c:	ldr	r3, [r4, #16]
   3dc60:	cmp	r3, #0
   3dc64:	beq	3dca0 <enqueueKeyEvent@@Base+0x5c>
   3dc68:	cmp	r2, #0
   3dc6c:	beq	3dc7c <enqueueKeyEvent@@Base+0x38>
   3dc70:	ldrb	r2, [r3]
   3dc74:	cmp	r2, r0
   3dc78:	beq	3dcec <enqueueKeyEvent@@Base+0xa8>
   3dc7c:	mov	r4, r3
   3dc80:	ldr	r3, [pc, #180]	; 3dd3c <enqueueKeyEvent@@Base+0xf8>
   3dc84:	mov	r0, r4
   3dc88:	mov	r2, #0
   3dc8c:	add	r3, pc, r3
   3dc90:	str	r2, [r3, #16]
   3dc94:	bl	3d7d0 <startRouting@@Base+0x568>
   3dc98:	subs	r5, r0, #0
   3dc9c:	beq	3dcdc <enqueueKeyEvent@@Base+0x98>
   3dca0:	mov	r0, #4
   3dca4:	bl	fb48 <malloc@plt>
   3dca8:	subs	r4, r0, #0
   3dcac:	beq	3dd14 <enqueueKeyEvent@@Base+0xd0>
   3dcb0:	ldrb	r3, [r4, #2]
   3dcb4:	strb	r7, [r4]
   3dcb8:	bfi	r3, r6, #0, #1
   3dcbc:	strb	r8, [r4, #1]
   3dcc0:	strb	r3, [r4, #2]
   3dcc4:	bl	3d7d0 <startRouting@@Base+0x568>
   3dcc8:	subs	r5, r0, #0
   3dccc:	movne	r5, #1
   3dcd0:	beq	3dcdc <enqueueKeyEvent@@Base+0x98>
   3dcd4:	mov	r0, r5
   3dcd8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3dcdc:	mov	r0, r4
   3dce0:	bl	f4f4 <free@plt>
   3dce4:	mov	r0, r5
   3dce8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3dcec:	ldrb	r2, [r3, #1]
   3dcf0:	cmp	r2, r1
   3dcf4:	bne	3dc7c <enqueueKeyEvent@@Base+0x38>
   3dcf8:	add	r0, r4, #20
   3dcfc:	mov	r1, #0
   3dd00:	bl	1ebf8 <afterTimePeriod@@Base>
   3dd04:	subs	r9, r0, #0
   3dd08:	beq	3dd24 <enqueueKeyEvent@@Base+0xe0>
   3dd0c:	ldr	r4, [r4, #16]
   3dd10:	b	3dc80 <enqueueKeyEvent@@Base+0x3c>
   3dd14:	mov	r5, r4
   3dd18:	bl	1c740 <logMallocError@@Base>
   3dd1c:	mov	r0, r5
   3dd20:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3dd24:	ldr	r0, [r4, #16]
   3dd28:	mov	r5, #1
   3dd2c:	bl	f4f4 <free@plt>
   3dd30:	str	r9, [r4, #16]
   3dd34:	b	3dcd4 <enqueueKeyEvent@@Base+0x90>
   3dd38:	andeq	r6, r3, r4, lsl #3
   3dd3c:	andeq	r6, r3, r0, asr r1

0003dd40 <enqueueKey@@Base>:
   3dd40:	push	{r3, r4, r5, lr}
   3dd44:	mov	r2, #1
   3dd48:	mov	r5, r0
   3dd4c:	mov	r4, r1
   3dd50:	bl	3dc44 <enqueueKeyEvent@@Base>
   3dd54:	cmp	r0, #0
   3dd58:	popeq	{r3, r4, r5, pc}
   3dd5c:	mov	r0, r5
   3dd60:	mov	r1, r4
   3dd64:	mov	r2, #0
   3dd68:	bl	3dc44 <enqueueKeyEvent@@Base>
   3dd6c:	adds	r0, r0, #0
   3dd70:	movne	r0, #1
   3dd74:	pop	{r3, r4, r5, pc}

0003dd78 <enqueueKeys@@Base>:
   3dd78:	ldr	r3, [pc, #220]	; 3de5c <enqueueKeys@@Base+0xe4>
   3dd7c:	push	{r4, r5, r6, r7, r8, lr}
   3dd80:	subs	r4, r0, #0
   3dd84:	ldr	r0, [pc, #212]	; 3de60 <enqueueKeys@@Base+0xe8>
   3dd88:	add	r3, pc, r3
   3dd8c:	sub	sp, sp, #40	; 0x28
   3dd90:	mov	r7, r1
   3dd94:	mov	r6, r2
   3dd98:	movne	r5, #0
   3dd9c:	ldr	r8, [r3, r0]
   3dda0:	ldr	r3, [r8]
   3dda4:	str	r3, [sp, #36]	; 0x24
   3dda8:	bne	3ddc0 <enqueueKeys@@Base+0x48>
   3ddac:	b	3de50 <enqueueKeys@@Base+0xd8>
   3ddb0:	add	r6, r6, #1
   3ddb4:	lsrs	r4, r4, #1
   3ddb8:	uxtb	r6, r6
   3ddbc:	beq	3de04 <enqueueKeys@@Base+0x8c>
   3ddc0:	tst	r4, #1
   3ddc4:	beq	3ddb0 <enqueueKeys@@Base+0x38>
   3ddc8:	mov	r0, r7
   3ddcc:	mov	r1, r6
   3ddd0:	mov	r2, #1
   3ddd4:	bl	3dc44 <enqueueKeyEvent@@Base>
   3ddd8:	cmp	r0, #0
   3dddc:	beq	3de34 <enqueueKeys@@Base+0xbc>
   3dde0:	add	r1, sp, #40	; 0x28
   3dde4:	add	r2, r5, #1
   3dde8:	add	r3, r1, r5
   3ddec:	lsrs	r4, r4, #1
   3ddf0:	uxtb	r5, r2
   3ddf4:	strb	r6, [r3, #-36]	; 0xffffffdc
   3ddf8:	add	r6, r6, #1
   3ddfc:	uxtb	r6, r6
   3de00:	bne	3ddc0 <enqueueKeys@@Base+0x48>
   3de04:	cmp	r5, #0
   3de08:	beq	3de50 <enqueueKeys@@Base+0xd8>
   3de0c:	sub	r5, r5, #1
   3de10:	add	r1, sp, #40	; 0x28
   3de14:	mov	r0, r7
   3de18:	mov	r2, #0
   3de1c:	uxtb	r5, r5
   3de20:	add	r3, r1, r5
   3de24:	ldrb	r1, [r3, #-36]	; 0xffffffdc
   3de28:	bl	3dc44 <enqueueKeyEvent@@Base>
   3de2c:	cmp	r0, #0
   3de30:	bne	3de04 <enqueueKeys@@Base+0x8c>
   3de34:	mov	r0, #0
   3de38:	ldr	r2, [sp, #36]	; 0x24
   3de3c:	ldr	r3, [r8]
   3de40:	cmp	r2, r3
   3de44:	bne	3de58 <enqueueKeys@@Base+0xe0>
   3de48:	add	sp, sp, #40	; 0x28
   3de4c:	pop	{r4, r5, r6, r7, r8, pc}
   3de50:	mov	r0, #1
   3de54:	b	3de38 <enqueueKeys@@Base+0xc0>
   3de58:	bl	f950 <__stack_chk_fail@plt>
   3de5c:	strdeq	r4, [r3], -r0
   3de60:			; <UNDEFINED> instruction: 0x000003b4

0003de64 <enqueueUpdatedKeys@@Base>:
   3de64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3de68:	mov	sl, r1
   3de6c:	ldr	r4, [pc, #264]	; 3df7c <enqueueUpdatedKeys@@Base+0x118>
   3de70:	mov	r7, r3
   3de74:	ldr	r1, [pc, #260]	; 3df80 <enqueueUpdatedKeys@@Base+0x11c>
   3de78:	sub	sp, sp, #40	; 0x28
   3de7c:	add	r4, pc, r4
   3de80:	ldr	ip, [sl]
   3de84:	mov	r5, r0
   3de88:	mov	r8, r2
   3de8c:	ldr	r9, [r4, r1]
   3de90:	mov	r3, r4
   3de94:	cmp	ip, r0
   3de98:	ldr	r3, [r9]
   3de9c:	movne	r6, #0
   3dea0:	movne	r4, #1
   3dea4:	str	r3, [sp, #36]	; 0x24
   3dea8:	bne	3ded0 <enqueueUpdatedKeys@@Base+0x6c>
   3deac:	b	3df70 <enqueueUpdatedKeys@@Base+0x10c>
   3deb0:	tst	ip, r4
   3deb4:	bne	3df4c <enqueueUpdatedKeys@@Base+0xe8>
   3deb8:	ldr	ip, [sl]
   3debc:	add	r7, r7, #1
   3dec0:	cmp	ip, r5
   3dec4:	lsl	r4, r4, #1
   3dec8:	uxtb	r7, r7
   3decc:	beq	3df00 <enqueueUpdatedKeys@@Base+0x9c>
   3ded0:	ands	r2, r4, r5
   3ded4:	beq	3deb0 <enqueueUpdatedKeys@@Base+0x4c>
   3ded8:	tst	ip, r4
   3dedc:	bne	3deb8 <enqueueUpdatedKeys@@Base+0x54>
   3dee0:	add	r1, sp, #40	; 0x28
   3dee4:	add	r2, r6, #1
   3dee8:	add	r3, r1, r6
   3deec:	orr	ip, ip, r4
   3def0:	uxtb	r6, r2
   3def4:	str	ip, [sl]
   3def8:	strb	r7, [r3, #-36]	; 0xffffffdc
   3defc:	b	3debc <enqueueUpdatedKeys@@Base+0x58>
   3df00:	cmp	r6, #0
   3df04:	beq	3df70 <enqueueUpdatedKeys@@Base+0x10c>
   3df08:	sub	r6, r6, #1
   3df0c:	add	r1, sp, #40	; 0x28
   3df10:	mov	r0, r8
   3df14:	mov	r2, #1
   3df18:	uxtb	r6, r6
   3df1c:	add	r3, r1, r6
   3df20:	ldrb	r1, [r3, #-36]	; 0xffffffdc
   3df24:	bl	3dc44 <enqueueKeyEvent@@Base>
   3df28:	cmp	r0, #0
   3df2c:	bne	3df00 <enqueueUpdatedKeys@@Base+0x9c>
   3df30:	mov	r0, #0
   3df34:	ldr	r2, [sp, #36]	; 0x24
   3df38:	ldr	r3, [r9]
   3df3c:	cmp	r2, r3
   3df40:	bne	3df78 <enqueueUpdatedKeys@@Base+0x114>
   3df44:	add	sp, sp, #40	; 0x28
   3df48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3df4c:	mov	r0, r8
   3df50:	mov	r1, r7
   3df54:	bl	3dc44 <enqueueKeyEvent@@Base>
   3df58:	cmp	r0, #0
   3df5c:	beq	3df30 <enqueueUpdatedKeys@@Base+0xcc>
   3df60:	ldr	ip, [sl]
   3df64:	bic	ip, ip, r4
   3df68:	str	ip, [sl]
   3df6c:	b	3debc <enqueueUpdatedKeys@@Base+0x58>
   3df70:	mov	r0, #1
   3df74:	b	3df34 <enqueueUpdatedKeys@@Base+0xd0>
   3df78:	bl	f950 <__stack_chk_fail@plt>
   3df7c:	strdeq	r4, [r3], -ip
   3df80:			; <UNDEFINED> instruction: 0x000003b4

0003df84 <enqueueXtScanCode@@Base>:
   3df84:	cmp	r1, #224	; 0xe0
   3df88:	mov	ip, r0
   3df8c:	push	{r3, lr}
   3df90:	ldrb	r0, [sp, #8]
   3df94:	beq	3dfc8 <enqueueXtScanCode@@Base+0x44>
   3df98:	cmp	r1, #225	; 0xe1
   3df9c:	beq	3dfdc <enqueueXtScanCode@@Base+0x58>
   3dfa0:	cmp	r1, #0
   3dfa4:	beq	3dfcc <enqueueXtScanCode@@Base+0x48>
   3dfa8:	mov	r2, r1
   3dfac:	ldr	r1, [pc, #60]	; 3dff0 <enqueueXtScanCode@@Base+0x6c>
   3dfb0:	mov	r3, ip
   3dfb4:	mov	r0, #4
   3dfb8:	add	r1, pc, r1
   3dfbc:	bl	1c634 <logMessage@@Base>
   3dfc0:	mov	r0, #0
   3dfc4:	pop	{r3, pc}
   3dfc8:	mov	r2, r3
   3dfcc:	mov	r0, r2
   3dfd0:	mov	r1, ip
   3dfd4:	pop	{r3, lr}
   3dfd8:	b	3dd40 <enqueueKey@@Base>
   3dfdc:	mov	r2, r0
   3dfe0:	mov	r1, ip
   3dfe4:	mov	r0, r2
   3dfe8:	pop	{r3, lr}
   3dfec:	b	3dd40 <enqueueKey@@Base>
   3dff0:	ldrdeq	fp, [r1], -r4

0003dff4 <getCurrentCommandContext@@Base>:
   3dff4:	ldr	r3, [pc, #4]	; 3e000 <getCurrentCommandContext@@Base+0xc>
   3dff8:	ldr	r0, [pc, r3]
   3dffc:	bx	lr
   3e000:	andeq	r5, r3, r0, lsl #2

0003e004 <readBrailleCommand@@Base>:
   3e004:	ldr	r3, [pc, #368]	; 3e17c <readBrailleCommand@@Base+0x178>
   3e008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e00c:	add	r3, pc, r3
   3e010:	sub	sp, sp, #20
   3e014:	mov	r7, r1
   3e018:	mov	r6, r0
   3e01c:	str	r1, [r3]
   3e020:	bl	3d81c <startRouting@@Base+0x5b4>
   3e024:	ldr	r5, [pc, #340]	; 3e180 <readBrailleCommand@@Base+0x17c>
   3e028:	add	r5, pc, r5
   3e02c:	cmn	r0, #1
   3e030:	beq	3e03c <readBrailleCommand@@Base+0x38>
   3e034:	add	sp, sp, #20
   3e038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e03c:	ldr	r3, [pc, #320]	; 3e184 <readBrailleCommand@@Base+0x180>
   3e040:	mov	r1, r7
   3e044:	uxtb	r7, r7
   3e048:	str	r7, [sp, #12]
   3e04c:	mov	r0, r6
   3e050:	ldr	r4, [pc, #304]	; 3e188 <readBrailleCommand@@Base+0x184>
   3e054:	ldr	r3, [r5, r3]
   3e058:	add	r4, pc, r4
   3e05c:	add	sl, r4, #20
   3e060:	ldr	r3, [r3]
   3e064:	ldr	r3, [r3, #44]	; 0x2c
   3e068:	blx	r3
   3e06c:	mov	r1, #0
   3e070:	mov	r2, #6
   3e074:	mov	fp, r0
   3e078:	mov	r0, r6
   3e07c:	bl	3d660 <startRouting@@Base+0x3f8>
   3e080:	ldr	r3, [r4, #16]
   3e084:	ldr	r7, [r4, #8]
   3e088:	cmp	r3, #0
   3e08c:	beq	3e0a4 <readBrailleCommand@@Base+0xa0>
   3e090:	mov	r0, sl
   3e094:	mov	r1, #0
   3e098:	bl	1ebf8 <afterTimePeriod@@Base>
   3e09c:	cmp	r0, #0
   3e0a0:	bne	3e154 <readBrailleCommand@@Base+0x150>
   3e0a4:	cmp	r7, #0
   3e0a8:	beq	3e128 <readBrailleCommand@@Base+0x124>
   3e0ac:	mov	r0, r7
   3e0b0:	bl	2abb0 <dequeueItem@@Base>
   3e0b4:	ldr	r3, [pc, #208]	; 3e18c <readBrailleCommand@@Base+0x188>
   3e0b8:	subs	r8, r0, #0
   3e0bc:	beq	3e128 <readBrailleCommand@@Base+0x124>
   3e0c0:	ldr	r3, [r5, r3]
   3e0c4:	ldr	r3, [r3]
   3e0c8:	cmp	r3, #0
   3e0cc:	beq	3e0ec <readBrailleCommand@@Base+0xe8>
   3e0d0:	ldrb	r2, [r8, #2]
   3e0d4:	ldrb	r0, [r8]
   3e0d8:	and	r2, r2, #1
   3e0dc:	ldrb	r1, [r8, #1]
   3e0e0:	bl	4c4a4 <api_handleKeyEvent@@Base>
   3e0e4:	cmn	r0, #1
   3e0e8:	beq	3e170 <readBrailleCommand@@Base+0x16c>
   3e0ec:	mov	r0, r8
   3e0f0:	ldrb	r9, [r8, #2]
   3e0f4:	ldrb	r7, [r8]
   3e0f8:	ldrb	r8, [r8, #1]
   3e0fc:	bl	f4f4 <free@plt>
   3e100:	ldr	r0, [r6, #24]
   3e104:	and	r9, r9, #1
   3e108:	cmp	r0, #0
   3e10c:	beq	3e080 <readBrailleCommand@@Base+0x7c>
   3e110:	str	r9, [sp]
   3e114:	mov	r2, r7
   3e118:	mov	r3, r8
   3e11c:	ldr	r1, [sp, #12]
   3e120:	bl	34b90 <processKeyEvent@@Base>
   3e124:	b	3e080 <readBrailleCommand@@Base+0x7c>
   3e128:	cmn	fp, #1
   3e12c:	beq	3e138 <readBrailleCommand@@Base+0x134>
   3e130:	mov	r0, fp
   3e134:	bl	3dbb8 <enqueueCommand@@Base>
   3e138:	bl	3d81c <startRouting@@Base+0x5b4>
   3e13c:	cmn	r0, #1
   3e140:	movne	r0, r0
   3e144:	bne	3e034 <readBrailleCommand@@Base+0x30>
   3e148:	add	sp, sp, #20
   3e14c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e150:	b	4c5bc <api_handleCommand@@Base>
   3e154:	ldr	r0, [r4, #16]
   3e158:	bl	3d7d0 <startRouting@@Base+0x568>
   3e15c:	cmp	r0, #0
   3e160:	beq	3e128 <readBrailleCommand@@Base+0x124>
   3e164:	mov	r3, #0
   3e168:	str	r3, [r4, #16]
   3e16c:	b	3e0a4 <readBrailleCommand@@Base+0xa0>
   3e170:	mov	r0, r8
   3e174:	bl	f4f4 <free@plt>
   3e178:	b	3e0ac <readBrailleCommand@@Base+0xa8>
   3e17c:	andeq	r5, r3, ip, ror #1
   3e180:	andeq	r4, r3, r0, asr sl
   3e184:	andeq	r0, r0, ip, ror r4
   3e188:	andeq	r5, r3, r4, lsl #27
   3e18c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>

0003e190 <writeBraillePacket@@Base>:
   3e190:	push	{r3, r4, r5, r6, r7, lr}
   3e194:	mov	r4, r3
   3e198:	mov	r5, r2
   3e19c:	mov	r6, r1
   3e1a0:	mov	r7, r0
   3e1a4:	mov	r1, r3
   3e1a8:	mov	r0, r2
   3e1ac:	bl	38984 <logOutputPacket@@Base>
   3e1b0:	mov	r0, r6
   3e1b4:	mov	r1, r5
   3e1b8:	mov	r2, r4
   3e1bc:	bl	3f1dc <gioWriteData@@Base>
   3e1c0:	cmn	r0, #1
   3e1c4:	moveq	r3, #0
   3e1c8:	beq	3e1e8 <writeBraillePacket@@Base+0x58>
   3e1cc:	mov	r1, r4
   3e1d0:	mov	r0, r6
   3e1d4:	ldr	r4, [r7, #40]	; 0x28
   3e1d8:	bl	3f7e4 <gioGetMillisecondsToTransfer@@Base>
   3e1dc:	mov	r3, #1
   3e1e0:	add	r0, r0, r4
   3e1e4:	str	r0, [r7, #40]	; 0x28
   3e1e8:	mov	r0, r3
   3e1ec:	pop	{r3, r4, r5, r6, r7, pc}

0003e1f0 <probeBrailleDisplay@@Base>:
   3e1f0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e1f4:	mov	r4, r0
   3e1f8:	ldr	r5, [sp, #48]	; 0x30
   3e1fc:	mov	fp, r1
   3e200:	ldr	r6, [sp, #52]	; 0x34
   3e204:	mov	r8, r2
   3e208:	mov	r7, r3
   3e20c:	mov	sl, #0
   3e210:	mov	r0, r4
   3e214:	ldr	r3, [sp, #40]	; 0x28
   3e218:	blx	r3
   3e21c:	cmp	r0, #0
   3e220:	beq	3e290 <probeBrailleDisplay@@Base+0xa0>
   3e224:	mov	r0, r4
   3e228:	mov	r1, #0
   3e22c:	bl	3d9a4 <drainBrailleOutput@@Base>
   3e230:	mov	r1, r7
   3e234:	mov	r0, r8
   3e238:	bl	3f220 <gioAwaitInput@@Base>
   3e23c:	mov	r1, r5
   3e240:	mov	r2, r6
   3e244:	cmp	r0, #0
   3e248:	mov	r0, r4
   3e24c:	beq	3e2cc <probeBrailleDisplay@@Base+0xdc>
   3e250:	ldr	r3, [sp, #44]	; 0x2c
   3e254:	blx	r3
   3e258:	mov	r1, r5
   3e25c:	subs	r9, r0, #0
   3e260:	mov	r0, r4
   3e264:	mov	r2, r9
   3e268:	beq	3e2cc <probeBrailleDisplay@@Base+0xdc>
   3e26c:	ldr	r3, [sp, #56]	; 0x38
   3e270:	blx	r3
   3e274:	cmp	r0, #3
   3e278:	addls	pc, pc, r0, lsl #2
   3e27c:	b	3e2b0 <probeBrailleDisplay@@Base+0xc0>
   3e280:	b	3e230 <probeBrailleDisplay@@Base+0x40>
   3e284:	b	3e2a8 <probeBrailleDisplay@@Base+0xb8>
   3e288:	b	3e290 <probeBrailleDisplay@@Base+0xa0>
   3e28c:	b	3e298 <probeBrailleDisplay@@Base+0xa8>
   3e290:	mov	r0, #0
   3e294:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e298:	mov	r1, r9
   3e29c:	mov	r0, r5
   3e2a0:	bl	38b20 <logUnexpectedPacket@@Base>
   3e2a4:	b	3e230 <probeBrailleDisplay@@Base+0x40>
   3e2a8:	mov	r0, #1
   3e2ac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e2b0:	ldr	r1, [pc, #52]	; 3e2ec <probeBrailleDisplay@@Base+0xfc>
   3e2b4:	mov	r2, r0
   3e2b8:	mov	r0, #4
   3e2bc:	add	r1, pc, r1
   3e2c0:	bl	1c634 <logMessage@@Base>
   3e2c4:	mov	r0, #0
   3e2c8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e2cc:	bl	fca4 <__errno_location@plt>
   3e2d0:	ldr	r3, [r0]
   3e2d4:	cmp	r3, #11
   3e2d8:	bne	3e290 <probeBrailleDisplay@@Base+0xa0>
   3e2dc:	cmp	sl, fp
   3e2e0:	beq	3e290 <probeBrailleDisplay@@Base+0xa0>
   3e2e4:	add	sl, sl, #1
   3e2e8:	b	3e210 <probeBrailleDisplay@@Base+0x20>
   3e2ec:	strdeq	fp, [r1], -r4

0003e2f0 <learnMode@@Base>:
   3e2f0:	ldr	r3, [pc, #416]	; 3e498 <learnMode@@Base+0x1a8>
   3e2f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e2f8:	mov	r7, r1
   3e2fc:	ldr	r1, [pc, #408]	; 3e49c <learnMode@@Base+0x1ac>
   3e300:	add	r3, pc, r3
   3e304:	sub	sp, sp, #284	; 0x11c
   3e308:	mov	r8, r2
   3e30c:	ldr	r5, [pc, #396]	; 3e4a0 <learnMode@@Base+0x1b0>
   3e310:	mov	r4, r0
   3e314:	ldr	r1, [r3, r1]
   3e318:	add	r5, pc, r5
   3e31c:	str	r1, [sp, #4]
   3e320:	mov	r1, r5
   3e324:	ldr	r2, [sp, #4]
   3e328:	ldr	r3, [r2]
   3e32c:	str	r3, [sp, #276]	; 0x114
   3e330:	bl	3da58 <setStatusText@@Base>
   3e334:	cmp	r0, #0
   3e338:	bne	3e35c <learnMode@@Base+0x6c>
   3e33c:	mov	r0, #0
   3e340:	ldr	r1, [sp, #4]
   3e344:	ldr	r2, [sp, #276]	; 0x114
   3e348:	ldr	r3, [r1]
   3e34c:	cmp	r2, r3
   3e350:	bne	3e494 <learnMode@@Base+0x1a4>
   3e354:	add	sp, sp, #284	; 0x11c
   3e358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e35c:	ldr	r1, [pc, #320]	; 3e4a4 <learnMode@@Base+0x1b4>
   3e360:	mov	r2, #5
   3e364:	mov	r0, #0
   3e368:	add	r1, pc, r1
   3e36c:	bl	f9bc <dcgettext@plt>
   3e370:	mov	r2, #4
   3e374:	mov	r1, r0
   3e378:	mov	r0, r5
   3e37c:	bl	13558 <message@@Base>
   3e380:	cmp	r0, #0
   3e384:	beq	3e33c <learnMode@@Base+0x4c>
   3e388:	add	r5, sp, #8
   3e38c:	mov	r1, r8
   3e390:	ldr	r9, [pc, #272]	; 3e4a8 <learnMode@@Base+0x1b8>
   3e394:	add	r8, sp, #20
   3e398:	mov	r0, r5
   3e39c:	ldr	fp, [pc, #264]	; 3e4ac <learnMode@@Base+0x1bc>
   3e3a0:	bl	1ebf0 <startTimePeriod@@Base>
   3e3a4:	ldr	sl, [pc, #260]	; 3e4b0 <learnMode@@Base+0x1c0>
   3e3a8:	add	r9, pc, r9
   3e3ac:	add	fp, pc, fp
   3e3b0:	add	sl, pc, sl
   3e3b4:	mov	r0, r4
   3e3b8:	mov	r1, #3
   3e3bc:	bl	3e004 <readBrailleCommand@@Base>
   3e3c0:	cmn	r0, #1
   3e3c4:	mov	r6, r0
   3e3c8:	beq	3e440 <learnMode@@Base+0x150>
   3e3cc:	mov	r2, r6
   3e3d0:	mov	r0, #7
   3e3d4:	mov	r1, r9
   3e3d8:	bl	1c634 <logMessage@@Base>
   3e3dc:	and	r2, r6, #12582912	; 0xc00000
   3e3e0:	cmp	r2, #4194304	; 0x400000
   3e3e4:	beq	3e44c <learnMode@@Base+0x15c>
   3e3e8:	uxth	r2, r6
   3e3ec:	cmp	r2, #0
   3e3f0:	beq	3e44c <learnMode@@Base+0x15c>
   3e3f4:	cmp	r2, #51	; 0x33
   3e3f8:	beq	3e48c <learnMode@@Base+0x19c>
   3e3fc:	mov	r3, #3
   3e400:	mov	r1, r8
   3e404:	mov	r2, #256	; 0x100
   3e408:	mov	r0, r6
   3e40c:	bl	2b474 <describeCommand@@Base>
   3e410:	mov	r0, #7
   3e414:	mov	r1, fp
   3e418:	mov	r2, r8
   3e41c:	bl	1c634 <logMessage@@Base>
   3e420:	mov	r0, sl
   3e424:	mov	r1, r8
   3e428:	mov	r2, #4
   3e42c:	bl	13558 <message@@Base>
   3e430:	cmp	r0, #0
   3e434:	beq	3e340 <learnMode@@Base+0x50>
   3e438:	mov	r0, r5
   3e43c:	bl	1ebec <restartTimePeriod@@Base>
   3e440:	mov	r0, r4
   3e444:	mov	r1, r7
   3e448:	bl	3d9a4 <drainBrailleOutput@@Base>
   3e44c:	mov	r0, r5
   3e450:	mov	r1, #0
   3e454:	bl	1ebf8 <afterTimePeriod@@Base>
   3e458:	cmp	r0, #0
   3e45c:	beq	3e3b4 <learnMode@@Base+0xc4>
   3e460:	ldr	r1, [pc, #76]	; 3e4b4 <learnMode@@Base+0x1c4>
   3e464:	mov	r2, #5
   3e468:	mov	r0, #0
   3e46c:	add	r1, pc, r1
   3e470:	bl	f9bc <dcgettext@plt>
   3e474:	mov	r2, #0
   3e478:	mov	r1, r0
   3e47c:	ldr	r0, [pc, #52]	; 3e4b8 <learnMode@@Base+0x1c8>
   3e480:	add	r0, pc, r0
   3e484:	bl	13558 <message@@Base>
   3e488:	b	3e340 <learnMode@@Base+0x50>
   3e48c:	mov	r0, #1
   3e490:	b	3e340 <learnMode@@Base+0x50>
   3e494:	bl	f950 <__stack_chk_fail@plt>
   3e498:	andeq	r4, r3, r8, ror r7
   3e49c:			; <UNDEFINED> instruction: 0x000003b4
   3e4a0:	andeq	fp, r1, r4, asr #5
   3e4a4:	andeq	fp, r1, r8, ror r2
   3e4a8:	andeq	fp, r1, ip, asr #4
   3e4ac:	andeq	fp, r1, ip, asr r2
   3e4b0:	andeq	fp, r1, ip, lsr #4
   3e4b4:	andeq	fp, r1, r8, lsr #3
   3e4b8:	andeq	fp, r1, ip, asr r1

0003e4bc <cellsHaveChanged@@Base>:
   3e4bc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   3e4c0:	mov	r6, r0
   3e4c4:	ldr	lr, [sp, #36]	; 0x24
   3e4c8:	mov	r8, r1
   3e4cc:	mov	r5, r2
   3e4d0:	mov	r9, r3
   3e4d4:	cmp	lr, #0
   3e4d8:	ldr	r7, [sp, #32]
   3e4dc:	beq	3e518 <cellsHaveChanged@@Base+0x5c>
   3e4e0:	ldr	r3, [lr]
   3e4e4:	cmp	r3, #0
   3e4e8:	beq	3e518 <cellsHaveChanged@@Base+0x5c>
   3e4ec:	cmp	r9, #0
   3e4f0:	mov	ip, #0
   3e4f4:	str	ip, [lr]
   3e4f8:	beq	3e618 <cellsHaveChanged@@Base+0x15c>
   3e4fc:	str	ip, [r9]
   3e500:	cmp	r7, #0
   3e504:	strne	r5, [r7]
   3e508:	rsb	r2, ip, r5
   3e50c:	bl	fb24 <memcpy@plt>
   3e510:	mov	r0, #1
   3e514:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3e518:	mov	r0, r6
   3e51c:	mov	r1, r8
   3e520:	mov	r2, r5
   3e524:	bl	fd10 <memcmp@plt>
   3e528:	cmp	r0, #0
   3e52c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   3e530:	cmp	r7, #0
   3e534:	beq	3e594 <cellsHaveChanged@@Base+0xd8>
   3e538:	cmp	r5, #0
   3e53c:	beq	3e578 <cellsHaveChanged@@Base+0xbc>
   3e540:	sub	ip, r5, #1
   3e544:	ldrb	r2, [r6, ip]
   3e548:	ldrb	r3, [r8, ip]
   3e54c:	cmp	r2, r3
   3e550:	beq	3e56c <cellsHaveChanged@@Base+0xb0>
   3e554:	b	3e5fc <cellsHaveChanged@@Base+0x140>
   3e558:	ldrb	r1, [r6, r2]
   3e55c:	ldrb	r3, [r8, r2]
   3e560:	cmp	r1, r3
   3e564:	bne	3e600 <cellsHaveChanged@@Base+0x144>
   3e568:	mov	ip, r2
   3e56c:	cmp	ip, #0
   3e570:	sub	r2, ip, #1
   3e574:	bne	3e558 <cellsHaveChanged@@Base+0x9c>
   3e578:	cmp	r9, #0
   3e57c:	movne	r5, #0
   3e580:	beq	3e640 <cellsHaveChanged@@Base+0x184>
   3e584:	mov	r1, r8
   3e588:	mov	r0, r6
   3e58c:	mov	ip, r5
   3e590:	b	3e4fc <cellsHaveChanged@@Base+0x40>
   3e594:	cmp	r9, #0
   3e598:	beq	3e620 <cellsHaveChanged@@Base+0x164>
   3e59c:	cmp	r5, #0
   3e5a0:	beq	3e584 <cellsHaveChanged@@Base+0xc8>
   3e5a4:	ldrb	r2, [r6]
   3e5a8:	ldrb	r3, [r8]
   3e5ac:	cmp	r2, r3
   3e5b0:	bne	3e630 <cellsHaveChanged@@Base+0x174>
   3e5b4:	add	r4, r6, #1
   3e5b8:	add	lr, r8, #1
   3e5bc:	mov	ip, #0
   3e5c0:	b	3e5d4 <cellsHaveChanged@@Base+0x118>
   3e5c4:	ldrb	r2, [r0]
   3e5c8:	ldrb	r3, [r1]
   3e5cc:	cmp	r2, r3
   3e5d0:	bne	3e4fc <cellsHaveChanged@@Base+0x40>
   3e5d4:	add	ip, ip, #1
   3e5d8:	mov	r0, r4
   3e5dc:	cmp	ip, r5
   3e5e0:	mov	r1, lr
   3e5e4:	add	r4, r4, #1
   3e5e8:	add	lr, lr, #1
   3e5ec:	bne	3e5c4 <cellsHaveChanged@@Base+0x108>
   3e5f0:	add	r0, r6, ip
   3e5f4:	add	r1, r8, ip
   3e5f8:	b	3e4fc <cellsHaveChanged@@Base+0x40>
   3e5fc:	mov	ip, r5
   3e600:	cmp	r9, #0
   3e604:	movne	r5, ip
   3e608:	bne	3e5a4 <cellsHaveChanged@@Base+0xe8>
   3e60c:	mov	r1, r8
   3e610:	mov	r0, r6
   3e614:	mov	r5, ip
   3e618:	mov	ip, r9
   3e61c:	b	3e500 <cellsHaveChanged@@Base+0x44>
   3e620:	mov	r1, r8
   3e624:	mov	r0, r6
   3e628:	mov	ip, r9
   3e62c:	b	3e508 <cellsHaveChanged@@Base+0x4c>
   3e630:	mov	r1, r8
   3e634:	mov	r0, r6
   3e638:	mov	ip, #0
   3e63c:	b	3e4fc <cellsHaveChanged@@Base+0x40>
   3e640:	mov	ip, r9
   3e644:	mov	r1, r8
   3e648:	mov	r0, r6
   3e64c:	mov	r5, r9
   3e650:	b	3e500 <cellsHaveChanged@@Base+0x44>

0003e654 <textHasChanged@@Base>:
   3e654:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3e658:	mov	r7, r0
   3e65c:	ldr	lr, [sp, #36]	; 0x24
   3e660:	mov	r9, r1
   3e664:	mov	r6, r2
   3e668:	mov	sl, r3
   3e66c:	cmp	lr, #0
   3e670:	ldr	r8, [sp, #32]
   3e674:	beq	3e6b4 <textHasChanged@@Base+0x60>
   3e678:	ldr	r3, [lr]
   3e67c:	cmp	r3, #0
   3e680:	beq	3e6b4 <textHasChanged@@Base+0x60>
   3e684:	cmp	sl, #0
   3e688:	mov	ip, #0
   3e68c:	str	ip, [lr]
   3e690:	movne	r2, ip
   3e694:	beq	3e7c4 <textHasChanged@@Base+0x170>
   3e698:	str	r2, [sl]
   3e69c:	cmp	r8, #0
   3e6a0:	strne	r6, [r8]
   3e6a4:	rsb	r2, r2, r6
   3e6a8:	bl	f620 <wmemcpy@plt>
   3e6ac:	mov	r0, #1
   3e6b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e6b4:	mov	r0, r7
   3e6b8:	mov	r1, r9
   3e6bc:	mov	r2, r6
   3e6c0:	bl	f770 <wmemcmp@plt>
   3e6c4:	cmp	r0, #0
   3e6c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e6cc:	cmp	r8, #0
   3e6d0:	beq	3e73c <textHasChanged@@Base+0xe8>
   3e6d4:	cmp	r6, #0
   3e6d8:	beq	3e720 <textHasChanged@@Base+0xcc>
   3e6dc:	sub	ip, r6, #1
   3e6e0:	ldr	r1, [r7, ip, lsl #2]
   3e6e4:	lsl	r3, ip, #2
   3e6e8:	ldr	r2, [r9, ip, lsl #2]
   3e6ec:	cmp	r1, r2
   3e6f0:	bne	3e7a8 <textHasChanged@@Base+0x154>
   3e6f4:	add	r2, r7, r3
   3e6f8:	add	r3, r9, r3
   3e6fc:	b	3e714 <textHasChanged@@Base+0xc0>
   3e700:	ldr	lr, [r2, #-4]!
   3e704:	ldr	r0, [r3, #-4]!
   3e708:	cmp	lr, r0
   3e70c:	bne	3e7ac <textHasChanged@@Base+0x158>
   3e710:	mov	ip, r1
   3e714:	cmp	ip, #0
   3e718:	sub	r1, ip, #1
   3e71c:	bne	3e700 <textHasChanged@@Base+0xac>
   3e720:	cmp	sl, #0
   3e724:	movne	r6, #0
   3e728:	beq	3e7ec <textHasChanged@@Base+0x198>
   3e72c:	mov	r1, r9
   3e730:	mov	r0, r7
   3e734:	mov	r2, r6
   3e738:	b	3e698 <textHasChanged@@Base+0x44>
   3e73c:	cmp	sl, #0
   3e740:	beq	3e7cc <textHasChanged@@Base+0x178>
   3e744:	cmp	r6, #0
   3e748:	beq	3e72c <textHasChanged@@Base+0xd8>
   3e74c:	ldr	r2, [r7]
   3e750:	ldr	r3, [r9]
   3e754:	cmp	r2, r3
   3e758:	bne	3e7dc <textHasChanged@@Base+0x188>
   3e75c:	add	r4, r7, #4
   3e760:	add	lr, r9, #4
   3e764:	mov	r2, #0
   3e768:	b	3e77c <textHasChanged@@Base+0x128>
   3e76c:	ldr	ip, [r0]
   3e770:	ldr	r3, [r1]
   3e774:	cmp	ip, r3
   3e778:	bne	3e698 <textHasChanged@@Base+0x44>
   3e77c:	add	r2, r2, #1
   3e780:	mov	r0, r4
   3e784:	cmp	r2, r6
   3e788:	mov	r1, lr
   3e78c:	add	r4, r4, #4
   3e790:	add	lr, lr, #4
   3e794:	bne	3e76c <textHasChanged@@Base+0x118>
   3e798:	lsl	r5, r2, #2
   3e79c:	add	r0, r7, r5
   3e7a0:	add	r1, r9, r5
   3e7a4:	b	3e698 <textHasChanged@@Base+0x44>
   3e7a8:	mov	ip, r6
   3e7ac:	cmp	sl, #0
   3e7b0:	movne	r6, ip
   3e7b4:	bne	3e74c <textHasChanged@@Base+0xf8>
   3e7b8:	mov	r1, r9
   3e7bc:	mov	r0, r7
   3e7c0:	mov	r6, ip
   3e7c4:	mov	r2, sl
   3e7c8:	b	3e69c <textHasChanged@@Base+0x48>
   3e7cc:	mov	r1, r9
   3e7d0:	mov	r0, r7
   3e7d4:	mov	r2, sl
   3e7d8:	b	3e6a4 <textHasChanged@@Base+0x50>
   3e7dc:	mov	r1, r9
   3e7e0:	mov	r0, r7
   3e7e4:	mov	r2, #0
   3e7e8:	b	3e698 <textHasChanged@@Base+0x44>
   3e7ec:	mov	r2, sl
   3e7f0:	mov	r1, r9
   3e7f4:	mov	r0, r7
   3e7f8:	mov	r6, sl
   3e7fc:	b	3e69c <textHasChanged@@Base+0x48>

0003e800 <cursorHasChanged@@Base>:
   3e800:	cmp	r2, #0
   3e804:	beq	3e81c <cursorHasChanged@@Base+0x1c>
   3e808:	ldr	r3, [r2]
   3e80c:	cmp	r3, #0
   3e810:	movne	r3, #0
   3e814:	strne	r3, [r2]
   3e818:	bne	3e828 <cursorHasChanged@@Base+0x28>
   3e81c:	ldr	r3, [r0]
   3e820:	cmp	r3, r1
   3e824:	beq	3e834 <cursorHasChanged@@Base+0x34>
   3e828:	str	r1, [r0]
   3e82c:	mov	r0, #1
   3e830:	bx	lr
   3e834:	mov	r0, #0
   3e838:	bx	lr

0003e83c <makeTranslationTable@@Base>:
   3e83c:	ldr	r3, [pc, #76]	; 3e890 <makeTranslationTable@@Base+0x54>
   3e840:	mov	ip, #0
   3e844:	ldr	r2, [pc, #72]	; 3e894 <makeTranslationTable@@Base+0x58>
   3e848:	add	r3, pc, r3
   3e84c:	push	{r4, r5}
   3e850:	ldr	r5, [r3, r2]
   3e854:	mov	r3, #0
   3e858:	mov	r4, r3
   3e85c:	ldrb	r2, [r5, r3]
   3e860:	tst	r2, ip
   3e864:	ldrbne	r2, [r0, r3]
   3e868:	add	r3, r3, #1
   3e86c:	orrne	r4, r4, r2
   3e870:	cmp	r3, #8
   3e874:	bne	3e85c <makeTranslationTable@@Base+0x20>
   3e878:	strb	r4, [r1, ip]
   3e87c:	add	ip, ip, #1
   3e880:	cmp	ip, #256	; 0x100
   3e884:	bne	3e854 <makeTranslationTable@@Base+0x18>
   3e888:	pop	{r4, r5}
   3e88c:	bx	lr
   3e890:	andeq	r4, r3, r0, lsr r2
   3e894:	ldrdeq	r0, [r0], -ip

0003e898 <reverseTranslationTable@@Base>:
   3e898:	push	{r3, r4, r5, lr}
   3e89c:	mov	r4, r1
   3e8a0:	mov	r5, r0
   3e8a4:	mov	r1, #0
   3e8a8:	mov	r0, r4
   3e8ac:	mov	r2, #256	; 0x100
   3e8b0:	bl	f6b0 <memset@plt>
   3e8b4:	mov	r3, #255	; 0xff
   3e8b8:	ldrb	r2, [r5, r3]
   3e8bc:	strb	r3, [r4, r2]
   3e8c0:	subs	r3, r3, #1
   3e8c4:	bcs	3e8b8 <reverseTranslationTable@@Base+0x20>
   3e8c8:	pop	{r3, r4, r5, pc}

0003e8cc <setOutputTable@@Base>:
   3e8cc:	ldr	r3, [pc, #8]	; 3e8dc <setOutputTable@@Base+0x10>
   3e8d0:	add	r3, pc, r3
   3e8d4:	str	r0, [r3, #32]
   3e8d8:	bx	lr
   3e8dc:	andeq	r5, r3, ip, lsl #10

0003e8e0 <makeOutputTable@@Base>:
   3e8e0:	push	{r3, r4, r5, lr}
   3e8e4:	mov	r2, #8
   3e8e8:	ldr	r3, [pc, #76]	; 3e93c <makeOutputTable@@Base+0x5c>
   3e8ec:	mov	r4, r0
   3e8f0:	ldr	r1, [pc, #72]	; 3e940 <makeOutputTable@@Base+0x60>
   3e8f4:	add	r3, pc, r3
   3e8f8:	ldr	r1, [r3, r1]
   3e8fc:	bl	fd10 <memcmp@plt>
   3e900:	cmp	r0, #0
   3e904:	bne	3e918 <makeOutputTable@@Base+0x38>
   3e908:	ldr	r2, [pc, #52]	; 3e944 <makeOutputTable@@Base+0x64>
   3e90c:	add	r2, pc, r2
   3e910:	str	r0, [r2, #32]
   3e914:	pop	{r3, r4, r5, pc}
   3e918:	ldr	r3, [pc, #40]	; 3e948 <makeOutputTable@@Base+0x68>
   3e91c:	mov	r0, r4
   3e920:	add	r3, pc, r3
   3e924:	add	r5, r3, #36	; 0x24
   3e928:	mov	r4, r3
   3e92c:	mov	r1, r5
   3e930:	bl	3e83c <makeTranslationTable@@Base>
   3e934:	str	r5, [r4, #32]
   3e938:	pop	{r3, r4, r5, pc}
   3e93c:	andeq	r4, r3, r4, lsl #3
   3e940:	ldrdeq	r0, [r0], -ip
   3e944:	ldrdeq	r5, [r3], -r0
   3e948:			; <UNDEFINED> instruction: 0x000354bc

0003e94c <translateOutputCells@@Base>:
   3e94c:	push	{r4, r5}
   3e950:	mov	r3, r0
   3e954:	ldr	r4, [pc, #80]	; 3e9ac <translateOutputCells@@Base+0x60>
   3e958:	mov	ip, r1
   3e95c:	add	r4, pc, r4
   3e960:	ldr	r4, [r4, #32]
   3e964:	cmp	r4, #0
   3e968:	beq	3e998 <translateOutputCells@@Base+0x4c>
   3e96c:	cmp	r2, #0
   3e970:	beq	3e98c <translateOutputCells@@Base+0x40>
   3e974:	add	r2, r0, r2
   3e978:	ldrb	r1, [ip], #1
   3e97c:	ldrb	r1, [r4, r1]
   3e980:	strb	r1, [r3], #1
   3e984:	cmp	r3, r2
   3e988:	bne	3e978 <translateOutputCells@@Base+0x2c>
   3e98c:	mov	r0, r3
   3e990:	pop	{r4, r5}
   3e994:	bx	lr
   3e998:	cmp	r0, r1
   3e99c:	addeq	r0, r0, r2
   3e9a0:	beq	3e990 <translateOutputCells@@Base+0x44>
   3e9a4:	pop	{r4, r5}
   3e9a8:	b	fbf0 <mempcpy@plt>
   3e9ac:	andeq	r5, r3, r0, lsl #9

0003e9b0 <translateOutputCell@@Base>:
   3e9b0:	ldr	r3, [pc, #16]	; 3e9c8 <translateOutputCell@@Base+0x18>
   3e9b4:	add	r3, pc, r3
   3e9b8:	ldr	r3, [r3, #32]
   3e9bc:	cmp	r3, #0
   3e9c0:	ldrbne	r0, [r3, r0]
   3e9c4:	bx	lr
   3e9c8:	andeq	r5, r3, r8, lsr #8

0003e9cc <makeInputTable@@Base>:
   3e9cc:	push	{r3, r4, r5, lr}
   3e9d0:	ldr	r4, [pc, #36]	; 3e9fc <makeInputTable@@Base+0x30>
   3e9d4:	add	r4, pc, r4
   3e9d8:	ldr	r0, [r4, #32]
   3e9dc:	cmp	r0, #0
   3e9e0:	streq	r0, [r4, #548]	; 0x224
   3e9e4:	popeq	{r3, r4, r5, pc}
   3e9e8:	add	r5, r4, #292	; 0x124
   3e9ec:	mov	r1, r5
   3e9f0:	bl	3e898 <reverseTranslationTable@@Base>
   3e9f4:	str	r5, [r4, #548]	; 0x224
   3e9f8:	pop	{r3, r4, r5, pc}
   3e9fc:	andeq	r5, r3, r8, lsl #8

0003ea00 <translateInputCells@@Base>:
   3ea00:	push	{r4, r5}
   3ea04:	mov	r3, r0
   3ea08:	ldr	r4, [pc, #80]	; 3ea60 <translateInputCells@@Base+0x60>
   3ea0c:	mov	ip, r1
   3ea10:	add	r4, pc, r4
   3ea14:	ldr	r4, [r4, #548]	; 0x224
   3ea18:	cmp	r4, #0
   3ea1c:	beq	3ea4c <translateInputCells@@Base+0x4c>
   3ea20:	cmp	r2, #0
   3ea24:	beq	3ea40 <translateInputCells@@Base+0x40>
   3ea28:	add	r2, r0, r2
   3ea2c:	ldrb	r1, [ip], #1
   3ea30:	ldrb	r1, [r4, r1]
   3ea34:	strb	r1, [r3], #1
   3ea38:	cmp	r3, r2
   3ea3c:	bne	3ea2c <translateInputCells@@Base+0x2c>
   3ea40:	mov	r0, r3
   3ea44:	pop	{r4, r5}
   3ea48:	bx	lr
   3ea4c:	cmp	r0, r1
   3ea50:	addeq	r0, r0, r2
   3ea54:	beq	3ea44 <translateInputCells@@Base+0x44>
   3ea58:	pop	{r4, r5}
   3ea5c:	b	fbf0 <mempcpy@plt>
   3ea60:	andeq	r5, r3, ip, asr #7

0003ea64 <translateInputCell@@Base>:
   3ea64:	ldr	r3, [pc, #16]	; 3ea7c <translateInputCell@@Base+0x18>
   3ea68:	add	r3, pc, r3
   3ea6c:	ldr	r3, [r3, #548]	; 0x224
   3ea70:	cmp	r3, #0
   3ea74:	ldrbne	r0, [r3, r0]
   3ea78:	bx	lr
   3ea7c:	andeq	r5, r3, r4, ror r3

0003ea80 <lowerDigit@@Base>:
   3ea80:	tst	r0, #1
   3ea84:	mov	r3, r0
   3ea88:	movne	r0, #4
   3ea8c:	moveq	r0, #0
   3ea90:	tst	r3, #2
   3ea94:	orrne	r0, r0, #64	; 0x40
   3ea98:	uxtbne	r0, r0
   3ea9c:	tst	r3, #8
   3eaa0:	orrne	r0, r0, #32
   3eaa4:	tst	r3, #16
   3eaa8:	orrne	r0, r0, #128	; 0x80
   3eaac:	bx	lr

0003eab0 <landscapeNumber@@Base>:
   3eab0:	movw	r2, #26215	; 0x6667
   3eab4:	movt	r2, #26214	; 0x6666
   3eab8:	ldr	r1, [pc, #76]	; 3eb0c <landscapeNumber@@Base+0x5c>
   3eabc:	smull	r3, ip, r2, r0
   3eac0:	asr	r3, r0, #31
   3eac4:	push	{r4, lr}
   3eac8:	add	r1, pc, r1
   3eacc:	ldr	lr, [pc, #60]	; 3eb10 <landscapeNumber@@Base+0x60>
   3ead0:	rsb	r3, r3, ip, asr #2
   3ead4:	ldr	r1, [r1, lr]
   3ead8:	smull	ip, r2, r2, r3
   3eadc:	asr	ip, r3, #31
   3eae0:	add	lr, r3, r3, lsl #2
   3eae4:	sub	r0, r0, lr, lsl #1
   3eae8:	rsb	r2, ip, r2, asr #2
   3eaec:	ldrb	r0, [r1, r0]
   3eaf0:	add	r2, r2, r2, lsl #2
   3eaf4:	sub	r3, r3, r2, lsl #1
   3eaf8:	ldrb	r4, [r1, r3]
   3eafc:	bl	3ea80 <lowerDigit@@Base>
   3eb00:	orr	r0, r0, r4
   3eb04:	uxtb	r0, r0
   3eb08:	pop	{r4, pc}
   3eb0c:			; <UNDEFINED> instruction: 0x00033fb0
   3eb10:	ldrdeq	r0, [r0], -r8

0003eb14 <landscapeFlag@@Base>:
   3eb14:	movw	r3, #26215	; 0x6667
   3eb18:	movt	r3, #26214	; 0x6666
   3eb1c:	ldr	r2, [pc, #72]	; 3eb6c <landscapeFlag@@Base+0x58>
   3eb20:	cmp	r1, #0
   3eb24:	smull	ip, r3, r3, r0
   3eb28:	asr	ip, r0, #31
   3eb2c:	push	{r4, lr}
   3eb30:	add	r2, pc, r2
   3eb34:	ldr	r4, [pc, #52]	; 3eb70 <landscapeFlag@@Base+0x5c>
   3eb38:	rsb	r3, ip, r3, asr #2
   3eb3c:	ldr	r2, [r2, r4]
   3eb40:	add	r3, r3, r3, lsl #2
   3eb44:	sub	r0, r0, r3, lsl #1
   3eb48:	ldrb	r4, [r2, r0]
   3eb4c:	bne	3eb58 <landscapeFlag@@Base+0x44>
   3eb50:	mov	r0, r4
   3eb54:	pop	{r4, pc}
   3eb58:	mov	r0, #27
   3eb5c:	bl	3ea80 <lowerDigit@@Base>
   3eb60:	orr	r0, r0, r4
   3eb64:	uxtb	r0, r0
   3eb68:	pop	{r4, pc}
   3eb6c:	andeq	r3, r3, r8, asr #30
   3eb70:	ldrdeq	r0, [r0], -r8

0003eb74 <seascapeNumber@@Base>:
   3eb74:	movw	r3, #26215	; 0x6667
   3eb78:	movt	r3, #26214	; 0x6666
   3eb7c:	push	{r4, r5, r6, lr}
   3eb80:	mov	r5, r0
   3eb84:	smull	r1, r4, r3, r0
   3eb88:	ldr	r2, [pc, #68]	; 3ebd4 <seascapeNumber@@Base+0x60>
   3eb8c:	asr	r1, r0, #31
   3eb90:	ldr	r0, [pc, #64]	; 3ebd8 <seascapeNumber@@Base+0x64>
   3eb94:	add	r2, pc, r2
   3eb98:	ldr	r6, [r2, r0]
   3eb9c:	rsb	r4, r1, r4, asr #2
   3eba0:	smull	r2, r3, r3, r4
   3eba4:	asr	r2, r4, #31
   3eba8:	rsb	r3, r2, r3, asr #2
   3ebac:	add	r3, r3, r3, lsl #2
   3ebb0:	sub	r3, r4, r3, lsl #1
   3ebb4:	add	r4, r4, r4, lsl #2
   3ebb8:	ldrb	r0, [r6, r3]
   3ebbc:	sub	r5, r5, r4, lsl #1
   3ebc0:	bl	3ea80 <lowerDigit@@Base>
   3ebc4:	ldrb	r3, [r6, r5]
   3ebc8:	orr	r0, r0, r3
   3ebcc:	uxtb	r0, r0
   3ebd0:	pop	{r4, r5, r6, pc}
   3ebd4:	andeq	r3, r3, r4, ror #29
   3ebd8:	andeq	r0, r0, ip, lsr #10

0003ebdc <seascapeFlag@@Base>:
   3ebdc:	movw	r3, #26215	; 0x6667
   3ebe0:	movt	r3, #26214	; 0x6666
   3ebe4:	ldr	r2, [pc, #60]	; 3ec28 <seascapeFlag@@Base+0x4c>
   3ebe8:	smull	ip, r3, r3, r0
   3ebec:	asr	ip, r0, #31
   3ebf0:	push	{r4, lr}
   3ebf4:	add	r2, pc, r2
   3ebf8:	ldr	lr, [pc, #44]	; 3ec2c <seascapeFlag@@Base+0x50>
   3ebfc:	mov	r4, r1
   3ec00:	rsb	r3, ip, r3, asr #2
   3ec04:	ldr	r2, [r2, lr]
   3ec08:	add	r3, r3, r3, lsl #2
   3ec0c:	sub	r0, r0, r3, lsl #1
   3ec10:	ldrb	r0, [r2, r0]
   3ec14:	bl	3ea80 <lowerDigit@@Base>
   3ec18:	cmp	r4, #0
   3ec1c:	orrne	r0, r0, #27
   3ec20:	uxtbne	r0, r0
   3ec24:	pop	{r4, pc}
   3ec28:	andeq	r3, r3, r4, lsl #29
   3ec2c:	andeq	r0, r0, ip, lsr #10

0003ec30 <portraitNumber@@Base>:
   3ec30:	movw	r2, #26215	; 0x6667
   3ec34:	movt	r2, #26214	; 0x6666
   3ec38:	ldr	r1, [pc, #76]	; 3ec8c <portraitNumber@@Base+0x5c>
   3ec3c:	smull	r3, ip, r2, r0
   3ec40:	asr	r3, r0, #31
   3ec44:	push	{r4, lr}
   3ec48:	add	r1, pc, r1
   3ec4c:	ldr	lr, [pc, #60]	; 3ec90 <portraitNumber@@Base+0x60>
   3ec50:	rsb	r3, r3, ip, asr #2
   3ec54:	ldr	r1, [r1, lr]
   3ec58:	smull	ip, r2, r2, r3
   3ec5c:	asr	ip, r3, #31
   3ec60:	add	lr, r3, r3, lsl #2
   3ec64:	sub	r0, r0, lr, lsl #1
   3ec68:	rsb	r2, ip, r2, asr #2
   3ec6c:	ldrb	r0, [r1, r0]
   3ec70:	add	r2, r2, r2, lsl #2
   3ec74:	sub	r3, r3, r2, lsl #1
   3ec78:	ldrb	r4, [r1, r3]
   3ec7c:	bl	3ea80 <lowerDigit@@Base>
   3ec80:	orr	r0, r0, r4
   3ec84:	uxtb	r0, r0
   3ec88:	pop	{r4, pc}
   3ec8c:	andeq	r3, r3, r0, lsr lr
   3ec90:	ldrdeq	r0, [r0], -r8

0003ec94 <portraitFlag@@Base>:
   3ec94:	movw	r3, #26215	; 0x6667
   3ec98:	movt	r3, #26214	; 0x6666
   3ec9c:	ldr	r2, [pc, #60]	; 3ece0 <portraitFlag@@Base+0x4c>
   3eca0:	smull	ip, r3, r3, r0
   3eca4:	asr	ip, r0, #31
   3eca8:	push	{r4, lr}
   3ecac:	add	r2, pc, r2
   3ecb0:	ldr	lr, [pc, #44]	; 3ece4 <portraitFlag@@Base+0x50>
   3ecb4:	mov	r4, r1
   3ecb8:	rsb	r3, ip, r3, asr #2
   3ecbc:	ldr	r2, [r2, lr]
   3ecc0:	add	r3, r3, r3, lsl #2
   3ecc4:	sub	r0, r0, r3, lsl #1
   3ecc8:	ldrb	r0, [r2, r0]
   3eccc:	bl	3ea80 <lowerDigit@@Base>
   3ecd0:	cmp	r4, #0
   3ecd4:	orrne	r0, r0, #27
   3ecd8:	uxtbne	r0, r0
   3ecdc:	pop	{r4, pc}
   3ece0:	andeq	r3, r3, ip, asr #27
   3ece4:	ldrdeq	r0, [r0], -r8

0003ece8 <setBrailleFirmness@@Base>:
   3ece8:	push	{r3, r4, r5, lr}
   3ecec:	mov	r4, r0
   3ecf0:	ldr	r0, [r0, #56]	; 0x38
   3ecf4:	mov	r5, r1
   3ecf8:	cmp	r0, #0
   3ecfc:	popeq	{r3, r4, r5, pc}
   3ed00:	ldr	r1, [pc, #32]	; 3ed28 <setBrailleFirmness@@Base+0x40>
   3ed04:	mov	r0, #7
   3ed08:	mov	r2, r5
   3ed0c:	add	r1, pc, r1
   3ed10:	bl	1c634 <logMessage@@Base>
   3ed14:	mov	r1, r5
   3ed18:	ldr	r3, [r4, #56]	; 0x38
   3ed1c:	mov	r0, r4
   3ed20:	blx	r3
   3ed24:	pop	{r3, r4, r5, pc}
   3ed28:	andeq	sl, r1, r0, lsl r9

0003ed2c <setBrailleSensitivity@@Base>:
   3ed2c:	push	{r3, r4, r5, lr}
   3ed30:	mov	r4, r0
   3ed34:	ldr	r0, [r0, #60]	; 0x3c
   3ed38:	mov	r5, r1
   3ed3c:	cmp	r0, #0
   3ed40:	popeq	{r3, r4, r5, pc}
   3ed44:	ldr	r1, [pc, #32]	; 3ed6c <setBrailleSensitivity@@Base+0x40>
   3ed48:	mov	r0, #7
   3ed4c:	mov	r2, r5
   3ed50:	add	r1, pc, r1
   3ed54:	bl	1c634 <logMessage@@Base>
   3ed58:	mov	r1, r5
   3ed5c:	ldr	r3, [r4, #60]	; 0x3c
   3ed60:	mov	r0, r4
   3ed64:	blx	r3
   3ed68:	pop	{r3, r4, r5, pc}
   3ed6c:	andeq	sl, r1, ip, ror #17
   3ed70:	ldr	r0, [r0]
   3ed74:	b	3fe70 <serialSetParameters@@Base>
   3ed78:	push	{r3, lr}
   3ed7c:	ldr	r0, [r0]
   3ed80:	bl	40744 <serialCloseDevice@@Base>
   3ed84:	mov	r0, #1
   3ed88:	pop	{r3, pc}
   3ed8c:	ldr	r0, [r0]
   3ed90:	b	464d8 <bthReadData@@Base>
   3ed94:	ldr	r0, [r0]
   3ed98:	b	464cc <bthAwaitInput@@Base>
   3ed9c:	ldr	r0, [r0]
   3eda0:	b	464e4 <bthWriteData@@Base>
   3eda4:	push	{r3, lr}
   3eda8:	ldr	r0, [r0]
   3edac:	bl	462a4 <bthCloseConnection@@Base>
   3edb0:	mov	r0, #1
   3edb4:	pop	{r3, pc}
   3edb8:	push	{r4, lr}
   3edbc:	sub	sp, sp, #8
   3edc0:	ldr	ip, [r0]
   3edc4:	mov	r4, r2
   3edc8:	ldr	lr, [sp, #16]
   3edcc:	mov	r2, r1
   3edd0:	ldr	r0, [ip, #20]
   3edd4:	ldrb	r1, [ip, #7]
   3edd8:	str	r3, [sp]
   3eddc:	mov	r3, r4
   3ede0:	str	lr, [sp, #4]
   3ede4:	bl	42f48 <usbHidGetFeature@@Base>
   3ede8:	add	sp, sp, #8
   3edec:	pop	{r4, pc}
   3edf0:	push	{r4, lr}
   3edf4:	sub	sp, sp, #8
   3edf8:	ldr	ip, [r0]
   3edfc:	mov	r4, r2
   3ee00:	ldr	lr, [sp, #16]
   3ee04:	mov	r2, r1
   3ee08:	ldr	r0, [ip, #20]
   3ee0c:	ldrb	r1, [ip, #7]
   3ee10:	str	r3, [sp]
   3ee14:	mov	r3, r4
   3ee18:	str	lr, [sp, #4]
   3ee1c:	bl	42f88 <usbHidSetFeature@@Base>
   3ee20:	add	sp, sp, #8
   3ee24:	pop	{r4, pc}
   3ee28:	push	{r4, lr}
   3ee2c:	sub	sp, sp, #8
   3ee30:	ldr	ip, [r0]
   3ee34:	mov	r4, r2
   3ee38:	ldr	lr, [sp, #16]
   3ee3c:	mov	r2, r1
   3ee40:	ldr	r0, [ip, #20]
   3ee44:	ldrb	r1, [ip, #7]
   3ee48:	str	r3, [sp]
   3ee4c:	mov	r3, r4
   3ee50:	str	lr, [sp, #4]
   3ee54:	bl	42ec8 <usbHidGetReport@@Base>
   3ee58:	add	sp, sp, #8
   3ee5c:	pop	{r4, pc}
   3ee60:	push	{r4, lr}
   3ee64:	sub	sp, sp, #8
   3ee68:	ldr	ip, [r0]
   3ee6c:	mov	r4, r2
   3ee70:	ldr	lr, [sp, #16]
   3ee74:	mov	r2, r1
   3ee78:	ldr	r0, [ip, #20]
   3ee7c:	ldrb	r1, [ip, #7]
   3ee80:	str	r3, [sp]
   3ee84:	mov	r3, r4
   3ee88:	str	lr, [sp, #4]
   3ee8c:	bl	42f08 <usbHidSetReport@@Base>
   3ee90:	add	sp, sp, #8
   3ee94:	pop	{r4, pc}
   3ee98:	push	{r4, r5, lr}
   3ee9c:	mov	r5, r1
   3eea0:	ldr	lr, [pc, #104]	; 3ef10 <setBrailleSensitivity@@Base+0x1e4>
   3eea4:	sub	sp, sp, #20
   3eea8:	ldr	r1, [pc, #100]	; 3ef14 <setBrailleSensitivity@@Base+0x1e8>
   3eeac:	add	r3, sp, #8
   3eeb0:	add	lr, pc, lr
   3eeb4:	ldr	ip, [r0]
   3eeb8:	ldr	r4, [lr, r1]
   3eebc:	mov	r0, lr
   3eec0:	ldrb	r1, [ip, #7]
   3eec4:	ldr	r0, [ip, #20]
   3eec8:	ldr	ip, [r4]
   3eecc:	str	r2, [sp]
   3eed0:	mov	r2, #0
   3eed4:	str	ip, [sp, #12]
   3eed8:	bl	42b20 <usbHidGetItems@@Base>
   3eedc:	ldr	r3, [sp, #8]
   3eee0:	ldr	r2, [sp, #12]
   3eee4:	cmp	r3, #0
   3eee8:	strne	r3, [r5]
   3eeec:	movne	r3, #1
   3eef0:	strne	r0, [r5, #4]
   3eef4:	mov	r0, r3
   3eef8:	ldr	r3, [r4]
   3eefc:	cmp	r2, r3
   3ef00:	bne	3ef0c <setBrailleSensitivity@@Base+0x1e0>
   3ef04:	add	sp, sp, #20
   3ef08:	pop	{r4, r5, pc}
   3ef0c:	bl	f950 <__stack_chk_fail@plt>
   3ef10:	andeq	r3, r3, r8, asr #23
   3ef14:			; <UNDEFINED> instruction: 0x000003b4
   3ef18:	push	{r4, r5, r6, r7}
   3ef1c:	ldr	r0, [r0]
   3ef20:	ldrh	r7, [sp, #16]
   3ef24:	ldrh	r6, [sp, #20]
   3ef28:	ldrh	r4, [sp, #28]
   3ef2c:	ldr	r0, [r0, #20]
   3ef30:	str	r7, [sp, #16]
   3ef34:	str	r6, [sp, #20]
   3ef38:	str	r4, [sp, #28]
   3ef3c:	pop	{r4, r5, r6, r7}
   3ef40:	b	41294 <usbControlRead@@Base>
   3ef44:	push	{r4, r5, r6, r7}
   3ef48:	ldr	r0, [r0]
   3ef4c:	ldrh	r7, [sp, #16]
   3ef50:	ldrh	r6, [sp, #20]
   3ef54:	ldrh	r4, [sp, #28]
   3ef58:	ldr	r0, [r0, #20]
   3ef5c:	str	r7, [sp, #16]
   3ef60:	str	r6, [sp, #20]
   3ef64:	str	r4, [sp, #28]
   3ef68:	pop	{r4, r5, r6, r7}
   3ef6c:	b	412e4 <usbControlWrite@@Base>
   3ef70:	ldr	r3, [r0]
   3ef74:	ldr	r0, [r3, #20]
   3ef78:	b	443c0 <usbSetSerialParameters@@Base>
   3ef7c:	push	{r4, lr}
   3ef80:	sub	sp, sp, #8
   3ef84:	ldr	ip, [r0]
   3ef88:	mov	r4, r2
   3ef8c:	ldr	lr, [sp, #16]
   3ef90:	mov	r2, r1
   3ef94:	ldr	r0, [ip, #20]
   3ef98:	ldrb	r1, [ip, #9]
   3ef9c:	str	r3, [sp]
   3efa0:	mov	r3, r4
   3efa4:	str	lr, [sp, #4]
   3efa8:	bl	42848 <usbReapInput@@Base>
   3efac:	add	sp, sp, #8
   3efb0:	pop	{r4, pc}
   3efb4:	ldr	r3, [r0]
   3efb8:	mov	r2, r1
   3efbc:	ldr	r0, [r3, #20]
   3efc0:	ldrb	r1, [r3, #9]
   3efc4:	b	425f8 <usbAwaitInput@@Base>
   3efc8:	push	{r3, lr}
   3efcc:	ldr	r0, [r0]
   3efd0:	bl	42a50 <usbCloseChannel@@Base>
   3efd4:	mov	r0, #1
   3efd8:	pop	{r3, pc}
   3efdc:	ldr	r0, [r0]
   3efe0:	b	401c0 <serialReadData@@Base>
   3efe4:	ldr	r0, [r0]
   3efe8:	b	40190 <serialAwaitInput@@Base>
   3efec:	ldr	r0, [r0]
   3eff0:	b	402e4 <serialWriteData@@Base>
   3eff4:	ldr	ip, [pc, #104]	; 3f064 <setBrailleSensitivity@@Base+0x338>
   3eff8:	mov	r2, r1
   3effc:	push	{r4, r5, lr}
   3f000:	add	ip, pc, ip
   3f004:	ldr	lr, [pc, #92]	; 3f068 <setBrailleSensitivity@@Base+0x33c>
   3f008:	sub	sp, sp, #12
   3f00c:	ldm	r0, {r0, r1}
   3f010:	mov	r3, sp
   3f014:	ldr	r4, [ip, lr]
   3f018:	ldr	ip, [r4]
   3f01c:	str	ip, [sp, #4]
   3f020:	bl	42d94 <usbHidGetReportSize@@Base>
   3f024:	subs	r5, r0, #0
   3f028:	bne	3f058 <setBrailleSensitivity@@Base+0x32c>
   3f02c:	bl	fca4 <__errno_location@plt>
   3f030:	mov	r3, r5
   3f034:	mov	r2, #38	; 0x26
   3f038:	str	r2, [r0]
   3f03c:	ldr	r2, [sp, #4]
   3f040:	mov	r0, r3
   3f044:	ldr	r3, [r4]
   3f048:	cmp	r2, r3
   3f04c:	bne	3f060 <setBrailleSensitivity@@Base+0x334>
   3f050:	add	sp, sp, #12
   3f054:	pop	{r4, r5, pc}
   3f058:	ldr	r3, [sp]
   3f05c:	b	3f03c <setBrailleSensitivity@@Base+0x310>
   3f060:	bl	f950 <__stack_chk_fail@plt>
   3f064:	andeq	r3, r3, r8, ror sl
   3f068:			; <UNDEFINED> instruction: 0x000003b4
   3f06c:	push	{r4, r5, r6, lr}
   3f070:	mov	r6, r1
   3f074:	ldr	r4, [r0]
   3f078:	sub	sp, sp, #8
   3f07c:	mov	r5, r2
   3f080:	ldrb	r1, [r4, #10]
   3f084:	ldr	r0, [r4, #20]
   3f088:	cmp	r1, #0
   3f08c:	bne	3f0c8 <setBrailleSensitivity@@Base+0x39c>
   3f090:	bl	443b8 <usbGetSerialOperations@@Base>
   3f094:	cmp	r0, #0
   3f098:	beq	3f0e8 <setBrailleSensitivity@@Base+0x3bc>
   3f09c:	ldr	r3, [r0, #32]
   3f0a0:	cmp	r3, #0
   3f0a4:	beq	3f0e8 <setBrailleSensitivity@@Base+0x3bc>
   3f0a8:	ldr	r0, [r4, #20]
   3f0ac:	mov	r1, r6
   3f0b0:	mov	r2, r5
   3f0b4:	blx	r3
   3f0b8:	mov	r3, r0
   3f0bc:	mov	r0, r3
   3f0c0:	add	sp, sp, #8
   3f0c4:	pop	{r4, r5, r6, pc}
   3f0c8:	str	r3, [sp]
   3f0cc:	mov	r2, r6
   3f0d0:	mov	r3, r5
   3f0d4:	bl	45a98 <usbWriteEndpoint@@Base>
   3f0d8:	mov	r3, r0
   3f0dc:	mov	r0, r3
   3f0e0:	add	sp, sp, #8
   3f0e4:	pop	{r4, r5, r6, pc}
   3f0e8:	bl	fca4 <__errno_location@plt>
   3f0ec:	mov	r2, #38	; 0x26
   3f0f0:	mvn	r3, #0
   3f0f4:	str	r2, [r0]
   3f0f8:	b	3f0bc <setBrailleSensitivity@@Base+0x390>

0003f0fc <gioInitializeDescriptor@@Base>:
   3f0fc:	mov	r3, #0
   3f100:	mov	r1, #100	; 0x64
   3f104:	mov	r2, #1000	; 0x3e8
   3f108:	str	r3, [r0]
   3f10c:	str	r3, [r0, #4]
   3f110:	str	r3, [r0, #8]
   3f114:	str	r3, [r0, #16]
   3f118:	str	r3, [r0, #20]
   3f11c:	str	r3, [r0, #24]
   3f120:	str	r3, [r0, #28]
   3f124:	strb	r3, [r0, #40]	; 0x28
   3f128:	str	r3, [r0, #44]	; 0x2c
   3f12c:	str	r3, [r0, #48]	; 0x30
   3f130:	str	r3, [r0, #56]	; 0x38
   3f134:	str	r1, [r0, #12]
   3f138:	str	r1, [r0, #52]	; 0x34
   3f13c:	str	r2, [r0, #32]
   3f140:	str	r2, [r0, #36]	; 0x24
   3f144:	bx	lr

0003f148 <gioInitializeSerialParameters@@Base>:
   3f148:	mov	r2, #9600	; 0x2580
   3f14c:	mov	r3, #8
   3f150:	stm	r0, {r2, r3}
   3f154:	mov	r3, #4
   3f158:	mov	r2, #1
   3f15c:	str	r3, [r0, #12]
   3f160:	str	r2, [r0, #8]
   3f164:	mov	r3, #0
   3f168:	str	r3, [r0, #16]
   3f16c:	bx	lr

0003f170 <gioDisconnectResource@@Base>:
   3f170:	push	{r3, r4, r5, lr}
   3f174:	mov	r4, r0
   3f178:	ldr	r3, [r0, #4]
   3f17c:	ldr	r5, [r3]
   3f180:	cmp	r5, #0
   3f184:	beq	3f1b4 <gioDisconnectResource@@Base+0x44>
   3f188:	blx	r5
   3f18c:	adds	r5, r0, #0
   3f190:	movne	r5, #1
   3f194:	ldr	r0, [r4, #28]
   3f198:	cmp	r0, #0
   3f19c:	beq	3f1a4 <gioDisconnectResource@@Base+0x34>
   3f1a0:	bl	f4f4 <free@plt>
   3f1a4:	mov	r0, r4
   3f1a8:	bl	f4f4 <free@plt>
   3f1ac:	mov	r0, r5
   3f1b0:	pop	{r3, r4, r5, pc}
   3f1b4:	bl	fca4 <__errno_location@plt>
   3f1b8:	mov	r3, #38	; 0x26
   3f1bc:	str	r3, [r0]
   3f1c0:	ldr	r0, [pc, #8]	; 3f1d0 <gioDisconnectResource@@Base+0x60>
   3f1c4:	add	r0, pc, r0
   3f1c8:	bl	1c6fc <logSystemError@@Base>
   3f1cc:	b	3f194 <gioDisconnectResource@@Base+0x24>
   3f1d0:	andeq	sl, r1, r4, asr #9

0003f1d4 <gioGetApplicationData@@Base>:
   3f1d4:	ldr	r0, [r0, #8]
   3f1d8:	bx	lr

0003f1dc <gioWriteData@@Base>:
   3f1dc:	push	{r3, lr}
   3f1e0:	ldr	ip, [r0, #4]
   3f1e4:	ldr	ip, [ip, #4]
   3f1e8:	cmp	ip, #0
   3f1ec:	beq	3f1fc <gioWriteData@@Base+0x20>
   3f1f0:	ldr	r3, [r0, #20]
   3f1f4:	blx	ip
   3f1f8:	pop	{r3, pc}
   3f1fc:	bl	fca4 <__errno_location@plt>
   3f200:	mov	r3, #38	; 0x26
   3f204:	str	r3, [r0]
   3f208:	ldr	r0, [pc, #12]	; 3f21c <gioWriteData@@Base+0x40>
   3f20c:	add	r0, pc, r0
   3f210:	bl	1c6fc <logSystemError@@Base>
   3f214:	mvn	r0, #0
   3f218:	pop	{r3, pc}
   3f21c:	muleq	r1, r0, r4

0003f220 <gioAwaitInput@@Base>:
   3f220:	push	{r3, lr}
   3f224:	ldr	r2, [r0, #4]
   3f228:	ldr	r2, [r2, #8]
   3f22c:	cmp	r2, #0
   3f230:	beq	3f254 <gioAwaitInput@@Base+0x34>
   3f234:	ldr	ip, [r0, #44]	; 0x2c
   3f238:	ldr	r3, [r0, #40]	; 0x28
   3f23c:	cmp	ip, r3
   3f240:	beq	3f24c <gioAwaitInput@@Base+0x2c>
   3f244:	mov	r0, #1
   3f248:	pop	{r3, pc}
   3f24c:	blx	r2
   3f250:	pop	{r3, pc}
   3f254:	bl	fca4 <__errno_location@plt>
   3f258:	mov	r3, #38	; 0x26
   3f25c:	str	r3, [r0]
   3f260:	ldr	r0, [pc, #12]	; 3f274 <gioAwaitInput@@Base+0x54>
   3f264:	add	r0, pc, r0
   3f268:	bl	1c6fc <logSystemError@@Base>
   3f26c:	mvn	r0, #0
   3f270:	pop	{r3, pc}
   3f274:	andeq	sl, r1, r4, asr #8

0003f278 <gioReadData@@Base>:
   3f278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f27c:	sub	sp, sp, #28
   3f280:	ldr	r9, [pc, #468]	; 3f45c <gioReadData@@Base+0x1e4>
   3f284:	mov	r4, r0
   3f288:	str	r1, [sp, #16]
   3f28c:	mov	r5, r2
   3f290:	ldr	r1, [r0, #4]
   3f294:	add	r9, pc, r9
   3f298:	mov	r7, r3
   3f29c:	ldr	r8, [r1, #12]
   3f2a0:	cmp	r8, #0
   3f2a4:	beq	3f43c <gioReadData@@Base+0x1c4>
   3f2a8:	cmp	r2, #0
   3f2ac:	beq	3f3fc <gioReadData@@Base+0x184>
   3f2b0:	ldr	r1, [pc, #424]	; 3f460 <gioReadData@@Base+0x1e8>
   3f2b4:	add	fp, r0, #48	; 0x30
   3f2b8:	ldr	r6, [sp, #16]
   3f2bc:	add	r1, pc, r1
   3f2c0:	str	r1, [sp, #20]
   3f2c4:	b	3f304 <gioReadData@@Base+0x8c>
   3f2c8:	cmp	r5, r3
   3f2cc:	movcc	sl, r5
   3f2d0:	movcs	sl, r3
   3f2d4:	add	r1, r4, ip
   3f2d8:	mov	r0, r6
   3f2dc:	add	r1, r1, #48	; 0x30
   3f2e0:	mov	r2, sl
   3f2e4:	rsb	r5, sl, r5
   3f2e8:	bl	fb24 <memcpy@plt>
   3f2ec:	add	r6, r6, sl
   3f2f0:	ldr	r2, [r4, #40]	; 0x28
   3f2f4:	add	r3, r2, sl
   3f2f8:	str	r3, [r4, #40]	; 0x28
   3f2fc:	cmp	r5, #0
   3f300:	beq	3f380 <gioReadData@@Base+0x108>
   3f304:	ldr	ip, [r4, #40]	; 0x28
   3f308:	ldr	r3, [r4, #44]	; 0x2c
   3f30c:	subs	r3, r3, ip
   3f310:	bne	3f2c8 <gioReadData@@Base+0x50>
   3f314:	ldr	r2, [r4, #36]	; 0x24
   3f318:	str	r3, [r4, #44]	; 0x2c
   3f31c:	cmp	r2, #0
   3f320:	str	r3, [r4, #40]	; 0x28
   3f324:	bne	3f3e0 <gioReadData@@Base+0x168>
   3f328:	cmp	r7, #0
   3f32c:	mov	r2, #0
   3f330:	mov	r0, r4
   3f334:	mov	r1, fp
   3f338:	ldrne	r3, [r4, #16]
   3f33c:	moveq	r3, r7
   3f340:	str	r2, [sp]
   3f344:	mov	r2, #64	; 0x40
   3f348:	blx	r8
   3f34c:	subs	sl, r0, #0
   3f350:	ble	3f39c <gioReadData@@Base+0x124>
   3f354:	ldr	r3, [pc, #264]	; 3f464 <gioReadData@@Base+0x1ec>
   3f358:	ldr	r3, [r9, r3]
   3f35c:	ldrb	r3, [r3]
   3f360:	cmp	r3, #0
   3f364:	bne	3f3b8 <gioReadData@@Base+0x140>
   3f368:	ldr	r3, [r4, #44]	; 0x2c
   3f36c:	cmp	r5, #0
   3f370:	mov	r7, #1
   3f374:	add	ip, r3, sl
   3f378:	str	ip, [r4, #44]	; 0x2c
   3f37c:	bne	3f304 <gioReadData@@Base+0x8c>
   3f380:	ldr	r3, [sp, #16]
   3f384:	cmp	r6, r3
   3f388:	beq	3f3fc <gioReadData@@Base+0x184>
   3f38c:	rsb	r6, r3, r6
   3f390:	mov	r0, r6
   3f394:	add	sp, sp, #28
   3f398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f39c:	beq	3f380 <gioReadData@@Base+0x108>
   3f3a0:	bl	fca4 <__errno_location@plt>
   3f3a4:	ldr	r3, [r0]
   3f3a8:	cmp	r3, #11
   3f3ac:	beq	3f380 <gioReadData@@Base+0x108>
   3f3b0:	str	r3, [r4, #36]	; 0x24
   3f3b4:	b	3f2fc <gioReadData@@Base+0x84>
   3f3b8:	ldr	r0, [pc, #168]	; 3f468 <gioReadData@@Base+0x1f0>
   3f3bc:	mov	r3, sl
   3f3c0:	ldr	r2, [r4, #44]	; 0x2c
   3f3c4:	ldr	r1, [sp, #20]
   3f3c8:	ldr	r0, [r9, r0]
   3f3cc:	add	r2, r4, r2
   3f3d0:	add	r2, r2, #48	; 0x30
   3f3d4:	ldrb	r0, [r0]
   3f3d8:	bl	1c69c <logBytes@@Base>
   3f3dc:	b	3f368 <gioReadData@@Base+0xf0>
   3f3e0:	ldr	r1, [sp, #16]
   3f3e4:	cmp	r1, r6
   3f3e8:	beq	3f418 <gioReadData@@Base+0x1a0>
   3f3ec:	rsb	r6, r1, r6
   3f3f0:	mov	r0, r6
   3f3f4:	add	sp, sp, #28
   3f3f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f3fc:	bl	fca4 <__errno_location@plt>
   3f400:	mov	r6, #0
   3f404:	mov	r3, #11
   3f408:	str	r3, [r0]
   3f40c:	mov	r0, r6
   3f410:	add	sp, sp, #28
   3f414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f418:	str	r2, [sp, #8]
   3f41c:	mvn	r6, #0
   3f420:	str	r3, [sp, #12]
   3f424:	bl	fca4 <__errno_location@plt>
   3f428:	ldr	r2, [sp, #8]
   3f42c:	str	r2, [r0]
   3f430:	ldr	r3, [sp, #12]
   3f434:	str	r3, [r4, #36]	; 0x24
   3f438:	b	3f390 <gioReadData@@Base+0x118>
   3f43c:	bl	fca4 <__errno_location@plt>
   3f440:	mov	r3, #38	; 0x26
   3f444:	mvn	r6, #0
   3f448:	str	r3, [r0]
   3f44c:	ldr	r0, [pc, #24]	; 3f46c <gioReadData@@Base+0x1f4>
   3f450:	add	r0, pc, r0
   3f454:	bl	1c6fc <logSystemError@@Base>
   3f458:	b	3f390 <gioReadData@@Base+0x118>
   3f45c:	andeq	r3, r3, r4, ror #15
   3f460:	muleq	r0, r4, sl
   3f464:	andeq	r0, r0, ip, ror r3
   3f468:	andeq	r0, r0, ip, lsl #7
   3f46c:	andeq	sl, r1, r4, ror #4

0003f470 <gioReadByte@@Base>:
   3f470:	mov	r3, r2
   3f474:	mov	r2, #1
   3f478:	push	{r4, lr}
   3f47c:	bl	3f278 <gioReadData@@Base>
   3f480:	subs	r4, r0, #0
   3f484:	movgt	r3, #1
   3f488:	ble	3f494 <gioReadByte@@Base+0x24>
   3f48c:	mov	r0, r3
   3f490:	pop	{r4, pc}
   3f494:	movne	r3, #0
   3f498:	bne	3f48c <gioReadByte@@Base+0x1c>
   3f49c:	bl	fca4 <__errno_location@plt>
   3f4a0:	mov	r3, r4
   3f4a4:	mov	r2, #11
   3f4a8:	str	r2, [r0]
   3f4ac:	mov	r0, r3
   3f4b0:	pop	{r4, pc}

0003f4b4 <gioDiscardInput@@Base>:
   3f4b4:	ldr	r3, [pc, #104]	; 3f524 <gioDiscardInput@@Base+0x70>
   3f4b8:	ldr	r2, [pc, #104]	; 3f528 <gioDiscardInput@@Base+0x74>
   3f4bc:	add	r3, pc, r3
   3f4c0:	push	{r4, r5, r6, lr}
   3f4c4:	sub	sp, sp, #8
   3f4c8:	ldr	r6, [r3, r2]
   3f4cc:	add	r5, sp, #3
   3f4d0:	mov	r4, r0
   3f4d4:	ldr	r3, [r6]
   3f4d8:	str	r3, [sp, #4]
   3f4dc:	mov	r0, r4
   3f4e0:	mov	r1, r5
   3f4e4:	mov	r2, #0
   3f4e8:	bl	3f470 <gioReadByte@@Base>
   3f4ec:	cmp	r0, #0
   3f4f0:	bne	3f4dc <gioDiscardInput@@Base+0x28>
   3f4f4:	bl	fca4 <__errno_location@plt>
   3f4f8:	ldr	r2, [sp, #4]
   3f4fc:	ldr	r3, [r6]
   3f500:	ldr	r0, [r0]
   3f504:	subs	r1, r0, #11
   3f508:	rsbs	r0, r1, #0
   3f50c:	adcs	r0, r0, r1
   3f510:	cmp	r2, r3
   3f514:	bne	3f520 <gioDiscardInput@@Base+0x6c>
   3f518:	add	sp, sp, #8
   3f51c:	pop	{r4, r5, r6, pc}
   3f520:	bl	f950 <__stack_chk_fail@plt>
   3f524:			; <UNDEFINED> instruction: 0x000335bc
   3f528:			; <UNDEFINED> instruction: 0x000003b4

0003f52c <gioConnectResource@@Base>:
   3f52c:	push	{r4, r5, r6, r7, lr}
   3f530:	sub	sp, sp, #12
   3f534:	mov	r5, r1
   3f538:	str	r0, [sp, #4]
   3f53c:	mov	r0, #112	; 0x70
   3f540:	bl	fb48 <malloc@plt>
   3f544:	subs	r4, r0, #0
   3f548:	beq	3f748 <gioConnectResource@@Base+0x21c>
   3f54c:	mov	r3, #0
   3f550:	str	r3, [r4, #24]
   3f554:	str	r3, [r4, #36]	; 0x24
   3f558:	str	r3, [r4, #40]	; 0x28
   3f55c:	str	r3, [r4, #44]	; 0x2c
   3f560:	str	r3, [r4, #28]
   3f564:	str	r3, [r4, #32]
   3f568:	ldr	r3, [r5]
   3f56c:	cmp	r3, #0
   3f570:	beq	3f584 <gioConnectResource@@Base+0x58>
   3f574:	add	r0, sp, #4
   3f578:	bl	409e4 <isSerialDevice@@Base>
   3f57c:	cmp	r0, #0
   3f580:	bne	3f620 <gioConnectResource@@Base+0xf4>
   3f584:	ldr	r3, [r5, #20]
   3f588:	cmp	r3, #0
   3f58c:	beq	3f5a0 <gioConnectResource@@Base+0x74>
   3f590:	add	r0, sp, #4
   3f594:	bl	42a6c <isUsbDevice@@Base>
   3f598:	cmp	r0, #0
   3f59c:	bne	3f6c0 <gioConnectResource@@Base+0x194>
   3f5a0:	ldrb	r3, [r5, #40]	; 0x28
   3f5a4:	cmp	r3, #0
   3f5a8:	beq	3f68c <gioConnectResource@@Base+0x160>
   3f5ac:	add	r0, sp, #4
   3f5b0:	bl	462c0 <isBluetoothDevice@@Base>
   3f5b4:	cmp	r0, #0
   3f5b8:	beq	3f68c <gioConnectResource@@Base+0x160>
   3f5bc:	ldr	r0, [sp, #4]
   3f5c0:	mov	r2, #0
   3f5c4:	ldrb	r1, [r5, #40]	; 0x28
   3f5c8:	bl	45f7c <bthOpenConnection@@Base>
   3f5cc:	cmp	r0, #0
   3f5d0:	str	r0, [r4]
   3f5d4:	beq	3f6ac <gioConnectResource@@Base+0x180>
   3f5d8:	ldr	r3, [pc, #372]	; 3f754 <gioConnectResource@@Base+0x228>
   3f5dc:	add	r5, r5, #44	; 0x2c
   3f5e0:	add	ip, r4, #8
   3f5e4:	add	r3, pc, r3
   3f5e8:	add	r3, r3, #104	; 0x68
   3f5ec:	str	r3, [r4, #4]
   3f5f0:	ldm	r5, {r0, r1, r2, r3}
   3f5f4:	stm	ip, {r0, r1, r2, r3}
   3f5f8:	ldr	r0, [r4, #12]
   3f5fc:	cmp	r0, #0
   3f600:	bne	3f684 <gioConnectResource@@Base+0x158>
   3f604:	mov	r0, r4
   3f608:	bl	3f4b4 <gioDiscardInput@@Base>
   3f60c:	subs	r5, r0, #0
   3f610:	movne	r0, r4
   3f614:	beq	3f71c <gioConnectResource@@Base+0x1f0>
   3f618:	add	sp, sp, #12
   3f61c:	pop	{r4, r5, r6, r7, pc}
   3f620:	ldr	r0, [sp, #4]
   3f624:	bl	406c8 <serialOpenDevice@@Base>
   3f628:	cmp	r0, #0
   3f62c:	str	r0, [r4]
   3f630:	beq	3f6ac <gioConnectResource@@Base+0x180>
   3f634:	ldr	r1, [r5]
   3f638:	bl	3fe70 <serialSetParameters@@Base>
   3f63c:	cmp	r0, #0
   3f640:	beq	3f73c <gioConnectResource@@Base+0x210>
   3f644:	ldr	r3, [pc, #268]	; 3f758 <gioConnectResource@@Base+0x22c>
   3f648:	add	ip, r4, #8
   3f64c:	add	r3, pc, r3
   3f650:	str	r3, [r4, #4]
   3f654:	ldmib	r5, {r0, r1, r2, r3}
   3f658:	stm	ip, {r0, r1, r2, r3}
   3f65c:	ldr	r0, [r5]
   3f660:	ldr	r5, [r0]
   3f664:	bl	3fee8 <serialGetCharacterSize@@Base>
   3f668:	mov	r1, r0
   3f66c:	mov	r0, r5
   3f670:	bl	4e204 <formatAddress@@Base+0x258>
   3f674:	str	r0, [r4, #24]
   3f678:	ldr	r0, [r4, #12]
   3f67c:	cmp	r0, #0
   3f680:	beq	3f604 <gioConnectResource@@Base+0xd8>
   3f684:	bl	1ec24 <approximateDelay@@Base>
   3f688:	b	3f604 <gioConnectResource@@Base+0xd8>
   3f68c:	bl	fca4 <__errno_location@plt>
   3f690:	ldr	r1, [pc, #196]	; 3f75c <gioConnectResource@@Base+0x230>
   3f694:	mov	r3, #38	; 0x26
   3f698:	ldr	r2, [sp, #4]
   3f69c:	add	r1, pc, r1
   3f6a0:	str	r3, [r0]
   3f6a4:	mov	r0, #4
   3f6a8:	bl	1c634 <logMessage@@Base>
   3f6ac:	mov	r0, r4
   3f6b0:	bl	f4f4 <free@plt>
   3f6b4:	mov	r0, #0
   3f6b8:	add	sp, sp, #12
   3f6bc:	pop	{r4, r5, r6, r7, pc}
   3f6c0:	ldr	r0, [r5, #20]
   3f6c4:	ldr	r1, [sp, #4]
   3f6c8:	bl	42938 <usbFindChannel@@Base>
   3f6cc:	cmp	r0, #0
   3f6d0:	mov	lr, r0
   3f6d4:	str	r0, [r4]
   3f6d8:	beq	3f6ac <gioConnectResource@@Base+0x180>
   3f6dc:	ldr	r3, [pc, #124]	; 3f760 <gioConnectResource@@Base+0x234>
   3f6e0:	add	r5, r5, #24
   3f6e4:	add	ip, r4, #8
   3f6e8:	add	r3, pc, r3
   3f6ec:	add	r3, r3, #52	; 0x34
   3f6f0:	str	r3, [r4, #4]
   3f6f4:	ldm	r5, {r0, r1, r2, r3}
   3f6f8:	cmp	r0, #0
   3f6fc:	stm	ip, {r0, r1, r2, r3}
   3f700:	mov	r3, r0
   3f704:	ldreq	r3, [lr, #16]
   3f708:	streq	r3, [r4, #8]
   3f70c:	ldr	r0, [lr, #12]
   3f710:	cmp	r0, #0
   3f714:	bne	3f660 <gioConnectResource@@Base+0x134>
   3f718:	b	3f5f8 <gioConnectResource@@Base+0xcc>
   3f71c:	bl	fca4 <__errno_location@plt>
   3f720:	ldr	r7, [r0]
   3f724:	mov	r6, r0
   3f728:	mov	r0, r4
   3f72c:	bl	3f170 <gioDisconnectResource@@Base>
   3f730:	mov	r0, r5
   3f734:	str	r7, [r6]
   3f738:	b	3f618 <gioConnectResource@@Base+0xec>
   3f73c:	ldr	r0, [r4]
   3f740:	bl	40744 <serialCloseDevice@@Base>
   3f744:	b	3f6ac <gioConnectResource@@Base+0x180>
   3f748:	bl	1c740 <logMallocError@@Base>
   3f74c:	mov	r0, r4
   3f750:	b	3f618 <gioConnectResource@@Base+0xec>
   3f754:	andeq	r2, r3, r4, asr #8
   3f758:	ldrdeq	r2, [r3], -ip
   3f75c:	andeq	sl, r1, r4, lsr #32
   3f760:	andeq	r2, r3, r0, asr #6

0003f764 <gioReconfigureResource@@Base>:
   3f764:	push	{r4, r5, r6, lr}
   3f768:	mov	r5, r0
   3f76c:	ldr	r3, [r0, #4]
   3f770:	mov	r6, r1
   3f774:	ldr	r4, [r3, #16]
   3f778:	cmp	r4, #0
   3f77c:	beq	3f7b8 <gioReconfigureResource@@Base+0x54>
   3f780:	blx	r4
   3f784:	cmp	r0, #0
   3f788:	moveq	r4, r0
   3f78c:	beq	3f7b0 <gioReconfigureResource@@Base+0x4c>
   3f790:	mov	r0, r6
   3f794:	ldr	r4, [r6]
   3f798:	bl	3fee8 <serialGetCharacterSize@@Base>
   3f79c:	mov	r1, r0
   3f7a0:	mov	r0, r4
   3f7a4:	bl	4e204 <formatAddress@@Base+0x258>
   3f7a8:	mov	r4, #1
   3f7ac:	str	r0, [r5, #24]
   3f7b0:	mov	r0, r4
   3f7b4:	pop	{r4, r5, r6, pc}
   3f7b8:	bl	fca4 <__errno_location@plt>
   3f7bc:	mov	r3, #38	; 0x26
   3f7c0:	str	r3, [r0]
   3f7c4:	ldr	r0, [pc, #12]	; 3f7d8 <gioReconfigureResource@@Base+0x74>
   3f7c8:	add	r0, pc, r0
   3f7cc:	bl	1c6fc <logSystemError@@Base>
   3f7d0:	mov	r0, r4
   3f7d4:	pop	{r4, r5, r6, pc}
   3f7d8:	andeq	r9, r1, ip, lsr #30

0003f7dc <gioGetBytesPerSecond@@Base>:
   3f7dc:	ldr	r0, [r0, #24]
   3f7e0:	bx	lr

0003f7e4 <gioGetMillisecondsToTransfer@@Base>:
   3f7e4:	push	{r3, lr}
   3f7e8:	mov	r2, r1
   3f7ec:	ldr	r3, [r0, #24]
   3f7f0:	cmp	r3, #0
   3f7f4:	beq	3f810 <gioGetMillisecondsToTransfer@@Base+0x2c>
   3f7f8:	mov	r0, #1000	; 0x3e8
   3f7fc:	mov	r1, r3
   3f800:	mul	r0, r0, r2
   3f804:	bl	4e204 <formatAddress@@Base+0x258>
   3f808:	add	r0, r0, #1
   3f80c:	pop	{r3, pc}
   3f810:	mov	r0, r3
   3f814:	pop	{r3, pc}

0003f818 <gioTellResource@@Base>:
   3f818:	push	{r4, r5, r6, lr}
   3f81c:	sub	sp, sp, #24
   3f820:	ldr	ip, [r0, #4]
   3f824:	ldrh	r6, [sp, #40]	; 0x28
   3f828:	ldrh	r5, [sp, #44]	; 0x2c
   3f82c:	ldr	ip, [ip, #20]
   3f830:	ldrh	r4, [sp, #52]	; 0x34
   3f834:	cmp	ip, #0
   3f838:	beq	3f864 <gioTellResource@@Base+0x4c>
   3f83c:	str	r5, [sp, #4]
   3f840:	ldr	r5, [sp, #48]	; 0x30
   3f844:	str	r6, [sp]
   3f848:	str	r4, [sp, #12]
   3f84c:	str	r5, [sp, #8]
   3f850:	ldr	lr, [r0, #20]
   3f854:	str	lr, [sp, #16]
   3f858:	blx	ip
   3f85c:	add	sp, sp, #24
   3f860:	pop	{r4, r5, r6, pc}
   3f864:	bl	fca4 <__errno_location@plt>
   3f868:	mov	r3, #38	; 0x26
   3f86c:	str	r3, [r0]
   3f870:	ldr	r0, [pc, #12]	; 3f884 <gioTellResource@@Base+0x6c>
   3f874:	add	r0, pc, r0
   3f878:	bl	1c6fc <logSystemError@@Base>
   3f87c:	mvn	r0, #0
   3f880:	b	3f85c <gioTellResource@@Base+0x44>
   3f884:	muleq	r1, r4, lr

0003f888 <gioAskResource@@Base>:
   3f888:	push	{r4, r5, r6, lr}
   3f88c:	sub	sp, sp, #24
   3f890:	ldr	ip, [r0, #4]
   3f894:	ldrh	r6, [sp, #40]	; 0x28
   3f898:	ldrh	r5, [sp, #44]	; 0x2c
   3f89c:	ldr	ip, [ip, #24]
   3f8a0:	ldrh	r4, [sp, #52]	; 0x34
   3f8a4:	cmp	ip, #0
   3f8a8:	beq	3f8d4 <gioAskResource@@Base+0x4c>
   3f8ac:	str	r5, [sp, #4]
   3f8b0:	ldr	r5, [sp, #48]	; 0x30
   3f8b4:	str	r6, [sp]
   3f8b8:	str	r4, [sp, #12]
   3f8bc:	str	r5, [sp, #8]
   3f8c0:	ldr	lr, [r0, #16]
   3f8c4:	str	lr, [sp, #16]
   3f8c8:	blx	ip
   3f8cc:	add	sp, sp, #24
   3f8d0:	pop	{r4, r5, r6, pc}
   3f8d4:	bl	fca4 <__errno_location@plt>
   3f8d8:	mov	r3, #38	; 0x26
   3f8dc:	str	r3, [r0]
   3f8e0:	ldr	r0, [pc, #12]	; 3f8f4 <gioAskResource@@Base+0x6c>
   3f8e4:	add	r0, pc, r0
   3f8e8:	bl	1c6fc <logSystemError@@Base>
   3f8ec:	mvn	r0, #0
   3f8f0:	b	3f8cc <gioAskResource@@Base+0x44>
   3f8f4:	andeq	r9, r1, r4, lsr lr

0003f8f8 <gioGetHidReportSize@@Base>:
   3f8f8:	push	{r4, r5, r6, lr}
   3f8fc:	mov	r4, r0
   3f900:	ldr	r3, [r0, #28]
   3f904:	mov	r5, r1
   3f908:	cmp	r3, #0
   3f90c:	beq	3f950 <gioGetHidReportSize@@Base+0x58>
   3f910:	ldr	r3, [r4, #4]
   3f914:	ldr	r3, [r3, #32]
   3f918:	cmp	r3, #0
   3f91c:	beq	3f930 <gioGetHidReportSize@@Base+0x38>
   3f920:	add	r0, r4, #28
   3f924:	mov	r1, r5
   3f928:	blx	r3
   3f92c:	pop	{r4, r5, r6, pc}
   3f930:	bl	fca4 <__errno_location@plt>
   3f934:	mov	r3, #38	; 0x26
   3f938:	str	r3, [r0]
   3f93c:	ldr	r0, [pc, #84]	; 3f998 <gioGetHidReportSize@@Base+0xa0>
   3f940:	add	r0, pc, r0
   3f944:	bl	1c6fc <logSystemError@@Base>
   3f948:	mvn	r0, #0
   3f94c:	pop	{r4, r5, r6, pc}
   3f950:	ldr	r3, [r0, #4]
   3f954:	ldr	r6, [r3, #28]
   3f958:	cmp	r6, #0
   3f95c:	beq	3f978 <gioGetHidReportSize@@Base+0x80>
   3f960:	add	r1, r0, #28
   3f964:	ldr	r2, [r0, #16]
   3f968:	blx	r6
   3f96c:	cmp	r0, #0
   3f970:	bne	3f910 <gioGetHidReportSize@@Base+0x18>
   3f974:	pop	{r4, r5, r6, pc}
   3f978:	bl	fca4 <__errno_location@plt>
   3f97c:	mov	r3, #38	; 0x26
   3f980:	str	r3, [r0]
   3f984:	ldr	r0, [pc, #16]	; 3f99c <gioGetHidReportSize@@Base+0xa4>
   3f988:	add	r0, pc, r0
   3f98c:	bl	1c6fc <logSystemError@@Base>
   3f990:	mov	r0, r6
   3f994:	pop	{r4, r5, r6, pc}
   3f998:	strdeq	r9, [r1], -r8
   3f99c:	muleq	r1, ip, sp

0003f9a0 <gioSetHidReport@@Base>:
   3f9a0:	push	{lr}		; (str lr, [sp, #-4]!)
   3f9a4:	sub	sp, sp, #12
   3f9a8:	ldr	ip, [r0, #4]
   3f9ac:	ldr	ip, [ip, #36]	; 0x24
   3f9b0:	cmp	ip, #0
   3f9b4:	beq	3f9cc <gioSetHidReport@@Base+0x2c>
   3f9b8:	ldr	lr, [r0, #20]
   3f9bc:	str	lr, [sp]
   3f9c0:	blx	ip
   3f9c4:	add	sp, sp, #12
   3f9c8:	pop	{pc}		; (ldr pc, [sp], #4)
   3f9cc:	bl	fca4 <__errno_location@plt>
   3f9d0:	mov	r3, #38	; 0x26
   3f9d4:	str	r3, [r0]
   3f9d8:	ldr	r0, [pc, #12]	; 3f9ec <gioSetHidReport@@Base+0x4c>
   3f9dc:	add	r0, pc, r0
   3f9e0:	bl	1c6fc <logSystemError@@Base>
   3f9e4:	mvn	r0, #0
   3f9e8:	b	3f9c4 <gioSetHidReport@@Base+0x24>
   3f9ec:	andeq	r9, r1, r0, ror sp

0003f9f0 <gioGetHidReport@@Base>:
   3f9f0:	push	{lr}		; (str lr, [sp, #-4]!)
   3f9f4:	sub	sp, sp, #12
   3f9f8:	ldr	ip, [r0, #4]
   3f9fc:	ldr	ip, [ip, #40]	; 0x28
   3fa00:	cmp	ip, #0
   3fa04:	beq	3fa1c <gioGetHidReport@@Base+0x2c>
   3fa08:	ldr	lr, [r0, #16]
   3fa0c:	str	lr, [sp]
   3fa10:	blx	ip
   3fa14:	add	sp, sp, #12
   3fa18:	pop	{pc}		; (ldr pc, [sp], #4)
   3fa1c:	bl	fca4 <__errno_location@plt>
   3fa20:	mov	r3, #38	; 0x26
   3fa24:	str	r3, [r0]
   3fa28:	ldr	r0, [pc, #12]	; 3fa3c <gioGetHidReport@@Base+0x4c>
   3fa2c:	add	r0, pc, r0
   3fa30:	bl	1c6fc <logSystemError@@Base>
   3fa34:	mvn	r0, #0
   3fa38:	b	3fa14 <gioGetHidReport@@Base+0x24>
   3fa3c:	andeq	r9, r1, r0, lsr sp

0003fa40 <gioSetHidFeature@@Base>:
   3fa40:	push	{lr}		; (str lr, [sp, #-4]!)
   3fa44:	sub	sp, sp, #12
   3fa48:	ldr	ip, [r0, #4]
   3fa4c:	ldr	ip, [ip, #44]	; 0x2c
   3fa50:	cmp	ip, #0
   3fa54:	beq	3fa6c <gioSetHidFeature@@Base+0x2c>
   3fa58:	ldr	lr, [r0, #20]
   3fa5c:	str	lr, [sp]
   3fa60:	blx	ip
   3fa64:	add	sp, sp, #12
   3fa68:	pop	{pc}		; (ldr pc, [sp], #4)
   3fa6c:	bl	fca4 <__errno_location@plt>
   3fa70:	mov	r3, #38	; 0x26
   3fa74:	str	r3, [r0]
   3fa78:	ldr	r0, [pc, #12]	; 3fa8c <gioSetHidFeature@@Base+0x4c>
   3fa7c:	add	r0, pc, r0
   3fa80:	bl	1c6fc <logSystemError@@Base>
   3fa84:	mvn	r0, #0
   3fa88:	b	3fa64 <gioSetHidFeature@@Base+0x24>
   3fa8c:	strdeq	r9, [r1], -r0

0003fa90 <gioGetHidFeature@@Base>:
   3fa90:	push	{lr}		; (str lr, [sp, #-4]!)
   3fa94:	sub	sp, sp, #12
   3fa98:	ldr	ip, [r0, #4]
   3fa9c:	ldr	ip, [ip, #48]	; 0x30
   3faa0:	cmp	ip, #0
   3faa4:	beq	3fabc <gioGetHidFeature@@Base+0x2c>
   3faa8:	ldr	lr, [r0, #16]
   3faac:	str	lr, [sp]
   3fab0:	blx	ip
   3fab4:	add	sp, sp, #12
   3fab8:	pop	{pc}		; (ldr pc, [sp], #4)
   3fabc:	bl	fca4 <__errno_location@plt>
   3fac0:	mov	r3, #38	; 0x26
   3fac4:	str	r3, [r0]
   3fac8:	ldr	r0, [pc, #12]	; 3fadc <gioGetHidFeature@@Base+0x4c>
   3facc:	add	r0, pc, r0
   3fad0:	bl	1c6fc <logSystemError@@Base>
   3fad4:	mvn	r0, #0
   3fad8:	b	3fab4 <gioGetHidFeature@@Base+0x24>
   3fadc:			; <UNDEFINED> instruction: 0x00019cb0
   3fae0:	push	{r4, r5, r6, lr}
   3fae4:	mov	r4, r1
   3fae8:	mov	r6, r2
   3faec:	mov	r5, r0
   3faf0:	bl	40edc <serialGetLines@@Base>
   3faf4:	cmp	r0, #0
   3faf8:	popeq	{r4, r5, r6, pc}
   3fafc:	ldr	r0, [r5, #188]	; 0xbc
   3fb00:	and	r3, r4, r0
   3fb04:	cmp	r3, r4
   3fb08:	beq	3fb14 <gioGetHidFeature@@Base+0x84>
   3fb0c:	mov	r0, #0
   3fb10:	pop	{r4, r5, r6, pc}
   3fb14:	bic	r0, r6, r0
   3fb18:	subs	r3, r6, r0
   3fb1c:	rsbs	r0, r3, #0
   3fb20:	adcs	r0, r0, r3
   3fb24:	pop	{r4, r5, r6, pc}
   3fb28:	push	{r3, r4, r5, lr}
   3fb2c:	mov	r4, r0
   3fb30:	mov	r5, r1
   3fb34:	bl	40fbc <serialRegisterWaitLines@@Base>
   3fb38:	cmp	r0, #0
   3fb3c:	strne	r5, [r4, #192]	; 0xc0
   3fb40:	movne	r0, #1
   3fb44:	pop	{r3, r4, r5, pc}

0003fb48 <serialGetBaudEntry@@Base>:
   3fb48:	ldr	r3, [pc, #88]	; 3fba8 <serialGetBaudEntry@@Base+0x60>
   3fb4c:	ldr	r2, [pc, #88]	; 3fbac <serialGetBaudEntry@@Base+0x64>
   3fb50:	add	r3, pc, r3
   3fb54:	ldr	r3, [r3, r2]
   3fb58:	ldr	r2, [r3]
   3fb5c:	cmp	r2, #0
   3fb60:	beq	3fb90 <serialGetBaudEntry@@Base+0x48>
   3fb64:	cmp	r2, r0
   3fb68:	beq	3fba0 <serialGetBaudEntry@@Base+0x58>
   3fb6c:	add	r3, r3, #8
   3fb70:	b	3fb7c <serialGetBaudEntry@@Base+0x34>
   3fb74:	cmp	r2, r0
   3fb78:	beq	3fb98 <serialGetBaudEntry@@Base+0x50>
   3fb7c:	ldr	r2, [r3]
   3fb80:	mov	r1, r3
   3fb84:	add	r3, r3, #8
   3fb88:	cmp	r2, #0
   3fb8c:	bne	3fb74 <serialGetBaudEntry@@Base+0x2c>
   3fb90:	mov	r0, r2
   3fb94:	bx	lr
   3fb98:	mov	r0, r1
   3fb9c:	bx	lr
   3fba0:	mov	r0, r3
   3fba4:	bx	lr
   3fba8:	andeq	r2, r3, r8, lsr #30
   3fbac:	andeq	r0, r0, r4, asr #7

0003fbb0 <serialSetBaud@@Base>:
   3fbb0:	push	{r4, r5, r6, lr}
   3fbb4:	mov	r6, r0
   3fbb8:	mov	r0, r1
   3fbbc:	mov	r5, r1
   3fbc0:	bl	3fb48 <serialGetBaudEntry@@Base>
   3fbc4:	subs	r4, r0, #0
   3fbc8:	beq	3fc08 <serialSetBaud@@Base+0x58>
   3fbcc:	ldr	r1, [r4, #4]
   3fbd0:	add	r0, r6, #128	; 0x80
   3fbd4:	bl	40a6c <serialPutSpeed@@Base>
   3fbd8:	subs	r4, r0, #0
   3fbdc:	movne	r4, #1
   3fbe0:	beq	3fbec <serialSetBaud@@Base+0x3c>
   3fbe4:	mov	r0, r4
   3fbe8:	pop	{r4, r5, r6, pc}
   3fbec:	ldr	r1, [pc, #48]	; 3fc24 <serialSetBaud@@Base+0x74>
   3fbf0:	mov	r2, r5
   3fbf4:	mov	r0, #4
   3fbf8:	add	r1, pc, r1
   3fbfc:	bl	1c634 <logMessage@@Base>
   3fc00:	mov	r0, r4
   3fc04:	pop	{r4, r5, r6, pc}
   3fc08:	ldr	r1, [pc, #24]	; 3fc28 <serialSetBaud@@Base+0x78>
   3fc0c:	mov	r2, r5
   3fc10:	mov	r0, #4
   3fc14:	add	r1, pc, r1
   3fc18:	bl	1c634 <logMessage@@Base>
   3fc1c:	mov	r0, r4
   3fc20:	pop	{r4, r5, r6, pc}
   3fc24:	andeq	r9, r1, r0, lsr #23
   3fc28:	andeq	r9, r1, r0, lsr #23

0003fc2c <serialValidateBaud@@Base>:
   3fc2c:	push	{r3, r4, r5, r6, r7, lr}
   3fc30:	mov	r7, r1
   3fc34:	ldrb	r1, [r2]
   3fc38:	mov	r5, r3
   3fc3c:	mov	r4, r0
   3fc40:	cmp	r1, #0
   3fc44:	beq	3fc58 <serialValidateBaud@@Base+0x2c>
   3fc48:	mov	r1, r2
   3fc4c:	bl	1de7c <isUnsignedInteger@@Base>
   3fc50:	subs	r6, r0, #0
   3fc54:	beq	3fcd4 <serialValidateBaud@@Base+0xa8>
   3fc58:	ldr	r0, [r4]
   3fc5c:	bl	3fb48 <serialGetBaudEntry@@Base>
   3fc60:	subs	r6, r0, #0
   3fc64:	beq	3fcf4 <serialValidateBaud@@Base+0xc8>
   3fc68:	cmp	r5, #0
   3fc6c:	beq	3fcc8 <serialValidateBaud@@Base+0x9c>
   3fc70:	ldr	r3, [r5]
   3fc74:	ldr	r4, [r4]
   3fc78:	cmp	r3, #0
   3fc7c:	beq	3fca4 <serialValidateBaud@@Base+0x78>
   3fc80:	cmp	r3, r4
   3fc84:	beq	3fcc8 <serialValidateBaud@@Base+0x9c>
   3fc88:	mov	ip, r5
   3fc8c:	b	3fc98 <serialValidateBaud@@Base+0x6c>
   3fc90:	cmp	r0, r4
   3fc94:	beq	3fcc8 <serialValidateBaud@@Base+0x9c>
   3fc98:	ldr	r0, [ip, #4]!
   3fc9c:	cmp	r0, #0
   3fca0:	bne	3fc90 <serialValidateBaud@@Base+0x64>
   3fca4:	ldr	r1, [pc, #100]	; 3fd10 <serialValidateBaud@@Base+0xe4>
   3fca8:	mov	r2, r7
   3fcac:	mov	r3, r4
   3fcb0:	mov	r0, #3
   3fcb4:	add	r1, pc, r1
   3fcb8:	mov	r6, #0
   3fcbc:	bl	1c634 <logMessage@@Base>
   3fcc0:	mov	r0, r6
   3fcc4:	pop	{r3, r4, r5, r6, r7, pc}
   3fcc8:	mov	r6, #1
   3fccc:	mov	r0, r6
   3fcd0:	pop	{r3, r4, r5, r6, r7, pc}
   3fcd4:	ldr	r1, [pc, #56]	; 3fd14 <serialValidateBaud@@Base+0xe8>
   3fcd8:	mov	r2, r7
   3fcdc:	ldr	r3, [r4]
   3fce0:	mov	r0, #3
   3fce4:	add	r1, pc, r1
   3fce8:	bl	1c634 <logMessage@@Base>
   3fcec:	mov	r0, r6
   3fcf0:	pop	{r3, r4, r5, r6, r7, pc}
   3fcf4:	ldr	r1, [pc, #28]	; 3fd18 <serialValidateBaud@@Base+0xec>
   3fcf8:	mov	r2, r7
   3fcfc:	ldr	r3, [r4]
   3fd00:	mov	r0, #3
   3fd04:	add	r1, pc, r1
   3fd08:	bl	1c634 <logMessage@@Base>
   3fd0c:	b	3fcc0 <serialValidateBaud@@Base+0x94>
   3fd10:	andeq	r9, r1, ip, lsl fp
   3fd14:	andeq	r9, r1, r4, lsl fp
   3fd18:	andeq	r9, r1, r0, ror #21

0003fd1c <serialSetDataBits@@Base>:
   3fd1c:	push	{r3, r4, r5, lr}
   3fd20:	add	r0, r0, #128	; 0x80
   3fd24:	mov	r5, r1
   3fd28:	bl	40ad0 <serialPutDataBits@@Base>
   3fd2c:	subs	r4, r0, #0
   3fd30:	movne	r4, #1
   3fd34:	bne	3fd4c <serialSetDataBits@@Base+0x30>
   3fd38:	ldr	r1, [pc, #20]	; 3fd54 <serialSetDataBits@@Base+0x38>
   3fd3c:	mov	r2, r5
   3fd40:	mov	r0, #4
   3fd44:	add	r1, pc, r1
   3fd48:	bl	1c634 <logMessage@@Base>
   3fd4c:	mov	r0, r4
   3fd50:	pop	{r3, r4, r5, pc}
   3fd54:	andeq	r9, r1, r4, asr #21

0003fd58 <serialSetStopBits@@Base>:
   3fd58:	push	{r3, r4, r5, lr}
   3fd5c:	add	r0, r0, #128	; 0x80
   3fd60:	mov	r5, r1
   3fd64:	bl	40b30 <serialPutStopBits@@Base>
   3fd68:	subs	r4, r0, #0
   3fd6c:	movne	r4, #1
   3fd70:	bne	3fd88 <serialSetStopBits@@Base+0x30>
   3fd74:	ldr	r1, [pc, #20]	; 3fd90 <serialSetStopBits@@Base+0x38>
   3fd78:	mov	r2, r5
   3fd7c:	mov	r0, #4
   3fd80:	add	r1, pc, r1
   3fd84:	bl	1c634 <logMessage@@Base>
   3fd88:	mov	r0, r4
   3fd8c:	pop	{r3, r4, r5, pc}
   3fd90:			; <UNDEFINED> instruction: 0x00019ab0

0003fd94 <serialSetParity@@Base>:
   3fd94:	push	{r3, r4, r5, lr}
   3fd98:	add	r0, r0, #128	; 0x80
   3fd9c:	mov	r5, r1
   3fda0:	bl	40b6c <serialPutParity@@Base>
   3fda4:	subs	r4, r0, #0
   3fda8:	movne	r4, #1
   3fdac:	bne	3fdc4 <serialSetParity@@Base+0x30>
   3fdb0:	ldr	r1, [pc, #20]	; 3fdcc <serialSetParity@@Base+0x38>
   3fdb4:	mov	r2, r5
   3fdb8:	mov	r0, #4
   3fdbc:	add	r1, pc, r1
   3fdc0:	bl	1c634 <logMessage@@Base>
   3fdc4:	mov	r0, r4
   3fdc8:	pop	{r3, r4, r5, pc}
   3fdcc:	muleq	r1, ip, sl

0003fdd0 <serialSetFlowControl@@Base>:
   3fdd0:	push	{r3, r4, r5, r6, r7, lr}
   3fdd4:	add	r5, r0, #128	; 0x80
   3fdd8:	mov	r6, r0
   3fddc:	mov	r0, r5
   3fde0:	bl	40bb8 <serialPutFlowControl@@Base>
   3fde4:	ands	r3, r0, #256	; 0x100
   3fde8:	mov	r4, r0
   3fdec:	streq	r3, [r6, #200]	; 0xc8
   3fdf0:	moveq	r7, r3
   3fdf4:	beq	3fe0c <serialSetFlowControl@@Base+0x3c>
   3fdf8:	ldr	r3, [pc, #100]	; 3fe64 <serialSetFlowControl@@Base+0x94>
   3fdfc:	bic	r4, r0, #256	; 0x100
   3fe00:	mov	r7, #1
   3fe04:	add	r3, pc, r3
   3fe08:	str	r3, [r6, #200]	; 0xc8
   3fe0c:	mov	r0, r5
   3fe10:	mov	r1, r7
   3fe14:	bl	40cd0 <serialPutModemState@@Base>
   3fe18:	cmp	r0, #0
   3fe1c:	beq	3fe4c <serialSetFlowControl@@Base+0x7c>
   3fe20:	cmp	r4, #0
   3fe24:	bne	3fe30 <serialSetFlowControl@@Base+0x60>
   3fe28:	mov	r0, #1
   3fe2c:	pop	{r3, r4, r5, r6, r7, pc}
   3fe30:	ldr	r1, [pc, #48]	; 3fe68 <serialSetFlowControl@@Base+0x98>
   3fe34:	mov	r2, r4
   3fe38:	mov	r0, #4
   3fe3c:	add	r1, pc, r1
   3fe40:	bl	1c634 <logMessage@@Base>
   3fe44:	mov	r0, #0
   3fe48:	pop	{r3, r4, r5, r6, r7, pc}
   3fe4c:	ldr	r1, [pc, #24]	; 3fe6c <serialSetFlowControl@@Base+0x9c>
   3fe50:	mov	r2, r7
   3fe54:	mov	r0, #4
   3fe58:	add	r1, pc, r1
   3fe5c:	bl	1c634 <logMessage@@Base>
   3fe60:	b	3fe20 <serialSetFlowControl@@Base+0x50>
   3fe64:	andeq	r0, r0, r0, ror #12
   3fe68:	andeq	r9, r1, r0, ror #20
   3fe6c:	andeq	r9, r1, r0, lsr #20

0003fe70 <serialSetParameters@@Base>:
   3fe70:	push	{r3, r4, r5, lr}
   3fe74:	mov	r4, r1
   3fe78:	ldr	r1, [r1]
   3fe7c:	mov	r5, r0
   3fe80:	bl	3fbb0 <serialSetBaud@@Base>
   3fe84:	cmp	r0, #0
   3fe88:	bne	3fe94 <serialSetParameters@@Base+0x24>
   3fe8c:	mov	r0, #0
   3fe90:	pop	{r3, r4, r5, pc}
   3fe94:	mov	r0, r5
   3fe98:	ldr	r1, [r4, #4]
   3fe9c:	bl	3fd1c <serialSetDataBits@@Base>
   3fea0:	cmp	r0, #0
   3fea4:	beq	3fe8c <serialSetParameters@@Base+0x1c>
   3fea8:	mov	r0, r5
   3feac:	ldr	r1, [r4, #8]
   3feb0:	bl	3fd58 <serialSetStopBits@@Base>
   3feb4:	cmp	r0, #0
   3feb8:	beq	3fe8c <serialSetParameters@@Base+0x1c>
   3febc:	mov	r0, r5
   3fec0:	ldr	r1, [r4, #12]
   3fec4:	bl	3fd94 <serialSetParity@@Base>
   3fec8:	cmp	r0, #0
   3fecc:	beq	3fe8c <serialSetParameters@@Base+0x1c>
   3fed0:	mov	r0, r5
   3fed4:	ldr	r1, [r4, #16]
   3fed8:	bl	3fdd0 <serialSetFlowControl@@Base>
   3fedc:	adds	r0, r0, #0
   3fee0:	movne	r0, #1
   3fee4:	pop	{r3, r4, r5, pc}

0003fee8 <serialGetCharacterSize@@Base>:
   3fee8:	ldr	r3, [r0, #8]
   3feec:	ldr	r2, [r0, #12]
   3fef0:	ldr	r0, [r0, #4]
   3fef4:	cmp	r3, #1
   3fef8:	add	r0, r0, #1
   3fefc:	movne	r3, #2
   3ff00:	moveq	r3, #1
   3ff04:	cmp	r2, #4
   3ff08:	add	r0, r0, r3
   3ff0c:	addne	r0, r0, #1
   3ff10:	bx	lr

0003ff14 <serialGetCharacterBits@@Base>:
   3ff14:	push	{r4, r5, r6, lr}
   3ff18:	add	r4, r0, #128	; 0x80
   3ff1c:	mov	r0, r4
   3ff20:	bl	40cec <serialGetDataBits@@Base>
   3ff24:	mov	r6, r0
   3ff28:	mov	r0, r4
   3ff2c:	bl	40d6c <serialGetParityBits@@Base>
   3ff30:	mov	r5, r0
   3ff34:	mov	r0, r4
   3ff38:	bl	40d58 <serialGetStopBits@@Base>
   3ff3c:	add	r3, r6, r5
   3ff40:	add	r3, r3, #1
   3ff44:	add	r0, r3, r0
   3ff48:	pop	{r4, r5, r6, pc}

0003ff4c <serialDiscardInput@@Base>:
   3ff4c:	b	40de8 <serialCancelInput@@Base>

0003ff50 <serialDiscardOutput@@Base>:
   3ff50:	b	40e30 <serialCancelOutput@@Base>

0003ff54 <serialFlushOutput@@Base>:
   3ff54:	push	{r3, lr}
   3ff58:	ldr	r0, [r0, #4]
   3ff5c:	cmp	r0, #0
   3ff60:	beq	3ff70 <serialFlushOutput@@Base+0x1c>
   3ff64:	bl	fcf8 <fflush@plt>
   3ff68:	cmn	r0, #1
   3ff6c:	beq	3ff78 <serialFlushOutput@@Base+0x24>
   3ff70:	mov	r0, #1
   3ff74:	pop	{r3, pc}
   3ff78:	ldr	r0, [pc, #12]	; 3ff8c <serialFlushOutput@@Base+0x38>
   3ff7c:	add	r0, pc, r0
   3ff80:	bl	1c6fc <logSystemError@@Base>
   3ff84:	mov	r0, #0
   3ff88:	pop	{r3, pc}
   3ff8c:	andeq	r9, r1, r8, asr #18

0003ff90 <serialAwaitOutput@@Base>:
   3ff90:	push	{r4, lr}
   3ff94:	mov	r4, r0
   3ff98:	bl	3ff54 <serialFlushOutput@@Base>
   3ff9c:	cmp	r0, #0
   3ffa0:	popeq	{r4, pc}
   3ffa4:	mov	r0, r4
   3ffa8:	bl	40e80 <serialDrainOutput@@Base>
   3ffac:	adds	r0, r0, #0
   3ffb0:	movne	r0, #1
   3ffb4:	pop	{r4, pc}
   3ffb8:	push	{r4, r5, r6, lr}
   3ffbc:	add	r6, r0, #68	; 0x44
   3ffc0:	mov	r5, r1
   3ffc4:	mov	r4, r0
   3ffc8:	mov	r2, #60	; 0x3c
   3ffcc:	mov	r1, r6
   3ffd0:	mov	r0, r5
   3ffd4:	bl	fd10 <memcmp@plt>
   3ffd8:	cmp	r0, #0
   3ffdc:	bne	3ffe8 <serialAwaitOutput@@Base+0x58>
   3ffe0:	mov	r0, #1
   3ffe4:	pop	{r4, r5, r6, pc}
   3ffe8:	mov	r0, r4
   3ffec:	bl	3ff90 <serialAwaitOutput@@Base>
   3fff0:	cmp	r0, #0
   3fff4:	bne	40000 <serialAwaitOutput@@Base+0x70>
   3fff8:	mov	r0, #0
   3fffc:	pop	{r4, r5, r6, pc}
   40000:	mov	r0, r4
   40004:	mov	r1, r5
   40008:	bl	40dac <serialPutAttributes@@Base>
   4000c:	cmp	r0, #0
   40010:	beq	3fff8 <serialAwaitOutput@@Base+0x68>
   40014:	add	r3, r5, #48	; 0x30
   40018:	ldr	ip, [r5]
   4001c:	add	r5, r5, #16
   40020:	ldr	r0, [r5, #-12]
   40024:	add	r6, r6, #16
   40028:	ldr	r1, [r5, #-8]
   4002c:	ldr	r2, [r5, #-4]
   40030:	cmp	r5, r3
   40034:	str	ip, [r6, #-16]
   40038:	str	r0, [r6, #-12]
   4003c:	str	r1, [r6, #-8]
   40040:	str	r2, [r6, #-4]
   40044:	bne	40018 <serialAwaitOutput@@Base+0x88>
   40048:	ldr	r1, [r5]
   4004c:	mov	r0, #1
   40050:	ldr	r2, [r5, #4]
   40054:	ldr	r3, [r5, #8]
   40058:	str	r1, [r6]
   4005c:	str	r2, [r6, #4]
   40060:	str	r3, [r6, #8]
   40064:	pop	{r4, r5, r6, pc}
   40068:	ldr	r3, [pc, #276]	; 40184 <serialAwaitOutput@@Base+0x1f4>
   4006c:	ldr	ip, [pc, #276]	; 40188 <serialAwaitOutput@@Base+0x1f8>
   40070:	add	r3, pc, r3
   40074:	push	{r4, r5, r6, r7, lr}
   40078:	sub	sp, sp, #52	; 0x34
   4007c:	ldr	r5, [r3, ip]
   40080:	mov	r4, r0
   40084:	ldr	r1, [r0, #200]	; 0xc8
   40088:	ldr	r2, [r0, #196]	; 0xc4
   4008c:	ldr	r3, [r5]
   40090:	cmp	r1, r2
   40094:	str	r3, [sp, #44]	; 0x2c
   40098:	beq	40138 <serialAwaitOutput@@Base+0x1a8>
   4009c:	ldrb	r3, [r0, #208]	; 0xd0
   400a0:	tst	r3, #1
   400a4:	orrne	r3, r3, #2
   400a8:	bfcne	r3, #0, #1
   400ac:	strbne	r3, [r0, #208]	; 0xd0
   400b0:	mov	r0, r4
   400b4:	add	r1, r4, #128	; 0x80
   400b8:	bl	3ffb8 <serialAwaitOutput@@Base+0x28>
   400bc:	cmp	r0, #0
   400c0:	beq	40164 <serialAwaitOutput@@Base+0x1d4>
   400c4:	ldrb	r0, [r4, #208]	; 0xd0
   400c8:	ldr	r3, [r4, #200]	; 0xc8
   400cc:	ands	r7, r0, #1
   400d0:	str	r3, [r4, #196]	; 0xc4
   400d4:	bne	40148 <serialAwaitOutput@@Base+0x1b8>
   400d8:	cmp	r3, #0
   400dc:	beq	40148 <serialAwaitOutput@@Base+0x1b8>
   400e0:	add	r6, sp, #8
   400e4:	mov	r0, r6
   400e8:	bl	faac <pthread_attr_init@plt>
   400ec:	mov	r1, #1
   400f0:	mov	r0, r6
   400f4:	bl	f884 <pthread_attr_setdetachstate@plt>
   400f8:	ldrb	r3, [r4, #208]	; 0xd0
   400fc:	mov	r1, r6
   40100:	add	r0, sp, #4
   40104:	bfi	r3, r7, #1, #1
   40108:	ldr	r2, [r4, #196]	; 0xc4
   4010c:	strb	r3, [r4, #208]	; 0xd0
   40110:	mov	r3, r4
   40114:	bl	fc50 <pthread_create@plt>
   40118:	cmp	r0, #0
   4011c:	bne	4016c <serialAwaitOutput@@Base+0x1dc>
   40120:	ldr	r2, [sp, #4]
   40124:	ldrb	r3, [r4, #208]	; 0xd0
   40128:	str	r2, [r4, #204]	; 0xcc
   4012c:	orr	r3, r3, #1
   40130:	strb	r3, [r4, #208]	; 0xd0
   40134:	b	40148 <serialAwaitOutput@@Base+0x1b8>
   40138:	add	r1, r0, #128	; 0x80
   4013c:	bl	3ffb8 <serialAwaitOutput@@Base+0x28>
   40140:	cmp	r0, #0
   40144:	beq	40164 <serialAwaitOutput@@Base+0x1d4>
   40148:	mov	r0, #1
   4014c:	ldr	r2, [sp, #44]	; 0x2c
   40150:	ldr	r3, [r5]
   40154:	cmp	r2, r3
   40158:	bne	40180 <serialAwaitOutput@@Base+0x1f0>
   4015c:	add	sp, sp, #52	; 0x34
   40160:	pop	{r4, r5, r6, r7, pc}
   40164:	mov	r0, #0
   40168:	b	4014c <serialAwaitOutput@@Base+0x1bc>
   4016c:	ldr	r0, [pc, #24]	; 4018c <serialAwaitOutput@@Base+0x1fc>
   40170:	add	r0, pc, r0
   40174:	bl	1c6fc <logSystemError@@Base>
   40178:	mov	r0, r7
   4017c:	b	4014c <serialAwaitOutput@@Base+0x1bc>
   40180:	bl	f950 <__stack_chk_fail@plt>
   40184:	andeq	r2, r3, r8, lsl #20
   40188:			; <UNDEFINED> instruction: 0x000003b4
   4018c:	andeq	r9, r1, ip, asr r7

00040190 <serialAwaitInput@@Base>:
   40190:	push	{r3, r4, r5, lr}
   40194:	mov	r4, r1
   40198:	mov	r5, r0
   4019c:	bl	40068 <serialAwaitOutput@@Base+0xd8>
   401a0:	cmp	r0, #0
   401a4:	popeq	{r3, r4, r5, pc}
   401a8:	mov	r0, r5
   401ac:	mov	r1, r4
   401b0:	bl	40e78 <serialPollInput@@Base>
   401b4:	adds	r0, r0, #0
   401b8:	movne	r0, #1
   401bc:	pop	{r3, r4, r5, pc}

000401c0 <serialReadData@@Base>:
   401c0:	push	{r4, r5, r6, r7, r8, lr}
   401c4:	mov	r8, r1
   401c8:	mov	r7, r2
   401cc:	mov	r6, r3
   401d0:	mov	r4, r0
   401d4:	ldr	r5, [sp, #24]
   401d8:	bl	40068 <serialAwaitOutput@@Base+0xd8>
   401dc:	cmp	r0, #0
   401e0:	beq	40200 <serialReadData@@Base+0x40>
   401e4:	str	r5, [sp, #24]
   401e8:	mov	r0, r4
   401ec:	mov	r1, r8
   401f0:	mov	r2, r7
   401f4:	mov	r3, r6
   401f8:	pop	{r4, r5, r6, r7, r8, lr}
   401fc:	b	40ecc <serialGetData@@Base>
   40200:	mvn	r0, #0
   40204:	pop	{r4, r5, r6, r7, r8, pc}

00040208 <serialReadChunk@@Base>:
   40208:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4020c:	mov	r6, r2
   40210:	sub	sp, sp, #8
   40214:	ldr	r7, [r6]
   40218:	mov	r4, r1
   4021c:	mov	sl, r3
   40220:	ldr	r2, [sp, #40]	; 0x28
   40224:	cmp	r7, #0
   40228:	ldr	r5, [sp, #44]	; 0x2c
   4022c:	mov	r9, r0
   40230:	moveq	r7, r2
   40234:	movne	r7, r5
   40238:	bl	40068 <serialAwaitOutput@@Base+0xd8>
   4023c:	cmp	r0, #0
   40240:	beq	402d4 <serialReadChunk@@Base+0xcc>
   40244:	ldr	r3, [r6]
   40248:	add	sl, r4, sl
   4024c:	add	r4, r4, r3
   40250:	cmp	sl, r4
   40254:	bls	402b4 <serialReadChunk@@Base+0xac>
   40258:	str	r5, [sp]
   4025c:	mov	r0, r9
   40260:	mov	r1, r4
   40264:	mov	r2, #1
   40268:	mov	r3, r7
   4026c:	bl	40ecc <serialGetData@@Base>
   40270:	subs	r8, r0, #0
   40274:	bne	40290 <serialReadChunk@@Base+0x88>
   40278:	bl	fca4 <__errno_location@plt>
   4027c:	mov	r3, #11
   40280:	str	r3, [r0]
   40284:	mov	r0, r8
   40288:	add	sp, sp, #8
   4028c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   40290:	cmn	r8, #1
   40294:	beq	402c4 <serialReadChunk@@Base+0xbc>
   40298:	add	r4, r4, #1
   4029c:	ldr	r2, [r6]
   402a0:	cmp	sl, r4
   402a4:	mov	r7, r5
   402a8:	add	r2, r2, #1
   402ac:	str	r2, [r6]
   402b0:	bhi	40258 <serialReadChunk@@Base+0x50>
   402b4:	mov	r8, #1
   402b8:	mov	r0, r8
   402bc:	add	sp, sp, #8
   402c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   402c4:	bl	fca4 <__errno_location@plt>
   402c8:	ldr	r3, [r0]
   402cc:	cmp	r3, #4
   402d0:	beq	40250 <serialReadChunk@@Base+0x48>
   402d4:	mov	r8, #0
   402d8:	mov	r0, r8
   402dc:	add	sp, sp, #8
   402e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000402e4 <serialWriteData@@Base>:
   402e4:	push	{r4, r5, r6, lr}
   402e8:	mov	r6, r1
   402ec:	mov	r5, r2
   402f0:	mov	r4, r0
   402f4:	bl	40068 <serialAwaitOutput@@Base+0xd8>
   402f8:	cmp	r0, #0
   402fc:	beq	40314 <serialWriteData@@Base+0x30>
   40300:	mov	r0, r4
   40304:	mov	r1, r6
   40308:	mov	r2, r5
   4030c:	pop	{r4, r5, r6, lr}
   40310:	b	40ed4 <serialPutData@@Base>
   40314:	mvn	r0, #0
   40318:	pop	{r4, r5, r6, pc}

0004031c <serialSetLineRTS@@Base>:
   4031c:	cmp	r1, #0
   40320:	movne	r1, #4
   40324:	moveq	r1, #0
   40328:	moveq	r2, #4
   4032c:	movne	r2, #0
   40330:	b	40f18 <serialPutLines@@Base>

00040334 <serialSetLineDTR@@Base>:
   40334:	cmp	r1, #0
   40338:	movne	r1, #2
   4033c:	moveq	r1, #0
   40340:	moveq	r2, #2
   40344:	movne	r2, #0
   40348:	b	40f18 <serialPutLines@@Base>

0004034c <serialTestLineCTS@@Base>:
   4034c:	mov	r1, #32
   40350:	mov	r2, #0
   40354:	b	3fae0 <gioGetHidFeature@@Base+0x50>

00040358 <serialTestLineDSR@@Base>:
   40358:	mov	r1, #256	; 0x100
   4035c:	mov	r2, #0
   40360:	b	3fae0 <gioGetHidFeature@@Base+0x50>

00040364 <serialWaitLine@@Base>:
   40364:	cmp	r3, #0
   40368:	push	{r4, r5, r6, lr}
   4036c:	mov	r5, r2
   40370:	mov	r4, r0
   40374:	mov	r6, r1
   40378:	bne	403fc <serialWaitLine@@Base+0x98>
   4037c:	cmp	r2, #0
   40380:	ldr	r3, [r0, #192]	; 0xc0
   40384:	moveq	r5, r1
   40388:	movne	r5, #0
   4038c:	moveq	r6, #0
   40390:	orr	r1, r6, r5
   40394:	cmp	r1, r3
   40398:	beq	403d8 <serialWaitLine@@Base+0x74>
   4039c:	bl	3fb28 <gioGetHidFeature@@Base+0x98>
   403a0:	cmp	r0, #0
   403a4:	bne	403d8 <serialWaitLine@@Base+0x74>
   403a8:	mov	r5, #0
   403ac:	ldr	r3, [r4, #192]	; 0xc0
   403b0:	cmp	r3, #0
   403b4:	beq	403c4 <serialWaitLine@@Base+0x60>
   403b8:	mov	r0, r4
   403bc:	mov	r1, #0
   403c0:	bl	3fb28 <gioGetHidFeature@@Base+0x98>
   403c4:	mov	r0, r5
   403c8:	pop	{r4, r5, r6, pc}
   403cc:	bl	40fc4 <serialMonitorWaitLines@@Base>
   403d0:	cmp	r0, #0
   403d4:	beq	403a8 <serialWaitLine@@Base+0x44>
   403d8:	mov	r0, r4
   403dc:	mov	r1, r6
   403e0:	mov	r2, r5
   403e4:	bl	3fae0 <gioGetHidFeature@@Base+0x50>
   403e8:	cmp	r0, #0
   403ec:	mov	r0, r4
   403f0:	beq	403cc <serialWaitLine@@Base+0x68>
   403f4:	mov	r5, #1
   403f8:	b	403ac <serialWaitLine@@Base+0x48>
   403fc:	ldr	r3, [r0, #192]	; 0xc0
   40400:	cmp	r1, r3
   40404:	beq	40424 <serialWaitLine@@Base+0xc0>
   40408:	bl	3fb28 <gioGetHidFeature@@Base+0x98>
   4040c:	cmp	r0, #0
   40410:	beq	403a8 <serialWaitLine@@Base+0x44>
   40414:	b	40424 <serialWaitLine@@Base+0xc0>
   40418:	bl	40fc4 <serialMonitorWaitLines@@Base>
   4041c:	cmp	r0, #0
   40420:	beq	403a8 <serialWaitLine@@Base+0x44>
   40424:	cmp	r5, #0
   40428:	mov	r0, r4
   4042c:	moveq	r1, r6
   40430:	movne	r1, #0
   40434:	movne	r2, r6
   40438:	moveq	r2, #0
   4043c:	bl	3fae0 <gioGetHidFeature@@Base+0x50>
   40440:	cmp	r0, #0
   40444:	mov	r0, r4
   40448:	beq	40418 <serialWaitLine@@Base+0xb4>
   4044c:	bl	40fc4 <serialMonitorWaitLines@@Base>
   40450:	adds	r5, r0, #0
   40454:	movne	r5, #1
   40458:	b	403ac <serialWaitLine@@Base+0x48>

0004045c <serialWaitLineCTS@@Base>:
   4045c:	mov	r3, r2
   40460:	mov	r2, r1
   40464:	mov	r1, #32
   40468:	b	40364 <serialWaitLine@@Base>
   4046c:	push	{r3, r4, r5, lr}
   40470:	mov	r5, r0
   40474:	bl	4034c <serialTestLineCTS@@Base>
   40478:	ldrb	r3, [r5, #208]	; 0xd0
   4047c:	tst	r3, #2
   40480:	mov	r4, r0
   40484:	bne	404b8 <serialWaitLineCTS@@Base+0x5c>
   40488:	mov	r1, r4
   4048c:	rsbs	r4, r4, #1
   40490:	mov	r0, r5
   40494:	movcc	r4, #0
   40498:	bl	4031c <serialSetLineRTS@@Base>
   4049c:	mov	r1, r4
   404a0:	mov	r0, r5
   404a4:	mov	r2, #0
   404a8:	bl	4045c <serialWaitLineCTS@@Base>
   404ac:	ldrb	r3, [r5, #208]	; 0xd0
   404b0:	tst	r3, #2
   404b4:	beq	40488 <serialWaitLineCTS@@Base+0x2c>
   404b8:	mov	r0, #0
   404bc:	pop	{r3, r4, r5, pc}

000404c0 <serialWaitLineDSR@@Base>:
   404c0:	mov	r3, r2
   404c4:	mov	r2, r1
   404c8:	mov	r1, #256	; 0x100
   404cc:	b	40364 <serialWaitLine@@Base>

000404d0 <serialPrepareDevice@@Base>:
   404d0:	push	{r3, r4, r5, lr}
   404d4:	add	r5, r0, #68	; 0x44
   404d8:	mov	r4, r0
   404dc:	mov	r1, r5
   404e0:	bl	40d78 <serialGetAttributes@@Base>
   404e4:	cmp	r0, #0
   404e8:	popeq	{r3, r4, r5, pc}
   404ec:	add	ip, r4, #8
   404f0:	add	r2, r4, #116	; 0x74
   404f4:	mov	r3, r5
   404f8:	ldr	r5, [r3]
   404fc:	add	r3, r3, #16
   40500:	ldr	lr, [r3, #-12]
   40504:	add	ip, ip, #16
   40508:	ldr	r0, [r3, #-8]
   4050c:	ldr	r1, [r3, #-4]
   40510:	cmp	r3, r2
   40514:	str	r5, [ip, #-16]
   40518:	str	lr, [ip, #-12]
   4051c:	str	r0, [ip, #-8]
   40520:	str	r1, [ip, #-4]
   40524:	bne	404f8 <serialPrepareDevice@@Base+0x28>
   40528:	ldr	lr, [r3, #4]
   4052c:	add	r5, r4, #128	; 0x80
   40530:	ldr	r2, [r3]
   40534:	mov	r1, #0
   40538:	ldr	r3, [r3, #8]
   4053c:	mov	r0, r5
   40540:	str	lr, [ip, #4]
   40544:	str	r2, [ip]
   40548:	mov	r2, #60	; 0x3c
   4054c:	str	r3, [ip, #8]
   40550:	bl	f6b0 <memset@plt>
   40554:	mov	r0, r5
   40558:	bl	40a4c <serialPutInitialAttributes@@Base>
   4055c:	mov	r0, #9600	; 0x2580
   40560:	bl	3fb48 <serialGetBaudEntry@@Base>
   40564:	cmp	r0, #0
   40568:	beq	40694 <serialPrepareDevice@@Base+0x1c4>
   4056c:	ldr	r1, [r0, #4]
   40570:	mov	r0, r5
   40574:	bl	40a6c <serialPutSpeed@@Base>
   40578:	cmp	r0, #0
   4057c:	beq	4067c <serialPrepareDevice@@Base+0x1ac>
   40580:	mov	r0, r5
   40584:	mov	r1, #8
   40588:	bl	40ad0 <serialPutDataBits@@Base>
   4058c:	cmp	r0, #0
   40590:	beq	40664 <serialPrepareDevice@@Base+0x194>
   40594:	mov	r0, r5
   40598:	mov	r1, #1
   4059c:	bl	40b30 <serialPutStopBits@@Base>
   405a0:	cmp	r0, #0
   405a4:	beq	4064c <serialPrepareDevice@@Base+0x17c>
   405a8:	mov	r0, r5
   405ac:	mov	r1, #4
   405b0:	bl	40b6c <serialPutParity@@Base>
   405b4:	cmp	r0, #0
   405b8:	beq	40634 <serialPrepareDevice@@Base+0x164>
   405bc:	mov	r0, r5
   405c0:	mov	r1, #0
   405c4:	bl	40bb8 <serialPutFlowControl@@Base>
   405c8:	cmp	r0, #0
   405cc:	bne	4061c <serialPrepareDevice@@Base+0x14c>
   405d0:	mov	r0, r5
   405d4:	mov	r1, #0
   405d8:	bl	40cd0 <serialPutModemState@@Base>
   405dc:	subs	r2, r0, #0
   405e0:	bne	405f4 <serialPrepareDevice@@Base+0x124>
   405e4:	ldr	r1, [pc, #192]	; 406ac <serialPrepareDevice@@Base+0x1dc>
   405e8:	mov	r0, #4
   405ec:	add	r1, pc, r1
   405f0:	bl	1c634 <logMessage@@Base>
   405f4:	ldrb	r2, [r4, #208]	; 0xd0
   405f8:	mov	r3, #0
   405fc:	mov	r0, #1
   40600:	str	r3, [r4, #188]	; 0xbc
   40604:	bfi	r2, r3, #0, #1
   40608:	str	r3, [r4, #192]	; 0xc0
   4060c:	strb	r2, [r4, #208]	; 0xd0
   40610:	str	r3, [r4, #196]	; 0xc4
   40614:	str	r3, [r4, #200]	; 0xc8
   40618:	pop	{r3, r4, r5, pc}
   4061c:	ldr	r1, [pc, #140]	; 406b0 <serialPrepareDevice@@Base+0x1e0>
   40620:	mov	r0, #4
   40624:	mov	r2, #0
   40628:	add	r1, pc, r1
   4062c:	bl	1c634 <logMessage@@Base>
   40630:	b	405d0 <serialPrepareDevice@@Base+0x100>
   40634:	ldr	r1, [pc, #120]	; 406b4 <serialPrepareDevice@@Base+0x1e4>
   40638:	mov	r0, #4
   4063c:	mov	r2, r0
   40640:	add	r1, pc, r1
   40644:	bl	1c634 <logMessage@@Base>
   40648:	b	405bc <serialPrepareDevice@@Base+0xec>
   4064c:	ldr	r1, [pc, #100]	; 406b8 <serialPrepareDevice@@Base+0x1e8>
   40650:	mov	r0, #4
   40654:	mov	r2, #1
   40658:	add	r1, pc, r1
   4065c:	bl	1c634 <logMessage@@Base>
   40660:	b	405a8 <serialPrepareDevice@@Base+0xd8>
   40664:	ldr	r1, [pc, #80]	; 406bc <serialPrepareDevice@@Base+0x1ec>
   40668:	mov	r0, #4
   4066c:	mov	r2, #8
   40670:	add	r1, pc, r1
   40674:	bl	1c634 <logMessage@@Base>
   40678:	b	40594 <serialPrepareDevice@@Base+0xc4>
   4067c:	ldr	r1, [pc, #60]	; 406c0 <serialPrepareDevice@@Base+0x1f0>
   40680:	mov	r0, #4
   40684:	mov	r2, #9600	; 0x2580
   40688:	add	r1, pc, r1
   4068c:	bl	1c634 <logMessage@@Base>
   40690:	b	40580 <serialPrepareDevice@@Base+0xb0>
   40694:	ldr	r1, [pc, #40]	; 406c4 <serialPrepareDevice@@Base+0x1f4>
   40698:	mov	r0, #4
   4069c:	mov	r2, #9600	; 0x2580
   406a0:	add	r1, pc, r1
   406a4:	bl	1c634 <logMessage@@Base>
   406a8:	b	40580 <serialPrepareDevice@@Base+0xb0>
   406ac:	strdeq	r9, [r1], -r0
   406b0:	andeq	r9, r1, r0, lsl #7
   406b4:	andeq	r9, r1, r0, asr #6
   406b8:	strdeq	r9, [r1], -ip
   406bc:			; <UNDEFINED> instruction: 0x000192b8
   406c0:	andeq	r9, r1, r8, ror r2
   406c4:	andeq	r9, r1, ip, lsr r2

000406c8 <serialOpenDevice@@Base>:
   406c8:	push	{r3, r4, r5, lr}
   406cc:	mov	r5, r0
   406d0:	mov	r0, #212	; 0xd4
   406d4:	bl	fb48 <malloc@plt>
   406d8:	subs	r4, r0, #0
   406dc:	beq	40738 <serialOpenDevice@@Base+0x70>
   406e0:	mov	r0, r5
   406e4:	bl	1d998 <getDevicePath@@Base>
   406e8:	subs	r5, r0, #0
   406ec:	beq	40728 <serialOpenDevice@@Base+0x60>
   406f0:	mvn	r2, #0
   406f4:	mov	r3, #0
   406f8:	str	r2, [r4]
   406fc:	mov	r0, r4
   40700:	str	r3, [r4, #4]
   40704:	mov	r1, r5
   40708:	bl	41004 <serialConnectDevice@@Base>
   4070c:	cmp	r0, #0
   40710:	mov	r0, r5
   40714:	beq	40724 <serialOpenDevice@@Base+0x5c>
   40718:	bl	f4f4 <free@plt>
   4071c:	mov	r0, r4
   40720:	pop	{r3, r4, r5, pc}
   40724:	bl	f4f4 <free@plt>
   40728:	mov	r0, r4
   4072c:	bl	f4f4 <free@plt>
   40730:	mov	r0, #0
   40734:	pop	{r3, r4, r5, pc}
   40738:	bl	1c740 <logMallocError@@Base>
   4073c:	mov	r0, r4
   40740:	pop	{r3, r4, r5, pc}

00040744 <serialCloseDevice@@Base>:
   40744:	push	{r4, lr}
   40748:	mov	r4, r0
   4074c:	ldrb	r3, [r0, #208]	; 0xd0
   40750:	add	r1, r4, #8
   40754:	tst	r3, #1
   40758:	orrne	r3, r3, #2
   4075c:	bfcne	r3, #0, #1
   40760:	strbne	r3, [r0, #208]	; 0xd0
   40764:	bl	3ffb8 <serialAwaitOutput@@Base+0x28>
   40768:	ldr	r0, [r4, #4]
   4076c:	cmp	r0, #0
   40770:	beq	40784 <serialCloseDevice@@Base+0x40>
   40774:	bl	fbc0 <fclose@plt>
   40778:	mov	r0, r4
   4077c:	pop	{r4, lr}
   40780:	b	f4f4 <free@plt>
   40784:	ldr	r0, [r4]
   40788:	cmn	r0, #1
   4078c:	beq	407a0 <serialCloseDevice@@Base+0x5c>
   40790:	bl	f764 <close@plt>
   40794:	mov	r0, r4
   40798:	pop	{r4, lr}
   4079c:	b	f4f4 <free@plt>
   407a0:	mov	r0, r4
   407a4:	bl	410c0 <serialDisconnectDevice@@Base>
   407a8:	mov	r0, r4
   407ac:	pop	{r4, lr}
   407b0:	b	f4f4 <free@plt>

000407b4 <serialRestartDevice@@Base>:
   407b4:	ldr	r2, [pc, #444]	; 40978 <serialRestartDevice@@Base+0x1c4>
   407b8:	mov	r3, #0
   407bc:	ldr	ip, [pc, #440]	; 4097c <serialRestartDevice@@Base+0x1c8>
   407c0:	add	r2, pc, r2
   407c4:	push	{r4, r5, r6, r7, r8, lr}
   407c8:	mov	r4, r0
   407cc:	ldr	r5, [r2, ip]
   407d0:	sub	sp, sp, #16
   407d4:	ldr	r0, [r0, #4]
   407d8:	mov	r6, r1
   407dc:	str	r3, [sp, #4]
   407e0:	cmp	r0, r3
   407e4:	str	r3, [sp, #8]
   407e8:	ldr	r3, [r5]
   407ec:	ldr	r7, [r4, #200]	; 0xc8
   407f0:	str	r3, [sp, #12]
   407f4:	beq	407fc <serialRestartDevice@@Base+0x48>
   407f8:	bl	f794 <clearerr@plt>
   407fc:	mov	r0, r4
   40800:	bl	410cc <serialClearError@@Base>
   40804:	mov	r0, r4
   40808:	bl	3ff50 <serialDiscardOutput@@Base>
   4080c:	cmp	r0, #0
   40810:	bne	40830 <serialRestartDevice@@Base+0x7c>
   40814:	mov	r0, #0
   40818:	ldr	r2, [sp, #12]
   4081c:	ldr	r3, [r5]
   40820:	cmp	r2, r3
   40824:	bne	40974 <serialRestartDevice@@Base+0x1c0>
   40828:	add	sp, sp, #16
   4082c:	pop	{r4, r5, r6, r7, r8, pc}
   40830:	mov	r1, #0
   40834:	add	r0, r4, #128	; 0x80
   40838:	str	r1, [r4, #200]	; 0xc8
   4083c:	bl	40a6c <serialPutSpeed@@Base>
   40840:	cmp	r0, #0
   40844:	beq	40814 <serialRestartDevice@@Base+0x60>
   40848:	mov	r0, r4
   4084c:	bl	40068 <serialAwaitOutput@@Base+0xd8>
   40850:	cmp	r0, #0
   40854:	beq	40874 <serialRestartDevice@@Base+0xc0>
   40858:	mov	r0, #500	; 0x1f4
   4085c:	bl	1ec24 <approximateDelay@@Base>
   40860:	mov	r0, r4
   40864:	bl	3ff4c <serialDiscardInput@@Base>
   40868:	cmp	r0, #0
   4086c:	bne	40928 <serialRestartDevice@@Base+0x174>
   40870:	b	40814 <serialRestartDevice@@Base+0x60>
   40874:	mov	r0, r4
   40878:	mov	r1, r6
   4087c:	bl	3fbb0 <serialSetBaud@@Base>
   40880:	cmp	r0, #0
   40884:	beq	40814 <serialRestartDevice@@Base+0x60>
   40888:	mov	r0, r4
   4088c:	bl	40068 <serialAwaitOutput@@Base+0xd8>
   40890:	cmp	r0, #0
   40894:	beq	40814 <serialRestartDevice@@Base+0x60>
   40898:	mov	r0, r4
   4089c:	bl	40edc <serialGetLines@@Base>
   408a0:	cmp	r0, #0
   408a4:	beq	40814 <serialRestartDevice@@Base+0x60>
   408a8:	ldr	r1, [pc, #208]	; 40980 <serialRestartDevice@@Base+0x1cc>
   408ac:	mov	r3, #2
   408b0:	ldr	ip, [r4, #188]	; 0xbc
   408b4:	add	r1, pc, r1
   408b8:	b	408d8 <serialRestartDevice@@Base+0x124>
   408bc:	add	r2, sp, #16
   408c0:	ldr	r0, [r2, #-12]!
   408c4:	orr	r0, r0, r3
   408c8:	ldr	r3, [r1, #4]!
   408cc:	str	r0, [r2]
   408d0:	cmp	r3, #0
   408d4:	beq	408ec <serialRestartDevice@@Base+0x138>
   408d8:	tst	r3, ip
   408dc:	bne	408bc <serialRestartDevice@@Base+0x108>
   408e0:	add	r2, sp, #16
   408e4:	ldr	r0, [r2, #-8]!
   408e8:	b	408c4 <serialRestartDevice@@Base+0x110>
   408ec:	ldr	r8, [sp, #4]
   408f0:	cmp	r8, #0
   408f4:	bne	40954 <serialRestartDevice@@Base+0x1a0>
   408f8:	mov	r0, #500	; 0x1f4
   408fc:	bl	1ec24 <approximateDelay@@Base>
   40900:	mov	r0, r4
   40904:	bl	3ff4c <serialDiscardInput@@Base>
   40908:	cmp	r0, #0
   4090c:	beq	40814 <serialRestartDevice@@Base+0x60>
   40910:	mov	r1, r8
   40914:	mov	r0, r4
   40918:	ldr	r2, [sp, #8]
   4091c:	bl	40f18 <serialPutLines@@Base>
   40920:	cmp	r0, #0
   40924:	beq	40814 <serialRestartDevice@@Base+0x60>
   40928:	str	r7, [r4, #200]	; 0xc8
   4092c:	mov	r1, r6
   40930:	mov	r0, r4
   40934:	bl	3fbb0 <serialSetBaud@@Base>
   40938:	cmp	r0, #0
   4093c:	beq	40814 <serialRestartDevice@@Base+0x60>
   40940:	mov	r0, r4
   40944:	bl	40068 <serialAwaitOutput@@Base+0xd8>
   40948:	adds	r0, r0, #0
   4094c:	movne	r0, #1
   40950:	b	40818 <serialRestartDevice@@Base+0x64>
   40954:	ldr	r2, [sp, #8]
   40958:	mov	r1, r3
   4095c:	mov	r0, r4
   40960:	orr	r2, r8, r2
   40964:	bl	40f18 <serialPutLines@@Base>
   40968:	cmp	r0, #0
   4096c:	bne	408f8 <serialRestartDevice@@Base+0x144>
   40970:	b	40814 <serialRestartDevice@@Base+0x60>
   40974:	bl	f950 <__stack_chk_fail@plt>
   40978:			; <UNDEFINED> instruction: 0x000322b8
   4097c:			; <UNDEFINED> instruction: 0x000003b4
   40980:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>

00040984 <serialGetStream@@Base>:
   40984:	push	{r3, r4, r5, lr}
   40988:	mov	r5, r0
   4098c:	ldr	r4, [r0, #4]
   40990:	cmp	r4, #0
   40994:	beq	409a0 <serialGetStream@@Base+0x1c>
   40998:	mov	r0, r4
   4099c:	pop	{r3, r4, r5, pc}
   409a0:	bl	410c4 <serialEnsureFileDescriptor@@Base>
   409a4:	cmp	r0, #0
   409a8:	beq	40998 <serialGetStream@@Base+0x14>
   409ac:	ldr	r1, [pc, #40]	; 409dc <serialGetStream@@Base+0x58>
   409b0:	ldr	r0, [r5]
   409b4:	add	r1, pc, r1
   409b8:	bl	f4d0 <fdopen@plt>
   409bc:	cmp	r0, #0
   409c0:	mov	r4, r0
   409c4:	str	r0, [r5, #4]
   409c8:	bne	40998 <serialGetStream@@Base+0x14>
   409cc:	ldr	r0, [pc, #12]	; 409e0 <serialGetStream@@Base+0x5c>
   409d0:	add	r0, pc, r0
   409d4:	bl	1c6fc <logSystemError@@Base>
   409d8:	b	40998 <serialGetStream@@Base+0x14>
   409dc:	andeq	r9, r1, r8, asr r0
   409e0:	andeq	r0, r1, r8, ror r7

000409e4 <isSerialDevice@@Base>:
   409e4:	ldr	r1, [pc, #88]	; 40a44 <isSerialDevice@@Base+0x60>
   409e8:	push	{r3, r4, r5, lr}
   409ec:	add	r1, pc, r1
   409f0:	mov	r5, r0
   409f4:	bl	1dadc <isQualifiedDevice@@Base>
   409f8:	subs	r4, r0, #0
   409fc:	beq	40a28 <isSerialDevice@@Base+0x44>
   40a00:	ldr	r3, [r5]
   40a04:	ldrb	r3, [r3]
   40a08:	cmp	r3, #0
   40a0c:	movne	r4, #1
   40a10:	ldreq	r3, [pc, #48]	; 40a48 <isSerialDevice@@Base+0x64>
   40a14:	moveq	r4, #1
   40a18:	addeq	r3, pc, r3
   40a1c:	streq	r3, [r5]
   40a20:	mov	r0, r4
   40a24:	pop	{r3, r4, r5, pc}
   40a28:	mov	r0, r5
   40a2c:	mov	r1, r4
   40a30:	bl	1dadc <isQualifiedDevice@@Base>
   40a34:	cmp	r0, #0
   40a38:	beq	40a00 <isSerialDevice@@Base+0x1c>
   40a3c:	mov	r0, r4
   40a40:	pop	{r3, r4, r5, pc}
   40a44:	andeq	r9, r1, r4, lsr #32
   40a48:	andeq	r9, r1, r0

00040a4c <serialPutInitialAttributes@@Base>:
   40a4c:	ldr	r3, [r0, #12]
   40a50:	mov	r1, #128	; 0x80
   40a54:	mov	r2, #5
   40a58:	str	r1, [r0, #8]
   40a5c:	orr	r3, r3, #32768	; 0x8000
   40a60:	str	r2, [r0]
   40a64:	str	r3, [r0, #12]
   40a68:	bx	lr

00040a6c <serialPutSpeed@@Base>:
   40a6c:	push	{r3, r4, r5, lr}
   40a70:	mov	r5, r0
   40a74:	mov	r4, r1
   40a78:	bl	f4a0 <cfsetospeed@plt>
   40a7c:	cmn	r0, #1
   40a80:	beq	40aa0 <serialPutSpeed@@Base+0x34>
   40a84:	mov	r0, r5
   40a88:	mov	r1, r4
   40a8c:	bl	f710 <cfsetispeed@plt>
   40a90:	cmn	r0, #1
   40a94:	beq	40ab4 <serialPutSpeed@@Base+0x48>
   40a98:	mov	r0, #1
   40a9c:	pop	{r3, r4, r5, pc}
   40aa0:	ldr	r0, [pc, #32]	; 40ac8 <serialPutSpeed@@Base+0x5c>
   40aa4:	add	r0, pc, r0
   40aa8:	bl	1c6fc <logSystemError@@Base>
   40aac:	mov	r0, #0
   40ab0:	pop	{r3, r4, r5, pc}
   40ab4:	ldr	r0, [pc, #16]	; 40acc <serialPutSpeed@@Base+0x60>
   40ab8:	add	r0, pc, r0
   40abc:	bl	1c6fc <logSystemError@@Base>
   40ac0:	mov	r0, #0
   40ac4:	pop	{r3, r4, r5, pc}
   40ac8:	andeq	r9, r1, r0, lsl #1
   40acc:	andeq	r9, r1, r0, rrx

00040ad0 <serialPutDataBits@@Base>:
   40ad0:	sub	r1, r1, #5
   40ad4:	mov	r3, r0
   40ad8:	cmp	r1, #3
   40adc:	addls	pc, pc, r1, lsl #2
   40ae0:	b	40b28 <serialPutDataBits@@Base+0x58>
   40ae4:	b	40b10 <serialPutDataBits@@Base+0x40>
   40ae8:	b	40af4 <serialPutDataBits@@Base+0x24>
   40aec:	b	40b20 <serialPutDataBits@@Base+0x50>
   40af0:	b	40b18 <serialPutDataBits@@Base+0x48>
   40af4:	mov	r2, #16
   40af8:	ldr	r1, [r3, #8]
   40afc:	mov	r0, #1
   40b00:	bic	r1, r1, #48	; 0x30
   40b04:	orr	r2, r2, r1
   40b08:	str	r2, [r3, #8]
   40b0c:	bx	lr
   40b10:	mov	r2, #0
   40b14:	b	40af8 <serialPutDataBits@@Base+0x28>
   40b18:	mov	r2, #48	; 0x30
   40b1c:	b	40af8 <serialPutDataBits@@Base+0x28>
   40b20:	mov	r2, #32
   40b24:	b	40af8 <serialPutDataBits@@Base+0x28>
   40b28:	mov	r0, #0
   40b2c:	bx	lr

00040b30 <serialPutStopBits@@Base>:
   40b30:	cmp	r1, #1
   40b34:	mov	r3, r0
   40b38:	beq	40b58 <serialPutStopBits@@Base+0x28>
   40b3c:	cmp	r1, #2
   40b40:	ldreq	r2, [r0, #8]
   40b44:	moveq	r0, #1
   40b48:	movne	r0, #0
   40b4c:	orreq	r2, r2, #64	; 0x40
   40b50:	streq	r2, [r3, #8]
   40b54:	bx	lr
   40b58:	ldr	r2, [r0, #8]
   40b5c:	mov	r0, r1
   40b60:	bic	r2, r2, #64	; 0x40
   40b64:	str	r2, [r3, #8]
   40b68:	bx	lr

00040b6c <serialPutParity@@Base>:
   40b6c:	ldr	r2, [r0, #8]
   40b70:	cmp	r1, #4
   40b74:	mov	r3, r0
   40b78:	bic	r2, r2, #768	; 0x300
   40b7c:	str	r2, [r0, #8]
   40b80:	beq	40bb0 <serialPutParity@@Base+0x44>
   40b84:	cmp	r1, #1
   40b88:	orreq	r2, r2, #512	; 0x200
   40b8c:	beq	40ba0 <serialPutParity@@Base+0x34>
   40b90:	cmp	r1, #2
   40b94:	beq	40ba0 <serialPutParity@@Base+0x34>
   40b98:	mov	r0, #0
   40b9c:	bx	lr
   40ba0:	orr	r2, r2, #256	; 0x100
   40ba4:	mov	r0, #1
   40ba8:	str	r2, [r3, #8]
   40bac:	bx	lr
   40bb0:	mov	r0, #1
   40bb4:	bx	lr

00040bb8 <serialPutFlowControl@@Base>:
   40bb8:	ldr	r3, [pc, #264]	; 40cc8 <serialPutFlowControl@@Base+0x110>
   40bbc:	mov	r2, #34	; 0x22
   40bc0:	ldr	ip, [pc, #260]	; 40ccc <serialPutFlowControl@@Base+0x114>
   40bc4:	add	r3, pc, r3
   40bc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   40bcc:	add	r5, r0, #8
   40bd0:	ldr	r8, [r3, ip]
   40bd4:	sub	sp, sp, #56	; 0x38
   40bd8:	cmp	r5, #0
   40bdc:	mov	r3, #0
   40be0:	mov	r9, #-2147483648	; 0x80000000
   40be4:	mov	r7, #4096	; 0x1000
   40be8:	ldr	sl, [r8]
   40bec:	mov	r6, #16
   40bf0:	mov	r4, #1024	; 0x400
   40bf4:	mov	ip, #1
   40bf8:	str	r0, [sp, #16]
   40bfc:	str	r0, [sp, #28]
   40c00:	str	r5, [sp, #4]
   40c04:	str	r9, [sp, #8]
   40c08:	str	sl, [sp, #52]	; 0x34
   40c0c:	str	r2, [sp, #12]
   40c10:	str	r7, [sp, #20]
   40c14:	str	r6, [sp, #24]
   40c18:	str	r4, [sp, #32]
   40c1c:	str	ip, [sp, #36]	; 0x24
   40c20:	str	r3, [sp, #40]	; 0x28
   40c24:	str	r3, [sp, #44]	; 0x2c
   40c28:	str	r3, [sp, #48]	; 0x30
   40c2c:	beq	40ca8 <serialPutFlowControl@@Base+0xf0>
   40c30:	add	r6, sp, r6
   40c34:	add	r9, sp, #4
   40c38:	add	r7, sp, #28
   40c3c:	mov	ip, r0
   40c40:	mov	r3, r6
   40c44:	b	40c80 <serialPutFlowControl@@Base+0xc8>
   40c48:	cmp	r4, #0
   40c4c:	ldreq	r2, [r5]
   40c50:	ldreq	r0, [r3, #-8]
   40c54:	biceq	r2, r2, r0
   40c58:	streq	r2, [r5]
   40c5c:	cmp	ip, #0
   40c60:	beq	40ca8 <serialPutFlowControl@@Base+0xf0>
   40c64:	rsb	r2, r9, r3
   40c68:	mov	r5, ip
   40c6c:	add	ip, r2, r7
   40c70:	add	r2, r2, r6
   40c74:	add	r3, r3, #12
   40c78:	ldr	ip, [ip, #-12]
   40c7c:	ldr	r2, [r2, #-4]
   40c80:	and	r4, r2, r1
   40c84:	cmp	r4, r2
   40c88:	bne	40c48 <serialPutFlowControl@@Base+0x90>
   40c8c:	ldr	r0, [r5]
   40c90:	bic	r1, r1, r2
   40c94:	cmp	ip, #0
   40c98:	ldr	r2, [r3, #-8]
   40c9c:	orr	r2, r0, r2
   40ca0:	str	r2, [r5]
   40ca4:	bne	40c64 <serialPutFlowControl@@Base+0xac>
   40ca8:	ldr	r2, [sp, #52]	; 0x34
   40cac:	mov	r0, r1
   40cb0:	ldr	r3, [r8]
   40cb4:	cmp	r2, r3
   40cb8:	bne	40cc4 <serialPutFlowControl@@Base+0x10c>
   40cbc:	add	sp, sp, #56	; 0x38
   40cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   40cc4:	bl	f950 <__stack_chk_fail@plt>
   40cc8:			; <UNDEFINED> instruction: 0x00031eb4
   40ccc:			; <UNDEFINED> instruction: 0x000003b4

00040cd0 <serialPutModemState@@Base>:
   40cd0:	ldr	r3, [r0, #8]
   40cd4:	cmp	r1, #0
   40cd8:	bicne	r3, r3, #2048	; 0x800
   40cdc:	orreq	r3, r3, #2048	; 0x800
   40ce0:	str	r3, [r0, #8]
   40ce4:	mov	r0, #1
   40ce8:	bx	lr

00040cec <serialGetDataBits@@Base>:
   40cec:	push	{r3, lr}
   40cf0:	ldr	r2, [r0, #8]
   40cf4:	and	r2, r2, #48	; 0x30
   40cf8:	cmp	r2, #16
   40cfc:	beq	40d4c <serialGetDataBits@@Base+0x60>
   40d00:	bls	40d24 <serialGetDataBits@@Base+0x38>
   40d04:	cmp	r2, #32
   40d08:	beq	40d1c <serialGetDataBits@@Base+0x30>
   40d0c:	cmp	r2, #48	; 0x30
   40d10:	bne	40d34 <serialGetDataBits@@Base+0x48>
   40d14:	mov	r0, #8
   40d18:	pop	{r3, pc}
   40d1c:	mov	r0, #7
   40d20:	pop	{r3, pc}
   40d24:	cmp	r2, #0
   40d28:	bne	40d34 <serialGetDataBits@@Base+0x48>
   40d2c:	mov	r0, #5
   40d30:	pop	{r3, pc}
   40d34:	ldr	r1, [pc, #24]	; 40d54 <serialGetDataBits@@Base+0x68>
   40d38:	mov	r0, #4
   40d3c:	add	r1, pc, r1
   40d40:	bl	1c634 <logMessage@@Base>
   40d44:	mov	r0, #0
   40d48:	pop	{r3, pc}
   40d4c:	mov	r0, #6
   40d50:	pop	{r3, pc}
   40d54:	strdeq	r8, [r1], -r4

00040d58 <serialGetStopBits@@Base>:
   40d58:	ldr	r3, [r0, #8]
   40d5c:	tst	r3, #64	; 0x40
   40d60:	moveq	r0, #1
   40d64:	movne	r0, #2
   40d68:	bx	lr

00040d6c <serialGetParityBits@@Base>:
   40d6c:	ldr	r0, [r0, #8]
   40d70:	ubfx	r0, r0, #8, #1
   40d74:	bx	lr

00040d78 <serialGetAttributes@@Base>:
   40d78:	push	{r3, lr}
   40d7c:	ldr	r0, [r0]
   40d80:	bl	fc98 <tcgetattr@plt>
   40d84:	cmn	r0, #1
   40d88:	beq	40d94 <serialGetAttributes@@Base+0x1c>
   40d8c:	mov	r0, #1
   40d90:	pop	{r3, pc}
   40d94:	ldr	r0, [pc, #12]	; 40da8 <serialGetAttributes@@Base+0x30>
   40d98:	add	r0, pc, r0
   40d9c:	bl	1c6fc <logSystemError@@Base>
   40da0:	mov	r0, #0
   40da4:	pop	{r3, pc}
   40da8:	andeq	r8, r1, r0, asr #27

00040dac <serialPutAttributes@@Base>:
   40dac:	push	{r3, lr}
   40db0:	mov	r2, r1
   40db4:	ldr	r0, [r0]
   40db8:	mov	r1, #0
   40dbc:	bl	f8fc <tcsetattr@plt>
   40dc0:	cmn	r0, #1
   40dc4:	beq	40dd0 <serialPutAttributes@@Base+0x24>
   40dc8:	mov	r0, #1
   40dcc:	pop	{r3, pc}
   40dd0:	ldr	r0, [pc, #12]	; 40de4 <serialPutAttributes@@Base+0x38>
   40dd4:	add	r0, pc, r0
   40dd8:	bl	1c6fc <logSystemError@@Base>
   40ddc:	mov	r0, #0
   40de0:	pop	{r3, pc}
   40de4:	muleq	r1, r0, sp

00040de8 <serialCancelInput@@Base>:
   40de8:	push	{r3, lr}
   40dec:	mov	r1, #0
   40df0:	ldr	r0, [r0]
   40df4:	bl	f848 <tcflush@plt>
   40df8:	cmn	r0, #1
   40dfc:	beq	40e08 <serialCancelInput@@Base+0x20>
   40e00:	mov	r0, #1
   40e04:	pop	{r3, pc}
   40e08:	bl	fca4 <__errno_location@plt>
   40e0c:	ldr	r3, [r0]
   40e10:	cmp	r3, #22
   40e14:	beq	40e00 <serialCancelInput@@Base+0x18>
   40e18:	ldr	r0, [pc, #12]	; 40e2c <serialCancelInput@@Base+0x44>
   40e1c:	add	r0, pc, r0
   40e20:	bl	1c6fc <logSystemError@@Base>
   40e24:	mov	r0, #0
   40e28:	pop	{r3, pc}
   40e2c:	andeq	r8, r1, r4, asr sp

00040e30 <serialCancelOutput@@Base>:
   40e30:	push	{r3, lr}
   40e34:	mov	r1, #1
   40e38:	ldr	r0, [r0]
   40e3c:	bl	f848 <tcflush@plt>
   40e40:	cmn	r0, #1
   40e44:	beq	40e50 <serialCancelOutput@@Base+0x20>
   40e48:	mov	r0, #1
   40e4c:	pop	{r3, pc}
   40e50:	bl	fca4 <__errno_location@plt>
   40e54:	ldr	r3, [r0]
   40e58:	cmp	r3, #22
   40e5c:	beq	40e48 <serialCancelOutput@@Base+0x18>
   40e60:	ldr	r0, [pc, #12]	; 40e74 <serialCancelOutput@@Base+0x44>
   40e64:	add	r0, pc, r0
   40e68:	bl	1c6fc <logSystemError@@Base>
   40e6c:	mov	r0, #0
   40e70:	pop	{r3, pc}
   40e74:	andeq	r8, r1, r8, lsl sp

00040e78 <serialPollInput@@Base>:
   40e78:	ldr	r0, [r0]
   40e7c:	b	1eeb0 <awaitInput@@Base>

00040e80 <serialDrainOutput@@Base>:
   40e80:	push	{r4, lr}
   40e84:	mov	r4, r0
   40e88:	b	40e9c <serialDrainOutput@@Base+0x1c>
   40e8c:	bl	fca4 <__errno_location@plt>
   40e90:	ldr	r3, [r0]
   40e94:	cmp	r3, #4
   40e98:	bne	40eb4 <serialDrainOutput@@Base+0x34>
   40e9c:	ldr	r0, [r4]
   40ea0:	bl	fde8 <tcdrain@plt>
   40ea4:	cmn	r0, #1
   40ea8:	beq	40e8c <serialDrainOutput@@Base+0xc>
   40eac:	mov	r0, #1
   40eb0:	pop	{r4, pc}
   40eb4:	ldr	r0, [pc, #12]	; 40ec8 <serialDrainOutput@@Base+0x48>
   40eb8:	add	r0, pc, r0
   40ebc:	bl	1c6fc <logSystemError@@Base>
   40ec0:	mov	r0, #0
   40ec4:	pop	{r4, pc}
   40ec8:	ldrdeq	r8, [r1], -r0

00040ecc <serialGetData@@Base>:
   40ecc:	ldr	r0, [r0]
   40ed0:	b	1efb0 <readData@@Base>

00040ed4 <serialPutData@@Base>:
   40ed4:	ldr	r0, [r0]
   40ed8:	b	1f044 <writeData@@Base>

00040edc <serialGetLines@@Base>:
   40edc:	mov	r2, r0
   40ee0:	movw	r1, #21525	; 0x5415
   40ee4:	push	{r3, lr}
   40ee8:	ldr	r0, [r2], #188	; 0xbc
   40eec:	bl	f83c <ioctl@plt>
   40ef0:	cmn	r0, #1
   40ef4:	beq	40f00 <serialGetLines@@Base+0x24>
   40ef8:	mov	r0, #1
   40efc:	pop	{r3, pc}
   40f00:	ldr	r0, [pc, #12]	; 40f14 <serialGetLines@@Base+0x38>
   40f04:	add	r0, pc, r0
   40f08:	bl	1c6fc <logSystemError@@Base>
   40f0c:	mov	r0, #0
   40f10:	pop	{r3, pc}
   40f14:	andeq	r8, r1, ip, lsl #25

00040f18 <serialPutLines@@Base>:
   40f18:	ldr	r3, [pc, #144]	; 40fb0 <serialPutLines@@Base+0x98>
   40f1c:	ldr	ip, [pc, #144]	; 40fb4 <serialPutLines@@Base+0x9c>
   40f20:	add	r3, pc, r3
   40f24:	push	{r4, r5, r6, r7, lr}
   40f28:	sub	sp, sp, #12
   40f2c:	ldr	r4, [r3, ip]
   40f30:	mov	r6, r1
   40f34:	mov	r5, r2
   40f38:	mov	r7, r0
   40f3c:	ldr	r3, [r4]
   40f40:	str	r3, [sp, #4]
   40f44:	bl	40edc <serialGetLines@@Base>
   40f48:	cmp	r0, #0
   40f4c:	bne	40f68 <serialPutLines@@Base+0x50>
   40f50:	ldr	r2, [sp, #4]
   40f54:	ldr	r3, [r4]
   40f58:	cmp	r2, r3
   40f5c:	bne	40fac <serialPutLines@@Base+0x94>
   40f60:	add	sp, sp, #12
   40f64:	pop	{r4, r5, r6, r7, pc}
   40f68:	ldr	r3, [r7, #188]	; 0xbc
   40f6c:	add	r2, sp, #8
   40f70:	ldr	r0, [r7]
   40f74:	movw	r1, #21528	; 0x5418
   40f78:	orr	r6, r6, r3
   40f7c:	bic	r6, r6, r5
   40f80:	str	r6, [r2, #-8]!
   40f84:	mov	r2, sp
   40f88:	bl	f83c <ioctl@plt>
   40f8c:	cmn	r0, #1
   40f90:	movne	r0, #1
   40f94:	bne	40f50 <serialPutLines@@Base+0x38>
   40f98:	ldr	r0, [pc, #24]	; 40fb8 <serialPutLines@@Base+0xa0>
   40f9c:	add	r0, pc, r0
   40fa0:	bl	1c6fc <logSystemError@@Base>
   40fa4:	mov	r0, #0
   40fa8:	b	40f50 <serialPutLines@@Base+0x38>
   40fac:	bl	f950 <__stack_chk_fail@plt>
   40fb0:	andeq	r1, r3, r8, asr fp
   40fb4:			; <UNDEFINED> instruction: 0x000003b4
   40fb8:	andeq	r8, r1, r0, lsl #24

00040fbc <serialRegisterWaitLines@@Base>:
   40fbc:	mov	r0, #1
   40fc0:	bx	lr

00040fc4 <serialMonitorWaitLines@@Base>:
   40fc4:	push	{r3, lr}
   40fc8:	mov	r3, r0
   40fcc:	movw	r1, #21596	; 0x545c
   40fd0:	ldr	r0, [r0]
   40fd4:	ldr	r2, [r3, #192]	; 0xc0
   40fd8:	bl	f83c <ioctl@plt>
   40fdc:	cmn	r0, #1
   40fe0:	beq	40fec <serialMonitorWaitLines@@Base+0x28>
   40fe4:	mov	r0, #1
   40fe8:	pop	{r3, pc}
   40fec:	ldr	r0, [pc, #12]	; 41000 <serialMonitorWaitLines@@Base+0x3c>
   40ff0:	add	r0, pc, r0
   40ff4:	bl	1c6fc <logSystemError@@Base>
   40ff8:	mov	r0, #0
   40ffc:	pop	{r3, pc}
   41000:			; <UNDEFINED> instruction: 0x00018bb8

00041004 <serialConnectDevice@@Base>:
   41004:	push	{r3, r4, r5, lr}
   41008:	mov	r5, r1
   4100c:	mov	r4, r0
   41010:	movw	r1, #2306	; 0x902
   41014:	mov	r0, r5
   41018:	bl	f8c0 <open@plt>
   4101c:	cmn	r0, #1
   41020:	str	r0, [r4]
   41024:	beq	41088 <serialConnectDevice@@Base+0x84>
   41028:	bl	f9b0 <isatty@plt>
   4102c:	cmp	r0, #0
   41030:	bne	41058 <serialConnectDevice@@Base+0x54>
   41034:	ldr	r1, [pc, #120]	; 410b4 <serialConnectDevice@@Base+0xb0>
   41038:	mov	r2, r5
   4103c:	mov	r0, #3
   41040:	add	r1, pc, r1
   41044:	bl	1c634 <logMessage@@Base>
   41048:	ldr	r0, [r4]
   4104c:	bl	f764 <close@plt>
   41050:	mov	r0, #0
   41054:	pop	{r3, r4, r5, pc}
   41058:	mov	r0, r4
   4105c:	bl	404d0 <serialPrepareDevice@@Base>
   41060:	cmp	r0, #0
   41064:	beq	41048 <serialConnectDevice@@Base+0x44>
   41068:	ldr	r1, [pc, #72]	; 410b8 <serialConnectDevice@@Base+0xb4>
   4106c:	mov	r2, r5
   41070:	ldr	r3, [r4]
   41074:	mov	r0, #7
   41078:	add	r1, pc, r1
   4107c:	bl	1c634 <logMessage@@Base>
   41080:	mov	r0, #1
   41084:	pop	{r3, r4, r5, pc}
   41088:	bl	fca4 <__errno_location@plt>
   4108c:	ldr	r0, [r0]
   41090:	bl	f5c0 <strerror@plt>
   41094:	ldr	r1, [pc, #32]	; 410bc <serialConnectDevice@@Base+0xb8>
   41098:	mov	r2, r5
   4109c:	add	r1, pc, r1
   410a0:	mov	r3, r0
   410a4:	mov	r0, #3
   410a8:	bl	1c634 <logMessage@@Base>
   410ac:	mov	r0, #0
   410b0:	pop	{r3, r4, r5, pc}
   410b4:	muleq	r1, r4, fp
   410b8:	andeq	r8, r1, ip, lsr fp
   410bc:	andeq	r8, r1, r0, asr fp

000410c0 <serialDisconnectDevice@@Base>:
   410c0:	bx	lr

000410c4 <serialEnsureFileDescriptor@@Base>:
   410c4:	mov	r0, #1
   410c8:	bx	lr

000410cc <serialClearError@@Base>:
   410cc:	bx	lr
   410d0:	ldr	r3, [r0, #4]
   410d4:	ldrb	r2, [r1]
   410d8:	ldrb	r0, [r3, #2]
   410dc:	subs	r3, r0, r2
   410e0:	rsbs	r0, r3, #0
   410e4:	adcs	r0, r0, r3
   410e8:	bx	lr
   410ec:	push	{r3, lr}
   410f0:	ldr	r3, [r0]
   410f4:	mov	r0, r1
   410f8:	blx	r3
   410fc:	rsbs	r0, r0, #1
   41100:	movcc	r0, #0
   41104:	pop	{r3, pc}
   41108:	b	f4f4 <free@plt>

0004110c <usbStringEquals@@Base>:
   4110c:	push	{r3, lr}
   41110:	bl	fc5c <strcmp@plt>
   41114:	rsbs	r0, r0, #1
   41118:	movcc	r0, #0
   4111c:	pop	{r3, pc}

00041120 <usbStringMatches@@Base>:
   41120:	ldr	r3, [pc, #128]	; 411a8 <usbStringMatches@@Base+0x88>
   41124:	mov	r2, #9
   41128:	ldr	ip, [pc, #124]	; 411ac <usbStringMatches@@Base+0x8c>
   4112c:	add	r3, pc, r3
   41130:	push	{r4, r5, r6, lr}
   41134:	sub	sp, sp, #48	; 0x30
   41138:	ldr	r4, [r3, ip]
   4113c:	add	r5, sp, #12
   41140:	mov	r6, r0
   41144:	mov	r0, r5
   41148:	ldr	r3, [r4]
   4114c:	str	r3, [sp, #44]	; 0x2c
   41150:	bl	f554 <regcomp@plt>
   41154:	cmp	r0, #0
   41158:	movne	r6, #0
   4115c:	bne	41188 <usbStringMatches@@Base+0x68>
   41160:	mov	r2, r0
   41164:	str	r0, [sp]
   41168:	mov	r1, r6
   4116c:	mov	r3, r0
   41170:	mov	r0, r5
   41174:	bl	f62c <regexec@plt>
   41178:	rsbs	r6, r0, #1
   4117c:	mov	r0, r5
   41180:	movcc	r6, #0
   41184:	bl	f5f0 <regfree@plt>
   41188:	ldr	r2, [sp, #44]	; 0x2c
   4118c:	mov	r0, r6
   41190:	ldr	r3, [r4]
   41194:	cmp	r2, r3
   41198:	bne	411a4 <usbStringMatches@@Base+0x84>
   4119c:	add	sp, sp, #48	; 0x30
   411a0:	pop	{r4, r5, r6, pc}
   411a4:	bl	f950 <__stack_chk_fail@plt>
   411a8:	andeq	r1, r3, ip, asr #18
   411ac:			; <UNDEFINED> instruction: 0x000003b4
   411b0:	push	{r4, lr}
   411b4:	mov	r4, r0
   411b8:	ldr	r3, [r0, #4]
   411bc:	ldrb	r3, [r3, #2]
   411c0:	tst	r3, #128	; 0x80
   411c4:	beq	411f8 <usbStringMatches@@Base+0xd8>
   411c8:	ldr	r0, [r0, #12]
   411cc:	cmp	r0, #0
   411d0:	beq	411e0 <usbStringMatches@@Base+0xc0>
   411d4:	bl	2ac6c <deallocateQueue@@Base>
   411d8:	mov	r3, #0
   411dc:	str	r3, [r4, #12]
   411e0:	ldr	r0, [r4, #16]
   411e4:	cmp	r0, #0
   411e8:	beq	411f8 <usbStringMatches@@Base+0xd8>
   411ec:	bl	f4f4 <free@plt>
   411f0:	mov	r3, #0
   411f4:	str	r3, [r4, #16]
   411f8:	ldr	r0, [r4, #8]
   411fc:	cmp	r0, #0
   41200:	beq	41210 <usbStringMatches@@Base+0xf0>
   41204:	bl	45bb4 <usbDeallocateEndpointExtension@@Base>
   41208:	mov	r3, #0
   4120c:	str	r3, [r4, #8]
   41210:	mov	r0, r4
   41214:	pop	{r4, lr}
   41218:	b	f4f4 <free@plt>
   4121c:	mov	r3, r0
   41220:	ldr	r0, [r1]
   41224:	mov	r1, r3
   41228:	b	45668 <usbCancelRequest@@Base>
   4122c:	push	{r4, r5, r6, lr}
   41230:	mov	r4, r0
   41234:	ldm	r0, {r0, r3}
   41238:	sub	sp, sp, #8
   4123c:	mov	r2, #0
   41240:	ldrb	r1, [r3, #2]
   41244:	ldrh	r3, [r3, #4]
   41248:	str	r4, [sp]
   4124c:	bl	454cc <usbSubmitRequest@@Base>
   41250:	subs	r5, r0, #0
   41254:	beq	41278 <usbStringMatches@@Base+0x158>
   41258:	ldr	r0, [r4, #12]
   4125c:	mov	r1, r5
   41260:	bl	2ade4 <enqueueItem@@Base>
   41264:	subs	r6, r0, #0
   41268:	movne	r0, r6
   4126c:	beq	41280 <usbStringMatches@@Base+0x160>
   41270:	add	sp, sp, #8
   41274:	pop	{r4, r5, r6, pc}
   41278:	mov	r0, r5
   4127c:	b	41270 <usbStringMatches@@Base+0x150>
   41280:	ldr	r0, [r4]
   41284:	mov	r1, r5
   41288:	bl	45668 <usbCancelRequest@@Base>
   4128c:	mov	r0, r6
   41290:	b	41270 <usbStringMatches@@Base+0x150>

00041294 <usbControlRead@@Base>:
   41294:	push	{r4, r5, r6, r7, lr}
   41298:	sub	sp, sp, #28
   4129c:	mov	r7, r2
   412a0:	mov	r2, r1
   412a4:	ldrh	r6, [sp, #48]	; 0x30
   412a8:	mov	r1, #128	; 0x80
   412ac:	ldrh	r5, [sp, #52]	; 0x34
   412b0:	ldr	r4, [sp, #56]	; 0x38
   412b4:	ldrh	lr, [sp, #60]	; 0x3c
   412b8:	ldr	ip, [sp, #64]	; 0x40
   412bc:	str	r3, [sp]
   412c0:	mov	r3, r7
   412c4:	str	r6, [sp, #4]
   412c8:	str	r5, [sp, #8]
   412cc:	str	r4, [sp, #12]
   412d0:	str	lr, [sp, #16]
   412d4:	str	ip, [sp, #20]
   412d8:	bl	453dc <usbControlTransfer@@Base>
   412dc:	add	sp, sp, #28
   412e0:	pop	{r4, r5, r6, r7, pc}

000412e4 <usbControlWrite@@Base>:
   412e4:	push	{r4, r5, r6, r7, lr}
   412e8:	sub	sp, sp, #28
   412ec:	mov	r7, r2
   412f0:	mov	r2, r1
   412f4:	ldrh	r6, [sp, #48]	; 0x30
   412f8:	mov	r1, #0
   412fc:	ldrh	r5, [sp, #52]	; 0x34
   41300:	ldr	r4, [sp, #56]	; 0x38
   41304:	ldrh	lr, [sp, #60]	; 0x3c
   41308:	ldr	ip, [sp, #64]	; 0x40
   4130c:	str	r3, [sp]
   41310:	mov	r3, r7
   41314:	str	r6, [sp, #4]
   41318:	str	r5, [sp, #8]
   4131c:	str	r4, [sp, #12]
   41320:	str	lr, [sp, #16]
   41324:	str	ip, [sp, #20]
   41328:	bl	453dc <usbControlTransfer@@Base>
   4132c:	add	sp, sp, #28
   41330:	pop	{r4, r5, r6, r7, pc}

00041334 <usbGetDescriptor@@Base>:
   41334:	push	{lr}		; (str lr, [sp, #-4]!)
   41338:	sub	sp, sp, #28
   4133c:	orr	r2, r2, r1, lsl #8
   41340:	mov	r1, #0
   41344:	ldr	ip, [sp, #32]
   41348:	uxth	r3, r3
   4134c:	ldr	lr, [sp, #36]	; 0x24
   41350:	str	r2, [sp]
   41354:	mov	r2, r1
   41358:	str	ip, [sp, #8]
   4135c:	mov	ip, #255	; 0xff
   41360:	str	r3, [sp, #4]
   41364:	mov	r3, #6
   41368:	str	lr, [sp, #16]
   4136c:	str	ip, [sp, #12]
   41370:	bl	41294 <usbControlRead@@Base>
   41374:	add	sp, sp, #28
   41378:	pop	{pc}		; (ldr pc, [sp], #4)

0004137c <usbGetDeviceDescriptor@@Base>:
   4137c:	push	{r4, r5, r6, r7, lr}
   41380:	sub	sp, sp, #276	; 0x114
   41384:	ldr	lr, [pc, #124]	; 41408 <usbGetDeviceDescriptor@@Base+0x8c>
   41388:	mov	ip, #1000	; 0x3e8
   4138c:	ldr	r5, [pc, #120]	; 4140c <usbGetDeviceDescriptor@@Base+0x90>
   41390:	add	r7, sp, #12
   41394:	add	lr, pc, lr
   41398:	mov	r2, #0
   4139c:	mov	r4, r1
   413a0:	mov	r3, r2
   413a4:	ldr	r5, [lr, r5]
   413a8:	mov	r1, #1
   413ac:	stm	sp, {r7, ip}
   413b0:	ldr	ip, [r5]
   413b4:	str	ip, [sp, #268]	; 0x10c
   413b8:	bl	41334 <usbGetDescriptor@@Base>
   413bc:	cmn	r0, #1
   413c0:	mov	r6, r0
   413c4:	beq	413e8 <usbGetDeviceDescriptor@@Base+0x6c>
   413c8:	mov	ip, r7
   413cc:	ldm	ip!, {r0, r1, r2, r3}
   413d0:	ldrh	ip, [ip]
   413d4:	str	r0, [r4]
   413d8:	str	r1, [r4, #4]
   413dc:	strh	ip, [r4, #16]
   413e0:	str	r2, [r4, #8]
   413e4:	str	r3, [r4, #12]
   413e8:	ldr	r2, [sp, #268]	; 0x10c
   413ec:	mov	r0, r6
   413f0:	ldr	r3, [r5]
   413f4:	cmp	r2, r3
   413f8:	bne	41404 <usbGetDeviceDescriptor@@Base+0x88>
   413fc:	add	sp, sp, #276	; 0x114
   41400:	pop	{r4, r5, r6, r7, pc}
   41404:	bl	f950 <__stack_chk_fail@plt>
   41408:	andeq	r1, r3, r4, ror #13
   4140c:			; <UNDEFINED> instruction: 0x000003b4

00041410 <usbGetLanguage@@Base>:
   41410:	ldr	r3, [pc, #172]	; 414c4 <usbGetLanguage@@Base+0xb4>
   41414:	ldr	ip, [pc, #172]	; 414c8 <usbGetLanguage@@Base+0xb8>
   41418:	add	r3, pc, r3
   4141c:	push	{r4, r5, lr}
   41420:	sub	sp, sp, #276	; 0x114
   41424:	ldr	r4, [r3, ip]
   41428:	add	ip, sp, #12
   4142c:	str	r2, [sp, #4]
   41430:	mov	r2, #0
   41434:	str	ip, [sp]
   41438:	mov	r3, r2
   4143c:	ldr	ip, [r4]
   41440:	mov	r5, r1
   41444:	mov	r1, #3
   41448:	str	ip, [sp, #268]	; 0x10c
   4144c:	bl	41334 <usbGetDescriptor@@Base>
   41450:	cmn	r0, #1
   41454:	moveq	r3, #0
   41458:	beq	41474 <usbGetLanguage@@Base+0x64>
   4145c:	cmp	r0, #3
   41460:	bgt	41490 <usbGetLanguage@@Base+0x80>
   41464:	bl	fca4 <__errno_location@plt>
   41468:	mov	r3, #0
   4146c:	mov	r2, #5
   41470:	str	r2, [r0]
   41474:	ldr	r2, [sp, #268]	; 0x10c
   41478:	mov	r0, r3
   4147c:	ldr	r3, [r4]
   41480:	cmp	r2, r3
   41484:	bne	414c0 <usbGetLanguage@@Base+0xb0>
   41488:	add	sp, sp, #276	; 0x114
   4148c:	pop	{r4, r5, pc}
   41490:	add	ip, sp, #272	; 0x110
   41494:	movw	r3, #65278	; 0xfefe
   41498:	movt	r3, #65535	; 0xffff
   4149c:	ldr	r1, [pc, #40]	; 414cc <usbGetLanguage@@Base+0xbc>
   414a0:	mov	r0, #7
   414a4:	ldrh	r3, [ip, r3]
   414a8:	add	r1, pc, r1
   414ac:	uxth	r2, r3
   414b0:	strh	r2, [r5]
   414b4:	bl	1c634 <logMessage@@Base>
   414b8:	mov	r3, #1
   414bc:	b	41474 <usbGetLanguage@@Base+0x64>
   414c0:	bl	f950 <__stack_chk_fail@plt>
   414c4:	andeq	r1, r3, r0, ror #12
   414c8:			; <UNDEFINED> instruction: 0x000003b4
   414cc:	andeq	r8, r1, r8, ror #14

000414d0 <usbDecodeString@@Base>:
   414d0:	push	{r3, r4, r5, r6, r7, lr}
   414d4:	mov	r4, r0
   414d8:	ldrb	r7, [r0]
   414dc:	sub	r7, r7, #2
   414e0:	lsr	r5, r7, #1
   414e4:	add	r0, r5, #1
   414e8:	bl	fb48 <malloc@plt>
   414ec:	subs	r6, r0, #0
   414f0:	beq	41538 <usbDecodeString@@Base+0x68>
   414f4:	cmp	r5, #0
   414f8:	mov	r3, #0
   414fc:	add	ip, r6, r5
   41500:	strb	r3, [r6, r7, lsr #1]
   41504:	sub	r3, r5, #1
   41508:	beq	41530 <usbDecodeString@@Base+0x60>
   4150c:	add	r1, r4, r3, lsl #1
   41510:	sub	r3, r3, #1
   41514:	mov	r2, #63	; 0x3f
   41518:	ldrh	r1, [r1, #2]
   4151c:	tst	r1, #65280	; 0xff00
   41520:	uxtbeq	r2, r1
   41524:	cmn	r3, #1
   41528:	strb	r2, [ip, #-1]!
   4152c:	bne	4150c <usbDecodeString@@Base+0x3c>
   41530:	mov	r0, r6
   41534:	pop	{r3, r4, r5, r6, r7, pc}
   41538:	ldr	r0, [pc, #8]	; 41548 <usbDecodeString@@Base+0x78>
   4153c:	add	r0, pc, r0
   41540:	bl	1c6fc <logSystemError@@Base>
   41544:	b	41530 <usbDecodeString@@Base+0x60>
   41548:	andeq	r8, r1, r8, ror #13

0004154c <usbGetString@@Base>:
   4154c:	ldr	ip, [pc, #148]	; 415e8 <usbGetString@@Base+0x9c>
   41550:	push	{r4, r5, r6, r7, lr}
   41554:	add	ip, pc, ip
   41558:	ldr	lr, [pc, #140]	; 415ec <usbGetString@@Base+0xa0>
   4155c:	sub	sp, sp, #276	; 0x114
   41560:	ldrh	r3, [r0, #48]	; 0x30
   41564:	mov	r4, r0
   41568:	mov	r6, r1
   4156c:	mov	r7, r2
   41570:	ldr	r5, [ip, lr]
   41574:	cmp	r3, #0
   41578:	ldr	ip, [r5]
   4157c:	str	ip, [sp, #268]	; 0x10c
   41580:	bne	41598 <usbGetString@@Base+0x4c>
   41584:	add	r1, r0, #48	; 0x30
   41588:	bl	41410 <usbGetLanguage@@Base>
   4158c:	cmp	r0, #0
   41590:	ldrhne	r3, [r4, #48]	; 0x30
   41594:	beq	415dc <usbGetString@@Base+0x90>
   41598:	mov	r0, r4
   4159c:	str	r7, [sp, #4]
   415a0:	mov	r2, r6
   415a4:	add	r4, sp, #12
   415a8:	mov	r1, #3
   415ac:	str	r4, [sp]
   415b0:	bl	41334 <usbGetDescriptor@@Base>
   415b4:	cmn	r0, #1
   415b8:	beq	415dc <usbGetString@@Base+0x90>
   415bc:	mov	r0, r4
   415c0:	bl	414d0 <usbDecodeString@@Base>
   415c4:	ldr	r2, [sp, #268]	; 0x10c
   415c8:	ldr	r3, [r5]
   415cc:	cmp	r2, r3
   415d0:	bne	415e4 <usbGetString@@Base+0x98>
   415d4:	add	sp, sp, #276	; 0x114
   415d8:	pop	{r4, r5, r6, r7, pc}
   415dc:	mov	r0, #0
   415e0:	b	415c4 <usbGetString@@Base+0x78>
   415e4:	bl	f950 <__stack_chk_fail@plt>
   415e8:	andeq	r1, r3, r4, lsr #10
   415ec:			; <UNDEFINED> instruction: 0x000003b4

000415f0 <usbGetManufacturer@@Base>:
   415f0:	mov	r2, r1
   415f4:	ldrb	r1, [r0, #14]
   415f8:	b	4154c <usbGetString@@Base>

000415fc <usbGetProduct@@Base>:
   415fc:	mov	r2, r1
   41600:	ldrb	r1, [r0, #15]
   41604:	b	4154c <usbGetString@@Base>

00041608 <usbGetSerialNumber@@Base>:
   41608:	mov	r2, r1
   4160c:	ldrb	r1, [r0, #16]
   41610:	b	4154c <usbGetString@@Base>

00041614 <usbLogString@@Base>:
   41614:	cmp	r1, #0
   41618:	push	{r3, r4, r5, lr}
   4161c:	mov	r4, r2
   41620:	popeq	{r3, r4, r5, pc}
   41624:	mov	r2, #1000	; 0x3e8
   41628:	bl	4154c <usbGetString@@Base>
   4162c:	subs	r5, r0, #0
   41630:	popeq	{r3, r4, r5, pc}
   41634:	ldr	r1, [pc, #28]	; 41658 <usbLogString@@Base+0x44>
   41638:	mov	r2, r4
   4163c:	mov	r0, #6
   41640:	mov	r3, r5
   41644:	add	r1, pc, r1
   41648:	bl	1c634 <logMessage@@Base>
   4164c:	mov	r0, r5
   41650:	pop	{r3, r4, r5, lr}
   41654:	b	f4f4 <free@plt>
   41658:	strdeq	r8, [r1], -r4

0004165c <usbVerifyString@@Base>:
   4165c:	push	{r4, r5, r6, lr}
   41660:	subs	r4, r3, #0
   41664:	mov	r5, r1
   41668:	beq	4168c <usbVerifyString@@Base+0x30>
   4166c:	ldrb	r3, [r4]
   41670:	cmp	r3, #0
   41674:	beq	4168c <usbVerifyString@@Base+0x30>
   41678:	cmp	r2, #0
   4167c:	bne	41694 <usbVerifyString@@Base+0x38>
   41680:	mov	r4, #0
   41684:	mov	r0, r4
   41688:	pop	{r4, r5, r6, pc}
   4168c:	mov	r0, #1
   41690:	pop	{r4, r5, r6, pc}
   41694:	mov	r1, r2
   41698:	mov	r2, #1000	; 0x3e8
   4169c:	bl	4154c <usbGetString@@Base>
   416a0:	subs	r6, r0, #0
   416a4:	beq	41680 <usbVerifyString@@Base+0x24>
   416a8:	mov	r1, r4
   416ac:	blx	r5
   416b0:	adds	r4, r0, #0
   416b4:	mov	r0, r6
   416b8:	movne	r4, #1
   416bc:	bl	f4f4 <free@plt>
   416c0:	mov	r0, r4
   416c4:	pop	{r4, r5, r6, pc}

000416c8 <usbVerifyManufacturer@@Base>:
   416c8:	ldr	ip, [pc, #32]	; 416f0 <usbVerifyManufacturer@@Base+0x28>
   416cc:	mov	r3, r1
   416d0:	push	{r4}		; (str r4, [sp, #-4]!)
   416d4:	add	ip, pc, ip
   416d8:	ldr	r4, [pc, #20]	; 416f4 <usbVerifyManufacturer@@Base+0x2c>
   416dc:	mov	r1, ip
   416e0:	ldrb	r2, [r0, #14]
   416e4:	ldr	r1, [r1, r4]
   416e8:	pop	{r4}		; (ldr r4, [sp], #4)
   416ec:	b	4165c <usbVerifyString@@Base>
   416f0:	andeq	r1, r3, r4, lsr #7
   416f4:	andeq	r0, r0, ip, asr #10

000416f8 <usbVerifyProduct@@Base>:
   416f8:	ldr	ip, [pc, #32]	; 41720 <usbVerifyProduct@@Base+0x28>
   416fc:	mov	r3, r1
   41700:	push	{r4}		; (str r4, [sp, #-4]!)
   41704:	add	ip, pc, ip
   41708:	ldr	r4, [pc, #20]	; 41724 <usbVerifyProduct@@Base+0x2c>
   4170c:	mov	r1, ip
   41710:	ldrb	r2, [r0, #15]
   41714:	ldr	r1, [r1, r4]
   41718:	pop	{r4}		; (ldr r4, [sp], #4)
   4171c:	b	4165c <usbVerifyString@@Base>
   41720:	andeq	r1, r3, r4, ror r3
   41724:	andeq	r0, r0, ip, asr #10

00041728 <usbVerifySerialNumber@@Base>:
   41728:	ldr	ip, [pc, #32]	; 41750 <usbVerifySerialNumber@@Base+0x28>
   4172c:	mov	r3, r1
   41730:	push	{r4}		; (str r4, [sp, #-4]!)
   41734:	add	ip, pc, ip
   41738:	ldr	r4, [pc, #20]	; 41754 <usbVerifySerialNumber@@Base+0x2c>
   4173c:	mov	r1, ip
   41740:	ldrb	r2, [r0, #16]
   41744:	ldr	r1, [r1, r4]
   41748:	pop	{r4}		; (ldr r4, [sp], #4)
   4174c:	b	4165c <usbVerifyString@@Base>
   41750:	andeq	r1, r3, r4, asr #6
   41754:	andeq	r0, r0, r8, ror r4

00041758 <usbDeviceDescriptor@@Base>:
   41758:	bx	lr

0004175c <usbGetConfiguration@@Base>:
   4175c:	push	{r4, r5, lr}
   41760:	sub	sp, sp, #28
   41764:	mov	r4, #0
   41768:	mov	r5, #1
   4176c:	str	r1, [sp, #8]
   41770:	mov	ip, #1000	; 0x3e8
   41774:	str	r4, [sp]
   41778:	mov	r1, r4
   4177c:	str	r4, [sp, #4]
   41780:	mov	r2, r4
   41784:	str	r5, [sp, #12]
   41788:	mov	r3, #8
   4178c:	str	ip, [sp, #16]
   41790:	bl	41294 <usbControlRead@@Base>
   41794:	cmn	r0, #1
   41798:	movne	r0, r5
   4179c:	beq	417a8 <usbGetConfiguration@@Base+0x4c>
   417a0:	add	sp, sp, #28
   417a4:	pop	{r4, r5, pc}
   417a8:	ldr	r1, [pc, #20]	; 417c4 <usbGetConfiguration@@Base+0x68>
   417ac:	mov	r0, #4
   417b0:	add	r1, pc, r1
   417b4:	bl	1c634 <logMessage@@Base>
   417b8:	mov	r0, r4
   417bc:	add	sp, sp, #28
   417c0:	pop	{r4, r5, pc}
   417c4:	muleq	r1, r4, r4

000417c8 <usbConfigurationDescriptor@@Base>:
   417c8:	ldr	r2, [pc, #460]	; 4199c <usbConfigurationDescriptor@@Base+0x1d4>
   417cc:	ldr	r1, [pc, #460]	; 419a0 <usbConfigurationDescriptor@@Base+0x1d8>
   417d0:	add	r2, pc, r2
   417d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   417d8:	sub	sp, sp, #288	; 0x120
   417dc:	ldr	r6, [r2, r1]
   417e0:	mov	r5, r0
   417e4:	ldr	r3, [r0, #32]
   417e8:	ldr	r2, [r6]
   417ec:	cmp	r3, #0
   417f0:	str	r2, [sp, #284]	; 0x11c
   417f4:	beq	41814 <usbConfigurationDescriptor@@Base+0x4c>
   417f8:	ldr	r2, [sp, #284]	; 0x11c
   417fc:	mov	r0, r3
   41800:	ldr	r3, [r6]
   41804:	cmp	r2, r3
   41808:	bne	41998 <usbConfigurationDescriptor@@Base+0x1d0>
   4180c:	add	sp, sp, #288	; 0x120
   41810:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   41814:	ldrb	r3, [r0, #17]
   41818:	cmp	r3, #1
   4181c:	movls	r2, #1
   41820:	strbls	r2, [sp, #27]
   41824:	bls	41850 <usbConfigurationDescriptor@@Base+0x88>
   41828:	add	r1, sp, #27
   4182c:	bl	4175c <usbGetConfiguration@@Base>
   41830:	cmp	r0, #0
   41834:	beq	41844 <usbConfigurationDescriptor@@Base+0x7c>
   41838:	ldrb	r2, [sp, #27]
   4183c:	cmp	r2, #0
   41840:	bne	4184c <usbConfigurationDescriptor@@Base+0x84>
   41844:	ldr	r3, [r5, #32]
   41848:	b	417f8 <usbConfigurationDescriptor@@Base+0x30>
   4184c:	ldrb	r3, [r5, #17]
   41850:	cmp	r3, #0
   41854:	beq	418d0 <usbConfigurationDescriptor@@Base+0x108>
   41858:	ldr	r9, [pc, #324]	; 419a4 <usbConfigurationDescriptor@@Base+0x1dc>
   4185c:	add	r7, sp, #28
   41860:	mov	r4, #0
   41864:	mov	r8, #1000	; 0x3e8
   41868:	add	r9, pc, r9
   4186c:	b	41894 <usbConfigurationDescriptor@@Base+0xcc>
   41870:	ldrb	r3, [sp, #33]	; 0x21
   41874:	ldrb	r2, [sp, #27]
   41878:	cmp	r3, r2
   4187c:	beq	418e8 <usbConfigurationDescriptor@@Base+0x120>
   41880:	add	r4, r4, #1
   41884:	ldrb	r3, [r5, #17]
   41888:	uxtb	r4, r4
   4188c:	cmp	r3, r4
   41890:	bls	418d0 <usbConfigurationDescriptor@@Base+0x108>
   41894:	str	r7, [sp]
   41898:	mov	r0, r5
   4189c:	str	r8, [sp, #4]
   418a0:	mov	r1, #2
   418a4:	mov	r2, r4
   418a8:	mov	r3, #0
   418ac:	bl	41334 <usbGetDescriptor@@Base>
   418b0:	mov	sl, #1000	; 0x3e8
   418b4:	cmn	r0, #1
   418b8:	bne	41870 <usbConfigurationDescriptor@@Base+0xa8>
   418bc:	mov	r0, #4
   418c0:	mov	r1, r9
   418c4:	mov	r2, r4
   418c8:	bl	1c634 <logMessage@@Base>
   418cc:	b	41880 <usbConfigurationDescriptor@@Base+0xb8>
   418d0:	ldrb	r2, [sp, #27]
   418d4:	ldr	r1, [pc, #204]	; 419a8 <usbConfigurationDescriptor@@Base+0x1e0>
   418d8:	mov	r0, #3
   418dc:	add	r1, pc, r1
   418e0:	bl	1c634 <logMessage@@Base>
   418e4:	b	41844 <usbConfigurationDescriptor@@Base+0x7c>
   418e8:	ldrb	r3, [r5, #17]
   418ec:	cmp	r3, r4
   418f0:	bls	418d4 <usbConfigurationDescriptor@@Base+0x10c>
   418f4:	add	r2, sp, #288	; 0x120
   418f8:	movw	r3, #65278	; 0xfefe
   418fc:	movt	r3, #65535	; 0xffff
   41900:	ldrh	r3, [r2, r3]
   41904:	uxth	r8, r3
   41908:	mov	r0, r8
   4190c:	bl	fb48 <malloc@plt>
   41910:	subs	r9, r0, #0
   41914:	beq	41984 <usbConfigurationDescriptor@@Base+0x1bc>
   41918:	cmp	r8, #256	; 0x100
   4191c:	bls	41964 <usbConfigurationDescriptor@@Base+0x19c>
   41920:	mov	ip, #0
   41924:	orr	r4, r4, #512	; 0x200
   41928:	mov	r1, ip
   4192c:	str	r4, [sp]
   41930:	str	r9, [sp, #8]
   41934:	mov	r2, ip
   41938:	str	r8, [sp, #12]
   4193c:	mov	r0, r5
   41940:	str	sl, [sp, #16]
   41944:	mov	r3, #6
   41948:	str	ip, [sp, #4]
   4194c:	bl	41294 <usbControlRead@@Base>
   41950:	cmn	r0, #1
   41954:	beq	41974 <usbConfigurationDescriptor@@Base+0x1ac>
   41958:	mov	r3, r9
   4195c:	str	r9, [r5, #32]
   41960:	b	417f8 <usbConfigurationDescriptor@@Base+0x30>
   41964:	mov	r1, r7
   41968:	mov	r2, r8
   4196c:	bl	fb24 <memcpy@plt>
   41970:	b	41958 <usbConfigurationDescriptor@@Base+0x190>
   41974:	mov	r0, r9
   41978:	bl	f4f4 <free@plt>
   4197c:	ldr	r3, [r5, #32]
   41980:	b	417f8 <usbConfigurationDescriptor@@Base+0x30>
   41984:	ldr	r0, [pc, #32]	; 419ac <usbConfigurationDescriptor@@Base+0x1e4>
   41988:	add	r0, pc, r0
   4198c:	bl	1c6fc <logSystemError@@Base>
   41990:	ldr	r3, [r5, #32]
   41994:	b	417f8 <usbConfigurationDescriptor@@Base+0x30>
   41998:	bl	f950 <__stack_chk_fail@plt>
   4199c:	andeq	r1, r3, r8, lsr #5
   419a0:			; <UNDEFINED> instruction: 0x000003b4
   419a4:	andeq	r8, r1, r4, lsl r4
   419a8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   419ac:	andeq	r8, r1, r4, lsr #6

000419b0 <usbNextDescriptor@@Base>:
   419b0:	push	{r4, r5, lr}
   419b4:	mov	r4, r0
   419b8:	ldr	r3, [r1]
   419bc:	sub	sp, sp, #12
   419c0:	cmp	r3, #0
   419c4:	beq	41a14 <usbNextDescriptor@@Base+0x64>
   419c8:	ldr	r2, [r0, #32]
   419cc:	ldrb	r4, [r3]
   419d0:	ldrh	ip, [r2, #2]
   419d4:	add	r0, r3, r4
   419d8:	rsb	r5, r2, r0
   419dc:	cmp	ip, r5
   419e0:	bls	41a08 <usbNextDescriptor@@Base+0x58>
   419e4:	ldrb	r3, [r3, r4]
   419e8:	add	r3, r0, r3
   419ec:	rsb	r2, r2, r3
   419f0:	cmp	ip, r2
   419f4:	strcs	r0, [r1]
   419f8:	movcs	r0, #1
   419fc:	bcc	41a08 <usbNextDescriptor@@Base+0x58>
   41a00:	add	sp, sp, #12
   41a04:	pop	{r4, r5, pc}
   41a08:	mov	r0, #0
   41a0c:	add	sp, sp, #12
   41a10:	pop	{r4, r5, pc}
   41a14:	str	r1, [sp, #4]
   41a18:	bl	417c8 <usbConfigurationDescriptor@@Base>
   41a1c:	ldr	r1, [sp, #4]
   41a20:	cmp	r0, #0
   41a24:	ldrne	r3, [r4, #32]
   41a28:	movne	r0, #1
   41a2c:	strne	r3, [r1]
   41a30:	b	41a00 <usbNextDescriptor@@Base+0x50>

00041a34 <usbInterfaceDescriptor@@Base>:
   41a34:	ldr	r3, [pc, #184]	; 41af4 <usbInterfaceDescriptor@@Base+0xc0>
   41a38:	ldr	ip, [pc, #184]	; 41af8 <usbInterfaceDescriptor@@Base+0xc4>
   41a3c:	add	r3, pc, r3
   41a40:	push	{r4, r5, r6, r7, r8, r9, lr}
   41a44:	sub	sp, sp, #12
   41a48:	ldr	r9, [r3, ip]
   41a4c:	add	r5, sp, #8
   41a50:	mov	r6, r0
   41a54:	mov	r7, r1
   41a58:	mov	r8, r2
   41a5c:	mov	r2, #0
   41a60:	ldr	r3, [r9]
   41a64:	str	r2, [r5, #-8]!
   41a68:	str	r3, [sp, #4]
   41a6c:	mov	r0, r6
   41a70:	mov	r1, sp
   41a74:	bl	419b0 <usbNextDescriptor@@Base>
   41a78:	subs	r4, r0, #0
   41a7c:	beq	41ab0 <usbInterfaceDescriptor@@Base+0x7c>
   41a80:	ldr	ip, [sp]
   41a84:	ldrb	r4, [ip, #1]
   41a88:	cmp	r4, #4
   41a8c:	bne	41a6c <usbInterfaceDescriptor@@Base+0x38>
   41a90:	ldrb	r3, [ip, #2]
   41a94:	cmp	r3, r7
   41a98:	bne	41a6c <usbInterfaceDescriptor@@Base+0x38>
   41a9c:	ldrb	r3, [ip, #3]
   41aa0:	cmp	r3, r8
   41aa4:	bne	41a6c <usbInterfaceDescriptor@@Base+0x38>
   41aa8:	mov	r4, ip
   41aac:	b	41ad4 <usbInterfaceDescriptor@@Base+0xa0>
   41ab0:	ldr	r1, [pc, #68]	; 41afc <usbInterfaceDescriptor@@Base+0xc8>
   41ab4:	mov	r3, r8
   41ab8:	mov	r2, r7
   41abc:	mov	r0, #4
   41ac0:	add	r1, pc, r1
   41ac4:	bl	1c634 <logMessage@@Base>
   41ac8:	bl	fca4 <__errno_location@plt>
   41acc:	mov	r3, #2
   41ad0:	str	r3, [r0]
   41ad4:	ldr	r2, [sp, #4]
   41ad8:	mov	r0, r4
   41adc:	ldr	r3, [r9]
   41ae0:	cmp	r2, r3
   41ae4:	bne	41af0 <usbInterfaceDescriptor@@Base+0xbc>
   41ae8:	add	sp, sp, #12
   41aec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   41af0:	bl	f950 <__stack_chk_fail@plt>
   41af4:	andeq	r1, r3, ip, lsr r0
   41af8:			; <UNDEFINED> instruction: 0x000003b4
   41afc:	andeq	r8, r1, r0, asr #4

00041b00 <usbAlternativeCount@@Base>:
   41b00:	ldr	r2, [pc, #132]	; 41b8c <usbAlternativeCount@@Base+0x8c>
   41b04:	mov	r3, #0
   41b08:	ldr	ip, [pc, #128]	; 41b90 <usbAlternativeCount@@Base+0x90>
   41b0c:	add	r2, pc, r2
   41b10:	push	{r4, r5, r6, r7, r8, lr}
   41b14:	sub	sp, sp, #8
   41b18:	ldr	r8, [r2, ip]
   41b1c:	add	r4, sp, #8
   41b20:	mov	r7, r3
   41b24:	mov	r5, r0
   41b28:	str	r3, [r4, #-8]!
   41b2c:	mov	r6, r1
   41b30:	ldr	r3, [r8]
   41b34:	str	r3, [sp, #4]
   41b38:	mov	r0, r5
   41b3c:	mov	r1, sp
   41b40:	bl	419b0 <usbNextDescriptor@@Base>
   41b44:	cmp	r0, #0
   41b48:	beq	41b6c <usbAlternativeCount@@Base+0x6c>
   41b4c:	ldr	r3, [sp]
   41b50:	ldrb	r2, [r3, #1]
   41b54:	cmp	r2, #4
   41b58:	bne	41b38 <usbAlternativeCount@@Base+0x38>
   41b5c:	ldrb	r3, [r3, #2]
   41b60:	cmp	r3, r6
   41b64:	addeq	r7, r7, #1
   41b68:	b	41b38 <usbAlternativeCount@@Base+0x38>
   41b6c:	ldr	r2, [sp, #4]
   41b70:	mov	r0, r7
   41b74:	ldr	r3, [r8]
   41b78:	cmp	r2, r3
   41b7c:	bne	41b88 <usbAlternativeCount@@Base+0x88>
   41b80:	add	sp, sp, #8
   41b84:	pop	{r4, r5, r6, r7, r8, pc}
   41b88:	bl	f950 <__stack_chk_fail@plt>
   41b8c:	andeq	r0, r3, ip, ror #30
   41b90:			; <UNDEFINED> instruction: 0x000003b4

00041b94 <usbEndpointDescriptor@@Base>:
   41b94:	ldr	r3, [pc, #164]	; 41c40 <usbEndpointDescriptor@@Base+0xac>
   41b98:	ldr	r2, [pc, #164]	; 41c44 <usbEndpointDescriptor@@Base+0xb0>
   41b9c:	add	r3, pc, r3
   41ba0:	push	{r4, r5, r6, r7, r8, lr}
   41ba4:	sub	sp, sp, #8
   41ba8:	ldr	r8, [r3, r2]
   41bac:	add	r4, sp, #8
   41bb0:	mov	r5, r0
   41bb4:	mov	r7, r1
   41bb8:	mov	r1, #0
   41bbc:	str	r1, [r4, #-8]!
   41bc0:	ldr	r3, [r8]
   41bc4:	str	r3, [sp, #4]
   41bc8:	mov	r0, r5
   41bcc:	mov	r1, sp
   41bd0:	bl	419b0 <usbNextDescriptor@@Base>
   41bd4:	subs	r6, r0, #0
   41bd8:	beq	41c00 <usbEndpointDescriptor@@Base+0x6c>
   41bdc:	ldr	r3, [sp]
   41be0:	ldrb	ip, [r3, #1]
   41be4:	cmp	ip, #5
   41be8:	bne	41bc8 <usbEndpointDescriptor@@Base+0x34>
   41bec:	ldrb	r0, [r3, #2]
   41bf0:	cmp	r0, r7
   41bf4:	bne	41bc8 <usbEndpointDescriptor@@Base+0x34>
   41bf8:	mov	r6, r3
   41bfc:	b	41c20 <usbEndpointDescriptor@@Base+0x8c>
   41c00:	ldr	r1, [pc, #64]	; 41c48 <usbEndpointDescriptor@@Base+0xb4>
   41c04:	mov	r2, r7
   41c08:	mov	r0, #4
   41c0c:	add	r1, pc, r1
   41c10:	bl	1c634 <logMessage@@Base>
   41c14:	bl	fca4 <__errno_location@plt>
   41c18:	mov	r3, #2
   41c1c:	str	r3, [r0]
   41c20:	ldr	r2, [sp, #4]
   41c24:	mov	r0, r6
   41c28:	ldr	r3, [r8]
   41c2c:	cmp	r2, r3
   41c30:	bne	41c3c <usbEndpointDescriptor@@Base+0xa8>
   41c34:	add	sp, sp, #8
   41c38:	pop	{r4, r5, r6, r7, r8, pc}
   41c3c:	bl	f950 <__stack_chk_fail@plt>
   41c40:	ldrdeq	r0, [r3], -ip
   41c44:			; <UNDEFINED> instruction: 0x000003b4
   41c48:	andeq	r8, r1, r0, lsr #2

00041c4c <usbGetEndpoint@@Base>:
   41c4c:	push	{r4, r5, r6, lr}
   41c50:	sub	sp, sp, #24
   41c54:	add	r2, sp, #24
   41c58:	mov	r4, r0
   41c5c:	ldr	r0, [r0, #40]	; 0x28
   41c60:	strb	r1, [r2, #-1]!
   41c64:	ldr	r1, [pc, #352]	; 41dcc <usbGetEndpoint@@Base+0x180>
   41c68:	add	r1, pc, r1
   41c6c:	bl	2aebc <findItem@@Base>
   41c70:	cmp	r0, #0
   41c74:	beq	41c80 <usbGetEndpoint@@Base+0x34>
   41c78:	add	sp, sp, #24
   41c7c:	pop	{r4, r5, r6, pc}
   41c80:	mov	r0, r4
   41c84:	ldrb	r1, [sp, #23]
   41c88:	bl	41b94 <usbEndpointDescriptor@@Base>
   41c8c:	subs	r6, r0, #0
   41c90:	beq	41d88 <usbGetEndpoint@@Base+0x13c>
   41c94:	ldrb	r2, [r6, #2]
   41c98:	bic	r3, r2, #127	; 0x7f
   41c9c:	ands	r3, r3, #255	; 0xff
   41ca0:	beq	41d9c <usbGetEndpoint@@Base+0x150>
   41ca4:	cmp	r3, #128	; 0x80
   41ca8:	beq	41d90 <usbGetEndpoint@@Base+0x144>
   41cac:	ldr	r3, [pc, #284]	; 41dd0 <usbGetEndpoint@@Base+0x184>
   41cb0:	add	r3, pc, r3
   41cb4:	ldrb	r1, [r6, #3]
   41cb8:	and	r1, r1, #3
   41cbc:	cmp	r1, #2
   41cc0:	beq	41da8 <usbGetEndpoint@@Base+0x15c>
   41cc4:	cmp	r1, #3
   41cc8:	beq	41dc0 <usbGetEndpoint@@Base+0x174>
   41ccc:	cmp	r1, #1
   41cd0:	beq	41db4 <usbGetEndpoint@@Base+0x168>
   41cd4:	ldr	r1, [pc, #248]	; 41dd4 <usbGetEndpoint@@Base+0x188>
   41cd8:	add	r1, pc, r1
   41cdc:	str	r1, [sp]
   41ce0:	mov	r0, #7
   41ce4:	ldrh	ip, [r6, #4]
   41ce8:	ldr	r1, [pc, #232]	; 41dd8 <usbGetEndpoint@@Base+0x18c>
   41cec:	str	ip, [sp, #4]
   41cf0:	add	r1, pc, r1
   41cf4:	ldrb	ip, [r6, #6]
   41cf8:	str	ip, [sp, #8]
   41cfc:	bl	1c634 <logMessage@@Base>
   41d00:	mov	r0, #28
   41d04:	bl	fb48 <malloc@plt>
   41d08:	subs	r5, r0, #0
   41d0c:	beq	41d88 <usbGetEndpoint@@Base+0x13c>
   41d10:	add	r3, r5, #8
   41d14:	mov	r2, #0
   41d18:	mov	r0, r5
   41d1c:	str	r2, [r3], #4
   41d20:	str	r2, [r3], #4
   41d24:	str	r2, [r3], #4
   41d28:	str	r2, [r3], #4
   41d2c:	str	r2, [r3]
   41d30:	stm	r5, {r4, r6}
   41d34:	ldrb	r3, [r6, #2]
   41d38:	tst	r3, #128	; 0x80
   41d3c:	mov	r3, #0
   41d40:	strne	r2, [r5, #12]
   41d44:	strne	r2, [r5, #16]
   41d48:	strne	r2, [r5, #20]
   41d4c:	strne	r2, [r5, #24]
   41d50:	str	r3, [r5, #8]
   41d54:	bl	45b3c <usbAllocateEndpointExtension@@Base>
   41d58:	cmp	r0, #0
   41d5c:	beq	41d80 <usbGetEndpoint@@Base+0x134>
   41d60:	ldr	r0, [r4, #40]	; 0x28
   41d64:	mov	r1, r5
   41d68:	bl	2ade4 <enqueueItem@@Base>
   41d6c:	cmp	r0, #0
   41d70:	movne	r0, r5
   41d74:	bne	41c78 <usbGetEndpoint@@Base+0x2c>
   41d78:	ldr	r0, [r5, #8]
   41d7c:	bl	45bb4 <usbDeallocateEndpointExtension@@Base>
   41d80:	mov	r0, r5
   41d84:	bl	f4f4 <free@plt>
   41d88:	mov	r0, #0
   41d8c:	b	41c78 <usbGetEndpoint@@Base+0x2c>
   41d90:	ldr	r3, [pc, #68]	; 41ddc <usbGetEndpoint@@Base+0x190>
   41d94:	add	r3, pc, r3
   41d98:	b	41cb4 <usbGetEndpoint@@Base+0x68>
   41d9c:	ldr	r3, [pc, #60]	; 41de0 <usbGetEndpoint@@Base+0x194>
   41da0:	add	r3, pc, r3
   41da4:	b	41cb4 <usbGetEndpoint@@Base+0x68>
   41da8:	ldr	r1, [pc, #52]	; 41de4 <usbGetEndpoint@@Base+0x198>
   41dac:	add	r1, pc, r1
   41db0:	b	41cdc <usbGetEndpoint@@Base+0x90>
   41db4:	ldr	r1, [pc, #44]	; 41de8 <usbGetEndpoint@@Base+0x19c>
   41db8:	add	r1, pc, r1
   41dbc:	b	41cdc <usbGetEndpoint@@Base+0x90>
   41dc0:	ldr	r1, [pc, #36]	; 41dec <usbGetEndpoint@@Base+0x1a0>
   41dc4:	add	r1, pc, r1
   41dc8:	b	41cdc <usbGetEndpoint@@Base+0x90>
   41dcc:			; <UNDEFINED> instruction: 0xfffff460
   41dd0:	andeq	ip, r0, r4, lsr fp
   41dd4:	andeq	r8, r1, r8, lsl #1
   41dd8:	andeq	r8, r1, ip, ror r0
   41ddc:	andeq	r4, r1, r8, lsl #31
   41de0:			; <UNDEFINED> instruction: 0x00017fb8
   41de4:			; <UNDEFINED> instruction: 0x00017fbc
   41de8:	andeq	r7, r1, ip, lsr #31
   41dec:	muleq	r1, r8, pc	; <UNPREDICTABLE>

00041df0 <usbGetInputEndpoint@@Base>:
   41df0:	orr	r1, r1, #128	; 0x80
   41df4:	b	41c4c <usbGetEndpoint@@Base>

00041df8 <usbGetOutputEndpoint@@Base>:
   41df8:	b	41c4c <usbGetEndpoint@@Base>

00041dfc <usbAddInputFilter@@Base>:
   41dfc:	push	{r4, r5, r6, lr}
   41e00:	mov	r5, r0
   41e04:	mov	r0, #4
   41e08:	mov	r6, r1
   41e0c:	bl	fb48 <malloc@plt>
   41e10:	subs	r4, r0, #0
   41e14:	beq	41e38 <usbAddInputFilter@@Base+0x3c>
   41e18:	str	r6, [r4]
   41e1c:	mov	r1, r4
   41e20:	ldr	r0, [r5, #44]	; 0x2c
   41e24:	bl	2ade4 <enqueueItem@@Base>
   41e28:	subs	r5, r0, #0
   41e2c:	beq	41e40 <usbAddInputFilter@@Base+0x44>
   41e30:	mov	r0, #1
   41e34:	pop	{r4, r5, r6, pc}
   41e38:	mov	r0, r4
   41e3c:	pop	{r4, r5, r6, pc}
   41e40:	mov	r0, r4
   41e44:	bl	f4f4 <free@plt>
   41e48:	mov	r0, r5
   41e4c:	pop	{r4, r5, r6, pc}

00041e50 <usbApplyInputFilters@@Base>:
   41e50:	ldr	ip, [pc, #132]	; 41edc <usbApplyInputFilters@@Base+0x8c>
   41e54:	push	{r4, r5, lr}
   41e58:	mov	r5, r3
   41e5c:	ldr	r3, [pc, #124]	; 41ee0 <usbApplyInputFilters@@Base+0x90>
   41e60:	add	ip, pc, ip
   41e64:	sub	sp, sp, #20
   41e68:	ldr	lr, [r5]
   41e6c:	ldr	r0, [r0, #44]	; 0x2c
   41e70:	ldr	r4, [ip, r3]
   41e74:	stm	sp, {r1, r2}
   41e78:	mov	r2, sp
   41e7c:	ldr	r1, [pc, #96]	; 41ee4 <usbApplyInputFilters@@Base+0x94>
   41e80:	ldr	r3, [r4]
   41e84:	add	r1, pc, r1
   41e88:	str	lr, [sp, #8]
   41e8c:	str	r3, [sp, #12]
   41e90:	bl	2aed0 <processQueue@@Base>
   41e94:	cmp	r0, #0
   41e98:	beq	41ec8 <usbApplyInputFilters@@Base+0x78>
   41e9c:	bl	fca4 <__errno_location@plt>
   41ea0:	mov	r3, #0
   41ea4:	mov	r2, #5
   41ea8:	str	r2, [r0]
   41eac:	ldr	r2, [sp, #12]
   41eb0:	mov	r0, r3
   41eb4:	ldr	r3, [r4]
   41eb8:	cmp	r2, r3
   41ebc:	bne	41ed8 <usbApplyInputFilters@@Base+0x88>
   41ec0:	add	sp, sp, #20
   41ec4:	pop	{r4, r5, pc}
   41ec8:	ldr	r2, [sp, #8]
   41ecc:	mov	r3, #1
   41ed0:	str	r2, [r5]
   41ed4:	b	41eac <usbApplyInputFilters@@Base+0x5c>
   41ed8:	bl	f950 <__stack_chk_fail@plt>
   41edc:	andeq	r0, r3, r8, lsl ip
   41ee0:			; <UNDEFINED> instruction: 0x000003b4
   41ee4:			; <UNDEFINED> instruction: 0xfffff260

00041ee8 <usbCloseInterface@@Base>:
   41ee8:	push	{r4, lr}
   41eec:	mov	r4, r0
   41ef0:	ldr	r0, [r0, #40]	; 0x28
   41ef4:	cmp	r0, #0
   41ef8:	beq	41f00 <usbCloseInterface@@Base+0x18>
   41efc:	bl	2ac44 <deleteElements@@Base>
   41f00:	ldr	r3, [r4, #36]	; 0x24
   41f04:	cmp	r3, #0
   41f08:	popeq	{r4, pc}
   41f0c:	ldrb	r1, [r3, #2]
   41f10:	mov	r0, r4
   41f14:	bl	451ec <usbReleaseInterface@@Base>
   41f18:	mov	r3, #0
   41f1c:	str	r3, [r4, #36]	; 0x24
   41f20:	pop	{r4, pc}

00041f24 <usbConfigureDevice@@Base>:
   41f24:	push	{r4, r5, r6, lr}
   41f28:	mov	r6, r1
   41f2c:	mov	r4, r0
   41f30:	bl	41ee8 <usbCloseInterface@@Base>
   41f34:	mov	r0, r4
   41f38:	mov	r1, r6
   41f3c:	bl	44fa4 <usbSetConfiguration@@Base>
   41f40:	subs	r5, r0, #0
   41f44:	beq	41f6c <usbConfigureDevice@@Base+0x48>
   41f48:	ldr	r0, [r4, #32]
   41f4c:	cmp	r0, #0
   41f50:	beq	41f88 <usbConfigureDevice@@Base+0x64>
   41f54:	mov	r5, #1
   41f58:	bl	f4f4 <free@plt>
   41f5c:	mov	r3, #0
   41f60:	str	r3, [r4, #32]
   41f64:	mov	r0, r5
   41f68:	pop	{r4, r5, r6, pc}
   41f6c:	mov	r0, r4
   41f70:	bl	417c8 <usbConfigurationDescriptor@@Base>
   41f74:	cmp	r0, #0
   41f78:	beq	41f64 <usbConfigureDevice@@Base+0x40>
   41f7c:	ldrb	r3, [r0, #5]
   41f80:	cmp	r3, r6
   41f84:	bne	41f64 <usbConfigureDevice@@Base+0x40>
   41f88:	mov	r5, #1
   41f8c:	mov	r0, r5
   41f90:	pop	{r4, r5, r6, pc}

00041f94 <usbOpenInterface@@Base>:
   41f94:	ldr	r3, [pc, #348]	; 420f8 <usbOpenInterface@@Base+0x164>
   41f98:	ldr	ip, [pc, #348]	; 420fc <usbOpenInterface@@Base+0x168>
   41f9c:	add	r3, pc, r3
   41fa0:	push	{r4, r5, r6, r7, r8, lr}
   41fa4:	sub	sp, sp, #32
   41fa8:	ldr	r6, [r3, ip]
   41fac:	mov	r4, r0
   41fb0:	mov	r5, r1
   41fb4:	mov	r8, r2
   41fb8:	ldr	r3, [r6]
   41fbc:	str	r3, [sp, #28]
   41fc0:	bl	41a34 <usbInterfaceDescriptor@@Base>
   41fc4:	subs	r7, r0, #0
   41fc8:	beq	420a8 <usbOpenInterface@@Base+0x114>
   41fcc:	ldr	r3, [r4, #36]	; 0x24
   41fd0:	cmp	r7, r3
   41fd4:	beq	420c8 <usbOpenInterface@@Base+0x134>
   41fd8:	cmp	r3, #0
   41fdc:	beq	420b0 <usbOpenInterface@@Base+0x11c>
   41fe0:	ldrb	r3, [r3, #2]
   41fe4:	cmp	r3, r5
   41fe8:	beq	42000 <usbOpenInterface@@Base+0x6c>
   41fec:	mov	r0, r4
   41ff0:	bl	41ee8 <usbCloseInterface@@Base>
   41ff4:	ldr	r3, [r4, #36]	; 0x24
   41ff8:	cmp	r3, #0
   41ffc:	beq	420b0 <usbOpenInterface@@Base+0x11c>
   42000:	mov	r0, r4
   42004:	mov	r1, r5
   42008:	bl	41b00 <usbAlternativeCount@@Base>
   4200c:	cmp	r0, #1
   42010:	beq	42078 <usbOpenInterface@@Base+0xe4>
   42014:	mov	r1, #0
   42018:	mov	r3, #1
   4201c:	mov	r2, r1
   42020:	str	r1, [sp]
   42024:	str	r3, [sp, #12]
   42028:	mov	r1, r3
   4202c:	add	r0, sp, #24
   42030:	mov	r3, #1000	; 0x3e8
   42034:	str	r0, [sp, #8]
   42038:	mov	r0, r4
   4203c:	str	r3, [sp, #16]
   42040:	mov	r3, #10
   42044:	str	r5, [sp, #4]
   42048:	bl	41294 <usbControlRead@@Base>
   4204c:	cmn	r0, #1
   42050:	beq	420d0 <usbOpenInterface@@Base+0x13c>
   42054:	ldrb	r3, [sp, #24]
   42058:	cmp	r3, r8
   4205c:	beq	42078 <usbOpenInterface@@Base+0xe4>
   42060:	mov	r2, r8
   42064:	mov	r0, r4
   42068:	mov	r1, r5
   4206c:	bl	4529c <usbSetAlternative@@Base>
   42070:	subs	r8, r0, #0
   42074:	beq	4209c <usbOpenInterface@@Base+0x108>
   42078:	mov	r8, #1
   4207c:	str	r7, [r4, #36]	; 0x24
   42080:	ldr	r2, [sp, #28]
   42084:	mov	r0, r8
   42088:	ldr	r3, [r6]
   4208c:	cmp	r2, r3
   42090:	bne	420f4 <usbOpenInterface@@Base+0x160>
   42094:	add	sp, sp, #32
   42098:	pop	{r4, r5, r6, r7, r8, pc}
   4209c:	ldr	r3, [r4, #36]	; 0x24
   420a0:	cmp	r3, #0
   420a4:	beq	420e4 <usbOpenInterface@@Base+0x150>
   420a8:	mov	r8, #0
   420ac:	b	42080 <usbOpenInterface@@Base+0xec>
   420b0:	mov	r0, r4
   420b4:	mov	r1, r5
   420b8:	bl	45040 <usbClaimInterface@@Base>
   420bc:	cmp	r0, #0
   420c0:	bne	42000 <usbOpenInterface@@Base+0x6c>
   420c4:	b	420a8 <usbOpenInterface@@Base+0x114>
   420c8:	mov	r8, #1
   420cc:	b	42080 <usbOpenInterface@@Base+0xec>
   420d0:	ldr	r1, [pc, #40]	; 42100 <usbOpenInterface@@Base+0x16c>
   420d4:	mov	r0, #4
   420d8:	add	r1, pc, r1
   420dc:	bl	1c634 <logMessage@@Base>
   420e0:	b	42060 <usbOpenInterface@@Base+0xcc>
   420e4:	mov	r0, r4
   420e8:	mov	r1, r5
   420ec:	bl	451ec <usbReleaseInterface@@Base>
   420f0:	b	42080 <usbOpenInterface@@Base+0xec>
   420f4:	bl	f950 <__stack_chk_fail@plt>
   420f8:	ldrdeq	r0, [r3], -ip
   420fc:			; <UNDEFINED> instruction: 0x000003b4
   42100:	andeq	r7, r1, r0, asr #25

00042104 <usbCloseDevice@@Base>:
   42104:	push	{r4, lr}
   42108:	mov	r4, r0
   4210c:	bl	41ee8 <usbCloseInterface@@Base>
   42110:	ldr	r0, [r4, #40]	; 0x28
   42114:	cmp	r0, #0
   42118:	beq	42128 <usbCloseDevice@@Base+0x24>
   4211c:	bl	2ac6c <deallocateQueue@@Base>
   42120:	mov	r3, #0
   42124:	str	r3, [r4, #40]	; 0x28
   42128:	ldr	r0, [r4, #44]	; 0x2c
   4212c:	cmp	r0, #0
   42130:	beq	42140 <usbCloseDevice@@Base+0x3c>
   42134:	bl	2ac6c <deallocateQueue@@Base>
   42138:	mov	r3, #0
   4213c:	str	r3, [r4, #44]	; 0x2c
   42140:	ldr	r0, [r4, #20]
   42144:	cmp	r0, #0
   42148:	beq	42158 <usbCloseDevice@@Base+0x54>
   4214c:	bl	45be0 <usbDeallocateDeviceExtension@@Base>
   42150:	mov	r3, #0
   42154:	str	r3, [r4, #20]
   42158:	ldr	r0, [r4, #32]
   4215c:	cmp	r0, #0
   42160:	beq	42170 <usbCloseDevice@@Base+0x6c>
   42164:	bl	f4f4 <free@plt>
   42168:	mov	r3, #0
   4216c:	str	r3, [r4, #32]
   42170:	mov	r0, r4
   42174:	pop	{r4, lr}
   42178:	b	f4f4 <free@plt>

0004217c <usbTestDevice@@Base>:
   4217c:	push	{r4, r5, r6, r7, r8, lr}
   42180:	mov	r6, r0
   42184:	mov	r0, #52	; 0x34
   42188:	mov	r7, r1
   4218c:	mov	r8, r2
   42190:	bl	fb48 <malloc@plt>
   42194:	subs	r4, r0, #0
   42198:	beq	422d0 <usbTestDevice@@Base+0x154>
   4219c:	mov	r3, r4
   421a0:	mov	r5, #0
   421a4:	ldr	r0, [pc, #344]	; 42304 <usbTestDevice@@Base+0x188>
   421a8:	mov	r1, r5
   421ac:	str	r5, [r3], #4
   421b0:	add	r3, r3, #4
   421b4:	str	r5, [r4, #4]
   421b8:	add	r0, pc, r0
   421bc:	str	r5, [r3], #4
   421c0:	str	r5, [r3], #4
   421c4:	str	r5, [r3], #4
   421c8:	str	r5, [r3], #4
   421cc:	str	r5, [r3], #4
   421d0:	str	r5, [r3], #4
   421d4:	str	r5, [r3], #4
   421d8:	str	r5, [r3], #4
   421dc:	str	r5, [r3], #4
   421e0:	str	r5, [r3], #4
   421e4:	str	r5, [r3]
   421e8:	str	r5, [r4, #24]
   421ec:	str	r5, [r4, #28]
   421f0:	str	r6, [r4, #20]
   421f4:	bl	2abf4 <newQueue@@Base>
   421f8:	cmp	r0, r5
   421fc:	str	r0, [r4, #40]	; 0x28
   42200:	beq	422c8 <usbTestDevice@@Base+0x14c>
   42204:	ldr	r0, [pc, #252]	; 42308 <usbTestDevice@@Base+0x18c>
   42208:	mov	r1, r5
   4220c:	add	r0, pc, r0
   42210:	bl	2abf4 <newQueue@@Base>
   42214:	cmp	r0, r5
   42218:	str	r0, [r4, #44]	; 0x2c
   4221c:	beq	422c0 <usbTestDevice@@Base+0x144>
   42220:	mov	r0, r4
   42224:	bl	45b0c <usbReadDeviceDescriptor@@Base>
   42228:	cmp	r0, r5
   4222c:	beq	422b8 <usbTestDevice@@Base+0x13c>
   42230:	ldrb	r3, [r4, #1]
   42234:	cmp	r3, #1
   42238:	bne	422b8 <usbTestDevice@@Base+0x13c>
   4223c:	ldrb	r3, [r4]
   42240:	cmp	r3, #18
   42244:	bne	422b8 <usbTestDevice@@Base+0x13c>
   42248:	ldr	r1, [pc, #188]	; 4230c <usbTestDevice@@Base+0x190>
   4224c:	mov	r0, #7
   42250:	ldrh	r2, [r4, #8]
   42254:	add	r1, pc, r1
   42258:	ldrh	r3, [r4, #10]
   4225c:	bl	1c634 <logMessage@@Base>
   42260:	mov	r0, r4
   42264:	mov	r1, r8
   42268:	blx	r7
   4226c:	subs	r5, r0, #0
   42270:	beq	422e4 <usbTestDevice@@Base+0x168>
   42274:	ldr	r2, [pc, #148]	; 42310 <usbTestDevice@@Base+0x194>
   42278:	mov	r0, r4
   4227c:	ldrb	r1, [r4, #14]
   42280:	add	r2, pc, r2
   42284:	bl	41614 <usbLogString@@Base>
   42288:	ldr	r2, [pc, #132]	; 42314 <usbTestDevice@@Base+0x198>
   4228c:	mov	r0, r4
   42290:	ldrb	r1, [r4, #15]
   42294:	add	r2, pc, r2
   42298:	bl	41614 <usbLogString@@Base>
   4229c:	ldr	r2, [pc, #116]	; 42318 <usbTestDevice@@Base+0x19c>
   422a0:	mov	r0, r4
   422a4:	ldrb	r1, [r4, #16]
   422a8:	add	r2, pc, r2
   422ac:	bl	41614 <usbLogString@@Base>
   422b0:	mov	r0, r4
   422b4:	pop	{r4, r5, r6, r7, r8, pc}
   422b8:	ldr	r0, [r4, #44]	; 0x2c
   422bc:	bl	2ac6c <deallocateQueue@@Base>
   422c0:	ldr	r0, [r4, #40]	; 0x28
   422c4:	bl	2ac6c <deallocateQueue@@Base>
   422c8:	mov	r0, r4
   422cc:	bl	f4f4 <free@plt>
   422d0:	ldr	r0, [pc, #68]	; 4231c <usbTestDevice@@Base+0x1a0>
   422d4:	add	r0, pc, r0
   422d8:	bl	1c6fc <logSystemError@@Base>
   422dc:	mov	r0, #0
   422e0:	pop	{r4, r5, r6, r7, r8, pc}
   422e4:	bl	fca4 <__errno_location@plt>
   422e8:	mov	r3, #2
   422ec:	str	r3, [r0]
   422f0:	mov	r0, r4
   422f4:	str	r5, [r4, #20]
   422f8:	bl	42104 <usbCloseDevice@@Base>
   422fc:	mov	r0, r5
   42300:	pop	{r4, r5, r6, r7, r8, pc}
   42304:			; <UNDEFINED> instruction: 0xffffeff0
   42308:			; <UNDEFINED> instruction: 0xffffeef4
   4230c:	andeq	r7, r1, r0, asr #23
   42310:	andeq	r7, r1, ip, asr fp
   42314:	andeq	r7, r1, ip, asr fp
   42318:	andeq	r7, r1, ip, asr fp
   4231c:	strdeq	r7, [r1], -r8

00042320 <usbBeginInput@@Base>:
   42320:	push	{r4, r5, r6, lr}
   42324:	mov	r6, r2
   42328:	bl	41df0 <usbGetInputEndpoint@@Base>
   4232c:	subs	r4, r0, #0
   42330:	beq	423a0 <usbBeginInput@@Base+0x80>
   42334:	ldr	r0, [r4, #12]
   42338:	cmp	r0, #0
   4233c:	bne	42354 <usbBeginInput@@Base+0x34>
   42340:	b	42370 <usbBeginInput@@Base+0x50>
   42344:	bl	4122c <usbStringMatches@@Base+0x10c>
   42348:	cmp	r0, #0
   4234c:	beq	42368 <usbBeginInput@@Base+0x48>
   42350:	ldr	r0, [r4, #12]
   42354:	bl	2ac8c <getQueueSize@@Base>
   42358:	mov	r5, r0
   4235c:	cmp	r5, r6
   42360:	mov	r0, r4
   42364:	blt	42344 <usbBeginInput@@Base+0x24>
   42368:	mov	r0, r5
   4236c:	pop	{r4, r5, r6, pc}
   42370:	mov	r1, r0
   42374:	ldr	r0, [pc, #48]	; 423ac <usbBeginInput@@Base+0x8c>
   42378:	add	r0, pc, r0
   4237c:	bl	2abf4 <newQueue@@Base>
   42380:	cmp	r0, #0
   42384:	str	r0, [r4, #12]
   42388:	beq	423a0 <usbBeginInput@@Base+0x80>
   4238c:	mov	r1, r4
   42390:	bl	2ac9c <setQueueData@@Base>
   42394:	ldr	r0, [r4, #12]
   42398:	cmp	r0, #0
   4239c:	bne	42354 <usbBeginInput@@Base+0x34>
   423a0:	mov	r5, #0
   423a4:	mov	r0, r5
   423a8:	pop	{r4, r5, r6, pc}
   423ac:			; <UNDEFINED> instruction: 0xffffee9c
   423b0:	ldr	r3, [pc, #564]	; 425ec <usbBeginInput@@Base+0x2cc>
   423b4:	ldr	r2, [pc, #564]	; 425f0 <usbBeginInput@@Base+0x2d0>
   423b8:	add	r3, pc, r3
   423bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   423c0:	sub	sp, sp, #28
   423c4:	ldr	r8, [r3, r2]
   423c8:	mov	r7, r1
   423cc:	mov	r6, r0
   423d0:	ldr	sl, [pc, #540]	; 425f4 <usbBeginInput@@Base+0x2d4>
   423d4:	ldr	r3, [r8]
   423d8:	add	sl, pc, sl
   423dc:	str	r3, [sp, #20]
   423e0:	bl	41758 <usbDeviceDescriptor@@Base>
   423e4:	ldr	r5, [r7]
   423e8:	add	r4, r5, #20
   423ec:	ldrh	r3, [r5]
   423f0:	cmp	r3, #0
   423f4:	mov	fp, r0
   423f8:	bne	4241c <usbBeginInput@@Base+0xfc>
   423fc:	b	424c4 <usbBeginInput@@Base+0x1a4>
   42400:	ldrh	r1, [fp, #2]
   42404:	cmp	r1, r2
   42408:	beq	42428 <usbBeginInput@@Base+0x108>
   4240c:	ldrh	r3, [r5, #20]!
   42410:	add	r4, r4, #20
   42414:	cmp	r3, #0
   42418:	beq	424c4 <usbBeginInput@@Base+0x1a4>
   4241c:	ldrh	r2, [r4, #-16]
   42420:	cmp	r2, #0
   42424:	bne	42400 <usbBeginInput@@Base+0xe0>
   42428:	ldrh	r2, [fp, #8]
   4242c:	cmp	r2, r3
   42430:	bne	4240c <usbBeginInput@@Base+0xec>
   42434:	ldrh	r2, [fp, #10]
   42438:	ldrh	r3, [r4, #-18]	; 0xffffffee
   4243c:	cmp	r2, r3
   42440:	bne	4240c <usbBeginInput@@Base+0xec>
   42444:	ldrb	r3, [fp, #14]
   42448:	cmp	r3, #0
   4244c:	bne	4245c <usbBeginInput@@Base+0x13c>
   42450:	ldrb	r3, [fp, #15]
   42454:	cmp	r3, #0
   42458:	beq	424e0 <usbBeginInput@@Base+0x1c0>
   4245c:	mov	r0, r6
   42460:	ldr	r1, [r7, #4]
   42464:	bl	41728 <usbVerifySerialNumber@@Base>
   42468:	cmp	r0, #0
   4246c:	beq	424c4 <usbBeginInput@@Base+0x1a4>
   42470:	ldrb	r3, [r5, #11]
   42474:	tst	r3, #1
   42478:	bne	42528 <usbBeginInput@@Base+0x208>
   4247c:	mov	r0, r6
   42480:	ldrb	r1, [r4, #-14]
   42484:	bl	41f24 <usbConfigureDevice@@Base>
   42488:	cmp	r0, #0
   4248c:	beq	4240c <usbBeginInput@@Base+0xec>
   42490:	mov	r0, r6
   42494:	ldrb	r1, [r4, #-13]
   42498:	ldrb	r2, [r4, #-12]
   4249c:	bl	41f94 <usbOpenInterface@@Base>
   424a0:	cmp	r0, #0
   424a4:	beq	4240c <usbBeginInput@@Base+0xec>
   424a8:	mov	r0, r6
   424ac:	bl	44194 <usbSetSerialOperations@@Base>
   424b0:	cmp	r0, #0
   424b4:	bne	42534 <usbBeginInput@@Base+0x214>
   424b8:	mov	r0, r6
   424bc:	bl	41ee8 <usbCloseInterface@@Base>
   424c0:	b	4240c <usbBeginInput@@Base+0xec>
   424c4:	mov	r0, #0
   424c8:	ldr	r2, [sp, #20]
   424cc:	ldr	r3, [r8]
   424d0:	cmp	r2, r3
   424d4:	bne	425e8 <usbBeginInput@@Base+0x2c8>
   424d8:	add	sp, sp, #28
   424dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   424e0:	ldrb	r3, [fp, #16]
   424e4:	cmp	r3, #0
   424e8:	bne	4245c <usbBeginInput@@Base+0x13c>
   424ec:	mov	r0, r6
   424f0:	mov	r1, sp
   424f4:	bl	4137c <usbGetDeviceDescriptor@@Base>
   424f8:	cmp	r0, #18
   424fc:	bne	4245c <usbBeginInput@@Base+0x13c>
   42500:	mov	r0, #7
   42504:	mov	r1, sl
   42508:	bl	1c634 <logMessage@@Base>
   4250c:	mov	lr, sp
   42510:	ldm	lr!, {r0, r1, r2, r3}
   42514:	mov	ip, r6
   42518:	stmia	ip!, {r0, r1, r2, r3}
   4251c:	ldr	r3, [lr]
   42520:	strh	r3, [ip]
   42524:	b	4245c <usbBeginInput@@Base+0x13c>
   42528:	mov	r0, r6
   4252c:	bl	44e74 <usbDisableAutosuspend@@Base>
   42530:	b	4247c <usbBeginInput@@Base+0x15c>
   42534:	ldr	r3, [r6, #24]
   42538:	cmp	r3, #0
   4253c:	beq	4255c <usbBeginInput@@Base+0x23c>
   42540:	ldr	r3, [r3, #28]
   42544:	cmp	r3, #0
   42548:	beq	4255c <usbBeginInput@@Base+0x23c>
   4254c:	mov	r0, r6
   42550:	blx	r3
   42554:	cmp	r0, #0
   42558:	beq	424b8 <usbBeginInput@@Base+0x198>
   4255c:	ldr	r1, [r4, #-8]
   42560:	cmp	r1, #0
   42564:	beq	42578 <usbBeginInput@@Base+0x258>
   42568:	mov	r0, r6
   4256c:	bl	443c0 <usbSetSerialParameters@@Base>
   42570:	cmp	r0, #0
   42574:	beq	424b8 <usbBeginInput@@Base+0x198>
   42578:	ldrb	r1, [r4, #-11]
   4257c:	cmp	r1, #0
   42580:	bne	425b0 <usbBeginInput@@Base+0x290>
   42584:	ldrb	r1, [r4, #-10]
   42588:	cmp	r1, #0
   4258c:	bne	4259c <usbBeginInput@@Base+0x27c>
   42590:	str	r5, [r7]
   42594:	mov	r0, #1
   42598:	b	424c8 <usbBeginInput@@Base+0x1a8>
   4259c:	mov	r0, r6
   425a0:	bl	41df8 <usbGetOutputEndpoint@@Base>
   425a4:	cmp	r0, #0
   425a8:	bne	42590 <usbBeginInput@@Base+0x270>
   425ac:	b	424b8 <usbBeginInput@@Base+0x198>
   425b0:	mov	r0, r6
   425b4:	bl	41df0 <usbGetInputEndpoint@@Base>
   425b8:	cmp	r0, #0
   425bc:	beq	424b8 <usbBeginInput@@Base+0x198>
   425c0:	ldr	r3, [r0, #4]
   425c4:	ldrb	r3, [r3, #3]
   425c8:	and	r3, r3, #3
   425cc:	cmp	r3, #3
   425d0:	bne	42584 <usbBeginInput@@Base+0x264>
   425d4:	mov	r0, r6
   425d8:	ldrb	r1, [r4, #-11]
   425dc:	mov	r2, #8
   425e0:	bl	42320 <usbBeginInput@@Base>
   425e4:	b	42584 <usbBeginInput@@Base+0x264>
   425e8:	bl	f950 <__stack_chk_fail@plt>
   425ec:	andeq	r0, r3, r0, asr #13
   425f0:			; <UNDEFINED> instruction: 0x000003b4
   425f4:	andeq	r7, r1, r4, ror #20

000425f8 <usbAwaitInput@@Base>:
   425f8:	ldr	r3, [pc, #576]	; 42840 <usbAwaitInput@@Base+0x248>
   425fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42600:	mov	r6, r2
   42604:	ldr	r2, [pc, #568]	; 42844 <usbAwaitInput@@Base+0x24c>
   42608:	add	r3, pc, r3
   4260c:	sub	sp, sp, #60	; 0x3c
   42610:	mov	r5, r0
   42614:	mov	r7, r1
   42618:	ldr	r2, [r3, r2]
   4261c:	ldr	r3, [r2]
   42620:	str	r2, [sp, #8]
   42624:	str	r3, [sp, #52]	; 0x34
   42628:	bl	41df0 <usbGetInputEndpoint@@Base>
   4262c:	subs	r4, r0, #0
   42630:	beq	42674 <usbAwaitInput@@Base+0x7c>
   42634:	ldr	r3, [r4, #16]
   42638:	cmp	r3, #0
   4263c:	movne	r1, #1
   42640:	beq	4267c <usbAwaitInput@@Base+0x84>
   42644:	mov	r0, r1
   42648:	ldr	r1, [sp, #8]
   4264c:	ldr	r2, [sp, #52]	; 0x34
   42650:	ldr	r3, [r1]
   42654:	cmp	r2, r3
   42658:	bne	4283c <usbAwaitInput@@Base+0x244>
   4265c:	add	sp, sp, #60	; 0x3c
   42660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42664:	cmp	r3, #11
   42668:	beq	426ec <usbAwaitInput@@Base+0xf4>
   4266c:	mov	r0, r9
   42670:	bl	f4f4 <free@plt>
   42674:	mov	r1, #0
   42678:	b	42644 <usbAwaitInput@@Base+0x4c>
   4267c:	ldr	r3, [r4, #4]
   42680:	ldr	r0, [r4, #12]
   42684:	ldrb	r8, [r3, #6]
   42688:	cmp	r8, #20
   4268c:	movlt	r8, #20
   42690:	cmp	r0, #0
   42694:	beq	426a8 <usbAwaitInput@@Base+0xb0>
   42698:	bl	2ac8c <getQueueSize@@Base>
   4269c:	cmp	r0, #0
   426a0:	bne	4274c <usbAwaitInput@@Base+0x154>
   426a4:	ldr	r3, [r4, #4]
   426a8:	ldrh	sl, [r3, #4]
   426ac:	mov	r0, sl
   426b0:	bl	fb48 <malloc@plt>
   426b4:	subs	r9, r0, #0
   426b8:	beq	42830 <usbAwaitInput@@Base+0x238>
   426bc:	cmp	r6, #0
   426c0:	bne	427f8 <usbAwaitInput@@Base+0x200>
   426c4:	add	ip, sp, #32
   426c8:	str	r4, [sp, #12]
   426cc:	mov	fp, #20
   426d0:	mov	r4, ip
   426d4:	b	42710 <usbAwaitInput@@Base+0x118>
   426d8:	cmp	r0, #0
   426dc:	bne	42818 <usbAwaitInput@@Base+0x220>
   426e0:	bl	fca4 <__errno_location@plt>
   426e4:	mov	r1, #11
   426e8:	str	r1, [r0]
   426ec:	cmp	r6, #0
   426f0:	beq	4266c <usbAwaitInput@@Base+0x74>
   426f4:	mov	r0, r4
   426f8:	mov	r1, #0
   426fc:	bl	1ebf8 <afterTimePeriod@@Base>
   42700:	cmp	r0, #0
   42704:	bne	4266c <usbAwaitInput@@Base+0x74>
   42708:	mov	r0, r8
   4270c:	bl	1ec24 <approximateDelay@@Base>
   42710:	str	fp, [sp]
   42714:	mov	r0, r5
   42718:	mov	r1, r7
   4271c:	mov	r2, r9
   42720:	mov	r3, sl
   42724:	bl	45860 <usbReadEndpoint@@Base>
   42728:	cmn	r0, #1
   4272c:	bne	426d8 <usbAwaitInput@@Base+0xe0>
   42730:	bl	fca4 <__errno_location@plt>
   42734:	ldr	r3, [r0]
   42738:	cmp	r3, #110	; 0x6e
   4273c:	bne	42664 <usbAwaitInput@@Base+0x6c>
   42740:	mov	r2, #11
   42744:	str	r2, [r0]
   42748:	b	426ec <usbAwaitInput@@Base+0xf4>
   4274c:	cmp	r6, #0
   42750:	bne	42808 <usbAwaitInput@@Base+0x210>
   42754:	orr	r7, r7, #128	; 0x80
   42758:	add	sl, sp, #32
   4275c:	add	fp, sp, #20
   42760:	mov	r0, r5
   42764:	mov	r1, r7
   42768:	mov	r2, sl
   4276c:	mov	r3, #0
   42770:	bl	45768 <usbReapResponse@@Base>
   42774:	subs	r9, r0, #0
   42778:	beq	427a8 <usbAwaitInput@@Base+0x1b0>
   4277c:	mov	r0, r4
   42780:	bl	4122c <usbStringMatches@@Base+0x10c>
   42784:	ldr	r0, [r4, #12]
   42788:	mov	r1, r9
   4278c:	bl	2af48 <deleteItem@@Base>
   42790:	ldr	r3, [sp, #44]	; 0x2c
   42794:	cmp	r3, #0
   42798:	bgt	427e0 <usbAwaitInput@@Base+0x1e8>
   4279c:	mov	r0, r9
   427a0:	bl	f4f4 <free@plt>
   427a4:	b	42760 <usbAwaitInput@@Base+0x168>
   427a8:	bl	fca4 <__errno_location@plt>
   427ac:	ldr	r3, [r0]
   427b0:	cmp	r3, #11
   427b4:	bne	42674 <usbAwaitInput@@Base+0x7c>
   427b8:	cmp	r6, #0
   427bc:	beq	42674 <usbAwaitInput@@Base+0x7c>
   427c0:	mov	r1, r9
   427c4:	mov	r0, fp
   427c8:	bl	1ebf8 <afterTimePeriod@@Base>
   427cc:	cmp	r0, #0
   427d0:	bne	42674 <usbAwaitInput@@Base+0x7c>
   427d4:	mov	r0, r8
   427d8:	bl	1ec24 <approximateDelay@@Base>
   427dc:	b	42760 <usbAwaitInput@@Base+0x168>
   427e0:	ldr	r2, [sp, #36]	; 0x24
   427e4:	mov	r1, #1
   427e8:	str	r3, [r4, #24]
   427ec:	str	r9, [r4, #16]
   427f0:	str	r2, [r4, #20]
   427f4:	b	42644 <usbAwaitInput@@Base+0x4c>
   427f8:	add	r0, sp, #32
   427fc:	mov	r1, r6
   42800:	bl	1ebf0 <startTimePeriod@@Base>
   42804:	b	426c4 <usbAwaitInput@@Base+0xcc>
   42808:	add	r0, sp, #20
   4280c:	mov	r1, r6
   42810:	bl	1ebf0 <startTimePeriod@@Base>
   42814:	b	42754 <usbAwaitInput@@Base+0x15c>
   42818:	ldr	r4, [sp, #12]
   4281c:	mov	r1, #1
   42820:	str	r9, [r4, #20]
   42824:	str	r0, [r4, #24]
   42828:	str	r9, [r4, #16]
   4282c:	b	42644 <usbAwaitInput@@Base+0x4c>
   42830:	bl	1c740 <logMallocError@@Base>
   42834:	mov	r1, r9
   42838:	b	42644 <usbAwaitInput@@Base+0x4c>
   4283c:	bl	f950 <__stack_chk_fail@plt>
   42840:	andeq	r0, r3, r0, ror r4
   42844:			; <UNDEFINED> instruction: 0x000003b4

00042848 <usbReapInput@@Base>:
   42848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4284c:	sub	sp, sp, #12
   42850:	mov	r7, r2
   42854:	mov	r6, r3
   42858:	mov	r8, r0
   4285c:	mov	r9, r1
   42860:	ldr	fp, [sp, #52]	; 0x34
   42864:	bl	41df0 <usbGetInputEndpoint@@Base>
   42868:	subs	sl, r0, #0
   4286c:	beq	42928 <usbReapInput@@Base+0xe0>
   42870:	cmp	r6, #0
   42874:	beq	42930 <usbReapInput@@Base+0xe8>
   42878:	mov	r5, r7
   4287c:	b	42898 <usbReapInput@@Base+0x50>
   42880:	ldr	r2, [sl, #20]
   42884:	subs	r6, r6, r4
   42888:	add	r5, r5, r4
   4288c:	add	r2, r2, r4
   42890:	str	r2, [sl, #20]
   42894:	beq	4290c <usbReapInput@@Base+0xc4>
   42898:	cmp	r5, r7
   4289c:	ldr	r2, [sp, #48]	; 0x30
   428a0:	mov	r0, r8
   428a4:	mov	r1, r9
   428a8:	movne	r2, fp
   428ac:	bl	425f8 <usbAwaitInput@@Base>
   428b0:	cmp	r0, #0
   428b4:	mov	r0, r5
   428b8:	beq	42918 <usbReapInput@@Base+0xd0>
   428bc:	ldr	r4, [sl, #24]
   428c0:	ldr	r1, [sl, #20]
   428c4:	cmp	r6, r4
   428c8:	movcc	r4, r6
   428cc:	mov	r2, r4
   428d0:	bl	fb24 <memcpy@plt>
   428d4:	ldr	r2, [sl, #24]
   428d8:	rsb	r2, r4, r2
   428dc:	str	r2, [sl, #24]
   428e0:	cmp	r2, #0
   428e4:	bne	42880 <usbReapInput@@Base+0x38>
   428e8:	str	r2, [sl, #20]
   428ec:	add	r5, r5, r4
   428f0:	ldr	r0, [sl, #16]
   428f4:	str	r2, [sp, #4]
   428f8:	bl	f4f4 <free@plt>
   428fc:	ldr	r2, [sp, #4]
   42900:	subs	r6, r6, r4
   42904:	str	r2, [sl, #16]
   42908:	bne	42898 <usbReapInput@@Base+0x50>
   4290c:	rsb	r0, r7, r5
   42910:	add	sp, sp, #12
   42914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42918:	bl	fca4 <__errno_location@plt>
   4291c:	ldr	r3, [r0]
   42920:	cmp	r3, #11
   42924:	beq	4290c <usbReapInput@@Base+0xc4>
   42928:	mvn	r0, #0
   4292c:	b	42910 <usbReapInput@@Base+0xc8>
   42930:	mov	r0, r6
   42934:	b	42910 <usbReapInput@@Base+0xc8>

00042938 <usbFindChannel@@Base>:
   42938:	ldr	r2, [pc, #248]	; 42a38 <usbFindChannel@@Base+0x100>
   4293c:	ldr	r3, [pc, #248]	; 42a3c <usbFindChannel@@Base+0x104>
   42940:	add	r2, pc, r2
   42944:	push	{r4, r5, r6, r7, r8, lr}
   42948:	sub	sp, sp, #16
   4294c:	ldr	r6, [r2, r3]
   42950:	mov	r4, r1
   42954:	str	r0, [sp, #4]
   42958:	add	r1, sp, #4
   4295c:	ldr	r0, [pc, #220]	; 42a40 <usbFindChannel@@Base+0x108>
   42960:	ldr	r3, [r6]
   42964:	add	r0, pc, r0
   42968:	str	r4, [sp, #8]
   4296c:	str	r3, [sp, #12]
   42970:	bl	45c70 <usbFindDevice@@Base>
   42974:	subs	r8, r0, #0
   42978:	beq	429ec <usbFindChannel@@Base+0xb4>
   4297c:	mov	r0, #24
   42980:	bl	fb48 <malloc@plt>
   42984:	subs	r5, r0, #0
   42988:	beq	42a20 <usbFindChannel@@Base+0xe8>
   4298c:	mov	r3, r5
   42990:	ldr	r4, [sp, #4]
   42994:	mov	r2, #0
   42998:	str	r2, [r3], #4
   4299c:	add	r3, r3, #4
   429a0:	str	r2, [r5, #4]
   429a4:	mov	ip, r5
   429a8:	mov	r7, r5
   429ac:	str	r2, [r3], #4
   429b0:	str	r2, [r3], #4
   429b4:	str	r2, [r3], #4
   429b8:	str	r2, [r3]
   429bc:	str	r8, [r5, #20]
   429c0:	ldm	r4!, {r0, r1, r2, r3}
   429c4:	stmia	ip!, {r0, r1, r2, r3}
   429c8:	ldr	r3, [r4]
   429cc:	str	r3, [ip]
   429d0:	ldr	r2, [sp, #12]
   429d4:	mov	r0, r7
   429d8:	ldr	r3, [r6]
   429dc:	cmp	r2, r3
   429e0:	bne	42a34 <usbFindChannel@@Base+0xfc>
   429e4:	add	sp, sp, #16
   429e8:	pop	{r4, r5, r6, r7, r8, pc}
   429ec:	ldrb	r3, [r4]
   429f0:	ldr	r2, [pc, #76]	; 42a44 <usbFindChannel@@Base+0x10c>
   429f4:	cmp	r3, #0
   429f8:	add	r2, pc, r2
   429fc:	ldreq	r2, [pc, #68]	; 42a48 <usbFindChannel@@Base+0x110>
   42a00:	addeq	r2, pc, r2
   42a04:	ldr	r1, [pc, #64]	; 42a4c <usbFindChannel@@Base+0x114>
   42a08:	mov	r3, r4
   42a0c:	mov	r0, #7
   42a10:	mov	r7, #0
   42a14:	add	r1, pc, r1
   42a18:	bl	1c634 <logMessage@@Base>
   42a1c:	b	429d0 <usbFindChannel@@Base+0x98>
   42a20:	bl	1c740 <logMallocError@@Base>
   42a24:	mov	r0, r8
   42a28:	bl	42104 <usbCloseDevice@@Base>
   42a2c:	mov	r7, r5
   42a30:	b	429d0 <usbFindChannel@@Base+0x98>
   42a34:	bl	f950 <__stack_chk_fail@plt>
   42a38:	andeq	r0, r3, r8, lsr r1
   42a3c:			; <UNDEFINED> instruction: 0x000003b4
   42a40:			; <UNDEFINED> instruction: 0xfffffa44
   42a44:	andeq	ip, r0, r0, lsr r3
   42a48:	andeq	ip, r0, r4, lsl #6
   42a4c:	andeq	r7, r1, ip, asr #8

00042a50 <usbCloseChannel@@Base>:
   42a50:	push	{r4, lr}
   42a54:	mov	r4, r0
   42a58:	ldr	r0, [r0, #20]
   42a5c:	bl	42104 <usbCloseDevice@@Base>
   42a60:	mov	r0, r4
   42a64:	pop	{r4, lr}
   42a68:	b	f4f4 <free@plt>

00042a6c <isUsbDevice@@Base>:
   42a6c:	ldr	r1, [pc, #4]	; 42a78 <isUsbDevice@@Base+0xc>
   42a70:	add	r1, pc, r1
   42a74:	b	1dadc <isQualifiedDevice@@Base>
   42a78:	andeq	r4, r1, ip, lsr #11

00042a7c <usbHidDescriptor@@Base>:
   42a7c:	ldr	r3, [pc, #144]	; 42b14 <usbHidDescriptor@@Base+0x98>
   42a80:	mov	r1, #0
   42a84:	ldr	r2, [pc, #140]	; 42b18 <usbHidDescriptor@@Base+0x9c>
   42a88:	add	r3, pc, r3
   42a8c:	push	{r4, r5, r6, r7, lr}
   42a90:	sub	sp, sp, #12
   42a94:	ldr	r7, [r3, r2]
   42a98:	add	r4, sp, #8
   42a9c:	mov	r5, r0
   42aa0:	str	r1, [r4, #-8]!
   42aa4:	ldr	r3, [r7]
   42aa8:	str	r3, [sp, #4]
   42aac:	b	42ac0 <usbHidDescriptor@@Base+0x44>
   42ab0:	ldr	r3, [sp]
   42ab4:	ldrb	r2, [r3, #1]
   42ab8:	cmp	r2, #33	; 0x21
   42abc:	beq	42af4 <usbHidDescriptor@@Base+0x78>
   42ac0:	mov	r0, r5
   42ac4:	mov	r1, sp
   42ac8:	bl	419b0 <usbNextDescriptor@@Base>
   42acc:	subs	r6, r0, #0
   42ad0:	bne	42ab0 <usbHidDescriptor@@Base+0x34>
   42ad4:	ldr	r1, [pc, #64]	; 42b1c <usbHidDescriptor@@Base+0xa0>
   42ad8:	mov	r0, #4
   42adc:	add	r1, pc, r1
   42ae0:	bl	1c634 <logMessage@@Base>
   42ae4:	bl	fca4 <__errno_location@plt>
   42ae8:	mov	r3, r6
   42aec:	mov	r2, #2
   42af0:	str	r2, [r0]
   42af4:	ldr	r2, [sp, #4]
   42af8:	mov	r0, r3
   42afc:	ldr	r3, [r7]
   42b00:	cmp	r2, r3
   42b04:	bne	42b10 <usbHidDescriptor@@Base+0x94>
   42b08:	add	sp, sp, #12
   42b0c:	pop	{r4, r5, r6, r7, pc}
   42b10:	bl	f950 <__stack_chk_fail@plt>
   42b14:	strdeq	pc, [r2], -r0
   42b18:			; <UNDEFINED> instruction: 0x000003b4
   42b1c:	andeq	r7, r1, r4, lsr #7

00042b20 <usbHidGetItems@@Base>:
   42b20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   42b24:	sub	sp, sp, #24
   42b28:	mov	r8, r1
   42b2c:	mov	r4, r2
   42b30:	mov	r9, r3
   42b34:	mov	sl, r0
   42b38:	bl	42a7c <usbHidDescriptor@@Base>
   42b3c:	cmp	r0, #0
   42b40:	beq	42bd8 <usbHidGetItems@@Base+0xb8>
   42b44:	ldrb	r3, [r0, #5]
   42b48:	cmp	r3, r4
   42b4c:	bls	42bb8 <usbHidGetItems@@Base+0x98>
   42b50:	add	r6, r4, r4, lsl #1
   42b54:	add	r6, r0, r6
   42b58:	ldrh	r5, [r6, #7]
   42b5c:	mov	r0, r5
   42b60:	bl	fb48 <malloc@plt>
   42b64:	subs	r7, r0, #0
   42b68:	beq	42be0 <usbHidGetItems@@Base+0xc0>
   42b6c:	ldrb	r3, [r6, #6]
   42b70:	mov	r0, sl
   42b74:	ldr	ip, [sp, #56]	; 0x38
   42b78:	mov	r1, #1
   42b7c:	str	r4, [sp, #4]
   42b80:	mov	r2, #0
   42b84:	orr	r8, r8, r3, lsl #8
   42b88:	str	r7, [sp, #8]
   42b8c:	str	r5, [sp, #12]
   42b90:	mov	r3, #6
   42b94:	str	r8, [sp]
   42b98:	str	ip, [sp, #16]
   42b9c:	bl	41294 <usbControlRead@@Base>
   42ba0:	cmn	r0, #1
   42ba4:	mov	r4, r0
   42ba8:	beq	42bec <usbHidGetItems@@Base+0xcc>
   42bac:	str	r7, [r9]
   42bb0:	add	sp, sp, #24
   42bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   42bb8:	ldr	r1, [pc, #60]	; 42bfc <usbHidGetItems@@Base+0xdc>
   42bbc:	mov	r0, #4
   42bc0:	mov	r2, r8
   42bc4:	mov	r3, r4
   42bc8:	add	r1, pc, r1
   42bcc:	bl	1c634 <logMessage@@Base>
   42bd0:	mvn	r0, #0
   42bd4:	b	42bb0 <usbHidGetItems@@Base+0x90>
   42bd8:	mvn	r0, #0
   42bdc:	b	42bb0 <usbHidGetItems@@Base+0x90>
   42be0:	bl	1c740 <logMallocError@@Base>
   42be4:	mvn	r0, #0
   42be8:	b	42bb0 <usbHidGetItems@@Base+0x90>
   42bec:	mov	r0, r7
   42bf0:	bl	f4f4 <free@plt>
   42bf4:	mov	r0, r4
   42bf8:	b	42bb0 <usbHidGetItems@@Base+0x90>
   42bfc:	ldrdeq	r7, [r1], -r8

00042c00 <usbHidFillReportDescription@@Base>:
   42c00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42c04:	sub	sp, sp, #20
   42c08:	ldr	r7, [pc, #380]	; 42d8c <usbHidFillReportDescription@@Base+0x18c>
   42c0c:	mov	r4, #0
   42c10:	mov	r6, r0
   42c14:	mov	r5, r1
   42c18:	str	r2, [sp, #12]
   42c1c:	mov	r8, r3
   42c20:	mov	r0, r4
   42c24:	add	r7, pc, r7
   42c28:	cmp	r4, r5
   42c2c:	mov	r1, r4
   42c30:	bcs	42c98 <usbHidFillReportDescription@@Base+0x98>
   42c34:	ldr	r3, [pc, #340]	; 42d90 <usbHidFillReportDescription@@Base+0x190>
   42c38:	add	r4, r4, #1
   42c3c:	ldrb	fp, [r6, r1]
   42c40:	add	ip, r6, r1
   42c44:	ldr	r2, [r7, r3]
   42c48:	bic	r3, fp, #252	; 0xfc
   42c4c:	ldrb	r2, [r2, r3]
   42c50:	cmp	r2, #0
   42c54:	beq	42ca0 <usbHidFillReportDescription@@Base+0xa0>
   42c58:	sub	sl, r2, #1
   42c5c:	add	r1, r1, #2
   42c60:	mov	r3, #0
   42c64:	uxtab	sl, r1, sl
   42c68:	mov	r2, r3
   42c6c:	b	42c84 <usbHidFillReportDescription@@Base+0x84>
   42c70:	ldrb	r9, [ip, #1]!
   42c74:	cmp	r4, sl
   42c78:	orr	r2, r2, r9, lsl r3
   42c7c:	uxtb	r3, r1
   42c80:	beq	42ca0 <usbHidFillReportDescription@@Base+0xa0>
   42c84:	cmp	r4, r5
   42c88:	add	r1, r3, #8
   42c8c:	add	r4, r4, #1
   42c90:	bne	42c70 <usbHidFillReportDescription@@Base+0x70>
   42c94:	mov	r0, #0
   42c98:	add	sp, sp, #20
   42c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42ca0:	and	fp, fp, #252	; 0xfc
   42ca4:	cmp	fp, #116	; 0x74
   42ca8:	beq	42d7c <usbHidFillReportDescription@@Base+0x17c>
   42cac:	bhi	42cd0 <usbHidFillReportDescription@@Base+0xd0>
   42cb0:	cmp	fp, #20
   42cb4:	beq	42d6c <usbHidFillReportDescription@@Base+0x16c>
   42cb8:	cmp	fp, #36	; 0x24
   42cbc:	bne	42d30 <usbHidFillReportDescription@@Base+0x130>
   42cc0:	cmp	r0, #0
   42cc4:	beq	42c28 <usbHidFillReportDescription@@Base+0x28>
   42cc8:	str	r2, [r8, #20]
   42ccc:	b	42cec <usbHidFillReportDescription@@Base+0xec>
   42cd0:	cmp	fp, #132	; 0x84
   42cd4:	beq	42d3c <usbHidFillReportDescription@@Base+0x13c>
   42cd8:	cmp	fp, #148	; 0x94
   42cdc:	bne	42d30 <usbHidFillReportDescription@@Base+0x130>
   42ce0:	cmp	r0, #0
   42ce4:	strne	r2, [r8, #8]
   42ce8:	beq	42c28 <usbHidFillReportDescription@@Base+0x28>
   42cec:	lsr	fp, fp, #2
   42cf0:	mov	ip, #1
   42cf4:	sub	r3, fp, #32
   42cf8:	rsb	r1, fp, #32
   42cfc:	lsl	r3, ip, r3
   42d00:	str	r3, [sp, #4]
   42d04:	ldr	r9, [sp, #4]
   42d08:	lsl	fp, ip, fp
   42d0c:	str	fp, [sp]
   42d10:	orr	r1, r9, ip, lsr r1
   42d14:	str	r1, [sp, #4]
   42d18:	ldrd	r2, [r8]
   42d1c:	ldrd	sl, [sp]
   42d20:	orr	r2, r2, sl
   42d24:	orr	r3, r3, fp
   42d28:	strd	r2, [r8]
   42d2c:	b	42c28 <usbHidFillReportDescription@@Base+0x28>
   42d30:	cmp	r0, #0
   42d34:	beq	42c28 <usbHidFillReportDescription@@Base+0x28>
   42d38:	b	42c98 <usbHidFillReportDescription@@Base+0x98>
   42d3c:	cmp	r0, #0
   42d40:	bne	42c98 <usbHidFillReportDescription@@Base+0x98>
   42d44:	ldr	r9, [sp, #12]
   42d48:	cmp	r9, r2
   42d4c:	bne	42c28 <usbHidFillReportDescription@@Base+0x28>
   42d50:	mov	r1, r0
   42d54:	mov	r2, #32
   42d58:	mov	r0, r8
   42d5c:	bl	f6b0 <memset@plt>
   42d60:	strb	r9, [r8, #24]
   42d64:	mov	r0, #1
   42d68:	b	42c28 <usbHidFillReportDescription@@Base+0x28>
   42d6c:	cmp	r0, #0
   42d70:	strne	r2, [r8, #16]
   42d74:	bne	42cec <usbHidFillReportDescription@@Base+0xec>
   42d78:	b	42c28 <usbHidFillReportDescription@@Base+0x28>
   42d7c:	cmp	r0, #0
   42d80:	strne	r2, [r8, #12]
   42d84:	bne	42cec <usbHidFillReportDescription@@Base+0xec>
   42d88:	b	42c28 <usbHidFillReportDescription@@Base+0x28>
   42d8c:	andeq	pc, r2, r4, asr lr	; <UNPREDICTABLE>
   42d90:			; <UNDEFINED> instruction: 0x000004b0

00042d94 <usbHidGetReportSize@@Base>:
   42d94:	ldr	ip, [pc, #276]	; 42eb0 <usbHidGetReportSize@@Base+0x11c>
   42d98:	push	{r4, r5, r6, r7, r8, r9, lr}
   42d9c:	add	ip, pc, ip
   42da0:	ldr	lr, [pc, #268]	; 42eb4 <usbHidGetReportSize@@Base+0x120>
   42da4:	sub	sp, sp, #44	; 0x2c
   42da8:	mov	r8, r3
   42dac:	mov	r7, #0
   42db0:	mov	r3, sp
   42db4:	mov	r9, r2
   42db8:	ldr	r6, [ip, lr]
   42dbc:	ldr	ip, [r6]
   42dc0:	str	r7, [r8]
   42dc4:	str	ip, [sp, #36]	; 0x24
   42dc8:	bl	42c00 <usbHidFillReportDescription@@Base>
   42dcc:	subs	r4, r0, #0
   42dd0:	beq	42e78 <usbHidGetReportSize@@Base+0xe4>
   42dd4:	ldrd	r0, [sp]
   42dd8:	mov	r4, #0
   42ddc:	mov	r5, #32
   42de0:	and	r4, r4, r0
   42de4:	and	r5, r5, r1
   42de8:	orrs	r3, r4, r5
   42dec:	beq	42e90 <usbHidGetReportSize@@Base+0xfc>
   42df0:	mov	r3, #0
   42df4:	mov	r2, #536870912	; 0x20000000
   42df8:	and	r1, r1, r3
   42dfc:	and	r0, r0, r2
   42e00:	orrs	r3, r0, r1
   42e04:	bne	42e3c <usbHidGetReportSize@@Base+0xa8>
   42e08:	ldr	r1, [pc, #168]	; 42eb8 <usbHidGetReportSize@@Base+0x124>
   42e0c:	mov	r2, r9
   42e10:	mov	r0, #4
   42e14:	mov	r4, r7
   42e18:	add	r1, pc, r1
   42e1c:	bl	1c634 <logMessage@@Base>
   42e20:	ldr	r2, [sp, #36]	; 0x24
   42e24:	mov	r0, r4
   42e28:	ldr	r3, [r6]
   42e2c:	cmp	r2, r3
   42e30:	bne	42eac <usbHidGetReportSize@@Base+0x118>
   42e34:	add	sp, sp, #44	; 0x2c
   42e38:	pop	{r4, r5, r6, r7, r8, r9, pc}
   42e3c:	ldr	r3, [sp, #12]
   42e40:	mov	r0, #7
   42e44:	ldr	r5, [sp, #8]
   42e48:	mov	r2, r9
   42e4c:	ldr	r1, [pc, #104]	; 42ebc <usbHidGetReportSize@@Base+0x128>
   42e50:	mov	r4, #1
   42e54:	mul	r5, r5, r3
   42e58:	add	r1, pc, r1
   42e5c:	add	r5, r5, r0
   42e60:	lsr	r5, r5, #3
   42e64:	mov	r3, r5
   42e68:	add	r5, r5, r4
   42e6c:	bl	1c634 <logMessage@@Base>
   42e70:	str	r5, [r8]
   42e74:	b	42e20 <usbHidGetReportSize@@Base+0x8c>
   42e78:	ldr	r1, [pc, #64]	; 42ec0 <usbHidGetReportSize@@Base+0x12c>
   42e7c:	mov	r2, r9
   42e80:	mov	r0, #4
   42e84:	add	r1, pc, r1
   42e88:	bl	1c634 <logMessage@@Base>
   42e8c:	b	42e20 <usbHidGetReportSize@@Base+0x8c>
   42e90:	ldr	r1, [pc, #44]	; 42ec4 <usbHidGetReportSize@@Base+0x130>
   42e94:	mov	r2, r9
   42e98:	mov	r0, #4
   42e9c:	mov	r4, r7
   42ea0:	add	r1, pc, r1
   42ea4:	bl	1c634 <logMessage@@Base>
   42ea8:	b	42e20 <usbHidGetReportSize@@Base+0x8c>
   42eac:	bl	f950 <__stack_chk_fail@plt>
   42eb0:	ldrdeq	pc, [r2], -ip
   42eb4:			; <UNDEFINED> instruction: 0x000003b4
   42eb8:	andeq	r7, r1, ip, asr #1
   42ebc:	andeq	r7, r1, r0, ror r0
   42ec0:	andeq	r7, r1, r8, lsr #1
   42ec4:	andeq	r7, r1, r8, rrx

00042ec8 <usbHidGetReport@@Base>:
   42ec8:	push	{r4, lr}
   42ecc:	sub	sp, sp, #24
   42ed0:	orr	r4, r2, #256	; 0x100
   42ed4:	mov	r2, #32
   42ed8:	ldrh	lr, [sp, #32]
   42edc:	ldr	ip, [sp, #36]	; 0x24
   42ee0:	str	r1, [sp, #4]
   42ee4:	mov	r1, #1
   42ee8:	str	r3, [sp, #8]
   42eec:	mov	r3, r1
   42ef0:	str	r4, [sp]
   42ef4:	str	lr, [sp, #12]
   42ef8:	str	ip, [sp, #16]
   42efc:	bl	41294 <usbControlRead@@Base>
   42f00:	add	sp, sp, #24
   42f04:	pop	{r4, pc}

00042f08 <usbHidSetReport@@Base>:
   42f08:	push	{r4, lr}
   42f0c:	sub	sp, sp, #24
   42f10:	orr	r4, r2, #512	; 0x200
   42f14:	mov	r2, #32
   42f18:	ldrh	lr, [sp, #32]
   42f1c:	ldr	ip, [sp, #36]	; 0x24
   42f20:	str	r1, [sp, #4]
   42f24:	mov	r1, #1
   42f28:	str	r3, [sp, #8]
   42f2c:	mov	r3, #9
   42f30:	str	r4, [sp]
   42f34:	str	lr, [sp, #12]
   42f38:	str	ip, [sp, #16]
   42f3c:	bl	412e4 <usbControlWrite@@Base>
   42f40:	add	sp, sp, #24
   42f44:	pop	{r4, pc}

00042f48 <usbHidGetFeature@@Base>:
   42f48:	push	{r4, lr}
   42f4c:	sub	sp, sp, #24
   42f50:	orr	r4, r2, #768	; 0x300
   42f54:	mov	r2, #32
   42f58:	ldrh	lr, [sp, #32]
   42f5c:	ldr	ip, [sp, #36]	; 0x24
   42f60:	str	r1, [sp, #4]
   42f64:	mov	r1, #1
   42f68:	str	r3, [sp, #8]
   42f6c:	mov	r3, r1
   42f70:	str	r4, [sp]
   42f74:	str	lr, [sp, #12]
   42f78:	str	ip, [sp, #16]
   42f7c:	bl	41294 <usbControlRead@@Base>
   42f80:	add	sp, sp, #24
   42f84:	pop	{r4, pc}

00042f88 <usbHidSetFeature@@Base>:
   42f88:	push	{r4, lr}
   42f8c:	sub	sp, sp, #24
   42f90:	orr	r4, r2, #768	; 0x300
   42f94:	mov	r2, #32
   42f98:	ldrh	lr, [sp, #32]
   42f9c:	ldr	ip, [sp, #36]	; 0x24
   42fa0:	str	r1, [sp, #4]
   42fa4:	mov	r1, #1
   42fa8:	str	r3, [sp, #8]
   42fac:	mov	r3, #9
   42fb0:	str	r4, [sp]
   42fb4:	str	lr, [sp, #12]
   42fb8:	str	ip, [sp, #16]
   42fbc:	bl	412e4 <usbControlWrite@@Base>
   42fc0:	add	sp, sp, #24
   42fc4:	pop	{r4, pc}
   42fc8:	push	{r4, lr}
   42fcc:	sub	sp, sp, #24
   42fd0:	mov	r1, #1
   42fd4:	mov	ip, #0
   42fd8:	str	r1, [sp]
   42fdc:	mov	lr, #1000	; 0x3e8
   42fe0:	ldr	r4, [r0, #28]
   42fe4:	mov	r2, #32
   42fe8:	mov	r3, #34	; 0x22
   42fec:	ldrb	r4, [r4, #2]
   42ff0:	str	ip, [sp, #8]
   42ff4:	str	ip, [sp, #12]
   42ff8:	str	r4, [sp, #4]
   42ffc:	str	lr, [sp, #16]
   43000:	bl	412e4 <usbControlWrite@@Base>
   43004:	adds	r0, r0, #1
   43008:	movne	r0, #1
   4300c:	add	sp, sp, #24
   43010:	pop	{r4, pc}
   43014:	push	{r4, r5, r6, r7, lr}
   43018:	mov	r4, r1
   4301c:	sub	sp, sp, #28
   43020:	mov	r6, r2
   43024:	mov	r2, r1
   43028:	ldr	r1, [pc, #96]	; 43090 <usbHidSetFeature@@Base+0x108>
   4302c:	mov	r7, r0
   43030:	str	r3, [sp]
   43034:	mov	r5, r3
   43038:	mov	r0, #7
   4303c:	mov	r3, r6
   43040:	add	r1, pc, r1
   43044:	bl	1c634 <logMessage@@Base>
   43048:	mov	ip, #0
   4304c:	mov	r1, ip
   43050:	str	ip, [sp, #8]
   43054:	str	ip, [sp, #12]
   43058:	uxth	r6, r6
   4305c:	mov	ip, #1000	; 0x3e8
   43060:	uxth	r5, r5
   43064:	str	r6, [sp]
   43068:	mov	r0, r7
   4306c:	str	r5, [sp, #4]
   43070:	mov	r3, r4
   43074:	mov	r2, #64	; 0x40
   43078:	str	ip, [sp, #16]
   4307c:	bl	412e4 <usbControlWrite@@Base>
   43080:	adds	r0, r0, #1
   43084:	movne	r0, #1
   43088:	add	sp, sp, #28
   4308c:	pop	{r4, r5, r6, r7, pc}
   43090:	andeq	r6, r1, r0, lsl pc
   43094:	and	r3, r1, #34	; 0x22
   43098:	cmp	r3, #34	; 0x22
   4309c:	biceq	r1, r1, #34	; 0x22
   430a0:	and	r3, r1, #68	; 0x44
   430a4:	push	{r4, r5, r6, lr}
   430a8:	moveq	r4, #256	; 0x100
   430ac:	movne	r4, #0
   430b0:	cmp	r3, #68	; 0x44
   430b4:	biceq	r1, r1, #68	; 0x44
   430b8:	orreq	r4, r4, #512	; 0x200
   430bc:	and	r3, r1, #17
   430c0:	mov	r5, r0
   430c4:	cmp	r3, #17
   430c8:	biceq	r1, r1, #17
   430cc:	orreq	r4, r4, #1024	; 0x400
   430d0:	cmp	r1, #0
   430d4:	bne	430f8 <usbHidSetFeature@@Base+0x170>
   430d8:	ands	r2, r4, #1024	; 0x400
   430dc:	movw	r1, #4881	; 0x1311
   430e0:	mov	r0, r5
   430e4:	mov	r3, r4
   430e8:	movne	r2, r1
   430ec:	mov	r1, #2
   430f0:	pop	{r4, r5, r6, lr}
   430f4:	b	43014 <usbHidSetFeature@@Base+0x8c>
   430f8:	mov	r2, r1
   430fc:	ldr	r1, [pc, #12]	; 43110 <usbHidSetFeature@@Base+0x188>
   43100:	mov	r0, #4
   43104:	add	r1, pc, r1
   43108:	bl	1c634 <logMessage@@Base>
   4310c:	b	430d8 <usbHidSetFeature@@Base+0x150>
   43110:	andeq	r6, r1, ip, ror #28
   43114:	push	{r4, r5, r6, r7, r8, lr}
   43118:	uxtb	r4, r1
   4311c:	cmp	r1, r4
   43120:	mov	r5, r3
   43124:	mov	r7, r0
   43128:	mov	r6, r2
   4312c:	moveq	r3, #1
   43130:	beq	4314c <usbHidSetFeature@@Base+0x1c4>
   43134:	mov	r2, r1
   43138:	ldr	r1, [pc, #192]	; 43200 <usbHidSetFeature@@Base+0x278>
   4313c:	mov	r0, #4
   43140:	add	r1, pc, r1
   43144:	bl	1c634 <logMessage@@Base>
   43148:	mov	r3, #0
   4314c:	cmp	r5, #4
   43150:	addls	pc, pc, r5, lsl #2
   43154:	b	4316c <usbHidSetFeature@@Base+0x1e4>
   43158:	b	431e8 <usbHidSetFeature@@Base+0x260>
   4315c:	b	431f0 <usbHidSetFeature@@Base+0x268>
   43160:	b	431f8 <usbHidSetFeature@@Base+0x270>
   43164:	b	431e0 <usbHidSetFeature@@Base+0x258>
   43168:	b	43184 <usbHidSetFeature@@Base+0x1fc>
   4316c:	ldr	r1, [pc, #144]	; 43204 <usbHidSetFeature@@Base+0x27c>
   43170:	mov	r2, r5
   43174:	mov	r0, #4
   43178:	add	r1, pc, r1
   4317c:	bl	1c634 <logMessage@@Base>
   43180:	mov	r3, #0
   43184:	cmp	r6, #1
   43188:	beq	431c0 <usbHidSetFeature@@Base+0x238>
   4318c:	cmp	r6, #2
   43190:	orreq	r4, r4, #4096	; 0x1000
   43194:	beq	431c0 <usbHidSetFeature@@Base+0x238>
   43198:	ldr	r1, [pc, #104]	; 43208 <usbHidSetFeature@@Base+0x280>
   4319c:	mov	r2, r6
   431a0:	mov	r0, #4
   431a4:	add	r1, pc, r1
   431a8:	bl	1c634 <logMessage@@Base>
   431ac:	bl	fca4 <__errno_location@plt>
   431b0:	mov	r3, #22
   431b4:	str	r3, [r0]
   431b8:	mov	r0, #0
   431bc:	pop	{r4, r5, r6, r7, r8, pc}
   431c0:	cmp	r3, #0
   431c4:	beq	431ac <usbHidSetFeature@@Base+0x224>
   431c8:	mov	r0, r7
   431cc:	mov	r2, r4
   431d0:	mov	r1, #4
   431d4:	mov	r3, #0
   431d8:	pop	{r4, r5, r6, r7, r8, lr}
   431dc:	b	43014 <usbHidSetFeature@@Base+0x8c>
   431e0:	orr	r4, r4, #768	; 0x300
   431e4:	b	43184 <usbHidSetFeature@@Base+0x1fc>
   431e8:	orr	r4, r4, #1024	; 0x400
   431ec:	b	43184 <usbHidSetFeature@@Base+0x1fc>
   431f0:	orr	r4, r4, #256	; 0x100
   431f4:	b	43184 <usbHidSetFeature@@Base+0x1fc>
   431f8:	orr	r4, r4, #512	; 0x200
   431fc:	b	43184 <usbHidSetFeature@@Base+0x1fc>
   43200:	andeq	r6, r1, r4, asr lr
   43204:	andeq	r6, r1, ip, lsr lr
   43208:	andeq	r6, r1, ip, lsr #28
   4320c:	ldr	r3, [pc, #212]	; 432e8 <usbHidSetFeature@@Base+0x360>
   43210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43214:	subs	r4, r2, #0
   43218:	ldr	r2, [pc, #204]	; 432ec <usbHidSetFeature@@Base+0x364>
   4321c:	sub	sp, sp, #92	; 0x5c
   43220:	add	r3, pc, r3
   43224:	mov	r7, r0
   43228:	str	r1, [sp, #12]
   4322c:	ldr	r2, [r3, r2]
   43230:	ldr	r3, [r2]
   43234:	str	r2, [sp, #8]
   43238:	str	r3, [sp, #84]	; 0x54
   4323c:	beq	432dc <usbHidSetFeature@@Base+0x354>
   43240:	add	sl, sp, #20
   43244:	add	r9, sp, #21
   43248:	mov	fp, r1
   4324c:	mov	r8, #1000	; 0x3e8
   43250:	b	43260 <usbHidSetFeature@@Base+0x2d8>
   43254:	subs	r4, r4, r5
   43258:	add	fp, fp, r5
   4325c:	beq	432d0 <usbHidSetFeature@@Base+0x348>
   43260:	cmp	r4, #62	; 0x3e
   43264:	mov	r1, fp
   43268:	addls	r6, r4, #1
   4326c:	mov	r3, #63	; 0x3f
   43270:	movhi	ip, #63	; 0x3f
   43274:	movls	r5, r4
   43278:	movhi	r5, ip
   4327c:	movhi	r6, #64	; 0x40
   43280:	mov	r2, r5
   43284:	mov	r0, r9
   43288:	uxtbls	ip, r4
   4328c:	strb	ip, [sp, #20]
   43290:	bl	f464 <__memcpy_chk@plt>
   43294:	str	r8, [sp]
   43298:	mov	r3, r6
   4329c:	mov	r0, r7
   432a0:	mov	r1, #2
   432a4:	mov	r2, sl
   432a8:	bl	45a98 <usbWriteEndpoint@@Base>
   432ac:	cmn	r0, #1
   432b0:	bne	43254 <usbHidSetFeature@@Base+0x2cc>
   432b4:	ldr	r1, [sp, #8]
   432b8:	ldr	r2, [sp, #84]	; 0x54
   432bc:	ldr	r3, [r1]
   432c0:	cmp	r2, r3
   432c4:	bne	432e4 <usbHidSetFeature@@Base+0x35c>
   432c8:	add	sp, sp, #92	; 0x5c
   432cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   432d0:	ldr	r1, [sp, #12]
   432d4:	rsb	r0, r1, fp
   432d8:	b	432b4 <usbHidSetFeature@@Base+0x32c>
   432dc:	mov	r0, r4
   432e0:	b	432b4 <usbHidSetFeature@@Base+0x32c>
   432e4:	bl	f950 <__stack_chk_fail@plt>
   432e8:	andeq	pc, r2, r8, asr r8	; <UNPREDICTABLE>
   432ec:			; <UNDEFINED> instruction: 0x000003b4
   432f0:	push	{r3, lr}
   432f4:	mov	r3, r0
   432f8:	ldr	r2, [r0, #8]
   432fc:	ldr	r0, [r0]
   43300:	cmp	r2, #2
   43304:	movls	r2, #0
   43308:	strls	r2, [r3, #8]
   4330c:	bhi	43318 <usbHidSetFeature@@Base+0x390>
   43310:	mov	r0, #1
   43314:	pop	{r3, pc}
   43318:	sub	r2, r2, #2
   4331c:	add	r1, r0, #2
   43320:	str	r2, [r3, #8]
   43324:	bl	f7dc <memmove@plt>
   43328:	mov	r0, #1
   4332c:	pop	{r3, pc}
   43330:	subs	r2, r1, #0
   43334:	push	{r3, lr}
   43338:	moveq	r3, #1
   4333c:	beq	43360 <usbHidSetFeature@@Base+0x3d8>
   43340:	ldr	r1, [pc, #32]	; 43368 <usbHidSetFeature@@Base+0x3e0>
   43344:	mov	r0, #4
   43348:	add	r1, pc, r1
   4334c:	bl	1c634 <logMessage@@Base>
   43350:	bl	fca4 <__errno_location@plt>
   43354:	mov	r3, #0
   43358:	mov	r2, #22
   4335c:	str	r2, [r0]
   43360:	mov	r0, r3
   43364:	pop	{r3, pc}
   43368:	andeq	r6, r1, r8, lsr #25
   4336c:	ldr	ip, [pc, #388]	; 434f8 <usbHidSetFeature@@Base+0x570>
   43370:	push	{r4, r5, lr}
   43374:	add	ip, pc, ip
   43378:	ldr	r4, [pc, #380]	; 434fc <usbHidSetFeature@@Base+0x574>
   4337c:	sub	sp, sp, #44	; 0x2c
   43380:	sub	lr, r2, #5
   43384:	cmp	lr, #11
   43388:	ldr	r5, [ip, r4]
   4338c:	mov	r4, #0
   43390:	str	r1, [sp, #28]
   43394:	strh	r4, [sp, #32]
   43398:	ldr	r1, [r5]
   4339c:	strb	r4, [sp, #34]	; 0x22
   433a0:	str	r1, [sp, #36]	; 0x24
   433a4:	bhi	43400 <usbHidSetFeature@@Base+0x478>
   433a8:	mov	ip, #1
   433ac:	movw	r1, #2063	; 0x80f
   433b0:	lsl	lr, ip, lr
   433b4:	and	r1, lr, r1
   433b8:	cmp	r1, r4
   433bc:	beq	43400 <usbHidSetFeature@@Base+0x478>
   433c0:	cmp	r3, #2
   433c4:	strb	r2, [sp, #34]	; 0x22
   433c8:	beq	434d8 <usbHidSetFeature@@Base+0x550>
   433cc:	cmp	r3, #3
   433d0:	beq	4343c <usbHidSetFeature@@Base+0x4b4>
   433d4:	cmp	r3, ip
   433d8:	beq	43440 <usbHidSetFeature@@Base+0x4b8>
   433dc:	ldr	r1, [pc, #284]	; 43500 <usbHidSetFeature@@Base+0x578>
   433e0:	mov	r2, r3
   433e4:	mov	r0, #4
   433e8:	add	r1, pc, r1
   433ec:	bl	1c634 <logMessage@@Base>
   433f0:	bl	fca4 <__errno_location@plt>
   433f4:	mov	r3, #22
   433f8:	str	r3, [r0]
   433fc:	b	43420 <usbHidSetFeature@@Base+0x498>
   43400:	ldr	r1, [pc, #252]	; 43504 <usbHidSetFeature@@Base+0x57c>
   43404:	mov	r0, #4
   43408:	add	r1, pc, r1
   4340c:	bl	1c634 <logMessage@@Base>
   43410:	mov	r4, #0
   43414:	bl	fca4 <__errno_location@plt>
   43418:	mov	r3, #22
   4341c:	str	r3, [r0]
   43420:	ldr	r2, [sp, #36]	; 0x24
   43424:	mov	r0, r4
   43428:	ldr	r3, [r5]
   4342c:	cmp	r2, r3
   43430:	bne	434f4 <usbHidSetFeature@@Base+0x56c>
   43434:	add	sp, sp, #44	; 0x2c
   43438:	pop	{r4, r5, pc}
   4343c:	strb	ip, [sp, #32]
   43440:	ldr	r3, [sp, #56]	; 0x38
   43444:	cmp	r3, #4
   43448:	addls	pc, pc, r3, lsl #2
   4344c:	b	434e0 <usbHidSetFeature@@Base+0x558>
   43450:	b	434cc <usbHidSetFeature@@Base+0x544>
   43454:	b	434c0 <usbHidSetFeature@@Base+0x538>
   43458:	b	434b4 <usbHidSetFeature@@Base+0x52c>
   4345c:	b	43464 <usbHidSetFeature@@Base+0x4dc>
   43460:	b	4346c <usbHidSetFeature@@Base+0x4e4>
   43464:	mov	r3, #3
   43468:	strb	r3, [sp, #33]	; 0x21
   4346c:	mov	r3, #0
   43470:	str	r3, [sp]
   43474:	ldr	r1, [r0, #28]
   43478:	mov	r2, #32
   4347c:	mov	r4, #7
   43480:	mov	ip, #1000	; 0x3e8
   43484:	mov	r3, r2
   43488:	ldrb	lr, [r1, #2]
   4348c:	add	r1, sp, #28
   43490:	str	r4, [sp, #12]
   43494:	str	r1, [sp, #8]
   43498:	mov	r1, #1
   4349c:	str	lr, [sp, #4]
   434a0:	str	ip, [sp, #16]
   434a4:	bl	412e4 <usbControlWrite@@Base>
   434a8:	adds	r4, r0, #1
   434ac:	movne	r4, #1
   434b0:	b	43420 <usbHidSetFeature@@Base+0x498>
   434b4:	mov	r3, #2
   434b8:	strb	r3, [sp, #33]	; 0x21
   434bc:	b	4346c <usbHidSetFeature@@Base+0x4e4>
   434c0:	mov	r3, #1
   434c4:	strb	r3, [sp, #33]	; 0x21
   434c8:	b	4346c <usbHidSetFeature@@Base+0x4e4>
   434cc:	mov	r3, #4
   434d0:	strb	r3, [sp, #33]	; 0x21
   434d4:	b	4346c <usbHidSetFeature@@Base+0x4e4>
   434d8:	strb	r3, [sp, #32]
   434dc:	b	43440 <usbHidSetFeature@@Base+0x4b8>
   434e0:	ldr	r1, [pc, #32]	; 43508 <usbHidSetFeature@@Base+0x580>
   434e4:	mov	r0, #4
   434e8:	ldr	r2, [sp, #56]	; 0x38
   434ec:	add	r1, pc, r1
   434f0:	b	4340c <usbHidSetFeature@@Base+0x484>
   434f4:	bl	f950 <__stack_chk_fail@plt>
   434f8:	andeq	pc, r2, r4, lsl #14
   434fc:			; <UNDEFINED> instruction: 0x000003b4
   43500:	andeq	r6, r1, r4, asr ip
   43504:	andeq	r6, r1, r0, lsl ip
   43508:	andeq	r6, r1, r4, ror fp
   4350c:	push	{r4, r5, lr}
   43510:	movw	ip, #40948	; 0x9ff4
   43514:	ldr	lr, [pc, #512]	; 4371c <usbHidSetFeature@@Base+0x794>
   43518:	sub	r5, r1, #300	; 0x12c
   4351c:	ldr	r4, [pc, #508]	; 43720 <usbHidSetFeature@@Base+0x798>
   43520:	movt	ip, #7
   43524:	add	lr, pc, lr
   43528:	cmp	r5, ip
   4352c:	sub	sp, sp, #36	; 0x24
   43530:	ldr	r5, [lr, r4]
   43534:	mov	ip, lr
   43538:	mov	r4, #0
   4353c:	str	r4, [sp, #16]
   43540:	mov	ip, #80	; 0x50
   43544:	str	r4, [sp, #20]
   43548:	ldr	lr, [r5]
   4354c:	strb	r4, [sp, #24]
   43550:	strb	ip, [sp, #16]
   43554:	str	lr, [sp, #28]
   43558:	bhi	43640 <usbHidSetFeature@@Base+0x6b8>
   4355c:	ubfx	r4, r1, #8, #8
   43560:	ubfx	lr, r1, #16, #8
   43564:	str	r1, [sp, #12]
   43568:	sub	ip, r2, #5
   4356c:	lsl	r4, r4, #16
   43570:	orr	r4, r4, r1, lsl #24
   43574:	orr	r1, r4, r1, lsr #24
   43578:	orr	r1, r1, lr, lsl #8
   4357c:	str	r1, [sp, #17]
   43580:	cmp	ip, #3
   43584:	addls	pc, pc, ip, lsl #2
   43588:	b	436f4 <usbHidSetFeature@@Base+0x76c>
   4358c:	b	4359c <usbHidSetFeature@@Base+0x614>
   43590:	b	4367c <usbHidSetFeature@@Base+0x6f4>
   43594:	b	43688 <usbHidSetFeature@@Base+0x700>
   43598:	b	43664 <usbHidSetFeature@@Base+0x6dc>
   4359c:	cmp	r3, #1
   435a0:	beq	435b8 <usbHidSetFeature@@Base+0x630>
   435a4:	mov	r2, #3
   435a8:	cmp	r2, r3
   435ac:	moveq	r3, #1
   435b0:	strbeq	r3, [sp, #24]
   435b4:	bne	436e0 <usbHidSetFeature@@Base+0x758>
   435b8:	ldr	r3, [sp, #48]	; 0x30
   435bc:	cmp	r3, #4
   435c0:	addls	pc, pc, r3, lsl #2
   435c4:	b	43704 <usbHidSetFeature@@Base+0x77c>
   435c8:	b	436d4 <usbHidSetFeature@@Base+0x74c>
   435cc:	b	436c8 <usbHidSetFeature@@Base+0x740>
   435d0:	b	436bc <usbHidSetFeature@@Base+0x734>
   435d4:	b	435dc <usbHidSetFeature@@Base+0x654>
   435d8:	b	435e4 <usbHidSetFeature@@Base+0x65c>
   435dc:	mov	r3, #3
   435e0:	strb	r3, [sp, #21]
   435e4:	ldr	lr, [sp, #52]	; 0x34
   435e8:	cmp	lr, #0
   435ec:	beq	43600 <usbHidSetFeature@@Base+0x678>
   435f0:	cmp	lr, #34	; 0x22
   435f4:	moveq	r3, #1
   435f8:	strbeq	r3, [sp, #22]
   435fc:	bne	43694 <usbHidSetFeature@@Base+0x70c>
   43600:	mov	r2, #9
   43604:	mov	r3, #1000	; 0x3e8
   43608:	mov	r1, #0
   4360c:	stm	sp, {r2, r3}
   43610:	mov	r2, #80	; 0x50
   43614:	add	r3, sp, #16
   43618:	bl	42f08 <usbHidSetReport@@Base>
   4361c:	adds	r4, r0, #1
   43620:	movne	r4, #1
   43624:	ldr	r2, [sp, #28]
   43628:	mov	r0, r4
   4362c:	ldr	r3, [r5]
   43630:	cmp	r2, r3
   43634:	bne	43718 <usbHidSetFeature@@Base+0x790>
   43638:	add	sp, sp, #36	; 0x24
   4363c:	pop	{r4, r5, pc}
   43640:	mov	r2, r1
   43644:	ldr	r1, [pc, #216]	; 43724 <usbHidSetFeature@@Base+0x79c>
   43648:	mov	r0, #4
   4364c:	add	r1, pc, r1
   43650:	bl	1c634 <logMessage@@Base>
   43654:	bl	fca4 <__errno_location@plt>
   43658:	mov	r3, #22
   4365c:	str	r3, [r0]
   43660:	b	43624 <usbHidSetFeature@@Base+0x69c>
   43664:	mov	r2, #3
   43668:	strb	r2, [sp, #23]
   4366c:	cmp	r3, #1
   43670:	movne	r2, #2
   43674:	bne	435a8 <usbHidSetFeature@@Base+0x620>
   43678:	b	435b8 <usbHidSetFeature@@Base+0x630>
   4367c:	mov	r2, #1
   43680:	strb	r2, [sp, #23]
   43684:	b	4366c <usbHidSetFeature@@Base+0x6e4>
   43688:	mov	r2, #2
   4368c:	strb	r2, [sp, #23]
   43690:	b	4366c <usbHidSetFeature@@Base+0x6e4>
   43694:	ldr	r1, [pc, #140]	; 43728 <usbHidSetFeature@@Base+0x7a0>
   43698:	mov	r0, #4
   4369c:	ldr	r2, [sp, #52]	; 0x34
   436a0:	add	r1, pc, r1
   436a4:	bl	1c634 <logMessage@@Base>
   436a8:	mov	r4, #0
   436ac:	bl	fca4 <__errno_location@plt>
   436b0:	mov	r3, #22
   436b4:	str	r3, [r0]
   436b8:	b	43624 <usbHidSetFeature@@Base+0x69c>
   436bc:	mov	r3, #1
   436c0:	strb	r3, [sp, #21]
   436c4:	b	435e4 <usbHidSetFeature@@Base+0x65c>
   436c8:	mov	r3, #2
   436cc:	strb	r3, [sp, #21]
   436d0:	b	435e4 <usbHidSetFeature@@Base+0x65c>
   436d4:	mov	r3, #4
   436d8:	strb	r3, [sp, #21]
   436dc:	b	435e4 <usbHidSetFeature@@Base+0x65c>
   436e0:	ldr	r1, [pc, #68]	; 4372c <usbHidSetFeature@@Base+0x7a4>
   436e4:	mov	r2, r3
   436e8:	mov	r0, #4
   436ec:	add	r1, pc, r1
   436f0:	b	436a4 <usbHidSetFeature@@Base+0x71c>
   436f4:	ldr	r1, [pc, #52]	; 43730 <usbHidSetFeature@@Base+0x7a8>
   436f8:	mov	r0, #4
   436fc:	add	r1, pc, r1
   43700:	b	436a4 <usbHidSetFeature@@Base+0x71c>
   43704:	ldr	r1, [pc, #40]	; 43734 <usbHidSetFeature@@Base+0x7ac>
   43708:	mov	r0, #4
   4370c:	ldr	r2, [sp, #48]	; 0x30
   43710:	add	r1, pc, r1
   43714:	b	436a4 <usbHidSetFeature@@Base+0x71c>
   43718:	bl	f950 <__stack_chk_fail@plt>
   4371c:	andeq	pc, r2, r4, asr r5	; <UNPREDICTABLE>
   43720:			; <UNDEFINED> instruction: 0x000003b4
   43724:	andeq	r6, r1, r4, lsr sl
   43728:	andeq	r6, r1, r4, ror #20
   4372c:	ldrdeq	r6, [r1], -r4
   43730:	andeq	r6, r1, r0, lsr #19
   43734:	ldrdeq	r6, [r1], -r4
   43738:	cmp	r1, #1
   4373c:	push	{r4, lr}
   43740:	bls	43774 <usbHidSetFeature@@Base+0x7ec>
   43744:	mov	r3, r1
   43748:	ldr	r2, [pc, #60]	; 4378c <usbHidSetFeature@@Base+0x804>
   4374c:	ldr	r1, [pc, #60]	; 43790 <usbHidSetFeature@@Base+0x808>
   43750:	mov	r0, #4
   43754:	add	r2, pc, r2
   43758:	add	r1, pc, r1
   4375c:	bl	1c634 <logMessage@@Base>
   43760:	bl	fca4 <__errno_location@plt>
   43764:	mov	r3, #22
   43768:	str	r3, [r0]
   4376c:	mov	r0, #0
   43770:	pop	{r4, pc}
   43774:	lsl	r2, r1, #1
   43778:	mov	r3, #0
   4377c:	mov	r1, #1
   43780:	orr	r2, r2, #512	; 0x200
   43784:	pop	{r4, lr}
   43788:	b	43014 <usbHidSetFeature@@Base+0x8c>
   4378c:	strdeq	r6, [r1], -r4
   43790:	ldrdeq	r6, [r1], -r0
   43794:	movw	r3, #50880	; 0xc6c0
   43798:	movt	r3, #45	; 0x2d
   4379c:	cmp	r1, r3
   437a0:	mov	r2, r1
   437a4:	push	{r4, lr}
   437a8:	mov	r4, r0
   437ac:	bhi	43818 <usbHidSetFeature@@Base+0x890>
   437b0:	mov	r0, #13824	; 0x3600
   437b4:	movt	r0, #366	; 0x16e
   437b8:	bl	4e204 <formatAddress@@Base+0x258>
   437bc:	ldr	r1, [pc, #144]	; 43854 <usbHidSetFeature@@Base+0x8cc>
   437c0:	add	r1, pc, r1
   437c4:	and	r2, r0, #7
   437c8:	lsr	r3, r0, #3
   437cc:	ldrb	r2, [r1, r2]
   437d0:	orr	r3, r3, r2, lsl #14
   437d4:	cmp	r3, #1
   437d8:	beq	43800 <usbHidSetFeature@@Base+0x878>
   437dc:	movw	r2, #16385	; 0x4001
   437e0:	cmp	r3, r2
   437e4:	beq	4383c <usbHidSetFeature@@Base+0x8b4>
   437e8:	uxth	r2, r3
   437ec:	mov	r0, r4
   437f0:	lsr	r3, r3, #16
   437f4:	mov	r1, #3
   437f8:	pop	{r4, lr}
   437fc:	b	43014 <usbHidSetFeature@@Base+0x8c>
   43800:	mov	r3, #0
   43804:	mov	r0, r4
   43808:	mov	r2, r3
   4380c:	mov	r1, #3
   43810:	pop	{r4, lr}
   43814:	b	43014 <usbHidSetFeature@@Base+0x8c>
   43818:	ldr	r1, [pc, #56]	; 43858 <usbHidSetFeature@@Base+0x8d0>
   4381c:	mov	r0, #4
   43820:	add	r1, pc, r1
   43824:	bl	1c634 <logMessage@@Base>
   43828:	bl	fca4 <__errno_location@plt>
   4382c:	mov	r3, #22
   43830:	str	r3, [r0]
   43834:	mov	r0, #0
   43838:	pop	{r4, pc}
   4383c:	mov	r0, r4
   43840:	mov	r3, #0
   43844:	mov	r2, #1
   43848:	mov	r1, #3
   4384c:	pop	{r4, lr}
   43850:	b	43014 <usbHidSetFeature@@Base+0x8c>
   43854:	andeq	r6, r1, r8, lsl #15
   43858:	andeq	r6, r1, ip, lsr #18
   4385c:	movw	r3, #50880	; 0xc6c0
   43860:	movt	r3, #45	; 0x2d
   43864:	cmp	r1, r3
   43868:	mov	r2, r1
   4386c:	push	{r4, lr}
   43870:	mov	r4, r0
   43874:	bhi	438dc <usbHidSetFeature@@Base+0x954>
   43878:	mov	r0, #13824	; 0x3600
   4387c:	movt	r0, #366	; 0x16e
   43880:	bl	4e204 <formatAddress@@Base+0x258>
   43884:	and	r3, r0, #7
   43888:	cmp	r3, #7
   4388c:	addeq	r0, r0, #1
   43890:	tst	r0, #4
   43894:	lsr	r3, r0, #3
   43898:	movne	r2, #16384	; 0x4000
   4389c:	bne	438b4 <usbHidSetFeature@@Base+0x92c>
   438a0:	tst	r0, #2
   438a4:	movne	r2, #32768	; 0x8000
   438a8:	bne	438b4 <usbHidSetFeature@@Base+0x92c>
   438ac:	ands	r2, r0, #1
   438b0:	movne	r2, #49152	; 0xc000
   438b4:	orr	r3, r2, r3
   438b8:	mov	r0, r4
   438bc:	cmp	r3, #1
   438c0:	mov	r1, #3
   438c4:	uxthne	r2, r3
   438c8:	lsrne	r3, r3, #16
   438cc:	moveq	r3, #0
   438d0:	moveq	r2, r3
   438d4:	pop	{r4, lr}
   438d8:	b	43014 <usbHidSetFeature@@Base+0x8c>
   438dc:	ldr	r1, [pc, #28]	; 43900 <usbHidSetFeature@@Base+0x978>
   438e0:	mov	r0, #4
   438e4:	add	r1, pc, r1
   438e8:	bl	1c634 <logMessage@@Base>
   438ec:	bl	fca4 <__errno_location@plt>
   438f0:	mov	r3, #22
   438f4:	str	r3, [r0]
   438f8:	mov	r0, #0
   438fc:	pop	{r4, pc}
   43900:	andeq	r6, r1, ip, lsl #17
   43904:	push	{r4, r5, r6, r7, lr}
   43908:	sub	sp, sp, #20
   4390c:	ldr	lr, [pc, #100]	; 43978 <usbHidSetFeature@@Base+0x9f0>
   43910:	mov	r7, #2
   43914:	ldr	r4, [pc, #96]	; 4397c <usbHidSetFeature@@Base+0x9f4>
   43918:	mov	r6, #1000	; 0x3e8
   4391c:	add	lr, pc, lr
   43920:	mov	ip, #65	; 0x41
   43924:	mov	r2, ip
   43928:	add	r3, sp, #8
   4392c:	ldr	r4, [lr, r4]
   43930:	mov	r1, #0
   43934:	str	r7, [sp]
   43938:	mov	r5, #1
   4393c:	str	r6, [sp, #4]
   43940:	ldr	lr, [r4]
   43944:	strb	ip, [sp, #8]
   43948:	strb	r5, [sp, #9]
   4394c:	str	lr, [sp, #12]
   43950:	bl	42f08 <usbHidSetReport@@Base>
   43954:	ldr	r2, [sp, #12]
   43958:	ldr	r3, [r4]
   4395c:	adds	r0, r0, #1
   43960:	movne	r0, #1
   43964:	cmp	r2, r3
   43968:	bne	43974 <usbHidSetFeature@@Base+0x9ec>
   4396c:	add	sp, sp, #20
   43970:	pop	{r4, r5, r6, r7, pc}
   43974:	bl	f950 <__stack_chk_fail@plt>
   43978:	andeq	pc, r2, ip, asr r1	; <UNPREDICTABLE>
   4397c:			; <UNDEFINED> instruction: 0x000003b4
   43980:	ldr	ip, [pc, #324]	; 43acc <usbHidSetFeature@@Base+0xb44>
   43984:	mov	r2, #64	; 0x40
   43988:	ldr	r3, [pc, #320]	; 43ad0 <usbHidSetFeature@@Base+0xb48>
   4398c:	add	ip, pc, ip
   43990:	push	{r4, r5, r6, r7, r8, r9, lr}
   43994:	sub	sp, sp, #52	; 0x34
   43998:	ldr	r7, [ip, r3]
   4399c:	mov	r6, #0
   439a0:	str	r6, [sp]
   439a4:	mov	r4, #16
   439a8:	str	r6, [sp, #4]
   439ac:	mov	lr, #1000	; 0x3e8
   439b0:	ldr	ip, [r7]
   439b4:	mov	r8, r1
   439b8:	str	r4, [sp, #12]
   439bc:	add	r5, sp, #28
   439c0:	mov	r1, #1
   439c4:	mov	r3, #20
   439c8:	str	r5, [sp, #8]
   439cc:	mov	r9, r0
   439d0:	str	lr, [sp, #16]
   439d4:	str	ip, [sp, #44]	; 0x2c
   439d8:	bl	41294 <usbControlRead@@Base>
   439dc:	cmn	r0, #1
   439e0:	mov	r4, r0
   439e4:	beq	43aa8 <usbHidSetFeature@@Base+0xb20>
   439e8:	cmp	r0, #15
   439ec:	bls	43a78 <usbHidSetFeature@@Base+0xaf0>
   439f0:	ldr	r1, [pc, #220]	; 43ad4 <usbHidSetFeature@@Base+0xb4c>
   439f4:	mov	r0, #7
   439f8:	mov	r2, r5
   439fc:	mov	r3, r4
   43a00:	add	r1, pc, r1
   43a04:	bl	1c69c <logBytes@@Base>
   43a08:	cmp	r8, #0
   43a0c:	bne	43ab0 <usbHidSetFeature@@Base+0xb28>
   43a10:	ldr	r1, [pc, #192]	; 43ad8 <usbHidSetFeature@@Base+0xb50>
   43a14:	mov	r3, r4
   43a18:	mov	r0, #7
   43a1c:	mov	r2, r5
   43a20:	add	r1, pc, r1
   43a24:	uxth	r4, r4
   43a28:	bl	1c69c <logBytes@@Base>
   43a2c:	mov	r3, #0
   43a30:	mov	r2, #1000	; 0x3e8
   43a34:	str	r3, [sp]
   43a38:	str	r3, [sp, #4]
   43a3c:	mov	r0, r9
   43a40:	str	r2, [sp, #16]
   43a44:	mov	r1, #1
   43a48:	str	r5, [sp, #8]
   43a4c:	mov	r2, #64	; 0x40
   43a50:	str	r4, [sp, #12]
   43a54:	mov	r3, #19
   43a58:	bl	412e4 <usbControlWrite@@Base>
   43a5c:	mov	r0, #1
   43a60:	ldr	r2, [sp, #44]	; 0x2c
   43a64:	ldr	r3, [r7]
   43a68:	cmp	r2, r3
   43a6c:	bne	43ac8 <usbHidSetFeature@@Base+0xb40>
   43a70:	add	sp, sp, #52	; 0x34
   43a74:	pop	{r4, r5, r6, r7, r8, r9, pc}
   43a78:	mov	r1, r6
   43a7c:	rsb	r2, r4, #16
   43a80:	add	r0, r5, r0
   43a84:	bl	f6b0 <memset@plt>
   43a88:	ldr	r1, [pc, #76]	; 43adc <usbHidSetFeature@@Base+0xb54>
   43a8c:	mov	r0, #7
   43a90:	mov	r2, r5
   43a94:	add	r1, pc, r1
   43a98:	mov	r3, r4
   43a9c:	bl	1c69c <logBytes@@Base>
   43aa0:	cmp	r4, #0
   43aa4:	bne	43a08 <usbHidSetFeature@@Base+0xa80>
   43aa8:	mov	r0, #0
   43aac:	b	43a60 <usbHidSetFeature@@Base+0xad8>
   43ab0:	ldr	r1, [pc, #40]	; 43ae0 <usbHidSetFeature@@Base+0xb58>
   43ab4:	mov	r2, r8
   43ab8:	mov	r0, #4
   43abc:	add	r1, pc, r1
   43ac0:	bl	1c634 <logMessage@@Base>
   43ac4:	b	43a10 <usbHidSetFeature@@Base+0xa88>
   43ac8:	bl	f950 <__stack_chk_fail@plt>
   43acc:	andeq	pc, r2, ip, ror #1
   43ad0:			; <UNDEFINED> instruction: 0x000003b4
   43ad4:	muleq	r1, r4, r7
   43ad8:	andeq	r6, r1, r4, ror r7
   43adc:	andeq	r6, r1, r0, lsl #14
   43ae0:	andeq	r6, r1, ip, ror #13
   43ae4:	push	{r4, r5, r6, r7, lr}
   43ae8:	mov	r5, r1
   43aec:	sub	sp, sp, #28
   43af0:	mov	r6, r2
   43af4:	mov	r2, r1
   43af8:	ldr	r1, [pc, #88]	; 43b58 <usbHidSetFeature@@Base+0xbd0>
   43afc:	mov	r4, #0
   43b00:	mov	r7, r0
   43b04:	mov	r3, r6
   43b08:	mov	r0, #7
   43b0c:	str	r4, [sp]
   43b10:	add	r1, pc, r1
   43b14:	bl	1c634 <logMessage@@Base>
   43b18:	uxth	r6, r6
   43b1c:	mov	ip, #1000	; 0x3e8
   43b20:	str	r4, [sp, #4]
   43b24:	mov	r0, r7
   43b28:	str	r6, [sp]
   43b2c:	mov	r1, r4
   43b30:	str	r4, [sp, #8]
   43b34:	mov	r3, r5
   43b38:	str	r4, [sp, #12]
   43b3c:	mov	r2, #64	; 0x40
   43b40:	str	ip, [sp, #16]
   43b44:	bl	412e4 <usbControlWrite@@Base>
   43b48:	adds	r0, r0, #1
   43b4c:	movne	r0, #1
   43b50:	add	sp, sp, #28
   43b54:	pop	{r4, r5, r6, r7, pc}
   43b58:	andeq	r6, r1, r0, asr #13
   43b5c:	push	{r4, r5, r6, lr}
   43b60:	mov	r5, r0
   43b64:	mov	r0, #230400	; 0x38400
   43b68:	mov	r4, r1
   43b6c:	bl	4e3f0 <formatAddress@@Base+0x444>
   43b70:	subs	r6, r1, #0
   43b74:	bne	43b98 <usbHidSetFeature@@Base+0xc10>
   43b78:	mov	r1, r4
   43b7c:	mov	r0, #230400	; 0x38400
   43b80:	bl	4e204 <formatAddress@@Base+0x258>
   43b84:	mov	r1, r6
   43b88:	mov	r2, r0
   43b8c:	mov	r0, r5
   43b90:	pop	{r4, r5, r6, lr}
   43b94:	b	43ae4 <usbHidSetFeature@@Base+0xb5c>
   43b98:	ldr	r1, [pc, #32]	; 43bc0 <usbHidSetFeature@@Base+0xc38>
   43b9c:	mov	r2, r4
   43ba0:	mov	r0, #4
   43ba4:	add	r1, pc, r1
   43ba8:	bl	1c634 <logMessage@@Base>
   43bac:	bl	fca4 <__errno_location@plt>
   43bb0:	mov	r3, #22
   43bb4:	str	r3, [r0]
   43bb8:	mov	r0, #0
   43bbc:	pop	{r4, r5, r6, pc}
   43bc0:	andeq	r6, r1, ip, asr #12
   43bc4:	sub	ip, r1, #5
   43bc8:	cmp	ip, #3
   43bcc:	push	{r4, r5, r6, lr}
   43bd0:	mov	r4, r2
   43bd4:	mov	r6, r3
   43bd8:	mov	r5, r0
   43bdc:	bhi	43c68 <usbHidSetFeature@@Base+0xce0>
   43be0:	mov	r2, ip
   43be4:	mov	r1, #2
   43be8:	bl	43ae4 <usbHidSetFeature@@Base+0xb5c>
   43bec:	cmp	r0, #0
   43bf0:	beq	43c5c <usbHidSetFeature@@Base+0xcd4>
   43bf4:	cmp	r4, #1
   43bf8:	beq	43ca8 <usbHidSetFeature@@Base+0xd20>
   43bfc:	cmp	r4, #2
   43c00:	bne	43c94 <usbHidSetFeature@@Base+0xd0c>
   43c04:	mov	r2, #1
   43c08:	mov	r0, r5
   43c0c:	mov	r1, #1
   43c10:	bl	43ae4 <usbHidSetFeature@@Base+0xb5c>
   43c14:	cmp	r0, #0
   43c18:	beq	43c5c <usbHidSetFeature@@Base+0xcd4>
   43c1c:	cmp	r6, #4
   43c20:	addls	pc, pc, r6, lsl #2
   43c24:	b	43c3c <usbHidSetFeature@@Base+0xcb4>
   43c28:	b	43cd0 <usbHidSetFeature@@Base+0xd48>
   43c2c:	b	43cb0 <usbHidSetFeature@@Base+0xd28>
   43c30:	b	43ce8 <usbHidSetFeature@@Base+0xd60>
   43c34:	b	43ce0 <usbHidSetFeature@@Base+0xd58>
   43c38:	b	43cd8 <usbHidSetFeature@@Base+0xd50>
   43c3c:	ldr	r1, [pc, #172]	; 43cf0 <usbHidSetFeature@@Base+0xd68>
   43c40:	mov	r2, r6
   43c44:	mov	r0, #4
   43c48:	add	r1, pc, r1
   43c4c:	bl	1c634 <logMessage@@Base>
   43c50:	bl	fca4 <__errno_location@plt>
   43c54:	mov	r3, #22
   43c58:	str	r3, [r0]
   43c5c:	mov	r3, #0
   43c60:	mov	r0, r3
   43c64:	pop	{r4, r5, r6, pc}
   43c68:	mov	r2, r1
   43c6c:	ldr	r1, [pc, #128]	; 43cf4 <usbHidSetFeature@@Base+0xd6c>
   43c70:	mov	r0, #4
   43c74:	add	r1, pc, r1
   43c78:	bl	1c634 <logMessage@@Base>
   43c7c:	bl	fca4 <__errno_location@plt>
   43c80:	mov	r3, #0
   43c84:	mov	r2, #22
   43c88:	str	r2, [r0]
   43c8c:	mov	r0, r3
   43c90:	pop	{r4, r5, r6, pc}
   43c94:	ldr	r1, [pc, #92]	; 43cf8 <usbHidSetFeature@@Base+0xd70>
   43c98:	mov	r2, r4
   43c9c:	mov	r0, #4
   43ca0:	add	r1, pc, r1
   43ca4:	b	43c78 <usbHidSetFeature@@Base+0xcf0>
   43ca8:	mov	r2, #0
   43cac:	b	43c08 <usbHidSetFeature@@Base+0xc80>
   43cb0:	mov	r2, #2
   43cb4:	mov	r0, r5
   43cb8:	mov	r1, #3
   43cbc:	bl	43ae4 <usbHidSetFeature@@Base+0xb5c>
   43cc0:	cmp	r0, #0
   43cc4:	movne	r3, #1
   43cc8:	beq	43c5c <usbHidSetFeature@@Base+0xcd4>
   43ccc:	b	43c60 <usbHidSetFeature@@Base+0xcd8>
   43cd0:	mov	r2, #4
   43cd4:	b	43cb4 <usbHidSetFeature@@Base+0xd2c>
   43cd8:	mov	r2, #0
   43cdc:	b	43cb4 <usbHidSetFeature@@Base+0xd2c>
   43ce0:	mov	r2, #3
   43ce4:	b	43cb4 <usbHidSetFeature@@Base+0xd2c>
   43ce8:	mov	r2, #1
   43cec:	b	43cb4 <usbHidSetFeature@@Base+0xd2c>
   43cf0:	andeq	r6, r1, ip, lsl #12
   43cf4:	muleq	r1, r8, r5
   43cf8:	muleq	r1, r0, r5
   43cfc:	cmp	r1, #1
   43d00:	mov	r2, r1
   43d04:	push	{r3, lr}
   43d08:	bls	43d30 <usbHidSetFeature@@Base+0xda8>
   43d0c:	ldr	r1, [pc, #40]	; 43d3c <usbHidSetFeature@@Base+0xdb4>
   43d10:	mov	r0, #4
   43d14:	add	r1, pc, r1
   43d18:	bl	1c634 <logMessage@@Base>
   43d1c:	bl	fca4 <__errno_location@plt>
   43d20:	mov	r3, #22
   43d24:	str	r3, [r0]
   43d28:	mov	r0, #0
   43d2c:	pop	{r3, pc}
   43d30:	mov	r1, #10
   43d34:	pop	{r3, lr}
   43d38:	b	43ae4 <usbHidSetFeature@@Base+0xb5c>
   43d3c:	andeq	r6, r1, r0, ror #10
   43d40:	cmp	r1, #1
   43d44:	mov	r2, r1
   43d48:	push	{r3, lr}
   43d4c:	bls	43d74 <usbHidSetFeature@@Base+0xdec>
   43d50:	ldr	r1, [pc, #40]	; 43d80 <usbHidSetFeature@@Base+0xdf8>
   43d54:	mov	r0, #4
   43d58:	add	r1, pc, r1
   43d5c:	bl	1c634 <logMessage@@Base>
   43d60:	bl	fca4 <__errno_location@plt>
   43d64:	mov	r3, #22
   43d68:	str	r3, [r0]
   43d6c:	mov	r0, #0
   43d70:	pop	{r3, pc}
   43d74:	mov	r1, #11
   43d78:	pop	{r3, lr}
   43d7c:	b	43ae4 <usbHidSetFeature@@Base+0xb5c>
   43d80:	andeq	r6, r1, r0, asr #10
   43d84:	push	{r3, r4, r5, lr}
   43d88:	ands	r4, r1, #2
   43d8c:	bicne	r1, r1, #2
   43d90:	mov	r5, r0
   43d94:	movne	r4, #1
   43d98:	tst	r1, #4
   43d9c:	bicne	r1, r1, #4
   43da0:	orrne	r4, r4, #2
   43da4:	tst	r1, #128	; 0x80
   43da8:	bicne	r1, r1, #128	; 0x80
   43dac:	orrne	r4, r4, #4
   43db0:	tst	r1, #64	; 0x40
   43db4:	bicne	r1, r1, #64	; 0x40
   43db8:	orrne	r4, r4, #8
   43dbc:	tst	r1, #32
   43dc0:	bicne	r1, r1, #32
   43dc4:	orrne	r4, r4, #16
   43dc8:	tst	r1, #8
   43dcc:	bicne	r1, r1, #8
   43dd0:	orrne	r4, r4, #32
   43dd4:	tst	r1, #1
   43dd8:	bicne	r1, r1, #1
   43ddc:	orrne	r4, r4, #128	; 0x80
   43de0:	tst	r1, #16
   43de4:	bicne	r1, r1, #16
   43de8:	orrne	r4, r4, #256	; 0x100
   43dec:	cmp	r1, #0
   43df0:	beq	43e08 <usbHidSetFeature@@Base+0xe80>
   43df4:	mov	r2, r1
   43df8:	ldr	r1, [pc, #28]	; 43e1c <usbHidSetFeature@@Base+0xe94>
   43dfc:	mov	r0, #4
   43e00:	add	r1, pc, r1
   43e04:	bl	1c634 <logMessage@@Base>
   43e08:	mov	r0, r5
   43e0c:	mov	r2, r4
   43e10:	mov	r1, #16
   43e14:	pop	{r3, r4, r5, lr}
   43e18:	b	43ae4 <usbHidSetFeature@@Base+0xb5c>
   43e1c:			; <UNDEFINED> instruction: 0x000164bc
   43e20:	push	{r4, r5, r6, r7, lr}
   43e24:	mov	r5, r1
   43e28:	sub	sp, sp, #28
   43e2c:	mov	r6, r2
   43e30:	mov	r2, r1
   43e34:	ldr	r1, [pc, #88]	; 43e94 <usbHidSetFeature@@Base+0xf0c>
   43e38:	mov	r4, #0
   43e3c:	mov	r7, r0
   43e40:	mov	r3, r6
   43e44:	mov	r0, #7
   43e48:	str	r4, [sp]
   43e4c:	add	r1, pc, r1
   43e50:	bl	1c634 <logMessage@@Base>
   43e54:	uxth	r6, r6
   43e58:	str	r4, [sp, #4]
   43e5c:	mov	r0, r7
   43e60:	str	r6, [sp]
   43e64:	mov	r3, r5
   43e68:	str	r4, [sp, #8]
   43e6c:	mov	r2, #1000	; 0x3e8
   43e70:	str	r4, [sp, #12]
   43e74:	mov	r1, #1
   43e78:	str	r2, [sp, #16]
   43e7c:	mov	r2, #64	; 0x40
   43e80:	bl	412e4 <usbControlWrite@@Base>
   43e84:	adds	r0, r0, #1
   43e88:	movne	r0, #1
   43e8c:	add	sp, sp, #28
   43e90:	pop	{r4, r5, r6, r7, pc}
   43e94:	muleq	r1, r8, r4
   43e98:	push	{r3, r4, r5, lr}
   43e9c:	mov	r5, r0
   43ea0:	mov	r0, #3686400	; 0x384000
   43ea4:	mov	r4, r1
   43ea8:	bl	4e204 <formatAddress@@Base+0x258>
   43eac:	mul	r3, r4, r0
   43eb0:	mov	r2, r0
   43eb4:	cmp	r3, #3686400	; 0x384000
   43eb8:	beq	43ee4 <usbHidSetFeature@@Base+0xf5c>
   43ebc:	ldr	r1, [pc, #48]	; 43ef4 <usbHidSetFeature@@Base+0xf6c>
   43ec0:	mov	r2, r4
   43ec4:	mov	r0, #4
   43ec8:	add	r1, pc, r1
   43ecc:	bl	1c634 <logMessage@@Base>
   43ed0:	bl	fca4 <__errno_location@plt>
   43ed4:	mov	r3, #22
   43ed8:	str	r3, [r0]
   43edc:	mov	r0, #0
   43ee0:	pop	{r3, r4, r5, pc}
   43ee4:	mov	r0, r5
   43ee8:	mov	r1, #1
   43eec:	pop	{r3, r4, r5, lr}
   43ef0:	b	43e20 <usbHidSetFeature@@Base+0xe98>
   43ef4:	andeq	r6, r1, ip, lsr r4
   43ef8:	push	{r3, r4, r5, r6, r7, lr}
   43efc:	and	r4, r1, #15
   43f00:	cmp	r1, r4
   43f04:	mov	r5, r3
   43f08:	mov	r7, r0
   43f0c:	mov	r6, r2
   43f10:	moveq	r3, #1
   43f14:	beq	43f30 <usbHidSetFeature@@Base+0xfa8>
   43f18:	mov	r2, r1
   43f1c:	ldr	r1, [pc, #192]	; 43fe4 <usbHidSetFeature@@Base+0x105c>
   43f20:	mov	r0, #4
   43f24:	add	r1, pc, r1
   43f28:	bl	1c634 <logMessage@@Base>
   43f2c:	mov	r3, #0
   43f30:	lsl	r4, r4, #8
   43f34:	cmp	r5, #4
   43f38:	addls	pc, pc, r5, lsl #2
   43f3c:	b	43f54 <usbHidSetFeature@@Base+0xfcc>
   43f40:	b	43fcc <usbHidSetFeature@@Base+0x1044>
   43f44:	b	43fd4 <usbHidSetFeature@@Base+0x104c>
   43f48:	b	43fdc <usbHidSetFeature@@Base+0x1054>
   43f4c:	b	43fc4 <usbHidSetFeature@@Base+0x103c>
   43f50:	b	43f6c <usbHidSetFeature@@Base+0xfe4>
   43f54:	ldr	r1, [pc, #140]	; 43fe8 <usbHidSetFeature@@Base+0x1060>
   43f58:	mov	r2, r5
   43f5c:	mov	r0, #4
   43f60:	add	r1, pc, r1
   43f64:	bl	1c634 <logMessage@@Base>
   43f68:	mov	r3, #0
   43f6c:	cmp	r6, #1
   43f70:	beq	43fa8 <usbHidSetFeature@@Base+0x1020>
   43f74:	cmp	r6, #2
   43f78:	orreq	r4, r4, #2
   43f7c:	beq	43fa8 <usbHidSetFeature@@Base+0x1020>
   43f80:	ldr	r1, [pc, #100]	; 43fec <usbHidSetFeature@@Base+0x1064>
   43f84:	mov	r2, r6
   43f88:	mov	r0, #4
   43f8c:	add	r1, pc, r1
   43f90:	bl	1c634 <logMessage@@Base>
   43f94:	bl	fca4 <__errno_location@plt>
   43f98:	mov	r3, #22
   43f9c:	str	r3, [r0]
   43fa0:	mov	r0, #0
   43fa4:	pop	{r3, r4, r5, r6, r7, pc}
   43fa8:	cmp	r3, #0
   43fac:	beq	43f94 <usbHidSetFeature@@Base+0x100c>
   43fb0:	mov	r0, r7
   43fb4:	mov	r2, r4
   43fb8:	mov	r1, #3
   43fbc:	pop	{r3, r4, r5, r6, r7, lr}
   43fc0:	b	43e20 <usbHidSetFeature@@Base+0xe98>
   43fc4:	orr	r4, r4, #48	; 0x30
   43fc8:	b	43f6c <usbHidSetFeature@@Base+0xfe4>
   43fcc:	orr	r4, r4, #64	; 0x40
   43fd0:	b	43f6c <usbHidSetFeature@@Base+0xfe4>
   43fd4:	orr	r4, r4, #16
   43fd8:	b	43f6c <usbHidSetFeature@@Base+0xfe4>
   43fdc:	orr	r4, r4, #32
   43fe0:	b	43f6c <usbHidSetFeature@@Base+0xfe4>
   43fe4:	strdeq	r6, [r1], -ip
   43fe8:	andeq	r6, r1, r4, ror #7
   43fec:	ldrdeq	r6, [r1], -r8
   43ff0:	cmp	r1, #1
   43ff4:	mov	ip, r1
   43ff8:	push	{r3, lr}
   43ffc:	bls	4402c <usbHidSetFeature@@Base+0x10a4>
   44000:	mov	r2, r3
   44004:	mov	r3, r1
   44008:	ldr	r1, [pc, #56]	; 44048 <usbHidSetFeature@@Base+0x10c0>
   4400c:	mov	r0, #4
   44010:	add	r1, pc, r1
   44014:	bl	1c634 <logMessage@@Base>
   44018:	bl	fca4 <__errno_location@plt>
   4401c:	mov	r3, #22
   44020:	str	r3, [r0]
   44024:	mov	r0, #0
   44028:	pop	{r3, pc}
   4402c:	add	r3, r2, #8
   44030:	mov	r1, #1
   44034:	lsl	r3, r1, r3
   44038:	mov	r1, #7
   4403c:	orr	r2, r3, ip, lsl r2
   44040:	pop	{r3, lr}
   44044:	b	43e20 <usbHidSetFeature@@Base+0xe98>
   44048:	andeq	r6, r1, r8, ror r3
   4404c:	ldr	r3, [pc, #8]	; 4405c <usbHidSetFeature@@Base+0x10d4>
   44050:	mov	r2, #1
   44054:	add	r3, pc, r3
   44058:	b	43ff0 <usbHidSetFeature@@Base+0x1068>
   4405c:	strdeq	r6, [r1], -r4
   44060:	ldr	r3, [pc, #8]	; 44070 <usbHidSetFeature@@Base+0x10e8>
   44064:	mov	r2, #0
   44068:	add	r3, pc, r3
   4406c:	b	43ff0 <usbHidSetFeature@@Base+0x1068>
   44070:	andeq	r6, r1, r0, asr #6
   44074:	mov	r1, #0
   44078:	push	{r4, lr}
   4407c:	mov	r2, r1
   44080:	mov	r4, r0
   44084:	bl	43e20 <usbHidSetFeature@@Base+0xe98>
   44088:	cmp	r0, #0
   4408c:	bne	44098 <usbHidSetFeature@@Base+0x1110>
   44090:	mov	r0, #0
   44094:	pop	{r4, pc}
   44098:	mov	r0, r4
   4409c:	mov	r1, #0
   440a0:	mov	r2, #1
   440a4:	bl	43e20 <usbHidSetFeature@@Base+0xe98>
   440a8:	cmp	r0, #0
   440ac:	beq	44090 <usbHidSetFeature@@Base+0x1108>
   440b0:	ldr	r3, [pc, #60]	; 440f4 <usbHidSetFeature@@Base+0x116c>
   440b4:	mov	r0, r4
   440b8:	mov	r1, #1
   440bc:	mov	r2, #0
   440c0:	add	r3, pc, r3
   440c4:	bl	43ff0 <usbHidSetFeature@@Base+0x1068>
   440c8:	cmp	r0, #0
   440cc:	beq	44090 <usbHidSetFeature@@Base+0x1108>
   440d0:	ldr	r3, [pc, #32]	; 440f8 <usbHidSetFeature@@Base+0x1170>
   440d4:	mov	r1, #1
   440d8:	mov	r0, r4
   440dc:	mov	r2, r1
   440e0:	add	r3, pc, r3
   440e4:	bl	43ff0 <usbHidSetFeature@@Base+0x1068>
   440e8:	adds	r0, r0, #0
   440ec:	movne	r0, #1
   440f0:	pop	{r4, pc}
   440f4:	andeq	r6, r1, r8, ror #5
   440f8:	andeq	r6, r1, r8, rrx
   440fc:	push	{r3, lr}
   44100:	mov	r3, r0
   44104:	ldr	r2, [r0, #8]
   44108:	ldr	r0, [r0]
   4410c:	cmp	r2, #1
   44110:	movls	r2, #0
   44114:	strls	r2, [r3, #8]
   44118:	bhi	44124 <usbHidSetFeature@@Base+0x119c>
   4411c:	mov	r0, #1
   44120:	pop	{r3, pc}
   44124:	sub	r2, r2, #1
   44128:	add	r1, r0, #1
   4412c:	str	r2, [r3, #8]
   44130:	bl	f7dc <memmove@plt>
   44134:	mov	r0, #1
   44138:	pop	{r3, pc}
   4413c:	cmp	r1, #1
   44140:	push	{r4, lr}
   44144:	bls	44178 <usbHidSetFeature@@Base+0x11f0>
   44148:	mov	r3, r1
   4414c:	ldr	r2, [pc, #56]	; 4418c <usbHidSetFeature@@Base+0x1204>
   44150:	ldr	r1, [pc, #56]	; 44190 <usbHidSetFeature@@Base+0x1208>
   44154:	mov	r0, #4
   44158:	add	r2, pc, r2
   4415c:	add	r1, pc, r1
   44160:	bl	1c634 <logMessage@@Base>
   44164:	bl	fca4 <__errno_location@plt>
   44168:	mov	r3, #22
   4416c:	str	r3, [r0]
   44170:	mov	r0, #0
   44174:	pop	{r4, pc}
   44178:	orr	r2, r1, #256	; 0x100
   4417c:	mov	r3, #0
   44180:	mov	r1, #1
   44184:	pop	{r4, lr}
   44188:	b	43014 <usbHidSetFeature@@Base+0x8c>
   4418c:	andeq	r6, r1, r0, asr r2
   44190:	andeq	r5, r1, ip, asr #31

00044194 <usbSetSerialOperations@@Base>:
   44194:	ldr	r3, [pc, #516]	; 443a0 <usbSetSerialOperations@@Base+0x20c>
   44198:	ldr	r1, [pc, #516]	; 443a4 <usbSetSerialOperations@@Base+0x210>
   4419c:	add	r3, pc, r3
   441a0:	push	{r4, r5, r6, r7, lr}
   441a4:	sub	sp, sp, #12
   441a8:	ldr	r6, [r3, r1]
   441ac:	mov	r5, r0
   441b0:	ldr	r2, [r0, #24]
   441b4:	ldr	r3, [r6]
   441b8:	cmp	r2, #0
   441bc:	str	r3, [sp, #4]
   441c0:	beq	441e4 <usbSetSerialOperations@@Base+0x50>
   441c4:	mov	r3, #1
   441c8:	ldr	r2, [sp, #4]
   441cc:	mov	r0, r3
   441d0:	ldr	r3, [r6]
   441d4:	cmp	r2, r3
   441d8:	bne	4439c <usbSetSerialOperations@@Base+0x208>
   441dc:	add	sp, sp, #12
   441e0:	pop	{r4, r5, r6, r7, pc}
   441e4:	ldr	r4, [pc, #444]	; 443a8 <usbSetSerialOperations@@Base+0x214>
   441e8:	movw	r3, #2337	; 0x921
   441ec:	ldrh	r2, [r0, #8]
   441f0:	add	r4, pc, r4
   441f4:	b	44204 <usbSetSerialOperations@@Base+0x70>
   441f8:	ldrh	r3, [r4, #12]!
   441fc:	cmp	r3, #0
   44200:	beq	44250 <usbSetSerialOperations@@Base+0xbc>
   44204:	cmp	r2, r3
   44208:	bne	441f8 <usbSetSerialOperations@@Base+0x64>
   4420c:	ldrh	r3, [r4, #2]
   44210:	cmp	r3, #0
   44214:	beq	44224 <usbSetSerialOperations@@Base+0x90>
   44218:	ldrh	r1, [r5, #10]
   4421c:	cmp	r1, r3
   44220:	bne	441f8 <usbSetSerialOperations@@Base+0x64>
   44224:	ldr	r1, [r4, #8]
   44228:	cmp	r1, #0
   4422c:	beq	44240 <usbSetSerialOperations@@Base+0xac>
   44230:	mov	r0, r5
   44234:	bl	41dfc <usbAddInputFilter@@Base>
   44238:	subs	r3, r0, #0
   4423c:	beq	441c8 <usbSetSerialOperations@@Base+0x34>
   44240:	ldr	r2, [r4, #4]
   44244:	mov	r3, #1
   44248:	str	r2, [r5, #24]
   4424c:	b	441c8 <usbSetSerialOperations@@Base+0x34>
   44250:	ldrb	r2, [r5, #4]
   44254:	cmp	r2, #2
   44258:	addeq	r7, sp, #8
   4425c:	streq	r3, [r7, #-8]!
   44260:	bne	441c4 <usbSetSerialOperations@@Base+0x30>
   44264:	mov	r0, r5
   44268:	mov	r1, sp
   4426c:	bl	419b0 <usbNextDescriptor@@Base>
   44270:	cmp	r0, #0
   44274:	beq	44344 <usbSetSerialOperations@@Base+0x1b0>
   44278:	ldr	r4, [sp]
   4427c:	ldrb	r3, [r4, #1]
   44280:	cmp	r3, #4
   44284:	bne	44264 <usbSetSerialOperations@@Base+0xd0>
   44288:	ldrb	r3, [r4, #5]
   4428c:	cmp	r3, #2
   44290:	bne	44264 <usbSetSerialOperations@@Base+0xd0>
   44294:	ldrb	r3, [r4, #6]
   44298:	cmp	r3, #2
   4429c:	bne	44368 <usbSetSerialOperations@@Base+0x1d4>
   442a0:	ldr	r3, [pc, #260]	; 443ac <usbSetSerialOperations@@Base+0x218>
   442a4:	add	r3, pc, r3
   442a8:	add	r3, r3, #312	; 0x138
   442ac:	str	r3, [r5, #24]
   442b0:	str	r4, [r5, #28]
   442b4:	mov	r0, r5
   442b8:	ldrb	r1, [r4, #2]
   442bc:	bl	45040 <usbClaimInterface@@Base>
   442c0:	cmp	r0, #0
   442c4:	beq	441c4 <usbSetSerialOperations@@Base+0x30>
   442c8:	mov	r0, r5
   442cc:	ldrb	r1, [r4, #2]
   442d0:	ldrb	r2, [r4, #3]
   442d4:	bl	4529c <usbSetAlternative@@Base>
   442d8:	cmp	r0, #0
   442dc:	strne	r4, [sp]
   442e0:	beq	441c4 <usbSetSerialOperations@@Base+0x30>
   442e4:	mov	r0, r5
   442e8:	mov	r1, sp
   442ec:	bl	419b0 <usbNextDescriptor@@Base>
   442f0:	cmp	r0, #0
   442f4:	beq	44378 <usbSetSerialOperations@@Base+0x1e4>
   442f8:	ldr	r2, [sp]
   442fc:	ldrb	r3, [r2, #1]
   44300:	cmp	r3, #4
   44304:	beq	44378 <usbSetSerialOperations@@Base+0x1e4>
   44308:	cmp	r3, #5
   4430c:	bne	442e4 <usbSetSerialOperations@@Base+0x150>
   44310:	ldrsb	r3, [r2, #2]
   44314:	cmp	r3, #0
   44318:	bge	442e4 <usbSetSerialOperations@@Base+0x150>
   4431c:	ldrb	r3, [r2, #3]
   44320:	and	r3, r3, #3
   44324:	cmp	r3, #3
   44328:	bne	442e4 <usbSetSerialOperations@@Base+0x150>
   4432c:	ldrb	r1, [r2, #2]
   44330:	mov	r0, r5
   44334:	mov	r2, #8
   44338:	and	r1, r1, #15
   4433c:	bl	42320 <usbBeginInput@@Base>
   44340:	b	441c4 <usbSetSerialOperations@@Base+0x30>
   44344:	ldr	r1, [pc, #100]	; 443b0 <usbSetSerialOperations@@Base+0x21c>
   44348:	mov	r0, #4
   4434c:	add	r1, pc, r1
   44350:	bl	1c634 <logMessage@@Base>
   44354:	bl	fca4 <__errno_location@plt>
   44358:	mov	r2, #2
   4435c:	mov	r3, #1
   44360:	str	r2, [r0]
   44364:	b	441c8 <usbSetSerialOperations@@Base+0x34>
   44368:	ldr	r3, [r5, #24]
   4436c:	cmp	r3, #0
   44370:	bne	442b0 <usbSetSerialOperations@@Base+0x11c>
   44374:	b	441c4 <usbSetSerialOperations@@Base+0x30>
   44378:	ldr	r1, [pc, #52]	; 443b4 <usbSetSerialOperations@@Base+0x220>
   4437c:	mov	r0, #4
   44380:	add	r1, pc, r1
   44384:	bl	1c634 <logMessage@@Base>
   44388:	bl	fca4 <__errno_location@plt>
   4438c:	mov	r2, #2
   44390:	mov	r3, #1
   44394:	str	r2, [r0]
   44398:	b	441c8 <usbSetSerialOperations@@Base+0x34>
   4439c:	bl	f950 <__stack_chk_fail@plt>
   443a0:	ldrdeq	lr, [r2], -ip
   443a4:			; <UNDEFINED> instruction: 0x000003b4
   443a8:	ldrdeq	sp, [r2], -r4
   443ac:	andeq	sp, r2, r0, lsr #16
   443b0:	andeq	r6, r1, r0, rrx
   443b4:	andeq	r6, r1, r0, rrx

000443b8 <usbGetSerialOperations@@Base>:
   443b8:	ldr	r0, [r0, #24]
   443bc:	bx	lr

000443c0 <usbSetSerialParameters@@Base>:
   443c0:	push	{r4, r5, r6, lr}
   443c4:	sub	sp, sp, #8
   443c8:	mov	r4, r1
   443cc:	mov	r6, r0
   443d0:	bl	443b8 <usbGetSerialOperations@@Base>
   443d4:	subs	r5, r0, #0
   443d8:	beq	444a4 <usbSetSerialParameters@@Base+0xe4>
   443dc:	ldr	ip, [r5]
   443e0:	cmp	ip, #0
   443e4:	beq	44418 <usbSetSerialParameters@@Base+0x58>
   443e8:	ldr	lr, [r4, #12]
   443ec:	mov	r0, r6
   443f0:	ldm	r4, {r1, r2, r3}
   443f4:	str	lr, [sp]
   443f8:	ldr	lr, [r4, #16]
   443fc:	str	lr, [sp, #4]
   44400:	blx	ip
   44404:	adds	r5, r0, #0
   44408:	movne	r5, #1
   4440c:	mov	r0, r5
   44410:	add	sp, sp, #8
   44414:	pop	{r4, r5, r6, pc}
   44418:	ldr	ip, [r5, #4]
   4441c:	cmp	ip, #0
   44420:	beq	44464 <usbSetSerialParameters@@Base+0xa4>
   44424:	ldmib	r4, {r2, r3, lr}
   44428:	mov	r0, r6
   4442c:	ldr	r1, [r4]
   44430:	str	lr, [sp]
   44434:	blx	ip
   44438:	cmp	r0, #0
   4443c:	beq	44494 <usbSetSerialParameters@@Base+0xd4>
   44440:	ldr	r3, [r5, #16]
   44444:	mov	r0, r6
   44448:	ldr	r1, [r4, #16]
   4444c:	blx	r3
   44450:	adds	r5, r0, #0
   44454:	movne	r5, #1
   44458:	mov	r0, r5
   4445c:	add	sp, sp, #8
   44460:	pop	{r4, r5, r6, pc}
   44464:	ldr	r3, [r5, #8]
   44468:	mov	r0, r6
   4446c:	ldr	r1, [r4]
   44470:	blx	r3
   44474:	cmp	r0, #0
   44478:	beq	44494 <usbSetSerialParameters@@Base+0xd4>
   4447c:	ldr	ip, [r5, #12]
   44480:	mov	r0, r6
   44484:	ldmib	r4, {r1, r2, r3}
   44488:	blx	ip
   4448c:	cmp	r0, #0
   44490:	bne	44440 <usbSetSerialParameters@@Base+0x80>
   44494:	mov	r5, #0
   44498:	mov	r0, r5
   4449c:	add	sp, sp, #8
   444a0:	pop	{r4, r5, r6, pc}
   444a4:	ldr	r1, [pc, #32]	; 444cc <usbSetSerialParameters@@Base+0x10c>
   444a8:	mov	r0, #7
   444ac:	ldrh	r3, [r6, #10]
   444b0:	add	r1, pc, r1
   444b4:	ldrh	r2, [r6, #8]
   444b8:	bl	1c634 <logMessage@@Base>
   444bc:	bl	fca4 <__errno_location@plt>
   444c0:	mov	r3, #38	; 0x26
   444c4:	str	r3, [r0]
   444c8:	b	4440c <usbSetSerialParameters@@Base+0x4c>
   444cc:	andeq	r5, r1, r4, ror #30
   444d0:	push	{r4, lr}
   444d4:	mov	r4, r0
   444d8:	ldr	r0, [r0]
   444dc:	cmp	r0, #0
   444e0:	beq	444e8 <usbSetSerialParameters@@Base+0x128>
   444e4:	bl	f4f4 <free@plt>
   444e8:	ldr	r0, [r4, #4]
   444ec:	cmp	r0, #0
   444f0:	beq	444f8 <usbSetSerialParameters@@Base+0x138>
   444f4:	bl	f4f4 <free@plt>
   444f8:	mov	r0, r4
   444fc:	pop	{r4, lr}
   44500:	b	f4f4 <free@plt>
   44504:	ldr	r3, [pc, #92]	; 44568 <usbSetSerialParameters@@Base+0x1a8>
   44508:	ldr	r2, [pc, #92]	; 4456c <usbSetSerialParameters@@Base+0x1ac>
   4450c:	add	r3, pc, r3
   44510:	push	{r4, lr}
   44514:	sub	sp, sp, #72	; 0x48
   44518:	ldr	r4, [r3, r2]
   4451c:	add	r1, sp, #4
   44520:	ldr	r3, [r4]
   44524:	str	r3, [sp, #68]	; 0x44
   44528:	bl	f578 <statfs@plt>
   4452c:	cmn	r0, #1
   44530:	moveq	r0, #0
   44534:	beq	4454c <usbSetSerialParameters@@Base+0x18c>
   44538:	ldr	r0, [sp, #4]
   4453c:	movw	r3, #40866	; 0x9fa2
   44540:	subs	r3, r0, r3
   44544:	rsbs	r0, r3, #0
   44548:	adcs	r0, r0, r3
   4454c:	ldr	r2, [sp, #68]	; 0x44
   44550:	ldr	r3, [r4]
   44554:	cmp	r2, r3
   44558:	bne	44564 <usbSetSerialParameters@@Base+0x1a4>
   4455c:	add	sp, sp, #72	; 0x48
   44560:	pop	{r4, pc}
   44564:	bl	f950 <__stack_chk_fail@plt>
   44568:	andeq	lr, r2, ip, ror #10
   4456c:			; <UNDEFINED> instruction: 0x000003b4
   44570:	push	{r3, r4, r5, lr}
   44574:	mov	r4, r1
   44578:	ldr	r1, [pc, #72]	; 445c8 <usbSetSerialParameters@@Base+0x208>
   4457c:	mov	r5, r0
   44580:	mov	r0, r4
   44584:	add	r1, pc, r1
   44588:	bl	fc5c <strcmp@plt>
   4458c:	cmp	r0, #0
   44590:	beq	445ac <usbSetSerialParameters@@Base+0x1ec>
   44594:	ldr	r1, [pc, #48]	; 445cc <usbSetSerialParameters@@Base+0x20c>
   44598:	mov	r0, r4
   4459c:	add	r1, pc, r1
   445a0:	bl	fc5c <strcmp@plt>
   445a4:	cmp	r0, #0
   445a8:	bne	445c0 <usbSetSerialParameters@@Base+0x200>
   445ac:	mov	r0, r5
   445b0:	bl	44504 <usbSetSerialParameters@@Base+0x144>
   445b4:	adds	r0, r0, #0
   445b8:	movne	r0, #1
   445bc:	pop	{r3, r4, r5, pc}
   445c0:	mov	r0, #0
   445c4:	pop	{r3, r4, r5, pc}
   445c8:	andeq	r5, r1, r4, asr #29
   445cc:			; <UNDEFINED> instruction: 0x00015eb8
   445d0:	push	{r3, lr}
   445d4:	mov	r1, #0
   445d8:	bl	f9a4 <access@plt>
   445dc:	adds	r0, r0, #1
   445e0:	movne	r0, #1
   445e4:	pop	{r3, pc}
   445e8:	ldr	r3, [pc, #1176]	; 44a88 <usbSetSerialParameters@@Base+0x6c8>
   445ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   445f0:	add	fp, sp, #32
   445f4:	ldr	r2, [pc, #1168]	; 44a8c <usbSetSerialParameters@@Base+0x6cc>
   445f8:	sub	sp, sp, #196	; 0xc4
   445fc:	add	r3, pc, r3
   44600:	str	r0, [fp, #-156]	; 0xffffff64
   44604:	ldr	r2, [r3, r2]
   44608:	ldr	r3, [r2]
   4460c:	str	r2, [fp, #-164]	; 0xffffff5c
   44610:	str	r3, [fp, #-40]	; 0xffffffd8
   44614:	bl	fb54 <strlen@plt>
   44618:	mov	r8, r0
   4461c:	ldr	r0, [fp, #-156]	; 0xffffff64
   44620:	bl	f6d4 <opendir@plt>
   44624:	subs	sl, r0, #0
   44628:	beq	44848 <usbSetSerialParameters@@Base+0x488>
   4462c:	ldr	r0, [pc, #1116]	; 44a90 <usbSetSerialParameters@@Base+0x6d0>
   44630:	ldr	r1, [pc, #1116]	; 44a94 <usbSetSerialParameters@@Base+0x6d4>
   44634:	add	r0, pc, r0
   44638:	ldr	r2, [pc, #1112]	; 44a98 <usbSetSerialParameters@@Base+0x6d8>
   4463c:	add	r1, pc, r1
   44640:	str	r0, [fp, #-152]	; 0xffffff68
   44644:	str	r1, [fp, #-160]	; 0xffffff60
   44648:	add	r2, pc, r2
   4464c:	ldr	r3, [pc, #1096]	; 44a9c <usbSetSerialParameters@@Base+0x6dc>
   44650:	ldr	r0, [pc, #1096]	; 44aa0 <usbSetSerialParameters@@Base+0x6e0>
   44654:	ldr	r1, [pc, #1096]	; 44aa4 <usbSetSerialParameters@@Base+0x6e4>
   44658:	add	r3, pc, r3
   4465c:	add	r0, pc, r0
   44660:	str	r2, [fp, #-172]	; 0xffffff54
   44664:	add	r1, pc, r1
   44668:	str	r3, [fp, #-168]	; 0xffffff58
   4466c:	str	r0, [fp, #-176]	; 0xffffff50
   44670:	str	r1, [fp, #-180]	; 0xffffff4c
   44674:	b	4467c <usbSetSerialParameters@@Base+0x2bc>
   44678:	mov	sp, r9
   4467c:	mov	r0, sl
   44680:	bl	f500 <readdir@plt>
   44684:	cmp	r0, #0
   44688:	beq	44808 <usbSetSerialParameters@@Base+0x448>
   4468c:	add	r4, r0, #11
   44690:	add	r6, r8, #2
   44694:	mov	r9, sp
   44698:	mov	r0, r4
   4469c:	bl	fb54 <strlen@plt>
   446a0:	ldr	r1, [fp, #-152]	; 0xffffff68
   446a4:	mov	r5, r0
   446a8:	add	r6, r6, r5
   446ac:	add	r3, r6, #7
   446b0:	mov	r0, r4
   446b4:	bic	r3, r3, #7
   446b8:	sub	sp, sp, r3
   446bc:	bl	f6c8 <strspn@plt>
   446c0:	add	r7, sp, #24
   446c4:	cmp	r5, r0
   446c8:	bne	44678 <usbSetSerialParameters@@Base+0x2b8>
   446cc:	ldr	r2, [fp, #-160]	; 0xffffff60
   446d0:	mov	r1, r6
   446d4:	mov	r0, r7
   446d8:	str	r2, [sp]
   446dc:	mov	r2, #1
   446e0:	ldr	r3, [fp, #-156]	; 0xffffff64
   446e4:	str	r4, [sp, #8]
   446e8:	str	r3, [sp, #4]
   446ec:	mvn	r3, #0
   446f0:	bl	fb60 <__snprintf_chk@plt>
   446f4:	mov	r0, #3
   446f8:	mov	r1, r7
   446fc:	sub	r2, fp, #132	; 0x84
   44700:	bl	fbfc <__xstat@plt>
   44704:	cmn	r0, #1
   44708:	beq	44678 <usbSetSerialParameters@@Base+0x2b8>
   4470c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   44710:	and	r3, r3, #61440	; 0xf000
   44714:	cmp	r3, #16384	; 0x4000
   44718:	beq	44834 <usbSetSerialParameters@@Base+0x474>
   4471c:	cmp	r3, #32768	; 0x8000
   44720:	cmpne	r3, #8192	; 0x2000
   44724:	bne	44678 <usbSetSerialParameters@@Base+0x2b8>
   44728:	mov	r0, #28
   4472c:	bl	fb48 <malloc@plt>
   44730:	cmp	r0, #0
   44734:	str	r0, [fp, #-184]	; 0xffffff48
   44738:	beq	44a08 <usbSetSerialParameters@@Base+0x648>
   4473c:	mov	r0, r7
   44740:	bl	f740 <__strdup@plt>
   44744:	ldr	r1, [fp, #-184]	; 0xffffff48
   44748:	cmp	r0, #0
   4474c:	mov	r4, r0
   44750:	str	r0, [r1, #4]
   44754:	beq	44a34 <usbSetSerialParameters@@Base+0x674>
   44758:	bl	fb54 <strlen@plt>
   4475c:	add	r0, r4, r0
   44760:	cmp	r4, r0
   44764:	beq	447a4 <usbSetSerialParameters@@Base+0x3e4>
   44768:	mov	r3, r0
   4476c:	mov	r5, #0
   44770:	ldrb	r0, [r3, #-1]
   44774:	sub	r6, r3, #1
   44778:	bl	1c828 <isPathDelimiter@@Base>
   4477c:	cmp	r0, #0
   44780:	beq	44790 <usbSetSerialParameters@@Base+0x3d0>
   44784:	cmp	r5, #1
   44788:	beq	448bc <usbSetSerialParameters@@Base+0x4fc>
   4478c:	mov	r5, #1
   44790:	cmp	r4, r6
   44794:	mov	r3, r6
   44798:	bne	44770 <usbSetSerialParameters@@Base+0x3b0>
   4479c:	ldr	r2, [fp, #-184]	; 0xffffff48
   447a0:	ldr	r4, [r2, #4]
   447a4:	ldr	r2, [fp, #-184]	; 0xffffff48
   447a8:	mov	r3, #0
   447ac:	str	r3, [r2]
   447b0:	mov	r0, r4
   447b4:	mov	r1, #0
   447b8:	bl	f8c0 <open@plt>
   447bc:	cmn	r0, #1
   447c0:	mov	r4, r0
   447c4:	moveq	r4, #1
   447c8:	bne	44850 <usbSetSerialParameters@@Base+0x490>
   447cc:	ldr	r1, [fp, #-184]	; 0xffffff48
   447d0:	ldr	r0, [r1]
   447d4:	cmp	r0, #0
   447d8:	beq	447e0 <usbSetSerialParameters@@Base+0x420>
   447dc:	bl	f4f4 <free@plt>
   447e0:	ldr	r2, [fp, #-184]	; 0xffffff48
   447e4:	ldr	r0, [r2, #4]
   447e8:	bl	f4f4 <free@plt>
   447ec:	ldr	r0, [fp, #-184]	; 0xffffff48
   447f0:	bl	f4f4 <free@plt>
   447f4:	cmp	r4, #0
   447f8:	bne	44678 <usbSetSerialParameters@@Base+0x2b8>
   447fc:	mov	r4, #0
   44800:	mov	sp, r9
   44804:	b	4480c <usbSetSerialParameters@@Base+0x44c>
   44808:	mov	r4, #1
   4480c:	mov	r0, sl
   44810:	bl	f590 <closedir@plt>
   44814:	ldr	r1, [fp, #-164]	; 0xffffff5c
   44818:	mov	r0, r4
   4481c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   44820:	ldr	r3, [r1]
   44824:	cmp	r2, r3
   44828:	bne	44a80 <usbSetSerialParameters@@Base+0x6c0>
   4482c:	sub	sp, fp, #32
   44830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44834:	mov	r0, r7
   44838:	bl	445e8 <usbSetSerialParameters@@Base+0x228>
   4483c:	cmp	r0, #0
   44840:	beq	447fc <usbSetSerialParameters@@Base+0x43c>
   44844:	b	44678 <usbSetSerialParameters@@Base+0x2b8>
   44848:	mov	r4, sl
   4484c:	b	44814 <usbSetSerialParameters@@Base+0x454>
   44850:	ldr	r3, [fp, #-184]	; 0xffffff48
   44854:	mov	r0, r4
   44858:	mov	r2, #18
   4485c:	add	r1, r3, #8
   44860:	bl	f788 <read@plt>
   44864:	cmn	r0, #1
   44868:	beq	44a50 <usbSetSerialParameters@@Base+0x690>
   4486c:	cmp	r0, #18
   44870:	beq	44894 <usbSetSerialParameters@@Base+0x4d4>
   44874:	mov	r2, r0
   44878:	ldr	r1, [fp, #-168]	; 0xffffff58
   4487c:	mov	r0, #3
   44880:	bl	1c634 <logMessage@@Base>
   44884:	mov	r0, r4
   44888:	mov	r4, #1
   4488c:	bl	f764 <close@plt>
   44890:	b	447cc <usbSetSerialParameters@@Base+0x40c>
   44894:	mov	r0, r4
   44898:	bl	f764 <close@plt>
   4489c:	ldr	r2, [fp, #-172]	; 0xffffff54
   448a0:	ldr	r1, [fp, #-184]	; 0xffffff48
   448a4:	ldr	r0, [r2]
   448a8:	bl	2ade4 <enqueueItem@@Base>
   448ac:	cmp	r0, #0
   448b0:	moveq	r4, r0
   448b4:	bne	44678 <usbSetSerialParameters@@Base+0x2b8>
   448b8:	b	447cc <usbSetSerialParameters@@Base+0x40c>
   448bc:	ldr	r1, [fp, #-180]	; 0xffffff4c
   448c0:	sub	r3, fp, #145	; 0x91
   448c4:	mov	r0, r6
   448c8:	str	r3, [sp]
   448cc:	sub	r2, fp, #144	; 0x90
   448d0:	sub	r3, fp, #140	; 0x8c
   448d4:	bl	fcd4 <sscanf@plt>
   448d8:	cmp	r0, #2
   448dc:	bne	44a28 <usbSetSerialParameters@@Base+0x668>
   448e0:	ldr	r7, [fp, #-144]	; 0xffffff70
   448e4:	sub	r0, fp, #136	; 0x88
   448e8:	ldr	r6, [fp, #-140]	; 0xffffff74
   448ec:	sub	r2, r7, #1
   448f0:	ldr	r5, [pc, #432]	; 44aa8 <usbSetSerialParameters@@Base+0x6e8>
   448f4:	ldr	ip, [pc, #432]	; 44aac <usbSetSerialParameters@@Base+0x6ec>
   448f8:	sub	r3, r6, #1
   448fc:	add	r5, pc, r5
   44900:	orr	r4, r3, r2, lsl #7
   44904:	add	ip, pc, ip
   44908:	str	r9, [fp, #-192]	; 0xffffff40
   4490c:	str	r8, [fp, #-196]	; 0xffffff3c
   44910:	mov	r9, r5
   44914:	str	sl, [fp, #-200]	; 0xffffff38
   44918:	mov	r8, ip
   4491c:	str	r0, [fp, #-188]	; 0xffffff44
   44920:	mov	sl, r4
   44924:	b	44940 <usbSetSerialParameters@@Base+0x580>
   44928:	ldr	r8, [r9, #4]!
   4492c:	mov	sp, r5
   44930:	cmp	r8, #0
   44934:	beq	44a1c <usbSetSerialParameters@@Base+0x65c>
   44938:	ldr	r7, [fp, #-144]	; 0xffffff70
   4493c:	ldr	r6, [fp, #-140]	; 0xffffff74
   44940:	mov	r0, r8
   44944:	mov	r5, sp
   44948:	bl	fb54 <strlen@plt>
   4494c:	mov	r2, #1
   44950:	add	r3, r0, #40	; 0x28
   44954:	add	r1, r0, #33	; 0x21
   44958:	bic	r3, r3, #7
   4495c:	sub	r0, fp, #136	; 0x88
   44960:	sub	sp, sp, r3
   44964:	mvn	r3, #0
   44968:	add	r4, sp, #24
   4496c:	stmib	sp, {r0, r7}
   44970:	str	r8, [sp]
   44974:	mov	r0, r4
   44978:	str	r6, [sp, #12]
   4497c:	str	sl, [sp, #16]
   44980:	bl	fb60 <__snprintf_chk@plt>
   44984:	ldr	r3, [fp, #-136]	; 0xffffff78
   44988:	mov	r2, #0
   4498c:	mov	r0, r4
   44990:	mov	r1, #0
   44994:	strb	r2, [r4, r3]
   44998:	bl	f9a4 <access@plt>
   4499c:	cmn	r0, #1
   449a0:	beq	44928 <usbSetSerialParameters@@Base+0x568>
   449a4:	mov	r0, r4
   449a8:	ldr	r9, [fp, #-192]	; 0xffffff40
   449ac:	ldr	r8, [fp, #-196]	; 0xffffff3c
   449b0:	ldr	sl, [fp, #-200]	; 0xffffff38
   449b4:	bl	f740 <__strdup@plt>
   449b8:	subs	r3, r0, #0
   449bc:	beq	44a5c <usbSetSerialParameters@@Base+0x69c>
   449c0:	ldr	r1, [fp, #-184]	; 0xffffff48
   449c4:	mov	sp, r5
   449c8:	str	r3, [r1]
   449cc:	ldr	r1, [pc, #220]	; 44ab0 <usbSetSerialParameters@@Base+0x6f0>
   449d0:	add	r1, pc, r1
   449d4:	bl	1c9c8 <makePath@@Base>
   449d8:	subs	r5, r0, #0
   449dc:	beq	44a10 <usbSetSerialParameters@@Base+0x650>
   449e0:	mov	r1, #0
   449e4:	bl	f8c0 <open@plt>
   449e8:	mov	r4, r0
   449ec:	mov	r0, r5
   449f0:	bl	f4f4 <free@plt>
   449f4:	cmn	r4, #1
   449f8:	bne	44850 <usbSetSerialParameters@@Base+0x490>
   449fc:	ldr	r2, [fp, #-184]	; 0xffffff48
   44a00:	ldr	r4, [r2, #4]
   44a04:	b	447b0 <usbSetSerialParameters@@Base+0x3f0>
   44a08:	bl	1c740 <logMallocError@@Base>
   44a0c:	b	447fc <usbSetSerialParameters@@Base+0x43c>
   44a10:	ldr	r1, [fp, #-184]	; 0xffffff48
   44a14:	ldr	r4, [r1, #4]
   44a18:	b	447b0 <usbSetSerialParameters@@Base+0x3f0>
   44a1c:	ldr	r9, [fp, #-192]	; 0xffffff40
   44a20:	ldr	r8, [fp, #-196]	; 0xffffff3c
   44a24:	ldr	sl, [fp, #-200]	; 0xffffff38
   44a28:	ldr	r3, [fp, #-184]	; 0xffffff48
   44a2c:	ldr	r4, [r3, #4]
   44a30:	b	447a4 <usbSetSerialParameters@@Base+0x3e4>
   44a34:	ldr	r7, [fp, #-184]	; 0xffffff48
   44a38:	ldr	r0, [pc, #116]	; 44ab4 <usbSetSerialParameters@@Base+0x6f4>
   44a3c:	add	r0, pc, r0
   44a40:	bl	1c6fc <logSystemError@@Base>
   44a44:	mov	r0, r7
   44a48:	bl	f4f4 <free@plt>
   44a4c:	b	447fc <usbSetSerialParameters@@Base+0x43c>
   44a50:	ldr	r0, [fp, #-176]	; 0xffffff50
   44a54:	bl	1c6fc <logSystemError@@Base>
   44a58:	b	44884 <usbSetSerialParameters@@Base+0x4c4>
   44a5c:	ldr	r0, [pc, #84]	; 44ab8 <usbSetSerialParameters@@Base+0x6f8>
   44a60:	add	r0, pc, r0
   44a64:	bl	1c6fc <logSystemError@@Base>
   44a68:	ldr	r0, [fp, #-184]	; 0xffffff48
   44a6c:	mov	r3, #0
   44a70:	mov	sp, r5
   44a74:	ldr	r4, [r0, #4]
   44a78:	str	r3, [r0]
   44a7c:	b	447b0 <usbSetSerialParameters@@Base+0x3f0>
   44a80:	bl	f950 <__stack_chk_fail@plt>
   44a84:	bl	fd04 <_Unwind_Resume@plt>
   44a88:	andeq	lr, r2, ip, ror r4
   44a8c:			; <UNDEFINED> instruction: 0x000003b4
   44a90:	andeq	r5, r1, ip, asr #28
   44a94:	andeq	r2, r1, r0, ror pc
   44a98:			; <UNDEFINED> instruction: 0x0002f9bc
   44a9c:	andeq	r5, r1, r4, ror #28
   44aa0:	andeq	r5, r1, r4, asr #28
   44aa4:	andeq	r5, r1, r8, lsr #28
   44aa8:	ldrdeq	sp, [r2], -r8
   44aac:	andeq	r5, r1, r8, asr fp
   44ab0:	andeq	r5, r1, ip, lsl #22
   44ab4:	andeq	r5, r1, ip, asr sl
   44ab8:	andeq	r5, r1, r8, lsr sl
   44abc:	push	{r4, lr}
   44ac0:	mov	r4, r0
   44ac4:	ldr	r3, [r0, #4]
   44ac8:	cmn	r3, #1
   44acc:	beq	44ad8 <usbSetSerialParameters@@Base+0x718>
   44ad0:	mov	r0, #1
   44ad4:	pop	{r4, pc}
   44ad8:	ldr	r3, [r0]
   44adc:	mov	r1, #2
   44ae0:	ldr	r0, [r3, #4]
   44ae4:	bl	f8c0 <open@plt>
   44ae8:	cmn	r0, #1
   44aec:	str	r0, [r4, #4]
   44af0:	bne	44ad0 <usbSetSerialParameters@@Base+0x710>
   44af4:	ldr	r3, [r4]
   44af8:	ldr	r4, [r3, #4]
   44afc:	bl	fca4 <__errno_location@plt>
   44b00:	ldr	r0, [r0]
   44b04:	bl	f5c0 <strerror@plt>
   44b08:	ldr	r1, [pc, #24]	; 44b28 <usbSetSerialParameters@@Base+0x768>
   44b0c:	mov	r2, r4
   44b10:	add	r1, pc, r1
   44b14:	mov	r3, r0
   44b18:	mov	r0, #3
   44b1c:	bl	1c634 <logMessage@@Base>
   44b20:	mov	r0, #0
   44b24:	pop	{r4, pc}
   44b28:	ldrdeq	r5, [r1], -r8
   44b2c:	ldr	r3, [pc, #280]	; 44c4c <usbSetSerialParameters@@Base+0x88c>
   44b30:	ldr	r2, [pc, #280]	; 44c50 <usbSetSerialParameters@@Base+0x890>
   44b34:	add	r3, pc, r3
   44b38:	push	{r4, r5, r6, r7, lr}
   44b3c:	sub	sp, sp, #12
   44b40:	ldr	r4, [r3, r2]
   44b44:	mov	r6, r0
   44b48:	ldr	r5, [r0, #20]
   44b4c:	mov	r7, r1
   44b50:	ldr	r3, [r4]
   44b54:	mov	r0, r5
   44b58:	str	r3, [sp, #4]
   44b5c:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   44b60:	cmp	r0, #0
   44b64:	beq	44bc8 <usbSetSerialParameters@@Base+0x808>
   44b68:	cmp	r7, #0
   44b6c:	ldr	r0, [r5, #4]
   44b70:	bne	44be0 <usbSetSerialParameters@@Base+0x820>
   44b74:	movw	r1, #21773	; 0x550d
   44b78:	mov	r2, sp
   44b7c:	movt	r1, #16388	; 0x4004
   44b80:	bl	f83c <ioctl@plt>
   44b84:	cmn	r0, #1
   44b88:	beq	44c1c <usbSetSerialParameters@@Base+0x85c>
   44b8c:	ldr	r3, [sp]
   44b90:	cmp	r3, #0
   44b94:	beq	44c0c <usbSetSerialParameters@@Base+0x84c>
   44b98:	mov	r0, r6
   44b9c:	ldrb	r1, [r3, #1]
   44ba0:	bl	41c4c <usbGetEndpoint@@Base>
   44ba4:	cmp	r0, #0
   44ba8:	beq	44c04 <usbSetSerialParameters@@Base+0x844>
   44bac:	ldr	r3, [r0, #8]
   44bb0:	ldr	r1, [sp]
   44bb4:	ldr	r0, [r3]
   44bb8:	bl	2ade4 <enqueueItem@@Base>
   44bbc:	cmp	r0, #0
   44bc0:	beq	44c30 <usbSetSerialParameters@@Base+0x870>
   44bc4:	mov	r0, #1
   44bc8:	ldr	r2, [sp, #4]
   44bcc:	ldr	r3, [r4]
   44bd0:	cmp	r2, r3
   44bd4:	bne	44c48 <usbSetSerialParameters@@Base+0x888>
   44bd8:	add	sp, sp, #12
   44bdc:	pop	{r4, r5, r6, r7, pc}
   44be0:	movw	r1, #21772	; 0x550c
   44be4:	mov	r2, sp
   44be8:	movt	r1, #16388	; 0x4004
   44bec:	bl	f83c <ioctl@plt>
   44bf0:	cmn	r0, #1
   44bf4:	bne	44b8c <usbSetSerialParameters@@Base+0x7cc>
   44bf8:	ldr	r0, [pc, #84]	; 44c54 <usbSetSerialParameters@@Base+0x894>
   44bfc:	add	r0, pc, r0
   44c00:	bl	1c6fc <logSystemError@@Base>
   44c04:	mov	r0, #0
   44c08:	b	44bc8 <usbSetSerialParameters@@Base+0x808>
   44c0c:	bl	fca4 <__errno_location@plt>
   44c10:	mov	r3, #11
   44c14:	str	r3, [r0]
   44c18:	b	44c04 <usbSetSerialParameters@@Base+0x844>
   44c1c:	bl	fca4 <__errno_location@plt>
   44c20:	ldr	r3, [r0]
   44c24:	cmp	r3, #11
   44c28:	bne	44bf8 <usbSetSerialParameters@@Base+0x838>
   44c2c:	b	44c04 <usbSetSerialParameters@@Base+0x844>
   44c30:	ldr	r0, [pc, #32]	; 44c58 <usbSetSerialParameters@@Base+0x898>
   44c34:	add	r0, pc, r0
   44c38:	bl	1c6fc <logSystemError@@Base>
   44c3c:	ldr	r0, [sp]
   44c40:	bl	f4f4 <free@plt>
   44c44:	b	44c04 <usbSetSerialParameters@@Base+0x844>
   44c48:	bl	f950 <__stack_chk_fail@plt>
   44c4c:	andeq	sp, r2, r4, asr #30
   44c50:			; <UNDEFINED> instruction: 0x000003b4
   44c54:	andeq	r5, r1, r8, lsr #18
   44c58:	ldrdeq	r5, [r1], -r0
   44c5c:	ldr	ip, [pc, #252]	; 44d60 <usbSetSerialParameters@@Base+0x9a0>
   44c60:	push	{r4, r5, r6, r7, r8, lr}
   44c64:	add	ip, pc, ip
   44c68:	ldr	lr, [pc, #244]	; 44d64 <usbSetSerialParameters@@Base+0x9a4>
   44c6c:	mov	r8, r3
   44c70:	ldr	r5, [r0, #20]
   44c74:	sub	sp, sp, #24
   44c78:	mov	r6, r1
   44c7c:	mov	r7, r2
   44c80:	ldr	r4, [ip, lr]
   44c84:	mov	r0, r5
   44c88:	ldr	r3, [r4]
   44c8c:	str	r3, [sp, #20]
   44c90:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   44c94:	cmp	r0, #0
   44c98:	beq	44d30 <usbSetSerialParameters@@Base+0x970>
   44c9c:	ldr	r3, [r6]
   44ca0:	mov	ip, #0
   44ca4:	ldr	r0, [sp, #48]	; 0x30
   44ca8:	movw	r1, #21762	; 0x5502
   44cac:	str	ip, [sp, #4]
   44cb0:	movt	r1, #49168	; 0xc010
   44cb4:	str	ip, [sp, #8]
   44cb8:	add	r2, sp, #4
   44cbc:	str	ip, [sp, #12]
   44cc0:	str	ip, [sp, #16]
   44cc4:	ldrb	r3, [r3, #2]
   44cc8:	str	r7, [sp, #16]
   44ccc:	str	r8, [sp, #8]
   44cd0:	str	r0, [sp, #12]
   44cd4:	ldr	r0, [r5, #4]
   44cd8:	str	r3, [sp, #4]
   44cdc:	bl	f83c <ioctl@plt>
   44ce0:	cmn	r0, #1
   44ce4:	mov	r5, r0
   44ce8:	beq	44d04 <usbSetSerialParameters@@Base+0x944>
   44cec:	ldr	r2, [sp, #20]
   44cf0:	ldr	r3, [r4]
   44cf4:	cmp	r2, r3
   44cf8:	bne	44d5c <usbSetSerialParameters@@Base+0x99c>
   44cfc:	add	sp, sp, #24
   44d00:	pop	{r4, r5, r6, r7, r8, pc}
   44d04:	ldr	r3, [r6]
   44d08:	ldrsb	r3, [r3, #2]
   44d0c:	cmp	r3, #0
   44d10:	blt	44d38 <usbSetSerialParameters@@Base+0x978>
   44d14:	bl	fca4 <__errno_location@plt>
   44d18:	ldr	r3, [r0]
   44d1c:	cmp	r3, #11
   44d20:	beq	44d30 <usbSetSerialParameters@@Base+0x970>
   44d24:	ldr	r0, [pc, #60]	; 44d68 <usbSetSerialParameters@@Base+0x9a8>
   44d28:	add	r0, pc, r0
   44d2c:	bl	1c6fc <logSystemError@@Base>
   44d30:	mvn	r0, #0
   44d34:	b	44cec <usbSetSerialParameters@@Base+0x92c>
   44d38:	bl	fca4 <__errno_location@plt>
   44d3c:	ldr	r3, [r0]
   44d40:	mov	r2, r0
   44d44:	cmp	r3, #110	; 0x6e
   44d48:	moveq	r3, #11
   44d4c:	moveq	r0, r5
   44d50:	streq	r3, [r2]
   44d54:	bne	44d1c <usbSetSerialParameters@@Base+0x95c>
   44d58:	b	44cec <usbSetSerialParameters@@Base+0x92c>
   44d5c:	bl	f950 <__stack_chk_fail@plt>
   44d60:	andeq	sp, r2, r4, lsl lr
   44d64:			; <UNDEFINED> instruction: 0x000003b4
   44d68:	andeq	r5, r1, ip, lsl #16
   44d6c:	ldr	r3, [pc, #164]	; 44e18 <usbSetSerialParameters@@Base+0xa58>
   44d70:	ldr	r2, [pc, #164]	; 44e1c <usbSetSerialParameters@@Base+0xa5c>
   44d74:	add	r3, pc, r3
   44d78:	push	{r4, r5, r6, r7, lr}
   44d7c:	sub	sp, sp, #268	; 0x10c
   44d80:	ldr	r4, [r3, r2]
   44d84:	mov	r6, r1
   44d88:	mov	r7, r0
   44d8c:	ldr	r3, [r4]
   44d90:	str	r3, [sp, #260]	; 0x104
   44d94:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   44d98:	cmp	r0, #0
   44d9c:	beq	44de0 <usbSetSerialParameters@@Base+0xa20>
   44da0:	mov	r1, #0
   44da4:	mov	r2, #260	; 0x104
   44da8:	mov	r0, sp
   44dac:	bl	f6b0 <memset@plt>
   44db0:	mov	r2, sp
   44db4:	ldr	r0, [r7, #4]
   44db8:	movw	r1, #21768	; 0x5508
   44dbc:	movt	r1, #16644	; 0x4104
   44dc0:	str	r6, [sp]
   44dc4:	bl	f83c <ioctl@plt>
   44dc8:	cmn	r0, #1
   44dcc:	beq	44df8 <usbSetSerialParameters@@Base+0xa38>
   44dd0:	add	r0, sp, #4
   44dd4:	bl	f740 <__strdup@plt>
   44dd8:	cmp	r0, #0
   44ddc:	beq	44e0c <usbSetSerialParameters@@Base+0xa4c>
   44de0:	ldr	r2, [sp, #260]	; 0x104
   44de4:	ldr	r3, [r4]
   44de8:	cmp	r2, r3
   44dec:	bne	44e14 <usbSetSerialParameters@@Base+0xa54>
   44df0:	add	sp, sp, #268	; 0x10c
   44df4:	pop	{r4, r5, r6, r7, pc}
   44df8:	ldr	r0, [pc, #32]	; 44e20 <usbSetSerialParameters@@Base+0xa60>
   44dfc:	add	r0, pc, r0
   44e00:	bl	1c6fc <logSystemError@@Base>
   44e04:	mov	r0, #0
   44e08:	b	44de0 <usbSetSerialParameters@@Base+0xa20>
   44e0c:	bl	1c740 <logMallocError@@Base>
   44e10:	b	44e04 <usbSetSerialParameters@@Base+0xa44>
   44e14:	bl	f950 <__stack_chk_fail@plt>
   44e18:	andeq	sp, r2, r4, lsl #26
   44e1c:			; <UNDEFINED> instruction: 0x000003b4
   44e20:	andeq	r5, r1, ip, asr #14

00044e24 <usbResetDevice@@Base>:
   44e24:	push	{r4, lr}
   44e28:	ldr	r4, [r0, #20]
   44e2c:	mov	r0, r4
   44e30:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   44e34:	cmp	r0, #0
   44e38:	popeq	{r4, pc}
   44e3c:	ldr	r0, [r4, #4]
   44e40:	movw	r1, #21780	; 0x5514
   44e44:	mov	r2, #0
   44e48:	bl	f83c <ioctl@plt>
   44e4c:	cmn	r0, #1
   44e50:	beq	44e5c <usbResetDevice@@Base+0x38>
   44e54:	mov	r0, #1
   44e58:	pop	{r4, pc}
   44e5c:	ldr	r0, [pc, #12]	; 44e70 <usbResetDevice@@Base+0x4c>
   44e60:	add	r0, pc, r0
   44e64:	bl	1c6fc <logSystemError@@Base>
   44e68:	mov	r0, #0
   44e6c:	pop	{r4, pc}
   44e70:	strdeq	r5, [r1], -ip

00044e74 <usbDisableAutosuspend@@Base>:
   44e74:	push	{r3, r4, r5, r6, r7, lr}
   44e78:	ldr	r3, [r0, #20]
   44e7c:	ldr	r3, [r3]
   44e80:	ldr	r0, [r3]
   44e84:	cmp	r0, #0
   44e88:	beq	44f28 <usbDisableAutosuspend@@Base+0xb4>
   44e8c:	ldr	r1, [pc, #252]	; 44f90 <usbDisableAutosuspend@@Base+0x11c>
   44e90:	add	r1, pc, r1
   44e94:	bl	1c9c8 <makePath@@Base>
   44e98:	subs	r7, r0, #0
   44e9c:	beq	44f28 <usbDisableAutosuspend@@Base+0xb4>
   44ea0:	mov	r1, #1
   44ea4:	bl	f8c0 <open@plt>
   44ea8:	cmn	r0, #1
   44eac:	mov	r6, r0
   44eb0:	beq	44f34 <usbDisableAutosuspend@@Base+0xc0>
   44eb4:	ldr	r5, [pc, #216]	; 44f94 <usbDisableAutosuspend@@Base+0x120>
   44eb8:	mov	r2, #2
   44ebc:	ldr	r4, [pc, #212]	; 44f98 <usbDisableAutosuspend@@Base+0x124>
   44ec0:	add	r5, pc, r5
   44ec4:	add	r4, pc, r4
   44ec8:	add	r5, r5, #16
   44ecc:	b	44ef8 <usbDisableAutosuspend@@Base+0x84>
   44ed0:	bl	fca4 <__errno_location@plt>
   44ed4:	ldr	r0, [r0]
   44ed8:	cmp	r0, #22
   44edc:	bne	44f6c <usbDisableAutosuspend@@Base+0xf8>
   44ee0:	ldr	r4, [r5, #4]!
   44ee4:	cmp	r4, #0
   44ee8:	mov	r0, r4
   44eec:	beq	44f10 <usbDisableAutosuspend@@Base+0x9c>
   44ef0:	bl	fb54 <strlen@plt>
   44ef4:	mov	r2, r0
   44ef8:	mov	r1, r4
   44efc:	mov	r0, r6
   44f00:	bl	fbcc <write@plt>
   44f04:	cmn	r0, #1
   44f08:	beq	44ed0 <usbDisableAutosuspend@@Base+0x5c>
   44f0c:	mov	r4, #1
   44f10:	mov	r0, r6
   44f14:	bl	f764 <close@plt>
   44f18:	mov	r0, r7
   44f1c:	bl	f4f4 <free@plt>
   44f20:	mov	r0, r4
   44f24:	pop	{r3, r4, r5, r6, r7, pc}
   44f28:	mov	r4, #0
   44f2c:	mov	r0, r4
   44f30:	pop	{r3, r4, r5, r6, r7, pc}
   44f34:	bl	fca4 <__errno_location@plt>
   44f38:	mov	r4, #0
   44f3c:	ldr	r0, [r0]
   44f40:	cmp	r0, #2
   44f44:	movne	r5, #3
   44f48:	moveq	r5, #7
   44f4c:	bl	f5c0 <strerror@plt>
   44f50:	ldr	r1, [pc, #68]	; 44f9c <usbDisableAutosuspend@@Base+0x128>
   44f54:	mov	r2, r7
   44f58:	add	r1, pc, r1
   44f5c:	mov	r3, r0
   44f60:	mov	r0, r5
   44f64:	bl	1c634 <logMessage@@Base>
   44f68:	b	44f18 <usbDisableAutosuspend@@Base+0xa4>
   44f6c:	bl	f5c0 <strerror@plt>
   44f70:	ldr	r1, [pc, #40]	; 44fa0 <usbDisableAutosuspend@@Base+0x12c>
   44f74:	mov	r2, r7
   44f78:	mov	r4, #0
   44f7c:	add	r1, pc, r1
   44f80:	mov	r3, r0
   44f84:	mov	r0, #3
   44f88:	bl	1c634 <logMessage@@Base>
   44f8c:	b	44f10 <usbDisableAutosuspend@@Base+0x9c>
   44f90:	andeq	r5, r1, r0, ror #13
   44f94:	andeq	ip, r2, r4, lsl lr
   44f98:	andeq	r6, r1, r4, asr #11
   44f9c:	andeq	r5, r1, r0, asr #12
   44fa0:	andeq	r5, r1, r8, lsl #12

00044fa4 <usbSetConfiguration@@Base>:
   44fa4:	ldr	r3, [pc, #136]	; 45034 <usbSetConfiguration@@Base+0x90>
   44fa8:	ldr	r2, [pc, #136]	; 45038 <usbSetConfiguration@@Base+0x94>
   44fac:	add	r3, pc, r3
   44fb0:	push	{r4, r5, r6, lr}
   44fb4:	sub	sp, sp, #8
   44fb8:	ldr	r4, [r3, r2]
   44fbc:	mov	r6, r1
   44fc0:	ldr	r5, [r0, #20]
   44fc4:	ldr	r3, [r4]
   44fc8:	mov	r0, r5
   44fcc:	str	r3, [sp, #4]
   44fd0:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   44fd4:	cmp	r0, #0
   44fd8:	bne	44ff4 <usbSetConfiguration@@Base+0x50>
   44fdc:	ldr	r2, [sp, #4]
   44fe0:	ldr	r3, [r4]
   44fe4:	cmp	r2, r3
   44fe8:	bne	45030 <usbSetConfiguration@@Base+0x8c>
   44fec:	add	sp, sp, #8
   44ff0:	pop	{r4, r5, r6, pc}
   44ff4:	add	r2, sp, #8
   44ff8:	ldr	r0, [r5, #4]
   44ffc:	movw	r1, #21765	; 0x5505
   45000:	movt	r1, #32772	; 0x8004
   45004:	str	r6, [r2, #-8]!
   45008:	mov	r2, sp
   4500c:	bl	f83c <ioctl@plt>
   45010:	cmn	r0, #1
   45014:	movne	r0, #1
   45018:	bne	44fdc <usbSetConfiguration@@Base+0x38>
   4501c:	ldr	r0, [pc, #24]	; 4503c <usbSetConfiguration@@Base+0x98>
   45020:	add	r0, pc, r0
   45024:	bl	1c6fc <logSystemError@@Base>
   45028:	mov	r0, #0
   4502c:	b	44fdc <usbSetConfiguration@@Base+0x38>
   45030:	bl	f950 <__stack_chk_fail@plt>
   45034:	andeq	sp, r2, ip, asr #21
   45038:			; <UNDEFINED> instruction: 0x000003b4
   4503c:	andeq	r5, r1, ip, lsl #11

00045040 <usbClaimInterface@@Base>:
   45040:	ldr	r3, [pc, #392]	; 451d0 <usbClaimInterface@@Base+0x190>
   45044:	ldr	r2, [pc, #392]	; 451d4 <usbClaimInterface@@Base+0x194>
   45048:	add	r3, pc, r3
   4504c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45050:	sub	sp, sp, #44	; 0x2c
   45054:	ldr	r2, [r3, r2]
   45058:	mov	r7, r0
   4505c:	ldr	r8, [r0, #20]
   45060:	mov	r4, r1
   45064:	ldr	r3, [r2]
   45068:	mov	r0, r8
   4506c:	str	r2, [sp]
   45070:	str	r3, [sp, #36]	; 0x24
   45074:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   45078:	cmp	r0, #0
   4507c:	beq	45140 <usbClaimInterface@@Base+0x100>
   45080:	ldr	r1, [pc, #336]	; 451d8 <usbClaimInterface@@Base+0x198>
   45084:	add	sl, sp, #20
   45088:	ldr	r2, [pc, #332]	; 451dc <usbClaimInterface@@Base+0x19c>
   4508c:	mov	r9, #0
   45090:	add	r1, pc, r1
   45094:	add	r3, sp, #24
   45098:	add	r2, pc, r2
   4509c:	str	r1, [sp, #4]
   450a0:	str	r2, [sp, #8]
   450a4:	str	r3, [sp, #12]
   450a8:	movw	r1, #21775	; 0x550f
   450ac:	ldr	r0, [r8, #4]
   450b0:	movt	r1, #32772	; 0x8004
   450b4:	mov	r2, sl
   450b8:	str	r4, [sp, #20]
   450bc:	bl	f83c <ioctl@plt>
   450c0:	cmn	r0, #1
   450c4:	bne	451b4 <usbClaimInterface@@Base+0x174>
   450c8:	bl	fca4 <__errno_location@plt>
   450cc:	ldr	r3, [r0]
   450d0:	mov	r5, r0
   450d4:	cmp	r3, #16
   450d8:	bne	45130 <usbClaimInterface@@Base+0xf0>
   450dc:	cmp	r9, #0
   450e0:	bne	45130 <usbClaimInterface@@Base+0xf0>
   450e4:	ldr	r0, [r7, #20]
   450e8:	mov	r1, r4
   450ec:	bl	44d6c <usbSetSerialParameters@@Base+0x9ac>
   450f0:	subs	r6, r0, #0
   450f4:	beq	45128 <usbClaimInterface@@Base+0xe8>
   450f8:	ldr	r1, [sp, #4]
   450fc:	bl	fc5c <strcmp@plt>
   45100:	ldr	r1, [sp, #8]
   45104:	mov	r2, r4
   45108:	mov	r3, r6
   4510c:	mov	fp, r0
   45110:	mov	r0, #4
   45114:	bl	1c634 <logMessage@@Base>
   45118:	mov	r0, r6
   4511c:	bl	f4f4 <free@plt>
   45120:	cmp	fp, #0
   45124:	bne	4515c <usbClaimInterface@@Base+0x11c>
   45128:	mov	r3, #16
   4512c:	str	r3, [r5]
   45130:	ldr	r0, [pc, #168]	; 451e0 <usbClaimInterface@@Base+0x1a0>
   45134:	add	r0, pc, r0
   45138:	bl	1c6fc <logSystemError@@Base>
   4513c:	mov	r0, #0
   45140:	ldr	r1, [sp]
   45144:	ldr	r2, [sp, #36]	; 0x24
   45148:	ldr	r3, [r1]
   4514c:	cmp	r2, r3
   45150:	bne	451cc <usbClaimInterface@@Base+0x18c>
   45154:	add	sp, sp, #44	; 0x2c
   45158:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4515c:	ldr	r6, [r7, #20]
   45160:	mov	r0, r6
   45164:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   45168:	cmp	r0, #0
   4516c:	bne	45180 <usbClaimInterface@@Base+0x140>
   45170:	ldr	r0, [pc, #108]	; 451e4 <usbClaimInterface@@Base+0x1a4>
   45174:	add	r0, pc, r0
   45178:	bl	1c6fc <logSystemError@@Base>
   4517c:	b	45128 <usbClaimInterface@@Base+0xe8>
   45180:	str	r9, [sp, #32]
   45184:	movw	r3, #21782	; 0x5516
   45188:	movw	r1, #21778	; 0x5512
   4518c:	str	r3, [sp, #28]
   45190:	movt	r1, #49164	; 0xc00c
   45194:	ldr	r0, [r6, #4]
   45198:	add	r2, sp, #24
   4519c:	str	r4, [sp, #24]
   451a0:	bl	f83c <ioctl@plt>
   451a4:	cmn	r0, #1
   451a8:	beq	451bc <usbClaimInterface@@Base+0x17c>
   451ac:	mov	r9, #1
   451b0:	b	450a8 <usbClaimInterface@@Base+0x68>
   451b4:	mov	r0, #1
   451b8:	b	45140 <usbClaimInterface@@Base+0x100>
   451bc:	ldr	r0, [pc, #36]	; 451e8 <usbClaimInterface@@Base+0x1a8>
   451c0:	add	r0, pc, r0
   451c4:	bl	1c6fc <logSystemError@@Base>
   451c8:	b	45170 <usbClaimInterface@@Base+0x130>
   451cc:	bl	f950 <__stack_chk_fail@plt>
   451d0:	andeq	sp, r2, r0, lsr sl
   451d4:			; <UNDEFINED> instruction: 0x000003b4
   451d8:	andeq	r5, r1, r4, asr #7
   451dc:	andeq	r5, r1, ip, lsr #10
   451e0:	andeq	r5, r1, r4, asr #9
   451e4:	muleq	r1, r8, r4
   451e8:	andeq	r5, r1, r4, lsr #8

000451ec <usbReleaseInterface@@Base>:
   451ec:	ldr	r3, [pc, #156]	; 45290 <usbReleaseInterface@@Base+0xa4>
   451f0:	ldr	r2, [pc, #156]	; 45294 <usbReleaseInterface@@Base+0xa8>
   451f4:	add	r3, pc, r3
   451f8:	push	{r4, r5, r6, lr}
   451fc:	sub	sp, sp, #8
   45200:	ldr	r4, [r3, r2]
   45204:	mov	r6, r1
   45208:	ldr	r5, [r0, #20]
   4520c:	ldr	r3, [r4]
   45210:	mov	r0, r5
   45214:	str	r3, [sp, #4]
   45218:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   4521c:	cmp	r0, #0
   45220:	bne	4523c <usbReleaseInterface@@Base+0x50>
   45224:	ldr	r2, [sp, #4]
   45228:	ldr	r3, [r4]
   4522c:	cmp	r2, r3
   45230:	bne	4528c <usbReleaseInterface@@Base+0xa0>
   45234:	add	sp, sp, #8
   45238:	pop	{r4, r5, r6, pc}
   4523c:	add	r2, sp, #8
   45240:	ldr	r0, [r5, #4]
   45244:	movw	r1, #21776	; 0x5510
   45248:	movt	r1, #32772	; 0x8004
   4524c:	str	r6, [r2, #-8]!
   45250:	mov	r2, sp
   45254:	bl	f83c <ioctl@plt>
   45258:	cmn	r0, #1
   4525c:	beq	45268 <usbReleaseInterface@@Base+0x7c>
   45260:	mov	r0, #1
   45264:	b	45224 <usbReleaseInterface@@Base+0x38>
   45268:	bl	fca4 <__errno_location@plt>
   4526c:	ldr	r3, [r0]
   45270:	cmp	r3, #19
   45274:	beq	45260 <usbReleaseInterface@@Base+0x74>
   45278:	ldr	r0, [pc, #24]	; 45298 <usbReleaseInterface@@Base+0xac>
   4527c:	add	r0, pc, r0
   45280:	bl	1c6fc <logSystemError@@Base>
   45284:	mov	r0, #0
   45288:	b	45224 <usbReleaseInterface@@Base+0x38>
   4528c:	bl	f950 <__stack_chk_fail@plt>
   45290:	andeq	sp, r2, r4, lsl #17
   45294:			; <UNDEFINED> instruction: 0x000003b4
   45298:	andeq	r5, r1, r8, lsr #7

0004529c <usbSetAlternative@@Base>:
   4529c:	ldr	r3, [pc, #144]	; 45334 <usbSetAlternative@@Base+0x98>
   452a0:	ldr	ip, [pc, #144]	; 45338 <usbSetAlternative@@Base+0x9c>
   452a4:	add	r3, pc, r3
   452a8:	push	{r4, r5, r6, r7, lr}
   452ac:	sub	sp, sp, #20
   452b0:	ldr	r4, [r3, ip]
   452b4:	mov	r6, r1
   452b8:	ldr	r5, [r0, #20]
   452bc:	mov	r7, r2
   452c0:	ldr	r3, [r4]
   452c4:	mov	r0, r5
   452c8:	str	r3, [sp, #12]
   452cc:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   452d0:	cmp	r0, #0
   452d4:	bne	452f0 <usbSetAlternative@@Base+0x54>
   452d8:	ldr	r2, [sp, #12]
   452dc:	ldr	r3, [r4]
   452e0:	cmp	r2, r3
   452e4:	bne	45330 <usbSetAlternative@@Base+0x94>
   452e8:	add	sp, sp, #20
   452ec:	pop	{r4, r5, r6, r7, pc}
   452f0:	str	r7, [sp, #8]
   452f4:	movw	r1, #21764	; 0x5504
   452f8:	ldr	r0, [r5, #4]
   452fc:	movt	r1, #32776	; 0x8008
   45300:	add	r2, sp, #4
   45304:	str	r6, [sp, #4]
   45308:	bl	f83c <ioctl@plt>
   4530c:	mov	r5, #0
   45310:	cmn	r0, #1
   45314:	movne	r0, #1
   45318:	bne	452d8 <usbSetAlternative@@Base+0x3c>
   4531c:	ldr	r0, [pc, #24]	; 4533c <usbSetAlternative@@Base+0xa0>
   45320:	add	r0, pc, r0
   45324:	bl	1c6fc <logSystemError@@Base>
   45328:	mov	r0, r5
   4532c:	b	452d8 <usbSetAlternative@@Base+0x3c>
   45330:	bl	f950 <__stack_chk_fail@plt>
   45334:	ldrdeq	sp, [r2], -r4
   45338:			; <UNDEFINED> instruction: 0x000003b4
   4533c:	andeq	r5, r1, ip, lsl r3

00045340 <usbClearEndpoint@@Base>:
   45340:	ldr	r3, [pc, #136]	; 453d0 <usbClearEndpoint@@Base+0x90>
   45344:	ldr	r2, [pc, #136]	; 453d4 <usbClearEndpoint@@Base+0x94>
   45348:	add	r3, pc, r3
   4534c:	push	{r4, r5, r6, lr}
   45350:	sub	sp, sp, #8
   45354:	ldr	r4, [r3, r2]
   45358:	mov	r6, r1
   4535c:	ldr	r5, [r0, #20]
   45360:	ldr	r3, [r4]
   45364:	mov	r0, r5
   45368:	str	r3, [sp, #4]
   4536c:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   45370:	cmp	r0, #0
   45374:	bne	45390 <usbClearEndpoint@@Base+0x50>
   45378:	ldr	r2, [sp, #4]
   4537c:	ldr	r3, [r4]
   45380:	cmp	r2, r3
   45384:	bne	453cc <usbClearEndpoint@@Base+0x8c>
   45388:	add	sp, sp, #8
   4538c:	pop	{r4, r5, r6, pc}
   45390:	add	r2, sp, #8
   45394:	ldr	r0, [r5, #4]
   45398:	movw	r1, #21781	; 0x5515
   4539c:	movt	r1, #32772	; 0x8004
   453a0:	str	r6, [r2, #-8]!
   453a4:	mov	r2, sp
   453a8:	bl	f83c <ioctl@plt>
   453ac:	cmn	r0, #1
   453b0:	movne	r0, #1
   453b4:	bne	45378 <usbClearEndpoint@@Base+0x38>
   453b8:	ldr	r0, [pc, #24]	; 453d8 <usbClearEndpoint@@Base+0x98>
   453bc:	add	r0, pc, r0
   453c0:	bl	1c6fc <logSystemError@@Base>
   453c4:	mov	r0, #0
   453c8:	b	45378 <usbClearEndpoint@@Base+0x38>
   453cc:	bl	f950 <__stack_chk_fail@plt>
   453d0:	andeq	sp, r2, r0, lsr r7
   453d4:			; <UNDEFINED> instruction: 0x000003b4
   453d8:	muleq	r1, r4, r2

000453dc <usbControlTransfer@@Base>:
   453dc:	ldr	ip, [pc, #220]	; 454c0 <usbControlTransfer@@Base+0xe4>
   453e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   453e4:	add	ip, pc, ip
   453e8:	ldr	lr, [pc, #212]	; 454c4 <usbControlTransfer@@Base+0xe8>
   453ec:	mov	r8, r1
   453f0:	ldr	r5, [r0, #20]
   453f4:	mov	r1, ip
   453f8:	sub	sp, sp, #36	; 0x24
   453fc:	mov	r4, r3
   45400:	ldr	lr, [ip, lr]
   45404:	mov	r0, r5
   45408:	ldrb	r7, [sp, #72]	; 0x48
   4540c:	ldrh	r6, [sp, #76]	; 0x4c
   45410:	ldr	r1, [lr]
   45414:	str	lr, [sp, #4]
   45418:	str	r2, [sp]
   4541c:	ldrh	fp, [sp, #80]	; 0x50
   45420:	ldr	r9, [sp, #84]	; 0x54
   45424:	str	r1, [sp, #28]
   45428:	ldrh	sl, [sp, #88]	; 0x58
   4542c:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   45430:	ldr	r2, [sp]
   45434:	cmp	r0, #0
   45438:	beq	454a4 <usbControlTransfer@@Base+0xc8>
   4543c:	orr	r3, r2, r4
   45440:	ldr	r2, [sp, #92]	; 0x5c
   45444:	strh	fp, [sp, #16]
   45448:	mov	r1, #21760	; 0x5500
   4544c:	strh	sl, [sp, #18]
   45450:	movt	r1, #49168	; 0xc010
   45454:	str	r2, [sp, #20]
   45458:	add	r2, sp, #12
   4545c:	str	r9, [sp, #24]
   45460:	orr	r8, r8, r3
   45464:	ldr	r0, [r5, #4]
   45468:	strb	r7, [sp, #13]
   4546c:	strb	r8, [sp, #12]
   45470:	strh	r6, [sp, #14]
   45474:	bl	f83c <ioctl@plt>
   45478:	cmn	r0, #1
   4547c:	mov	r5, r0
   45480:	beq	454ac <usbControlTransfer@@Base+0xd0>
   45484:	mov	r0, r5
   45488:	ldr	r1, [sp, #4]
   4548c:	ldr	r2, [sp, #28]
   45490:	ldr	r3, [r1]
   45494:	cmp	r2, r3
   45498:	bne	454bc <usbControlTransfer@@Base+0xe0>
   4549c:	add	sp, sp, #36	; 0x24
   454a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   454a4:	mvn	r0, #0
   454a8:	b	45488 <usbControlTransfer@@Base+0xac>
   454ac:	ldr	r0, [pc, #20]	; 454c8 <usbControlTransfer@@Base+0xec>
   454b0:	add	r0, pc, r0
   454b4:	bl	1c6fc <logSystemError@@Base>
   454b8:	b	45484 <usbControlTransfer@@Base+0xa8>
   454bc:	bl	f950 <__stack_chk_fail@plt>
   454c0:	muleq	r2, r4, r6
   454c4:			; <UNDEFINED> instruction: 0x000003b4
   454c8:			; <UNDEFINED> instruction: 0x000151b4

000454cc <usbSubmitRequest@@Base>:
   454cc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   454d0:	mov	r4, r0
   454d4:	ldr	r5, [r0, #20]
   454d8:	mov	r8, r1
   454dc:	mov	r9, r2
   454e0:	mov	r7, r3
   454e4:	mov	r0, r5
   454e8:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   454ec:	cmp	r0, #0
   454f0:	beq	45638 <usbSubmitRequest@@Base+0x16c>
   454f4:	mov	r0, r4
   454f8:	mov	r1, r8
   454fc:	bl	41c4c <usbGetEndpoint@@Base>
   45500:	subs	r6, r0, #0
   45504:	beq	45638 <usbSubmitRequest@@Base+0x16c>
   45508:	add	r0, r7, #44	; 0x2c
   4550c:	bl	fb48 <malloc@plt>
   45510:	subs	r4, r0, #0
   45514:	beq	4564c <usbSubmitRequest@@Base+0x180>
   45518:	mov	r0, r4
   4551c:	mov	ip, #0
   45520:	cmp	r7, #0
   45524:	str	ip, [r0], #4
   45528:	add	r0, r0, #8
   4552c:	ldr	r3, [sp, #32]
   45530:	str	ip, [r4, #4]
   45534:	str	ip, [r0], #4
   45538:	str	ip, [r0], #4
   4553c:	str	ip, [r0], #4
   45540:	str	ip, [r0], #4
   45544:	str	ip, [r0], #4
   45548:	str	ip, [r0], #4
   4554c:	str	ip, [r0], #4
   45550:	str	ip, [r0]
   45554:	addne	r0, r4, #44	; 0x2c
   45558:	moveq	r0, r7
   4555c:	cmp	r9, #0
   45560:	str	ip, [r4, #8]
   45564:	str	ip, [r4, #36]	; 0x24
   45568:	strb	r8, [r4, #1]
   4556c:	str	r3, [r4, #40]	; 0x28
   45570:	str	r7, [r4, #16]
   45574:	str	r0, [r4, #12]
   45578:	ldr	r3, [r6, #4]
   4557c:	beq	4559c <usbSubmitRequest@@Base+0xd0>
   45580:	ldrsb	r2, [r3, #2]
   45584:	cmp	r2, #0
   45588:	blt	4559c <usbSubmitRequest@@Base+0xd0>
   4558c:	mov	r1, r9
   45590:	mov	r2, r7
   45594:	bl	fb24 <memcpy@plt>
   45598:	ldr	r3, [r6, #4]
   4559c:	ldrb	r3, [r3, #3]
   455a0:	and	r3, r3, #3
   455a4:	cmp	r3, #1
   455a8:	beq	45640 <usbSubmitRequest@@Base+0x174>
   455ac:	movcc	r3, #2
   455b0:	strbcc	r3, [r4]
   455b4:	movcs	r3, #3
   455b8:	strbcs	r3, [r4]
   455bc:	mov	r7, #1
   455c0:	b	455f8 <usbSubmitRequest@@Base+0x12c>
   455c4:	bl	fca4 <__errno_location@plt>
   455c8:	ldr	r3, [r0]
   455cc:	cmp	r3, #22
   455d0:	bne	4561c <usbSubmitRequest@@Base+0x150>
   455d4:	ldr	r3, [r6, #4]
   455d8:	ldrb	r3, [r3, #3]
   455dc:	and	r3, r3, #3
   455e0:	cmp	r3, #3
   455e4:	bne	45624 <usbSubmitRequest@@Base+0x158>
   455e8:	ldrb	r3, [r4]
   455ec:	cmp	r3, #3
   455f0:	bne	45624 <usbSubmitRequest@@Base+0x158>
   455f4:	strb	r7, [r4]
   455f8:	movw	r1, #21770	; 0x550a
   455fc:	ldr	r0, [r5, #4]
   45600:	movt	r1, #32812	; 0x802c
   45604:	mov	r2, r4
   45608:	bl	f83c <ioctl@plt>
   4560c:	cmn	r0, #1
   45610:	beq	455c4 <usbSubmitRequest@@Base+0xf8>
   45614:	mov	r0, r4
   45618:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   4561c:	cmp	r3, #6
   45620:	beq	45630 <usbSubmitRequest@@Base+0x164>
   45624:	ldr	r0, [pc, #52]	; 45660 <usbSubmitRequest@@Base+0x194>
   45628:	add	r0, pc, r0
   4562c:	bl	1c6fc <logSystemError@@Base>
   45630:	mov	r0, r4
   45634:	bl	f4f4 <free@plt>
   45638:	mov	r0, #0
   4563c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   45640:	mov	r3, #0
   45644:	strb	r3, [r4]
   45648:	b	455bc <usbSubmitRequest@@Base+0xf0>
   4564c:	ldr	r0, [pc, #16]	; 45664 <usbSubmitRequest@@Base+0x198>
   45650:	add	r0, pc, r0
   45654:	bl	1c6fc <logSystemError@@Base>
   45658:	mov	r0, r4
   4565c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   45660:	andeq	r5, r1, r4, asr r0
   45664:	andeq	r5, r1, ip, lsr r0

00045668 <usbCancelRequest@@Base>:
   45668:	push	{r4, r5, r6, r7, r8, lr}
   4566c:	mov	r5, r0
   45670:	ldr	r4, [r0, #20]
   45674:	mov	r6, r1
   45678:	mov	r0, r4
   4567c:	bl	44abc <usbSetSerialParameters@@Base+0x6fc>
   45680:	cmp	r0, #0
   45684:	bne	45694 <usbCancelRequest@@Base+0x2c>
   45688:	mov	r4, #0
   4568c:	mov	r0, r4
   45690:	pop	{r4, r5, r6, r7, r8, pc}
   45694:	ldr	r0, [r4, #4]
   45698:	movw	r1, #21771	; 0x550b
   4569c:	mov	r2, r6
   456a0:	bl	f83c <ioctl@plt>
   456a4:	cmn	r0, #1
   456a8:	beq	4572c <usbCancelRequest@@Base+0xc4>
   456ac:	mov	r8, #1
   456b0:	mov	r0, r5
   456b4:	ldrb	r1, [r6, #1]
   456b8:	bl	41c4c <usbGetEndpoint@@Base>
   456bc:	cmp	r0, #0
   456c0:	beq	45688 <usbCancelRequest@@Base+0x20>
   456c4:	ldr	r7, [r0, #8]
   456c8:	b	456e0 <usbCancelRequest@@Base+0x78>
   456cc:	cmp	r8, #0
   456d0:	beq	456f8 <usbCancelRequest@@Base+0x90>
   456d4:	bl	44b2c <usbSetSerialParameters@@Base+0x76c>
   456d8:	subs	r4, r0, #0
   456dc:	beq	4570c <usbCancelRequest@@Base+0xa4>
   456e0:	mov	r1, r6
   456e4:	ldr	r0, [r7]
   456e8:	bl	2af48 <deleteItem@@Base>
   456ec:	subs	r1, r0, #0
   456f0:	mov	r0, r5
   456f4:	beq	456cc <usbCancelRequest@@Base+0x64>
   456f8:	mov	r0, r6
   456fc:	mov	r4, #1
   45700:	bl	f4f4 <free@plt>
   45704:	mov	r0, r4
   45708:	pop	{r4, r5, r6, r7, r8, pc}
   4570c:	ldr	r1, [pc, #76]	; 45760 <usbCancelRequest@@Base+0xf8>
   45710:	mov	r2, r6
   45714:	mov	r0, #3
   45718:	ldrb	r3, [r6, #1]
   4571c:	add	r1, pc, r1
   45720:	bl	1c634 <logMessage@@Base>
   45724:	mov	r0, r4
   45728:	pop	{r4, r5, r6, r7, r8, pc}
   4572c:	bl	fca4 <__errno_location@plt>
   45730:	ldr	r3, [r0]
   45734:	cmp	r3, #19
   45738:	beq	45758 <usbCancelRequest@@Base+0xf0>
   4573c:	cmp	r3, #22
   45740:	beq	456ac <usbCancelRequest@@Base+0x44>
   45744:	ldr	r0, [pc, #24]	; 45764 <usbCancelRequest@@Base+0xfc>
   45748:	mov	r8, #1
   4574c:	add	r0, pc, r0
   45750:	bl	1c6fc <logSystemError@@Base>
   45754:	b	456b0 <usbCancelRequest@@Base+0x48>
   45758:	mov	r8, #0
   4575c:	b	456b0 <usbCancelRequest@@Base+0x48>
   45760:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   45764:	andeq	r4, r1, r4, asr pc

00045768 <usbReapResponse@@Base>:
   45768:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   4576c:	mov	r8, r2
   45770:	mov	r6, r3
   45774:	mov	r5, r0
   45778:	bl	41c4c <usbGetEndpoint@@Base>
   4577c:	subs	r9, r0, #0
   45780:	ldrne	r7, [r9, #8]
   45784:	bne	45798 <usbReapResponse@@Base+0x30>
   45788:	b	45824 <usbReapResponse@@Base+0xbc>
   4578c:	bl	44b2c <usbSetSerialParameters@@Base+0x76c>
   45790:	cmp	r0, #0
   45794:	beq	45824 <usbReapResponse@@Base+0xbc>
   45798:	ldr	r0, [r7]
   4579c:	bl	2abb0 <dequeueItem@@Base>
   457a0:	mov	r1, r6
   457a4:	subs	r4, r0, #0
   457a8:	mov	r0, r5
   457ac:	beq	4578c <usbReapResponse@@Base+0x24>
   457b0:	ldr	r3, [r4, #40]	; 0x28
   457b4:	str	r3, [r8]
   457b8:	ldr	r1, [r4, #12]
   457bc:	str	r1, [r8, #4]
   457c0:	ldr	r2, [r4, #16]
   457c4:	str	r2, [r8, #8]
   457c8:	ldr	r6, [r4, #4]
   457cc:	cmp	r6, #0
   457d0:	str	r6, [r8, #16]
   457d4:	beq	45804 <usbReapResponse@@Base+0x9c>
   457d8:	rsblt	r6, r6, #0
   457dc:	strlt	r6, [r8, #16]
   457e0:	bl	fca4 <__errno_location@plt>
   457e4:	str	r6, [r0]
   457e8:	ldr	r0, [pc, #108]	; 4585c <usbReapResponse@@Base+0xf4>
   457ec:	add	r0, pc, r0
   457f0:	bl	1c6fc <logSystemError@@Base>
   457f4:	mvn	r3, #0
   457f8:	mov	r0, r4
   457fc:	str	r3, [r8, #12]
   45800:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   45804:	ldr	r3, [r4, #20]
   45808:	str	r3, [r8, #12]
   4580c:	ldr	r3, [r9, #4]
   45810:	ldrb	r3, [r3, #2]
   45814:	tst	r3, #128	; 0x80
   45818:	bne	4582c <usbReapResponse@@Base+0xc4>
   4581c:	mov	r0, r4
   45820:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   45824:	mov	r0, #0
   45828:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   4582c:	mov	r0, r5
   45830:	add	r3, r8, #12
   45834:	bl	41e50 <usbApplyInputFilters@@Base>
   45838:	cmp	r0, #0
   4583c:	mov	r0, r4
   45840:	bne	45858 <usbReapResponse@@Base+0xf0>
   45844:	mov	r2, #5
   45848:	mvn	r3, #0
   4584c:	str	r2, [r8, #16]
   45850:	str	r3, [r8, #12]
   45854:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   45858:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   4585c:	andeq	r4, r1, ip, ror #29

00045860 <usbReadEndpoint@@Base>:
   45860:	ldr	ip, [pc, #548]	; 45a8c <usbReadEndpoint@@Base+0x22c>
   45864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45868:	add	ip, pc, ip
   4586c:	mov	sl, r2
   45870:	ldr	r2, [pc, #536]	; 45a90 <usbReadEndpoint@@Base+0x230>
   45874:	sub	sp, sp, #44	; 0x2c
   45878:	mov	r8, r3
   4587c:	mov	r3, ip
   45880:	mvn	ip, #0
   45884:	str	r0, [sp, #12]
   45888:	ldr	r2, [r3, r2]
   4588c:	ldr	r4, [sp, #80]	; 0x50
   45890:	str	ip, [sp, #20]
   45894:	ldr	r3, [r2]
   45898:	str	r2, [sp, #8]
   4589c:	str	r3, [sp, #36]	; 0x24
   458a0:	bl	41df0 <usbGetInputEndpoint@@Base>
   458a4:	subs	r6, r0, #0
   458a8:	beq	45a0c <usbReadEndpoint@@Base+0x1ac>
   458ac:	ldr	r3, [r6, #4]
   458b0:	ldrb	r2, [r3, #3]
   458b4:	and	r2, r2, #3
   458b8:	cmp	r2, #2
   458bc:	beq	45a14 <usbReadEndpoint@@Base+0x1b4>
   458c0:	cmp	r2, #3
   458c4:	bne	45998 <usbReadEndpoint@@Base+0x138>
   458c8:	ldr	r5, [r6]
   458cc:	ldrb	r1, [r3, #2]
   458d0:	mov	r3, #0
   458d4:	mov	r2, r3
   458d8:	str	r3, [sp]
   458dc:	mov	r0, r5
   458e0:	mov	r3, r8
   458e4:	bl	454cc <usbSubmitRequest@@Base>
   458e8:	subs	r9, r0, #0
   458ec:	beq	45a50 <usbReadEndpoint@@Base+0x1f0>
   458f0:	ldr	r3, [r6, #4]
   458f4:	cmp	r4, #0
   458f8:	ldr	fp, [r6, #8]
   458fc:	ldrb	r7, [r3, #6]
   45900:	add	r7, r7, #1
   45904:	bne	45a78 <usbReadEndpoint@@Base+0x218>
   45908:	add	r6, sp, #24
   4590c:	b	45934 <usbReadEndpoint@@Base+0xd4>
   45910:	cmp	r4, #0
   45914:	beq	45a58 <usbReadEndpoint@@Base+0x1f8>
   45918:	mov	r0, r6
   4591c:	mov	r1, #0
   45920:	bl	1ebf8 <afterTimePeriod@@Base>
   45924:	cmp	r0, #0
   45928:	bne	45a58 <usbReadEndpoint@@Base+0x1f8>
   4592c:	mov	r0, r7
   45930:	bl	1ec24 <approximateDelay@@Base>
   45934:	mov	r0, r5
   45938:	mov	r1, #0
   4593c:	bl	44b2c <usbSetSerialParameters@@Base+0x76c>
   45940:	cmp	r0, #0
   45944:	beq	45910 <usbReadEndpoint@@Base+0xb0>
   45948:	ldr	r0, [fp]
   4594c:	mov	r1, r9
   45950:	bl	2af48 <deleteItem@@Base>
   45954:	cmp	r0, #0
   45958:	beq	45910 <usbReadEndpoint@@Base+0xb0>
   4595c:	ldr	r4, [r9, #4]
   45960:	cmp	r4, #0
   45964:	bne	45a38 <usbReadEndpoint@@Base+0x1d8>
   45968:	ldr	r2, [r9, #20]
   4596c:	cmp	r8, r2
   45970:	strcs	r2, [sp, #20]
   45974:	movcc	r2, r8
   45978:	strcc	r8, [sp, #20]
   4597c:	ldr	r1, [r9, #12]
   45980:	mov	r0, sl
   45984:	bl	fb24 <memcpy@plt>
   45988:	mov	r0, r9
   4598c:	bl	f4f4 <free@plt>
   45990:	ldr	r3, [sp, #20]
   45994:	b	459b8 <usbReadEndpoint@@Base+0x158>
   45998:	ldr	r1, [pc, #244]	; 45a94 <usbReadEndpoint@@Base+0x234>
   4599c:	mov	r0, #3
   459a0:	add	r1, pc, r1
   459a4:	bl	1c634 <logMessage@@Base>
   459a8:	bl	fca4 <__errno_location@plt>
   459ac:	ldr	r3, [sp, #20]
   459b0:	mov	r2, #38	; 0x26
   459b4:	str	r2, [r0]
   459b8:	cmn	r3, #1
   459bc:	beq	459ec <usbReadEndpoint@@Base+0x18c>
   459c0:	ldr	r0, [sp, #12]
   459c4:	mov	r1, sl
   459c8:	mov	r2, r8
   459cc:	add	r3, sp, #20
   459d0:	bl	41e50 <usbApplyInputFilters@@Base>
   459d4:	cmp	r0, #0
   459d8:	bne	45a0c <usbReadEndpoint@@Base+0x1ac>
   459dc:	bl	fca4 <__errno_location@plt>
   459e0:	mvn	r3, #0
   459e4:	mov	r2, #5
   459e8:	str	r2, [r0]
   459ec:	ldr	r1, [sp, #8]
   459f0:	mov	r0, r3
   459f4:	ldr	r2, [sp, #36]	; 0x24
   459f8:	ldr	r3, [r1]
   459fc:	cmp	r2, r3
   45a00:	bne	45a88 <usbReadEndpoint@@Base+0x228>
   45a04:	add	sp, sp, #44	; 0x2c
   45a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45a0c:	ldr	r3, [sp, #20]
   45a10:	b	459ec <usbReadEndpoint@@Base+0x18c>
   45a14:	mov	r1, r6
   45a18:	mov	r3, r8
   45a1c:	ldr	r0, [r1], #4
   45a20:	mov	r2, sl
   45a24:	str	r4, [sp]
   45a28:	bl	44c5c <usbSetSerialParameters@@Base+0x89c>
   45a2c:	mov	r3, r0
   45a30:	str	r0, [sp, #20]
   45a34:	b	459b8 <usbReadEndpoint@@Base+0x158>
   45a38:	bl	fca4 <__errno_location@plt>
   45a3c:	cmp	r4, #0
   45a40:	rsblt	r4, r4, #0
   45a44:	str	r4, [r0]
   45a48:	mov	r0, r9
   45a4c:	bl	f4f4 <free@plt>
   45a50:	ldr	r3, [sp, #20]
   45a54:	b	459b8 <usbReadEndpoint@@Base+0x158>
   45a58:	mov	r1, r9
   45a5c:	mov	r0, r5
   45a60:	bl	45668 <usbCancelRequest@@Base>
   45a64:	bl	fca4 <__errno_location@plt>
   45a68:	mov	r3, #110	; 0x6e
   45a6c:	str	r3, [r0]
   45a70:	ldr	r3, [sp, #20]
   45a74:	b	459b8 <usbReadEndpoint@@Base+0x158>
   45a78:	add	r0, sp, #24
   45a7c:	mov	r1, r4
   45a80:	bl	1ebf0 <startTimePeriod@@Base>
   45a84:	b	45908 <usbReadEndpoint@@Base+0xa8>
   45a88:	bl	f950 <__stack_chk_fail@plt>
   45a8c:	andeq	sp, r2, r0, lsl r2
   45a90:			; <UNDEFINED> instruction: 0x000003b4
   45a94:	andeq	r4, r1, r8, asr #26

00045a98 <usbWriteEndpoint@@Base>:
   45a98:	push	{r4, r5, r6, lr}
   45a9c:	mov	r6, r2
   45aa0:	mov	r5, r3
   45aa4:	ldr	r4, [sp, #16]
   45aa8:	bl	41df8 <usbGetOutputEndpoint@@Base>
   45aac:	subs	r1, r0, #0
   45ab0:	beq	45b00 <usbWriteEndpoint@@Base+0x68>
   45ab4:	ldr	r0, [r1, #4]
   45ab8:	ldrb	r0, [r0, #3]
   45abc:	and	r2, r0, #3
   45ac0:	sub	ip, r2, #2
   45ac4:	cmp	ip, #1
   45ac8:	bhi	45ae4 <usbWriteEndpoint@@Base+0x4c>
   45acc:	mov	r2, r6
   45ad0:	ldr	r0, [r1], #4
   45ad4:	mov	r3, r5
   45ad8:	str	r4, [sp, #16]
   45adc:	pop	{r4, r5, r6, lr}
   45ae0:	b	44c5c <usbSetSerialParameters@@Base+0x89c>
   45ae4:	ldr	r1, [pc, #28]	; 45b08 <usbWriteEndpoint@@Base+0x70>
   45ae8:	mov	r0, #3
   45aec:	add	r1, pc, r1
   45af0:	bl	1c634 <logMessage@@Base>
   45af4:	bl	fca4 <__errno_location@plt>
   45af8:	mov	r3, #38	; 0x26
   45afc:	str	r3, [r0]
   45b00:	mvn	r0, #0
   45b04:	pop	{r4, r5, r6, pc}
   45b08:	andeq	r4, r1, r4, lsr #24

00045b0c <usbReadDeviceDescriptor@@Base>:
   45b0c:	push	{r4}		; (str r4, [sp, #-4]!)
   45b10:	mov	ip, r0
   45b14:	ldr	r3, [r0, #20]
   45b18:	ldr	r4, [r3]
   45b1c:	add	r4, r4, #8
   45b20:	ldm	r4!, {r0, r1, r2, r3}
   45b24:	stmia	ip!, {r0, r1, r2, r3}
   45b28:	mov	r0, #1
   45b2c:	ldr	r3, [r4]
   45b30:	strh	r3, [ip]
   45b34:	pop	{r4}		; (ldr r4, [sp], #4)
   45b38:	bx	lr

00045b3c <usbAllocateEndpointExtension@@Base>:
   45b3c:	push	{r4, r5, r6, lr}
   45b40:	mov	r6, r0
   45b44:	mov	r0, #4
   45b48:	bl	fb48 <malloc@plt>
   45b4c:	subs	r4, r0, #0
   45b50:	beq	45b7c <usbAllocateEndpointExtension@@Base+0x40>
   45b54:	mov	r0, #0
   45b58:	mov	r1, r0
   45b5c:	bl	2abf4 <newQueue@@Base>
   45b60:	cmp	r0, #0
   45b64:	mov	r5, r0
   45b68:	str	r0, [r4]
   45b6c:	beq	45b90 <usbAllocateEndpointExtension@@Base+0x54>
   45b70:	str	r4, [r6, #8]
   45b74:	mov	r0, #1
   45b78:	pop	{r4, r5, r6, pc}
   45b7c:	ldr	r0, [pc, #40]	; 45bac <usbAllocateEndpointExtension@@Base+0x70>
   45b80:	add	r0, pc, r0
   45b84:	bl	1c6fc <logSystemError@@Base>
   45b88:	mov	r0, r4
   45b8c:	pop	{r4, r5, r6, pc}
   45b90:	ldr	r0, [pc, #24]	; 45bb0 <usbAllocateEndpointExtension@@Base+0x74>
   45b94:	add	r0, pc, r0
   45b98:	bl	1c6fc <logSystemError@@Base>
   45b9c:	mov	r0, r4
   45ba0:	bl	f4f4 <free@plt>
   45ba4:	mov	r0, r5
   45ba8:	pop	{r4, r5, r6, pc}
   45bac:	andeq	r4, r1, r8, ror #23
   45bb0:	andeq	r4, r1, r4, lsr #23

00045bb4 <usbDeallocateEndpointExtension@@Base>:
   45bb4:	push	{r4, lr}
   45bb8:	mov	r4, r0
   45bbc:	ldr	r0, [r0]
   45bc0:	cmp	r0, #0
   45bc4:	beq	45bd4 <usbDeallocateEndpointExtension@@Base+0x20>
   45bc8:	bl	2ac6c <deallocateQueue@@Base>
   45bcc:	mov	r3, #0
   45bd0:	str	r3, [r4]
   45bd4:	mov	r0, r4
   45bd8:	pop	{r4, lr}
   45bdc:	b	f4f4 <free@plt>

00045be0 <usbDeallocateDeviceExtension@@Base>:
   45be0:	push	{r4, lr}
   45be4:	mov	r4, r0
   45be8:	ldr	r0, [r0, #4]
   45bec:	cmn	r0, #1
   45bf0:	beq	45c00 <usbDeallocateDeviceExtension@@Base+0x20>
   45bf4:	bl	f764 <close@plt>
   45bf8:	mvn	r3, #0
   45bfc:	str	r3, [r4, #4]
   45c00:	mov	r0, r4
   45c04:	pop	{r4, lr}
   45c08:	b	f4f4 <free@plt>
   45c0c:	push	{r4, r5, r6, lr}
   45c10:	mov	r6, r0
   45c14:	mov	r0, #8
   45c18:	mov	r4, r1
   45c1c:	bl	fb48 <malloc@plt>
   45c20:	subs	r5, r0, #0
   45c24:	beq	45c54 <usbDeallocateDeviceExtension@@Base+0x74>
   45c28:	str	r6, [r5]
   45c2c:	mvn	r3, #0
   45c30:	str	r3, [r5, #4]
   45c34:	ldm	r4, {r1, r2}
   45c38:	bl	4217c <usbTestDevice@@Base>
   45c3c:	cmp	r0, #0
   45c40:	mov	r6, r0
   45c44:	str	r0, [r4, #8]
   45c48:	beq	45c60 <usbDeallocateDeviceExtension@@Base+0x80>
   45c4c:	mov	r0, #1
   45c50:	pop	{r4, r5, r6, pc}
   45c54:	bl	1c740 <logMallocError@@Base>
   45c58:	mov	r0, r5
   45c5c:	pop	{r4, r5, r6, pc}
   45c60:	mov	r0, r5
   45c64:	bl	45be0 <usbDeallocateDeviceExtension@@Base>
   45c68:	mov	r0, r6
   45c6c:	pop	{r4, r5, r6, pc}

00045c70 <usbFindDevice@@Base>:
   45c70:	ldr	r3, [pc, #516]	; 45e7c <usbFindDevice@@Base+0x20c>
   45c74:	ldr	r2, [pc, #516]	; 45e80 <usbFindDevice@@Base+0x210>
   45c78:	push	{r4, r5, r6, r7, r8, r9, lr}
   45c7c:	add	r3, pc, r3
   45c80:	ldr	r4, [pc, #508]	; 45e84 <usbFindDevice@@Base+0x214>
   45c84:	mov	r6, r0
   45c88:	ldr	r5, [r3, r2]
   45c8c:	sub	sp, sp, #36	; 0x24
   45c90:	add	r4, pc, r4
   45c94:	mov	r7, r1
   45c98:	ldr	r0, [r4]
   45c9c:	ldr	r2, [r5]
   45ca0:	cmp	r0, #0
   45ca4:	str	r2, [sp, #28]
   45ca8:	beq	45ce8 <usbFindDevice@@Base+0x78>
   45cac:	ldr	r1, [pc, #468]	; 45e88 <usbFindDevice@@Base+0x218>
   45cb0:	add	r2, sp, #4
   45cb4:	mov	r3, #0
   45cb8:	stmib	sp, {r6, r7}
   45cbc:	add	r1, pc, r1
   45cc0:	str	r3, [sp, #12]
   45cc4:	bl	2aed0 <processQueue@@Base>
   45cc8:	cmp	r0, #0
   45ccc:	ldrne	r0, [sp, #12]
   45cd0:	ldr	r2, [sp, #28]
   45cd4:	ldr	r3, [r5]
   45cd8:	cmp	r2, r3
   45cdc:	bne	45e78 <usbFindDevice@@Base+0x208>
   45ce0:	add	sp, sp, #36	; 0x24
   45ce4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   45ce8:	mov	r1, r0
   45cec:	ldr	r0, [pc, #408]	; 45e8c <usbFindDevice@@Base+0x21c>
   45cf0:	add	r0, pc, r0
   45cf4:	bl	2abf4 <newQueue@@Base>
   45cf8:	cmp	r0, #0
   45cfc:	str	r0, [r4]
   45d00:	beq	45e28 <usbFindDevice@@Base+0x1b8>
   45d04:	ldr	r4, [pc, #388]	; 45e90 <usbFindDevice@@Base+0x220>
   45d08:	ldr	r3, [pc, #388]	; 45e94 <usbFindDevice@@Base+0x224>
   45d0c:	ldr	r9, [pc, #388]	; 45e98 <usbFindDevice@@Base+0x228>
   45d10:	add	r4, pc, r4
   45d14:	ldr	r8, [pc, #384]	; 45e9c <usbFindDevice@@Base+0x22c>
   45d18:	add	r3, pc, r3
   45d1c:	add	r9, pc, r9
   45d20:	add	r4, r4, #36	; 0x24
   45d24:	add	r8, pc, r8
   45d28:	b	45d38 <usbFindDevice@@Base+0xc8>
   45d2c:	ldr	r3, [r4], #8
   45d30:	cmp	r3, #0
   45d34:	beq	45d70 <usbFindDevice@@Base+0x100>
   45d38:	mov	r0, #7
   45d3c:	mov	r1, r9
   45d40:	mov	r2, r8
   45d44:	bl	1c634 <logMessage@@Base>
   45d48:	ldmdb	r4, {r0, r3}
   45d4c:	blx	r3
   45d50:	cmp	r0, #0
   45d54:	beq	45d2c <usbFindDevice@@Base+0xbc>
   45d58:	ldr	r0, [r4, #-8]
   45d5c:	bl	f740 <__strdup@plt>
   45d60:	cmp	r0, #0
   45d64:	bne	45e30 <usbFindDevice@@Base+0x1c0>
   45d68:	bl	1c740 <logMallocError@@Base>
   45d6c:	b	45d2c <usbFindDevice@@Base+0xbc>
   45d70:	ldr	r0, [pc, #296]	; 45ea0 <usbFindDevice@@Base+0x230>
   45d74:	add	r0, pc, r0
   45d78:	bl	2a7f4 <findMountPoint@@Base>
   45d7c:	cmp	r0, #0
   45d80:	bne	45e30 <usbFindDevice@@Base+0x1c0>
   45d84:	ldr	r8, [pc, #280]	; 45ea4 <usbFindDevice@@Base+0x234>
   45d88:	add	r8, pc, r8
   45d8c:	mov	r0, r8
   45d90:	bl	1ce58 <makeWritablePath@@Base>
   45d94:	subs	r4, r0, #0
   45d98:	beq	45e00 <usbFindDevice@@Base+0x190>
   45d9c:	bl	1cd3c <ensureDirectory@@Base>
   45da0:	cmp	r0, #0
   45da4:	beq	45df8 <usbFindDevice@@Base+0x188>
   45da8:	mov	r0, r4
   45dac:	bl	44504 <usbSetSerialParameters@@Base+0x144>
   45db0:	cmp	r0, #0
   45db4:	bne	45e34 <usbFindDevice@@Base+0x1c4>
   45db8:	ldr	r2, [pc, #232]	; 45ea8 <usbFindDevice@@Base+0x238>
   45dbc:	mov	r1, #3
   45dc0:	ldr	r3, [pc, #228]	; 45eac <usbFindDevice@@Base+0x23c>
   45dc4:	add	r0, sp, #16
   45dc8:	add	r2, pc, r2
   45dcc:	str	r8, [sp, #24]
   45dd0:	add	r3, pc, r3
   45dd4:	str	r2, [sp, #16]
   45dd8:	str	r3, [sp, #20]
   45ddc:	bl	1dcd0 <joinStrings@@Base>
   45de0:	mov	r2, r8
   45de4:	mov	r1, r0
   45de8:	mov	r0, r4
   45dec:	bl	2a85c <makeMountPoint@@Base>
   45df0:	cmp	r0, #0
   45df4:	bne	45e34 <usbFindDevice@@Base+0x1c4>
   45df8:	mov	r0, r4
   45dfc:	bl	f4f4 <free@plt>
   45e00:	ldr	r1, [pc, #168]	; 45eb0 <usbFindDevice@@Base+0x240>
   45e04:	mov	r0, #7
   45e08:	add	r1, pc, r1
   45e0c:	bl	1c634 <logMessage@@Base>
   45e10:	ldr	r4, [pc, #156]	; 45eb4 <usbFindDevice@@Base+0x244>
   45e14:	add	r4, pc, r4
   45e18:	ldr	r0, [r4]
   45e1c:	bl	2ac6c <deallocateQueue@@Base>
   45e20:	mov	r3, #0
   45e24:	str	r3, [r4]
   45e28:	mov	r0, #0
   45e2c:	b	45cd0 <usbFindDevice@@Base+0x60>
   45e30:	mov	r4, r0
   45e34:	ldr	r1, [pc, #124]	; 45eb8 <usbFindDevice@@Base+0x248>
   45e38:	mov	r2, r4
   45e3c:	mov	r0, #7
   45e40:	add	r1, pc, r1
   45e44:	bl	1c634 <logMessage@@Base>
   45e48:	mov	r0, r4
   45e4c:	bl	445e8 <usbSetSerialParameters@@Base+0x228>
   45e50:	mov	r8, r0
   45e54:	mov	r0, r4
   45e58:	bl	f4f4 <free@plt>
   45e5c:	cmp	r8, #0
   45e60:	beq	45e10 <usbFindDevice@@Base+0x1a0>
   45e64:	ldr	r3, [pc, #80]	; 45ebc <usbFindDevice@@Base+0x24c>
   45e68:	ldr	r0, [pc, r3]
   45e6c:	cmp	r0, #0
   45e70:	bne	45cac <usbFindDevice@@Base+0x3c>
   45e74:	b	45cd0 <usbFindDevice@@Base+0x60>
   45e78:	bl	f950 <__stack_chk_fail@plt>
   45e7c:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   45e80:			; <UNDEFINED> instruction: 0x000003b4
   45e84:	andeq	lr, r2, r4, ror r3
   45e88:			; <UNDEFINED> instruction: 0xffffff48
   45e8c:			; <UNDEFINED> instruction: 0xffffe7d8
   45e90:	andeq	fp, r2, r4, asr #31
   45e94:	andeq	r4, r1, r0, ror sl
   45e98:	andeq	r4, r1, ip, ror sl
   45e9c:	andeq	r4, r1, r0, lsr r7
   45ea0:			; <UNDEFINED> instruction: 0xffffe7f4
   45ea4:	andeq	r4, r1, ip, asr #13
   45ea8:	andeq	r8, r0, r8, asr ip
   45eac:	andeq	r9, r0, r8, lsl #22
   45eb0:			; <UNDEFINED> instruction: 0x000149b4
   45eb4:	strdeq	lr, [r2], -r0
   45eb8:	muleq	r1, r0, r9
   45ebc:	muleq	r2, ip, r1

00045ec0 <usbForgetDevices@@Base>:
   45ec0:	push	{r4, lr}
   45ec4:	ldr	r4, [pc, #28]	; 45ee8 <usbForgetDevices@@Base+0x28>
   45ec8:	add	r4, pc, r4
   45ecc:	ldr	r0, [r4]
   45ed0:	cmp	r0, #0
   45ed4:	popeq	{r4, pc}
   45ed8:	bl	2ac6c <deallocateQueue@@Base>
   45edc:	mov	r3, #0
   45ee0:	str	r3, [r4]
   45ee4:	pop	{r4, pc}
   45ee8:	andeq	lr, r2, ip, lsr r1
   45eec:	ldrd	r2, [r0]
   45ef0:	ldrd	r0, [r1]
   45ef4:	cmp	r3, r1
   45ef8:	cmpeq	r2, r0
   45efc:	movne	r0, #0
   45f00:	moveq	r0, #1
   45f04:	bx	lr
   45f08:	b	f4f4 <free@plt>
   45f0c:	ldr	r0, [pc, #40]	; 45f3c <usbForgetDevices@@Base+0x7c>
   45f10:	mov	r1, #0
   45f14:	push	{r3, lr}
   45f18:	add	r0, pc, r0
   45f1c:	bl	2abf4 <newQueue@@Base>
   45f20:	ldr	r2, [pc, #24]	; 45f40 <usbForgetDevices@@Base+0x80>
   45f24:	add	r2, pc, r2
   45f28:	mov	r3, r0
   45f2c:	adds	r0, r0, #0
   45f30:	str	r3, [r2]
   45f34:	movne	r0, #1
   45f38:	pop	{r3, pc}
   45f3c:			; <UNDEFINED> instruction: 0xffffffe8
   45f40:	andeq	lr, r2, r4, ror #1

00045f44 <bthForgetConnectErrors@@Base>:
   45f44:	push	{r4, lr}
   45f48:	ldr	r4, [pc, #40]	; 45f78 <bthForgetConnectErrors@@Base+0x34>
   45f4c:	add	r4, pc, r4
   45f50:	ldr	r0, [r4]
   45f54:	cmp	r0, #0
   45f58:	beq	45f64 <bthForgetConnectErrors@@Base+0x20>
   45f5c:	pop	{r4, lr}
   45f60:	b	2ac44 <deleteElements@@Base>
   45f64:	bl	45f0c <usbForgetDevices@@Base+0x4c>
   45f68:	cmp	r0, #0
   45f6c:	popeq	{r4, pc}
   45f70:	ldr	r0, [r4]
   45f74:	b	45f5c <bthForgetConnectErrors@@Base+0x18>
   45f78:	strheq	lr, [r2], -ip

00045f7c <bthOpenConnection@@Base>:
   45f7c:	ldr	r3, [pc, #760]	; 4627c <bthOpenConnection@@Base+0x300>
   45f80:	ldr	ip, [pc, #760]	; 46280 <bthOpenConnection@@Base+0x304>
   45f84:	add	r3, pc, r3
   45f88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45f8c:	sub	sp, sp, #44	; 0x2c
   45f90:	ldr	r7, [r3, ip]
   45f94:	mov	r9, r0
   45f98:	mov	r0, #16
   45f9c:	mov	r5, r1
   45fa0:	mov	sl, r2
   45fa4:	ldr	r3, [r7]
   45fa8:	str	r3, [sp, #36]	; 0x24
   45fac:	bl	fb48 <malloc@plt>
   45fb0:	subs	r6, r0, #0
   45fb4:	beq	46270 <bthOpenConnection@@Base+0x2f4>
   45fb8:	mov	r1, r6
   45fbc:	mov	r0, #0
   45fc0:	str	r0, [r1], #4
   45fc4:	add	r1, r1, #4
   45fc8:	str	r0, [r6, #4]
   45fcc:	mov	r2, r0
   45fd0:	str	r0, [r1], #4
   45fd4:	add	r8, sp, #24
   45fd8:	str	r0, [r1]
   45fdc:	mov	r3, r0
   45fe0:	mov	r4, r9
   45fe4:	mov	fp, #6
   45fe8:	strb	r5, [r6, #8]
   45fec:	b	45ffc <bthOpenConnection@@Base+0x80>
   45ff0:	subs	fp, fp, #1
   45ff4:	beq	46098 <bthOpenConnection@@Base+0x11c>
   45ff8:	ldm	r6, {r2, r3}
   45ffc:	lsl	r3, r3, #8
   46000:	lsl	r1, r2, #8
   46004:	orr	r3, r3, r2, lsr #24
   46008:	stm	r6, {r1, r3}
   4600c:	ldrb	r3, [r4]
   46010:	cmp	r3, #0
   46014:	beq	45ff0 <bthOpenConnection@@Base+0x74>
   46018:	mov	r0, r4
   4601c:	mov	r1, r8
   46020:	mov	r2, #16
   46024:	bl	f4e8 <strtol@plt>
   46028:	ldr	r3, [sp, #24]
   4602c:	cmp	r4, r3
   46030:	beq	46074 <bthOpenConnection@@Base+0xf8>
   46034:	cmp	r0, #255	; 0xff
   46038:	bhi	46074 <bthOpenConnection@@Base+0xf8>
   4603c:	ldrd	r4, [r6]
   46040:	orr	r4, r4, r0
   46044:	orr	r5, r5, r0, asr #31
   46048:	strd	r4, [r6]
   4604c:	ldrb	r2, [r3]
   46050:	cmp	r2, #0
   46054:	moveq	r4, r3
   46058:	beq	45ff0 <bthOpenConnection@@Base+0x74>
   4605c:	cmp	r2, #58	; 0x3a
   46060:	bne	46074 <bthOpenConnection@@Base+0xf8>
   46064:	ldrb	r2, [r3, #1]
   46068:	add	r4, r3, #1
   4606c:	cmp	r2, #0
   46070:	bne	45ff0 <bthOpenConnection@@Base+0x74>
   46074:	ldr	r1, [pc, #520]	; 46284 <bthOpenConnection@@Base+0x308>
   46078:	mov	r2, r9
   4607c:	mov	r0, #3
   46080:	add	r1, pc, r1
   46084:	bl	1c634 <logMessage@@Base>
   46088:	bl	fca4 <__errno_location@plt>
   4608c:	mov	r3, #22
   46090:	str	r3, [r0]
   46094:	b	461dc <bthOpenConnection@@Base+0x260>
   46098:	ldrb	r3, [r4]
   4609c:	cmp	r3, #0
   460a0:	bne	46074 <bthOpenConnection@@Base+0xf8>
   460a4:	cmp	sl, #0
   460a8:	beq	46158 <bthOpenConnection@@Base+0x1dc>
   460ac:	ldr	r4, [pc, #468]	; 46288 <bthOpenConnection@@Base+0x30c>
   460b0:	ldrd	r2, [r6]
   460b4:	add	r4, pc, r4
   460b8:	ldr	r0, [r4]
   460bc:	strd	r2, [sp]
   460c0:	cmp	r0, #0
   460c4:	beq	4625c <bthOpenConnection@@Base+0x2e0>
   460c8:	ldr	r1, [pc, #444]	; 4628c <bthOpenConnection@@Base+0x310>
   460cc:	mov	r2, sp
   460d0:	add	r1, pc, r1
   460d4:	bl	2acac <findElement@@Base>
   460d8:	cmp	r0, #0
   460dc:	beq	460e4 <bthOpenConnection@@Base+0x168>
   460e0:	bl	2ab08 <deleteElement@@Base>
   460e4:	add	r4, sp, #24
   460e8:	mov	r1, #2000	; 0x7d0
   460ec:	mov	r0, r4
   460f0:	bl	1ebf0 <startTimePeriod@@Base>
   460f4:	b	46124 <bthOpenConnection@@Base+0x1a8>
   460f8:	mov	r1, r0
   460fc:	mov	r0, r4
   46100:	bl	1ebf8 <afterTimePeriod@@Base>
   46104:	cmp	r0, #0
   46108:	bne	4619c <bthOpenConnection@@Base+0x220>
   4610c:	bl	fca4 <__errno_location@plt>
   46110:	ldr	r8, [r0]
   46114:	cmp	r8, #16
   46118:	bne	461a4 <bthOpenConnection@@Base+0x228>
   4611c:	mov	r0, #100	; 0x64
   46120:	bl	1ec24 <approximateDelay@@Base>
   46124:	ldrd	r0, [r6]
   46128:	ldrb	r2, [r6, #8]
   4612c:	bl	46324 <bthConnect@@Base>
   46130:	cmp	r0, #0
   46134:	str	r0, [r6, #12]
   46138:	beq	460f8 <bthOpenConnection@@Base+0x17c>
   4613c:	mov	r0, r6
   46140:	ldr	r2, [sp, #36]	; 0x24
   46144:	ldr	r3, [r7]
   46148:	cmp	r2, r3
   4614c:	bne	46278 <bthOpenConnection@@Base+0x2fc>
   46150:	add	sp, sp, #44	; 0x2c
   46154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46158:	ldr	r8, [pc, #304]	; 46290 <bthOpenConnection@@Base+0x314>
   4615c:	ldrd	r4, [r6]
   46160:	add	r8, pc, r8
   46164:	ldr	r0, [r8]
   46168:	cmp	r0, #0
   4616c:	beq	46248 <bthOpenConnection@@Base+0x2cc>
   46170:	add	r2, sp, #40	; 0x28
   46174:	ldr	r1, [pc, #280]	; 46294 <bthOpenConnection@@Base+0x318>
   46178:	strd	r4, [r2, #-32]!	; 0xffffffe0
   4617c:	add	r1, pc, r1
   46180:	bl	2aebc <findItem@@Base>
   46184:	cmp	r0, #0
   46188:	beq	460e4 <bthOpenConnection@@Base+0x168>
   4618c:	ldr	r4, [r0, #8]
   46190:	bl	fca4 <__errno_location@plt>
   46194:	str	r4, [r0]
   46198:	b	461dc <bthOpenConnection@@Base+0x260>
   4619c:	bl	fca4 <__errno_location@plt>
   461a0:	ldr	r8, [r0]
   461a4:	ldr	r9, [pc, #236]	; 46298 <bthOpenConnection@@Base+0x31c>
   461a8:	ldrd	r4, [r6]
   461ac:	add	r9, pc, r9
   461b0:	ldr	r0, [r9]
   461b4:	cmp	r0, #0
   461b8:	beq	46234 <bthOpenConnection@@Base+0x2b8>
   461bc:	add	r2, sp, #40	; 0x28
   461c0:	ldr	r1, [pc, #212]	; 4629c <bthOpenConnection@@Base+0x320>
   461c4:	strd	r4, [r2, #-24]!	; 0xffffffe8
   461c8:	add	r1, pc, r1
   461cc:	bl	2aebc <findItem@@Base>
   461d0:	subs	r4, r0, #0
   461d4:	beq	461ec <bthOpenConnection@@Base+0x270>
   461d8:	str	r8, [r4, #8]
   461dc:	mov	r0, r6
   461e0:	bl	f4f4 <free@plt>
   461e4:	mov	r0, #0
   461e8:	b	46140 <bthOpenConnection@@Base+0x1c4>
   461ec:	mov	r0, #16
   461f0:	bl	fb48 <malloc@plt>
   461f4:	subs	r5, r0, #0
   461f8:	beq	461dc <bthOpenConnection@@Base+0x260>
   461fc:	ldr	r0, [pc, #156]	; 462a0 <bthOpenConnection@@Base+0x324>
   46200:	mov	r1, r5
   46204:	ldrd	r2, [sp, #16]
   46208:	add	r0, pc, r0
   4620c:	str	r4, [r5, #8]
   46210:	strd	r2, [r5]
   46214:	ldr	r0, [r0]
   46218:	bl	2ade4 <enqueueItem@@Base>
   4621c:	cmp	r0, #0
   46220:	movne	r4, r5
   46224:	bne	461d8 <bthOpenConnection@@Base+0x25c>
   46228:	mov	r0, r5
   4622c:	bl	f4f4 <free@plt>
   46230:	b	461dc <bthOpenConnection@@Base+0x260>
   46234:	bl	45f0c <usbForgetDevices@@Base+0x4c>
   46238:	cmp	r0, #0
   4623c:	beq	461dc <bthOpenConnection@@Base+0x260>
   46240:	ldr	r0, [r9]
   46244:	b	461bc <bthOpenConnection@@Base+0x240>
   46248:	bl	45f0c <usbForgetDevices@@Base+0x4c>
   4624c:	cmp	r0, #0
   46250:	beq	460e4 <bthOpenConnection@@Base+0x168>
   46254:	ldr	r0, [r8]
   46258:	b	46170 <bthOpenConnection@@Base+0x1f4>
   4625c:	bl	45f0c <usbForgetDevices@@Base+0x4c>
   46260:	cmp	r0, #0
   46264:	beq	460e4 <bthOpenConnection@@Base+0x168>
   46268:	ldr	r0, [r4]
   4626c:	b	460c8 <bthOpenConnection@@Base+0x14c>
   46270:	bl	1c740 <logMallocError@@Base>
   46274:	b	4613c <bthOpenConnection@@Base+0x1c0>
   46278:	bl	f950 <__stack_chk_fail@plt>
   4627c:	strdeq	ip, [r2], -r4
   46280:			; <UNDEFINED> instruction: 0x000003b4
   46284:	ldrdeq	r4, [r1], -ip
   46288:	andeq	sp, r2, r4, asr pc
   4628c:			; <UNDEFINED> instruction: 0xfffffe14
   46290:	andeq	sp, r2, r8, lsr #29
   46294:			; <UNDEFINED> instruction: 0xfffffd68
   46298:	andeq	sp, r2, ip, asr lr
   4629c:			; <UNDEFINED> instruction: 0xfffffd1c
   462a0:	andeq	sp, r2, r0, lsl #28

000462a4 <bthCloseConnection@@Base>:
   462a4:	push	{r4, lr}
   462a8:	mov	r4, r0
   462ac:	ldr	r0, [r0, #12]
   462b0:	bl	464b0 <bthDisconnect@@Base>
   462b4:	mov	r0, r4
   462b8:	pop	{r4, lr}
   462bc:	b	f4f4 <free@plt>

000462c0 <isBluetoothDevice@@Base>:
   462c0:	ldr	r1, [pc, #80]	; 46318 <isBluetoothDevice@@Base+0x58>
   462c4:	push	{r4, lr}
   462c8:	add	r1, pc, r1
   462cc:	mov	r4, r0
   462d0:	bl	1dadc <isQualifiedDevice@@Base>
   462d4:	cmp	r0, #0
   462d8:	beq	462e4 <isBluetoothDevice@@Base+0x24>
   462dc:	mov	r0, #1
   462e0:	pop	{r4, pc}
   462e4:	ldr	r1, [pc, #48]	; 4631c <isBluetoothDevice@@Base+0x5c>
   462e8:	mov	r0, r4
   462ec:	add	r1, pc, r1
   462f0:	bl	1dadc <isQualifiedDevice@@Base>
   462f4:	cmp	r0, #0
   462f8:	bne	462dc <isBluetoothDevice@@Base+0x1c>
   462fc:	ldr	r1, [pc, #28]	; 46320 <isBluetoothDevice@@Base+0x60>
   46300:	mov	r0, r4
   46304:	add	r1, pc, r1
   46308:	bl	1dadc <isQualifiedDevice@@Base>
   4630c:	adds	r0, r0, #0
   46310:	movne	r0, #1
   46314:	pop	{r4, pc}
   46318:	andeq	r0, r1, r8, asr sp
   4631c:	muleq	r1, r8, r5
   46320:	andeq	r4, r1, r4, lsl #11

00046324 <bthConnect@@Base>:
   46324:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   46328:	mov	r4, r0
   4632c:	mov	r0, #24
   46330:	mov	r5, r1
   46334:	mov	r8, r2
   46338:	bl	fb48 <malloc@plt>
   4633c:	subs	r6, r0, #0
   46340:	beq	46484 <bthConnect@@Base+0x160>
   46344:	mov	r9, r6
   46348:	mov	r7, #0
   4634c:	str	r7, [r9], #4
   46350:	add	r3, r9, #4
   46354:	str	r7, [r6, #4]
   46358:	mov	r0, #31
   4635c:	str	r7, [r3], #4
   46360:	mov	r1, #1
   46364:	str	r7, [r3], #4
   46368:	mov	r2, #3
   4636c:	str	r7, [r3], #4
   46370:	str	r7, [r3]
   46374:	bl	f980 <socket@plt>
   46378:	cmn	r0, #1
   4637c:	str	r0, [r6]
   46380:	beq	46458 <bthConnect@@Base+0x134>
   46384:	mov	r1, r9
   46388:	strb	r7, [r6, #12]
   4638c:	strb	r7, [r6, #6]
   46390:	mov	r9, #31
   46394:	strb	r7, [r6, #7]
   46398:	mov	r2, #10
   4639c:	strb	r7, [r6, #8]
   463a0:	strb	r7, [r6, #9]
   463a4:	strb	r7, [r6, #10]
   463a8:	strb	r7, [r6, #11]
   463ac:	strh	r9, [r6, #4]
   463b0:	bl	f8cc <bind@plt>
   463b4:	cmn	r0, #1
   463b8:	beq	46490 <bthConnect@@Base+0x16c>
   463bc:	mov	r1, r7
   463c0:	mov	r3, r6
   463c4:	strh	r9, [r6, #14]
   463c8:	strb	r8, [r6, #22]
   463cc:	add	r1, r1, #1
   463d0:	lsr	r2, r4, #8
   463d4:	cmp	r1, #6
   463d8:	strb	r4, [r3, #16]
   463dc:	orr	r4, r2, r5, lsl #24
   463e0:	add	r3, r3, #1
   463e4:	lsr	r5, r5, #8
   463e8:	bne	463cc <bthConnect@@Base+0xa8>
   463ec:	mov	r1, r6
   463f0:	mov	r2, #10
   463f4:	ldr	r0, [r1], #14
   463f8:	bl	fa94 <connect@plt>
   463fc:	cmn	r0, #1
   46400:	beq	46420 <bthConnect@@Base+0xfc>
   46404:	ldr	r0, [r6]
   46408:	mov	r1, #0
   4640c:	bl	1f1a8 <setBlockingIo@@Base>
   46410:	cmp	r0, #0
   46414:	beq	46440 <bthConnect@@Base+0x11c>
   46418:	mov	r0, r6
   4641c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   46420:	bl	fca4 <__errno_location@plt>
   46424:	ldr	r0, [r0]
   46428:	sub	r3, r0, #112	; 0x70
   4642c:	cmp	r3, #1
   46430:	bls	46468 <bthConnect@@Base+0x144>
   46434:	ldr	r0, [pc, #100]	; 464a0 <bthConnect@@Base+0x17c>
   46438:	add	r0, pc, r0
   4643c:	bl	1c6fc <logSystemError@@Base>
   46440:	ldr	r0, [r6]
   46444:	bl	f764 <close@plt>
   46448:	mov	r0, r6
   4644c:	bl	f4f4 <free@plt>
   46450:	mov	r0, #0
   46454:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   46458:	ldr	r0, [pc, #68]	; 464a4 <bthConnect@@Base+0x180>
   4645c:	add	r0, pc, r0
   46460:	bl	1c6fc <logSystemError@@Base>
   46464:	b	46448 <bthConnect@@Base+0x124>
   46468:	bl	f5c0 <strerror@plt>
   4646c:	ldr	r1, [pc, #52]	; 464a8 <bthConnect@@Base+0x184>
   46470:	add	r1, pc, r1
   46474:	mov	r2, r0
   46478:	mov	r0, #7
   4647c:	bl	1c634 <logMessage@@Base>
   46480:	b	46440 <bthConnect@@Base+0x11c>
   46484:	bl	1c740 <logMallocError@@Base>
   46488:	mov	r0, r6
   4648c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   46490:	ldr	r0, [pc, #20]	; 464ac <bthConnect@@Base+0x188>
   46494:	add	r0, pc, r0
   46498:	bl	1c6fc <logSystemError@@Base>
   4649c:	b	46440 <bthConnect@@Base+0x11c>
   464a0:	andeq	r4, r1, r8, asr r4
   464a4:	andeq	r4, r1, ip, ror #8
   464a8:	andeq	r4, r1, r0, lsr r4
   464ac:	andeq	r4, r1, r8, lsr #8

000464b0 <bthDisconnect@@Base>:
   464b0:	push	{r4, lr}
   464b4:	mov	r4, r0
   464b8:	ldr	r0, [r0]
   464bc:	bl	f764 <close@plt>
   464c0:	mov	r0, r4
   464c4:	pop	{r4, lr}
   464c8:	b	f4f4 <free@plt>

000464cc <bthAwaitInput@@Base>:
   464cc:	ldr	r3, [r0, #12]
   464d0:	ldr	r0, [r3]
   464d4:	b	1eeb0 <awaitInput@@Base>

000464d8 <bthReadData@@Base>:
   464d8:	ldr	r0, [r0, #12]
   464dc:	ldr	r0, [r0]
   464e0:	b	1efb0 <readData@@Base>

000464e4 <bthWriteData@@Base>:
   464e4:	ldr	r3, [r0, #12]
   464e8:	ldr	r0, [r3]
   464ec:	b	1f044 <writeData@@Base>
   464f0:	bx	lr
   464f4:	mov	r0, #0
   464f8:	bx	lr
   464fc:	mov	r0, #0
   46500:	bx	lr
   46504:	mov	r0, #1
   46508:	bx	lr
   4650c:	bx	lr
   46510:	bx	lr
   46514:	bx	lr
   46518:	push	{r3, r4, r5, lr}
   4651c:	ldr	r5, [pc, #72]	; 4656c <bthWriteData@@Base+0x88>
   46520:	add	r5, pc, r5
   46524:	ldr	r4, [r5]
   46528:	cmp	r4, #0
   4652c:	beq	46548 <bthWriteData@@Base+0x64>
   46530:	mov	r0, r4
   46534:	bl	f800 <unlink@plt>
   46538:	mov	r0, r4
   4653c:	bl	f4f4 <free@plt>
   46540:	mov	r3, #0
   46544:	str	r3, [r5]
   46548:	ldr	r4, [pc, #32]	; 46570 <bthWriteData@@Base+0x8c>
   4654c:	add	r4, pc, r4
   46550:	ldr	r0, [r4]
   46554:	cmn	r0, #1
   46558:	popeq	{r3, r4, r5, pc}
   4655c:	bl	f764 <close@plt>
   46560:	mvn	r3, #0
   46564:	str	r3, [r4]
   46568:	pop	{r3, r4, r5, pc}
   4656c:	andeq	sp, r2, ip, ror #21
   46570:			; <UNDEFINED> instruction: 0x0002cbb4

00046574 <haveSpeechDriver@@Base>:
   46574:	ldr	r1, [pc, #12]	; 46588 <haveSpeechDriver@@Base+0x14>
   46578:	ldr	r2, [pc, #12]	; 4658c <haveSpeechDriver@@Base+0x18>
   4657c:	add	r1, pc, r1
   46580:	add	r2, pc, r2
   46584:	b	38414 <haveDriver@@Base>
   46588:	strheq	sl, [r0], -ip
   4658c:	andeq	r4, r1, r8, asr r3

00046590 <getDefaultSpeechDriver@@Base>:
   46590:	ldr	r0, [pc, #4]	; 4659c <getDefaultSpeechDriver@@Base+0xc>
   46594:	add	r0, pc, r0
   46598:	b	3843c <getDefaultDriver@@Base>
   4659c:	andeq	r4, r1, r4, asr #6

000465a0 <loadSpeechDriver@@Base>:
   465a0:	ldr	r3, [pc, #76]	; 465f4 <loadSpeechDriver@@Base+0x54>
   465a4:	ldr	ip, [pc, #76]	; 465f8 <loadSpeechDriver@@Base+0x58>
   465a8:	push	{r4, r5, lr}
   465ac:	add	r3, pc, r3
   465b0:	sub	sp, sp, #28
   465b4:	ldr	r5, [pc, #64]	; 465fc <loadSpeechDriver@@Base+0x5c>
   465b8:	ldr	r4, [pc, #64]	; 46600 <loadSpeechDriver@@Base+0x60>
   465bc:	mov	lr, #115	; 0x73
   465c0:	add	r5, pc, r5
   465c4:	str	lr, [sp, #4]
   465c8:	str	r5, [sp]
   465cc:	add	r4, pc, r4
   465d0:	str	r4, [sp, #8]
   465d4:	ldr	ip, [r3, ip]
   465d8:	ldr	r3, [pc, #36]	; 46604 <loadSpeechDriver@@Base+0x64>
   465dc:	str	ip, [sp, #12]
   465e0:	add	r3, pc, r3
   465e4:	str	ip, [sp, #16]
   465e8:	bl	38478 <loadDriver@@Base>
   465ec:	add	sp, sp, #28
   465f0:	pop	{r4, r5, pc}
   465f4:	andeq	ip, r2, ip, asr #9
   465f8:	andeq	r0, r0, r8, lsl #10
   465fc:	andeq	r9, r0, r0, asr #3
   46600:	andeq	r4, r1, r4, ror r3
   46604:	strdeq	r4, [r1], -r8

00046608 <identifySpeechDriver@@Base>:
   46608:	mov	r2, r1
   4660c:	mov	r1, r0
   46610:	ldr	r0, [pc, #4]	; 4661c <identifySpeechDriver@@Base+0x14>
   46614:	add	r0, pc, r0
   46618:	b	387e8 <identifyDriver@@Base>
   4661c:	andeq	r4, r1, r0, lsr r3

00046620 <identifySpeechDrivers@@Base>:
   46620:	bx	lr

00046624 <initializeSpeechSynthesizer@@Base>:
   46624:	mov	r3, #0
   46628:	str	r3, [r0]
   4662c:	bx	lr

00046630 <sayCharacters@@Base>:
   46630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   46634:	subs	r7, r2, #0
   46638:	ldr	sl, [pc, #308]	; 46774 <sayCharacters@@Base+0x144>
   4663c:	add	fp, sp, #32
   46640:	ldr	r2, [pc, #304]	; 46778 <sayCharacters@@Base+0x148>
   46644:	sub	sp, sp, #52	; 0x34
   46648:	add	sl, pc, sl
   4664c:	str	r3, [fp, #-64]	; 0xffffffc0
   46650:	mov	r8, r1
   46654:	str	r0, [fp, #-60]	; 0xffffffc4
   46658:	ldr	r2, [sl, r2]
   4665c:	ldr	r3, [r2]
   46660:	str	r2, [fp, #-56]	; 0xffffffc8
   46664:	str	r3, [fp, #-40]	; 0xffffffd8
   46668:	bne	46688 <sayCharacters@@Base+0x58>
   4666c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   46670:	ldr	r2, [fp, #-40]	; 0xffffffd8
   46674:	ldr	r3, [r1]
   46678:	cmp	r2, r3
   4667c:	bne	46770 <sayCharacters@@Base+0x140>
   46680:	sub	sp, fp, #32
   46684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46688:	rsb	r2, r7, r7, lsl #3
   4668c:	str	sp, [fp, #-72]	; 0xffffffb8
   46690:	add	r2, r2, #8
   46694:	mov	r3, #0
   46698:	bic	r2, r2, #7
   4669c:	sub	r6, fp, #48	; 0x30
   466a0:	sub	sp, sp, r2
   466a4:	mov	r4, r3
   466a8:	add	r1, sp, #8
   466ac:	mov	r9, #32
   466b0:	str	r1, [fp, #-68]	; 0xffffffbc
   466b4:	mov	r5, r1
   466b8:	b	466cc <sayCharacters@@Base+0x9c>
   466bc:	add	r4, r4, #1
   466c0:	cmp	r4, r7
   466c4:	mov	r3, r4
   466c8:	beq	4670c <sayCharacters@@Base+0xdc>
   466cc:	ldrb	r0, [r8, r3]
   466d0:	mov	r1, r6
   466d4:	bl	28364 <convertCharToUtf8@@Base>
   466d8:	subs	r3, r0, #0
   466dc:	strbeq	r9, [r5]
   466e0:	addeq	r5, r5, #1
   466e4:	beq	466bc <sayCharacters@@Base+0x8c>
   466e8:	mov	r0, r5
   466ec:	mov	r2, r3
   466f0:	add	r4, r4, #1
   466f4:	mov	r1, r6
   466f8:	add	r5, r5, r3
   466fc:	bl	fb24 <memcpy@plt>
   46700:	cmp	r4, r7
   46704:	mov	r3, r4
   46708:	bne	466cc <sayCharacters@@Base+0x9c>
   4670c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   46710:	mov	r3, #0
   46714:	strb	r3, [r5]
   46718:	cmp	r2, #0
   4671c:	ldr	r3, [pc, #88]	; 4677c <sayCharacters@@Base+0x14c>
   46720:	bne	46754 <sayCharacters@@Base+0x124>
   46724:	ldr	r4, [sl, r3]
   46728:	ldr	ip, [r4]
   4672c:	mov	lr, #0
   46730:	ldr	r1, [fp, #-68]	; 0xffffffbc
   46734:	mov	r3, r7
   46738:	ldr	r0, [fp, #-60]	; 0xffffffc4
   4673c:	rsb	r2, r1, r5
   46740:	str	lr, [sp]
   46744:	ldr	ip, [ip, #40]	; 0x28
   46748:	blx	ip
   4674c:	ldr	sp, [fp, #-72]	; 0xffffffb8
   46750:	b	4666c <sayCharacters@@Base+0x3c>
   46754:	ldr	r4, [sl, r3]
   46758:	ldr	r0, [fp, #-60]	; 0xffffffc4
   4675c:	ldr	r3, [r4]
   46760:	ldr	r3, [r3, #44]	; 0x2c
   46764:	blx	r3
   46768:	b	46728 <sayCharacters@@Base+0xf8>
   4676c:	bl	fd04 <_Unwind_Resume@plt>
   46770:	bl	f950 <__stack_chk_fail@plt>
   46774:	andeq	ip, r2, r0, lsr r4
   46778:			; <UNDEFINED> instruction: 0x000003b4
   4677c:	andeq	r0, r0, ip, lsl r4

00046780 <sayString@@Base>:
   46780:	push	{r4, r5, r6, lr}
   46784:	mov	r6, r0
   46788:	mov	r0, r1
   4678c:	mov	r5, r2
   46790:	mov	r4, r1
   46794:	bl	fb54 <strlen@plt>
   46798:	mov	r1, r4
   4679c:	mov	r3, r5
   467a0:	mov	r2, r0
   467a4:	mov	r0, r6
   467a8:	pop	{r4, r5, r6, lr}
   467ac:	b	46630 <sayCharacters@@Base>
   467b0:	ldr	ip, [pc, #160]	; 46858 <sayString@@Base+0xd8>
   467b4:	push	{r4, r5, r6, r7, lr}
   467b8:	add	ip, pc, ip
   467bc:	ldr	r4, [pc, #152]	; 4685c <sayString@@Base+0xdc>
   467c0:	sub	sp, sp, #108	; 0x6c
   467c4:	ldr	lr, [pc, #148]	; 46860 <sayString@@Base+0xe0>
   467c8:	add	r6, sp, #20
   467cc:	mov	r5, r1
   467d0:	mov	r1, #16
   467d4:	ldr	r4, [ip, r4]
   467d8:	add	lr, pc, lr
   467dc:	str	r2, [sp, #4]
   467e0:	mov	r3, r1
   467e4:	str	lr, [sp]
   467e8:	mov	r7, r0
   467ec:	ldr	ip, [r4]
   467f0:	mov	r2, #1
   467f4:	mov	r0, r6
   467f8:	str	ip, [sp, #100]	; 0x64
   467fc:	bl	fb60 <__snprintf_chk@plt>
   46800:	str	r5, [sp, #4]
   46804:	add	r5, sp, #36	; 0x24
   46808:	ldr	r2, [pc, #84]	; 46864 <sayString@@Base+0xe4>
   4680c:	mov	r1, #64	; 0x40
   46810:	mov	r3, r1
   46814:	mov	r0, r5
   46818:	add	r2, pc, r2
   4681c:	str	r6, [sp, #8]
   46820:	str	r2, [sp]
   46824:	mov	r2, #1
   46828:	bl	fb60 <__snprintf_chk@plt>
   4682c:	mov	r2, #1
   46830:	mov	r0, r7
   46834:	mov	r1, r5
   46838:	bl	46780 <sayString@@Base>
   4683c:	ldr	r2, [sp, #100]	; 0x64
   46840:	ldr	r3, [r4]
   46844:	cmp	r2, r3
   46848:	bne	46854 <sayString@@Base+0xd4>
   4684c:	add	sp, sp, #108	; 0x6c
   46850:	pop	{r4, r5, r6, r7, pc}
   46854:	bl	f950 <__stack_chk_fail@plt>
   46858:	andeq	ip, r2, r0, asr #5
   4685c:			; <UNDEFINED> instruction: 0x000003b4
   46860:	andeq	r3, r1, r4, lsr #10
   46864:	andeq	r9, r0, r0, lsl #31

00046868 <setSpeechVolume@@Base>:
   46868:	push	{r3, r4, r5, r6, r7, lr}
   4686c:	mov	r6, r0
   46870:	ldr	r3, [pc, #140]	; 46904 <setSpeechVolume@@Base+0x9c>
   46874:	mov	r4, r1
   46878:	ldr	r0, [pc, #136]	; 46908 <setSpeechVolume@@Base+0xa0>
   4687c:	mov	r7, r2
   46880:	add	r3, pc, r3
   46884:	ldr	r5, [r3, r0]
   46888:	ldr	r3, [r5]
   4688c:	ldr	r3, [r3, #60]	; 0x3c
   46890:	cmp	r3, #0
   46894:	beq	468fc <setSpeechVolume@@Base+0x94>
   46898:	ldr	r1, [pc, #108]	; 4690c <setSpeechVolume@@Base+0xa4>
   4689c:	mov	r0, #7
   468a0:	mov	r2, r4
   468a4:	add	r1, pc, r1
   468a8:	bl	1c634 <logMessage@@Base>
   468ac:	ldr	r3, [r5]
   468b0:	mov	r0, r6
   468b4:	uxtb	r1, r4
   468b8:	ldr	r3, [r3, #60]	; 0x3c
   468bc:	blx	r3
   468c0:	cmp	r7, #0
   468c4:	bne	468d0 <setSpeechVolume@@Base+0x68>
   468c8:	mov	r0, #1
   468cc:	pop	{r3, r4, r5, r6, r7, pc}
   468d0:	ldr	r1, [pc, #56]	; 46910 <setSpeechVolume@@Base+0xa8>
   468d4:	mov	r2, #5
   468d8:	mov	r0, #0
   468dc:	add	r1, pc, r1
   468e0:	bl	f9bc <dcgettext@plt>
   468e4:	mov	r2, r4
   468e8:	mov	r1, r0
   468ec:	mov	r0, r6
   468f0:	bl	467b0 <sayString@@Base+0x30>
   468f4:	mov	r0, #1
   468f8:	pop	{r3, r4, r5, r6, r7, pc}
   468fc:	mov	r0, r3
   46900:	pop	{r3, r4, r5, r6, r7, pc}
   46904:	strdeq	ip, [r2], -r8
   46908:	andeq	r0, r0, ip, lsl r4
   4690c:	andeq	r4, r1, r8, lsr #1
   46910:	ldrdeq	fp, [r0], -r0

00046914 <getIntegerSpeechVolume@@Base>:
   46914:	mov	r2, r1
   46918:	mov	r1, #10
   4691c:	b	1ddcc <rescaleInteger@@Base>

00046920 <getFloatSpeechVolume@@Base>:
   46920:	vmov.f32	s15, #36	; 0x41200000  10.0
   46924:	vmov	s14, r0
   46928:	vcvt.f32.u32	s0, s14
   4692c:	vdiv.f32	s0, s0, s15
   46930:	bx	lr

00046934 <setSpeechRate@@Base>:
   46934:	push	{r3, r4, r5, r6, r7, lr}
   46938:	mov	r6, r0
   4693c:	ldr	r3, [pc, #140]	; 469d0 <setSpeechRate@@Base+0x9c>
   46940:	mov	r4, r1
   46944:	ldr	r0, [pc, #136]	; 469d4 <setSpeechRate@@Base+0xa0>
   46948:	mov	r7, r2
   4694c:	add	r3, pc, r3
   46950:	ldr	r5, [r3, r0]
   46954:	ldr	r3, [r5]
   46958:	ldr	r3, [r3, #64]	; 0x40
   4695c:	cmp	r3, #0
   46960:	beq	469c8 <setSpeechRate@@Base+0x94>
   46964:	ldr	r1, [pc, #108]	; 469d8 <setSpeechRate@@Base+0xa4>
   46968:	mov	r0, #7
   4696c:	mov	r2, r4
   46970:	add	r1, pc, r1
   46974:	bl	1c634 <logMessage@@Base>
   46978:	ldr	r3, [r5]
   4697c:	mov	r0, r6
   46980:	uxtb	r1, r4
   46984:	ldr	r3, [r3, #64]	; 0x40
   46988:	blx	r3
   4698c:	cmp	r7, #0
   46990:	bne	4699c <setSpeechRate@@Base+0x68>
   46994:	mov	r0, #1
   46998:	pop	{r3, r4, r5, r6, r7, pc}
   4699c:	ldr	r1, [pc, #56]	; 469dc <setSpeechRate@@Base+0xa8>
   469a0:	mov	r2, #5
   469a4:	mov	r0, #0
   469a8:	add	r1, pc, r1
   469ac:	bl	f9bc <dcgettext@plt>
   469b0:	mov	r2, r4
   469b4:	mov	r1, r0
   469b8:	mov	r0, r6
   469bc:	bl	467b0 <sayString@@Base+0x30>
   469c0:	mov	r0, #1
   469c4:	pop	{r3, r4, r5, r6, r7, pc}
   469c8:	mov	r0, r3
   469cc:	pop	{r3, r4, r5, r6, r7, pc}
   469d0:	andeq	ip, r2, ip, lsr #2
   469d4:	andeq	r0, r0, ip, lsl r4
   469d8:	strdeq	r3, [r1], -r8
   469dc:			; <UNDEFINED> instruction: 0x0000b4bc

000469e0 <getIntegerSpeechRate@@Base>:
   469e0:	mov	r2, r1
   469e4:	mov	r1, #10
   469e8:	b	1ddcc <rescaleInteger@@Base>

000469ec <getFloatSpeechRate@@Base>:
   469ec:	ldr	r3, [pc, #12]	; 46a00 <getFloatSpeechRate@@Base+0x14>
   469f0:	add	r3, pc, r3
   469f4:	add	r0, r3, r0, lsl #2
   469f8:	vldr	s0, [r0, #8]
   469fc:	bx	lr
   46a00:	andeq	r3, r1, r8, ror #29

00046a04 <setSpeechPitch@@Base>:
   46a04:	push	{r3, r4, r5, r6, r7, lr}
   46a08:	mov	r6, r0
   46a0c:	ldr	r3, [pc, #140]	; 46aa0 <setSpeechPitch@@Base+0x9c>
   46a10:	mov	r4, r1
   46a14:	ldr	r0, [pc, #136]	; 46aa4 <setSpeechPitch@@Base+0xa0>
   46a18:	mov	r7, r2
   46a1c:	add	r3, pc, r3
   46a20:	ldr	r5, [r3, r0]
   46a24:	ldr	r3, [r5]
   46a28:	ldr	r3, [r3, #68]	; 0x44
   46a2c:	cmp	r3, #0
   46a30:	beq	46a98 <setSpeechPitch@@Base+0x94>
   46a34:	ldr	r1, [pc, #108]	; 46aa8 <setSpeechPitch@@Base+0xa4>
   46a38:	mov	r0, #7
   46a3c:	mov	r2, r4
   46a40:	add	r1, pc, r1
   46a44:	bl	1c634 <logMessage@@Base>
   46a48:	ldr	r3, [r5]
   46a4c:	mov	r0, r6
   46a50:	uxtb	r1, r4
   46a54:	ldr	r3, [r3, #68]	; 0x44
   46a58:	blx	r3
   46a5c:	cmp	r7, #0
   46a60:	bne	46a6c <setSpeechPitch@@Base+0x68>
   46a64:	mov	r0, #1
   46a68:	pop	{r3, r4, r5, r6, r7, pc}
   46a6c:	ldr	r1, [pc, #56]	; 46aac <setSpeechPitch@@Base+0xa8>
   46a70:	mov	r2, #5
   46a74:	mov	r0, #0
   46a78:	add	r1, pc, r1
   46a7c:	bl	f9bc <dcgettext@plt>
   46a80:	mov	r2, r4
   46a84:	mov	r1, r0
   46a88:	mov	r0, r6
   46a8c:	bl	467b0 <sayString@@Base+0x30>
   46a90:	mov	r0, #1
   46a94:	pop	{r3, r4, r5, r6, r7, pc}
   46a98:	mov	r0, r3
   46a9c:	pop	{r3, r4, r5, r6, r7, pc}
   46aa0:	andeq	ip, r2, ip, asr r0
   46aa4:	andeq	r0, r0, ip, lsl r4
   46aa8:	andeq	r3, r1, r0, asr #30
   46aac:	andeq	r3, r1, r4, lsr #30

00046ab0 <getIntegerSpeechPitch@@Base>:
   46ab0:	mov	r2, r1
   46ab4:	mov	r1, #10
   46ab8:	b	1ddcc <rescaleInteger@@Base>

00046abc <getFloatSpeechPitch@@Base>:
   46abc:	vmov.f32	s15, #36	; 0x41200000  10.0
   46ac0:	vmov	s14, r0
   46ac4:	vcvt.f32.u32	s0, s14
   46ac8:	vdiv.f32	s0, s0, s15
   46acc:	bx	lr

00046ad0 <setSpeechPunctuation@@Base>:
   46ad0:	ldr	r3, [pc, #92]	; 46b34 <setSpeechPunctuation@@Base+0x64>
   46ad4:	ldr	r2, [pc, #92]	; 46b38 <setSpeechPunctuation@@Base+0x68>
   46ad8:	add	r3, pc, r3
   46adc:	push	{r4, r5, r6, lr}
   46ae0:	mov	r6, r0
   46ae4:	ldr	r4, [r3, r2]
   46ae8:	mov	r5, r1
   46aec:	ldr	r3, [r4]
   46af0:	ldr	r3, [r3, #72]	; 0x48
   46af4:	cmp	r3, #0
   46af8:	beq	46b2c <setSpeechPunctuation@@Base+0x5c>
   46afc:	ldr	r1, [pc, #56]	; 46b3c <setSpeechPunctuation@@Base+0x6c>
   46b00:	mov	r2, r5
   46b04:	mov	r0, #7
   46b08:	add	r1, pc, r1
   46b0c:	bl	1c634 <logMessage@@Base>
   46b10:	ldr	r3, [r4]
   46b14:	mov	r0, r6
   46b18:	mov	r1, r5
   46b1c:	ldr	r3, [r3, #72]	; 0x48
   46b20:	blx	r3
   46b24:	mov	r0, #1
   46b28:	pop	{r4, r5, r6, pc}
   46b2c:	mov	r0, r3
   46b30:	pop	{r4, r5, r6, pc}
   46b34:	andeq	fp, r2, r0, lsr #31
   46b38:	andeq	r0, r0, ip, lsl r4
   46b3c:	muleq	r1, ip, lr

00046b40 <enableSpeechInput@@Base>:
   46b40:	ldr	r3, [pc, #408]	; 46ce0 <enableSpeechInput@@Base+0x1a0>
   46b44:	ldr	r2, [pc, #408]	; 46ce4 <enableSpeechInput@@Base+0x1a4>
   46b48:	add	r3, pc, r3
   46b4c:	push	{r4, r5, r6, lr}
   46b50:	mov	r4, r0
   46b54:	ldr	r5, [r3, r2]
   46b58:	sub	sp, sp, #96	; 0x60
   46b5c:	ldr	r0, [pc, #388]	; 46ce8 <enableSpeechInput@@Base+0x1a8>
   46b60:	ldr	r3, [r5]
   46b64:	add	r0, pc, r0
   46b68:	str	r3, [sp, #92]	; 0x5c
   46b6c:	bl	1a8f8 <onProgramExit@@Base>
   46b70:	ldr	r0, [pc, #372]	; 46cec <enableSpeechInput@@Base+0x1ac>
   46b74:	mov	r1, r4
   46b78:	add	r0, pc, r0
   46b7c:	bl	1c9c8 <makePath@@Base>
   46b80:	ldr	r3, [pc, #360]	; 46cf0 <enableSpeechInput@@Base+0x1b0>
   46b84:	add	r3, pc, r3
   46b88:	cmp	r0, #0
   46b8c:	mov	r4, r0
   46b90:	str	r0, [r3]
   46b94:	moveq	r0, r0
   46b98:	beq	46bfc <enableSpeechInput@@Base+0xbc>
   46b9c:	mov	r1, #0
   46ba0:	bl	f7f4 <mkfifo@plt>
   46ba4:	cmn	r0, #1
   46ba8:	beq	46c70 <enableSpeechInput@@Base+0x130>
   46bac:	movw	r1, #402	; 0x192
   46bb0:	mov	r0, r4
   46bb4:	bl	f8e4 <chmod@plt>
   46bb8:	mov	r0, r4
   46bbc:	mov	r1, #2048	; 0x800
   46bc0:	bl	f8c0 <open@plt>
   46bc4:	ldr	r3, [pc, #296]	; 46cf4 <enableSpeechInput@@Base+0x1b4>
   46bc8:	add	r3, pc, r3
   46bcc:	cmn	r0, #1
   46bd0:	str	r0, [r3]
   46bd4:	beq	46c14 <enableSpeechInput@@Base+0xd4>
   46bd8:	ldr	r2, [pc, #280]	; 46cf8 <enableSpeechInput@@Base+0x1b8>
   46bdc:	mov	r3, r0
   46be0:	ldr	r1, [pc, #276]	; 46cfc <enableSpeechInput@@Base+0x1bc>
   46be4:	mov	r0, #7
   46be8:	add	r2, pc, r2
   46bec:	add	r1, pc, r1
   46bf0:	ldr	r2, [r2]
   46bf4:	bl	1c634 <logMessage@@Base>
   46bf8:	mov	r0, #1
   46bfc:	ldr	r2, [sp, #92]	; 0x5c
   46c00:	ldr	r3, [r5]
   46c04:	cmp	r2, r3
   46c08:	bne	46cdc <enableSpeechInput@@Base+0x19c>
   46c0c:	add	sp, sp, #96	; 0x60
   46c10:	pop	{r4, r5, r6, pc}
   46c14:	bl	fca4 <__errno_location@plt>
   46c18:	ldr	r4, [pc, #224]	; 46d00 <enableSpeechInput@@Base+0x1c0>
   46c1c:	add	r4, pc, r4
   46c20:	ldr	r6, [r4]
   46c24:	ldr	r0, [r0]
   46c28:	bl	f5c0 <strerror@plt>
   46c2c:	ldr	r1, [pc, #208]	; 46d04 <enableSpeechInput@@Base+0x1c4>
   46c30:	mov	r2, r6
   46c34:	add	r1, pc, r1
   46c38:	mov	r3, r0
   46c3c:	mov	r0, #3
   46c40:	bl	1c634 <logMessage@@Base>
   46c44:	ldr	r4, [r4]
   46c48:	mov	r0, r4
   46c4c:	bl	f800 <unlink@plt>
   46c50:	mov	r0, r4
   46c54:	bl	f4f4 <free@plt>
   46c58:	ldr	r2, [pc, #168]	; 46d08 <enableSpeechInput@@Base+0x1c8>
   46c5c:	mov	r3, #0
   46c60:	add	r2, pc, r2
   46c64:	mov	r0, r3
   46c68:	str	r3, [r2]
   46c6c:	b	46bfc <enableSpeechInput@@Base+0xbc>
   46c70:	bl	fca4 <__errno_location@plt>
   46c74:	mov	r6, r0
   46c78:	ldr	r0, [r0]
   46c7c:	cmp	r0, #17
   46c80:	beq	46cac <enableSpeechInput@@Base+0x16c>
   46c84:	bl	f5c0 <strerror@plt>
   46c88:	ldr	r1, [pc, #124]	; 46d0c <enableSpeechInput@@Base+0x1cc>
   46c8c:	mov	r2, r4
   46c90:	add	r1, pc, r1
   46c94:	mov	r3, r0
   46c98:	mov	r0, #3
   46c9c:	bl	1c634 <logMessage@@Base>
   46ca0:	ldr	r3, [pc, #104]	; 46d10 <enableSpeechInput@@Base+0x1d0>
   46ca4:	ldr	r0, [pc, r3]
   46ca8:	b	46c54 <enableSpeechInput@@Base+0x114>
   46cac:	mov	r0, #3
   46cb0:	mov	r1, r4
   46cb4:	mov	r2, sp
   46cb8:	bl	fc20 <__lxstat@plt>
   46cbc:	cmn	r0, #1
   46cc0:	beq	46cd4 <enableSpeechInput@@Base+0x194>
   46cc4:	ldr	r3, [sp, #16]
   46cc8:	and	r3, r3, #61440	; 0xf000
   46ccc:	cmp	r3, #4096	; 0x1000
   46cd0:	beq	46bac <enableSpeechInput@@Base+0x6c>
   46cd4:	ldr	r0, [r6]
   46cd8:	b	46c84 <enableSpeechInput@@Base+0x144>
   46cdc:	bl	f950 <__stack_chk_fail@plt>
   46ce0:	andeq	fp, r2, r0, lsr pc
   46ce4:			; <UNDEFINED> instruction: 0x000003b4
   46ce8:			; <UNDEFINED> instruction: 0xfffff9ac
   46cec:	andeq	r9, r0, r8, asr #8
   46cf0:	andeq	sp, r2, r8, lsl #9
   46cf4:	andeq	ip, r2, r8, lsr r5
   46cf8:	andeq	sp, r2, r4, lsr #8
   46cfc:	ldrdeq	r3, [r1], -r8
   46d00:	strdeq	sp, [r2], -r0
   46d04:			; <UNDEFINED> instruction: 0x00013db8
   46d08:	andeq	sp, r2, ip, lsr #7
   46d0c:	andeq	r3, r1, r4, lsl #27
   46d10:	andeq	sp, r2, r8, ror #6

00046d14 <processSpeechInput@@Base>:
   46d14:	ldr	r3, [pc, #132]	; 46da0 <processSpeechInput@@Base+0x8c>
   46d18:	ldr	r1, [pc, #132]	; 46da4 <processSpeechInput@@Base+0x90>
   46d1c:	add	r3, pc, r3
   46d20:	ldr	r2, [pc, #128]	; 46da8 <processSpeechInput@@Base+0x94>
   46d24:	push	{r4, r5, r6, lr}
   46d28:	add	r2, pc, r2
   46d2c:	ldr	r4, [r3, r1]
   46d30:	sub	sp, sp, #4096	; 0x1000
   46d34:	mov	r5, r0
   46d38:	ldr	r0, [r2]
   46d3c:	sub	sp, sp, #8
   46d40:	ldr	r2, [r4]
   46d44:	add	r3, sp, #8192	; 0x2000
   46d48:	cmn	r0, #1
   46d4c:	str	r2, [r3, #-4092]	; 0xfffff004
   46d50:	beq	46d7c <processSpeechInput@@Base+0x68>
   46d54:	add	r6, sp, #4
   46d58:	mov	r2, #4096	; 0x1000
   46d5c:	mov	r1, r6
   46d60:	bl	f788 <read@plt>
   46d64:	subs	r2, r0, #0
   46d68:	ble	46d7c <processSpeechInput@@Base+0x68>
   46d6c:	mov	r0, r5
   46d70:	mov	r1, r6
   46d74:	mov	r3, #0
   46d78:	bl	46630 <sayCharacters@@Base>
   46d7c:	add	r3, sp, #8192	; 0x2000
   46d80:	ldr	r2, [r3, #-4092]	; 0xfffff004
   46d84:	ldr	r3, [r4]
   46d88:	cmp	r2, r3
   46d8c:	bne	46d9c <processSpeechInput@@Base+0x88>
   46d90:	add	sp, sp, #4096	; 0x1000
   46d94:	add	sp, sp, #8
   46d98:	pop	{r4, r5, r6, pc}
   46d9c:	bl	f950 <__stack_chk_fail@plt>
   46da0:	andeq	fp, r2, ip, asr sp
   46da4:			; <UNDEFINED> instruction: 0x000003b4
   46da8:	ldrdeq	ip, [r2], -r8
   46dac:	push	{r4, lr}
   46db0:	ldr	r2, [r0, #8]
   46db4:	ldr	r4, [r2, #4]
   46db8:	cmp	r2, r4
   46dbc:	bne	46dd0 <processSpeechInput@@Base+0xbc>
   46dc0:	b	46e38 <processSpeechInput@@Base+0x124>
   46dc4:	ldr	r4, [r4, #4]
   46dc8:	cmp	r2, r4
   46dcc:	beq	46e38 <processSpeechInput@@Base+0x124>
   46dd0:	ldr	r3, [r4, #48]	; 0x30
   46dd4:	cmp	r3, #1
   46dd8:	beq	46dc4 <processSpeechInput@@Base+0xb0>
   46ddc:	ldr	r3, [r0, #24]
   46de0:	cmp	r3, #0
   46de4:	beq	46e1c <processSpeechInput@@Base+0x108>
   46de8:	ldr	r1, [r0]
   46dec:	cmn	r1, #1
   46df0:	beq	46e24 <processSpeechInput@@Base+0x110>
   46df4:	ldr	r2, [r3, #4]
   46df8:	cmp	r1, r2
   46dfc:	bne	46e10 <processSpeechInput@@Base+0xfc>
   46e00:	b	46e24 <processSpeechInput@@Base+0x110>
   46e04:	ldr	r2, [r3, #4]
   46e08:	cmp	r2, r1
   46e0c:	beq	46e24 <processSpeechInput@@Base+0x110>
   46e10:	ldr	r3, [r3, #20]
   46e14:	cmp	r3, #0
   46e18:	bne	46e04 <processSpeechInput@@Base+0xf0>
   46e1c:	mov	r0, r4
   46e20:	pop	{r4, pc}
   46e24:	mov	r0, r3
   46e28:	bl	46dac <processSpeechInput@@Base+0x98>
   46e2c:	cmp	r0, #0
   46e30:	moveq	r0, r4
   46e34:	pop	{r4, pc}
   46e38:	mov	r4, #0
   46e3c:	b	46ddc <processSpeechInput@@Base+0xc8>
   46e40:	push	{r4, r5, r6, r7, r8, lr}
   46e44:	subs	r6, r2, #0
   46e48:	mov	r7, r0
   46e4c:	mov	r8, r1
   46e50:	beq	46eac <processSpeechInput@@Base+0x198>
   46e54:	mov	r4, #0
   46e58:	b	46e64 <processSpeechInput@@Base+0x150>
   46e5c:	cmp	r6, r4
   46e60:	bls	46ea4 <processSpeechInput@@Base+0x190>
   46e64:	add	r1, r8, r4
   46e68:	rsb	r2, r4, r6
   46e6c:	mov	r0, r7
   46e70:	mov	r3, #0
   46e74:	bl	fcb0 <send@plt>
   46e78:	subs	r5, r0, #0
   46e7c:	add	r4, r4, r5
   46e80:	bge	46e5c <processSpeechInput@@Base+0x148>
   46e84:	bl	fca4 <__errno_location@plt>
   46e88:	ldr	r3, [r0]
   46e8c:	cmp	r3, #4
   46e90:	beq	46e5c <processSpeechInput@@Base+0x148>
   46e94:	cmp	r3, #11
   46e98:	beq	46e5c <processSpeechInput@@Base+0x148>
   46e9c:	mov	r0, r5
   46ea0:	pop	{r4, r5, r6, r7, r8, pc}
   46ea4:	mov	r0, r4
   46ea8:	pop	{r4, r5, r6, r7, r8, pc}
   46eac:	mov	r0, r6
   46eb0:	pop	{r4, r5, r6, r7, r8, pc}
   46eb4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   46eb8:	subs	r6, r2, #0
   46ebc:	mov	r7, r0
   46ec0:	mov	r8, r1
   46ec4:	mov	r9, r3
   46ec8:	beq	46f30 <processSpeechInput@@Base+0x21c>
   46ecc:	mov	r4, #0
   46ed0:	mov	r0, r7
   46ed4:	add	r1, r8, r4
   46ed8:	rsb	r2, r4, r6
   46edc:	bl	f788 <read@plt>
   46ee0:	subs	r5, r0, #0
   46ee4:	blt	46f00 <processSpeechInput@@Base+0x1ec>
   46ee8:	beq	46ef8 <processSpeechInput@@Base+0x1e4>
   46eec:	add	r4, r4, r5
   46ef0:	cmp	r6, r4
   46ef4:	bhi	46ed0 <processSpeechInput@@Base+0x1bc>
   46ef8:	mov	r0, r4
   46efc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   46f00:	bl	fca4 <__errno_location@plt>
   46f04:	ldr	r2, [r0]
   46f08:	cmp	r2, #11
   46f0c:	cmpne	r2, #4
   46f10:	beq	46f1c <processSpeechInput@@Base+0x208>
   46f14:	mvn	r0, #0
   46f18:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   46f1c:	cmp	r4, #0
   46f20:	cmpeq	r9, #0
   46f24:	beq	46f14 <processSpeechInput@@Base+0x200>
   46f28:	add	r0, r5, r4
   46f2c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   46f30:	mov	r0, r6
   46f34:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   46f38:	push	{r4, r5, r6, r7, r8, r9, lr}
   46f3c:	mov	r5, r3
   46f40:	ldr	r3, [r0, #8]
   46f44:	sub	sp, sp, #12
   46f48:	mov	r8, r0
   46f4c:	mov	r4, r2
   46f50:	ldr	r9, [sp, #40]	; 0x28
   46f54:	ldr	r6, [r3, #4]
   46f58:	cmp	r3, r6
   46f5c:	bne	46f7c <processSpeechInput@@Base+0x268>
   46f60:	b	46fb8 <processSpeechInput@@Base+0x2a4>
   46f64:	mov	r0, r7
   46f68:	bl	fdf4 <pthread_mutex_unlock@plt>
   46f6c:	ldr	r6, [r6, #4]
   46f70:	ldr	r3, [r8, #8]
   46f74:	cmp	r3, r6
   46f78:	beq	46fb8 <processSpeechInput@@Base+0x2a4>
   46f7c:	add	r7, r6, #100	; 0x64
   46f80:	mov	r0, r7
   46f84:	bl	f3f8 <pthread_mutex_lock@plt>
   46f88:	ldr	r3, [r6, #28]
   46f8c:	cmp	r3, r9
   46f90:	bne	46f64 <processSpeechInput@@Base+0x250>
   46f94:	ldr	r0, [r6, #96]	; 0x60
   46f98:	mov	r2, r4
   46f9c:	mov	r3, r5
   46fa0:	bl	4d19c <inKeyrangeList@@Base>
   46fa4:	cmp	r0, #0
   46fa8:	beq	46f64 <processSpeechInput@@Base+0x250>
   46fac:	mov	r0, r7
   46fb0:	bl	fdf4 <pthread_mutex_unlock@plt>
   46fb4:	b	46fbc <processSpeechInput@@Base+0x2a8>
   46fb8:	mov	r6, #0
   46fbc:	ldr	r0, [r8, #24]
   46fc0:	cmp	r0, #0
   46fc4:	beq	46ffc <processSpeechInput@@Base+0x2e8>
   46fc8:	ldr	r1, [r8]
   46fcc:	cmn	r1, #1
   46fd0:	beq	47008 <processSpeechInput@@Base+0x2f4>
   46fd4:	ldr	r2, [r0, #4]
   46fd8:	cmp	r1, r2
   46fdc:	bne	46ff0 <processSpeechInput@@Base+0x2dc>
   46fe0:	b	47008 <processSpeechInput@@Base+0x2f4>
   46fe4:	ldr	r2, [r0, #4]
   46fe8:	cmp	r2, r1
   46fec:	beq	47008 <processSpeechInput@@Base+0x2f4>
   46ff0:	ldr	r0, [r0, #20]
   46ff4:	cmp	r0, #0
   46ff8:	bne	46fe4 <processSpeechInput@@Base+0x2d0>
   46ffc:	mov	r0, r6
   47000:	add	sp, sp, #12
   47004:	pop	{r4, r5, r6, r7, r8, r9, pc}
   47008:	str	r9, [sp]
   4700c:	mov	r2, r4
   47010:	mov	r3, r5
   47014:	bl	46f38 <processSpeechInput@@Base+0x224>
   47018:	cmp	r0, #0
   4701c:	moveq	r0, r6
   47020:	add	sp, sp, #12
   47024:	pop	{r4, r5, r6, r7, r8, r9, pc}
   47028:	push	{r3, r4, r5, r6, r7, lr}
   4702c:	mov	r5, r0
   47030:	ldr	r4, [pc, #208]	; 47108 <processSpeechInput@@Base+0x3f4>
   47034:	mov	r7, r1
   47038:	add	r4, pc, r4
   4703c:	ldr	r6, [r4]
   47040:	ldr	r0, [r4, #4]
   47044:	lsl	r2, r6, #2
   47048:	bl	fb24 <memcpy@plt>
   4704c:	mov	r2, r6
   47050:	ldr	r1, [r5, #28]
   47054:	ldr	r0, [r4, #8]
   47058:	bl	fb24 <memcpy@plt>
   4705c:	ldr	r3, [r5, #32]
   47060:	str	r3, [r4, #12]
   47064:	bl	39288 <currentVirtualTerminal@@Base>
   47068:	str	r0, [r4, #16]
   4706c:	add	r0, r4, #44	; 0x2c
   47070:	bl	f3f8 <pthread_mutex_lock@plt>
   47074:	add	r0, r4, #68	; 0x44
   47078:	bl	f3f8 <pthread_mutex_lock@plt>
   4707c:	ldr	r3, [r4, #92]	; 0x5c
   47080:	cmp	r3, #0
   47084:	bne	47094 <processSpeechInput@@Base+0x380>
   47088:	ldr	r3, [r4, #96]	; 0x60
   4708c:	cmp	r3, #0
   47090:	beq	470b8 <processSpeechInput@@Base+0x3a4>
   47094:	mov	r5, #1
   47098:	ldr	r4, [pc, #108]	; 4710c <processSpeechInput@@Base+0x3f8>
   4709c:	add	r4, pc, r4
   470a0:	add	r0, r4, #68	; 0x44
   470a4:	bl	fdf4 <pthread_mutex_unlock@plt>
   470a8:	add	r0, r4, #44	; 0x2c
   470ac:	bl	fdf4 <pthread_mutex_unlock@plt>
   470b0:	mov	r0, r5
   470b4:	pop	{r3, r4, r5, r6, r7, pc}
   470b8:	ldr	r3, [r4, #100]	; 0x64
   470bc:	cmp	r3, #0
   470c0:	bne	47094 <processSpeechInput@@Base+0x380>
   470c4:	add	r0, r4, #16
   470c8:	bl	46dac <processSpeechInput@@Base+0x98>
   470cc:	cmp	r0, #0
   470d0:	bne	47094 <processSpeechInput@@Base+0x380>
   470d4:	add	r6, r4, #104	; 0x68
   470d8:	mov	r0, r6
   470dc:	bl	f3f8 <pthread_mutex_lock@plt>
   470e0:	ldr	r3, [r4, #128]	; 0x80
   470e4:	mov	r0, r5
   470e8:	mov	r1, r7
   470ec:	ldr	r3, [r3, #48]	; 0x30
   470f0:	blx	r3
   470f4:	adds	r5, r0, #0
   470f8:	mov	r0, r6
   470fc:	movne	r5, #1
   47100:	bl	fdf4 <pthread_mutex_unlock@plt>
   47104:	b	47098 <processSpeechInput@@Base+0x384>
   47108:	ldrdeq	ip, [r2], -r8
   4710c:	andeq	ip, r2, r4, ror pc
   47110:	push	{r4, r5, r6, lr}
   47114:	mov	r5, r0
   47118:	ldr	r4, [pc, #88]	; 47178 <processSpeechInput@@Base+0x464>
   4711c:	ldr	r3, [r0]
   47120:	add	r4, pc, r4
   47124:	rev	r3, r3
   47128:	str	r3, [r4, #132]	; 0x84
   4712c:	ldr	r3, [r0, #4]
   47130:	ldr	r0, [r4, #4]
   47134:	rev	r3, r3
   47138:	str	r3, [r4, #136]	; 0x88
   4713c:	ldr	r3, [r5, #4]
   47140:	ldr	r6, [r5]
   47144:	mul	r6, r6, r3
   47148:	lsl	r1, r6, #2
   4714c:	str	r6, [r4]
   47150:	bl	f878 <realloc@plt>
   47154:	mov	r1, r6
   47158:	str	r0, [r4, #4]
   4715c:	ldr	r0, [r4, #8]
   47160:	bl	f878 <realloc@plt>
   47164:	mov	r3, #0
   47168:	str	r5, [r4, #140]	; 0x8c
   4716c:	str	r3, [r4, #12]
   47170:	str	r0, [r4, #8]
   47174:	pop	{r4, r5, r6, pc}
   47178:	strdeq	ip, [r2], -r0
   4717c:	push	{r3, r4, r5, lr}
   47180:	mov	r5, r0
   47184:	ldr	r3, [pc, #112]	; 471fc <processSpeechInput@@Base+0x4e8>
   47188:	ldr	r4, [pc, #112]	; 47200 <processSpeechInput@@Base+0x4ec>
   4718c:	ldr	r2, [pc, #112]	; 47204 <processSpeechInput@@Base+0x4f0>
   47190:	add	r3, pc, r3
   47194:	add	r4, pc, r4
   47198:	ldr	r3, [r3, r2]
   4719c:	ldr	r2, [r4, #128]	; 0x80
   471a0:	cmp	r2, r3
   471a4:	beq	471f4 <processSpeechInput@@Base+0x4e0>
   471a8:	add	r0, r4, #144	; 0x90
   471ac:	bl	f3f8 <pthread_mutex_lock@plt>
   471b0:	bl	21f04 <constructBrailleDriver@@Base>
   471b4:	cmp	r0, #0
   471b8:	str	r0, [r4, #168]	; 0xa8
   471bc:	bne	471d8 <processSpeechInput@@Base+0x4c4>
   471c0:	ldr	r4, [pc, #64]	; 47208 <processSpeechInput@@Base+0x4f4>
   471c4:	add	r4, pc, r4
   471c8:	add	r0, r4, #144	; 0x90
   471cc:	bl	fdf4 <pthread_mutex_unlock@plt>
   471d0:	ldr	r0, [r4, #168]	; 0xa8
   471d4:	pop	{r3, r4, r5, pc}
   471d8:	ldr	r1, [pc, #44]	; 4720c <processSpeechInput@@Base+0x4f8>
   471dc:	mov	r0, #7
   471e0:	add	r1, pc, r1
   471e4:	bl	1c634 <logMessage@@Base>
   471e8:	mov	r0, r5
   471ec:	bl	47110 <processSpeechInput@@Base+0x3fc>
   471f0:	b	471c0 <processSpeechInput@@Base+0x4ac>
   471f4:	mov	r0, #0
   471f8:	pop	{r3, r4, r5, pc}
   471fc:	andeq	fp, r2, r8, ror #17
   47200:	andeq	ip, r2, ip, ror lr
   47204:	andeq	r0, r0, r0, lsr #10
   47208:	andeq	ip, r2, ip, asr #28
   4720c:	andeq	r3, r1, ip, lsl #17
   47210:	ldr	r3, [pc, #152]	; 472b0 <processSpeechInput@@Base+0x59c>
   47214:	mov	r1, #0
   47218:	ldr	r2, [pc, #148]	; 472b4 <processSpeechInput@@Base+0x5a0>
   4721c:	add	r3, pc, r3
   47220:	push	{r4, r5, r6, r7, lr}
   47224:	sub	sp, sp, #28
   47228:	ldr	r6, [r3, r2]
   4722c:	add	r4, sp, #4
   47230:	ldr	r3, [r6]
   47234:	str	r3, [sp, #20]
   47238:	bl	f8c0 <open@plt>
   4723c:	mov	r1, r4
   47240:	mov	r2, #15
   47244:	mov	r7, r0
   47248:	bl	f788 <read@plt>
   4724c:	mov	r5, r0
   47250:	mov	r0, r7
   47254:	bl	f764 <close@plt>
   47258:	cmn	r5, #1
   4725c:	beq	47290 <processSpeechInput@@Base+0x57c>
   47260:	add	r2, sp, #24
   47264:	mov	r0, r4
   47268:	add	r3, r2, r5
   4726c:	mov	r1, sp
   47270:	mov	r2, #10
   47274:	mov	ip, #0
   47278:	strb	ip, [r3, #-20]	; 0xffffffec
   4727c:	bl	f4e8 <strtol@plt>
   47280:	ldr	r3, [sp]
   47284:	add	r4, r4, r5
   47288:	cmp	r3, r4
   4728c:	beq	47294 <processSpeechInput@@Base+0x580>
   47290:	mov	r0, #0
   47294:	ldr	r2, [sp, #20]
   47298:	ldr	r3, [r6]
   4729c:	cmp	r2, r3
   472a0:	bne	472ac <processSpeechInput@@Base+0x598>
   472a4:	add	sp, sp, #28
   472a8:	pop	{r4, r5, r6, r7, pc}
   472ac:	bl	f950 <__stack_chk_fail@plt>
   472b0:	andeq	fp, r2, ip, asr r8
   472b4:			; <UNDEFINED> instruction: 0x000003b4
   472b8:	push	{r4, r5, r6, lr}
   472bc:	mov	r6, r0
   472c0:	mov	r5, r1
   472c4:	mov	r4, r2
   472c8:	b	472ec <processSpeechInput@@Base+0x5d8>
   472cc:	bl	fca4 <__errno_location@plt>
   472d0:	ldr	r3, [r0]
   472d4:	mov	r0, #1000	; 0x3e8
   472d8:	sub	ip, r3, #98	; 0x62
   472dc:	cmp	r3, #30
   472e0:	cmpne	ip, #1
   472e4:	bhi	4730c <processSpeechInput@@Base+0x5f8>
   472e8:	bl	1ec24 <approximateDelay@@Base>
   472ec:	mov	r0, r6
   472f0:	mov	r1, r5
   472f4:	mov	r2, r4
   472f8:	bl	f8cc <bind@plt>
   472fc:	cmp	r0, #0
   47300:	blt	472cc <processSpeechInput@@Base+0x5b8>
   47304:	mov	r0, #0
   47308:	pop	{r4, r5, r6, pc}
   4730c:	mvn	r0, #0
   47310:	pop	{r4, r5, r6, pc}
   47314:	push	{r3, r4, r5, lr}
   47318:	ldr	r3, [pc, #80]	; 47370 <processSpeechInput@@Base+0x65c>
   4731c:	ldr	r4, [pc, #80]	; 47374 <processSpeechInput@@Base+0x660>
   47320:	ldr	r2, [pc, #80]	; 47378 <processSpeechInput@@Base+0x664>
   47324:	add	r3, pc, r3
   47328:	add	r4, pc, r4
   4732c:	ldr	r3, [r3, r2]
   47330:	ldr	r2, [r4, #128]	; 0x80
   47334:	cmp	r2, r3
   47338:	popeq	{r3, r4, r5, pc}
   4733c:	ldr	r1, [pc, #56]	; 4737c <processSpeechInput@@Base+0x668>
   47340:	add	r5, r4, #144	; 0x90
   47344:	mov	r0, #7
   47348:	add	r1, pc, r1
   4734c:	bl	1c634 <logMessage@@Base>
   47350:	mov	r0, r5
   47354:	bl	f3f8 <pthread_mutex_lock@plt>
   47358:	mov	r3, #0
   4735c:	str	r3, [r4, #168]	; 0xa8
   47360:	bl	22624 <destructBrailleDriver@@Base>
   47364:	mov	r0, r5
   47368:	pop	{r3, r4, r5, lr}
   4736c:	b	fdf4 <pthread_mutex_unlock@plt>
   47370:	andeq	fp, r2, r4, asr r7
   47374:	andeq	ip, r2, r8, ror #25
   47378:	andeq	r0, r0, r0, lsr #10
   4737c:	andeq	r3, r1, r4, lsr r7
   47380:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   47384:	mov	r9, r2
   47388:	ldr	r2, [r2]
   4738c:	mov	r6, r0
   47390:	mov	r5, r1
   47394:	mov	r8, r3
   47398:	ldr	r4, [r2, #4]
   4739c:	cmp	r2, r4
   473a0:	movne	r7, #1
   473a4:	beq	473f4 <processSpeechInput@@Base+0x6e0>
   473a8:	ldr	r0, [r4, #8]
   473ac:	ldr	r1, [r5]
   473b0:	cmp	r0, r1
   473b4:	strgt	r0, [r5]
   473b8:	ldrgt	r0, [r4, #8]
   473bc:	bl	fbe4 <__fdelt_chk@plt>
   473c0:	ldr	r2, [r4, #8]
   473c4:	asr	r3, r2, #31
   473c8:	lsr	r3, r3, #27
   473cc:	add	r2, r2, r3
   473d0:	and	r2, r2, #31
   473d4:	rsb	r3, r3, r2
   473d8:	ldr	r1, [r6, r0, lsl #2]
   473dc:	orr	r3, r1, r7, lsl r3
   473e0:	str	r3, [r6, r0, lsl #2]
   473e4:	ldr	r4, [r4, #4]
   473e8:	ldr	r3, [r9]
   473ec:	cmp	r4, r3
   473f0:	bne	473a8 <processSpeechInput@@Base+0x694>
   473f4:	ldr	r4, [r8]
   473f8:	cmp	r4, #0
   473fc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   47400:	add	r2, r4, #8
   47404:	add	r3, r4, #24
   47408:	mov	r0, r6
   4740c:	mov	r1, r5
   47410:	bl	47380 <processSpeechInput@@Base+0x66c>
   47414:	ldr	r4, [r4, #20]
   47418:	cmp	r4, #0
   4741c:	bne	47400 <processSpeechInput@@Base+0x6ec>
   47420:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   47424:	ldr	r3, [pc, #2128]	; 47c7c <processSpeechInput@@Base+0xf68>
   47428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4742c:	add	fp, sp, #32
   47430:	ldr	r2, [pc, #2120]	; 47c80 <processSpeechInput@@Base+0xf6c>
   47434:	sub	sp, sp, #412	; 0x19c
   47438:	add	r3, pc, r3
   4743c:	str	r0, [fp, #-404]	; 0xfffffe6c
   47440:	sub	r5, fp, #184	; 0xb8
   47444:	ldr	r2, [r3, r2]
   47448:	ldr	r4, [pc, #2100]	; 47c84 <processSpeechInput@@Base+0xf70>
   4744c:	mov	r0, r5
   47450:	ldr	r1, [fp, #-404]	; 0xfffffe6c
   47454:	ldr	r3, [r2]
   47458:	add	r4, pc, r4
   4745c:	add	r4, r4, #172	; 0xac
   47460:	str	r2, [fp, #-400]	; 0xfffffe70
   47464:	add	sl, r4, r1, lsl #4
   47468:	str	r3, [fp, #-40]	; 0xffffffd8
   4746c:	bl	fd28 <sigemptyset@plt>
   47470:	mov	r1, #15
   47474:	mov	r0, r5
   47478:	bl	f74c <sigaddset@plt>
   4747c:	mov	r1, #2
   47480:	mov	r0, r5
   47484:	bl	f74c <sigaddset@plt>
   47488:	mov	r1, #13
   4748c:	mov	r0, r5
   47490:	bl	f74c <sigaddset@plt>
   47494:	mov	r1, #17
   47498:	mov	r0, r5
   4749c:	bl	f74c <sigaddset@plt>
   474a0:	mov	r1, #10
   474a4:	mov	r0, r5
   474a8:	bl	f74c <sigaddset@plt>
   474ac:	mov	r0, #0
   474b0:	mov	r1, r5
   474b4:	mov	r2, r0
   474b8:	bl	f6ec <pthread_sigmask@plt>
   474bc:	subs	r8, r0, #0
   474c0:	bne	47680 <processSpeechInput@@Base+0x96c>
   474c4:	ldr	r2, [fp, #-404]	; 0xfffffe6c
   474c8:	ldr	r7, [r4, r2, lsl #4]
   474cc:	cmp	r7, #1
   474d0:	subne	r9, fp, #388	; 0x184
   474d4:	beq	476b8 <processSpeechInput@@Base+0x9a4>
   474d8:	sub	r3, fp, #392	; 0x188
   474dc:	mov	r2, r9
   474e0:	ldr	r0, [sl, #8]
   474e4:	mov	ip, #0
   474e8:	ldr	r1, [sl, #12]
   474ec:	mov	lr, #1
   474f0:	str	ip, [fp, #-384]	; 0xfffffe80
   474f4:	str	lr, [fp, #-396]	; 0xfffffe74
   474f8:	str	lr, [fp, #-388]	; 0xfffffe7c
   474fc:	str	lr, [fp, #-380]	; 0xfffffe84
   47500:	str	ip, [fp, #-376]	; 0xfffffe88
   47504:	str	ip, [fp, #-372]	; 0xfffffe8c
   47508:	str	ip, [fp, #-368]	; 0xfffffe90
   4750c:	str	ip, [fp, #-364]	; 0xfffffe94
   47510:	str	ip, [fp, #-360]	; 0xfffffe98
   47514:	bl	f50c <getaddrinfo@plt>
   47518:	subs	r3, r0, #0
   4751c:	bne	4795c <processSpeechInput@@Base+0xc48>
   47520:	ldr	r9, [fp, #-392]	; 0xfffffe78
   47524:	cmp	r9, #0
   47528:	beq	47954 <processSpeechInput@@Base+0xc40>
   4752c:	ldr	ip, [pc, #1876]	; 47c88 <processSpeechInput@@Base+0xf74>
   47530:	sub	r6, fp, #396	; 0x18c
   47534:	ldr	r8, [pc, #1872]	; 47c8c <processSpeechInput@@Base+0xf78>
   47538:	mov	r5, #4
   4753c:	ldr	r3, [pc, #1868]	; 47c90 <processSpeechInput@@Base+0xf7c>
   47540:	add	ip, pc, ip
   47544:	ldr	r1, [pc, #1864]	; 47c94 <processSpeechInput@@Base+0xf80>
   47548:	add	r8, pc, r8
   4754c:	add	r3, pc, r3
   47550:	str	sl, [fp, #-416]	; 0xfffffe60
   47554:	add	r1, pc, r1
   47558:	mov	sl, r9
   4755c:	str	r3, [fp, #-412]	; 0xfffffe64
   47560:	mov	r9, ip
   47564:	str	r1, [fp, #-408]	; 0xfffffe68
   47568:	b	475d0 <processSpeechInput@@Base+0x8bc>
   4756c:	str	r5, [sp]
   47570:	mov	r1, #1
   47574:	mov	r2, #2
   47578:	mov	r3, r6
   4757c:	bl	fa28 <setsockopt@plt>
   47580:	subs	r7, r0, #0
   47584:	bne	47670 <processSpeechInput@@Base+0x95c>
   47588:	mov	r0, r4
   4758c:	ldr	r1, [sl, #20]
   47590:	ldr	r2, [sl, #16]
   47594:	bl	472b8 <processSpeechInput@@Base+0x5a4>
   47598:	cmp	r0, #0
   4759c:	blt	47678 <processSpeechInput@@Base+0x964>
   475a0:	mov	r0, r4
   475a4:	mov	r1, #1
   475a8:	bl	f728 <listen@plt>
   475ac:	cmp	r0, #0
   475b0:	bge	478b8 <processSpeechInput@@Base+0xba4>
   475b4:	ldr	r0, [fp, #-408]	; 0xfffffe68
   475b8:	bl	1c6fc <logSystemError@@Base>
   475bc:	mov	r0, r4
   475c0:	bl	f764 <close@plt>
   475c4:	ldr	sl, [sl, #28]
   475c8:	cmp	sl, #0
   475cc:	beq	47610 <processSpeechInput@@Base+0x8fc>
   475d0:	ldmib	sl, {r0, r1, r2}
   475d4:	bl	f980 <socket@plt>
   475d8:	subs	r4, r0, #0
   475dc:	bge	4756c <processSpeechInput@@Base+0x858>
   475e0:	bl	fca4 <__errno_location@plt>
   475e4:	ldr	r0, [r0]
   475e8:	cmp	r0, #97	; 0x61
   475ec:	beq	475c4 <processSpeechInput@@Base+0x8b0>
   475f0:	bl	f5c0 <strerror@plt>
   475f4:	mov	r1, r9
   475f8:	mov	r2, r0
   475fc:	mov	r0, #4
   47600:	bl	1c634 <logMessage@@Base>
   47604:	ldr	sl, [sl, #28]
   47608:	cmp	sl, #0
   4760c:	bne	475d0 <processSpeechInput@@Base+0x8bc>
   47610:	ldr	sl, [fp, #-416]	; 0xfffffe60
   47614:	ldr	r0, [fp, #-392]	; 0xfffffe78
   47618:	bl	f4dc <freeaddrinfo@plt>
   4761c:	ldr	r1, [pc, #1652]	; 47c98 <processSpeechInput@@Base+0xf84>
   47620:	ldr	r2, [sl, #8]
   47624:	mov	r0, #4
   47628:	add	r1, pc, r1
   4762c:	ldr	r3, [sl, #12]
   47630:	bl	1c634 <logMessage@@Base>
   47634:	ldr	r0, [sl, #8]
   47638:	bl	f4f4 <free@plt>
   4763c:	mov	r4, #0
   47640:	ldr	r0, [sl, #12]
   47644:	str	r4, [sl, #8]
   47648:	bl	f4f4 <free@plt>
   4764c:	str	r4, [sl, #12]
   47650:	mvn	r3, #0
   47654:	str	r3, [sl, #4]
   47658:	ldr	r1, [pc, #1596]	; 47c9c <processSpeechInput@@Base+0xf88>
   4765c:	mov	r0, #4
   47660:	ldr	r2, [fp, #-404]	; 0xfffffe6c
   47664:	add	r1, pc, r1
   47668:	bl	1c634 <logMessage@@Base>
   4766c:	b	47698 <processSpeechInput@@Base+0x984>
   47670:	mov	r0, r8
   47674:	b	475b8 <processSpeechInput@@Base+0x8a4>
   47678:	ldr	r0, [fp, #-412]	; 0xfffffe64
   4767c:	b	475b8 <processSpeechInput@@Base+0x8a4>
   47680:	bl	f5c0 <strerror@plt>
   47684:	ldr	r1, [pc, #1556]	; 47ca0 <processSpeechInput@@Base+0xf8c>
   47688:	add	r1, pc, r1
   4768c:	mov	r2, r0
   47690:	mov	r0, #4
   47694:	bl	1c634 <logMessage@@Base>
   47698:	ldr	r1, [fp, #-400]	; 0xfffffe70
   4769c:	mov	r0, #0
   476a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   476a4:	ldr	r3, [r1]
   476a8:	cmp	r2, r3
   476ac:	bne	47bec <processSpeechInput@@Base+0xed8>
   476b0:	sub	sp, fp, #32
   476b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   476b8:	ldr	r0, [sl, #12]
   476bc:	str	sp, [fp, #-416]	; 0xfffffe60
   476c0:	bl	fb54 <strlen@plt>
   476c4:	mov	r1, r7
   476c8:	add	r2, r0, #26
   476cc:	add	r3, r0, #25
   476d0:	bic	r2, r2, #7
   476d4:	bic	r3, r3, #7
   476d8:	sub	sp, sp, r2
   476dc:	mov	r6, r0
   476e0:	add	r5, sp, #8
   476e4:	mov	r0, r7
   476e8:	sub	sp, sp, r3
   476ec:	mov	r2, r8
   476f0:	bl	f980 <socket@plt>
   476f4:	add	r3, sp, #8
   476f8:	add	r1, r6, #18
   476fc:	str	r3, [fp, #-412]	; 0xfffffe64
   47700:	str	r1, [fp, #-420]	; 0xfffffe5c
   47704:	cmn	r0, #1
   47708:	str	r0, [fp, #-408]	; 0xfffffe68
   4770c:	beq	47bdc <processSpeechInput@@Base+0xec8>
   47710:	add	r2, r6, #16
   47714:	movw	r3, #65276	; 0xfefc
   47718:	cmp	r2, #108	; 0x6c
   4771c:	movt	r3, #65535	; 0xffff
   47720:	sub	r2, fp, #36	; 0x24
   47724:	strh	r7, [r2, r3]
   47728:	bhi	479ac <processSpeechInput@@Base+0xc98>
   4772c:	mov	r0, r8
   47730:	ldr	r7, [pc, #1388]	; 47ca4 <processSpeechInput@@Base+0xf90>
   47734:	bl	fb30 <umask@plt>
   47738:	add	r7, pc, r7
   4773c:	str	r0, [fp, #-424]	; 0xfffffe58
   47740:	b	47768 <processSpeechInput@@Base+0xa54>
   47744:	bl	fca4 <__errno_location@plt>
   47748:	ldr	r3, [r0]
   4774c:	cmp	r3, #17
   47750:	beq	4777c <processSpeechInput@@Base+0xa68>
   47754:	cmp	r3, #2
   47758:	cmpne	r3, #30
   4775c:	bne	47944 <processSpeechInput@@Base+0xc30>
   47760:	mov	r0, #1000	; 0x3e8
   47764:	bl	1ec24 <approximateDelay@@Base>
   47768:	mov	r0, r7
   4776c:	movw	r1, #1023	; 0x3ff
   47770:	bl	f9e0 <mkdir@plt>
   47774:	cmp	r0, #0
   47778:	blt	47744 <processSpeechInput@@Base+0xa30>
   4777c:	ldr	r8, [pc, #1316]	; 47ca8 <processSpeechInput@@Base+0xf94>
   47780:	sub	r3, fp, #296	; 0x128
   47784:	add	ip, r3, #2
   47788:	str	r3, [fp, #-428]	; 0xfffffe54
   4778c:	add	r8, pc, r8
   47790:	ldr	r9, [sl, #12]
   47794:	add	r7, r6, #17
   47798:	mov	lr, r8
   4779c:	ldm	lr!, {r0, r1, r2, r3}
   477a0:	str	r0, [fp, #-294]	; 0xfffffeda
   477a4:	sub	r0, fp, #276	; 0x114
   477a8:	str	r1, [ip, #4]
   477ac:	sub	r0, r0, #2
   477b0:	str	r2, [ip, #8]
   477b4:	mov	r1, r9
   477b8:	str	r3, [ip, #12]
   477bc:	add	r2, r6, #1
   477c0:	mov	r3, #92	; 0x5c
   477c4:	bl	f464 <__memcpy_chk@plt>
   477c8:	ldm	r8!, {r0, r1, r2, r3}
   477cc:	mov	ip, #46	; 0x2e
   477d0:	strb	ip, [r5, #16]
   477d4:	str	r3, [r5, #12]
   477d8:	str	r0, [r5]
   477dc:	add	r0, r5, #17
   477e0:	str	r1, [r5, #4]
   477e4:	mov	r1, r9
   477e8:	str	r2, [r5, #8]
   477ec:	mov	r2, r6
   477f0:	bl	fb24 <memcpy@plt>
   477f4:	mov	r2, r7
   477f8:	mov	r1, r5
   477fc:	ldr	r0, [fp, #-412]	; 0xfffffe64
   47800:	bl	fb24 <memcpy@plt>
   47804:	mov	r2, #95	; 0x5f
   47808:	ldr	r1, [fp, #-420]	; 0xfffffe5c
   4780c:	mov	r3, #0
   47810:	strb	r2, [r5, r7]
   47814:	ldr	r2, [fp, #-412]	; 0xfffffe64
   47818:	strb	r3, [r5, r1]
   4781c:	strb	r3, [r2, r7]
   47820:	mov	r0, r5
   47824:	mov	r1, #193	; 0xc1
   47828:	mov	r2, #420	; 0x1a4
   4782c:	bl	f8c0 <open@plt>
   47830:	cmn	r0, #1
   47834:	bne	479c0 <processSpeechInput@@Base+0xcac>
   47838:	bl	fca4 <__errno_location@plt>
   4783c:	ldr	r3, [r0]
   47840:	mov	r6, r0
   47844:	cmp	r3, #30
   47848:	beq	47990 <processSpeechInput@@Base+0xc7c>
   4784c:	cmp	r3, #17
   47850:	bne	47a3c <processSpeechInput@@Base+0xd28>
   47854:	mov	r0, r5
   47858:	bl	47210 <processSpeechInput@@Base+0x4fc>
   4785c:	subs	r7, r0, #0
   47860:	beq	47870 <processSpeechInput@@Base+0xb5c>
   47864:	b	478fc <processSpeechInput@@Base+0xbe8>
   47868:	mov	r0, #1000	; 0x3e8
   4786c:	bl	1ec24 <approximateDelay@@Base>
   47870:	mov	r0, r5
   47874:	bl	f800 <unlink@plt>
   47878:	cmp	r0, #0
   4787c:	beq	47820 <processSpeechInput@@Base+0xb0c>
   47880:	ldr	r3, [r6]
   47884:	cmp	r3, #30
   47888:	beq	47868 <processSpeechInput@@Base+0xb54>
   4788c:	ldr	r0, [pc, #1048]	; 47cac <processSpeechInput@@Base+0xf98>
   47890:	add	r0, pc, r0
   47894:	bl	1c6fc <logSystemError@@Base>
   47898:	ldr	r0, [fp, #-424]	; 0xfffffe58
   4789c:	bl	fb30 <umask@plt>
   478a0:	ldr	r0, [fp, #-408]	; 0xfffffe68
   478a4:	bl	f764 <close@plt>
   478a8:	mvn	r3, #0
   478ac:	str	r3, [sl, #4]
   478b0:	ldr	sp, [fp, #-416]	; 0xfffffe60
   478b4:	b	47658 <processSpeechInput@@Base+0x944>
   478b8:	ldr	sl, [fp, #-416]	; 0xfffffe60
   478bc:	ldr	r0, [fp, #-392]	; 0xfffffe78
   478c0:	bl	f4dc <freeaddrinfo@plt>
   478c4:	ldr	r0, [sl, #8]
   478c8:	bl	f4f4 <free@plt>
   478cc:	str	r7, [sl, #8]
   478d0:	ldr	r0, [sl, #12]
   478d4:	bl	f4f4 <free@plt>
   478d8:	mov	r3, r4
   478dc:	str	r7, [sl, #12]
   478e0:	str	r4, [sl, #4]
   478e4:	ldr	r1, [pc, #964]	; 47cb0 <processSpeechInput@@Base+0xf9c>
   478e8:	mov	r0, #7
   478ec:	ldr	r2, [fp, #-404]	; 0xfffffe6c
   478f0:	add	r1, pc, r1
   478f4:	bl	1c634 <logMessage@@Base>
   478f8:	b	47698 <processSpeechInput@@Base+0x984>
   478fc:	bl	f458 <getpid@plt>
   47900:	cmp	r7, r0
   47904:	beq	47870 <processSpeechInput@@Base+0xb5c>
   47908:	mov	r0, r7
   4790c:	mov	r1, #0
   47910:	bl	f824 <kill@plt>
   47914:	cmn	r0, #1
   47918:	bne	47928 <processSpeechInput@@Base+0xc14>
   4791c:	ldr	r3, [r6]
   47920:	cmp	r3, #3
   47924:	beq	47870 <processSpeechInput@@Base+0xb5c>
   47928:	ldr	r1, [pc, #900]	; 47cb4 <processSpeechInput@@Base+0xfa0>
   4792c:	mov	r3, r5
   47930:	mov	r0, #3
   47934:	ldr	r2, [sl, #12]
   47938:	add	r1, pc, r1
   4793c:	bl	1c634 <logMessage@@Base>
   47940:	b	47898 <processSpeechInput@@Base+0xb84>
   47944:	ldr	r0, [pc, #876]	; 47cb8 <processSpeechInput@@Base+0xfa4>
   47948:	add	r0, pc, r0
   4794c:	bl	1c6fc <logSystemError@@Base>
   47950:	b	47898 <processSpeechInput@@Base+0xb84>
   47954:	mov	r0, r9
   47958:	b	47618 <processSpeechInput@@Base+0x904>
   4795c:	cmn	r3, #11
   47960:	ldr	r5, [sl, #8]
   47964:	ldr	r4, [sl, #12]
   47968:	beq	4799c <processSpeechInput@@Base+0xc88>
   4796c:	bl	fd1c <gai_strerror@plt>
   47970:	ldr	r1, [pc, #836]	; 47cbc <processSpeechInput@@Base+0xfa8>
   47974:	mov	r2, r5
   47978:	str	r0, [sp]
   4797c:	mov	r3, r4
   47980:	mov	r0, #4
   47984:	add	r1, pc, r1
   47988:	bl	1c634 <logMessage@@Base>
   4798c:	b	47650 <processSpeechInput@@Base+0x93c>
   47990:	mov	r0, #1000	; 0x3e8
   47994:	bl	1ec24 <approximateDelay@@Base>
   47998:	b	47820 <processSpeechInput@@Base+0xb0c>
   4799c:	bl	fca4 <__errno_location@plt>
   479a0:	ldr	r0, [r0]
   479a4:	bl	f5c0 <strerror@plt>
   479a8:	b	47970 <processSpeechInput@@Base+0xc5c>
   479ac:	ldr	r1, [pc, #780]	; 47cc0 <processSpeechInput@@Base+0xfac>
   479b0:	mov	r0, #3
   479b4:	add	r1, pc, r1
   479b8:	bl	1c634 <logMessage@@Base>
   479bc:	b	478a0 <processSpeechInput@@Base+0xb8c>
   479c0:	mov	r6, r0
   479c4:	bl	f458 <getpid@plt>
   479c8:	sub	r8, fp, #56	; 0x38
   479cc:	ldr	ip, [pc, #752]	; 47cc4 <processSpeechInput@@Base+0xfb0>
   479d0:	mov	r1, #16
   479d4:	mov	r2, #1
   479d8:	add	ip, pc, ip
   479dc:	mov	r3, r1
   479e0:	str	ip, [sp]
   479e4:	mov	r7, #0
   479e8:	str	r0, [sp, #4]
   479ec:	mov	r0, r8
   479f0:	bl	fb60 <__snprintf_chk@plt>
   479f4:	mov	r9, r0
   479f8:	mov	r0, r6
   479fc:	add	r1, r8, r7
   47a00:	mov	r2, r9
   47a04:	bl	fbcc <write@plt>
   47a08:	cmp	r0, r9
   47a0c:	bge	47a4c <processSpeechInput@@Base+0xd38>
   47a10:	cmn	r0, #1
   47a14:	addne	r7, r7, r0
   47a18:	rsbne	r9, r0, r9
   47a1c:	bne	479f8 <processSpeechInput@@Base+0xce4>
   47a20:	bl	fca4 <__errno_location@plt>
   47a24:	ldr	r3, [r0]
   47a28:	cmp	r3, #28
   47a2c:	bne	47bf0 <processSpeechInput@@Base+0xedc>
   47a30:	mov	r0, #1000	; 0x3e8
   47a34:	bl	1ec24 <approximateDelay@@Base>
   47a38:	b	479f8 <processSpeechInput@@Base+0xce4>
   47a3c:	ldr	r0, [pc, #644]	; 47cc8 <processSpeechInput@@Base+0xfb4>
   47a40:	add	r0, pc, r0
   47a44:	bl	1c6fc <logSystemError@@Base>
   47a48:	b	47898 <processSpeechInput@@Base+0xb84>
   47a4c:	ldr	r8, [pc, #632]	; 47ccc <processSpeechInput@@Base+0xfb8>
   47a50:	sub	r9, fp, #388	; 0x184
   47a54:	str	sl, [fp, #-420]	; 0xfffffe5c
   47a58:	add	r8, pc, r8
   47a5c:	ldr	r7, [fp, #-412]	; 0xfffffe64
   47a60:	b	47ae0 <processSpeechInput@@Base+0xdcc>
   47a64:	mov	r0, #3
   47a68:	mov	r1, r6
   47a6c:	mov	r2, r9
   47a70:	bl	fb00 <__fxstat@plt>
   47a74:	subs	sl, r0, #0
   47a78:	bne	47bac <processSpeechInput@@Base+0xe98>
   47a7c:	ldr	r3, [fp, #-368]	; 0xfffffe90
   47a80:	cmp	r3, #2
   47a84:	beq	47b14 <processSpeechInput@@Base+0xe00>
   47a88:	mov	r0, r7
   47a8c:	bl	47210 <processSpeechInput@@Base+0x4fc>
   47a90:	subs	r3, r0, #0
   47a94:	beq	47ad0 <processSpeechInput@@Base+0xdbc>
   47a98:	str	r3, [fp, #-432]	; 0xfffffe50
   47a9c:	bl	f458 <getpid@plt>
   47aa0:	ldr	r3, [fp, #-432]	; 0xfffffe50
   47aa4:	cmp	r3, r0
   47aa8:	beq	47ad0 <processSpeechInput@@Base+0xdbc>
   47aac:	mov	r0, r3
   47ab0:	mov	r1, sl
   47ab4:	bl	f824 <kill@plt>
   47ab8:	cmn	r0, #1
   47abc:	bne	47c00 <processSpeechInput@@Base+0xeec>
   47ac0:	bl	fca4 <__errno_location@plt>
   47ac4:	ldr	r3, [r0]
   47ac8:	cmp	r3, #3
   47acc:	bne	47c00 <processSpeechInput@@Base+0xeec>
   47ad0:	mov	r0, r7
   47ad4:	bl	f800 <unlink@plt>
   47ad8:	cmp	r0, #0
   47adc:	bne	47bc8 <processSpeechInput@@Base+0xeb4>
   47ae0:	mov	r0, r5
   47ae4:	mov	r1, r7
   47ae8:	bl	f668 <link@plt>
   47aec:	cmp	r0, #0
   47af0:	beq	47a64 <processSpeechInput@@Base+0xd50>
   47af4:	bl	fca4 <__errno_location@plt>
   47af8:	ldr	r0, [r0]
   47afc:	bl	f5c0 <strerror@plt>
   47b00:	mov	r1, r8
   47b04:	mov	r2, r0
   47b08:	mov	r0, #7
   47b0c:	bl	1c634 <logMessage@@Base>
   47b10:	b	47a64 <processSpeechInput@@Base+0xd50>
   47b14:	mov	r0, r6
   47b18:	ldr	sl, [fp, #-420]	; 0xfffffe5c
   47b1c:	bl	f764 <close@plt>
   47b20:	mov	r0, r5
   47b24:	bl	f800 <unlink@plt>
   47b28:	cmp	r0, #0
   47b2c:	bne	47c20 <processSpeechInput@@Base+0xf0c>
   47b30:	sub	r2, fp, #296	; 0x128
   47b34:	add	r0, r2, #2
   47b38:	bl	f800 <unlink@plt>
   47b3c:	cmp	r0, #0
   47b40:	beq	47b54 <processSpeechInput@@Base+0xe40>
   47b44:	bl	fca4 <__errno_location@plt>
   47b48:	ldr	r3, [r0]
   47b4c:	cmp	r3, #2
   47b50:	bne	47c30 <processSpeechInput@@Base+0xf1c>
   47b54:	sub	r1, fp, #296	; 0x128
   47b58:	ldr	r0, [fp, #-408]	; 0xfffffe68
   47b5c:	mov	r2, #110	; 0x6e
   47b60:	bl	472b8 <processSpeechInput@@Base+0x5a4>
   47b64:	cmp	r0, #0
   47b68:	blt	47c58 <processSpeechInput@@Base+0xf44>
   47b6c:	ldr	r0, [fp, #-424]	; 0xfffffe58
   47b70:	bl	fb30 <umask@plt>
   47b74:	ldr	r0, [fp, #-408]	; 0xfffffe68
   47b78:	mov	r1, #1
   47b7c:	bl	f728 <listen@plt>
   47b80:	cmp	r0, #0
   47b84:	blt	47c40 <processSpeechInput@@Base+0xf2c>
   47b88:	ldr	r2, [fp, #-408]	; 0xfffffe68
   47b8c:	ldr	r1, [fp, #-404]	; 0xfffffe6c
   47b90:	ldr	sp, [fp, #-416]	; 0xfffffe60
   47b94:	str	r2, [sl, #4]
   47b98:	ldr	r3, [r4, r1, lsl #4]
   47b9c:	cmp	r3, #1
   47ba0:	bne	474d8 <processSpeechInput@@Base+0x7c4>
   47ba4:	mov	r3, r2
   47ba8:	b	478e4 <processSpeechInput@@Base+0xbd0>
   47bac:	ldr	r0, [pc, #284]	; 47cd0 <processSpeechInput@@Base+0xfbc>
   47bb0:	ldr	sl, [fp, #-420]	; 0xfffffe5c
   47bb4:	add	r0, pc, r0
   47bb8:	bl	1c6fc <logSystemError@@Base>
   47bbc:	mov	r0, r5
   47bc0:	bl	f800 <unlink@plt>
   47bc4:	b	47898 <processSpeechInput@@Base+0xb84>
   47bc8:	ldr	r0, [pc, #260]	; 47cd4 <processSpeechInput@@Base+0xfc0>
   47bcc:	ldr	sl, [fp, #-420]	; 0xfffffe5c
   47bd0:	add	r0, pc, r0
   47bd4:	bl	1c6fc <logSystemError@@Base>
   47bd8:	b	47bbc <processSpeechInput@@Base+0xea8>
   47bdc:	ldr	r0, [pc, #244]	; 47cd8 <processSpeechInput@@Base+0xfc4>
   47be0:	add	r0, pc, r0
   47be4:	bl	1c6fc <logSystemError@@Base>
   47be8:	b	478a8 <processSpeechInput@@Base+0xb94>
   47bec:	bl	f950 <__stack_chk_fail@plt>
   47bf0:	ldr	r0, [pc, #228]	; 47cdc <processSpeechInput@@Base+0xfc8>
   47bf4:	add	r0, pc, r0
   47bf8:	bl	1c6fc <logSystemError@@Base>
   47bfc:	b	47bbc <processSpeechInput@@Base+0xea8>
   47c00:	ldr	sl, [fp, #-420]	; 0xfffffe5c
   47c04:	mov	r0, #3
   47c08:	ldr	r1, [pc, #208]	; 47ce0 <processSpeechInput@@Base+0xfcc>
   47c0c:	ldr	r3, [fp, #-412]	; 0xfffffe64
   47c10:	add	r1, pc, r1
   47c14:	ldr	r2, [sl, #12]
   47c18:	bl	1c634 <logMessage@@Base>
   47c1c:	b	47bbc <processSpeechInput@@Base+0xea8>
   47c20:	ldr	r0, [pc, #188]	; 47ce4 <processSpeechInput@@Base+0xfd0>
   47c24:	add	r0, pc, r0
   47c28:	bl	1c6fc <logSystemError@@Base>
   47c2c:	b	47b30 <processSpeechInput@@Base+0xe1c>
   47c30:	ldr	r0, [pc, #176]	; 47ce8 <processSpeechInput@@Base+0xfd4>
   47c34:	add	r0, pc, r0
   47c38:	bl	1c6fc <logSystemError@@Base>
   47c3c:	b	47bbc <processSpeechInput@@Base+0xea8>
   47c40:	ldr	r0, [pc, #164]	; 47cec <processSpeechInput@@Base+0xfd8>
   47c44:	add	r0, pc, r0
   47c48:	bl	1c6fc <logSystemError@@Base>
   47c4c:	ldr	r0, [fp, #-412]	; 0xfffffe64
   47c50:	bl	f800 <unlink@plt>
   47c54:	b	47bbc <processSpeechInput@@Base+0xea8>
   47c58:	bl	fca4 <__errno_location@plt>
   47c5c:	ldr	r0, [r0]
   47c60:	bl	f5c0 <strerror@plt>
   47c64:	ldr	r1, [pc, #132]	; 47cf0 <processSpeechInput@@Base+0xfdc>
   47c68:	add	r1, pc, r1
   47c6c:	mov	r2, r0
   47c70:	mov	r0, #4
   47c74:	bl	1c634 <logMessage@@Base>
   47c78:	b	47c4c <processSpeechInput@@Base+0xf38>
   47c7c:	andeq	fp, r2, r0, asr #12
   47c80:			; <UNDEFINED> instruction: 0x000003b4
   47c84:			; <UNDEFINED> instruction: 0x0002cbb8
   47c88:	andeq	r3, r1, r4, lsl #14
   47c8c:	andeq	r3, r1, r8, asr #10
   47c90:	andeq	r0, r1, r4, lsr #1
   47c94:	andeq	r3, r1, r8, asr #10
   47c98:	andeq	r3, r1, ip, ror #12
   47c9c:	andeq	r3, r1, ip, ror #11
   47ca0:	andeq	r3, r1, ip, lsl r4
   47ca4:	andeq	r3, r1, ip, lsr #7
   47ca8:	andeq	r3, r1, r8, ror #6
   47cac:	ldrdeq	r3, [r1], -r8
   47cb0:	andeq	r3, r1, r4, lsl #7
   47cb4:	andeq	r3, r1, ip, ror #3
   47cb8:	andeq	r3, r1, r4, lsl #3
   47cbc:	andeq	r3, r1, r8, lsr #5
   47cc0:	andeq	r3, r1, r4, lsl #2
   47cc4:	andeq	r2, r1, r4, lsr #6
   47cc8:	andeq	r3, r1, r8, asr #1
   47ccc:	andeq	r3, r1, r8, asr r1
   47cd0:	andeq	r3, r1, ip, lsl r0
   47cd4:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   47cd8:	andeq	r3, r1, r4, ror #1
   47cdc:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   47ce0:	andeq	r2, r1, r4, lsl pc
   47ce4:	andeq	r2, r1, r8, asr #31
   47ce8:	ldrdeq	r2, [r1], -r8
   47cec:	andeq	r2, r1, r8, asr lr
   47cf0:			; <UNDEFINED> instruction: 0x00012fb8
   47cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   47cf8:	sub	sp, sp, #20
   47cfc:	ldr	r8, [pc, #360]	; 47e6c <processSpeechInput@@Base+0x1158>
   47d00:	add	r8, pc, r8
   47d04:	ldr	r3, [r8, #236]	; 0xec
   47d08:	cmp	r3, #0
   47d0c:	ble	47db0 <processSpeechInput@@Base+0x109c>
   47d10:	ldr	r3, [pc, #344]	; 47e70 <processSpeechInput@@Base+0x115c>
   47d14:	add	r6, r8, #236	; 0xec
   47d18:	ldr	fp, [pc, #340]	; 47e74 <processSpeechInput@@Base+0x1160>
   47d1c:	add	r4, r8, #172	; 0xac
   47d20:	add	r3, pc, r3
   47d24:	ldr	lr, [pc, #332]	; 47e78 <processSpeechInput@@Base+0x1164>
   47d28:	str	r3, [sp, #4]
   47d2c:	add	fp, pc, fp
   47d30:	ldr	r3, [pc, #324]	; 47e7c <processSpeechInput@@Base+0x1168>
   47d34:	mov	r5, #0
   47d38:	mvn	r9, #0
   47d3c:	add	lr, pc, lr
   47d40:	add	r3, pc, r3
   47d44:	str	lr, [sp, #8]
   47d48:	str	r3, [sp, #12]
   47d4c:	ldr	r0, [r6, #4]!
   47d50:	bl	fa40 <pthread_cancel@plt>
   47d54:	ldr	r0, [r4, #4]
   47d58:	cmp	r0, #0
   47d5c:	blt	47e58 <processSpeechInput@@Base+0x1144>
   47d60:	bl	f764 <close@plt>
   47d64:	cmp	r0, #0
   47d68:	bne	47e60 <processSpeechInput@@Base+0x114c>
   47d6c:	ldr	r3, [r4]
   47d70:	str	r9, [r4, #4]
   47d74:	cmp	r3, #1
   47d78:	ldr	r7, [r4, #12]
   47d7c:	beq	47db8 <processSpeechInput@@Base+0x10a4>
   47d80:	mov	r0, r7
   47d84:	mov	r7, #0
   47d88:	bl	f4f4 <free@plt>
   47d8c:	str	r7, [r4, #12]
   47d90:	ldr	r0, [r4, #8]
   47d94:	add	r5, r5, #1
   47d98:	bl	f4f4 <free@plt>
   47d9c:	ldr	r3, [r8, #236]	; 0xec
   47da0:	str	r7, [r4, #8]
   47da4:	add	r4, r4, #16
   47da8:	cmp	r5, r3
   47dac:	blt	47d4c <processSpeechInput@@Base+0x1038>
   47db0:	add	sp, sp, #20
   47db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   47db8:	mov	r0, r7
   47dbc:	bl	fb54 <strlen@plt>
   47dc0:	mov	ip, r0
   47dc4:	add	r0, r0, #18
   47dc8:	str	ip, [sp]
   47dcc:	bl	fb48 <malloc@plt>
   47dd0:	ldr	ip, [sp]
   47dd4:	subs	sl, r0, #0
   47dd8:	beq	47d80 <processSpeechInput@@Base+0x106c>
   47ddc:	ldr	lr, [sp, #4]
   47de0:	add	ip, ip, #1
   47de4:	ldm	lr, {r0, r1, r2, r3}
   47de8:	stm	sl, {r0, r1, r2, r3}
   47dec:	mov	r2, ip
   47df0:	mov	r1, r7
   47df4:	add	r0, sl, #16
   47df8:	str	ip, [sp]
   47dfc:	bl	fb24 <memcpy@plt>
   47e00:	mov	r0, sl
   47e04:	bl	f800 <unlink@plt>
   47e08:	ldr	ip, [sp]
   47e0c:	cmp	r0, #0
   47e10:	beq	47e20 <processSpeechInput@@Base+0x110c>
   47e14:	ldr	r0, [sp, #12]
   47e18:	bl	1c6fc <logSystemError@@Base>
   47e1c:	ldr	ip, [sp]
   47e20:	mov	r3, #46	; 0x2e
   47e24:	mov	r2, ip
   47e28:	strb	r3, [sl, #16]
   47e2c:	add	r0, sl, #17
   47e30:	ldr	r1, [r4, #12]
   47e34:	bl	fb24 <memcpy@plt>
   47e38:	mov	r0, sl
   47e3c:	bl	f800 <unlink@plt>
   47e40:	cmp	r0, #0
   47e44:	beq	47e50 <processSpeechInput@@Base+0x113c>
   47e48:	ldr	r0, [sp, #8]
   47e4c:	bl	1c6fc <logSystemError@@Base>
   47e50:	mov	r0, sl
   47e54:	bl	f4f4 <free@plt>
   47e58:	ldr	r7, [r4, #12]
   47e5c:	b	47d80 <processSpeechInput@@Base+0x106c>
   47e60:	mov	r0, fp
   47e64:	bl	1c6fc <logSystemError@@Base>
   47e68:	b	47d6c <processSpeechInput@@Base+0x1058>
   47e6c:	andeq	ip, r2, r0, lsl r3
   47e70:	ldrdeq	r2, [r1], -r4
   47e74:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   47e78:	andeq	r2, r1, r8, lsr #31
   47e7c:	andeq	r2, r1, ip, lsl #31

00047e80 <brlapiserver_writePacket@@Base>:
   47e80:	push	{r4, r5, r6, r7, r8, lr}
   47e84:	mov	r4, r3
   47e88:	ldr	r5, [pc, #240]	; 47f80 <brlapiserver_writePacket@@Base+0x100>
   47e8c:	sub	sp, sp, #16
   47e90:	ldr	lr, [pc, #236]	; 47f84 <brlapiserver_writePacket@@Base+0x104>
   47e94:	rev	ip, r1
   47e98:	add	r5, pc, r5
   47e9c:	mov	r6, r2
   47ea0:	add	r1, sp, #4
   47ea4:	mov	r2, #8
   47ea8:	mov	r3, r5
   47eac:	ldr	r5, [r5, lr]
   47eb0:	rev	r7, r4
   47eb4:	mov	r8, r0
   47eb8:	stmib	sp, {r7, ip}
   47ebc:	ldr	r3, [r5]
   47ec0:	str	r3, [sp, #12]
   47ec4:	bl	46e40 <processSpeechInput@@Base+0x12c>
   47ec8:	subs	r7, r0, #0
   47ecc:	blt	47f4c <brlapiserver_writePacket@@Base+0xcc>
   47ed0:	cmp	r4, #0
   47ed4:	cmpne	r6, #0
   47ed8:	moveq	r3, #0
   47edc:	movne	r3, #1
   47ee0:	bne	47f00 <brlapiserver_writePacket@@Base+0x80>
   47ee4:	ldr	r2, [sp, #12]
   47ee8:	mov	r0, r3
   47eec:	ldr	r3, [r5]
   47ef0:	cmp	r2, r3
   47ef4:	bne	47f7c <brlapiserver_writePacket@@Base+0xfc>
   47ef8:	add	sp, sp, #16
   47efc:	pop	{r4, r5, r6, r7, r8, pc}
   47f00:	mov	r1, r6
   47f04:	mov	r0, r8
   47f08:	mov	r2, r4
   47f0c:	bl	46e40 <processSpeechInput@@Base+0x12c>
   47f10:	subs	r6, r0, #0
   47f14:	movge	r3, #0
   47f18:	bge	47ee4 <brlapiserver_writePacket@@Base+0x64>
   47f1c:	ldr	r4, [pc, #100]	; 47f88 <brlapiserver_writePacket@@Base+0x108>
   47f20:	mov	r3, #11
   47f24:	add	r4, pc, r4
   47f28:	str	r3, [r4, #256]	; 0x100
   47f2c:	bl	fca4 <__errno_location@plt>
   47f30:	ldr	r2, [pc, #84]	; 47f8c <brlapiserver_writePacket@@Base+0x10c>
   47f34:	mov	r3, r6
   47f38:	add	r2, pc, r2
   47f3c:	str	r2, [r4, #268]	; 0x10c
   47f40:	ldr	r2, [r0]
   47f44:	str	r2, [r4, #260]	; 0x104
   47f48:	b	47ee4 <brlapiserver_writePacket@@Base+0x64>
   47f4c:	ldr	r4, [pc, #60]	; 47f90 <brlapiserver_writePacket@@Base+0x110>
   47f50:	mov	r3, #11
   47f54:	add	r4, pc, r4
   47f58:	str	r3, [r4, #256]	; 0x100
   47f5c:	bl	fca4 <__errno_location@plt>
   47f60:	ldr	r2, [pc, #44]	; 47f94 <brlapiserver_writePacket@@Base+0x114>
   47f64:	mov	r3, r7
   47f68:	add	r2, pc, r2
   47f6c:	str	r2, [r4, #268]	; 0x10c
   47f70:	ldr	r2, [r0]
   47f74:	str	r2, [r4, #260]	; 0x104
   47f78:	b	47ee4 <brlapiserver_writePacket@@Base+0x64>
   47f7c:	bl	f950 <__stack_chk_fail@plt>
   47f80:	andeq	sl, r2, r0, ror #23
   47f84:			; <UNDEFINED> instruction: 0x000003b4
   47f88:	andeq	ip, r2, ip, ror #1
   47f8c:	andeq	r2, r1, r8, asr #27
   47f90:	strheq	ip, [r2], -ip	; <UNPREDICTABLE>
   47f94:	muleq	r1, r8, sp
   47f98:	ldr	r1, [pc, #116]	; 48014 <brlapiserver_writePacket@@Base+0x194>
   47f9c:	rev	ip, r2
   47fa0:	push	{r4, r5, lr}
   47fa4:	add	r1, pc, r1
   47fa8:	ldr	r4, [pc, #104]	; 48018 <brlapiserver_writePacket@@Base+0x198>
   47fac:	sub	sp, sp, #20
   47fb0:	rev	lr, r3
   47fb4:	mov	r5, r0
   47fb8:	mov	r3, ip
   47fbc:	mov	r0, #7
   47fc0:	ldr	r4, [r1, r4]
   47fc4:	mov	r2, lr
   47fc8:	str	lr, [sp, #4]
   47fcc:	ldr	r1, [pc, #72]	; 4801c <brlapiserver_writePacket@@Base+0x19c>
   47fd0:	ldr	lr, [r4]
   47fd4:	add	r1, pc, r1
   47fd8:	str	ip, [sp, #8]
   47fdc:	str	lr, [sp, #12]
   47fe0:	bl	1c634 <logMessage@@Base>
   47fe4:	add	r2, sp, #4
   47fe8:	mov	r3, #8
   47fec:	mov	r0, r5
   47ff0:	mov	r1, #107	; 0x6b
   47ff4:	bl	47e80 <brlapiserver_writePacket@@Base>
   47ff8:	ldr	r2, [sp, #12]
   47ffc:	ldr	r3, [r4]
   48000:	cmp	r2, r3
   48004:	bne	48010 <brlapiserver_writePacket@@Base+0x190>
   48008:	add	sp, sp, #20
   4800c:	pop	{r4, r5, pc}
   48010:	bl	f950 <__stack_chk_fail@plt>
   48014:	ldrdeq	sl, [r2], -r4
   48018:			; <UNDEFINED> instruction: 0x000003b4
   4801c:	andeq	r2, r1, r4, asr #26
   48020:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   48024:	mov	r9, r1
   48028:	ldr	r1, [r0]
   4802c:	mov	r8, r0
   48030:	mov	r4, r2
   48034:	mov	r5, r3
   48038:	ldr	r6, [r1, #4]
   4803c:	cmp	r1, r6
   48040:	bne	48060 <brlapiserver_writePacket@@Base+0x1e0>
   48044:	b	480a4 <brlapiserver_writePacket@@Base+0x224>
   48048:	mov	r0, r7
   4804c:	bl	fdf4 <pthread_mutex_unlock@plt>
   48050:	ldr	r6, [r6, #4]
   48054:	ldr	r3, [r8]
   48058:	cmp	r6, r3
   4805c:	beq	480a4 <brlapiserver_writePacket@@Base+0x224>
   48060:	add	r7, r6, #100	; 0x64
   48064:	mov	r0, r7
   48068:	bl	f3f8 <pthread_mutex_lock@plt>
   4806c:	ldr	r3, [r6, #28]
   48070:	cmp	r3, #0
   48074:	bne	48048 <brlapiserver_writePacket@@Base+0x1c8>
   48078:	mov	r2, r4
   4807c:	mov	r3, r5
   48080:	ldr	r0, [r6, #96]	; 0x60
   48084:	bl	4d19c <inKeyrangeList@@Base>
   48088:	mov	r2, r4
   4808c:	mov	r3, r5
   48090:	cmp	r0, #0
   48094:	beq	48048 <brlapiserver_writePacket@@Base+0x1c8>
   48098:	ldr	r0, [r6, #8]
   4809c:	bl	47f98 <brlapiserver_writePacket@@Base+0x118>
   480a0:	b	48048 <brlapiserver_writePacket@@Base+0x1c8>
   480a4:	ldr	r6, [r9]
   480a8:	cmp	r6, #0
   480ac:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   480b0:	add	r0, r6, #8
   480b4:	add	r1, r6, #24
   480b8:	mov	r2, r4
   480bc:	mov	r3, r5
   480c0:	bl	48020 <brlapiserver_writePacket@@Base+0x1a0>
   480c4:	ldr	r6, [r6, #20]
   480c8:	cmp	r6, #0
   480cc:	bne	480b0 <brlapiserver_writePacket@@Base+0x230>
   480d0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   480d4:	ldr	ip, [pc, #180]	; 48190 <brlapiserver_writePacket@@Base+0x310>
   480d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   480dc:	mov	r8, r1
   480e0:	ldr	r1, [pc, #172]	; 48194 <brlapiserver_writePacket@@Base+0x314>
   480e4:	add	ip, pc, ip
   480e8:	sub	sp, sp, #528	; 0x210
   480ec:	mov	r7, r2
   480f0:	mov	sl, r3
   480f4:	mov	r2, r8
   480f8:	ldr	r4, [ip, r1]
   480fc:	mov	r3, r7
   48100:	str	r0, [sp]
   48104:	mov	r6, r0
   48108:	ldr	r1, [pc, #136]	; 48198 <brlapiserver_writePacket@@Base+0x318>
   4810c:	mov	r0, #7
   48110:	ldr	ip, [r4]
   48114:	rev	r8, r8
   48118:	ldr	r5, [sp, #560]	; 0x230
   4811c:	add	r1, pc, r1
   48120:	rev	r7, r7
   48124:	cmp	r5, #504	; 0x1f8
   48128:	movcc	r9, r5
   4812c:	movcs	r9, #504	; 0x1f8
   48130:	str	ip, [sp, #524]	; 0x20c
   48134:	bl	1c634 <logMessage@@Base>
   48138:	cmp	r5, #0
   4813c:	cmpne	sl, #0
   48140:	str	r8, [sp, #12]
   48144:	str	r7, [sp, #16]
   48148:	beq	48160 <brlapiserver_writePacket@@Base+0x2e0>
   4814c:	mov	r1, sl
   48150:	add	r0, sp, #20
   48154:	mov	r2, r9
   48158:	mov	r3, #504	; 0x1f8
   4815c:	bl	f464 <__memcpy_chk@plt>
   48160:	add	r3, r9, #8
   48164:	add	r2, sp, #12
   48168:	mov	r0, r6
   4816c:	mov	r1, #69	; 0x45
   48170:	bl	47e80 <brlapiserver_writePacket@@Base>
   48174:	ldr	r2, [sp, #524]	; 0x20c
   48178:	ldr	r3, [r4]
   4817c:	cmp	r2, r3
   48180:	bne	4818c <brlapiserver_writePacket@@Base+0x30c>
   48184:	add	sp, sp, #528	; 0x210
   48188:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4818c:	bl	f950 <__stack_chk_fail@plt>
   48190:	muleq	r2, r4, r9
   48194:			; <UNDEFINED> instruction: 0x000003b4
   48198:	andeq	r2, r1, r4, lsl ip
   4819c:	push	{r4, r5, r6, r7, lr}
   481a0:	mov	r4, r0
   481a4:	ldr	r0, [r0, #20]
   481a8:	sub	sp, sp, #12
   481ac:	mov	r7, r1
   481b0:	mov	r6, r2
   481b4:	cmp	r0, #0
   481b8:	mov	r5, r3
   481bc:	beq	48200 <brlapiserver_writePacket@@Base+0x380>
   481c0:	ldr	r4, [pc, #140]	; 48254 <brlapiserver_writePacket@@Base+0x3d4>
   481c4:	add	r4, pc, r4
   481c8:	add	r7, r4, #104	; 0x68
   481cc:	mov	r0, r7
   481d0:	bl	f3f8 <pthread_mutex_lock@plt>
   481d4:	ldr	r3, [r4, #128]	; 0x80
   481d8:	mov	r1, r6
   481dc:	mov	r2, r5
   481e0:	ldr	r0, [r4, #140]	; 0x8c
   481e4:	ldr	r3, [r3, #60]	; 0x3c
   481e8:	blx	r3
   481ec:	mov	r0, r7
   481f0:	bl	fdf4 <pthread_mutex_unlock@plt>
   481f4:	mov	r0, #0
   481f8:	add	sp, sp, #12
   481fc:	pop	{r4, r5, r6, r7, pc}
   48200:	ldr	r1, [pc, #80]	; 48258 <brlapiserver_writePacket@@Base+0x3d8>
   48204:	mov	r0, #3
   48208:	ldr	r3, [r4, #8]
   4820c:	mov	r2, #5
   48210:	add	r1, pc, r1
   48214:	bl	1c634 <logMessage@@Base>
   48218:	ldr	r1, [pc, #60]	; 4825c <brlapiserver_writePacket@@Base+0x3dc>
   4821c:	ldr	r2, [pc, #60]	; 48260 <brlapiserver_writePacket@@Base+0x3e0>
   48220:	mov	r0, #3
   48224:	add	r1, pc, r1
   48228:	add	r2, pc, r2
   4822c:	bl	1c634 <logMessage@@Base>
   48230:	ldr	r0, [r4, #8]
   48234:	mov	r2, r7
   48238:	str	r5, [sp]
   4823c:	mov	r3, r6
   48240:	mov	r1, #5
   48244:	bl	480d4 <brlapiserver_writePacket@@Base+0x254>
   48248:	mov	r0, #0
   4824c:	add	sp, sp, #12
   48250:	pop	{r4, r5, r6, r7, pc}
   48254:	andeq	fp, r2, ip, asr #28
   48258:	andeq	r2, r1, ip, asr #22
   4825c:	andeq	r2, r1, r4, asr fp
   48260:	andeq	r2, r1, r8, ror fp
   48264:	push	{r4, r5, r6, r7, lr}
   48268:	mov	r4, r0
   4826c:	ldr	r0, [r0, #20]
   48270:	sub	sp, sp, #12
   48274:	mov	r7, r1
   48278:	mov	r5, r2
   4827c:	cmp	r0, #0
   48280:	mov	r6, r3
   48284:	bne	482c4 <brlapiserver_writePacket@@Base+0x444>
   48288:	ldr	ip, [r4, #16]
   4828c:	cmp	ip, #0
   48290:	beq	48318 <brlapiserver_writePacket@@Base+0x498>
   48294:	ldr	r3, [r2]
   48298:	mov	r0, #7
   4829c:	ldr	r1, [pc, #164]	; 48348 <brlapiserver_writePacket@@Base+0x4c8>
   482a0:	rev	r3, r3
   482a4:	str	r3, [ip]
   482a8:	ldr	r3, [r4, #16]
   482ac:	add	r1, pc, r1
   482b0:	ldr	r2, [r3]
   482b4:	bl	1c634 <logMessage@@Base>
   482b8:	mov	r0, #0
   482bc:	add	sp, sp, #12
   482c0:	pop	{r4, r5, r6, r7, pc}
   482c4:	ldr	r1, [pc, #128]	; 4834c <brlapiserver_writePacket@@Base+0x4cc>
   482c8:	mov	r0, #3
   482cc:	mov	r2, #5
   482d0:	ldr	r3, [r4, #8]
   482d4:	add	r1, pc, r1
   482d8:	bl	1c634 <logMessage@@Base>
   482dc:	ldr	r1, [pc, #108]	; 48350 <brlapiserver_writePacket@@Base+0x4d0>
   482e0:	ldr	r2, [pc, #108]	; 48354 <brlapiserver_writePacket@@Base+0x4d4>
   482e4:	mov	r0, #3
   482e8:	add	r1, pc, r1
   482ec:	add	r2, pc, r2
   482f0:	bl	1c634 <logMessage@@Base>
   482f4:	ldr	r0, [r4, #8]
   482f8:	mov	r2, r7
   482fc:	str	r6, [sp]
   48300:	mov	r3, r5
   48304:	mov	r1, #5
   48308:	bl	480d4 <brlapiserver_writePacket@@Base+0x254>
   4830c:	mov	r0, #0
   48310:	add	sp, sp, #12
   48314:	pop	{r4, r5, r6, r7, pc}
   48318:	ldr	r1, [pc, #56]	; 48358 <brlapiserver_writePacket@@Base+0x4d8>
   4831c:	mov	r0, #3
   48320:	mov	r2, #5
   48324:	ldr	r3, [r4, #8]
   48328:	add	r1, pc, r1
   4832c:	bl	1c634 <logMessage@@Base>
   48330:	ldr	r1, [pc, #36]	; 4835c <brlapiserver_writePacket@@Base+0x4dc>
   48334:	ldr	r2, [pc, #36]	; 48360 <brlapiserver_writePacket@@Base+0x4e0>
   48338:	mov	r0, #3
   4833c:	add	r1, pc, r1
   48340:	add	r2, pc, r2
   48344:	b	482f0 <brlapiserver_writePacket@@Base+0x470>
   48348:	andeq	r2, r1, r8, asr fp
   4834c:	andeq	r2, r1, r8, lsl #21
   48350:	andeq	r2, r1, r0, asr #21
   48354:	andeq	r2, r1, r0, ror #21
   48358:	andeq	r2, r1, r4, lsr sl
   4835c:	muleq	r1, r8, sl
   48360:			; <UNDEFINED> instruction: 0x00012abc
   48364:	ldr	r3, [pc, #408]	; 48504 <brlapiserver_writePacket@@Base+0x684>
   48368:	ldr	r2, [pc, #408]	; 48508 <brlapiserver_writePacket@@Base+0x688>
   4836c:	add	r3, pc, r3
   48370:	push	{r4, r5, r6, r7, r8, r9, lr}
   48374:	sub	sp, sp, #532	; 0x214
   48378:	ldr	r6, [r3, r2]
   4837c:	mov	r7, r0
   48380:	ldr	r4, [pc, #388]	; 4850c <brlapiserver_writePacket@@Base+0x68c>
   48384:	mov	r5, r1
   48388:	ldr	r3, [r6]
   4838c:	add	r4, pc, r4
   48390:	add	r0, r4, #44	; 0x2c
   48394:	str	r3, [sp, #524]	; 0x20c
   48398:	bl	f3f8 <pthread_mutex_lock@plt>
   4839c:	add	r0, r4, #68	; 0x44
   483a0:	bl	f3f8 <pthread_mutex_lock@plt>
   483a4:	ldr	r8, [r4, #96]	; 0x60
   483a8:	cmp	r8, #0
   483ac:	bne	4848c <brlapiserver_writePacket@@Base+0x60c>
   483b0:	ldr	r3, [r4, #168]	; 0xa8
   483b4:	cmp	r3, #0
   483b8:	beq	4848c <brlapiserver_writePacket@@Base+0x60c>
   483bc:	ldr	r3, [r4, #100]	; 0x64
   483c0:	cmp	r3, #0
   483c4:	bne	484a4 <brlapiserver_writePacket@@Base+0x624>
   483c8:	cmp	r5, #3
   483cc:	beq	48460 <brlapiserver_writePacket@@Base+0x5e0>
   483d0:	ldr	r8, [pc, #312]	; 48510 <brlapiserver_writePacket@@Base+0x690>
   483d4:	add	r8, pc, r8
   483d8:	add	r4, r8, #104	; 0x68
   483dc:	mov	r0, r4
   483e0:	bl	f3f8 <pthread_mutex_lock@plt>
   483e4:	ldr	r3, [r8, #128]	; 0x80
   483e8:	mov	r1, r5
   483ec:	mov	r0, r7
   483f0:	ldr	r3, [r3, #44]	; 0x2c
   483f4:	blx	r3
   483f8:	mov	r5, r0
   483fc:	mov	r0, r4
   48400:	bl	fdf4 <pthread_mutex_unlock@plt>
   48404:	ldrb	r3, [r7, #36]	; 0x24
   48408:	tst	r3, #2
   4840c:	bne	4844c <brlapiserver_writePacket@@Base+0x5cc>
   48410:	ldr	r0, [pc, #252]	; 48514 <brlapiserver_writePacket@@Base+0x694>
   48414:	add	r0, pc, r0
   48418:	add	r0, r0, #68	; 0x44
   4841c:	bl	fdf4 <pthread_mutex_unlock@plt>
   48420:	ldr	r0, [pc, #240]	; 48518 <brlapiserver_writePacket@@Base+0x698>
   48424:	add	r0, pc, r0
   48428:	add	r0, r0, #44	; 0x2c
   4842c:	bl	fdf4 <pthread_mutex_unlock@plt>
   48430:	ldr	r2, [sp, #524]	; 0x20c
   48434:	ldr	r3, [r6]
   48438:	mov	r0, r5
   4843c:	cmp	r2, r3
   48440:	bne	48500 <brlapiserver_writePacket@@Base+0x680>
   48444:	add	sp, sp, #532	; 0x214
   48448:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4844c:	ldr	r1, [pc, #200]	; 4851c <brlapiserver_writePacket@@Base+0x69c>
   48450:	mov	r0, #6
   48454:	add	r1, pc, r1
   48458:	bl	1c634 <logMessage@@Base>
   4845c:	b	48410 <brlapiserver_writePacket@@Base+0x590>
   48460:	ldr	r3, [r4, #272]	; 0x110
   48464:	cmp	r3, #0
   48468:	movne	r5, #1
   4846c:	b	483d0 <brlapiserver_writePacket@@Base+0x550>
   48470:	ldr	r0, [r4, #100]	; 0x64
   48474:	mov	r3, r8
   48478:	mov	r1, #16
   4847c:	mov	r2, #112	; 0x70
   48480:	ldr	r0, [r0, #8]
   48484:	str	r8, [sp]
   48488:	bl	480d4 <brlapiserver_writePacket@@Base+0x254>
   4848c:	ldr	r0, [pc, #140]	; 48520 <brlapiserver_writePacket@@Base+0x6a0>
   48490:	mvn	r5, #0
   48494:	add	r0, pc, r0
   48498:	add	r0, r0, #68	; 0x44
   4849c:	bl	fdf4 <pthread_mutex_unlock@plt>
   484a0:	b	48420 <brlapiserver_writePacket@@Base+0x5a0>
   484a4:	add	r5, r4, #104	; 0x68
   484a8:	add	r9, sp, #12
   484ac:	mov	r0, r5
   484b0:	bl	f3f8 <pthread_mutex_lock@plt>
   484b4:	ldr	r3, [r4, #128]	; 0x80
   484b8:	mov	r0, r7
   484bc:	mov	r1, r9
   484c0:	mov	r2, #512	; 0x200
   484c4:	ldr	r3, [r3, #56]	; 0x38
   484c8:	blx	r3
   484cc:	mov	r7, r0
   484d0:	mov	r0, r5
   484d4:	bl	fdf4 <pthread_mutex_unlock@plt>
   484d8:	cmp	r7, #0
   484dc:	blt	48470 <brlapiserver_writePacket@@Base+0x5f0>
   484e0:	beq	4848c <brlapiserver_writePacket@@Base+0x60c>
   484e4:	ldr	r0, [r4, #100]	; 0x64
   484e8:	mov	r2, r9
   484ec:	mov	r3, r7
   484f0:	mov	r1, #112	; 0x70
   484f4:	ldr	r0, [r0, #8]
   484f8:	bl	47e80 <brlapiserver_writePacket@@Base>
   484fc:	b	4848c <brlapiserver_writePacket@@Base+0x60c>
   48500:	bl	f950 <__stack_chk_fail@plt>
   48504:	andeq	sl, r2, ip, lsl #14
   48508:			; <UNDEFINED> instruction: 0x000003b4
   4850c:	andeq	fp, r2, r4, lsl #25
   48510:	andeq	fp, r2, ip, lsr ip
   48514:	strdeq	fp, [r2], -ip
   48518:	andeq	fp, r2, ip, ror #23
   4851c:	andeq	r2, r1, r8, asr #19
   48520:	andeq	fp, r2, ip, ror fp
   48524:	ldr	ip, [pc, #112]	; 4859c <brlapiserver_writePacket@@Base+0x71c>
   48528:	mov	r2, r1
   4852c:	push	{r4, r5, r6, lr}
   48530:	add	ip, pc, ip
   48534:	ldr	lr, [pc, #100]	; 485a0 <brlapiserver_writePacket@@Base+0x720>
   48538:	sub	sp, sp, #8
   4853c:	add	r4, sp, #8
   48540:	mov	r3, r0
   48544:	mov	r6, r0
   48548:	mov	r0, #7
   4854c:	ldr	r5, [ip, lr]
   48550:	rev	ip, r1
   48554:	ldr	r1, [pc, #72]	; 485a4 <brlapiserver_writePacket@@Base+0x724>
   48558:	str	ip, [r4, #-8]!
   4855c:	ldr	ip, [r5]
   48560:	add	r1, pc, r1
   48564:	str	ip, [sp, #4]
   48568:	bl	1c634 <logMessage@@Base>
   4856c:	mov	r2, sp
   48570:	mov	r3, #4
   48574:	mov	r0, r6
   48578:	mov	r1, #101	; 0x65
   4857c:	bl	47e80 <brlapiserver_writePacket@@Base>
   48580:	ldr	r2, [sp, #4]
   48584:	ldr	r3, [r5]
   48588:	cmp	r2, r3
   4858c:	bne	48598 <brlapiserver_writePacket@@Base+0x718>
   48590:	add	sp, sp, #8
   48594:	pop	{r4, r5, r6, pc}
   48598:	bl	f950 <__stack_chk_fail@plt>
   4859c:	andeq	sl, r2, r8, asr #10
   485a0:			; <UNDEFINED> instruction: 0x000003b4
   485a4:	andeq	r2, r1, ip, asr #17
   485a8:	cmp	r2, #4
   485ac:	push	{r4, r5, r6, r7, r8, lr}
   485b0:	mov	r6, r2
   485b4:	mov	r4, r0
   485b8:	mov	r5, r1
   485bc:	bls	48678 <brlapiserver_writePacket@@Base+0x7f8>
   485c0:	ldr	r2, [r1]
   485c4:	movw	r3, #48879	; 0xbeef
   485c8:	movt	r3, #57005	; 0xdead
   485cc:	rev	r2, r2
   485d0:	cmp	r2, r3
   485d4:	bne	48648 <brlapiserver_writePacket@@Base+0x7c8>
   485d8:	ldrb	r7, [r1, #4]
   485dc:	cmp	r7, #31
   485e0:	bhi	48604 <brlapiserver_writePacket@@Base+0x784>
   485e4:	ldr	r3, [pc, #344]	; 48744 <brlapiserver_writePacket@@Base+0x8c4>
   485e8:	add	r3, pc, r3
   485ec:	ldr	r3, [r3, #128]	; 0x80
   485f0:	ldr	r8, [r3]
   485f4:	mov	r0, r8
   485f8:	bl	fb54 <strlen@plt>
   485fc:	cmp	r7, r0
   48600:	beq	486bc <brlapiserver_writePacket@@Base+0x83c>
   48604:	ldr	r1, [pc, #316]	; 48748 <brlapiserver_writePacket@@Base+0x8c8>
   48608:	mov	r0, #3
   4860c:	mov	r2, #6
   48610:	ldr	r3, [r4]
   48614:	add	r1, pc, r1
   48618:	bl	1c634 <logMessage@@Base>
   4861c:	ldr	r1, [pc, #296]	; 4874c <brlapiserver_writePacket@@Base+0x8cc>
   48620:	ldr	r2, [pc, #296]	; 48750 <brlapiserver_writePacket@@Base+0x8d0>
   48624:	mov	r0, #3
   48628:	add	r1, pc, r1
   4862c:	add	r2, pc, r2
   48630:	bl	1c634 <logMessage@@Base>
   48634:	ldr	r0, [r4]
   48638:	mov	r1, #6
   4863c:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   48640:	mov	r0, #0
   48644:	pop	{r4, r5, r6, r7, r8, pc}
   48648:	ldr	r1, [pc, #260]	; 48754 <brlapiserver_writePacket@@Base+0x8d4>
   4864c:	mov	r0, #3
   48650:	mov	r2, #6
   48654:	ldr	r3, [r4]
   48658:	add	r1, pc, r1
   4865c:	bl	1c634 <logMessage@@Base>
   48660:	ldr	r1, [pc, #240]	; 48758 <brlapiserver_writePacket@@Base+0x8d8>
   48664:	ldr	r2, [pc, #240]	; 4875c <brlapiserver_writePacket@@Base+0x8dc>
   48668:	mov	r0, #3
   4866c:	add	r1, pc, r1
   48670:	add	r2, pc, r2
   48674:	b	48630 <brlapiserver_writePacket@@Base+0x7b0>
   48678:	ldr	r1, [pc, #224]	; 48760 <brlapiserver_writePacket@@Base+0x8e0>
   4867c:	mov	r0, #3
   48680:	mov	r2, #7
   48684:	ldr	r3, [r4]
   48688:	add	r1, pc, r1
   4868c:	bl	1c634 <logMessage@@Base>
   48690:	ldr	r1, [pc, #204]	; 48764 <brlapiserver_writePacket@@Base+0x8e4>
   48694:	ldr	r2, [pc, #204]	; 48768 <brlapiserver_writePacket@@Base+0x8e8>
   48698:	mov	r0, #3
   4869c:	add	r1, pc, r1
   486a0:	add	r2, pc, r2
   486a4:	bl	1c634 <logMessage@@Base>
   486a8:	ldr	r0, [r4]
   486ac:	mov	r1, #7
   486b0:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   486b4:	mov	r0, #0
   486b8:	pop	{r4, r5, r6, r7, r8, pc}
   486bc:	sub	r2, r6, #5
   486c0:	cmp	r2, r7
   486c4:	bne	486e4 <brlapiserver_writePacket@@Base+0x864>
   486c8:	add	r0, r5, #5
   486cc:	mov	r1, r8
   486d0:	bl	f548 <strncmp@plt>
   486d4:	cmp	r0, #0
   486d8:	bne	48714 <brlapiserver_writePacket@@Base+0x894>
   486dc:	mov	r0, #1
   486e0:	pop	{r4, r5, r6, r7, r8, pc}
   486e4:	ldr	r1, [pc, #128]	; 4876c <brlapiserver_writePacket@@Base+0x8ec>
   486e8:	mov	r0, #3
   486ec:	mov	r2, #7
   486f0:	ldr	r3, [r4]
   486f4:	add	r1, pc, r1
   486f8:	bl	1c634 <logMessage@@Base>
   486fc:	ldr	r1, [pc, #108]	; 48770 <brlapiserver_writePacket@@Base+0x8f0>
   48700:	ldr	r2, [pc, #108]	; 48774 <brlapiserver_writePacket@@Base+0x8f4>
   48704:	mov	r0, #3
   48708:	add	r1, pc, r1
   4870c:	add	r2, pc, r2
   48710:	b	486a4 <brlapiserver_writePacket@@Base+0x824>
   48714:	ldr	r1, [pc, #92]	; 48778 <brlapiserver_writePacket@@Base+0x8f8>
   48718:	mov	r0, #3
   4871c:	mov	r2, #6
   48720:	ldr	r3, [r4]
   48724:	add	r1, pc, r1
   48728:	bl	1c634 <logMessage@@Base>
   4872c:	ldr	r1, [pc, #72]	; 4877c <brlapiserver_writePacket@@Base+0x8fc>
   48730:	ldr	r2, [pc, #72]	; 48780 <brlapiserver_writePacket@@Base+0x900>
   48734:	mov	r0, #3
   48738:	add	r1, pc, r1
   4873c:	add	r2, pc, r2
   48740:	b	48630 <brlapiserver_writePacket@@Base+0x7b0>
   48744:	andeq	fp, r2, r8, lsr #20
   48748:	andeq	r2, r1, ip, lsr #16
   4874c:	andeq	r2, r1, r0, asr #17
   48750:	ldrdeq	r2, [r1], -ip
   48754:	andeq	r2, r1, r8, ror #15
   48758:	andeq	r2, r1, r8, lsr #16
   4875c:	andeq	r2, r1, r4, asr #16
   48760:			; <UNDEFINED> instruction: 0x000127b8
   48764:			; <UNDEFINED> instruction: 0x000127bc
   48768:	ldrdeq	r2, [r1], -r8
   4876c:	andeq	r2, r1, ip, asr #14
   48770:	andeq	r2, r1, ip, ror r8
   48774:	muleq	r1, r8, r8
   48778:	andeq	r2, r1, ip, lsl r7
   4877c:	muleq	r1, r4, r8
   48780:			; <UNDEFINED> instruction: 0x000128b0
   48784:	ldr	ip, [pc, #2288]	; 4907c <brlapiserver_writePacket@@Base+0x11fc>
   48788:	cmp	r3, #3
   4878c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48790:	add	fp, sp, #32
   48794:	ldr	r7, [pc, #2276]	; 49080 <brlapiserver_writePacket@@Base+0x1200>
   48798:	sub	sp, sp, #76	; 0x4c
   4879c:	add	ip, pc, ip
   487a0:	mov	r5, r3
   487a4:	mov	r4, r0
   487a8:	ldr	r7, [ip, r7]
   487ac:	mov	r3, ip
   487b0:	mov	r8, r1
   487b4:	mov	r6, r2
   487b8:	ldr	r3, [r7]
   487bc:	str	r3, [fp, #-40]	; 0xffffffd8
   487c0:	bls	48930 <brlapiserver_writePacket@@Base+0xab0>
   487c4:	ldr	r3, [r0, #20]
   487c8:	cmp	r3, #0
   487cc:	bne	48a48 <brlapiserver_writePacket@@Base+0xbc8>
   487d0:	ldr	r3, [r0, #16]
   487d4:	cmp	r3, #0
   487d8:	beq	48dc4 <brlapiserver_writePacket@@Base+0xf44>
   487dc:	ldr	r3, [r2]
   487e0:	cmp	r5, #4
   487e4:	rev	r3, r3
   487e8:	str	r3, [r2]
   487ec:	beq	48994 <brlapiserver_writePacket@@Base+0xb14>
   487f0:	tst	r3, #1
   487f4:	sub	sl, r5, #4
   487f8:	bne	489b0 <brlapiserver_writePacket@@Base+0xb30>
   487fc:	tst	r3, #2
   48800:	beq	48a88 <brlapiserver_writePacket@@Base+0xc08>
   48804:	cmp	sl, #8
   48808:	bls	48b40 <brlapiserver_writePacket@@Base+0xcc0>
   4880c:	ldmib	r6, {r2, r9}
   48810:	rev	r2, r2
   48814:	rev	r9, r9
   48818:	cmp	r9, #0
   4881c:	cmpne	r2, #0
   48820:	str	r2, [fp, #-64]	; 0xffffffc0
   48824:	beq	489fc <brlapiserver_writePacket@@Base+0xb7c>
   48828:	ldr	r2, [pc, #2132]	; 49084 <brlapiserver_writePacket@@Base+0x1204>
   4882c:	ldr	ip, [fp, #-64]	; 0xffffffc0
   48830:	add	r2, pc, r2
   48834:	add	r1, ip, r9
   48838:	ldr	r2, [r2]
   4883c:	sub	r1, r1, #1
   48840:	cmp	r1, r2
   48844:	addls	r2, r6, #12
   48848:	subls	sl, r5, #12
   4884c:	bhi	489fc <brlapiserver_writePacket@@Base+0xb7c>
   48850:	ands	r1, r3, #4
   48854:	beq	48abc <brlapiserver_writePacket@@Base+0xc3c>
   48858:	cmp	sl, #3
   4885c:	bls	48e04 <brlapiserver_writePacket@@Base+0xf84>
   48860:	mov	ip, r2
   48864:	sub	sl, sl, #4
   48868:	ldr	r2, [ip], #4
   4886c:	rev	r2, r2
   48870:	str	r2, [fp, #-68]	; 0xffffffbc
   48874:	cmp	sl, r2
   48878:	bcc	48e64 <brlapiserver_writePacket@@Base+0xfe4>
   4887c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   48880:	rsb	sl, r0, sl
   48884:	add	r2, ip, r0
   48888:	ands	r0, r3, #8
   4888c:	beq	48ac8 <brlapiserver_writePacket@@Base+0xc48>
   48890:	cmp	r9, sl
   48894:	bhi	48e34 <brlapiserver_writePacket@@Base+0xfb4>
   48898:	str	r2, [fp, #-72]	; 0xffffffb8
   4889c:	rsb	sl, r9, sl
   488a0:	add	r2, r2, r9
   488a4:	ands	r0, r3, #16
   488a8:	beq	48ad0 <brlapiserver_writePacket@@Base+0xc50>
   488ac:	cmp	r9, sl
   488b0:	bhi	48e94 <brlapiserver_writePacket@@Base+0x1014>
   488b4:	str	r2, [fp, #-76]	; 0xffffffb4
   488b8:	rsb	sl, r9, sl
   488bc:	add	r2, r2, r9
   488c0:	tst	r3, #32
   488c4:	beq	48ad8 <brlapiserver_writePacket@@Base+0xc58>
   488c8:	cmp	sl, #3
   488cc:	bls	48d14 <brlapiserver_writePacket@@Base+0xe94>
   488d0:	ldr	r0, [r2]
   488d4:	ldr	lr, [pc, #1964]	; 49088 <brlapiserver_writePacket@@Base+0x1208>
   488d8:	str	r0, [fp, #-44]	; 0xffffffd4
   488dc:	add	lr, pc, lr
   488e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   488e4:	ldr	lr, [lr]
   488e8:	rev	r0, r0
   488ec:	cmp	lr, r0
   488f0:	strcs	r0, [fp, #-80]	; 0xffffffb0
   488f4:	addcs	r2, r2, #4
   488f8:	subcs	sl, sl, #4
   488fc:	bcs	48ae0 <brlapiserver_writePacket@@Base+0xc60>
   48900:	ldr	r1, [pc, #1924]	; 4908c <brlapiserver_writePacket@@Base+0x120c>
   48904:	mov	r0, #3
   48908:	mov	r2, #7
   4890c:	ldr	r3, [r4, #8]
   48910:	add	r1, pc, r1
   48914:	bl	1c634 <logMessage@@Base>
   48918:	ldr	r1, [pc, #1904]	; 49090 <brlapiserver_writePacket@@Base+0x1210>
   4891c:	ldr	r2, [pc, #1904]	; 49094 <brlapiserver_writePacket@@Base+0x1214>
   48920:	mov	r0, #3
   48924:	add	r1, pc, r1
   48928:	add	r2, pc, r2
   4892c:	b	4895c <brlapiserver_writePacket@@Base+0xadc>
   48930:	ldr	r1, [pc, #1888]	; 49098 <brlapiserver_writePacket@@Base+0x1218>
   48934:	mov	r0, #3
   48938:	mov	r2, #7
   4893c:	ldr	r3, [r4, #8]
   48940:	add	r1, pc, r1
   48944:	bl	1c634 <logMessage@@Base>
   48948:	ldr	r1, [pc, #1868]	; 4909c <brlapiserver_writePacket@@Base+0x121c>
   4894c:	ldr	r2, [pc, #1868]	; 490a0 <brlapiserver_writePacket@@Base+0x1220>
   48950:	mov	r0, #3
   48954:	add	r1, pc, r1
   48958:	add	r2, pc, r2
   4895c:	bl	1c634 <logMessage@@Base>
   48960:	ldr	r0, [r4, #8]
   48964:	mov	r2, r8
   48968:	str	r5, [sp]
   4896c:	mov	r3, r6
   48970:	mov	r1, #7
   48974:	bl	480d4 <brlapiserver_writePacket@@Base+0x254>
   48978:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4897c:	mov	r0, #0
   48980:	ldr	r3, [r7]
   48984:	cmp	r2, r3
   48988:	bne	49078 <brlapiserver_writePacket@@Base+0x11f8>
   4898c:	sub	sp, fp, #32
   48990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48994:	cmp	r3, #0
   48998:	moveq	r3, #1
   4899c:	streq	r3, [r0, #48]	; 0x30
   489a0:	beq	48978 <brlapiserver_writePacket@@Base+0xaf8>
   489a4:	tst	r3, #1
   489a8:	sub	sl, r5, #4
   489ac:	beq	487fc <brlapiserver_writePacket@@Base+0x97c>
   489b0:	ldr	r1, [pc, #1772]	; 490a4 <brlapiserver_writePacket@@Base+0x1224>
   489b4:	mov	r0, #3
   489b8:	ldr	r3, [r4, #8]
   489bc:	mov	r2, #9
   489c0:	add	r1, pc, r1
   489c4:	bl	1c634 <logMessage@@Base>
   489c8:	ldr	r1, [pc, #1752]	; 490a8 <brlapiserver_writePacket@@Base+0x1228>
   489cc:	ldr	r2, [pc, #1752]	; 490ac <brlapiserver_writePacket@@Base+0x122c>
   489d0:	mov	r0, #3
   489d4:	add	r1, pc, r1
   489d8:	add	r2, pc, r2
   489dc:	bl	1c634 <logMessage@@Base>
   489e0:	ldr	r0, [r4, #8]
   489e4:	mov	r2, r8
   489e8:	str	r5, [sp]
   489ec:	mov	r3, r6
   489f0:	mov	r1, #9
   489f4:	bl	480d4 <brlapiserver_writePacket@@Base+0x254>
   489f8:	b	48978 <brlapiserver_writePacket@@Base+0xaf8>
   489fc:	ldr	r1, [pc, #1708]	; 490b0 <brlapiserver_writePacket@@Base+0x1230>
   48a00:	mov	r0, #3
   48a04:	ldr	r3, [r4, #8]
   48a08:	mov	r2, #6
   48a0c:	add	r1, pc, r1
   48a10:	bl	1c634 <logMessage@@Base>
   48a14:	ldr	r1, [pc, #1688]	; 490b4 <brlapiserver_writePacket@@Base+0x1234>
   48a18:	ldr	r2, [pc, #1688]	; 490b8 <brlapiserver_writePacket@@Base+0x1238>
   48a1c:	mov	r0, #3
   48a20:	add	r1, pc, r1
   48a24:	add	r2, pc, r2
   48a28:	bl	1c634 <logMessage@@Base>
   48a2c:	ldr	r0, [r4, #8]
   48a30:	mov	r2, r8
   48a34:	str	r5, [sp]
   48a38:	mov	r3, r6
   48a3c:	mov	r1, #6
   48a40:	bl	480d4 <brlapiserver_writePacket@@Base+0x254>
   48a44:	b	48978 <brlapiserver_writePacket@@Base+0xaf8>
   48a48:	ldr	r1, [pc, #1644]	; 490bc <brlapiserver_writePacket@@Base+0x123c>
   48a4c:	mov	r0, #3
   48a50:	ldr	r3, [r4, #8]
   48a54:	mov	r2, #5
   48a58:	add	r1, pc, r1
   48a5c:	bl	1c634 <logMessage@@Base>
   48a60:	ldr	r1, [pc, #1624]	; 490c0 <brlapiserver_writePacket@@Base+0x1240>
   48a64:	ldr	r2, [pc, #1624]	; 490c4 <brlapiserver_writePacket@@Base+0x1244>
   48a68:	mov	r0, #3
   48a6c:	add	r1, pc, r1
   48a70:	add	r2, pc, r2
   48a74:	bl	1c634 <logMessage@@Base>
   48a78:	ldr	r0, [r4, #8]
   48a7c:	mov	r1, #5
   48a80:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   48a84:	b	48978 <brlapiserver_writePacket@@Base+0xaf8>
   48a88:	ldr	r1, [pc, #1592]	; 490c8 <brlapiserver_writePacket@@Base+0x1248>
   48a8c:	mov	r0, #7
   48a90:	add	r1, pc, r1
   48a94:	bl	1c634 <logMessage@@Base>
   48a98:	ldr	r1, [pc, #1580]	; 490cc <brlapiserver_writePacket@@Base+0x124c>
   48a9c:	ldr	r3, [r6]
   48aa0:	mov	ip, #1
   48aa4:	add	r1, pc, r1
   48aa8:	add	r2, r6, #4
   48aac:	str	ip, [fp, #-64]	; 0xffffffc0
   48ab0:	ldr	r9, [r1]
   48ab4:	ands	r1, r3, #4
   48ab8:	bne	48858 <brlapiserver_writePacket@@Base+0x9d8>
   48abc:	str	r1, [fp, #-68]	; 0xffffffbc
   48ac0:	mov	ip, r1
   48ac4:	b	48888 <brlapiserver_writePacket@@Base+0xa08>
   48ac8:	str	r0, [fp, #-72]	; 0xffffffb8
   48acc:	b	488a4 <brlapiserver_writePacket@@Base+0xa24>
   48ad0:	str	r0, [fp, #-76]	; 0xffffffb4
   48ad4:	b	488c0 <brlapiserver_writePacket@@Base+0xa40>
   48ad8:	mvn	r0, #0
   48adc:	str	r0, [fp, #-80]	; 0xffffffb0
   48ae0:	ands	r3, r3, #64	; 0x40
   48ae4:	beq	48b70 <brlapiserver_writePacket@@Base+0xcf0>
   48ae8:	cmp	r1, #0
   48aec:	beq	48d44 <brlapiserver_writePacket@@Base+0xec4>
   48af0:	cmp	sl, #0
   48af4:	ble	49028 <brlapiserver_writePacket@@Base+0x11a8>
   48af8:	ldrb	r1, [r2]
   48afc:	sub	sl, sl, #1
   48b00:	cmp	r1, sl
   48b04:	addls	r3, r2, #1
   48b08:	rsbls	sl, r1, sl
   48b0c:	bls	48b74 <brlapiserver_writePacket@@Base+0xcf4>
   48b10:	ldr	r1, [pc, #1464]	; 490d0 <brlapiserver_writePacket@@Base+0x1250>
   48b14:	mov	r0, #3
   48b18:	mov	r2, #7
   48b1c:	ldr	r3, [r4, #8]
   48b20:	add	r1, pc, r1
   48b24:	bl	1c634 <logMessage@@Base>
   48b28:	ldr	r1, [pc, #1444]	; 490d4 <brlapiserver_writePacket@@Base+0x1254>
   48b2c:	ldr	r2, [pc, #1444]	; 490d8 <brlapiserver_writePacket@@Base+0x1258>
   48b30:	mov	r0, #3
   48b34:	add	r1, pc, r1
   48b38:	add	r2, pc, r2
   48b3c:	b	4895c <brlapiserver_writePacket@@Base+0xadc>
   48b40:	ldr	r1, [pc, #1428]	; 490dc <brlapiserver_writePacket@@Base+0x125c>
   48b44:	mov	r0, #3
   48b48:	mov	r2, #7
   48b4c:	ldr	r3, [r4, #8]
   48b50:	add	r1, pc, r1
   48b54:	bl	1c634 <logMessage@@Base>
   48b58:	ldr	r1, [pc, #1408]	; 490e0 <brlapiserver_writePacket@@Base+0x1260>
   48b5c:	ldr	r2, [pc, #1408]	; 490e4 <brlapiserver_writePacket@@Base+0x1264>
   48b60:	mov	r0, #3
   48b64:	add	r1, pc, r1
   48b68:	add	r2, pc, r2
   48b6c:	b	4895c <brlapiserver_writePacket@@Base+0xadc>
   48b70:	mov	r1, r3
   48b74:	cmp	sl, #0
   48b78:	bne	48ec4 <brlapiserver_writePacket@@Base+0x1044>
   48b7c:	cmp	ip, #0
   48b80:	beq	48f84 <brlapiserver_writePacket@@Base+0x1104>
   48b84:	cmp	r3, #0
   48b88:	beq	48fb4 <brlapiserver_writePacket@@Base+0x1134>
   48b8c:	strb	sl, [r3, r1]
   48b90:	str	sl, [fp, #-92]	; 0xffffffa4
   48b94:	lsl	sl, r9, #2
   48b98:	str	sp, [fp, #-88]	; 0xffffffa8
   48b9c:	add	r2, sl, #10
   48ba0:	str	ip, [fp, #-56]	; 0xffffffc8
   48ba4:	bic	r2, r2, #7
   48ba8:	ldr	r1, [pc, #1336]	; 490e8 <brlapiserver_writePacket@@Base+0x1268>
   48bac:	sub	sp, sp, r2
   48bb0:	mov	r0, #7
   48bb4:	add	ip, sp, #8
   48bb8:	str	ip, [fp, #-84]	; 0xffffffac
   48bbc:	ldr	ip, [fp, #-68]	; 0xffffffbc
   48bc0:	mov	r2, r3
   48bc4:	add	r1, pc, r1
   48bc8:	str	r3, [fp, #-100]	; 0xffffff9c
   48bcc:	str	sl, [fp, #-44]	; 0xffffffd4
   48bd0:	str	ip, [fp, #-48]	; 0xffffffd0
   48bd4:	ldr	ip, [fp, #-84]	; 0xffffffac
   48bd8:	str	ip, [fp, #-52]	; 0xffffffcc
   48bdc:	bl	1c634 <logMessage@@Base>
   48be0:	bl	283a4 <getWcharCharset@@Base>
   48be4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   48be8:	mov	r1, r3
   48bec:	bl	fc2c <iconv_open@plt>
   48bf0:	cmn	r0, #1
   48bf4:	mov	ip, r0
   48bf8:	beq	48f54 <brlapiserver_writePacket@@Base+0x10d4>
   48bfc:	sub	r1, fp, #56	; 0x38
   48c00:	sub	r3, fp, #44	; 0x2c
   48c04:	sub	r2, fp, #48	; 0x30
   48c08:	str	r3, [sp]
   48c0c:	sub	r3, fp, #52	; 0x34
   48c10:	str	ip, [fp, #-96]	; 0xffffffa0
   48c14:	bl	fc8c <iconv@plt>
   48c18:	ldr	ip, [fp, #-96]	; 0xffffffa0
   48c1c:	mov	r3, r0
   48c20:	mov	r0, ip
   48c24:	str	r3, [fp, #-100]	; 0xffffff9c
   48c28:	bl	fae8 <iconv_close@plt>
   48c2c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   48c30:	cmn	r3, #1
   48c34:	beq	48d74 <brlapiserver_writePacket@@Base+0xef4>
   48c38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   48c3c:	cmp	r3, #0
   48c40:	bne	48ef4 <brlapiserver_writePacket@@Base+0x1074>
   48c44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   48c48:	cmp	r3, #0
   48c4c:	bne	48f24 <brlapiserver_writePacket@@Base+0x10a4>
   48c50:	ldr	ip, [fp, #-92]	; 0xffffffa4
   48c54:	cmp	ip, #0
   48c58:	beq	48c60 <brlapiserver_writePacket@@Base+0xde0>
   48c5c:	bl	28560 <unlockCharset@@Base>
   48c60:	add	r5, r4, #72	; 0x48
   48c64:	mov	r0, r5
   48c68:	bl	f3f8 <pthread_mutex_lock@plt>
   48c6c:	ldr	ip, [fp, #-64]	; 0xffffffc0
   48c70:	ldr	r3, [r4, #36]	; 0x24
   48c74:	mov	r2, sl
   48c78:	sub	r0, ip, #-1073741823	; 0xc0000001
   48c7c:	ldr	r1, [fp, #-84]	; 0xffffffac
   48c80:	add	r0, r3, r0, lsl #2
   48c84:	bl	fb24 <memcpy@plt>
   48c88:	ldr	sp, [fp, #-88]	; 0xffffffa8
   48c8c:	ldr	ip, [fp, #-72]	; 0xffffffb8
   48c90:	cmp	ip, #0
   48c94:	beq	48f94 <brlapiserver_writePacket@@Base+0x1114>
   48c98:	ldr	ip, [fp, #-76]	; 0xffffffb4
   48c9c:	cmp	ip, #0
   48ca0:	beq	49058 <brlapiserver_writePacket@@Base+0x11d8>
   48ca4:	ldr	ip, [fp, #-72]	; 0xffffffb8
   48ca8:	cmp	ip, #0
   48cac:	beq	48ccc <brlapiserver_writePacket@@Base+0xe4c>
   48cb0:	ldr	ip, [fp, #-64]	; 0xffffffc0
   48cb4:	mov	r2, r9
   48cb8:	ldr	r0, [r4, #40]	; 0x28
   48cbc:	sub	r3, ip, #1
   48cc0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   48cc4:	add	r0, r0, r3
   48cc8:	bl	fb24 <memcpy@plt>
   48ccc:	ldr	ip, [fp, #-76]	; 0xffffffb4
   48cd0:	cmp	ip, #0
   48cd4:	beq	48cf4 <brlapiserver_writePacket@@Base+0xe74>
   48cd8:	ldr	ip, [fp, #-64]	; 0xffffffc0
   48cdc:	mov	r2, r9
   48ce0:	ldr	r0, [r4, #44]	; 0x2c
   48ce4:	sub	r3, ip, #1
   48ce8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   48cec:	add	r0, r0, r3
   48cf0:	bl	fb24 <memcpy@plt>
   48cf4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   48cf8:	mov	r3, #0
   48cfc:	mov	r0, r5
   48d00:	str	r3, [r4, #48]	; 0x30
   48d04:	cmp	ip, #0
   48d08:	strge	ip, [r4, #32]
   48d0c:	bl	fdf4 <pthread_mutex_unlock@plt>
   48d10:	b	48978 <brlapiserver_writePacket@@Base+0xaf8>
   48d14:	ldr	r1, [pc, #976]	; 490ec <brlapiserver_writePacket@@Base+0x126c>
   48d18:	mov	r0, #3
   48d1c:	mov	r2, #7
   48d20:	ldr	r3, [r4, #8]
   48d24:	add	r1, pc, r1
   48d28:	bl	1c634 <logMessage@@Base>
   48d2c:	ldr	r1, [pc, #956]	; 490f0 <brlapiserver_writePacket@@Base+0x1270>
   48d30:	ldr	r2, [pc, #956]	; 490f4 <brlapiserver_writePacket@@Base+0x1274>
   48d34:	mov	r0, #3
   48d38:	add	r1, pc, r1
   48d3c:	add	r2, pc, r2
   48d40:	b	4895c <brlapiserver_writePacket@@Base+0xadc>
   48d44:	ldr	r1, [pc, #940]	; 490f8 <brlapiserver_writePacket@@Base+0x1278>
   48d48:	mov	r0, #3
   48d4c:	mov	r2, #7
   48d50:	ldr	r3, [r4, #8]
   48d54:	add	r1, pc, r1
   48d58:	bl	1c634 <logMessage@@Base>
   48d5c:	ldr	r1, [pc, #920]	; 490fc <brlapiserver_writePacket@@Base+0x127c>
   48d60:	ldr	r2, [pc, #920]	; 49100 <brlapiserver_writePacket@@Base+0x1280>
   48d64:	mov	r0, #3
   48d68:	add	r1, pc, r1
   48d6c:	add	r2, pc, r2
   48d70:	b	4895c <brlapiserver_writePacket@@Base+0xadc>
   48d74:	ldr	r1, [pc, #904]	; 49104 <brlapiserver_writePacket@@Base+0x1284>
   48d78:	mov	r0, #3
   48d7c:	mov	r2, #7
   48d80:	ldr	r3, [r4, #8]
   48d84:	add	r1, pc, r1
   48d88:	bl	1c634 <logMessage@@Base>
   48d8c:	ldr	r1, [pc, #884]	; 49108 <brlapiserver_writePacket@@Base+0x1288>
   48d90:	ldr	r2, [pc, #884]	; 4910c <brlapiserver_writePacket@@Base+0x128c>
   48d94:	mov	r0, #3
   48d98:	add	r1, pc, r1
   48d9c:	add	r2, pc, r2
   48da0:	bl	1c634 <logMessage@@Base>
   48da4:	ldr	r0, [r4, #8]
   48da8:	mov	r2, r8
   48dac:	str	r5, [sp]
   48db0:	mov	r3, r6
   48db4:	mov	r1, #7
   48db8:	bl	480d4 <brlapiserver_writePacket@@Base+0x254>
   48dbc:	ldr	sp, [fp, #-88]	; 0xffffffa8
   48dc0:	b	48978 <brlapiserver_writePacket@@Base+0xaf8>
   48dc4:	ldr	r1, [pc, #836]	; 49110 <brlapiserver_writePacket@@Base+0x1290>
   48dc8:	mov	r0, #3
   48dcc:	ldr	r3, [r4, #8]
   48dd0:	mov	r2, #5
   48dd4:	add	r1, pc, r1
   48dd8:	bl	1c634 <logMessage@@Base>
   48ddc:	ldr	r1, [pc, #816]	; 49114 <brlapiserver_writePacket@@Base+0x1294>
   48de0:	ldr	r2, [pc, #816]	; 49118 <brlapiserver_writePacket@@Base+0x1298>
   48de4:	mov	r0, #3
   48de8:	add	r1, pc, r1
   48dec:	add	r2, pc, r2
   48df0:	bl	1c634 <logMessage@@Base>
   48df4:	ldr	r0, [r4, #8]
   48df8:	mov	r1, #5
   48dfc:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   48e00:	b	48978 <brlapiserver_writePacket@@Base+0xaf8>
   48e04:	ldr	r1, [pc, #784]	; 4911c <brlapiserver_writePacket@@Base+0x129c>
   48e08:	mov	r0, #3
   48e0c:	mov	r2, #7
   48e10:	ldr	r3, [r4, #8]
   48e14:	add	r1, pc, r1
   48e18:	bl	1c634 <logMessage@@Base>
   48e1c:	ldr	r1, [pc, #764]	; 49120 <brlapiserver_writePacket@@Base+0x12a0>
   48e20:	ldr	r2, [pc, #764]	; 49124 <brlapiserver_writePacket@@Base+0x12a4>
   48e24:	mov	r0, #3
   48e28:	add	r1, pc, r1
   48e2c:	add	r2, pc, r2
   48e30:	b	4895c <brlapiserver_writePacket@@Base+0xadc>
   48e34:	ldr	r1, [pc, #748]	; 49128 <brlapiserver_writePacket@@Base+0x12a8>
   48e38:	mov	r0, #3
   48e3c:	mov	r2, #7
   48e40:	ldr	r3, [r4, #8]
   48e44:	add	r1, pc, r1
   48e48:	bl	1c634 <logMessage@@Base>
   48e4c:	ldr	r1, [pc, #728]	; 4912c <brlapiserver_writePacket@@Base+0x12ac>
   48e50:	ldr	r2, [pc, #728]	; 49130 <brlapiserver_writePacket@@Base+0x12b0>
   48e54:	mov	r0, #3
   48e58:	add	r1, pc, r1
   48e5c:	add	r2, pc, r2
   48e60:	b	4895c <brlapiserver_writePacket@@Base+0xadc>
   48e64:	ldr	r1, [pc, #712]	; 49134 <brlapiserver_writePacket@@Base+0x12b4>
   48e68:	mov	r0, #3
   48e6c:	mov	r2, #7
   48e70:	ldr	r3, [r4, #8]
   48e74:	add	r1, pc, r1
   48e78:	bl	1c634 <logMessage@@Base>
   48e7c:	ldr	r1, [pc, #692]	; 49138 <brlapiserver_writePacket@@Base+0x12b8>
   48e80:	ldr	r2, [pc, #692]	; 4913c <brlapiserver_writePacket@@Base+0x12bc>
   48e84:	mov	r0, #3
   48e88:	add	r1, pc, r1
   48e8c:	add	r2, pc, r2
   48e90:	b	4895c <brlapiserver_writePacket@@Base+0xadc>
   48e94:	ldr	r1, [pc, #676]	; 49140 <brlapiserver_writePacket@@Base+0x12c0>
   48e98:	mov	r0, #3
   48e9c:	mov	r2, #7
   48ea0:	ldr	r3, [r4, #8]
   48ea4:	add	r1, pc, r1
   48ea8:	bl	1c634 <logMessage@@Base>
   48eac:	ldr	r1, [pc, #656]	; 49144 <brlapiserver_writePacket@@Base+0x12c4>
   48eb0:	ldr	r2, [pc, #656]	; 49148 <brlapiserver_writePacket@@Base+0x12c8>
   48eb4:	mov	r0, #3
   48eb8:	add	r1, pc, r1
   48ebc:	add	r2, pc, r2
   48ec0:	b	4895c <brlapiserver_writePacket@@Base+0xadc>
   48ec4:	ldr	r1, [pc, #640]	; 4914c <brlapiserver_writePacket@@Base+0x12cc>
   48ec8:	mov	r0, #3
   48ecc:	mov	r2, #7
   48ed0:	ldr	r3, [r4, #8]
   48ed4:	add	r1, pc, r1
   48ed8:	bl	1c634 <logMessage@@Base>
   48edc:	ldr	r1, [pc, #620]	; 49150 <brlapiserver_writePacket@@Base+0x12d0>
   48ee0:	ldr	r2, [pc, #620]	; 49154 <brlapiserver_writePacket@@Base+0x12d4>
   48ee4:	mov	r0, #3
   48ee8:	add	r1, pc, r1
   48eec:	add	r2, pc, r2
   48ef0:	b	4895c <brlapiserver_writePacket@@Base+0xadc>
   48ef4:	ldr	r1, [pc, #604]	; 49158 <brlapiserver_writePacket@@Base+0x12d8>
   48ef8:	mov	r0, #3
   48efc:	mov	r2, #7
   48f00:	ldr	r3, [r4, #8]
   48f04:	add	r1, pc, r1
   48f08:	bl	1c634 <logMessage@@Base>
   48f0c:	ldr	r1, [pc, #584]	; 4915c <brlapiserver_writePacket@@Base+0x12dc>
   48f10:	ldr	r2, [pc, #584]	; 49160 <brlapiserver_writePacket@@Base+0x12e0>
   48f14:	mov	r0, #3
   48f18:	add	r1, pc, r1
   48f1c:	add	r2, pc, r2
   48f20:	b	48da0 <brlapiserver_writePacket@@Base+0xf20>
   48f24:	ldr	r1, [pc, #568]	; 49164 <brlapiserver_writePacket@@Base+0x12e4>
   48f28:	mov	r0, #3
   48f2c:	mov	r2, #7
   48f30:	ldr	r3, [r4, #8]
   48f34:	add	r1, pc, r1
   48f38:	bl	1c634 <logMessage@@Base>
   48f3c:	ldr	r1, [pc, #548]	; 49168 <brlapiserver_writePacket@@Base+0x12e8>
   48f40:	ldr	r2, [pc, #548]	; 4916c <brlapiserver_writePacket@@Base+0x12ec>
   48f44:	mov	r0, #3
   48f48:	add	r1, pc, r1
   48f4c:	add	r2, pc, r2
   48f50:	b	48da0 <brlapiserver_writePacket@@Base+0xf20>
   48f54:	ldr	r1, [pc, #532]	; 49170 <brlapiserver_writePacket@@Base+0x12f0>
   48f58:	mov	r0, #3
   48f5c:	mov	r2, #7
   48f60:	ldr	r3, [r4, #8]
   48f64:	add	r1, pc, r1
   48f68:	bl	1c634 <logMessage@@Base>
   48f6c:	ldr	r1, [pc, #512]	; 49174 <brlapiserver_writePacket@@Base+0x12f4>
   48f70:	ldr	r2, [pc, #512]	; 49178 <brlapiserver_writePacket@@Base+0x12f8>
   48f74:	mov	r0, #3
   48f78:	add	r1, pc, r1
   48f7c:	add	r2, pc, r2
   48f80:	b	48da0 <brlapiserver_writePacket@@Base+0xf20>
   48f84:	add	r5, r4, #72	; 0x48
   48f88:	mov	r0, r5
   48f8c:	bl	f3f8 <pthread_mutex_lock@plt>
   48f90:	b	48ca4 <brlapiserver_writePacket@@Base+0xe24>
   48f94:	ldr	ip, [fp, #-64]	; 0xffffffc0
   48f98:	mov	r1, #255	; 0xff
   48f9c:	ldr	r0, [r4, #40]	; 0x28
   48fa0:	mov	r2, r9
   48fa4:	sub	r3, ip, #1
   48fa8:	add	r0, r0, r3
   48fac:	bl	f6b0 <memset@plt>
   48fb0:	b	48c98 <brlapiserver_writePacket@@Base+0xe18>
   48fb4:	mov	r0, r3
   48fb8:	str	ip, [fp, #-96]	; 0xffffffa0
   48fbc:	bl	28530 <lockCharset@@Base>
   48fc0:	bl	28528 <getCharset@@Base>
   48fc4:	ldr	ip, [fp, #-96]	; 0xffffffa0
   48fc8:	subs	r3, r0, #0
   48fcc:	strne	r3, [fp, #-92]	; 0xffffffa4
   48fd0:	bne	48b94 <brlapiserver_writePacket@@Base+0xd14>
   48fd4:	add	r5, r4, #72	; 0x48
   48fd8:	str	r3, [fp, #-100]	; 0xffffff9c
   48fdc:	bl	28560 <unlockCharset@@Base>
   48fe0:	mov	r0, r5
   48fe4:	bl	f3f8 <pthread_mutex_lock@plt>
   48fe8:	cmp	r9, #0
   48fec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   48ff0:	ldrne	r0, [fp, #-64]	; 0xffffffc0
   48ff4:	ldr	ip, [fp, #-96]	; 0xffffffa0
   48ff8:	movne	r2, r3
   48ffc:	subne	lr, r0, #-1073741823	; 0xc0000001
   49000:	beq	48c8c <brlapiserver_writePacket@@Base+0xe0c>
   49004:	add	r2, r2, #1
   49008:	ldrb	r6, [ip, r3]
   4900c:	ldr	r1, [r4, #36]	; 0x24
   49010:	add	r0, r3, lr
   49014:	cmp	r2, r9
   49018:	mov	r3, r2
   4901c:	str	r6, [r1, r0, lsl #2]
   49020:	bne	49004 <brlapiserver_writePacket@@Base+0x1184>
   49024:	b	48c8c <brlapiserver_writePacket@@Base+0xe0c>
   49028:	ldr	r1, [pc, #332]	; 4917c <brlapiserver_writePacket@@Base+0x12fc>
   4902c:	mov	r0, #3
   49030:	mov	r2, #7
   49034:	ldr	r3, [r4, #8]
   49038:	add	r1, pc, r1
   4903c:	bl	1c634 <logMessage@@Base>
   49040:	ldr	r1, [pc, #312]	; 49180 <brlapiserver_writePacket@@Base+0x1300>
   49044:	ldr	r2, [pc, #312]	; 49184 <brlapiserver_writePacket@@Base+0x1304>
   49048:	mov	r0, #3
   4904c:	add	r1, pc, r1
   49050:	add	r2, pc, r2
   49054:	b	4895c <brlapiserver_writePacket@@Base+0xadc>
   49058:	ldr	ip, [fp, #-64]	; 0xffffffc0
   4905c:	mov	r2, r9
   49060:	ldr	r0, [r4, #44]	; 0x2c
   49064:	sub	r3, ip, #1
   49068:	ldr	r1, [fp, #-76]	; 0xffffffb4
   4906c:	add	r0, r0, r3
   49070:	bl	f6b0 <memset@plt>
   49074:	b	48ca4 <brlapiserver_writePacket@@Base+0xe24>
   49078:	bl	f950 <__stack_chk_fail@plt>
   4907c:	ldrdeq	sl, [r2], -ip
   49080:			; <UNDEFINED> instruction: 0x000003b4
   49084:	andeq	fp, r2, r0, ror #15
   49088:	andeq	fp, r2, r4, lsr r7
   4908c:	andeq	r2, r1, ip, asr #8
   49090:			; <UNDEFINED> instruction: 0x000129b0
   49094:	andeq	r2, r1, r8, asr #19
   49098:	andeq	r2, r1, ip, lsl r4
   4909c:	andeq	r2, r1, r8, ror #13
   490a0:	andeq	r2, r1, ip, lsl #14
   490a4:	muleq	r1, ip, r3
   490a8:			; <UNDEFINED> instruction: 0x000126b0
   490ac:	ldrdeq	r2, [r1], -ip
   490b0:	andeq	r2, r1, r0, asr r3
   490b4:	andeq	r2, r1, r8, lsl #14
   490b8:	andeq	r2, r1, r0, lsr #14
   490bc:	andeq	r2, r1, r8, ror #7
   490c0:	andeq	r2, r1, ip, lsr r3
   490c4:	andeq	r2, r1, ip, asr r3
   490c8:	andeq	r2, r1, r8, ror #13
   490cc:	andeq	fp, r2, ip, ror #10
   490d0:	andeq	r2, r1, ip, lsr r2
   490d4:	andeq	r2, r1, r0, asr r8
   490d8:	andeq	r2, r1, r8, ror r8
   490dc:	andeq	r2, r1, ip, lsl #4
   490e0:	andeq	r2, r1, ip, ror r5
   490e4:	andeq	r2, r1, r0, lsr #11
   490e8:	andeq	r2, r1, r0, lsl r9
   490ec:	andeq	r2, r1, r8, lsr r0
   490f0:	andeq	r2, r1, r4, ror r5
   490f4:			; <UNDEFINED> instruction: 0x000124b0
   490f8:	andeq	r2, r1, r8
   490fc:	muleq	r1, ip, r5
   49100:			; <UNDEFINED> instruction: 0x000125bc
   49104:	ldrdeq	r1, [r1], -r8
   49108:			; <UNDEFINED> instruction: 0x000126b8
   4910c:	ldrdeq	r2, [r1], -ip
   49110:	andeq	r2, r1, ip, rrx
   49114:	andeq	r1, r1, ip, ror #31
   49118:	andeq	r2, r1, r0, lsl r0
   4911c:	andeq	r1, r1, r8, asr #30
   49120:	muleq	r1, r4, r3
   49124:	andeq	r2, r1, r0, asr #7
   49128:	andeq	r1, r1, r8, lsl pc
   4912c:	andeq	r2, r1, ip, ror #7
   49130:	andeq	r2, r1, r4, lsl r4
   49134:	andeq	r1, r1, r8, ror #29
   49138:	andeq	r2, r1, r0, lsl #7
   4913c:	andeq	r2, r1, r4, lsr #7
   49140:			; <UNDEFINED> instruction: 0x00011eb8
   49144:	andeq	r2, r1, r8, asr #7
   49148:			; <UNDEFINED> instruction: 0x000123b4
   4914c:	andeq	r1, r1, r8, lsl #29
   49150:	andeq	r2, r1, r0, ror #9
   49154:	strdeq	r2, [r1], -r8
   49158:	andeq	r1, r1, r8, asr lr
   4915c:	andeq	r2, r1, r4, ror r5
   49160:	andeq	r2, r1, ip, lsl #11
   49164:	andeq	r1, r1, r8, lsr #28
   49168:	andeq	r2, r1, r8, ror #10
   4916c:	andeq	r2, r1, r0, lsl #11
   49170:	strdeq	r1, [r1], -r8
   49174:	andeq	r2, r1, ip, ror r4
   49178:	muleq	r1, r4, r4
   4917c:	andeq	r1, r1, r4, lsr #26
   49180:	strdeq	r2, [r1], -r8
   49184:	andeq	r2, r1, r4, lsr #6
   49188:	push	{r4, r5, r6, lr}
   4918c:	mov	r4, r0
   49190:	ldr	r3, [r0, #24]
   49194:	cmp	r3, #0
   49198:	beq	49204 <brlapiserver_writePacket@@Base+0x1384>
   4919c:	ldr	r5, [pc, #176]	; 49254 <brlapiserver_writePacket@@Base+0x13d4>
   491a0:	add	r5, pc, r5
   491a4:	add	r6, r5, #68	; 0x44
   491a8:	mov	r0, r6
   491ac:	bl	f3f8 <pthread_mutex_lock@plt>
   491b0:	mov	r3, #0
   491b4:	mov	r0, r6
   491b8:	str	r3, [r4, #24]
   491bc:	str	r3, [r5, #96]	; 0x60
   491c0:	bl	fdf4 <pthread_mutex_unlock@plt>
   491c4:	add	r0, r5, #104	; 0x68
   491c8:	bl	f3f8 <pthread_mutex_lock@plt>
   491cc:	ldr	r3, [r5, #168]	; 0xa8
   491d0:	cmp	r3, #0
   491d4:	beq	49248 <brlapiserver_writePacket@@Base+0x13c8>
   491d8:	ldr	r0, [pc, #120]	; 49258 <brlapiserver_writePacket@@Base+0x13d8>
   491dc:	add	r0, pc, r0
   491e0:	add	r0, r0, #104	; 0x68
   491e4:	bl	fdf4 <pthread_mutex_unlock@plt>
   491e8:	mov	r2, #0
   491ec:	ldr	r0, [r4, #8]
   491f0:	mov	r3, r2
   491f4:	mov	r1, #65	; 0x41
   491f8:	bl	47e80 <brlapiserver_writePacket@@Base>
   491fc:	mov	r0, #0
   49200:	pop	{r4, r5, r6, pc}
   49204:	ldr	r1, [pc, #80]	; 4925c <brlapiserver_writePacket@@Base+0x13dc>
   49208:	mov	r0, #3
   4920c:	ldr	r3, [r4, #8]
   49210:	mov	r2, #5
   49214:	add	r1, pc, r1
   49218:	bl	1c634 <logMessage@@Base>
   4921c:	ldr	r1, [pc, #60]	; 49260 <brlapiserver_writePacket@@Base+0x13e0>
   49220:	ldr	r2, [pc, #60]	; 49264 <brlapiserver_writePacket@@Base+0x13e4>
   49224:	mov	r0, #3
   49228:	add	r1, pc, r1
   4922c:	add	r2, pc, r2
   49230:	bl	1c634 <logMessage@@Base>
   49234:	ldr	r0, [r4, #8]
   49238:	mov	r1, #5
   4923c:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49240:	mov	r0, #0
   49244:	pop	{r4, r5, r6, pc}
   49248:	ldr	r0, [r5, #140]	; 0x8c
   4924c:	bl	4717c <processSpeechInput@@Base+0x468>
   49250:	b	491d8 <brlapiserver_writePacket@@Base+0x1358>
   49254:	andeq	sl, r2, r0, ror lr
   49258:	andeq	sl, r2, r4, lsr lr
   4925c:	andeq	r1, r1, ip, lsr #24
   49260:			; <UNDEFINED> instruction: 0x000122b8
   49264:	andeq	r2, r1, r0, ror #5
   49268:	push	{r4, r5, r6, lr}
   4926c:	mov	r1, r2
   49270:	mov	r4, r0
   49274:	mov	r2, r3
   49278:	add	r0, r0, #8
   4927c:	bl	485a8 <brlapiserver_writePacket@@Base+0x728>
   49280:	cmp	r0, #0
   49284:	beq	49314 <brlapiserver_writePacket@@Base+0x1494>
   49288:	ldr	r3, [r4, #24]
   4928c:	cmp	r3, #0
   49290:	bne	4931c <brlapiserver_writePacket@@Base+0x149c>
   49294:	ldr	r5, [pc, #308]	; 493d0 <brlapiserver_writePacket@@Base+0x1550>
   49298:	add	r5, pc, r5
   4929c:	add	r6, r5, #68	; 0x44
   492a0:	mov	r0, r6
   492a4:	bl	f3f8 <pthread_mutex_lock@plt>
   492a8:	ldr	r3, [r5, #96]	; 0x60
   492ac:	cmp	r3, #0
   492b0:	beq	49360 <brlapiserver_writePacket@@Base+0x14e0>
   492b4:	ldr	r1, [pc, #280]	; 493d4 <brlapiserver_writePacket@@Base+0x1554>
   492b8:	mov	r0, #3
   492bc:	ldr	r3, [r4, #8]
   492c0:	mov	r2, r0
   492c4:	add	r1, pc, r1
   492c8:	bl	1c634 <logMessage@@Base>
   492cc:	ldr	r3, [pc, #260]	; 493d8 <brlapiserver_writePacket@@Base+0x1558>
   492d0:	add	r3, pc, r3
   492d4:	ldr	r3, [r3, #100]	; 0x64
   492d8:	cmp	r3, #0
   492dc:	beq	493bc <brlapiserver_writePacket@@Base+0x153c>
   492e0:	ldr	r2, [pc, #244]	; 493dc <brlapiserver_writePacket@@Base+0x155c>
   492e4:	add	r2, pc, r2
   492e8:	ldr	r1, [pc, #240]	; 493e0 <brlapiserver_writePacket@@Base+0x1560>
   492ec:	mov	r0, #3
   492f0:	add	r1, pc, r1
   492f4:	bl	1c634 <logMessage@@Base>
   492f8:	ldr	r0, [r4, #8]
   492fc:	mov	r1, #3
   49300:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49304:	ldr	r0, [pc, #216]	; 493e4 <brlapiserver_writePacket@@Base+0x1564>
   49308:	add	r0, pc, r0
   4930c:	add	r0, r0, #68	; 0x44
   49310:	bl	fdf4 <pthread_mutex_unlock@plt>
   49314:	mov	r0, #0
   49318:	pop	{r4, r5, r6, pc}
   4931c:	ldr	r1, [pc, #196]	; 493e8 <brlapiserver_writePacket@@Base+0x1568>
   49320:	mov	r0, #3
   49324:	ldr	r3, [r4, #8]
   49328:	mov	r2, #5
   4932c:	add	r1, pc, r1
   49330:	bl	1c634 <logMessage@@Base>
   49334:	ldr	r1, [pc, #176]	; 493ec <brlapiserver_writePacket@@Base+0x156c>
   49338:	ldr	r2, [pc, #176]	; 493f0 <brlapiserver_writePacket@@Base+0x1570>
   4933c:	mov	r0, #3
   49340:	add	r1, pc, r1
   49344:	add	r2, pc, r2
   49348:	bl	1c634 <logMessage@@Base>
   4934c:	ldr	r0, [r4, #8]
   49350:	mov	r1, #5
   49354:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49358:	mov	r0, #0
   4935c:	pop	{r4, r5, r6, pc}
   49360:	ldr	r3, [r5, #100]	; 0x64
   49364:	cmp	r3, #0
   49368:	bne	492b4 <brlapiserver_writePacket@@Base+0x1434>
   4936c:	mov	r3, #1
   49370:	mov	r0, r6
   49374:	str	r3, [r4, #24]
   49378:	str	r4, [r5, #96]	; 0x60
   4937c:	bl	fdf4 <pthread_mutex_unlock@plt>
   49380:	add	r0, r5, #104	; 0x68
   49384:	bl	f3f8 <pthread_mutex_lock@plt>
   49388:	ldr	r3, [r5, #168]	; 0xa8
   4938c:	cmp	r3, #0
   49390:	bne	493c8 <brlapiserver_writePacket@@Base+0x1548>
   49394:	ldr	r0, [pc, #88]	; 493f4 <brlapiserver_writePacket@@Base+0x1574>
   49398:	add	r0, pc, r0
   4939c:	add	r0, r0, #104	; 0x68
   493a0:	bl	fdf4 <pthread_mutex_unlock@plt>
   493a4:	mov	r2, #0
   493a8:	ldr	r0, [r4, #8]
   493ac:	mov	r3, r2
   493b0:	mov	r1, #65	; 0x41
   493b4:	bl	47e80 <brlapiserver_writePacket@@Base>
   493b8:	b	49314 <brlapiserver_writePacket@@Base+0x1494>
   493bc:	ldr	r2, [pc, #52]	; 493f8 <brlapiserver_writePacket@@Base+0x1578>
   493c0:	add	r2, pc, r2
   493c4:	b	492e8 <brlapiserver_writePacket@@Base+0x1468>
   493c8:	bl	47314 <processSpeechInput@@Base+0x600>
   493cc:	b	49394 <brlapiserver_writePacket@@Base+0x1514>
   493d0:	andeq	sl, r2, r8, ror sp
   493d4:	andeq	r1, r1, ip, ror fp
   493d8:	andeq	sl, r2, r0, asr #26
   493dc:	andeq	r1, r1, ip, ror #21
   493e0:	andeq	r2, r1, ip, asr r2
   493e4:	andeq	sl, r2, r8, lsl #26
   493e8:	andeq	r1, r1, r4, lsl fp
   493ec:	ldrdeq	r2, [r1], -r8
   493f0:	strdeq	r2, [r1], -ip
   493f4:	andeq	sl, r2, r8, ror ip
   493f8:	andeq	r2, r1, r4, lsl #3
   493fc:	push	{r3, r4, r5, r6, r7, lr}
   49400:	mov	r4, r0
   49404:	ldr	r3, [r0, #20]
   49408:	cmp	r3, #0
   4940c:	beq	49464 <brlapiserver_writePacket@@Base+0x15e4>
   49410:	ldr	r7, [pc, #144]	; 494a8 <brlapiserver_writePacket@@Base+0x1628>
   49414:	mov	r0, #7
   49418:	ldr	r1, [pc, #140]	; 494ac <brlapiserver_writePacket@@Base+0x162c>
   4941c:	mov	r5, #0
   49420:	add	r7, pc, r7
   49424:	add	r6, r7, #68	; 0x44
   49428:	add	r1, pc, r1
   4942c:	bl	1c634 <logMessage@@Base>
   49430:	mov	r0, r6
   49434:	bl	f3f8 <pthread_mutex_lock@plt>
   49438:	mov	r0, r6
   4943c:	str	r5, [r4, #20]
   49440:	str	r5, [r7, #100]	; 0x64
   49444:	bl	fdf4 <pthread_mutex_unlock@plt>
   49448:	mov	r2, r5
   4944c:	ldr	r0, [r4, #8]
   49450:	mov	r3, r5
   49454:	mov	r1, #65	; 0x41
   49458:	bl	47e80 <brlapiserver_writePacket@@Base>
   4945c:	mov	r0, #0
   49460:	pop	{r3, r4, r5, r6, r7, pc}
   49464:	ldr	r1, [pc, #68]	; 494b0 <brlapiserver_writePacket@@Base+0x1630>
   49468:	mov	r0, #3
   4946c:	ldr	r3, [r4, #8]
   49470:	mov	r2, #5
   49474:	add	r1, pc, r1
   49478:	bl	1c634 <logMessage@@Base>
   4947c:	ldr	r1, [pc, #48]	; 494b4 <brlapiserver_writePacket@@Base+0x1634>
   49480:	ldr	r2, [pc, #48]	; 494b8 <brlapiserver_writePacket@@Base+0x1638>
   49484:	mov	r0, #3
   49488:	add	r1, pc, r1
   4948c:	add	r2, pc, r2
   49490:	bl	1c634 <logMessage@@Base>
   49494:	ldr	r0, [r4, #8]
   49498:	mov	r1, #5
   4949c:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   494a0:	mov	r0, #0
   494a4:	pop	{r3, r4, r5, r6, r7, pc}
   494a8:	strdeq	sl, [r2], -r0
   494ac:	andeq	r2, r1, r8, lsr r1
   494b0:	andeq	r1, r1, ip, asr #19
   494b4:	strdeq	r1, [r1], -r0
   494b8:	andeq	r1, r1, r4, lsl r9
   494bc:	push	{r3, r4, r5, lr}
   494c0:	mov	r4, r0
   494c4:	ldr	r0, [r0, #20]
   494c8:	cmp	r0, #0
   494cc:	bne	49594 <brlapiserver_writePacket@@Base+0x1714>
   494d0:	mov	r1, r2
   494d4:	add	r0, r4, #8
   494d8:	mov	r2, r3
   494dc:	bl	485a8 <brlapiserver_writePacket@@Base+0x728>
   494e0:	cmp	r0, #0
   494e4:	beq	4958c <brlapiserver_writePacket@@Base+0x170c>
   494e8:	ldr	r5, [pc, #512]	; 496f0 <brlapiserver_writePacket@@Base+0x1870>
   494ec:	add	r5, pc, r5
   494f0:	ldr	r3, [r5, #128]	; 0x80
   494f4:	ldr	r2, [r3, #56]	; 0x38
   494f8:	cmp	r2, #0
   494fc:	beq	4964c <brlapiserver_writePacket@@Base+0x17cc>
   49500:	ldr	r2, [r3, #60]	; 0x3c
   49504:	cmp	r2, #0
   49508:	beq	4964c <brlapiserver_writePacket@@Base+0x17cc>
   4950c:	ldr	r3, [r3, #64]	; 0x40
   49510:	cmp	r3, #0
   49514:	beq	4964c <brlapiserver_writePacket@@Base+0x17cc>
   49518:	add	r0, r5, #68	; 0x44
   4951c:	bl	f3f8 <pthread_mutex_lock@plt>
   49520:	ldr	r3, [r5, #100]	; 0x64
   49524:	cmp	r3, #0
   49528:	beq	495d8 <brlapiserver_writePacket@@Base+0x1758>
   4952c:	ldr	r1, [pc, #448]	; 496f4 <brlapiserver_writePacket@@Base+0x1874>
   49530:	mov	r0, #3
   49534:	ldr	r3, [r4, #8]
   49538:	mov	r2, r0
   4953c:	add	r1, pc, r1
   49540:	bl	1c634 <logMessage@@Base>
   49544:	ldr	r3, [pc, #428]	; 496f8 <brlapiserver_writePacket@@Base+0x1878>
   49548:	add	r3, pc, r3
   4954c:	ldr	r3, [r3, #100]	; 0x64
   49550:	cmp	r3, #0
   49554:	beq	49690 <brlapiserver_writePacket@@Base+0x1810>
   49558:	ldr	r2, [pc, #412]	; 496fc <brlapiserver_writePacket@@Base+0x187c>
   4955c:	add	r2, pc, r2
   49560:	ldr	r1, [pc, #408]	; 49700 <brlapiserver_writePacket@@Base+0x1880>
   49564:	mov	r0, #3
   49568:	add	r1, pc, r1
   4956c:	bl	1c634 <logMessage@@Base>
   49570:	ldr	r0, [r4, #8]
   49574:	mov	r1, #3
   49578:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4957c:	ldr	r0, [pc, #384]	; 49704 <brlapiserver_writePacket@@Base+0x1884>
   49580:	add	r0, pc, r0
   49584:	add	r0, r0, #68	; 0x44
   49588:	bl	fdf4 <pthread_mutex_unlock@plt>
   4958c:	mov	r0, #0
   49590:	pop	{r3, r4, r5, pc}
   49594:	ldr	r1, [pc, #364]	; 49708 <brlapiserver_writePacket@@Base+0x1888>
   49598:	mov	r0, #3
   4959c:	ldr	r3, [r4, #8]
   495a0:	mov	r2, #5
   495a4:	add	r1, pc, r1
   495a8:	bl	1c634 <logMessage@@Base>
   495ac:	ldr	r1, [pc, #344]	; 4970c <brlapiserver_writePacket@@Base+0x188c>
   495b0:	ldr	r2, [pc, #344]	; 49710 <brlapiserver_writePacket@@Base+0x1890>
   495b4:	mov	r0, #3
   495b8:	add	r1, pc, r1
   495bc:	add	r2, pc, r2
   495c0:	bl	1c634 <logMessage@@Base>
   495c4:	ldr	r0, [r4, #8]
   495c8:	mov	r1, #5
   495cc:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   495d0:	mov	r0, #0
   495d4:	pop	{r3, r4, r5, pc}
   495d8:	ldr	r3, [r5, #96]	; 0x60
   495dc:	cmp	r3, #0
   495e0:	bne	4952c <brlapiserver_writePacket@@Base+0x16ac>
   495e4:	add	r0, r5, #104	; 0x68
   495e8:	bl	f3f8 <pthread_mutex_lock@plt>
   495ec:	ldr	r3, [r5, #168]	; 0xa8
   495f0:	cmp	r3, #0
   495f4:	bne	49610 <brlapiserver_writePacket@@Base+0x1790>
   495f8:	ldr	r0, [r5, #140]	; 0x8c
   495fc:	cmp	r0, #0
   49600:	beq	4969c <brlapiserver_writePacket@@Base+0x181c>
   49604:	bl	4717c <processSpeechInput@@Base+0x468>
   49608:	cmp	r0, #0
   4960c:	beq	4969c <brlapiserver_writePacket@@Base+0x181c>
   49610:	ldr	r5, [pc, #252]	; 49714 <brlapiserver_writePacket@@Base+0x1894>
   49614:	add	r5, pc, r5
   49618:	add	r0, r5, #104	; 0x68
   4961c:	bl	fdf4 <pthread_mutex_unlock@plt>
   49620:	mov	r3, #1
   49624:	add	r0, r5, #68	; 0x44
   49628:	str	r3, [r4, #20]
   4962c:	str	r4, [r5, #100]	; 0x64
   49630:	bl	fdf4 <pthread_mutex_unlock@plt>
   49634:	mov	r2, #0
   49638:	ldr	r0, [r4, #8]
   4963c:	mov	r3, r2
   49640:	mov	r1, #65	; 0x41
   49644:	bl	47e80 <brlapiserver_writePacket@@Base>
   49648:	b	4958c <brlapiserver_writePacket@@Base+0x170c>
   4964c:	ldr	r1, [pc, #196]	; 49718 <brlapiserver_writePacket@@Base+0x1898>
   49650:	mov	r0, #3
   49654:	ldr	r3, [r4, #8]
   49658:	mov	r2, #9
   4965c:	add	r1, pc, r1
   49660:	bl	1c634 <logMessage@@Base>
   49664:	ldr	r1, [pc, #176]	; 4971c <brlapiserver_writePacket@@Base+0x189c>
   49668:	ldr	r2, [pc, #176]	; 49720 <brlapiserver_writePacket@@Base+0x18a0>
   4966c:	mov	r0, #3
   49670:	add	r1, pc, r1
   49674:	add	r2, pc, r2
   49678:	bl	1c634 <logMessage@@Base>
   4967c:	ldr	r0, [r4, #8]
   49680:	mov	r1, #9
   49684:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49688:	mov	r0, #0
   4968c:	pop	{r3, r4, r5, pc}
   49690:	ldr	r2, [pc, #140]	; 49724 <brlapiserver_writePacket@@Base+0x18a4>
   49694:	add	r2, pc, r2
   49698:	b	49560 <brlapiserver_writePacket@@Base+0x16e0>
   4969c:	ldr	r1, [pc, #132]	; 49728 <brlapiserver_writePacket@@Base+0x18a8>
   496a0:	mov	r2, #16
   496a4:	ldr	r3, [r4, #8]
   496a8:	mov	r0, #3
   496ac:	add	r1, pc, r1
   496b0:	ldr	r5, [pc, #116]	; 4972c <brlapiserver_writePacket@@Base+0x18ac>
   496b4:	bl	1c634 <logMessage@@Base>
   496b8:	ldr	r1, [pc, #112]	; 49730 <brlapiserver_writePacket@@Base+0x18b0>
   496bc:	mov	r0, #3
   496c0:	add	r5, pc, r5
   496c4:	add	r1, pc, r1
   496c8:	bl	1c634 <logMessage@@Base>
   496cc:	ldr	r0, [r4, #8]
   496d0:	mov	r1, #16
   496d4:	mov	r4, r5
   496d8:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   496dc:	add	r0, r5, #104	; 0x68
   496e0:	bl	fdf4 <pthread_mutex_unlock@plt>
   496e4:	add	r0, r5, #68	; 0x44
   496e8:	bl	fdf4 <pthread_mutex_unlock@plt>
   496ec:	b	4958c <brlapiserver_writePacket@@Base+0x170c>
   496f0:	andeq	sl, r2, r4, lsr #22
   496f4:	andeq	r1, r1, r4, lsl #18
   496f8:	andeq	sl, r2, r8, asr #21
   496fc:	andeq	r1, r1, r4, ror r8
   49700:	andeq	r1, r1, r4, ror #31
   49704:	muleq	r2, r0, sl
   49708:	muleq	r1, ip, r8
   4970c:	strdeq	r1, [r1], -r0
   49710:	andeq	r1, r1, r0, lsl r8
   49714:	strdeq	sl, [r2], -ip
   49718:	andeq	r1, r1, r4, ror #15
   4971c:	andeq	r1, r1, ip, lsl pc
   49720:	andeq	r1, r1, r4, asr #30
   49724:			; <UNDEFINED> instruction: 0x00011eb0
   49728:	muleq	r1, r4, r7
   4972c:	andeq	sl, r2, r0, asr r9
   49730:			; <UNDEFINED> instruction: 0x00011eb4
   49734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   49738:	mov	r9, r1
   4973c:	ldr	r1, [r0, #20]
   49740:	sub	sp, sp, #44	; 0x2c
   49744:	mov	fp, r0
   49748:	mov	r5, r2
   4974c:	cmp	r1, #0
   49750:	mov	r4, r3
   49754:	bne	49928 <brlapiserver_writePacket@@Base+0x1aa8>
   49758:	ldr	r3, [r0, #16]
   4975c:	cmp	r3, #0
   49760:	beq	49970 <brlapiserver_writePacket@@Base+0x1af0>
   49764:	and	r8, r4, #1
   49768:	lsls	r8, r8, #3
   4976c:	bne	498a8 <brlapiserver_writePacket@@Base+0x1a28>
   49770:	add	ip, r0, #100	; 0x64
   49774:	str	ip, [sp, #32]
   49778:	mov	r0, ip
   4977c:	bl	f3f8 <pthread_mutex_lock@plt>
   49780:	lsrs	r4, r4, #4
   49784:	str	r4, [sp, #28]
   49788:	beq	499b0 <brlapiserver_writePacket@@Base+0x1b30>
   4978c:	ldr	ip, [pc, #552]	; 499bc <brlapiserver_writePacket@@Base+0x1b3c>
   49790:	mov	sl, r5
   49794:	str	fp, [sp, #36]	; 0x24
   49798:	add	ip, pc, ip
   4979c:	str	r9, [sp, #20]
   497a0:	str	ip, [sp, #16]
   497a4:	add	ip, fp, #96	; 0x60
   497a8:	mov	fp, r8
   497ac:	str	ip, [sp, #24]
   497b0:	b	497d4 <brlapiserver_writePacket@@Base+0x1954>
   497b4:	bl	4d27c <addKeyrange@@Base>
   497b8:	add	fp, fp, #1
   497bc:	add	sl, sl, #16
   497c0:	cmn	r0, #1
   497c4:	beq	4985c <brlapiserver_writePacket@@Base+0x19dc>
   497c8:	ldr	ip, [sp, #28]
   497cc:	cmp	fp, ip
   497d0:	beq	498f0 <brlapiserver_writePacket@@Base+0x1a70>
   497d4:	ldr	lr, [sl]
   497d8:	mov	r6, #0
   497dc:	ldr	r2, [sl, #8]
   497e0:	mov	r0, #7
   497e4:	ldr	r3, [sl, #4]
   497e8:	rev	r7, lr
   497ec:	rev	r2, r2
   497f0:	ldr	lr, [sl, #12]
   497f4:	str	r2, [sp, #12]
   497f8:	rev	r3, r3
   497fc:	str	r6, [sp, #8]
   49800:	orr	r8, r6, r3
   49804:	ldrd	r4, [sp, #8]
   49808:	rev	lr, lr
   4980c:	ldr	r1, [sp, #16]
   49810:	mov	r2, r8
   49814:	orr	r4, r4, lr
   49818:	mov	r3, r7
   4981c:	strd	r4, [sp]
   49820:	bl	1c634 <logMessage@@Base>
   49824:	ldr	ip, [sp, #20]
   49828:	mov	r0, r8
   4982c:	mov	r1, r7
   49830:	cmp	ip, #109	; 0x6d
   49834:	ldr	ip, [sp, #24]
   49838:	mov	r2, r4
   4983c:	mov	r3, r5
   49840:	str	ip, [sp]
   49844:	bne	497b4 <brlapiserver_writePacket@@Base+0x1934>
   49848:	bl	4d46c <removeKeyrange@@Base>
   4984c:	add	fp, fp, #1
   49850:	add	sl, sl, #16
   49854:	cmn	r0, #1
   49858:	bne	497c8 <brlapiserver_writePacket@@Base+0x1948>
   4985c:	ldr	fp, [sp, #36]	; 0x24
   49860:	mov	r2, #1
   49864:	ldr	r1, [pc, #340]	; 499c0 <brlapiserver_writePacket@@Base+0x1b40>
   49868:	mov	r0, #3
   4986c:	ldr	r3, [fp, #8]
   49870:	add	r1, pc, r1
   49874:	bl	1c634 <logMessage@@Base>
   49878:	ldr	r1, [pc, #324]	; 499c4 <brlapiserver_writePacket@@Base+0x1b44>
   4987c:	mov	r0, #3
   49880:	add	r1, pc, r1
   49884:	bl	1c634 <logMessage@@Base>
   49888:	ldr	r0, [fp, #8]
   4988c:	mov	r1, #1
   49890:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49894:	ldr	r0, [sp, #32]
   49898:	bl	fdf4 <pthread_mutex_unlock@plt>
   4989c:	mov	r0, #0
   498a0:	add	sp, sp, #44	; 0x2c
   498a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   498a8:	ldr	r1, [pc, #280]	; 499c8 <brlapiserver_writePacket@@Base+0x1b48>
   498ac:	mov	r0, #3
   498b0:	mov	r2, #7
   498b4:	ldr	r3, [fp, #8]
   498b8:	add	r1, pc, r1
   498bc:	bl	1c634 <logMessage@@Base>
   498c0:	ldr	r1, [pc, #260]	; 499cc <brlapiserver_writePacket@@Base+0x1b4c>
   498c4:	ldr	r2, [pc, #260]	; 499d0 <brlapiserver_writePacket@@Base+0x1b50>
   498c8:	mov	r0, #3
   498cc:	add	r1, pc, r1
   498d0:	add	r2, pc, r2
   498d4:	bl	1c634 <logMessage@@Base>
   498d8:	ldr	r0, [fp, #8]
   498dc:	mov	r1, #7
   498e0:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   498e4:	mov	r0, #0
   498e8:	add	sp, sp, #44	; 0x2c
   498ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   498f0:	mov	r4, r0
   498f4:	ldr	r0, [sp, #32]
   498f8:	ldr	fp, [sp, #36]	; 0x24
   498fc:	bl	fdf4 <pthread_mutex_unlock@plt>
   49900:	cmp	r4, #0
   49904:	bne	498e4 <brlapiserver_writePacket@@Base+0x1a64>
   49908:	mov	r2, #0
   4990c:	ldr	r0, [fp, #8]
   49910:	mov	r3, r2
   49914:	mov	r1, #65	; 0x41
   49918:	bl	47e80 <brlapiserver_writePacket@@Base>
   4991c:	mov	r0, #0
   49920:	add	sp, sp, #44	; 0x2c
   49924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49928:	ldr	r1, [pc, #164]	; 499d4 <brlapiserver_writePacket@@Base+0x1b54>
   4992c:	mov	r0, #3
   49930:	ldr	r3, [fp, #8]
   49934:	mov	r2, #5
   49938:	add	r1, pc, r1
   4993c:	bl	1c634 <logMessage@@Base>
   49940:	ldr	r1, [pc, #144]	; 499d8 <brlapiserver_writePacket@@Base+0x1b58>
   49944:	ldr	r2, [pc, #144]	; 499dc <brlapiserver_writePacket@@Base+0x1b5c>
   49948:	mov	r0, #3
   4994c:	add	r1, pc, r1
   49950:	add	r2, pc, r2
   49954:	bl	1c634 <logMessage@@Base>
   49958:	ldr	r0, [fp, #8]
   4995c:	mov	r1, #5
   49960:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49964:	mov	r0, #0
   49968:	add	sp, sp, #44	; 0x2c
   4996c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49970:	ldr	r1, [pc, #104]	; 499e0 <brlapiserver_writePacket@@Base+0x1b60>
   49974:	mov	r0, #3
   49978:	ldr	r3, [fp, #8]
   4997c:	mov	r2, #5
   49980:	add	r1, pc, r1
   49984:	bl	1c634 <logMessage@@Base>
   49988:	ldr	r1, [pc, #84]	; 499e4 <brlapiserver_writePacket@@Base+0x1b64>
   4998c:	ldr	r2, [pc, #84]	; 499e8 <brlapiserver_writePacket@@Base+0x1b68>
   49990:	mov	r0, #3
   49994:	add	r1, pc, r1
   49998:	add	r2, pc, r2
   4999c:	bl	1c634 <logMessage@@Base>
   499a0:	ldr	r0, [fp, #8]
   499a4:	mov	r1, #5
   499a8:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   499ac:	b	498e4 <brlapiserver_writePacket@@Base+0x1a64>
   499b0:	ldr	r0, [sp, #32]
   499b4:	bl	fdf4 <pthread_mutex_unlock@plt>
   499b8:	b	49908 <brlapiserver_writePacket@@Base+0x1a88>
   499bc:	andeq	r1, r1, r0, ror #28
   499c0:	ldrdeq	r1, [r1], -r0
   499c4:	muleq	r1, r4, sp
   499c8:	andeq	r1, r1, r8, lsl #11
   499cc:			; <UNDEFINED> instruction: 0x000116b8
   499d0:	andeq	r1, r1, r4, lsl #26
   499d4:	andeq	r1, r1, r8, lsl #10
   499d8:	andeq	r1, r1, ip, asr r4
   499dc:	andeq	r1, r1, ip, ror r4
   499e0:	andeq	r1, r1, r0, asr #9
   499e4:	andeq	r1, r1, r0, asr #8
   499e8:	andeq	r1, r1, r4, ror #8
   499ec:	cmp	r3, #0
   499f0:	push	{r4, lr}
   499f4:	mov	r4, r0
   499f8:	bne	49a70 <brlapiserver_writePacket@@Base+0x1bf0>
   499fc:	ldr	r3, [r0, #20]
   49a00:	cmp	r3, #0
   49a04:	bne	49a2c <brlapiserver_writePacket@@Base+0x1bac>
   49a08:	ldr	r2, [pc, #164]	; 49ab4 <brlapiserver_writePacket@@Base+0x1c34>
   49a0c:	mov	r1, #115	; 0x73
   49a10:	mov	r3, #8
   49a14:	ldr	r0, [r0, #8]
   49a18:	add	r2, pc, r2
   49a1c:	add	r2, r2, #132	; 0x84
   49a20:	bl	47e80 <brlapiserver_writePacket@@Base>
   49a24:	mov	r0, #0
   49a28:	pop	{r4, pc}
   49a2c:	ldr	r1, [pc, #132]	; 49ab8 <brlapiserver_writePacket@@Base+0x1c38>
   49a30:	mov	r0, #3
   49a34:	ldr	r3, [r4, #8]
   49a38:	mov	r2, #5
   49a3c:	add	r1, pc, r1
   49a40:	bl	1c634 <logMessage@@Base>
   49a44:	ldr	r1, [pc, #112]	; 49abc <brlapiserver_writePacket@@Base+0x1c3c>
   49a48:	ldr	r2, [pc, #112]	; 49ac0 <brlapiserver_writePacket@@Base+0x1c40>
   49a4c:	mov	r0, #3
   49a50:	add	r1, pc, r1
   49a54:	add	r2, pc, r2
   49a58:	bl	1c634 <logMessage@@Base>
   49a5c:	ldr	r0, [r4, #8]
   49a60:	mov	r1, #5
   49a64:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49a68:	mov	r0, #0
   49a6c:	pop	{r4, pc}
   49a70:	ldr	r1, [pc, #76]	; 49ac4 <brlapiserver_writePacket@@Base+0x1c44>
   49a74:	mov	r0, #3
   49a78:	ldr	r3, [r4, #8]
   49a7c:	mov	r2, #7
   49a80:	add	r1, pc, r1
   49a84:	bl	1c634 <logMessage@@Base>
   49a88:	ldr	r1, [pc, #56]	; 49ac8 <brlapiserver_writePacket@@Base+0x1c48>
   49a8c:	ldr	r2, [pc, #56]	; 49acc <brlapiserver_writePacket@@Base+0x1c4c>
   49a90:	mov	r0, #3
   49a94:	add	r1, pc, r1
   49a98:	add	r2, pc, r2
   49a9c:	bl	1c634 <logMessage@@Base>
   49aa0:	ldr	r0, [r4, #8]
   49aa4:	mov	r1, #7
   49aa8:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49aac:	mov	r0, #0
   49ab0:	pop	{r4, pc}
   49ab4:	strdeq	sl, [r2], -r8
   49ab8:	andeq	r1, r1, r4, lsl #8
   49abc:	andeq	r1, r1, r8, asr r3
   49ac0:	andeq	r1, r1, r8, ror r3
   49ac4:	andeq	r1, r1, r0, asr #7
   49ac8:	muleq	r1, r8, fp
   49acc:			; <UNDEFINED> instruction: 0x00011bb8
   49ad0:	ldr	r2, [pc, #228]	; 49bbc <brlapiserver_writePacket@@Base+0x1d3c>
   49ad4:	push	{r3, r4, r5, r6, r7, lr}
   49ad8:	mov	r4, r0
   49adc:	ldr	r0, [pc, #220]	; 49bc0 <brlapiserver_writePacket@@Base+0x1d40>
   49ae0:	add	r2, pc, r2
   49ae4:	mov	r6, r3
   49ae8:	mov	r7, r1
   49aec:	ldr	r3, [r2, r0]
   49af0:	ldr	r3, [r3]
   49af4:	ldr	r5, [r3]
   49af8:	mov	r0, r5
   49afc:	bl	fb54 <strlen@plt>
   49b00:	cmp	r6, #0
   49b04:	mov	r3, r0
   49b08:	bne	49b78 <brlapiserver_writePacket@@Base+0x1cf8>
   49b0c:	ldr	r2, [r4, #20]
   49b10:	cmp	r2, #0
   49b14:	bne	49b34 <brlapiserver_writePacket@@Base+0x1cb4>
   49b18:	ldr	r0, [r4, #8]
   49b1c:	mov	r1, r7
   49b20:	mov	r2, r5
   49b24:	add	r3, r3, #1
   49b28:	bl	47e80 <brlapiserver_writePacket@@Base>
   49b2c:	mov	r0, #0
   49b30:	pop	{r3, r4, r5, r6, r7, pc}
   49b34:	ldr	r1, [pc, #136]	; 49bc4 <brlapiserver_writePacket@@Base+0x1d44>
   49b38:	mov	r0, #3
   49b3c:	ldr	r3, [r4, #8]
   49b40:	mov	r2, #5
   49b44:	add	r1, pc, r1
   49b48:	bl	1c634 <logMessage@@Base>
   49b4c:	ldr	r1, [pc, #116]	; 49bc8 <brlapiserver_writePacket@@Base+0x1d48>
   49b50:	ldr	r2, [pc, #116]	; 49bcc <brlapiserver_writePacket@@Base+0x1d4c>
   49b54:	mov	r0, #3
   49b58:	add	r1, pc, r1
   49b5c:	add	r2, pc, r2
   49b60:	bl	1c634 <logMessage@@Base>
   49b64:	ldr	r0, [r4, #8]
   49b68:	mov	r1, #5
   49b6c:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49b70:	mov	r0, #0
   49b74:	pop	{r3, r4, r5, r6, r7, pc}
   49b78:	ldr	r1, [pc, #80]	; 49bd0 <brlapiserver_writePacket@@Base+0x1d50>
   49b7c:	mov	r0, #3
   49b80:	ldr	r3, [r4, #8]
   49b84:	mov	r2, #7
   49b88:	add	r1, pc, r1
   49b8c:	bl	1c634 <logMessage@@Base>
   49b90:	ldr	r1, [pc, #60]	; 49bd4 <brlapiserver_writePacket@@Base+0x1d54>
   49b94:	ldr	r2, [pc, #60]	; 49bd8 <brlapiserver_writePacket@@Base+0x1d58>
   49b98:	mov	r0, #3
   49b9c:	add	r1, pc, r1
   49ba0:	add	r2, pc, r2
   49ba4:	bl	1c634 <logMessage@@Base>
   49ba8:	ldr	r0, [r4, #8]
   49bac:	mov	r1, #7
   49bb0:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49bb4:	mov	r0, #0
   49bb8:	pop	{r3, r4, r5, r6, r7, pc}
   49bbc:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   49bc0:	andeq	r0, r0, ip, ror r4
   49bc4:	strdeq	r1, [r1], -ip
   49bc8:	andeq	r1, r1, r0, asr r2
   49bcc:	andeq	r1, r1, r0, ror r2
   49bd0:			; <UNDEFINED> instruction: 0x000112b8
   49bd4:	muleq	r1, r0, sl
   49bd8:			; <UNDEFINED> instruction: 0x00011ab0
   49bdc:	ldr	ip, [pc, #1060]	; 4a008 <brlapiserver_writePacket@@Base+0x2188>
   49be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   49be4:	mov	r6, r1
   49be8:	ldr	r1, [pc, #1052]	; 4a00c <brlapiserver_writePacket@@Base+0x218c>
   49bec:	add	ip, pc, ip
   49bf0:	ldr	lr, [r6]
   49bf4:	mov	r7, r3
   49bf8:	sub	sp, sp, #620	; 0x26c
   49bfc:	mov	r5, r0
   49c00:	ldr	r4, [ip, r1]
   49c04:	cmn	lr, #1
   49c08:	ldr	r3, [r4]
   49c0c:	str	r3, [sp, #612]	; 0x264
   49c10:	beq	49cf4 <brlapiserver_writePacket@@Base+0x1e74>
   49c14:	cmp	r2, #97	; 0x61
   49c18:	bne	49ca4 <brlapiserver_writePacket@@Base+0x1e24>
   49c1c:	ldr	r9, [pc, #1004]	; 4a010 <brlapiserver_writePacket@@Base+0x2190>
   49c20:	ldr	r1, [pc, #1004]	; 4a014 <brlapiserver_writePacket@@Base+0x2194>
   49c24:	add	r9, pc, r9
   49c28:	add	r1, pc, r1
   49c2c:	ldr	r8, [r9]
   49c30:	mov	r0, r8
   49c34:	bl	fc5c <strcmp@plt>
   49c38:	cmp	r0, #0
   49c3c:	beq	49d40 <brlapiserver_writePacket@@Base+0x1ec0>
   49c40:	ldr	r2, [r7]
   49c44:	rev	r2, r2
   49c48:	cmp	r2, #75	; 0x4b
   49c4c:	beq	49da0 <brlapiserver_writePacket@@Base+0x1f20>
   49c50:	cmp	r2, #78	; 0x4e
   49c54:	bne	49e68 <brlapiserver_writePacket@@Base+0x1fe8>
   49c58:	ldr	r3, [pc, #952]	; 4a018 <brlapiserver_writePacket@@Base+0x2198>
   49c5c:	add	r3, pc, r3
   49c60:	ldr	r0, [r3, #276]	; 0x114
   49c64:	cmp	r0, #0
   49c68:	beq	49c80 <brlapiserver_writePacket@@Base+0x1e00>
   49c6c:	ldr	r1, [r5]
   49c70:	bl	4df9c <authPerform@@Base>
   49c74:	mov	r8, r0
   49c78:	cmp	r8, #0
   49c7c:	bne	49d40 <brlapiserver_writePacket@@Base+0x1ec0>
   49c80:	ldr	r0, [r5]
   49c84:	mov	r1, #17
   49c88:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49c8c:	ldr	r1, [pc, #904]	; 4a01c <brlapiserver_writePacket@@Base+0x219c>
   49c90:	ldr	r2, [r5]
   49c94:	mov	r0, #4
   49c98:	add	r1, pc, r1
   49c9c:	bl	1c634 <logMessage@@Base>
   49ca0:	b	49d70 <brlapiserver_writePacket@@Base+0x1ef0>
   49ca4:	ldr	r1, [pc, #884]	; 4a020 <brlapiserver_writePacket@@Base+0x21a0>
   49ca8:	mov	r0, #3
   49cac:	mov	r2, #13
   49cb0:	ldr	r3, [r5]
   49cb4:	add	r1, pc, r1
   49cb8:	bl	1c634 <logMessage@@Base>
   49cbc:	ldr	r1, [pc, #864]	; 4a024 <brlapiserver_writePacket@@Base+0x21a4>
   49cc0:	mov	r0, #3
   49cc4:	add	r1, pc, r1
   49cc8:	bl	1c634 <logMessage@@Base>
   49ccc:	ldr	r0, [r5]
   49cd0:	mov	r1, #13
   49cd4:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   49cd8:	mov	r0, #1
   49cdc:	ldr	r2, [sp, #612]	; 0x264
   49ce0:	ldr	r3, [r4]
   49ce4:	cmp	r2, r3
   49ce8:	bne	49fa8 <brlapiserver_writePacket@@Base+0x2128>
   49cec:	add	sp, sp, #620	; 0x26c
   49cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49cf4:	cmp	r2, #118	; 0x76
   49cf8:	bne	49d78 <brlapiserver_writePacket@@Base+0x1ef8>
   49cfc:	ldr	r3, [sp, #656]	; 0x290
   49d00:	cmp	r3, #3
   49d04:	bls	49d18 <brlapiserver_writePacket@@Base+0x1e98>
   49d08:	ldr	r3, [r7]
   49d0c:	rev	r3, r3
   49d10:	cmp	r3, #8
   49d14:	beq	49e7c <brlapiserver_writePacket@@Base+0x1ffc>
   49d18:	ldr	r1, [pc, #776]	; 4a028 <brlapiserver_writePacket@@Base+0x21a8>
   49d1c:	mov	r0, #3
   49d20:	mov	r2, #13
   49d24:	ldr	r3, [r5]
   49d28:	add	r1, pc, r1
   49d2c:	bl	1c634 <logMessage@@Base>
   49d30:	ldr	r1, [pc, #756]	; 4a02c <brlapiserver_writePacket@@Base+0x21ac>
   49d34:	mov	r0, #3
   49d38:	add	r1, pc, r1
   49d3c:	b	49cc8 <brlapiserver_writePacket@@Base+0x1e48>
   49d40:	ldr	ip, [pc, #744]	; 4a030 <brlapiserver_writePacket@@Base+0x21b0>
   49d44:	mov	r2, #0
   49d48:	mov	r3, r2
   49d4c:	ldr	r0, [r5]
   49d50:	add	ip, pc, ip
   49d54:	mov	r1, #65	; 0x41
   49d58:	ldr	lr, [ip, #280]	; 0x118
   49d5c:	sub	lr, lr, #1
   49d60:	str	lr, [ip, #280]	; 0x118
   49d64:	bl	47e80 <brlapiserver_writePacket@@Base>
   49d68:	mov	r3, #1
   49d6c:	str	r3, [r6]
   49d70:	mov	r0, #0
   49d74:	b	49cdc <brlapiserver_writePacket@@Base+0x1e5c>
   49d78:	ldr	r1, [pc, #692]	; 4a034 <brlapiserver_writePacket@@Base+0x21b4>
   49d7c:	mov	r0, #3
   49d80:	mov	r2, #13
   49d84:	ldr	r3, [r5]
   49d88:	add	r1, pc, r1
   49d8c:	bl	1c634 <logMessage@@Base>
   49d90:	ldr	r1, [pc, #672]	; 4a038 <brlapiserver_writePacket@@Base+0x21b8>
   49d94:	mov	r0, #3
   49d98:	add	r1, pc, r1
   49d9c:	b	49cc8 <brlapiserver_writePacket@@Base+0x1e48>
   49da0:	mov	r0, r8
   49da4:	bl	1c838 <isAbsolutePath@@Base>
   49da8:	cmp	r0, #0
   49dac:	beq	49c80 <brlapiserver_writePacket@@Base+0x1e00>
   49db0:	ldr	r8, [r9]
   49db4:	mov	r0, #3
   49db8:	add	r2, sp, #8
   49dbc:	mov	r1, r8
   49dc0:	bl	fbfc <__xstat@plt>
   49dc4:	cmp	r0, #0
   49dc8:	blt	49fdc <brlapiserver_writePacket@@Base+0x215c>
   49dcc:	ldr	sl, [sp, #52]	; 0x34
   49dd0:	cmp	sl, #0
   49dd4:	beq	49f20 <brlapiserver_writePacket@@Base+0x20a0>
   49dd8:	mov	r0, r8
   49ddc:	mov	r1, #0
   49de0:	bl	f8c0 <open@plt>
   49de4:	cmp	sl, #504	; 0x1f8
   49de8:	movcs	sl, #504	; 0x1f8
   49dec:	subs	r8, r0, #0
   49df0:	blt	49fac <brlapiserver_writePacket@@Base+0x212c>
   49df4:	add	fp, sp, #100	; 0x64
   49df8:	mov	r2, sl
   49dfc:	mov	r3, #1
   49e00:	mov	r1, fp
   49e04:	bl	46eb4 <processSpeechInput@@Base+0x1a0>
   49e08:	cmp	sl, r0
   49e0c:	bne	49f6c <brlapiserver_writePacket@@Base+0x20ec>
   49e10:	mov	r0, r8
   49e14:	add	r7, r7, #4
   49e18:	bl	f764 <close@plt>
   49e1c:	ldr	r1, [pc, #536]	; 4a03c <brlapiserver_writePacket@@Base+0x21bc>
   49e20:	mov	r0, #7
   49e24:	add	r1, pc, r1
   49e28:	bl	1c634 <logMessage@@Base>
   49e2c:	ldr	r3, [sp, #656]	; 0x290
   49e30:	sub	r2, r3, #4
   49e34:	cmp	r2, sl
   49e38:	beq	49f04 <brlapiserver_writePacket@@Base+0x2084>
   49e3c:	mov	r8, #0
   49e40:	mov	r2, sl
   49e44:	mov	r0, fp
   49e48:	mov	r1, #0
   49e4c:	mov	r3, #512	; 0x200
   49e50:	bl	fb90 <__memset_chk@plt>
   49e54:	mov	r0, r7
   49e58:	mov	r2, sl
   49e5c:	mov	r1, #0
   49e60:	bl	f6b0 <memset@plt>
   49e64:	b	49c78 <brlapiserver_writePacket@@Base+0x1df8>
   49e68:	ldr	r1, [pc, #464]	; 4a040 <brlapiserver_writePacket@@Base+0x21c0>
   49e6c:	mov	r0, #7
   49e70:	add	r1, pc, r1
   49e74:	bl	1c634 <logMessage@@Base>
   49e78:	b	49c80 <brlapiserver_writePacket@@Base+0x1e00>
   49e7c:	ldr	r7, [pc, #448]	; 4a044 <brlapiserver_writePacket@@Base+0x21c4>
   49e80:	add	r7, pc, r7
   49e84:	ldr	r0, [r7, #276]	; 0x114
   49e88:	cmp	r0, #0
   49e8c:	beq	49ed8 <brlapiserver_writePacket@@Base+0x2058>
   49e90:	ldr	r1, [r5]
   49e94:	bl	4df9c <authPerform@@Base>
   49e98:	cmp	r0, #0
   49e9c:	beq	49ed8 <brlapiserver_writePacket@@Base+0x2058>
   49ea0:	ldr	r3, [r7, #280]	; 0x118
   49ea4:	mov	r1, #1308622848	; 0x4e000000
   49ea8:	mov	r2, #1
   49eac:	str	r1, [sp, #100]	; 0x64
   49eb0:	sub	r3, r3, #1
   49eb4:	str	r3, [r7, #280]	; 0x118
   49eb8:	mov	r3, #4
   49ebc:	str	r2, [r6]
   49ec0:	ldr	r0, [r5]
   49ec4:	mov	r1, #97	; 0x61
   49ec8:	add	r2, sp, #100	; 0x64
   49ecc:	bl	47e80 <brlapiserver_writePacket@@Base>
   49ed0:	mov	r0, #0
   49ed4:	b	49cdc <brlapiserver_writePacket@@Base+0x1e5c>
   49ed8:	ldr	r3, [pc, #360]	; 4a048 <brlapiserver_writePacket@@Base+0x21c8>
   49edc:	ldr	r0, [pc, r3]
   49ee0:	bl	1c838 <isAbsolutePath@@Base>
   49ee4:	cmp	r0, #0
   49ee8:	movne	r2, #1258291200	; 0x4b000000
   49eec:	movne	r3, #4
   49ef0:	strne	r2, [sp, #100]	; 0x64
   49ef4:	moveq	r3, r0
   49ef8:	mov	r2, #0
   49efc:	str	r2, [r6]
   49f00:	b	49ec0 <brlapiserver_writePacket@@Base+0x2040>
   49f04:	mov	r1, fp
   49f08:	mov	r0, r7
   49f0c:	bl	fd10 <memcmp@plt>
   49f10:	cmp	r0, #0
   49f14:	bne	49e3c <brlapiserver_writePacket@@Base+0x1fbc>
   49f18:	mov	r8, #1
   49f1c:	b	49e40 <brlapiserver_writePacket@@Base+0x1fc0>
   49f20:	ldr	r3, [pc, #292]	; 4a04c <brlapiserver_writePacket@@Base+0x21cc>
   49f24:	mov	r2, #15
   49f28:	ldr	r6, [pc, #288]	; 4a050 <brlapiserver_writePacket@@Base+0x21d0>
   49f2c:	add	r3, pc, r3
   49f30:	add	r6, pc, r6
   49f34:	str	r2, [r3, #256]	; 0x100
   49f38:	str	r6, [r3, #268]	; 0x10c
   49f3c:	ldr	r3, [pc, #272]	; 4a054 <brlapiserver_writePacket@@Base+0x21d4>
   49f40:	add	r3, pc, r3
   49f44:	ldr	r0, [r3, #260]	; 0x104
   49f48:	bl	f5c0 <strerror@plt>
   49f4c:	ldr	r1, [pc, #260]	; 4a058 <brlapiserver_writePacket@@Base+0x21d8>
   49f50:	str	r6, [sp]
   49f54:	mov	r2, r8
   49f58:	add	r1, pc, r1
   49f5c:	mov	r3, r0
   49f60:	mov	r0, #4
   49f64:	bl	1c634 <logMessage@@Base>
   49f68:	b	49c80 <brlapiserver_writePacket@@Base+0x1e00>
   49f6c:	ldr	r6, [pc, #232]	; 4a05c <brlapiserver_writePacket@@Base+0x21dc>
   49f70:	mov	r3, #11
   49f74:	add	r6, pc, r6
   49f78:	str	r3, [r6, #256]	; 0x100
   49f7c:	bl	fca4 <__errno_location@plt>
   49f80:	ldr	r3, [pc, #216]	; 4a060 <brlapiserver_writePacket@@Base+0x21e0>
   49f84:	add	r3, pc, r3
   49f88:	str	r3, [r6, #268]	; 0x10c
   49f8c:	ldr	r3, [r0]
   49f90:	mov	r0, r8
   49f94:	str	r3, [r6, #260]	; 0x104
   49f98:	bl	f764 <close@plt>
   49f9c:	ldr	r6, [r6, #268]	; 0x10c
   49fa0:	ldr	r8, [r9]
   49fa4:	b	49f3c <brlapiserver_writePacket@@Base+0x20bc>
   49fa8:	bl	f950 <__stack_chk_fail@plt>
   49fac:	ldr	r7, [pc, #176]	; 4a064 <brlapiserver_writePacket@@Base+0x21e4>
   49fb0:	mov	r3, #11
   49fb4:	ldr	r6, [pc, #172]	; 4a068 <brlapiserver_writePacket@@Base+0x21e8>
   49fb8:	add	r7, pc, r7
   49fbc:	add	r6, pc, r6
   49fc0:	str	r3, [r7, #256]	; 0x100
   49fc4:	bl	fca4 <__errno_location@plt>
   49fc8:	str	r6, [r7, #268]	; 0x10c
   49fcc:	ldr	r8, [r9]
   49fd0:	ldr	r3, [r0]
   49fd4:	str	r3, [r7, #260]	; 0x104
   49fd8:	b	49f3c <brlapiserver_writePacket@@Base+0x20bc>
   49fdc:	ldr	r7, [pc, #136]	; 4a06c <brlapiserver_writePacket@@Base+0x21ec>
   49fe0:	mov	r3, #11
   49fe4:	ldr	r6, [pc, #132]	; 4a070 <brlapiserver_writePacket@@Base+0x21f0>
   49fe8:	add	r7, pc, r7
   49fec:	add	r6, pc, r6
   49ff0:	str	r3, [r7, #256]	; 0x100
   49ff4:	bl	fca4 <__errno_location@plt>
   49ff8:	str	r6, [r7, #268]	; 0x10c
   49ffc:	ldr	r3, [r0]
   4a000:	str	r3, [r7, #260]	; 0x104
   4a004:	b	49f3c <brlapiserver_writePacket@@Base+0x20bc>
   4a008:	andeq	r8, r2, ip, lsl #29
   4a00c:			; <UNDEFINED> instruction: 0x000003b4
   4a010:	andeq	r9, r2, r4, ror #9
   4a014:	muleq	r0, r0, r0
   4a018:			; <UNDEFINED> instruction: 0x0002a3b4
   4a01c:			; <UNDEFINED> instruction: 0x00011ab4
   4a020:	andeq	r1, r1, ip, lsl #3
   4a024:	andeq	r1, r1, r0, lsl sl
   4a028:	andeq	r1, r1, r8, lsl r1
   4a02c:	andeq	r1, r1, r4, lsl #19
   4a030:	andeq	sl, r2, r0, asr #5
   4a034:	strheq	r1, [r1], -r8
   4a038:	strdeq	r1, [r1], -ip
   4a03c:	andeq	r1, r1, r8, ror #17
   4a040:			; <UNDEFINED> instruction: 0x000118b8
   4a044:	muleq	r2, r0, r1
   4a048:	andeq	r9, r2, ip, lsr #4
   4a04c:	andeq	sl, r2, r4, ror #1
   4a050:	andeq	r1, r1, ip, lsr r7
   4a054:	ldrdeq	sl, [r2], -r0
   4a058:	andeq	r1, r1, r4, lsr #16
   4a05c:	muleq	r2, ip, r0
   4a060:	andeq	r1, r1, r4, ror r7
   4a064:	andeq	sl, r2, r8, asr r0
   4a068:	muleq	r1, ip, r6
   4a06c:	andeq	sl, r2, r8, lsr #32
   4a070:	muleq	r1, r4, r6

0004a074 <brlapiserver_readPacketHeader@@Base>:
   4a074:	ldr	ip, [pc, #168]	; 4a124 <brlapiserver_readPacketHeader@@Base+0xb0>
   4a078:	mov	r2, #8
   4a07c:	push	{r4, r5, lr}
   4a080:	add	ip, pc, ip
   4a084:	ldr	lr, [pc, #156]	; 4a128 <brlapiserver_readPacketHeader@@Base+0xb4>
   4a088:	sub	sp, sp, #20
   4a08c:	mov	r5, r1
   4a090:	mov	r3, #0
   4a094:	add	r1, sp, #4
   4a098:	ldr	r4, [ip, lr]
   4a09c:	ldr	ip, [r4]
   4a0a0:	str	ip, [sp, #12]
   4a0a4:	bl	46eb4 <processSpeechInput@@Base+0x1a0>
   4a0a8:	cmp	r0, #8
   4a0ac:	beq	4a0d8 <brlapiserver_readPacketHeader@@Base+0x64>
   4a0b0:	cmp	r0, #0
   4a0b4:	mvnge	r3, #1
   4a0b8:	blt	4a0f0 <brlapiserver_readPacketHeader@@Base+0x7c>
   4a0bc:	ldr	r2, [sp, #12]
   4a0c0:	mov	r0, r3
   4a0c4:	ldr	r3, [r4]
   4a0c8:	cmp	r2, r3
   4a0cc:	bne	4a120 <brlapiserver_readPacketHeader@@Base+0xac>
   4a0d0:	add	sp, sp, #20
   4a0d4:	pop	{r4, r5, pc}
   4a0d8:	ldr	r2, [sp, #8]
   4a0dc:	ldr	r3, [sp, #4]
   4a0e0:	rev	r2, r2
   4a0e4:	str	r2, [r5]
   4a0e8:	rev	r3, r3
   4a0ec:	b	4a0bc <brlapiserver_readPacketHeader@@Base+0x48>
   4a0f0:	ldr	r5, [pc, #52]	; 4a12c <brlapiserver_readPacketHeader@@Base+0xb8>
   4a0f4:	mov	r3, #11
   4a0f8:	add	r5, pc, r5
   4a0fc:	str	r3, [r5, #256]	; 0x100
   4a100:	bl	fca4 <__errno_location@plt>
   4a104:	ldr	r2, [pc, #36]	; 4a130 <brlapiserver_readPacketHeader@@Base+0xbc>
   4a108:	mvn	r3, #0
   4a10c:	add	r2, pc, r2
   4a110:	str	r2, [r5, #268]	; 0x10c
   4a114:	ldr	r2, [r0]
   4a118:	str	r2, [r5, #260]	; 0x104
   4a11c:	b	4a0bc <brlapiserver_readPacketHeader@@Base+0x48>
   4a120:	bl	f950 <__stack_chk_fail@plt>
   4a124:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   4a128:			; <UNDEFINED> instruction: 0x000003b4
   4a12c:	andeq	r9, r2, r8, lsl pc
   4a130:	strdeq	r1, [r1], -r8

0004a134 <brlapiserver_readPacketContent@@Base>:
   4a134:	ldr	ip, [pc, #272]	; 4a24c <brlapiserver_readPacketContent@@Base+0x118>
   4a138:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4a13c:	mov	r7, r1
   4a140:	ldr	r1, [pc, #264]	; 4a250 <brlapiserver_readPacketContent@@Base+0x11c>
   4a144:	add	ip, pc, ip
   4a148:	mov	r9, r3
   4a14c:	cmp	r7, r3
   4a150:	movcc	r5, r7
   4a154:	movcs	r5, r3
   4a158:	mov	r3, ip
   4a15c:	sub	sp, sp, #520	; 0x208
   4a160:	ldr	r8, [ip, r1]
   4a164:	mov	r4, r0
   4a168:	mov	r6, r2
   4a16c:	ldr	r3, [r8]
   4a170:	str	r3, [sp, #516]	; 0x204
   4a174:	mov	r0, r4
   4a178:	mov	r1, r6
   4a17c:	mov	r2, r5
   4a180:	mov	r3, #1
   4a184:	bl	46eb4 <processSpeechInput@@Base+0x1a0>
   4a188:	cmp	r0, #0
   4a18c:	bge	4a1e0 <brlapiserver_readPacketContent@@Base+0xac>
   4a190:	bl	fca4 <__errno_location@plt>
   4a194:	ldr	ip, [r0]
   4a198:	cmp	ip, #11
   4a19c:	cmpne	ip, #4
   4a1a0:	beq	4a174 <brlapiserver_readPacketContent@@Base+0x40>
   4a1a4:	ldr	r3, [pc, #168]	; 4a254 <brlapiserver_readPacketContent@@Base+0x120>
   4a1a8:	mvn	r0, #0
   4a1ac:	ldr	r2, [pc, #164]	; 4a258 <brlapiserver_readPacketContent@@Base+0x124>
   4a1b0:	mov	r1, #11
   4a1b4:	add	r3, pc, r3
   4a1b8:	add	r2, pc, r2
   4a1bc:	str	ip, [r3, #260]	; 0x104
   4a1c0:	str	r1, [r3, #256]	; 0x100
   4a1c4:	str	r2, [r3, #268]	; 0x10c
   4a1c8:	ldr	r2, [sp, #516]	; 0x204
   4a1cc:	ldr	r3, [r8]
   4a1d0:	cmp	r2, r3
   4a1d4:	bne	4a248 <brlapiserver_readPacketContent@@Base+0x114>
   4a1d8:	add	sp, sp, #520	; 0x208
   4a1dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4a1e0:	cmp	r0, r5
   4a1e4:	bcc	4a240 <brlapiserver_readPacketContent@@Base+0x10c>
   4a1e8:	cmp	r7, r9
   4a1ec:	bls	4a238 <brlapiserver_readPacketContent@@Base+0x104>
   4a1f0:	rsb	sl, r9, r7
   4a1f4:	add	r6, sp, #4
   4a1f8:	lsrs	r9, sl, #9
   4a1fc:	movne	r5, #0
   4a200:	beq	4a224 <brlapiserver_readPacketContent@@Base+0xf0>
   4a204:	add	r5, r5, #1
   4a208:	mov	r0, r4
   4a20c:	mov	r1, r6
   4a210:	mov	r2, #512	; 0x200
   4a214:	mov	r3, #1
   4a218:	bl	46eb4 <processSpeechInput@@Base+0x1a0>
   4a21c:	cmp	r5, r9
   4a220:	bne	4a204 <brlapiserver_readPacketContent@@Base+0xd0>
   4a224:	mov	r0, r4
   4a228:	mov	r1, r6
   4a22c:	ubfx	r2, sl, #0, #9
   4a230:	mov	r3, #1
   4a234:	bl	46eb4 <processSpeechInput@@Base+0x1a0>
   4a238:	mov	r0, r7
   4a23c:	b	4a1c8 <brlapiserver_readPacketContent@@Base+0x94>
   4a240:	mvn	r0, #1
   4a244:	b	4a1c8 <brlapiserver_readPacketContent@@Base+0x94>
   4a248:	bl	f950 <__stack_chk_fail@plt>
   4a24c:	andeq	r8, r2, r4, lsr r9
   4a250:			; <UNDEFINED> instruction: 0x000003b4
   4a254:	andeq	r9, r2, ip, asr lr
   4a258:	andeq	r1, r1, ip, ror #12

0004a25c <brlapiserver_readPacket@@Base>:
   4a25c:	push	{r4, r5, r6, lr}
   4a260:	mov	r6, r2
   4a264:	mov	r5, r3
   4a268:	mov	r4, r0
   4a26c:	bl	4a074 <brlapiserver_readPacketHeader@@Base>
   4a270:	subs	r1, r0, #0
   4a274:	poplt	{r4, r5, r6, pc}
   4a278:	mov	r0, r4
   4a27c:	mov	r2, r6
   4a280:	mov	r3, r5
   4a284:	pop	{r4, r5, r6, lr}
   4a288:	b	4a134 <brlapiserver_readPacketContent@@Base>

0004a28c <brlapiserver_getPacketTypeName@@Base>:
   4a28c:	ldr	r3, [pc, #72]	; 4a2dc <brlapiserver_getPacketTypeName@@Base+0x50>
   4a290:	cmp	r0, #97	; 0x61
   4a294:	add	r3, pc, r3
   4a298:	add	r3, r3, #8
   4a29c:	bne	4a2ac <brlapiserver_getPacketTypeName@@Base+0x20>
   4a2a0:	b	4a2cc <brlapiserver_getPacketTypeName@@Base+0x40>
   4a2a4:	cmp	r2, r0
   4a2a8:	beq	4a2d4 <brlapiserver_getPacketTypeName@@Base+0x48>
   4a2ac:	ldr	r2, [r3]
   4a2b0:	mov	r1, r3
   4a2b4:	add	r3, r3, #8
   4a2b8:	cmp	r2, #0
   4a2bc:	bne	4a2a4 <brlapiserver_getPacketTypeName@@Base+0x18>
   4a2c0:	ldr	r0, [pc, #24]	; 4a2e0 <brlapiserver_getPacketTypeName@@Base+0x54>
   4a2c4:	add	r0, pc, r0
   4a2c8:	bx	lr
   4a2cc:	ldr	r1, [pc, #16]	; 4a2e4 <brlapiserver_getPacketTypeName@@Base+0x58>
   4a2d0:	add	r1, pc, r1
   4a2d4:	ldr	r0, [r1, #4]
   4a2d8:	bx	lr
   4a2dc:	andeq	r7, r2, r0, asr #21
   4a2e0:	andeq	r1, r1, ip, ror r5
   4a2e4:	andeq	r7, r2, r4, lsl #21

0004a2e8 <resetPacket@@Base>:
   4a2e8:	mov	r3, #0
   4a2ec:	mov	r2, #8
   4a2f0:	str	r0, [r0, #532]	; 0x214
   4a2f4:	str	r2, [r0, #536]	; 0x218
   4a2f8:	str	r3, [r0, #524]	; 0x20c
   4a2fc:	str	r3, [r0, #528]	; 0x210
   4a300:	bx	lr

0004a304 <initializePacket@@Base>:
   4a304:	push	{r3, lr}
   4a308:	bl	4a2e8 <resetPacket@@Base>
   4a30c:	mov	r0, #0
   4a310:	pop	{r3, pc}
   4a314:	ldr	r3, [pc, #240]	; 4a40c <initializePacket@@Base+0x108>
   4a318:	ldr	r2, [pc, #240]	; 4a410 <initializePacket@@Base+0x10c>
   4a31c:	add	r3, pc, r3
   4a320:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4a324:	sub	sp, sp, #8
   4a328:	ldr	r7, [r3, r2]
   4a32c:	mov	r9, r0
   4a330:	mov	r0, #668	; 0x29c
   4a334:	mov	sl, r1
   4a338:	ldr	r3, [r7]
   4a33c:	str	r3, [sp, #4]
   4a340:	bl	fb48 <malloc@plt>
   4a344:	subs	r4, r0, #0
   4a348:	beq	4a3ec <initializePacket@@Base+0xe8>
   4a34c:	mov	r5, #0
   4a350:	mvn	r3, #0
   4a354:	mov	r8, #1
   4a358:	str	r3, [r4, #12]
   4a35c:	add	r0, r4, #52	; 0x34
   4a360:	str	r9, [r4, #8]
   4a364:	str	r5, [r4, #16]
   4a368:	str	r5, [r4, #20]
   4a36c:	str	r5, [r4, #24]
   4a370:	str	r8, [r4, #48]	; 0x30
   4a374:	bl	2be98 <resetRepeatState@@Base>
   4a378:	mov	r0, sp
   4a37c:	bl	f524 <pthread_mutexattr_init@plt>
   4a380:	mov	r1, r8
   4a384:	mov	r0, sp
   4a388:	bl	fc68 <pthread_mutexattr_settype@plt>
   4a38c:	mov	r1, sp
   4a390:	add	r0, r4, #72	; 0x48
   4a394:	bl	f41c <pthread_mutex_init@plt>
   4a398:	mov	r1, sp
   4a39c:	add	r0, r4, #100	; 0x64
   4a3a0:	bl	f41c <pthread_mutex_init@plt>
   4a3a4:	str	r5, [r4, #28]
   4a3a8:	str	r5, [r4, #96]	; 0x60
   4a3ac:	add	r0, r4, #128	; 0x80
   4a3b0:	str	r5, [r4, #36]	; 0x24
   4a3b4:	str	r5, [r4, #40]	; 0x28
   4a3b8:	str	r5, [r4, #44]	; 0x2c
   4a3bc:	str	sl, [r4, #124]	; 0x7c
   4a3c0:	bl	4a304 <initializePacket@@Base>
   4a3c4:	cmp	r0, r5
   4a3c8:	mov	r0, r4
   4a3cc:	bne	4a3e8 <initializePacket@@Base+0xe4>
   4a3d0:	ldr	r2, [sp, #4]
   4a3d4:	ldr	r3, [r7]
   4a3d8:	cmp	r2, r3
   4a3dc:	bne	4a408 <initializePacket@@Base+0x104>
   4a3e0:	add	sp, sp, #8
   4a3e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4a3e8:	bl	f4f4 <free@plt>
   4a3ec:	mov	r0, r9
   4a3f0:	mov	r1, #1
   4a3f4:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4a3f8:	mov	r0, r9
   4a3fc:	bl	f764 <close@plt>
   4a400:	mov	r0, #0
   4a404:	b	4a3d0 <initializePacket@@Base+0xcc>
   4a408:	bl	f950 <__stack_chk_fail@plt>
   4a40c:	andeq	r8, r2, ip, asr r7
   4a410:			; <UNDEFINED> instruction: 0x000003b4

0004a414 <readPacket@@Base>:
   4a414:	push	{r4, r5, r6, r7, r8, lr}
   4a418:	add	r5, r0, #136	; 0x88
   4a41c:	ldr	r1, [r0, #660]	; 0x294
   4a420:	mov	r4, r0
   4a424:	ldr	r2, [r0, #664]	; 0x298
   4a428:	mov	r8, #2
   4a42c:	mov	r7, #512	; 0x200
   4a430:	mov	r6, #1
   4a434:	ldr	r0, [r4, #8]
   4a438:	bl	f788 <read@plt>
   4a43c:	cmn	r0, #1
   4a440:	beq	4a494 <readPacket@@Base+0x80>
   4a444:	cmp	r0, #0
   4a448:	beq	4a554 <readPacket@@Base+0x140>
   4a44c:	ldr	r3, [r4, #652]	; 0x28c
   4a450:	ldr	r2, [r4, #656]	; 0x290
   4a454:	cmp	r3, #0
   4a458:	add	r2, r0, r2
   4a45c:	str	r2, [r4, #656]	; 0x290
   4a460:	bne	4a4b4 <readPacket@@Base+0xa0>
   4a464:	cmp	r2, #8
   4a468:	beq	4a500 <readPacket@@Base+0xec>
   4a46c:	ldr	r2, [r4, #664]	; 0x298
   4a470:	ldr	r1, [r4, #660]	; 0x294
   4a474:	rsb	r2, r0, r2
   4a478:	str	r2, [r4, #664]	; 0x298
   4a47c:	add	r1, r1, r0
   4a480:	ldr	r0, [r4, #8]
   4a484:	str	r1, [r4, #660]	; 0x294
   4a488:	bl	f788 <read@plt>
   4a48c:	cmn	r0, #1
   4a490:	bne	4a444 <readPacket@@Base+0x30>
   4a494:	bl	fca4 <__errno_location@plt>
   4a498:	ldr	r3, [r0]
   4a49c:	cmp	r3, #4
   4a4a0:	beq	4a548 <readPacket@@Base+0x134>
   4a4a4:	cmp	r3, #11
   4a4a8:	moveq	r0, #0
   4a4ac:	mvnne	r0, #0
   4a4b0:	pop	{r4, r5, r6, r7, r8, pc}
   4a4b4:	cmp	r3, #1
   4a4b8:	bne	4a4d8 <readPacket@@Base+0xc4>
   4a4bc:	ldr	r3, [r4, #128]	; 0x80
   4a4c0:	cmp	r2, r3
   4a4c4:	bne	4a46c <readPacket@@Base+0x58>
   4a4c8:	add	r0, r4, #128	; 0x80
   4a4cc:	bl	4a2e8 <resetPacket@@Base>
   4a4d0:	mov	r0, #1
   4a4d4:	pop	{r4, r5, r6, r7, r8, pc}
   4a4d8:	cmp	r3, #2
   4a4dc:	bne	4a46c <readPacket@@Base+0x58>
   4a4e0:	ldr	r3, [r4, #128]	; 0x80
   4a4e4:	mov	r1, r5
   4a4e8:	str	r5, [r4, #660]	; 0x294
   4a4ec:	rsb	r2, r2, r3
   4a4f0:	cmp	r2, #512	; 0x200
   4a4f4:	movcs	r2, #512	; 0x200
   4a4f8:	str	r2, [r4, #664]	; 0x298
   4a4fc:	b	4a434 <readPacket@@Base+0x20>
   4a500:	ldr	r2, [r4, #128]	; 0x80
   4a504:	ldr	r1, [r4, #132]	; 0x84
   4a508:	rev	r2, r2
   4a50c:	str	r2, [r4, #128]	; 0x80
   4a510:	cmp	r2, #0
   4a514:	rev	r1, r1
   4a518:	str	r1, [r4, #132]	; 0x84
   4a51c:	beq	4a4c8 <readPacket@@Base+0xb4>
   4a520:	cmp	r2, #512	; 0x200
   4a524:	str	r3, [r4, #656]	; 0x290
   4a528:	strls	r6, [r4, #652]	; 0x28c
   4a52c:	mov	r1, r5
   4a530:	strls	r2, [r4, #664]	; 0x298
   4a534:	movhi	r2, #512	; 0x200
   4a538:	strhi	r8, [r4, #652]	; 0x28c
   4a53c:	strhi	r7, [r4, #664]	; 0x298
   4a540:	str	r5, [r4, #660]	; 0x294
   4a544:	b	4a434 <readPacket@@Base+0x20>
   4a548:	ldr	r1, [r4, #660]	; 0x294
   4a54c:	ldr	r2, [r4, #664]	; 0x298
   4a550:	b	4a434 <readPacket@@Base+0x20>
   4a554:	mvn	r0, #1
   4a558:	pop	{r4, r5, r6, r7, r8, pc}

0004a55c <allocBrailleWindow@@Base>:
   4a55c:	push	{r3, r4, r5, r6, r7, lr}
   4a560:	mov	r4, r0
   4a564:	ldr	r3, [pc, #176]	; 4a61c <allocBrailleWindow@@Base+0xc0>
   4a568:	add	r3, pc, r3
   4a56c:	ldr	r5, [r3]
   4a570:	lsl	r0, r5, #2
   4a574:	bl	fb48 <malloc@plt>
   4a578:	cmp	r0, #0
   4a57c:	mov	r6, r0
   4a580:	str	r0, [r4, #4]
   4a584:	beq	4a5f4 <allocBrailleWindow@@Base+0x98>
   4a588:	mov	r0, r5
   4a58c:	bl	fb48 <malloc@plt>
   4a590:	cmp	r0, #0
   4a594:	mov	r7, r0
   4a598:	str	r0, [r4, #8]
   4a59c:	beq	4a5fc <allocBrailleWindow@@Base+0xa0>
   4a5a0:	mov	r0, r5
   4a5a4:	bl	fb48 <malloc@plt>
   4a5a8:	cmp	r0, #0
   4a5ac:	str	r0, [r4, #12]
   4a5b0:	beq	4a60c <allocBrailleWindow@@Base+0xb0>
   4a5b4:	mov	r2, r5
   4a5b8:	mov	r0, r6
   4a5bc:	mov	r1, #32
   4a5c0:	bl	f95c <wmemset@plt>
   4a5c4:	mov	r2, r5
   4a5c8:	ldr	r0, [r4, #8]
   4a5cc:	mov	r1, #255	; 0xff
   4a5d0:	bl	f6b0 <memset@plt>
   4a5d4:	mov	r2, r5
   4a5d8:	ldr	r0, [r4, #12]
   4a5dc:	mov	r1, #0
   4a5e0:	bl	f6b0 <memset@plt>
   4a5e4:	mov	r3, #0
   4a5e8:	mov	r0, r3
   4a5ec:	str	r3, [r4]
   4a5f0:	pop	{r3, r4, r5, r6, r7, pc}
   4a5f4:	mvn	r0, #0
   4a5f8:	pop	{r3, r4, r5, r6, r7, pc}
   4a5fc:	mov	r0, r6
   4a600:	bl	f4f4 <free@plt>
   4a604:	mvn	r0, #0
   4a608:	pop	{r3, r4, r5, r6, r7, pc}
   4a60c:	mov	r0, r7
   4a610:	bl	f4f4 <free@plt>
   4a614:	ldr	r0, [r4, #4]
   4a618:	b	4a600 <allocBrailleWindow@@Base+0xa4>
   4a61c:	andeq	r9, r2, r8, lsr #21

0004a620 <freeBrailleWindow@@Base>:
   4a620:	push	{r3, r4, r5, lr}
   4a624:	mov	r4, r0
   4a628:	ldr	r0, [r0, #4]
   4a62c:	mov	r5, #0
   4a630:	bl	f4f4 <free@plt>
   4a634:	ldr	r0, [r4, #8]
   4a638:	str	r5, [r4, #4]
   4a63c:	bl	f4f4 <free@plt>
   4a640:	str	r5, [r4, #8]
   4a644:	ldr	r0, [r4, #12]
   4a648:	bl	f4f4 <free@plt>
   4a64c:	str	r5, [r4, #12]
   4a650:	pop	{r3, r4, r5, pc}
   4a654:	push	{r4, r5, r6, lr}
   4a658:	mov	r4, r0
   4a65c:	ldr	r6, [pc, #120]	; 4a6dc <freeBrailleWindow@@Base+0xbc>
   4a660:	ldr	r3, [r0, #16]
   4a664:	mov	r0, #7
   4a668:	add	r6, pc, r6
   4a66c:	ldr	r1, [pc, #108]	; 4a6e0 <freeBrailleWindow@@Base+0xc0>
   4a670:	add	r5, r6, #44	; 0x2c
   4a674:	add	r1, pc, r1
   4a678:	ldr	r2, [r3, #4]
   4a67c:	bl	1c634 <logMessage@@Base>
   4a680:	mov	r3, #0
   4a684:	mov	r0, r5
   4a688:	str	r3, [r4, #16]
   4a68c:	bl	f3f8 <pthread_mutex_lock@plt>
   4a690:	ldr	r3, [r4]
   4a694:	ldr	r2, [r4, #4]
   4a698:	mov	r0, r5
   4a69c:	str	r2, [r3, #4]
   4a6a0:	ldm	r4, {r2, r3}
   4a6a4:	str	r2, [r3]
   4a6a8:	ldr	r3, [r6, #292]	; 0x124
   4a6ac:	ldr	r2, [r3, #4]
   4a6b0:	str	r3, [r4]
   4a6b4:	str	r2, [r4, #4]
   4a6b8:	ldr	r2, [r3, #4]
   4a6bc:	str	r4, [r2]
   4a6c0:	str	r4, [r3, #4]
   4a6c4:	bl	fdf4 <pthread_mutex_unlock@plt>
   4a6c8:	add	r0, r4, #96	; 0x60
   4a6cc:	bl	4d164 <freeKeyrangeList@@Base>
   4a6d0:	add	r0, r4, #32
   4a6d4:	pop	{r4, r5, r6, lr}
   4a6d8:	b	4a620 <freeBrailleWindow@@Base>
   4a6dc:	andeq	r9, r2, r8, lsr #19
   4a6e0:	ldrdeq	r1, [r1], -r4
   4a6e4:	push	{r3, r4, r5, lr}
   4a6e8:	mov	r4, r0
   4a6ec:	ldr	r5, [r0, #20]
   4a6f0:	cmp	r5, #0
   4a6f4:	bne	4a724 <freeBrailleWindow@@Base+0x104>
   4a6f8:	ldr	r3, [r0, #16]
   4a6fc:	cmp	r3, #0
   4a700:	beq	4a768 <freeBrailleWindow@@Base+0x148>
   4a704:	bl	4a654 <freeBrailleWindow@@Base+0x34>
   4a708:	mov	r2, r5
   4a70c:	ldr	r0, [r4, #8]
   4a710:	mov	r3, r5
   4a714:	mov	r1, #65	; 0x41
   4a718:	bl	47e80 <brlapiserver_writePacket@@Base>
   4a71c:	mov	r0, #0
   4a720:	pop	{r3, r4, r5, pc}
   4a724:	ldr	r1, [pc, #124]	; 4a7a8 <freeBrailleWindow@@Base+0x188>
   4a728:	mov	r0, #3
   4a72c:	ldr	r3, [r4, #8]
   4a730:	mov	r2, #5
   4a734:	add	r1, pc, r1
   4a738:	bl	1c634 <logMessage@@Base>
   4a73c:	ldr	r1, [pc, #104]	; 4a7ac <freeBrailleWindow@@Base+0x18c>
   4a740:	ldr	r2, [pc, #104]	; 4a7b0 <freeBrailleWindow@@Base+0x190>
   4a744:	mov	r0, #3
   4a748:	add	r1, pc, r1
   4a74c:	add	r2, pc, r2
   4a750:	bl	1c634 <logMessage@@Base>
   4a754:	ldr	r0, [r4, #8]
   4a758:	mov	r1, #5
   4a75c:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4a760:	mov	r0, #0
   4a764:	pop	{r3, r4, r5, pc}
   4a768:	ldr	r1, [pc, #68]	; 4a7b4 <freeBrailleWindow@@Base+0x194>
   4a76c:	mov	r0, #3
   4a770:	ldr	r3, [r4, #8]
   4a774:	mov	r2, #5
   4a778:	add	r1, pc, r1
   4a77c:	bl	1c634 <logMessage@@Base>
   4a780:	ldr	r1, [pc, #48]	; 4a7b8 <freeBrailleWindow@@Base+0x198>
   4a784:	ldr	r2, [pc, #48]	; 4a7bc <freeBrailleWindow@@Base+0x19c>
   4a788:	mov	r0, #3
   4a78c:	add	r1, pc, r1
   4a790:	add	r2, pc, r2
   4a794:	bl	1c634 <logMessage@@Base>
   4a798:	ldr	r0, [r4, #8]
   4a79c:	mov	r1, #5
   4a7a0:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4a7a4:	b	4a71c <freeBrailleWindow@@Base+0xfc>
   4a7a8:	andeq	r0, r1, ip, lsl #14
   4a7ac:	andeq	r0, r1, r0, ror #12
   4a7b0:	andeq	r0, r1, r0, lsl #13
   4a7b4:	andeq	r0, r1, r8, asr #13
   4a7b8:	andeq	r0, r1, r8, asr #12
   4a7bc:	andeq	r0, r1, ip, ror #12
   4a7c0:	push	{r4, lr}
   4a7c4:	mov	r4, r0
   4a7c8:	ldr	r0, [r0, #8]
   4a7cc:	cmn	r0, #1
   4a7d0:	beq	4a7f8 <freeBrailleWindow@@Base+0x1d8>
   4a7d4:	ldr	r3, [r4, #12]
   4a7d8:	cmp	r3, #1
   4a7dc:	beq	4a7f4 <freeBrailleWindow@@Base+0x1d4>
   4a7e0:	ldr	r3, [pc, #60]	; 4a824 <freeBrailleWindow@@Base+0x204>
   4a7e4:	add	r3, pc, r3
   4a7e8:	ldr	r2, [r3, #280]	; 0x118
   4a7ec:	sub	r2, r2, #1
   4a7f0:	str	r2, [r3, #280]	; 0x118
   4a7f4:	bl	f764 <close@plt>
   4a7f8:	add	r0, r4, #72	; 0x48
   4a7fc:	bl	f8f0 <pthread_mutex_destroy@plt>
   4a800:	add	r0, r4, #100	; 0x64
   4a804:	bl	f8f0 <pthread_mutex_destroy@plt>
   4a808:	add	r0, r4, #32
   4a80c:	bl	4a620 <freeBrailleWindow@@Base>
   4a810:	add	r0, r4, #96	; 0x60
   4a814:	bl	4d164 <freeKeyrangeList@@Base>
   4a818:	mov	r0, r4
   4a81c:	pop	{r4, lr}
   4a820:	b	f4f4 <free@plt>
   4a824:	andeq	r9, r2, ip, lsr #16
   4a828:	push	{r3, r4, r5, r6, r7, lr}
   4a82c:	mov	r7, r0
   4a830:	ldr	r3, [r0]
   4a834:	mov	r6, r1
   4a838:	ldr	r4, [r3, #4]
   4a83c:	cmp	r4, r3
   4a840:	beq	4a88c <freeBrailleWindow@@Base+0x26c>
   4a844:	ldr	r5, [pc, #104]	; 4a8b4 <freeBrailleWindow@@Base+0x294>
   4a848:	add	r5, pc, r5
   4a84c:	add	r5, r5, #44	; 0x2c
   4a850:	mov	r0, r5
   4a854:	bl	f3f8 <pthread_mutex_lock@plt>
   4a858:	ldr	r3, [r4]
   4a85c:	ldr	r2, [r4, #4]
   4a860:	mov	r0, r5
   4a864:	str	r2, [r3, #4]
   4a868:	ldm	r4, {r2, r3}
   4a86c:	str	r2, [r3]
   4a870:	bl	fdf4 <pthread_mutex_unlock@plt>
   4a874:	mov	r0, r4
   4a878:	bl	4a7c0 <freeBrailleWindow@@Base+0x1a0>
   4a87c:	ldr	r3, [r7]
   4a880:	ldr	r4, [r3, #4]
   4a884:	cmp	r4, r3
   4a888:	bne	4a850 <freeBrailleWindow@@Base+0x230>
   4a88c:	ldr	r4, [r6]
   4a890:	cmp	r4, #0
   4a894:	popeq	{r3, r4, r5, r6, r7, pc}
   4a898:	add	r0, r4, #8
   4a89c:	add	r1, r4, #24
   4a8a0:	bl	4a828 <freeBrailleWindow@@Base+0x208>
   4a8a4:	ldr	r4, [r4, #20]
   4a8a8:	cmp	r4, #0
   4a8ac:	bne	4a898 <freeBrailleWindow@@Base+0x278>
   4a8b0:	pop	{r3, r4, r5, r6, r7, pc}
   4a8b4:	andeq	r9, r2, r8, asr #15
   4a8b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a8bc:	mov	r8, r2
   4a8c0:	ldr	r3, [r8, #8]
   4a8c4:	mov	r5, r0
   4a8c8:	ldr	r2, [pc, #1956]	; 4b074 <freeBrailleWindow@@Base+0xa54>
   4a8cc:	mov	r7, r1
   4a8d0:	ldr	r0, [pc, #1952]	; 4b078 <freeBrailleWindow@@Base+0xa58>
   4a8d4:	sub	sp, sp, #44	; 0x2c
   4a8d8:	ldr	r1, [pc, #1948]	; 4b07c <freeBrailleWindow@@Base+0xa5c>
   4a8dc:	add	r2, pc, r2
   4a8e0:	add	r0, pc, r0
   4a8e4:	add	fp, r2, #44	; 0x2c
   4a8e8:	add	r1, pc, r1
   4a8ec:	add	r2, r0, #68	; 0x44
   4a8f0:	str	r0, [sp, #24]
   4a8f4:	add	r0, r1, #104	; 0x68
   4a8f8:	str	r1, [sp, #28]
   4a8fc:	ldr	r4, [r3, #4]
   4a900:	str	r2, [sp, #36]	; 0x24
   4a904:	str	r0, [sp, #32]
   4a908:	b	4a98c <freeBrailleWindow@@Base+0x36c>
   4a90c:	ldr	r2, [r4, #12]
   4a910:	cmp	r2, #1
   4a914:	beq	4ab68 <freeBrailleWindow@@Base+0x548>
   4a918:	ldr	r2, [r4, #124]	; 0x7c
   4a91c:	rsb	r2, r2, r7
   4a920:	cmp	r2, #30
   4a924:	ble	4ab68 <freeBrailleWindow@@Base+0x548>
   4a928:	mov	r0, r3
   4a92c:	bl	fbe4 <__fdelt_chk@plt>
   4a930:	ldr	r2, [r4, #8]
   4a934:	mov	ip, #1
   4a938:	asr	r3, r2, #31
   4a93c:	lsr	r3, r3, #27
   4a940:	add	r2, r2, r3
   4a944:	and	r2, r2, #31
   4a948:	rsb	r3, r3, r2
   4a94c:	ldr	r1, [r5, r0, lsl #2]
   4a950:	bic	r3, r1, ip, lsl r3
   4a954:	str	r3, [r5, r0, lsl #2]
   4a958:	mov	r0, fp
   4a95c:	bl	f3f8 <pthread_mutex_lock@plt>
   4a960:	ldr	r3, [r4]
   4a964:	ldr	r2, [r4, #4]
   4a968:	mov	r0, fp
   4a96c:	str	r2, [r3, #4]
   4a970:	ldm	r4, {r2, r3}
   4a974:	str	r2, [r3]
   4a978:	bl	fdf4 <pthread_mutex_unlock@plt>
   4a97c:	mov	r0, r4
   4a980:	bl	4a7c0 <freeBrailleWindow@@Base+0x1a0>
   4a984:	ldr	r3, [r8, #8]
   4a988:	mov	r4, r6
   4a98c:	cmp	r4, r3
   4a990:	beq	4ac40 <freeBrailleWindow@@Base+0x620>
   4a994:	ldr	r0, [r4, #8]
   4a998:	ldr	r6, [r4, #4]
   4a99c:	bl	fbe4 <__fdelt_chk@plt>
   4a9a0:	ldr	r3, [r4, #8]
   4a9a4:	asr	r2, r3, #31
   4a9a8:	lsr	r2, r2, #27
   4a9ac:	add	r1, r3, r2
   4a9b0:	and	r1, r1, #31
   4a9b4:	rsb	r2, r2, r1
   4a9b8:	ldr	r1, [r5, r0, lsl #2]
   4a9bc:	asr	r2, r1, r2
   4a9c0:	tst	r2, #1
   4a9c4:	beq	4a90c <freeBrailleWindow@@Base+0x2ec>
   4a9c8:	mov	r0, r4
   4a9cc:	bl	4a414 <readPacket@@Base>
   4a9d0:	cmp	r0, #0
   4a9d4:	moveq	r9, r0
   4a9d8:	beq	4ac04 <freeBrailleWindow@@Base+0x5e4>
   4a9dc:	blt	4ab9c <freeBrailleWindow@@Base+0x57c>
   4a9e0:	ldr	r3, [r4, #12]
   4a9e4:	add	r0, r4, #136	; 0x88
   4a9e8:	ldr	ip, [r4, #128]	; 0x80
   4a9ec:	cmp	r3, #1
   4a9f0:	str	r0, [sp, #20]
   4a9f4:	ldr	sl, [r4, #132]	; 0x84
   4a9f8:	bne	4aca0 <freeBrailleWindow@@Base+0x680>
   4a9fc:	cmp	ip, #512	; 0x200
   4aa00:	bgt	4ad7c <freeBrailleWindow@@Base+0x75c>
   4aa04:	sub	r3, sl, #35	; 0x23
   4aa08:	cmp	r3, #84	; 0x54
   4aa0c:	addls	pc, pc, r3, lsl #2
   4aa10:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa14:	b	4b064 <freeBrailleWindow@@Base+0xa44>
   4aa18:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa1c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa20:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa24:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa28:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa2c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa30:	b	4b054 <freeBrailleWindow@@Base+0xa34>
   4aa34:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa38:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa3c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa40:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa44:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa48:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa4c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa50:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa54:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa58:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa5c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa60:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa64:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa68:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa6c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa70:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa74:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa78:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa7c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa80:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa84:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa88:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa8c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa90:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa94:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa98:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aa9c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aaa0:	b	4b044 <freeBrailleWindow@@Base+0xa24>
   4aaa4:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aaa8:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aaac:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aab0:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aab4:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aab8:	b	4b034 <freeBrailleWindow@@Base+0xa14>
   4aabc:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aac0:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aac4:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aac8:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aacc:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aad0:	b	4b024 <freeBrailleWindow@@Base+0xa04>
   4aad4:	b	4b014 <freeBrailleWindow@@Base+0x9f4>
   4aad8:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aadc:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aae0:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aae4:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aae8:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aaec:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aaf0:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aaf4:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aaf8:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4aafc:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab00:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab04:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab08:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab0c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab10:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab14:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab18:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab1c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab20:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab24:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab28:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab2c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab30:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab34:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab38:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab3c:	b	4b004 <freeBrailleWindow@@Base+0x9e4>
   4ab40:	b	4aff4 <freeBrailleWindow@@Base+0x9d4>
   4ab44:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab48:	b	4afe4 <freeBrailleWindow@@Base+0x9c4>
   4ab4c:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab50:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab54:	b	4afd4 <freeBrailleWindow@@Base+0x9b4>
   4ab58:	b	4afc4 <freeBrailleWindow@@Base+0x9a4>
   4ab5c:	b	4afb4 <freeBrailleWindow@@Base+0x994>
   4ab60:	b	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4ab64:	b	4af54 <freeBrailleWindow@@Base+0x934>
   4ab68:	mov	r0, r3
   4ab6c:	bl	fbe4 <__fdelt_chk@plt>
   4ab70:	ldr	r2, [r4, #8]
   4ab74:	mov	ip, #1
   4ab78:	asr	r3, r2, #31
   4ab7c:	lsr	r3, r3, #27
   4ab80:	add	r2, r2, r3
   4ab84:	and	r2, r2, #31
   4ab88:	rsb	r3, r3, r2
   4ab8c:	ldr	r1, [r5, r0, lsl #2]
   4ab90:	bic	r3, r1, ip, lsl r3
   4ab94:	str	r3, [r5, r0, lsl #2]
   4ab98:	b	4a984 <freeBrailleWindow@@Base+0x364>
   4ab9c:	cmn	r0, #1
   4aba0:	beq	4ae50 <freeBrailleWindow@@Base+0x830>
   4aba4:	ldr	r1, [pc, #1236]	; 4b080 <freeBrailleWindow@@Base+0xa60>
   4aba8:	mov	r0, #7
   4abac:	ldr	r2, [r4, #8]
   4abb0:	add	r1, pc, r1
   4abb4:	bl	1c634 <logMessage@@Base>
   4abb8:	ldr	r9, [r4, #20]
   4abbc:	cmp	r9, #0
   4abc0:	bne	4ada4 <freeBrailleWindow@@Base+0x784>
   4abc4:	ldr	r3, [r4, #24]
   4abc8:	cmp	r3, #0
   4abcc:	bne	4ae78 <freeBrailleWindow@@Base+0x858>
   4abd0:	ldr	r3, [r4, #16]
   4abd4:	cmp	r3, #0
   4abd8:	moveq	r9, #1
   4abdc:	beq	4ac04 <freeBrailleWindow@@Base+0x5e4>
   4abe0:	ldr	r1, [pc, #1180]	; 4b084 <freeBrailleWindow@@Base+0xa64>
   4abe4:	mov	r0, #7
   4abe8:	ldr	r3, [r3, #4]
   4abec:	mov	r9, #1
   4abf0:	add	r1, pc, r1
   4abf4:	ldr	r2, [r4, #8]
   4abf8:	bl	1c634 <logMessage@@Base>
   4abfc:	mov	r0, r4
   4ac00:	bl	4a654 <freeBrailleWindow@@Base+0x34>
   4ac04:	ldr	r0, [r4, #8]
   4ac08:	bl	fbe4 <__fdelt_chk@plt>
   4ac0c:	ldr	r2, [r4, #8]
   4ac10:	cmp	r9, #0
   4ac14:	mov	ip, #1
   4ac18:	asr	r3, r2, #31
   4ac1c:	lsr	r3, r3, #27
   4ac20:	add	r2, r2, r3
   4ac24:	and	r2, r2, #31
   4ac28:	rsb	r3, r3, r2
   4ac2c:	ldr	r1, [r5, r0, lsl #2]
   4ac30:	bic	r3, r1, ip, lsl r3
   4ac34:	str	r3, [r5, r0, lsl #2]
   4ac38:	beq	4a984 <freeBrailleWindow@@Base+0x364>
   4ac3c:	b	4a958 <freeBrailleWindow@@Base+0x338>
   4ac40:	ldr	r2, [r8, #24]
   4ac44:	cmp	r2, #0
   4ac48:	beq	4ac68 <freeBrailleWindow@@Base+0x648>
   4ac4c:	ldr	r4, [r2, #20]
   4ac50:	mov	r0, r5
   4ac54:	mov	r1, r7
   4ac58:	bl	4a8b8 <freeBrailleWindow@@Base+0x298>
   4ac5c:	cmp	r4, #0
   4ac60:	mov	r2, r4
   4ac64:	bne	4ac4c <freeBrailleWindow@@Base+0x62c>
   4ac68:	ldr	r4, [pc, #1048]	; 4b088 <freeBrailleWindow@@Base+0xa68>
   4ac6c:	add	r4, pc, r4
   4ac70:	add	r3, r4, #16
   4ac74:	cmp	r8, r3
   4ac78:	beq	4ac98 <freeBrailleWindow@@Base+0x678>
   4ac7c:	add	r3, r4, #284	; 0x11c
   4ac80:	cmp	r8, r3
   4ac84:	beq	4ac98 <freeBrailleWindow@@Base+0x678>
   4ac88:	ldr	r3, [r8, #8]
   4ac8c:	ldr	r2, [r3, #4]
   4ac90:	cmp	r3, r2
   4ac94:	beq	4ad10 <freeBrailleWindow@@Base+0x6f0>
   4ac98:	add	sp, sp, #44	; 0x2c
   4ac9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4aca0:	mov	r3, r0
   4aca4:	str	ip, [sp]
   4aca8:	mov	r2, sl
   4acac:	add	r0, r4, #8
   4acb0:	add	r1, r4, #12
   4acb4:	bl	49bdc <brlapiserver_writePacket@@Base+0x1d5c>
   4acb8:	mov	r9, r0
   4acbc:	b	4ac04 <freeBrailleWindow@@Base+0x5e4>
   4acc0:	ldr	r1, [pc, #964]	; 4b08c <freeBrailleWindow@@Base+0xa6c>
   4acc4:	mov	r2, #4
   4acc8:	ldr	r3, [r4, #8]
   4accc:	mov	r0, #3
   4acd0:	add	r1, pc, r1
   4acd4:	str	ip, [sp, #12]
   4acd8:	bl	1c634 <logMessage@@Base>
   4acdc:	ldr	r1, [pc, #940]	; 4b090 <freeBrailleWindow@@Base+0xa70>
   4ace0:	mov	r0, #3
   4ace4:	mov	r9, #0
   4ace8:	add	r1, pc, r1
   4acec:	bl	1c634 <logMessage@@Base>
   4acf0:	ldr	ip, [sp, #12]
   4acf4:	ldr	r0, [r4, #8]
   4acf8:	mov	r2, sl
   4acfc:	ldr	r3, [sp, #20]
   4ad00:	mov	r1, #4
   4ad04:	str	ip, [sp]
   4ad08:	bl	480d4 <brlapiserver_writePacket@@Base+0x254>
   4ad0c:	b	4ac04 <freeBrailleWindow@@Base+0x5e4>
   4ad10:	ldr	r3, [r8, #24]
   4ad14:	cmp	r3, #0
   4ad18:	bne	4ac98 <freeBrailleWindow@@Base+0x678>
   4ad1c:	ldr	r1, [pc, #880]	; 4b094 <freeBrailleWindow@@Base+0xa74>
   4ad20:	mov	r0, #7
   4ad24:	ldr	r2, [r8, #4]
   4ad28:	add	r1, pc, r1
   4ad2c:	bl	1c634 <logMessage@@Base>
   4ad30:	add	r0, r4, #44	; 0x2c
   4ad34:	bl	f3f8 <pthread_mutex_lock@plt>
   4ad38:	ldr	r3, [r8, #20]
   4ad3c:	cmp	r3, #0
   4ad40:	ldrne	r2, [r8, #16]
   4ad44:	strne	r2, [r3, #16]
   4ad48:	ldrne	r3, [r8, #20]
   4ad4c:	ldr	r2, [r8, #16]
   4ad50:	str	r3, [r2]
   4ad54:	ldr	r0, [r8, #8]
   4ad58:	bl	4a7c0 <freeBrailleWindow@@Base+0x1a0>
   4ad5c:	mov	r0, r8
   4ad60:	bl	f4f4 <free@plt>
   4ad64:	ldr	r0, [pc, #812]	; 4b098 <freeBrailleWindow@@Base+0xa78>
   4ad68:	add	r0, pc, r0
   4ad6c:	add	r0, r0, #44	; 0x2c
   4ad70:	add	sp, sp, #44	; 0x2c
   4ad74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4ad78:	b	fdf4 <pthread_mutex_unlock@plt>
   4ad7c:	mov	r0, sl
   4ad80:	mov	r9, #0
   4ad84:	bl	4a28c <brlapiserver_getPacketTypeName@@Base>
   4ad88:	ldr	r1, [pc, #780]	; 4b09c <freeBrailleWindow@@Base+0xa7c>
   4ad8c:	ldr	r3, [r4, #8]
   4ad90:	add	r1, pc, r1
   4ad94:	mov	r2, r0
   4ad98:	mov	r0, #4
   4ad9c:	bl	1c634 <logMessage@@Base>
   4ada0:	b	4ac04 <freeBrailleWindow@@Base+0x5e4>
   4ada4:	ldr	r9, [pc, #756]	; 4b0a0 <freeBrailleWindow@@Base+0xa80>
   4ada8:	add	r9, pc, r9
   4adac:	add	r0, r9, #68	; 0x44
   4adb0:	bl	f3f8 <pthread_mutex_lock@plt>
   4adb4:	ldr	r1, [pc, #744]	; 4b0a4 <freeBrailleWindow@@Base+0xa84>
   4adb8:	mov	r3, #0
   4adbc:	ldr	r2, [r4, #8]
   4adc0:	str	r3, [r4, #20]
   4adc4:	add	r1, pc, r1
   4adc8:	mov	r0, #4
   4adcc:	str	r3, [r9, #100]	; 0x64
   4add0:	bl	1c634 <logMessage@@Base>
   4add4:	add	r0, r9, #104	; 0x68
   4add8:	bl	f3f8 <pthread_mutex_lock@plt>
   4addc:	ldr	r1, [pc, #708]	; 4b0a8 <freeBrailleWindow@@Base+0xa88>
   4ade0:	mov	r0, #4
   4ade4:	add	r1, pc, r1
   4ade8:	bl	1c634 <logMessage@@Base>
   4adec:	ldr	r3, [r9, #128]	; 0x80
   4adf0:	ldr	r3, [r3, #64]	; 0x40
   4adf4:	cmp	r3, #0
   4adf8:	beq	4ae34 <freeBrailleWindow@@Base+0x814>
   4adfc:	ldr	r0, [r9, #140]	; 0x8c
   4ae00:	cmp	r0, #0
   4ae04:	beq	4ae24 <freeBrailleWindow@@Base+0x804>
   4ae08:	blx	r3
   4ae0c:	cmp	r0, #0
   4ae10:	bne	4ae38 <freeBrailleWindow@@Base+0x818>
   4ae14:	ldr	r3, [r9, #128]	; 0x80
   4ae18:	ldr	r3, [r3, #64]	; 0x40
   4ae1c:	cmp	r3, #0
   4ae20:	beq	4ae34 <freeBrailleWindow@@Base+0x814>
   4ae24:	ldr	r1, [pc, #640]	; 4b0ac <freeBrailleWindow@@Base+0xa8c>
   4ae28:	mov	r0, #4
   4ae2c:	add	r1, pc, r1
   4ae30:	bl	1c634 <logMessage@@Base>
   4ae34:	bl	22a04 <restartBrailleDriver@@Base>
   4ae38:	ldr	r0, [sp, #32]
   4ae3c:	bl	fdf4 <pthread_mutex_unlock@plt>
   4ae40:	ldr	r1, [sp, #28]
   4ae44:	add	r0, r1, #68	; 0x44
   4ae48:	bl	fdf4 <pthread_mutex_unlock@plt>
   4ae4c:	b	4abd0 <freeBrailleWindow@@Base+0x5b0>
   4ae50:	bl	fca4 <__errno_location@plt>
   4ae54:	ldr	r0, [r0]
   4ae58:	bl	f5c0 <strerror@plt>
   4ae5c:	ldr	r1, [pc, #588]	; 4b0b0 <freeBrailleWindow@@Base+0xa90>
   4ae60:	ldr	r3, [r4, #8]
   4ae64:	add	r1, pc, r1
   4ae68:	mov	r2, r0
   4ae6c:	mov	r0, #4
   4ae70:	bl	1c634 <logMessage@@Base>
   4ae74:	b	4abb8 <freeBrailleWindow@@Base+0x598>
   4ae78:	ldr	r0, [sp, #36]	; 0x24
   4ae7c:	bl	f3f8 <pthread_mutex_lock@plt>
   4ae80:	ldr	r3, [sp, #24]
   4ae84:	ldr	r1, [pc, #552]	; 4b0b4 <freeBrailleWindow@@Base+0xa94>
   4ae88:	mov	r0, #4
   4ae8c:	ldr	r2, [r4, #8]
   4ae90:	add	r1, pc, r1
   4ae94:	str	r9, [r4, #24]
   4ae98:	str	r9, [r3, #96]	; 0x60
   4ae9c:	bl	1c634 <logMessage@@Base>
   4aea0:	ldr	r1, [sp, #24]
   4aea4:	add	r0, r1, #104	; 0x68
   4aea8:	bl	f3f8 <pthread_mutex_lock@plt>
   4aeac:	ldr	r2, [sp, #24]
   4aeb0:	ldr	r3, [r2, #168]	; 0xa8
   4aeb4:	cmp	r3, #0
   4aeb8:	beq	4af10 <freeBrailleWindow@@Base+0x8f0>
   4aebc:	ldr	r9, [pc, #500]	; 4b0b8 <freeBrailleWindow@@Base+0xa98>
   4aec0:	add	r9, pc, r9
   4aec4:	ldr	r3, [r9, #128]	; 0x80
   4aec8:	ldr	r3, [r3, #64]	; 0x40
   4aecc:	cmp	r3, #0
   4aed0:	beq	4ae38 <freeBrailleWindow@@Base+0x818>
   4aed4:	ldr	r1, [pc, #480]	; 4b0bc <freeBrailleWindow@@Base+0xa9c>
   4aed8:	mov	r0, #7
   4aedc:	add	r1, pc, r1
   4aee0:	bl	1c634 <logMessage@@Base>
   4aee4:	ldr	r3, [r9, #128]	; 0x80
   4aee8:	ldr	r0, [r9, #140]	; 0x8c
   4aeec:	ldr	r3, [r3, #64]	; 0x40
   4aef0:	blx	r3
   4aef4:	cmp	r0, #0
   4aef8:	bne	4ae38 <freeBrailleWindow@@Base+0x818>
   4aefc:	ldr	r1, [pc, #444]	; 4b0c0 <freeBrailleWindow@@Base+0xaa0>
   4af00:	mov	r0, #4
   4af04:	add	r1, pc, r1
   4af08:	bl	1c634 <logMessage@@Base>
   4af0c:	b	4ae38 <freeBrailleWindow@@Base+0x818>
   4af10:	ldr	r3, [sp, #24]
   4af14:	ldr	r0, [r3, #140]	; 0x8c
   4af18:	cmp	r0, #0
   4af1c:	beq	4af2c <freeBrailleWindow@@Base+0x90c>
   4af20:	bl	4717c <processSpeechInput@@Base+0x468>
   4af24:	cmp	r0, #0
   4af28:	bne	4af3c <freeBrailleWindow@@Base+0x91c>
   4af2c:	ldr	r1, [pc, #400]	; 4b0c4 <freeBrailleWindow@@Base+0xaa4>
   4af30:	mov	r0, #4
   4af34:	add	r1, pc, r1
   4af38:	bl	1c634 <logMessage@@Base>
   4af3c:	ldr	r3, [pc, #388]	; 4b0c8 <freeBrailleWindow@@Base+0xaa8>
   4af40:	add	r3, pc, r3
   4af44:	ldr	r3, [r3, #168]	; 0xa8
   4af48:	cmp	r3, #0
   4af4c:	beq	4ae38 <freeBrailleWindow@@Base+0x818>
   4af50:	b	4aebc <freeBrailleWindow@@Base+0x89c>
   4af54:	ldr	r3, [pc, #368]	; 4b0cc <freeBrailleWindow@@Base+0xaac>
   4af58:	add	r3, pc, r3
   4af5c:	ldr	r9, [r3, #32]
   4af60:	cmp	r9, #0
   4af64:	beq	4acc0 <freeBrailleWindow@@Base+0x6a0>
   4af68:	ldr	r3, [r4, #8]
   4af6c:	mov	r0, sl
   4af70:	str	ip, [sp, #12]
   4af74:	str	r3, [sp, #16]
   4af78:	bl	4a28c <brlapiserver_getPacketTypeName@@Base>
   4af7c:	ldr	r1, [pc, #332]	; 4b0d0 <freeBrailleWindow@@Base+0xab0>
   4af80:	ldr	r3, [sp, #16]
   4af84:	add	r1, pc, r1
   4af88:	mov	r2, r0
   4af8c:	mov	r0, #7
   4af90:	bl	1c634 <logMessage@@Base>
   4af94:	ldr	ip, [sp, #12]
   4af98:	mov	r0, r4
   4af9c:	mov	r1, sl
   4afa0:	ldr	r2, [sp, #20]
   4afa4:	mov	r3, ip
   4afa8:	blx	r9
   4afac:	mov	r9, #0
   4afb0:	b	4ac04 <freeBrailleWindow@@Base+0x5e4>
   4afb4:	ldr	r3, [pc, #280]	; 4b0d4 <freeBrailleWindow@@Base+0xab4>
   4afb8:	add	r3, pc, r3
   4afbc:	ldr	r9, [r3, #28]
   4afc0:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4afc4:	ldr	r3, [pc, #268]	; 4b0d8 <freeBrailleWindow@@Base+0xab8>
   4afc8:	add	r3, pc, r3
   4afcc:	ldr	r9, [r3, #12]
   4afd0:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4afd4:	ldr	r3, [pc, #256]	; 4b0dc <freeBrailleWindow@@Base+0xabc>
   4afd8:	add	r3, pc, r3
   4afdc:	ldr	r9, [r3, #8]
   4afe0:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4afe4:	ldr	r3, [pc, #244]	; 4b0e0 <freeBrailleWindow@@Base+0xac0>
   4afe8:	add	r3, pc, r3
   4afec:	ldr	r9, [r3, #44]	; 0x2c
   4aff0:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4aff4:	ldr	r3, [pc, #232]	; 4b0e4 <freeBrailleWindow@@Base+0xac4>
   4aff8:	add	r3, pc, r3
   4affc:	ldr	r9, [r3, #4]
   4b000:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4b004:	ldr	r3, [pc, #220]	; 4b0e8 <freeBrailleWindow@@Base+0xac8>
   4b008:	add	r3, pc, r3
   4b00c:	ldr	r9, [r3, #24]
   4b010:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4b014:	ldr	r3, [pc, #208]	; 4b0ec <freeBrailleWindow@@Base+0xacc>
   4b018:	add	r3, pc, r3
   4b01c:	ldr	r9, [r3, #48]	; 0x30
   4b020:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4b024:	ldr	r3, [pc, #196]	; 4b0f0 <freeBrailleWindow@@Base+0xad0>
   4b028:	add	r3, pc, r3
   4b02c:	ldr	r9, [r3, #52]	; 0x34
   4b030:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4b034:	ldr	r3, [pc, #184]	; 4b0f4 <freeBrailleWindow@@Base+0xad4>
   4b038:	add	r3, pc, r3
   4b03c:	ldr	r9, [r3, #20]
   4b040:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4b044:	ldr	r3, [pc, #172]	; 4b0f8 <freeBrailleWindow@@Base+0xad8>
   4b048:	add	r3, pc, r3
   4b04c:	ldr	r9, [r3, #16]
   4b050:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4b054:	ldr	r3, [pc, #160]	; 4b0fc <freeBrailleWindow@@Base+0xadc>
   4b058:	add	r3, pc, r3
   4b05c:	ldr	r9, [r3, #36]	; 0x24
   4b060:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4b064:	ldr	r3, [pc, #148]	; 4b100 <freeBrailleWindow@@Base+0xae0>
   4b068:	add	r3, pc, r3
   4b06c:	ldr	r9, [r3, #40]	; 0x28
   4b070:	b	4af60 <freeBrailleWindow@@Base+0x940>
   4b074:	andeq	r9, r2, r4, lsr r7
   4b078:	andeq	r9, r2, r0, lsr r7
   4b07c:	andeq	r9, r2, r8, lsr #14
   4b080:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   4b084:			; <UNDEFINED> instruction: 0x00010db8
   4b088:	andeq	r9, r2, r4, lsr #7
   4b08c:	andeq	r0, r1, ip, lsl #1
   4b090:	andeq	r0, r1, r0, asr sp
   4b094:	andeq	r0, r1, r4, lsr #26
   4b098:	andeq	r9, r2, r8, lsr #5
   4b09c:	andeq	r0, r1, r8, asr ip
   4b0a0:	andeq	r9, r2, r8, ror #4
   4b0a4:	ldrdeq	r0, [r1], -r8
   4b0a8:	andeq	r0, r1, ip, ror #21
   4b0ac:	andeq	r0, r1, r8, asr #21
   4b0b0:	strdeq	r0, [r1], -ip
   4b0b4:	andeq	r0, r1, ip, lsl #21
   4b0b8:	andeq	r9, r2, r0, asr r1
   4b0bc:	strdeq	r0, [r1], -r4
   4b0c0:	andeq	r0, r1, r0, ror sl
   4b0c4:	andeq	r0, r1, r0, lsr #20
   4b0c8:	ldrdeq	r9, [r2], -r0
   4b0cc:			; <UNDEFINED> instruction: 0x000281b0
   4b0d0:	muleq	r1, r4, sl
   4b0d4:	andeq	r8, r2, r0, asr r1
   4b0d8:	andeq	r8, r2, r0, asr #2
   4b0dc:	andeq	r8, r2, r0, lsr r1
   4b0e0:	andeq	r8, r2, r0, lsr #2
   4b0e4:	andeq	r8, r2, r0, lsl r1
   4b0e8:	andeq	r8, r2, r0, lsl #2
   4b0ec:	strdeq	r8, [r2], -r0
   4b0f0:	andeq	r8, r2, r0, ror #1
   4b0f4:	ldrdeq	r8, [r2], -r0
   4b0f8:	andeq	r8, r2, r0, asr #1
   4b0fc:	strheq	r8, [r2], -r0
   4b100:	andeq	r8, r2, r0, lsr #1
   4b104:	ldr	r3, [pc, #2032]	; 4b8fc <freeBrailleWindow@@Base+0x12dc>
   4b108:	ldr	r2, [pc, #2032]	; 4b900 <freeBrailleWindow@@Base+0x12e0>
   4b10c:	add	r3, pc, r3
   4b110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4b114:	sub	sp, sp, #1280	; 0x500
   4b118:	ldr	r2, [r3, r2]
   4b11c:	sub	sp, sp, #4
   4b120:	add	r4, sp, #380	; 0x17c
   4b124:	mov	r5, r0
   4b128:	ldr	r3, [r2]
   4b12c:	mov	r0, r4
   4b130:	str	r2, [sp, #56]	; 0x38
   4b134:	str	r3, [sp, #1276]	; 0x4fc
   4b138:	bl	fd28 <sigemptyset@plt>
   4b13c:	mov	r1, #15
   4b140:	mov	r0, r4
   4b144:	bl	f74c <sigaddset@plt>
   4b148:	mov	r1, #2
   4b14c:	mov	r0, r4
   4b150:	bl	f74c <sigaddset@plt>
   4b154:	mov	r1, #13
   4b158:	mov	r0, r4
   4b15c:	bl	f74c <sigaddset@plt>
   4b160:	mov	r1, #17
   4b164:	mov	r0, r4
   4b168:	bl	f74c <sigaddset@plt>
   4b16c:	mov	r1, #10
   4b170:	mov	r0, r4
   4b174:	bl	f74c <sigaddset@plt>
   4b178:	mov	r0, #0
   4b17c:	mov	r1, r4
   4b180:	mov	r2, r0
   4b184:	bl	f6ec <pthread_sigmask@plt>
   4b188:	subs	r7, r0, #0
   4b18c:	bne	4b8a0 <freeBrailleWindow@@Base+0x1280>
   4b190:	ldr	r4, [pc, #1900]	; 4b904 <freeBrailleWindow@@Base+0x12e4>
   4b194:	mov	r0, r5
   4b198:	mov	r1, #43	; 0x2b
   4b19c:	add	r4, pc, r4
   4b1a0:	add	r2, r4, #236	; 0xec
   4b1a4:	bl	1dbbc <splitString@@Base>
   4b1a8:	ldr	r6, [r4, #236]	; 0xec
   4b1ac:	cmp	r6, #4
   4b1b0:	mov	r5, r0
   4b1b4:	str	r0, [r4, #312]	; 0x138
   4b1b8:	bgt	4b8c0 <freeBrailleWindow@@Base+0x12a0>
   4b1bc:	cmp	r6, #0
   4b1c0:	beq	4b8e4 <freeBrailleWindow@@Base+0x12c4>
   4b1c4:	add	r9, sp, #88	; 0x58
   4b1c8:	mov	r0, r9
   4b1cc:	bl	faac <pthread_attr_init@plt>
   4b1d0:	mov	r1, #1
   4b1d4:	mov	r0, r9
   4b1d8:	bl	f884 <pthread_attr_setdetachstate@plt>
   4b1dc:	mov	r0, r9
   4b1e0:	ldr	r1, [r4, #316]	; 0x13c
   4b1e4:	bl	fa70 <pthread_attr_setstacksize@plt>
   4b1e8:	ldr	r2, [r4, #236]	; 0xec
   4b1ec:	cmp	r2, #0
   4b1f0:	ble	4b370 <freeBrailleWindow@@Base+0xd50>
   4b1f4:	lsl	r0, r2, #4
   4b1f8:	add	r4, r4, #172	; 0xac
   4b1fc:	mov	r3, r7
   4b200:	mvn	r1, #0
   4b204:	add	r2, r4, r3
   4b208:	add	r3, r3, #16
   4b20c:	cmp	r3, r0
   4b210:	str	r1, [r2, #4]
   4b214:	bne	4b204 <freeBrailleWindow@@Base+0xbe4>
   4b218:	ldr	ip, [pc, #1768]	; 4b908 <freeBrailleWindow@@Base+0x12e8>
   4b21c:	mov	r7, #0
   4b220:	ldr	fp, [pc, #1764]	; 4b90c <freeBrailleWindow@@Base+0x12ec>
   4b224:	sub	r8, r4, #172	; 0xac
   4b228:	add	ip, pc, ip
   4b22c:	str	ip, [sp, #24]
   4b230:	ldr	ip, [pc, #1752]	; 4b910 <freeBrailleWindow@@Base+0x12f0>
   4b234:	add	fp, pc, fp
   4b238:	mov	r6, r7
   4b23c:	add	ip, pc, ip
   4b240:	str	ip, [sp, #20]
   4b244:	add	ip, r4, #68	; 0x44
   4b248:	str	ip, [sp, #16]
   4b24c:	b	4b32c <freeBrailleWindow@@Base+0xd0c>
   4b250:	mov	r0, r5
   4b254:	mov	r1, #58	; 0x3a
   4b258:	bl	fd34 <strrchr@plt>
   4b25c:	subs	sl, r0, #0
   4b260:	beq	4b85c <freeBrailleWindow@@Base+0x123c>
   4b264:	cmp	r5, sl
   4b268:	beq	4b7f8 <freeBrailleWindow@@Base+0x11d8>
   4b26c:	mov	r1, #0
   4b270:	mov	r2, #10
   4b274:	add	r0, sl, #1
   4b278:	rsb	sl, r5, sl
   4b27c:	bl	f4e8 <strtol@plt>
   4b280:	movw	r3, #61434	; 0xeffa
   4b284:	cmp	r0, r3
   4b288:	addle	ip, r0, #4096	; 0x1000
   4b28c:	add	r0, sl, #1
   4b290:	addle	ip, ip, #5
   4b294:	movwgt	ip, #4101	; 0x1005
   4b298:	str	ip, [sp, #12]
   4b29c:	bl	fb48 <malloc@plt>
   4b2a0:	mov	r2, sl
   4b2a4:	mov	r1, r5
   4b2a8:	str	r0, [r4, #8]
   4b2ac:	bl	fb24 <memcpy@plt>
   4b2b0:	mov	r1, #0
   4b2b4:	mov	r3, r0
   4b2b8:	mov	r0, #6
   4b2bc:	strb	r1, [r3, sl]
   4b2c0:	bl	fb48 <malloc@plt>
   4b2c4:	ldr	lr, [sp, #20]
   4b2c8:	mov	r1, #6
   4b2cc:	mov	r2, #1
   4b2d0:	mov	r3, r1
   4b2d4:	str	r0, [r4, #12]
   4b2d8:	ldr	ip, [sp, #12]
   4b2dc:	str	lr, [sp]
   4b2e0:	str	ip, [sp, #4]
   4b2e4:	bl	fb60 <__snprintf_chk@plt>
   4b2e8:	mov	r3, #0
   4b2ec:	ldr	ip, [sp, #16]
   4b2f0:	mov	r1, r9
   4b2f4:	str	r3, [r4]
   4b2f8:	mov	r2, fp
   4b2fc:	add	r0, ip, r7
   4b300:	mov	r3, r6
   4b304:	bl	fc50 <pthread_create@plt>
   4b308:	cmp	r0, #0
   4b30c:	bne	4b7b0 <freeBrailleWindow@@Base+0x1190>
   4b310:	ldr	r3, [r8, #236]	; 0xec
   4b314:	add	r6, r6, #1
   4b318:	add	r7, r7, #4
   4b31c:	add	r4, r4, #16
   4b320:	cmp	r3, r6
   4b324:	ble	4b36c <freeBrailleWindow@@Base+0xd4c>
   4b328:	ldr	r5, [r8, #312]	; 0x138
   4b32c:	ldr	r5, [r5, r7]
   4b330:	cmp	r5, #0
   4b334:	beq	4b344 <freeBrailleWindow@@Base+0xd24>
   4b338:	ldrb	r3, [r5]
   4b33c:	cmp	r3, #0
   4b340:	bne	4b250 <freeBrailleWindow@@Base+0xc30>
   4b344:	mov	lr, #0
   4b348:	mov	r0, #2
   4b34c:	str	lr, [r4, #8]
   4b350:	bl	fb48 <malloc@plt>
   4b354:	cmp	r0, #0
   4b358:	str	r0, [r4, #12]
   4b35c:	movne	r3, #48	; 0x30
   4b360:	strhne	r3, [r0]
   4b364:	mov	r3, #1
   4b368:	b	4b2ec <freeBrailleWindow@@Base+0xccc>
   4b36c:	mov	r2, r3
   4b370:	ldr	r7, [pc, #1436]	; 4b914 <freeBrailleWindow@@Base+0x12f4>
   4b374:	mov	r1, #0
   4b378:	ldr	r0, [pc, #1432]	; 4b918 <freeBrailleWindow@@Base+0x12f8>
   4b37c:	mov	r3, r1
   4b380:	add	r7, pc, r7
   4b384:	ldr	lr, [pc, #1424]	; 4b91c <freeBrailleWindow@@Base+0x12fc>
   4b388:	ldr	ip, [pc, #1424]	; 4b920 <freeBrailleWindow@@Base+0x1300>
   4b38c:	add	r0, pc, r0
   4b390:	add	r7, r7, #172	; 0xac
   4b394:	add	lr, pc, lr
   4b398:	add	ip, pc, ip
   4b39c:	str	lr, [sp, #40]	; 0x28
   4b3a0:	str	r1, [r0, #280]	; 0x118
   4b3a4:	add	lr, lr, #44	; 0x2c
   4b3a8:	str	r1, [r0, #320]	; 0x140
   4b3ac:	add	r1, ip, #24
   4b3b0:	str	ip, [sp, #44]	; 0x2c
   4b3b4:	str	lr, [sp, #48]	; 0x30
   4b3b8:	str	r1, [sp, #52]	; 0x34
   4b3bc:	cmp	r3, #31
   4b3c0:	bls	4b744 <freeBrailleWindow@@Base+0x1124>
   4b3c4:	cmp	r2, #0
   4b3c8:	mov	r4, #0
   4b3cc:	str	r4, [sp, #76]	; 0x4c
   4b3d0:	ble	4b444 <freeBrailleWindow@@Base+0xe24>
   4b3d4:	ldr	r8, [pc, #1352]	; 4b924 <freeBrailleWindow@@Base+0x1304>
   4b3d8:	mov	r5, r4
   4b3dc:	mov	r9, #1
   4b3e0:	add	r8, pc, r8
   4b3e4:	add	r6, r7, r4
   4b3e8:	ldr	r0, [r6, #4]
   4b3ec:	cmp	r0, #0
   4b3f0:	blt	4b430 <freeBrailleWindow@@Base+0xe10>
   4b3f4:	bl	fbe4 <__fdelt_chk@plt>
   4b3f8:	ldr	r3, [r6, #4]
   4b3fc:	add	r1, sp, #1280	; 0x500
   4b400:	ldr	ip, [sp, #76]	; 0x4c
   4b404:	add	r0, r1, r0, lsl #2
   4b408:	asr	r2, r3, #31
   4b40c:	cmp	r3, ip
   4b410:	ldr	r1, [r0, #-1028]	; 0xfffffbfc
   4b414:	lsr	r2, r2, #27
   4b418:	strgt	r3, [sp, #76]	; 0x4c
   4b41c:	add	ip, r3, r2
   4b420:	and	ip, ip, #31
   4b424:	rsb	r2, r2, ip
   4b428:	orr	r2, r1, r9, lsl r2
   4b42c:	str	r2, [r0, #-1028]	; 0xfffffbfc
   4b430:	ldr	r3, [r8, #236]	; 0xec
   4b434:	add	r5, r5, #1
   4b438:	add	r4, r4, #16
   4b43c:	cmp	r3, r5
   4b440:	bgt	4b3e4 <freeBrailleWindow@@Base+0xdc4>
   4b444:	ldr	r0, [sp, #48]	; 0x30
   4b448:	add	fp, sp, #80	; 0x50
   4b44c:	bl	f3f8 <pthread_mutex_lock@plt>
   4b450:	sub	r4, fp, #4
   4b454:	ldr	lr, [sp, #40]	; 0x28
   4b458:	add	r3, sp, #252	; 0xfc
   4b45c:	add	r0, sp, #252	; 0xfc
   4b460:	str	r3, [sp, #20]
   4b464:	add	r2, lr, #292	; 0x124
   4b468:	add	r3, lr, #308	; 0x134
   4b46c:	mov	r1, r4
   4b470:	bl	47380 <processSpeechInput@@Base+0x66c>
   4b474:	ldr	ip, [sp, #44]	; 0x2c
   4b478:	mov	r1, r4
   4b47c:	add	r0, sp, #252	; 0xfc
   4b480:	ldr	r2, [sp, #52]	; 0x34
   4b484:	add	r3, ip, #40	; 0x28
   4b488:	bl	47380 <processSpeechInput@@Base+0x66c>
   4b48c:	ldr	r0, [pc, #1172]	; 4b928 <freeBrailleWindow@@Base+0x1308>
   4b490:	add	r0, pc, r0
   4b494:	add	r0, r0, #44	; 0x2c
   4b498:	bl	fdf4 <pthread_mutex_unlock@plt>
   4b49c:	ldr	r0, [sp, #76]	; 0x4c
   4b4a0:	mov	ip, #0
   4b4a4:	str	fp, [sp]
   4b4a8:	mov	r2, ip
   4b4ac:	mov	r3, ip
   4b4b0:	add	r0, r0, #1
   4b4b4:	add	r1, sp, #252	; 0xfc
   4b4b8:	str	ip, [sp, #84]	; 0x54
   4b4bc:	mov	ip, #1
   4b4c0:	str	ip, [sp, #80]	; 0x50
   4b4c4:	bl	fa34 <select@plt>
   4b4c8:	cmp	r0, #0
   4b4cc:	blt	4b77c <freeBrailleWindow@@Base+0x115c>
   4b4d0:	ldr	r8, [pc, #1108]	; 4b92c <freeBrailleWindow@@Base+0x130c>
   4b4d4:	sub	r0, fp, #8
   4b4d8:	bl	fc74 <time@plt>
   4b4dc:	add	r8, pc, r8
   4b4e0:	ldr	r3, [r8, #236]	; 0xec
   4b4e4:	cmp	r3, #0
   4b4e8:	ble	4b704 <freeBrailleWindow@@Base+0x10e4>
   4b4ec:	ldr	lr, [pc, #1084]	; 4b930 <freeBrailleWindow@@Base+0x1310>
   4b4f0:	mov	r4, #0
   4b4f4:	ldr	r1, [pc, #1080]	; 4b934 <freeBrailleWindow@@Base+0x1314>
   4b4f8:	add	r8, r8, #172	; 0xac
   4b4fc:	ldr	r2, [pc, #1076]	; 4b938 <freeBrailleWindow@@Base+0x1318>
   4b500:	add	lr, pc, lr
   4b504:	ldr	ip, [pc, #1072]	; 4b93c <freeBrailleWindow@@Base+0x131c>
   4b508:	add	r1, pc, r1
   4b50c:	add	r2, pc, r2
   4b510:	add	r3, lr, #44	; 0x2c
   4b514:	add	ip, pc, ip
   4b518:	str	lr, [sp, #24]
   4b51c:	str	r1, [sp, #28]
   4b520:	mov	r5, r4
   4b524:	str	r2, [sp, #32]
   4b528:	str	r3, [sp, #36]	; 0x24
   4b52c:	str	ip, [sp, #60]	; 0x3c
   4b530:	b	4b550 <freeBrailleWindow@@Base+0xf30>
   4b534:	ldr	r3, [pc, #1028]	; 4b940 <freeBrailleWindow@@Base+0x1320>
   4b538:	add	r5, r5, #1
   4b53c:	add	r4, r4, #16
   4b540:	add	r3, pc, r3
   4b544:	ldr	r3, [r3, #236]	; 0xec
   4b548:	cmp	r3, r5
   4b54c:	ble	4b704 <freeBrailleWindow@@Base+0x10e4>
   4b550:	add	r6, r8, r4
   4b554:	ldr	r0, [r6, #4]
   4b558:	cmp	r0, #0
   4b55c:	blt	4b534 <freeBrailleWindow@@Base+0xf14>
   4b560:	bl	fbe4 <__fdelt_chk@plt>
   4b564:	ldr	r3, [r6, #4]
   4b568:	add	lr, sp, #1280	; 0x500
   4b56c:	add	r0, lr, r0, lsl #2
   4b570:	asr	r2, r3, #31
   4b574:	ldr	r1, [r0, #-1028]	; 0xfffffbfc
   4b578:	lsr	r2, r2, #27
   4b57c:	add	r0, r3, r2
   4b580:	and	r0, r0, #31
   4b584:	rsb	r2, r2, r0
   4b588:	asr	r2, r1, r2
   4b58c:	tst	r2, #1
   4b590:	beq	4b534 <freeBrailleWindow@@Base+0xf14>
   4b594:	add	sl, sp, #124	; 0x7c
   4b598:	mov	r0, r3
   4b59c:	sub	r2, fp, #12
   4b5a0:	mov	r3, #128	; 0x80
   4b5a4:	mov	r1, sl
   4b5a8:	str	r3, [sp, #68]	; 0x44
   4b5ac:	bl	fb9c <accept@plt>
   4b5b0:	cmn	r0, #1
   4b5b4:	mov	r9, r0
   4b5b8:	beq	4b6b8 <freeBrailleWindow@@Base+0x1098>
   4b5bc:	add	r6, sp, #1020	; 0x3fc
   4b5c0:	mov	r2, sl
   4b5c4:	mov	r1, #256	; 0x100
   4b5c8:	ldr	r3, [sp, #68]	; 0x44
   4b5cc:	mov	r0, r6
   4b5d0:	bl	4dfac <formatAddress@@Base>
   4b5d4:	mov	r3, r6
   4b5d8:	mov	r0, #5
   4b5dc:	ldr	r1, [sp, #28]
   4b5e0:	mov	r2, r9
   4b5e4:	bl	1c634 <logMessage@@Base>
   4b5e8:	ldr	r1, [sp, #32]
   4b5ec:	mov	r0, r9
   4b5f0:	ldr	r3, [r1, #280]	; 0x118
   4b5f4:	cmp	r3, #4
   4b5f8:	bls	4b638 <freeBrailleWindow@@Base+0x1018>
   4b5fc:	mov	r1, #8
   4b600:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4b604:	mov	r0, r9
   4b608:	bl	f764 <close@plt>
   4b60c:	ldr	r3, [pc, #816]	; 4b944 <freeBrailleWindow@@Base+0x1324>
   4b610:	add	r3, pc, r3
   4b614:	ldr	r3, [r3, #320]	; 0x140
   4b618:	cmp	r3, #0
   4b61c:	movne	r2, r3
   4b620:	beq	4b75c <freeBrailleWindow@@Base+0x113c>
   4b624:	ldr	r3, [pc, #796]	; 4b948 <freeBrailleWindow@@Base+0x1328>
   4b628:	add	r2, r2, #1
   4b62c:	add	r3, pc, r3
   4b630:	str	r2, [r3, #320]	; 0x140
   4b634:	b	4b534 <freeBrailleWindow@@Base+0xf14>
   4b638:	mov	r1, #0
   4b63c:	bl	1f1a8 <setBlockingIo@@Base>
   4b640:	cmp	r0, #0
   4b644:	beq	4b6e4 <freeBrailleWindow@@Base+0x10c4>
   4b648:	mov	r0, r9
   4b64c:	ldr	r1, [sp, #72]	; 0x48
   4b650:	bl	4a314 <initializePacket@@Base+0x10>
   4b654:	subs	r6, r0, #0
   4b658:	beq	4b798 <freeBrailleWindow@@Base+0x1178>
   4b65c:	ldr	r2, [sp, #24]
   4b660:	ldr	r0, [sp, #36]	; 0x24
   4b664:	ldr	r9, [r2, #292]	; 0x124
   4b668:	ldr	r3, [r2, #280]	; 0x118
   4b66c:	add	r3, r3, #1
   4b670:	str	r3, [r2, #280]	; 0x118
   4b674:	bl	f3f8 <pthread_mutex_lock@plt>
   4b678:	ldr	r3, [r9, #4]
   4b67c:	str	r9, [r6]
   4b680:	ldr	r0, [sp, #36]	; 0x24
   4b684:	str	r3, [r6, #4]
   4b688:	ldr	r3, [r9, #4]
   4b68c:	str	r6, [r3]
   4b690:	str	r6, [r9, #4]
   4b694:	bl	fdf4 <pthread_mutex_unlock@plt>
   4b698:	add	r2, sp, #1280	; 0x500
   4b69c:	mov	r3, #134217728	; 0x8000000
   4b6a0:	ldr	r0, [r6, #8]
   4b6a4:	str	r3, [r2, #-772]!	; 0xfffffcfc
   4b6a8:	mov	r1, #118	; 0x76
   4b6ac:	mov	r3, #4
   4b6b0:	bl	47e80 <brlapiserver_writePacket@@Base>
   4b6b4:	b	4b534 <freeBrailleWindow@@Base+0xf14>
   4b6b8:	bl	fca4 <__errno_location@plt>
   4b6bc:	ldr	r6, [r6, #4]
   4b6c0:	ldr	r0, [r0]
   4b6c4:	bl	f5c0 <strerror@plt>
   4b6c8:	ldr	r1, [pc, #636]	; 4b94c <freeBrailleWindow@@Base+0x132c>
   4b6cc:	mov	r2, r6
   4b6d0:	add	r1, pc, r1
   4b6d4:	mov	r3, r0
   4b6d8:	mov	r0, #4
   4b6dc:	bl	1c634 <logMessage@@Base>
   4b6e0:	b	4b534 <freeBrailleWindow@@Base+0xf14>
   4b6e4:	bl	fca4 <__errno_location@plt>
   4b6e8:	ldr	r0, [r0]
   4b6ec:	bl	f5c0 <strerror@plt>
   4b6f0:	ldr	r1, [pc, #600]	; 4b950 <freeBrailleWindow@@Base+0x1330>
   4b6f4:	add	r1, pc, r1
   4b6f8:	mov	r2, r0
   4b6fc:	mov	r0, #4
   4b700:	bl	1c634 <logMessage@@Base>
   4b704:	ldr	r2, [pc, #584]	; 4b954 <freeBrailleWindow@@Base+0x1334>
   4b708:	add	r0, sp, #252	; 0xfc
   4b70c:	ldr	r1, [sp, #72]	; 0x48
   4b710:	add	r2, pc, r2
   4b714:	add	r2, r2, #284	; 0x11c
   4b718:	bl	4a8b8 <freeBrailleWindow@@Base+0x298>
   4b71c:	ldr	r2, [pc, #564]	; 4b958 <freeBrailleWindow@@Base+0x1338>
   4b720:	add	r0, sp, #252	; 0xfc
   4b724:	ldr	r1, [sp, #72]	; 0x48
   4b728:	add	r2, pc, r2
   4b72c:	add	r2, r2, #16
   4b730:	bl	4a8b8 <freeBrailleWindow@@Base+0x298>
   4b734:	ldr	r2, [pc, #544]	; 4b95c <freeBrailleWindow@@Base+0x133c>
   4b738:	mov	r3, #0
   4b73c:	add	r2, pc, r2
   4b740:	ldr	r2, [r2, #236]	; 0xec
   4b744:	add	ip, sp, #1280	; 0x500
   4b748:	mov	r0, #0
   4b74c:	add	r1, ip, r3, lsl #2
   4b750:	add	r3, r3, #1
   4b754:	str	r0, [r1, #-1028]	; 0xfffffbfc
   4b758:	b	4b3bc <freeBrailleWindow@@Base+0xd9c>
   4b75c:	ldr	r1, [pc, #508]	; 4b960 <freeBrailleWindow@@Base+0x1340>
   4b760:	mov	r0, #4
   4b764:	add	r1, pc, r1
   4b768:	bl	1c634 <logMessage@@Base>
   4b76c:	ldr	r3, [pc, #496]	; 4b964 <freeBrailleWindow@@Base+0x1344>
   4b770:	add	r3, pc, r3
   4b774:	ldr	r2, [r3, #320]	; 0x140
   4b778:	b	4b624 <freeBrailleWindow@@Base+0x1004>
   4b77c:	ldr	r3, [sp, #76]	; 0x4c
   4b780:	cmp	r3, #0
   4b784:	bne	4b814 <freeBrailleWindow@@Base+0x11f4>
   4b788:	ldr	r2, [pc, #472]	; 4b968 <freeBrailleWindow@@Base+0x1348>
   4b78c:	add	r2, pc, r2
   4b790:	ldr	r2, [r2, #236]	; 0xec
   4b794:	b	4b744 <freeBrailleWindow@@Base+0x1124>
   4b798:	mov	r0, #4
   4b79c:	ldr	r1, [sp, #60]	; 0x3c
   4b7a0:	bl	1c634 <logMessage@@Base>
   4b7a4:	mov	r0, r9
   4b7a8:	bl	f764 <close@plt>
   4b7ac:	b	4b534 <freeBrailleWindow@@Base+0xf14>
   4b7b0:	bl	f5c0 <strerror@plt>
   4b7b4:	ldr	r1, [pc, #432]	; 4b96c <freeBrailleWindow@@Base+0x134c>
   4b7b8:	add	r1, pc, r1
   4b7bc:	mov	r2, r0
   4b7c0:	mov	r0, #4
   4b7c4:	bl	1c634 <logMessage@@Base>
   4b7c8:	subs	r4, r6, #1
   4b7cc:	bcc	4b7f0 <freeBrailleWindow@@Base+0x11d0>
   4b7d0:	ldr	r3, [pc, #408]	; 4b970 <freeBrailleWindow@@Base+0x1350>
   4b7d4:	add	r3, pc, r3
   4b7d8:	add	r3, r3, #240	; 0xf0
   4b7dc:	add	r6, r3, r6, lsl #2
   4b7e0:	ldr	r0, [r6, #-4]!
   4b7e4:	bl	fa40 <pthread_cancel@plt>
   4b7e8:	subs	r4, r4, #1
   4b7ec:	bcs	4b7e0 <freeBrailleWindow@@Base+0x11c0>
   4b7f0:	mov	r0, #0
   4b7f4:	bl	f584 <pthread_exit@plt>
   4b7f8:	mov	r1, #0
   4b7fc:	add	r0, r5, #1
   4b800:	str	r1, [r4, #8]
   4b804:	bl	f740 <__strdup@plt>
   4b808:	mov	r3, #1
   4b80c:	str	r0, [r4, #12]
   4b810:	b	4b2ec <freeBrailleWindow@@Base+0xccc>
   4b814:	bl	fca4 <__errno_location@plt>
   4b818:	ldr	r0, [r0]
   4b81c:	bl	f5c0 <strerror@plt>
   4b820:	ldr	r1, [pc, #332]	; 4b974 <freeBrailleWindow@@Base+0x1354>
   4b824:	add	r1, pc, r1
   4b828:	mov	r2, r0
   4b82c:	mov	r0, #4
   4b830:	bl	1c634 <logMessage@@Base>
   4b834:	bl	47cf4 <processSpeechInput@@Base+0xfe0>
   4b838:	ldr	ip, [sp, #56]	; 0x38
   4b83c:	ldr	r2, [sp, #1276]	; 0x4fc
   4b840:	mov	r0, #0
   4b844:	ldr	r3, [ip]
   4b848:	cmp	r2, r3
   4b84c:	bne	4b8e0 <freeBrailleWindow@@Base+0x12c0>
   4b850:	add	sp, sp, #1280	; 0x500
   4b854:	add	sp, sp, #4
   4b858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b85c:	mov	r0, r5
   4b860:	bl	f740 <__strdup@plt>
   4b864:	str	r0, [r4, #8]
   4b868:	mov	r0, #5
   4b86c:	bl	fb48 <malloc@plt>
   4b870:	mov	r3, #0
   4b874:	subs	r2, r0, #0
   4b878:	str	r2, [r4, #12]
   4b87c:	ldrne	ip, [sp, #24]
   4b880:	ldmne	ip, {r0, r1}
   4b884:	strne	r0, [r2]
   4b888:	strbne	r1, [r2, #4]
   4b88c:	b	4b2ec <freeBrailleWindow@@Base+0xccc>
   4b890:	mov	r4, r0
   4b894:	bl	47cf4 <processSpeechInput@@Base+0xfe0>
   4b898:	mov	r0, r4
   4b89c:	bl	fd04 <_Unwind_Resume@plt>
   4b8a0:	bl	f5c0 <strerror@plt>
   4b8a4:	ldr	r1, [pc, #204]	; 4b978 <freeBrailleWindow@@Base+0x1358>
   4b8a8:	add	r1, pc, r1
   4b8ac:	mov	r2, r0
   4b8b0:	mov	r0, #4
   4b8b4:	bl	1c634 <logMessage@@Base>
   4b8b8:	mov	r0, #0
   4b8bc:	bl	f584 <pthread_exit@plt>
   4b8c0:	ldr	r1, [pc, #180]	; 4b97c <freeBrailleWindow@@Base+0x135c>
   4b8c4:	mov	r0, #3
   4b8c8:	mov	r2, r6
   4b8cc:	mov	r3, #4
   4b8d0:	add	r1, pc, r1
   4b8d4:	bl	1c634 <logMessage@@Base>
   4b8d8:	mov	r0, r7
   4b8dc:	bl	f584 <pthread_exit@plt>
   4b8e0:	bl	f950 <__stack_chk_fail@plt>
   4b8e4:	ldr	r1, [pc, #148]	; 4b980 <freeBrailleWindow@@Base+0x1360>
   4b8e8:	mov	r0, #6
   4b8ec:	add	r1, pc, r1
   4b8f0:	bl	1c634 <logMessage@@Base>
   4b8f4:	mov	r0, r6
   4b8f8:	bl	f584 <pthread_exit@plt>
   4b8fc:	andeq	r7, r2, ip, ror #18
   4b900:			; <UNDEFINED> instruction: 0x000003b4
   4b904:	andeq	r8, r2, r4, ror lr
   4b908:	andeq	r0, r1, ip, lsl #17
   4b90c:			; <UNDEFINED> instruction: 0xffffc1e8
   4b910:	andeq	lr, r0, r4, lsl r7
   4b914:	muleq	r2, r0, ip
   4b918:	andeq	r8, r2, r4, lsl #25
   4b91c:	andeq	r8, r2, ip, ror ip
   4b920:	andeq	r8, r2, r8, ror ip
   4b924:	andeq	r8, r2, r0, lsr ip
   4b928:	andeq	r8, r2, r0, lsl #23
   4b92c:	andeq	r8, r2, r4, lsr fp
   4b930:	andeq	r8, r2, r0, lsl fp
   4b934:	andeq	r0, r1, r4, ror #11
   4b938:	andeq	r8, r2, r4, lsl #22
   4b93c:	andeq	r0, r1, ip, asr r6
   4b940:	ldrdeq	r8, [r2], -r0
   4b944:	andeq	r8, r2, r0, lsl #20
   4b948:	andeq	r8, r2, r4, ror #19
   4b94c:	andeq	r0, r1, ip, lsl #8
   4b950:	andeq	r0, r1, r0, asr r4
   4b954:	andeq	r8, r2, r0, lsl #18
   4b958:	andeq	r8, r2, r8, ror #17
   4b95c:	ldrdeq	r8, [r2], -r4
   4b960:			; <UNDEFINED> instruction: 0x000103b0
   4b964:	andeq	r8, r2, r0, lsr #17
   4b968:	andeq	r8, r2, r4, lsl #17
   4b96c:	andeq	r0, r1, r4, lsl #6
   4b970:	andeq	r8, r2, ip, lsr r8
   4b974:	andeq	r0, r1, ip, lsr #5
   4b978:			; <UNDEFINED> instruction: 0x000101b8
   4b97c:	andeq	r0, r1, r8, lsr #3
   4b980:			; <UNDEFINED> instruction: 0x000101b4
   4b984:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4b988:	mov	r6, r2
   4b98c:	ldr	r7, [pc, #2340]	; 4c2b8 <freeBrailleWindow@@Base+0x1c98>
   4b990:	sub	sp, sp, #68	; 0x44
   4b994:	ldr	r1, [pc, #2336]	; 4c2bc <freeBrailleWindow@@Base+0x1c9c>
   4b998:	mov	r4, r0
   4b99c:	add	r7, pc, r7
   4b9a0:	ldr	sl, [r0, #20]
   4b9a4:	ldr	r5, [r7, r1]
   4b9a8:	cmp	sl, #0
   4b9ac:	ldr	r2, [r5]
   4b9b0:	str	r2, [sp, #60]	; 0x3c
   4b9b4:	bne	4ba54 <freeBrailleWindow@@Base+0x1434>
   4b9b8:	cmp	r3, #3
   4b9bc:	bls	4bad4 <freeBrailleWindow@@Base+0x14b4>
   4b9c0:	ldr	r2, [r6]
   4b9c4:	sub	r1, r3, #4
   4b9c8:	add	r8, r6, #4
   4b9cc:	rev	r2, r2
   4b9d0:	lsl	r9, r2, #2
   4b9d4:	cmp	r1, r9
   4b9d8:	bcc	4ba94 <freeBrailleWindow@@Base+0x1474>
   4b9dc:	ldrb	r0, [r8, r2, lsl #2]
   4b9e0:	add	r1, r8, r9
   4b9e4:	cmp	r0, #31
   4b9e8:	bhi	4bc34 <freeBrailleWindow@@Base+0x1614>
   4b9ec:	sub	r3, r3, #5
   4b9f0:	rsb	fp, r9, r3
   4b9f4:	cmp	fp, r0
   4b9f8:	beq	4bb14 <freeBrailleWindow@@Base+0x14f4>
   4b9fc:	ldr	r1, [pc, #2236]	; 4c2c0 <freeBrailleWindow@@Base+0x1ca0>
   4ba00:	mov	r0, #3
   4ba04:	mov	r2, #7
   4ba08:	ldr	r3, [r4, #8]
   4ba0c:	add	r1, pc, r1
   4ba10:	bl	1c634 <logMessage@@Base>
   4ba14:	ldr	r1, [pc, #2216]	; 4c2c4 <freeBrailleWindow@@Base+0x1ca4>
   4ba18:	ldr	r2, [pc, #2216]	; 4c2c8 <freeBrailleWindow@@Base+0x1ca8>
   4ba1c:	mov	r0, #3
   4ba20:	add	r1, pc, r1
   4ba24:	add	r2, pc, r2
   4ba28:	bl	1c634 <logMessage@@Base>
   4ba2c:	ldr	r0, [r4, #8]
   4ba30:	mov	r1, #7
   4ba34:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4ba38:	ldr	r2, [sp, #60]	; 0x3c
   4ba3c:	mov	r0, #0
   4ba40:	ldr	r3, [r5]
   4ba44:	cmp	r2, r3
   4ba48:	bne	4c268 <freeBrailleWindow@@Base+0x1c48>
   4ba4c:	add	sp, sp, #68	; 0x44
   4ba50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4ba54:	ldr	r1, [pc, #2160]	; 4c2cc <freeBrailleWindow@@Base+0x1cac>
   4ba58:	mov	r0, #3
   4ba5c:	ldr	r3, [r4, #8]
   4ba60:	mov	r2, #5
   4ba64:	add	r1, pc, r1
   4ba68:	bl	1c634 <logMessage@@Base>
   4ba6c:	ldr	r1, [pc, #2140]	; 4c2d0 <freeBrailleWindow@@Base+0x1cb0>
   4ba70:	ldr	r2, [pc, #2140]	; 4c2d4 <freeBrailleWindow@@Base+0x1cb4>
   4ba74:	mov	r0, #3
   4ba78:	add	r1, pc, r1
   4ba7c:	add	r2, pc, r2
   4ba80:	bl	1c634 <logMessage@@Base>
   4ba84:	ldr	r0, [r4, #8]
   4ba88:	mov	r1, #5
   4ba8c:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4ba90:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4ba94:	ldr	r1, [pc, #2108]	; 4c2d8 <freeBrailleWindow@@Base+0x1cb8>
   4ba98:	mov	r0, #3
   4ba9c:	ldr	r3, [r4, #8]
   4baa0:	mov	r2, #7
   4baa4:	add	r1, pc, r1
   4baa8:	bl	1c634 <logMessage@@Base>
   4baac:	ldr	r1, [pc, #2088]	; 4c2dc <freeBrailleWindow@@Base+0x1cbc>
   4bab0:	ldr	r2, [pc, #2088]	; 4c2e0 <freeBrailleWindow@@Base+0x1cc0>
   4bab4:	mov	r0, #3
   4bab8:	add	r1, pc, r1
   4babc:	add	r2, pc, r2
   4bac0:	bl	1c634 <logMessage@@Base>
   4bac4:	ldr	r0, [r4, #8]
   4bac8:	mov	r1, #7
   4bacc:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4bad0:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4bad4:	ldr	r1, [pc, #2056]	; 4c2e4 <freeBrailleWindow@@Base+0x1cc4>
   4bad8:	mov	r0, #3
   4badc:	ldr	r3, [r4, #8]
   4bae0:	mov	r2, #7
   4bae4:	add	r1, pc, r1
   4bae8:	bl	1c634 <logMessage@@Base>
   4baec:	ldr	r1, [pc, #2036]	; 4c2e8 <freeBrailleWindow@@Base+0x1cc8>
   4baf0:	ldr	r2, [pc, #2036]	; 4c2ec <freeBrailleWindow@@Base+0x1ccc>
   4baf4:	mov	r0, #3
   4baf8:	add	r1, pc, r1
   4bafc:	add	r2, pc, r2
   4bb00:	bl	1c634 <logMessage@@Base>
   4bb04:	ldr	r0, [r4, #8]
   4bb08:	mov	r1, #7
   4bb0c:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4bb10:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4bb14:	add	ip, sp, #28
   4bb18:	add	r1, r1, #1
   4bb1c:	mov	r2, fp
   4bb20:	mov	r3, #32
   4bb24:	mov	r0, ip
   4bb28:	bl	f464 <__memcpy_chk@plt>
   4bb2c:	add	r1, sp, #64	; 0x40
   4bb30:	add	fp, r1, fp
   4bb34:	strb	sl, [fp, #-36]	; 0xffffffdc
   4bb38:	ldrb	r3, [sp, #28]
   4bb3c:	cmp	r3, #0
   4bb40:	beq	4bd38 <freeBrailleWindow@@Base+0x1718>
   4bb44:	ldr	sl, [pc, #1956]	; 4c2f0 <freeBrailleWindow@@Base+0x1cd0>
   4bb48:	add	sl, pc, sl
   4bb4c:	ldr	r7, [sl, #128]	; 0x80
   4bb50:	ldr	r1, [r7]
   4bb54:	bl	fc5c <strcmp@plt>
   4bb58:	cmp	r0, #0
   4bb5c:	bne	4be98 <freeBrailleWindow@@Base+0x1878>
   4bb60:	add	r0, sl, #104	; 0x68
   4bb64:	bl	f3f8 <pthread_mutex_lock@plt>
   4bb68:	ldr	r3, [r7, #68]	; 0x44
   4bb6c:	cmp	r3, #0
   4bb70:	beq	4bcc8 <freeBrailleWindow@@Base+0x16a8>
   4bb74:	ldr	r3, [r7, #72]	; 0x48
   4bb78:	cmp	r3, #0
   4bb7c:	beq	4bcc8 <freeBrailleWindow@@Base+0x16a8>
   4bb80:	ldr	r0, [pc, #1900]	; 4c2f4 <freeBrailleWindow@@Base+0x1cd4>
   4bb84:	add	ip, r4, #32
   4bb88:	str	ip, [sp, #12]
   4bb8c:	mov	ip, #1
   4bb90:	add	r0, pc, r0
   4bb94:	str	ip, [sp, #16]
   4bb98:	add	r0, r0, #104	; 0x68
   4bb9c:	bl	fdf4 <pthread_mutex_unlock@plt>
   4bba0:	ldr	r0, [sp, #12]
   4bba4:	bl	4a620 <freeBrailleWindow@@Base>
   4bba8:	ldr	r0, [sp, #12]
   4bbac:	bl	4a55c <allocBrailleWindow@@Base>
   4bbb0:	cmn	r0, #1
   4bbb4:	beq	4bc74 <freeBrailleWindow@@Base+0x1654>
   4bbb8:	ldr	sl, [pc, #1848]	; 4c2f8 <freeBrailleWindow@@Base+0x1cd8>
   4bbbc:	add	r6, r6, r9
   4bbc0:	add	sl, pc, sl
   4bbc4:	add	r0, sl, #44	; 0x2c
   4bbc8:	bl	f3f8 <pthread_mutex_lock@plt>
   4bbcc:	cmp	r8, r6
   4bbd0:	bhi	4bed8 <freeBrailleWindow@@Base+0x18b8>
   4bbd4:	ldr	r9, [pc, #1824]	; 4c2fc <freeBrailleWindow@@Base+0x1cdc>
   4bbd8:	add	fp, sl, #16
   4bbdc:	add	r9, pc, r9
   4bbe0:	ldr	r7, [fp, #24]
   4bbe4:	mov	sl, r8
   4bbe8:	cmp	r7, #0
   4bbec:	beq	4bfa8 <freeBrailleWindow@@Base+0x1988>
   4bbf0:	ldr	r2, [r8]
   4bbf4:	add	r8, r8, #4
   4bbf8:	rev	r2, r2
   4bbfc:	b	4bc0c <freeBrailleWindow@@Base+0x15ec>
   4bc00:	ldr	r7, [r7, #20]
   4bc04:	cmp	r7, #0
   4bc08:	beq	4bfa8 <freeBrailleWindow@@Base+0x1988>
   4bc0c:	ldr	r3, [r7, #4]
   4bc10:	cmp	r2, r3
   4bc14:	bne	4bc00 <freeBrailleWindow@@Base+0x15e0>
   4bc18:	mov	r0, #7
   4bc1c:	mov	r1, r9
   4bc20:	bl	1c634 <logMessage@@Base>
   4bc24:	cmp	r6, r8
   4bc28:	bcc	4bedc <freeBrailleWindow@@Base+0x18bc>
   4bc2c:	mov	fp, r7
   4bc30:	b	4bbe0 <freeBrailleWindow@@Base+0x15c0>
   4bc34:	ldr	r1, [pc, #1732]	; 4c300 <freeBrailleWindow@@Base+0x1ce0>
   4bc38:	mov	r0, #3
   4bc3c:	ldr	r3, [r4, #8]
   4bc40:	mov	r2, #6
   4bc44:	add	r1, pc, r1
   4bc48:	bl	1c634 <logMessage@@Base>
   4bc4c:	ldr	r1, [pc, #1712]	; 4c304 <freeBrailleWindow@@Base+0x1ce4>
   4bc50:	ldr	r2, [pc, #1712]	; 4c308 <freeBrailleWindow@@Base+0x1ce8>
   4bc54:	mov	r0, #3
   4bc58:	add	r1, pc, r1
   4bc5c:	add	r2, pc, r2
   4bc60:	bl	1c634 <logMessage@@Base>
   4bc64:	ldr	r0, [r4, #8]
   4bc68:	mov	r1, #6
   4bc6c:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4bc70:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4bc74:	add	sl, r4, #96	; 0x60
   4bc78:	ldr	r1, [pc, #1676]	; 4c30c <freeBrailleWindow@@Base+0x1cec>
   4bc7c:	mov	r0, #4
   4bc80:	add	r1, pc, r1
   4bc84:	bl	1c634 <logMessage@@Base>
   4bc88:	mov	r0, sl
   4bc8c:	bl	4d164 <freeKeyrangeList@@Base>
   4bc90:	ldr	r1, [pc, #1656]	; 4c310 <freeBrailleWindow@@Base+0x1cf0>
   4bc94:	mov	r2, #1
   4bc98:	ldr	r3, [r4, #8]
   4bc9c:	mov	r0, #3
   4bca0:	add	r1, pc, r1
   4bca4:	bl	1c634 <logMessage@@Base>
   4bca8:	ldr	r1, [pc, #1636]	; 4c314 <freeBrailleWindow@@Base+0x1cf4>
   4bcac:	mov	r0, #3
   4bcb0:	add	r1, pc, r1
   4bcb4:	bl	1c634 <logMessage@@Base>
   4bcb8:	ldr	r0, [r4, #8]
   4bcbc:	mov	r1, #1
   4bcc0:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4bcc4:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4bcc8:	ldr	r3, [pc, #1608]	; 4c318 <freeBrailleWindow@@Base+0x1cf8>
   4bccc:	add	r3, pc, r3
   4bcd0:	ldr	r3, [r3, #140]	; 0x8c
   4bcd4:	cmp	r3, #0
   4bcd8:	beq	4bce8 <freeBrailleWindow@@Base+0x16c8>
   4bcdc:	ldr	r3, [r3, #20]
   4bce0:	cmp	r3, #0
   4bce4:	bne	4bb80 <freeBrailleWindow@@Base+0x1560>
   4bce8:	ldr	r0, [pc, #1580]	; 4c31c <freeBrailleWindow@@Base+0x1cfc>
   4bcec:	add	r0, pc, r0
   4bcf0:	add	r0, r0, #104	; 0x68
   4bcf4:	bl	fdf4 <pthread_mutex_unlock@plt>
   4bcf8:	ldr	r1, [pc, #1568]	; 4c320 <freeBrailleWindow@@Base+0x1d00>
   4bcfc:	ldr	r3, [r4, #8]
   4bd00:	mov	r0, #3
   4bd04:	add	r1, pc, r1
   4bd08:	mov	r2, #9
   4bd0c:	bl	1c634 <logMessage@@Base>
   4bd10:	ldr	r1, [pc, #1548]	; 4c324 <freeBrailleWindow@@Base+0x1d04>
   4bd14:	ldr	r2, [pc, #1548]	; 4c328 <freeBrailleWindow@@Base+0x1d08>
   4bd18:	mov	r0, #3
   4bd1c:	add	r1, pc, r1
   4bd20:	add	r2, pc, r2
   4bd24:	bl	1c634 <logMessage@@Base>
   4bd28:	ldr	r0, [r4, #8]
   4bd2c:	mov	r1, #9
   4bd30:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4bd34:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4bd38:	add	ip, r4, #32
   4bd3c:	str	ip, [sp, #12]
   4bd40:	ldr	fp, [pc, #1508]	; 4c32c <freeBrailleWindow@@Base+0x1d0c>
   4bd44:	add	sl, r4, #96	; 0x60
   4bd48:	mov	r0, ip
   4bd4c:	bl	4a620 <freeBrailleWindow@@Base>
   4bd50:	ldr	r3, [pc, #1496]	; 4c330 <freeBrailleWindow@@Base+0x1d10>
   4bd54:	add	fp, pc, fp
   4bd58:	add	fp, fp, #16
   4bd5c:	ldr	r7, [r7, r3]
   4bd60:	ldr	r3, [fp, #-12]
   4bd64:	ldrd	r0, [fp, #-8]
   4bd68:	cmp	r3, #4
   4bd6c:	addls	pc, pc, r3, lsl #2
   4bd70:	b	4be40 <freeBrailleWindow@@Base+0x1820>
   4bd74:	b	4bd88 <freeBrailleWindow@@Base+0x1768>
   4bd78:	b	4be2c <freeBrailleWindow@@Base+0x180c>
   4bd7c:	b	4bdd4 <freeBrailleWindow@@Base+0x17b4>
   4bd80:	b	4bdc0 <freeBrailleWindow@@Base+0x17a0>
   4bd84:	b	4bdb4 <freeBrailleWindow@@Base+0x1794>
   4bd88:	mvn	r2, #0
   4bd8c:	mvn	r3, #0
   4bd90:	str	sl, [sp]
   4bd94:	blx	r7
   4bd98:	cmn	r0, #1
   4bd9c:	beq	4bc78 <freeBrailleWindow@@Base+0x1658>
   4bda0:	ldr	r7, [fp], #16
   4bda4:	cmp	r7, #0
   4bda8:	bne	4bd60 <freeBrailleWindow@@Base+0x1740>
   4bdac:	str	r7, [sp, #16]
   4bdb0:	b	4bba8 <freeBrailleWindow@@Base+0x1588>
   4bdb4:	mov	r2, r0
   4bdb8:	mov	r3, r1
   4bdbc:	b	4bd90 <freeBrailleWindow@@Base+0x1770>
   4bdc0:	mov	r2, #0
   4bdc4:	mvn	r3, #0
   4bdc8:	orr	r2, r2, r0
   4bdcc:	orr	r3, r3, r1
   4bdd0:	b	4bd90 <freeBrailleWindow@@Base+0x1770>
   4bdd4:	mov	r2, #-536870912	; 0xe0000000
   4bdd8:	mov	r3, #0
   4bddc:	and	r2, r2, r0
   4bde0:	and	r3, r3, r1
   4bde4:	orrs	ip, r2, r3
   4bde8:	beq	4be68 <freeBrailleWindow@@Base+0x1848>
   4bdec:	cmp	r3, #0
   4bdf0:	cmpeq	r2, #536870912	; 0x20000000
   4bdf4:	bne	4be54 <freeBrailleWindow@@Base+0x1834>
   4bdf8:	mov	r2, #0
   4bdfc:	movt	r2, #8191	; 0x1fff
   4be00:	and	r2, r2, r0
   4be04:	mov	r3, #0
   4be08:	and	r3, r3, r1
   4be0c:	orrs	ip, r2, r3
   4be10:	moveq	r2, #0
   4be14:	mvneq	r3, #0
   4be18:	movwne	r2, #65535	; 0xffff
   4be1c:	mvnne	r3, #0
   4be20:	orr	r2, r2, r0
   4be24:	orr	r3, r3, r1
   4be28:	b	4bd90 <freeBrailleWindow@@Base+0x1770>
   4be2c:	mvn	r2, #-536870912	; 0xe0000000
   4be30:	mvn	r3, #0
   4be34:	orr	r2, r2, r0
   4be38:	orr	r3, r3, r1
   4be3c:	b	4bd90 <freeBrailleWindow@@Base+0x1770>
   4be40:	ldr	r3, [pc, #1260]	; 4c334 <freeBrailleWindow@@Base+0x1d14>
   4be44:	mov	r2, #6
   4be48:	add	r3, pc, r3
   4be4c:	str	r2, [r3, #256]	; 0x100
   4be50:	b	4bc78 <freeBrailleWindow@@Base+0x1658>
   4be54:	ldr	r3, [pc, #1244]	; 4c338 <freeBrailleWindow@@Base+0x1d18>
   4be58:	mov	r2, #6
   4be5c:	add	r3, pc, r3
   4be60:	str	r2, [r3, #256]	; 0x100
   4be64:	b	4bc78 <freeBrailleWindow@@Base+0x1658>
   4be68:	mov	r2, #520093696	; 0x1f000000
   4be6c:	mov	r3, #0
   4be70:	and	r2, r2, r0
   4be74:	and	r3, r3, r1
   4be78:	orrs	ip, r2, r3
   4be7c:	beq	4bf3c <freeBrailleWindow@@Base+0x191c>
   4be80:	cmp	r3, #0
   4be84:	cmpeq	r2, #16777216	; 0x1000000
   4be88:	bne	4be54 <freeBrailleWindow@@Base+0x1834>
   4be8c:	mvn	r2, #-16777216	; 0xff000000
   4be90:	mvn	r3, #0
   4be94:	b	4be20 <freeBrailleWindow@@Base+0x1800>
   4be98:	ldr	r1, [pc, #1180]	; 4c33c <freeBrailleWindow@@Base+0x1d1c>
   4be9c:	mov	r0, #3
   4bea0:	ldr	r3, [r4, #8]
   4bea4:	mov	r2, #6
   4bea8:	add	r1, pc, r1
   4beac:	bl	1c634 <logMessage@@Base>
   4beb0:	ldr	r1, [pc, #1160]	; 4c340 <freeBrailleWindow@@Base+0x1d20>
   4beb4:	ldr	r2, [pc, #1160]	; 4c344 <freeBrailleWindow@@Base+0x1d24>
   4beb8:	mov	r0, #3
   4bebc:	add	r1, pc, r1
   4bec0:	add	r2, pc, r2
   4bec4:	bl	1c634 <logMessage@@Base>
   4bec8:	ldr	r0, [r4, #8]
   4becc:	mov	r1, #6
   4bed0:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4bed4:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4bed8:	add	r7, sl, #16
   4bedc:	ldr	r6, [r4, #16]
   4bee0:	cmp	r6, #0
   4bee4:	beq	4c004 <freeBrailleWindow@@Base+0x19e4>
   4bee8:	ldr	r0, [pc, #1112]	; 4c348 <freeBrailleWindow@@Base+0x1d28>
   4beec:	add	r0, pc, r0
   4bef0:	add	r0, r0, #44	; 0x2c
   4bef4:	bl	fdf4 <pthread_mutex_unlock@plt>
   4bef8:	ldr	r3, [r4, #16]
   4befc:	cmp	r3, r7
   4bf00:	beq	4bf60 <freeBrailleWindow@@Base+0x1940>
   4bf04:	ldr	r1, [pc, #1088]	; 4c34c <freeBrailleWindow@@Base+0x1d2c>
   4bf08:	mov	r2, #6
   4bf0c:	ldr	r3, [r4, #8]
   4bf10:	mov	r0, #3
   4bf14:	add	r1, pc, r1
   4bf18:	bl	1c634 <logMessage@@Base>
   4bf1c:	ldr	r1, [pc, #1068]	; 4c350 <freeBrailleWindow@@Base+0x1d30>
   4bf20:	mov	r0, #3
   4bf24:	add	r1, pc, r1
   4bf28:	bl	1c634 <logMessage@@Base>
   4bf2c:	ldr	r0, [r4, #8]
   4bf30:	mov	r1, #6
   4bf34:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4bf38:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4bf3c:	mov	r2, #16711680	; 0xff0000
   4bf40:	mov	r3, #0
   4bf44:	and	r2, r2, r0
   4bf48:	and	r3, r3, r1
   4bf4c:	orrs	ip, r2, r3
   4bf50:	bne	4be54 <freeBrailleWindow@@Base+0x1834>
   4bf54:	mov	r2, #255	; 0xff
   4bf58:	mvn	r3, #0
   4bf5c:	b	4be20 <freeBrailleWindow@@Base+0x1800>
   4bf60:	ldr	r3, [r4, #28]
   4bf64:	mov	r0, #3
   4bf68:	ldr	ip, [sp, #16]
   4bf6c:	cmp	r3, ip
   4bf70:	beq	4c080 <freeBrailleWindow@@Base+0x1a60>
   4bf74:	ldr	r1, [pc, #984]	; 4c354 <freeBrailleWindow@@Base+0x1d34>
   4bf78:	mov	r2, #9
   4bf7c:	ldr	r3, [r4, #8]
   4bf80:	add	r1, pc, r1
   4bf84:	bl	1c634 <logMessage@@Base>
   4bf88:	ldr	r1, [pc, #968]	; 4c358 <freeBrailleWindow@@Base+0x1d38>
   4bf8c:	mov	r0, #3
   4bf90:	add	r1, pc, r1
   4bf94:	bl	1c634 <logMessage@@Base>
   4bf98:	ldr	r0, [r4, #8]
   4bf9c:	mov	r1, #9
   4bfa0:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4bfa4:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4bfa8:	ldr	r9, [r4, #16]
   4bfac:	cmp	r9, #0
   4bfb0:	beq	4c0bc <freeBrailleWindow@@Base+0x1a9c>
   4bfb4:	ldr	r0, [pc, #928]	; 4c35c <freeBrailleWindow@@Base+0x1d3c>
   4bfb8:	add	r0, pc, r0
   4bfbc:	add	r0, r0, #44	; 0x2c
   4bfc0:	bl	fdf4 <pthread_mutex_unlock@plt>
   4bfc4:	ldr	r1, [pc, #916]	; 4c360 <freeBrailleWindow@@Base+0x1d40>
   4bfc8:	mov	r2, #6
   4bfcc:	ldr	r3, [r4, #8]
   4bfd0:	mov	r0, #3
   4bfd4:	add	r1, pc, r1
   4bfd8:	bl	1c634 <logMessage@@Base>
   4bfdc:	ldr	r1, [pc, #896]	; 4c364 <freeBrailleWindow@@Base+0x1d44>
   4bfe0:	mov	r0, #3
   4bfe4:	add	r1, pc, r1
   4bfe8:	bl	1c634 <logMessage@@Base>
   4bfec:	ldr	r0, [r4, #8]
   4bff0:	mov	r1, #6
   4bff4:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4bff8:	ldr	r0, [sp, #12]
   4bffc:	bl	4a620 <freeBrailleWindow@@Base>
   4c000:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4c004:	ldr	r3, [r4]
   4c008:	ldr	r2, [r4, #4]
   4c00c:	ldr	ip, [sp, #16]
   4c010:	str	r7, [r4, #16]
   4c014:	ldr	r0, [pc, #844]	; 4c368 <freeBrailleWindow@@Base+0x1d48>
   4c018:	str	ip, [r4, #28]
   4c01c:	str	r2, [r3, #4]
   4c020:	add	r0, pc, r0
   4c024:	ldm	r4, {r2, r3}
   4c028:	add	r0, r0, #44	; 0x2c
   4c02c:	str	r2, [r3]
   4c030:	ldr	r3, [r7, #8]
   4c034:	ldr	r2, [r3, #4]
   4c038:	str	r3, [r4]
   4c03c:	str	r2, [r4, #4]
   4c040:	ldr	r2, [r3, #4]
   4c044:	str	r4, [r2]
   4c048:	str	r4, [r3, #4]
   4c04c:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c050:	mov	r2, r6
   4c054:	mov	r3, r6
   4c058:	ldr	r0, [r4, #8]
   4c05c:	mov	r1, #65	; 0x41
   4c060:	bl	47e80 <brlapiserver_writePacket@@Base>
   4c064:	ldr	r1, [pc, #768]	; 4c36c <freeBrailleWindow@@Base+0x1d4c>
   4c068:	ldr	r2, [r7, #4]
   4c06c:	mov	r0, #7
   4c070:	ldr	r3, [sp, #16]
   4c074:	add	r1, pc, r1
   4c078:	bl	1c634 <logMessage@@Base>
   4c07c:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4c080:	ldr	r1, [pc, #744]	; 4c370 <freeBrailleWindow@@Base+0x1d50>
   4c084:	mov	r2, #5
   4c088:	ldr	r3, [r4, #8]
   4c08c:	add	r1, pc, r1
   4c090:	bl	1c634 <logMessage@@Base>
   4c094:	ldr	r3, [r4, #16]
   4c098:	ldr	r1, [pc, #724]	; 4c374 <freeBrailleWindow@@Base+0x1d54>
   4c09c:	mov	r0, #3
   4c0a0:	add	r1, pc, r1
   4c0a4:	ldr	r2, [r3, #4]
   4c0a8:	bl	1c634 <logMessage@@Base>
   4c0ac:	ldr	r0, [r4, #8]
   4c0b0:	mov	r1, #5
   4c0b4:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4c0b8:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4c0bc:	mov	r0, #1
   4c0c0:	mov	r1, #28
   4c0c4:	ldr	r8, [sl]
   4c0c8:	bl	fac4 <calloc@plt>
   4c0cc:	rev	r8, r8
   4c0d0:	subs	r7, r0, #0
   4c0d4:	beq	4c280 <freeBrailleWindow@@Base+0x1c60>
   4c0d8:	mov	r1, r9
   4c0dc:	mvn	r0, #0
   4c0e0:	bl	4a314 <initializePacket@@Base+0x10>
   4c0e4:	cmp	r0, #0
   4c0e8:	str	r0, [r7, #8]
   4c0ec:	beq	4c278 <freeBrailleWindow@@Base+0x1c58>
   4c0f0:	str	r0, [r0]
   4c0f4:	mvn	r1, #0
   4c0f8:	str	r0, [r0, #4]
   4c0fc:	add	r2, fp, #24
   4c100:	str	r1, [r7]
   4c104:	mov	r0, #7
   4c108:	str	r8, [r7, #4]
   4c10c:	add	r8, sl, #4
   4c110:	str	fp, [r7, #12]
   4c114:	str	r2, [r7, #16]
   4c118:	ldr	r2, [fp, #24]
   4c11c:	cmp	r2, #0
   4c120:	str	r2, [r7, #20]
   4c124:	addne	r1, r7, #20
   4c128:	strne	r1, [r2, #16]
   4c12c:	str	r7, [fp, #24]
   4c130:	ldr	r1, [pc, #576]	; 4c378 <freeBrailleWindow@@Base+0x1d58>
   4c134:	ldr	r2, [sl]
   4c138:	add	r1, pc, r1
   4c13c:	rev	r2, r2
   4c140:	bl	1c634 <logMessage@@Base>
   4c144:	cmp	r6, r8
   4c148:	bcc	4bedc <freeBrailleWindow@@Base+0x18bc>
   4c14c:	ldr	r3, [pc, #552]	; 4c37c <freeBrailleWindow@@Base+0x1d5c>
   4c150:	add	r3, pc, r3
   4c154:	str	r3, [sp, #20]
   4c158:	b	4c1c8 <freeBrailleWindow@@Base+0x1ba8>
   4c15c:	mvn	r0, #0
   4c160:	mov	r1, #0
   4c164:	bl	4a314 <initializePacket@@Base+0x10>
   4c168:	cmp	r0, #0
   4c16c:	str	r0, [r7, #8]
   4c170:	beq	4c26c <freeBrailleWindow@@Base+0x1c4c>
   4c174:	str	r0, [r0]
   4c178:	add	r3, sl, #24
   4c17c:	str	r0, [r0, #4]
   4c180:	mvn	ip, #0
   4c184:	str	r9, [r7, #4]
   4c188:	mov	r0, #7
   4c18c:	str	ip, [r7]
   4c190:	str	sl, [r7, #12]
   4c194:	str	r3, [r7, #16]
   4c198:	ldr	r3, [sl, #24]
   4c19c:	ldr	r1, [sp, #20]
   4c1a0:	cmp	r3, #0
   4c1a4:	str	r3, [r7, #20]
   4c1a8:	addne	r2, r7, #20
   4c1ac:	strne	r2, [r3, #16]
   4c1b0:	str	r7, [sl, #24]
   4c1b4:	ldr	r2, [r8, #-4]
   4c1b8:	rev	r2, r2
   4c1bc:	bl	1c634 <logMessage@@Base>
   4c1c0:	cmp	r6, r8
   4c1c4:	bcc	4bedc <freeBrailleWindow@@Base+0x18bc>
   4c1c8:	mov	r0, #1
   4c1cc:	mov	r1, #28
   4c1d0:	ldr	r9, [r8], #4
   4c1d4:	bl	fac4 <calloc@plt>
   4c1d8:	mov	sl, r7
   4c1dc:	rev	r9, r9
   4c1e0:	subs	r7, r0, #0
   4c1e4:	bne	4c15c <freeBrailleWindow@@Base+0x1b3c>
   4c1e8:	ldr	r6, [fp, #24]
   4c1ec:	cmp	r6, #0
   4c1f0:	bne	4c1fc <freeBrailleWindow@@Base+0x1bdc>
   4c1f4:	b	4c218 <freeBrailleWindow@@Base+0x1bf8>
   4c1f8:	mov	r6, r7
   4c1fc:	ldr	r7, [r6, #24]
   4c200:	ldr	r0, [r6, #8]
   4c204:	bl	4a7c0 <freeBrailleWindow@@Base+0x1a0>
   4c208:	mov	r0, r6
   4c20c:	bl	f4f4 <free@plt>
   4c210:	cmp	r7, #0
   4c214:	bne	4c1f8 <freeBrailleWindow@@Base+0x1bd8>
   4c218:	ldr	r0, [pc, #352]	; 4c380 <freeBrailleWindow@@Base+0x1d60>
   4c21c:	add	r0, pc, r0
   4c220:	add	r0, r0, #44	; 0x2c
   4c224:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c228:	ldr	r1, [pc, #340]	; 4c384 <freeBrailleWindow@@Base+0x1d64>
   4c22c:	mov	r0, #3
   4c230:	mov	r2, #1
   4c234:	add	r1, pc, r1
   4c238:	ldr	r3, [r4, #8]
   4c23c:	bl	1c634 <logMessage@@Base>
   4c240:	ldr	r1, [pc, #320]	; 4c388 <freeBrailleWindow@@Base+0x1d68>
   4c244:	mov	r0, #3
   4c248:	add	r1, pc, r1
   4c24c:	bl	1c634 <logMessage@@Base>
   4c250:	ldr	r0, [r4, #8]
   4c254:	mov	r1, #1
   4c258:	bl	48524 <brlapiserver_writePacket@@Base+0x6a4>
   4c25c:	ldr	r0, [sp, #12]
   4c260:	bl	4a620 <freeBrailleWindow@@Base>
   4c264:	b	4ba38 <freeBrailleWindow@@Base+0x1418>
   4c268:	bl	f950 <__stack_chk_fail@plt>
   4c26c:	mov	r0, r7
   4c270:	bl	f4f4 <free@plt>
   4c274:	b	4c1e8 <freeBrailleWindow@@Base+0x1bc8>
   4c278:	mov	r0, r7
   4c27c:	bl	f4f4 <free@plt>
   4c280:	ldr	r0, [pc, #260]	; 4c38c <freeBrailleWindow@@Base+0x1d6c>
   4c284:	add	r0, pc, r0
   4c288:	add	r0, r0, #44	; 0x2c
   4c28c:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c290:	ldr	r1, [pc, #248]	; 4c390 <freeBrailleWindow@@Base+0x1d70>
   4c294:	mov	r0, #3
   4c298:	mov	r2, #1
   4c29c:	add	r1, pc, r1
   4c2a0:	ldr	r3, [r4, #8]
   4c2a4:	bl	1c634 <logMessage@@Base>
   4c2a8:	ldr	r1, [pc, #228]	; 4c394 <freeBrailleWindow@@Base+0x1d74>
   4c2ac:	mov	r0, #3
   4c2b0:	add	r1, pc, r1
   4c2b4:	b	4c24c <freeBrailleWindow@@Base+0x1c2c>
   4c2b8:	ldrdeq	r7, [r2], -ip
   4c2bc:			; <UNDEFINED> instruction: 0x000003b4
   4c2c0:	andeq	pc, r0, r4, lsr r4	; <UNPREDICTABLE>
   4c2c4:	andeq	r0, r1, r4, lsr #4
   4c2c8:	andeq	r0, r1, r0, asr r2
   4c2cc:	ldrdeq	pc, [r0], -ip
   4c2d0:	andeq	pc, r0, r0, lsr r3	; <UNPREDICTABLE>
   4c2d4:	andeq	r0, r1, ip, lsl r1
   4c2d8:	muleq	r0, ip, r3
   4c2dc:	andeq	r0, r1, ip, ror #1
   4c2e0:	andeq	r0, r1, r4, lsr #2
   4c2e4:	andeq	pc, r0, ip, asr r3	; <UNPREDICTABLE>
   4c2e8:	andeq	pc, r0, r0, ror #6
   4c2ec:	strdeq	pc, [r0], -r0
   4c2f0:	andeq	r8, r2, r8, asr #9
   4c2f4:	andeq	r8, r2, r0, lsl #9
   4c2f8:	andeq	r8, r2, r0, asr r4
   4c2fc:	andeq	r0, r1, ip, asr #4
   4c300:	strdeq	pc, [r0], -ip
   4c304:	andeq	pc, r0, ip, lsr #31
   4c308:	andeq	pc, r0, ip, asr #31
   4c30c:	andeq	r0, r1, r0, lsr r0
   4c310:	andeq	pc, r0, r0, lsr #3
   4c314:	andeq	r0, r1, r4, lsr #32
   4c318:	andeq	r8, r2, r4, asr #6
   4c31c:	andeq	r8, r2, r4, lsr #6
   4c320:	andeq	pc, r0, ip, lsr r1	; <UNPREDICTABLE>
   4c324:	andeq	r0, r1, r0, asr #1
   4c328:	andeq	r0, r1, ip, ror #1
   4c32c:	andeq	r6, r2, ip, lsr #22
   4c330:	andeq	r0, r0, ip, ror #7
   4c334:	andeq	r8, r2, r8, asr #3
   4c338:			; <UNDEFINED> instruction: 0x000281b4
   4c33c:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   4c340:	andeq	pc, r0, r0, lsl r1	; <UNPREDICTABLE>
   4c344:	andeq	pc, r0, r4, asr #27
   4c348:	andeq	r8, r2, r4, lsr #2
   4c34c:	andeq	lr, r0, ip, lsr #30
   4c350:	andeq	pc, r0, r8, ror lr	; <UNPREDICTABLE>
   4c354:	andeq	lr, r0, r0, asr #29
   4c358:	andeq	pc, r0, ip, asr #27
   4c35c:	andeq	r8, r2, r8, asr r0
   4c360:	andeq	lr, r0, ip, ror #28
   4c364:	andeq	pc, r0, ip, lsl #26
   4c368:	strdeq	r7, [r2], -r0
   4c36c:	andeq	pc, r0, r0, asr #26
   4c370:			; <UNDEFINED> instruction: 0x0000edb4
   4c374:	muleq	r0, ip, ip
   4c378:	ldrdeq	pc, [r0], -r4
   4c37c:			; <UNDEFINED> instruction: 0x0000fbbc
   4c380:	strdeq	r7, [r2], -r4
   4c384:	andeq	lr, r0, ip, lsl #24
   4c388:	ldrdeq	pc, [r0], -ip
   4c38c:	andeq	r7, r2, ip, lsl #27
   4c390:	andeq	lr, r0, r4, lsr #23
   4c394:	andeq	pc, r0, r4, ror sl	; <UNPREDICTABLE>

0004c398 <copyBrailleWindow@@Base>:
   4c398:	ldr	r3, [pc, #76]	; 4c3ec <copyBrailleWindow@@Base+0x54>
   4c39c:	push	{r4, r5, r6, lr}
   4c3a0:	add	r3, pc, r3
   4c3a4:	ldr	r2, [r1]
   4c3a8:	mov	r5, r0
   4c3ac:	ldr	r6, [r3]
   4c3b0:	mov	r4, r1
   4c3b4:	ldr	r0, [r0, #4]
   4c3b8:	str	r2, [r5]
   4c3bc:	lsl	r2, r6, #2
   4c3c0:	ldr	r1, [r1, #4]
   4c3c4:	bl	fb24 <memcpy@plt>
   4c3c8:	mov	r2, r6
   4c3cc:	ldr	r1, [r4, #8]
   4c3d0:	ldr	r0, [r5, #8]
   4c3d4:	bl	fb24 <memcpy@plt>
   4c3d8:	mov	r2, r6
   4c3dc:	ldr	r0, [r5, #12]
   4c3e0:	ldr	r1, [r4, #12]
   4c3e4:	pop	{r4, r5, r6, lr}
   4c3e8:	b	fb24 <memcpy@plt>
   4c3ec:	andeq	r7, r2, r0, ror ip

0004c3f0 <getDots@@Base>:
   4c3f0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   4c3f4:	mov	r6, r0
   4c3f8:	ldr	r9, [pc, #148]	; 4c494 <getDots@@Base+0xa4>
   4c3fc:	mov	r7, r1
   4c400:	ldr	r3, [pc, #144]	; 4c498 <getDots@@Base+0xa8>
   4c404:	add	r9, pc, r9
   4c408:	add	r3, pc, r3
   4c40c:	ldr	r2, [r9]
   4c410:	cmp	r2, #0
   4c414:	beq	4c468 <getDots@@Base+0x78>
   4c418:	ldr	r2, [pc, #124]	; 4c49c <getDots@@Base+0xac>
   4c41c:	mov	r4, #0
   4c420:	mov	r5, r4
   4c424:	ldr	r8, [r3, r2]
   4c428:	ldr	r3, [r6, #4]
   4c42c:	add	r5, r5, #1
   4c430:	ldr	r0, [r8]
   4c434:	ldr	r1, [r3, r4, lsl #2]
   4c438:	bl	2d7f8 <convertCharacterToDots@@Base>
   4c43c:	ldr	r2, [r6, #8]
   4c440:	ldr	r3, [r6, #12]
   4c444:	ldr	r1, [r9]
   4c448:	ldrb	r2, [r2, r4]
   4c44c:	ldrb	r3, [r3, r4]
   4c450:	cmp	r5, r1
   4c454:	and	r0, r0, r2
   4c458:	orr	r3, r0, r3
   4c45c:	strb	r3, [r7, r4]
   4c460:	mov	r4, r5
   4c464:	bcc	4c428 <getDots@@Base+0x38>
   4c468:	ldr	r3, [r6]
   4c46c:	cmp	r3, #0
   4c470:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   4c474:	ldr	r2, [pc, #36]	; 4c4a0 <getDots@@Base+0xb0>
   4c478:	sub	r3, r3, #1
   4c47c:	add	r2, pc, r2
   4c480:	ldrb	r1, [r7, r3]
   4c484:	ldrb	r2, [r2, #324]	; 0x144
   4c488:	orr	r2, r1, r2
   4c48c:	strb	r2, [r7, r3]
   4c490:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   4c494:	andeq	r7, r2, ip, lsl #24
   4c498:	andeq	r6, r2, r0, ror r6
   4c49c:	strdeq	r0, [r0], -ip
   4c4a0:	muleq	r2, r4, fp

0004c4a4 <api_handleKeyEvent@@Base>:
   4c4a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4c4a8:	uxtb	r8, r0
   4c4ac:	sub	sp, sp, #20
   4c4b0:	mov	r3, r1
   4c4b4:	lsl	r5, r2, #31
   4c4b8:	uxtb	sl, r1
   4c4bc:	lsr	r7, r8, #24
   4c4c0:	lsl	r6, r8, #8
   4c4c4:	ldr	r1, [pc, #220]	; 4c5a8 <api_handleKeyEvent@@Base+0x104>
   4c4c8:	mov	r4, #0
   4c4cc:	ldr	r8, [pc, #216]	; 4c5ac <api_handleKeyEvent@@Base+0x108>
   4c4d0:	mov	fp, #0
   4c4d4:	orr	sl, sl, r4
   4c4d8:	orr	fp, fp, r5
   4c4dc:	add	r8, pc, r8
   4c4e0:	str	r2, [sp]
   4c4e4:	add	r1, pc, r1
   4c4e8:	mov	r2, r0
   4c4ec:	orr	r6, r6, sl
   4c4f0:	mov	r0, #7
   4c4f4:	orr	r7, r7, fp
   4c4f8:	strd	r6, [sp, #8]
   4c4fc:	bl	1c634 <logMessage@@Base>
   4c500:	add	r0, r8, #44	; 0x2c
   4c504:	bl	f3f8 <pthread_mutex_lock@plt>
   4c508:	ldr	r3, [r8, #92]	; 0x5c
   4c50c:	cmp	r3, r4
   4c510:	bne	4c55c <api_handleKeyEvent@@Base+0xb8>
   4c514:	ldr	r0, [pc, #148]	; 4c5b0 <api_handleKeyEvent@@Base+0x10c>
   4c518:	mov	r1, #1
   4c51c:	mov	r2, r6
   4c520:	mov	r3, r7
   4c524:	add	r0, pc, r0
   4c528:	str	r1, [sp]
   4c52c:	add	r0, r0, #16
   4c530:	bl	46f38 <processSpeechInput@@Base+0x224>
   4c534:	subs	r5, r0, #0
   4c538:	moveq	r4, r5
   4c53c:	bne	4c578 <api_handleKeyEvent@@Base+0xd4>
   4c540:	ldr	r0, [pc, #108]	; 4c5b4 <api_handleKeyEvent@@Base+0x110>
   4c544:	add	r0, pc, r0
   4c548:	add	r0, r0, #44	; 0x2c
   4c54c:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c550:	mov	r0, r4
   4c554:	add	sp, sp, #20
   4c558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4c55c:	add	r0, r8, #24
   4c560:	add	r1, r8, #40	; 0x28
   4c564:	mov	r2, #536870912	; 0x20000000
   4c568:	mov	r3, #0
   4c56c:	bl	48020 <brlapiserver_writePacket@@Base+0x1a0>
   4c570:	str	r4, [r8, #92]	; 0x5c
   4c574:	b	4c514 <api_handleKeyEvent@@Base+0x70>
   4c578:	ldr	r1, [pc, #56]	; 4c5b8 <api_handleKeyEvent@@Base+0x114>
   4c57c:	mov	r2, r6
   4c580:	mov	r3, r7
   4c584:	mov	r0, #7
   4c588:	add	r1, pc, r1
   4c58c:	mvn	r4, #0
   4c590:	bl	1c634 <logMessage@@Base>
   4c594:	ldr	r0, [r5, #8]
   4c598:	mov	r2, r6
   4c59c:	mov	r3, r7
   4c5a0:	bl	47f98 <brlapiserver_writePacket@@Base+0x118>
   4c5a4:	b	4c540 <api_handleKeyEvent@@Base+0x9c>
   4c5a8:	andeq	pc, r0, r4, asr r9	; <UNPREDICTABLE>
   4c5ac:	andeq	r7, r2, r4, lsr fp
   4c5b0:	andeq	r7, r2, ip, ror #21
   4c5b4:	andeq	r7, r2, ip, asr #21
   4c5b8:	andeq	pc, r0, ip, ror #17

0004c5bc <api_handleCommand@@Base>:
   4c5bc:	ldr	r3, [pc, #456]	; 4c78c <api_handleCommand@@Base+0x1d0>
   4c5c0:	ldr	r2, [pc, #456]	; 4c790 <api_handleCommand@@Base+0x1d4>
   4c5c4:	add	r3, pc, r3
   4c5c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   4c5cc:	sub	sp, sp, #20
   4c5d0:	ldr	r7, [r3, r2]
   4c5d4:	mov	r5, r0
   4c5d8:	ldr	r4, [pc, #436]	; 4c794 <api_handleCommand@@Base+0x1d8>
   4c5dc:	ldr	r3, [r7]
   4c5e0:	add	r4, pc, r4
   4c5e4:	add	r0, r4, #44	; 0x2c
   4c5e8:	str	r3, [sp, #12]
   4c5ec:	bl	f3f8 <pthread_mutex_lock@plt>
   4c5f0:	cmp	r5, #76	; 0x4c
   4c5f4:	str	r5, [sp, #8]
   4c5f8:	ldr	r3, [r4, #92]	; 0x5c
   4c5fc:	beq	4c730 <api_handleCommand@@Base+0x174>
   4c600:	cmp	r3, #0
   4c604:	moveq	r6, r5
   4c608:	bne	4c764 <api_handleCommand@@Base+0x1a8>
   4c60c:	cmn	r6, #1
   4c610:	beq	4c704 <api_handleCommand@@Base+0x148>
   4c614:	ldr	r8, [pc, #380]	; 4c798 <api_handleCommand@@Base+0x1dc>
   4c618:	mov	r0, r6
   4c61c:	add	r8, pc, r8
   4c620:	ldr	r1, [r8, #272]	; 0x110
   4c624:	bl	2c10c <cmdBrlttyToBrlapi@@Base>
   4c628:	ldr	r2, [sp, #8]
   4c62c:	mov	r5, r1
   4c630:	ldr	r1, [pc, #356]	; 4c79c <api_handleCommand@@Base+0x1e0>
   4c634:	mov	r4, r0
   4c638:	mov	r0, #7
   4c63c:	add	r1, pc, r1
   4c640:	strd	r4, [sp]
   4c644:	bl	1c634 <logMessage@@Base>
   4c648:	mov	r1, #0
   4c64c:	mov	r2, r4
   4c650:	mov	r3, r5
   4c654:	add	r0, r8, #16
   4c658:	str	r1, [sp]
   4c65c:	bl	46f38 <processSpeechInput@@Base+0x224>
   4c660:	subs	r9, r0, #0
   4c664:	ldreq	r6, [sp, #8]
   4c668:	beq	4c704 <api_handleCommand@@Base+0x148>
   4c66c:	add	r0, sp, #8
   4c670:	add	r1, r9, #52	; 0x34
   4c674:	bl	131a0 <handleAutorepeat@@Base>
   4c678:	ldr	r1, [r8, #272]	; 0x110
   4c67c:	ldr	r0, [sp, #8]
   4c680:	add	r6, r9, #100	; 0x64
   4c684:	bl	2c10c <cmdBrlttyToBrlapi@@Base>
   4c688:	ldr	r2, [sp, #8]
   4c68c:	mov	r5, r1
   4c690:	ldr	r1, [pc, #264]	; 4c7a0 <api_handleCommand@@Base+0x1e4>
   4c694:	mov	r4, r0
   4c698:	mov	r0, #7
   4c69c:	add	r1, pc, r1
   4c6a0:	strd	r4, [sp]
   4c6a4:	bl	1c634 <logMessage@@Base>
   4c6a8:	mov	r0, r6
   4c6ac:	bl	f3f8 <pthread_mutex_lock@plt>
   4c6b0:	mov	r2, r4
   4c6b4:	mov	r3, r5
   4c6b8:	ldr	r0, [r9, #96]	; 0x60
   4c6bc:	bl	4d19c <inKeyrangeList@@Base>
   4c6c0:	mov	r8, r0
   4c6c4:	mov	r0, r6
   4c6c8:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c6cc:	cmp	r8, #0
   4c6d0:	mvneq	r6, #0
   4c6d4:	beq	4c704 <api_handleCommand@@Base+0x148>
   4c6d8:	ldr	r1, [pc, #196]	; 4c7a4 <api_handleCommand@@Base+0x1e8>
   4c6dc:	mov	r0, #7
   4c6e0:	ldr	r2, [sp, #8]
   4c6e4:	mvn	r6, #0
   4c6e8:	strd	r4, [sp]
   4c6ec:	add	r1, pc, r1
   4c6f0:	bl	1c634 <logMessage@@Base>
   4c6f4:	ldr	r0, [r9, #8]
   4c6f8:	mov	r2, r4
   4c6fc:	mov	r3, r5
   4c700:	bl	47f98 <brlapiserver_writePacket@@Base+0x118>
   4c704:	ldr	r0, [pc, #156]	; 4c7a8 <api_handleCommand@@Base+0x1ec>
   4c708:	add	r0, pc, r0
   4c70c:	add	r0, r0, #44	; 0x2c
   4c710:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c714:	ldr	r2, [sp, #12]
   4c718:	ldr	r3, [r7]
   4c71c:	mov	r0, r6
   4c720:	cmp	r2, r3
   4c724:	bne	4c788 <api_handleCommand@@Base+0x1cc>
   4c728:	add	sp, sp, #20
   4c72c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4c730:	cmp	r3, #0
   4c734:	movne	r6, r5
   4c738:	bne	4c704 <api_handleCommand@@Base+0x148>
   4c73c:	mov	r3, #0
   4c740:	add	r0, r4, #24
   4c744:	add	r1, r4, #40	; 0x28
   4c748:	mov	r2, #76	; 0x4c
   4c74c:	movt	r2, #8192	; 0x2000
   4c750:	mov	r6, r5
   4c754:	bl	48020 <brlapiserver_writePacket@@Base+0x1a0>
   4c758:	mov	r3, #1
   4c75c:	str	r3, [r4, #92]	; 0x5c
   4c760:	b	4c704 <api_handleCommand@@Base+0x148>
   4c764:	mov	r3, #0
   4c768:	add	r0, r4, #24
   4c76c:	add	r1, r4, #40	; 0x28
   4c770:	mov	r2, #536870912	; 0x20000000
   4c774:	bl	48020 <brlapiserver_writePacket@@Base+0x1a0>
   4c778:	mov	r3, #0
   4c77c:	ldr	r6, [sp, #8]
   4c780:	str	r3, [r4, #92]	; 0x5c
   4c784:	b	4c60c <api_handleCommand@@Base+0x50>
   4c788:	bl	f950 <__stack_chk_fail@plt>
   4c78c:			; <UNDEFINED> instruction: 0x000264b4
   4c790:			; <UNDEFINED> instruction: 0x000003b4
   4c794:	andeq	r7, r2, r0, lsr sl
   4c798:	strdeq	r7, [r2], -r4
   4c79c:	andeq	pc, r0, ip, asr r8	; <UNPREDICTABLE>
   4c7a0:	andeq	pc, r0, ip, lsr #16
   4c7a4:	andeq	pc, r0, r0, lsr #16
   4c7a8:	andeq	r7, r2, r8, lsl #18

0004c7ac <api_flush@@Base>:
   4c7ac:	ldr	r3, [pc, #648]	; 4ca3c <api_flush@@Base+0x290>
   4c7b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4c7b4:	add	fp, sp, #32
   4c7b8:	ldr	r2, [pc, #640]	; 4ca40 <api_flush@@Base+0x294>
   4c7bc:	sub	sp, sp, #20
   4c7c0:	add	r3, pc, r3
   4c7c4:	ldr	r4, [pc, #632]	; 4ca44 <api_flush@@Base+0x298>
   4c7c8:	mov	r7, r0
   4c7cc:	ldr	r5, [r3, r2]
   4c7d0:	add	r4, pc, r4
   4c7d4:	add	r6, r4, #68	; 0x44
   4c7d8:	add	r0, r4, #44	; 0x2c
   4c7dc:	ldr	r3, [r5]
   4c7e0:	str	r3, [fp, #-40]	; 0xffffffd8
   4c7e4:	bl	f3f8 <pthread_mutex_lock@plt>
   4c7e8:	mov	r0, r6
   4c7ec:	bl	f3f8 <pthread_mutex_lock@plt>
   4c7f0:	ldr	r3, [r4, #96]	; 0x60
   4c7f4:	cmp	r3, #0
   4c7f8:	beq	4c834 <api_flush@@Base+0x88>
   4c7fc:	mov	r0, r6
   4c800:	mov	r4, #1
   4c804:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c808:	ldr	r0, [pc, #568]	; 4ca48 <api_flush@@Base+0x29c>
   4c80c:	add	r0, pc, r0
   4c810:	add	r0, r0, #44	; 0x2c
   4c814:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c818:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4c81c:	ldr	r3, [r5]
   4c820:	mov	r0, r4
   4c824:	cmp	r2, r3
   4c828:	bne	4ca38 <api_flush@@Base+0x28c>
   4c82c:	sub	sp, fp, #32
   4c830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4c834:	bl	39288 <currentVirtualTerminal@@Base>
   4c838:	mov	r3, r4
   4c83c:	str	r0, [r3, #16]!
   4c840:	mov	r0, r3
   4c844:	bl	46dac <processSpeechInput@@Base+0x98>
   4c848:	ldr	r3, [r4, #92]	; 0x5c
   4c84c:	cmp	r3, #0
   4c850:	mov	r8, r0
   4c854:	bne	4c8d8 <api_flush@@Base+0x12c>
   4c858:	cmp	r0, #0
   4c85c:	beq	4c8d8 <api_flush@@Base+0x12c>
   4c860:	add	r9, r0, #72	; 0x48
   4c864:	add	sl, r4, #104	; 0x68
   4c868:	mov	r0, r9
   4c86c:	bl	f3f8 <pthread_mutex_lock@plt>
   4c870:	mov	r0, sl
   4c874:	bl	f3f8 <pthread_mutex_lock@plt>
   4c878:	ldr	r3, [r4, #168]	; 0xa8
   4c87c:	cmp	r3, #0
   4c880:	bne	4c894 <api_flush@@Base+0xe8>
   4c884:	mov	r0, r7
   4c888:	bl	4717c <processSpeechInput@@Base+0x468>
   4c88c:	cmp	r0, #0
   4c890:	beq	4c970 <api_flush@@Base+0x1c4>
   4c894:	bl	130e0 <getCursorDots@@Base>
   4c898:	ldr	r3, [pc, #428]	; 4ca4c <api_flush@@Base+0x2a0>
   4c89c:	ldr	r6, [r8, #48]	; 0x30
   4c8a0:	add	r3, pc, r3
   4c8a4:	ldrb	r2, [r3, #324]	; 0x144
   4c8a8:	cmp	r2, r0
   4c8ac:	strbne	r0, [r3, #324]	; 0x144
   4c8b0:	cmp	r6, #0
   4c8b4:	beq	4c990 <api_flush@@Base+0x1e4>
   4c8b8:	ldr	r0, [pc, #400]	; 4ca50 <api_flush@@Base+0x2a4>
   4c8bc:	mov	r4, #1
   4c8c0:	add	r0, pc, r0
   4c8c4:	add	r0, r0, #104	; 0x68
   4c8c8:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c8cc:	mov	r0, r9
   4c8d0:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c8d4:	b	4c808 <api_flush@@Base+0x5c>
   4c8d8:	ldr	r4, [pc, #372]	; 4ca54 <api_flush@@Base+0x2a8>
   4c8dc:	add	r4, pc, r4
   4c8e0:	add	r6, r4, #104	; 0x68
   4c8e4:	mov	r0, r6
   4c8e8:	bl	f3f8 <pthread_mutex_lock@plt>
   4c8ec:	ldr	r3, [r4, #328]	; 0x148
   4c8f0:	cmp	r3, #0
   4c8f4:	bne	4c7fc <api_flush@@Base+0x50>
   4c8f8:	ldr	r3, [r4, #168]	; 0xa8
   4c8fc:	cmp	r3, #0
   4c900:	bne	4c924 <api_flush@@Base+0x178>
   4c904:	ldr	r6, [pc, #332]	; 4ca58 <api_flush@@Base+0x2ac>
   4c908:	mov	r4, #1
   4c90c:	add	r6, pc, r6
   4c910:	add	r0, r6, #104	; 0x68
   4c914:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c918:	add	r0, r6, #68	; 0x44
   4c91c:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c920:	b	4c808 <api_flush@@Base+0x5c>
   4c924:	ldr	r3, [r4, #140]	; 0x8c
   4c928:	mov	r0, r6
   4c92c:	ldr	r2, [r4, #12]
   4c930:	ldr	r1, [r4, #8]
   4c934:	ldr	r8, [r3, #28]
   4c938:	str	r1, [r3, #28]
   4c93c:	str	r2, [r7, #32]
   4c940:	bl	f3f8 <pthread_mutex_lock@plt>
   4c944:	ldr	r3, [r4, #128]	; 0x80
   4c948:	ldr	r1, [r4, #4]
   4c94c:	mov	r0, r7
   4c950:	ldr	r3, [r3, #48]	; 0x30
   4c954:	blx	r3
   4c958:	mov	r0, r6
   4c95c:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c960:	ldr	r3, [r4, #140]	; 0x8c
   4c964:	str	r8, [r3, #28]
   4c968:	bl	47314 <processSpeechInput@@Base+0x600>
   4c96c:	b	4c904 <api_flush@@Base+0x158>
   4c970:	mov	r0, sl
   4c974:	mov	r4, #1
   4c978:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c97c:	mov	r0, r9
   4c980:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c984:	mov	r0, r6
   4c988:	bl	fdf4 <pthread_mutex_unlock@plt>
   4c98c:	b	4c808 <api_flush@@Base+0x5c>
   4c990:	ldr	sl, [pc, #196]	; 4ca5c <api_flush@@Base+0x2b0>
   4c994:	mov	r2, sp
   4c998:	add	r0, r8, #32
   4c99c:	add	sl, pc, sl
   4c9a0:	ldr	r1, [sl]
   4c9a4:	ldr	r3, [sl, #140]	; 0x8c
   4c9a8:	add	r1, r1, #7
   4c9ac:	bic	r1, r1, #7
   4c9b0:	ldr	ip, [r3, #28]
   4c9b4:	sub	sp, sp, r1
   4c9b8:	str	sp, [r3, #28]
   4c9bc:	mov	r1, sp
   4c9c0:	str	r2, [fp, #-52]	; 0xffffffcc
   4c9c4:	str	ip, [fp, #-48]	; 0xffffffd0
   4c9c8:	bl	4c3f0 <getDots@@Base>
   4c9cc:	ldr	r3, [sl, #128]	; 0x80
   4c9d0:	mov	r0, r7
   4c9d4:	ldr	r1, [r8, #32]
   4c9d8:	sub	r1, r1, #1
   4c9dc:	str	r1, [r7, #32]
   4c9e0:	ldr	r1, [r8, #36]	; 0x24
   4c9e4:	ldr	r3, [r3, #48]	; 0x30
   4c9e8:	blx	r3
   4c9ec:	ldr	r3, [sl, #140]	; 0x8c
   4c9f0:	ldr	ip, [fp, #-48]	; 0xffffffd0
   4c9f4:	str	ip, [r3, #28]
   4c9f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   4c9fc:	mov	sp, r2
   4ca00:	mov	r4, r0
   4ca04:	add	r0, sl, #104	; 0x68
   4ca08:	bl	fdf4 <pthread_mutex_unlock@plt>
   4ca0c:	mov	r0, r9
   4ca10:	bl	fdf4 <pthread_mutex_unlock@plt>
   4ca14:	cmp	r4, #0
   4ca18:	bne	4ca28 <api_flush@@Base+0x27c>
   4ca1c:	add	r0, sl, #68	; 0x44
   4ca20:	bl	fdf4 <pthread_mutex_unlock@plt>
   4ca24:	b	4c808 <api_flush@@Base+0x5c>
   4ca28:	mov	r0, r7
   4ca2c:	mov	r1, r6
   4ca30:	bl	3d9a4 <drainBrailleOutput@@Base>
   4ca34:	b	4c808 <api_flush@@Base+0x5c>
   4ca38:	bl	f950 <__stack_chk_fail@plt>
   4ca3c:			; <UNDEFINED> instruction: 0x000262b8
   4ca40:			; <UNDEFINED> instruction: 0x000003b4
   4ca44:	andeq	r7, r2, r0, asr #16
   4ca48:	andeq	r7, r2, r4, lsl #16
   4ca4c:	andeq	r7, r2, r0, ror r7
   4ca50:	andeq	r7, r2, r0, asr r7
   4ca54:	andeq	r7, r2, r4, lsr r7
   4ca58:	andeq	r7, r2, r4, lsl #14
   4ca5c:	andeq	r7, r2, r4, ror r6

0004ca60 <api_resume@@Base>:
   4ca60:	push	{r3, r4, r5, lr}
   4ca64:	mov	r5, r0
   4ca68:	ldr	r4, [pc, #88]	; 4cac8 <api_resume@@Base+0x68>
   4ca6c:	add	r4, pc, r4
   4ca70:	add	r0, r4, #68	; 0x44
   4ca74:	bl	f3f8 <pthread_mutex_lock@plt>
   4ca78:	add	r0, r4, #104	; 0x68
   4ca7c:	bl	f3f8 <pthread_mutex_lock@plt>
   4ca80:	ldr	r3, [r4, #96]	; 0x60
   4ca84:	cmp	r3, #0
   4ca88:	beq	4cab0 <api_resume@@Base+0x50>
   4ca8c:	ldr	r4, [pc, #56]	; 4cacc <api_resume@@Base+0x6c>
   4ca90:	add	r4, pc, r4
   4ca94:	add	r0, r4, #104	; 0x68
   4ca98:	bl	fdf4 <pthread_mutex_unlock@plt>
   4ca9c:	add	r0, r4, #68	; 0x44
   4caa0:	bl	fdf4 <pthread_mutex_unlock@plt>
   4caa4:	ldr	r0, [r4, #168]	; 0xa8
   4caa8:	str	r0, [r4, #328]	; 0x148
   4caac:	pop	{r3, r4, r5, pc}
   4cab0:	ldr	r3, [r4, #168]	; 0xa8
   4cab4:	cmp	r3, #0
   4cab8:	bne	4ca8c <api_resume@@Base+0x2c>
   4cabc:	mov	r0, r5
   4cac0:	bl	4717c <processSpeechInput@@Base+0x468>
   4cac4:	b	4ca8c <api_resume@@Base+0x2c>
   4cac8:	andeq	r7, r2, r4, lsr #11
   4cacc:	andeq	r7, r2, r0, lsl #11

0004cad0 <api_claimDriver@@Base>:
   4cad0:	push	{r3, r4, r5, lr}
   4cad4:	ldr	r4, [pc, #48]	; 4cb0c <api_claimDriver@@Base+0x3c>
   4cad8:	add	r4, pc, r4
   4cadc:	add	r5, r4, #144	; 0x90
   4cae0:	mov	r0, r5
   4cae4:	bl	f3f8 <pthread_mutex_lock@plt>
   4cae8:	ldr	r4, [r4, #168]	; 0xa8
   4caec:	cmp	r4, #0
   4caf0:	beq	4cafc <api_claimDriver@@Base+0x2c>
   4caf4:	mov	r0, #1
   4caf8:	pop	{r3, r4, r5, pc}
   4cafc:	mov	r0, r5
   4cb00:	bl	fdf4 <pthread_mutex_unlock@plt>
   4cb04:	mov	r0, r4
   4cb08:	pop	{r3, r4, r5, pc}
   4cb0c:	andeq	r7, r2, r8, lsr r5

0004cb10 <api_releaseDriver@@Base>:
   4cb10:	ldr	r0, [pc, #8]	; 4cb20 <api_releaseDriver@@Base+0x10>
   4cb14:	add	r0, pc, r0
   4cb18:	add	r0, r0, #144	; 0x90
   4cb1c:	b	fdf4 <pthread_mutex_unlock@plt>
   4cb20:	strdeq	r7, [r2], -ip

0004cb24 <api_suspend@@Base>:
   4cb24:	ldr	r3, [pc, #12]	; 4cb38 <api_suspend@@Base+0x14>
   4cb28:	mov	r2, #0
   4cb2c:	add	r3, pc, r3
   4cb30:	str	r2, [r3, #328]	; 0x148
   4cb34:	bx	lr
   4cb38:	andeq	r7, r2, r4, ror #9

0004cb3c <api_link@@Base>:
   4cb3c:	ldr	r1, [pc, #212]	; 4cc18 <api_link@@Base+0xdc>
   4cb40:	push	{r4, r5, r6, r7, r8, lr}
   4cb44:	add	r1, pc, r1
   4cb48:	sub	sp, sp, #8
   4cb4c:	mov	r8, r0
   4cb50:	ldr	r5, [pc, #196]	; 4cc1c <api_link@@Base+0xe0>
   4cb54:	mov	r0, #7
   4cb58:	bl	1c634 <logMessage@@Base>
   4cb5c:	ldr	r1, [pc, #188]	; 4cc20 <api_link@@Base+0xe4>
   4cb60:	add	r5, pc, r5
   4cb64:	ldr	r4, [pc, #184]	; 4cc24 <api_link@@Base+0xe8>
   4cb68:	mov	r2, #76	; 0x4c
   4cb6c:	ldr	r7, [r5, r1]
   4cb70:	add	r4, pc, r4
   4cb74:	mov	r3, r5
   4cb78:	add	r3, r4, #332	; 0x14c
   4cb7c:	add	r6, r4, #104	; 0x68
   4cb80:	add	r5, r4, #44	; 0x2c
   4cb84:	ldr	ip, [r7]
   4cb88:	mov	r0, r3
   4cb8c:	mov	r1, ip
   4cb90:	str	ip, [r4, #128]	; 0x80
   4cb94:	bl	fb24 <memcpy@plt>
   4cb98:	ldr	r1, [pc, #136]	; 4cc28 <api_link@@Base+0xec>
   4cb9c:	ldr	r2, [pc, #136]	; 4cc2c <api_link@@Base+0xf0>
   4cba0:	add	r1, pc, r1
   4cba4:	str	r1, [r4, #380]	; 0x17c
   4cba8:	add	r2, pc, r2
   4cbac:	str	r2, [r4, #376]	; 0x178
   4cbb0:	mov	r3, r0
   4cbb4:	mov	r0, r6
   4cbb8:	str	r3, [r7]
   4cbbc:	mov	r3, #0
   4cbc0:	str	r3, [r4, #400]	; 0x190
   4cbc4:	str	r3, [r4, #404]	; 0x194
   4cbc8:	str	r3, [r4, #388]	; 0x184
   4cbcc:	str	r3, [r4, #392]	; 0x188
   4cbd0:	bl	f3f8 <pthread_mutex_lock@plt>
   4cbd4:	mov	r0, r8
   4cbd8:	bl	47110 <processSpeechInput@@Base+0x3fc>
   4cbdc:	mov	r0, r6
   4cbe0:	mov	r3, #1
   4cbe4:	str	r3, [r4, #168]	; 0xa8
   4cbe8:	bl	fdf4 <pthread_mutex_unlock@plt>
   4cbec:	mov	r0, r5
   4cbf0:	bl	f3f8 <pthread_mutex_lock@plt>
   4cbf4:	add	r0, r4, #24
   4cbf8:	add	r1, r4, #40	; 0x28
   4cbfc:	mov	r2, #536870912	; 0x20000000
   4cc00:	mov	r3, #0
   4cc04:	bl	48020 <brlapiserver_writePacket@@Base+0x1a0>
   4cc08:	mov	r0, r5
   4cc0c:	add	sp, sp, #8
   4cc10:	pop	{r4, r5, r6, r7, r8, lr}
   4cc14:	b	fdf4 <pthread_mutex_unlock@plt>
   4cc18:	andeq	pc, r0, r4, lsl #8
   4cc1c:	andeq	r5, r2, r8, lsl pc
   4cc20:	andeq	r0, r0, ip, ror r4
   4cc24:	andeq	r7, r2, r0, lsr #9
   4cc28:			; <UNDEFINED> instruction: 0xffffa480
   4cc2c:			; <UNDEFINED> instruction: 0xffffb7b4

0004cc30 <api_unlink@@Base>:
   4cc30:	push	{r3, r4, r5, r6, r7, lr}
   4cc34:	mov	r0, #7
   4cc38:	ldr	r4, [pc, #192]	; 4cd00 <api_unlink@@Base+0xd0>
   4cc3c:	mov	r6, #0
   4cc40:	ldr	r1, [pc, #188]	; 4cd04 <api_unlink@@Base+0xd4>
   4cc44:	add	r4, pc, r4
   4cc48:	ldr	r5, [pc, #184]	; 4cd08 <api_unlink@@Base+0xd8>
   4cc4c:	add	r7, r4, #44	; 0x2c
   4cc50:	add	r1, pc, r1
   4cc54:	bl	1c634 <logMessage@@Base>
   4cc58:	add	r5, pc, r5
   4cc5c:	mov	r0, r7
   4cc60:	bl	f3f8 <pthread_mutex_lock@plt>
   4cc64:	add	r1, r4, #40	; 0x28
   4cc68:	mov	r3, #0
   4cc6c:	add	r0, r4, #24
   4cc70:	mov	r2, #76	; 0x4c
   4cc74:	movt	r2, #8192	; 0x2000
   4cc78:	bl	48020 <brlapiserver_writePacket@@Base+0x1a0>
   4cc7c:	mov	r0, r7
   4cc80:	bl	fdf4 <pthread_mutex_unlock@plt>
   4cc84:	ldr	r0, [r4, #4]
   4cc88:	bl	f4f4 <free@plt>
   4cc8c:	ldr	r0, [r4, #8]
   4cc90:	str	r6, [r4, #4]
   4cc94:	bl	f4f4 <free@plt>
   4cc98:	ldr	r3, [pc, #108]	; 4cd0c <api_unlink@@Base+0xdc>
   4cc9c:	add	r0, r4, #104	; 0x68
   4cca0:	str	r6, [r4, #8]
   4cca4:	ldr	r1, [r4, #128]	; 0x80
   4cca8:	ldr	r2, [r5, r3]
   4ccac:	ldr	r3, [pc, #92]	; 4cd10 <api_unlink@@Base+0xe0>
   4ccb0:	str	r1, [r2]
   4ccb4:	ldr	r3, [r5, r3]
   4ccb8:	str	r3, [r4, #128]	; 0x80
   4ccbc:	bl	f3f8 <pthread_mutex_lock@plt>
   4ccc0:	ldr	r3, [r4, #328]	; 0x148
   4ccc4:	cmp	r3, r6
   4ccc8:	bne	4ccd8 <api_unlink@@Base+0xa8>
   4cccc:	ldr	r3, [r4, #168]	; 0xa8
   4ccd0:	cmp	r3, r6
   4ccd4:	bne	4ccf8 <api_unlink@@Base+0xc8>
   4ccd8:	ldr	r3, [pc, #52]	; 4cd14 <api_unlink@@Base+0xe4>
   4ccdc:	mov	r2, #0
   4cce0:	add	r3, pc, r3
   4cce4:	add	r0, r3, #104	; 0x68
   4cce8:	str	r2, [r3, #168]	; 0xa8
   4ccec:	str	r2, [r3, #140]	; 0x8c
   4ccf0:	pop	{r3, r4, r5, r6, r7, lr}
   4ccf4:	b	fdf4 <pthread_mutex_unlock@plt>
   4ccf8:	bl	47314 <processSpeechInput@@Base+0x600>
   4ccfc:	b	4ccd8 <api_unlink@@Base+0xa8>
   4cd00:	andeq	r7, r2, ip, asr #7
   4cd04:	andeq	pc, r0, r4, lsl #6
   4cd08:	andeq	r5, r2, r0, lsr #28
   4cd0c:	andeq	r0, r0, ip, ror r4
   4cd10:	andeq	r0, r0, r0, lsr #10
   4cd14:	andeq	r7, r2, r0, lsr r3

0004cd18 <api_identify@@Base>:
   4cd18:	ldr	r1, [pc, #44]	; 4cd4c <api_identify@@Base+0x34>
   4cd1c:	push	{r4, lr}
   4cd20:	add	r1, pc, r1
   4cd24:	mov	r4, r0
   4cd28:	mov	r0, #5
   4cd2c:	bl	1c634 <logMessage@@Base>
   4cd30:	cmp	r4, #0
   4cd34:	popeq	{r4, pc}
   4cd38:	ldr	r1, [pc, #16]	; 4cd50 <api_identify@@Base+0x38>
   4cd3c:	mov	r0, #6
   4cd40:	pop	{r4, lr}
   4cd44:	add	r1, pc, r1
   4cd48:	b	1c634 <logMessage@@Base>
   4cd4c:	andeq	pc, r0, r0, asr #4
   4cd50:	andeq	pc, r0, ip, lsr r2	; <UNPREDICTABLE>

0004cd54 <api_start@@Base>:
   4cd54:	push	{r4, r5, r6, r7, r8, r9, lr}
   4cd58:	sub	sp, sp, #52	; 0x34
   4cd5c:	ldr	r6, [pc, #792]	; 4d07c <api_start@@Base+0x328>
   4cd60:	mov	r4, r1
   4cd64:	ldr	r3, [pc, #788]	; 4d080 <api_start@@Base+0x32c>
   4cd68:	add	r6, pc, r6
   4cd6c:	ldr	r7, [r1, #4]
   4cd70:	ldr	r8, [r6, r3]
   4cd74:	ldrb	r2, [r7]
   4cd78:	ldr	r3, [r8]
   4cd7c:	cmp	r2, #0
   4cd80:	str	r3, [sp, #44]	; 0x2c
   4cd84:	ldreq	r7, [pc, #760]	; 4d084 <api_start@@Base+0x330>
   4cd88:	addeq	r7, pc, r7
   4cd8c:	ldr	r0, [pc, #756]	; 4d088 <api_start@@Base+0x334>
   4cd90:	mov	r3, #0
   4cd94:	ldr	r5, [r4, #8]
   4cd98:	add	r0, pc, r0
   4cd9c:	str	r3, [r0, #272]	; 0x110
   4cda0:	ldrb	r3, [r5]
   4cda4:	cmp	r3, #0
   4cda8:	bne	4cfc0 <api_start@@Base+0x26c>
   4cdac:	ldr	r5, [r4, #12]
   4cdb0:	mov	r2, #65536	; 0x10000
   4cdb4:	ldr	r9, [pc, #720]	; 4d08c <api_start@@Base+0x338>
   4cdb8:	ldrb	r3, [r5]
   4cdbc:	add	r9, pc, r9
   4cdc0:	cmp	r3, #0
   4cdc4:	str	r2, [r9, #316]	; 0x13c
   4cdc8:	bne	4cf94 <api_start@@Base+0x240>
   4cdcc:	ldr	r3, [r4]
   4cdd0:	ldr	r2, [pc, #696]	; 4d090 <api_start@@Base+0x33c>
   4cdd4:	ldr	r0, [pc, #696]	; 4d094 <api_start@@Base+0x340>
   4cdd8:	ldrb	r1, [r3]
   4cddc:	add	r2, pc, r2
   4cde0:	add	r0, pc, r0
   4cde4:	cmp	r1, #0
   4cde8:	str	r0, [r2]
   4cdec:	strne	r3, [r2]
   4cdf0:	movne	r0, r3
   4cdf4:	bl	1c838 <isAbsolutePath@@Base>
   4cdf8:	subs	r9, r0, #0
   4cdfc:	beq	4d000 <api_start@@Base+0x2ac>
   4ce00:	ldr	r4, [pc, #656]	; 4d098 <api_start@@Base+0x344>
   4ce04:	mvn	r0, #0
   4ce08:	mov	r1, #0
   4ce0c:	mov	r9, #1
   4ce10:	add	r4, pc, r4
   4ce14:	str	r9, [r4, #328]	; 0x148
   4ce18:	bl	4a314 <initializePacket@@Base+0x10>
   4ce1c:	cmp	r0, #0
   4ce20:	mov	r2, r0
   4ce24:	str	r0, [r4, #292]	; 0x124
   4ce28:	beq	4d024 <api_start@@Base+0x2d0>
   4ce2c:	str	r0, [r2, #4]
   4ce30:	mov	r1, #0
   4ce34:	mvn	r0, #0
   4ce38:	str	r2, [r2]
   4ce3c:	bl	4a314 <initializePacket@@Base+0x10>
   4ce40:	cmp	r0, #0
   4ce44:	str	r0, [r4, #24]
   4ce48:	beq	4d038 <api_start@@Base+0x2e4>
   4ce4c:	add	r5, sp, #4
   4ce50:	str	r0, [r0]
   4ce54:	str	r0, [r0, #4]
   4ce58:	mvn	r3, #0
   4ce5c:	mov	r0, r5
   4ce60:	str	r3, [r4, #16]
   4ce64:	bl	f524 <pthread_mutexattr_init@plt>
   4ce68:	mov	r0, r5
   4ce6c:	mov	r1, r9
   4ce70:	bl	fc68 <pthread_mutexattr_settype@plt>
   4ce74:	mov	r1, r5
   4ce78:	add	r0, r4, #44	; 0x2c
   4ce7c:	bl	f41c <pthread_mutex_init@plt>
   4ce80:	mov	r1, r5
   4ce84:	add	r0, r4, #104	; 0x68
   4ce88:	bl	f41c <pthread_mutex_init@plt>
   4ce8c:	mov	r1, r5
   4ce90:	add	r0, r4, #68	; 0x44
   4ce94:	bl	f41c <pthread_mutex_init@plt>
   4ce98:	mov	r1, r5
   4ce9c:	add	r5, sp, #8
   4cea0:	add	r0, r4, #144	; 0x90
   4cea4:	bl	f41c <pthread_mutex_init@plt>
   4cea8:	mov	r0, r5
   4ceac:	bl	faac <pthread_attr_init@plt>
   4ceb0:	mov	r1, r9
   4ceb4:	mov	r0, r5
   4ceb8:	bl	f884 <pthread_attr_setdetachstate@plt>
   4cebc:	ldr	r1, [r4, #316]	; 0x13c
   4cec0:	mov	r0, r5
   4cec4:	bl	fa70 <pthread_attr_setstacksize@plt>
   4cec8:	ldr	ip, [pc, #460]	; 4d09c <api_start@@Base+0x348>
   4cecc:	ldr	r2, [pc, #460]	; 4d0a0 <api_start@@Base+0x34c>
   4ced0:	mov	r1, r5
   4ced4:	mov	r3, r7
   4ced8:	add	r0, r4, #408	; 0x198
   4cedc:	ldr	ip, [r6, ip]
   4cee0:	add	r2, pc, r2
   4cee4:	str	ip, [r4, #128]	; 0x80
   4cee8:	bl	fc50 <pthread_create@plt>
   4ceec:	cmp	r0, #0
   4cef0:	bne	4cf10 <api_start@@Base+0x1bc>
   4cef4:	ldr	r2, [sp, #44]	; 0x2c
   4cef8:	mov	r0, r9
   4cefc:	ldr	r3, [r8]
   4cf00:	cmp	r2, r3
   4cf04:	bne	4d078 <api_start@@Base+0x324>
   4cf08:	add	sp, sp, #52	; 0x34
   4cf0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4cf10:	bl	f5c0 <strerror@plt>
   4cf14:	ldr	r1, [pc, #392]	; 4d0a4 <api_start@@Base+0x350>
   4cf18:	add	r1, pc, r1
   4cf1c:	mov	r2, r0
   4cf20:	mov	r0, #4
   4cf24:	bl	1c634 <logMessage@@Base>
   4cf28:	ldr	r3, [r4, #236]	; 0xec
   4cf2c:	cmp	r3, #0
   4cf30:	addgt	r6, r4, #236	; 0xec
   4cf34:	movgt	r5, #0
   4cf38:	ble	4cf54 <api_start@@Base+0x200>
   4cf3c:	ldr	r0, [r6, #4]!
   4cf40:	add	r5, r5, #1
   4cf44:	bl	fa40 <pthread_cancel@plt>
   4cf48:	ldr	r3, [r4, #236]	; 0xec
   4cf4c:	cmp	r3, r5
   4cf50:	bgt	4cf3c <api_start@@Base+0x1e8>
   4cf54:	ldr	r3, [pc, #332]	; 4d0a8 <api_start@@Base+0x354>
   4cf58:	add	r3, pc, r3
   4cf5c:	ldr	r0, [r3, #24]
   4cf60:	bl	4a7c0 <freeBrailleWindow@@Base+0x1a0>
   4cf64:	ldr	r3, [pc, #320]	; 4d0ac <api_start@@Base+0x358>
   4cf68:	add	r3, pc, r3
   4cf6c:	ldr	r0, [r3, #292]	; 0x124
   4cf70:	bl	4a7c0 <freeBrailleWindow@@Base+0x1a0>
   4cf74:	ldr	r4, [pc, #308]	; 4d0b0 <api_start@@Base+0x35c>
   4cf78:	add	r4, pc, r4
   4cf7c:	ldr	r0, [r4, #276]	; 0x114
   4cf80:	bl	4df64 <authEnd@@Base>
   4cf84:	mov	r3, #0
   4cf88:	mov	r9, r3
   4cf8c:	str	r3, [r4, #276]	; 0x114
   4cf90:	b	4cef4 <api_start@@Base+0x1a0>
   4cf94:	ldr	r2, [pc, #280]	; 4d0b4 <api_start@@Base+0x360>
   4cf98:	mov	r0, sp
   4cf9c:	mov	r1, r5
   4cfa0:	mov	r3, #0
   4cfa4:	add	r2, pc, r2
   4cfa8:	bl	1dff8 <validateInteger@@Base>
   4cfac:	cmp	r0, #0
   4cfb0:	beq	4d04c <api_start@@Base+0x2f8>
   4cfb4:	ldr	r3, [sp]
   4cfb8:	str	r3, [r9, #316]	; 0x13c
   4cfbc:	b	4cdcc <api_start@@Base+0x78>
   4cfc0:	add	r0, r0, #272	; 0x110
   4cfc4:	mov	r1, r5
   4cfc8:	bl	1e1a4 <validateYesNo@@Base>
   4cfcc:	cmp	r0, #0
   4cfd0:	bne	4cdac <api_start@@Base+0x58>
   4cfd4:	ldr	r1, [pc, #220]	; 4d0b8 <api_start@@Base+0x364>
   4cfd8:	mov	r2, #5
   4cfdc:	add	r1, pc, r1
   4cfe0:	bl	f9bc <dcgettext@plt>
   4cfe4:	ldr	r1, [pc, #208]	; 4d0bc <api_start@@Base+0x368>
   4cfe8:	mov	r3, r5
   4cfec:	add	r1, pc, r1
   4cff0:	mov	r2, r0
   4cff4:	mov	r0, #4
   4cff8:	bl	1c634 <logMessage@@Base>
   4cffc:	b	4cdac <api_start@@Base+0x58>
   4d000:	ldr	r3, [pc, #184]	; 4d0c0 <api_start@@Base+0x36c>
   4d004:	ldr	r0, [pc, r3]
   4d008:	bl	4df48 <authBeginServer@@Base>
   4d00c:	ldr	r3, [pc, #176]	; 4d0c4 <api_start@@Base+0x370>
   4d010:	add	r3, pc, r3
   4d014:	cmp	r0, #0
   4d018:	str	r0, [r3, #276]	; 0x114
   4d01c:	bne	4ce00 <api_start@@Base+0xac>
   4d020:	b	4cef4 <api_start@@Base+0x1a0>
   4d024:	ldr	r1, [pc, #156]	; 4d0c8 <api_start@@Base+0x374>
   4d028:	mov	r0, #4
   4d02c:	add	r1, pc, r1
   4d030:	bl	1c634 <logMessage@@Base>
   4d034:	b	4cf74 <api_start@@Base+0x220>
   4d038:	ldr	r1, [pc, #140]	; 4d0cc <api_start@@Base+0x378>
   4d03c:	mov	r0, #4
   4d040:	add	r1, pc, r1
   4d044:	bl	1c634 <logMessage@@Base>
   4d048:	b	4cf64 <api_start@@Base+0x210>
   4d04c:	ldr	r1, [pc, #124]	; 4d0d0 <api_start@@Base+0x37c>
   4d050:	mov	r2, #5
   4d054:	add	r1, pc, r1
   4d058:	bl	f9bc <dcgettext@plt>
   4d05c:	ldr	r1, [pc, #112]	; 4d0d4 <api_start@@Base+0x380>
   4d060:	mov	r3, r5
   4d064:	add	r1, pc, r1
   4d068:	mov	r2, r0
   4d06c:	mov	r0, #4
   4d070:	bl	1c634 <logMessage@@Base>
   4d074:	b	4cdcc <api_start@@Base+0x78>
   4d078:	bl	f950 <__stack_chk_fail@plt>
   4d07c:	andeq	r5, r2, r0, lsl sp
   4d080:			; <UNDEFINED> instruction: 0x000003b4
   4d084:	andeq	pc, r0, ip, ror r2	; <UNPREDICTABLE>
   4d088:	andeq	r7, r2, r8, ror r2
   4d08c:	andeq	r7, r2, r4, asr r2
   4d090:	andeq	r6, r2, ip, lsr #6
   4d094:	andeq	pc, r0, r4, lsr r2	; <UNPREDICTABLE>
   4d098:	andeq	r7, r2, r0, lsl #4
   4d09c:	andeq	r0, r0, r0, lsr #10
   4d0a0:			; <UNDEFINED> instruction: 0xffffe21c
   4d0a4:	andeq	lr, r0, r4, lsr #23
   4d0a8:	strheq	r7, [r2], -r8
   4d0ac:	andeq	r7, r2, r8, lsr #1
   4d0b0:	muleq	r2, r8, r0
   4d0b4:	andeq	sp, r0, r4, asr #21
   4d0b8:	andeq	pc, r0, r8, asr #32
   4d0bc:	andeq	r2, r0, r8, asr #6
   4d0c0:	andeq	r6, r2, r4, lsl #2
   4d0c4:	andeq	r7, r2, r0
   4d0c8:	andeq	pc, r0, r0, lsr r0	; <UNPREDICTABLE>
   4d0cc:	andeq	pc, r0, r0, asr #32
   4d0d0:	andeq	lr, r0, ip, ror #31
   4d0d4:	ldrdeq	r2, [r0], -r0

0004d0d8 <api_stop@@Base>:
   4d0d8:	ldr	r3, [pc, #116]	; 4d154 <api_stop@@Base+0x7c>
   4d0dc:	push	{r4, lr}
   4d0e0:	add	r3, pc, r3
   4d0e4:	ldr	r0, [r3, #408]	; 0x198
   4d0e8:	bl	fa40 <pthread_cancel@plt>
   4d0ec:	cmp	r0, #0
   4d0f0:	bne	4d138 <api_stop@@Base+0x60>
   4d0f4:	ldr	r4, [pc, #92]	; 4d158 <api_stop@@Base+0x80>
   4d0f8:	add	r4, pc, r4
   4d0fc:	add	r0, r4, #292	; 0x124
   4d100:	add	r1, r4, #308	; 0x134
   4d104:	bl	4a828 <freeBrailleWindow@@Base+0x208>
   4d108:	add	r0, r4, #24
   4d10c:	add	r1, r4, #40	; 0x28
   4d110:	bl	4a828 <freeBrailleWindow@@Base+0x208>
   4d114:	ldr	r0, [r4, #276]	; 0x114
   4d118:	cmp	r0, #0
   4d11c:	beq	4d124 <api_stop@@Base+0x4c>
   4d120:	bl	4df64 <authEnd@@Base>
   4d124:	ldr	r3, [pc, #48]	; 4d15c <api_stop@@Base+0x84>
   4d128:	mov	r2, #0
   4d12c:	add	r3, pc, r3
   4d130:	str	r2, [r3, #276]	; 0x114
   4d134:	pop	{r4, pc}
   4d138:	bl	f5c0 <strerror@plt>
   4d13c:	ldr	r1, [pc, #28]	; 4d160 <api_stop@@Base+0x88>
   4d140:	add	r1, pc, r1
   4d144:	mov	r2, r0
   4d148:	mov	r0, #4
   4d14c:	bl	1c634 <logMessage@@Base>
   4d150:	b	4d0f4 <api_stop@@Base+0x1c>
   4d154:	andeq	r6, r2, r0, lsr pc
   4d158:	andeq	r6, r2, r8, lsl pc
   4d15c:	andeq	r6, r2, r4, ror #29
   4d160:	andeq	lr, r0, r8, ror #30

0004d164 <freeKeyrangeList@@Base>:
   4d164:	push	{r3, r4, r5, lr}
   4d168:	subs	r5, r0, #0
   4d16c:	popeq	{r3, r4, r5, pc}
   4d170:	ldr	r0, [r5]
   4d174:	cmp	r0, #0
   4d178:	beq	4d190 <freeKeyrangeList@@Base+0x2c>
   4d17c:	ldr	r4, [r0, #16]
   4d180:	bl	f4f4 <free@plt>
   4d184:	cmp	r4, #0
   4d188:	mov	r0, r4
   4d18c:	bne	4d17c <freeKeyrangeList@@Base+0x18>
   4d190:	mov	r3, #0
   4d194:	str	r3, [r5]
   4d198:	pop	{r3, r4, r5, pc}

0004d19c <inKeyrangeList@@Base>:
   4d19c:	cmp	r0, #0
   4d1a0:	bne	4d1b4 <inKeyrangeList@@Base+0x18>
   4d1a4:	bx	lr
   4d1a8:	ldr	r0, [r0, #16]
   4d1ac:	cmp	r0, #0
   4d1b0:	beq	4d1f4 <inKeyrangeList@@Base+0x58>
   4d1b4:	ldr	r1, [r0, #8]
   4d1b8:	cmp	r1, r2
   4d1bc:	bhi	4d1a8 <inKeyrangeList@@Base+0xc>
   4d1c0:	ldr	r1, [r0, #12]
   4d1c4:	cmp	r1, r2
   4d1c8:	bcc	4d1a8 <inKeyrangeList@@Base+0xc>
   4d1cc:	ldr	r1, [r0]
   4d1d0:	orr	r1, r3, r1
   4d1d4:	cmp	r1, r3
   4d1d8:	bne	4d1a8 <inKeyrangeList@@Base+0xc>
   4d1dc:	ldr	r1, [r0, #4]
   4d1e0:	bics	r1, r3, r1
   4d1e4:	bxeq	lr
   4d1e8:	ldr	r0, [r0, #16]
   4d1ec:	cmp	r0, #0
   4d1f0:	bne	4d1b4 <inKeyrangeList@@Base+0x18>
   4d1f4:	bx	lr

0004d1f8 <DisplayKeyrangeList@@Base>:
   4d1f8:	push	{r4, r5, lr}
   4d1fc:	subs	r4, r0, #0
   4d200:	ldr	r5, [pc, #108]	; 4d274 <DisplayKeyrangeList@@Base+0x7c>
   4d204:	sub	sp, sp, #12
   4d208:	add	r5, pc, r5
   4d20c:	bne	4d21c <DisplayKeyrangeList@@Base+0x24>
   4d210:	b	4d260 <DisplayKeyrangeList@@Base+0x68>
   4d214:	bl	f6a4 <putchar@plt>
   4d218:	ldr	r4, [r4, #16]
   4d21c:	ldr	ip, [r4, #12]
   4d220:	mov	r0, #1
   4d224:	ldr	r3, [r4]
   4d228:	mov	r1, r5
   4d22c:	ldr	r2, [r4, #8]
   4d230:	str	ip, [sp]
   4d234:	ldr	ip, [r4, #4]
   4d238:	str	ip, [sp, #4]
   4d23c:	bl	fe24 <__printf_chk@plt>
   4d240:	ldr	r3, [r4, #16]
   4d244:	mov	r0, #44	; 0x2c
   4d248:	cmp	r3, #0
   4d24c:	bne	4d214 <DisplayKeyrangeList@@Base+0x1c>
   4d250:	mov	r0, #10
   4d254:	add	sp, sp, #12
   4d258:	pop	{r4, r5, lr}
   4d25c:	b	f6a4 <putchar@plt>
   4d260:	ldr	r1, [pc, #16]	; 4d278 <DisplayKeyrangeList@@Base+0x80>
   4d264:	mov	r0, #1
   4d268:	add	r1, pc, r1
   4d26c:	bl	fe24 <__printf_chk@plt>
   4d270:	b	4d250 <DisplayKeyrangeList@@Base+0x58>
   4d274:	andeq	lr, r0, r0, lsr #31
   4d278:	andeq	lr, r0, r4, lsr pc

0004d27c <addKeyrange@@Base>:
   4d27c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4d280:	sub	sp, sp, #36	; 0x24
   4d284:	mvn	r4, #0
   4d288:	mov	r5, #0
   4d28c:	and	r6, r2, r4
   4d290:	and	r7, r3, r5
   4d294:	and	r4, r4, r0
   4d298:	and	r5, r5, r1
   4d29c:	strd	r4, [sp, #24]
   4d2a0:	cmp	r5, r7
   4d2a4:	cmpeq	r4, r6
   4d2a8:	strdhi	r6, [sp, #24]
   4d2ac:	orr	ip, r3, r1
   4d2b0:	ldr	sl, [sp, #24]
   4d2b4:	cmp	r5, r7
   4d2b8:	cmpeq	r4, r6
   4d2bc:	ldrd	r8, [sp, #24]
   4d2c0:	and	fp, r3, r1
   4d2c4:	ldr	r1, [pc, #412]	; 4d468 <addKeyrange@@Base+0x1ec>
   4d2c8:	mov	r2, #0
   4d2cc:	movcc	r4, r6
   4d2d0:	orr	r8, r8, r2
   4d2d4:	mov	r6, r2
   4d2d8:	str	ip, [sp, #4]
   4d2dc:	str	r4, [sp]
   4d2e0:	mov	r0, #7
   4d2e4:	mov	r3, fp
   4d2e8:	add	r1, pc, r1
   4d2ec:	mov	r2, sl
   4d2f0:	movcc	r5, r7
   4d2f4:	orr	r9, r9, fp
   4d2f8:	str	ip, [sp, #20]
   4d2fc:	strd	r8, [sp, #8]
   4d300:	orr	r9, ip, r5
   4d304:	orr	r8, r6, r4
   4d308:	strd	r8, [sp, #24]
   4d30c:	bl	1c634 <logMessage@@Base>
   4d310:	ldr	r9, [sp, #72]	; 0x48
   4d314:	ldr	ip, [sp, #20]
   4d318:	ldr	r5, [r9]
   4d31c:	cmp	r5, r6
   4d320:	beq	4d428 <addKeyrange@@Base+0x1ac>
   4d324:	ldr	r8, [sp, #8]
   4d328:	mov	r3, r5
   4d32c:	ldr	r6, [sp, #12]
   4d330:	ldr	r9, [sp, #28]
   4d334:	str	r5, [sp, #8]
   4d338:	b	4d388 <addKeyrange@@Base+0x10c>
   4d33c:	cmp	r4, r2
   4d340:	bcc	4d35c <addKeyrange@@Base+0xe0>
   4d344:	ldr	r1, [r3, #12]
   4d348:	cmp	r4, r1
   4d34c:	bhi	4d35c <addKeyrange@@Base+0xe0>
   4d350:	ldr	r1, [r3]
   4d354:	cmp	r1, fp
   4d358:	beq	4d3f8 <addKeyrange@@Base+0x17c>
   4d35c:	cmp	sl, r2
   4d360:	bcc	4d37c <addKeyrange@@Base+0x100>
   4d364:	ldr	r2, [r3, #12]
   4d368:	cmp	sl, r2
   4d36c:	bhi	4d37c <addKeyrange@@Base+0x100>
   4d370:	ldr	r2, [r3]
   4d374:	cmp	r2, fp
   4d378:	beq	4d40c <addKeyrange@@Base+0x190>
   4d37c:	ldr	r3, [r3, #16]
   4d380:	cmp	r3, #0
   4d384:	beq	4d424 <addKeyrange@@Base+0x1a8>
   4d388:	ldr	r2, [r3, #8]
   4d38c:	cmp	r8, r2
   4d390:	bcc	4d33c <addKeyrange@@Base+0xc0>
   4d394:	ldr	r1, [r3, #12]
   4d398:	cmp	r8, r1
   4d39c:	bhi	4d33c <addKeyrange@@Base+0xc0>
   4d3a0:	ldr	r0, [r3]
   4d3a4:	orr	r7, r6, r0
   4d3a8:	cmp	r7, r6
   4d3ac:	bne	4d33c <addKeyrange@@Base+0xc0>
   4d3b0:	ldr	r7, [r3, #4]
   4d3b4:	mvn	r7, r7
   4d3b8:	tst	r6, r7
   4d3bc:	bne	4d33c <addKeyrange@@Base+0xc0>
   4d3c0:	ldr	r5, [sp, #24]
   4d3c4:	cmp	r2, r5
   4d3c8:	bhi	4d33c <addKeyrange@@Base+0xc0>
   4d3cc:	ldr	r5, [sp, #24]
   4d3d0:	cmp	r1, r5
   4d3d4:	bcc	4d33c <addKeyrange@@Base+0xc0>
   4d3d8:	orr	r0, r9, r0
   4d3dc:	cmp	r9, r0
   4d3e0:	bne	4d33c <addKeyrange@@Base+0xc0>
   4d3e4:	ands	r7, r9, r7
   4d3e8:	bne	4d33c <addKeyrange@@Base+0xc0>
   4d3ec:	mov	r0, #0
   4d3f0:	add	sp, sp, #36	; 0x24
   4d3f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4d3f8:	ldr	r1, [r3, #4]
   4d3fc:	cmp	r1, ip
   4d400:	bne	4d35c <addKeyrange@@Base+0xe0>
   4d404:	str	sl, [r3, #8]
   4d408:	b	4d3ec <addKeyrange@@Base+0x170>
   4d40c:	ldr	r2, [r3, #4]
   4d410:	cmp	r2, ip
   4d414:	bne	4d37c <addKeyrange@@Base+0x100>
   4d418:	str	r4, [r3, #12]
   4d41c:	mov	r0, #0
   4d420:	b	4d460 <addKeyrange@@Base+0x1e4>
   4d424:	ldr	r5, [sp, #8]
   4d428:	mov	r0, #20
   4d42c:	str	ip, [sp, #20]
   4d430:	bl	fb48 <malloc@plt>
   4d434:	ldr	ip, [sp, #20]
   4d438:	subs	r3, r0, #0
   4d43c:	strne	fp, [r3]
   4d440:	strne	sl, [r3, #8]
   4d444:	ldrne	r8, [sp, #72]	; 0x48
   4d448:	movne	r0, #0
   4d44c:	mvneq	r0, #0
   4d450:	strne	ip, [r3, #4]
   4d454:	strne	r4, [r3, #12]
   4d458:	strne	r5, [r3, #16]
   4d45c:	strne	r3, [r8]
   4d460:	add	sp, sp, #36	; 0x24
   4d464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4d468:	ldrdeq	lr, [r0], -r8

0004d46c <removeKeyrange@@Base>:
   4d46c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4d470:	sub	sp, sp, #52	; 0x34
   4d474:	ldr	r7, [sp, #88]	; 0x58
   4d478:	cmp	r7, #0
   4d47c:	beq	4d6b0 <removeKeyrange@@Base+0x244>
   4d480:	ldr	ip, [r7]
   4d484:	cmp	ip, #0
   4d488:	beq	4d6b0 <removeKeyrange@@Base+0x244>
   4d48c:	mvn	r4, #0
   4d490:	mov	r5, #0
   4d494:	and	sl, r2, r4
   4d498:	and	fp, r3, r5
   4d49c:	and	r4, r4, r0
   4d4a0:	and	r5, r5, r1
   4d4a4:	cmp	r5, fp
   4d4a8:	cmpeq	r4, sl
   4d4ac:	and	ip, r3, r1
   4d4b0:	orr	r8, r3, r1
   4d4b4:	mov	r3, r4
   4d4b8:	ldr	r1, [pc, #904]	; 4d848 <removeKeyrange@@Base+0x3dc>
   4d4bc:	movhi	r3, sl
   4d4c0:	cmp	r5, fp
   4d4c4:	cmpeq	r4, sl
   4d4c8:	str	r3, [sp, #28]
   4d4cc:	mov	r0, #7
   4d4d0:	mov	r3, ip
   4d4d4:	movcc	r4, sl
   4d4d8:	str	r8, [sp, #4]
   4d4dc:	str	r4, [sp]
   4d4e0:	add	r1, pc, r1
   4d4e4:	ldr	r2, [sp, #28]
   4d4e8:	mov	r9, r4
   4d4ec:	str	ip, [sp, #12]
   4d4f0:	bl	1c634 <logMessage@@Base>
   4d4f4:	ldr	r4, [r7]
   4d4f8:	ldr	ip, [sp, #12]
   4d4fc:	cmp	r4, #0
   4d500:	beq	4d6b0 <removeKeyrange@@Base+0x244>
   4d504:	ldr	r3, [sp, #28]
   4d508:	mvn	r1, ip
   4d50c:	add	r2, r9, #1
   4d510:	mov	fp, #1
   4d514:	sub	r3, r3, #1
   4d518:	str	r2, [sp, #40]	; 0x28
   4d51c:	str	r3, [sp, #44]	; 0x2c
   4d520:	mov	r2, r7
   4d524:	mov	r3, r8
   4d528:	mov	r8, ip
   4d52c:	mov	ip, r1
   4d530:	mov	r1, r9
   4d534:	ldr	r5, [r4, #8]
   4d538:	cmp	r1, r5
   4d53c:	bcc	4d6c8 <removeKeyrange@@Base+0x25c>
   4d540:	ldr	r0, [r4, #12]
   4d544:	ldr	r6, [sp, #28]
   4d548:	cmp	r6, r0
   4d54c:	bhi	4d6c8 <removeKeyrange@@Base+0x25c>
   4d550:	ldr	r7, [r4, #4]
   4d554:	orrs	r9, ip, r7
   4d558:	beq	4d6c8 <removeKeyrange@@Base+0x25c>
   4d55c:	ldr	r6, [r4]
   4d560:	mvn	r9, r6
   4d564:	orrs	r9, r3, r9
   4d568:	beq	4d6c8 <removeKeyrange@@Base+0x25c>
   4d56c:	ldr	r9, [sp, #28]
   4d570:	cmp	r9, r5
   4d574:	bls	4d6e0 <removeKeyrange@@Base+0x274>
   4d578:	mov	r0, #20
   4d57c:	str	r1, [sp, #16]
   4d580:	str	r2, [sp, #24]
   4d584:	str	r3, [sp, #20]
   4d588:	str	ip, [sp, #12]
   4d58c:	bl	fb48 <malloc@plt>
   4d590:	ldr	r1, [sp, #16]
   4d594:	ldr	r2, [sp, #24]
   4d598:	ldr	r3, [sp, #20]
   4d59c:	ldr	ip, [sp, #12]
   4d5a0:	cmp	r0, #0
   4d5a4:	beq	4d6bc <removeKeyrange@@Base+0x250>
   4d5a8:	str	r5, [r0, #8]
   4d5ac:	ldr	r5, [sp, #44]	; 0x2c
   4d5b0:	str	r6, [r0]
   4d5b4:	str	r7, [r0, #4]
   4d5b8:	str	r5, [r0, #12]
   4d5bc:	str	r4, [r0, #16]
   4d5c0:	str	r0, [r2]
   4d5c4:	add	r2, r0, #16
   4d5c8:	ldr	r5, [r4, #12]
   4d5cc:	ldr	r6, [sp, #28]
   4d5d0:	ldr	r7, [r4, #4]
   4d5d4:	cmp	r1, r5
   4d5d8:	str	r6, [r4, #8]
   4d5dc:	mov	r9, r7
   4d5e0:	ldrcc	r6, [r4]
   4d5e4:	bcc	4d6ec <removeKeyrange@@Base+0x280>
   4d5e8:	str	r1, [sp, #36]	; 0x24
   4d5ec:	mov	r6, #0
   4d5f0:	mov	r1, r2
   4d5f4:	b	4d638 <removeKeyrange@@Base+0x1cc>
   4d5f8:	tst	r5, r8
   4d5fc:	bne	4d75c <removeKeyrange@@Base+0x2f0>
   4d600:	cmp	r0, #0
   4d604:	beq	4d610 <removeKeyrange@@Base+0x1a4>
   4d608:	tst	r5, r3
   4d60c:	beq	4d7d0 <removeKeyrange@@Base+0x364>
   4d610:	orrs	r9, r9, ip
   4d614:	beq	4d6b0 <removeKeyrange@@Base+0x244>
   4d618:	ldr	r0, [r4]
   4d61c:	mvn	r0, r0
   4d620:	orrs	r0, r3, r0
   4d624:	beq	4d6b0 <removeKeyrange@@Base+0x244>
   4d628:	add	r6, r6, #1
   4d62c:	cmp	r6, #32
   4d630:	beq	4d66c <removeKeyrange@@Base+0x200>
   4d634:	mov	r9, r7
   4d638:	lsl	r5, fp, r6
   4d63c:	ands	r0, r5, r9
   4d640:	bne	4d64c <removeKeyrange@@Base+0x1e0>
   4d644:	tst	r5, r8
   4d648:	bne	4d628 <removeKeyrange@@Base+0x1bc>
   4d64c:	ldr	sl, [r4]
   4d650:	tst	r5, sl
   4d654:	beq	4d5f8 <removeKeyrange@@Base+0x18c>
   4d658:	tst	r5, r3
   4d65c:	bne	4d600 <removeKeyrange@@Base+0x194>
   4d660:	add	r6, r6, #1
   4d664:	cmp	r6, #32
   4d668:	bne	4d634 <removeKeyrange@@Base+0x1c8>
   4d66c:	mov	r2, r1
   4d670:	ldr	r1, [sp, #36]	; 0x24
   4d674:	ldr	lr, [r4, #16]
   4d678:	mov	r0, r4
   4d67c:	str	lr, [r2]
   4d680:	mov	r4, lr
   4d684:	str	r1, [sp, #16]
   4d688:	str	r2, [sp, #24]
   4d68c:	str	r3, [sp, #20]
   4d690:	str	ip, [sp, #12]
   4d694:	bl	f4f4 <free@plt>
   4d698:	cmp	r4, #0
   4d69c:	ldr	r1, [sp, #16]
   4d6a0:	ldr	r2, [sp, #24]
   4d6a4:	ldr	r3, [sp, #20]
   4d6a8:	ldr	ip, [sp, #12]
   4d6ac:	bne	4d534 <removeKeyrange@@Base+0xc8>
   4d6b0:	mov	r0, #0
   4d6b4:	add	sp, sp, #52	; 0x34
   4d6b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4d6bc:	mvn	r0, #0
   4d6c0:	add	sp, sp, #52	; 0x34
   4d6c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4d6c8:	add	r2, r4, #16
   4d6cc:	ldr	r4, [r4, #16]
   4d6d0:	cmp	r4, #0
   4d6d4:	bne	4d534 <removeKeyrange@@Base+0xc8>
   4d6d8:	mov	r0, #0
   4d6dc:	b	4d6b4 <removeKeyrange@@Base+0x248>
   4d6e0:	cmp	r1, r0
   4d6e4:	bcs	4d748 <removeKeyrange@@Base+0x2dc>
   4d6e8:	mov	r5, r0
   4d6ec:	mov	r0, #20
   4d6f0:	str	r1, [sp, #16]
   4d6f4:	str	r2, [sp, #24]
   4d6f8:	str	r3, [sp, #20]
   4d6fc:	str	ip, [sp, #12]
   4d700:	bl	fb48 <malloc@plt>
   4d704:	ldr	r1, [sp, #16]
   4d708:	ldr	r2, [sp, #24]
   4d70c:	ldr	r3, [sp, #20]
   4d710:	ldr	ip, [sp, #12]
   4d714:	cmp	r0, #0
   4d718:	beq	4d6bc <removeKeyrange@@Base+0x250>
   4d71c:	ldr	r9, [sp, #40]	; 0x28
   4d720:	str	r6, [r0]
   4d724:	str	r5, [r0, #12]
   4d728:	stmib	r0, {r7, r9}
   4d72c:	str	r4, [r0, #16]
   4d730:	str	r0, [r2]
   4d734:	add	r2, r0, #16
   4d738:	ldr	r7, [r4, #4]
   4d73c:	str	r1, [r4, #12]
   4d740:	mov	r9, r7
   4d744:	b	4d5e8 <removeKeyrange@@Base+0x17c>
   4d748:	orr	r0, r8, r6
   4d74c:	cmp	r6, r0
   4d750:	beq	4d83c <removeKeyrange@@Base+0x3d0>
   4d754:	mov	r9, r7
   4d758:	b	4d5e8 <removeKeyrange@@Base+0x17c>
   4d75c:	ldr	r2, [r4, #8]
   4d760:	mov	r0, #20
   4d764:	ldr	r7, [r4, #12]
   4d768:	bic	r9, r9, r5
   4d76c:	str	r1, [sp, #16]
   4d770:	str	r3, [sp, #20]
   4d774:	str	ip, [sp, #12]
   4d778:	str	r2, [sp, #32]
   4d77c:	bl	fb48 <malloc@plt>
   4d780:	ldr	r1, [sp, #16]
   4d784:	ldr	r3, [sp, #20]
   4d788:	ldr	ip, [sp, #12]
   4d78c:	cmp	r0, #0
   4d790:	beq	4d6bc <removeKeyrange@@Base+0x250>
   4d794:	ldr	r2, [sp, #32]
   4d798:	str	r9, [r0, #4]
   4d79c:	str	sl, [r0]
   4d7a0:	str	r2, [r0, #8]
   4d7a4:	str	r7, [r0, #12]
   4d7a8:	str	r4, [r0, #16]
   4d7ac:	str	r0, [r1]
   4d7b0:	add	r1, r0, #16
   4d7b4:	ldr	r7, [r4, #4]
   4d7b8:	ldr	sl, [r4]
   4d7bc:	and	r0, r5, r7
   4d7c0:	orr	sl, sl, r5
   4d7c4:	mov	r9, r7
   4d7c8:	str	sl, [r4]
   4d7cc:	b	4d600 <removeKeyrange@@Base+0x194>
   4d7d0:	ldr	r2, [r4, #8]
   4d7d4:	mov	r0, #20
   4d7d8:	ldr	r7, [r4, #12]
   4d7dc:	orr	sl, r5, sl
   4d7e0:	str	r1, [sp, #16]
   4d7e4:	str	r3, [sp, #20]
   4d7e8:	str	ip, [sp, #12]
   4d7ec:	str	r2, [sp, #32]
   4d7f0:	bl	fb48 <malloc@plt>
   4d7f4:	ldr	r1, [sp, #16]
   4d7f8:	ldr	r3, [sp, #20]
   4d7fc:	ldr	ip, [sp, #12]
   4d800:	cmp	r0, #0
   4d804:	beq	4d6bc <removeKeyrange@@Base+0x250>
   4d808:	ldr	r2, [sp, #32]
   4d80c:	str	r9, [r0, #4]
   4d810:	str	sl, [r0]
   4d814:	str	r2, [r0, #8]
   4d818:	str	r7, [r0, #12]
   4d81c:	str	r4, [r0, #16]
   4d820:	str	r0, [r1]
   4d824:	add	r1, r0, #16
   4d828:	ldr	r7, [r4, #4]
   4d82c:	bic	r7, r7, r5
   4d830:	str	r7, [r4, #4]
   4d834:	mov	r9, r7
   4d838:	b	4d610 <removeKeyrange@@Base+0x1a4>
   4d83c:	bics	r0, r7, r3
   4d840:	bne	4d754 <removeKeyrange@@Base+0x2e8>
   4d844:	b	4d674 <removeKeyrange@@Base+0x208>
   4d848:	andeq	lr, r0, r0, lsl #26
   4d84c:	mov	r0, #1
   4d850:	bx	lr
   4d854:	mov	r0, #1
   4d858:	bx	lr
   4d85c:	b	f4f4 <free@plt>
   4d860:	b	f4f4 <free@plt>
   4d864:	b	f4f4 <free@plt>
   4d868:	ldr	r1, [pc, #24]	; 4d888 <removeKeyrange@@Base+0x41c>
   4d86c:	mov	r0, #7
   4d870:	push	{r3, lr}
   4d874:	add	r1, pc, r1
   4d878:	ldr	r2, [r2]
   4d87c:	bl	1c634 <logMessage@@Base>
   4d880:	mov	r0, #1
   4d884:	pop	{r3, pc}
   4d888:	andeq	lr, r0, ip, lsl #19
   4d88c:	push	{r4, r5, r6, lr}
   4d890:	mov	r5, r0
   4d894:	mov	r0, #4
   4d898:	bl	fb48 <malloc@plt>
   4d89c:	subs	r4, r0, #0
   4d8a0:	beq	4d8dc <removeKeyrange@@Base+0x470>
   4d8a4:	ldrb	r6, [r5]
   4d8a8:	cmp	r6, #0
   4d8ac:	beq	4d8bc <removeKeyrange@@Base+0x450>
   4d8b0:	str	r5, [r4]
   4d8b4:	mov	r0, r4
   4d8b8:	pop	{r4, r5, r6, pc}
   4d8bc:	ldr	r1, [pc, #36]	; 4d8e8 <removeKeyrange@@Base+0x47c>
   4d8c0:	mov	r0, #3
   4d8c4:	add	r1, pc, r1
   4d8c8:	bl	1c634 <logMessage@@Base>
   4d8cc:	mov	r0, r4
   4d8d0:	bl	f4f4 <free@plt>
   4d8d4:	mov	r0, r6
   4d8d8:	pop	{r4, r5, r6, pc}
   4d8dc:	bl	1c740 <logMallocError@@Base>
   4d8e0:	mov	r0, r4
   4d8e4:	pop	{r4, r5, r6, pc}
   4d8e8:	andeq	lr, r0, r4, asr r9
   4d8ec:	push	{r4, r5, lr}
   4d8f0:	sub	sp, sp, #20
   4d8f4:	ldr	lr, [pc, #112]	; 4d96c <removeKeyrange@@Base+0x500>
   4d8f8:	add	ip, sp, #16
   4d8fc:	ldr	r2, [pc, #108]	; 4d970 <removeKeyrange@@Base+0x504>
   4d900:	mov	r5, #12
   4d904:	add	lr, pc, lr
   4d908:	mov	r3, r0
   4d90c:	mov	r0, r1
   4d910:	mov	r1, #1
   4d914:	ldr	r4, [lr, r2]
   4d918:	mov	r2, #17
   4d91c:	str	r5, [ip, #-8]!
   4d920:	str	ip, [sp]
   4d924:	ldr	ip, [r4]
   4d928:	str	ip, [sp, #12]
   4d92c:	bl	f4b8 <getsockopt@plt>
   4d930:	cmn	r0, #1
   4d934:	movne	r0, #1
   4d938:	beq	4d954 <removeKeyrange@@Base+0x4e8>
   4d93c:	ldr	r2, [sp, #12]
   4d940:	ldr	r3, [r4]
   4d944:	cmp	r2, r3
   4d948:	bne	4d968 <removeKeyrange@@Base+0x4fc>
   4d94c:	add	sp, sp, #20
   4d950:	pop	{r4, r5, pc}
   4d954:	ldr	r0, [pc, #24]	; 4d974 <removeKeyrange@@Base+0x508>
   4d958:	add	r0, pc, r0
   4d95c:	bl	1c6fc <logSystemError@@Base>
   4d960:	mov	r0, #0
   4d964:	b	4d93c <removeKeyrange@@Base+0x4d0>
   4d968:	bl	f950 <__stack_chk_fail@plt>
   4d96c:	andeq	r5, r2, r4, ror r1
   4d970:			; <UNDEFINED> instruction: 0x000003b4
   4d974:	andeq	lr, r0, r0, ror #17
   4d978:	push	{r3, r4, r5, lr}
   4d97c:	mov	r4, r0
   4d980:	ldr	r0, [r0, #16]
   4d984:	mov	r5, r2
   4d988:	cmp	r0, #0
   4d98c:	bne	4d9a8 <removeKeyrange@@Base+0x53c>
   4d990:	add	r0, r4, #20
   4d994:	bl	4d8ec <removeKeyrange@@Base+0x480>
   4d998:	cmp	r0, #0
   4d99c:	moveq	r0, #1
   4d9a0:	movne	r0, #2
   4d9a4:	str	r0, [r4, #16]
   4d9a8:	cmp	r0, #2
   4d9ac:	bne	4d9c8 <removeKeyrange@@Base+0x55c>
   4d9b0:	ldr	r0, [r4, #28]
   4d9b4:	ldr	r3, [r5]
   4d9b8:	subs	r3, r0, r3
   4d9bc:	rsbs	r0, r3, #0
   4d9c0:	adcs	r0, r0, r3
   4d9c4:	pop	{r3, r4, r5, pc}
   4d9c8:	mov	r0, #0
   4d9cc:	pop	{r3, r4, r5, pc}
   4d9d0:	ldr	r3, [pc, #216]	; 4dab0 <removeKeyrange@@Base+0x644>
   4d9d4:	ldr	r2, [pc, #216]	; 4dab4 <removeKeyrange@@Base+0x648>
   4d9d8:	add	r3, pc, r3
   4d9dc:	push	{r4, r5, r6, r7, lr}
   4d9e0:	sub	sp, sp, #12
   4d9e4:	ldr	r4, [r3, r2]
   4d9e8:	mov	r6, r0
   4d9ec:	mov	r0, #4
   4d9f0:	ldr	r3, [r4]
   4d9f4:	str	r3, [sp, #4]
   4d9f8:	bl	fb48 <malloc@plt>
   4d9fc:	subs	r5, r0, #0
   4da00:	beq	4da7c <removeKeyrange@@Base+0x610>
   4da04:	ldrb	r3, [r6]
   4da08:	cmp	r3, #0
   4da0c:	beq	4da6c <removeKeyrange@@Base+0x600>
   4da10:	mov	r0, sp
   4da14:	mov	r1, r6
   4da18:	bl	1ddfc <isInteger@@Base>
   4da1c:	cmp	r0, #0
   4da20:	beq	4da4c <removeKeyrange@@Base+0x5e0>
   4da24:	ldr	r2, [sp]
   4da28:	mov	r3, r5
   4da2c:	str	r2, [r5]
   4da30:	ldr	r2, [sp, #4]
   4da34:	mov	r0, r3
   4da38:	ldr	r3, [r4]
   4da3c:	cmp	r2, r3
   4da40:	bne	4daac <removeKeyrange@@Base+0x640>
   4da44:	add	sp, sp, #12
   4da48:	pop	{r4, r5, r6, r7, pc}
   4da4c:	mov	r0, r6
   4da50:	bl	fdac <getgrnam@plt>
   4da54:	subs	r7, r0, #0
   4da58:	beq	4da88 <removeKeyrange@@Base+0x61c>
   4da5c:	ldr	r2, [r7, #8]
   4da60:	mov	r3, r5
   4da64:	str	r2, [r5]
   4da68:	b	4da30 <removeKeyrange@@Base+0x5c4>
   4da6c:	bl	f5b4 <getegid@plt>
   4da70:	mov	r3, r5
   4da74:	str	r0, [r5]
   4da78:	b	4da30 <removeKeyrange@@Base+0x5c4>
   4da7c:	bl	1c740 <logMallocError@@Base>
   4da80:	mov	r3, r5
   4da84:	b	4da30 <removeKeyrange@@Base+0x5c4>
   4da88:	ldr	r1, [pc, #40]	; 4dab8 <removeKeyrange@@Base+0x64c>
   4da8c:	mov	r2, r6
   4da90:	mov	r0, #3
   4da94:	add	r1, pc, r1
   4da98:	bl	1c634 <logMessage@@Base>
   4da9c:	mov	r0, r5
   4daa0:	bl	f4f4 <free@plt>
   4daa4:	mov	r3, r7
   4daa8:	b	4da30 <removeKeyrange@@Base+0x5c4>
   4daac:	bl	f950 <__stack_chk_fail@plt>
   4dab0:	andeq	r5, r2, r0, lsr #1
   4dab4:			; <UNDEFINED> instruction: 0x000003b4
   4dab8:			; <UNDEFINED> instruction: 0x0000e7bc
   4dabc:	ldr	r3, [pc, #216]	; 4db9c <removeKeyrange@@Base+0x730>
   4dac0:	ldr	r2, [pc, #216]	; 4dba0 <removeKeyrange@@Base+0x734>
   4dac4:	add	r3, pc, r3
   4dac8:	push	{r4, r5, r6, r7, lr}
   4dacc:	sub	sp, sp, #12
   4dad0:	ldr	r4, [r3, r2]
   4dad4:	mov	r6, r0
   4dad8:	mov	r0, #4
   4dadc:	ldr	r3, [r4]
   4dae0:	str	r3, [sp, #4]
   4dae4:	bl	fb48 <malloc@plt>
   4dae8:	subs	r5, r0, #0
   4daec:	beq	4db68 <removeKeyrange@@Base+0x6fc>
   4daf0:	ldrb	r3, [r6]
   4daf4:	cmp	r3, #0
   4daf8:	beq	4db58 <removeKeyrange@@Base+0x6ec>
   4dafc:	mov	r0, sp
   4db00:	mov	r1, r6
   4db04:	bl	1ddfc <isInteger@@Base>
   4db08:	cmp	r0, #0
   4db0c:	beq	4db38 <removeKeyrange@@Base+0x6cc>
   4db10:	ldr	r2, [sp]
   4db14:	mov	r3, r5
   4db18:	str	r2, [r5]
   4db1c:	ldr	r2, [sp, #4]
   4db20:	mov	r0, r3
   4db24:	ldr	r3, [r4]
   4db28:	cmp	r2, r3
   4db2c:	bne	4db98 <removeKeyrange@@Base+0x72c>
   4db30:	add	sp, sp, #12
   4db34:	pop	{r4, r5, r6, r7, pc}
   4db38:	mov	r0, r6
   4db3c:	bl	f3ec <getpwnam@plt>
   4db40:	subs	r7, r0, #0
   4db44:	beq	4db74 <removeKeyrange@@Base+0x708>
   4db48:	ldr	r2, [r7, #8]
   4db4c:	mov	r3, r5
   4db50:	str	r2, [r5]
   4db54:	b	4db1c <removeKeyrange@@Base+0x6b0>
   4db58:	bl	fb3c <geteuid@plt>
   4db5c:	mov	r3, r5
   4db60:	str	r0, [r5]
   4db64:	b	4db1c <removeKeyrange@@Base+0x6b0>
   4db68:	bl	1c740 <logMallocError@@Base>
   4db6c:	mov	r3, r5
   4db70:	b	4db1c <removeKeyrange@@Base+0x6b0>
   4db74:	ldr	r1, [pc, #40]	; 4dba4 <removeKeyrange@@Base+0x738>
   4db78:	mov	r2, r6
   4db7c:	mov	r0, #3
   4db80:	add	r1, pc, r1
   4db84:	bl	1c634 <logMessage@@Base>
   4db88:	mov	r0, r5
   4db8c:	bl	f4f4 <free@plt>
   4db90:	mov	r3, r7
   4db94:	b	4db1c <removeKeyrange@@Base+0x6b0>
   4db98:	bl	f950 <__stack_chk_fail@plt>
   4db9c:			; <UNDEFINED> instruction: 0x00024fb4
   4dba0:			; <UNDEFINED> instruction: 0x000003b4
   4dba4:	andeq	lr, r0, r4, ror #13
   4dba8:	cmp	r1, #0
   4dbac:	push	{r4, r5, r6, r7, r8, lr}
   4dbb0:	mov	r7, r0
   4dbb4:	pople	{r4, r5, r6, r7, r8, pc}
   4dbb8:	sub	r5, r1, #1
   4dbbc:	mov	r8, #0
   4dbc0:	lsl	r4, r5, #3
   4dbc4:	ldr	r3, [r7]
   4dbc8:	add	r6, r3, r4
   4dbcc:	ldr	r0, [r6, #4]
   4dbd0:	cmp	r0, #0
   4dbd4:	beq	4dbf0 <removeKeyrange@@Base+0x784>
   4dbd8:	ldr	r3, [r3, r4]
   4dbdc:	ldr	r3, [r3, #8]
   4dbe0:	cmp	r3, #0
   4dbe4:	beq	4dbec <removeKeyrange@@Base+0x780>
   4dbe8:	blx	r3
   4dbec:	str	r8, [r6, #4]
   4dbf0:	cmp	r5, #0
   4dbf4:	sub	r4, r4, #8
   4dbf8:	sub	r5, r5, #1
   4dbfc:	bne	4dbc4 <removeKeyrange@@Base+0x758>
   4dc00:	pop	{r4, r5, r6, r7, r8, pc}
   4dc04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4dc08:	mov	r4, r0
   4dc0c:	sub	sp, sp, #12
   4dc10:	mov	r0, #32
   4dc14:	mov	r6, r1
   4dc18:	mov	r5, r2
   4dc1c:	bl	fb48 <malloc@plt>
   4dc20:	subs	r7, r0, #0
   4dc24:	beq	4de00 <removeKeyrange@@Base+0x994>
   4dc28:	cmp	r4, #0
   4dc2c:	str	r5, [r7, #12]
   4dc30:	beq	4ddec <removeKeyrange@@Base+0x980>
   4dc34:	ldrb	r3, [r4]
   4dc38:	cmp	r3, #0
   4dc3c:	moveq	r4, r6
   4dc40:	beq	4dc5c <removeKeyrange@@Base+0x7f0>
   4dc44:	ldr	r1, [pc, #448]	; 4de0c <removeKeyrange@@Base+0x9a0>
   4dc48:	mov	r0, r4
   4dc4c:	add	r1, pc, r1
   4dc50:	bl	fc5c <strcmp@plt>
   4dc54:	cmp	r0, #0
   4dc58:	beq	4dc98 <removeKeyrange@@Base+0x82c>
   4dc5c:	mov	r0, r4
   4dc60:	mov	r1, #43	; 0x2b
   4dc64:	mov	r2, r7
   4dc68:	bl	1dbbc <splitString@@Base>
   4dc6c:	cmp	r0, #0
   4dc70:	mov	r4, r0
   4dc74:	str	r0, [r7, #4]
   4dc78:	beq	4ddb8 <removeKeyrange@@Base+0x94c>
   4dc7c:	ldr	r5, [r7]
   4dc80:	cmp	r5, #0
   4dc84:	streq	r5, [r7, #8]
   4dc88:	moveq	r0, r7
   4dc8c:	bne	4dca4 <removeKeyrange@@Base+0x838>
   4dc90:	add	sp, sp, #12
   4dc94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4dc98:	ldr	r4, [pc, #368]	; 4de10 <removeKeyrange@@Base+0x9a4>
   4dc9c:	add	r4, pc, r4
   4dca0:	b	4dc5c <removeKeyrange@@Base+0x7f0>
   4dca4:	lsl	r0, r5, #3
   4dca8:	bl	fb48 <malloc@plt>
   4dcac:	cmp	r0, #0
   4dcb0:	str	r0, [r7, #8]
   4dcb4:	beq	4ddf8 <removeKeyrange@@Base+0x98c>
   4dcb8:	cmp	r5, #0
   4dcbc:	ble	4dde0 <removeKeyrange@@Base+0x974>
   4dcc0:	ldr	sl, [pc, #332]	; 4de14 <removeKeyrange@@Base+0x9a8>
   4dcc4:	mov	r8, #0
   4dcc8:	ldr	r9, [pc, #328]	; 4de18 <removeKeyrange@@Base+0x9ac>
   4dccc:	add	sl, pc, sl
   4dcd0:	str	r0, [sp]
   4dcd4:	add	r9, pc, r9
   4dcd8:	ldr	r6, [r4, r8, lsl #2]
   4dcdc:	mov	r1, #58	; 0x3a
   4dce0:	mov	r0, r6
   4dce4:	bl	fdd0 <strchr@plt>
   4dce8:	cmp	r0, #0
   4dcec:	beq	4ddc8 <removeKeyrange@@Base+0x95c>
   4dcf0:	rsb	r5, r6, r0
   4dcf4:	add	r3, r0, #1
   4dcf8:	str	r3, [sp, #4]
   4dcfc:	mov	r4, sl
   4dd00:	mov	r0, #7
   4dd04:	mov	fp, r9
   4dd08:	b	4dd20 <removeKeyrange@@Base+0x8b4>
   4dd0c:	ldr	fp, [r4, #20]!
   4dd10:	cmp	fp, #0
   4dd14:	mov	r0, fp
   4dd18:	beq	4dd84 <removeKeyrange@@Base+0x918>
   4dd1c:	bl	fb54 <strlen@plt>
   4dd20:	cmp	r5, r0
   4dd24:	bne	4dd0c <removeKeyrange@@Base+0x8a0>
   4dd28:	mov	r1, fp
   4dd2c:	mov	r0, r6
   4dd30:	mov	r2, r5
   4dd34:	bl	f548 <strncmp@plt>
   4dd38:	cmp	r0, #0
   4dd3c:	bne	4dd0c <removeKeyrange@@Base+0x8a0>
   4dd40:	ldr	r0, [sp, #4]
   4dd44:	ldr	r3, [r4, #4]
   4dd48:	blx	r3
   4dd4c:	cmp	r0, #0
   4dd50:	beq	4dd9c <removeKeyrange@@Base+0x930>
   4dd54:	ldr	r2, [sp]
   4dd58:	add	r3, r2, r8, lsl #3
   4dd5c:	str	r4, [r2, r8, lsl #3]
   4dd60:	add	r8, r8, #1
   4dd64:	str	r0, [r3, #4]
   4dd68:	ldr	r3, [r7]
   4dd6c:	cmp	r8, r3
   4dd70:	bge	4dde0 <removeKeyrange@@Base+0x974>
   4dd74:	ldr	r3, [r7, #8]
   4dd78:	ldr	r4, [r7, #4]
   4dd7c:	str	r3, [sp]
   4dd80:	b	4dcd8 <removeKeyrange@@Base+0x86c>
   4dd84:	ldr	r1, [pc, #144]	; 4de1c <removeKeyrange@@Base+0x9b0>
   4dd88:	mov	r2, r5
   4dd8c:	mov	r3, r6
   4dd90:	mov	r0, #4
   4dd94:	add	r1, pc, r1
   4dd98:	bl	1c634 <logMessage@@Base>
   4dd9c:	add	r0, r7, #8
   4dda0:	mov	r1, r8
   4dda4:	bl	4dba8 <removeKeyrange@@Base+0x73c>
   4dda8:	ldr	r0, [r7, #8]
   4ddac:	bl	f4f4 <free@plt>
   4ddb0:	ldr	r0, [r7, #4]
   4ddb4:	bl	1db88 <deallocateStrings@@Base>
   4ddb8:	mov	r0, r7
   4ddbc:	bl	f4f4 <free@plt>
   4ddc0:	mov	r0, #0
   4ddc4:	b	4dc90 <removeKeyrange@@Base+0x824>
   4ddc8:	mov	r0, r6
   4ddcc:	bl	fb54 <strlen@plt>
   4ddd0:	add	r3, r6, r0
   4ddd4:	mov	r5, r0
   4ddd8:	str	r3, [sp, #4]
   4dddc:	b	4dcfc <removeKeyrange@@Base+0x890>
   4dde0:	mov	r0, r7
   4dde4:	add	sp, sp, #12
   4dde8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4ddec:	ldr	r4, [pc, #44]	; 4de20 <removeKeyrange@@Base+0x9b4>
   4ddf0:	add	r4, pc, r4
   4ddf4:	b	4dc34 <removeKeyrange@@Base+0x7c8>
   4ddf8:	bl	1c740 <logMallocError@@Base>
   4ddfc:	b	4ddb0 <removeKeyrange@@Base+0x944>
   4de00:	bl	1c740 <logMallocError@@Base>
   4de04:	mov	r0, r7
   4de08:	b	4dc90 <removeKeyrange@@Base+0x824>
   4de0c:	andeq	r2, r0, ip, rrx
   4de10:	andeq	r1, r0, r8, rrx
   4de14:	andeq	r4, r2, ip, lsr #2
   4de18:	andeq	lr, r0, r4, lsr #11
   4de1c:	andeq	lr, r0, ip, ror #9
   4de20:	andeq	r0, r0, r4, lsl pc
   4de24:	push	{r4, r5, r6, lr}
   4de28:	mov	r5, r0
   4de2c:	ldr	r2, [r0]
   4de30:	mov	r6, r1
   4de34:	cmp	r2, #0
   4de38:	beq	4dec8 <removeKeyrange@@Base+0xa5c>
   4de3c:	mov	r4, #0
   4de40:	str	r4, [r0, #16]
   4de44:	bgt	4de58 <removeKeyrange@@Base+0x9ec>
   4de48:	b	4dec0 <removeKeyrange@@Base+0xa54>
   4de4c:	add	r4, r4, #1
   4de50:	cmp	r4, r2
   4de54:	bge	4dea4 <removeKeyrange@@Base+0xa38>
   4de58:	ldr	r3, [r5, #8]
   4de5c:	add	r0, r3, r4, lsl #3
   4de60:	ldr	r3, [r3, r4, lsl #3]
   4de64:	ldr	ip, [r3, #16]
   4de68:	cmp	ip, #0
   4de6c:	beq	4de4c <removeKeyrange@@Base+0x9e0>
   4de70:	ldr	r3, [r3, #12]
   4de74:	cmp	r3, #0
   4de78:	bne	4de4c <removeKeyrange@@Base+0x9e0>
   4de7c:	ldr	r2, [r0, #4]
   4de80:	mov	r1, r6
   4de84:	mov	r0, r5
   4de88:	blx	ip
   4de8c:	cmp	r0, #0
   4de90:	bne	4dec8 <removeKeyrange@@Base+0xa5c>
   4de94:	ldr	r2, [r5]
   4de98:	add	r4, r4, #1
   4de9c:	cmp	r4, r2
   4dea0:	blt	4de58 <removeKeyrange@@Base+0x9ec>
   4dea4:	ldr	r3, [r5, #16]
   4dea8:	cmp	r3, #0
   4deac:	beq	4dec0 <removeKeyrange@@Base+0xa54>
   4deb0:	ldr	r1, [pc, #24]	; 4ded0 <removeKeyrange@@Base+0xa64>
   4deb4:	mov	r0, #3
   4deb8:	add	r1, pc, r1
   4debc:	bl	1c634 <logMessage@@Base>
   4dec0:	mov	r0, #0
   4dec4:	pop	{r4, r5, r6, pc}
   4dec8:	mov	r0, #1
   4decc:	pop	{r4, r5, r6, pc}
   4ded0:	strdeq	lr, [r0], -ip
   4ded4:	push	{r3, r4, r5, lr}
   4ded8:	mov	r4, r0
   4dedc:	ldr	r0, [r0, #16]
   4dee0:	mov	r5, r2
   4dee4:	cmp	r0, #0
   4dee8:	bne	4df04 <removeKeyrange@@Base+0xa98>
   4deec:	add	r0, r4, #20
   4def0:	bl	4d8ec <removeKeyrange@@Base+0x480>
   4def4:	cmp	r0, #0
   4def8:	moveq	r0, #1
   4defc:	movne	r0, #2
   4df00:	str	r0, [r4, #16]
   4df04:	cmp	r0, #2
   4df08:	bne	4df24 <removeKeyrange@@Base+0xab8>
   4df0c:	ldr	r0, [r4, #24]
   4df10:	ldr	r3, [r5]
   4df14:	subs	r3, r0, r3
   4df18:	rsbs	r0, r3, #0
   4df1c:	adcs	r0, r0, r3
   4df20:	pop	{r3, r4, r5, pc}
   4df24:	mov	r0, #0
   4df28:	pop	{r3, r4, r5, pc}

0004df2c <authBeginClient@@Base>:
   4df2c:	ldr	r1, [pc, #12]	; 4df40 <authBeginClient@@Base+0x14>
   4df30:	ldr	r2, [pc, #12]	; 4df44 <authBeginClient@@Base+0x18>
   4df34:	add	r1, pc, r1
   4df38:	add	r2, pc, r2
   4df3c:	b	4dc04 <removeKeyrange@@Base+0x798>
   4df40:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   4df44:			; <UNDEFINED> instruction: 0xfffff914

0004df48 <authBeginServer@@Base>:
   4df48:	ldr	r1, [pc, #12]	; 4df5c <authBeginServer@@Base+0x14>
   4df4c:	ldr	r2, [pc, #12]	; 4df60 <authBeginServer@@Base+0x18>
   4df50:	add	r1, pc, r1
   4df54:	add	r2, pc, r2
   4df58:	b	4dc04 <removeKeyrange@@Base+0x798>
   4df5c:	andeq	lr, r0, r0, lsl #7
   4df60:			; <UNDEFINED> instruction: 0xfffffec8

0004df64 <authEnd@@Base>:
   4df64:	push	{r4, lr}
   4df68:	mov	r4, r0
   4df6c:	ldr	r1, [r4]
   4df70:	add	r0, r0, #8
   4df74:	bl	4dba8 <removeKeyrange@@Base+0x73c>
   4df78:	ldr	r0, [r4, #8]
   4df7c:	cmp	r0, #0
   4df80:	beq	4df88 <authEnd@@Base+0x24>
   4df84:	bl	f4f4 <free@plt>
   4df88:	ldr	r0, [r4, #4]
   4df8c:	bl	1db88 <deallocateStrings@@Base>
   4df90:	mov	r0, r4
   4df94:	pop	{r4, lr}
   4df98:	b	f4f4 <free@plt>

0004df9c <authPerform@@Base>:
   4df9c:	push	{r3, lr}
   4dfa0:	ldr	r3, [r0, #12]
   4dfa4:	blx	r3
   4dfa8:	pop	{r3, pc}

0004dfac <formatAddress@@Base>:
   4dfac:	ldr	ip, [pc, #556]	; 4e1e0 <formatAddress@@Base+0x234>
   4dfb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4dfb4:	add	ip, pc, ip
   4dfb8:	ldr	lr, [pc, #548]	; 4e1e4 <formatAddress@@Base+0x238>
   4dfbc:	mov	r4, r2
   4dfc0:	ldrh	r2, [r2]
   4dfc4:	sub	sp, sp, #1072	; 0x430
   4dfc8:	mov	r7, r3
   4dfcc:	sub	sp, sp, #8
   4dfd0:	ldr	r5, [ip, lr]
   4dfd4:	cmp	r2, #1
   4dfd8:	mov	r6, r0
   4dfdc:	mov	r8, r1
   4dfe0:	ldr	r3, [r5]
   4dfe4:	str	r3, [sp, #1076]	; 0x434
   4dfe8:	beq	4e0d0 <formatAddress@@Base+0x124>
   4dfec:	cmp	r2, #2
   4dff0:	bne	4e050 <formatAddress@@Base+0xa4>
   4dff4:	ldr	r0, [r4, #4]
   4dff8:	bl	f86c <inet_ntoa@plt>
   4dffc:	ldr	ip, [pc, #484]	; 4e1e8 <formatAddress@@Base+0x23c>
   4e000:	mov	r1, r8
   4e004:	mov	r2, #1
   4e008:	add	ip, pc, ip
   4e00c:	str	ip, [sp]
   4e010:	mvn	r3, #0
   4e014:	str	r0, [sp, #4]
   4e018:	mov	r0, r6
   4e01c:	ldrh	ip, [r4, #2]
   4e020:	lsl	lr, ip, #8
   4e024:	orr	ip, lr, ip, lsr #8
   4e028:	uxth	ip, ip
   4e02c:	str	ip, [sp, #8]
   4e030:	bl	fb60 <__snprintf_chk@plt>
   4e034:	ldr	r2, [sp, #1076]	; 0x434
   4e038:	ldr	r3, [r5]
   4e03c:	cmp	r2, r3
   4e040:	bne	4e1dc <formatAddress@@Base+0x230>
   4e044:	add	sp, sp, #1072	; 0x430
   4e048:	add	sp, sp, #8
   4e04c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4e050:	add	sl, sp, #48	; 0x30
   4e054:	mov	r3, #32
   4e058:	add	r9, sp, #16
   4e05c:	str	r3, [sp, #4]
   4e060:	str	r9, [sp]
   4e064:	mov	r3, #3
   4e068:	mov	r2, sl
   4e06c:	str	r3, [sp, #8]
   4e070:	mov	r0, r4
   4e074:	movw	r3, #1025	; 0x401
   4e078:	mov	r1, r7
   4e07c:	bl	fa04 <getnameinfo@plt>
   4e080:	subs	r3, r0, #0
   4e084:	beq	4e11c <formatAddress@@Base+0x170>
   4e088:	cmn	r3, #6
   4e08c:	beq	4e150 <formatAddress@@Base+0x1a4>
   4e090:	cmn	r3, #11
   4e094:	ldrh	r4, [r4]
   4e098:	beq	4e108 <formatAddress@@Base+0x15c>
   4e09c:	bl	fd1c <gai_strerror@plt>
   4e0a0:	mov	r2, r0
   4e0a4:	ldr	r3, [pc, #320]	; 4e1ec <formatAddress@@Base+0x240>
   4e0a8:	mov	r0, r6
   4e0ac:	str	r2, [sp, #8]
   4e0b0:	mov	r1, r8
   4e0b4:	add	r3, pc, r3
   4e0b8:	str	r4, [sp, #4]
   4e0bc:	str	r3, [sp]
   4e0c0:	mov	r2, #1
   4e0c4:	mvn	r3, #0
   4e0c8:	bl	fb60 <__snprintf_chk@plt>
   4e0cc:	b	4e034 <formatAddress@@Base+0x88>
   4e0d0:	cmp	r7, #2
   4e0d4:	bhi	4e0e8 <formatAddress@@Base+0x13c>
   4e0d8:	ldr	r2, [pc, #272]	; 4e1f0 <formatAddress@@Base+0x244>
   4e0dc:	add	r2, pc, r2
   4e0e0:	bl	f734 <snprintf@plt>
   4e0e4:	b	4e034 <formatAddress@@Base+0x88>
   4e0e8:	ldr	ip, [pc, #260]	; 4e1f4 <formatAddress@@Base+0x248>
   4e0ec:	add	r4, r4, #2
   4e0f0:	mvn	r3, #0
   4e0f4:	str	r4, [sp, #4]
   4e0f8:	add	ip, pc, ip
   4e0fc:	str	ip, [sp]
   4e100:	bl	fb60 <__snprintf_chk@plt>
   4e104:	b	4e034 <formatAddress@@Base+0x88>
   4e108:	bl	fca4 <__errno_location@plt>
   4e10c:	ldr	r0, [r0]
   4e110:	bl	f5c0 <strerror@plt>
   4e114:	mov	r2, r0
   4e118:	b	4e0a4 <formatAddress@@Base+0xf8>
   4e11c:	ldrh	r3, [r4]
   4e120:	mov	r0, r6
   4e124:	ldr	ip, [pc, #204]	; 4e1f8 <formatAddress@@Base+0x24c>
   4e128:	mov	r1, r8
   4e12c:	str	sl, [sp, #8]
   4e130:	mov	r2, #1
   4e134:	add	ip, pc, ip
   4e138:	str	r3, [sp, #4]
   4e13c:	str	r9, [sp, #12]
   4e140:	mvn	r3, #0
   4e144:	str	ip, [sp]
   4e148:	bl	fb60 <__snprintf_chk@plt>
   4e14c:	b	4e034 <formatAddress@@Base+0x88>
   4e150:	mov	r9, r4
   4e154:	ldr	r2, [pc, #160]	; 4e1fc <formatAddress@@Base+0x250>
   4e158:	ldrh	r3, [r9], r7
   4e15c:	add	r8, r6, r8
   4e160:	add	r2, pc, r2
   4e164:	rsb	r1, r6, r8
   4e168:	mov	r0, r6
   4e16c:	str	r2, [sp]
   4e170:	str	r3, [sp, #4]
   4e174:	mov	r2, #1
   4e178:	mvn	r3, #0
   4e17c:	bl	fb60 <__snprintf_chk@plt>
   4e180:	add	r0, r6, r0
   4e184:	cmp	r0, r8
   4e188:	movcc	r6, r0
   4e18c:	movcs	r6, r8
   4e190:	cmp	r4, r9
   4e194:	bcs	4e034 <formatAddress@@Base+0x88>
   4e198:	ldr	r7, [pc, #96]	; 4e200 <formatAddress@@Base+0x254>
   4e19c:	add	r7, pc, r7
   4e1a0:	ldrb	ip, [r4], #1
   4e1a4:	mov	r0, r6
   4e1a8:	rsb	r1, r6, r8
   4e1ac:	str	r7, [sp]
   4e1b0:	mov	r2, #1
   4e1b4:	mvn	r3, #0
   4e1b8:	str	ip, [sp, #4]
   4e1bc:	bl	fb60 <__snprintf_chk@plt>
   4e1c0:	add	r0, r6, r0
   4e1c4:	cmp	r0, r8
   4e1c8:	movcc	r6, r0
   4e1cc:	movcs	r6, r8
   4e1d0:	cmp	r4, r9
   4e1d4:	bne	4e1a0 <formatAddress@@Base+0x1f4>
   4e1d8:	b	4e034 <formatAddress@@Base+0x88>
   4e1dc:	bl	f950 <__stack_chk_fail@plt>
   4e1e0:	andeq	r4, r2, r4, asr #21
   4e1e4:			; <UNDEFINED> instruction: 0x000003b4
   4e1e8:	andeq	lr, r0, ip, ror #5
   4e1ec:	andeq	lr, r0, r8, asr r2
   4e1f0:	strdeq	lr, [r0], -ip
   4e1f4:	strdeq	lr, [r0], -r0
   4e1f8:	andeq	lr, r0, ip, asr #3
   4e1fc:	ldrdeq	lr, [r0], -ip
   4e200:	andeq	fp, r0, r4, ror #26
   4e204:	subs	r2, r1, #1
   4e208:	bxeq	lr
   4e20c:	bcc	4e3e4 <formatAddress@@Base+0x438>
   4e210:	cmp	r0, r1
   4e214:	bls	4e3c8 <formatAddress@@Base+0x41c>
   4e218:	tst	r1, r2
   4e21c:	beq	4e3d4 <formatAddress@@Base+0x428>
   4e220:	clz	r3, r0
   4e224:	clz	r2, r1
   4e228:	sub	r3, r2, r3
   4e22c:	rsbs	r3, r3, #31
   4e230:	addne	r3, r3, r3, lsl #1
   4e234:	mov	r2, #0
   4e238:	addne	pc, pc, r3, lsl #2
   4e23c:	nop	{0}
   4e240:	cmp	r0, r1, lsl #31
   4e244:	adc	r2, r2, r2
   4e248:	subcs	r0, r0, r1, lsl #31
   4e24c:	cmp	r0, r1, lsl #30
   4e250:	adc	r2, r2, r2
   4e254:	subcs	r0, r0, r1, lsl #30
   4e258:	cmp	r0, r1, lsl #29
   4e25c:	adc	r2, r2, r2
   4e260:	subcs	r0, r0, r1, lsl #29
   4e264:	cmp	r0, r1, lsl #28
   4e268:	adc	r2, r2, r2
   4e26c:	subcs	r0, r0, r1, lsl #28
   4e270:	cmp	r0, r1, lsl #27
   4e274:	adc	r2, r2, r2
   4e278:	subcs	r0, r0, r1, lsl #27
   4e27c:	cmp	r0, r1, lsl #26
   4e280:	adc	r2, r2, r2
   4e284:	subcs	r0, r0, r1, lsl #26
   4e288:	cmp	r0, r1, lsl #25
   4e28c:	adc	r2, r2, r2
   4e290:	subcs	r0, r0, r1, lsl #25
   4e294:	cmp	r0, r1, lsl #24
   4e298:	adc	r2, r2, r2
   4e29c:	subcs	r0, r0, r1, lsl #24
   4e2a0:	cmp	r0, r1, lsl #23
   4e2a4:	adc	r2, r2, r2
   4e2a8:	subcs	r0, r0, r1, lsl #23
   4e2ac:	cmp	r0, r1, lsl #22
   4e2b0:	adc	r2, r2, r2
   4e2b4:	subcs	r0, r0, r1, lsl #22
   4e2b8:	cmp	r0, r1, lsl #21
   4e2bc:	adc	r2, r2, r2
   4e2c0:	subcs	r0, r0, r1, lsl #21
   4e2c4:	cmp	r0, r1, lsl #20
   4e2c8:	adc	r2, r2, r2
   4e2cc:	subcs	r0, r0, r1, lsl #20
   4e2d0:	cmp	r0, r1, lsl #19
   4e2d4:	adc	r2, r2, r2
   4e2d8:	subcs	r0, r0, r1, lsl #19
   4e2dc:	cmp	r0, r1, lsl #18
   4e2e0:	adc	r2, r2, r2
   4e2e4:	subcs	r0, r0, r1, lsl #18
   4e2e8:	cmp	r0, r1, lsl #17
   4e2ec:	adc	r2, r2, r2
   4e2f0:	subcs	r0, r0, r1, lsl #17
   4e2f4:	cmp	r0, r1, lsl #16
   4e2f8:	adc	r2, r2, r2
   4e2fc:	subcs	r0, r0, r1, lsl #16
   4e300:	cmp	r0, r1, lsl #15
   4e304:	adc	r2, r2, r2
   4e308:	subcs	r0, r0, r1, lsl #15
   4e30c:	cmp	r0, r1, lsl #14
   4e310:	adc	r2, r2, r2
   4e314:	subcs	r0, r0, r1, lsl #14
   4e318:	cmp	r0, r1, lsl #13
   4e31c:	adc	r2, r2, r2
   4e320:	subcs	r0, r0, r1, lsl #13
   4e324:	cmp	r0, r1, lsl #12
   4e328:	adc	r2, r2, r2
   4e32c:	subcs	r0, r0, r1, lsl #12
   4e330:	cmp	r0, r1, lsl #11
   4e334:	adc	r2, r2, r2
   4e338:	subcs	r0, r0, r1, lsl #11
   4e33c:	cmp	r0, r1, lsl #10
   4e340:	adc	r2, r2, r2
   4e344:	subcs	r0, r0, r1, lsl #10
   4e348:	cmp	r0, r1, lsl #9
   4e34c:	adc	r2, r2, r2
   4e350:	subcs	r0, r0, r1, lsl #9
   4e354:	cmp	r0, r1, lsl #8
   4e358:	adc	r2, r2, r2
   4e35c:	subcs	r0, r0, r1, lsl #8
   4e360:	cmp	r0, r1, lsl #7
   4e364:	adc	r2, r2, r2
   4e368:	subcs	r0, r0, r1, lsl #7
   4e36c:	cmp	r0, r1, lsl #6
   4e370:	adc	r2, r2, r2
   4e374:	subcs	r0, r0, r1, lsl #6
   4e378:	cmp	r0, r1, lsl #5
   4e37c:	adc	r2, r2, r2
   4e380:	subcs	r0, r0, r1, lsl #5
   4e384:	cmp	r0, r1, lsl #4
   4e388:	adc	r2, r2, r2
   4e38c:	subcs	r0, r0, r1, lsl #4
   4e390:	cmp	r0, r1, lsl #3
   4e394:	adc	r2, r2, r2
   4e398:	subcs	r0, r0, r1, lsl #3
   4e39c:	cmp	r0, r1, lsl #2
   4e3a0:	adc	r2, r2, r2
   4e3a4:	subcs	r0, r0, r1, lsl #2
   4e3a8:	cmp	r0, r1, lsl #1
   4e3ac:	adc	r2, r2, r2
   4e3b0:	subcs	r0, r0, r1, lsl #1
   4e3b4:	cmp	r0, r1
   4e3b8:	adc	r2, r2, r2
   4e3bc:	subcs	r0, r0, r1
   4e3c0:	mov	r0, r2
   4e3c4:	bx	lr
   4e3c8:	moveq	r0, #1
   4e3cc:	movne	r0, #0
   4e3d0:	bx	lr
   4e3d4:	clz	r2, r1
   4e3d8:	rsb	r2, r2, #31
   4e3dc:	lsr	r0, r0, r2
   4e3e0:	bx	lr
   4e3e4:	cmp	r0, #0
   4e3e8:	mvnne	r0, #0
   4e3ec:	b	4e650 <formatAddress@@Base+0x6a4>
   4e3f0:	cmp	r1, #0
   4e3f4:	beq	4e3e4 <formatAddress@@Base+0x438>
   4e3f8:	push	{r0, r1, lr}
   4e3fc:	bl	4e204 <formatAddress@@Base+0x258>
   4e400:	pop	{r1, r2, lr}
   4e404:	mul	r3, r2, r0
   4e408:	sub	r1, r1, r3
   4e40c:	bx	lr
   4e410:	cmp	r1, #0
   4e414:	beq	4e620 <formatAddress@@Base+0x674>
   4e418:	eor	ip, r0, r1
   4e41c:	rsbmi	r1, r1, #0
   4e420:	subs	r2, r1, #1
   4e424:	beq	4e5ec <formatAddress@@Base+0x640>
   4e428:	movs	r3, r0
   4e42c:	rsbmi	r3, r0, #0
   4e430:	cmp	r3, r1
   4e434:	bls	4e5f8 <formatAddress@@Base+0x64c>
   4e438:	tst	r1, r2
   4e43c:	beq	4e608 <formatAddress@@Base+0x65c>
   4e440:	clz	r2, r3
   4e444:	clz	r0, r1
   4e448:	sub	r2, r0, r2
   4e44c:	rsbs	r2, r2, #31
   4e450:	addne	r2, r2, r2, lsl #1
   4e454:	mov	r0, #0
   4e458:	addne	pc, pc, r2, lsl #2
   4e45c:	nop	{0}
   4e460:	cmp	r3, r1, lsl #31
   4e464:	adc	r0, r0, r0
   4e468:	subcs	r3, r3, r1, lsl #31
   4e46c:	cmp	r3, r1, lsl #30
   4e470:	adc	r0, r0, r0
   4e474:	subcs	r3, r3, r1, lsl #30
   4e478:	cmp	r3, r1, lsl #29
   4e47c:	adc	r0, r0, r0
   4e480:	subcs	r3, r3, r1, lsl #29
   4e484:	cmp	r3, r1, lsl #28
   4e488:	adc	r0, r0, r0
   4e48c:	subcs	r3, r3, r1, lsl #28
   4e490:	cmp	r3, r1, lsl #27
   4e494:	adc	r0, r0, r0
   4e498:	subcs	r3, r3, r1, lsl #27
   4e49c:	cmp	r3, r1, lsl #26
   4e4a0:	adc	r0, r0, r0
   4e4a4:	subcs	r3, r3, r1, lsl #26
   4e4a8:	cmp	r3, r1, lsl #25
   4e4ac:	adc	r0, r0, r0
   4e4b0:	subcs	r3, r3, r1, lsl #25
   4e4b4:	cmp	r3, r1, lsl #24
   4e4b8:	adc	r0, r0, r0
   4e4bc:	subcs	r3, r3, r1, lsl #24
   4e4c0:	cmp	r3, r1, lsl #23
   4e4c4:	adc	r0, r0, r0
   4e4c8:	subcs	r3, r3, r1, lsl #23
   4e4cc:	cmp	r3, r1, lsl #22
   4e4d0:	adc	r0, r0, r0
   4e4d4:	subcs	r3, r3, r1, lsl #22
   4e4d8:	cmp	r3, r1, lsl #21
   4e4dc:	adc	r0, r0, r0
   4e4e0:	subcs	r3, r3, r1, lsl #21
   4e4e4:	cmp	r3, r1, lsl #20
   4e4e8:	adc	r0, r0, r0
   4e4ec:	subcs	r3, r3, r1, lsl #20
   4e4f0:	cmp	r3, r1, lsl #19
   4e4f4:	adc	r0, r0, r0
   4e4f8:	subcs	r3, r3, r1, lsl #19
   4e4fc:	cmp	r3, r1, lsl #18
   4e500:	adc	r0, r0, r0
   4e504:	subcs	r3, r3, r1, lsl #18
   4e508:	cmp	r3, r1, lsl #17
   4e50c:	adc	r0, r0, r0
   4e510:	subcs	r3, r3, r1, lsl #17
   4e514:	cmp	r3, r1, lsl #16
   4e518:	adc	r0, r0, r0
   4e51c:	subcs	r3, r3, r1, lsl #16
   4e520:	cmp	r3, r1, lsl #15
   4e524:	adc	r0, r0, r0
   4e528:	subcs	r3, r3, r1, lsl #15
   4e52c:	cmp	r3, r1, lsl #14
   4e530:	adc	r0, r0, r0
   4e534:	subcs	r3, r3, r1, lsl #14
   4e538:	cmp	r3, r1, lsl #13
   4e53c:	adc	r0, r0, r0
   4e540:	subcs	r3, r3, r1, lsl #13
   4e544:	cmp	r3, r1, lsl #12
   4e548:	adc	r0, r0, r0
   4e54c:	subcs	r3, r3, r1, lsl #12
   4e550:	cmp	r3, r1, lsl #11
   4e554:	adc	r0, r0, r0
   4e558:	subcs	r3, r3, r1, lsl #11
   4e55c:	cmp	r3, r1, lsl #10
   4e560:	adc	r0, r0, r0
   4e564:	subcs	r3, r3, r1, lsl #10
   4e568:	cmp	r3, r1, lsl #9
   4e56c:	adc	r0, r0, r0
   4e570:	subcs	r3, r3, r1, lsl #9
   4e574:	cmp	r3, r1, lsl #8
   4e578:	adc	r0, r0, r0
   4e57c:	subcs	r3, r3, r1, lsl #8
   4e580:	cmp	r3, r1, lsl #7
   4e584:	adc	r0, r0, r0
   4e588:	subcs	r3, r3, r1, lsl #7
   4e58c:	cmp	r3, r1, lsl #6
   4e590:	adc	r0, r0, r0
   4e594:	subcs	r3, r3, r1, lsl #6
   4e598:	cmp	r3, r1, lsl #5
   4e59c:	adc	r0, r0, r0
   4e5a0:	subcs	r3, r3, r1, lsl #5
   4e5a4:	cmp	r3, r1, lsl #4
   4e5a8:	adc	r0, r0, r0
   4e5ac:	subcs	r3, r3, r1, lsl #4
   4e5b0:	cmp	r3, r1, lsl #3
   4e5b4:	adc	r0, r0, r0
   4e5b8:	subcs	r3, r3, r1, lsl #3
   4e5bc:	cmp	r3, r1, lsl #2
   4e5c0:	adc	r0, r0, r0
   4e5c4:	subcs	r3, r3, r1, lsl #2
   4e5c8:	cmp	r3, r1, lsl #1
   4e5cc:	adc	r0, r0, r0
   4e5d0:	subcs	r3, r3, r1, lsl #1
   4e5d4:	cmp	r3, r1
   4e5d8:	adc	r0, r0, r0
   4e5dc:	subcs	r3, r3, r1
   4e5e0:	cmp	ip, #0
   4e5e4:	rsbmi	r0, r0, #0
   4e5e8:	bx	lr
   4e5ec:	teq	ip, r0
   4e5f0:	rsbmi	r0, r0, #0
   4e5f4:	bx	lr
   4e5f8:	movcc	r0, #0
   4e5fc:	asreq	r0, ip, #31
   4e600:	orreq	r0, r0, #1
   4e604:	bx	lr
   4e608:	clz	r2, r1
   4e60c:	rsb	r2, r2, #31
   4e610:	cmp	ip, #0
   4e614:	lsr	r0, r3, r2
   4e618:	rsbmi	r0, r0, #0
   4e61c:	bx	lr
   4e620:	cmp	r0, #0
   4e624:	mvngt	r0, #-2147483648	; 0x80000000
   4e628:	movlt	r0, #-2147483648	; 0x80000000
   4e62c:	b	4e650 <formatAddress@@Base+0x6a4>
   4e630:	cmp	r1, #0
   4e634:	beq	4e620 <formatAddress@@Base+0x674>
   4e638:	push	{r0, r1, lr}
   4e63c:	bl	4e418 <formatAddress@@Base+0x46c>
   4e640:	pop	{r1, r2, lr}
   4e644:	mul	r3, r2, r0
   4e648:	sub	r1, r1, r3
   4e64c:	bx	lr
   4e650:	push	{r1, lr}
   4e654:	mov	r0, #8
   4e658:	bl	fa58 <raise@plt>
   4e65c:	pop	{r1, pc}

0004e660 <__libc_csu_init@@Base>:
   4e660:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   4e664:	mov	r7, r0
   4e668:	ldr	r6, [pc, #76]	; 4e6bc <__libc_csu_init@@Base+0x5c>
   4e66c:	mov	r8, r1
   4e670:	ldr	r5, [pc, #72]	; 4e6c0 <__libc_csu_init@@Base+0x60>
   4e674:	mov	r9, r2
   4e678:	add	r6, pc, r6
   4e67c:	bl	f3c0 <_init@@Base>
   4e680:	add	r5, pc, r5
   4e684:	rsb	r6, r5, r6
   4e688:	asrs	r6, r6, #2
   4e68c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   4e690:	sub	r5, r5, #4
   4e694:	mov	r4, #0
   4e698:	add	r4, r4, #1
   4e69c:	ldr	r3, [r5, #4]!
   4e6a0:	mov	r0, r7
   4e6a4:	mov	r1, r8
   4e6a8:	mov	r2, r9
   4e6ac:	blx	r3
   4e6b0:	cmp	r4, r6
   4e6b4:	bne	4e698 <__libc_csu_init@@Base+0x38>
   4e6b8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   4e6bc:	andeq	r0, r2, r0, lsl #30
   4e6c0:	strdeq	r0, [r2], -r4

0004e6c4 <__libc_csu_fini@@Base>:
   4e6c4:	bx	lr
   4e6c8:	ldr	r3, [pc, #28]	; 4e6ec <__libc_csu_fini@@Base+0x28>
   4e6cc:	mov	r1, #0
   4e6d0:	ldr	r2, [pc, #24]	; 4e6f0 <__libc_csu_fini@@Base+0x2c>
   4e6d4:	add	r3, pc, r3
   4e6d8:	ldr	r3, [r3, r2]
   4e6dc:	cmp	r3, #0
   4e6e0:	ldrne	r2, [r3]
   4e6e4:	moveq	r2, r3
   4e6e8:	b	f9ec <__cxa_atexit@plt>
   4e6ec:	andeq	r4, r2, r4, lsr #7
   4e6f0:	strdeq	r0, [r0], -r8

Disassembly of section .fini:

0004e6f4 <_fini@@Base>:
   4e6f4:	push	{r3, lr}
   4e6f8:	pop	{r3, pc}
