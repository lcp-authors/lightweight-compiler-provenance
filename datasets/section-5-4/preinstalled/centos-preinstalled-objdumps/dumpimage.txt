
centos-preinstalled/dumpimage:     file format elf32-littlearm


Disassembly of section .init:

0001206c <_init@@Base>:
   1206c:	push	{r3, lr}
   12070:	bl	12cf8 <__printf_chk@plt+0x564>
   12074:	pop	{r3, pc}

Disassembly of section .plt:

00012078 <ERR_error_string@plt-0x14>:
   12078:	push	{lr}		; (str lr, [sp, #-4]!)
   1207c:	ldr	lr, [pc, #4]	; 12088 <_init@@Base+0x1c>
   12080:	add	lr, pc, lr
   12084:	ldr	pc, [lr, #8]!
   12088:	andeq	ip, r3, r8, ror pc

0001208c <ERR_error_string@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #60, 20	; 0x3c000
   12094:	ldr	pc, [ip, #3960]!	; 0xf78

00012098 <fscanf@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #60, 20	; 0x3c000
   120a0:	ldr	pc, [ip, #3952]!	; 0xf70

000120a4 <EVP_DigestInit@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #60, 20	; 0x3c000
   120ac:	ldr	pc, [ip, #3944]!	; 0xf68

000120b0 <ftruncate@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #60, 20	; 0x3c000
   120b8:	ldr	pc, [ip, #3936]!	; 0xf60

000120bc <ENGINE_load_private_key@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #60, 20	; 0x3c000
   120c4:	ldr	pc, [ip, #3928]!	; 0xf58

000120c8 <popen@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #60, 20	; 0x3c000
   120d0:	ldr	pc, [ip, #3920]!	; 0xf50

000120d4 <EVP_PKEY_free@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #60, 20	; 0x3c000
   120dc:	ldr	pc, [ip, #3912]!	; 0xf48

000120e0 <PEM_read_X509@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #60, 20	; 0x3c000
   120e8:	ldr	pc, [ip, #3904]!	; 0xf40

000120ec <EVP_CipherInit@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #60, 20	; 0x3c000
   120f4:	ldr	pc, [ip, #3896]!	; 0xf38

000120f8 <OPENSSL_add_all_algorithms_noconf@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #60, 20	; 0x3c000
   12100:	ldr	pc, [ip, #3888]!	; 0xf30

00012104 <strcasecmp@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #60, 20	; 0x3c000
   1210c:	ldr	pc, [ip, #3880]!	; 0xf28

00012110 <strnlen@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #60, 20	; 0x3c000
   12118:	ldr	pc, [ip, #3872]!	; 0xf20

0001211c <EVP_CipherUpdate@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #60, 20	; 0x3c000
   12124:	ldr	pc, [ip, #3864]!	; 0xf18

00012128 <ENGINE_finish@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #60, 20	; 0x3c000
   12130:	ldr	pc, [ip, #3856]!	; 0xf10

00012134 <ENGINE_load_public_key@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #60, 20	; 0x3c000
   1213c:	ldr	pc, [ip, #3848]!	; 0xf08

00012140 <strtol@plt>:
   12140:	add	ip, pc, #0, 12
   12144:	add	ip, ip, #60, 20	; 0x3c000
   12148:	ldr	pc, [ip, #3840]!	; 0xf00

0001214c <free@plt>:
   1214c:	add	ip, pc, #0, 12
   12150:	add	ip, ip, #60, 20	; 0x3c000
   12154:	ldr	pc, [ip, #3832]!	; 0xef8

00012158 <__getdelim@plt>:
   12158:	add	ip, pc, #0, 12
   1215c:	add	ip, ip, #60, 20	; 0x3c000
   12160:	ldr	pc, [ip, #3824]!	; 0xef0

00012164 <SSL_load_error_strings@plt>:
   12164:	add	ip, pc, #0, 12
   12168:	add	ip, ip, #60, 20	; 0x3c000
   1216c:	ldr	pc, [ip, #3816]!	; 0xee8

00012170 <EVP_aes_128_cbc@plt>:
   12170:	add	ip, pc, #0, 12
   12174:	add	ip, ip, #60, 20	; 0x3c000
   12178:	ldr	pc, [ip, #3808]!	; 0xee0

0001217c <fseek@plt>:
   1217c:	add	ip, pc, #0, 12
   12180:	add	ip, ip, #60, 20	; 0x3c000
   12184:	ldr	pc, [ip, #3800]!	; 0xed8

00012188 <BN_dup@plt>:
   12188:	add	ip, pc, #0, 12
   1218c:	add	ip, ip, #60, 20	; 0x3c000
   12190:	ldr	pc, [ip, #3792]!	; 0xed0

00012194 <ENGINE_get_id@plt>:
   12194:	add	ip, pc, #0, 12
   12198:	add	ip, ip, #60, 20	; 0x3c000
   1219c:	ldr	pc, [ip, #3784]!	; 0xec8

000121a0 <strncmp@plt>:
   121a0:	add	ip, pc, #0, 12
   121a4:	add	ip, ip, #60, 20	; 0x3c000
   121a8:	ldr	pc, [ip, #3776]!	; 0xec0

000121ac <__open_2@plt>:
   121ac:	add	ip, pc, #0, 12
   121b0:	add	ip, ip, #60, 20	; 0x3c000
   121b4:	ldr	pc, [ip, #3768]!	; 0xeb8

000121b8 <EVP_PKEY_CTX_ctrl@plt>:
   121b8:	add	ip, pc, #0, 12
   121bc:	add	ip, ip, #60, 20	; 0x3c000
   121c0:	ldr	pc, [ip, #3760]!	; 0xeb0

000121c4 <ENGINE_free@plt>:
   121c4:	add	ip, pc, #0, 12
   121c8:	add	ip, ip, #60, 20	; 0x3c000
   121cc:	ldr	pc, [ip, #3752]!	; 0xea8

000121d0 <fgetc@plt>:
   121d0:	add	ip, pc, #0, 12
   121d4:	add	ip, ip, #60, 20	; 0x3c000
   121d8:	ldr	pc, [ip, #3744]!	; 0xea0

000121dc <EVP_PKEY_CTX_new@plt>:
   121dc:	add	ip, pc, #0, 12
   121e0:	add	ip, ip, #60, 20	; 0x3c000
   121e4:	ldr	pc, [ip, #3736]!	; 0xe98

000121e8 <EVP_PKEY_size@plt>:
   121e8:	add	ip, pc, #0, 12
   121ec:	add	ip, ip, #60, 20	; 0x3c000
   121f0:	ldr	pc, [ip, #3728]!	; 0xe90

000121f4 <ERR_remove_thread_state@plt>:
   121f4:	add	ip, pc, #0, 12
   121f8:	add	ip, ip, #60, 20	; 0x3c000
   121fc:	ldr	pc, [ip, #3720]!	; 0xe88

00012200 <OpenSSL_add_all_digests@plt>:
   12200:	add	ip, pc, #0, 12
   12204:	add	ip, ip, #60, 20	; 0x3c000
   12208:	ldr	pc, [ip, #3712]!	; 0xe80

0001220c <PEM_read_RSAPrivateKey@plt>:
   1220c:	add	ip, pc, #0, 12
   12210:	add	ip, ip, #60, 20	; 0x3c000
   12214:	ldr	pc, [ip, #3704]!	; 0xe78

00012218 <exit@plt>:
   12218:	add	ip, pc, #0, 12
   1221c:	add	ip, ip, #60, 20	; 0x3c000
   12220:	ldr	pc, [ip, #3696]!	; 0xe70

00012224 <strerror@plt>:
   12224:	add	ip, pc, #0, 12
   12228:	add	ip, ip, #60, 20	; 0x3c000
   1222c:	ldr	pc, [ip, #3688]!	; 0xe68

00012230 <EVP_sha1@plt>:
   12230:	add	ip, pc, #0, 12
   12234:	add	ip, ip, #60, 20	; 0x3c000
   12238:	ldr	pc, [ip, #3680]!	; 0xe60

0001223c <EVP_DigestSignFinal@plt>:
   1223c:	add	ip, pc, #0, 12
   12240:	add	ip, ip, #60, 20	; 0x3c000
   12244:	ldr	pc, [ip, #3672]!	; 0xe58

00012248 <__strtok_r@plt>:
   12248:	add	ip, pc, #0, 12
   1224c:	add	ip, ip, #60, 20	; 0x3c000
   12250:	ldr	pc, [ip, #3664]!	; 0xe50

00012254 <__vsnprintf_chk@plt>:
   12254:	add	ip, pc, #0, 12
   12258:	add	ip, ip, #60, 20	; 0x3c000
   1225c:	ldr	pc, [ip, #3656]!	; 0xe48

00012260 <ENGINE_init@plt>:
   12260:	add	ip, pc, #0, 12
   12264:	add	ip, ip, #60, 20	; 0x3c000
   12268:	ldr	pc, [ip, #3648]!	; 0xe40

0001226c <BN_free@plt>:
   1226c:	add	ip, pc, #0, 12
   12270:	add	ip, ip, #60, 20	; 0x3c000
   12274:	ldr	pc, [ip, #3640]!	; 0xe38

00012278 <ENGINE_cleanup@plt>:
   12278:	add	ip, pc, #0, 12
   1227c:	add	ip, ip, #60, 20	; 0x3c000
   12280:	ldr	pc, [ip, #3632]!	; 0xe30

00012284 <feof@plt>:
   12284:	add	ip, pc, #0, 12
   12288:	add	ip, ip, #60, 20	; 0x3c000
   1228c:	ldr	pc, [ip, #3624]!	; 0xe28

00012290 <puts@plt>:
   12290:	add	ip, pc, #0, 12
   12294:	add	ip, ip, #60, 20	; 0x3c000
   12298:	ldr	pc, [ip, #3616]!	; 0xe20

0001229c <strtok@plt>:
   1229c:	add	ip, pc, #0, 12
   122a0:	add	ip, ip, #60, 20	; 0x3c000
   122a4:	ldr	pc, [ip, #3608]!	; 0xe18

000122a8 <perror@plt>:
   122a8:	add	ip, pc, #0, 12
   122ac:	add	ip, ip, #60, 20	; 0x3c000
   122b0:	ldr	pc, [ip, #3600]!	; 0xe10

000122b4 <strtoll@plt>:
   122b4:	add	ip, pc, #0, 12
   122b8:	add	ip, ip, #60, 20	; 0x3c000
   122bc:	ldr	pc, [ip, #3592]!	; 0xe08

000122c0 <EVP_PKEY_get1_RSA@plt>:
   122c0:	add	ip, pc, #0, 12
   122c4:	add	ip, ip, #60, 20	; 0x3c000
   122c8:	ldr	pc, [ip, #3584]!	; 0xe00

000122cc <EVP_sha256@plt>:
   122cc:	add	ip, pc, #0, 12
   122d0:	add	ip, ip, #60, 20	; 0x3c000
   122d4:	ldr	pc, [ip, #3576]!	; 0xdf8

000122d8 <__fprintf_chk@plt>:
   122d8:	add	ip, pc, #0, 12
   122dc:	add	ip, ip, #60, 20	; 0x3c000
   122e0:	ldr	pc, [ip, #3568]!	; 0xdf0

000122e4 <CRYPTO_malloc@plt>:
   122e4:	add	ip, pc, #0, 12
   122e8:	add	ip, ip, #60, 20	; 0x3c000
   122ec:	ldr	pc, [ip, #3560]!	; 0xde8

000122f0 <strtoul@plt>:
   122f0:	add	ip, pc, #0, 12
   122f4:	add	ip, ip, #60, 20	; 0x3c000
   122f8:	ldr	pc, [ip, #3552]!	; 0xde0

000122fc <putchar@plt>:
   122fc:	add	ip, pc, #0, 12
   12300:	add	ip, ip, #60, 20	; 0x3c000
   12304:	ldr	pc, [ip, #3544]!	; 0xdd8

00012308 <memset@plt>:
   12308:	add	ip, pc, #0, 12
   1230c:	add	ip, ip, #60, 20	; 0x3c000
   12310:	ldr	pc, [ip, #3536]!	; 0xdd0

00012314 <EVP_MD_CTX_create@plt>:
   12314:	add	ip, pc, #0, 12
   12318:	add	ip, ip, #60, 20	; 0x3c000
   1231c:	ldr	pc, [ip, #3528]!	; 0xdc8

00012320 <snprintf@plt>:
   12320:	add	ip, pc, #0, 12
   12324:	add	ip, ip, #60, 20	; 0x3c000
   12328:	ldr	pc, [ip, #3520]!	; 0xdc0

0001232c <__strdup@plt>:
   1232c:	add	ip, pc, #0, 12
   12330:	add	ip, ip, #60, 20	; 0x3c000
   12334:	ldr	pc, [ip, #3512]!	; 0xdb8

00012338 <close@plt>:
   12338:	add	ip, pc, #0, 12
   1233c:	add	ip, ip, #60, 20	; 0x3c000
   12340:	ldr	pc, [ip, #3504]!	; 0xdb0

00012344 <gmtime@plt>:
   12344:	add	ip, pc, #0, 12
   12348:	add	ip, ip, #60, 20	; 0x3c000
   1234c:	ldr	pc, [ip, #3496]!	; 0xda8

00012350 <fopen@plt>:
   12350:	add	ip, pc, #0, 12
   12354:	add	ip, ip, #60, 20	; 0x3c000
   12358:	ldr	pc, [ip, #3488]!	; 0xda0

0001235c <ENGINE_set_default_RSA@plt>:
   1235c:	add	ip, pc, #0, 12
   12360:	add	ip, ip, #60, 20	; 0x3c000
   12364:	ldr	pc, [ip, #3480]!	; 0xd98

00012368 <read@plt>:
   12368:	add	ip, pc, #0, 12
   1236c:	add	ip, ip, #60, 20	; 0x3c000
   12370:	ldr	pc, [ip, #3472]!	; 0xd90

00012374 <BN_sub@plt>:
   12374:	add	ip, pc, #0, 12
   12378:	add	ip, ip, #60, 20	; 0x3c000
   1237c:	ldr	pc, [ip, #3464]!	; 0xd88

00012380 <abort@plt>:
   12380:	add	ip, pc, #0, 12
   12384:	add	ip, ip, #60, 20	; 0x3c000
   12388:	ldr	pc, [ip, #3456]!	; 0xd80

0001238c <ENGINE_by_id@plt>:
   1238c:	add	ip, pc, #0, 12
   12390:	add	ip, ip, #60, 20	; 0x3c000
   12394:	ldr	pc, [ip, #3448]!	; 0xd78

00012398 <BN_div@plt>:
   12398:	add	ip, pc, #0, 12
   1239c:	add	ip, ip, #60, 20	; 0x3c000
   123a0:	ldr	pc, [ip, #3440]!	; 0xd70

000123a4 <memmove@plt>:
   123a4:	add	ip, pc, #0, 12
   123a8:	add	ip, ip, #60, 20	; 0x3c000
   123ac:	ldr	pc, [ip, #3432]!	; 0xd68

000123b0 <ctime@plt>:
   123b0:	add	ip, pc, #0, 12
   123b4:	add	ip, ip, #60, 20	; 0x3c000
   123b8:	ldr	pc, [ip, #3424]!	; 0xd60

000123bc <BN_CTX_new@plt>:
   123bc:	add	ip, pc, #0, 12
   123c0:	add	ip, ip, #60, 20	; 0x3c000
   123c4:	ldr	pc, [ip, #3416]!	; 0xd58

000123c8 <unlink@plt>:
   123c8:	add	ip, pc, #0, 12
   123cc:	add	ip, ip, #60, 20	; 0x3c000
   123d0:	ldr	pc, [ip, #3408]!	; 0xd50

000123d4 <CRYPTO_cleanup_all_ex_data@plt>:
   123d4:	add	ip, pc, #0, 12
   123d8:	add	ip, ip, #60, 20	; 0x3c000
   123dc:	ldr	pc, [ip, #3400]!	; 0xd48

000123e0 <gmtime_r@plt>:
   123e0:	add	ip, pc, #0, 12
   123e4:	add	ip, ip, #60, 20	; 0x3c000
   123e8:	ldr	pc, [ip, #3392]!	; 0xd40

000123ec <system@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #60, 20	; 0x3c000
   123f4:	ldr	pc, [ip, #3384]!	; 0xd38

000123f8 <realloc@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #60, 20	; 0x3c000
   12400:	ldr	pc, [ip, #3376]!	; 0xd30

00012404 <strcpy@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #60, 20	; 0x3c000
   1240c:	ldr	pc, [ip, #3368]!	; 0xd28

00012410 <mmap@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #60, 20	; 0x3c000
   12418:	ldr	pc, [ip, #3360]!	; 0xd20

0001241c <EVP_CIPHER_CTX_cleanup@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #60, 20	; 0x3c000
   12424:	ldr	pc, [ip, #3352]!	; 0xd18

00012428 <__strncat_chk@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #60, 20	; 0x3c000
   12430:	ldr	pc, [ip, #3344]!	; 0xd10

00012434 <getopt@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #60, 20	; 0x3c000
   1243c:	ldr	pc, [ip, #3336]!	; 0xd08

00012440 <BN_mod_inverse@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #60, 20	; 0x3c000
   12448:	ldr	pc, [ip, #3328]!	; 0xd00

0001244c <BN_exp@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #60, 20	; 0x3c000
   12454:	ldr	pc, [ip, #3320]!	; 0xcf8

00012458 <open@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #60, 20	; 0x3c000
   12460:	ldr	pc, [ip, #3312]!	; 0xcf0

00012464 <RSA_free@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #60, 20	; 0x3c000
   1246c:	ldr	pc, [ip, #3304]!	; 0xce8

00012470 <rewind@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #60, 20	; 0x3c000
   12478:	ldr	pc, [ip, #3296]!	; 0xce0

0001247c <ERR_free_strings@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #60, 20	; 0x3c000
   12484:	ldr	pc, [ip, #3288]!	; 0xcd8

00012488 <fread@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #60, 20	; 0x3c000
   12490:	ldr	pc, [ip, #3280]!	; 0xcd0

00012494 <EVP_PKEY_new@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #60, 20	; 0x3c000
   1249c:	ldr	pc, [ip, #3272]!	; 0xcc8

000124a0 <EVP_MD_CTX_destroy@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #60, 20	; 0x3c000
   124a8:	ldr	pc, [ip, #3264]!	; 0xcc0

000124ac <fileno@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #60, 20	; 0x3c000
   124b4:	ldr	pc, [ip, #3256]!	; 0xcb8

000124b8 <__stack_chk_fail@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #60, 20	; 0x3c000
   124c0:	ldr	pc, [ip, #3248]!	; 0xcb0

000124c4 <SSL_library_init@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #60, 20	; 0x3c000
   124cc:	ldr	pc, [ip, #3240]!	; 0xca8

000124d0 <BN_set_word@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #60, 20	; 0x3c000
   124d8:	ldr	pc, [ip, #3232]!	; 0xca0

000124dc <CRYPTO_free@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #60, 20	; 0x3c000
   124e4:	ldr	pc, [ip, #3224]!	; 0xc98

000124e8 <EVP_MD_CTX_cleanup@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #60, 20	; 0x3c000
   124f0:	ldr	pc, [ip, #3216]!	; 0xc90

000124f4 <ERR_get_error@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #60, 20	; 0x3c000
   124fc:	ldr	pc, [ip, #3208]!	; 0xc88

00012500 <pclose@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #60, 20	; 0x3c000
   12508:	ldr	pc, [ip, #3200]!	; 0xc80

0001250c <BN_get_word@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #60, 20	; 0x3c000
   12514:	ldr	pc, [ip, #3192]!	; 0xc78

00012518 <lseek@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #60, 20	; 0x3c000
   12520:	ldr	pc, [ip, #3184]!	; 0xc70

00012524 <raise@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #60, 20	; 0x3c000
   1252c:	ldr	pc, [ip, #3176]!	; 0xc68

00012530 <X509_free@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #60, 20	; 0x3c000
   12538:	ldr	pc, [ip, #3168]!	; 0xc60

0001253c <calloc@plt>:
   1253c:	add	ip, pc, #0, 12
   12540:	add	ip, ip, #60, 20	; 0x3c000
   12544:	ldr	pc, [ip, #3160]!	; 0xc58

00012548 <ftell@plt>:
   12548:	add	ip, pc, #0, 12
   1254c:	add	ip, ip, #60, 20	; 0x3c000
   12550:	ldr	pc, [ip, #3152]!	; 0xc50

00012554 <__vfprintf_chk@plt>:
   12554:	add	ip, pc, #0, 12
   12558:	add	ip, ip, #60, 20	; 0x3c000
   1255c:	ldr	pc, [ip, #3144]!	; 0xc48

00012560 <EVP_DigestFinal@plt>:
   12560:	add	ip, pc, #0, 12
   12564:	add	ip, ip, #60, 20	; 0x3c000
   12568:	ldr	pc, [ip, #3136]!	; 0xc40

0001256c <fgets@plt>:
   1256c:	add	ip, pc, #0, 12
   12570:	add	ip, ip, #60, 20	; 0x3c000
   12574:	ldr	pc, [ip, #3128]!	; 0xc38

00012578 <__fxstat@plt>:
   12578:	add	ip, pc, #0, 12
   1257c:	add	ip, ip, #60, 20	; 0x3c000
   12580:	ldr	pc, [ip, #3120]!	; 0xc30

00012584 <EVP_PKEY_set1_RSA@plt>:
   12584:	add	ip, pc, #0, 12
   12588:	add	ip, ip, #60, 20	; 0x3c000
   1258c:	ldr	pc, [ip, #3112]!	; 0xc28

00012590 <fputc@plt>:
   12590:	add	ip, pc, #0, 12
   12594:	add	ip, ip, #60, 20	; 0x3c000
   12598:	ldr	pc, [ip, #3104]!	; 0xc20

0001259c <fwrite@plt>:
   1259c:	add	ip, pc, #0, 12
   125a0:	add	ip, ip, #60, 20	; 0x3c000
   125a4:	ldr	pc, [ip, #3096]!	; 0xc18

000125a8 <BN_num_bits@plt>:
   125a8:	add	ip, pc, #0, 12
   125ac:	add	ip, ip, #60, 20	; 0x3c000
   125b0:	ldr	pc, [ip, #3088]!	; 0xc10

000125b4 <EVP_CIPHER_CTX_new@plt>:
   125b4:	add	ip, pc, #0, 12
   125b8:	add	ip, ip, #60, 20	; 0x3c000
   125bc:	ldr	pc, [ip, #3080]!	; 0xc08

000125c0 <memcpy@plt>:
   125c0:	add	ip, pc, #0, 12
   125c4:	add	ip, ip, #60, 20	; 0x3c000
   125c8:	ldr	pc, [ip, #3072]!	; 0xc00

000125cc <malloc@plt>:
   125cc:	add	ip, pc, #0, 12
   125d0:	add	ip, ip, #60, 20	; 0x3c000
   125d4:	ldr	pc, [ip, #3064]!	; 0xbf8

000125d8 <EVP_CIPHER_CTX_set_padding@plt>:
   125d8:	add	ip, pc, #0, 12
   125dc:	add	ip, ip, #60, 20	; 0x3c000
   125e0:	ldr	pc, [ip, #3056]!	; 0xbf0

000125e4 <strlen@plt>:
   125e4:	add	ip, pc, #0, 12
   125e8:	add	ip, ip, #60, 20	; 0x3c000
   125ec:	ldr	pc, [ip, #3048]!	; 0xbe8

000125f0 <__snprintf_chk@plt>:
   125f0:	add	ip, pc, #0, 12
   125f4:	add	ip, ip, #60, 20	; 0x3c000
   125f8:	ldr	pc, [ip, #3040]!	; 0xbe0

000125fc <getcwd@plt>:
   125fc:	add	ip, pc, #0, 12
   12600:	add	ip, ip, #60, 20	; 0x3c000
   12604:	ldr	pc, [ip, #3032]!	; 0xbd8

00012608 <munmap@plt>:
   12608:	add	ip, pc, #0, 12
   1260c:	add	ip, ip, #60, 20	; 0x3c000
   12610:	ldr	pc, [ip, #3024]!	; 0xbd0

00012614 <__memset_chk@plt>:
   12614:	add	ip, pc, #0, 12
   12618:	add	ip, ip, #60, 20	; 0x3c000
   1261c:	ldr	pc, [ip, #3016]!	; 0xbc8

00012620 <fclose@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #60, 20	; 0x3c000
   12628:	ldr	pc, [ip, #3008]!	; 0xbc0

0001262c <write@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #60, 20	; 0x3c000
   12634:	ldr	pc, [ip, #3000]!	; 0xbb8

00012638 <EVP_DigestSignInit@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #60, 20	; 0x3c000
   12640:	ldr	pc, [ip, #2992]!	; 0xbb0

00012644 <__xstat@plt>:
   12644:	add	ip, pc, #0, 12
   12648:	add	ip, ip, #60, 20	; 0x3c000
   1264c:	ldr	pc, [ip, #2984]!	; 0xba8

00012650 <BN_mul@plt>:
   12650:	add	ip, pc, #0, 12
   12654:	add	ip, ip, #60, 20	; 0x3c000
   12658:	ldr	pc, [ip, #2976]!	; 0xba0

0001265c <ENGINE_load_builtin_engines@plt>:
   1265c:	add	ip, pc, #0, 12
   12660:	add	ip, ip, #60, 20	; 0x3c000
   12664:	ldr	pc, [ip, #2968]!	; 0xb98

00012668 <BN_rshift@plt>:
   12668:	add	ip, pc, #0, 12
   1266c:	add	ip, ip, #60, 20	; 0x3c000
   12670:	ldr	pc, [ip, #2960]!	; 0xb90

00012674 <EVP_DigestUpdate@plt>:
   12674:	add	ip, pc, #0, 12
   12678:	add	ip, ip, #60, 20	; 0x3c000
   1267c:	ldr	pc, [ip, #2952]!	; 0xb88

00012680 <strcmp@plt>:
   12680:	add	ip, pc, #0, 12
   12684:	add	ip, ip, #60, 20	; 0x3c000
   12688:	ldr	pc, [ip, #2944]!	; 0xb80

0001268c <BN_mask_bits@plt>:
   1268c:	add	ip, pc, #0, 12
   12690:	add	ip, ip, #60, 20	; 0x3c000
   12694:	ldr	pc, [ip, #2936]!	; 0xb78

00012698 <time@plt>:
   12698:	add	ip, pc, #0, 12
   1269c:	add	ip, ip, #60, 20	; 0x3c000
   126a0:	ldr	pc, [ip, #2928]!	; 0xb70

000126a4 <EVP_MD_CTX_init@plt>:
   126a4:	add	ip, pc, #0, 12
   126a8:	add	ip, ip, #60, 20	; 0x3c000
   126ac:	ldr	pc, [ip, #2920]!	; 0xb68

000126b0 <__errno_location@plt>:
   126b0:	add	ip, pc, #0, 12
   126b4:	add	ip, ip, #60, 20	; 0x3c000
   126b8:	ldr	pc, [ip, #2912]!	; 0xb60

000126bc <memchr@plt>:
   126bc:	add	ip, pc, #0, 12
   126c0:	add	ip, ip, #60, 20	; 0x3c000
   126c4:	ldr	pc, [ip, #2904]!	; 0xb58

000126c8 <sscanf@plt>:
   126c8:	add	ip, pc, #0, 12
   126cc:	add	ip, ip, #60, 20	; 0x3c000
   126d0:	ldr	pc, [ip, #2896]!	; 0xb50

000126d4 <X509_get_pubkey@plt>:
   126d4:	add	ip, pc, #0, 12
   126d8:	add	ip, ip, #60, 20	; 0x3c000
   126dc:	ldr	pc, [ip, #2888]!	; 0xb48

000126e0 <strncpy@plt>:
   126e0:	add	ip, pc, #0, 12
   126e4:	add	ip, ip, #60, 20	; 0x3c000
   126e8:	ldr	pc, [ip, #2880]!	; 0xb40

000126ec <memcmp@plt>:
   126ec:	add	ip, pc, #0, 12
   126f0:	add	ip, ip, #60, 20	; 0x3c000
   126f4:	ldr	pc, [ip, #2872]!	; 0xb38

000126f8 <OpenSSL_add_all_ciphers@plt>:
   126f8:	add	ip, pc, #0, 12
   126fc:	add	ip, ip, #60, 20	; 0x3c000
   12700:	ldr	pc, [ip, #2864]!	; 0xb30

00012704 <__sprintf_chk@plt>:
   12704:	add	ip, pc, #0, 12
   12708:	add	ip, ip, #60, 20	; 0x3c000
   1270c:	ldr	pc, [ip, #2856]!	; 0xb28

00012710 <strrchr@plt>:
   12710:	add	ip, pc, #0, 12
   12714:	add	ip, ip, #60, 20	; 0x3c000
   12718:	ldr	pc, [ip, #2848]!	; 0xb20

0001271c <BN_copy@plt>:
   1271c:	add	ip, pc, #0, 12
   12720:	add	ip, ip, #60, 20	; 0x3c000
   12724:	ldr	pc, [ip, #2840]!	; 0xb18

00012728 <mktime@plt>:
   12728:	add	ip, pc, #0, 12
   1272c:	add	ip, ip, #60, 20	; 0x3c000
   12730:	ldr	pc, [ip, #2832]!	; 0xb10

00012734 <fputs@plt>:
   12734:	add	ip, pc, #0, 12
   12738:	add	ip, ip, #60, 20	; 0x3c000
   1273c:	ldr	pc, [ip, #2824]!	; 0xb08

00012740 <getenv@plt>:
   12740:	add	ip, pc, #0, 12
   12744:	add	ip, ip, #60, 20	; 0x3c000
   12748:	ldr	pc, [ip, #2816]!	; 0xb00

0001274c <__libc_start_main@plt>:
   1274c:	add	ip, pc, #0, 12
   12750:	add	ip, ip, #60, 20	; 0x3c000
   12754:	ldr	pc, [ip, #2808]!	; 0xaf8

00012758 <EVP_cleanup@plt>:
   12758:	add	ip, pc, #0, 12
   1275c:	add	ip, ip, #60, 20	; 0x3c000
   12760:	ldr	pc, [ip, #2800]!	; 0xaf0

00012764 <__gmon_start__@plt>:
   12764:	add	ip, pc, #0, 12
   12768:	add	ip, ip, #60, 20	; 0x3c000
   1276c:	ldr	pc, [ip, #2792]!	; 0xae8

00012770 <rename@plt>:
   12770:	add	ip, pc, #0, 12
   12774:	add	ip, ip, #60, 20	; 0x3c000
   12778:	ldr	pc, [ip, #2784]!	; 0xae0

0001277c <BN_new@plt>:
   1277c:	add	ip, pc, #0, 12
   12780:	add	ip, ip, #60, 20	; 0x3c000
   12784:	ldr	pc, [ip, #2776]!	; 0xad8

00012788 <strchr@plt>:
   12788:	add	ip, pc, #0, 12
   1278c:	add	ip, ip, #60, 20	; 0x3c000
   12790:	ldr	pc, [ip, #2768]!	; 0xad0

00012794 <__printf_chk@plt>:
   12794:	add	ip, pc, #0, 12
   12798:	add	ip, ip, #60, 20	; 0x3c000
   1279c:	ldr	pc, [ip, #2760]!	; 0xac8

Disassembly of section .text:

000127a0 <crc32@@Base-0x72b8>:
   127a0:	movw	r1, #65196	; 0xfeac
   127a4:	movt	r1, #4
   127a8:	mov	r3, r0
   127ac:	movw	r2, #37832	; 0x93c8
   127b0:	ldr	r0, [r1]
   127b4:	movt	r2, #3
   127b8:	push	{r4, lr}
   127bc:	mov	r1, #1
   127c0:	bl	122d8 <__fprintf_chk@plt>
   127c4:	mov	r0, #1
   127c8:	bl	12218 <exit@plt>
   127cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127d0:	movw	sl, #61168	; 0xeef0
   127d4:	movt	sl, #4
   127d8:	ldr	r3, [r1]
   127dc:	sub	sp, sp, #112	; 0x70
   127e0:	movw	r5, #64940	; 0xfdac
   127e4:	ldr	r2, [sl]
   127e8:	movt	r5, #4
   127ec:	movw	r6, #57092	; 0xdf04
   127f0:	movw	r9, #65192	; 0xfea8
   127f4:	movt	r6, #3
   127f8:	movt	r9, #4
   127fc:	mov	r7, r1
   12800:	mov	r8, r0
   12804:	str	r2, [sp, #108]	; 0x6c
   12808:	str	r3, [r5, #80]	; 0x50
   1280c:	mov	r2, r6
   12810:	mov	r1, r7
   12814:	mov	r0, r8
   12818:	bl	12434 <getopt@plt>
   1281c:	cmn	r0, #1
   12820:	mov	r4, r0
   12824:	beq	1297c <__printf_chk@plt+0x1e8>
   12828:	sub	r4, r4, #84	; 0x54
   1282c:	cmp	r4, #28
   12830:	ldrls	pc, [pc, r4, lsl #2]
   12834:	b	12ae8 <__printf_chk@plt+0x354>
   12838:	andeq	r2, r1, ip, ror #17
   1283c:	andeq	r2, r1, r8, ror #21
   12840:	andeq	r2, r1, ip, asr #17
   12844:	andeq	r2, r1, r8, ror #21
   12848:	andeq	r2, r1, r8, ror #21
   1284c:	andeq	r2, r1, r8, ror #21
   12850:	andeq	r2, r1, r8, ror #21
   12854:	andeq	r2, r1, r8, ror #21
   12858:	andeq	r2, r1, r8, ror #21
   1285c:	andeq	r2, r1, r8, ror #21
   12860:	andeq	r2, r1, r8, ror #21
   12864:	andeq	r2, r1, r8, ror #21
   12868:	andeq	r2, r1, r8, ror #21
   1286c:	andeq	r2, r1, r8, ror #21
   12870:	andeq	r2, r1, r8, ror #21
   12874:	andeq	r2, r1, r8, ror #21
   12878:	andeq	r2, r1, r8, ror #21
   1287c:	andeq	r2, r1, r8, ror #21
   12880:	andeq	r2, r1, r8, ror #21
   12884:	andeq	r2, r1, r8, ror #21
   12888:	andeq	r2, r1, r8, ror #21
   1288c:	andeq	r2, r1, r8, ror #21
   12890:	andeq	r2, r1, r8, ror #21
   12894:	andeq	r2, r1, r8, ror #21
   12898:	andeq	r2, r1, r0, asr #17
   1289c:	andeq	r2, r1, r8, ror #21
   128a0:	andeq	r2, r1, r8, ror #21
   128a4:	andeq	r2, r1, ip, lsr #17
   128a8:	andeq	r2, r1, r8, lsr #18
   128ac:	ldr	r3, [r9]
   128b0:	mov	r2, #1
   128b4:	str	r2, [r5, #12]
   128b8:	str	r3, [r5, #84]	; 0x54
   128bc:	b	1280c <__printf_chk@plt+0x78>
   128c0:	mov	r3, #1
   128c4:	str	r3, [r5, #16]
   128c8:	b	1280c <__printf_chk@plt+0x78>
   128cc:	movw	r2, #28152	; 0x6df8
   128d0:	movw	r1, #57068	; 0xdeec
   128d4:	movt	r2, #3
   128d8:	movt	r1, #3
   128dc:	mov	r0, #1
   128e0:	bl	12794 <__printf_chk@plt>
   128e4:	mov	r0, #0
   128e8:	bl	12218 <exit@plt>
   128ec:	ldr	r0, [r9]
   128f0:	bl	1a954 <crc32@@Base+0xefc>
   128f4:	cmp	r0, #0
   128f8:	str	r0, [r5, #44]	; 0x2c
   128fc:	bge	1280c <__printf_chk@plt+0x78>
   12900:	movw	r1, #65196	; 0xfeac
   12904:	movt	r1, #4
   12908:	ldr	r3, [r5, #80]	; 0x50
   1290c:	movw	r2, #57016	; 0xdeb8
   12910:	ldr	r0, [r1]
   12914:	movt	r2, #3
   12918:	mov	r1, #1
   1291c:	bl	122d8 <__fprintf_chk@plt>
   12920:	mov	r0, #1
   12924:	bl	12218 <exit@plt>
   12928:	mov	r2, #10
   1292c:	add	r1, sp, #12
   12930:	ldr	r0, [r9]
   12934:	bl	122f0 <strtoul@plt>
   12938:	ldr	r3, [sp, #12]
   1293c:	str	r0, [r5, #20]
   12940:	ldrb	r3, [r3]
   12944:	cmp	r3, #0
   12948:	beq	1280c <__printf_chk@plt+0x78>
   1294c:	ldr	ip, [r7]
   12950:	movw	r0, #65196	; 0xfeac
   12954:	movt	r0, #4
   12958:	ldr	r3, [r5, #80]	; 0x50
   1295c:	movw	r2, #57036	; 0xdecc
   12960:	mov	r1, #1
   12964:	str	ip, [sp]
   12968:	movt	r2, #3
   1296c:	ldr	r0, [r0]
   12970:	bl	122d8 <__fprintf_chk@plt>
   12974:	mov	r0, #1
   12978:	bl	12218 <exit@plt>
   1297c:	cmp	r8, #1
   12980:	ble	12ae8 <__printf_chk@plt+0x354>
   12984:	movw	r3, #65184	; 0xfea0
   12988:	movt	r3, #4
   1298c:	ldr	r3, [r3]
   12990:	cmp	r3, r8
   12994:	bge	12b5c <__printf_chk@plt+0x3c8>
   12998:	ldr	r3, [r7, r3, lsl #2]
   1299c:	ldr	r0, [r5, #44]	; 0x2c
   129a0:	str	r3, [r5, #76]	; 0x4c
   129a4:	bl	1a984 <crc32@@Base+0xf2c>
   129a8:	subs	r6, r0, #0
   129ac:	beq	12b20 <__printf_chk@plt+0x38c>
   129b0:	ldr	r3, [r6, #12]
   129b4:	cmp	r3, #0
   129b8:	beq	129d0 <__printf_chk@plt+0x23c>
   129bc:	movw	r0, #64940	; 0xfdac
   129c0:	movt	r0, #4
   129c4:	blx	r3
   129c8:	cmp	r0, #0
   129cc:	bne	12c94 <__printf_chk@plt+0x500>
   129d0:	ldr	r3, [r5, #16]
   129d4:	cmp	r3, #0
   129d8:	bne	129e8 <__printf_chk@plt+0x254>
   129dc:	ldr	r3, [r5, #84]	; 0x54
   129e0:	cmp	r3, #0
   129e4:	beq	12c6c <__printf_chk@plt+0x4d8>
   129e8:	mov	r1, #0
   129ec:	ldr	r0, [r5, #76]	; 0x4c
   129f0:	bl	12458 <open@plt>
   129f4:	subs	r7, r0, #0
   129f8:	blt	12c34 <__printf_chk@plt+0x4a0>
   129fc:	mov	r1, r7
   12a00:	mov	r0, #3
   12a04:	add	r2, sp, #16
   12a08:	bl	12578 <__fxstat@plt>
   12a0c:	cmp	r0, #0
   12a10:	blt	12bfc <__printf_chk@plt+0x468>
   12a14:	ldr	r1, [sp, #60]	; 0x3c
   12a18:	ldr	r3, [r6, #4]
   12a1c:	cmp	r1, r3
   12a20:	bcc	12bcc <__printf_chk@plt+0x438>
   12a24:	mov	r3, #1
   12a28:	mov	r0, #0
   12a2c:	str	r7, [sp]
   12a30:	mov	r2, r3
   12a34:	str	r0, [sp, #4]
   12a38:	bl	12410 <mmap@plt>
   12a3c:	cmn	r0, #1
   12a40:	mov	r8, r0
   12a44:	str	r0, [sp, #12]
   12a48:	beq	12b84 <__printf_chk@plt+0x3f0>
   12a4c:	ldr	r3, [r5, #12]
   12a50:	cmp	r3, #0
   12a54:	bne	12aa0 <__printf_chk@plt+0x30c>
   12a58:	mov	r2, r6
   12a5c:	add	r1, sp, #16
   12a60:	movw	r3, #64940	; 0xfdac
   12a64:	movt	r3, #4
   12a68:	bl	1a9e8 <crc32@@Base+0xf90>
   12a6c:	mov	r4, r0
   12a70:	ldr	r1, [sp, #60]	; 0x3c
   12a74:	ldr	r0, [sp, #12]
   12a78:	bl	12608 <munmap@plt>
   12a7c:	mov	r0, r7
   12a80:	bl	12338 <close@plt>
   12a84:	ldr	r2, [sp, #108]	; 0x6c
   12a88:	ldr	r3, [sl]
   12a8c:	mov	r0, r4
   12a90:	cmp	r2, r3
   12a94:	bne	12aec <__printf_chk@plt+0x358>
   12a98:	add	sp, sp, #112	; 0x70
   12a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12aa0:	ldr	r3, [r6, #16]
   12aa4:	ldr	r1, [sp, #60]	; 0x3c
   12aa8:	cmp	r3, #0
   12aac:	beq	12a70 <__printf_chk@plt+0x2dc>
   12ab0:	movw	r2, #64940	; 0xfdac
   12ab4:	movt	r2, #4
   12ab8:	blx	r3
   12abc:	cmp	r0, #0
   12ac0:	bne	12a70 <__printf_chk@plt+0x2dc>
   12ac4:	ldr	r3, [r6, #28]
   12ac8:	cmp	r3, #0
   12acc:	beq	12af0 <__printf_chk@plt+0x35c>
   12ad0:	mov	r0, r8
   12ad4:	movw	r1, #64940	; 0xfdac
   12ad8:	movt	r1, #4
   12adc:	blx	r3
   12ae0:	mov	r4, r0
   12ae4:	b	12a70 <__printf_chk@plt+0x2dc>
   12ae8:	bl	35fb8 <crc32@@Base+0x1c560>
   12aec:	bl	124b8 <__stack_chk_fail@plt>
   12af0:	ldr	r1, [r6]
   12af4:	movw	r0, #65196	; 0xfeac
   12af8:	movt	r0, #4
   12afc:	ldr	r3, [r5, #80]	; 0x50
   12b00:	movw	r2, #57340	; 0xdffc
   12b04:	movt	r2, #3
   12b08:	str	r1, [sp]
   12b0c:	mov	r1, #1
   12b10:	ldr	r0, [r0]
   12b14:	mvn	r4, #1
   12b18:	bl	122d8 <__fprintf_chk@plt>
   12b1c:	b	12a70 <__printf_chk@plt+0x2dc>
   12b20:	movw	r3, #65196	; 0xfeac
   12b24:	movt	r3, #4
   12b28:	ldrb	r0, [r5, #44]	; 0x2c
   12b2c:	ldr	r4, [r3]
   12b30:	ldr	r5, [r5, #80]	; 0x50
   12b34:	bl	1a6e0 <crc32@@Base+0xc88>
   12b38:	movw	r2, #57128	; 0xdf28
   12b3c:	mov	r1, #1
   12b40:	movt	r2, #3
   12b44:	mov	r3, r5
   12b48:	str	r0, [sp]
   12b4c:	mov	r0, r4
   12b50:	bl	122d8 <__fprintf_chk@plt>
   12b54:	mov	r0, #1
   12b58:	bl	12218 <exit@plt>
   12b5c:	movw	r1, #65196	; 0xfeac
   12b60:	movt	r1, #4
   12b64:	ldr	r3, [r5, #80]	; 0x50
   12b68:	movw	r2, #57104	; 0xdf10
   12b6c:	ldr	r0, [r1]
   12b70:	movt	r2, #3
   12b74:	mov	r1, #1
   12b78:	bl	122d8 <__fprintf_chk@plt>
   12b7c:	mov	r0, #1
   12b80:	bl	12218 <exit@plt>
   12b84:	movw	r2, #65196	; 0xfeac
   12b88:	movt	r2, #4
   12b8c:	ldr	r6, [r5, #80]	; 0x50
   12b90:	ldr	r4, [r2]
   12b94:	bl	126b0 <__errno_location@plt>
   12b98:	ldr	r5, [r5, #76]	; 0x4c
   12b9c:	ldr	r0, [r0]
   12ba0:	bl	12224 <strerror@plt>
   12ba4:	movw	r2, #57312	; 0xdfe0
   12ba8:	movt	r2, #3
   12bac:	mov	r3, r6
   12bb0:	mov	r1, #1
   12bb4:	str	r5, [sp]
   12bb8:	str	r0, [sp, #4]
   12bbc:	mov	r0, r4
   12bc0:	bl	122d8 <__fprintf_chk@plt>
   12bc4:	mov	r0, #1
   12bc8:	bl	12218 <exit@plt>
   12bcc:	ldr	ip, [r5, #76]	; 0x4c
   12bd0:	movw	r0, #65196	; 0xfeac
   12bd4:	movt	r0, #4
   12bd8:	ldr	r3, [r5, #80]	; 0x50
   12bdc:	movw	r2, #57272	; 0xdfb8
   12be0:	mov	r1, #1
   12be4:	ldr	r0, [r0]
   12be8:	movt	r2, #3
   12bec:	str	ip, [sp]
   12bf0:	bl	122d8 <__fprintf_chk@plt>
   12bf4:	mov	r0, #1
   12bf8:	bl	12218 <exit@plt>
   12bfc:	movw	r2, #65196	; 0xfeac
   12c00:	movt	r2, #4
   12c04:	ldr	r6, [r5, #80]	; 0x50
   12c08:	ldr	r4, [r2]
   12c0c:	bl	126b0 <__errno_location@plt>
   12c10:	ldr	r5, [r5, #76]	; 0x4c
   12c14:	ldr	r0, [r0]
   12c18:	bl	12224 <strerror@plt>
   12c1c:	movw	r2, #57244	; 0xdf9c
   12c20:	str	r5, [sp]
   12c24:	mov	r3, r6
   12c28:	mov	r1, #1
   12c2c:	movt	r2, #3
   12c30:	b	12bb8 <__printf_chk@plt+0x424>
   12c34:	movw	r2, #65196	; 0xfeac
   12c38:	movt	r2, #4
   12c3c:	ldr	r6, [r5, #80]	; 0x50
   12c40:	ldr	r4, [r2]
   12c44:	bl	126b0 <__errno_location@plt>
   12c48:	ldr	r5, [r5, #76]	; 0x4c
   12c4c:	ldr	r0, [r0]
   12c50:	bl	12224 <strerror@plt>
   12c54:	movw	r2, #57216	; 0xdf80
   12c58:	str	r5, [sp]
   12c5c:	mov	r3, r6
   12c60:	mov	r1, #1
   12c64:	movt	r2, #3
   12c68:	b	12bb8 <__printf_chk@plt+0x424>
   12c6c:	movw	r1, #65196	; 0xfeac
   12c70:	movt	r1, #4
   12c74:	ldr	r3, [r5, #80]	; 0x50
   12c78:	movw	r2, #57184	; 0xdf60
   12c7c:	ldr	r0, [r1]
   12c80:	movt	r2, #3
   12c84:	mov	r1, #1
   12c88:	bl	122d8 <__fprintf_chk@plt>
   12c8c:	mov	r0, #1
   12c90:	bl	12218 <exit@plt>
   12c94:	movw	r1, #65196	; 0xfeac
   12c98:	movt	r1, #4
   12c9c:	ldr	r3, [r5, #80]	; 0x50
   12ca0:	movw	r2, #57156	; 0xdf44
   12ca4:	ldr	r0, [r1]
   12ca8:	movt	r2, #3
   12cac:	mov	r1, #1
   12cb0:	bl	122d8 <__fprintf_chk@plt>
   12cb4:	mov	r0, #1
   12cb8:	bl	12218 <exit@plt>
   12cbc:	mov	fp, #0
   12cc0:	mov	lr, #0
   12cc4:	pop	{r1}		; (ldr r1, [sp], #4)
   12cc8:	mov	r2, sp
   12ccc:	push	{r2}		; (str r2, [sp, #-4]!)
   12cd0:	push	{r0}		; (str r0, [sp, #-4]!)
   12cd4:	ldr	ip, [pc, #16]	; 12cec <__printf_chk@plt+0x558>
   12cd8:	push	{ip}		; (str ip, [sp, #-4]!)
   12cdc:	ldr	r0, [pc, #12]	; 12cf0 <__printf_chk@plt+0x55c>
   12ce0:	ldr	r3, [pc, #12]	; 12cf4 <__printf_chk@plt+0x560>
   12ce4:	bl	1274c <__libc_start_main@plt>
   12ce8:	bl	12380 <abort@plt>
   12cec:	andeq	r6, r3, ip, ror r4
   12cf0:	andeq	r2, r1, ip, asr #15
   12cf4:	andeq	r6, r3, r8, lsl r4
   12cf8:	ldr	r3, [pc, #20]	; 12d14 <__printf_chk@plt+0x580>
   12cfc:	ldr	r2, [pc, #20]	; 12d18 <__printf_chk@plt+0x584>
   12d00:	add	r3, pc, r3
   12d04:	ldr	r2, [r3, r2]
   12d08:	cmp	r2, #0
   12d0c:	bxeq	lr
   12d10:	b	12764 <__gmon_start__@plt>
   12d14:	strdeq	ip, [r3], -r8
   12d18:	andeq	r0, r0, r8, ror #4
   12d1c:	movw	r0, #65084	; 0xfe3c
   12d20:	movt	r0, #4
   12d24:	movw	r3, #65084	; 0xfe3c
   12d28:	movt	r3, #4
   12d2c:	cmp	r3, r0
   12d30:	bxeq	lr
   12d34:	movw	r3, #0
   12d38:	movt	r3, #0
   12d3c:	cmp	r3, #0
   12d40:	bxeq	lr
   12d44:	bx	r3
   12d48:	movw	r0, #65084	; 0xfe3c
   12d4c:	movt	r0, #4
   12d50:	movw	r1, #65084	; 0xfe3c
   12d54:	movt	r1, #4
   12d58:	sub	r1, r1, r0
   12d5c:	asr	r1, r1, #2
   12d60:	add	r1, r1, r1, lsr #31
   12d64:	asrs	r1, r1, #1
   12d68:	bxeq	lr
   12d6c:	movw	r3, #0
   12d70:	movt	r3, #0
   12d74:	cmp	r3, #0
   12d78:	bxeq	lr
   12d7c:	bx	r3
   12d80:	push	{r4, lr}
   12d84:	movw	r4, #65204	; 0xfeb4
   12d88:	movt	r4, #4
   12d8c:	ldrb	r3, [r4]
   12d90:	cmp	r3, #0
   12d94:	popne	{r4, pc}
   12d98:	bl	12d1c <__printf_chk@plt+0x588>
   12d9c:	mov	r3, #1
   12da0:	strb	r3, [r4]
   12da4:	pop	{r4, pc}
   12da8:	b	12d48 <__printf_chk@plt+0x5b4>
   12dac:	subs	r0, r0, #13
   12db0:	movne	r0, #1
   12db4:	bx	lr
   12db8:	ldr	r2, [r0]
   12dbc:	movw	r3, #18772	; 0x4954
   12dc0:	movt	r3, #16720	; 0x4150
   12dc4:	cmp	r2, r3
   12dc8:	movweq	r3, #65208	; 0xfeb8
   12dcc:	movteq	r3, #4
   12dd0:	moveq	r0, #0
   12dd4:	mvnne	r0, #10
   12dd8:	streq	r1, [r3]
   12ddc:	bx	lr
   12de0:	bx	lr
   12de4:	cmp	r0, #0
   12de8:	beq	12e6c <__printf_chk@plt+0x6d8>
   12dec:	ldr	r3, [r0, #64]	; 0x40
   12df0:	ldrb	r3, [r3]
   12df4:	cmp	r3, #0
   12df8:	beq	12e40 <__printf_chk@plt+0x6ac>
   12dfc:	ldr	r3, [r0]
   12e00:	ldr	r2, [r0, #8]
   12e04:	cmp	r3, #0
   12e08:	beq	12e28 <__printf_chk@plt+0x694>
   12e0c:	cmp	r2, #0
   12e10:	bne	12e20 <__printf_chk@plt+0x68c>
   12e14:	ldr	r3, [r0, #16]
   12e18:	cmp	r3, #0
   12e1c:	beq	12e30 <__printf_chk@plt+0x69c>
   12e20:	mov	r0, #1
   12e24:	bx	lr
   12e28:	cmp	r2, #0
   12e2c:	bne	12e14 <__printf_chk@plt+0x680>
   12e30:	ldr	r0, [r0, #28]
   12e34:	adds	r0, r0, #0
   12e38:	movne	r0, #1
   12e3c:	bx	lr
   12e40:	movw	r1, #65196	; 0xfeac
   12e44:	movt	r1, #4
   12e48:	ldr	r3, [r0, #80]	; 0x50
   12e4c:	movw	r2, #26040	; 0x65b8
   12e50:	push	{r4, lr}
   12e54:	movt	r2, #3
   12e58:	ldr	r0, [r1]
   12e5c:	mov	r1, #1
   12e60:	bl	122d8 <__fprintf_chk@plt>
   12e64:	mvn	r0, #0
   12e68:	pop	{r4, pc}
   12e6c:	mvn	r0, #0
   12e70:	bx	lr
   12e74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e78:	movw	r3, #61168	; 0xeef0
   12e7c:	sub	sp, sp, #212	; 0xd4
   12e80:	movt	r3, #4
   12e84:	mov	r4, #0
   12e88:	str	r0, [sp, #40]	; 0x28
   12e8c:	str	r3, [sp, #48]	; 0x30
   12e90:	ldr	r0, [r0, #64]	; 0x40
   12e94:	ldr	r3, [r3]
   12e98:	str	r1, [sp, #44]	; 0x2c
   12e9c:	movw	r1, #50292	; 0xc474
   12ea0:	movt	r1, #3
   12ea4:	str	r0, [sp, #52]	; 0x34
   12ea8:	str	r3, [sp, #204]	; 0xcc
   12eac:	str	r4, [sp, #56]	; 0x38
   12eb0:	bl	12350 <fopen@plt>
   12eb4:	subs	r3, r0, #0
   12eb8:	str	r3, [sp, #28]
   12ebc:	beq	133e4 <__printf_chk@plt+0xc50>
   12ec0:	ldr	r3, [sp, #40]	; 0x28
   12ec4:	mov	r1, r4
   12ec8:	ldr	r6, [r3, #72]	; 0x48
   12ecc:	ldr	r3, [sp, #44]	; 0x2c
   12ed0:	mov	r0, r6
   12ed4:	str	r4, [r3, #4]
   12ed8:	bl	12458 <open@plt>
   12edc:	subs	r5, r0, #0
   12ee0:	blt	133ac <__printf_chk@plt+0xc18>
   12ee4:	mov	r1, r5
   12ee8:	mov	r0, #3
   12eec:	add	r2, sp, #72	; 0x48
   12ef0:	bl	12578 <__fxstat@plt>
   12ef4:	cmp	r0, #0
   12ef8:	blt	13364 <__printf_chk@plt+0xbd0>
   12efc:	ldr	r0, [sp, #116]	; 0x74
   12f00:	movw	r3, #65208	; 0xfeb8
   12f04:	movt	r3, #4
   12f08:	add	r0, r0, #3
   12f0c:	bic	r0, r0, #3
   12f10:	add	r0, r0, #4096	; 0x1000
   12f14:	str	r0, [r3]
   12f18:	bl	125cc <malloc@plt>
   12f1c:	subs	r6, r0, #0
   12f20:	beq	13320 <__printf_chk@plt+0xb8c>
   12f24:	mov	r0, r5
   12f28:	str	r4, [sp, #24]
   12f2c:	bl	12338 <close@plt>
   12f30:	add	r3, r6, #4
   12f34:	str	r3, [sp, #32]
   12f38:	movw	fp, #25744	; 0x6490
   12f3c:	ldr	r3, [sp, #44]	; 0x2c
   12f40:	movt	fp, #3
   12f44:	str	r6, [r3, #8]
   12f48:	movw	r3, #18772	; 0x4954
   12f4c:	movt	r3, #16720	; 0x4150
   12f50:	str	r3, [r6]
   12f54:	movw	r3, #22797	; 0x590d
   12f58:	movt	r3, #22611	; 0x5853
   12f5c:	str	r3, [sp, #36]	; 0x24
   12f60:	ldr	r3, [sp, #28]
   12f64:	mov	r2, #10
   12f68:	add	r1, sp, #68	; 0x44
   12f6c:	add	r0, sp, #56	; 0x38
   12f70:	bl	12158 <__getdelim@plt>
   12f74:	cmp	r0, #0
   12f78:	ble	130e8 <__printf_chk@plt+0x954>
   12f7c:	movw	r1, #26248	; 0x6688
   12f80:	add	r2, sp, #60	; 0x3c
   12f84:	movt	r1, #3
   12f88:	ldr	r0, [sp, #56]	; 0x38
   12f8c:	bl	12248 <__strtok_r@plt>
   12f90:	ldr	r3, [sp, #24]
   12f94:	add	r3, r3, #1
   12f98:	str	r3, [sp, #24]
   12f9c:	subs	r3, r0, #0
   12fa0:	beq	12f60 <__printf_chk@plt+0x7cc>
   12fa4:	movw	r1, #26252	; 0x668c
   12fa8:	add	r2, sp, #64	; 0x40
   12fac:	movt	r1, #3
   12fb0:	str	r3, [sp, #56]	; 0x38
   12fb4:	bl	12248 <__strtok_r@plt>
   12fb8:	subs	r4, r0, #0
   12fbc:	beq	12f60 <__printf_chk@plt+0x7cc>
   12fc0:	ldrb	r3, [r4]
   12fc4:	cmp	r3, #35	; 0x23
   12fc8:	beq	12f60 <__printf_chk@plt+0x7cc>
   12fcc:	movw	r1, #26256	; 0x6690
   12fd0:	movw	r0, #62064	; 0xf270
   12fd4:	movt	r1, #3
   12fd8:	movt	r0, #4
   12fdc:	mov	r2, r4
   12fe0:	bl	1a8d8 <crc32@@Base+0xe80>
   12fe4:	subs	r9, r0, #0
   12fe8:	blt	1321c <__printf_chk@plt+0xa88>
   12fec:	add	r7, sp, #164	; 0xa4
   12ff0:	mov	r3, #0
   12ff4:	movw	r6, #26252	; 0x668c
   12ff8:	movt	r6, #3
   12ffc:	mov	r5, r3
   13000:	mov	sl, r3
   13004:	mov	r8, r7
   13008:	str	r3, [sp, #56]	; 0x38
   1300c:	str	r7, [sp, #20]
   13010:	add	r2, sp, #64	; 0x40
   13014:	mov	r1, r6
   13018:	mov	r0, #0
   1301c:	bl	12248 <__strtok_r@plt>
   13020:	subs	r4, r0, #0
   13024:	beq	13084 <__printf_chk@plt+0x8f0>
   13028:	ldrb	r3, [r4]
   1302c:	cmp	r3, #35	; 0x23
   13030:	beq	13084 <__printf_chk@plt+0x8f0>
   13034:	bl	126b0 <__errno_location@plt>
   13038:	mov	r2, #16
   1303c:	add	r1, sp, #72	; 0x48
   13040:	mov	r7, r0
   13044:	str	sl, [r0]
   13048:	mov	r0, r4
   1304c:	bl	122f0 <strtoul@plt>
   13050:	ldr	r3, [r7]
   13054:	cmp	r3, #0
   13058:	bne	131e4 <__printf_chk@plt+0xa50>
   1305c:	ldr	r2, [sp, #72]	; 0x48
   13060:	cmp	r4, r2
   13064:	beq	131e8 <__printf_chk@plt+0xa54>
   13068:	ldr	r2, [fp, r9, lsl #3]
   1306c:	add	r5, r5, #1
   13070:	str	r0, [r8], #4
   13074:	cmp	r2, r5
   13078:	bcc	13250 <__printf_chk@plt+0xabc>
   1307c:	str	r3, [sp, #56]	; 0x38
   13080:	b	13010 <__printf_chk@plt+0x87c>
   13084:	cmp	r9, #0
   13088:	ldr	r7, [sp, #20]
   1308c:	beq	12f60 <__printf_chk@plt+0x7cc>
   13090:	add	r9, fp, r9, lsl #3
   13094:	ldr	r2, [sp, #36]	; 0x24
   13098:	ldr	r3, [r9, #4]
   1309c:	cmp	r3, r2
   130a0:	ldr	r2, [sp, #32]
   130a4:	ldreq	r1, [sp, #32]
   130a8:	str	r3, [r2]
   130ac:	addne	r3, r2, #4
   130b0:	ldreq	r2, [r9, #152]	; 0x98
   130b4:	addeq	r3, r1, #8
   130b8:	addeq	r2, r2, r5, lsl #16
   130bc:	streq	r2, [r1, #4]
   130c0:	cmp	r5, #0
   130c4:	streq	r3, [sp, #32]
   130c8:	beq	12f60 <__printf_chk@plt+0x7cc>
   130cc:	add	r5, r3, r5, lsl #2
   130d0:	ldr	r2, [r7], #4
   130d4:	str	r2, [r3], #4
   130d8:	cmp	r5, r3
   130dc:	bne	130d0 <__printf_chk@plt+0x93c>
   130e0:	str	r5, [sp, #32]
   130e4:	b	12f60 <__printf_chk@plt+0x7cc>
   130e8:	ldr	r0, [sp, #28]
   130ec:	bl	12620 <fclose@plt>
   130f0:	ldr	r3, [sp, #40]	; 0x28
   130f4:	mov	r1, #0
   130f8:	ldr	r4, [r3, #72]	; 0x48
   130fc:	mov	r0, r4
   13100:	bl	12458 <open@plt>
   13104:	subs	r7, r0, #0
   13108:	blt	1329c <__printf_chk@plt+0xb08>
   1310c:	add	r2, sp, #72	; 0x48
   13110:	mov	r1, r7
   13114:	mov	r0, #3
   13118:	bl	12578 <__fxstat@plt>
   1311c:	cmp	r0, #0
   13120:	blt	132e8 <__printf_chk@plt+0xb54>
   13124:	mov	r6, #0
   13128:	mov	r3, #1
   1312c:	mov	r2, r3
   13130:	ldr	r1, [sp, #116]	; 0x74
   13134:	str	r7, [sp]
   13138:	mov	r0, r6
   1313c:	str	r6, [sp, #4]
   13140:	bl	12410 <mmap@plt>
   13144:	ldr	r9, [sp, #40]	; 0x28
   13148:	ldr	r5, [sp, #116]	; 0x74
   1314c:	movw	r3, #22785	; 0x5901
   13150:	movt	r3, #22611	; 0x5853
   13154:	ldr	r2, [r9, #60]	; 0x3c
   13158:	mov	r4, r0
   1315c:	ldr	r0, [sp, #32]
   13160:	mov	r1, r4
   13164:	add	r8, r0, #12
   13168:	str	r3, [r0]
   1316c:	stmib	r0, {r2, r5}
   13170:	mov	r2, r5
   13174:	mov	r0, r8
   13178:	bl	125c0 <memcpy@plt>
   1317c:	mov	r1, r5
   13180:	mov	r0, r4
   13184:	add	r4, r5, #3
   13188:	bl	12608 <munmap@plt>
   1318c:	mov	r0, r7
   13190:	bl	12338 <close@plt>
   13194:	ldr	r3, [sp, #48]	; 0x30
   13198:	ldr	r5, [sp, #44]	; 0x2c
   1319c:	bic	r4, r4, #3
   131a0:	ldr	r0, [sp, #204]	; 0xcc
   131a4:	add	r2, r8, r4
   131a8:	ldr	r1, [r3]
   131ac:	add	r3, r2, #8
   131b0:	ldr	ip, [r9, #60]	; 0x3c
   131b4:	cmp	r0, r1
   131b8:	ldr	lr, [r5, #8]
   131bc:	movw	r1, #22790	; 0x5906
   131c0:	mov	r0, r6
   131c4:	sub	r3, r3, lr
   131c8:	movt	r1, #22611	; 0x5853
   131cc:	str	r3, [r5, #4]
   131d0:	str	r1, [r8, r4]
   131d4:	str	ip, [r2, #4]
   131d8:	bne	132e4 <__printf_chk@plt+0xb50>
   131dc:	add	sp, sp, #212	; 0xd4
   131e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131e4:	mov	r2, r4
   131e8:	movw	r1, #65196	; 0xfeac
   131ec:	movt	r1, #4
   131f0:	str	r2, [sp, #4]
   131f4:	movw	r2, #26316	; 0x66cc
   131f8:	ldr	r0, [r1]
   131fc:	movt	r2, #3
   13200:	ldr	r1, [sp, #24]
   13204:	ldr	r3, [sp, #52]	; 0x34
   13208:	str	r1, [sp]
   1320c:	mov	r1, #1
   13210:	bl	122d8 <__fprintf_chk@plt>
   13214:	mov	r0, #1
   13218:	bl	12218 <exit@plt>
   1321c:	ldr	r1, [sp, #24]
   13220:	movw	r2, #65196	; 0xfeac
   13224:	movt	r2, #4
   13228:	str	r4, [sp, #4]
   1322c:	ldr	r3, [sp, #52]	; 0x34
   13230:	ldr	r0, [r2]
   13234:	movw	r2, #26276	; 0x66a4
   13238:	str	r1, [sp]
   1323c:	movt	r2, #3
   13240:	mov	r1, #1
   13244:	bl	122d8 <__fprintf_chk@plt>
   13248:	mov	r0, #1
   1324c:	bl	12218 <exit@plt>
   13250:	movw	r3, #62064	; 0xf270
   13254:	movt	r3, #4
   13258:	mov	r2, #12
   1325c:	str	r4, [sp, #4]
   13260:	mla	r9, r2, r9, r3
   13264:	ldr	r3, [sp, #24]
   13268:	movw	r1, #65196	; 0xfeac
   1326c:	movt	r1, #4
   13270:	movw	r2, #26356	; 0x66f4
   13274:	movt	r2, #3
   13278:	str	r3, [sp]
   1327c:	ldr	r3, [sp, #52]	; 0x34
   13280:	ldr	ip, [r9, #4]
   13284:	ldr	r0, [r1]
   13288:	mov	r1, #1
   1328c:	str	ip, [sp, #8]
   13290:	bl	122d8 <__fprintf_chk@plt>
   13294:	mov	r0, #1
   13298:	bl	12218 <exit@plt>
   1329c:	ldr	r3, [sp, #40]	; 0x28
   132a0:	movw	r2, #65196	; 0xfeac
   132a4:	movt	r2, #4
   132a8:	ldr	r6, [r3, #80]	; 0x50
   132ac:	ldr	r5, [r2]
   132b0:	bl	126b0 <__errno_location@plt>
   132b4:	ldr	r0, [r0]
   132b8:	bl	12224 <strerror@plt>
   132bc:	movw	r2, #26168	; 0x6638
   132c0:	movt	r2, #3
   132c4:	mov	r3, r6
   132c8:	mov	r1, #1
   132cc:	str	r4, [sp]
   132d0:	str	r0, [sp, #4]
   132d4:	mov	r0, r5
   132d8:	bl	122d8 <__fprintf_chk@plt>
   132dc:	mov	r0, #1
   132e0:	bl	12218 <exit@plt>
   132e4:	bl	124b8 <__stack_chk_fail@plt>
   132e8:	ldr	r3, [sp, #40]	; 0x28
   132ec:	movw	r2, #65196	; 0xfeac
   132f0:	movt	r2, #4
   132f4:	ldr	r6, [r3, #80]	; 0x50
   132f8:	ldr	r5, [r2]
   132fc:	bl	126b0 <__errno_location@plt>
   13300:	ldr	r0, [r0]
   13304:	bl	12224 <strerror@plt>
   13308:	movw	r2, #26192	; 0x6650
   1330c:	mov	r3, r6
   13310:	str	r4, [sp]
   13314:	mov	r1, #1
   13318:	movt	r2, #3
   1331c:	b	132d0 <__printf_chk@plt+0xb3c>
   13320:	ldr	r3, [sp, #40]	; 0x28
   13324:	movw	r2, #65196	; 0xfeac
   13328:	movt	r2, #4
   1332c:	ldr	r5, [r3, #80]	; 0x50
   13330:	ldr	r4, [r2]
   13334:	bl	126b0 <__errno_location@plt>
   13338:	ldr	r0, [r0]
   1333c:	bl	12224 <strerror@plt>
   13340:	mov	r3, r5
   13344:	movw	r2, #26216	; 0x6668
   13348:	mov	r1, #1
   1334c:	movt	r2, #3
   13350:	str	r0, [sp]
   13354:	mov	r0, r4
   13358:	bl	122d8 <__fprintf_chk@plt>
   1335c:	mov	r0, #1
   13360:	bl	12218 <exit@plt>
   13364:	ldr	r3, [sp, #40]	; 0x28
   13368:	movw	r2, #65196	; 0xfeac
   1336c:	movt	r2, #4
   13370:	ldr	r5, [r3, #80]	; 0x50
   13374:	ldr	r4, [r2]
   13378:	bl	126b0 <__errno_location@plt>
   1337c:	ldr	r0, [r0]
   13380:	bl	12224 <strerror@plt>
   13384:	movw	r2, #26192	; 0x6650
   13388:	movt	r2, #3
   1338c:	mov	r3, r5
   13390:	mov	r1, #1
   13394:	str	r6, [sp]
   13398:	str	r0, [sp, #4]
   1339c:	mov	r0, r4
   133a0:	bl	122d8 <__fprintf_chk@plt>
   133a4:	mov	r0, #1
   133a8:	bl	12218 <exit@plt>
   133ac:	ldr	r3, [sp, #40]	; 0x28
   133b0:	movw	r2, #65196	; 0xfeac
   133b4:	movt	r2, #4
   133b8:	ldr	r5, [r3, #80]	; 0x50
   133bc:	ldr	r4, [r2]
   133c0:	bl	126b0 <__errno_location@plt>
   133c4:	ldr	r0, [r0]
   133c8:	bl	12224 <strerror@plt>
   133cc:	movw	r2, #26168	; 0x6638
   133d0:	mov	r3, r5
   133d4:	str	r6, [sp]
   133d8:	mov	r1, #1
   133dc:	movt	r2, #3
   133e0:	b	13398 <__printf_chk@plt+0xc04>
   133e4:	movw	r1, #65196	; 0xfeac
   133e8:	movt	r1, #4
   133ec:	ldr	r3, [sp, #52]	; 0x34
   133f0:	movw	r2, #26124	; 0x660c
   133f4:	ldr	r0, [r1]
   133f8:	movt	r2, #3
   133fc:	mov	r1, #1
   13400:	bl	122d8 <__fprintf_chk@plt>
   13404:	mov	r0, #1
   13408:	bl	12218 <exit@plt>
   1340c:	ldr	r2, [r0]
   13410:	movw	r3, #18772	; 0x4954
   13414:	movt	r3, #16720	; 0x4150
   13418:	cmp	r2, r3
   1341c:	beq	13440 <__printf_chk@plt+0xcac>
   13420:	movw	r3, #65196	; 0xfeac
   13424:	movt	r3, #4
   13428:	movw	r0, #26412	; 0x672c
   1342c:	mov	r2, #36	; 0x24
   13430:	ldr	r3, [r3]
   13434:	movt	r0, #3
   13438:	mov	r1, #1
   1343c:	b	1259c <fwrite@plt>
   13440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13444:	movw	sl, #65200	; 0xfeb0
   13448:	sub	sp, sp, #28
   1344c:	movt	sl, #4
   13450:	ldr	r9, [pc, #432]	; 13608 <__printf_chk@plt+0xe74>
   13454:	mov	r6, r0
   13458:	str	r0, [sp, #20]
   1345c:	mov	r2, #40	; 0x28
   13460:	ldr	r3, [sl]
   13464:	mov	r1, #1
   13468:	movw	r0, #26452	; 0x6754
   1346c:	movw	fp, #22790	; 0x5906
   13470:	movt	r0, #3
   13474:	movw	r7, #22797	; 0x590d
   13478:	movt	fp, #22611	; 0x5853
   1347c:	movt	r7, #22611	; 0x5853
   13480:	bl	1259c <fwrite@plt>
   13484:	ldr	r3, [r6], #4
   13488:	ldr	r0, [sl]
   1348c:	movw	r2, #26496	; 0x6780
   13490:	mov	r1, #1
   13494:	movt	r2, #3
   13498:	bl	122d8 <__fprintf_chk@plt>
   1349c:	movw	r3, #22785	; 0x5901
   134a0:	movt	r3, #22611	; 0x5853
   134a4:	str	r3, [sp, #16]
   134a8:	ldr	r5, [r6]
   134ac:	cmp	r5, fp
   134b0:	beq	13600 <__printf_chk@plt+0xe6c>
   134b4:	ldr	r3, [sp, #16]
   134b8:	cmp	r5, r3
   134bc:	beq	135c4 <__printf_chk@plt+0xe30>
   134c0:	movw	r8, #25744	; 0x6490
   134c4:	movt	r8, #3
   134c8:	mov	r2, #0
   134cc:	mov	r3, r8
   134d0:	mov	r4, r2
   134d4:	b	134e8 <__printf_chk@plt+0xd54>
   134d8:	add	r4, r4, #1
   134dc:	cmp	r4, #19
   134e0:	beq	1359c <__printf_chk@plt+0xe08>
   134e4:	ldr	r2, [r3, #4]
   134e8:	cmp	r5, r2
   134ec:	add	r3, r3, #8
   134f0:	bne	134d8 <__printf_chk@plt+0xd44>
   134f4:	cmp	r5, r7
   134f8:	bne	1350c <__printf_chk@plt+0xd78>
   134fc:	ldrh	r2, [r6, #4]
   13500:	ldr	r1, [r9, r4, lsl #3]
   13504:	cmp	r1, r2
   13508:	bne	134d8 <__printf_chk@plt+0xd44>
   1350c:	ldr	r3, [sl]
   13510:	mov	r2, r4
   13514:	mov	r1, #0
   13518:	movw	r0, #62064	; 0xf270
   1351c:	movt	r0, #4
   13520:	str	r3, [sp, #12]
   13524:	bl	1a608 <crc32@@Base+0xbb0>
   13528:	movw	r2, #26592	; 0x67e0
   1352c:	mov	r1, #1
   13530:	movt	r2, #3
   13534:	mov	r3, r0
   13538:	ldr	r0, [sp, #12]
   1353c:	bl	122d8 <__fprintf_chk@plt>
   13540:	ldr	r3, [r8, r4, lsl #3]
   13544:	movw	r2, #65208	; 0xfeb8
   13548:	movt	r2, #4
   1354c:	add	r3, r3, #1
   13550:	cmp	r5, r7
   13554:	movne	r5, r3
   13558:	addeq	r5, r3, #1
   1355c:	ldr	r3, [r2]
   13560:	ldr	r2, [sp, #20]
   13564:	add	r6, r6, r5, lsl #2
   13568:	sub	r2, r6, r2
   1356c:	cmp	r2, r3
   13570:	bls	134a8 <__printf_chk@plt+0xd14>
   13574:	movw	r3, #65196	; 0xfeac
   13578:	movt	r3, #4
   1357c:	movw	r0, #26552	; 0x67b8
   13580:	mov	r2, #37	; 0x25
   13584:	ldr	r3, [r3]
   13588:	movt	r0, #3
   1358c:	mov	r1, #1
   13590:	add	sp, sp, #28
   13594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13598:	b	1259c <fwrite@plt>
   1359c:	movw	r3, #65196	; 0xfeac
   135a0:	movt	r3, #4
   135a4:	movw	r0, #26612	; 0x67f4
   135a8:	mov	r2, #30
   135ac:	ldr	r3, [r3]
   135b0:	movt	r0, #3
   135b4:	mov	r1, #1
   135b8:	add	sp, sp, #28
   135bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135c0:	b	1259c <fwrite@plt>
   135c4:	ldr	ip, [r6, #8]
   135c8:	movw	r2, #26516	; 0x6794
   135cc:	ldr	r3, [r6, #4]
   135d0:	movt	r2, #3
   135d4:	ldr	r0, [sl]
   135d8:	mov	r1, #1
   135dc:	str	ip, [sp]
   135e0:	add	r6, r6, #12
   135e4:	bl	122d8 <__fprintf_chk@plt>
   135e8:	ldr	r3, [r6, #-4]
   135ec:	bic	r3, r3, #3
   135f0:	add	r6, r6, r3
   135f4:	ldr	r5, [r6]
   135f8:	cmp	r5, fp
   135fc:	bne	134b4 <__printf_chk@plt+0xd20>
   13600:	add	sp, sp, #28
   13604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13608:	andeq	r6, r3, r8, lsr #10
   1360c:	subs	r0, r0, #18
   13610:	movne	r0, #1
   13614:	bx	lr
   13618:	push	{r4, lr}
   1361c:	sub	r2, r0, #4
   13620:	add	ip, r0, #204	; 0xcc
   13624:	b	13630 <__printf_chk@plt+0xe9c>
   13628:	cmp	r2, ip
   1362c:	beq	136a0 <__printf_chk@plt+0xf0c>
   13630:	ldr	r3, [r2, #4]!
   13634:	lsr	r3, r3, #28
   13638:	cmp	r3, #12
   1363c:	beq	13628 <__printf_chk@plt+0xe94>
   13640:	mov	ip, #61440	; 0xf000
   13644:	mov	r2, #0
   13648:	mov	lr, ip
   1364c:	movt	ip, #65535	; 0xffff
   13650:	movt	lr, #58783	; 0xe59f
   13654:	cmp	r2, #5
   13658:	beq	13680 <__printf_chk@plt+0xeec>
   1365c:	ldr	r3, [r0, r2, lsl #2]
   13660:	and	r4, r3, #-16777216	; 0xff000000
   13664:	and	r3, r3, ip
   13668:	cmp	r4, #-369098752	; 0xea000000
   1366c:	beq	13688 <__printf_chk@plt+0xef4>
   13670:	cmp	r3, lr
   13674:	beq	13688 <__printf_chk@plt+0xef4>
   13678:	mov	r0, #1
   1367c:	pop	{r4, pc}
   13680:	add	r2, r2, #1
   13684:	b	13654 <__printf_chk@plt+0xec0>
   13688:	cmp	r2, #6
   1368c:	bne	13680 <__printf_chk@plt+0xeec>
   13690:	ldr	r0, [r0, #20]
   13694:	subs	r0, r0, r1
   13698:	movne	r0, #1
   1369c:	pop	{r4, pc}
   136a0:	add	r0, r0, #208	; 0xd0
   136a4:	sub	r1, r1, #208	; 0xd0
   136a8:	b	13640 <__printf_chk@plt+0xeac>
   136ac:	ldr	ip, [r1, #44]	; 0x2c
   136b0:	sub	r2, r0, #4
   136b4:	add	r1, r0, #204	; 0xcc
   136b8:	b	136c4 <__printf_chk@plt+0xf30>
   136bc:	cmp	r2, r1
   136c0:	beq	136e0 <__printf_chk@plt+0xf4c>
   136c4:	ldr	r3, [r2, #4]!
   136c8:	lsr	r3, r3, #28
   136cc:	cmp	r3, #12
   136d0:	beq	136bc <__printf_chk@plt+0xf28>
   136d4:	mov	r3, #20
   136d8:	str	ip, [r0, r3]
   136dc:	bx	lr
   136e0:	mov	r3, #228	; 0xe4
   136e4:	sub	ip, ip, #208	; 0xd0
   136e8:	str	ip, [r0, r3]
   136ec:	bx	lr
   136f0:	push	{r4, r5, r6, lr}
   136f4:	sub	r3, r0, #4
   136f8:	mov	r5, r0
   136fc:	add	r2, r0, #204	; 0xcc
   13700:	b	1370c <__printf_chk@plt+0xf78>
   13704:	cmp	r2, r3
   13708:	beq	13744 <__printf_chk@plt+0xfb0>
   1370c:	ldr	r4, [r3, #4]!
   13710:	lsr	r4, r4, #28
   13714:	cmp	r4, #12
   13718:	beq	13704 <__printf_chk@plt+0xf70>
   1371c:	movw	r0, #27340	; 0x6acc
   13720:	movt	r0, #3
   13724:	bl	12290 <puts@plt>
   13728:	mov	r3, #20
   1372c:	ldr	r2, [r5, r3]
   13730:	movw	r1, #27224	; 0x6a58
   13734:	mov	r0, #1
   13738:	movt	r1, #3
   1373c:	pop	{r4, r5, r6, lr}
   13740:	b	12794 <__printf_chk@plt>
   13744:	movw	r0, #27252	; 0x6a74
   13748:	movt	r0, #3
   1374c:	bl	12290 <puts@plt>
   13750:	ldr	r6, [r5]
   13754:	movw	r0, #27304	; 0x6aa8
   13758:	movt	r0, #3
   1375c:	bl	12290 <puts@plt>
   13760:	movw	r0, #27200	; 0x6a40
   13764:	movt	r0, #3
   13768:	bl	12290 <puts@plt>
   1376c:	ubfx	r2, r6, #18, #9
   13770:	movw	r1, #27320	; 0x6ab8
   13774:	mov	r0, #1
   13778:	movt	r1, #3
   1377c:	bl	12794 <__printf_chk@plt>
   13780:	tst	r6, #196608	; 0x30000
   13784:	movw	r1, #27096	; 0x69d8
   13788:	mov	r0, #1
   1378c:	movne	r2, #1024	; 0x400
   13790:	moveq	r2, #512	; 0x200
   13794:	movt	r1, #3
   13798:	bl	12794 <__printf_chk@plt>
   1379c:	ubfx	r3, r6, #13, #3
   137a0:	cmp	r3, #2
   137a4:	subhi	r2, r3, #3
   137a8:	lslhi	r2, r4, r2
   137ac:	bls	13818 <__printf_chk@plt+0x1084>
   137b0:	movw	r1, #27116	; 0x69ec
   137b4:	mov	r0, #1
   137b8:	movt	r1, #3
   137bc:	bl	12794 <__printf_chk@plt>
   137c0:	ubfx	r2, r6, #4, #9
   137c4:	mov	r0, #1
   137c8:	movw	r1, #27136	; 0x6a00
   137cc:	movt	r1, #3
   137d0:	mov	r4, r0
   137d4:	bl	12794 <__printf_chk@plt>
   137d8:	ubfx	r2, r6, #1, #2
   137dc:	lsl	r2, r4, r2
   137e0:	mov	r0, r4
   137e4:	movw	r1, #27156	; 0x6a14
   137e8:	movt	r1, #3
   137ec:	bl	12794 <__printf_chk@plt>
   137f0:	and	r2, r6, r4
   137f4:	mov	r0, r4
   137f8:	movw	r1, #27180	; 0x6a2c
   137fc:	movt	r1, #3
   13800:	bl	12794 <__printf_chk@plt>
   13804:	movw	r0, #27200	; 0x6a40
   13808:	movt	r0, #3
   1380c:	bl	12290 <puts@plt>
   13810:	mov	r3, #228	; 0xe4
   13814:	b	1372c <__printf_chk@plt+0xf98>
   13818:	mov	r2, #2
   1381c:	lsl	r2, r2, r3
   13820:	b	137b0 <__printf_chk@plt+0x101c>
   13824:	ldr	r3, [r0, #64]	; 0x40
   13828:	ldrb	r0, [r3]
   1382c:	cmp	r0, #0
   13830:	bxeq	lr
   13834:	movw	ip, #65212	; 0xfebc
   13838:	movt	ip, #4
   1383c:	mov	r2, #0
   13840:	movt	r2, #2044	; 0x7fc
   13844:	ldr	r3, [ip, #16]
   13848:	ldr	r0, [ip, #20]
   1384c:	cmp	r3, #512	; 0x200
   13850:	push	{r4, lr}
   13854:	and	r2, r2, r0, lsl #18
   13858:	beq	13890 <__printf_chk@plt+0x10fc>
   1385c:	cmp	r3, #1024	; 0x400
   13860:	orreq	r0, r2, #-1073741824	; 0xc0000000
   13864:	orreq	r0, r0, #65536	; 0x10000
   13868:	beq	13894 <__printf_chk@plt+0x1100>
   1386c:	movw	r1, #65196	; 0xfeac
   13870:	movt	r1, #4
   13874:	movw	r2, #27396	; 0x6b04
   13878:	movt	r2, #3
   1387c:	ldr	r0, [r1]
   13880:	mov	r1, #1
   13884:	bl	122d8 <__fprintf_chk@plt>
   13888:	mov	r0, #1
   1388c:	pop	{r4, pc}
   13890:	orr	r0, r2, #-1073741824	; 0xc0000000
   13894:	ldr	r3, [ip, #12]
   13898:	sub	r2, r3, #2
   1389c:	cmp	r2, #22
   138a0:	ldrls	pc, [pc, r2, lsl #2]
   138a4:	b	139d0 <__printf_chk@plt+0x123c>
   138a8:	andeq	r3, r1, r8, lsl #18
   138ac:	ldrdeq	r3, [r1], -r0
   138b0:	andeq	r3, r1, r4, lsr #19
   138b4:	ldrdeq	r3, [r1], -r0
   138b8:	ldrdeq	r3, [r1], -r0
   138bc:	ldrdeq	r3, [r1], -r0
   138c0:	muleq	r1, ip, r9
   138c4:	ldrdeq	r3, [r1], -r0
   138c8:	ldrdeq	r3, [r1], -r0
   138cc:	ldrdeq	r3, [r1], -r0
   138d0:	andeq	r3, r1, r4, lsl #18
   138d4:	ldrdeq	r3, [r1], -r0
   138d8:	ldrdeq	r3, [r1], -r0
   138dc:	ldrdeq	r3, [r1], -r0
   138e0:	ldrdeq	r3, [r1], -r0
   138e4:	ldrdeq	r3, [r1], -r0
   138e8:	ldrdeq	r3, [r1], -r0
   138ec:	ldrdeq	r3, [r1], -r0
   138f0:	ldrdeq	r3, [r1], -r0
   138f4:	ldrdeq	r3, [r1], -r0
   138f8:	ldrdeq	r3, [r1], -r0
   138fc:	ldrdeq	r3, [r1], -r0
   13900:	muleq	r1, r4, r9
   13904:	orr	r0, r0, #24576	; 0x6000
   13908:	ldr	lr, [ip, #8]
   1390c:	movw	r2, #8176	; 0x1ff0
   13910:	ldr	r3, [ip, #4]
   13914:	and	r2, r2, lr, lsl #4
   13918:	sub	lr, r3, #1
   1391c:	orr	r2, r2, r0
   13920:	cmp	lr, #7
   13924:	ldrls	pc, [pc, lr, lsl #2]
   13928:	b	139ac <__printf_chk@plt+0x1218>
   1392c:	andeq	r3, r1, r0, asr r9
   13930:	andeq	r3, r1, ip, lsl #19
   13934:	andeq	r3, r1, ip, lsr #19
   13938:	andeq	r3, r1, ip, asr #18
   1393c:	andeq	r3, r1, ip, lsr #19
   13940:	andeq	r3, r1, ip, lsr #19
   13944:	andeq	r3, r1, ip, lsr #19
   13948:	andeq	r3, r1, r4, lsl #19
   1394c:	orr	r2, r2, #4
   13950:	ldr	r3, [ip]
   13954:	cmp	r3, #0
   13958:	ldr	r3, [pc, #148]	; 139f4 <__printf_chk@plt+0x1260>
   1395c:	orrne	r2, r2, #1
   13960:	add	r0, r3, #208	; 0xd0
   13964:	str	r2, [r3, #4]!
   13968:	cmp	r3, r0
   1396c:	bne	13964 <__printf_chk@plt+0x11d0>
   13970:	ldr	r3, [pc, #128]	; 139f8 <__printf_chk@plt+0x1264>
   13974:	mov	r2, #208	; 0xd0
   13978:	mov	r0, #0
   1397c:	strd	r2, [r1, #4]
   13980:	pop	{r4, pc}
   13984:	orr	r2, r2, #6
   13988:	b	13950 <__printf_chk@plt+0x11bc>
   1398c:	orr	r2, r2, #2
   13990:	b	13950 <__printf_chk@plt+0x11bc>
   13994:	orr	r0, r0, #32768	; 0x8000
   13998:	b	13908 <__printf_chk@plt+0x1174>
   1399c:	orr	r0, r0, #16384	; 0x4000
   139a0:	b	13908 <__printf_chk@plt+0x1174>
   139a4:	orr	r0, r0, #8192	; 0x2000
   139a8:	b	13908 <__printf_chk@plt+0x1174>
   139ac:	movw	r1, #65196	; 0xfeac
   139b0:	movt	r1, #4
   139b4:	movw	r2, #27512	; 0x6b78
   139b8:	movt	r2, #3
   139bc:	ldr	r0, [r1]
   139c0:	mov	r1, #1
   139c4:	bl	122d8 <__fprintf_chk@plt>
   139c8:	mov	r0, #1
   139cc:	pop	{r4, pc}
   139d0:	movw	r1, #65196	; 0xfeac
   139d4:	movt	r1, #4
   139d8:	movw	r2, #27456	; 0x6b40
   139dc:	movt	r2, #3
   139e0:	ldr	r0, [r1]
   139e4:	mov	r1, #1
   139e8:	bl	122d8 <__fprintf_chk@plt>
   139ec:	mov	r0, #1
   139f0:	pop	{r4, pc}
   139f4:	ldrdeq	pc, [r4], -r0
   139f8:	ldrdeq	pc, [r4], -r4
   139fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a00:	mov	r7, r0
   13a04:	ldr	r0, [r0, #64]	; 0x40
   13a08:	ldrb	r3, [r0]
   13a0c:	cmp	r3, #0
   13a10:	bne	13a5c <__printf_chk@plt+0x12c8>
   13a14:	ldr	r3, [r7, #4]
   13a18:	cmp	r3, #0
   13a1c:	bne	13a54 <__printf_chk@plt+0x12c0>
   13a20:	ldr	r3, [r7, #8]
   13a24:	cmp	r3, #0
   13a28:	bne	13a54 <__printf_chk@plt+0x12c0>
   13a2c:	ldr	r3, [r7, #28]
   13a30:	cmp	r3, #0
   13a34:	bne	13a54 <__printf_chk@plt+0x12c0>
   13a38:	ldr	r3, [r7]
   13a3c:	ldr	r0, [r7, #16]
   13a40:	cmp	r3, #0
   13a44:	beq	13bbc <__printf_chk@plt+0x1428>
   13a48:	adds	r0, r0, #0
   13a4c:	movne	r0, #1
   13a50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a54:	mov	r0, #1
   13a58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a5c:	movw	r1, #27588	; 0x6bc4
   13a60:	movt	r1, #3
   13a64:	bl	1229c <strtok@plt>
   13a68:	subs	r6, r0, #0
   13a6c:	beq	13a14 <__printf_chk@plt+0x1280>
   13a70:	movw	r8, #27576	; 0x6bb8
   13a74:	movw	r9, #27072	; 0x69c0
   13a78:	movt	r8, #3
   13a7c:	movt	r9, #3
   13a80:	mov	r2, #8
   13a84:	mov	r5, r8
   13a88:	mov	r4, #0
   13a8c:	mov	r1, r5
   13a90:	mov	r0, r6
   13a94:	bl	121a0 <strncmp@plt>
   13a98:	cmp	r0, #0
   13a9c:	bne	13b60 <__printf_chk@plt+0x13cc>
   13aa0:	mov	r1, #61	; 0x3d
   13aa4:	mov	r0, r6
   13aa8:	bl	12788 <strchr@plt>
   13aac:	cmp	r0, #0
   13ab0:	beq	13b80 <__printf_chk@plt+0x13ec>
   13ab4:	sub	r4, r4, #1
   13ab8:	add	r0, r0, #1
   13abc:	mov	r2, #10
   13ac0:	mov	r1, #0
   13ac4:	cmp	r4, #4
   13ac8:	ldrls	pc, [pc, r4, lsl #2]
   13acc:	b	13b24 <__printf_chk@plt+0x1390>
   13ad0:	andeq	r3, r1, r0, lsl fp
   13ad4:	andeq	r3, r1, r4, ror #21
   13ad8:	andeq	r3, r1, ip, asr #22
   13adc:	andeq	r3, r1, r8, lsr fp
   13ae0:	andeq	r3, r1, r8, lsr #23
   13ae4:	bl	12140 <strtol@plt>
   13ae8:	movw	r3, #65212	; 0xfebc
   13aec:	movt	r3, #4
   13af0:	str	r0, [r3, #8]
   13af4:	movw	r1, #27588	; 0x6bc4
   13af8:	mov	r0, #0
   13afc:	movt	r1, #3
   13b00:	bl	1229c <strtok@plt>
   13b04:	subs	r6, r0, #0
   13b08:	bne	13a80 <__printf_chk@plt+0x12ec>
   13b0c:	b	13a14 <__printf_chk@plt+0x1280>
   13b10:	bl	12140 <strtol@plt>
   13b14:	movw	r3, #65212	; 0xfebc
   13b18:	movt	r3, #4
   13b1c:	str	r0, [r3, #4]
   13b20:	b	13af4 <__printf_chk@plt+0x1360>
   13b24:	bl	12140 <strtol@plt>
   13b28:	movw	r3, #65212	; 0xfebc
   13b2c:	movt	r3, #4
   13b30:	str	r0, [r3]
   13b34:	b	13af4 <__printf_chk@plt+0x1360>
   13b38:	bl	12140 <strtol@plt>
   13b3c:	movw	r3, #65212	; 0xfebc
   13b40:	movt	r3, #4
   13b44:	str	r0, [r3, #16]
   13b48:	b	13af4 <__printf_chk@plt+0x1360>
   13b4c:	bl	12140 <strtol@plt>
   13b50:	movw	r3, #65212	; 0xfebc
   13b54:	movt	r3, #4
   13b58:	str	r0, [r3, #12]
   13b5c:	b	13af4 <__printf_chk@plt+0x1360>
   13b60:	add	r4, r4, #1
   13b64:	cmp	r4, #6
   13b68:	beq	13b80 <__printf_chk@plt+0x13ec>
   13b6c:	ldr	r5, [r9, r4, lsl #2]
   13b70:	mov	r0, r5
   13b74:	bl	125e4 <strlen@plt>
   13b78:	mov	r2, r0
   13b7c:	b	13a8c <__printf_chk@plt+0x12f8>
   13b80:	movw	r1, #65196	; 0xfeac
   13b84:	movt	r1, #4
   13b88:	mov	r3, r6
   13b8c:	movw	r2, #27592	; 0x6bc8
   13b90:	ldr	r0, [r1]
   13b94:	movt	r2, #3
   13b98:	mov	r1, #1
   13b9c:	bl	122d8 <__fprintf_chk@plt>
   13ba0:	mov	r0, #1
   13ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ba8:	bl	12140 <strtol@plt>
   13bac:	movw	r3, #65212	; 0xfebc
   13bb0:	movt	r3, #4
   13bb4:	str	r0, [r3, #20]
   13bb8:	b	13af4 <__printf_chk@plt+0x1360>
   13bbc:	clz	r0, r0
   13bc0:	lsr	r0, r0, #5
   13bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13bc8:	push	{r4, lr}
   13bcc:	mov	r4, r0
   13bd0:	bl	2d92c <crc32@@Base+0x13ed4>
   13bd4:	cmp	r0, #0
   13bd8:	beq	13be4 <__printf_chk@plt+0x1450>
   13bdc:	mov	r0, #1
   13be0:	pop	{r4, pc}
   13be4:	mov	r0, r4
   13be8:	bl	1800c <__printf_chk@plt+0x5878>
   13bec:	clz	r0, r0
   13bf0:	lsr	r0, r0, #5
   13bf4:	pop	{r4, pc}
   13bf8:	subs	r0, r0, #8
   13bfc:	movne	r0, #1
   13c00:	bx	lr
   13c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c08:	sub	sp, sp, #12
   13c0c:	mov	r5, r1
   13c10:	mov	r9, r0
   13c14:	ldrb	r6, [sp, #56]	; 0x38
   13c18:	mov	r0, r1
   13c1c:	mov	sl, r2
   13c20:	mov	fp, r3
   13c24:	cmp	r6, #0
   13c28:	ldrb	r8, [sp, #52]	; 0x34
   13c2c:	moveq	r1, #2
   13c30:	movne	r1, #0
   13c34:	bl	121ac <__open_2@plt>
   13c38:	mov	r4, r0
   13c3c:	bl	126b0 <__errno_location@plt>
   13c40:	cmp	r4, #0
   13c44:	mov	r7, r0
   13c48:	blt	13d08 <__printf_chk@plt+0x1574>
   13c4c:	ldr	r2, [sp, #48]	; 0x30
   13c50:	mov	r1, r4
   13c54:	mov	r0, #3
   13c58:	bl	12578 <__fxstat@plt>
   13c5c:	cmp	r0, #0
   13c60:	blt	13d84 <__printf_chk@plt+0x15f0>
   13c64:	ldr	r3, [sp, #48]	; 0x30
   13c68:	cmp	sl, #0
   13c6c:	ldr	r1, [r3, #44]	; 0x2c
   13c70:	bne	13d60 <__printf_chk@plt+0x15cc>
   13c74:	cmp	r6, #0
   13c78:	mov	r3, #0
   13c7c:	mov	r0, r3
   13c80:	str	r3, [r7]
   13c84:	moveq	r2, #3
   13c88:	movne	r2, #1
   13c8c:	str	r3, [sp, #4]
   13c90:	mov	r3, #1
   13c94:	str	r4, [sp]
   13c98:	bl	12410 <mmap@plt>
   13c9c:	ldr	r2, [r7]
   13ca0:	cmn	r0, #1
   13ca4:	mov	r6, r0
   13ca8:	beq	13cb4 <__printf_chk@plt+0x1520>
   13cac:	cmp	r2, #0
   13cb0:	beq	13dbc <__printf_chk@plt+0x1628>
   13cb4:	movw	r3, #65196	; 0xfeac
   13cb8:	movt	r3, #4
   13cbc:	mov	r0, r2
   13cc0:	ldr	r6, [r3]
   13cc4:	bl	12224 <strerror@plt>
   13cc8:	movw	r2, #27772	; 0x6c7c
   13ccc:	str	r5, [sp]
   13cd0:	mov	r3, r9
   13cd4:	movt	r2, #3
   13cd8:	mov	r1, #1
   13cdc:	str	r0, [sp, #4]
   13ce0:	mov	r0, r6
   13ce4:	bl	122d8 <__fprintf_chk@plt>
   13ce8:	mov	r0, r4
   13cec:	bl	12338 <close@plt>
   13cf0:	cmp	r8, #0
   13cf4:	mvneq	r4, #0
   13cf8:	bne	13d48 <__printf_chk@plt+0x15b4>
   13cfc:	mov	r0, r4
   13d00:	add	sp, sp, #12
   13d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d08:	movw	r3, #65196	; 0xfeac
   13d0c:	movt	r3, #4
   13d10:	ldr	r0, [r0]
   13d14:	ldr	r4, [r3]
   13d18:	bl	12224 <strerror@plt>
   13d1c:	str	r5, [sp]
   13d20:	mov	r3, r9
   13d24:	movw	r2, #26168	; 0x6638
   13d28:	mov	r1, #1
   13d2c:	movt	r2, #3
   13d30:	str	r0, [sp, #4]
   13d34:	mov	r0, r4
   13d38:	bl	122d8 <__fprintf_chk@plt>
   13d3c:	cmp	r8, #0
   13d40:	mvneq	r4, #0
   13d44:	beq	13cfc <__printf_chk@plt+0x1568>
   13d48:	mov	r0, r5
   13d4c:	mvn	r4, #0
   13d50:	bl	123c8 <unlink@plt>
   13d54:	mov	r0, r4
   13d58:	add	sp, sp, #12
   13d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d60:	add	r1, sl, r1
   13d64:	mov	r0, r4
   13d68:	str	r1, [r3, #44]	; 0x2c
   13d6c:	bl	120b0 <ftruncate@plt>
   13d70:	cmp	r0, #0
   13d74:	bne	13dd8 <__printf_chk@plt+0x1644>
   13d78:	ldr	r3, [sp, #48]	; 0x30
   13d7c:	ldr	r1, [r3, #44]	; 0x2c
   13d80:	b	13c74 <__printf_chk@plt+0x14e0>
   13d84:	movw	r3, #65196	; 0xfeac
   13d88:	movt	r3, #4
   13d8c:	ldr	r0, [r7]
   13d90:	ldr	r6, [r3]
   13d94:	bl	12224 <strerror@plt>
   13d98:	str	r5, [sp]
   13d9c:	mov	r3, r9
   13da0:	movw	r2, #26192	; 0x6650
   13da4:	mov	r1, #1
   13da8:	movt	r2, #3
   13dac:	str	r0, [sp, #4]
   13db0:	mov	r0, r6
   13db4:	bl	122d8 <__fprintf_chk@plt>
   13db8:	b	13ce8 <__printf_chk@plt+0x1554>
   13dbc:	bl	2d92c <crc32@@Base+0x13ed4>
   13dc0:	cmp	r0, #0
   13dc4:	bne	13e10 <__printf_chk@plt+0x167c>
   13dc8:	cmp	sl, #0
   13dcc:	bne	13e34 <__printf_chk@plt+0x16a0>
   13dd0:	str	r6, [fp]
   13dd4:	b	13cfc <__printf_chk@plt+0x1568>
   13dd8:	movw	r3, #65196	; 0xfeac
   13ddc:	movt	r3, #4
   13de0:	ldr	r0, [r7]
   13de4:	ldr	r6, [r3]
   13de8:	bl	12224 <strerror@plt>
   13dec:	str	r5, [sp]
   13df0:	mov	r3, r9
   13df4:	movw	r2, #27744	; 0x6c60
   13df8:	mov	r1, #1
   13dfc:	movt	r2, #3
   13e00:	str	r0, [sp, #4]
   13e04:	mov	r0, r6
   13e08:	bl	122d8 <__fprintf_chk@plt>
   13e0c:	b	13ce8 <__printf_chk@plt+0x1554>
   13e10:	movw	r1, #65196	; 0xfeac
   13e14:	movt	r1, #4
   13e18:	mov	r3, r9
   13e1c:	movw	r2, #27796	; 0x6c94
   13e20:	ldr	r0, [r1]
   13e24:	movt	r2, #3
   13e28:	mov	r1, #1
   13e2c:	bl	122d8 <__fprintf_chk@plt>
   13e30:	b	13ce8 <__printf_chk@plt+0x1554>
   13e34:	ldr	r3, [sp, #48]	; 0x30
   13e38:	mov	r1, r6
   13e3c:	mov	r0, r6
   13e40:	ldr	r2, [r3, #44]	; 0x2c
   13e44:	bl	2f6a0 <crc32@@Base+0x15c48>
   13e48:	cmp	r0, #0
   13e4c:	beq	13dd0 <__printf_chk@plt+0x163c>
   13e50:	movw	r3, #65196	; 0xfeac
   13e54:	movt	r3, #4
   13e58:	ldr	r6, [r3]
   13e5c:	bl	2fac0 <crc32@@Base+0x16068>
   13e60:	mov	r3, r9
   13e64:	movw	r2, #27820	; 0x6cac
   13e68:	mov	r1, #1
   13e6c:	movt	r2, #3
   13e70:	str	r0, [sp]
   13e74:	mov	r0, r6
   13e78:	bl	122d8 <__fprintf_chk@plt>
   13e7c:	b	13ce8 <__printf_chk@plt+0x1554>
   13e80:	push	{r2, r3}
   13e84:	mov	r3, #100	; 0x64
   13e88:	push	{r4, r5, r6, lr}
   13e8c:	sub	sp, sp, #120	; 0x78
   13e90:	movw	r4, #61168	; 0xeef0
   13e94:	movt	r4, #4
   13e98:	ldr	r2, [sp, #136]	; 0x88
   13e9c:	add	ip, sp, #140	; 0x8c
   13ea0:	ldr	lr, [r4]
   13ea4:	mov	r5, r0
   13ea8:	str	ip, [sp, #4]
   13eac:	mov	r6, r1
   13eb0:	str	r2, [sp]
   13eb4:	mov	r1, r3
   13eb8:	mov	r2, #1
   13ebc:	add	r0, sp, #16
   13ec0:	str	lr, [sp, #116]	; 0x74
   13ec4:	str	ip, [sp, #12]
   13ec8:	bl	12254 <__vsnprintf_chk@plt>
   13ecc:	add	r0, sp, #16
   13ed0:	bl	125e4 <strlen@plt>
   13ed4:	add	r2, sp, #16
   13ed8:	mov	r1, r6
   13edc:	add	r3, r0, #1
   13ee0:	mov	r0, r5
   13ee4:	bl	2e770 <crc32@@Base+0x14d18>
   13ee8:	ldr	r2, [sp, #116]	; 0x74
   13eec:	ldr	r3, [r4]
   13ef0:	cmp	r2, r3
   13ef4:	bne	13f08 <__printf_chk@plt+0x1774>
   13ef8:	add	sp, sp, #120	; 0x78
   13efc:	pop	{r4, r5, r6, lr}
   13f00:	add	sp, sp, #8
   13f04:	bx	lr
   13f08:	bl	124b8 <__stack_chk_fail@plt>
   13f0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f10:	movw	r9, #61168	; 0xeef0
   13f14:	movt	r9, #4
   13f18:	sub	sp, sp, #24
   13f1c:	mov	r8, r1
   13f20:	mov	r7, r0
   13f24:	ldr	r3, [r9]
   13f28:	str	r3, [sp, #20]
   13f2c:	bl	1800c <__printf_chk@plt+0x5878>
   13f30:	cmp	r0, #0
   13f34:	beq	14080 <__printf_chk@plt+0x18ec>
   13f38:	movw	r1, #27888	; 0x6cf0
   13f3c:	mov	r0, r7
   13f40:	movt	r1, #3
   13f44:	bl	31560 <crc32@@Base+0x17b08>
   13f48:	subs	r4, r0, #0
   13f4c:	blt	14094 <__printf_chk@plt+0x1900>
   13f50:	mov	r1, r4
   13f54:	mov	r0, r7
   13f58:	bl	165c8 <__printf_chk@plt+0x3e34>
   13f5c:	ldr	r2, [r8, #20]
   13f60:	cmp	r2, r0
   13f64:	movlt	r0, #0
   13f68:	movge	r0, #1
   13f6c:	orrs	r5, r0, r2, lsr #31
   13f70:	bne	14068 <__printf_chk@plt+0x18d4>
   13f74:	add	sl, sp, #24
   13f78:	mov	r1, r4
   13f7c:	mov	r0, r7
   13f80:	str	r5, [sl, #-16]!
   13f84:	mov	r2, sl
   13f88:	bl	2dc88 <crc32@@Base+0x14230>
   13f8c:	subs	r6, r0, #0
   13f90:	bge	13fc8 <__printf_chk@plt+0x1834>
   13f94:	b	13fd4 <__printf_chk@plt+0x1840>
   13f98:	cmp	r4, #1
   13f9c:	bne	13fb0 <__printf_chk@plt+0x181c>
   13fa0:	ldr	r3, [r8, #20]
   13fa4:	cmp	r3, r5
   13fa8:	beq	13ff0 <__printf_chk@plt+0x185c>
   13fac:	add	r5, r5, #1
   13fb0:	mov	r1, r6
   13fb4:	mov	r2, sl
   13fb8:	mov	r0, r7
   13fbc:	bl	2dc88 <crc32@@Base+0x14230>
   13fc0:	subs	r6, r0, #0
   13fc4:	blt	13fd4 <__printf_chk@plt+0x1840>
   13fc8:	ldr	r4, [sp, #8]
   13fcc:	cmp	r4, #0
   13fd0:	bgt	13f98 <__printf_chk@plt+0x1804>
   13fd4:	mov	r0, #0
   13fd8:	ldr	r2, [sp, #20]
   13fdc:	ldr	r3, [r9]
   13fe0:	cmp	r2, r3
   13fe4:	bne	140bc <__printf_chk@plt+0x1928>
   13fe8:	add	sp, sp, #24
   13fec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ff0:	mov	r1, r6
   13ff4:	mov	r2, #0
   13ff8:	mov	r0, r7
   13ffc:	bl	30f04 <crc32@@Base+0x174ac>
   14000:	mov	r3, r5
   14004:	movw	r2, #46860	; 0xb70c
   14008:	movw	r1, #27968	; 0x6d40
   1400c:	movt	r2, #3
   14010:	movt	r1, #3
   14014:	str	r0, [sp]
   14018:	mov	r0, r4
   1401c:	bl	12794 <__printf_chk@plt>
   14020:	mov	r1, r6
   14024:	mov	r0, r7
   14028:	movw	r2, #46860	; 0xb70c
   1402c:	movt	r2, #3
   14030:	bl	16e0c <__printf_chk@plt+0x4678>
   14034:	ldr	r4, [r8, #84]	; 0x54
   14038:	add	r3, sp, #24
   1403c:	mov	r1, r6
   14040:	mov	ip, #0
   14044:	add	r2, sp, #12
   14048:	mov	r0, r7
   1404c:	str	ip, [r3, #-8]!
   14050:	bl	16bd4 <__printf_chk@plt+0x4440>
   14054:	mov	r0, r4
   14058:	ldr	r2, [sp, #16]
   1405c:	ldr	r1, [sp, #12]
   14060:	bl	1ab7c <crc32@@Base+0x1124>
   14064:	b	13fd8 <__printf_chk@plt+0x1844>
   14068:	movw	r1, #27940	; 0x6d24
   1406c:	mov	r0, #1
   14070:	movt	r1, #3
   14074:	bl	12794 <__printf_chk@plt>
   14078:	mvn	r0, #0
   1407c:	b	13fd8 <__printf_chk@plt+0x1844>
   14080:	movw	r0, #27864	; 0x6cd8
   14084:	movt	r0, #3
   14088:	bl	12290 <puts@plt>
   1408c:	mvn	r0, #0
   14090:	b	13fd8 <__printf_chk@plt+0x1844>
   14094:	bl	2fac0 <crc32@@Base+0x16068>
   14098:	movw	r2, #27888	; 0x6cf0
   1409c:	movw	r1, #27896	; 0x6cf8
   140a0:	movt	r2, #3
   140a4:	movt	r1, #3
   140a8:	mov	r3, r0
   140ac:	mov	r0, #1
   140b0:	bl	12794 <__printf_chk@plt>
   140b4:	mvn	r0, #0
   140b8:	b	13fd8 <__printf_chk@plt+0x1844>
   140bc:	bl	124b8 <__stack_chk_fail@plt>
   140c0:	ldrb	r2, [r0, #112]	; 0x70
   140c4:	mov	r3, r0
   140c8:	cmp	r2, #0
   140cc:	bne	14110 <__printf_chk@plt+0x197c>
   140d0:	ldr	r2, [r0]
   140d4:	ldr	r0, [r0, #8]
   140d8:	cmp	r2, #0
   140dc:	beq	140f8 <__printf_chk@plt+0x1964>
   140e0:	cmp	r0, #0
   140e4:	bne	14118 <__printf_chk@plt+0x1984>
   140e8:	ldr	r0, [r3, #16]
   140ec:	adds	r0, r0, #0
   140f0:	movne	r0, #1
   140f4:	bx	lr
   140f8:	cmp	r0, #0
   140fc:	ldr	r3, [r3, #16]
   14100:	bxeq	lr
   14104:	adds	r0, r3, #0
   14108:	movne	r0, #1
   1410c:	bx	lr
   14110:	mov	r0, #0
   14114:	bx	lr
   14118:	mov	r0, #1
   1411c:	bx	lr
   14120:	push	{r4, r5, r6, r7, r8, lr}
   14124:	movw	r4, #61168	; 0xeef0
   14128:	movt	r4, #4
   1412c:	sub	sp, sp, #112	; 0x70
   14130:	mov	r8, r0
   14134:	mov	r7, r1
   14138:	ldr	r3, [r4]
   1413c:	mov	r0, r2
   14140:	mov	r1, #2
   14144:	mov	r6, r2
   14148:	str	r3, [sp, #108]	; 0x6c
   1414c:	bl	12458 <open@plt>
   14150:	subs	r5, r0, #0
   14154:	blt	1425c <__printf_chk@plt+0x1ac8>
   14158:	add	r2, sp, #16
   1415c:	mov	r1, r5
   14160:	mov	r0, #3
   14164:	bl	12578 <__fxstat@plt>
   14168:	cmp	r0, #0
   1416c:	blt	141d0 <__printf_chk@plt+0x1a3c>
   14170:	mov	r0, r7
   14174:	movw	r1, #41356	; 0xa18c
   14178:	add	r3, sp, #12
   1417c:	movt	r1, #3
   14180:	ldr	r2, [sp, #60]	; 0x3c
   14184:	bl	2e5a4 <crc32@@Base+0x14b4c>
   14188:	subs	r7, r0, #0
   1418c:	bne	1420c <__printf_chk@plt+0x1a78>
   14190:	ldr	r2, [sp, #60]	; 0x3c
   14194:	mov	r0, r5
   14198:	ldr	r1, [sp, #12]
   1419c:	bl	12368 <read@plt>
   141a0:	ldr	r3, [sp, #60]	; 0x3c
   141a4:	cmp	r0, r3
   141a8:	bne	1421c <__printf_chk@plt+0x1a88>
   141ac:	mov	r0, r5
   141b0:	bl	12338 <close@plt>
   141b4:	ldr	r2, [sp, #108]	; 0x6c
   141b8:	mov	r0, r7
   141bc:	ldr	r3, [r4]
   141c0:	cmp	r2, r3
   141c4:	bne	142a0 <__printf_chk@plt+0x1b0c>
   141c8:	add	sp, sp, #112	; 0x70
   141cc:	pop	{r4, r5, r6, r7, r8, pc}
   141d0:	movw	r2, #65196	; 0xfeac
   141d4:	movt	r2, #4
   141d8:	ldr	r8, [r8]
   141dc:	ldr	r7, [r2]
   141e0:	bl	126b0 <__errno_location@plt>
   141e4:	ldr	r0, [r0]
   141e8:	bl	12224 <strerror@plt>
   141ec:	movw	r2, #26192	; 0x6650
   141f0:	mov	r3, r8
   141f4:	str	r6, [sp]
   141f8:	movt	r2, #3
   141fc:	mov	r1, #1
   14200:	str	r0, [sp, #4]
   14204:	mov	r0, r7
   14208:	bl	122d8 <__fprintf_chk@plt>
   1420c:	mov	r0, r5
   14210:	mvn	r7, #0
   14214:	bl	12338 <close@plt>
   14218:	b	141b4 <__printf_chk@plt+0x1a20>
   1421c:	movw	r2, #65196	; 0xfeac
   14220:	movt	r2, #4
   14224:	ldr	r8, [r8]
   14228:	ldr	r7, [r2]
   1422c:	bl	126b0 <__errno_location@plt>
   14230:	ldr	r0, [r0]
   14234:	bl	12224 <strerror@plt>
   14238:	mov	r3, r8
   1423c:	str	r6, [sp]
   14240:	movw	r2, #27772	; 0x6c7c
   14244:	mov	r1, #1
   14248:	movt	r2, #3
   1424c:	str	r0, [sp, #4]
   14250:	mov	r0, r7
   14254:	bl	122d8 <__fprintf_chk@plt>
   14258:	b	1420c <__printf_chk@plt+0x1a78>
   1425c:	movw	r2, #65196	; 0xfeac
   14260:	movt	r2, #4
   14264:	ldr	r8, [r8]
   14268:	mvn	r7, #0
   1426c:	ldr	r5, [r2]
   14270:	bl	126b0 <__errno_location@plt>
   14274:	ldr	r0, [r0]
   14278:	bl	12224 <strerror@plt>
   1427c:	mov	r3, r8
   14280:	str	r6, [sp]
   14284:	movw	r2, #26168	; 0x6638
   14288:	mov	r1, #1
   1428c:	movt	r2, #3
   14290:	str	r0, [sp, #4]
   14294:	mov	r0, r5
   14298:	bl	122d8 <__fprintf_chk@plt>
   1429c:	b	141b4 <__printf_chk@plt+0x1a20>
   142a0:	bl	124b8 <__stack_chk_fail@plt>
   142a4:	push	{r4, r5, r6, r7, r8, lr}
   142a8:	mov	r6, r1
   142ac:	mov	r7, r0
   142b0:	mov	r1, #47	; 0x2f
   142b4:	mov	r0, r6
   142b8:	bl	12710 <strrchr@plt>
   142bc:	mov	r1, #46	; 0x2e
   142c0:	cmp	r0, #0
   142c4:	addne	r5, r0, #1
   142c8:	mov	r0, r6
   142cc:	moveq	r5, r6
   142d0:	bl	12710 <strrchr@plt>
   142d4:	cmp	r0, #0
   142d8:	beq	14304 <__printf_chk@plt+0x1b70>
   142dc:	sub	r4, r0, r5
   142e0:	mov	r1, r5
   142e4:	cmp	r4, #99	; 0x63
   142e8:	mov	r0, r7
   142ec:	movge	r4, #99	; 0x63
   142f0:	mov	r2, r4
   142f4:	bl	125c0 <memcpy@plt>
   142f8:	mov	r3, #0
   142fc:	strb	r3, [r7, r4]
   14300:	pop	{r4, r5, r6, r7, r8, pc}
   14304:	mov	r0, r6
   14308:	bl	125e4 <strlen@plt>
   1430c:	add	r0, r6, r0
   14310:	b	142dc <__printf_chk@plt+0x1b48>
   14314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14318:	movw	r3, #61168	; 0xeef0
   1431c:	sub	sp, sp, #1020	; 0x3fc
   14320:	movt	r3, #4
   14324:	ldr	r5, [r0, #76]	; 0x4c
   14328:	mov	r4, r0
   1432c:	str	r3, [sp, #28]
   14330:	ldr	r3, [r3]
   14334:	mov	r0, r5
   14338:	str	r3, [sp, #1012]	; 0x3f4
   1433c:	bl	125e4 <strlen@plt>
   14340:	add	r0, r0, #5
   14344:	cmp	r0, #256	; 0x100
   14348:	bhi	1449c <__printf_chk@plt+0x1d08>
   1434c:	str	r5, [sp]
   14350:	movw	r2, #28064	; 0x6da0
   14354:	movw	r3, #28056	; 0x6d98
   14358:	movt	r2, #3
   1435c:	movt	r3, #3
   14360:	str	r2, [sp, #4]
   14364:	add	r0, sp, #244	; 0xf4
   14368:	mov	r2, #256	; 0x100
   1436c:	mov	r1, #1
   14370:	bl	12704 <__sprintf_chk@plt>
   14374:	ldrb	r3, [r4, #112]	; 0x70
   14378:	cmp	r3, #0
   1437c:	bne	144cc <__printf_chk@plt+0x1d38>
   14380:	ldr	r2, [r4, #72]	; 0x48
   14384:	cmp	r2, #0
   14388:	beq	14870 <__printf_chk@plt+0x20dc>
   1438c:	ldr	ip, [r4, #52]	; 0x34
   14390:	add	r6, sp, #500	; 0x1f4
   14394:	mov	r3, #512	; 0x200
   14398:	str	r2, [sp, #16]
   1439c:	movw	r1, #28432	; 0x6f10
   143a0:	add	r2, sp, #244	; 0xf4
   143a4:	movt	r1, #3
   143a8:	str	r2, [sp, #12]
   143ac:	str	r1, [sp, #4]
   143b0:	movw	r2, #28436	; 0x6f14
   143b4:	mov	r0, r6
   143b8:	movt	r2, #3
   143bc:	str	ip, [sp, #8]
   143c0:	mov	r1, r3
   143c4:	str	r2, [sp]
   143c8:	mov	r2, #1
   143cc:	bl	125f0 <__snprintf_chk@plt>
   143d0:	ldrb	r3, [sp, #500]	; 0x1f4
   143d4:	cmp	r3, #0
   143d8:	beq	143ec <__printf_chk@plt+0x1c58>
   143dc:	mov	r0, r6
   143e0:	bl	123ec <system@plt>
   143e4:	cmn	r0, #1
   143e8:	beq	150c8 <__printf_chk@plt+0x2934>
   143ec:	add	fp, sp, #64	; 0x40
   143f0:	ldr	r0, [r4, #80]	; 0x50
   143f4:	mov	r2, #0
   143f8:	add	r1, sp, #152	; 0x98
   143fc:	mov	r3, fp
   14400:	str	r1, [sp]
   14404:	str	r2, [sp, #8]
   14408:	add	r1, sp, #244	; 0xf4
   1440c:	str	r2, [sp, #4]
   14410:	bl	13c04 <__printf_chk@plt+0x1470>
   14414:	subs	r8, r0, #0
   14418:	blt	14470 <__printf_chk@plt+0x1cdc>
   1441c:	ldr	r6, [sp, #196]	; 0xc4
   14420:	ldr	r9, [sp, #64]	; 0x40
   14424:	add	r6, r6, #16384	; 0x4000
   14428:	mov	r0, r6
   1442c:	ldr	r7, [r9, #4]
   14430:	bl	125cc <malloc@plt>
   14434:	subs	r5, r0, #0
   14438:	beq	145d4 <__printf_chk@plt+0x1e40>
   1443c:	mov	r2, r6
   14440:	mov	r0, r9
   14444:	mov	r1, r5
   14448:	bl	2f6a0 <crc32@@Base+0x15c48>
   1444c:	cmp	r0, #0
   14450:	beq	14600 <__printf_chk@plt+0x1e6c>
   14454:	mov	r0, r8
   14458:	bl	12338 <close@plt>
   1445c:	ldr	r1, [sp, #196]	; 0xc4
   14460:	ldr	r0, [sp, #64]	; 0x40
   14464:	bl	12608 <munmap@plt>
   14468:	mov	r0, r5
   1446c:	bl	1214c <free@plt>
   14470:	add	r0, sp, #244	; 0xf4
   14474:	mvn	r8, #0
   14478:	bl	123c8 <unlink@plt>
   1447c:	ldr	r3, [sp, #28]
   14480:	mov	r0, r8
   14484:	ldr	r2, [sp, #1012]	; 0x3f4
   14488:	ldr	r3, [r3]
   1448c:	cmp	r2, r3
   14490:	bne	15108 <__printf_chk@plt+0x2974>
   14494:	add	sp, sp, #1020	; 0x3fc
   14498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1449c:	ldr	ip, [r4, #80]	; 0x50
   144a0:	movw	r2, #65196	; 0xfeac
   144a4:	movt	r2, #4
   144a8:	mov	r1, #1
   144ac:	mov	r3, r5
   144b0:	mov	r8, r1
   144b4:	ldr	r0, [r2]
   144b8:	movw	r2, #28000	; 0x6d60
   144bc:	str	ip, [sp]
   144c0:	movt	r2, #3
   144c4:	bl	122d8 <__fprintf_chk@plt>
   144c8:	b	1447c <__printf_chk@plt+0x1ce8>
   144cc:	ldr	r1, [r4, #72]	; 0x48
   144d0:	mov	r0, r4
   144d4:	bl	1ac4c <crc32@@Base+0x11f4>
   144d8:	subs	r6, r0, #0
   144dc:	blt	14538 <__printf_chk@plt+0x1da4>
   144e0:	ldr	r1, [r4, #120]	; 0x78
   144e4:	cmp	r1, #0
   144e8:	beq	14500 <__printf_chk@plt+0x1d6c>
   144ec:	mov	r0, r4
   144f0:	bl	1ac4c <crc32@@Base+0x11f4>
   144f4:	cmp	r0, #0
   144f8:	addge	r6, r6, r0
   144fc:	blt	14538 <__printf_chk@plt+0x1da4>
   14500:	ldr	r5, [r4, #124]	; 0x7c
   14504:	cmp	r5, #0
   14508:	bne	14524 <__printf_chk@plt+0x1d90>
   1450c:	b	14560 <__printf_chk@plt+0x1dcc>
   14510:	ldr	r5, [r5]
   14514:	add	r0, r0, #300	; 0x12c
   14518:	add	r6, r6, r0
   1451c:	cmp	r5, #0
   14520:	beq	14560 <__printf_chk@plt+0x1dcc>
   14524:	ldr	r1, [r5, #8]
   14528:	mov	r0, r4
   1452c:	bl	1ac4c <crc32@@Base+0x11f4>
   14530:	cmp	r0, #0
   14534:	bge	14510 <__printf_chk@plt+0x1d7c>
   14538:	movw	r7, #65196	; 0xfeac
   1453c:	movt	r7, #4
   14540:	mov	r1, #1
   14544:	ldr	r3, [r4, #80]	; 0x50
   14548:	movw	r2, #28404	; 0x6ef4
   1454c:	ldr	r0, [r7]
   14550:	movt	r2, #3
   14554:	mov	r8, r1
   14558:	bl	122d8 <__fprintf_chk@plt>
   1455c:	b	1447c <__printf_chk@plt+0x1ce8>
   14560:	add	r6, r6, #4096	; 0x1000
   14564:	mov	r0, r6
   14568:	bl	125cc <malloc@plt>
   1456c:	subs	r5, r0, #0
   14570:	beq	150a0 <__printf_chk@plt+0x290c>
   14574:	mov	r1, r6
   14578:	bl	2e210 <crc32@@Base+0x147b8>
   1457c:	subs	r7, r0, #0
   14580:	beq	148a8 <__printf_chk@plt+0x2114>
   14584:	cmp	r7, #0
   14588:	blt	15038 <__printf_chk@plt+0x28a4>
   1458c:	movw	r2, #438	; 0x1b6
   14590:	movw	r1, #578	; 0x242
   14594:	add	r0, sp, #244	; 0xf4
   14598:	bl	12458 <open@plt>
   1459c:	subs	r6, r0, #0
   145a0:	blt	1505c <__printf_chk@plt+0x28c8>
   145a4:	mov	r2, r7
   145a8:	mov	r1, r5
   145ac:	bl	1262c <write@plt>
   145b0:	cmp	r0, r7
   145b4:	bne	14fdc <__printf_chk@plt+0x2848>
   145b8:	mov	r0, r6
   145bc:	bl	12338 <close@plt>
   145c0:	mov	r0, r5
   145c4:	bl	1214c <free@plt>
   145c8:	mov	r3, #0
   145cc:	strb	r3, [sp, #500]	; 0x1f4
   145d0:	b	143ec <__printf_chk@plt+0x1c58>
   145d4:	movw	r2, #65196	; 0xfeac
   145d8:	movt	r2, #4
   145dc:	str	r6, [sp]
   145e0:	movw	r3, #27848	; 0x6cc8
   145e4:	ldr	r0, [r2]
   145e8:	movt	r3, #3
   145ec:	movw	r2, #28500	; 0x6f54
   145f0:	mov	r1, #1
   145f4:	movt	r2, #3
   145f8:	bl	122d8 <__fprintf_chk@plt>
   145fc:	b	14454 <__printf_chk@plt+0x1cc0>
   14600:	movw	r1, #27888	; 0x6cf0
   14604:	mov	r0, r5
   14608:	movt	r1, #3
   1460c:	bl	31560 <crc32@@Base+0x17b08>
   14610:	subs	r1, r0, #0
   14614:	blt	14454 <__printf_chk@plt+0x1cc0>
   14618:	mov	r0, r5
   1461c:	bl	2dd78 <crc32@@Base+0x14320>
   14620:	subs	r6, r0, #0
   14624:	blt	146d8 <__printf_chk@plt+0x1f44>
   14628:	lsr	r2, r7, #24
   1462c:	ubfx	r3, r7, #8, #8
   14630:	orr	r2, r2, r7, lsl #24
   14634:	ubfx	r7, r7, #16, #8
   14638:	orr	r3, r2, r3, lsl #16
   1463c:	movw	sl, #28544	; 0x6f80
   14640:	orr	r7, r3, r7, lsl #8
   14644:	movw	r9, #28556	; 0x6f8c
   14648:	add	r3, r7, #3
   1464c:	movt	sl, #3
   14650:	bic	r3, r3, #3
   14654:	movt	r9, #3
   14658:	str	r4, [sp, #32]
   1465c:	mov	r4, r3
   14660:	mvn	r3, #0
   14664:	mov	r2, sl
   14668:	mov	r1, r6
   1466c:	mov	r0, r5
   14670:	bl	19da4 <crc32@@Base+0x34c>
   14674:	mvn	r3, #0
   14678:	mov	r2, r9
   1467c:	mov	r1, r6
   14680:	mov	r7, r0
   14684:	mov	r0, r5
   14688:	bl	19da4 <crc32@@Base+0x34c>
   1468c:	cmn	r7, #1
   14690:	cmnne	r0, #1
   14694:	beq	146c0 <__printf_chk@plt+0x1f2c>
   14698:	add	r3, r7, r4
   1469c:	str	r0, [sp]
   146a0:	add	r3, r5, r3
   146a4:	movw	r2, #41356	; 0xa18c
   146a8:	mov	r1, r6
   146ac:	movt	r2, #3
   146b0:	mov	r0, r5
   146b4:	bl	2f2b8 <crc32@@Base+0x15860>
   146b8:	cmp	r0, #0
   146bc:	bne	14454 <__printf_chk@plt+0x1cc0>
   146c0:	mov	r1, r6
   146c4:	mov	r0, r5
   146c8:	bl	2ddd8 <crc32@@Base+0x14380>
   146cc:	subs	r6, r0, #0
   146d0:	bge	14660 <__printf_chk@plt+0x1ecc>
   146d4:	ldr	r4, [sp, #32]
   146d8:	mov	r0, r8
   146dc:	bl	12338 <close@plt>
   146e0:	mov	r0, r5
   146e4:	bl	2f90c <crc32@@Base+0x15eb4>
   146e8:	movw	r2, #438	; 0x1b6
   146ec:	movw	r1, #578	; 0x242
   146f0:	add	r0, sp, #244	; 0xf4
   146f4:	ldr	r7, [r5, #4]
   146f8:	bl	12458 <open@plt>
   146fc:	subs	r8, r0, #0
   14700:	blt	14f0c <__printf_chk@plt+0x2778>
   14704:	ubfx	r3, r7, #8, #8
   14708:	lsr	r6, r7, #24
   1470c:	orr	r6, r6, r7, lsl #24
   14710:	ubfx	r7, r7, #16, #8
   14714:	orr	r6, r6, r3, lsl #16
   14718:	mov	r1, r5
   1471c:	orr	r6, r6, r7, lsl #8
   14720:	mov	r2, r6
   14724:	bl	1262c <write@plt>
   14728:	cmp	r6, r0
   1472c:	bne	14454 <__printf_chk@plt+0x1cc0>
   14730:	mov	r0, r8
   14734:	mov	r6, #0
   14738:	bl	12338 <close@plt>
   1473c:	ldr	r1, [sp, #196]	; 0xc4
   14740:	ldr	r0, [sp, #64]	; 0x40
   14744:	mov	r7, r6
   14748:	bl	12608 <munmap@plt>
   1474c:	mov	r0, r5
   14750:	bl	1214c <free@plt>
   14754:	b	14824 <__printf_chk@plt+0x2090>
   14758:	add	r3, sp, #152	; 0x98
   1475c:	str	r7, [sp, #8]
   14760:	str	r3, [sp]
   14764:	mov	r2, r6
   14768:	str	r7, [sp, #4]
   1476c:	add	r3, sp, #56	; 0x38
   14770:	bl	13c04 <__printf_chk@plt+0x1470>
   14774:	subs	r5, r0, #0
   14778:	blt	14c40 <__printf_chk@plt+0x24ac>
   1477c:	ldr	sl, [sp, #196]	; 0xc4
   14780:	ldr	r0, [r4, #80]	; 0x50
   14784:	ldr	r3, [r4, #72]	; 0x48
   14788:	cmp	r3, #0
   1478c:	beq	147b4 <__printf_chk@plt+0x2020>
   14790:	ldr	r1, [sp, #128]	; 0x80
   14794:	bl	1ad50 <crc32@@Base+0x12f8>
   14798:	mov	r1, #0
   1479c:	mov	r2, r0
   147a0:	ldr	r0, [sp, #60]	; 0x3c
   147a4:	bl	177ec <__printf_chk@plt+0x5058>
   147a8:	subs	r8, r0, #0
   147ac:	bne	147e0 <__printf_chk@plt+0x204c>
   147b0:	ldr	r0, [r4, #80]	; 0x50
   147b4:	ldr	r8, [r4, #88]	; 0x58
   147b8:	ldr	lr, [r4, #140]	; 0x8c
   147bc:	ldr	ip, [r4, #100]	; 0x64
   147c0:	ldr	r3, [r4, #96]	; 0x60
   147c4:	ldr	r2, [sp, #60]	; 0x3c
   147c8:	str	r0, [sp, #8]
   147cc:	mov	r0, r8
   147d0:	ldr	r1, [sp, #56]	; 0x38
   147d4:	stm	sp, {ip, lr}
   147d8:	bl	16130 <__printf_chk@plt+0x399c>
   147dc:	mov	r8, r0
   147e0:	ldr	r0, [sp, #56]	; 0x38
   147e4:	cmp	r0, #0
   147e8:	beq	147fc <__printf_chk@plt+0x2068>
   147ec:	mov	r1, sl
   147f0:	bl	12608 <munmap@plt>
   147f4:	mov	r0, r5
   147f8:	bl	12338 <close@plt>
   147fc:	ldr	r1, [sp, #108]	; 0x6c
   14800:	ldr	r0, [sp, #60]	; 0x3c
   14804:	bl	12608 <munmap@plt>
   14808:	mov	r0, r9
   1480c:	bl	12338 <close@plt>
   14810:	cmn	r8, #28
   14814:	bne	1510c <__printf_chk@plt+0x2978>
   14818:	add	r6, r6, #1024	; 0x400
   1481c:	cmp	r6, #65536	; 0x10000
   14820:	beq	14c58 <__printf_chk@plt+0x24c4>
   14824:	ldr	r0, [r4, #80]	; 0x50
   14828:	mov	r1, #1
   1482c:	add	r3, sp, #60	; 0x3c
   14830:	str	r1, [sp, #4]
   14834:	str	r7, [sp, #8]
   14838:	mov	r2, r6
   1483c:	add	r1, sp, #244	; 0xf4
   14840:	str	fp, [sp]
   14844:	str	r7, [sp, #56]	; 0x38
   14848:	bl	13c04 <__printf_chk@plt+0x1470>
   1484c:	subs	r9, r0, #0
   14850:	blt	14c80 <__printf_chk@plt+0x24ec>
   14854:	ldr	r1, [r4, #92]	; 0x5c
   14858:	ldr	r0, [r4, #80]	; 0x50
   1485c:	cmp	r1, #0
   14860:	bne	14758 <__printf_chk@plt+0x1fc4>
   14864:	mov	r5, r1
   14868:	mov	sl, r1
   1486c:	b	14784 <__printf_chk@plt+0x1ff0>
   14870:	ldr	r1, [r4, #76]	; 0x4c
   14874:	add	r6, sp, #500	; 0x1f4
   14878:	mov	r3, #512	; 0x200
   1487c:	add	r2, sp, #244	; 0xf4
   14880:	mov	r0, r6
   14884:	str	r2, [sp, #8]
   14888:	str	r1, [sp, #4]
   1488c:	movw	r2, #28456	; 0x6f28
   14890:	mov	r1, r3
   14894:	movt	r2, #3
   14898:	str	r2, [sp]
   1489c:	mov	r2, #1
   148a0:	bl	125f0 <__snprintf_chk@plt>
   148a4:	b	143d0 <__printf_chk@plt+0x1c3c>
   148a8:	mov	r0, r5
   148ac:	add	r7, sp, #1016	; 0x3f8
   148b0:	bl	2e498 <crc32@@Base+0x14a40>
   148b4:	movw	r1, #46860	; 0xb70c
   148b8:	mov	r0, r5
   148bc:	movt	r1, #3
   148c0:	bl	2e4b8 <crc32@@Base+0x14a60>
   148c4:	ldrb	r0, [r4, #116]	; 0x74
   148c8:	bl	1a6e0 <crc32@@Base+0xc88>
   148cc:	movw	r2, #28104	; 0x6dc8
   148d0:	movw	r1, #28140	; 0x6dec
   148d4:	movt	r2, #3
   148d8:	movt	r1, #3
   148dc:	add	r6, sp, #500	; 0x1f4
   148e0:	add	sl, r4, #80	; 0x50
   148e4:	mov	r3, r0
   148e8:	mov	r0, r5
   148ec:	bl	13e80 <__printf_chk@plt+0x16ec>
   148f0:	movw	r3, #28152	; 0x6df8
   148f4:	movw	r2, #28160	; 0x6e00
   148f8:	movt	r3, #3
   148fc:	movt	r2, #3
   14900:	movw	r1, #28180	; 0x6e14
   14904:	mov	r0, r5
   14908:	movt	r1, #3
   1490c:	bl	13e80 <__printf_chk@plt+0x16ec>
   14910:	mov	r3, #16777216	; 0x1000000
   14914:	movw	r1, #28188	; 0x6e1c
   14918:	str	r3, [r7, #-864]!	; 0xfffffca0
   1491c:	movt	r1, #3
   14920:	mov	r2, r7
   14924:	mov	r3, #4
   14928:	mov	r0, r5
   1492c:	bl	2e770 <crc32@@Base+0x14d18>
   14930:	movw	r1, #28204	; 0x6e2c
   14934:	mov	r0, r5
   14938:	movt	r1, #3
   1493c:	bl	2e4b8 <crc32@@Base+0x14a60>
   14940:	ldrb	r0, [r4, #116]	; 0x74
   14944:	bl	1a734 <crc32@@Base+0xcdc>
   14948:	mov	r3, #100	; 0x64
   1494c:	mov	r1, r3
   14950:	movw	r2, #28212	; 0x6e34
   14954:	movt	r2, #3
   14958:	str	r2, [sp, #36]	; 0x24
   1495c:	str	r2, [sp]
   14960:	mov	r2, #1
   14964:	mov	r9, r0
   14968:	str	r0, [sp, #4]
   1496c:	mov	r0, r6
   14970:	bl	125f0 <__snprintf_chk@plt>
   14974:	mov	r1, r6
   14978:	mov	r0, r5
   1497c:	bl	2e4b8 <crc32@@Base+0x14a60>
   14980:	ldr	r8, [r4, #64]	; 0x40
   14984:	str	sl, [sp, #32]
   14988:	mov	r0, r8
   1498c:	bl	125e4 <strlen@plt>
   14990:	mov	r2, r8
   14994:	movw	r1, #28140	; 0x6dec
   14998:	movt	r1, #3
   1499c:	add	r3, r0, #1
   149a0:	mov	r0, r5
   149a4:	bl	2e770 <crc32@@Base+0x14d18>
   149a8:	mov	r0, r9
   149ac:	bl	125e4 <strlen@plt>
   149b0:	mov	r2, r9
   149b4:	movw	r1, #41296	; 0xa150
   149b8:	movt	r1, #3
   149bc:	add	r3, r0, #1
   149c0:	mov	r0, r5
   149c4:	bl	2e770 <crc32@@Base+0x14d18>
   149c8:	ldrb	r0, [r4, #40]	; 0x28
   149cc:	bl	1a884 <crc32@@Base+0xe2c>
   149d0:	mov	r8, r0
   149d4:	ldrb	r0, [r4, #40]	; 0x28
   149d8:	bl	1a884 <crc32@@Base+0xe2c>
   149dc:	bl	125e4 <strlen@plt>
   149e0:	mov	r2, r8
   149e4:	movw	r1, #28220	; 0x6e3c
   149e8:	movt	r1, #3
   149ec:	add	r3, r0, #1
   149f0:	mov	r0, r5
   149f4:	bl	2e770 <crc32@@Base+0x14d18>
   149f8:	ldrb	r0, [r4, #36]	; 0x24
   149fc:	bl	1a830 <crc32@@Base+0xdd8>
   14a00:	mov	r8, r0
   14a04:	ldrb	r0, [r4, #36]	; 0x24
   14a08:	bl	1a830 <crc32@@Base+0xdd8>
   14a0c:	bl	125e4 <strlen@plt>
   14a10:	mov	r2, r8
   14a14:	movw	r1, #36840	; 0x8fe8
   14a18:	movt	r1, #3
   14a1c:	add	r3, r0, #1
   14a20:	mov	r0, r5
   14a24:	bl	2e770 <crc32@@Base+0x14d18>
   14a28:	ldrb	r0, [r4, #48]	; 0x30
   14a2c:	bl	1a7dc <crc32@@Base+0xd84>
   14a30:	mov	r8, r0
   14a34:	ldrb	r0, [r4, #48]	; 0x30
   14a38:	bl	1a7dc <crc32@@Base+0xd84>
   14a3c:	bl	125e4 <strlen@plt>
   14a40:	mov	r2, r8
   14a44:	movw	r1, #28228	; 0x6e44
   14a48:	movt	r1, #3
   14a4c:	add	r3, r0, #1
   14a50:	mov	r0, r5
   14a54:	bl	2e770 <crc32@@Base+0x14d18>
   14a58:	ldr	r1, [r4, #56]	; 0x38
   14a5c:	mov	r2, r7
   14a60:	ubfx	ip, r1, #8, #8
   14a64:	ubfx	r3, r1, #16, #8
   14a68:	lsr	r0, r1, #24
   14a6c:	orr	r0, r0, r1, lsl #24
   14a70:	movw	r1, #28240	; 0x6e50
   14a74:	orr	r0, r0, ip, lsl #16
   14a78:	movt	r1, #3
   14a7c:	orr	r0, r0, r3, lsl #8
   14a80:	mov	r3, #4
   14a84:	str	r0, [sp, #152]	; 0x98
   14a88:	mov	r0, r5
   14a8c:	bl	2e770 <crc32@@Base+0x14d18>
   14a90:	ldr	r3, [r4, #60]	; 0x3c
   14a94:	mov	r2, r7
   14a98:	movw	r1, #28248	; 0x6e58
   14a9c:	ubfx	lr, r3, #8, #8
   14aa0:	ubfx	r0, r3, #16, #8
   14aa4:	lsr	ip, r3, #24
   14aa8:	movt	r1, #3
   14aac:	orr	ip, ip, r3, lsl #24
   14ab0:	mov	r3, #4
   14ab4:	orr	ip, ip, lr, lsl #16
   14ab8:	orr	ip, ip, r0, lsl #8
   14abc:	mov	r0, r5
   14ac0:	str	ip, [sp, #152]	; 0x98
   14ac4:	bl	2e770 <crc32@@Base+0x14d18>
   14ac8:	mov	r0, sl
   14acc:	ldr	r2, [r4, #72]	; 0x48
   14ad0:	mov	r1, r5
   14ad4:	bl	14120 <__printf_chk@plt+0x198c>
   14ad8:	subs	r7, r0, #0
   14adc:	bne	14584 <__printf_chk@plt+0x1df0>
   14ae0:	mov	r0, r5
   14ae4:	bl	2e544 <crc32@@Base+0x14aec>
   14ae8:	ldr	r8, [r4, #124]	; 0x7c
   14aec:	cmp	r8, #0
   14af0:	beq	14c8c <__printf_chk@plt+0x24f8>
   14af4:	movw	r3, #28256	; 0x6e60
   14af8:	movw	r2, #28260	; 0x6e64
   14afc:	movt	r3, #3
   14b00:	movt	r2, #3
   14b04:	str	r3, [sp, #40]	; 0x28
   14b08:	mov	fp, r7
   14b0c:	movw	r3, #28140	; 0x6dec
   14b10:	str	r2, [sp, #44]	; 0x2c
   14b14:	movt	r3, #3
   14b18:	str	r7, [sp, #52]	; 0x34
   14b1c:	str	r3, [sp, #48]	; 0x30
   14b20:	b	14b30 <__printf_chk@plt+0x239c>
   14b24:	ldr	r8, [r8]
   14b28:	cmp	r8, #0
   14b2c:	beq	14c88 <__printf_chk@plt+0x24f4>
   14b30:	ldr	r3, [r8, #4]
   14b34:	cmp	r3, #8
   14b38:	bne	14b24 <__printf_chk@plt+0x2390>
   14b3c:	ldr	r2, [sp, #40]	; 0x28
   14b40:	mov	r3, #100	; 0x64
   14b44:	ldr	r0, [sp, #44]	; 0x2c
   14b48:	mov	r1, r3
   14b4c:	add	fp, fp, #1
   14b50:	str	fp, [sp, #8]
   14b54:	str	r2, [sp, #4]
   14b58:	mov	r2, #1
   14b5c:	str	r0, [sp]
   14b60:	mov	r0, r6
   14b64:	bl	125f0 <__snprintf_chk@plt>
   14b68:	mov	r1, r6
   14b6c:	mov	r0, r5
   14b70:	bl	2e4b8 <crc32@@Base+0x14a60>
   14b74:	ldr	r1, [r8, #8]
   14b78:	mov	r0, r6
   14b7c:	bl	142a4 <__printf_chk@plt+0x1b10>
   14b80:	mov	r0, r6
   14b84:	bl	125e4 <strlen@plt>
   14b88:	mov	r2, r6
   14b8c:	ldr	r1, [sp, #48]	; 0x30
   14b90:	add	r3, r0, #1
   14b94:	mov	r0, r5
   14b98:	bl	2e770 <crc32@@Base+0x14d18>
   14b9c:	ldr	r2, [r8, #8]
   14ba0:	mov	r1, r5
   14ba4:	ldr	r0, [sp, #32]
   14ba8:	bl	14120 <__printf_chk@plt+0x198c>
   14bac:	subs	sl, r0, #0
   14bb0:	bne	15030 <__printf_chk@plt+0x289c>
   14bb4:	mov	r0, r9
   14bb8:	bl	125e4 <strlen@plt>
   14bbc:	mov	r2, r9
   14bc0:	movw	r1, #41296	; 0xa150
   14bc4:	movt	r1, #3
   14bc8:	add	r3, r0, #1
   14bcc:	mov	r0, r5
   14bd0:	bl	2e770 <crc32@@Base+0x14d18>
   14bd4:	ldrb	r0, [r4, #40]	; 0x28
   14bd8:	bl	1a884 <crc32@@Base+0xe2c>
   14bdc:	mov	r7, r0
   14be0:	ldrb	r0, [r4, #40]	; 0x28
   14be4:	bl	1a884 <crc32@@Base+0xe2c>
   14be8:	bl	125e4 <strlen@plt>
   14bec:	mov	r2, r7
   14bf0:	movw	r1, #28220	; 0x6e3c
   14bf4:	movt	r1, #3
   14bf8:	add	r3, r0, #1
   14bfc:	mov	r0, r5
   14c00:	bl	2e770 <crc32@@Base+0x14d18>
   14c04:	mov	r0, sl
   14c08:	bl	1a7dc <crc32@@Base+0xd84>
   14c0c:	mov	r7, r0
   14c10:	mov	r0, sl
   14c14:	bl	1a7dc <crc32@@Base+0xd84>
   14c18:	bl	125e4 <strlen@plt>
   14c1c:	mov	r2, r7
   14c20:	movw	r1, #28228	; 0x6e44
   14c24:	movt	r1, #3
   14c28:	add	r3, r0, #1
   14c2c:	mov	r0, r5
   14c30:	bl	2e770 <crc32@@Base+0x14d18>
   14c34:	mov	r0, r5
   14c38:	bl	2e544 <crc32@@Base+0x14aec>
   14c3c:	b	14b24 <__printf_chk@plt+0x2390>
   14c40:	ldr	r1, [sp, #108]	; 0x6c
   14c44:	mvn	r8, #4
   14c48:	ldr	r0, [sp, #60]	; 0x3c
   14c4c:	bl	12608 <munmap@plt>
   14c50:	mov	r0, r9
   14c54:	bl	12338 <close@plt>
   14c58:	movw	r1, #65196	; 0xfeac
   14c5c:	movt	r1, #4
   14c60:	ldr	r3, [r4, #80]	; 0x50
   14c64:	movw	r2, #28568	; 0x6f98
   14c68:	ldr	r0, [r1]
   14c6c:	movt	r2, #3
   14c70:	str	r8, [sp]
   14c74:	mov	r1, #1
   14c78:	bl	122d8 <__fprintf_chk@plt>
   14c7c:	b	14470 <__printf_chk@plt+0x1cdc>
   14c80:	mvn	r8, #4
   14c84:	b	14c58 <__printf_chk@plt+0x24c4>
   14c88:	ldr	r7, [sp, #52]	; 0x34
   14c8c:	ldr	r3, [r4, #120]	; 0x78
   14c90:	cmp	r3, #0
   14c94:	beq	14d18 <__printf_chk@plt+0x2584>
   14c98:	movw	r1, #28268	; 0x6e6c
   14c9c:	mov	r0, r5
   14ca0:	movt	r1, #3
   14ca4:	bl	2e4b8 <crc32@@Base+0x14a60>
   14ca8:	mov	r3, #8
   14cac:	movw	r2, #28280	; 0x6e78
   14cb0:	movw	r1, #41296	; 0xa150
   14cb4:	movt	r2, #3
   14cb8:	movt	r1, #3
   14cbc:	mov	r0, r5
   14cc0:	bl	2e770 <crc32@@Base+0x14d18>
   14cc4:	ldrb	r0, [r4, #36]	; 0x24
   14cc8:	bl	1a830 <crc32@@Base+0xdd8>
   14ccc:	mov	r8, r0
   14cd0:	ldrb	r0, [r4, #36]	; 0x24
   14cd4:	bl	1a830 <crc32@@Base+0xdd8>
   14cd8:	bl	125e4 <strlen@plt>
   14cdc:	mov	r2, r8
   14ce0:	movw	r1, #36840	; 0x8fe8
   14ce4:	movt	r1, #3
   14ce8:	add	r3, r0, #1
   14cec:	mov	r0, r5
   14cf0:	bl	2e770 <crc32@@Base+0x14d18>
   14cf4:	ldr	r0, [sp, #32]
   14cf8:	ldr	r2, [r4, #120]	; 0x78
   14cfc:	mov	r1, r5
   14d00:	bl	14120 <__printf_chk@plt+0x198c>
   14d04:	cmp	r0, #0
   14d08:	movne	r7, r0
   14d0c:	bne	14584 <__printf_chk@plt+0x1df0>
   14d10:	mov	r0, r5
   14d14:	bl	2e544 <crc32@@Base+0x14aec>
   14d18:	mov	r0, r5
   14d1c:	bl	2e544 <crc32@@Base+0x14aec>
   14d20:	movw	r1, #28288	; 0x6e80
   14d24:	mov	r0, r5
   14d28:	movt	r1, #3
   14d2c:	bl	2e4b8 <crc32@@Base+0x14a60>
   14d30:	movw	r2, #28304	; 0x6e90
   14d34:	movw	r1, #28312	; 0x6e98
   14d38:	movt	r2, #3
   14d3c:	movt	r1, #3
   14d40:	mov	r3, #7
   14d44:	mov	r0, r5
   14d48:	bl	2e770 <crc32@@Base+0x14d18>
   14d4c:	ldr	r8, [r4, #124]	; 0x7c
   14d50:	cmp	r8, #0
   14d54:	beq	14f50 <__printf_chk@plt+0x27bc>
   14d58:	movw	sl, #28320	; 0x6ea0
   14d5c:	movw	fp, #28140	; 0x6dec
   14d60:	movw	r3, #28328	; 0x6ea8
   14d64:	movt	sl, #3
   14d68:	movt	r3, #3
   14d6c:	movt	fp, #3
   14d70:	str	r3, [sp, #32]
   14d74:	b	14d84 <__printf_chk@plt+0x25f0>
   14d78:	ldr	r8, [r8]
   14d7c:	cmp	r8, #0
   14d80:	beq	14ec4 <__printf_chk@plt+0x2730>
   14d84:	ldr	r0, [r8, #4]
   14d88:	cmp	r0, #8
   14d8c:	bne	14d78 <__printf_chk@plt+0x25e4>
   14d90:	bl	1a734 <crc32@@Base+0xcdc>
   14d94:	mov	r3, #100	; 0x64
   14d98:	mov	r1, r3
   14d9c:	mov	r2, #1
   14da0:	add	r7, r7, #1
   14da4:	str	sl, [sp]
   14da8:	str	r7, [sp, #4]
   14dac:	mov	r0, r6
   14db0:	bl	125f0 <__snprintf_chk@plt>
   14db4:	mov	r1, r6
   14db8:	mov	r0, r5
   14dbc:	bl	2e4b8 <crc32@@Base+0x14a60>
   14dc0:	ldr	r1, [r8, #8]
   14dc4:	mov	r0, r6
   14dc8:	bl	142a4 <__printf_chk@plt+0x1b10>
   14dcc:	mov	r0, r6
   14dd0:	bl	125e4 <strlen@plt>
   14dd4:	mov	r2, r6
   14dd8:	mov	r1, fp
   14ddc:	add	r3, r0, #1
   14de0:	mov	r0, r5
   14de4:	bl	2e770 <crc32@@Base+0x14d18>
   14de8:	ldrb	r0, [r4, #116]	; 0x74
   14dec:	bl	1a734 <crc32@@Base+0xcdc>
   14df0:	ldr	r2, [sp, #36]	; 0x24
   14df4:	mov	r3, #100	; 0x64
   14df8:	mov	r1, r3
   14dfc:	str	r2, [sp]
   14e00:	mov	r2, #1
   14e04:	mov	r9, r0
   14e08:	str	r0, [sp, #4]
   14e0c:	mov	r0, r6
   14e10:	bl	125f0 <__snprintf_chk@plt>
   14e14:	mov	r0, r6
   14e18:	bl	125e4 <strlen@plt>
   14e1c:	mov	r1, r9
   14e20:	mov	r2, r6
   14e24:	add	r3, r0, #1
   14e28:	mov	r0, r5
   14e2c:	bl	2e770 <crc32@@Base+0x14d18>
   14e30:	mov	r0, r6
   14e34:	bl	125e4 <strlen@plt>
   14e38:	mov	r2, r6
   14e3c:	ldr	r1, [sp, #32]
   14e40:	add	r3, r0, #1
   14e44:	mov	r0, r5
   14e48:	bl	2e770 <crc32@@Base+0x14d18>
   14e4c:	ldr	r3, [r4, #120]	; 0x78
   14e50:	cmp	r3, #0
   14e54:	beq	14e74 <__printf_chk@plt+0x26e0>
   14e58:	movw	r2, #28268	; 0x6e6c
   14e5c:	movw	r1, #28280	; 0x6e78
   14e60:	movt	r2, #3
   14e64:	movt	r1, #3
   14e68:	mov	r3, #10
   14e6c:	mov	r0, r5
   14e70:	bl	2e770 <crc32@@Base+0x14d18>
   14e74:	mov	r3, #100	; 0x64
   14e78:	mov	r2, #1
   14e7c:	mov	r1, r3
   14e80:	str	r7, [sp, #4]
   14e84:	movw	r0, #28340	; 0x6eb4
   14e88:	movt	r0, #3
   14e8c:	str	r0, [sp]
   14e90:	mov	r0, r6
   14e94:	bl	125f0 <__snprintf_chk@plt>
   14e98:	mov	r0, r6
   14e9c:	bl	125e4 <strlen@plt>
   14ea0:	mov	r2, r6
   14ea4:	movw	r1, #28256	; 0x6e60
   14ea8:	movt	r1, #3
   14eac:	add	r3, r0, #1
   14eb0:	mov	r0, r5
   14eb4:	bl	2e770 <crc32@@Base+0x14d18>
   14eb8:	mov	r0, r5
   14ebc:	bl	2e544 <crc32@@Base+0x14aec>
   14ec0:	b	14d78 <__printf_chk@plt+0x25e4>
   14ec4:	cmp	r7, #0
   14ec8:	beq	14f50 <__printf_chk@plt+0x27bc>
   14ecc:	mov	r0, r5
   14ed0:	bl	2e544 <crc32@@Base+0x14aec>
   14ed4:	mov	r0, r5
   14ed8:	bl	2e544 <crc32@@Base+0x14aec>
   14edc:	mov	r0, r5
   14ee0:	bl	2e7d4 <crc32@@Base+0x14d7c>
   14ee4:	subs	r7, r0, #0
   14ee8:	bne	14584 <__printf_chk@plt+0x1df0>
   14eec:	ldr	r3, [r5, #4]
   14ef0:	ubfx	r1, r3, #8, #8
   14ef4:	ubfx	r2, r3, #16, #8
   14ef8:	lsr	r7, r3, #24
   14efc:	orr	r7, r7, r3, lsl #24
   14f00:	orr	r7, r7, r1, lsl #16
   14f04:	orr	r7, r7, r2, lsl #8
   14f08:	b	14584 <__printf_chk@plt+0x1df0>
   14f0c:	movw	r2, #65196	; 0xfeac
   14f10:	movt	r2, #4
   14f14:	ldr	r6, [r4, #80]	; 0x50
   14f18:	ldr	r4, [r2]
   14f1c:	bl	126b0 <__errno_location@plt>
   14f20:	ldr	r0, [r0]
   14f24:	bl	12224 <strerror@plt>
   14f28:	add	r2, sp, #244	; 0xf4
   14f2c:	mov	r3, r6
   14f30:	str	r2, [sp]
   14f34:	mov	r1, #1
   14f38:	movw	r2, #26168	; 0x6638
   14f3c:	movt	r2, #3
   14f40:	str	r0, [sp, #4]
   14f44:	mov	r0, r4
   14f48:	bl	122d8 <__fprintf_chk@plt>
   14f4c:	b	1445c <__printf_chk@plt+0x1cc8>
   14f50:	movw	r1, #28304	; 0x6e90
   14f54:	mov	r0, r5
   14f58:	movt	r1, #3
   14f5c:	bl	2e4b8 <crc32@@Base+0x14a60>
   14f60:	ldrb	r0, [r4, #116]	; 0x74
   14f64:	bl	1a734 <crc32@@Base+0xcdc>
   14f68:	ldr	r2, [sp, #36]	; 0x24
   14f6c:	mov	r3, #100	; 0x64
   14f70:	mov	r1, r3
   14f74:	str	r2, [sp]
   14f78:	mov	r2, #1
   14f7c:	mov	r7, r0
   14f80:	str	r0, [sp, #4]
   14f84:	mov	r0, r6
   14f88:	bl	125f0 <__snprintf_chk@plt>
   14f8c:	mov	r0, r6
   14f90:	bl	125e4 <strlen@plt>
   14f94:	mov	r1, r7
   14f98:	mov	r2, r6
   14f9c:	add	r3, r0, #1
   14fa0:	mov	r0, r5
   14fa4:	bl	2e770 <crc32@@Base+0x14d18>
   14fa8:	ldr	r3, [r4, #120]	; 0x78
   14fac:	cmp	r3, #0
   14fb0:	beq	14fd0 <__printf_chk@plt+0x283c>
   14fb4:	movw	r2, #28268	; 0x6e6c
   14fb8:	movw	r1, #28280	; 0x6e78
   14fbc:	movt	r2, #3
   14fc0:	movt	r1, #3
   14fc4:	mov	r3, #10
   14fc8:	mov	r0, r5
   14fcc:	bl	2e770 <crc32@@Base+0x14d18>
   14fd0:	mov	r0, r5
   14fd4:	bl	2e544 <crc32@@Base+0x14aec>
   14fd8:	b	14ecc <__printf_chk@plt+0x2738>
   14fdc:	bl	126b0 <__errno_location@plt>
   14fe0:	movw	r7, #65196	; 0xfeac
   14fe4:	movt	r7, #4
   14fe8:	ldr	r9, [r4, #80]	; 0x50
   14fec:	ldr	r8, [r7]
   14ff0:	ldr	r0, [r0]
   14ff4:	bl	12224 <strerror@plt>
   14ff8:	add	r2, sp, #244	; 0xf4
   14ffc:	mov	r3, r9
   15000:	str	r2, [sp]
   15004:	mov	r1, #1
   15008:	movw	r2, #28380	; 0x6edc
   1500c:	movt	r2, #3
   15010:	str	r0, [sp, #4]
   15014:	mov	r0, r8
   15018:	bl	122d8 <__fprintf_chk@plt>
   1501c:	mov	r0, r6
   15020:	bl	12338 <close@plt>
   15024:	mov	r0, r5
   15028:	bl	1214c <free@plt>
   1502c:	b	14540 <__printf_chk@plt+0x1dac>
   15030:	mov	r7, sl
   15034:	b	14584 <__printf_chk@plt+0x1df0>
   15038:	movw	r7, #65196	; 0xfeac
   1503c:	movt	r7, #4
   15040:	movw	r2, #28348	; 0x6ebc
   15044:	ldr	r3, [r4, #80]	; 0x50
   15048:	ldr	r0, [r7]
   1504c:	movt	r2, #3
   15050:	mov	r1, #1
   15054:	bl	122d8 <__fprintf_chk@plt>
   15058:	b	15024 <__printf_chk@plt+0x2890>
   1505c:	bl	126b0 <__errno_location@plt>
   15060:	movw	r7, #65196	; 0xfeac
   15064:	movt	r7, #4
   15068:	ldr	r8, [r4, #80]	; 0x50
   1506c:	ldr	r6, [r7]
   15070:	ldr	r0, [r0]
   15074:	bl	12224 <strerror@plt>
   15078:	add	r2, sp, #244	; 0xf4
   1507c:	mov	r3, r8
   15080:	str	r2, [sp]
   15084:	mov	r1, #1
   15088:	movw	r2, #26168	; 0x6638
   1508c:	movt	r2, #3
   15090:	str	r0, [sp, #4]
   15094:	mov	r0, r6
   15098:	bl	122d8 <__fprintf_chk@plt>
   1509c:	b	15024 <__printf_chk@plt+0x2890>
   150a0:	movw	r7, #65196	; 0xfeac
   150a4:	movt	r7, #4
   150a8:	ldr	r3, [r4, #80]	; 0x50
   150ac:	movw	r2, #28072	; 0x6da8
   150b0:	ldr	r0, [r7]
   150b4:	movt	r2, #3
   150b8:	str	r6, [sp]
   150bc:	mov	r1, #1
   150c0:	bl	122d8 <__fprintf_chk@plt>
   150c4:	b	14540 <__printf_chk@plt+0x1dac>
   150c8:	movw	r2, #65196	; 0xfeac
   150cc:	movt	r2, #4
   150d0:	ldr	r5, [r4, #80]	; 0x50
   150d4:	ldr	r4, [r2]
   150d8:	bl	126b0 <__errno_location@plt>
   150dc:	ldr	r0, [r0]
   150e0:	bl	12224 <strerror@plt>
   150e4:	mov	r3, r5
   150e8:	str	r6, [sp]
   150ec:	movw	r2, #28472	; 0x6f38
   150f0:	mov	r1, #1
   150f4:	movt	r2, #3
   150f8:	str	r0, [sp, #4]
   150fc:	mov	r0, r4
   15100:	bl	122d8 <__fprintf_chk@plt>
   15104:	b	14470 <__printf_chk@plt+0x1cdc>
   15108:	bl	124b8 <__stack_chk_fail@plt>
   1510c:	cmp	r8, #0
   15110:	bne	14c58 <__printf_chk@plt+0x24c4>
   15114:	ldrb	r3, [r4, #132]	; 0x84
   15118:	cmp	r3, #0
   1511c:	beq	15260 <__printf_chk@plt+0x2acc>
   15120:	ldr	r0, [r4, #80]	; 0x50
   15124:	add	r3, sp, #56	; 0x38
   15128:	add	ip, sp, #152	; 0x98
   1512c:	str	r8, [sp, #8]
   15130:	mov	r2, r8
   15134:	str	r8, [sp, #4]
   15138:	add	r1, sp, #244	; 0xf4
   1513c:	str	ip, [sp]
   15140:	bl	13c04 <__printf_chk@plt+0x1470>
   15144:	subs	r3, r0, #0
   15148:	str	r3, [sp, #32]
   1514c:	blt	14470 <__printf_chk@plt+0x1cdc>
   15150:	ldr	r5, [sp, #56]	; 0x38
   15154:	ldr	r2, [r5, #4]
   15158:	ubfx	r1, r2, #8, #8
   1515c:	ubfx	r0, r2, #16, #8
   15160:	lsr	r3, r2, #24
   15164:	orr	r3, r3, r2, lsl #24
   15168:	orr	r3, r3, r1, lsl #16
   1516c:	orr	r0, r3, r0, lsl #8
   15170:	bl	125cc <malloc@plt>
   15174:	subs	r9, r0, #0
   15178:	mov	r0, r5
   1517c:	beq	15418 <__printf_chk@plt+0x2c84>
   15180:	movw	r1, #27888	; 0x6cf0
   15184:	movt	r1, #3
   15188:	bl	31560 <crc32@@Base+0x17b08>
   1518c:	subs	r1, r0, #0
   15190:	bge	152d4 <__printf_chk@plt+0x2b40>
   15194:	ldr	r1, [sp, #196]	; 0xc4
   15198:	ldr	r0, [sp, #56]	; 0x38
   1519c:	bl	12608 <munmap@plt>
   151a0:	mov	r0, r9
   151a4:	bl	1214c <free@plt>
   151a8:	ldr	r0, [sp, #32]
   151ac:	bl	12338 <close@plt>
   151b0:	b	14470 <__printf_chk@plt+0x1cdc>
   151b4:	mov	r6, r8
   151b8:	ldr	r0, [sp, #56]	; 0x38
   151bc:	bl	2f90c <crc32@@Base+0x15eb4>
   151c0:	ldr	r0, [sp, #56]	; 0x38
   151c4:	ldr	r1, [sp, #196]	; 0xc4
   151c8:	ldr	r3, [r0, #4]
   151cc:	ubfx	ip, r3, #8, #8
   151d0:	ubfx	r2, r3, #16, #8
   151d4:	lsr	r5, r3, #24
   151d8:	orr	r5, r5, r3, lsl #24
   151dc:	orr	r5, r5, ip, lsl #16
   151e0:	orr	r5, r5, r2, lsl #8
   151e4:	bl	12608 <munmap@plt>
   151e8:	add	r5, r5, #3
   151ec:	ldr	r0, [sp, #32]
   151f0:	bic	r5, r5, #3
   151f4:	mov	r1, r5
   151f8:	bl	120b0 <ftruncate@plt>
   151fc:	cmp	r0, #0
   15200:	bne	151a0 <__printf_chk@plt+0x2a0c>
   15204:	ldr	r3, [r4, #136]	; 0x88
   15208:	cmp	r3, #0
   1520c:	beq	1521c <__printf_chk@plt+0x2a88>
   15210:	cmp	r3, r5
   15214:	bcc	151a0 <__printf_chk@plt+0x2a0c>
   15218:	mov	r5, r3
   1521c:	mov	r1, r5
   15220:	ldr	r5, [sp, #32]
   15224:	mov	r2, #0
   15228:	mov	r0, r5
   1522c:	bl	12518 <lseek@plt>
   15230:	cmp	r0, #0
   15234:	blt	151a0 <__printf_chk@plt+0x2a0c>
   15238:	mov	r2, r6
   1523c:	mov	r1, r9
   15240:	mov	r0, r5
   15244:	bl	1262c <write@plt>
   15248:	cmp	r6, r0
   1524c:	bne	151a0 <__printf_chk@plt+0x2a0c>
   15250:	mov	r0, r9
   15254:	bl	1214c <free@plt>
   15258:	ldr	r0, [sp, #32]
   1525c:	bl	12338 <close@plt>
   15260:	ldr	r1, [r4, #76]	; 0x4c
   15264:	add	r0, sp, #244	; 0xf4
   15268:	bl	12770 <rename@plt>
   1526c:	cmn	r0, #1
   15270:	bne	1447c <__printf_chk@plt+0x1ce8>
   15274:	movw	r2, #65196	; 0xfeac
   15278:	movt	r2, #4
   1527c:	ldr	r6, [r4, #80]	; 0x50
   15280:	mov	r8, #1
   15284:	ldr	r5, [r2]
   15288:	bl	126b0 <__errno_location@plt>
   1528c:	ldr	r7, [r4, #76]	; 0x4c
   15290:	ldr	r0, [r0]
   15294:	bl	12224 <strerror@plt>
   15298:	mov	r3, r6
   1529c:	add	r2, sp, #244	; 0xf4
   152a0:	mov	r1, r8
   152a4:	str	r2, [sp]
   152a8:	movw	r2, #28624	; 0x6fd0
   152ac:	str	r7, [sp, #4]
   152b0:	movt	r2, #3
   152b4:	str	r0, [sp, #8]
   152b8:	mov	r0, r5
   152bc:	bl	122d8 <__fprintf_chk@plt>
   152c0:	add	r0, sp, #244	; 0xf4
   152c4:	bl	123c8 <unlink@plt>
   152c8:	ldr	r0, [r4, #76]	; 0x4c
   152cc:	bl	123c8 <unlink@plt>
   152d0:	b	1447c <__printf_chk@plt+0x1ce8>
   152d4:	ldr	r0, [sp, #56]	; 0x38
   152d8:	bl	2dd78 <crc32@@Base+0x14320>
   152dc:	subs	r5, r0, #0
   152e0:	blt	151b4 <__printf_chk@plt+0x2a20>
   152e4:	movw	r7, #41356	; 0xa18c
   152e8:	movw	sl, #28556	; 0x6f8c
   152ec:	movw	r3, #28544	; 0x6f80
   152f0:	movt	r7, #3
   152f4:	movt	r3, #3
   152f8:	movt	sl, #3
   152fc:	str	r3, [sp, #36]	; 0x24
   15300:	mov	r6, r8
   15304:	b	15390 <__printf_chk@plt+0x2bfc>
   15308:	add	ip, r6, r3
   1530c:	movw	r2, #28608	; 0x6fc0
   15310:	mov	r3, #4
   15314:	movt	r2, #3
   15318:	str	r3, [sp]
   1531c:	mov	r1, r5
   15320:	mov	r3, fp
   15324:	rev	ip, ip
   15328:	str	ip, [sp, #64]	; 0x40
   1532c:	bl	2f2b8 <crc32@@Base+0x15860>
   15330:	ldr	r3, [sp, #60]	; 0x3c
   15334:	mov	r1, #4
   15338:	str	r1, [sp]
   1533c:	ubfx	r2, r3, #8, #8
   15340:	ubfx	r1, r3, #16, #8
   15344:	lsr	ip, r3, #24
   15348:	ldr	r0, [sp, #56]	; 0x38
   1534c:	orr	ip, ip, r3, lsl #24
   15350:	mov	r3, fp
   15354:	orr	ip, ip, r2, lsl #16
   15358:	mov	r2, sl
   1535c:	orr	ip, ip, r1, lsl #8
   15360:	mov	r1, r5
   15364:	str	ip, [sp, #64]	; 0x40
   15368:	bl	2f2b8 <crc32@@Base+0x15860>
   1536c:	ldr	r3, [sp, #60]	; 0x3c
   15370:	add	r3, r3, #3
   15374:	bic	r3, r3, #3
   15378:	add	r6, r6, r3
   1537c:	mov	r1, r5
   15380:	ldr	r0, [sp, #56]	; 0x38
   15384:	bl	2ddd8 <crc32@@Base+0x14380>
   15388:	subs	r5, r0, #0
   1538c:	blt	151b8 <__printf_chk@plt+0x2a24>
   15390:	mov	r1, r5
   15394:	add	r3, sp, #60	; 0x3c
   15398:	mov	r2, r7
   1539c:	ldr	r0, [sp, #56]	; 0x38
   153a0:	bl	31204 <crc32@@Base+0x177ac>
   153a4:	subs	r1, r0, #0
   153a8:	beq	1537c <__printf_chk@plt+0x2be8>
   153ac:	ldr	r2, [sp, #60]	; 0x3c
   153b0:	add	r0, r9, r6
   153b4:	bl	125c0 <memcpy@plt>
   153b8:	mov	r2, r7
   153bc:	mov	r1, r5
   153c0:	ldr	r0, [sp, #56]	; 0x38
   153c4:	bl	2f448 <crc32@@Base+0x159f0>
   153c8:	cmp	r0, #0
   153cc:	bne	15194 <__printf_chk@plt+0x2a00>
   153d0:	ldr	r3, [r4, #136]	; 0x88
   153d4:	ldr	r0, [sp, #56]	; 0x38
   153d8:	cmp	r3, #0
   153dc:	bne	15308 <__printf_chk@plt+0x2b74>
   153e0:	ubfx	r2, r6, #8, #8
   153e4:	lsr	r3, r6, #24
   153e8:	orr	r3, r3, r6, lsl #24
   153ec:	ubfx	r1, r6, #16, #8
   153f0:	orr	ip, r3, r2, lsl #16
   153f4:	mov	r3, #4
   153f8:	orr	ip, ip, r1, lsl #8
   153fc:	str	r3, [sp]
   15400:	ldr	r2, [sp, #36]	; 0x24
   15404:	mov	r3, fp
   15408:	mov	r1, r5
   1540c:	str	ip, [sp, #64]	; 0x40
   15410:	bl	2f2b8 <crc32@@Base+0x15860>
   15414:	b	15330 <__printf_chk@plt+0x2b9c>
   15418:	ldr	r1, [sp, #196]	; 0xc4
   1541c:	bl	12608 <munmap@plt>
   15420:	b	151a8 <__printf_chk@plt+0x2a14>
   15424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15428:	sub	sp, sp, #36	; 0x24
   1542c:	movw	r7, #61168	; 0xeef0
   15430:	movt	r7, #4
   15434:	ldr	r5, [sp, #72]	; 0x48
   15438:	mov	r6, r2
   1543c:	ldr	ip, [r7]
   15440:	mov	r4, r0
   15444:	mov	sl, r1
   15448:	mov	r0, r2
   1544c:	mov	r1, r5
   15450:	mov	r2, #0
   15454:	str	r3, [sp, #20]
   15458:	str	ip, [sp, #28]
   1545c:	ldr	r9, [sp, #76]	; 0x4c
   15460:	ldr	fp, [sp, #80]	; 0x50
   15464:	bl	30f04 <crc32@@Base+0x174ac>
   15468:	mov	r1, r5
   1546c:	add	r2, sp, #24
   15470:	str	r0, [sp, #16]
   15474:	mov	r0, r6
   15478:	bl	17708 <__printf_chk@plt+0x4f74>
   1547c:	subs	r8, r0, #0
   15480:	bne	15544 <__printf_chk@plt+0x2db0>
   15484:	mov	r3, r8
   15488:	mov	r1, r5
   1548c:	movw	r2, #28756	; 0x7054
   15490:	mov	r0, r6
   15494:	movt	r2, #3
   15498:	bl	31204 <crc32@@Base+0x177ac>
   1549c:	mov	r2, #44	; 0x2c
   154a0:	mov	r1, r8
   154a4:	str	r0, [sp, #12]
   154a8:	add	r0, r4, #4
   154ac:	bl	12308 <memset@plt>
   154b0:	mov	r3, r8
   154b4:	mov	r1, r5
   154b8:	str	sl, [r4]
   154bc:	movw	r2, #28764	; 0x705c
   154c0:	mov	r0, r6
   154c4:	movt	r2, #3
   154c8:	bl	31204 <crc32@@Base+0x177ac>
   154cc:	str	r6, [r4, #8]
   154d0:	str	r5, [r4, #12]
   154d4:	str	r0, [r4, #4]
   154d8:	ldr	r0, [sp, #24]
   154dc:	bl	1232c <__strdup@plt>
   154e0:	str	r0, [r4, #16]
   154e4:	ldr	r0, [sp, #24]
   154e8:	bl	18b64 <__printf_chk@plt+0x63d0>
   154ec:	str	r0, [r4, #20]
   154f0:	ldr	r0, [sp, #24]
   154f4:	bl	18bd0 <__printf_chk@plt+0x643c>
   154f8:	str	r0, [r4, #28]
   154fc:	ldr	r0, [sp, #12]
   15500:	bl	18d9c <__printf_chk@plt+0x6608>
   15504:	ldr	r3, [r4, #20]
   15508:	str	r9, [r4, #40]	; 0x28
   1550c:	cmp	r3, #0
   15510:	str	fp, [r4, #44]	; 0x2c
   15514:	str	r0, [r4, #24]
   15518:	beq	15560 <__printf_chk@plt+0x2dcc>
   1551c:	ldr	r3, [r4, #28]
   15520:	cmp	r3, #0
   15524:	beq	15560 <__printf_chk@plt+0x2dcc>
   15528:	ldr	r2, [sp, #28]
   1552c:	mov	r0, r8
   15530:	ldr	r3, [r7]
   15534:	cmp	r2, r3
   15538:	bne	15588 <__printf_chk@plt+0x2df4>
   1553c:	add	sp, sp, #36	; 0x24
   15540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15544:	ldrd	r2, [sp, #16]
   15548:	movw	r1, #28688	; 0x7010
   1554c:	mov	r0, #1
   15550:	movt	r1, #3
   15554:	mvn	r8, #0
   15558:	bl	12794 <__printf_chk@plt>
   1555c:	b	15528 <__printf_chk@plt+0x2d94>
   15560:	ldr	r1, [sp, #20]
   15564:	mov	r0, #1
   15568:	ldr	r2, [sp, #24]
   1556c:	mvn	r8, #0
   15570:	ldr	r3, [sp, #16]
   15574:	str	r1, [sp]
   15578:	movw	r1, #28780	; 0x706c
   1557c:	movt	r1, #3
   15580:	bl	12794 <__printf_chk@plt>
   15584:	b	15528 <__printf_chk@plt+0x2d94>
   15588:	bl	124b8 <__stack_chk_fail@plt>
   1558c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15590:	movw	r4, #61168	; 0xeef0
   15594:	movt	r4, #4
   15598:	sub	sp, sp, #28
   1559c:	mov	r5, r0
   155a0:	mov	r7, r1
   155a4:	ldr	ip, [r4]
   155a8:	str	r3, [sp]
   155ac:	mov	r3, r2
   155b0:	movw	r2, #28864	; 0x70c0
   155b4:	movt	r2, #3
   155b8:	str	ip, [sp, #20]
   155bc:	ldr	r6, [r0, #32]
   155c0:	ldrd	r8, [sp, #64]	; 0x40
   155c4:	ldr	sl, [sp, #76]	; 0x4c
   155c8:	bl	2f2b8 <crc32@@Base+0x15860>
   155cc:	cmp	r0, #0
   155d0:	beq	155ec <__printf_chk@plt+0x2e58>
   155d4:	ldr	r2, [sp, #20]
   155d8:	ldr	r3, [r4]
   155dc:	cmp	r2, r3
   155e0:	bne	1572c <__printf_chk@plt+0x2f98>
   155e4:	add	sp, sp, #28
   155e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155ec:	mov	fp, #8
   155f0:	movw	r3, #28872	; 0x70c8
   155f4:	str	fp, [sp]
   155f8:	movt	r3, #3
   155fc:	movw	r2, #28880	; 0x70d0
   15600:	mov	r1, r7
   15604:	movt	r2, #3
   15608:	mov	r0, r5
   1560c:	bl	2f2b8 <crc32@@Base+0x15860>
   15610:	cmp	r0, #0
   15614:	bne	155d4 <__printf_chk@plt+0x2e40>
   15618:	str	fp, [sp]
   1561c:	movw	r3, #28152	; 0x6df8
   15620:	movw	r2, #28892	; 0x70dc
   15624:	movt	r3, #3
   15628:	movt	r2, #3
   1562c:	mov	r1, r7
   15630:	mov	r0, r5
   15634:	bl	2f2b8 <crc32@@Base+0x15860>
   15638:	cmp	r8, #0
   1563c:	clz	r3, r0
   15640:	lsr	r3, r3, #5
   15644:	moveq	r3, #0
   15648:	cmp	r3, #0
   1564c:	beq	15678 <__printf_chk@plt+0x2ee4>
   15650:	mov	r0, r8
   15654:	bl	125e4 <strlen@plt>
   15658:	movw	r2, #28908	; 0x70ec
   1565c:	mov	r3, r8
   15660:	mov	r1, r7
   15664:	movt	r2, #3
   15668:	add	r0, r0, #1
   1566c:	str	r0, [sp]
   15670:	mov	r0, r5
   15674:	bl	2f2b8 <crc32@@Base+0x15860>
   15678:	cmp	r0, #0
   1567c:	bne	155d4 <__printf_chk@plt+0x2e40>
   15680:	bl	12698 <time@plt>
   15684:	mov	r1, r0
   15688:	mov	r0, sl
   1568c:	bl	1ad50 <crc32@@Base+0x12f8>
   15690:	mov	r1, r7
   15694:	mov	r2, r0
   15698:	mov	r0, r5
   1569c:	bl	177ec <__printf_chk@plt+0x5058>
   156a0:	cmp	r9, #0
   156a4:	clz	r3, r0
   156a8:	lsr	r3, r3, #5
   156ac:	moveq	r3, #0
   156b0:	cmp	r3, #0
   156b4:	beq	155d4 <__printf_chk@plt+0x2e40>
   156b8:	ldr	r3, [sp, #72]	; 0x48
   156bc:	ubfx	r2, r6, #8, #8
   156c0:	lsr	ip, r6, #24
   156c4:	mov	r1, r7
   156c8:	orr	ip, ip, r6, lsl #24
   156cc:	ubfx	r6, r6, #16, #8
   156d0:	orr	ip, ip, r2, lsl #16
   156d4:	str	r3, [sp]
   156d8:	movw	r2, #28916	; 0x70f4
   156dc:	mov	r3, r9
   156e0:	movt	r2, #3
   156e4:	mov	r0, r5
   156e8:	orr	r6, ip, r6, lsl #8
   156ec:	bl	2f2b8 <crc32@@Base+0x15860>
   156f0:	rev	r6, r6
   156f4:	mov	r3, #0
   156f8:	str	r6, [sp, #16]
   156fc:	str	r3, [sp, #12]
   15700:	cmp	r0, #0
   15704:	bne	155d4 <__printf_chk@plt+0x2e40>
   15708:	mov	r3, #8
   1570c:	mov	r1, r7
   15710:	str	r3, [sp]
   15714:	mov	r0, r5
   15718:	movw	r2, #28932	; 0x7104
   1571c:	add	r3, sp, #12
   15720:	movt	r2, #3
   15724:	bl	2f2b8 <crc32@@Base+0x15860>
   15728:	b	155d4 <__printf_chk@plt+0x2e40>
   1572c:	bl	124b8 <__stack_chk_fail@plt>
   15730:	push	{r4, r5, r6, lr}
   15734:	mov	r4, r0
   15738:	mov	r0, r1
   1573c:	bl	1232c <__strdup@plt>
   15740:	ldr	r1, [r4]
   15744:	add	r1, r1, #1
   15748:	lsl	r1, r1, #2
   1574c:	mov	r5, r0
   15750:	ldr	r0, [r4, #4]
   15754:	bl	123f8 <realloc@plt>
   15758:	ldr	r2, [r4]
   1575c:	add	r1, r2, #1
   15760:	str	r1, [r4]
   15764:	mov	r3, r0
   15768:	mov	r0, #0
   1576c:	str	r3, [r4, #4]
   15770:	str	r5, [r3, r2, lsl #2]
   15774:	pop	{r4, r5, r6, pc}
   15778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1577c:	sub	sp, sp, #1296	; 0x510
   15780:	sub	sp, sp, #12
   15784:	movw	fp, #61168	; 0xeef0
   15788:	movt	fp, #4
   1578c:	mov	r4, r2
   15790:	str	r3, [sp, #56]	; 0x38
   15794:	movw	r3, #41356	; 0xa18c
   15798:	movt	r3, #3
   1579c:	str	r3, [sp, #96]	; 0x60
   157a0:	ldr	r3, [sp, #1344]	; 0x540
   157a4:	mov	r2, #0
   157a8:	ldr	ip, [fp]
   157ac:	mov	r5, r0
   157b0:	mov	r6, r1
   157b4:	str	r1, [sp, #28]
   157b8:	str	r3, [sp, #60]	; 0x3c
   157bc:	movw	sl, #28948	; 0x7114
   157c0:	ldr	r3, [sp, #1348]	; 0x544
   157c4:	movt	sl, #3
   157c8:	str	ip, [sp, #1300]	; 0x514
   157cc:	movw	r9, #28964	; 0x7124
   157d0:	movt	r9, #3
   157d4:	str	r3, [sp, #64]	; 0x40
   157d8:	ldr	r3, [sp, #1352]	; 0x548
   157dc:	str	r3, [sp, #68]	; 0x44
   157e0:	bl	30f04 <crc32@@Base+0x174ac>
   157e4:	mov	r1, r4
   157e8:	mov	r2, #0
   157ec:	str	r0, [sp, #72]	; 0x48
   157f0:	mov	r0, r5
   157f4:	bl	30f04 <crc32@@Base+0x174ac>
   157f8:	mov	r1, r6
   157fc:	mov	r2, #0
   15800:	str	r0, [sp, #76]	; 0x4c
   15804:	mov	r0, r5
   15808:	bl	30f04 <crc32@@Base+0x174ac>
   1580c:	mov	r1, r4
   15810:	mov	r2, #0
   15814:	mov	r6, r0
   15818:	str	r0, [sp, #24]
   1581c:	mov	r0, r5
   15820:	bl	30f04 <crc32@@Base+0x174ac>
   15824:	mov	r3, #200	; 0xc8
   15828:	mov	r1, r3
   1582c:	mov	r2, #0
   15830:	str	r6, [sp, #8]
   15834:	str	r2, [sp, #88]	; 0x58
   15838:	str	r2, [sp, #92]	; 0x5c
   1583c:	mov	r2, #1
   15840:	str	sl, [sp, #4]
   15844:	str	r9, [sp]
   15848:	str	r0, [sp, #32]
   1584c:	add	r0, sp, #900	; 0x384
   15850:	bl	125f0 <__snprintf_chk@plt>
   15854:	add	r0, sp, #88	; 0x58
   15858:	movw	r1, #53248	; 0xd000
   1585c:	movt	r1, #3
   15860:	bl	15730 <__printf_chk@plt+0x2f9c>
   15864:	cmp	r0, #0
   15868:	bne	15a64 <__printf_chk@plt+0x32d0>
   1586c:	add	r1, sp, #900	; 0x384
   15870:	add	r0, sp, #88	; 0x58
   15874:	bl	15730 <__printf_chk@plt+0x2f9c>
   15878:	subs	r3, r0, #0
   1587c:	str	r3, [sp, #36]	; 0x24
   15880:	bne	15a64 <__printf_chk@plt+0x32d0>
   15884:	mov	r1, r4
   15888:	movw	r2, #28972	; 0x712c
   1588c:	add	r3, sp, #84	; 0x54
   15890:	movt	r2, #3
   15894:	mov	r0, r5
   15898:	bl	31204 <crc32@@Base+0x177ac>
   1589c:	subs	r7, r0, #0
   158a0:	bne	15ad8 <__printf_chk@plt+0x3344>
   158a4:	ldr	r2, [pc, #1132]	; 15d18 <__printf_chk@plt+0x3584>
   158a8:	mov	r3, #11
   158ac:	str	r3, [sp, #84]	; 0x54
   158b0:	mov	r3, #1
   158b4:	sub	r7, r2, #11
   158b8:	str	r3, [sp, #48]	; 0x30
   158bc:	str	r2, [sp, #40]	; 0x28
   158c0:	movw	r6, #29164	; 0x71ec
   158c4:	movt	r6, #3
   158c8:	movw	r3, #28984	; 0x7138
   158cc:	movt	r3, #3
   158d0:	str	r3, [sp, #44]	; 0x2c
   158d4:	mov	r3, #0
   158d8:	str	r3, [sp, #52]	; 0x34
   158dc:	mov	r2, r7
   158e0:	ldr	r1, [sp, #28]
   158e4:	mov	r0, r5
   158e8:	bl	183ec <__printf_chk@plt+0x5c58>
   158ec:	subs	r4, r0, #0
   158f0:	bge	15968 <__printf_chk@plt+0x31d4>
   158f4:	ldr	r3, [sp, #32]
   158f8:	mov	r2, r7
   158fc:	ldr	r1, [sp, #44]	; 0x2c
   15900:	mov	r0, #1
   15904:	str	r3, [sp]
   15908:	ldr	r3, [sp, #24]
   1590c:	bl	12794 <__printf_chk@plt>
   15910:	ldr	r3, [sp, #48]	; 0x30
   15914:	cmp	r3, #0
   15918:	beq	15c74 <__printf_chk@plt+0x34e0>
   1591c:	mov	r0, r7
   15920:	bl	125e4 <strlen@plt>
   15924:	ldr	r3, [sp, #40]	; 0x28
   15928:	add	r0, r0, #1
   1592c:	add	r7, r7, r0
   15930:	cmp	r7, r3
   15934:	bcc	158dc <__printf_chk@plt+0x3148>
   15938:	ldr	r3, [sp, #52]	; 0x34
   1593c:	cmp	r3, #0
   15940:	bne	15b00 <__printf_chk@plt+0x336c>
   15944:	ldr	r3, [sp, #32]
   15948:	movw	r1, #29172	; 0x71f4
   1594c:	ldr	r2, [sp, #24]
   15950:	movt	r1, #3
   15954:	mov	r0, #1
   15958:	mvn	ip, #41	; 0x29
   1595c:	str	ip, [sp, #36]	; 0x24
   15960:	bl	12794 <__printf_chk@plt>
   15964:	b	15a84 <__printf_chk@plt+0x32f0>
   15968:	add	r2, sp, #1088	; 0x440
   1596c:	mov	r3, #200	; 0xc8
   15970:	add	r2, r2, #12
   15974:	mov	r1, r4
   15978:	mov	r0, r5
   1597c:	bl	315b0 <crc32@@Base+0x17b58>
   15980:	cmp	r0, #0
   15984:	blt	15aa4 <__printf_chk@plt+0x3310>
   15988:	add	r1, sp, #1088	; 0x440
   1598c:	add	r0, sp, #88	; 0x58
   15990:	add	r1, r1, #12
   15994:	bl	15730 <__printf_chk@plt+0x2f9c>
   15998:	subs	r8, r0, #0
   1599c:	bne	15a64 <__printf_chk@plt+0x32d0>
   159a0:	ldr	r2, [sp, #24]
   159a4:	mov	r3, #200	; 0xc8
   159a8:	mov	r1, r3
   159ac:	str	sl, [sp, #4]
   159b0:	str	r9, [sp]
   159b4:	add	r0, sp, #900	; 0x384
   159b8:	str	r2, [sp, #8]
   159bc:	mov	r2, #1
   159c0:	bl	125f0 <__snprintf_chk@plt>
   159c4:	mov	r1, r4
   159c8:	mov	r0, r5
   159cc:	bl	2dd78 <crc32@@Base+0x14320>
   159d0:	subs	r4, r0, #0
   159d4:	blt	15c4c <__printf_chk@plt+0x34b8>
   159d8:	mov	r2, #0
   159dc:	mov	r1, r4
   159e0:	mov	r0, r5
   159e4:	bl	30f04 <crc32@@Base+0x174ac>
   159e8:	mov	r2, #4
   159ec:	mov	r1, r6
   159f0:	bl	121a0 <strncmp@plt>
   159f4:	cmp	r0, #0
   159f8:	bne	15a38 <__printf_chk@plt+0x32a4>
   159fc:	add	r2, sp, #1088	; 0x440
   15a00:	mov	r3, #200	; 0xc8
   15a04:	add	r2, r2, #12
   15a08:	mov	r1, r4
   15a0c:	mov	r0, r5
   15a10:	bl	315b0 <crc32@@Base+0x17b58>
   15a14:	cmp	r0, #0
   15a18:	blt	15aa4 <__printf_chk@plt+0x3310>
   15a1c:	add	r1, sp, #1088	; 0x440
   15a20:	add	r0, sp, #88	; 0x58
   15a24:	add	r1, r1, #12
   15a28:	bl	15730 <__printf_chk@plt+0x2f9c>
   15a2c:	cmp	r0, #0
   15a30:	bne	15a64 <__printf_chk@plt+0x32d0>
   15a34:	add	r8, r8, #1
   15a38:	mov	r1, r4
   15a3c:	mov	r0, r5
   15a40:	bl	2ddd8 <crc32@@Base+0x14380>
   15a44:	subs	r4, r0, #0
   15a48:	bge	159d8 <__printf_chk@plt+0x3244>
   15a4c:	cmp	r8, #0
   15a50:	beq	15c4c <__printf_chk@plt+0x34b8>
   15a54:	ldr	r3, [sp, #52]	; 0x34
   15a58:	add	r3, r3, #1
   15a5c:	str	r3, [sp, #52]	; 0x34
   15a60:	b	1591c <__printf_chk@plt+0x3188>
   15a64:	movw	r1, #29228	; 0x722c
   15a68:	ldr	r3, [sp, #32]
   15a6c:	ldr	r2, [sp, #24]
   15a70:	mov	r0, #1
   15a74:	movt	r1, #3
   15a78:	mvn	ip, #11
   15a7c:	str	ip, [sp, #36]	; 0x24
   15a80:	bl	12794 <__printf_chk@plt>
   15a84:	ldr	r2, [sp, #1300]	; 0x514
   15a88:	ldr	r3, [fp]
   15a8c:	ldr	r0, [sp, #36]	; 0x24
   15a90:	cmp	r2, r3
   15a94:	bne	15d14 <__printf_chk@plt+0x3580>
   15a98:	add	sp, sp, #1296	; 0x510
   15a9c:	add	sp, sp, #12
   15aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15aa4:	mvn	r3, #1
   15aa8:	str	r3, [sp, #36]	; 0x24
   15aac:	bl	2fac0 <crc32@@Base+0x16068>
   15ab0:	ldr	r3, [sp, #32]
   15ab4:	mov	r2, r7
   15ab8:	movw	r1, #29276	; 0x725c
   15abc:	movt	r1, #3
   15ac0:	str	r3, [sp]
   15ac4:	ldr	r3, [sp, #24]
   15ac8:	str	r0, [sp, #4]
   15acc:	mov	r0, #1
   15ad0:	bl	12794 <__printf_chk@plt>
   15ad4:	b	15a84 <__printf_chk@plt+0x32f0>
   15ad8:	ldr	r3, [sp, #84]	; 0x54
   15adc:	cmp	r3, #0
   15ae0:	beq	15b00 <__printf_chk@plt+0x336c>
   15ae4:	add	r3, r7, r3
   15ae8:	str	r3, [sp, #40]	; 0x28
   15aec:	cmp	r7, r3
   15af0:	ldrcc	r3, [sp, #36]	; 0x24
   15af4:	strcc	r3, [sp, #48]	; 0x30
   15af8:	bcc	158c0 <__printf_chk@plt+0x312c>
   15afc:	b	15944 <__printf_chk@plt+0x31b0>
   15b00:	mov	r0, #200	; 0xc8
   15b04:	add	r3, sp, #104	; 0x68
   15b08:	str	r0, [sp, #16]
   15b0c:	add	r0, sp, #1088	; 0x440
   15b10:	mov	r4, #1
   15b14:	add	r0, r0, #12
   15b18:	ldr	r2, [sp, #88]	; 0x58
   15b1c:	add	r6, sp, #100	; 0x64
   15b20:	str	r0, [sp, #12]
   15b24:	sub	r3, r3, #8
   15b28:	mov	r0, #100	; 0x64
   15b2c:	ldr	r1, [sp, #92]	; 0x5c
   15b30:	str	r0, [sp, #8]
   15b34:	mov	r0, r5
   15b38:	str	r6, [sp, #4]
   15b3c:	str	r4, [sp, #20]
   15b40:	str	r4, [sp]
   15b44:	bl	31e98 <crc32@@Base+0x18440>
   15b48:	subs	r9, r0, #0
   15b4c:	blt	15ca8 <__printf_chk@plt+0x3514>
   15b50:	beq	15c80 <__printf_chk@plt+0x34ec>
   15b54:	mov	r1, r6
   15b58:	mov	r0, r5
   15b5c:	mov	r3, #0
   15b60:	mov	r2, r9
   15b64:	bl	18da8 <__printf_chk@plt+0x6614>
   15b68:	subs	sl, r0, #0
   15b6c:	beq	15cf4 <__printf_chk@plt+0x3560>
   15b70:	ldr	r4, [sp, #88]	; 0x58
   15b74:	cmp	r4, #0
   15b78:	ble	15c30 <__printf_chk@plt+0x349c>
   15b7c:	ldr	r7, [sp, #92]	; 0x5c
   15b80:	mov	r8, #0
   15b84:	add	r4, r7, r4, lsl #2
   15b88:	mov	r6, r7
   15b8c:	mov	r5, r7
   15b90:	ldr	r0, [r5], #4
   15b94:	add	r8, r8, #1
   15b98:	bl	125e4 <strlen@plt>
   15b9c:	cmp	r4, r5
   15ba0:	add	r8, r8, r0
   15ba4:	bne	15b90 <__printf_chk@plt+0x33fc>
   15ba8:	mov	r0, r8
   15bac:	bl	125cc <malloc@plt>
   15bb0:	subs	r8, r0, #0
   15bb4:	beq	15cd4 <__printf_chk@plt+0x3540>
   15bb8:	mov	r4, #0
   15bbc:	ldr	r1, [r6]
   15bc0:	add	r0, r8, r4
   15bc4:	bl	12404 <strcpy@plt>
   15bc8:	ldr	r0, [r6], #4
   15bcc:	bl	125e4 <strlen@plt>
   15bd0:	add	r4, r4, #1
   15bd4:	cmp	r5, r6
   15bd8:	add	r4, r4, r0
   15bdc:	bne	15bbc <__printf_chk@plt+0x3428>
   15be0:	mov	r5, #0
   15be4:	b	15bec <__printf_chk@plt+0x3458>
   15be8:	ldr	r7, [sp, #92]	; 0x5c
   15bec:	ldr	r0, [r7, r5, lsl #2]
   15bf0:	add	r5, r5, #1
   15bf4:	bl	1214c <free@plt>
   15bf8:	ldr	r3, [sp, #88]	; 0x58
   15bfc:	cmp	r5, r3
   15c00:	blt	15be8 <__printf_chk@plt+0x3454>
   15c04:	ldr	r0, [sp, #92]	; 0x5c
   15c08:	bl	1214c <free@plt>
   15c0c:	ldr	r3, [sp, #60]	; 0x3c
   15c10:	str	r9, [r3]
   15c14:	ldr	r3, [sp, #56]	; 0x38
   15c18:	str	sl, [r3]
   15c1c:	ldr	r3, [sp, #64]	; 0x40
   15c20:	str	r8, [r3]
   15c24:	ldr	r3, [sp, #68]	; 0x44
   15c28:	str	r4, [r3]
   15c2c:	b	15a84 <__printf_chk@plt+0x32f0>
   15c30:	mov	r0, #0
   15c34:	bl	125cc <malloc@plt>
   15c38:	subs	r8, r0, #0
   15c3c:	beq	15cd4 <__printf_chk@plt+0x3540>
   15c40:	ldr	r0, [sp, #92]	; 0x5c
   15c44:	mov	r4, #0
   15c48:	b	15c08 <__printf_chk@plt+0x3474>
   15c4c:	ldr	r3, [sp, #32]
   15c50:	movw	r1, #29040	; 0x7170
   15c54:	str	r7, [sp]
   15c58:	mov	r0, #1
   15c5c:	ldr	r2, [sp, #24]
   15c60:	movt	r1, #3
   15c64:	bl	12794 <__printf_chk@plt>
   15c68:	mvn	r3, #41	; 0x29
   15c6c:	str	r3, [sp, #36]	; 0x24
   15c70:	b	15a84 <__printf_chk@plt+0x32f0>
   15c74:	mvn	r3, #1
   15c78:	str	r3, [sp, #36]	; 0x24
   15c7c:	b	15a84 <__printf_chk@plt+0x32f0>
   15c80:	bl	2fac0 <crc32@@Base+0x16068>
   15c84:	ldrd	r2, [sp, #72]	; 0x48
   15c88:	movw	r1, #29384	; 0x72c8
   15c8c:	movt	r1, #3
   15c90:	mvn	ip, #21
   15c94:	str	ip, [sp, #36]	; 0x24
   15c98:	str	r0, [sp]
   15c9c:	mov	r0, r4
   15ca0:	bl	12794 <__printf_chk@plt>
   15ca4:	b	15a84 <__printf_chk@plt+0x32f0>
   15ca8:	mov	r0, #0
   15cac:	mvn	r3, #4
   15cb0:	str	r3, [sp, #36]	; 0x24
   15cb4:	bl	2fac0 <crc32@@Base+0x16068>
   15cb8:	ldrd	r2, [sp, #72]	; 0x48
   15cbc:	movw	r1, #29340	; 0x729c
   15cc0:	movt	r1, #3
   15cc4:	str	r0, [sp]
   15cc8:	mov	r0, r4
   15ccc:	bl	12794 <__printf_chk@plt>
   15cd0:	b	15a84 <__printf_chk@plt+0x32f0>
   15cd4:	ldrd	r2, [sp, #72]	; 0x48
   15cd8:	movw	r1, #29480	; 0x7328
   15cdc:	mov	r0, #1
   15ce0:	movt	r1, #3
   15ce4:	mvn	ip, #11
   15ce8:	str	ip, [sp, #36]	; 0x24
   15cec:	bl	12794 <__printf_chk@plt>
   15cf0:	b	15a84 <__printf_chk@plt+0x32f0>
   15cf4:	ldrd	r2, [sp, #72]	; 0x48
   15cf8:	mov	r0, r4
   15cfc:	movw	r1, #29432	; 0x72f8
   15d00:	movt	r1, #3
   15d04:	mvn	ip, #11
   15d08:	str	ip, [sp, #36]	; 0x24
   15d0c:	bl	12794 <__printf_chk@plt>
   15d10:	b	15a84 <__printf_chk@plt+0x32f0>
   15d14:	bl	124b8 <__stack_chk_fail@plt>
   15d18:	andeq	r7, r3, pc
   15d1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d20:	movw	ip, #61168	; 0xeef0
   15d24:	sub	sp, sp, #172	; 0xac
   15d28:	movt	ip, #4
   15d2c:	mov	r5, r2
   15d30:	mov	r4, r3
   15d34:	str	ip, [sp, #36]	; 0x24
   15d38:	mov	r7, r0
   15d3c:	ldr	ip, [ip]
   15d40:	mov	r0, r2
   15d44:	str	r1, [sp, #48]	; 0x30
   15d48:	add	r2, sp, #60	; 0x3c
   15d4c:	mov	r1, r3
   15d50:	add	r3, sp, #64	; 0x40
   15d54:	str	ip, [sp, #164]	; 0xa4
   15d58:	ldr	ip, [sp, #208]	; 0xd0
   15d5c:	str	ip, [sp, #40]	; 0x28
   15d60:	ldr	ip, [sp, #216]	; 0xd8
   15d64:	str	ip, [sp, #28]
   15d68:	ldr	ip, [sp, #220]	; 0xdc
   15d6c:	str	ip, [sp, #44]	; 0x2c
   15d70:	bl	16bd4 <__printf_chk@plt+0x4440>
   15d74:	subs	r3, r0, #0
   15d78:	str	r3, [sp, #20]
   15d7c:	bne	16114 <__printf_chk@plt+0x3980>
   15d80:	mov	r1, r4
   15d84:	ldr	r2, [sp, #20]
   15d88:	mov	r0, r5
   15d8c:	bl	30f04 <crc32@@Base+0x174ac>
   15d90:	mov	r1, r4
   15d94:	str	r0, [sp, #24]
   15d98:	mov	r0, r5
   15d9c:	bl	2dd78 <crc32@@Base+0x14320>
   15da0:	subs	r4, r0, #0
   15da4:	blt	15f20 <__printf_chk@plt+0x378c>
   15da8:	ldr	r3, [sp, #212]	; 0xd4
   15dac:	movw	r6, #29164	; 0x71ec
   15db0:	movw	r8, #29816	; 0x7478
   15db4:	movt	r6, #3
   15db8:	cmp	r3, #0
   15dbc:	movt	r8, #3
   15dc0:	movw	r3, #36144	; 0x8d30
   15dc4:	movt	r3, #3
   15dc8:	moveq	r3, #0
   15dcc:	str	r3, [sp, #32]
   15dd0:	movw	r3, #28764	; 0x705c
   15dd4:	movt	r3, #3
   15dd8:	str	r3, [sp, #52]	; 0x34
   15ddc:	b	15e14 <__printf_chk@plt+0x3680>
   15de0:	cmp	r7, #0
   15de4:	beq	15e00 <__printf_chk@plt+0x366c>
   15de8:	mov	r0, r9
   15dec:	mov	r2, #9
   15df0:	mov	r1, r8
   15df4:	bl	121a0 <strncmp@plt>
   15df8:	cmp	r0, #0
   15dfc:	beq	15f40 <__printf_chk@plt+0x37ac>
   15e00:	mov	r1, r4
   15e04:	mov	r0, r5
   15e08:	bl	2ddd8 <crc32@@Base+0x14380>
   15e0c:	subs	r4, r0, #0
   15e10:	blt	15f20 <__printf_chk@plt+0x378c>
   15e14:	mov	r2, #0
   15e18:	mov	r1, r4
   15e1c:	mov	r0, r5
   15e20:	bl	30f04 <crc32@@Base+0x174ac>
   15e24:	mov	r2, #4
   15e28:	mov	r1, r6
   15e2c:	mov	r9, r0
   15e30:	bl	121a0 <strncmp@plt>
   15e34:	subs	r2, r0, #0
   15e38:	bne	15de0 <__printf_chk@plt+0x364c>
   15e3c:	mov	r1, r4
   15e40:	mov	r0, r5
   15e44:	ldr	r9, [sp, #60]	; 0x3c
   15e48:	ldr	sl, [sp, #64]	; 0x40
   15e4c:	bl	30f04 <crc32@@Base+0x174ac>
   15e50:	add	r2, sp, #84	; 0x54
   15e54:	mov	r1, r4
   15e58:	mov	fp, r0
   15e5c:	mov	r0, r5
   15e60:	bl	17708 <__printf_chk@plt+0x4f74>
   15e64:	cmp	r0, #0
   15e68:	bne	160c4 <__printf_chk@plt+0x3930>
   15e6c:	mov	r1, sl
   15e70:	add	ip, sp, #76	; 0x4c
   15e74:	ldr	r2, [sp, #84]	; 0x54
   15e78:	mov	r0, r9
   15e7c:	add	r3, sp, #132	; 0x84
   15e80:	str	ip, [sp]
   15e84:	bl	17854 <__printf_chk@plt+0x50c0>
   15e88:	subs	sl, r0, #0
   15e8c:	bne	160e8 <__printf_chk@plt+0x3954>
   15e90:	ldr	ip, [sp, #76]	; 0x4c
   15e94:	add	r3, sp, #132	; 0x84
   15e98:	movw	r2, #28864	; 0x70c0
   15e9c:	mov	r1, r4
   15ea0:	movt	r2, #3
   15ea4:	mov	r0, r5
   15ea8:	str	ip, [sp]
   15eac:	bl	2f2b8 <crc32@@Base+0x15860>
   15eb0:	cmp	r0, #0
   15eb4:	beq	15e00 <__printf_chk@plt+0x366c>
   15eb8:	mov	r1, r4
   15ebc:	mov	r9, r0
   15ec0:	mov	r2, sl
   15ec4:	mov	r0, r5
   15ec8:	bl	30f04 <crc32@@Base+0x174ac>
   15ecc:	mov	r4, r0
   15ed0:	mov	r0, r9
   15ed4:	bl	2fac0 <crc32@@Base+0x16068>
   15ed8:	mov	r3, r4
   15edc:	movw	r2, #28864	; 0x70c0
   15ee0:	movw	r1, #29708	; 0x740c
   15ee4:	movt	r2, #3
   15ee8:	movt	r1, #3
   15eec:	str	r0, [sp]
   15ef0:	mov	r0, #1
   15ef4:	bl	12794 <__printf_chk@plt>
   15ef8:	cmn	r9, #3
   15efc:	movw	r1, #29756	; 0x743c
   15f00:	ldr	r3, [sp, #24]
   15f04:	mov	r2, fp
   15f08:	mov	r0, #1
   15f0c:	movt	r1, #3
   15f10:	mvnne	ip, #4
   15f14:	mvneq	ip, #27
   15f18:	str	ip, [sp, #20]
   15f1c:	bl	12794 <__printf_chk@plt>
   15f20:	ldr	r3, [sp, #36]	; 0x24
   15f24:	ldr	r2, [sp, #164]	; 0xa4
   15f28:	ldr	r0, [sp, #20]
   15f2c:	ldr	r3, [r3]
   15f30:	cmp	r2, r3
   15f34:	bne	1612c <__printf_chk@plt+0x3998>
   15f38:	add	sp, sp, #172	; 0xac
   15f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f40:	ldr	r3, [sp, #28]
   15f44:	mov	r2, r5
   15f48:	str	r4, [sp]
   15f4c:	add	r0, sp, #84	; 0x54
   15f50:	mov	r1, r7
   15f54:	ldr	sl, [sp, #60]	; 0x3c
   15f58:	str	r3, [sp, #8]
   15f5c:	ldr	r3, [sp, #32]
   15f60:	ldr	r9, [sp, #64]	; 0x40
   15f64:	str	r3, [sp, #4]
   15f68:	ldr	r3, [sp, #24]
   15f6c:	bl	15424 <__printf_chk@plt+0x2c90>
   15f70:	subs	r2, r0, #0
   15f74:	bne	15fe0 <__printf_chk@plt+0x384c>
   15f78:	mov	r1, r4
   15f7c:	mov	r0, r5
   15f80:	bl	30f04 <crc32@@Base+0x174ac>
   15f84:	add	r1, sp, #72	; 0x48
   15f88:	str	r9, [sp, #80]	; 0x50
   15f8c:	add	r3, sp, #68	; 0x44
   15f90:	str	r1, [sp]
   15f94:	mov	r2, #1
   15f98:	str	sl, [sp, #76]	; 0x4c
   15f9c:	add	r1, sp, #76	; 0x4c
   15fa0:	mov	fp, r0
   15fa4:	ldr	r0, [sp, #112]	; 0x70
   15fa8:	ldr	r9, [r0, #8]
   15fac:	add	r0, sp, #84	; 0x54
   15fb0:	blx	r9
   15fb4:	subs	r9, r0, #0
   15fb8:	beq	15fec <__printf_chk@plt+0x3858>
   15fbc:	str	r9, [sp]
   15fc0:	mov	r2, fp
   15fc4:	movw	r1, #29828	; 0x7484
   15fc8:	ldr	r3, [sp, #24]
   15fcc:	movt	r1, #3
   15fd0:	mov	r0, #1
   15fd4:	bl	12794 <__printf_chk@plt>
   15fd8:	cmn	r9, #2
   15fdc:	beq	15e00 <__printf_chk@plt+0x366c>
   15fe0:	mvn	r3, #0
   15fe4:	str	r3, [sp, #20]
   15fe8:	b	15f20 <__printf_chk@plt+0x378c>
   15fec:	ldr	ip, [sp, #44]	; 0x2c
   15ff0:	mov	r1, r4
   15ff4:	str	r9, [sp, #8]
   15ff8:	mov	r0, r5
   15ffc:	str	r9, [sp, #4]
   16000:	str	ip, [sp, #12]
   16004:	ldr	ip, [sp, #40]	; 0x28
   16008:	ldr	r3, [sp, #72]	; 0x48
   1600c:	ldr	r2, [sp, #68]	; 0x44
   16010:	str	ip, [sp]
   16014:	bl	1558c <__printf_chk@plt+0x2df8>
   16018:	subs	r9, r0, #0
   1601c:	beq	1605c <__printf_chk@plt+0x38c8>
   16020:	cmn	r9, #3
   16024:	mvneq	r3, #27
   16028:	streq	r3, [sp, #20]
   1602c:	beq	15f20 <__printf_chk@plt+0x378c>
   16030:	bl	2fac0 <crc32@@Base+0x16068>
   16034:	ldr	r3, [sp, #24]
   16038:	mov	r2, fp
   1603c:	movw	r1, #29888	; 0x74c0
   16040:	movt	r1, #3
   16044:	mvn	ip, #0
   16048:	str	ip, [sp, #20]
   1604c:	str	r0, [sp]
   16050:	mov	r0, #1
   16054:	bl	12794 <__printf_chk@plt>
   16058:	b	15f20 <__printf_chk@plt+0x378c>
   1605c:	ldr	r0, [sp, #68]	; 0x44
   16060:	bl	1214c <free@plt>
   16064:	mov	r1, r4
   16068:	mov	r3, r9
   1606c:	ldr	r2, [sp, #52]	; 0x34
   16070:	mov	r0, r5
   16074:	bl	31204 <crc32@@Base+0x177ac>
   16078:	ldr	r1, [sp, #48]	; 0x30
   1607c:	cmp	r1, #0
   16080:	str	r0, [sp, #88]	; 0x58
   16084:	beq	15e00 <__printf_chk@plt+0x366c>
   16088:	ldr	r3, [sp, #112]	; 0x70
   1608c:	add	r0, sp, #84	; 0x54
   16090:	ldr	r3, [r3, #12]
   16094:	blx	r3
   16098:	cmp	r0, #0
   1609c:	beq	15e00 <__printf_chk@plt+0x366c>
   160a0:	mov	ip, r0
   160a4:	ldr	r3, [sp, #24]
   160a8:	mov	r2, fp
   160ac:	movw	r1, #29960	; 0x7508
   160b0:	mov	r0, #1
   160b4:	movt	r1, #3
   160b8:	str	ip, [sp, #20]
   160bc:	bl	12794 <__printf_chk@plt>
   160c0:	b	15f20 <__printf_chk@plt+0x378c>
   160c4:	ldr	r3, [sp, #24]
   160c8:	mov	r2, fp
   160cc:	movw	r1, #29568	; 0x7380
   160d0:	mov	r0, #1
   160d4:	movt	r1, #3
   160d8:	mvn	ip, #1
   160dc:	str	ip, [sp, #20]
   160e0:	bl	12794 <__printf_chk@plt>
   160e4:	b	15f20 <__printf_chk@plt+0x378c>
   160e8:	ldr	r1, [sp, #24]
   160ec:	mov	r3, fp
   160f0:	ldr	r2, [sp, #84]	; 0x54
   160f4:	mov	r0, #1
   160f8:	mvn	ip, #92	; 0x5c
   160fc:	str	ip, [sp, #20]
   16100:	str	r1, [sp]
   16104:	movw	r1, #29636	; 0x73c4
   16108:	movt	r1, #3
   1610c:	bl	12794 <__printf_chk@plt>
   16110:	b	15f20 <__printf_chk@plt+0x378c>
   16114:	movw	r0, #29540	; 0x7364
   16118:	movt	r0, #3
   1611c:	bl	12290 <puts@plt>
   16120:	mvn	r3, #0
   16124:	str	r3, [sp, #20]
   16128:	b	15f20 <__printf_chk@plt+0x378c>
   1612c:	bl	124b8 <__stack_chk_fail@plt>
   16130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16134:	movw	ip, #61168	; 0xeef0
   16138:	sub	sp, sp, #132	; 0x84
   1613c:	movt	ip, #4
   16140:	mov	r4, r2
   16144:	mov	r8, r0
   16148:	ldr	r2, [ip]
   1614c:	mov	r0, r4
   16150:	str	r3, [sp, #24]
   16154:	ldr	r3, [sp, #176]	; 0xb0
   16158:	str	r1, [sp, #36]	; 0x24
   1615c:	movw	r1, #27888	; 0x6cf0
   16160:	movt	r1, #3
   16164:	str	ip, [sp, #40]	; 0x28
   16168:	str	r2, [sp, #124]	; 0x7c
   1616c:	ldr	r5, [sp, #168]	; 0xa8
   16170:	ldr	r9, [sp, #172]	; 0xac
   16174:	str	r3, [sp, #28]
   16178:	bl	31560 <crc32@@Base+0x17b08>
   1617c:	subs	r6, r0, #0
   16180:	blt	16420 <__printf_chk@plt+0x3c8c>
   16184:	mov	r1, r6
   16188:	mov	r0, r4
   1618c:	bl	2dd78 <crc32@@Base+0x14320>
   16190:	subs	r7, r0, #0
   16194:	blt	1620c <__printf_chk@plt+0x3a78>
   16198:	ldr	sl, [sp, #36]	; 0x24
   1619c:	ldr	fp, [sp, #24]
   161a0:	ldr	r6, [sp, #28]
   161a4:	b	161bc <__printf_chk@plt+0x3a28>
   161a8:	mov	r1, r7
   161ac:	mov	r0, r4
   161b0:	bl	2ddd8 <crc32@@Base+0x14380>
   161b4:	subs	r7, r0, #0
   161b8:	blt	1620c <__printf_chk@plt+0x3a78>
   161bc:	str	r6, [sp, #12]
   161c0:	mov	r3, r7
   161c4:	str	r9, [sp, #8]
   161c8:	mov	r2, r4
   161cc:	str	r5, [sp, #4]
   161d0:	mov	r1, sl
   161d4:	str	fp, [sp]
   161d8:	mov	r0, r8
   161dc:	bl	15d1c <__printf_chk@plt+0x3588>
   161e0:	cmp	r0, #0
   161e4:	beq	161a8 <__printf_chk@plt+0x3a14>
   161e8:	mov	r6, r0
   161ec:	ldr	r3, [sp, #40]	; 0x28
   161f0:	mov	r0, r6
   161f4:	ldr	r2, [sp, #124]	; 0x7c
   161f8:	ldr	r3, [r3]
   161fc:	cmp	r2, r3
   16200:	bne	164e0 <__printf_chk@plt+0x3d4c>
   16204:	add	sp, sp, #132	; 0x84
   16208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1620c:	cmp	r8, #0
   16210:	beq	16418 <__printf_chk@plt+0x3c84>
   16214:	movw	r1, #28948	; 0x7114
   16218:	mov	r0, r4
   1621c:	movt	r1, #3
   16220:	bl	31560 <crc32@@Base+0x17b08>
   16224:	subs	r1, r0, #0
   16228:	blt	164b8 <__printf_chk@plt+0x3d24>
   1622c:	mov	r0, r4
   16230:	bl	2dd78 <crc32@@Base+0x14320>
   16234:	subs	fp, r0, #0
   16238:	blt	16418 <__printf_chk@plt+0x3c84>
   1623c:	cmp	r5, #0
   16240:	movw	r7, #29816	; 0x7478
   16244:	movt	r7, #3
   16248:	movw	r3, #30036	; 0x7554
   1624c:	movw	r2, #30044	; 0x755c
   16250:	movt	r3, #3
   16254:	movt	r2, #3
   16258:	moveq	r3, #0
   1625c:	str	r2, [sp, #32]
   16260:	str	r3, [sp, #16]
   16264:	movw	r3, #28764	; 0x705c
   16268:	str	r8, [sp, #20]
   1626c:	movt	r3, #3
   16270:	str	r3, [sp, #44]	; 0x2c
   16274:	mov	r2, #0
   16278:	mov	r1, fp
   1627c:	mov	r0, r4
   16280:	bl	30f04 <crc32@@Base+0x174ac>
   16284:	mov	r1, fp
   16288:	mov	sl, r0
   1628c:	mov	r0, r4
   16290:	bl	2dd78 <crc32@@Base+0x14320>
   16294:	subs	r5, r0, #0
   16298:	bge	162d0 <__printf_chk@plt+0x3b3c>
   1629c:	b	16404 <__printf_chk@plt+0x3c70>
   162a0:	mov	r2, r8
   162a4:	mov	r3, sl
   162a8:	ldr	r1, [sp, #32]
   162ac:	mov	r0, #1
   162b0:	bl	12794 <__printf_chk@plt>
   162b4:	cmn	r6, #2
   162b8:	bne	164b0 <__printf_chk@plt+0x3d1c>
   162bc:	mov	r1, r5
   162c0:	mov	r0, r4
   162c4:	bl	2ddd8 <crc32@@Base+0x14380>
   162c8:	subs	r5, r0, #0
   162cc:	blt	16404 <__printf_chk@plt+0x3c70>
   162d0:	mov	r2, #0
   162d4:	mov	r1, r5
   162d8:	mov	r0, r4
   162dc:	bl	30f04 <crc32@@Base+0x174ac>
   162e0:	mov	r2, #9
   162e4:	mov	r1, r7
   162e8:	bl	121a0 <strncmp@plt>
   162ec:	subs	r2, r0, #0
   162f0:	bne	162bc <__printf_chk@plt+0x3b28>
   162f4:	mov	r1, r5
   162f8:	mov	r0, r4
   162fc:	bl	30f04 <crc32@@Base+0x174ac>
   16300:	add	r2, sp, #60	; 0x3c
   16304:	add	r3, sp, #56	; 0x38
   16308:	str	r2, [sp, #8]
   1630c:	str	r3, [sp, #4]
   16310:	add	r2, sp, #64	; 0x40
   16314:	add	r3, sp, #52	; 0x34
   16318:	str	r2, [sp]
   1631c:	mov	r1, fp
   16320:	mov	r2, r5
   16324:	mov	r8, r0
   16328:	mov	r0, r4
   1632c:	bl	15778 <__printf_chk@plt+0x2fe4>
   16330:	cmp	r0, #0
   16334:	bne	164b0 <__printf_chk@plt+0x3d1c>
   16338:	ldr	r3, [sp, #16]
   1633c:	add	r0, sp, #76	; 0x4c
   16340:	str	r9, [sp, #8]
   16344:	mov	r2, r4
   16348:	str	r5, [sp]
   1634c:	str	r3, [sp, #4]
   16350:	mov	r3, sl
   16354:	ldr	r1, [sp, #20]
   16358:	bl	15424 <__printf_chk@plt+0x2c90>
   1635c:	cmp	r0, #0
   16360:	bne	164b0 <__printf_chk@plt+0x3d1c>
   16364:	ldr	ip, [sp, #104]	; 0x68
   16368:	add	lr, sp, #72	; 0x48
   1636c:	ldr	r2, [sp, #64]	; 0x40
   16370:	add	r3, sp, #68	; 0x44
   16374:	str	lr, [sp]
   16378:	add	r0, sp, #76	; 0x4c
   1637c:	ldr	r6, [ip, #8]
   16380:	ldr	r1, [sp, #52]	; 0x34
   16384:	blx	r6
   16388:	mov	r6, r0
   1638c:	ldr	r0, [sp, #52]	; 0x34
   16390:	bl	1214c <free@plt>
   16394:	cmp	r6, #0
   16398:	bne	162a0 <__printf_chk@plt+0x3b0c>
   1639c:	ldr	r6, [sp, #28]
   163a0:	mov	r1, r5
   163a4:	ldr	lr, [sp, #60]	; 0x3c
   163a8:	mov	r0, r4
   163ac:	ldr	ip, [sp, #56]	; 0x38
   163b0:	str	r6, [sp, #12]
   163b4:	ldr	r6, [sp, #24]
   163b8:	ldr	r3, [sp, #72]	; 0x48
   163bc:	ldr	r2, [sp, #68]	; 0x44
   163c0:	stm	sp, {r6, ip, lr}
   163c4:	bl	1558c <__printf_chk@plt+0x2df8>
   163c8:	subs	r6, r0, #0
   163cc:	beq	16444 <__printf_chk@plt+0x3cb0>
   163d0:	cmn	r6, #3
   163d4:	mvneq	r6, #27
   163d8:	beq	161ec <__printf_chk@plt+0x3a58>
   163dc:	bl	2fac0 <crc32@@Base+0x16068>
   163e0:	mov	r3, sl
   163e4:	mov	r2, r8
   163e8:	movw	r1, #29888	; 0x74c0
   163ec:	movt	r1, #3
   163f0:	mvn	r6, #0
   163f4:	str	r0, [sp]
   163f8:	mov	r0, #1
   163fc:	bl	12794 <__printf_chk@plt>
   16400:	b	161ec <__printf_chk@plt+0x3a58>
   16404:	mov	r1, fp
   16408:	mov	r0, r4
   1640c:	bl	2ddd8 <crc32@@Base+0x14380>
   16410:	subs	fp, r0, #0
   16414:	bge	16274 <__printf_chk@plt+0x3ae0>
   16418:	mov	r6, #0
   1641c:	b	161ec <__printf_chk@plt+0x3a58>
   16420:	bl	2fac0 <crc32@@Base+0x16068>
   16424:	movw	r2, #27888	; 0x6cf0
   16428:	movw	r1, #27896	; 0x6cf8
   1642c:	movt	r2, #3
   16430:	movt	r1, #3
   16434:	mov	r3, r0
   16438:	mov	r0, #1
   1643c:	bl	12794 <__printf_chk@plt>
   16440:	b	161ec <__printf_chk@plt+0x3a58>
   16444:	ldr	r0, [sp, #68]	; 0x44
   16448:	bl	1214c <free@plt>
   1644c:	ldr	r0, [sp, #56]	; 0x38
   16450:	bl	1214c <free@plt>
   16454:	mov	r1, r5
   16458:	mov	r3, r6
   1645c:	ldr	r2, [sp, #44]	; 0x2c
   16460:	mov	r0, r4
   16464:	bl	31204 <crc32@@Base+0x177ac>
   16468:	ldr	r1, [sp, #36]	; 0x24
   1646c:	cmp	r1, #0
   16470:	str	r0, [sp, #80]	; 0x50
   16474:	beq	162bc <__printf_chk@plt+0x3b28>
   16478:	ldr	r3, [sp, #104]	; 0x68
   1647c:	add	r0, sp, #76	; 0x4c
   16480:	ldr	r3, [r3, #12]
   16484:	blx	r3
   16488:	cmp	r0, #0
   1648c:	beq	162bc <__printf_chk@plt+0x3b28>
   16490:	mov	r6, r0
   16494:	mov	r2, r8
   16498:	mov	r3, sl
   1649c:	movw	r1, #30100	; 0x7594
   164a0:	mov	r0, #1
   164a4:	movt	r1, #3
   164a8:	bl	12794 <__printf_chk@plt>
   164ac:	b	161ec <__printf_chk@plt+0x3a58>
   164b0:	mvn	r6, #0
   164b4:	b	161ec <__printf_chk@plt+0x3a58>
   164b8:	bl	2fac0 <crc32@@Base+0x16068>
   164bc:	movw	r2, #28948	; 0x7114
   164c0:	movw	r1, #27896	; 0x6cf8
   164c4:	movt	r2, #3
   164c8:	movt	r1, #3
   164cc:	mvn	r6, #1
   164d0:	mov	r3, r0
   164d4:	mov	r0, #1
   164d8:	bl	12794 <__printf_chk@plt>
   164dc:	b	161ec <__printf_chk@plt+0x3a58>
   164e0:	bl	124b8 <__stack_chk_fail@plt>
   164e4:	push	{r4, r5, r6, lr}
   164e8:	mov	r1, #0
   164ec:	mov	r4, r0
   164f0:	bl	1828c <__printf_chk@plt+0x5af8>
   164f4:	subs	r5, r0, #0
   164f8:	beq	16530 <__printf_chk@plt+0x3d9c>
   164fc:	movw	r1, #30184	; 0x75e8
   16500:	mov	r0, #1
   16504:	movt	r1, #3
   16508:	bl	12794 <__printf_chk@plt>
   1650c:	mov	r1, r5
   16510:	mov	r0, r4
   16514:	bl	196b8 <__printf_chk@plt+0x6f24>
   16518:	cmp	r0, #0
   1651c:	popne	{r4, r5, r6, pc}
   16520:	mov	r1, r5
   16524:	mov	r0, r4
   16528:	pop	{r4, r5, r6, lr}
   1652c:	b	197c4 <__printf_chk@plt+0x7030>
   16530:	mvn	r0, #0
   16534:	pop	{r4, r5, r6, pc}
   16538:	push	{r4, r5, r6, lr}
   1653c:	movw	r4, #61168	; 0xeef0
   16540:	movt	r4, #4
   16544:	sub	sp, sp, #8
   16548:	mov	r5, r3
   1654c:	mov	r6, r2
   16550:	ldr	ip, [r4]
   16554:	mov	r3, sp
   16558:	str	ip, [sp, #4]
   1655c:	bl	31204 <crc32@@Base+0x177ac>
   16560:	cmp	r0, #0
   16564:	beq	165bc <__printf_chk@plt+0x3e28>
   16568:	ldr	r3, [sp]
   1656c:	cmp	r3, #4
   16570:	bhi	165a0 <__printf_chk@plt+0x3e0c>
   16574:	asrs	r3, r3, #2
   16578:	ldrne	r3, [r0]
   1657c:	mov	r0, #0
   16580:	revne	r3, r3
   16584:	str	r3, [r5]
   16588:	ldr	r2, [sp, #4]
   1658c:	ldr	r3, [r4]
   16590:	cmp	r2, r3
   16594:	bne	165c4 <__printf_chk@plt+0x3e30>
   16598:	add	sp, sp, #8
   1659c:	pop	{r4, r5, r6, pc}
   165a0:	mov	r2, r6
   165a4:	movw	r1, #30332	; 0x767c
   165a8:	mov	r0, #1
   165ac:	movt	r1, #3
   165b0:	bl	12794 <__printf_chk@plt>
   165b4:	mvn	r0, #0
   165b8:	b	16588 <__printf_chk@plt+0x3df4>
   165bc:	mvn	r0, #0
   165c0:	b	16588 <__printf_chk@plt+0x3df4>
   165c4:	bl	124b8 <__stack_chk_fail@plt>
   165c8:	push	{r4, r5, r6, r7, lr}
   165cc:	movw	r7, #61168	; 0xeef0
   165d0:	movt	r7, #4
   165d4:	sub	sp, sp, #12
   165d8:	add	r4, sp, #8
   165dc:	mov	r5, #0
   165e0:	ldr	r3, [r7]
   165e4:	mov	r6, r0
   165e8:	str	r5, [r4, #-8]!
   165ec:	mov	r2, r4
   165f0:	str	r3, [sp, #4]
   165f4:	bl	2dc88 <crc32@@Base+0x14230>
   165f8:	subs	r1, r0, #0
   165fc:	blt	16638 <__printf_chk@plt+0x3ea4>
   16600:	ldr	r3, [sp]
   16604:	cmp	r3, r5
   16608:	bgt	1661c <__printf_chk@plt+0x3e88>
   1660c:	b	16638 <__printf_chk@plt+0x3ea4>
   16610:	ldr	r3, [sp]
   16614:	cmp	r3, #0
   16618:	ble	16638 <__printf_chk@plt+0x3ea4>
   1661c:	cmp	r3, #1
   16620:	mov	r2, r4
   16624:	mov	r0, r6
   16628:	addeq	r5, r5, #1
   1662c:	bl	2dc88 <crc32@@Base+0x14230>
   16630:	subs	r1, r0, #0
   16634:	bge	16610 <__printf_chk@plt+0x3e7c>
   16638:	ldr	r2, [sp, #4]
   1663c:	mov	r0, r5
   16640:	ldr	r3, [r7]
   16644:	cmp	r2, r3
   16648:	bne	16654 <__printf_chk@plt+0x3ec0>
   1664c:	add	sp, sp, #12
   16650:	pop	{r4, r5, r6, r7, pc}
   16654:	bl	124b8 <__stack_chk_fail@plt>
   16658:	push	{r4, r5, lr}
   1665c:	movw	r4, #61168	; 0xeef0
   16660:	movt	r4, #4
   16664:	sub	sp, sp, #12
   16668:	mov	r5, r2
   1666c:	movw	r2, #28140	; 0x6dec
   16670:	ldr	ip, [r4]
   16674:	mov	r3, sp
   16678:	movt	r2, #3
   1667c:	str	ip, [sp, #4]
   16680:	bl	31204 <crc32@@Base+0x177ac>
   16684:	ldr	r2, [sp, #4]
   16688:	str	r0, [r5]
   1668c:	ldr	r3, [r4]
   16690:	cmp	r2, r3
   16694:	bne	166ac <__printf_chk@plt+0x3f18>
   16698:	clz	r0, r0
   1669c:	lsr	r0, r0, #5
   166a0:	rsb	r0, r0, #0
   166a4:	add	sp, sp, #12
   166a8:	pop	{r4, r5, pc}
   166ac:	bl	124b8 <__stack_chk_fail@plt>
   166b0:	push	{r4, r5, lr}
   166b4:	movw	r4, #61168	; 0xeef0
   166b8:	movt	r4, #4
   166bc:	sub	sp, sp, #12
   166c0:	mov	r5, r2
   166c4:	movw	r2, #30364	; 0x769c
   166c8:	ldr	ip, [r4]
   166cc:	mov	r3, sp
   166d0:	movt	r2, #3
   166d4:	str	ip, [sp, #4]
   166d8:	bl	31204 <crc32@@Base+0x177ac>
   166dc:	cmp	r0, #0
   166e0:	beq	16720 <__printf_chk@plt+0x3f8c>
   166e4:	ldr	r3, [sp]
   166e8:	cmp	r3, #4
   166ec:	bne	16718 <__printf_chk@plt+0x3f84>
   166f0:	ldr	r3, [r0]
   166f4:	mov	r0, #0
   166f8:	rev	r3, r3
   166fc:	str	r3, [r5]
   16700:	ldr	r2, [sp, #4]
   16704:	ldr	r3, [r4]
   16708:	cmp	r2, r3
   1670c:	bne	16728 <__printf_chk@plt+0x3f94>
   16710:	add	sp, sp, #12
   16714:	pop	{r4, r5, pc}
   16718:	mvn	r0, #1
   1671c:	b	16700 <__printf_chk@plt+0x3f6c>
   16720:	mvn	r0, #0
   16724:	b	16700 <__printf_chk@plt+0x3f6c>
   16728:	bl	124b8 <__stack_chk_fail@plt>
   1672c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16730:	movw	r7, #61168	; 0xeef0
   16734:	movt	r7, #4
   16738:	sub	sp, sp, #20
   1673c:	mov	r6, r1
   16740:	mov	r5, r0
   16744:	ldr	ip, [r7]
   16748:	movw	r1, #30376	; 0x76a8
   1674c:	mov	r0, #1
   16750:	movt	r1, #3
   16754:	mov	sl, r2
   16758:	mov	fp, r3
   1675c:	str	ip, [sp, #12]
   16760:	bl	12794 <__printf_chk@plt>
   16764:	mov	r1, r6
   16768:	mov	r0, r5
   1676c:	add	r3, sp, #8
   16770:	movw	r2, #30396	; 0x76bc
   16774:	movt	r2, #3
   16778:	bl	31204 <crc32@@Base+0x177ac>
   1677c:	subs	r2, r0, #0
   16780:	beq	16914 <__printf_chk@plt+0x4180>
   16784:	movw	r1, #56260	; 0xdbc4
   16788:	mov	r0, #1
   1678c:	movt	r1, #3
   16790:	bl	12794 <__printf_chk@plt>
   16794:	mov	r3, #0
   16798:	mov	r1, r6
   1679c:	movw	r2, #28764	; 0x705c
   167a0:	mov	r0, r5
   167a4:	movt	r2, #3
   167a8:	bl	31204 <crc32@@Base+0x177ac>
   167ac:	movw	r2, #30404	; 0x76c4
   167b0:	mov	r3, #0
   167b4:	movt	r2, #3
   167b8:	mov	r1, r6
   167bc:	mov	r9, r0
   167c0:	mov	r0, r5
   167c4:	bl	31204 <crc32@@Base+0x177ac>
   167c8:	cmp	r9, #0
   167cc:	mov	r4, r0
   167d0:	beq	167e8 <__printf_chk@plt+0x4054>
   167d4:	movw	r1, #30436	; 0x76e4
   167d8:	mov	r2, r9
   167dc:	movt	r1, #3
   167e0:	mov	r0, #1
   167e4:	bl	12794 <__printf_chk@plt>
   167e8:	cmp	r4, #0
   167ec:	beq	16800 <__printf_chk@plt+0x406c>
   167f0:	movw	r1, #30440	; 0x76e8
   167f4:	mov	r0, #1
   167f8:	movt	r1, #3
   167fc:	bl	12794 <__printf_chk@plt>
   16800:	mov	r0, #10
   16804:	bl	122fc <putchar@plt>
   16808:	movw	r2, #28756	; 0x7054
   1680c:	mov	r3, #0
   16810:	movt	r2, #3
   16814:	mov	r1, r6
   16818:	mov	r0, r5
   1681c:	bl	31204 <crc32@@Base+0x177ac>
   16820:	cmp	r0, #0
   16824:	beq	16844 <__printf_chk@plt+0x40b0>
   16828:	str	r0, [sp]
   1682c:	movw	r1, #30452	; 0x76f4
   16830:	mov	r3, fp
   16834:	movt	r1, #3
   16838:	mov	r2, sl
   1683c:	mov	r0, #1
   16840:	bl	12794 <__printf_chk@plt>
   16844:	movw	r2, #28864	; 0x70c0
   16848:	add	r3, sp, #8
   1684c:	movt	r2, #3
   16850:	mov	r1, r6
   16854:	mov	r0, r5
   16858:	bl	31204 <crc32@@Base+0x177ac>
   1685c:	subs	r8, r0, #0
   16860:	beq	16924 <__printf_chk@plt+0x4190>
   16864:	ldr	r4, [sp, #8]
   16868:	mov	r3, fp
   1686c:	movw	r1, #30472	; 0x7708
   16870:	mov	r2, sl
   16874:	movt	r1, #3
   16878:	mov	r0, #1
   1687c:	bl	12794 <__printf_chk@plt>
   16880:	cmp	r4, #0
   16884:	ble	168b4 <__printf_chk@plt+0x4120>
   16888:	sub	r3, r4, #1
   1688c:	movw	fp, #30504	; 0x7728
   16890:	sub	r4, r8, #1
   16894:	movt	fp, #3
   16898:	add	r8, r8, r3
   1689c:	ldrb	r2, [r4, #1]!
   168a0:	mov	r1, fp
   168a4:	mov	r0, #1
   168a8:	bl	12794 <__printf_chk@plt>
   168ac:	cmp	r8, r4
   168b0:	bne	1689c <__printf_chk@plt+0x4108>
   168b4:	mov	r0, #10
   168b8:	bl	122fc <putchar@plt>
   168bc:	cmp	r9, #0
   168c0:	beq	168fc <__printf_chk@plt+0x4168>
   168c4:	mov	r2, sl
   168c8:	movw	r1, #30512	; 0x7730
   168cc:	mov	r0, #1
   168d0:	movt	r1, #3
   168d4:	bl	12794 <__printf_chk@plt>
   168d8:	add	r2, sp, #8
   168dc:	mov	r1, r6
   168e0:	mov	r0, r5
   168e4:	bl	166b0 <__printf_chk@plt+0x3f1c>
   168e8:	cmp	r0, #0
   168ec:	beq	1694c <__printf_chk@plt+0x41b8>
   168f0:	movw	r0, #30492	; 0x771c
   168f4:	movt	r0, #3
   168f8:	bl	12290 <puts@plt>
   168fc:	ldr	r2, [sp, #12]
   16900:	ldr	r3, [r7]
   16904:	cmp	r2, r3
   16908:	bne	16958 <__printf_chk@plt+0x41c4>
   1690c:	add	sp, sp, #20
   16910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16914:	movw	r0, #30416	; 0x76d0
   16918:	movt	r0, #3
   1691c:	bl	12290 <puts@plt>
   16920:	b	168fc <__printf_chk@plt+0x4168>
   16924:	mov	r3, fp
   16928:	mov	r2, sl
   1692c:	movw	r1, #30472	; 0x7708
   16930:	mov	r0, #1
   16934:	movt	r1, #3
   16938:	bl	12794 <__printf_chk@plt>
   1693c:	movw	r0, #30492	; 0x771c
   16940:	movt	r0, #3
   16944:	bl	12290 <puts@plt>
   16948:	b	168bc <__printf_chk@plt+0x4128>
   1694c:	ldr	r0, [sp, #8]
   16950:	bl	1a0a0 <crc32@@Base+0x648>
   16954:	b	168fc <__printf_chk@plt+0x4168>
   16958:	bl	124b8 <__stack_chk_fail@plt>
   1695c:	push	{r4, r5, r6, r7, r8, lr}
   16960:	mov	r7, r2
   16964:	mov	r2, #0
   16968:	mov	r6, r1
   1696c:	mov	r5, r0
   16970:	bl	30f04 <crc32@@Base+0x174ac>
   16974:	movw	r1, #29164	; 0x71ec
   16978:	mov	r2, #4
   1697c:	movt	r1, #3
   16980:	mov	r4, r0
   16984:	bl	121a0 <strncmp@plt>
   16988:	cmp	r0, #0
   1698c:	beq	169c8 <__printf_chk@plt+0x4234>
   16990:	mov	r0, r4
   16994:	movw	r1, #29816	; 0x7478
   16998:	mov	r2, #9
   1699c:	movt	r1, #3
   169a0:	bl	121a0 <strncmp@plt>
   169a4:	cmp	r0, #0
   169a8:	popne	{r4, r5, r6, r7, r8, pc}
   169ac:	mov	r2, r7
   169b0:	mov	r1, r6
   169b4:	mov	r0, r5
   169b8:	movw	r3, #30540	; 0x774c
   169bc:	pop	{r4, r5, r6, r7, r8, lr}
   169c0:	movt	r3, #3
   169c4:	b	1672c <__printf_chk@plt+0x3f98>
   169c8:	mov	r2, r7
   169cc:	mov	r1, r6
   169d0:	mov	r0, r5
   169d4:	movw	r3, #30532	; 0x7744
   169d8:	pop	{r4, r5, r6, r7, r8, lr}
   169dc:	movt	r3, #3
   169e0:	b	1672c <__printf_chk@plt+0x3f98>
   169e4:	push	{r4, r5, r6, lr}
   169e8:	mov	r5, r1
   169ec:	movw	r1, #27888	; 0x6cf0
   169f0:	movt	r1, #3
   169f4:	mov	r4, r0
   169f8:	bl	31560 <crc32@@Base+0x17b08>
   169fc:	subs	r1, r0, #0
   16a00:	poplt	{r4, r5, r6, pc}
   16a04:	mov	r2, r5
   16a08:	mov	r0, r4
   16a0c:	pop	{r4, r5, r6, lr}
   16a10:	b	30ed4 <crc32@@Base+0x1747c>
   16a14:	push	{r4, r5, lr}
   16a18:	movw	r4, #61168	; 0xeef0
   16a1c:	movt	r4, #4
   16a20:	sub	sp, sp, #12
   16a24:	mov	r5, r2
   16a28:	movw	r2, #36840	; 0x8fe8
   16a2c:	ldr	ip, [r4]
   16a30:	mov	r3, sp
   16a34:	movt	r2, #3
   16a38:	str	ip, [sp, #4]
   16a3c:	bl	31204 <crc32@@Base+0x177ac>
   16a40:	cmp	r0, #0
   16a44:	mvneq	r3, #0
   16a48:	strbeq	r3, [r5]
   16a4c:	beq	16a5c <__printf_chk@plt+0x42c8>
   16a50:	bl	1a924 <crc32@@Base+0xecc>
   16a54:	mov	r3, #0
   16a58:	strb	r0, [r5]
   16a5c:	ldr	r2, [sp, #4]
   16a60:	mov	r0, r3
   16a64:	ldr	r3, [r4]
   16a68:	cmp	r2, r3
   16a6c:	bne	16a78 <__printf_chk@plt+0x42e4>
   16a70:	add	sp, sp, #12
   16a74:	pop	{r4, r5, pc}
   16a78:	bl	124b8 <__stack_chk_fail@plt>
   16a7c:	push	{r4, r5, lr}
   16a80:	movw	r4, #61168	; 0xeef0
   16a84:	movt	r4, #4
   16a88:	sub	sp, sp, #12
   16a8c:	mov	r5, r2
   16a90:	movw	r2, #28220	; 0x6e3c
   16a94:	ldr	ip, [r4]
   16a98:	mov	r3, sp
   16a9c:	movt	r2, #3
   16aa0:	str	ip, [sp, #4]
   16aa4:	bl	31204 <crc32@@Base+0x177ac>
   16aa8:	cmp	r0, #0
   16aac:	mvneq	r3, #0
   16ab0:	strbeq	r3, [r5]
   16ab4:	beq	16ac4 <__printf_chk@plt+0x4330>
   16ab8:	bl	1a93c <crc32@@Base+0xee4>
   16abc:	mov	r3, #0
   16ac0:	strb	r0, [r5]
   16ac4:	ldr	r2, [sp, #4]
   16ac8:	mov	r0, r3
   16acc:	ldr	r3, [r4]
   16ad0:	cmp	r2, r3
   16ad4:	bne	16ae0 <__printf_chk@plt+0x434c>
   16ad8:	add	sp, sp, #12
   16adc:	pop	{r4, r5, pc}
   16ae0:	bl	124b8 <__stack_chk_fail@plt>
   16ae4:	push	{r4, r5, lr}
   16ae8:	movw	r4, #61168	; 0xeef0
   16aec:	movt	r4, #4
   16af0:	sub	sp, sp, #12
   16af4:	mov	r5, r2
   16af8:	movw	r2, #41296	; 0xa150
   16afc:	ldr	ip, [r4]
   16b00:	mov	r3, sp
   16b04:	movt	r2, #3
   16b08:	str	ip, [sp, #4]
   16b0c:	bl	31204 <crc32@@Base+0x177ac>
   16b10:	cmp	r0, #0
   16b14:	mvneq	r3, #0
   16b18:	strbeq	r3, [r5]
   16b1c:	beq	16b2c <__printf_chk@plt+0x4398>
   16b20:	bl	1a954 <crc32@@Base+0xefc>
   16b24:	mov	r3, #0
   16b28:	strb	r0, [r5]
   16b2c:	ldr	r2, [sp, #4]
   16b30:	mov	r0, r3
   16b34:	ldr	r3, [r4]
   16b38:	cmp	r2, r3
   16b3c:	bne	16b48 <__printf_chk@plt+0x43b4>
   16b40:	add	sp, sp, #12
   16b44:	pop	{r4, r5, pc}
   16b48:	bl	124b8 <__stack_chk_fail@plt>
   16b4c:	push	{r4, r5, lr}
   16b50:	movw	r4, #61168	; 0xeef0
   16b54:	movt	r4, #4
   16b58:	sub	sp, sp, #12
   16b5c:	mov	r5, r2
   16b60:	movw	r2, #28228	; 0x6e44
   16b64:	ldr	ip, [r4]
   16b68:	mov	r3, sp
   16b6c:	movt	r2, #3
   16b70:	str	ip, [sp, #4]
   16b74:	bl	31204 <crc32@@Base+0x177ac>
   16b78:	cmp	r0, #0
   16b7c:	mvneq	r3, #0
   16b80:	strbeq	r3, [r5]
   16b84:	beq	16b94 <__printf_chk@plt+0x4400>
   16b88:	bl	1a96c <crc32@@Base+0xf14>
   16b8c:	mov	r3, #0
   16b90:	strb	r0, [r5]
   16b94:	ldr	r2, [sp, #4]
   16b98:	mov	r0, r3
   16b9c:	ldr	r3, [r4]
   16ba0:	cmp	r2, r3
   16ba4:	bne	16bb0 <__printf_chk@plt+0x441c>
   16ba8:	add	sp, sp, #12
   16bac:	pop	{r4, r5, pc}
   16bb0:	bl	124b8 <__stack_chk_fail@plt>
   16bb4:	mov	r3, r2
   16bb8:	movw	r2, #28240	; 0x6e50
   16bbc:	movt	r2, #3
   16bc0:	b	16538 <__printf_chk@plt+0x3da4>
   16bc4:	mov	r3, r2
   16bc8:	movw	r2, #28248	; 0x6e58
   16bcc:	movt	r2, #3
   16bd0:	b	16538 <__printf_chk@plt+0x3da4>
   16bd4:	push	{r4, r5, r6, lr}
   16bd8:	movw	r4, #61168	; 0xeef0
   16bdc:	movt	r4, #4
   16be0:	sub	sp, sp, #8
   16be4:	mov	r6, r3
   16be8:	mov	r5, r2
   16bec:	ldr	ip, [r4]
   16bf0:	mov	r3, sp
   16bf4:	movw	r2, #41356	; 0xa18c
   16bf8:	movt	r2, #3
   16bfc:	str	ip, [sp, #4]
   16c00:	bl	31204 <crc32@@Base+0x177ac>
   16c04:	ldr	r2, [sp, #4]
   16c08:	cmp	r0, #0
   16c0c:	str	r0, [r5]
   16c10:	streq	r0, [r6]
   16c14:	ldrne	r3, [sp]
   16c18:	mvneq	r0, #0
   16c1c:	movne	r0, #0
   16c20:	strne	r3, [r6]
   16c24:	ldr	r3, [r4]
   16c28:	cmp	r2, r3
   16c2c:	bne	16c38 <__printf_chk@plt+0x44a4>
   16c30:	add	sp, sp, #8
   16c34:	pop	{r4, r5, r6, pc}
   16c38:	bl	124b8 <__stack_chk_fail@plt>
   16c3c:	mov	r3, #0
   16c40:	push	{r4, lr}
   16c44:	mov	r4, r2
   16c48:	movw	r2, #28544	; 0x6f80
   16c4c:	movt	r2, #3
   16c50:	bl	31204 <crc32@@Base+0x177ac>
   16c54:	cmp	r0, #0
   16c58:	ldrne	r2, [r0]
   16c5c:	movne	r0, #0
   16c60:	mvneq	r0, #1
   16c64:	ubfxne	ip, r2, #8, #8
   16c68:	ubfxne	r1, r2, #16, #8
   16c6c:	lsrne	r3, r2, #24
   16c70:	orrne	r3, r3, r2, lsl #24
   16c74:	orrne	r3, r3, ip, lsl #16
   16c78:	orrne	r3, r3, r1, lsl #8
   16c7c:	strne	r3, [r4]
   16c80:	pop	{r4, pc}
   16c84:	mov	r3, #0
   16c88:	push	{r4, lr}
   16c8c:	mov	r4, r2
   16c90:	movw	r2, #28608	; 0x6fc0
   16c94:	movt	r2, #3
   16c98:	bl	31204 <crc32@@Base+0x177ac>
   16c9c:	cmp	r0, #0
   16ca0:	ldrne	r2, [r0]
   16ca4:	movne	r0, #0
   16ca8:	mvneq	r0, #1
   16cac:	ubfxne	ip, r2, #8, #8
   16cb0:	ubfxne	r1, r2, #16, #8
   16cb4:	lsrne	r3, r2, #24
   16cb8:	orrne	r3, r3, r2, lsl #24
   16cbc:	orrne	r3, r3, ip, lsl #16
   16cc0:	orrne	r3, r3, r1, lsl #8
   16cc4:	strne	r3, [r4]
   16cc8:	pop	{r4, pc}
   16ccc:	mov	r3, #0
   16cd0:	push	{r4, lr}
   16cd4:	mov	r4, r2
   16cd8:	movw	r2, #28556	; 0x6f8c
   16cdc:	movt	r2, #3
   16ce0:	bl	31204 <crc32@@Base+0x177ac>
   16ce4:	cmp	r0, #0
   16ce8:	ldrne	r2, [r0]
   16cec:	movne	r0, #0
   16cf0:	mvneq	r0, #1
   16cf4:	ubfxne	ip, r2, #8, #8
   16cf8:	ubfxne	r1, r2, #16, #8
   16cfc:	lsrne	r3, r2, #24
   16d00:	orrne	r3, r3, r2, lsl #24
   16d04:	orrne	r3, r3, ip, lsl #16
   16d08:	orrne	r3, r3, r1, lsl #8
   16d0c:	strne	r3, [r4]
   16d10:	pop	{r4, pc}
   16d14:	push	{r4, r5, r6, r7, r8, lr}
   16d18:	movw	r5, #61168	; 0xeef0
   16d1c:	movt	r5, #4
   16d20:	sub	sp, sp, #16
   16d24:	mov	r6, r2
   16d28:	add	r2, sp, #4
   16d2c:	ldr	ip, [r5]
   16d30:	mov	r7, r3
   16d34:	mov	r4, r0
   16d38:	mov	r8, r1
   16d3c:	str	ip, [sp, #12]
   16d40:	bl	16c84 <__printf_chk@plt+0x44f0>
   16d44:	cmp	r0, #0
   16d48:	beq	16d94 <__printf_chk@plt+0x4600>
   16d4c:	add	r2, sp, #4
   16d50:	mov	r1, r8
   16d54:	mov	r0, r4
   16d58:	bl	16c3c <__printf_chk@plt+0x44a8>
   16d5c:	cmp	r0, #0
   16d60:	bne	16dcc <__printf_chk@plt+0x4638>
   16d64:	ldr	r2, [r4, #4]
   16d68:	ldr	r1, [sp, #4]
   16d6c:	ubfx	ip, r2, #8, #8
   16d70:	ubfx	r0, r2, #16, #8
   16d74:	lsr	r3, r2, #24
   16d78:	orr	r3, r3, r2, lsl #24
   16d7c:	orr	r3, r3, ip, lsl #16
   16d80:	orr	r3, r3, r0, lsl #8
   16d84:	add	r3, r3, #3
   16d88:	bic	r3, r3, #3
   16d8c:	add	r3, r1, r3
   16d90:	str	r3, [sp, #4]
   16d94:	add	r2, sp, #8
   16d98:	mov	r0, r4
   16d9c:	mov	r1, r8
   16da0:	bl	16ccc <__printf_chk@plt+0x4538>
   16da4:	ldrd	r2, [sp, #4]
   16da8:	add	r4, r4, r2
   16dac:	str	r4, [r6]
   16db0:	str	r3, [r7]
   16db4:	ldr	r2, [sp, #12]
   16db8:	ldr	r3, [r5]
   16dbc:	cmp	r2, r3
   16dc0:	bne	16e08 <__printf_chk@plt+0x4674>
   16dc4:	add	sp, sp, #16
   16dc8:	pop	{r4, r5, r6, r7, r8, pc}
   16dcc:	mov	r1, r8
   16dd0:	mov	r0, r4
   16dd4:	movw	r2, #41356	; 0xa18c
   16dd8:	add	r3, sp, #8
   16ddc:	movt	r2, #3
   16de0:	bl	31204 <crc32@@Base+0x177ac>
   16de4:	cmp	r0, #0
   16de8:	str	r0, [r6]
   16dec:	ldrne	r3, [sp, #8]
   16df0:	movne	r0, #0
   16df4:	strne	r3, [r7]
   16df8:	bne	16db4 <__printf_chk@plt+0x4620>
   16dfc:	str	r0, [r7]
   16e00:	mvn	r0, #0
   16e04:	b	16db4 <__printf_chk@plt+0x4620>
   16e08:	bl	124b8 <__stack_chk_fail@plt>
   16e0c:	push	{r4, r5, r6, r7, r8, lr}
   16e10:	movw	r7, #61168	; 0xeef0
   16e14:	movt	r7, #4
   16e18:	sub	sp, sp, #32
   16e1c:	mov	r6, r2
   16e20:	add	r3, sp, #24
   16e24:	ldr	ip, [r7]
   16e28:	movw	r2, #28140	; 0x6dec
   16e2c:	movt	r2, #3
   16e30:	mov	r5, r1
   16e34:	mov	r4, r0
   16e38:	str	ip, [sp, #28]
   16e3c:	bl	31204 <crc32@@Base+0x177ac>
   16e40:	movw	r1, #30548	; 0x7754
   16e44:	mov	r2, r6
   16e48:	movt	r1, #3
   16e4c:	subs	r8, r0, #0
   16e50:	mov	r0, #1
   16e54:	beq	170a8 <__printf_chk@plt+0x4914>
   16e58:	bl	12794 <__printf_chk@plt>
   16e5c:	mov	r0, r8
   16e60:	bl	12290 <puts@plt>
   16e64:	add	r2, sp, #24
   16e68:	mov	r1, #0
   16e6c:	mov	r0, r4
   16e70:	bl	166b0 <__printf_chk@plt+0x3f1c>
   16e74:	mov	r2, r6
   16e78:	movw	r1, #30568	; 0x7768
   16e7c:	movt	r1, #3
   16e80:	mov	r8, r0
   16e84:	mov	r0, #1
   16e88:	bl	12794 <__printf_chk@plt>
   16e8c:	cmp	r8, #0
   16e90:	beq	1709c <__printf_chk@plt+0x4908>
   16e94:	movw	r0, #30492	; 0x771c
   16e98:	movt	r0, #3
   16e9c:	bl	12290 <puts@plt>
   16ea0:	add	r2, sp, #4
   16ea4:	mov	r1, r5
   16ea8:	mov	r0, r4
   16eac:	bl	16ae4 <__printf_chk@plt+0x4350>
   16eb0:	ldrb	r0, [sp, #4]
   16eb4:	bl	1a6e0 <crc32@@Base+0xc88>
   16eb8:	mov	r2, r6
   16ebc:	movw	r1, #30588	; 0x777c
   16ec0:	movt	r1, #3
   16ec4:	mov	r3, r0
   16ec8:	mov	r0, #1
   16ecc:	bl	12794 <__printf_chk@plt>
   16ed0:	add	r2, sp, #7
   16ed4:	mov	r1, r5
   16ed8:	mov	r0, r4
   16edc:	bl	16b4c <__printf_chk@plt+0x43b8>
   16ee0:	ldrb	r0, [sp, #7]
   16ee4:	bl	1a788 <crc32@@Base+0xd30>
   16ee8:	mov	r2, r6
   16eec:	movw	r1, #30612	; 0x7794
   16ef0:	movt	r1, #3
   16ef4:	mov	r3, r0
   16ef8:	mov	r0, #1
   16efc:	bl	12794 <__printf_chk@plt>
   16f00:	add	r3, sp, #8
   16f04:	add	r2, sp, #20
   16f08:	mov	r1, r5
   16f0c:	mov	r0, r4
   16f10:	bl	16d14 <__printf_chk@plt+0x4580>
   16f14:	mov	r2, r6
   16f18:	movw	r1, #30636	; 0x77ac
   16f1c:	movt	r1, #3
   16f20:	mov	r8, r0
   16f24:	mov	r0, #1
   16f28:	bl	12794 <__printf_chk@plt>
   16f2c:	cmp	r8, #0
   16f30:	beq	170bc <__printf_chk@plt+0x4928>
   16f34:	movw	r0, #30492	; 0x771c
   16f38:	movt	r0, #3
   16f3c:	bl	12290 <puts@plt>
   16f40:	ldrb	r3, [sp, #4]
   16f44:	sub	r2, r3, #1
   16f48:	uxtb	r2, r2
   16f4c:	cmp	r2, #7
   16f50:	bhi	16f98 <__printf_chk@plt+0x4804>
   16f54:	mov	r1, #151	; 0x97
   16f58:	mvn	r2, r1, lsr r2
   16f5c:	tst	r2, #1
   16f60:	bne	16f98 <__printf_chk@plt+0x4804>
   16f64:	add	r2, sp, #5
   16f68:	mov	r1, r5
   16f6c:	mov	r0, r4
   16f70:	bl	16a7c <__printf_chk@plt+0x42e8>
   16f74:	ldrb	r0, [sp, #5]
   16f78:	bl	1a68c <crc32@@Base+0xc34>
   16f7c:	mov	r2, r6
   16f80:	movw	r1, #30656	; 0x77c0
   16f84:	movt	r1, #3
   16f88:	mov	r3, r0
   16f8c:	mov	r0, #1
   16f90:	bl	12794 <__printf_chk@plt>
   16f94:	ldrb	r3, [sp, #4]
   16f98:	sub	r2, r3, #2
   16f9c:	cmp	r3, #5
   16fa0:	cmpne	r2, #1
   16fa4:	bls	17160 <__printf_chk@plt+0x49cc>
   16fa8:	cmp	r3, #29
   16fac:	bhi	17014 <__printf_chk@plt+0x4880>
   16fb0:	mov	r2, #46	; 0x2e
   16fb4:	movt	r2, #8192	; 0x2000
   16fb8:	mvn	r2, r2, lsr r3
   16fbc:	tst	r2, #1
   16fc0:	bne	1700c <__printf_chk@plt+0x4878>
   16fc4:	add	r3, sp, #12
   16fc8:	mov	r1, r5
   16fcc:	movw	r2, #28240	; 0x6e50
   16fd0:	mov	r0, r4
   16fd4:	movt	r2, #3
   16fd8:	bl	16538 <__printf_chk@plt+0x3da4>
   16fdc:	mov	r2, r6
   16fe0:	movw	r1, #30704	; 0x77f0
   16fe4:	movt	r1, #3
   16fe8:	mov	r8, r0
   16fec:	mov	r0, #1
   16ff0:	bl	12794 <__printf_chk@plt>
   16ff4:	cmp	r8, #0
   16ff8:	beq	170c8 <__printf_chk@plt+0x4934>
   16ffc:	movw	r0, #30492	; 0x771c
   17000:	movt	r0, #3
   17004:	bl	12290 <puts@plt>
   17008:	ldrb	r3, [sp, #4]
   1700c:	cmp	r3, #8
   17010:	beq	170e8 <__printf_chk@plt+0x4954>
   17014:	sub	r3, r3, #1
   17018:	cmp	r3, #2
   1701c:	bls	17118 <__printf_chk@plt+0x4984>
   17020:	mov	r1, r5
   17024:	add	r2, sp, #24
   17028:	mov	r0, r4
   1702c:	mov	r3, #0
   17030:	str	r3, [sp, #24]
   17034:	bl	2dc88 <crc32@@Base+0x14230>
   17038:	subs	r5, r0, #0
   1703c:	bge	1705c <__printf_chk@plt+0x48c8>
   17040:	b	17084 <__printf_chk@plt+0x48f0>
   17044:	mov	r1, r5
   17048:	add	r2, sp, #24
   1704c:	mov	r0, r4
   17050:	bl	2dc88 <crc32@@Base+0x14230>
   17054:	subs	r5, r0, #0
   17058:	blt	17084 <__printf_chk@plt+0x48f0>
   1705c:	ldr	r3, [sp, #24]
   17060:	cmp	r3, #0
   17064:	ble	17084 <__printf_chk@plt+0x48f0>
   17068:	cmp	r3, #1
   1706c:	bne	17044 <__printf_chk@plt+0x48b0>
   17070:	mov	r2, r6
   17074:	mov	r1, r5
   17078:	mov	r0, r4
   1707c:	bl	1695c <__printf_chk@plt+0x41c8>
   17080:	b	17044 <__printf_chk@plt+0x48b0>
   17084:	ldr	r2, [sp, #28]
   17088:	ldr	r3, [r7]
   1708c:	cmp	r2, r3
   17090:	bne	171cc <__printf_chk@plt+0x4a38>
   17094:	add	sp, sp, #32
   17098:	pop	{r4, r5, r6, r7, r8, pc}
   1709c:	ldr	r0, [sp, #24]
   170a0:	bl	1a0a0 <crc32@@Base+0x648>
   170a4:	b	16ea0 <__printf_chk@plt+0x470c>
   170a8:	bl	12794 <__printf_chk@plt>
   170ac:	movw	r0, #30492	; 0x771c
   170b0:	movt	r0, #3
   170b4:	bl	12290 <puts@plt>
   170b8:	b	16e64 <__printf_chk@plt+0x46d0>
   170bc:	ldr	r0, [sp, #8]
   170c0:	bl	1a044 <crc32@@Base+0x5ec>
   170c4:	b	16f40 <__printf_chk@plt+0x47ac>
   170c8:	movw	r1, #30724	; 0x7804
   170cc:	ldr	r2, [sp, #12]
   170d0:	movt	r1, #3
   170d4:	mov	r0, #1
   170d8:	bl	12794 <__printf_chk@plt>
   170dc:	ldrb	r3, [sp, #4]
   170e0:	cmp	r3, #8
   170e4:	bne	17014 <__printf_chk@plt+0x4880>
   170e8:	movw	r2, #28240	; 0x6e50
   170ec:	add	r3, sp, #12
   170f0:	movt	r2, #3
   170f4:	mov	r1, r5
   170f8:	mov	r0, r4
   170fc:	bl	16538 <__printf_chk@plt+0x3da4>
   17100:	cmp	r0, #0
   17104:	beq	171b0 <__printf_chk@plt+0x4a1c>
   17108:	ldrb	r3, [sp, #4]
   1710c:	sub	r3, r3, #1
   17110:	cmp	r3, #2
   17114:	bhi	17020 <__printf_chk@plt+0x488c>
   17118:	add	r3, sp, #16
   1711c:	mov	r1, r5
   17120:	movw	r2, #28248	; 0x6e58
   17124:	mov	r0, r4
   17128:	movt	r2, #3
   1712c:	bl	16538 <__printf_chk@plt+0x3da4>
   17130:	mov	r2, r6
   17134:	movw	r1, #30764	; 0x782c
   17138:	movt	r1, #3
   1713c:	mov	r8, r0
   17140:	mov	r0, #1
   17144:	bl	12794 <__printf_chk@plt>
   17148:	cmp	r8, #0
   1714c:	beq	17198 <__printf_chk@plt+0x4a04>
   17150:	movw	r0, #30492	; 0x771c
   17154:	movt	r0, #3
   17158:	bl	12290 <puts@plt>
   1715c:	b	17020 <__printf_chk@plt+0x488c>
   17160:	add	r2, sp, #6
   17164:	mov	r1, r5
   17168:	mov	r0, r4
   1716c:	bl	16a14 <__printf_chk@plt+0x4280>
   17170:	ldrb	r0, [sp, #6]
   17174:	bl	1a638 <crc32@@Base+0xbe0>
   17178:	mov	r2, r6
   1717c:	movw	r1, #30680	; 0x77d8
   17180:	movt	r1, #3
   17184:	mov	r3, r0
   17188:	mov	r0, #1
   1718c:	bl	12794 <__printf_chk@plt>
   17190:	ldrb	r3, [sp, #4]
   17194:	b	16fa8 <__printf_chk@plt+0x4814>
   17198:	movw	r1, #30724	; 0x7804
   1719c:	ldr	r2, [sp, #16]
   171a0:	movt	r1, #3
   171a4:	mov	r0, #1
   171a8:	bl	12794 <__printf_chk@plt>
   171ac:	b	17020 <__printf_chk@plt+0x488c>
   171b0:	movw	r1, #30736	; 0x7810
   171b4:	ldr	r3, [sp, #12]
   171b8:	movt	r1, #3
   171bc:	mov	r2, r6
   171c0:	mov	r0, #1
   171c4:	bl	12794 <__printf_chk@plt>
   171c8:	b	17108 <__printf_chk@plt+0x4974>
   171cc:	bl	124b8 <__stack_chk_fail@plt>
   171d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171d4:	movw	sl, #61168	; 0xeef0
   171d8:	movt	sl, #4
   171dc:	sub	sp, sp, #44	; 0x2c
   171e0:	mov	r1, #0
   171e4:	movw	r2, #28140	; 0x6dec
   171e8:	ldr	ip, [sl]
   171ec:	movt	r2, #3
   171f0:	add	r3, sp, #32
   171f4:	mov	r4, r0
   171f8:	str	ip, [sp, #36]	; 0x24
   171fc:	bl	31204 <crc32@@Base+0x177ac>
   17200:	movw	r2, #46860	; 0xb70c
   17204:	movw	r1, #30784	; 0x7840
   17208:	movt	r2, #3
   1720c:	movt	r1, #3
   17210:	subs	r5, r0, #0
   17214:	mov	r0, #1
   17218:	beq	17378 <__printf_chk@plt+0x4be4>
   1721c:	bl	12794 <__printf_chk@plt>
   17220:	mov	r0, r5
   17224:	bl	12290 <puts@plt>
   17228:	add	r2, sp, #28
   1722c:	mov	r1, #0
   17230:	mov	r0, r4
   17234:	bl	166b0 <__printf_chk@plt+0x3f1c>
   17238:	movw	r2, #46860	; 0xb70c
   1723c:	movw	r1, #30804	; 0x7854
   17240:	movt	r2, #3
   17244:	movt	r1, #3
   17248:	mov	r5, r0
   1724c:	mov	r0, #1
   17250:	bl	12794 <__printf_chk@plt>
   17254:	cmp	r5, #0
   17258:	beq	1736c <__printf_chk@plt+0x4bd8>
   1725c:	movw	r0, #30492	; 0x771c
   17260:	movt	r0, #3
   17264:	bl	12290 <puts@plt>
   17268:	movw	r1, #27888	; 0x6cf0
   1726c:	mov	r0, r4
   17270:	movt	r1, #3
   17274:	bl	31560 <crc32@@Base+0x17b08>
   17278:	subs	r1, r0, #0
   1727c:	blt	176bc <__printf_chk@plt+0x4f28>
   17280:	add	r7, sp, #40	; 0x28
   17284:	mov	r8, #0
   17288:	mov	r0, r4
   1728c:	str	r8, [r7, #-16]!
   17290:	mov	r2, r7
   17294:	bl	2dc88 <crc32@@Base+0x14230>
   17298:	subs	r6, r0, #0
   1729c:	blt	1733c <__printf_chk@plt+0x4ba8>
   172a0:	ldr	r5, [sp, #24]
   172a4:	cmp	r5, r8
   172a8:	ble	1733c <__printf_chk@plt+0x4ba8>
   172ac:	movw	fp, #30824	; 0x7868
   172b0:	movt	fp, #3
   172b4:	movw	r9, #46860	; 0xb70c
   172b8:	str	sl, [sp, #8]
   172bc:	movt	r9, #3
   172c0:	mov	sl, fp
   172c4:	b	172ec <__printf_chk@plt+0x4b58>
   172c8:	mov	r1, r6
   172cc:	mov	r2, r7
   172d0:	mov	r0, r4
   172d4:	bl	2dc88 <crc32@@Base+0x14230>
   172d8:	subs	r6, r0, #0
   172dc:	blt	17338 <__printf_chk@plt+0x4ba4>
   172e0:	ldr	r5, [sp, #24]
   172e4:	cmp	r5, #0
   172e8:	ble	17338 <__printf_chk@plt+0x4ba4>
   172ec:	cmp	r5, #1
   172f0:	bne	172c8 <__printf_chk@plt+0x4b34>
   172f4:	mov	r1, r6
   172f8:	mov	r2, #0
   172fc:	mov	r0, r4
   17300:	add	fp, r8, #1
   17304:	bl	30f04 <crc32@@Base+0x174ac>
   17308:	mov	r3, r8
   1730c:	mov	r2, r9
   17310:	mov	r1, sl
   17314:	mov	r8, fp
   17318:	str	r0, [sp]
   1731c:	mov	r0, r5
   17320:	bl	12794 <__printf_chk@plt>
   17324:	mov	r2, r9
   17328:	mov	r1, r6
   1732c:	mov	r0, r4
   17330:	bl	16e0c <__printf_chk@plt+0x4678>
   17334:	b	172c8 <__printf_chk@plt+0x4b34>
   17338:	ldr	sl, [sp, #8]
   1733c:	movw	r1, #28948	; 0x7114
   17340:	mov	r0, r4
   17344:	movt	r1, #3
   17348:	bl	31560 <crc32@@Base+0x17b08>
   1734c:	subs	r5, r0, #0
   17350:	bge	1738c <__printf_chk@plt+0x4bf8>
   17354:	ldr	r2, [sp, #36]	; 0x24
   17358:	ldr	r3, [sl]
   1735c:	cmp	r2, r3
   17360:	bne	17704 <__printf_chk@plt+0x4f70>
   17364:	add	sp, sp, #44	; 0x2c
   17368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1736c:	ldr	r0, [sp, #28]
   17370:	bl	1a0a0 <crc32@@Base+0x648>
   17374:	b	17268 <__printf_chk@plt+0x4ad4>
   17378:	bl	12794 <__printf_chk@plt>
   1737c:	movw	r0, #30492	; 0x771c
   17380:	movt	r0, #3
   17384:	bl	12290 <puts@plt>
   17388:	b	17228 <__printf_chk@plt+0x4a94>
   1738c:	mov	r3, #0
   17390:	mov	r1, r6
   17394:	movw	r2, #28312	; 0x6e98
   17398:	mov	r0, r4
   1739c:	movt	r2, #3
   173a0:	bl	31204 <crc32@@Base+0x177ac>
   173a4:	subs	r3, r0, #0
   173a8:	beq	173c4 <__printf_chk@plt+0x4c30>
   173ac:	movw	r2, #46860	; 0xb70c
   173b0:	movw	r1, #30844	; 0x787c
   173b4:	movt	r2, #3
   173b8:	movt	r1, #3
   173bc:	mov	r0, #1
   173c0:	bl	12794 <__printf_chk@plt>
   173c4:	mov	r1, r5
   173c8:	mov	r2, r7
   173cc:	mov	r0, r4
   173d0:	mov	r9, #0
   173d4:	str	r9, [sp, #24]
   173d8:	bl	2dc88 <crc32@@Base+0x14230>
   173dc:	subs	r5, r0, #0
   173e0:	blt	17354 <__printf_chk@plt+0x4bc0>
   173e4:	ldr	r6, [sp, #24]
   173e8:	cmp	r6, r9
   173ec:	ble	17354 <__printf_chk@plt+0x4bc0>
   173f0:	movw	r8, #46860	; 0xb70c
   173f4:	movw	r3, #30876	; 0x789c
   173f8:	movt	r8, #3
   173fc:	movt	r3, #3
   17400:	str	sl, [sp, #20]
   17404:	str	r3, [sp, #12]
   17408:	movw	r3, #28140	; 0x6dec
   1740c:	movt	r3, #3
   17410:	str	r3, [sp, #16]
   17414:	b	1743c <__printf_chk@plt+0x4ca8>
   17418:	mov	r1, r5
   1741c:	mov	r2, r7
   17420:	mov	r0, r4
   17424:	bl	2dc88 <crc32@@Base+0x14230>
   17428:	subs	r5, r0, #0
   1742c:	blt	176e8 <__printf_chk@plt+0x4f54>
   17430:	ldr	r6, [sp, #24]
   17434:	cmp	r6, #0
   17438:	ble	176e8 <__printf_chk@plt+0x4f54>
   1743c:	cmp	r6, #1
   17440:	bne	17418 <__printf_chk@plt+0x4c84>
   17444:	mov	r2, #0
   17448:	mov	r1, r5
   1744c:	mov	r0, r4
   17450:	add	r3, r9, #1
   17454:	str	r3, [sp, #8]
   17458:	bl	30f04 <crc32@@Base+0x174ac>
   1745c:	mov	r3, r9
   17460:	mov	r2, r8
   17464:	ldr	r1, [sp, #12]
   17468:	str	r0, [sp]
   1746c:	mov	r0, r6
   17470:	bl	12794 <__printf_chk@plt>
   17474:	ldr	r2, [sp, #16]
   17478:	mov	r1, r5
   1747c:	add	r3, sp, #32
   17480:	mov	r0, r4
   17484:	bl	31204 <crc32@@Base+0x177ac>
   17488:	movw	r1, #30548	; 0x7754
   1748c:	mov	r2, r8
   17490:	movt	r1, #3
   17494:	subs	r9, r0, #0
   17498:	mov	r0, r6
   1749c:	beq	176f0 <__printf_chk@plt+0x4f5c>
   174a0:	bl	12794 <__printf_chk@plt>
   174a4:	mov	r0, r9
   174a8:	bl	12290 <puts@plt>
   174ac:	mov	r3, #0
   174b0:	mov	r1, r5
   174b4:	movw	r2, #30904	; 0x78b8
   174b8:	mov	r0, r4
   174bc:	movt	r2, #3
   174c0:	bl	31204 <crc32@@Base+0x177ac>
   174c4:	mov	r2, r8
   174c8:	movw	r1, #30912	; 0x78c0
   174cc:	movt	r1, #3
   174d0:	mov	r6, r0
   174d4:	mov	r0, #1
   174d8:	bl	12794 <__printf_chk@plt>
   174dc:	cmp	r6, #0
   174e0:	movweq	r0, #30492	; 0x771c
   174e4:	movne	r0, r6
   174e8:	movteq	r0, #3
   174ec:	bl	12290 <puts@plt>
   174f0:	mov	r3, #0
   174f4:	movw	r2, #28280	; 0x6e78
   174f8:	mov	r1, r5
   174fc:	movt	r2, #3
   17500:	mov	r0, r4
   17504:	bl	31204 <crc32@@Base+0x177ac>
   17508:	subs	r3, r0, #0
   1750c:	beq	17524 <__printf_chk@plt+0x4d90>
   17510:	movw	r1, #30932	; 0x78d4
   17514:	mov	r2, r8
   17518:	movt	r1, #3
   1751c:	mov	r0, #1
   17520:	bl	12794 <__printf_chk@plt>
   17524:	mov	r3, #0
   17528:	movw	r2, #42492	; 0xa5fc
   1752c:	mov	r1, r5
   17530:	movt	r2, #3
   17534:	mov	r0, r4
   17538:	bl	31204 <crc32@@Base+0x177ac>
   1753c:	subs	r3, r0, #0
   17540:	beq	17558 <__printf_chk@plt+0x4dc4>
   17544:	movw	r1, #30956	; 0x78ec
   17548:	mov	r2, r8
   1754c:	movt	r1, #3
   17550:	mov	r0, #1
   17554:	bl	12794 <__printf_chk@plt>
   17558:	movw	r9, #28256	; 0x6e60
   1755c:	movw	fp, #31000	; 0x7918
   17560:	movt	r9, #3
   17564:	movt	fp, #3
   17568:	mov	r6, #0
   1756c:	b	1759c <__printf_chk@plt+0x4e08>
   17570:	cmp	r6, #0
   17574:	mov	r0, #1
   17578:	add	r6, r6, #1
   1757c:	movweq	r1, #30980	; 0x7904
   17580:	moveq	r2, r8
   17584:	movteq	r1, #3
   17588:	movne	r2, r8
   1758c:	movne	r1, fp
   17590:	bl	12794 <__printf_chk@plt>
   17594:	mov	r0, sl
   17598:	bl	12290 <puts@plt>
   1759c:	mov	r2, #0
   175a0:	mov	r3, r6
   175a4:	str	r2, [sp]
   175a8:	mov	r1, r5
   175ac:	mov	r2, r9
   175b0:	mov	r0, r4
   175b4:	bl	31c0c <crc32@@Base+0x181b4>
   175b8:	subs	sl, r0, #0
   175bc:	bne	17570 <__printf_chk@plt+0x4ddc>
   175c0:	mov	r3, sl
   175c4:	movw	r2, #31020	; 0x792c
   175c8:	mov	r1, r5
   175cc:	movt	r2, #3
   175d0:	mov	r0, r4
   175d4:	bl	31204 <crc32@@Base+0x177ac>
   175d8:	subs	r3, r0, #0
   175dc:	beq	175f4 <__printf_chk@plt+0x4e60>
   175e0:	movw	r1, #31028	; 0x7934
   175e4:	mov	r2, r8
   175e8:	movt	r1, #3
   175ec:	mov	r0, #1
   175f0:	bl	12794 <__printf_chk@plt>
   175f4:	movw	r9, #28328	; 0x6ea8
   175f8:	movw	fp, #31000	; 0x7918
   175fc:	movt	r9, #3
   17600:	movt	fp, #3
   17604:	mov	r6, #0
   17608:	b	17638 <__printf_chk@plt+0x4ea4>
   1760c:	cmp	r6, #0
   17610:	mov	r0, #1
   17614:	add	r6, r6, #1
   17618:	movweq	r1, #31052	; 0x794c
   1761c:	moveq	r2, r8
   17620:	movteq	r1, #3
   17624:	movne	r2, r8
   17628:	movne	r1, fp
   1762c:	bl	12794 <__printf_chk@plt>
   17630:	mov	r0, sl
   17634:	bl	12290 <puts@plt>
   17638:	mov	r2, #0
   1763c:	mov	r3, r6
   17640:	str	r2, [sp]
   17644:	mov	r1, r5
   17648:	mov	r2, r9
   1764c:	mov	r0, r4
   17650:	bl	31c0c <crc32@@Base+0x181b4>
   17654:	subs	sl, r0, #0
   17658:	bne	1760c <__printf_chk@plt+0x4e78>
   1765c:	add	r2, sp, #32
   17660:	mov	r1, r5
   17664:	mov	r0, r4
   17668:	str	sl, [sp, #32]
   1766c:	bl	2dc88 <crc32@@Base+0x14230>
   17670:	subs	r6, r0, #0
   17674:	bge	17694 <__printf_chk@plt+0x4f00>
   17678:	b	176e0 <__printf_chk@plt+0x4f4c>
   1767c:	mov	r1, r6
   17680:	add	r2, sp, #32
   17684:	mov	r0, r4
   17688:	bl	2dc88 <crc32@@Base+0x14230>
   1768c:	subs	r6, r0, #0
   17690:	blt	176e0 <__printf_chk@plt+0x4f4c>
   17694:	ldr	r3, [sp, #32]
   17698:	cmp	r3, #0
   1769c:	ble	176e0 <__printf_chk@plt+0x4f4c>
   176a0:	cmp	r3, #1
   176a4:	bne	1767c <__printf_chk@plt+0x4ee8>
   176a8:	mov	r2, r8
   176ac:	mov	r1, r6
   176b0:	mov	r0, r4
   176b4:	bl	1695c <__printf_chk@plt+0x41c8>
   176b8:	b	1767c <__printf_chk@plt+0x4ee8>
   176bc:	bl	2fac0 <crc32@@Base+0x16068>
   176c0:	movw	r2, #27888	; 0x6cf0
   176c4:	movw	r1, #27896	; 0x6cf8
   176c8:	movt	r2, #3
   176cc:	movt	r1, #3
   176d0:	mov	r3, r0
   176d4:	mov	r0, #1
   176d8:	bl	12794 <__printf_chk@plt>
   176dc:	b	17354 <__printf_chk@plt+0x4bc0>
   176e0:	ldr	r9, [sp, #8]
   176e4:	b	17418 <__printf_chk@plt+0x4c84>
   176e8:	ldr	sl, [sp, #20]
   176ec:	b	17354 <__printf_chk@plt+0x4bc0>
   176f0:	bl	12794 <__printf_chk@plt>
   176f4:	movw	r0, #30492	; 0x771c
   176f8:	movt	r0, #3
   176fc:	bl	12290 <puts@plt>
   17700:	b	174ac <__printf_chk@plt+0x4d18>
   17704:	bl	124b8 <__stack_chk_fail@plt>
   17708:	push	{r4, r5, lr}
   1770c:	movw	r4, #61168	; 0xeef0
   17710:	movt	r4, #4
   17714:	sub	sp, sp, #12
   17718:	mov	r5, r2
   1771c:	movw	r2, #30396	; 0x76bc
   17720:	ldr	ip, [r4]
   17724:	mov	r3, sp
   17728:	movt	r2, #3
   1772c:	str	ip, [sp, #4]
   17730:	bl	31204 <crc32@@Base+0x177ac>
   17734:	ldr	r2, [sp, #4]
   17738:	str	r0, [r5]
   1773c:	ldr	r3, [r4]
   17740:	cmp	r2, r3
   17744:	bne	1775c <__printf_chk@plt+0x4fc8>
   17748:	clz	r0, r0
   1774c:	lsr	r0, r0, #5
   17750:	rsb	r0, r0, #0
   17754:	add	sp, sp, #12
   17758:	pop	{r4, r5, pc}
   1775c:	bl	124b8 <__stack_chk_fail@plt>
   17760:	push	{r4, r5, r6, lr}
   17764:	movw	r4, #61168	; 0xeef0
   17768:	movt	r4, #4
   1776c:	sub	sp, sp, #8
   17770:	mov	r6, r3
   17774:	mov	r5, r2
   17778:	ldr	ip, [r4]
   1777c:	mov	r3, sp
   17780:	movw	r2, #28864	; 0x70c0
   17784:	movt	r2, #3
   17788:	str	ip, [sp, #4]
   1778c:	bl	31204 <crc32@@Base+0x177ac>
   17790:	ldr	r2, [sp, #4]
   17794:	cmp	r0, #0
   17798:	str	r0, [r5]
   1779c:	streq	r0, [r6]
   177a0:	ldrne	r3, [sp]
   177a4:	mvneq	r0, #0
   177a8:	movne	r0, #0
   177ac:	strne	r3, [r6]
   177b0:	ldr	r3, [r4]
   177b4:	cmp	r2, r3
   177b8:	bne	177c4 <__printf_chk@plt+0x5030>
   177bc:	add	sp, sp, #8
   177c0:	pop	{r4, r5, r6, pc}
   177c4:	bl	124b8 <__stack_chk_fail@plt>
   177c8:	ldr	r2, [r0, #4]
   177cc:	ubfx	ip, r2, #8, #8
   177d0:	ubfx	r1, r2, #16, #8
   177d4:	lsr	r3, r2, #24
   177d8:	orr	r3, r3, r2, lsl #24
   177dc:	orr	r3, r3, ip, lsl #16
   177e0:	orr	r3, r3, r1, lsl #8
   177e4:	add	r0, r0, r3
   177e8:	bx	lr
   177ec:	push	{r4, lr}
   177f0:	movw	r4, #61168	; 0xeef0
   177f4:	movt	r4, #4
   177f8:	sub	sp, sp, #16
   177fc:	add	r3, sp, #16
   17800:	rev	r2, r2
   17804:	ldr	ip, [r4]
   17808:	str	r2, [r3, #-8]!
   1780c:	mov	r2, #4
   17810:	str	r2, [sp]
   17814:	movw	r2, #30364	; 0x769c
   17818:	movt	r2, #3
   1781c:	str	ip, [sp, #12]
   17820:	bl	2f2b8 <crc32@@Base+0x15860>
   17824:	cmp	r0, #0
   17828:	beq	17838 <__printf_chk@plt+0x50a4>
   1782c:	cmn	r0, #3
   17830:	mvnne	r0, #0
   17834:	mvneq	r0, #27
   17838:	ldr	r2, [sp, #12]
   1783c:	ldr	r3, [r4]
   17840:	cmp	r2, r3
   17844:	bne	17850 <__printf_chk@plt+0x50bc>
   17848:	add	sp, sp, #16
   1784c:	pop	{r4, pc}
   17850:	bl	124b8 <__stack_chk_fail@plt>
   17854:	push	{r4, r5, r6, r7, r8, lr}
   17858:	mov	r7, r1
   1785c:	mov	r6, r0
   17860:	movw	r1, #31072	; 0x7960
   17864:	mov	r0, r2
   17868:	movt	r1, #3
   1786c:	mov	r5, r2
   17870:	mov	r8, r3
   17874:	bl	12680 <strcmp@plt>
   17878:	subs	r4, r0, #0
   1787c:	beq	1793c <__printf_chk@plt+0x51a8>
   17880:	movw	r1, #31080	; 0x7968
   17884:	mov	r0, r5
   17888:	movt	r1, #3
   1788c:	bl	12680 <strcmp@plt>
   17890:	subs	r4, r0, #0
   17894:	beq	17908 <__printf_chk@plt+0x5174>
   17898:	movw	r1, #31088	; 0x7970
   1789c:	mov	r0, r5
   178a0:	movt	r1, #3
   178a4:	bl	12680 <strcmp@plt>
   178a8:	subs	r4, r0, #0
   178ac:	beq	17968 <__printf_chk@plt+0x51d4>
   178b0:	ldrb	r3, [r5]
   178b4:	cmp	r3, #109	; 0x6d
   178b8:	bne	17930 <__printf_chk@plt+0x519c>
   178bc:	ldrb	r3, [r5, #1]
   178c0:	cmp	r3, #100	; 0x64
   178c4:	bne	17930 <__printf_chk@plt+0x519c>
   178c8:	ldrb	r3, [r5, #2]
   178cc:	cmp	r3, #53	; 0x35
   178d0:	bne	17930 <__printf_chk@plt+0x519c>
   178d4:	ldrb	r4, [r5, #3]
   178d8:	cmp	r4, #0
   178dc:	bne	17930 <__printf_chk@plt+0x519c>
   178e0:	mov	r2, r8
   178e4:	mov	r0, r6
   178e8:	mov	r1, r7
   178ec:	mov	r3, #65536	; 0x10000
   178f0:	bl	21b00 <crc32@@Base+0x80a8>
   178f4:	ldr	r2, [sp, #24]
   178f8:	mov	r3, #16
   178fc:	mov	r0, r4
   17900:	str	r3, [r2]
   17904:	pop	{r4, r5, r6, r7, r8, pc}
   17908:	mov	r2, r8
   1790c:	mov	r0, r6
   17910:	mov	r1, r7
   17914:	mov	r3, #65536	; 0x10000
   17918:	bl	27ff8 <crc32@@Base+0xe5a0>
   1791c:	ldr	r2, [sp, #24]
   17920:	mov	r3, #20
   17924:	mov	r0, r4
   17928:	str	r3, [r2]
   1792c:	pop	{r4, r5, r6, r7, r8, pc}
   17930:	mvn	r4, #0
   17934:	mov	r0, r4
   17938:	pop	{r4, r5, r6, r7, r8, pc}
   1793c:	mov	r2, r7
   17940:	mov	r1, r6
   17944:	mov	r3, #65536	; 0x10000
   17948:	bl	19a6c <crc32@@Base+0x14>
   1794c:	ldr	r2, [sp, #24]
   17950:	mov	r3, #4
   17954:	rev	r0, r0
   17958:	str	r0, [r8]
   1795c:	str	r3, [r2]
   17960:	mov	r0, r4
   17964:	pop	{r4, r5, r6, r7, r8, pc}
   17968:	mov	r2, r8
   1796c:	mov	r0, r6
   17970:	mov	r1, r7
   17974:	mov	r3, #65536	; 0x10000
   17978:	bl	2a840 <crc32@@Base+0x10de8>
   1797c:	ldr	r2, [sp, #24]
   17980:	mov	r3, #32
   17984:	mov	r0, r4
   17988:	str	r3, [r2]
   1798c:	pop	{r4, r5, r6, r7, r8, pc}
   17990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17994:	movw	r6, #61168	; 0xeef0
   17998:	movt	r6, #4
   1799c:	sub	sp, sp, #76	; 0x4c
   179a0:	mov	r5, r0
   179a4:	add	r4, sp, #72	; 0x48
   179a8:	ldr	r0, [r6]
   179ac:	mov	r9, r1
   179b0:	mov	fp, r2
   179b4:	mov	r8, r3
   179b8:	mov	r2, #1
   179bc:	movw	r3, #46860	; 0xb70c
   179c0:	str	r2, [r4, #-44]!	; 0xffffffd4
   179c4:	movt	r3, #3
   179c8:	str	r0, [sp, #68]	; 0x44
   179cc:	str	r3, [sp, #24]
   179d0:	bl	18b54 <__printf_chk@plt+0x63c0>
   179d4:	str	r4, [sp, #4]
   179d8:	mov	r3, r8
   179dc:	mov	r2, fp
   179e0:	mov	r1, r9
   179e4:	str	r0, [sp]
   179e8:	mov	r0, r5
   179ec:	bl	18f3c <__printf_chk@plt+0x67a8>
   179f0:	cmp	r0, #0
   179f4:	beq	17a68 <__printf_chk@plt+0x52d4>
   179f8:	movw	r2, #31096	; 0x7978
   179fc:	movt	r2, #3
   17a00:	mov	r4, #0
   17a04:	str	r2, [sp, #24]
   17a08:	mov	r7, r2
   17a0c:	mov	r1, r4
   17a10:	mov	r2, #0
   17a14:	mov	r0, r5
   17a18:	bl	30f04 <crc32@@Base+0x174ac>
   17a1c:	mov	r1, r9
   17a20:	mov	r2, #0
   17a24:	mov	r4, r0
   17a28:	mov	r0, r5
   17a2c:	bl	30f04 <crc32@@Base+0x174ac>
   17a30:	mov	r3, r4
   17a34:	mov	r2, r7
   17a38:	movw	r1, #31296	; 0x7a40
   17a3c:	movt	r1, #3
   17a40:	str	r0, [sp]
   17a44:	mov	r0, #1
   17a48:	bl	12794 <__printf_chk@plt>
   17a4c:	mov	r0, #0
   17a50:	ldr	r2, [sp, #68]	; 0x44
   17a54:	ldr	r3, [r6]
   17a58:	cmp	r2, r3
   17a5c:	bne	17cac <__printf_chk@plt+0x5518>
   17a60:	add	sp, sp, #76	; 0x4c
   17a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a68:	mov	r1, r9
   17a6c:	mov	r0, r5
   17a70:	bl	2dd78 <crc32@@Base+0x14320>
   17a74:	subs	r4, r0, #0
   17a78:	blt	17bfc <__printf_chk@plt+0x5468>
   17a7c:	movw	r3, #29816	; 0x7478
   17a80:	movt	r3, #3
   17a84:	str	r3, [sp, #12]
   17a88:	movw	r3, #31288	; 0x7a38
   17a8c:	movt	r3, #3
   17a90:	movw	r7, #29164	; 0x71ec
   17a94:	str	r6, [sp, #20]
   17a98:	movt	r7, #3
   17a9c:	str	r9, [sp, #16]
   17aa0:	mov	r6, r3
   17aa4:	b	17ae0 <__printf_chk@plt+0x534c>
   17aa8:	ldr	r3, [sp, #28]
   17aac:	cmp	r3, #0
   17ab0:	beq	17acc <__printf_chk@plt+0x5338>
   17ab4:	mov	r0, r9
   17ab8:	mov	r2, #9
   17abc:	ldr	r1, [sp, #12]
   17ac0:	bl	121a0 <strncmp@plt>
   17ac4:	cmp	r0, #0
   17ac8:	beq	17bb8 <__printf_chk@plt+0x5424>
   17acc:	mov	r1, r4
   17ad0:	mov	r0, r5
   17ad4:	bl	2ddd8 <crc32@@Base+0x14380>
   17ad8:	subs	r4, r0, #0
   17adc:	blt	17bf4 <__printf_chk@plt+0x5460>
   17ae0:	mov	r2, #0
   17ae4:	mov	r1, r4
   17ae8:	mov	r0, r5
   17aec:	bl	30f04 <crc32@@Base+0x174ac>
   17af0:	mov	r2, #4
   17af4:	mov	r1, r7
   17af8:	mov	r9, r0
   17afc:	bl	121a0 <strncmp@plt>
   17b00:	subs	ip, r0, #0
   17b04:	bne	17aa8 <__printf_chk@plt+0x5314>
   17b08:	movw	r2, #30396	; 0x76bc
   17b0c:	mov	r1, r4
   17b10:	movt	r2, #3
   17b14:	add	r3, sp, #32
   17b18:	mov	r0, r5
   17b1c:	str	ip, [sp, #24]
   17b20:	bl	31204 <crc32@@Base+0x177ac>
   17b24:	subs	r9, r0, #0
   17b28:	beq	17c74 <__printf_chk@plt+0x54e0>
   17b2c:	mov	r2, r9
   17b30:	movw	r1, #56260	; 0xdbc4
   17b34:	mov	r0, #1
   17b38:	movt	r1, #3
   17b3c:	bl	12794 <__printf_chk@plt>
   17b40:	add	r3, sp, #32
   17b44:	movw	r2, #28864	; 0x70c0
   17b48:	mov	r1, r4
   17b4c:	movt	r2, #3
   17b50:	mov	r0, r5
   17b54:	bl	31204 <crc32@@Base+0x177ac>
   17b58:	subs	sl, r0, #0
   17b5c:	beq	17c90 <__printf_chk@plt+0x54fc>
   17b60:	add	r3, sp, #32
   17b64:	mov	r2, r9
   17b68:	str	r3, [sp]
   17b6c:	mov	r1, r8
   17b70:	add	r3, sp, #36	; 0x24
   17b74:	mov	r0, fp
   17b78:	ldr	r9, [sp, #32]
   17b7c:	bl	17854 <__printf_chk@plt+0x50c0>
   17b80:	cmp	r0, #0
   17b84:	bne	17c3c <__printf_chk@plt+0x54a8>
   17b88:	ldr	r3, [sp, #32]
   17b8c:	cmp	r9, r3
   17b90:	bne	17c20 <__printf_chk@plt+0x548c>
   17b94:	mov	r2, r9
   17b98:	mov	r1, sl
   17b9c:	add	r0, sp, #36	; 0x24
   17ba0:	bl	126ec <memcmp@plt>
   17ba4:	cmp	r0, #0
   17ba8:	bne	17c58 <__printf_chk@plt+0x54c4>
   17bac:	mov	r0, r6
   17bb0:	bl	12290 <puts@plt>
   17bb4:	b	17acc <__printf_chk@plt+0x5338>
   17bb8:	add	r3, sp, #24
   17bbc:	mvn	r2, #0
   17bc0:	str	r3, [sp, #4]
   17bc4:	mov	r1, r4
   17bc8:	str	r2, [sp]
   17bcc:	mov	r3, r8
   17bd0:	mov	r2, fp
   17bd4:	mov	r0, r5
   17bd8:	bl	18e20 <__printf_chk@plt+0x668c>
   17bdc:	cmp	r0, #0
   17be0:	beq	17bac <__printf_chk@plt+0x5418>
   17be4:	movw	r0, #31292	; 0x7a3c
   17be8:	movt	r0, #3
   17bec:	bl	12290 <puts@plt>
   17bf0:	b	17acc <__printf_chk@plt+0x5338>
   17bf4:	ldr	r9, [sp, #16]
   17bf8:	ldr	r6, [sp, #20]
   17bfc:	cmn	r4, #8
   17c00:	cmnne	r4, #11
   17c04:	movne	r0, #1
   17c08:	bne	17a50 <__printf_chk@plt+0x52bc>
   17c0c:	movw	r2, #31164	; 0x79bc
   17c10:	movt	r2, #3
   17c14:	str	r2, [sp, #24]
   17c18:	mov	r7, r2
   17c1c:	b	17a0c <__printf_chk@plt+0x5278>
   17c20:	movw	r2, #31240	; 0x7a08
   17c24:	movt	r2, #3
   17c28:	ldr	r9, [sp, #16]
   17c2c:	ldr	r6, [sp, #20]
   17c30:	mov	r7, r2
   17c34:	str	r2, [sp, #24]
   17c38:	b	17a0c <__printf_chk@plt+0x5278>
   17c3c:	movw	r2, #31260	; 0x7a1c
   17c40:	movt	r2, #3
   17c44:	ldr	r9, [sp, #16]
   17c48:	ldr	r6, [sp, #20]
   17c4c:	mov	r7, r2
   17c50:	str	r2, [sp, #24]
   17c54:	b	17a0c <__printf_chk@plt+0x5278>
   17c58:	movw	r2, #31224	; 0x79f8
   17c5c:	movt	r2, #3
   17c60:	ldr	r9, [sp, #16]
   17c64:	ldr	r6, [sp, #20]
   17c68:	mov	r7, r2
   17c6c:	str	r2, [sp, #24]
   17c70:	b	17a0c <__printf_chk@plt+0x5278>
   17c74:	movw	r2, #31192	; 0x79d8
   17c78:	movt	r2, #3
   17c7c:	ldr	r9, [sp, #16]
   17c80:	ldr	r6, [sp, #20]
   17c84:	mov	r7, r2
   17c88:	str	r2, [sp, #24]
   17c8c:	b	17a0c <__printf_chk@plt+0x5278>
   17c90:	movw	r2, #31132	; 0x799c
   17c94:	movt	r2, #3
   17c98:	ldr	r9, [sp, #16]
   17c9c:	ldr	r6, [sp, #20]
   17ca0:	mov	r7, r2
   17ca4:	str	r2, [sp, #24]
   17ca8:	b	17a0c <__printf_chk@plt+0x5278>
   17cac:	bl	124b8 <__stack_chk_fail@plt>
   17cb0:	push	{r4, r5, r6, r7, lr}
   17cb4:	movw	r4, #61168	; 0xeef0
   17cb8:	movt	r4, #4
   17cbc:	sub	sp, sp, #28
   17cc0:	add	r3, sp, #16
   17cc4:	add	r2, sp, #12
   17cc8:	ldr	ip, [r4]
   17ccc:	mov	r5, r0
   17cd0:	mov	r6, r1
   17cd4:	str	ip, [sp, #20]
   17cd8:	bl	16d14 <__printf_chk@plt+0x4580>
   17cdc:	cmp	r0, #0
   17ce0:	bne	17d0c <__printf_chk@plt+0x5578>
   17ce4:	mov	r1, r6
   17ce8:	mov	r0, r5
   17cec:	ldrd	r2, [sp, #12]
   17cf0:	bl	17990 <__printf_chk@plt+0x51fc>
   17cf4:	ldr	r2, [sp, #20]
   17cf8:	ldr	r3, [r4]
   17cfc:	cmp	r2, r3
   17d00:	bne	17d58 <__printf_chk@plt+0x55c4>
   17d04:	add	sp, sp, #28
   17d08:	pop	{r4, r5, r6, r7, pc}
   17d0c:	mov	r2, #0
   17d10:	mov	r0, r5
   17d14:	mov	r1, r2
   17d18:	bl	30f04 <crc32@@Base+0x174ac>
   17d1c:	mov	r1, r6
   17d20:	mov	r2, #0
   17d24:	mov	r7, r0
   17d28:	mov	r0, r5
   17d2c:	bl	30f04 <crc32@@Base+0x174ac>
   17d30:	mov	r3, r7
   17d34:	movw	r2, #29540	; 0x7364
   17d38:	movw	r1, #31348	; 0x7a74
   17d3c:	movt	r2, #3
   17d40:	movt	r1, #3
   17d44:	str	r0, [sp]
   17d48:	mov	r0, #1
   17d4c:	bl	12794 <__printf_chk@plt>
   17d50:	mov	r0, #0
   17d54:	b	17cf4 <__printf_chk@plt+0x5560>
   17d58:	bl	124b8 <__stack_chk_fail@plt>
   17d5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17d60:	movw	r9, #61168	; 0xeef0
   17d64:	movt	r9, #4
   17d68:	sub	sp, sp, #8
   17d6c:	movw	r1, #27888	; 0x6cf0
   17d70:	movt	r1, #3
   17d74:	ldr	r3, [r9]
   17d78:	mov	r6, r0
   17d7c:	str	r3, [sp, #4]
   17d80:	bl	31560 <crc32@@Base+0x17b08>
   17d84:	subs	r4, r0, #0
   17d88:	blt	17e6c <__printf_chk@plt+0x56d8>
   17d8c:	add	r8, sp, #8
   17d90:	mov	r2, r6
   17d94:	movw	r1, #31400	; 0x7aa8
   17d98:	mov	r0, #1
   17d9c:	movt	r1, #3
   17da0:	mov	r7, #0
   17da4:	bl	12794 <__printf_chk@plt>
   17da8:	str	r7, [r8, #-8]!
   17dac:	mov	r1, r4
   17db0:	mov	r0, r6
   17db4:	mov	r2, r8
   17db8:	bl	2dc88 <crc32@@Base+0x14230>
   17dbc:	subs	r5, r0, #0
   17dc0:	blt	17e50 <__printf_chk@plt+0x56bc>
   17dc4:	ldr	r4, [sp]
   17dc8:	cmp	r4, r7
   17dcc:	ble	17e50 <__printf_chk@plt+0x56bc>
   17dd0:	movw	sl, #31452	; 0x7adc
   17dd4:	movt	sl, #3
   17dd8:	b	17e00 <__printf_chk@plt+0x566c>
   17ddc:	mov	r1, r5
   17de0:	mov	r2, r8
   17de4:	mov	r0, r6
   17de8:	bl	2dc88 <crc32@@Base+0x14230>
   17dec:	subs	r5, r0, #0
   17df0:	blt	17e50 <__printf_chk@plt+0x56bc>
   17df4:	ldr	r4, [sp]
   17df8:	cmp	r4, #0
   17dfc:	ble	17e50 <__printf_chk@plt+0x56bc>
   17e00:	cmp	r4, #1
   17e04:	bne	17ddc <__printf_chk@plt+0x5648>
   17e08:	mov	r2, #0
   17e0c:	mov	r1, r5
   17e10:	mov	r0, r6
   17e14:	bl	30f04 <crc32@@Base+0x174ac>
   17e18:	mov	r2, r7
   17e1c:	mov	r1, sl
   17e20:	add	r7, r7, #1
   17e24:	mov	r3, r0
   17e28:	mov	r0, r4
   17e2c:	bl	12794 <__printf_chk@plt>
   17e30:	mov	r1, r5
   17e34:	mov	r0, r6
   17e38:	bl	17cb0 <__printf_chk@plt+0x551c>
   17e3c:	cmp	r0, #0
   17e40:	beq	17e54 <__printf_chk@plt+0x56c0>
   17e44:	mov	r0, #10
   17e48:	bl	122fc <putchar@plt>
   17e4c:	b	17ddc <__printf_chk@plt+0x5648>
   17e50:	mov	r0, #1
   17e54:	ldr	r2, [sp, #4]
   17e58:	ldr	r3, [r9]
   17e5c:	cmp	r2, r3
   17e60:	bne	17e94 <__printf_chk@plt+0x5700>
   17e64:	add	sp, sp, #8
   17e68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17e6c:	bl	2fac0 <crc32@@Base+0x16068>
   17e70:	movw	r2, #27888	; 0x6cf0
   17e74:	movw	r1, #27896	; 0x6cf8
   17e78:	movt	r2, #3
   17e7c:	movt	r1, #3
   17e80:	mov	r3, r0
   17e84:	mov	r0, #1
   17e88:	bl	12794 <__printf_chk@plt>
   17e8c:	mov	r0, #0
   17e90:	b	17e54 <__printf_chk@plt+0x56c0>
   17e94:	bl	124b8 <__stack_chk_fail@plt>
   17e98:	push	{r4, r5, lr}
   17e9c:	movw	r4, #61168	; 0xeef0
   17ea0:	movt	r4, #4
   17ea4:	sub	sp, sp, #12
   17ea8:	mov	r5, r2
   17eac:	add	r2, sp, #3
   17eb0:	ldr	r3, [r4]
   17eb4:	str	r3, [sp, #4]
   17eb8:	bl	16a14 <__printf_chk@plt+0x4280>
   17ebc:	ldr	r2, [sp, #4]
   17ec0:	ldr	r3, [r4]
   17ec4:	cmp	r0, #0
   17ec8:	ldrbeq	r0, [sp, #3]
   17ecc:	movne	r0, #0
   17ed0:	subeq	r0, r0, r5
   17ed4:	clzeq	r0, r0
   17ed8:	lsreq	r0, r0, #5
   17edc:	cmp	r2, r3
   17ee0:	bne	17eec <__printf_chk@plt+0x5758>
   17ee4:	add	sp, sp, #12
   17ee8:	pop	{r4, r5, pc}
   17eec:	bl	124b8 <__stack_chk_fail@plt>
   17ef0:	push	{r4, r5, lr}
   17ef4:	movw	r4, #61168	; 0xeef0
   17ef8:	movt	r4, #4
   17efc:	sub	sp, sp, #12
   17f00:	mov	r5, r2
   17f04:	add	r2, sp, #3
   17f08:	ldr	r3, [r4]
   17f0c:	str	r3, [sp, #4]
   17f10:	bl	16a7c <__printf_chk@plt+0x42e8>
   17f14:	cmp	r0, #0
   17f18:	movne	r0, #0
   17f1c:	bne	17f40 <__printf_chk@plt+0x57ac>
   17f20:	ldrb	r0, [sp, #3]
   17f24:	cmp	r0, r5
   17f28:	moveq	r0, #1
   17f2c:	beq	17f40 <__printf_chk@plt+0x57ac>
   17f30:	cmp	r5, #3
   17f34:	cmpeq	r0, #24
   17f38:	moveq	r0, #1
   17f3c:	movne	r0, #0
   17f40:	ldr	r2, [sp, #4]
   17f44:	ldr	r3, [r4]
   17f48:	cmp	r2, r3
   17f4c:	bne	17f58 <__printf_chk@plt+0x57c4>
   17f50:	add	sp, sp, #12
   17f54:	pop	{r4, r5, pc}
   17f58:	bl	124b8 <__stack_chk_fail@plt>
   17f5c:	push	{r4, r5, lr}
   17f60:	movw	r4, #61168	; 0xeef0
   17f64:	movt	r4, #4
   17f68:	sub	sp, sp, #12
   17f6c:	mov	r5, r2
   17f70:	add	r2, sp, #3
   17f74:	ldr	r3, [r4]
   17f78:	str	r3, [sp, #4]
   17f7c:	bl	16ae4 <__printf_chk@plt+0x4350>
   17f80:	ldr	r2, [sp, #4]
   17f84:	ldr	r3, [r4]
   17f88:	cmp	r0, #0
   17f8c:	ldrbeq	r0, [sp, #3]
   17f90:	movne	r0, #0
   17f94:	subeq	r0, r0, r5
   17f98:	clzeq	r0, r0
   17f9c:	lsreq	r0, r0, #5
   17fa0:	cmp	r2, r3
   17fa4:	bne	17fb0 <__printf_chk@plt+0x581c>
   17fa8:	add	sp, sp, #12
   17fac:	pop	{r4, r5, pc}
   17fb0:	bl	124b8 <__stack_chk_fail@plt>
   17fb4:	push	{r4, r5, lr}
   17fb8:	movw	r4, #61168	; 0xeef0
   17fbc:	movt	r4, #4
   17fc0:	sub	sp, sp, #12
   17fc4:	mov	r5, r2
   17fc8:	add	r2, sp, #3
   17fcc:	ldr	r3, [r4]
   17fd0:	str	r3, [sp, #4]
   17fd4:	bl	16b4c <__printf_chk@plt+0x43b8>
   17fd8:	ldr	r2, [sp, #4]
   17fdc:	ldr	r3, [r4]
   17fe0:	cmp	r0, #0
   17fe4:	ldrbeq	r0, [sp, #3]
   17fe8:	movne	r0, #0
   17fec:	subeq	r0, r0, r5
   17ff0:	clzeq	r0, r0
   17ff4:	lsreq	r0, r0, #5
   17ff8:	cmp	r2, r3
   17ffc:	bne	18008 <__printf_chk@plt+0x5874>
   18000:	add	sp, sp, #12
   18004:	pop	{r4, r5, pc}
   18008:	bl	124b8 <__stack_chk_fail@plt>
   1800c:	mov	r3, #0
   18010:	movw	r2, #28140	; 0x6dec
   18014:	push	{r4, lr}
   18018:	mov	r1, r3
   1801c:	movt	r2, #3
   18020:	mov	r4, r0
   18024:	bl	31204 <crc32@@Base+0x177ac>
   18028:	cmp	r0, #0
   1802c:	beq	1806c <__printf_chk@plt+0x58d8>
   18030:	mov	r3, #0
   18034:	movw	r2, #30364	; 0x769c
   18038:	mov	r1, r3
   1803c:	movt	r2, #3
   18040:	mov	r0, r4
   18044:	bl	31204 <crc32@@Base+0x177ac>
   18048:	cmp	r0, #0
   1804c:	beq	1806c <__printf_chk@plt+0x58d8>
   18050:	mov	r0, r4
   18054:	movw	r1, #27888	; 0x6cf0
   18058:	movt	r1, #3
   1805c:	bl	31560 <crc32@@Base+0x17b08>
   18060:	mvn	r0, r0
   18064:	lsr	r0, r0, #31
   18068:	pop	{r4, pc}
   1806c:	mov	r0, #0
   18070:	pop	{r4, pc}
   18074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18078:	movw	sl, #61168	; 0xeef0
   1807c:	movt	sl, #4
   18080:	sub	sp, sp, #52	; 0x34
   18084:	mov	r5, r1
   18088:	movw	r1, #28948	; 0x7114
   1808c:	ldr	r3, [sl]
   18090:	movt	r1, #3
   18094:	mov	r2, #0
   18098:	mov	r7, r0
   1809c:	str	r2, [sp, #28]
   180a0:	str	r3, [sp, #44]	; 0x2c
   180a4:	bl	31560 <crc32@@Base+0x17b08>
   180a8:	movw	r1, #27888	; 0x6cf0
   180ac:	movt	r1, #3
   180b0:	mov	r4, r0
   180b4:	mov	r0, r7
   180b8:	bl	31560 <crc32@@Base+0x17b08>
   180bc:	lsr	r8, r0, #31
   180c0:	str	r0, [sp, #8]
   180c4:	orrs	r8, r8, r4, lsr #31
   180c8:	bne	18274 <__printf_chk@plt+0x5ae0>
   180cc:	add	r3, sp, #32
   180d0:	mov	r0, r5
   180d4:	movw	r2, #31484	; 0x7afc
   180d8:	mov	r1, r8
   180dc:	movt	r2, #3
   180e0:	bl	31204 <crc32@@Base+0x177ac>
   180e4:	subs	r3, r0, #0
   180e8:	str	r3, [sp, #20]
   180ec:	beq	18274 <__printf_chk@plt+0x5ae0>
   180f0:	mov	r1, r4
   180f4:	mov	r0, r7
   180f8:	add	r2, sp, #28
   180fc:	bl	2dc88 <crc32@@Base+0x14230>
   18100:	subs	r6, r0, #0
   18104:	blt	18274 <__printf_chk@plt+0x5ae0>
   18108:	ldr	r3, [sp, #28]
   1810c:	cmp	r3, #0
   18110:	ble	18274 <__printf_chk@plt+0x5ae0>
   18114:	movw	r2, #28256	; 0x6e60
   18118:	movw	r1, #41356	; 0xa18c
   1811c:	movt	r2, #3
   18120:	movt	r1, #3
   18124:	str	r2, [sp, #4]
   18128:	str	r1, [sp, #12]
   1812c:	str	r8, [sp]
   18130:	str	sl, [sp, #16]
   18134:	b	1815c <__printf_chk@plt+0x59c8>
   18138:	mov	r1, r6
   1813c:	add	r2, sp, #28
   18140:	mov	r0, r7
   18144:	bl	2dc88 <crc32@@Base+0x14230>
   18148:	subs	r6, r0, #0
   1814c:	blt	18248 <__printf_chk@plt+0x5ab4>
   18150:	ldr	r3, [sp, #28]
   18154:	cmp	r3, #0
   18158:	ble	18248 <__printf_chk@plt+0x5ab4>
   1815c:	cmp	r3, #1
   18160:	bne	18138 <__printf_chk@plt+0x59a4>
   18164:	ldr	r2, [sp, #4]
   18168:	add	r3, sp, #36	; 0x24
   1816c:	mov	r1, r6
   18170:	mov	r0, r7
   18174:	bl	31204 <crc32@@Base+0x177ac>
   18178:	subs	r2, r0, #0
   1817c:	beq	18138 <__printf_chk@plt+0x59a4>
   18180:	ldr	r1, [sp, #8]
   18184:	mov	r0, r7
   18188:	bl	30ed4 <crc32@@Base+0x1747c>
   1818c:	subs	r1, r0, #0
   18190:	blt	18138 <__printf_chk@plt+0x59a4>
   18194:	add	r3, sp, #40	; 0x28
   18198:	ldr	r2, [sp, #12]
   1819c:	mov	r0, r7
   181a0:	bl	31204 <crc32@@Base+0x177ac>
   181a4:	subs	fp, r0, #0
   181a8:	beq	18138 <__printf_chk@plt+0x59a4>
   181ac:	ldr	r3, [sp, #32]
   181b0:	cmp	r3, #0
   181b4:	str	r3, [sp, #36]	; 0x24
   181b8:	ble	18138 <__printf_chk@plt+0x59a4>
   181bc:	ldr	r3, [sp]
   181c0:	cmp	r8, #0
   181c4:	clz	r9, r3
   181c8:	lsr	r9, r9, #5
   181cc:	orrgt	r3, r9, #1
   181d0:	movle	r3, r9
   181d4:	cmp	r3, #0
   181d8:	beq	18280 <__printf_chk@plt+0x5aec>
   181dc:	ldr	r5, [sp, #20]
   181e0:	mov	sl, #0
   181e4:	b	18218 <__printf_chk@plt+0x5a84>
   181e8:	ldr	r0, [sp, #36]	; 0x24
   181ec:	add	r5, r5, r4
   181f0:	add	sl, sl, #1
   181f4:	sub	r0, r0, r4
   181f8:	str	r0, [sp, #36]	; 0x24
   181fc:	cmp	r0, #0
   18200:	ble	18138 <__printf_chk@plt+0x59a4>
   18204:	cmp	sl, r8
   18208:	movge	r3, r9
   1820c:	orrlt	r3, r9, #1
   18210:	cmp	r3, #0
   18214:	beq	18138 <__printf_chk@plt+0x59a4>
   18218:	mov	r0, r5
   1821c:	bl	125e4 <strlen@plt>
   18220:	mov	r2, r5
   18224:	mov	r1, #0
   18228:	add	r4, r0, #1
   1822c:	mov	r0, fp
   18230:	bl	31cf8 <crc32@@Base+0x182a0>
   18234:	cmp	r0, #0
   18238:	bne	181e8 <__printf_chk@plt+0x5a54>
   1823c:	mov	r8, sl
   18240:	str	r6, [sp]
   18244:	b	18138 <__printf_chk@plt+0x59a4>
   18248:	ldr	r3, [sp]
   1824c:	ldr	sl, [sp, #16]
   18250:	cmp	r3, #0
   18254:	beq	18274 <__printf_chk@plt+0x5ae0>
   18258:	ldr	r2, [sp, #44]	; 0x2c
   1825c:	ldr	r3, [sl]
   18260:	ldr	r0, [sp]
   18264:	cmp	r2, r3
   18268:	bne	18288 <__printf_chk@plt+0x5af4>
   1826c:	add	sp, sp, #52	; 0x34
   18270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18274:	mvn	r3, #0
   18278:	str	r3, [sp]
   1827c:	b	18258 <__printf_chk@plt+0x5ac4>
   18280:	mov	r8, r3
   18284:	b	18138 <__printf_chk@plt+0x59a4>
   18288:	bl	124b8 <__stack_chk_fail@plt>
   1828c:	push	{r4, r5, r6, r7, r8, r9, lr}
   18290:	movw	r4, #61168	; 0xeef0
   18294:	movt	r4, #4
   18298:	sub	sp, sp, #12
   1829c:	mov	r5, r1
   182a0:	movw	r1, #28948	; 0x7114
   182a4:	ldr	r3, [r4]
   182a8:	movt	r1, #3
   182ac:	mov	r8, r0
   182b0:	str	r3, [sp, #4]
   182b4:	bl	31560 <crc32@@Base+0x17b08>
   182b8:	subs	r6, r0, #0
   182bc:	blt	18328 <__printf_chk@plt+0x5b94>
   182c0:	cmp	r5, #0
   182c4:	beq	1835c <__printf_chk@plt+0x5bc8>
   182c8:	mov	r1, #35	; 0x23
   182cc:	mov	r0, r5
   182d0:	bl	12788 <strchr@plt>
   182d4:	cmp	r0, #0
   182d8:	beq	18344 <__printf_chk@plt+0x5bb0>
   182dc:	sub	r0, r0, r5
   182e0:	str	r0, [sp]
   182e4:	add	r0, r0, #1
   182e8:	bl	125cc <malloc@plt>
   182ec:	subs	r7, r0, #0
   182f0:	beq	18384 <__printf_chk@plt+0x5bf0>
   182f4:	ldr	r9, [sp]
   182f8:	mov	r1, r5
   182fc:	mov	r2, r9
   18300:	bl	125c0 <memcpy@plt>
   18304:	mov	r1, r6
   18308:	mov	r3, #0
   1830c:	mov	r0, r8
   18310:	mov	r2, r7
   18314:	strb	r3, [r7, r9]
   18318:	bl	30ed4 <crc32@@Base+0x1747c>
   1831c:	mov	r6, r0
   18320:	mov	r0, r7
   18324:	bl	1214c <free@plt>
   18328:	ldr	r2, [sp, #4]
   1832c:	mov	r0, r6
   18330:	ldr	r3, [r4]
   18334:	cmp	r2, r3
   18338:	bne	1838c <__printf_chk@plt+0x5bf8>
   1833c:	add	sp, sp, #12
   18340:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18344:	mov	r1, r6
   18348:	mov	r2, r5
   1834c:	mov	r0, r8
   18350:	bl	30ed4 <crc32@@Base+0x1747c>
   18354:	mov	r6, r0
   18358:	b	18328 <__printf_chk@plt+0x5b94>
   1835c:	mov	r1, r6
   18360:	movw	r2, #28312	; 0x6e98
   18364:	mov	r3, sp
   18368:	movt	r2, #3
   1836c:	mov	r0, r8
   18370:	bl	31204 <crc32@@Base+0x177ac>
   18374:	subs	r5, r0, #0
   18378:	ldreq	r6, [sp]
   1837c:	bne	182c8 <__printf_chk@plt+0x5b34>
   18380:	b	18328 <__printf_chk@plt+0x5b94>
   18384:	mvn	r6, #11
   18388:	b	18328 <__printf_chk@plt+0x5b94>
   1838c:	bl	124b8 <__stack_chk_fail@plt>
   18390:	b	31aa8 <crc32@@Base+0x18050>
   18394:	push	{r4, r5, lr}
   18398:	movw	r4, #61168	; 0xeef0
   1839c:	sub	sp, sp, #20
   183a0:	movt	r4, #4
   183a4:	add	ip, sp, #8
   183a8:	mov	r5, r0
   183ac:	str	ip, [sp]
   183b0:	ldr	ip, [r4]
   183b4:	str	ip, [sp, #12]
   183b8:	bl	31c0c <crc32@@Base+0x181b4>
   183bc:	subs	r1, r0, #0
   183c0:	ldreq	r0, [sp, #8]
   183c4:	beq	183d0 <__printf_chk@plt+0x5c3c>
   183c8:	mov	r0, r5
   183cc:	bl	169e4 <__printf_chk@plt+0x4250>
   183d0:	ldr	r2, [sp, #12]
   183d4:	ldr	r3, [r4]
   183d8:	cmp	r2, r3
   183dc:	bne	183e8 <__printf_chk@plt+0x5c54>
   183e0:	add	sp, sp, #20
   183e4:	pop	{r4, r5, pc}
   183e8:	bl	124b8 <__stack_chk_fail@plt>
   183ec:	mov	r3, #0
   183f0:	b	18394 <__printf_chk@plt+0x5c00>
   183f4:	push	{r4, r5, r6, lr}
   183f8:	mov	r5, r1
   183fc:	ldr	r1, [r0, #72]	; 0x48
   18400:	mov	r0, r2
   18404:	mov	r4, r2
   18408:	bl	1828c <__printf_chk@plt+0x5af8>
   1840c:	subs	r1, r0, #0
   18410:	blt	18430 <__printf_chk@plt+0x5c9c>
   18414:	mov	r2, r5
   18418:	mov	r0, r4
   1841c:	mov	r3, #0
   18420:	bl	18394 <__printf_chk@plt+0x5c00>
   18424:	cmp	r0, #0
   18428:	mvnlt	r0, #1
   1842c:	pop	{r4, r5, r6, pc}
   18430:	mvn	r0, #21
   18434:	pop	{r4, r5, r6, pc}
   18438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1843c:	sub	sp, sp, #60	; 0x3c
   18440:	mov	r9, r3
   18444:	subs	ip, r2, #0
   18448:	ldr	r3, [sp, #112]	; 0x70
   1844c:	movw	r6, #61168	; 0xeef0
   18450:	str	ip, [sp, #8]
   18454:	movt	r6, #4
   18458:	ldrne	r7, [ip]
   1845c:	mov	r4, r1
   18460:	str	r3, [sp, #16]
   18464:	mov	sl, r0
   18468:	ldr	r3, [sp, #116]	; 0x74
   1846c:	movw	r1, #31504	; 0x7b10
   18470:	ldreq	r7, [sp, #8]
   18474:	cmp	r9, #0
   18478:	ldr	fp, [sp, #100]	; 0x64
   1847c:	movt	r1, #3
   18480:	str	r3, [sp, #20]
   18484:	mov	r0, #1
   18488:	ldrne	r3, [r9]
   1848c:	ldr	r2, [r6]
   18490:	streq	r9, [sp, #12]
   18494:	strne	r3, [sp, #12]
   18498:	sub	r3, fp, #1
   1849c:	cmp	r3, #28
   184a0:	str	r2, [sp, #52]	; 0x34
   184a4:	movwls	r2, #30216	; 0x7608
   184a8:	movtls	r2, #3
   184ac:	movwhi	r8, #31496	; 0x7b08
   184b0:	movthi	r8, #3
   184b4:	ldrls	r8, [r2, r3, lsl #2]
   184b8:	mov	r3, r4
   184bc:	mov	r2, r8
   184c0:	bl	12794 <__printf_chk@plt>
   184c4:	mov	r0, r4
   184c8:	bl	1800c <__printf_chk@plt+0x5878>
   184cc:	cmp	r0, #0
   184d0:	beq	18990 <__printf_chk@plt+0x61fc>
   184d4:	cmp	r7, #0
   184d8:	beq	18724 <__printf_chk@plt+0x5f90>
   184dc:	mov	r1, r7
   184e0:	mov	r0, r4
   184e4:	bl	169e4 <__printf_chk@plt+0x4250>
   184e8:	mov	r3, #0
   184ec:	str	r3, [sp, #24]
   184f0:	mov	r5, r0
   184f4:	cmp	r5, #0
   184f8:	blt	1897c <__printf_chk@plt+0x61e8>
   184fc:	mov	r3, r8
   18500:	mov	r2, r7
   18504:	movw	r1, #31732	; 0x7bf4
   18508:	mov	r0, #1
   1850c:	movt	r1, #3
   18510:	bl	12794 <__printf_chk@plt>
   18514:	ldr	sl, [sl, #124]	; 0x7c
   18518:	movw	r2, #30820	; 0x7864
   1851c:	mov	r1, r5
   18520:	movt	r2, #3
   18524:	mov	r0, r4
   18528:	bl	16e0c <__printf_chk@plt+0x4678>
   1852c:	cmp	sl, #0
   18530:	bne	186b4 <__printf_chk@plt+0x5f20>
   18534:	cmp	fp, #8
   18538:	add	sl, sp, #48	; 0x30
   1853c:	beq	186ec <__printf_chk@plt+0x5f58>
   18540:	mov	r2, sl
   18544:	mov	r1, r5
   18548:	mov	r0, r4
   1854c:	uxtb	r3, fp
   18550:	str	r3, [sp, #28]
   18554:	bl	16ae4 <__printf_chk@plt+0x4350>
   18558:	cmp	r0, #0
   1855c:	beq	1863c <__printf_chk@plt+0x5ea8>
   18560:	mov	r2, sl
   18564:	mov	r1, r5
   18568:	mov	r0, r4
   1856c:	bl	16ae4 <__printf_chk@plt+0x4350>
   18570:	cmp	r0, #0
   18574:	beq	187d4 <__printf_chk@plt+0x6040>
   18578:	cmp	fp, #2
   1857c:	beq	187e4 <__printf_chk@plt+0x6050>
   18580:	cmp	fp, #29
   18584:	cmpne	fp, #8
   18588:	moveq	r3, #1
   1858c:	movne	r3, #0
   18590:	bne	18814 <__printf_chk@plt+0x6080>
   18594:	cmp	fp, #22
   18598:	bne	189c0 <__printf_chk@plt+0x622c>
   1859c:	add	r3, sp, #44	; 0x2c
   185a0:	add	r2, sp, #40	; 0x28
   185a4:	mov	r1, r5
   185a8:	mov	r0, r4
   185ac:	bl	16d14 <__printf_chk@plt+0x4580>
   185b0:	cmp	r0, #0
   185b4:	ldreq	r3, [sp, #44]	; 0x2c
   185b8:	streq	r3, [sp, #32]
   185bc:	bne	18a18 <__printf_chk@plt+0x6284>
   185c0:	ldr	r3, [sp, #40]	; 0x28
   185c4:	str	r3, [sp, #28]
   185c8:	ldr	r3, [sp, #108]	; 0x6c
   185cc:	cmp	r3, #0
   185d0:	ldr	r3, [sp, #28]
   185d4:	str	r3, [sp, #36]	; 0x24
   185d8:	bne	18898 <__printf_chk@plt+0x6104>
   185dc:	ldr	r2, [sp, #16]
   185e0:	ldr	r1, [sp, #36]	; 0x24
   185e4:	ldr	r3, [sp, #8]
   185e8:	str	r1, [r2]
   185ec:	cmp	r3, #0
   185f0:	ldr	r2, [sp, #20]
   185f4:	ldr	r1, [sp, #32]
   185f8:	str	r1, [r2]
   185fc:	strne	r7, [r3]
   18600:	cmp	r9, #0
   18604:	beq	18620 <__printf_chk@plt+0x5e8c>
   18608:	ldr	r2, [sp, #12]
   1860c:	ldr	r1, [sp, #24]
   18610:	cmp	r2, #0
   18614:	mov	r3, r2
   18618:	moveq	r3, r1
   1861c:	str	r3, [r9]
   18620:	ldr	r2, [sp, #52]	; 0x34
   18624:	mov	r0, r5
   18628:	ldr	r3, [r6]
   1862c:	cmp	r2, r3
   18630:	bne	18a48 <__printf_chk@plt+0x62b4>
   18634:	add	sp, sp, #60	; 0x3c
   18638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1863c:	ldrb	r3, [sp, #48]	; 0x30
   18640:	uxtb	r2, fp
   18644:	cmp	r2, r3
   18648:	bne	18560 <__printf_chk@plt+0x5dcc>
   1864c:	cmp	fp, #29
   18650:	cmpne	fp, #8
   18654:	movne	r3, #1
   18658:	strne	r3, [sp, #32]
   1865c:	bne	18818 <__printf_chk@plt+0x6084>
   18660:	add	r3, sp, #44	; 0x2c
   18664:	add	r2, sp, #40	; 0x28
   18668:	mov	r1, r5
   1866c:	mov	r0, r4
   18670:	bl	16d14 <__printf_chk@plt+0x4580>
   18674:	cmp	r0, #0
   18678:	bne	18a18 <__printf_chk@plt+0x6284>
   1867c:	ldr	r3, [sp, #44]	; 0x2c
   18680:	cmp	fp, #8
   18684:	ldr	r0, [sp, #40]	; 0x28
   18688:	str	r3, [sp, #32]
   1868c:	str	r0, [sp, #28]
   18690:	bne	185c8 <__printf_chk@plt+0x5e34>
   18694:	bl	2d92c <crc32@@Base+0x13ed4>
   18698:	cmp	r0, #0
   1869c:	beq	185c0 <__printf_chk@plt+0x5e2c>
   186a0:	movw	r0, #31840	; 0x7c60
   186a4:	movt	r0, #3
   186a8:	bl	12290 <puts@plt>
   186ac:	mvn	r5, #7
   186b0:	b	18620 <__printf_chk@plt+0x5e8c>
   186b4:	movw	r0, #31644	; 0x7b9c
   186b8:	movt	r0, #3
   186bc:	bl	12290 <puts@plt>
   186c0:	mov	r1, r5
   186c4:	mov	r0, r4
   186c8:	bl	17cb0 <__printf_chk@plt+0x551c>
   186cc:	cmp	r0, #0
   186d0:	beq	189ac <__printf_chk@plt+0x6218>
   186d4:	movw	r0, #31696	; 0x7bd0
   186d8:	movt	r0, #3
   186dc:	bl	12290 <puts@plt>
   186e0:	cmp	fp, #8
   186e4:	add	sl, sp, #48	; 0x30
   186e8:	bne	18540 <__printf_chk@plt+0x5dac>
   186ec:	mov	r1, r5
   186f0:	mov	r0, r4
   186f4:	mov	r2, sl
   186f8:	bl	16b4c <__printf_chk@plt+0x43b8>
   186fc:	cmp	r0, #0
   18700:	bne	18710 <__printf_chk@plt+0x5f7c>
   18704:	ldrb	r3, [sp, #48]	; 0x30
   18708:	cmp	r3, #0
   1870c:	beq	18540 <__printf_chk@plt+0x5dac>
   18710:	movw	r0, #31760	; 0x7c10
   18714:	movt	r0, #3
   18718:	bl	12290 <puts@plt>
   1871c:	mvn	r5, #92	; 0x5c
   18720:	b	18620 <__printf_chk@plt+0x5e8c>
   18724:	ldr	r1, [sp, #12]
   18728:	mov	r0, r4
   1872c:	bl	1828c <__printf_chk@plt+0x5af8>
   18730:	subs	r5, r0, #0
   18734:	blt	18a34 <__printf_chk@plt+0x62a0>
   18738:	mov	r2, r7
   1873c:	mov	r1, r5
   18740:	mov	r0, r4
   18744:	bl	30f04 <crc32@@Base+0x174ac>
   18748:	movw	r1, #31612	; 0x7b7c
   1874c:	movt	r1, #3
   18750:	mov	r2, r0
   18754:	str	r0, [sp, #24]
   18758:	mov	r0, #1
   1875c:	bl	12794 <__printf_chk@plt>
   18760:	cmp	fp, #2
   18764:	ldreq	r3, [sp, #24]
   18768:	streq	r3, [sl, #72]	; 0x48
   1876c:	ldr	r3, [sl, #124]	; 0x7c
   18770:	cmp	r3, #0
   18774:	beq	187a4 <__printf_chk@plt+0x6010>
   18778:	movw	r0, #31644	; 0x7b9c
   1877c:	movt	r0, #3
   18780:	bl	12290 <puts@plt>
   18784:	mov	r1, r5
   18788:	mov	r0, r4
   1878c:	bl	196b8 <__printf_chk@plt+0x6f24>
   18790:	cmp	r0, #0
   18794:	bne	189ac <__printf_chk@plt+0x6218>
   18798:	movw	r0, #31696	; 0x7bd0
   1879c:	movt	r0, #3
   187a0:	bl	12290 <puts@plt>
   187a4:	mov	r1, r5
   187a8:	mov	r3, #0
   187ac:	mov	r2, r8
   187b0:	mov	r0, r4
   187b4:	bl	18394 <__printf_chk@plt+0x5c00>
   187b8:	mov	r2, #0
   187bc:	mov	r1, r0
   187c0:	mov	r5, r0
   187c4:	mov	r0, r4
   187c8:	bl	30f04 <crc32@@Base+0x174ac>
   187cc:	mov	r7, r0
   187d0:	b	184f4 <__printf_chk@plt+0x5d60>
   187d4:	ldrb	r3, [sp, #48]	; 0x30
   187d8:	cmp	r3, #5
   187dc:	beq	1864c <__printf_chk@plt+0x5eb8>
   187e0:	b	18578 <__printf_chk@plt+0x5de4>
   187e4:	mov	r2, sl
   187e8:	mov	r1, r5
   187ec:	mov	r0, r4
   187f0:	bl	16ae4 <__printf_chk@plt+0x4350>
   187f4:	cmp	r0, #0
   187f8:	movne	r3, #0
   187fc:	strne	r3, [sp, #32]
   18800:	bne	18818 <__printf_chk@plt+0x6084>
   18804:	ldrb	r3, [sp, #48]	; 0x30
   18808:	sub	r3, r3, #14
   1880c:	clz	r3, r3
   18810:	lsr	r3, r3, #5
   18814:	str	r3, [sp, #32]
   18818:	mov	r2, sl
   1881c:	mov	r1, r5
   18820:	mov	r0, r4
   18824:	bl	16a14 <__printf_chk@plt+0x4280>
   18828:	cmp	r0, #0
   1882c:	bne	1883c <__printf_chk@plt+0x60a8>
   18830:	ldrb	r3, [sp, #48]	; 0x30
   18834:	cmp	r3, #5
   18838:	beq	18860 <__printf_chk@plt+0x60cc>
   1883c:	mov	r2, sl
   18840:	mov	r1, r5
   18844:	mov	r0, r4
   18848:	bl	16a14 <__printf_chk@plt+0x4280>
   1884c:	cmp	r0, #0
   18850:	bne	18870 <__printf_chk@plt+0x60dc>
   18854:	ldrb	r3, [sp, #48]	; 0x30
   18858:	cmp	r3, #17
   1885c:	bne	18870 <__printf_chk@plt+0x60dc>
   18860:	ldr	r3, [sp, #32]
   18864:	cmp	r3, #1
   18868:	bne	18594 <__printf_chk@plt+0x5e00>
   1886c:	b	18660 <__printf_chk@plt+0x5ecc>
   18870:	mov	r2, sl
   18874:	mov	r1, r5
   18878:	mov	r0, r4
   1887c:	bl	16a14 <__printf_chk@plt+0x4280>
   18880:	cmp	r0, #0
   18884:	bne	18594 <__printf_chk@plt+0x5e00>
   18888:	ldrb	r3, [sp, #48]	; 0x30
   1888c:	cmp	r3, #24
   18890:	beq	18860 <__printf_chk@plt+0x60cc>
   18894:	b	18594 <__printf_chk@plt+0x5e00>
   18898:	mov	r3, sl
   1889c:	movw	r2, #28240	; 0x6e50
   188a0:	mov	r1, r5
   188a4:	movt	r2, #3
   188a8:	mov	r0, r4
   188ac:	bl	16538 <__printf_chk@plt+0x3da4>
   188b0:	ldr	r3, [sp, #108]	; 0x6c
   188b4:	cmp	r0, #0
   188b8:	beq	188e0 <__printf_chk@plt+0x614c>
   188bc:	cmp	r3, #3
   188c0:	bne	185dc <__printf_chk@plt+0x5e48>
   188c4:	mov	r2, r8
   188c8:	movw	r1, #31868	; 0x7c7c
   188cc:	mov	r0, #1
   188d0:	movt	r1, #3
   188d4:	bl	12794 <__printf_chk@plt>
   188d8:	mvn	r5, #8
   188dc:	b	18620 <__printf_chk@plt+0x5e8c>
   188e0:	cmp	r3, #2
   188e4:	ldr	r2, [sp, #48]	; 0x30
   188e8:	beq	18970 <__printf_chk@plt+0x61dc>
   188ec:	ldr	lr, [r4, #4]
   188f0:	ldr	r3, [sp, #32]
   188f4:	ubfx	ip, lr, #8, #8
   188f8:	ubfx	r0, lr, #16, #8
   188fc:	add	r1, r2, r3
   18900:	lsr	r3, lr, #24
   18904:	orr	r3, r3, lr, lsl #24
   18908:	orr	r3, r3, ip, lsl #16
   1890c:	orr	r3, r3, r0, lsl #8
   18910:	add	r3, r3, r4
   18914:	cmp	fp, #2
   18918:	cmpne	r2, r3
   1891c:	movcc	r3, #1
   18920:	movcs	r3, #0
   18924:	cmp	r4, r1
   18928:	movcs	r4, #0
   1892c:	andcc	r4, r3, #1
   18930:	cmp	r4, #0
   18934:	bne	18a4c <__printf_chk@plt+0x62b8>
   18938:	ldr	r3, [sp, #28]
   1893c:	movw	r1, #31932	; 0x7cbc
   18940:	str	r2, [sp]
   18944:	movt	r1, #3
   18948:	mov	r2, r8
   1894c:	mov	r0, #1
   18950:	bl	12794 <__printf_chk@plt>
   18954:	ldr	r2, [sp, #32]
   18958:	ldr	r1, [sp, #40]	; 0x28
   1895c:	ldr	r0, [sp, #48]	; 0x30
   18960:	bl	123a4 <memmove@plt>
   18964:	ldr	r3, [sp, #48]	; 0x30
   18968:	str	r3, [sp, #36]	; 0x24
   1896c:	b	185dc <__printf_chk@plt+0x5e48>
   18970:	cmp	r2, #0
   18974:	beq	185dc <__printf_chk@plt+0x5e48>
   18978:	b	188ec <__printf_chk@plt+0x6158>
   1897c:	movw	r0, #31700	; 0x7bd4
   18980:	movt	r0, #3
   18984:	bl	12290 <puts@plt>
   18988:	mvn	r5, #1
   1898c:	b	18620 <__printf_chk@plt+0x5e8c>
   18990:	mov	r2, r8
   18994:	movw	r1, #31548	; 0x7b3c
   18998:	mov	r0, #1
   1899c:	movt	r1, #3
   189a0:	bl	12794 <__printf_chk@plt>
   189a4:	mvn	r5, #7
   189a8:	b	18620 <__printf_chk@plt+0x5e8c>
   189ac:	movw	r0, #31680	; 0x7bc0
   189b0:	movt	r0, #3
   189b4:	bl	12290 <puts@plt>
   189b8:	mvn	r5, #12
   189bc:	b	18620 <__printf_chk@plt+0x5e8c>
   189c0:	mov	r2, sl
   189c4:	mov	r1, r5
   189c8:	mov	r0, r4
   189cc:	mvn	r5, #4
   189d0:	bl	16a14 <__printf_chk@plt+0x4280>
   189d4:	ldrb	r0, [sp, #48]	; 0x30
   189d8:	bl	1a638 <crc32@@Base+0xbe0>
   189dc:	ldr	r3, [sp, #96]	; 0x60
   189e0:	mov	r4, r0
   189e4:	uxtb	r0, r3
   189e8:	bl	1a68c <crc32@@Base+0xc34>
   189ec:	mov	r7, r0
   189f0:	ldr	r0, [sp, #28]
   189f4:	bl	1a6e0 <crc32@@Base+0xc88>
   189f8:	mov	r3, r7
   189fc:	mov	r2, r4
   18a00:	movw	r1, #31784	; 0x7c28
   18a04:	movt	r1, #3
   18a08:	str	r0, [sp]
   18a0c:	mov	r0, #1
   18a10:	bl	12794 <__printf_chk@plt>
   18a14:	b	18620 <__printf_chk@plt+0x5e8c>
   18a18:	mov	r2, r8
   18a1c:	movw	r1, #31804	; 0x7c3c
   18a20:	mov	r0, #1
   18a24:	movt	r1, #3
   18a28:	bl	12794 <__printf_chk@plt>
   18a2c:	mvn	r5, #1
   18a30:	b	18620 <__printf_chk@plt+0x5e8c>
   18a34:	movw	r0, #31576	; 0x7b58
   18a38:	movt	r0, #3
   18a3c:	bl	12290 <puts@plt>
   18a40:	mvn	r5, #1
   18a44:	b	18620 <__printf_chk@plt+0x5e8c>
   18a48:	bl	124b8 <__stack_chk_fail@plt>
   18a4c:	mov	r2, r8
   18a50:	movw	r1, #31908	; 0x7ca4
   18a54:	mov	r0, #1
   18a58:	movt	r1, #3
   18a5c:	bl	12794 <__printf_chk@plt>
   18a60:	mvn	r5, #17
   18a64:	b	18620 <__printf_chk@plt+0x5e8c>
   18a68:	push	{r4, r5, r6, r7, r8, lr}
   18a6c:	movw	r4, #61168	; 0xeef0
   18a70:	movt	r4, #4
   18a74:	ldr	r6, [r0, #76]	; 0x4c
   18a78:	sub	sp, sp, #32
   18a7c:	mov	r7, r1
   18a80:	ldr	r3, [r4]
   18a84:	mov	r8, r2
   18a88:	movw	r1, #27008	; 0x6980
   18a8c:	mov	r2, r6
   18a90:	movt	r1, #3
   18a94:	mov	r5, r0
   18a98:	str	r3, [sp, #28]
   18a9c:	bl	183f4 <__printf_chk@plt+0x5c60>
   18aa0:	cmp	r0, #0
   18aa4:	blt	18ae0 <__printf_chk@plt+0x634c>
   18aa8:	mov	r3, #0
   18aac:	add	ip, sp, #24
   18ab0:	str	r7, [sp]
   18ab4:	mov	r1, r6
   18ab8:	str	ip, [sp, #20]
   18abc:	mov	r6, #130	; 0x82
   18ac0:	mov	r7, #3
   18ac4:	mov	ip, #20
   18ac8:	str	r8, [sp, #16]
   18acc:	mov	r0, r5
   18ad0:	mov	r2, r3
   18ad4:	strd	r6, [sp, #8]
   18ad8:	str	ip, [sp, #4]
   18adc:	bl	18438 <__printf_chk@plt+0x5ca4>
   18ae0:	ldr	r2, [sp, #28]
   18ae4:	ldr	r3, [r4]
   18ae8:	cmp	r2, r3
   18aec:	bne	18af8 <__printf_chk@plt+0x6364>
   18af0:	add	sp, sp, #32
   18af4:	pop	{r4, r5, r6, r7, r8, pc}
   18af8:	bl	124b8 <__stack_chk_fail@plt>
   18afc:	push	{r4, r5, r6, lr}
   18b00:	movw	r4, #62424	; 0xf3d8
   18b04:	movt	r4, #4
   18b08:	mov	r1, r0
   18b0c:	mov	r5, r0
   18b10:	ldr	r0, [r4]
   18b14:	bl	12680 <strcmp@plt>
   18b18:	cmp	r0, #0
   18b1c:	beq	18b3c <__printf_chk@plt+0x63a8>
   18b20:	ldr	r0, [r4, #8]!
   18b24:	mov	r1, r5
   18b28:	bl	12680 <strcmp@plt>
   18b2c:	cmp	r0, #0
   18b30:	moveq	r0, r4
   18b34:	movne	r0, #0
   18b38:	pop	{r4, r5, r6, pc}
   18b3c:	mov	r0, r4
   18b40:	pop	{r4, r5, r6, pc}
   18b44:	movw	r3, #43500	; 0xa9ec
   18b48:	movt	r3, #30
   18b4c:	str	r0, [r3]
   18b50:	bx	lr
   18b54:	movw	r3, #43500	; 0xa9ec
   18b58:	movt	r3, #30
   18b5c:	ldr	r0, [r3]
   18b60:	bx	lr
   18b64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18b68:	mov	r9, r0
   18b6c:	ldr	r7, [pc, #88]	; 18bcc <__printf_chk@plt+0x6438>
   18b70:	mov	r4, #0
   18b74:	mov	sl, #24
   18b78:	mul	r8, sl, r4
   18b7c:	ldr	r5, [r7, r8]
   18b80:	mov	r0, r5
   18b84:	bl	125e4 <strlen@plt>
   18b88:	mov	r1, r9
   18b8c:	mov	r2, r0
   18b90:	mov	r6, r0
   18b94:	mov	r0, r5
   18b98:	bl	121a0 <strncmp@plt>
   18b9c:	cmp	r0, #0
   18ba0:	bne	18bb0 <__printf_chk@plt+0x641c>
   18ba4:	ldrb	r3, [r9, r6]
   18ba8:	cmp	r3, #44	; 0x2c
   18bac:	beq	18bc4 <__printf_chk@plt+0x6430>
   18bb0:	cmp	r4, #1
   18bb4:	mov	r4, #1
   18bb8:	bne	18b78 <__printf_chk@plt+0x63e4>
   18bbc:	mov	r0, #0
   18bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18bc4:	add	r0, r7, r8
   18bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18bcc:	andeq	pc, r4, r8, ror #7
   18bd0:	push	{r4, r5, r6, lr}
   18bd4:	mov	r1, #44	; 0x2c
   18bd8:	bl	12788 <strchr@plt>
   18bdc:	cmp	r0, #0
   18be0:	popeq	{r4, r5, r6, pc}
   18be4:	add	r5, r0, #1
   18be8:	movw	r4, #62424	; 0xf3d8
   18bec:	movt	r4, #4
   18bf0:	mov	r1, r5
   18bf4:	ldr	r0, [r4, #64]	; 0x40
   18bf8:	bl	12680 <strcmp@plt>
   18bfc:	cmp	r0, #0
   18c00:	beq	18c20 <__printf_chk@plt+0x648c>
   18c04:	ldr	r0, [r4, #84]!	; 0x54
   18c08:	mov	r1, r5
   18c0c:	bl	12680 <strcmp@plt>
   18c10:	cmp	r0, #0
   18c14:	moveq	r0, r4
   18c18:	movne	r0, #0
   18c1c:	pop	{r4, r5, r6, pc}
   18c20:	add	r0, r4, #64	; 0x40
   18c24:	pop	{r4, r5, r6, pc}
   18c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c2c:	movw	r6, #61168	; 0xeef0
   18c30:	sub	sp, sp, #20
   18c34:	movt	r6, #4
   18c38:	mov	sl, r3
   18c3c:	mov	r9, r1
   18c40:	ldr	ip, [r6]
   18c44:	mov	r1, r2
   18c48:	ldr	r3, [sp, #56]	; 0x38
   18c4c:	mov	r8, r2
   18c50:	mov	r4, r0
   18c54:	add	r2, sp, #8
   18c58:	mov	r0, r9
   18c5c:	str	ip, [sp, #12]
   18c60:	str	r3, [sp, #4]
   18c64:	bl	17708 <__printf_chk@plt+0x4f74>
   18c68:	subs	r7, r0, #0
   18c6c:	bne	18d68 <__printf_chk@plt+0x65d4>
   18c70:	mov	r3, r7
   18c74:	mov	r1, r8
   18c78:	movw	r2, #28756	; 0x7054
   18c7c:	mov	r0, r9
   18c80:	movt	r2, #3
   18c84:	movw	r5, #31984	; 0x7cf0
   18c88:	bl	31204 <crc32@@Base+0x177ac>
   18c8c:	movt	r5, #3
   18c90:	mov	r2, #48	; 0x30
   18c94:	mov	r1, r7
   18c98:	cmp	r0, #0
   18c9c:	movne	r5, r0
   18ca0:	mov	r0, r4
   18ca4:	bl	12308 <memset@plt>
   18ca8:	mov	r3, r7
   18cac:	mov	r1, r8
   18cb0:	movw	r2, #28764	; 0x705c
   18cb4:	mov	r0, r9
   18cb8:	movt	r2, #3
   18cbc:	bl	31204 <crc32@@Base+0x177ac>
   18cc0:	ldr	fp, [sp, #8]
   18cc4:	str	r9, [r4, #8]
   18cc8:	str	r8, [r4, #12]
   18ccc:	str	fp, [r4, #16]
   18cd0:	str	r0, [r4, #4]
   18cd4:	str	r0, [sp]
   18cd8:	mov	r0, fp
   18cdc:	bl	18b64 <__printf_chk@plt+0x63d0>
   18ce0:	str	r0, [r4, #20]
   18ce4:	mov	r0, fp
   18ce8:	bl	18bd0 <__printf_chk@plt+0x643c>
   18cec:	str	r0, [r4, #28]
   18cf0:	mov	r0, r5
   18cf4:	bl	18afc <__printf_chk@plt+0x6368>
   18cf8:	movw	r1, #43500	; 0xa9ec
   18cfc:	movt	r1, #30
   18d00:	ldr	r3, [sp]
   18d04:	mov	r2, fp
   18d08:	str	sl, [r4, #36]	; 0x24
   18d0c:	ldr	ip, [r1]
   18d10:	movw	r1, #32024	; 0x7d18
   18d14:	movt	r1, #3
   18d18:	str	ip, [r4, #32]
   18d1c:	str	r0, [r4, #24]
   18d20:	mov	r0, #1
   18d24:	bl	12794 <__printf_chk@plt>
   18d28:	ldr	r3, [r4, #20]
   18d2c:	cmp	r3, #0
   18d30:	beq	18d80 <__printf_chk@plt+0x65ec>
   18d34:	ldr	r3, [r4, #28]
   18d38:	cmp	r3, #0
   18d3c:	beq	18d80 <__printf_chk@plt+0x65ec>
   18d40:	ldr	r3, [r4, #24]
   18d44:	cmp	r3, #0
   18d48:	beq	18d80 <__printf_chk@plt+0x65ec>
   18d4c:	ldr	r2, [sp, #12]
   18d50:	mov	r0, r7
   18d54:	ldr	r3, [r6]
   18d58:	cmp	r2, r3
   18d5c:	bne	18d98 <__printf_chk@plt+0x6604>
   18d60:	add	sp, sp, #20
   18d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d68:	ldr	r2, [sp, #4]
   18d6c:	movw	r3, #31192	; 0x79d8
   18d70:	mvn	r7, #0
   18d74:	movt	r3, #3
   18d78:	str	r3, [r2]
   18d7c:	b	18d4c <__printf_chk@plt+0x65b8>
   18d80:	ldr	r2, [sp, #4]
   18d84:	movw	r3, #31996	; 0x7cfc
   18d88:	mvn	r7, #0
   18d8c:	movt	r3, #3
   18d90:	str	r3, [r2]
   18d94:	b	18d4c <__printf_chk@plt+0x65b8>
   18d98:	bl	124b8 <__stack_chk_fail@plt>
   18d9c:	cmp	r0, #0
   18da0:	bxeq	lr
   18da4:	b	18afc <__printf_chk@plt+0x6368>
   18da8:	cmp	r3, #0
   18dac:	push	{r4, r5, lr}
   18db0:	mov	r5, r0
   18db4:	sub	sp, sp, #12
   18db8:	mov	r4, r1
   18dbc:	beq	18e00 <__printf_chk@plt+0x666c>
   18dc0:	cmp	r2, #0
   18dc4:	movgt	r0, #4
   18dc8:	movgt	r1, #0
   18dcc:	ble	18df4 <__printf_chk@plt+0x6660>
   18dd0:	ldr	ip, [r4, r1, lsl #3]
   18dd4:	ldr	lr, [r4, r0]
   18dd8:	add	ip, r5, ip
   18ddc:	str	ip, [r3, r1, lsl #3]
   18de0:	add	r1, r1, #1
   18de4:	cmp	r2, r1
   18de8:	str	lr, [r3, r0]
   18dec:	add	r0, r0, #8
   18df0:	bne	18dd0 <__printf_chk@plt+0x663c>
   18df4:	mov	r0, r3
   18df8:	add	sp, sp, #12
   18dfc:	pop	{r4, r5, pc}
   18e00:	mov	r1, r2
   18e04:	mov	r0, #8
   18e08:	str	r2, [sp, #4]
   18e0c:	bl	1253c <calloc@plt>
   18e10:	ldr	r2, [sp, #4]
   18e14:	subs	r3, r0, #0
   18e18:	bne	18dc0 <__printf_chk@plt+0x662c>
   18e1c:	b	18df4 <__printf_chk@plt+0x6660>
   18e20:	push	{r4, r5, r6, r7, r8, r9, lr}
   18e24:	mov	r6, r1
   18e28:	ldr	r1, [r0, #4]
   18e2c:	mov	r8, r2
   18e30:	mov	r7, r3
   18e34:	sub	sp, sp, #84	; 0x54
   18e38:	ubfx	r2, r1, #8, #8
   18e3c:	movw	r4, #61168	; 0xeef0
   18e40:	lsr	r3, r1, #24
   18e44:	movt	r4, #4
   18e48:	orr	r3, r3, r1, lsl #24
   18e4c:	ubfx	r1, r1, #16, #8
   18e50:	orr	r3, r3, r2, lsl #16
   18e54:	ldr	r9, [sp, #116]	; 0x74
   18e58:	ldr	r2, [r4]
   18e5c:	orr	r3, r3, r1, lsl #8
   18e60:	cmp	r3, #268435456	; 0x10000000
   18e64:	mov	r3, #0
   18e68:	str	r3, [r9]
   18e6c:	str	r2, [sp, #76]	; 0x4c
   18e70:	bls	18e9c <__printf_chk@plt+0x6708>
   18e74:	mvn	r0, #0
   18e78:	movw	r3, #32032	; 0x7d20
   18e7c:	movt	r3, #3
   18e80:	str	r3, [r9]
   18e84:	ldr	r2, [sp, #76]	; 0x4c
   18e88:	ldr	r3, [r4]
   18e8c:	cmp	r2, r3
   18e90:	bne	18f38 <__printf_chk@plt+0x67a4>
   18e94:	add	sp, sp, #84	; 0x54
   18e98:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18e9c:	mov	r5, r0
   18ea0:	str	r9, [sp]
   18ea4:	ldr	r3, [sp, #112]	; 0x70
   18ea8:	mov	r2, r6
   18eac:	add	r0, sp, #28
   18eb0:	mov	r1, r5
   18eb4:	bl	18c28 <__printf_chk@plt+0x6494>
   18eb8:	cmp	r0, #0
   18ebc:	bne	18f30 <__printf_chk@plt+0x679c>
   18ec0:	add	r3, sp, #16
   18ec4:	mov	r1, r6
   18ec8:	mov	r0, r5
   18ecc:	add	r2, sp, #12
   18ed0:	bl	17760 <__printf_chk@plt+0x4fcc>
   18ed4:	cmp	r0, #0
   18ed8:	movwne	r3, #31132	; 0x799c
   18edc:	mvnne	r0, #0
   18ee0:	movtne	r3, #3
   18ee4:	strne	r3, [r9]
   18ee8:	bne	18e84 <__printf_chk@plt+0x66f0>
   18eec:	ldr	lr, [sp, #16]
   18ef0:	add	r0, sp, #28
   18ef4:	ldr	ip, [sp, #56]	; 0x38
   18ef8:	mov	r2, #1
   18efc:	ldr	r3, [sp, #12]
   18f00:	add	r1, sp, #20
   18f04:	str	lr, [sp]
   18f08:	str	r8, [sp, #20]
   18f0c:	str	r7, [sp, #24]
   18f10:	ldr	r5, [ip, #16]
   18f14:	blx	r5
   18f18:	cmp	r0, #0
   18f1c:	movwne	r3, #32056	; 0x7d38
   18f20:	mvnne	r0, #0
   18f24:	movtne	r3, #3
   18f28:	strne	r3, [r9]
   18f2c:	b	18e84 <__printf_chk@plt+0x66f0>
   18f30:	mvn	r0, #0
   18f34:	b	18e84 <__printf_chk@plt+0x66f0>
   18f38:	bl	124b8 <__stack_chk_fail@plt>
   18f3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f40:	sub	sp, sp, #52	; 0x34
   18f44:	movw	ip, #61168	; 0xeef0
   18f48:	movt	ip, #4
   18f4c:	ldr	lr, [sp, #92]	; 0x5c
   18f50:	mov	sl, r2
   18f54:	ldr	r9, [sp, #88]	; 0x58
   18f58:	mov	r2, #1
   18f5c:	str	ip, [sp, #32]
   18f60:	mov	r5, r0
   18f64:	ldr	ip, [ip]
   18f68:	mov	fp, r3
   18f6c:	str	r1, [sp, #24]
   18f70:	mov	r0, r9
   18f74:	str	r2, [lr]
   18f78:	mov	r1, #0
   18f7c:	movw	r2, #29816	; 0x7478
   18f80:	movt	r2, #3
   18f84:	str	lr, [sp, #36]	; 0x24
   18f88:	str	ip, [sp, #44]	; 0x2c
   18f8c:	bl	30ed4 <crc32@@Base+0x1747c>
   18f90:	subs	r1, r0, #0
   18f94:	blt	190d0 <__printf_chk@plt+0x693c>
   18f98:	mov	r0, r9
   18f9c:	bl	2dd78 <crc32@@Base+0x14320>
   18fa0:	subs	r7, r0, #0
   18fa4:	blt	190d0 <__printf_chk@plt+0x693c>
   18fa8:	movw	r3, #30404	; 0x76c4
   18fac:	movw	r2, #36144	; 0x8d30
   18fb0:	movt	r3, #3
   18fb4:	movt	r2, #3
   18fb8:	str	r3, [sp, #12]
   18fbc:	movw	r3, #46860	; 0xb70c
   18fc0:	str	r2, [sp, #20]
   18fc4:	movt	r3, #3
   18fc8:	str	r3, [sp, #28]
   18fcc:	mov	r3, #0
   18fd0:	str	r3, [sp, #16]
   18fd4:	mov	r3, #0
   18fd8:	ldr	r2, [sp, #12]
   18fdc:	mov	r1, r7
   18fe0:	mov	r0, r9
   18fe4:	bl	31204 <crc32@@Base+0x177ac>
   18fe8:	cmp	r0, #0
   18fec:	beq	19108 <__printf_chk@plt+0x6974>
   18ff0:	ldr	r1, [sp, #20]
   18ff4:	bl	12680 <strcmp@plt>
   18ff8:	cmp	r0, #0
   18ffc:	bne	19108 <__printf_chk@plt+0x6974>
   19000:	ldr	r3, [sp, #28]
   19004:	mov	r0, r5
   19008:	ldr	r1, [sp, #24]
   1900c:	str	r3, [sp, #40]	; 0x28
   19010:	bl	2dd78 <crc32@@Base+0x14320>
   19014:	subs	r4, r0, #0
   19018:	blt	19098 <__printf_chk@plt+0x6904>
   1901c:	movw	r6, #29816	; 0x7478
   19020:	movw	r8, #31292	; 0x7a3c
   19024:	movt	r6, #3
   19028:	movt	r8, #3
   1902c:	mov	r2, #0
   19030:	mov	r1, r4
   19034:	mov	r0, r5
   19038:	bl	30f04 <crc32@@Base+0x174ac>
   1903c:	mov	r2, #9
   19040:	mov	r1, r6
   19044:	bl	121a0 <strncmp@plt>
   19048:	cmp	r0, #0
   1904c:	bne	19084 <__printf_chk@plt+0x68f0>
   19050:	add	r3, sp, #40	; 0x28
   19054:	mvn	r2, #0
   19058:	str	r3, [sp, #4]
   1905c:	mov	r1, r4
   19060:	str	r2, [sp]
   19064:	mov	r3, fp
   19068:	mov	r2, sl
   1906c:	mov	r0, r5
   19070:	bl	18e20 <__printf_chk@plt+0x668c>
   19074:	cmp	r0, #0
   19078:	beq	190f0 <__printf_chk@plt+0x695c>
   1907c:	mov	r0, r8
   19080:	bl	12290 <puts@plt>
   19084:	mov	r1, r4
   19088:	mov	r0, r5
   1908c:	bl	2ddd8 <crc32@@Base+0x14380>
   19090:	subs	r4, r0, #0
   19094:	bge	1902c <__printf_chk@plt+0x6898>
   19098:	cmn	r4, #8
   1909c:	cmnne	r4, #11
   190a0:	beq	19138 <__printf_chk@plt+0x69a4>
   190a4:	mov	r1, r7
   190a8:	mov	r2, #0
   190ac:	mov	r0, r9
   190b0:	bl	30f04 <crc32@@Base+0x174ac>
   190b4:	movw	r1, #32076	; 0x7d4c
   190b8:	movt	r1, #3
   190bc:	mov	r2, r0
   190c0:	mov	r0, #1
   190c4:	bl	12794 <__printf_chk@plt>
   190c8:	mvn	r0, #0
   190cc:	b	190d4 <__printf_chk@plt+0x6940>
   190d0:	mov	r0, #0
   190d4:	ldr	r3, [sp, #32]
   190d8:	ldr	r2, [sp, #44]	; 0x2c
   190dc:	ldr	r3, [r3]
   190e0:	cmp	r2, r3
   190e4:	bne	19188 <__printf_chk@plt+0x69f4>
   190e8:	add	sp, sp, #52	; 0x34
   190ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   190f0:	ldr	r3, [sp, #16]
   190f4:	movw	r0, #31288	; 0x7a38
   190f8:	movt	r0, #3
   190fc:	add	r3, r3, #1
   19100:	str	r3, [sp, #16]
   19104:	bl	12290 <puts@plt>
   19108:	mov	r1, r7
   1910c:	mov	r0, r9
   19110:	bl	2ddd8 <crc32@@Base+0x14380>
   19114:	subs	r7, r0, #0
   19118:	bge	18fd4 <__printf_chk@plt+0x6840>
   1911c:	ldr	r3, [sp, #16]
   19120:	cmp	r3, #0
   19124:	beq	190d0 <__printf_chk@plt+0x693c>
   19128:	ldr	r3, [sp, #36]	; 0x24
   1912c:	mov	r0, #0
   19130:	str	r0, [r3]
   19134:	b	190d4 <__printf_chk@plt+0x6940>
   19138:	mov	r1, r4
   1913c:	mov	r2, #0
   19140:	mov	r0, r5
   19144:	movw	r4, #31164	; 0x79bc
   19148:	movt	r4, #3
   1914c:	str	r4, [sp, #40]	; 0x28
   19150:	bl	30f04 <crc32@@Base+0x174ac>
   19154:	ldr	r1, [sp, #24]
   19158:	mov	r2, #0
   1915c:	mov	r6, r0
   19160:	mov	r0, r5
   19164:	bl	30f04 <crc32@@Base+0x174ac>
   19168:	mov	r2, r4
   1916c:	mov	r3, r6
   19170:	movw	r1, #31296	; 0x7a40
   19174:	movt	r1, #3
   19178:	str	r0, [sp]
   1917c:	mov	r0, #1
   19180:	bl	12794 <__printf_chk@plt>
   19184:	b	190a4 <__printf_chk@plt+0x6910>
   19188:	bl	124b8 <__stack_chk_fail@plt>
   1918c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19190:	mov	r6, r0
   19194:	add	fp, sp, #32
   19198:	sub	sp, sp, #316	; 0x13c
   1919c:	ldr	r0, [r0, #4]
   191a0:	str	r1, [fp, #-312]	; 0xfffffec8
   191a4:	movw	r7, #61168	; 0xeef0
   191a8:	ubfx	r4, r0, #8, #8
   191ac:	ubfx	lr, r0, #16, #8
   191b0:	lsr	r1, r0, #24
   191b4:	movt	r7, #4
   191b8:	orr	r1, r1, r0, lsl #24
   191bc:	mov	r8, r3
   191c0:	orr	r1, r1, r4, lsl #16
   191c4:	ldr	ip, [r7]
   191c8:	orr	r1, r1, lr, lsl #8
   191cc:	mov	r0, #0
   191d0:	cmp	r1, #268435456	; 0x10000000
   191d4:	str	r0, [r3]
   191d8:	movw	r1, #41356	; 0xa18c
   191dc:	str	ip, [fp, #-40]	; 0xffffffd8
   191e0:	movt	r1, #3
   191e4:	str	r1, [fp, #-244]	; 0xffffff0c
   191e8:	bls	19214 <__printf_chk@plt+0x6a80>
   191ec:	mvn	r0, #0
   191f0:	movw	r3, #32032	; 0x7d20
   191f4:	movt	r3, #3
   191f8:	str	r3, [r8]
   191fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19200:	ldr	r3, [r7]
   19204:	cmp	r2, r3
   19208:	bne	194c4 <__printf_chk@plt+0x6d30>
   1920c:	sub	sp, fp, #32
   19210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19214:	str	r3, [sp]
   19218:	sub	r0, fp, #292	; 0x124
   1921c:	ldr	r4, [fp, #-312]	; 0xfffffec8
   19220:	mov	r3, r2
   19224:	mov	r1, r6
   19228:	mov	r2, r4
   1922c:	bl	18c28 <__printf_chk@plt+0x6494>
   19230:	cmp	r0, #0
   19234:	bne	194bc <__printf_chk@plt+0x6d28>
   19238:	sub	r3, fp, #300	; 0x12c
   1923c:	mov	r1, r4
   19240:	sub	r2, fp, #304	; 0x130
   19244:	mov	r0, r6
   19248:	bl	17760 <__printf_chk@plt+0x4fcc>
   1924c:	subs	r4, r0, #0
   19250:	movwne	r3, #31132	; 0x799c
   19254:	mvnne	r0, #0
   19258:	movtne	r3, #3
   1925c:	strne	r3, [r8]
   19260:	bne	191fc <__printf_chk@plt+0x6a68>
   19264:	movw	r2, #28916	; 0x70f4
   19268:	sub	r3, fp, #296	; 0x128
   1926c:	movt	r2, #3
   19270:	ldr	r1, [fp, #-312]	; 0xfffffec8
   19274:	mov	r0, r6
   19278:	bl	31204 <crc32@@Base+0x177ac>
   1927c:	subs	r9, r0, #0
   19280:	beq	194a8 <__printf_chk@plt+0x6d14>
   19284:	ldr	ip, [fp, #-296]	; 0xfffffed8
   19288:	add	r5, r9, ip
   1928c:	cmp	r9, r5
   19290:	bcs	194a8 <__printf_chk@plt+0x6d14>
   19294:	sub	r2, r9, #1
   19298:	sub	r0, r5, #1
   1929c:	ldrb	r1, [r2, #1]!
   192a0:	cmp	r1, #0
   192a4:	addeq	r4, r4, #1
   192a8:	cmp	r0, r2
   192ac:	bne	1929c <__printf_chk@plt+0x6b08>
   192b0:	cmp	r4, #0
   192b4:	beq	194a8 <__printf_chk@plt+0x6d14>
   192b8:	cmp	ip, #0
   192bc:	ble	192dc <__printf_chk@plt+0x6b48>
   192c0:	ldrb	r2, [r5, #-1]
   192c4:	cmp	r2, #0
   192c8:	movwne	r3, #32152	; 0x7d98
   192cc:	mvnne	r0, #0
   192d0:	movtne	r3, #3
   192d4:	strne	r3, [r8]
   192d8:	bne	191fc <__printf_chk@plt+0x6a68>
   192dc:	cmp	r4, #100	; 0x64
   192e0:	movwgt	r3, #32200	; 0x7dc8
   192e4:	mvngt	r0, #0
   192e8:	movtgt	r3, #3
   192ec:	strgt	r3, [r8]
   192f0:	bgt	191fc <__printf_chk@plt+0x6a68>
   192f4:	lsl	r2, r4, #2
   192f8:	str	sp, [fp, #-316]	; 0xfffffec4
   192fc:	add	r2, r2, #10
   19300:	bic	r2, r2, #7
   19304:	sub	sp, sp, r2
   19308:	add	sl, sp, #20
   1930c:	add	r3, sp, #24
   19310:	str	r3, [fp, #-320]	; 0xfffffec0
   19314:	str	r9, [sl, #4]!
   19318:	mov	r0, r9
   1931c:	bl	125e4 <strlen@plt>
   19320:	add	r0, r0, #1
   19324:	add	r9, r9, r0
   19328:	cmp	r5, r9
   1932c:	bhi	19314 <__printf_chk@plt+0x6b80>
   19330:	rsb	r3, r4, r4, lsl #3
   19334:	mov	r2, r4
   19338:	add	r4, r3, #19
   1933c:	ldr	r1, [fp, #-320]	; 0xfffffec0
   19340:	lsl	r3, r3, #3
   19344:	mov	lr, #200	; 0xc8
   19348:	add	r3, r3, #168	; 0xa8
   1934c:	sub	r0, fp, #240	; 0xf0
   19350:	sub	sp, sp, r3
   19354:	mov	ip, #1
   19358:	sub	r3, fp, #244	; 0xf4
   1935c:	add	r5, sp, #24
   19360:	str	r0, [sp, #12]
   19364:	mov	sl, #0
   19368:	str	r4, [sp, #8]
   1936c:	mov	r0, r6
   19370:	str	lr, [sp, #16]
   19374:	str	ip, [sp]
   19378:	str	r5, [sp, #4]
   1937c:	str	sl, [sp, #20]
   19380:	bl	31e98 <crc32@@Base+0x18440>
   19384:	subs	r3, r0, #0
   19388:	mov	r9, r3
   1938c:	blt	193ac <__printf_chk@plt+0x6c18>
   19390:	bne	193c0 <__printf_chk@plt+0x6c2c>
   19394:	mvn	r0, #0
   19398:	movw	r3, #32272	; 0x7e10
   1939c:	movt	r3, #3
   193a0:	str	r3, [r8]
   193a4:	ldr	sp, [fp, #-316]	; 0xfffffec4
   193a8:	b	191fc <__printf_chk@plt+0x6a68>
   193ac:	movw	r3, #32240	; 0x7df0
   193b0:	mvn	r0, #0
   193b4:	movt	r3, #3
   193b8:	str	r3, [r8]
   193bc:	b	193a4 <__printf_chk@plt+0x6c10>
   193c0:	cmp	r4, r3
   193c4:	bgt	193dc <__printf_chk@plt+0x6c48>
   193c8:	movw	r3, #32288	; 0x7e20
   193cc:	mvn	r0, #0
   193d0:	movt	r3, #3
   193d4:	str	r3, [r8]
   193d8:	b	193a4 <__printf_chk@plt+0x6c10>
   193dc:	mov	r3, sl
   193e0:	ldr	r1, [fp, #-312]	; 0xfffffec8
   193e4:	movw	r2, #28932	; 0x7104
   193e8:	mov	r0, r6
   193ec:	movt	r2, #3
   193f0:	bl	31204 <crc32@@Base+0x177ac>
   193f4:	cmp	r0, #0
   193f8:	beq	19448 <__printf_chk@plt+0x6cb4>
   193fc:	ldr	r1, [r6, #12]
   19400:	add	r2, r5, r9, lsl #3
   19404:	ubfx	lr, r1, #8, #8
   19408:	ubfx	ip, r1, #16, #8
   1940c:	lsr	r3, r1, #24
   19410:	orr	r3, r3, r1, lsl #24
   19414:	orr	r3, r3, lr, lsl #16
   19418:	orr	r3, r3, ip, lsl #8
   1941c:	str	r3, [r5, r9, lsl #3]
   19420:	ldr	r1, [r0, #4]
   19424:	add	r3, r9, #1
   19428:	ubfx	ip, r1, #8, #8
   1942c:	mov	r9, r3
   19430:	lsr	r3, r1, #24
   19434:	ubfx	r0, r1, #16, #8
   19438:	orr	r3, r3, r1, lsl #24
   1943c:	orr	r3, r3, ip, lsl #16
   19440:	orr	r3, r3, r0, lsl #8
   19444:	str	r3, [r2, #4]
   19448:	lsl	r3, r9, #3
   1944c:	mov	r2, r9
   19450:	add	r3, r3, #8
   19454:	mov	r1, r5
   19458:	sub	sp, sp, r3
   1945c:	mov	r0, r6
   19460:	add	r4, sp, #24
   19464:	mov	r3, r4
   19468:	bl	18da8 <__printf_chk@plt+0x6614>
   1946c:	ldr	ip, [fp, #-264]	; 0xfffffef8
   19470:	ldr	lr, [fp, #-300]	; 0xfffffed4
   19474:	mov	r1, r4
   19478:	ldr	r3, [fp, #-304]	; 0xfffffed0
   1947c:	mov	r2, r9
   19480:	sub	r0, fp, #292	; 0x124
   19484:	str	lr, [sp]
   19488:	ldr	r4, [ip, #16]
   1948c:	blx	r4
   19490:	cmp	r0, #0
   19494:	movwne	r3, #32056	; 0x7d38
   19498:	mvnne	r0, #0
   1949c:	movtne	r3, #3
   194a0:	strne	r3, [r8]
   194a4:	b	193a4 <__printf_chk@plt+0x6c10>
   194a8:	movw	r3, #32120	; 0x7d78
   194ac:	mvn	r0, #0
   194b0:	movt	r3, #3
   194b4:	str	r3, [r8]
   194b8:	b	191fc <__printf_chk@plt+0x6a68>
   194bc:	mvn	r0, #0
   194c0:	b	191fc <__printf_chk@plt+0x6a68>
   194c4:	bl	124b8 <__stack_chk_fail@plt>
   194c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194cc:	movw	r3, #61168	; 0xeef0
   194d0:	sub	sp, sp, #36	; 0x24
   194d4:	movt	r3, #4
   194d8:	mov	r9, r2
   194dc:	mov	r5, r0
   194e0:	str	r3, [sp, #20]
   194e4:	mov	r0, r2
   194e8:	ldr	r3, [r3]
   194ec:	movw	r2, #29816	; 0x7478
   194f0:	str	r1, [sp, #12]
   194f4:	movt	r2, #3
   194f8:	mov	r1, #0
   194fc:	str	r3, [sp, #28]
   19500:	bl	30ed4 <crc32@@Base+0x1747c>
   19504:	subs	r1, r0, #0
   19508:	blt	19644 <__printf_chk@plt+0x6eb0>
   1950c:	mov	r0, r9
   19510:	bl	2dd78 <crc32@@Base+0x14320>
   19514:	subs	r6, r0, #0
   19518:	blt	19644 <__printf_chk@plt+0x6eb0>
   1951c:	movw	sl, #30404	; 0x76c4
   19520:	movw	fp, #30036	; 0x7554
   19524:	movt	sl, #3
   19528:	movt	fp, #3
   1952c:	movw	r3, #46860	; 0xb70c
   19530:	movt	r3, #3
   19534:	str	r3, [sp, #16]
   19538:	mov	r3, #0
   1953c:	mov	r2, sl
   19540:	mov	r1, r6
   19544:	mov	r0, r9
   19548:	bl	31204 <crc32@@Base+0x177ac>
   1954c:	cmp	r0, #0
   19550:	beq	19630 <__printf_chk@plt+0x6e9c>
   19554:	mov	r1, fp
   19558:	bl	12680 <strcmp@plt>
   1955c:	cmp	r0, #0
   19560:	bne	19630 <__printf_chk@plt+0x6e9c>
   19564:	ldr	r3, [sp, #16]
   19568:	mov	r0, r5
   1956c:	ldr	r1, [sp, #12]
   19570:	str	r3, [sp, #24]
   19574:	bl	2dd78 <crc32@@Base+0x14320>
   19578:	subs	r4, r0, #0
   1957c:	blt	195ec <__printf_chk@plt+0x6e58>
   19580:	movw	r7, #29816	; 0x7478
   19584:	movw	r8, #31292	; 0x7a3c
   19588:	movt	r7, #3
   1958c:	movt	r8, #3
   19590:	mov	r2, #0
   19594:	mov	r1, r4
   19598:	mov	r0, r5
   1959c:	bl	30f04 <crc32@@Base+0x174ac>
   195a0:	mov	r2, #9
   195a4:	mov	r1, r7
   195a8:	bl	121a0 <strncmp@plt>
   195ac:	cmp	r0, #0
   195b0:	bne	195d8 <__printf_chk@plt+0x6e44>
   195b4:	add	r3, sp, #24
   195b8:	mov	r2, r6
   195bc:	mov	r1, r4
   195c0:	mov	r0, r5
   195c4:	bl	1918c <__printf_chk@plt+0x69f8>
   195c8:	cmp	r0, #0
   195cc:	beq	19624 <__printf_chk@plt+0x6e90>
   195d0:	mov	r0, r8
   195d4:	bl	12290 <puts@plt>
   195d8:	mov	r1, r4
   195dc:	mov	r0, r5
   195e0:	bl	2ddd8 <crc32@@Base+0x14380>
   195e4:	subs	r4, r0, #0
   195e8:	bge	19590 <__printf_chk@plt+0x6dfc>
   195ec:	cmn	r4, #8
   195f0:	cmnne	r4, #11
   195f4:	beq	19664 <__printf_chk@plt+0x6ed0>
   195f8:	mov	r1, r6
   195fc:	mov	r2, #0
   19600:	mov	r0, r9
   19604:	bl	30f04 <crc32@@Base+0x174ac>
   19608:	movw	r1, #32076	; 0x7d4c
   1960c:	movt	r1, #3
   19610:	mov	r2, r0
   19614:	mov	r0, #1
   19618:	bl	12794 <__printf_chk@plt>
   1961c:	mvn	r0, #0
   19620:	b	19648 <__printf_chk@plt+0x6eb4>
   19624:	movw	r0, #31288	; 0x7a38
   19628:	movt	r0, #3
   1962c:	bl	12290 <puts@plt>
   19630:	mov	r1, r6
   19634:	mov	r0, r9
   19638:	bl	2ddd8 <crc32@@Base+0x14380>
   1963c:	subs	r6, r0, #0
   19640:	bge	19538 <__printf_chk@plt+0x6da4>
   19644:	mov	r0, #0
   19648:	ldr	r3, [sp, #20]
   1964c:	ldr	r2, [sp, #28]
   19650:	ldr	r3, [r3]
   19654:	cmp	r2, r3
   19658:	bne	196b4 <__printf_chk@plt+0x6f20>
   1965c:	add	sp, sp, #36	; 0x24
   19660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19664:	mov	r1, r4
   19668:	mov	r2, #0
   1966c:	mov	r0, r5
   19670:	movw	r4, #31164	; 0x79bc
   19674:	movt	r4, #3
   19678:	str	r4, [sp, #24]
   1967c:	bl	30f04 <crc32@@Base+0x174ac>
   19680:	ldr	r1, [sp, #12]
   19684:	mov	r2, #0
   19688:	mov	r7, r0
   1968c:	mov	r0, r5
   19690:	bl	30f04 <crc32@@Base+0x174ac>
   19694:	mov	r2, r4
   19698:	mov	r3, r7
   1969c:	movw	r1, #32312	; 0x7e38
   196a0:	movt	r1, #3
   196a4:	str	r0, [sp]
   196a8:	mov	r0, #1
   196ac:	bl	12794 <__printf_chk@plt>
   196b0:	b	195f8 <__printf_chk@plt+0x6e64>
   196b4:	bl	124b8 <__stack_chk_fail@plt>
   196b8:	movw	r3, #43500	; 0xa9ec
   196bc:	movt	r3, #30
   196c0:	ldr	r2, [r3]
   196c4:	b	194c8 <__printf_chk@plt+0x6d34>
   196c8:	push	{r4, r5, r6, r7, r8, lr}
   196cc:	mov	r6, r0
   196d0:	ldr	r7, [sp, #40]	; 0x28
   196d4:	uxtb	r0, r3
   196d8:	mov	r4, r1
   196dc:	mov	r8, r2
   196e0:	ldr	r5, [sp, #32]
   196e4:	str	r1, [r7]
   196e8:	bl	1a6e0 <crc32@@Base+0xc88>
   196ec:	cmp	r6, #0
   196f0:	mov	r3, r0
   196f4:	bne	19790 <__printf_chk@plt+0x6ffc>
   196f8:	cmp	r4, r8
   196fc:	beq	19774 <__printf_chk@plt+0x6fe0>
   19700:	movw	r2, #32528	; 0x7f10
   19704:	movw	r1, #32536	; 0x7f18
   19708:	movt	r2, #3
   1970c:	movt	r1, #3
   19710:	mov	r0, #1
   19714:	bl	12794 <__printf_chk@plt>
   19718:	ldr	r3, [sp, #36]	; 0x24
   1971c:	cmp	r5, r3
   19720:	bhi	1974c <__printf_chk@plt+0x6fb8>
   19724:	mov	r2, r5
   19728:	ldrd	r0, [sp, #24]
   1972c:	bl	123a4 <memmove@plt>
   19730:	add	r4, r4, r5
   19734:	movw	r0, #31696	; 0x7bd0
   19738:	str	r4, [r7]
   1973c:	movt	r0, #3
   19740:	bl	12290 <puts@plt>
   19744:	mov	r0, #0
   19748:	pop	{r4, r5, r6, r7, r8, pc}
   1974c:	mov	r0, r6
   19750:	bl	1a788 <crc32@@Base+0xd30>
   19754:	movw	r0, #32452	; 0x7ec4
   19758:	movt	r0, #3
   1975c:	bl	12290 <puts@plt>
   19760:	movw	r0, #32500	; 0x7ef4
   19764:	movt	r0, #3
   19768:	bl	12290 <puts@plt>
   1976c:	mvn	r0, #0
   19770:	pop	{r4, r5, r6, r7, r8, pc}
   19774:	movw	r2, #32552	; 0x7f28
   19778:	movw	r1, #32536	; 0x7f18
   1977c:	movt	r2, #3
   19780:	movt	r1, #3
   19784:	mov	r0, #1
   19788:	bl	12794 <__printf_chk@plt>
   1978c:	b	19730 <__printf_chk@plt+0x6f9c>
   19790:	mov	r2, r0
   19794:	movw	r1, #32388	; 0x7e84
   19798:	mov	r0, #1
   1979c:	movt	r1, #3
   197a0:	bl	12794 <__printf_chk@plt>
   197a4:	mov	r2, r6
   197a8:	movw	r1, #32416	; 0x7ea0
   197ac:	mov	r0, #1
   197b0:	movt	r1, #3
   197b4:	bl	12794 <__printf_chk@plt>
   197b8:	mvn	r0, #2
   197bc:	pop	{r4, r5, r6, r7, r8, pc}
   197c0:	b	123a4 <memmove@plt>
   197c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197c8:	movw	r8, #61168	; 0xeef0
   197cc:	movt	r8, #4
   197d0:	movw	r3, #32580	; 0x7f44
   197d4:	sub	sp, sp, #204	; 0xcc
   197d8:	mov	r2, r3
   197dc:	ldr	r3, [r8]
   197e0:	mov	r4, #0
   197e4:	movw	r7, #32384	; 0x7e80
   197e8:	add	sl, sp, #56	; 0x38
   197ec:	movt	r7, #3
   197f0:	mov	r5, r0
   197f4:	mov	r6, r4
   197f8:	mov	r9, #2
   197fc:	movt	r2, #3
   19800:	str	r3, [sp, #196]	; 0xc4
   19804:	str	r2, [sp, #32]
   19808:	movw	r2, #32556	; 0x7f2c
   1980c:	str	r8, [sp, #28]
   19810:	movt	r2, #3
   19814:	str	r2, [sp, #36]	; 0x24
   19818:	mov	fp, #0
   1981c:	mov	r2, #132	; 0x84
   19820:	mov	r1, fp
   19824:	add	r0, sp, #64	; 0x40
   19828:	str	fp, [sp, #48]	; 0x30
   1982c:	bl	12308 <memset@plt>
   19830:	mvn	ip, #0
   19834:	add	r1, sp, #52	; 0x34
   19838:	str	r9, [sp, #4]
   1983c:	mov	r2, fp
   19840:	str	r1, [sp, #16]
   19844:	add	r3, sp, #48	; 0x30
   19848:	str	ip, [sp, #8]
   1984c:	mov	r1, r5
   19850:	str	fp, [sp, #12]
   19854:	add	r0, sp, #64	; 0x40
   19858:	str	fp, [sp]
   1985c:	mov	ip, #1
   19860:	str	sl, [sp, #20]
   19864:	str	ip, [sp, #188]	; 0xbc
   19868:	bl	18438 <__printf_chk@plt+0x5ca4>
   1986c:	subs	r9, r0, #0
   19870:	blt	19914 <__printf_chk@plt+0x7180>
   19874:	add	r2, sp, #46	; 0x2e
   19878:	mov	r1, r9
   1987c:	mov	r0, r5
   19880:	bl	16ae4 <__printf_chk@plt+0x4350>
   19884:	cmp	r0, fp
   19888:	bne	19950 <__printf_chk@plt+0x71bc>
   1988c:	mov	r1, r9
   19890:	add	r2, sp, #47	; 0x2f
   19894:	mov	r0, r5
   19898:	bl	16b4c <__printf_chk@plt+0x43b8>
   1989c:	subs	r8, r0, #0
   198a0:	bne	19968 <__printf_chk@plt+0x71d4>
   198a4:	ldr	r9, [sp, #56]	; 0x38
   198a8:	add	r0, r9, #262144	; 0x40000
   198ac:	lsl	r0, r0, #2
   198b0:	bl	125cc <malloc@plt>
   198b4:	ldr	ip, [sp, #52]	; 0x34
   198b8:	add	lr, sp, #60	; 0x3c
   198bc:	mov	r1, r8
   198c0:	ldrb	r3, [sp, #46]	; 0x2e
   198c4:	mov	r2, ip
   198c8:	str	r9, [sp, #8]
   198cc:	str	lr, [sp, #16]
   198d0:	mov	fp, r0
   198d4:	ldrb	r0, [sp, #47]	; 0x2f
   198d8:	stm	sp, {fp, ip}
   198dc:	mov	ip, #8388608	; 0x800000
   198e0:	str	ip, [sp, #12]
   198e4:	bl	196c8 <__printf_chk@plt+0x6f34>
   198e8:	mov	r9, r0
   198ec:	mov	r0, fp
   198f0:	bl	1214c <free@plt>
   198f4:	cmp	r9, #0
   198f8:	cmnne	r9, #3
   198fc:	bne	19914 <__printf_chk@plt+0x7180>
   19900:	add	r4, r4, #1
   19904:	cmp	r4, #3
   19908:	beq	19930 <__printf_chk@plt+0x719c>
   1990c:	ldrb	r9, [r4, r7]
   19910:	b	19818 <__printf_chk@plt+0x7084>
   19914:	cmp	r6, #0
   19918:	bne	19900 <__printf_chk@plt+0x716c>
   1991c:	cmn	r9, #2
   19920:	add	r4, r4, #1
   19924:	movne	r6, r9
   19928:	cmp	r4, #3
   1992c:	bne	1990c <__printf_chk@plt+0x7178>
   19930:	ldr	r8, [sp, #28]
   19934:	mov	r0, r6
   19938:	ldr	r2, [sp, #196]	; 0xc4
   1993c:	ldr	r3, [r8]
   19940:	cmp	r2, r3
   19944:	bne	1997c <__printf_chk@plt+0x71e8>
   19948:	add	sp, sp, #204	; 0xcc
   1994c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19950:	ldr	r0, [sp, #36]	; 0x24
   19954:	bl	12290 <puts@plt>
   19958:	cmp	r6, fp
   1995c:	bne	19900 <__printf_chk@plt+0x716c>
   19960:	mvn	r6, #21
   19964:	b	19900 <__printf_chk@plt+0x716c>
   19968:	ldr	r0, [sp, #32]
   1996c:	bl	12290 <puts@plt>
   19970:	cmp	r6, #0
   19974:	beq	19960 <__printf_chk@plt+0x71cc>
   19978:	b	19900 <__printf_chk@plt+0x716c>
   1997c:	bl	124b8 <__stack_chk_fail@plt>
   19980:	tst	r1, #3
   19984:	beq	199bc <__printf_chk@plt+0x7228>
   19988:	cmp	r2, #0
   1998c:	bxeq	lr
   19990:	movw	r3, #32612	; 0x7f64
   19994:	movt	r3, #3
   19998:	ldrb	ip, [r1], #1
   1999c:	subs	r2, r2, #1
   199a0:	eor	ip, ip, r0
   199a4:	uxtb	ip, ip
   199a8:	ldr	ip, [r3, ip, lsl #2]
   199ac:	eor	r0, ip, r0, lsr #8
   199b0:	bxeq	lr
   199b4:	tst	r1, #3
   199b8:	bne	19998 <__printf_chk@plt+0x7204>
   199bc:	lsrs	ip, r2, #2
   199c0:	and	r2, r2, #3
   199c4:	push	{lr}		; (str lr, [sp, #-4]!)
   199c8:	sub	lr, r1, #4
   199cc:	beq	19a20 <__printf_chk@plt+0x728c>
   199d0:	sub	ip, ip, #-1073741823	; 0xc0000001
   199d4:	movw	r3, #32612	; 0x7f64
   199d8:	movt	r3, #3
   199dc:	add	r1, r1, ip, lsl #2
   199e0:	ldr	ip, [lr, #4]!
   199e4:	eor	r0, r0, ip
   199e8:	cmp	lr, r1
   199ec:	uxtb	ip, r0
   199f0:	ldr	ip, [r3, ip, lsl #2]
   199f4:	eor	ip, ip, r0, lsr #8
   199f8:	uxtb	r0, ip
   199fc:	ldr	r0, [r3, r0, lsl #2]
   19a00:	eor	ip, r0, ip, lsr #8
   19a04:	uxtb	r0, ip
   19a08:	ldr	r0, [r3, r0, lsl #2]
   19a0c:	eor	r0, r0, ip, lsr #8
   19a10:	uxtb	ip, r0
   19a14:	ldr	ip, [r3, ip, lsl #2]
   19a18:	eor	r0, ip, r0, lsr #8
   19a1c:	bne	199e0 <__printf_chk@plt+0x724c>
   19a20:	cmp	r2, #0
   19a24:	popeq	{pc}		; (ldreq pc, [sp], #4)
   19a28:	add	r1, lr, #3
   19a2c:	movw	r3, #32612	; 0x7f64
   19a30:	add	lr, r1, r2
   19a34:	movt	r3, #3
   19a38:	ldrb	r2, [r1, #1]!
   19a3c:	eor	r2, r2, r0
   19a40:	cmp	r1, lr
   19a44:	uxtb	r2, r2
   19a48:	ldr	ip, [r3, r2, lsl #2]
   19a4c:	eor	r0, ip, r0, lsr #8
   19a50:	bne	19a38 <__printf_chk@plt+0x72a4>
   19a54:	pop	{pc}		; (ldr pc, [sp], #4)

00019a58 <crc32@@Base>:
   19a58:	push	{r4, lr}
   19a5c:	mvn	r0, r0
   19a60:	bl	19980 <__printf_chk@plt+0x71ec>
   19a64:	mvn	r0, r0
   19a68:	pop	{r4, pc}
   19a6c:	push	{r4, lr}
   19a70:	mvn	r0, r0
   19a74:	bl	19980 <__printf_chk@plt+0x71ec>
   19a78:	mvn	r0, r0
   19a7c:	pop	{r4, pc}
   19a80:	push	{r4, lr}
   19a84:	mov	r4, r2
   19a88:	mov	r2, r1
   19a8c:	mov	r1, r0
   19a90:	mvn	r0, #0
   19a94:	bl	19980 <__printf_chk@plt+0x71ec>
   19a98:	mvn	r0, r0
   19a9c:	rev	r0, r0
   19aa0:	str	r0, [r4]
   19aa4:	pop	{r4, pc}
   19aa8:	sub	r0, r0, #1
   19aac:	uxtb	r0, r0
   19ab0:	cmp	r0, #31
   19ab4:	movwls	r3, #8319	; 0x207f
   19ab8:	movtls	r3, #32768	; 0x8000
   19abc:	mvnls	r0, r3, lsr r0
   19ac0:	andls	r0, r0, #1
   19ac4:	movhi	r0, #1
   19ac8:	bx	lr
   19acc:	ldr	r2, [r0]
   19ad0:	ldr	r3, [r0, #8]
   19ad4:	cmp	r2, #0
   19ad8:	beq	19afc <crc32@@Base+0xa4>
   19adc:	cmp	r3, #0
   19ae0:	movne	r3, #1
   19ae4:	bne	19af4 <crc32@@Base+0x9c>
   19ae8:	ldr	r3, [r0, #16]
   19aec:	adds	r3, r3, #0
   19af0:	movne	r3, #1
   19af4:	mov	r0, r3
   19af8:	bx	lr
   19afc:	cmp	r3, #0
   19b00:	ldr	r2, [r0, #16]
   19b04:	beq	19af4 <crc32@@Base+0x9c>
   19b08:	adds	r3, r2, #0
   19b0c:	movne	r3, #1
   19b10:	mov	r0, r3
   19b14:	bx	lr
   19b18:	push	{r4, r5, r6, r7, r8, lr}
   19b1c:	movw	r5, #61168	; 0xeef0
   19b20:	movt	r5, #4
   19b24:	ldrb	r2, [r0, #30]
   19b28:	sub	sp, sp, #24
   19b2c:	mov	r4, r0
   19b30:	ldr	r3, [r5]
   19b34:	cmp	r2, #4
   19b38:	mov	r6, r1
   19b3c:	str	r3, [sp, #20]
   19b40:	beq	19b78 <crc32@@Base+0x120>
   19b44:	ldr	r2, [r0, #12]
   19b48:	add	r1, r0, #64	; 0x40
   19b4c:	str	r1, [sp, #12]
   19b50:	rev	r2, r2
   19b54:	str	r2, [sp, #16]
   19b58:	ldr	r0, [r6, #84]	; 0x54
   19b5c:	bl	1ab7c <crc32@@Base+0x1124>
   19b60:	ldr	r2, [sp, #20]
   19b64:	ldr	r3, [r5]
   19b68:	cmp	r2, r3
   19b6c:	bne	19be0 <crc32@@Base+0x188>
   19b70:	add	sp, sp, #24
   19b74:	pop	{r4, r5, r6, r7, r8, pc}
   19b78:	ldr	r7, [r1, #20]
   19b7c:	bl	19f60 <crc32@@Base+0x508>
   19b80:	add	r2, sp, #12
   19b84:	add	r3, sp, #16
   19b88:	mov	r1, r7
   19b8c:	mov	r8, r0
   19b90:	mov	r0, r4
   19b94:	bl	19f90 <crc32@@Base+0x538>
   19b98:	ldr	r2, [sp, #16]
   19b9c:	cmp	r2, #0
   19ba0:	cmpne	r7, r8
   19ba4:	ldrcc	r1, [sp, #12]
   19ba8:	bcc	19b58 <crc32@@Base+0x100>
   19bac:	ldr	ip, [r6, #76]	; 0x4c
   19bb0:	movw	r1, #65196	; 0xfeac
   19bb4:	movt	r1, #4
   19bb8:	ldr	r3, [r6, #80]	; 0x50
   19bbc:	movw	r2, #33636	; 0x8364
   19bc0:	movt	r2, #3
   19bc4:	ldr	r0, [r1]
   19bc8:	mov	r1, #1
   19bcc:	str	r7, [sp]
   19bd0:	str	ip, [sp, #4]
   19bd4:	bl	122d8 <__fprintf_chk@plt>
   19bd8:	mvn	r0, #0
   19bdc:	b	19b60 <crc32@@Base+0x108>
   19be0:	bl	124b8 <__stack_chk_fail@plt>
   19be4:	ldr	r2, [r1, #44]	; 0x2c
   19be8:	push	{r4, r5, r6, r7, r8, lr}
   19bec:	sub	r2, r2, #64	; 0x40
   19bf0:	mov	r4, r0
   19bf4:	mov	r7, r1
   19bf8:	add	r1, r0, #64	; 0x40
   19bfc:	mov	r0, #0
   19c00:	mov	r5, r3
   19c04:	bl	19a58 <crc32@@Base>
   19c08:	ldr	r1, [r7, #64]	; 0x40
   19c0c:	mov	r6, r0
   19c10:	ldr	r0, [r5, #80]	; 0x50
   19c14:	bl	1ad50 <crc32@@Base+0x12f8>
   19c18:	ldr	r3, [r5, #44]	; 0x2c
   19c1c:	ldr	ip, [r5, #36]	; 0x24
   19c20:	rev	r6, r6
   19c24:	cmp	r3, #32
   19c28:	ldr	r3, [r7, #44]	; 0x2c
   19c2c:	ldr	r2, [r5, #60]	; 0x3c
   19c30:	addeq	r3, r3, #8064	; 0x1f80
   19c34:	subne	r3, r3, #64	; 0x40
   19c38:	addeq	r3, r3, #32
   19c3c:	cmp	ip, #26
   19c40:	ldr	r1, [r5, #56]	; 0x38
   19c44:	rev	r3, r3
   19c48:	ldreq	r2, [r4, #80]	; 0x50
   19c4c:	str	r3, [r4, #12]
   19c50:	movw	r3, #1319	; 0x527
   19c54:	subeq	r1, r2, #28
   19c58:	str	r6, [r4, #24]
   19c5c:	rev	r1, r1
   19c60:	rev	r2, r2
   19c64:	str	r1, [r4, #16]
   19c68:	movt	r3, #22041	; 0x5619
   19c6c:	str	r2, [r4, #20]
   19c70:	mov	r2, #32
   19c74:	str	r3, [r4]
   19c78:	rev	r0, r0
   19c7c:	str	r0, [r4, #8]
   19c80:	ldr	r3, [r5, #36]	; 0x24
   19c84:	add	r0, r4, r2
   19c88:	strb	r3, [r4, #28]
   19c8c:	ldr	r3, [r5, #40]	; 0x28
   19c90:	strb	r3, [r4, #29]
   19c94:	ldr	r3, [r5, #44]	; 0x2c
   19c98:	strb	r3, [r4, #30]
   19c9c:	ldr	r3, [r5, #48]	; 0x30
   19ca0:	strb	r3, [r4, #31]
   19ca4:	ldr	r1, [r5, #64]	; 0x40
   19ca8:	bl	126e0 <strncpy@plt>
   19cac:	mov	r2, #64	; 0x40
   19cb0:	mov	r1, r4
   19cb4:	mov	r0, #0
   19cb8:	bl	19a58 <crc32@@Base>
   19cbc:	rev	r0, r0
   19cc0:	str	r0, [r4, #4]
   19cc4:	pop	{r4, r5, r6, r7, r8, pc}
   19cc8:	push	{r4, r5, r6, r7, r8, lr}
   19ccc:	movw	r5, #61168	; 0xeef0
   19cd0:	movt	r5, #4
   19cd4:	sub	sp, sp, #72	; 0x48
   19cd8:	add	r6, r0, #64	; 0x40
   19cdc:	add	lr, sp, #4
   19ce0:	ldr	r3, [r5]
   19ce4:	mov	r4, r0
   19ce8:	mov	r8, r1
   19cec:	str	r3, [sp, #68]	; 0x44
   19cf0:	ldr	r0, [r4]
   19cf4:	add	r4, r4, #16
   19cf8:	ldr	r1, [r4, #-12]
   19cfc:	mov	ip, lr
   19d00:	ldr	r2, [r4, #-8]
   19d04:	add	lr, lr, #16
   19d08:	ldr	r3, [r4, #-4]
   19d0c:	cmp	r4, r6
   19d10:	stmia	ip!, {r0, r1, r2, r3}
   19d14:	bne	19cf0 <crc32@@Base+0x298>
   19d18:	ldr	r2, [sp, #4]
   19d1c:	movw	r3, #1319	; 0x527
   19d20:	movt	r3, #22041	; 0x5619
   19d24:	cmp	r2, r3
   19d28:	bne	19d90 <crc32@@Base+0x338>
   19d2c:	mov	r7, #0
   19d30:	add	r1, sp, #4
   19d34:	mov	r0, r7
   19d38:	mov	r2, #64	; 0x40
   19d3c:	ldr	r6, [sp, #8]
   19d40:	str	r7, [sp, #8]
   19d44:	bl	19a58 <crc32@@Base>
   19d48:	rev	r6, r6
   19d4c:	cmp	r6, r0
   19d50:	bne	19d98 <crc32@@Base+0x340>
   19d54:	ldr	r3, [sp, #28]
   19d58:	mov	r1, r4
   19d5c:	sub	r2, r8, #64	; 0x40
   19d60:	mov	r0, r7
   19d64:	rev	r4, r3
   19d68:	bl	19a58 <crc32@@Base>
   19d6c:	cmp	r4, r0
   19d70:	moveq	r0, r7
   19d74:	mvnne	r0, #10
   19d78:	ldr	r2, [sp, #68]	; 0x44
   19d7c:	ldr	r3, [r5]
   19d80:	cmp	r2, r3
   19d84:	bne	19da0 <crc32@@Base+0x348>
   19d88:	add	sp, sp, #72	; 0x48
   19d8c:	pop	{r4, r5, r6, r7, r8, pc}
   19d90:	mvn	r0, #8
   19d94:	b	19d78 <crc32@@Base+0x320>
   19d98:	mvn	r0, #6
   19d9c:	b	19d78 <crc32@@Base+0x320>
   19da0:	bl	124b8 <__stack_chk_fail@plt>
   19da4:	push	{r4, r5, lr}
   19da8:	movw	r4, #61168	; 0xeef0
   19dac:	movt	r4, #4
   19db0:	sub	sp, sp, #12
   19db4:	mov	r5, r3
   19db8:	ldr	ip, [r4]
   19dbc:	mov	r3, sp
   19dc0:	str	ip, [sp, #4]
   19dc4:	bl	31204 <crc32@@Base+0x177ac>
   19dc8:	cmp	r0, #0
   19dcc:	beq	19df8 <crc32@@Base+0x3a0>
   19dd0:	ldr	r3, [sp]
   19dd4:	cmp	r3, #3
   19dd8:	bls	19df8 <crc32@@Base+0x3a0>
   19ddc:	ldr	r3, [r0]
   19de0:	ubfx	r1, r3, #8, #8
   19de4:	ubfx	r2, r3, #16, #8
   19de8:	lsr	r5, r3, #24
   19dec:	orr	r5, r5, r3, lsl #24
   19df0:	orr	r5, r5, r1, lsl #16
   19df4:	orr	r5, r5, r2, lsl #8
   19df8:	ldr	r2, [sp, #4]
   19dfc:	mov	r0, r5
   19e00:	ldr	r3, [r4]
   19e04:	cmp	r2, r3
   19e08:	bne	19e14 <crc32@@Base+0x3bc>
   19e0c:	add	sp, sp, #12
   19e10:	pop	{r4, r5, pc}
   19e14:	bl	124b8 <__stack_chk_fail@plt>
   19e18:	push	{r4, r5, lr}
   19e1c:	movw	r4, #61168	; 0xeef0
   19e20:	movt	r4, #4
   19e24:	sub	sp, sp, #12
   19e28:	mov	r5, r3
   19e2c:	ldr	ip, [r4]
   19e30:	mov	r3, sp
   19e34:	str	ip, [sp, #4]
   19e38:	bl	31204 <crc32@@Base+0x177ac>
   19e3c:	cmp	r0, #0
   19e40:	beq	19e6c <crc32@@Base+0x414>
   19e44:	ldr	r3, [sp]
   19e48:	cmp	r3, #3
   19e4c:	bls	19e6c <crc32@@Base+0x414>
   19e50:	ldr	r3, [r0]
   19e54:	ubfx	r1, r3, #8, #8
   19e58:	ubfx	r2, r3, #16, #8
   19e5c:	lsr	r5, r3, #24
   19e60:	orr	r5, r5, r3, lsl #24
   19e64:	orr	r5, r5, r1, lsl #16
   19e68:	orr	r5, r5, r2, lsl #8
   19e6c:	ldr	r2, [sp, #4]
   19e70:	mov	r0, r5
   19e74:	ldr	r3, [r4]
   19e78:	cmp	r2, r3
   19e7c:	bne	19e88 <crc32@@Base+0x430>
   19e80:	add	sp, sp, #12
   19e84:	pop	{r4, r5, pc}
   19e88:	bl	124b8 <__stack_chk_fail@plt>
   19e8c:	andeq	r0, r0, r0
   19e90:	push	{r4, r5, r6, r7, lr}
   19e94:	movw	r4, #61168	; 0xeef0
   19e98:	movt	r4, #4
   19e9c:	sub	sp, sp, #76	; 0x4c
   19ea0:	add	r7, r0, #64	; 0x40
   19ea4:	add	r5, sp, #4
   19ea8:	ldr	r3, [r4]
   19eac:	mov	r6, r0
   19eb0:	mov	ip, r0
   19eb4:	str	r3, [sp, #68]	; 0x44
   19eb8:	ldr	r0, [ip]
   19ebc:	add	ip, ip, #16
   19ec0:	ldr	r1, [ip, #-12]
   19ec4:	mov	lr, r5
   19ec8:	ldr	r2, [ip, #-8]
   19ecc:	add	r5, r5, #16
   19ed0:	ldr	r3, [ip, #-4]
   19ed4:	cmp	ip, r7
   19ed8:	stmia	lr!, {r0, r1, r2, r3}
   19edc:	bne	19eb8 <crc32@@Base+0x460>
   19ee0:	mov	r3, #0
   19ee4:	add	r1, sp, #4
   19ee8:	mov	r0, r3
   19eec:	mov	r2, #64	; 0x40
   19ef0:	str	r3, [sp, #8]
   19ef4:	bl	19a58 <crc32@@Base>
   19ef8:	ldr	r3, [r6, #4]
   19efc:	ldr	r1, [sp, #68]	; 0x44
   19f00:	rev	r3, r3
   19f04:	ldr	r2, [r4]
   19f08:	cmp	r1, r2
   19f0c:	sub	r0, r0, r3
   19f10:	clz	r0, r0
   19f14:	lsr	r0, r0, #5
   19f18:	bne	19f24 <crc32@@Base+0x4cc>
   19f1c:	add	sp, sp, #76	; 0x4c
   19f20:	pop	{r4, r5, r6, r7, pc}
   19f24:	bl	124b8 <__stack_chk_fail@plt>
   19f28:	ldr	r2, [r0, #12]
   19f2c:	add	r1, r0, #64	; 0x40
   19f30:	push	{r4, lr}
   19f34:	mov	r3, #65536	; 0x10000
   19f38:	mov	r4, r0
   19f3c:	rev	r2, r2
   19f40:	mov	r0, #0
   19f44:	bl	19a6c <crc32@@Base+0x14>
   19f48:	ldr	r3, [r4, #24]
   19f4c:	rev	r3, r3
   19f50:	sub	r0, r0, r3
   19f54:	clz	r0, r0
   19f58:	lsr	r0, r0, #5
   19f5c:	pop	{r4, pc}
   19f60:	ldr	r3, [r0, #64]	; 0x40
   19f64:	cmp	r3, #0
   19f68:	beq	19f88 <crc32@@Base+0x530>
   19f6c:	add	r3, r0, #68	; 0x44
   19f70:	mov	r0, #0
   19f74:	ldr	r2, [r3], #4
   19f78:	add	r0, r0, #1
   19f7c:	cmp	r2, #0
   19f80:	bne	19f74 <crc32@@Base+0x51c>
   19f84:	bx	lr
   19f88:	mov	r0, r3
   19f8c:	bx	lr
   19f90:	ldr	ip, [r0, #64]	; 0x40
   19f94:	cmp	ip, #0
   19f98:	beq	1a034 <crc32@@Base+0x5dc>
   19f9c:	push	{r4, r5, r6, r7, r8, lr}
   19fa0:	add	r7, r0, #68	; 0x44
   19fa4:	add	r8, r0, #64	; 0x40
   19fa8:	mov	r4, #0
   19fac:	mov	r5, r7
   19fb0:	b	19fb8 <crc32@@Base+0x560>
   19fb4:	mov	r4, r6
   19fb8:	ldr	lr, [r5], #4
   19fbc:	add	r6, r4, #1
   19fc0:	cmp	lr, #0
   19fc4:	bne	19fb4 <crc32@@Base+0x55c>
   19fc8:	cmp	r1, r6
   19fcc:	bcs	1a024 <crc32@@Base+0x5cc>
   19fd0:	ldr	r5, [r8, r1, lsl #2]
   19fd4:	add	r4, r4, #2
   19fd8:	cmp	r1, #0
   19fdc:	lsl	r1, r1, #2
   19fe0:	rev	r5, r5
   19fe4:	add	r4, r8, r4, lsl #2
   19fe8:	str	r5, [r3]
   19fec:	beq	1a01c <crc32@@Base+0x5c4>
   19ff0:	add	r1, r1, #64	; 0x40
   19ff4:	add	r0, r0, r1
   19ff8:	b	1a000 <crc32@@Base+0x5a8>
   19ffc:	ldr	ip, [r7], #4
   1a000:	rev	ip, ip
   1a004:	cmp	r7, r0
   1a008:	add	ip, ip, #3
   1a00c:	bic	ip, ip, #3
   1a010:	add	lr, lr, ip
   1a014:	bne	19ffc <crc32@@Base+0x5a4>
   1a018:	add	r4, r4, lr
   1a01c:	str	r4, [r2]
   1a020:	pop	{r4, r5, r6, r7, r8, pc}
   1a024:	mov	r1, #0
   1a028:	str	r1, [r3]
   1a02c:	str	r1, [r2]
   1a030:	pop	{r4, r5, r6, r7, r8, pc}
   1a034:	mov	r1, #0
   1a038:	str	r1, [r3]
   1a03c:	str	r1, [r2]
   1a040:	bx	lr
   1a044:	mov	r2, r0
   1a048:	vldr	d5, [pc, #64]	; 1a090 <crc32@@Base+0x638>
   1a04c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a050:	sub	sp, sp, #28
   1a054:	vmov	s15, r2
   1a058:	movw	r1, #34932	; 0x8874
   1a05c:	vldr	d6, [pc, #52]	; 1a098 <crc32@@Base+0x640>
   1a060:	movt	r1, #3
   1a064:	str	r0, [sp, #20]
   1a068:	mov	r0, #1
   1a06c:	vcvt.f64.u32	d7, s15
   1a070:	vmul.f64	d6, d7, d6
   1a074:	vmul.f64	d7, d7, d5
   1a078:	vstr	d6, [sp, #8]
   1a07c:	vstr	d7, [sp]
   1a080:	bl	12794 <__printf_chk@plt>
   1a084:	add	sp, sp, #28
   1a088:	pop	{pc}		; (ldr pc, [sp], #4)
   1a08c:	nop	{0}
   1a090:	andeq	r0, r0, r0
   1a094:	svccc	0x00500000
   1a098:	andeq	r0, r0, r0
   1a09c:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   1a0a0:	push	{lr}		; (str lr, [sp, #-4]!)
   1a0a4:	sub	sp, sp, #12
   1a0a8:	add	r3, sp, #8
   1a0ac:	str	r0, [r3, #-4]!
   1a0b0:	mov	r0, r3
   1a0b4:	bl	123b0 <ctime@plt>
   1a0b8:	movw	r1, #56260	; 0xdbc4
   1a0bc:	movt	r1, #3
   1a0c0:	mov	r2, r0
   1a0c4:	mov	r0, #1
   1a0c8:	bl	12794 <__printf_chk@plt>
   1a0cc:	add	sp, sp, #12
   1a0d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a0d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a0d8:	movw	r5, #61168	; 0xeef0
   1a0dc:	movt	r5, #4
   1a0e0:	sub	sp, sp, #24
   1a0e4:	mov	r4, r0
   1a0e8:	add	r3, r0, #32
   1a0ec:	ldr	ip, [r5]
   1a0f0:	movw	r2, #46860	; 0xb70c
   1a0f4:	str	r3, [sp]
   1a0f8:	movt	r2, #3
   1a0fc:	mov	r3, #32
   1a100:	movw	r1, #35100	; 0x891c
   1a104:	mov	r0, #1
   1a108:	movt	r1, #3
   1a10c:	str	ip, [sp, #20]
   1a110:	bl	12794 <__printf_chk@plt>
   1a114:	movw	r2, #46860	; 0xb70c
   1a118:	movw	r1, #35124	; 0x8934
   1a11c:	movt	r2, #3
   1a120:	movt	r1, #3
   1a124:	mov	r0, #1
   1a128:	bl	12794 <__printf_chk@plt>
   1a12c:	ldr	r0, [r4, #8]
   1a130:	rev	r0, r0
   1a134:	bl	1a0a0 <crc32@@Base+0x648>
   1a138:	movw	r2, #46860	; 0xb70c
   1a13c:	movw	r1, #35144	; 0x8948
   1a140:	movt	r2, #3
   1a144:	movt	r1, #3
   1a148:	mov	r0, #1
   1a14c:	bl	12794 <__printf_chk@plt>
   1a150:	ldrb	r0, [r4, #28]
   1a154:	cmp	r0, #0
   1a158:	beq	1a478 <crc32@@Base+0xa20>
   1a15c:	movw	r1, #33696	; 0x83a0
   1a160:	mov	r3, #25
   1a164:	movt	r1, #3
   1a168:	b	1a17c <crc32@@Base+0x724>
   1a16c:	cmp	r3, r0
   1a170:	beq	1a420 <crc32@@Base+0x9c8>
   1a174:	ldr	r3, [r2, #12]
   1a178:	mov	r1, r2
   1a17c:	cmp	r3, #0
   1a180:	add	r2, r1, #12
   1a184:	bge	1a16c <crc32@@Base+0x714>
   1a188:	movw	r3, #34964	; 0x8894
   1a18c:	movt	r3, #3
   1a190:	ldrb	ip, [r4, #29]
   1a194:	cmp	ip, #0
   1a198:	beq	1a46c <crc32@@Base+0xa14>
   1a19c:	mov	r2, #1
   1a1a0:	ldr	r0, [pc, #736]	; 1a488 <crc32@@Base+0xa30>
   1a1a4:	b	1a1b8 <crc32@@Base+0x760>
   1a1a8:	cmp	r2, ip
   1a1ac:	beq	1a428 <crc32@@Base+0x9d0>
   1a1b0:	ldr	r2, [r1, #12]
   1a1b4:	mov	r0, r1
   1a1b8:	cmp	r2, #0
   1a1bc:	add	r1, r0, #12
   1a1c0:	bge	1a1a8 <crc32@@Base+0x750>
   1a1c4:	movw	r2, #34976	; 0x88a0
   1a1c8:	movt	r2, #3
   1a1cc:	ldrb	lr, [r4, #30]
   1a1d0:	cmp	lr, #13
   1a1d4:	beq	1a460 <crc32@@Base+0xa08>
   1a1d8:	mov	r1, #7
   1a1dc:	ldr	ip, [pc, #680]	; 1a48c <crc32@@Base+0xa34>
   1a1e0:	b	1a1f4 <crc32@@Base+0x79c>
   1a1e4:	cmp	lr, r1
   1a1e8:	beq	1a430 <crc32@@Base+0x9d8>
   1a1ec:	ldr	r1, [r0, #12]
   1a1f0:	mov	ip, r0
   1a1f4:	cmp	r1, #0
   1a1f8:	add	r0, ip, #12
   1a1fc:	bge	1a1e4 <crc32@@Base+0x78c>
   1a200:	movw	r6, #35000	; 0x88b8
   1a204:	movt	r6, #3
   1a208:	ldrb	lr, [r4, #31]
   1a20c:	cmp	lr, #0
   1a210:	beq	1a454 <crc32@@Base+0x9fc>
   1a214:	mov	r1, #2
   1a218:	ldr	ip, [pc, #624]	; 1a490 <crc32@@Base+0xa38>
   1a21c:	b	1a230 <crc32@@Base+0x7d8>
   1a220:	cmp	lr, r1
   1a224:	beq	1a418 <crc32@@Base+0x9c0>
   1a228:	ldr	r1, [r0, #12]
   1a22c:	mov	ip, r0
   1a230:	cmp	r1, #0
   1a234:	add	r0, ip, #12
   1a238:	bge	1a220 <crc32@@Base+0x7c8>
   1a23c:	movw	r1, #35016	; 0x88c8
   1a240:	movt	r1, #3
   1a244:	str	r1, [sp, #4]
   1a248:	mov	r0, #1
   1a24c:	str	r6, [sp]
   1a250:	movw	r1, #35164	; 0x895c
   1a254:	movt	r1, #3
   1a258:	bl	12794 <__printf_chk@plt>
   1a25c:	movw	r2, #46860	; 0xb70c
   1a260:	movw	r1, #35180	; 0x896c
   1a264:	movt	r2, #3
   1a268:	movt	r1, #3
   1a26c:	mov	r0, #1
   1a270:	bl	12794 <__printf_chk@plt>
   1a274:	ldr	r0, [r4, #12]
   1a278:	rev	r0, r0
   1a27c:	bl	1a044 <crc32@@Base+0x5ec>
   1a280:	ldr	r3, [r4, #16]
   1a284:	movw	r2, #46860	; 0xb70c
   1a288:	movw	r1, #35200	; 0x8980
   1a28c:	rev	r3, r3
   1a290:	movt	r2, #3
   1a294:	movt	r1, #3
   1a298:	mov	r0, #1
   1a29c:	bl	12794 <__printf_chk@plt>
   1a2a0:	ldr	r3, [r4, #20]
   1a2a4:	movw	r2, #46860	; 0xb70c
   1a2a8:	movw	r1, #35224	; 0x8998
   1a2ac:	rev	r3, r3
   1a2b0:	movt	r2, #3
   1a2b4:	movt	r1, #3
   1a2b8:	mov	r0, #1
   1a2bc:	bl	12794 <__printf_chk@plt>
   1a2c0:	ldrb	r3, [r4, #30]
   1a2c4:	and	r2, r3, #253	; 0xfd
   1a2c8:	cmp	r2, #4
   1a2cc:	bne	1a3e0 <crc32@@Base+0x988>
   1a2d0:	ldr	r3, [r4, #64]	; 0x40
   1a2d4:	cmp	r3, #0
   1a2d8:	beq	1a438 <crc32@@Base+0x9e0>
   1a2dc:	add	r3, r4, #68	; 0x44
   1a2e0:	mov	r7, #0
   1a2e4:	ldr	r8, [r3], #4
   1a2e8:	add	r7, r7, #1
   1a2ec:	cmp	r8, #0
   1a2f0:	bne	1a2e4 <crc32@@Base+0x88c>
   1a2f4:	movw	r2, #46860	; 0xb70c
   1a2f8:	movw	r1, #35248	; 0x89b0
   1a2fc:	movt	r2, #3
   1a300:	movt	r1, #3
   1a304:	mov	r0, #1
   1a308:	mov	r6, r8
   1a30c:	bl	12794 <__printf_chk@plt>
   1a310:	mov	r1, r8
   1a314:	add	r3, sp, #16
   1a318:	add	r2, sp, #12
   1a31c:	mov	r0, r4
   1a320:	movw	r9, #35264	; 0x89c0
   1a324:	bl	19f90 <crc32@@Base+0x538>
   1a328:	mov	r3, r8
   1a32c:	movw	r2, #46860	; 0xb70c
   1a330:	movw	r1, #35264	; 0x89c0
   1a334:	movt	r2, #3
   1a338:	movt	r1, #3
   1a33c:	mov	r0, #1
   1a340:	movw	r8, #46860	; 0xb70c
   1a344:	bl	12794 <__printf_chk@plt>
   1a348:	ldr	r0, [sp, #16]
   1a34c:	bl	1a044 <crc32@@Base+0x5ec>
   1a350:	movw	sl, #35280	; 0x89d0
   1a354:	movt	r8, #3
   1a358:	movt	r9, #3
   1a35c:	movt	sl, #3
   1a360:	add	r6, r6, #1
   1a364:	cmp	r7, r6
   1a368:	beq	1a3c8 <crc32@@Base+0x970>
   1a36c:	add	r3, sp, #16
   1a370:	add	r2, sp, #12
   1a374:	mov	r1, r6
   1a378:	mov	r0, r4
   1a37c:	bl	19f90 <crc32@@Base+0x538>
   1a380:	mov	r3, r6
   1a384:	mov	r2, r8
   1a388:	mov	r1, r9
   1a38c:	mov	r0, #1
   1a390:	bl	12794 <__printf_chk@plt>
   1a394:	ldr	r0, [sp, #16]
   1a398:	bl	1a044 <crc32@@Base+0x5ec>
   1a39c:	ldrb	r3, [r4, #30]
   1a3a0:	cmp	r3, #6
   1a3a4:	bne	1a360 <crc32@@Base+0x908>
   1a3a8:	ldr	r3, [sp, #12]
   1a3ac:	mov	r2, r8
   1a3b0:	mov	r1, sl
   1a3b4:	mov	r0, #1
   1a3b8:	add	r6, r6, #1
   1a3bc:	bl	12794 <__printf_chk@plt>
   1a3c0:	cmp	r7, r6
   1a3c4:	bne	1a36c <crc32@@Base+0x914>
   1a3c8:	ldr	r2, [sp, #20]
   1a3cc:	ldr	r3, [r5]
   1a3d0:	cmp	r2, r3
   1a3d4:	bne	1a484 <crc32@@Base+0xa2c>
   1a3d8:	add	sp, sp, #24
   1a3dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a3e0:	cmp	r3, #32
   1a3e4:	bne	1a3c8 <crc32@@Base+0x970>
   1a3e8:	ldr	r3, [r4, #12]
   1a3ec:	movw	r1, #35304	; 0x89e8
   1a3f0:	ldr	r2, [r4, #16]
   1a3f4:	movt	r1, #3
   1a3f8:	rev	r3, r3
   1a3fc:	mov	r0, #1
   1a400:	sub	r3, r3, #8064	; 0x1f80
   1a404:	rev	r2, r2
   1a408:	sub	r3, r3, #32
   1a40c:	sub	r2, r2, #64	; 0x40
   1a410:	bl	12794 <__printf_chk@plt>
   1a414:	b	1a3c8 <crc32@@Base+0x970>
   1a418:	ldr	r1, [ip, #20]
   1a41c:	b	1a244 <crc32@@Base+0x7ec>
   1a420:	ldr	r3, [r1, #20]
   1a424:	b	1a190 <crc32@@Base+0x738>
   1a428:	ldr	r2, [r0, #20]
   1a42c:	b	1a1cc <crc32@@Base+0x774>
   1a430:	ldr	r6, [ip, #20]
   1a434:	b	1a208 <crc32@@Base+0x7b0>
   1a438:	movw	r2, #46860	; 0xb70c
   1a43c:	movw	r1, #35248	; 0x89b0
   1a440:	movt	r2, #3
   1a444:	movt	r1, #3
   1a448:	mov	r0, #1
   1a44c:	bl	12794 <__printf_chk@plt>
   1a450:	b	1a3c8 <crc32@@Base+0x970>
   1a454:	movw	r1, #35084	; 0x890c
   1a458:	movt	r1, #3
   1a45c:	b	1a244 <crc32@@Base+0x7ec>
   1a460:	movw	r6, #35064	; 0x88f8
   1a464:	movt	r6, #3
   1a468:	b	1a208 <crc32@@Base+0x7b0>
   1a46c:	movw	r2, #35048	; 0x88e8
   1a470:	movt	r2, #3
   1a474:	b	1a1cc <crc32@@Base+0x774>
   1a478:	movw	r3, #35036	; 0x88dc
   1a47c:	movt	r3, #3
   1a480:	b	1a190 <crc32@@Base+0x738>
   1a484:	bl	124b8 <__stack_chk_fail@plt>
   1a488:	ldrdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   1a48c:	andeq	r8, r3, ip, lsl r6
   1a490:	strdeq	r8, [r3], -r0
   1a494:	ldr	r3, [r0]
   1a498:	cmp	r3, #0
   1a49c:	blt	1a4c0 <crc32@@Base+0xa68>
   1a4a0:	cmp	r1, r3
   1a4a4:	bne	1a4b4 <crc32@@Base+0xa5c>
   1a4a8:	bx	lr
   1a4ac:	cmp	r3, r1
   1a4b0:	bxeq	lr
   1a4b4:	ldr	r3, [r0, #12]!
   1a4b8:	cmp	r3, #0
   1a4bc:	bge	1a4ac <crc32@@Base+0xa54>
   1a4c0:	mov	r0, #0
   1a4c4:	bx	lr
   1a4c8:	push	{r4, r5, r6, lr}
   1a4cc:	movw	lr, #33696	; 0x83a0
   1a4d0:	movt	lr, #3
   1a4d4:	mov	r3, #12
   1a4d8:	mla	r3, r3, r0, lr
   1a4dc:	ldr	r2, [r3, #1196]	; 0x4ac
   1a4e0:	ldr	r3, [r2]
   1a4e4:	cmp	r3, #0
   1a4e8:	bge	1a4fc <crc32@@Base+0xaa4>
   1a4ec:	b	1a50c <crc32@@Base+0xab4>
   1a4f0:	ldr	r3, [r2, #12]!
   1a4f4:	cmp	r3, #0
   1a4f8:	blt	1a50c <crc32@@Base+0xab4>
   1a4fc:	cmp	r1, r3
   1a500:	bne	1a4f0 <crc32@@Base+0xa98>
   1a504:	ldr	r0, [r2, #8]
   1a508:	pop	{r4, r5, r6, pc}
   1a50c:	movw	r3, #35344	; 0x8a10
   1a510:	movt	r3, #3
   1a514:	mov	ip, r0
   1a518:	mov	r5, #12
   1a51c:	ldm	r3, {r0, r1, r2}
   1a520:	movw	r4, #36	; 0x24
   1a524:	mla	ip, r5, ip, lr
   1a528:	movt	r4, #5
   1a52c:	mov	r3, #30
   1a530:	stmia	r4!, {r0, r1}
   1a534:	mov	r0, r4
   1a538:	strb	r2, [r0], #-8
   1a53c:	mov	r2, #21
   1a540:	ldr	r1, [ip, #1188]	; 0x4a4
   1a544:	bl	12428 <__strncat_chk@plt>
   1a548:	sub	r0, r4, #8
   1a54c:	pop	{r4, r5, r6, pc}
   1a550:	push	{r4, r5, r6, lr}
   1a554:	movw	lr, #33696	; 0x83a0
   1a558:	movt	lr, #3
   1a55c:	mov	r3, #12
   1a560:	mla	r3, r3, r0, lr
   1a564:	ldr	r2, [r3, #1196]	; 0x4ac
   1a568:	ldr	r3, [r2]
   1a56c:	cmp	r3, #0
   1a570:	bge	1a584 <crc32@@Base+0xb2c>
   1a574:	b	1a594 <crc32@@Base+0xb3c>
   1a578:	ldr	r3, [r2, #12]!
   1a57c:	cmp	r3, #0
   1a580:	blt	1a594 <crc32@@Base+0xb3c>
   1a584:	cmp	r1, r3
   1a588:	bne	1a578 <crc32@@Base+0xb20>
   1a58c:	ldr	r0, [r2, #4]
   1a590:	pop	{r4, r5, r6, pc}
   1a594:	movw	r3, #35344	; 0x8a10
   1a598:	movt	r3, #3
   1a59c:	mov	ip, r0
   1a5a0:	mov	r5, #12
   1a5a4:	ldm	r3, {r0, r1, r2}
   1a5a8:	movw	r4, #36	; 0x24
   1a5ac:	mla	ip, r5, ip, lr
   1a5b0:	movt	r4, #5
   1a5b4:	mov	r3, #30
   1a5b8:	stmia	r4!, {r0, r1}
   1a5bc:	mov	r0, r4
   1a5c0:	strb	r2, [r0], #-8
   1a5c4:	mov	r2, #21
   1a5c8:	ldr	r1, [ip, #1188]	; 0x4a4
   1a5cc:	bl	12428 <__strncat_chk@plt>
   1a5d0:	sub	r0, r4, #8
   1a5d4:	pop	{r4, r5, r6, pc}
   1a5d8:	movw	r2, #33696	; 0x83a0
   1a5dc:	movt	r2, #3
   1a5e0:	mov	r3, #12
   1a5e4:	mla	r0, r3, r0, r2
   1a5e8:	ldr	r0, [r0, #1192]	; 0x4a8
   1a5ec:	bx	lr
   1a5f0:	movw	r2, #33696	; 0x83a0
   1a5f4:	movt	r2, #3
   1a5f8:	mov	r3, #12
   1a5fc:	mla	r0, r3, r0, r2
   1a600:	ldr	r0, [r0, #1188]	; 0x4a4
   1a604:	bx	lr
   1a608:	ldr	r3, [r0]
   1a60c:	cmp	r3, #0
   1a610:	bge	1a624 <crc32@@Base+0xbcc>
   1a614:	b	1a630 <crc32@@Base+0xbd8>
   1a618:	ldr	r3, [r0, #12]!
   1a61c:	cmp	r3, #0
   1a620:	blt	1a630 <crc32@@Base+0xbd8>
   1a624:	cmp	r2, r3
   1a628:	bne	1a618 <crc32@@Base+0xbc0>
   1a62c:	ldr	r1, [r0, #8]
   1a630:	mov	r0, r1
   1a634:	bx	lr
   1a638:	cmp	r0, #0
   1a63c:	beq	1a680 <crc32@@Base+0xc28>
   1a640:	movw	r1, #33696	; 0x83a0
   1a644:	mov	r3, #25
   1a648:	movt	r1, #3
   1a64c:	b	1a660 <crc32@@Base+0xc08>
   1a650:	cmp	r0, r3
   1a654:	beq	1a678 <crc32@@Base+0xc20>
   1a658:	ldr	r3, [r2, #12]
   1a65c:	mov	r1, r2
   1a660:	cmp	r3, #0
   1a664:	add	r2, r1, #12
   1a668:	bge	1a650 <crc32@@Base+0xbf8>
   1a66c:	movw	r0, #34964	; 0x8894
   1a670:	movt	r0, #3
   1a674:	bx	lr
   1a678:	ldr	r0, [r1, #20]
   1a67c:	bx	lr
   1a680:	movw	r0, #35036	; 0x88dc
   1a684:	movt	r0, #3
   1a688:	bx	lr
   1a68c:	cmp	r0, #0
   1a690:	beq	1a6d0 <crc32@@Base+0xc78>
   1a694:	mov	r3, #1
   1a698:	ldr	r1, [pc, #60]	; 1a6dc <crc32@@Base+0xc84>
   1a69c:	b	1a6b0 <crc32@@Base+0xc58>
   1a6a0:	cmp	r0, r3
   1a6a4:	beq	1a6c8 <crc32@@Base+0xc70>
   1a6a8:	ldr	r3, [r2, #12]
   1a6ac:	mov	r1, r2
   1a6b0:	cmp	r3, #0
   1a6b4:	add	r2, r1, #12
   1a6b8:	bge	1a6a0 <crc32@@Base+0xc48>
   1a6bc:	movw	r0, #34976	; 0x88a0
   1a6c0:	movt	r0, #3
   1a6c4:	bx	lr
   1a6c8:	ldr	r0, [r1, #20]
   1a6cc:	bx	lr
   1a6d0:	movw	r0, #35048	; 0x88e8
   1a6d4:	movt	r0, #3
   1a6d8:	bx	lr
   1a6dc:	ldrdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   1a6e0:	cmp	r0, #13
   1a6e4:	beq	1a724 <crc32@@Base+0xccc>
   1a6e8:	mov	r3, #7
   1a6ec:	ldr	r1, [pc, #60]	; 1a730 <crc32@@Base+0xcd8>
   1a6f0:	b	1a704 <crc32@@Base+0xcac>
   1a6f4:	cmp	r0, r3
   1a6f8:	beq	1a71c <crc32@@Base+0xcc4>
   1a6fc:	ldr	r3, [r2, #12]
   1a700:	mov	r1, r2
   1a704:	cmp	r3, #0
   1a708:	add	r2, r1, #12
   1a70c:	bge	1a6f4 <crc32@@Base+0xc9c>
   1a710:	movw	r0, #35000	; 0x88b8
   1a714:	movt	r0, #3
   1a718:	bx	lr
   1a71c:	ldr	r0, [r1, #20]
   1a720:	bx	lr
   1a724:	movw	r0, #35064	; 0x88f8
   1a728:	movt	r0, #3
   1a72c:	bx	lr
   1a730:	andeq	r8, r3, ip, lsl r6
   1a734:	cmp	r0, #13
   1a738:	beq	1a778 <crc32@@Base+0xd20>
   1a73c:	mov	r3, #7
   1a740:	ldr	r1, [pc, #60]	; 1a784 <crc32@@Base+0xd2c>
   1a744:	b	1a758 <crc32@@Base+0xd00>
   1a748:	cmp	r0, r3
   1a74c:	beq	1a770 <crc32@@Base+0xd18>
   1a750:	ldr	r3, [r2, #12]
   1a754:	mov	r1, r2
   1a758:	cmp	r3, #0
   1a75c:	add	r2, r1, #12
   1a760:	bge	1a748 <crc32@@Base+0xcf0>
   1a764:	movw	r0, #31496	; 0x7b08
   1a768:	movt	r0, #3
   1a76c:	bx	lr
   1a770:	ldr	r0, [r1, #16]
   1a774:	bx	lr
   1a778:	movw	r0, #35356	; 0x8a1c
   1a77c:	movt	r0, #3
   1a780:	bx	lr
   1a784:	andeq	r8, r3, ip, lsl r6
   1a788:	cmp	r0, #0
   1a78c:	beq	1a7cc <crc32@@Base+0xd74>
   1a790:	mov	r3, #2
   1a794:	ldr	r1, [pc, #60]	; 1a7d8 <crc32@@Base+0xd80>
   1a798:	b	1a7ac <crc32@@Base+0xd54>
   1a79c:	cmp	r0, r3
   1a7a0:	beq	1a7c4 <crc32@@Base+0xd6c>
   1a7a4:	ldr	r3, [r2, #12]
   1a7a8:	mov	r1, r2
   1a7ac:	cmp	r3, #0
   1a7b0:	add	r2, r1, #12
   1a7b4:	bge	1a79c <crc32@@Base+0xd44>
   1a7b8:	movw	r0, #35016	; 0x88c8
   1a7bc:	movt	r0, #3
   1a7c0:	bx	lr
   1a7c4:	ldr	r0, [r1, #20]
   1a7c8:	bx	lr
   1a7cc:	movw	r0, #35084	; 0x890c
   1a7d0:	movt	r0, #3
   1a7d4:	bx	lr
   1a7d8:	strdeq	r8, [r3], -r0
   1a7dc:	cmp	r0, #0
   1a7e0:	beq	1a820 <crc32@@Base+0xdc8>
   1a7e4:	mov	r3, #2
   1a7e8:	ldr	r1, [pc, #60]	; 1a82c <crc32@@Base+0xdd4>
   1a7ec:	b	1a800 <crc32@@Base+0xda8>
   1a7f0:	cmp	r0, r3
   1a7f4:	beq	1a818 <crc32@@Base+0xdc0>
   1a7f8:	ldr	r3, [r2, #12]
   1a7fc:	mov	r1, r2
   1a800:	cmp	r3, #0
   1a804:	add	r2, r1, #12
   1a808:	bge	1a7f0 <crc32@@Base+0xd98>
   1a80c:	movw	r0, #31496	; 0x7b08
   1a810:	movt	r0, #3
   1a814:	bx	lr
   1a818:	ldr	r0, [r1, #16]
   1a81c:	bx	lr
   1a820:	movw	r0, #35368	; 0x8a28
   1a824:	movt	r0, #3
   1a828:	bx	lr
   1a82c:	strdeq	r8, [r3], -r0
   1a830:	cmp	r0, #0
   1a834:	beq	1a878 <crc32@@Base+0xe20>
   1a838:	movw	r1, #33696	; 0x83a0
   1a83c:	mov	r3, #25
   1a840:	movt	r1, #3
   1a844:	b	1a858 <crc32@@Base+0xe00>
   1a848:	cmp	r0, r3
   1a84c:	beq	1a870 <crc32@@Base+0xe18>
   1a850:	ldr	r3, [r2, #12]
   1a854:	mov	r1, r2
   1a858:	cmp	r3, #0
   1a85c:	add	r2, r1, #12
   1a860:	bge	1a848 <crc32@@Base+0xdf0>
   1a864:	movw	r0, #31496	; 0x7b08
   1a868:	movt	r0, #3
   1a86c:	bx	lr
   1a870:	ldr	r0, [r1, #16]
   1a874:	bx	lr
   1a878:	movw	r0, #35376	; 0x8a30
   1a87c:	movt	r0, #3
   1a880:	bx	lr
   1a884:	cmp	r0, #0
   1a888:	beq	1a8c8 <crc32@@Base+0xe70>
   1a88c:	mov	r3, #1
   1a890:	ldr	r1, [pc, #60]	; 1a8d4 <crc32@@Base+0xe7c>
   1a894:	b	1a8a8 <crc32@@Base+0xe50>
   1a898:	cmp	r0, r3
   1a89c:	beq	1a8c0 <crc32@@Base+0xe68>
   1a8a0:	ldr	r3, [r2, #12]
   1a8a4:	mov	r1, r2
   1a8a8:	cmp	r3, #0
   1a8ac:	add	r2, r1, #12
   1a8b0:	bge	1a898 <crc32@@Base+0xe40>
   1a8b4:	movw	r0, #31496	; 0x7b08
   1a8b8:	movt	r0, #3
   1a8bc:	bx	lr
   1a8c0:	ldr	r0, [r1, #16]
   1a8c4:	bx	lr
   1a8c8:	movw	r0, #35376	; 0x8a30
   1a8cc:	movt	r0, #3
   1a8d0:	bx	lr
   1a8d4:	ldrdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   1a8d8:	push	{r4, r5, r6, lr}
   1a8dc:	ldr	r5, [r0]
   1a8e0:	cmp	r5, #0
   1a8e4:	blt	1a918 <crc32@@Base+0xec0>
   1a8e8:	mov	r6, r2
   1a8ec:	mov	r4, r0
   1a8f0:	ldr	r0, [r4, #4]
   1a8f4:	mov	r1, r6
   1a8f8:	cmp	r0, #0
   1a8fc:	beq	1a90c <crc32@@Base+0xeb4>
   1a900:	bl	12104 <strcasecmp@plt>
   1a904:	cmp	r0, #0
   1a908:	beq	1a91c <crc32@@Base+0xec4>
   1a90c:	ldr	r5, [r4, #12]!
   1a910:	cmp	r5, #0
   1a914:	bge	1a8f0 <crc32@@Base+0xe98>
   1a918:	mvn	r5, #0
   1a91c:	mov	r0, r5
   1a920:	pop	{r4, r5, r6, pc}
   1a924:	mov	r2, r0
   1a928:	movw	r1, #35044	; 0x88e4
   1a92c:	movw	r0, #33696	; 0x83a0
   1a930:	movt	r1, #3
   1a934:	movt	r0, #3
   1a938:	b	1a8d8 <crc32@@Base+0xe80>
   1a93c:	mov	r2, r0
   1a940:	movw	r1, #35384	; 0x8a38
   1a944:	ldr	r0, [pc, #4]	; 1a950 <crc32@@Base+0xef8>
   1a948:	movt	r1, #3
   1a94c:	b	1a8d8 <crc32@@Base+0xe80>
   1a950:	ldrdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   1a954:	mov	r2, r0
   1a958:	movw	r1, #35636	; 0x8b34
   1a95c:	ldr	r0, [pc, #4]	; 1a968 <crc32@@Base+0xf10>
   1a960:	movt	r1, #3
   1a964:	b	1a8d8 <crc32@@Base+0xe80>
   1a968:	andeq	r8, r3, ip, lsl r6
   1a96c:	mov	r2, r0
   1a970:	movw	r1, #35024	; 0x88d0
   1a974:	ldr	r0, [pc, #4]	; 1a980 <crc32@@Base+0xf28>
   1a978:	movt	r1, #3
   1a97c:	b	1a8d8 <crc32@@Base+0xe80>
   1a980:	strdeq	r8, [r3], -r0
   1a984:	push	{r4, r5, r6, r7, r8, lr}
   1a988:	movw	r4, #65084	; 0xfe3c
   1a98c:	movw	r7, #65184	; 0xfea0
   1a990:	movt	r4, #4
   1a994:	movt	r7, #4
   1a998:	cmp	r4, r7
   1a99c:	beq	1a9e0 <crc32@@Base+0xf88>
   1a9a0:	uxtb	r6, r0
   1a9a4:	b	1a9b0 <crc32@@Base+0xf58>
   1a9a8:	cmp	r4, r7
   1a9ac:	beq	1a9e0 <crc32@@Base+0xf88>
   1a9b0:	ldr	r3, [r4]
   1a9b4:	mov	r5, r4
   1a9b8:	mov	r0, r6
   1a9bc:	add	r4, r4, #4
   1a9c0:	ldr	r3, [r3, #32]
   1a9c4:	cmp	r3, #0
   1a9c8:	beq	1a9a8 <crc32@@Base+0xf50>
   1a9cc:	blx	r3
   1a9d0:	cmp	r0, #0
   1a9d4:	bne	1a9a8 <crc32@@Base+0xf50>
   1a9d8:	ldr	r0, [r5]
   1a9dc:	pop	{r4, r5, r6, r7, r8, pc}
   1a9e0:	mov	r0, #0
   1a9e4:	pop	{r4, r5, r6, r7, r8, pc}
   1a9e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a9ec:	movw	r4, #65084	; 0xfe3c
   1a9f0:	movw	r7, #65184	; 0xfea0
   1a9f4:	movt	r4, #4
   1a9f8:	movt	r7, #4
   1a9fc:	sub	sp, sp, #12
   1aa00:	cmp	r4, r7
   1aa04:	beq	1aa84 <crc32@@Base+0x102c>
   1aa08:	mov	r8, r3
   1aa0c:	mov	sl, r1
   1aa10:	mov	r9, r0
   1aa14:	mvn	fp, #0
   1aa18:	b	1aa24 <crc32@@Base+0xfcc>
   1aa1c:	cmp	r4, r7
   1aa20:	beq	1aa78 <crc32@@Base+0x1020>
   1aa24:	mov	r6, r4
   1aa28:	mov	r2, r8
   1aa2c:	ldr	r3, [r6]
   1aa30:	mov	r0, r9
   1aa34:	add	r4, r4, #4
   1aa38:	ldr	r5, [r3, #16]
   1aa3c:	cmp	r5, #0
   1aa40:	beq	1aa1c <crc32@@Base+0xfc4>
   1aa44:	ldr	r1, [sl, #44]	; 0x2c
   1aa48:	blx	r5
   1aa4c:	subs	fp, r0, #0
   1aa50:	bne	1aa1c <crc32@@Base+0xfc4>
   1aa54:	ldr	r1, [r6]
   1aa58:	ldr	r3, [r1, #20]
   1aa5c:	cmp	r3, #0
   1aa60:	beq	1aa8c <crc32@@Base+0x1034>
   1aa64:	ldrb	r2, [r8, #133]	; 0x85
   1aa68:	cmp	r2, #0
   1aa6c:	bne	1aa78 <crc32@@Base+0x1020>
   1aa70:	mov	r0, r9
   1aa74:	blx	r3
   1aa78:	mov	r0, fp
   1aa7c:	add	sp, sp, #12
   1aa80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa84:	mvn	fp, #0
   1aa88:	b	1aa78 <crc32@@Base+0x1020>
   1aa8c:	ldr	ip, [r1]
   1aa90:	movw	r0, #65196	; 0xfeac
   1aa94:	movt	r0, #4
   1aa98:	ldr	r3, [r8, #80]	; 0x50
   1aa9c:	movw	r2, #37596	; 0x92dc
   1aaa0:	mov	r1, #1
   1aaa4:	movt	r2, #3
   1aaa8:	ldr	r0, [r0]
   1aaac:	str	ip, [sp]
   1aab0:	bl	122d8 <__fprintf_chk@plt>
   1aab4:	b	1aa78 <crc32@@Base+0x1020>
   1aab8:	push	{r4, r5, r6, r7, lr}
   1aabc:	mov	r4, r2
   1aac0:	sub	sp, sp, #12
   1aac4:	mov	r2, r3
   1aac8:	mov	r5, r3
   1aacc:	ldr	r1, [r1, #44]	; 0x2c
   1aad0:	ldr	r3, [r4, #16]
   1aad4:	mov	r7, r0
   1aad8:	blx	r3
   1aadc:	subs	r6, r0, #0
   1aae0:	bne	1ab10 <crc32@@Base+0x10b8>
   1aae4:	ldr	r3, [r4, #20]
   1aae8:	cmp	r3, #0
   1aaec:	beq	1ab48 <crc32@@Base+0x10f0>
   1aaf0:	ldrb	r2, [r5, #133]	; 0x85
   1aaf4:	cmp	r2, #0
   1aaf8:	bne	1ab04 <crc32@@Base+0x10ac>
   1aafc:	mov	r0, r7
   1ab00:	blx	r3
   1ab04:	mov	r0, r6
   1ab08:	add	sp, sp, #12
   1ab0c:	pop	{r4, r5, r6, r7, pc}
   1ab10:	ldr	ip, [r4]
   1ab14:	movw	r1, #65196	; 0xfeac
   1ab18:	movt	r1, #4
   1ab1c:	ldr	r3, [r5, #80]	; 0x50
   1ab20:	movw	r2, #37632	; 0x9300
   1ab24:	movt	r2, #3
   1ab28:	ldr	r0, [r1]
   1ab2c:	mov	r1, #1
   1ab30:	str	r6, [sp, #4]
   1ab34:	str	ip, [sp]
   1ab38:	bl	122d8 <__fprintf_chk@plt>
   1ab3c:	mov	r0, r6
   1ab40:	add	sp, sp, #12
   1ab44:	pop	{r4, r5, r6, r7, pc}
   1ab48:	ldr	ip, [r4]
   1ab4c:	movw	r1, #65196	; 0xfeac
   1ab50:	movt	r1, #4
   1ab54:	ldr	r3, [r5, #80]	; 0x50
   1ab58:	movw	r2, #37596	; 0x92dc
   1ab5c:	movt	r2, #3
   1ab60:	ldr	r0, [r1]
   1ab64:	mov	r1, #1
   1ab68:	str	ip, [sp]
   1ab6c:	bl	122d8 <__fprintf_chk@plt>
   1ab70:	mov	r0, r6
   1ab74:	add	sp, sp, #12
   1ab78:	pop	{r4, r5, r6, r7, pc}
   1ab7c:	push	{r4, r5, r6, r7, lr}
   1ab80:	mov	r6, r1
   1ab84:	sub	sp, sp, #12
   1ab88:	mov	r4, r2
   1ab8c:	movw	r1, #578	; 0x242
   1ab90:	mov	r2, #384	; 0x180
   1ab94:	mov	r7, r0
   1ab98:	bl	12458 <open@plt>
   1ab9c:	subs	r5, r0, #0
   1aba0:	blt	1ac10 <crc32@@Base+0x11b8>
   1aba4:	mov	r1, r6
   1aba8:	mov	r2, r4
   1abac:	bl	1262c <write@plt>
   1abb0:	cmp	r4, r0
   1abb4:	bne	1abcc <crc32@@Base+0x1174>
   1abb8:	mov	r0, r5
   1abbc:	bl	12338 <close@plt>
   1abc0:	mov	r0, #0
   1abc4:	add	sp, sp, #12
   1abc8:	pop	{r4, r5, r6, r7, pc}
   1abcc:	movw	r3, #65196	; 0xfeac
   1abd0:	movt	r3, #4
   1abd4:	ldr	r4, [r3]
   1abd8:	bl	126b0 <__errno_location@plt>
   1abdc:	ldr	r0, [r0]
   1abe0:	bl	12224 <strerror@plt>
   1abe4:	mov	r3, r7
   1abe8:	mov	r1, #1
   1abec:	movw	r2, #37684	; 0x9334
   1abf0:	movt	r2, #3
   1abf4:	str	r0, [sp]
   1abf8:	mov	r0, r4
   1abfc:	bl	122d8 <__fprintf_chk@plt>
   1ac00:	mov	r0, r5
   1ac04:	bl	12338 <close@plt>
   1ac08:	mvn	r0, #0
   1ac0c:	b	1abc4 <crc32@@Base+0x116c>
   1ac10:	movw	r3, #65196	; 0xfeac
   1ac14:	movt	r3, #4
   1ac18:	ldr	r4, [r3]
   1ac1c:	bl	126b0 <__errno_location@plt>
   1ac20:	ldr	r0, [r0]
   1ac24:	bl	12224 <strerror@plt>
   1ac28:	mov	r3, r7
   1ac2c:	movw	r2, #57220	; 0xdf84
   1ac30:	mov	r1, #1
   1ac34:	movt	r2, #3
   1ac38:	str	r0, [sp]
   1ac3c:	mov	r0, r4
   1ac40:	bl	122d8 <__fprintf_chk@plt>
   1ac44:	mvn	r0, #0
   1ac48:	b	1abc4 <crc32@@Base+0x116c>
   1ac4c:	push	{r4, r5, r6, r7, r8, lr}
   1ac50:	movw	r4, #61168	; 0xeef0
   1ac54:	movt	r4, #4
   1ac58:	sub	sp, sp, #104	; 0x68
   1ac5c:	mov	r6, r1
   1ac60:	mov	r7, r0
   1ac64:	ldr	r3, [r4]
   1ac68:	mov	r0, r1
   1ac6c:	mov	r1, #0
   1ac70:	str	r3, [sp, #100]	; 0x64
   1ac74:	bl	12458 <open@plt>
   1ac78:	subs	r5, r0, #0
   1ac7c:	blt	1acbc <crc32@@Base+0x1264>
   1ac80:	add	r2, sp, #8
   1ac84:	mov	r1, r5
   1ac88:	mov	r0, #3
   1ac8c:	bl	12578 <__fxstat@plt>
   1ac90:	cmp	r0, #0
   1ac94:	blt	1ad00 <crc32@@Base+0x12a8>
   1ac98:	mov	r0, r5
   1ac9c:	bl	12338 <close@plt>
   1aca0:	ldr	r0, [sp, #52]	; 0x34
   1aca4:	ldr	r2, [sp, #100]	; 0x64
   1aca8:	ldr	r3, [r4]
   1acac:	cmp	r2, r3
   1acb0:	bne	1ad4c <crc32@@Base+0x12f4>
   1acb4:	add	sp, sp, #104	; 0x68
   1acb8:	pop	{r4, r5, r6, r7, r8, pc}
   1acbc:	movw	r2, #65196	; 0xfeac
   1acc0:	movt	r2, #4
   1acc4:	ldr	r7, [r7, #80]	; 0x50
   1acc8:	ldr	r5, [r2]
   1accc:	bl	126b0 <__errno_location@plt>
   1acd0:	ldr	r0, [r0]
   1acd4:	bl	12224 <strerror@plt>
   1acd8:	mov	r3, r7
   1acdc:	str	r6, [sp]
   1ace0:	movw	r2, #26168	; 0x6638
   1ace4:	mov	r1, #1
   1ace8:	movt	r2, #3
   1acec:	str	r0, [sp, #4]
   1acf0:	mov	r0, r5
   1acf4:	bl	122d8 <__fprintf_chk@plt>
   1acf8:	mvn	r0, #0
   1acfc:	b	1aca4 <crc32@@Base+0x124c>
   1ad00:	movw	r2, #65196	; 0xfeac
   1ad04:	movt	r2, #4
   1ad08:	ldr	r8, [r7, #80]	; 0x50
   1ad0c:	ldr	r7, [r2]
   1ad10:	bl	126b0 <__errno_location@plt>
   1ad14:	ldr	r0, [r0]
   1ad18:	bl	12224 <strerror@plt>
   1ad1c:	mov	r3, r8
   1ad20:	mov	r1, #1
   1ad24:	str	r6, [sp]
   1ad28:	movw	r2, #26192	; 0x6650
   1ad2c:	movt	r2, #3
   1ad30:	str	r0, [sp, #4]
   1ad34:	mov	r0, r7
   1ad38:	bl	122d8 <__fprintf_chk@plt>
   1ad3c:	mov	r0, r5
   1ad40:	bl	12338 <close@plt>
   1ad44:	mvn	r0, #0
   1ad48:	b	1aca4 <crc32@@Base+0x124c>
   1ad4c:	bl	124b8 <__stack_chk_fail@plt>
   1ad50:	push	{r4, r5, r6, lr}
   1ad54:	movw	r4, #61168	; 0xeef0
   1ad58:	movt	r4, #4
   1ad5c:	sub	sp, sp, #8
   1ad60:	mov	r6, r0
   1ad64:	movw	r0, #37712	; 0x9350
   1ad68:	ldr	r3, [r4]
   1ad6c:	movt	r0, #3
   1ad70:	mov	r5, r1
   1ad74:	str	r3, [sp, #4]
   1ad78:	bl	12740 <getenv@plt>
   1ad7c:	cmp	r0, #0
   1ad80:	moveq	r0, r5
   1ad84:	beq	1adb0 <crc32@@Base+0x1358>
   1ad88:	mov	r2, #10
   1ad8c:	mov	r1, #0
   1ad90:	bl	12140 <strtol@plt>
   1ad94:	add	r3, sp, #8
   1ad98:	str	r0, [r3, #-8]!
   1ad9c:	mov	r0, r3
   1ada0:	bl	12344 <gmtime@plt>
   1ada4:	subs	r5, r0, #0
   1ada8:	beq	1adc8 <crc32@@Base+0x1370>
   1adac:	ldr	r0, [sp]
   1adb0:	ldr	r2, [sp, #4]
   1adb4:	ldr	r3, [r4]
   1adb8:	cmp	r2, r3
   1adbc:	bne	1adf0 <crc32@@Base+0x1398>
   1adc0:	add	sp, sp, #8
   1adc4:	pop	{r4, r5, r6, pc}
   1adc8:	movw	r1, #65196	; 0xfeac
   1adcc:	movt	r1, #4
   1add0:	mov	r3, r6
   1add4:	movw	r2, #37732	; 0x9364
   1add8:	ldr	r0, [r1]
   1addc:	movt	r2, #3
   1ade0:	mov	r1, #1
   1ade4:	bl	122d8 <__fprintf_chk@plt>
   1ade8:	mov	r0, r5
   1adec:	b	1adb0 <crc32@@Base+0x1358>
   1adf0:	bl	124b8 <__stack_chk_fail@plt>
   1adf4:	movw	ip, #68	; 0x44
   1adf8:	movt	ip, #5
   1adfc:	sub	r2, r2, #4
   1ae00:	ldr	r1, [ip]
   1ae04:	cmp	r1, #0
   1ae08:	addeq	r1, r0, #48	; 0x30
   1ae0c:	ldrh	r3, [r1, #1]
   1ae10:	rev16	r3, r3
   1ae14:	uxth	r3, r3
   1ae18:	cmp	r3, #4
   1ae1c:	addhi	r3, r1, r3
   1ae20:	movls	r3, r1
   1ae24:	cmp	r2, #4
   1ae28:	ldrls	pc, [pc, r2, lsl #2]
   1ae2c:	b	1ae6c <crc32@@Base+0x1414>
   1ae30:	andeq	sl, r1, r4, asr #28
   1ae34:	andeq	sl, r1, ip, lsl #29
   1ae38:	andeq	sl, r1, r0, asr #29
   1ae3c:	strdeq	sl, [r1], -r4
   1ae40:	andeq	sl, r1, r4, ror lr
   1ae44:	ldr	r2, [r1]
   1ae48:	mov	r0, #204	; 0xcc
   1ae4c:	movt	r0, #1024	; 0x400
   1ae50:	bic	r2, r2, #16711680	; 0xff0000
   1ae54:	bic	r2, r2, #65280	; 0xff00
   1ae58:	cmp	r2, r0
   1ae5c:	movne	r1, r3
   1ae60:	movne	r2, #204	; 0xcc
   1ae64:	movtne	r2, #1028	; 0x404
   1ae68:	strne	r2, [r3]
   1ae6c:	str	r1, [ip]
   1ae70:	bx	lr
   1ae74:	mov	r1, r3
   1ae78:	mov	r2, #207	; 0xcf
   1ae7c:	str	r1, [ip]
   1ae80:	movt	r2, #1028	; 0x404
   1ae84:	str	r2, [r3]
   1ae88:	bx	lr
   1ae8c:	ldr	r2, [r1]
   1ae90:	mov	r0, #204	; 0xcc
   1ae94:	movt	r0, #3072	; 0xc00
   1ae98:	bic	r2, r2, #16711680	; 0xff0000
   1ae9c:	bic	r2, r2, #65280	; 0xff00
   1aea0:	cmp	r2, r0
   1aea4:	beq	1ae6c <crc32@@Base+0x1414>
   1aea8:	mov	r2, #204	; 0xcc
   1aeac:	mov	r1, r3
   1aeb0:	movt	r2, #3076	; 0xc04
   1aeb4:	str	r1, [ip]
   1aeb8:	str	r2, [r3]
   1aebc:	bx	lr
   1aec0:	ldr	r2, [r1]
   1aec4:	mov	r0, #204	; 0xcc
   1aec8:	movt	r0, #7168	; 0x1c00
   1aecc:	bic	r2, r2, #16711680	; 0xff0000
   1aed0:	bic	r2, r2, #65280	; 0xff00
   1aed4:	cmp	r2, r0
   1aed8:	beq	1ae6c <crc32@@Base+0x1414>
   1aedc:	mov	r2, #204	; 0xcc
   1aee0:	mov	r1, r3
   1aee4:	movt	r2, #7172	; 0x1c04
   1aee8:	str	r1, [ip]
   1aeec:	str	r2, [r3]
   1aef0:	bx	lr
   1aef4:	mov	r2, #207	; 0xcf
   1aef8:	mov	r1, r3
   1aefc:	movt	r2, #5124	; 0x1404
   1af00:	str	r1, [ip]
   1af04:	str	r2, [r3]
   1af08:	bx	lr
   1af0c:	movw	r2, #68	; 0x44
   1af10:	movt	r2, #5
   1af14:	cmp	r3, #2
   1af18:	ldr	r1, [r2]
   1af1c:	ldrh	r2, [r1, #1]
   1af20:	rev16	r2, r2
   1af24:	uxth	r2, r2
   1af28:	sub	r2, r2, #4
   1af2c:	asr	r2, r2, #3
   1af30:	beq	1af64 <crc32@@Base+0x150c>
   1af34:	cmp	r3, #3
   1af38:	bxne	lr
   1af3c:	lsl	r0, r2, #3
   1af40:	ldr	r3, [sp]
   1af44:	add	r0, r0, #12
   1af48:	add	r2, r1, r2, lsl #3
   1af4c:	ubfx	ip, r0, #8, #8
   1af50:	rev	r3, r3
   1af54:	orr	r0, ip, r0, lsl #8
   1af58:	str	r3, [r2, #8]
   1af5c:	strh	r0, [r1, #1]
   1af60:	bx	lr
   1af64:	add	r2, r1, r2, lsl #3
   1af68:	ldr	r3, [sp]
   1af6c:	rev	r3, r3
   1af70:	str	r3, [r2, #4]
   1af74:	bx	lr
   1af78:	mov	r3, #12
   1af7c:	mul	r1, r3, r1
   1af80:	movw	r3, #6633	; 0x19e9
   1af84:	movt	r3, #45426	; 0xb172
   1af88:	str	r3, [r0, #28]
   1af8c:	str	r1, [r0, #32]
   1af90:	bx	lr
   1af94:	push	{r4, lr}
   1af98:	mov	ip, #12
   1af9c:	movw	lr, #68	; 0x44
   1afa0:	movt	lr, #5
   1afa4:	mla	ip, r1, ip, ip
   1afa8:	ldr	r1, [lr, #4]
   1afac:	mov	r4, #177	; 0xb1
   1afb0:	str	r2, [r0]
   1afb4:	sub	r1, r2, r1
   1afb8:	str	r4, [r0, #4]
   1afbc:	add	r3, r1, r3
   1afc0:	add	ip, ip, #24
   1afc4:	add	r2, r3, #20
   1afc8:	add	ip, r0, ip
   1afcc:	add	r3, r3, #28
   1afd0:	str	r2, [r0, #12]
   1afd4:	str	r1, [r0, #24]
   1afd8:	mov	r2, #0
   1afdc:	str	ip, [lr, #8]
   1afe0:	str	r3, [r0, #20]
   1afe4:	str	r2, [r0, #8]
   1afe8:	str	r2, [r0, #16]
   1afec:	pop	{r4, pc}
   1aff0:	subs	r0, r0, #10
   1aff4:	movne	r0, #1
   1aff8:	bx	lr
   1affc:	ldr	r3, [r0, #4]
   1b000:	cmp	r3, #177	; 0xb1
   1b004:	beq	1b01c <crc32@@Base+0x15c4>
   1b008:	ldrb	r3, [r0]
   1b00c:	cmp	r3, #209	; 0xd1
   1b010:	beq	1b038 <crc32@@Base+0x15e0>
   1b014:	mvn	r0, #10
   1b018:	bx	lr
   1b01c:	ldr	r2, [r0, #28]
   1b020:	movw	r3, #6633	; 0x19e9
   1b024:	movt	r3, #45426	; 0xb172
   1b028:	cmp	r2, r3
   1b02c:	bne	1b008 <crc32@@Base+0x15b0>
   1b030:	mov	r0, #0
   1b034:	bx	lr
   1b038:	ldrb	r3, [r0, #44]	; 0x2c
   1b03c:	cmp	r3, #210	; 0xd2
   1b040:	beq	1b030 <crc32@@Base+0x15d8>
   1b044:	ldr	r3, [r0, #40]	; 0x28
   1b048:	cmp	r3, #0
   1b04c:	mvneq	r0, #10
   1b050:	movne	r0, #0
   1b054:	bx	lr
   1b058:	push	{r4, r5, r6, r7, r8, lr}
   1b05c:	mov	lr, #209	; 0xd1
   1b060:	ldr	r4, [r0, #40]	; 0x28
   1b064:	movt	lr, #16416	; 0x4020
   1b068:	str	lr, [r0]
   1b06c:	cmp	r4, #0
   1b070:	bne	1b0c8 <crc32@@Base+0x1670>
   1b074:	movw	ip, #68	; 0x44
   1b078:	movt	ip, #5
   1b07c:	str	r2, [r0, #4]
   1b080:	cmp	r1, #0
   1b084:	ldr	lr, [ip, #4]
   1b088:	str	r4, [r0, #8]
   1b08c:	sub	r2, r2, lr
   1b090:	str	r2, [r0, #32]
   1b094:	add	r3, r2, r3
   1b098:	mov	r2, #0
   1b09c:	str	r3, [r0, #20]
   1b0a0:	addne	r1, r3, #44	; 0x2c
   1b0a4:	str	r2, [r0, #24]
   1b0a8:	add	r3, r3, #32
   1b0ac:	str	r1, [r0, #12]
   1b0b0:	str	r3, [r0, #16]
   1b0b4:	add	r3, r0, #36	; 0x24
   1b0b8:	add	r0, r0, #24
   1b0bc:	str	r3, [ip, #8]
   1b0c0:	str	r0, [ip, #12]
   1b0c4:	pop	{r4, r5, r6, r7, r8, pc}
   1b0c8:	movw	r1, #62572	; 0xf46c
   1b0cc:	movt	r1, #4
   1b0d0:	ldr	r1, [r1]
   1b0d4:	cmp	r1, #0
   1b0d8:	bne	1b16c <crc32@@Base+0x1714>
   1b0dc:	movw	r5, #68	; 0x44
   1b0e0:	movt	r5, #5
   1b0e4:	sub	r4, r2, #65536	; 0x10000
   1b0e8:	str	r1, [r0, #8]
   1b0ec:	ldr	r6, [r5, #20]
   1b0f0:	sub	r4, r4, #44	; 0x2c
   1b0f4:	ldr	r7, [r5, #16]
   1b0f8:	add	ip, r0, r6
   1b0fc:	str	r1, [r0, #28]
   1b100:	add	r8, ip, #36	; 0x24
   1b104:	str	r8, [r5, #8]
   1b108:	add	r5, r7, r3
   1b10c:	str	r7, [r0, #32]
   1b110:	add	r7, r5, #44	; 0x2c
   1b114:	str	r7, [r0, #4]
   1b118:	add	r7, r6, r4
   1b11c:	str	r5, [r0, #20]
   1b120:	str	r1, [r0, #12]
   1b124:	add	r5, r5, #32
   1b128:	str	r1, [r0, #24]
   1b12c:	sub	r3, r4, r3
   1b130:	str	r5, [r0, #16]
   1b134:	add	r4, r7, #32
   1b138:	mov	r5, #65536	; 0x10000
   1b13c:	str	r5, [r0, #36]	; 0x24
   1b140:	str	lr, [r0, r6]
   1b144:	str	r2, [ip, #4]
   1b148:	str	r1, [ip, #8]
   1b14c:	str	r1, [ip, #28]
   1b150:	str	r1, [ip, #12]
   1b154:	str	r1, [ip, #40]	; 0x28
   1b158:	str	r1, [ip, #24]
   1b15c:	str	r7, [ip, #20]
   1b160:	str	r4, [ip, #16]
   1b164:	str	r3, [ip, #32]
   1b168:	pop	{r4, r5, r6, r7, r8, pc}
   1b16c:	movw	r3, #65196	; 0xfeac
   1b170:	movt	r3, #4
   1b174:	movw	r0, #37768	; 0x9388
   1b178:	mov	r2, #60	; 0x3c
   1b17c:	ldr	r3, [r3]
   1b180:	movt	r0, #3
   1b184:	mov	r1, #1
   1b188:	bl	1259c <fwrite@plt>
   1b18c:	mov	r0, #1
   1b190:	bl	12218 <exit@plt>
   1b194:	ldr	r2, [r0, #4]
   1b198:	push	{r4, r5, r6, r7, lr}
   1b19c:	cmp	r2, #177	; 0xb1
   1b1a0:	sub	sp, sp, #12
   1b1a4:	mov	r4, r0
   1b1a8:	beq	1b1c0 <crc32@@Base+0x1768>
   1b1ac:	ldrb	r3, [r4]
   1b1b0:	cmp	r3, #209	; 0xd1
   1b1b4:	beq	1b26c <crc32@@Base+0x1814>
   1b1b8:	mvn	r0, #0
   1b1bc:	bl	127a0 <__printf_chk@plt+0xc>
   1b1c0:	ldr	r1, [r0, #28]
   1b1c4:	movw	r3, #6633	; 0x19e9
   1b1c8:	movt	r3, #45426	; 0xb172
   1b1cc:	cmp	r1, r3
   1b1d0:	bne	1b1ac <crc32@@Base+0x1754>
   1b1d4:	ldr	r2, [r0, #32]
   1b1d8:	movw	r3, #43691	; 0xaaab
   1b1dc:	movt	r3, #43690	; 0xaaaa
   1b1e0:	cmp	r2, #720	; 0x2d0
   1b1e4:	umull	r2, r3, r2, r3
   1b1e8:	lsr	r5, r3, #3
   1b1ec:	bhi	1b54c <crc32@@Base+0x1af4>
   1b1f0:	movw	r0, #37924	; 0x9424
   1b1f4:	movt	r0, #3
   1b1f8:	bl	12290 <puts@plt>
   1b1fc:	mov	r2, #1
   1b200:	mov	r0, r2
   1b204:	movw	r1, #37964	; 0x944c
   1b208:	movt	r1, #3
   1b20c:	bl	12794 <__printf_chk@plt>
   1b210:	mov	r2, #1
   1b214:	mov	r1, #0
   1b218:	ldr	r0, [pc, #832]	; 1b560 <crc32@@Base+0x1b08>
   1b21c:	bl	1a608 <crc32@@Base+0xbb0>
   1b220:	bl	12290 <puts@plt>
   1b224:	movw	r1, #30640	; 0x77b0
   1b228:	mov	r0, #1
   1b22c:	movt	r1, #3
   1b230:	bl	12794 <__printf_chk@plt>
   1b234:	mov	r3, #12
   1b238:	mla	r5, r3, r5, r4
   1b23c:	ldr	r0, [r5, #36]	; 0x24
   1b240:	bl	1a044 <crc32@@Base+0x5ec>
   1b244:	ldr	r2, [r4, #24]
   1b248:	movw	r1, #37984	; 0x9460
   1b24c:	mov	r0, #1
   1b250:	movt	r1, #3
   1b254:	bl	12794 <__printf_chk@plt>
   1b258:	movw	r1, #38004	; 0x9474
   1b25c:	ldr	r2, [r4]
   1b260:	mov	r0, #1
   1b264:	movt	r1, #3
   1b268:	b	1b390 <crc32@@Base+0x1938>
   1b26c:	ldrb	r3, [r4, #44]	; 0x2c
   1b270:	ldr	r5, [r4, #40]	; 0x28
   1b274:	cmp	r3, #210	; 0xd2
   1b278:	beq	1b3d4 <crc32@@Base+0x197c>
   1b27c:	cmp	r5, #0
   1b280:	beq	1b1b8 <crc32@@Base+0x1760>
   1b284:	cmp	r2, #177	; 0xb1
   1b288:	bne	1b2a0 <crc32@@Base+0x1848>
   1b28c:	ldr	r2, [r4, #28]
   1b290:	movw	r3, #6633	; 0x19e9
   1b294:	movt	r3, #45426	; 0xb172
   1b298:	cmp	r2, r3
   1b29c:	beq	1b39c <crc32@@Base+0x1944>
   1b2a0:	movw	r0, #37924	; 0x9424
   1b2a4:	movt	r0, #3
   1b2a8:	bl	12290 <puts@plt>
   1b2ac:	mov	r2, #2
   1b2b0:	movw	r1, #37964	; 0x944c
   1b2b4:	mov	r0, #1
   1b2b8:	movt	r1, #3
   1b2bc:	bl	12794 <__printf_chk@plt>
   1b2c0:	mov	r2, #2
   1b2c4:	mov	r1, #0
   1b2c8:	ldr	r0, [pc, #656]	; 1b560 <crc32@@Base+0x1b08>
   1b2cc:	bl	1a608 <crc32@@Base+0xbb0>
   1b2d0:	bl	12290 <puts@plt>
   1b2d4:	movw	r2, #38124	; 0x94ec
   1b2d8:	movw	r1, #38104	; 0x94d8
   1b2dc:	movt	r2, #3
   1b2e0:	movt	r1, #3
   1b2e4:	mov	r0, #1
   1b2e8:	movw	r5, #68	; 0x44
   1b2ec:	bl	12794 <__printf_chk@plt>
   1b2f0:	movw	r1, #38132	; 0x94f4
   1b2f4:	mov	r0, #1
   1b2f8:	movt	r1, #3
   1b2fc:	bl	12794 <__printf_chk@plt>
   1b300:	movt	r5, #5
   1b304:	ldr	r0, [r4, #36]	; 0x24
   1b308:	bl	1a044 <crc32@@Base+0x5ec>
   1b30c:	movw	r1, #38156	; 0x950c
   1b310:	mov	r0, #1
   1b314:	movt	r1, #3
   1b318:	bl	12794 <__printf_chk@plt>
   1b31c:	ldr	r0, [r5, #20]
   1b320:	bl	1a044 <crc32@@Base+0x5ec>
   1b324:	ldr	r2, [r4, #32]
   1b328:	movw	r1, #38180	; 0x9524
   1b32c:	mov	r0, #1
   1b330:	movt	r1, #3
   1b334:	bl	12794 <__printf_chk@plt>
   1b338:	ldr	r2, [r4, #4]
   1b33c:	movw	r1, #38208	; 0x9540
   1b340:	mov	r0, #1
   1b344:	movt	r1, #3
   1b348:	bl	12794 <__printf_chk@plt>
   1b34c:	ldr	r3, [r5, #20]
   1b350:	movw	r1, #38236	; 0x955c
   1b354:	mov	r0, #1
   1b358:	add	r4, r4, r3
   1b35c:	movt	r1, #3
   1b360:	bl	12794 <__printf_chk@plt>
   1b364:	ldr	r0, [r4, #36]	; 0x24
   1b368:	bl	1a044 <crc32@@Base+0x5ec>
   1b36c:	ldr	r2, [r4, #32]
   1b370:	movw	r1, #38260	; 0x9574
   1b374:	mov	r0, #1
   1b378:	movt	r1, #3
   1b37c:	bl	12794 <__printf_chk@plt>
   1b380:	ldr	r2, [r4, #4]
   1b384:	movw	r1, #38288	; 0x9590
   1b388:	movt	r1, #3
   1b38c:	mov	r0, #1
   1b390:	add	sp, sp, #12
   1b394:	pop	{r4, r5, r6, r7, lr}
   1b398:	b	12794 <__printf_chk@plt>
   1b39c:	movw	r0, #37924	; 0x9424
   1b3a0:	movt	r0, #3
   1b3a4:	bl	12290 <puts@plt>
   1b3a8:	mov	r2, #1
   1b3ac:	mov	r0, r2
   1b3b0:	movw	r1, #37964	; 0x944c
   1b3b4:	movt	r1, #3
   1b3b8:	bl	12794 <__printf_chk@plt>
   1b3bc:	mov	r2, #1
   1b3c0:	mov	r1, #0
   1b3c4:	ldr	r0, [pc, #404]	; 1b560 <crc32@@Base+0x1b08>
   1b3c8:	bl	1a608 <crc32@@Base+0xbb0>
   1b3cc:	bl	12290 <puts@plt>
   1b3d0:	b	1b2d4 <crc32@@Base+0x187c>
   1b3d4:	cmp	r5, #0
   1b3d8:	bne	1b540 <crc32@@Base+0x1ae8>
   1b3dc:	ldrh	r3, [r4, #45]	; 0x2d
   1b3e0:	rev16	r3, r3
   1b3e4:	uxth	r3, r3
   1b3e8:	cmp	r3, #1760	; 0x6e0
   1b3ec:	bhi	1b510 <crc32@@Base+0x1ab8>
   1b3f0:	cmp	r2, #177	; 0xb1
   1b3f4:	bne	1b414 <crc32@@Base+0x19bc>
   1b3f8:	ldr	r2, [r4, #28]
   1b3fc:	movw	r3, #6633	; 0x19e9
   1b400:	movt	r3, #45426	; 0xb172
   1b404:	cmp	r2, r3
   1b408:	moveq	r6, #1
   1b40c:	moveq	r7, r6
   1b410:	beq	1b41c <crc32@@Base+0x19c4>
   1b414:	mov	r6, #2
   1b418:	mov	r7, r6
   1b41c:	movw	r0, #37924	; 0x9424
   1b420:	movt	r0, #3
   1b424:	bl	12290 <puts@plt>
   1b428:	mov	r2, r7
   1b42c:	movw	r1, #37964	; 0x944c
   1b430:	mov	r0, #1
   1b434:	movt	r1, #3
   1b438:	bl	12794 <__printf_chk@plt>
   1b43c:	mov	r2, r6
   1b440:	mov	r1, #0
   1b444:	ldr	r0, [pc, #276]	; 1b560 <crc32@@Base+0x1b08>
   1b448:	bl	1a608 <crc32@@Base+0xbb0>
   1b44c:	bl	12290 <puts@plt>
   1b450:	cmp	r5, #0
   1b454:	bne	1b2d4 <crc32@@Base+0x187c>
   1b458:	movw	r2, #38100	; 0x94d4
   1b45c:	movw	r1, #38104	; 0x94d8
   1b460:	movt	r2, #3
   1b464:	movt	r1, #3
   1b468:	mov	r0, #1
   1b46c:	bl	12794 <__printf_chk@plt>
   1b470:	movw	r1, #30640	; 0x77b0
   1b474:	mov	r0, #1
   1b478:	movt	r1, #3
   1b47c:	bl	12794 <__printf_chk@plt>
   1b480:	ldr	r0, [r4, #36]	; 0x24
   1b484:	bl	1a044 <crc32@@Base+0x5ec>
   1b488:	ldr	r2, [r4, #16]
   1b48c:	movw	r1, #37984	; 0x9460
   1b490:	mov	r0, #1
   1b494:	movt	r1, #3
   1b498:	bl	12794 <__printf_chk@plt>
   1b49c:	movw	r1, #38004	; 0x9474
   1b4a0:	ldr	r2, [r4, #4]
   1b4a4:	movt	r1, #3
   1b4a8:	mov	r0, #1
   1b4ac:	bl	12794 <__printf_chk@plt>
   1b4b0:	ldr	r0, [r4, #24]
   1b4b4:	cmp	r0, #0
   1b4b8:	bne	1b4c4 <crc32@@Base+0x1a6c>
   1b4bc:	add	sp, sp, #12
   1b4c0:	pop	{r4, r5, r6, r7, pc}
   1b4c4:	ldr	r2, [r4, #20]
   1b4c8:	movw	r1, #38024	; 0x9488
   1b4cc:	ldrh	r3, [r4, #45]	; 0x2d
   1b4d0:	movt	r1, #3
   1b4d4:	sub	r0, r0, r2
   1b4d8:	str	r0, [sp]
   1b4dc:	rev16	r4, r3
   1b4e0:	mov	r0, #1
   1b4e4:	mov	r3, #0
   1b4e8:	bl	12794 <__printf_chk@plt>
   1b4ec:	uxth	r4, r4
   1b4f0:	movw	r1, #38060	; 0x94ac
   1b4f4:	mov	r2, #44	; 0x2c
   1b4f8:	mov	r3, r4
   1b4fc:	movt	r1, #3
   1b500:	mov	r0, #1
   1b504:	add	sp, sp, #12
   1b508:	pop	{r4, r5, r6, r7, lr}
   1b50c:	b	12794 <__printf_chk@plt>
   1b510:	movw	r2, #65196	; 0xfeac
   1b514:	lsr	r3, r3, #3
   1b518:	movt	r2, #4
   1b51c:	mov	r1, #220	; 0xdc
   1b520:	ldr	r0, [r2]
   1b524:	movw	r2, #37872	; 0x93f0
   1b528:	str	r1, [sp]
   1b52c:	movt	r2, #3
   1b530:	mov	r1, #1
   1b534:	bl	122d8 <__fprintf_chk@plt>
   1b538:	mov	r0, #1
   1b53c:	bl	12218 <exit@plt>
   1b540:	cmp	r2, #177	; 0xb1
   1b544:	beq	1b3f8 <crc32@@Base+0x19a0>
   1b548:	b	1b2a0 <crc32@@Base+0x1848>
   1b54c:	movw	r2, #65196	; 0xfeac
   1b550:	mov	r3, r5
   1b554:	movt	r2, #4
   1b558:	mov	r1, #60	; 0x3c
   1b55c:	b	1b520 <crc32@@Base+0x1ac8>
   1b560:	andeq	pc, r4, r0, ror r4	; <UNPREDICTABLE>
   1b564:	ldr	r3, [r0, #40]	; 0x28
   1b568:	cmp	r3, #0
   1b56c:	bxne	lr
   1b570:	movw	r3, #68	; 0x44
   1b574:	movt	r3, #5
   1b578:	mvn	r1, #45	; 0x2d
   1b57c:	ldr	r3, [r3]
   1b580:	cmp	r3, #0
   1b584:	addeq	r3, r0, #48	; 0x30
   1b588:	ldrh	r2, [r3, #1]
   1b58c:	rev16	r2, r2
   1b590:	uxth	r2, r2
   1b594:	cmp	r2, #4
   1b598:	addhi	r3, r3, r2
   1b59c:	mov	r2, r0
   1b5a0:	strb	r1, [r2, #44]!	; 0x2c
   1b5a4:	sub	r3, r3, r2
   1b5a8:	rev16	r3, r3
   1b5ac:	mov	r2, #64	; 0x40
   1b5b0:	strh	r3, [r0, #45]	; 0x2d
   1b5b4:	strb	r2, [r0, #47]	; 0x2f
   1b5b8:	bx	lr
   1b5bc:	cmp	r0, #0
   1b5c0:	beq	1b644 <crc32@@Base+0x1bec>
   1b5c4:	ldr	r3, [r0, #64]	; 0x40
   1b5c8:	ldrb	r3, [r3]
   1b5cc:	cmp	r3, #0
   1b5d0:	beq	1b618 <crc32@@Base+0x1bc0>
   1b5d4:	ldr	r3, [r0]
   1b5d8:	ldr	r2, [r0, #8]
   1b5dc:	cmp	r3, #0
   1b5e0:	beq	1b600 <crc32@@Base+0x1ba8>
   1b5e4:	cmp	r2, #0
   1b5e8:	bne	1b5f8 <crc32@@Base+0x1ba0>
   1b5ec:	ldr	r3, [r0, #16]
   1b5f0:	cmp	r3, #0
   1b5f4:	beq	1b608 <crc32@@Base+0x1bb0>
   1b5f8:	mov	r0, #1
   1b5fc:	bx	lr
   1b600:	cmp	r2, #0
   1b604:	bne	1b5ec <crc32@@Base+0x1b94>
   1b608:	ldr	r0, [r0, #28]
   1b60c:	adds	r0, r0, #0
   1b610:	movne	r0, #1
   1b614:	bx	lr
   1b618:	movw	r1, #65196	; 0xfeac
   1b61c:	movt	r1, #4
   1b620:	ldr	r3, [r0, #80]	; 0x50
   1b624:	movw	r2, #38316	; 0x95ac
   1b628:	push	{r4, lr}
   1b62c:	movt	r2, #3
   1b630:	ldr	r0, [r1]
   1b634:	mov	r1, #1
   1b638:	bl	122d8 <__fprintf_chk@plt>
   1b63c:	mvn	r0, #0
   1b640:	pop	{r4, pc}
   1b644:	mvn	r0, #0
   1b648:	bx	lr
   1b64c:	push	{r4, lr}
   1b650:	cmp	r3, #2
   1b654:	sub	sp, sp, #8
   1b658:	ldr	ip, [sp, #16]
   1b65c:	beq	1b6b8 <crc32@@Base+0x1c60>
   1b660:	cmp	r3, #3
   1b664:	beq	1b6a0 <crc32@@Base+0x1c48>
   1b668:	cmp	r3, #1
   1b66c:	beq	1b678 <crc32@@Base+0x1c20>
   1b670:	add	sp, sp, #8
   1b674:	pop	{r4, pc}
   1b678:	sub	lr, ip, #1
   1b67c:	cmp	ip, #4
   1b680:	cmpne	lr, #1
   1b684:	bhi	1b6d0 <crc32@@Base+0x1c78>
   1b688:	ldr	r2, [sp, #20]
   1b68c:	mov	r3, #12
   1b690:	mla	r0, r3, r2, r0
   1b694:	str	ip, [r0, #36]	; 0x24
   1b698:	add	sp, sp, #8
   1b69c:	pop	{r4, pc}
   1b6a0:	ldr	r2, [sp, #20]
   1b6a4:	mov	r3, #12
   1b6a8:	mla	r0, r3, r2, r0
   1b6ac:	str	ip, [r0, #44]	; 0x2c
   1b6b0:	add	sp, sp, #8
   1b6b4:	pop	{r4, pc}
   1b6b8:	ldr	r2, [sp, #20]
   1b6bc:	mov	r3, #12
   1b6c0:	mla	r0, r3, r2, r0
   1b6c4:	str	ip, [r0, #40]	; 0x28
   1b6c8:	add	sp, sp, #8
   1b6cc:	pop	{r4, pc}
   1b6d0:	movw	r0, #65196	; 0xfeac
   1b6d4:	movt	r0, #4
   1b6d8:	mov	r4, r3
   1b6dc:	str	r2, [sp]
   1b6e0:	str	ip, [sp, #4]
   1b6e4:	mov	r3, r1
   1b6e8:	movw	r2, #38400	; 0x9600
   1b6ec:	ldr	r0, [r0]
   1b6f0:	movt	r2, #3
   1b6f4:	mov	r1, r4
   1b6f8:	bl	122d8 <__fprintf_chk@plt>
   1b6fc:	mov	r0, r4
   1b700:	bl	12218 <exit@plt>
   1b704:	movw	r3, #68	; 0x44
   1b708:	movt	r3, #5
   1b70c:	ldr	r0, [r3, #24]
   1b710:	cmp	r0, #1
   1b714:	beq	1b764 <crc32@@Base+0x1d0c>
   1b718:	cmp	r0, #2
   1b71c:	bne	1b79c <crc32@@Base+0x1d44>
   1b720:	movw	r1, #44812	; 0xaf0c
   1b724:	movw	r2, #44532	; 0xadf4
   1b728:	movt	r1, #1
   1b72c:	movt	r2, #1
   1b730:	str	r1, [r3, #28]
   1b734:	movw	r1, #46436	; 0xb564
   1b738:	str	r2, [r3, #32]
   1b73c:	movt	r1, #1
   1b740:	movw	r2, #45144	; 0xb058
   1b744:	str	r1, [r3, #36]	; 0x24
   1b748:	movt	r2, #1
   1b74c:	mov	r1, #0
   1b750:	str	r2, [r3, #40]	; 0x28
   1b754:	mov	r2, #220	; 0xdc
   1b758:	str	r1, [r3]
   1b75c:	str	r2, [r3, #44]	; 0x2c
   1b760:	bx	lr
   1b764:	movw	r2, #46668	; 0xb64c
   1b768:	movw	r1, #44920	; 0xaf78
   1b76c:	movt	r2, #1
   1b770:	movt	r1, #1
   1b774:	str	r2, [r3, #28]
   1b778:	movw	r2, #44948	; 0xaf94
   1b77c:	str	r1, [r3, #36]	; 0x24
   1b780:	movt	r2, #1
   1b784:	mov	r1, #0
   1b788:	str	r2, [r3, #40]	; 0x28
   1b78c:	str	r1, [r3, #32]
   1b790:	mov	r2, #60	; 0x3c
   1b794:	str	r2, [r3, #44]	; 0x2c
   1b798:	bx	lr
   1b79c:	push	{r4, lr}
   1b7a0:	bl	127a0 <__printf_chk@plt+0xc>
   1b7a4:	push	{r4, r5, r6, r7, r8, lr}
   1b7a8:	movw	r4, #61168	; 0xeef0
   1b7ac:	movt	r4, #4
   1b7b0:	sub	sp, sp, #16
   1b7b4:	mov	r5, r0
   1b7b8:	mov	r8, r1
   1b7bc:	ldr	r3, [r4]
   1b7c0:	mov	r7, r2
   1b7c4:	str	r3, [sp, #12]
   1b7c8:	bl	126b0 <__errno_location@plt>
   1b7cc:	mov	r3, #0
   1b7d0:	mov	r2, #16
   1b7d4:	add	r1, sp, #8
   1b7d8:	mov	r6, r0
   1b7dc:	mov	r0, r5
   1b7e0:	str	r3, [r6]
   1b7e4:	bl	122f0 <strtoul@plt>
   1b7e8:	ldr	r3, [r6]
   1b7ec:	cmp	r3, #0
   1b7f0:	bne	1b818 <crc32@@Base+0x1dc0>
   1b7f4:	ldr	r3, [sp, #8]
   1b7f8:	cmp	r3, r5
   1b7fc:	beq	1b818 <crc32@@Base+0x1dc0>
   1b800:	ldr	r2, [sp, #12]
   1b804:	ldr	r3, [r4]
   1b808:	cmp	r2, r3
   1b80c:	bne	1b848 <crc32@@Base+0x1df0>
   1b810:	add	sp, sp, #16
   1b814:	pop	{r4, r5, r6, r7, r8, pc}
   1b818:	movw	r1, #65196	; 0xfeac
   1b81c:	movt	r1, #4
   1b820:	str	r5, [sp, #4]
   1b824:	mov	r3, r8
   1b828:	str	r7, [sp]
   1b82c:	movw	r2, #26316	; 0x66cc
   1b830:	ldr	r0, [r1]
   1b834:	movt	r2, #3
   1b838:	mov	r1, #1
   1b83c:	bl	122d8 <__fprintf_chk@plt>
   1b840:	mov	r0, #1
   1b844:	bl	12218 <exit@plt>
   1b848:	bl	124b8 <__stack_chk_fail@plt>
   1b84c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b850:	movw	r3, #61168	; 0xeef0
   1b854:	sub	sp, sp, #156	; 0x9c
   1b858:	movt	r3, #4
   1b85c:	mov	fp, r1
   1b860:	mov	r4, #0
   1b864:	str	r3, [sp, #32]
   1b868:	ldr	r3, [r3]
   1b86c:	str	r0, [sp, #20]
   1b870:	mov	r0, r1
   1b874:	movw	r1, #50292	; 0xc474
   1b878:	movt	r1, #3
   1b87c:	str	r3, [sp, #148]	; 0x94
   1b880:	str	r4, [sp, #40]	; 0x28
   1b884:	bl	12350 <fopen@plt>
   1b888:	subs	r3, r0, #0
   1b88c:	str	r3, [sp, #24]
   1b890:	beq	1c038 <crc32@@Base+0x25e0>
   1b894:	movw	r8, #62572	; 0xf46c
   1b898:	movt	r8, #4
   1b89c:	str	fp, [sp, #12]
   1b8a0:	mov	r7, r4
   1b8a4:	mov	fp, r8
   1b8a8:	movw	r3, #26248	; 0x6688
   1b8ac:	str	r4, [sp, #16]
   1b8b0:	movt	r3, #3
   1b8b4:	str	r3, [sp, #28]
   1b8b8:	ldr	r3, [sp, #24]
   1b8bc:	mov	r2, #10
   1b8c0:	add	r1, sp, #52	; 0x34
   1b8c4:	add	r0, sp, #40	; 0x28
   1b8c8:	bl	12158 <__getdelim@plt>
   1b8cc:	cmp	r0, #0
   1b8d0:	ble	1bdf8 <crc32@@Base+0x23a0>
   1b8d4:	add	r2, sp, #44	; 0x2c
   1b8d8:	ldr	r1, [sp, #28]
   1b8dc:	ldr	r0, [sp, #40]	; 0x28
   1b8e0:	add	r7, r7, #1
   1b8e4:	bl	12248 <__strtok_r@plt>
   1b8e8:	cmp	r0, #0
   1b8ec:	beq	1b8b8 <crc32@@Base+0x1e60>
   1b8f0:	mov	r9, #0
   1b8f4:	movw	r5, #26252	; 0x668c
   1b8f8:	movt	r5, #3
   1b8fc:	mov	r8, r9
   1b900:	str	r0, [sp, #40]	; 0x28
   1b904:	add	r2, sp, #48	; 0x30
   1b908:	mov	r1, r5
   1b90c:	bl	12248 <__strtok_r@plt>
   1b910:	subs	r4, r0, #0
   1b914:	beq	1b8b8 <crc32@@Base+0x1e60>
   1b918:	ldrb	r3, [r4]
   1b91c:	cmp	r3, #35	; 0x23
   1b920:	beq	1b8b8 <crc32@@Base+0x1e60>
   1b924:	cmp	r8, #3
   1b928:	ldrls	pc, [pc, r8, lsl #2]
   1b92c:	b	1ba64 <crc32@@Base+0x200c>
   1b930:	andeq	fp, r1, r0, asr #18
   1b934:	andeq	fp, r1, ip, ror #18
   1b938:	andeq	fp, r1, r4, lsr #19
   1b93c:	andeq	fp, r1, r4, lsr #19
   1b940:	movw	r1, #38480	; 0x9650
   1b944:	mov	r2, r4
   1b948:	movt	r1, #3
   1b94c:	ldr	r0, [pc, #1804]	; 1c060 <crc32@@Base+0x2608>
   1b950:	bl	1a8d8 <crc32@@Base+0xe80>
   1b954:	subs	r9, r0, #0
   1b958:	blt	1be6c <crc32@@Base+0x2414>
   1b95c:	mov	r8, #1
   1b960:	mov	r0, #0
   1b964:	str	r0, [sp, #40]	; 0x28
   1b968:	b	1b904 <crc32@@Base+0x1eac>
   1b96c:	sub	r3, r9, #1
   1b970:	cmp	r3, #9
   1b974:	ldrls	pc, [pc, r3, lsl #2]
   1b978:	b	1bae0 <crc32@@Base+0x2088>
   1b97c:	andeq	fp, r1, ip, lsr ip
   1b980:	andeq	fp, r1, ip, ror fp
   1b984:	andeq	fp, r1, r8, ror #21
   1b988:	andeq	fp, r1, ip, ror #20
   1b98c:	andeq	fp, r1, ip, ror #20
   1b990:	andeq	fp, r1, ip, ror #20
   1b994:	andeq	fp, r1, ip, ror #20
   1b998:	andeq	fp, r1, ip, ror #20
   1b99c:	strdeq	fp, [r1], -r4
   1b9a0:	andeq	fp, r1, r0, lsl #25
   1b9a4:	cmp	r9, #4
   1b9a8:	blt	1ba64 <crc32@@Base+0x200c>
   1b9ac:	cmp	r9, #8
   1b9b0:	bgt	1bde4 <crc32@@Base+0x238c>
   1b9b4:	mov	r0, r4
   1b9b8:	mov	r2, r7
   1b9bc:	ldr	r1, [sp, #12]
   1b9c0:	movw	r6, #68	; 0x44
   1b9c4:	bl	1b7a4 <crc32@@Base+0x1d4c>
   1b9c8:	movt	r6, #5
   1b9cc:	ldr	r3, [r6, #32]
   1b9d0:	cmp	r3, #0
   1b9d4:	mov	r4, r0
   1b9d8:	beq	1b9ec <crc32@@Base+0x1f94>
   1b9dc:	mov	r2, r9
   1b9e0:	ldr	r1, [sp, #16]
   1b9e4:	ldr	r0, [sp, #20]
   1b9e8:	blx	r3
   1b9ec:	ldr	r3, [sp, #16]
   1b9f0:	mov	r2, r7
   1b9f4:	str	r4, [sp]
   1b9f8:	ldr	r1, [sp, #12]
   1b9fc:	str	r3, [sp, #4]
   1ba00:	mov	r3, r8
   1ba04:	ldr	r4, [r6, #28]
   1ba08:	ldr	r0, [sp, #20]
   1ba0c:	blx	r4
   1ba10:	cmp	r8, #3
   1ba14:	movne	r8, #3
   1ba18:	bne	1b960 <crc32@@Base+0x1f08>
   1ba1c:	ldr	r2, [sp, #16]
   1ba20:	ldr	r3, [r6, #44]	; 0x2c
   1ba24:	add	r2, r2, #1
   1ba28:	str	r2, [sp, #16]
   1ba2c:	cmp	r2, r3
   1ba30:	bhi	1bf9c <crc32@@Base+0x2544>
   1ba34:	mov	r3, #0
   1ba38:	add	r2, sp, #48	; 0x30
   1ba3c:	mov	r0, r3
   1ba40:	mov	r1, r5
   1ba44:	str	r3, [sp, #40]	; 0x28
   1ba48:	bl	12248 <__strtok_r@plt>
   1ba4c:	cmp	r0, #0
   1ba50:	beq	1b8b8 <crc32@@Base+0x1e60>
   1ba54:	ldrb	r3, [r0]
   1ba58:	cmp	r3, #35	; 0x23
   1ba5c:	beq	1b8b8 <crc32@@Base+0x1e60>
   1ba60:	mov	r8, #4
   1ba64:	add	r8, r8, #1
   1ba68:	b	1b960 <crc32@@Base+0x1f08>
   1ba6c:	mov	r0, r4
   1ba70:	mov	r2, r7
   1ba74:	ldr	r1, [sp, #12]
   1ba78:	movw	r6, #68	; 0x44
   1ba7c:	bl	1b7a4 <crc32@@Base+0x1d4c>
   1ba80:	movt	r6, #5
   1ba84:	ldr	r3, [r6, #32]
   1ba88:	cmp	r3, #0
   1ba8c:	mov	r4, r0
   1ba90:	beq	1baa4 <crc32@@Base+0x204c>
   1ba94:	mov	r2, r9
   1ba98:	ldr	r1, [sp, #16]
   1ba9c:	ldr	r0, [sp, #20]
   1baa0:	blx	r3
   1baa4:	ldr	r3, [sp, #16]
   1baa8:	mov	r2, r7
   1baac:	str	r4, [sp]
   1bab0:	ldr	r1, [sp, #12]
   1bab4:	str	r3, [sp, #4]
   1bab8:	mov	r3, #1
   1babc:	ldr	r4, [r6, #28]
   1bac0:	ldr	r0, [sp, #20]
   1bac4:	blx	r4
   1bac8:	ldr	r3, [fp, #172]	; 0xac
   1bacc:	cmp	r3, #1
   1bad0:	movne	r3, #0
   1bad4:	movne	r8, #2
   1bad8:	strne	r3, [fp, #172]	; 0xac
   1badc:	bne	1b960 <crc32@@Base+0x1f08>
   1bae0:	mov	r8, #2
   1bae4:	b	1b960 <crc32@@Base+0x1f08>
   1bae8:	mov	r0, r4
   1baec:	mov	r2, r7
   1baf0:	ldr	r1, [sp, #12]
   1baf4:	bl	1b7a4 <crc32@@Base+0x1d4c>
   1baf8:	ldr	r3, [fp, #172]	; 0xac
   1bafc:	cmp	r3, #1
   1bb00:	addeq	r2, sp, #48	; 0x30
   1bb04:	moveq	r4, #0
   1bb08:	str	r0, [fp, #272]	; 0x110
   1bb0c:	moveq	r0, r4
   1bb10:	bne	1be58 <crc32@@Base+0x2400>
   1bb14:	mov	r1, r5
   1bb18:	str	r4, [sp, #40]	; 0x28
   1bb1c:	bl	12248 <__strtok_r@plt>
   1bb20:	cmp	r0, #0
   1bb24:	beq	1b8b8 <crc32@@Base+0x1e60>
   1bb28:	ldrb	r3, [r0]
   1bb2c:	cmp	r3, #35	; 0x23
   1bb30:	beq	1b8b8 <crc32@@Base+0x1e60>
   1bb34:	add	r2, sp, #48	; 0x30
   1bb38:	mov	r1, r5
   1bb3c:	mov	r0, r4
   1bb40:	str	r4, [sp, #40]	; 0x28
   1bb44:	bl	12248 <__strtok_r@plt>
   1bb48:	cmp	r0, #0
   1bb4c:	beq	1b8b8 <crc32@@Base+0x1e60>
   1bb50:	ldrb	r3, [r0]
   1bb54:	cmp	r3, #35	; 0x23
   1bb58:	beq	1b8b8 <crc32@@Base+0x1e60>
   1bb5c:	mov	r0, r4
   1bb60:	add	r2, sp, #48	; 0x30
   1bb64:	mov	r1, r5
   1bb68:	str	r4, [sp, #40]	; 0x28
   1bb6c:	bl	12248 <__strtok_r@plt>
   1bb70:	cmp	r0, #0
   1bb74:	bne	1ba54 <crc32@@Base+0x1ffc>
   1bb78:	b	1b8b8 <crc32@@Base+0x1e60>
   1bb7c:	movw	r1, #38636	; 0x96ec
   1bb80:	mov	r2, r4
   1bb84:	movt	r1, #3
   1bb88:	ldr	r0, [pc, #1236]	; 1c064 <crc32@@Base+0x260c>
   1bb8c:	bl	1a8d8 <crc32@@Base+0xe80>
   1bb90:	cmn	r0, #1
   1bb94:	str	r0, [fp, #272]	; 0x110
   1bb98:	beq	1bf68 <crc32@@Base+0x2510>
   1bb9c:	movw	r1, #38636	; 0x96ec
   1bba0:	mov	r2, r4
   1bba4:	movt	r1, #3
   1bba8:	ldr	r0, [pc, #1208]	; 1c068 <crc32@@Base+0x2610>
   1bbac:	bl	1a8d8 <crc32@@Base+0xe80>
   1bbb0:	movw	r6, #68	; 0x44
   1bbb4:	movt	r6, #5
   1bbb8:	cmn	r0, #1
   1bbbc:	str	r0, [r6, #4]
   1bbc0:	beq	1bf68 <crc32@@Base+0x2510>
   1bbc4:	ldr	r3, [fp, #272]	; 0x110
   1bbc8:	mov	r4, #0
   1bbcc:	add	r2, sp, #48	; 0x30
   1bbd0:	mov	r1, r5
   1bbd4:	cmp	r0, r3
   1bbd8:	mov	r0, r4
   1bbdc:	strcc	r3, [r6, #4]
   1bbe0:	ldr	r3, [fp, #172]	; 0xac
   1bbe4:	cmp	r3, #1
   1bbe8:	beq	1bb18 <crc32@@Base+0x20c0>
   1bbec:	str	r4, [fp, #172]	; 0xac
   1bbf0:	b	1bb18 <crc32@@Base+0x20c0>
   1bbf4:	movw	r6, #68	; 0x44
   1bbf8:	movt	r6, #5
   1bbfc:	ldr	r3, [r6, #24]
   1bc00:	cmp	r3, #2
   1bc04:	bne	1bf34 <crc32@@Base+0x24dc>
   1bc08:	mov	r0, r4
   1bc0c:	mov	r2, r7
   1bc10:	ldr	r1, [sp, #12]
   1bc14:	mov	r4, #0
   1bc18:	bl	1b7a4 <crc32@@Base+0x1d4c>
   1bc1c:	ldr	r3, [fp, #172]	; 0xac
   1bc20:	add	r2, sp, #48	; 0x30
   1bc24:	mov	r1, r5
   1bc28:	cmp	r3, #1
   1bc2c:	str	r0, [fp]
   1bc30:	mov	r0, r4
   1bc34:	beq	1bb18 <crc32@@Base+0x20c0>
   1bc38:	b	1bbec <crc32@@Base+0x2194>
   1bc3c:	mov	r0, r4
   1bc40:	mov	r2, r7
   1bc44:	ldr	r1, [sp, #12]
   1bc48:	movw	r6, #68	; 0x44
   1bc4c:	bl	1b7a4 <crc32@@Base+0x1d4c>
   1bc50:	ldr	r3, [fp, #172]	; 0xac
   1bc54:	movt	r6, #5
   1bc58:	cmp	r3, #0
   1bc5c:	str	r0, [r6, #24]
   1bc60:	beq	1bf04 <crc32@@Base+0x24ac>
   1bc64:	mov	r4, #0
   1bc68:	mov	r3, #1
   1bc6c:	str	r3, [fp, #172]	; 0xac
   1bc70:	bl	1b704 <crc32@@Base+0x1cac>
   1bc74:	mov	r0, r4
   1bc78:	add	r2, sp, #48	; 0x30
   1bc7c:	b	1bb14 <crc32@@Base+0x20bc>
   1bc80:	movw	r6, #68	; 0x44
   1bc84:	movt	r6, #5
   1bc88:	mov	r1, #0
   1bc8c:	mov	r0, r4
   1bc90:	mov	sl, #1
   1bc94:	str	sl, [r6, #48]	; 0x30
   1bc98:	bl	12458 <open@plt>
   1bc9c:	ldr	r3, [sp, #20]
   1bca0:	add	r3, r3, #44	; 0x2c
   1bca4:	str	r3, [sp, #36]	; 0x24
   1bca8:	subs	r9, r0, #0
   1bcac:	blt	1bedc <crc32@@Base+0x2484>
   1bcb0:	add	r2, sp, #56	; 0x38
   1bcb4:	mov	r1, r9
   1bcb8:	mov	r0, #3
   1bcbc:	bl	12578 <__fxstat@plt>
   1bcc0:	cmp	r0, #0
   1bcc4:	blt	1bea0 <crc32@@Base+0x2448>
   1bcc8:	mov	r8, #0
   1bccc:	mov	r3, sl
   1bcd0:	ldr	r1, [sp, #100]	; 0x64
   1bcd4:	mov	r0, r8
   1bcd8:	str	r9, [sp]
   1bcdc:	mov	r2, sl
   1bce0:	str	r8, [sp, #4]
   1bce4:	bl	12410 <mmap@plt>
   1bce8:	cmn	r0, #1
   1bcec:	mov	r3, r0
   1bcf0:	beq	1bfe4 <crc32@@Base+0x258c>
   1bcf4:	ldr	r4, [sp, #100]	; 0x64
   1bcf8:	cmp	r4, #65536	; 0x10000
   1bcfc:	bgt	1bfd0 <crc32@@Base+0x2578>
   1bd00:	mov	r2, r4
   1bd04:	mov	r1, r3
   1bd08:	ldr	r0, [sp, #36]	; 0x24
   1bd0c:	str	r3, [sp, #36]	; 0x24
   1bd10:	bl	125c0 <memcpy@plt>
   1bd14:	ldr	r3, [sp, #36]	; 0x24
   1bd18:	mov	r1, r4
   1bd1c:	str	r4, [r6, #20]
   1bd20:	mov	r0, r3
   1bd24:	bl	12608 <munmap@plt>
   1bd28:	mov	r0, r9
   1bd2c:	bl	12338 <close@plt>
   1bd30:	ldr	r3, [sp, #20]
   1bd34:	mov	r0, r8
   1bd38:	add	r2, sp, #48	; 0x30
   1bd3c:	mov	r1, r5
   1bd40:	str	r8, [sp, #40]	; 0x28
   1bd44:	str	sl, [r3, #40]	; 0x28
   1bd48:	bl	12248 <__strtok_r@plt>
   1bd4c:	subs	r4, r0, #0
   1bd50:	beq	1b8b8 <crc32@@Base+0x1e60>
   1bd54:	ldrb	r3, [r4]
   1bd58:	cmp	r3, #35	; 0x23
   1bd5c:	beq	1b8b8 <crc32@@Base+0x1e60>
   1bd60:	mov	r8, #2
   1bd64:	mov	r9, #0
   1bd68:	mov	r0, r4
   1bd6c:	mov	r2, r7
   1bd70:	ldr	r1, [sp, #12]
   1bd74:	bl	1b7a4 <crc32@@Base+0x1d4c>
   1bd78:	add	r2, sp, #48	; 0x30
   1bd7c:	mov	r1, r5
   1bd80:	str	r9, [sp, #40]	; 0x28
   1bd84:	add	r8, r8, #1
   1bd88:	str	r0, [r6, #16]
   1bd8c:	mov	r0, #0
   1bd90:	bl	12248 <__strtok_r@plt>
   1bd94:	cmp	r0, #0
   1bd98:	beq	1b8b8 <crc32@@Base+0x1e60>
   1bd9c:	ldrb	r3, [r0]
   1bda0:	cmp	r3, #35	; 0x23
   1bda4:	beq	1b8b8 <crc32@@Base+0x1e60>
   1bda8:	cmp	r8, #3
   1bdac:	beq	1bd6c <crc32@@Base+0x2314>
   1bdb0:	add	r2, sp, #48	; 0x30
   1bdb4:	mov	r1, r5
   1bdb8:	mov	r0, #0
   1bdbc:	str	r9, [sp, #40]	; 0x28
   1bdc0:	bl	12248 <__strtok_r@plt>
   1bdc4:	cmp	r0, #0
   1bdc8:	beq	1b8b8 <crc32@@Base+0x1e60>
   1bdcc:	ldrb	r3, [r0]
   1bdd0:	cmp	r3, #35	; 0x23
   1bdd4:	beq	1b8b8 <crc32@@Base+0x1e60>
   1bdd8:	mov	r9, #10
   1bddc:	mov	r8, #5
   1bde0:	b	1ba64 <crc32@@Base+0x200c>
   1bde4:	cmp	r9, #10
   1bde8:	bne	1ba64 <crc32@@Base+0x200c>
   1bdec:	movw	r6, #68	; 0x44
   1bdf0:	movt	r6, #5
   1bdf4:	b	1bd64 <crc32@@Base+0x230c>
   1bdf8:	ldr	fp, [sp, #12]
   1bdfc:	movw	r2, #68	; 0x44
   1be00:	movt	r2, #5
   1be04:	mov	r3, r7
   1be08:	ldr	r0, [sp, #20]
   1be0c:	ldr	r4, [r2, #36]	; 0x24
   1be10:	mov	r2, fp
   1be14:	ldr	r1, [sp, #16]
   1be18:	blx	r4
   1be1c:	ldr	r0, [sp, #24]
   1be20:	bl	12620 <fclose@plt>
   1be24:	movw	r3, #62572	; 0xf46c
   1be28:	movt	r3, #4
   1be2c:	ldr	r3, [r3, #272]	; 0x110
   1be30:	cmn	r3, #1
   1be34:	beq	1c010 <crc32@@Base+0x25b8>
   1be38:	ldr	r3, [sp, #32]
   1be3c:	ldr	r2, [sp, #148]	; 0x94
   1be40:	ldr	r0, [sp, #16]
   1be44:	ldr	r3, [r3]
   1be48:	cmp	r2, r3
   1be4c:	bne	1c00c <crc32@@Base+0x25b4>
   1be50:	add	sp, sp, #156	; 0x9c
   1be54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be58:	mov	r4, #0
   1be5c:	add	r2, sp, #48	; 0x30
   1be60:	mov	r0, r4
   1be64:	mov	r1, r5
   1be68:	b	1bbec <crc32@@Base+0x2194>
   1be6c:	ldr	fp, [sp, #12]
   1be70:	movw	r2, #65196	; 0xfeac
   1be74:	movt	r2, #4
   1be78:	str	r4, [sp, #4]
   1be7c:	mov	r1, #1
   1be80:	ldr	r0, [r2]
   1be84:	mov	r3, fp
   1be88:	movw	r2, #26276	; 0x66a4
   1be8c:	str	r7, [sp]
   1be90:	movt	r2, #3
   1be94:	bl	122d8 <__fprintf_chk@plt>
   1be98:	mov	r0, #1
   1be9c:	bl	12218 <exit@plt>
   1bea0:	movw	r3, #65196	; 0xfeac
   1bea4:	movt	r3, #4
   1bea8:	ldr	r5, [r3]
   1beac:	bl	126b0 <__errno_location@plt>
   1beb0:	ldr	r0, [r0]
   1beb4:	bl	12224 <strerror@plt>
   1beb8:	movw	r2, #26196	; 0x6654
   1bebc:	movt	r2, #3
   1bec0:	mov	r3, r4
   1bec4:	str	r0, [sp]
   1bec8:	mov	r1, sl
   1becc:	mov	r0, r5
   1bed0:	bl	122d8 <__fprintf_chk@plt>
   1bed4:	mov	r0, sl
   1bed8:	bl	12218 <exit@plt>
   1bedc:	movw	r3, #65196	; 0xfeac
   1bee0:	movt	r3, #4
   1bee4:	ldr	r5, [r3]
   1bee8:	bl	126b0 <__errno_location@plt>
   1beec:	ldr	r0, [r0]
   1bef0:	bl	12224 <strerror@plt>
   1bef4:	movw	r2, #26172	; 0x663c
   1bef8:	mov	r3, r4
   1befc:	movt	r2, #3
   1bf00:	b	1bec4 <crc32@@Base+0x246c>
   1bf04:	ldr	fp, [sp, #12]
   1bf08:	movw	r2, #65196	; 0xfeac
   1bf0c:	movt	r2, #4
   1bf10:	str	r7, [sp]
   1bf14:	mov	r1, #1
   1bf18:	ldr	r0, [r2]
   1bf1c:	mov	r3, fp
   1bf20:	movw	r2, #38500	; 0x9664
   1bf24:	movt	r2, #3
   1bf28:	bl	122d8 <__fprintf_chk@plt>
   1bf2c:	mov	r0, #1
   1bf30:	bl	12218 <exit@plt>
   1bf34:	ldr	fp, [sp, #12]
   1bf38:	movw	r1, #65196	; 0xfeac
   1bf3c:	movt	r1, #4
   1bf40:	str	r4, [sp, #4]
   1bf44:	str	r7, [sp]
   1bf48:	movw	r2, #38660	; 0x9704
   1bf4c:	ldr	r0, [r1]
   1bf50:	mov	r3, fp
   1bf54:	movt	r2, #3
   1bf58:	mov	r1, #1
   1bf5c:	bl	122d8 <__fprintf_chk@plt>
   1bf60:	mov	r0, #1
   1bf64:	bl	12218 <exit@plt>
   1bf68:	ldr	fp, [sp, #12]
   1bf6c:	movw	r1, #65196	; 0xfeac
   1bf70:	movt	r1, #4
   1bf74:	str	r4, [sp, #4]
   1bf78:	str	r7, [sp]
   1bf7c:	movw	r2, #38596	; 0x96c4
   1bf80:	ldr	r0, [r1]
   1bf84:	mov	r3, fp
   1bf88:	movt	r2, #3
   1bf8c:	mov	r1, #1
   1bf90:	bl	122d8 <__fprintf_chk@plt>
   1bf94:	mov	r0, #1
   1bf98:	bl	12218 <exit@plt>
   1bf9c:	ldr	fp, [sp, #12]
   1bfa0:	movw	r1, #65196	; 0xfeac
   1bfa4:	movt	r1, #4
   1bfa8:	str	r3, [sp, #4]
   1bfac:	str	r7, [sp]
   1bfb0:	movw	r2, #38748	; 0x975c
   1bfb4:	ldr	r0, [r1]
   1bfb8:	mov	r3, fp
   1bfbc:	movt	r2, #3
   1bfc0:	mov	r1, #1
   1bfc4:	bl	122d8 <__fprintf_chk@plt>
   1bfc8:	mov	r0, #1
   1bfcc:	bl	12218 <exit@plt>
   1bfd0:	movw	r0, #38716	; 0x973c
   1bfd4:	movt	r0, #3
   1bfd8:	bl	12290 <puts@plt>
   1bfdc:	mov	r0, sl
   1bfe0:	bl	12218 <exit@plt>
   1bfe4:	movw	r3, #65196	; 0xfeac
   1bfe8:	movt	r3, #4
   1bfec:	ldr	r5, [r3]
   1bff0:	bl	126b0 <__errno_location@plt>
   1bff4:	ldr	r0, [r0]
   1bff8:	bl	12224 <strerror@plt>
   1bffc:	movw	r2, #27776	; 0x6c80
   1c000:	mov	r3, r4
   1c004:	movt	r2, #3
   1c008:	b	1bec4 <crc32@@Base+0x246c>
   1c00c:	bl	124b8 <__stack_chk_fail@plt>
   1c010:	movw	r1, #65196	; 0xfeac
   1c014:	movt	r1, #4
   1c018:	mov	r3, fp
   1c01c:	movw	r2, #38800	; 0x9790
   1c020:	ldr	r0, [r1]
   1c024:	movt	r2, #3
   1c028:	mov	r1, #1
   1c02c:	bl	122d8 <__fprintf_chk@plt>
   1c030:	mov	r0, #1
   1c034:	bl	12218 <exit@plt>
   1c038:	movw	r1, #65196	; 0xfeac
   1c03c:	movt	r1, #4
   1c040:	mov	r3, fp
   1c044:	movw	r2, #38444	; 0x962c
   1c048:	ldr	r0, [r1]
   1c04c:	movt	r2, #3
   1c050:	mov	r1, #1
   1c054:	bl	122d8 <__fprintf_chk@plt>
   1c058:	mov	r0, #1
   1c05c:	bl	12218 <exit@plt>
   1c060:	muleq	r4, r4, r4
   1c064:	andeq	pc, r4, r0, lsl #11
   1c068:	andeq	pc, r4, ip, lsl r5	; <UNPREDICTABLE>
   1c06c:	push	{r4, r5, r6, r7, r8, lr}
   1c070:	movw	r4, #68	; 0x44
   1c074:	movw	r5, #62572	; 0xf46c
   1c078:	movt	r4, #5
   1c07c:	movt	r5, #4
   1c080:	mov	r8, r0
   1c084:	mov	r6, r3
   1c088:	mov	r2, #1
   1c08c:	mov	r7, r1
   1c090:	str	r2, [r4, #24]
   1c094:	mvn	r3, #0
   1c098:	str	r3, [r5, #272]	; 0x110
   1c09c:	mov	r3, #0
   1c0a0:	str	r3, [r5]
   1c0a4:	bl	1b704 <crc32@@Base+0x1cac>
   1c0a8:	ldr	r1, [r6, #64]	; 0x40
   1c0ac:	mov	r0, r8
   1c0b0:	bl	1b84c <crc32@@Base+0x1df4>
   1c0b4:	ldr	r3, [r4, #24]
   1c0b8:	cmp	r3, #1
   1c0bc:	moveq	r2, #28
   1c0c0:	mov	r1, r0
   1c0c4:	beq	1c0e0 <crc32@@Base+0x2688>
   1c0c8:	ldr	r0, [r4, #48]	; 0x30
   1c0cc:	mov	r3, #44	; 0x2c
   1c0d0:	movt	r3, #1
   1c0d4:	movw	r2, #1816	; 0x718
   1c0d8:	cmp	r0, #0
   1c0dc:	movne	r2, r3
   1c0e0:	ldr	r3, [r5, #272]	; 0x110
   1c0e4:	ldr	r0, [r4, #4]
   1c0e8:	add	r2, r3, r2
   1c0ec:	cmp	r2, r0
   1c0f0:	mov	r0, r8
   1c0f4:	strhi	r2, [r4, #4]
   1c0f8:	ldr	r8, [r4, #40]	; 0x28
   1c0fc:	ldr	r2, [r6, #60]	; 0x3c
   1c100:	blx	r8
   1c104:	ldr	r3, [r5, #272]	; 0x110
   1c108:	ldr	r0, [r7, #44]	; 0x2c
   1c10c:	add	r3, r3, #4080	; 0xff0
   1c110:	ldr	r1, [r4, #12]
   1c114:	add	r3, r3, #15
   1c118:	ldr	r2, [r4, #8]
   1c11c:	add	r3, r3, r0
   1c120:	cmp	r1, #0
   1c124:	bic	r3, r3, #4080	; 0xff0
   1c128:	bic	r3, r3, #15
   1c12c:	str	r3, [r2]
   1c130:	popeq	{r4, r5, r6, r7, r8, pc}
   1c134:	ldr	ip, [r5]
   1c138:	cmp	ip, #0
   1c13c:	popeq	{r4, r5, r6, r7, r8, pc}
   1c140:	ldr	r0, [r6, #60]	; 0x3c
   1c144:	ldr	lr, [r4, #4]
   1c148:	sub	r0, r0, lr
   1c14c:	add	r3, r0, r3
   1c150:	str	r3, [r1]
   1c154:	ldr	r3, [r2]
   1c158:	add	ip, r3, ip
   1c15c:	str	ip, [r2]
   1c160:	pop	{r4, r5, r6, r7, r8, pc}
   1c164:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c168:	movw	r6, #61168	; 0xeef0
   1c16c:	movt	r6, #4
   1c170:	sub	sp, sp, #108	; 0x6c
   1c174:	movw	r4, #68	; 0x44
   1c178:	movw	r5, #62572	; 0xf46c
   1c17c:	ldr	r3, [r6]
   1c180:	movt	r4, #5
   1c184:	movt	r5, #4
   1c188:	mov	r7, r0
   1c18c:	mov	r8, r1
   1c190:	mov	r2, #44	; 0x2c
   1c194:	mov	r1, #0
   1c198:	movt	r2, #1
   1c19c:	movw	r0, #120	; 0x78
   1c1a0:	movt	r0, #5
   1c1a4:	str	r3, [sp, #100]	; 0x64
   1c1a8:	ldr	r9, [r7, #72]	; 0x48
   1c1ac:	bl	12308 <memset@plt>
   1c1b0:	mvn	r2, #0
   1c1b4:	mov	r3, #1
   1c1b8:	str	r2, [r5, #272]	; 0x110
   1c1bc:	str	r3, [r4, #24]
   1c1c0:	mov	r3, #0
   1c1c4:	str	r3, [r5]
   1c1c8:	bl	1b704 <crc32@@Base+0x1cac>
   1c1cc:	ldr	r1, [r7, #64]	; 0x40
   1c1d0:	movw	r0, #120	; 0x78
   1c1d4:	movt	r0, #5
   1c1d8:	bl	1b84c <crc32@@Base+0x1df4>
   1c1dc:	ldr	r3, [r4, #24]
   1c1e0:	cmp	r3, #1
   1c1e4:	moveq	r2, #760	; 0x2f8
   1c1e8:	beq	1c204 <crc32@@Base+0x27ac>
   1c1ec:	ldr	r1, [r4, #48]	; 0x30
   1c1f0:	movw	r3, #1816	; 0x718
   1c1f4:	mov	r2, #44	; 0x2c
   1c1f8:	movt	r2, #1
   1c1fc:	cmp	r1, #0
   1c200:	moveq	r2, r3
   1c204:	ldr	r0, [r5, #272]	; 0x110
   1c208:	ldr	r3, [r4, #4]
   1c20c:	add	r1, r0, r2
   1c210:	cmp	r1, r3
   1c214:	bhi	1c288 <crc32@@Base+0x2830>
   1c218:	sub	r4, r3, r0
   1c21c:	cmp	r2, r4
   1c220:	bhi	1c294 <crc32@@Base+0x283c>
   1c224:	mov	r1, #1
   1c228:	mov	r0, r4
   1c22c:	bl	1253c <calloc@plt>
   1c230:	cmp	r0, #0
   1c234:	beq	1c304 <crc32@@Base+0x28ac>
   1c238:	str	r0, [r8, #8]
   1c23c:	add	r2, sp, #8
   1c240:	str	r4, [r8, #4]
   1c244:	mov	r1, r9
   1c248:	mov	r0, #3
   1c24c:	bl	12644 <__xstat@plt>
   1c250:	cmp	r0, #0
   1c254:	blt	1c2c0 <crc32@@Base+0x2868>
   1c258:	ldr	r0, [sp, #52]	; 0x34
   1c25c:	ldr	r1, [sp, #100]	; 0x64
   1c260:	add	r3, r0, #4080	; 0xff0
   1c264:	ldr	r2, [r6]
   1c268:	add	r3, r3, #15
   1c26c:	bic	r3, r3, #4080	; 0xff0
   1c270:	cmp	r1, r2
   1c274:	bic	r3, r3, #15
   1c278:	sub	r0, r3, r0
   1c27c:	bne	1c2bc <crc32@@Base+0x2864>
   1c280:	add	sp, sp, #108	; 0x6c
   1c284:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c288:	str	r1, [r4, #4]
   1c28c:	mov	r4, r2
   1c290:	b	1c224 <crc32@@Base+0x27cc>
   1c294:	movw	r1, #65196	; 0xfeac
   1c298:	movt	r1, #4
   1c29c:	ldr	r3, [r7, #80]	; 0x50
   1c2a0:	movw	r2, #38832	; 0x97b0
   1c2a4:	ldr	r0, [r1]
   1c2a8:	movt	r2, #3
   1c2ac:	mov	r1, #1
   1c2b0:	bl	122d8 <__fprintf_chk@plt>
   1c2b4:	mov	r0, #1
   1c2b8:	bl	12218 <exit@plt>
   1c2bc:	bl	124b8 <__stack_chk_fail@plt>
   1c2c0:	movw	r2, #65196	; 0xfeac
   1c2c4:	movt	r2, #4
   1c2c8:	ldr	r5, [r7, #80]	; 0x50
   1c2cc:	ldr	r4, [r2]
   1c2d0:	bl	126b0 <__errno_location@plt>
   1c2d4:	ldr	r0, [r0]
   1c2d8:	bl	12224 <strerror@plt>
   1c2dc:	mov	r3, r5
   1c2e0:	str	r9, [sp]
   1c2e4:	movw	r2, #26192	; 0x6650
   1c2e8:	mov	r1, #1
   1c2ec:	movt	r2, #3
   1c2f0:	str	r0, [sp, #4]
   1c2f4:	mov	r0, r4
   1c2f8:	bl	122d8 <__fprintf_chk@plt>
   1c2fc:	mov	r0, #1
   1c300:	bl	12218 <exit@plt>
   1c304:	movw	r2, #65196	; 0xfeac
   1c308:	movt	r2, #4
   1c30c:	ldr	r5, [r7, #80]	; 0x50
   1c310:	ldr	r4, [r2]
   1c314:	bl	126b0 <__errno_location@plt>
   1c318:	ldr	r0, [r0]
   1c31c:	bl	12224 <strerror@plt>
   1c320:	mov	r3, r5
   1c324:	movw	r2, #26216	; 0x6668
   1c328:	mov	r1, #1
   1c32c:	movt	r2, #3
   1c330:	str	r0, [sp]
   1c334:	mov	r0, r4
   1c338:	bl	122d8 <__fprintf_chk@plt>
   1c33c:	mov	r0, #1
   1c340:	bl	12218 <exit@plt>
   1c344:	mov	r0, #0
   1c348:	bx	lr
   1c34c:	bx	lr
   1c350:	bx	lr
   1c354:	subs	r0, r0, #38	; 0x26
   1c358:	movne	r0, #1
   1c35c:	bx	lr
   1c360:	push	{r4, r5, r6, lr}
   1c364:	mov	r5, r1
   1c368:	sub	sp, sp, #8
   1c36c:	mov	r6, r0
   1c370:	mov	r1, #0
   1c374:	mov	r0, r5
   1c378:	bl	12458 <open@plt>
   1c37c:	subs	r4, r0, #0
   1c380:	blt	1c3ac <crc32@@Base+0x2954>
   1c384:	mov	r2, r6
   1c388:	mov	r1, r4
   1c38c:	mov	r0, #3
   1c390:	bl	12578 <__fxstat@plt>
   1c394:	cmp	r0, #0
   1c398:	blt	1c3e8 <crc32@@Base+0x2990>
   1c39c:	mov	r0, r4
   1c3a0:	add	sp, sp, #8
   1c3a4:	pop	{r4, r5, r6, lr}
   1c3a8:	b	12338 <close@plt>
   1c3ac:	movw	r3, #65196	; 0xfeac
   1c3b0:	movt	r3, #4
   1c3b4:	ldr	r4, [r3]
   1c3b8:	bl	126b0 <__errno_location@plt>
   1c3bc:	ldr	r0, [r0]
   1c3c0:	bl	12224 <strerror@plt>
   1c3c4:	movw	r2, #39384	; 0x99d8
   1c3c8:	movt	r2, #3
   1c3cc:	mov	r3, r5
   1c3d0:	mov	r1, #1
   1c3d4:	str	r0, [sp]
   1c3d8:	mov	r0, r4
   1c3dc:	bl	122d8 <__fprintf_chk@plt>
   1c3e0:	mov	r0, #1
   1c3e4:	bl	12218 <exit@plt>
   1c3e8:	movw	r3, #65196	; 0xfeac
   1c3ec:	movt	r3, #4
   1c3f0:	ldr	r4, [r3]
   1c3f4:	bl	126b0 <__errno_location@plt>
   1c3f8:	ldr	r0, [r0]
   1c3fc:	bl	12224 <strerror@plt>
   1c400:	movw	r2, #39404	; 0x99ec
   1c404:	mov	r3, r5
   1c408:	mov	r1, #1
   1c40c:	movt	r2, #3
   1c410:	b	1c3d4 <crc32@@Base+0x297c>
   1c414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c418:	movw	r4, #61168	; 0xeef0
   1c41c:	sub	sp, sp, #16384	; 0x4000
   1c420:	movt	r4, #4
   1c424:	sub	sp, sp, #108	; 0x6c
   1c428:	mov	sl, r1
   1c42c:	mov	fp, r2
   1c430:	ldr	r1, [r4]
   1c434:	add	r2, sp, #16384	; 0x4000
   1c438:	cmp	r3, #16384	; 0x4000
   1c43c:	add	r2, r2, #100	; 0x64
   1c440:	str	r1, [r2]
   1c444:	bgt	1c558 <crc32@@Base+0x2b00>
   1c448:	mov	r2, #16384	; 0x4000
   1c44c:	mov	r1, #0
   1c450:	mov	r9, r0
   1c454:	add	r0, sp, #100	; 0x64
   1c458:	mov	r6, r3
   1c45c:	bl	12308 <memset@plt>
   1c460:	mov	r1, #0
   1c464:	mov	r0, sl
   1c468:	bl	12458 <open@plt>
   1c46c:	subs	r7, r0, #0
   1c470:	blt	1c5bc <crc32@@Base+0x2b64>
   1c474:	add	r2, sp, #8
   1c478:	mov	r1, r7
   1c47c:	mov	r0, #3
   1c480:	bl	12578 <__fxstat@plt>
   1c484:	cmp	r0, #0
   1c488:	blt	1c580 <crc32@@Base+0x2b28>
   1c48c:	ldr	r1, [sp, #52]	; 0x34
   1c490:	cmp	r1, #0
   1c494:	beq	1c52c <crc32@@Base+0x2ad4>
   1c498:	mov	r5, #0
   1c49c:	mov	r3, #1
   1c4a0:	str	r7, [sp]
   1c4a4:	mov	r0, r5
   1c4a8:	str	r5, [sp, #4]
   1c4ac:	mov	r2, r3
   1c4b0:	bl	12410 <mmap@plt>
   1c4b4:	cmn	r0, #1
   1c4b8:	mov	r8, r0
   1c4bc:	beq	1c5e8 <crc32@@Base+0x2b90>
   1c4c0:	mov	r2, r5
   1c4c4:	mov	r1, fp
   1c4c8:	mov	r0, r9
   1c4cc:	ldr	sl, [sp, #52]	; 0x34
   1c4d0:	bl	12518 <lseek@plt>
   1c4d4:	cmp	r0, #0
   1c4d8:	blt	1c684 <crc32@@Base+0x2c2c>
   1c4dc:	mov	r2, sl
   1c4e0:	mov	r1, r8
   1c4e4:	mov	r0, r9
   1c4e8:	bl	1262c <write@plt>
   1c4ec:	cmp	sl, r0
   1c4f0:	bne	1c614 <crc32@@Base+0x2bbc>
   1c4f4:	sub	r5, r6, #1
   1c4f8:	rsb	r6, r6, #0
   1c4fc:	add	r5, r5, sl
   1c500:	add	r1, sp, #100	; 0x64
   1c504:	and	r5, r5, r6
   1c508:	mov	r0, r9
   1c50c:	sub	r5, r5, sl
   1c510:	mov	r2, r5
   1c514:	bl	1262c <write@plt>
   1c518:	cmp	r5, r0
   1c51c:	bne	1c64c <crc32@@Base+0x2bf4>
   1c520:	ldr	r1, [sp, #52]	; 0x34
   1c524:	mov	r0, r8
   1c528:	bl	12608 <munmap@plt>
   1c52c:	mov	r0, r7
   1c530:	bl	12338 <close@plt>
   1c534:	add	r3, sp, #16384	; 0x4000
   1c538:	add	r3, r3, #100	; 0x64
   1c53c:	ldr	r2, [r3]
   1c540:	ldr	r3, [r4]
   1c544:	cmp	r2, r3
   1c548:	bne	1c57c <crc32@@Base+0x2b24>
   1c54c:	add	sp, sp, #16384	; 0x4000
   1c550:	add	sp, sp, #108	; 0x6c
   1c554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c558:	movw	r0, #65196	; 0xfeac
   1c55c:	movt	r0, #4
   1c560:	movw	r2, #39424	; 0x9a00
   1c564:	mov	r1, #1
   1c568:	ldr	r0, [r0]
   1c56c:	movt	r2, #3
   1c570:	bl	122d8 <__fprintf_chk@plt>
   1c574:	mov	r0, #1
   1c578:	bl	12218 <exit@plt>
   1c57c:	bl	124b8 <__stack_chk_fail@plt>
   1c580:	movw	r3, #65196	; 0xfeac
   1c584:	movt	r3, #4
   1c588:	ldr	r4, [r3]
   1c58c:	bl	126b0 <__errno_location@plt>
   1c590:	ldr	r0, [r0]
   1c594:	bl	12224 <strerror@plt>
   1c598:	movw	r2, #26196	; 0x6654
   1c59c:	movt	r2, #3
   1c5a0:	mov	r3, sl
   1c5a4:	mov	r1, #1
   1c5a8:	str	r0, [sp]
   1c5ac:	mov	r0, r4
   1c5b0:	bl	122d8 <__fprintf_chk@plt>
   1c5b4:	mov	r0, #1
   1c5b8:	bl	12218 <exit@plt>
   1c5bc:	movw	r3, #65196	; 0xfeac
   1c5c0:	movt	r3, #4
   1c5c4:	ldr	r4, [r3]
   1c5c8:	bl	126b0 <__errno_location@plt>
   1c5cc:	ldr	r0, [r0]
   1c5d0:	bl	12224 <strerror@plt>
   1c5d4:	movw	r2, #26172	; 0x663c
   1c5d8:	mov	r3, sl
   1c5dc:	mov	r1, #1
   1c5e0:	movt	r2, #3
   1c5e4:	b	1c5a8 <crc32@@Base+0x2b50>
   1c5e8:	movw	r3, #65196	; 0xfeac
   1c5ec:	movt	r3, #4
   1c5f0:	ldr	r4, [r3]
   1c5f4:	bl	126b0 <__errno_location@plt>
   1c5f8:	ldr	r0, [r0]
   1c5fc:	bl	12224 <strerror@plt>
   1c600:	movw	r2, #27776	; 0x6c80
   1c604:	mov	r3, sl
   1c608:	mov	r1, #1
   1c60c:	movt	r2, #3
   1c610:	b	1c5a8 <crc32@@Base+0x2b50>
   1c614:	movw	r3, #65196	; 0xfeac
   1c618:	movt	r3, #4
   1c61c:	ldr	r4, [r3]
   1c620:	bl	126b0 <__errno_location@plt>
   1c624:	ldr	r0, [r0]
   1c628:	bl	12224 <strerror@plt>
   1c62c:	movw	r2, #39476	; 0x9a34
   1c630:	mov	r1, #1
   1c634:	movt	r2, #3
   1c638:	mov	r3, r0
   1c63c:	mov	r0, r4
   1c640:	bl	122d8 <__fprintf_chk@plt>
   1c644:	mov	r0, #1
   1c648:	bl	12218 <exit@plt>
   1c64c:	movw	r3, #65196	; 0xfeac
   1c650:	movt	r3, #4
   1c654:	ldr	r4, [r3]
   1c658:	bl	126b0 <__errno_location@plt>
   1c65c:	ldr	r0, [r0]
   1c660:	bl	12224 <strerror@plt>
   1c664:	movw	r2, #39492	; 0x9a44
   1c668:	mov	r1, #1
   1c66c:	movt	r2, #3
   1c670:	mov	r3, r0
   1c674:	mov	r0, r4
   1c678:	bl	122d8 <__fprintf_chk@plt>
   1c67c:	mov	r0, #1
   1c680:	bl	12218 <exit@plt>
   1c684:	movw	r3, #65196	; 0xfeac
   1c688:	movt	r3, #4
   1c68c:	ldr	r4, [r3]
   1c690:	bl	126b0 <__errno_location@plt>
   1c694:	ldr	r0, [r0]
   1c698:	bl	12224 <strerror@plt>
   1c69c:	movw	r3, #39336	; 0x99a8
   1c6a0:	movw	r2, #39456	; 0x9a20
   1c6a4:	movt	r3, #3
   1c6a8:	movt	r2, #3
   1c6ac:	mov	r1, #1
   1c6b0:	b	1c5a8 <crc32@@Base+0x2b50>
   1c6b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c6b8:	movw	r8, #61168	; 0xeef0
   1c6bc:	movt	r8, #4
   1c6c0:	ldr	r3, [r0, #4]
   1c6c4:	sub	sp, sp, #668	; 0x29c
   1c6c8:	mov	r4, r0
   1c6cc:	ldr	r2, [r8]
   1c6d0:	cmp	r3, #0
   1c6d4:	mov	r6, r1
   1c6d8:	add	r5, sp, #148	; 0x94
   1c6dc:	str	r2, [sp, #660]	; 0x294
   1c6e0:	bne	1c7b8 <crc32@@Base+0x2d60>
   1c6e4:	mov	r2, #384	; 0x180
   1c6e8:	movw	r3, #39512	; 0x9a58
   1c6ec:	str	r2, [sp]
   1c6f0:	mov	r0, r5
   1c6f4:	movt	r3, #3
   1c6f8:	mov	r2, #512	; 0x200
   1c6fc:	mov	r1, #1
   1c700:	bl	12704 <__sprintf_chk@plt>
   1c704:	ldr	r3, [r4, #24]
   1c708:	add	r7, r4, #32
   1c70c:	mov	r2, #64	; 0x40
   1c710:	mov	r1, #0
   1c714:	orr	r3, r3, #256	; 0x100
   1c718:	mov	r0, r7
   1c71c:	str	r3, [r4, #24]
   1c720:	bl	12308 <memset@plt>
   1c724:	mov	r0, r5
   1c728:	movw	r1, #50292	; 0xc474
   1c72c:	movt	r1, #3
   1c730:	bl	120c8 <popen@plt>
   1c734:	subs	r9, r0, #0
   1c738:	beq	1c830 <crc32@@Base+0x2dd8>
   1c73c:	mov	r2, r9
   1c740:	mov	r1, #97	; 0x61
   1c744:	add	r0, sp, #16
   1c748:	bl	1256c <fgets@plt>
   1c74c:	cmp	r0, #0
   1c750:	beq	1c808 <crc32@@Base+0x2db0>
   1c754:	movw	r6, #39704	; 0x9b18
   1c758:	add	r5, sp, #16
   1c75c:	movt	r6, #3
   1c760:	mov	r4, #0
   1c764:	b	1c788 <crc32@@Base+0x2d30>
   1c768:	mov	r0, r5
   1c76c:	add	r2, r7, r4
   1c770:	mov	r1, r6
   1c774:	add	r5, r5, #2
   1c778:	bl	126c8 <sscanf@plt>
   1c77c:	cmp	r0, #0
   1c780:	blt	1c7e0 <crc32@@Base+0x2d88>
   1c784:	add	r4, r4, #1
   1c788:	add	r0, sp, #16
   1c78c:	bl	125e4 <strlen@plt>
   1c790:	cmp	r4, r0, lsr #1
   1c794:	bcc	1c768 <crc32@@Base+0x2d10>
   1c798:	mov	r0, r9
   1c79c:	bl	12500 <pclose@plt>
   1c7a0:	ldr	r2, [sp, #660]	; 0x294
   1c7a4:	ldr	r3, [r8]
   1c7a8:	cmp	r2, r3
   1c7ac:	bne	1c858 <crc32@@Base+0x2e00>
   1c7b0:	add	sp, sp, #668	; 0x29c
   1c7b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c7b8:	stm	sp, {r3, r6}
   1c7bc:	mov	r0, r5
   1c7c0:	mov	r3, #384	; 0x180
   1c7c4:	mov	r2, #512	; 0x200
   1c7c8:	str	r3, [sp, #8]
   1c7cc:	mov	r1, #1
   1c7d0:	movw	r3, #39532	; 0x9a6c
   1c7d4:	movt	r3, #3
   1c7d8:	bl	12704 <__sprintf_chk@plt>
   1c7dc:	b	1c704 <crc32@@Base+0x2cac>
   1c7e0:	movw	r1, #65196	; 0xfeac
   1c7e4:	movt	r1, #4
   1c7e8:	mov	r3, r0
   1c7ec:	movw	r2, #39712	; 0x9b20
   1c7f0:	ldr	r0, [r1]
   1c7f4:	movt	r2, #3
   1c7f8:	mov	r1, #1
   1c7fc:	bl	122d8 <__fprintf_chk@plt>
   1c800:	mov	r0, #1
   1c804:	bl	12218 <exit@plt>
   1c808:	movw	r1, #65196	; 0xfeac
   1c80c:	movt	r1, #4
   1c810:	mov	r3, r6
   1c814:	movw	r2, #39676	; 0x9afc
   1c818:	ldr	r0, [r1]
   1c81c:	movt	r2, #3
   1c820:	mov	r1, #1
   1c824:	bl	122d8 <__fprintf_chk@plt>
   1c828:	mov	r0, #1
   1c82c:	bl	12218 <exit@plt>
   1c830:	movw	r3, #65196	; 0xfeac
   1c834:	movt	r3, #4
   1c838:	movw	r0, #39648	; 0x9ae0
   1c83c:	mov	r2, #27
   1c840:	ldr	r3, [r3]
   1c844:	movt	r0, #3
   1c848:	mov	r1, #1
   1c84c:	bl	1259c <fwrite@plt>
   1c850:	mov	r0, #1
   1c854:	bl	12218 <exit@plt>
   1c858:	bl	124b8 <__stack_chk_fail@plt>
   1c85c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c860:	movw	r6, #61168	; 0xeef0
   1c864:	sub	sp, sp, #4160	; 0x1040
   1c868:	movt	r6, #4
   1c86c:	sub	sp, sp, #52	; 0x34
   1c870:	mov	r4, #0
   1c874:	ldr	r3, [r6]
   1c878:	add	ip, sp, #4160	; 0x1040
   1c87c:	add	ip, ip, #44	; 0x2c
   1c880:	mov	r9, r1
   1c884:	mov	r2, #4096	; 0x1000
   1c888:	mov	r1, r4
   1c88c:	mov	r5, r0
   1c890:	add	r0, sp, #108	; 0x6c
   1c894:	str	r3, [ip]
   1c898:	str	r4, [sp, #12]
   1c89c:	bl	12308 <memset@plt>
   1c8a0:	mov	r1, r4
   1c8a4:	mov	r0, r9
   1c8a8:	bl	12458 <open@plt>
   1c8ac:	subs	r7, r0, #0
   1c8b0:	blt	1cb08 <crc32@@Base+0x30b0>
   1c8b4:	mov	r1, r7
   1c8b8:	add	r2, sp, #16
   1c8bc:	mov	r0, #3
   1c8c0:	bl	12578 <__fxstat@plt>
   1c8c4:	cmp	r0, #0
   1c8c8:	blt	1cadc <crc32@@Base+0x3084>
   1c8cc:	ldr	r1, [sp, #60]	; 0x3c
   1c8d0:	cmp	r1, #0
   1c8d4:	beq	1ca0c <crc32@@Base+0x2fb4>
   1c8d8:	mov	r3, #1
   1c8dc:	str	r4, [sp, #4]
   1c8e0:	str	r7, [sp]
   1c8e4:	mov	r2, r3
   1c8e8:	mov	r0, r4
   1c8ec:	bl	12410 <mmap@plt>
   1c8f0:	cmn	r0, #1
   1c8f4:	mov	r8, r0
   1c8f8:	beq	1cab0 <crc32@@Base+0x3058>
   1c8fc:	mov	r2, r4
   1c900:	mov	r1, r4
   1c904:	mov	r0, r5
   1c908:	ldr	r4, [sp, #60]	; 0x3c
   1c90c:	bl	12518 <lseek@plt>
   1c910:	cmp	r0, #0
   1c914:	blt	1ca74 <crc32@@Base+0x301c>
   1c918:	mov	r2, r4
   1c91c:	mov	r1, r8
   1c920:	mov	r0, r5
   1c924:	bl	1262c <write@plt>
   1c928:	cmp	r4, r0
   1c92c:	bne	1ca3c <crc32@@Base+0x2fe4>
   1c930:	rsbs	r3, r4, #0
   1c934:	and	r2, r4, #3
   1c938:	and	r3, r3, #3
   1c93c:	rsbpl	r2, r3, #0
   1c940:	cmn	r4, #1
   1c944:	moveq	r3, #1
   1c948:	movne	r3, #0
   1c94c:	cmp	r2, #0
   1c950:	moveq	r3, #0
   1c954:	cmp	r3, #0
   1c958:	bne	1c9e4 <crc32@@Base+0x2f8c>
   1c95c:	cmn	r4, #1
   1c960:	bge	1ca00 <crc32@@Base+0x2fa8>
   1c964:	rsb	r4, r4, #0
   1c968:	b	1c98c <crc32@@Base+0x2f34>
   1c96c:	mov	r2, #4096	; 0x1000
   1c970:	add	r1, sp, #108	; 0x6c
   1c974:	mov	r0, r5
   1c978:	bl	1262c <write@plt>
   1c97c:	cmp	r0, #4096	; 0x1000
   1c980:	bne	1c9ac <crc32@@Base+0x2f54>
   1c984:	subs	r4, r4, #4096	; 0x1000
   1c988:	beq	1ca00 <crc32@@Base+0x2fa8>
   1c98c:	cmp	r4, #4096	; 0x1000
   1c990:	bge	1c96c <crc32@@Base+0x2f14>
   1c994:	add	r1, sp, #108	; 0x6c
   1c998:	mov	r0, r5
   1c99c:	mov	r2, r4
   1c9a0:	bl	1262c <write@plt>
   1c9a4:	cmp	r0, r4
   1c9a8:	beq	1ca00 <crc32@@Base+0x2fa8>
   1c9ac:	movw	r3, #65196	; 0xfeac
   1c9b0:	movt	r3, #4
   1c9b4:	ldr	r4, [r3]
   1c9b8:	bl	126b0 <__errno_location@plt>
   1c9bc:	ldr	r0, [r0]
   1c9c0:	bl	12224 <strerror@plt>
   1c9c4:	movw	r2, #39492	; 0x9a44
   1c9c8:	mov	r1, #1
   1c9cc:	movt	r2, #3
   1c9d0:	mov	r3, r0
   1c9d4:	mov	r0, r4
   1c9d8:	bl	122d8 <__fprintf_chk@plt>
   1c9dc:	mov	r0, #1
   1c9e0:	bl	12218 <exit@plt>
   1c9e4:	rsb	r4, r2, #4
   1c9e8:	add	r1, sp, #12
   1c9ec:	mov	r0, r5
   1c9f0:	mov	r2, r4
   1c9f4:	bl	1262c <write@plt>
   1c9f8:	cmp	r4, r0
   1c9fc:	bne	1cb34 <crc32@@Base+0x30dc>
   1ca00:	ldr	r1, [sp, #60]	; 0x3c
   1ca04:	mov	r0, r8
   1ca08:	bl	12608 <munmap@plt>
   1ca0c:	mov	r0, r7
   1ca10:	bl	12338 <close@plt>
   1ca14:	add	r3, sp, #4160	; 0x1040
   1ca18:	add	r3, r3, #44	; 0x2c
   1ca1c:	ldr	r2, [r3]
   1ca20:	ldr	r3, [r6]
   1ca24:	cmp	r2, r3
   1ca28:	bne	1ca38 <crc32@@Base+0x2fe0>
   1ca2c:	add	sp, sp, #4160	; 0x1040
   1ca30:	add	sp, sp, #52	; 0x34
   1ca34:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ca38:	bl	124b8 <__stack_chk_fail@plt>
   1ca3c:	movw	r3, #65196	; 0xfeac
   1ca40:	movt	r3, #4
   1ca44:	ldr	r4, [r3]
   1ca48:	bl	126b0 <__errno_location@plt>
   1ca4c:	ldr	r0, [r0]
   1ca50:	bl	12224 <strerror@plt>
   1ca54:	movw	r2, #39476	; 0x9a34
   1ca58:	mov	r1, #1
   1ca5c:	movt	r2, #3
   1ca60:	mov	r3, r0
   1ca64:	mov	r0, r4
   1ca68:	bl	122d8 <__fprintf_chk@plt>
   1ca6c:	mov	r0, #1
   1ca70:	bl	12218 <exit@plt>
   1ca74:	movw	r3, #65196	; 0xfeac
   1ca78:	movt	r3, #4
   1ca7c:	ldr	r4, [r3]
   1ca80:	bl	126b0 <__errno_location@plt>
   1ca84:	ldr	r0, [r0]
   1ca88:	bl	12224 <strerror@plt>
   1ca8c:	ldr	r3, [pc, #216]	; 1cb6c <crc32@@Base+0x3114>
   1ca90:	movw	r2, #39456	; 0x9a20
   1ca94:	movt	r2, #3
   1ca98:	mov	r1, #1
   1ca9c:	str	r0, [sp]
   1caa0:	mov	r0, r4
   1caa4:	bl	122d8 <__fprintf_chk@plt>
   1caa8:	mov	r0, #1
   1caac:	bl	12218 <exit@plt>
   1cab0:	movw	r3, #65196	; 0xfeac
   1cab4:	movt	r3, #4
   1cab8:	ldr	r4, [r3]
   1cabc:	bl	126b0 <__errno_location@plt>
   1cac0:	ldr	r0, [r0]
   1cac4:	bl	12224 <strerror@plt>
   1cac8:	movw	r2, #27776	; 0x6c80
   1cacc:	mov	r3, r9
   1cad0:	mov	r1, #1
   1cad4:	movt	r2, #3
   1cad8:	b	1ca9c <crc32@@Base+0x3044>
   1cadc:	movw	r3, #65196	; 0xfeac
   1cae0:	movt	r3, #4
   1cae4:	ldr	r4, [r3]
   1cae8:	bl	126b0 <__errno_location@plt>
   1caec:	ldr	r0, [r0]
   1caf0:	bl	12224 <strerror@plt>
   1caf4:	movw	r2, #26196	; 0x6654
   1caf8:	mov	r3, r9
   1cafc:	mov	r1, #1
   1cb00:	movt	r2, #3
   1cb04:	b	1ca9c <crc32@@Base+0x3044>
   1cb08:	movw	r3, #65196	; 0xfeac
   1cb0c:	movt	r3, #4
   1cb10:	ldr	r4, [r3]
   1cb14:	bl	126b0 <__errno_location@plt>
   1cb18:	ldr	r0, [r0]
   1cb1c:	bl	12224 <strerror@plt>
   1cb20:	movw	r2, #26172	; 0x663c
   1cb24:	mov	r3, r9
   1cb28:	mov	r1, #1
   1cb2c:	movt	r2, #3
   1cb30:	b	1ca9c <crc32@@Base+0x3044>
   1cb34:	movw	r3, #65196	; 0xfeac
   1cb38:	movt	r3, #4
   1cb3c:	ldr	r4, [r3]
   1cb40:	bl	126b0 <__errno_location@plt>
   1cb44:	ldr	r0, [r0]
   1cb48:	bl	12224 <strerror@plt>
   1cb4c:	movw	r2, #39736	; 0x9b38
   1cb50:	mov	r1, #1
   1cb54:	movt	r2, #3
   1cb58:	mov	r3, r0
   1cb5c:	mov	r0, r4
   1cb60:	bl	122d8 <__fprintf_chk@plt>
   1cb64:	mov	r0, #1
   1cb68:	bl	12218 <exit@plt>
   1cb6c:			; <UNDEFINED> instruction: 0x000399bc
   1cb70:	push	{r4, r5, r6, r7, lr}
   1cb74:	movw	r4, #61168	; 0xeef0
   1cb78:	movt	r4, #4
   1cb7c:	sub	sp, sp, #108	; 0x6c
   1cb80:	mov	r1, #0
   1cb84:	mov	r7, r0
   1cb88:	ldr	r3, [r4]
   1cb8c:	str	r3, [sp, #100]	; 0x64
   1cb90:	bl	12458 <open@plt>
   1cb94:	subs	r5, r0, #0
   1cb98:	blt	1cc0c <crc32@@Base+0x31b4>
   1cb9c:	add	r2, sp, #8
   1cba0:	mov	r1, r5
   1cba4:	mov	r0, #3
   1cba8:	bl	12578 <__fxstat@plt>
   1cbac:	cmp	r0, #0
   1cbb0:	blt	1cc78 <crc32@@Base+0x3220>
   1cbb4:	mov	r6, #0
   1cbb8:	mov	r3, #1
   1cbbc:	ldr	r1, [sp, #52]	; 0x34
   1cbc0:	mov	r0, r6
   1cbc4:	stm	sp, {r5, r6}
   1cbc8:	mov	r2, r3
   1cbcc:	bl	12410 <mmap@plt>
   1cbd0:	cmn	r0, #1
   1cbd4:	beq	1cc4c <crc32@@Base+0x31f4>
   1cbd8:	ldr	r1, [sp, #52]	; 0x34
   1cbdc:	ldr	r7, [r0, #576]	; 0x240
   1cbe0:	bl	12608 <munmap@plt>
   1cbe4:	mov	r0, r5
   1cbe8:	bl	12338 <close@plt>
   1cbec:	ldr	r2, [sp, #100]	; 0x64
   1cbf0:	ldr	r3, [r4]
   1cbf4:	mov	r0, r7
   1cbf8:	mov	r1, r6
   1cbfc:	cmp	r2, r3
   1cc00:	bne	1cc48 <crc32@@Base+0x31f0>
   1cc04:	add	sp, sp, #108	; 0x6c
   1cc08:	pop	{r4, r5, r6, r7, pc}
   1cc0c:	movw	r3, #65196	; 0xfeac
   1cc10:	movt	r3, #4
   1cc14:	ldr	r4, [r3]
   1cc18:	bl	126b0 <__errno_location@plt>
   1cc1c:	ldr	r0, [r0]
   1cc20:	bl	12224 <strerror@plt>
   1cc24:	movw	r2, #26172	; 0x663c
   1cc28:	movt	r2, #3
   1cc2c:	mov	r3, r7
   1cc30:	mov	r1, #1
   1cc34:	str	r0, [sp]
   1cc38:	mov	r0, r4
   1cc3c:	bl	122d8 <__fprintf_chk@plt>
   1cc40:	mov	r0, #1
   1cc44:	bl	12218 <exit@plt>
   1cc48:	bl	124b8 <__stack_chk_fail@plt>
   1cc4c:	movw	r3, #65196	; 0xfeac
   1cc50:	movt	r3, #4
   1cc54:	ldr	r4, [r3]
   1cc58:	bl	126b0 <__errno_location@plt>
   1cc5c:	ldr	r0, [r0]
   1cc60:	bl	12224 <strerror@plt>
   1cc64:	movw	r2, #27776	; 0x6c80
   1cc68:	mov	r3, r7
   1cc6c:	mov	r1, #1
   1cc70:	movt	r2, #3
   1cc74:	b	1cc34 <crc32@@Base+0x31dc>
   1cc78:	movw	r3, #65196	; 0xfeac
   1cc7c:	movt	r3, #4
   1cc80:	ldr	r4, [r3]
   1cc84:	bl	126b0 <__errno_location@plt>
   1cc88:	ldr	r0, [r0]
   1cc8c:	bl	12224 <strerror@plt>
   1cc90:	movw	r2, #26196	; 0x6654
   1cc94:	mov	r3, r7
   1cc98:	mov	r1, #1
   1cc9c:	movt	r2, #3
   1cca0:	b	1cc34 <crc32@@Base+0x31dc>
   1cca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cca8:	mov	r4, r0
   1ccac:	ldrb	r0, [r0, #11]
   1ccb0:	sub	sp, sp, #20
   1ccb4:	ldr	sl, [r2]
   1ccb8:	mov	r5, r3
   1ccbc:	ldrd	r8, [r2, #24]
   1ccc0:	lsl	fp, r0, #7
   1ccc4:	add	r0, r4, r0, lsl #7
   1ccc8:	ldrd	r6, [r2, #32]
   1cccc:	mov	ip, r0
   1ccd0:	str	r1, [sp, #12]
   1ccd4:	str	r3, [ip, #16]
   1ccd8:	add	r0, r0, #16
   1ccdc:	ldr	r3, [sp, #56]	; 0x38
   1cce0:	ldr	r1, [sp, #60]	; 0x3c
   1cce4:	str	r3, [ip, #20]
   1cce8:	bl	1c6b4 <crc32@@Base+0x2c5c>
   1ccec:	sub	r2, sl, #2
   1ccf0:	cmp	r2, #15
   1ccf4:	ldrls	pc, [pc, r2, lsl #2]
   1ccf8:	b	1d08c <crc32@@Base+0x3634>
   1ccfc:	andeq	ip, r1, r0, lsr #27
   1cd00:	andeq	ip, r1, ip, ror lr
   1cd04:	andeq	ip, r1, r4, ror #29
   1cd08:	andeq	ip, r1, r4, ror #29
   1cd0c:	andeq	ip, r1, r4, asr pc
   1cd10:	andeq	sp, r1, ip, lsl #1
   1cd14:	andeq	sp, r1, ip, lsl #1
   1cd18:	andeq	sp, r1, ip, lsl #1
   1cd1c:	andeq	sp, r1, ip, lsl #1
   1cd20:	andeq	sp, r1, ip, lsl #1
   1cd24:	andeq	sp, r1, ip, lsl #1
   1cd28:	andeq	sp, r1, ip, lsl #1
   1cd2c:	ldrdeq	ip, [r1], -r4
   1cd30:	andeq	sp, r1, ip, lsl #1
   1cd34:	andeq	sp, r1, ip, lsl #1
   1cd38:	andeq	ip, r1, ip, lsr sp
   1cd3c:	add	r2, r4, fp
   1cd40:	movw	r3, #39772	; 0x9b5c
   1cd44:	movt	r3, #3
   1cd48:	lsl	r6, r6, #10
   1cd4c:	ldr	r1, [r2, #40]	; 0x28
   1cd50:	str	r8, [r2, #24]
   1cd54:	orr	r1, r1, #68	; 0x44
   1cd58:	str	r9, [r2, #28]
   1cd5c:	str	r6, [r2, #44]	; 0x2c
   1cd60:	str	r1, [r2, #40]	; 0x28
   1cd64:	ldr	r1, [sp, #56]	; 0x38
   1cd68:	movw	r2, #65200	; 0xfeb0
   1cd6c:	movt	r2, #4
   1cd70:	str	r1, [sp, #4]
   1cd74:	mov	r1, #1
   1cd78:	ldr	r0, [r2]
   1cd7c:	movw	r2, #39968	; 0x9c20
   1cd80:	str	r5, [sp]
   1cd84:	movt	r2, #3
   1cd88:	bl	122d8 <__fprintf_chk@plt>
   1cd8c:	ldrb	r3, [r4, #11]
   1cd90:	add	r3, r3, #1
   1cd94:	strb	r3, [r4, #11]
   1cd98:	add	sp, sp, #20
   1cd9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cda0:	movw	r1, #168	; 0xa8
   1cda4:	movt	r1, #6
   1cda8:	add	r3, r4, fp
   1cdac:	mov	r2, #0
   1cdb0:	ldr	r1, [r1, #4]
   1cdb4:	mvn	r6, #1
   1cdb8:	ldr	lr, [r3, #40]	; 0x28
   1cdbc:	strb	r2, [r3, #24]
   1cdc0:	lsr	r1, r1, #16
   1cdc4:	strb	r2, [r3, #25]
   1cdc8:	strb	r2, [r3, #28]
   1cdcc:	lsl	r1, r1, #16
   1cdd0:	strb	r2, [r3, #29]
   1cdd4:	orr	r1, r1, #19
   1cdd8:	strb	r2, [r3, #30]
   1cddc:	strb	r2, [r3, #31]
   1cde0:	orr	r1, r1, lr
   1cde4:	strb	r6, [r3, #26]
   1cde8:	mov	lr, #31
   1cdec:	str	r1, [r3, #40]	; 0x28
   1cdf0:	movw	r1, #39924	; 0x9bf4
   1cdf4:	strb	lr, [r3, #27]
   1cdf8:	movt	r1, #3
   1cdfc:	strb	r2, [r3, #32]
   1ce00:	strb	r2, [r3, #33]	; 0x21
   1ce04:	strb	r6, [r3, #34]	; 0x22
   1ce08:	strb	lr, [r3, #35]	; 0x23
   1ce0c:	strb	r2, [r3, #36]	; 0x24
   1ce10:	strb	r2, [r3, #37]	; 0x25
   1ce14:	strb	r2, [r3, #38]	; 0x26
   1ce18:	strb	r2, [r3, #39]	; 0x27
   1ce1c:	ldrb	r0, [r4, #11]
   1ce20:	add	r0, r0, #1
   1ce24:	uxtb	r0, r0
   1ce28:	strb	r0, [r4, #11]
   1ce2c:	add	r6, r4, r0, lsl #7
   1ce30:	add	r0, r6, #16
   1ce34:	ldr	r3, [r6, #40]	; 0x28
   1ce38:	orr	r3, r3, #21
   1ce3c:	str	r3, [r6, #40]	; 0x28
   1ce40:	bl	1c6b4 <crc32@@Base+0x2c5c>
   1ce44:	ldr	r3, [r6, #20]
   1ce48:	ldr	r0, [sp, #60]	; 0x3c
   1ce4c:	add	r3, r3, r5
   1ce50:	str	r3, [r6, #16]
   1ce54:	bl	1cb70 <crc32@@Base+0x3118>
   1ce58:	movw	r3, #39784	; 0x9b68
   1ce5c:	movt	r3, #3
   1ce60:	subs	r8, r0, #1
   1ce64:	str	r0, [r6, #32]
   1ce68:	sbc	r9, r1, #0
   1ce6c:	str	r1, [r6, #36]	; 0x24
   1ce70:	str	r8, [r6, #24]
   1ce74:	str	r9, [r6, #28]
   1ce78:	b	1cd64 <crc32@@Base+0x330c>
   1ce7c:	add	ip, r4, fp
   1ce80:	mov	r2, #0
   1ce84:	mov	lr, #32
   1ce88:	ldr	r3, [ip, #40]	; 0x28
   1ce8c:	strb	r2, [ip, #24]
   1ce90:	orr	r3, r3, #102	; 0x66
   1ce94:	strb	r2, [ip, #25]
   1ce98:	str	r3, [ip, #40]	; 0x28
   1ce9c:	mvn	r3, #63	; 0x3f
   1cea0:	strb	r2, [ip, #28]
   1cea4:	strb	r3, [ip, #26]
   1cea8:	movw	r3, #39756	; 0x9b4c
   1ceac:	strb	r2, [ip, #29]
   1ceb0:	movt	r3, #3
   1ceb4:	strb	r2, [ip, #30]
   1ceb8:	strb	r2, [ip, #31]
   1cebc:	strb	lr, [ip, #27]
   1cec0:	strb	r2, [ip, #32]
   1cec4:	strb	r2, [ip, #33]	; 0x21
   1cec8:	strb	r2, [ip, #34]	; 0x22
   1cecc:	strb	lr, [ip, #35]	; 0x23
   1ced0:	strb	r2, [ip, #36]	; 0x24
   1ced4:	strb	r2, [ip, #37]	; 0x25
   1ced8:	strb	r2, [ip, #38]	; 0x26
   1cedc:	strb	r2, [ip, #39]	; 0x27
   1cee0:	b	1cd64 <crc32@@Base+0x330c>
   1cee4:	orrs	r3, r6, r7
   1cee8:	bne	1d044 <crc32@@Base+0x35ec>
   1ceec:	movw	r2, #168	; 0xa8
   1cef0:	movt	r2, #6
   1cef4:	movw	lr, #42262	; 0xa516
   1cef8:	movt	lr, #4
   1cefc:	ldr	r1, [r2]
   1cf00:	mov	r6, #32
   1cf04:	orr	lr, lr, r1, lsl #20
   1cf08:	add	ip, r4, fp
   1cf0c:	and	r0, r8, #7
   1cf10:	mov	r1, #0
   1cf14:	orrs	r3, r0, r1
   1cf18:	ldr	r3, [ip, #40]	; 0x28
   1cf1c:	orr	r3, r3, #3
   1cf20:	orr	r3, r3, r6
   1cf24:	str	r3, [ip, #40]	; 0x28
   1cf28:	bne	1d0b4 <crc32@@Base+0x365c>
   1cf2c:	mov	r1, #0
   1cf30:	movw	r3, #39768	; 0x9b58
   1cf34:	str	r8, [ip, #24]
   1cf38:	movt	r3, #3
   1cf3c:	str	r9, [ip, #28]
   1cf40:	str	r8, [ip, #32]
   1cf44:	str	r9, [ip, #36]	; 0x24
   1cf48:	str	lr, [ip, #44]	; 0x2c
   1cf4c:	str	r1, [r2]
   1cf50:	b	1cd64 <crc32@@Base+0x330c>
   1cf54:	cmp	r7, #0
   1cf58:	ldr	r3, [sp, #12]
   1cf5c:	cmpeq	r6, #4
   1cf60:	moveq	r2, #1
   1cf64:	movne	r2, #0
   1cf68:	cmp	r3, #1
   1cf6c:	movne	r1, #0
   1cf70:	andeq	r1, r2, #1
   1cf74:	cmp	r1, #0
   1cf78:	beq	1cff8 <crc32@@Base+0x35a0>
   1cf7c:	movw	r2, #168	; 0xa8
   1cf80:	movt	r2, #6
   1cf84:	movw	r0, #22012	; 0x55fc
   1cf88:	ldr	r1, [r2]
   1cf8c:	cmp	r1, #0
   1cf90:	beq	1d03c <crc32@@Base+0x35e4>
   1cf94:	movt	r0, #3
   1cf98:	orr	r0, r0, r1, lsl #20
   1cf9c:	add	r1, r4, fp
   1cfa0:	mov	lr, #0
   1cfa4:	movw	r3, #39764	; 0x9b54
   1cfa8:	movt	r3, #3
   1cfac:	ldr	ip, [r1, #40]	; 0x28
   1cfb0:	str	r0, [r1, #44]	; 0x2c
   1cfb4:	str	r8, [r1, #24]
   1cfb8:	orr	r0, ip, #67	; 0x43
   1cfbc:	str	r9, [r1, #28]
   1cfc0:	str	r8, [r1, #32]
   1cfc4:	str	r9, [r1, #36]	; 0x24
   1cfc8:	str	lr, [r2]
   1cfcc:	str	r0, [r1, #40]	; 0x28
   1cfd0:	b	1cd64 <crc32@@Base+0x330c>
   1cfd4:	add	r2, r4, fp
   1cfd8:	movw	r3, #26680	; 0x6838
   1cfdc:	movt	r3, #3
   1cfe0:	ldr	r1, [r2, #40]	; 0x28
   1cfe4:	str	r8, [r2, #24]
   1cfe8:	orr	r1, r1, #68	; 0x44
   1cfec:	str	r9, [r2, #28]
   1cff0:	str	r1, [r2, #40]	; 0x28
   1cff4:	b	1cd64 <crc32@@Base+0x330c>
   1cff8:	ldr	r3, [sp, #12]
   1cffc:	sub	r3, r3, #2
   1d000:	clz	r3, r3
   1d004:	lsr	r3, r3, #5
   1d008:	tst	r2, r3
   1d00c:	bne	1d070 <crc32@@Base+0x3618>
   1d010:	cmp	r7, #0
   1d014:	cmpeq	r6, #5
   1d018:	movne	r3, #0
   1d01c:	cmp	r3, #0
   1d020:	beq	1d104 <crc32@@Base+0x36ac>
   1d024:	movw	r2, #168	; 0xa8
   1d028:	movt	r2, #6
   1d02c:	movw	r0, #21510	; 0x5406
   1d030:	ldr	r1, [r2]
   1d034:	cmp	r1, #0
   1d038:	bne	1cf94 <crc32@@Base+0x353c>
   1d03c:	movt	r0, #19
   1d040:	b	1cf9c <crc32@@Base+0x3544>
   1d044:	cmp	r7, #0
   1d048:	cmpeq	r6, #1
   1d04c:	bne	1d0dc <crc32@@Base+0x3684>
   1d050:	movw	r2, #168	; 0xa8
   1d054:	movt	r2, #6
   1d058:	movw	lr, #62762	; 0xf52a
   1d05c:	movt	lr, #4
   1d060:	ldr	r1, [r2]
   1d064:	mov	r6, #48	; 0x30
   1d068:	orr	lr, lr, r1, lsl #20
   1d06c:	b	1cf08 <crc32@@Base+0x34b0>
   1d070:	movw	r2, #168	; 0xa8
   1d074:	movt	r2, #6
   1d078:	movw	r0, #21505	; 0x5401
   1d07c:	ldr	r1, [r2]
   1d080:	cmp	r1, #0
   1d084:	bne	1cf94 <crc32@@Base+0x353c>
   1d088:	b	1d03c <crc32@@Base+0x35e4>
   1d08c:	movw	r1, #65196	; 0xfeac
   1d090:	movt	r1, #4
   1d094:	mov	r3, sl
   1d098:	movw	r2, #39936	; 0x9c00
   1d09c:	ldr	r0, [r1]
   1d0a0:	movt	r2, #3
   1d0a4:	mov	r1, #1
   1d0a8:	bl	122d8 <__fprintf_chk@plt>
   1d0ac:	mov	r0, #1
   1d0b0:	bl	12218 <exit@plt>
   1d0b4:	movw	r3, #65196	; 0xfeac
   1d0b8:	movt	r3, #4
   1d0bc:	movw	r0, #39864	; 0x9bb8
   1d0c0:	mov	r2, #57	; 0x39
   1d0c4:	ldr	r3, [r3]
   1d0c8:	movt	r0, #3
   1d0cc:	mov	r1, #1
   1d0d0:	bl	1259c <fwrite@plt>
   1d0d4:	mov	r0, #1
   1d0d8:	bl	12218 <exit@plt>
   1d0dc:	movw	r3, #65196	; 0xfeac
   1d0e0:	movt	r3, #4
   1d0e4:	strd	r6, [sp]
   1d0e8:	movw	r2, #39828	; 0x9b94
   1d0ec:	ldr	r0, [r3]
   1d0f0:	movt	r2, #3
   1d0f4:	mov	r1, #1
   1d0f8:	bl	122d8 <__fprintf_chk@plt>
   1d0fc:	mov	r0, #1
   1d100:	bl	12218 <exit@plt>
   1d104:	movw	r3, #65196	; 0xfeac
   1d108:	movt	r3, #4
   1d10c:	strd	r6, [sp]
   1d110:	movw	r2, #39792	; 0x9b70
   1d114:	ldr	r0, [r3]
   1d118:	movt	r2, #3
   1d11c:	mov	r1, #1
   1d120:	bl	122d8 <__fprintf_chk@plt>
   1d124:	mov	r0, #1
   1d128:	bl	12218 <exit@plt>
   1d12c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d130:	movw	ip, #61168	; 0xeef0
   1d134:	sub	sp, sp, #956	; 0x3bc
   1d138:	movt	ip, #4
   1d13c:	mov	fp, r0
   1d140:	mov	sl, r1
   1d144:	str	ip, [sp, #36]	; 0x24
   1d148:	mov	r1, #0
   1d14c:	ldr	ip, [ip]
   1d150:	str	r2, [sp, #12]
   1d154:	mov	r2, #1616	; 0x650
   1d158:	ldr	r0, [pc, #2200]	; 1d9f8 <crc32@@Base+0x3fa0>
   1d15c:	str	r3, [sp, #32]
   1d160:	str	ip, [sp, #948]	; 0x3b4
   1d164:	bl	12308 <memset@plt>
   1d168:	cmp	fp, #1
   1d16c:	beq	1d7dc <crc32@@Base+0x3d84>
   1d170:	cmp	fp, #2
   1d174:	beq	1d800 <crc32@@Base+0x3da8>
   1d178:	movw	r9, #168	; 0xa8
   1d17c:	movt	r9, #6
   1d180:	mov	r2, #0
   1d184:	mvn	r1, #120	; 0x78
   1d188:	ldr	r3, [r9, #1624]	; 0x658
   1d18c:	strb	r1, [r9, #11]
   1d190:	cmp	r3, r2
   1d194:	strb	r1, [r9, #819]	; 0x333
   1d198:	strb	r2, [r9, #8]
   1d19c:	strb	r2, [r9, #816]	; 0x330
   1d1a0:	beq	1d870 <crc32@@Base+0x3e18>
   1d1a4:	mov	r4, #8192	; 0x2000
   1d1a8:	movw	r8, #50292	; 0xc474
   1d1ac:	ldr	r5, [pc, #2120]	; 1d9fc <crc32@@Base+0x3fa4>
   1d1b0:	movt	r8, #3
   1d1b4:	mov	r6, r4
   1d1b8:	b	1d1c8 <crc32@@Base+0x3770>
   1d1bc:	ldr	r3, [r5, #40]!	; 0x28
   1d1c0:	cmp	r3, #0
   1d1c4:	beq	1d248 <crc32@@Base+0x37f0>
   1d1c8:	cmp	r3, #13
   1d1cc:	bne	1d1bc <crc32@@Base+0x3764>
   1d1d0:	mov	r1, r8
   1d1d4:	ldr	r0, [r5, #4]
   1d1d8:	bl	12350 <fopen@plt>
   1d1dc:	subs	r4, r0, #0
   1d1e0:	beq	1d8d0 <crc32@@Base+0x3e78>
   1d1e4:	mov	r3, r4
   1d1e8:	mov	r2, #1
   1d1ec:	mov	r1, #808	; 0x328
   1d1f0:	add	r0, sp, #140	; 0x8c
   1d1f4:	bl	12488 <fread@plt>
   1d1f8:	cmp	r0, #1
   1d1fc:	mov	r7, r0
   1d200:	bne	1d920 <crc32@@Base+0x3ec8>
   1d204:	mov	r0, r4
   1d208:	bl	12620 <fclose@plt>
   1d20c:	ldrb	r3, [sp, #143]	; 0x8f
   1d210:	cmp	r3, #135	; 0x87
   1d214:	bne	1d8f8 <crc32@@Base+0x3ea0>
   1d218:	ldrb	r2, [sp, #151]	; 0x97
   1d21c:	add	r1, sp, #952	; 0x3b8
   1d220:	sub	r3, sl, #1
   1d224:	rsb	r4, sl, #0
   1d228:	add	r2, r1, r2, lsl #7
   1d22c:	ldr	r2, [r2, #-920]	; 0xfffffc68
   1d230:	add	r6, r6, r2
   1d234:	add	r3, r3, r6
   1d238:	and	r6, r4, r3
   1d23c:	ldr	r3, [r5, #40]!	; 0x28
   1d240:	cmp	r3, #0
   1d244:	bne	1d1c8 <crc32@@Base+0x3770>
   1d248:	mov	r4, r6
   1d24c:	movw	r1, #65200	; 0xfeb0
   1d250:	movt	r1, #4
   1d254:	movw	r2, #40136	; 0x9cc8
   1d258:	str	r1, [sp, #8]
   1d25c:	ldr	r0, [r1]
   1d260:	mov	r3, r4
   1d264:	movt	r2, #3
   1d268:	mov	r1, #1
   1d26c:	bl	122d8 <__fprintf_chk@plt>
   1d270:	ldr	r6, [r9, #1624]	; 0x658
   1d274:	cmp	r6, #0
   1d278:	beq	1d878 <crc32@@Base+0x3e20>
   1d27c:	ldr	r5, [pc, #1912]	; 1d9fc <crc32@@Base+0x3fa4>
   1d280:	subs	r0, sl, #1
   1d284:	mov	r3, #0
   1d288:	mvn	r8, #0
   1d28c:	sbc	r1, r3, #0
   1d290:	rsbs	r2, sl, #0
   1d294:	rsc	r3, r3, #0
   1d298:	strd	r0, [sp, #16]
   1d29c:	strd	r2, [sp, #24]
   1d2a0:	sub	r3, r6, #2
   1d2a4:	cmp	r3, #15
   1d2a8:	ldrls	pc, [pc, r3, lsl #2]
   1d2ac:	b	1d848 <crc32@@Base+0x3df0>
   1d2b0:	strdeq	sp, [r1], -r8
   1d2b4:	muleq	r1, r4, r4
   1d2b8:	strdeq	sp, [r1], -r8
   1d2bc:	strdeq	sp, [r1], -r8
   1d2c0:	strdeq	sp, [r1], -r8
   1d2c4:	andeq	sp, r1, r8, asr #16
   1d2c8:	andeq	sp, r1, r8, asr #16
   1d2cc:	andeq	sp, r1, r8, asr #16
   1d2d0:	andeq	sp, r1, r4, ror r4
   1d2d4:	andeq	sp, r1, r8, asr #16
   1d2d8:	andeq	sp, r1, r4, lsl #8
   1d2dc:	andeq	sp, r1, ip, lsr #6
   1d2e0:	strdeq	sp, [r1], -r8
   1d2e4:	andeq	sp, r1, r4, ror r5
   1d2e8:	strdeq	sp, [r1], -r0
   1d2ec:	strdeq	sp, [r1], -r8
   1d2f0:	ldrd	r2, [r5, #16]
   1d2f4:	asr	r1, r4, #31
   1d2f8:	cmp	r1, r3
   1d2fc:	cmpeq	r4, r2
   1d300:	bhi	1d93c <crc32@@Base+0x3ee4>
   1d304:	ldrd	r0, [sp, #16]
   1d308:	ldrd	r6, [sp, #24]
   1d30c:	adds	r0, r0, r2
   1d310:	adc	r1, r1, r3
   1d314:	and	r6, r6, r0
   1d318:	and	r7, r7, r1
   1d31c:	cmp	r3, r7
   1d320:	cmpeq	r2, r6
   1d324:	bne	1d8a8 <crc32@@Base+0x3e50>
   1d328:	mov	r4, r2
   1d32c:	ldr	r6, [r5, #40]!	; 0x28
   1d330:	cmp	r6, #0
   1d334:	bne	1d2a0 <crc32@@Base+0x3848>
   1d338:	ldr	r6, [r9, #1624]	; 0x658
   1d33c:	ldr	r4, [pc, #1720]	; 1d9fc <crc32@@Base+0x3fa4>
   1d340:	mov	r7, #0
   1d344:	mov	r5, r4
   1d348:	b	1d358 <crc32@@Base+0x3900>
   1d34c:	ldr	r6, [r5, #40]!	; 0x28
   1d350:	cmp	r6, #0
   1d354:	beq	1d37c <crc32@@Base+0x3924>
   1d358:	cmp	r6, #13
   1d35c:	bne	1d34c <crc32@@Base+0x38f4>
   1d360:	ldr	r1, [r5, #4]
   1d364:	add	r7, r7, #1024	; 0x400
   1d368:	ldr	r0, [sp, #992]	; 0x3e0
   1d36c:	bl	1c85c <crc32@@Base+0x2e04>
   1d370:	ldr	r6, [r5, #40]!	; 0x28
   1d374:	cmp	r6, #0
   1d378:	bne	1d358 <crc32@@Base+0x3900>
   1d37c:	mov	r1, r7
   1d380:	mov	r2, r6
   1d384:	ldr	r0, [sp, #992]	; 0x3e0
   1d388:	str	r7, [sp, #12]
   1d38c:	bl	12518 <lseek@plt>
   1d390:	cmp	r0, #0
   1d394:	blt	1d98c <crc32@@Base+0x3f34>
   1d398:	cmn	r8, #1
   1d39c:	bne	1d58c <crc32@@Base+0x3b34>
   1d3a0:	ldr	r3, [r9, #1624]	; 0x658
   1d3a4:	cmp	r3, #0
   1d3a8:	beq	1d3e4 <crc32@@Base+0x398c>
   1d3ac:	movw	r5, #16764	; 0x417c
   1d3b0:	movt	r5, #2
   1d3b4:	cmp	r3, #17
   1d3b8:	bhi	1d3d8 <crc32@@Base+0x3980>
   1d3bc:	mvn	r3, r5, lsr r3
   1d3c0:	tst	r3, #1
   1d3c4:	bne	1d3d8 <crc32@@Base+0x3980>
   1d3c8:	mov	r3, sl
   1d3cc:	ldmib	r4, {r1, r2}
   1d3d0:	ldr	r0, [sp, #992]	; 0x3e0
   1d3d4:	bl	1c414 <crc32@@Base+0x29bc>
   1d3d8:	ldr	r3, [r4, #40]!	; 0x28
   1d3dc:	cmp	r3, #0
   1d3e0:	bne	1d3b4 <crc32@@Base+0x395c>
   1d3e4:	ldr	r3, [sp, #36]	; 0x24
   1d3e8:	mov	r0, #0
   1d3ec:	ldr	r2, [sp, #948]	; 0x3b4
   1d3f0:	ldr	r3, [r3]
   1d3f4:	cmp	r2, r3
   1d3f8:	bne	1d9f4 <crc32@@Base+0x3f9c>
   1d3fc:	add	sp, sp, #956	; 0x3bc
   1d400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d404:	add	r8, r8, #1
   1d408:	mov	ip, #808	; 0x328
   1d40c:	ldr	r7, [sp, #32]
   1d410:	mov	lr, #16
   1d414:	mla	ip, ip, r8, r9
   1d418:	ldr	r0, [sp, #8]
   1d41c:	mvn	r6, #111	; 0x6f
   1d420:	movw	r2, #40196	; 0x9d04
   1d424:	mov	r3, lr
   1d428:	movt	r2, #3
   1d42c:	mov	r1, #1
   1d430:	ldr	r0, [r0]
   1d434:	strh	r7, [ip, #16]
   1d438:	ldr	r7, [sp, #12]
   1d43c:	strb	r6, [ip, #795]	; 0x31b
   1d440:	mov	r6, #1024	; 0x400
   1d444:	strb	lr, [ip, #793]	; 0x319
   1d448:	str	r6, [ip, #812]	; 0x32c
   1d44c:	mov	r6, #0
   1d450:	strb	r7, [ip, #18]
   1d454:	strb	r6, [ip, #794]	; 0x31a
   1d458:	str	lr, [ip, #12]
   1d45c:	bl	122d8 <__fprintf_chk@plt>
   1d460:	str	r6, [r9, #4]
   1d464:	ldr	r6, [r5, #40]!	; 0x28
   1d468:	cmp	r6, #0
   1d46c:	bne	1d2a0 <crc32@@Base+0x3848>
   1d470:	b	1d338 <crc32@@Base+0x38e0>
   1d474:	ldr	r3, [r5, #24]
   1d478:	ldr	r6, [r5, #40]!	; 0x28
   1d47c:	lsr	r3, r3, #16
   1d480:	cmp	r6, #0
   1d484:	lsl	r3, r3, #16
   1d488:	str	r3, [r9, #4]
   1d48c:	bne	1d2a0 <crc32@@Base+0x3848>
   1d490:	b	1d338 <crc32@@Base+0x38e0>
   1d494:	cmn	r8, #1
   1d498:	beq	1d880 <crc32@@Base+0x3e28>
   1d49c:	ldr	r1, [r5, #4]
   1d4a0:	add	r0, sp, #48	; 0x30
   1d4a4:	bl	1c360 <crc32@@Base+0x2908>
   1d4a8:	ldr	r1, [r5, #4]
   1d4ac:	ldr	r2, [sp, #92]	; 0x5c
   1d4b0:	mov	ip, #808	; 0x328
   1d4b4:	ldr	r0, [pc, #1340]	; 1d9f8 <crc32@@Base+0x3fa0>
   1d4b8:	mov	r3, r4
   1d4bc:	str	r1, [sp, #4]
   1d4c0:	mov	r1, fp
   1d4c4:	str	r2, [sp]
   1d4c8:	mov	r2, r5
   1d4cc:	mla	r0, ip, r8, r0
   1d4d0:	bl	1cca4 <crc32@@Base+0x324c>
   1d4d4:	mov	r0, r4
   1d4d8:	asr	r1, r4, #31
   1d4dc:	strd	r0, [r5, #8]
   1d4e0:	ldr	r6, [r5, #40]!	; 0x28
   1d4e4:	ldr	r3, [sp, #92]	; 0x5c
   1d4e8:	cmp	r6, #0
   1d4ec:	add	r4, r4, r3
   1d4f0:	bne	1d2a0 <crc32@@Base+0x3848>
   1d4f4:	b	1d338 <crc32@@Base+0x38e0>
   1d4f8:	cmn	r8, #1
   1d4fc:	beq	1d880 <crc32@@Base+0x3e28>
   1d500:	ldr	r1, [r5, #4]
   1d504:	add	r0, sp, #48	; 0x30
   1d508:	bl	1c360 <crc32@@Base+0x2908>
   1d50c:	ldr	r2, [r5, #4]
   1d510:	ldr	r3, [sp, #92]	; 0x5c
   1d514:	sub	r6, sl, #1
   1d518:	ldr	r1, [pc, #1240]	; 1d9f8 <crc32@@Base+0x3fa0>
   1d51c:	rsb	r7, sl, #0
   1d520:	add	r3, r6, r3
   1d524:	mov	r0, #808	; 0x328
   1d528:	and	r3, r3, r7
   1d52c:	str	r2, [sp, #4]
   1d530:	mla	r0, r0, r8, r1
   1d534:	str	r3, [sp]
   1d538:	mov	r2, r5
   1d53c:	mov	r3, r4
   1d540:	mov	r1, fp
   1d544:	bl	1cca4 <crc32@@Base+0x324c>
   1d548:	ldr	r3, [sp, #92]	; 0x5c
   1d54c:	mov	r0, r4
   1d550:	asr	r1, r4, #31
   1d554:	add	r6, r6, r3
   1d558:	strd	r0, [r5, #8]
   1d55c:	and	r7, r7, r6
   1d560:	ldr	r6, [r5, #40]!	; 0x28
   1d564:	add	r4, r4, r7
   1d568:	cmp	r6, #0
   1d56c:	bne	1d2a0 <crc32@@Base+0x3848>
   1d570:	b	1d338 <crc32@@Base+0x38e0>
   1d574:	ldr	r3, [r5, #24]
   1d578:	ldr	r6, [r5, #40]!	; 0x28
   1d57c:	cmp	r6, #0
   1d580:	str	r3, [r9]
   1d584:	bne	1d2a0 <crc32@@Base+0x3848>
   1d588:	b	1d338 <crc32@@Base+0x38e0>
   1d58c:	add	r8, r8, #1
   1d590:	ands	r3, r8, #255	; 0xff
   1d594:	str	r3, [sp, #32]
   1d598:	beq	1d824 <crc32@@Base+0x3dcc>
   1d59c:	movw	r3, #40368	; 0x9db0
   1d5a0:	ldr	r8, [pc, #1104]	; 1d9f8 <crc32@@Base+0x3fa0>
   1d5a4:	movt	r3, #3
   1d5a8:	ldr	r7, [sp, #8]
   1d5ac:	str	sl, [sp, #40]	; 0x28
   1d5b0:	mov	fp, r6
   1d5b4:	mov	sl, r3
   1d5b8:	movw	r2, #40400	; 0x9dd0
   1d5bc:	str	r4, [sp, #24]
   1d5c0:	movt	r2, #3
   1d5c4:	str	r2, [sp, #16]
   1d5c8:	mov	r3, #808	; 0x328
   1d5cc:	ldrb	r1, [r8, #11]
   1d5d0:	mla	r4, r3, r6, r9
   1d5d4:	ldr	r3, [sp, #12]
   1d5d8:	lsl	r1, r1, #7
   1d5dc:	ldr	r0, [r7]
   1d5e0:	add	r5, fp, r3
   1d5e4:	add	lr, r1, #16
   1d5e8:	str	r5, [sp]
   1d5ec:	add	ip, r1, #32
   1d5f0:	strh	lr, [r8, #12]
   1d5f4:	mov	r3, r6
   1d5f8:	mov	r2, sl
   1d5fc:	mov	r1, #1
   1d600:	strh	ip, [r4, #9]
   1d604:	add	r8, r8, #808	; 0x328
   1d608:	bl	122d8 <__fprintf_chk@plt>
   1d60c:	ldrh	r2, [r4, #9]
   1d610:	mov	r3, r6
   1d614:	ldr	r0, [r7]
   1d618:	add	r5, r2, r5
   1d61c:	mov	r1, #1
   1d620:	ldr	r2, [sp, #16]
   1d624:	sub	r5, r5, #16
   1d628:	str	r5, [sp]
   1d62c:	add	r6, r6, #1
   1d630:	bl	122d8 <__fprintf_chk@plt>
   1d634:	ldr	r2, [r8, #-4]
   1d638:	ldrh	r3, [r4, #9]
   1d63c:	ldr	r1, [sp, #32]
   1d640:	uxth	r2, r2
   1d644:	sub	r3, r3, #1
   1d648:	add	r3, r2, r3
   1d64c:	rsb	r2, r2, #0
   1d650:	and	r3, r3, r2
   1d654:	cmp	r6, r1
   1d658:	add	fp, fp, r3
   1d65c:	uxth	fp, fp
   1d660:	blt	1d5c8 <crc32@@Base+0x3b70>
   1d664:	mov	r0, fp
   1d668:	mov	r1, #1
   1d66c:	ldr	r4, [sp, #24]
   1d670:	ldr	sl, [sp, #40]	; 0x28
   1d674:	str	fp, [sp, #24]
   1d678:	bl	1253c <calloc@plt>
   1d67c:	subs	r3, r0, #0
   1d680:	str	r3, [sp, #8]
   1d684:	beq	1d9cc <crc32@@Base+0x3f74>
   1d688:	ldr	r8, [pc, #872]	; 1d9f8 <crc32@@Base+0x3fa0>
   1d68c:	mov	fp, #0
   1d690:	ldr	ip, [sp, #8]
   1d694:	mov	r3, #808	; 0x328
   1d698:	str	r4, [sp, #40]	; 0x28
   1d69c:	str	r3, [sp, #16]
   1d6a0:	str	sl, [sp, #44]	; 0x2c
   1d6a4:	mov	lr, r8
   1d6a8:	ldrb	r7, [r8, #11]
   1d6ac:	ldm	lr!, {r0, r1, r2, r3}
   1d6b0:	cmp	r7, #0
   1d6b4:	ldr	lr, [sp, #8]
   1d6b8:	add	r6, ip, #16
   1d6bc:	sub	lr, ip, lr
   1d6c0:	str	r0, [ip]
   1d6c4:	str	r1, [ip, #4]
   1d6c8:	str	r2, [ip, #8]
   1d6cc:	str	r3, [ip, #12]
   1d6d0:	beq	1d740 <crc32@@Base+0x3ce8>
   1d6d4:	ldr	r3, [sp, #16]
   1d6d8:	lsl	r7, r7, #7
   1d6dc:	ldr	r2, [pc, #788]	; 1d9f8 <crc32@@Base+0x3fa0>
   1d6e0:	mla	r1, r3, fp, r2
   1d6e4:	ldr	r3, [sp, #12]
   1d6e8:	add	lr, r3, lr
   1d6ec:	mov	r3, r8
   1d6f0:	add	r1, r1, r7
   1d6f4:	ldr	r2, [r3, #16]
   1d6f8:	add	r3, r3, #128	; 0x80
   1d6fc:	sub	r2, r2, lr
   1d700:	str	r2, [r3, #-112]	; 0xffffff90
   1d704:	cmp	r1, r3
   1d708:	bne	1d6f4 <crc32@@Base+0x3c9c>
   1d70c:	add	r4, r7, #16
   1d710:	add	sl, r8, #16
   1d714:	add	r4, ip, r4
   1d718:	mov	r5, r6
   1d71c:	mov	r2, #128	; 0x80
   1d720:	mov	r1, sl
   1d724:	mov	r0, r5
   1d728:	add	r5, r5, r2
   1d72c:	bl	125c0 <memcpy@plt>
   1d730:	cmp	r4, r5
   1d734:	add	sl, sl, #128	; 0x80
   1d738:	bne	1d71c <crc32@@Base+0x3cc4>
   1d73c:	add	r6, r6, r7
   1d740:	mov	r2, r8
   1d744:	ldr	r1, [sp, #16]
   1d748:	ldr	r0, [r2, #784]!	; 0x310
   1d74c:	add	r8, r8, #808	; 0x328
   1d750:	ldr	r3, [r8, #-4]
   1d754:	mla	r1, r1, fp, r9
   1d758:	str	r0, [r6]
   1d75c:	ldr	r0, [sp, #32]
   1d760:	add	fp, fp, #1
   1d764:	ldr	ip, [r2, #4]
   1d768:	uxth	r3, r3
   1d76c:	cmp	fp, r0
   1d770:	ldr	r0, [r2, #8]
   1d774:	ldr	r2, [r2, #12]
   1d778:	sub	r4, r3, #1
   1d77c:	str	ip, [r6, #4]
   1d780:	rsb	r3, r3, #0
   1d784:	str	r0, [r6, #8]
   1d788:	mov	fp, #1
   1d78c:	str	r2, [r6, #12]
   1d790:	ldrh	ip, [r1, #9]
   1d794:	add	r4, r4, ip
   1d798:	and	r4, r4, r3
   1d79c:	sub	r4, r4, ip
   1d7a0:	add	r4, r4, #16
   1d7a4:	add	ip, r6, r4
   1d7a8:	blt	1d6a4 <crc32@@Base+0x3c4c>
   1d7ac:	ldr	r4, [sp, #40]	; 0x28
   1d7b0:	ldr	sl, [sp, #44]	; 0x2c
   1d7b4:	ldr	r5, [sp, #24]
   1d7b8:	ldr	r1, [sp, #8]
   1d7bc:	ldr	r0, [sp, #992]	; 0x3e0
   1d7c0:	mov	r2, r5
   1d7c4:	bl	1262c <write@plt>
   1d7c8:	cmp	r0, r5
   1d7cc:	bne	1d964 <crc32@@Base+0x3f0c>
   1d7d0:	ldr	r0, [sp, #8]
   1d7d4:	bl	1214c <free@plt>
   1d7d8:	b	1d3a0 <crc32@@Base+0x3948>
   1d7dc:	movw	r3, #65200	; 0xfeb0
   1d7e0:	movt	r3, #4
   1d7e4:	movw	r0, #40004	; 0x9c44
   1d7e8:	mov	r2, #22
   1d7ec:	ldr	r3, [r3]
   1d7f0:	mov	r1, fp
   1d7f4:	movt	r0, #3
   1d7f8:	bl	1259c <fwrite@plt>
   1d7fc:	b	1d178 <crc32@@Base+0x3720>
   1d800:	movw	r3, #65200	; 0xfeb0
   1d804:	movt	r3, #4
   1d808:	movw	r0, #40028	; 0x9c5c
   1d80c:	mov	r2, #21
   1d810:	ldr	r3, [r3]
   1d814:	mov	r1, #1
   1d818:	movt	r0, #3
   1d81c:	bl	1259c <fwrite@plt>
   1d820:	b	1d178 <crc32@@Base+0x3720>
   1d824:	ldr	r5, [sp, #32]
   1d828:	mov	r1, #1
   1d82c:	mov	r0, r5
   1d830:	bl	1253c <calloc@plt>
   1d834:	subs	r3, r0, #0
   1d838:	str	r3, [sp, #8]
   1d83c:	beq	1d9c8 <crc32@@Base+0x3f70>
   1d840:	str	r5, [sp, #24]
   1d844:	b	1d7b4 <crc32@@Base+0x3d5c>
   1d848:	movw	r1, #65196	; 0xfeac
   1d84c:	movt	r1, #4
   1d850:	mov	r3, r6
   1d854:	movw	r2, #40324	; 0x9d84
   1d858:	ldr	r0, [r1]
   1d85c:	movt	r2, #3
   1d860:	mov	r1, #1
   1d864:	bl	122d8 <__fprintf_chk@plt>
   1d868:	mov	r0, #1
   1d86c:	bl	12218 <exit@plt>
   1d870:	mov	r4, #8192	; 0x2000
   1d874:	b	1d24c <crc32@@Base+0x37f4>
   1d878:	mvn	r8, #0
   1d87c:	b	1d33c <crc32@@Base+0x38e4>
   1d880:	movw	r3, #65196	; 0xfeac
   1d884:	movt	r3, #4
   1d888:	movw	r0, #40176	; 0x9cf0
   1d88c:	mov	r2, #19
   1d890:	ldr	r3, [r3]
   1d894:	movt	r0, #3
   1d898:	mov	r1, #1
   1d89c:	bl	1259c <fwrite@plt>
   1d8a0:	mov	r0, #1
   1d8a4:	bl	12218 <exit@plt>
   1d8a8:	movw	r3, #65196	; 0xfeac
   1d8ac:	movt	r3, #4
   1d8b0:	movw	r0, #40272	; 0x9d50
   1d8b4:	mov	r2, #49	; 0x31
   1d8b8:	ldr	r3, [r3]
   1d8bc:	movt	r0, #3
   1d8c0:	mov	r1, #1
   1d8c4:	bl	1259c <fwrite@plt>
   1d8c8:	mov	r0, #1
   1d8cc:	bl	12218 <exit@plt>
   1d8d0:	movw	r1, #65196	; 0xfeac
   1d8d4:	movt	r1, #4
   1d8d8:	ldr	r3, [r5, #4]
   1d8dc:	movw	r2, #40052	; 0x9c74
   1d8e0:	ldr	r0, [r1]
   1d8e4:	movt	r2, #3
   1d8e8:	mov	r1, #1
   1d8ec:	bl	122d8 <__fprintf_chk@plt>
   1d8f0:	mov	r0, #1
   1d8f4:	bl	12218 <exit@plt>
   1d8f8:	movw	r3, #65196	; 0xfeac
   1d8fc:	movt	r3, #4
   1d900:	movw	r0, #40112	; 0x9cb0
   1d904:	mov	r2, #23
   1d908:	ldr	r3, [r3]
   1d90c:	movt	r0, #3
   1d910:	mov	r1, r7
   1d914:	bl	1259c <fwrite@plt>
   1d918:	mov	r0, r7
   1d91c:	bl	12218 <exit@plt>
   1d920:	mov	r2, r0
   1d924:	movw	r1, #40088	; 0x9c98
   1d928:	mov	r0, #1
   1d92c:	movt	r1, #3
   1d930:	bl	12794 <__printf_chk@plt>
   1d934:	mov	r0, #1
   1d938:	bl	12218 <exit@plt>
   1d93c:	movw	r3, #65196	; 0xfeac
   1d940:	movt	r3, #4
   1d944:	movw	r0, #40220	; 0x9d1c
   1d948:	mov	r2, #49	; 0x31
   1d94c:	ldr	r3, [r3]
   1d950:	movt	r0, #3
   1d954:	mov	r1, #1
   1d958:	bl	1259c <fwrite@plt>
   1d95c:	mov	r0, #1
   1d960:	bl	12218 <exit@plt>
   1d964:	movw	r3, #65196	; 0xfeac
   1d968:	movt	r3, #4
   1d96c:	movw	r0, #40488	; 0x9e28
   1d970:	mov	r2, #24
   1d974:	ldr	r3, [r3]
   1d978:	movt	r0, #3
   1d97c:	mov	r1, #1
   1d980:	bl	1259c <fwrite@plt>
   1d984:	mov	r0, #1
   1d988:	bl	12218 <exit@plt>
   1d98c:	movw	r3, #65196	; 0xfeac
   1d990:	movt	r3, #4
   1d994:	ldr	r4, [r3]
   1d998:	bl	126b0 <__errno_location@plt>
   1d99c:	ldr	r0, [r0]
   1d9a0:	bl	12224 <strerror@plt>
   1d9a4:	movw	r2, #39456	; 0x9a20
   1d9a8:	ldr	r3, [pc, #80]	; 1da00 <crc32@@Base+0x3fa8>
   1d9ac:	movt	r2, #3
   1d9b0:	mov	r1, #1
   1d9b4:	str	r0, [sp]
   1d9b8:	mov	r0, r4
   1d9bc:	bl	122d8 <__fprintf_chk@plt>
   1d9c0:	mov	r0, #1
   1d9c4:	bl	12218 <exit@plt>
   1d9c8:	ldr	fp, [sp, #8]
   1d9cc:	movw	r1, #65196	; 0xfeac
   1d9d0:	movt	r1, #4
   1d9d4:	mov	r3, fp
   1d9d8:	movw	r2, #40456	; 0x9e08
   1d9dc:	ldr	r0, [r1]
   1d9e0:	movt	r2, #3
   1d9e4:	mov	r1, #1
   1d9e8:	bl	122d8 <__fprintf_chk@plt>
   1d9ec:	mov	r0, #1
   1d9f0:	bl	12218 <exit@plt>
   1d9f4:	bl	124b8 <__stack_chk_fail@plt>
   1d9f8:	strheq	r0, [r6], -r0	; <UNPREDICTABLE>
   1d9fc:	andeq	r0, r6, r0, lsl #14
   1da00:	andeq	r9, r3, r8, asr #19
   1da04:	push	{r4, r5, lr}
   1da08:	mov	ip, r0
   1da0c:	ldrh	r4, [sp, #12]
   1da10:	movw	r0, #65200	; 0xfeb0
   1da14:	movt	r0, #4
   1da18:	mvn	r5, #111	; 0x6f
   1da1c:	str	r2, [ip, #804]	; 0x324
   1da20:	movw	r2, #40196	; 0x9d04
   1da24:	strb	r5, [ip, #787]	; 0x313
   1da28:	movt	r2, #3
   1da2c:	mov	r5, #16
   1da30:	strh	r1, [ip, #8]
   1da34:	strb	r5, [ip, #785]	; 0x311
   1da38:	mov	r1, #1
   1da3c:	mov	r5, #0
   1da40:	strb	r4, [ip, #10]
   1da44:	strb	r5, [ip, #786]	; 0x312
   1da48:	ldr	r0, [r0]
   1da4c:	str	r3, [ip, #4]
   1da50:	pop	{r4, r5, lr}
   1da54:	b	122d8 <__fprintf_chk@plt>
   1da58:	movw	r3, #61168	; 0xeef0
   1da5c:	movt	r3, #4
   1da60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da64:	movw	r2, #65200	; 0xfeb0
   1da68:	sub	sp, sp, #60	; 0x3c
   1da6c:	ldr	ip, [r3]
   1da70:	movt	r2, #4
   1da74:	mov	r4, r1
   1da78:	str	r3, [sp, #24]
   1da7c:	mov	r7, #0
   1da80:	ldr	r3, [r1, #64]	; 0x40
   1da84:	mov	r1, #1
   1da88:	str	r2, [sp, #16]
   1da8c:	str	r0, [sp, #20]
   1da90:	ldr	r0, [r2]
   1da94:	movw	r2, #40516	; 0x9e44
   1da98:	movt	r2, #3
   1da9c:	str	ip, [sp, #52]	; 0x34
   1daa0:	bl	122d8 <__fprintf_chk@plt>
   1daa4:	ldr	r3, [r4, #64]	; 0x40
   1daa8:	movw	r1, #50292	; 0xc474
   1daac:	movt	r1, #3
   1dab0:	str	r7, [sp, #36]	; 0x24
   1dab4:	mov	r0, r3
   1dab8:	str	r3, [sp, #28]
   1dabc:	bl	12350 <fopen@plt>
   1dac0:	subs	r3, r0, #0
   1dac4:	str	r3, [sp, #8]
   1dac8:	beq	1e508 <crc32@@Base+0x4ab0>
   1dacc:	ldr	fp, [pc, #2776]	; 1e5ac <crc32@@Base+0x4b54>
   1dad0:	movw	r5, #26252	; 0x668c
   1dad4:	movt	r5, #3
   1dad8:	movw	r3, #26248	; 0x6688
   1dadc:	movt	r3, #3
   1dae0:	str	r3, [sp, #12]
   1dae4:	ldr	r3, [sp, #8]
   1dae8:	mov	r2, #10
   1daec:	add	r1, sp, #48	; 0x30
   1daf0:	add	r0, sp, #36	; 0x24
   1daf4:	bl	12158 <__getdelim@plt>
   1daf8:	cmp	r0, #0
   1dafc:	ble	1de34 <crc32@@Base+0x43dc>
   1db00:	add	r2, sp, #40	; 0x28
   1db04:	ldr	r1, [sp, #12]
   1db08:	ldr	r0, [sp, #36]	; 0x24
   1db0c:	add	r7, r7, #1
   1db10:	bl	12248 <__strtok_r@plt>
   1db14:	cmp	r0, #0
   1db18:	beq	1dae4 <crc32@@Base+0x408c>
   1db1c:	mvn	r6, #0
   1db20:	mov	r4, #0
   1db24:	str	r0, [sp, #36]	; 0x24
   1db28:	add	r2, sp, #44	; 0x2c
   1db2c:	mov	r1, r5
   1db30:	bl	12248 <__strtok_r@plt>
   1db34:	subs	sl, r0, #0
   1db38:	beq	1dae4 <crc32@@Base+0x408c>
   1db3c:	ldrb	r3, [sl]
   1db40:	cmp	r3, #35	; 0x23
   1db44:	beq	1dae4 <crc32@@Base+0x408c>
   1db48:	cmp	r4, #3
   1db4c:	ldrls	pc, [pc, r4, lsl #2]
   1db50:	b	1dd6c <crc32@@Base+0x4314>
   1db54:	andeq	sp, r1, r4, ror #22
   1db58:			; <UNDEFINED> instruction: 0x0001dbbc
   1db5c:	muleq	r1, r8, ip
   1db60:	andeq	sp, r1, ip, lsl sp
   1db64:	movw	r8, #62988	; 0xf60c
   1db68:	movt	r8, #4
   1db6c:	movw	r1, #40564	; 0x9e74
   1db70:	mov	r2, sl
   1db74:	mov	r0, r8
   1db78:	movt	r1, #3
   1db7c:	bl	1a8d8 <crc32@@Base+0xe80>
   1db80:	subs	r6, r0, #0
   1db84:	blt	1e4b0 <crc32@@Base+0x4a58>
   1db88:	cmp	r6, #10
   1db8c:	beq	1dbfc <crc32@@Base+0x41a4>
   1db90:	mov	r3, #0
   1db94:	add	r2, sp, #44	; 0x2c
   1db98:	mov	r0, r3
   1db9c:	mov	r1, r5
   1dba0:	str	r3, [sp, #36]	; 0x24
   1dba4:	bl	12248 <__strtok_r@plt>
   1dba8:	subs	sl, r0, #0
   1dbac:	beq	1dae4 <crc32@@Base+0x408c>
   1dbb0:	ldrb	r3, [sl]
   1dbb4:	cmp	r3, #35	; 0x23
   1dbb8:	beq	1dae4 <crc32@@Base+0x408c>
   1dbbc:	sub	r3, r6, #1
   1dbc0:	cmp	r3, #11
   1dbc4:	ldrls	pc, [pc, r3, lsl #2]
   1dbc8:	b	1dc6c <crc32@@Base+0x4214>
   1dbcc:	andeq	lr, r1, r8, asr #4
   1dbd0:	andeq	lr, r1, r0, ror #6
   1dbd4:	strdeq	lr, [r1], -r4
   1dbd8:	andeq	lr, r1, r4, lsr r4
   1dbdc:	ldrdeq	lr, [r1], -r8
   1dbe0:	andeq	lr, r1, ip, lsl #3
   1dbe4:	andeq	lr, r1, ip, lsl #5
   1dbe8:	andeq	lr, r1, r0, asr #6
   1dbec:	andeq	lr, r1, r0, lsr #7
   1dbf0:	andeq	sp, r1, ip, ror #24
   1dbf4:	strdeq	sp, [r1], -ip
   1dbf8:	strdeq	sp, [r1], -ip
   1dbfc:	ldr	r1, [sp, #16]
   1dc00:	movw	r4, #168	; 0xa8
   1dc04:	ldr	r3, [r8, #156]	; 0x9c
   1dc08:	movt	r4, #6
   1dc0c:	movw	r2, #40620	; 0x9eac
   1dc10:	movt	r2, #3
   1dc14:	add	r3, r3, #1
   1dc18:	ldr	r0, [r1]
   1dc1c:	mov	r1, #1
   1dc20:	str	r3, [r8, #156]	; 0x9c
   1dc24:	bl	122d8 <__fprintf_chk@plt>
   1dc28:	ldr	r3, [r4, #2904]	; 0xb58
   1dc2c:	mov	r2, #40	; 0x28
   1dc30:	mov	r0, #0
   1dc34:	add	r1, r3, #1
   1dc38:	mov	ip, #12
   1dc3c:	mla	r3, r2, r3, r4
   1dc40:	str	r1, [r4, #2904]	; 0xb58
   1dc44:	add	r2, sp, #44	; 0x2c
   1dc48:	mov	r1, r5
   1dc4c:	str	r0, [sp, #36]	; 0x24
   1dc50:	str	ip, [r3, #1624]	; 0x658
   1dc54:	bl	12248 <__strtok_r@plt>
   1dc58:	cmp	r0, #0
   1dc5c:	beq	1dae4 <crc32@@Base+0x408c>
   1dc60:	ldrb	r3, [r0]
   1dc64:	cmp	r3, #35	; 0x23
   1dc68:	beq	1dae4 <crc32@@Base+0x408c>
   1dc6c:	mov	r3, #0
   1dc70:	add	r2, sp, #44	; 0x2c
   1dc74:	mov	r0, r3
   1dc78:	mov	r1, r5
   1dc7c:	str	r3, [sp, #36]	; 0x24
   1dc80:	bl	12248 <__strtok_r@plt>
   1dc84:	subs	sl, r0, #0
   1dc88:	beq	1dae4 <crc32@@Base+0x408c>
   1dc8c:	ldrb	r3, [sl]
   1dc90:	cmp	r3, #35	; 0x23
   1dc94:	beq	1dae4 <crc32@@Base+0x408c>
   1dc98:	cmp	r6, #4
   1dc9c:	bne	1e23c <crc32@@Base+0x47e4>
   1dca0:	mov	r2, #4
   1dca4:	movw	r1, #40732	; 0x9f1c
   1dca8:	mov	r0, sl
   1dcac:	movt	r1, #3
   1dcb0:	bl	121a0 <strncmp@plt>
   1dcb4:	subs	r2, r0, #0
   1dcb8:	beq	1ded0 <crc32@@Base+0x4478>
   1dcbc:	movw	r1, #40740	; 0x9f24
   1dcc0:	mov	r2, #5
   1dcc4:	movt	r1, #3
   1dcc8:	mov	r0, sl
   1dccc:	bl	121a0 <strncmp@plt>
   1dcd0:	subs	r3, r0, #0
   1dcd4:	beq	1dfd4 <crc32@@Base+0x457c>
   1dcd8:	movw	r1, #40748	; 0x9f2c
   1dcdc:	mov	r2, #5
   1dce0:	movt	r1, #3
   1dce4:	mov	r0, sl
   1dce8:	bl	121a0 <strncmp@plt>
   1dcec:	subs	r3, r0, #0
   1dcf0:	bne	1e534 <crc32@@Base+0x4adc>
   1dcf4:	movw	r4, #168	; 0xa8
   1dcf8:	movt	r4, #6
   1dcfc:	str	r3, [sp, #36]	; 0x24
   1dd00:	mov	ip, #40	; 0x28
   1dd04:	ldr	r3, [r4, #2904]	; 0xb58
   1dd08:	add	r2, sp, #44	; 0x2c
   1dd0c:	mov	r1, r5
   1dd10:	mov	r8, #236	; 0xec
   1dd14:	mla	r3, ip, r3, r4
   1dd18:	b	1def4 <crc32@@Base+0x449c>
   1dd1c:	movw	r4, #168	; 0xa8
   1dd20:	movt	r4, #6
   1dd24:	cmp	r6, #4
   1dd28:	beq	1df18 <crc32@@Base+0x44c0>
   1dd2c:	ldr	r3, [r4, #2920]	; 0xb68
   1dd30:	sub	r3, r3, #2
   1dd34:	cmp	r3, #4
   1dd38:	bls	1dddc <crc32@@Base+0x4384>
   1dd3c:	mov	r3, #0
   1dd40:	add	r2, sp, #44	; 0x2c
   1dd44:	mov	r0, r3
   1dd48:	mov	r1, r5
   1dd4c:	str	r3, [sp, #36]	; 0x24
   1dd50:	bl	12248 <__strtok_r@plt>
   1dd54:	cmp	r0, #0
   1dd58:	beq	1dae4 <crc32@@Base+0x408c>
   1dd5c:	ldrb	r3, [r0]
   1dd60:	cmp	r3, #35	; 0x23
   1dd64:	beq	1dae4 <crc32@@Base+0x408c>
   1dd68:	mov	r4, #4
   1dd6c:	mov	r0, #0
   1dd70:	add	r4, r4, #1
   1dd74:	str	r0, [sp, #36]	; 0x24
   1dd78:	b	1db28 <crc32@@Base+0x40d0>
   1dd7c:	ldr	r3, [r4, #2904]	; 0xb58
   1dd80:	mov	r2, #40	; 0x28
   1dd84:	cmp	r6, #12
   1dd88:	mov	r1, r5
   1dd8c:	mov	r8, #4
   1dd90:	mov	r9, #0
   1dd94:	mul	r3, r2, r3
   1dd98:	add	r2, sp, #44	; 0x2c
   1dd9c:	movne	lr, #6
   1dda0:	moveq	lr, #14
   1dda4:	mov	r0, #0
   1dda8:	str	r0, [sp, #36]	; 0x24
   1ddac:	add	ip, fp, r3
   1ddb0:	strd	r8, [ip, #32]
   1ddb4:	str	lr, [fp, r3]
   1ddb8:	str	sl, [ip, #4]
   1ddbc:	bl	12248 <__strtok_r@plt>
   1ddc0:	subs	sl, r0, #0
   1ddc4:	beq	1dae4 <crc32@@Base+0x408c>
   1ddc8:	ldrb	r3, [sl]
   1ddcc:	cmp	r3, #35	; 0x23
   1ddd0:	beq	1dae4 <crc32@@Base+0x408c>
   1ddd4:	cmp	r6, #4
   1ddd8:	beq	1df18 <crc32@@Base+0x44c0>
   1dddc:	mov	r2, #0
   1dde0:	mov	r0, sl
   1dde4:	mov	r1, r2
   1dde8:	mov	r9, #0
   1ddec:	bl	122b4 <strtoll@plt>
   1ddf0:	ldr	r2, [r4, #2904]	; 0xb58
   1ddf4:	mov	r3, #40	; 0x28
   1ddf8:	mov	ip, #0
   1ddfc:	mov	r1, r5
   1de00:	str	ip, [sp, #36]	; 0x24
   1de04:	mla	r3, r3, r2, r4
   1de08:	add	r2, r2, #1
   1de0c:	str	r2, [r4, #2904]	; 0xb58
   1de10:	add	r2, sp, #44	; 0x2c
   1de14:	add	r3, r3, #1616	; 0x650
   1de18:	mov	r8, r0
   1de1c:	mov	r0, ip
   1de20:	strd	r8, [r3, #32]
   1de24:	bl	12248 <__strtok_r@plt>
   1de28:	cmp	r0, #0
   1de2c:	bne	1dd5c <crc32@@Base+0x4304>
   1de30:	b	1dae4 <crc32@@Base+0x408c>
   1de34:	movw	r4, #168	; 0xa8
   1de38:	movt	r4, #6
   1de3c:	ldr	r3, [r4, #2908]	; 0xb5c
   1de40:	cmp	r3, #0
   1de44:	beq	1e4e0 <crc32@@Base+0x4a88>
   1de48:	ldr	r6, [sp, #16]
   1de4c:	mov	r1, #1
   1de50:	movw	r2, #40800	; 0x9f60
   1de54:	movt	r2, #3
   1de58:	movw	r5, #2914	; 0xb62
   1de5c:	ldr	r0, [r6]
   1de60:	bl	122d8 <__fprintf_chk@plt>
   1de64:	ldrb	r3, [r4, #2912]	; 0xb60
   1de68:	mov	r1, #1
   1de6c:	movw	r2, #40832	; 0x9f80
   1de70:	ldr	r0, [r6]
   1de74:	movt	r2, #3
   1de78:	bl	122d8 <__fprintf_chk@plt>
   1de7c:	ldrh	r3, [r4, r5]
   1de80:	mov	r1, #1
   1de84:	ldr	r0, [r6]
   1de88:	movw	r2, #40864	; 0x9fa0
   1de8c:	movt	r2, #3
   1de90:	bl	122d8 <__fprintf_chk@plt>
   1de94:	ldr	ip, [sp, #20]
   1de98:	ldrh	r3, [r4, r5]
   1de9c:	ldrb	r2, [r4, #2912]	; 0xb60
   1dea0:	ldr	r1, [r4, #2908]	; 0xb5c
   1dea4:	ldr	r0, [r4, #2916]	; 0xb64
   1dea8:	str	ip, [sp]
   1deac:	bl	1d12c <crc32@@Base+0x36d4>
   1deb0:	ldr	r3, [sp, #24]
   1deb4:	ldr	r2, [sp, #52]	; 0x34
   1deb8:	mov	r0, #0
   1debc:	ldr	r3, [r3]
   1dec0:	cmp	r2, r3
   1dec4:	bne	1e530 <crc32@@Base+0x4ad8>
   1dec8:	add	sp, sp, #60	; 0x3c
   1decc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ded0:	movw	r4, #168	; 0xa8
   1ded4:	movt	r4, #6
   1ded8:	mov	ip, #40	; 0x28
   1dedc:	str	r2, [sp, #36]	; 0x24
   1dee0:	ldr	r3, [r4, #2904]	; 0xb58
   1dee4:	add	r2, sp, #44	; 0x2c
   1dee8:	mov	r1, r5
   1deec:	movw	r8, #357	; 0x165
   1def0:	mla	r3, ip, r3, r4
   1def4:	add	r3, r3, #1616	; 0x650
   1def8:	mov	r9, #0
   1defc:	strd	r8, [r3, #40]	; 0x28
   1df00:	bl	12248 <__strtok_r@plt>
   1df04:	subs	sl, r0, #0
   1df08:	beq	1dae4 <crc32@@Base+0x408c>
   1df0c:	ldrb	r3, [sl]
   1df10:	cmp	r3, #35	; 0x23
   1df14:	beq	1dae4 <crc32@@Base+0x408c>
   1df18:	mov	r2, #0
   1df1c:	mov	r0, sl
   1df20:	mov	r1, r2
   1df24:	mov	r6, r2
   1df28:	bl	122b4 <strtoll@plt>
   1df2c:	ldr	r2, [r4, #2904]	; 0xb58
   1df30:	mov	r3, #40	; 0x28
   1df34:	mov	r1, r5
   1df38:	mov	r9, #0
   1df3c:	str	r6, [sp, #36]	; 0x24
   1df40:	mla	r3, r3, r2, r4
   1df44:	add	r2, r2, #1
   1df48:	str	r2, [r4, #2904]	; 0xb58
   1df4c:	add	r2, sp, #44	; 0x2c
   1df50:	add	r3, r3, #1616	; 0x650
   1df54:	mov	r8, r0
   1df58:	mov	r0, r6
   1df5c:	strd	r8, [r3, #32]
   1df60:	bl	12248 <__strtok_r@plt>
   1df64:	cmp	r0, #0
   1df68:	beq	1dae4 <crc32@@Base+0x408c>
   1df6c:	ldrb	r3, [r0]
   1df70:	cmp	r3, #35	; 0x23
   1df74:	beq	1dae4 <crc32@@Base+0x408c>
   1df78:	add	r2, sp, #44	; 0x2c
   1df7c:	mov	r1, r5
   1df80:	mov	r0, r6
   1df84:	str	r6, [sp, #36]	; 0x24
   1df88:	bl	12248 <__strtok_r@plt>
   1df8c:	cmp	r0, #0
   1df90:	beq	1dae4 <crc32@@Base+0x408c>
   1df94:	ldrb	r3, [r0]
   1df98:	cmp	r3, #35	; 0x23
   1df9c:	beq	1dae4 <crc32@@Base+0x408c>
   1dfa0:	mov	r0, r6
   1dfa4:	add	r2, sp, #44	; 0x2c
   1dfa8:	mov	r1, r5
   1dfac:	str	r6, [sp, #36]	; 0x24
   1dfb0:	bl	12248 <__strtok_r@plt>
   1dfb4:	cmp	r0, #0
   1dfb8:	beq	1dae4 <crc32@@Base+0x408c>
   1dfbc:	ldrb	r3, [r0]
   1dfc0:	cmp	r3, #35	; 0x23
   1dfc4:	beq	1dae4 <crc32@@Base+0x408c>
   1dfc8:	mov	r6, #4
   1dfcc:	mov	r4, #6
   1dfd0:	b	1dd6c <crc32@@Base+0x4314>
   1dfd4:	movw	r4, #168	; 0xa8
   1dfd8:	movt	r4, #6
   1dfdc:	str	r3, [sp, #36]	; 0x24
   1dfe0:	mov	ip, #40	; 0x28
   1dfe4:	ldr	r3, [r4, #2904]	; 0xb58
   1dfe8:	add	r2, sp, #44	; 0x2c
   1dfec:	mov	r1, r5
   1dff0:	movw	r8, #354	; 0x162
   1dff4:	mla	r3, ip, r3, r4
   1dff8:	b	1def4 <crc32@@Base+0x449c>
   1dffc:	movw	r1, #40680	; 0x9ee8
   1e000:	mov	r2, sl
   1e004:	movt	r1, #3
   1e008:	ldr	r0, [pc, #1440]	; 1e5b0 <crc32@@Base+0x4b58>
   1e00c:	bl	1a8d8 <crc32@@Base+0xe80>
   1e010:	movw	r4, #168	; 0xa8
   1e014:	movt	r4, #6
   1e018:	cmp	r0, #0
   1e01c:	str	r0, [r4, #2920]	; 0xb68
   1e020:	blt	1e55c <crc32@@Base+0x4b04>
   1e024:	mov	r3, #0
   1e028:	add	r2, sp, #44	; 0x2c
   1e02c:	mov	r0, r3
   1e030:	mov	r1, r5
   1e034:	str	r3, [sp, #36]	; 0x24
   1e038:	bl	12248 <__strtok_r@plt>
   1e03c:	subs	sl, r0, #0
   1e040:	beq	1dae4 <crc32@@Base+0x408c>
   1e044:	ldrb	r3, [sl]
   1e048:	cmp	r3, #35	; 0x23
   1e04c:	beq	1dae4 <crc32@@Base+0x408c>
   1e050:	ldr	r3, [r4, #2920]	; 0xb68
   1e054:	sub	r3, r3, #1
   1e058:	cmp	r3, #5
   1e05c:	ldrls	pc, [pc, r3, lsl #2]
   1e060:	b	1e404 <crc32@@Base+0x49ac>
   1e064:	strdeq	lr, [r1], -r8
   1e068:	andeq	lr, r1, ip, ror r0
   1e06c:	andeq	lr, r1, r4, asr #1
   1e070:	andeq	sp, r1, ip, ror sp
   1e074:	andeq	sp, r1, ip, ror sp
   1e078:	andeq	lr, r1, r0, asr r1
   1e07c:	ldr	r2, [r4, #2904]	; 0xb58
   1e080:	mov	r3, #40	; 0x28
   1e084:	mov	r1, r5
   1e088:	mov	r8, #0
   1e08c:	mov	r0, #0
   1e090:	mov	lr, #4
   1e094:	mul	r3, r3, r2
   1e098:	add	r2, sp, #44	; 0x2c
   1e09c:	str	r0, [sp, #36]	; 0x24
   1e0a0:	add	ip, fp, r3
   1e0a4:	str	lr, [fp, r3]
   1e0a8:	str	sl, [ip, #4]
   1e0ac:	mov	r9, #0
   1e0b0:	strd	r8, [ip, #32]
   1e0b4:	bl	12248 <__strtok_r@plt>
   1e0b8:	subs	sl, r0, #0
   1e0bc:	bne	1ddc8 <crc32@@Base+0x4370>
   1e0c0:	b	1dae4 <crc32@@Base+0x408c>
   1e0c4:	ldr	r2, [r4, #2904]	; 0xb58
   1e0c8:	mov	r3, #40	; 0x28
   1e0cc:	mov	r0, #0
   1e0d0:	mov	lr, #5
   1e0d4:	str	r0, [sp, #36]	; 0x24
   1e0d8:	mov	r1, r5
   1e0dc:	mul	r3, r3, r2
   1e0e0:	mov	r8, #1
   1e0e4:	add	r2, sp, #44	; 0x2c
   1e0e8:	add	ip, fp, r3
   1e0ec:	str	lr, [fp, r3]
   1e0f0:	str	sl, [ip, #4]
   1e0f4:	b	1e0ac <crc32@@Base+0x4654>
   1e0f8:	ldr	r2, [r4, #2904]	; 0xb58
   1e0fc:	mov	r3, #40	; 0x28
   1e100:	mov	r0, #0
   1e104:	mov	lr, #2
   1e108:	mov	r1, r5
   1e10c:	str	r0, [sp, #36]	; 0x24
   1e110:	mul	r3, r3, r2
   1e114:	add	r2, r2, #1
   1e118:	str	r2, [r4, #2904]	; 0xb58
   1e11c:	add	r2, sp, #44	; 0x2c
   1e120:	add	ip, fp, r3
   1e124:	str	lr, [fp, r3]
   1e128:	str	sl, [ip, #4]
   1e12c:	bl	12248 <__strtok_r@plt>
   1e130:	subs	sl, r0, #0
   1e134:	beq	1dae4 <crc32@@Base+0x408c>
   1e138:	ldrb	r3, [sl]
   1e13c:	cmp	r3, #35	; 0x23
   1e140:	beq	1dae4 <crc32@@Base+0x408c>
   1e144:	cmp	r6, #4
   1e148:	bne	1dd3c <crc32@@Base+0x42e4>
   1e14c:	b	1df18 <crc32@@Base+0x44c0>
   1e150:	ldr	r2, [r4, #2904]	; 0xb58
   1e154:	mov	r3, #40	; 0x28
   1e158:	cmp	r6, #12
   1e15c:	mov	r0, #0
   1e160:	mov	r8, #5
   1e164:	mov	r9, #0
   1e168:	mul	r3, r3, r2
   1e16c:	movne	lr, #6
   1e170:	moveq	lr, #14
   1e174:	str	r0, [sp, #36]	; 0x24
   1e178:	add	r2, sp, #44	; 0x2c
   1e17c:	mov	r1, r5
   1e180:	add	ip, fp, r3
   1e184:	strd	r8, [ip, #32]
   1e188:	b	1ddb4 <crc32@@Base+0x435c>
   1e18c:	movw	r4, #168	; 0xa8
   1e190:	movt	r4, #6
   1e194:	mov	r3, #40	; 0x28
   1e198:	mov	r2, #0
   1e19c:	ldr	r8, [r4, #2904]	; 0xb58
   1e1a0:	mov	r0, sl
   1e1a4:	mov	ip, #10
   1e1a8:	mul	r3, r3, r8
   1e1ac:	mov	r1, r2
   1e1b0:	add	r8, r8, #1
   1e1b4:	mov	r9, #0
   1e1b8:	add	sl, fp, r3
   1e1bc:	str	ip, [fp, r3]
   1e1c0:	bl	122b4 <strtoll@plt>
   1e1c4:	mov	r3, #0
   1e1c8:	str	r8, [r4, #2904]	; 0xb58
   1e1cc:	add	r2, sp, #44	; 0x2c
   1e1d0:	str	r3, [sp, #36]	; 0x24
   1e1d4:	mov	r1, r5
   1e1d8:	mov	r8, r0
   1e1dc:	mov	r0, r3
   1e1e0:	strd	r8, [sl, #24]
   1e1e4:	bl	12248 <__strtok_r@plt>
   1e1e8:	subs	sl, r0, #0
   1e1ec:	bne	1e044 <crc32@@Base+0x45ec>
   1e1f0:	b	1dae4 <crc32@@Base+0x408c>
   1e1f4:	mov	r2, #0
   1e1f8:	mov	r0, sl
   1e1fc:	mov	r1, r2
   1e200:	bl	122b4 <strtoll@plt>
   1e204:	ldr	ip, [pc, #936]	; 1e5b4 <crc32@@Base+0x4b5c>
   1e208:	mov	r3, #0
   1e20c:	add	r2, sp, #44	; 0x2c
   1e210:	mov	r1, r5
   1e214:	str	r3, [sp, #36]	; 0x24
   1e218:	uxtb	lr, r0
   1e21c:	mov	r0, r3
   1e220:	strh	lr, [ip]
   1e224:	bl	12248 <__strtok_r@plt>
   1e228:	subs	sl, r0, #0
   1e22c:	beq	1dae4 <crc32@@Base+0x408c>
   1e230:	ldrb	r3, [sl]
   1e234:	cmp	r3, #35	; 0x23
   1e238:	beq	1dae4 <crc32@@Base+0x408c>
   1e23c:	movw	r4, #168	; 0xa8
   1e240:	movt	r4, #6
   1e244:	b	1e050 <crc32@@Base+0x45f8>
   1e248:	mov	r2, sl
   1e24c:	movw	r1, #38636	; 0x96ec
   1e250:	ldr	r0, [pc, #864]	; 1e5b8 <crc32@@Base+0x4b60>
   1e254:	movt	r1, #3
   1e258:	bl	1a8d8 <crc32@@Base+0xe80>
   1e25c:	movw	r4, #168	; 0xa8
   1e260:	movt	r4, #6
   1e264:	mov	r3, #0
   1e268:	add	r2, sp, #44	; 0x2c
   1e26c:	mov	r1, r5
   1e270:	str	r3, [sp, #36]	; 0x24
   1e274:	str	r0, [r4, #2908]	; 0xb5c
   1e278:	mov	r0, r3
   1e27c:	bl	12248 <__strtok_r@plt>
   1e280:	subs	sl, r0, #0
   1e284:	bne	1e044 <crc32@@Base+0x45ec>
   1e288:	b	1dae4 <crc32@@Base+0x408c>
   1e28c:	movw	r4, #168	; 0xa8
   1e290:	movt	r4, #6
   1e294:	mov	r3, #40	; 0x28
   1e298:	mov	r0, #0
   1e29c:	ldr	r2, [r4, #2904]	; 0xb58
   1e2a0:	mov	lr, #13
   1e2a4:	str	r0, [sp, #36]	; 0x24
   1e2a8:	add	r1, r2, #1
   1e2ac:	str	r1, [r4, #2904]	; 0xb58
   1e2b0:	mul	r3, r3, r2
   1e2b4:	mov	r1, r5
   1e2b8:	add	r2, sp, #44	; 0x2c
   1e2bc:	add	ip, fp, r3
   1e2c0:	str	lr, [fp, r3]
   1e2c4:	str	sl, [ip, #4]
   1e2c8:	bl	12248 <__strtok_r@plt>
   1e2cc:	subs	sl, r0, #0
   1e2d0:	bne	1e044 <crc32@@Base+0x45ec>
   1e2d4:	b	1dae4 <crc32@@Base+0x408c>
   1e2d8:	movw	r4, #168	; 0xa8
   1e2dc:	movt	r4, #6
   1e2e0:	mov	r3, #40	; 0x28
   1e2e4:	mov	r2, #0
   1e2e8:	ldr	r8, [r4, #2904]	; 0xb58
   1e2ec:	mov	ip, #16
   1e2f0:	mov	r0, sl
   1e2f4:	mov	r1, r2
   1e2f8:	mov	r9, #0
   1e2fc:	mul	r3, r3, r8
   1e300:	add	r8, r8, #1
   1e304:	add	sl, fp, r3
   1e308:	str	ip, [fp, r3]
   1e30c:	bl	122b4 <strtoll@plt>
   1e310:	mov	r3, #0
   1e314:	str	r8, [r4, #2904]	; 0xb58
   1e318:	add	r2, sp, #44	; 0x2c
   1e31c:	mov	r1, r5
   1e320:	str	r3, [sp, #36]	; 0x24
   1e324:	mov	r8, r0
   1e328:	mov	r0, r3
   1e32c:	strd	r8, [sl, #16]
   1e330:	bl	12248 <__strtok_r@plt>
   1e334:	subs	sl, r0, #0
   1e338:	bne	1e044 <crc32@@Base+0x45ec>
   1e33c:	b	1dae4 <crc32@@Base+0x408c>
   1e340:	movw	r4, #168	; 0xa8
   1e344:	movt	r4, #6
   1e348:	mov	r3, #40	; 0x28
   1e34c:	mov	r2, #0
   1e350:	ldr	r8, [r4, #2904]	; 0xb58
   1e354:	mov	r0, sl
   1e358:	mov	ip, #15
   1e35c:	b	1e1a8 <crc32@@Base+0x4750>
   1e360:	mov	r2, #0
   1e364:	mov	r0, sl
   1e368:	mov	r1, r2
   1e36c:	movw	r4, #168	; 0xa8
   1e370:	bl	122b4 <strtoll@plt>
   1e374:	movt	r4, #6
   1e378:	mov	r3, #0
   1e37c:	add	r2, sp, #44	; 0x2c
   1e380:	mov	r1, r5
   1e384:	str	r3, [sp, #36]	; 0x24
   1e388:	strb	r0, [r4, #2912]	; 0xb60
   1e38c:	mov	r0, r3
   1e390:	bl	12248 <__strtok_r@plt>
   1e394:	subs	sl, r0, #0
   1e398:	bne	1e044 <crc32@@Base+0x45ec>
   1e39c:	b	1dae4 <crc32@@Base+0x408c>
   1e3a0:	movw	r1, #40640	; 0x9ec0
   1e3a4:	mov	r2, #6
   1e3a8:	movt	r1, #3
   1e3ac:	mov	r0, sl
   1e3b0:	bl	121a0 <strncmp@plt>
   1e3b4:	subs	r3, r0, #0
   1e3b8:	beq	1e484 <crc32@@Base+0x4a2c>
   1e3bc:	mov	r0, sl
   1e3c0:	movw	r1, #40648	; 0x9ec8
   1e3c4:	mov	r2, #6
   1e3c8:	movt	r1, #3
   1e3cc:	bl	121a0 <strncmp@plt>
   1e3d0:	subs	r3, r0, #0
   1e3d4:	bne	1e584 <crc32@@Base+0x4b2c>
   1e3d8:	movw	r4, #168	; 0xa8
   1e3dc:	movt	r4, #6
   1e3e0:	add	r2, sp, #44	; 0x2c
   1e3e4:	mov	r1, r5
   1e3e8:	str	r3, [sp, #36]	; 0x24
   1e3ec:	mov	r3, #2
   1e3f0:	str	r3, [r4, #2916]	; 0xb64
   1e3f4:	bl	12248 <__strtok_r@plt>
   1e3f8:	subs	sl, r0, #0
   1e3fc:	bne	1e044 <crc32@@Base+0x45ec>
   1e400:	b	1dae4 <crc32@@Base+0x408c>
   1e404:	mov	r3, #0
   1e408:	add	r2, sp, #44	; 0x2c
   1e40c:	mov	r0, r3
   1e410:	mov	r1, r5
   1e414:	str	r3, [sp, #36]	; 0x24
   1e418:	bl	12248 <__strtok_r@plt>
   1e41c:	subs	sl, r0, #0
   1e420:	beq	1dae4 <crc32@@Base+0x408c>
   1e424:	ldrb	r3, [sl]
   1e428:	cmp	r3, #35	; 0x23
   1e42c:	bne	1dd24 <crc32@@Base+0x42cc>
   1e430:	b	1dae4 <crc32@@Base+0x408c>
   1e434:	movw	r4, #168	; 0xa8
   1e438:	movt	r4, #6
   1e43c:	mov	r3, #40	; 0x28
   1e440:	mov	r0, #0
   1e444:	ldr	r2, [r4, #2904]	; 0xb58
   1e448:	mov	lr, #17
   1e44c:	mov	r1, r5
   1e450:	str	r0, [sp, #36]	; 0x24
   1e454:	mul	r3, r3, r2
   1e458:	add	r2, sp, #44	; 0x2c
   1e45c:	add	ip, fp, r3
   1e460:	str	lr, [fp, r3]
   1e464:	str	sl, [ip, #4]
   1e468:	bl	12248 <__strtok_r@plt>
   1e46c:	subs	sl, r0, #0
   1e470:	beq	1dae4 <crc32@@Base+0x408c>
   1e474:	ldrb	r3, [sl]
   1e478:	cmp	r3, #35	; 0x23
   1e47c:	bne	1dca0 <crc32@@Base+0x4248>
   1e480:	b	1dae4 <crc32@@Base+0x408c>
   1e484:	movw	r4, #168	; 0xa8
   1e488:	movt	r4, #6
   1e48c:	add	r2, sp, #44	; 0x2c
   1e490:	mov	r1, r5
   1e494:	str	r3, [sp, #36]	; 0x24
   1e498:	mov	r3, #1
   1e49c:	str	r3, [r4, #2916]	; 0xb64
   1e4a0:	bl	12248 <__strtok_r@plt>
   1e4a4:	subs	sl, r0, #0
   1e4a8:	bne	1e044 <crc32@@Base+0x45ec>
   1e4ac:	b	1dae4 <crc32@@Base+0x408c>
   1e4b0:	movw	r2, #65196	; 0xfeac
   1e4b4:	movt	r2, #4
   1e4b8:	str	sl, [sp, #4]
   1e4bc:	mov	r1, #1
   1e4c0:	ldr	r0, [r2]
   1e4c4:	movw	r2, #40580	; 0x9e84
   1e4c8:	ldr	r3, [sp, #28]
   1e4cc:	movt	r2, #3
   1e4d0:	str	r7, [sp]
   1e4d4:	bl	122d8 <__fprintf_chk@plt>
   1e4d8:	mov	r0, #1
   1e4dc:	bl	12218 <exit@plt>
   1e4e0:	movw	r3, #65196	; 0xfeac
   1e4e4:	movt	r3, #4
   1e4e8:	movw	r0, #40780	; 0x9f4c
   1e4ec:	mov	r2, #18
   1e4f0:	ldr	r3, [r3]
   1e4f4:	movt	r0, #3
   1e4f8:	mov	r1, #1
   1e4fc:	bl	1259c <fwrite@plt>
   1e500:	mov	r0, #1
   1e504:	bl	12218 <exit@plt>
   1e508:	movw	r1, #65196	; 0xfeac
   1e50c:	movt	r1, #4
   1e510:	ldr	r3, [sp, #28]
   1e514:	movw	r2, #40528	; 0x9e50
   1e518:	ldr	r0, [r1]
   1e51c:	movt	r2, #3
   1e520:	mov	r1, #1
   1e524:	bl	122d8 <__fprintf_chk@plt>
   1e528:	mov	r0, #1
   1e52c:	bl	12218 <exit@plt>
   1e530:	bl	124b8 <__stack_chk_fail@plt>
   1e534:	movw	r1, #65196	; 0xfeac
   1e538:	movt	r1, #4
   1e53c:	mov	r3, sl
   1e540:	movw	r2, #40756	; 0x9f34
   1e544:	ldr	r0, [r1]
   1e548:	movt	r2, #3
   1e54c:	mov	r1, #1
   1e550:	bl	122d8 <__fprintf_chk@plt>
   1e554:	mov	r0, #1
   1e558:	bl	12218 <exit@plt>
   1e55c:	movw	r1, #65196	; 0xfeac
   1e560:	movt	r1, #4
   1e564:	mov	r3, sl
   1e568:	movw	r2, #40704	; 0x9f00
   1e56c:	ldr	r0, [r1]
   1e570:	movt	r2, #3
   1e574:	mov	r1, #1
   1e578:	bl	122d8 <__fprintf_chk@plt>
   1e57c:	mov	r0, #1
   1e580:	bl	12218 <exit@plt>
   1e584:	movw	r3, #65196	; 0xfeac
   1e588:	movt	r3, #4
   1e58c:	movw	r0, #40656	; 0x9ed0
   1e590:	mov	r2, #20
   1e594:	ldr	r3, [r3]
   1e598:	movt	r0, #3
   1e59c:	mov	r1, #1
   1e5a0:	bl	1259c <fwrite@plt>
   1e5a4:	mov	r0, #1
   1e5a8:	bl	12218 <exit@plt>
   1e5ac:	andeq	r0, r6, r0, lsl #14
   1e5b0:	andeq	pc, r4, r0, lsl #14
   1e5b4:	andeq	r0, r6, sl, lsl #24
   1e5b8:	andeq	pc, r4, ip, lsr #13
   1e5bc:	mov	r0, #0
   1e5c0:	bx	lr
   1e5c4:	bx	lr
   1e5c8:	bx	lr
   1e5cc:	subs	r0, r0, #37	; 0x25
   1e5d0:	movne	r0, #1
   1e5d4:	bx	lr
   1e5d8:	push	{r4, r5, r6, r7, r8, lr}
   1e5dc:	movw	r4, #61168	; 0xeef0
   1e5e0:	movt	r4, #4
   1e5e4:	sub	sp, sp, #16
   1e5e8:	mov	r5, r0
   1e5ec:	mov	r8, r1
   1e5f0:	ldr	r3, [r4]
   1e5f4:	mov	r7, r2
   1e5f8:	str	r3, [sp, #12]
   1e5fc:	bl	126b0 <__errno_location@plt>
   1e600:	mov	r3, #0
   1e604:	mov	r2, #16
   1e608:	add	r1, sp, #8
   1e60c:	mov	r6, r0
   1e610:	mov	r0, r5
   1e614:	str	r3, [r6]
   1e618:	bl	122f0 <strtoul@plt>
   1e61c:	ldr	r3, [r6]
   1e620:	cmp	r3, #0
   1e624:	bne	1e64c <crc32@@Base+0x4bf4>
   1e628:	ldr	r3, [sp, #8]
   1e62c:	cmp	r3, r5
   1e630:	beq	1e64c <crc32@@Base+0x4bf4>
   1e634:	ldr	r2, [sp, #12]
   1e638:	ldr	r3, [r4]
   1e63c:	cmp	r2, r3
   1e640:	bne	1e67c <crc32@@Base+0x4c24>
   1e644:	add	sp, sp, #16
   1e648:	pop	{r4, r5, r6, r7, r8, pc}
   1e64c:	movw	r1, #65196	; 0xfeac
   1e650:	movt	r1, #4
   1e654:	str	r5, [sp, #4]
   1e658:	mov	r3, r8
   1e65c:	str	r7, [sp]
   1e660:	movw	r2, #26316	; 0x66cc
   1e664:	ldr	r0, [r1]
   1e668:	movt	r2, #3
   1e66c:	mov	r1, #1
   1e670:	bl	122d8 <__fprintf_chk@plt>
   1e674:	mov	r0, #1
   1e678:	bl	12218 <exit@plt>
   1e67c:	bl	124b8 <__stack_chk_fail@plt>
   1e680:	push	{r4, r5, r6, r7, lr}
   1e684:	movw	r6, #61168	; 0xeef0
   1e688:	sub	sp, sp, #20
   1e68c:	movt	r6, #4
   1e690:	add	r3, sp, #16
   1e694:	movw	r4, #65200	; 0xfeb0
   1e698:	ldr	ip, [r6]
   1e69c:	movt	r4, #4
   1e6a0:	add	r1, r3, r0, lsl #2
   1e6a4:	mov	r7, r0
   1e6a8:	movw	r2, #41400	; 0xa1b8
   1e6ac:	movw	r3, #41408	; 0xa1c0
   1e6b0:	movt	r2, #3
   1e6b4:	movt	r3, #3
   1e6b8:	ldr	r0, [r4]
   1e6bc:	strd	r2, [sp, #4]
   1e6c0:	movw	r2, #41424	; 0xa1d0
   1e6c4:	ldr	r3, [r1, #-12]
   1e6c8:	movt	r2, #3
   1e6cc:	mov	r1, #1
   1e6d0:	str	ip, [sp, #12]
   1e6d4:	bl	122d8 <__fprintf_chk@plt>
   1e6d8:	movw	r3, #3092	; 0xc14
   1e6dc:	movt	r3, #6
   1e6e0:	mov	r1, #1
   1e6e4:	add	r5, r3, r7, lsl #6
   1e6e8:	ldr	r0, [r4]
   1e6ec:	ldrb	r3, [r3, r7, lsl #6]
   1e6f0:	movw	r2, #41464	; 0xa1f8
   1e6f4:	movt	r2, #3
   1e6f8:	bl	122d8 <__fprintf_chk@plt>
   1e6fc:	ldrh	r3, [r5, #1]
   1e700:	mov	r1, #1
   1e704:	ldr	r0, [r4]
   1e708:	movw	r2, #41484	; 0xa20c
   1e70c:	movt	r2, #3
   1e710:	bl	122d8 <__fprintf_chk@plt>
   1e714:	ldrb	r3, [r5, #3]
   1e718:	mov	r1, #1
   1e71c:	ldr	r0, [r4]
   1e720:	movw	r2, #41508	; 0xa224
   1e724:	movt	r2, #3
   1e728:	bl	122d8 <__fprintf_chk@plt>
   1e72c:	ldr	r3, [r5, #4]
   1e730:	mov	r1, #1
   1e734:	ldr	r0, [r4]
   1e738:	movw	r2, #41532	; 0xa23c
   1e73c:	movt	r2, #3
   1e740:	bl	122d8 <__fprintf_chk@plt>
   1e744:	ldr	r3, [r5, #8]
   1e748:	mov	r1, #1
   1e74c:	ldr	r0, [r4]
   1e750:	movw	r2, #41548	; 0xa24c
   1e754:	movt	r2, #3
   1e758:	bl	122d8 <__fprintf_chk@plt>
   1e75c:	ldr	r3, [r5, #12]
   1e760:	mov	r1, #1
   1e764:	ldr	r0, [r4]
   1e768:	movw	r2, #41568	; 0xa260
   1e76c:	movt	r2, #3
   1e770:	bl	122d8 <__fprintf_chk@plt>
   1e774:	ldr	r3, [r5, #16]
   1e778:	mov	r1, #1
   1e77c:	ldr	r0, [r4]
   1e780:	movw	r2, #41588	; 0xa274
   1e784:	movt	r2, #3
   1e788:	bl	122d8 <__fprintf_chk@plt>
   1e78c:	ldr	r3, [r5, #20]
   1e790:	mov	r1, #1
   1e794:	ldr	r0, [r4]
   1e798:	movw	r2, #41612	; 0xa28c
   1e79c:	movt	r2, #3
   1e7a0:	bl	122d8 <__fprintf_chk@plt>
   1e7a4:	ldr	r3, [r5, #24]
   1e7a8:	mov	r1, #1
   1e7ac:	ldr	r0, [r4]
   1e7b0:	movw	r2, #41628	; 0xa29c
   1e7b4:	movt	r2, #3
   1e7b8:	bl	122d8 <__fprintf_chk@plt>
   1e7bc:	ldr	r3, [r5, #28]
   1e7c0:	mov	r1, #1
   1e7c4:	ldr	r0, [r4]
   1e7c8:	movw	r2, #41644	; 0xa2ac
   1e7cc:	movt	r2, #3
   1e7d0:	bl	122d8 <__fprintf_chk@plt>
   1e7d4:	ldr	r3, [r5, #32]
   1e7d8:	mov	r1, #1
   1e7dc:	ldr	r0, [r4]
   1e7e0:	movw	r2, #41664	; 0xa2c0
   1e7e4:	movt	r2, #3
   1e7e8:	bl	122d8 <__fprintf_chk@plt>
   1e7ec:	ldr	r3, [r5, #36]	; 0x24
   1e7f0:	ldr	r0, [r4]
   1e7f4:	movw	r2, #41688	; 0xa2d8
   1e7f8:	mov	r1, #1
   1e7fc:	movt	r2, #3
   1e800:	bl	122d8 <__fprintf_chk@plt>
   1e804:	ldr	r2, [sp, #12]
   1e808:	ldr	r3, [r6]
   1e80c:	cmp	r2, r3
   1e810:	bne	1e834 <crc32@@Base+0x4ddc>
   1e814:	ldr	r3, [r5, #40]	; 0x28
   1e818:	movw	r2, #41712	; 0xa2f0
   1e81c:	ldr	r0, [r4]
   1e820:	movt	r2, #3
   1e824:	mov	r1, #1
   1e828:	add	sp, sp, #20
   1e82c:	pop	{r4, r5, r6, r7, lr}
   1e830:	b	122d8 <__fprintf_chk@plt>
   1e834:	bl	124b8 <__stack_chk_fail@plt>
   1e838:	push	{r4, r5, r6, r7, lr}
   1e83c:	movw	r7, #61168	; 0xeef0
   1e840:	sub	sp, sp, #4096	; 0x1000
   1e844:	movt	r7, #4
   1e848:	sub	sp, sp, #20
   1e84c:	mov	r4, r1
   1e850:	ldr	r3, [r7]
   1e854:	add	ip, sp, #4096	; 0x1000
   1e858:	add	ip, ip, #12
   1e85c:	mov	r6, r0
   1e860:	mov	r2, #4096	; 0x1000
   1e864:	mov	r1, #0
   1e868:	add	r0, sp, #12
   1e86c:	str	r3, [ip]
   1e870:	bl	12308 <memset@plt>
   1e874:	mov	r1, r4
   1e878:	mov	r0, r6
   1e87c:	mov	r2, #0
   1e880:	bl	12518 <lseek@plt>
   1e884:	cmp	r0, #0
   1e888:	movge	r4, #8192	; 0x2000
   1e88c:	blt	1e918 <crc32@@Base+0x4ec0>
   1e890:	cmp	r4, #4096	; 0x1000
   1e894:	add	r1, sp, #12
   1e898:	mov	r0, r6
   1e89c:	movlt	r5, r4
   1e8a0:	movge	r5, #4096	; 0x1000
   1e8a4:	mov	r2, r5
   1e8a8:	bl	1262c <write@plt>
   1e8ac:	cmp	r0, r5
   1e8b0:	bne	1e8e0 <crc32@@Base+0x4e88>
   1e8b4:	subs	r4, r4, r0
   1e8b8:	bne	1e890 <crc32@@Base+0x4e38>
   1e8bc:	add	r3, sp, #4096	; 0x1000
   1e8c0:	add	r3, r3, #12
   1e8c4:	ldr	r2, [r3]
   1e8c8:	ldr	r3, [r7]
   1e8cc:	cmp	r2, r3
   1e8d0:	bne	1e958 <crc32@@Base+0x4f00>
   1e8d4:	add	sp, sp, #4096	; 0x1000
   1e8d8:	add	sp, sp, #20
   1e8dc:	pop	{r4, r5, r6, r7, pc}
   1e8e0:	movw	r3, #65196	; 0xfeac
   1e8e4:	movt	r3, #4
   1e8e8:	ldr	r4, [r3]
   1e8ec:	bl	126b0 <__errno_location@plt>
   1e8f0:	ldr	r0, [r0]
   1e8f4:	bl	12224 <strerror@plt>
   1e8f8:	movw	r2, #39492	; 0x9a44
   1e8fc:	mov	r1, #1
   1e900:	movt	r2, #3
   1e904:	mov	r3, r0
   1e908:	mov	r0, r4
   1e90c:	bl	122d8 <__fprintf_chk@plt>
   1e910:	mov	r0, #1
   1e914:	bl	12218 <exit@plt>
   1e918:	movw	r3, #65196	; 0xfeac
   1e91c:	movt	r3, #4
   1e920:	ldr	r4, [r3]
   1e924:	bl	126b0 <__errno_location@plt>
   1e928:	ldr	r0, [r0]
   1e92c:	bl	12224 <strerror@plt>
   1e930:	movw	r3, #41364	; 0xa194
   1e934:	movw	r2, #41740	; 0xa30c
   1e938:	movt	r3, #3
   1e93c:	movt	r2, #3
   1e940:	mov	r1, #1
   1e944:	str	r0, [sp]
   1e948:	mov	r0, r4
   1e94c:	bl	122d8 <__fprintf_chk@plt>
   1e950:	mov	r0, #1
   1e954:	bl	12218 <exit@plt>
   1e958:	bl	124b8 <__stack_chk_fail@plt>
   1e95c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e960:	movw	r7, #61168	; 0xeef0
   1e964:	sub	sp, sp, #4160	; 0x1040
   1e968:	movt	r7, #4
   1e96c:	sub	sp, sp, #52	; 0x34
   1e970:	mov	sl, r3
   1e974:	ldr	ip, [r7]
   1e978:	add	r3, sp, #4160	; 0x1040
   1e97c:	mov	r6, #0
   1e980:	add	r3, r3, #44	; 0x2c
   1e984:	mov	r4, r1
   1e988:	mov	r5, r0
   1e98c:	mov	r1, r6
   1e990:	mov	fp, r2
   1e994:	add	r0, sp, #108	; 0x6c
   1e998:	mov	r2, #4096	; 0x1000
   1e99c:	str	ip, [r3]
   1e9a0:	str	r6, [sp, #12]
   1e9a4:	bl	12308 <memset@plt>
   1e9a8:	mov	r1, r6
   1e9ac:	mov	r0, r4
   1e9b0:	bl	12458 <open@plt>
   1e9b4:	subs	r8, r0, #0
   1e9b8:	blt	1ec04 <crc32@@Base+0x51ac>
   1e9bc:	mov	r1, r8
   1e9c0:	add	r2, sp, #16
   1e9c4:	mov	r0, #3
   1e9c8:	bl	12578 <__fxstat@plt>
   1e9cc:	cmp	r0, #0
   1e9d0:	blt	1ebd8 <crc32@@Base+0x5180>
   1e9d4:	mov	r3, #1
   1e9d8:	ldr	r1, [sp, #60]	; 0x3c
   1e9dc:	str	r6, [sp, #4]
   1e9e0:	mov	r2, r3
   1e9e4:	str	r8, [sp]
   1e9e8:	mov	r0, r6
   1e9ec:	bl	12410 <mmap@plt>
   1e9f0:	cmn	r0, #1
   1e9f4:	mov	r9, r0
   1e9f8:	beq	1eb9c <crc32@@Base+0x5144>
   1e9fc:	mov	r2, r6
   1ea00:	mov	r1, fp
   1ea04:	mov	r0, r5
   1ea08:	ldr	r4, [sp, #60]	; 0x3c
   1ea0c:	bl	12518 <lseek@plt>
   1ea10:	sub	r4, r4, sl
   1ea14:	cmp	r0, #0
   1ea18:	blt	1eb74 <crc32@@Base+0x511c>
   1ea1c:	add	r1, r9, sl
   1ea20:	mov	r2, r4
   1ea24:	mov	r0, r5
   1ea28:	bl	1262c <write@plt>
   1ea2c:	cmp	r4, r0
   1ea30:	bne	1eb3c <crc32@@Base+0x50e4>
   1ea34:	rsbs	r3, r4, #0
   1ea38:	and	r2, r4, #3
   1ea3c:	and	r3, r3, #3
   1ea40:	rsbpl	r2, r3, #0
   1ea44:	cmn	r4, #1
   1ea48:	moveq	r3, #1
   1ea4c:	movne	r3, #0
   1ea50:	cmp	r2, #0
   1ea54:	moveq	r3, #0
   1ea58:	cmp	r3, #0
   1ea5c:	bne	1eae8 <crc32@@Base+0x5090>
   1ea60:	cmn	r4, #1
   1ea64:	bge	1eb04 <crc32@@Base+0x50ac>
   1ea68:	rsb	r4, r4, #0
   1ea6c:	b	1ea90 <crc32@@Base+0x5038>
   1ea70:	mov	r2, #4096	; 0x1000
   1ea74:	add	r1, sp, #108	; 0x6c
   1ea78:	mov	r0, r5
   1ea7c:	bl	1262c <write@plt>
   1ea80:	cmp	r0, #4096	; 0x1000
   1ea84:	bne	1eab0 <crc32@@Base+0x5058>
   1ea88:	subs	r4, r4, #4096	; 0x1000
   1ea8c:	beq	1eb04 <crc32@@Base+0x50ac>
   1ea90:	cmp	r4, #4096	; 0x1000
   1ea94:	bge	1ea70 <crc32@@Base+0x5018>
   1ea98:	add	r1, sp, #108	; 0x6c
   1ea9c:	mov	r0, r5
   1eaa0:	mov	r2, r4
   1eaa4:	bl	1262c <write@plt>
   1eaa8:	cmp	r0, r4
   1eaac:	beq	1eb04 <crc32@@Base+0x50ac>
   1eab0:	movw	r3, #65196	; 0xfeac
   1eab4:	movt	r3, #4
   1eab8:	ldr	r4, [r3]
   1eabc:	bl	126b0 <__errno_location@plt>
   1eac0:	ldr	r0, [r0]
   1eac4:	bl	12224 <strerror@plt>
   1eac8:	movw	r2, #39492	; 0x9a44
   1eacc:	mov	r1, #1
   1ead0:	movt	r2, #3
   1ead4:	mov	r3, r0
   1ead8:	mov	r0, r4
   1eadc:	bl	122d8 <__fprintf_chk@plt>
   1eae0:	mov	r0, #1
   1eae4:	bl	12218 <exit@plt>
   1eae8:	rsb	r4, r2, #4
   1eaec:	add	r1, sp, #12
   1eaf0:	mov	r0, r5
   1eaf4:	mov	r2, r4
   1eaf8:	bl	1262c <write@plt>
   1eafc:	cmp	r4, r0
   1eb00:	bne	1ec34 <crc32@@Base+0x51dc>
   1eb04:	ldr	r1, [sp, #60]	; 0x3c
   1eb08:	mov	r0, r9
   1eb0c:	bl	12608 <munmap@plt>
   1eb10:	mov	r0, r8
   1eb14:	bl	12338 <close@plt>
   1eb18:	add	r3, sp, #4160	; 0x1040
   1eb1c:	add	r3, r3, #44	; 0x2c
   1eb20:	ldr	r2, [r3]
   1eb24:	ldr	r3, [r7]
   1eb28:	cmp	r2, r3
   1eb2c:	bne	1ec30 <crc32@@Base+0x51d8>
   1eb30:	add	sp, sp, #4160	; 0x1040
   1eb34:	add	sp, sp, #52	; 0x34
   1eb38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eb3c:	movw	r3, #65196	; 0xfeac
   1eb40:	movt	r3, #4
   1eb44:	ldr	r4, [r3]
   1eb48:	bl	126b0 <__errno_location@plt>
   1eb4c:	ldr	r0, [r0]
   1eb50:	bl	12224 <strerror@plt>
   1eb54:	movw	r2, #39476	; 0x9a34
   1eb58:	mov	r1, #1
   1eb5c:	movt	r2, #3
   1eb60:	mov	r3, r0
   1eb64:	mov	r0, r4
   1eb68:	bl	122d8 <__fprintf_chk@plt>
   1eb6c:	mov	r0, #1
   1eb70:	bl	12218 <exit@plt>
   1eb74:	movw	r3, #65196	; 0xfeac
   1eb78:	movt	r3, #4
   1eb7c:	movw	r0, #41756	; 0xa31c
   1eb80:	mov	r2, #15
   1eb84:	ldr	r3, [r3]
   1eb88:	movt	r0, #3
   1eb8c:	mov	r1, #1
   1eb90:	bl	1259c <fwrite@plt>
   1eb94:	mov	r0, #1
   1eb98:	bl	12218 <exit@plt>
   1eb9c:	movw	r3, #65196	; 0xfeac
   1eba0:	movt	r3, #4
   1eba4:	ldr	r5, [r3]
   1eba8:	bl	126b0 <__errno_location@plt>
   1ebac:	ldr	r0, [r0]
   1ebb0:	bl	12224 <strerror@plt>
   1ebb4:	movw	r2, #27776	; 0x6c80
   1ebb8:	movt	r2, #3
   1ebbc:	mov	r3, r4
   1ebc0:	mov	r1, #1
   1ebc4:	str	r0, [sp]
   1ebc8:	mov	r0, r5
   1ebcc:	bl	122d8 <__fprintf_chk@plt>
   1ebd0:	mov	r0, #1
   1ebd4:	bl	12218 <exit@plt>
   1ebd8:	movw	r3, #65196	; 0xfeac
   1ebdc:	movt	r3, #4
   1ebe0:	ldr	r5, [r3]
   1ebe4:	bl	126b0 <__errno_location@plt>
   1ebe8:	ldr	r0, [r0]
   1ebec:	bl	12224 <strerror@plt>
   1ebf0:	movw	r2, #26196	; 0x6654
   1ebf4:	mov	r3, r4
   1ebf8:	mov	r1, #1
   1ebfc:	movt	r2, #3
   1ec00:	b	1ebc4 <crc32@@Base+0x516c>
   1ec04:	movw	r3, #65196	; 0xfeac
   1ec08:	movt	r3, #4
   1ec0c:	ldr	r5, [r3]
   1ec10:	bl	126b0 <__errno_location@plt>
   1ec14:	ldr	r0, [r0]
   1ec18:	bl	12224 <strerror@plt>
   1ec1c:	movw	r2, #26172	; 0x663c
   1ec20:	mov	r3, r4
   1ec24:	mov	r1, #1
   1ec28:	movt	r2, #3
   1ec2c:	b	1ebc4 <crc32@@Base+0x516c>
   1ec30:	bl	124b8 <__stack_chk_fail@plt>
   1ec34:	movw	r3, #65196	; 0xfeac
   1ec38:	movt	r3, #4
   1ec3c:	ldr	r4, [r3]
   1ec40:	bl	126b0 <__errno_location@plt>
   1ec44:	ldr	r0, [r0]
   1ec48:	bl	12224 <strerror@plt>
   1ec4c:	movw	r2, #39736	; 0x9b38
   1ec50:	mov	r1, #1
   1ec54:	movt	r2, #3
   1ec58:	mov	r3, r0
   1ec5c:	mov	r0, r4
   1ec60:	bl	122d8 <__fprintf_chk@plt>
   1ec64:	mov	r0, #1
   1ec68:	bl	12218 <exit@plt>
   1ec6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec70:	movw	r4, #3092	; 0xc14
   1ec74:	movt	r4, #6
   1ec78:	movw	r9, #61168	; 0xeef0
   1ec7c:	movt	r9, #4
   1ec80:	sub	sp, sp, #212	; 0xd4
   1ec84:	ldr	r1, [r4, #128]	; 0x80
   1ec88:	ldr	r3, [r9]
   1ec8c:	cmp	r1, #0
   1ec90:	str	r3, [sp, #204]	; 0xcc
   1ec94:	beq	1f294 <crc32@@Base+0x583c>
   1ec98:	mov	r7, r0
   1ec9c:	ldr	r0, [r4, #132]	; 0x84
   1eca0:	ldr	r6, [r4, #136]	; 0x88
   1eca4:	cmp	r0, #0
   1eca8:	beq	1f0a0 <crc32@@Base+0x5648>
   1ecac:	mov	r1, #0
   1ecb0:	mov	sl, r6
   1ecb4:	bl	12458 <open@plt>
   1ecb8:	subs	r5, r0, #0
   1ecbc:	movwlt	r2, #65196	; 0xfeac
   1ecc0:	ldrlt	r5, [r4, #132]	; 0x84
   1ecc4:	movtlt	r2, #4
   1ecc8:	blt	1f208 <crc32@@Base+0x57b0>
   1eccc:	add	r2, sp, #48	; 0x30
   1ecd0:	mov	r1, r5
   1ecd4:	mov	r0, #3
   1ecd8:	bl	12578 <__fxstat@plt>
   1ecdc:	cmp	r0, #0
   1ece0:	blt	1f23c <crc32@@Base+0x57e4>
   1ece4:	mov	r0, r5
   1ece8:	mov	r5, #106496	; 0x1a000
   1ecec:	bl	12338 <close@plt>
   1ecf0:	ldr	r3, [sp, #92]	; 0x5c
   1ecf4:	movw	r2, #40959	; 0x9fff
   1ecf8:	movt	r2, #1
   1ecfc:	add	r2, r3, r2
   1ed00:	movw	r3, #60495	; 0xec4f
   1ed04:	movt	r3, #20164	; 0x4ec4
   1ed08:	ldr	r6, [r4, #136]	; 0x88
   1ed0c:	asr	r0, r2, #31
   1ed10:	ldr	r1, [r4, #128]	; 0x80
   1ed14:	smull	r2, r3, r2, r3
   1ed18:	rsb	r0, r0, r3, asr #15
   1ed1c:	mul	r5, r5, r0
   1ed20:	mov	r0, r1
   1ed24:	mov	r1, #0
   1ed28:	add	r6, r6, r5
   1ed2c:	bl	12458 <open@plt>
   1ed30:	subs	r8, r0, #0
   1ed34:	blt	1f1fc <crc32@@Base+0x57a4>
   1ed38:	add	r2, sp, #48	; 0x30
   1ed3c:	mov	r1, r8
   1ed40:	mov	r0, #3
   1ed44:	bl	12578 <__fxstat@plt>
   1ed48:	cmp	r0, #0
   1ed4c:	movwlt	r2, #65196	; 0xfeac
   1ed50:	ldrlt	r5, [r4, #128]	; 0x80
   1ed54:	movtlt	r2, #4
   1ed58:	blt	1f248 <crc32@@Base+0x57f0>
   1ed5c:	mov	r0, r8
   1ed60:	bl	12338 <close@plt>
   1ed64:	ldr	ip, [r4, #136]	; 0x88
   1ed68:	ldr	r3, [sp, #92]	; 0x5c
   1ed6c:	mov	r1, #209	; 0xd1
   1ed70:	add	r8, ip, #572	; 0x23c
   1ed74:	ldr	r2, [r4, #140]	; 0x8c
   1ed78:	add	r8, r8, #3
   1ed7c:	ldr	r0, [r4, #148]	; 0x94
   1ed80:	add	r8, r8, r3
   1ed84:	sub	r3, r2, #64	; 0x40
   1ed88:	bic	r8, r8, #508	; 0x1fc
   1ed8c:	cmp	r0, #0
   1ed90:	bic	r8, r8, #3
   1ed94:	str	r3, [r4, #84]	; 0x54
   1ed98:	sub	r3, r3, ip
   1ed9c:	movt	r1, #16672	; 0x4120
   1eda0:	str	r2, [r4, #68]	; 0x44
   1eda4:	sub	r2, r2, #32
   1eda8:	str	r3, [r4, #96]	; 0x60
   1edac:	add	r3, r3, r8
   1edb0:	str	r1, [r4, #64]	; 0x40
   1edb4:	mov	r1, #0
   1edb8:	str	r3, [r4, #88]	; 0x58
   1edbc:	add	r3, r8, #8192	; 0x2000
   1edc0:	str	r2, [r4, #80]	; 0x50
   1edc4:	str	r3, [r4, #100]	; 0x64
   1edc8:	add	r3, r6, #64	; 0x40
   1edcc:	str	r1, [r4, #76]	; 0x4c
   1edd0:	str	r1, [r4, #104]	; 0x68
   1edd4:	str	r3, [r4, #144]	; 0x90
   1edd8:	beq	1ee48 <crc32@@Base+0x53f0>
   1eddc:	ldr	r3, [r4, #152]	; 0x98
   1ede0:	cmp	r3, r1
   1ede4:	beq	1f2e8 <crc32@@Base+0x5890>
   1ede8:	ldr	r2, [r4, #160]	; 0xa0
   1edec:	ldr	r3, [r4, #156]	; 0x9c
   1edf0:	sub	r3, r3, r2
   1edf4:	str	r3, [r4, #164]	; 0xa4
   1edf8:	sub	r3, r3, r6
   1edfc:	str	r3, [r4, #72]	; 0x48
   1ee00:	bl	12458 <open@plt>
   1ee04:	subs	fp, r0, #0
   1ee08:	movwlt	r2, #65196	; 0xfeac
   1ee0c:	ldrlt	r5, [r4, #148]	; 0x94
   1ee10:	movtlt	r2, #4
   1ee14:	blt	1f208 <crc32@@Base+0x57b0>
   1ee18:	add	r2, sp, #48	; 0x30
   1ee1c:	mov	r1, fp
   1ee20:	mov	r0, #3
   1ee24:	bl	12578 <__fxstat@plt>
   1ee28:	cmp	r0, #0
   1ee2c:	movwlt	r2, #65196	; 0xfeac
   1ee30:	ldrlt	r5, [r4, #148]	; 0x94
   1ee34:	movtlt	r2, #4
   1ee38:	blt	1f248 <crc32@@Base+0x57f0>
   1ee3c:	mov	r0, fp
   1ee40:	bl	12338 <close@plt>
   1ee44:	ldr	ip, [r4, #136]	; 0x88
   1ee48:	ldr	fp, [r4, #132]	; 0x84
   1ee4c:	cmp	fp, #0
   1ee50:	beq	1ee88 <crc32@@Base+0x5430>
   1ee54:	sub	sl, sl, ip
   1ee58:	mov	r2, #0
   1ee5c:	mov	r0, r7
   1ee60:	mov	r1, sl
   1ee64:	bl	12518 <lseek@plt>
   1ee68:	cmp	r0, #0
   1ee6c:	blt	1f310 <crc32@@Base+0x58b8>
   1ee70:	mov	r1, fp
   1ee74:	mov	r3, #1024	; 0x400
   1ee78:	mov	r2, sl
   1ee7c:	mov	r0, r7
   1ee80:	bl	1e95c <crc32@@Base+0x4f04>
   1ee84:	ldr	ip, [r4, #136]	; 0x88
   1ee88:	sub	r6, r6, ip
   1ee8c:	ldr	r3, [r4, #144]	; 0x90
   1ee90:	mov	r2, #0
   1ee94:	mov	r0, r7
   1ee98:	mov	r1, r6
   1ee9c:	sub	ip, r3, ip
   1eea0:	str	ip, [r4, #144]	; 0x90
   1eea4:	bl	12518 <lseek@plt>
   1eea8:	cmp	r0, #0
   1eeac:	blt	1f26c <crc32@@Base+0x5814>
   1eeb0:	mov	r2, #64	; 0x40
   1eeb4:	ldr	r1, [pc, #1324]	; 1f3e8 <crc32@@Base+0x5990>
   1eeb8:	mov	r0, r7
   1eebc:	bl	1262c <write@plt>
   1eec0:	cmp	r0, #64	; 0x40
   1eec4:	mov	fp, r0
   1eec8:	bne	1f2c0 <crc32@@Base+0x5868>
   1eecc:	mov	r3, #0
   1eed0:	ldr	r2, [r4, #144]	; 0x90
   1eed4:	ldr	r1, [r4, #128]	; 0x80
   1eed8:	mov	r0, r7
   1eedc:	bl	1e95c <crc32@@Base+0x4f04>
   1eee0:	ldr	r3, [r4, #136]	; 0x88
   1eee4:	mov	r0, r7
   1eee8:	sub	r8, r8, r3
   1eeec:	add	r5, r8, r5
   1eef0:	mov	r1, r5
   1eef4:	bl	1e838 <crc32@@Base+0x4de0>
   1eef8:	ldr	r3, [r4, #148]	; 0x94
   1eefc:	cmp	r3, #0
   1ef00:	beq	1ef40 <crc32@@Base+0x54e8>
   1ef04:	ldr	r8, [r4, #164]	; 0xa4
   1ef08:	mov	r2, #0
   1ef0c:	ldr	r1, [r4, #136]	; 0x88
   1ef10:	mov	r0, r7
   1ef14:	str	r3, [sp, #8]
   1ef18:	sub	r8, r8, r1
   1ef1c:	str	r8, [r4, #164]	; 0xa4
   1ef20:	mov	r1, r8
   1ef24:	bl	12518 <lseek@plt>
   1ef28:	ldr	r3, [sp, #8]
   1ef2c:	cmp	r0, #0
   1ef30:	blt	1f360 <crc32@@Base+0x5908>
   1ef34:	ldr	r2, [r4, #152]	; 0x98
   1ef38:	cmp	r2, #0
   1ef3c:	bne	1f0ac <crc32@@Base+0x5654>
   1ef40:	mov	fp, #0
   1ef44:	mov	r8, fp
   1ef48:	ldr	r0, [r4, #132]	; 0x84
   1ef4c:	cmp	r0, #0
   1ef50:	beq	1f1f4 <crc32@@Base+0x579c>
   1ef54:	movw	r7, #65200	; 0xfeb0
   1ef58:	movt	r7, #4
   1ef5c:	mov	r0, #1
   1ef60:	bl	1e680 <crc32@@Base+0x4c28>
   1ef64:	ldr	r3, [r7]
   1ef68:	movw	r0, #42016	; 0xa420
   1ef6c:	mov	r2, #31
   1ef70:	movt	r0, #3
   1ef74:	mov	r1, #1
   1ef78:	bl	1259c <fwrite@plt>
   1ef7c:	ldr	r3, [r4, #132]	; 0x84
   1ef80:	cmp	r3, #0
   1ef84:	beq	1efb8 <crc32@@Base+0x5560>
   1ef88:	ldr	r3, [r7]
   1ef8c:	mov	r2, #17
   1ef90:	mov	r1, #1
   1ef94:	movw	r0, #42048	; 0xa440
   1ef98:	movt	r0, #3
   1ef9c:	bl	1259c <fwrite@plt>
   1efa0:	movw	r2, #42068	; 0xa454
   1efa4:	mov	r3, sl
   1efa8:	mov	r1, #1
   1efac:	movt	r2, #3
   1efb0:	ldr	r0, [r7]
   1efb4:	bl	122d8 <__fprintf_chk@plt>
   1efb8:	ldr	r3, [r7]
   1efbc:	mov	r2, #15
   1efc0:	mov	r1, #1
   1efc4:	movw	r0, #42092	; 0xa46c
   1efc8:	movt	r0, #3
   1efcc:	bl	1259c <fwrite@plt>
   1efd0:	ldr	r1, [r4, #144]	; 0x90
   1efd4:	ldr	r0, [r7]
   1efd8:	mov	r3, r6
   1efdc:	str	r5, [sp, #4]
   1efe0:	movw	r2, #42108	; 0xa47c
   1efe4:	str	r1, [sp]
   1efe8:	movt	r2, #3
   1efec:	mov	r1, #1
   1eff0:	sub	r5, r5, r6
   1eff4:	bl	122d8 <__fprintf_chk@plt>
   1eff8:	ldr	r3, [r4, #84]	; 0x54
   1effc:	ldr	r0, [r7]
   1f000:	mov	r1, #1
   1f004:	str	r6, [sp]
   1f008:	movw	r2, #42168	; 0xa4b8
   1f00c:	str	r5, [sp, #4]
   1f010:	movt	r2, #3
   1f014:	bl	122d8 <__fprintf_chk@plt>
   1f018:	ldr	r3, [r7]
   1f01c:	mov	r2, #22
   1f020:	mov	r1, #1
   1f024:	movw	r0, #42204	; 0xa4dc
   1f028:	movt	r0, #3
   1f02c:	bl	1259c <fwrite@plt>
   1f030:	ldr	r3, [r4, #164]	; 0xa4
   1f034:	mov	r1, #1
   1f038:	movw	r2, #42228	; 0xa4f4
   1f03c:	ldr	r0, [r7]
   1f040:	movt	r2, #3
   1f044:	bl	122d8 <__fprintf_chk@plt>
   1f048:	mov	r3, r8
   1f04c:	mov	r1, #1
   1f050:	movw	r2, #42252	; 0xa50c
   1f054:	ldr	r0, [r7]
   1f058:	movt	r2, #3
   1f05c:	bl	122d8 <__fprintf_chk@plt>
   1f060:	ldr	r1, [r4, #164]	; 0xa4
   1f064:	ldr	r0, [r7]
   1f068:	mov	r3, fp
   1f06c:	sub	r8, r8, r1
   1f070:	movw	r2, #42276	; 0xa524
   1f074:	str	r1, [sp]
   1f078:	movt	r2, #3
   1f07c:	str	r8, [sp, #4]
   1f080:	mov	r1, #1
   1f084:	bl	122d8 <__fprintf_chk@plt>
   1f088:	ldr	r2, [sp, #204]	; 0xcc
   1f08c:	ldr	r3, [r9]
   1f090:	cmp	r2, r3
   1f094:	bne	1f2bc <crc32@@Base+0x5864>
   1f098:	add	sp, sp, #212	; 0xd4
   1f09c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f0a0:	mov	r5, r0
   1f0a4:	mov	sl, r0
   1f0a8:	b	1ed20 <crc32@@Base+0x52c8>
   1f0ac:	mov	r2, r8
   1f0b0:	mov	r1, r3
   1f0b4:	mov	r0, r7
   1f0b8:	mov	r3, #0
   1f0bc:	bl	1e95c <crc32@@Base+0x4f04>
   1f0c0:	ldr	r8, [r4, #164]	; 0xa4
   1f0c4:	ldr	r3, [r4, #168]	; 0xa8
   1f0c8:	mov	r2, #0
   1f0cc:	mov	r0, r7
   1f0d0:	mov	r1, r8
   1f0d4:	str	r3, [sp, #8]
   1f0d8:	bl	12518 <lseek@plt>
   1f0dc:	cmp	r0, #0
   1f0e0:	blt	1f338 <crc32@@Base+0x58e0>
   1f0e4:	mov	r2, fp
   1f0e8:	add	r1, sp, #140	; 0x8c
   1f0ec:	mov	r0, r7
   1f0f0:	bl	12368 <read@plt>
   1f0f4:	cmp	r0, #64	; 0x40
   1f0f8:	bne	1f3b0 <crc32@@Base+0x5958>
   1f0fc:	ldr	r2, [sp, #140]	; 0x8c
   1f100:	mov	r3, #3536	; 0xdd0
   1f104:	movt	r3, #60926	; 0xedfe
   1f108:	cmp	r2, r3
   1f10c:	bne	1f388 <crc32@@Base+0x5930>
   1f110:	ldr	lr, [sp, #144]	; 0x90
   1f114:	mov	r2, #0
   1f118:	mov	r0, r7
   1f11c:	ubfx	ip, lr, #8, #8
   1f120:	ubfx	r1, lr, #16, #8
   1f124:	lsr	r3, lr, #24
   1f128:	orr	r3, r3, lr, lsl #24
   1f12c:	orr	r3, r3, ip, lsl #16
   1f130:	orr	r3, r3, r1, lsl #8
   1f134:	add	r3, r3, #3
   1f138:	bic	r3, r3, #3
   1f13c:	add	r3, r3, #4080	; 0xff0
   1f140:	add	r3, r3, #15
   1f144:	bic	r3, r3, #4080	; 0xff0
   1f148:	bic	r3, r3, #15
   1f14c:	str	r3, [sp, #12]
   1f150:	add	r8, r8, r3
   1f154:	mov	r1, r8
   1f158:	bl	12518 <lseek@plt>
   1f15c:	ldr	r3, [sp, #12]
   1f160:	cmp	r0, #0
   1f164:	blt	1f338 <crc32@@Base+0x58e0>
   1f168:	ldr	r2, [sp, #8]
   1f16c:	mov	r0, r7
   1f170:	add	r1, sp, #16
   1f174:	sub	fp, r2, #8704	; 0x2200
   1f178:	mov	r2, #32
   1f17c:	sub	fp, fp, #63	; 0x3f
   1f180:	sub	fp, fp, r3
   1f184:	bic	fp, fp, #63	; 0x3f
   1f188:	str	fp, [sp, #20]
   1f18c:	add	r3, r3, fp
   1f190:	str	r3, [sp, #36]	; 0x24
   1f194:	add	r3, r3, r2
   1f198:	str	r3, [sp, #40]	; 0x28
   1f19c:	mov	r3, #209	; 0xd1
   1f1a0:	movt	r3, #16416	; 0x4020
   1f1a4:	str	r3, [sp, #16]
   1f1a8:	mov	r3, #0
   1f1ac:	str	r3, [sp, #24]
   1f1b0:	str	r3, [sp, #28]
   1f1b4:	str	r3, [sp, #32]
   1f1b8:	str	r3, [sp, #44]	; 0x2c
   1f1bc:	bl	1262c <write@plt>
   1f1c0:	cmp	r0, #32
   1f1c4:	addeq	r8, r8, #32
   1f1c8:	beq	1ef48 <crc32@@Base+0x54f0>
   1f1cc:	movw	r3, #65196	; 0xfeac
   1f1d0:	movt	r3, #4
   1f1d4:	movw	r0, #41984	; 0xa400
   1f1d8:	mov	r2, #31
   1f1dc:	ldr	r3, [r3]
   1f1e0:	movt	r0, #3
   1f1e4:	mov	r1, #1
   1f1e8:	bl	1259c <fwrite@plt>
   1f1ec:	mov	r0, #1
   1f1f0:	bl	12218 <exit@plt>
   1f1f4:	bl	1e680 <crc32@@Base+0x4c28>
   1f1f8:	b	1ef54 <crc32@@Base+0x54fc>
   1f1fc:	ldr	r5, [r4, #128]	; 0x80
   1f200:	movw	r2, #65196	; 0xfeac
   1f204:	movt	r2, #4
   1f208:	ldr	r4, [r2]
   1f20c:	bl	126b0 <__errno_location@plt>
   1f210:	ldr	r0, [r0]
   1f214:	bl	12224 <strerror@plt>
   1f218:	movw	r2, #39384	; 0x99d8
   1f21c:	movt	r2, #3
   1f220:	mov	r3, r5
   1f224:	mov	r1, #1
   1f228:	str	r0, [sp]
   1f22c:	mov	r0, r4
   1f230:	bl	122d8 <__fprintf_chk@plt>
   1f234:	mov	r0, #1
   1f238:	bl	12218 <exit@plt>
   1f23c:	ldr	r5, [r4, #132]	; 0x84
   1f240:	movw	r2, #65196	; 0xfeac
   1f244:	movt	r2, #4
   1f248:	ldr	r4, [r2]
   1f24c:	bl	126b0 <__errno_location@plt>
   1f250:	ldr	r0, [r0]
   1f254:	bl	12224 <strerror@plt>
   1f258:	movw	r2, #39404	; 0x99ec
   1f25c:	mov	r3, r5
   1f260:	mov	r1, #1
   1f264:	movt	r2, #3
   1f268:	b	1f228 <crc32@@Base+0x57d0>
   1f26c:	movw	r3, #65196	; 0xfeac
   1f270:	movt	r3, #4
   1f274:	movw	r0, #41848	; 0xa378
   1f278:	mov	r2, #15
   1f27c:	ldr	r3, [r3]
   1f280:	movt	r0, #3
   1f284:	mov	r1, #1
   1f288:	bl	1259c <fwrite@plt>
   1f28c:	mov	r0, #1
   1f290:	bl	12218 <exit@plt>
   1f294:	movw	r3, #65196	; 0xfeac
   1f298:	movt	r3, #4
   1f29c:	movw	r0, #41772	; 0xa32c
   1f2a0:	mov	r2, #27
   1f2a4:	ldr	r3, [r3]
   1f2a8:	movt	r0, #3
   1f2ac:	mov	r1, #1
   1f2b0:	bl	1259c <fwrite@plt>
   1f2b4:	mov	r0, #1
   1f2b8:	bl	12218 <exit@plt>
   1f2bc:	bl	124b8 <__stack_chk_fail@plt>
   1f2c0:	movw	r3, #65196	; 0xfeac
   1f2c4:	movt	r3, #4
   1f2c8:	movw	r0, #40488	; 0x9e28
   1f2cc:	mov	r2, #24
   1f2d0:	ldr	r3, [r3]
   1f2d4:	movt	r0, #3
   1f2d8:	mov	r1, #1
   1f2dc:	bl	1259c <fwrite@plt>
   1f2e0:	mov	r0, #1
   1f2e4:	bl	12218 <exit@plt>
   1f2e8:	movw	r3, #65196	; 0xfeac
   1f2ec:	movt	r3, #4
   1f2f0:	movw	r0, #41800	; 0xa348
   1f2f4:	mov	r2, #19
   1f2f8:	ldr	r3, [r3]
   1f2fc:	movt	r0, #3
   1f300:	mov	r1, #1
   1f304:	bl	1259c <fwrite@plt>
   1f308:	mov	r0, #1
   1f30c:	bl	12218 <exit@plt>
   1f310:	movw	r3, #65196	; 0xfeac
   1f314:	movt	r3, #4
   1f318:	movw	r0, #41820	; 0xa35c
   1f31c:	mov	r2, #24
   1f320:	ldr	r3, [r3]
   1f324:	movt	r0, #3
   1f328:	mov	r1, #1
   1f32c:	bl	1259c <fwrite@plt>
   1f330:	mov	r0, #1
   1f334:	bl	12218 <exit@plt>
   1f338:	movw	r3, #65196	; 0xfeac
   1f33c:	movt	r3, #4
   1f340:	movw	r0, #41892	; 0xa3a4
   1f344:	mov	r2, #22
   1f348:	ldr	r3, [r3]
   1f34c:	movt	r0, #3
   1f350:	mov	r1, #1
   1f354:	bl	1259c <fwrite@plt>
   1f358:	mov	r0, #1
   1f35c:	bl	12218 <exit@plt>
   1f360:	movw	r3, #65196	; 0xfeac
   1f364:	movt	r3, #4
   1f368:	movw	r0, #41864	; 0xa388
   1f36c:	mov	r2, #27
   1f370:	ldr	r3, [r3]
   1f374:	movt	r0, #3
   1f378:	mov	r1, #1
   1f37c:	bl	1259c <fwrite@plt>
   1f380:	mov	r0, #1
   1f384:	bl	12218 <exit@plt>
   1f388:	movw	r1, #65196	; 0xfeac
   1f38c:	movt	r1, #4
   1f390:	movw	r2, #41956	; 0xa3e4
   1f394:	ldr	r3, [pc, #80]	; 1f3ec <crc32@@Base+0x5994>
   1f398:	ldr	r0, [r1]
   1f39c:	movt	r2, #3
   1f3a0:	mov	r1, #1
   1f3a4:	bl	122d8 <__fprintf_chk@plt>
   1f3a8:	mov	r0, #1
   1f3ac:	bl	12218 <exit@plt>
   1f3b0:	movw	r3, #65196	; 0xfeac
   1f3b4:	movt	r3, #4
   1f3b8:	ldr	r4, [r3]
   1f3bc:	bl	126b0 <__errno_location@plt>
   1f3c0:	ldr	r0, [r0]
   1f3c4:	bl	12224 <strerror@plt>
   1f3c8:	movw	r2, #41916	; 0xa3bc
   1f3cc:	mov	r1, #1
   1f3d0:	movt	r2, #3
   1f3d4:	mov	r3, r0
   1f3d8:	mov	r0, r4
   1f3dc:	bl	122d8 <__fprintf_chk@plt>
   1f3e0:	mov	r0, #1
   1f3e4:	bl	12218 <exit@plt>
   1f3e8:	andeq	r0, r6, r4, asr ip
   1f3ec:	andeq	sl, r3, r0, lsr #3
   1f3f0:	movw	r3, #61168	; 0xeef0
   1f3f4:	movt	r3, #4
   1f3f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f3fc:	movw	r2, #65200	; 0xfeb0
   1f400:	sub	sp, sp, #52	; 0x34
   1f404:	ldr	ip, [r3]
   1f408:	movt	r2, #4
   1f40c:	mov	r4, r1
   1f410:	str	r3, [sp, #20]
   1f414:	mov	r6, #0
   1f418:	ldr	r3, [r1, #64]	; 0x40
   1f41c:	mov	r1, #1
   1f420:	str	r0, [sp, #16]
   1f424:	ldr	r0, [r2]
   1f428:	movw	r2, #40516	; 0x9e44
   1f42c:	movt	r2, #3
   1f430:	str	ip, [sp, #44]	; 0x2c
   1f434:	bl	122d8 <__fprintf_chk@plt>
   1f438:	ldr	r3, [r4, #64]	; 0x40
   1f43c:	movw	r1, #50292	; 0xc474
   1f440:	movt	r1, #3
   1f444:	str	r6, [sp, #28]
   1f448:	mov	r0, r3
   1f44c:	str	r3, [sp, #12]
   1f450:	bl	12350 <fopen@plt>
   1f454:	subs	r3, r0, #0
   1f458:	str	r3, [sp, #8]
   1f45c:	movwne	sl, #26248	; 0x6688
   1f460:	movwne	r8, #3092	; 0xc14
   1f464:	movtne	sl, #3
   1f468:	movtne	r8, #6
   1f46c:	beq	1f974 <crc32@@Base+0x5f1c>
   1f470:	ldr	r3, [sp, #8]
   1f474:	mov	r2, #10
   1f478:	add	r1, sp, #40	; 0x28
   1f47c:	add	r0, sp, #28
   1f480:	bl	12158 <__getdelim@plt>
   1f484:	cmp	r0, #0
   1f488:	ble	1f8f8 <crc32@@Base+0x5ea0>
   1f48c:	add	r2, sp, #32
   1f490:	mov	r1, sl
   1f494:	ldr	r0, [sp, #28]
   1f498:	add	r6, r6, #1
   1f49c:	bl	12248 <__strtok_r@plt>
   1f4a0:	cmp	r0, #0
   1f4a4:	beq	1f470 <crc32@@Base+0x5a18>
   1f4a8:	movw	r5, #26252	; 0x668c
   1f4ac:	movw	r9, #42332	; 0xa55c
   1f4b0:	movt	r5, #3
   1f4b4:	movt	r9, #3
   1f4b8:	mvn	r7, #0
   1f4bc:	mov	fp, #0
   1f4c0:	str	r0, [sp, #28]
   1f4c4:	add	r2, sp, #36	; 0x24
   1f4c8:	mov	r1, r5
   1f4cc:	bl	12248 <__strtok_r@plt>
   1f4d0:	subs	r4, r0, #0
   1f4d4:	beq	1f470 <crc32@@Base+0x5a18>
   1f4d8:	ldrb	r3, [r4]
   1f4dc:	cmp	r3, #35	; 0x23
   1f4e0:	beq	1f470 <crc32@@Base+0x5a18>
   1f4e4:	cmp	fp, #3
   1f4e8:	ldrls	pc, [pc, fp, lsl #2]
   1f4ec:	b	1f62c <crc32@@Base+0x5bd4>
   1f4f0:	andeq	pc, r1, r0, lsl #10
   1f4f4:	andeq	pc, r1, ip, asr #10
   1f4f8:	andeq	pc, r1, r4, ror #17
   1f4fc:	strdeq	pc, [r1], -r4
   1f500:	movw	r1, #42312	; 0xa548
   1f504:	movw	r0, #63360	; 0xf780
   1f508:	movt	r1, #3
   1f50c:	movt	r0, #4
   1f510:	mov	r2, r4
   1f514:	bl	1a8d8 <crc32@@Base+0xe80>
   1f518:	subs	r7, r0, #0
   1f51c:	blt	1f944 <crc32@@Base+0x5eec>
   1f520:	mov	r3, #0
   1f524:	add	r2, sp, #36	; 0x24
   1f528:	mov	r0, r3
   1f52c:	mov	r1, r5
   1f530:	str	r3, [sp, #28]
   1f534:	bl	12248 <__strtok_r@plt>
   1f538:	subs	r4, r0, #0
   1f53c:	beq	1f470 <crc32@@Base+0x5a18>
   1f540:	ldrb	r3, [r4]
   1f544:	cmp	r3, #35	; 0x23
   1f548:	beq	1f470 <crc32@@Base+0x5a18>
   1f54c:	sub	r3, r7, #2
   1f550:	cmp	r3, #12
   1f554:	ldrls	pc, [pc, r3, lsl #2]
   1f558:	b	1f8b8 <crc32@@Base+0x5e60>
   1f55c:	andeq	pc, r1, r8, lsl #14
   1f560:			; <UNDEFINED> instruction: 0x0001f8b8
   1f564:			; <UNDEFINED> instruction: 0x0001f8b8
   1f568:			; <UNDEFINED> instruction: 0x0001f8b8
   1f56c:			; <UNDEFINED> instruction: 0x0001f8b8
   1f570:			; <UNDEFINED> instruction: 0x0001f8b8
   1f574:			; <UNDEFINED> instruction: 0x0001f8b8
   1f578:			; <UNDEFINED> instruction: 0x0001f8b8
   1f57c:			; <UNDEFINED> instruction: 0x0001f8b8
   1f580:	muleq	r1, r4, r5
   1f584:	muleq	r1, r0, r5
   1f588:	andeq	pc, r1, ip, lsr r6	; <UNPREDICTABLE>
   1f58c:	andeq	pc, r1, ip, lsr #15
   1f590:	str	r4, [r8, #132]	; 0x84
   1f594:	mov	r3, #0
   1f598:	add	r2, sp, #36	; 0x24
   1f59c:	mov	r0, r3
   1f5a0:	mov	r1, r5
   1f5a4:	str	r3, [sp, #28]
   1f5a8:	mov	r3, #1
   1f5ac:	str	r3, [r8, #152]	; 0x98
   1f5b0:	bl	12248 <__strtok_r@plt>
   1f5b4:	cmp	r0, #0
   1f5b8:	beq	1f470 <crc32@@Base+0x5a18>
   1f5bc:	ldrb	r3, [r0]
   1f5c0:	cmp	r3, #35	; 0x23
   1f5c4:	beq	1f470 <crc32@@Base+0x5a18>
   1f5c8:	mov	r3, #0
   1f5cc:	add	r2, sp, #36	; 0x24
   1f5d0:	mov	r0, r3
   1f5d4:	mov	r1, r5
   1f5d8:	str	r3, [sp, #28]
   1f5dc:	bl	12248 <__strtok_r@plt>
   1f5e0:	subs	r4, r0, #0
   1f5e4:	beq	1f470 <crc32@@Base+0x5a18>
   1f5e8:	ldrb	r3, [r4]
   1f5ec:	cmp	r3, #35	; 0x23
   1f5f0:	beq	1f470 <crc32@@Base+0x5a18>
   1f5f4:	cmp	r7, #14
   1f5f8:	beq	1f81c <crc32@@Base+0x5dc4>
   1f5fc:	mov	r3, #0
   1f600:	add	r2, sp, #36	; 0x24
   1f604:	mov	r0, r3
   1f608:	mov	r1, r5
   1f60c:	str	r3, [sp, #28]
   1f610:	bl	12248 <__strtok_r@plt>
   1f614:	cmp	r0, #0
   1f618:	beq	1f470 <crc32@@Base+0x5a18>
   1f61c:	ldrb	r3, [r0]
   1f620:	cmp	r3, #35	; 0x23
   1f624:	beq	1f470 <crc32@@Base+0x5a18>
   1f628:	mov	fp, #4
   1f62c:	mov	r0, #0
   1f630:	add	fp, fp, #1
   1f634:	str	r0, [sp, #28]
   1f638:	b	1f4c4 <crc32@@Base+0x5a6c>
   1f63c:	mov	r3, #0
   1f640:	add	r2, sp, #36	; 0x24
   1f644:	mov	r0, r3
   1f648:	mov	r1, r5
   1f64c:	str	r4, [r8, #128]	; 0x80
   1f650:	str	r3, [sp, #28]
   1f654:	bl	12248 <__strtok_r@plt>
   1f658:	subs	r4, r0, #0
   1f65c:	beq	1f470 <crc32@@Base+0x5a18>
   1f660:	ldrb	r3, [r4]
   1f664:	cmp	r3, #35	; 0x23
   1f668:	beq	1f470 <crc32@@Base+0x5a18>
   1f66c:	mov	r0, r4
   1f670:	mov	r2, r6
   1f674:	ldr	r1, [sp, #12]
   1f678:	mov	r4, #0
   1f67c:	bl	1e5d8 <crc32@@Base+0x4b80>
   1f680:	add	r2, sp, #36	; 0x24
   1f684:	mov	r1, r5
   1f688:	str	r4, [sp, #28]
   1f68c:	str	r0, [r8, #140]	; 0x8c
   1f690:	mov	r0, r4
   1f694:	bl	12248 <__strtok_r@plt>
   1f698:	cmp	r0, #0
   1f69c:	beq	1f470 <crc32@@Base+0x5a18>
   1f6a0:	ldrb	r3, [r0]
   1f6a4:	cmp	r3, #35	; 0x23
   1f6a8:	beq	1f470 <crc32@@Base+0x5a18>
   1f6ac:	add	r2, sp, #36	; 0x24
   1f6b0:	mov	r1, r5
   1f6b4:	mov	r0, r4
   1f6b8:	str	r4, [sp, #28]
   1f6bc:	bl	12248 <__strtok_r@plt>
   1f6c0:	cmp	r0, #0
   1f6c4:	beq	1f470 <crc32@@Base+0x5a18>
   1f6c8:	ldrb	r3, [r0]
   1f6cc:	cmp	r3, #35	; 0x23
   1f6d0:	beq	1f470 <crc32@@Base+0x5a18>
   1f6d4:	mov	r0, r4
   1f6d8:	add	r2, sp, #36	; 0x24
   1f6dc:	mov	r1, r5
   1f6e0:	str	r4, [sp, #28]
   1f6e4:	bl	12248 <__strtok_r@plt>
   1f6e8:	cmp	r0, #0
   1f6ec:	beq	1f470 <crc32@@Base+0x5a18>
   1f6f0:	ldrb	r3, [r0]
   1f6f4:	cmp	r3, #35	; 0x23
   1f6f8:	beq	1f470 <crc32@@Base+0x5a18>
   1f6fc:	mov	r7, #13
   1f700:	mov	fp, #5
   1f704:	b	1f62c <crc32@@Base+0x5bd4>
   1f708:	mov	r2, r4
   1f70c:	mov	r1, r9
   1f710:	ldr	r0, [pc, #648]	; 1f9a0 <crc32@@Base+0x5f48>
   1f714:	bl	1a8d8 <crc32@@Base+0xe80>
   1f718:	movw	r1, #37016	; 0x9098
   1f71c:	mov	r2, #2
   1f720:	movt	r1, #3
   1f724:	str	r0, [r8, #136]	; 0x88
   1f728:	mov	r0, r4
   1f72c:	bl	121a0 <strncmp@plt>
   1f730:	subs	r4, r0, #0
   1f734:	beq	1f920 <crc32@@Base+0x5ec8>
   1f738:	mov	r4, #0
   1f73c:	add	r2, sp, #36	; 0x24
   1f740:	mov	r0, r4
   1f744:	mov	r1, r5
   1f748:	str	r4, [sp, #28]
   1f74c:	bl	12248 <__strtok_r@plt>
   1f750:	cmp	r0, #0
   1f754:	beq	1f470 <crc32@@Base+0x5a18>
   1f758:	ldrb	r3, [r0]
   1f75c:	cmp	r3, #35	; 0x23
   1f760:	beq	1f470 <crc32@@Base+0x5a18>
   1f764:	add	r2, sp, #36	; 0x24
   1f768:	mov	r1, r5
   1f76c:	mov	r0, r4
   1f770:	str	r4, [sp, #28]
   1f774:	bl	12248 <__strtok_r@plt>
   1f778:	cmp	r0, #0
   1f77c:	beq	1f470 <crc32@@Base+0x5a18>
   1f780:	ldrb	r3, [r0]
   1f784:	cmp	r3, #35	; 0x23
   1f788:	beq	1f470 <crc32@@Base+0x5a18>
   1f78c:	mov	r0, r4
   1f790:	add	r2, sp, #36	; 0x24
   1f794:	mov	r1, r5
   1f798:	str	r4, [sp, #28]
   1f79c:	bl	12248 <__strtok_r@plt>
   1f7a0:	cmp	r0, #0
   1f7a4:	bne	1f61c <crc32@@Base+0x5bc4>
   1f7a8:	b	1f470 <crc32@@Base+0x5a18>
   1f7ac:	mov	r3, #0
   1f7b0:	add	r2, sp, #36	; 0x24
   1f7b4:	mov	r0, r3
   1f7b8:	mov	r1, r5
   1f7bc:	str	r4, [r8, #148]	; 0x94
   1f7c0:	str	r3, [sp, #28]
   1f7c4:	bl	12248 <__strtok_r@plt>
   1f7c8:	subs	r4, r0, #0
   1f7cc:	beq	1f470 <crc32@@Base+0x5a18>
   1f7d0:	ldrb	r3, [r4]
   1f7d4:	cmp	r3, #35	; 0x23
   1f7d8:	beq	1f470 <crc32@@Base+0x5a18>
   1f7dc:	mov	r0, r4
   1f7e0:	mov	r2, r6
   1f7e4:	ldr	r1, [sp, #12]
   1f7e8:	bl	1e5d8 <crc32@@Base+0x4b80>
   1f7ec:	mov	r3, #0
   1f7f0:	add	r2, sp, #36	; 0x24
   1f7f4:	mov	r1, r5
   1f7f8:	str	r3, [sp, #28]
   1f7fc:	str	r0, [r8, #168]	; 0xa8
   1f800:	mov	r0, r3
   1f804:	bl	12248 <__strtok_r@plt>
   1f808:	subs	r4, r0, #0
   1f80c:	beq	1f470 <crc32@@Base+0x5a18>
   1f810:	ldrb	r3, [r4]
   1f814:	cmp	r3, #35	; 0x23
   1f818:	beq	1f470 <crc32@@Base+0x5a18>
   1f81c:	mov	r0, r4
   1f820:	mov	r2, r6
   1f824:	ldr	r1, [sp, #12]
   1f828:	mov	r4, #0
   1f82c:	bl	1e5d8 <crc32@@Base+0x4b80>
   1f830:	add	r2, sp, #36	; 0x24
   1f834:	mov	r1, r5
   1f838:	str	r4, [sp, #28]
   1f83c:	str	r0, [r8, #156]	; 0x9c
   1f840:	mov	r0, r4
   1f844:	bl	12248 <__strtok_r@plt>
   1f848:	cmp	r0, #0
   1f84c:	beq	1f470 <crc32@@Base+0x5a18>
   1f850:	ldrb	r3, [r0]
   1f854:	cmp	r3, #35	; 0x23
   1f858:	beq	1f470 <crc32@@Base+0x5a18>
   1f85c:	add	r2, sp, #36	; 0x24
   1f860:	mov	r1, r5
   1f864:	mov	r0, r4
   1f868:	str	r4, [sp, #28]
   1f86c:	bl	12248 <__strtok_r@plt>
   1f870:	cmp	r0, #0
   1f874:	beq	1f470 <crc32@@Base+0x5a18>
   1f878:	ldrb	r3, [r0]
   1f87c:	cmp	r3, #35	; 0x23
   1f880:	beq	1f470 <crc32@@Base+0x5a18>
   1f884:	mov	r0, r4
   1f888:	add	r2, sp, #36	; 0x24
   1f88c:	mov	r1, r5
   1f890:	str	r4, [sp, #28]
   1f894:	bl	12248 <__strtok_r@plt>
   1f898:	cmp	r0, #0
   1f89c:	beq	1f470 <crc32@@Base+0x5a18>
   1f8a0:	ldrb	r3, [r0]
   1f8a4:	cmp	r3, #35	; 0x23
   1f8a8:	beq	1f470 <crc32@@Base+0x5a18>
   1f8ac:	mov	r7, #14
   1f8b0:	mov	fp, #6
   1f8b4:	b	1f62c <crc32@@Base+0x5bd4>
   1f8b8:	mov	r3, #0
   1f8bc:	add	r2, sp, #36	; 0x24
   1f8c0:	mov	r0, r3
   1f8c4:	mov	r1, r5
   1f8c8:	str	r3, [sp, #28]
   1f8cc:	bl	12248 <__strtok_r@plt>
   1f8d0:	subs	r4, r0, #0
   1f8d4:	beq	1f470 <crc32@@Base+0x5a18>
   1f8d8:	ldrb	r3, [r4]
   1f8dc:	cmp	r3, #35	; 0x23
   1f8e0:	beq	1f470 <crc32@@Base+0x5a18>
   1f8e4:	cmp	r7, #13
   1f8e8:	beq	1f66c <crc32@@Base+0x5c14>
   1f8ec:	cmp	r7, #14
   1f8f0:	beq	1f7dc <crc32@@Base+0x5d84>
   1f8f4:	b	1f5c8 <crc32@@Base+0x5b70>
   1f8f8:	ldr	r0, [sp, #16]
   1f8fc:	bl	1ec6c <crc32@@Base+0x5214>
   1f900:	ldr	r3, [sp, #20]
   1f904:	ldr	r2, [sp, #44]	; 0x2c
   1f908:	mov	r0, #0
   1f90c:	ldr	r3, [r3]
   1f910:	cmp	r2, r3
   1f914:	bne	1f99c <crc32@@Base+0x5f44>
   1f918:	add	sp, sp, #52	; 0x34
   1f91c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f920:	add	r2, sp, #36	; 0x24
   1f924:	mov	r1, r5
   1f928:	mov	r3, #32768	; 0x8000
   1f92c:	str	r4, [sp, #28]
   1f930:	str	r3, [r8, #160]	; 0xa0
   1f934:	bl	12248 <__strtok_r@plt>
   1f938:	cmp	r0, #0
   1f93c:	bne	1f758 <crc32@@Base+0x5d00>
   1f940:	b	1f470 <crc32@@Base+0x5a18>
   1f944:	movw	r2, #65196	; 0xfeac
   1f948:	movt	r2, #4
   1f94c:	str	r4, [sp, #4]
   1f950:	mov	r1, #1
   1f954:	ldr	r0, [r2]
   1f958:	movw	r2, #26276	; 0x66a4
   1f95c:	ldr	r3, [sp, #12]
   1f960:	movt	r2, #3
   1f964:	str	r6, [sp]
   1f968:	bl	122d8 <__fprintf_chk@plt>
   1f96c:	mov	r0, #1
   1f970:	bl	12218 <exit@plt>
   1f974:	movw	r1, #65196	; 0xfeac
   1f978:	movt	r1, #4
   1f97c:	ldr	r3, [sp, #12]
   1f980:	movw	r2, #40528	; 0x9e50
   1f984:	ldr	r0, [r1]
   1f988:	movt	r2, #3
   1f98c:	mov	r1, #1
   1f990:	bl	122d8 <__fprintf_chk@plt>
   1f994:	mov	r0, #1
   1f998:	bl	12218 <exit@plt>
   1f99c:	bl	124b8 <__stack_chk_fail@plt>
   1f9a0:	ldrdeq	pc, [r4], -r4
   1f9a4:	subs	r0, r0, #9
   1f9a8:	movne	r0, #1
   1f9ac:	bx	lr
   1f9b0:	movw	r3, #63536	; 0xf830
   1f9b4:	movt	r3, #4
   1f9b8:	push	{r4, lr}
   1f9bc:	mov	r4, r0
   1f9c0:	ldr	r2, [r3, #4]
   1f9c4:	ldrb	r0, [r0]
   1f9c8:	cmp	r2, #0
   1f9cc:	beq	1f9f8 <crc32@@Base+0x5fa0>
   1f9d0:	ldr	r1, [r3]
   1f9d4:	cmp	r0, r1
   1f9d8:	bne	1f9ec <crc32@@Base+0x5f94>
   1f9dc:	b	1f9f8 <crc32@@Base+0x5fa0>
   1f9e0:	ldr	r1, [r3, #8]!
   1f9e4:	cmp	r0, r1
   1f9e8:	beq	1f9f8 <crc32@@Base+0x5fa0>
   1f9ec:	ldr	r2, [r3, #12]
   1f9f0:	cmp	r2, #0
   1f9f4:	bne	1f9e0 <crc32@@Base+0x5f88>
   1f9f8:	movw	r1, #42600	; 0xa668
   1f9fc:	mov	r0, #1
   1fa00:	movt	r1, #3
   1fa04:	bl	12794 <__printf_chk@plt>
   1fa08:	ldrb	r2, [r4, #8]
   1fa0c:	movw	r1, #42640	; 0xa690
   1fa10:	mov	r0, #1
   1fa14:	movt	r1, #3
   1fa18:	bl	12794 <__printf_chk@plt>
   1fa1c:	movw	r1, #30640	; 0x77b0
   1fa20:	mov	r0, #1
   1fa24:	movt	r1, #3
   1fa28:	bl	12794 <__printf_chk@plt>
   1fa2c:	ldr	r0, [r4, #4]
   1fa30:	sub	r0, r0, #4
   1fa34:	bl	1a044 <crc32@@Base+0x5ec>
   1fa38:	ldr	r2, [r4, #16]
   1fa3c:	movw	r1, #37984	; 0x9460
   1fa40:	mov	r0, #1
   1fa44:	movt	r1, #3
   1fa48:	bl	12794 <__printf_chk@plt>
   1fa4c:	ldr	r2, [r4, #20]
   1fa50:	movw	r1, #38004	; 0x9474
   1fa54:	mov	r0, #1
   1fa58:	movt	r1, #3
   1fa5c:	pop	{r4, lr}
   1fa60:	b	12794 <__printf_chk@plt>
   1fa64:	add	r1, r0, r1
   1fa68:	mov	r3, #0
   1fa6c:	ldrb	r2, [r0], #1
   1fa70:	add	r3, r3, r2
   1fa74:	cmp	r0, r1
   1fa78:	uxtb	r3, r3
   1fa7c:	bne	1fa6c <crc32@@Base+0x6014>
   1fa80:	mov	r0, r3
   1fa84:	bx	lr
   1fa88:	ldr	r3, [r0, #64]	; 0x40
   1fa8c:	ldrb	r3, [r3]
   1fa90:	cmp	r3, #0
   1fa94:	beq	1fadc <crc32@@Base+0x6084>
   1fa98:	ldr	r2, [r0]
   1fa9c:	ldr	r3, [r0, #8]
   1faa0:	cmp	r2, #0
   1faa4:	beq	1fac4 <crc32@@Base+0x606c>
   1faa8:	cmp	r3, #0
   1faac:	bne	1fabc <crc32@@Base+0x6064>
   1fab0:	ldr	r3, [r0, #16]
   1fab4:	cmp	r3, #0
   1fab8:	beq	1facc <crc32@@Base+0x6074>
   1fabc:	mov	r0, #1
   1fac0:	bx	lr
   1fac4:	cmp	r3, #0
   1fac8:	bne	1fab0 <crc32@@Base+0x6058>
   1facc:	ldr	r0, [r0, #28]
   1fad0:	adds	r0, r0, #0
   1fad4:	movne	r0, #1
   1fad8:	bx	lr
   1fadc:	push	{lr}		; (str lr, [sp, #-4]!)
   1fae0:	movw	r2, #65196	; 0xfeac
   1fae4:	sub	sp, sp, #12
   1fae8:	movt	r2, #4
   1faec:	ldr	r3, [r0, #80]	; 0x50
   1faf0:	movw	r1, #42676	; 0xa6b4
   1faf4:	ldr	r0, [r2]
   1faf8:	movt	r1, #3
   1fafc:	movw	r2, #42660	; 0xa6a4
   1fb00:	str	r1, [sp]
   1fb04:	movt	r2, #3
   1fb08:	mov	r1, #1
   1fb0c:	bl	122d8 <__fprintf_chk@plt>
   1fb10:	mvn	r0, #0
   1fb14:	add	sp, sp, #12
   1fb18:	pop	{pc}		; (ldr pc, [sp], #4)
   1fb1c:	push	{r4, r5, r6, r7, lr}
   1fb20:	movw	lr, #3264	; 0xcc0
   1fb24:	movt	lr, #6
   1fb28:	sub	sp, sp, #4160	; 0x1040
   1fb2c:	movw	r4, #61168	; 0xeef0
   1fb30:	movt	r4, #4
   1fb34:	sub	sp, sp, #44	; 0x2c
   1fb38:	ldr	r6, [lr]
   1fb3c:	add	r2, sp, #4160	; 0x1040
   1fb40:	ldr	r3, [r4]
   1fb44:	add	r2, r2, #36	; 0x24
   1fb48:	cmp	r6, #0
   1fb4c:	str	r3, [r2]
   1fb50:	ble	1fc5c <crc32@@Base+0x6204>
   1fb54:	ldr	r2, [lr, #4]
   1fb58:	mov	r5, r0
   1fb5c:	mov	r0, #44	; 0x2c
   1fb60:	mov	ip, #0
   1fb64:	mla	r0, r0, r6, r2
   1fb68:	mov	r3, r2
   1fb6c:	ldr	r1, [r3]
   1fb70:	add	r3, r3, #44	; 0x2c
   1fb74:	cmp	r1, #9
   1fb78:	addeq	ip, ip, #1
   1fb7c:	cmp	r3, r0
   1fb80:	bne	1fb6c <crc32@@Base+0x6114>
   1fb84:	cmp	ip, #1
   1fb88:	bls	1fbd4 <crc32@@Base+0x617c>
   1fb8c:	movw	r3, #65196	; 0xfeac
   1fb90:	movt	r3, #4
   1fb94:	movw	r0, #42756	; 0xa704
   1fb98:	mov	r2, #41	; 0x29
   1fb9c:	ldr	r3, [r3]
   1fba0:	movt	r0, #3
   1fba4:	mov	r1, #1
   1fba8:	bl	1259c <fwrite@plt>
   1fbac:	mov	r0, #0
   1fbb0:	add	r3, sp, #4160	; 0x1040
   1fbb4:	add	r3, r3, #36	; 0x24
   1fbb8:	ldr	r2, [r3]
   1fbbc:	ldr	r3, [r4]
   1fbc0:	cmp	r2, r3
   1fbc4:	bne	1fd1c <crc32@@Base+0x62c4>
   1fbc8:	add	sp, sp, #4160	; 0x1040
   1fbcc:	add	sp, sp, #44	; 0x2c
   1fbd0:	pop	{r4, r5, r6, r7, pc}
   1fbd4:	mov	r0, #0
   1fbd8:	ldr	r1, [r2]
   1fbdc:	add	r2, r2, #44	; 0x2c
   1fbe0:	cmp	r1, #10
   1fbe4:	addeq	r0, r0, #1
   1fbe8:	cmp	r3, r2
   1fbec:	bne	1fbd8 <crc32@@Base+0x6180>
   1fbf0:	cmp	r0, #1
   1fbf4:	bls	1fc20 <crc32@@Base+0x61c8>
   1fbf8:	movw	r3, #65196	; 0xfeac
   1fbfc:	movt	r3, #4
   1fc00:	movw	r0, #42800	; 0xa730
   1fc04:	mov	r2, #36	; 0x24
   1fc08:	ldr	r3, [r3]
   1fc0c:	movt	r0, #3
   1fc10:	mov	r1, #1
   1fc14:	bl	1259c <fwrite@plt>
   1fc18:	mov	r0, #0
   1fc1c:	b	1fbb0 <crc32@@Base+0x6158>
   1fc20:	ldr	r7, [lr, #4]
   1fc24:	ldr	r3, [r7]
   1fc28:	cmp	r3, #9
   1fc2c:	beq	1fc64 <crc32@@Base+0x620c>
   1fc30:	mov	r3, r7
   1fc34:	mov	r2, #0
   1fc38:	b	1fc50 <crc32@@Base+0x61f8>
   1fc3c:	add	r3, r3, #44	; 0x2c
   1fc40:	ldr	r1, [r3]
   1fc44:	cmp	r1, #9
   1fc48:	mov	r7, r3
   1fc4c:	beq	1fc64 <crc32@@Base+0x620c>
   1fc50:	add	r2, r2, #1
   1fc54:	cmp	r6, r2
   1fc58:	bne	1fc3c <crc32@@Base+0x61e4>
   1fc5c:	mov	r0, #4096	; 0x1000
   1fc60:	b	1fbb0 <crc32@@Base+0x6158>
   1fc64:	add	r2, sp, #8
   1fc68:	ldr	r1, [r7, #4]
   1fc6c:	mov	r0, #3
   1fc70:	bl	12644 <__xstat@plt>
   1fc74:	cmp	r0, #0
   1fc78:	blt	1fcb0 <crc32@@Base+0x6258>
   1fc7c:	ldr	r0, [r7, #40]	; 0x28
   1fc80:	cmp	r5, #0
   1fc84:	ldr	r3, [sp, #52]	; 0x34
   1fc88:	add	r0, r0, #2
   1fc8c:	movne	r2, #1
   1fc90:	add	r3, r3, #4096	; 0x1000
   1fc94:	strne	r2, [r5]
   1fc98:	lsl	r0, r0, #2
   1fc9c:	add	r3, r3, #35	; 0x23
   1fca0:	add	r0, r0, r3
   1fca4:	bic	r0, r0, #4080	; 0xff0
   1fca8:	bic	r0, r0, #15
   1fcac:	b	1fbb0 <crc32@@Base+0x6158>
   1fcb0:	mov	r2, #4096	; 0x1000
   1fcb4:	mov	r1, #0
   1fcb8:	add	r0, sp, #100	; 0x64
   1fcbc:	bl	12308 <memset@plt>
   1fcc0:	mov	r1, #4096	; 0x1000
   1fcc4:	add	r0, sp, #100	; 0x64
   1fcc8:	bl	125fc <getcwd@plt>
   1fccc:	cmp	r0, #0
   1fcd0:	addne	r1, sp, #100	; 0x64
   1fcd4:	beq	1fd04 <crc32@@Base+0x62ac>
   1fcd8:	movw	r0, #65196	; 0xfeac
   1fcdc:	movt	r0, #4
   1fce0:	ldr	r3, [r7, #4]
   1fce4:	movw	r2, #42856	; 0xa768
   1fce8:	ldr	r0, [r0]
   1fcec:	movt	r2, #3
   1fcf0:	str	r1, [sp]
   1fcf4:	mov	r1, #1
   1fcf8:	bl	122d8 <__fprintf_chk@plt>
   1fcfc:	mov	r0, #0
   1fd00:	b	1fbb0 <crc32@@Base+0x6158>
   1fd04:	movw	r0, #42840	; 0xa758
   1fd08:	movt	r0, #3
   1fd0c:	bl	122a8 <perror@plt>
   1fd10:	movw	r1, #42728	; 0xa6e8
   1fd14:	movt	r1, #3
   1fd18:	b	1fcd8 <crc32@@Base+0x6280>
   1fd1c:	bl	124b8 <__stack_chk_fail@plt>
   1fd20:	push	{r4, r5, r6, lr}
   1fd24:	mov	r4, r0
   1fd28:	ldrb	r5, [r0, #8]
   1fd2c:	cmp	r5, #0
   1fd30:	beq	1fd58 <crc32@@Base+0x6300>
   1fd34:	ldrb	r3, [r0, #9]
   1fd38:	ldrh	r0, [r0, #10]
   1fd3c:	orr	r0, r0, r3, lsl #16
   1fd40:	cmp	r0, r1
   1fd44:	mov	r1, r0
   1fd48:	bhi	1fdb0 <crc32@@Base+0x6358>
   1fd4c:	cmp	r0, #0
   1fd50:	bne	1fd64 <crc32@@Base+0x630c>
   1fd54:	b	1fd6c <crc32@@Base+0x6314>
   1fd58:	cmp	r1, #31
   1fd5c:	bls	1fdb0 <crc32@@Base+0x6358>
   1fd60:	mov	r1, #32
   1fd64:	mov	r0, r4
   1fd68:	bl	1fa64 <crc32@@Base+0x600c>
   1fd6c:	ldrb	r3, [r4, #31]
   1fd70:	sub	r0, r0, r3
   1fd74:	uxtb	r0, r0
   1fd78:	cmp	r3, r0
   1fd7c:	bne	1fdb0 <crc32@@Base+0x6358>
   1fd80:	cmp	r5, #0
   1fd84:	bne	1fda8 <crc32@@Base+0x6350>
   1fd88:	movw	r1, #479	; 0x1df
   1fd8c:	add	r0, r4, #32
   1fd90:	bl	1fa64 <crc32@@Base+0x600c>
   1fd94:	ldrb	r3, [r4, #511]	; 0x1ff
   1fd98:	cmp	r3, r0
   1fd9c:	moveq	r0, #0
   1fda0:	mvnne	r0, #10
   1fda4:	pop	{r4, r5, r6, pc}
   1fda8:	mov	r0, #0
   1fdac:	pop	{r4, r5, r6, pc}
   1fdb0:	mvn	r0, #10
   1fdb4:	pop	{r4, r5, r6, pc}
   1fdb8:	push	{r4, r5, r6, r7, r8, lr}
   1fdbc:	movw	r7, #63536	; 0xf830
   1fdc0:	movt	r7, #4
   1fdc4:	mov	r6, r0
   1fdc8:	ldr	r0, [r7, #4]
   1fdcc:	cmp	r0, #0
   1fdd0:	beq	1fe0c <crc32@@Base+0x63b4>
   1fdd4:	mov	r4, r7
   1fdd8:	mov	r5, #0
   1fddc:	b	1fdf0 <crc32@@Base+0x6398>
   1fde0:	ldr	r0, [r4, #4]
   1fde4:	add	r5, r5, #1
   1fde8:	cmp	r0, #0
   1fdec:	beq	1fe0c <crc32@@Base+0x63b4>
   1fdf0:	mov	r1, r6
   1fdf4:	add	r4, r4, #8
   1fdf8:	bl	12680 <strcmp@plt>
   1fdfc:	cmp	r0, #0
   1fe00:	bne	1fde0 <crc32@@Base+0x6388>
   1fe04:	ldr	r0, [r7, r5, lsl #3]
   1fe08:	pop	{r4, r5, r6, r7, r8, pc}
   1fe0c:	mvn	r0, #0
   1fe10:	pop	{r4, r5, r6, r7, r8, pc}
   1fe14:	push	{r4, r5, r6, r7, r8, lr}
   1fe18:	movw	r7, #63536	; 0xf830
   1fe1c:	movt	r7, #4
   1fe20:	mov	r6, r0
   1fe24:	ldr	r0, [r7, #68]	; 0x44
   1fe28:	cmp	r0, #0
   1fe2c:	beq	1fe6c <crc32@@Base+0x6414>
   1fe30:	add	r4, r7, #64	; 0x40
   1fe34:	mov	r5, #0
   1fe38:	b	1fe4c <crc32@@Base+0x63f4>
   1fe3c:	ldr	r0, [r4, #4]
   1fe40:	add	r5, r5, #1
   1fe44:	cmp	r0, #0
   1fe48:	beq	1fe6c <crc32@@Base+0x6414>
   1fe4c:	mov	r1, r6
   1fe50:	add	r4, r4, #8
   1fe54:	bl	12680 <strcmp@plt>
   1fe58:	cmp	r0, #0
   1fe5c:	bne	1fe3c <crc32@@Base+0x63e4>
   1fe60:	add	r5, r7, r5, lsl #3
   1fe64:	ldr	r0, [r5, #64]	; 0x40
   1fe68:	pop	{r4, r5, r6, r7, r8, pc}
   1fe6c:	mvn	r0, #0
   1fe70:	pop	{r4, r5, r6, r7, r8, pc}
   1fe74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe78:	movw	r3, #61168	; 0xeef0
   1fe7c:	sub	sp, sp, #300	; 0x12c
   1fe80:	movt	r3, #4
   1fe84:	movw	fp, #26252	; 0x668c
   1fe88:	movt	fp, #3
   1fe8c:	str	r3, [sp, #20]
   1fe90:	mov	r9, r0
   1fe94:	ldr	r3, [r3]
   1fe98:	mov	r8, #0
   1fe9c:	movw	r2, #3264	; 0xcc0
   1fea0:	movt	r2, #6
   1fea4:	str	r2, [sp, #4]
   1fea8:	movw	r2, #43116	; 0xa86c
   1feac:	str	r3, [sp, #292]	; 0x124
   1feb0:	movt	r2, #3
   1feb4:	movw	r3, #65196	; 0xfeac
   1feb8:	str	r2, [sp, #12]
   1febc:	movt	r3, #4
   1fec0:	str	r3, [sp, #16]
   1fec4:	mov	r0, r9
   1fec8:	bl	12284 <feof@plt>
   1fecc:	subs	r1, r0, #0
   1fed0:	bne	2006c <crc32@@Base+0x6614>
   1fed4:	mov	r2, #256	; 0x100
   1fed8:	add	r0, sp, #36	; 0x24
   1fedc:	bl	12308 <memset@plt>
   1fee0:	mov	r2, r9
   1fee4:	add	r0, sp, #36	; 0x24
   1fee8:	mov	r1, #256	; 0x100
   1feec:	bl	1256c <fgets@plt>
   1fef0:	subs	r7, r0, #0
   1fef4:	beq	2006c <crc32@@Base+0x6614>
   1fef8:	ldrb	r3, [r7]
   1fefc:	cmp	r3, #35	; 0x23
   1ff00:	cmpne	r3, #10
   1ff04:	moveq	r4, #1
   1ff08:	movne	r4, #0
   1ff0c:	beq	1fec4 <crc32@@Base+0x646c>
   1ff10:	bl	125e4 <strlen@plt>
   1ff14:	add	ip, sp, #32
   1ff18:	add	r2, sp, #28
   1ff1c:	ldr	r5, [pc, #924]	; 202c0 <crc32@@Base+0x6868>
   1ff20:	mov	r1, ip
   1ff24:	sub	r0, r0, #1
   1ff28:	ldrb	r3, [r7, r0]
   1ff2c:	cmp	r3, #10
   1ff30:	ldr	r3, [fp]
   1ff34:	strbeq	r4, [r7, r0]
   1ff38:	mov	r0, r7
   1ff3c:	mov	r4, #1
   1ff40:	strh	r3, [ip], #2
   1ff44:	lsr	r3, r3, #16
   1ff48:	strb	r3, [ip]
   1ff4c:	ldr	r3, [sp, #4]
   1ff50:	ldr	sl, [r3, #4]
   1ff54:	bl	12248 <__strtok_r@plt>
   1ff58:	ldr	r1, [sp, #12]
   1ff5c:	mov	r6, r0
   1ff60:	b	1ff74 <crc32@@Base+0x651c>
   1ff64:	add	r4, r4, #1
   1ff68:	cmp	r4, #24
   1ff6c:	beq	2001c <crc32@@Base+0x65c4>
   1ff70:	ldr	r1, [r5, #4]!
   1ff74:	mov	r0, r6
   1ff78:	bl	12680 <strcmp@plt>
   1ff7c:	subs	r3, r0, #0
   1ff80:	bne	1ff64 <crc32@@Base+0x650c>
   1ff84:	mov	ip, #44	; 0x2c
   1ff88:	add	r2, sp, #28
   1ff8c:	mul	ip, ip, r8
   1ff90:	add	r1, sp, #32
   1ff94:	str	r3, [sp, #8]
   1ff98:	add	r5, sl, ip
   1ff9c:	str	r4, [sl, ip]
   1ffa0:	bl	12248 <__strtok_r@plt>
   1ffa4:	ldr	r3, [sp, #8]
   1ffa8:	subs	r6, r0, #0
   1ffac:	beq	20274 <crc32@@Base+0x681c>
   1ffb0:	sub	r4, r4, #1
   1ffb4:	cmp	r4, #22
   1ffb8:	ldrls	pc, [pc, r4, lsl #2]
   1ffbc:	b	2001c <crc32@@Base+0x65c4>
   1ffc0:	andeq	r0, r2, r4, asr r2
   1ffc4:			; <UNDEFINED> instruction: 0x000201b0
   1ffc8:	andeq	r0, r2, ip, lsl r0
   1ffcc:	andeq	r0, r2, ip, lsl r0
   1ffd0:	muleq	r2, r4, r0
   1ffd4:	muleq	r2, r4, r0
   1ffd8:	andeq	r0, r2, r0, lsr #4
   1ffdc:	muleq	r2, r4, r0
   1ffe0:	andeq	r0, r2, ip, ror #1
   1ffe4:	andeq	r0, r2, ip, lsl r0
   1ffe8:	andeq	r0, r2, r0, ror #2
   1ffec:	ldrdeq	r0, [r2], -r4
   1fff0:	ldrdeq	r0, [r2], -r4
   1fff4:	andeq	r0, r2, r4, asr #1
   1fff8:	andeq	r0, r2, r4, asr #1
   1fffc:	andeq	r0, r2, r8, lsl #4
   20000:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20004:	andeq	r0, r2, ip, lsr #1
   20008:	andeq	r0, r2, ip, lsr #1
   2000c:	andeq	r0, r2, r4, ror #3
   20010:	andeq	r0, r2, r4, lsr #3
   20014:	andeq	r0, r2, ip, lsr #1
   20018:	andeq	r0, r2, r4, asr #1
   2001c:	ldr	r0, [sp, #16]
   20020:	movw	r2, #43284	; 0xa914
   20024:	mov	r3, r7
   20028:	mov	r1, #1
   2002c:	movt	r2, #3
   20030:	ldr	r0, [r0]
   20034:	bl	122d8 <__fprintf_chk@plt>
   20038:	add	r8, r8, #1
   2003c:	cmp	r8, #255	; 0xff
   20040:	ble	1fec4 <crc32@@Base+0x646c>
   20044:	movw	r3, #65196	; 0xfeac
   20048:	movt	r3, #4
   2004c:	movw	r0, #43312	; 0xa930
   20050:	mov	r2, #45	; 0x2d
   20054:	ldr	r3, [r3]
   20058:	movt	r0, #3
   2005c:	mov	r1, #1
   20060:	bl	1259c <fwrite@plt>
   20064:	mvn	r0, #0
   20068:	b	20078 <crc32@@Base+0x6620>
   2006c:	ldr	r3, [sp, #4]
   20070:	mov	r0, #0
   20074:	str	r8, [r3]
   20078:	ldr	r3, [sp, #20]
   2007c:	ldr	r2, [sp, #292]	; 0x124
   20080:	ldr	r3, [r3]
   20084:	cmp	r2, r3
   20088:	bne	202bc <crc32@@Base+0x6864>
   2008c:	add	sp, sp, #300	; 0x12c
   20090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20094:	mov	r0, r6
   20098:	mov	r2, #16
   2009c:	mov	r1, #0
   200a0:	bl	122f0 <strtoul@plt>
   200a4:	str	r0, [r5, #4]
   200a8:	b	20038 <crc32@@Base+0x65e0>
   200ac:	mov	r2, #0
   200b0:	mov	r0, r6
   200b4:	mov	r1, r2
   200b8:	bl	122f0 <strtoul@plt>
   200bc:	str	r0, [r5, #4]
   200c0:	b	20038 <crc32@@Base+0x65e0>
   200c4:	mov	r0, r6
   200c8:	bl	1232c <__strdup@plt>
   200cc:	str	r0, [r5, #4]
   200d0:	b	20038 <crc32@@Base+0x65e0>
   200d4:	mov	r0, r6
   200d8:	mov	r2, #10
   200dc:	mov	r1, #0
   200e0:	bl	122f0 <strtoul@plt>
   200e4:	str	r0, [r5, #4]
   200e8:	b	20038 <crc32@@Base+0x65e0>
   200ec:	mov	r0, r6
   200f0:	str	r3, [sp, #8]
   200f4:	bl	1232c <__strdup@plt>
   200f8:	ldr	r3, [sp, #8]
   200fc:	add	r4, r5, #8
   20100:	mov	r6, r3
   20104:	str	r0, [r5, #4]
   20108:	add	r2, sp, #28
   2010c:	add	r1, sp, #32
   20110:	mov	r0, #0
   20114:	bl	12248 <__strtok_r@plt>
   20118:	cmp	r0, #0
   2011c:	beq	2026c <crc32@@Base+0x6814>
   20120:	mov	r2, #16
   20124:	mov	r1, #0
   20128:	bl	122f0 <strtoul@plt>
   2012c:	add	r6, r6, #1
   20130:	cmp	r6, #8
   20134:	str	r0, [r4], #4
   20138:	bne	20108 <crc32@@Base+0x66b0>
   2013c:	movw	r3, #65196	; 0xfeac
   20140:	movt	r3, #4
   20144:	movw	r0, #43212	; 0xa8cc
   20148:	mov	r2, #30
   2014c:	ldr	r3, [r3]
   20150:	mov	r1, #1
   20154:	movt	r0, #3
   20158:	bl	1259c <fwrite@plt>
   2015c:	b	20064 <crc32@@Base+0x660c>
   20160:	add	r2, sp, #28
   20164:	add	r1, sp, #32
   20168:	mov	r0, #0
   2016c:	bl	12248 <__strtok_r@plt>
   20170:	subs	r4, r0, #0
   20174:	beq	20298 <crc32@@Base+0x6840>
   20178:	mov	r2, #16
   2017c:	mov	r1, #0
   20180:	mov	r0, r6
   20184:	bl	122f0 <strtoul@plt>
   20188:	mov	r2, #16
   2018c:	mov	r1, #0
   20190:	str	r0, [r5, #4]
   20194:	mov	r0, r4
   20198:	bl	122f0 <strtoul@plt>
   2019c:	str	r0, [r5, #8]
   201a0:	b	20038 <crc32@@Base+0x65e0>
   201a4:	mov	r3, #1
   201a8:	strb	r3, [r5, #4]
   201ac:	b	20038 <crc32@@Base+0x65e0>
   201b0:	mov	r0, r6
   201b4:	bl	1fdb8 <crc32@@Base+0x6360>
   201b8:	cmp	r0, #0
   201bc:	bge	200cc <crc32@@Base+0x6674>
   201c0:	movw	r1, #65196	; 0xfeac
   201c4:	movt	r1, #4
   201c8:	mov	r3, r6
   201cc:	movw	r2, #43156	; 0xa894
   201d0:	ldr	r0, [r1]
   201d4:	movt	r2, #3
   201d8:	mov	r1, #1
   201dc:	bl	122d8 <__fprintf_chk@plt>
   201e0:	b	20064 <crc32@@Base+0x660c>
   201e4:	mov	r3, #0
   201e8:	strb	r3, [r5, #4]
   201ec:	b	20038 <crc32@@Base+0x65e0>
   201f0:	mov	r2, #0
   201f4:	mov	r0, r6
   201f8:	mov	r1, r2
   201fc:	bl	122f0 <strtoul@plt>
   20200:	strb	r0, [r5, #4]
   20204:	b	20038 <crc32@@Base+0x65e0>
   20208:	mov	r2, #0
   2020c:	mov	r0, r6
   20210:	mov	r1, r2
   20214:	bl	12140 <strtol@plt>
   20218:	str	r0, [r5, #4]
   2021c:	b	20038 <crc32@@Base+0x65e0>
   20220:	mov	r0, r6
   20224:	bl	1fe14 <crc32@@Base+0x63bc>
   20228:	cmp	r0, #0
   2022c:	bge	200cc <crc32@@Base+0x6674>
   20230:	movw	r1, #65196	; 0xfeac
   20234:	movt	r1, #4
   20238:	mov	r3, r6
   2023c:	movw	r2, #43184	; 0xa8b0
   20240:	ldr	r0, [r1]
   20244:	movt	r2, #3
   20248:	mov	r1, #1
   2024c:	bl	122d8 <__fprintf_chk@plt>
   20250:	b	20064 <crc32@@Base+0x660c>
   20254:	mov	r0, r6
   20258:	mov	r2, #10
   2025c:	mov	r1, #0
   20260:	bl	12140 <strtol@plt>
   20264:	str	r0, [r5, #4]
   20268:	b	20038 <crc32@@Base+0x65e0>
   2026c:	str	r6, [r5, #40]	; 0x28
   20270:	b	20038 <crc32@@Base+0x65e0>
   20274:	movw	r1, #65196	; 0xfeac
   20278:	movt	r1, #4
   2027c:	mov	r3, r7
   20280:	movw	r2, #43124	; 0xa874
   20284:	ldr	r0, [r1]
   20288:	movt	r2, #3
   2028c:	mov	r1, #1
   20290:	bl	122d8 <__fprintf_chk@plt>
   20294:	b	20064 <crc32@@Base+0x660c>
   20298:	movw	r3, #65196	; 0xfeac
   2029c:	movt	r3, #4
   202a0:	movw	r0, #43244	; 0xa8ec
   202a4:	mov	r2, #37	; 0x25
   202a8:	ldr	r3, [r3]
   202ac:	mov	r1, #1
   202b0:	movt	r0, #3
   202b4:	bl	1259c <fwrite@plt>
   202b8:	b	20064 <crc32@@Base+0x660c>
   202bc:	bl	124b8 <__stack_chk_fail@plt>
   202c0:	andeq	sl, r3, ip, lsl #12
   202c4:	push	{r4, r5, r6, r7, r8, lr}
   202c8:	mov	r7, r0
   202cc:	sub	sp, sp, #8
   202d0:	mov	r6, r1
   202d4:	ldr	r0, [r0, #64]	; 0x40
   202d8:	movw	r1, #50292	; 0xc474
   202dc:	movt	r1, #3
   202e0:	bl	12350 <fopen@plt>
   202e4:	subs	r8, r0, #0
   202e8:	beq	203d8 <crc32@@Base+0x6980>
   202ec:	mov	r1, #1
   202f0:	mov	r0, #11264	; 0x2c00
   202f4:	bl	1253c <calloc@plt>
   202f8:	movw	r5, #3264	; 0xcc0
   202fc:	movt	r5, #6
   20300:	cmp	r0, #0
   20304:	str	r0, [r5, #4]
   20308:	beq	2046c <crc32@@Base+0x6a14>
   2030c:	mov	r0, r8
   20310:	bl	12470 <rewind@plt>
   20314:	mov	r0, r8
   20318:	bl	1fe74 <crc32@@Base+0x641c>
   2031c:	mov	r4, r0
   20320:	mov	r0, r8
   20324:	bl	12620 <fclose@plt>
   20328:	cmp	r4, #0
   2032c:	bne	2041c <crc32@@Base+0x69c4>
   20330:	ldr	r1, [r5]
   20334:	ldr	r0, [r5, #4]
   20338:	cmp	r1, #0
   2033c:	ble	20374 <crc32@@Base+0x691c>
   20340:	ldr	r3, [r0]
   20344:	cmp	r3, #1
   20348:	beq	203a4 <crc32@@Base+0x694c>
   2034c:	mov	r3, r0
   20350:	b	20368 <crc32@@Base+0x6910>
   20354:	add	r3, r3, #44	; 0x2c
   20358:	ldr	r2, [r3]
   2035c:	cmp	r2, #1
   20360:	mov	ip, r3
   20364:	beq	203a8 <crc32@@Base+0x6950>
   20368:	add	r4, r4, #1
   2036c:	cmp	r4, r1
   20370:	bne	20354 <crc32@@Base+0x68fc>
   20374:	mov	r4, #512	; 0x200
   20378:	bl	1214c <free@plt>
   2037c:	mov	r1, #1
   20380:	mov	r0, r4
   20384:	bl	1253c <calloc@plt>
   20388:	cmp	r0, #0
   2038c:	beq	2042c <crc32@@Base+0x69d4>
   20390:	str	r0, [r6, #8]
   20394:	mov	r0, #1
   20398:	str	r4, [r6, #4]
   2039c:	add	sp, sp, #8
   203a0:	pop	{r4, r5, r6, r7, r8, pc}
   203a4:	mov	ip, r0
   203a8:	ldr	r3, [ip, #4]
   203ac:	cmn	r3, #1
   203b0:	blt	20400 <crc32@@Base+0x69a8>
   203b4:	cmp	r3, #0
   203b8:	ble	20374 <crc32@@Base+0x691c>
   203bc:	cmp	r3, #1
   203c0:	bne	20400 <crc32@@Base+0x69a8>
   203c4:	mov	r0, #0
   203c8:	bl	1fb1c <crc32@@Base+0x60c4>
   203cc:	mov	r4, r0
   203d0:	ldr	r0, [r5, #4]
   203d4:	b	20378 <crc32@@Base+0x6920>
   203d8:	movw	r1, #65196	; 0xfeac
   203dc:	movt	r1, #4
   203e0:	ldr	r3, [r7, #64]	; 0x40
   203e4:	movw	r2, #43360	; 0xa960
   203e8:	ldr	r0, [r1]
   203ec:	movt	r2, #3
   203f0:	mov	r1, #1
   203f4:	bl	122d8 <__fprintf_chk@plt>
   203f8:	mov	r0, #1
   203fc:	bl	12218 <exit@plt>
   20400:	movw	r1, #65196	; 0xfeac
   20404:	movt	r1, #4
   20408:	movw	r2, #43416	; 0xa998
   2040c:	movt	r2, #3
   20410:	ldr	r0, [r1]
   20414:	mov	r1, #1
   20418:	bl	122d8 <__fprintf_chk@plt>
   2041c:	ldr	r0, [r5, #4]
   20420:	bl	1214c <free@plt>
   20424:	mov	r0, #1
   20428:	bl	12218 <exit@plt>
   2042c:	movw	r2, #65196	; 0xfeac
   20430:	movt	r2, #4
   20434:	ldr	r5, [r7, #80]	; 0x50
   20438:	ldr	r4, [r2]
   2043c:	bl	126b0 <__errno_location@plt>
   20440:	ldr	r0, [r0]
   20444:	bl	12224 <strerror@plt>
   20448:	mov	r3, r5
   2044c:	movw	r2, #26216	; 0x6668
   20450:	mov	r1, #1
   20454:	movt	r2, #3
   20458:	str	r0, [sp]
   2045c:	mov	r0, r4
   20460:	bl	122d8 <__fprintf_chk@plt>
   20464:	mov	r0, #1
   20468:	bl	12218 <exit@plt>
   2046c:	movw	r3, #65196	; 0xfeac
   20470:	movt	r3, #4
   20474:	mov	r2, #23
   20478:	mov	r1, #1
   2047c:	ldr	r3, [r3]
   20480:	movw	r0, #43392	; 0xa980
   20484:	movt	r0, #3
   20488:	bl	1259c <fwrite@plt>
   2048c:	mov	r0, r8
   20490:	bl	12620 <fclose@plt>
   20494:	mov	r0, #1
   20498:	bl	12218 <exit@plt>
   2049c:	ldrb	r3, [r0, #8]
   204a0:	cmp	r3, #0
   204a4:	ldrbne	r3, [r0, #9]
   204a8:	ldrhne	r0, [r0, #10]
   204ac:	orrne	r0, r0, r3, lsl #16
   204b0:	moveq	r0, #32
   204b4:	bx	lr
   204b8:	movw	r3, #3264	; 0xcc0
   204bc:	movt	r3, #6
   204c0:	push	{r4, r5, r6, r7, r8, r9, lr}
   204c4:	movw	r6, #61168	; 0xeef0
   204c8:	movt	r6, #4
   204cc:	ldr	ip, [r3]
   204d0:	sub	sp, sp, #100	; 0x64
   204d4:	ldr	r2, [r6]
   204d8:	cmp	ip, #0
   204dc:	str	r2, [sp, #92]	; 0x5c
   204e0:	ble	20524 <crc32@@Base+0x6acc>
   204e4:	ldr	r4, [r3, #4]
   204e8:	mov	r7, r0
   204ec:	ldr	r3, [r4]
   204f0:	cmp	r3, #9
   204f4:	beq	20544 <crc32@@Base+0x6aec>
   204f8:	mov	r3, r4
   204fc:	mov	r2, #0
   20500:	b	20518 <crc32@@Base+0x6ac0>
   20504:	add	r3, r3, #44	; 0x2c
   20508:	ldr	r1, [r3]
   2050c:	cmp	r1, #9
   20510:	mov	r4, r3
   20514:	beq	20544 <crc32@@Base+0x6aec>
   20518:	add	r2, r2, #1
   2051c:	cmp	ip, r2
   20520:	bne	20504 <crc32@@Base+0x6aac>
   20524:	mov	r8, #0
   20528:	ldr	r2, [sp, #92]	; 0x5c
   2052c:	mov	r0, r8
   20530:	ldr	r3, [r6]
   20534:	cmp	r2, r3
   20538:	bne	2069c <crc32@@Base+0x6c44>
   2053c:	add	sp, sp, #100	; 0x64
   20540:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20544:	mov	r3, #2
   20548:	movw	r1, #50292	; 0xc474
   2054c:	strb	r3, [r7]
   20550:	movt	r1, #3
   20554:	ldr	r0, [r4, #4]
   20558:	bl	12350 <fopen@plt>
   2055c:	subs	r9, r0, #0
   20560:	beq	20674 <crc32@@Base+0x6c1c>
   20564:	bl	124ac <fileno@plt>
   20568:	mov	r2, sp
   2056c:	mov	r1, r0
   20570:	mov	r0, #3
   20574:	bl	12578 <__fxstat@plt>
   20578:	subs	r8, r0, #0
   2057c:	bne	20650 <crc32@@Base+0x6bf8>
   20580:	ldr	r2, [r4, #40]	; 0x28
   20584:	ldr	r1, [sp, #44]	; 0x2c
   20588:	add	r3, r1, r2, lsl #2
   2058c:	str	r2, [r7, #4]
   20590:	add	r3, r3, #15
   20594:	bic	r3, r3, #3
   20598:	add	r3, r3, #4
   2059c:	strh	r3, [r7, #2]
   205a0:	lsr	r3, r3, #16
   205a4:	strb	r3, [r7, #1]
   205a8:	ldr	r3, [r4, #40]	; 0x28
   205ac:	cmp	r3, #0
   205b0:	moveq	r5, #8
   205b4:	beq	205e4 <crc32@@Base+0x6b8c>
   205b8:	add	ip, r4, #8
   205bc:	add	r0, r7, #4
   205c0:	mov	r3, r8
   205c4:	ldr	r2, [ip], #4
   205c8:	add	r3, r3, #1
   205cc:	str	r2, [r0, #4]!
   205d0:	ldr	r2, [r4, #40]	; 0x28
   205d4:	cmp	r2, r3
   205d8:	bhi	205c4 <crc32@@Base+0x6b6c>
   205dc:	lsl	r5, r2, #2
   205e0:	add	r5, r5, #8
   205e4:	add	r5, r7, r5
   205e8:	mov	r3, r9
   205ec:	mov	r2, #1
   205f0:	mov	r0, r5
   205f4:	bl	12488 <fread@plt>
   205f8:	cmp	r0, #1
   205fc:	bne	20620 <crc32@@Base+0x6bc8>
   20600:	mov	r0, r9
   20604:	bl	12620 <fclose@plt>
   20608:	ldr	r3, [sp, #44]	; 0x2c
   2060c:	mov	r2, #0
   20610:	add	r3, r3, #3
   20614:	bic	r3, r3, #3
   20618:	str	r2, [r5, r3]
   2061c:	b	20528 <crc32@@Base+0x6ad0>
   20620:	movw	r1, #65196	; 0xfeac
   20624:	movt	r1, #4
   20628:	movw	r2, #43496	; 0xa9e8
   2062c:	ldr	r3, [r4, #4]
   20630:	ldr	r0, [r1]
   20634:	movt	r2, #3
   20638:	mov	r1, #1
   2063c:	bl	122d8 <__fprintf_chk@plt>
   20640:	mov	r0, r9
   20644:	mvn	r8, #0
   20648:	bl	12620 <fclose@plt>
   2064c:	b	20528 <crc32@@Base+0x6ad0>
   20650:	movw	r1, #65196	; 0xfeac
   20654:	movt	r1, #4
   20658:	ldr	r3, [r4, #4]
   2065c:	movw	r2, #43468	; 0xa9cc
   20660:	ldr	r0, [r1]
   20664:	movt	r2, #3
   20668:	mov	r1, #1
   2066c:	bl	122d8 <__fprintf_chk@plt>
   20670:	b	20640 <crc32@@Base+0x6be8>
   20674:	movw	r1, #65196	; 0xfeac
   20678:	movt	r1, #4
   2067c:	ldr	r3, [r4, #4]
   20680:	movw	r2, #43440	; 0xa9b0
   20684:	ldr	r0, [r1]
   20688:	movt	r2, #3
   2068c:	mov	r1, #1
   20690:	mvn	r8, #0
   20694:	bl	122d8 <__fprintf_chk@plt>
   20698:	b	20528 <crc32@@Base+0x6ad0>
   2069c:	bl	124b8 <__stack_chk_fail@plt>
   206a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   206a4:	movw	sl, #61168	; 0xeef0
   206a8:	sub	sp, sp, #44	; 0x2c
   206ac:	movt	sl, #4
   206b0:	mov	ip, r3
   206b4:	mov	r8, r1
   206b8:	str	r3, [sp, #20]
   206bc:	movw	r1, #50292	; 0xc474
   206c0:	ldr	r3, [sl]
   206c4:	movt	r1, #3
   206c8:	str	r0, [sp, #8]
   206cc:	ldr	r0, [ip, #64]	; 0x40
   206d0:	str	r2, [sp, #12]
   206d4:	str	r3, [sp, #36]	; 0x24
   206d8:	bl	12350 <fopen@plt>
   206dc:	subs	r4, r0, #0
   206e0:	beq	20e5c <crc32@@Base+0x7404>
   206e4:	mov	r1, #1
   206e8:	mov	r0, #11264	; 0x2c00
   206ec:	bl	1253c <calloc@plt>
   206f0:	movw	r7, #3264	; 0xcc0
   206f4:	movt	r7, #6
   206f8:	cmp	r0, #0
   206fc:	str	r0, [r7, #4]
   20700:	beq	20e2c <crc32@@Base+0x73d4>
   20704:	mov	r0, r4
   20708:	bl	12470 <rewind@plt>
   2070c:	mov	r0, r4
   20710:	bl	1fe74 <crc32@@Base+0x641c>
   20714:	mov	r6, r0
   20718:	mov	r0, r4
   2071c:	bl	12620 <fclose@plt>
   20720:	cmp	r6, #0
   20724:	bne	20ee4 <crc32@@Base+0x748c>
   20728:	ldr	r4, [r7]
   2072c:	ldr	r2, [r8, #44]	; 0x2c
   20730:	cmp	r4, #0
   20734:	add	r2, r2, #3
   20738:	bic	r2, r2, #3
   2073c:	str	r2, [r8, #44]	; 0x2c
   20740:	ble	20da4 <crc32@@Base+0x734c>
   20744:	ldr	ip, [r7, #4]
   20748:	ldr	r0, [ip]
   2074c:	cmp	r0, #1
   20750:	beq	20990 <crc32@@Base+0x6f38>
   20754:	mov	r3, ip
   20758:	mov	r1, r6
   2075c:	b	20774 <crc32@@Base+0x6d1c>
   20760:	add	r3, r3, #44	; 0x2c
   20764:	ldr	lr, [r3]
   20768:	cmp	lr, #1
   2076c:	mov	r5, r3
   20770:	beq	20994 <crc32@@Base+0x6f3c>
   20774:	add	r1, r1, #1
   20778:	cmp	r1, r4
   2077c:	bne	20760 <crc32@@Base+0x6d08>
   20780:	add	r1, ip, #44	; 0x2c
   20784:	mov	lr, #44	; 0x2c
   20788:	mov	ip, r0
   2078c:	mov	r5, #0
   20790:	mla	lr, lr, r4, r1
   20794:	mov	r3, r1
   20798:	b	207a0 <crc32@@Base+0x6d48>
   2079c:	ldr	ip, [r3, #-44]	; 0xffffffd4
   207a0:	cmp	ip, #11
   207a4:	add	r3, r3, #44	; 0x2c
   207a8:	addeq	r5, r5, #1
   207ac:	cmp	r3, lr
   207b0:	bne	2079c <crc32@@Base+0x6d44>
   207b4:	cmp	r5, #0
   207b8:	mov	ip, #0
   207bc:	movne	fp, #1
   207c0:	moveq	fp, ip
   207c4:	movne	r9, #512	; 0x200
   207c8:	moveq	r9, #32
   207cc:	b	207d4 <crc32@@Base+0x6d7c>
   207d0:	ldr	r0, [r1, #-44]	; 0xffffffd4
   207d4:	cmp	r0, #10
   207d8:	add	r1, r1, #44	; 0x2c
   207dc:	addeq	ip, ip, #1
   207e0:	cmp	r3, r1
   207e4:	bne	207d0 <crc32@@Base+0x6d78>
   207e8:	cmp	ip, #1
   207ec:	bhi	20d80 <crc32@@Base+0x7328>
   207f0:	mov	r1, #1
   207f4:	mov	r0, r9
   207f8:	str	r2, [sp, #16]
   207fc:	bl	1253c <calloc@plt>
   20800:	ldr	r2, [sp, #16]
   20804:	subs	r5, r0, #0
   20808:	beq	20de4 <crc32@@Base+0x738c>
   2080c:	ldr	r3, [sp, #20]
   20810:	cmp	r4, #0
   20814:	add	r2, r2, #4
   20818:	str	r9, [r5, #12]
   2081c:	sub	r2, r2, r9
   20820:	strb	fp, [r5, #30]
   20824:	ldr	r1, [r3, #56]	; 0x38
   20828:	ldr	r3, [r3, #60]	; 0x3c
   2082c:	str	r2, [r5, #4]
   20830:	ldr	r7, [r7, #4]
   20834:	str	r1, [r5, #16]
   20838:	str	r3, [r5, #20]
   2083c:	ble	20db0 <crc32@@Base+0x7358>
   20840:	ldr	r3, [r7]
   20844:	cmp	r3, #2
   20848:	beq	20bb0 <crc32@@Base+0x7158>
   2084c:	mov	r2, r7
   20850:	mov	r1, #0
   20854:	b	2086c <crc32@@Base+0x6e14>
   20858:	add	r2, r2, #44	; 0x2c
   2085c:	ldr	r0, [r2]
   20860:	cmp	r0, #2
   20864:	mov	ip, r2
   20868:	beq	20bb4 <crc32@@Base+0x715c>
   2086c:	add	r1, r1, #1
   20870:	cmp	r1, r4
   20874:	bne	20858 <crc32@@Base+0x6e00>
   20878:	cmp	r3, #7
   2087c:	beq	20bc0 <crc32@@Base+0x7168>
   20880:	mov	r2, r7
   20884:	mov	r1, #0
   20888:	b	208a0 <crc32@@Base+0x6e48>
   2088c:	add	r2, r2, #44	; 0x2c
   20890:	ldr	r0, [r2]
   20894:	cmp	r0, #7
   20898:	mov	ip, r2
   2089c:	beq	20bc4 <crc32@@Base+0x716c>
   208a0:	add	r1, r1, #1
   208a4:	cmp	r1, r4
   208a8:	bne	2088c <crc32@@Base+0x6e34>
   208ac:	cmp	r3, #8
   208b0:	beq	20bd0 <crc32@@Base+0x7178>
   208b4:	mov	r2, r7
   208b8:	mov	r1, #0
   208bc:	b	208d4 <crc32@@Base+0x6e7c>
   208c0:	add	r2, r2, #44	; 0x2c
   208c4:	ldr	r0, [r2]
   208c8:	cmp	r0, #8
   208cc:	mov	ip, r2
   208d0:	beq	20bd4 <crc32@@Base+0x717c>
   208d4:	add	r1, r1, #1
   208d8:	cmp	r1, r4
   208dc:	bne	208c0 <crc32@@Base+0x6e68>
   208e0:	mov	r1, #32
   208e4:	mov	r0, r5
   208e8:	str	r3, [sp, #16]
   208ec:	bl	1fa64 <crc32@@Base+0x600c>
   208f0:	cmp	fp, #0
   208f4:	ldr	r3, [sp, #16]
   208f8:	strb	r0, [r5, #31]
   208fc:	bne	20be0 <crc32@@Base+0x7188>
   20900:	add	r3, sp, #32
   20904:	str	r3, [sp, #16]
   20908:	mov	r0, r7
   2090c:	bl	1214c <free@plt>
   20910:	ldr	r3, [r8, #44]	; 0x2c
   20914:	cmp	r3, #0
   20918:	beq	2093c <crc32@@Base+0x6ee4>
   2091c:	ands	r2, r3, #3
   20920:	ldreq	r1, [sp, #8]
   20924:	bne	20d24 <crc32@@Base+0x72cc>
   20928:	ldr	r0, [r1], #4
   2092c:	subs	r3, r3, #4
   20930:	add	r2, r2, r0
   20934:	bne	20928 <crc32@@Base+0x6ed0>
   20938:	mov	r3, r2
   2093c:	ldrd	r0, [sp, #12]
   20940:	mov	r2, #4
   20944:	str	r3, [sp, #32]
   20948:	bl	1262c <write@plt>
   2094c:	cmp	r0, #4
   20950:	bne	20e8c <crc32@@Base+0x7434>
   20954:	ldr	r3, [r8, #44]	; 0x2c
   20958:	mov	r2, r9
   2095c:	ldr	r0, [sp, #8]
   20960:	mov	r1, r5
   20964:	add	r3, r3, #4
   20968:	str	r3, [r8, #44]	; 0x2c
   2096c:	bl	125c0 <memcpy@plt>
   20970:	ldr	r2, [sp, #36]	; 0x24
   20974:	ldr	r3, [sl]
   20978:	cmp	r2, r3
   2097c:	bne	20e88 <crc32@@Base+0x7430>
   20980:	mov	r0, r5
   20984:	add	sp, sp, #44	; 0x2c
   20988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2098c:	b	1214c <free@plt>
   20990:	mov	r5, ip
   20994:	ldr	fp, [r5, #4]
   20998:	cmn	fp, #1
   2099c:	blt	20ec4 <crc32@@Base+0x746c>
   209a0:	cmp	fp, #0
   209a4:	ble	20780 <crc32@@Base+0x6d28>
   209a8:	cmp	fp, #1
   209ac:	bne	20ec4 <crc32@@Base+0x746c>
   209b0:	add	r3, sp, #40	; 0x28
   209b4:	mov	r4, #0
   209b8:	str	r2, [sp, #24]
   209bc:	str	r4, [r3, #-8]!
   209c0:	mov	r0, r3
   209c4:	str	r3, [sp, #16]
   209c8:	bl	1fb1c <crc32@@Base+0x60c4>
   209cc:	ldr	r2, [sp, #24]
   209d0:	subs	r9, r0, #0
   209d4:	beq	20d50 <crc32@@Base+0x72f8>
   209d8:	mov	r1, fp
   209dc:	str	r2, [sp, #24]
   209e0:	bl	1253c <calloc@plt>
   209e4:	ldr	r2, [sp, #24]
   209e8:	subs	r5, r0, #0
   209ec:	beq	20e08 <crc32@@Base+0x73b0>
   209f0:	ldr	ip, [sp, #20]
   209f4:	add	r2, r2, #4
   209f8:	ldr	r3, [r7]
   209fc:	sub	r2, r2, r9
   20a00:	ldr	r1, [sp, #32]
   20a04:	ldr	r0, [ip, #60]	; 0x3c
   20a08:	cmp	r3, #0
   20a0c:	str	r2, [r5, #4]
   20a10:	ldr	r2, [ip, #56]	; 0x38
   20a14:	strb	r1, [r5, #30]
   20a18:	add	r1, r5, #32
   20a1c:	strh	r9, [r5, #10]
   20a20:	str	r2, [sp, #28]
   20a24:	sub	r2, r2, #64	; 0x40
   20a28:	str	r9, [r5, #12]
   20a2c:	str	r2, [r5, #16]
   20a30:	lsr	r2, r9, #16
   20a34:	strb	fp, [r5, #8]
   20a38:	str	r0, [r5, #20]
   20a3c:	str	r1, [sp, #24]
   20a40:	strb	r2, [r5, #9]
   20a44:	ble	20b80 <crc32@@Base+0x7128>
   20a48:	ldr	r1, [r7, #4]
   20a4c:	ldr	fp, [r1]
   20a50:	cmp	fp, #2
   20a54:	beq	20c44 <crc32@@Base+0x71ec>
   20a58:	mov	r2, r1
   20a5c:	b	20a74 <crc32@@Base+0x701c>
   20a60:	add	r2, r2, #44	; 0x2c
   20a64:	ldr	r0, [r2]
   20a68:	cmp	r0, #2
   20a6c:	mov	ip, r2
   20a70:	beq	20c48 <crc32@@Base+0x71f0>
   20a74:	add	r4, r4, #1
   20a78:	cmp	r4, r3
   20a7c:	bne	20a60 <crc32@@Base+0x7008>
   20a80:	cmp	fp, #5
   20a84:	beq	20c7c <crc32@@Base+0x7224>
   20a88:	mov	r2, r1
   20a8c:	mov	r0, #0
   20a90:	b	20aa8 <crc32@@Base+0x7050>
   20a94:	add	r2, r2, #44	; 0x2c
   20a98:	ldr	ip, [r2]
   20a9c:	cmp	ip, #5
   20aa0:	mov	lr, r2
   20aa4:	beq	20c80 <crc32@@Base+0x7228>
   20aa8:	add	r0, r0, #1
   20aac:	cmp	r0, r3
   20ab0:	bne	20a94 <crc32@@Base+0x703c>
   20ab4:	cmp	fp, #6
   20ab8:	beq	20c8c <crc32@@Base+0x7234>
   20abc:	mov	r2, r1
   20ac0:	mov	r0, #0
   20ac4:	b	20adc <crc32@@Base+0x7084>
   20ac8:	add	r2, r2, #44	; 0x2c
   20acc:	ldr	ip, [r2]
   20ad0:	cmp	ip, #6
   20ad4:	mov	lr, r2
   20ad8:	beq	20c90 <crc32@@Base+0x7238>
   20adc:	add	r0, r0, #1
   20ae0:	cmp	r0, r3
   20ae4:	bne	20ac8 <crc32@@Base+0x7070>
   20ae8:	cmp	fp, #12
   20aec:	beq	20c9c <crc32@@Base+0x7244>
   20af0:	mov	r2, r1
   20af4:	mov	r0, #0
   20af8:	b	20b10 <crc32@@Base+0x70b8>
   20afc:	add	r2, r2, #44	; 0x2c
   20b00:	ldr	ip, [r2]
   20b04:	cmp	ip, #12
   20b08:	mov	lr, r2
   20b0c:	beq	20ca0 <crc32@@Base+0x7248>
   20b10:	add	r0, r0, #1
   20b14:	cmp	r0, r3
   20b18:	bne	20afc <crc32@@Base+0x70a4>
   20b1c:	cmp	fp, #13
   20b20:	beq	20ce4 <crc32@@Base+0x728c>
   20b24:	mov	r2, r1
   20b28:	mov	r0, #0
   20b2c:	b	20b44 <crc32@@Base+0x70ec>
   20b30:	add	r2, r2, #44	; 0x2c
   20b34:	ldr	ip, [r2]
   20b38:	cmp	ip, #13
   20b3c:	mov	lr, r2
   20b40:	beq	20ce8 <crc32@@Base+0x7290>
   20b44:	add	r0, r0, #1
   20b48:	cmp	r0, r3
   20b4c:	bne	20b30 <crc32@@Base+0x70d8>
   20b50:	cmp	fp, #9
   20b54:	beq	20c54 <crc32@@Base+0x71fc>
   20b58:	mov	r2, r1
   20b5c:	b	20b74 <crc32@@Base+0x711c>
   20b60:	add	r2, r2, #44	; 0x2c
   20b64:	ldr	r0, [r2]
   20b68:	cmp	r0, #9
   20b6c:	mov	r1, r2
   20b70:	beq	20c54 <crc32@@Base+0x71fc>
   20b74:	add	r6, r6, #1
   20b78:	cmp	r6, r3
   20b7c:	bne	20b60 <crc32@@Base+0x7108>
   20b80:	mov	r3, #1
   20b84:	ldr	r0, [sp, #24]
   20b88:	strb	r3, [r5, #30]
   20b8c:	bl	204b8 <crc32@@Base+0x6a60>
   20b90:	cmp	r0, #0
   20b94:	bne	20d50 <crc32@@Base+0x72f8>
   20b98:	mov	r1, r9
   20b9c:	mov	r0, r5
   20ba0:	bl	1fa64 <crc32@@Base+0x600c>
   20ba4:	ldr	r7, [r7, #4]
   20ba8:	strb	r0, [r5, #31]
   20bac:	b	20908 <crc32@@Base+0x6eb0>
   20bb0:	mov	ip, r7
   20bb4:	ldr	r2, [ip, #4]
   20bb8:	strb	r2, [r5]
   20bbc:	b	20878 <crc32@@Base+0x6e20>
   20bc0:	mov	ip, r7
   20bc4:	ldr	r2, [ip, #4]
   20bc8:	strb	r2, [r5, #1]
   20bcc:	b	208ac <crc32@@Base+0x6e54>
   20bd0:	mov	ip, r7
   20bd4:	ldr	r2, [ip, #4]
   20bd8:	strh	r2, [r5, #2]
   20bdc:	b	208e0 <crc32@@Base+0x6e88>
   20be0:	sub	r2, r7, #44	; 0x2c
   20be4:	mov	r1, #44	; 0x2c
   20be8:	mov	r0, #64	; 0x40
   20bec:	str	r0, [r5, #32]
   20bf0:	mla	r4, r1, r4, r2
   20bf4:	add	r0, r5, #32
   20bf8:	mov	r2, r7
   20bfc:	b	20c04 <crc32@@Base+0x71ac>
   20c00:	ldr	r3, [r2, #44]!	; 0x2c
   20c04:	cmp	r3, #11
   20c08:	bne	20c24 <crc32@@Base+0x71cc>
   20c0c:	ldr	ip, [r2, #4]
   20c10:	add	r3, r5, r6, lsl #3
   20c14:	ldr	r1, [r2, #8]
   20c18:	add	r6, r6, #1
   20c1c:	str	ip, [r3, #64]	; 0x40
   20c20:	str	r1, [r3, #68]	; 0x44
   20c24:	cmp	r2, r4
   20c28:	bne	20c00 <crc32@@Base+0x71a8>
   20c2c:	mov	r1, #480	; 0x1e0
   20c30:	bl	1fa64 <crc32@@Base+0x600c>
   20c34:	add	r3, sp, #32
   20c38:	str	r3, [sp, #16]
   20c3c:	strb	r0, [r5, #511]	; 0x1ff
   20c40:	b	20908 <crc32@@Base+0x6eb0>
   20c44:	mov	ip, r1
   20c48:	ldr	r2, [ip, #4]
   20c4c:	strb	r2, [r5]
   20c50:	b	20a80 <crc32@@Base+0x7028>
   20c54:	ldr	r0, [r1, #4]
   20c58:	mov	r1, #47	; 0x2f
   20c5c:	bl	12710 <strrchr@plt>
   20c60:	movw	r1, #43668	; 0xaa94
   20c64:	movt	r1, #3
   20c68:	bl	12680 <strcmp@plt>
   20c6c:	cmp	r0, #0
   20c70:	ldreq	r3, [sp, #28]
   20c74:	streq	r3, [r5, #16]
   20c78:	b	20b80 <crc32@@Base+0x7128>
   20c7c:	mov	lr, r1
   20c80:	ldrh	r2, [lr, #6]
   20c84:	strb	r2, [r5, #25]
   20c88:	b	20ab4 <crc32@@Base+0x705c>
   20c8c:	mov	lr, r1
   20c90:	ldr	r2, [lr, #4]
   20c94:	strb	r2, [r5, #26]
   20c98:	b	20ae8 <crc32@@Base+0x7090>
   20c9c:	mov	lr, r1
   20ca0:	ldr	r2, [lr, #4]
   20ca4:	cmp	r2, #19200	; 0x4b00
   20ca8:	beq	20ddc <crc32@@Base+0x7384>
   20cac:	bls	20cfc <crc32@@Base+0x72a4>
   20cb0:	cmp	r2, #57600	; 0xe100
   20cb4:	moveq	r2, #6
   20cb8:	beq	20cdc <crc32@@Base+0x7284>
   20cbc:	mov	r0, #49664	; 0xc200
   20cc0:	movt	r0, #1
   20cc4:	cmp	r2, r0
   20cc8:	moveq	r2, #7
   20ccc:	beq	20cdc <crc32@@Base+0x7284>
   20cd0:	cmp	r2, #38400	; 0x9600
   20cd4:	beq	20dd4 <crc32@@Base+0x737c>
   20cd8:	mov	r2, #0
   20cdc:	strb	r2, [r5, #24]
   20ce0:	b	20b1c <crc32@@Base+0x70c4>
   20ce4:	mov	lr, r1
   20ce8:	ldr	r2, [lr, #4]
   20cec:	adds	r2, r2, #0
   20cf0:	movne	r2, #1
   20cf4:	strb	r2, [r5, #1]
   20cf8:	b	20b50 <crc32@@Base+0x70f8>
   20cfc:	cmp	r2, #4800	; 0x12c0
   20d00:	moveq	r2, #2
   20d04:	beq	20cdc <crc32@@Base+0x7284>
   20d08:	cmp	r2, #9600	; 0x2580
   20d0c:	moveq	r2, #3
   20d10:	beq	20cdc <crc32@@Base+0x7284>
   20d14:	cmp	r2, #2400	; 0x960
   20d18:	bne	20cd8 <crc32@@Base+0x7280>
   20d1c:	mov	r2, #1
   20d20:	b	20cdc <crc32@@Base+0x7284>
   20d24:	movw	r2, #65196	; 0xfeac
   20d28:	movt	r2, #4
   20d2c:	mov	r1, #4
   20d30:	ldr	r0, [r2]
   20d34:	movw	r2, #43588	; 0xaa44
   20d38:	str	r1, [sp]
   20d3c:	movt	r2, #3
   20d40:	mov	r1, #1
   20d44:	bl	122d8 <__fprintf_chk@plt>
   20d48:	mov	r3, #0
   20d4c:	b	2093c <crc32@@Base+0x6ee4>
   20d50:	movw	r4, #65196	; 0xfeac
   20d54:	movt	r4, #4
   20d58:	ldr	r3, [r4]
   20d5c:	mov	r2, #23
   20d60:	mov	r1, #1
   20d64:	movw	r0, #43564	; 0xaa2c
   20d68:	movt	r0, #3
   20d6c:	bl	1259c <fwrite@plt>
   20d70:	ldr	r0, [r7, #4]
   20d74:	bl	1214c <free@plt>
   20d78:	mov	r0, #1
   20d7c:	bl	12218 <exit@plt>
   20d80:	movw	r4, #65196	; 0xfeac
   20d84:	movt	r4, #4
   20d88:	movw	r0, #42800	; 0xa730
   20d8c:	mov	r2, #36	; 0x24
   20d90:	ldr	r3, [r4]
   20d94:	mov	r1, #1
   20d98:	movt	r0, #3
   20d9c:	bl	1259c <fwrite@plt>
   20da0:	b	20d58 <crc32@@Base+0x7300>
   20da4:	mov	fp, r6
   20da8:	mov	r9, #32
   20dac:	b	207f0 <crc32@@Base+0x6d98>
   20db0:	mov	r1, #32
   20db4:	bl	1fa64 <crc32@@Base+0x600c>
   20db8:	cmp	fp, #0
   20dbc:	strb	r0, [r5, #31]
   20dc0:	beq	20900 <crc32@@Base+0x6ea8>
   20dc4:	mov	r3, #64	; 0x40
   20dc8:	add	r0, r5, #32
   20dcc:	str	r3, [r5, #32]
   20dd0:	b	20c2c <crc32@@Base+0x71d4>
   20dd4:	mov	r2, #5
   20dd8:	b	20cdc <crc32@@Base+0x7284>
   20ddc:	mov	r2, #4
   20de0:	b	20cdc <crc32@@Base+0x7284>
   20de4:	movw	r4, #65196	; 0xfeac
   20de8:	movt	r4, #4
   20dec:	movw	r0, #43528	; 0xaa08
   20df0:	mov	r2, #33	; 0x21
   20df4:	ldr	r3, [r4]
   20df8:	mov	r1, #1
   20dfc:	movt	r0, #3
   20e00:	bl	1259c <fwrite@plt>
   20e04:	b	20d58 <crc32@@Base+0x7300>
   20e08:	movw	r4, #65196	; 0xfeac
   20e0c:	movt	r4, #4
   20e10:	mov	r1, fp
   20e14:	movw	r0, #43528	; 0xaa08
   20e18:	ldr	r3, [r4]
   20e1c:	mov	r2, #33	; 0x21
   20e20:	movt	r0, #3
   20e24:	bl	1259c <fwrite@plt>
   20e28:	b	20d58 <crc32@@Base+0x7300>
   20e2c:	movw	r3, #65196	; 0xfeac
   20e30:	movt	r3, #4
   20e34:	mov	r2, #23
   20e38:	mov	r1, #1
   20e3c:	ldr	r3, [r3]
   20e40:	movw	r0, #43392	; 0xa980
   20e44:	movt	r0, #3
   20e48:	bl	1259c <fwrite@plt>
   20e4c:	mov	r0, r4
   20e50:	bl	12620 <fclose@plt>
   20e54:	mov	r0, #1
   20e58:	bl	12218 <exit@plt>
   20e5c:	ldr	r3, [sp, #20]
   20e60:	movw	r1, #65196	; 0xfeac
   20e64:	movt	r1, #4
   20e68:	movw	r2, #43360	; 0xa960
   20e6c:	movt	r2, #3
   20e70:	ldr	r0, [r1]
   20e74:	mov	r1, #1
   20e78:	ldr	r3, [r3, #64]	; 0x40
   20e7c:	bl	122d8 <__fprintf_chk@plt>
   20e80:	mov	r0, #1
   20e84:	bl	12218 <exit@plt>
   20e88:	bl	124b8 <__stack_chk_fail@plt>
   20e8c:	ldr	r3, [sp, #20]
   20e90:	movw	r1, #65196	; 0xfeac
   20e94:	movt	r1, #4
   20e98:	movw	r2, #43628	; 0xaa6c
   20e9c:	movt	r2, #3
   20ea0:	ldr	ip, [r3, #76]	; 0x4c
   20ea4:	str	r0, [sp]
   20ea8:	ldr	r0, [r1]
   20eac:	mov	r1, #1
   20eb0:	ldr	r3, [r3, #80]	; 0x50
   20eb4:	str	ip, [sp, #4]
   20eb8:	bl	122d8 <__fprintf_chk@plt>
   20ebc:	mov	r0, #1
   20ec0:	bl	12218 <exit@plt>
   20ec4:	movw	r1, #65196	; 0xfeac
   20ec8:	movt	r1, #4
   20ecc:	movw	r2, #43416	; 0xa998
   20ed0:	mov	r3, fp
   20ed4:	ldr	r0, [r1]
   20ed8:	movt	r2, #3
   20edc:	mov	r1, #1
   20ee0:	bl	122d8 <__fprintf_chk@plt>
   20ee4:	ldr	r0, [r7, #4]
   20ee8:	bl	1214c <free@plt>
   20eec:	mov	r0, #1
   20ef0:	bl	12218 <exit@plt>
   20ef4:	push	{r4, r5, r6, lr}
   20ef8:	movw	r1, #43116	; 0xa86c
   20efc:	ldr	r5, [pc, #64]	; 20f44 <crc32@@Base+0x74ec>
   20f00:	movt	r1, #3
   20f04:	mov	r6, r0
   20f08:	mov	r4, #1
   20f0c:	b	20f20 <crc32@@Base+0x74c8>
   20f10:	add	r4, r4, #1
   20f14:	cmp	r4, #24
   20f18:	beq	20f38 <crc32@@Base+0x74e0>
   20f1c:	ldr	r1, [r5, #4]!
   20f20:	mov	r0, r6
   20f24:	bl	12680 <strcmp@plt>
   20f28:	cmp	r0, #0
   20f2c:	bne	20f10 <crc32@@Base+0x74b8>
   20f30:	mov	r0, r4
   20f34:	pop	{r4, r5, r6, pc}
   20f38:	mov	r4, #0
   20f3c:	mov	r0, r4
   20f40:	pop	{r4, r5, r6, pc}
   20f44:	andeq	sl, r3, ip, lsl #12
   20f48:	ldr	r2, [r0, #12]
   20f4c:	ldr	r3, [r0, #8]
   20f50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f54:	eor	r6, r3, r2
   20f58:	ldr	r3, [r0, #4]
   20f5c:	movw	lr, #42104	; 0xa478
   20f60:	ldr	sl, [r1]
   20f64:	movt	lr, #55146	; 0xd76a
   20f68:	and	r6, r6, r3
   20f6c:	ldr	r3, [r0]
   20f70:	add	lr, sl, lr
   20f74:	eor	r6, r6, r2
   20f78:	ldmib	r0, {r2, ip}
   20f7c:	add	lr, lr, r3
   20f80:	ldr	r3, [r1, #4]
   20f84:	add	r6, r6, lr
   20f88:	eor	r4, r2, ip
   20f8c:	movw	r5, #46934	; 0xb756
   20f90:	ldr	ip, [r0, #12]
   20f94:	movt	r5, #59591	; 0xe8c7
   20f98:	add	r5, r3, r5
   20f9c:	add	r6, r2, r6, ror #25
   20fa0:	add	r5, r5, ip
   20fa4:	ldr	ip, [r0, #8]
   20fa8:	and	r4, r4, r6
   20fac:	ldr	lr, [r1, #8]
   20fb0:	eor	r4, r4, ip
   20fb4:	movw	ip, #28891	; 0x70db
   20fb8:	add	r4, r4, r5
   20fbc:	movt	ip, #9248	; 0x2420
   20fc0:	add	ip, lr, ip
   20fc4:	eor	r2, r2, r6
   20fc8:	add	r5, r6, r4, ror #20
   20fcc:	ldr	r4, [r0, #8]
   20fd0:	and	r2, r2, r5
   20fd4:	sub	sp, sp, #52	; 0x34
   20fd8:	add	ip, ip, r4
   20fdc:	ldr	r4, [r0, #4]
   20fe0:	ldr	r8, [r1, #12]
   20fe4:	eor	r2, r2, r4
   20fe8:	str	r3, [sp, #4]
   20fec:	add	r2, r2, ip
   20ff0:	eor	r3, r6, r5
   20ff4:	movw	ip, #52974	; 0xceee
   20ff8:	movt	ip, #49597	; 0xc1bd
   20ffc:	add	r7, r5, r2, ror #15
   21000:	add	ip, r8, ip
   21004:	and	r3, r3, r7
   21008:	add	ip, ip, r4
   2100c:	eor	r3, r3, r6
   21010:	ldr	r9, [r1, #16]
   21014:	add	r3, r3, ip
   21018:	str	lr, [sp, #8]
   2101c:	movw	lr, #4015	; 0xfaf
   21020:	movt	lr, #62844	; 0xf57c
   21024:	add	r3, r7, r3, ror #10
   21028:	eor	r2, r5, r7
   2102c:	add	lr, r9, lr
   21030:	ldr	fp, [r1, #20]
   21034:	add	r6, lr, r6
   21038:	and	lr, r2, r3
   2103c:	eor	lr, lr, r5
   21040:	eor	ip, r7, r3
   21044:	add	lr, lr, r6
   21048:	movw	r4, #50730	; 0xc62a
   2104c:	movt	r4, #18311	; 0x4787
   21050:	ldr	r6, [r1, #24]
   21054:	add	lr, r3, lr, ror #25
   21058:	add	r4, fp, r4
   2105c:	and	r2, ip, lr
   21060:	add	r4, r4, r5
   21064:	eor	r2, r2, r7
   21068:	str	r8, [sp, #12]
   2106c:	add	r2, r2, r4
   21070:	movw	r8, #17939	; 0x4613
   21074:	movt	r8, #43056	; 0xa830
   21078:	eor	ip, r3, lr
   2107c:	add	r4, lr, r2, ror #20
   21080:	add	r8, r6, r8
   21084:	add	r2, r8, r7
   21088:	and	r8, ip, r4
   2108c:	eor	r8, r8, r3
   21090:	str	fp, [sp, #20]
   21094:	add	r8, r8, r2
   21098:	ldr	fp, [r1, #28]
   2109c:	movw	ip, #38145	; 0x9501
   210a0:	movt	ip, #64838	; 0xfd46
   210a4:	add	r8, r4, r8, ror #15
   210a8:	eor	r5, lr, r4
   210ac:	add	ip, fp, ip
   210b0:	ldr	r7, [r1, #32]
   210b4:	add	r3, ip, r3
   210b8:	and	ip, r5, r8
   210bc:	eor	ip, ip, lr
   210c0:	str	r6, [sp, #24]
   210c4:	add	ip, ip, r3
   210c8:	movw	r6, #39128	; 0x98d8
   210cc:	movt	r6, #27008	; 0x6980
   210d0:	eor	r2, r4, r8
   210d4:	add	ip, r8, ip, ror #10
   210d8:	add	r6, r7, r6
   210dc:	add	lr, r6, lr
   210e0:	and	r6, r2, ip
   210e4:	eor	r6, r6, r4
   210e8:	ldr	r2, [r1, #36]	; 0x24
   210ec:	add	r6, r6, lr
   210f0:	movw	r5, #63407	; 0xf7af
   210f4:	movt	r5, #35652	; 0x8b44
   210f8:	eor	r3, r8, ip
   210fc:	add	r6, ip, r6, ror #25
   21100:	add	r5, r2, r5
   21104:	str	r2, [sp, #32]
   21108:	add	r2, r5, r4
   2110c:	and	r5, r3, r6
   21110:	str	r7, [sp, #28]
   21114:	eor	r5, r5, r8
   21118:	ldr	r7, [r1, #40]	; 0x28
   2111c:	add	r5, r5, r2
   21120:	eor	r3, ip, r6
   21124:	sub	r2, r7, #41984	; 0xa400
   21128:	ldr	r4, [r1, #44]	; 0x2c
   2112c:	add	r5, r6, r5, ror #20
   21130:	sub	r2, r2, #79	; 0x4f
   21134:	add	r8, r2, r8
   21138:	and	r2, r3, r5
   2113c:	eor	r2, r2, ip
   21140:	movw	r3, #55230	; 0xd7be
   21144:	add	r2, r2, r8
   21148:	movt	r3, #35164	; 0x895c
   2114c:	eor	lr, r6, r5
   21150:	add	r3, r4, r3
   21154:	add	r2, r5, r2, ror #15
   21158:	add	ip, r3, ip
   2115c:	and	r3, lr, r2
   21160:	str	sl, [sp, #44]	; 0x2c
   21164:	eor	r3, r3, r6
   21168:	str	r9, [sp, #16]
   2116c:	add	r3, r3, ip
   21170:	str	r4, [sp, #36]	; 0x24
   21174:	ldr	r8, [r1, #48]	; 0x30
   21178:	movw	lr, #4386	; 0x1122
   2117c:	movt	lr, #27536	; 0x6b90
   21180:	add	r3, r2, r3, ror #10
   21184:	eor	r4, r5, r2
   21188:	add	lr, r8, lr
   2118c:	add	r6, lr, r6
   21190:	and	lr, r4, r3
   21194:	eor	lr, lr, r5
   21198:	ldr	r9, [r1, #52]	; 0x34
   2119c:	add	lr, lr, r6
   211a0:	movw	r4, #29075	; 0x7193
   211a4:	movt	r4, #64920	; 0xfd98
   211a8:	eor	ip, r2, r3
   211ac:	add	lr, r3, lr, ror #25
   211b0:	add	r4, r9, r4
   211b4:	add	r5, r4, r5
   211b8:	and	r4, ip, lr
   211bc:	eor	r4, r4, r2
   211c0:	str	r9, [sp, #40]	; 0x28
   211c4:	add	r4, r4, r5
   211c8:	ldr	r9, [r1, #56]	; 0x38
   211cc:	eor	r5, r3, lr
   211d0:	movw	ip, #17294	; 0x438e
   211d4:	add	r4, lr, r4, ror #20
   211d8:	movt	ip, #42617	; 0xa679
   211dc:	ldr	r6, [r1, #60]	; 0x3c
   211e0:	add	ip, r9, ip
   211e4:	and	r1, r5, r4
   211e8:	add	r2, ip, r2
   211ec:	eor	r1, r1, r3
   211f0:	movw	ip, #2081	; 0x821
   211f4:	add	r1, r1, r2
   211f8:	movt	ip, #18868	; 0x49b4
   211fc:	eor	r5, lr, r4
   21200:	add	ip, r6, ip
   21204:	add	r1, r4, r1, ror #15
   21208:	add	r3, ip, r3
   2120c:	and	ip, r5, r1
   21210:	ldr	r2, [sp, #4]
   21214:	eor	ip, ip, lr
   21218:	movw	sl, #9570	; 0x2562
   2121c:	add	ip, ip, r3
   21220:	movt	sl, #63006	; 0xf61e
   21224:	ldr	r5, [sp, #24]
   21228:	add	sl, r2, sl
   2122c:	add	ip, r1, ip, ror #10
   21230:	add	lr, sl, lr
   21234:	movw	sl, #45888	; 0xb340
   21238:	movt	sl, #49216	; 0xc040
   2123c:	eor	r3, r1, ip
   21240:	add	sl, r5, sl
   21244:	add	sl, sl, r4
   21248:	and	r4, r4, r3
   2124c:	eor	r4, r4, r1
   21250:	ldr	r5, [sp, #44]	; 0x2c
   21254:	add	lr, r4, lr
   21258:	ldr	r4, [sp, #36]	; 0x24
   2125c:	movw	r3, #23121	; 0x5a51
   21260:	movt	r3, #9822	; 0x265e
   21264:	add	lr, ip, lr, ror #27
   21268:	add	r3, r4, r3
   2126c:	eor	r2, ip, lr
   21270:	movw	r4, #51114	; 0xc7aa
   21274:	and	r2, r2, r1
   21278:	movt	r4, #59830	; 0xe9b6
   2127c:	eor	r2, r2, ip
   21280:	add	r4, r5, r4
   21284:	add	r2, r2, sl
   21288:	add	r5, r4, ip
   2128c:	ldr	r4, [sp, #20]
   21290:	add	r3, r3, r1
   21294:	add	r2, lr, r2, ror #23
   21298:	movw	r1, #4189	; 0x105d
   2129c:	movt	r1, #54831	; 0xd62f
   212a0:	movw	sl, #5203	; 0x1453
   212a4:	add	r1, r4, r1
   212a8:	eor	r4, lr, r2
   212ac:	and	ip, ip, r4
   212b0:	movt	sl, #580	; 0x244
   212b4:	eor	ip, ip, lr
   212b8:	add	sl, r7, sl
   212bc:	add	r3, ip, r3
   212c0:	add	sl, sl, r2
   212c4:	add	r1, r1, lr
   212c8:	add	r3, r2, r3, ror #18
   212cc:	eor	r4, r2, r3
   212d0:	and	r4, r4, lr
   212d4:	movw	lr, #59009	; 0xe681
   212d8:	eor	r4, r4, r2
   212dc:	movt	lr, #55457	; 0xd8a1
   212e0:	add	r4, r4, r5
   212e4:	movw	r5, #64456	; 0xfbc8
   212e8:	movt	r5, #59347	; 0xe7d3
   212ec:	add	lr, r6, lr
   212f0:	add	r4, r3, r4, ror #12
   212f4:	add	lr, lr, r3
   212f8:	eor	ip, r3, r4
   212fc:	and	r2, r2, ip
   21300:	ldr	ip, [sp, #16]
   21304:	eor	r2, r2, r3
   21308:	add	r1, r2, r1
   2130c:	add	r5, ip, r5
   21310:	ldr	r2, [sp, #32]
   21314:	add	r5, r5, r4
   21318:	add	r1, r4, r1, ror #27
   2131c:	eor	ip, r4, r1
   21320:	and	ip, ip, r3
   21324:	movw	r3, #52710	; 0xcde6
   21328:	eor	ip, ip, r4
   2132c:	movt	r3, #8673	; 0x21e1
   21330:	add	ip, ip, sl
   21334:	add	r3, r2, r3
   21338:	add	r3, r3, r1
   2133c:	movw	sl, #2006	; 0x7d6
   21340:	add	ip, r1, ip, ror #23
   21344:	movt	sl, #49975	; 0xc337
   21348:	eor	r2, r1, ip
   2134c:	add	sl, r9, sl
   21350:	and	r4, r4, r2
   21354:	add	sl, sl, ip
   21358:	eor	r4, r4, r1
   2135c:	add	lr, r4, lr
   21360:	ldr	r4, [sp, #12]
   21364:	add	lr, ip, lr, ror #18
   21368:	eor	r2, ip, lr
   2136c:	and	r2, r2, r1
   21370:	movw	r1, #3463	; 0xd87
   21374:	eor	r2, r2, ip
   21378:	movt	r1, #62677	; 0xf4d5
   2137c:	add	r2, r2, r5
   21380:	add	r1, r4, r1
   21384:	movw	r5, #5357	; 0x14ed
   21388:	movt	r5, #17754	; 0x455a
   2138c:	add	r2, lr, r2, ror #12
   21390:	add	r1, r1, lr
   21394:	eor	r4, lr, r2
   21398:	and	ip, ip, r4
   2139c:	eor	ip, ip, lr
   213a0:	add	r3, ip, r3
   213a4:	ldr	ip, [sp, #28]
   213a8:	add	r3, r2, r3, ror #27
   213ac:	add	r5, ip, r5
   213b0:	eor	r4, r2, r3
   213b4:	add	r5, r5, r2
   213b8:	and	r4, r4, lr
   213bc:	movw	lr, #59653	; 0xe905
   213c0:	eor	r4, r4, r2
   213c4:	movt	lr, #43491	; 0xa9e3
   213c8:	add	r4, r4, sl
   213cc:	ldr	sl, [sp, #40]	; 0x28
   213d0:	add	r4, r3, r4, ror #23
   213d4:	add	lr, sl, lr
   213d8:	eor	ip, r3, r4
   213dc:	movw	sl, #41976	; 0xa3f8
   213e0:	and	r2, r2, ip
   213e4:	ldr	ip, [sp, #8]
   213e8:	eor	r2, r2, r3
   213ec:	movt	sl, #64751	; 0xfcef
   213f0:	add	r1, r2, r1
   213f4:	add	sl, ip, sl
   213f8:	movw	r2, #729	; 0x2d9
   213fc:	movt	r2, #26479	; 0x676f
   21400:	add	r1, r4, r1, ror #18
   21404:	add	r2, fp, r2
   21408:	eor	ip, r4, r1
   2140c:	add	lr, lr, r3
   21410:	and	ip, ip, r3
   21414:	add	r3, r2, r1
   21418:	eor	ip, ip, r4
   2141c:	add	sl, sl, r4
   21420:	add	ip, ip, r5
   21424:	movw	r5, #19594	; 0x4c8a
   21428:	movt	r5, #36138	; 0x8d2a
   2142c:	add	ip, r1, ip, ror #12
   21430:	add	r5, r8, r5
   21434:	eor	r2, r1, ip
   21438:	add	r5, r5, ip
   2143c:	and	r4, r4, r2
   21440:	eor	r4, r4, r1
   21444:	add	lr, r4, lr
   21448:	movw	r4, #14658	; 0x3942
   2144c:	movt	r4, #65530	; 0xfffa
   21450:	add	lr, ip, lr, ror #27
   21454:	eor	r2, ip, lr
   21458:	and	r1, r1, r2
   2145c:	eor	r1, r1, ip
   21460:	add	sl, r1, sl
   21464:	ldr	r1, [sp, #20]
   21468:	add	sl, lr, sl, ror #23
   2146c:	add	r4, r1, r4
   21470:	eor	r2, lr, sl
   21474:	ldr	r1, [sp, #28]
   21478:	and	r2, r2, ip
   2147c:	movw	ip, #63105	; 0xf681
   21480:	eor	r2, r2, lr
   21484:	movt	ip, #34673	; 0x8771
   21488:	add	r2, r2, r3
   2148c:	add	ip, r1, ip
   21490:	add	r4, r4, lr
   21494:	add	ip, ip, sl
   21498:	add	r2, sl, r2, ror #18
   2149c:	eor	r1, sl, r2
   214a0:	and	r3, r1, lr
   214a4:	movw	lr, #24866	; 0x6122
   214a8:	eor	r3, r3, sl
   214ac:	ldr	sl, [sp, #36]	; 0x24
   214b0:	add	r3, r3, r5
   214b4:	movt	lr, #28061	; 0x6d9d
   214b8:	add	lr, sl, lr
   214bc:	movw	r5, #14348	; 0x380c
   214c0:	add	r3, r2, r3, ror #12
   214c4:	add	lr, lr, r2
   214c8:	eor	r1, r1, r3
   214cc:	eor	r2, r2, r3
   214d0:	add	r1, r1, r4
   214d4:	movt	r5, #64997	; 0xfde5
   214d8:	add	r5, r9, r5
   214dc:	movw	r4, #59972	; 0xea44
   214e0:	add	r1, r3, r1, ror #28
   214e4:	add	r5, r5, r3
   214e8:	eor	r2, r2, r1
   214ec:	eor	r3, r3, r1
   214f0:	add	r2, r2, ip
   214f4:	ldr	ip, [sp, #4]
   214f8:	movt	r4, #42174	; 0xa4be
   214fc:	ldr	sl, [sp, #44]	; 0x2c
   21500:	add	r2, r1, r2, ror #21
   21504:	add	r4, ip, r4
   21508:	eor	r3, r3, r2
   2150c:	add	r4, r4, r1
   21510:	add	r3, r3, lr
   21514:	eor	r1, r1, r2
   21518:	ldr	lr, [sp, #16]
   2151c:	movw	ip, #53161	; 0xcfa9
   21520:	add	r3, r2, r3, ror #16
   21524:	movt	ip, #19422	; 0x4bde
   21528:	eor	r1, r1, r3
   2152c:	add	ip, lr, ip
   21530:	add	r1, r1, r5
   21534:	add	ip, ip, r2
   21538:	eor	r2, r2, r3
   2153c:	movw	lr, #19296	; 0x4b60
   21540:	add	r1, r3, r1, ror #9
   21544:	movt	lr, #63163	; 0xf6bb
   21548:	eor	r2, r2, r1
   2154c:	add	lr, fp, lr
   21550:	add	r2, r2, r4
   21554:	add	lr, lr, r3
   21558:	eor	r3, r3, r1
   2155c:	movw	r5, #48240	; 0xbc70
   21560:	add	r2, r1, r2, ror #28
   21564:	movt	r5, #48831	; 0xbebf
   21568:	eor	r3, r3, r2
   2156c:	add	r5, r7, r5
   21570:	add	r3, r3, ip
   21574:	add	r5, r5, r1
   21578:	eor	r1, r1, r2
   2157c:	ldr	ip, [sp, #40]	; 0x28
   21580:	add	r3, r2, r3, ror #21
   21584:	movw	r4, #32454	; 0x7ec6
   21588:	eor	r1, r1, r3
   2158c:	movt	r4, #10395	; 0x289b
   21590:	add	r1, r1, lr
   21594:	add	r4, ip, r4
   21598:	add	r4, r4, r2
   2159c:	eor	r2, r2, r3
   215a0:	add	r1, r3, r1, ror #16
   215a4:	movw	ip, #10234	; 0x27fa
   215a8:	eor	r2, r2, r1
   215ac:	movt	ip, #60065	; 0xeaa1
   215b0:	add	r2, r2, r5
   215b4:	add	ip, sl, ip
   215b8:	add	ip, ip, r3
   215bc:	eor	r3, r3, r1
   215c0:	add	r2, r1, r2, ror #9
   215c4:	ldr	r5, [sp, #12]
   215c8:	eor	r3, r3, r2
   215cc:	movw	lr, #12421	; 0x3085
   215d0:	add	r3, r3, r4
   215d4:	movt	lr, #54511	; 0xd4ef
   215d8:	add	lr, r5, lr
   215dc:	ldr	r4, [sp, #24]
   215e0:	add	r3, r2, r3, ror #28
   215e4:	add	lr, lr, r1
   215e8:	eor	r1, r1, r2
   215ec:	movw	r5, #7429	; 0x1d05
   215f0:	eor	r1, r1, r3
   215f4:	movt	r5, #1160	; 0x488
   215f8:	add	r1, r1, ip
   215fc:	add	r5, r4, r5
   21600:	add	r5, r5, r2
   21604:	eor	r2, r2, r3
   21608:	add	r1, r3, r1, ror #21
   2160c:	ldr	ip, [sp, #32]
   21610:	eor	r2, r2, r1
   21614:	movw	r4, #53305	; 0xd039
   21618:	add	r2, r2, lr
   2161c:	movt	r4, #55764	; 0xd9d4
   21620:	add	r4, ip, r4
   21624:	movw	ip, #39397	; 0x99e5
   21628:	add	r2, r1, r2, ror #16
   2162c:	add	r4, r4, r3
   21630:	eor	r3, r3, r1
   21634:	movt	ip, #59099	; 0xe6db
   21638:	eor	r3, r3, r2
   2163c:	add	ip, r8, ip
   21640:	add	r3, r3, r5
   21644:	add	ip, ip, r1
   21648:	eor	r1, r1, r2
   2164c:	movw	lr, #31992	; 0x7cf8
   21650:	add	r3, r2, r3, ror #9
   21654:	movt	lr, #8098	; 0x1fa2
   21658:	eor	r1, r1, r3
   2165c:	add	lr, r6, lr
   21660:	add	r1, r1, r4
   21664:	add	lr, lr, r2
   21668:	eor	r2, r2, r3
   2166c:	ldr	r4, [sp, #8]
   21670:	add	r1, r3, r1, ror #28
   21674:	movw	r5, #22117	; 0x5665
   21678:	eor	r2, r2, r1
   2167c:	movt	r5, #50348	; 0xc4ac
   21680:	add	r2, r2, ip
   21684:	add	r5, r4, r5
   21688:	add	r5, r5, r3
   2168c:	eor	r3, r3, r1
   21690:	add	r2, r1, r2, ror #21
   21694:	movw	r4, #8772	; 0x2244
   21698:	eor	r3, r3, r2
   2169c:	movt	r4, #62505	; 0xf429
   216a0:	add	r3, r3, lr
   216a4:	add	r4, sl, r4
   216a8:	add	r4, r4, r1
   216ac:	eor	r1, r1, r2
   216b0:	add	r3, r2, r3, ror #16
   216b4:	mvn	ip, r2
   216b8:	eor	r1, r1, r3
   216bc:	movw	sl, #65431	; 0xff97
   216c0:	add	r1, r1, r5
   216c4:	movt	sl, #17194	; 0x432a
   216c8:	ldr	r5, [sp, #20]
   216cc:	add	sl, fp, sl
   216d0:	add	r1, r3, r1, ror #9
   216d4:	add	r2, sl, r2
   216d8:	orr	ip, ip, r1
   216dc:	movw	sl, #41017	; 0xa039
   216e0:	eor	ip, ip, r3
   216e4:	movt	sl, #64659	; 0xfc93
   216e8:	add	ip, ip, r4
   216ec:	mvn	fp, r3
   216f0:	add	sl, r5, sl
   216f4:	movw	lr, #9127	; 0x23a7
   216f8:	add	ip, r1, ip, ror #26
   216fc:	movt	lr, #43924	; 0xab94
   21700:	orr	fp, fp, ip
   21704:	add	lr, r9, lr
   21708:	add	sl, sl, r1
   2170c:	mvn	r9, r1
   21710:	eor	r1, r1, fp
   21714:	movw	r5, #22979	; 0x59c3
   21718:	add	r2, r1, r2
   2171c:	movt	r5, #25947	; 0x655b
   21720:	add	r5, r8, r5
   21724:	add	lr, lr, r3
   21728:	add	r2, ip, r2, ror #22
   2172c:	add	r5, r5, ip
   21730:	orr	r9, r9, r2
   21734:	mvn	r3, ip
   21738:	eor	ip, ip, r9
   2173c:	ldr	r1, [sp, #12]
   21740:	add	lr, ip, lr
   21744:	movw	r8, #52370	; 0xcc92
   21748:	movt	r8, #36620	; 0x8f0c
   2174c:	mvn	fp, r2
   21750:	add	lr, r2, lr, ror #17
   21754:	add	r8, r1, r8
   21758:	orr	r3, r3, lr
   2175c:	add	r8, r8, r2
   21760:	eor	r2, r2, r3
   21764:	movw	r4, #62589	; 0xf47d
   21768:	add	sl, r2, sl
   2176c:	movt	r4, #65519	; 0xffef
   21770:	add	r4, r7, r4
   21774:	mvn	r7, lr
   21778:	add	sl, lr, sl, ror #11
   2177c:	add	r4, r4, lr
   21780:	orr	fp, fp, sl
   21784:	ldr	r3, [sp, #4]
   21788:	eor	lr, lr, fp
   2178c:	ldr	r1, [sp, #28]
   21790:	add	lr, lr, r5
   21794:	movw	ip, #24017	; 0x5dd1
   21798:	movw	r9, #32335	; 0x7e4f
   2179c:	movt	ip, #34180	; 0x8584
   217a0:	add	lr, sl, lr, ror #26
   217a4:	movt	r9, #28584	; 0x6fa8
   217a8:	orr	r7, r7, lr
   217ac:	add	ip, r3, ip
   217b0:	eor	r7, r7, sl
   217b4:	mvn	r3, sl
   217b8:	add	r7, r7, r8
   217bc:	add	r9, r1, r9
   217c0:	add	r9, r9, lr
   217c4:	mvn	r2, lr
   217c8:	add	r7, lr, r7, ror #22
   217cc:	movw	r1, #59104	; 0xe6e0
   217d0:	orr	r3, r3, r7
   217d4:	movt	r1, #65068	; 0xfe2c
   217d8:	eor	lr, lr, r3
   217dc:	add	r1, r6, r1
   217e0:	add	r4, lr, r4
   217e4:	add	ip, ip, sl
   217e8:	add	r1, r1, r7
   217ec:	mvn	sl, r7
   217f0:	add	r4, r7, r4, ror #17
   217f4:	ldr	r5, [sp, #24]
   217f8:	orr	r2, r2, r4
   217fc:	ldr	r3, [sp, #40]	; 0x28
   21800:	eor	r7, r7, r2
   21804:	movw	r6, #17172	; 0x4314
   21808:	add	r7, r7, ip
   2180c:	movt	r6, #41729	; 0xa301
   21810:	add	r6, r5, r6
   21814:	movw	r5, #4513	; 0x11a1
   21818:	add	r7, r4, r7, ror #11
   2181c:	movt	r5, #19976	; 0x4e08
   21820:	orr	sl, sl, r7
   21824:	add	r5, r3, r5
   21828:	eor	sl, sl, r4
   2182c:	mvn	r3, r4
   21830:	add	sl, sl, r9
   21834:	add	r5, r5, r7
   21838:	mvn	r8, r7
   2183c:	ldr	r2, [sp, #16]
   21840:	add	sl, r7, sl, ror #26
   21844:	add	r6, r6, r4
   21848:	orr	r3, r3, sl
   2184c:	ldr	r4, [sp, #8]
   21850:	eor	r7, r7, r3
   21854:	movw	fp, #32386	; 0x7e82
   21858:	add	r1, r7, r1
   2185c:	movt	fp, #63315	; 0xf753
   21860:	add	fp, r2, fp
   21864:	movw	r2, #53947	; 0xd2bb
   21868:	add	r1, sl, r1, ror #22
   2186c:	movt	r2, #10967	; 0x2ad7
   21870:	orr	r8, r8, r1
   21874:	add	r2, r4, r2
   21878:	add	fp, fp, sl
   2187c:	mvn	r4, sl
   21880:	eor	sl, sl, r8
   21884:	ldr	r3, [sp, #32]
   21888:	add	r6, sl, r6
   2188c:	ldr	r9, [sp, #36]	; 0x24
   21890:	movw	ip, #54161	; 0xd391
   21894:	movt	ip, #60294	; 0xeb86
   21898:	add	r6, r1, r6, ror #17
   2189c:	add	ip, r3, ip
   218a0:	orr	r4, r4, r6
   218a4:	mvn	r3, r1
   218a8:	eor	r4, r4, r1
   218ac:	movw	lr, #62005	; 0xf235
   218b0:	add	r5, r4, r5
   218b4:	movt	lr, #48442	; 0xbd3a
   218b8:	add	lr, r9, lr
   218bc:	add	r2, r2, r6
   218c0:	add	r5, r6, r5, ror #11
   218c4:	mvn	r9, r6
   218c8:	orr	r3, r3, r5
   218cc:	add	lr, lr, r1
   218d0:	eor	r6, r6, r3
   218d4:	add	ip, ip, r5
   218d8:	add	fp, r6, fp
   218dc:	mvn	r7, r5
   218e0:	ldr	r3, [r0]
   218e4:	add	fp, r5, fp, ror #26
   218e8:	ldr	r1, [r0, #12]
   218ec:	orr	r9, r9, fp
   218f0:	add	r6, r3, fp
   218f4:	eor	r5, r5, r9
   218f8:	mvn	r3, fp
   218fc:	add	lr, r5, lr
   21900:	str	r6, [r0]
   21904:	add	lr, fp, lr, ror #22
   21908:	orr	r7, r7, lr
   2190c:	add	r1, r1, lr
   21910:	eor	fp, fp, r7
   21914:	str	r1, [r0, #12]
   21918:	add	r2, fp, r2
   2191c:	add	r2, lr, r2, ror #17
   21920:	orr	r1, r3, r2
   21924:	ldr	r3, [r0, #4]
   21928:	eor	lr, lr, r1
   2192c:	ldr	r1, [r0, #8]
   21930:	add	ip, lr, ip
   21934:	add	r3, r3, r2
   21938:	add	r2, r1, r2
   2193c:	str	r2, [r0, #8]
   21940:	add	lr, r3, ip, ror #11
   21944:	str	lr, [r0, #4]
   21948:	add	sp, sp, #52	; 0x34
   2194c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21950:	ldr	r3, [r1, #16]
   21954:	push	{r4, r5, r6, lr}
   21958:	ubfx	r3, r3, #3, #6
   2195c:	rsb	r2, r3, #63	; 0x3f
   21960:	add	r5, r1, #24
   21964:	cmp	r2, #7
   21968:	mov	r6, r0
   2196c:	add	r0, r5, r3
   21970:	mov	r4, r1
   21974:	add	r0, r0, #1
   21978:	mvn	r1, #127	; 0x7f
   2197c:	strb	r1, [r5, r3]
   21980:	bhi	219e4 <crc32@@Base+0x7f8c>
   21984:	mov	r1, #0
   21988:	bl	12308 <memset@plt>
   2198c:	mov	r1, r5
   21990:	mov	r0, r4
   21994:	bl	20f48 <crc32@@Base+0x74f0>
   21998:	mov	r2, #56	; 0x38
   2199c:	mov	r1, #0
   219a0:	mov	r0, r5
   219a4:	bl	12308 <memset@plt>
   219a8:	ldr	r2, [r4, #16]
   219ac:	mov	r1, r5
   219b0:	ldr	r3, [r4, #20]
   219b4:	mov	r0, r4
   219b8:	strd	r2, [r4, #80]	; 0x50
   219bc:	bl	20f48 <crc32@@Base+0x74f0>
   219c0:	mov	r1, r4
   219c4:	mov	r0, r6
   219c8:	mov	r2, #16
   219cc:	bl	123a4 <memmove@plt>
   219d0:	mov	r0, r4
   219d4:	mov	r2, #88	; 0x58
   219d8:	mov	r1, #0
   219dc:	pop	{r4, r5, r6, lr}
   219e0:	b	12308 <memset@plt>
   219e4:	rsb	r2, r3, #55	; 0x37
   219e8:	mov	r1, #0
   219ec:	bl	12308 <memset@plt>
   219f0:	b	219a8 <crc32@@Base+0x7f50>
   219f4:	ldr	r3, [r0, #20]
   219f8:	cmp	r2, #63	; 0x3f
   219fc:	push	{r4, r5, r6, r7, r8, lr}
   21a00:	mov	r8, r2
   21a04:	add	r3, r3, r8, lsr #29
   21a08:	lsl	r2, r2, #3
   21a0c:	mov	r4, r1
   21a10:	strd	r2, [r0, #16]
   21a14:	add	r5, r0, #24
   21a18:	bls	21a5c <crc32@@Base+0x8004>
   21a1c:	sub	r6, r8, #64	; 0x40
   21a20:	mov	r7, r0
   21a24:	bic	r6, r6, #63	; 0x3f
   21a28:	add	r6, r6, #64	; 0x40
   21a2c:	add	r6, r1, r6
   21a30:	mov	r2, #64	; 0x40
   21a34:	mov	r1, r4
   21a38:	mov	r0, r5
   21a3c:	add	r4, r4, r2
   21a40:	bl	123a4 <memmove@plt>
   21a44:	mov	r1, r5
   21a48:	mov	r0, r7
   21a4c:	bl	20f48 <crc32@@Base+0x74f0>
   21a50:	cmp	r6, r4
   21a54:	bne	21a30 <crc32@@Base+0x7fd8>
   21a58:	and	r8, r8, #63	; 0x3f
   21a5c:	mov	r2, r8
   21a60:	mov	r1, r4
   21a64:	mov	r0, r5
   21a68:	pop	{r4, r5, r6, r7, r8, lr}
   21a6c:	b	123a4 <memmove@plt>
   21a70:	push	{r4, r5, lr}
   21a74:	movw	r4, #61168	; 0xeef0
   21a78:	movt	r4, #4
   21a7c:	sub	sp, sp, #100	; 0x64
   21a80:	mov	r5, r2
   21a84:	mov	r2, r1
   21a88:	ldr	r3, [r4]
   21a8c:	mov	r1, r0
   21a90:	add	r0, sp, #4
   21a94:	movw	ip, #8961	; 0x2301
   21a98:	movt	ip, #26437	; 0x6745
   21a9c:	str	ip, [sp, #4]
   21aa0:	str	r3, [sp, #92]	; 0x5c
   21aa4:	movw	r3, #43913	; 0xab89
   21aa8:	movt	r3, #61389	; 0xefcd
   21aac:	str	r3, [sp, #8]
   21ab0:	movw	r3, #56574	; 0xdcfe
   21ab4:	movt	r3, #39098	; 0x98ba
   21ab8:	str	r3, [sp, #12]
   21abc:	movw	r3, #21622	; 0x5476
   21ac0:	movt	r3, #4146	; 0x1032
   21ac4:	str	r3, [sp, #16]
   21ac8:	mov	r3, #0
   21acc:	str	r3, [sp, #20]
   21ad0:	str	r3, [sp, #24]
   21ad4:	bl	219f4 <crc32@@Base+0x7f9c>
   21ad8:	add	r1, sp, #4
   21adc:	mov	r0, r5
   21ae0:	bl	21950 <crc32@@Base+0x7ef8>
   21ae4:	ldr	r2, [sp, #92]	; 0x5c
   21ae8:	ldr	r3, [r4]
   21aec:	cmp	r2, r3
   21af0:	bne	21afc <crc32@@Base+0x80a4>
   21af4:	add	sp, sp, #100	; 0x64
   21af8:	pop	{r4, r5, pc}
   21afc:	bl	124b8 <__stack_chk_fail@plt>
   21b00:	push	{r4, r5, lr}
   21b04:	movw	r4, #61168	; 0xeef0
   21b08:	movt	r4, #4
   21b0c:	sub	sp, sp, #100	; 0x64
   21b10:	mov	r5, r2
   21b14:	mov	r2, r1
   21b18:	ldr	r3, [r4]
   21b1c:	mov	r1, r0
   21b20:	add	r0, sp, #4
   21b24:	movw	ip, #8961	; 0x2301
   21b28:	movt	ip, #26437	; 0x6745
   21b2c:	str	ip, [sp, #4]
   21b30:	str	r3, [sp, #92]	; 0x5c
   21b34:	movw	r3, #43913	; 0xab89
   21b38:	movt	r3, #61389	; 0xefcd
   21b3c:	str	r3, [sp, #8]
   21b40:	movw	r3, #56574	; 0xdcfe
   21b44:	movt	r3, #39098	; 0x98ba
   21b48:	str	r3, [sp, #12]
   21b4c:	movw	r3, #21622	; 0x5476
   21b50:	movt	r3, #4146	; 0x1032
   21b54:	str	r3, [sp, #16]
   21b58:	mov	r3, #0
   21b5c:	str	r3, [sp, #20]
   21b60:	str	r3, [sp, #24]
   21b64:	bl	219f4 <crc32@@Base+0x7f9c>
   21b68:	add	r1, sp, #4
   21b6c:	mov	r0, r5
   21b70:	bl	21950 <crc32@@Base+0x7ef8>
   21b74:	ldr	r2, [sp, #92]	; 0x5c
   21b78:	ldr	r3, [r4]
   21b7c:	cmp	r2, r3
   21b80:	bne	21b8c <crc32@@Base+0x8134>
   21b84:	add	sp, sp, #100	; 0x64
   21b88:	pop	{r4, r5, pc}
   21b8c:	bl	124b8 <__stack_chk_fail@plt>
   21b90:	subs	r0, r0, #21
   21b94:	movne	r0, #1
   21b98:	bx	lr
   21b9c:	sub	r1, r1, #1
   21ba0:	ldr	r2, [r0]
   21ba4:	add	r3, r1, #2032	; 0x7f0
   21ba8:	cmp	r1, #0
   21bac:	add	r3, r3, #15
   21bb0:	movlt	r1, r3
   21bb4:	cmp	r2, #150	; 0x96
   21bb8:	asr	r1, r1, #11
   21bbc:	bne	21c6c <crc32@@Base+0x8214>
   21bc0:	ldr	r3, [r0, #4]
   21bc4:	cmp	r3, #105	; 0x69
   21bc8:	bne	21c6c <crc32@@Base+0x8214>
   21bcc:	ldr	r3, [r0, #8]
   21bd0:	cmp	r3, #150	; 0x96
   21bd4:	bne	21c6c <crc32@@Base+0x8214>
   21bd8:	ldr	r3, [r0, #12]
   21bdc:	cmp	r3, #105	; 0x69
   21be0:	bne	21c6c <crc32@@Base+0x8214>
   21be4:	ldr	r3, [r0, #16]
   21be8:	uxtb	r2, r1
   21bec:	cmp	r3, r2
   21bf0:	bne	21c6c <crc32@@Base+0x8214>
   21bf4:	mvn	r1, r1
   21bf8:	ldr	r2, [r0, #20]
   21bfc:	uxtb	r1, r1
   21c00:	cmp	r2, r1
   21c04:	bne	21c6c <crc32@@Base+0x8214>
   21c08:	ldr	r1, [r0, #24]
   21c0c:	cmp	r3, r1
   21c10:	bne	21c6c <crc32@@Base+0x8214>
   21c14:	ldr	r1, [r0, #28]
   21c18:	cmp	r2, r1
   21c1c:	bne	21c6c <crc32@@Base+0x8214>
   21c20:	ldr	r1, [r0, #32]
   21c24:	cmp	r3, r1
   21c28:	bne	21c6c <crc32@@Base+0x8214>
   21c2c:	ldr	r1, [r0, #36]	; 0x24
   21c30:	cmp	r2, r1
   21c34:	bne	21c6c <crc32@@Base+0x8214>
   21c38:	ldr	r1, [r0, #40]	; 0x28
   21c3c:	cmp	r3, r1
   21c40:	bne	21c6c <crc32@@Base+0x8214>
   21c44:	ldr	r3, [r0, #44]	; 0x2c
   21c48:	cmp	r2, r3
   21c4c:	bne	21c6c <crc32@@Base+0x8214>
   21c50:	ldr	r3, [r0, #48]	; 0x30
   21c54:	cmp	r3, #170	; 0xaa
   21c58:	bne	21c6c <crc32@@Base+0x8214>
   21c5c:	ldr	r0, [r0, #512]	; 0x200
   21c60:	subs	r0, r0, #170	; 0xaa
   21c64:	mvnne	r0, #0
   21c68:	bx	lr
   21c6c:	mvn	r0, #0
   21c70:	bx	lr
   21c74:	ldr	r3, [r1, #44]	; 0x2c
   21c78:	mov	r1, #0
   21c7c:	push	{r4, r5, r6, lr}
   21c80:	movw	r4, #2047	; 0x7ff
   21c84:	add	r3, r4, r3
   21c88:	mov	r2, #2048	; 0x800
   21c8c:	add	r4, r3, r4
   21c90:	cmp	r3, r1
   21c94:	mov	r5, r0
   21c98:	movlt	r3, r4
   21c9c:	asr	r4, r3, #11
   21ca0:	bl	12308 <memset@plt>
   21ca4:	mov	ip, #150	; 0x96
   21ca8:	mov	r0, #105	; 0x69
   21cac:	mvn	r2, r4
   21cb0:	uxtb	r3, r4
   21cb4:	uxtb	r2, r2
   21cb8:	mov	r1, #170	; 0xaa
   21cbc:	str	r3, [r5, #40]	; 0x28
   21cc0:	str	r2, [r5, #44]	; 0x2c
   21cc4:	str	r2, [r5, #36]	; 0x24
   21cc8:	str	r2, [r5, #28]
   21ccc:	str	r2, [r5, #20]
   21cd0:	str	r3, [r5, #32]
   21cd4:	str	r3, [r5, #24]
   21cd8:	str	r3, [r5, #16]
   21cdc:	str	ip, [r5, #8]
   21ce0:	str	ip, [r5]
   21ce4:	str	r0, [r5, #12]
   21ce8:	str	r0, [r5, #4]
   21cec:	str	r1, [r5, #512]	; 0x200
   21cf0:	str	r1, [r5, #48]	; 0x30
   21cf4:	pop	{r4, r5, r6, pc}
   21cf8:	push	{r4, r5, r6, r7, r8, lr}
   21cfc:	movw	r6, #44012	; 0xabec
   21d00:	sub	r5, r0, #4
   21d04:	movt	r6, #3
   21d08:	mov	r7, r0
   21d0c:	mov	r4, #0
   21d10:	mov	r2, r4
   21d14:	ldr	r3, [r5, #4]!
   21d18:	mov	r1, r6
   21d1c:	add	r4, r4, #1
   21d20:	mov	r0, #1
   21d24:	bl	12794 <__printf_chk@plt>
   21d28:	cmp	r4, #13
   21d2c:	bne	21d10 <crc32@@Base+0x82b8>
   21d30:	ldr	r3, [r7, #512]	; 0x200
   21d34:	movw	r1, #44012	; 0xabec
   21d38:	mov	r2, #128	; 0x80
   21d3c:	movt	r1, #3
   21d40:	mov	r0, #1
   21d44:	pop	{r4, r5, r6, r7, r8, lr}
   21d48:	b	12794 <__printf_chk@plt>
   21d4c:	subs	r0, r0, #16
   21d50:	movne	r0, #1
   21d54:	bx	lr
   21d58:	bx	lr
   21d5c:	push	{r4, r5, r6, r7, lr}
   21d60:	movw	r5, #61168	; 0xeef0
   21d64:	movt	r5, #4
   21d68:	ldrb	r2, [r0]
   21d6c:	sub	sp, sp, #12
   21d70:	ldr	r3, [r5]
   21d74:	cmp	r2, #48	; 0x30
   21d78:	str	r3, [sp, #4]
   21d7c:	bne	21e30 <crc32@@Base+0x83d8>
   21d80:	ldrb	r3, [r0, #1]
   21d84:	cmp	r3, #120	; 0x78
   21d88:	bne	21e30 <crc32@@Base+0x83d8>
   21d8c:	mov	r7, r1
   21d90:	add	r4, r0, #2
   21d94:	bl	126b0 <__errno_location@plt>
   21d98:	mov	r3, #0
   21d9c:	mov	r2, #16
   21da0:	mov	r1, sp
   21da4:	mov	r6, r0
   21da8:	mov	r0, r4
   21dac:	str	r3, [r6]
   21db0:	bl	122f0 <strtoul@plt>
   21db4:	ldr	r2, [r6]
   21db8:	cmp	r2, #34	; 0x22
   21dbc:	mov	r3, r0
   21dc0:	beq	21df8 <crc32@@Base+0x83a0>
   21dc4:	cmp	r2, #0
   21dc8:	bne	21e00 <crc32@@Base+0x83a8>
   21dcc:	ldr	r2, [sp]
   21dd0:	cmp	r2, r4
   21dd4:	strne	r3, [r7]
   21dd8:	movne	r0, #0
   21ddc:	beq	21e58 <crc32@@Base+0x8400>
   21de0:	ldr	r2, [sp, #4]
   21de4:	ldr	r3, [r5]
   21de8:	cmp	r2, r3
   21dec:	bne	21e80 <crc32@@Base+0x8428>
   21df0:	add	sp, sp, #12
   21df4:	pop	{r4, r5, r6, r7, pc}
   21df8:	cmn	r0, #1
   21dfc:	beq	21e08 <crc32@@Base+0x83b0>
   21e00:	cmp	r3, #0
   21e04:	bne	21dcc <crc32@@Base+0x8374>
   21e08:	movw	r3, #65196	; 0xfeac
   21e0c:	movt	r3, #4
   21e10:	movw	r0, #44176	; 0xac90
   21e14:	mov	r2, #29
   21e18:	ldr	r3, [r3]
   21e1c:	movt	r0, #3
   21e20:	mov	r1, #1
   21e24:	bl	1259c <fwrite@plt>
   21e28:	mvn	r0, #21
   21e2c:	b	21de0 <crc32@@Base+0x8388>
   21e30:	movw	r3, #65196	; 0xfeac
   21e34:	movt	r3, #4
   21e38:	movw	r0, #44140	; 0xac6c
   21e3c:	mov	r2, #33	; 0x21
   21e40:	ldr	r3, [r3]
   21e44:	movt	r0, #3
   21e48:	mov	r1, #1
   21e4c:	bl	1259c <fwrite@plt>
   21e50:	mvn	r0, #21
   21e54:	b	21de0 <crc32@@Base+0x8388>
   21e58:	movw	r3, #65196	; 0xfeac
   21e5c:	movt	r3, #4
   21e60:	movw	r0, #44208	; 0xacb0
   21e64:	mov	r2, #21
   21e68:	ldr	r3, [r3]
   21e6c:	movt	r0, #3
   21e70:	mov	r1, #1
   21e74:	bl	1259c <fwrite@plt>
   21e78:	mvn	r0, #21
   21e7c:	b	21de0 <crc32@@Base+0x8388>
   21e80:	bl	124b8 <__stack_chk_fail@plt>
   21e84:	push	{r4, r5, r6, r7, r8, lr}
   21e88:	cmp	r1, #0
   21e8c:	add	r4, r0, #16
   21e90:	sub	sp, sp, #8
   21e94:	movne	r7, r1
   21e98:	mov	r8, r2
   21e9c:	moveq	r7, r4
   21ea0:	mov	r6, r0
   21ea4:	bl	125b4 <EVP_CIPHER_CTX_new@plt>
   21ea8:	mov	r5, r0
   21eac:	bl	12170 <EVP_aes_128_cbc@plt>
   21eb0:	mov	r2, r4
   21eb4:	str	r8, [sp]
   21eb8:	mov	r3, r7
   21ebc:	mov	r1, r0
   21ec0:	mov	r0, r5
   21ec4:	bl	120ec <EVP_CipherInit@plt>
   21ec8:	cmp	r0, #1
   21ecc:	mov	r4, r0
   21ed0:	beq	21ee0 <crc32@@Base+0x8488>
   21ed4:	mov	r0, r4
   21ed8:	add	sp, sp, #8
   21edc:	pop	{r4, r5, r6, r7, r8, pc}
   21ee0:	mov	r1, #0
   21ee4:	mov	r0, r5
   21ee8:	bl	125d8 <EVP_CIPHER_CTX_set_padding@plt>
   21eec:	mov	r0, r4
   21ef0:	str	r5, [r6, #60]	; 0x3c
   21ef4:	add	sp, sp, #8
   21ef8:	pop	{r4, r5, r6, r7, r8, pc}
   21efc:	push	{r4, r5, r6, lr}
   21f00:	mov	r4, r0
   21f04:	ldr	r0, [r0, #60]	; 0x3c
   21f08:	mov	r5, r1
   21f0c:	bl	1241c <EVP_CIPHER_CTX_cleanup@plt>
   21f10:	cmp	r0, #0
   21f14:	popeq	{r4, r5, r6, pc}
   21f18:	mov	r2, r5
   21f1c:	add	r1, r4, #136	; 0x88
   21f20:	mov	r0, r4
   21f24:	pop	{r4, r5, r6, lr}
   21f28:	b	21e84 <crc32@@Base+0x842c>
   21f2c:	push	{r1, r2, r3}
   21f30:	push	{r4, lr}
   21f34:	movw	r4, #61168	; 0xeef0
   21f38:	movt	r4, #4
   21f3c:	ldrb	r2, [r0]
   21f40:	sub	sp, sp, #12
   21f44:	ldr	r3, [r4]
   21f48:	tst	r2, #8
   21f4c:	ldr	r2, [sp, #20]
   21f50:	str	r3, [sp, #4]
   21f54:	beq	21f78 <crc32@@Base+0x8520>
   21f58:	ldr	r2, [sp, #4]
   21f5c:	ldr	r3, [r4]
   21f60:	cmp	r2, r3
   21f64:	bne	21f9c <crc32@@Base+0x8544>
   21f68:	add	sp, sp, #12
   21f6c:	pop	{r4, lr}
   21f70:	add	sp, sp, #12
   21f74:	bx	lr
   21f78:	add	ip, sp, #24
   21f7c:	movw	r0, #65200	; 0xfeb0
   21f80:	movt	r0, #4
   21f84:	mov	r1, #1
   21f88:	mov	r3, ip
   21f8c:	str	ip, [sp]
   21f90:	ldr	r0, [r0]
   21f94:	bl	12554 <__vfprintf_chk@plt>
   21f98:	b	21f58 <crc32@@Base+0x8500>
   21f9c:	bl	124b8 <__stack_chk_fail@plt>
   21fa0:	cmp	r0, #0
   21fa4:	beq	22028 <crc32@@Base+0x85d0>
   21fa8:	ldr	r3, [r0, #64]	; 0x40
   21fac:	ldrb	r3, [r3]
   21fb0:	cmp	r3, #0
   21fb4:	beq	21ffc <crc32@@Base+0x85a4>
   21fb8:	ldr	r3, [r0]
   21fbc:	ldr	r2, [r0, #8]
   21fc0:	cmp	r3, #0
   21fc4:	beq	21fe4 <crc32@@Base+0x858c>
   21fc8:	cmp	r2, #0
   21fcc:	bne	21fdc <crc32@@Base+0x8584>
   21fd0:	ldr	r3, [r0, #16]
   21fd4:	cmp	r3, #0
   21fd8:	beq	21fec <crc32@@Base+0x8594>
   21fdc:	mov	r0, #1
   21fe0:	bx	lr
   21fe4:	cmp	r2, #0
   21fe8:	bne	21fd0 <crc32@@Base+0x8578>
   21fec:	ldr	r0, [r0, #28]
   21ff0:	adds	r0, r0, #0
   21ff4:	movne	r0, #1
   21ff8:	bx	lr
   21ffc:	movw	r1, #65196	; 0xfeac
   22000:	movt	r1, #4
   22004:	ldr	r3, [r0, #80]	; 0x50
   22008:	movw	r2, #44232	; 0xacc8
   2200c:	push	{r4, lr}
   22010:	movt	r2, #3
   22014:	ldr	r0, [r1]
   22018:	mov	r1, #1
   2201c:	bl	122d8 <__fprintf_chk@plt>
   22020:	mvn	r0, #0
   22024:	pop	{r4, pc}
   22028:	mvn	r0, #0
   2202c:	bx	lr
   22030:	push	{r4, r5, r6, r7, r8, lr}
   22034:	subs	r7, r0, #0
   22038:	mov	r6, r1
   2203c:	beq	22088 <crc32@@Base+0x8630>
   22040:	ldr	r4, [r7, #12]
   22044:	cmp	r4, #0
   22048:	beq	22070 <crc32@@Base+0x8618>
   2204c:	ldr	r0, [r4, #8]
   22050:	ldr	r5, [r4, #4]
   22054:	cmp	r0, #0
   22058:	beq	22060 <crc32@@Base+0x8608>
   2205c:	bl	1214c <free@plt>
   22060:	mov	r0, r4
   22064:	bl	1214c <free@plt>
   22068:	subs	r4, r5, #0
   2206c:	bne	2204c <crc32@@Base+0x85f4>
   22070:	ldr	r4, [r7, #8]
   22074:	mov	r0, r7
   22078:	bl	1214c <free@plt>
   2207c:	cmp	r4, #0
   22080:	movne	r7, r4
   22084:	bne	22040 <crc32@@Base+0x85e8>
   22088:	cmp	r6, #0
   2208c:	popeq	{r4, r5, r6, r7, r8, pc}
   22090:	ldr	r0, [r6, #8]
   22094:	ldr	r4, [r6]
   22098:	bl	1214c <free@plt>
   2209c:	mov	r0, r6
   220a0:	bl	1214c <free@plt>
   220a4:	subs	r6, r4, #0
   220a8:	bne	22090 <crc32@@Base+0x8638>
   220ac:	pop	{r4, r5, r6, r7, r8, pc}
   220b0:	push	{r4, r5, r6, lr}
   220b4:	mov	r4, r1
   220b8:	ldr	r1, [r1]
   220bc:	mov	r5, r0
   220c0:	ldr	r0, [r0]
   220c4:	add	r1, r2, r1
   220c8:	str	r1, [r4]
   220cc:	bl	123f8 <realloc@plt>
   220d0:	subs	r2, r0, #0
   220d4:	ldrne	r1, [r4]
   220d8:	movne	r3, #64	; 0x40
   220dc:	movtne	r3, #53760	; 0xd200
   220e0:	strne	r2, [r5]
   220e4:	movne	r0, #0
   220e8:	mvneq	r0, #11
   220ec:	orrne	r3, r3, r1, lsl #8
   220f0:	revne	r3, r3
   220f4:	strne	r3, [r2]
   220f8:	pop	{r4, r5, r6, pc}
   220fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22100:	movw	r6, #61168	; 0xeef0
   22104:	movt	r6, #4
   22108:	cmp	r3, #0
   2210c:	sub	sp, sp, #28
   22110:	movw	lr, #44316	; 0xad1c
   22114:	ldr	r4, [r6]
   22118:	movt	lr, #3
   2211c:	movw	ip, #44324	; 0xad24
   22120:	movt	ip, #3
   22124:	mov	r8, r0
   22128:	mov	r7, r1
   2212c:	mov	r0, #1
   22130:	mov	r1, #48	; 0x30
   22134:	str	r4, [sp, #20]
   22138:	movne	r5, lr
   2213c:	moveq	r5, ip
   22140:	mov	r9, r2
   22144:	mov	fp, r3
   22148:	mov	sl, #0
   2214c:	str	sl, [sp, #16]
   22150:	bl	1253c <calloc@plt>
   22154:	subs	r4, r0, #0
   22158:	beq	22310 <crc32@@Base+0x88b8>
   2215c:	ldr	r0, [r7]
   22160:	movw	r1, #32548	; 0x7f24
   22164:	movt	r1, #3
   22168:	bl	1229c <strtok@plt>
   2216c:	cmp	r0, #0
   22170:	beq	222e4 <crc32@@Base+0x888c>
   22174:	ldrb	r3, [r0]
   22178:	cmp	r3, #72	; 0x48
   2217c:	bne	221ec <crc32@@Base+0x8794>
   22180:	ldrb	r3, [r0, #1]
   22184:	cmp	r3, #65	; 0x41
   22188:	bne	221ec <crc32@@Base+0x8794>
   2218c:	ldrb	r3, [r0, #2]
   22190:	cmp	r3, #66	; 0x42
   22194:	bne	221ec <crc32@@Base+0x8794>
   22198:	ldrb	r3, [r0, #3]
   2219c:	cmp	r3, #0
   221a0:	bne	221ec <crc32@@Base+0x8794>
   221a4:	mov	r0, r3
   221a8:	movw	r1, #32548	; 0x7f24
   221ac:	movt	r1, #3
   221b0:	bl	1229c <strtok@plt>
   221b4:	cmp	r0, #0
   221b8:	movne	sl, #1
   221bc:	bne	221ec <crc32@@Base+0x8794>
   221c0:	movw	r1, #65196	; 0xfeac
   221c4:	movt	r1, #4
   221c8:	ldr	r3, [r9]
   221cc:	movw	r2, #44372	; 0xad54
   221d0:	ldr	r0, [r1]
   221d4:	movt	r2, #3
   221d8:	str	r5, [sp]
   221dc:	mov	r1, #1
   221e0:	mvn	r7, #21
   221e4:	bl	122d8 <__fprintf_chk@plt>
   221e8:	b	22220 <crc32@@Base+0x87c8>
   221ec:	add	r1, sp, #12
   221f0:	bl	21d5c <crc32@@Base+0x8304>
   221f4:	subs	r7, r0, #0
   221f8:	beq	22244 <crc32@@Base+0x87ec>
   221fc:	movw	r1, #65196	; 0xfeac
   22200:	movt	r1, #4
   22204:	ldr	r3, [r9]
   22208:	movw	r2, #44404	; 0xad74
   2220c:	ldr	r0, [r1]
   22210:	movt	r2, #3
   22214:	str	r5, [sp]
   22218:	mov	r1, #1
   2221c:	bl	122d8 <__fprintf_chk@plt>
   22220:	mov	r0, r4
   22224:	bl	1214c <free@plt>
   22228:	ldr	r2, [sp, #20]
   2222c:	mov	r0, r7
   22230:	ldr	r3, [r6]
   22234:	cmp	r2, r3
   22238:	bne	22318 <crc32@@Base+0x88c0>
   2223c:	add	sp, sp, #28
   22240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22244:	movw	r1, #32548	; 0x7f24
   22248:	movt	r1, #3
   2224c:	bl	1229c <strtok@plt>
   22250:	cmp	r0, #0
   22254:	beq	22294 <crc32@@Base+0x883c>
   22258:	add	r1, sp, #16
   2225c:	bl	21d5c <crc32@@Base+0x8304>
   22260:	subs	ip, r0, #0
   22264:	beq	22294 <crc32@@Base+0x883c>
   22268:	movw	r1, #65196	; 0xfeac
   2226c:	movt	r1, #4
   22270:	ldr	r3, [r9]
   22274:	movw	r2, #44436	; 0xad94
   22278:	ldr	r0, [r1]
   2227c:	movt	r2, #3
   22280:	str	r5, [sp]
   22284:	mov	r1, #1
   22288:	mov	r7, ip
   2228c:	bl	122d8 <__fprintf_chk@plt>
   22290:	b	22220 <crc32@@Base+0x87c8>
   22294:	ldr	r1, [r8, #12]
   22298:	cmp	fp, #0
   2229c:	ldr	r3, [sp, #12]
   222a0:	movne	r2, #5
   222a4:	moveq	r2, #4
   222a8:	cmp	r1, #0
   222ac:	ldr	r1, [sp, #16]
   222b0:	str	r3, [r4, #20]
   222b4:	mov	r3, #16
   222b8:	str	r3, [r4]
   222bc:	ldrne	r3, [r8, #16]
   222c0:	strb	r2, [r4, #17]
   222c4:	mov	r2, #90	; 0x5a
   222c8:	strh	sl, [r4, #18]
   222cc:	str	r1, [r4, #28]
   222d0:	strb	r2, [r4, #16]
   222d4:	streq	r4, [r8, #12]
   222d8:	strne	r4, [r3, #4]
   222dc:	str	r4, [r8, #16]
   222e0:	b	22228 <crc32@@Base+0x87d0>
   222e4:	movw	r1, #65196	; 0xfeac
   222e8:	movt	r1, #4
   222ec:	ldr	r3, [r9]
   222f0:	movw	r2, #44332	; 0xad2c
   222f4:	ldr	r0, [r1]
   222f8:	movt	r2, #3
   222fc:	str	r5, [sp]
   22300:	mov	r1, #1
   22304:	mvn	r7, #21
   22308:	bl	122d8 <__fprintf_chk@plt>
   2230c:	b	22220 <crc32@@Base+0x87c8>
   22310:	mvn	r7, #11
   22314:	b	22228 <crc32@@Base+0x87d0>
   22318:	bl	124b8 <__stack_chk_fail@plt>
   2231c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22320:	movw	r5, #61168	; 0xeef0
   22324:	movt	r5, #4
   22328:	ldr	ip, [r0, #16]
   2232c:	mov	r9, r2
   22330:	sub	sp, sp, #20
   22334:	ldr	r2, [r5]
   22338:	cmp	ip, #0
   2233c:	mov	r4, r0
   22340:	mov	r8, r1
   22344:	mov	r6, r3
   22348:	add	r0, r0, #8
   2234c:	add	r1, r4, #12
   22350:	str	r2, [sp, #12]
   22354:	beq	22448 <crc32@@Base+0x89f0>
   22358:	cmp	r3, #-1073741824	; 0xc0000000
   2235c:	beq	22450 <crc32@@Base+0x89f8>
   22360:	ldr	r3, [ip]
   22364:	bic	r3, r3, #16711680	; 0xff0000
   22368:	bic	r3, r3, #65280	; 0xff00
   2236c:	cmp	r6, r3
   22370:	beq	224a0 <crc32@@Base+0x8a48>
   22374:	mov	r2, #12
   22378:	bl	220b0 <crc32@@Base+0x8658>
   2237c:	subs	r7, r0, #0
   22380:	bne	2242c <crc32@@Base+0x89d4>
   22384:	ldr	sl, [r4, #12]
   22388:	ldr	fp, [r4, #8]
   2238c:	bic	sl, sl, #3
   22390:	sub	r3, sl, #12
   22394:	add	r3, fp, r3
   22398:	str	r3, [r4, #16]
   2239c:	ldr	r0, [r8]
   223a0:	movw	r1, #32548	; 0x7f24
   223a4:	movt	r1, #3
   223a8:	bl	1229c <strtok@plt>
   223ac:	cmp	r0, #0
   223b0:	beq	2250c <crc32@@Base+0x8ab4>
   223b4:	add	r1, sp, #4
   223b8:	bl	21d5c <crc32@@Base+0x8304>
   223bc:	subs	r7, r0, #0
   223c0:	bne	2247c <crc32@@Base+0x8a24>
   223c4:	movw	r1, #32548	; 0x7f24
   223c8:	movt	r1, #3
   223cc:	bl	1229c <strtok@plt>
   223d0:	cmp	r0, #0
   223d4:	beq	224e4 <crc32@@Base+0x8a8c>
   223d8:	add	r1, sp, #8
   223dc:	bl	21d5c <crc32@@Base+0x8304>
   223e0:	subs	r7, r0, #0
   223e4:	bne	224c0 <crc32@@Base+0x8a68>
   223e8:	sub	sl, sl, #8
   223ec:	ldr	r3, [sp, #4]
   223f0:	add	r1, fp, sl
   223f4:	rev	r3, r3
   223f8:	str	r3, [fp, sl]
   223fc:	ldr	r2, [sp, #8]
   22400:	ldr	r3, [r4, #16]
   22404:	rev	r2, r2
   22408:	str	r2, [r1, #4]
   2240c:	ldr	r1, [r4, #8]
   22410:	ldr	r2, [r4, #12]
   22414:	sub	r1, r3, r1
   22418:	mov	r7, #0
   2241c:	sub	r2, r2, r1
   22420:	orr	r6, r6, r2, lsl #8
   22424:	rev	r6, r6
   22428:	str	r6, [r3]
   2242c:	ldr	r2, [sp, #12]
   22430:	mov	r0, r7
   22434:	ldr	r3, [r5]
   22438:	cmp	r2, r3
   2243c:	bne	22534 <crc32@@Base+0x8adc>
   22440:	add	sp, sp, #20
   22444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22448:	cmp	r3, #-1073741824	; 0xc0000000
   2244c:	bne	22374 <crc32@@Base+0x891c>
   22450:	mov	r2, #4
   22454:	bl	220b0 <crc32@@Base+0x8658>
   22458:	subs	r7, r0, #0
   2245c:	bne	2242c <crc32@@Base+0x89d4>
   22460:	ldr	r2, [r4, #12]
   22464:	ldr	r1, [r4, #8]
   22468:	bic	r3, r2, #3
   2246c:	sub	r3, r3, #4
   22470:	add	r3, r1, r3
   22474:	str	r3, [r4, #16]
   22478:	b	22414 <crc32@@Base+0x89bc>
   2247c:	movw	r1, #65196	; 0xfeac
   22480:	movt	r1, #4
   22484:	ldr	r3, [r9]
   22488:	movw	r2, #44504	; 0xadd8
   2248c:	ldr	r0, [r1]
   22490:	movt	r2, #3
   22494:	mov	r1, #1
   22498:	bl	122d8 <__fprintf_chk@plt>
   2249c:	b	2242c <crc32@@Base+0x89d4>
   224a0:	mov	r2, #8
   224a4:	bl	220b0 <crc32@@Base+0x8658>
   224a8:	subs	r7, r0, #0
   224ac:	bne	2242c <crc32@@Base+0x89d4>
   224b0:	ldr	sl, [r4, #12]
   224b4:	ldr	fp, [r4, #8]
   224b8:	bic	sl, sl, #3
   224bc:	b	2239c <crc32@@Base+0x8944>
   224c0:	movw	r1, #65196	; 0xfeac
   224c4:	movt	r1, #4
   224c8:	ldr	r3, [r9]
   224cc:	movw	r2, #44572	; 0xae1c
   224d0:	ldr	r0, [r1]
   224d4:	movt	r2, #3
   224d8:	mov	r1, #1
   224dc:	bl	122d8 <__fprintf_chk@plt>
   224e0:	b	2242c <crc32@@Base+0x89d4>
   224e4:	movw	r1, #65196	; 0xfeac
   224e8:	movt	r1, #4
   224ec:	ldr	r3, [r9]
   224f0:	movw	r2, #44540	; 0xadfc
   224f4:	ldr	r0, [r1]
   224f8:	movt	r2, #3
   224fc:	mov	r1, #1
   22500:	mvn	r7, #21
   22504:	bl	122d8 <__fprintf_chk@plt>
   22508:	b	2242c <crc32@@Base+0x89d4>
   2250c:	movw	r1, #65196	; 0xfeac
   22510:	movt	r1, #4
   22514:	ldr	r3, [r9]
   22518:	movw	r2, #44472	; 0xadb8
   2251c:	ldr	r0, [r1]
   22520:	movt	r2, #3
   22524:	mov	r1, #1
   22528:	mvn	r7, #21
   2252c:	bl	122d8 <__fprintf_chk@plt>
   22530:	b	2242c <crc32@@Base+0x89d4>
   22534:	bl	124b8 <__stack_chk_fail@plt>
   22538:	push	{r4, r5, r6, r7, r8, r9, lr}
   2253c:	movw	r4, #61168	; 0xeef0
   22540:	movt	r4, #4
   22544:	sub	sp, sp, #20
   22548:	mov	r7, r0
   2254c:	mov	r0, r3
   22550:	ldr	ip, [r4]
   22554:	mov	r6, r3
   22558:	mov	r8, r1
   2255c:	mov	r9, r2
   22560:	str	ip, [sp, #12]
   22564:	bl	125cc <malloc@plt>
   22568:	subs	r5, r0, #0
   2256c:	beq	225dc <crc32@@Base+0x8b84>
   22570:	mov	r2, #0
   22574:	mov	r3, r8
   22578:	str	r2, [r5]
   2257c:	mov	r0, r7
   22580:	str	r6, [sp]
   22584:	add	r2, sp, #8
   22588:	mov	r1, r5
   2258c:	bl	1211c <EVP_CipherUpdate@plt>
   22590:	subs	r6, r0, #0
   22594:	mvneq	r6, #21
   22598:	bne	225c0 <crc32@@Base+0x8b68>
   2259c:	mov	r0, r5
   225a0:	bl	1214c <free@plt>
   225a4:	ldr	r2, [sp, #12]
   225a8:	mov	r0, r6
   225ac:	ldr	r3, [r4]
   225b0:	cmp	r2, r3
   225b4:	bne	225e4 <crc32@@Base+0x8b8c>
   225b8:	add	sp, sp, #20
   225bc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   225c0:	cmp	r9, #0
   225c4:	beq	2259c <crc32@@Base+0x8b44>
   225c8:	mov	r0, r9
   225cc:	ldr	r2, [sp, #8]
   225d0:	mov	r1, r5
   225d4:	bl	125c0 <memcpy@plt>
   225d8:	b	2259c <crc32@@Base+0x8b44>
   225dc:	mvn	r6, #11
   225e0:	b	225a4 <crc32@@Base+0x8b4c>
   225e4:	bl	124b8 <__stack_chk_fail@plt>
   225e8:	push	{r4, r5, r6, lr}
   225ec:	add	r4, r0, #136	; 0x88
   225f0:	ldr	r5, [r0, #64]	; 0x40
   225f4:	mov	r2, #0
   225f8:	mov	r1, r4
   225fc:	mov	r3, #96	; 0x60
   22600:	ldr	r0, [r0, #60]	; 0x3c
   22604:	bl	22538 <crc32@@Base+0x8ae0>
   22608:	mov	r1, r4
   2260c:	mov	r0, r5
   22610:	mov	r2, #96	; 0x60
   22614:	pop	{r4, r5, r6, lr}
   22618:	b	12674 <EVP_DigestUpdate@plt>
   2261c:	push	{r4, r5, r6, r7, r8, lr}
   22620:	ldr	r4, [r0, #44]	; 0x2c
   22624:	ldr	r7, [r0, #64]	; 0x40
   22628:	cmp	r4, #0
   2262c:	popeq	{r4, r5, r6, r7, r8, pc}
   22630:	add	r8, r0, #100	; 0x64
   22634:	mov	r6, r0
   22638:	add	r5, r4, #20
   2263c:	mov	r3, #16
   22640:	mov	r2, r8
   22644:	ldr	r0, [r6, #60]	; 0x3c
   22648:	mov	r1, r5
   2264c:	bl	22538 <crc32@@Base+0x8ae0>
   22650:	mov	r1, r5
   22654:	mov	r2, #16
   22658:	mov	r0, r7
   2265c:	bl	12674 <EVP_DigestUpdate@plt>
   22660:	ldr	r4, [r4, #8]
   22664:	cmp	r4, #0
   22668:	bne	22638 <crc32@@Base+0x8be0>
   2266c:	pop	{r4, r5, r6, r7, r8, pc}
   22670:	push	{r4, lr}
   22674:	movw	r1, #44604	; 0xae3c
   22678:	mov	r2, #32
   2267c:	movt	r1, #3
   22680:	mov	r0, #24
   22684:	bl	122e4 <CRYPTO_malloc@plt>
   22688:	cmp	r0, #0
   2268c:	popeq	{r4, pc}
   22690:	mov	r3, #0
   22694:	str	r3, [r0]
   22698:	str	r3, [r0, #4]
   2269c:	str	r3, [r0, #8]
   226a0:	str	r3, [r0, #12]
   226a4:	str	r3, [r0, #16]
   226a8:	str	r3, [r0, #20]
   226ac:	pop	{r4, pc}
   226b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   226b4:	movw	r3, #61168	; 0xeef0
   226b8:	sub	sp, sp, #428	; 0x1ac
   226bc:	movt	r3, #4
   226c0:	add	r7, sp, #152	; 0x98
   226c4:	mov	r4, r0
   226c8:	str	r3, [sp, #36]	; 0x24
   226cc:	mov	r5, r1
   226d0:	ldr	r3, [r3]
   226d4:	mov	r0, r7
   226d8:	mov	r2, #232	; 0xe8
   226dc:	mov	r1, #0
   226e0:	str	r3, [sp, #420]	; 0x1a4
   226e4:	bl	12308 <memset@plt>
   226e8:	cmp	r4, #0
   226ec:	mov	r3, #0
   226f0:	str	r4, [sp, #156]	; 0x9c
   226f4:	bfi	r3, r5, #3, #1
   226f8:	strb	r3, [sp, #152]	; 0x98
   226fc:	beq	22c2c <crc32@@Base+0x91d4>
   22700:	mov	r0, r4
   22704:	movw	r1, #50292	; 0xc474
   22708:	movt	r1, #3
   2270c:	bl	12350 <fopen@plt>
   22710:	subs	fp, r0, #0
   22714:	movweq	r4, #65196	; 0xfeac
   22718:	movteq	r4, #4
   2271c:	beq	22b28 <crc32@@Base+0x90d0>
   22720:	mov	r2, #2
   22724:	mov	r1, #0
   22728:	bl	1217c <fseek@plt>
   2272c:	cmp	r0, #0
   22730:	blt	22b18 <crc32@@Base+0x90c0>
   22734:	mov	r0, fp
   22738:	bl	12548 <ftell@plt>
   2273c:	subs	r3, r0, #0
   22740:	str	r3, [sp, #32]
   22744:	blt	22b18 <crc32@@Base+0x90c0>
   22748:	mov	r2, #0
   2274c:	mov	r0, fp
   22750:	mov	r1, r2
   22754:	bl	1217c <fseek@plt>
   22758:	cmp	r0, #0
   2275c:	blt	22b18 <crc32@@Base+0x90c0>
   22760:	ldr	r3, [sp, #32]
   22764:	cmp	r3, #95	; 0x5f
   22768:	ble	22c94 <crc32@@Base+0x923c>
   2276c:	ldr	r3, [sp, #32]
   22770:	ands	r5, r3, #15
   22774:	bne	22bc4 <crc32@@Base+0x916c>
   22778:	bl	22670 <crc32@@Base+0x8c18>
   2277c:	mov	r4, r0
   22780:	str	r0, [sp, #216]	; 0xd8
   22784:	bl	12230 <EVP_sha1@plt>
   22788:	mov	r1, r0
   2278c:	mov	r0, r4
   22790:	bl	120a4 <EVP_DigestInit@plt>
   22794:	mov	r0, r7
   22798:	movw	r1, #44776	; 0xaee8
   2279c:	movt	r1, #3
   227a0:	bl	21f2c <crc32@@Base+0x84d4>
   227a4:	add	r0, sp, #288	; 0x120
   227a8:	mov	r3, fp
   227ac:	mov	r2, #96	; 0x60
   227b0:	mov	r1, #1
   227b4:	bl	12488 <fread@plt>
   227b8:	cmp	r0, #96	; 0x60
   227bc:	bne	22b48 <crc32@@Base+0x90f0>
   227c0:	bl	22670 <crc32@@Base+0x8c18>
   227c4:	mov	r4, r0
   227c8:	bl	12230 <EVP_sha1@plt>
   227cc:	mov	r1, r0
   227d0:	mov	r0, r4
   227d4:	bl	120a4 <EVP_DigestInit@plt>
   227d8:	add	r1, sp, #308	; 0x134
   227dc:	mov	r2, #76	; 0x4c
   227e0:	mov	r0, r4
   227e4:	bl	12674 <EVP_DigestUpdate@plt>
   227e8:	add	r1, sp, #388	; 0x184
   227ec:	mov	r2, r5
   227f0:	mov	r0, r4
   227f4:	bl	12560 <EVP_DigestFinal@plt>
   227f8:	mov	r0, r4
   227fc:	bl	124e8 <EVP_MD_CTX_cleanup@plt>
   22800:	mov	r0, r4
   22804:	bl	124dc <CRYPTO_free@plt>
   22808:	mov	r1, r5
   2280c:	mov	r2, #1
   22810:	mov	r0, r7
   22814:	bl	21e84 <crc32@@Base+0x842c>
   22818:	mov	r0, r7
   2281c:	bl	225e8 <crc32@@Base+0x8b90>
   22820:	add	r1, sp, #288	; 0x120
   22824:	add	r0, sp, #388	; 0x184
   22828:	mov	r2, #20
   2282c:	bl	126ec <memcmp@plt>
   22830:	cmp	r0, #0
   22834:	beq	228c0 <crc32@@Base+0x8e68>
   22838:	movw	r3, #44968	; 0xafa8
   2283c:	movw	r2, #44972	; 0xafac
   22840:	movw	r1, #44928	; 0xaf80
   22844:	movt	r3, #3
   22848:	movt	r2, #3
   2284c:	mov	r0, r7
   22850:	movt	r1, #3
   22854:	bl	21f2c <crc32@@Base+0x84d4>
   22858:	mvn	r4, #21
   2285c:	movw	r1, #44864	; 0xaf40
   22860:	mov	r0, r7
   22864:	movt	r1, #3
   22868:	bl	21f2c <crc32@@Base+0x84d4>
   2286c:	movw	r2, #44680	; 0xae88
   22870:	movt	r2, #3
   22874:	mov	r0, r7
   22878:	movw	r1, #45924	; 0xb364
   2287c:	movt	r1, #3
   22880:	bl	21f2c <crc32@@Base+0x84d4>
   22884:	ldr	r0, [sp, #212]	; 0xd4
   22888:	bl	1241c <EVP_CIPHER_CTX_cleanup@plt>
   2288c:	mov	r0, fp
   22890:	bl	12620 <fclose@plt>
   22894:	ldr	r0, [sp, #196]	; 0xc4
   22898:	ldr	r1, [sp, #204]	; 0xcc
   2289c:	bl	22030 <crc32@@Base+0x85d8>
   228a0:	ldr	r3, [sp, #36]	; 0x24
   228a4:	ldr	r2, [sp, #420]	; 0x1a4
   228a8:	mov	r0, r4
   228ac:	ldr	r3, [r3]
   228b0:	cmp	r2, r3
   228b4:	bne	22d24 <crc32@@Base+0x92cc>
   228b8:	add	sp, sp, #428	; 0x1ac
   228bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   228c0:	movw	r3, #44916	; 0xaf74
   228c4:	movw	r2, #44920	; 0xaf78
   228c8:	movt	r3, #3
   228cc:	movt	r2, #3
   228d0:	movw	r1, #44928	; 0xaf80
   228d4:	mov	r0, r7
   228d8:	movt	r1, #3
   228dc:	bl	21f2c <crc32@@Base+0x84d4>
   228e0:	ldr	r2, [sp, #308]	; 0x134
   228e4:	movw	r3, #21587	; 0x5453
   228e8:	movt	r3, #20557	; 0x504d
   228ec:	cmp	r2, r3
   228f0:	bne	22908 <crc32@@Base+0x8eb0>
   228f4:	ldr	r2, [sp, #340]	; 0x154
   228f8:	movw	r3, #26483	; 0x6773
   228fc:	movt	r3, #27764	; 0x6c74
   22900:	cmp	r2, r3
   22904:	beq	22930 <crc32@@Base+0x8ed8>
   22908:	add	r1, sp, #340	; 0x154
   2290c:	add	r3, sp, #308	; 0x134
   22910:	str	r1, [sp]
   22914:	movw	r2, #44972	; 0xafac
   22918:	movw	r1, #45976	; 0xb398
   2291c:	movt	r2, #3
   22920:	mov	r0, r7
   22924:	movt	r1, #3
   22928:	bl	21f2c <crc32@@Base+0x84d4>
   2292c:	b	22858 <crc32@@Base+0x8e00>
   22930:	add	r1, sp, #340	; 0x154
   22934:	add	r3, sp, #308	; 0x134
   22938:	str	r1, [sp]
   2293c:	movw	r2, #44920	; 0xaf78
   22940:	movw	r1, #45976	; 0xb398
   22944:	movt	r2, #3
   22948:	mov	r0, r7
   2294c:	movt	r1, #3
   22950:	bl	21f2c <crc32@@Base+0x84d4>
   22954:	ldrb	r4, [sp, #312]	; 0x138
   22958:	cmp	r4, #1
   2295c:	beq	22988 <crc32@@Base+0x8f30>
   22960:	ldrb	r3, [sp, #313]	; 0x139
   22964:	str	r3, [sp]
   22968:	movw	r2, #44972	; 0xafac
   2296c:	mov	r3, r4
   22970:	movw	r1, #46024	; 0xb3c8
   22974:	movt	r2, #3
   22978:	movt	r1, #3
   2297c:	mov	r0, r7
   22980:	bl	21f2c <crc32@@Base+0x84d4>
   22984:	b	22858 <crc32@@Base+0x8e00>
   22988:	ldrb	r2, [sp, #313]	; 0x139
   2298c:	sub	r3, r2, #1
   22990:	cmp	r3, #1
   22994:	mov	r3, r2
   22998:	bhi	22964 <crc32@@Base+0x8f0c>
   2299c:	str	r2, [sp]
   229a0:	mov	r3, r4
   229a4:	mov	r0, r7
   229a8:	movw	r2, #44920	; 0xaf78
   229ac:	movw	r1, #46024	; 0xb3c8
   229b0:	movt	r2, #3
   229b4:	movt	r1, #3
   229b8:	bl	21f2c <crc32@@Base+0x84d4>
   229bc:	mov	r3, #0
   229c0:	ldrd	r0, [r7, #192]	; 0xc0
   229c4:	movw	r2, #16960	; 0x4240
   229c8:	movt	r2, #15
   229cc:	bl	36274 <crc32@@Base+0x1c81c>
   229d0:	mov	r2, #44	; 0x2c
   229d4:	mov	r1, #0
   229d8:	mov	r5, r0
   229dc:	add	r0, sp, #108	; 0x6c
   229e0:	bl	12308 <memset@plt>
   229e4:	add	r0, sp, #108	; 0x6c
   229e8:	str	r4, [sp, #136]	; 0x88
   229ec:	bl	12728 <mktime@plt>
   229f0:	add	r1, sp, #64	; 0x40
   229f4:	add	r5, r5, r0
   229f8:	add	r0, sp, #60	; 0x3c
   229fc:	str	r5, [sp, #60]	; 0x3c
   22a00:	bl	123e0 <gmtime_r@plt>
   22a04:	cmp	r0, #0
   22a08:	beq	22cd8 <crc32@@Base+0x9280>
   22a0c:	ldr	r0, [sp, #80]	; 0x50
   22a10:	movw	r2, #44920	; 0xaf78
   22a14:	ldr	lr, [sp, #76]	; 0x4c
   22a18:	movt	r2, #3
   22a1c:	ldr	ip, [sp, #64]	; 0x40
   22a20:	str	r0, [sp, #12]
   22a24:	ldr	r0, [sp, #68]	; 0x44
   22a28:	ldr	r1, [sp, #84]	; 0x54
   22a2c:	str	lr, [sp, #8]
   22a30:	str	ip, [sp, #4]
   22a34:	add	r1, r1, #2000	; 0x7d0
   22a38:	ldr	r3, [sp, #72]	; 0x48
   22a3c:	str	r1, [sp, #16]
   22a40:	movw	r1, #46068	; 0xb3f4
   22a44:	str	r0, [sp]
   22a48:	movt	r1, #3
   22a4c:	mov	r0, r7
   22a50:	bl	21f2c <crc32@@Base+0x84d4>
   22a54:	ldrh	r0, [r7, #208]	; 0xd0
   22a58:	ldrh	r1, [r7, #204]	; 0xcc
   22a5c:	movw	r2, #44920	; 0xaf78
   22a60:	ldrh	r3, [r7, #200]	; 0xc8
   22a64:	rev16	r0, r0
   22a68:	rev16	r1, r1
   22a6c:	movt	r2, #3
   22a70:	rev16	r3, r3
   22a74:	uxth	r0, r0
   22a78:	uxth	r1, r1
   22a7c:	str	r0, [sp, #4]
   22a80:	str	r1, [sp]
   22a84:	uxth	r3, r3
   22a88:	mov	r0, r7
   22a8c:	movw	r1, #46132	; 0xb434
   22a90:	movt	r1, #3
   22a94:	bl	21f2c <crc32@@Base+0x84d4>
   22a98:	ldrh	r0, [r7, #220]	; 0xdc
   22a9c:	ldrh	r1, [r7, #216]	; 0xd8
   22aa0:	movw	r2, #44920	; 0xaf78
   22aa4:	ldrh	r3, [r7, #212]	; 0xd4
   22aa8:	rev16	r0, r0
   22aac:	rev16	r1, r1
   22ab0:	movt	r2, #3
   22ab4:	rev16	r3, r3
   22ab8:	uxth	r0, r0
   22abc:	uxth	r1, r1
   22ac0:	str	r0, [sp, #4]
   22ac4:	str	r1, [sp]
   22ac8:	uxth	r3, r3
   22acc:	movw	r1, #46176	; 0xb460
   22ad0:	mov	r0, r7
   22ad4:	movt	r1, #3
   22ad8:	bl	21f2c <crc32@@Base+0x84d4>
   22adc:	ldrh	r3, [r7, #162]	; 0xa2
   22ae0:	bic	r2, r3, #1
   22ae4:	cmp	r2, #0
   22ae8:	beq	22b70 <crc32@@Base+0x9118>
   22aec:	tst	r3, #1
   22af0:	movweq	r3, #46860	; 0xb70c
   22af4:	movweq	r2, #44972	; 0xafac
   22af8:	movteq	r3, #3
   22afc:	bne	22cc8 <crc32@@Base+0x9270>
   22b00:	movt	r2, #3
   22b04:	movw	r1, #44980	; 0xafb4
   22b08:	mov	r0, r7
   22b0c:	movt	r1, #3
   22b10:	bl	21f2c <crc32@@Base+0x84d4>
   22b14:	b	22858 <crc32@@Base+0x8e00>
   22b18:	movw	r4, #65196	; 0xfeac
   22b1c:	movt	r4, #4
   22b20:	mov	r0, fp
   22b24:	bl	12620 <fclose@plt>
   22b28:	ldr	r0, [r4]
   22b2c:	movw	r2, #45944	; 0xb378
   22b30:	ldr	r3, [sp, #156]	; 0x9c
   22b34:	movt	r2, #3
   22b38:	mov	r1, #1
   22b3c:	mvn	r4, #21
   22b40:	bl	122d8 <__fprintf_chk@plt>
   22b44:	b	22894 <crc32@@Base+0x8e3c>
   22b48:	movw	r3, #65196	; 0xfeac
   22b4c:	movt	r3, #4
   22b50:	movw	r0, #44828	; 0xaf1c
   22b54:	mov	r2, #32
   22b58:	ldr	r3, [r3]
   22b5c:	mov	r1, #1
   22b60:	movt	r0, #3
   22b64:	mvn	r4, #21
   22b68:	bl	1259c <fwrite@plt>
   22b6c:	b	2285c <crc32@@Base+0x8e04>
   22b70:	tst	r3, #1
   22b74:	movwne	r3, #46220	; 0xb48c
   22b78:	movwne	r2, #44920	; 0xaf78
   22b7c:	movtne	r3, #3
   22b80:	beq	22cb8 <crc32@@Base+0x9260>
   22b84:	movt	r2, #3
   22b88:	movw	r1, #44980	; 0xafb4
   22b8c:	mov	r0, r7
   22b90:	movt	r1, #3
   22b94:	bl	21f2c <crc32@@Base+0x84d4>
   22b98:	ldrh	r4, [r7, #224]	; 0xe0
   22b9c:	cmp	r4, #0
   22ba0:	beq	22be8 <crc32@@Base+0x9190>
   22ba4:	mov	r3, r4
   22ba8:	movw	r2, #44972	; 0xafac
   22bac:	movw	r1, #45020	; 0xafdc
   22bb0:	movt	r2, #3
   22bb4:	movt	r1, #3
   22bb8:	mov	r0, r7
   22bbc:	bl	21f2c <crc32@@Base+0x84d4>
   22bc0:	b	22858 <crc32@@Base+0x8e00>
   22bc4:	movw	r4, #65196	; 0xfeac
   22bc8:	movt	r4, #4
   22bcc:	movw	r0, #44744	; 0xaec8
   22bd0:	mov	r2, #30
   22bd4:	ldr	r3, [r4]
   22bd8:	mov	r1, #1
   22bdc:	movt	r0, #3
   22be0:	bl	1259c <fwrite@plt>
   22be4:	b	22b20 <crc32@@Base+0x90c8>
   22be8:	mov	r3, r4
   22bec:	movw	r2, #44920	; 0xaf78
   22bf0:	movw	r1, #45020	; 0xafdc
   22bf4:	movt	r2, #3
   22bf8:	movt	r1, #3
   22bfc:	mov	r0, r7
   22c00:	bl	21f2c <crc32@@Base+0x84d4>
   22c04:	ldrh	r3, [r7, #180]	; 0xb4
   22c08:	cmp	r3, #6
   22c0c:	beq	22c54 <crc32@@Base+0x91fc>
   22c10:	movw	r2, #44972	; 0xafac
   22c14:	movw	r1, #45060	; 0xb004
   22c18:	movt	r2, #3
   22c1c:	movt	r1, #3
   22c20:	mov	r0, r7
   22c24:	bl	21f2c <crc32@@Base+0x84d4>
   22c28:	b	22858 <crc32@@Base+0x8e00>
   22c2c:	movw	r3, #65196	; 0xfeac
   22c30:	movt	r3, #4
   22c34:	movw	r0, #44696	; 0xae98
   22c38:	mov	r2, #23
   22c3c:	ldr	r3, [r3]
   22c40:	mov	r1, #1
   22c44:	movt	r0, #3
   22c48:	mvn	r4, #21
   22c4c:	bl	1259c <fwrite@plt>
   22c50:	b	22894 <crc32@@Base+0x8e3c>
   22c54:	movw	r2, #44920	; 0xaf78
   22c58:	movw	r1, #45060	; 0xb004
   22c5c:	movt	r2, #3
   22c60:	movt	r1, #3
   22c64:	mov	r0, r7
   22c68:	bl	21f2c <crc32@@Base+0x84d4>
   22c6c:	ldrh	r3, [r7, #184]	; 0xb8
   22c70:	cmp	r3, #1
   22c74:	beq	22d28 <crc32@@Base+0x92d0>
   22c78:	movw	r2, #44972	; 0xafac
   22c7c:	movw	r1, #45100	; 0xb02c
   22c80:	movt	r2, #3
   22c84:	movt	r1, #3
   22c88:	mov	r0, r7
   22c8c:	bl	21f2c <crc32@@Base+0x84d4>
   22c90:	b	22858 <crc32@@Base+0x8e00>
   22c94:	movw	r4, #65196	; 0xfeac
   22c98:	movt	r4, #4
   22c9c:	movw	r0, #44720	; 0xaeb0
   22ca0:	mov	r2, #21
   22ca4:	ldr	r3, [r4]
   22ca8:	mov	r1, #1
   22cac:	movt	r0, #3
   22cb0:	bl	1259c <fwrite@plt>
   22cb4:	b	22b20 <crc32@@Base+0x90c8>
   22cb8:	movw	r3, #46860	; 0xb70c
   22cbc:	movw	r2, #44920	; 0xaf78
   22cc0:	movt	r3, #3
   22cc4:	b	22b84 <crc32@@Base+0x912c>
   22cc8:	movw	r3, #46220	; 0xb48c
   22ccc:	movw	r2, #44972	; 0xafac
   22cd0:	movt	r3, #3
   22cd4:	b	22b00 <crc32@@Base+0x90a8>
   22cd8:	ldr	r1, [sp, #80]	; 0x50
   22cdc:	movw	r2, #44972	; 0xafac
   22ce0:	ldr	r0, [sp, #64]	; 0x40
   22ce4:	movt	r2, #3
   22ce8:	ldr	lr, [sp, #76]	; 0x4c
   22cec:	ldr	ip, [sp, #68]	; 0x44
   22cf0:	ldr	r3, [sp, #84]	; 0x54
   22cf4:	str	r1, [sp, #12]
   22cf8:	movw	r1, #46068	; 0xb3f4
   22cfc:	add	r3, r3, #2000	; 0x7d0
   22d00:	str	r0, [sp, #4]
   22d04:	str	r3, [sp, #16]
   22d08:	movt	r1, #3
   22d0c:	str	lr, [sp, #8]
   22d10:	mov	r0, r7
   22d14:	str	ip, [sp]
   22d18:	ldr	r3, [sp, #72]	; 0x48
   22d1c:	bl	21f2c <crc32@@Base+0x84d4>
   22d20:	b	22858 <crc32@@Base+0x8e00>
   22d24:	bl	124b8 <__stack_chk_fail@plt>
   22d28:	mov	r0, r7
   22d2c:	movw	r2, #44920	; 0xaf78
   22d30:	movw	r1, #45100	; 0xb02c
   22d34:	movt	r2, #3
   22d38:	movt	r1, #3
   22d3c:	bl	21f2c <crc32@@Base+0x84d4>
   22d40:	ldrh	r3, [r7, #182]	; 0xb6
   22d44:	mov	r0, r7
   22d48:	movw	r2, #44920	; 0xaf78
   22d4c:	movw	r1, #45140	; 0xb054
   22d50:	movt	r2, #3
   22d54:	movt	r1, #3
   22d58:	bl	21f2c <crc32@@Base+0x84d4>
   22d5c:	ldr	r3, [sp, #324]	; 0x144
   22d60:	movw	r2, #44920	; 0xaf78
   22d64:	movw	r1, #45180	; 0xb07c
   22d68:	movt	r2, #3
   22d6c:	movt	r1, #3
   22d70:	mov	r0, r7
   22d74:	bl	21f2c <crc32@@Base+0x84d4>
   22d78:	ldr	r2, [sp, #32]
   22d7c:	ldr	r3, [sp, #316]	; 0x13c
   22d80:	cmp	r3, r2, asr #4
   22d84:	beq	22da4 <crc32@@Base+0x934c>
   22d88:	movw	r2, #44972	; 0xafac
   22d8c:	movw	r1, #46240	; 0xb4a0
   22d90:	movt	r2, #3
   22d94:	movt	r1, #3
   22d98:	mov	r0, r7
   22d9c:	bl	21f2c <crc32@@Base+0x84d4>
   22da0:	b	22858 <crc32@@Base+0x8e00>
   22da4:	mov	r0, r7
   22da8:	movw	r2, #44920	; 0xaf78
   22dac:	movw	r1, #46240	; 0xb4a0
   22db0:	movt	r2, #3
   22db4:	movt	r1, #3
   22db8:	bl	21f2c <crc32@@Base+0x84d4>
   22dbc:	ldrh	r2, [r7, #184]	; 0xb8
   22dc0:	ldrh	r0, [r7, #182]	; 0xb6
   22dc4:	ldrh	r3, [r7, #180]	; 0xb4
   22dc8:	ldrh	r1, [r7, #178]	; 0xb2
   22dcc:	mla	r3, r0, r2, r3
   22dd0:	cmp	r3, r1
   22dd4:	beq	22df8 <crc32@@Base+0x93a0>
   22dd8:	mov	r3, r1
   22ddc:	movw	r2, #44972	; 0xafac
   22de0:	movw	r1, #46280	; 0xb4c8
   22de4:	movt	r2, #3
   22de8:	movt	r1, #3
   22dec:	mov	r0, r7
   22df0:	bl	21f2c <crc32@@Base+0x84d4>
   22df4:	b	22858 <crc32@@Base+0x8e00>
   22df8:	movw	r2, #44920	; 0xaf78
   22dfc:	movw	r1, #46280	; 0xb4c8
   22e00:	movt	r2, #3
   22e04:	movt	r1, #3
   22e08:	mov	r0, r7
   22e0c:	bl	21f2c <crc32@@Base+0x84d4>
   22e10:	ldrh	r3, [r7, #176]	; 0xb0
   22e14:	cmp	r3, #1
   22e18:	beq	22e38 <crc32@@Base+0x93e0>
   22e1c:	movw	r2, #44972	; 0xafac
   22e20:	movw	r1, #46320	; 0xb4f0
   22e24:	movt	r2, #3
   22e28:	movt	r1, #3
   22e2c:	mov	r0, r7
   22e30:	bl	21f2c <crc32@@Base+0x84d4>
   22e34:	b	22858 <crc32@@Base+0x8e00>
   22e38:	mov	r0, r7
   22e3c:	movw	r2, #44920	; 0xaf78
   22e40:	movw	r1, #46320	; 0xb4f0
   22e44:	movt	r2, #3
   22e48:	movt	r1, #3
   22e4c:	bl	21f2c <crc32@@Base+0x84d4>
   22e50:	ldrh	r2, [r7, #184]	; 0xb8
   22e54:	ldrh	ip, [r7, #182]	; 0xb6
   22e58:	ldrh	r0, [r7, #180]	; 0xb4
   22e5c:	ldrh	r3, [r7, #176]	; 0xb0
   22e60:	ldr	r1, [sp, #320]	; 0x140
   22e64:	mla	r2, ip, r2, r0
   22e68:	add	r3, r2, r3, lsl #1
   22e6c:	cmp	r3, r1
   22e70:	beq	22e94 <crc32@@Base+0x943c>
   22e74:	mov	r3, r1
   22e78:	movw	r2, #44972	; 0xafac
   22e7c:	movw	r1, #46360	; 0xb518
   22e80:	movt	r2, #3
   22e84:	movt	r1, #3
   22e88:	mov	r0, r7
   22e8c:	bl	21f2c <crc32@@Base+0x84d4>
   22e90:	b	22858 <crc32@@Base+0x8e00>
   22e94:	mov	r0, r7
   22e98:	movw	r2, #44920	; 0xaf78
   22e9c:	movw	r1, #46360	; 0xb518
   22ea0:	movt	r2, #3
   22ea4:	movt	r1, #3
   22ea8:	bl	21f2c <crc32@@Base+0x84d4>
   22eac:	movw	r1, #46400	; 0xb540
   22eb0:	mov	r0, r7
   22eb4:	movt	r1, #3
   22eb8:	bl	21f2c <crc32@@Base+0x84d4>
   22ebc:	ldrh	r3, [r7, #182]	; 0xb6
   22ec0:	cmp	r3, #0
   22ec4:	bne	22f10 <crc32@@Base+0x94b8>
   22ec8:	b	22f2c <crc32@@Base+0x94d4>
   22ecc:	ldr	r3, [sp, #196]	; 0xc4
   22ed0:	mov	r2, #16
   22ed4:	mov	r1, #1
   22ed8:	cmp	r3, #0
   22edc:	streq	r0, [sp, #196]	; 0xc4
   22ee0:	ldrne	r3, [sp, #200]	; 0xc8
   22ee4:	strne	r0, [r3, #8]
   22ee8:	mov	r3, fp
   22eec:	str	r0, [sp, #200]	; 0xc8
   22ef0:	add	r0, r0, #20
   22ef4:	bl	12488 <fread@plt>
   22ef8:	cmp	r0, #16
   22efc:	bne	235ac <crc32@@Base+0x9b54>
   22f00:	ldrh	r3, [r7, #182]	; 0xb6
   22f04:	add	r4, r4, #1
   22f08:	cmp	r4, r3
   22f0c:	bcs	22f2c <crc32@@Base+0x94d4>
   22f10:	mov	r1, #36	; 0x24
   22f14:	mov	r0, #1
   22f18:	bl	1253c <calloc@plt>
   22f1c:	cmp	r0, #0
   22f20:	bne	22ecc <crc32@@Base+0x9474>
   22f24:	mvn	r4, #11
   22f28:	b	2285c <crc32@@Base+0x8e04>
   22f2c:	mov	r3, fp
   22f30:	mov	r2, #32
   22f34:	mov	r1, #1
   22f38:	add	r0, sp, #252	; 0xfc
   22f3c:	bl	12488 <fread@plt>
   22f40:	cmp	r0, #32
   22f44:	mov	r4, r0
   22f48:	bne	23600 <crc32@@Base+0x9ba8>
   22f4c:	mov	r0, r7
   22f50:	bl	2261c <crc32@@Base+0x8bc4>
   22f54:	mov	r1, #0
   22f58:	mov	r0, r7
   22f5c:	bl	21efc <crc32@@Base+0x84a4>
   22f60:	mov	r2, r4
   22f64:	add	r1, sp, #252	; 0xfc
   22f68:	ldr	r0, [sp, #216]	; 0xd8
   22f6c:	bl	12674 <EVP_DigestUpdate@plt>
   22f70:	mov	r3, #16
   22f74:	add	r2, sp, #168	; 0xa8
   22f78:	add	r1, sp, #268	; 0x10c
   22f7c:	ldr	r0, [sp, #212]	; 0xd4
   22f80:	bl	22538 <crc32@@Base+0x8ae0>
   22f84:	mov	r1, #0
   22f88:	mov	r0, r7
   22f8c:	bl	21efc <crc32@@Base+0x84a4>
   22f90:	ldr	r6, [sp, #196]	; 0xc4
   22f94:	cmp	r6, #0
   22f98:	beq	231e4 <crc32@@Base+0x978c>
   22f9c:	movw	r3, #46860	; 0xb70c
   22fa0:	movw	r2, #44624	; 0xae50
   22fa4:	movt	r3, #3
   22fa8:	movt	r2, #3
   22fac:	str	r3, [sp, #40]	; 0x28
   22fb0:	movw	r3, #45292	; 0xb0ec
   22fb4:	str	r2, [sp, #52]	; 0x34
   22fb8:	movt	r3, #3
   22fbc:	movw	r2, #65196	; 0xfeac
   22fc0:	str	r3, [sp, #48]	; 0x30
   22fc4:	movt	r2, #4
   22fc8:	str	fp, [sp, #28]
   22fcc:	str	r2, [sp, #44]	; 0x2c
   22fd0:	ldr	r3, [r6, #32]
   22fd4:	mov	r0, r7
   22fd8:	ldr	ip, [r6, #28]
   22fdc:	tst	r3, #1
   22fe0:	ldr	r1, [sp, #48]	; 0x30
   22fe4:	add	ip, ip, #1
   22fe8:	ldrbne	r3, [r6, #4]
   22fec:	ldrne	r2, [sp, #52]	; 0x34
   22ff0:	lsl	ip, ip, #4
   22ff4:	orrne	r3, r3, #1
   22ff8:	str	ip, [r6]
   22ffc:	strbne	r3, [r6, #4]
   23000:	strne	r2, [sp, #40]	; 0x28
   23004:	ldr	r2, [r6, #20]
   23008:	ldr	r3, [sp, #40]	; 0x28
   2300c:	str	ip, [sp]
   23010:	bl	21f2c <crc32@@Base+0x84d4>
   23014:	ldr	r3, [r6, #32]
   23018:	bics	r2, r3, #1
   2301c:	beq	2303c <crc32@@Base+0x95e4>
   23020:	ldr	r0, [sp, #44]	; 0x2c
   23024:	movw	r2, #45328	; 0xb110
   23028:	mov	r1, #1
   2302c:	movt	r2, #3
   23030:	ldr	r0, [r0]
   23034:	bl	122d8 <__fprintf_chk@plt>
   23038:	ldr	r3, [r6, #32]
   2303c:	tst	r3, #1
   23040:	beq	23070 <crc32@@Base+0x9618>
   23044:	ldr	r2, [sp, #324]	; 0x144
   23048:	ldr	r3, [r6, #20]
   2304c:	cmp	r2, r3
   23050:	beq	23070 <crc32@@Base+0x9618>
   23054:	ldr	r3, [sp, #44]	; 0x2c
   23058:	movw	r0, #45368	; 0xb138
   2305c:	mov	r2, #59	; 0x3b
   23060:	movt	r0, #3
   23064:	mov	r1, #1
   23068:	ldr	r3, [r3]
   2306c:	bl	1259c <fwrite@plt>
   23070:	mov	r1, #0
   23074:	mov	r0, r7
   23078:	bl	21efc <crc32@@Base+0x84a4>
   2307c:	mov	sl, #0
   23080:	ldr	r3, [r6]
   23084:	cmp	r3, sl
   23088:	bls	231d4 <crc32@@Base+0x977c>
   2308c:	mov	r1, #48	; 0x30
   23090:	mov	r0, #1
   23094:	bl	1253c <calloc@plt>
   23098:	subs	r5, r0, #0
   2309c:	beq	23574 <crc32@@Base+0x9b1c>
   230a0:	ldr	r3, [r6, #12]
   230a4:	add	r8, r5, #32
   230a8:	mov	r2, #16
   230ac:	mov	r1, #1
   230b0:	cmp	r3, #0
   230b4:	mov	r0, r8
   230b8:	streq	r5, [r6, #12]
   230bc:	ldrne	r3, [r6, #16]
   230c0:	strne	r5, [r3, #4]
   230c4:	str	r5, [r6, #16]
   230c8:	ldr	r3, [sp, #28]
   230cc:	bl	12488 <fread@plt>
   230d0:	cmp	r0, #16
   230d4:	mov	r9, r0
   230d8:	bne	23580 <crc32@@Base+0x9b28>
   230dc:	ldr	fp, [sp, #216]	; 0xd8
   230e0:	add	r4, r5, #16
   230e4:	mov	r3, r0
   230e8:	mov	r1, r8
   230ec:	mov	r2, r4
   230f0:	ldr	r0, [sp, #212]	; 0xd4
   230f4:	bl	22538 <crc32@@Base+0x8ae0>
   230f8:	mov	r2, r9
   230fc:	mov	r1, r8
   23100:	mov	r0, fp
   23104:	bl	12674 <EVP_DigestUpdate@plt>
   23108:	add	sl, sl, #16
   2310c:	ldrb	r0, [r5, #16]
   23110:	mov	ip, #90	; 0x5a
   23114:	add	r1, r5, #31
   23118:	mov	r2, #90	; 0x5a
   2311c:	mov	r3, #0
   23120:	strb	ip, [r5, #16]
   23124:	b	2312c <crc32@@Base+0x96d4>
   23128:	ldrb	r2, [r4, #1]!
   2312c:	add	r3, r2, r3
   23130:	cmp	r4, r1
   23134:	uxtb	r3, r3
   23138:	bne	23128 <crc32@@Base+0x96d0>
   2313c:	cmp	r0, r3
   23140:	strb	r0, [r5, #16]
   23144:	ldrb	r3, [r5, #17]
   23148:	beq	234b8 <crc32@@Base+0x9a60>
   2314c:	cmp	r3, #6
   23150:	ldrls	pc, [pc, r3, lsl #2]
   23154:	b	2348c <crc32@@Base+0x9a34>
   23158:	muleq	r2, r4, r4
   2315c:	andeq	r3, r2, r0, asr #8
   23160:	andeq	r3, r2, r0, ror r3
   23164:	andeq	r3, r2, r0, asr #6
   23168:	strdeq	r3, [r2], -r8
   2316c:			; <UNDEFINED> instruction: 0x000232b0
   23170:	andeq	r3, r2, r4, ror r1
   23174:	movw	r4, #44636	; 0xae5c
   23178:	movt	r4, #3
   2317c:	mov	r1, #0
   23180:	ldr	r0, [r5, #28]
   23184:	mov	r3, r1
   23188:	ldr	r2, [pc, #1240]	; 23668 <crc32@@Base+0x9c10>
   2318c:	b	23194 <crc32@@Base+0x973c>
   23190:	ldrb	r1, [r2, #-12]
   23194:	cmp	r0, r1
   23198:	beq	23548 <crc32@@Base+0x9af0>
   2319c:	add	r3, r3, #1
   231a0:	add	r2, r2, #12
   231a4:	cmp	r3, #9
   231a8:	bne	23190 <crc32@@Base+0x9738>
   231ac:	ldr	r0, [sp, #44]	; 0x2c
   231b0:	mov	r3, r4
   231b4:	movw	r2, #45776	; 0xb2d0
   231b8:	mov	r1, #1
   231bc:	movt	r2, #3
   231c0:	ldr	r0, [r0]
   231c4:	bl	122d8 <__fprintf_chk@plt>
   231c8:	ldr	r3, [r6]
   231cc:	cmp	r3, sl
   231d0:	bhi	2308c <crc32@@Base+0x9634>
   231d4:	ldr	r6, [r6, #8]
   231d8:	cmp	r6, #0
   231dc:	bne	22fd0 <crc32@@Base+0x9578>
   231e0:	ldr	fp, [sp, #28]
   231e4:	mov	r0, r7
   231e8:	movw	r1, #46452	; 0xb574
   231ec:	movt	r1, #3
   231f0:	bl	21f2c <crc32@@Base+0x84d4>
   231f4:	mov	r3, fp
   231f8:	mov	r2, #32
   231fc:	mov	r1, #1
   23200:	add	r0, sp, #388	; 0x184
   23204:	bl	12488 <fread@plt>
   23208:	cmp	r0, #32
   2320c:	mov	r4, r0
   23210:	bne	23600 <crc32@@Base+0x9ba8>
   23214:	mov	r0, fp
   23218:	bl	12548 <ftell@plt>
   2321c:	ldr	r3, [sp, #32]
   23220:	cmp	r3, r0
   23224:	bne	23628 <crc32@@Base+0x9bd0>
   23228:	mov	r2, #0
   2322c:	add	r1, sp, #220	; 0xdc
   23230:	ldr	r0, [sp, #216]	; 0xd8
   23234:	bl	12560 <EVP_DigestFinal@plt>
   23238:	ldr	r5, [sp, #216]	; 0xd8
   2323c:	mov	r0, r5
   23240:	bl	124e8 <EVP_MD_CTX_cleanup@plt>
   23244:	mov	r0, r5
   23248:	bl	124dc <CRYPTO_free@plt>
   2324c:	mov	r1, #0
   23250:	mov	r0, r7
   23254:	bl	21efc <crc32@@Base+0x84a4>
   23258:	add	r2, sp, #388	; 0x184
   2325c:	mov	r3, r4
   23260:	ldr	r0, [sp, #212]	; 0xd4
   23264:	mov	r1, r2
   23268:	bl	22538 <crc32@@Base+0x8ae0>
   2326c:	add	r1, sp, #220	; 0xdc
   23270:	add	r0, sp, #388	; 0x184
   23274:	mov	r2, #20
   23278:	bl	126ec <memcmp@plt>
   2327c:	subs	r4, r0, #0
   23280:	bne	23650 <crc32@@Base+0x9bf8>
   23284:	mov	r0, r7
   23288:	movw	r1, #45880	; 0xb338
   2328c:	movt	r1, #3
   23290:	bl	21f2c <crc32@@Base+0x84d4>
   23294:	movw	r1, #44864	; 0xaf40
   23298:	mov	r0, r7
   2329c:	movt	r1, #3
   232a0:	bl	21f2c <crc32@@Base+0x84d4>
   232a4:	movw	r2, #44688	; 0xae90
   232a8:	movt	r2, #3
   232ac:	b	22874 <crc32@@Base+0x8e1c>
   232b0:	movw	r2, #44636	; 0xae5c
   232b4:	movt	r2, #3
   232b8:	ldrh	r0, [r5, #18]
   232bc:	movw	r1, #44672	; 0xae80
   232c0:	ldr	r3, [r5, #20]
   232c4:	movt	r1, #3
   232c8:	str	r2, [sp, #4]
   232cc:	tst	r0, #1
   232d0:	ldr	r0, [r5, #28]
   232d4:	movw	r2, #46860	; 0xb70c
   232d8:	movt	r2, #3
   232dc:	movne	r2, r1
   232e0:	movw	r1, #45720	; 0xb298
   232e4:	movt	r1, #3
   232e8:	str	r0, [sp]
   232ec:	mov	r0, r7
   232f0:	bl	21f2c <crc32@@Base+0x84d4>
   232f4:	b	23080 <crc32@@Base+0x9628>
   232f8:	movw	r2, #44636	; 0xae5c
   232fc:	movt	r2, #3
   23300:	ldrh	r0, [r5, #18]
   23304:	movw	r1, #44672	; 0xae80
   23308:	ldr	r3, [r5, #20]
   2330c:	movt	r1, #3
   23310:	str	r2, [sp, #4]
   23314:	tst	r0, #1
   23318:	ldr	r0, [r5, #28]
   2331c:	movw	r2, #46860	; 0xb70c
   23320:	movt	r2, #3
   23324:	movne	r2, r1
   23328:	movw	r1, #45680	; 0xb270
   2332c:	movt	r1, #3
   23330:	str	r0, [sp]
   23334:	mov	r0, r7
   23338:	bl	21f2c <crc32@@Base+0x84d4>
   2333c:	b	23080 <crc32@@Base+0x9628>
   23340:	movw	r0, #44636	; 0xae5c
   23344:	movt	r0, #3
   23348:	ldr	r3, [r5, #24]
   2334c:	movw	r1, #45624	; 0xb238
   23350:	ldr	r2, [r5, #20]
   23354:	movt	r1, #3
   23358:	str	r0, [sp, #4]
   2335c:	mov	r0, r7
   23360:	ldr	ip, [r5, #28]
   23364:	str	ip, [sp]
   23368:	bl	21f2c <crc32@@Base+0x84d4>
   2336c:	b	23080 <crc32@@Base+0x9628>
   23370:	movw	r0, #44636	; 0xae5c
   23374:	movt	r0, #3
   23378:	ldr	r3, [r5, #24]
   2337c:	movw	r1, #45492	; 0xb1b4
   23380:	ldr	r2, [r5, #20]
   23384:	movt	r1, #3
   23388:	str	r0, [sp]
   2338c:	mov	r0, r7
   23390:	bl	21f2c <crc32@@Base+0x84d4>
   23394:	ldr	r3, [r5, #24]
   23398:	add	r4, r3, #15
   2339c:	bic	r4, r4, #15
   233a0:	str	r3, [r5, #12]
   233a4:	mov	r0, r4
   233a8:	bl	125cc <malloc@plt>
   233ac:	cmp	r0, #0
   233b0:	str	r0, [r5, #8]
   233b4:	beq	2348c <crc32@@Base+0x9a34>
   233b8:	ldr	r3, [sp, #28]
   233bc:	mov	r2, r4
   233c0:	mov	r1, #1
   233c4:	bl	12488 <fread@plt>
   233c8:	cmp	r4, r0
   233cc:	bne	235d4 <crc32@@Base+0x9b7c>
   233d0:	mov	r2, r4
   233d4:	ldr	r1, [r5, #8]
   233d8:	ldr	r0, [sp, #216]	; 0xd8
   233dc:	add	sl, sl, r4
   233e0:	bl	12674 <EVP_DigestUpdate@plt>
   233e4:	ldr	r2, [r5, #8]
   233e8:	mov	r3, r4
   233ec:	ldr	r0, [sp, #212]	; 0xd4
   233f0:	mov	r1, r2
   233f4:	bl	22538 <crc32@@Base+0x8ae0>
   233f8:	mov	r2, r4
   233fc:	ldr	r1, [r5, #8]
   23400:	mov	r0, #0
   23404:	ldr	r4, [r5, #28]
   23408:	bl	2560c <crc32@@Base+0xbbb4>
   2340c:	cmp	r4, r0
   23410:	beq	23080 <crc32@@Base+0x9628>
   23414:	movw	r3, #65196	; 0xfeac
   23418:	movt	r3, #4
   2341c:	movw	r0, #45576	; 0xb208
   23420:	mov	r2, #44	; 0x2c
   23424:	ldr	r3, [r3]
   23428:	mov	r1, #1
   2342c:	movt	r0, #3
   23430:	ldr	fp, [sp, #28]
   23434:	mvn	r4, #21
   23438:	bl	1259c <fwrite@plt>
   2343c:	b	2285c <crc32@@Base+0x8e04>
   23440:	movw	r3, #44636	; 0xae5c
   23444:	movt	r3, #3
   23448:	mvn	r4, #21
   2344c:	ldrh	r0, [r5, #18]
   23450:	movw	r1, #44664	; 0xae78
   23454:	movt	r1, #3
   23458:	movw	r2, #46860	; 0xb70c
   2345c:	tst	r0, #1
   23460:	movt	r2, #3
   23464:	mov	r0, r7
   23468:	movne	r2, r1
   2346c:	movw	r1, #45476	; 0xb1a4
   23470:	movt	r1, #3
   23474:	bl	21f2c <crc32@@Base+0x84d4>
   23478:	mov	r1, #0
   2347c:	mov	r0, r7
   23480:	bl	21efc <crc32@@Base+0x84a4>
   23484:	cmp	r4, #0
   23488:	beq	23080 <crc32@@Base+0x9628>
   2348c:	ldr	fp, [sp, #28]
   23490:	b	22858 <crc32@@Base+0x8e00>
   23494:	movw	r2, #44636	; 0xae5c
   23498:	movw	r1, #45464	; 0xb198
   2349c:	movt	r2, #3
   234a0:	movt	r1, #3
   234a4:	mov	r0, r7
   234a8:	ldr	fp, [sp, #28]
   234ac:	mvn	r4, #21
   234b0:	bl	21f2c <crc32@@Base+0x84d4>
   234b4:	b	2285c <crc32@@Base+0x8e04>
   234b8:	cmp	r3, #6
   234bc:	ldrls	pc, [pc, r3, lsl #2]
   234c0:	b	23080 <crc32@@Base+0x9628>
   234c4:	andeq	r3, r2, ip, lsr #10
   234c8:	andeq	r3, r2, ip, lsl r5
   234cc:	andeq	r3, r2, r0, lsl r5
   234d0:	andeq	r3, r2, r4, lsl #10
   234d4:	strdeq	r3, [r2], -r8
   234d8:	andeq	r3, r2, ip, ror #9
   234dc:	andeq	r3, r2, r0, ror #9
   234e0:	movw	r4, #44652	; 0xae6c
   234e4:	movt	r4, #3
   234e8:	b	2317c <crc32@@Base+0x9724>
   234ec:	movw	r2, #44652	; 0xae6c
   234f0:	movt	r2, #3
   234f4:	b	232b8 <crc32@@Base+0x9860>
   234f8:	movw	r2, #44652	; 0xae6c
   234fc:	movt	r2, #3
   23500:	b	23300 <crc32@@Base+0x98a8>
   23504:	movw	r0, #44652	; 0xae6c
   23508:	movt	r0, #3
   2350c:	b	23348 <crc32@@Base+0x98f0>
   23510:	movw	r0, #44652	; 0xae6c
   23514:	movt	r0, #3
   23518:	b	23378 <crc32@@Base+0x9920>
   2351c:	movw	r3, #44652	; 0xae6c
   23520:	mov	r4, #0
   23524:	movt	r3, #3
   23528:	b	2344c <crc32@@Base+0x99f4>
   2352c:	movw	r2, #44652	; 0xae6c
   23530:	movw	r1, #45464	; 0xb198
   23534:	movt	r2, #3
   23538:	movt	r1, #3
   2353c:	mov	r0, r7
   23540:	bl	21f2c <crc32@@Base+0x84d4>
   23544:	b	23080 <crc32@@Base+0x9628>
   23548:	mov	r2, #12
   2354c:	movw	ip, #44032	; 0xac00
   23550:	mul	r2, r2, r3
   23554:	movt	ip, #3
   23558:	movw	r1, #45760	; 0xb2c0
   2355c:	mov	r3, r4
   23560:	movt	r1, #3
   23564:	mov	r0, r7
   23568:	ldr	r2, [ip, r2]
   2356c:	bl	21f2c <crc32@@Base+0x84d4>
   23570:	b	231ac <crc32@@Base+0x9754>
   23574:	ldr	fp, [sp, #28]
   23578:	mvn	r4, #11
   2357c:	b	2285c <crc32@@Base+0x8e04>
   23580:	movw	r3, #65196	; 0xfeac
   23584:	movt	r3, #4
   23588:	movw	r0, #45428	; 0xb174
   2358c:	mov	r2, #34	; 0x22
   23590:	ldr	r3, [r3]
   23594:	mov	r1, #1
   23598:	movt	r0, #3
   2359c:	ldr	fp, [sp, #28]
   235a0:	mvn	r4, #21
   235a4:	bl	1259c <fwrite@plt>
   235a8:	b	2285c <crc32@@Base+0x8e04>
   235ac:	movw	r3, #65196	; 0xfeac
   235b0:	movt	r3, #4
   235b4:	movw	r0, #45220	; 0xb0a4
   235b8:	mov	r2, #34	; 0x22
   235bc:	ldr	r3, [r3]
   235c0:	mov	r1, #1
   235c4:	movt	r0, #3
   235c8:	mvn	r4, #21
   235cc:	bl	1259c <fwrite@plt>
   235d0:	b	2285c <crc32@@Base+0x8e04>
   235d4:	movw	r3, #65196	; 0xfeac
   235d8:	movt	r3, #4
   235dc:	movw	r0, #45532	; 0xb1dc
   235e0:	mov	r2, #40	; 0x28
   235e4:	ldr	r3, [r3]
   235e8:	mov	r1, #1
   235ec:	movt	r0, #3
   235f0:	ldr	fp, [sp, #28]
   235f4:	mvn	r4, #21
   235f8:	bl	1259c <fwrite@plt>
   235fc:	b	2285c <crc32@@Base+0x8e04>
   23600:	movw	r3, #65196	; 0xfeac
   23604:	movt	r3, #4
   23608:	movw	r0, #45256	; 0xb0c8
   2360c:	mov	r2, #34	; 0x22
   23610:	ldr	r3, [r3]
   23614:	mov	r1, #1
   23618:	movt	r0, #3
   2361c:	mvn	r4, #21
   23620:	bl	1259c <fwrite@plt>
   23624:	b	2285c <crc32@@Base+0x8e04>
   23628:	movw	r3, #65196	; 0xfeac
   2362c:	movt	r3, #4
   23630:	movw	r0, #45800	; 0xb2e8
   23634:	mov	r2, #35	; 0x23
   23638:	ldr	r3, [r3]
   2363c:	mov	r1, #1
   23640:	movt	r0, #3
   23644:	mvn	r4, #21
   23648:	bl	1259c <fwrite@plt>
   2364c:	b	2285c <crc32@@Base+0x8e04>
   23650:	movw	r1, #45836	; 0xb30c
   23654:	mov	r0, r7
   23658:	movt	r1, #3
   2365c:	mvn	r4, #21
   23660:	bl	21f2c <crc32@@Base+0x84d4>
   23664:	b	2285c <crc32@@Base+0x8e04>
   23668:	andeq	sl, r3, r4, lsl ip
   2366c:	movw	r3, #43508	; 0xa9f4
   23670:	movt	r3, #30
   23674:	ldr	r0, [r3]
   23678:	cmp	r0, #0
   2367c:	bxeq	lr
   23680:	mov	r1, #0
   23684:	b	226b0 <crc32@@Base+0x8c58>
   23688:	cmp	r0, #0
   2368c:	beq	2369c <crc32@@Base+0x9c44>
   23690:	ldrb	r3, [r0, #20]
   23694:	cmp	r3, #83	; 0x53
   23698:	beq	236a4 <crc32@@Base+0x9c4c>
   2369c:	mvn	r0, #21
   236a0:	bx	lr
   236a4:	ldrb	r3, [r0, #21]
   236a8:	cmp	r3, #84	; 0x54
   236ac:	bne	2369c <crc32@@Base+0x9c44>
   236b0:	ldrb	r3, [r0, #22]
   236b4:	cmp	r3, #77	; 0x4d
   236b8:	bne	2369c <crc32@@Base+0x9c44>
   236bc:	ldrb	r3, [r0, #23]
   236c0:	cmp	r3, #80	; 0x50
   236c4:	bne	2369c <crc32@@Base+0x9c44>
   236c8:	ldrb	r3, [r0, #52]	; 0x34
   236cc:	cmp	r3, #115	; 0x73
   236d0:	bne	2369c <crc32@@Base+0x9c44>
   236d4:	ldrb	r3, [r0, #53]	; 0x35
   236d8:	cmp	r3, #103	; 0x67
   236dc:	bne	2369c <crc32@@Base+0x9c44>
   236e0:	ldrb	r3, [r0, #54]	; 0x36
   236e4:	cmp	r3, #116	; 0x74
   236e8:	bne	2369c <crc32@@Base+0x9c44>
   236ec:	ldrb	r3, [r0, #55]	; 0x37
   236f0:	cmp	r3, #108	; 0x6c
   236f4:	bne	2369c <crc32@@Base+0x9c44>
   236f8:	ldr	r2, [r2, #76]	; 0x4c
   236fc:	movw	r3, #43508	; 0xa9f4
   23700:	movt	r3, #30
   23704:	mov	r1, #1
   23708:	mov	r0, r2
   2370c:	str	r2, [r3]
   23710:	b	226b0 <crc32@@Base+0x8c58>
   23714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23718:	movw	r3, #61168	; 0xeef0
   2371c:	sub	sp, sp, #340	; 0x154
   23720:	movt	r3, #4
   23724:	mov	r5, r0
   23728:	mov	r2, #232	; 0xe8
   2372c:	str	r3, [sp, #8]
   23730:	mov	r4, #1
   23734:	ldr	r3, [r3]
   23738:	add	r0, sp, #96	; 0x60
   2373c:	str	r1, [sp, #16]
   23740:	mov	r1, #0
   23744:	str	r4, [r5, #32]
   23748:	str	r3, [sp, #332]	; 0x14c
   2374c:	bl	12308 <memset@plt>
   23750:	ldr	r3, [r5, #64]	; 0x40
   23754:	movw	r1, #50292	; 0xc474
   23758:	ldr	ip, [r5, #76]	; 0x4c
   2375c:	movt	r1, #3
   23760:	mov	r2, #0
   23764:	str	r2, [sp, #32]
   23768:	mov	r0, r3
   2376c:	str	r3, [sp, #108]	; 0x6c
   23770:	str	ip, [sp, #104]	; 0x68
   23774:	bl	12350 <fopen@plt>
   23778:	subs	r5, r0, #0
   2377c:	beq	24b2c <crc32@@Base+0xb0d4>
   23780:	movw	r8, #65196	; 0xfeac
   23784:	movw	fp, #46548	; 0xb5d4
   23788:	movt	r8, #4
   2378c:	movt	fp, #3
   23790:	movw	r3, #46524	; 0xb5bc
   23794:	movt	r3, #3
   23798:	str	r3, [sp, #12]
   2379c:	mov	r3, r5
   237a0:	mov	r2, #10
   237a4:	add	r1, sp, #36	; 0x24
   237a8:	add	r0, sp, #32
   237ac:	bl	12158 <__getdelim@plt>
   237b0:	cmp	r0, #0
   237b4:	ble	23a28 <crc32@@Base+0x9fd0>
   237b8:	ldr	r3, [sp, #32]
   237bc:	mov	r2, #0
   237c0:	add	r3, r3, r0
   237c4:	strb	r2, [r3, #-1]
   237c8:	ldr	r7, [sp, #32]
   237cc:	str	r0, [sp, #56]	; 0x38
   237d0:	str	r4, [sp, #60]	; 0x3c
   237d4:	str	r7, [sp, #52]	; 0x34
   237d8:	ldrb	r3, [r7]
   237dc:	cmp	r3, #32
   237e0:	bne	237f0 <crc32@@Base+0x9d98>
   237e4:	ldrb	r3, [r7, #1]!
   237e8:	cmp	r3, #32
   237ec:	beq	237e4 <crc32@@Base+0x9d8c>
   237f0:	cmp	r3, #0
   237f4:	beq	246d4 <crc32@@Base+0xac7c>
   237f8:	add	r6, r7, #1
   237fc:	mov	r3, r6
   23800:	b	2380c <crc32@@Base+0x9db4>
   23804:	cmp	r2, #32
   23808:	beq	23a04 <crc32@@Base+0x9fac>
   2380c:	ldrb	r2, [r3]
   23810:	mov	sl, r3
   23814:	add	r3, r3, #1
   23818:	cmp	r2, #0
   2381c:	bne	23804 <crc32@@Base+0x9dac>
   23820:	ldrb	r3, [r7]
   23824:	cmp	r3, #0
   23828:	beq	23fd4 <crc32@@Base+0xa57c>
   2382c:	mov	r1, fp
   23830:	mov	r0, r7
   23834:	str	sl, [sp, #52]	; 0x34
   23838:	bl	12680 <strcmp@plt>
   2383c:	cmp	r0, #0
   23840:	beq	23a14 <crc32@@Base+0x9fbc>
   23844:	ldrb	r9, [r7]
   23848:	cmp	r9, #68	; 0x44
   2384c:	bne	23900 <crc32@@Base+0x9ea8>
   23850:	ldrb	r3, [r7, #1]
   23854:	cmp	r3, #67	; 0x43
   23858:	bne	23900 <crc32@@Base+0x9ea8>
   2385c:	ldrb	r3, [r7, #2]
   23860:	cmp	r3, #68	; 0x44
   23864:	bne	23900 <crc32@@Base+0x9ea8>
   23868:	ldrb	r0, [r7, #3]
   2386c:	cmp	r0, #0
   23870:	bne	23900 <crc32@@Base+0x9ea8>
   23874:	ldrb	r3, [sp, #96]	; 0x60
   23878:	mov	r1, #20
   2387c:	bfi	r3, r0, #0, #1
   23880:	mov	r0, #1
   23884:	uxtb	r3, r3
   23888:	orr	r3, r3, #2
   2388c:	strb	r3, [sp, #96]	; 0x60
   23890:	bl	1253c <calloc@plt>
   23894:	subs	r6, r0, #0
   23898:	beq	23a20 <crc32@@Base+0x9fc8>
   2389c:	mov	r2, #4
   238a0:	add	r1, r6, #12
   238a4:	add	r0, r6, #8
   238a8:	bl	220b0 <crc32@@Base+0x8658>
   238ac:	cmp	r0, #0
   238b0:	bne	24200 <crc32@@Base+0xa7a8>
   238b4:	movw	r1, #32548	; 0x7f24
   238b8:	ldr	r0, [sp, #52]	; 0x34
   238bc:	movt	r1, #3
   238c0:	bl	1229c <strtok@plt>
   238c4:	cmp	r0, #0
   238c8:	beq	241e8 <crc32@@Base+0xa790>
   238cc:	add	r1, sp, #48	; 0x30
   238d0:	bl	21d5c <crc32@@Base+0x8304>
   238d4:	cmp	r0, #0
   238d8:	bne	2465c <crc32@@Base+0xac04>
   238dc:	ldr	r2, [sp, #148]	; 0x94
   238e0:	ldr	r3, [sp, #48]	; 0x30
   238e4:	cmp	r2, #0
   238e8:	streq	r6, [sp, #148]	; 0x94
   238ec:	str	r3, [r6, #4]
   238f0:	ldrne	r3, [sp, #152]	; 0x98
   238f4:	strne	r6, [r3]
   238f8:	str	r6, [sp, #152]	; 0x98
   238fc:	b	23a20 <crc32@@Base+0x9fc8>
   23900:	movw	r1, #46640	; 0xb630
   23904:	mov	r0, r7
   23908:	movt	r1, #3
   2390c:	bl	12680 <strcmp@plt>
   23910:	ldrb	r3, [sp, #96]	; 0x60
   23914:	subs	ip, r0, #0
   23918:	beq	23fec <crc32@@Base+0xa594>
   2391c:	tst	r3, #3
   23920:	beq	24930 <crc32@@Base+0xaed8>
   23924:	tst	r3, #1
   23928:	beq	23f6c <crc32@@Base+0xa514>
   2392c:	cmp	r9, #78	; 0x4e
   23930:	beq	24058 <crc32@@Base+0xa600>
   23934:	cmp	r9, #84	; 0x54
   23938:	bne	240c0 <crc32@@Base+0xa668>
   2393c:	ldrb	r3, [r7, #1]
   23940:	cmp	r3, #65	; 0x41
   23944:	bne	240c0 <crc32@@Base+0xa668>
   23948:	ldrb	r3, [r7, #2]
   2394c:	cmp	r3, #71	; 0x47
   23950:	bne	240c0 <crc32@@Base+0xa668>
   23954:	ldrb	r3, [r7, #3]
   23958:	cmp	r3, #0
   2395c:	bne	240c0 <crc32@@Base+0xa668>
   23960:	mov	r1, #48	; 0x30
   23964:	mov	r0, #1
   23968:	ldr	r7, [sp, #144]	; 0x90
   2396c:	bl	1253c <calloc@plt>
   23970:	subs	r6, r0, #0
   23974:	beq	23a20 <crc32@@Base+0x9fc8>
   23978:	mov	r0, sl
   2397c:	movw	r1, #32548	; 0x7f24
   23980:	movt	r1, #3
   23984:	bl	1229c <strtok@plt>
   23988:	cmp	r0, #0
   2398c:	beq	239a8 <crc32@@Base+0x9f50>
   23990:	movw	r1, #44664	; 0xae78
   23994:	movt	r1, #3
   23998:	bl	12680 <strcmp@plt>
   2399c:	cmp	r0, #0
   239a0:	moveq	r3, #1
   239a4:	strheq	r3, [r6, #18]
   239a8:	movw	r3, #346	; 0x15a
   239ac:	strh	r3, [r6, #16]
   239b0:	ldr	r1, [r7, #12]
   239b4:	mov	r2, #16
   239b8:	ldrb	r3, [sp, #96]	; 0x60
   239bc:	cmp	r1, #0
   239c0:	str	r2, [r6]
   239c4:	and	r3, r3, #1
   239c8:	beq	24888 <crc32@@Base+0xae30>
   239cc:	ldr	r2, [r7, #16]
   239d0:	cmp	r3, #0
   239d4:	str	r6, [r2, #4]
   239d8:	str	r6, [r7, #16]
   239dc:	beq	23a20 <crc32@@Base+0x9fc8>
   239e0:	ldr	r6, [sp, #144]	; 0x90
   239e4:	ldr	r3, [r6, #16]
   239e8:	ldr	r3, [r3]
   239ec:	ldr	r2, [r6]
   239f0:	add	r3, r3, r2
   239f4:	str	r3, [r6]
   239f8:	lsr	r3, r3, #4
   239fc:	str	r3, [r6, #28]
   23a00:	b	23a20 <crc32@@Base+0x9fc8>
   23a04:	mov	r1, #0
   23a08:	strb	r1, [sl]
   23a0c:	mov	sl, r3
   23a10:	b	23820 <crc32@@Base+0x9dc8>
   23a14:	ldrb	r3, [sp, #96]	; 0x60
   23a18:	orr	r3, r3, #4
   23a1c:	strb	r3, [sp, #96]	; 0x60
   23a20:	add	r4, r4, #1
   23a24:	b	2379c <crc32@@Base+0x9d44>
   23a28:	ldr	r0, [sp, #32]
   23a2c:	mov	r6, #0
   23a30:	bl	1214c <free@plt>
   23a34:	mov	r0, r5
   23a38:	bl	12620 <fclose@plt>
   23a3c:	add	lr, sp, #304	; 0x130
   23a40:	movw	r3, #21587	; 0x5453
   23a44:	movt	r3, #20557	; 0x504d
   23a48:	str	r3, [sp, #252]	; 0xfc
   23a4c:	movw	r3, #26483	; 0x6773
   23a50:	movt	r3, #27764	; 0x6c74
   23a54:	str	r3, [sp, #284]	; 0x11c
   23a58:	movw	r3, #39177	; 0x9909
   23a5c:	movt	r3, #65535	; 0xffff
   23a60:	strh	r3, [lr]
   23a64:	add	lr, sp, #308	; 0x134
   23a68:	add	ip, sp, #320	; 0x140
   23a6c:	mov	r1, r6
   23a70:	strh	r3, [lr]
   23a74:	add	lr, sp, #312	; 0x138
   23a78:	strh	r6, [ip]
   23a7c:	add	ip, sp, #296	; 0x128
   23a80:	strh	r3, [lr]
   23a84:	add	lr, sp, #316	; 0x13c
   23a88:	strh	r3, [ip]
   23a8c:	add	ip, sp, #300	; 0x12c
   23a90:	strh	r3, [lr]
   23a94:	add	lr, sp, #256	; 0x100
   23a98:	strh	r3, [ip]
   23a9c:	movw	ip, #257	; 0x101
   23aa0:	strh	ip, [lr]
   23aa4:	add	ip, sp, #276	; 0x114
   23aa8:	mov	r3, #6
   23aac:	mov	r2, #44	; 0x2c
   23ab0:	strh	r3, [ip]
   23ab4:	add	r3, sp, #280	; 0x118
   23ab8:	mov	r5, #1
   23abc:	add	r0, sp, #52	; 0x34
   23ac0:	strh	r5, [r3]
   23ac4:	bl	12308 <memset@plt>
   23ac8:	add	r0, sp, #52	; 0x34
   23acc:	mov	r3, #100	; 0x64
   23ad0:	str	r5, [sp, #80]	; 0x50
   23ad4:	str	r3, [sp, #72]	; 0x48
   23ad8:	bl	12728 <mktime@plt>
   23adc:	mov	r4, r0
   23ae0:	mov	r0, r6
   23ae4:	bl	12698 <time@plt>
   23ae8:	add	lr, sp, #272	; 0x110
   23aec:	movw	r2, #16960	; 0x4240
   23af0:	movt	r2, #15
   23af4:	ldrb	r3, [sp, #96]	; 0x60
   23af8:	ldr	ip, [sp, #128]	; 0x80
   23afc:	strh	r5, [lr]
   23b00:	add	r5, sp, #276	; 0x114
   23b04:	add	r5, r5, #2
   23b08:	ldr	r1, [sp, #140]	; 0x8c
   23b0c:	add	lr, sp, #276	; 0x114
   23b10:	strh	ip, [r5]
   23b14:	add	r5, sp, #256	; 0x100
   23b18:	cmp	r1, r6
   23b1c:	add	r5, r5, #2
   23b20:	ldrh	lr, [lr]
   23b24:	ubfx	r3, r3, #2, #1
   23b28:	strh	r3, [r5]
   23b2c:	add	r5, lr, #2
   23b30:	str	r5, [sp, #260]	; 0x104
   23b34:	sub	r0, r0, r4
   23b38:	mul	r2, r2, r0
   23b3c:	add	r0, sp, #288	; 0x120
   23b40:	asr	r3, r2, #31
   23b44:	strd	r2, [r0]
   23b48:	beq	23b64 <crc32@@Base+0xa10c>
   23b4c:	ldr	r3, [r1]
   23b50:	ldr	r1, [r1, #8]
   23b54:	cmp	r1, #0
   23b58:	add	r5, r5, r3, lsr #4
   23b5c:	bne	23b4c <crc32@@Base+0xa0f4>
   23b60:	str	r5, [sp, #260]	; 0x104
   23b64:	ldrb	r3, [sp, #136]	; 0x88
   23b68:	tst	r3, #1
   23b6c:	beq	24bf0 <crc32@@Base+0xb198>
   23b70:	add	r3, sp, #280	; 0x118
   23b74:	uxth	ip, ip
   23b78:	ldr	r2, [sp, #260]	; 0x104
   23b7c:	ldrh	r3, [r3]
   23b80:	add	r2, r2, #2
   23b84:	ldr	r1, [sp, #132]	; 0x84
   23b88:	mul	ip, r3, ip
   23b8c:	str	r1, [sp, #268]	; 0x10c
   23b90:	add	r3, lr, ip
   23b94:	add	ip, ip, r2
   23b98:	add	r2, sp, #272	; 0x110
   23b9c:	str	ip, [sp, #260]	; 0x104
   23ba0:	add	r2, r2, #2
   23ba4:	uxth	r3, r3
   23ba8:	strh	r3, [r2]
   23bac:	add	r3, r3, #2
   23bb0:	str	r3, [sp, #264]	; 0x108
   23bb4:	bl	22670 <crc32@@Base+0x8c18>
   23bb8:	mov	r4, r0
   23bbc:	bl	12230 <EVP_sha1@plt>
   23bc0:	mov	r1, r0
   23bc4:	mov	r0, r4
   23bc8:	bl	120a4 <EVP_DigestInit@plt>
   23bcc:	mov	r2, #76	; 0x4c
   23bd0:	add	r1, sp, #252	; 0xfc
   23bd4:	mov	r0, r4
   23bd8:	bl	12674 <EVP_DigestUpdate@plt>
   23bdc:	add	r1, sp, #232	; 0xe8
   23be0:	mov	r2, #0
   23be4:	mov	r0, r4
   23be8:	bl	12560 <EVP_DigestFinal@plt>
   23bec:	mov	r0, r4
   23bf0:	bl	124e8 <EVP_MD_CTX_cleanup@plt>
   23bf4:	mov	r0, r4
   23bf8:	bl	124dc <CRYPTO_free@plt>
   23bfc:	ldr	lr, [sp, #140]	; 0x8c
   23c00:	ldr	r5, [sp, #264]	; 0x108
   23c04:	cmp	lr, #0
   23c08:	beq	23c8c <crc32@@Base+0xa234>
   23c0c:	ldr	ip, [lr, #12]
   23c10:	add	r2, r5, #1
   23c14:	ldr	r3, [lr, #28]
   23c18:	cmp	ip, #0
   23c1c:	str	r2, [lr, #24]
   23c20:	sub	r4, r3, #1
   23c24:	add	r5, r5, r3
   23c28:	str	r4, [lr, #28]
   23c2c:	beq	23c80 <crc32@@Base+0xa228>
   23c30:	ldrb	r3, [ip, #17]
   23c34:	add	r0, ip, #16
   23c38:	add	r0, r0, #15
   23c3c:	cmp	r3, #1
   23c40:	ldreq	r2, [lr, #20]
   23c44:	ldreq	r3, [lr, #32]
   23c48:	streq	r4, [ip, #24]
   23c4c:	streq	r2, [ip, #20]
   23c50:	add	r2, ip, #15
   23c54:	streq	r3, [ip, #28]
   23c58:	mov	r3, #0
   23c5c:	ldrb	r1, [r2, #1]!
   23c60:	add	r3, r3, r1
   23c64:	cmp	r2, r0
   23c68:	uxtb	r3, r3
   23c6c:	bne	23c5c <crc32@@Base+0xa204>
   23c70:	strb	r3, [ip, #16]
   23c74:	ldr	ip, [ip, #4]
   23c78:	cmp	ip, #0
   23c7c:	bne	23c30 <crc32@@Base+0xa1d8>
   23c80:	ldr	lr, [lr, #8]
   23c84:	cmp	lr, #0
   23c88:	bne	23c0c <crc32@@Base+0xa1b4>
   23c8c:	bl	22670 <crc32@@Base+0x8c18>
   23c90:	mov	r4, r0
   23c94:	str	r0, [sp, #160]	; 0xa0
   23c98:	bl	12230 <EVP_sha1@plt>
   23c9c:	mov	r1, r0
   23ca0:	mov	r0, r4
   23ca4:	bl	120a4 <EVP_DigestInit@plt>
   23ca8:	mov	r2, #1
   23cac:	mov	r1, #0
   23cb0:	add	r0, sp, #96	; 0x60
   23cb4:	bl	21e84 <crc32@@Base+0x842c>
   23cb8:	add	r0, sp, #96	; 0x60
   23cbc:	bl	225e8 <crc32@@Base+0x8b90>
   23cc0:	add	r0, sp, #96	; 0x60
   23cc4:	bl	2261c <crc32@@Base+0x8bc4>
   23cc8:	mov	r1, #1
   23ccc:	add	r0, sp, #96	; 0x60
   23cd0:	bl	21efc <crc32@@Base+0x84a4>
   23cd4:	ldr	r4, [sp, #160]	; 0xa0
   23cd8:	mov	r3, #16
   23cdc:	add	r2, sp, #212	; 0xd4
   23ce0:	add	r1, sp, #112	; 0x70
   23ce4:	ldr	r0, [sp, #156]	; 0x9c
   23ce8:	bl	22538 <crc32@@Base+0x8ae0>
   23cec:	mov	r0, r4
   23cf0:	add	r1, sp, #196	; 0xc4
   23cf4:	mov	r2, #32
   23cf8:	bl	12674 <EVP_DigestUpdate@plt>
   23cfc:	ldr	r7, [sp, #140]	; 0x8c
   23d00:	cmp	r7, #0
   23d04:	beq	23d90 <crc32@@Base+0xa338>
   23d08:	ldr	r4, [r7, #12]
   23d0c:	mov	r1, #1
   23d10:	add	r0, sp, #96	; 0x60
   23d14:	bl	21efc <crc32@@Base+0x84a4>
   23d18:	cmp	r4, #0
   23d1c:	bne	23d38 <crc32@@Base+0xa2e0>
   23d20:	b	23d84 <crc32@@Base+0xa32c>
   23d24:	cmp	r1, #2
   23d28:	beq	24470 <crc32@@Base+0xaa18>
   23d2c:	ldr	r4, [r4, #4]
   23d30:	cmp	r4, #0
   23d34:	beq	23d84 <crc32@@Base+0xa32c>
   23d38:	add	r5, r4, #32
   23d3c:	ldr	r6, [sp, #160]	; 0xa0
   23d40:	mov	r3, #16
   23d44:	ldr	r0, [sp, #156]	; 0x9c
   23d48:	add	r1, r4, r3
   23d4c:	mov	r2, r5
   23d50:	bl	22538 <crc32@@Base+0x8ae0>
   23d54:	mov	r1, r5
   23d58:	mov	r0, r6
   23d5c:	mov	r2, #16
   23d60:	bl	12674 <EVP_DigestUpdate@plt>
   23d64:	ldrb	r1, [r4, #17]
   23d68:	cmp	r1, #1
   23d6c:	bne	23d24 <crc32@@Base+0xa2cc>
   23d70:	add	r0, sp, #96	; 0x60
   23d74:	bl	21efc <crc32@@Base+0x84a4>
   23d78:	ldr	r4, [r4, #4]
   23d7c:	cmp	r4, #0
   23d80:	bne	23d38 <crc32@@Base+0xa2e0>
   23d84:	ldr	r7, [r7, #8]
   23d88:	cmp	r7, #0
   23d8c:	bne	23d08 <crc32@@Base+0xa2b0>
   23d90:	mov	r1, #1
   23d94:	add	r0, sp, #96	; 0x60
   23d98:	bl	21efc <crc32@@Base+0x84a4>
   23d9c:	add	r1, sp, #164	; 0xa4
   23da0:	mov	r2, #0
   23da4:	ldr	r0, [sp, #160]	; 0xa0
   23da8:	bl	12560 <EVP_DigestFinal@plt>
   23dac:	ldr	r4, [sp, #160]	; 0xa0
   23db0:	mov	r0, r4
   23db4:	bl	124e8 <EVP_MD_CTX_cleanup@plt>
   23db8:	mov	r0, r4
   23dbc:	bl	124dc <CRYPTO_free@plt>
   23dc0:	add	r2, sp, #164	; 0xa4
   23dc4:	mov	r3, #32
   23dc8:	ldr	r0, [sp, #156]	; 0x9c
   23dcc:	mov	r1, r2
   23dd0:	bl	22538 <crc32@@Base+0x8ae0>
   23dd4:	ldr	r0, [sp, #156]	; 0x9c
   23dd8:	bl	1241c <EVP_CIPHER_CTX_cleanup@plt>
   23ddc:	ldr	r5, [sp, #128]	; 0x80
   23de0:	ldr	r7, [sp, #140]	; 0x8c
   23de4:	add	r5, r5, #10
   23de8:	cmp	r7, #0
   23dec:	lsl	r5, r5, #4
   23df0:	beq	246dc <crc32@@Base+0xac84>
   23df4:	mov	r3, r7
   23df8:	ldr	r2, [r3]
   23dfc:	ldr	r3, [r3, #8]
   23e00:	add	r5, r5, r2
   23e04:	cmp	r3, #0
   23e08:	bne	23df8 <crc32@@Base+0xa3a0>
   23e0c:	mov	r0, r5
   23e10:	bl	125cc <malloc@plt>
   23e14:	subs	r8, r0, #0
   23e18:	beq	246ec <crc32@@Base+0xac94>
   23e1c:	add	r1, sp, #232	; 0xe8
   23e20:	mov	r2, #96	; 0x60
   23e24:	bl	125c0 <memcpy@plt>
   23e28:	add	r4, r8, #96	; 0x60
   23e2c:	mov	lr, r7
   23e30:	b	23e38 <crc32@@Base+0xa3e0>
   23e34:	mov	r4, r6
   23e38:	mov	r3, lr
   23e3c:	mov	ip, r4
   23e40:	ldr	r0, [r3, #20]!
   23e44:	add	r6, r4, #16
   23e48:	ldr	r1, [r3, #4]
   23e4c:	ldr	r2, [r3, #8]
   23e50:	ldr	r3, [r3, #12]
   23e54:	stmia	ip!, {r0, r1, r2, r3}
   23e58:	ldr	lr, [lr, #8]
   23e5c:	cmp	lr, #0
   23e60:	bne	23e34 <crc32@@Base+0xa3dc>
   23e64:	add	ip, sp, #196	; 0xc4
   23e68:	mov	lr, r6
   23e6c:	add	r4, r4, #48	; 0x30
   23e70:	mov	r6, r7
   23e74:	ldm	ip!, {r0, r1, r2, r3}
   23e78:	stmia	lr!, {r0, r1, r2, r3}
   23e7c:	ldm	ip, {r0, r1, r2, r3}
   23e80:	stm	lr, {r0, r1, r2, r3}
   23e84:	ldr	r9, [r6, #12]
   23e88:	cmp	r9, #0
   23e8c:	bne	23ea0 <crc32@@Base+0xa448>
   23e90:	b	23ef8 <crc32@@Base+0xa4a0>
   23e94:	ldr	r9, [r9, #4]
   23e98:	cmp	r9, #0
   23e9c:	beq	23ef8 <crc32@@Base+0xa4a0>
   23ea0:	mov	r3, r9
   23ea4:	add	r4, r4, #16
   23ea8:	ldr	r0, [r3, #32]!
   23eac:	ldr	r1, [r3, #4]
   23eb0:	ldr	r2, [r3, #8]
   23eb4:	ldr	r3, [r3, #12]
   23eb8:	str	r0, [r4, #-16]
   23ebc:	str	r1, [r4, #-12]
   23ec0:	str	r2, [r4, #-8]
   23ec4:	str	r3, [r4, #-4]
   23ec8:	ldrb	r3, [r9, #17]
   23ecc:	cmp	r3, #2
   23ed0:	bne	23e94 <crc32@@Base+0xa43c>
   23ed4:	ldr	r2, [r9, #12]
   23ed8:	mov	r0, r4
   23edc:	ldr	r1, [r9, #8]
   23ee0:	bl	125c0 <memcpy@plt>
   23ee4:	ldr	r3, [r9, #12]
   23ee8:	ldr	r9, [r9, #4]
   23eec:	add	r4, r4, r3
   23ef0:	cmp	r9, #0
   23ef4:	bne	23ea0 <crc32@@Base+0xa448>
   23ef8:	ldr	r6, [r6, #8]
   23efc:	cmp	r6, #0
   23f00:	bne	23e84 <crc32@@Base+0xa42c>
   23f04:	add	ip, sp, #164	; 0xa4
   23f08:	ldr	lr, [sp, #16]
   23f0c:	ldm	ip!, {r0, r1, r2, r3}
   23f10:	str	r5, [lr, #4]
   23f14:	mov	r5, #0
   23f18:	str	r8, [lr, #8]
   23f1c:	str	r0, [r4]
   23f20:	str	r1, [r4, #4]
   23f24:	str	r2, [r4, #8]
   23f28:	str	r3, [r4, #12]
   23f2c:	ldm	ip!, {r0, r1, r2, r3}
   23f30:	str	r0, [r4, #16]
   23f34:	str	r1, [r4, #20]
   23f38:	str	r2, [r4, #24]
   23f3c:	str	r3, [r4, #28]
   23f40:	mov	r0, r7
   23f44:	ldr	r1, [sp, #148]	; 0x94
   23f48:	bl	22030 <crc32@@Base+0x85d8>
   23f4c:	ldr	r3, [sp, #8]
   23f50:	ldr	r2, [sp, #332]	; 0x14c
   23f54:	mov	r0, r5
   23f58:	ldr	r3, [r3]
   23f5c:	cmp	r2, r3
   23f60:	bne	24c58 <crc32@@Base+0xb200>
   23f64:	add	sp, sp, #340	; 0x154
   23f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f6c:	tst	r3, #2
   23f70:	beq	24a94 <crc32@@Base+0xb03c>
   23f74:	cmp	r9, #46	; 0x2e
   23f78:	beq	23f84 <crc32@@Base+0xa52c>
   23f7c:	b	23f94 <crc32@@Base+0xa53c>
   23f80:	add	r6, r6, #1
   23f84:	ldrb	r9, [r6]
   23f88:	mov	r7, r6
   23f8c:	cmp	r9, #46	; 0x2e
   23f90:	beq	23f80 <crc32@@Base+0xa528>
   23f94:	cmp	r9, #0
   23f98:	addne	r6, r7, #1
   23f9c:	bne	23fac <crc32@@Base+0xa554>
   23fa0:	b	23fd4 <crc32@@Base+0xa57c>
   23fa4:	cmp	r3, #46	; 0x2e
   23fa8:	beq	24214 <crc32@@Base+0xa7bc>
   23fac:	mov	r0, r6
   23fb0:	ldrb	r3, [r6], #1
   23fb4:	cmp	r3, #0
   23fb8:	bne	23fa4 <crc32@@Base+0xa54c>
   23fbc:	ldrb	r3, [r7]
   23fc0:	cmp	r3, #0
   23fc4:	beq	23fd4 <crc32@@Base+0xa57c>
   23fc8:	bl	125e4 <strlen@plt>
   23fcc:	cmp	r0, #1
   23fd0:	beq	244c0 <crc32@@Base+0xaa68>
   23fd4:	ldr	r3, [sp, #60]	; 0x3c
   23fd8:	ldr	r2, [sp, #12]
   23fdc:	mov	r1, #1
   23fe0:	ldr	r0, [r8]
   23fe4:	bl	122d8 <__fprintf_chk@plt>
   23fe8:	b	23a20 <crc32@@Base+0x9fc8>
   23fec:	mov	r0, #1
   23ff0:	mov	r1, #36	; 0x24
   23ff4:	orr	r3, r3, r0
   23ff8:	bfi	r3, ip, #1, #1
   23ffc:	strb	r3, [sp, #96]	; 0x60
   24000:	bl	1253c <calloc@plt>
   24004:	subs	r6, r0, #0
   24008:	beq	23a20 <crc32@@Base+0x9fc8>
   2400c:	mov	r0, sl
   24010:	movw	r1, #32548	; 0x7f24
   24014:	movt	r1, #3
   24018:	bl	1229c <strtok@plt>
   2401c:	cmp	r0, #0
   24020:	beq	24370 <crc32@@Base+0xa918>
   24024:	add	r1, sp, #48	; 0x30
   24028:	bl	21d5c <crc32@@Base+0x8304>
   2402c:	subs	r7, r0, #0
   24030:	beq	242e4 <crc32@@Base+0xa88c>
   24034:	movw	r2, #46684	; 0xb65c
   24038:	ldr	r3, [sp, #60]	; 0x3c
   2403c:	movt	r2, #3
   24040:	mov	r1, #1
   24044:	ldr	r0, [r8]
   24048:	bl	122d8 <__fprintf_chk@plt>
   2404c:	mov	r0, r6
   24050:	bl	1214c <free@plt>
   24054:	b	23a20 <crc32@@Base+0x9fc8>
   24058:	ldrb	r3, [r7, #1]
   2405c:	cmp	r3, #79	; 0x4f
   24060:	bne	240c0 <crc32@@Base+0xa668>
   24064:	ldrb	r3, [r7, #2]
   24068:	cmp	r3, #80	; 0x50
   2406c:	bne	240c0 <crc32@@Base+0xa668>
   24070:	ldrb	r3, [r7, #3]
   24074:	cmp	r3, #0
   24078:	bne	240c0 <crc32@@Base+0xa668>
   2407c:	mov	r1, #48	; 0x30
   24080:	mov	r0, #1
   24084:	ldr	r6, [sp, #144]	; 0x90
   24088:	bl	1253c <calloc@plt>
   2408c:	cmp	r0, #0
   24090:	beq	23a20 <crc32@@Base+0x9fc8>
   24094:	mov	r3, #90	; 0x5a
   24098:	strh	r3, [r0, #16]
   2409c:	ldr	r2, [r6, #12]
   240a0:	mov	r3, #16
   240a4:	str	r3, [r0]
   240a8:	cmp	r2, #0
   240ac:	streq	r0, [r6, #12]
   240b0:	ldrne	r2, [r6, #16]
   240b4:	strne	r0, [r2, #4]
   240b8:	str	r0, [r6, #16]
   240bc:	b	239ec <crc32@@Base+0x9f94>
   240c0:	movw	r1, #46812	; 0xb6dc
   240c4:	mov	r0, r7
   240c8:	movt	r1, #3
   240cc:	bl	12680 <strcmp@plt>
   240d0:	subs	r9, r0, #0
   240d4:	beq	244dc <crc32@@Base+0xaa84>
   240d8:	movw	r1, #26704	; 0x6850
   240dc:	mov	r0, r7
   240e0:	movt	r1, #3
   240e4:	bl	12680 <strcmp@plt>
   240e8:	cmp	r0, #0
   240ec:	beq	243c8 <crc32@@Base+0xa970>
   240f0:	movw	r1, #44324	; 0xad24
   240f4:	mov	r0, r7
   240f8:	movt	r1, #3
   240fc:	bl	12680 <strcmp@plt>
   24100:	subs	r3, r0, #0
   24104:	beq	2468c <crc32@@Base+0xac34>
   24108:	movw	r1, #44316	; 0xad1c
   2410c:	mov	r0, r7
   24110:	movt	r1, #3
   24114:	bl	12680 <strcmp@plt>
   24118:	cmp	r0, #0
   2411c:	beq	24688 <crc32@@Base+0xac30>
   24120:	movw	r1, #47332	; 0xb8e4
   24124:	mov	r0, r7
   24128:	movt	r1, #3
   2412c:	bl	12680 <strcmp@plt>
   24130:	subs	r6, r0, #0
   24134:	bne	24c38 <crc32@@Base+0xb1e0>
   24138:	ldr	r3, [sp, #144]	; 0x90
   2413c:	mov	r1, #48	; 0x30
   24140:	mov	r0, #1
   24144:	str	r3, [sp, #24]
   24148:	bl	1253c <calloc@plt>
   2414c:	subs	r3, r0, #0
   24150:	str	r3, [sp, #20]
   24154:	beq	23a20 <crc32@@Base+0x9fc8>
   24158:	mov	r0, sl
   2415c:	movw	r1, #32548	; 0x7f24
   24160:	movt	r1, #3
   24164:	bl	1229c <strtok@plt>
   24168:	subs	r9, r0, #0
   2416c:	beq	24c1c <crc32@@Base+0xb1c4>
   24170:	movw	r7, #44032	; 0xac00
   24174:	movt	r7, #3
   24178:	movw	r1, #46520	; 0xb5b8
   2417c:	movt	r1, #3
   24180:	mov	sl, r7
   24184:	b	2418c <crc32@@Base+0xa734>
   24188:	ldr	r1, [r7, #12]!
   2418c:	mov	r0, r9
   24190:	bl	12680 <strcmp@plt>
   24194:	cmp	r0, #0
   24198:	beq	2489c <crc32@@Base+0xae44>
   2419c:	ldr	r1, [r7, #4]
   241a0:	cmp	r1, #0
   241a4:	beq	241b8 <crc32@@Base+0xa760>
   241a8:	mov	r0, r9
   241ac:	bl	12680 <strcmp@plt>
   241b0:	cmp	r0, #0
   241b4:	beq	2489c <crc32@@Base+0xae44>
   241b8:	add	r6, r6, #1
   241bc:	cmp	r6, #9
   241c0:	bne	24188 <crc32@@Base+0xa730>
   241c4:	movw	r2, #47560	; 0xb9c8
   241c8:	ldr	r3, [sp, #60]	; 0x3c
   241cc:	movt	r2, #3
   241d0:	mov	r1, #1
   241d4:	ldr	r0, [r8]
   241d8:	bl	122d8 <__fprintf_chk@plt>
   241dc:	ldr	r0, [sp, #20]
   241e0:	bl	1214c <free@plt>
   241e4:	b	23a20 <crc32@@Base+0x9fc8>
   241e8:	movw	r2, #46564	; 0xb5e4
   241ec:	ldr	r3, [sp, #60]	; 0x3c
   241f0:	movt	r2, #3
   241f4:	mov	r1, #1
   241f8:	ldr	r0, [r8]
   241fc:	bl	122d8 <__fprintf_chk@plt>
   24200:	ldr	r0, [r6, #8]
   24204:	bl	1214c <free@plt>
   24208:	mov	r0, r6
   2420c:	bl	1214c <free@plt>
   24210:	b	23a20 <crc32@@Base+0x9fc8>
   24214:	mov	r3, #0
   24218:	strb	r3, [r0]
   2421c:	ldrb	r9, [r7]
   24220:	cmp	r9, r3
   24224:	beq	23fd4 <crc32@@Base+0xa57c>
   24228:	cmp	r6, #0
   2422c:	moveq	r6, #49	; 0x31
   24230:	bne	24494 <crc32@@Base+0xaa3c>
   24234:	movw	r1, #47464	; 0xb968
   24238:	mov	r0, r7
   2423c:	movt	r1, #3
   24240:	bl	12680 <strcmp@plt>
   24244:	cmp	r0, #0
   24248:	beq	242b4 <crc32@@Base+0xa85c>
   2424c:	movw	r1, #47472	; 0xb970
   24250:	mov	r0, r7
   24254:	movt	r1, #3
   24258:	bl	12680 <strcmp@plt>
   2425c:	cmp	r0, #0
   24260:	orreq	r3, r6, #-872415232	; 0xcc000000
   24264:	beq	24358 <crc32@@Base+0xa900>
   24268:	cmp	r9, #79	; 0x4f
   2426c:	beq	2438c <crc32@@Base+0xa934>
   24270:	cmp	r9, #69	; 0x45
   24274:	bne	24c5c <crc32@@Base+0xb204>
   24278:	ldrb	r3, [r7, #1]
   2427c:	cmp	r3, #81	; 0x51
   24280:	bne	24398 <crc32@@Base+0xa940>
   24284:	ldrb	r3, [r7, #2]
   24288:	cmp	r3, #90	; 0x5a
   2428c:	bne	2434c <crc32@@Base+0xa8f4>
   24290:	ldrb	r3, [r7, #3]
   24294:	cmp	r3, #0
   24298:	bne	24398 <crc32@@Base+0xa940>
   2429c:	orr	r3, r6, #-822083584	; 0xcf000000
   242a0:	add	r2, sp, #60	; 0x3c
   242a4:	add	r1, sp, #52	; 0x34
   242a8:	ldr	r0, [sp, #152]	; 0x98
   242ac:	bl	2231c <crc32@@Base+0x88c4>
   242b0:	b	242c8 <crc32@@Base+0xa870>
   242b4:	orr	r3, r6, #-872415232	; 0xcc000000
   242b8:	add	r2, sp, #60	; 0x3c
   242bc:	add	r1, sp, #52	; 0x34
   242c0:	ldr	r0, [sp, #152]	; 0x98
   242c4:	bl	2231c <crc32@@Base+0x88c4>
   242c8:	ldrb	r3, [sp, #96]	; 0x60
   242cc:	cmp	r0, #0
   242d0:	movne	r0, #0
   242d4:	andeq	r0, r3, #1
   242d8:	cmp	r0, #0
   242dc:	beq	23a20 <crc32@@Base+0x9fc8>
   242e0:	b	239e0 <crc32@@Base+0x9f88>
   242e4:	movw	r1, #32548	; 0x7f24
   242e8:	movt	r1, #3
   242ec:	bl	1229c <strtok@plt>
   242f0:	subs	r3, r0, #0
   242f4:	beq	24448 <crc32@@Base+0xa9f0>
   242f8:	str	r3, [sp, #20]
   242fc:	bl	125e4 <strlen@plt>
   24300:	ldr	r9, [sp, #128]	; 0x80
   24304:	ldr	sl, [sp, #48]	; 0x30
   24308:	add	r9, r9, #1
   2430c:	ldr	r3, [sp, #20]
   24310:	cmp	r0, #8
   24314:	beq	246f4 <crc32@@Base+0xac9c>
   24318:	ldrb	r3, [r6, #4]
   2431c:	str	sl, [r6, #20]
   24320:	bfi	r3, r7, #0, #1
   24324:	str	r7, [r6, #32]
   24328:	str	r9, [sp, #128]	; 0x80
   2432c:	strb	r3, [r6, #4]
   24330:	ldr	r3, [sp, #140]	; 0x8c
   24334:	cmp	r3, #0
   24338:	streq	r6, [sp, #140]	; 0x8c
   2433c:	ldrne	r3, [sp, #144]	; 0x90
   24340:	strne	r6, [r3, #8]
   24344:	str	r6, [sp, #144]	; 0x90
   24348:	b	23a20 <crc32@@Base+0x9fc8>
   2434c:	cmp	r3, #0
   24350:	bne	24398 <crc32@@Base+0xa940>
   24354:	orr	r3, r6, #-822083584	; 0xcf000000
   24358:	add	r2, sp, #60	; 0x3c
   2435c:	orr	r3, r3, #16
   24360:	add	r1, sp, #52	; 0x34
   24364:	ldr	r0, [sp, #152]	; 0x98
   24368:	bl	2231c <crc32@@Base+0x88c4>
   2436c:	b	242c8 <crc32@@Base+0xa870>
   24370:	movw	r2, #46648	; 0xb638
   24374:	ldr	r3, [sp, #60]	; 0x3c
   24378:	movt	r2, #3
   2437c:	mov	r1, #1
   24380:	ldr	r0, [r8]
   24384:	bl	122d8 <__fprintf_chk@plt>
   24388:	b	2404c <crc32@@Base+0xa5f4>
   2438c:	ldrb	r3, [r7, #1]
   24390:	cmp	r3, #82	; 0x52
   24394:	beq	246a0 <crc32@@Base+0xac48>
   24398:	movw	r1, #47480	; 0xb978
   2439c:	mov	r0, r7
   243a0:	movt	r1, #3
   243a4:	bl	12680 <strcmp@plt>
   243a8:	cmp	r0, #0
   243ac:	bne	24c38 <crc32@@Base+0xb1e0>
   243b0:	mov	r3, #-1073741824	; 0xc0000000
   243b4:	add	r2, sp, #60	; 0x3c
   243b8:	add	r1, sp, #52	; 0x34
   243bc:	ldr	r0, [sp, #152]	; 0x98
   243c0:	bl	2231c <crc32@@Base+0x88c4>
   243c4:	b	242c8 <crc32@@Base+0xa870>
   243c8:	mov	r1, #48	; 0x30
   243cc:	mov	r0, #1
   243d0:	ldr	r7, [sp, #144]	; 0x90
   243d4:	bl	1253c <calloc@plt>
   243d8:	subs	r6, r0, #0
   243dc:	beq	23a20 <crc32@@Base+0x9fc8>
   243e0:	mov	r0, sl
   243e4:	movw	r1, #32548	; 0x7f24
   243e8:	movt	r1, #3
   243ec:	bl	1229c <strtok@plt>
   243f0:	cmp	r0, #0
   243f4:	beq	248f8 <crc32@@Base+0xaea0>
   243f8:	add	r1, sp, #40	; 0x28
   243fc:	bl	21d5c <crc32@@Base+0x8304>
   24400:	cmp	r0, #0
   24404:	bne	247e0 <crc32@@Base+0xad88>
   24408:	movw	r1, #32548	; 0x7f24
   2440c:	movt	r1, #3
   24410:	bl	1229c <strtok@plt>
   24414:	cmp	r0, #0
   24418:	beq	24ab4 <crc32@@Base+0xb05c>
   2441c:	add	r1, sp, #44	; 0x2c
   24420:	bl	21d5c <crc32@@Base+0x8304>
   24424:	cmp	r0, #0
   24428:	beq	24828 <crc32@@Base+0xadd0>
   2442c:	movw	r2, #47228	; 0xb87c
   24430:	ldr	r3, [sp, #60]	; 0x3c
   24434:	movt	r2, #3
   24438:	mov	r1, #1
   2443c:	ldr	r0, [r8]
   24440:	bl	122d8 <__fprintf_chk@plt>
   24444:	b	2404c <crc32@@Base+0xa5f4>
   24448:	ldr	r0, [sp, #48]	; 0x30
   2444c:	ldrb	r1, [r6, #4]
   24450:	ldr	r2, [sp, #128]	; 0x80
   24454:	bfi	r1, r3, #0, #1
   24458:	str	r3, [r6, #32]
   2445c:	strb	r1, [r6, #4]
   24460:	add	r3, r2, #1
   24464:	str	r0, [r6, #20]
   24468:	str	r3, [sp, #128]	; 0x80
   2446c:	b	24330 <crc32@@Base+0xa8d8>
   24470:	ldrd	r2, [r4, #8]
   24474:	ldr	r0, [sp, #156]	; 0x9c
   24478:	mov	r1, r2
   2447c:	bl	22538 <crc32@@Base+0x8ae0>
   24480:	ldr	r2, [r4, #12]
   24484:	ldr	r1, [r4, #8]
   24488:	ldr	r0, [sp, #160]	; 0xa0
   2448c:	bl	12674 <EVP_DigestUpdate@plt>
   24490:	b	23d2c <crc32@@Base+0xa2d4>
   24494:	mov	r0, r6
   24498:	bl	125e4 <strlen@plt>
   2449c:	cmp	r0, #1
   244a0:	bne	23fd4 <crc32@@Base+0xa57c>
   244a4:	ldrb	r2, [r6]
   244a8:	sub	r3, r2, #49	; 0x31
   244ac:	uxtb	r1, r3
   244b0:	cmp	r2, #52	; 0x34
   244b4:	cmpne	r1, #1
   244b8:	movls	r6, r3
   244bc:	bls	24234 <crc32@@Base+0xa7dc>
   244c0:	movw	r2, #47424	; 0xb940
   244c4:	ldr	r3, [sp, #60]	; 0x3c
   244c8:	movt	r2, #3
   244cc:	mov	r1, #1
   244d0:	ldr	r0, [r8]
   244d4:	bl	122d8 <__fprintf_chk@plt>
   244d8:	b	23a20 <crc32@@Base+0x9fc8>
   244dc:	mov	r1, #48	; 0x30
   244e0:	mov	r0, #1
   244e4:	ldr	r7, [sp, #144]	; 0x90
   244e8:	bl	1253c <calloc@plt>
   244ec:	subs	r6, r0, #0
   244f0:	beq	23a20 <crc32@@Base+0x9fc8>
   244f4:	mov	r0, sl
   244f8:	movw	r1, #32548	; 0x7f24
   244fc:	movt	r1, #3
   24500:	bl	1229c <strtok@plt>
   24504:	cmp	r0, #0
   24508:	beq	24908 <crc32@@Base+0xaeb0>
   2450c:	ldrb	r3, [r0]
   24510:	cmp	r3, #73	; 0x49
   24514:	bne	2475c <crc32@@Base+0xad04>
   24518:	ldrb	r3, [r0, #1]
   2451c:	cmp	r3, #86	; 0x56
   24520:	bne	24540 <crc32@@Base+0xaae8>
   24524:	ldrb	r3, [r0, #2]
   24528:	cmp	r3, #84	; 0x54
   2452c:	bne	24540 <crc32@@Base+0xaae8>
   24530:	ldrb	r3, [r0, #3]
   24534:	cmp	r3, #0
   24538:	moveq	sl, #1
   2453c:	beq	24790 <crc32@@Base+0xad38>
   24540:	mov	sl, r9
   24544:	add	r1, sp, #44	; 0x2c
   24548:	bl	21d5c <crc32@@Base+0x8304>
   2454c:	cmp	r0, #0
   24550:	bne	247c4 <crc32@@Base+0xad6c>
   24554:	movw	r1, #32548	; 0x7f24
   24558:	movt	r1, #3
   2455c:	bl	1229c <strtok@plt>
   24560:	subs	r3, r0, #0
   24564:	str	r3, [sp, #28]
   24568:	beq	24a84 <crc32@@Base+0xb02c>
   2456c:	cmp	sl, #0
   24570:	bne	24a2c <crc32@@Base+0xafd4>
   24574:	cmp	r9, #0
   24578:	beq	2494c <crc32@@Base+0xaef4>
   2457c:	add	r1, sp, #48	; 0x30
   24580:	ldr	sl, [sp, #148]	; 0x94
   24584:	bl	21d5c <crc32@@Base+0x8304>
   24588:	cmp	r0, #0
   2458c:	bne	24bd4 <crc32@@Base+0xb17c>
   24590:	cmp	sl, #0
   24594:	ldr	r1, [sp, #48]	; 0x30
   24598:	bne	245ac <crc32@@Base+0xab54>
   2459c:	b	24ba0 <crc32@@Base+0xb148>
   245a0:	ldr	sl, [sl]
   245a4:	cmp	sl, #0
   245a8:	beq	24ba0 <crc32@@Base+0xb148>
   245ac:	ldr	r3, [sl, #4]
   245b0:	cmp	r3, r1
   245b4:	bne	245a0 <crc32@@Base+0xab48>
   245b8:	ldr	r2, [sl, #12]
   245bc:	mov	r0, #1
   245c0:	add	r9, r2, #15
   245c4:	bic	r9, r9, #15
   245c8:	str	r2, [sp, #20]
   245cc:	mov	r1, r9
   245d0:	bl	1253c <calloc@plt>
   245d4:	ldr	r2, [sp, #20]
   245d8:	subs	r3, r0, #0
   245dc:	beq	2404c <crc32@@Base+0xa5f4>
   245e0:	ldr	r1, [sl, #8]
   245e4:	str	r3, [sp, #20]
   245e8:	bl	125c0 <memcpy@plt>
   245ec:	ldr	r3, [sp, #20]
   245f0:	str	r9, [r6, #12]
   245f4:	str	r3, [r6, #8]
   245f8:	mov	r3, #1
   245fc:	ldr	r0, [sp, #44]	; 0x2c
   24600:	ldr	r1, [r6, #8]
   24604:	strh	r3, [r6, #18]
   24608:	mov	r2, r9
   2460c:	movw	r3, #602	; 0x25a
   24610:	str	r0, [r6, #20]
   24614:	strh	r3, [r6, #16]
   24618:	mov	r0, #0
   2461c:	str	r9, [r6, #24]
   24620:	bl	2560c <crc32@@Base+0xbbb4>
   24624:	ldr	r2, [r7, #12]
   24628:	ldr	r3, [r6, #12]
   2462c:	cmp	r2, #0
   24630:	add	r3, r3, #16
   24634:	str	r3, [r6]
   24638:	str	r0, [r6, #28]
   2463c:	beq	24b5c <crc32@@Base+0xb104>
   24640:	ldrb	r2, [sp, #96]	; 0x60
   24644:	ldr	r3, [r7, #16]
   24648:	tst	r2, #1
   2464c:	str	r6, [r3, #4]
   24650:	str	r6, [r7, #16]
   24654:	bne	239e0 <crc32@@Base+0x9f88>
   24658:	b	23a20 <crc32@@Base+0x9fc8>
   2465c:	ldr	r3, [sp, #60]	; 0x3c
   24660:	mov	r1, #1
   24664:	ldr	r0, [r8]
   24668:	movw	r2, #46600	; 0xb608
   2466c:	movt	r2, #3
   24670:	bl	122d8 <__fprintf_chk@plt>
   24674:	ldr	r0, [r6, #8]
   24678:	bl	1214c <free@plt>
   2467c:	mov	r0, r6
   24680:	bl	1214c <free@plt>
   24684:	b	23a20 <crc32@@Base+0x9fc8>
   24688:	mov	r3, #1
   2468c:	add	r2, sp, #60	; 0x3c
   24690:	add	r1, sp, #52	; 0x34
   24694:	ldr	r0, [sp, #144]	; 0x90
   24698:	bl	220fc <crc32@@Base+0x86a4>
   2469c:	b	242c8 <crc32@@Base+0xa870>
   246a0:	ldrb	r3, [r7, #2]
   246a4:	cmp	r3, #82	; 0x52
   246a8:	bne	24398 <crc32@@Base+0xa940>
   246ac:	ldrb	r3, [r7, #3]
   246b0:	cmp	r3, #0
   246b4:	bne	24398 <crc32@@Base+0xa940>
   246b8:	orr	r3, r6, #-872415232	; 0xcc000000
   246bc:	add	r2, sp, #60	; 0x3c
   246c0:	orr	r3, r3, #24
   246c4:	add	r1, sp, #52	; 0x34
   246c8:	ldr	r0, [sp, #152]	; 0x98
   246cc:	bl	2231c <crc32@@Base+0x88c4>
   246d0:	b	242c8 <crc32@@Base+0xa870>
   246d4:	mov	r3, r4
   246d8:	b	23fd8 <crc32@@Base+0xa580>
   246dc:	mov	r0, r5
   246e0:	bl	125cc <malloc@plt>
   246e4:	subs	r8, r0, #0
   246e8:	bne	247fc <crc32@@Base+0xada4>
   246ec:	mvn	r5, #11
   246f0:	b	23f40 <crc32@@Base+0xa4e8>
   246f4:	mov	r2, r0
   246f8:	movw	r1, #46720	; 0xb680
   246fc:	mov	r0, r3
   24700:	movt	r1, #3
   24704:	bl	121a0 <strncmp@plt>
   24708:	cmp	r0, #0
   2470c:	bne	24318 <crc32@@Base+0xa8c0>
   24710:	ldrb	r2, [sp, #136]	; 0x88
   24714:	mov	r1, #1
   24718:	ldrb	r3, [r6, #4]
   2471c:	tst	r2, #1
   24720:	str	sl, [r6, #20]
   24724:	orr	r3, r3, r1
   24728:	orreq	r2, r2, #1
   2472c:	str	r9, [sp, #128]	; 0x80
   24730:	str	r1, [r6, #32]
   24734:	strb	r3, [r6, #4]
   24738:	streq	sl, [sp, #132]	; 0x84
   2473c:	strbeq	r2, [sp, #136]	; 0x88
   24740:	beq	24330 <crc32@@Base+0xa8d8>
   24744:	movw	r2, #46732	; 0xb68c
   24748:	ldr	r3, [sp, #60]	; 0x3c
   2474c:	movt	r2, #3
   24750:	ldr	r0, [r8]
   24754:	bl	122d8 <__fprintf_chk@plt>
   24758:	b	24330 <crc32@@Base+0xa8d8>
   2475c:	cmp	r3, #68	; 0x44
   24760:	bne	24540 <crc32@@Base+0xaae8>
   24764:	ldrb	r3, [r0, #1]
   24768:	cmp	r3, #67	; 0x43
   2476c:	bne	24540 <crc32@@Base+0xaae8>
   24770:	ldrb	r3, [r0, #2]
   24774:	cmp	r3, #68	; 0x44
   24778:	bne	24540 <crc32@@Base+0xaae8>
   2477c:	ldrb	r3, [r0, #3]
   24780:	mov	sl, r9
   24784:	cmp	r3, #0
   24788:	bne	24544 <crc32@@Base+0xaaec>
   2478c:	mov	r9, #1
   24790:	movw	r1, #32548	; 0x7f24
   24794:	mov	r0, #0
   24798:	movt	r1, #3
   2479c:	bl	1229c <strtok@plt>
   247a0:	cmp	r0, #0
   247a4:	bne	24544 <crc32@@Base+0xaaec>
   247a8:	ldr	r3, [sp, #60]	; 0x3c
   247ac:	movw	r2, #46864	; 0xb710
   247b0:	movt	r2, #3
   247b4:	mov	r1, #1
   247b8:	ldr	r0, [r8]
   247bc:	bl	122d8 <__fprintf_chk@plt>
   247c0:	b	2404c <crc32@@Base+0xa5f4>
   247c4:	movw	r2, #46896	; 0xb730
   247c8:	ldr	r3, [sp, #60]	; 0x3c
   247cc:	movt	r2, #3
   247d0:	mov	r1, #1
   247d4:	ldr	r0, [r8]
   247d8:	bl	122d8 <__fprintf_chk@plt>
   247dc:	b	2404c <crc32@@Base+0xa5f4>
   247e0:	movw	r2, #47160	; 0xb838
   247e4:	ldr	r3, [sp, #60]	; 0x3c
   247e8:	movt	r2, #3
   247ec:	mov	r1, #1
   247f0:	ldr	r0, [r8]
   247f4:	bl	122d8 <__fprintf_chk@plt>
   247f8:	b	2404c <crc32@@Base+0xa5f4>
   247fc:	add	r1, sp, #232	; 0xe8
   24800:	mov	r2, #96	; 0x60
   24804:	bl	125c0 <memcpy@plt>
   24808:	add	lr, sp, #196	; 0xc4
   2480c:	add	ip, r8, #96	; 0x60
   24810:	add	r4, r8, #128	; 0x80
   24814:	ldm	lr!, {r0, r1, r2, r3}
   24818:	stmia	ip!, {r0, r1, r2, r3}
   2481c:	ldm	lr, {r0, r1, r2, r3}
   24820:	stm	ip, {r0, r1, r2, r3}
   24824:	b	23f04 <crc32@@Base+0xa4ac>
   24828:	movw	r1, #32548	; 0x7f24
   2482c:	movt	r1, #3
   24830:	bl	1229c <strtok@plt>
   24834:	cmp	r0, #0
   24838:	beq	24b90 <crc32@@Base+0xb138>
   2483c:	add	r1, sp, #48	; 0x30
   24840:	bl	21d5c <crc32@@Base+0x8304>
   24844:	cmp	r0, #0
   24848:	bne	24b74 <crc32@@Base+0xb11c>
   2484c:	movw	r3, #858	; 0x35a
   24850:	strh	r3, [r6, #16]
   24854:	ldr	r3, [r7, #12]
   24858:	mov	r2, #16
   2485c:	ldr	r0, [sp, #40]	; 0x28
   24860:	cmp	r3, #0
   24864:	ldr	r3, [sp, #48]	; 0x30
   24868:	ldr	r1, [sp, #44]	; 0x2c
   2486c:	str	r0, [r6, #20]
   24870:	str	r3, [r6, #24]
   24874:	ldrb	r3, [sp, #96]	; 0x60
   24878:	str	r1, [r6, #28]
   2487c:	and	r3, r3, #1
   24880:	str	r2, [r6]
   24884:	bne	239cc <crc32@@Base+0x9f74>
   24888:	cmp	r3, #0
   2488c:	str	r6, [r7, #12]
   24890:	str	r6, [r7, #16]
   24894:	bne	239e0 <crc32@@Base+0x9f88>
   24898:	b	23a20 <crc32@@Base+0x9fc8>
   2489c:	mov	r3, #12
   248a0:	ldr	r0, [sp, #20]
   248a4:	mla	r6, r3, r6, sl
   248a8:	movw	r2, #1626	; 0x65a
   248ac:	strh	r2, [r0, #16]
   248b0:	ldr	r2, [sp, #24]
   248b4:	ldrb	r3, [r6, #8]
   248b8:	ldr	r1, [r2, #12]
   248bc:	mov	r2, #16
   248c0:	str	r2, [r0]
   248c4:	str	r3, [r0, #28]
   248c8:	cmp	r1, #0
   248cc:	ldrb	r3, [sp, #96]	; 0x60
   248d0:	and	r3, r3, #1
   248d4:	beq	24918 <crc32@@Base+0xaec0>
   248d8:	ldr	r1, [sp, #24]
   248dc:	cmp	r3, #0
   248e0:	ldr	r3, [sp, #20]
   248e4:	ldr	r2, [r1, #16]
   248e8:	str	r3, [r2, #4]
   248ec:	str	r3, [r1, #16]
   248f0:	bne	239e0 <crc32@@Base+0x9f88>
   248f4:	b	23a20 <crc32@@Base+0x9fc8>
   248f8:	movw	r2, #47128	; 0xb818
   248fc:	ldr	r3, [sp, #60]	; 0x3c
   24900:	movt	r2, #3
   24904:	b	247b4 <crc32@@Base+0xad5c>
   24908:	movw	r2, #46820	; 0xb6e4
   2490c:	ldr	r3, [sp, #60]	; 0x3c
   24910:	movt	r2, #3
   24914:	b	247b4 <crc32@@Base+0xad5c>
   24918:	cmp	r3, #0
   2491c:	ldrd	r2, [sp, #20]
   24920:	str	r2, [r3, #12]
   24924:	str	r2, [r3, #16]
   24928:	bne	239e0 <crc32@@Base+0x9f88>
   2492c:	b	23a20 <crc32@@Base+0x9fc8>
   24930:	movw	r2, #46772	; 0xb6b4
   24934:	ldr	r3, [sp, #60]	; 0x3c
   24938:	movt	r2, #3
   2493c:	mov	r1, #1
   24940:	ldr	r0, [r8]
   24944:	bl	122d8 <__fprintf_chk@plt>
   24948:	b	23a20 <crc32@@Base+0x9fc8>
   2494c:	movw	r1, #50292	; 0xc474
   24950:	movt	r1, #3
   24954:	bl	12350 <fopen@plt>
   24958:	subs	sl, r0, #0
   2495c:	beq	24af0 <crc32@@Base+0xb098>
   24960:	mov	r2, #2
   24964:	mov	r1, r9
   24968:	bl	1217c <fseek@plt>
   2496c:	cmp	r0, #0
   24970:	blt	24ae8 <crc32@@Base+0xb090>
   24974:	mov	r0, sl
   24978:	bl	12548 <ftell@plt>
   2497c:	subs	r3, r0, #0
   24980:	str	r3, [sp, #20]
   24984:	blt	24ae8 <crc32@@Base+0xb090>
   24988:	mov	r2, r9
   2498c:	mov	r1, r9
   24990:	mov	r0, sl
   24994:	bl	1217c <fseek@plt>
   24998:	cmp	r0, #0
   2499c:	blt	24ae8 <crc32@@Base+0xb090>
   249a0:	ldr	r3, [sp, #20]
   249a4:	mov	r0, #1
   249a8:	add	r9, r3, #15
   249ac:	bic	r9, r9, #15
   249b0:	mov	r1, r9
   249b4:	bl	1253c <calloc@plt>
   249b8:	subs	r2, r0, #0
   249bc:	str	r2, [sp, #24]
   249c0:	beq	24ae8 <crc32@@Base+0xb090>
   249c4:	mov	r3, sl
   249c8:	ldr	r2, [sp, #20]
   249cc:	mov	r1, #1
   249d0:	bl	12488 <fread@plt>
   249d4:	ldr	r3, [sp, #20]
   249d8:	cmp	r3, r0
   249dc:	bne	24ae0 <crc32@@Base+0xb088>
   249e0:	ldr	r2, [sp, #24]
   249e4:	mov	r0, sl
   249e8:	str	r9, [r6, #12]
   249ec:	str	r2, [r6, #8]
   249f0:	bl	12620 <fclose@plt>
   249f4:	ldr	r9, [r6, #12]
   249f8:	ands	r3, r9, #15
   249fc:	beq	245fc <crc32@@Base+0xaba4>
   24a00:	ldr	r3, [sp, #60]	; 0x3c
   24a04:	mov	r1, #1
   24a08:	movw	r2, #47096	; 0xb7f8
   24a0c:	ldr	r0, [r8]
   24a10:	movt	r2, #3
   24a14:	bl	122d8 <__fprintf_chk@plt>
   24a18:	ldr	r0, [sp, #44]	; 0x2c
   24a1c:	ldr	r9, [r6, #12]
   24a20:	mov	r3, #0
   24a24:	ldr	r1, [r6, #8]
   24a28:	b	24604 <crc32@@Base+0xabac>
   24a2c:	add	r1, sp, #48	; 0x30
   24a30:	bl	21d5c <crc32@@Base+0x8304>
   24a34:	subs	r9, r0, #0
   24a38:	bne	24ac4 <crc32@@Base+0xb06c>
   24a3c:	mov	r1, #32
   24a40:	mov	r0, #1
   24a44:	bl	1253c <calloc@plt>
   24a48:	subs	r1, r0, #0
   24a4c:	beq	2404c <crc32@@Base+0xa5f4>
   24a50:	ldr	lr, [sp, #48]	; 0x30
   24a54:	mov	r2, #32
   24a58:	ldr	r0, [sp, #44]	; 0x2c
   24a5c:	mov	r3, r9
   24a60:	movw	ip, #8401	; 0x20d1
   24a64:	str	r1, [r6, #8]
   24a68:	movt	ip, #16384	; 0x4000
   24a6c:	str	lr, [r1, #4]
   24a70:	str	r0, [r1, #20]
   24a74:	mov	r9, r2
   24a78:	str	ip, [r1]
   24a7c:	str	r2, [r6, #12]
   24a80:	b	24604 <crc32@@Base+0xabac>
   24a84:	movw	r2, #46932	; 0xb754
   24a88:	ldr	r3, [sp, #60]	; 0x3c
   24a8c:	movt	r2, #3
   24a90:	b	247b4 <crc32@@Base+0xad5c>
   24a94:	ldr	r0, [r8]
   24a98:	movw	r2, #47384	; 0xb918
   24a9c:	ldr	r3, [sp, #60]	; 0x3c
   24aa0:	movt	r2, #3
   24aa4:	str	r7, [sp]
   24aa8:	mov	r1, #1
   24aac:	bl	122d8 <__fprintf_chk@plt>
   24ab0:	b	23a20 <crc32@@Base+0x9fc8>
   24ab4:	movw	r2, #47196	; 0xb85c
   24ab8:	ldr	r3, [sp, #60]	; 0x3c
   24abc:	movt	r2, #3
   24ac0:	b	247b4 <crc32@@Base+0xad5c>
   24ac4:	movw	r2, #46992	; 0xb790
   24ac8:	ldr	r3, [sp, #60]	; 0x3c
   24acc:	movt	r2, #3
   24ad0:	mov	r1, #1
   24ad4:	ldr	r0, [r8]
   24ad8:	bl	122d8 <__fprintf_chk@plt>
   24adc:	b	2404c <crc32@@Base+0xa5f4>
   24ae0:	ldr	r0, [sp, #24]
   24ae4:	bl	1214c <free@plt>
   24ae8:	mov	r0, sl
   24aec:	bl	12620 <fclose@plt>
   24af0:	ldr	r7, [sp, #28]
   24af4:	mov	r1, #1
   24af8:	ldr	r0, [r8]
   24afc:	movw	r2, #45944	; 0xb378
   24b00:	movt	r2, #3
   24b04:	mov	r3, r7
   24b08:	bl	122d8 <__fprintf_chk@plt>
   24b0c:	ldr	r0, [r8]
   24b10:	ldr	r3, [sp, #60]	; 0x3c
   24b14:	movw	r2, #47068	; 0xb7dc
   24b18:	str	r7, [sp]
   24b1c:	movt	r2, #3
   24b20:	mov	r1, #1
   24b24:	bl	122d8 <__fprintf_chk@plt>
   24b28:	b	2404c <crc32@@Base+0xa5f4>
   24b2c:	bl	12620 <fclose@plt>
   24b30:	movw	r0, #65196	; 0xfeac
   24b34:	movt	r0, #4
   24b38:	mov	r1, r4
   24b3c:	movw	r2, #45944	; 0xb378
   24b40:	ldr	r3, [sp, #108]	; 0x6c
   24b44:	ldr	r0, [r0]
   24b48:	movt	r2, #3
   24b4c:	bl	122d8 <__fprintf_chk@plt>
   24b50:	mvn	r5, #21
   24b54:	ldr	r7, [sp, #140]	; 0x8c
   24b58:	b	23f40 <crc32@@Base+0xa4e8>
   24b5c:	ldrb	r3, [sp, #96]	; 0x60
   24b60:	str	r6, [r7, #12]
   24b64:	tst	r3, #1
   24b68:	str	r6, [r7, #16]
   24b6c:	bne	239e0 <crc32@@Base+0x9f88>
   24b70:	b	23a20 <crc32@@Base+0x9fc8>
   24b74:	movw	r2, #47296	; 0xb8c0
   24b78:	ldr	r3, [sp, #60]	; 0x3c
   24b7c:	movt	r2, #3
   24b80:	mov	r1, #1
   24b84:	ldr	r0, [r8]
   24b88:	bl	122d8 <__fprintf_chk@plt>
   24b8c:	b	2404c <crc32@@Base+0xa5f4>
   24b90:	movw	r2, #47264	; 0xb8a0
   24b94:	ldr	r3, [sp, #60]	; 0x3c
   24b98:	movt	r2, #3
   24b9c:	b	247b4 <crc32@@Base+0xad5c>
   24ba0:	ldr	r3, [sp, #60]	; 0x3c
   24ba4:	movw	r2, #47524	; 0xb9a4
   24ba8:	ldr	r0, [r8]
   24bac:	movt	r2, #3
   24bb0:	str	r1, [sp]
   24bb4:	mov	r1, #1
   24bb8:	bl	122d8 <__fprintf_chk@plt>
   24bbc:	mov	r0, r6
   24bc0:	bl	1214c <free@plt>
   24bc4:	ldrb	r3, [sp, #96]	; 0x60
   24bc8:	tst	r3, #1
   24bcc:	bne	239e0 <crc32@@Base+0x9f88>
   24bd0:	b	23a20 <crc32@@Base+0x9fc8>
   24bd4:	movw	r2, #47032	; 0xb7b8
   24bd8:	ldr	r3, [sp, #60]	; 0x3c
   24bdc:	movt	r2, #3
   24be0:	mov	r1, #1
   24be4:	ldr	r0, [r8]
   24be8:	bl	122d8 <__fprintf_chk@plt>
   24bec:	b	2404c <crc32@@Base+0xa5f4>
   24bf0:	movw	r3, #65196	; 0xfeac
   24bf4:	movt	r3, #4
   24bf8:	movw	r0, #47488	; 0xb980
   24bfc:	mov	r2, #35	; 0x23
   24c00:	ldr	r3, [r3]
   24c04:	movt	r0, #3
   24c08:	mov	r1, #1
   24c0c:	mvn	r5, #21
   24c10:	bl	1259c <fwrite@plt>
   24c14:	ldr	r7, [sp, #140]	; 0x8c
   24c18:	b	23f40 <crc32@@Base+0xa4e8>
   24c1c:	movw	r2, #47340	; 0xb8ec
   24c20:	ldr	r3, [sp, #60]	; 0x3c
   24c24:	movt	r2, #3
   24c28:	mov	r1, #1
   24c2c:	ldr	r0, [r8]
   24c30:	bl	122d8 <__fprintf_chk@plt>
   24c34:	b	241dc <crc32@@Base+0xa784>
   24c38:	str	r7, [sp]
   24c3c:	movw	r2, #47384	; 0xb918
   24c40:	ldr	r3, [sp, #60]	; 0x3c
   24c44:	movt	r2, #3
   24c48:	mov	r1, #1
   24c4c:	ldr	r0, [r8]
   24c50:	bl	122d8 <__fprintf_chk@plt>
   24c54:	b	23a20 <crc32@@Base+0x9fc8>
   24c58:	bl	124b8 <__stack_chk_fail@plt>
   24c5c:	cmp	r9, #78	; 0x4e
   24c60:	bne	24398 <crc32@@Base+0xa940>
   24c64:	ldrb	r3, [r7, #1]
   24c68:	cmp	r3, #69	; 0x45
   24c6c:	bne	24398 <crc32@@Base+0xa940>
   24c70:	ldrb	r3, [r7, #2]
   24c74:	cmp	r3, #81	; 0x51
   24c78:	bne	24ca4 <crc32@@Base+0xb24c>
   24c7c:	ldrb	r3, [r7, #3]
   24c80:	cmp	r3, #0
   24c84:	bne	24398 <crc32@@Base+0xa940>
   24c88:	orr	r3, r6, #-822083584	; 0xcf000000
   24c8c:	add	r2, sp, #60	; 0x3c
   24c90:	orr	r3, r3, #8
   24c94:	add	r1, sp, #52	; 0x34
   24c98:	ldr	r0, [sp, #152]	; 0x98
   24c9c:	bl	2231c <crc32@@Base+0x88c4>
   24ca0:	b	242c8 <crc32@@Base+0xa870>
   24ca4:	cmp	r3, #90	; 0x5a
   24ca8:	bne	24398 <crc32@@Base+0xa940>
   24cac:	ldrb	r3, [r7, #3]
   24cb0:	cmp	r3, #0
   24cb4:	bne	24398 <crc32@@Base+0xa940>
   24cb8:	orr	r3, r6, #-822083584	; 0xcf000000
   24cbc:	b	246bc <crc32@@Base+0xac64>
   24cc0:	b	22670 <crc32@@Base+0x8c18>
   24cc4:	push	{r4, lr}
   24cc8:	mov	r4, r0
   24ccc:	bl	124e8 <EVP_MD_CTX_cleanup@plt>
   24cd0:	mov	r0, r4
   24cd4:	pop	{r4, lr}
   24cd8:	b	124dc <CRYPTO_free@plt>
   24cdc:	b	1241c <EVP_CIPHER_CTX_cleanup@plt>
   24ce0:	subs	r0, r0, #12
   24ce4:	movne	r0, #1
   24ce8:	bx	lr
   24cec:	ldr	r3, [r0]
   24cf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24cf4:	cmn	r3, #1
   24cf8:	sub	sp, sp, #20
   24cfc:	add	fp, r0, #512	; 0x200
   24d00:	beq	24dec <crc32@@Base+0xb394>
   24d04:	ldr	r2, [r0, #4]
   24d08:	cmn	r2, #1
   24d0c:	beq	24dec <crc32@@Base+0xb394>
   24d10:	movw	r7, #5320	; 0x14c8
   24d14:	movw	sl, #47764	; 0xba94
   24d18:	movw	r9, #47740	; 0xba7c
   24d1c:	movw	r8, #47752	; 0xba88
   24d20:	mov	r6, r0
   24d24:	movt	r7, #6
   24d28:	movt	sl, #3
   24d2c:	movt	r9, #3
   24d30:	movt	r8, #3
   24d34:	add	r5, r0, #20
   24d38:	b	24d4c <crc32@@Base+0xb2f4>
   24d3c:	add	r5, r5, #32
   24d40:	ldr	r2, [r5, #-16]
   24d44:	cmn	r2, #1
   24d48:	beq	24dd8 <crc32@@Base+0xb380>
   24d4c:	ldr	r1, [r7]
   24d50:	cmp	r1, #0
   24d54:	revne	r4, r3
   24d58:	revne	r1, r2
   24d5c:	moveq	r1, r2
   24d60:	moveq	r4, r3
   24d64:	cmp	r4, #512	; 0x200
   24d68:	bcs	24df8 <crc32@@Base+0xb3a0>
   24d6c:	add	r1, r4, r1
   24d70:	cmp	r1, #512	; 0x200
   24d74:	bcs	24df8 <crc32@@Base+0xb3a0>
   24d78:	str	r2, [sp]
   24d7c:	mov	r1, sl
   24d80:	mov	r2, r5
   24d84:	mov	r0, #1
   24d88:	bl	12794 <__printf_chk@plt>
   24d8c:	add	ip, r6, r4
   24d90:	ldr	r3, [r6, r4]
   24d94:	movw	r1, #47796	; 0xbab4
   24d98:	ldr	r0, [ip, #8]
   24d9c:	movt	r1, #3
   24da0:	ldrh	r4, [ip, #6]
   24da4:	cmp	r3, #0
   24da8:	ldrb	lr, [ip, #5]
   24dac:	ldrb	ip, [ip, #4]
   24db0:	movne	r2, r9
   24db4:	moveq	r2, r8
   24db8:	str	r0, [sp, #12]
   24dbc:	str	r4, [sp, #8]
   24dc0:	mov	r0, #1
   24dc4:	stm	sp, {ip, lr}
   24dc8:	bl	12794 <__printf_chk@plt>
   24dcc:	ldr	r3, [r5, #12]
   24dd0:	cmn	r3, #1
   24dd4:	bne	24d3c <crc32@@Base+0xb2e4>
   24dd8:	ldr	r1, [r7]
   24ddc:	mov	r0, fp
   24de0:	add	sp, sp, #20
   24de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24de8:	b	32d14 <crc32@@Base+0x192bc>
   24dec:	movw	r7, #5320	; 0x14c8
   24df0:	movt	r7, #6
   24df4:	b	24dd8 <crc32@@Base+0xb380>
   24df8:	mov	r0, #1
   24dfc:	bl	12218 <exit@plt>
   24e00:	ldr	r3, [r0]
   24e04:	movw	r2, #5320	; 0x14c8
   24e08:	movt	r2, #6
   24e0c:	cmn	r3, #1
   24e10:	ldr	r1, [r2]
   24e14:	beq	24e98 <crc32@@Base+0xb440>
   24e18:	ldr	ip, [r0, #4]
   24e1c:	cmn	ip, #1
   24e20:	beq	24e98 <crc32@@Base+0xb440>
   24e24:	push	{r4, r5, lr}
   24e28:	mov	lr, r0
   24e2c:	movw	r5, #510	; 0x1fe
   24e30:	b	24e58 <crc32@@Base+0xb400>
   24e34:	cmp	r3, #512	; 0x200
   24e38:	bcs	24e84 <crc32@@Base+0xb42c>
   24e3c:	ldr	r3, [lr, #32]
   24e40:	add	lr, lr, #32
   24e44:	cmn	r3, #1
   24e48:	beq	24e8c <crc32@@Base+0xb434>
   24e4c:	ldr	ip, [lr, #4]
   24e50:	cmn	ip, #1
   24e54:	beq	24e8c <crc32@@Base+0xb434>
   24e58:	cmp	r1, #0
   24e5c:	revne	ip, ip
   24e60:	revne	r3, r3
   24e64:	clz	r2, ip
   24e68:	sub	r4, r3, #1
   24e6c:	add	r3, r3, ip
   24e70:	lsr	r2, r2, #5
   24e74:	cmp	r4, r5
   24e78:	orrhi	r2, r2, #1
   24e7c:	cmp	r2, #0
   24e80:	beq	24e34 <crc32@@Base+0xb3dc>
   24e84:	mvn	r0, #0
   24e88:	pop	{r4, r5, pc}
   24e8c:	add	r0, r0, #512	; 0x200
   24e90:	pop	{r4, r5, lr}
   24e94:	b	32c9c <crc32@@Base+0x19244>
   24e98:	add	r0, r0, #512	; 0x200
   24e9c:	b	32c9c <crc32@@Base+0x19244>
   24ea0:	movw	r2, #47740	; 0xba7c
   24ea4:	movt	r2, #3
   24ea8:	push	{r4, r5, r6, r7, r8, lr}
   24eac:	mov	r4, r0
   24eb0:	mov	r7, r1
   24eb4:	ldm	r2!, {r0, r1}
   24eb8:	mov	ip, #64	; 0x40
   24ebc:	mov	lr, #12
   24ec0:	stm	r4, {ip, lr}
   24ec4:	mov	r5, r3
   24ec8:	ldrb	lr, [r2, #2]
   24ecc:	movw	r3, #49345	; 0xc0c1
   24ed0:	ldrh	r6, [r2]
   24ed4:	movt	r3, #49344	; 0xc0c0
   24ed8:	str	r0, [r4, #20]
   24edc:	mov	r2, #256	; 0x100
   24ee0:	strb	lr, [r4, #30]
   24ee4:	add	r0, r4, #32
   24ee8:	str	r1, [r4, #24]
   24eec:	mov	r1, #255	; 0xff
   24ef0:	strh	r6, [r4, #28]
   24ef4:	mov	r6, #0
   24ef8:	str	r3, [r4, #64]	; 0x40
   24efc:	str	r2, [r4, #68]	; 0x44
   24f00:	mov	r2, #32
   24f04:	str	r6, [r4, #72]	; 0x48
   24f08:	bl	12308 <memset@plt>
   24f0c:	ldr	r1, [r7, #44]	; 0x2c
   24f10:	mov	r3, r6
   24f14:	ldr	r2, [r5, #56]	; 0x38
   24f18:	sub	r1, r1, #512	; 0x200
   24f1c:	add	r0, r4, #512	; 0x200
   24f20:	bl	32ddc <crc32@@Base+0x19384>
   24f24:	ldr	r0, [r5, #64]	; 0x40
   24f28:	movw	r1, #47848	; 0xbae8
   24f2c:	mov	r2, #8
   24f30:	movt	r1, #3
   24f34:	bl	121a0 <strncmp@plt>
   24f38:	cmp	r0, #0
   24f3c:	popne	{r4, r5, r6, r7, r8, pc}
   24f40:	ldr	r2, [r7, #44]	; 0x2c
   24f44:	movw	r3, #5320	; 0x14c8
   24f48:	movt	r3, #6
   24f4c:	mov	r1, #1
   24f50:	add	r2, r2, #3
   24f54:	str	r1, [r3]
   24f58:	lsrs	r2, r2, #2
   24f5c:	popeq	{r4, r5, r6, r7, r8, pc}
   24f60:	add	r0, r0, #1
   24f64:	ldr	r3, [r4]
   24f68:	cmp	r2, r0
   24f6c:	rev	r3, r3
   24f70:	str	r3, [r4], #4
   24f74:	bne	24f60 <crc32@@Base+0xb508>
   24f78:	pop	{r4, r5, r6, r7, r8, pc}
   24f7c:	subs	r0, r0, #15
   24f80:	movne	r0, #1
   24f84:	bx	lr
   24f88:	bx	lr
   24f8c:	movw	r0, #47896	; 0xbb18
   24f90:	movt	r0, #3
   24f94:	b	12290 <puts@plt>
   24f98:	movw	r3, #61168	; 0xeef0
   24f9c:	movt	r3, #4
   24fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24fa4:	movw	r4, #63816	; 0xf948
   24fa8:	ldr	r2, [r3]
   24fac:	sub	sp, sp, #44	; 0x2c
   24fb0:	movt	r4, #4
   24fb4:	movw	r1, #50292	; 0xc474
   24fb8:	movt	r1, #3
   24fbc:	str	r3, [sp, #12]
   24fc0:	str	r0, [r4]
   24fc4:	mov	r3, #0
   24fc8:	str	r2, [sp, #36]	; 0x24
   24fcc:	str	r3, [sp, #16]
   24fd0:	str	r3, [sp, #28]
   24fd4:	bl	12350 <fopen@plt>
   24fd8:	subs	sl, r0, #0
   24fdc:	beq	25118 <crc32@@Base+0xb6c0>
   24fe0:	movw	fp, #26248	; 0x6688
   24fe4:	movw	r6, #5844	; 0x16d4
   24fe8:	movt	fp, #3
   24fec:	movt	r6, #6
   24ff0:	mov	r3, sl
   24ff4:	mov	r2, #10
   24ff8:	add	r1, sp, #28
   24ffc:	add	r0, sp, #16
   25000:	bl	12158 <__getdelim@plt>
   25004:	cmp	r0, #0
   25008:	ble	250c0 <crc32@@Base+0xb668>
   2500c:	ldr	r9, [r4, #4]
   25010:	add	r2, sp, #20
   25014:	mov	r1, fp
   25018:	ldr	r0, [sp, #16]
   2501c:	add	r9, r9, #1
   25020:	str	r9, [r4, #4]
   25024:	bl	12248 <__strtok_r@plt>
   25028:	cmp	r0, #0
   2502c:	beq	24ff0 <crc32@@Base+0xb598>
   25030:	movw	r7, #26252	; 0x668c
   25034:	movw	r8, #47960	; 0xbb58
   25038:	movt	r7, #3
   2503c:	movt	r8, #3
   25040:	str	r0, [sp, #16]
   25044:	add	r2, sp, #24
   25048:	mov	r1, r7
   2504c:	bl	12248 <__strtok_r@plt>
   25050:	subs	r5, r0, #0
   25054:	beq	24ff0 <crc32@@Base+0xb598>
   25058:	ldrb	r3, [r5]
   2505c:	cmp	r3, #35	; 0x23
   25060:	beq	24ff0 <crc32@@Base+0xb598>
   25064:	add	r2, sp, #32
   25068:	mov	r1, r8
   2506c:	bl	126c8 <sscanf@plt>
   25070:	cmp	r0, #0
   25074:	beq	250f4 <crc32@@Base+0xb69c>
   25078:	ldr	r0, [r4, #8]
   2507c:	mov	r3, #24
   25080:	ldr	ip, [r6]
   25084:	sub	r1, r0, #1
   25088:	ldr	r2, [sp, #32]
   2508c:	lsr	r2, r2, r3
   25090:	sub	r3, r3, #8
   25094:	cmn	r3, #8
   25098:	strb	r2, [r1, #1]!
   2509c:	bne	25088 <crc32@@Base+0xb630>
   250a0:	mov	r3, #0
   250a4:	add	r0, r0, #4
   250a8:	add	ip, ip, #4
   250ac:	str	r0, [r4, #8]
   250b0:	str	ip, [r6]
   250b4:	mov	r0, r3
   250b8:	str	r3, [sp, #16]
   250bc:	b	25044 <crc32@@Base+0xb5ec>
   250c0:	ldr	r0, [sp, #16]
   250c4:	cmp	r0, #0
   250c8:	beq	250d0 <crc32@@Base+0xb678>
   250cc:	bl	1214c <free@plt>
   250d0:	mov	r0, sl
   250d4:	bl	12620 <fclose@plt>
   250d8:	ldr	r3, [sp, #12]
   250dc:	ldr	r2, [sp, #36]	; 0x24
   250e0:	ldr	r3, [r3]
   250e4:	cmp	r2, r3
   250e8:	bne	25134 <crc32@@Base+0xb6dc>
   250ec:	add	sp, sp, #44	; 0x2c
   250f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   250f4:	ldr	r2, [r4]
   250f8:	mov	r3, r9
   250fc:	str	r5, [sp]
   25100:	movw	r1, #47964	; 0xbb5c
   25104:	mov	r0, #1
   25108:	movt	r1, #3
   2510c:	bl	12794 <__printf_chk@plt>
   25110:	mov	r0, #1
   25114:	bl	12218 <exit@plt>
   25118:	ldr	r2, [r4]
   2511c:	movw	r1, #47936	; 0xbb40
   25120:	mov	r0, #1
   25124:	movt	r1, #3
   25128:	bl	12794 <__printf_chk@plt>
   2512c:	mov	r0, #1
   25130:	bl	12218 <exit@plt>
   25134:	bl	124b8 <__stack_chk_fail@plt>
   25138:	push	{r4, r5, r6, r7, lr}
   2513c:	movw	r5, #61168	; 0xeef0
   25140:	movt	r5, #4
   25144:	sub	sp, sp, #100	; 0x64
   25148:	subs	r6, r0, #0
   2514c:	ldr	r3, [r5]
   25150:	str	r3, [sp, #92]	; 0x5c
   25154:	beq	25250 <crc32@@Base+0xb7f8>
   25158:	ldr	r0, [r6, #72]	; 0x48
   2515c:	cmp	r0, #0
   25160:	movweq	r4, #5844	; 0x16d4
   25164:	movteq	r4, #6
   25168:	beq	251c0 <crc32@@Base+0xb768>
   2516c:	movw	r1, #50292	; 0xc474
   25170:	movt	r1, #3
   25174:	bl	12350 <fopen@plt>
   25178:	subs	r7, r0, #0
   2517c:	beq	2529c <crc32@@Base+0xb844>
   25180:	bl	124ac <fileno@plt>
   25184:	mov	r2, sp
   25188:	mov	r1, r0
   2518c:	mov	r0, #3
   25190:	bl	12578 <__fxstat@plt>
   25194:	cmn	r0, #1
   25198:	beq	252b8 <crc32@@Base+0xb860>
   2519c:	ldr	r2, [sp, #44]	; 0x2c
   251a0:	movw	r4, #5844	; 0x16d4
   251a4:	movt	r4, #6
   251a8:	mov	r0, r7
   251ac:	adds	r3, r2, #63	; 0x3f
   251b0:	addmi	r3, r2, #126	; 0x7e
   251b4:	bic	r3, r3, #63	; 0x3f
   251b8:	str	r3, [r4, #4]
   251bc:	bl	12620 <fclose@plt>
   251c0:	ldr	r2, [r6, #40]	; 0x28
   251c4:	cmp	r2, #2
   251c8:	beq	25200 <crc32@@Base+0xb7a8>
   251cc:	cmp	r2, #7
   251d0:	beq	25258 <crc32@@Base+0xb800>
   251d4:	ldr	r3, [r4, #20]
   251d8:	movw	r2, #63816	; 0xf948
   251dc:	movt	r2, #4
   251e0:	mov	r0, #0
   251e4:	str	r3, [r2, #12]
   251e8:	ldr	r2, [sp, #92]	; 0x5c
   251ec:	ldr	r3, [r5]
   251f0:	cmp	r2, r3
   251f4:	bne	25298 <crc32@@Base+0xb840>
   251f8:	add	sp, sp, #100	; 0x64
   251fc:	pop	{r4, r5, r6, r7, pc}
   25200:	ldr	r3, [r6, #56]	; 0x38
   25204:	mov	r1, #0
   25208:	ldr	r0, [r4, #4]
   2520c:	movt	r1, #2401	; 0x961
   25210:	bic	r3, r3, #-16777216	; 0xff000000
   25214:	str	r2, [r4, #8]
   25218:	orr	r3, r3, #-2130706432	; 0x81000000
   2521c:	str	r1, [r4, #24]
   25220:	add	r3, r3, r0
   25224:	mov	r2, #192	; 0xc0
   25228:	mov	r1, #97	; 0x61
   2522c:	movt	r2, #2401	; 0x961
   25230:	str	r3, [r4, #20]
   25234:	str	r2, [r4, #32]
   25238:	mov	r2, #0
   2523c:	str	r1, [r4, #12]
   25240:	str	r2, [r4, #16]
   25244:	str	r2, [r4, #28]
   25248:	str	r2, [r4, #36]	; 0x24
   2524c:	b	251d8 <crc32@@Base+0xb780>
   25250:	mov	r0, #1
   25254:	b	251e8 <crc32@@Base+0xb790>
   25258:	mov	r1, #-2113929216	; 0x82000000
   2525c:	str	r2, [r4, #8]
   25260:	mov	r3, r1
   25264:	movw	r2, #32960	; 0x80c0
   25268:	str	r1, [r4, #20]
   2526c:	movt	r2, #2323	; 0x913
   25270:	mov	r0, #19
   25274:	str	r2, [r4, #24]
   25278:	str	r2, [r4, #32]
   2527c:	mov	r1, #128	; 0x80
   25280:	mov	r2, #0
   25284:	str	r0, [r4, #12]
   25288:	str	r1, [r4, #16]
   2528c:	str	r2, [r4, #28]
   25290:	str	r2, [r4, #36]	; 0x24
   25294:	b	251d8 <crc32@@Base+0xb780>
   25298:	bl	124b8 <__stack_chk_fail@plt>
   2529c:	ldr	r2, [r6, #72]	; 0x48
   252a0:	movw	r1, #48004	; 0xbb84
   252a4:	mov	r0, #1
   252a8:	movt	r1, #3
   252ac:	bl	12794 <__printf_chk@plt>
   252b0:	mov	r0, #1
   252b4:	bl	12218 <exit@plt>
   252b8:	bl	126b0 <__errno_location@plt>
   252bc:	ldr	r0, [r0]
   252c0:	bl	12224 <strerror@plt>
   252c4:	movw	r1, #48028	; 0xbb9c
   252c8:	movt	r1, #3
   252cc:	mov	r2, r0
   252d0:	mov	r0, #1
   252d4:	bl	12794 <__printf_chk@plt>
   252d8:	mov	r0, #1
   252dc:	bl	12218 <exit@plt>
   252e0:	movw	r3, #61168	; 0xeef0
   252e4:	movt	r3, #4
   252e8:	ldr	ip, [r0]
   252ec:	movw	r2, #21930	; 0x55aa
   252f0:	ldr	r1, [r3]
   252f4:	movt	r2, #21930	; 0x55aa
   252f8:	push	{lr}		; (str lr, [sp, #-4]!)
   252fc:	cmp	ip, r2
   25300:	sub	sp, sp, #12
   25304:	str	r2, [sp]
   25308:	str	r1, [sp, #4]
   2530c:	bne	25344 <crc32@@Base+0xb8ec>
   25310:	ldr	r1, [r0, #4]
   25314:	movw	r2, #3585	; 0xe01
   25318:	movt	r2, #1
   2531c:	str	r2, [sp]
   25320:	cmp	r1, r2
   25324:	bne	25344 <crc32@@Base+0xb8ec>
   25328:	mov	r0, #0
   2532c:	ldr	r2, [sp, #4]
   25330:	ldr	r3, [r3]
   25334:	cmp	r2, r3
   25338:	bne	2534c <crc32@@Base+0xb8f4>
   2533c:	add	sp, sp, #12
   25340:	pop	{pc}		; (ldr pc, [sp], #4)
   25344:	mvn	r0, #10
   25348:	b	2532c <crc32@@Base+0xb8d4>
   2534c:	bl	124b8 <__stack_chk_fail@plt>
   25350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25354:	movw	r7, #61168	; 0xeef0
   25358:	movt	r7, #4
   2535c:	sub	sp, sp, #20
   25360:	mov	r8, r1
   25364:	mov	r9, r0
   25368:	ldr	r3, [r7]
   2536c:	ldr	r0, [r1, #64]	; 0x40
   25370:	str	r3, [sp, #12]
   25374:	bl	24f98 <crc32@@Base+0xb540>
   25378:	ldr	r0, [r8, #68]	; 0x44
   2537c:	ldrb	r3, [r0]
   25380:	cmp	r3, #0
   25384:	bne	25584 <crc32@@Base+0xbb2c>
   25388:	ldr	r0, [r8, #72]	; 0x48
   2538c:	cmp	r0, #0
   25390:	beq	25594 <crc32@@Base+0xbb3c>
   25394:	movw	r1, #50292	; 0xc474
   25398:	movt	r1, #3
   2539c:	bl	12350 <fopen@plt>
   253a0:	subs	r6, r0, #0
   253a4:	beq	255a8 <crc32@@Base+0xbb50>
   253a8:	movw	r4, #5844	; 0x16d4
   253ac:	movt	r4, #6
   253b0:	movw	sl, #63816	; 0xf948
   253b4:	movt	sl, #4
   253b8:	ldr	r2, [r4, #20]
   253bc:	ldr	r3, [r4, #4]
   253c0:	sub	r3, r2, r3
   253c4:	str	r3, [sl, #12]
   253c8:	cmp	r3, r2
   253cc:	bcs	25464 <crc32@@Base+0xba0c>
   253d0:	ldr	r2, [sl, #8]
   253d4:	mov	fp, #255	; 0xff
   253d8:	ldr	r1, [r4]
   253dc:	lsr	r0, r3, #24
   253e0:	mov	r5, #64	; 0x40
   253e4:	add	r2, r2, #4
   253e8:	strb	r3, [r2, #-1]
   253ec:	add	r1, r1, #4
   253f0:	strb	r0, [r2, #-4]
   253f4:	lsr	r0, r3, #16
   253f8:	str	r1, [r4]
   253fc:	lsr	r1, r3, #8
   25400:	strb	r0, [r2, #-3]
   25404:	add	r3, r3, r5
   25408:	strb	r1, [r2, #-2]
   2540c:	strd	r2, [sl, #8]
   25410:	mov	r0, r6
   25414:	bl	121d0 <fgetc@plt>
   25418:	cmn	r0, #1
   2541c:	uxtbne	fp, r0
   25420:	bne	25430 <crc32@@Base+0xb9d8>
   25424:	ldr	r3, [r4, #8]
   25428:	cmp	r3, #2
   2542c:	moveq	fp, #255	; 0xff
   25430:	ldr	r2, [sl, #8]
   25434:	subs	r5, r5, #1
   25438:	ldr	r3, [r4]
   2543c:	add	r1, r2, #1
   25440:	str	r1, [sl, #8]
   25444:	add	r3, r3, #1
   25448:	strb	fp, [r2]
   2544c:	str	r3, [r4]
   25450:	bne	25410 <crc32@@Base+0xb9b8>
   25454:	ldr	r3, [sl, #12]
   25458:	ldr	r2, [r4, #20]
   2545c:	cmp	r3, r2
   25460:	bcc	253d0 <crc32@@Base+0xb978>
   25464:	mov	r0, r6
   25468:	bl	12620 <fclose@plt>
   2546c:	ldr	r2, [pc, #404]	; 25608 <crc32@@Base+0xbbb0>
   25470:	add	r0, r2, #16
   25474:	ldr	r3, [r2]
   25478:	lsr	r1, r3, #24
   2547c:	strb	r3, [sp, #11]
   25480:	strb	r1, [sp, #8]
   25484:	lsr	r1, r3, #16
   25488:	lsr	r3, r3, #8
   2548c:	strb	r1, [sp, #9]
   25490:	strb	r3, [sp, #10]
   25494:	ldr	r3, [sp, #8]
   25498:	str	r3, [r2], #4
   2549c:	cmp	r0, r2
   254a0:	bne	25474 <crc32@@Base+0xba1c>
   254a4:	ldr	ip, [sl, #8]
   254a8:	ldr	lr, [r4]
   254ac:	ldr	r3, [pc, #340]	; 25608 <crc32@@Base+0xbbb0>
   254b0:	sub	r2, ip, #1
   254b4:	ldrb	r1, [r3], #1
   254b8:	cmp	r3, r0
   254bc:	strb	r1, [r2, #1]!
   254c0:	bne	254b4 <crc32@@Base+0xba5c>
   254c4:	ldr	r2, [r4, #12]
   254c8:	add	lr, lr, #20
   254cc:	ldr	r1, [r4, #16]
   254d0:	mov	r0, #8
   254d4:	strb	r0, [ip, #16]
   254d8:	mov	r0, #0
   254dc:	strb	r2, [ip, #17]
   254e0:	mov	r2, lr
   254e4:	strb	r1, [ip, #18]
   254e8:	mov	r1, #64	; 0x40
   254ec:	strb	r1, [ip, #19]
   254f0:	movw	r1, #5956	; 0x1744
   254f4:	movt	r1, #6
   254f8:	str	lr, [r4]
   254fc:	add	ip, ip, #20
   25500:	str	ip, [sl, #8]
   25504:	bl	2560c <crc32@@Base+0xbbb4>
   25508:	ldr	r3, [sl, #8]
   2550c:	ldr	r5, [r4]
   25510:	mov	r2, #0
   25514:	add	r3, r3, #4
   25518:	add	r5, r5, #4
   2551c:	str	r5, [r4]
   25520:	mov	r1, r0
   25524:	mov	r0, r9
   25528:	strb	r1, [r3, #-1]
   2552c:	lsr	ip, r1, #24
   25530:	strb	ip, [r3, #-4]
   25534:	lsr	ip, r1, #16
   25538:	lsr	r1, r1, #8
   2553c:	strb	ip, [r3, #-3]
   25540:	strb	r1, [r3, #-2]
   25544:	mov	r1, r2
   25548:	str	r3, [sl, #8]
   2554c:	bl	12518 <lseek@plt>
   25550:	mov	r2, r5
   25554:	mov	r0, r9
   25558:	movw	r1, #5956	; 0x1744
   2555c:	movt	r1, #6
   25560:	bl	1262c <write@plt>
   25564:	cmp	r0, r5
   25568:	bne	255c8 <crc32@@Base+0xbb70>
   2556c:	ldr	r2, [sp, #12]
   25570:	ldr	r3, [r7]
   25574:	cmp	r2, r3
   25578:	bne	255c4 <crc32@@Base+0xbb6c>
   2557c:	add	sp, sp, #20
   25580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25584:	bl	24f98 <crc32@@Base+0xb540>
   25588:	ldr	r0, [r8, #72]	; 0x48
   2558c:	cmp	r0, #0
   25590:	bne	25394 <crc32@@Base+0xb93c>
   25594:	movw	r4, #5844	; 0x16d4
   25598:	movw	sl, #63816	; 0xf948
   2559c:	movt	r4, #6
   255a0:	movt	sl, #4
   255a4:	b	2546c <crc32@@Base+0xba14>
   255a8:	ldr	r2, [r8, #72]	; 0x48
   255ac:	movw	r1, #48004	; 0xbb84
   255b0:	mov	r0, #1
   255b4:	movt	r1, #3
   255b8:	bl	12794 <__printf_chk@plt>
   255bc:	mov	r0, #1
   255c0:	bl	12218 <exit@plt>
   255c4:	bl	124b8 <__stack_chk_fail@plt>
   255c8:	movw	r2, #65196	; 0xfeac
   255cc:	movt	r2, #4
   255d0:	ldr	r5, [r8, #76]	; 0x4c
   255d4:	ldr	r4, [r2]
   255d8:	bl	126b0 <__errno_location@plt>
   255dc:	ldr	r0, [r0]
   255e0:	bl	12224 <strerror@plt>
   255e4:	mov	r3, r5
   255e8:	movw	r2, #48080	; 0xbbd0
   255ec:	mov	r1, #1
   255f0:	movt	r2, #3
   255f4:	str	r0, [sp]
   255f8:	mov	r0, r4
   255fc:	bl	122d8 <__fprintf_chk@plt>
   25600:	mov	r0, #1
   25604:	bl	12218 <exit@plt>
   25608:	andeq	r1, r6, ip, ror #13
   2560c:	push	{r4, r5, r6, r7, r8, lr}
   25610:	movw	r8, #22916	; 0x5984
   25614:	movt	r8, #21
   25618:	ldr	r4, [r8]
   2561c:	cmp	r4, #0
   25620:	bne	2566c <crc32@@Base+0xbc14>
   25624:	movw	r6, #7607	; 0x1db7
   25628:	add	r7, r8, #1024	; 0x400
   2562c:	movt	r6, #1217	; 0x4c1
   25630:	mov	r5, r8
   25634:	mov	r3, r4
   25638:	mov	ip, #8
   2563c:	cmp	r3, #0
   25640:	mov	lr, r3
   25644:	lsl	r3, r3, #1
   25648:	eorlt	r3, r3, r6
   2564c:	subs	ip, ip, #1
   25650:	bne	2563c <crc32@@Base+0xbbe4>
   25654:	str	r3, [r5, #4]!
   25658:	cmp	r5, r7
   2565c:	add	r4, r4, #16777216	; 0x1000000
   25660:	bne	25634 <crc32@@Base+0xbbdc>
   25664:	mov	r3, #1
   25668:	str	r3, [r8]
   2566c:	cmp	r2, #0
   25670:	mvn	r0, r0
   25674:	popeq	{r4, r5, r6, r7, r8, pc}
   25678:	add	r2, r1, r2
   2567c:	ldrb	r3, [r1], #1
   25680:	eor	r3, r3, r0, lsr #24
   25684:	cmp	r1, r2
   25688:	add	r3, r8, r3, lsl #2
   2568c:	ldr	r3, [r3, #4]
   25690:	eor	r0, r3, r0, lsl #8
   25694:	bne	2567c <crc32@@Base+0xbc24>
   25698:	pop	{r4, r5, r6, r7, r8, pc}
   2569c:	subs	r0, r0, #30
   256a0:	movne	r0, #1
   256a4:	bx	lr
   256a8:	push	{r4, r5, r6, r7, r8, lr}
   256ac:	lsr	r2, r0, #3
   256b0:	lsr	r5, r0, #2
   256b4:	lsr	lr, r0, #5
   256b8:	lsr	r7, r0, #1
   256bc:	lsr	r4, r0, #4
   256c0:	eor	r3, r5, r2
   256c4:	lsr	r1, r0, #7
   256c8:	eor	r2, r2, r4
   256cc:	and	ip, r0, #1
   256d0:	eor	r3, r3, lr
   256d4:	eor	r4, r4, lr
   256d8:	eor	lr, lr, r7
   256dc:	lsr	r6, r0, #6
   256e0:	eor	ip, ip, r1
   256e4:	and	r8, r2, #1
   256e8:	and	lr, lr, #1
   256ec:	eor	r8, r8, ip
   256f0:	eor	r3, r3, r6
   256f4:	and	r4, r4, #1
   256f8:	eor	r0, r0, r2
   256fc:	eor	ip, ip, lr
   25700:	eor	r2, r7, r5
   25704:	and	lr, r6, #1
   25708:	eor	r0, r0, r6
   2570c:	eor	ip, ip, lr
   25710:	eor	r1, r1, r4
   25714:	and	lr, r2, #1
   25718:	and	r3, r3, #1
   2571c:	eor	r2, r2, r0
   25720:	orr	r3, r3, r8, lsl #3
   25724:	eor	r1, r1, lr
   25728:	orr	r3, r3, ip, lsl #2
   2572c:	and	r0, r2, #1
   25730:	orr	r3, r3, r1, lsl #1
   25734:	orr	r0, r3, r0, lsl #4
   25738:	pop	{r4, r5, r6, r7, r8, pc}
   2573c:	push	{r4, r5, r6, r7, r8, lr}
   25740:	mov	r2, #216	; 0xd8
   25744:	mov	r1, #0
   25748:	mov	r7, r0
   2574c:	bl	12308 <memset@plt>
   25750:	add	r5, r7, #508	; 0x1fc
   25754:	mov	r2, #288	; 0x120
   25758:	mov	r1, #255	; 0xff
   2575c:	add	r0, r7, #224	; 0xe0
   25760:	add	r5, r5, #3
   25764:	bl	12308 <memset@plt>
   25768:	mov	r2, #512	; 0x200
   2576c:	mov	r1, #255	; 0xff
   25770:	add	r0, r7, #512	; 0x200
   25774:	bl	12308 <memset@plt>
   25778:	sub	r4, r7, #1
   2577c:	mov	r2, #261120	; 0x3fc00
   25780:	mov	r1, #255	; 0xff
   25784:	add	r0, r7, #1024	; 0x400
   25788:	mov	r6, r5
   2578c:	bl	12308 <memset@plt>
   25790:	mov	r2, #1024	; 0x400
   25794:	mov	r1, #0
   25798:	add	r0, r7, #262144	; 0x40000
   2579c:	bl	12308 <memset@plt>
   257a0:	mov	r0, #2112	; 0x840
   257a4:	mov	r1, #64	; 0x40
   257a8:	mov	r2, #2048	; 0x800
   257ac:	strd	r0, [r7, #24]
   257b0:	movw	r3, #16928	; 0x4220
   257b4:	mov	r0, #0
   257b8:	movt	r3, #17987	; 0x4643
   257bc:	mov	r1, #8
   257c0:	str	r3, [r7, #4]
   257c4:	strd	r0, [r7, #216]	; 0xd8
   257c8:	mov	r3, #6
   257cc:	str	r2, [r7, #20]
   257d0:	str	r3, [r7, #56]	; 0x38
   257d4:	mov	r3, #65280	; 0xff00
   257d8:	str	r2, [r7, #132]	; 0x84
   257dc:	movt	r3, #1
   257e0:	str	r3, [r7, #120]	; 0x78
   257e4:	mov	r3, #1
   257e8:	str	r3, [r7, #8]
   257ec:	str	r3, [r7, #172]	; 0xac
   257f0:	mov	r3, #128	; 0x80
   257f4:	str	r3, [r7, #104]	; 0x68
   257f8:	str	r3, [r7, #108]	; 0x6c
   257fc:	ldrb	r0, [r4, #1]!
   25800:	bl	256a8 <crc32@@Base+0xbc50>
   25804:	cmp	r4, r6
   25808:	strb	r0, [r5, #1]!
   2580c:	bne	257fc <crc32@@Base+0xbda4>
   25810:	pop	{r4, r5, r6, r7, r8, pc}
   25814:	push	{r4, r5, r6, lr}
   25818:	movw	r6, #48148	; 0xbc14
   2581c:	sub	r5, r0, #4
   25820:	movt	r6, #3
   25824:	mov	r4, #0
   25828:	mov	r2, r4
   2582c:	ldr	r3, [r5, #4]!
   25830:	mov	r1, r6
   25834:	add	r4, r4, #1
   25838:	mov	r0, #1
   2583c:	bl	12794 <__printf_chk@plt>
   25840:	cmp	r4, #56	; 0x38
   25844:	bne	25828 <crc32@@Base+0xbdd0>
   25848:	pop	{r4, r5, r6, pc}
   2584c:	ldr	r2, [r0, #4]
   25850:	movw	r3, #16928	; 0x4220
   25854:	movt	r3, #17987	; 0x4643
   25858:	cmp	r2, r3
   2585c:	bne	258f8 <crc32@@Base+0xbea0>
   25860:	ldr	r3, [r0, #8]
   25864:	cmp	r3, #1
   25868:	bne	258f8 <crc32@@Base+0xbea0>
   2586c:	ldr	r3, [r0, #28]
   25870:	cmp	r3, #64	; 0x40
   25874:	bne	258f8 <crc32@@Base+0xbea0>
   25878:	ldr	r3, [r0, #56]	; 0x38
   2587c:	cmp	r3, #6
   25880:	bne	258f8 <crc32@@Base+0xbea0>
   25884:	ldr	r2, [r0, #120]	; 0x78
   25888:	mov	r3, #65280	; 0xff00
   2588c:	movt	r3, #1
   25890:	cmp	r2, r3
   25894:	bne	258f8 <crc32@@Base+0xbea0>
   25898:	ldr	r3, [r0, #172]	; 0xac
   2589c:	cmp	r3, #1
   258a0:	bne	258f8 <crc32@@Base+0xbea0>
   258a4:	ldr	r3, [r0, #216]	; 0xd8
   258a8:	cmp	r3, #0
   258ac:	bne	258f8 <crc32@@Base+0xbea0>
   258b0:	ldr	r3, [r0, #220]	; 0xdc
   258b4:	cmp	r3, #8
   258b8:	bne	258f8 <crc32@@Base+0xbea0>
   258bc:	push	{r4, r5, r6, lr}
   258c0:	add	r5, r0, #508	; 0x1fc
   258c4:	add	r5, r5, #3
   258c8:	sub	r4, r0, #1
   258cc:	mov	r6, r5
   258d0:	b	258dc <crc32@@Base+0xbe84>
   258d4:	cmp	r4, r6
   258d8:	beq	25900 <crc32@@Base+0xbea8>
   258dc:	ldrb	r0, [r4, #1]!
   258e0:	bl	256a8 <crc32@@Base+0xbc50>
   258e4:	ldrb	r3, [r5, #1]!
   258e8:	cmp	r3, r0
   258ec:	beq	258d4 <crc32@@Base+0xbe7c>
   258f0:	mvn	r0, #0
   258f4:	pop	{r4, r5, r6, pc}
   258f8:	mvn	r0, #0
   258fc:	bx	lr
   25900:	mov	r0, #0
   25904:	pop	{r4, r5, r6, pc}
   25908:	subs	r0, r0, #34	; 0x22
   2590c:	movne	r0, #1
   25910:	bx	lr
   25914:	cmp	r0, #0
   25918:	beq	25940 <crc32@@Base+0xbee8>
   2591c:	mov	r2, #1
   25920:	movw	ip, #21587	; 0x5453
   25924:	strb	r2, [r0, #74]	; 0x4a
   25928:	movt	ip, #12877	; 0x324d
   2592c:	str	r2, [r0, #100]	; 0x64
   25930:	str	ip, [r0]
   25934:	mov	ip, #0
   25938:	str	r2, [r0, #104]	; 0x68
   2593c:	str	ip, [r0, #252]	; 0xfc
   25940:	ldr	r1, [r1, #44]	; 0x2c
   25944:	ldr	ip, [r3, #56]	; 0x38
   25948:	ldr	r2, [r3, #60]	; 0x3c
   2594c:	cmp	r1, #255	; 0xff
   25950:	sub	r3, r1, #256	; 0x100
   25954:	str	r3, [r0, #76]	; 0x4c
   25958:	str	ip, [r0, #88]	; 0x58
   2595c:	movls	r3, #0
   25960:	str	r2, [r0, #80]	; 0x50
   25964:	bls	2598c <crc32@@Base+0xbf34>
   25968:	cmp	r3, #0
   2596c:	add	r2, r0, #256	; 0x100
   25970:	beq	2598c <crc32@@Base+0xbf34>
   25974:	add	r1, r0, r1
   25978:	mov	r3, #0
   2597c:	ldrb	ip, [r2], #1
   25980:	cmp	r1, r2
   25984:	add	r3, r3, ip
   25988:	bne	2597c <crc32@@Base+0xbf24>
   2598c:	str	r3, [r0, #68]	; 0x44
   25990:	bx	lr
   25994:	push	{r4, lr}
   25998:	movw	r1, #48172	; 0xbc2c
   2599c:	mov	r4, r0
   259a0:	ldrb	r3, [r0, #73]	; 0x49
   259a4:	ldrb	r2, [r0, #74]	; 0x4a
   259a8:	movt	r1, #3
   259ac:	mov	r0, #1
   259b0:	bl	12794 <__printf_chk@plt>
   259b4:	ldr	r2, [r4, #76]	; 0x4c
   259b8:	movw	r1, #48220	; 0xbc5c
   259bc:	mov	r0, #1
   259c0:	movt	r1, #3
   259c4:	bl	12794 <__printf_chk@plt>
   259c8:	ldr	r2, [r4, #88]	; 0x58
   259cc:	movw	r1, #48248	; 0xbc78
   259d0:	mov	r0, #1
   259d4:	movt	r1, #3
   259d8:	bl	12794 <__printf_chk@plt>
   259dc:	ldr	r2, [r4, #80]	; 0x50
   259e0:	movw	r1, #48272	; 0xbc90
   259e4:	mov	r0, #1
   259e8:	movt	r1, #3
   259ec:	bl	12794 <__printf_chk@plt>
   259f0:	ldr	r2, [r4, #68]	; 0x44
   259f4:	movw	r1, #48296	; 0xbca8
   259f8:	mov	r0, #1
   259fc:	movt	r1, #3
   25a00:	bl	12794 <__printf_chk@plt>
   25a04:	ldr	r2, [r4, #100]	; 0x64
   25a08:	movw	r1, #48320	; 0xbcc0
   25a0c:	mov	r0, #1
   25a10:	movt	r1, #3
   25a14:	bl	12794 <__printf_chk@plt>
   25a18:	ldr	r2, [r4, #252]	; 0xfc
   25a1c:	movw	r1, #48344	; 0xbcd8
   25a20:	mov	r0, #1
   25a24:	movt	r1, #3
   25a28:	pop	{r4, lr}
   25a2c:	b	12794 <__printf_chk@plt>
   25a30:	cmp	r1, #255	; 0xff
   25a34:	bls	25a9c <crc32@@Base+0xc044>
   25a38:	ldr	r2, [r0]
   25a3c:	movw	r3, #21587	; 0x5453
   25a40:	movt	r3, #12877	; 0x324d
   25a44:	cmp	r2, r3
   25a48:	bne	25a9c <crc32@@Base+0xc044>
   25a4c:	ldrb	r3, [r0, #74]	; 0x4a
   25a50:	cmp	r3, #1
   25a54:	bne	25a9c <crc32@@Base+0xc044>
   25a58:	ldr	r3, [r0, #84]	; 0x54
   25a5c:	cmp	r3, #0
   25a60:	bne	25a9c <crc32@@Base+0xc044>
   25a64:	ldr	r3, [r0, #92]	; 0x5c
   25a68:	cmp	r3, #0
   25a6c:	bne	25a9c <crc32@@Base+0xc044>
   25a70:	ldr	r3, [r0, #172]	; 0xac
   25a74:	cmp	r3, #0
   25a78:	bne	25a9c <crc32@@Base+0xc044>
   25a7c:	add	r3, r0, #172	; 0xac
   25a80:	add	r2, r0, #248	; 0xf8
   25a84:	b	25a90 <crc32@@Base+0xc038>
   25a88:	cmp	r3, r2
   25a8c:	bxeq	lr
   25a90:	ldr	r0, [r3, #4]!
   25a94:	cmp	r0, #0
   25a98:	beq	25a88 <crc32@@Base+0xc030>
   25a9c:	mvn	r0, #0
   25aa0:	bx	lr
   25aa4:	push	{r4, r5, r6, r7, r8, r9, lr}
   25aa8:	movw	r5, #61168	; 0xeef0
   25aac:	movt	r5, #4
   25ab0:	sub	sp, sp, #524	; 0x20c
   25ab4:	add	lr, sp, #260	; 0x104
   25ab8:	add	ip, sp, #3
   25abc:	ldr	r4, [r5]
   25ac0:	add	r8, sp, #516	; 0x204
   25ac4:	mov	r7, ip
   25ac8:	mov	r3, lr
   25acc:	mov	r6, #0
   25ad0:	str	r4, [sp, #516]	; 0x204
   25ad4:	and	r4, r6, #15
   25ad8:	sub	r9, r3, lr
   25adc:	add	r6, r4, #1
   25ae0:	strb	r9, [r7, #1]!
   25ae4:	ldrb	r4, [r2, r4]
   25ae8:	strb	r4, [r3], #1
   25aec:	cmp	r3, r8
   25af0:	bne	25ad4 <crc32@@Base+0xc07c>
   25af4:	add	r3, sp, #4
   25af8:	sub	r2, lr, #1
   25afc:	add	r7, r3, #255	; 0xff
   25b00:	mov	r3, #0
   25b04:	ldrb	r4, [ip, #1]!
   25b08:	ldrb	lr, [r2, #1]!
   25b0c:	add	r3, r3, r4
   25b10:	cmp	r7, ip
   25b14:	add	r3, r3, lr
   25b18:	add	lr, sp, #520	; 0x208
   25b1c:	uxtb	r3, r3
   25b20:	add	lr, lr, r3
   25b24:	uxth	r3, r3
   25b28:	ldrb	r6, [lr, #-516]	; 0xfffffdfc
   25b2c:	strb	r6, [ip]
   25b30:	strb	r4, [lr, #-516]	; 0xfffffdfc
   25b34:	bne	25b04 <crc32@@Base+0xc0ac>
   25b38:	cmp	r1, #0
   25b3c:	beq	25bb0 <crc32@@Base+0xc158>
   25b40:	add	r1, r0, r1
   25b44:	sub	r0, r0, #1
   25b48:	sub	r4, r1, #1
   25b4c:	mov	r1, #0
   25b50:	mov	r2, r1
   25b54:	add	r3, r2, #1
   25b58:	add	r2, sp, #520	; 0x208
   25b5c:	add	lr, sp, #520	; 0x208
   25b60:	ldrb	r6, [r0, #1]!
   25b64:	uxtb	r3, r3
   25b68:	add	ip, r2, r3
   25b6c:	cmp	r4, r0
   25b70:	uxth	r2, r3
   25b74:	ldrb	r3, [ip, #-516]	; 0xfffffdfc
   25b78:	add	r1, r1, r3
   25b7c:	uxtb	r1, r1
   25b80:	add	lr, lr, r1
   25b84:	ldrb	r7, [lr, #-516]	; 0xfffffdfc
   25b88:	strb	r7, [ip, #-516]	; 0xfffffdfc
   25b8c:	strb	r3, [lr, #-516]	; 0xfffffdfc
   25b90:	ldrb	ip, [ip, #-516]	; 0xfffffdfc
   25b94:	add	r3, r3, ip
   25b98:	add	ip, sp, #520	; 0x208
   25b9c:	uxtab	r3, ip, r3
   25ba0:	ldrb	r3, [r3, #-516]	; 0xfffffdfc
   25ba4:	eor	r3, r3, r6
   25ba8:	strb	r3, [r0]
   25bac:	bne	25b54 <crc32@@Base+0xc0fc>
   25bb0:	ldr	r2, [sp, #516]	; 0x204
   25bb4:	ldr	r3, [r5]
   25bb8:	cmp	r2, r3
   25bbc:	bne	25bc8 <crc32@@Base+0xc170>
   25bc0:	add	sp, sp, #524	; 0x20c
   25bc4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   25bc8:	bl	124b8 <__stack_chk_fail@plt>
   25bcc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25bd0:	mov	r5, r1
   25bd4:	mov	r6, r0
   25bd8:	mov	r1, r0
   25bdc:	mov	r4, r2
   25be0:	mov	r7, #0
   25be4:	mov	r0, r5
   25be8:	str	r7, [r2]
   25bec:	mov	r2, #512	; 0x200
   25bf0:	bl	125c0 <memcpy@plt>
   25bf4:	mov	r0, r5
   25bf8:	movw	r2, #63964	; 0xf9dc
   25bfc:	mov	r1, #512	; 0x200
   25c00:	movt	r2, #4
   25c04:	bl	25aa4 <crc32@@Base+0xc04c>
   25c08:	ldr	r3, [r5]
   25c0c:	movw	r2, #43605	; 0xaa55
   25c10:	movt	r2, #4080	; 0xff0
   25c14:	cmp	r3, r2
   25c18:	bne	25d24 <crc32@@Base+0xc2cc>
   25c1c:	ldr	r3, [r5, #8]
   25c20:	cmp	r3, r7
   25c24:	beq	25d2c <crc32@@Base+0xc2d4>
   25c28:	ldrh	r0, [r5, #12]
   25c2c:	mov	r2, #61440	; 0xf000
   25c30:	ldr	r8, [pc, #252]	; 25d34 <crc32@@Base+0xc2dc>
   25c34:	movt	r2, #65535	; 0xffff
   25c38:	mov	r3, r7
   25c3c:	lsl	r1, r0, #9
   25c40:	and	r0, r2, r0, lsl #10
   25c44:	add	r7, r6, r1
   25c48:	ubfx	r1, r1, #0, #11
   25c4c:	orr	r0, r0, r1
   25c50:	mov	lr, r8
   25c54:	ldrb	r5, [r7]
   25c58:	add	r0, r6, r0
   25c5c:	b	25c78 <crc32@@Base+0xc220>
   25c60:	ldrb	ip, [r0]
   25c64:	cmp	ip, r1
   25c68:	beq	25cd4 <crc32@@Base+0xc27c>
   25c6c:	add	r3, r3, #1
   25c70:	cmp	r3, #9
   25c74:	beq	25d1c <crc32@@Base+0xc2c4>
   25c78:	ldr	r2, [lr, #4]
   25c7c:	add	lr, lr, #16
   25c80:	ldrb	r1, [r2]
   25c84:	cmp	r5, r1
   25c88:	bne	25c60 <crc32@@Base+0xc208>
   25c8c:	ldrb	r6, [r7, #1]
   25c90:	add	sl, r7, #1
   25c94:	ldrb	ip, [r2, #1]
   25c98:	add	r9, r2, #1
   25c9c:	cmp	r6, ip
   25ca0:	bne	25c60 <crc32@@Base+0xc208>
   25ca4:	ldrb	r6, [sl, #1]!
   25ca8:	ldrb	ip, [r9, #1]!
   25cac:	cmp	r6, ip
   25cb0:	bne	25c60 <crc32@@Base+0xc208>
   25cb4:	ldrb	r6, [sl, #1]
   25cb8:	ldrb	ip, [r9, #1]
   25cbc:	cmp	r6, ip
   25cc0:	bne	25c60 <crc32@@Base+0xc208>
   25cc4:	add	r3, r8, r3, lsl #4
   25cc8:	mov	r0, #24
   25ccc:	str	r3, [r4]
   25cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25cd4:	ldrb	r1, [r0, #1]
   25cd8:	add	ip, r2, #1
   25cdc:	ldrb	r2, [r2, #1]
   25ce0:	add	r6, r0, #1
   25ce4:	cmp	r1, r2
   25ce8:	bne	25c6c <crc32@@Base+0xc214>
   25cec:	ldrb	r1, [r6, #1]!
   25cf0:	ldrb	r2, [ip, #1]!
   25cf4:	cmp	r1, r2
   25cf8:	bne	25c6c <crc32@@Base+0xc214>
   25cfc:	ldrb	r1, [r6, #1]
   25d00:	ldrb	r2, [ip, #1]
   25d04:	cmp	r1, r2
   25d08:	bne	25c6c <crc32@@Base+0xc214>
   25d0c:	add	r3, r8, r3, lsl #4
   25d10:	mov	r0, #25
   25d14:	str	r3, [r4]
   25d18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25d1c:	mvn	r0, #0
   25d20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25d24:	mvn	r0, #70	; 0x46
   25d28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25d2c:	mvn	r0, #37	; 0x25
   25d30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25d34:	andeq	pc, r4, ip, ror #19
   25d38:	push	{r4, r5, r6, r7, r8, lr}
   25d3c:	mov	r6, r0
   25d40:	ldr	r5, [pc, #56]	; 25d80 <crc32@@Base+0xc328>
   25d44:	mov	r4, #0
   25d48:	ldr	r1, [r5, r4, lsl #4]
   25d4c:	mov	r2, #6
   25d50:	mov	r0, r6
   25d54:	lsl	r7, r4, #4
   25d58:	bl	121a0 <strncmp@plt>
   25d5c:	add	r4, r4, #1
   25d60:	cmp	r0, #0
   25d64:	beq	25d78 <crc32@@Base+0xc320>
   25d68:	cmp	r4, #9
   25d6c:	bne	25d48 <crc32@@Base+0xc2f0>
   25d70:	mov	r0, #0
   25d74:	pop	{r4, r5, r6, r7, r8, pc}
   25d78:	add	r0, r5, r7
   25d7c:	pop	{r4, r5, r6, r7, r8, pc}
   25d80:	andeq	pc, r4, ip, ror #19
   25d84:	push	{r4, r5, r6, r7, r8, lr}
   25d88:	mov	r4, r0
   25d8c:	ldr	r5, [r0, #64]	; 0x40
   25d90:	cmp	r5, #0
   25d94:	beq	25db0 <crc32@@Base+0xc358>
   25d98:	mov	r0, r5
   25d9c:	bl	25d38 <crc32@@Base+0xc2e0>
   25da0:	cmp	r0, #0
   25da4:	beq	25db0 <crc32@@Base+0xc358>
   25da8:	mov	r0, #0
   25dac:	pop	{r4, r5, r6, r7, r8, pc}
   25db0:	ldr	r0, [r4, #16]
   25db4:	cmp	r0, #0
   25db8:	bne	25da8 <crc32@@Base+0xc350>
   25dbc:	ldr	r4, [r4, #12]
   25dc0:	cmp	r4, #0
   25dc4:	popne	{r4, r5, r6, r7, r8, pc}
   25dc8:	cmp	r5, #0
   25dcc:	movw	r6, #65196	; 0xfeac
   25dd0:	movt	r6, #4
   25dd4:	mov	r1, #1
   25dd8:	movw	r3, #48412	; 0xbd1c
   25ddc:	movw	r2, #48420	; 0xbd24
   25de0:	movt	r3, #3
   25de4:	movt	r2, #3
   25de8:	movne	r3, r5
   25dec:	ldr	r0, [r6]
   25df0:	bl	122d8 <__fprintf_chk@plt>
   25df4:	ldr	r3, [r6]
   25df8:	movw	r0, #48464	; 0xbd50
   25dfc:	mov	r2, #20
   25e00:	movt	r0, #3
   25e04:	mov	r1, #1
   25e08:	bl	1259c <fwrite@plt>
   25e0c:	ldr	r7, [pc, #56]	; 25e4c <crc32@@Base+0xc3f4>
   25e10:	movw	r5, #48488	; 0xbd68
   25e14:	movt	r5, #3
   25e18:	ldr	r3, [r7, r4, lsl #4]
   25e1c:	mov	r2, r5
   25e20:	add	r4, r4, #1
   25e24:	mov	r1, #1
   25e28:	ldr	r0, [r6]
   25e2c:	bl	122d8 <__fprintf_chk@plt>
   25e30:	cmp	r4, #9
   25e34:	bne	25e18 <crc32@@Base+0xc3c0>
   25e38:	ldr	r1, [r6]
   25e3c:	mov	r0, #10
   25e40:	bl	12590 <fputc@plt>
   25e44:	mov	r0, #1
   25e48:	pop	{r4, r5, r6, r7, r8, pc}
   25e4c:	andeq	pc, r4, ip, ror #19
   25e50:	ldr	r0, [r0, #64]	; 0x40
   25e54:	cmp	r0, #0
   25e58:	beq	25e6c <crc32@@Base+0xc414>
   25e5c:	push	{r4, lr}
   25e60:	bl	25d38 <crc32@@Base+0xc2e0>
   25e64:	ldr	r0, [r0, #4]
   25e68:	pop	{r4, pc}
   25e6c:	ldr	r3, [r0, #4]
   25e70:	udf	#0
   25e74:	ldr	r0, [r0, #64]	; 0x40
   25e78:	cmp	r0, #0
   25e7c:	beq	25e90 <crc32@@Base+0xc438>
   25e80:	push	{r4, lr}
   25e84:	bl	25d38 <crc32@@Base+0xc2e0>
   25e88:	ldr	r0, [r0, #8]
   25e8c:	pop	{r4, pc}
   25e90:	ldr	r3, [r0, #8]
   25e94:	udf	#0
   25e98:	ldr	r0, [r0, #64]	; 0x40
   25e9c:	cmp	r0, #0
   25ea0:	beq	25eb4 <crc32@@Base+0xc45c>
   25ea4:	push	{r4, lr}
   25ea8:	bl	25d38 <crc32@@Base+0xc2e0>
   25eac:	ldrb	r0, [r0, #12]
   25eb0:	pop	{r4, pc}
   25eb4:	ldrb	r3, [r0, #12]
   25eb8:	udf	#0
   25ebc:	ldr	r3, [r2, #64]	; 0x40
   25ec0:	cmp	r3, #0
   25ec4:	beq	25fec <crc32@@Base+0xc594>
   25ec8:	push	{r4, r5, r6, r7, r8, lr}
   25ecc:	mov	r4, r0
   25ed0:	mov	r0, r3
   25ed4:	mov	r5, r1
   25ed8:	mov	r6, r2
   25edc:	bl	25d38 <crc32@@Base+0xc2e0>
   25ee0:	ldr	r3, [r0, #8]
   25ee4:	cmp	r5, r3
   25ee8:	bhi	2600c <crc32@@Base+0xc5b4>
   25eec:	mov	r2, #2048	; 0x800
   25ef0:	mov	r1, #0
   25ef4:	mov	r0, r4
   25ef8:	bl	12308 <memset@plt>
   25efc:	ldr	r0, [r6, #64]	; 0x40
   25f00:	movw	r3, #43605	; 0xaa55
   25f04:	movt	r3, #4080	; 0xff0
   25f08:	cmp	r0, #0
   25f0c:	str	r3, [r4]
   25f10:	beq	25ff4 <crc32@@Base+0xc59c>
   25f14:	bl	25d38 <crc32@@Base+0xc2e0>
   25f18:	add	r1, r5, #508	; 0x1fc
   25f1c:	add	r1, r1, #3
   25f20:	add	ip, r4, #508	; 0x1fc
   25f24:	movw	r5, #506	; 0x1fa
   25f28:	mov	r7, #4
   25f2c:	lsr	r3, r1, #9
   25f30:	movw	r2, #63964	; 0xf9dc
   25f34:	add	r3, r3, #3
   25f38:	movt	r2, #4
   25f3c:	bic	r3, r3, #3
   25f40:	mov	r1, #512	; 0x200
   25f44:	uxth	r3, r3
   25f48:	add	lr, r3, #1024	; 0x400
   25f4c:	ldrb	r0, [r0, #12]
   25f50:	strh	r3, [r4, r5]
   25f54:	eor	r3, r0, #1
   25f58:	strh	r7, [r4, #12]
   25f5c:	str	r3, [r4, #8]
   25f60:	mov	r0, r4
   25f64:	strh	lr, [ip]
   25f68:	bl	25aa4 <crc32@@Base+0xc04c>
   25f6c:	ldr	r0, [r6, #64]	; 0x40
   25f70:	cmp	r0, #0
   25f74:	beq	26004 <crc32@@Base+0xc5ac>
   25f78:	bl	25d38 <crc32@@Base+0xc2e0>
   25f7c:	ldr	r3, [r0, #4]
   25f80:	ldr	r3, [r3]
   25f84:	str	r3, [r4, #2048]	; 0x800
   25f88:	ldr	r0, [r6, #64]	; 0x40
   25f8c:	cmp	r0, #0
   25f90:	beq	25ffc <crc32@@Base+0xc5a4>
   25f94:	bl	25d38 <crc32@@Base+0xc2e0>
   25f98:	ldrb	r3, [r0, #12]
   25f9c:	cmp	r3, #0
   25fa0:	beq	25fe4 <crc32@@Base+0xc58c>
   25fa4:	ldr	r5, [r6, #104]	; 0x68
   25fa8:	subs	r5, r5, #2048	; 0x800
   25fac:	beq	25fe4 <crc32@@Base+0xc58c>
   25fb0:	movw	r7, #63964	; 0xf9dc
   25fb4:	add	r4, r4, #2048	; 0x800
   25fb8:	movt	r7, #4
   25fbc:	cmp	r5, #512	; 0x200
   25fc0:	mov	r0, r4
   25fc4:	mov	r2, r7
   25fc8:	add	r4, r4, #512	; 0x200
   25fcc:	movcc	r6, r5
   25fd0:	movcs	r6, #512	; 0x200
   25fd4:	mov	r1, r6
   25fd8:	bl	25aa4 <crc32@@Base+0xc04c>
   25fdc:	subs	r5, r5, r6
   25fe0:	bne	25fbc <crc32@@Base+0xc564>
   25fe4:	mov	r0, #0
   25fe8:	pop	{r4, r5, r6, r7, r8, pc}
   25fec:	ldr	r3, [r3, #8]
   25ff0:	udf	#0
   25ff4:	ldrb	r3, [r0, #12]
   25ff8:	udf	#0
   25ffc:	ldrb	r3, [r0, #12]
   26000:	udf	#0
   26004:	ldr	r3, [r0, #4]
   26008:	udf	#0
   2600c:	mvn	r0, #27
   26010:	pop	{r4, r5, r6, r7, r8, pc}
   26014:	push	{r4, r5, lr}
   26018:	movw	r4, #61168	; 0xeef0
   2601c:	movt	r4, #4
   26020:	sub	sp, sp, #524	; 0x20c
   26024:	mov	r5, r2
   26028:	add	r1, sp, #4
   2602c:	ldr	r3, [r4]
   26030:	mov	r2, sp
   26034:	str	r3, [sp, #516]	; 0x204
   26038:	bl	25bcc <crc32@@Base+0xc174>
   2603c:	cmn	r0, #38	; 0x26
   26040:	moveq	r0, #0
   26044:	beq	26080 <crc32@@Base+0xc628>
   26048:	cmp	r0, #0
   2604c:	blt	26080 <crc32@@Base+0xc628>
   26050:	ldr	r0, [r5, #64]	; 0x40
   26054:	cmp	r0, #0
   26058:	beq	26080 <crc32@@Base+0xc628>
   2605c:	bl	25d38 <crc32@@Base+0xc2e0>
   26060:	cmp	r0, #0
   26064:	beq	26098 <crc32@@Base+0xc640>
   26068:	ldr	r3, [sp]
   2606c:	cmp	r3, #0
   26070:	beq	26098 <crc32@@Base+0xc640>
   26074:	ldr	r1, [r3, #4]
   26078:	ldr	r0, [r0, #4]
   2607c:	bl	12680 <strcmp@plt>
   26080:	ldr	r2, [sp, #516]	; 0x204
   26084:	ldr	r3, [r4]
   26088:	cmp	r2, r3
   2608c:	bne	260a0 <crc32@@Base+0xc648>
   26090:	add	sp, sp, #524	; 0x20c
   26094:	pop	{r4, r5, pc}
   26098:	mvn	r0, #1
   2609c:	b	26080 <crc32@@Base+0xc628>
   260a0:	bl	124b8 <__stack_chk_fail@plt>
   260a4:	push	{r4, lr}
   260a8:	movw	r4, #61168	; 0xeef0
   260ac:	movt	r4, #4
   260b0:	sub	sp, sp, #520	; 0x208
   260b4:	add	r1, sp, #4
   260b8:	ldr	r3, [r4]
   260bc:	mov	r2, sp
   260c0:	str	r3, [sp, #516]	; 0x204
   260c4:	bl	25bcc <crc32@@Base+0xc174>
   260c8:	cmn	r0, #38	; 0x26
   260cc:	beq	2612c <crc32@@Base+0xc6d4>
   260d0:	cmp	r0, #0
   260d4:	blt	26144 <crc32@@Base+0xc6ec>
   260d8:	ldr	r1, [sp]
   260dc:	uxtb	r0, r0
   260e0:	cmp	r0, #24
   260e4:	movw	r2, #48492	; 0xbd6c
   260e8:	movt	r2, #3
   260ec:	movw	r3, #48500	; 0xbd74
   260f0:	mov	r0, #1
   260f4:	movt	r3, #3
   260f8:	moveq	r3, r2
   260fc:	ldr	r2, [r1, #4]
   26100:	movw	r1, #48540	; 0xbd9c
   26104:	movt	r1, #3
   26108:	bl	12794 <__printf_chk@plt>
   2610c:	add	r3, sp, #508	; 0x1fc
   26110:	add	r3, r3, #2
   26114:	movw	r1, #48584	; 0xbdc8
   26118:	ldrh	r2, [r3]
   2611c:	mov	r0, #1
   26120:	movt	r1, #3
   26124:	lsl	r2, r2, #9
   26128:	bl	12794 <__printf_chk@plt>
   2612c:	ldr	r2, [sp, #516]	; 0x204
   26130:	ldr	r3, [r4]
   26134:	cmp	r2, r3
   26138:	bne	26168 <crc32@@Base+0xc710>
   2613c:	add	sp, sp, #520	; 0x208
   26140:	pop	{r4, pc}
   26144:	movw	r3, #65196	; 0xfeac
   26148:	movt	r3, #4
   2614c:	movw	r0, #48504	; 0xbd78
   26150:	mov	r2, #33	; 0x21
   26154:	ldr	r3, [r3]
   26158:	mov	r1, #1
   2615c:	movt	r0, #3
   26160:	bl	1259c <fwrite@plt>
   26164:	b	2612c <crc32@@Base+0xc6d4>
   26168:	bl	124b8 <__stack_chk_fail@plt>
   2616c:	push	{r4, r5, r6, r7, r8, lr}
   26170:	subs	r4, r2, #0
   26174:	popeq	{r4, r5, r6, r7, r8, pc}
   26178:	movw	r7, #63964	; 0xf9dc
   2617c:	add	r6, r0, r1
   26180:	movt	r7, #4
   26184:	cmp	r4, #512	; 0x200
   26188:	mov	r0, r6
   2618c:	mov	r2, r7
   26190:	add	r6, r6, #512	; 0x200
   26194:	movcc	r5, r4
   26198:	movcs	r5, #512	; 0x200
   2619c:	mov	r1, r5
   261a0:	bl	25aa4 <crc32@@Base+0xc04c>
   261a4:	subs	r4, r4, r5
   261a8:	bne	26184 <crc32@@Base+0xc72c>
   261ac:	pop	{r4, r5, r6, r7, r8, pc}
   261b0:	mov	r3, #2048	; 0x800
   261b4:	push	{r4, r5, r6, lr}
   261b8:	mov	r5, r1
   261bc:	str	r3, [r1, #4]
   261c0:	mov	r6, r0
   261c4:	mov	r1, #1
   261c8:	mov	r0, r3
   261cc:	mov	r4, r2
   261d0:	bl	1253c <calloc@plt>
   261d4:	cmp	r0, #0
   261d8:	str	r0, [r5, #8]
   261dc:	beq	26218 <crc32@@Base+0xc7c0>
   261e0:	ldr	ip, [r6, #104]	; 0x68
   261e4:	cmp	r4, #0
   261e8:	rsbne	r2, r4, #0
   261ec:	mov	r1, #63488	; 0xf800
   261f0:	add	r3, ip, #2032	; 0x7f0
   261f4:	moveq	r4, #1
   261f8:	add	r3, r3, #15
   261fc:	movt	r1, #65535	; 0xffff
   26200:	add	r0, r3, r4
   26204:	mvneq	r2, #0
   26208:	sub	r1, r1, ip
   2620c:	and	r0, r0, r2
   26210:	add	r0, r0, r1
   26214:	pop	{r4, r5, r6, pc}
   26218:	mvn	r0, #11
   2621c:	pop	{r4, r5, r6, pc}
   26220:	subs	r0, r0, #23
   26224:	movne	r0, #1
   26228:	bx	lr
   2622c:	push	{r4, r5, r6, lr}
   26230:	mov	r5, r0
   26234:	mov	r0, r3
   26238:	mov	r4, r3
   2623c:	bl	25e50 <crc32@@Base+0xc3f8>
   26240:	ldr	r3, [r0]
   26244:	mov	r0, r4
   26248:	str	r3, [r5]
   2624c:	bl	25e98 <crc32@@Base+0xc440>
   26250:	cmp	r0, #0
   26254:	popeq	{r4, r5, r6, pc}
   26258:	ldr	r2, [r4, #104]	; 0x68
   2625c:	mov	r0, r5
   26260:	mov	r1, #4
   26264:	pop	{r4, r5, r6, lr}
   26268:	b	2616c <crc32@@Base+0xc714>
   2626c:	subs	r0, r0, #24
   26270:	movne	r0, #1
   26274:	bx	lr
   26278:	mov	r2, #2048	; 0x800
   2627c:	b	261b0 <crc32@@Base+0xc758>
   26280:	push	{r4, lr}
   26284:	mov	r2, r3
   26288:	ldr	r4, [r3, #104]	; 0x68
   2628c:	sub	r4, r4, #2048	; 0x800
   26290:	mov	r1, r4
   26294:	bl	25ebc <crc32@@Base+0xc464>
   26298:	cmp	r0, #0
   2629c:	popeq	{r4, pc}
   262a0:	mov	r2, r4
   262a4:	movw	r1, #48748	; 0xbe6c
   262a8:	mov	r0, #1
   262ac:	movt	r1, #3
   262b0:	pop	{r4, lr}
   262b4:	b	12794 <__printf_chk@plt>
   262b8:	subs	r0, r0, #25
   262bc:	movne	r0, #1
   262c0:	bx	lr
   262c4:	push	{r4, r5, r6, lr}
   262c8:	mov	r2, #2048	; 0x800
   262cc:	mov	r4, r0
   262d0:	mov	r5, r1
   262d4:	bl	261b0 <crc32@@Base+0xc758>
   262d8:	ldr	r3, [r5, #4]
   262dc:	ldr	r2, [r4, #104]	; 0x68
   262e0:	add	r3, r3, r2
   262e4:	add	r3, r3, r0
   262e8:	str	r3, [r4, #108]	; 0x6c
   262ec:	add	r0, r0, r3
   262f0:	pop	{r4, r5, r6, pc}
   262f4:	push	{r4, r5, r6, lr}
   262f8:	mov	r2, r3
   262fc:	ldr	r4, [r3, #108]	; 0x6c
   26300:	mov	r5, r0
   26304:	mov	r1, r4
   26308:	bl	25ebc <crc32@@Base+0xc464>
   2630c:	cmp	r0, #0
   26310:	bne	26360 <crc32@@Base+0xc908>
   26314:	lsrs	r4, r4, #11
   26318:	popeq	{r4, r5, r6, pc}
   2631c:	sub	r3, r4, #-67108863	; 0xfc000001
   26320:	sub	r6, r5, #4096	; 0x1000
   26324:	add	r4, r5, r3, lsl #12
   26328:	add	r5, r5, r3, lsl #11
   2632c:	mov	r1, r5
   26330:	mov	r2, #2048	; 0x800
   26334:	mov	r0, r4
   26338:	sub	r5, r5, #2048	; 0x800
   2633c:	bl	123a4 <memmove@plt>
   26340:	mov	r2, #2048	; 0x800
   26344:	mov	r1, #0
   26348:	add	r0, r4, r2
   2634c:	sub	r4, r4, #4096	; 0x1000
   26350:	bl	12308 <memset@plt>
   26354:	cmp	r4, r6
   26358:	bne	2632c <crc32@@Base+0xc8d4>
   2635c:	pop	{r4, r5, r6, pc}
   26360:	mov	r2, r4
   26364:	movw	r1, #48748	; 0xbe6c
   26368:	mov	r0, #1
   2636c:	movt	r1, #3
   26370:	bl	12794 <__printf_chk@plt>
   26374:	lsrs	r4, r4, #11
   26378:	bne	2631c <crc32@@Base+0xc8c4>
   2637c:	pop	{r4, r5, r6, pc}
   26380:	ldr	r2, [r0]
   26384:	ldr	r3, [r0, #8]
   26388:	cmp	r2, #0
   2638c:	beq	263b0 <crc32@@Base+0xc958>
   26390:	cmp	r3, #0
   26394:	movne	r3, #1
   26398:	bne	263a8 <crc32@@Base+0xc950>
   2639c:	ldr	r3, [r0, #16]
   263a0:	adds	r3, r3, #0
   263a4:	movne	r3, #1
   263a8:	mov	r0, r3
   263ac:	bx	lr
   263b0:	cmp	r3, #0
   263b4:	ldr	r2, [r0, #16]
   263b8:	beq	263a8 <crc32@@Base+0xc950>
   263bc:	adds	r3, r2, #0
   263c0:	movne	r3, #1
   263c4:	mov	r0, r3
   263c8:	bx	lr
   263cc:	subs	r0, r0, #19
   263d0:	movne	r0, #1
   263d4:	bx	lr
   263d8:	subs	r0, r0, #35	; 0x23
   263dc:	movne	r0, #1
   263e0:	bx	lr
   263e4:	push	{r4, r5, lr}
   263e8:	movw	r4, #61168	; 0xeef0
   263ec:	movt	r4, #4
   263f0:	ldr	r3, [r0, #72]	; 0x48
   263f4:	sub	sp, sp, #100	; 0x64
   263f8:	ldr	r2, [r4]
   263fc:	cmp	r3, #0
   26400:	str	r2, [sp, #92]	; 0x5c
   26404:	beq	26448 <crc32@@Base+0xc9f0>
   26408:	mov	r5, r1
   2640c:	mov	r2, sp
   26410:	mov	r1, r3
   26414:	mov	r0, #3
   26418:	bl	12644 <__xstat@plt>
   2641c:	cmp	r0, #0
   26420:	bne	26448 <crc32@@Base+0xc9f0>
   26424:	ldr	r3, [sp, #44]	; 0x2c
   26428:	movw	r2, #65532	; 0xfffc
   2642c:	movt	r2, #3
   26430:	cmp	r3, r2
   26434:	rsbls	r1, r3, #262144	; 0x40000
   26438:	strls	r1, [r5, #4]
   2643c:	movwls	r2, #25228	; 0x628c
   26440:	movtls	r2, #25
   26444:	strls	r3, [r2]
   26448:	ldr	r2, [sp, #92]	; 0x5c
   2644c:	mov	r0, #0
   26450:	ldr	r3, [r4]
   26454:	cmp	r2, r3
   26458:	bne	26464 <crc32@@Base+0xca0c>
   2645c:	add	sp, sp, #100	; 0x64
   26460:	pop	{r4, r5, pc}
   26464:	bl	124b8 <__stack_chk_fail@plt>
   26468:	push	{r4, r5, r6, r7, r8, lr}
   2646c:	mov	r7, r0
   26470:	mov	r5, r0
   26474:	ldr	r0, [r7, #64]!	; 0x40
   26478:	movw	r4, #61168	; 0xeef0
   2647c:	movt	r4, #4
   26480:	sub	sp, sp, #48	; 0x30
   26484:	movw	ip, #21313	; 0x5341
   26488:	ldr	r1, [r7, #4]
   2648c:	movt	ip, #12592	; 0x3130
   26490:	ldr	r2, [r7, #8]
   26494:	add	r3, sp, #12
   26498:	ldr	lr, [r4]
   2649c:	cmp	r0, ip
   264a0:	stmia	r3!, {r0, r1, r2}
   264a4:	str	lr, [sp, #44]	; 0x2c
   264a8:	bne	26550 <crc32@@Base+0xcaf8>
   264ac:	ldrb	lr, [sp, #16]
   264b0:	cmp	lr, #0
   264b4:	beq	26500 <crc32@@Base+0xcaa8>
   264b8:	cmp	lr, #1
   264bc:	bne	26550 <crc32@@Base+0xcaf8>
   264c0:	ldr	r3, [r7, #12]
   264c4:	add	r8, sp, #24
   264c8:	add	r6, sp, #41	; 0x29
   264cc:	mov	ip, r8
   264d0:	stmia	r8!, {r0, r1, r2, r3}
   264d4:	mov	r1, #0
   264d8:	ldr	r0, [r7, #16]
   264dc:	lsr	r7, r0, #16
   264e0:	str	r0, [r8]
   264e4:	ldrb	r3, [ip], #1
   264e8:	add	r3, r1, r3
   264ec:	cmp	ip, r6
   264f0:	uxth	r1, r3
   264f4:	bne	264e4 <crc32@@Base+0xca8c>
   264f8:	ldr	r2, [sp, #32]
   264fc:	b	2652c <crc32@@Base+0xcad4>
   26500:	ldrh	r7, [sp, #22]
   26504:	add	r0, sp, #21
   26508:	add	r2, sp, #12
   2650c:	mov	r1, lr
   26510:	ldrb	r3, [r2], #1
   26514:	add	r3, r1, r3
   26518:	cmp	r2, r0
   2651c:	uxth	r1, r3
   26520:	bne	26510 <crc32@@Base+0xcab8>
   26524:	ldrh	r2, [sp, #18]
   26528:	lsl	r2, r2, #2
   2652c:	cmp	r7, r1
   26530:	bne	26550 <crc32@@Base+0xcaf8>
   26534:	cmp	r2, #63	; 0x3f
   26538:	ble	26550 <crc32@@Base+0xcaf8>
   2653c:	cmp	lr, #0
   26540:	beq	2656c <crc32@@Base+0xcb14>
   26544:	cmp	lr, #1
   26548:	moveq	r3, #262144	; 0x40000
   2654c:	beq	26570 <crc32@@Base+0xcb18>
   26550:	mvn	r0, #0
   26554:	ldr	r2, [sp, #44]	; 0x2c
   26558:	ldr	r3, [r4]
   2655c:	cmp	r2, r3
   26560:	bne	265c8 <crc32@@Base+0xcb70>
   26564:	add	sp, sp, #48	; 0x30
   26568:	pop	{r4, r5, r6, r7, r8, pc}
   2656c:	mov	r3, #65536	; 0x10000
   26570:	cmp	r3, r2
   26574:	bcc	26550 <crc32@@Base+0xcaf8>
   26578:	sub	r6, r2, #4
   2657c:	mov	r1, r5
   26580:	mov	r0, #0
   26584:	mov	r2, r6
   26588:	bl	2560c <crc32@@Base+0xbbb4>
   2658c:	ldr	r3, [r5, r6]
   26590:	mvn	r0, r0
   26594:	cmp	r0, r3
   26598:	moveq	r0, #0
   2659c:	beq	26554 <crc32@@Base+0xcafc>
   265a0:	movw	r2, #65196	; 0xfeac
   265a4:	movt	r2, #4
   265a8:	str	r0, [sp]
   265ac:	mov	r1, #1
   265b0:	ldr	r0, [r2]
   265b4:	movw	r2, #48876	; 0xbeec
   265b8:	movt	r2, #3
   265bc:	bl	122d8 <__fprintf_chk@plt>
   265c0:	mvn	r0, #0
   265c4:	b	26554 <crc32@@Base+0xcafc>
   265c8:	bl	124b8 <__stack_chk_fail@plt>
   265cc:	push	{r4, lr}
   265d0:	bl	26468 <crc32@@Base+0xca10>
   265d4:	cmp	r0, #0
   265d8:	beq	265ec <crc32@@Base+0xcb94>
   265dc:	movw	r0, #48952	; 0xbf38
   265e0:	movt	r0, #3
   265e4:	pop	{r4, lr}
   265e8:	b	12290 <puts@plt>
   265ec:	movw	r0, #48916	; 0xbf14
   265f0:	movt	r0, #3
   265f4:	pop	{r4, lr}
   265f8:	b	12290 <puts@plt>
   265fc:	cmp	r1, #127	; 0x7f
   26600:	ble	26608 <crc32@@Base+0xcbb0>
   26604:	b	26468 <crc32@@Base+0xca10>
   26608:	mvn	r0, #0
   2660c:	bx	lr
   26610:	push	{r4, r5, r6, r7, r8, r9, lr}
   26614:	movw	r6, #61168	; 0xeef0
   26618:	movt	r6, #4
   2661c:	movw	r3, #25228	; 0x628c
   26620:	movt	r3, #25
   26624:	sub	sp, sp, #44	; 0x2c
   26628:	ldr	r2, [r6]
   2662c:	subs	r7, r1, #0
   26630:	ldr	r4, [r3]
   26634:	mov	r5, r0
   26638:	str	r2, [sp, #36]	; 0x24
   2663c:	add	r9, r0, r4
   26640:	bne	26778 <crc32@@Base+0xcd20>
   26644:	rsb	r8, r4, #65536	; 0x10000
   26648:	mov	r2, r4
   2664c:	add	r1, r0, r8
   26650:	bl	123a4 <memmove@plt>
   26654:	add	r4, r4, #3
   26658:	mov	r2, r8
   2665c:	mov	r1, #0
   26660:	mov	r0, r9
   26664:	bic	r4, r4, #3
   26668:	bl	12308 <memset@plt>
   2666c:	add	r2, r4, #4
   26670:	cmp	r7, #0
   26674:	mov	r3, #0
   26678:	str	r2, [sp, #24]
   2667c:	str	r3, [sp, #8]
   26680:	lsr	r2, r2, #2
   26684:	movw	r1, #21313	; 0x5341
   26688:	strh	r2, [sp, #10]
   2668c:	movt	r1, #12592	; 0x3130
   26690:	mov	r2, #1
   26694:	str	r1, [sp, #4]
   26698:	movt	r2, #20
   2669c:	str	r1, [sp, #16]
   266a0:	add	ip, r5, #64	; 0x40
   266a4:	mov	r1, #20
   266a8:	str	r3, [sp, #32]
   266ac:	str	r3, [sp, #12]
   266b0:	str	r2, [sp, #20]
   266b4:	str	r1, [sp, #28]
   266b8:	beq	26734 <crc32@@Base+0xccdc>
   266bc:	add	r0, sp, #32
   266c0:	mov	r1, #65	; 0x41
   266c4:	add	r2, sp, #16
   266c8:	b	266d0 <crc32@@Base+0xcc78>
   266cc:	ldrb	r1, [r2, #1]!
   266d0:	add	r3, r3, r1
   266d4:	cmp	r0, r2
   266d8:	uxth	r3, r3
   266dc:	bne	266cc <crc32@@Base+0xcc74>
   266e0:	add	lr, sp, #16
   266e4:	strh	r3, [sp, #34]	; 0x22
   266e8:	ldm	lr!, {r0, r1, r2, r3}
   266ec:	str	r0, [r5, #64]	; 0x40
   266f0:	ldr	r0, [lr]
   266f4:	str	r1, [ip, #4]
   266f8:	str	r2, [ip, #8]
   266fc:	str	r0, [ip, #16]
   26700:	str	r3, [ip, #12]
   26704:	mov	r2, r4
   26708:	mov	r1, r5
   2670c:	mov	r0, #0
   26710:	bl	2560c <crc32@@Base+0xbbb4>
   26714:	ldr	r2, [sp, #36]	; 0x24
   26718:	ldr	r3, [r6]
   2671c:	cmp	r2, r3
   26720:	mvn	r0, r0
   26724:	str	r0, [r5, r4]
   26728:	bne	2678c <crc32@@Base+0xcd34>
   2672c:	add	sp, sp, #44	; 0x2c
   26730:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26734:	add	r0, sp, #12
   26738:	mov	r1, r7
   2673c:	mov	r2, #65	; 0x41
   26740:	add	r3, sp, #4
   26744:	b	2674c <crc32@@Base+0xccf4>
   26748:	ldrb	r2, [r3, #1]!
   2674c:	add	r1, r1, r2
   26750:	cmp	r3, r0
   26754:	uxth	r1, r1
   26758:	bne	26748 <crc32@@Base+0xccf0>
   2675c:	add	r3, sp, #4
   26760:	strh	r1, [sp, #14]
   26764:	ldm	r3!, {r0, r1, r2}
   26768:	str	r0, [r5, #64]	; 0x40
   2676c:	str	r1, [ip, #4]
   26770:	str	r2, [ip, #8]
   26774:	b	26704 <crc32@@Base+0xccac>
   26778:	rsb	r8, r4, #262144	; 0x40000
   2677c:	mov	r2, r4
   26780:	add	r1, r0, r8
   26784:	bl	123a4 <memmove@plt>
   26788:	b	26654 <crc32@@Base+0xcbfc>
   2678c:	bl	124b8 <__stack_chk_fail@plt>
   26790:	mov	r1, #0
   26794:	b	26610 <crc32@@Base+0xcbb8>
   26798:	mov	r1, #1
   2679c:	b	26610 <crc32@@Base+0xcbb8>
   267a0:	push	{r4, r5, lr}
   267a4:	movw	r4, #61168	; 0xeef0
   267a8:	movt	r4, #4
   267ac:	ldr	r3, [r0, #72]	; 0x48
   267b0:	sub	sp, sp, #100	; 0x64
   267b4:	ldr	r2, [r4]
   267b8:	cmp	r3, #0
   267bc:	str	r2, [sp, #92]	; 0x5c
   267c0:	beq	26800 <crc32@@Base+0xcda8>
   267c4:	mov	r5, r1
   267c8:	mov	r2, sp
   267cc:	mov	r1, r3
   267d0:	mov	r0, #3
   267d4:	bl	12644 <__xstat@plt>
   267d8:	cmp	r0, #0
   267dc:	bne	26800 <crc32@@Base+0xcda8>
   267e0:	ldr	r3, [sp, #44]	; 0x2c
   267e4:	movw	r2, #65532	; 0xfffc
   267e8:	cmp	r3, r2
   267ec:	rsbls	r1, r3, #65536	; 0x10000
   267f0:	strls	r1, [r5, #4]
   267f4:	movwls	r2, #25228	; 0x628c
   267f8:	movtls	r2, #25
   267fc:	strls	r3, [r2]
   26800:	ldr	r2, [sp, #92]	; 0x5c
   26804:	mov	r0, #0
   26808:	ldr	r3, [r4]
   2680c:	cmp	r2, r3
   26810:	bne	2681c <crc32@@Base+0xcdc4>
   26814:	add	sp, sp, #100	; 0x64
   26818:	pop	{r4, r5, pc}
   2681c:	bl	124b8 <__stack_chk_fail@plt>
   26820:	cmp	r2, #0
   26824:	bxle	lr
   26828:	movw	ip, #49076	; 0xbfb4
   2682c:	add	r2, r1, r2
   26830:	movt	ip, #3
   26834:	ldrb	r3, [r1], #1
   26838:	eor	r3, r3, r0, lsr #8
   2683c:	cmp	r1, r2
   26840:	lsl	r3, r3, #1
   26844:	ldrh	r3, [ip, r3]
   26848:	eor	r0, r3, r0, lsl #8
   2684c:	uxth	r0, r0
   26850:	bne	26834 <crc32@@Base+0xcddc>
   26854:	bx	lr
   26858:	cmp	r1, #0
   2685c:	ble	268a4 <crc32@@Base+0xce4c>
   26860:	push	{lr}		; (str lr, [sp, #-4]!)
   26864:	add	r1, r0, r1
   26868:	movw	lr, #49076	; 0xbfb4
   2686c:	movt	lr, #3
   26870:	mov	ip, #0
   26874:	ldrb	r3, [r0], #1
   26878:	eor	r3, r3, ip, lsr #8
   2687c:	cmp	r0, r1
   26880:	lsl	r3, r3, #1
   26884:	ldrh	r3, [lr, r3]
   26888:	eor	ip, r3, ip, lsl #8
   2688c:	uxth	ip, ip
   26890:	bne	26874 <crc32@@Base+0xce1c>
   26894:	rev16	ip, ip
   26898:	uxth	ip, ip
   2689c:	strh	ip, [r2]
   268a0:	pop	{pc}		; (ldr pc, [sp], #4)
   268a4:	mov	ip, #0
   268a8:	strh	ip, [r2]
   268ac:	bx	lr
   268b0:	ldr	r3, [r0, #12]
   268b4:	movw	r2, #31129	; 0x7999
   268b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   268bc:	sub	sp, sp, #100	; 0x64
   268c0:	ldr	r7, [r0, #16]
   268c4:	movt	r2, #23170	; 0x5a82
   268c8:	ldr	ip, [r0, #20]
   268cc:	ror	lr, r3, #2
   268d0:	ldr	r5, [r0, #24]
   268d4:	eor	r4, r7, lr
   268d8:	ldr	r9, [r0, #8]
   268dc:	eor	r6, r7, ip
   268e0:	ldr	r8, [r1]
   268e4:	and	r6, r6, r3
   268e8:	str	r5, [sp, #88]	; 0x58
   268ec:	add	r5, r5, r2
   268f0:	str	r0, [sp, #92]	; 0x5c
   268f4:	add	r5, r5, r9, ror #27
   268f8:	ldr	r0, [r1, #4]
   268fc:	and	r4, r4, r9
   26900:	eor	r6, r6, ip
   26904:	str	ip, [sp, #84]	; 0x54
   26908:	rev	r8, r8
   2690c:	add	ip, ip, r2
   26910:	eor	r4, r4, r7
   26914:	add	r6, r6, r5
   26918:	add	r5, r8, r6
   2691c:	rev	fp, r0
   26920:	ldr	sl, [r1, #8]
   26924:	add	r4, r4, ip
   26928:	ror	ip, r9, #2
   2692c:	add	r4, r4, fp
   26930:	eor	r6, lr, ip
   26934:	add	r4, r4, r5, ror #27
   26938:	ror	r0, r5, #2
   2693c:	str	r8, [sp, #16]
   26940:	str	r7, [sp, #80]	; 0x50
   26944:	rev	sl, sl
   26948:	ldr	r8, [r1, #12]
   2694c:	and	r6, r6, r5
   26950:	add	r7, r7, r2
   26954:	eor	r5, ip, r0
   26958:	add	r7, r7, sl
   2695c:	eor	r6, r6, lr
   26960:	str	fp, [sp, #20]
   26964:	rev	r8, r8
   26968:	ror	fp, r4, #2
   2696c:	str	sl, [sp, #24]
   26970:	and	r5, r5, r4
   26974:	ldr	sl, [r1, #16]
   26978:	add	lr, lr, r2
   2697c:	add	r6, r6, r7
   26980:	add	r6, r6, r4, ror #27
   26984:	str	r8, [sp, #4]
   26988:	add	lr, lr, r8
   2698c:	eor	r7, r0, fp
   26990:	ldr	r8, [r1, #20]
   26994:	eor	r5, r5, ip
   26998:	add	r5, r5, lr
   2699c:	add	ip, ip, r2
   269a0:	rev	lr, sl
   269a4:	and	r7, r7, r6
   269a8:	add	r5, r5, r6, ror #27
   269ac:	str	lr, [sp, #8]
   269b0:	ror	r6, r6, #2
   269b4:	add	ip, ip, lr
   269b8:	eor	r7, r7, r0
   269bc:	rev	lr, r8
   269c0:	ldr	r8, [r1, #24]
   269c4:	eor	r4, fp, r6
   269c8:	add	r7, r7, ip
   269cc:	str	lr, [sp, #32]
   269d0:	add	r7, r7, r5, ror #27
   269d4:	add	ip, lr, r2
   269d8:	and	r4, r4, r5
   269dc:	ror	lr, r5, #2
   269e0:	rev	r5, r8
   269e4:	add	r0, ip, r0
   269e8:	eor	r4, r4, fp
   269ec:	eor	ip, r6, lr
   269f0:	mov	r8, r5
   269f4:	ldr	r5, [r1, #28]
   269f8:	add	sl, r8, r2
   269fc:	and	ip, ip, r7
   26a00:	rev	r5, r5
   26a04:	add	r4, r4, r0
   26a08:	ror	r0, r7, #2
   26a0c:	add	r4, r4, r7, ror #27
   26a10:	add	fp, sl, fp
   26a14:	eor	sl, ip, r6
   26a18:	mov	ip, r5
   26a1c:	eor	r5, lr, r0
   26a20:	ldr	r7, [r1, #32]
   26a24:	and	r5, r5, r4
   26a28:	str	r9, [sp, #72]	; 0x48
   26a2c:	add	sl, sl, fp
   26a30:	add	r9, ip, r2
   26a34:	add	sl, sl, r4, ror #27
   26a38:	str	ip, [sp, #56]	; 0x38
   26a3c:	ror	r4, r4, #2
   26a40:	add	r6, r9, r6
   26a44:	eor	ip, r5, lr
   26a48:	eor	r9, r0, r4
   26a4c:	rev	r5, r7
   26a50:	add	ip, ip, r6
   26a54:	ldr	r6, [r1, #36]	; 0x24
   26a58:	add	ip, ip, sl, ror #27
   26a5c:	str	r5, [sp, #12]
   26a60:	and	r9, r9, sl
   26a64:	add	r5, r5, r2
   26a68:	ror	sl, sl, #2
   26a6c:	add	r5, r5, lr
   26a70:	eor	r9, r9, r0
   26a74:	rev	lr, r6
   26a78:	eor	r6, r4, sl
   26a7c:	add	r7, lr, r2
   26a80:	str	r8, [sp, #28]
   26a84:	add	r9, r9, r5
   26a88:	ldr	r8, [r1, #40]	; 0x28
   26a8c:	and	r6, r6, ip
   26a90:	add	r9, r9, ip, ror #27
   26a94:	str	r3, [sp, #76]	; 0x4c
   26a98:	eor	r6, r6, r4
   26a9c:	str	lr, [sp, #40]	; 0x28
   26aa0:	add	r0, r7, r0
   26aa4:	ror	lr, ip, #2
   26aa8:	ldr	r7, [r1, #44]	; 0x2c
   26aac:	rev	r8, r8
   26ab0:	eor	r5, sl, lr
   26ab4:	add	r0, r6, r0
   26ab8:	add	fp, r8, r2
   26abc:	add	r0, r0, r9, ror #27
   26ac0:	and	r5, r5, r9
   26ac4:	ror	r9, r9, #2
   26ac8:	rev	r3, r7
   26acc:	eor	r5, r5, sl
   26ad0:	add	r4, fp, r4
   26ad4:	eor	fp, lr, r9
   26ad8:	str	r8, [sp, #36]	; 0x24
   26adc:	add	r4, r5, r4
   26ae0:	ldr	r8, [r1, #48]	; 0x30
   26ae4:	add	r5, r3, r2
   26ae8:	and	fp, fp, r0
   26aec:	add	r4, r4, r0, ror #27
   26af0:	ldr	r7, [r1, #52]	; 0x34
   26af4:	ror	r0, r0, #2
   26af8:	add	sl, r5, sl
   26afc:	eor	fp, fp, lr
   26b00:	rev	r6, r8
   26b04:	eor	ip, r9, r0
   26b08:	add	fp, fp, sl
   26b0c:	str	r6, [sp, #44]	; 0x2c
   26b10:	ror	sl, r4, #2
   26b14:	add	fp, fp, r4, ror #27
   26b18:	add	r6, r6, r2
   26b1c:	and	ip, ip, r4
   26b20:	rev	r4, r7
   26b24:	ldr	r7, [r1, #56]	; 0x38
   26b28:	str	r3, [sp, #60]	; 0x3c
   26b2c:	add	lr, r6, lr
   26b30:	ldr	r3, [sp, #24]
   26b34:	eor	r6, ip, r9
   26b38:	ldr	ip, [sp, #16]
   26b3c:	add	r8, r4, r2
   26b40:	eor	r5, r0, sl
   26b44:	add	r6, r6, lr
   26b48:	rev	lr, r7
   26b4c:	ldr	r7, [r1, #60]	; 0x3c
   26b50:	ldr	r1, [sp, #12]
   26b54:	add	r9, r8, r9
   26b58:	and	r5, r5, fp
   26b5c:	eor	r8, ip, r3
   26b60:	add	r6, r6, fp, ror #27
   26b64:	eor	r5, r5, r0
   26b68:	ror	fp, fp, #2
   26b6c:	eor	r8, r8, r1
   26b70:	add	r1, lr, r2
   26b74:	eor	ip, sl, fp
   26b78:	add	r0, r1, r0
   26b7c:	add	r5, r5, r9
   26b80:	ldr	r1, [sp, #4]
   26b84:	rev	r9, r7
   26b88:	ldr	r7, [sp, #20]
   26b8c:	add	r5, r5, r6, ror #27
   26b90:	str	lr, [sp, #16]
   26b94:	and	ip, ip, r6
   26b98:	ror	lr, r6, #2
   26b9c:	ldr	r6, [sp, #40]	; 0x28
   26ba0:	eor	r1, r7, r1
   26ba4:	str	r4, [sp, #48]	; 0x30
   26ba8:	eor	r8, r8, r4
   26bac:	eor	ip, ip, sl
   26bb0:	eor	r4, fp, lr
   26bb4:	eor	r1, r1, r6
   26bb8:	ldr	r6, [sp, #8]
   26bbc:	add	ip, ip, r0
   26bc0:	and	r4, r4, r5
   26bc4:	add	r0, r9, r2
   26bc8:	ror	r8, r8, #31
   26bcc:	eor	r4, r4, fp
   26bd0:	add	r0, r0, sl
   26bd4:	mov	sl, r3
   26bd8:	eor	sl, sl, r6
   26bdc:	ldr	r6, [sp, #16]
   26be0:	mov	r7, r9
   26be4:	add	r0, r4, r0
   26be8:	ror	r9, r5, #2
   26bec:	add	r4, r8, r2
   26bf0:	add	ip, ip, r5, ror #27
   26bf4:	str	r8, [sp, #20]
   26bf8:	eor	r5, lr, r9
   26bfc:	ldr	r8, [sp, #36]	; 0x24
   26c00:	add	fp, r4, fp
   26c04:	eor	r1, r1, r6
   26c08:	ldr	r4, [sp, #4]
   26c0c:	and	r5, r5, ip
   26c10:	ldr	r6, [sp, #32]
   26c14:	eor	sl, sl, r8
   26c18:	ldr	r3, [sp, #60]	; 0x3c
   26c1c:	eor	r5, r5, lr
   26c20:	eor	r8, r4, r6
   26c24:	add	r5, r5, fp
   26c28:	eor	r8, r8, r3
   26c2c:	ldr	fp, [sp, #8]
   26c30:	ldr	r3, [sp, #28]
   26c34:	add	r0, r0, ip, ror #27
   26c38:	str	r7, [sp, #52]	; 0x34
   26c3c:	ror	ip, ip, #2
   26c40:	eor	sl, sl, r7
   26c44:	eor	r7, fp, r3
   26c48:	ldr	fp, [sp, #20]
   26c4c:	ror	r1, r1, #31
   26c50:	eor	r4, r9, ip
   26c54:	add	r6, r1, r2
   26c58:	and	r4, r4, r0
   26c5c:	eor	r8, r8, fp
   26c60:	add	r6, r6, lr
   26c64:	ldr	fp, [sp, #44]	; 0x2c
   26c68:	eor	r4, r4, r9
   26c6c:	add	r5, r5, r0, ror #27
   26c70:	str	r1, [sp, #24]
   26c74:	ror	r0, r0, #2
   26c78:	ldr	r1, [sp, #56]	; 0x38
   26c7c:	ror	sl, sl, #31
   26c80:	add	r4, r4, r6
   26c84:	str	sl, [sp, #28]
   26c88:	ldr	r6, [sp, #32]
   26c8c:	ror	r8, r8, #31
   26c90:	str	r8, [sp, #8]
   26c94:	eor	lr, ip, r0
   26c98:	ldr	r8, [sp, #24]
   26c9c:	eor	r7, r7, fp
   26ca0:	add	fp, sl, r2
   26ca4:	and	lr, lr, r5
   26ca8:	eor	r7, r7, r8
   26cac:	add	r9, fp, r9
   26cb0:	ldr	fp, [sp, #8]
   26cb4:	eor	lr, lr, ip
   26cb8:	ldr	r8, [sp, #48]	; 0x30
   26cbc:	add	lr, lr, r9
   26cc0:	add	r2, fp, r2
   26cc4:	ror	r9, r7, #31
   26cc8:	ldr	fp, [sp, #12]
   26ccc:	eor	r6, r6, r1
   26cd0:	ror	sl, r5, #2
   26cd4:	eor	r6, r6, r8
   26cd8:	eor	r8, r3, fp
   26cdc:	mov	r3, r9
   26ce0:	ldr	r9, [sp, #28]
   26ce4:	add	r5, r4, r5, ror #27
   26ce8:	eor	r4, r0, sl
   26cec:	add	r2, r2, ip
   26cf0:	and	r4, r4, r5
   26cf4:	eor	r6, r6, r9
   26cf8:	ldr	r9, [sp, #16]
   26cfc:	add	lr, lr, r5, ror #27
   26d00:	eor	ip, r4, r0
   26d04:	ror	r5, r5, #2
   26d08:	movw	r4, #60321	; 0xeba1
   26d0c:	movt	r4, #28377	; 0x6ed9
   26d10:	add	r7, r3, r4
   26d14:	eor	r8, r8, r9
   26d18:	eor	r9, sl, r5
   26d1c:	str	r4, [sp, #4]
   26d20:	eor	r9, r9, lr
   26d24:	add	r0, r7, r0
   26d28:	ldr	r4, [sp, #8]
   26d2c:	add	ip, ip, r2
   26d30:	add	r0, r9, r0
   26d34:	mov	r2, r1
   26d38:	ldr	r9, [sp, #4]
   26d3c:	ror	fp, r6, #31
   26d40:	ldr	r1, [sp, #40]	; 0x28
   26d44:	add	ip, ip, lr, ror #27
   26d48:	ldr	r6, [sp, #52]	; 0x34
   26d4c:	ror	lr, lr, #2
   26d50:	ldr	r7, [sp, #12]
   26d54:	eor	r2, r2, r1
   26d58:	eor	r8, r8, r4
   26d5c:	add	r4, fp, r9
   26d60:	ldr	r9, [sp, #36]	; 0x24
   26d64:	eor	r2, r2, r6
   26d68:	add	sl, r4, sl
   26d6c:	eor	r6, r5, lr
   26d70:	ldr	r4, [sp, #20]
   26d74:	eor	r6, r6, ip
   26d78:	eor	r7, r7, r9
   26d7c:	ldr	r9, [sp, #4]
   26d80:	add	r0, r0, ip, ror #27
   26d84:	ror	r8, r8, #31
   26d88:	ror	ip, ip, #2
   26d8c:	eor	r7, r7, r4
   26d90:	add	sl, r6, sl
   26d94:	mov	r6, r1
   26d98:	ldr	r1, [sp, #60]	; 0x3c
   26d9c:	add	r4, r8, r9
   26da0:	str	r8, [sp, #32]
   26da4:	eor	r2, r2, r3
   26da8:	str	r3, [sp, #56]	; 0x38
   26dac:	eor	r8, lr, ip
   26db0:	ldr	r3, [sp, #24]
   26db4:	eor	r7, r7, fp
   26db8:	eor	r8, r8, r0
   26dbc:	eor	r6, r6, r1
   26dc0:	add	r5, r4, r5
   26dc4:	eor	r6, r6, r3
   26dc8:	add	r5, r8, r5
   26dcc:	ldr	r3, [sp, #44]	; 0x2c
   26dd0:	ldr	r8, [sp, #36]	; 0x24
   26dd4:	ror	r7, r7, #31
   26dd8:	ror	r2, r2, #31
   26ddc:	add	sl, sl, r0, ror #27
   26de0:	add	r9, r2, r9
   26de4:	eor	r8, r8, r3
   26de8:	mov	r3, r7
   26dec:	ldr	r7, [sp, #32]
   26df0:	add	lr, r9, lr
   26df4:	ldr	r9, [sp, #28]
   26df8:	ror	r0, r0, #2
   26dfc:	eor	r6, r6, r7
   26e00:	eor	r4, ip, r0
   26e04:	eor	r8, r8, r9
   26e08:	ldr	r9, [sp, #4]
   26e0c:	add	r5, r5, sl, ror #27
   26e10:	ldr	r7, [sp, #48]	; 0x30
   26e14:	eor	r4, r4, sl
   26e18:	ror	r6, r6, #31
   26e1c:	ror	sl, sl, #2
   26e20:	add	r9, r3, r9
   26e24:	add	r4, r4, lr
   26e28:	eor	lr, r0, sl
   26e2c:	str	r3, [sp, #36]	; 0x24
   26e30:	add	ip, r9, ip
   26e34:	eor	r7, r1, r7
   26e38:	eor	lr, lr, r5
   26e3c:	mov	r1, r6
   26e40:	ldr	r6, [sp, #8]
   26e44:	eor	r8, r8, r2
   26e48:	ldr	r9, [sp, #4]
   26e4c:	add	lr, lr, ip
   26e50:	ldr	ip, [sp, #36]	; 0x24
   26e54:	add	r4, r4, r5, ror #27
   26e58:	eor	r7, r7, r6
   26e5c:	ror	r5, r5, #2
   26e60:	ldr	r3, [sp, #44]	; 0x2c
   26e64:	add	r9, r1, r9
   26e68:	eor	r6, sl, r5
   26e6c:	eor	r7, r7, ip
   26e70:	ror	ip, r8, #31
   26e74:	ldr	r8, [sp, #16]
   26e78:	add	r0, r9, r0
   26e7c:	eor	r6, r6, r4
   26e80:	str	ip, [sp, #40]	; 0x28
   26e84:	eor	r8, r3, r8
   26e88:	ldr	ip, [sp, #56]	; 0x38
   26e8c:	add	r6, r6, r0
   26e90:	ldr	r3, [sp, #40]	; 0x28
   26e94:	add	lr, lr, r4, ror #27
   26e98:	ldr	r0, [sp, #4]
   26e9c:	ror	r4, r4, #2
   26ea0:	eor	r8, r8, ip
   26ea4:	str	r1, [sp, #60]	; 0x3c
   26ea8:	add	r9, r3, r0
   26eac:	ror	r0, r7, #31
   26eb0:	ldr	r7, [sp, #52]	; 0x34
   26eb4:	eor	ip, r5, r4
   26eb8:	str	r0, [sp, #12]
   26ebc:	eor	r8, r8, r1
   26ec0:	ldr	r0, [sp, #48]	; 0x30
   26ec4:	add	r6, r6, lr, ror #27
   26ec8:	ldr	r1, [sp, #12]
   26ecc:	add	sl, r9, sl
   26ed0:	eor	r7, r0, r7
   26ed4:	ldr	r0, [sp, #4]
   26ed8:	eor	ip, ip, lr
   26edc:	ror	lr, lr, #2
   26ee0:	add	r9, r1, r0
   26ee4:	add	ip, ip, sl
   26ee8:	eor	r0, r4, lr
   26eec:	ror	sl, r8, #31
   26ef0:	ldr	r8, [sp, #16]
   26ef4:	eor	r0, r0, r6
   26ef8:	str	sl, [sp, #44]	; 0x2c
   26efc:	eor	r7, r7, fp
   26f00:	ldr	sl, [sp, #20]
   26f04:	add	r5, r9, r5
   26f08:	ldr	r9, [sp, #32]
   26f0c:	eor	r7, r7, r3
   26f10:	eor	r8, r8, sl
   26f14:	ldr	r3, [sp, #44]	; 0x2c
   26f18:	add	r5, r0, r5
   26f1c:	ldr	r0, [sp, #4]
   26f20:	eor	r8, r8, r9
   26f24:	add	ip, ip, r6, ror #27
   26f28:	add	r9, r3, r0
   26f2c:	eor	r8, r8, r1
   26f30:	ldr	r0, [sp, #52]	; 0x34
   26f34:	ror	r6, r6, #2
   26f38:	ldr	r1, [sp, #24]
   26f3c:	ror	r7, r7, #31
   26f40:	str	r7, [sp, #16]
   26f44:	eor	sl, lr, r6
   26f48:	eor	r7, r0, r1
   26f4c:	add	r4, r9, r4
   26f50:	ldr	r1, [sp, #16]
   26f54:	eor	sl, sl, ip
   26f58:	ldr	r9, [sp, #4]
   26f5c:	add	r5, r5, ip, ror #27
   26f60:	add	r4, sl, r4
   26f64:	ror	ip, ip, #2
   26f68:	ldr	sl, [sp, #28]
   26f6c:	add	r9, r1, r9
   26f70:	ror	r8, r8, #31
   26f74:	str	r8, [sp, #48]	; 0x30
   26f78:	ldr	r8, [sp, #20]
   26f7c:	eor	r0, r6, ip
   26f80:	add	lr, r9, lr
   26f84:	ldr	r9, [sp, #36]	; 0x24
   26f88:	eor	r0, r0, r5
   26f8c:	eor	r8, r8, sl
   26f90:	eor	r8, r8, r9
   26f94:	add	lr, r0, lr
   26f98:	ldr	r9, [sp, #48]	; 0x30
   26f9c:	eor	r8, r8, r1
   26fa0:	ldr	r0, [sp, #4]
   26fa4:	add	r4, r4, r5, ror #27
   26fa8:	ldr	r1, [sp, #24]
   26fac:	ror	r5, r5, #2
   26fb0:	add	r9, r9, r0
   26fb4:	ldr	r0, [sp, #8]
   26fb8:	eor	r7, r7, r2
   26fbc:	eor	sl, ip, r5
   26fc0:	eor	r7, r7, r3
   26fc4:	eor	r1, r1, r0
   26fc8:	ldr	r0, [sp, #60]	; 0x3c
   26fcc:	eor	sl, sl, r4
   26fd0:	add	r6, r9, r6
   26fd4:	ror	r7, r7, #31
   26fd8:	ldr	r9, [sp, #48]	; 0x30
   26fdc:	eor	r1, r1, r0
   26fe0:	add	r6, sl, r6
   26fe4:	ldr	r0, [sp, #4]
   26fe8:	ror	r8, r8, #31
   26fec:	str	r8, [sp, #20]
   26ff0:	ldr	sl, [sp, #28]
   26ff4:	add	lr, lr, r4, ror #27
   26ff8:	ldr	r8, [sp, #56]	; 0x38
   26ffc:	ror	r4, r4, #2
   27000:	mov	r3, r7
   27004:	eor	r1, r1, r9
   27008:	add	r7, r7, r0
   2700c:	eor	r8, sl, r8
   27010:	eor	r0, r5, r4
   27014:	ldr	sl, [sp, #40]	; 0x28
   27018:	eor	r0, r0, lr
   2701c:	add	ip, r7, ip
   27020:	eor	r8, r8, sl
   27024:	add	ip, r0, ip
   27028:	ldr	sl, [sp, #20]
   2702c:	ror	r1, r1, #31
   27030:	ldr	r0, [sp, #4]
   27034:	add	r6, r6, lr, ror #27
   27038:	ror	lr, lr, #2
   2703c:	eor	r8, r8, r3
   27040:	add	r9, sl, r0
   27044:	eor	sl, r4, lr
   27048:	mov	r0, r1
   2704c:	ldr	r1, [sp, #8]
   27050:	ldr	r7, [sp, #12]
   27054:	eor	sl, sl, r6
   27058:	add	r5, r9, r5
   2705c:	eor	r1, r1, fp
   27060:	add	r5, sl, r5
   27064:	ror	sl, r8, #31
   27068:	str	sl, [sp, #24]
   2706c:	eor	r1, r1, r7
   27070:	ldr	sl, [sp, #20]
   27074:	add	ip, ip, r6, ror #27
   27078:	str	r3, [sp, #52]	; 0x34
   2707c:	mov	r3, r0
   27080:	ldr	r0, [sp, #4]
   27084:	ror	r6, r6, #2
   27088:	ldr	r8, [sp, #56]	; 0x38
   2708c:	eor	r1, r1, sl
   27090:	ldr	sl, [sp, #32]
   27094:	add	r9, r3, r0
   27098:	eor	r0, lr, r6
   2709c:	add	r4, r9, r4
   270a0:	eor	r7, r8, sl
   270a4:	eor	r0, r0, ip
   270a8:	ldr	r8, [sp, #44]	; 0x2c
   270ac:	add	r4, r0, r4
   270b0:	ldr	r9, [sp, #24]
   270b4:	add	r5, r5, ip, ror #27
   270b8:	ldr	r0, [sp, #4]
   270bc:	ror	ip, ip, #2
   270c0:	eor	r7, r7, r8
   270c4:	ror	r1, r1, #31
   270c8:	add	sl, r9, r0
   270cc:	eor	r8, r6, ip
   270d0:	eor	r7, r7, r3
   270d4:	mov	r0, r1
   270d8:	eor	r8, r8, r5
   270dc:	ldr	r1, [sp, #16]
   270e0:	add	lr, sl, lr
   270e4:	eor	fp, fp, r2
   270e8:	add	lr, r8, lr
   270ec:	ror	r8, r7, #31
   270f0:	eor	fp, fp, r1
   270f4:	ldr	r1, [sp, #4]
   270f8:	add	r4, r4, r5, ror #27
   270fc:	mov	sl, r8
   27100:	ror	r5, r5, #2
   27104:	eor	fp, fp, r9
   27108:	ldrd	r8, [sp, #32]
   2710c:	add	lr, lr, r4, ror #27
   27110:	str	r3, [sp, #64]	; 0x40
   27114:	mov	r3, r0
   27118:	add	r0, r0, r1
   2711c:	eor	r1, ip, r5
   27120:	eor	r7, r8, r9
   27124:	eor	r1, r1, r4
   27128:	ldr	r9, [sp, #48]	; 0x30
   2712c:	add	r6, r0, r6
   27130:	add	r6, r1, r6
   27134:	ror	fp, fp, #31
   27138:	ldr	r1, [sp, #4]
   2713c:	ror	r4, r4, #2
   27140:	eor	r7, r7, r9
   27144:	mov	r8, sl
   27148:	add	r9, sl, r1
   2714c:	mov	r0, fp
   27150:	eor	sl, r5, r4
   27154:	ldr	fp, [sp, #60]	; 0x3c
   27158:	eor	r7, r7, r3
   2715c:	ldr	r1, [sp, #52]	; 0x34
   27160:	eor	sl, sl, lr
   27164:	add	ip, r9, ip
   27168:	eor	r2, r2, fp
   2716c:	add	ip, sl, ip
   27170:	ror	sl, r7, #31
   27174:	eor	r2, r2, r1
   27178:	str	r8, [sp, #60]	; 0x3c
   2717c:	eor	r2, r2, r8
   27180:	ldr	r1, [sp, #4]
   27184:	mov	r9, sl
   27188:	ldr	r8, [sp, #36]	; 0x24
   2718c:	add	r6, r6, lr, ror #27
   27190:	ldr	sl, [sp, #40]	; 0x28
   27194:	ror	lr, lr, #2
   27198:	str	r3, [sp, #56]	; 0x38
   2719c:	mov	r3, r0
   271a0:	eor	r7, r8, sl
   271a4:	add	r0, r0, r1
   271a8:	ldr	r8, [sp, #4]
   271ac:	eor	r1, r4, lr
   271b0:	add	ip, ip, r6, ror #27
   271b4:	eor	r1, r1, r6
   271b8:	ror	r6, r6, #2
   271bc:	add	r5, r0, r5
   271c0:	ror	r2, r2, #31
   271c4:	mov	r0, r9
   271c8:	str	r2, [sp, #8]
   271cc:	add	r9, r9, r8
   271d0:	ldr	r2, [sp, #20]
   271d4:	eor	r8, lr, r6
   271d8:	str	r3, [sp, #40]	; 0x28
   271dc:	eor	r8, r8, ip
   271e0:	add	r5, r1, r5
   271e4:	add	r4, r9, r4
   271e8:	ldr	r1, [sp, #12]
   271ec:	add	r9, r8, r4
   271f0:	eor	r7, r7, r2
   271f4:	ldr	r4, [sp, #64]	; 0x40
   271f8:	eor	r7, r7, r3
   271fc:	eor	r2, fp, r1
   27200:	ldmib	sp, {r3, fp}
   27204:	eor	r2, r2, r4
   27208:	eor	r2, r2, r0
   2720c:	add	r5, r5, ip, ror #27
   27210:	add	r3, fp, r3
   27214:	ldr	fp, [sp, #44]	; 0x2c
   27218:	ror	ip, ip, #2
   2721c:	add	lr, r3, lr
   27220:	eor	r8, sl, fp
   27224:	ror	r3, r7, #31
   27228:	ror	sl, r2, #31
   2722c:	str	sl, [sp, #4]
   27230:	ldr	sl, [sp, #24]
   27234:	eor	r1, r6, ip
   27238:	add	r9, r9, r5, ror #27
   2723c:	mov	r4, r3
   27240:	eor	r1, r1, r5
   27244:	eor	r8, r8, sl
   27248:	movw	r3, #48348	; 0xbcdc
   2724c:	ldr	sl, [sp, #8]
   27250:	movt	r3, #36635	; 0x8f1b
   27254:	ror	r5, r5, #2
   27258:	add	lr, r1, lr
   2725c:	add	r1, r4, r3
   27260:	add	lr, lr, r9, ror #27
   27264:	str	r4, [sp, #44]	; 0x2c
   27268:	eor	r8, r8, sl
   2726c:	orr	r4, r9, r5
   27270:	ldr	sl, [sp, #16]
   27274:	add	r6, r1, r6
   27278:	ldr	r1, [sp, #12]
   2727c:	and	r4, r4, ip
   27280:	str	r0, [sp, #68]	; 0x44
   27284:	ror	r0, r9, #2
   27288:	and	r9, r9, r5
   2728c:	eor	r7, r1, sl
   27290:	orr	r4, r4, r9
   27294:	ldr	sl, [sp, #56]	; 0x38
   27298:	add	r6, r6, lr, ror #27
   2729c:	orr	r2, lr, r0
   272a0:	add	r6, r4, r6
   272a4:	ldr	r4, [sp, #44]	; 0x2c
   272a8:	and	r9, lr, r0
   272ac:	ldr	r1, [sp, #4]
   272b0:	and	r2, r2, r5
   272b4:	eor	r7, r7, sl
   272b8:	orr	r2, r2, r9
   272bc:	eor	r7, r7, r4
   272c0:	ldr	r9, [sp, #48]	; 0x30
   272c4:	add	r1, r1, r3
   272c8:	add	ip, r1, ip
   272cc:	ror	r1, r8, #31
   272d0:	eor	r8, fp, r9
   272d4:	ror	fp, r7, #31
   272d8:	str	fp, [sp, #12]
   272dc:	ror	lr, lr, #2
   272e0:	ldr	fp, [sp, #60]	; 0x3c
   272e4:	add	r4, r1, r3
   272e8:	add	ip, r2, ip
   272ec:	add	r5, r4, r5
   272f0:	eor	r8, r8, fp
   272f4:	ldr	fp, [sp, #4]
   272f8:	ldr	r4, [sp, #16]
   272fc:	orr	r2, r6, lr
   27300:	eor	r8, r8, fp
   27304:	ldr	fp, [sp, #52]	; 0x34
   27308:	add	ip, ip, r6, ror #27
   2730c:	str	r1, [sp, #28]
   27310:	and	r2, r2, r0
   27314:	ror	r1, r6, #2
   27318:	and	r6, r6, lr
   2731c:	eor	r7, r4, fp
   27320:	orr	r6, r2, r6
   27324:	ldr	r4, [sp, #40]	; 0x28
   27328:	ldr	r2, [sp, #12]
   2732c:	orr	sl, ip, r1
   27330:	add	r5, r5, ip, ror #27
   27334:	and	fp, ip, r1
   27338:	add	r5, r6, r5
   2733c:	add	r2, r2, r3
   27340:	ror	r6, r8, #31
   27344:	and	sl, sl, lr
   27348:	ldr	r8, [sp, #28]
   2734c:	eor	r7, r7, r4
   27350:	ldr	r4, [sp, #20]
   27354:	add	r0, r2, r0
   27358:	str	r6, [sp, #48]	; 0x30
   2735c:	add	r2, r6, r3
   27360:	orr	sl, sl, fp
   27364:	ldr	r6, [sp, #68]	; 0x44
   27368:	ror	ip, ip, #2
   2736c:	eor	r7, r7, r8
   27370:	add	sl, sl, r0
   27374:	eor	r8, r9, r4
   27378:	add	lr, r2, lr
   2737c:	ldr	r2, [sp, #12]
   27380:	add	sl, sl, r5, ror #27
   27384:	orr	r0, r5, ip
   27388:	eor	r8, r8, r6
   2738c:	ror	fp, r5, #2
   27390:	ror	r9, r7, #31
   27394:	and	r0, r0, r1
   27398:	str	r9, [sp, #16]
   2739c:	eor	r8, r8, r2
   273a0:	and	r5, r5, ip
   273a4:	ldr	r9, [sp, #64]	; 0x40
   273a8:	ldr	r6, [sp, #52]	; 0x34
   273ac:	orr	r5, r0, r5
   273b0:	add	lr, lr, sl, ror #27
   273b4:	ldr	r0, [sp, #16]
   273b8:	add	lr, r5, lr
   273bc:	ror	r5, r8, #31
   273c0:	add	r2, r0, r3
   273c4:	orr	r4, sl, fp
   273c8:	eor	r7, r6, r9
   273cc:	ldr	r6, [sp, #8]
   273d0:	and	r0, sl, fp
   273d4:	add	r1, r2, r1
   273d8:	and	r4, r4, ip
   273dc:	mov	r2, r5
   273e0:	ldr	r5, [sp, #48]	; 0x30
   273e4:	eor	r7, r7, r6
   273e8:	orr	r4, r4, r0
   273ec:	ldr	r6, [sp, #44]	; 0x2c
   273f0:	eor	r7, r7, r5
   273f4:	add	r4, r4, r1
   273f8:	ldr	r5, [sp, #24]
   273fc:	ror	sl, sl, #2
   27400:	ldr	r1, [sp, #20]
   27404:	add	r4, r4, lr, ror #27
   27408:	str	r2, [sp, #24]
   2740c:	ror	r0, lr, #2
   27410:	eor	r8, r1, r5
   27414:	add	r1, r2, r3
   27418:	add	ip, r1, ip
   2741c:	ldr	r1, [sp, #16]
   27420:	orr	r2, lr, sl
   27424:	eor	r8, r8, r6
   27428:	and	r2, r2, fp
   2742c:	eor	r8, r8, r1
   27430:	and	lr, lr, sl
   27434:	ldr	r1, [sp, #56]	; 0x38
   27438:	add	ip, ip, r4, ror #27
   2743c:	orr	lr, r2, lr
   27440:	add	lr, lr, ip
   27444:	ror	r7, r7, #31
   27448:	ror	ip, r8, #31
   2744c:	add	r2, r7, r3
   27450:	eor	r1, r9, r1
   27454:	ldr	r9, [sp, #4]
   27458:	add	fp, r2, fp
   2745c:	mov	r2, ip
   27460:	ldr	ip, [sp, #24]
   27464:	eor	r1, r1, r9
   27468:	ldr	r8, [sp, #60]	; 0x3c
   2746c:	orr	r6, r4, r0
   27470:	eor	r1, r1, ip
   27474:	ror	r9, r4, #2
   27478:	str	r7, [sp, #64]	; 0x40
   2747c:	and	r6, r6, sl
   27480:	and	r7, r4, r0
   27484:	orr	ip, lr, r9
   27488:	orr	r6, r6, r7
   2748c:	eor	r7, r5, r8
   27490:	ror	r5, r1, #31
   27494:	str	r5, [sp, #36]	; 0x24
   27498:	ldr	r5, [sp, #28]
   2749c:	add	fp, r6, fp
   274a0:	and	r6, ip, r0
   274a4:	ldr	ip, [sp, #64]	; 0x40
   274a8:	eor	r7, r7, r5
   274ac:	ldr	r1, [sp, #56]	; 0x38
   274b0:	eor	r7, r7, ip
   274b4:	ldr	ip, [sp, #40]	; 0x28
   274b8:	add	fp, fp, lr, ror #27
   274bc:	ror	r4, lr, #2
   274c0:	and	lr, lr, r9
   274c4:	eor	r1, r1, ip
   274c8:	orr	ip, r6, lr
   274cc:	ldr	lr, [sp, #36]	; 0x24
   274d0:	str	r2, [sp, #32]
   274d4:	add	r2, r2, r3
   274d8:	add	r5, lr, r3
   274dc:	add	sl, r2, sl
   274e0:	ldr	lr, [sp, #12]
   274e4:	add	sl, sl, fp, ror #27
   274e8:	orr	r8, fp, r4
   274ec:	and	r2, fp, r4
   274f0:	eor	r1, r1, lr
   274f4:	add	lr, ip, sl
   274f8:	ror	sl, r7, #31
   274fc:	and	r8, r8, r9
   27500:	orr	r8, r8, r2
   27504:	add	r0, r5, r0
   27508:	mov	ip, sl
   2750c:	ldr	sl, [sp, #32]
   27510:	add	r5, r8, r0
   27514:	ror	r8, fp, #2
   27518:	eor	r6, r1, sl
   2751c:	ldr	fp, [sp, #68]	; 0x44
   27520:	ldr	r1, [sp, #60]	; 0x3c
   27524:	add	r5, r5, lr, ror #27
   27528:	ror	sl, lr, #2
   2752c:	add	r0, ip, r3
   27530:	eor	r7, r1, fp
   27534:	ror	r1, r6, #31
   27538:	str	r1, [sp, #20]
   2753c:	orr	r2, lr, r8
   27540:	ldr	r1, [sp, #48]	; 0x30
   27544:	add	r9, r0, r9
   27548:	str	ip, [sp, #56]	; 0x38
   2754c:	and	ip, lr, r8
   27550:	ldr	lr, [sp, #36]	; 0x24
   27554:	eor	r7, r7, r1
   27558:	ldr	r1, [sp, #40]	; 0x28
   2755c:	and	r2, r2, r4
   27560:	eor	r7, r7, lr
   27564:	ldr	lr, [sp, #8]
   27568:	add	r9, r9, r5, ror #27
   2756c:	orr	r2, r2, ip
   27570:	eor	r0, r1, lr
   27574:	ldr	r1, [sp, #20]
   27578:	add	r2, r2, r9
   2757c:	orr	r6, r5, sl
   27580:	ror	r9, r7, #31
   27584:	add	lr, r1, r3
   27588:	and	ip, r5, sl
   2758c:	ldr	r1, [sp, #16]
   27590:	and	r6, r6, r8
   27594:	add	r4, lr, r4
   27598:	orr	r6, r6, ip
   2759c:	mov	ip, r9
   275a0:	ldr	r9, [sp, #56]	; 0x38
   275a4:	eor	r0, r0, r1
   275a8:	add	lr, r6, r4
   275ac:	ldr	r6, [sp, #44]	; 0x2c
   275b0:	eor	r0, r0, r9
   275b4:	str	ip, [sp, #60]	; 0x3c
   275b8:	add	ip, ip, r3
   275bc:	ror	r5, r5, #2
   275c0:	ror	r4, r0, #31
   275c4:	eor	r9, fp, r6
   275c8:	add	ip, ip, r8
   275cc:	ldr	r8, [sp, #20]
   275d0:	mov	r7, r4
   275d4:	ldr	r4, [sp, #24]
   275d8:	add	lr, lr, r2, ror #27
   275dc:	orr	r1, r2, r5
   275e0:	eor	r9, r9, r4
   275e4:	ror	fp, r2, #2
   275e8:	eor	r9, r9, r8
   275ec:	and	r2, r2, r5
   275f0:	and	r1, r1, sl
   275f4:	ldmib	sp, {r4, r8}
   275f8:	add	ip, ip, lr, ror #27
   275fc:	orr	r1, r1, r2
   27600:	add	r1, r1, ip
   27604:	orr	r0, lr, fp
   27608:	ror	ip, r9, #31
   2760c:	ldr	r2, [sp, #64]	; 0x40
   27610:	and	r0, r0, r5
   27614:	eor	r8, r4, r8
   27618:	and	r4, lr, fp
   2761c:	eor	r8, r8, r2
   27620:	orr	r4, r0, r4
   27624:	mov	r0, ip
   27628:	ldr	ip, [sp, #60]	; 0x3c
   2762c:	ror	lr, lr, #2
   27630:	str	r7, [sp, #40]	; 0x28
   27634:	add	r7, r7, r3
   27638:	eor	r8, r8, ip
   2763c:	add	sl, r7, sl
   27640:	ldr	ip, [sp, #28]
   27644:	add	r4, r4, sl
   27648:	ror	sl, r8, #31
   2764c:	str	sl, [sp, #8]
   27650:	ldr	sl, [sp, #32]
   27654:	eor	r9, r6, ip
   27658:	add	r4, r4, r1, ror #27
   2765c:	add	r2, r0, r3
   27660:	eor	r9, r9, sl
   27664:	ldr	sl, [sp, #40]	; 0x28
   27668:	ldr	r8, [sp, #4]
   2766c:	orr	r6, r1, lr
   27670:	eor	r9, r9, sl
   27674:	ldr	sl, [sp, #12]
   27678:	ror	ip, r1, #2
   2767c:	add	r5, r2, r5
   27680:	and	r1, r1, lr
   27684:	and	r6, r6, fp
   27688:	eor	r7, r8, sl
   2768c:	add	r5, r5, r4, ror #27
   27690:	ldr	r8, [sp, #8]
   27694:	orr	r6, r6, r1
   27698:	add	r6, r6, r5
   2769c:	ror	r5, r9, #31
   276a0:	str	r0, [sp, #44]	; 0x2c
   276a4:	add	sl, r8, r3
   276a8:	ldr	r8, [sp, #36]	; 0x24
   276ac:	mov	r2, r5
   276b0:	ldr	r5, [sp, #44]	; 0x2c
   276b4:	orr	r0, r4, ip
   276b8:	eor	r7, r7, r8
   276bc:	and	r1, r4, ip
   276c0:	and	r0, r0, lr
   276c4:	eor	r7, r7, r5
   276c8:	add	fp, sl, fp
   276cc:	orr	r1, r0, r1
   276d0:	add	r1, r1, fp
   276d4:	ror	fp, r7, #31
   276d8:	ror	r8, r4, #2
   276dc:	ldr	r0, [sp, #48]	; 0x30
   276e0:	ldr	r4, [sp, #28]
   276e4:	mov	r7, fp
   276e8:	ldr	fp, [sp, #56]	; 0x38
   276ec:	add	r1, r1, r6, ror #27
   276f0:	ldr	r9, [sp, #8]
   276f4:	eor	sl, r4, r0
   276f8:	eor	sl, sl, fp
   276fc:	ror	r5, r6, #2
   27700:	str	r2, [sp, #28]
   27704:	add	r4, r2, r3
   27708:	eor	sl, sl, r9
   2770c:	orr	r2, r6, r8
   27710:	ldr	r9, [sp, #12]
   27714:	and	r6, r6, r8
   27718:	ldr	fp, [sp, #16]
   2771c:	add	r4, r4, lr
   27720:	and	r2, r2, ip
   27724:	orr	lr, r1, r5
   27728:	add	r4, r4, r1, ror #27
   2772c:	and	lr, lr, r8
   27730:	eor	fp, r9, fp
   27734:	orr	r2, r2, r6
   27738:	and	r9, r1, r5
   2773c:	ldr	r6, [sp, #20]
   27740:	add	r2, r2, r4
   27744:	orr	r9, lr, r9
   27748:	ror	r4, sl, #31
   2774c:	ldr	lr, [sp, #28]
   27750:	str	r7, [sp, #48]	; 0x30
   27754:	eor	fp, fp, r6
   27758:	add	r7, r7, r3
   2775c:	eor	fp, fp, lr
   27760:	add	ip, r7, ip
   27764:	mov	r7, r4
   27768:	ldr	r4, [sp, #24]
   2776c:	add	ip, r9, ip
   27770:	ldr	r9, [sp, #60]	; 0x3c
   27774:	add	r6, ip, r2, ror #27
   27778:	str	r7, [sp, #52]	; 0x34
   2777c:	ror	sl, r1, #2
   27780:	ror	ip, fp, #31
   27784:	ldr	r1, [sp, #16]
   27788:	str	ip, [sp, #4]
   2778c:	mov	lr, r0
   27790:	ldr	fp, [sp, #64]	; 0x40
   27794:	eor	lr, lr, r4
   27798:	ldr	ip, [sp, #48]	; 0x30
   2779c:	orr	r0, r2, sl
   277a0:	eor	lr, lr, r9
   277a4:	add	r4, r7, r3
   277a8:	eor	lr, lr, ip
   277ac:	eor	r9, r1, fp
   277b0:	and	r1, r0, r5
   277b4:	ldr	r0, [sp, #4]
   277b8:	ror	r7, r2, #2
   277bc:	add	r4, r4, r8
   277c0:	and	r2, r2, sl
   277c4:	ldr	r8, [sp, #40]	; 0x28
   277c8:	add	r3, r0, r3
   277cc:	orr	r0, r1, r2
   277d0:	ror	r1, lr, #31
   277d4:	str	r1, [sp, #12]
   277d8:	ldr	r1, [sp, #52]	; 0x34
   277dc:	eor	r9, r9, r8
   277e0:	ldr	lr, [sp, #32]
   277e4:	orr	ip, r6, r7
   277e8:	eor	r9, r9, r1
   277ec:	ldr	r1, [sp, #24]
   277f0:	add	r4, r4, r6, ror #27
   277f4:	and	r8, r6, r7
   277f8:	eor	lr, r1, lr
   277fc:	add	r1, r3, r5
   27800:	ldr	r5, [sp, #44]	; 0x2c
   27804:	add	r0, r0, r4
   27808:	and	ip, ip, sl
   2780c:	ldr	r4, [sp, #12]
   27810:	eor	lr, lr, r5
   27814:	ldr	r5, [sp, #4]
   27818:	orr	r2, ip, r8
   2781c:	movw	r3, #49622	; 0xc1d6
   27820:	ror	ip, r6, #2
   27824:	movt	r3, #51810	; 0xca62
   27828:	ror	r6, r9, #31
   2782c:	ldr	r9, [sp, #36]	; 0x24
   27830:	ldr	r8, [sp, #8]
   27834:	eor	lr, lr, r5
   27838:	add	r2, r2, r1
   2783c:	add	r1, r4, r3
   27840:	eor	r4, r7, ip
   27844:	add	r2, r2, r0, ror #27
   27848:	eor	r5, fp, r9
   2784c:	add	r1, r1, sl
   27850:	ldr	fp, [sp, #12]
   27854:	eor	r4, r4, r0
   27858:	ror	r0, r0, #2
   2785c:	ldr	sl, [sp, #56]	; 0x38
   27860:	str	r6, [sp, #24]
   27864:	eor	r5, r5, r8
   27868:	add	r4, r4, r1
   2786c:	ror	r8, lr, #31
   27870:	eor	r1, ip, r0
   27874:	ldr	lr, [sp, #32]
   27878:	add	r6, r6, r3
   2787c:	eor	r5, r5, fp
   27880:	add	r6, r6, r7
   27884:	ldr	fp, [sp, #28]
   27888:	eor	r1, r1, r2
   2788c:	eor	lr, lr, sl
   27890:	add	r1, r1, r6
   27894:	ldr	r6, [sp, #24]
   27898:	eor	lr, lr, fp
   2789c:	add	r4, r4, r2, ror #27
   278a0:	eor	lr, lr, r6
   278a4:	ror	r2, r2, #2
   278a8:	ldr	r6, [sp, #20]
   278ac:	eor	r7, r0, r2
   278b0:	str	r8, [sp, #32]
   278b4:	add	r8, r8, r3
   278b8:	add	r1, r1, r4, ror #27
   278bc:	ror	fp, r5, #31
   278c0:	eor	r5, r9, r6
   278c4:	add	r6, r8, ip
   278c8:	ror	ip, r4, #2
   278cc:	eor	r8, r7, r4
   278d0:	ldr	r4, [sp, #48]	; 0x30
   278d4:	add	r8, r8, r6
   278d8:	str	fp, [sp, #16]
   278dc:	eor	fp, r2, ip
   278e0:	eor	r5, r5, r4
   278e4:	ldr	r4, [sp, #16]
   278e8:	ror	r9, r1, #2
   278ec:	add	r8, r8, r1, ror #27
   278f0:	add	r6, r4, r3
   278f4:	ror	r4, lr, #31
   278f8:	ldr	lr, [sp, #32]
   278fc:	eor	fp, fp, r1
   27900:	str	r4, [sp, #56]	; 0x38
   27904:	add	r0, r6, r0
   27908:	eor	r5, r5, lr
   2790c:	ldr	lr, [sp, #60]	; 0x3c
   27910:	add	r4, r4, r3
   27914:	add	fp, fp, r0
   27918:	eor	r7, sl, lr
   2791c:	ldr	sl, [sp, #52]	; 0x34
   27920:	ror	r1, r5, #31
   27924:	str	r1, [sp, #36]	; 0x24
   27928:	ldr	r1, [sp, #16]
   2792c:	eor	r7, r7, sl
   27930:	eor	sl, ip, r9
   27934:	add	r2, r4, r2
   27938:	eor	r7, r7, r1
   2793c:	ldr	r1, [sp, #20]
   27940:	ldr	r5, [sp, #40]	; 0x28
   27944:	eor	sl, sl, r8
   27948:	ldr	r4, [sp, #56]	; 0x38
   2794c:	add	sl, sl, r2
   27950:	eor	r6, r1, r5
   27954:	ldr	r1, [sp, #4]
   27958:	ldr	r2, [sp, #36]	; 0x24
   2795c:	add	fp, fp, r8, ror #27
   27960:	eor	r6, r6, r1
   27964:	ror	r8, r8, #2
   27968:	eor	r6, r6, r4
   2796c:	ldr	r4, [sp, #44]	; 0x2c
   27970:	eor	r0, r9, r8
   27974:	add	r1, r2, r3
   27978:	ldr	r2, [sp, #12]
   2797c:	add	sl, sl, fp, ror #27
   27980:	ror	r7, r7, #31
   27984:	eor	r5, lr, r4
   27988:	eor	r0, r0, fp
   2798c:	ldr	r4, [sp, #8]
   27990:	ror	fp, fp, #2
   27994:	add	r1, r1, ip
   27998:	ldr	ip, [sp, #40]	; 0x28
   2799c:	add	lr, r7, r3
   279a0:	eor	r5, r5, r2
   279a4:	ror	r6, r6, #31
   279a8:	eor	r2, r8, fp
   279ac:	str	r6, [sp, #20]
   279b0:	ldr	r6, [sp, #24]
   279b4:	add	lr, lr, r9
   279b8:	eor	ip, ip, r4
   279bc:	eor	r2, r2, sl
   279c0:	ldr	r9, [sp, #28]
   279c4:	eor	ip, ip, r6
   279c8:	add	r2, r2, lr
   279cc:	ldr	lr, [sp, #44]	; 0x2c
   279d0:	ldr	r6, [sp, #20]
   279d4:	eor	ip, ip, r7
   279d8:	add	r1, r0, r1
   279dc:	ldr	r0, [sp, #36]	; 0x24
   279e0:	add	r1, r1, sl, ror #27
   279e4:	eor	r9, lr, r9
   279e8:	ror	sl, sl, #2
   279ec:	ldr	lr, [sp, #32]
   279f0:	eor	r4, fp, sl
   279f4:	eor	r5, r5, r0
   279f8:	add	r0, r6, r3
   279fc:	ror	r6, ip, #31
   27a00:	ldr	ip, [sp, #20]
   27a04:	add	r8, r0, r8
   27a08:	eor	r4, r4, r1
   27a0c:	eor	r9, r9, lr
   27a10:	add	r2, r2, r1, ror #27
   27a14:	ror	r5, r5, #31
   27a18:	ror	r1, r1, #2
   27a1c:	eor	r9, r9, ip
   27a20:	add	r4, r4, r8
   27a24:	ldr	ip, [sp, #8]
   27a28:	ldr	r8, [sp, #48]	; 0x30
   27a2c:	add	r0, r5, r3
   27a30:	eor	lr, sl, r1
   27a34:	add	fp, r0, fp
   27a38:	eor	r8, ip, r8
   27a3c:	eor	lr, lr, r2
   27a40:	ldr	ip, [sp, #16]
   27a44:	add	lr, lr, fp
   27a48:	ror	fp, r9, #31
   27a4c:	ldr	r9, [sp, #28]
   27a50:	str	fp, [sp, #8]
   27a54:	add	r0, r6, r3
   27a58:	ldr	fp, [sp, #52]	; 0x34
   27a5c:	eor	r8, r8, ip
   27a60:	add	r0, r0, sl
   27a64:	eor	r8, r8, r5
   27a68:	ldr	sl, [sp, #56]	; 0x38
   27a6c:	eor	r9, r9, fp
   27a70:	ldr	fp, [sp, #8]
   27a74:	add	r4, r4, r2, ror #27
   27a78:	eor	r9, r9, sl
   27a7c:	ror	r2, r2, #2
   27a80:	add	sl, fp, r3
   27a84:	ror	r8, r8, #31
   27a88:	str	r8, [sp, #28]
   27a8c:	eor	ip, r1, r2
   27a90:	ldr	fp, [sp, #4]
   27a94:	add	r1, sl, r1
   27a98:	ldr	r8, [sp, #48]	; 0x30
   27a9c:	eor	r9, r9, r6
   27aa0:	ldr	sl, [sp, #28]
   27aa4:	add	lr, lr, r4, ror #27
   27aa8:	str	r6, [sp, #40]	; 0x28
   27aac:	eor	r8, r8, fp
   27ab0:	ldr	r6, [sp, #36]	; 0x24
   27ab4:	add	fp, sl, r3
   27ab8:	ldr	sl, [sp, #8]
   27abc:	eor	ip, ip, r4
   27ac0:	eor	r8, r8, r6
   27ac4:	ror	r4, r4, #2
   27ac8:	eor	r8, r8, sl
   27acc:	ldr	sl, [sp, #52]	; 0x34
   27ad0:	ldr	r6, [sp, #12]
   27ad4:	add	ip, ip, r0
   27ad8:	eor	r0, r2, r4
   27adc:	add	r2, fp, r2
   27ae0:	eor	sl, sl, r6
   27ae4:	ldr	fp, [sp, #4]
   27ae8:	ldr	r6, [sp, #24]
   27aec:	add	ip, ip, lr, ror #27
   27af0:	eor	r0, r0, lr
   27af4:	ror	lr, lr, #2
   27af8:	eor	fp, fp, r6
   27afc:	ldr	r6, [sp, #28]
   27b00:	add	r0, r0, r1
   27b04:	eor	r7, r7, sl
   27b08:	eor	r1, r4, lr
   27b0c:	add	r0, r0, ip, ror #27
   27b10:	ror	r9, r9, #31
   27b14:	eor	r1, r1, ip
   27b18:	eor	r7, r7, r6
   27b1c:	ror	ip, ip, #2
   27b20:	ldr	r6, [sp, #20]
   27b24:	add	sl, r9, r3
   27b28:	add	r1, r1, r2
   27b2c:	eor	r2, lr, ip
   27b30:	eor	r2, r2, r0
   27b34:	add	r4, sl, r4
   27b38:	eor	r6, r6, fp
   27b3c:	add	r4, r2, r4
   27b40:	eor	r6, r6, r9
   27b44:	ldr	r2, [sp, #32]
   27b48:	ldr	r9, [sp, #12]
   27b4c:	add	r1, r1, r0, ror #27
   27b50:	ror	r8, r8, #31
   27b54:	ror	r0, r0, #2
   27b58:	eor	r9, r9, r2
   27b5c:	add	sl, r8, r3
   27b60:	eor	fp, ip, r0
   27b64:	eor	r5, r5, r9
   27b68:	add	r4, r4, r1, ror #27
   27b6c:	eor	fp, fp, r1
   27b70:	ror	r7, r7, #31
   27b74:	ror	r1, r1, #2
   27b78:	add	lr, sl, lr
   27b7c:	eor	r8, r8, r5
   27b80:	ldr	r9, [sp, #16]
   27b84:	add	r2, r7, r3
   27b88:	ldr	r5, [sp, #24]
   27b8c:	eor	sl, r0, r1
   27b90:	add	lr, fp, lr
   27b94:	eor	sl, sl, r4
   27b98:	add	lr, lr, r4, ror #27
   27b9c:	ror	r6, r6, #31
   27ba0:	ror	r4, r4, #2
   27ba4:	add	ip, r2, ip
   27ba8:	eor	r9, r5, r9
   27bac:	ldr	r5, [sp, #40]	; 0x28
   27bb0:	add	r2, r6, r3
   27bb4:	eor	fp, r1, r4
   27bb8:	add	ip, sl, ip
   27bbc:	eor	r9, r9, r5
   27bc0:	ror	sl, lr, #2
   27bc4:	add	ip, ip, lr, ror #27
   27bc8:	eor	fp, fp, lr
   27bcc:	ldr	r5, [sp, #56]	; 0x38
   27bd0:	add	r0, r2, r0
   27bd4:	ldr	lr, [sp, #32]
   27bd8:	add	r0, fp, r0
   27bdc:	ldr	fp, [sp, #8]
   27be0:	ror	r8, r8, #31
   27be4:	eor	lr, lr, r5
   27be8:	eor	lr, lr, fp
   27bec:	eor	r5, r4, sl
   27bf0:	eor	r7, r7, r9
   27bf4:	add	r9, r8, r3
   27bf8:	eor	r5, r5, ip
   27bfc:	ldr	fp, [sp, #36]	; 0x24
   27c00:	add	r1, r9, r1
   27c04:	eor	r6, r6, lr
   27c08:	ldr	lr, [sp, #16]
   27c0c:	add	r0, r0, ip, ror #27
   27c10:	add	r1, r5, r1
   27c14:	ror	ip, ip, #2
   27c18:	ldr	r5, [sp, #28]
   27c1c:	add	r7, r3, r7, ror #31
   27c20:	eor	r2, lr, fp
   27c24:	eor	lr, sl, ip
   27c28:	add	r1, r1, r0, ror #27
   27c2c:	eor	r2, r2, r5
   27c30:	add	r4, r7, r4
   27c34:	ldr	r9, [sp, #72]	; 0x48
   27c38:	eor	r7, lr, r0
   27c3c:	ror	r0, r0, #2
   27c40:	eor	fp, ip, r0
   27c44:	add	r4, r4, r7
   27c48:	eor	r8, r8, r2
   27c4c:	add	r4, r4, r1, ror #27
   27c50:	eor	fp, fp, r1
   27c54:	add	r6, r3, r6, ror #31
   27c58:	ror	r1, r1, #2
   27c5c:	add	r3, r9, r3
   27c60:	ldr	r2, [sp, #92]	; 0x5c
   27c64:	add	r8, r3, r8, ror #31
   27c68:	add	r6, r6, sl
   27c6c:	eor	r3, r0, r1
   27c70:	add	r6, r6, fp
   27c74:	add	ip, r8, ip
   27c78:	ldr	r7, [sp, #80]	; 0x50
   27c7c:	eor	r8, r3, r4
   27c80:	ldr	r3, [sp, #76]	; 0x4c
   27c84:	add	r6, r6, r4, ror #27
   27c88:	ldr	r5, [sp, #88]	; 0x58
   27c8c:	add	r4, r7, r4, ror #2
   27c90:	add	r3, r3, r6
   27c94:	str	r4, [r2, #16]
   27c98:	str	r3, [r2, #12]
   27c9c:	mov	r3, r2
   27ca0:	ldr	r2, [sp, #84]	; 0x54
   27ca4:	add	ip, ip, r8
   27ca8:	add	ip, ip, r6, ror #27
   27cac:	add	r0, r5, r0
   27cb0:	add	r1, r2, r1
   27cb4:	str	ip, [r3, #8]
   27cb8:	str	r1, [r3, #20]
   27cbc:	str	r0, [r3, #24]
   27cc0:	add	sp, sp, #100	; 0x64
   27cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27ccc:	mov	r6, r0
   27cd0:	ldr	r8, [r0]
   27cd4:	mov	r7, r2
   27cd8:	mov	r4, r1
   27cdc:	adds	r3, r8, r2
   27ce0:	str	r3, [r0]
   27ce4:	and	r8, r8, #63	; 0x3f
   27ce8:	ldrcs	r3, [r0, #4]
   27cec:	rsb	r5, r8, #64	; 0x40
   27cf0:	addcs	r3, r3, #1
   27cf4:	strcs	r3, [r0, #4]
   27cf8:	cmp	r5, r2
   27cfc:	movhi	r3, #0
   27d00:	movls	r3, #1
   27d04:	cmp	r8, #0
   27d08:	moveq	r3, #0
   27d0c:	cmp	r3, #0
   27d10:	bne	27d68 <crc32@@Base+0xe310>
   27d14:	cmp	r7, #63	; 0x3f
   27d18:	bls	27d48 <crc32@@Base+0xe2f0>
   27d1c:	sub	r5, r7, #64	; 0x40
   27d20:	bic	r5, r5, #63	; 0x3f
   27d24:	add	r5, r5, #64	; 0x40
   27d28:	add	r5, r4, r5
   27d2c:	mov	r1, r4
   27d30:	mov	r0, r6
   27d34:	add	r4, r4, #64	; 0x40
   27d38:	bl	268b0 <crc32@@Base+0xce58>
   27d3c:	cmp	r4, r5
   27d40:	bne	27d2c <crc32@@Base+0xe2d4>
   27d44:	and	r7, r7, #63	; 0x3f
   27d48:	cmp	r7, #0
   27d4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   27d50:	add	r0, r6, #28
   27d54:	mov	r2, r7
   27d58:	add	r0, r0, r8
   27d5c:	mov	r1, r4
   27d60:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   27d64:	b	125c0 <memcpy@plt>
   27d68:	add	r9, r0, #28
   27d6c:	mov	r2, r5
   27d70:	add	r0, r9, r8
   27d74:	sub	r7, r7, r5
   27d78:	bl	125c0 <memcpy@plt>
   27d7c:	mov	r1, r9
   27d80:	mov	r0, r6
   27d84:	add	r4, r4, r5
   27d88:	bl	268b0 <crc32@@Base+0xce58>
   27d8c:	mov	r8, #0
   27d90:	b	27d14 <crc32@@Base+0xe2bc>
   27d94:	movw	r2, #8961	; 0x2301
   27d98:	movw	r3, #43913	; 0xab89
   27d9c:	movt	r2, #26437	; 0x6745
   27da0:	movt	r3, #61389	; 0xefcd
   27da4:	strd	r2, [r0, #8]
   27da8:	movw	r2, #56574	; 0xdcfe
   27dac:	movw	r3, #21622	; 0x5476
   27db0:	movt	r2, #39098	; 0x98ba
   27db4:	movt	r3, #4146	; 0x1032
   27db8:	strd	r2, [r0, #16]
   27dbc:	mov	r3, #0
   27dc0:	movw	r2, #57840	; 0xe1f0
   27dc4:	str	r3, [r0]
   27dc8:	movt	r2, #50130	; 0xc3d2
   27dcc:	str	r3, [r0, #4]
   27dd0:	str	r2, [r0, #24]
   27dd4:	bx	lr
   27dd8:	cmp	r2, #0
   27ddc:	bxeq	lr
   27de0:	b	27cc8 <crc32@@Base+0xe270>
   27de4:	ldr	r3, [r0]
   27de8:	push	{r4, r5, r6, lr}
   27dec:	mov	r4, r0
   27df0:	ldr	r0, [r0, #4]
   27df4:	movw	r6, #61168	; 0xeef0
   27df8:	movt	r6, #4
   27dfc:	mov	r5, r1
   27e00:	lsr	r1, r3, #29
   27e04:	sub	sp, sp, #16
   27e08:	orr	r1, r1, r0, lsl #3
   27e0c:	ldr	r0, [r6]
   27e10:	and	r2, r3, #63	; 0x3f
   27e14:	lsl	r3, r3, #3
   27e18:	cmp	r2, #55	; 0x37
   27e1c:	lsr	ip, r1, #24
   27e20:	rsbls	r2, r2, #56	; 0x38
   27e24:	rsbhi	r2, r2, #120	; 0x78
   27e28:	strb	r1, [sp, #7]
   27e2c:	strb	ip, [sp, #4]
   27e30:	lsr	ip, r1, #16
   27e34:	str	r0, [sp, #12]
   27e38:	lsr	r1, r1, #8
   27e3c:	mov	r0, r4
   27e40:	strb	r1, [sp, #6]
   27e44:	lsr	r1, r3, #24
   27e48:	strb	r1, [sp, #8]
   27e4c:	lsr	r1, r3, #16
   27e50:	strb	r1, [sp, #9]
   27e54:	movw	r1, #49588	; 0xc1b4
   27e58:	movt	r1, #3
   27e5c:	strb	r3, [sp, #11]
   27e60:	lsr	r3, r3, #8
   27e64:	strb	ip, [sp, #5]
   27e68:	strb	r3, [sp, #10]
   27e6c:	bl	27cc8 <crc32@@Base+0xe270>
   27e70:	mov	r2, #8
   27e74:	add	r1, sp, #4
   27e78:	mov	r0, r4
   27e7c:	bl	27cc8 <crc32@@Base+0xe270>
   27e80:	ldrb	r3, [r4, #11]
   27e84:	strb	r3, [r5]
   27e88:	ldrh	r3, [r4, #10]
   27e8c:	strb	r3, [r5, #1]
   27e90:	ldr	r3, [r4, #8]
   27e94:	lsr	r3, r3, #8
   27e98:	strb	r3, [r5, #2]
   27e9c:	ldr	r3, [r4, #8]
   27ea0:	strb	r3, [r5, #3]
   27ea4:	ldrb	r3, [r4, #15]
   27ea8:	strb	r3, [r5, #4]
   27eac:	ldrh	r3, [r4, #14]
   27eb0:	strb	r3, [r5, #5]
   27eb4:	ldr	r3, [r4, #12]
   27eb8:	lsr	r3, r3, #8
   27ebc:	strb	r3, [r5, #6]
   27ec0:	ldr	r3, [r4, #12]
   27ec4:	strb	r3, [r5, #7]
   27ec8:	ldrb	r3, [r4, #19]
   27ecc:	strb	r3, [r5, #8]
   27ed0:	ldrh	r3, [r4, #18]
   27ed4:	strb	r3, [r5, #9]
   27ed8:	ldr	r3, [r4, #16]
   27edc:	lsr	r3, r3, #8
   27ee0:	strb	r3, [r5, #10]
   27ee4:	ldr	r3, [r4, #16]
   27ee8:	strb	r3, [r5, #11]
   27eec:	ldrb	r3, [r4, #23]
   27ef0:	strb	r3, [r5, #12]
   27ef4:	ldrh	r3, [r4, #22]
   27ef8:	strb	r3, [r5, #13]
   27efc:	ldr	r3, [r4, #20]
   27f00:	lsr	r3, r3, #8
   27f04:	strb	r3, [r5, #14]
   27f08:	ldr	r3, [r4, #20]
   27f0c:	strb	r3, [r5, #15]
   27f10:	ldrb	r3, [r4, #27]
   27f14:	ldr	r1, [sp, #12]
   27f18:	ldr	r2, [r6]
   27f1c:	strb	r3, [r5, #16]
   27f20:	ldrh	r3, [r4, #26]
   27f24:	cmp	r1, r2
   27f28:	strb	r3, [r5, #17]
   27f2c:	ldr	r3, [r4, #24]
   27f30:	lsr	r3, r3, #8
   27f34:	strb	r3, [r5, #18]
   27f38:	ldr	r3, [r4, #24]
   27f3c:	strb	r3, [r5, #19]
   27f40:	bne	27f4c <crc32@@Base+0xe4f4>
   27f44:	add	sp, sp, #16
   27f48:	pop	{r4, r5, r6, pc}
   27f4c:	bl	124b8 <__stack_chk_fail@plt>
   27f50:	push	{r4, r5, r6, lr}
   27f54:	movw	r4, #61168	; 0xeef0
   27f58:	movt	r4, #4
   27f5c:	sub	sp, sp, #96	; 0x60
   27f60:	cmp	r1, #0
   27f64:	movw	r3, #8961	; 0x2301
   27f68:	ldr	ip, [r4]
   27f6c:	movt	r3, #26437	; 0x6745
   27f70:	mov	r5, sp
   27f74:	str	r3, [sp, #8]
   27f78:	mov	r6, r2
   27f7c:	movw	r3, #43913	; 0xab89
   27f80:	str	ip, [sp, #92]	; 0x5c
   27f84:	movt	r3, #61389	; 0xefcd
   27f88:	str	r3, [sp, #12]
   27f8c:	movw	r3, #56574	; 0xdcfe
   27f90:	movt	r3, #39098	; 0x98ba
   27f94:	str	r3, [sp, #16]
   27f98:	movw	r3, #21622	; 0x5476
   27f9c:	movt	r3, #4146	; 0x1032
   27fa0:	str	r3, [sp, #20]
   27fa4:	movw	r3, #57840	; 0xe1f0
   27fa8:	movt	r3, #50130	; 0xc3d2
   27fac:	str	r3, [sp, #24]
   27fb0:	mov	r3, #0
   27fb4:	str	r3, [sp]
   27fb8:	str	r3, [sp, #4]
   27fbc:	beq	27fd0 <crc32@@Base+0xe578>
   27fc0:	mov	r2, r1
   27fc4:	mov	r1, r0
   27fc8:	mov	r0, r5
   27fcc:	bl	27cc8 <crc32@@Base+0xe270>
   27fd0:	mov	r1, r6
   27fd4:	mov	r0, r5
   27fd8:	bl	27de4 <crc32@@Base+0xe38c>
   27fdc:	ldr	r2, [sp, #92]	; 0x5c
   27fe0:	ldr	r3, [r4]
   27fe4:	cmp	r2, r3
   27fe8:	bne	27ff4 <crc32@@Base+0xe59c>
   27fec:	add	sp, sp, #96	; 0x60
   27ff0:	pop	{r4, r5, r6, pc}
   27ff4:	bl	124b8 <__stack_chk_fail@plt>
   27ff8:	push	{r4, r5, r6, lr}
   27ffc:	movw	r4, #61168	; 0xeef0
   28000:	movt	r4, #4
   28004:	sub	sp, sp, #96	; 0x60
   28008:	cmp	r1, #0
   2800c:	movw	r3, #8961	; 0x2301
   28010:	ldr	ip, [r4]
   28014:	movt	r3, #26437	; 0x6745
   28018:	mov	r5, sp
   2801c:	str	r3, [sp, #8]
   28020:	mov	r6, r2
   28024:	movw	r3, #43913	; 0xab89
   28028:	str	ip, [sp, #92]	; 0x5c
   2802c:	movt	r3, #61389	; 0xefcd
   28030:	str	r3, [sp, #12]
   28034:	movw	r3, #56574	; 0xdcfe
   28038:	movt	r3, #39098	; 0x98ba
   2803c:	str	r3, [sp, #16]
   28040:	movw	r3, #21622	; 0x5476
   28044:	movt	r3, #4146	; 0x1032
   28048:	str	r3, [sp, #20]
   2804c:	movw	r3, #57840	; 0xe1f0
   28050:	movt	r3, #50130	; 0xc3d2
   28054:	str	r3, [sp, #24]
   28058:	mov	r3, #0
   2805c:	str	r3, [sp]
   28060:	str	r3, [sp, #4]
   28064:	beq	28078 <crc32@@Base+0xe620>
   28068:	mov	r2, r1
   2806c:	mov	r1, r0
   28070:	mov	r0, r5
   28074:	bl	27cc8 <crc32@@Base+0xe270>
   28078:	mov	r1, r6
   2807c:	mov	r0, r5
   28080:	bl	27de4 <crc32@@Base+0xe38c>
   28084:	ldr	r2, [sp, #92]	; 0x5c
   28088:	ldr	r3, [r4]
   2808c:	cmp	r2, r3
   28090:	bne	2809c <crc32@@Base+0xe644>
   28094:	add	sp, sp, #96	; 0x60
   28098:	pop	{r4, r5, r6, pc}
   2809c:	bl	124b8 <__stack_chk_fail@plt>
   280a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   280a4:	movw	r5, #61168	; 0xeef0
   280a8:	movt	r5, #4
   280ac:	sub	sp, sp, #248	; 0xf8
   280b0:	mov	r4, r1
   280b4:	mov	r9, r0
   280b8:	ldr	ip, [r5]
   280bc:	mov	r1, #54	; 0x36
   280c0:	mov	r8, r2
   280c4:	add	r0, sp, #116	; 0x74
   280c8:	mov	r2, #64	; 0x40
   280cc:	mov	r6, r3
   280d0:	str	ip, [sp, #244]	; 0xf4
   280d4:	ldr	r7, [sp, #280]	; 0x118
   280d8:	bl	12308 <memset@plt>
   280dc:	add	r0, sp, #180	; 0xb4
   280e0:	mov	r2, #64	; 0x40
   280e4:	mov	r1, #92	; 0x5c
   280e8:	bl	12308 <memset@plt>
   280ec:	cmp	r4, #0
   280f0:	ble	28140 <crc32@@Base+0xe6e8>
   280f4:	sub	r0, r9, #1
   280f8:	add	lr, sp, #179	; 0xb3
   280fc:	add	r9, sp, #115	; 0x73
   28100:	mov	r2, #0
   28104:	add	r2, r2, #1
   28108:	ldrb	r1, [r9, #1]!
   2810c:	cmp	r2, #63	; 0x3f
   28110:	ldrb	sl, [lr, #1]!
   28114:	ldrb	r3, [r0, #1]!
   28118:	movle	ip, #0
   2811c:	movgt	ip, #1
   28120:	cmp	r4, r2
   28124:	orrle	ip, ip, #1
   28128:	eor	r1, r1, r3
   2812c:	cmp	ip, #0
   28130:	eor	r3, r3, sl
   28134:	strb	r1, [r9]
   28138:	strb	r3, [lr]
   2813c:	beq	28104 <crc32@@Base+0xe6ac>
   28140:	add	r1, sp, #116	; 0x74
   28144:	mov	r2, #64	; 0x40
   28148:	add	r0, sp, #4
   2814c:	movw	r3, #8961	; 0x2301
   28150:	movt	r3, #26437	; 0x6745
   28154:	str	r3, [sp, #12]
   28158:	movw	r3, #43913	; 0xab89
   2815c:	movt	r3, #61389	; 0xefcd
   28160:	str	r3, [sp, #16]
   28164:	movw	r3, #56574	; 0xdcfe
   28168:	movt	r3, #39098	; 0x98ba
   2816c:	str	r3, [sp, #20]
   28170:	movw	r3, #21622	; 0x5476
   28174:	movt	r3, #4146	; 0x1032
   28178:	str	r3, [sp, #24]
   2817c:	movw	r3, #57840	; 0xe1f0
   28180:	movt	r3, #50130	; 0xc3d2
   28184:	str	r3, [sp, #28]
   28188:	mov	r3, #0
   2818c:	str	r3, [sp, #4]
   28190:	str	r3, [sp, #8]
   28194:	bl	27cc8 <crc32@@Base+0xe270>
   28198:	cmp	r6, #0
   2819c:	beq	281b0 <crc32@@Base+0xe758>
   281a0:	mov	r2, r6
   281a4:	mov	r1, r8
   281a8:	add	r0, sp, #4
   281ac:	bl	27cc8 <crc32@@Base+0xe270>
   281b0:	add	r0, sp, #4
   281b4:	add	r1, sp, #96	; 0x60
   281b8:	bl	27de4 <crc32@@Base+0xe38c>
   281bc:	add	r1, sp, #180	; 0xb4
   281c0:	mov	r2, #64	; 0x40
   281c4:	add	r0, sp, #4
   281c8:	movw	r3, #8961	; 0x2301
   281cc:	movt	r3, #26437	; 0x6745
   281d0:	str	r3, [sp, #12]
   281d4:	movw	r3, #43913	; 0xab89
   281d8:	movt	r3, #61389	; 0xefcd
   281dc:	str	r3, [sp, #16]
   281e0:	movw	r3, #56574	; 0xdcfe
   281e4:	movt	r3, #39098	; 0x98ba
   281e8:	str	r3, [sp, #20]
   281ec:	movw	r3, #21622	; 0x5476
   281f0:	movt	r3, #4146	; 0x1032
   281f4:	str	r3, [sp, #24]
   281f8:	movw	r3, #57840	; 0xe1f0
   281fc:	movt	r3, #50130	; 0xc3d2
   28200:	str	r3, [sp, #28]
   28204:	mov	r3, #0
   28208:	str	r3, [sp, #4]
   2820c:	str	r3, [sp, #8]
   28210:	bl	27cc8 <crc32@@Base+0xe270>
   28214:	mov	r2, #20
   28218:	add	r1, sp, #96	; 0x60
   2821c:	add	r0, sp, #4
   28220:	bl	27cc8 <crc32@@Base+0xe270>
   28224:	mov	r1, r7
   28228:	add	r0, sp, #4
   2822c:	bl	27de4 <crc32@@Base+0xe38c>
   28230:	ldr	r2, [sp, #244]	; 0xf4
   28234:	ldr	r3, [r5]
   28238:	cmp	r2, r3
   2823c:	bne	28248 <crc32@@Base+0xe7f0>
   28240:	add	sp, sp, #248	; 0xf8
   28244:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28248:	bl	124b8 <__stack_chk_fail@plt>
   2824c:	mov	r0, #0
   28250:	bx	lr
   28254:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28258:	mov	r7, r0
   2825c:	ldr	r8, [r0, #24]
   28260:	sub	sp, sp, #116	; 0x74
   28264:	ldr	r4, [r7, #16]
   28268:	movw	lr, #12184	; 0x2f98
   2826c:	ldr	r6, [r7, #36]	; 0x24
   28270:	movt	lr, #17034	; 0x428a
   28274:	ldr	r0, [r0, #32]
   28278:	ror	r2, r8, #11
   2827c:	ldr	r9, [r7, #28]
   28280:	eor	r2, r2, r8, ror #6
   28284:	ldr	ip, [r7, #8]
   28288:	add	lr, r6, lr
   2828c:	ldr	fp, [r7, #12]
   28290:	eor	r2, r2, r8, ror #25
   28294:	str	r4, [sp, #76]	; 0x4c
   28298:	mov	r5, r0
   2829c:	add	r2, r2, lr
   282a0:	eor	r0, r9, r0
   282a4:	ldr	lr, [sp, #76]	; 0x4c
   282a8:	mov	sl, ip
   282ac:	str	r6, [sp, #104]	; 0x68
   282b0:	orr	r4, sl, fp
   282b4:	ldr	r6, [r1]
   282b8:	and	r0, r0, r8
   282bc:	ror	ip, ip, #13
   282c0:	str	r5, [sp, #88]	; 0x58
   282c4:	eor	r0, r0, r5
   282c8:	eor	ip, ip, sl, ror #2
   282cc:	and	r5, sl, fp
   282d0:	and	r4, r4, lr
   282d4:	ldr	lr, [r7, #20]
   282d8:	orr	r4, r4, r5
   282dc:	add	r2, r2, r0
   282e0:	eor	ip, ip, sl, ror #22
   282e4:	rev	r0, r6
   282e8:	add	ip, ip, r4
   282ec:	add	r2, r2, r0
   282f0:	ldr	r5, [r1, #4]
   282f4:	str	r0, [sp]
   282f8:	add	r0, ip, r2
   282fc:	str	lr, [sp, #92]	; 0x5c
   28300:	add	lr, lr, r2
   28304:	ldr	r2, [sp, #88]	; 0x58
   28308:	eor	r6, r8, r9
   2830c:	movw	r3, #17553	; 0x4491
   28310:	movt	r3, #28983	; 0x7137
   28314:	orr	r4, sl, r0
   28318:	and	r6, r6, lr
   2831c:	add	r3, r2, r3
   28320:	ror	ip, r0, #13
   28324:	rev	r2, r5
   28328:	ror	r5, lr, #11
   2832c:	str	r7, [sp, #108]	; 0x6c
   28330:	eor	r6, r6, r9
   28334:	and	r7, sl, r0
   28338:	add	r3, r3, r2
   2833c:	eor	r5, r5, lr, ror #6
   28340:	and	r4, r4, fp
   28344:	eor	ip, ip, r0, ror #2
   28348:	eor	r5, r5, lr, ror #25
   2834c:	eor	ip, ip, r0, ror #22
   28350:	add	r3, r6, r3
   28354:	orr	r4, r4, r7
   28358:	add	r3, r3, r5
   2835c:	add	r4, ip, r4
   28360:	str	r2, [sp, #8]
   28364:	add	r2, r4, r3
   28368:	ldr	r4, [r1, #8]
   2836c:	ldr	ip, [sp, #76]	; 0x4c
   28370:	rev	r5, r4
   28374:	str	fp, [sp, #84]	; 0x54
   28378:	add	r6, ip, r3
   2837c:	mov	fp, r8
   28380:	mov	r3, r5
   28384:	eor	r8, r8, lr
   28388:	orr	r5, r0, r2
   2838c:	ror	r4, r2, #13
   28390:	movw	ip, #64463	; 0xfbcf
   28394:	movt	ip, #46528	; 0xb5c0
   28398:	str	r9, [sp, #100]	; 0x64
   2839c:	and	r8, r8, r6
   283a0:	add	ip, r9, ip
   283a4:	ror	r7, r6, #11
   283a8:	and	r9, r0, r2
   283ac:	and	r5, r5, sl
   283b0:	eor	r4, r4, r2, ror #2
   283b4:	eor	r8, r8, fp
   283b8:	eor	r4, r4, r2, ror #22
   283bc:	add	ip, ip, r3
   283c0:	eor	r7, r7, r6, ror #6
   283c4:	orr	r5, r5, r9
   283c8:	eor	r7, r7, r6, ror #25
   283cc:	add	r5, r4, r5
   283d0:	add	ip, r8, ip
   283d4:	ldr	r4, [sp, #84]	; 0x54
   283d8:	add	ip, ip, r7
   283dc:	str	r3, [sp, #20]
   283e0:	add	r7, r4, ip
   283e4:	ldr	r4, [r1, #12]
   283e8:	add	r3, r5, ip
   283ec:	str	sl, [sp, #80]	; 0x50
   283f0:	rev	r5, r4
   283f4:	eor	sl, lr, r6
   283f8:	movw	ip, #56229	; 0xdba5
   283fc:	movt	ip, #59829	; 0xe9b5
   28400:	mov	r9, r5
   28404:	and	sl, sl, r7
   28408:	orr	r5, r2, r3
   2840c:	add	ip, fp, ip
   28410:	ror	r8, r7, #11
   28414:	ror	r4, r3, #13
   28418:	str	fp, [sp, #96]	; 0x60
   2841c:	eor	sl, sl, lr
   28420:	and	fp, r2, r3
   28424:	add	ip, ip, r9
   28428:	eor	r8, r8, r7, ror #6
   2842c:	and	r5, r5, r0
   28430:	eor	r4, r4, r3, ror #2
   28434:	eor	r8, r8, r7, ror #25
   28438:	orr	r5, r5, fp
   2843c:	eor	r4, r4, r3, ror #22
   28440:	ldr	fp, [r1, #16]
   28444:	add	ip, sl, ip
   28448:	ldr	sl, [sp, #80]	; 0x50
   2844c:	add	ip, ip, r8
   28450:	str	r9, [sp, #24]
   28454:	add	r9, r4, r5
   28458:	add	r9, r9, ip
   2845c:	add	r5, sl, ip
   28460:	rev	ip, fp
   28464:	movw	r8, #49755	; 0xc25b
   28468:	movt	r8, #14678	; 0x3956
   2846c:	ror	fp, r5, #11
   28470:	mov	sl, ip
   28474:	eor	ip, r6, r7
   28478:	add	r8, sl, r8
   2847c:	and	ip, ip, r5
   28480:	str	sl, [sp, #16]
   28484:	eor	ip, ip, r6
   28488:	orr	sl, r3, r9
   2848c:	ror	r4, r9, #13
   28490:	add	lr, r8, lr
   28494:	eor	fp, fp, r5, ror #6
   28498:	and	r8, r3, r9
   2849c:	eor	fp, fp, r5, ror #25
   284a0:	and	sl, sl, r2
   284a4:	eor	r4, r4, r9, ror #2
   284a8:	add	lr, ip, lr
   284ac:	eor	r4, r4, r9, ror #22
   284b0:	add	lr, lr, fp
   284b4:	orr	sl, sl, r8
   284b8:	ldr	fp, [r1, #20]
   284bc:	add	r8, r4, sl
   284c0:	add	ip, r0, lr
   284c4:	add	r8, r8, lr
   284c8:	rev	lr, fp
   284cc:	movw	r4, #4593	; 0x11f1
   284d0:	movt	r4, #23025	; 0x59f1
   284d4:	orr	sl, r9, r8
   284d8:	mov	fp, lr
   284dc:	eor	lr, r7, r5
   284e0:	str	fp, [sp, #56]	; 0x38
   284e4:	add	r4, fp, r4
   284e8:	and	lr, lr, ip
   284ec:	ror	fp, ip, #11
   284f0:	ror	r0, r8, #13
   284f4:	eor	lr, lr, r7
   284f8:	add	r6, r4, r6
   284fc:	eor	fp, fp, ip, ror #6
   28500:	and	r4, r9, r8
   28504:	and	sl, sl, r3
   28508:	eor	r0, r0, r8, ror #2
   2850c:	eor	fp, fp, ip, ror #25
   28510:	eor	r0, r0, r8, ror #22
   28514:	add	r6, lr, r6
   28518:	orr	sl, sl, r4
   2851c:	add	r6, r6, fp
   28520:	add	r4, r0, sl
   28524:	ldr	fp, [r1, #24]
   28528:	add	r4, r4, r6
   2852c:	add	r2, r2, r6
   28530:	rev	lr, fp
   28534:	eor	r0, r5, ip
   28538:	movw	r6, #33444	; 0x82a4
   2853c:	movt	r6, #37439	; 0x923f
   28540:	str	lr, [sp, #68]	; 0x44
   28544:	add	r6, lr, r6
   28548:	orr	sl, r8, r4
   2854c:	and	r0, r0, r2
   28550:	ror	fp, r2, #11
   28554:	ror	lr, r4, #13
   28558:	eor	r0, r0, r5
   2855c:	add	r7, r6, r7
   28560:	eor	fp, fp, r2, ror #6
   28564:	and	r6, r8, r4
   28568:	and	sl, sl, r9
   2856c:	eor	lr, lr, r4, ror #2
   28570:	eor	fp, fp, r2, ror #25
   28574:	eor	lr, lr, r4, ror #22
   28578:	add	r7, r0, r7
   2857c:	orr	sl, sl, r6
   28580:	add	r7, r7, fp
   28584:	add	r6, lr, sl
   28588:	ldr	fp, [r1, #28]
   2858c:	add	r0, r3, r7
   28590:	add	r6, r6, r7
   28594:	eor	r3, ip, r2
   28598:	rev	r7, fp
   2859c:	movw	lr, #24277	; 0x5ed5
   285a0:	movt	lr, #43804	; 0xab1c
   285a4:	str	r7, [sp, #28]
   285a8:	add	lr, r7, lr
   285ac:	orr	sl, r4, r6
   285b0:	and	r3, r3, r0
   285b4:	ror	fp, r0, #11
   285b8:	ror	r7, r6, #13
   285bc:	eor	r3, r3, ip
   285c0:	add	r5, lr, r5
   285c4:	eor	fp, fp, r0, ror #6
   285c8:	and	lr, r4, r6
   285cc:	and	sl, sl, r8
   285d0:	eor	r7, r7, r6, ror #2
   285d4:	eor	fp, fp, r0, ror #25
   285d8:	eor	r7, r7, r6, ror #22
   285dc:	add	r5, r3, r5
   285e0:	orr	sl, sl, lr
   285e4:	add	r5, r5, fp
   285e8:	ldr	r3, [r1, #32]
   285ec:	add	lr, r7, sl
   285f0:	add	lr, lr, r5
   285f4:	add	r9, r9, r5
   285f8:	movw	fp, #43672	; 0xaa98
   285fc:	rev	r5, r3
   28600:	movt	fp, #55303	; 0xd807
   28604:	eor	r3, r2, r0
   28608:	str	r5, [sp, #44]	; 0x2c
   2860c:	add	fp, r5, fp
   28610:	orr	r7, r6, lr
   28614:	and	r3, r3, r9
   28618:	ror	sl, r9, #11
   2861c:	ror	r5, lr, #13
   28620:	eor	r3, r3, r2
   28624:	add	ip, fp, ip
   28628:	eor	sl, sl, r9, ror #6
   2862c:	and	fp, r6, lr
   28630:	and	r7, r7, r4
   28634:	eor	r5, r5, lr, ror #2
   28638:	eor	sl, sl, r9, ror #25
   2863c:	orr	r7, r7, fp
   28640:	add	ip, r3, ip
   28644:	eor	r5, r5, lr, ror #22
   28648:	add	ip, ip, sl
   2864c:	add	r5, r5, r7
   28650:	ldr	sl, [r1, #36]	; 0x24
   28654:	add	r8, r8, ip
   28658:	add	ip, r5, ip
   2865c:	eor	r3, r0, r9
   28660:	rev	r5, sl
   28664:	movw	fp, #23297	; 0x5b01
   28668:	movt	fp, #4739	; 0x1283
   2866c:	str	r5, [sp, #32]
   28670:	add	fp, r5, fp
   28674:	orr	r7, lr, ip
   28678:	and	r3, r3, r8
   2867c:	ror	sl, r8, #11
   28680:	ror	r5, ip, #13
   28684:	eor	r3, r3, r0
   28688:	add	r2, fp, r2
   2868c:	eor	sl, sl, r8, ror #6
   28690:	and	fp, lr, ip
   28694:	and	r7, r7, r6
   28698:	eor	r5, r5, ip, ror #2
   2869c:	eor	sl, sl, r8, ror #25
   286a0:	orr	r7, r7, fp
   286a4:	add	r2, r3, r2
   286a8:	eor	r5, r5, ip, ror #22
   286ac:	add	r2, r2, sl
   286b0:	add	r5, r5, r7
   286b4:	ldr	sl, [r1, #40]	; 0x28
   286b8:	add	r4, r4, r2
   286bc:	add	r2, r5, r2
   286c0:	rev	r7, sl
   286c4:	eor	r5, r9, r8
   286c8:	movw	r3, #34238	; 0x85be
   286cc:	movt	r3, #9265	; 0x2431
   286d0:	str	r7, [sp, #60]	; 0x3c
   286d4:	orr	sl, ip, r2
   286d8:	add	r3, r7, r3
   286dc:	and	r5, r5, r4
   286e0:	ror	fp, r4, #11
   286e4:	ror	r7, r2, #13
   286e8:	eor	r5, r5, r9
   286ec:	add	r3, r3, r0
   286f0:	eor	fp, fp, r4, ror #6
   286f4:	and	r0, ip, r2
   286f8:	and	sl, sl, lr
   286fc:	eor	r7, r7, r2, ror #2
   28700:	eor	fp, fp, r4, ror #25
   28704:	eor	r7, r7, r2, ror #22
   28708:	add	r3, r5, r3
   2870c:	orr	sl, sl, r0
   28710:	ldr	r5, [r1, #44]	; 0x2c
   28714:	add	r3, r3, fp
   28718:	add	r0, r7, sl
   2871c:	add	r6, r6, r3
   28720:	add	r0, r0, r3
   28724:	rev	r3, r5
   28728:	movw	fp, #32195	; 0x7dc3
   2872c:	movt	fp, #21772	; 0x550c
   28730:	mov	sl, r3
   28734:	eor	r3, r8, r4
   28738:	str	sl, [sp, #36]	; 0x24
   2873c:	add	fp, sl, fp
   28740:	and	r3, r3, r6
   28744:	ror	sl, r6, #11
   28748:	orr	r7, r2, r0
   2874c:	eor	r3, r3, r8
   28750:	ror	r5, r0, #13
   28754:	add	r9, fp, r9
   28758:	eor	sl, sl, r6, ror #6
   2875c:	and	fp, r2, r0
   28760:	eor	sl, sl, r6, ror #25
   28764:	and	r7, r7, ip
   28768:	eor	r5, r5, r0, ror #2
   2876c:	add	r9, r3, r9
   28770:	add	r9, r9, sl
   28774:	ldr	r3, [r1, #48]	; 0x30
   28778:	eor	r5, r5, r0, ror #22
   2877c:	orr	r7, r7, fp
   28780:	add	lr, lr, r9
   28784:	add	fp, r5, r7
   28788:	add	fp, fp, r9
   2878c:	eor	r5, r4, r6
   28790:	rev	r9, r3
   28794:	movw	sl, #23924	; 0x5d74
   28798:	movt	sl, #29374	; 0x72be
   2879c:	and	r5, r5, lr
   287a0:	add	sl, r9, sl
   287a4:	ror	r7, lr, #11
   287a8:	str	r9, [sp, #64]	; 0x40
   287ac:	eor	r5, r5, r4
   287b0:	orr	r9, r0, fp
   287b4:	ror	r3, fp, #13
   287b8:	add	r8, sl, r8
   287bc:	eor	r7, r7, lr, ror #6
   287c0:	and	sl, r0, fp
   287c4:	eor	r7, r7, lr, ror #25
   287c8:	and	r9, r9, r2
   287cc:	eor	r3, r3, fp, ror #2
   287d0:	add	r8, r5, r8
   287d4:	eor	r3, r3, fp, ror #22
   287d8:	add	r8, r8, r7
   287dc:	ldr	r5, [r1, #52]	; 0x34
   287e0:	orr	r9, r9, sl
   287e4:	add	ip, ip, r8
   287e8:	add	sl, r3, r9
   287ec:	eor	r3, r6, lr
   287f0:	add	sl, sl, r8
   287f4:	movw	r9, #45566	; 0xb1fe
   287f8:	rev	r8, r5
   287fc:	movt	r9, #32990	; 0x80de
   28800:	add	r9, r8, r9
   28804:	and	r3, r3, ip
   28808:	ror	r7, ip, #11
   2880c:	str	r8, [sp, #40]	; 0x28
   28810:	eor	r3, r3, r6
   28814:	orr	r8, fp, sl
   28818:	add	r4, r9, r4
   2881c:	ror	r5, sl, #13
   28820:	eor	r7, r7, ip, ror #6
   28824:	add	r4, r3, r4
   28828:	and	r8, r8, r0
   2882c:	and	r3, fp, sl
   28830:	eor	r5, r5, sl, ror #2
   28834:	eor	r7, r7, ip, ror #25
   28838:	add	r7, r4, r7
   2883c:	orr	r8, r8, r3
   28840:	ldr	r4, [r1, #56]	; 0x38
   28844:	eor	r5, r5, sl, ror #22
   28848:	add	r2, r2, r7
   2884c:	add	r5, r5, r8
   28850:	add	r9, r5, r7
   28854:	rev	r4, r4
   28858:	eor	r7, lr, ip
   2885c:	movw	r3, #1703	; 0x6a7
   28860:	movt	r3, #39900	; 0x9bdc
   28864:	and	r7, r7, r2
   28868:	add	r3, r4, r3
   2886c:	ror	r8, r2, #11
   28870:	add	r3, r3, r6
   28874:	eor	r8, r8, r2, ror #6
   28878:	eor	r6, r7, lr
   2887c:	orr	r5, sl, r9
   28880:	eor	r8, r8, r2, ror #25
   28884:	add	r6, r6, r3
   28888:	ror	r3, r9, #13
   2888c:	add	r6, r6, r8
   28890:	and	r5, r5, fp
   28894:	ldr	r1, [r1, #60]	; 0x3c
   28898:	and	r8, sl, r9
   2889c:	eor	r3, r3, r9, ror #2
   288a0:	eor	r3, r3, r9, ror #22
   288a4:	orr	r8, r5, r8
   288a8:	add	r0, r0, r6
   288ac:	rev	r5, r1
   288b0:	add	r8, r3, r8
   288b4:	movw	r1, #61812	; 0xf174
   288b8:	eor	r3, ip, r2
   288bc:	movt	r1, #49563	; 0xc19b
   288c0:	add	r8, r8, r6
   288c4:	add	r1, r5, r1
   288c8:	and	r3, r3, r0
   288cc:	add	r1, r1, lr
   288d0:	eor	r3, r3, ip
   288d4:	str	r4, [sp, #48]	; 0x30
   288d8:	add	r3, r3, r1
   288dc:	ldr	r4, [sp, #32]
   288e0:	ldr	r1, [sp]
   288e4:	ror	r6, r0, #11
   288e8:	ror	r7, r8, #13
   288ec:	orr	lr, r9, r8
   288f0:	eor	r6, r6, r0, ror #6
   288f4:	eor	r7, r7, r8, ror #2
   288f8:	str	r5, [sp, #4]
   288fc:	and	lr, lr, sl
   28900:	eor	r5, r6, r0, ror #25
   28904:	add	r6, r1, r4
   28908:	eor	r1, r7, r8, ror #22
   2890c:	and	r7, r9, r8
   28910:	orr	r7, lr, r7
   28914:	ldr	lr, [sp, #48]	; 0x30
   28918:	str	r0, [sp, #12]
   2891c:	add	r5, r3, r5
   28920:	ldr	r0, [sp, #8]
   28924:	add	r7, r1, r7
   28928:	ror	r3, lr, #19
   2892c:	add	fp, fp, r5
   28930:	eor	r3, r3, lr, ror #17
   28934:	add	r7, r7, r5
   28938:	ror	r1, r0, #18
   2893c:	eor	r3, r3, lr, lsr #10
   28940:	eor	r1, r1, r0, ror #7
   28944:	add	r3, r3, r6
   28948:	eor	lr, r1, r0, lsr #3
   2894c:	ldr	r6, [sp, #12]
   28950:	add	r3, r3, lr
   28954:	str	r3, [sp]
   28958:	ldr	lr, [sp]
   2895c:	eor	r3, r2, r6
   28960:	movw	r1, #27073	; 0x69c1
   28964:	movt	r1, #58523	; 0xe49b
   28968:	add	r1, lr, r1
   2896c:	and	r3, r3, fp
   28970:	ror	r5, fp, #11
   28974:	ldr	lr, [sp, #4]
   28978:	add	r1, r1, ip
   2897c:	eor	r3, r3, r2
   28980:	eor	r5, r5, fp, ror #6
   28984:	orr	ip, r8, r7
   28988:	eor	r5, r5, fp, ror #25
   2898c:	add	r3, r3, r1
   28990:	ror	r6, r7, #13
   28994:	ldr	r1, [sp, #60]	; 0x3c
   28998:	ldr	r4, [sp, #20]
   2899c:	add	r3, r3, r5
   289a0:	and	ip, ip, r9
   289a4:	and	r5, r8, r7
   289a8:	eor	r6, r6, r7, ror #2
   289ac:	orr	ip, ip, r5
   289b0:	eor	r6, r6, r7, ror #22
   289b4:	ror	r5, lr, #19
   289b8:	add	r6, r6, ip
   289bc:	eor	r5, r5, lr, ror #17
   289c0:	ror	ip, r4, #18
   289c4:	add	r1, r0, r1
   289c8:	eor	r5, r5, lr, lsr #10
   289cc:	eor	ip, ip, r4, ror #7
   289d0:	add	lr, r6, r3
   289d4:	ldr	r6, [sp, #12]
   289d8:	add	sl, sl, r3
   289dc:	add	r5, r5, r1
   289e0:	eor	ip, ip, r4, lsr #3
   289e4:	eor	r3, r6, fp
   289e8:	add	ip, r5, ip
   289ec:	movw	r1, #18310	; 0x4786
   289f0:	movt	r1, #61374	; 0xefbe
   289f4:	and	r3, r3, sl
   289f8:	add	r1, ip, r1
   289fc:	ror	r5, sl, #11
   28a00:	add	r1, r1, r2
   28a04:	eor	r3, r3, r6
   28a08:	eor	r5, r5, sl, ror #6
   28a0c:	orr	r2, r7, lr
   28a10:	eor	r5, r5, sl, ror #25
   28a14:	add	r3, r3, r1
   28a18:	ror	r1, lr, #13
   28a1c:	add	r3, r3, r5
   28a20:	and	r2, r2, r8
   28a24:	and	r5, r7, lr
   28a28:	eor	r1, r1, lr, ror #2
   28a2c:	ldr	r6, [sp, #24]
   28a30:	ldr	r0, [sp, #36]	; 0x24
   28a34:	eor	r1, r1, lr, ror #22
   28a38:	orr	r5, r2, r5
   28a3c:	str	ip, [sp, #52]	; 0x34
   28a40:	add	r5, r1, r5
   28a44:	ldr	r1, [sp]
   28a48:	add	ip, r4, r0
   28a4c:	ldr	r0, [sp]
   28a50:	ror	r2, r6, #18
   28a54:	add	r9, r9, r3
   28a58:	eor	r2, r2, r6, ror #7
   28a5c:	ror	r1, r1, #19
   28a60:	eor	r2, r2, r6, lsr #3
   28a64:	eor	r1, r1, r0, ror #17
   28a68:	add	r2, r2, ip
   28a6c:	eor	r1, r1, r0, lsr #10
   28a70:	add	r5, r5, r3
   28a74:	add	r1, r2, r1
   28a78:	ldr	r0, [sp, #12]
   28a7c:	eor	r3, fp, sl
   28a80:	movw	r2, #40390	; 0x9dc6
   28a84:	movt	r2, #4033	; 0xfc1
   28a88:	str	r1, [sp, #8]
   28a8c:	add	r2, r1, r2
   28a90:	and	r3, r3, r9
   28a94:	ror	r1, r9, #11
   28a98:	add	r0, r2, r0
   28a9c:	eor	r1, r1, r9, ror #6
   28aa0:	eor	r3, r3, fp
   28aa4:	ldr	r4, [sp, #16]
   28aa8:	add	r3, r3, r0
   28aac:	eor	r0, r1, r9, ror #25
   28ab0:	ldr	r1, [sp, #64]	; 0x40
   28ab4:	orr	ip, lr, r5
   28ab8:	ror	r2, r5, #13
   28abc:	add	r3, r3, r0
   28ac0:	add	r1, r6, r1
   28ac4:	ldr	r6, [sp, #52]	; 0x34
   28ac8:	and	r0, lr, r5
   28acc:	and	ip, ip, r7
   28ad0:	eor	r2, r2, r5, ror #2
   28ad4:	orr	ip, ip, r0
   28ad8:	eor	r2, r2, r5, ror #22
   28adc:	ror	r0, r4, #18
   28ae0:	eor	r0, r0, r4, ror #7
   28ae4:	add	r2, r2, ip
   28ae8:	ror	ip, r6, #19
   28aec:	eor	r0, r0, r4, lsr #3
   28af0:	eor	ip, ip, r6, ror #17
   28af4:	add	r0, r0, r1
   28af8:	eor	r1, ip, r6, lsr #10
   28afc:	add	r8, r8, r3
   28b00:	add	r1, r0, r1
   28b04:	movw	ip, #41420	; 0xa1cc
   28b08:	movt	ip, #9228	; 0x240c
   28b0c:	add	r2, r2, r3
   28b10:	mov	r0, r1
   28b14:	eor	r1, sl, r9
   28b18:	add	ip, r0, ip
   28b1c:	and	r1, r1, r8
   28b20:	add	fp, ip, fp
   28b24:	eor	r1, r1, sl
   28b28:	ldr	r4, [sp, #16]
   28b2c:	ror	r3, r8, #11
   28b30:	add	r1, r1, fp
   28b34:	ldr	fp, [sp, #40]	; 0x28
   28b38:	ldr	r6, [sp, #56]	; 0x38
   28b3c:	eor	r3, r3, r8, ror #6
   28b40:	str	r0, [sp, #12]
   28b44:	eor	r3, r3, r8, ror #25
   28b48:	orr	r0, r5, r2
   28b4c:	add	fp, r4, fp
   28b50:	ror	ip, r2, #13
   28b54:	ldr	r4, [sp, #8]
   28b58:	add	r1, r1, r3
   28b5c:	and	r0, r0, lr
   28b60:	and	r3, r5, r2
   28b64:	eor	ip, ip, r2, ror #2
   28b68:	eor	ip, ip, r2, ror #22
   28b6c:	orr	r3, r0, r3
   28b70:	ror	r0, r6, #18
   28b74:	add	r3, ip, r3
   28b78:	eor	r0, r0, r6, ror #7
   28b7c:	ror	ip, r4, #19
   28b80:	eor	r0, r0, r6, lsr #3
   28b84:	eor	ip, ip, r4, ror #17
   28b88:	add	r0, r0, fp
   28b8c:	eor	ip, ip, r4, lsr #10
   28b90:	add	ip, r0, ip
   28b94:	add	r7, r7, r1
   28b98:	add	r3, r3, r1
   28b9c:	eor	r1, r9, r8
   28ba0:	mov	fp, ip
   28ba4:	movw	ip, #11375	; 0x2c6f
   28ba8:	movt	ip, #11753	; 0x2de9
   28bac:	str	fp, [sp, #16]
   28bb0:	ldr	r4, [sp, #48]	; 0x30
   28bb4:	add	ip, fp, ip
   28bb8:	and	r1, r1, r7
   28bbc:	ror	fp, r7, #11
   28bc0:	add	sl, ip, sl
   28bc4:	eor	fp, fp, r7, ror #6
   28bc8:	eor	r1, r1, r9
   28bcc:	orr	r0, r2, r3
   28bd0:	add	r1, r1, sl
   28bd4:	eor	sl, fp, r7, ror #25
   28bd8:	add	fp, r6, r4
   28bdc:	ldr	r6, [sp, #68]	; 0x44
   28be0:	ldr	r4, [sp, #12]
   28be4:	ror	ip, r3, #13
   28be8:	add	r1, r1, sl
   28bec:	and	r0, r0, r5
   28bf0:	and	sl, r2, r3
   28bf4:	eor	ip, ip, r3, ror #2
   28bf8:	orr	sl, r0, sl
   28bfc:	eor	ip, ip, r3, ror #22
   28c00:	ror	r0, r6, #18
   28c04:	add	ip, ip, sl
   28c08:	eor	r0, r0, r6, ror #7
   28c0c:	ror	sl, r4, #19
   28c10:	eor	sl, sl, r4, ror #17
   28c14:	eor	r0, r0, r6, lsr #3
   28c18:	add	lr, lr, r1
   28c1c:	add	r0, r0, fp
   28c20:	eor	fp, sl, r4, lsr #10
   28c24:	add	ip, ip, r1
   28c28:	add	r0, r0, fp
   28c2c:	eor	r1, r8, r7
   28c30:	ldr	fp, [sp, #4]
   28c34:	movw	sl, #33962	; 0x84aa
   28c38:	movt	sl, #19060	; 0x4a74
   28c3c:	str	r0, [sp, #20]
   28c40:	add	sl, r0, sl
   28c44:	and	r1, r1, lr
   28c48:	ror	r0, lr, #11
   28c4c:	add	sl, sl, r9
   28c50:	add	fp, r6, fp
   28c54:	eor	r1, r1, r8
   28c58:	ldr	r6, [sp, #28]
   28c5c:	eor	r0, r0, lr, ror #6
   28c60:	ldr	r4, [sp, #16]
   28c64:	orr	r9, r3, ip
   28c68:	eor	r0, r0, lr, ror #25
   28c6c:	add	r1, r1, sl
   28c70:	ror	sl, ip, #13
   28c74:	add	r1, r1, r0
   28c78:	and	r9, r9, r2
   28c7c:	and	r0, r3, ip
   28c80:	eor	sl, sl, ip, ror #2
   28c84:	orr	r0, r9, r0
   28c88:	eor	sl, sl, ip, ror #22
   28c8c:	ror	r9, r6, #18
   28c90:	eor	r9, r9, r6, ror #7
   28c94:	add	r0, sl, r0
   28c98:	ror	sl, r4, #19
   28c9c:	eor	r9, r9, r6, lsr #3
   28ca0:	eor	sl, sl, r4, ror #17
   28ca4:	add	r5, r5, r1
   28ca8:	eor	sl, sl, r4, lsr #10
   28cac:	add	r9, r9, fp
   28cb0:	add	r0, r0, r1
   28cb4:	ldr	r6, [sp, #44]	; 0x2c
   28cb8:	add	r9, r9, sl
   28cbc:	eor	r1, r7, lr
   28cc0:	movw	sl, #43484	; 0xa9dc
   28cc4:	movt	sl, #23728	; 0x5cb0
   28cc8:	and	r1, r1, r5
   28ccc:	add	sl, r9, sl
   28cd0:	ror	fp, r5, #11
   28cd4:	add	sl, sl, r8
   28cd8:	eor	fp, fp, r5, ror #6
   28cdc:	eor	r8, r1, r7
   28ce0:	ldr	r4, [sp, #20]
   28ce4:	eor	fp, fp, r5, ror #25
   28ce8:	str	r9, [sp, #24]
   28cec:	add	r8, r8, sl
   28cf0:	orr	r9, ip, r0
   28cf4:	ror	r1, r0, #13
   28cf8:	ror	sl, r6, #18
   28cfc:	add	r8, r8, fp
   28d00:	and	r9, r9, r3
   28d04:	and	fp, ip, r0
   28d08:	eor	r1, r1, r0, ror #2
   28d0c:	eor	sl, sl, r6, ror #7
   28d10:	orr	r9, r9, fp
   28d14:	eor	r1, r1, r0, ror #22
   28d18:	eor	sl, sl, r6, lsr #3
   28d1c:	ldr	r6, [sp, #28]
   28d20:	ror	fp, r4, #19
   28d24:	add	r1, r1, r9
   28d28:	add	r9, r2, r8
   28d2c:	ldr	r2, [sp]
   28d30:	add	sl, sl, r6
   28d34:	eor	fp, fp, r4, ror #17
   28d38:	eor	fp, fp, r4, lsr #10
   28d3c:	add	sl, sl, r2
   28d40:	add	r1, r1, r8
   28d44:	ldr	r4, [sp, #32]
   28d48:	add	r2, sl, fp
   28d4c:	movw	r8, #35034	; 0x88da
   28d50:	eor	fp, lr, r5
   28d54:	movt	r8, #30457	; 0x76f9
   28d58:	add	r8, r2, r8
   28d5c:	and	fp, fp, r9
   28d60:	add	sl, r8, r7
   28d64:	eor	r7, fp, lr
   28d68:	add	r7, r7, sl
   28d6c:	ror	sl, r4, #18
   28d70:	str	r2, [sp, #28]
   28d74:	eor	sl, sl, r4, ror #7
   28d78:	ror	r2, r9, #11
   28d7c:	ldr	r6, [sp, #44]	; 0x2c
   28d80:	eor	r2, r2, r9, ror #6
   28d84:	eor	sl, sl, r4, lsr #3
   28d88:	ldr	r4, [sp, #24]
   28d8c:	orr	r8, r0, r1
   28d90:	eor	r2, r2, r9, ror #25
   28d94:	ror	fp, r1, #13
   28d98:	add	r7, r7, r2
   28d9c:	and	r8, r8, ip
   28da0:	and	r2, r0, r1
   28da4:	eor	fp, fp, r1, ror #2
   28da8:	eor	fp, fp, r1, ror #22
   28dac:	orr	r2, r8, r2
   28db0:	ror	r8, r4, #19
   28db4:	add	r2, fp, r2
   28db8:	eor	fp, r8, r4, ror #17
   28dbc:	add	sl, sl, r6
   28dc0:	eor	fp, fp, r4, lsr #10
   28dc4:	ldr	r4, [sp, #52]	; 0x34
   28dc8:	add	r8, r3, r7
   28dcc:	add	r2, r2, r7
   28dd0:	add	sl, sl, r4
   28dd4:	eor	r3, r5, r9
   28dd8:	ldr	r4, [sp, #60]	; 0x3c
   28ddc:	add	r7, sl, fp
   28de0:	movw	sl, #20818	; 0x5152
   28de4:	movt	sl, #38974	; 0x983e
   28de8:	and	r3, r3, r8
   28dec:	add	sl, r7, sl
   28df0:	add	sl, sl, lr
   28df4:	eor	r6, r3, r5
   28df8:	ror	fp, r8, #11
   28dfc:	add	r6, r6, sl
   28e00:	eor	fp, fp, r8, ror #6
   28e04:	ror	sl, r4, #18
   28e08:	str	r7, [sp, #56]	; 0x38
   28e0c:	eor	fp, fp, r8, ror #25
   28e10:	orr	r7, r1, r2
   28e14:	eor	sl, sl, r4, ror #7
   28e18:	add	r6, r6, fp
   28e1c:	mov	lr, r4
   28e20:	and	fp, r1, r2
   28e24:	and	r7, r7, r0
   28e28:	ror	r3, r2, #13
   28e2c:	eor	sl, sl, r4, lsr #3
   28e30:	ldr	r4, [sp, #28]
   28e34:	orr	r7, r7, fp
   28e38:	eor	r3, r3, r2, ror #2
   28e3c:	ldr	fp, [sp, #32]
   28e40:	eor	r3, r3, r2, ror #22
   28e44:	add	sl, sl, fp
   28e48:	add	r3, r3, r7
   28e4c:	ror	fp, r4, #19
   28e50:	add	r7, ip, r6
   28e54:	ldr	ip, [sp, #8]
   28e58:	eor	fp, fp, r4, ror #17
   28e5c:	eor	fp, fp, r4, lsr #10
   28e60:	add	r3, r3, r6
   28e64:	add	sl, sl, ip
   28e68:	ldr	r4, [sp, #36]	; 0x24
   28e6c:	add	ip, sl, fp
   28e70:	movw	r6, #50797	; 0xc66d
   28e74:	eor	fp, r9, r8
   28e78:	movt	r6, #43057	; 0xa831
   28e7c:	and	fp, fp, r7
   28e80:	add	r6, ip, r6
   28e84:	add	r6, r6, r5
   28e88:	eor	r5, fp, r9
   28e8c:	str	ip, [sp, #32]
   28e90:	add	r5, r5, r6
   28e94:	ror	ip, r7, #11
   28e98:	ror	r6, r4, #18
   28e9c:	eor	ip, ip, r7, ror #6
   28ea0:	eor	r6, r6, r4, ror #7
   28ea4:	orr	sl, r2, r3
   28ea8:	eor	ip, ip, r7, ror #25
   28eac:	ror	fp, r3, #13
   28eb0:	eor	r6, r6, r4, lsr #3
   28eb4:	ldr	r4, [sp, #56]	; 0x38
   28eb8:	add	r5, r5, ip
   28ebc:	and	sl, sl, r1
   28ec0:	and	ip, r2, r3
   28ec4:	eor	fp, fp, r3, ror #2
   28ec8:	orr	ip, sl, ip
   28ecc:	eor	fp, fp, r3, ror #22
   28ed0:	ror	sl, r4, #19
   28ed4:	add	ip, fp, ip
   28ed8:	eor	fp, sl, r4, ror #17
   28edc:	add	ip, ip, r5
   28ee0:	add	sl, r0, r5
   28ee4:	ldr	r5, [sp, #12]
   28ee8:	add	r6, r6, lr
   28eec:	eor	fp, fp, r4, lsr #10
   28ef0:	eor	r0, r8, r7
   28ef4:	add	r6, r6, r5
   28ef8:	movw	r5, #10184	; 0x27c8
   28efc:	add	r6, r6, fp
   28f00:	movt	r5, #45059	; 0xb003
   28f04:	and	r0, r0, sl
   28f08:	add	r5, r6, r5
   28f0c:	add	r5, r5, r9
   28f10:	eor	r9, r0, r8
   28f14:	ror	r0, ip, #13
   28f18:	mov	r4, r6
   28f1c:	mov	lr, ip
   28f20:	orr	r6, r3, ip
   28f24:	eor	r0, r0, ip, ror #2
   28f28:	ldr	ip, [sp, #64]	; 0x40
   28f2c:	add	r9, r9, r5
   28f30:	str	lr, [sp, #44]	; 0x2c
   28f34:	ror	fp, sl, #11
   28f38:	eor	r0, r0, lr, ror #22
   28f3c:	ror	r5, ip, #18
   28f40:	mov	lr, ip
   28f44:	eor	r5, r5, ip, ror #7
   28f48:	eor	fp, fp, sl, ror #6
   28f4c:	eor	r5, r5, ip, lsr #3
   28f50:	ldr	ip, [sp, #44]	; 0x2c
   28f54:	eor	fp, fp, sl, ror #25
   28f58:	and	r6, r6, r2
   28f5c:	add	r9, r9, fp
   28f60:	and	fp, r3, ip
   28f64:	ldr	ip, [sp, #32]
   28f68:	orr	r6, r6, fp
   28f6c:	ldr	fp, [sp, #36]	; 0x24
   28f70:	add	r0, r0, r6
   28f74:	add	r6, r1, r9
   28f78:	ldr	r1, [sp, #16]
   28f7c:	add	r5, r5, fp
   28f80:	ror	fp, ip, #19
   28f84:	eor	fp, fp, ip, ror #17
   28f88:	add	r5, r5, r1
   28f8c:	eor	fp, fp, ip, lsr #10
   28f90:	add	r0, r0, r9
   28f94:	add	r1, r5, fp
   28f98:	movw	r9, #32711	; 0x7fc7
   28f9c:	eor	fp, r7, sl
   28fa0:	movt	r9, #48985	; 0xbf59
   28fa4:	str	r1, [sp, #36]	; 0x24
   28fa8:	add	r9, r1, r9
   28fac:	and	fp, fp, r6
   28fb0:	ror	r1, r6, #11
   28fb4:	add	r5, r9, r8
   28fb8:	ldr	ip, [sp, #44]	; 0x2c
   28fbc:	eor	r8, fp, r7
   28fc0:	eor	r1, r1, r6, ror #6
   28fc4:	eor	r1, r1, r6, ror #25
   28fc8:	add	r8, r8, r5
   28fcc:	add	r8, r8, r1
   28fd0:	orr	r9, ip, r0
   28fd4:	ldr	r1, [sp, #44]	; 0x2c
   28fd8:	ror	fp, r0, #13
   28fdc:	ldr	ip, [sp, #40]	; 0x28
   28fe0:	and	r9, r9, r3
   28fe4:	eor	fp, fp, r0, ror #2
   28fe8:	and	r1, r1, r0
   28fec:	eor	fp, fp, r0, ror #22
   28ff0:	orr	r1, r9, r1
   28ff4:	ror	r5, ip, #18
   28ff8:	ror	r9, r4, #19
   28ffc:	eor	r5, r5, ip, ror #7
   29000:	add	r1, fp, r1
   29004:	add	r1, r1, r8
   29008:	eor	fp, r9, r4, ror #17
   2900c:	eor	r5, r5, ip, lsr #3
   29010:	add	r9, r2, r8
   29014:	ldr	r8, [sp, #20]
   29018:	add	r5, r5, lr
   2901c:	eor	fp, fp, r4, lsr #10
   29020:	str	r4, [sp, #60]	; 0x3c
   29024:	add	r5, r5, r8
   29028:	ldr	lr, [sp, #48]	; 0x30
   2902c:	add	r2, r5, fp
   29030:	movw	r5, #3059	; 0xbf3
   29034:	movt	r5, #50912	; 0xc6e0
   29038:	ror	fp, r9, #11
   2903c:	mov	r4, r2
   29040:	eor	r2, sl, r6
   29044:	and	r2, r2, r9
   29048:	add	r5, r4, r5
   2904c:	add	r5, r5, r7
   29050:	eor	fp, fp, r9, ror #6
   29054:	eor	r7, r2, sl
   29058:	ldr	r2, [sp, #44]	; 0x2c
   2905c:	orr	r8, r0, r1
   29060:	eor	fp, fp, r9, ror #25
   29064:	add	r7, r7, r5
   29068:	ldr	ip, [sp, #36]	; 0x24
   2906c:	add	r7, r7, fp
   29070:	and	r8, r8, r2
   29074:	and	fp, r0, r1
   29078:	ror	r5, lr, #18
   2907c:	orr	r8, r8, fp
   29080:	eor	r5, r5, lr, ror #7
   29084:	ldr	fp, [sp, #40]	; 0x28
   29088:	eor	r5, r5, lr, lsr #3
   2908c:	ror	r2, r1, #13
   29090:	add	r5, r5, fp
   29094:	ror	fp, ip, #19
   29098:	eor	fp, fp, ip, ror #17
   2909c:	eor	r2, r2, r1, ror #2
   290a0:	eor	fp, fp, ip, lsr #10
   290a4:	ldr	ip, [sp, #24]
   290a8:	eor	r2, r2, r1, ror #22
   290ac:	add	r5, r5, ip
   290b0:	add	r2, r2, r8
   290b4:	add	r5, r5, fp
   290b8:	add	r8, r3, r7
   290bc:	add	r2, r2, r7
   290c0:	movw	r3, #37191	; 0x9147
   290c4:	mov	r7, r5
   290c8:	movt	r3, #54695	; 0xd5a7
   290cc:	eor	r5, r6, r9
   290d0:	add	r3, r7, r3
   290d4:	and	r5, r5, r8
   290d8:	ror	fp, r8, #11
   290dc:	add	sl, r3, sl
   290e0:	eor	r5, r5, r6
   290e4:	eor	fp, fp, r8, ror #6
   290e8:	ldr	ip, [sp, #4]
   290ec:	orr	r3, r1, r2
   290f0:	add	r5, r5, sl
   290f4:	eor	fp, fp, r8, ror #25
   290f8:	ror	sl, r2, #13
   290fc:	add	fp, r5, fp
   29100:	and	r3, r3, r0
   29104:	and	r5, r1, r2
   29108:	eor	sl, sl, r2, ror #2
   2910c:	orr	r3, r3, r5
   29110:	eor	sl, sl, r2, ror #22
   29114:	mov	r5, r4
   29118:	str	r7, [sp, #40]	; 0x28
   2911c:	add	sl, sl, r3
   29120:	ror	r7, ip, #18
   29124:	ldr	r3, [sp, #44]	; 0x2c
   29128:	ror	r4, r4, #19
   2912c:	eor	r4, r4, r5, ror #17
   29130:	eor	r7, r7, ip, ror #7
   29134:	str	r5, [sp, #64]	; 0x40
   29138:	eor	r7, r7, ip, lsr #3
   2913c:	add	ip, r3, fp
   29140:	eor	r3, r4, r5, lsr #10
   29144:	ldr	r4, [sp, #28]
   29148:	add	r7, r7, lr
   2914c:	add	fp, sl, fp
   29150:	ldr	lr, [sp]
   29154:	add	r7, r7, r4
   29158:	movw	r4, #25425	; 0x6351
   2915c:	add	r5, r7, r3
   29160:	movt	r4, #1738	; 0x6ca
   29164:	eor	r3, r9, r8
   29168:	str	r5, [sp, #44]	; 0x2c
   2916c:	add	r4, r5, r4
   29170:	and	r3, r3, ip
   29174:	ror	r5, ip, #11
   29178:	add	r6, r4, r6
   2917c:	eor	r3, r3, r9
   29180:	eor	r5, r5, ip, ror #6
   29184:	orr	r7, r2, fp
   29188:	eor	r5, r5, ip, ror #25
   2918c:	add	r3, r3, r6
   29190:	ror	r6, fp, #13
   29194:	ldr	sl, [sp, #40]	; 0x28
   29198:	add	r3, r3, r5
   2919c:	and	r7, r7, r1
   291a0:	and	r5, r2, fp
   291a4:	eor	r6, r6, fp, ror #2
   291a8:	ror	r4, lr, #18
   291ac:	orr	r7, r7, r5
   291b0:	eor	r4, r4, lr, ror #7
   291b4:	ldr	r5, [sp, #4]
   291b8:	eor	r6, r6, fp, ror #22
   291bc:	eor	r4, r4, lr, lsr #3
   291c0:	add	r6, r6, r7
   291c4:	add	r6, r6, r3
   291c8:	add	r0, r0, r3
   291cc:	add	r4, r4, r5
   291d0:	ldr	r3, [sp, #56]	; 0x38
   291d4:	ror	r5, sl, #19
   291d8:	movw	r7, #10599	; 0x2967
   291dc:	eor	r5, r5, sl, ror #17
   291e0:	add	r4, r4, r3
   291e4:	eor	r5, r5, sl, lsr #10
   291e8:	eor	r3, r8, ip
   291ec:	add	r5, r4, r5
   291f0:	movt	r7, #5161	; 0x1429
   291f4:	str	r5, [sp, #72]	; 0x48
   291f8:	add	r7, r5, r7
   291fc:	and	r3, r3, r0
   29200:	ror	r5, r0, #11
   29204:	ldr	sl, [sp, #52]	; 0x34
   29208:	eor	r3, r3, r8
   2920c:	add	r9, r7, r9
   29210:	eor	r5, r5, r0, ror #6
   29214:	orr	r4, fp, r6
   29218:	add	r9, r3, r9
   2921c:	eor	r5, r5, r0, ror #25
   29220:	and	r4, r4, r2
   29224:	add	r5, r9, r5
   29228:	ror	r7, r6, #13
   2922c:	and	r9, fp, r6
   29230:	ror	r3, sl, #18
   29234:	orr	r4, r4, r9
   29238:	eor	r7, r7, r6, ror #2
   2923c:	ldr	r9, [sp, #44]	; 0x2c
   29240:	eor	r3, r3, sl, ror #7
   29244:	eor	r7, r7, r6, ror #22
   29248:	eor	r3, r3, sl, lsr #3
   2924c:	add	r7, r7, r4
   29250:	add	r1, r1, r5
   29254:	add	r3, r3, lr
   29258:	add	r5, r7, r5
   2925c:	ror	lr, r9, #19
   29260:	ldr	r7, [sp, #32]
   29264:	eor	lr, lr, r9, ror #17
   29268:	str	r9, [sp, #68]	; 0x44
   2926c:	eor	r4, lr, r9, lsr #10
   29270:	add	r3, r3, r7
   29274:	add	lr, r3, r4
   29278:	movw	r3, #2693	; 0xa85
   2927c:	movt	r3, #10167	; 0x27b7
   29280:	str	lr, [sp]
   29284:	add	r3, lr, r3
   29288:	ror	lr, r1, #11
   2928c:	eor	r4, ip, r0
   29290:	add	r3, r3, r8
   29294:	eor	r8, lr, r1, ror #6
   29298:	ldr	lr, [sp, #8]
   2929c:	and	r4, r4, r1
   292a0:	orr	r9, r6, r5
   292a4:	eor	r4, r4, ip
   292a8:	and	r9, r9, fp
   292ac:	add	r3, r4, r3
   292b0:	ror	r4, lr, #18
   292b4:	eor	r4, r4, lr, ror #7
   292b8:	ror	r7, r5, #13
   292bc:	eor	r4, r4, lr, lsr #3
   292c0:	and	lr, r6, r5
   292c4:	eor	r7, r7, r5, ror #2
   292c8:	orr	lr, r9, lr
   292cc:	ldr	r9, [sp, #72]	; 0x48
   292d0:	eor	r8, r8, r1, ror #25
   292d4:	eor	r7, r7, r5, ror #22
   292d8:	add	r3, r3, r8
   292dc:	add	lr, r7, lr
   292e0:	add	r2, r2, r3
   292e4:	add	lr, lr, r3
   292e8:	add	r4, r4, sl
   292ec:	ldr	r3, [sp, #60]	; 0x3c
   292f0:	ror	sl, r9, #19
   292f4:	eor	sl, sl, r9, ror #17
   292f8:	movw	r8, #8504	; 0x2138
   292fc:	add	r4, r4, r3
   29300:	eor	sl, sl, r9, lsr #10
   29304:	add	sl, r4, sl
   29308:	ldr	r9, [sp, #12]
   2930c:	eor	r3, r0, r1
   29310:	movt	r8, #11803	; 0x2e1b
   29314:	add	r8, sl, r8
   29318:	and	r3, r3, r2
   2931c:	ror	r7, r2, #11
   29320:	eor	r3, r3, r0
   29324:	add	ip, r8, ip
   29328:	eor	r7, r7, r2, ror #6
   2932c:	add	ip, r3, ip
   29330:	eor	r7, r7, r2, ror #25
   29334:	ror	r3, r9, #18
   29338:	add	r7, ip, r7
   2933c:	eor	r3, r3, r9, ror #7
   29340:	ldr	ip, [sp, #8]
   29344:	eor	r3, r3, r9, lsr #3
   29348:	str	sl, [sp, #4]
   2934c:	add	r3, r3, ip
   29350:	ldr	ip, [sp]
   29354:	orr	r4, r5, lr
   29358:	and	r9, r5, lr
   2935c:	and	r4, r4, r6
   29360:	ror	r8, lr, #13
   29364:	ror	sl, ip, #19
   29368:	add	fp, fp, r7
   2936c:	eor	sl, sl, ip, ror #17
   29370:	orr	r4, r4, r9
   29374:	eor	sl, sl, ip, lsr #10
   29378:	ldr	ip, [sp, #36]	; 0x24
   2937c:	ldr	r9, [sp, #16]
   29380:	eor	r8, r8, lr, ror #2
   29384:	add	r3, r3, ip
   29388:	eor	ip, r1, r2
   2938c:	add	sl, r3, sl
   29390:	movw	r3, #28156	; 0x6dfc
   29394:	movt	r3, #19756	; 0x4d2c
   29398:	eor	r8, r8, lr, ror #22
   2939c:	add	r3, sl, r3
   293a0:	and	ip, ip, fp
   293a4:	add	r8, r8, r4
   293a8:	eor	ip, ip, r1
   293ac:	add	r0, r3, r0
   293b0:	add	r7, r8, r7
   293b4:	add	r0, ip, r0
   293b8:	ror	ip, r9, #18
   293bc:	orr	r4, lr, r7
   293c0:	eor	ip, ip, r9, ror #7
   293c4:	and	r4, r4, r5
   293c8:	eor	ip, ip, r9, lsr #3
   293cc:	and	r9, lr, r7
   293d0:	ror	r8, fp, #11
   293d4:	orr	r9, r4, r9
   293d8:	ldr	r4, [sp, #12]
   293dc:	ror	r3, r7, #13
   293e0:	eor	r8, r8, fp, ror #6
   293e4:	eor	r3, r3, r7, ror #2
   293e8:	add	ip, ip, r4
   293ec:	ldr	r4, [sp, #4]
   293f0:	eor	r8, r8, fp, ror #25
   293f4:	eor	r3, r3, r7, ror #22
   293f8:	add	r0, r0, r8
   293fc:	add	r9, r3, r9
   29400:	add	r6, r6, r0
   29404:	add	r9, r9, r0
   29408:	str	sl, [sp, #44]	; 0x2c
   2940c:	ldr	r0, [sp, #64]	; 0x40
   29410:	ror	sl, r4, #19
   29414:	eor	sl, sl, r4, ror #17
   29418:	ldr	r8, [sp, #20]
   2941c:	eor	sl, sl, r4, lsr #10
   29420:	add	ip, ip, r0
   29424:	add	r0, ip, sl
   29428:	movw	r4, #3347	; 0xd13
   2942c:	movt	r4, #21304	; 0x5338
   29430:	orr	sl, r7, r9
   29434:	mov	r3, r0
   29438:	eor	r0, r2, fp
   2943c:	str	r3, [sp, #48]	; 0x30
   29440:	add	r4, r3, r4
   29444:	and	r0, r0, r6
   29448:	ror	r3, r6, #11
   2944c:	eor	r0, r0, r2
   29450:	add	r1, r4, r1
   29454:	eor	r3, r3, r6, ror #6
   29458:	add	r1, r0, r1
   2945c:	eor	r3, r3, r6, ror #25
   29460:	and	sl, sl, lr
   29464:	add	r3, r1, r3
   29468:	and	r1, r7, r9
   2946c:	orr	r1, sl, r1
   29470:	ror	ip, r8, #18
   29474:	ldr	sl, [sp, #44]	; 0x2c
   29478:	eor	ip, ip, r8, ror #7
   2947c:	ldr	r0, [sp, #16]
   29480:	eor	ip, ip, r8, lsr #3
   29484:	ror	r4, r9, #13
   29488:	add	r5, r5, r3
   2948c:	add	ip, ip, r0
   29490:	ror	r0, sl, #19
   29494:	eor	r0, r0, sl, ror #17
   29498:	eor	r4, r4, r9, ror #2
   2949c:	eor	r0, r0, sl, lsr #10
   294a0:	ldr	sl, [sp, #40]	; 0x28
   294a4:	eor	r4, r4, r9, ror #22
   294a8:	ror	r8, r5, #11
   294ac:	add	ip, ip, sl
   294b0:	add	r4, r4, r1
   294b4:	add	r0, ip, r0
   294b8:	add	r1, r4, r3
   294bc:	ldr	ip, [sp, #24]
   294c0:	movw	r3, #29524	; 0x7354
   294c4:	mov	sl, r0
   294c8:	movt	r3, #25866	; 0x650a
   294cc:	eor	r0, fp, r6
   294d0:	add	r3, sl, r3
   294d4:	and	r0, r0, r5
   294d8:	add	r2, r3, r2
   294dc:	eor	r0, r0, fp
   294e0:	orr	r4, r9, r1
   294e4:	add	r2, r0, r2
   294e8:	ror	r0, ip, #18
   294ec:	eor	r8, r8, r5, ror #6
   294f0:	eor	r0, r0, ip, ror #7
   294f4:	and	r4, r4, r7
   294f8:	eor	r8, r8, r5, ror #25
   294fc:	ror	r3, r1, #13
   29500:	eor	r0, r0, ip, lsr #3
   29504:	and	ip, r9, r1
   29508:	add	r2, r2, r8
   2950c:	str	sl, [sp, #52]	; 0x34
   29510:	eor	r3, r3, r1, ror #2
   29514:	ldr	r8, [sp, #20]
   29518:	orr	ip, r4, ip
   2951c:	ldr	r4, [sp, #48]	; 0x30
   29520:	eor	r3, r3, r1, ror #22
   29524:	add	ip, r3, ip
   29528:	add	lr, lr, r2
   2952c:	add	ip, ip, r2
   29530:	ldr	r2, [sp, #68]	; 0x44
   29534:	ror	sl, r4, #19
   29538:	add	r0, r0, r8
   2953c:	eor	sl, sl, r4, ror #17
   29540:	add	r0, r0, r2
   29544:	eor	sl, sl, r4, lsr #10
   29548:	movw	r4, #2747	; 0xabb
   2954c:	add	r0, r0, sl
   29550:	movt	r4, #30314	; 0x766a
   29554:	add	r4, r0, r4
   29558:	eor	r2, r6, r5
   2955c:	add	fp, r4, fp
   29560:	ldr	r4, [sp, #28]
   29564:	and	r2, r2, lr
   29568:	ror	r3, lr, #11
   2956c:	eor	r2, r2, r6
   29570:	eor	r3, r3, lr, ror #6
   29574:	add	fp, r2, fp
   29578:	ror	sl, r4, #18
   2957c:	eor	r3, r3, lr, ror #25
   29580:	str	r0, [sp, #20]
   29584:	add	r3, fp, r3
   29588:	orr	r0, r1, ip
   2958c:	ldr	fp, [sp, #52]	; 0x34
   29590:	ror	r2, ip, #13
   29594:	eor	sl, sl, r4, ror #7
   29598:	ldr	r8, [sp, #24]
   2959c:	and	r0, r0, r9
   295a0:	eor	r2, r2, ip, ror #2
   295a4:	eor	sl, sl, r4, lsr #3
   295a8:	and	r4, r1, ip
   295ac:	orr	r0, r0, r4
   295b0:	eor	r2, r2, ip, ror #22
   295b4:	add	r2, r2, r0
   295b8:	add	sl, sl, r8
   295bc:	ldr	r0, [sp, #72]	; 0x48
   295c0:	ror	r8, fp, #19
   295c4:	eor	r8, r8, fp, ror #17
   295c8:	add	r7, r7, r3
   295cc:	eor	r8, r8, fp, lsr #10
   295d0:	add	sl, sl, r0
   295d4:	add	r3, r2, r3
   295d8:	add	r2, sl, r8
   295dc:	eor	sl, r5, lr
   295e0:	orr	r4, ip, r3
   295e4:	mov	fp, r2
   295e8:	movw	r2, #51502	; 0xc92e
   295ec:	movt	r2, #33218	; 0x81c2
   295f0:	str	fp, [sp, #24]
   295f4:	add	r2, fp, r2
   295f8:	ldr	fp, [sp, #56]	; 0x38
   295fc:	and	sl, sl, r7
   29600:	add	r6, r2, r6
   29604:	eor	sl, sl, r5
   29608:	and	r4, r4, r1
   2960c:	and	r0, ip, r3
   29610:	add	r6, sl, r6
   29614:	ror	sl, fp, #18
   29618:	orr	r0, r4, r0
   2961c:	eor	sl, sl, fp, ror #7
   29620:	ldr	r4, [sp, #28]
   29624:	eor	sl, sl, fp, lsr #3
   29628:	ror	r8, r7, #11
   2962c:	ror	r2, r3, #13
   29630:	add	sl, sl, r4
   29634:	ldr	r4, [sp, #20]
   29638:	eor	r8, r8, r7, ror #6
   2963c:	eor	r2, r2, r3, ror #2
   29640:	eor	r8, r8, r7, ror #25
   29644:	eor	r2, r2, r3, ror #22
   29648:	add	r6, r6, r8
   2964c:	add	r2, r2, r0
   29650:	ror	r8, r4, #19
   29654:	ldr	r0, [sp]
   29658:	eor	r8, r8, r4, ror #17
   2965c:	add	r9, r9, r6
   29660:	eor	r8, r8, r4, lsr #10
   29664:	add	sl, sl, r0
   29668:	add	r6, r2, r6
   2966c:	eor	r0, lr, r7
   29670:	add	r2, sl, r8
   29674:	movw	r4, #11397	; 0x2c85
   29678:	movt	r4, #37490	; 0x9272
   2967c:	str	r2, [sp, #28]
   29680:	add	r4, r2, r4
   29684:	and	r0, r0, r9
   29688:	ror	r2, r9, #11
   2968c:	eor	r0, r0, lr
   29690:	add	r5, r4, r5
   29694:	eor	r2, r2, r9, ror #6
   29698:	ldr	r8, [sp, #32]
   2969c:	orr	r4, r3, r6
   296a0:	add	r5, r0, r5
   296a4:	eor	r2, r2, r9, ror #25
   296a8:	and	r4, r4, ip
   296ac:	add	r2, r5, r2
   296b0:	ror	r0, r6, #13
   296b4:	and	r5, r3, r6
   296b8:	eor	r0, r0, r6, ror #2
   296bc:	orr	r5, r4, r5
   296c0:	ldr	r4, [sp, #24]
   296c4:	ror	sl, r8, #18
   296c8:	eor	r0, r0, r6, ror #22
   296cc:	eor	sl, sl, r8, ror #7
   296d0:	add	r0, r0, r5
   296d4:	add	r5, r0, r2
   296d8:	eor	sl, sl, r8, lsr #3
   296dc:	ldr	r0, [sp, #4]
   296e0:	ror	r8, r4, #19
   296e4:	add	sl, sl, fp
   296e8:	eor	r8, r8, r4, ror #17
   296ec:	eor	r8, r8, r4, lsr #10
   296f0:	add	sl, sl, r0
   296f4:	add	sl, sl, r8
   296f8:	movw	r8, #59553	; 0xe8a1
   296fc:	movt	r8, #41663	; 0xa2bf
   29700:	add	r1, r1, r2
   29704:	mov	fp, sl
   29708:	add	r8, fp, r8
   2970c:	eor	sl, r7, r9
   29710:	add	lr, r8, lr
   29714:	ldr	r8, [sp, #60]	; 0x3c
   29718:	and	sl, sl, r1
   2971c:	eor	sl, sl, r7
   29720:	orr	r0, r6, r5
   29724:	add	lr, sl, lr
   29728:	and	r0, r0, r3
   2972c:	ror	sl, r8, #18
   29730:	ror	r4, r1, #11
   29734:	eor	sl, sl, r8, ror #7
   29738:	eor	r4, r4, r1, ror #6
   2973c:	eor	sl, sl, r8, lsr #3
   29740:	and	r8, r6, r5
   29744:	orr	r8, r0, r8
   29748:	ldr	r0, [sp, #32]
   2974c:	eor	r4, r4, r1, ror #25
   29750:	ror	r2, r5, #13
   29754:	add	sl, sl, r0
   29758:	ldr	r0, [sp, #28]
   2975c:	add	lr, lr, r4
   29760:	eor	r2, r2, r5, ror #2
   29764:	eor	r2, r2, r5, ror #22
   29768:	add	ip, ip, lr
   2976c:	ror	r4, r0, #19
   29770:	add	r8, r2, r8
   29774:	eor	r4, r4, r0, ror #17
   29778:	add	lr, r8, lr
   2977c:	eor	r4, r4, r0, lsr #10
   29780:	ldr	r0, [sp, #44]	; 0x2c
   29784:	movw	r8, #26187	; 0x664b
   29788:	movt	r8, #43034	; 0xa81a
   2978c:	add	sl, sl, r0
   29790:	eor	r0, r9, r1
   29794:	add	sl, sl, r4
   29798:	ldr	r4, [sp, #36]	; 0x24
   2979c:	add	r8, sl, r8
   297a0:	and	r0, r0, ip
   297a4:	ror	r2, ip, #11
   297a8:	eor	r0, r0, r9
   297ac:	add	r7, r8, r7
   297b0:	eor	r2, r2, ip, ror #6
   297b4:	str	fp, [sp, #56]	; 0x38
   297b8:	add	r7, r0, r7
   297bc:	ror	fp, r4, #18
   297c0:	eor	r2, r2, ip, ror #25
   297c4:	str	sl, [sp, #32]
   297c8:	add	r2, r7, r2
   297cc:	orr	sl, r5, lr
   297d0:	ldr	r7, [sp, #56]	; 0x38
   297d4:	ror	r0, lr, #13
   297d8:	eor	fp, fp, r4, ror #7
   297dc:	ldr	r8, [sp, #60]	; 0x3c
   297e0:	and	sl, sl, r6
   297e4:	eor	r0, r0, lr, ror #2
   297e8:	eor	fp, fp, r4, lsr #3
   297ec:	and	r4, r5, lr
   297f0:	eor	r0, r0, lr, ror #22
   297f4:	orr	sl, sl, r4
   297f8:	add	fp, fp, r8
   297fc:	add	r0, r0, sl
   29800:	ror	r8, r7, #19
   29804:	mov	sl, r7
   29808:	eor	r8, r8, r7, ror #17
   2980c:	add	r7, r0, r2
   29810:	ldr	r0, [sp, #48]	; 0x30
   29814:	eor	r8, r8, sl, lsr #10
   29818:	add	r3, r3, r2
   2981c:	add	fp, fp, r0
   29820:	eor	r4, r1, ip
   29824:	add	r2, fp, r8
   29828:	movw	r8, #35696	; 0x8b70
   2982c:	movt	r8, #49739	; 0xc24b
   29830:	orr	sl, lr, r7
   29834:	add	r8, r2, r8
   29838:	and	sl, sl, r5
   2983c:	add	r9, r8, r9
   29840:	ldr	r8, [sp, #64]	; 0x40
   29844:	and	r4, r4, r3
   29848:	ror	r0, r3, #11
   2984c:	eor	r4, r4, r1
   29850:	eor	r0, r0, r3, ror #6
   29854:	ror	fp, r8, #18
   29858:	add	r9, r4, r9
   2985c:	eor	fp, fp, r8, ror #7
   29860:	ldr	r4, [sp, #36]	; 0x24
   29864:	eor	fp, fp, r8, lsr #3
   29868:	and	r8, lr, r7
   2986c:	orr	r8, sl, r8
   29870:	ldr	sl, [sp, #32]
   29874:	eor	r0, r0, r3, ror #25
   29878:	add	fp, fp, r4
   2987c:	add	r9, r9, r0
   29880:	ldr	r0, [sp, #52]	; 0x34
   29884:	ror	r4, sl, #19
   29888:	str	r2, [sp, #60]	; 0x3c
   2988c:	eor	r4, r4, sl, ror #17
   29890:	ror	r2, r7, #13
   29894:	eor	r4, r4, sl, lsr #10
   29898:	eor	r2, r2, r7, ror #2
   2989c:	add	fp, fp, r0
   298a0:	eor	r2, r2, r7, ror #22
   298a4:	add	fp, fp, r4
   298a8:	add	r8, r2, r8
   298ac:	movw	r2, #20899	; 0x51a3
   298b0:	movt	r2, #51052	; 0xc76c
   298b4:	mov	r4, fp
   298b8:	add	r2, r4, r2
   298bc:	str	r4, [sp, #8]
   298c0:	add	r6, r6, r9
   298c4:	eor	fp, ip, r3
   298c8:	add	r1, r2, r1
   298cc:	ldr	r2, [sp, #40]	; 0x28
   298d0:	and	fp, fp, r6
   298d4:	add	r9, r8, r9
   298d8:	eor	fp, fp, ip
   298dc:	ror	sl, r6, #11
   298e0:	add	r1, fp, r1
   298e4:	eor	sl, sl, r6, ror #6
   298e8:	ror	fp, r2, #18
   298ec:	orr	r0, r7, r9
   298f0:	eor	sl, sl, r6, ror #25
   298f4:	ror	r8, r9, #13
   298f8:	eor	fp, fp, r2, ror #7
   298fc:	add	r1, r1, sl
   29900:	and	r0, r0, lr
   29904:	and	sl, r7, r9
   29908:	eor	r8, r8, r9, ror #2
   2990c:	eor	fp, fp, r2, lsr #3
   29910:	ldr	r2, [sp, #60]	; 0x3c
   29914:	ldr	r4, [sp, #64]	; 0x40
   29918:	eor	r8, r8, r9, ror #22
   2991c:	orr	sl, r0, sl
   29920:	add	r5, r5, r1
   29924:	add	sl, r8, sl
   29928:	add	fp, fp, r4
   2992c:	add	sl, sl, r1
   29930:	ror	r4, r2, #19
   29934:	ldr	r1, [sp, #20]
   29938:	eor	r4, r4, r2, ror #17
   2993c:	eor	r4, r4, r2, lsr #10
   29940:	ldr	r8, [sp, #68]	; 0x44
   29944:	add	fp, fp, r1
   29948:	eor	r0, r3, r6
   2994c:	add	r1, fp, r4
   29950:	movw	r2, #59417	; 0xe819
   29954:	movt	r2, #53650	; 0xd192
   29958:	str	r1, [sp, #36]	; 0x24
   2995c:	add	r2, r1, r2
   29960:	and	r0, r0, r5
   29964:	ror	r1, r5, #11
   29968:	orr	r4, r9, sl
   2996c:	eor	r0, r0, r3
   29970:	add	ip, r2, ip
   29974:	eor	r1, r1, r5, ror #6
   29978:	add	ip, r0, ip
   2997c:	and	r4, r4, r7
   29980:	and	r0, r9, sl
   29984:	ror	r2, sl, #13
   29988:	ror	fp, r8, #18
   2998c:	eor	r1, r1, r5, ror #25
   29990:	orr	r4, r4, r0
   29994:	add	r1, ip, r1
   29998:	ldr	r0, [sp, #40]	; 0x28
   2999c:	ldr	ip, [sp, #8]
   299a0:	eor	r2, r2, sl, ror #2
   299a4:	eor	fp, fp, r8, ror #7
   299a8:	eor	r2, r2, sl, ror #22
   299ac:	eor	fp, fp, r8, lsr #3
   299b0:	add	lr, lr, r1
   299b4:	add	fp, fp, r0
   299b8:	add	r0, r2, r4
   299bc:	add	r0, r0, r1
   299c0:	ror	r8, ip, #19
   299c4:	ldr	r1, [sp, #24]
   299c8:	eor	r8, r8, ip, ror #17
   299cc:	eor	r8, r8, ip, lsr #10
   299d0:	movw	r2, #1572	; 0x624
   299d4:	add	fp, fp, r1
   299d8:	eor	ip, r6, r5
   299dc:	add	r4, fp, r8
   299e0:	movt	r2, #54937	; 0xd699
   299e4:	add	r2, r4, r2
   299e8:	and	ip, ip, lr
   299ec:	ror	r1, lr, #11
   299f0:	ldr	fp, [sp, #72]	; 0x48
   299f4:	add	r3, r2, r3
   299f8:	eor	ip, ip, r6
   299fc:	eor	r1, r1, lr, ror #6
   29a00:	orr	r8, sl, r0
   29a04:	eor	r1, r1, lr, ror #25
   29a08:	add	ip, ip, r3
   29a0c:	add	ip, ip, r1
   29a10:	and	r8, r8, r9
   29a14:	and	r1, sl, r0
   29a18:	ror	r2, r0, #13
   29a1c:	ror	r3, fp, #18
   29a20:	eor	r2, r2, r0, ror #2
   29a24:	orr	r1, r8, r1
   29a28:	ldr	r8, [sp, #36]	; 0x24
   29a2c:	str	r4, [sp, #12]
   29a30:	eor	r2, r2, r0, ror #22
   29a34:	ldr	r4, [sp, #68]	; 0x44
   29a38:	eor	r3, r3, fp, ror #7
   29a3c:	eor	r3, r3, fp, lsr #3
   29a40:	add	r1, r2, r1
   29a44:	add	r1, r1, ip
   29a48:	add	r2, r7, ip
   29a4c:	add	r3, r3, r4
   29a50:	ldr	ip, [sp, #28]
   29a54:	ror	r4, r8, #19
   29a58:	orr	r7, r0, r1
   29a5c:	eor	r4, r4, r8, ror #17
   29a60:	add	r3, r3, ip
   29a64:	eor	r4, r4, r8, lsr #10
   29a68:	movw	ip, #13701	; 0x3585
   29a6c:	add	r3, r3, r4
   29a70:	eor	r8, r5, lr
   29a74:	movt	ip, #62478	; 0xf40e
   29a78:	and	r8, r8, r2
   29a7c:	add	ip, r3, ip
   29a80:	eor	r8, r8, r5
   29a84:	add	r6, ip, r6
   29a88:	str	r3, [sp, #40]	; 0x28
   29a8c:	add	r6, r8, r6
   29a90:	ror	r3, r2, #11
   29a94:	ldr	r8, [sp]
   29a98:	eor	r3, r3, r2, ror #6
   29a9c:	eor	r3, r3, r2, ror #25
   29aa0:	ror	ip, r1, #13
   29aa4:	add	r3, r6, r3
   29aa8:	ldr	r6, [sp, #12]
   29aac:	ror	r4, r8, #18
   29ab0:	and	r7, r7, sl
   29ab4:	eor	r4, r4, r8, ror #7
   29ab8:	eor	ip, ip, r1, ror #2
   29abc:	eor	r4, r4, r8, lsr #3
   29ac0:	and	r8, r0, r1
   29ac4:	add	r4, r4, fp
   29ac8:	ror	fp, r6, #19
   29acc:	eor	fp, fp, r6, ror #17
   29ad0:	eor	ip, ip, r1, ror #22
   29ad4:	eor	fp, fp, r6, lsr #10
   29ad8:	ldr	r6, [sp, #56]	; 0x38
   29adc:	orr	r7, r7, r8
   29ae0:	add	r4, r4, r6
   29ae4:	movw	r6, #41072	; 0xa070
   29ae8:	add	r4, r4, fp
   29aec:	movt	r6, #4202	; 0x106a
   29af0:	add	r8, ip, r7
   29af4:	add	r6, r4, r6
   29af8:	add	ip, r9, r3
   29afc:	add	r8, r8, r3
   29b00:	add	r5, r6, r5
   29b04:	eor	r3, lr, r2
   29b08:	ldr	r6, [sp, #4]
   29b0c:	and	r3, r3, ip
   29b10:	eor	r3, r3, lr
   29b14:	str	r4, [sp, #16]
   29b18:	add	r5, r3, r5
   29b1c:	ldr	r4, [sp]
   29b20:	ror	r3, r6, #18
   29b24:	ror	r7, ip, #11
   29b28:	eor	r3, r3, r6, ror #7
   29b2c:	eor	r7, r7, ip, ror #6
   29b30:	eor	r3, r3, r6, lsr #3
   29b34:	orr	r9, r1, r8
   29b38:	add	r3, r3, r4
   29b3c:	ldr	r4, [sp, #40]	; 0x28
   29b40:	eor	r7, r7, ip, ror #25
   29b44:	ror	fp, r8, #13
   29b48:	add	r5, r5, r7
   29b4c:	and	r9, r9, r0
   29b50:	ror	r6, r4, #19
   29b54:	and	r7, r1, r8
   29b58:	eor	r6, r6, r4, ror #17
   29b5c:	eor	fp, fp, r8, ror #2
   29b60:	eor	r6, r6, r4, lsr #10
   29b64:	ldr	r4, [sp, #32]
   29b68:	eor	fp, fp, r8, ror #22
   29b6c:	orr	r7, r9, r7
   29b70:	add	r7, fp, r7
   29b74:	add	r3, r3, r4
   29b78:	add	fp, sl, r5
   29b7c:	add	r7, r7, r5
   29b80:	add	r3, r3, r6
   29b84:	eor	r5, r2, ip
   29b88:	movw	r4, #49430	; 0xc116
   29b8c:	movt	r4, #6564	; 0x19a4
   29b90:	add	r4, r3, r4
   29b94:	and	r5, r5, fp
   29b98:	eor	r5, r5, r2
   29b9c:	add	lr, r4, lr
   29ba0:	add	lr, r5, lr
   29ba4:	ldr	r5, [sp, #44]	; 0x2c
   29ba8:	orr	r9, r8, r7
   29bac:	ldr	sl, [sp, #16]
   29bb0:	str	r3, [sp, #64]	; 0x40
   29bb4:	and	r9, r9, r1
   29bb8:	ror	r4, r5, #18
   29bbc:	ror	r3, fp, #11
   29bc0:	eor	r4, r4, r5, ror #7
   29bc4:	ror	r6, r7, #13
   29bc8:	eor	r4, r4, r5, lsr #3
   29bcc:	and	r5, r8, r7
   29bd0:	orr	r9, r9, r5
   29bd4:	eor	r3, r3, fp, ror #6
   29bd8:	ldr	r5, [sp, #4]
   29bdc:	eor	r6, r6, r7, ror #2
   29be0:	eor	r6, r6, r7, ror #22
   29be4:	eor	r3, r3, fp, ror #25
   29be8:	add	r3, lr, r3
   29bec:	add	r4, r4, r5
   29bf0:	ror	lr, sl, #19
   29bf4:	add	r5, r6, r9
   29bf8:	ldr	r6, [sp, #60]	; 0x3c
   29bfc:	eor	lr, lr, sl, ror #17
   29c00:	add	r0, r0, r3
   29c04:	eor	lr, lr, sl, lsr #10
   29c08:	add	r4, r4, r6
   29c0c:	add	r5, r5, r3
   29c10:	add	sl, r4, lr
   29c14:	eor	r3, ip, fp
   29c18:	movw	r6, #27656	; 0x6c08
   29c1c:	movt	r6, #7735	; 0x1e37
   29c20:	ldr	r9, [sp, #48]	; 0x30
   29c24:	add	r6, sl, r6
   29c28:	and	r3, r3, r0
   29c2c:	ror	r4, r0, #11
   29c30:	eor	r3, r3, ip
   29c34:	add	r2, r6, r2
   29c38:	eor	r4, r4, r0, ror #6
   29c3c:	orr	lr, r7, r5
   29c40:	eor	r4, r4, r0, ror #25
   29c44:	add	r2, r3, r2
   29c48:	add	r2, r2, r4
   29c4c:	and	lr, lr, r8
   29c50:	and	r4, r7, r5
   29c54:	ror	r3, r9, #18
   29c58:	eor	r3, r3, r9, ror #7
   29c5c:	orr	r4, lr, r4
   29c60:	ldr	lr, [sp, #64]	; 0x40
   29c64:	eor	r3, r3, r9, lsr #3
   29c68:	ldr	r9, [sp, #44]	; 0x2c
   29c6c:	ror	r6, r5, #13
   29c70:	eor	r6, r6, r5, ror #2
   29c74:	add	r1, r1, r2
   29c78:	add	r3, r3, r9
   29c7c:	ror	r9, lr, #19
   29c80:	eor	r9, r9, lr, ror #17
   29c84:	eor	r6, r6, r5, ror #22
   29c88:	eor	r9, r9, lr, lsr #10
   29c8c:	ldr	lr, [sp, #8]
   29c90:	add	r4, r6, r4
   29c94:	add	r3, r3, lr
   29c98:	movw	lr, #30540	; 0x774c
   29c9c:	add	r9, r3, r9
   29ca0:	movt	lr, #10056	; 0x2748
   29ca4:	eor	r3, fp, r0
   29ca8:	str	r9, [sp, #4]
   29cac:	add	r4, r4, r2
   29cb0:	add	lr, r9, lr
   29cb4:	and	r3, r3, r1
   29cb8:	ldr	r9, [sp, #52]	; 0x34
   29cbc:	ror	r2, r1, #11
   29cc0:	add	ip, lr, ip
   29cc4:	eor	r3, r3, fp
   29cc8:	eor	r2, r2, r1, ror #6
   29ccc:	orr	r6, r5, r4
   29cd0:	eor	r2, r2, r1, ror #25
   29cd4:	add	r3, r3, ip
   29cd8:	and	r6, r6, r7
   29cdc:	add	r3, r3, r2
   29ce0:	ror	lr, r4, #13
   29ce4:	and	r2, r5, r4
   29ce8:	ror	ip, r9, #18
   29cec:	orr	r6, r6, r2
   29cf0:	eor	lr, lr, r4, ror #2
   29cf4:	ldr	r2, [sp, #48]	; 0x30
   29cf8:	eor	ip, ip, r9, ror #7
   29cfc:	eor	lr, lr, r4, ror #22
   29d00:	eor	ip, ip, r9, lsr #3
   29d04:	add	ip, ip, r2
   29d08:	add	lr, lr, r6
   29d0c:	ror	r2, sl, #19
   29d10:	ldr	r6, [sp, #36]	; 0x24
   29d14:	eor	r2, r2, sl, ror #17
   29d18:	add	r8, r8, r3
   29d1c:	add	lr, lr, r3
   29d20:	add	ip, ip, r6
   29d24:	eor	r3, r2, sl, lsr #10
   29d28:	ldr	r9, [sp, #20]
   29d2c:	add	ip, ip, r3
   29d30:	movw	r2, #48309	; 0xbcb5
   29d34:	movt	r2, #13488	; 0x34b0
   29d38:	ror	r6, lr, #13
   29d3c:	mov	r3, ip
   29d40:	eor	ip, r0, r1
   29d44:	add	r2, r3, r2
   29d48:	and	ip, ip, r8
   29d4c:	add	r2, r2, fp
   29d50:	eor	ip, ip, r0
   29d54:	add	ip, ip, r2
   29d58:	ror	r2, r9, #18
   29d5c:	str	r3, [sp, #44]	; 0x2c
   29d60:	eor	r2, r2, r9, ror #7
   29d64:	ror	r3, r8, #11
   29d68:	eor	r2, r2, r9, lsr #3
   29d6c:	eor	r3, r3, r8, ror #6
   29d70:	ldr	r9, [sp, #52]	; 0x34
   29d74:	orr	fp, r4, lr
   29d78:	eor	r3, r3, r8, ror #25
   29d7c:	add	r3, ip, r3
   29d80:	and	fp, fp, r5
   29d84:	and	ip, r4, lr
   29d88:	eor	r6, r6, lr, ror #2
   29d8c:	add	r2, r2, r9
   29d90:	ldr	r9, [sp, #4]
   29d94:	eor	r6, r6, lr, ror #22
   29d98:	orr	ip, fp, ip
   29d9c:	add	ip, r6, ip
   29da0:	add	r7, r7, r3
   29da4:	add	ip, ip, r3
   29da8:	ror	fp, r9, #19
   29dac:	ldr	r3, [sp, #12]
   29db0:	eor	r6, fp, r9, ror #17
   29db4:	eor	r6, r6, r9, lsr #10
   29db8:	ldr	r9, [sp, #24]
   29dbc:	add	r2, r2, r3
   29dc0:	eor	r3, r1, r8
   29dc4:	add	r2, r2, r6
   29dc8:	and	r3, r3, r7
   29dcc:	eor	r3, r3, r1
   29dd0:	ror	fp, r7, #11
   29dd4:	mov	r6, r2
   29dd8:	movw	r2, #3251	; 0xcb3
   29ddc:	movt	r2, #14620	; 0x391c
   29de0:	eor	fp, fp, r7, ror #6
   29de4:	add	r2, r6, r2
   29de8:	str	r6, [sp, #48]	; 0x30
   29dec:	add	r2, r2, r0
   29df0:	orr	r6, lr, ip
   29df4:	add	r3, r3, r2
   29df8:	ror	r2, r9, #18
   29dfc:	eor	r2, r2, r9, ror #7
   29e00:	eor	fp, fp, r7, ror #25
   29e04:	eor	r2, r2, r9, lsr #3
   29e08:	ldr	r9, [sp, #20]
   29e0c:	ror	r0, ip, #13
   29e10:	add	r3, r3, fp
   29e14:	and	r6, r6, r4
   29e18:	and	fp, lr, ip
   29e1c:	eor	r0, r0, ip, ror #2
   29e20:	add	r2, r2, r9
   29e24:	ldr	r9, [sp, #44]	; 0x2c
   29e28:	orr	r6, r6, fp
   29e2c:	eor	r0, r0, ip, ror #22
   29e30:	add	r5, r5, r3
   29e34:	add	r0, r0, r6
   29e38:	movw	r6, #43594	; 0xaa4a
   29e3c:	add	r0, r0, r3
   29e40:	ror	fp, r9, #19
   29e44:	ldr	r3, [sp, #40]	; 0x28
   29e48:	eor	fp, fp, r9, ror #17
   29e4c:	eor	fp, fp, r9, lsr #10
   29e50:	movt	r6, #20184	; 0x4ed8
   29e54:	add	r2, r2, r3
   29e58:	ldr	r9, [sp, #28]
   29e5c:	add	r2, r2, fp
   29e60:	ror	fp, r0, #13
   29e64:	eor	fp, fp, r0, ror #2
   29e68:	mov	r3, r2
   29e6c:	eor	r2, r8, r7
   29e70:	add	r6, r3, r6
   29e74:	and	r2, r2, r5
   29e78:	eor	r2, r2, r8
   29e7c:	add	r1, r6, r1
   29e80:	add	r1, r2, r1
   29e84:	ror	r2, r9, #18
   29e88:	eor	r2, r2, r9, ror #7
   29e8c:	str	r3, [sp, #52]	; 0x34
   29e90:	eor	r2, r2, r9, lsr #3
   29e94:	ldr	r9, [sp, #24]
   29e98:	ror	r3, r5, #11
   29e9c:	orr	r6, ip, r0
   29ea0:	eor	r3, r3, r5, ror #6
   29ea4:	add	r2, r2, r9
   29ea8:	ldr	r9, [sp, #48]	; 0x30
   29eac:	eor	r3, r3, r5, ror #25
   29eb0:	add	r3, r1, r3
   29eb4:	and	r6, r6, lr
   29eb8:	and	r1, ip, r0
   29ebc:	eor	fp, fp, r0, ror #22
   29ec0:	orr	r1, r6, r1
   29ec4:	ror	r6, r9, #19
   29ec8:	add	r1, fp, r1
   29ecc:	eor	fp, r6, r9, ror #17
   29ed0:	ldr	r6, [sp, #16]
   29ed4:	eor	fp, fp, r9, lsr #10
   29ed8:	add	r1, r1, r3
   29edc:	add	r4, r4, r3
   29ee0:	add	r2, r2, r6
   29ee4:	ldr	r9, [sp, #56]	; 0x38
   29ee8:	add	r2, r2, fp
   29eec:	movw	r3, #51791	; 0xca4f
   29ef0:	movt	r3, #23452	; 0x5b9c
   29ef4:	orr	r6, r0, r1
   29ef8:	mov	fp, r2
   29efc:	eor	r2, r7, r5
   29f00:	and	r2, r2, r4
   29f04:	add	r3, fp, r3
   29f08:	add	r3, r3, r8
   29f0c:	eor	r8, r2, r7
   29f10:	add	r8, r8, r3
   29f14:	ror	r3, r9, #18
   29f18:	str	fp, [sp, #24]
   29f1c:	eor	r3, r3, r9, ror #7
   29f20:	ror	fp, r4, #11
   29f24:	eor	r3, r3, r9, lsr #3
   29f28:	eor	fp, fp, r4, ror #6
   29f2c:	ldr	r9, [sp, #28]
   29f30:	eor	fp, fp, r4, ror #25
   29f34:	ror	r2, r1, #13
   29f38:	add	r8, r8, fp
   29f3c:	and	r6, r6, ip
   29f40:	and	fp, r0, r1
   29f44:	eor	r2, r2, r1, ror #2
   29f48:	add	r3, r3, r9
   29f4c:	ldr	r9, [sp, #52]	; 0x34
   29f50:	orr	r6, r6, fp
   29f54:	eor	r2, r2, r1, ror #22
   29f58:	add	r2, r2, r6
   29f5c:	add	lr, lr, r8
   29f60:	add	r2, r2, r8
   29f64:	ror	fp, r9, #19
   29f68:	ldr	r8, [sp, #64]	; 0x40
   29f6c:	eor	fp, fp, r9, ror #17
   29f70:	eor	fp, fp, r9, lsr #10
   29f74:	movw	r6, #28659	; 0x6ff3
   29f78:	add	r3, r3, r8
   29f7c:	ldr	r9, [sp, #32]
   29f80:	add	r8, r3, fp
   29f84:	movt	r6, #26670	; 0x682e
   29f88:	eor	fp, r5, r4
   29f8c:	add	r6, r8, r6
   29f90:	and	fp, fp, lr
   29f94:	add	r6, r6, r7
   29f98:	eor	r7, fp, r5
   29f9c:	ror	r3, lr, #11
   29fa0:	add	r7, r7, r6
   29fa4:	ror	r6, r9, #18
   29fa8:	eor	r6, r6, r9, ror #7
   29fac:	eor	r3, r3, lr, ror #6
   29fb0:	eor	r6, r6, r9, lsr #3
   29fb4:	ldr	r9, [sp, #56]	; 0x38
   29fb8:	str	r8, [sp, #28]
   29fbc:	eor	r3, r3, lr, ror #25
   29fc0:	add	r6, r6, r9
   29fc4:	ldr	r9, [sp, #24]
   29fc8:	orr	r8, r1, r2
   29fcc:	ror	fp, r2, #13
   29fd0:	add	r7, r7, r3
   29fd4:	and	r8, r8, r0
   29fd8:	and	r3, r1, r2
   29fdc:	eor	fp, fp, r2, ror #2
   29fe0:	eor	fp, fp, r2, ror #22
   29fe4:	orr	r3, r8, r3
   29fe8:	ror	r8, r9, #19
   29fec:	add	r3, fp, r3
   29ff0:	eor	fp, r8, r9, ror #17
   29ff4:	add	sl, r6, sl
   29ff8:	eor	fp, fp, r9, lsr #10
   29ffc:	add	ip, ip, r7
   2a000:	add	r3, r3, r7
   2a004:	add	r7, sl, fp
   2a008:	eor	r6, r4, lr
   2a00c:	ldr	fp, [sp, #60]	; 0x3c
   2a010:	mov	sl, r7
   2a014:	movw	r7, #33518	; 0x82ee
   2a018:	movt	r7, #29839	; 0x748f
   2a01c:	str	sl, [sp, #56]	; 0x38
   2a020:	add	r7, sl, r7
   2a024:	and	r6, r6, ip
   2a028:	ror	sl, ip, #11
   2a02c:	eor	r6, r6, r4
   2a030:	add	r5, r7, r5
   2a034:	eor	sl, sl, ip, ror #6
   2a038:	orr	r8, r2, r3
   2a03c:	eor	sl, sl, ip, ror #25
   2a040:	ror	r7, r3, #13
   2a044:	add	r5, r6, r5
   2a048:	add	r5, r5, sl
   2a04c:	and	r8, r8, r1
   2a050:	and	sl, r2, r3
   2a054:	eor	r7, r7, r3, ror #2
   2a058:	ror	r6, fp, #18
   2a05c:	ldr	r9, [sp, #32]
   2a060:	orr	sl, r8, sl
   2a064:	eor	r6, r6, fp, ror #7
   2a068:	eor	r7, r7, r3, ror #22
   2a06c:	eor	r6, r6, fp, lsr #3
   2a070:	add	r7, r7, sl
   2a074:	ldr	fp, [sp, #28]
   2a078:	add	r6, r6, r9
   2a07c:	add	r9, r7, r5
   2a080:	str	r3, [sp]
   2a084:	add	r0, r0, r5
   2a088:	mov	sl, r9
   2a08c:	ror	r8, fp, #19
   2a090:	ldr	r9, [sp, #4]
   2a094:	eor	r8, r8, fp, ror #17
   2a098:	eor	r8, r8, fp, lsr #10
   2a09c:	movw	r5, #25455	; 0x636f
   2a0a0:	add	r6, r6, r9
   2a0a4:	movt	r5, #30885	; 0x78a5
   2a0a8:	add	r6, r6, r8
   2a0ac:	eor	r9, lr, ip
   2a0b0:	mov	r3, r0
   2a0b4:	ldr	fp, [sp, #8]
   2a0b8:	add	r5, r6, r5
   2a0bc:	and	r9, r9, r3
   2a0c0:	eor	r9, r9, lr
   2a0c4:	add	r4, r5, r4
   2a0c8:	mov	r0, sl
   2a0cc:	add	r4, r9, r4
   2a0d0:	ldr	sl, [sp]
   2a0d4:	ror	r7, r3, #11
   2a0d8:	ldr	r9, [sp]
   2a0dc:	ror	r8, r0, #13
   2a0e0:	str	r3, [sp, #20]
   2a0e4:	ror	r5, fp, #18
   2a0e8:	orr	sl, sl, r0
   2a0ec:	eor	r7, r7, r3, ror #6
   2a0f0:	eor	r8, r8, r0, ror #2
   2a0f4:	mov	r3, r0
   2a0f8:	eor	r5, r5, fp, ror #7
   2a0fc:	and	fp, r9, r0
   2a100:	ldr	r0, [sp, #20]
   2a104:	and	sl, sl, r2
   2a108:	ldr	r9, [sp, #8]
   2a10c:	eor	r8, r8, r3, ror #22
   2a110:	orr	sl, sl, fp
   2a114:	movw	fp, #30740	; 0x7814
   2a118:	eor	r7, r7, r0, ror #25
   2a11c:	ldr	r0, [sp, #56]	; 0x38
   2a120:	add	r4, r4, r7
   2a124:	add	sl, r8, sl
   2a128:	ldr	r8, [sp, #60]	; 0x3c
   2a12c:	add	r1, r1, r4
   2a130:	eor	r5, r5, r9, lsr #3
   2a134:	str	r1, [sp, #4]
   2a138:	ror	r9, r0, #19
   2a13c:	ldr	r1, [sp, #44]	; 0x2c
   2a140:	add	r5, r5, r8
   2a144:	eor	r9, r9, r0, ror #17
   2a148:	mov	r8, r0
   2a14c:	add	r5, r5, r1
   2a150:	add	r0, sl, r4
   2a154:	eor	r9, r9, r8, lsr #10
   2a158:	ldr	sl, [sp, #20]
   2a15c:	add	r5, r5, r9
   2a160:	ldr	r1, [sp, #4]
   2a164:	movt	fp, #33992	; 0x84c8
   2a168:	eor	r7, ip, sl
   2a16c:	add	fp, r5, fp
   2a170:	and	r7, r7, r1
   2a174:	add	lr, fp, lr
   2a178:	ldr	fp, [sp, #4]
   2a17c:	eor	r7, r7, ip
   2a180:	ror	r9, r1, #11
   2a184:	add	lr, r7, lr
   2a188:	ldr	r1, [sp, #36]	; 0x24
   2a18c:	orr	sl, r3, r0
   2a190:	ldr	r7, [sp, #4]
   2a194:	eor	r9, r9, fp, ror #6
   2a198:	ldr	fp, [sp]
   2a19c:	ror	r8, r0, #13
   2a1a0:	ror	r4, r1, #18
   2a1a4:	eor	r8, r8, r0, ror #2
   2a1a8:	and	sl, sl, fp
   2a1ac:	eor	r9, r9, r7, ror #25
   2a1b0:	mov	fp, r3
   2a1b4:	and	fp, fp, r0
   2a1b8:	add	lr, lr, r9
   2a1bc:	eor	r8, r8, r0, ror #22
   2a1c0:	ldr	r9, [sp, #8]
   2a1c4:	eor	r4, r4, r1, ror #7
   2a1c8:	orr	fp, sl, fp
   2a1cc:	eor	r4, r4, r1, lsr #3
   2a1d0:	add	fp, r8, fp
   2a1d4:	ror	sl, r6, #19
   2a1d8:	ldr	r8, [sp, #48]	; 0x30
   2a1dc:	add	r4, r4, r9
   2a1e0:	eor	sl, sl, r6, ror #17
   2a1e4:	add	r1, fp, lr
   2a1e8:	add	r4, r4, r8
   2a1ec:	eor	r6, sl, r6, lsr #10
   2a1f0:	add	r2, r2, lr
   2a1f4:	add	r6, r4, r6
   2a1f8:	ldr	sl, [sp, #20]
   2a1fc:	mov	fp, #520	; 0x208
   2a200:	ldr	lr, [sp, #4]
   2a204:	movt	fp, #36039	; 0x8cc7
   2a208:	add	fp, r6, fp
   2a20c:	ldr	r4, [sp, #12]
   2a210:	eor	r8, sl, lr
   2a214:	add	ip, fp, ip
   2a218:	ldr	fp, [sp, #12]
   2a21c:	and	r8, r8, r2
   2a220:	eor	r8, r8, sl
   2a224:	ror	r4, r4, #18
   2a228:	add	ip, r8, ip
   2a22c:	ldr	r8, [sp, #36]	; 0x24
   2a230:	eor	r4, r4, fp, ror #7
   2a234:	orr	r9, r0, r1
   2a238:	ror	r7, r2, #11
   2a23c:	ror	lr, r1, #13
   2a240:	eor	r4, r4, fp, lsr #3
   2a244:	and	sl, r0, r1
   2a248:	eor	r7, r7, r2, ror #6
   2a24c:	and	r9, r9, r3
   2a250:	eor	lr, lr, r1, ror #2
   2a254:	ror	fp, r5, #19
   2a258:	add	r4, r4, r8
   2a25c:	ldr	r8, [sp, #52]	; 0x34
   2a260:	str	r0, [sp, #8]
   2a264:	eor	r7, r7, r2, ror #25
   2a268:	ldr	r0, [sp, #4]
   2a26c:	eor	lr, lr, r1, ror #22
   2a270:	str	r3, [sp, #32]
   2a274:	orr	r9, r9, sl
   2a278:	ldr	r3, [sp]
   2a27c:	eor	fp, fp, r5, ror #17
   2a280:	add	ip, ip, r7
   2a284:	add	r9, lr, r9
   2a288:	add	r4, r4, r8
   2a28c:	eor	fp, fp, r5, lsr #10
   2a290:	add	r3, r3, ip
   2a294:	add	fp, r4, fp
   2a298:	add	ip, r9, ip
   2a29c:	eor	r7, r0, r2
   2a2a0:	movw	r9, #65530	; 0xfffa
   2a2a4:	ldr	r0, [sp, #20]
   2a2a8:	movt	r9, #37054	; 0x90be
   2a2ac:	and	r7, r7, r3
   2a2b0:	add	r9, fp, r9
   2a2b4:	ldr	sl, [sp, #40]	; 0x28
   2a2b8:	add	r0, r9, r0
   2a2bc:	ldr	r9, [sp, #4]
   2a2c0:	orr	r8, r1, ip
   2a2c4:	str	r1, [sp, #20]
   2a2c8:	eor	r7, r7, r9
   2a2cc:	and	r9, r1, ip
   2a2d0:	ldr	r1, [sp, #8]
   2a2d4:	ror	r5, r3, #11
   2a2d8:	ror	r4, ip, #13
   2a2dc:	eor	r5, r5, r3, ror #6
   2a2e0:	and	r8, r8, r1
   2a2e4:	eor	r4, r4, ip, ror #2
   2a2e8:	eor	r5, r5, r3, ror #25
   2a2ec:	eor	r4, r4, ip, ror #22
   2a2f0:	ror	lr, sl, #18
   2a2f4:	add	r0, r7, r0
   2a2f8:	orr	r8, r8, r9
   2a2fc:	add	r0, r0, r5
   2a300:	add	r8, r4, r8
   2a304:	ldr	r5, [sp, #32]
   2a308:	ldr	r4, [sp, #12]
   2a30c:	eor	lr, lr, sl, ror #7
   2a310:	eor	lr, lr, sl, lsr #3
   2a314:	ror	sl, r6, #19
   2a318:	add	lr, lr, r4
   2a31c:	eor	r4, sl, r6, ror #17
   2a320:	add	sl, r5, r0
   2a324:	ldr	r5, [sp, #24]
   2a328:	eor	r6, r4, r6, lsr #10
   2a32c:	add	r0, r8, r0
   2a330:	add	lr, lr, r5
   2a334:	ldr	r8, [sp, #20]
   2a338:	add	r5, lr, r6
   2a33c:	ldr	r1, [sp, #4]
   2a340:	movw	r7, #27883	; 0x6ceb
   2a344:	movt	r7, #42064	; 0xa450
   2a348:	mov	lr, r5
   2a34c:	eor	r5, r2, r3
   2a350:	add	r7, lr, r7
   2a354:	orr	r6, ip, r0
   2a358:	and	r5, r5, sl
   2a35c:	str	lr, [sp]
   2a360:	eor	r5, r5, r2
   2a364:	ror	r4, sl, #11
   2a368:	ror	lr, r0, #13
   2a36c:	add	r1, r7, r1
   2a370:	and	r6, r6, r8
   2a374:	ldr	r8, [sp, #16]
   2a378:	and	r7, ip, r0
   2a37c:	eor	r4, r4, sl, ror #6
   2a380:	eor	lr, lr, r0, ror #2
   2a384:	add	r1, r5, r1
   2a388:	ldr	r5, [sp, #16]
   2a38c:	eor	r4, r4, sl, ror #25
   2a390:	orr	r6, r6, r7
   2a394:	eor	lr, lr, r0, ror #22
   2a398:	add	r1, r1, r4
   2a39c:	add	lr, lr, r6
   2a3a0:	ldr	r4, [sp, #40]	; 0x28
   2a3a4:	ror	r8, r8, #18
   2a3a8:	ldr	r6, [sp, #8]
   2a3ac:	eor	r8, r8, r5, ror #7
   2a3b0:	movw	r9, #41975	; 0xa3f7
   2a3b4:	movt	r9, #48889	; 0xbef9
   2a3b8:	add	r9, r4, r9
   2a3bc:	eor	r8, r8, r5, lsr #3
   2a3c0:	ror	r7, fp, #19
   2a3c4:	add	r5, r6, r1
   2a3c8:	ldr	r6, [sp, #28]
   2a3cc:	add	r1, lr, r1
   2a3d0:	add	r8, r8, r9
   2a3d4:	eor	r7, r7, fp, ror #17
   2a3d8:	add	lr, r8, r6
   2a3dc:	eor	fp, r7, fp, lsr #10
   2a3e0:	eor	r8, r3, sl
   2a3e4:	add	fp, lr, fp
   2a3e8:	ror	r9, r1, #13
   2a3ec:	and	r8, r8, r5
   2a3f0:	ror	lr, r5, #11
   2a3f4:	eor	r9, r9, r1, ror #2
   2a3f8:	eor	r8, r8, r3
   2a3fc:	add	r2, fp, r2
   2a400:	eor	lr, lr, r5, ror #6
   2a404:	orr	r4, r0, r1
   2a408:	eor	r7, r9, r1, ror #22
   2a40c:	add	fp, r2, r8
   2a410:	ldr	r9, [sp, #64]	; 0x40
   2a414:	eor	lr, lr, r5, ror #25
   2a418:	and	r4, r4, ip
   2a41c:	and	r6, r0, r1
   2a420:	add	fp, fp, lr
   2a424:	ldr	lr, [sp]
   2a428:	orr	r6, r4, r6
   2a42c:	ldr	r4, [sp, #16]
   2a430:	ror	r8, r9, #18
   2a434:	movw	r2, #30962	; 0x78f2
   2a438:	movt	r2, #50801	; 0xc671
   2a43c:	add	r7, r7, r6
   2a440:	add	r2, r4, r2
   2a444:	eor	r6, r8, r9, ror #7
   2a448:	ror	r4, lr, #19
   2a44c:	eor	r6, r6, r9, lsr #3
   2a450:	eor	r4, r4, lr, ror #17
   2a454:	ldr	lr, [sp, #56]	; 0x38
   2a458:	add	r6, r6, r2
   2a45c:	add	r7, r7, fp
   2a460:	add	r6, r6, lr
   2a464:	ldr	lr, [sp]
   2a468:	ldr	r8, [sp, #20]
   2a46c:	orr	r9, r1, r7
   2a470:	ror	r2, r7, #13
   2a474:	and	r9, r9, r0
   2a478:	add	fp, r8, fp
   2a47c:	eor	r4, r4, lr, lsr #10
   2a480:	eor	r8, sl, r5
   2a484:	and	lr, r1, r7
   2a488:	and	r8, r8, fp
   2a48c:	eor	r2, r2, r7, ror #2
   2a490:	add	r6, r6, r4
   2a494:	orr	r9, r9, lr
   2a498:	ldr	lr, [sp, #96]	; 0x60
   2a49c:	eor	r2, r2, r7, ror #22
   2a4a0:	add	r6, r6, r3
   2a4a4:	ror	r4, fp, #11
   2a4a8:	eor	r8, r8, sl
   2a4ac:	add	ip, lr, ip
   2a4b0:	eor	r4, r4, fp, ror #6
   2a4b4:	ldr	lr, [sp, #88]	; 0x58
   2a4b8:	add	r9, r2, r9
   2a4bc:	add	r8, r6, r8
   2a4c0:	ldr	r2, [sp, #80]	; 0x50
   2a4c4:	eor	r4, r4, fp, ror #25
   2a4c8:	ldr	r6, [sp, #104]	; 0x68
   2a4cc:	add	r8, r8, r4
   2a4d0:	ldr	r3, [sp, #108]	; 0x6c
   2a4d4:	add	r5, lr, r5
   2a4d8:	add	sl, r6, sl
   2a4dc:	ldr	lr, [sp, #76]	; 0x4c
   2a4e0:	ldr	r6, [sp, #92]	; 0x5c
   2a4e4:	add	r9, r9, r2
   2a4e8:	ldr	r4, [sp, #84]	; 0x54
   2a4ec:	add	r9, r9, r8
   2a4f0:	ldr	r2, [sp, #100]	; 0x64
   2a4f4:	add	r0, r6, r0
   2a4f8:	str	sl, [r3, #36]	; 0x24
   2a4fc:	add	r1, lr, r1
   2a500:	str	r0, [r3, #20]
   2a504:	add	r7, r4, r7
   2a508:	str	r5, [r3, #32]
   2a50c:	add	fp, r2, fp
   2a510:	str	r1, [r3, #16]
   2a514:	add	r8, ip, r8
   2a518:	str	r7, [r3, #12]
   2a51c:	str	fp, [r3, #28]
   2a520:	str	r9, [r3, #8]
   2a524:	str	r8, [r3, #24]
   2a528:	add	sp, sp, #116	; 0x74
   2a52c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a530:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a534:	mov	r6, r0
   2a538:	ldr	r8, [r0]
   2a53c:	mov	r7, r2
   2a540:	mov	r4, r1
   2a544:	adds	r3, r8, r2
   2a548:	str	r3, [r0]
   2a54c:	and	r8, r8, #63	; 0x3f
   2a550:	ldrcs	r3, [r0, #4]
   2a554:	rsb	r5, r8, #64	; 0x40
   2a558:	addcs	r3, r3, #1
   2a55c:	strcs	r3, [r0, #4]
   2a560:	cmp	r5, r2
   2a564:	movhi	r3, #0
   2a568:	movls	r3, #1
   2a56c:	cmp	r8, #0
   2a570:	moveq	r3, #0
   2a574:	cmp	r3, #0
   2a578:	bne	2a5d0 <crc32@@Base+0x10b78>
   2a57c:	cmp	r7, #63	; 0x3f
   2a580:	bls	2a5b0 <crc32@@Base+0x10b58>
   2a584:	sub	r5, r7, #64	; 0x40
   2a588:	bic	r5, r5, #63	; 0x3f
   2a58c:	add	r5, r5, #64	; 0x40
   2a590:	add	r5, r4, r5
   2a594:	mov	r1, r4
   2a598:	mov	r0, r6
   2a59c:	add	r4, r4, #64	; 0x40
   2a5a0:	bl	28254 <crc32@@Base+0xe7fc>
   2a5a4:	cmp	r4, r5
   2a5a8:	bne	2a594 <crc32@@Base+0x10b3c>
   2a5ac:	and	r7, r7, #63	; 0x3f
   2a5b0:	cmp	r7, #0
   2a5b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a5b8:	add	r0, r6, #40	; 0x28
   2a5bc:	mov	r2, r7
   2a5c0:	add	r0, r0, r8
   2a5c4:	mov	r1, r4
   2a5c8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a5cc:	b	125c0 <memcpy@plt>
   2a5d0:	add	r9, r0, #40	; 0x28
   2a5d4:	mov	r2, r5
   2a5d8:	add	r0, r9, r8
   2a5dc:	sub	r7, r7, r5
   2a5e0:	bl	125c0 <memcpy@plt>
   2a5e4:	mov	r1, r9
   2a5e8:	mov	r0, r6
   2a5ec:	add	r4, r4, r5
   2a5f0:	bl	28254 <crc32@@Base+0xe7fc>
   2a5f4:	mov	r8, #0
   2a5f8:	b	2a57c <crc32@@Base+0x10b24>
   2a5fc:	movw	r2, #58983	; 0xe667
   2a600:	movw	r3, #44677	; 0xae85
   2a604:	movt	r2, #27145	; 0x6a09
   2a608:	movt	r3, #47975	; 0xbb67
   2a60c:	strd	r2, [r0, #8]
   2a610:	movw	r2, #62322	; 0xf372
   2a614:	movw	r3, #62778	; 0xf53a
   2a618:	movt	r2, #15470	; 0x3c6e
   2a61c:	movt	r3, #42319	; 0xa54f
   2a620:	strd	r2, [r0, #16]
   2a624:	movw	r2, #21119	; 0x527f
   2a628:	movw	r3, #26764	; 0x688c
   2a62c:	movt	r2, #20750	; 0x510e
   2a630:	movt	r3, #39685	; 0x9b05
   2a634:	strd	r2, [r0, #24]
   2a638:	movw	r2, #55723	; 0xd9ab
   2a63c:	movw	r3, #52505	; 0xcd19
   2a640:	movt	r2, #8067	; 0x1f83
   2a644:	movt	r3, #23520	; 0x5be0
   2a648:	strd	r2, [r0, #32]
   2a64c:	mov	r3, #0
   2a650:	str	r3, [r0]
   2a654:	str	r3, [r0, #4]
   2a658:	bx	lr
   2a65c:	cmp	r2, #0
   2a660:	bxeq	lr
   2a664:	b	2a530 <crc32@@Base+0x10ad8>
   2a668:	ldr	r3, [r0]
   2a66c:	push	{r4, r5, r6, lr}
   2a670:	mov	r4, r0
   2a674:	ldr	r0, [r0, #4]
   2a678:	movw	r6, #61168	; 0xeef0
   2a67c:	movt	r6, #4
   2a680:	mov	r5, r1
   2a684:	lsr	r1, r3, #29
   2a688:	sub	sp, sp, #16
   2a68c:	orr	r1, r1, r0, lsl #3
   2a690:	ldr	r0, [r6]
   2a694:	and	r2, r3, #63	; 0x3f
   2a698:	lsl	r3, r3, #3
   2a69c:	cmp	r2, #55	; 0x37
   2a6a0:	lsr	ip, r1, #24
   2a6a4:	rsbls	r2, r2, #56	; 0x38
   2a6a8:	rsbhi	r2, r2, #120	; 0x78
   2a6ac:	strb	r1, [sp, #7]
   2a6b0:	strb	ip, [sp, #4]
   2a6b4:	lsr	ip, r1, #16
   2a6b8:	str	r0, [sp, #12]
   2a6bc:	lsr	r1, r1, #8
   2a6c0:	mov	r0, r4
   2a6c4:	strb	r1, [sp, #6]
   2a6c8:	lsr	r1, r3, #24
   2a6cc:	strb	r1, [sp, #8]
   2a6d0:	lsr	r1, r3, #16
   2a6d4:	strb	r1, [sp, #9]
   2a6d8:	movw	r1, #64344	; 0xfb58
   2a6dc:	movt	r1, #4
   2a6e0:	strb	r3, [sp, #11]
   2a6e4:	lsr	r3, r3, #8
   2a6e8:	strb	ip, [sp, #5]
   2a6ec:	strb	r3, [sp, #10]
   2a6f0:	bl	2a530 <crc32@@Base+0x10ad8>
   2a6f4:	mov	r2, #8
   2a6f8:	add	r1, sp, #4
   2a6fc:	mov	r0, r4
   2a700:	bl	2a530 <crc32@@Base+0x10ad8>
   2a704:	ldrb	r3, [r4, #11]
   2a708:	strb	r3, [r5]
   2a70c:	ldrh	r3, [r4, #10]
   2a710:	strb	r3, [r5, #1]
   2a714:	ldr	r3, [r4, #8]
   2a718:	lsr	r3, r3, #8
   2a71c:	strb	r3, [r5, #2]
   2a720:	ldr	r3, [r4, #8]
   2a724:	strb	r3, [r5, #3]
   2a728:	ldrb	r3, [r4, #15]
   2a72c:	strb	r3, [r5, #4]
   2a730:	ldrh	r3, [r4, #14]
   2a734:	strb	r3, [r5, #5]
   2a738:	ldr	r3, [r4, #12]
   2a73c:	lsr	r3, r3, #8
   2a740:	strb	r3, [r5, #6]
   2a744:	ldr	r3, [r4, #12]
   2a748:	strb	r3, [r5, #7]
   2a74c:	ldrb	r3, [r4, #19]
   2a750:	strb	r3, [r5, #8]
   2a754:	ldrh	r3, [r4, #18]
   2a758:	strb	r3, [r5, #9]
   2a75c:	ldr	r3, [r4, #16]
   2a760:	lsr	r3, r3, #8
   2a764:	strb	r3, [r5, #10]
   2a768:	ldr	r3, [r4, #16]
   2a76c:	strb	r3, [r5, #11]
   2a770:	ldrb	r3, [r4, #23]
   2a774:	strb	r3, [r5, #12]
   2a778:	ldrh	r3, [r4, #22]
   2a77c:	strb	r3, [r5, #13]
   2a780:	ldr	r3, [r4, #20]
   2a784:	lsr	r3, r3, #8
   2a788:	strb	r3, [r5, #14]
   2a78c:	ldr	r3, [r4, #20]
   2a790:	strb	r3, [r5, #15]
   2a794:	ldrb	r3, [r4, #27]
   2a798:	strb	r3, [r5, #16]
   2a79c:	ldrh	r3, [r4, #26]
   2a7a0:	strb	r3, [r5, #17]
   2a7a4:	ldr	r3, [r4, #24]
   2a7a8:	lsr	r3, r3, #8
   2a7ac:	strb	r3, [r5, #18]
   2a7b0:	ldr	r3, [r4, #24]
   2a7b4:	strb	r3, [r5, #19]
   2a7b8:	ldrb	r3, [r4, #31]
   2a7bc:	strb	r3, [r5, #20]
   2a7c0:	ldrh	r3, [r4, #30]
   2a7c4:	strb	r3, [r5, #21]
   2a7c8:	ldr	r3, [r4, #28]
   2a7cc:	lsr	r3, r3, #8
   2a7d0:	strb	r3, [r5, #22]
   2a7d4:	ldr	r3, [r4, #28]
   2a7d8:	strb	r3, [r5, #23]
   2a7dc:	ldrb	r3, [r4, #35]	; 0x23
   2a7e0:	strb	r3, [r5, #24]
   2a7e4:	ldrh	r3, [r4, #34]	; 0x22
   2a7e8:	strb	r3, [r5, #25]
   2a7ec:	ldr	r3, [r4, #32]
   2a7f0:	lsr	r3, r3, #8
   2a7f4:	strb	r3, [r5, #26]
   2a7f8:	ldr	r3, [r4, #32]
   2a7fc:	strb	r3, [r5, #27]
   2a800:	ldrb	r3, [r4, #39]	; 0x27
   2a804:	strb	r3, [r5, #28]
   2a808:	ldrh	r3, [r4, #38]	; 0x26
   2a80c:	strb	r3, [r5, #29]
   2a810:	ldr	r3, [r4, #36]	; 0x24
   2a814:	lsr	r3, r3, #8
   2a818:	strb	r3, [r5, #30]
   2a81c:	ldr	r3, [r4, #36]	; 0x24
   2a820:	strb	r3, [r5, #31]
   2a824:	ldr	r2, [sp, #12]
   2a828:	ldr	r3, [r6]
   2a82c:	cmp	r2, r3
   2a830:	bne	2a83c <crc32@@Base+0x10de4>
   2a834:	add	sp, sp, #16
   2a838:	pop	{r4, r5, r6, pc}
   2a83c:	bl	124b8 <__stack_chk_fail@plt>
   2a840:	push	{r4, r5, r6, lr}
   2a844:	movw	r4, #61168	; 0xeef0
   2a848:	movt	r4, #4
   2a84c:	subs	ip, r1, #0
   2a850:	sub	sp, sp, #112	; 0x70
   2a854:	movw	r3, #58983	; 0xe667
   2a858:	ldr	r1, [r4]
   2a85c:	movt	r3, #27145	; 0x6a09
   2a860:	add	r6, sp, #4
   2a864:	str	r3, [sp, #12]
   2a868:	mov	r5, r2
   2a86c:	movw	r3, #44677	; 0xae85
   2a870:	str	r1, [sp, #108]	; 0x6c
   2a874:	movt	r3, #47975	; 0xbb67
   2a878:	str	r3, [sp, #16]
   2a87c:	movw	r3, #62322	; 0xf372
   2a880:	movt	r3, #15470	; 0x3c6e
   2a884:	str	r3, [sp, #20]
   2a888:	movw	r3, #62778	; 0xf53a
   2a88c:	movt	r3, #42319	; 0xa54f
   2a890:	str	r3, [sp, #24]
   2a894:	movw	r3, #21119	; 0x527f
   2a898:	movt	r3, #20750	; 0x510e
   2a89c:	str	r3, [sp, #28]
   2a8a0:	movw	r3, #26764	; 0x688c
   2a8a4:	movt	r3, #39685	; 0x9b05
   2a8a8:	str	r3, [sp, #32]
   2a8ac:	movw	r3, #55723	; 0xd9ab
   2a8b0:	movt	r3, #8067	; 0x1f83
   2a8b4:	str	r3, [sp, #36]	; 0x24
   2a8b8:	movw	r3, #52505	; 0xcd19
   2a8bc:	movt	r3, #23520	; 0x5be0
   2a8c0:	str	r3, [sp, #40]	; 0x28
   2a8c4:	mov	r3, #0
   2a8c8:	str	r3, [sp, #4]
   2a8cc:	str	r3, [sp, #8]
   2a8d0:	beq	2a8e4 <crc32@@Base+0x10e8c>
   2a8d4:	mov	r1, r0
   2a8d8:	mov	r2, ip
   2a8dc:	mov	r0, r6
   2a8e0:	bl	2a530 <crc32@@Base+0x10ad8>
   2a8e4:	mov	r1, r5
   2a8e8:	mov	r0, r6
   2a8ec:	bl	2a668 <crc32@@Base+0x10c10>
   2a8f0:	ldr	r2, [sp, #108]	; 0x6c
   2a8f4:	ldr	r3, [r4]
   2a8f8:	cmp	r2, r3
   2a8fc:	bne	2a908 <crc32@@Base+0x10eb0>
   2a900:	add	sp, sp, #112	; 0x70
   2a904:	pop	{r4, r5, r6, pc}
   2a908:	bl	124b8 <__stack_chk_fail@plt>
   2a90c:	ldr	r0, [r0, #4]
   2a910:	cmp	r0, r3
   2a914:	bgt	2a934 <crc32@@Base+0x10edc>
   2a918:	ldr	r3, [r1]
   2a91c:	mov	r0, r1
   2a920:	push	{r4, lr}
   2a924:	str	r3, [r2]
   2a928:	bl	1214c <free@plt>
   2a92c:	mov	r0, #0
   2a930:	pop	{r4, pc}
   2a934:	mvn	r0, #0
   2a938:	bx	lr
   2a93c:	ldr	r0, [r0, #4]
   2a940:	cmp	r0, r3
   2a944:	bgt	2a964 <crc32@@Base+0x10f0c>
   2a948:	ldrh	r3, [r1]
   2a94c:	mov	r0, r1
   2a950:	push	{r4, lr}
   2a954:	strh	r3, [r2]
   2a958:	bl	1214c <free@plt>
   2a95c:	mov	r0, #0
   2a960:	pop	{r4, pc}
   2a964:	mvn	r0, #0
   2a968:	bx	lr
   2a96c:	push	{r4, lr}
   2a970:	mov	r4, r1
   2a974:	ldr	r0, [r4]
   2a978:	mov	r1, r2
   2a97c:	mov	r2, r3
   2a980:	bl	19a58 <crc32@@Base>
   2a984:	str	r0, [r4]
   2a988:	mov	r0, #0
   2a98c:	pop	{r4, pc}
   2a990:	push	{r4, lr}
   2a994:	mov	r0, #4
   2a998:	mov	r4, r1
   2a99c:	bl	125cc <malloc@plt>
   2a9a0:	mov	r3, #0
   2a9a4:	str	r0, [r4]
   2a9a8:	str	r3, [r0]
   2a9ac:	mov	r0, r3
   2a9b0:	pop	{r4, pc}
   2a9b4:	push	{r4, lr}
   2a9b8:	mov	r0, #2
   2a9bc:	mov	r4, r1
   2a9c0:	bl	125cc <malloc@plt>
   2a9c4:	mov	r3, #0
   2a9c8:	str	r0, [r4]
   2a9cc:	strh	r3, [r0]
   2a9d0:	mov	r0, r3
   2a9d4:	pop	{r4, pc}
   2a9d8:	push	{r4, lr}
   2a9dc:	mov	r4, r1
   2a9e0:	ldrh	r0, [r4]
   2a9e4:	mov	r1, r2
   2a9e8:	mov	r2, r3
   2a9ec:	bl	26820 <crc32@@Base+0xcdc8>
   2a9f0:	strh	r0, [r4]
   2a9f4:	mov	r0, #0
   2a9f8:	pop	{r4, pc}
   2a9fc:	ldr	r0, [r0, #4]
   2aa00:	cmp	r0, r3
   2aa04:	bgt	2aa2c <crc32@@Base+0x10fd4>
   2aa08:	push	{r4, lr}
   2aa0c:	mov	r4, r1
   2aa10:	mov	r0, r4
   2aa14:	mov	r1, r2
   2aa18:	bl	2a668 <crc32@@Base+0x10c10>
   2aa1c:	mov	r0, r4
   2aa20:	bl	1214c <free@plt>
   2aa24:	mov	r0, #0
   2aa28:	pop	{r4, pc}
   2aa2c:	mvn	r0, #0
   2aa30:	bx	lr
   2aa34:	mov	r0, r1
   2aa38:	mov	r1, r2
   2aa3c:	push	{r4, lr}
   2aa40:	mov	r2, r3
   2aa44:	bl	2a65c <crc32@@Base+0x10c04>
   2aa48:	mov	r0, #0
   2aa4c:	pop	{r4, pc}
   2aa50:	push	{r4, r5, r6, lr}
   2aa54:	mov	r0, #104	; 0x68
   2aa58:	mov	r4, r1
   2aa5c:	bl	125cc <malloc@plt>
   2aa60:	mov	r5, r0
   2aa64:	bl	2a5fc <crc32@@Base+0x10ba4>
   2aa68:	str	r5, [r4]
   2aa6c:	mov	r0, #0
   2aa70:	pop	{r4, r5, r6, pc}
   2aa74:	ldr	r0, [r0, #4]
   2aa78:	cmp	r0, r3
   2aa7c:	bgt	2aaa4 <crc32@@Base+0x1104c>
   2aa80:	push	{r4, lr}
   2aa84:	mov	r4, r1
   2aa88:	mov	r0, r4
   2aa8c:	mov	r1, r2
   2aa90:	bl	27de4 <crc32@@Base+0xe38c>
   2aa94:	mov	r0, r4
   2aa98:	bl	1214c <free@plt>
   2aa9c:	mov	r0, #0
   2aaa0:	pop	{r4, pc}
   2aaa4:	mvn	r0, #0
   2aaa8:	bx	lr
   2aaac:	mov	r0, r1
   2aab0:	mov	r1, r2
   2aab4:	push	{r4, lr}
   2aab8:	mov	r2, r3
   2aabc:	bl	27dd8 <crc32@@Base+0xe380>
   2aac0:	mov	r0, #0
   2aac4:	pop	{r4, pc}
   2aac8:	push	{r4, r5, r6, lr}
   2aacc:	mov	r0, #92	; 0x5c
   2aad0:	mov	r4, r1
   2aad4:	bl	125cc <malloc@plt>
   2aad8:	mov	r5, r0
   2aadc:	bl	27d94 <crc32@@Base+0xe33c>
   2aae0:	str	r5, [r4]
   2aae4:	mov	r0, #0
   2aae8:	pop	{r4, r5, r6, pc}
   2aaec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2aaf0:	movw	r5, #64408	; 0xfb98
   2aaf4:	movt	r5, #4
   2aaf8:	mov	r8, r0
   2aafc:	mov	r9, r1
   2ab00:	mov	r4, #0
   2ab04:	mov	r7, #28
   2ab08:	mul	r6, r7, r4
   2ab0c:	mov	r0, r8
   2ab10:	add	r4, r4, #1
   2ab14:	ldr	r1, [r5, r6]
   2ab18:	bl	12680 <strcmp@plt>
   2ab1c:	cmp	r0, #0
   2ab20:	beq	2ab34 <crc32@@Base+0x110dc>
   2ab24:	cmp	r4, #4
   2ab28:	bne	2ab08 <crc32@@Base+0x110b0>
   2ab2c:	mvn	r0, #92	; 0x5c
   2ab30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ab34:	add	r5, r5, r6
   2ab38:	str	r5, [r9]
   2ab3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ab40:	push	{r4, r5, r6, r7, r8, lr}
   2ab44:	mov	r6, r0
   2ab48:	ldr	r4, [pc, #84]	; 2aba4 <crc32@@Base+0x1114c>
   2ab4c:	mov	r7, r1
   2ab50:	mov	r5, #0
   2ab54:	ldr	r1, [r4, #-16]
   2ab58:	mov	r0, r6
   2ab5c:	bl	12680 <strcmp@plt>
   2ab60:	cmp	r0, #0
   2ab64:	bne	2ab74 <crc32@@Base+0x1111c>
   2ab68:	ldr	r3, [r4]
   2ab6c:	cmp	r3, #0
   2ab70:	bne	2ab8c <crc32@@Base+0x11134>
   2ab74:	add	r5, r5, #1
   2ab78:	add	r4, r4, #28
   2ab7c:	cmp	r5, #4
   2ab80:	bne	2ab54 <crc32@@Base+0x110fc>
   2ab84:	mvn	r0, #92	; 0x5c
   2ab88:	pop	{r4, r5, r6, r7, r8, pc}
   2ab8c:	movw	r3, #64408	; 0xfb98
   2ab90:	movt	r3, #4
   2ab94:	mov	r2, #28
   2ab98:	mla	r5, r2, r5, r3
   2ab9c:	str	r5, [r7]
   2aba0:	pop	{r4, r5, r6, r7, r8, pc}
   2aba4:	andeq	pc, r4, r8, lsr #23
   2aba8:	subs	r0, r0, #11
   2abac:	movne	r0, #1
   2abb0:	bx	lr
   2abb4:	ldr	r3, [r0]
   2abb8:	mov	r0, #60672	; 0xed00
   2abbc:	movt	r0, #41388	; 0xa1ac
   2abc0:	bic	r3, r3, #255	; 0xff
   2abc4:	subs	r0, r3, r0
   2abc8:	mvnne	r0, #0
   2abcc:	bx	lr
   2abd0:	push	{r4, lr}
   2abd4:	mov	r4, r0
   2abd8:	movw	r0, #49700	; 0xc224
   2abdc:	movt	r0, #3
   2abe0:	bl	12290 <puts@plt>
   2abe4:	ldr	r2, [r4]
   2abe8:	movw	r1, #49736	; 0xc248
   2abec:	mov	r0, #1
   2abf0:	movt	r1, #3
   2abf4:	bl	12794 <__printf_chk@plt>
   2abf8:	ldr	r2, [r4, #4]
   2abfc:	movw	r1, #49756	; 0xc25c
   2ac00:	mov	r0, #1
   2ac04:	movt	r1, #3
   2ac08:	bl	12794 <__printf_chk@plt>
   2ac0c:	ldr	r2, [r4, #8]
   2ac10:	movw	r1, #49776	; 0xc270
   2ac14:	mov	r0, #1
   2ac18:	movt	r1, #3
   2ac1c:	bl	12794 <__printf_chk@plt>
   2ac20:	ldr	r2, [r4, #12]
   2ac24:	movw	r1, #49796	; 0xc284
   2ac28:	mov	r0, #1
   2ac2c:	movt	r1, #3
   2ac30:	bl	12794 <__printf_chk@plt>
   2ac34:	ldr	r2, [r4, #16]
   2ac38:	movw	r1, #49816	; 0xc298
   2ac3c:	mov	r0, #1
   2ac40:	movt	r1, #3
   2ac44:	pop	{r4, lr}
   2ac48:	b	12794 <__printf_chk@plt>
   2ac4c:	cmp	r0, #0
   2ac50:	beq	2acd4 <crc32@@Base+0x1127c>
   2ac54:	ldr	r3, [r0, #64]	; 0x40
   2ac58:	ldrb	r3, [r3]
   2ac5c:	cmp	r3, #0
   2ac60:	beq	2aca8 <crc32@@Base+0x11250>
   2ac64:	ldr	r3, [r0]
   2ac68:	ldr	r2, [r0, #8]
   2ac6c:	cmp	r3, #0
   2ac70:	beq	2ac90 <crc32@@Base+0x11238>
   2ac74:	cmp	r2, #0
   2ac78:	bne	2ac88 <crc32@@Base+0x11230>
   2ac7c:	ldr	r3, [r0, #16]
   2ac80:	cmp	r3, #0
   2ac84:	beq	2ac98 <crc32@@Base+0x11240>
   2ac88:	mov	r0, #1
   2ac8c:	bx	lr
   2ac90:	cmp	r2, #0
   2ac94:	bne	2ac7c <crc32@@Base+0x11224>
   2ac98:	ldr	r0, [r0, #28]
   2ac9c:	adds	r0, r0, #0
   2aca0:	movne	r0, #1
   2aca4:	bx	lr
   2aca8:	movw	r1, #65196	; 0xfeac
   2acac:	movt	r1, #4
   2acb0:	ldr	r3, [r0, #80]	; 0x50
   2acb4:	movw	r2, #49836	; 0xc2ac
   2acb8:	push	{r4, lr}
   2acbc:	movt	r2, #3
   2acc0:	ldr	r0, [r1]
   2acc4:	mov	r1, #1
   2acc8:	bl	122d8 <__fprintf_chk@plt>
   2accc:	mvn	r0, #0
   2acd0:	pop	{r4, pc}
   2acd4:	mvn	r0, #0
   2acd8:	bx	lr
   2acdc:	push	{r4, r5, r6, r7, r8, lr}
   2ace0:	movw	r4, #61168	; 0xeef0
   2ace4:	movt	r4, #4
   2ace8:	sub	sp, sp, #16
   2acec:	mov	r5, r0
   2acf0:	mov	r8, r1
   2acf4:	ldr	r3, [r4]
   2acf8:	mov	r7, r2
   2acfc:	str	r3, [sp, #12]
   2ad00:	bl	126b0 <__errno_location@plt>
   2ad04:	mov	r3, #0
   2ad08:	mov	r2, #16
   2ad0c:	add	r1, sp, #8
   2ad10:	mov	r6, r0
   2ad14:	mov	r0, r5
   2ad18:	str	r3, [r6]
   2ad1c:	bl	122f0 <strtoul@plt>
   2ad20:	ldr	r3, [r6]
   2ad24:	cmp	r3, #0
   2ad28:	bne	2ad50 <crc32@@Base+0x112f8>
   2ad2c:	ldr	r3, [sp, #8]
   2ad30:	cmp	r3, r5
   2ad34:	beq	2ad50 <crc32@@Base+0x112f8>
   2ad38:	ldr	r2, [sp, #12]
   2ad3c:	ldr	r3, [r4]
   2ad40:	cmp	r2, r3
   2ad44:	bne	2ad80 <crc32@@Base+0x11328>
   2ad48:	add	sp, sp, #16
   2ad4c:	pop	{r4, r5, r6, r7, r8, pc}
   2ad50:	movw	r1, #65196	; 0xfeac
   2ad54:	movt	r1, #4
   2ad58:	str	r5, [sp, #4]
   2ad5c:	mov	r3, r8
   2ad60:	str	r7, [sp]
   2ad64:	movw	r2, #26316	; 0x66cc
   2ad68:	ldr	r0, [r1]
   2ad6c:	movt	r2, #3
   2ad70:	mov	r1, #1
   2ad74:	bl	122d8 <__fprintf_chk@plt>
   2ad78:	mov	r0, #1
   2ad7c:	bl	12218 <exit@plt>
   2ad80:	bl	124b8 <__stack_chk_fail@plt>
   2ad84:	movw	r2, #61168	; 0xeef0
   2ad88:	movt	r2, #4
   2ad8c:	ldr	ip, [r3, #64]	; 0x40
   2ad90:	movw	r1, #50292	; 0xc474
   2ad94:	ldr	r3, [r2]
   2ad98:	movt	r1, #3
   2ad9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ada0:	sub	sp, sp, #52	; 0x34
   2ada4:	mov	r9, r0
   2ada8:	mov	r0, ip
   2adac:	str	r2, [sp, #20]
   2adb0:	mov	r2, #0
   2adb4:	str	r3, [sp, #44]	; 0x2c
   2adb8:	str	r2, [sp, #28]
   2adbc:	str	ip, [sp, #12]
   2adc0:	bl	12350 <fopen@plt>
   2adc4:	subs	r3, r0, #0
   2adc8:	str	r3, [sp, #8]
   2adcc:	addne	r1, r9, #2048	; 0x800
   2add0:	movne	r3, r9
   2add4:	mvnne	r2, #0
   2add8:	beq	2b190 <crc32@@Base+0x11738>
   2addc:	strb	r2, [r3], #1
   2ade0:	cmp	r3, r1
   2ade4:	bne	2addc <crc32@@Base+0x11384>
   2ade8:	movw	r8, #64520	; 0xfc08
   2adec:	movw	fp, #26248	; 0x6688
   2adf0:	movw	r5, #26252	; 0x668c
   2adf4:	movt	r8, #4
   2adf8:	movt	fp, #3
   2adfc:	movt	r5, #3
   2ae00:	mov	r7, #0
   2ae04:	mov	r3, #60672	; 0xed00
   2ae08:	movt	r3, #41388	; 0xa1ac
   2ae0c:	str	r3, [sp, #16]
   2ae10:	ldr	r3, [sp, #8]
   2ae14:	mov	r2, #10
   2ae18:	add	r1, sp, #40	; 0x28
   2ae1c:	add	r0, sp, #28
   2ae20:	bl	12158 <__getdelim@plt>
   2ae24:	cmp	r0, #0
   2ae28:	ble	2b128 <crc32@@Base+0x116d0>
   2ae2c:	add	r2, sp, #32
   2ae30:	mov	r1, fp
   2ae34:	ldr	r0, [sp, #28]
   2ae38:	add	r7, r7, #1
   2ae3c:	bl	12248 <__strtok_r@plt>
   2ae40:	cmp	r0, #0
   2ae44:	beq	2ae10 <crc32@@Base+0x113b8>
   2ae48:	mov	sl, #0
   2ae4c:	str	r0, [sp, #28]
   2ae50:	mov	r6, sl
   2ae54:	add	r2, sp, #36	; 0x24
   2ae58:	mov	r1, r5
   2ae5c:	bl	12248 <__strtok_r@plt>
   2ae60:	subs	r4, r0, #0
   2ae64:	beq	2ae10 <crc32@@Base+0x113b8>
   2ae68:	ldrb	r3, [r4]
   2ae6c:	cmp	r3, #35	; 0x23
   2ae70:	beq	2ae10 <crc32@@Base+0x113b8>
   2ae74:	cmp	r6, #0
   2ae78:	bne	2b14c <crc32@@Base+0x116f4>
   2ae7c:	movw	r1, #49920	; 0xc300
   2ae80:	mov	r2, r4
   2ae84:	movt	r1, #3
   2ae88:	mov	r0, r8
   2ae8c:	bl	1a8d8 <crc32@@Base+0xe80>
   2ae90:	subs	sl, r0, #0
   2ae94:	blt	2b160 <crc32@@Base+0x11708>
   2ae98:	mov	r0, r6
   2ae9c:	add	r2, sp, #36	; 0x24
   2aea0:	mov	r1, r5
   2aea4:	str	r6, [sp, #28]
   2aea8:	bl	12248 <__strtok_r@plt>
   2aeac:	subs	r4, r0, #0
   2aeb0:	beq	2ae10 <crc32@@Base+0x113b8>
   2aeb4:	ldrb	r3, [r4]
   2aeb8:	cmp	r3, #35	; 0x23
   2aebc:	beq	2ae10 <crc32@@Base+0x113b8>
   2aec0:	sub	r3, sl, #1
   2aec4:	cmp	r3, #5
   2aec8:	ldrls	pc, [pc, r3, lsl #2]
   2aecc:	b	2b0f4 <crc32@@Base+0x1169c>
   2aed0:	andeq	sl, r2, ip, lsl #31
   2aed4:	andeq	fp, r2, r4, lsl #1
   2aed8:	andeq	fp, r2, ip, asr #32
   2aedc:	strheq	fp, [r2], -ip
   2aee0:	andeq	sl, r2, r8, ror #29
   2aee4:	andeq	fp, r2, r4, lsl r0
   2aee8:	mov	r0, r4
   2aeec:	mov	r2, r7
   2aef0:	ldr	r1, [sp, #12]
   2aef4:	mov	r4, #0
   2aef8:	bl	2acdc <crc32@@Base+0x11284>
   2aefc:	add	r2, sp, #36	; 0x24
   2af00:	mov	r1, r5
   2af04:	str	r4, [sp, #28]
   2af08:	str	r0, [r9, #16]
   2af0c:	mov	r0, r4
   2af10:	bl	12248 <__strtok_r@plt>
   2af14:	cmp	r0, #0
   2af18:	beq	2ae10 <crc32@@Base+0x113b8>
   2af1c:	ldrb	r3, [r0]
   2af20:	cmp	r3, #35	; 0x23
   2af24:	beq	2ae10 <crc32@@Base+0x113b8>
   2af28:	add	r2, sp, #36	; 0x24
   2af2c:	mov	r1, r5
   2af30:	mov	r0, r4
   2af34:	str	r4, [sp, #28]
   2af38:	bl	12248 <__strtok_r@plt>
   2af3c:	cmp	r0, #0
   2af40:	beq	2ae10 <crc32@@Base+0x113b8>
   2af44:	ldrb	r3, [r0]
   2af48:	cmp	r3, #35	; 0x23
   2af4c:	beq	2ae10 <crc32@@Base+0x113b8>
   2af50:	mov	r0, r4
   2af54:	add	r2, sp, #36	; 0x24
   2af58:	mov	r1, r5
   2af5c:	str	r4, [sp, #28]
   2af60:	bl	12248 <__strtok_r@plt>
   2af64:	cmp	r0, #0
   2af68:	beq	2ae10 <crc32@@Base+0x113b8>
   2af6c:	ldrb	r3, [r0]
   2af70:	cmp	r3, #35	; 0x23
   2af74:	beq	2ae10 <crc32@@Base+0x113b8>
   2af78:	mov	r6, #4
   2af7c:	mov	r0, #0
   2af80:	add	r6, r6, #1
   2af84:	str	r0, [sp, #28]
   2af88:	b	2ae54 <crc32@@Base+0x113fc>
   2af8c:	movw	r1, #49940	; 0xc314
   2af90:	mov	r2, r4
   2af94:	movt	r1, #3
   2af98:	ldr	r0, [pc, #588]	; 2b1ec <crc32@@Base+0x11794>
   2af9c:	bl	1a8d8 <crc32@@Base+0xe80>
   2afa0:	cmn	r0, #1
   2afa4:	str	r0, [r9]
   2afa8:	beq	2b1bc <crc32@@Base+0x11764>
   2afac:	ldr	r3, [r8, #108]	; 0x6c
   2afb0:	mov	r1, r5
   2afb4:	ldr	r2, [sp, #16]
   2afb8:	cmp	r3, #1
   2afbc:	mov	r3, #0
   2afc0:	add	r0, r0, r2
   2afc4:	add	r2, sp, #36	; 0x24
   2afc8:	str	r0, [r9]
   2afcc:	mov	r0, r3
   2afd0:	bne	2b158 <crc32@@Base+0x11700>
   2afd4:	str	r3, [sp, #28]
   2afd8:	bl	12248 <__strtok_r@plt>
   2afdc:	cmp	r0, #0
   2afe0:	beq	2ae10 <crc32@@Base+0x113b8>
   2afe4:	ldrb	r3, [r0]
   2afe8:	cmp	r3, #35	; 0x23
   2afec:	beq	2ae10 <crc32@@Base+0x113b8>
   2aff0:	mov	r4, #0
   2aff4:	add	r2, sp, #36	; 0x24
   2aff8:	mov	r0, r4
   2affc:	mov	r1, r5
   2b000:	str	r4, [sp, #28]
   2b004:	bl	12248 <__strtok_r@plt>
   2b008:	cmp	r0, #0
   2b00c:	bne	2af44 <crc32@@Base+0x114ec>
   2b010:	b	2ae10 <crc32@@Base+0x113b8>
   2b014:	mov	r0, r4
   2b018:	mov	r2, r7
   2b01c:	ldr	r1, [sp, #12]
   2b020:	mov	r4, #0
   2b024:	bl	2acdc <crc32@@Base+0x11284>
   2b028:	add	r2, sp, #36	; 0x24
   2b02c:	mov	r1, r5
   2b030:	str	r4, [sp, #28]
   2b034:	str	r0, [r9, #20]
   2b038:	mov	r0, r4
   2b03c:	bl	12248 <__strtok_r@plt>
   2b040:	cmp	r0, #0
   2b044:	bne	2af1c <crc32@@Base+0x114c4>
   2b048:	b	2ae10 <crc32@@Base+0x113b8>
   2b04c:	mov	r0, r4
   2b050:	mov	r2, r7
   2b054:	ldr	r1, [sp, #12]
   2b058:	mov	r4, #0
   2b05c:	bl	2acdc <crc32@@Base+0x11284>
   2b060:	add	r2, sp, #36	; 0x24
   2b064:	mov	r1, r5
   2b068:	str	r4, [sp, #28]
   2b06c:	str	r0, [r9, #8]
   2b070:	mov	r0, r4
   2b074:	bl	12248 <__strtok_r@plt>
   2b078:	cmp	r0, #0
   2b07c:	bne	2af1c <crc32@@Base+0x114c4>
   2b080:	b	2ae10 <crc32@@Base+0x113b8>
   2b084:	mov	r0, r4
   2b088:	mov	r2, r7
   2b08c:	ldr	r1, [sp, #12]
   2b090:	mov	r4, #0
   2b094:	bl	2acdc <crc32@@Base+0x11284>
   2b098:	add	r2, sp, #36	; 0x24
   2b09c:	mov	r1, r5
   2b0a0:	str	r4, [sp, #28]
   2b0a4:	str	r0, [r9, #4]
   2b0a8:	mov	r0, r4
   2b0ac:	bl	12248 <__strtok_r@plt>
   2b0b0:	cmp	r0, #0
   2b0b4:	bne	2af1c <crc32@@Base+0x114c4>
   2b0b8:	b	2ae10 <crc32@@Base+0x113b8>
   2b0bc:	mov	r0, r4
   2b0c0:	mov	r2, r7
   2b0c4:	ldr	r1, [sp, #12]
   2b0c8:	mov	r4, #0
   2b0cc:	bl	2acdc <crc32@@Base+0x11284>
   2b0d0:	add	r2, sp, #36	; 0x24
   2b0d4:	mov	r1, r5
   2b0d8:	str	r4, [sp, #28]
   2b0dc:	str	r0, [r9, #12]
   2b0e0:	mov	r0, r4
   2b0e4:	bl	12248 <__strtok_r@plt>
   2b0e8:	cmp	r0, #0
   2b0ec:	bne	2af1c <crc32@@Base+0x114c4>
   2b0f0:	b	2ae10 <crc32@@Base+0x113b8>
   2b0f4:	mov	r3, #0
   2b0f8:	add	r2, sp, #36	; 0x24
   2b0fc:	mov	r0, r3
   2b100:	mov	r1, r5
   2b104:	str	r3, [sp, #28]
   2b108:	bl	12248 <__strtok_r@plt>
   2b10c:	cmp	r0, #0
   2b110:	beq	2ae10 <crc32@@Base+0x113b8>
   2b114:	ldrb	r3, [r0]
   2b118:	cmp	r3, #35	; 0x23
   2b11c:	beq	2ae10 <crc32@@Base+0x113b8>
   2b120:	mov	r6, #2
   2b124:	b	2af7c <crc32@@Base+0x11524>
   2b128:	ldr	r0, [sp, #8]
   2b12c:	bl	12620 <fclose@plt>
   2b130:	ldr	r3, [sp, #20]
   2b134:	ldr	r2, [sp, #44]	; 0x2c
   2b138:	ldr	r3, [r3]
   2b13c:	cmp	r2, r3
   2b140:	bne	2b1b8 <crc32@@Base+0x11760>
   2b144:	add	sp, sp, #52	; 0x34
   2b148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b14c:	cmp	r6, #1
   2b150:	bne	2af7c <crc32@@Base+0x11524>
   2b154:	b	2aec0 <crc32@@Base+0x11468>
   2b158:	str	r3, [r8, #108]	; 0x6c
   2b15c:	b	2afd4 <crc32@@Base+0x1157c>
   2b160:	movw	r1, #65196	; 0xfeac
   2b164:	movt	r1, #4
   2b168:	str	r4, [sp, #4]
   2b16c:	movw	r2, #26276	; 0x66a4
   2b170:	str	r7, [sp]
   2b174:	movt	r2, #3
   2b178:	ldr	r0, [r1]
   2b17c:	mov	r1, #1
   2b180:	ldr	r3, [sp, #12]
   2b184:	bl	122d8 <__fprintf_chk@plt>
   2b188:	mov	r0, #1
   2b18c:	bl	12218 <exit@plt>
   2b190:	movw	r1, #65196	; 0xfeac
   2b194:	movt	r1, #4
   2b198:	ldr	r3, [sp, #12]
   2b19c:	movw	r2, #38444	; 0x962c
   2b1a0:	ldr	r0, [r1]
   2b1a4:	movt	r2, #3
   2b1a8:	mov	r1, #1
   2b1ac:	bl	122d8 <__fprintf_chk@plt>
   2b1b0:	mov	r0, #1
   2b1b4:	bl	12218 <exit@plt>
   2b1b8:	bl	124b8 <__stack_chk_fail@plt>
   2b1bc:	movw	r1, #65196	; 0xfeac
   2b1c0:	movt	r1, #4
   2b1c4:	str	r4, [sp, #4]
   2b1c8:	movw	r2, #49968	; 0xc330
   2b1cc:	str	r7, [sp]
   2b1d0:	movt	r2, #3
   2b1d4:	ldr	r0, [r1]
   2b1d8:	mov	r1, #1
   2b1dc:	ldr	r3, [sp, #12]
   2b1e0:	bl	122d8 <__fprintf_chk@plt>
   2b1e4:	mov	r0, #1
   2b1e8:	bl	12218 <exit@plt>
   2b1ec:	andeq	pc, r4, ip, asr ip	; <UNPREDICTABLE>
   2b1f0:	cmp	r1, #2240	; 0x8c0
   2b1f4:	bcc	2b288 <crc32@@Base+0x11830>
   2b1f8:	ldr	r3, [r0, #56]	; 0x38
   2b1fc:	cmp	r3, #0
   2b200:	bne	2b288 <crc32@@Base+0x11830>
   2b204:	ldr	r3, [r0, #68]	; 0x44
   2b208:	cmp	r3, #0
   2b20c:	bne	2b288 <crc32@@Base+0x11830>
   2b210:	ldr	r2, [r0, #32]
   2b214:	movw	r3, #21862	; 0x5566
   2b218:	movt	r3, #43673	; 0xaa99
   2b21c:	cmp	r2, r3
   2b220:	bne	2b288 <crc32@@Base+0x11830>
   2b224:	ldr	r2, [r0, #36]	; 0x24
   2b228:	movw	r3, #20056	; 0x4e58
   2b22c:	movt	r3, #22604	; 0x584c
   2b230:	cmp	r2, r3
   2b234:	bne	2b288 <crc32@@Base+0x11830>
   2b238:	ldr	ip, [r0, #44]	; 0x2c
   2b23c:	movw	r3, #41918	; 0xa3be
   2b240:	ldr	r2, [r0, #40]	; 0x28
   2b244:	movt	r3, #741	; 0x2e5
   2b248:	ldr	r1, [r0, #48]	; 0x30
   2b24c:	add	r2, r2, ip
   2b250:	ldr	ip, [r0, #60]	; 0x3c
   2b254:	push	{lr}		; (str lr, [sp, #-4]!)
   2b258:	add	r3, r2, r3
   2b25c:	ldr	lr, [r0, #52]	; 0x34
   2b260:	add	r3, r3, r1
   2b264:	ldr	r1, [r0, #64]	; 0x40
   2b268:	add	r3, r3, lr
   2b26c:	ldr	r2, [r0, #72]	; 0x48
   2b270:	add	r0, r3, ip
   2b274:	add	r0, r0, r1
   2b278:	mvn	r0, r0
   2b27c:	subs	r0, r2, r0
   2b280:	mvnne	r0, #0
   2b284:	pop	{pc}		; (ldr pc, [sp], #4)
   2b288:	mvn	r0, #0
   2b28c:	bx	lr
   2b290:	subs	r0, r0, #26
   2b294:	movne	r0, #1
   2b298:	bx	lr
   2b29c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2b2a0:	movw	r5, #61168	; 0xeef0
   2b2a4:	movt	r5, #4
   2b2a8:	sub	sp, sp, #104	; 0x68
   2b2ac:	subs	r4, r0, #0
   2b2b0:	ldr	r2, [r5]
   2b2b4:	str	r2, [sp, #100]	; 0x64
   2b2b8:	beq	2b330 <crc32@@Base+0x118d8>
   2b2bc:	add	ip, r4, #2048	; 0x800
   2b2c0:	mov	r2, r4
   2b2c4:	mvn	r0, #0
   2b2c8:	movw	lr, #21862	; 0x5566
   2b2cc:	movt	lr, #43673	; 0xaa99
   2b2d0:	str	lr, [r4, #32]
   2b2d4:	movw	lr, #20056	; 0x4e58
   2b2d8:	movt	lr, #22604	; 0x584c
   2b2dc:	str	lr, [r4, #36]	; 0x24
   2b2e0:	movw	lr, #65534	; 0xfffe
   2b2e4:	movt	lr, #60159	; 0xeaff
   2b2e8:	str	lr, [r4]
   2b2ec:	str	lr, [r4, #4]
   2b2f0:	str	lr, [r4, #8]
   2b2f4:	str	lr, [r4, #12]
   2b2f8:	str	lr, [r4, #16]
   2b2fc:	str	lr, [r4, #20]
   2b300:	str	lr, [r4, #24]
   2b304:	str	lr, [r4, #28]
   2b308:	mov	lr, #0
   2b30c:	str	lr, [r4, #40]	; 0x28
   2b310:	str	r0, [r2, #160]	; 0xa0
   2b314:	add	r2, r2, #8
   2b318:	str	r0, [r2, #156]	; 0x9c
   2b31c:	cmp	r2, ip
   2b320:	bne	2b310 <crc32@@Base+0x118b8>
   2b324:	mov	r2, #0
   2b328:	str	r2, [r4, #56]	; 0x38
   2b32c:	str	r2, [r4, #68]	; 0x44
   2b330:	ldr	ip, [r3, #4]
   2b334:	mov	r0, #2240	; 0x8c0
   2b338:	ldr	r2, [r1, #44]	; 0x2c
   2b33c:	mov	r1, #0
   2b340:	cmp	ip, #0
   2b344:	str	r1, [r4, #60]	; 0x3c
   2b348:	ldr	r6, [r3, #68]	; 0x44
   2b34c:	ldrne	r1, [r3, #60]	; 0x3c
   2b350:	str	r0, [r4, #48]	; 0x30
   2b354:	str	r2, [r4, #52]	; 0x34
   2b358:	strne	r1, [r4, #60]	; 0x3c
   2b35c:	str	r2, [r4, #64]	; 0x40
   2b360:	ldrb	r3, [r6]
   2b364:	cmp	r3, #0
   2b368:	moveq	r0, r2
   2b36c:	moveq	lr, #2240	; 0x8c0
   2b370:	bne	2b3d4 <crc32@@Base+0x1197c>
   2b374:	ldr	ip, [r4, #36]	; 0x24
   2b378:	ldr	r3, [r4, #32]
   2b37c:	ldr	r1, [r4, #40]	; 0x28
   2b380:	add	r3, r3, ip
   2b384:	ldr	ip, [r4, #44]	; 0x2c
   2b388:	add	r3, r3, r1
   2b38c:	ldr	r1, [r4, #56]	; 0x38
   2b390:	add	r3, r3, ip
   2b394:	ldr	ip, [r4, #60]	; 0x3c
   2b398:	add	r3, r3, r1
   2b39c:	ldr	r1, [r4, #68]	; 0x44
   2b3a0:	add	r3, r3, ip
   2b3a4:	ldr	ip, [sp, #100]	; 0x64
   2b3a8:	add	r3, r3, r1
   2b3ac:	ldr	r1, [r5]
   2b3b0:	add	r3, r3, lr
   2b3b4:	add	r3, r3, r2
   2b3b8:	cmp	ip, r1
   2b3bc:	add	r3, r3, r0
   2b3c0:	mvn	r3, r3
   2b3c4:	str	r3, [r4, #72]	; 0x48
   2b3c8:	bne	2b4dc <crc32@@Base+0x11a84>
   2b3cc:	add	sp, sp, #104	; 0x68
   2b3d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b3d4:	movw	r1, #50292	; 0xc474
   2b3d8:	mov	r0, r6
   2b3dc:	movt	r1, #3
   2b3e0:	bl	12350 <fopen@plt>
   2b3e4:	subs	r7, r0, #0
   2b3e8:	beq	2b4b4 <crc32@@Base+0x11a5c>
   2b3ec:	bl	124ac <fileno@plt>
   2b3f0:	add	r2, sp, #8
   2b3f4:	mov	r1, r0
   2b3f8:	mov	r0, #3
   2b3fc:	bl	12578 <__fxstat@plt>
   2b400:	cmp	r0, #0
   2b404:	bne	2b49c <crc32@@Base+0x11a44>
   2b408:	ldr	r3, [sp, #24]
   2b40c:	and	r3, r3, #61440	; 0xf000
   2b410:	cmp	r3, #32768	; 0x8000
   2b414:	bne	2b49c <crc32@@Base+0x11a44>
   2b418:	movw	sl, #50332	; 0xc49c
   2b41c:	movw	r9, #50340	; 0xc4a4
   2b420:	movt	sl, #3
   2b424:	movt	r9, #3
   2b428:	mov	r8, sp
   2b42c:	mov	r6, r0
   2b430:	add	r3, sp, #4
   2b434:	mov	r1, sl
   2b438:	mov	r2, r8
   2b43c:	mov	r0, r7
   2b440:	bl	12098 <fscanf@plt>
   2b444:	cmp	r0, #2
   2b448:	addeq	r3, r6, #20
   2b44c:	addeq	r6, r6, #1
   2b450:	ldmeq	r8, {r0, r1}
   2b454:	addeq	r3, r4, r3, lsl #3
   2b458:	stmeq	r3, {r0, r1}
   2b45c:	mov	r1, r9
   2b460:	mov	r0, r7
   2b464:	bl	12098 <fscanf@plt>
   2b468:	cmp	r6, #255	; 0xff
   2b46c:	movhi	r3, #0
   2b470:	movls	r3, #1
   2b474:	cmn	r0, #1
   2b478:	moveq	r3, #0
   2b47c:	cmp	r3, #0
   2b480:	bne	2b430 <crc32@@Base+0x119d8>
   2b484:	mov	r0, r7
   2b488:	bl	12620 <fclose@plt>
   2b48c:	ldr	lr, [r4, #48]	; 0x30
   2b490:	ldr	r2, [r4, #52]	; 0x34
   2b494:	ldr	r0, [r4, #64]	; 0x40
   2b498:	b	2b374 <crc32@@Base+0x1191c>
   2b49c:	mov	r0, r7
   2b4a0:	bl	12620 <fclose@plt>
   2b4a4:	ldr	lr, [r4, #48]	; 0x30
   2b4a8:	ldr	r2, [r4, #52]	; 0x34
   2b4ac:	ldr	r0, [r4, #64]	; 0x40
   2b4b0:	b	2b374 <crc32@@Base+0x1191c>
   2b4b4:	movw	r1, #65196	; 0xfeac
   2b4b8:	movt	r1, #4
   2b4bc:	mov	r3, r6
   2b4c0:	movw	r2, #50296	; 0xc478
   2b4c4:	ldr	r0, [r1]
   2b4c8:	movt	r2, #3
   2b4cc:	mov	r1, #1
   2b4d0:	bl	122d8 <__fprintf_chk@plt>
   2b4d4:	mov	r0, #1
   2b4d8:	bl	12218 <exit@plt>
   2b4dc:	bl	124b8 <__stack_chk_fail@plt>
   2b4e0:	push	{r4, r5, r6, r7, r8, lr}
   2b4e4:	mov	r4, r0
   2b4e8:	movw	r0, #50348	; 0xc4ac
   2b4ec:	movt	r0, #3
   2b4f0:	bl	12290 <puts@plt>
   2b4f4:	ldr	r2, [r4, #48]	; 0x30
   2b4f8:	movw	r1, #50396	; 0xc4dc
   2b4fc:	mov	r0, #1
   2b500:	movt	r1, #3
   2b504:	movw	r8, #65534	; 0xfffe
   2b508:	bl	12794 <__printf_chk@plt>
   2b50c:	ldr	r3, [r4, #64]	; 0x40
   2b510:	ldr	r2, [r4, #52]	; 0x34
   2b514:	movw	r1, #50420	; 0xc4f4
   2b518:	mov	r0, #1
   2b51c:	movt	r1, #3
   2b520:	bl	12794 <__printf_chk@plt>
   2b524:	ldr	r2, [r4, #60]	; 0x3c
   2b528:	movw	r1, #48248	; 0xbc78
   2b52c:	mov	r0, #1
   2b530:	movt	r1, #3
   2b534:	movw	r7, #50492	; 0xc53c
   2b538:	bl	12794 <__printf_chk@plt>
   2b53c:	ldr	r2, [r4, #44]	; 0x2c
   2b540:	movw	r1, #50468	; 0xc524
   2b544:	mov	r0, #1
   2b548:	movt	r1, #3
   2b54c:	sub	r6, r4, #4
   2b550:	bl	12794 <__printf_chk@plt>
   2b554:	ldr	r2, [r4, #72]	; 0x48
   2b558:	movw	r1, #48296	; 0xbca8
   2b55c:	mov	r0, #1
   2b560:	movt	r1, #3
   2b564:	movt	r8, #60159	; 0xeaff
   2b568:	bl	12794 <__printf_chk@plt>
   2b56c:	movt	r7, #3
   2b570:	mov	r5, #0
   2b574:	ldr	r3, [r6, #4]!
   2b578:	mov	r2, r5
   2b57c:	mov	r0, #1
   2b580:	mov	r1, r7
   2b584:	cmp	r3, r8
   2b588:	add	r5, r5, r0
   2b58c:	beq	2b594 <crc32@@Base+0x11b3c>
   2b590:	bl	12794 <__printf_chk@plt>
   2b594:	cmp	r5, #8
   2b598:	bne	2b574 <crc32@@Base+0x11b1c>
   2b59c:	movw	r6, #50572	; 0xc58c
   2b5a0:	movw	r7, #50540	; 0xc56c
   2b5a4:	movt	r6, #3
   2b5a8:	movt	r7, #3
   2b5ac:	mov	r5, #0
   2b5b0:	b	2b5c8 <crc32@@Base+0x11b70>
   2b5b4:	ldr	r3, [r4, #164]	; 0xa4
   2b5b8:	bl	12794 <__printf_chk@plt>
   2b5bc:	cmp	r5, #256	; 0x100
   2b5c0:	popeq	{r4, r5, r6, r7, r8, pc}
   2b5c4:	add	r4, r4, #8
   2b5c8:	ldr	r2, [r4, #160]	; 0xa0
   2b5cc:	add	r5, r5, #1
   2b5d0:	mov	r1, r6
   2b5d4:	mov	r0, #1
   2b5d8:	cmn	r2, #1
   2b5dc:	popeq	{r4, r5, r6, r7, r8, pc}
   2b5e0:	cmp	r5, r0
   2b5e4:	bne	2b5b4 <crc32@@Base+0x11b5c>
   2b5e8:	mov	r0, r7
   2b5ec:	bl	12290 <puts@plt>
   2b5f0:	ldrd	r2, [r4, #160]	; 0xa0
   2b5f4:	mov	r1, r6
   2b5f8:	mov	r0, r5
   2b5fc:	bl	12794 <__printf_chk@plt>
   2b600:	b	2b5c4 <crc32@@Base+0x11b6c>
   2b604:	cmp	r0, #0
   2b608:	bxeq	lr
   2b60c:	ldr	r3, [r0, #56]	; 0x38
   2b610:	push	{r4, lr}
   2b614:	cmp	r3, #0
   2b618:	bne	2b678 <crc32@@Base+0x11c20>
   2b61c:	ldr	r3, [r0, #4]
   2b620:	cmp	r3, #0
   2b624:	beq	2b634 <crc32@@Base+0x11bdc>
   2b628:	ldr	r3, [r0, #60]	; 0x3c
   2b62c:	tst	r3, #63	; 0x3f
   2b630:	bne	2b650 <crc32@@Base+0x11bf8>
   2b634:	ldr	r3, [r0, #16]
   2b638:	cmp	r3, #0
   2b63c:	ldreq	r0, [r0]
   2b640:	clzeq	r0, r0
   2b644:	lsreq	r0, r0, #5
   2b648:	movne	r0, #0
   2b64c:	pop	{r4, pc}
   2b650:	movw	r3, #65196	; 0xfeac
   2b654:	movt	r3, #4
   2b658:	mov	r2, #58	; 0x3a
   2b65c:	mov	r1, #1
   2b660:	ldr	r3, [r3]
   2b664:	movw	r0, #50640	; 0xc5d0
   2b668:	movt	r0, #3
   2b66c:	bl	1259c <fwrite@plt>
   2b670:	mvn	r0, #0
   2b674:	pop	{r4, pc}
   2b678:	movw	r3, #65196	; 0xfeac
   2b67c:	movt	r3, #4
   2b680:	mov	r2, #41	; 0x29
   2b684:	mov	r1, #1
   2b688:	ldr	r3, [r3]
   2b68c:	movw	r0, #50596	; 0xc5a4
   2b690:	movt	r0, #3
   2b694:	bl	1259c <fwrite@plt>
   2b698:	mvn	r0, #0
   2b69c:	pop	{r4, pc}
   2b6a0:	cmp	r1, #2496	; 0x9c0
   2b6a4:	bcc	2b730 <crc32@@Base+0x11cd8>
   2b6a8:	ldr	r2, [r0, #32]
   2b6ac:	movw	r3, #21862	; 0x5566
   2b6b0:	movt	r3, #43673	; 0xaa99
   2b6b4:	cmp	r2, r3
   2b6b8:	bne	2b730 <crc32@@Base+0x11cd8>
   2b6bc:	ldr	r2, [r0, #36]	; 0x24
   2b6c0:	movw	r3, #20056	; 0x4e58
   2b6c4:	movt	r3, #22604	; 0x584c
   2b6c8:	cmp	r2, r3
   2b6cc:	bne	2b730 <crc32@@Base+0x11cd8>
   2b6d0:	ldr	r1, [r0, #44]	; 0x2c
   2b6d4:	movw	r3, #41918	; 0xa3be
   2b6d8:	ldr	r2, [r0, #40]	; 0x28
   2b6dc:	movt	r3, #741	; 0x2e5
   2b6e0:	push	{lr}		; (str lr, [sp, #-4]!)
   2b6e4:	add	r2, r2, r1
   2b6e8:	ldr	lr, [r0, #48]	; 0x30
   2b6ec:	add	r3, r2, r3
   2b6f0:	ldr	ip, [r0, #52]	; 0x34
   2b6f4:	ldr	r1, [r0, #56]	; 0x38
   2b6f8:	add	r3, r3, lr
   2b6fc:	ldr	r2, [r0, #60]	; 0x3c
   2b700:	add	r3, r3, ip
   2b704:	add	r3, r3, r1
   2b708:	ldr	ip, [r0, #64]	; 0x40
   2b70c:	ldr	r1, [r0, #68]	; 0x44
   2b710:	add	r3, r3, r2
   2b714:	ldr	r2, [r0, #72]	; 0x48
   2b718:	add	r0, r3, ip
   2b71c:	add	r0, r0, r1
   2b720:	mvn	r0, r0
   2b724:	subs	r0, r2, r0
   2b728:	mvnne	r0, #0
   2b72c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b730:	mvn	r0, #0
   2b734:	bx	lr
   2b738:	subs	r0, r0, #27
   2b73c:	movne	r0, #1
   2b740:	bx	lr
   2b744:	push	{r4, r5, r6, r7, r8, lr}
   2b748:	mov	r4, r0
   2b74c:	bl	12548 <ftell@plt>
   2b750:	subs	r5, r0, #0
   2b754:	blt	2b7a0 <crc32@@Base+0x11d48>
   2b758:	mov	r2, #2
   2b75c:	mov	r1, #0
   2b760:	mov	r0, r4
   2b764:	bl	1217c <fseek@plt>
   2b768:	subs	r7, r0, #0
   2b76c:	bne	2b830 <crc32@@Base+0x11dd8>
   2b770:	mov	r0, r4
   2b774:	bl	12548 <ftell@plt>
   2b778:	subs	r6, r0, #0
   2b77c:	blt	2b800 <crc32@@Base+0x11da8>
   2b780:	mov	r2, r7
   2b784:	mov	r1, r5
   2b788:	mov	r0, r4
   2b78c:	bl	1217c <fseek@plt>
   2b790:	cmp	r0, #0
   2b794:	bne	2b7d0 <crc32@@Base+0x11d78>
   2b798:	mov	r0, r6
   2b79c:	pop	{r4, r5, r6, r7, r8, pc}
   2b7a0:	movw	r3, #65196	; 0xfeac
   2b7a4:	movt	r3, #4
   2b7a8:	mov	r2, #20
   2b7ac:	mov	r1, #1
   2b7b0:	ldr	r3, [r3]
   2b7b4:	movw	r0, #50828	; 0xc68c
   2b7b8:	movt	r0, #3
   2b7bc:	bl	1259c <fwrite@plt>
   2b7c0:	mov	r0, r4
   2b7c4:	bl	12620 <fclose@plt>
   2b7c8:	mov	r0, #2
   2b7cc:	bl	12218 <exit@plt>
   2b7d0:	movw	r1, #65196	; 0xfeac
   2b7d4:	movt	r1, #4
   2b7d8:	mov	r3, r5
   2b7dc:	movw	r2, #50880	; 0xc6c0
   2b7e0:	ldr	r0, [r1]
   2b7e4:	movt	r2, #3
   2b7e8:	mov	r1, #1
   2b7ec:	bl	122d8 <__fprintf_chk@plt>
   2b7f0:	mov	r0, r4
   2b7f4:	bl	12620 <fclose@plt>
   2b7f8:	mov	r0, #3
   2b7fc:	bl	12218 <exit@plt>
   2b800:	movw	r3, #65196	; 0xfeac
   2b804:	movt	r3, #4
   2b808:	mov	r2, #20
   2b80c:	mov	r1, #1
   2b810:	ldr	r3, [r3]
   2b814:	movw	r0, #50828	; 0xc68c
   2b818:	movt	r0, #3
   2b81c:	bl	1259c <fwrite@plt>
   2b820:	mov	r0, r4
   2b824:	bl	12620 <fclose@plt>
   2b828:	mov	r0, #4
   2b82c:	bl	12218 <exit@plt>
   2b830:	movw	r3, #65196	; 0xfeac
   2b834:	movt	r3, #4
   2b838:	mov	r2, #24
   2b83c:	mov	r1, #1
   2b840:	ldr	r3, [r3]
   2b844:	movw	r0, #50852	; 0xc6a4
   2b848:	movt	r0, #3
   2b84c:	bl	1259c <fwrite@plt>
   2b850:	mov	r0, r4
   2b854:	bl	12620 <fclose@plt>
   2b858:	mov	r0, #3
   2b85c:	bl	12218 <exit@plt>
   2b860:	push	{r4, r5, r6, r7, r8, lr}
   2b864:	movw	r4, #61168	; 0xeef0
   2b868:	ldr	r5, [r0, #64]	; 0x40
   2b86c:	movt	r4, #4
   2b870:	mov	r3, #2496	; 0x9c0
   2b874:	movw	r6, #29520	; 0x7350
   2b878:	str	r3, [r1, #4]
   2b87c:	movt	r6, #30
   2b880:	str	r6, [r1, #8]
   2b884:	sub	sp, sp, #96	; 0x60
   2b888:	ldrb	r0, [r5]
   2b88c:	ldr	r3, [r4]
   2b890:	cmp	r0, #0
   2b894:	str	r3, [sp, #92]	; 0x5c
   2b898:	moveq	r5, r0
   2b89c:	bne	2b8bc <crc32@@Base+0x11e64>
   2b8a0:	ldr	r2, [sp, #92]	; 0x5c
   2b8a4:	mov	r0, r5
   2b8a8:	ldr	r3, [r4]
   2b8ac:	cmp	r2, r3
   2b8b0:	bne	2b984 <crc32@@Base+0x11f2c>
   2b8b4:	add	sp, sp, #96	; 0x60
   2b8b8:	pop	{r4, r5, r6, r7, r8, pc}
   2b8bc:	mov	r7, r1
   2b8c0:	mov	r0, r5
   2b8c4:	movw	r1, #50292	; 0xc474
   2b8c8:	movt	r1, #3
   2b8cc:	bl	12350 <fopen@plt>
   2b8d0:	cmp	r0, #0
   2b8d4:	mov	r8, r0
   2b8d8:	str	r0, [r6, #2496]	; 0x9c0
   2b8dc:	beq	2b938 <crc32@@Base+0x11ee0>
   2b8e0:	bl	124ac <fileno@plt>
   2b8e4:	mov	r2, sp
   2b8e8:	mov	r1, r0
   2b8ec:	mov	r0, #3
   2b8f0:	bl	12578 <__fxstat@plt>
   2b8f4:	subs	r5, r0, #0
   2b8f8:	bne	2b920 <crc32@@Base+0x11ec8>
   2b8fc:	ldr	r3, [sp, #16]
   2b900:	mov	r0, r8
   2b904:	and	r3, r3, #61440	; 0xf000
   2b908:	cmp	r3, #32768	; 0x8000
   2b90c:	beq	2b960 <crc32@@Base+0x11f08>
   2b910:	bl	12620 <fclose@plt>
   2b914:	str	r5, [r6, #2496]	; 0x9c0
   2b918:	mov	r5, #1
   2b91c:	b	2b8a0 <crc32@@Base+0x11e48>
   2b920:	mov	r0, r8
   2b924:	mov	r5, #1
   2b928:	bl	12620 <fclose@plt>
   2b92c:	mov	r3, #0
   2b930:	str	r3, [r6, #2496]	; 0x9c0
   2b934:	b	2b8a0 <crc32@@Base+0x11e48>
   2b938:	movw	r1, #65196	; 0xfeac
   2b93c:	movt	r1, #4
   2b940:	mov	r3, r5
   2b944:	movw	r2, #50912	; 0xc6e0
   2b948:	ldr	r0, [r1]
   2b94c:	movt	r2, #3
   2b950:	mov	r1, #1
   2b954:	mov	r5, r1
   2b958:	bl	122d8 <__fprintf_chk@plt>
   2b95c:	b	2b8a0 <crc32@@Base+0x11e48>
   2b960:	bl	2b744 <crc32@@Base+0x11cec>
   2b964:	ldr	r1, [r7, #4]
   2b968:	add	r1, r0, r1
   2b96c:	mov	r0, #1
   2b970:	str	r1, [r7, #4]
   2b974:	bl	1253c <calloc@plt>
   2b978:	str	r0, [r6, #2500]	; 0x9c4
   2b97c:	str	r0, [r7, #8]
   2b980:	b	2b8a0 <crc32@@Base+0x11e48>
   2b984:	bl	124b8 <__stack_chk_fail@plt>
   2b988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b98c:	movw	sl, #61168	; 0xeef0
   2b990:	movt	sl, #4
   2b994:	sub	sp, sp, #68	; 0x44
   2b998:	mov	r6, r0
   2b99c:	movw	r0, #50948	; 0xc704
   2b9a0:	ldr	r3, [sl]
   2b9a4:	movt	r0, #3
   2b9a8:	str	r3, [sp, #60]	; 0x3c
   2b9ac:	bl	12290 <puts@plt>
   2b9b0:	ldr	r2, [r6, #48]	; 0x30
   2b9b4:	movw	r1, #50396	; 0xc4dc
   2b9b8:	mov	r0, #1
   2b9bc:	movt	r1, #3
   2b9c0:	bl	12794 <__printf_chk@plt>
   2b9c4:	ldrd	r2, [r6, #60]	; 0x3c
   2b9c8:	movw	r1, #50420	; 0xc4f4
   2b9cc:	mov	r0, #1
   2b9d0:	movt	r1, #3
   2b9d4:	bl	12794 <__printf_chk@plt>
   2b9d8:	ldr	r2, [r6, #52]	; 0x34
   2b9dc:	cmp	r2, #0
   2b9e0:	bne	2bd70 <crc32@@Base+0x12318>
   2b9e4:	ldr	r2, [r6, #44]	; 0x2c
   2b9e8:	movw	r1, #48248	; 0xbc78
   2b9ec:	mov	r0, #1
   2b9f0:	movt	r1, #3
   2b9f4:	bl	12794 <__printf_chk@plt>
   2b9f8:	movw	r1, #48296	; 0xbca8
   2b9fc:	ldr	r2, [r6, #72]	; 0x48
   2ba00:	movt	r1, #3
   2ba04:	mov	r0, #1
   2ba08:	movw	r7, #65534	; 0xfffe
   2ba0c:	bl	12794 <__printf_chk@plt>
   2ba10:	movw	r8, #50492	; 0xc53c
   2ba14:	movt	r7, #60159	; 0xeaff
   2ba18:	sub	r5, r6, #4
   2ba1c:	movt	r8, #3
   2ba20:	mov	r4, #0
   2ba24:	ldr	r3, [r5, #4]!
   2ba28:	cmp	r3, r7
   2ba2c:	beq	2ba40 <crc32@@Base+0x11fe8>
   2ba30:	mov	r2, r4
   2ba34:	mov	r1, r8
   2ba38:	mov	r0, #1
   2ba3c:	bl	12794 <__printf_chk@plt>
   2ba40:	add	r4, r4, #1
   2ba44:	cmp	r4, #8
   2ba48:	bne	2ba24 <crc32@@Base+0x11fcc>
   2ba4c:	movw	r7, #50572	; 0xc58c
   2ba50:	movw	r8, #50540	; 0xc56c
   2ba54:	movt	r7, #3
   2ba58:	movt	r8, #3
   2ba5c:	mov	r4, r6
   2ba60:	mov	r5, #0
   2ba64:	b	2ba90 <crc32@@Base+0x12038>
   2ba68:	add	r5, r5, #1
   2ba6c:	cmp	r5, #1
   2ba70:	beq	2bd9c <crc32@@Base+0x12344>
   2ba74:	ldr	r3, [r4, #188]	; 0xbc
   2ba78:	mov	r1, r7
   2ba7c:	mov	r0, #1
   2ba80:	bl	12794 <__printf_chk@plt>
   2ba84:	cmp	r5, #256	; 0x100
   2ba88:	beq	2ba9c <crc32@@Base+0x12044>
   2ba8c:	add	r4, r4, #8
   2ba90:	ldr	r2, [r4, #184]	; 0xb8
   2ba94:	cmn	r2, #1
   2ba98:	bne	2ba68 <crc32@@Base+0x12010>
   2ba9c:	ldr	r9, [r6, #152]	; 0x98
   2baa0:	cmp	r9, #0
   2baa4:	beq	2bc9c <crc32@@Base+0x12244>
   2baa8:	add	r9, r6, r9
   2baac:	ldr	r3, [r9, #4]
   2bab0:	ldr	r2, [r9, #8]
   2bab4:	cmp	r3, #0
   2bab8:	add	r2, r6, r2, lsl #2
   2babc:	beq	2bc9c <crc32@@Base+0x12244>
   2bac0:	ldr	r7, [r2, #12]
   2bac4:	movw	r2, #50732	; 0xc62c
   2bac8:	movt	r2, #3
   2bacc:	str	r2, [sp, #12]
   2bad0:	movw	r2, #36956	; 0x905c
   2bad4:	movt	r2, #3
   2bad8:	movw	r1, #50940	; 0xc6fc
   2badc:	str	sl, [sp, #20]
   2bae0:	movt	r1, #3
   2bae4:	lsl	r7, r7, #2
   2bae8:	str	r1, [sp, #16]
   2baec:	mov	r8, #0
   2baf0:	mov	sl, r2
   2baf4:	b	2bc48 <crc32@@Base+0x121f0>
   2baf8:	cmp	lr, #65536	; 0x10000
   2bafc:	movw	r2, #48140	; 0xbc0c
   2bb00:	movt	r2, #3
   2bb04:	moveq	r2, sl
   2bb08:	ldr	r0, [sp, #12]
   2bb0c:	ubfx	r3, r4, #8, #4
   2bb10:	ubfx	ip, r4, #4, #3
   2bb14:	movw	r1, #51044	; 0xc764
   2bb18:	add	r3, r0, r3, lsl #2
   2bb1c:	add	r0, sp, #64	; 0x40
   2bb20:	add	ip, r0, ip, lsl #2
   2bb24:	movt	r1, #3
   2bb28:	ldr	r3, [r3, #32]
   2bb2c:	mov	r0, #1
   2bb30:	ldr	ip, [ip, #-36]	; 0xffffffdc
   2bb34:	str	ip, [sp]
   2bb38:	bl	12794 <__printf_chk@plt>
   2bb3c:	ldr	r2, [r5, #32]
   2bb40:	movw	r1, #51072	; 0xc780
   2bb44:	mov	r0, #1
   2bb48:	movt	r1, #3
   2bb4c:	lsl	r2, r2, #2
   2bb50:	bl	12794 <__printf_chk@plt>
   2bb54:	mov	r3, fp
   2bb58:	mov	r2, fp
   2bb5c:	movw	r1, #51100	; 0xc79c
   2bb60:	mov	r0, #1
   2bb64:	movt	r1, #3
   2bb68:	bl	12794 <__printf_chk@plt>
   2bb6c:	ldrd	r2, [r5, #24]
   2bb70:	movw	r1, #51136	; 0xc7c0
   2bb74:	mov	r0, #1
   2bb78:	movt	r1, #3
   2bb7c:	bl	12794 <__printf_chk@plt>
   2bb80:	ldrd	r2, [r5, #16]
   2bb84:	ldrd	r0, [r5, #24]
   2bb88:	cmp	r1, r3
   2bb8c:	cmpeq	r0, r2
   2bb90:	beq	2bcc4 <crc32@@Base+0x1226c>
   2bb94:	movw	r1, #51164	; 0xc7dc
   2bb98:	mov	r0, #1
   2bb9c:	movt	r1, #3
   2bba0:	bl	12794 <__printf_chk@plt>
   2bba4:	movw	r1, #51184	; 0xc7f0
   2bba8:	mov	r0, #1
   2bbac:	movt	r1, #3
   2bbb0:	bl	12794 <__printf_chk@plt>
   2bbb4:	tst	r4, #8388608	; 0x800000
   2bbb8:	bne	2bd5c <crc32@@Base+0x12304>
   2bbbc:	tst	r4, #128	; 0x80
   2bbc0:	bne	2bd2c <crc32@@Base+0x122d4>
   2bbc4:	and	r3, r4, #28672	; 0x7000
   2bbc8:	cmp	r3, #8192	; 0x2000
   2bbcc:	beq	2bd48 <crc32@@Base+0x122f0>
   2bbd0:	cmp	r3, #12288	; 0x3000
   2bbd4:	beq	2bd88 <crc32@@Base+0x12330>
   2bbd8:	cmp	r3, #4096	; 0x1000
   2bbdc:	bne	2bbf0 <crc32@@Base+0x12198>
   2bbe0:	movw	r1, #51224	; 0xc818
   2bbe4:	mov	r0, #1
   2bbe8:	movt	r1, #3
   2bbec:	bl	12794 <__printf_chk@plt>
   2bbf0:	tst	r4, #262144	; 0x40000
   2bbf4:	bne	2bd18 <crc32@@Base+0x122c0>
   2bbf8:	tst	r4, #32768	; 0x8000
   2bbfc:	bne	2bcd0 <crc32@@Base+0x12278>
   2bc00:	tst	r4, #8
   2bc04:	bne	2bce8 <crc32@@Base+0x12290>
   2bc08:	tst	r4, #6
   2bc0c:	bne	2bd00 <crc32@@Base+0x122a8>
   2bc10:	tst	r4, #1
   2bc14:	beq	2bc28 <crc32@@Base+0x121d0>
   2bc18:	movw	r1, #51288	; 0xc858
   2bc1c:	mov	r0, #1
   2bc20:	movt	r1, #3
   2bc24:	bl	12794 <__printf_chk@plt>
   2bc28:	mov	r0, #10
   2bc2c:	bl	122fc <putchar@plt>
   2bc30:	ldr	r2, [r5, #60]	; 0x3c
   2bc34:	movw	r1, #51296	; 0xc860
   2bc38:	mov	r0, #1
   2bc3c:	movt	r1, #3
   2bc40:	bl	12794 <__printf_chk@plt>
   2bc44:	ldr	r3, [r9, #4]
   2bc48:	add	r8, r8, #1
   2bc4c:	add	r5, r6, r7
   2bc50:	cmp	r8, r3
   2bc54:	bcs	2bc98 <crc32@@Base+0x12240>
   2bc58:	movw	ip, #50732	; 0xc62c
   2bc5c:	movt	ip, #3
   2bc60:	add	fp, sp, #28
   2bc64:	ldr	r4, [r5, #36]	; 0x24
   2bc68:	ldm	ip!, {r0, r1, r2, r3}
   2bc6c:	ands	lr, r4, #196608	; 0x30000
   2bc70:	ldr	r7, [r5, #12]
   2bc74:	stmia	fp!, {r0, r1, r2, r3}
   2bc78:	lsl	r7, r7, #2
   2bc7c:	ldm	ip, {r0, r1, r2, r3}
   2bc80:	ldr	ip, [r5, #8]
   2bc84:	stm	fp, {r0, r1, r2, r3}
   2bc88:	lsl	fp, ip, #2
   2bc8c:	bne	2baf8 <crc32@@Base+0x120a0>
   2bc90:	ldr	r2, [sp, #16]
   2bc94:	b	2bb08 <crc32@@Base+0x120b0>
   2bc98:	ldr	sl, [sp, #20]
   2bc9c:	ldr	r2, [sp, #60]	; 0x3c
   2bca0:	ldr	r3, [sl]
   2bca4:	cmp	r2, r3
   2bca8:	bne	2bdb8 <crc32@@Base+0x12360>
   2bcac:	movw	r3, #29520	; 0x7350
   2bcb0:	movt	r3, #30
   2bcb4:	ldr	r0, [r3, #2500]	; 0x9c4
   2bcb8:	add	sp, sp, #68	; 0x44
   2bcbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bcc0:	b	1214c <free@plt>
   2bcc4:	mov	r0, #10
   2bcc8:	bl	122fc <putchar@plt>
   2bccc:	b	2bba4 <crc32@@Base+0x1214c>
   2bcd0:	movw	r1, #51260	; 0xc83c
   2bcd4:	mov	r0, #1
   2bcd8:	movt	r1, #3
   2bcdc:	bl	12794 <__printf_chk@plt>
   2bce0:	tst	r4, #8
   2bce4:	beq	2bc08 <crc32@@Base+0x121b0>
   2bce8:	movw	r1, #51268	; 0xc844
   2bcec:	mov	r0, #1
   2bcf0:	movt	r1, #3
   2bcf4:	bl	12794 <__printf_chk@plt>
   2bcf8:	tst	r4, #6
   2bcfc:	beq	2bc10 <crc32@@Base+0x121b8>
   2bd00:	movw	r1, #51280	; 0xc850
   2bd04:	ubfx	r2, r4, #1, #2
   2bd08:	movt	r1, #3
   2bd0c:	mov	r0, #1
   2bd10:	bl	12794 <__printf_chk@plt>
   2bd14:	b	2bc10 <crc32@@Base+0x121b8>
   2bd18:	movw	r1, #51248	; 0xc830
   2bd1c:	mov	r0, #1
   2bd20:	movt	r1, #3
   2bd24:	bl	12794 <__printf_chk@plt>
   2bd28:	b	2bbf8 <crc32@@Base+0x121a0>
   2bd2c:	movw	r1, #51212	; 0xc80c
   2bd30:	mov	r0, #1
   2bd34:	movt	r1, #3
   2bd38:	bl	12794 <__printf_chk@plt>
   2bd3c:	and	r3, r4, #28672	; 0x7000
   2bd40:	cmp	r3, #8192	; 0x2000
   2bd44:	bne	2bbd0 <crc32@@Base+0x12178>
   2bd48:	movw	r1, #51232	; 0xc820
   2bd4c:	mov	r0, #1
   2bd50:	movt	r1, #3
   2bd54:	bl	12794 <__printf_chk@plt>
   2bd58:	b	2bbf0 <crc32@@Base+0x12198>
   2bd5c:	movw	r1, #51204	; 0xc804
   2bd60:	mov	r0, #1
   2bd64:	movt	r1, #3
   2bd68:	bl	12794 <__printf_chk@plt>
   2bd6c:	b	2bbbc <crc32@@Base+0x12164>
   2bd70:	movw	r1, #50996	; 0xc734
   2bd74:	ldr	r3, [r6, #56]	; 0x38
   2bd78:	movt	r1, #3
   2bd7c:	mov	r0, #1
   2bd80:	bl	12794 <__printf_chk@plt>
   2bd84:	b	2b9e4 <crc32@@Base+0x11f8c>
   2bd88:	movw	r1, #51240	; 0xc828
   2bd8c:	mov	r0, #1
   2bd90:	movt	r1, #3
   2bd94:	bl	12794 <__printf_chk@plt>
   2bd98:	b	2bbf0 <crc32@@Base+0x12198>
   2bd9c:	mov	r0, r8
   2bda0:	bl	12290 <puts@plt>
   2bda4:	ldrd	r2, [r4, #184]	; 0xb8
   2bda8:	mov	r1, r7
   2bdac:	mov	r0, r5
   2bdb0:	bl	12794 <__printf_chk@plt>
   2bdb4:	b	2ba8c <crc32@@Base+0x12034>
   2bdb8:	bl	124b8 <__stack_chk_fail@plt>
   2bdbc:	cmp	r0, #0
   2bdc0:	bxeq	lr
   2bdc4:	ldr	r3, [r0, #56]	; 0x38
   2bdc8:	push	{r4, lr}
   2bdcc:	cmp	r3, #0
   2bdd0:	bne	2be30 <crc32@@Base+0x123d8>
   2bdd4:	ldr	r3, [r0, #4]
   2bdd8:	cmp	r3, #0
   2bddc:	beq	2bdec <crc32@@Base+0x12394>
   2bde0:	ldr	r3, [r0, #60]	; 0x3c
   2bde4:	tst	r3, #63	; 0x3f
   2bde8:	bne	2be08 <crc32@@Base+0x123b0>
   2bdec:	ldr	r3, [r0, #16]
   2bdf0:	cmp	r3, #0
   2bdf4:	ldreq	r0, [r0]
   2bdf8:	clzeq	r0, r0
   2bdfc:	lsreq	r0, r0, #5
   2be00:	movne	r0, #0
   2be04:	pop	{r4, pc}
   2be08:	movw	r3, #65196	; 0xfeac
   2be0c:	movt	r3, #4
   2be10:	mov	r2, #58	; 0x3a
   2be14:	mov	r1, #1
   2be18:	ldr	r3, [r3]
   2be1c:	movw	r0, #50640	; 0xc5d0
   2be20:	movt	r0, #3
   2be24:	bl	1259c <fwrite@plt>
   2be28:	mvn	r0, #0
   2be2c:	pop	{r4, pc}
   2be30:	movw	r3, #65196	; 0xfeac
   2be34:	movt	r3, #4
   2be38:	mov	r2, #41	; 0x29
   2be3c:	mov	r1, #1
   2be40:	ldr	r3, [r3]
   2be44:	movw	r0, #50596	; 0xc5a4
   2be48:	movt	r0, #3
   2be4c:	bl	1259c <fwrite@plt>
   2be50:	mvn	r0, #0
   2be54:	pop	{r4, pc}
   2be58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2be5c:	movw	r5, #61168	; 0xeef0
   2be60:	movt	r5, #4
   2be64:	mov	r6, r3
   2be68:	sub	sp, sp, #104	; 0x68
   2be6c:	subs	r4, r0, #0
   2be70:	ldr	r3, [r5]
   2be74:	str	r3, [sp, #100]	; 0x64
   2be78:	beq	2bef8 <crc32@@Base+0x124a0>
   2be7c:	mov	r1, #0
   2be80:	add	r0, r4, #2048	; 0x800
   2be84:	mov	r2, r1
   2be88:	str	r1, [r4, #40]	; 0x28
   2be8c:	mov	r3, r4
   2be90:	mvn	r1, #0
   2be94:	movw	ip, #21862	; 0x5566
   2be98:	movt	ip, #43673	; 0xaa99
   2be9c:	str	ip, [r4, #32]
   2bea0:	movw	ip, #20056	; 0x4e58
   2bea4:	movt	ip, #22604	; 0x584c
   2bea8:	str	ip, [r4, #36]	; 0x24
   2beac:	movw	ip, #65534	; 0xfffe
   2beb0:	movt	ip, #60159	; 0xeaff
   2beb4:	str	ip, [r4]
   2beb8:	str	ip, [r4, #4]
   2bebc:	str	ip, [r4, #8]
   2bec0:	str	ip, [r4, #12]
   2bec4:	str	ip, [r4, #16]
   2bec8:	str	ip, [r4, #20]
   2becc:	str	ip, [r4, #24]
   2bed0:	str	ip, [r4, #28]
   2bed4:	mov	ip, #2048	; 0x800
   2bed8:	str	ip, [r4, #68]	; 0x44
   2bedc:	str	r1, [r3, #184]	; 0xb8
   2bee0:	add	r3, r3, #8
   2bee4:	str	r2, [r3, #180]	; 0xb4
   2bee8:	cmp	r3, r0
   2beec:	bne	2bedc <crc32@@Base+0x12484>
   2bef0:	str	r2, [r4, #52]	; 0x34
   2bef4:	str	r2, [r4, #56]	; 0x38
   2bef8:	ldr	r1, [r6, #4]
   2befc:	movw	r7, #29520	; 0x7350
   2bf00:	ldr	r3, [r6, #104]	; 0x68
   2bf04:	movt	r7, #30
   2bf08:	cmp	r1, #0
   2bf0c:	mov	r2, #0
   2bf10:	sub	r3, r3, #2496	; 0x9c0
   2bf14:	str	r3, [r4, #60]	; 0x3c
   2bf18:	str	r3, [r4, #64]	; 0x40
   2bf1c:	movt	r2, #65532	; 0xfffc
   2bf20:	ldrne	r3, [r6, #60]	; 0x3c
   2bf24:	ldr	r0, [r7, #2496]	; 0x9c0
   2bf28:	str	r2, [r4, #44]	; 0x2c
   2bf2c:	mov	r2, #2496	; 0x9c0
   2bf30:	strne	r3, [r4, #44]	; 0x2c
   2bf34:	cmp	r0, #0
   2bf38:	str	r2, [r4, #48]	; 0x30
   2bf3c:	beq	2bf90 <crc32@@Base+0x12538>
   2bf40:	ldr	r8, [r6, #64]	; 0x40
   2bf44:	bl	2b744 <crc32@@Base+0x11cec>
   2bf48:	ldr	ip, [r4, #60]	; 0x3c
   2bf4c:	mov	r1, #1
   2bf50:	ldr	r3, [r4, #64]	; 0x40
   2bf54:	sub	ip, ip, r0
   2bf58:	sub	r3, r3, r0
   2bf5c:	mov	r2, r0
   2bf60:	str	r0, [r4, #52]	; 0x34
   2bf64:	str	r0, [r4, #56]	; 0x38
   2bf68:	add	r0, r4, #2496	; 0x9c0
   2bf6c:	str	r3, [r4, #64]	; 0x40
   2bf70:	str	ip, [r4, #60]	; 0x3c
   2bf74:	ldr	r3, [r7, #2496]	; 0x9c0
   2bf78:	bl	12488 <fread@plt>
   2bf7c:	ldr	r3, [r4, #52]	; 0x34
   2bf80:	cmp	r0, r3
   2bf84:	bne	2c0ec <crc32@@Base+0x12694>
   2bf88:	ldr	r0, [r7, #2496]	; 0x9c0
   2bf8c:	bl	12620 <fclose@plt>
   2bf90:	ldr	r6, [r6, #68]	; 0x44
   2bf94:	ldrb	r3, [r6]
   2bf98:	cmp	r3, #0
   2bf9c:	bne	2c00c <crc32@@Base+0x125b4>
   2bfa0:	ldr	r1, [r4, #36]	; 0x24
   2bfa4:	ldr	r3, [r4, #32]
   2bfa8:	ldr	r2, [r4, #40]	; 0x28
   2bfac:	add	r3, r3, r1
   2bfb0:	ldr	r1, [r4, #44]	; 0x2c
   2bfb4:	add	r3, r3, r2
   2bfb8:	ldr	r2, [r4, #48]	; 0x30
   2bfbc:	add	r3, r3, r1
   2bfc0:	ldr	r1, [r4, #52]	; 0x34
   2bfc4:	add	r3, r3, r2
   2bfc8:	ldr	r2, [r4, #56]	; 0x38
   2bfcc:	add	r3, r3, r1
   2bfd0:	ldr	r1, [r4, #60]	; 0x3c
   2bfd4:	add	r3, r3, r2
   2bfd8:	ldr	r2, [r4, #64]	; 0x40
   2bfdc:	add	r3, r3, r1
   2bfe0:	ldr	r0, [r4, #68]	; 0x44
   2bfe4:	ldr	r1, [sp, #100]	; 0x64
   2bfe8:	add	r3, r3, r2
   2bfec:	ldr	r2, [r5]
   2bff0:	add	r3, r3, r0
   2bff4:	cmp	r1, r2
   2bff8:	mvn	r3, r3
   2bffc:	str	r3, [r4, #72]	; 0x48
   2c000:	bne	2c11c <crc32@@Base+0x126c4>
   2c004:	add	sp, sp, #104	; 0x68
   2c008:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c00c:	movw	r1, #50292	; 0xc474
   2c010:	mov	r0, r6
   2c014:	movt	r1, #3
   2c018:	bl	12350 <fopen@plt>
   2c01c:	subs	r7, r0, #0
   2c020:	beq	2c0c4 <crc32@@Base+0x1266c>
   2c024:	bl	124ac <fileno@plt>
   2c028:	add	r2, sp, #8
   2c02c:	mov	r1, r0
   2c030:	mov	r0, #3
   2c034:	bl	12578 <__fxstat@plt>
   2c038:	subs	r6, r0, #0
   2c03c:	bne	2c0b8 <crc32@@Base+0x12660>
   2c040:	ldr	r3, [sp, #24]
   2c044:	and	r3, r3, #61440	; 0xf000
   2c048:	cmp	r3, #32768	; 0x8000
   2c04c:	bne	2c0b8 <crc32@@Base+0x12660>
   2c050:	movw	sl, #50332	; 0xc49c
   2c054:	movw	r9, #50340	; 0xc4a4
   2c058:	movt	sl, #3
   2c05c:	movt	r9, #3
   2c060:	mov	r8, sp
   2c064:	add	r3, sp, #4
   2c068:	mov	r1, sl
   2c06c:	mov	r2, r8
   2c070:	mov	r0, r7
   2c074:	bl	12098 <fscanf@plt>
   2c078:	cmp	r0, #2
   2c07c:	addeq	r3, r6, #23
   2c080:	addeq	r6, r6, #1
   2c084:	ldmeq	r8, {r0, r1}
   2c088:	addeq	r3, r4, r3, lsl #3
   2c08c:	stmeq	r3, {r0, r1}
   2c090:	mov	r1, r9
   2c094:	mov	r0, r7
   2c098:	bl	12098 <fscanf@plt>
   2c09c:	cmp	r6, #255	; 0xff
   2c0a0:	movhi	r3, #0
   2c0a4:	movls	r3, #1
   2c0a8:	cmn	r0, #1
   2c0ac:	moveq	r3, #0
   2c0b0:	cmp	r3, #0
   2c0b4:	bne	2c064 <crc32@@Base+0x1260c>
   2c0b8:	mov	r0, r7
   2c0bc:	bl	12620 <fclose@plt>
   2c0c0:	b	2bfa0 <crc32@@Base+0x12548>
   2c0c4:	movw	r1, #65196	; 0xfeac
   2c0c8:	movt	r1, #4
   2c0cc:	mov	r3, r6
   2c0d0:	movw	r2, #50296	; 0xc478
   2c0d4:	ldr	r0, [r1]
   2c0d8:	movt	r2, #3
   2c0dc:	mov	r1, #1
   2c0e0:	bl	122d8 <__fprintf_chk@plt>
   2c0e4:	mov	r0, #1
   2c0e8:	bl	12218 <exit@plt>
   2c0ec:	movw	r1, #65196	; 0xfeac
   2c0f0:	movt	r1, #4
   2c0f4:	mov	r3, r8
   2c0f8:	movw	r2, #51324	; 0xc87c
   2c0fc:	ldr	r0, [r1]
   2c100:	movt	r2, #3
   2c104:	mov	r1, #1
   2c108:	bl	122d8 <__fprintf_chk@plt>
   2c10c:	ldr	r0, [r7, #2496]	; 0x9c0
   2c110:	bl	12620 <fclose@plt>
   2c114:	mov	r0, #1
   2c118:	bl	12218 <exit@plt>
   2c11c:	bl	124b8 <__stack_chk_fail@plt>
   2c120:	cmp	r0, #0
   2c124:	bxeq	lr
   2c128:	mov	r1, #0
   2c12c:	add	ip, r0, #2048	; 0x800
   2c130:	push	{lr}		; (str lr, [sp, #-4]!)
   2c134:	mov	r2, r1
   2c138:	str	r1, [r0, #40]	; 0x28
   2c13c:	mov	r3, r0
   2c140:	mvn	r1, #0
   2c144:	movw	lr, #21862	; 0x5566
   2c148:	movt	lr, #43673	; 0xaa99
   2c14c:	str	lr, [r0, #32]
   2c150:	movw	lr, #20056	; 0x4e58
   2c154:	movt	lr, #22604	; 0x584c
   2c158:	str	lr, [r0, #36]	; 0x24
   2c15c:	movw	lr, #65534	; 0xfffe
   2c160:	movt	lr, #60159	; 0xeaff
   2c164:	str	lr, [r0]
   2c168:	str	lr, [r0, #4]
   2c16c:	str	lr, [r0, #8]
   2c170:	str	lr, [r0, #12]
   2c174:	str	lr, [r0, #16]
   2c178:	str	lr, [r0, #20]
   2c17c:	str	lr, [r0, #24]
   2c180:	str	lr, [r0, #28]
   2c184:	mov	lr, #2048	; 0x800
   2c188:	str	lr, [r0, #68]	; 0x44
   2c18c:	str	r1, [r3, #184]	; 0xb8
   2c190:	add	r3, r3, #8
   2c194:	str	r2, [r3, #180]	; 0xb4
   2c198:	cmp	r3, ip
   2c19c:	bne	2c18c <crc32@@Base+0x12734>
   2c1a0:	str	r2, [r0, #52]	; 0x34
   2c1a4:	str	r2, [r0, #56]	; 0x38
   2c1a8:	pop	{pc}		; (ldr pc, [sp], #4)
   2c1ac:	subs	r0, r0, #28
   2c1b0:	movne	r0, #1
   2c1b4:	bx	lr
   2c1b8:	bx	lr
   2c1bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c1c0:	movw	r4, #43512	; 0xa9f8
   2c1c4:	movt	r4, #30
   2c1c8:	sub	sp, sp, #12
   2c1cc:	subs	fp, r2, #0
   2c1d0:	mov	r8, r0
   2c1d4:	ldr	r3, [r4, #12]
   2c1d8:	mov	r2, r1
   2c1dc:	ldr	r5, [r4, #4]
   2c1e0:	ldr	r9, [r4, #16]
   2c1e4:	str	r3, [sp]
   2c1e8:	ldr	sl, [r4, #8]
   2c1ec:	ldr	r6, [r4]
   2c1f0:	beq	2c2bc <crc32@@Base+0x12864>
   2c1f4:	ldr	r1, [fp]
   2c1f8:	cmp	r1, #0
   2c1fc:	bne	2c290 <crc32@@Base+0x12838>
   2c200:	add	r1, r2, #63	; 0x3f
   2c204:	mov	r0, r5
   2c208:	add	r6, r1, r6
   2c20c:	str	r2, [sp, #4]
   2c210:	bic	r6, r6, #63	; 0x3f
   2c214:	mov	r1, r6
   2c218:	bl	123f8 <realloc@plt>
   2c21c:	ldr	r2, [sp, #4]
   2c220:	mov	r1, r8
   2c224:	mov	r7, r0
   2c228:	ldr	r0, [r4]
   2c22c:	add	r0, r7, r0
   2c230:	bl	125c0 <memcpy@plt>
   2c234:	ldr	r3, [r4]
   2c238:	str	r3, [fp]
   2c23c:	ldr	r3, [r4, #12]
   2c240:	ldr	r0, [r4, #8]
   2c244:	cmp	r3, #0
   2c248:	str	r7, [r4, #4]
   2c24c:	str	r6, [r4]
   2c250:	ldrne	r3, [sp]
   2c254:	subne	r8, r3, r5
   2c258:	ldr	r3, [r4, #16]
   2c25c:	addne	r8, r7, r8
   2c260:	strne	r8, [r4, #12]
   2c264:	cmp	r3, #0
   2c268:	subne	r9, r9, r5
   2c26c:	addne	r9, r7, r9
   2c270:	strne	r9, [r4, #16]
   2c274:	cmp	r0, #0
   2c278:	subne	r5, sl, r5
   2c27c:	movne	r0, #0
   2c280:	addne	r7, r7, r5
   2c284:	strne	r7, [r4, #8]
   2c288:	add	sp, sp, #12
   2c28c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c290:	cmp	r1, r6
   2c294:	strcs	r1, [r4]
   2c298:	movcs	r6, r1
   2c29c:	bcs	2c200 <crc32@@Base+0x127a8>
   2c2a0:	mov	r2, r1
   2c2a4:	mov	r0, #1
   2c2a8:	movw	r1, #52048	; 0xcb50
   2c2ac:	movt	r1, #3
   2c2b0:	bl	12794 <__printf_chk@plt>
   2c2b4:	mvn	r0, #0
   2c2b8:	b	2c288 <crc32@@Base+0x12830>
   2c2bc:	add	r6, r6, #63	; 0x3f
   2c2c0:	str	r1, [sp, #4]
   2c2c4:	add	r6, r6, r1
   2c2c8:	mov	r0, r5
   2c2cc:	bic	r6, r6, #63	; 0x3f
   2c2d0:	mov	r1, r6
   2c2d4:	bl	123f8 <realloc@plt>
   2c2d8:	ldr	r2, [sp, #4]
   2c2dc:	mov	r1, r8
   2c2e0:	mov	r7, r0
   2c2e4:	ldr	r0, [r4]
   2c2e8:	add	r0, r7, r0
   2c2ec:	bl	125c0 <memcpy@plt>
   2c2f0:	b	2c23c <crc32@@Base+0x127e4>
   2c2f4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c2f8:	movw	r8, #61168	; 0xeef0
   2c2fc:	movt	r8, #4
   2c300:	sub	sp, sp, #100	; 0x64
   2c304:	mov	r4, r1
   2c308:	mov	r1, #0
   2c30c:	ldr	r3, [r8]
   2c310:	str	r3, [sp, #92]	; 0x5c
   2c314:	bl	12458 <open@plt>
   2c318:	subs	r7, r0, #0
   2c31c:	blt	2c394 <crc32@@Base+0x1293c>
   2c320:	mov	r2, sp
   2c324:	mov	r1, r7
   2c328:	mov	r0, #3
   2c32c:	bl	12578 <__fxstat@plt>
   2c330:	cmp	r0, #0
   2c334:	blt	2c394 <crc32@@Base+0x1293c>
   2c338:	ldr	r5, [sp, #44]	; 0x2c
   2c33c:	cmp	r4, #0
   2c340:	mov	r0, r5
   2c344:	strne	r5, [r4]
   2c348:	bl	125cc <malloc@plt>
   2c34c:	subs	r9, r0, #0
   2c350:	beq	2c394 <crc32@@Base+0x1293c>
   2c354:	cmp	r5, #0
   2c358:	ble	2c3b4 <crc32@@Base+0x1295c>
   2c35c:	mov	r6, r9
   2c360:	mov	r4, #0
   2c364:	b	2c37c <crc32@@Base+0x12924>
   2c368:	ldr	r5, [sp, #44]	; 0x2c
   2c36c:	add	r4, r4, r0
   2c370:	add	r6, r6, r0
   2c374:	cmp	r5, r4
   2c378:	ble	2c3b4 <crc32@@Base+0x1295c>
   2c37c:	sub	r2, r5, r4
   2c380:	mov	r1, r6
   2c384:	mov	r0, r7
   2c388:	bl	12368 <read@plt>
   2c38c:	cmp	r0, #0
   2c390:	bge	2c368 <crc32@@Base+0x12910>
   2c394:	mov	r9, #0
   2c398:	ldr	r2, [sp, #92]	; 0x5c
   2c39c:	mov	r0, r9
   2c3a0:	ldr	r3, [r8]
   2c3a4:	cmp	r2, r3
   2c3a8:	bne	2c3c0 <crc32@@Base+0x12968>
   2c3ac:	add	sp, sp, #100	; 0x64
   2c3b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c3b4:	mov	r0, r7
   2c3b8:	bl	12338 <close@plt>
   2c3bc:	b	2c398 <crc32@@Base+0x12940>
   2c3c0:	bl	124b8 <__stack_chk_fail@plt>
   2c3c4:	movw	ip, #51464	; 0xc908
   2c3c8:	movt	ip, #3
   2c3cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c3d0:	mov	r6, r0
   2c3d4:	mov	r8, r1
   2c3d8:	sub	sp, sp, #28
   2c3dc:	ldm	ip!, {r0, r1, r2, r3}
   2c3e0:	movw	r7, #61168	; 0xeef0
   2c3e4:	movt	r7, #4
   2c3e8:	mov	lr, sp
   2c3ec:	mov	r9, sp
   2c3f0:	mov	r4, #0
   2c3f4:	stmia	lr!, {r0, r1, r2, r3}
   2c3f8:	ldr	ip, [ip]
   2c3fc:	ldr	r3, [r7]
   2c400:	str	ip, [lr]
   2c404:	str	r3, [sp, #20]
   2c408:	ldr	r5, [r9], #4
   2c40c:	mov	r0, r5
   2c410:	bl	125e4 <strlen@plt>
   2c414:	mov	r1, r5
   2c418:	mov	r2, r0
   2c41c:	mov	r0, r6
   2c420:	bl	121a0 <strncmp@plt>
   2c424:	cmp	r0, #0
   2c428:	beq	2c454 <crc32@@Base+0x129fc>
   2c42c:	add	r4, r4, #1
   2c430:	cmp	r4, #5
   2c434:	bne	2c408 <crc32@@Base+0x129b0>
   2c438:	ldr	r2, [sp, #20]
   2c43c:	mov	r0, r6
   2c440:	ldr	r3, [r7]
   2c444:	cmp	r2, r3
   2c448:	bne	2c46c <crc32@@Base+0x12a14>
   2c44c:	add	sp, sp, #28
   2c450:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c454:	mov	r0, r5
   2c458:	asr	r5, r4, #31
   2c45c:	strd	r4, [r8, #24]
   2c460:	bl	125e4 <strlen@plt>
   2c464:	add	r6, r6, r0
   2c468:	b	2c438 <crc32@@Base+0x129e0>
   2c46c:	bl	124b8 <__stack_chk_fail@plt>
   2c470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c474:	movw	fp, #61168	; 0xeef0
   2c478:	movt	fp, #4
   2c47c:	sub	sp, sp, #28
   2c480:	movw	r4, #35368	; 0x8a28
   2c484:	movw	sl, #52076	; 0xcb6c
   2c488:	ldr	r3, [fp]
   2c48c:	movw	r9, #52080	; 0xcb70
   2c490:	ldr	r8, [pc, #276]	; 2c5ac <crc32@@Base+0x12b54>
   2c494:	movt	r4, #3
   2c498:	movt	sl, #3
   2c49c:	movt	r9, #3
   2c4a0:	mov	r6, #0
   2c4a4:	mov	r7, #0
   2c4a8:	mov	r5, r0
   2c4ac:	str	r1, [sp, #4]
   2c4b0:	mov	r2, #4
   2c4b4:	str	r3, [sp, #20]
   2c4b8:	b	2c4cc <crc32@@Base+0x12a74>
   2c4bc:	ldr	r4, [r8, #4]!
   2c4c0:	mov	r0, r4
   2c4c4:	bl	125e4 <strlen@plt>
   2c4c8:	mov	r2, r0
   2c4cc:	mov	r1, r4
   2c4d0:	mov	r0, r5
   2c4d4:	bl	121a0 <strncmp@plt>
   2c4d8:	cmp	r0, #0
   2c4dc:	beq	2c560 <crc32@@Base+0x12b08>
   2c4e0:	mov	r2, #3
   2c4e4:	mov	r1, sl
   2c4e8:	mov	r0, r4
   2c4ec:	bl	121a0 <strncmp@plt>
   2c4f0:	cmp	r0, #0
   2c4f4:	bne	2c530 <crc32@@Base+0x12ad8>
   2c4f8:	ldm	r9, {r0, r1}
   2c4fc:	ldrb	r3, [r4, #4]
   2c500:	str	r0, [sp, #12]
   2c504:	add	r0, sp, #12
   2c508:	strh	r1, [sp, #16]
   2c50c:	strb	r3, [sp, #16]
   2c510:	bl	125e4 <strlen@plt>
   2c514:	add	r1, sp, #12
   2c518:	mov	r2, r0
   2c51c:	mov	r4, r0
   2c520:	mov	r0, r5
   2c524:	bl	121a0 <strncmp@plt>
   2c528:	cmp	r0, #0
   2c52c:	beq	2c588 <crc32@@Base+0x12b30>
   2c530:	adds	r6, r6, #1
   2c534:	adc	r7, r7, #0
   2c538:	cmp	r7, #0
   2c53c:	cmpeq	r6, #16
   2c540:	bne	2c4bc <crc32@@Base+0x12a64>
   2c544:	mov	r0, r5
   2c548:	ldr	r2, [sp, #20]
   2c54c:	ldr	r3, [fp]
   2c550:	cmp	r2, r3
   2c554:	bne	2c5a8 <crc32@@Base+0x12b50>
   2c558:	add	sp, sp, #28
   2c55c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c560:	ldr	r2, [sp, #4]
   2c564:	lsl	r3, r7, #8
   2c568:	orr	r3, r3, r6, lsr #24
   2c56c:	mov	r0, r4
   2c570:	lsl	r6, r6, #8
   2c574:	str	r3, [r2, #20]
   2c578:	str	r6, [r2, #16]
   2c57c:	bl	125e4 <strlen@plt>
   2c580:	add	r0, r5, r0
   2c584:	b	2c548 <crc32@@Base+0x12af0>
   2c588:	ldr	r2, [sp, #4]
   2c58c:	lsl	r3, r7, #8
   2c590:	orr	r3, r3, r6, lsr #24
   2c594:	add	r0, r5, r4
   2c598:	lsl	r6, r6, #8
   2c59c:	str	r3, [r2, #20]
   2c5a0:	str	r6, [r2, #16]
   2c5a4:	b	2c548 <crc32@@Base+0x12af0>
   2c5a8:	bl	124b8 <__stack_chk_fail@plt>
   2c5ac:	andeq	ip, r3, ip, lsl r9
   2c5b0:	push	{r4, r5, lr}
   2c5b4:	movw	r4, #61168	; 0xeef0
   2c5b8:	movt	r4, #4
   2c5bc:	sub	sp, sp, #12
   2c5c0:	mov	r5, r1
   2c5c4:	mov	r2, #0
   2c5c8:	ldr	r3, [r4]
   2c5cc:	mov	r1, sp
   2c5d0:	str	r3, [sp, #4]
   2c5d4:	bl	122b4 <strtoll@plt>
   2c5d8:	ldr	r2, [sp, #4]
   2c5dc:	ldr	r3, [r4]
   2c5e0:	cmp	r2, r3
   2c5e4:	str	r0, [r5, #56]	; 0x38
   2c5e8:	ldr	r0, [sp]
   2c5ec:	bne	2c5f8 <crc32@@Base+0x12ba0>
   2c5f0:	add	sp, sp, #12
   2c5f4:	pop	{r4, r5, pc}
   2c5f8:	bl	124b8 <__stack_chk_fail@plt>
   2c5fc:	push	{r4, r5, lr}
   2c600:	movw	r4, #61168	; 0xeef0
   2c604:	movt	r4, #4
   2c608:	sub	sp, sp, #12
   2c60c:	mov	r5, r1
   2c610:	mov	r2, #0
   2c614:	ldr	r3, [r4]
   2c618:	mov	r1, sp
   2c61c:	str	r3, [sp, #4]
   2c620:	bl	122b4 <strtoll@plt>
   2c624:	ldr	r2, [sp, #4]
   2c628:	ldr	r3, [r4]
   2c62c:	cmp	r2, r3
   2c630:	strd	r0, [r5, #48]	; 0x30
   2c634:	ldr	r0, [sp]
   2c638:	bne	2c644 <crc32@@Base+0x12bec>
   2c63c:	add	sp, sp, #12
   2c640:	pop	{r4, r5, pc}
   2c644:	bl	124b8 <__stack_chk_fail@plt>
   2c648:	push	{r4, r5, lr}
   2c64c:	movw	r4, #61168	; 0xeef0
   2c650:	movt	r4, #4
   2c654:	sub	sp, sp, #12
   2c658:	mov	r5, r1
   2c65c:	mov	r2, #0
   2c660:	ldr	r3, [r4]
   2c664:	mov	r1, sp
   2c668:	str	r3, [sp, #4]
   2c66c:	bl	122b4 <strtoll@plt>
   2c670:	ldr	r2, [sp, #4]
   2c674:	ldr	r3, [r4]
   2c678:	cmp	r2, r3
   2c67c:	strd	r0, [r5, #40]	; 0x28
   2c680:	ldr	r0, [sp]
   2c684:	bne	2c690 <crc32@@Base+0x12c38>
   2c688:	add	sp, sp, #12
   2c68c:	pop	{r4, r5, pc}
   2c690:	bl	124b8 <__stack_chk_fail@plt>
   2c694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c698:	movw	r5, #61168	; 0xeef0
   2c69c:	movt	r5, #4
   2c6a0:	sub	sp, sp, #148	; 0x94
   2c6a4:	mov	r8, #0
   2c6a8:	mov	r4, r0
   2c6ac:	ldr	r3, [r5]
   2c6b0:	mov	sl, r2
   2c6b4:	mov	r9, r1
   2c6b8:	mov	r2, #52	; 0x34
   2c6bc:	mov	r1, r8
   2c6c0:	add	r7, sl, #3
   2c6c4:	add	r0, sp, #20
   2c6c8:	str	r3, [sp, #140]	; 0x8c
   2c6cc:	bic	r6, r7, #3
   2c6d0:	str	r8, [sp]
   2c6d4:	bl	12308 <memset@plt>
   2c6d8:	ldrd	r2, [r4, #48]	; 0x30
   2c6dc:	ldrd	r0, [r4, #40]	; 0x28
   2c6e0:	cmp	sl, r6
   2c6e4:	lsr	r7, r7, #2
   2c6e8:	str	r7, [sp, #8]
   2c6ec:	str	r7, [sp, #12]
   2c6f0:	str	r7, [sp, #16]
   2c6f4:	strd	r2, [sp, #24]
   2c6f8:	strd	r0, [sp, #32]
   2c6fc:	bcc	2c988 <crc32@@Base+0x12f30>
   2c700:	ldrd	r2, [r4, #8]
   2c704:	mov	r1, #0
   2c708:	and	r0, r2, #4096	; 0x1000
   2c70c:	orrs	r3, r0, r1
   2c710:	bne	2c938 <crc32@@Base+0x12ee0>
   2c714:	mov	r0, r9
   2c718:	add	r2, r4, #56	; 0x38
   2c71c:	mov	r1, sl
   2c720:	bl	2c1bc <crc32@@Base+0x12764>
   2c724:	subs	r7, r0, #0
   2c728:	bne	2c91c <crc32@@Base+0x12ec4>
   2c72c:	ldrd	r2, [r4, #8]
   2c730:	mov	r3, #0
   2c734:	ldr	r1, [r4, #56]	; 0x38
   2c738:	mov	r8, r2
   2c73c:	and	r2, r2, #8192	; 0x2000
   2c740:	orrs	r3, r2, r3
   2c744:	lsr	r3, r1, #2
   2c748:	str	r3, [sp, #40]	; 0x28
   2c74c:	beq	2c788 <crc32@@Base+0x12d30>
   2c750:	movw	r3, #43512	; 0xa9f8
   2c754:	movt	r3, #30
   2c758:	ldr	r2, [r3, #16]
   2c75c:	cmp	r2, #0
   2c760:	bne	2ca84 <crc32@@Base+0x1302c>
   2c764:	ldr	r2, [r3, #12]
   2c768:	add	r3, r1, sl
   2c76c:	ldr	r2, [r2, #48]	; 0x30
   2c770:	sub	r3, r3, r2
   2c774:	str	r2, [sp, #40]	; 0x28
   2c778:	lsr	r3, r3, #2
   2c77c:	str	r3, [sp, #16]
   2c780:	str	r3, [sp, #8]
   2c784:	str	r3, [sp, #12]
   2c788:	ldrd	r0, [r4, #24]
   2c78c:	orrs	r3, r0, r1
   2c790:	bne	2c9b8 <crc32@@Base+0x12f60>
   2c794:	mov	sl, #3
   2c798:	mov	fp, #0
   2c79c:	mov	ip, #6
   2c7a0:	and	r0, r8, #16384	; 0x4000
   2c7a4:	ldrd	r2, [r4, #16]
   2c7a8:	mov	r1, #0
   2c7ac:	orrs	r1, r0, r1
   2c7b0:	ldr	r1, [r4, #32]
   2c7b4:	ldr	r0, [sp, #44]	; 0x2c
   2c7b8:	orr	r1, r1, r2
   2c7bc:	strd	sl, [r4, #24]
   2c7c0:	orr	r1, r1, r0
   2c7c4:	and	r0, r8, #524288	; 0x80000
   2c7c8:	orr	r1, r1, ip
   2c7cc:	orrne	r1, r1, #1
   2c7d0:	str	r1, [sp, #44]	; 0x2c
   2c7d4:	mov	r1, #0
   2c7d8:	orrs	r1, r0, r1
   2c7dc:	ldrne	r1, [sp, #44]	; 0x2c
   2c7e0:	orrne	r1, r1, #65536	; 0x10000
   2c7e4:	strne	r1, [sp, #44]	; 0x2c
   2c7e8:	cmp	r3, #0
   2c7ec:	cmpeq	r2, #512	; 0x200
   2c7f0:	beq	2c9e0 <crc32@@Base+0x12f88>
   2c7f4:	bhi	2c9c8 <crc32@@Base+0x12f70>
   2c7f8:	orrs	r1, r2, r3
   2c7fc:	beq	2c9e0 <crc32@@Base+0x12f88>
   2c800:	cmp	r3, #0
   2c804:	cmpeq	r2, #256	; 0x100
   2c808:	beq	2c9e0 <crc32@@Base+0x12f88>
   2c80c:	add	r1, sp, #68	; 0x44
   2c810:	add	r3, sp, #8
   2c814:	mov	ip, #0
   2c818:	ldr	r2, [r3], #4
   2c81c:	cmp	r3, r1
   2c820:	add	ip, ip, r2
   2c824:	bne	2c818 <crc32@@Base+0x12dc0>
   2c828:	add	r0, sp, #8
   2c82c:	mov	r2, sp
   2c830:	mov	r1, #64	; 0x40
   2c834:	mvn	ip, ip
   2c838:	str	ip, [sp, #68]	; 0x44
   2c83c:	bl	2c1bc <crc32@@Base+0x12764>
   2c840:	subs	r7, r0, #0
   2c844:	bne	2c91c <crc32@@Base+0x12ec4>
   2c848:	movw	r8, #43512	; 0xa9f8
   2c84c:	movt	r8, #30
   2c850:	ldr	r3, [r8, #8]
   2c854:	cmp	r3, #0
   2c858:	beq	2ca18 <crc32@@Base+0x12fc0>
   2c85c:	ldr	lr, [r8, #16]
   2c860:	ldr	ip, [sp]
   2c864:	ldr	r2, [r3, #4]
   2c868:	cmp	lr, #0
   2c86c:	add	r2, r2, #1
   2c870:	lsr	r1, ip, #2
   2c874:	str	r2, [r3, #4]
   2c878:	streq	r1, [r3, #8]
   2c87c:	beq	2c8a8 <crc32@@Base+0x12e50>
   2c880:	add	r0, lr, #60	; 0x3c
   2c884:	mov	r3, lr
   2c888:	mov	r2, #0
   2c88c:	str	r1, [lr, #12]
   2c890:	ldr	r1, [r3], #4
   2c894:	cmp	r0, r3
   2c898:	add	r2, r2, r1
   2c89c:	bne	2c890 <crc32@@Base+0x12e38>
   2c8a0:	mvn	r2, r2
   2c8a4:	str	r2, [lr, #60]	; 0x3c
   2c8a8:	ldrd	sl, [r4, #8]
   2c8ac:	mov	r1, #0
   2c8b0:	ldr	lr, [r8, #4]
   2c8b4:	and	r0, sl, #8192	; 0x2000
   2c8b8:	orrs	r3, r0, r1
   2c8bc:	add	ip, lr, ip
   2c8c0:	str	ip, [r8, #16]
   2c8c4:	beq	2c91c <crc32@@Base+0x12ec4>
   2c8c8:	ldr	r1, [r8, #12]
   2c8cc:	ldrd	r8, [r4, #16]
   2c8d0:	ldr	ip, [r4, #40]	; 0x28
   2c8d4:	ldr	r0, [r1, #48]	; 0x30
   2c8d8:	cmp	r0, #0
   2c8dc:	str	ip, [r1, #44]	; 0x2c
   2c8e0:	ldreq	r0, [r4, #56]	; 0x38
   2c8e4:	str	r6, [r1, #60]	; 0x3c
   2c8e8:	str	r6, [r1, #64]	; 0x40
   2c8ec:	streq	r0, [r1, #48]	; 0x30
   2c8f0:	cmp	r9, #0
   2c8f4:	ldr	r0, [r1, #68]	; 0x44
   2c8f8:	cmpeq	r8, #1280	; 0x500
   2c8fc:	bic	r0, r0, #3072	; 0xc00
   2c900:	str	r0, [r1, #68]	; 0x44
   2c904:	beq	2c91c <crc32@@Base+0x12ec4>
   2c908:	cmp	r9, #0
   2c90c:	cmpeq	r8, #1792	; 0x700
   2c910:	orreq	r0, r0, #3072	; 0xc00
   2c914:	streq	r0, [r1, #68]	; 0x44
   2c918:	bne	2c9fc <crc32@@Base+0x12fa4>
   2c91c:	ldr	r2, [sp, #140]	; 0x8c
   2c920:	mov	r0, r7
   2c924:	ldr	r3, [r5]
   2c928:	cmp	r2, r3
   2c92c:	bne	2ca98 <crc32@@Base+0x13040>
   2c930:	add	sp, sp, #148	; 0x94
   2c934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c938:	movw	r6, #43512	; 0xa9f8
   2c93c:	movt	r6, #30
   2c940:	ldr	r3, [r6, #12]
   2c944:	ldr	r3, [r3, #48]	; 0x30
   2c948:	cmp	r3, #0
   2c94c:	bne	2ca70 <crc32@@Base+0x13018>
   2c950:	mov	r0, r9
   2c954:	add	r2, r4, #56	; 0x38
   2c958:	mov	r1, sl
   2c95c:	bl	2c1bc <crc32@@Base+0x12764>
   2c960:	subs	r7, r0, #0
   2c964:	bne	2c91c <crc32@@Base+0x12ec4>
   2c968:	ldr	r3, [r6, #12]
   2c96c:	add	sl, sl, #63	; 0x3f
   2c970:	ldr	r2, [r4, #56]	; 0x38
   2c974:	bic	sl, sl, #63	; 0x3f
   2c978:	str	sl, [r3, #52]	; 0x34
   2c97c:	str	sl, [r3, #56]	; 0x38
   2c980:	str	r2, [r3, #48]	; 0x30
   2c984:	b	2c91c <crc32@@Base+0x12ec4>
   2c988:	mov	r0, r6
   2c98c:	bl	125cc <malloc@plt>
   2c990:	mov	r1, r9
   2c994:	mov	r2, sl
   2c998:	mov	r7, r0
   2c99c:	bl	125c0 <memcpy@plt>
   2c9a0:	mov	r1, r8
   2c9a4:	add	r0, r7, sl
   2c9a8:	sub	r2, r6, sl
   2c9ac:	mov	r9, r7
   2c9b0:	bl	12308 <memset@plt>
   2c9b4:	b	2c700 <crc32@@Base+0x12ca8>
   2c9b8:	subs	sl, r0, #1
   2c9bc:	sbc	fp, r1, #0
   2c9c0:	lsl	ip, sl, #1
   2c9c4:	b	2c7a0 <crc32@@Base+0x12d48>
   2c9c8:	cmp	r3, #0
   2c9cc:	cmpeq	r2, #768	; 0x300
   2c9d0:	beq	2c9e0 <crc32@@Base+0x12f88>
   2c9d4:	cmp	r3, #0
   2c9d8:	cmpeq	r2, #1024	; 0x400
   2c9dc:	bne	2c80c <crc32@@Base+0x12db4>
   2c9e0:	and	r8, r8, #262144	; 0x40000
   2c9e4:	mov	r9, #0
   2c9e8:	orrs	r3, r8, r9
   2c9ec:	ldrne	r3, [sp, #44]	; 0x2c
   2c9f0:	orrne	r3, r3, #8
   2c9f4:	strne	r3, [sp, #44]	; 0x2c
   2c9f8:	b	2c80c <crc32@@Base+0x12db4>
   2c9fc:	and	r2, sl, #18
   2ca00:	mov	r3, #0
   2ca04:	orrs	r3, r2, r3
   2ca08:	orrne	r0, r0, #1024	; 0x400
   2ca0c:	orreq	r0, r0, #2048	; 0x800
   2ca10:	str	r0, [r1, #68]	; 0x44
   2ca14:	b	2c91c <crc32@@Base+0x12ec4>
   2ca18:	mov	r1, r7
   2ca1c:	mov	r2, #60	; 0x3c
   2ca20:	add	r0, sp, #80	; 0x50
   2ca24:	str	r7, [sp, #4]
   2ca28:	bl	12308 <memset@plt>
   2ca2c:	add	r2, sp, #4
   2ca30:	mov	r1, #64	; 0x40
   2ca34:	add	r0, sp, #76	; 0x4c
   2ca38:	mov	r3, #0
   2ca3c:	movt	r3, #258	; 0x102
   2ca40:	str	r3, [sp, #76]	; 0x4c
   2ca44:	bl	2c1bc <crc32@@Base+0x12764>
   2ca48:	cmp	r0, #0
   2ca4c:	movne	r7, r0
   2ca50:	bne	2c91c <crc32@@Base+0x12ec4>
   2ca54:	ldr	r2, [sp, #4]
   2ca58:	ldr	r1, [r8, #12]
   2ca5c:	ldr	r3, [r8, #4]
   2ca60:	str	r2, [r1, #152]	; 0x98
   2ca64:	add	r3, r3, r2
   2ca68:	str	r3, [r8, #8]
   2ca6c:	b	2c85c <crc32@@Base+0x12e04>
   2ca70:	movw	r0, #52088	; 0xcb78
   2ca74:	movt	r0, #3
   2ca78:	bl	12290 <puts@plt>
   2ca7c:	mvn	r7, #0
   2ca80:	b	2c91c <crc32@@Base+0x12ec4>
   2ca84:	movw	r0, #52140	; 0xcbac
   2ca88:	movt	r0, #3
   2ca8c:	bl	12290 <puts@plt>
   2ca90:	mvn	r7, #0
   2ca94:	b	2c91c <crc32@@Base+0x12ec4>
   2ca98:	bl	124b8 <__stack_chk_fail@plt>
   2ca9c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2caa0:	movw	r5, #61168	; 0xeef0
   2caa4:	movt	r5, #4
   2caa8:	sub	sp, sp, #12
   2caac:	mov	r4, r0
   2cab0:	ldr	r0, [r0]
   2cab4:	ldr	r3, [r5]
   2cab8:	mov	r1, sp
   2cabc:	str	r3, [sp, #4]
   2cac0:	bl	2c2f4 <crc32@@Base+0x1289c>
   2cac4:	ldrd	r2, [r4, #32]
   2cac8:	ldrd	r6, [r4, #8]
   2cacc:	orrs	r3, r2, r3
   2cad0:	orr	r8, r6, #4194304	; 0x400000
   2cad4:	moveq	r2, #16
   2cad8:	moveq	r3, #0
   2cadc:	mov	r9, r7
   2cae0:	strdeq	r2, [r4, #32]
   2cae4:	strd	r8, [r4, #8]
   2cae8:	ldr	r2, [sp]
   2caec:	mov	r1, r0
   2caf0:	mov	r0, r4
   2caf4:	bl	2c694 <crc32@@Base+0x12c3c>
   2caf8:	ldr	r2, [sp, #4]
   2cafc:	ldr	r3, [r5]
   2cb00:	cmp	r2, r3
   2cb04:	bne	2cb10 <crc32@@Base+0x130b8>
   2cb08:	add	sp, sp, #12
   2cb0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2cb10:	bl	124b8 <__stack_chk_fail@plt>
   2cb14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cb18:	movw	fp, #61168	; 0xeef0
   2cb1c:	movt	fp, #4
   2cb20:	sub	sp, sp, #36	; 0x24
   2cb24:	mov	r5, r0
   2cb28:	add	r1, sp, #24
   2cb2c:	ldr	r3, [fp]
   2cb30:	ldr	r0, [r0]
   2cb34:	str	r3, [sp, #28]
   2cb38:	bl	2c2f4 <crc32@@Base+0x1289c>
   2cb3c:	subs	sl, r0, #0
   2cb40:	beq	2cf08 <crc32@@Base+0x134b0>
   2cb44:	ldrb	r2, [sl, #4]
   2cb48:	cmp	r2, #1
   2cb4c:	beq	2cd14 <crc32@@Base+0x132bc>
   2cb50:	cmp	r2, #2
   2cb54:	bne	2cce8 <crc32@@Base+0x13290>
   2cb58:	ldrh	r8, [sl, #60]	; 0x3c
   2cb5c:	ldr	r4, [sl, #40]	; 0x28
   2cb60:	cmp	r8, #0
   2cb64:	add	r4, sl, r4
   2cb68:	beq	2ce78 <crc32@@Base+0x13420>
   2cb6c:	mov	lr, #0
   2cb70:	mvn	r3, #0
   2cb74:	mov	ip, r4
   2cb78:	str	r4, [sp, #8]
   2cb7c:	mov	r9, lr
   2cb80:	mov	r4, r3
   2cb84:	str	sl, [sp]
   2cb88:	str	fp, [sp, #20]
   2cb8c:	ldrd	r0, [ip, #32]
   2cb90:	orrs	r3, r0, r1
   2cb94:	beq	2cbf4 <crc32@@Base+0x1319c>
   2cb98:	ldrd	r6, [ip, #16]
   2cb9c:	orrs	r3, r6, r7
   2cba0:	beq	2cbf4 <crc32@@Base+0x1319c>
   2cba4:	ldrd	r2, [ip, #8]
   2cba8:	mov	fp, #0
   2cbac:	and	sl, r2, #2
   2cbb0:	orrs	r3, sl, fp
   2cbb4:	beq	2cbf4 <crc32@@Base+0x1319c>
   2cbb8:	ldr	r3, [ip, #4]
   2cbbc:	cmp	r3, #8
   2cbc0:	beq	2cbf4 <crc32@@Base+0x1319c>
   2cbc4:	mov	r3, #0
   2cbc8:	cmp	r7, r3
   2cbcc:	cmpeq	r6, r4
   2cbd0:	movcc	r4, r6
   2cbd4:	adds	r2, r0, r6
   2cbd8:	adc	r3, r1, r7
   2cbdc:	mov	sl, r2
   2cbe0:	mov	fp, r3
   2cbe4:	mov	r3, #0
   2cbe8:	cmp	fp, r3
   2cbec:	cmpeq	sl, r9
   2cbf0:	addhi	r9, r6, r0
   2cbf4:	add	lr, lr, #1
   2cbf8:	add	ip, ip, #64	; 0x40
   2cbfc:	cmp	r8, lr
   2cc00:	bne	2cb8c <crc32@@Base+0x13134>
   2cc04:	mov	r7, r4
   2cc08:	sub	r6, r9, r7
   2cc0c:	mov	r0, #1
   2cc10:	ldr	sl, [sp]
   2cc14:	mov	r1, r6
   2cc18:	ldr	r4, [sp, #8]
   2cc1c:	ldr	fp, [sp, #20]
   2cc20:	bl	1253c <calloc@plt>
   2cc24:	subs	r9, r0, #0
   2cc28:	strne	sl, [sp]
   2cc2c:	addne	r8, r4, r8, lsl #6
   2cc30:	strne	fp, [sp, #8]
   2cc34:	bne	2cc48 <crc32@@Base+0x131f0>
   2cc38:	b	2ced8 <crc32@@Base+0x13480>
   2cc3c:	add	r4, r4, #64	; 0x40
   2cc40:	cmp	r4, r8
   2cc44:	beq	2ccbc <crc32@@Base+0x13264>
   2cc48:	ldrd	r2, [r4, #32]
   2cc4c:	ldr	ip, [r4, #16]
   2cc50:	orrs	r3, r2, r3
   2cc54:	ldr	r1, [r4, #20]
   2cc58:	moveq	r3, #1
   2cc5c:	movne	r3, #0
   2cc60:	orrs	r1, ip, r1
   2cc64:	moveq	r3, #1
   2cc68:	cmp	r3, #0
   2cc6c:	bne	2cc3c <crc32@@Base+0x131e4>
   2cc70:	ldrd	r0, [r4, #8]
   2cc74:	mov	fp, #0
   2cc78:	mov	r1, fp
   2cc7c:	and	sl, r0, #2
   2cc80:	mov	r0, sl
   2cc84:	orrs	r3, r0, r1
   2cc88:	beq	2cc3c <crc32@@Base+0x131e4>
   2cc8c:	ldr	r3, [r4, #4]
   2cc90:	cmp	r3, #8
   2cc94:	beq	2cc3c <crc32@@Base+0x131e4>
   2cc98:	ldr	r1, [r4, #24]
   2cc9c:	sub	r0, ip, r7
   2cca0:	ldr	r3, [sp]
   2cca4:	add	r0, r9, r0
   2cca8:	add	r4, r4, #64	; 0x40
   2ccac:	add	r1, r3, r1
   2ccb0:	bl	125c0 <memcpy@plt>
   2ccb4:	cmp	r4, r8
   2ccb8:	bne	2cc48 <crc32@@Base+0x131f0>
   2ccbc:	ldr	sl, [sp]
   2ccc0:	mov	r8, r7
   2ccc4:	ldr	fp, [sp, #8]
   2ccc8:	mov	r1, #0
   2cccc:	ldrd	r2, [sl, #24]
   2ccd0:	strd	r2, [sp, #8]
   2ccd4:	ldrd	r2, [r5, #8]
   2ccd8:	strd	r2, [sp]
   2ccdc:	ldrd	r2, [sp, #8]
   2cce0:	strd	r2, [r5, #48]	; 0x30
   2cce4:	b	2ce3c <crc32@@Base+0x133e4>
   2cce8:	movw	r1, #52184	; 0xcbd8
   2ccec:	mov	r0, #1
   2ccf0:	movt	r1, #3
   2ccf4:	bl	12794 <__printf_chk@plt>
   2ccf8:	mvn	r0, #0
   2ccfc:	ldr	r2, [sp, #28]
   2cd00:	ldr	r3, [fp]
   2cd04:	cmp	r2, r3
   2cd08:	bne	2cf10 <crc32@@Base+0x134b8>
   2cd0c:	add	sp, sp, #36	; 0x24
   2cd10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cd14:	ldrh	ip, [sl, #48]	; 0x30
   2cd18:	ldr	r4, [sl, #32]
   2cd1c:	cmp	ip, #0
   2cd20:	add	r4, sl, r4
   2cd24:	beq	2ce9c <crc32@@Base+0x13444>
   2cd28:	mov	r7, #0
   2cd2c:	mov	r3, r4
   2cd30:	mov	r6, r7
   2cd34:	mvn	r8, #0
   2cd38:	ldr	r2, [r3, #20]
   2cd3c:	cmp	r2, #0
   2cd40:	beq	2cd7c <crc32@@Base+0x13324>
   2cd44:	ldr	r1, [r3, #12]
   2cd48:	cmp	r1, #0
   2cd4c:	beq	2cd7c <crc32@@Base+0x13324>
   2cd50:	ldr	r0, [r3, #8]
   2cd54:	tst	r0, #2
   2cd58:	beq	2cd7c <crc32@@Base+0x13324>
   2cd5c:	ldr	r0, [r3, #4]
   2cd60:	cmp	r0, #8
   2cd64:	beq	2cd7c <crc32@@Base+0x13324>
   2cd68:	cmp	r8, r1
   2cd6c:	add	r2, r2, r1
   2cd70:	movcs	r8, r1
   2cd74:	cmp	r6, r2
   2cd78:	movcc	r6, r2
   2cd7c:	add	r7, r7, #1
   2cd80:	add	r3, r3, #40	; 0x28
   2cd84:	cmp	r7, ip
   2cd88:	bne	2cd38 <crc32@@Base+0x132e0>
   2cd8c:	sub	r6, r6, r8
   2cd90:	mov	r0, #1
   2cd94:	str	r8, [sp, #8]
   2cd98:	mov	r1, r6
   2cd9c:	bl	1253c <calloc@plt>
   2cda0:	ldrd	r2, [r5, #8]
   2cda4:	orr	r8, r2, #262144	; 0x40000
   2cda8:	mov	r9, r3
   2cdac:	strd	r8, [sp]
   2cdb0:	subs	r9, r0, #0
   2cdb4:	beq	2cee8 <crc32@@Base+0x13490>
   2cdb8:	mov	r3, #40	; 0x28
   2cdbc:	ldr	r8, [sp, #8]
   2cdc0:	mla	r7, r3, r7, r4
   2cdc4:	b	2cdd4 <crc32@@Base+0x1337c>
   2cdc8:	add	r4, r4, #40	; 0x28
   2cdcc:	cmp	r4, r7
   2cdd0:	beq	2ce20 <crc32@@Base+0x133c8>
   2cdd4:	ldr	r0, [r4, #12]
   2cdd8:	ldr	r2, [r4, #20]
   2cddc:	cmp	r0, #0
   2cde0:	cmpne	r2, #0
   2cde4:	beq	2cdc8 <crc32@@Base+0x13370>
   2cde8:	ldr	r3, [r4, #8]
   2cdec:	tst	r3, #2
   2cdf0:	beq	2cdc8 <crc32@@Base+0x13370>
   2cdf4:	ldr	r3, [r4, #4]
   2cdf8:	cmp	r3, #8
   2cdfc:	beq	2cdc8 <crc32@@Base+0x13370>
   2ce00:	ldr	r1, [r4, #16]
   2ce04:	sub	r0, r0, r8
   2ce08:	add	r0, r9, r0
   2ce0c:	add	r4, r4, #40	; 0x28
   2ce10:	add	r1, sl, r1
   2ce14:	bl	125c0 <memcpy@plt>
   2ce18:	cmp	r4, r7
   2ce1c:	bne	2cdd4 <crc32@@Base+0x1337c>
   2ce20:	str	r8, [sp, #8]
   2ce24:	ldr	r0, [sl, #24]
   2ce28:	mov	r1, #0
   2ce2c:	ldrd	r2, [sp]
   2ce30:	ldr	r8, [sp, #8]
   2ce34:	strd	r0, [r5, #48]	; 0x30
   2ce38:	strd	r2, [r5, #8]
   2ce3c:	ldrd	r2, [r5, #32]
   2ce40:	str	r1, [r5, #44]	; 0x2c
   2ce44:	ldrd	r0, [sp]
   2ce48:	orrs	r3, r2, r3
   2ce4c:	str	r8, [r5, #40]	; 0x28
   2ce50:	moveq	r2, #16
   2ce54:	moveq	r3, #0
   2ce58:	orr	r0, r0, #2097152	; 0x200000
   2ce5c:	strdeq	r2, [r5, #32]
   2ce60:	strd	r0, [r5, #8]
   2ce64:	mov	r2, r6
   2ce68:	mov	r1, r9
   2ce6c:	mov	r0, r5
   2ce70:	bl	2c694 <crc32@@Base+0x12c3c>
   2ce74:	b	2ccfc <crc32@@Base+0x132a4>
   2ce78:	mov	r1, #1
   2ce7c:	mov	r0, r1
   2ce80:	bl	1253c <calloc@plt>
   2ce84:	subs	r9, r0, #0
   2ce88:	beq	2ced8 <crc32@@Base+0x13480>
   2ce8c:	mov	r1, r8
   2ce90:	mov	r6, #1
   2ce94:	mvn	r8, #0
   2ce98:	b	2cccc <crc32@@Base+0x13274>
   2ce9c:	mov	r1, r2
   2cea0:	mov	r0, r2
   2cea4:	str	r2, [sp, #8]
   2cea8:	bl	1253c <calloc@plt>
   2ceac:	ldrd	r8, [r5, #8]
   2ceb0:	orr	r2, r8, #262144	; 0x40000
   2ceb4:	mov	r3, r9
   2ceb8:	strd	r2, [sp]
   2cebc:	subs	r9, r0, #0
   2cec0:	beq	2cee8 <crc32@@Base+0x13490>
   2cec4:	ldr	r2, [sp, #8]
   2cec8:	mvn	r3, #0
   2cecc:	str	r3, [sp, #8]
   2ced0:	mov	r6, r2
   2ced4:	b	2ce24 <crc32@@Base+0x133cc>
   2ced8:	ldrd	r2, [sl, #24]
   2cedc:	mvn	r0, #0
   2cee0:	strd	r2, [r5, #48]	; 0x30
   2cee4:	b	2ccfc <crc32@@Base+0x132a4>
   2cee8:	ldr	r3, [sl, #24]
   2ceec:	mov	r2, #0
   2cef0:	ldrd	r0, [sp]
   2cef4:	str	r2, [r5, #52]	; 0x34
   2cef8:	str	r3, [r5, #48]	; 0x30
   2cefc:	strd	r0, [r5, #8]
   2cf00:	mvn	r0, #0
   2cf04:	b	2ccfc <crc32@@Base+0x132a4>
   2cf08:	mvn	r0, #0
   2cf0c:	b	2ccfc <crc32@@Base+0x132a4>
   2cf10:	bl	124b8 <__stack_chk_fail@plt>
   2cf14:	push	{r4, r5, r6, r7, lr}
   2cf18:	movw	r5, #61168	; 0xeef0
   2cf1c:	movt	r5, #4
   2cf20:	sub	sp, sp, #28
   2cf24:	mov	r1, #0
   2cf28:	mov	r4, r0
   2cf2c:	ldr	r3, [r5]
   2cf30:	ldr	r0, [r0]
   2cf34:	str	r3, [sp, #20]
   2cf38:	bl	2c2f4 <crc32@@Base+0x1289c>
   2cf3c:	ldr	r3, [pc, #388]	; 2d0c8 <crc32@@Base+0x13670>
   2cf40:	add	ip, sp, #4
   2cf44:	subs	r6, r0, #0
   2cf48:	ldm	r3, {r0, r1, r2, r3}
   2cf4c:	stmia	ip!, {r0, r1, r2}
   2cf50:	strh	r3, [ip]
   2cf54:	beq	2d0a8 <crc32@@Base+0x13650>
   2cf58:	add	r1, sp, #4
   2cf5c:	mov	r2, #14
   2cf60:	mov	r0, r6
   2cf64:	bl	126ec <memcmp@plt>
   2cf68:	cmp	r0, #0
   2cf6c:	bne	2d0a8 <crc32@@Base+0x13650>
   2cf70:	ldrh	r2, [r6, #14]
   2cf74:	add	r6, r6, #16
   2cf78:	lsl	r3, r2, #8
   2cf7c:	orr	r3, r3, r2, lsr #8
   2cf80:	uxth	r3, r3
   2cf84:	add	r2, r6, r3
   2cf88:	ldrb	r3, [r6, r3]
   2cf8c:	cmp	r3, #98	; 0x62
   2cf90:	bne	2d0a8 <crc32@@Base+0x13650>
   2cf94:	ldrh	r1, [r2, #1]
   2cf98:	add	r2, r2, #3
   2cf9c:	lsl	r3, r1, #8
   2cfa0:	orr	r3, r3, r1, lsr #8
   2cfa4:	uxth	r3, r3
   2cfa8:	add	r1, r2, r3
   2cfac:	ldrb	r3, [r2, r3]
   2cfb0:	cmp	r3, #99	; 0x63
   2cfb4:	bne	2d0a8 <crc32@@Base+0x13650>
   2cfb8:	ldrh	r2, [r1, #1]
   2cfbc:	add	r1, r1, #3
   2cfc0:	lsl	r3, r2, #8
   2cfc4:	orr	r3, r3, r2, lsr #8
   2cfc8:	uxth	r3, r3
   2cfcc:	add	r2, r1, r3
   2cfd0:	ldrb	r3, [r1, r3]
   2cfd4:	cmp	r3, #100	; 0x64
   2cfd8:	bne	2d0a8 <crc32@@Base+0x13650>
   2cfdc:	ldrh	r1, [r2, #1]
   2cfe0:	add	r2, r2, #3
   2cfe4:	lsl	r3, r1, #8
   2cfe8:	orr	r3, r3, r1, lsr #8
   2cfec:	uxth	r3, r3
   2cff0:	add	r0, r2, r3
   2cff4:	ldrb	r3, [r2, r3]
   2cff8:	cmp	r3, #101	; 0x65
   2cffc:	bne	2d0a8 <crc32@@Base+0x13650>
   2d000:	ldr	r2, [r0, #1]
   2d004:	add	lr, r0, #5
   2d008:	rev	r2, r2
   2d00c:	cmp	r2, #0
   2d010:	beq	2d048 <crc32@@Base+0x135f0>
   2d014:	mov	r6, #255	; 0xff
   2d018:	add	r0, r0, #1
   2d01c:	movt	r6, #255	; 0xff
   2d020:	add	ip, r0, #8
   2d024:	ldr	r1, [r0, #4]
   2d028:	sub	ip, ip, lr
   2d02c:	add	r0, r0, #4
   2d030:	cmp	r2, ip
   2d034:	eor	r3, r1, r1, ror #16
   2d038:	and	r3, r6, r3, lsr #8
   2d03c:	eor	r3, r3, r1, ror #8
   2d040:	str	r3, [r0]
   2d044:	bhi	2d020 <crc32@@Base+0x135c8>
   2d048:	ldrd	r0, [r4, #32]
   2d04c:	mvn	r6, #0
   2d050:	mov	r7, #0
   2d054:	strd	r6, [r4, #40]	; 0x28
   2d058:	orrs	r3, r0, r1
   2d05c:	moveq	r0, #32
   2d060:	moveq	r1, #0
   2d064:	strdeq	r0, [r4, #32]
   2d068:	ldr	r1, [sp, #20]
   2d06c:	ldr	r3, [r5]
   2d070:	cmp	r1, r3
   2d074:	ldrd	r0, [r4, #8]
   2d078:	orr	r6, r0, #1048576	; 0x100000
   2d07c:	mov	r0, #0
   2d080:	mov	r7, r1
   2d084:	mov	r1, #0
   2d088:	strd	r6, [r4, #8]
   2d08c:	strd	r0, [r4, #48]	; 0x30
   2d090:	bne	2d0c4 <crc32@@Base+0x1366c>
   2d094:	mov	r1, lr
   2d098:	mov	r0, r4
   2d09c:	add	sp, sp, #28
   2d0a0:	pop	{r4, r5, r6, r7, lr}
   2d0a4:	b	2c694 <crc32@@Base+0x12c3c>
   2d0a8:	ldr	r2, [sp, #20]
   2d0ac:	mvn	r0, #0
   2d0b0:	ldr	r3, [r5]
   2d0b4:	cmp	r2, r3
   2d0b8:	bne	2d0c4 <crc32@@Base+0x1366c>
   2d0bc:	add	sp, sp, #28
   2d0c0:	pop	{r4, r5, r6, r7, pc}
   2d0c4:	bl	124b8 <__stack_chk_fail@plt>
   2d0c8:	andeq	ip, r3, ip, asr r9
   2d0cc:	subs	r3, r0, #0
   2d0d0:	beq	2d108 <crc32@@Base+0x136b0>
   2d0d4:	ldr	r2, [r3, #56]	; 0x38
   2d0d8:	push	{r4, lr}
   2d0dc:	cmp	r2, #0
   2d0e0:	bne	2d138 <crc32@@Base+0x136e0>
   2d0e4:	ldr	r0, [r3, #4]
   2d0e8:	cmp	r0, #0
   2d0ec:	bne	2d110 <crc32@@Base+0x136b8>
   2d0f0:	ldr	r2, [r3, #16]
   2d0f4:	cmp	r2, #0
   2d0f8:	ldreq	r3, [r3]
   2d0fc:	clzeq	r0, r3
   2d100:	lsreq	r0, r0, #5
   2d104:	pop	{r4, pc}
   2d108:	mov	r0, r3
   2d10c:	bx	lr
   2d110:	movw	r3, #65196	; 0xfeac
   2d114:	movt	r3, #4
   2d118:	mov	r2, #41	; 0x29
   2d11c:	mov	r1, #1
   2d120:	ldr	r3, [r3]
   2d124:	movw	r0, #52252	; 0xcc1c
   2d128:	movt	r0, #3
   2d12c:	bl	1259c <fwrite@plt>
   2d130:	mvn	r0, #0
   2d134:	pop	{r4, pc}
   2d138:	movw	r3, #65196	; 0xfeac
   2d13c:	movt	r3, #4
   2d140:	mov	r2, #42	; 0x2a
   2d144:	mov	r1, #1
   2d148:	ldr	r3, [r3]
   2d14c:	movw	r0, #52208	; 0xcbf0
   2d150:	movt	r0, #3
   2d154:	bl	1259c <fwrite@plt>
   2d158:	mvn	r0, #0
   2d15c:	pop	{r4, pc}
   2d160:	push	{r4, r5, r6, r7, r8, lr}
   2d164:	mov	r2, #4
   2d168:	mov	r5, r1
   2d16c:	movw	r1, #52296	; 0xcc48
   2d170:	movt	r1, #3
   2d174:	mov	r4, r0
   2d178:	bl	121a0 <strncmp@plt>
   2d17c:	cmp	r0, #0
   2d180:	beq	2d1b8 <crc32@@Base+0x13760>
   2d184:	movw	r1, #52304	; 0xcc50
   2d188:	mov	r2, #5
   2d18c:	movt	r1, #3
   2d190:	mov	r0, r4
   2d194:	bl	121a0 <strncmp@plt>
   2d198:	cmp	r0, #0
   2d19c:	bne	2d1c0 <crc32@@Base+0x13768>
   2d1a0:	ldrd	r2, [r5, #8]
   2d1a4:	add	r0, r4, #5
   2d1a8:	orr	r6, r2, #524288	; 0x80000
   2d1ac:	mov	r7, r3
   2d1b0:	strd	r6, [r5, #8]
   2d1b4:	pop	{r4, r5, r6, r7, r8, pc}
   2d1b8:	add	r0, r4, #4
   2d1bc:	pop	{r4, r5, r6, r7, r8, pc}
   2d1c0:	mov	r2, r4
   2d1c4:	movw	r1, #52312	; 0xcc58
   2d1c8:	mov	r0, #1
   2d1cc:	movt	r1, #3
   2d1d0:	bl	12794 <__printf_chk@plt>
   2d1d4:	mov	r0, #0
   2d1d8:	pop	{r4, r5, r6, r7, r8, pc}
   2d1dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d1e0:	sub	sp, sp, #4608	; 0x1200
   2d1e4:	sub	sp, sp, #44	; 0x2c
   2d1e8:	movw	r3, #61168	; 0xeef0
   2d1ec:	movt	r3, #4
   2d1f0:	add	ip, sp, #4608	; 0x1200
   2d1f4:	str	r3, [sp, #20]
   2d1f8:	add	ip, ip, #36	; 0x24
   2d1fc:	ldr	r3, [r3]
   2d200:	mov	r4, r1
   2d204:	str	r0, [sp, #24]
   2d208:	mov	r2, #2048	; 0x800
   2d20c:	mov	r1, #0
   2d210:	add	r0, sp, #96	; 0x60
   2d214:	str	r3, [ip]
   2d218:	bl	12308 <memset@plt>
   2d21c:	mov	r2, #2496	; 0x9c0
   2d220:	mov	r1, #0
   2d224:	add	r0, sp, #2144	; 0x860
   2d228:	bl	12308 <memset@plt>
   2d22c:	add	r0, sp, #2144	; 0x860
   2d230:	bl	2c120 <crc32@@Base+0x126c8>
   2d234:	mov	r2, #0
   2d238:	mov	r1, #2496	; 0x9c0
   2d23c:	add	r0, sp, #2144	; 0x860
   2d240:	bl	2c1bc <crc32@@Base+0x12764>
   2d244:	mov	r1, #0
   2d248:	cmp	r0, #0
   2d24c:	ldr	r0, [r4, #72]	; 0x48
   2d250:	movweq	r3, #43512	; 0xa9f8
   2d254:	movteq	r3, #30
   2d258:	ldreq	r2, [r3, #4]
   2d25c:	streq	r2, [r3, #12]
   2d260:	bl	2c2f4 <crc32@@Base+0x1289c>
   2d264:	cmp	r0, #0
   2d268:	beq	2d344 <crc32@@Base+0x138ec>
   2d26c:	mov	r1, #123	; 0x7b
   2d270:	bl	12788 <strchr@plt>
   2d274:	subs	r4, r0, #0
   2d278:	beq	2d344 <crc32@@Base+0x138ec>
   2d27c:	movw	r9, #51464	; 0xc908
   2d280:	add	r4, r4, #1
   2d284:	add	r8, sp, #96	; 0x60
   2d288:	movt	r9, #3
   2d28c:	mov	r3, #0
   2d290:	str	r3, [sp, #8]
   2d294:	mov	r1, #10
   2d298:	mov	r0, r4
   2d29c:	bl	12788 <strchr@plt>
   2d2a0:	subs	r7, r0, #0
   2d2a4:	beq	2d344 <crc32@@Base+0x138ec>
   2d2a8:	ldrb	r3, [r7, #-1]
   2d2ac:	cmp	r3, #13
   2d2b0:	moveq	r3, #0
   2d2b4:	strbeq	r3, [r7, #-1]
   2d2b8:	mov	r3, #0
   2d2bc:	strb	r3, [r7], #1
   2d2c0:	ldrb	r3, [r4]
   2d2c4:	cmp	r3, #9
   2d2c8:	cmpne	r3, #32
   2d2cc:	bne	2d2e0 <crc32@@Base+0x13888>
   2d2d0:	ldrb	r3, [r4, #1]!
   2d2d4:	cmp	r3, #9
   2d2d8:	cmpne	r3, #32
   2d2dc:	beq	2d2d0 <crc32@@Base+0x13878>
   2d2e0:	cmp	r3, #91	; 0x5b
   2d2e4:	beq	2d390 <crc32@@Base+0x13938>
   2d2e8:	ldrb	r3, [r4]
   2d2ec:	cmp	r3, #125	; 0x7d
   2d2f0:	beq	2d4a4 <crc32@@Base+0x13a4c>
   2d2f4:	cmp	r3, #0
   2d2f8:	bne	2d308 <crc32@@Base+0x138b0>
   2d2fc:	mov	r4, r7
   2d300:	b	2d294 <crc32@@Base+0x1383c>
   2d304:	ldrb	r3, [r4, #1]!
   2d308:	cmp	r3, #9
   2d30c:	cmpne	r3, #32
   2d310:	beq	2d304 <crc32@@Base+0x138ac>
   2d314:	ldr	r3, [sp, #8]
   2d318:	str	r4, [r8], #64	; 0x40
   2d31c:	add	r3, r3, #1
   2d320:	str	r3, [sp, #8]
   2d324:	b	2d2fc <crc32@@Base+0x138a4>
   2d328:	add	r3, sp, #552	; 0x228
   2d32c:	movw	r1, #52524	; 0xcd2c
   2d330:	add	r4, r3, r4, lsl #6
   2d334:	mov	r0, #1
   2d338:	movt	r1, #3
   2d33c:	ldr	r2, [r4, #-456]	; 0xfffffe38
   2d340:	bl	12794 <__printf_chk@plt>
   2d344:	movw	r3, #65196	; 0xfeac
   2d348:	movt	r3, #4
   2d34c:	movw	r0, #52548	; 0xcd44
   2d350:	mov	r2, #31
   2d354:	ldr	r3, [r3]
   2d358:	movt	r0, #3
   2d35c:	mov	r1, #1
   2d360:	bl	1259c <fwrite@plt>
   2d364:	mvn	r0, #0
   2d368:	add	r3, sp, #4608	; 0x1200
   2d36c:	add	r3, r3, #36	; 0x24
   2d370:	ldr	r2, [r3]
   2d374:	ldr	r3, [sp, #20]
   2d378:	ldr	r3, [r3]
   2d37c:	cmp	r2, r3
   2d380:	bne	2d924 <crc32@@Base+0x13ecc>
   2d384:	add	sp, sp, #4608	; 0x1200
   2d388:	add	sp, sp, #44	; 0x2c
   2d38c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d390:	ldrb	r3, [r4, #1]
   2d394:	add	r4, r4, #1
   2d398:	mov	sl, #48	; 0x30
   2d39c:	cmp	r3, #9
   2d3a0:	cmpne	r3, #32
   2d3a4:	ldrbeq	r3, [r4, #1]!
   2d3a8:	beq	2d39c <crc32@@Base+0x13944>
   2d3ac:	ldr	r5, [pc, #1396]	; 2d928 <crc32@@Base+0x13ed0>
   2d3b0:	mov	r6, #0
   2d3b4:	mov	r0, r5
   2d3b8:	bl	125e4 <strlen@plt>
   2d3bc:	mov	r1, r4
   2d3c0:	mov	r2, r0
   2d3c4:	mov	fp, r0
   2d3c8:	mov	r0, r5
   2d3cc:	bl	121a0 <strncmp@plt>
   2d3d0:	cmp	r0, #0
   2d3d4:	beq	2d400 <crc32@@Base+0x139a8>
   2d3d8:	add	r6, r6, #1
   2d3dc:	add	r5, r5, #48	; 0x30
   2d3e0:	cmp	r6, #10
   2d3e4:	bne	2d3b4 <crc32@@Base+0x1395c>
   2d3e8:	mov	r2, r4
   2d3ec:	movw	r1, #52348	; 0xcc7c
   2d3f0:	mov	r0, #1
   2d3f4:	movt	r1, #3
   2d3f8:	bl	12794 <__printf_chk@plt>
   2d3fc:	b	2d344 <crc32@@Base+0x138ec>
   2d400:	mla	r6, sl, r6, r9
   2d404:	add	r4, r4, fp
   2d408:	ldr	r3, [r6, #144]	; 0x90
   2d40c:	cmp	r3, #0
   2d410:	beq	2d448 <crc32@@Base+0x139f0>
   2d414:	mov	r0, r4
   2d418:	mov	r1, r8
   2d41c:	blx	r3
   2d420:	mov	r4, r0
   2d424:	cmp	r4, #0
   2d428:	beq	2d344 <crc32@@Base+0x138ec>
   2d42c:	ldrb	r3, [r4]
   2d430:	cmp	r3, #93	; 0x5d
   2d434:	beq	2d494 <crc32@@Base+0x13a3c>
   2d438:	cmp	r3, #44	; 0x2c
   2d43c:	ldrbeq	r3, [r4, #1]
   2d440:	addeq	r4, r4, #1
   2d444:	b	2d39c <crc32@@Base+0x13944>
   2d448:	ldr	r1, [r6, #136]	; 0x88
   2d44c:	mov	ip, #1
   2d450:	sub	r3, r1, #32
   2d454:	rsb	r0, r1, #32
   2d458:	lsl	r3, ip, r3
   2d45c:	str	r3, [sp, #4]
   2d460:	ldr	lr, [sp, #4]
   2d464:	lsl	r1, ip, r1
   2d468:	str	r1, [sp]
   2d46c:	orr	r0, lr, ip, lsr r0
   2d470:	str	r0, [sp, #4]
   2d474:	ldrd	r2, [r8, #8]
   2d478:	ldrd	r0, [sp]
   2d47c:	orr	r0, r0, r2
   2d480:	orr	r1, r1, r3
   2d484:	mov	r2, r0
   2d488:	mov	r3, r1
   2d48c:	strd	r2, [r8, #8]
   2d490:	b	2d424 <crc32@@Base+0x139cc>
   2d494:	add	r4, r4, #1
   2d498:	ldrb	r3, [r4]
   2d49c:	cmp	r3, #125	; 0x7d
   2d4a0:	bne	2d2f4 <crc32@@Base+0x1389c>
   2d4a4:	ldr	r3, [sp, #8]
   2d4a8:	cmp	r3, #0
   2d4ac:	beq	2d85c <crc32@@Base+0x13e04>
   2d4b0:	add	r3, sp, #96	; 0x60
   2d4b4:	str	r3, [sp, #28]
   2d4b8:	str	r3, [sp, #12]
   2d4bc:	mov	r3, #0
   2d4c0:	str	r3, [sp, #16]
   2d4c4:	b	2d4ec <crc32@@Base+0x13a94>
   2d4c8:	ldr	r2, [sp, #12]
   2d4cc:	ldr	r3, [sp, #16]
   2d4d0:	add	r2, r2, #64	; 0x40
   2d4d4:	str	r2, [sp, #12]
   2d4d8:	ldr	r2, [sp, #8]
   2d4dc:	add	r3, r3, #1
   2d4e0:	str	r3, [sp, #16]
   2d4e4:	cmp	r2, r3
   2d4e8:	beq	2d6ac <crc32@@Base+0x13c54>
   2d4ec:	ldr	r3, [sp, #12]
   2d4f0:	mov	r1, #0
   2d4f4:	ldrd	r2, [r3, #8]
   2d4f8:	and	r0, r2, #512	; 0x200
   2d4fc:	orrs	r3, r0, r1
   2d500:	beq	2d4c8 <crc32@@Base+0x13a70>
   2d504:	add	r3, sp, #2144	; 0x860
   2d508:	mov	r1, #0
   2d50c:	add	r3, r3, #8
   2d510:	mov	r2, #132	; 0x84
   2d514:	sub	r0, r3, #4
   2d518:	mov	r9, r1
   2d51c:	str	r1, [sp]
   2d520:	bl	12308 <memset@plt>
   2d524:	ldr	r3, [sp, #16]
   2d528:	add	r2, sp, #96	; 0x60
   2d52c:	add	r1, sp, #2160	; 0x870
   2d530:	add	r8, sp, #2288	; 0x8f0
   2d534:	add	r6, sp, #96	; 0x60
   2d538:	ldr	r7, [r2, r3, lsl #6]
   2d53c:	movw	r2, #52376	; 0xcc98
   2d540:	movw	r3, #52384	; 0xcca0
   2d544:	movt	r2, #3
   2d548:	movt	r3, #3
   2d54c:	str	r2, [sp, #2144]	; 0x860
   2d550:	str	r3, [sp, #2168]	; 0x878
   2d554:	movw	r2, #52392	; 0xcca8
   2d558:	movw	r3, #52400	; 0xccb0
   2d55c:	movt	r2, #3
   2d560:	movt	r3, #3
   2d564:	str	r2, [sp, #2192]	; 0x890
   2d568:	str	r3, [sp, #2216]	; 0x8a8
   2d56c:	movw	r2, #52408	; 0xccb8
   2d570:	movw	r3, #52420	; 0xccc4
   2d574:	movt	r2, #3
   2d578:	movt	r3, #3
   2d57c:	str	r2, [sp, #2240]	; 0x8c0
   2d580:	str	r3, [sp, #2264]	; 0x8d8
   2d584:	mov	r2, #256	; 0x100
   2d588:	mov	r3, #0
   2d58c:	strd	r2, [r1]
   2d590:	add	r1, sp, #2176	; 0x880
   2d594:	add	r1, r1, #8
   2d598:	strd	r2, [r1]
   2d59c:	add	r1, sp, #2208	; 0x8a0
   2d5a0:	strd	r2, [r1]
   2d5a4:	add	r1, sp, #2224	; 0x8b0
   2d5a8:	add	r1, r1, #8
   2d5ac:	strd	r2, [r1]
   2d5b0:	add	r1, sp, #2192	; 0x890
   2d5b4:	add	r1, r1, #8
   2d5b8:	mov	r2, #262144	; 0x40000
   2d5bc:	mov	r3, #0
   2d5c0:	strd	r2, [r1]
   2d5c4:	add	r1, sp, #2224	; 0x8b0
   2d5c8:	strd	r2, [r1]
   2d5cc:	add	r1, sp, #2256	; 0x8d0
   2d5d0:	mov	r2, #1280	; 0x500
   2d5d4:	mov	r3, #0
   2d5d8:	strd	r2, [r1]
   2d5dc:	add	r1, sp, #2272	; 0x8e0
   2d5e0:	add	r1, r1, #8
   2d5e4:	mov	r2, #1792	; 0x700
   2d5e8:	mov	r3, #0
   2d5ec:	strd	r2, [r1]
   2d5f0:	ldrd	r4, [r6, #8]
   2d5f4:	mov	r3, #0
   2d5f8:	and	r2, r4, #8192	; 0x2000
   2d5fc:	orrs	r3, r2, r3
   2d600:	beq	2d664 <crc32@@Base+0x13c0c>
   2d604:	add	fp, sp, #2144	; 0x860
   2d608:	ldr	sl, [fp]
   2d60c:	mov	r0, sl
   2d610:	bl	125e4 <strlen@plt>
   2d614:	mov	r1, sl
   2d618:	mov	r2, r0
   2d61c:	mov	r0, r7
   2d620:	bl	121a0 <strncmp@plt>
   2d624:	cmp	r0, #0
   2d628:	bne	2d64c <crc32@@Base+0x13bf4>
   2d62c:	mov	r1, #1
   2d630:	str	r1, [sp]
   2d634:	ldrd	r0, [fp, #16]
   2d638:	ldrd	r2, [fp, #8]
   2d63c:	strd	r0, [r6, #16]
   2d640:	orr	r4, r4, r2
   2d644:	orr	r5, r5, r3
   2d648:	strd	r4, [r6, #8]
   2d64c:	add	fp, fp, #24
   2d650:	cmp	fp, r8
   2d654:	bne	2d608 <crc32@@Base+0x13bb0>
   2d658:	ldr	r3, [sp]
   2d65c:	cmp	r3, #0
   2d660:	beq	2d694 <crc32@@Base+0x13c3c>
   2d664:	ldr	r3, [sp, #8]
   2d668:	add	r9, r9, #1
   2d66c:	add	r6, r6, #64	; 0x40
   2d670:	cmp	r3, r9
   2d674:	bne	2d5f0 <crc32@@Base+0x13b98>
   2d678:	ldr	r3, [sp]
   2d67c:	cmp	r3, #0
   2d680:	bne	2d4c8 <crc32@@Base+0x13a70>
   2d684:	movw	r0, #52464	; 0xccf0
   2d688:	movt	r0, #3
   2d68c:	bl	12290 <puts@plt>
   2d690:	b	2d344 <crc32@@Base+0x138ec>
   2d694:	mov	r2, r7
   2d698:	movw	r1, #52428	; 0xcccc
   2d69c:	mov	r0, #1
   2d6a0:	movt	r1, #3
   2d6a4:	bl	12794 <__printf_chk@plt>
   2d6a8:	b	2d344 <crc32@@Base+0x138ec>
   2d6ac:	add	r7, sp, #96	; 0x60
   2d6b0:	mvn	sl, #0
   2d6b4:	mov	r6, #0
   2d6b8:	mov	r8, r2
   2d6bc:	b	2d6e0 <crc32@@Base+0x13c88>
   2d6c0:	orr	r2, r2, r3
   2d6c4:	cmn	sl, #1
   2d6c8:	cmpne	r2, #0
   2d6cc:	bne	2d708 <crc32@@Base+0x13cb0>
   2d6d0:	add	r6, r6, #1
   2d6d4:	add	r7, r7, #64	; 0x40
   2d6d8:	cmp	r8, r6
   2d6dc:	beq	2d794 <crc32@@Base+0x13d3c>
   2d6e0:	ldrd	r4, [r7, #8]
   2d6e4:	mov	r1, #0
   2d6e8:	mov	r3, #0
   2d6ec:	and	r0, r4, #8192	; 0x2000
   2d6f0:	and	r2, r4, #4096	; 0x1000
   2d6f4:	orrs	r1, r0, r1
   2d6f8:	beq	2d6c0 <crc32@@Base+0x13c68>
   2d6fc:	orrs	r3, r2, r3
   2d700:	mov	sl, r6
   2d704:	beq	2d6d0 <crc32@@Base+0x13c78>
   2d708:	lsl	r5, r6, #6
   2d70c:	add	r3, sp, #96	; 0x60
   2d710:	add	r4, r3, r5
   2d714:	add	r3, sp, #552	; 0x228
   2d718:	add	r9, r3, sl, lsl #6
   2d71c:	add	lr, sp, #32
   2d720:	mov	r5, r4
   2d724:	sub	ip, r9, #456	; 0x1c8
   2d728:	ldm	r4!, {r0, r1, r2, r3}
   2d72c:	mov	fp, lr
   2d730:	mov	r9, ip
   2d734:	stmia	lr!, {r0, r1, r2, r3}
   2d738:	ldm	r4!, {r0, r1, r2, r3}
   2d73c:	stmia	lr!, {r0, r1, r2, r3}
   2d740:	ldm	r4!, {r0, r1, r2, r3}
   2d744:	stmia	lr!, {r0, r1, r2, r3}
   2d748:	ldm	r4, {r0, r1, r2, r3}
   2d74c:	stm	lr, {r0, r1, r2, r3}
   2d750:	ldm	ip!, {r0, r1, r2, r3}
   2d754:	stmia	r5!, {r0, r1, r2, r3}
   2d758:	ldm	ip!, {r0, r1, r2, r3}
   2d75c:	stmia	r5!, {r0, r1, r2, r3}
   2d760:	ldm	ip!, {r0, r1, r2, r3}
   2d764:	stmia	r5!, {r0, r1, r2, r3}
   2d768:	ldm	ip, {r0, r1, r2, r3}
   2d76c:	stm	r4, {r0, r1, r2, r3}
   2d770:	ldm	fp!, {r0, r1, r2, r3}
   2d774:	stmia	r9!, {r0, r1, r2, r3}
   2d778:	ldm	fp!, {r0, r1, r2, r3}
   2d77c:	stmia	r9!, {r0, r1, r2, r3}
   2d780:	ldm	fp!, {r0, r1, r2, r3}
   2d784:	stmia	r9!, {r0, r1, r2, r3}
   2d788:	ldm	lr, {r0, r1, r2, r3}
   2d78c:	stm	ip, {r0, r1, r2, r3}
   2d790:	b	2d6d0 <crc32@@Base+0x13c78>
   2d794:	movw	r5, #19526	; 0x4c46
   2d798:	mov	r4, #0
   2d79c:	movt	r5, #32581	; 0x7f45
   2d7a0:	ldr	r7, [sp, #8]
   2d7a4:	ldr	r6, [sp, #28]
   2d7a8:	b	2d818 <crc32@@Base+0x13dc0>
   2d7ac:	mov	r2, #4
   2d7b0:	add	r1, sp, #32
   2d7b4:	bl	12368 <read@plt>
   2d7b8:	cmp	r0, #4
   2d7bc:	bne	2d328 <crc32@@Base+0x138d0>
   2d7c0:	mov	r0, r8
   2d7c4:	bl	12338 <close@plt>
   2d7c8:	ldr	r3, [sp, #32]
   2d7cc:	mov	r1, #4080	; 0xff0
   2d7d0:	movt	r1, #9
   2d7d4:	rev	r2, r3
   2d7d8:	cmp	r2, r1
   2d7dc:	beq	2d918 <crc32@@Base+0x13ec0>
   2d7e0:	movw	r1, #51868	; 0xca9c
   2d7e4:	cmp	r2, r5
   2d7e8:	movt	r1, #2
   2d7ec:	movw	r3, #51988	; 0xcb14
   2d7f0:	movt	r3, #2
   2d7f4:	movne	r3, r1
   2d7f8:	mov	r0, r6
   2d7fc:	blx	r3
   2d800:	cmp	r0, #0
   2d804:	bne	2d344 <crc32@@Base+0x138ec>
   2d808:	add	r4, r4, #1
   2d80c:	add	r6, r6, #64	; 0x40
   2d810:	cmp	r7, r4
   2d814:	beq	2d85c <crc32@@Base+0x13e04>
   2d818:	ldrd	r2, [r6, #8]
   2d81c:	mov	r1, #0
   2d820:	and	r0, r2, #512	; 0x200
   2d824:	orrs	r3, r0, r1
   2d828:	bne	2d808 <crc32@@Base+0x13db0>
   2d82c:	add	r3, sp, #96	; 0x60
   2d830:	mov	r1, #0
   2d834:	ldr	r0, [r3, r4, lsl #6]
   2d838:	bl	12458 <open@plt>
   2d83c:	subs	r8, r0, #0
   2d840:	bge	2d7ac <crc32@@Base+0x13d54>
   2d844:	ldr	r2, [r6]
   2d848:	movw	r1, #52500	; 0xcd14
   2d84c:	mov	r0, #1
   2d850:	movt	r1, #3
   2d854:	bl	12794 <__printf_chk@plt>
   2d858:	b	2d344 <crc32@@Base+0x138ec>
   2d85c:	movw	r5, #43512	; 0xa9f8
   2d860:	movt	r5, #30
   2d864:	mov	r2, #0
   2d868:	ldr	lr, [r5, #12]
   2d86c:	add	r3, lr, #32
   2d870:	add	r0, lr, #72	; 0x48
   2d874:	ldr	r1, [r3], #4
   2d878:	cmp	r0, r3
   2d87c:	add	r2, r2, r1
   2d880:	bne	2d874 <crc32@@Base+0x13e1c>
   2d884:	ldr	ip, [r5, #8]
   2d888:	mvn	r2, r2
   2d88c:	str	r2, [lr, #72]	; 0x48
   2d890:	cmp	ip, #0
   2d894:	beq	2d8bc <crc32@@Base+0x13e64>
   2d898:	add	r0, ip, #60	; 0x3c
   2d89c:	mov	r3, ip
   2d8a0:	mov	r2, #0
   2d8a4:	ldr	r1, [r3], #4
   2d8a8:	cmp	r0, r3
   2d8ac:	add	r2, r2, r1
   2d8b0:	bne	2d8a4 <crc32@@Base+0x13e4c>
   2d8b4:	mvn	r2, r2
   2d8b8:	str	r2, [ip, #60]	; 0x3c
   2d8bc:	mov	r2, #0
   2d8c0:	ldr	r0, [sp, #24]
   2d8c4:	mov	r1, r2
   2d8c8:	bl	12518 <lseek@plt>
   2d8cc:	cmp	r0, #0
   2d8d0:	bne	2d344 <crc32@@Base+0x138ec>
   2d8d4:	ldrd	r4, [r5]
   2d8d8:	cmp	r4, #0
   2d8dc:	ldrne	r6, [sp, #24]
   2d8e0:	bne	2d8f4 <crc32@@Base+0x13e9c>
   2d8e4:	b	2d910 <crc32@@Base+0x13eb8>
   2d8e8:	subs	r4, r4, r0
   2d8ec:	add	r5, r5, r0
   2d8f0:	beq	2d910 <crc32@@Base+0x13eb8>
   2d8f4:	mov	r2, r4
   2d8f8:	mov	r1, r5
   2d8fc:	mov	r0, r6
   2d900:	bl	1262c <write@plt>
   2d904:	cmp	r0, #0
   2d908:	bge	2d8e8 <crc32@@Base+0x13e90>
   2d90c:	b	2d344 <crc32@@Base+0x138ec>
   2d910:	mov	r0, #0
   2d914:	b	2d368 <crc32@@Base+0x13910>
   2d918:	movw	r3, #53012	; 0xcf14
   2d91c:	movt	r3, #2
   2d920:	b	2d7f8 <crc32@@Base+0x13da0>
   2d924:	bl	124b8 <__stack_chk_fail@plt>
   2d928:	andeq	ip, r3, r0, ror r9
   2d92c:	ldr	r2, [r0]
   2d930:	movw	r1, #65261	; 0xfeed
   2d934:	push	{lr}		; (str lr, [sp, #-4]!)
   2d938:	ubfx	lr, r2, #8, #8
   2d93c:	lsr	r3, r2, #24
   2d940:	ubfx	ip, r2, #16, #8
   2d944:	orr	r3, r3, r2, lsl #24
   2d948:	movt	r1, #53261	; 0xd00d
   2d94c:	orr	r3, r3, lr, lsl #16
   2d950:	orr	r3, r3, ip, lsl #8
   2d954:	cmp	r3, r1
   2d958:	beq	2d994 <crc32@@Base+0x13f3c>
   2d95c:	movw	r2, #274	; 0x112
   2d960:	movt	r2, #12274	; 0x2ff2
   2d964:	cmp	r3, r2
   2d968:	bne	2d9e4 <crc32@@Base+0x13f8c>
   2d96c:	ldr	r2, [r0, #36]	; 0x24
   2d970:	ubfx	r0, r2, #8, #8
   2d974:	ubfx	r1, r2, #16, #8
   2d978:	lsr	r3, r2, #24
   2d97c:	orr	r3, r3, r2, lsl #24
   2d980:	orr	r3, r3, r0, lsl #16
   2d984:	orrs	r3, r3, r1, lsl #8
   2d988:	movne	r0, #0
   2d98c:	mvneq	r0, #6
   2d990:	pop	{pc}		; (ldr pc, [sp], #4)
   2d994:	ldr	r2, [r0, #20]
   2d998:	ubfx	ip, r2, #8, #8
   2d99c:	ubfx	r1, r2, #16, #8
   2d9a0:	lsr	r3, r2, #24
   2d9a4:	orr	r3, r3, r2, lsl #24
   2d9a8:	orr	r3, r3, ip, lsl #16
   2d9ac:	orr	r3, r3, r1, lsl #8
   2d9b0:	cmp	r3, #1
   2d9b4:	bls	2d9ec <crc32@@Base+0x13f94>
   2d9b8:	ldr	r2, [r0, #24]
   2d9bc:	ubfx	r0, r2, #8, #8
   2d9c0:	ubfx	r1, r2, #16, #8
   2d9c4:	lsr	r3, r2, #24
   2d9c8:	orr	r3, r3, r2, lsl #24
   2d9cc:	orr	r3, r3, r0, lsl #16
   2d9d0:	orr	r3, r3, r1, lsl #8
   2d9d4:	cmp	r3, #18
   2d9d8:	movcc	r0, #0
   2d9dc:	mvncs	r0, #9
   2d9e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2d9e4:	mvn	r0, #8
   2d9e8:	pop	{pc}		; (ldr pc, [sp], #4)
   2d9ec:	mvn	r0, #9
   2d9f0:	pop	{pc}		; (ldr pc, [sp], #4)
   2d9f4:	ldr	ip, [r0, #8]
   2d9f8:	push	{r4, r5, r6, lr}
   2d9fc:	ubfx	r4, ip, #8, #8
   2da00:	lsr	r3, ip, #24
   2da04:	ubfx	lr, ip, #16, #8
   2da08:	orr	r3, r3, ip, lsl #24
   2da0c:	orr	r3, r3, r4, lsl #16
   2da10:	orr	r3, r3, lr, lsl #8
   2da14:	adds	r3, r1, r3
   2da18:	bcs	2daa0 <crc32@@Base+0x14048>
   2da1c:	adds	r4, r3, r2
   2da20:	bcs	2daa0 <crc32@@Base+0x14048>
   2da24:	ldr	lr, [r0, #4]
   2da28:	ubfx	r6, lr, #8, #8
   2da2c:	ubfx	r5, lr, #16, #8
   2da30:	lsr	ip, lr, #24
   2da34:	orr	ip, ip, lr, lsl #24
   2da38:	orr	ip, ip, r6, lsl #16
   2da3c:	orr	ip, ip, r5, lsl #8
   2da40:	cmp	r4, ip
   2da44:	bhi	2daa0 <crc32@@Base+0x14048>
   2da48:	ldr	lr, [r0, #20]
   2da4c:	ubfx	r5, lr, #8, #8
   2da50:	ubfx	r4, lr, #16, #8
   2da54:	lsr	ip, lr, #24
   2da58:	orr	ip, ip, lr, lsl #24
   2da5c:	orr	ip, ip, r5, lsl #16
   2da60:	orr	ip, ip, r4, lsl #8
   2da64:	cmp	ip, #16
   2da68:	bls	2da98 <crc32@@Base+0x14040>
   2da6c:	adds	r1, r1, r2
   2da70:	bcs	2daa0 <crc32@@Base+0x14048>
   2da74:	ldr	ip, [r0, #36]	; 0x24
   2da78:	ubfx	r4, ip, #8, #8
   2da7c:	ubfx	lr, ip, #16, #8
   2da80:	lsr	r2, ip, #24
   2da84:	orr	r2, r2, ip, lsl #24
   2da88:	orr	r2, r2, r4, lsl #16
   2da8c:	orr	r2, r2, lr, lsl #8
   2da90:	cmp	r1, r2
   2da94:	bhi	2daa0 <crc32@@Base+0x14048>
   2da98:	add	r0, r0, r3
   2da9c:	pop	{r4, r5, r6, pc}
   2daa0:	mov	r0, #0
   2daa4:	pop	{r4, r5, r6, pc}
   2daa8:	push	{r4, r5, r6, r7, r8, lr}
   2daac:	mov	r6, r2
   2dab0:	mvn	r3, #7
   2dab4:	mov	r2, #4
   2dab8:	str	r3, [r6]
   2dabc:	mov	r7, r0
   2dac0:	mov	r8, r1
   2dac4:	bl	2d9f4 <crc32@@Base+0x13f9c>
   2dac8:	cmp	r0, #0
   2dacc:	beq	2db54 <crc32@@Base+0x140fc>
   2dad0:	ldr	r3, [r0]
   2dad4:	mvn	r2, #10
   2dad8:	str	r2, [r6]
   2dadc:	add	r4, r8, #4
   2dae0:	ubfx	r1, r3, #8, #8
   2dae4:	ubfx	r2, r3, #16, #8
   2dae8:	lsr	r5, r3, #24
   2daec:	orr	r5, r5, r3, lsl #24
   2daf0:	orr	r5, r5, r1, lsl #16
   2daf4:	orr	r5, r5, r2, lsl #8
   2daf8:	sub	r3, r5, #1
   2dafc:	cmp	r3, #8
   2db00:	ldrls	pc, [pc, r3, lsl #2]
   2db04:	b	2db54 <crc32@@Base+0x140fc>
   2db08:	andeq	sp, r2, r8, lsr fp
   2db0c:	ldrdeq	sp, [r2], -ip
   2db10:	andeq	sp, r2, r0, ror #22
   2db14:	ldrdeq	sp, [r2], -ip
   2db18:	andeq	sp, r2, r4, asr fp
   2db1c:	andeq	sp, r2, r4, asr fp
   2db20:	andeq	sp, r2, r4, asr fp
   2db24:	andeq	sp, r2, r4, asr fp
   2db28:	ldrdeq	sp, [r2], -ip
   2db2c:	ldrb	r3, [r0]
   2db30:	cmp	r3, #0
   2db34:	beq	2dbdc <crc32@@Base+0x14184>
   2db38:	mov	r2, #1
   2db3c:	mov	r1, r4
   2db40:	mov	r0, r7
   2db44:	add	r4, r4, r2
   2db48:	bl	2d9f4 <crc32@@Base+0x13f9c>
   2db4c:	cmp	r0, #0
   2db50:	bne	2db2c <crc32@@Base+0x140d4>
   2db54:	mov	r5, #9
   2db58:	mov	r0, r5
   2db5c:	pop	{r4, r5, r6, r7, r8, pc}
   2db60:	mov	r1, r4
   2db64:	mov	r2, #4
   2db68:	mov	r0, r7
   2db6c:	bl	2d9f4 <crc32@@Base+0x13f9c>
   2db70:	cmp	r0, #0
   2db74:	beq	2db54 <crc32@@Base+0x140fc>
   2db78:	ldr	ip, [r0]
   2db7c:	add	r1, r8, #12
   2db80:	ldr	r0, [r7, #20]
   2db84:	ubfx	r3, ip, #8, #8
   2db88:	lsr	r2, ip, #24
   2db8c:	ubfx	lr, r0, #8, #8
   2db90:	orr	r2, r2, ip, lsl #24
   2db94:	ubfx	ip, ip, #16, #8
   2db98:	orr	r2, r2, r3, lsl #16
   2db9c:	lsr	r3, r0, #24
   2dba0:	orr	r3, r3, r0, lsl #24
   2dba4:	ubfx	r0, r0, #16, #8
   2dba8:	orr	r3, r3, lr, lsl #16
   2dbac:	orr	r2, r2, ip, lsl #8
   2dbb0:	orr	r0, r3, r0, lsl #8
   2dbb4:	add	r4, r2, r1
   2dbb8:	cmp	r0, #15
   2dbbc:	movls	r3, #1
   2dbc0:	movhi	r3, #0
   2dbc4:	cmp	r2, #7
   2dbc8:	movls	r3, #0
   2dbcc:	cmp	r3, #0
   2dbd0:	beq	2dbdc <crc32@@Base+0x14184>
   2dbd4:	tst	r1, #7
   2dbd8:	addne	r4, r4, #4
   2dbdc:	mov	r0, r7
   2dbe0:	sub	r2, r4, r8
   2dbe4:	mov	r1, r8
   2dbe8:	bl	2d9f4 <crc32@@Base+0x13f9c>
   2dbec:	cmp	r0, #0
   2dbf0:	beq	2db54 <crc32@@Base+0x140fc>
   2dbf4:	add	r4, r4, #3
   2dbf8:	mov	r0, r5
   2dbfc:	bic	r4, r4, #3
   2dc00:	str	r4, [r6]
   2dc04:	pop	{r4, r5, r6, r7, r8, pc}
   2dc08:	push	{lr}		; (str lr, [sp, #-4]!)
   2dc0c:	subs	r3, r1, #0
   2dc10:	sub	sp, sp, #12
   2dc14:	str	r1, [sp, #4]
   2dc18:	blt	2dc40 <crc32@@Base+0x141e8>
   2dc1c:	tst	r3, #3
   2dc20:	bne	2dc40 <crc32@@Base+0x141e8>
   2dc24:	add	r2, sp, #4
   2dc28:	bl	2daa8 <crc32@@Base+0x14050>
   2dc2c:	cmp	r0, #1
   2dc30:	bne	2dc40 <crc32@@Base+0x141e8>
   2dc34:	ldr	r0, [sp, #4]
   2dc38:	add	sp, sp, #12
   2dc3c:	pop	{pc}		; (ldr pc, [sp], #4)
   2dc40:	mvn	r0, #3
   2dc44:	b	2dc38 <crc32@@Base+0x141e0>
   2dc48:	push	{lr}		; (str lr, [sp, #-4]!)
   2dc4c:	subs	r3, r1, #0
   2dc50:	sub	sp, sp, #12
   2dc54:	str	r1, [sp, #4]
   2dc58:	blt	2dc80 <crc32@@Base+0x14228>
   2dc5c:	tst	r3, #3
   2dc60:	bne	2dc80 <crc32@@Base+0x14228>
   2dc64:	add	r2, sp, #4
   2dc68:	bl	2daa8 <crc32@@Base+0x14050>
   2dc6c:	cmp	r0, #3
   2dc70:	bne	2dc80 <crc32@@Base+0x14228>
   2dc74:	ldr	r0, [sp, #4]
   2dc78:	add	sp, sp, #12
   2dc7c:	pop	{pc}		; (ldr pc, [sp], #4)
   2dc80:	mvn	r0, #3
   2dc84:	b	2dc78 <crc32@@Base+0x14220>
   2dc88:	push	{r4, r5, r6, r7, lr}
   2dc8c:	movw	r6, #61168	; 0xeef0
   2dc90:	movt	r6, #4
   2dc94:	sub	sp, sp, #12
   2dc98:	cmp	r1, #0
   2dc9c:	mov	r4, #0
   2dca0:	ldr	r3, [r6]
   2dca4:	mov	r5, r2
   2dca8:	str	r4, [sp]
   2dcac:	mov	r7, r0
   2dcb0:	str	r3, [sp, #4]
   2dcb4:	bge	2dd54 <crc32@@Base+0x142fc>
   2dcb8:	mov	r2, sp
   2dcbc:	mov	r1, r4
   2dcc0:	mov	r0, r7
   2dcc4:	bl	2daa8 <crc32@@Base+0x14050>
   2dcc8:	cmp	r0, #2
   2dccc:	beq	2dce8 <crc32@@Base+0x14290>
   2dcd0:	cmp	r0, #9
   2dcd4:	beq	2dd38 <crc32@@Base+0x142e0>
   2dcd8:	cmp	r0, #1
   2dcdc:	beq	2dd0c <crc32@@Base+0x142b4>
   2dce0:	ldr	r4, [sp]
   2dce4:	b	2dcb8 <crc32@@Base+0x14260>
   2dce8:	cmp	r5, #0
   2dcec:	beq	2dce0 <crc32@@Base+0x14288>
   2dcf0:	ldr	r3, [r5]
   2dcf4:	sub	r3, r3, #1
   2dcf8:	str	r3, [r5]
   2dcfc:	cmp	r3, #0
   2dd00:	bge	2dce0 <crc32@@Base+0x14288>
   2dd04:	ldr	r4, [sp]
   2dd08:	b	2dd1c <crc32@@Base+0x142c4>
   2dd0c:	cmp	r5, #0
   2dd10:	ldrne	r3, [r5]
   2dd14:	addne	r3, r3, #1
   2dd18:	strne	r3, [r5]
   2dd1c:	ldr	r2, [sp, #4]
   2dd20:	mov	r0, r4
   2dd24:	ldr	r3, [r6]
   2dd28:	cmp	r2, r3
   2dd2c:	bne	2dd74 <crc32@@Base+0x1431c>
   2dd30:	add	sp, sp, #12
   2dd34:	pop	{r4, r5, r6, r7, pc}
   2dd38:	ldr	r4, [sp]
   2dd3c:	cmp	r4, #0
   2dd40:	bge	2dd6c <crc32@@Base+0x14314>
   2dd44:	cmp	r5, #0
   2dd48:	cmneq	r4, #8
   2dd4c:	mvneq	r4, #0
   2dd50:	b	2dd1c <crc32@@Base+0x142c4>
   2dd54:	bl	2dc08 <crc32@@Base+0x141b0>
   2dd58:	cmp	r0, #0
   2dd5c:	mov	r4, r0
   2dd60:	str	r0, [sp]
   2dd64:	bge	2dcb8 <crc32@@Base+0x14260>
   2dd68:	b	2dd1c <crc32@@Base+0x142c4>
   2dd6c:	mvn	r4, #0
   2dd70:	b	2dd1c <crc32@@Base+0x142c4>
   2dd74:	bl	124b8 <__stack_chk_fail@plt>
   2dd78:	push	{r4, lr}
   2dd7c:	movw	r4, #61168	; 0xeef0
   2dd80:	movt	r4, #4
   2dd84:	sub	sp, sp, #8
   2dd88:	add	r2, sp, #8
   2dd8c:	mov	ip, #0
   2dd90:	ldr	r3, [r4]
   2dd94:	str	ip, [r2, #-8]!
   2dd98:	str	r3, [sp, #4]
   2dd9c:	bl	2dc88 <crc32@@Base+0x14230>
   2dda0:	cmp	r0, #0
   2dda4:	blt	2ddcc <crc32@@Base+0x14374>
   2dda8:	ldr	r3, [sp]
   2ddac:	cmp	r3, #1
   2ddb0:	mvnne	r0, #0
   2ddb4:	ldr	r2, [sp, #4]
   2ddb8:	ldr	r3, [r4]
   2ddbc:	cmp	r2, r3
   2ddc0:	bne	2ddd4 <crc32@@Base+0x1437c>
   2ddc4:	add	sp, sp, #8
   2ddc8:	pop	{r4, pc}
   2ddcc:	mvn	r0, #0
   2ddd0:	b	2ddb4 <crc32@@Base+0x1435c>
   2ddd4:	bl	124b8 <__stack_chk_fail@plt>
   2ddd8:	push	{r4, r5, r6, lr}
   2dddc:	movw	r6, #61168	; 0xeef0
   2dde0:	movt	r6, #4
   2dde4:	sub	sp, sp, #8
   2dde8:	add	r4, sp, #8
   2ddec:	mov	r2, #1
   2ddf0:	ldr	r3, [r6]
   2ddf4:	mov	r5, r0
   2ddf8:	str	r2, [r4, #-8]!
   2ddfc:	str	r3, [sp, #4]
   2de00:	b	2de18 <crc32@@Base+0x143c0>
   2de04:	ldr	r3, [sp]
   2de08:	cmp	r3, #0
   2de0c:	ble	2de2c <crc32@@Base+0x143d4>
   2de10:	cmp	r3, #1
   2de14:	beq	2de48 <crc32@@Base+0x143f0>
   2de18:	mov	r2, r4
   2de1c:	mov	r0, r5
   2de20:	bl	2dc88 <crc32@@Base+0x14230>
   2de24:	subs	r1, r0, #0
   2de28:	bge	2de04 <crc32@@Base+0x143ac>
   2de2c:	mvn	r0, #0
   2de30:	ldr	r2, [sp, #4]
   2de34:	ldr	r3, [r6]
   2de38:	cmp	r2, r3
   2de3c:	bne	2de50 <crc32@@Base+0x143f8>
   2de40:	add	sp, sp, #8
   2de44:	pop	{r4, r5, r6, pc}
   2de48:	mov	r0, r1
   2de4c:	b	2de30 <crc32@@Base+0x143d8>
   2de50:	bl	124b8 <__stack_chk_fail@plt>
   2de54:	push	{r4, r5, r6, r7, r8, lr}
   2de58:	mov	r4, r0
   2de5c:	mov	r0, r2
   2de60:	mov	r5, r1
   2de64:	mov	r7, r2
   2de68:	bl	125e4 <strlen@plt>
   2de6c:	add	r6, r0, #1
   2de70:	sub	r5, r5, r6
   2de74:	adds	r5, r4, r5
   2de78:	bcc	2de8c <crc32@@Base+0x14434>
   2de7c:	b	2deac <crc32@@Base+0x14454>
   2de80:	add	r4, r4, #1
   2de84:	cmp	r5, r4
   2de88:	bcc	2deac <crc32@@Base+0x14454>
   2de8c:	mov	r2, r6
   2de90:	mov	r1, r7
   2de94:	mov	r0, r4
   2de98:	bl	126ec <memcmp@plt>
   2de9c:	cmp	r0, #0
   2dea0:	bne	2de80 <crc32@@Base+0x14428>
   2dea4:	mov	r0, r4
   2dea8:	pop	{r4, r5, r6, r7, r8, pc}
   2deac:	mov	r0, #0
   2deb0:	pop	{r4, r5, r6, r7, r8, pc}
   2deb4:	push	{r4, r5, r6, r7, r8, lr}
   2deb8:	mov	r6, r1
   2debc:	mov	r5, r2
   2dec0:	mov	r4, r0
   2dec4:	bl	2d92c <crc32@@Base+0x13ed4>
   2dec8:	subs	r7, r0, #0
   2decc:	bne	2df00 <crc32@@Base+0x144a8>
   2ded0:	ldr	r3, [r4, #4]
   2ded4:	ubfx	r0, r3, #8, #8
   2ded8:	ubfx	r1, r3, #16, #8
   2dedc:	lsr	r2, r3, #24
   2dee0:	orr	r2, r2, r3, lsl #24
   2dee4:	orr	r2, r2, r0, lsl #16
   2dee8:	orr	r2, r2, r1, lsl #8
   2deec:	cmp	r5, r2
   2def0:	bcc	2df08 <crc32@@Base+0x144b0>
   2def4:	mov	r1, r4
   2def8:	mov	r0, r6
   2defc:	bl	123a4 <memmove@plt>
   2df00:	mov	r0, r7
   2df04:	pop	{r4, r5, r6, r7, r8, pc}
   2df08:	mvn	r7, #2
   2df0c:	b	2df00 <crc32@@Base+0x144a8>
   2df10:	push	{r4, r5, r6, lr}
   2df14:	movw	r4, #61168	; 0xeef0
   2df18:	sub	sp, sp, #16
   2df1c:	movt	r4, #4
   2df20:	add	ip, sp, #8
   2df24:	str	ip, [sp]
   2df28:	ldr	ip, [r4]
   2df2c:	ldr	r5, [sp, #32]
   2df30:	ldr	r6, [sp, #36]	; 0x24
   2df34:	str	ip, [sp, #12]
   2df38:	bl	31170 <crc32@@Base+0x17718>
   2df3c:	cmp	r0, #0
   2df40:	ldreq	r0, [sp, #8]
   2df44:	beq	2df70 <crc32@@Base+0x14518>
   2df48:	ldr	r2, [sp, #40]	; 0x28
   2df4c:	ldr	r3, [sp, #8]
   2df50:	add	r2, r2, r5
   2df54:	cmp	r2, r3
   2df58:	bhi	2df88 <crc32@@Base+0x14530>
   2df5c:	mov	r1, r6
   2df60:	add	r0, r0, r5
   2df64:	ldr	r2, [sp, #40]	; 0x28
   2df68:	bl	125c0 <memcpy@plt>
   2df6c:	mov	r0, #0
   2df70:	ldr	r2, [sp, #12]
   2df74:	ldr	r3, [r4]
   2df78:	cmp	r2, r3
   2df7c:	bne	2df90 <crc32@@Base+0x14538>
   2df80:	add	sp, sp, #16
   2df84:	pop	{r4, r5, r6, pc}
   2df88:	mvn	r0, #2
   2df8c:	b	2df70 <crc32@@Base+0x14518>
   2df90:	bl	124b8 <__stack_chk_fail@plt>
   2df94:	push	{r4, r5, r6, r7, r8, r9, lr}
   2df98:	movw	r4, #61168	; 0xeef0
   2df9c:	movt	r4, #4
   2dfa0:	sub	sp, sp, #28
   2dfa4:	mov	r9, r3
   2dfa8:	add	r3, sp, #16
   2dfac:	ldr	ip, [r4]
   2dfb0:	mov	r7, r0
   2dfb4:	mov	r8, r1
   2dfb8:	mov	r5, r2
   2dfbc:	str	ip, [sp, #20]
   2dfc0:	bl	31204 <crc32@@Base+0x177ac>
   2dfc4:	cmp	r0, #0
   2dfc8:	ldreq	r0, [sp, #16]
   2dfcc:	beq	2e00c <crc32@@Base+0x145b4>
   2dfd0:	ldr	r6, [sp, #16]
   2dfd4:	ldr	r3, [sp, #56]	; 0x38
   2dfd8:	cmp	r6, r3
   2dfdc:	bne	2e024 <crc32@@Base+0x145cc>
   2dfe0:	mov	r0, r5
   2dfe4:	bl	125e4 <strlen@plt>
   2dfe8:	mov	r3, #0
   2dfec:	str	r6, [sp, #8]
   2dff0:	mov	r2, r5
   2dff4:	str	r3, [sp]
   2dff8:	mov	r1, r8
   2dffc:	str	r9, [sp, #4]
   2e000:	mov	r3, r0
   2e004:	mov	r0, r7
   2e008:	bl	2df10 <crc32@@Base+0x144b8>
   2e00c:	ldr	r2, [sp, #20]
   2e010:	ldr	r3, [r4]
   2e014:	cmp	r2, r3
   2e018:	bne	2e02c <crc32@@Base+0x145d4>
   2e01c:	add	sp, sp, #28
   2e020:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e024:	mvn	r0, #2
   2e028:	b	2e00c <crc32@@Base+0x145b4>
   2e02c:	bl	124b8 <__stack_chk_fail@plt>
   2e030:	push	{r4, lr}
   2e034:	movw	r4, #61168	; 0xeef0
   2e038:	movt	r4, #4
   2e03c:	sub	sp, sp, #8
   2e040:	ldr	ip, [r4]
   2e044:	mov	r3, sp
   2e048:	str	ip, [sp, #4]
   2e04c:	bl	31130 <crc32@@Base+0x176d8>
   2e050:	cmp	r0, #0
   2e054:	ldreq	r0, [sp]
   2e058:	beq	2e084 <crc32@@Base+0x1462c>
   2e05c:	ldr	r3, [sp]
   2e060:	add	r3, r3, #12
   2e064:	add	r3, r0, r3
   2e068:	cmp	r0, r3
   2e06c:	bcs	2e080 <crc32@@Base+0x14628>
   2e070:	mov	r2, #67108864	; 0x4000000
   2e074:	str	r2, [r0], #4
   2e078:	cmp	r0, r3
   2e07c:	bcc	2e074 <crc32@@Base+0x1461c>
   2e080:	mov	r0, #0
   2e084:	ldr	r2, [sp, #4]
   2e088:	ldr	r3, [r4]
   2e08c:	cmp	r2, r3
   2e090:	bne	2e09c <crc32@@Base+0x14644>
   2e094:	add	sp, sp, #8
   2e098:	pop	{r4, pc}
   2e09c:	bl	124b8 <__stack_chk_fail@plt>
   2e0a0:	push	{r4, r5, lr}
   2e0a4:	movw	r5, #61168	; 0xeef0
   2e0a8:	movt	r5, #4
   2e0ac:	sub	sp, sp, #12
   2e0b0:	cmp	r1, #0
   2e0b4:	mov	r2, #0
   2e0b8:	ldr	r3, [r5]
   2e0bc:	str	r2, [sp]
   2e0c0:	str	r3, [sp, #4]
   2e0c4:	blt	2e0ec <crc32@@Base+0x14694>
   2e0c8:	mov	r4, r0
   2e0cc:	mov	r2, sp
   2e0d0:	mov	r0, r4
   2e0d4:	bl	2dc88 <crc32@@Base+0x14230>
   2e0d8:	ldr	r3, [sp]
   2e0dc:	cmp	r0, #0
   2e0e0:	cmpge	r3, #0
   2e0e4:	mov	r1, r0
   2e0e8:	bge	2e0cc <crc32@@Base+0x14674>
   2e0ec:	ldr	r2, [sp, #4]
   2e0f0:	mov	r0, r1
   2e0f4:	ldr	r3, [r5]
   2e0f8:	cmp	r2, r3
   2e0fc:	bne	2e108 <crc32@@Base+0x146b0>
   2e100:	add	sp, sp, #12
   2e104:	pop	{r4, r5, pc}
   2e108:	bl	124b8 <__stack_chk_fail@plt>
   2e10c:	push	{r4, r5, r6, lr}
   2e110:	mov	r6, r0
   2e114:	mov	r5, r1
   2e118:	bl	2e0a0 <crc32@@Base+0x14648>
   2e11c:	subs	r4, r0, #0
   2e120:	blt	2e158 <crc32@@Base+0x14700>
   2e124:	mov	r1, r5
   2e128:	mov	r0, r6
   2e12c:	mov	r2, #0
   2e130:	bl	2d9f4 <crc32@@Base+0x13f9c>
   2e134:	sub	r1, r4, r5
   2e138:	add	r1, r0, r1
   2e13c:	cmp	r0, r1
   2e140:	movcc	r3, #67108864	; 0x4000000
   2e144:	bcs	2e154 <crc32@@Base+0x146fc>
   2e148:	str	r3, [r0], #4
   2e14c:	cmp	r0, r1
   2e150:	bcc	2e148 <crc32@@Base+0x146f0>
   2e154:	mov	r4, #0
   2e158:	mov	r0, r4
   2e15c:	pop	{r4, r5, r6, pc}
   2e160:	push	{r4, r5, r6, r7, r8, lr}
   2e164:	ldr	r5, [r0, #36]	; 0x24
   2e168:	ldmib	r0, {r4, ip}
   2e16c:	ldr	r6, [r0, #32]
   2e170:	ubfx	r3, r5, #8, #8
   2e174:	lsr	lr, r5, #24
   2e178:	ubfx	r7, r4, #8, #8
   2e17c:	lsr	r2, r4, #24
   2e180:	orr	lr, lr, r5, lsl #24
   2e184:	ubfx	r5, r5, #16, #8
   2e188:	ubfx	r8, ip, #8, #8
   2e18c:	orr	r2, r2, r4, lsl #24
   2e190:	orr	lr, lr, r3, lsl #16
   2e194:	lsr	r3, ip, #24
   2e198:	ubfx	r4, r4, #16, #8
   2e19c:	orr	lr, lr, r5, lsl #8
   2e1a0:	orr	r3, r3, ip, lsl #24
   2e1a4:	ubfx	r5, r6, #8, #8
   2e1a8:	orr	r2, r2, r7, lsl #16
   2e1ac:	ubfx	r7, ip, #16, #8
   2e1b0:	lsr	ip, r6, #24
   2e1b4:	orr	r3, r3, r8, lsl #16
   2e1b8:	orr	ip, ip, r6, lsl #24
   2e1bc:	ubfx	r6, r6, #16, #8
   2e1c0:	orr	r3, r3, r7, lsl #8
   2e1c4:	orr	r2, r2, r4, lsl #8
   2e1c8:	orr	ip, ip, r5, lsl #16
   2e1cc:	adds	r1, r1, lr
   2e1d0:	sub	r2, r2, r3
   2e1d4:	orr	ip, ip, r6, lsl #8
   2e1d8:	sub	r2, r2, ip
   2e1dc:	movcs	r4, #1
   2e1e0:	movcc	r4, #0
   2e1e4:	cmp	r2, r1
   2e1e8:	movcs	r2, r4
   2e1ec:	orrcc	r2, r4, #1
   2e1f0:	cmp	r2, #0
   2e1f4:	addeq	r3, r3, lr
   2e1f8:	reveq	r1, r1
   2e1fc:	addeq	r3, r0, r3
   2e200:	movne	r3, #0
   2e204:	streq	r1, [r0, #36]	; 0x24
   2e208:	mov	r0, r3
   2e20c:	pop	{r4, r5, r6, r7, r8, pc}
   2e210:	cmp	r1, #39	; 0x27
   2e214:	bls	2e27c <crc32@@Base+0x14824>
   2e218:	push	{r4, r5, r6, lr}
   2e21c:	mov	r2, r1
   2e220:	mov	r4, r1
   2e224:	mov	r1, #0
   2e228:	mov	r5, r0
   2e22c:	bl	12308 <memset@plt>
   2e230:	ubfx	r2, r4, #8, #8
   2e234:	lsr	r1, r4, #24
   2e238:	orr	r1, r1, r4, lsl #24
   2e23c:	ubfx	r4, r4, #16, #8
   2e240:	orr	r1, r1, r2, lsl #16
   2e244:	movw	r3, #61999	; 0xf22f
   2e248:	orr	r4, r1, r4, lsl #8
   2e24c:	movt	r3, #4609	; 0x1201
   2e250:	mov	r2, #33554432	; 0x2000000
   2e254:	stm	r5, {r3, r4}
   2e258:	str	r4, [r5, #12]
   2e25c:	mov	r3, #285212672	; 0x11000000
   2e260:	str	r2, [r5, #24]
   2e264:	mov	r0, #0
   2e268:	str	r3, [r5, #20]
   2e26c:	mov	r3, #805306368	; 0x30000000
   2e270:	str	r3, [r5, #16]
   2e274:	str	r3, [r5, #8]
   2e278:	pop	{r4, r5, r6, pc}
   2e27c:	mvn	r0, #2
   2e280:	bx	lr
   2e284:	ldr	ip, [r0]
   2e288:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e28c:	ubfx	r5, ip, #8, #8
   2e290:	lsr	r3, ip, #24
   2e294:	ubfx	r4, ip, #16, #8
   2e298:	orr	r3, r3, ip, lsl #24
   2e29c:	movw	lr, #274	; 0x112
   2e2a0:	orr	r3, r3, r5, lsl #16
   2e2a4:	movt	lr, #12274	; 0x2ff2
   2e2a8:	orr	r3, r3, r4, lsl #8
   2e2ac:	cmp	r3, lr
   2e2b0:	bne	2e3a4 <crc32@@Base+0x1494c>
   2e2b4:	ldr	ip, [r0, #8]
   2e2b8:	ldr	r3, [r0, #32]
   2e2bc:	ubfx	r6, ip, #8, #8
   2e2c0:	ubfx	lr, ip, #16, #8
   2e2c4:	ubfx	r4, r3, #8, #8
   2e2c8:	lsr	r8, ip, #24
   2e2cc:	lsr	r5, r3, #24
   2e2d0:	orr	r8, r8, ip, lsl #24
   2e2d4:	orr	r5, r5, r3, lsl #24
   2e2d8:	ubfx	r3, r3, #16, #8
   2e2dc:	orr	r8, r8, r6, lsl #16
   2e2e0:	orr	r5, r5, r4, lsl #16
   2e2e4:	orr	r8, r8, lr, lsl #8
   2e2e8:	orr	r5, r5, r3, lsl #8
   2e2ec:	add	r3, r5, r8
   2e2f0:	cmp	r3, r2
   2e2f4:	bhi	2e3ac <crc32@@Base+0x14954>
   2e2f8:	ldr	r3, [r0, #4]
   2e2fc:	mov	r9, r1
   2e300:	cmp	r0, r1
   2e304:	sub	sl, r2, r5
   2e308:	ubfx	r1, r3, #8, #8
   2e30c:	mov	r6, r2
   2e310:	lsr	r4, r3, #24
   2e314:	ubfx	r2, r3, #16, #8
   2e318:	orr	r4, r4, r3, lsl #24
   2e31c:	mov	r7, r0
   2e320:	orr	r4, r4, r1, lsl #16
   2e324:	add	sl, r9, sl
   2e328:	orr	r4, r4, r2, lsl #8
   2e32c:	sub	r4, r4, r5
   2e330:	add	r4, r0, r4
   2e334:	bcs	2e380 <crc32@@Base+0x14928>
   2e338:	mov	r2, r5
   2e33c:	mov	r1, r4
   2e340:	mov	r0, sl
   2e344:	bl	123a4 <memmove@plt>
   2e348:	mov	r2, r8
   2e34c:	mov	r1, r7
   2e350:	mov	r0, r9
   2e354:	bl	123a4 <memmove@plt>
   2e358:	lsr	r3, r6, #24
   2e35c:	ubfx	r1, r6, #8, #8
   2e360:	ubfx	r2, r6, #16, #8
   2e364:	orr	r3, r3, r6, lsl #24
   2e368:	orr	r6, r3, r1, lsl #16
   2e36c:	mov	r0, #0
   2e370:	orr	r6, r6, r2, lsl #8
   2e374:	str	r6, [r9, #12]
   2e378:	str	r6, [r9, #4]
   2e37c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e380:	mov	r2, r8
   2e384:	mov	r1, r0
   2e388:	mov	r0, r9
   2e38c:	bl	123a4 <memmove@plt>
   2e390:	mov	r2, r5
   2e394:	mov	r1, r4
   2e398:	mov	r0, sl
   2e39c:	bl	123a4 <memmove@plt>
   2e3a0:	b	2e358 <crc32@@Base+0x14900>
   2e3a4:	mvn	r0, #8
   2e3a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e3ac:	mvn	r0, #2
   2e3b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e3b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2e3b8:	mov	lr, r0
   2e3bc:	ldr	r0, [r0]
   2e3c0:	movw	ip, #274	; 0x112
   2e3c4:	movt	ip, #12274	; 0x2ff2
   2e3c8:	ubfx	r4, r0, #8, #8
   2e3cc:	ubfx	r5, r0, #16, #8
   2e3d0:	lsr	r1, r0, #24
   2e3d4:	orr	r1, r1, r0, lsl #24
   2e3d8:	orr	r1, r1, r4, lsl #16
   2e3dc:	ldr	r4, [sp, #28]
   2e3e0:	orr	r1, r1, r5, lsl #8
   2e3e4:	ldr	r5, [sp, #32]
   2e3e8:	cmp	r1, ip
   2e3ec:	bne	2e480 <crc32@@Base+0x14a28>
   2e3f0:	ldr	ip, [lr, #36]	; 0x24
   2e3f4:	ubfx	r6, ip, #8, #8
   2e3f8:	ubfx	r0, ip, #16, #8
   2e3fc:	lsr	r1, ip, #24
   2e400:	orr	r1, r1, ip, lsl #24
   2e404:	orr	r1, r1, r6, lsl #16
   2e408:	orrs	r0, r1, r0, lsl #8
   2e40c:	bne	2e488 <crc32@@Base+0x14a30>
   2e410:	ldmib	lr, {r6, ip}
   2e414:	ubfx	r9, ip, #8, #8
   2e418:	ubfx	r7, r6, #8, #8
   2e41c:	lsr	r1, ip, #24
   2e420:	ubfx	r8, ip, #16, #8
   2e424:	orr	r1, r1, ip, lsl #24
   2e428:	lsr	ip, r6, #24
   2e42c:	orr	ip, ip, r6, lsl #24
   2e430:	orr	r1, r1, r9, lsl #16
   2e434:	ubfx	r6, r6, #16, #8
   2e438:	orr	ip, ip, r7, lsl #16
   2e43c:	orr	r1, r1, r8, lsl #8
   2e440:	add	r7, r1, #16
   2e444:	orr	ip, ip, r6, lsl #8
   2e448:	cmp	r7, ip
   2e44c:	bhi	2e490 <crc32@@Base+0x14a38>
   2e450:	add	ip, lr, r1
   2e454:	rev	r3, r3
   2e458:	rev	r2, r2
   2e45c:	str	r3, [lr, r1]
   2e460:	rev	r4, r4
   2e464:	str	r2, [ip, #4]
   2e468:	str	r4, [ip, #12]
   2e46c:	rev	r5, r5
   2e470:	rev	r7, r7
   2e474:	str	r5, [ip, #8]
   2e478:	str	r7, [lr, #8]
   2e47c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e480:	mvn	r0, #8
   2e484:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e488:	mvn	r0, #6
   2e48c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e490:	mvn	r0, #2
   2e494:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e498:	push	{lr}		; (str lr, [sp, #-4]!)
   2e49c:	sub	sp, sp, #12
   2e4a0:	mov	r2, #0
   2e4a4:	mov	r3, #0
   2e4a8:	strd	r2, [sp]
   2e4ac:	bl	2e3b4 <crc32@@Base+0x1495c>
   2e4b0:	add	sp, sp, #12
   2e4b4:	pop	{pc}		; (ldr pc, [sp], #4)
   2e4b8:	push	{r4, r5, r6, lr}
   2e4bc:	mov	r6, r0
   2e4c0:	mov	r0, r1
   2e4c4:	mov	r4, r1
   2e4c8:	bl	125e4 <strlen@plt>
   2e4cc:	ldr	r2, [r6]
   2e4d0:	movw	r1, #274	; 0x112
   2e4d4:	movt	r1, #12274	; 0x2ff2
   2e4d8:	ubfx	lr, r2, #8, #8
   2e4dc:	ubfx	ip, r2, #16, #8
   2e4e0:	lsr	r3, r2, #24
   2e4e4:	orr	r3, r3, r2, lsl #24
   2e4e8:	orr	r3, r3, lr, lsl #16
   2e4ec:	orr	r3, r3, ip, lsl #8
   2e4f0:	cmp	r3, r1
   2e4f4:	bne	2e534 <crc32@@Base+0x14adc>
   2e4f8:	add	r1, r0, #4
   2e4fc:	add	r5, r0, #1
   2e500:	bic	r1, r1, #3
   2e504:	mov	r0, r6
   2e508:	add	r1, r1, #4
   2e50c:	bl	2e160 <crc32@@Base+0x14708>
   2e510:	cmp	r0, #0
   2e514:	beq	2e53c <crc32@@Base+0x14ae4>
   2e518:	mov	r3, #16777216	; 0x1000000
   2e51c:	mov	r2, r5
   2e520:	mov	r1, r4
   2e524:	str	r3, [r0], #4
   2e528:	bl	125c0 <memcpy@plt>
   2e52c:	mov	r0, #0
   2e530:	pop	{r4, r5, r6, pc}
   2e534:	mvn	r0, #8
   2e538:	pop	{r4, r5, r6, pc}
   2e53c:	mvn	r0, #2
   2e540:	pop	{r4, r5, r6, pc}
   2e544:	ldr	r2, [r0]
   2e548:	movw	r1, #274	; 0x112
   2e54c:	push	{r4, lr}
   2e550:	ubfx	lr, r2, #8, #8
   2e554:	lsr	r3, r2, #24
   2e558:	ubfx	ip, r2, #16, #8
   2e55c:	orr	r3, r3, r2, lsl #24
   2e560:	movt	r1, #12274	; 0x2ff2
   2e564:	orr	r3, r3, lr, lsl #16
   2e568:	orr	r3, r3, ip, lsl #8
   2e56c:	cmp	r3, r1
   2e570:	bne	2e594 <crc32@@Base+0x14b3c>
   2e574:	mov	r1, #4
   2e578:	bl	2e160 <crc32@@Base+0x14708>
   2e57c:	subs	r3, r0, #0
   2e580:	beq	2e59c <crc32@@Base+0x14b44>
   2e584:	mov	r2, #33554432	; 0x2000000
   2e588:	mov	r0, #0
   2e58c:	str	r2, [r3]
   2e590:	pop	{r4, pc}
   2e594:	mvn	r0, #8
   2e598:	pop	{r4, pc}
   2e59c:	mvn	r0, #2
   2e5a0:	pop	{r4, pc}
   2e5a4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e5a8:	movw	r4, #274	; 0x112
   2e5ac:	ldr	lr, [r0]
   2e5b0:	movt	r4, #12274	; 0x2ff2
   2e5b4:	ubfx	r6, lr, #8, #8
   2e5b8:	ubfx	r5, lr, #16, #8
   2e5bc:	lsr	ip, lr, #24
   2e5c0:	orr	ip, ip, lr, lsl #24
   2e5c4:	orr	ip, ip, r6, lsl #16
   2e5c8:	orr	ip, ip, r5, lsl #8
   2e5cc:	cmp	ip, r4
   2e5d0:	bne	2e768 <crc32@@Base+0x14d10>
   2e5d4:	mov	sl, r0
   2e5d8:	ldr	ip, [r0, #4]
   2e5dc:	mov	r9, r3
   2e5e0:	ldr	r3, [sl, #32]
   2e5e4:	ubfx	lr, ip, #8, #8
   2e5e8:	mov	r7, r2
   2e5ec:	lsr	r5, ip, #24
   2e5f0:	ubfx	r2, r3, #8, #8
   2e5f4:	lsr	r6, r3, #24
   2e5f8:	orr	r5, r5, ip, lsl #24
   2e5fc:	mov	r8, r1
   2e600:	mov	r0, r1
   2e604:	orr	r6, r6, r3, lsl #24
   2e608:	ubfx	r1, ip, #16, #8
   2e60c:	ubfx	r3, r3, #16, #8
   2e610:	orr	r5, r5, lr, lsl #16
   2e614:	orr	r6, r6, r2, lsl #16
   2e618:	orr	r5, r5, r1, lsl #8
   2e61c:	orr	r6, r6, r3, lsl #8
   2e620:	bl	125e4 <strlen@plt>
   2e624:	add	r5, sl, r5
   2e628:	mov	r2, r8
   2e62c:	mov	r1, r6
   2e630:	mov	fp, r0
   2e634:	sub	r0, r5, r6
   2e638:	bl	2de54 <crc32@@Base+0x143fc>
   2e63c:	cmp	r0, #0
   2e640:	subne	r4, r0, r5
   2e644:	beq	2e6bc <crc32@@Base+0x14c64>
   2e648:	cmp	r4, #0
   2e64c:	beq	2e72c <crc32@@Base+0x14cd4>
   2e650:	add	r1, r7, #3
   2e654:	mov	r0, sl
   2e658:	bic	r1, r1, #3
   2e65c:	add	r1, r1, #12
   2e660:	bl	2e160 <crc32@@Base+0x14708>
   2e664:	cmp	r0, #0
   2e668:	beq	2e72c <crc32@@Base+0x14cd4>
   2e66c:	ubfx	r1, r4, #8, #8
   2e670:	lsr	r3, r4, #24
   2e674:	orr	r3, r3, r4, lsl #24
   2e678:	lsr	r2, r7, #24
   2e67c:	orr	r3, r3, r1, lsl #16
   2e680:	ubfx	r1, r7, #8, #8
   2e684:	orr	r2, r2, r7, lsl #24
   2e688:	ubfx	r4, r4, #16, #8
   2e68c:	ubfx	r7, r7, #16, #8
   2e690:	orr	r2, r2, r1, lsl #16
   2e694:	orr	r4, r3, r4, lsl #8
   2e698:	add	r3, r0, #12
   2e69c:	str	r4, [r0, #8]
   2e6a0:	orr	r7, r2, r7, lsl #8
   2e6a4:	mov	r2, #50331648	; 0x3000000
   2e6a8:	str	r7, [r0, #4]
   2e6ac:	str	r2, [r0]
   2e6b0:	mov	r0, #0
   2e6b4:	str	r3, [r9]
   2e6b8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e6bc:	ldr	r2, [sl, #8]
   2e6c0:	add	fp, fp, #1
   2e6c4:	ldr	r0, [sl, #36]	; 0x24
   2e6c8:	rsb	r4, r6, #0
   2e6cc:	ubfx	ip, r2, #8, #8
   2e6d0:	ldr	r1, [sl, #4]
   2e6d4:	lsr	r3, r2, #24
   2e6d8:	ubfx	lr, r0, #8, #8
   2e6dc:	orr	r3, r3, r2, lsl #24
   2e6e0:	ubfx	r2, r2, #16, #8
   2e6e4:	orr	r3, r3, ip, lsl #16
   2e6e8:	lsr	ip, r0, #24
   2e6ec:	orr	ip, ip, r0, lsl #24
   2e6f0:	ubfx	r0, r0, #16, #8
   2e6f4:	orr	ip, ip, lr, lsl #16
   2e6f8:	orr	r3, r3, r2, lsl #8
   2e6fc:	orr	r0, ip, r0, lsl #8
   2e700:	lsr	r2, r1, #24
   2e704:	ubfx	ip, r1, #8, #8
   2e708:	orr	r2, r2, r1, lsl #24
   2e70c:	ubfx	r1, r1, #16, #8
   2e710:	sub	r4, r4, fp
   2e714:	orr	r2, r2, ip, lsl #16
   2e718:	add	r3, r3, r0
   2e71c:	orr	r2, r2, r1, lsl #8
   2e720:	add	r2, r2, r4
   2e724:	cmp	r3, r2
   2e728:	bls	2e734 <crc32@@Base+0x14cdc>
   2e72c:	mvn	r0, #2
   2e730:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e734:	add	r6, r6, fp
   2e738:	mov	r1, r8
   2e73c:	mov	r2, fp
   2e740:	add	r0, r5, r4
   2e744:	bl	125c0 <memcpy@plt>
   2e748:	ubfx	r1, r6, #8, #8
   2e74c:	lsr	r3, r6, #24
   2e750:	ubfx	r2, r6, #16, #8
   2e754:	orr	r6, r3, r6, lsl #24
   2e758:	orr	r6, r6, r1, lsl #16
   2e75c:	orr	r6, r6, r2, lsl #8
   2e760:	str	r6, [sl, #32]
   2e764:	b	2e648 <crc32@@Base+0x14bf0>
   2e768:	mvn	r0, #8
   2e76c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e770:	push	{r4, r5, r6, r7, lr}
   2e774:	movw	r4, #61168	; 0xeef0
   2e778:	movt	r4, #4
   2e77c:	sub	sp, sp, #12
   2e780:	mov	r5, r3
   2e784:	mov	r7, r2
   2e788:	ldr	ip, [r4]
   2e78c:	mov	r2, r3
   2e790:	mov	r3, sp
   2e794:	str	ip, [sp, #4]
   2e798:	bl	2e5a4 <crc32@@Base+0x14b4c>
   2e79c:	subs	r6, r0, #0
   2e7a0:	bne	2e7b4 <crc32@@Base+0x14d5c>
   2e7a4:	mov	r2, r5
   2e7a8:	mov	r1, r7
   2e7ac:	ldr	r0, [sp]
   2e7b0:	bl	125c0 <memcpy@plt>
   2e7b4:	ldr	r2, [sp, #4]
   2e7b8:	mov	r0, r6
   2e7bc:	ldr	r3, [r4]
   2e7c0:	cmp	r2, r3
   2e7c4:	bne	2e7d0 <crc32@@Base+0x14d78>
   2e7c8:	add	sp, sp, #12
   2e7cc:	pop	{r4, r5, r6, r7, pc}
   2e7d0:	bl	124b8 <__stack_chk_fail@plt>
   2e7d4:	ldr	r2, [r0]
   2e7d8:	push	{r4, r5, r6, r7, r8, lr}
   2e7dc:	ubfx	ip, r2, #8, #8
   2e7e0:	lsr	r3, r2, #24
   2e7e4:	ubfx	r1, r2, #16, #8
   2e7e8:	orr	r3, r3, r2, lsl #24
   2e7ec:	movw	r6, #61168	; 0xeef0
   2e7f0:	movt	r6, #4
   2e7f4:	orr	r3, r3, ip, lsl #16
   2e7f8:	orr	r3, r3, r1, lsl #8
   2e7fc:	movw	r2, #274	; 0x112
   2e800:	ldr	r1, [r6]
   2e804:	movt	r2, #12274	; 0x2ff2
   2e808:	sub	sp, sp, #8
   2e80c:	cmp	r3, r2
   2e810:	str	r1, [sp, #4]
   2e814:	bne	2e9b0 <crc32@@Base+0x14f58>
   2e818:	mov	r1, #4
   2e81c:	mov	r4, r0
   2e820:	bl	2e160 <crc32@@Base+0x14708>
   2e824:	cmp	r0, #0
   2e828:	beq	2e9b8 <crc32@@Base+0x14f60>
   2e82c:	mov	r3, #150994944	; 0x9000000
   2e830:	str	r3, [r0]
   2e834:	ldr	r3, [r4, #4]
   2e838:	mov	r7, #0
   2e83c:	ldr	lr, [r4, #32]
   2e840:	ubfx	r2, r3, #8, #8
   2e844:	ldr	r0, [r4, #8]
   2e848:	lsr	r1, r3, #24
   2e84c:	ldr	ip, [r4, #36]	; 0x24
   2e850:	orr	r1, r1, r3, lsl #24
   2e854:	ubfx	r5, lr, #8, #8
   2e858:	orr	r1, r1, r2, lsl #16
   2e85c:	lsr	r2, lr, #24
   2e860:	ubfx	r3, r3, #16, #8
   2e864:	orr	r2, r2, lr, lsl #24
   2e868:	ubfx	lr, lr, #16, #8
   2e86c:	orr	r2, r2, r5, lsl #16
   2e870:	ubfx	r8, r0, #8, #8
   2e874:	lsr	r5, r0, #24
   2e878:	orr	r2, r2, lr, lsl #8
   2e87c:	orr	r1, r1, r3, lsl #8
   2e880:	ubfx	lr, ip, #8, #8
   2e884:	orr	r5, r5, r0, lsl #24
   2e888:	ubfx	r3, r0, #16, #8
   2e88c:	lsr	r0, ip, #24
   2e890:	orr	r0, r0, ip, lsl #24
   2e894:	orr	r5, r5, r8, lsl #16
   2e898:	ubfx	ip, ip, #16, #8
   2e89c:	orr	r3, r5, r3, lsl #8
   2e8a0:	orr	r5, r0, lr, lsl #16
   2e8a4:	sub	r1, r1, r2
   2e8a8:	orr	r5, r5, ip, lsl #8
   2e8ac:	add	r1, r4, r1
   2e8b0:	add	r5, r5, r3
   2e8b4:	add	r0, r4, r5
   2e8b8:	bl	123a4 <memmove@plt>
   2e8bc:	rev	r3, r5
   2e8c0:	str	r3, [r4, #12]
   2e8c4:	b	2e93c <crc32@@Base+0x14ee4>
   2e8c8:	cmp	r0, #3
   2e8cc:	bne	2e938 <crc32@@Base+0x14ee0>
   2e8d0:	ldr	r3, [r4, #8]
   2e8d4:	ldr	r2, [r4, #32]
   2e8d8:	ubfx	ip, r3, #8, #8
   2e8dc:	ubfx	r0, r3, #16, #8
   2e8e0:	lsr	r1, r3, #24
   2e8e4:	orr	r1, r1, r3, lsl #24
   2e8e8:	lsr	r3, r2, #24
   2e8ec:	orr	r1, r1, ip, lsl #16
   2e8f0:	ubfx	ip, r2, #8, #8
   2e8f4:	orr	r1, r1, r0, lsl #8
   2e8f8:	orr	r3, r3, r2, lsl #24
   2e8fc:	add	r1, r1, r7
   2e900:	ubfx	r2, r2, #16, #8
   2e904:	add	r1, r4, r1
   2e908:	orr	r3, r3, ip, lsl #16
   2e90c:	orr	r3, r3, r2, lsl #8
   2e910:	ldr	r0, [r1, #8]
   2e914:	ubfx	lr, r0, #8, #8
   2e918:	ubfx	ip, r0, #16, #8
   2e91c:	lsr	r2, r0, #24
   2e920:	orr	r2, r2, r0, lsl #24
   2e924:	orr	r2, r2, lr, lsl #16
   2e928:	orr	r2, r2, ip, lsl #8
   2e92c:	add	r3, r3, r2
   2e930:	rev	r3, r3
   2e934:	str	r3, [r1, #8]
   2e938:	ldr	r7, [sp]
   2e93c:	mov	r2, sp
   2e940:	mov	r1, r7
   2e944:	mov	r0, r4
   2e948:	bl	2daa8 <crc32@@Base+0x14050>
   2e94c:	cmp	r0, #9
   2e950:	bne	2e8c8 <crc32@@Base+0x14e70>
   2e954:	ldr	r0, [sp]
   2e958:	cmp	r0, #0
   2e95c:	blt	2e998 <crc32@@Base+0x14f40>
   2e960:	ldr	r2, [r4, #32]
   2e964:	mov	r3, #3536	; 0xdd0
   2e968:	movt	r3, #60926	; 0xedfe
   2e96c:	str	r3, [r4]
   2e970:	ubfx	ip, r2, #8, #8
   2e974:	ubfx	r1, r2, #16, #8
   2e978:	lsr	r3, r2, #24
   2e97c:	mov	r0, #0
   2e980:	orr	r3, r3, r2, lsl #24
   2e984:	orr	r3, r3, ip, lsl #16
   2e988:	orr	r3, r3, r1, lsl #8
   2e98c:	add	r5, r3, r5
   2e990:	rev	r5, r5
   2e994:	str	r5, [r4, #4]
   2e998:	ldr	r2, [sp, #4]
   2e99c:	ldr	r3, [r6]
   2e9a0:	cmp	r2, r3
   2e9a4:	bne	2e9c0 <crc32@@Base+0x14f68>
   2e9a8:	add	sp, sp, #8
   2e9ac:	pop	{r4, r5, r6, r7, r8, pc}
   2e9b0:	mvn	r0, #8
   2e9b4:	b	2e998 <crc32@@Base+0x14f40>
   2e9b8:	mvn	r0, #2
   2e9bc:	b	2e998 <crc32@@Base+0x14f40>
   2e9c0:	bl	124b8 <__stack_chk_fail@plt>
   2e9c4:	ldr	ip, [r0, #16]
   2e9c8:	push	{r4, lr}
   2e9cc:	ubfx	r4, ip, #8, #8
   2e9d0:	lsr	r3, ip, #24
   2e9d4:	ubfx	lr, ip, #16, #8
   2e9d8:	orr	r3, r3, ip, lsl #24
   2e9dc:	orr	r3, r3, r4, lsl #16
   2e9e0:	orr	r3, r3, lr, lsl #8
   2e9e4:	cmp	r3, #39	; 0x27
   2e9e8:	bls	2ea88 <crc32@@Base+0x15030>
   2e9ec:	ldr	lr, [r0, #8]
   2e9f0:	add	r1, r1, r3
   2e9f4:	ubfx	r4, lr, #8, #8
   2e9f8:	ubfx	r3, lr, #16, #8
   2e9fc:	lsr	ip, lr, #24
   2ea00:	orr	ip, ip, lr, lsl #24
   2ea04:	orr	ip, ip, r4, lsl #16
   2ea08:	orr	ip, ip, r3, lsl #8
   2ea0c:	cmp	r1, ip
   2ea10:	bhi	2ea88 <crc32@@Base+0x15030>
   2ea14:	ldr	r1, [r0, #12]
   2ea18:	add	r2, r2, ip
   2ea1c:	ubfx	lr, r1, #8, #8
   2ea20:	ubfx	ip, r1, #16, #8
   2ea24:	lsr	r3, r1, #24
   2ea28:	orr	r3, r3, r1, lsl #24
   2ea2c:	orr	r3, r3, lr, lsl #16
   2ea30:	orr	r3, r3, ip, lsl #8
   2ea34:	cmp	r2, r3
   2ea38:	bhi	2ea88 <crc32@@Base+0x15030>
   2ea3c:	ldr	r2, [r0, #32]
   2ea40:	ldr	r1, [r0, #4]
   2ea44:	ubfx	r4, r2, #8, #8
   2ea48:	ubfx	lr, r2, #16, #8
   2ea4c:	lsr	r0, r2, #24
   2ea50:	ubfx	ip, r1, #8, #8
   2ea54:	orr	r0, r0, r2, lsl #24
   2ea58:	lsr	r2, r1, #24
   2ea5c:	orr	r0, r0, r4, lsl #16
   2ea60:	orr	r2, r2, r1, lsl #24
   2ea64:	ubfx	r1, r1, #16, #8
   2ea68:	orr	r0, r0, lr, lsl #8
   2ea6c:	orr	r2, r2, ip, lsl #16
   2ea70:	add	r0, r0, r3
   2ea74:	orr	r3, r2, r1, lsl #8
   2ea78:	cmp	r0, r3
   2ea7c:	movls	r0, #0
   2ea80:	movhi	r0, #1
   2ea84:	pop	{r4, pc}
   2ea88:	mov	r0, #1
   2ea8c:	pop	{r4, pc}
   2ea90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ea94:	cmp	r2, #0
   2ea98:	ldr	r5, [r0, #12]
   2ea9c:	ldr	r4, [r0, #32]
   2eaa0:	ubfx	r8, r5, #8, #8
   2eaa4:	ubfx	r6, r5, #16, #8
   2eaa8:	ubfx	r7, r4, #8, #8
   2eaac:	lsr	ip, r5, #24
   2eab0:	lsr	lr, r4, #24
   2eab4:	orr	ip, ip, r5, lsl #24
   2eab8:	orr	lr, lr, r4, lsl #24
   2eabc:	ubfx	r4, r4, #16, #8
   2eac0:	orr	ip, ip, r8, lsl #16
   2eac4:	orr	lr, lr, r7, lsl #16
   2eac8:	orr	ip, ip, r6, lsl #8
   2eacc:	orr	lr, lr, r4, lsl #8
   2ead0:	add	ip, ip, lr
   2ead4:	add	ip, r0, ip
   2ead8:	blt	2eb54 <crc32@@Base+0x150fc>
   2eadc:	add	r5, r1, r2
   2eae0:	cmp	r5, ip
   2eae4:	movls	r4, #0
   2eae8:	movhi	r4, #1
   2eaec:	cmp	r1, r0
   2eaf0:	orrcc	r4, r4, #1
   2eaf4:	cmp	r4, #0
   2eaf8:	bne	2eb54 <crc32@@Base+0x150fc>
   2eafc:	sub	r6, r3, r2
   2eb00:	add	r6, ip, r6
   2eb04:	cmp	r6, r0
   2eb08:	bcc	2eb54 <crc32@@Base+0x150fc>
   2eb0c:	ldr	r7, [r0, #4]
   2eb10:	ubfx	r9, r7, #8, #8
   2eb14:	ubfx	r8, r7, #16, #8
   2eb18:	lsr	lr, r7, #24
   2eb1c:	orr	lr, lr, r7, lsl #24
   2eb20:	orr	lr, lr, r9, lsl #16
   2eb24:	orr	lr, lr, r8, lsl #8
   2eb28:	add	lr, r0, lr
   2eb2c:	cmp	r6, lr
   2eb30:	bhi	2eb5c <crc32@@Base+0x15104>
   2eb34:	sub	ip, ip, r1
   2eb38:	mov	r0, r1
   2eb3c:	sub	r2, ip, r2
   2eb40:	mov	r1, r5
   2eb44:	add	r0, r0, r3
   2eb48:	bl	123a4 <memmove@plt>
   2eb4c:	mov	r0, r4
   2eb50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2eb54:	mvn	r0, #3
   2eb58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2eb5c:	mvn	r0, #2
   2eb60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2eb64:	push	{r4, r5, r6, lr}
   2eb68:	mov	r6, r2
   2eb6c:	mov	r5, r3
   2eb70:	lsl	r2, r2, #4
   2eb74:	lsl	r3, r3, #4
   2eb78:	mov	r4, r0
   2eb7c:	bl	2ea90 <crc32@@Base+0x15038>
   2eb80:	cmp	r0, #0
   2eb84:	popne	{r4, r5, r6, pc}
   2eb88:	ldr	lr, [r4, #8]
   2eb8c:	sub	r3, r5, r6
   2eb90:	ldr	ip, [r4, #12]
   2eb94:	lsl	r1, r3, #4
   2eb98:	ubfx	r6, lr, #8, #8
   2eb9c:	ubfx	r5, ip, #8, #8
   2eba0:	lsr	r2, lr, #24
   2eba4:	lsr	r3, ip, #24
   2eba8:	orr	r2, r2, lr, lsl #24
   2ebac:	orr	r3, r3, ip, lsl #24
   2ebb0:	ubfx	lr, lr, #16, #8
   2ebb4:	ubfx	ip, ip, #16, #8
   2ebb8:	orr	r2, r2, r6, lsl #16
   2ebbc:	orr	r3, r3, r5, lsl #16
   2ebc0:	orr	r2, r2, lr, lsl #8
   2ebc4:	orr	r3, r3, ip, lsl #8
   2ebc8:	add	r2, r2, r1
   2ebcc:	add	r3, r3, r1
   2ebd0:	rev	r2, r2
   2ebd4:	rev	r3, r3
   2ebd8:	strd	r2, [r4, #8]
   2ebdc:	pop	{r4, r5, r6, pc}
   2ebe0:	push	{r4, r5, r6, lr}
   2ebe4:	mov	r4, r0
   2ebe8:	mov	r5, r2
   2ebec:	mov	r6, r3
   2ebf0:	bl	2ea90 <crc32@@Base+0x15038>
   2ebf4:	cmp	r0, #0
   2ebf8:	popne	{r4, r5, r6, pc}
   2ebfc:	ldr	lr, [r4, #36]	; 0x24
   2ec00:	sub	ip, r6, r5
   2ec04:	ldr	r1, [r4, #12]
   2ec08:	ubfx	r3, lr, #8, #8
   2ec0c:	lsr	r2, lr, #24
   2ec10:	ubfx	r5, r1, #8, #8
   2ec14:	orr	r2, r2, lr, lsl #24
   2ec18:	ubfx	lr, lr, #16, #8
   2ec1c:	orr	r2, r2, r3, lsl #16
   2ec20:	lsr	r3, r1, #24
   2ec24:	orr	r3, r3, r1, lsl #24
   2ec28:	ubfx	r1, r1, #16, #8
   2ec2c:	orr	r3, r3, r5, lsl #16
   2ec30:	orr	r2, r2, lr, lsl #8
   2ec34:	orr	r3, r3, r1, lsl #8
   2ec38:	add	r2, r2, ip
   2ec3c:	add	r3, r3, ip
   2ec40:	rev	r2, r2
   2ec44:	rev	r3, r3
   2ec48:	str	r2, [r4, #36]	; 0x24
   2ec4c:	str	r3, [r4, #12]
   2ec50:	pop	{r4, r5, r6, pc}
   2ec54:	ldr	ip, [r0, #16]
   2ec58:	push	{r4, r5, r6, r7, r8, lr}
   2ec5c:	mov	r5, r0
   2ec60:	mov	r4, r1
   2ec64:	ubfx	lr, ip, #8, #8
   2ec68:	add	r0, r1, #40	; 0x28
   2ec6c:	lsr	r1, ip, #24
   2ec70:	mov	r6, r3
   2ec74:	orr	r1, r1, ip, lsl #24
   2ec78:	ubfx	r3, ip, #16, #8
   2ec7c:	orr	r1, r1, lr, lsl #16
   2ec80:	add	r7, r2, #40	; 0x28
   2ec84:	orr	r1, r1, r3, lsl #8
   2ec88:	add	r8, r7, r6
   2ec8c:	add	r1, r5, r1
   2ec90:	bl	123a4 <memmove@plt>
   2ec94:	ldr	r3, [r5, #8]
   2ec98:	mov	r2, #671088640	; 0x28000000
   2ec9c:	str	r2, [r4, #16]
   2eca0:	ubfx	r2, r3, #8, #8
   2eca4:	ubfx	r0, r3, #16, #8
   2eca8:	lsr	r1, r3, #24
   2ecac:	orr	r1, r1, r3, lsl #24
   2ecb0:	orr	r1, r1, r2, lsl #16
   2ecb4:	mov	r2, r6
   2ecb8:	orr	r1, r1, r0, lsl #8
   2ecbc:	add	r0, r4, r7
   2ecc0:	add	r1, r5, r1
   2ecc4:	bl	123a4 <memmove@plt>
   2ecc8:	ldr	r0, [r5, #12]
   2eccc:	ubfx	r1, r7, #8, #8
   2ecd0:	lsr	r3, r7, #24
   2ecd4:	orr	r3, r3, r7, lsl #24
   2ecd8:	ubfx	lr, r7, #16, #8
   2ecdc:	ubfx	ip, r0, #8, #8
   2ece0:	orr	r7, r3, r1, lsl #16
   2ece4:	lsr	r1, r0, #24
   2ece8:	ldr	r2, [r5, #32]
   2ecec:	orr	r1, r1, r0, lsl #24
   2ecf0:	lsr	r3, r6, #24
   2ecf4:	ubfx	r0, r0, #16, #8
   2ecf8:	orr	r1, r1, ip, lsl #16
   2ecfc:	ubfx	ip, r6, #8, #8
   2ed00:	orr	r3, r3, r6, lsl #24
   2ed04:	orr	r1, r1, r0, lsl #8
   2ed08:	lsr	r0, r2, #24
   2ed0c:	orr	r3, r3, ip, lsl #16
   2ed10:	ubfx	ip, r2, #8, #8
   2ed14:	orr	r0, r0, r2, lsl #24
   2ed18:	ubfx	r6, r6, #16, #8
   2ed1c:	ubfx	r2, r2, #16, #8
   2ed20:	orr	r0, r0, ip, lsl #16
   2ed24:	orr	r7, r7, lr, lsl #8
   2ed28:	orr	r6, r3, r6, lsl #8
   2ed2c:	orr	r2, r0, r2, lsl #8
   2ed30:	add	r1, r5, r1
   2ed34:	add	r0, r4, r8
   2ed38:	str	r7, [r4, #8]
   2ed3c:	str	r6, [r4, #36]	; 0x24
   2ed40:	bl	123a4 <memmove@plt>
   2ed44:	ldr	r1, [r5, #32]
   2ed48:	ubfx	ip, r8, #8, #8
   2ed4c:	lsr	r2, r8, #24
   2ed50:	ubfx	lr, r1, #8, #8
   2ed54:	ubfx	r0, r1, #16, #8
   2ed58:	lsr	r3, r1, #24
   2ed5c:	orr	r2, r2, r8, lsl #24
   2ed60:	orr	r3, r3, r1, lsl #24
   2ed64:	ubfx	r8, r8, #16, #8
   2ed68:	orr	r3, r3, lr, lsl #16
   2ed6c:	orr	r2, r2, ip, lsl #16
   2ed70:	orr	r3, r3, r0, lsl #8
   2ed74:	orr	r2, r2, r8, lsl #8
   2ed78:	rev	r3, r3
   2ed7c:	str	r2, [r4, #12]
   2ed80:	str	r3, [r4, #32]
   2ed84:	pop	{r4, r5, r6, r7, r8, pc}
   2ed88:	ldr	r3, [r0, #12]
   2ed8c:	push	{r4, r5, r6, r7, r8, lr}
   2ed90:	mov	r5, r0
   2ed94:	lsr	r4, r3, #24
   2ed98:	mov	r6, r1
   2ed9c:	mov	r0, r1
   2eda0:	ubfx	r1, r3, #8, #8
   2eda4:	ubfx	r2, r3, #16, #8
   2eda8:	orr	r4, r4, r3, lsl #24
   2edac:	orr	r4, r4, r1, lsl #16
   2edb0:	orr	r4, r4, r2, lsl #8
   2edb4:	bl	125e4 <strlen@plt>
   2edb8:	ldr	r1, [r5, #32]
   2edbc:	add	r4, r5, r4
   2edc0:	mov	r2, r6
   2edc4:	ubfx	lr, r1, #8, #8
   2edc8:	ubfx	r3, r1, #16, #8
   2edcc:	lsr	ip, r1, #24
   2edd0:	orr	ip, ip, r1, lsl #24
   2edd4:	orr	r1, ip, lr, lsl #16
   2edd8:	orr	r1, r1, r3, lsl #8
   2eddc:	mov	r7, r0
   2ede0:	mov	r0, r4
   2ede4:	bl	2de54 <crc32@@Base+0x143fc>
   2ede8:	subs	r2, r0, #0
   2edec:	beq	2edf8 <crc32@@Base+0x153a0>
   2edf0:	sub	r0, r2, r4
   2edf4:	pop	{r4, r5, r6, r7, r8, pc}
   2edf8:	ldr	r1, [r5, #32]
   2edfc:	add	r7, r7, #1
   2ee00:	ldr	r3, [r5, #12]
   2ee04:	ubfx	lr, r1, #8, #8
   2ee08:	ubfx	r0, r1, #16, #8
   2ee0c:	lsr	r8, r1, #24
   2ee10:	ubfx	ip, r3, #8, #8
   2ee14:	orr	r8, r8, r1, lsl #24
   2ee18:	lsr	r1, r3, #24
   2ee1c:	orr	r1, r1, r3, lsl #24
   2ee20:	ubfx	r3, r3, #16, #8
   2ee24:	orr	r8, r8, lr, lsl #16
   2ee28:	orr	r1, r1, ip, lsl #16
   2ee2c:	orr	r8, r8, r0, lsl #8
   2ee30:	orr	r1, r1, r3, lsl #8
   2ee34:	add	r1, r1, r8
   2ee38:	mov	r3, r7
   2ee3c:	add	r1, r5, r1
   2ee40:	mov	r0, r5
   2ee44:	bl	2ea90 <crc32@@Base+0x15038>
   2ee48:	cmp	r0, #0
   2ee4c:	popne	{r4, r5, r6, r7, r8, pc}
   2ee50:	ldr	ip, [r5, #32]
   2ee54:	add	r0, r4, r8
   2ee58:	mov	r2, r7
   2ee5c:	mov	r1, r6
   2ee60:	ubfx	r4, ip, #8, #8
   2ee64:	ubfx	lr, ip, #16, #8
   2ee68:	lsr	r3, ip, #24
   2ee6c:	orr	r3, r3, ip, lsl #24
   2ee70:	orr	r3, r3, r4, lsl #16
   2ee74:	orr	r3, r3, lr, lsl #8
   2ee78:	add	r7, r3, r7
   2ee7c:	rev	r7, r7
   2ee80:	str	r7, [r5, #32]
   2ee84:	bl	125c0 <memcpy@plt>
   2ee88:	mov	r0, r8
   2ee8c:	pop	{r4, r5, r6, r7, r8, pc}
   2ee90:	push	{r4, r5, r6, r7, r8, lr}
   2ee94:	mov	r7, r2
   2ee98:	mov	r6, r3
   2ee9c:	mov	r4, r0
   2eea0:	bl	2dc08 <crc32@@Base+0x141b0>
   2eea4:	subs	r5, r0, #0
   2eea8:	blt	2ef54 <crc32@@Base+0x154fc>
   2eeac:	mov	r1, r7
   2eeb0:	mov	r0, r4
   2eeb4:	bl	2ed88 <crc32@@Base+0x15330>
   2eeb8:	subs	r7, r0, #0
   2eebc:	movlt	r5, r7
   2eec0:	blt	2ef54 <crc32@@Base+0x154fc>
   2eec4:	ldr	r2, [r4, #8]
   2eec8:	add	r3, r6, #3
   2eecc:	bic	r3, r3, #3
   2eed0:	ubfx	r0, r2, #8, #8
   2eed4:	ubfx	ip, r2, #16, #8
   2eed8:	lsr	r1, r2, #24
   2eedc:	add	r3, r3, #12
   2eee0:	orr	r1, r1, r2, lsl #24
   2eee4:	mov	r2, #0
   2eee8:	orr	r1, r1, r0, lsl #16
   2eeec:	mov	r0, r4
   2eef0:	orr	r1, r1, ip, lsl #8
   2eef4:	ldr	ip, [sp, #24]
   2eef8:	add	r1, r1, r5
   2eefc:	add	r1, r4, r1
   2ef00:	str	r1, [ip]
   2ef04:	bl	2ebe0 <crc32@@Base+0x15188>
   2ef08:	subs	r5, r0, #0
   2ef0c:	bne	2ef54 <crc32@@Base+0x154fc>
   2ef10:	ldr	r1, [sp, #24]
   2ef14:	ubfx	r3, r7, #8, #8
   2ef18:	lsr	r2, r7, #24
   2ef1c:	ubfx	r0, r6, #8, #8
   2ef20:	orr	r2, r2, r7, lsl #24
   2ef24:	ubfx	r7, r7, #16, #8
   2ef28:	ldr	r1, [r1]
   2ef2c:	orr	r2, r2, r3, lsl #16
   2ef30:	lsr	r3, r6, #24
   2ef34:	orr	r7, r2, r7, lsl #8
   2ef38:	orr	r3, r3, r6, lsl #24
   2ef3c:	ubfx	r6, r6, #16, #8
   2ef40:	orr	r3, r3, r0, lsl #16
   2ef44:	str	r7, [r1, #8]
   2ef48:	orr	r6, r3, r6, lsl #8
   2ef4c:	mov	r3, #50331648	; 0x3000000
   2ef50:	stm	r1, {r3, r6}
   2ef54:	mov	r0, r5
   2ef58:	pop	{r4, r5, r6, r7, r8, pc}
   2ef5c:	push	{r4, r5, r6, lr}
   2ef60:	mov	r5, r0
   2ef64:	bl	2d92c <crc32@@Base+0x13ed4>
   2ef68:	cmp	r0, #0
   2ef6c:	popne	{r4, r5, r6, pc}
   2ef70:	ldr	r3, [r5, #20]
   2ef74:	ubfx	r1, r3, #8, #8
   2ef78:	ubfx	r2, r3, #16, #8
   2ef7c:	lsr	r4, r3, #24
   2ef80:	orr	r4, r4, r3, lsl #24
   2ef84:	orr	r4, r4, r1, lsl #16
   2ef88:	orr	r4, r4, r2, lsl #8
   2ef8c:	cmp	r4, #16
   2ef90:	bls	2efd4 <crc32@@Base+0x1557c>
   2ef94:	ldr	r0, [r5, #36]	; 0x24
   2ef98:	mov	r1, #16
   2ef9c:	ubfx	ip, r0, #8, #8
   2efa0:	ubfx	r2, r0, #16, #8
   2efa4:	lsr	r3, r0, #24
   2efa8:	orr	r3, r3, r0, lsl #24
   2efac:	mov	r0, r5
   2efb0:	orr	r3, r3, ip, lsl r1
   2efb4:	orr	r2, r3, r2, lsl #8
   2efb8:	bl	2e9c4 <crc32@@Base+0x14f6c>
   2efbc:	cmp	r0, #0
   2efc0:	bne	2efdc <crc32@@Base+0x15584>
   2efc4:	cmp	r4, #17
   2efc8:	movne	r3, #285212672	; 0x11000000
   2efcc:	strne	r3, [r5, #20]
   2efd0:	pop	{r4, r5, r6, pc}
   2efd4:	mvn	r0, #9
   2efd8:	pop	{r4, r5, r6, pc}
   2efdc:	mvn	r0, #11
   2efe0:	pop	{r4, r5, r6, pc}
   2efe4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2efe8:	mov	r8, r2
   2efec:	mov	r9, r3
   2eff0:	mov	r5, r0
   2eff4:	ldr	r7, [sp, #40]	; 0x28
   2eff8:	ldr	r6, [sp, #44]	; 0x2c
   2effc:	bl	2ef5c <crc32@@Base+0x15504>
   2f000:	subs	sl, r0, #0
   2f004:	beq	2f010 <crc32@@Base+0x155b8>
   2f008:	mov	r0, sl
   2f00c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f010:	mov	r0, r5
   2f014:	bl	30ce8 <crc32@@Base+0x17290>
   2f018:	ldr	r1, [r5, #16]
   2f01c:	mov	r2, sl
   2f020:	mov	r3, #1
   2f024:	ubfx	lr, r1, #8, #8
   2f028:	ubfx	ip, r1, #16, #8
   2f02c:	lsr	r4, r1, #24
   2f030:	orr	r4, r4, r1, lsl #24
   2f034:	orr	r4, r4, lr, lsl #16
   2f038:	orr	r4, r4, ip, lsl #8
   2f03c:	add	r4, r4, r0, lsl #4
   2f040:	mov	r0, r5
   2f044:	add	fp, r5, r4
   2f048:	mov	r1, fp
   2f04c:	bl	2eb64 <crc32@@Base+0x1510c>
   2f050:	subs	sl, r0, #0
   2f054:	bne	2f008 <crc32@@Base+0x155b0>
   2f058:	rev	r9, r9
   2f05c:	rev	r8, r8
   2f060:	str	r9, [r5, r4]
   2f064:	rev	r7, r7
   2f068:	rev	r6, r6
   2f06c:	str	r8, [fp, #4]
   2f070:	strd	r6, [fp, #8]
   2f074:	mov	r0, sl
   2f078:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f07c:	push	{r4, r5, r6, r7, r8, lr}
   2f080:	mov	r5, r0
   2f084:	mov	r6, r1
   2f088:	ldr	r4, [r0, #16]
   2f08c:	bl	2ef5c <crc32@@Base+0x15504>
   2f090:	subs	r7, r0, #0
   2f094:	beq	2f0a0 <crc32@@Base+0x15648>
   2f098:	mov	r0, r7
   2f09c:	pop	{r4, r5, r6, r7, r8, pc}
   2f0a0:	mov	r0, r5
   2f0a4:	bl	30ce8 <crc32@@Base+0x17290>
   2f0a8:	cmp	r6, r0
   2f0ac:	bge	2f0e4 <crc32@@Base+0x1568c>
   2f0b0:	ubfx	r3, r4, #8, #8
   2f0b4:	lsr	r1, r4, #24
   2f0b8:	orr	r1, r1, r4, lsl #24
   2f0bc:	ubfx	r4, r4, #16, #8
   2f0c0:	orr	r1, r1, r3, lsl #16
   2f0c4:	mov	r0, r5
   2f0c8:	orr	r1, r1, r4, lsl #8
   2f0cc:	mov	r3, r7
   2f0d0:	add	r1, r1, r6, lsl #4
   2f0d4:	mov	r2, #1
   2f0d8:	add	r1, r5, r1
   2f0dc:	pop	{r4, r5, r6, r7, r8, lr}
   2f0e0:	b	2eb64 <crc32@@Base+0x1510c>
   2f0e4:	mvn	r7, #0
   2f0e8:	b	2f098 <crc32@@Base+0x15640>
   2f0ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   2f0f0:	movw	r4, #61168	; 0xeef0
   2f0f4:	movt	r4, #4
   2f0f8:	sub	sp, sp, #12
   2f0fc:	mov	r7, r1
   2f100:	mov	r8, r2
   2f104:	ldr	r3, [r4]
   2f108:	mov	r6, r0
   2f10c:	str	r3, [sp, #4]
   2f110:	bl	2ef5c <crc32@@Base+0x15504>
   2f114:	subs	r5, r0, #0
   2f118:	beq	2f138 <crc32@@Base+0x156e0>
   2f11c:	ldr	r2, [sp, #4]
   2f120:	mov	r0, r5
   2f124:	ldr	r3, [r4]
   2f128:	cmp	r2, r3
   2f12c:	bne	2f19c <crc32@@Base+0x15744>
   2f130:	add	sp, sp, #12
   2f134:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2f138:	mov	r1, r7
   2f13c:	mov	r2, sp
   2f140:	mov	r0, r6
   2f144:	bl	30f04 <crc32@@Base+0x174ac>
   2f148:	subs	r7, r0, #0
   2f14c:	ldreq	r5, [sp]
   2f150:	beq	2f11c <crc32@@Base+0x156c4>
   2f154:	mov	r0, r8
   2f158:	bl	125e4 <strlen@plt>
   2f15c:	ldr	r2, [sp]
   2f160:	mov	r1, r7
   2f164:	add	r2, r2, #4
   2f168:	bic	r2, r2, #3
   2f16c:	add	r3, r0, #4
   2f170:	mov	r9, r0
   2f174:	bic	r3, r3, #3
   2f178:	mov	r0, r6
   2f17c:	bl	2ebe0 <crc32@@Base+0x15188>
   2f180:	subs	r5, r0, #0
   2f184:	bne	2f11c <crc32@@Base+0x156c4>
   2f188:	add	r2, r9, #1
   2f18c:	mov	r1, r8
   2f190:	mov	r0, r7
   2f194:	bl	125c0 <memcpy@plt>
   2f198:	b	2f11c <crc32@@Base+0x156c4>
   2f19c:	bl	124b8 <__stack_chk_fail@plt>
   2f1a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2f1a4:	movw	r4, #61168	; 0xeef0
   2f1a8:	movt	r4, #4
   2f1ac:	mov	r9, r2
   2f1b0:	sub	sp, sp, #24
   2f1b4:	mov	r8, r1
   2f1b8:	ldr	r2, [r4]
   2f1bc:	mov	r6, r3
   2f1c0:	mov	r7, r0
   2f1c4:	ldr	sl, [sp, #56]	; 0x38
   2f1c8:	str	r2, [sp, #20]
   2f1cc:	bl	2ef5c <crc32@@Base+0x15504>
   2f1d0:	subs	r5, r0, #0
   2f1d4:	beq	2f1f4 <crc32@@Base+0x1579c>
   2f1d8:	ldr	r2, [sp, #20]
   2f1dc:	mov	r0, r5
   2f1e0:	ldr	r3, [r4]
   2f1e4:	cmp	r2, r3
   2f1e8:	bne	2f2b4 <crc32@@Base+0x1585c>
   2f1ec:	add	sp, sp, #24
   2f1f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f1f4:	add	r3, sp, #16
   2f1f8:	mov	r2, r9
   2f1fc:	mov	r1, r8
   2f200:	mov	r0, r7
   2f204:	bl	31130 <crc32@@Base+0x176d8>
   2f208:	cmp	r0, #0
   2f20c:	str	r0, [sp, #12]
   2f210:	beq	2f278 <crc32@@Base+0x15820>
   2f214:	ldr	r2, [sp, #16]
   2f218:	add	r3, r6, #3
   2f21c:	add	r1, r0, #12
   2f220:	bic	r3, r3, #3
   2f224:	add	r2, r2, #3
   2f228:	mov	r0, r7
   2f22c:	bic	r2, r2, #3
   2f230:	bl	2ebe0 <crc32@@Base+0x15188>
   2f234:	cmp	r0, #0
   2f238:	bne	2f268 <crc32@@Base+0x15810>
   2f23c:	lsr	r3, r6, #24
   2f240:	ubfx	r1, r6, #8, #8
   2f244:	ldr	r2, [sp, #12]
   2f248:	orr	r3, r3, r6, lsl #24
   2f24c:	ubfx	r6, r6, #16, #8
   2f250:	orr	r3, r3, r1, lsl #16
   2f254:	orr	r6, r3, r6, lsl #8
   2f258:	str	r6, [r2, #4]
   2f25c:	add	r2, r2, #12
   2f260:	str	r2, [sl]
   2f264:	b	2f1d8 <crc32@@Base+0x15780>
   2f268:	cmn	r0, #1
   2f26c:	beq	2f294 <crc32@@Base+0x1583c>
   2f270:	mov	r5, r0
   2f274:	b	2f1d8 <crc32@@Base+0x15780>
   2f278:	ldr	r0, [sp, #16]
   2f27c:	cmn	r0, #1
   2f280:	beq	2f294 <crc32@@Base+0x1583c>
   2f284:	cmp	r0, #0
   2f288:	bne	2f270 <crc32@@Base+0x15818>
   2f28c:	ldr	r2, [sp, #12]
   2f290:	b	2f25c <crc32@@Base+0x15804>
   2f294:	add	ip, sp, #12
   2f298:	mov	r3, r6
   2f29c:	mov	r2, r9
   2f2a0:	mov	r1, r8
   2f2a4:	mov	r0, r7
   2f2a8:	str	ip, [sp]
   2f2ac:	bl	2ee90 <crc32@@Base+0x15438>
   2f2b0:	b	2f284 <crc32@@Base+0x1582c>
   2f2b4:	bl	124b8 <__stack_chk_fail@plt>
   2f2b8:	push	{r4, r5, r6, lr}
   2f2bc:	movw	r4, #61168	; 0xeef0
   2f2c0:	movt	r4, #4
   2f2c4:	sub	sp, sp, #16
   2f2c8:	mov	r6, r3
   2f2cc:	add	r3, sp, #8
   2f2d0:	ldr	ip, [r4]
   2f2d4:	str	r3, [sp]
   2f2d8:	ldr	r3, [sp, #32]
   2f2dc:	str	ip, [sp, #12]
   2f2e0:	bl	2f1a0 <crc32@@Base+0x15748>
   2f2e4:	subs	r5, r0, #0
   2f2e8:	bne	2f2f8 <crc32@@Base+0x158a0>
   2f2ec:	ldr	r3, [sp, #32]
   2f2f0:	cmp	r3, #0
   2f2f4:	bne	2f314 <crc32@@Base+0x158bc>
   2f2f8:	ldr	r2, [sp, #12]
   2f2fc:	mov	r0, r5
   2f300:	ldr	r3, [r4]
   2f304:	cmp	r2, r3
   2f308:	bne	2f328 <crc32@@Base+0x158d0>
   2f30c:	add	sp, sp, #16
   2f310:	pop	{r4, r5, r6, pc}
   2f314:	mov	r1, r6
   2f318:	mov	r2, r3
   2f31c:	ldr	r0, [sp, #8]
   2f320:	bl	125c0 <memcpy@plt>
   2f324:	b	2f2f8 <crc32@@Base+0x158a0>
   2f328:	bl	124b8 <__stack_chk_fail@plt>
   2f32c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2f330:	movw	r4, #61168	; 0xeef0
   2f334:	movt	r4, #4
   2f338:	mov	r8, r2
   2f33c:	sub	sp, sp, #28
   2f340:	mov	r7, r1
   2f344:	ldr	r2, [r4]
   2f348:	mov	r9, r3
   2f34c:	mov	r6, r0
   2f350:	str	r2, [sp, #20]
   2f354:	bl	2ef5c <crc32@@Base+0x15504>
   2f358:	subs	r5, r0, #0
   2f35c:	beq	2f37c <crc32@@Base+0x15924>
   2f360:	ldr	r2, [sp, #20]
   2f364:	mov	r0, r5
   2f368:	ldr	r3, [r4]
   2f36c:	cmp	r2, r3
   2f370:	bne	2f444 <crc32@@Base+0x159ec>
   2f374:	add	sp, sp, #28
   2f378:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2f37c:	add	r3, sp, #16
   2f380:	mov	r2, r8
   2f384:	mov	r1, r7
   2f388:	mov	r0, r6
   2f38c:	bl	31130 <crc32@@Base+0x176d8>
   2f390:	cmp	r0, #0
   2f394:	str	r0, [sp, #12]
   2f398:	beq	2f408 <crc32@@Base+0x159b0>
   2f39c:	ldr	r2, [sp, #16]
   2f3a0:	add	r1, r0, #12
   2f3a4:	ldr	r3, [sp, #56]	; 0x38
   2f3a8:	mov	r0, r6
   2f3ac:	add	r6, r2, r3
   2f3b0:	add	r2, r2, #3
   2f3b4:	add	r3, r6, #3
   2f3b8:	bic	r2, r2, #3
   2f3bc:	bic	r3, r3, #3
   2f3c0:	bl	2ebe0 <crc32@@Base+0x15188>
   2f3c4:	subs	r5, r0, #0
   2f3c8:	bne	2f360 <crc32@@Base+0x15908>
   2f3cc:	ubfx	r1, r6, #8, #8
   2f3d0:	lsr	r3, r6, #24
   2f3d4:	ldr	r2, [sp, #12]
   2f3d8:	orr	r3, r3, r6, lsl #24
   2f3dc:	ubfx	r6, r6, #16, #8
   2f3e0:	orr	r3, r3, r1, lsl #16
   2f3e4:	ldr	r0, [sp, #16]
   2f3e8:	mov	r1, r9
   2f3ec:	orr	r6, r3, r6, lsl #8
   2f3f0:	add	r3, r2, #12
   2f3f4:	str	r6, [r2, #4]
   2f3f8:	add	r0, r3, r0
   2f3fc:	ldr	r2, [sp, #56]	; 0x38
   2f400:	bl	125c0 <memcpy@plt>
   2f404:	b	2f360 <crc32@@Base+0x15908>
   2f408:	add	r3, sp, #12
   2f40c:	mov	r2, r8
   2f410:	str	r3, [sp]
   2f414:	mov	r1, r7
   2f418:	mov	r0, r6
   2f41c:	ldr	r3, [sp, #56]	; 0x38
   2f420:	bl	2ee90 <crc32@@Base+0x15438>
   2f424:	subs	r5, r0, #0
   2f428:	bne	2f360 <crc32@@Base+0x15908>
   2f42c:	ldr	r0, [sp, #12]
   2f430:	mov	r1, r9
   2f434:	ldr	r2, [sp, #56]	; 0x38
   2f438:	add	r0, r0, #12
   2f43c:	bl	125c0 <memcpy@plt>
   2f440:	b	2f360 <crc32@@Base+0x15908>
   2f444:	bl	124b8 <__stack_chk_fail@plt>
   2f448:	push	{r4, r5, r6, r7, r8, lr}
   2f44c:	movw	r4, #61168	; 0xeef0
   2f450:	movt	r4, #4
   2f454:	sub	sp, sp, #8
   2f458:	mov	r7, r1
   2f45c:	mov	r8, r2
   2f460:	ldr	r3, [r4]
   2f464:	mov	r6, r0
   2f468:	str	r3, [sp, #4]
   2f46c:	bl	2ef5c <crc32@@Base+0x15504>
   2f470:	subs	r5, r0, #0
   2f474:	beq	2f494 <crc32@@Base+0x15a3c>
   2f478:	ldr	r2, [sp, #4]
   2f47c:	mov	r0, r5
   2f480:	ldr	r3, [r4]
   2f484:	cmp	r2, r3
   2f488:	bne	2f4d8 <crc32@@Base+0x15a80>
   2f48c:	add	sp, sp, #8
   2f490:	pop	{r4, r5, r6, r7, r8, pc}
   2f494:	mov	r1, r7
   2f498:	mov	r2, r8
   2f49c:	mov	r3, sp
   2f4a0:	mov	r0, r6
   2f4a4:	bl	31130 <crc32@@Base+0x176d8>
   2f4a8:	subs	r1, r0, #0
   2f4ac:	ldreq	r5, [sp]
   2f4b0:	beq	2f478 <crc32@@Base+0x15a20>
   2f4b4:	ldr	r2, [sp]
   2f4b8:	mov	r3, r5
   2f4bc:	mov	r0, r6
   2f4c0:	add	r2, r2, #3
   2f4c4:	bic	r2, r2, #3
   2f4c8:	add	r2, r2, #12
   2f4cc:	bl	2ebe0 <crc32@@Base+0x15188>
   2f4d0:	mov	r5, r0
   2f4d4:	b	2f478 <crc32@@Base+0x15a20>
   2f4d8:	bl	124b8 <__stack_chk_fail@plt>
   2f4dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f4e0:	movw	r4, #61168	; 0xeef0
   2f4e4:	movt	r4, #4
   2f4e8:	mov	r7, r2
   2f4ec:	sub	sp, sp, #12
   2f4f0:	mov	r8, r1
   2f4f4:	ldr	r2, [r4]
   2f4f8:	mov	r6, r3
   2f4fc:	mov	r5, r0
   2f500:	str	r2, [sp, #4]
   2f504:	bl	2ef5c <crc32@@Base+0x15504>
   2f508:	cmp	r0, #0
   2f50c:	beq	2f528 <crc32@@Base+0x15ad0>
   2f510:	ldr	r2, [sp, #4]
   2f514:	ldr	r3, [r4]
   2f518:	cmp	r2, r3
   2f51c:	bne	2f608 <crc32@@Base+0x15bb0>
   2f520:	add	sp, sp, #12
   2f524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f528:	mov	r3, r6
   2f52c:	mov	r2, r7
   2f530:	mov	r1, r8
   2f534:	mov	r0, r5
   2f538:	bl	30de4 <crc32@@Base+0x1738c>
   2f53c:	cmp	r0, #0
   2f540:	bge	2f600 <crc32@@Base+0x15ba8>
   2f544:	cmn	r0, #1
   2f548:	bne	2f510 <crc32@@Base+0x15ab8>
   2f54c:	mov	r1, r8
   2f550:	mov	r0, r5
   2f554:	mov	r2, sp
   2f558:	bl	2daa8 <crc32@@Base+0x14050>
   2f55c:	ldr	r8, [sp]
   2f560:	mov	r2, sp
   2f564:	mov	r0, r5
   2f568:	mov	r1, r8
   2f56c:	bl	2daa8 <crc32@@Base+0x14050>
   2f570:	sub	r0, r0, #3
   2f574:	cmp	r0, #1
   2f578:	bls	2f55c <crc32@@Base+0x15b04>
   2f57c:	ldr	r1, [r5, #8]
   2f580:	add	sl, r6, #4
   2f584:	bic	sl, sl, #3
   2f588:	mov	r2, #0
   2f58c:	ubfx	lr, r1, #8, #8
   2f590:	ubfx	ip, r1, #16, #8
   2f594:	lsr	r9, r1, #24
   2f598:	add	r3, sl, #8
   2f59c:	orr	r9, r9, r1, lsl #24
   2f5a0:	mov	r0, r5
   2f5a4:	orr	r9, r9, lr, lsl #16
   2f5a8:	orr	r9, r9, ip, lsl #8
   2f5ac:	add	r9, r9, r8
   2f5b0:	add	fp, r5, r9
   2f5b4:	mov	r1, fp
   2f5b8:	bl	2ebe0 <crc32@@Base+0x15188>
   2f5bc:	cmp	r0, #0
   2f5c0:	bne	2f510 <crc32@@Base+0x15ab8>
   2f5c4:	add	r3, fp, #4
   2f5c8:	mov	r1, r0
   2f5cc:	mov	r2, #16777216	; 0x1000000
   2f5d0:	str	r2, [r5, r9]
   2f5d4:	mov	r0, r3
   2f5d8:	mov	r2, sl
   2f5dc:	add	sl, fp, sl
   2f5e0:	bl	12308 <memset@plt>
   2f5e4:	mov	r2, r6
   2f5e8:	mov	r1, r7
   2f5ec:	bl	125c0 <memcpy@plt>
   2f5f0:	mov	r3, #33554432	; 0x2000000
   2f5f4:	mov	r0, r8
   2f5f8:	str	r3, [sl, #4]
   2f5fc:	b	2f510 <crc32@@Base+0x15ab8>
   2f600:	mvn	r0, #1
   2f604:	b	2f510 <crc32@@Base+0x15ab8>
   2f608:	bl	124b8 <__stack_chk_fail@plt>
   2f60c:	push	{r4, r5, r6, lr}
   2f610:	mov	r5, r0
   2f614:	mov	r0, r2
   2f618:	mov	r4, r2
   2f61c:	mov	r6, r1
   2f620:	bl	125e4 <strlen@plt>
   2f624:	mov	r2, r4
   2f628:	mov	r1, r6
   2f62c:	mov	r3, r0
   2f630:	mov	r0, r5
   2f634:	pop	{r4, r5, r6, lr}
   2f638:	b	2f4dc <crc32@@Base+0x15a84>
   2f63c:	push	{r4, r5, r6, lr}
   2f640:	mov	r5, r1
   2f644:	mov	r4, r0
   2f648:	bl	2ef5c <crc32@@Base+0x15504>
   2f64c:	cmp	r0, #0
   2f650:	popne	{r4, r5, r6, pc}
   2f654:	mov	r1, r5
   2f658:	mov	r0, r4
   2f65c:	bl	2e0a0 <crc32@@Base+0x14648>
   2f660:	cmp	r0, #0
   2f664:	poplt	{r4, r5, r6, pc}
   2f668:	ldr	r3, [r4, #8]
   2f66c:	sub	r2, r0, r5
   2f670:	mov	r0, r4
   2f674:	ubfx	lr, r3, #8, #8
   2f678:	ubfx	ip, r3, #16, #8
   2f67c:	lsr	r1, r3, #24
   2f680:	orr	r1, r1, r3, lsl #24
   2f684:	mov	r3, #0
   2f688:	orr	r1, r1, lr, lsl #16
   2f68c:	orr	r1, r1, ip, lsl #8
   2f690:	add	r1, r1, r5
   2f694:	add	r1, r4, r1
   2f698:	pop	{r4, r5, r6, lr}
   2f69c:	b	2ebe0 <crc32@@Base+0x15188>
   2f6a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f6a4:	movw	r5, #61168	; 0xeef0
   2f6a8:	movt	r5, #4
   2f6ac:	sub	sp, sp, #20
   2f6b0:	mov	r4, r0
   2f6b4:	mov	r7, r1
   2f6b8:	ldr	r3, [r5]
   2f6bc:	mov	r8, r2
   2f6c0:	ldr	sl, [r0, #4]
   2f6c4:	str	r3, [sp, #12]
   2f6c8:	bl	2d92c <crc32@@Base+0x13ed4>
   2f6cc:	subs	r9, r0, #0
   2f6d0:	beq	2f6f0 <crc32@@Base+0x15c98>
   2f6d4:	ldr	r2, [sp, #12]
   2f6d8:	mov	r0, r9
   2f6dc:	ldr	r3, [r5]
   2f6e0:	cmp	r2, r3
   2f6e4:	bne	2f908 <crc32@@Base+0x15eb0>
   2f6e8:	add	sp, sp, #20
   2f6ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f6f0:	mov	r0, r4
   2f6f4:	bl	30ce8 <crc32@@Base+0x17290>
   2f6f8:	ldr	r2, [r4, #20]
   2f6fc:	ubfx	ip, r2, #8, #8
   2f700:	ubfx	r1, r2, #16, #8
   2f704:	lsr	r3, r2, #24
   2f708:	orr	r3, r3, r2, lsl #24
   2f70c:	orr	r3, r3, ip, lsl #16
   2f710:	orr	r3, r3, r1, lsl #8
   2f714:	cmp	r3, #16
   2f718:	add	r0, r0, #1
   2f71c:	lsl	fp, r0, #4
   2f720:	bhi	2f86c <crc32@@Base+0x15e14>
   2f724:	add	r6, sp, #16
   2f728:	mov	r1, r9
   2f72c:	str	r9, [r6, #-8]!
   2f730:	b	2f738 <crc32@@Base+0x15ce0>
   2f734:	ldr	r1, [sp, #8]
   2f738:	mov	r2, r6
   2f73c:	mov	r0, r4
   2f740:	bl	2daa8 <crc32@@Base+0x14050>
   2f744:	cmp	r0, #9
   2f748:	bne	2f734 <crc32@@Base+0x15cdc>
   2f74c:	ldr	r3, [sp, #8]
   2f750:	cmp	r3, #0
   2f754:	movlt	r9, r3
   2f758:	blt	2f6d4 <crc32@@Base+0x15c7c>
   2f75c:	mov	r2, r3
   2f760:	mov	r1, fp
   2f764:	mov	r0, r4
   2f768:	str	r3, [sp, #4]
   2f76c:	bl	2e9c4 <crc32@@Base+0x14f6c>
   2f770:	ldr	r3, [sp, #4]
   2f774:	cmp	r0, #0
   2f778:	beq	2f890 <crc32@@Base+0x15e38>
   2f77c:	ldr	r2, [r4, #32]
   2f780:	ubfx	r0, r2, #8, #8
   2f784:	ubfx	r1, r2, #16, #8
   2f788:	lsr	r6, r2, #24
   2f78c:	orr	r6, r6, r2, lsl #24
   2f790:	orr	r6, r6, r0, lsl #16
   2f794:	orr	r6, r6, r1, lsl #8
   2f798:	add	r6, r6, #40	; 0x28
   2f79c:	add	r6, r6, fp
   2f7a0:	add	r6, r6, r3
   2f7a4:	cmp	r6, r8
   2f7a8:	bgt	2f900 <crc32@@Base+0x15ea8>
   2f7ac:	ubfx	r1, sl, #8, #8
   2f7b0:	lsr	r2, sl, #24
   2f7b4:	orr	r2, r2, sl, lsl #24
   2f7b8:	ubfx	sl, sl, #16, #8
   2f7bc:	orr	r2, r2, r1, lsl #16
   2f7c0:	add	r1, r7, r6
   2f7c4:	orr	sl, r2, sl, lsl #8
   2f7c8:	cmp	r4, r1
   2f7cc:	add	sl, r4, sl
   2f7d0:	movcs	r2, #0
   2f7d4:	movcc	r2, #1
   2f7d8:	cmp	sl, r7
   2f7dc:	movls	r2, #0
   2f7e0:	cmp	r2, #0
   2f7e4:	moveq	sl, r7
   2f7e8:	bne	2f8f0 <crc32@@Base+0x15e98>
   2f7ec:	mov	r2, fp
   2f7f0:	mov	r1, sl
   2f7f4:	mov	r0, r4
   2f7f8:	bl	2ec54 <crc32@@Base+0x151fc>
   2f7fc:	mov	r2, r6
   2f800:	mov	r1, sl
   2f804:	mov	r0, r7
   2f808:	bl	123a4 <memmove@plt>
   2f80c:	ldr	r1, [r4, #28]
   2f810:	lsr	r2, r8, #24
   2f814:	ubfx	ip, r8, #8, #8
   2f818:	ubfx	lr, r1, #8, #8
   2f81c:	ubfx	r0, r1, #16, #8
   2f820:	lsr	r3, r1, #24
   2f824:	orr	r2, r2, r8, lsl #24
   2f828:	orr	r3, r3, r1, lsl #24
   2f82c:	ubfx	r8, r8, #16, #8
   2f830:	orr	r3, r3, lr, lsl #16
   2f834:	orr	r2, r2, ip, lsl #16
   2f838:	orr	r3, r3, r0, lsl #8
   2f83c:	orr	r8, r2, r8, lsl #8
   2f840:	rev	r3, r3
   2f844:	mov	r2, #285212672	; 0x11000000
   2f848:	str	r3, [r7, #28]
   2f84c:	mov	r3, #3536	; 0xdd0
   2f850:	str	r2, [r7, #20]
   2f854:	movt	r3, #60926	; 0xedfe
   2f858:	mov	r2, #268435456	; 0x10000000
   2f85c:	str	r8, [r7, #4]
   2f860:	str	r3, [r7]
   2f864:	str	r2, [r7, #24]
   2f868:	b	2f6d4 <crc32@@Base+0x15c7c>
   2f86c:	ldr	r2, [r4, #36]	; 0x24
   2f870:	ubfx	r0, r2, #8, #8
   2f874:	ubfx	r1, r2, #16, #8
   2f878:	lsr	r3, r2, #24
   2f87c:	orr	r3, r3, r2, lsl #24
   2f880:	orr	r3, r3, r0, lsl #16
   2f884:	orr	r3, r3, r1, lsl #8
   2f888:	str	r3, [sp, #8]
   2f88c:	b	2f75c <crc32@@Base+0x15d04>
   2f890:	mov	r0, r4
   2f894:	mov	r2, r8
   2f898:	mov	r1, r7
   2f89c:	bl	2deb4 <crc32@@Base+0x1445c>
   2f8a0:	subs	r9, r0, #0
   2f8a4:	bne	2f6d4 <crc32@@Base+0x15c7c>
   2f8a8:	ldr	r1, [sp, #8]
   2f8ac:	lsr	r2, r8, #24
   2f8b0:	ubfx	ip, r8, #8, #8
   2f8b4:	orr	r2, r2, r8, lsl #24
   2f8b8:	ubfx	r0, r1, #8, #8
   2f8bc:	ubfx	r8, r8, #16, #8
   2f8c0:	lsr	r3, r1, #24
   2f8c4:	orr	r2, r2, ip, lsl #16
   2f8c8:	orr	r3, r3, r1, lsl #24
   2f8cc:	ubfx	r1, r1, #16, #8
   2f8d0:	orr	r3, r3, r0, lsl #16
   2f8d4:	orr	r8, r2, r8, lsl #8
   2f8d8:	orr	r3, r3, r1, lsl #8
   2f8dc:	str	r8, [r7, #4]
   2f8e0:	str	r3, [r7, #36]	; 0x24
   2f8e4:	mov	r3, #285212672	; 0x11000000
   2f8e8:	str	r3, [r7, #20]
   2f8ec:	b	2f6d4 <crc32@@Base+0x15c7c>
   2f8f0:	add	r2, sl, r6
   2f8f4:	add	r1, r7, r8
   2f8f8:	cmp	r2, r1
   2f8fc:	bls	2f7ec <crc32@@Base+0x15d94>
   2f900:	mvn	r9, #2
   2f904:	b	2f6d4 <crc32@@Base+0x15c7c>
   2f908:	bl	124b8 <__stack_chk_fail@plt>
   2f90c:	push	{r4, r5, r6, lr}
   2f910:	mov	r4, r0
   2f914:	bl	2ef5c <crc32@@Base+0x15504>
   2f918:	subs	r5, r0, #0
   2f91c:	bne	2f99c <crc32@@Base+0x15f44>
   2f920:	mov	r0, r4
   2f924:	bl	30ce8 <crc32@@Base+0x17290>
   2f928:	ldr	r3, [r4, #36]	; 0x24
   2f92c:	mov	r1, r4
   2f930:	ubfx	lr, r3, #8, #8
   2f934:	ubfx	ip, r3, #16, #8
   2f938:	lsr	r2, r3, #24
   2f93c:	orr	r2, r2, r3, lsl #24
   2f940:	orr	r3, r2, lr, lsl #16
   2f944:	orr	r3, r3, ip, lsl #8
   2f948:	add	r2, r0, #1
   2f94c:	mov	r0, r4
   2f950:	lsl	r2, r2, #4
   2f954:	bl	2ec54 <crc32@@Base+0x151fc>
   2f958:	ldr	r0, [r4, #12]
   2f95c:	ldr	r1, [r4, #32]
   2f960:	ubfx	r6, r0, #8, #8
   2f964:	ubfx	ip, r0, #16, #8
   2f968:	ubfx	lr, r1, #8, #8
   2f96c:	lsr	r3, r0, #24
   2f970:	lsr	r2, r1, #24
   2f974:	orr	r3, r3, r0, lsl #24
   2f978:	orr	r2, r2, r1, lsl #24
   2f97c:	ubfx	r1, r1, #16, #8
   2f980:	orr	r3, r3, r6, lsl #16
   2f984:	orr	r2, r2, lr, lsl #16
   2f988:	orr	r3, r3, ip, lsl #8
   2f98c:	orr	r2, r2, r1, lsl #8
   2f990:	add	r3, r3, r2
   2f994:	rev	r3, r3
   2f998:	str	r3, [r4, #4]
   2f99c:	mov	r0, r5
   2f9a0:	pop	{r4, r5, r6, pc}
   2f9a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2f9a8:	mov	r5, r0
   2f9ac:	ldr	r0, [r0, #4]
   2f9b0:	movw	r7, #61168	; 0xeef0
   2f9b4:	movt	r7, #4
   2f9b8:	mov	r6, r1
   2f9bc:	ubfx	lr, r0, #8, #8
   2f9c0:	ubfx	r2, r0, #16, #8
   2f9c4:	lsr	r3, r0, #24
   2f9c8:	ldr	ip, [r7]
   2f9cc:	orr	r3, r3, r0, lsl #24
   2f9d0:	sub	sp, sp, #12
   2f9d4:	orr	r3, r3, lr, lsl #16
   2f9d8:	mov	r1, r5
   2f9dc:	orr	r2, r3, r2, lsl #8
   2f9e0:	mov	r0, r6
   2f9e4:	str	ip, [sp, #4]
   2f9e8:	bl	125c0 <memcpy@plt>
   2f9ec:	mov	r3, #0
   2f9f0:	str	r3, [r6, #32]
   2f9f4:	mov	r4, r3
   2f9f8:	mov	r2, sp
   2f9fc:	mov	r1, r4
   2fa00:	mov	r0, r5
   2fa04:	bl	2daa8 <crc32@@Base+0x14050>
   2fa08:	cmp	r0, #3
   2fa0c:	beq	2fa38 <crc32@@Base+0x15fe0>
   2fa10:	cmp	r0, #9
   2fa14:	ldr	r4, [sp]
   2fa18:	bne	2f9f8 <crc32@@Base+0x15fa0>
   2fa1c:	mov	r0, #0
   2fa20:	ldr	r2, [sp, #4]
   2fa24:	ldr	r3, [r7]
   2fa28:	cmp	r2, r3
   2fa2c:	bne	2fabc <crc32@@Base+0x16064>
   2fa30:	add	sp, sp, #12
   2fa34:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2fa38:	mov	r2, #0
   2fa3c:	mov	r1, r4
   2fa40:	mov	r0, r5
   2fa44:	bl	30fd0 <crc32@@Base+0x17578>
   2fa48:	mov	r1, r4
   2fa4c:	mov	r2, #0
   2fa50:	mov	r9, r0
   2fa54:	mov	r0, r6
   2fa58:	bl	30fd0 <crc32@@Base+0x17578>
   2fa5c:	ldr	r2, [r9, #8]
   2fa60:	ubfx	ip, r2, #8, #8
   2fa64:	ubfx	r1, r2, #16, #8
   2fa68:	lsr	r3, r2, #24
   2fa6c:	orr	r3, r3, r2, lsl #24
   2fa70:	orr	r3, r3, ip, lsl #16
   2fa74:	orr	r1, r3, r1, lsl #8
   2fa78:	mov	r8, r0
   2fa7c:	mov	r0, r5
   2fa80:	bl	30b24 <crc32@@Base+0x170cc>
   2fa84:	mov	r1, r0
   2fa88:	mov	r0, r6
   2fa8c:	bl	2ed88 <crc32@@Base+0x15330>
   2fa90:	cmp	r0, #0
   2fa94:	blt	2fa20 <crc32@@Base+0x15fc8>
   2fa98:	lsr	r3, r0, #24
   2fa9c:	ubfx	r1, r0, #8, #8
   2faa0:	ubfx	r2, r0, #16, #8
   2faa4:	orr	r3, r3, r0, lsl #24
   2faa8:	orr	r0, r3, r1, lsl #16
   2faac:	ldr	r4, [sp]
   2fab0:	orr	r0, r0, r2, lsl #8
   2fab4:	str	r0, [r8, #8]
   2fab8:	b	2f9f8 <crc32@@Base+0x15fa0>
   2fabc:	bl	124b8 <__stack_chk_fail@plt>
   2fac0:	cmp	r0, #0
   2fac4:	ble	2fad4 <crc32@@Base+0x1607c>
   2fac8:	movw	r0, #52724	; 0xcdf4
   2facc:	movt	r0, #3
   2fad0:	bx	lr
   2fad4:	beq	2fb10 <crc32@@Base+0x160b8>
   2fad8:	cmn	r0, #18
   2fadc:	bls	2fb04 <crc32@@Base+0x160ac>
   2fae0:	rsb	r0, r0, #0
   2fae4:	movw	r2, #52652	; 0xcdac
   2fae8:	movt	r2, #3
   2faec:	movw	r3, #52760	; 0xce18
   2faf0:	movt	r3, #3
   2faf4:	ldr	r0, [r2, r0, lsl #2]
   2faf8:	cmp	r0, #0
   2fafc:	moveq	r0, r3
   2fb00:	bx	lr
   2fb04:	movw	r0, #52760	; 0xce18
   2fb08:	movt	r0, #3
   2fb0c:	bx	lr
   2fb10:	movw	r0, #52748	; 0xce0c
   2fb14:	movt	r0, #3
   2fb18:	bx	lr
   2fb1c:	push	{r4, r5, r6, lr}
   2fb20:	mov	r4, r0
   2fb24:	mov	r5, r1
   2fb28:	bl	2e210 <crc32@@Base+0x147b8>
   2fb2c:	cmp	r0, #0
   2fb30:	popne	{r4, r5, r6, pc}
   2fb34:	mov	r0, r4
   2fb38:	bl	2e498 <crc32@@Base+0x14a40>
   2fb3c:	cmp	r0, #0
   2fb40:	popne	{r4, r5, r6, pc}
   2fb44:	movw	r1, #46860	; 0xb70c
   2fb48:	mov	r0, r4
   2fb4c:	movt	r1, #3
   2fb50:	bl	2e4b8 <crc32@@Base+0x14a60>
   2fb54:	cmp	r0, #0
   2fb58:	popne	{r4, r5, r6, pc}
   2fb5c:	mov	r0, r4
   2fb60:	bl	2e544 <crc32@@Base+0x14aec>
   2fb64:	cmp	r0, #0
   2fb68:	popne	{r4, r5, r6, pc}
   2fb6c:	mov	r0, r4
   2fb70:	bl	2e7d4 <crc32@@Base+0x14d7c>
   2fb74:	cmp	r0, #0
   2fb78:	popne	{r4, r5, r6, pc}
   2fb7c:	mov	r2, r5
   2fb80:	mov	r1, r4
   2fb84:	mov	r0, r4
   2fb88:	pop	{r4, r5, r6, lr}
   2fb8c:	b	2f6a0 <crc32@@Base+0x15c48>
   2fb90:	push	{r4, lr}
   2fb94:	movw	r4, #61168	; 0xeef0
   2fb98:	movt	r4, #4
   2fb9c:	sub	sp, sp, #8
   2fba0:	movw	r2, #28188	; 0x6e1c
   2fba4:	movt	r2, #3
   2fba8:	ldr	ip, [r4]
   2fbac:	mov	r3, sp
   2fbb0:	str	ip, [sp, #4]
   2fbb4:	bl	31204 <crc32@@Base+0x177ac>
   2fbb8:	cmp	r0, #0
   2fbbc:	moveq	r0, #2
   2fbc0:	beq	2fbf8 <crc32@@Base+0x161a0>
   2fbc4:	ldr	r3, [sp]
   2fbc8:	cmp	r3, #4
   2fbcc:	bne	2fc10 <crc32@@Base+0x161b8>
   2fbd0:	ldr	r3, [r0]
   2fbd4:	ubfx	r1, r3, #8, #8
   2fbd8:	ubfx	r2, r3, #16, #8
   2fbdc:	lsr	r0, r3, #24
   2fbe0:	orr	r0, r0, r3, lsl #24
   2fbe4:	orr	r0, r0, r1, lsl #16
   2fbe8:	orr	r0, r0, r2, lsl #8
   2fbec:	sub	r3, r0, #1
   2fbf0:	cmp	r3, #4
   2fbf4:	mvncs	r0, #13
   2fbf8:	ldr	r2, [sp, #4]
   2fbfc:	ldr	r3, [r4]
   2fc00:	cmp	r2, r3
   2fc04:	bne	2fc18 <crc32@@Base+0x161c0>
   2fc08:	add	sp, sp, #8
   2fc0c:	pop	{r4, pc}
   2fc10:	mvn	r0, #13
   2fc14:	b	2fbf8 <crc32@@Base+0x161a0>
   2fc18:	bl	124b8 <__stack_chk_fail@plt>
   2fc1c:	push	{r4, lr}
   2fc20:	movw	r4, #61168	; 0xeef0
   2fc24:	movt	r4, #4
   2fc28:	sub	sp, sp, #8
   2fc2c:	movw	r2, #53108	; 0xcf74
   2fc30:	movt	r2, #3
   2fc34:	ldr	ip, [r4]
   2fc38:	mov	r3, sp
   2fc3c:	str	ip, [sp, #4]
   2fc40:	bl	31204 <crc32@@Base+0x177ac>
   2fc44:	cmp	r0, #0
   2fc48:	moveq	r0, #2
   2fc4c:	beq	2fc80 <crc32@@Base+0x16228>
   2fc50:	ldr	r3, [sp]
   2fc54:	cmp	r3, #4
   2fc58:	bne	2fc98 <crc32@@Base+0x16240>
   2fc5c:	ldr	r3, [r0]
   2fc60:	ubfx	r1, r3, #8, #8
   2fc64:	ubfx	r2, r3, #16, #8
   2fc68:	lsr	r0, r3, #24
   2fc6c:	orr	r0, r0, r3, lsl #24
   2fc70:	orr	r0, r0, r1, lsl #16
   2fc74:	orr	r0, r0, r2, lsl #8
   2fc78:	cmp	r0, #5
   2fc7c:	mvncs	r0, #13
   2fc80:	ldr	r2, [sp, #4]
   2fc84:	ldr	r3, [r4]
   2fc88:	cmp	r2, r3
   2fc8c:	bne	2fca0 <crc32@@Base+0x16248>
   2fc90:	add	sp, sp, #8
   2fc94:	pop	{r4, pc}
   2fc98:	mvn	r0, #13
   2fc9c:	b	2fc80 <crc32@@Base+0x16228>
   2fca0:	bl	124b8 <__stack_chk_fail@plt>
   2fca4:	push	{r4, r5, r6, r7, r8, lr}
   2fca8:	movw	r5, #61168	; 0xeef0
   2fcac:	movt	r5, #4
   2fcb0:	sub	sp, sp, #24
   2fcb4:	mov	r4, r3
   2fcb8:	add	r3, sp, #12
   2fcbc:	ldr	ip, [r5]
   2fcc0:	mov	r6, r0
   2fcc4:	mov	r7, r1
   2fcc8:	mov	r8, r2
   2fccc:	str	ip, [sp, #20]
   2fcd0:	bl	31204 <crc32@@Base+0x177ac>
   2fcd4:	cmp	r0, #0
   2fcd8:	ldreq	r0, [sp, #12]
   2fcdc:	beq	2fd48 <crc32@@Base+0x162f0>
   2fce0:	ldr	r1, [sp, #12]
   2fce4:	cmp	r1, #4
   2fce8:	bne	2fd68 <crc32@@Base+0x16310>
   2fcec:	ldr	r2, [r0]
   2fcf0:	ubfx	ip, r2, #8, #8
   2fcf4:	ubfx	r0, r2, #16, #8
   2fcf8:	lsr	r3, r2, #24
   2fcfc:	orr	r3, r3, r2, lsl #24
   2fd00:	orr	r3, r3, ip, lsl #16
   2fd04:	orr	r3, r3, r0, lsl #8
   2fd08:	adds	r4, r4, r3
   2fd0c:	movcs	r3, #1
   2fd10:	movcc	r3, #0
   2fd14:	cmn	r4, #1
   2fd18:	movne	r2, #0
   2fd1c:	moveq	r2, #1
   2fd20:	orrs	r3, r2, r3
   2fd24:	bne	2fd60 <crc32@@Base+0x16308>
   2fd28:	add	r3, sp, #24
   2fd2c:	str	r1, [sp]
   2fd30:	rev	r4, r4
   2fd34:	mov	r2, r8
   2fd38:	mov	r1, r7
   2fd3c:	mov	r0, r6
   2fd40:	str	r4, [r3, #-8]!
   2fd44:	bl	2df94 <crc32@@Base+0x1453c>
   2fd48:	ldr	r2, [sp, #20]
   2fd4c:	ldr	r3, [r5]
   2fd50:	cmp	r2, r3
   2fd54:	bne	2fd70 <crc32@@Base+0x16318>
   2fd58:	add	sp, sp, #24
   2fd5c:	pop	{r4, r5, r6, r7, r8, pc}
   2fd60:	mvn	r0, #16
   2fd64:	b	2fd48 <crc32@@Base+0x162f0>
   2fd68:	mvn	r0, #5
   2fd6c:	b	2fd48 <crc32@@Base+0x162f0>
   2fd70:	bl	124b8 <__stack_chk_fail@plt>
   2fd74:	push	{r4, r5, r6, lr}
   2fd78:	mov	r4, r2
   2fd7c:	mov	r3, r4
   2fd80:	movw	r2, #53120	; 0xcf80
   2fd84:	movt	r2, #3
   2fd88:	mov	r5, r0
   2fd8c:	mov	r6, r1
   2fd90:	bl	2fca4 <crc32@@Base+0x1624c>
   2fd94:	add	r2, r0, #1
   2fd98:	mov	r3, r0
   2fd9c:	cmp	r2, #1
   2fda0:	bls	2fdac <crc32@@Base+0x16354>
   2fda4:	mov	r0, r3
   2fda8:	pop	{r4, r5, r6, pc}
   2fdac:	mov	r3, r4
   2fdb0:	movw	r2, #53128	; 0xcf88
   2fdb4:	mov	r1, r6
   2fdb8:	movt	r2, #3
   2fdbc:	mov	r0, r5
   2fdc0:	bl	2fca4 <crc32@@Base+0x1624c>
   2fdc4:	add	r2, r0, #1
   2fdc8:	mov	r3, r0
   2fdcc:	cmp	r2, #1
   2fdd0:	bhi	2fda4 <crc32@@Base+0x1634c>
   2fdd4:	mov	r1, r6
   2fdd8:	mov	r0, r5
   2fddc:	bl	2dd78 <crc32@@Base+0x14320>
   2fde0:	subs	r6, r0, #0
   2fde4:	blt	2fe14 <crc32@@Base+0x163bc>
   2fde8:	mov	r1, r6
   2fdec:	mov	r2, r4
   2fdf0:	mov	r0, r5
   2fdf4:	bl	2fd74 <crc32@@Base+0x1631c>
   2fdf8:	mov	r1, r6
   2fdfc:	subs	r3, r0, #0
   2fe00:	mov	r0, r5
   2fe04:	bne	2fda4 <crc32@@Base+0x1634c>
   2fe08:	bl	2ddd8 <crc32@@Base+0x14380>
   2fe0c:	subs	r6, r0, #0
   2fe10:	bge	2fde8 <crc32@@Base+0x16390>
   2fe14:	mov	r3, #0
   2fe18:	b	2fda4 <crc32@@Base+0x1634c>
   2fe1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fe20:	movw	ip, #61168	; 0xeef0
   2fe24:	sub	sp, sp, #60	; 0x3c
   2fe28:	movt	ip, #4
   2fe2c:	mov	lr, r2
   2fe30:	mov	r7, r1
   2fe34:	str	r2, [sp, #28]
   2fe38:	mov	r1, lr
   2fe3c:	ldr	r2, [ip]
   2fe40:	mov	r9, r3
   2fe44:	str	ip, [sp, #24]
   2fe48:	mov	r6, r0
   2fe4c:	str	r2, [sp, #52]	; 0x34
   2fe50:	bl	30f90 <crc32@@Base+0x17538>
   2fe54:	subs	r3, r0, #0
   2fe58:	str	r3, [sp, #20]
   2fe5c:	blt	2ff88 <crc32@@Base+0x16530>
   2fe60:	add	r3, sp, #40	; 0x28
   2fe64:	add	r2, sp, #36	; 0x24
   2fe68:	ldr	r1, [sp, #20]
   2fe6c:	mov	r0, r6
   2fe70:	bl	31194 <crc32@@Base+0x1773c>
   2fe74:	subs	r5, r0, #0
   2fe78:	beq	30004 <crc32@@Base+0x165ac>
   2fe7c:	ldr	r4, [sp, #40]	; 0x28
   2fe80:	ands	r4, r4, #3
   2fe84:	bne	2ff50 <crc32@@Base+0x164f8>
   2fe88:	add	r3, sp, #44	; 0x2c
   2fe8c:	ldr	r2, [sp, #36]	; 0x24
   2fe90:	mov	r1, r7
   2fe94:	mov	r0, r6
   2fe98:	bl	31204 <crc32@@Base+0x177ac>
   2fe9c:	subs	r8, r0, #0
   2fea0:	beq	3000c <crc32@@Base+0x165b4>
   2fea4:	ldr	r3, [sp, #40]	; 0x28
   2fea8:	lsrs	r3, r3, #2
   2feac:	subne	r5, r5, #4
   2feb0:	bne	2fed0 <crc32@@Base+0x16478>
   2feb4:	b	2ff70 <crc32@@Base+0x16518>
   2feb8:	cmp	r0, #0
   2febc:	bne	2ff54 <crc32@@Base+0x164fc>
   2fec0:	ldr	r3, [sp, #40]	; 0x28
   2fec4:	add	r4, r4, #1
   2fec8:	cmp	r4, r3, lsr #2
   2fecc:	bcs	2ff70 <crc32@@Base+0x16518>
   2fed0:	ldr	r3, [r5, #4]!
   2fed4:	ldr	fp, [sp, #36]	; 0x24
   2fed8:	ubfx	r1, r3, #8, #8
   2fedc:	ubfx	r2, r3, #16, #8
   2fee0:	lsr	sl, r3, #24
   2fee4:	orr	sl, sl, r3, lsl #24
   2fee8:	mov	r0, fp
   2feec:	orr	sl, sl, r1, lsl #16
   2fef0:	orr	sl, sl, r2, lsl #8
   2fef4:	ldr	r2, [r8, sl]
   2fef8:	ubfx	r1, r2, #8, #8
   2fefc:	lsr	r3, r2, #24
   2ff00:	orr	r3, r3, r2, lsl #24
   2ff04:	ubfx	r2, r2, #16, #8
   2ff08:	orr	r3, r3, r1, lsl #16
   2ff0c:	orr	r3, r3, r2, lsl #8
   2ff10:	add	r3, r3, r9
   2ff14:	rev	r3, r3
   2ff18:	str	r3, [sp, #48]	; 0x30
   2ff1c:	bl	125e4 <strlen@plt>
   2ff20:	mov	r3, #4
   2ff24:	str	sl, [sp]
   2ff28:	mov	r2, fp
   2ff2c:	str	r3, [sp, #8]
   2ff30:	mov	r1, r7
   2ff34:	add	r3, sp, #48	; 0x30
   2ff38:	str	r3, [sp, #4]
   2ff3c:	mov	r3, r0
   2ff40:	mov	r0, r6
   2ff44:	bl	2df10 <crc32@@Base+0x144b8>
   2ff48:	cmn	r0, #3
   2ff4c:	bne	2feb8 <crc32@@Base+0x16460>
   2ff50:	mvn	r0, #15
   2ff54:	ldr	r3, [sp, #24]
   2ff58:	ldr	r2, [sp, #52]	; 0x34
   2ff5c:	ldr	r3, [r3]
   2ff60:	cmp	r2, r3
   2ff64:	bne	3001c <crc32@@Base+0x165c4>
   2ff68:	add	sp, sp, #60	; 0x3c
   2ff6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ff70:	ldr	r1, [sp, #20]
   2ff74:	mov	r0, r6
   2ff78:	bl	30fb0 <crc32@@Base+0x17558>
   2ff7c:	subs	r3, r0, #0
   2ff80:	str	r3, [sp, #20]
   2ff84:	bge	2fe60 <crc32@@Base+0x16408>
   2ff88:	ldr	r1, [sp, #28]
   2ff8c:	mov	r0, r6
   2ff90:	bl	2dd78 <crc32@@Base+0x14320>
   2ff94:	subs	r4, r0, #0
   2ff98:	blt	2fffc <crc32@@Base+0x165a4>
   2ff9c:	mov	r2, #0
   2ffa0:	mov	r1, r4
   2ffa4:	mov	r0, r6
   2ffa8:	bl	30f04 <crc32@@Base+0x174ac>
   2ffac:	mov	r1, r7
   2ffb0:	mov	r2, r0
   2ffb4:	mov	r0, r6
   2ffb8:	bl	30ed4 <crc32@@Base+0x1747c>
   2ffbc:	cmn	r0, #1
   2ffc0:	beq	2ff50 <crc32@@Base+0x164f8>
   2ffc4:	cmp	r0, #0
   2ffc8:	blt	2ff54 <crc32@@Base+0x164fc>
   2ffcc:	mov	r1, r0
   2ffd0:	mov	r3, r9
   2ffd4:	mov	r2, r4
   2ffd8:	mov	r0, r6
   2ffdc:	bl	2fe1c <crc32@@Base+0x163c4>
   2ffe0:	cmp	r0, #0
   2ffe4:	bne	2ff54 <crc32@@Base+0x164fc>
   2ffe8:	mov	r1, r4
   2ffec:	mov	r0, r6
   2fff0:	bl	2ddd8 <crc32@@Base+0x14380>
   2fff4:	subs	r4, r0, #0
   2fff8:	bge	2ff9c <crc32@@Base+0x16544>
   2fffc:	mov	r0, #0
   30000:	b	2ff54 <crc32@@Base+0x164fc>
   30004:	ldr	r0, [sp, #40]	; 0x28
   30008:	b	2ff54 <crc32@@Base+0x164fc>
   3000c:	ldr	r0, [sp, #44]	; 0x2c
   30010:	cmn	r0, #1
   30014:	bne	2ff54 <crc32@@Base+0x164fc>
   30018:	b	2ff50 <crc32@@Base+0x164f8>
   3001c:	bl	124b8 <__stack_chk_fail@plt>
   30020:	push	{r4, r5, r6, r7, r8, r9, lr}
   30024:	movw	r4, #61168	; 0xeef0
   30028:	movt	r4, #4
   3002c:	sub	sp, sp, #20
   30030:	mov	r6, r1
   30034:	mov	r9, r2
   30038:	ldr	ip, [r4]
   3003c:	mov	r1, r2
   30040:	mov	r8, r0
   30044:	mov	r7, r3
   30048:	mov	r0, r6
   3004c:	movw	r2, #53144	; 0xcf98
   30050:	add	r3, sp, #8
   30054:	movt	r2, #3
   30058:	str	ip, [sp, #12]
   3005c:	mov	r5, #0
   30060:	str	r5, [sp, #4]
   30064:	bl	31204 <crc32@@Base+0x177ac>
   30068:	cmp	r0, #0
   3006c:	beq	300a8 <crc32@@Base+0x16650>
   30070:	ldr	r3, [sp, #8]
   30074:	cmp	r3, #4
   30078:	bne	30100 <crc32@@Base+0x166a8>
   3007c:	ldr	r3, [r0]
   30080:	ubfx	r0, r3, #8, #8
   30084:	ubfx	r2, r3, #16, #8
   30088:	lsr	r1, r3, #24
   3008c:	orr	r1, r1, r3, lsl #24
   30090:	orr	r1, r1, r0, lsl #16
   30094:	orr	r1, r1, r2, lsl #8
   30098:	cmn	r1, #1
   3009c:	beq	30100 <crc32@@Base+0x166a8>
   300a0:	cmp	r1, #0
   300a4:	bne	30108 <crc32@@Base+0x166b0>
   300a8:	mov	r1, r9
   300ac:	mov	r0, r6
   300b0:	movw	r2, #53152	; 0xcfa0
   300b4:	add	r3, sp, #4
   300b8:	movt	r2, #3
   300bc:	bl	31204 <crc32@@Base+0x177ac>
   300c0:	subs	r5, r0, #0
   300c4:	ldreq	r0, [sp, #4]
   300c8:	beq	300d8 <crc32@@Base+0x16680>
   300cc:	mov	r0, r8
   300d0:	mov	r1, r5
   300d4:	bl	31560 <crc32@@Base+0x17b08>
   300d8:	cmp	r0, #0
   300dc:	blt	30118 <crc32@@Base+0x166c0>
   300e0:	cmp	r7, #0
   300e4:	strne	r5, [r7]
   300e8:	ldr	r2, [sp, #12]
   300ec:	ldr	r3, [r4]
   300f0:	cmp	r2, r3
   300f4:	bne	30128 <crc32@@Base+0x166d0>
   300f8:	add	sp, sp, #20
   300fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   30100:	mvn	r0, #5
   30104:	b	300e8 <crc32@@Base+0x16690>
   30108:	mov	r0, r8
   3010c:	bl	319ac <crc32@@Base+0x17f54>
   30110:	cmp	r0, #0
   30114:	bge	300e0 <crc32@@Base+0x16688>
   30118:	ldr	r3, [sp, #4]
   3011c:	cmn	r3, #1
   30120:	mvneq	r0, #15
   30124:	b	300e8 <crc32@@Base+0x16690>
   30128:	bl	124b8 <__stack_chk_fail@plt>
   3012c:	push	{r4, r5, r6, r7, r8, r9, lr}
   30130:	movw	r8, #61168	; 0xeef0
   30134:	movt	r8, #4
   30138:	mov	r9, r3
   3013c:	sub	sp, sp, #28
   30140:	mov	r6, r0
   30144:	ldr	r3, [r8]
   30148:	mov	r7, r1
   3014c:	mov	r0, r2
   30150:	mov	r1, r9
   30154:	mov	r5, r2
   30158:	str	r3, [sp, #20]
   3015c:	bl	30f90 <crc32@@Base+0x17538>
   30160:	subs	r4, r0, #0
   30164:	bge	301a8 <crc32@@Base+0x16750>
   30168:	b	301e8 <crc32@@Base+0x16790>
   3016c:	cmp	r1, #0
   30170:	blt	301cc <crc32@@Base+0x16774>
   30174:	mov	r3, r0
   30178:	str	r1, [sp]
   3017c:	ldr	r2, [sp, #12]
   30180:	mov	r1, r7
   30184:	mov	r0, r6
   30188:	bl	2f2b8 <crc32@@Base+0x15860>
   3018c:	subs	r1, r0, #0
   30190:	bne	301cc <crc32@@Base+0x16774>
   30194:	mov	r1, r4
   30198:	mov	r0, r5
   3019c:	bl	30fb0 <crc32@@Base+0x17558>
   301a0:	subs	r4, r0, #0
   301a4:	blt	301e8 <crc32@@Base+0x16790>
   301a8:	mov	r1, r4
   301ac:	add	r3, sp, #16
   301b0:	add	r2, sp, #12
   301b4:	mov	r0, r5
   301b8:	bl	31194 <crc32@@Base+0x1773c>
   301bc:	ldr	r1, [sp, #16]
   301c0:	cmn	r1, #1
   301c4:	bne	3016c <crc32@@Base+0x16714>
   301c8:	mvn	r1, #12
   301cc:	ldr	r2, [sp, #20]
   301d0:	mov	r0, r1
   301d4:	ldr	r3, [r8]
   301d8:	cmp	r2, r3
   301dc:	bne	30288 <crc32@@Base+0x16830>
   301e0:	add	sp, sp, #28
   301e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   301e8:	mov	r1, r9
   301ec:	mov	r0, r5
   301f0:	bl	2dd78 <crc32@@Base+0x14320>
   301f4:	subs	r4, r0, #0
   301f8:	blt	30260 <crc32@@Base+0x16808>
   301fc:	mov	r2, #0
   30200:	mov	r1, r4
   30204:	mov	r0, r5
   30208:	bl	30f04 <crc32@@Base+0x174ac>
   3020c:	mov	r1, r7
   30210:	mov	r2, r0
   30214:	mov	r9, r0
   30218:	mov	r0, r6
   3021c:	bl	2f60c <crc32@@Base+0x15bb4>
   30220:	cmn	r0, #2
   30224:	mov	r1, r0
   30228:	beq	30268 <crc32@@Base+0x16810>
   3022c:	cmp	r1, #0
   30230:	blt	301cc <crc32@@Base+0x16774>
   30234:	mov	r3, r4
   30238:	mov	r2, r5
   3023c:	mov	r0, r6
   30240:	bl	3012c <crc32@@Base+0x166d4>
   30244:	subs	r1, r0, #0
   30248:	bne	301cc <crc32@@Base+0x16774>
   3024c:	mov	r1, r4
   30250:	mov	r0, r5
   30254:	bl	2ddd8 <crc32@@Base+0x14380>
   30258:	subs	r4, r0, #0
   3025c:	bge	301fc <crc32@@Base+0x167a4>
   30260:	mov	r1, #0
   30264:	b	301cc <crc32@@Base+0x16774>
   30268:	mov	r1, r7
   3026c:	mov	r2, r9
   30270:	mov	r0, r6
   30274:	bl	30ed4 <crc32@@Base+0x1747c>
   30278:	cmn	r0, #1
   3027c:	mov	r1, r0
   30280:	bne	3022c <crc32@@Base+0x167d4>
   30284:	b	301c8 <crc32@@Base+0x16770>
   30288:	bl	124b8 <__stack_chk_fail@plt>
   3028c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30290:	movw	r4, #61168	; 0xeef0
   30294:	movt	r4, #4
   30298:	sub	sp, sp, #76	; 0x4c
   3029c:	mov	sl, r0
   302a0:	mov	fp, r1
   302a4:	ldr	r3, [r4]
   302a8:	str	r3, [sp, #68]	; 0x44
   302ac:	bl	312fc <crc32@@Base+0x178a4>
   302b0:	mov	r5, r0
   302b4:	mov	r0, sl
   302b8:	bl	2d92c <crc32@@Base+0x13ed4>
   302bc:	subs	r9, r0, #0
   302c0:	beq	302e0 <crc32@@Base+0x16888>
   302c4:	ldr	r2, [sp, #68]	; 0x44
   302c8:	mov	r0, r9
   302cc:	ldr	r3, [r4]
   302d0:	cmp	r2, r3
   302d4:	bne	3090c <crc32@@Base+0x16eb4>
   302d8:	add	sp, sp, #76	; 0x4c
   302dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   302e0:	mov	r0, fp
   302e4:	bl	2d92c <crc32@@Base+0x13ed4>
   302e8:	subs	r9, r0, #0
   302ec:	bne	302c4 <crc32@@Base+0x1686c>
   302f0:	mov	r1, r9
   302f4:	mov	r2, r5
   302f8:	mov	r0, fp
   302fc:	bl	2fd74 <crc32@@Base+0x1631c>
   30300:	subs	r9, r0, #0
   30304:	beq	30318 <crc32@@Base+0x168c0>
   30308:	mvn	r3, #0
   3030c:	str	r3, [fp]
   30310:	str	r3, [sl]
   30314:	b	302c4 <crc32@@Base+0x1686c>
   30318:	movw	r1, #53164	; 0xcfac
   3031c:	mov	r0, fp
   30320:	movt	r1, #3
   30324:	bl	31560 <crc32@@Base+0x17b08>
   30328:	subs	r2, r0, #0
   3032c:	bge	30564 <crc32@@Base+0x16b0c>
   30330:	cmn	r2, #1
   30334:	movne	r9, r2
   30338:	bne	30308 <crc32@@Base+0x168b0>
   3033c:	movw	r1, #53184	; 0xcfc0
   30340:	mov	r0, fp
   30344:	movt	r1, #3
   30348:	bl	31560 <crc32@@Base+0x17b08>
   3034c:	cmn	r0, #1
   30350:	mov	r5, r0
   30354:	beq	305a8 <crc32@@Base+0x16b50>
   30358:	cmp	r0, #0
   3035c:	blt	3067c <crc32@@Base+0x16c24>
   30360:	movw	r1, #53196	; 0xcfcc
   30364:	mov	r0, sl
   30368:	movt	r1, #3
   3036c:	bl	31560 <crc32@@Base+0x17b08>
   30370:	cmn	r0, #1
   30374:	str	r0, [sp, #16]
   30378:	blt	3055c <crc32@@Base+0x16b04>
   3037c:	mov	r1, r5
   30380:	mov	r0, fp
   30384:	bl	30f90 <crc32@@Base+0x17538>
   30388:	subs	r3, r0, #0
   3038c:	str	r3, [sp, #28]
   30390:	blt	305a8 <crc32@@Base+0x16b50>
   30394:	str	r9, [sp, #40]	; 0x28
   30398:	mov	r9, fp
   3039c:	add	r3, sp, #52	; 0x34
   303a0:	str	r4, [sp, #24]
   303a4:	str	r3, [sp, #36]	; 0x24
   303a8:	add	r3, sp, #48	; 0x30
   303ac:	str	r3, [sp, #32]
   303b0:	ldrd	r2, [sp, #32]
   303b4:	mov	r0, r9
   303b8:	ldr	r1, [sp, #28]
   303bc:	bl	31194 <crc32@@Base+0x1773c>
   303c0:	subs	r5, r0, #0
   303c4:	ldrne	r4, [sp, #52]	; 0x34
   303c8:	bne	3047c <crc32@@Base+0x16a24>
   303cc:	b	30684 <crc32@@Base+0x16c2c>
   303d0:	add	r3, sp, #64	; 0x40
   303d4:	ldr	r2, [sp, #48]	; 0x30
   303d8:	mov	r0, sl
   303dc:	bl	31204 <crc32@@Base+0x177ac>
   303e0:	subs	r1, r0, #0
   303e4:	ldreq	r0, [sp, #64]	; 0x40
   303e8:	beq	30464 <crc32@@Base+0x16a0c>
   303ec:	mov	r0, sl
   303f0:	bl	31560 <crc32@@Base+0x17b08>
   303f4:	subs	r1, r0, #0
   303f8:	blt	3066c <crc32@@Base+0x16c14>
   303fc:	mov	r0, sl
   30400:	bl	3124c <crc32@@Base+0x177f4>
   30404:	subs	r3, r0, #0
   30408:	mov	fp, r3
   3040c:	beq	30910 <crc32@@Base+0x16eb8>
   30410:	mov	r2, r7
   30414:	mov	r1, r5
   30418:	mov	r0, r9
   3041c:	bl	3146c <crc32@@Base+0x17a14>
   30420:	cmn	r0, #1
   30424:	beq	30658 <crc32@@Base+0x16c00>
   30428:	cmp	r0, #0
   3042c:	blt	306a8 <crc32@@Base+0x16c50>
   30430:	ldr	r3, [sp, #20]
   30434:	add	lr, sp, #72	; 0x48
   30438:	rev	ip, fp
   3043c:	mov	r1, r0
   30440:	mov	r2, r4
   30444:	mov	r0, r9
   30448:	str	r3, [sp]
   3044c:	mov	r3, r8
   30450:	str	ip, [lr, #-12]!
   30454:	mov	ip, #4
   30458:	str	lr, [sp, #4]
   3045c:	str	ip, [sp, #8]
   30460:	bl	2df10 <crc32@@Base+0x144b8>
   30464:	cmp	r0, #0
   30468:	bne	306a8 <crc32@@Base+0x16c50>
   3046c:	ldr	r4, [sp, #52]	; 0x34
   30470:	cmp	r4, #0
   30474:	ble	30584 <crc32@@Base+0x16b2c>
   30478:	mov	r5, r6
   3047c:	mov	r2, r4
   30480:	mov	r1, #0
   30484:	mov	r0, r5
   30488:	bl	126bc <memchr@plt>
   3048c:	cmp	r0, #0
   30490:	beq	30658 <crc32@@Base+0x16c00>
   30494:	sub	r7, r0, r5
   30498:	sub	r4, r4, #1
   3049c:	mov	r1, #58	; 0x3a
   304a0:	mov	r0, r5
   304a4:	mov	r2, r7
   304a8:	sub	r4, r4, r7
   304ac:	str	r4, [sp, #52]	; 0x34
   304b0:	bl	126bc <memchr@plt>
   304b4:	add	r6, r7, #1
   304b8:	add	r6, r5, r6
   304bc:	cmp	r0, #0
   304c0:	beq	30658 <crc32@@Base+0x16c00>
   304c4:	ldrb	r1, [r0]
   304c8:	cmp	r1, #58	; 0x3a
   304cc:	bne	30658 <crc32@@Base+0x16c00>
   304d0:	sub	r2, r7, #1
   304d4:	sub	r7, r0, r5
   304d8:	cmp	r7, r2
   304dc:	beq	30658 <crc32@@Base+0x16c00>
   304e0:	add	r4, r0, #1
   304e4:	sub	r2, r2, r7
   304e8:	mov	r0, r4
   304ec:	bl	126bc <memchr@plt>
   304f0:	cmp	r0, #0
   304f4:	beq	30658 <crc32@@Base+0x16c00>
   304f8:	ldrb	r3, [r0]
   304fc:	cmp	r3, #58	; 0x3a
   30500:	bne	30658 <crc32@@Base+0x16c00>
   30504:	subs	r8, r0, r4
   30508:	beq	30658 <crc32@@Base+0x16c00>
   3050c:	add	fp, r0, #1
   30510:	mov	r2, #10
   30514:	add	r1, sp, #56	; 0x38
   30518:	mov	r0, fp
   3051c:	bl	122f0 <strtoul@plt>
   30520:	ldr	r2, [sp, #56]	; 0x38
   30524:	cmp	fp, r2
   30528:	ldrb	r2, [r2]
   3052c:	movcc	r3, #0
   30530:	movcs	r3, #1
   30534:	cmp	r2, #0
   30538:	movne	r3, #1
   3053c:	cmp	r3, #0
   30540:	str	r0, [sp, #20]
   30544:	bne	30658 <crc32@@Base+0x16c00>
   30548:	ldr	r1, [sp, #16]
   3054c:	cmn	r1, #1
   30550:	bne	303d0 <crc32@@Base+0x16978>
   30554:	ldr	r4, [sp, #24]
   30558:	mov	fp, r9
   3055c:	ldr	r9, [sp, #16]
   30560:	b	30308 <crc32@@Base+0x168b0>
   30564:	mov	r3, r5
   30568:	mov	r1, r9
   3056c:	mov	r0, fp
   30570:	bl	2fe1c <crc32@@Base+0x163c4>
   30574:	cmp	r0, #0
   30578:	beq	3033c <crc32@@Base+0x168e4>
   3057c:	mov	r9, r0
   30580:	b	30308 <crc32@@Base+0x168b0>
   30584:	ldr	r1, [sp, #28]
   30588:	mov	r0, r9
   3058c:	bl	30fb0 <crc32@@Base+0x17558>
   30590:	subs	r3, r0, #0
   30594:	str	r3, [sp, #28]
   30598:	bge	303b0 <crc32@@Base+0x16958>
   3059c:	mov	fp, r9
   305a0:	ldr	r4, [sp, #24]
   305a4:	ldr	r9, [sp, #40]	; 0x28
   305a8:	mov	r1, #0
   305ac:	mov	r0, fp
   305b0:	bl	2dd78 <crc32@@Base+0x14320>
   305b4:	subs	r5, r0, #0
   305b8:	blt	30630 <crc32@@Base+0x16bd8>
   305bc:	movw	r7, #53212	; 0xcfdc
   305c0:	movt	r7, #3
   305c4:	mov	r2, r7
   305c8:	mov	r1, r5
   305cc:	mov	r0, fp
   305d0:	bl	30ed4 <crc32@@Base+0x1747c>
   305d4:	cmn	r0, #1
   305d8:	mov	r6, r0
   305dc:	beq	3061c <crc32@@Base+0x16bc4>
   305e0:	cmp	r0, #0
   305e4:	blt	306b8 <crc32@@Base+0x16c60>
   305e8:	mov	r1, fp
   305ec:	mov	r3, #0
   305f0:	mov	r2, r5
   305f4:	mov	r0, sl
   305f8:	bl	30020 <crc32@@Base+0x165c8>
   305fc:	subs	r1, r0, #0
   30600:	blt	306c0 <crc32@@Base+0x16c68>
   30604:	mov	r3, r6
   30608:	mov	r2, fp
   3060c:	mov	r0, sl
   30610:	bl	3012c <crc32@@Base+0x166d4>
   30614:	cmp	r0, #0
   30618:	bne	3057c <crc32@@Base+0x16b24>
   3061c:	mov	r1, r5
   30620:	mov	r0, fp
   30624:	bl	2ddd8 <crc32@@Base+0x14380>
   30628:	subs	r5, r0, #0
   3062c:	bge	305c4 <crc32@@Base+0x16b6c>
   30630:	movw	r2, #53224	; 0xcfe8
   30634:	mov	r1, #0
   30638:	movt	r2, #3
   3063c:	mov	r0, fp
   30640:	bl	30ed4 <crc32@@Base+0x1747c>
   30644:	subs	r5, r0, #0
   30648:	bge	306c8 <crc32@@Base+0x16c70>
   3064c:	mvn	r3, #0
   30650:	str	r3, [fp]
   30654:	b	302c4 <crc32@@Base+0x1686c>
   30658:	mvn	r3, #15
   3065c:	mov	fp, r9
   30660:	ldr	r4, [sp, #24]
   30664:	str	r3, [sp, #16]
   30668:	b	3055c <crc32@@Base+0x16b04>
   3066c:	mov	fp, r9
   30670:	ldr	r4, [sp, #24]
   30674:	str	r1, [sp, #16]
   30678:	b	3055c <crc32@@Base+0x16b04>
   3067c:	mov	r9, r0
   30680:	b	30308 <crc32@@Base+0x168b0>
   30684:	ldr	r3, [sp, #52]	; 0x34
   30688:	cmn	r3, #1
   3068c:	beq	30a0c <crc32@@Base+0x16fb4>
   30690:	cmp	r3, #0
   30694:	beq	30584 <crc32@@Base+0x16b2c>
   30698:	mov	fp, r9
   3069c:	ldr	r4, [sp, #24]
   306a0:	mov	r9, r3
   306a4:	b	30308 <crc32@@Base+0x168b0>
   306a8:	mov	fp, r9
   306ac:	ldr	r4, [sp, #24]
   306b0:	str	r0, [sp, #16]
   306b4:	b	3055c <crc32@@Base+0x16b04>
   306b8:	mov	r9, r0
   306bc:	b	30308 <crc32@@Base+0x168b0>
   306c0:	mov	r9, r1
   306c4:	b	30308 <crc32@@Base+0x168b0>
   306c8:	movw	r2, #53224	; 0xcfe8
   306cc:	mov	r1, #0
   306d0:	movt	r2, #3
   306d4:	mov	r0, sl
   306d8:	bl	30ed4 <crc32@@Base+0x1747c>
   306dc:	cmn	r0, #1
   306e0:	str	r0, [sp, #20]
   306e4:	beq	309f0 <crc32@@Base+0x16f98>
   306e8:	ldr	r3, [sp, #20]
   306ec:	cmp	r3, #0
   306f0:	blt	30904 <crc32@@Base+0x16eac>
   306f4:	mov	r1, r5
   306f8:	mov	r0, fp
   306fc:	bl	30f90 <crc32@@Base+0x17538>
   30700:	subs	r3, r0, #0
   30704:	str	r3, [sp, #24]
   30708:	blt	3064c <crc32@@Base+0x16bf4>
   3070c:	movw	r3, #53236	; 0xcff4
   30710:	movw	r2, #53212	; 0xcfdc
   30714:	movt	r3, #3
   30718:	movt	r2, #3
   3071c:	str	r3, [sp, #40]	; 0x28
   30720:	add	r3, sp, #52	; 0x34
   30724:	str	r2, [sp, #44]	; 0x2c
   30728:	str	r3, [sp, #36]	; 0x24
   3072c:	add	r3, sp, #48	; 0x30
   30730:	str	r9, [sp, #28]
   30734:	str	r3, [sp, #32]
   30738:	str	r4, [sp, #16]
   3073c:	ldr	r3, [sp, #32]
   30740:	mov	r0, fp
   30744:	ldr	r2, [sp, #36]	; 0x24
   30748:	ldr	r1, [sp, #24]
   3074c:	bl	31194 <crc32@@Base+0x1773c>
   30750:	subs	r8, r0, #0
   30754:	beq	308e8 <crc32@@Base+0x16e90>
   30758:	ldr	r6, [sp, #48]	; 0x30
   3075c:	cmp	r6, #0
   30760:	ble	30a1c <crc32@@Base+0x16fc4>
   30764:	mov	r2, r6
   30768:	mov	r1, #0
   3076c:	bl	126bc <memchr@plt>
   30770:	sub	r3, r6, #1
   30774:	add	r3, r8, r3
   30778:	cmp	r0, r3
   3077c:	bne	30a1c <crc32@@Base+0x16fc4>
   30780:	ldrb	r1, [r8]
   30784:	add	r6, r8, r6
   30788:	cmp	r1, #47	; 0x2f
   3078c:	bne	30a1c <crc32@@Base+0x16fc4>
   30790:	add	r7, r8, #1
   30794:	mov	r0, r7
   30798:	bl	12788 <strchr@plt>
   3079c:	subs	r9, r0, #0
   307a0:	beq	30a44 <crc32@@Base+0x16fec>
   307a4:	sub	r3, r6, r9
   307a8:	sub	r8, r9, r8
   307ac:	cmp	r3, #12
   307b0:	sub	r8, r8, #1
   307b4:	ble	30a44 <crc32@@Base+0x16fec>
   307b8:	ldr	r1, [sp, #40]	; 0x28
   307bc:	mov	r2, #13
   307c0:	bl	126ec <memcmp@plt>
   307c4:	subs	r1, r0, #0
   307c8:	bne	30a44 <crc32@@Base+0x16fec>
   307cc:	mov	r2, r7
   307d0:	mov	r3, r8
   307d4:	mov	r0, fp
   307d8:	add	r9, r9, #13
   307dc:	bl	30de4 <crc32@@Base+0x1738c>
   307e0:	sub	r6, r6, r9
   307e4:	subs	r7, r0, #0
   307e8:	blt	30a44 <crc32@@Base+0x16fec>
   307ec:	ldr	r2, [sp, #44]	; 0x2c
   307f0:	mov	r1, r7
   307f4:	mov	r0, fp
   307f8:	bl	30ed4 <crc32@@Base+0x1747c>
   307fc:	cmp	r0, #0
   30800:	blt	30a44 <crc32@@Base+0x16fec>
   30804:	mov	r2, r7
   30808:	mov	r1, fp
   3080c:	mov	r0, sl
   30810:	add	r3, sp, #56	; 0x38
   30814:	bl	30020 <crc32@@Base+0x165c8>
   30818:	subs	r5, r0, #0
   3081c:	blt	30a38 <crc32@@Base+0x16fe0>
   30820:	ldr	r0, [sp, #56]	; 0x38
   30824:	cmp	r0, #0
   30828:	beq	30924 <crc32@@Base+0x16ecc>
   3082c:	bl	125e4 <strlen@plt>
   30830:	mov	r5, r0
   30834:	cmp	r5, #1
   30838:	movle	r3, r5
   3083c:	addgt	r3, r5, #1
   30840:	add	r1, sp, #60	; 0x3c
   30844:	add	r3, r3, r6
   30848:	str	r1, [sp]
   3084c:	ldr	r2, [sp, #52]	; 0x34
   30850:	add	r3, r3, #1
   30854:	ldr	r1, [sp, #20]
   30858:	mov	r0, sl
   3085c:	bl	2f1a0 <crc32@@Base+0x15748>
   30860:	subs	r4, r0, #0
   30864:	blt	309e4 <crc32@@Base+0x16f8c>
   30868:	ldr	r1, [sp, #56]	; 0x38
   3086c:	cmp	r1, #0
   30870:	beq	30990 <crc32@@Base+0x16f38>
   30874:	cmp	r5, #1
   30878:	ldr	r7, [sp, #60]	; 0x3c
   3087c:	addgt	r8, r5, #1
   30880:	ble	308dc <crc32@@Base+0x16e84>
   30884:	mov	r2, r8
   30888:	mov	r0, r7
   3088c:	bl	125c0 <memcpy@plt>
   30890:	mov	r2, r6
   30894:	add	r6, r7, r6
   30898:	mov	r3, #47	; 0x2f
   3089c:	strb	r3, [r7, r5]
   308a0:	add	r5, r6, r5
   308a4:	mov	r1, r9
   308a8:	add	r0, r7, r8
   308ac:	bl	125c0 <memcpy@plt>
   308b0:	mov	r3, #0
   308b4:	ldr	r1, [sp, #24]
   308b8:	mov	r0, fp
   308bc:	strb	r3, [r5, #1]
   308c0:	bl	30fb0 <crc32@@Base+0x17558>
   308c4:	subs	r3, r0, #0
   308c8:	str	r3, [sp, #24]
   308cc:	bge	3073c <crc32@@Base+0x16ce4>
   308d0:	ldr	r9, [sp, #28]
   308d4:	ldr	r4, [sp, #16]
   308d8:	b	3064c <crc32@@Base+0x16bf4>
   308dc:	mov	r8, r5
   308e0:	sub	r5, r5, #1
   308e4:	b	30890 <crc32@@Base+0x16e38>
   308e8:	ldr	r3, [sp, #48]	; 0x30
   308ec:	ldr	r9, [sp, #28]
   308f0:	cmp	r3, #0
   308f4:	ldr	r4, [sp, #16]
   308f8:	beq	3064c <crc32@@Base+0x16bf4>
   308fc:	mov	r9, r3
   30900:	b	30308 <crc32@@Base+0x168b0>
   30904:	ldr	r3, [sp, #20]
   30908:	b	308fc <crc32@@Base+0x16ea4>
   3090c:	bl	124b8 <__stack_chk_fail@plt>
   30910:	mvn	r3, #0
   30914:	mov	fp, r9
   30918:	ldr	r4, [sp, #24]
   3091c:	str	r3, [sp, #16]
   30920:	b	3055c <crc32@@Base+0x16b04>
   30924:	mov	r0, sl
   30928:	bl	2d92c <crc32@@Base+0x13ed4>
   3092c:	subs	r4, r0, #0
   30930:	bne	30980 <crc32@@Base+0x16f28>
   30934:	add	r2, sp, #64	; 0x40
   30938:	mov	r1, r5
   3093c:	mov	r0, sl
   30940:	bl	30f04 <crc32@@Base+0x174ac>
   30944:	cmp	r0, #0
   30948:	beq	3097c <crc32@@Base+0x16f24>
   3094c:	ldr	r3, [sp, #64]	; 0x40
   30950:	cmp	r3, #0
   30954:	beq	30a28 <crc32@@Base+0x16fd0>
   30958:	mov	r1, r5
   3095c:	mov	r0, sl
   30960:	bl	31860 <crc32@@Base+0x17e08>
   30964:	subs	r5, r0, #0
   30968:	blt	30a38 <crc32@@Base+0x16fe0>
   3096c:	ldr	r3, [sp, #64]	; 0x40
   30970:	add	r3, r3, #1
   30974:	add	r4, r4, r3
   30978:	b	30934 <crc32@@Base+0x16edc>
   3097c:	ldr	r4, [sp, #64]	; 0x40
   30980:	cmp	r4, #0
   30984:	blt	309e4 <crc32@@Base+0x16f8c>
   30988:	mov	r5, r4
   3098c:	b	30834 <crc32@@Base+0x16ddc>
   30990:	add	r3, sp, #56	; 0x38
   30994:	mov	r2, r7
   30998:	mov	r1, fp
   3099c:	mov	r0, sl
   309a0:	bl	30020 <crc32@@Base+0x165c8>
   309a4:	subs	r4, r0, #0
   309a8:	blt	309e4 <crc32@@Base+0x16f8c>
   309ac:	cmp	r5, #1
   309b0:	ldr	r7, [sp, #60]	; 0x3c
   309b4:	ble	308dc <crc32@@Base+0x16e84>
   309b8:	ldr	r1, [sp, #56]	; 0x38
   309bc:	add	r8, r5, #1
   309c0:	cmp	r1, #0
   309c4:	bne	30884 <crc32@@Base+0x16e2c>
   309c8:	mov	r1, r4
   309cc:	mov	r3, r8
   309d0:	mov	r2, r7
   309d4:	mov	r0, sl
   309d8:	bl	315b0 <crc32@@Base+0x17b58>
   309dc:	subs	r4, r0, #0
   309e0:	bge	30890 <crc32@@Base+0x16e38>
   309e4:	mov	r3, r4
   309e8:	ldr	r4, [sp, #16]
   309ec:	b	308fc <crc32@@Base+0x16ea4>
   309f0:	movw	r2, #53224	; 0xcfe8
   309f4:	mov	r1, #0
   309f8:	movt	r2, #3
   309fc:	mov	r0, sl
   30a00:	bl	2f60c <crc32@@Base+0x15bb4>
   30a04:	str	r0, [sp, #20]
   30a08:	b	306e8 <crc32@@Base+0x16c90>
   30a0c:	mov	fp, r9
   30a10:	ldr	r4, [sp, #24]
   30a14:	mvn	r9, #12
   30a18:	b	30308 <crc32@@Base+0x168b0>
   30a1c:	ldr	r4, [sp, #16]
   30a20:	mvn	r3, #14
   30a24:	b	308fc <crc32@@Base+0x16ea4>
   30a28:	cmp	r4, #0
   30a2c:	moveq	r5, #1
   30a30:	beq	30834 <crc32@@Base+0x16ddc>
   30a34:	b	30980 <crc32@@Base+0x16f28>
   30a38:	ldr	r4, [sp, #16]
   30a3c:	mov	r3, r5
   30a40:	b	308fc <crc32@@Base+0x16ea4>
   30a44:	ldr	r4, [sp, #16]
   30a48:	mvn	r3, #15
   30a4c:	b	308fc <crc32@@Base+0x16ea4>
   30a50:	push	{r4, r5, r6, lr}
   30a54:	mov	r2, r1
   30a58:	mov	r5, r1
   30a5c:	mov	r1, #47	; 0x2f
   30a60:	mov	r6, r0
   30a64:	bl	126bc <memchr@plt>
   30a68:	mov	r2, r5
   30a6c:	mov	r1, #58	; 0x3a
   30a70:	mov	r4, r0
   30a74:	mov	r0, r6
   30a78:	bl	126bc <memchr@plt>
   30a7c:	cmp	r4, #0
   30a80:	cmpne	r0, #0
   30a84:	bne	30a94 <crc32@@Base+0x1703c>
   30a88:	cmp	r4, #0
   30a8c:	movne	r0, r4
   30a90:	pop	{r4, r5, r6, pc}
   30a94:	cmp	r0, r4
   30a98:	movcs	r0, r4
   30a9c:	pop	{r4, r5, r6, pc}
   30aa0:	push	{r4, r5, r6, lr}
   30aa4:	movw	r5, #61168	; 0xeef0
   30aa8:	movt	r5, #4
   30aac:	sub	sp, sp, #8
   30ab0:	mov	r6, r0
   30ab4:	mov	r4, r1
   30ab8:	ldr	r3, [r5]
   30abc:	str	r3, [sp, #4]
   30ac0:	mov	r2, sp
   30ac4:	mov	r1, r4
   30ac8:	mov	r0, r6
   30acc:	bl	2daa8 <crc32@@Base+0x14050>
   30ad0:	cmp	r0, #3
   30ad4:	beq	30b18 <crc32@@Base+0x170c0>
   30ad8:	cmp	r0, #9
   30adc:	bne	30b04 <crc32@@Base+0x170ac>
   30ae0:	ldr	r0, [sp]
   30ae4:	cmp	r0, #0
   30ae8:	mvnge	r0, #10
   30aec:	ldr	r2, [sp, #4]
   30af0:	ldr	r3, [r5]
   30af4:	cmp	r2, r3
   30af8:	bne	30b20 <crc32@@Base+0x170c8>
   30afc:	add	sp, sp, #8
   30b00:	pop	{r4, r5, r6, pc}
   30b04:	cmp	r0, #4
   30b08:	ldr	r4, [sp]
   30b0c:	beq	30ac0 <crc32@@Base+0x17068>
   30b10:	mvn	r0, #0
   30b14:	b	30aec <crc32@@Base+0x17094>
   30b18:	mov	r0, r4
   30b1c:	b	30aec <crc32@@Base+0x17094>
   30b20:	bl	124b8 <__stack_chk_fail@plt>
   30b24:	ldr	r2, [r0, #12]
   30b28:	push	{lr}		; (str lr, [sp, #-4]!)
   30b2c:	ubfx	lr, r2, #8, #8
   30b30:	lsr	r3, r2, #24
   30b34:	ubfx	ip, r2, #16, #8
   30b38:	orr	r3, r3, r2, lsl #24
   30b3c:	orr	r3, r3, lr, lsl #16
   30b40:	orr	r3, r3, ip, lsl #8
   30b44:	add	r1, r3, r1
   30b48:	add	r0, r0, r1
   30b4c:	pop	{pc}		; (ldr pc, [sp], #4)
   30b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30b54:	sub	sp, sp, #28
   30b58:	mov	r4, r1
   30b5c:	mov	r5, r0
   30b60:	str	r2, [sp]
   30b64:	str	r3, [sp, #12]
   30b68:	bl	2d92c <crc32@@Base+0x13ed4>
   30b6c:	cmp	r0, #0
   30b70:	bne	30ce0 <crc32@@Base+0x17288>
   30b74:	ldr	r3, [r5, #16]
   30b78:	mov	r9, #0
   30b7c:	ubfx	ip, r3, #8, #8
   30b80:	ubfx	r2, r3, #16, #8
   30b84:	lsr	r1, r3, #24
   30b88:	orr	r1, r1, r3, lsl #24
   30b8c:	orr	r1, r1, ip, lsl #16
   30b90:	orr	r1, r1, r2, lsl #8
   30b94:	add	r1, r1, r4, lsl #4
   30b98:	add	ip, r5, r1
   30b9c:	ldr	r1, [r5, r1]
   30ba0:	ldr	r4, [ip, #4]
   30ba4:	ubfx	r5, r1, #8, #8
   30ba8:	lsl	fp, r1, #24
   30bac:	lsr	lr, r4, #24
   30bb0:	lsl	r7, r5, #16
   30bb4:	orr	r8, r0, lr
   30bb8:	orr	fp, fp, r7
   30bbc:	ubfx	lr, r1, #16, #8
   30bc0:	orr	sl, r8, r0
   30bc4:	strd	sl, [sp, #16]
   30bc8:	uxtb	r8, r4
   30bcc:	ubfx	fp, r4, #8, #8
   30bd0:	lsr	r7, r1, #24
   30bd4:	ubfx	r1, r4, #16, #8
   30bd8:	ldrd	r4, [sp, #16]
   30bdc:	lsl	r3, lr, #8
   30be0:	orr	r4, r4, r0
   30be4:	orr	r5, r5, r3
   30be8:	orr	r3, r5, r7
   30bec:	orr	r2, r4, r0
   30bf0:	lsr	r5, r8, #8
   30bf4:	lsl	r4, r8, #24
   30bf8:	uxtb	r8, fp
   30bfc:	orr	sl, r2, r4
   30c00:	uxtb	r4, r1
   30c04:	orr	fp, r3, r5
   30c08:	lsl	r6, r8, #16
   30c0c:	lsr	r7, r8, #16
   30c10:	lsl	r2, r4, #8
   30c14:	orr	sl, sl, r6
   30c18:	orr	r6, sl, r2
   30c1c:	ldr	r2, [sp]
   30c20:	lsr	r3, r4, #24
   30c24:	orr	fp, fp, r7
   30c28:	orr	r7, fp, r3
   30c2c:	str	r0, [sp]
   30c30:	strd	r6, [r2]
   30c34:	ldr	r1, [ip, #8]
   30c38:	ldr	ip, [ip, #12]
   30c3c:	ubfx	lr, r1, #8, #8
   30c40:	ubfx	r6, r1, #16, #8
   30c44:	lsl	fp, r1, #24
   30c48:	ubfx	sl, ip, #8, #8
   30c4c:	lsl	r5, lr, #16
   30c50:	lsr	lr, ip, #24
   30c54:	orr	r8, r0, lr
   30c58:	lsl	r3, r6, #8
   30c5c:	orr	r7, fp, r5
   30c60:	orr	r6, r8, r0
   30c64:	orr	r5, r7, r3
   30c68:	uxtb	r8, ip
   30c6c:	orr	r4, r6, r0
   30c70:	ubfx	ip, ip, #16, #8
   30c74:	lsr	r1, r1, #24
   30c78:	str	r1, [sp, #4]
   30c7c:	mov	r6, r4
   30c80:	mov	r7, r5
   30c84:	lsr	r3, r8, #8
   30c88:	ldrd	r4, [sp]
   30c8c:	lsl	r2, r8, #24
   30c90:	uxtb	r8, ip
   30c94:	strd	r8, [sp]
   30c98:	uxtb	sl, sl
   30c9c:	ldr	r1, [sp]
   30ca0:	orr	r5, r5, r7
   30ca4:	orr	r9, r3, r5
   30ca8:	lsr	r7, sl, #16
   30cac:	orr	r3, r9, r7
   30cb0:	orr	r4, r4, r6
   30cb4:	lsr	r1, r1, #24
   30cb8:	orr	r8, r2, r4
   30cbc:	lsl	r6, sl, #16
   30cc0:	mov	r5, r1
   30cc4:	ldr	r1, [sp]
   30cc8:	orr	r5, r5, r3
   30ccc:	ldr	r3, [sp, #12]
   30cd0:	orr	r2, r8, r6
   30cd4:	lsl	r1, r1, #8
   30cd8:	orr	r4, r1, r2
   30cdc:	strd	r4, [r3]
   30ce0:	add	sp, sp, #28
   30ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30ce8:	ldr	r2, [r0, #16]
   30cec:	mov	r1, #0
   30cf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30cf4:	ubfx	lr, r2, #8, #8
   30cf8:	lsr	r3, r2, #24
   30cfc:	ubfx	ip, r2, #16, #8
   30d00:	orr	r3, r3, r2, lsl #24
   30d04:	sub	sp, sp, #12
   30d08:	orr	r3, r3, lr, lsl #16
   30d0c:	orr	r3, r3, ip, lsl #8
   30d10:	add	r0, r0, r3
   30d14:	b	30d1c <crc32@@Base+0x172c4>
   30d18:	add	r1, r1, #1
   30d1c:	ldr	ip, [r0, #8]
   30d20:	mov	r8, #0
   30d24:	ldr	r6, [r0, #12]
   30d28:	add	r0, r0, #16
   30d2c:	ubfx	lr, ip, #8, #8
   30d30:	ubfx	r4, ip, #16, #8
   30d34:	lsl	r3, ip, #24
   30d38:	str	r3, [sp, #4]
   30d3c:	mov	r3, #0
   30d40:	str	r3, [sp]
   30d44:	ldrd	r2, [sp]
   30d48:	lsl	fp, lr, #16
   30d4c:	lsr	lr, r6, #24
   30d50:	lsl	r9, r4, #8
   30d54:	mov	r5, r3
   30d58:	mov	r4, r2
   30d5c:	orr	r4, r4, lr
   30d60:	ubfx	lr, r6, #8, #8
   30d64:	orr	r2, r4, r2
   30d68:	orr	r3, r5, fp
   30d6c:	orr	r2, r2, r8
   30d70:	lsr	fp, ip, #24
   30d74:	uxtb	r8, r6
   30d78:	ubfx	ip, r6, #16, #8
   30d7c:	ldrd	r6, [sp]
   30d80:	orr	r3, r3, r9
   30d84:	lsr	r5, r8, #8
   30d88:	orr	r7, r3, fp
   30d8c:	lsl	r4, r8, #24
   30d90:	orr	r3, r7, r5
   30d94:	mov	sl, r6
   30d98:	orr	r6, r2, sl
   30d9c:	uxtb	sl, lr
   30da0:	orr	r2, r6, r4
   30da4:	uxtb	r6, ip
   30da8:	lsr	r9, sl, #16
   30dac:	lsl	r8, sl, #16
   30db0:	orr	r3, r3, r9
   30db4:	orr	r2, r2, r8
   30db8:	mov	r9, r3
   30dbc:	lsr	r3, r6, #24
   30dc0:	mov	r5, r3
   30dc4:	lsl	r3, r6, #8
   30dc8:	orr	r4, r3, r2
   30dcc:	orr	r5, r5, r9
   30dd0:	orrs	r3, r4, r5
   30dd4:	bne	30d18 <crc32@@Base+0x172c0>
   30dd8:	mov	r0, r1
   30ddc:	add	sp, sp, #12
   30de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30de4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   30de8:	movw	r6, #61168	; 0xeef0
   30dec:	movt	r6, #4
   30df0:	mov	r8, r2
   30df4:	sub	sp, sp, #8
   30df8:	mov	r4, r1
   30dfc:	ldr	r2, [r6]
   30e00:	mov	r7, r3
   30e04:	mov	r5, r0
   30e08:	str	r2, [sp, #4]
   30e0c:	bl	2d92c <crc32@@Base+0x13ed4>
   30e10:	cmp	r0, #0
   30e14:	bne	30eac <crc32@@Base+0x17454>
   30e18:	cmp	r4, #0
   30e1c:	str	r0, [sp]
   30e20:	blt	30ea8 <crc32@@Base+0x17450>
   30e24:	add	sl, r7, #1
   30e28:	mov	r1, r4
   30e2c:	mov	r2, sp
   30e30:	mov	r0, r5
   30e34:	bl	2dc88 <crc32@@Base+0x14230>
   30e38:	ldr	r3, [sp]
   30e3c:	cmp	r3, #0
   30e40:	cmpge	r0, #0
   30e44:	mov	r4, r0
   30e48:	blt	30ec4 <crc32@@Base+0x1746c>
   30e4c:	cmp	r3, #1
   30e50:	bne	30e28 <crc32@@Base+0x173d0>
   30e54:	mov	r2, sl
   30e58:	add	r1, r4, #4
   30e5c:	mov	r0, r5
   30e60:	bl	2d9f4 <crc32@@Base+0x13f9c>
   30e64:	subs	r9, r0, #0
   30e68:	beq	30e28 <crc32@@Base+0x173d0>
   30e6c:	mov	r2, r7
   30e70:	mov	r1, r8
   30e74:	bl	126ec <memcmp@plt>
   30e78:	cmp	r0, #0
   30e7c:	bne	30e28 <crc32@@Base+0x173d0>
   30e80:	ldrb	r9, [r9, r7]
   30e84:	cmp	r9, #0
   30e88:	beq	30ea8 <crc32@@Base+0x17450>
   30e8c:	mov	r2, r7
   30e90:	mov	r1, #64	; 0x40
   30e94:	mov	r0, r8
   30e98:	bl	126bc <memchr@plt>
   30e9c:	cmp	r9, #64	; 0x40
   30ea0:	cmpeq	r0, #0
   30ea4:	bne	30e28 <crc32@@Base+0x173d0>
   30ea8:	mov	r0, r4
   30eac:	ldr	r2, [sp, #4]
   30eb0:	ldr	r3, [r6]
   30eb4:	cmp	r2, r3
   30eb8:	bne	30ed0 <crc32@@Base+0x17478>
   30ebc:	add	sp, sp, #8
   30ec0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   30ec4:	cmp	r3, #0
   30ec8:	mvnlt	r4, #0
   30ecc:	b	30ea8 <crc32@@Base+0x17450>
   30ed0:	bl	124b8 <__stack_chk_fail@plt>
   30ed4:	push	{r4, r5, r6, lr}
   30ed8:	mov	r5, r0
   30edc:	mov	r0, r2
   30ee0:	mov	r4, r2
   30ee4:	mov	r6, r1
   30ee8:	bl	125e4 <strlen@plt>
   30eec:	mov	r2, r4
   30ef0:	mov	r1, r6
   30ef4:	mov	r3, r0
   30ef8:	mov	r0, r5
   30efc:	pop	{r4, r5, r6, lr}
   30f00:	b	30de4 <crc32@@Base+0x1738c>
   30f04:	push	{r4, r5, r6, r7, r8, lr}
   30f08:	mov	r4, r0
   30f0c:	mov	r7, r1
   30f10:	mov	r5, r2
   30f14:	ldr	r6, [r0, #8]
   30f18:	bl	2d92c <crc32@@Base+0x13ed4>
   30f1c:	cmp	r0, #0
   30f20:	beq	30f3c <crc32@@Base+0x174e4>
   30f24:	cmp	r5, #0
   30f28:	strne	r0, [r5]
   30f2c:	movne	r4, #0
   30f30:	moveq	r4, r5
   30f34:	mov	r0, r4
   30f38:	pop	{r4, r5, r6, r7, r8, pc}
   30f3c:	mov	r1, r7
   30f40:	mov	r0, r4
   30f44:	bl	2dc08 <crc32@@Base+0x141b0>
   30f48:	cmp	r0, #0
   30f4c:	blt	30f24 <crc32@@Base+0x174cc>
   30f50:	lsr	r3, r6, #24
   30f54:	ubfx	r2, r6, #8, #8
   30f58:	orr	r3, r3, r6, lsl #24
   30f5c:	ubfx	r6, r6, #16, #8
   30f60:	orr	r3, r3, r2, lsl #16
   30f64:	cmp	r5, #0
   30f68:	orr	r6, r3, r6, lsl #8
   30f6c:	add	r6, r6, r7
   30f70:	add	r4, r4, r6
   30f74:	add	r4, r4, #4
   30f78:	beq	30f34 <crc32@@Base+0x174dc>
   30f7c:	mov	r0, r4
   30f80:	bl	125e4 <strlen@plt>
   30f84:	str	r0, [r5]
   30f88:	mov	r0, r4
   30f8c:	pop	{r4, r5, r6, r7, r8, pc}
   30f90:	push	{r4, lr}
   30f94:	mov	r4, r0
   30f98:	bl	2dc08 <crc32@@Base+0x141b0>
   30f9c:	subs	r1, r0, #0
   30fa0:	poplt	{r4, pc}
   30fa4:	mov	r0, r4
   30fa8:	pop	{r4, lr}
   30fac:	b	30aa0 <crc32@@Base+0x17048>
   30fb0:	push	{r4, lr}
   30fb4:	mov	r4, r0
   30fb8:	bl	2dc48 <crc32@@Base+0x141f0>
   30fbc:	subs	r1, r0, #0
   30fc0:	poplt	{r4, pc}
   30fc4:	mov	r0, r4
   30fc8:	pop	{r4, lr}
   30fcc:	b	30aa0 <crc32@@Base+0x17048>
   30fd0:	push	{r4, r5, r6, lr}
   30fd4:	mov	r5, r2
   30fd8:	mov	r4, r0
   30fdc:	mov	r6, r1
   30fe0:	bl	2dc48 <crc32@@Base+0x141f0>
   30fe4:	cmp	r0, #0
   30fe8:	blt	3103c <crc32@@Base+0x175e4>
   30fec:	ldr	r3, [r4, #8]
   30ff0:	cmp	r5, #0
   30ff4:	ubfx	r1, r3, #8, #8
   30ff8:	ubfx	r2, r3, #16, #8
   30ffc:	lsr	r0, r3, #24
   31000:	orr	r0, r0, r3, lsl #24
   31004:	orr	r0, r0, r1, lsl #16
   31008:	orr	r0, r0, r2, lsl #8
   3100c:	add	r0, r0, r6
   31010:	add	r0, r4, r0
   31014:	popeq	{r4, r5, r6, pc}
   31018:	ldr	r2, [r0, #4]
   3101c:	ubfx	ip, r2, #8, #8
   31020:	ubfx	r1, r2, #16, #8
   31024:	lsr	r3, r2, #24
   31028:	orr	r3, r3, r2, lsl #24
   3102c:	orr	r3, r3, ip, lsl #16
   31030:	orr	r3, r3, r1, lsl #8
   31034:	str	r3, [r5]
   31038:	pop	{r4, r5, r6, pc}
   3103c:	cmp	r5, #0
   31040:	strne	r0, [r5]
   31044:	mov	r0, #0
   31048:	pop	{r4, r5, r6, pc}
   3104c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31050:	mov	sl, r2
   31054:	mov	r7, r3
   31058:	mov	r5, r0
   3105c:	ldr	r8, [sp, #40]	; 0x28
   31060:	bl	30f90 <crc32@@Base+0x17538>
   31064:	subs	r6, r0, #0
   31068:	blt	31118 <crc32@@Base+0x176c0>
   3106c:	add	r9, r7, #1
   31070:	b	31088 <crc32@@Base+0x17630>
   31074:	mov	r1, r6
   31078:	mov	r0, r5
   3107c:	bl	30fb0 <crc32@@Base+0x17558>
   31080:	subs	r6, r0, #0
   31084:	blt	31118 <crc32@@Base+0x176c0>
   31088:	mov	r1, r6
   3108c:	mov	r2, r8
   31090:	mov	r0, r5
   31094:	bl	30fd0 <crc32@@Base+0x17578>
   31098:	mov	r1, r9
   3109c:	subs	fp, r0, #0
   310a0:	beq	31114 <crc32@@Base+0x176bc>
   310a4:	ldr	r3, [fp, #8]
   310a8:	ldr	r2, [r5, #12]
   310ac:	ubfx	lr, r3, #8, #8
   310b0:	ubfx	r0, r3, #16, #8
   310b4:	lsr	r4, r3, #24
   310b8:	ubfx	ip, r2, #8, #8
   310bc:	orr	r4, r4, r3, lsl #24
   310c0:	lsr	r3, r2, #24
   310c4:	orr	r3, r3, r2, lsl #24
   310c8:	ubfx	r2, r2, #16, #8
   310cc:	orr	r4, r4, lr, lsl #16
   310d0:	orr	r3, r3, ip, lsl #16
   310d4:	orr	r4, r4, r0, lsl #8
   310d8:	orr	r3, r3, r2, lsl #8
   310dc:	add	r4, r4, r3
   310e0:	add	r4, r5, r4
   310e4:	mov	r0, r4
   310e8:	bl	12110 <strnlen@plt>
   310ec:	cmp	r0, r7
   310f0:	bne	31074 <crc32@@Base+0x1761c>
   310f4:	mov	r0, r4
   310f8:	mov	r2, r7
   310fc:	mov	r1, sl
   31100:	bl	126ec <memcmp@plt>
   31104:	cmp	r0, #0
   31108:	bne	31074 <crc32@@Base+0x1761c>
   3110c:	mov	r0, fp
   31110:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31114:	mvn	r6, #12
   31118:	cmp	r8, #0
   3111c:	strne	r6, [r8]
   31120:	movne	fp, #0
   31124:	moveq	fp, r8
   31128:	mov	r0, fp
   3112c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31130:	push	{r4, r5, r6, r7, lr}
   31134:	mov	r5, r0
   31138:	sub	sp, sp, #12
   3113c:	mov	r0, r2
   31140:	mov	r7, r3
   31144:	mov	r4, r2
   31148:	mov	r6, r1
   3114c:	bl	125e4 <strlen@plt>
   31150:	str	r7, [sp]
   31154:	mov	r2, r4
   31158:	mov	r1, r6
   3115c:	mov	r3, r0
   31160:	mov	r0, r5
   31164:	bl	3104c <crc32@@Base+0x175f4>
   31168:	add	sp, sp, #12
   3116c:	pop	{r4, r5, r6, r7, pc}
   31170:	push	{lr}		; (str lr, [sp, #-4]!)
   31174:	sub	sp, sp, #12
   31178:	ldr	ip, [sp, #16]
   3117c:	str	ip, [sp]
   31180:	bl	3104c <crc32@@Base+0x175f4>
   31184:	cmp	r0, #0
   31188:	addne	r0, r0, #12
   3118c:	add	sp, sp, #12
   31190:	pop	{pc}		; (ldr pc, [sp], #4)
   31194:	push	{r4, r5, r6, r7, r8, lr}
   31198:	mov	r4, r2
   3119c:	mov	r2, r3
   311a0:	mov	r5, r0
   311a4:	bl	30fd0 <crc32@@Base+0x17578>
   311a8:	cmp	r0, #0
   311ac:	popeq	{r4, r5, r6, r7, r8, pc}
   311b0:	cmp	r4, #0
   311b4:	beq	311fc <crc32@@Base+0x177a4>
   311b8:	ldr	ip, [r0, #8]
   311bc:	ldr	r1, [r5, #12]
   311c0:	ubfx	r7, ip, #8, #8
   311c4:	ubfx	lr, ip, #16, #8
   311c8:	ubfx	r6, r1, #8, #8
   311cc:	lsr	r2, ip, #24
   311d0:	lsr	r3, r1, #24
   311d4:	orr	r2, r2, ip, lsl #24
   311d8:	orr	r3, r3, r1, lsl #24
   311dc:	ubfx	r1, r1, #16, #8
   311e0:	orr	r2, r2, r7, lsl #16
   311e4:	orr	r3, r3, r6, lsl #16
   311e8:	orr	r2, r2, lr, lsl #8
   311ec:	orr	r3, r3, r1, lsl #8
   311f0:	add	r3, r3, r2
   311f4:	add	r3, r5, r3
   311f8:	str	r3, [r4]
   311fc:	add	r0, r0, #12
   31200:	pop	{r4, r5, r6, r7, r8, pc}
   31204:	push	{r4, r5, r6, r7, lr}
   31208:	mov	r5, r0
   3120c:	sub	sp, sp, #12
   31210:	mov	r0, r2
   31214:	mov	r7, r3
   31218:	mov	r4, r2
   3121c:	mov	r6, r1
   31220:	bl	125e4 <strlen@plt>
   31224:	str	r7, [sp]
   31228:	mov	r2, r4
   3122c:	mov	r1, r6
   31230:	mov	r3, r0
   31234:	mov	r0, r5
   31238:	bl	3104c <crc32@@Base+0x175f4>
   3123c:	cmp	r0, #0
   31240:	addne	r0, r0, #12
   31244:	add	sp, sp, #12
   31248:	pop	{r4, r5, r6, r7, pc}
   3124c:	push	{r4, r5, r6, lr}
   31250:	movw	r4, #61168	; 0xeef0
   31254:	movt	r4, #4
   31258:	sub	sp, sp, #8
   3125c:	movw	r2, #53120	; 0xcf80
   31260:	movt	r2, #3
   31264:	ldr	ip, [r4]
   31268:	mov	r3, sp
   3126c:	mov	r5, r0
   31270:	mov	r6, r1
   31274:	str	ip, [sp, #4]
   31278:	bl	31204 <crc32@@Base+0x177ac>
   3127c:	cmp	r0, #0
   31280:	beq	31290 <crc32@@Base+0x17838>
   31284:	ldr	r3, [sp]
   31288:	cmp	r3, #4
   3128c:	beq	312d8 <crc32@@Base+0x17880>
   31290:	mov	r3, sp
   31294:	mov	r1, r6
   31298:	mov	r0, r5
   3129c:	movw	r2, #53128	; 0xcf88
   312a0:	movt	r2, #3
   312a4:	bl	31204 <crc32@@Base+0x177ac>
   312a8:	cmp	r0, #0
   312ac:	beq	312c0 <crc32@@Base+0x17868>
   312b0:	ldr	r3, [sp]
   312b4:	cmp	r3, #4
   312b8:	movne	r0, #0
   312bc:	beq	312d8 <crc32@@Base+0x17880>
   312c0:	ldr	r2, [sp, #4]
   312c4:	ldr	r3, [r4]
   312c8:	cmp	r2, r3
   312cc:	bne	312f8 <crc32@@Base+0x178a0>
   312d0:	add	sp, sp, #8
   312d4:	pop	{r4, r5, r6, pc}
   312d8:	ldr	r3, [r0]
   312dc:	ubfx	r1, r3, #8, #8
   312e0:	ubfx	r2, r3, #16, #8
   312e4:	lsr	r0, r3, #24
   312e8:	orr	r0, r0, r3, lsl #24
   312ec:	orr	r0, r0, r1, lsl #16
   312f0:	orr	r0, r0, r2, lsl #8
   312f4:	b	312c0 <crc32@@Base+0x17868>
   312f8:	bl	124b8 <__stack_chk_fail@plt>
   312fc:	push	{r4, r5, r6, lr}
   31300:	mov	r2, #0
   31304:	mvn	r1, #0
   31308:	mov	r6, r0
   3130c:	bl	2dc88 <crc32@@Base+0x14230>
   31310:	cmn	r0, #1
   31314:	beq	31380 <crc32@@Base+0x17928>
   31318:	cmp	r0, #0
   3131c:	mov	r4, r0
   31320:	movge	r5, #0
   31324:	bge	31334 <crc32@@Base+0x178dc>
   31328:	b	31374 <crc32@@Base+0x1791c>
   3132c:	cmp	r4, #0
   31330:	blt	31374 <crc32@@Base+0x1791c>
   31334:	mov	r1, r4
   31338:	mov	r0, r6
   3133c:	bl	3124c <crc32@@Base+0x177f4>
   31340:	mov	r1, r4
   31344:	mov	r2, #0
   31348:	cmn	r0, #1
   3134c:	cmpne	r0, r5
   31350:	mov	r3, r0
   31354:	mov	r0, r6
   31358:	movhi	r5, r3
   3135c:	bl	2dc88 <crc32@@Base+0x14230>
   31360:	cmn	r0, #1
   31364:	mov	r4, r0
   31368:	bne	3132c <crc32@@Base+0x178d4>
   3136c:	mov	r0, r5
   31370:	pop	{r4, r5, r6, pc}
   31374:	mvn	r5, #0
   31378:	mov	r0, r5
   3137c:	pop	{r4, r5, r6, pc}
   31380:	mov	r5, #0
   31384:	b	3136c <crc32@@Base+0x17914>
   31388:	push	{r4, r5, r6, r7, r8, lr}
   3138c:	mov	r6, r0
   31390:	mov	r7, r1
   31394:	mvn	r4, #0
   31398:	mov	r5, #0
   3139c:	b	313ac <crc32@@Base+0x17954>
   313a0:	bl	3124c <crc32@@Base+0x177f4>
   313a4:	cmp	r5, r0
   313a8:	movcc	r5, r0
   313ac:	mov	r1, r4
   313b0:	mov	r2, #0
   313b4:	mov	r0, r6
   313b8:	bl	2dc88 <crc32@@Base+0x14230>
   313bc:	subs	r4, r0, #0
   313c0:	mov	r0, r6
   313c4:	mov	r1, r4
   313c8:	bge	313a0 <crc32@@Base+0x17948>
   313cc:	cmn	r4, #1
   313d0:	beq	313dc <crc32@@Base+0x17984>
   313d4:	mov	r0, r4
   313d8:	pop	{r4, r5, r6, r7, r8, pc}
   313dc:	cmn	r5, #2
   313e0:	beq	31404 <crc32@@Base+0x179ac>
   313e4:	cmp	r7, #0
   313e8:	moveq	r4, r7
   313ec:	beq	313d4 <crc32@@Base+0x1797c>
   313f0:	mov	r4, #0
   313f4:	add	r5, r5, #1
   313f8:	mov	r0, r4
   313fc:	str	r5, [r7]
   31400:	pop	{r4, r5, r6, r7, r8, pc}
   31404:	mvn	r4, #16
   31408:	b	313d4 <crc32@@Base+0x1797c>
   3140c:	push	{r4, r5, r6, lr}
   31410:	mov	r5, r1
   31414:	sub	sp, sp, #8
   31418:	movw	r1, #53252	; 0xd004
   3141c:	movt	r1, #3
   31420:	mov	r6, r2
   31424:	mov	r4, r0
   31428:	bl	31560 <crc32@@Base+0x17b08>
   3142c:	subs	r1, r0, #0
   31430:	blt	31460 <crc32@@Base+0x17a08>
   31434:	mov	ip, #0
   31438:	mov	r3, r6
   3143c:	mov	r2, r5
   31440:	mov	r0, r4
   31444:	str	ip, [sp]
   31448:	bl	3104c <crc32@@Base+0x175f4>
   3144c:	cmp	r0, #0
   31450:	beq	31460 <crc32@@Base+0x17a08>
   31454:	add	r0, r0, #12
   31458:	add	sp, sp, #8
   3145c:	pop	{r4, r5, r6, pc}
   31460:	mov	r0, #0
   31464:	add	sp, sp, #8
   31468:	pop	{r4, r5, r6, pc}
   3146c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   31470:	mov	r4, r1
   31474:	mov	r5, r2
   31478:	mov	r9, r0
   3147c:	bl	2d92c <crc32@@Base+0x13ed4>
   31480:	subs	r7, r0, #0
   31484:	bne	31550 <crc32@@Base+0x17af8>
   31488:	ldrb	r3, [r4]
   3148c:	add	r8, r4, r5
   31490:	cmp	r3, #47	; 0x2f
   31494:	beq	314dc <crc32@@Base+0x17a84>
   31498:	mov	r1, r5
   3149c:	mov	r0, r4
   314a0:	bl	30a50 <crc32@@Base+0x16ff8>
   314a4:	mov	r1, r4
   314a8:	cmp	r0, #0
   314ac:	movne	r5, r0
   314b0:	moveq	r5, r8
   314b4:	mov	r0, r9
   314b8:	sub	r2, r5, r4
   314bc:	bl	3140c <crc32@@Base+0x179b4>
   314c0:	subs	r1, r0, #0
   314c4:	beq	31558 <crc32@@Base+0x17b00>
   314c8:	mov	r0, r9
   314cc:	mov	r4, r5
   314d0:	bl	31560 <crc32@@Base+0x17b08>
   314d4:	ldrb	r3, [r5]
   314d8:	mov	r7, r0
   314dc:	cmp	r3, #0
   314e0:	cmpne	r4, r8
   314e4:	bcc	314f0 <crc32@@Base+0x17a98>
   314e8:	b	31550 <crc32@@Base+0x17af8>
   314ec:	ldrb	r3, [r4, #1]!
   314f0:	cmp	r3, #47	; 0x2f
   314f4:	beq	314ec <crc32@@Base+0x17a94>
   314f8:	cmp	r3, #58	; 0x3a
   314fc:	cmpne	r3, #0
   31500:	beq	31550 <crc32@@Base+0x17af8>
   31504:	sub	r6, r8, r4
   31508:	mov	r0, r4
   3150c:	mov	r1, r6
   31510:	bl	30a50 <crc32@@Base+0x16ff8>
   31514:	mov	r1, r7
   31518:	mov	r2, r4
   3151c:	subs	r5, r0, #0
   31520:	mov	r0, r9
   31524:	subne	r6, r5, r4
   31528:	moveq	r5, r8
   3152c:	mov	r3, r6
   31530:	bl	30de4 <crc32@@Base+0x1738c>
   31534:	subs	r7, r0, #0
   31538:	blt	31550 <crc32@@Base+0x17af8>
   3153c:	ldrb	r3, [r5]
   31540:	mov	r4, r5
   31544:	cmp	r3, #0
   31548:	cmpne	r4, r8
   3154c:	bcc	314f0 <crc32@@Base+0x17a98>
   31550:	mov	r0, r7
   31554:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31558:	mvn	r7, #4
   3155c:	b	31550 <crc32@@Base+0x17af8>
   31560:	push	{r4, r5, r6, lr}
   31564:	mov	r5, r0
   31568:	mov	r0, r1
   3156c:	mov	r4, r1
   31570:	bl	125e4 <strlen@plt>
   31574:	mov	r1, r4
   31578:	mov	r2, r0
   3157c:	mov	r0, r5
   31580:	pop	{r4, r5, r6, lr}
   31584:	b	3146c <crc32@@Base+0x17a14>
   31588:	push	{r4, r5, r6, lr}
   3158c:	mov	r5, r0
   31590:	mov	r0, r1
   31594:	mov	r4, r1
   31598:	bl	125e4 <strlen@plt>
   3159c:	mov	r1, r4
   315a0:	mov	r2, r0
   315a4:	mov	r0, r5
   315a8:	pop	{r4, r5, r6, lr}
   315ac:	b	3140c <crc32@@Base+0x179b4>
   315b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   315b4:	movw	sl, #61168	; 0xeef0
   315b8:	movt	sl, #4
   315bc:	mov	r6, r2
   315c0:	sub	sp, sp, #28
   315c4:	mov	r8, r1
   315c8:	ldr	r2, [sl]
   315cc:	mov	r4, r3
   315d0:	str	r3, [sp]
   315d4:	mov	r9, r0
   315d8:	str	r2, [sp, #20]
   315dc:	bl	2d92c <crc32@@Base+0x13ed4>
   315e0:	subs	fp, r0, #0
   315e4:	bne	316ec <crc32@@Base+0x17c94>
   315e8:	cmp	r4, #1
   315ec:	ble	31734 <crc32@@Base+0x17cdc>
   315f0:	cmp	r8, #0
   315f4:	str	fp, [sp, #12]
   315f8:	movge	r7, fp
   315fc:	movge	r0, fp
   31600:	movge	r4, fp
   31604:	movge	r5, fp
   31608:	blt	31728 <crc32@@Base+0x17cd0>
   3160c:	cmp	r0, r5
   31610:	ble	3167c <crc32@@Base+0x17c24>
   31614:	cmp	r7, r8
   31618:	beq	316d0 <crc32@@Base+0x17c78>
   3161c:	mov	r1, r7
   31620:	add	r2, sp, #12
   31624:	mov	r0, r9
   31628:	bl	2dc88 <crc32@@Base+0x14230>
   3162c:	cmp	r0, #0
   31630:	cmpge	r8, r0
   31634:	mov	r7, r0
   31638:	blt	31708 <crc32@@Base+0x17cb0>
   3163c:	ldr	r0, [sp, #12]
   31640:	cmp	r5, r0
   31644:	ble	3160c <crc32@@Base+0x17bb4>
   31648:	sub	r3, r4, #1
   3164c:	add	r2, r6, r3
   31650:	b	31658 <crc32@@Base+0x17c00>
   31654:	sub	r3, r3, #1
   31658:	ldrb	r1, [r2, #-1]!
   3165c:	mov	r4, r3
   31660:	cmp	r1, #47	; 0x2f
   31664:	bne	31654 <crc32@@Base+0x17bfc>
   31668:	sub	r5, r5, #1
   3166c:	cmp	r5, r0
   31670:	bne	31648 <crc32@@Base+0x17bf0>
   31674:	cmp	r0, r5
   31678:	bgt	31614 <crc32@@Base+0x17bbc>
   3167c:	mov	r1, r7
   31680:	add	r2, sp, #16
   31684:	mov	r0, r9
   31688:	bl	30f04 <crc32@@Base+0x174ac>
   3168c:	subs	r1, r0, #0
   31690:	beq	31720 <crc32@@Base+0x17cc8>
   31694:	ldr	r2, [sp, #16]
   31698:	ldr	r0, [sp]
   3169c:	add	r3, r2, r4
   316a0:	cmp	r3, r0
   316a4:	bge	31614 <crc32@@Base+0x17bbc>
   316a8:	add	r0, r6, r4
   316ac:	str	r3, [sp, #4]
   316b0:	add	r4, r3, #1
   316b4:	bl	125c0 <memcpy@plt>
   316b8:	ldr	r3, [sp, #4]
   316bc:	cmp	r7, r8
   316c0:	mov	r2, #47	; 0x2f
   316c4:	add	r5, r5, #1
   316c8:	strb	r2, [r6, r3]
   316cc:	bne	3161c <crc32@@Base+0x17bc4>
   316d0:	ldr	r3, [sp, #12]
   316d4:	cmp	r3, r5
   316d8:	bge	31734 <crc32@@Base+0x17cdc>
   316dc:	cmp	r4, #1
   316e0:	mov	r3, #0
   316e4:	subgt	r4, r4, #1
   316e8:	strb	r3, [r6, r4]
   316ec:	ldr	r2, [sp, #20]
   316f0:	mov	r0, fp
   316f4:	ldr	r3, [sl]
   316f8:	cmp	r2, r3
   316fc:	bne	31730 <crc32@@Base+0x17cd8>
   31700:	add	sp, sp, #28
   31704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31708:	cmn	r0, #1
   3170c:	bge	31728 <crc32@@Base+0x17cd0>
   31710:	cmn	r0, #4
   31714:	movne	fp, r0
   31718:	mvneq	fp, #10
   3171c:	b	316ec <crc32@@Base+0x17c94>
   31720:	ldr	fp, [sp, #16]
   31724:	b	316ec <crc32@@Base+0x17c94>
   31728:	mvn	fp, #3
   3172c:	b	316ec <crc32@@Base+0x17c94>
   31730:	bl	124b8 <__stack_chk_fail@plt>
   31734:	mvn	fp, #2
   31738:	b	316ec <crc32@@Base+0x17c94>
   3173c:	push	{r4, r5, r6, r7, r8, r9, lr}
   31740:	movw	r7, #61168	; 0xeef0
   31744:	movt	r7, #4
   31748:	mov	r6, r2
   3174c:	sub	sp, sp, #12
   31750:	mov	r4, r1
   31754:	ldr	r2, [r7]
   31758:	mov	r9, r3
   3175c:	mov	r8, r0
   31760:	str	r2, [sp, #4]
   31764:	bl	2d92c <crc32@@Base+0x13ed4>
   31768:	cmp	r0, #0
   3176c:	bne	31790 <crc32@@Base+0x17d38>
   31770:	cmp	r6, #0
   31774:	blt	31804 <crc32@@Base+0x17dac>
   31778:	cmp	r4, #0
   3177c:	str	r0, [sp]
   31780:	movge	r3, r0
   31784:	mvnge	r5, #12
   31788:	bge	317c8 <crc32@@Base+0x17d70>
   3178c:	mvn	r0, #3
   31790:	ldr	r2, [sp, #4]
   31794:	ldr	r3, [r7]
   31798:	cmp	r2, r3
   3179c:	bne	3180c <crc32@@Base+0x17db4>
   317a0:	add	sp, sp, #12
   317a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   317a8:	mov	r1, r0
   317ac:	mov	r2, sp
   317b0:	mov	r0, r8
   317b4:	bl	2dc88 <crc32@@Base+0x14230>
   317b8:	cmp	r0, #0
   317bc:	cmpge	r4, r0
   317c0:	blt	317f0 <crc32@@Base+0x17d98>
   317c4:	ldr	r3, [sp]
   317c8:	cmp	r6, r3
   317cc:	moveq	r5, r0
   317d0:	cmp	r4, r0
   317d4:	bne	317a8 <crc32@@Base+0x17d50>
   317d8:	cmp	r9, #0
   317dc:	strne	r3, [r9]
   317e0:	cmp	r6, r3
   317e4:	movle	r0, r5
   317e8:	mvngt	r0, #0
   317ec:	b	31790 <crc32@@Base+0x17d38>
   317f0:	cmn	r0, #1
   317f4:	bge	3178c <crc32@@Base+0x17d34>
   317f8:	cmn	r0, #4
   317fc:	mvneq	r0, #10
   31800:	b	31790 <crc32@@Base+0x17d38>
   31804:	mvn	r0, #0
   31808:	b	31790 <crc32@@Base+0x17d38>
   3180c:	bl	124b8 <__stack_chk_fail@plt>
   31810:	push	{r4, lr}
   31814:	movw	r4, #61168	; 0xeef0
   31818:	movt	r4, #4
   3181c:	sub	sp, sp, #8
   31820:	mov	r2, #0
   31824:	ldr	ip, [r4]
   31828:	mov	r3, sp
   3182c:	str	ip, [sp, #4]
   31830:	bl	3173c <crc32@@Base+0x17ce4>
   31834:	cmp	r0, #0
   31838:	ldreq	r0, [sp]
   3183c:	beq	31844 <crc32@@Base+0x17dec>
   31840:	mvnge	r0, #12
   31844:	ldr	r2, [sp, #4]
   31848:	ldr	r3, [r4]
   3184c:	cmp	r2, r3
   31850:	bne	3185c <crc32@@Base+0x17e04>
   31854:	add	sp, sp, #8
   31858:	pop	{r4, pc}
   3185c:	bl	124b8 <__stack_chk_fail@plt>
   31860:	push	{r4, r5, r6, lr}
   31864:	movw	r4, #61168	; 0xeef0
   31868:	movt	r4, #4
   3186c:	sub	sp, sp, #8
   31870:	mov	r2, #0
   31874:	mov	r5, r0
   31878:	ldr	ip, [r4]
   3187c:	mov	r3, sp
   31880:	mov	r6, r1
   31884:	str	ip, [sp, #4]
   31888:	bl	3173c <crc32@@Base+0x17ce4>
   3188c:	subs	r2, r0, #0
   31890:	beq	318b4 <crc32@@Base+0x17e5c>
   31894:	mvnge	r2, #12
   31898:	ldr	r1, [sp, #4]
   3189c:	mov	r0, r2
   318a0:	ldr	r3, [r4]
   318a4:	cmp	r1, r3
   318a8:	bne	318dc <crc32@@Base+0x17e84>
   318ac:	add	sp, sp, #8
   318b0:	pop	{r4, r5, r6, pc}
   318b4:	ldr	r2, [sp]
   318b8:	cmp	r2, #0
   318bc:	blt	31898 <crc32@@Base+0x17e40>
   318c0:	mov	r3, r0
   318c4:	sub	r2, r2, #1
   318c8:	mov	r1, r6
   318cc:	mov	r0, r5
   318d0:	bl	3173c <crc32@@Base+0x17ce4>
   318d4:	mov	r2, r0
   318d8:	b	31898 <crc32@@Base+0x17e40>
   318dc:	bl	124b8 <__stack_chk_fail@plt>
   318e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   318e4:	movw	r6, #61168	; 0xeef0
   318e8:	movt	r6, #4
   318ec:	mov	r8, r2
   318f0:	sub	sp, sp, #8
   318f4:	mov	sl, r1
   318f8:	ldr	r2, [r6]
   318fc:	mov	r9, r3
   31900:	mov	r5, r0
   31904:	ldr	r7, [sp, #40]	; 0x28
   31908:	str	r2, [sp, #4]
   3190c:	bl	2d92c <crc32@@Base+0x13ed4>
   31910:	subs	r4, r0, #0
   31914:	beq	31934 <crc32@@Base+0x17edc>
   31918:	ldr	r2, [sp, #4]
   3191c:	mov	r0, r4
   31920:	ldr	r3, [r6]
   31924:	cmp	r2, r3
   31928:	bne	319a8 <crc32@@Base+0x17f50>
   3192c:	add	sp, sp, #8
   31930:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31934:	mov	r2, r4
   31938:	mov	r1, sl
   3193c:	mov	r0, r5
   31940:	bl	2dc88 <crc32@@Base+0x14230>
   31944:	subs	r4, r0, #0
   31948:	bge	31968 <crc32@@Base+0x17f10>
   3194c:	b	31918 <crc32@@Base+0x17ec0>
   31950:	mov	r1, r4
   31954:	mov	r2, #0
   31958:	mov	r0, r5
   3195c:	bl	2dc88 <crc32@@Base+0x14230>
   31960:	subs	r4, r0, #0
   31964:	blt	31918 <crc32@@Base+0x17ec0>
   31968:	mov	r3, sp
   3196c:	mov	r2, r8
   31970:	mov	r1, r4
   31974:	mov	r0, r5
   31978:	bl	31204 <crc32@@Base+0x177ac>
   3197c:	cmp	r0, #0
   31980:	beq	31950 <crc32@@Base+0x17ef8>
   31984:	ldr	r3, [sp]
   31988:	cmp	r3, r7
   3198c:	bne	31950 <crc32@@Base+0x17ef8>
   31990:	mov	r2, r7
   31994:	mov	r1, r9
   31998:	bl	126ec <memcmp@plt>
   3199c:	cmp	r0, #0
   319a0:	bne	31950 <crc32@@Base+0x17ef8>
   319a4:	b	31918 <crc32@@Base+0x17ec0>
   319a8:	bl	124b8 <__stack_chk_fail@plt>
   319ac:	sub	r3, r1, #1
   319b0:	cmn	r3, #3
   319b4:	push	{r4, r5, r6, lr}
   319b8:	bhi	31a1c <crc32@@Base+0x17fc4>
   319bc:	mov	r5, r0
   319c0:	mov	r6, r1
   319c4:	bl	2d92c <crc32@@Base+0x13ed4>
   319c8:	subs	r4, r0, #0
   319cc:	beq	319d8 <crc32@@Base+0x17f80>
   319d0:	mov	r0, r4
   319d4:	pop	{r4, r5, r6, pc}
   319d8:	mov	r2, r4
   319dc:	mvn	r1, #0
   319e0:	mov	r0, r5
   319e4:	b	31a08 <crc32@@Base+0x17fb0>
   319e8:	mov	r1, r4
   319ec:	mov	r0, r5
   319f0:	bl	3124c <crc32@@Base+0x177f4>
   319f4:	mov	r1, r4
   319f8:	mov	r2, #0
   319fc:	cmp	r6, r0
   31a00:	mov	r0, r5
   31a04:	beq	319d0 <crc32@@Base+0x17f78>
   31a08:	bl	2dc88 <crc32@@Base+0x14230>
   31a0c:	subs	r4, r0, #0
   31a10:	bge	319e8 <crc32@@Base+0x17f90>
   31a14:	mov	r0, r4
   31a18:	pop	{r4, r5, r6, pc}
   31a1c:	mvn	r4, #5
   31a20:	b	319d0 <crc32@@Base+0x17f78>
   31a24:	push	{r4, r5, r6, r7, r8, lr}
   31a28:	mov	r4, r0
   31a2c:	mov	r0, r2
   31a30:	mov	r5, r1
   31a34:	mov	r7, r2
   31a38:	bl	125e4 <strlen@plt>
   31a3c:	cmp	r0, r5
   31a40:	bgt	31aa0 <crc32@@Base+0x18048>
   31a44:	mov	r6, r0
   31a48:	add	r8, r0, #1
   31a4c:	b	31a74 <crc32@@Base+0x1801c>
   31a50:	bl	126bc <memchr@plt>
   31a54:	cmp	r0, #0
   31a58:	sub	r3, r0, r4
   31a5c:	add	r4, r0, #1
   31a60:	add	r3, r3, #1
   31a64:	popeq	{r4, r5, r6, r7, r8, pc}
   31a68:	sub	r5, r5, r3
   31a6c:	cmp	r6, r5
   31a70:	bgt	31aa0 <crc32@@Base+0x18048>
   31a74:	mov	r2, r8
   31a78:	mov	r1, r4
   31a7c:	mov	r0, r7
   31a80:	bl	126ec <memcmp@plt>
   31a84:	mov	r1, #0
   31a88:	mov	r2, r5
   31a8c:	cmp	r0, r1
   31a90:	mov	r0, r4
   31a94:	bne	31a50 <crc32@@Base+0x17ff8>
   31a98:	mov	r0, #1
   31a9c:	pop	{r4, r5, r6, r7, r8, pc}
   31aa0:	mov	r0, #0
   31aa4:	pop	{r4, r5, r6, r7, r8, pc}
   31aa8:	push	{r4, r5, r6, r7, lr}
   31aac:	movw	r7, #61168	; 0xeef0
   31ab0:	movt	r7, #4
   31ab4:	sub	sp, sp, #12
   31ab8:	ldr	ip, [r7]
   31abc:	mov	r3, sp
   31ac0:	str	ip, [sp, #4]
   31ac4:	bl	31204 <crc32@@Base+0x177ac>
   31ac8:	subs	r4, r0, #0
   31acc:	ldreq	r6, [sp]
   31ad0:	beq	31b18 <crc32@@Base+0x180c0>
   31ad4:	ldr	r5, [sp]
   31ad8:	mov	r6, #0
   31adc:	add	r5, r4, r5
   31ae0:	cmp	r4, r5
   31ae4:	bcc	31af4 <crc32@@Base+0x1809c>
   31ae8:	b	31b18 <crc32@@Base+0x180c0>
   31aec:	add	r6, r6, #1
   31af0:	bcs	31b18 <crc32@@Base+0x180c0>
   31af4:	sub	r1, r5, r4
   31af8:	mov	r0, r4
   31afc:	bl	12110 <strnlen@plt>
   31b00:	add	r0, r0, #1
   31b04:	str	r0, [sp]
   31b08:	add	r4, r4, r0
   31b0c:	cmp	r4, r5
   31b10:	bls	31aec <crc32@@Base+0x18094>
   31b14:	mvn	r6, #14
   31b18:	ldr	r2, [sp, #4]
   31b1c:	mov	r0, r6
   31b20:	ldr	r3, [r7]
   31b24:	cmp	r2, r3
   31b28:	bne	31b34 <crc32@@Base+0x180dc>
   31b2c:	add	sp, sp, #12
   31b30:	pop	{r4, r5, r6, r7, pc}
   31b34:	bl	124b8 <__stack_chk_fail@plt>
   31b38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   31b3c:	movw	r8, #61168	; 0xeef0
   31b40:	movt	r8, #4
   31b44:	sub	sp, sp, #8
   31b48:	mov	r9, r3
   31b4c:	ldr	ip, [r8]
   31b50:	mov	r3, sp
   31b54:	str	ip, [sp, #4]
   31b58:	bl	31204 <crc32@@Base+0x177ac>
   31b5c:	subs	r4, r0, #0
   31b60:	ldreq	r7, [sp]
   31b64:	beq	31bdc <crc32@@Base+0x18184>
   31b68:	mov	r0, r9
   31b6c:	bl	125e4 <strlen@plt>
   31b70:	ldr	r5, [sp]
   31b74:	add	r5, r4, r5
   31b78:	cmp	r4, r5
   31b7c:	add	sl, r0, #1
   31b80:	bcs	31bf8 <crc32@@Base+0x181a0>
   31b84:	mov	r7, #0
   31b88:	b	31b9c <crc32@@Base+0x18144>
   31b8c:	cmp	r6, r5
   31b90:	mov	r4, r6
   31b94:	add	r7, r7, #1
   31b98:	bcs	31bf8 <crc32@@Base+0x181a0>
   31b9c:	sub	r1, r5, r4
   31ba0:	mov	r0, r4
   31ba4:	bl	12110 <strnlen@plt>
   31ba8:	add	r0, r0, #1
   31bac:	str	r0, [sp]
   31bb0:	add	r6, r4, r0
   31bb4:	cmp	r6, r5
   31bb8:	bhi	31c00 <crc32@@Base+0x181a8>
   31bbc:	cmp	r0, sl
   31bc0:	bne	31b8c <crc32@@Base+0x18134>
   31bc4:	mov	r0, r4
   31bc8:	mov	r2, sl
   31bcc:	mov	r1, r9
   31bd0:	bl	126ec <memcmp@plt>
   31bd4:	cmp	r0, #0
   31bd8:	bne	31b8c <crc32@@Base+0x18134>
   31bdc:	ldr	r2, [sp, #4]
   31be0:	mov	r0, r7
   31be4:	ldr	r3, [r8]
   31be8:	cmp	r2, r3
   31bec:	bne	31c08 <crc32@@Base+0x181b0>
   31bf0:	add	sp, sp, #8
   31bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31bf8:	mvn	r7, #0
   31bfc:	b	31bdc <crc32@@Base+0x18184>
   31c00:	mvn	r7, #14
   31c04:	b	31bdc <crc32@@Base+0x18184>
   31c08:	bl	124b8 <__stack_chk_fail@plt>
   31c0c:	push	{r4, r5, r6, r7, r8, lr}
   31c10:	movw	r7, #61168	; 0xeef0
   31c14:	movt	r7, #4
   31c18:	sub	sp, sp, #8
   31c1c:	mov	r6, r3
   31c20:	ldr	ip, [r7]
   31c24:	mov	r3, sp
   31c28:	ldr	r8, [sp, #32]
   31c2c:	str	ip, [sp, #4]
   31c30:	bl	31204 <crc32@@Base+0x177ac>
   31c34:	subs	r4, r0, #0
   31c38:	beq	31ca0 <crc32@@Base+0x18248>
   31c3c:	ldr	r5, [sp]
   31c40:	add	r5, r4, r5
   31c44:	cmp	r4, r5
   31c48:	bcc	31c68 <crc32@@Base+0x18210>
   31c4c:	b	31cd0 <crc32@@Base+0x18278>
   31c50:	cmp	r6, #0
   31c54:	beq	31ce8 <crc32@@Base+0x18290>
   31c58:	cmp	r3, r5
   31c5c:	mov	r4, r3
   31c60:	sub	r6, r6, #1
   31c64:	bcs	31cd0 <crc32@@Base+0x18278>
   31c68:	sub	r1, r5, r4
   31c6c:	mov	r0, r4
   31c70:	bl	12110 <strnlen@plt>
   31c74:	add	r3, r0, #1
   31c78:	str	r3, [sp]
   31c7c:	add	r3, r4, r3
   31c80:	cmp	r3, r5
   31c84:	bls	31c50 <crc32@@Base+0x181f8>
   31c88:	cmp	r8, #0
   31c8c:	beq	31cb0 <crc32@@Base+0x18258>
   31c90:	mvn	r3, #14
   31c94:	mov	r4, #0
   31c98:	str	r3, [r8]
   31c9c:	b	31cb4 <crc32@@Base+0x1825c>
   31ca0:	cmp	r8, #0
   31ca4:	ldrne	r3, [sp]
   31ca8:	strne	r3, [r8]
   31cac:	bne	31cb4 <crc32@@Base+0x1825c>
   31cb0:	mov	r4, #0
   31cb4:	ldr	r2, [sp, #4]
   31cb8:	mov	r0, r4
   31cbc:	ldr	r3, [r7]
   31cc0:	cmp	r2, r3
   31cc4:	bne	31cf4 <crc32@@Base+0x1829c>
   31cc8:	add	sp, sp, #8
   31ccc:	pop	{r4, r5, r6, r7, r8, pc}
   31cd0:	cmp	r8, #0
   31cd4:	beq	31cb0 <crc32@@Base+0x18258>
   31cd8:	mvn	r3, #0
   31cdc:	mov	r4, #0
   31ce0:	str	r3, [r8]
   31ce4:	b	31cb4 <crc32@@Base+0x1825c>
   31ce8:	cmp	r8, #0
   31cec:	strne	r0, [r8]
   31cf0:	b	31cb4 <crc32@@Base+0x1825c>
   31cf4:	bl	124b8 <__stack_chk_fail@plt>
   31cf8:	push	{r4, r5, lr}
   31cfc:	movw	r4, #61168	; 0xeef0
   31d00:	movt	r4, #4
   31d04:	sub	sp, sp, #12
   31d08:	mov	r5, r2
   31d0c:	movw	r2, #31484	; 0x7afc
   31d10:	ldr	ip, [r4]
   31d14:	mov	r3, sp
   31d18:	movt	r2, #3
   31d1c:	str	ip, [sp, #4]
   31d20:	bl	31204 <crc32@@Base+0x177ac>
   31d24:	cmp	r0, #0
   31d28:	ldreq	r0, [sp]
   31d2c:	beq	31d44 <crc32@@Base+0x182ec>
   31d30:	mov	r2, r5
   31d34:	ldr	r1, [sp]
   31d38:	bl	31a24 <crc32@@Base+0x17fcc>
   31d3c:	clz	r0, r0
   31d40:	lsr	r0, r0, #5
   31d44:	ldr	r2, [sp, #4]
   31d48:	ldr	r3, [r4]
   31d4c:	cmp	r2, r3
   31d50:	bne	31d5c <crc32@@Base+0x18304>
   31d54:	add	sp, sp, #12
   31d58:	pop	{r4, r5, pc}
   31d5c:	bl	124b8 <__stack_chk_fail@plt>
   31d60:	push	{r4, r5, r6, lr}
   31d64:	mov	r4, r1
   31d68:	mov	r6, r2
   31d6c:	mov	r5, r0
   31d70:	bl	2d92c <crc32@@Base+0x13ed4>
   31d74:	subs	r3, r0, #0
   31d78:	beq	31d84 <crc32@@Base+0x1832c>
   31d7c:	mov	r0, r3
   31d80:	pop	{r4, r5, r6, pc}
   31d84:	mov	r2, r3
   31d88:	mov	r1, r4
   31d8c:	mov	r0, r5
   31d90:	b	31dc4 <crc32@@Base+0x1836c>
   31d94:	mov	r2, r6
   31d98:	mov	r1, r4
   31d9c:	mov	r0, r5
   31da0:	bl	31cf8 <crc32@@Base+0x182a0>
   31da4:	mov	r1, r4
   31da8:	mov	r2, #0
   31dac:	mov	r3, r0
   31db0:	cmn	r3, #1
   31db4:	mov	r0, r5
   31db8:	blt	31d7c <crc32@@Base+0x18324>
   31dbc:	cmp	r3, r2
   31dc0:	beq	31dd0 <crc32@@Base+0x18378>
   31dc4:	bl	2dc88 <crc32@@Base+0x14230>
   31dc8:	subs	r4, r0, #0
   31dcc:	bge	31d94 <crc32@@Base+0x1833c>
   31dd0:	mov	r3, r4
   31dd4:	mov	r0, r3
   31dd8:	pop	{r4, r5, r6, pc}
   31ddc:	ldr	r3, [r0, #384]	; 0x180
   31de0:	ldr	ip, [r0, #388]	; 0x184
   31de4:	cmp	r3, #0
   31de8:	push	{r4, r5, lr}
   31dec:	subne	lr, ip, #-536870911	; 0xe0000001
   31df0:	ldr	r4, [r0, #400]	; 0x190
   31df4:	addne	r3, r3, lr, lsl #3
   31df8:	ldr	lr, [r0, #396]	; 0x18c
   31dfc:	cmp	r4, #0
   31e00:	beq	31e0c <crc32@@Base+0x183b4>
   31e04:	cmp	ip, #0
   31e08:	bne	31e34 <crc32@@Base+0x183dc>
   31e0c:	cmp	lr, ip
   31e10:	add	ip, ip, #1
   31e14:	str	ip, [r0, #388]	; 0x184
   31e18:	ble	31e74 <crc32@@Base+0x1841c>
   31e1c:	cmp	r3, #0
   31e20:	beq	31e7c <crc32@@Base+0x18424>
   31e24:	str	r1, [r3, #8]
   31e28:	mov	r0, #0
   31e2c:	str	r2, [r3, #12]
   31e30:	pop	{r4, r5, pc}
   31e34:	cmp	lr, ip
   31e38:	movlt	r4, #0
   31e3c:	movge	r4, #1
   31e40:	cmp	r3, #0
   31e44:	moveq	r4, #0
   31e48:	cmp	r4, #0
   31e4c:	beq	31e0c <crc32@@Base+0x183b4>
   31e50:	ldr	r5, [r3]
   31e54:	ldr	r4, [r3, #4]
   31e58:	add	r4, r5, r4
   31e5c:	cmp	r4, r1
   31e60:	bge	31e84 <crc32@@Base+0x1842c>
   31e64:	cmp	lr, ip
   31e68:	add	ip, ip, #1
   31e6c:	str	ip, [r0, #388]	; 0x184
   31e70:	bgt	31e24 <crc32@@Base+0x183cc>
   31e74:	mvn	r0, #0
   31e78:	pop	{r4, r5, pc}
   31e7c:	mov	r0, r3
   31e80:	pop	{r4, r5, pc}
   31e84:	add	r2, r1, r2
   31e88:	mov	r0, #0
   31e8c:	sub	r5, r2, r5
   31e90:	str	r5, [r3, #4]
   31e94:	pop	{r4, r5, pc}
   31e98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31e9c:	movw	ip, #61168	; 0xeef0
   31ea0:	sub	sp, sp, #204	; 0xcc
   31ea4:	movt	ip, #4
   31ea8:	mov	r5, r0
   31eac:	mvn	r6, #0
   31eb0:	str	ip, [sp, #52]	; 0x34
   31eb4:	add	r4, sp, #200	; 0xc8
   31eb8:	ldr	ip, [ip]
   31ebc:	str	r3, [sp, #44]	; 0x2c
   31ec0:	ldr	r3, [sp, #244]	; 0xf4
   31ec4:	str	r0, [sp]
   31ec8:	add	r0, sp, #68	; 0x44
   31ecc:	str	r1, [sp, #48]	; 0x30
   31ed0:	mov	r1, #0
   31ed4:	str	r2, [sp, #32]
   31ed8:	mov	r2, #128	; 0x80
   31edc:	ldr	r8, [sp, #252]	; 0xfc
   31ee0:	str	r3, [sp, #28]
   31ee4:	str	r6, [sp, #20]
   31ee8:	str	ip, [sp, #196]	; 0xc4
   31eec:	bl	12308 <memset@plt>
   31ef0:	ldr	r2, [r5, #8]
   31ef4:	mov	r1, #0
   31ef8:	mov	r5, r1
   31efc:	str	r1, [r4, #-140]!	; 0xffffff74
   31f00:	ubfx	r0, r2, #8, #8
   31f04:	strb	r1, [r8]
   31f08:	lsr	r3, r2, #24
   31f0c:	ubfx	r1, r2, #16, #8
   31f10:	orr	r3, r3, r2, lsl #24
   31f14:	str	r4, [sp, #8]
   31f18:	orr	r3, r3, r0, lsl #16
   31f1c:	mov	r4, r5
   31f20:	orr	r3, r3, r1, lsl #8
   31f24:	str	r5, [sp, #4]
   31f28:	str	r3, [sp, #24]
   31f2c:	str	r8, [sp, #16]
   31f30:	ldr	r2, [sp, #8]
   31f34:	mov	r1, r5
   31f38:	ldr	r0, [sp]
   31f3c:	bl	2daa8 <crc32@@Base+0x14050>
   31f40:	ldr	r3, [sp, #60]	; 0x3c
   31f44:	mov	sl, r3
   31f48:	sub	r2, r0, #1
   31f4c:	mov	r7, r0
   31f50:	cmp	r2, #8
   31f54:	ldrls	pc, [pc, r2, lsl #2]
   31f58:	b	32110 <crc32@@Base+0x186b8>
   31f5c:	ldrdeq	r2, [r3], -r4
   31f60:	andeq	r2, r3, r8, asr r1
   31f64:	andeq	r2, r3, r4, rrx
   31f68:	andeq	r2, r3, r8, asr #32
   31f6c:	andeq	r2, r3, r0, lsl r1
   31f70:	andeq	r2, r3, r0, lsl r1
   31f74:	andeq	r2, r3, r0, lsl r1
   31f78:	andeq	r2, r3, r0, lsl r1
   31f7c:	andeq	r1, r3, r0, lsl #31
   31f80:	mov	fp, #1
   31f84:	str	fp, [sp, #12]
   31f88:	cmn	r6, #1
   31f8c:	movne	r2, #0
   31f90:	moveq	r2, #1
   31f94:	tst	fp, r2
   31f98:	beq	322c4 <crc32@@Base+0x1886c>
   31f9c:	ldr	r2, [sp, #248]	; 0xf8
   31fa0:	cmp	r4, r2
   31fa4:	movgt	r2, #0
   31fa8:	movle	r2, #1
   31fac:	cmp	r4, #0
   31fb0:	moveq	r2, #0
   31fb4:	cmp	r2, #0
   31fb8:	beq	31fe4 <crc32@@Base+0x1858c>
   31fbc:	sub	r2, r4, #-536870911	; 0xe0000001
   31fc0:	ldr	r0, [sp, #28]
   31fc4:	add	r1, r0, r2, lsl #3
   31fc8:	ldr	r2, [r0, r2, lsl #3]
   31fcc:	ldr	r1, [r1, #4]
   31fd0:	add	r2, r2, r1
   31fd4:	ldr	r1, [sp, #24]
   31fd8:	sub	r2, r2, r1
   31fdc:	cmp	r2, r5
   31fe0:	beq	322d4 <crc32@@Base+0x1887c>
   31fe4:	mov	r6, r5
   31fe8:	cmp	r7, #9
   31fec:	mov	r5, r3
   31ff0:	bne	31f30 <crc32@@Base+0x184d8>
   31ff4:	ldr	lr, [sp]
   31ff8:	ldr	r1, [lr, #36]	; 0x24
   31ffc:	ubfx	ip, r1, #8, #8
   32000:	ubfx	r0, r1, #16, #8
   32004:	lsr	r2, r1, #24
   32008:	orr	r2, r2, r1, lsl #24
   3200c:	orr	r2, r2, ip, lsl #16
   32010:	orr	r2, r2, r0, lsl #8
   32014:	cmp	r3, r2
   32018:	bne	323bc <crc32@@Base+0x18964>
   3201c:	ldr	r2, [sp, #248]	; 0xf8
   32020:	cmp	r4, r2
   32024:	blt	32350 <crc32@@Base+0x188f8>
   32028:	add	r0, r4, #1
   3202c:	ldr	r3, [sp, #52]	; 0x34
   32030:	ldr	r2, [sp, #196]	; 0xc4
   32034:	ldr	r3, [r3]
   32038:	cmp	r2, r3
   3203c:	bne	323c4 <crc32@@Base+0x1896c>
   32040:	add	sp, sp, #204	; 0xcc
   32044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32048:	ldr	r2, [sp, #4]
   3204c:	mov	sl, r5
   32050:	cmp	r2, #1
   32054:	movle	fp, #0
   32058:	movgt	fp, #1
   3205c:	str	fp, [sp, #12]
   32060:	b	31f88 <crc32@@Base+0x18530>
   32064:	ldr	r9, [sp]
   32068:	mov	r2, #0
   3206c:	ldr	r3, [sp, #4]
   32070:	mov	r1, r5
   32074:	cmp	r3, #1
   32078:	mov	r0, r9
   3207c:	movle	fp, #0
   32080:	movgt	fp, #1
   32084:	bl	30fd0 <crc32@@Base+0x17578>
   32088:	str	fp, [sp, #12]
   3208c:	ldr	r1, [r0, #8]
   32090:	mov	r0, r9
   32094:	ubfx	r2, r1, #8, #8
   32098:	lsr	r3, r1, #24
   3209c:	orr	r3, r3, r1, lsl #24
   320a0:	ubfx	r1, r1, #16, #8
   320a4:	orr	r3, r3, r2, lsl #16
   320a8:	orr	r1, r3, r1, lsl #8
   320ac:	bl	30b24 <crc32@@Base+0x170cc>
   320b0:	ldr	r3, [sp, #240]	; 0xf0
   320b4:	cmp	r3, #0
   320b8:	ble	323a8 <crc32@@Base+0x18950>
   320bc:	ldr	r3, [sp, #44]	; 0x2c
   320c0:	mov	r9, #0
   320c4:	str	fp, [sp, #40]	; 0x28
   320c8:	sub	sl, r3, #4
   320cc:	str	r4, [sp, #36]	; 0x24
   320d0:	mov	r4, r9
   320d4:	mov	r9, r0
   320d8:	mov	fp, sl
   320dc:	ldr	sl, [sp, #240]	; 0xf0
   320e0:	b	320f0 <crc32@@Base+0x18698>
   320e4:	add	r4, r4, #1
   320e8:	cmp	sl, r4
   320ec:	beq	3230c <crc32@@Base+0x188b4>
   320f0:	mov	r1, r9
   320f4:	ldr	r0, [fp, #4]!
   320f8:	bl	12680 <strcmp@plt>
   320fc:	cmp	r0, #0
   32100:	bne	320e4 <crc32@@Base+0x1868c>
   32104:	ldr	r4, [sp, #36]	; 0x24
   32108:	mov	sl, r5
   3210c:	ldr	r3, [sp, #60]	; 0x3c
   32110:	mov	r9, #1
   32114:	adds	r2, r6, #1
   32118:	movne	r2, #1
   3211c:	tst	r9, r2
   32120:	beq	31fe8 <crc32@@Base+0x18590>
   32124:	ldr	r2, [sp, #248]	; 0xf8
   32128:	cmp	r4, r2
   3212c:	bge	3214c <crc32@@Base+0x186f4>
   32130:	ldr	r1, [sp, #28]
   32134:	sub	sl, sl, r6
   32138:	ldr	r0, [sp, #24]
   3213c:	add	r2, r1, r4, lsl #3
   32140:	add	r6, r6, r0
   32144:	str	r6, [r1, r4, lsl #3]
   32148:	str	sl, [r2, #4]
   3214c:	add	r4, r4, #1
   32150:	mvn	r6, #0
   32154:	b	31fe8 <crc32@@Base+0x18590>
   32158:	ldr	r1, [sp, #20]
   3215c:	cmn	r1, #1
   32160:	beq	323a0 <crc32@@Base+0x18948>
   32164:	ldr	lr, [sp, #16]
   32168:	add	r0, sp, #200	; 0xc8
   3216c:	add	r2, r0, r1, lsl #2
   32170:	sub	ip, r1, #1
   32174:	cmp	lr, r8
   32178:	ldr	r0, [r2, #-132]	; 0xffffff7c
   3217c:	bls	321ac <crc32@@Base+0x18754>
   32180:	ldrb	r1, [lr, #-1]
   32184:	sub	r2, lr, #1
   32188:	cmp	r1, #47	; 0x2f
   3218c:	bne	321a0 <crc32@@Base+0x18748>
   32190:	b	322e4 <crc32@@Base+0x1888c>
   32194:	ldrb	r1, [r2, #-1]!
   32198:	cmp	r1, #47	; 0x2f
   3219c:	beq	322e4 <crc32@@Base+0x1888c>
   321a0:	cmp	r8, r2
   321a4:	bne	32194 <crc32@@Base+0x1873c>
   321a8:	str	r8, [sp, #16]
   321ac:	ldr	r1, [sp, #16]
   321b0:	mov	r2, #0
   321b4:	str	ip, [sp, #20]
   321b8:	strb	r2, [r1]
   321bc:	ldr	r2, [sp, #4]
   321c0:	str	r0, [sp, #4]
   321c4:	adds	fp, r2, #0
   321c8:	str	r2, [sp, #12]
   321cc:	movne	fp, #1
   321d0:	b	31f88 <crc32@@Base+0x18530>
   321d4:	ldr	r3, [sp, #20]
   321d8:	add	r3, r3, #1
   321dc:	str	r3, [sp, #20]
   321e0:	cmp	r3, #32
   321e4:	beq	323a0 <crc32@@Base+0x18948>
   321e8:	add	r2, sp, #64	; 0x40
   321ec:	mov	r1, r5
   321f0:	ldr	r0, [sp]
   321f4:	bl	30f04 <crc32@@Base+0x174ac>
   321f8:	ldr	r2, [sp, #16]
   321fc:	ldr	r9, [sp, #64]	; 0x40
   32200:	sub	r3, r2, r8
   32204:	ldr	r1, [sp, #256]	; 0x100
   32208:	add	r3, r3, #2
   3220c:	add	r3, r3, r9
   32210:	cmp	r3, r1
   32214:	bge	323b4 <crc32@@Base+0x1895c>
   32218:	add	r3, r8, #1
   3221c:	mov	r1, r0
   32220:	cmp	r2, r3
   32224:	ldreq	r3, [sp, #16]
   32228:	movne	r3, #47	; 0x2f
   3222c:	strbne	r3, [r2]
   32230:	addne	r3, r2, #1
   32234:	mov	r0, r3
   32238:	bl	12404 <strcpy@plt>
   3223c:	ldr	r1, [sp, #20]
   32240:	ldr	r2, [sp, #4]
   32244:	cmp	r2, #1
   32248:	add	r3, r0, r9
   3224c:	str	r3, [sp, #16]
   32250:	add	r3, sp, #200	; 0xc8
   32254:	add	r3, r3, r1, lsl #2
   32258:	str	r2, [r3, #-132]	; 0xffffff7c
   3225c:	ldr	r3, [sp, #32]
   32260:	beq	32320 <crc32@@Base+0x188c8>
   32264:	cmp	r3, #0
   32268:	ble	322f0 <crc32@@Base+0x18898>
   3226c:	ldr	r3, [sp, #48]	; 0x30
   32270:	mov	r9, #0
   32274:	str	r4, [sp, #12]
   32278:	sub	fp, r3, #4
   3227c:	mov	r4, fp
   32280:	ldr	fp, [sp, #32]
   32284:	b	32294 <crc32@@Base+0x1883c>
   32288:	add	r9, r9, #1
   3228c:	cmp	fp, r9
   32290:	ble	322ec <crc32@@Base+0x18894>
   32294:	mov	r1, r8
   32298:	ldr	r0, [r4, #4]!
   3229c:	bl	12680 <strcmp@plt>
   322a0:	cmp	r0, #0
   322a4:	bne	32288 <crc32@@Base+0x18830>
   322a8:	mov	r2, #2
   322ac:	ldr	r4, [sp, #12]
   322b0:	ldr	r3, [sp, #60]	; 0x3c
   322b4:	mov	fp, #1
   322b8:	str	r2, [sp, #4]
   322bc:	str	r2, [sp, #12]
   322c0:	b	31f88 <crc32@@Base+0x18530>
   322c4:	ldr	r2, [sp, #12]
   322c8:	clz	r9, r2
   322cc:	lsr	r9, r9, #5
   322d0:	b	32114 <crc32@@Base+0x186bc>
   322d4:	sub	r4, r4, #1
   322d8:	ldr	r6, [r0, r4, lsl #3]
   322dc:	sub	r6, r6, r1
   322e0:	b	31fe8 <crc32@@Base+0x18590>
   322e4:	str	r2, [sp, #16]
   322e8:	b	321ac <crc32@@Base+0x18754>
   322ec:	ldr	r4, [sp, #12]
   322f0:	ldr	r3, [sp, #4]
   322f4:	cmp	r3, #0
   322f8:	bne	3232c <crc32@@Base+0x188d4>
   322fc:	mov	sl, r5
   32300:	mov	r9, #1
   32304:	ldr	r3, [sp, #60]	; 0x3c
   32308:	b	32114 <crc32@@Base+0x186bc>
   3230c:	ldr	fp, [sp, #40]	; 0x28
   32310:	mov	sl, r5
   32314:	ldr	r4, [sp, #36]	; 0x24
   32318:	ldr	r3, [sp, #60]	; 0x3c
   3231c:	b	31f88 <crc32@@Base+0x18530>
   32320:	cmp	r3, #0
   32324:	mov	sl, r5
   32328:	bgt	3226c <crc32@@Base+0x18814>
   3232c:	ldr	r3, [sp, #4]
   32330:	subs	r3, r3, #1
   32334:	str	r3, [sp, #4]
   32338:	mov	r2, r3
   3233c:	movne	fp, #1
   32340:	ldr	r3, [sp, #60]	; 0x3c
   32344:	moveq	fp, #0
   32348:	str	r2, [sp, #12]
   3234c:	b	31f88 <crc32@@Base+0x18530>
   32350:	ldr	r2, [sp, #260]	; 0x104
   32354:	sub	r3, r3, r6
   32358:	ldr	r0, [sp, #28]
   3235c:	cmp	r2, #0
   32360:	ldr	r2, [sp, #24]
   32364:	add	r1, r0, r4, lsl #3
   32368:	add	r2, r6, r2
   3236c:	str	r2, [r0, r4, lsl #3]
   32370:	str	r3, [r1, #4]
   32374:	beq	32028 <crc32@@Base+0x185d0>
   32378:	ldr	r0, [lr, #32]
   3237c:	ubfx	lr, r0, #8, #8
   32380:	ubfx	ip, r0, #16, #8
   32384:	lsr	r2, r0, #24
   32388:	orr	r2, r2, r0, lsl #24
   3238c:	orr	r2, r2, lr, lsl #16
   32390:	orr	r2, r2, ip, lsl #8
   32394:	add	r3, r2, r3
   32398:	str	r3, [r1, #4]
   3239c:	b	32028 <crc32@@Base+0x185d0>
   323a0:	mvn	r0, #10
   323a4:	b	3202c <crc32@@Base+0x185d4>
   323a8:	mov	sl, r5
   323ac:	ldr	r3, [sp, #60]	; 0x3c
   323b0:	b	31f88 <crc32@@Base+0x18530>
   323b4:	mvn	r0, #2
   323b8:	b	3202c <crc32@@Base+0x185d4>
   323bc:	mvn	r0, #11
   323c0:	b	3202c <crc32@@Base+0x185d4>
   323c4:	bl	124b8 <__stack_chk_fail@plt>
   323c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   323cc:	sub	sp, sp, #12
   323d0:	mov	fp, r2
   323d4:	mov	r7, r1
   323d8:	movw	r2, #53264	; 0xd010
   323dc:	mov	r1, #0
   323e0:	movt	r2, #3
   323e4:	mov	r4, r0
   323e8:	mov	sl, r3
   323ec:	ldr	r8, [r0, #8]
   323f0:	ldr	r5, [sp, #48]	; 0x30
   323f4:	bl	30ed4 <crc32@@Base+0x1747c>
   323f8:	subs	r9, r0, #0
   323fc:	blt	325c8 <crc32@@Base+0x18b70>
   32400:	mov	r1, r9
   32404:	mov	r0, r4
   32408:	bl	2ddd8 <crc32@@Base+0x14380>
   3240c:	cmn	r0, #1
   32410:	mov	r6, r0
   32414:	beq	325a4 <crc32@@Base+0x18b4c>
   32418:	cmp	r0, #0
   3241c:	blt	32538 <crc32@@Base+0x18ae0>
   32420:	str	r7, [r5, #384]	; 0x180
   32424:	mov	r1, r9
   32428:	str	fp, [r5, #388]	; 0x184
   3242c:	mov	r7, #0
   32430:	str	sl, [r5, #396]	; 0x18c
   32434:	mov	r0, r4
   32438:	str	r7, [r5, #400]	; 0x190
   3243c:	sub	r6, r6, #4
   32440:	bl	30f90 <crc32@@Base+0x17538>
   32444:	subs	fp, r0, #0
   32448:	blt	3252c <crc32@@Base+0x18ad4>
   3244c:	lsr	r3, r8, #24
   32450:	ubfx	r2, r8, #8, #8
   32454:	orr	r3, r3, r8, lsl #24
   32458:	ubfx	r8, r8, #16, #8
   3245c:	orr	r3, r3, r2, lsl #16
   32460:	orr	r8, r3, r8, lsl #8
   32464:	add	r3, r8, r9
   32468:	str	r3, [sp, #4]
   3246c:	mov	r2, #0
   32470:	mov	r1, fp
   32474:	mov	r0, r4
   32478:	bl	30fd0 <crc32@@Base+0x17578>
   3247c:	ldr	r2, [r0, #8]
   32480:	mov	r0, r4
   32484:	ubfx	ip, r2, #8, #8
   32488:	ubfx	r1, r2, #16, #8
   3248c:	lsr	r3, r2, #24
   32490:	orr	r3, r3, r2, lsl #24
   32494:	orr	r3, r3, ip, lsl #16
   32498:	orr	r1, r3, r1, lsl #8
   3249c:	bl	30b24 <crc32@@Base+0x170cc>
   324a0:	mov	r1, r0
   324a4:	mov	r0, r4
   324a8:	bl	31560 <crc32@@Base+0x17b08>
   324ac:	ldr	r1, [r4, #8]
   324b0:	ldr	ip, [r5, #388]	; 0x184
   324b4:	ubfx	r3, r1, #8, #8
   324b8:	lsr	r2, r1, #24
   324bc:	cmp	ip, #0
   324c0:	orr	r2, r2, r1, lsl #24
   324c4:	ubfx	r1, r1, #16, #8
   324c8:	orr	r2, r2, r3, lsl #16
   324cc:	ldr	r3, [r5, #384]	; 0x180
   324d0:	orr	r2, r2, r1, lsl #8
   324d4:	add	r0, r2, r0
   324d8:	ble	32510 <crc32@@Base+0x18ab8>
   324dc:	add	r3, r3, #8
   324e0:	mov	r1, #0
   324e4:	ldr	r2, [r3, #-8]
   324e8:	add	r1, r1, #1
   324ec:	cmp	r0, r2
   324f0:	blt	32504 <crc32@@Base+0x18aac>
   324f4:	ldr	lr, [r3, #-4]
   324f8:	add	r2, r2, lr
   324fc:	cmp	r0, r2
   32500:	blt	32544 <crc32@@Base+0x18aec>
   32504:	cmp	ip, r1
   32508:	add	r3, r3, #8
   3250c:	bne	324e4 <crc32@@Base+0x18a8c>
   32510:	mov	r1, fp
   32514:	mov	r0, r4
   32518:	bl	30fb0 <crc32@@Base+0x17558>
   3251c:	subs	fp, r0, #0
   32520:	bge	3246c <crc32@@Base+0x18a14>
   32524:	cmp	r7, #0
   32528:	bne	32590 <crc32@@Base+0x18b38>
   3252c:	ldr	r6, [r5, #388]	; 0x184
   32530:	cmp	r6, sl
   32534:	mvnge	r6, #2
   32538:	mov	r0, r6
   3253c:	add	sp, sp, #12
   32540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32544:	mov	r1, fp
   32548:	mov	r0, r4
   3254c:	bl	30fb0 <crc32@@Base+0x17558>
   32550:	cmp	r0, #0
   32554:	movge	r9, r0
   32558:	movlt	r9, r6
   3255c:	cmp	r7, #0
   32560:	beq	3257c <crc32@@Base+0x18b24>
   32564:	sub	r2, r9, fp
   32568:	add	r1, r8, fp
   3256c:	mov	r0, r5
   32570:	mov	r7, #1
   32574:	bl	31ddc <crc32@@Base+0x18384>
   32578:	b	32510 <crc32@@Base+0x18ab8>
   3257c:	mov	r2, #12
   32580:	ldr	r1, [sp, #4]
   32584:	mov	r0, r5
   32588:	bl	31ddc <crc32@@Base+0x18384>
   3258c:	b	32564 <crc32@@Base+0x18b0c>
   32590:	add	r1, r8, r6
   32594:	mov	r2, #4
   32598:	mov	r0, r5
   3259c:	bl	31ddc <crc32@@Base+0x18384>
   325a0:	b	3252c <crc32@@Base+0x18ad4>
   325a4:	ldr	r3, [r4, #36]	; 0x24
   325a8:	ubfx	r1, r3, #8, #8
   325ac:	ubfx	r2, r3, #16, #8
   325b0:	lsr	r6, r3, #24
   325b4:	orr	r6, r6, r3, lsl #24
   325b8:	orr	r6, r6, r1, lsl #16
   325bc:	orr	r6, r6, r2, lsl #8
   325c0:	sub	r6, r6, #8
   325c4:	b	32420 <crc32@@Base+0x189c8>
   325c8:	mvn	r6, #0
   325cc:	b	32538 <crc32@@Base+0x18ae0>
   325d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   325d4:	sub	sp, sp, #84	; 0x54
   325d8:	mov	r7, r0
   325dc:	movw	ip, #61168	; 0xeef0
   325e0:	ldr	r4, [sp, #132]	; 0x84
   325e4:	movt	ip, #4
   325e8:	ldr	r0, [r0, #8]
   325ec:	mov	lr, ip
   325f0:	str	r1, [sp, #12]
   325f4:	ldr	r1, [r4, #412]	; 0x19c
   325f8:	ubfx	r5, r0, #8, #8
   325fc:	str	ip, [sp, #32]
   32600:	lsr	ip, r0, #24
   32604:	ldr	lr, [lr]
   32608:	orr	ip, ip, r0, lsl #24
   3260c:	cmp	r1, #0
   32610:	ubfx	r0, r0, #16, #8
   32614:	orr	ip, ip, r5, lsl #16
   32618:	str	r2, [sp, #16]
   3261c:	str	lr, [sp, #76]	; 0x4c
   32620:	orr	r2, ip, r0, lsl #8
   32624:	str	r3, [r4, #384]	; 0x180
   32628:	str	r2, [sp, #24]
   3262c:	mov	r2, #0
   32630:	ldr	sl, [sp, #120]	; 0x78
   32634:	str	r2, [r4, #388]	; 0x184
   32638:	ble	32b9c <crc32@@Base+0x19144>
   3263c:	cmp	r1, #1
   32640:	bgt	32714 <crc32@@Base+0x18cbc>
   32644:	ldr	r3, [sp, #128]	; 0x80
   32648:	add	fp, r4, #408	; 0x198
   3264c:	tst	r3, #8
   32650:	movne	r3, #3
   32654:	moveq	r3, #2
   32658:	str	r3, [sp, #28]
   3265c:	mov	r3, #0
   32660:	str	r3, [sp, #20]
   32664:	mov	lr, fp
   32668:	add	ip, sp, #56	; 0x38
   3266c:	ldm	lr!, {r0, r1, r2, r3}
   32670:	ldr	lr, [lr]
   32674:	stmia	ip!, {r0, r1, r2, r3}
   32678:	add	r2, sp, #72	; 0x48
   3267c:	mov	r0, r7
   32680:	mov	r1, lr
   32684:	mov	r5, lr
   32688:	str	lr, [ip]
   3268c:	bl	2daa8 <crc32@@Base+0x14050>
   32690:	ldr	r6, [sp, #72]	; 0x48
   32694:	sub	r0, r0, #1
   32698:	cmp	r0, #8
   3269c:	ldrls	pc, [pc, r0, lsl #2]
   326a0:	b	329e4 <crc32@@Base+0x18f8c>
   326a4:	andeq	r2, r3, r0, lsr #20
   326a8:	andeq	r2, r3, r4, ror r9
   326ac:	andeq	r2, r3, r4, lsr #16
   326b0:	andeq	r2, r3, r8, asr #13
   326b4:	andeq	r2, r3, r4, ror #19
   326b8:	andeq	r2, r3, r4, ror #19
   326bc:	andeq	r2, r3, r4, ror #19
   326c0:	andeq	r2, r3, r4, ror #19
   326c4:	andeq	r2, r3, ip, lsr #22
   326c8:	ldr	r0, [sp, #64]	; 0x40
   326cc:	mov	r6, r5
   326d0:	cmp	r0, #1
   326d4:	movls	r0, #0
   326d8:	movhi	r0, #1
   326dc:	cmp	r0, #0
   326e0:	beq	329e4 <crc32@@Base+0x18f8c>
   326e4:	ldr	r3, [r4, #404]	; 0x194
   326e8:	cmn	r3, #1
   326ec:	beq	32b40 <crc32@@Base+0x190e8>
   326f0:	add	lr, sp, #56	; 0x38
   326f4:	mov	ip, fp
   326f8:	ldm	lr!, {r0, r1, r2, r3}
   326fc:	stmia	ip!, {r0, r1, r2, r3}
   32700:	ldr	r1, [r4, #412]	; 0x19c
   32704:	ldr	r3, [lr]
   32708:	cmp	r1, #1
   3270c:	str	r3, [ip]
   32710:	ble	32664 <crc32@@Base+0x18c0c>
   32714:	cmp	r1, #2
   32718:	bne	32770 <crc32@@Base+0x18d18>
   3271c:	ldr	r1, [r7, #36]	; 0x24
   32720:	ldr	r2, [r4, #424]	; 0x1a8
   32724:	ubfx	ip, r1, #8, #8
   32728:	ubfx	r0, r1, #16, #8
   3272c:	lsr	r3, r1, #24
   32730:	orr	r3, r3, r1, lsl #24
   32734:	orr	r3, r3, ip, lsl #16
   32738:	orr	r3, r3, r0, lsl #8
   3273c:	cmp	r2, r3
   32740:	bne	32bec <crc32@@Base+0x19194>
   32744:	ldr	r1, [r4, #404]	; 0x194
   32748:	mov	r0, r4
   3274c:	ldr	r3, [sp, #24]
   32750:	sub	r2, r2, r1
   32754:	add	r1, r1, r3
   32758:	bl	31ddc <crc32@@Base+0x18384>
   3275c:	cmp	r0, #0
   32760:	bne	32b94 <crc32@@Base+0x1913c>
   32764:	ldr	r1, [r4, #412]	; 0x19c
   32768:	add	r1, r1, #1
   3276c:	str	r1, [r4, #412]	; 0x19c
   32770:	cmp	r1, #3
   32774:	bgt	327f4 <crc32@@Base+0x18d9c>
   32778:	ldr	r3, [sp, #128]	; 0x80
   3277c:	tst	r3, #1
   32780:	beq	327ec <crc32@@Base+0x18d94>
   32784:	ldr	r3, [r7, #12]
   32788:	mov	r2, #0
   3278c:	str	r2, [r4, #400]	; 0x190
   32790:	ubfx	r0, r3, #8, #8
   32794:	ubfx	r2, r3, #16, #8
   32798:	lsr	r1, r3, #24
   3279c:	orr	r1, r1, r3, lsl #24
   327a0:	ldr	r3, [r4, #424]	; 0x1a8
   327a4:	orr	r1, r1, r0, lsl #16
   327a8:	orr	r1, r1, r2, lsl #8
   327ac:	ldr	r2, [sp, #24]
   327b0:	add	r3, r2, r3
   327b4:	cmp	r3, r1
   327b8:	bhi	32bfc <crc32@@Base+0x191a4>
   327bc:	ldr	ip, [r7, #32]
   327c0:	mov	r0, r4
   327c4:	ubfx	lr, ip, #8, #8
   327c8:	ubfx	r2, ip, #16, #8
   327cc:	lsr	r3, ip, #24
   327d0:	orr	r3, r3, ip, lsl #24
   327d4:	orr	r3, r3, lr, lsl #16
   327d8:	orr	r2, r3, r2, lsl #8
   327dc:	bl	31ddc <crc32@@Base+0x18384>
   327e0:	cmp	r0, #0
   327e4:	bne	32b94 <crc32@@Base+0x1913c>
   327e8:	ldr	r1, [r4, #412]	; 0x19c
   327ec:	add	r1, r1, #1
   327f0:	str	r1, [r4, #412]	; 0x19c
   327f4:	ldr	r9, [r4, #388]	; 0x184
   327f8:	cmp	r9, #0
   327fc:	movgt	r9, #0
   32800:	mvnle	r9, #0
   32804:	ldr	r3, [sp, #32]
   32808:	mov	r0, r9
   3280c:	ldr	r2, [sp, #76]	; 0x4c
   32810:	ldr	r3, [r3]
   32814:	cmp	r2, r3
   32818:	bne	32c04 <crc32@@Base+0x191ac>
   3281c:	add	sp, sp, #84	; 0x54
   32820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32824:	mov	r2, #0
   32828:	mov	r1, r5
   3282c:	mov	r0, r7
   32830:	bl	30fd0 <crc32@@Base+0x17578>
   32834:	ldr	r2, [r0, #8]
   32838:	mov	r0, r7
   3283c:	ubfx	ip, r2, #8, #8
   32840:	ubfx	r1, r2, #16, #8
   32844:	lsr	r3, r2, #24
   32848:	orr	r3, r3, r2, lsl #24
   3284c:	orr	r3, r3, ip, lsl #16
   32850:	orr	r1, r3, r1, lsl #8
   32854:	bl	30b24 <crc32@@Base+0x170cc>
   32858:	mov	r6, r0
   3285c:	bl	125e4 <strlen@plt>
   32860:	str	r6, [sp]
   32864:	mov	r3, #2
   32868:	ldr	r2, [sp, #20]
   3286c:	mov	r1, r7
   32870:	ldr	ip, [sp, #12]
   32874:	add	r0, r0, #1
   32878:	str	r0, [sp, #4]
   3287c:	ldr	r0, [sp, #16]
   32880:	blx	ip
   32884:	cmn	r0, #1
   32888:	beq	326c8 <crc32@@Base+0x18c70>
   3288c:	ldr	r3, [sp, #128]	; 0x80
   32890:	tst	r3, #2
   32894:	beq	32b74 <crc32@@Base+0x1911c>
   32898:	cmp	r0, #0
   3289c:	beq	32b8c <crc32@@Base+0x19134>
   328a0:	ldr	r3, [sp, #64]	; 0x40
   328a4:	cmp	r3, #0
   328a8:	moveq	r3, #1
   328ac:	streq	r3, [sp, #64]	; 0x40
   328b0:	ldr	r3, [r4, #404]	; 0x194
   328b4:	cmn	r3, #1
   328b8:	bne	326f0 <crc32@@Base+0x18c98>
   328bc:	ldr	r2, [r4, #392]	; 0x188
   328c0:	ldr	r3, [sp, #56]	; 0x38
   328c4:	ldr	r1, [r2, #8]
   328c8:	cmp	r3, #0
   328cc:	ubfx	ip, r1, #8, #8
   328d0:	ubfx	r0, r1, #16, #8
   328d4:	lsr	r2, r1, #24
   328d8:	orr	r2, r2, r1, lsl #24
   328dc:	orr	r2, r2, ip, lsl #16
   328e0:	orr	r2, r2, r0, lsl #8
   328e4:	blt	32b4c <crc32@@Base+0x190f4>
   328e8:	str	r7, [sp, #40]	; 0x28
   328ec:	mov	r6, r4
   328f0:	str	sl, [sp, #44]	; 0x2c
   328f4:	mov	r8, #0
   328f8:	str	r5, [sp, #36]	; 0x24
   328fc:	mov	r7, r3
   32900:	mov	sl, r2
   32904:	b	32928 <crc32@@Base+0x18ed0>
   32908:	ldr	r2, [r6, #4]
   3290c:	add	r8, r8, #1
   32910:	add	r6, r6, #12
   32914:	cmp	r2, #0
   32918:	moveq	r3, #1
   3291c:	streq	r3, [r6, #-8]
   32920:	cmp	r7, r8
   32924:	blt	32b7c <crc32@@Base+0x19124>
   32928:	ldr	r9, [r6, #8]
   3292c:	cmp	r9, #0
   32930:	bne	32908 <crc32@@Base+0x18eb0>
   32934:	ldr	r5, [r6]
   32938:	add	r2, sp, #52	; 0x34
   3293c:	ldr	r0, [r4, #392]	; 0x188
   32940:	mov	r1, r5
   32944:	bl	2daa8 <crc32@@Base+0x14050>
   32948:	ldr	r2, [sp, #52]	; 0x34
   3294c:	add	r1, sl, r5
   32950:	mov	r0, r4
   32954:	sub	r2, r2, r5
   32958:	bl	31ddc <crc32@@Base+0x18384>
   3295c:	cmp	r0, #0
   32960:	bne	32804 <crc32@@Base+0x18dac>
   32964:	mov	r3, #1
   32968:	str	r3, [r6, #8]
   3296c:	str	r3, [r4, #400]	; 0x190
   32970:	b	32908 <crc32@@Base+0x18eb0>
   32974:	ldr	r2, [sp, #56]	; 0x38
   32978:	ldr	r0, [sp, #64]	; 0x40
   3297c:	cmp	r2, #0
   32980:	blt	32bec <crc32@@Base+0x19194>
   32984:	cmp	r0, #0
   32988:	bne	32998 <crc32@@Base+0x18f40>
   3298c:	ldr	r3, [sp, #128]	; 0x80
   32990:	tst	r3, #4
   32994:	moveq	r6, r5
   32998:	mov	r1, #12
   3299c:	ldr	r3, [sp, #68]	; 0x44
   329a0:	mla	r1, r1, r2, r4
   329a4:	sub	r2, r2, #1
   329a8:	str	r2, [sp, #56]	; 0x38
   329ac:	ldr	r2, [r1, #4]
   329b0:	str	r2, [sp, #64]	; 0x40
   329b4:	b	329cc <crc32@@Base+0x18f74>
   329b8:	sub	r3, r3, #1
   329bc:	str	r3, [sp, #68]	; 0x44
   329c0:	ldrb	r2, [r3]
   329c4:	cmp	r2, #47	; 0x2f
   329c8:	beq	329d4 <crc32@@Base+0x18f7c>
   329cc:	cmp	sl, r3
   329d0:	bcc	329b8 <crc32@@Base+0x18f60>
   329d4:	cmp	r0, #0
   329d8:	mov	r2, #0
   329dc:	strb	r2, [r3]
   329e0:	bne	326e4 <crc32@@Base+0x18c8c>
   329e4:	ldr	r1, [r4, #404]	; 0x194
   329e8:	cmn	r1, #1
   329ec:	beq	326f0 <crc32@@Base+0x18c98>
   329f0:	ldr	r3, [sp, #24]
   329f4:	sub	r2, r6, r1
   329f8:	mov	r0, r4
   329fc:	add	r1, r1, r3
   32a00:	bl	31ddc <crc32@@Base+0x18384>
   32a04:	cmp	r0, #0
   32a08:	bne	32b94 <crc32@@Base+0x1913c>
   32a0c:	mvn	r3, #0
   32a10:	str	r3, [r4, #404]	; 0x194
   32a14:	mov	r3, #1
   32a18:	str	r3, [r4, #400]	; 0x190
   32a1c:	b	326f0 <crc32@@Base+0x18c98>
   32a20:	ldr	r3, [sp, #56]	; 0x38
   32a24:	add	r3, r3, #1
   32a28:	str	r3, [sp, #56]	; 0x38
   32a2c:	cmp	r3, #32
   32a30:	beq	32bec <crc32@@Base+0x19194>
   32a34:	add	r2, sp, #48	; 0x30
   32a38:	mov	r1, r5
   32a3c:	mov	r0, r7
   32a40:	bl	30f04 <crc32@@Base+0x174ac>
   32a44:	ldr	r2, [sp, #68]	; 0x44
   32a48:	ldr	r1, [sp, #48]	; 0x30
   32a4c:	sub	r3, r2, sl
   32a50:	add	r3, r3, #2
   32a54:	add	r3, r3, r1
   32a58:	ldr	r1, [sp, #124]	; 0x7c
   32a5c:	cmp	r3, r1
   32a60:	bge	32bf4 <crc32@@Base+0x1919c>
   32a64:	add	r3, sl, #1
   32a68:	mov	r1, r0
   32a6c:	cmp	r2, r3
   32a70:	addne	r3, r2, #1
   32a74:	strne	r3, [sp, #68]	; 0x44
   32a78:	movne	r3, #47	; 0x2f
   32a7c:	strbne	r3, [r2]
   32a80:	ldrne	r3, [sp, #68]	; 0x44
   32a84:	mov	r0, r3
   32a88:	bl	12404 <strcpy@plt>
   32a8c:	ldr	r0, [sp, #56]	; 0x38
   32a90:	mov	r2, #12
   32a94:	ldr	r1, [sp, #64]	; 0x40
   32a98:	ldr	r3, [sp, #68]	; 0x44
   32a9c:	mul	r2, r2, r0
   32aa0:	ldr	ip, [sp, #48]	; 0x30
   32aa4:	cmp	r1, #1
   32aa8:	add	r3, r3, ip
   32aac:	str	r3, [sp, #68]	; 0x44
   32ab0:	add	r0, r4, r2
   32ab4:	str	r1, [r0, #4]
   32ab8:	str	r5, [r4, r2]
   32abc:	beq	32acc <crc32@@Base+0x19074>
   32ac0:	ldr	r2, [sp, #128]	; 0x80
   32ac4:	tst	r2, #12
   32ac8:	bne	32ad8 <crc32@@Base+0x19080>
   32acc:	mov	r6, r5
   32ad0:	mov	r2, #0
   32ad4:	str	r2, [sp, #64]	; 0x40
   32ad8:	sub	r3, r3, sl
   32adc:	str	sl, [sp]
   32ae0:	add	r2, r3, #1
   32ae4:	mov	r1, r7
   32ae8:	str	r2, [sp, #4]
   32aec:	mov	r3, #1
   32af0:	mov	r2, r5
   32af4:	ldr	r0, [sp, #16]
   32af8:	ldr	ip, [sp, #12]
   32afc:	blx	ip
   32b00:	cmp	r0, #0
   32b04:	beq	32b54 <crc32@@Base+0x190fc>
   32b08:	ldr	r3, [sp, #28]
   32b0c:	mov	r0, r3
   32b10:	str	r3, [sp, #64]	; 0x40
   32b14:	ldr	r3, [sp, #56]	; 0x38
   32b18:	mov	r2, #12
   32b1c:	str	r5, [sp, #20]
   32b20:	mla	r3, r2, r3, r4
   32b24:	str	r0, [r3, #8]
   32b28:	b	326dc <crc32@@Base+0x18c84>
   32b2c:	mov	r3, #2
   32b30:	str	r3, [sp, #60]	; 0x3c
   32b34:	ldr	r3, [r4, #404]	; 0x194
   32b38:	cmn	r3, #1
   32b3c:	bne	326f0 <crc32@@Base+0x18c98>
   32b40:	ldr	r3, [sp, #128]	; 0x80
   32b44:	tst	r3, #2
   32b48:	bne	328bc <crc32@@Base+0x18e64>
   32b4c:	str	r5, [r4, #404]	; 0x194
   32b50:	b	326f0 <crc32@@Base+0x18c98>
   32b54:	ldr	r0, [sp, #64]	; 0x40
   32b58:	cmp	r0, #0
   32b5c:	moveq	r6, r5
   32b60:	beq	32b14 <crc32@@Base+0x190bc>
   32b64:	cmp	r0, #3
   32b68:	subne	r0, r0, #1
   32b6c:	strne	r0, [sp, #64]	; 0x40
   32b70:	b	32b14 <crc32@@Base+0x190bc>
   32b74:	mov	r6, r5
   32b78:	b	326dc <crc32@@Base+0x18c84>
   32b7c:	add	r5, sp, #36	; 0x24
   32b80:	ldm	r5, {r5, r7, sl}
   32b84:	str	r5, [r4, #404]	; 0x194
   32b88:	b	326f0 <crc32@@Base+0x18c98>
   32b8c:	mov	r6, r5
   32b90:	b	329e4 <crc32@@Base+0x18f8c>
   32b94:	mov	r9, #0
   32b98:	b	32804 <crc32@@Base+0x18dac>
   32b9c:	ldr	r3, [sp, #128]	; 0x80
   32ba0:	tst	r3, #16
   32ba4:	beq	32644 <crc32@@Base+0x18bec>
   32ba8:	ldr	r3, [r7, #16]
   32bac:	mov	r0, r4
   32bb0:	ubfx	ip, r3, #8, #8
   32bb4:	ubfx	r2, r3, #16, #8
   32bb8:	lsr	r1, r3, #24
   32bbc:	orr	r1, r1, r3, lsl #24
   32bc0:	ldr	r3, [sp, #24]
   32bc4:	orr	r1, r1, ip, lsl #16
   32bc8:	orr	r1, r1, r2, lsl #8
   32bcc:	sub	r2, r3, r1
   32bd0:	bl	31ddc <crc32@@Base+0x18384>
   32bd4:	cmp	r0, #0
   32bd8:	bne	32b94 <crc32@@Base+0x1913c>
   32bdc:	mov	r3, #1
   32be0:	str	r0, [r4, #400]	; 0x190
   32be4:	str	r3, [r4, #412]	; 0x19c
   32be8:	b	32644 <crc32@@Base+0x18bec>
   32bec:	mvn	r9, #10
   32bf0:	b	32804 <crc32@@Base+0x18dac>
   32bf4:	mvn	r9, #2
   32bf8:	b	32804 <crc32@@Base+0x18dac>
   32bfc:	mvn	r9, #11
   32c00:	b	32804 <crc32@@Base+0x18dac>
   32c04:	bl	124b8 <__stack_chk_fail@plt>
   32c08:	push	{r4, r5, r6, lr}
   32c0c:	mov	lr, #0
   32c10:	ldr	ip, [sp, #28]
   32c14:	mov	r6, #1
   32c18:	ldr	r5, [sp, #16]
   32c1c:	mvn	r4, #0
   32c20:	str	r6, [ip, #400]	; 0x190
   32c24:	str	r5, [ip, #420]	; 0x1a4
   32c28:	str	r6, [ip, #396]	; 0x18c
   32c2c:	str	r4, [ip, #404]	; 0x194
   32c30:	str	lr, [ip, #416]	; 0x1a0
   32c34:	str	r0, [ip, #392]	; 0x188
   32c38:	strb	lr, [r5]
   32c3c:	str	lr, [ip, #424]	; 0x1a8
   32c40:	str	r4, [ip, #408]	; 0x198
   32c44:	str	lr, [ip, #412]	; 0x19c
   32c48:	pop	{r4, r5, r6, lr}
   32c4c:	b	325d0 <crc32@@Base+0x18b78>
   32c50:	subs	r0, r0, #17
   32c54:	movne	r0, #1
   32c58:	bx	lr
   32c5c:	ldr	r1, [r1, #44]	; 0x2c
   32c60:	ldr	r2, [r3, #56]	; 0x38
   32c64:	mov	r3, #1
   32c68:	sub	r1, r1, #8
   32c6c:	b	32ddc <crc32@@Base+0x19384>
   32c70:	mov	r1, #1
   32c74:	b	32d14 <crc32@@Base+0x192bc>
   32c78:	mov	r1, #1
   32c7c:	b	32c9c <crc32@@Base+0x19244>
   32c80:	ldr	r3, [r0]
   32c84:	rev	r3, r3
   32c88:	str	r3, [r0]
   32c8c:	ldr	r3, [r1]
   32c90:	rev	r3, r3
   32c94:	str	r3, [r1]
   32c98:	bx	lr
   32c9c:	movw	r2, #61168	; 0xeef0
   32ca0:	movt	r2, #4
   32ca4:	cmp	r1, #0
   32ca8:	ldr	r3, [r0]
   32cac:	ldr	ip, [r2]
   32cb0:	ldr	r1, [r0, #4]
   32cb4:	push	{lr}		; (str lr, [sp, #-4]!)
   32cb8:	sub	sp, sp, #20
   32cbc:	str	ip, [sp, #12]
   32cc0:	str	r3, [sp, #4]
   32cc4:	str	r1, [sp, #8]
   32cc8:	bne	32cfc <crc32@@Base+0x192a4>
   32ccc:	cmp	r3, #0
   32cd0:	ldr	r1, [sp, #12]
   32cd4:	ldr	r3, [r2]
   32cd8:	ldrne	r0, [sp, #8]
   32cdc:	mvneq	r0, #0
   32ce0:	clzne	r0, r0
   32ce4:	lsrne	r0, r0, #5
   32ce8:	rsbne	r0, r0, #0
   32cec:	cmp	r1, r3
   32cf0:	bne	32d10 <crc32@@Base+0x192b8>
   32cf4:	add	sp, sp, #20
   32cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   32cfc:	add	r1, sp, #8
   32d00:	add	r0, sp, #4
   32d04:	bl	32c80 <crc32@@Base+0x19228>
   32d08:	ldr	r3, [sp, #4]
   32d0c:	b	32ccc <crc32@@Base+0x19274>
   32d10:	bl	124b8 <__stack_chk_fail@plt>
   32d14:	push	{r4, lr}
   32d18:	movw	r4, #61168	; 0xeef0
   32d1c:	movt	r4, #4
   32d20:	cmp	r1, #0
   32d24:	ldrd	r2, [r0]
   32d28:	sub	sp, sp, #16
   32d2c:	ldr	r1, [r4]
   32d30:	strd	r2, [sp, #4]
   32d34:	str	r1, [sp, #12]
   32d38:	bne	32d78 <crc32@@Base+0x19320>
   32d3c:	cmp	r2, #0
   32d40:	beq	32db4 <crc32@@Base+0x1935c>
   32d44:	ldr	r3, [sp, #8]
   32d48:	cmp	r3, #0
   32d4c:	beq	32d90 <crc32@@Base+0x19338>
   32d50:	movw	r1, #53376	; 0xd080
   32d54:	mov	r0, #1
   32d58:	movt	r1, #3
   32d5c:	bl	12794 <__printf_chk@plt>
   32d60:	ldr	r2, [sp, #12]
   32d64:	ldr	r3, [r4]
   32d68:	cmp	r2, r3
   32d6c:	bne	32d8c <crc32@@Base+0x19334>
   32d70:	add	sp, sp, #16
   32d74:	pop	{r4, pc}
   32d78:	add	r1, sp, #8
   32d7c:	add	r0, sp, #4
   32d80:	bl	32c80 <crc32@@Base+0x19228>
   32d84:	ldr	r2, [sp, #4]
   32d88:	b	32d3c <crc32@@Base+0x192e4>
   32d8c:	bl	124b8 <__stack_chk_fail@plt>
   32d90:	movw	r1, #65196	; 0xfeac
   32d94:	movt	r1, #4
   32d98:	movw	r2, #53336	; 0xd058
   32d9c:	movt	r2, #3
   32da0:	ldr	r0, [r1]
   32da4:	mov	r1, #1
   32da8:	bl	122d8 <__fprintf_chk@plt>
   32dac:	mov	r0, #1
   32db0:	bl	12218 <exit@plt>
   32db4:	movw	r1, #65196	; 0xfeac
   32db8:	movt	r1, #4
   32dbc:	mov	r3, r2
   32dc0:	movw	r2, #53304	; 0xd038
   32dc4:	ldr	r0, [r1]
   32dc8:	movt	r2, #3
   32dcc:	mov	r1, #1
   32dd0:	bl	122d8 <__fprintf_chk@plt>
   32dd4:	mov	r0, #1
   32dd8:	bl	12218 <exit@plt>
   32ddc:	cmp	r3, #0
   32de0:	stm	r0, {r1, r2}
   32de4:	bxeq	lr
   32de8:	add	r1, r0, #4
   32dec:	b	32c80 <crc32@@Base+0x19228>
   32df0:	ldr	r2, [r0]
   32df4:	ldr	r3, [r0, #8]
   32df8:	cmp	r2, #0
   32dfc:	beq	32e20 <crc32@@Base+0x193c8>
   32e00:	cmp	r3, #0
   32e04:	movne	r3, #1
   32e08:	bne	32e18 <crc32@@Base+0x193c0>
   32e0c:	ldr	r3, [r0, #16]
   32e10:	adds	r3, r3, #0
   32e14:	movne	r3, #1
   32e18:	mov	r0, r3
   32e1c:	bx	lr
   32e20:	cmp	r3, #0
   32e24:	ldr	r2, [r0, #16]
   32e28:	beq	32e18 <crc32@@Base+0x193c0>
   32e2c:	adds	r3, r2, #0
   32e30:	movne	r3, #1
   32e34:	mov	r0, r3
   32e38:	bx	lr
   32e3c:	subs	r0, r0, #36	; 0x24
   32e40:	movne	r0, #1
   32e44:	bx	lr
   32e48:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32e4c:	mov	r8, #768	; 0x300
   32e50:	mov	sl, r1
   32e54:	mov	r9, r2
   32e58:	mov	r1, #0
   32e5c:	mov	r2, r8
   32e60:	mov	r4, r0
   32e64:	mov	fp, r3
   32e68:	bl	12308 <memset@plt>
   32e6c:	movw	r2, #54544	; 0xd510
   32e70:	movt	r2, #3
   32e74:	mov	r5, #1
   32e78:	mov	r0, #56	; 0x38
   32e7c:	mov	r1, #0
   32e80:	ldrh	r7, [r2]
   32e84:	sub	r9, sl, r9
   32e88:	ldrb	r6, [r2, #2]
   32e8c:	mov	r2, #12
   32e90:	strh	r0, [r4, #4]
   32e94:	add	r0, r4, #8
   32e98:	strh	r1, [r4, #6]
   32e9c:	movw	r1, #54548	; 0xd514
   32ea0:	strh	r7, [r4]
   32ea4:	movt	r1, #3
   32ea8:	strb	r6, [r4, #2]
   32eac:	strb	r5, [r4, #3]
   32eb0:	bl	126e0 <strncpy@plt>
   32eb4:	sub	r3, fp, #768	; 0x300
   32eb8:	str	r3, [r4, #28]
   32ebc:	add	r1, r4, #700	; 0x2bc
   32ec0:	ldr	r3, [sp, #40]	; 0x28
   32ec4:	add	r2, r4, #720	; 0x2d0
   32ec8:	str	r9, [r4, #32]
   32ecc:	mov	lr, #32
   32ed0:	str	sl, [r4, #36]	; 0x24
   32ed4:	mov	ip, #12
   32ed8:	strb	r3, [r4, #26]
   32edc:	mov	r0, #100	; 0x64
   32ee0:	str	r8, [r4, #40]	; 0x28
   32ee4:	mov	r3, #3
   32ee8:	str	r8, [r4, #48]	; 0x30
   32eec:	mov	r9, #7
   32ef0:	str	lr, [r4, #44]	; 0x2c
   32ef4:	mov	fp, #400	; 0x190
   32ef8:	strh	ip, [r4, #60]	; 0x3c
   32efc:	movw	sl, #5000	; 0x1388
   32f00:	strh	r0, [r4, #72]	; 0x48
   32f04:	mov	r8, #532	; 0x214
   32f08:	strh	r9, [r4, #74]	; 0x4a
   32f0c:	mov	ip, #20
   32f10:	str	fp, [r4, #76]	; 0x4c
   32f14:	mov	lr, #2
   32f18:	str	sl, [r4, #156]	; 0x9c
   32f1c:	mov	r9, #16
   32f20:	strh	r7, [r4, #56]	; 0x38
   32f24:	mov	fp, #128	; 0x80
   32f28:	strb	r6, [r4, #58]	; 0x3a
   32f2c:	mov	sl, #48	; 0x30
   32f30:	strh	r7, [r4, #68]	; 0x44
   32f34:	mov	r0, #8
   32f38:	strb	r6, [r4, #70]	; 0x46
   32f3c:	strh	r7, [r4, #168]	; 0xa8
   32f40:	strb	r6, [r4, #170]	; 0xaa
   32f44:	str	r5, [r4, #20]
   32f48:	strh	r5, [r4, #24]
   32f4c:	strb	r5, [r4, #27]
   32f50:	str	r5, [r4, #52]	; 0x34
   32f54:	strb	r5, [r4, #59]	; 0x3b
   32f58:	strh	r5, [r4, #62]	; 0x3e
   32f5c:	str	r5, [r4, #64]	; 0x40
   32f60:	strb	r5, [r4, #171]	; 0xab
   32f64:	strh	r8, [r4, #172]	; 0xac
   32f68:	strb	r3, [r4, #71]	; 0x47
   32f6c:	strh	r3, [r4, #174]	; 0xae
   32f70:	strh	r7, [r1]
   32f74:	strb	r6, [r4, #702]	; 0x2be
   32f78:	strb	r5, [r4, #703]	; 0x2bf
   32f7c:	strh	ip, [r1, #4]
   32f80:	strh	lr, [r1, #6]
   32f84:	str	r9, [r4, #712]	; 0x2c8
   32f88:	str	fp, [r4, #716]	; 0x2cc
   32f8c:	strh	r7, [r2]
   32f90:	strb	r6, [r4, #722]	; 0x2d2
   32f94:	strb	r5, [r4, #723]	; 0x2d3
   32f98:	strh	sl, [r2, #4]
   32f9c:	strh	r0, [r2, #6]
   32fa0:	str	r3, [r4, #728]	; 0x2d8
   32fa4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32fa8:	push	{r4, r5, r6, lr}
   32fac:	movw	r4, #61168	; 0xeef0
   32fb0:	movt	r4, #4
   32fb4:	sub	sp, sp, #112	; 0x70
   32fb8:	mov	r5, r1
   32fbc:	mov	r6, r0
   32fc0:	ldr	r3, [r4]
   32fc4:	add	r0, sp, #4
   32fc8:	str	r3, [sp, #108]	; 0x6c
   32fcc:	bl	2a5fc <crc32@@Base+0x10ba4>
   32fd0:	mov	r2, r5
   32fd4:	mov	r1, r6
   32fd8:	add	r0, sp, #4
   32fdc:	bl	2a65c <crc32@@Base+0x10c04>
   32fe0:	add	r1, r6, r5
   32fe4:	add	r0, sp, #4
   32fe8:	bl	2a668 <crc32@@Base+0x10c10>
   32fec:	ldr	r2, [sp, #108]	; 0x6c
   32ff0:	ldr	r3, [r4]
   32ff4:	cmp	r2, r3
   32ff8:	bne	33004 <crc32@@Base+0x195ac>
   32ffc:	add	sp, sp, #112	; 0x70
   33000:	pop	{r4, r5, r6, pc}
   33004:	bl	124b8 <__stack_chk_fail@plt>
   33008:	push	{r4, r5, r6, lr}
   3300c:	mov	r5, r1
   33010:	movw	r1, #54580	; 0xd534
   33014:	movt	r1, #3
   33018:	mov	r4, r0
   3301c:	bl	12680 <strcmp@plt>
   33020:	cmp	r0, #0
   33024:	beq	33064 <crc32@@Base+0x1960c>
   33028:	movw	r1, #54588	; 0xd53c
   3302c:	mov	r0, r4
   33030:	movt	r1, #3
   33034:	bl	12680 <strcmp@plt>
   33038:	cmp	r0, #0
   3303c:	bne	33134 <crc32@@Base+0x196dc>
   33040:	cmp	r5, #0
   33044:	movw	r2, #54572	; 0xd52c
   33048:	movt	r2, #3
   3304c:	beq	33074 <crc32@@Base+0x1961c>
   33050:	movw	r1, #54612	; 0xd554
   33054:	mov	r0, #1
   33058:	movt	r1, #3
   3305c:	bl	12794 <__printf_chk@plt>
   33060:	b	33074 <crc32@@Base+0x1961c>
   33064:	movw	r2, #54560	; 0xd520
   33068:	movt	r2, #3
   3306c:	cmp	r5, #0
   33070:	bne	33050 <crc32@@Base+0x195f8>
   33074:	ldr	r6, [r4, #12]
   33078:	cmp	r6, #1
   3307c:	bne	33154 <crc32@@Base+0x196fc>
   33080:	ldr	r3, [r4, #16]
   33084:	cmp	r3, #512	; 0x200
   33088:	bne	33154 <crc32@@Base+0x196fc>
   3308c:	movw	r1, #54632	; 0xd568
   33090:	add	r0, r4, #512	; 0x200
   33094:	movt	r1, #3
   33098:	bl	12680 <strcmp@plt>
   3309c:	cmp	r0, #0
   330a0:	bne	33154 <crc32@@Base+0x196fc>
   330a4:	ldr	r2, [r4, #532]	; 0x214
   330a8:	movw	r3, #16962	; 0x4242
   330ac:	movt	r3, #16962	; 0x4242
   330b0:	cmp	r2, r3
   330b4:	bne	33154 <crc32@@Base+0x196fc>
   330b8:	ldr	r1, [r4, #536]	; 0x218
   330bc:	mov	r2, #5
   330c0:	movt	r2, #1
   330c4:	sub	r3, r1, #65536	; 0x10000
   330c8:	sub	r3, r3, #7
   330cc:	cmp	r1, r2
   330d0:	cmpne	r3, #1
   330d4:	bhi	33154 <crc32@@Base+0x196fc>
   330d8:	ldr	r3, [r4, #524]	; 0x20c
   330dc:	movw	r1, #54548	; 0xd514
   330e0:	movt	r1, #3
   330e4:	add	r4, r4, r3
   330e8:	add	r0, r4, #8
   330ec:	bl	12680 <strcmp@plt>
   330f0:	subs	ip, r0, #0
   330f4:	bne	33154 <crc32@@Base+0x196fc>
   330f8:	ldrb	r3, [r4, #26]
   330fc:	cmp	r3, #5
   33100:	bne	33154 <crc32@@Base+0x196fc>
   33104:	cmp	r5, #0
   33108:	beq	3312c <crc32@@Base+0x196d4>
   3310c:	ldr	r2, [r4, #28]
   33110:	movw	r1, #37984	; 0x9460
   33114:	ldr	r3, [r4, #48]	; 0x30
   33118:	mov	r0, r6
   3311c:	movt	r1, #3
   33120:	mov	r5, ip
   33124:	add	r2, r2, r3
   33128:	bl	12794 <__printf_chk@plt>
   3312c:	mov	r0, r5
   33130:	pop	{r4, r5, r6, pc}
   33134:	movw	r1, #54600	; 0xd548
   33138:	mov	r0, r4
   3313c:	movt	r1, #3
   33140:	bl	12680 <strcmp@plt>
   33144:	cmp	r0, #0
   33148:	movweq	r2, #48492	; 0xbd6c
   3314c:	movteq	r2, #3
   33150:	beq	3306c <crc32@@Base+0x19614>
   33154:	mvn	r5, #0
   33158:	mov	r0, r5
   3315c:	pop	{r4, r5, r6, pc}
   33160:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33164:	mov	r2, #4
   33168:	mov	r5, r1
   3316c:	mov	r4, r0
   33170:	movw	r1, #54668	; 0xd58c
   33174:	add	r0, r0, #12
   33178:	movt	r1, #3
   3317c:	bl	121a0 <strncmp@plt>
   33180:	cmp	r0, #0
   33184:	bne	332d8 <crc32@@Base+0x19880>
   33188:	movw	r1, #54676	; 0xd594
   3318c:	add	r0, r4, #16
   33190:	movt	r1, #3
   33194:	bl	12680 <strcmp@plt>
   33198:	cmp	r0, #0
   3319c:	bne	332d8 <crc32@@Base+0x19880>
   331a0:	ldrh	r7, [r4, #26]
   331a4:	movw	r1, #54632	; 0xd568
   331a8:	movt	r1, #3
   331ac:	add	r6, r4, r7
   331b0:	mov	r0, r6
   331b4:	bl	12680 <strcmp@plt>
   331b8:	cmp	r0, #0
   331bc:	bne	332d8 <crc32@@Base+0x19880>
   331c0:	ldr	r2, [r6, #20]
   331c4:	movw	r3, #16962	; 0x4242
   331c8:	movt	r3, #16962	; 0x4242
   331cc:	cmp	r2, r3
   331d0:	bne	332d8 <crc32@@Base+0x19880>
   331d4:	ldr	r2, [r6, #24]
   331d8:	mov	r3, #2
   331dc:	movt	r3, #1
   331e0:	cmp	r2, r3
   331e4:	beq	33260 <crc32@@Base+0x19808>
   331e8:	mov	r3, #9
   331ec:	movt	r3, #1
   331f0:	cmp	r2, r3
   331f4:	bne	332d8 <crc32@@Base+0x19880>
   331f8:	cmp	r5, #0
   331fc:	movw	r2, #54656	; 0xd580
   33200:	movt	r2, #3
   33204:	bne	33270 <crc32@@Base+0x19818>
   33208:	add	r4, r4, r7, lsl #1
   3320c:	movw	r1, #54548	; 0xd514
   33210:	add	r0, r4, #8
   33214:	movt	r1, #3
   33218:	bl	12680 <strcmp@plt>
   3321c:	subs	ip, r0, #0
   33220:	bne	332d8 <crc32@@Base+0x19880>
   33224:	ldrb	r3, [r4, #26]
   33228:	cmp	r3, #2
   3322c:	bne	332d8 <crc32@@Base+0x19880>
   33230:	cmp	r5, #0
   33234:	beq	33258 <crc32@@Base+0x19800>
   33238:	ldr	r2, [r4, #28]
   3323c:	movw	r1, #37984	; 0x9460
   33240:	ldr	r3, [r4, #48]	; 0x30
   33244:	movt	r1, #3
   33248:	mov	r0, #1
   3324c:	mov	r5, ip
   33250:	add	r2, r2, r3
   33254:	bl	12794 <__printf_chk@plt>
   33258:	mov	r0, r5
   3325c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33260:	cmp	r5, #0
   33264:	movw	r2, #54640	; 0xd570
   33268:	movt	r2, #3
   3326c:	beq	33208 <crc32@@Base+0x197b0>
   33270:	movw	r1, #54684	; 0xd59c
   33274:	mov	r0, #1
   33278:	movt	r1, #3
   3327c:	bl	12794 <__printf_chk@plt>
   33280:	ldr	r2, [r6, #24]
   33284:	mov	r3, #2
   33288:	movt	r3, #1
   3328c:	cmp	r2, r3
   33290:	beq	332e4 <crc32@@Base+0x1988c>
   33294:	ldrh	r2, [r4, #26]
   33298:	cmp	r2, #1024	; 0x400
   3329c:	lsrcs	r2, r2, #10
   332a0:	movwcs	r1, #54720	; 0xd5c0
   332a4:	movwcc	r1, #54740	; 0xd5d4
   332a8:	movtcs	r1, #3
   332ac:	movtcc	r1, #3
   332b0:	movcs	r0, #1
   332b4:	movcc	r0, #1
   332b8:	bl	12794 <__printf_chk@plt>
   332bc:	movw	r1, #54760	; 0xd5e8
   332c0:	ldrh	r2, [r4, #30]
   332c4:	movt	r1, #3
   332c8:	mov	r0, #1
   332cc:	bl	12794 <__printf_chk@plt>
   332d0:	ldrh	r7, [r4, #26]
   332d4:	b	33208 <crc32@@Base+0x197b0>
   332d8:	mvn	r5, #0
   332dc:	mov	r0, r5
   332e0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   332e4:	ldrh	r2, [r4, #34]	; 0x22
   332e8:	movw	r1, #54700	; 0xd5ac
   332ec:	ldrh	r3, [r4, #32]
   332f0:	movt	r1, #3
   332f4:	ldrh	r8, [r4, #26]
   332f8:	mov	r0, #1
   332fc:	mov	r9, #0
   33300:	umull	sl, fp, r2, r3
   33304:	lsl	r6, sl, #3
   33308:	lsl	r3, fp, #3
   3330c:	orr	r3, r3, sl, lsr #29
   33310:	umull	r6, r7, r6, r8
   33314:	mla	r7, r3, r8, r7
   33318:	lsr	r2, r6, #30
   3331c:	orr	r2, r2, r7, lsl #2
   33320:	bl	12794 <__printf_chk@plt>
   33324:	b	33294 <crc32@@Base+0x1983c>
   33328:	movw	r3, #34528	; 0x86e0
   3332c:	movt	r3, #30
   33330:	push	{r4, lr}
   33334:	ldr	r2, [r3]
   33338:	cmp	r2, #0
   3333c:	bne	33394 <crc32@@Base+0x1993c>
   33340:	ldr	r0, [r3, #4]
   33344:	mov	ip, #2
   33348:	mov	r2, #9
   3334c:	movt	ip, #1
   33350:	movt	r2, #1
   33354:	cmp	r0, r2
   33358:	cmpne	r0, ip
   3335c:	movw	r0, #34540	; 0x86ec
   33360:	movt	r0, #30
   33364:	ldreq	r3, [r3, #8]
   33368:	movne	r2, #2304	; 0x900
   3336c:	ldrheq	r2, [r3, #26]
   33370:	mov	r3, #8960	; 0x2300
   33374:	str	r0, [r1, #8]
   33378:	lsleq	r2, r2, #1
   3337c:	addeq	r2, r2, #768	; 0x300
   33380:	str	r2, [r1, #4]
   33384:	mov	r1, #255	; 0xff
   33388:	bl	12614 <__memset_chk@plt>
   3338c:	mov	r0, #32
   33390:	pop	{r4, pc}
   33394:	mov	r2, #512	; 0x200
   33398:	movw	r0, #34540	; 0x86ec
   3339c:	str	r2, [r1, #4]
   333a0:	movt	r0, #30
   333a4:	str	r0, [r1, #8]
   333a8:	mov	r1, #255	; 0xff
   333ac:	bl	12308 <memset@plt>
   333b0:	mov	r0, #0
   333b4:	pop	{r4, pc}
   333b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   333bc:	movw	r5, #34528	; 0x86e0
   333c0:	movt	r5, #30
   333c4:	sub	sp, sp, #8
   333c8:	mov	r4, r0
   333cc:	ldr	r6, [r1, #44]	; 0x2c
   333d0:	ldr	r2, [r5]
   333d4:	ldr	r9, [r3, #56]	; 0x38
   333d8:	cmp	r2, #0
   333dc:	bne	33590 <crc32@@Base+0x19b38>
   333e0:	ldr	r7, [r5, #4]
   333e4:	mov	r2, #2
   333e8:	mov	r3, #9
   333ec:	movt	r2, #1
   333f0:	movt	r3, #1
   333f4:	cmp	r7, r3
   333f8:	cmpne	r7, r2
   333fc:	beq	334d0 <crc32@@Base+0x19a78>
   33400:	mov	r3, #7
   33404:	movt	r3, #1
   33408:	cmp	r7, r3
   3340c:	beq	335e8 <crc32@@Base+0x19b90>
   33410:	mov	r3, #5
   33414:	movt	r3, #1
   33418:	cmp	r7, r3
   3341c:	beq	335dc <crc32@@Base+0x19b84>
   33420:	mov	r2, #8
   33424:	movt	r2, #1
   33428:	cmp	r7, r2
   3342c:	movw	r3, #54600	; 0xd548
   33430:	movt	r3, #3
   33434:	movne	r3, #0
   33438:	mov	r1, #12
   3343c:	mov	r0, r4
   33440:	movw	r2, #56260	; 0xdbc4
   33444:	movt	r2, #3
   33448:	bl	12320 <snprintf@plt>
   3344c:	ldr	r8, [r5, #4]
   33450:	mov	r3, #512	; 0x200
   33454:	mov	r7, #1
   33458:	str	r3, [r4, #16]
   3345c:	add	r0, r4, r3
   33460:	add	r5, r4, #1536	; 0x600
   33464:	str	r7, [r4, #12]
   33468:	mov	r2, #8
   3346c:	movw	r1, #54632	; 0xd568
   33470:	movt	r1, #3
   33474:	bl	126e0 <strncpy@plt>
   33478:	mov	r1, #1536	; 0x600
   3347c:	str	r8, [r4, #536]	; 0x218
   33480:	mov	r0, r5
   33484:	str	r1, [r4, #524]	; 0x20c
   33488:	mov	ip, #5
   3348c:	str	r1, [r4, #540]	; 0x21c
   33490:	mov	r3, r9
   33494:	str	r7, [r4, #520]	; 0x208
   33498:	movw	r2, #16962	; 0x4242
   3349c:	str	r6, [r4, #528]	; 0x210
   334a0:	movt	r2, #16962	; 0x4242
   334a4:	str	r6, [r4, #544]	; 0x220
   334a8:	str	r2, [r4, #532]	; 0x214
   334ac:	mov	r2, r1
   334b0:	str	ip, [sp]
   334b4:	mov	r1, r6
   334b8:	bl	32e48 <crc32@@Base+0x193f0>
   334bc:	mov	r0, r5
   334c0:	sub	r1, r6, #1568	; 0x620
   334c4:	add	sp, sp, #8
   334c8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   334cc:	b	32fa8 <crc32@@Base+0x19550>
   334d0:	add	sl, r0, #512	; 0x200
   334d4:	ldr	r8, [r5, #8]
   334d8:	mov	r5, r0
   334dc:	mov	r2, #128	; 0x80
   334e0:	mov	r0, r5
   334e4:	mov	r1, r8
   334e8:	add	r5, r5, r2
   334ec:	bl	125c0 <memcpy@plt>
   334f0:	cmp	sl, r5
   334f4:	bne	334dc <crc32@@Base+0x19a84>
   334f8:	ldrh	r1, [r8, #26]
   334fc:	add	r0, r6, r1
   33500:	add	r5, r4, r1
   33504:	sub	r0, r0, #1
   33508:	bl	36034 <crc32@@Base+0x1c5dc>
   3350c:	mov	r2, #8
   33510:	movw	r1, #54632	; 0xd568
   33514:	movt	r1, #3
   33518:	mov	sl, r0
   3351c:	mov	r0, r5
   33520:	bl	126e0 <strncpy@plt>
   33524:	ldrh	r2, [r8, #26]
   33528:	mov	ip, #2
   3352c:	str	r7, [r5, #24]
   33530:	str	sl, [r5, #16]
   33534:	mov	r3, r9
   33538:	lsl	r2, r2, #1
   3353c:	str	sl, [r5, #32]
   33540:	add	r4, r4, r2
   33544:	str	ip, [r5, #12]
   33548:	str	ip, [r5, #28]
   3354c:	movw	r1, #16962	; 0x4242
   33550:	mov	r0, r4
   33554:	movt	r1, #16962	; 0x4242
   33558:	str	r1, [r5, #20]
   3355c:	mov	r1, #1
   33560:	str	r1, [r5, #8]
   33564:	str	r1, [r5, #36]	; 0x24
   33568:	mov	r1, r6
   3356c:	str	ip, [sp]
   33570:	bl	32e48 <crc32@@Base+0x193f0>
   33574:	ldrh	r1, [r8, #26]
   33578:	mov	r0, r4
   3357c:	sub	r1, r6, r1, lsl #1
   33580:	sub	r1, r1, #32
   33584:	add	sp, sp, #8
   33588:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   3358c:	b	32fa8 <crc32@@Base+0x19550>
   33590:	add	r3, r0, #8
   33594:	str	r9, [r0, #40]	; 0x28
   33598:	sub	r6, r6, #512	; 0x200
   3359c:	mvn	r1, #0
   335a0:	str	r6, [r0, #4]
   335a4:	movw	r2, #5768	; 0x1688
   335a8:	str	r1, [r4, #44]	; 0x2c
   335ac:	movt	r2, #22664	; 0x5888
   335b0:	mov	r0, r3
   335b4:	str	r2, [r4]
   335b8:	mov	r1, #0
   335bc:	mov	r2, #32
   335c0:	bl	12308 <memset@plt>
   335c4:	movw	r1, #64852	; 0xfd54
   335c8:	mov	r2, #32
   335cc:	movt	r1, #4
   335d0:	add	sp, sp, #8
   335d4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   335d8:	b	126e0 <strncpy@plt>
   335dc:	movw	r3, #54588	; 0xd53c
   335e0:	movt	r3, #3
   335e4:	b	33438 <crc32@@Base+0x199e0>
   335e8:	movw	r3, #54580	; 0xd534
   335ec:	movt	r3, #3
   335f0:	b	33438 <crc32@@Base+0x199e0>
   335f4:	ldr	r2, [r0]
   335f8:	movw	r3, #5768	; 0x1688
   335fc:	movt	r3, #22664	; 0x5888
   33600:	cmp	r2, r3
   33604:	push	{r4, lr}
   33608:	mov	r4, r0
   3360c:	beq	3364c <crc32@@Base+0x19bf4>
   33610:	movw	r0, #54812	; 0xd61c
   33614:	movt	r0, #3
   33618:	bl	12290 <puts@plt>
   3361c:	movw	r1, #54860	; 0xd64c
   33620:	mov	r0, r4
   33624:	movt	r1, #3
   33628:	bl	12680 <strcmp@plt>
   3362c:	mov	r1, #1
   33630:	cmp	r0, #0
   33634:	mov	r0, r4
   33638:	beq	33644 <crc32@@Base+0x19bec>
   3363c:	pop	{r4, lr}
   33640:	b	33008 <crc32@@Base+0x195b0>
   33644:	pop	{r4, lr}
   33648:	b	33160 <crc32@@Base+0x19708>
   3364c:	movw	r0, #54780	; 0xd5fc
   33650:	movt	r0, #3
   33654:	bl	12290 <puts@plt>
   33658:	ldr	r2, [r4, #40]	; 0x28
   3365c:	movw	r1, #37984	; 0x9460
   33660:	mov	r0, #1
   33664:	movt	r1, #3
   33668:	pop	{r4, lr}
   3366c:	b	12794 <__printf_chk@plt>
   33670:	ldr	r1, [r0]
   33674:	movw	r2, #5768	; 0x1688
   33678:	movt	r2, #22664	; 0x5888
   3367c:	cmp	r1, r2
   33680:	beq	336b8 <crc32@@Base+0x19c60>
   33684:	push	{r4, lr}
   33688:	movw	r1, #54860	; 0xd64c
   3368c:	movt	r1, #3
   33690:	mov	r4, r0
   33694:	bl	12680 <strcmp@plt>
   33698:	subs	r1, r0, #0
   3369c:	mov	r0, r4
   336a0:	beq	336b0 <crc32@@Base+0x19c58>
   336a4:	mov	r1, #0
   336a8:	pop	{r4, lr}
   336ac:	b	33008 <crc32@@Base+0x195b0>
   336b0:	pop	{r4, lr}
   336b4:	b	33160 <crc32@@Base+0x19708>
   336b8:	mov	r0, #0
   336bc:	bx	lr
   336c0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   336c4:	ldr	r3, [r0, #56]	; 0x38
   336c8:	cmp	r3, #0
   336cc:	beq	33b14 <crc32@@Base+0x1a0bc>
   336d0:	ldr	r0, [r0, #64]	; 0x40
   336d4:	cmp	r0, #0
   336d8:	beq	33b3c <crc32@@Base+0x1a0e4>
   336dc:	bl	1232c <__strdup@plt>
   336e0:	movw	r6, #64852	; 0xfd54
   336e4:	subs	r8, r0, #0
   336e8:	movteq	r6, #4
   336ec:	beq	33970 <crc32@@Base+0x19f18>
   336f0:	movw	r7, #54948	; 0xd6a4
   336f4:	mov	r4, #19
   336f8:	movt	r6, #4
   336fc:	movt	r7, #3
   33700:	movt	r4, #128	; 0x80
   33704:	mov	r9, r8
   33708:	b	33808 <crc32@@Base+0x19db0>
   3370c:	mov	r0, sl
   33710:	bl	125e4 <strlen@plt>
   33714:	sub	r0, r0, #1
   33718:	adds	r1, sl, r0
   3371c:	bcs	33770 <crc32@@Base+0x19d18>
   33720:	ldrb	r3, [sl, r0]
   33724:	sub	r3, r3, #9
   33728:	uxtb	r3, r3
   3372c:	cmp	r3, #23
   33730:	bhi	33770 <crc32@@Base+0x19d18>
   33734:	mvn	r3, r4, lsr r3
   33738:	tst	r3, #1
   3373c:	bne	33770 <crc32@@Base+0x19d18>
   33740:	sub	r2, r1, #1
   33744:	sub	r0, sl, #1
   33748:	cmp	r2, r0
   3374c:	mov	r1, r2
   33750:	sub	r2, r2, #1
   33754:	beq	33770 <crc32@@Base+0x19d18>
   33758:	ldrb	r3, [r1]
   3375c:	sub	r3, r3, #9
   33760:	uxtb	r3, r3
   33764:	cmp	r3, #23
   33768:	mvn	r3, r4, lsr r3
   3376c:	bls	33944 <crc32@@Base+0x19eec>
   33770:	ldrb	r3, [r1, #1]
   33774:	sub	r3, r3, #9
   33778:	uxtb	r3, r3
   3377c:	cmp	r3, #23
   33780:	bhi	33790 <crc32@@Base+0x19d38>
   33784:	mvn	r3, r4, lsr r3
   33788:	ands	r3, r3, #1
   3378c:	strbeq	r3, [r1, #1]
   33790:	mov	r1, r7
   33794:	mov	r0, r9
   33798:	bl	12680 <strcmp@plt>
   3379c:	movw	r1, #54956	; 0xd6ac
   337a0:	movt	r1, #3
   337a4:	cmp	r0, #0
   337a8:	mov	r0, r9
   337ac:	streq	sl, [r6, #32]
   337b0:	bl	12680 <strcmp@plt>
   337b4:	ldrb	r3, [r9]
   337b8:	cmp	r0, #0
   337bc:	streq	sl, [r6, #36]	; 0x24
   337c0:	cmp	r3, #108	; 0x6c
   337c4:	bne	337e0 <crc32@@Base+0x19d88>
   337c8:	ldrb	r3, [r9, #1]
   337cc:	cmp	r3, #107	; 0x6b
   337d0:	bne	337e0 <crc32@@Base+0x19d88>
   337d4:	ldrb	r3, [r9, #2]
   337d8:	cmp	r3, #0
   337dc:	streq	sl, [r6, #40]	; 0x28
   337e0:	mov	r0, r9
   337e4:	movw	r1, #54968	; 0xd6b8
   337e8:	movt	r1, #3
   337ec:	bl	12680 <strcmp@plt>
   337f0:	cmp	r0, #0
   337f4:	beq	33a6c <crc32@@Base+0x1a014>
   337f8:	cmp	r5, #0
   337fc:	beq	33970 <crc32@@Base+0x19f18>
   33800:	adds	r9, r5, #1
   33804:	beq	33970 <crc32@@Base+0x19f18>
   33808:	mov	r1, #59	; 0x3b
   3380c:	mov	r0, r9
   33810:	bl	12788 <strchr@plt>
   33814:	subs	r5, r0, #0
   33818:	beq	3395c <crc32@@Base+0x19f04>
   3381c:	mov	r3, #0
   33820:	mov	r1, #61	; 0x3d
   33824:	strb	r3, [r5]
   33828:	mov	r0, r9
   3382c:	bl	12788 <strchr@plt>
   33830:	subs	fp, r0, #0
   33834:	beq	33800 <crc32@@Base+0x19da8>
   33838:	mov	r3, #0
   3383c:	strb	r3, [fp]
   33840:	ldrb	r3, [r9]
   33844:	add	sl, fp, #1
   33848:	sub	r3, r3, #9
   3384c:	uxtb	r3, r3
   33850:	cmp	r3, #23
   33854:	bhi	3387c <crc32@@Base+0x19e24>
   33858:	mvn	r3, r4, lsr r3
   3385c:	tst	r3, #1
   33860:	bne	3387c <crc32@@Base+0x19e24>
   33864:	ldrb	r3, [r9, #1]!
   33868:	sub	r3, r3, #9
   3386c:	uxtb	r3, r3
   33870:	cmp	r3, #23
   33874:	mvn	r3, r4, lsr r3
   33878:	bls	3385c <crc32@@Base+0x19e04>
   3387c:	mov	r0, r9
   33880:	bl	125e4 <strlen@plt>
   33884:	sub	r0, r0, #1
   33888:	adds	r1, r9, r0
   3388c:	bcs	338e0 <crc32@@Base+0x19e88>
   33890:	ldrb	r3, [r9, r0]
   33894:	sub	r3, r3, #9
   33898:	uxtb	r3, r3
   3389c:	cmp	r3, #23
   338a0:	bhi	338e0 <crc32@@Base+0x19e88>
   338a4:	mvn	r3, r4, lsr r3
   338a8:	tst	r3, #1
   338ac:	bne	338e0 <crc32@@Base+0x19e88>
   338b0:	sub	r2, r1, #1
   338b4:	sub	r0, r9, #1
   338b8:	cmp	r2, r0
   338bc:	mov	r1, r2
   338c0:	sub	r2, r2, #1
   338c4:	beq	338e0 <crc32@@Base+0x19e88>
   338c8:	ldrb	r3, [r1]
   338cc:	sub	r3, r3, #9
   338d0:	uxtb	r3, r3
   338d4:	cmp	r3, #23
   338d8:	mvn	r3, r4, lsr r3
   338dc:	bls	33950 <crc32@@Base+0x19ef8>
   338e0:	ldrb	r3, [r1, #1]
   338e4:	sub	r3, r3, #9
   338e8:	uxtb	r3, r3
   338ec:	cmp	r3, #23
   338f0:	bhi	33900 <crc32@@Base+0x19ea8>
   338f4:	mvn	r3, r4, lsr r3
   338f8:	ands	r3, r3, #1
   338fc:	strbeq	r3, [r1, #1]
   33900:	ldrb	r3, [fp, #1]
   33904:	sub	r3, r3, #9
   33908:	uxtb	r3, r3
   3390c:	cmp	r3, #23
   33910:	bhi	3370c <crc32@@Base+0x19cb4>
   33914:	mvn	r3, r4, lsr r3
   33918:	tst	r3, #1
   3391c:	bne	3370c <crc32@@Base+0x19cb4>
   33920:	ldrb	r2, [sl, #1]!
   33924:	sub	r2, r2, #9
   33928:	uxtb	r2, r2
   3392c:	cmp	r2, #23
   33930:	mvn	r2, r4, lsr r2
   33934:	bhi	3370c <crc32@@Base+0x19cb4>
   33938:	tst	r2, #1
   3393c:	beq	33920 <crc32@@Base+0x19ec8>
   33940:	b	3370c <crc32@@Base+0x19cb4>
   33944:	tst	r3, #1
   33948:	beq	33748 <crc32@@Base+0x19cf0>
   3394c:	b	33770 <crc32@@Base+0x19d18>
   33950:	tst	r3, #1
   33954:	beq	338b8 <crc32@@Base+0x19e60>
   33958:	b	338e0 <crc32@@Base+0x19e88>
   3395c:	mov	r1, #61	; 0x3d
   33960:	mov	r0, r9
   33964:	bl	12788 <strchr@plt>
   33968:	subs	fp, r0, #0
   3396c:	bne	33838 <crc32@@Base+0x19de0>
   33970:	ldr	r3, [r6, #40]	; 0x28
   33974:	cmp	r3, #0
   33978:	beq	33988 <crc32@@Base+0x19f30>
   3397c:	ldrb	r3, [r3]
   33980:	cmp	r3, #49	; 0x31
   33984:	beq	33ab4 <crc32@@Base+0x1a05c>
   33988:	ldr	r7, [r6, #32]
   3398c:	movw	r0, #38980	; 0x9844
   33990:	movt	r0, #3
   33994:	movw	r5, #53408	; 0xd0a0
   33998:	mov	r4, #0
   3399c:	movt	r5, #3
   339a0:	mov	r1, r7
   339a4:	bl	12680 <strcmp@plt>
   339a8:	cmp	r0, #0
   339ac:	beq	339d0 <crc32@@Base+0x19f78>
   339b0:	add	r4, r4, #1
   339b4:	cmp	r4, #5
   339b8:	beq	33a8c <crc32@@Base+0x1a034>
   339bc:	ldr	r0, [r5, r4, lsl #3]
   339c0:	mov	r1, r7
   339c4:	bl	12680 <strcmp@plt>
   339c8:	cmp	r0, #0
   339cc:	bne	339b0 <crc32@@Base+0x19f58>
   339d0:	movw	r3, #53408	; 0xd0a0
   339d4:	movt	r3, #3
   339d8:	add	r3, r3, r4, lsl #3
   339dc:	movw	r9, #34528	; 0x86e0
   339e0:	movt	r9, #30
   339e4:	ldr	r5, [r3, #4]
   339e8:	str	r5, [r9, #4]
   339ec:	movw	r0, #54872	; 0xd658
   339f0:	ldr	r7, [r6, #36]	; 0x24
   339f4:	movt	r0, #3
   339f8:	mov	r4, #0
   339fc:	ldr	sl, [pc, #416]	; 33ba4 <crc32@@Base+0x1a14c>
   33a00:	b	33a08 <crc32@@Base+0x19fb0>
   33a04:	ldr	r0, [sl, r4, lsl #3]
   33a08:	mov	r1, r7
   33a0c:	bl	12680 <strcmp@plt>
   33a10:	cmp	r0, #0
   33a14:	beq	33a9c <crc32@@Base+0x1a044>
   33a18:	add	r4, r4, #1
   33a1c:	cmp	r4, #9
   33a20:	bne	33a04 <crc32@@Base+0x19fac>
   33a24:	mov	r0, r8
   33a28:	bl	1214c <free@plt>
   33a2c:	cmp	r5, #0
   33a30:	beq	33ad4 <crc32@@Base+0x1a07c>
   33a34:	mov	r3, #2
   33a38:	mov	r0, #9
   33a3c:	movt	r3, #1
   33a40:	movt	r0, #1
   33a44:	cmp	r5, r0
   33a48:	cmpne	r5, r3
   33a4c:	moveq	r0, #1
   33a50:	movne	r0, #0
   33a54:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33a58:	ldr	r3, [r9, #8]
   33a5c:	cmp	r3, #0
   33a60:	beq	33b64 <crc32@@Base+0x1a10c>
   33a64:	mov	r0, #0
   33a68:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33a6c:	mov	r3, sl
   33a70:	movw	r2, #56260	; 0xdbc4
   33a74:	movw	r0, #64852	; 0xfd54
   33a78:	movt	r2, #3
   33a7c:	mov	r1, #32
   33a80:	movt	r0, #4
   33a84:	bl	12320 <snprintf@plt>
   33a88:	b	337f8 <crc32@@Base+0x19da0>
   33a8c:	movw	r9, #34528	; 0x86e0
   33a90:	movt	r9, #30
   33a94:	ldr	r5, [r9, #4]
   33a98:	b	339ec <crc32@@Base+0x19f94>
   33a9c:	movw	r3, #53408	; 0xd0a0
   33aa0:	movt	r3, #3
   33aa4:	add	r3, r3, r4, lsl #3
   33aa8:	ldr	r3, [r3, #44]	; 0x2c
   33aac:	str	r3, [r9, #8]
   33ab0:	b	33a24 <crc32@@Base+0x19fcc>
   33ab4:	movw	r3, #34528	; 0x86e0
   33ab8:	movt	r3, #30
   33abc:	mov	r0, r8
   33ac0:	mov	r2, #1
   33ac4:	str	r2, [r3]
   33ac8:	bl	1214c <free@plt>
   33acc:	mov	r0, #0
   33ad0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33ad4:	movw	r4, #65196	; 0xfeac
   33ad8:	movt	r4, #4
   33adc:	mov	r2, #41	; 0x29
   33ae0:	mov	r1, #1
   33ae4:	ldr	r3, [r4]
   33ae8:	movw	r0, #54976	; 0xd6c0
   33aec:	movt	r0, #3
   33af0:	bl	1259c <fwrite@plt>
   33af4:	ldr	r3, [r4]
   33af8:	mov	r2, #40	; 0x28
   33afc:	mov	r1, #1
   33b00:	movw	r0, #55020	; 0xd6ec
   33b04:	movt	r0, #3
   33b08:	bl	1259c <fwrite@plt>
   33b0c:	mvn	r0, #21
   33b10:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33b14:	movw	r3, #65196	; 0xfeac
   33b18:	movt	r3, #4
   33b1c:	mov	r2, #33	; 0x21
   33b20:	mov	r1, #1
   33b24:	ldr	r3, [r3]
   33b28:	movw	r0, #54880	; 0xd660
   33b2c:	movt	r0, #3
   33b30:	bl	1259c <fwrite@plt>
   33b34:	mvn	r0, #21
   33b38:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33b3c:	movw	r3, #65196	; 0xfeac
   33b40:	movt	r3, #4
   33b44:	mov	r2, #31
   33b48:	mov	r1, #1
   33b4c:	ldr	r3, [r3]
   33b50:	movw	r0, #54916	; 0xd684
   33b54:	movt	r0, #3
   33b58:	bl	1259c <fwrite@plt>
   33b5c:	mvn	r0, #21
   33b60:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33b64:	movw	r4, #65196	; 0xfeac
   33b68:	movt	r4, #4
   33b6c:	mov	r2, #40	; 0x28
   33b70:	mov	r1, #1
   33b74:	ldr	r3, [r4]
   33b78:	movw	r0, #55064	; 0xd718
   33b7c:	movt	r0, #3
   33b80:	bl	1259c <fwrite@plt>
   33b84:	ldr	r0, [r4]
   33b88:	ldr	r3, [r6, #32]
   33b8c:	mov	r1, #1
   33b90:	movw	r2, #55108	; 0xd744
   33b94:	movt	r2, #3
   33b98:	bl	122d8 <__fprintf_chk@plt>
   33b9c:	mvn	r0, #21
   33ba0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33ba4:	andeq	sp, r3, r8, asr #1
   33ba8:	push	{r4, r5, r6, lr}
   33bac:	mov	r4, r0
   33bb0:	mov	r5, r1
   33bb4:	bl	1265c <ENGINE_load_builtin_engines@plt>
   33bb8:	mov	r0, r4
   33bbc:	bl	1238c <ENGINE_by_id@plt>
   33bc0:	subs	r4, r0, #0
   33bc4:	beq	33c50 <crc32@@Base+0x1a1f8>
   33bc8:	bl	12260 <ENGINE_init@plt>
   33bcc:	cmp	r0, #0
   33bd0:	beq	33bf0 <crc32@@Base+0x1a198>
   33bd4:	mov	r0, r4
   33bd8:	bl	1235c <ENGINE_set_default_RSA@plt>
   33bdc:	cmp	r0, #0
   33be0:	beq	33c24 <crc32@@Base+0x1a1cc>
   33be4:	str	r4, [r5]
   33be8:	mov	r0, #0
   33bec:	pop	{r4, r5, r6, pc}
   33bf0:	movw	r3, #65196	; 0xfeac
   33bf4:	movt	r3, #4
   33bf8:	movw	r0, #55336	; 0xd828
   33bfc:	mov	r2, #27
   33c00:	ldr	r3, [r3]
   33c04:	movt	r0, #3
   33c08:	mov	r1, #1
   33c0c:	bl	1259c <fwrite@plt>
   33c10:	mov	r0, r4
   33c14:	bl	121c4 <ENGINE_free@plt>
   33c18:	bl	12278 <ENGINE_cleanup@plt>
   33c1c:	mvn	r0, #0
   33c20:	pop	{r4, r5, r6, pc}
   33c24:	movw	r3, #65196	; 0xfeac
   33c28:	movt	r3, #4
   33c2c:	mov	r2, #39	; 0x27
   33c30:	mov	r1, #1
   33c34:	ldr	r3, [r3]
   33c38:	movw	r0, #55364	; 0xd844
   33c3c:	movt	r0, #3
   33c40:	bl	1259c <fwrite@plt>
   33c44:	mov	r0, r4
   33c48:	bl	12128 <ENGINE_finish@plt>
   33c4c:	b	33c10 <crc32@@Base+0x1a1b8>
   33c50:	movw	r3, #65196	; 0xfeac
   33c54:	movt	r3, #4
   33c58:	movw	r0, #55312	; 0xd810
   33c5c:	mov	r2, #23
   33c60:	ldr	r3, [r3]
   33c64:	mov	r1, #1
   33c68:	movt	r0, #3
   33c6c:	bl	1259c <fwrite@plt>
   33c70:	b	33c18 <crc32@@Base+0x1a1c0>
   33c74:	push	{r4, r5, r6, lr}
   33c78:	mov	r6, r0
   33c7c:	bl	124f4 <ERR_get_error@plt>
   33c80:	movw	r4, #65196	; 0xfeac
   33c84:	movt	r4, #4
   33c88:	ldr	r1, [r4]
   33c8c:	mov	r5, r0
   33c90:	mov	r0, r6
   33c94:	bl	12734 <fputs@plt>
   33c98:	mov	r0, r5
   33c9c:	mov	r1, #0
   33ca0:	ldr	r4, [r4]
   33ca4:	bl	1208c <ERR_error_string@plt>
   33ca8:	mov	r1, #1
   33cac:	movw	r2, #29376	; 0x72c0
   33cb0:	movt	r2, #3
   33cb4:	mov	r3, r0
   33cb8:	mov	r0, r4
   33cbc:	bl	122d8 <__fprintf_chk@plt>
   33cc0:	mvn	r0, #0
   33cc4:	pop	{r4, r5, r6, pc}
   33cc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33ccc:	movw	r4, #61168	; 0xeef0
   33cd0:	movt	r4, #4
   33cd4:	mov	r7, r3
   33cd8:	sub	sp, sp, #1040	; 0x410
   33cdc:	mov	r5, r2
   33ce0:	ldr	r3, [r4]
   33ce4:	sub	sp, sp, #8
   33ce8:	mov	r2, #0
   33cec:	mov	r8, r0
   33cf0:	str	r2, [r7]
   33cf4:	mov	r0, r5
   33cf8:	mov	sl, r1
   33cfc:	str	r3, [sp, #1044]	; 0x414
   33d00:	bl	12194 <ENGINE_get_id@plt>
   33d04:	cmp	r0, #0
   33d08:	beq	33de0 <crc32@@Base+0x1a388>
   33d0c:	movw	r1, #55404	; 0xd86c
   33d10:	movt	r1, #3
   33d14:	bl	12680 <strcmp@plt>
   33d18:	subs	r9, r0, #0
   33d1c:	bne	33de0 <crc32@@Base+0x1a388>
   33d20:	cmp	r8, #0
   33d24:	add	r6, sp, #20
   33d28:	mov	r3, #1024	; 0x400
   33d2c:	beq	33da8 <crc32@@Base+0x1a350>
   33d30:	movw	r2, #55412	; 0xd874
   33d34:	str	sl, [sp, #8]
   33d38:	movt	r2, #3
   33d3c:	str	r8, [sp, #4]
   33d40:	str	r2, [sp]
   33d44:	mov	r0, r6
   33d48:	mov	r1, r3
   33d4c:	mov	r2, #1
   33d50:	bl	125f0 <__snprintf_chk@plt>
   33d54:	mov	r3, #0
   33d58:	mov	r0, r5
   33d5c:	mov	r1, r6
   33d60:	mov	r2, r3
   33d64:	bl	120bc <ENGINE_load_private_key@plt>
   33d68:	subs	r5, r0, #0
   33d6c:	beq	33dcc <crc32@@Base+0x1a374>
   33d70:	bl	122c0 <EVP_PKEY_get1_RSA@plt>
   33d74:	subs	r6, r0, #0
   33d78:	beq	33e08 <crc32@@Base+0x1a3b0>
   33d7c:	mov	r0, r5
   33d80:	bl	120d4 <EVP_PKEY_free@plt>
   33d84:	str	r6, [r7]
   33d88:	ldr	r2, [sp, #1044]	; 0x414
   33d8c:	mov	r0, r9
   33d90:	ldr	r3, [r4]
   33d94:	cmp	r2, r3
   33d98:	bne	33e24 <crc32@@Base+0x1a3cc>
   33d9c:	add	sp, sp, #1040	; 0x410
   33da0:	add	sp, sp, #8
   33da4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   33da8:	str	sl, [sp, #4]
   33dac:	movw	r2, #55448	; 0xd898
   33db0:	mov	r0, r6
   33db4:	movt	r2, #3
   33db8:	mov	r1, r3
   33dbc:	str	r2, [sp]
   33dc0:	mov	r2, #1
   33dc4:	bl	125f0 <__snprintf_chk@plt>
   33dc8:	b	33d54 <crc32@@Base+0x1a2fc>
   33dcc:	movw	r0, #55504	; 0xd8d0
   33dd0:	movt	r0, #3
   33dd4:	bl	33c74 <crc32@@Base+0x1a21c>
   33dd8:	mov	r9, r0
   33ddc:	b	33d88 <crc32@@Base+0x1a330>
   33de0:	movw	r3, #65196	; 0xfeac
   33de4:	movt	r3, #4
   33de8:	movw	r0, #55480	; 0xd8b8
   33dec:	mov	r2, #21
   33df0:	ldr	r3, [r3]
   33df4:	mov	r1, #1
   33df8:	movt	r0, #3
   33dfc:	mvn	r9, #94	; 0x5e
   33e00:	bl	1259c <fwrite@plt>
   33e04:	b	33d88 <crc32@@Base+0x1a330>
   33e08:	movw	r0, #55544	; 0xd8f8
   33e0c:	movt	r0, #3
   33e10:	bl	33c74 <crc32@@Base+0x1a21c>
   33e14:	mov	r0, r5
   33e18:	bl	120d4 <EVP_PKEY_free@plt>
   33e1c:	mvn	r9, #21
   33e20:	b	33d88 <crc32@@Base+0x1a330>
   33e24:	bl	124b8 <__stack_chk_fail@plt>
   33e28:	push	{r4, r5, r6, r7, r8, lr}
   33e2c:	movw	r5, #61168	; 0xeef0
   33e30:	movt	r5, #4
   33e34:	sub	sp, sp, #1040	; 0x410
   33e38:	sub	sp, sp, #8
   33e3c:	mov	r3, #1024	; 0x400
   33e40:	ldr	ip, [r5]
   33e44:	mov	r6, r2
   33e48:	str	r1, [sp, #8]
   33e4c:	movw	r2, #55580	; 0xd91c
   33e50:	str	r0, [sp, #4]
   33e54:	mov	r1, r3
   33e58:	movt	r2, #3
   33e5c:	mov	r4, #0
   33e60:	str	r2, [sp]
   33e64:	add	r0, sp, #20
   33e68:	mov	r2, #1
   33e6c:	str	r4, [r6]
   33e70:	str	ip, [sp, #1044]	; 0x414
   33e74:	bl	125f0 <__snprintf_chk@plt>
   33e78:	add	r0, sp, #20
   33e7c:	movw	r1, #50292	; 0xc474
   33e80:	movt	r1, #3
   33e84:	bl	12350 <fopen@plt>
   33e88:	subs	r7, r0, #0
   33e8c:	beq	33ed4 <crc32@@Base+0x1a47c>
   33e90:	add	r3, sp, #20
   33e94:	mov	r2, r4
   33e98:	mov	r1, r4
   33e9c:	bl	1220c <PEM_read_RSAPrivateKey@plt>
   33ea0:	subs	r8, r0, #0
   33ea4:	beq	33f10 <crc32@@Base+0x1a4b8>
   33ea8:	mov	r0, r7
   33eac:	bl	12620 <fclose@plt>
   33eb0:	mov	r0, r4
   33eb4:	str	r8, [r6]
   33eb8:	ldr	r2, [sp, #1044]	; 0x414
   33ebc:	ldr	r3, [r5]
   33ec0:	cmp	r2, r3
   33ec4:	bne	33f2c <crc32@@Base+0x1a4d4>
   33ec8:	add	sp, sp, #1040	; 0x410
   33ecc:	add	sp, sp, #8
   33ed0:	pop	{r4, r5, r6, r7, r8, pc}
   33ed4:	movw	r3, #65196	; 0xfeac
   33ed8:	movt	r3, #4
   33edc:	ldr	r4, [r3]
   33ee0:	bl	126b0 <__errno_location@plt>
   33ee4:	ldr	r0, [r0]
   33ee8:	bl	12224 <strerror@plt>
   33eec:	add	r3, sp, #20
   33ef0:	movw	r2, #55592	; 0xd928
   33ef4:	mov	r1, #1
   33ef8:	movt	r2, #3
   33efc:	str	r0, [sp]
   33f00:	mov	r0, r4
   33f04:	bl	122d8 <__fprintf_chk@plt>
   33f08:	mvn	r0, #1
   33f0c:	b	33eb8 <crc32@@Base+0x1a460>
   33f10:	movw	r0, #55636	; 0xd954
   33f14:	movt	r0, #3
   33f18:	bl	33c74 <crc32@@Base+0x1a21c>
   33f1c:	mov	r0, r7
   33f20:	bl	12620 <fclose@plt>
   33f24:	mvn	r0, #70	; 0x46
   33f28:	b	33eb8 <crc32@@Base+0x1a460>
   33f2c:	bl	124b8 <__stack_chk_fail@plt>
   33f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33f34:	sub	sp, sp, #28
   33f38:	mov	r5, r3
   33f3c:	ldr	r4, [sp, #64]	; 0x40
   33f40:	str	r2, [sp, #20]
   33f44:	cmp	r4, #0
   33f48:	add	r2, r4, #31
   33f4c:	strd	r0, [sp, #12]
   33f50:	movlt	r4, r2
   33f54:	bl	1277c <BN_new@plt>
   33f58:	mov	r6, r0
   33f5c:	bl	1277c <BN_new@plt>
   33f60:	mov	sl, r0
   33f64:	bl	1277c <BN_new@plt>
   33f68:	mov	fp, r0
   33f6c:	bl	1277c <BN_new@plt>
   33f70:	cmp	sl, #0
   33f74:	cmpne	r6, #0
   33f78:	beq	34088 <crc32@@Base+0x1a630>
   33f7c:	cmp	r0, #0
   33f80:	cmpne	fp, #0
   33f84:	mov	r8, r0
   33f88:	beq	34088 <crc32@@Base+0x1a630>
   33f8c:	bl	123bc <BN_CTX_new@plt>
   33f90:	asr	r4, r4, #5
   33f94:	mov	r1, #2
   33f98:	lsl	r3, r4, r1
   33f9c:	str	r3, [sp, #8]
   33fa0:	mov	r4, r3
   33fa4:	mov	r9, r0
   33fa8:	mov	r0, sl
   33fac:	bl	124d0 <BN_set_word@plt>
   33fb0:	mov	r1, #32
   33fb4:	mov	r0, fp
   33fb8:	bl	124d0 <BN_set_word@plt>
   33fbc:	mov	r3, r9
   33fc0:	mov	r2, fp
   33fc4:	mov	r1, sl
   33fc8:	mov	r0, r8
   33fcc:	bl	1244c <BN_exp@plt>
   33fd0:	mov	r0, r4
   33fd4:	bl	125cc <malloc@plt>
   33fd8:	subs	r7, r0, #0
   33fdc:	beq	340b0 <crc32@@Base+0x1a658>
   33fe0:	ldr	r3, [sp, #8]
   33fe4:	sub	r4, r3, #4
   33fe8:	adds	r4, r7, r4
   33fec:	bcs	34030 <crc32@@Base+0x1a5d8>
   33ff0:	mov	r3, r8
   33ff4:	mov	r2, r5
   33ff8:	mov	r1, r6
   33ffc:	str	r9, [sp]
   34000:	mov	r0, #0
   34004:	bl	12398 <BN_div@plt>
   34008:	mov	r0, r6
   3400c:	bl	1250c <BN_get_word@plt>
   34010:	mov	r2, #32
   34014:	mov	r1, r5
   34018:	rev	r3, r0
   3401c:	mov	r0, r5
   34020:	str	r3, [r4], #-4
   34024:	bl	12668 <BN_rshift@plt>
   34028:	cmp	r7, r4
   3402c:	bls	33ff0 <crc32@@Base+0x1a598>
   34030:	ldr	r3, [sp, #8]
   34034:	add	r0, sp, #12
   34038:	str	r3, [sp]
   3403c:	mov	r3, r7
   34040:	ldm	r0, {r0, r1, r2}
   34044:	bl	2f2b8 <crc32@@Base+0x15860>
   34048:	mov	r4, r0
   3404c:	mov	r0, r7
   34050:	bl	1214c <free@plt>
   34054:	mov	r0, r6
   34058:	bl	1226c <BN_free@plt>
   3405c:	mov	r0, sl
   34060:	bl	1226c <BN_free@plt>
   34064:	mov	r0, fp
   34068:	bl	1226c <BN_free@plt>
   3406c:	mov	r0, r8
   34070:	bl	1226c <BN_free@plt>
   34074:	cmp	r4, #0
   34078:	mvnne	r4, #2
   3407c:	mov	r0, r4
   34080:	add	sp, sp, #28
   34084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34088:	movw	r3, #65196	; 0xfeac
   3408c:	movt	r3, #4
   34090:	movw	r0, #55664	; 0xd970
   34094:	mov	r2, #23
   34098:	ldr	r3, [r3]
   3409c:	mov	r1, #1
   340a0:	movt	r0, #3
   340a4:	mvn	r4, #11
   340a8:	bl	1259c <fwrite@plt>
   340ac:	b	3407c <crc32@@Base+0x1a624>
   340b0:	movw	r1, #65196	; 0xfeac
   340b4:	movt	r1, #4
   340b8:	ldr	r3, [sp, #8]
   340bc:	movw	r2, #28076	; 0x6dac
   340c0:	ldr	r0, [r1]
   340c4:	movt	r2, #3
   340c8:	mov	r1, #1
   340cc:	mvn	r4, #11
   340d0:	bl	122d8 <__fprintf_chk@plt>
   340d4:	b	3407c <crc32@@Base+0x1a624>
   340d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   340dc:	movw	r4, #61168	; 0xeef0
   340e0:	movt	r4, #4
   340e4:	mov	r7, r1
   340e8:	sub	sp, sp, #60	; 0x3c
   340ec:	mov	r5, r0
   340f0:	ldr	r1, [r4]
   340f4:	mov	r8, r2
   340f8:	mov	sl, r3
   340fc:	ldr	r9, [sp, #96]	; 0x60
   34100:	mov	r3, #0
   34104:	str	r3, [sp, #40]	; 0x28
   34108:	str	r1, [sp, #52]	; 0x34
   3410c:	bl	124c4 <SSL_library_init@plt>
   34110:	cmp	r0, #0
   34114:	beq	343e8 <crc32@@Base+0x1a990>
   34118:	bl	12164 <SSL_load_error_strings@plt>
   3411c:	bl	120f8 <OPENSSL_add_all_algorithms_noconf@plt>
   34120:	bl	12200 <OpenSSL_add_all_digests@plt>
   34124:	bl	126f8 <OpenSSL_add_all_ciphers@plt>
   34128:	ldr	r0, [r5, #44]	; 0x2c
   3412c:	cmp	r0, #0
   34130:	beq	34144 <crc32@@Base+0x1a6ec>
   34134:	add	r1, sp, #40	; 0x28
   34138:	bl	33ba8 <crc32@@Base+0x1a150>
   3413c:	subs	r6, r0, #0
   34140:	bne	34194 <crc32@@Base+0x1a73c>
   34144:	ldr	r2, [sp, #40]	; 0x28
   34148:	ldr	r0, [r5]
   3414c:	cmp	r2, #0
   34150:	ldr	r1, [r5, #4]
   34154:	beq	341c4 <crc32@@Base+0x1a76c>
   34158:	add	r3, sp, #36	; 0x24
   3415c:	bl	33cc8 <crc32@@Base+0x1a270>
   34160:	mov	r6, r0
   34164:	cmp	r6, #0
   34168:	beq	341d8 <crc32@@Base+0x1a780>
   3416c:	ldr	r3, [r5, #44]	; 0x2c
   34170:	cmp	r3, #0
   34174:	beq	34194 <crc32@@Base+0x1a73c>
   34178:	ldr	r5, [sp, #40]	; 0x28
   3417c:	cmp	r5, #0
   34180:	beq	34194 <crc32@@Base+0x1a73c>
   34184:	mov	r0, r5
   34188:	bl	12128 <ENGINE_finish@plt>
   3418c:	mov	r0, r5
   34190:	bl	121c4 <ENGINE_free@plt>
   34194:	bl	123d4 <CRYPTO_cleanup_all_ex_data@plt>
   34198:	bl	1247c <ERR_free_strings@plt>
   3419c:	mov	r0, #0
   341a0:	bl	121f4 <ERR_remove_thread_state@plt>
   341a4:	bl	12758 <EVP_cleanup@plt>
   341a8:	ldr	r2, [sp, #52]	; 0x34
   341ac:	mov	r0, r6
   341b0:	ldr	r3, [r4]
   341b4:	cmp	r2, r3
   341b8:	bne	344c0 <crc32@@Base+0x1aa68>
   341bc:	add	sp, sp, #60	; 0x3c
   341c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   341c4:	add	r2, sp, #36	; 0x24
   341c8:	bl	33e28 <crc32@@Base+0x1a3d0>
   341cc:	mov	r6, r0
   341d0:	cmp	r6, #0
   341d4:	bne	3416c <crc32@@Base+0x1a714>
   341d8:	ldr	r3, [r5, #24]
   341dc:	ldr	fp, [sp, #36]	; 0x24
   341e0:	str	r3, [sp, #16]
   341e4:	ldr	r3, [r5, #20]
   341e8:	str	r3, [sp, #20]
   341ec:	bl	12494 <EVP_PKEY_new@plt>
   341f0:	subs	r3, r0, #0
   341f4:	str	r3, [sp, #12]
   341f8:	beq	343d4 <crc32@@Base+0x1a97c>
   341fc:	mov	r1, fp
   34200:	bl	12584 <EVP_PKEY_set1_RSA@plt>
   34204:	cmp	r0, #0
   34208:	beq	34364 <crc32@@Base+0x1a90c>
   3420c:	ldr	r0, [sp, #12]
   34210:	bl	121e8 <EVP_PKEY_size@plt>
   34214:	str	r0, [sp, #48]	; 0x30
   34218:	str	r0, [sp, #24]
   3421c:	bl	125cc <malloc@plt>
   34220:	subs	r3, r0, #0
   34224:	str	r3, [sp, #28]
   34228:	ldr	r3, [sp, #24]
   3422c:	beq	3439c <crc32@@Base+0x1a944>
   34230:	bl	12314 <EVP_MD_CTX_create@plt>
   34234:	subs	r3, r0, #0
   34238:	str	r3, [sp, #24]
   3423c:	beq	34410 <crc32@@Base+0x1a9b8>
   34240:	bl	126a4 <EVP_MD_CTX_init@plt>
   34244:	mov	r1, r6
   34248:	ldr	r0, [sp, #12]
   3424c:	bl	121dc <EVP_PKEY_CTX_new@plt>
   34250:	cmp	r0, #0
   34254:	str	r0, [sp, #44]	; 0x2c
   34258:	beq	344ac <crc32@@Base+0x1aa54>
   3425c:	ldr	r3, [sp, #20]
   34260:	ldr	r3, [r3, #16]
   34264:	blx	r3
   34268:	ldr	r3, [sp, #12]
   3426c:	add	r1, sp, #44	; 0x2c
   34270:	str	r3, [sp]
   34274:	mov	r3, r6
   34278:	mov	r2, r0
   3427c:	ldr	r0, [sp, #24]
   34280:	bl	12638 <EVP_DigestSignInit@plt>
   34284:	cmp	r0, #0
   34288:	ble	34454 <crc32@@Base+0x1a9fc>
   3428c:	ldr	r3, [sp, #16]
   34290:	cmp	r3, #0
   34294:	beq	342f8 <crc32@@Base+0x1a8a0>
   34298:	ldr	r3, [sp, #16]
   3429c:	ldr	r3, [r3]
   342a0:	ldrb	r2, [r3]
   342a4:	cmp	r2, #112	; 0x70
   342a8:	bne	342f8 <crc32@@Base+0x1a8a0>
   342ac:	ldrb	r2, [r3, #1]
   342b0:	cmp	r2, #115	; 0x73
   342b4:	bne	342f8 <crc32@@Base+0x1a8a0>
   342b8:	ldrb	r2, [r3, #2]
   342bc:	cmp	r2, #115	; 0x73
   342c0:	bne	342f8 <crc32@@Base+0x1a8a0>
   342c4:	ldrb	r2, [r3, #3]
   342c8:	cmp	r2, #0
   342cc:	bne	342f8 <crc32@@Base+0x1a8a0>
   342d0:	mov	r3, #6
   342d4:	str	r2, [sp, #4]
   342d8:	mov	r1, r3
   342dc:	str	r3, [sp]
   342e0:	ldr	r0, [sp, #44]	; 0x2c
   342e4:	movw	r3, #4097	; 0x1001
   342e8:	mvn	r2, #0
   342ec:	bl	121b8 <EVP_PKEY_CTX_ctrl@plt>
   342f0:	cmp	r0, #0
   342f4:	ble	34498 <crc32@@Base+0x1aa40>
   342f8:	cmp	r8, #0
   342fc:	ble	3442c <crc32@@Base+0x1a9d4>
   34300:	str	sl, [sp, #16]
   34304:	mov	fp, #0
   34308:	str	r9, [sp, #20]
   3430c:	mov	sl, r7
   34310:	ldr	r9, [sp, #24]
   34314:	b	34328 <crc32@@Base+0x1a8d0>
   34318:	add	fp, fp, #1
   3431c:	add	sl, sl, #8
   34320:	cmp	r8, fp
   34324:	beq	34424 <crc32@@Base+0x1a9cc>
   34328:	ldr	r2, [sl, #4]
   3432c:	mov	r0, r9
   34330:	ldr	r1, [r7, fp, lsl #3]
   34334:	bl	12674 <EVP_DigestUpdate@plt>
   34338:	cmp	r0, #0
   3433c:	bne	34318 <crc32@@Base+0x1a8c0>
   34340:	movw	r0, #55928	; 0xda78
   34344:	movt	r0, #3
   34348:	bl	33c74 <crc32@@Base+0x1a21c>
   3434c:	mov	r7, r0
   34350:	ldr	r0, [sp, #24]
   34354:	bl	124a0 <EVP_MD_CTX_destroy@plt>
   34358:	ldr	r0, [sp, #28]
   3435c:	bl	1214c <free@plt>
   34360:	b	34374 <crc32@@Base+0x1a91c>
   34364:	movw	r0, #55752	; 0xd9c8
   34368:	movt	r0, #3
   3436c:	bl	33c74 <crc32@@Base+0x1a21c>
   34370:	mov	r7, r0
   34374:	ldr	r0, [sp, #12]
   34378:	bl	120d4 <EVP_PKEY_free@plt>
   3437c:	cmp	r7, #0
   34380:	bne	343c4 <crc32@@Base+0x1a96c>
   34384:	ldr	r0, [sp, #36]	; 0x24
   34388:	bl	12464 <RSA_free@plt>
   3438c:	ldr	r3, [r5, #44]	; 0x2c
   34390:	cmp	r3, #0
   34394:	bne	34178 <crc32@@Base+0x1a720>
   34398:	b	34194 <crc32@@Base+0x1a73c>
   3439c:	movw	r1, #65196	; 0xfeac
   343a0:	movt	r1, #4
   343a4:	movw	r2, #55776	; 0xd9e0
   343a8:	movt	r2, #3
   343ac:	ldr	r0, [r1]
   343b0:	mov	r1, #1
   343b4:	bl	122d8 <__fprintf_chk@plt>
   343b8:	ldr	r0, [sp, #12]
   343bc:	mvn	r7, #11
   343c0:	bl	120d4 <EVP_PKEY_free@plt>
   343c4:	ldr	r0, [sp, #36]	; 0x24
   343c8:	mov	r6, r7
   343cc:	bl	12464 <RSA_free@plt>
   343d0:	b	3416c <crc32@@Base+0x1a714>
   343d4:	movw	r0, #55720	; 0xd9a8
   343d8:	movt	r0, #3
   343dc:	bl	33c74 <crc32@@Base+0x1a21c>
   343e0:	mov	r7, r0
   343e4:	b	3437c <crc32@@Base+0x1a924>
   343e8:	movw	r3, #65196	; 0xfeac
   343ec:	movt	r3, #4
   343f0:	movw	r0, #55688	; 0xd988
   343f4:	mov	r2, #28
   343f8:	ldr	r3, [r3]
   343fc:	mov	r1, #1
   34400:	movt	r0, #3
   34404:	mvn	r6, #0
   34408:	bl	1259c <fwrite@plt>
   3440c:	b	341a8 <crc32@@Base+0x1a750>
   34410:	movw	r0, #55820	; 0xda0c
   34414:	movt	r0, #3
   34418:	bl	33c74 <crc32@@Base+0x1a21c>
   3441c:	mov	r7, r0
   34420:	b	34358 <crc32@@Base+0x1a900>
   34424:	ldr	sl, [sp, #16]
   34428:	ldr	r9, [sp, #20]
   3442c:	add	r2, sp, #48	; 0x30
   34430:	ldrd	r0, [sp, #24]
   34434:	bl	1223c <EVP_DigestSignFinal@plt>
   34438:	cmp	r0, #0
   3443c:	bne	34468 <crc32@@Base+0x1aa10>
   34440:	movw	r0, #55948	; 0xda8c
   34444:	movt	r0, #3
   34448:	bl	33c74 <crc32@@Base+0x1a21c>
   3444c:	mov	r7, r0
   34450:	b	34350 <crc32@@Base+0x1a8f8>
   34454:	movw	r0, #55880	; 0xda48
   34458:	movt	r0, #3
   3445c:	bl	33c74 <crc32@@Base+0x1a21c>
   34460:	mov	r7, r0
   34464:	b	34350 <crc32@@Base+0x1a8f8>
   34468:	ldr	r7, [sp, #24]
   3446c:	mov	r0, r7
   34470:	bl	124e8 <EVP_MD_CTX_cleanup@plt>
   34474:	mov	r0, r7
   34478:	bl	124a0 <EVP_MD_CTX_destroy@plt>
   3447c:	ldr	r0, [sp, #12]
   34480:	bl	120d4 <EVP_PKEY_free@plt>
   34484:	ldr	r3, [sp, #48]	; 0x30
   34488:	ldr	r2, [sp, #28]
   3448c:	str	r2, [sl]
   34490:	str	r3, [r9]
   34494:	b	34384 <crc32@@Base+0x1a92c>
   34498:	movw	r0, #55900	; 0xda5c
   3449c:	movt	r0, #3
   344a0:	bl	33c74 <crc32@@Base+0x1a21c>
   344a4:	mov	r7, r0
   344a8:	b	34350 <crc32@@Base+0x1a8f8>
   344ac:	movw	r0, #55848	; 0xda28
   344b0:	movt	r0, #3
   344b4:	bl	33c74 <crc32@@Base+0x1a21c>
   344b8:	mov	r7, r0
   344bc:	b	34358 <crc32@@Base+0x1a900>
   344c0:	bl	124b8 <__stack_chk_fail@plt>
   344c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   344c8:	sub	sp, sp, #52	; 0x34
   344cc:	mov	fp, r1
   344d0:	strd	r2, [sp, #28]
   344d4:	str	r0, [sp, #20]
   344d8:	bl	123bc <BN_CTX_new@plt>
   344dc:	str	r0, [sp, #16]
   344e0:	bl	1277c <BN_new@plt>
   344e4:	mov	r4, r0
   344e8:	str	r0, [sp, #24]
   344ec:	bl	1277c <BN_new@plt>
   344f0:	mov	r9, r0
   344f4:	bl	1277c <BN_new@plt>
   344f8:	mov	sl, r0
   344fc:	str	r0, [sp, #12]
   34500:	bl	1277c <BN_new@plt>
   34504:	mov	r8, r0
   34508:	bl	1277c <BN_new@plt>
   3450c:	str	r0, [sp, #8]
   34510:	bl	1277c <BN_new@plt>
   34514:	mov	r5, r0
   34518:	bl	1277c <BN_new@plt>
   3451c:	mov	r7, r0
   34520:	bl	1277c <BN_new@plt>
   34524:	cmp	r9, #0
   34528:	cmpne	r4, #0
   3452c:	beq	34800 <crc32@@Base+0x1ada8>
   34530:	cmp	r8, #0
   34534:	cmpne	sl, #0
   34538:	beq	34800 <crc32@@Base+0x1ada8>
   3453c:	ldr	r3, [sp, #8]
   34540:	cmp	r5, #0
   34544:	cmpne	r3, #0
   34548:	beq	34800 <crc32@@Base+0x1ada8>
   3454c:	clz	r4, r0
   34550:	cmp	r7, #0
   34554:	mov	r6, r0
   34558:	lsr	r4, r4, #5
   3455c:	moveq	r4, #1
   34560:	cmp	r4, #0
   34564:	bne	34800 <crc32@@Base+0x1ada8>
   34568:	cmp	fp, #0
   3456c:	beq	347f8 <crc32@@Base+0x1ada0>
   34570:	ldr	r3, [sp, #20]
   34574:	ldr	sl, [r3, #20]
   34578:	mov	r0, sl
   3457c:	bl	125a8 <BN_num_bits@plt>
   34580:	cmp	r0, #64	; 0x40
   34584:	bgt	347f8 <crc32@@Base+0x1ada0>
   34588:	mov	r0, sl
   3458c:	bl	1250c <BN_get_word@plt>
   34590:	stm	fp, {r0, r4}
   34594:	mov	r0, sl
   34598:	bl	125a8 <BN_num_bits@plt>
   3459c:	cmp	r0, #32
   345a0:	bgt	34700 <crc32@@Base+0x1aca8>
   345a4:	ldr	r3, [sp, #20]
   345a8:	mov	r0, r6
   345ac:	ldr	r1, [r3, #16]
   345b0:	bl	1271c <BN_copy@plt>
   345b4:	cmp	r0, #0
   345b8:	beq	345d0 <crc32@@Base+0x1ab78>
   345bc:	mov	r1, #1
   345c0:	ldr	r0, [sp, #24]
   345c4:	bl	124d0 <BN_set_word@plt>
   345c8:	cmp	r0, #0
   345cc:	bne	34758 <crc32@@Base+0x1ad00>
   345d0:	mvn	r4, #0
   345d4:	ldr	sl, [sp, #16]
   345d8:	mov	r1, r9
   345dc:	ldr	r2, [sp, #12]
   345e0:	mov	r0, r7
   345e4:	mov	r3, sl
   345e8:	bl	1244c <BN_exp@plt>
   345ec:	mov	r3, sl
   345f0:	mov	r2, r7
   345f4:	mov	r1, r6
   345f8:	cmp	r0, #0
   345fc:	mov	r0, r5
   34600:	mvneq	r4, #0
   34604:	bl	12440 <BN_mod_inverse@plt>
   34608:	cmp	r0, #0
   3460c:	beq	34628 <crc32@@Base+0x1abd0>
   34610:	mov	r2, r5
   34614:	mov	r1, r7
   34618:	mov	r0, r5
   3461c:	bl	12374 <BN_sub@plt>
   34620:	cmp	r0, #0
   34624:	bne	3462c <crc32@@Base+0x1abd4>
   34628:	mvn	r4, #0
   3462c:	mov	r0, r5
   34630:	bl	1250c <BN_get_word@plt>
   34634:	ldr	r3, [sp, #28]
   34638:	str	r0, [r3]
   3463c:	mov	r0, r6
   34640:	bl	125a8 <BN_num_bits@plt>
   34644:	mov	r1, r0
   34648:	mov	r0, r5
   3464c:	bl	124d0 <BN_set_word@plt>
   34650:	cmp	r0, #0
   34654:	bne	34738 <crc32@@Base+0x1ace0>
   34658:	mvn	r4, #0
   3465c:	mov	r1, r8
   34660:	ldr	r0, [sp, #8]
   34664:	bl	1271c <BN_copy@plt>
   34668:	cmp	r0, #0
   3466c:	beq	3468c <crc32@@Base+0x1ac34>
   34670:	ldr	r3, [sp, #16]
   34674:	mov	r2, r8
   34678:	ldr	r1, [sp, #8]
   3467c:	mov	r0, r5
   34680:	bl	12650 <BN_mul@plt>
   34684:	cmp	r0, #0
   34688:	bne	34784 <crc32@@Base+0x1ad2c>
   3468c:	ldr	r3, [sp, #32]
   34690:	ldr	r2, [sp, #8]
   34694:	ldr	r0, [sp, #24]
   34698:	str	r6, [r3]
   3469c:	ldr	r3, [sp, #88]	; 0x58
   346a0:	str	r2, [r3]
   346a4:	bl	1226c <BN_free@plt>
   346a8:	mov	r0, r9
   346ac:	bl	1226c <BN_free@plt>
   346b0:	ldr	r0, [sp, #12]
   346b4:	bl	1226c <BN_free@plt>
   346b8:	mov	r0, r8
   346bc:	bl	1226c <BN_free@plt>
   346c0:	mov	r0, r5
   346c4:	bl	1226c <BN_free@plt>
   346c8:	mov	r0, r7
   346cc:	bl	1226c <BN_free@plt>
   346d0:	movw	r3, #65196	; 0xfeac
   346d4:	movt	r3, #4
   346d8:	movw	r0, #55976	; 0xdaa8
   346dc:	mov	r2, #25
   346e0:	ldr	r3, [r3]
   346e4:	movt	r0, #3
   346e8:	mov	r1, #1
   346ec:	mvn	r4, #11
   346f0:	bl	1259c <fwrite@plt>
   346f4:	mov	r0, r4
   346f8:	add	sp, sp, #52	; 0x34
   346fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34700:	mov	r0, sl
   34704:	bl	12188 <BN_dup@plt>
   34708:	subs	r3, r0, #0
   3470c:	str	r3, [sp, #36]	; 0x24
   34710:	beq	347f8 <crc32@@Base+0x1ada0>
   34714:	mov	r2, #32
   34718:	mov	r1, r3
   3471c:	bl	12668 <BN_rshift@plt>
   34720:	cmp	r0, #0
   34724:	bne	34828 <crc32@@Base+0x1add0>
   34728:	mvn	r4, #0
   3472c:	ldr	r0, [sp, #36]	; 0x24
   34730:	bl	1226c <BN_free@plt>
   34734:	b	345a4 <crc32@@Base+0x1ab4c>
   34738:	ldr	r3, [sp, #16]
   3473c:	mov	r2, r5
   34740:	mov	r1, r9
   34744:	mov	r0, r8
   34748:	bl	1244c <BN_exp@plt>
   3474c:	cmp	r0, #0
   34750:	bne	3465c <crc32@@Base+0x1ac04>
   34754:	b	34658 <crc32@@Base+0x1ac00>
   34758:	mov	r1, #2
   3475c:	mov	r0, r9
   34760:	bl	124d0 <BN_set_word@plt>
   34764:	cmp	r0, #0
   34768:	beq	345d0 <crc32@@Base+0x1ab78>
   3476c:	mov	r1, #32
   34770:	ldr	r0, [sp, #12]
   34774:	bl	124d0 <BN_set_word@plt>
   34778:	cmp	r0, #0
   3477c:	bne	345d4 <crc32@@Base+0x1ab7c>
   34780:	b	345d0 <crc32@@Base+0x1ab78>
   34784:	ldr	r3, [sp, #16]
   34788:	mov	r2, r5
   3478c:	ldr	r1, [sp, #8]
   34790:	mov	r0, #0
   34794:	str	r3, [sp]
   34798:	mov	r3, r6
   3479c:	bl	12398 <BN_div@plt>
   347a0:	cmp	r0, #0
   347a4:	beq	3468c <crc32@@Base+0x1ac34>
   347a8:	ldr	r3, [sp, #32]
   347ac:	ldr	r2, [sp, #8]
   347b0:	ldr	r0, [sp, #24]
   347b4:	str	r6, [r3]
   347b8:	ldr	r3, [sp, #88]	; 0x58
   347bc:	str	r2, [r3]
   347c0:	bl	1226c <BN_free@plt>
   347c4:	mov	r0, r9
   347c8:	bl	1226c <BN_free@plt>
   347cc:	ldr	r0, [sp, #12]
   347d0:	bl	1226c <BN_free@plt>
   347d4:	mov	r0, r8
   347d8:	bl	1226c <BN_free@plt>
   347dc:	mov	r0, r5
   347e0:	bl	1226c <BN_free@plt>
   347e4:	mov	r0, r7
   347e8:	bl	1226c <BN_free@plt>
   347ec:	cmp	r4, #0
   347f0:	beq	346f4 <crc32@@Base+0x1ac9c>
   347f4:	b	346d0 <crc32@@Base+0x1ac78>
   347f8:	mvn	r4, #0
   347fc:	b	345a4 <crc32@@Base+0x1ab4c>
   34800:	movw	r3, #65196	; 0xfeac
   34804:	movt	r3, #4
   34808:	movw	r0, #55664	; 0xd970
   3480c:	mov	r2, #23
   34810:	ldr	r3, [r3]
   34814:	mov	r1, #1
   34818:	movt	r0, #3
   3481c:	mvn	r4, #11
   34820:	bl	1259c <fwrite@plt>
   34824:	b	346f4 <crc32@@Base+0x1ac9c>
   34828:	mov	r1, #32
   3482c:	ldr	r0, [sp, #36]	; 0x24
   34830:	bl	1268c <BN_mask_bits@plt>
   34834:	cmp	r0, #0
   34838:	beq	34728 <crc32@@Base+0x1acd0>
   3483c:	ldr	r0, [sp, #36]	; 0x24
   34840:	bl	1250c <BN_get_word@plt>
   34844:	ldrd	r2, [fp]
   34848:	mov	r1, #0
   3484c:	str	r1, [sp, #40]	; 0x28
   34850:	mov	ip, fp
   34854:	mov	r1, r3
   34858:	str	r0, [sp, #44]	; 0x2c
   3485c:	mov	r0, r2
   34860:	ldrd	r2, [sp, #40]	; 0x28
   34864:	orr	sl, r2, r0
   34868:	orr	fp, r3, r1
   3486c:	mov	r4, r2
   34870:	mov	r0, sl
   34874:	mov	r1, fp
   34878:	strd	r0, [ip]
   3487c:	b	3472c <crc32@@Base+0x1acd4>
   34880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34884:	movw	r4, #61168	; 0xeef0
   34888:	movt	r4, #4
   3488c:	mov	r5, r0
   34890:	ldr	r0, [r0, #44]	; 0x2c
   34894:	sub	sp, sp, #1104	; 0x450
   34898:	ldr	r3, [r4]
   3489c:	sub	sp, sp, #12
   348a0:	mov	r2, #0
   348a4:	cmp	r0, r2
   348a8:	mov	r7, r1
   348ac:	str	r2, [sp, #60]	; 0x3c
   348b0:	str	r3, [sp, #1108]	; 0x454
   348b4:	beq	349e4 <crc32@@Base+0x1af8c>
   348b8:	add	r6, sp, #72	; 0x48
   348bc:	sub	r1, r6, #12
   348c0:	bl	33ba8 <crc32@@Base+0x1a150>
   348c4:	subs	r8, r0, #0
   348c8:	bne	349c4 <crc32@@Base+0x1af6c>
   348cc:	ldr	sl, [sp, #60]	; 0x3c
   348d0:	ldr	r8, [r5]
   348d4:	cmp	sl, #0
   348d8:	ldr	fp, [r5, #4]
   348dc:	beq	349e8 <crc32@@Base+0x1af90>
   348e0:	mov	r0, sl
   348e4:	bl	12194 <ENGINE_get_id@plt>
   348e8:	cmp	r0, #0
   348ec:	beq	34cd0 <crc32@@Base+0x1b278>
   348f0:	movw	r1, #55404	; 0xd86c
   348f4:	movt	r1, #3
   348f8:	bl	12680 <strcmp@plt>
   348fc:	cmp	r0, #0
   34900:	bne	34cd0 <crc32@@Base+0x1b278>
   34904:	cmp	r8, #0
   34908:	add	r9, sp, #84	; 0x54
   3490c:	mov	r3, #1024	; 0x400
   34910:	beq	34bec <crc32@@Base+0x1b194>
   34914:	movw	r2, #56004	; 0xdac4
   34918:	str	fp, [sp, #8]
   3491c:	movt	r2, #3
   34920:	str	r8, [sp, #4]
   34924:	str	r2, [sp]
   34928:	mov	r0, r9
   3492c:	mov	r1, r3
   34930:	mov	r2, #1
   34934:	bl	125f0 <__snprintf_chk@plt>
   34938:	mov	r3, #0
   3493c:	mov	r0, sl
   34940:	mov	r2, r3
   34944:	mov	r1, r9
   34948:	bl	12134 <ENGINE_load_public_key@plt>
   3494c:	subs	r8, r0, #0
   34950:	beq	34c10 <crc32@@Base+0x1b1b8>
   34954:	bl	122c0 <EVP_PKEY_get1_RSA@plt>
   34958:	subs	r3, r0, #0
   3495c:	str	r3, [sp, #20]
   34960:	beq	34f40 <crc32@@Base+0x1b4e8>
   34964:	mov	r0, r8
   34968:	bl	120d4 <EVP_PKEY_free@plt>
   3496c:	add	r3, sp, #56	; 0x38
   34970:	add	r2, sp, #52	; 0x34
   34974:	sub	r1, r6, #8
   34978:	str	r2, [sp]
   3497c:	sub	r3, r3, #8
   34980:	add	r2, sp, #56	; 0x38
   34984:	ldr	r0, [sp, #20]
   34988:	bl	344c4 <crc32@@Base+0x1aa6c>
   3498c:	subs	r8, r0, #0
   34990:	beq	34a8c <crc32@@Base+0x1b034>
   34994:	ldr	r0, [sp, #20]
   34998:	bl	12464 <RSA_free@plt>
   3499c:	ldr	r3, [r5, #44]	; 0x2c
   349a0:	cmp	r3, #0
   349a4:	beq	349c4 <crc32@@Base+0x1af6c>
   349a8:	ldr	r5, [sp, #60]	; 0x3c
   349ac:	cmp	r5, #0
   349b0:	beq	349c4 <crc32@@Base+0x1af6c>
   349b4:	mov	r0, r5
   349b8:	bl	12128 <ENGINE_finish@plt>
   349bc:	mov	r0, r5
   349c0:	bl	121c4 <ENGINE_free@plt>
   349c4:	ldr	r2, [sp, #1108]	; 0x454
   349c8:	mov	r0, r8
   349cc:	ldr	r3, [r4]
   349d0:	cmp	r2, r3
   349d4:	bne	34fe4 <crc32@@Base+0x1b58c>
   349d8:	add	sp, sp, #1104	; 0x450
   349dc:	add	sp, sp, #12
   349e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   349e4:	ldm	r5, {r8, fp}
   349e8:	add	r9, sp, #84	; 0x54
   349ec:	mov	r3, #1024	; 0x400
   349f0:	mov	r1, r3
   349f4:	str	r8, [sp, #4]
   349f8:	str	fp, [sp, #8]
   349fc:	movw	r2, #56108	; 0xdb2c
   34a00:	mov	r0, r9
   34a04:	movt	r2, #3
   34a08:	str	r2, [sp]
   34a0c:	mov	r2, #1
   34a10:	bl	125f0 <__snprintf_chk@plt>
   34a14:	mov	r0, r9
   34a18:	movw	r1, #50292	; 0xc474
   34a1c:	movt	r1, #3
   34a20:	bl	12350 <fopen@plt>
   34a24:	subs	r8, r0, #0
   34a28:	beq	34f5c <crc32@@Base+0x1b504>
   34a2c:	add	r6, sp, #1104	; 0x450
   34a30:	mov	r3, #0
   34a34:	add	r6, r6, #8
   34a38:	mov	r2, r3
   34a3c:	str	r3, [r6, #-1040]!	; 0xfffffbf0
   34a40:	mov	r1, r6
   34a44:	bl	120e0 <PEM_read_X509@plt>
   34a48:	cmp	r0, #0
   34a4c:	beq	34f98 <crc32@@Base+0x1b540>
   34a50:	ldr	r0, [sp, #72]	; 0x48
   34a54:	bl	126d4 <X509_get_pubkey@plt>
   34a58:	subs	fp, r0, #0
   34a5c:	beq	34fb4 <crc32@@Base+0x1b55c>
   34a60:	bl	122c0 <EVP_PKEY_get1_RSA@plt>
   34a64:	subs	r3, r0, #0
   34a68:	str	r3, [sp, #20]
   34a6c:	beq	34fcc <crc32@@Base+0x1b574>
   34a70:	mov	r0, r8
   34a74:	bl	12620 <fclose@plt>
   34a78:	mov	r0, fp
   34a7c:	bl	120d4 <EVP_PKEY_free@plt>
   34a80:	ldr	r0, [sp, #72]	; 0x48
   34a84:	bl	12530 <X509_free@plt>
   34a88:	b	3496c <crc32@@Base+0x1af14>
   34a8c:	ldr	r0, [sp, #48]	; 0x30
   34a90:	bl	125a8 <BN_num_bits@plt>
   34a94:	mov	r1, r8
   34a98:	movw	r2, #29816	; 0x7478
   34a9c:	movt	r2, #3
   34aa0:	str	r0, [sp, #28]
   34aa4:	mov	r0, r7
   34aa8:	bl	30ed4 <crc32@@Base+0x1747c>
   34aac:	cmn	r0, #1
   34ab0:	mov	r8, r0
   34ab4:	beq	34c80 <crc32@@Base+0x1b228>
   34ab8:	ldr	r0, [r5, #4]
   34abc:	mov	r3, #100	; 0x64
   34ac0:	mov	r1, r3
   34ac4:	movw	r2, #56256	; 0xdbc0
   34ac8:	movt	r2, #3
   34acc:	str	r2, [sp]
   34ad0:	str	r0, [sp, #4]
   34ad4:	mov	r2, #1
   34ad8:	mov	r0, r9
   34adc:	bl	125f0 <__snprintf_chk@plt>
   34ae0:	mov	r2, r9
   34ae4:	mov	r1, r8
   34ae8:	mov	r0, r7
   34aec:	bl	30ed4 <crc32@@Base+0x1747c>
   34af0:	cmn	r0, #1
   34af4:	str	r0, [sp, #24]
   34af8:	beq	34c2c <crc32@@Base+0x1b1d4>
   34afc:	ldr	r3, [sp, #24]
   34b00:	cmp	r3, #0
   34b04:	blt	34ef8 <crc32@@Base+0x1b4a0>
   34b08:	ldr	r8, [r5, #4]
   34b0c:	mov	r0, r8
   34b10:	bl	125e4 <strlen@plt>
   34b14:	ldr	sl, [sp, #24]
   34b18:	mov	r3, r8
   34b1c:	movw	r2, #28764	; 0x705c
   34b20:	movt	r2, #3
   34b24:	mov	r1, sl
   34b28:	add	r0, r0, #1
   34b2c:	str	r0, [sp]
   34b30:	mov	r0, r7
   34b34:	bl	2f2b8 <crc32@@Base+0x15860>
   34b38:	subs	r8, r0, #0
   34b3c:	bne	34bcc <crc32@@Base+0x1b174>
   34b40:	ldr	r2, [sp, #28]
   34b44:	mov	r9, #4
   34b48:	mov	r1, sl
   34b4c:	str	r9, [sp]
   34b50:	ubfx	r0, r2, #8, #8
   34b54:	ubfx	ip, r2, #16, #8
   34b58:	lsr	r3, r2, #24
   34b5c:	orr	r3, r3, r2, lsl #24
   34b60:	movw	r2, #56332	; 0xdc0c
   34b64:	orr	r0, r3, r0, lsl #16
   34b68:	movt	r2, #3
   34b6c:	orr	ip, r0, ip, lsl #8
   34b70:	mov	r3, r6
   34b74:	mov	r0, r7
   34b78:	str	ip, [sp, #72]	; 0x48
   34b7c:	bl	2f2b8 <crc32@@Base+0x15860>
   34b80:	subs	r8, r0, #0
   34b84:	bne	34bcc <crc32@@Base+0x1b174>
   34b88:	ldr	r3, [sp, #56]	; 0x38
   34b8c:	movw	r2, #56348	; 0xdc1c
   34b90:	str	r9, [sp]
   34b94:	movt	r2, #3
   34b98:	ubfx	r1, r3, #8, #8
   34b9c:	ubfx	r0, r3, #16, #8
   34ba0:	lsr	ip, r3, #24
   34ba4:	orr	ip, ip, r3, lsl #24
   34ba8:	mov	r3, r6
   34bac:	orr	ip, ip, r1, lsl #16
   34bb0:	mov	r1, sl
   34bb4:	orr	ip, ip, r0, lsl #8
   34bb8:	mov	r0, r7
   34bbc:	str	ip, [sp, #72]	; 0x48
   34bc0:	bl	2f2b8 <crc32@@Base+0x15860>
   34bc4:	subs	r8, r0, #0
   34bc8:	beq	34cf8 <crc32@@Base+0x1b2a0>
   34bcc:	ldr	r0, [sp, #48]	; 0x30
   34bd0:	bl	1226c <BN_free@plt>
   34bd4:	ldr	r0, [sp, #52]	; 0x34
   34bd8:	bl	1226c <BN_free@plt>
   34bdc:	cmn	r8, #3
   34be0:	mvnne	r8, #4
   34be4:	mvneq	r8, #27
   34be8:	b	34994 <crc32@@Base+0x1af3c>
   34bec:	str	fp, [sp, #4]
   34bf0:	movw	r2, #56036	; 0xdae4
   34bf4:	mov	r0, r9
   34bf8:	movt	r2, #3
   34bfc:	mov	r1, r3
   34c00:	str	r2, [sp]
   34c04:	mov	r2, #1
   34c08:	bl	125f0 <__snprintf_chk@plt>
   34c0c:	b	34938 <crc32@@Base+0x1aee0>
   34c10:	movw	r0, #56068	; 0xdb04
   34c14:	movt	r0, #3
   34c18:	bl	33c74 <crc32@@Base+0x1a21c>
   34c1c:	subs	r8, r0, #0
   34c20:	streq	r8, [sp, #20]
   34c24:	bne	3499c <crc32@@Base+0x1af44>
   34c28:	b	3496c <crc32@@Base+0x1af14>
   34c2c:	mov	r2, r9
   34c30:	mov	r1, r8
   34c34:	mov	r0, r7
   34c38:	bl	2f60c <crc32@@Base+0x15bb4>
   34c3c:	subs	r3, r0, #0
   34c40:	str	r3, [sp, #24]
   34c44:	bge	34b08 <crc32@@Base+0x1b0b0>
   34c48:	cmn	r3, #3
   34c4c:	mov	r8, r3
   34c50:	beq	34f28 <crc32@@Base+0x1b4d0>
   34c54:	movw	r3, #65196	; 0xfeac
   34c58:	movt	r3, #4
   34c5c:	ldr	r6, [r3]
   34c60:	bl	2fac0 <crc32@@Base+0x16068>
   34c64:	movw	r2, #56264	; 0xdbc8
   34c68:	mov	r1, #1
   34c6c:	movt	r2, #3
   34c70:	mov	r3, r0
   34c74:	mov	r0, r6
   34c78:	bl	122d8 <__fprintf_chk@plt>
   34c7c:	b	34bcc <crc32@@Base+0x1b174>
   34c80:	movw	r2, #29816	; 0x7478
   34c84:	mov	r1, #0
   34c88:	movt	r2, #3
   34c8c:	mov	r0, r7
   34c90:	bl	2f60c <crc32@@Base+0x15bb4>
   34c94:	subs	r8, r0, #0
   34c98:	bge	34ab8 <crc32@@Base+0x1b060>
   34c9c:	cmn	r8, #3
   34ca0:	beq	34f28 <crc32@@Base+0x1b4d0>
   34ca4:	movw	r3, #65196	; 0xfeac
   34ca8:	movt	r3, #4
   34cac:	ldr	r6, [r3]
   34cb0:	bl	2fac0 <crc32@@Base+0x16068>
   34cb4:	movw	r2, #56220	; 0xdb9c
   34cb8:	mov	r1, #1
   34cbc:	movt	r2, #3
   34cc0:	mov	r3, r0
   34cc4:	mov	r0, r6
   34cc8:	bl	122d8 <__fprintf_chk@plt>
   34ccc:	b	34bcc <crc32@@Base+0x1b174>
   34cd0:	movw	r3, #65196	; 0xfeac
   34cd4:	movt	r3, #4
   34cd8:	movw	r0, #55480	; 0xd8b8
   34cdc:	mov	r2, #21
   34ce0:	ldr	r3, [r3]
   34ce4:	mov	r1, #1
   34ce8:	movt	r0, #3
   34cec:	mvn	r8, #94	; 0x5e
   34cf0:	bl	1259c <fwrite@plt>
   34cf4:	b	3499c <crc32@@Base+0x1af44>
   34cf8:	ldmdb	r6, {r9, sl}
   34cfc:	mov	r0, r8
   34d00:	str	r8, [sp, #32]
   34d04:	ubfx	lr, r9, #8, #8
   34d08:	lsl	r3, r9, #24
   34d0c:	ubfx	ip, r9, #16, #8
   34d10:	str	r8, [sp, #40]	; 0x28
   34d14:	mov	r1, r3
   34d18:	lsl	r3, lr, #16
   34d1c:	str	r3, [sp, #36]	; 0x24
   34d20:	lsr	lr, sl, #24
   34d24:	lsl	r3, ip, #8
   34d28:	str	r3, [sp, #44]	; 0x2c
   34d2c:	ldrd	r2, [sp, #32]
   34d30:	orr	r0, r0, lr
   34d34:	str	r8, [sp, #32]
   34d38:	ubfx	lr, sl, #8, #8
   34d3c:	orr	r2, r2, r0
   34d40:	orr	r3, r3, r1
   34d44:	ubfx	ip, sl, #16, #8
   34d48:	mov	r0, r2
   34d4c:	mov	r1, r3
   34d50:	lsr	r3, r9, #24
   34d54:	str	r3, [sp, #36]	; 0x24
   34d58:	ldrd	r2, [sp, #40]	; 0x28
   34d5c:	orr	r2, r2, r0
   34d60:	orr	r3, r3, r1
   34d64:	mov	r0, r2
   34d68:	mov	r1, r3
   34d6c:	uxtb	r2, sl
   34d70:	mov	r3, #0
   34d74:	strd	r2, [sp, #40]	; 0x28
   34d78:	ldrd	r2, [sp, #32]
   34d7c:	orr	r2, r2, r0
   34d80:	orr	r3, r3, r1
   34d84:	ldrd	r0, [sp, #40]	; 0x28
   34d88:	mov	r1, #0
   34d8c:	lsr	fp, r0, #8
   34d90:	lsl	sl, r0, #24
   34d94:	uxtb	r0, lr
   34d98:	strd	r0, [sp, #32]
   34d9c:	orr	r2, r2, sl
   34da0:	orr	r3, r3, fp
   34da4:	strd	r2, [sp, #40]	; 0x28
   34da8:	uxtb	r2, ip
   34dac:	ldr	ip, [sp, #32]
   34db0:	ldrd	r8, [sp, #40]	; 0x28
   34db4:	lsl	r3, r2, #8
   34db8:	lsr	r1, ip, #16
   34dbc:	lsl	r0, ip, #16
   34dc0:	orr	r8, r8, r0
   34dc4:	lsr	ip, r2, #24
   34dc8:	orr	r9, r9, r1
   34dcc:	mov	sl, r3
   34dd0:	orr	fp, ip, r9
   34dd4:	orr	sl, sl, r8
   34dd8:	mov	r1, #8
   34ddc:	mov	r3, r6
   34de0:	str	r1, [sp]
   34de4:	mov	r8, sl
   34de8:	movw	r2, #56364	; 0xdc2c
   34dec:	ldr	r1, [sp, #24]
   34df0:	movt	r2, #3
   34df4:	mov	r0, r7
   34df8:	mov	r9, fp
   34dfc:	strd	r8, [r6]
   34e00:	bl	2f2b8 <crc32@@Base+0x15860>
   34e04:	subs	r8, r0, #0
   34e08:	bne	34bcc <crc32@@Base+0x1b174>
   34e0c:	ldr	r6, [sp, #28]
   34e10:	movw	r2, #56380	; 0xdc3c
   34e14:	ldr	r9, [sp, #24]
   34e18:	movt	r2, #3
   34e1c:	ldr	r3, [sp, #48]	; 0x30
   34e20:	mov	r0, r7
   34e24:	str	r6, [sp]
   34e28:	mov	r1, r9
   34e2c:	bl	33f30 <crc32@@Base+0x1a4d8>
   34e30:	subs	r8, r0, #0
   34e34:	bne	34bcc <crc32@@Base+0x1b174>
   34e38:	ldr	r3, [sp, #52]	; 0x34
   34e3c:	movw	r2, #56392	; 0xdc48
   34e40:	str	r6, [sp]
   34e44:	movt	r2, #3
   34e48:	mov	r1, r9
   34e4c:	mov	r0, r7
   34e50:	bl	33f30 <crc32@@Base+0x1a4d8>
   34e54:	subs	r8, r0, #0
   34e58:	bne	34bcc <crc32@@Base+0x1b174>
   34e5c:	ldr	r6, [r5, #16]
   34e60:	mov	r0, r6
   34e64:	bl	125e4 <strlen@plt>
   34e68:	mov	r3, r6
   34e6c:	movw	r2, #30396	; 0x76bc
   34e70:	mov	r1, r9
   34e74:	movt	r2, #3
   34e78:	add	r0, r0, #1
   34e7c:	str	r0, [sp]
   34e80:	mov	r0, r7
   34e84:	bl	2f2b8 <crc32@@Base+0x15860>
   34e88:	subs	r8, r0, #0
   34e8c:	bne	34bcc <crc32@@Base+0x1b174>
   34e90:	ldr	r6, [r5, #40]	; 0x28
   34e94:	cmp	r6, #0
   34e98:	beq	34ee4 <crc32@@Base+0x1b48c>
   34e9c:	mov	r0, r6
   34ea0:	bl	125e4 <strlen@plt>
   34ea4:	mov	r3, r6
   34ea8:	ldr	r1, [sp, #24]
   34eac:	movw	r2, #30404	; 0x76c4
   34eb0:	movt	r2, #3
   34eb4:	add	ip, r0, #1
   34eb8:	mov	r0, r7
   34ebc:	str	ip, [sp]
   34ec0:	bl	2f2b8 <crc32@@Base+0x15860>
   34ec4:	mov	r8, r0
   34ec8:	ldr	r0, [sp, #48]	; 0x30
   34ecc:	bl	1226c <BN_free@plt>
   34ed0:	ldr	r0, [sp, #52]	; 0x34
   34ed4:	bl	1226c <BN_free@plt>
   34ed8:	cmp	r8, #0
   34edc:	beq	34994 <crc32@@Base+0x1af3c>
   34ee0:	b	34bdc <crc32@@Base+0x1b184>
   34ee4:	ldr	r0, [sp, #48]	; 0x30
   34ee8:	bl	1226c <BN_free@plt>
   34eec:	ldr	r0, [sp, #52]	; 0x34
   34ef0:	bl	1226c <BN_free@plt>
   34ef4:	b	34994 <crc32@@Base+0x1af3c>
   34ef8:	movw	r3, #65196	; 0xfeac
   34efc:	movt	r3, #4
   34f00:	ldr	r8, [sp, #24]
   34f04:	ldr	r6, [r3]
   34f08:	bl	2fac0 <crc32@@Base+0x16068>
   34f0c:	movw	r2, #56300	; 0xdbec
   34f10:	mov	r1, #1
   34f14:	movt	r2, #3
   34f18:	mov	r3, r0
   34f1c:	mov	r0, r6
   34f20:	bl	122d8 <__fprintf_chk@plt>
   34f24:	b	34bcc <crc32@@Base+0x1b174>
   34f28:	ldr	r0, [sp, #48]	; 0x30
   34f2c:	mvn	r8, #27
   34f30:	bl	1226c <BN_free@plt>
   34f34:	ldr	r0, [sp, #52]	; 0x34
   34f38:	bl	1226c <BN_free@plt>
   34f3c:	b	34994 <crc32@@Base+0x1af3c>
   34f40:	movw	r0, #55544	; 0xd8f8
   34f44:	movt	r0, #3
   34f48:	bl	33c74 <crc32@@Base+0x1a21c>
   34f4c:	mov	r0, r8
   34f50:	bl	120d4 <EVP_PKEY_free@plt>
   34f54:	mvn	r8, #21
   34f58:	b	3499c <crc32@@Base+0x1af44>
   34f5c:	movw	r3, #65196	; 0xfeac
   34f60:	movt	r3, #4
   34f64:	mvn	r8, #12
   34f68:	ldr	r6, [r3]
   34f6c:	bl	126b0 <__errno_location@plt>
   34f70:	ldr	r0, [r0]
   34f74:	bl	12224 <strerror@plt>
   34f78:	mov	r3, r9
   34f7c:	movw	r2, #56120	; 0xdb38
   34f80:	mov	r1, #1
   34f84:	movt	r2, #3
   34f88:	str	r0, [sp]
   34f8c:	mov	r0, r6
   34f90:	bl	122d8 <__fprintf_chk@plt>
   34f94:	b	3499c <crc32@@Base+0x1af44>
   34f98:	movw	r0, #56164	; 0xdb64
   34f9c:	movt	r0, #3
   34fa0:	bl	33c74 <crc32@@Base+0x1a21c>
   34fa4:	mov	r0, r8
   34fa8:	mvn	r8, #21
   34fac:	bl	12620 <fclose@plt>
   34fb0:	b	3499c <crc32@@Base+0x1af44>
   34fb4:	movw	r0, #56192	; 0xdb80
   34fb8:	movt	r0, #3
   34fbc:	bl	33c74 <crc32@@Base+0x1a21c>
   34fc0:	ldr	r0, [sp, #72]	; 0x48
   34fc4:	bl	12530 <X509_free@plt>
   34fc8:	b	34fa4 <crc32@@Base+0x1b54c>
   34fcc:	movw	r0, #55544	; 0xd8f8
   34fd0:	movt	r0, #3
   34fd4:	bl	33c74 <crc32@@Base+0x1a21c>
   34fd8:	mov	r0, fp
   34fdc:	bl	120d4 <EVP_PKEY_free@plt>
   34fe0:	b	34fc0 <crc32@@Base+0x1b568>
   34fe4:	bl	124b8 <__stack_chk_fail@plt>
   34fe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34fec:	add	fp, sp, #32
   34ff0:	movw	r5, #61168	; 0xeef0
   34ff4:	sub	sp, sp, #52	; 0x34
   34ff8:	movt	r5, #4
   34ffc:	ldr	r8, [fp, #4]
   35000:	mov	r4, r0
   35004:	ldr	r0, [r5]
   35008:	cmp	r8, #0
   3500c:	ldr	sl, [r4, #32]
   35010:	str	r0, [fp, #-40]	; 0xffffffd8
   35014:	blt	351b8 <crc32@@Base+0x1b760>
   35018:	mov	r9, r1
   3501c:	mov	r7, r2
   35020:	mov	r1, r8
   35024:	mov	r6, r3
   35028:	movw	r2, #56332	; 0xdc0c
   3502c:	mov	r3, #0
   35030:	movt	r2, #3
   35034:	mov	r0, sl
   35038:	bl	19da4 <crc32@@Base+0x34c>
   3503c:	mov	r3, #0
   35040:	mov	r1, r8
   35044:	movw	r2, #56348	; 0xdc1c
   35048:	movt	r2, #3
   3504c:	str	r0, [fp, #-48]	; 0xffffffd0
   35050:	mov	r0, sl
   35054:	bl	19da4 <crc32@@Base+0x34c>
   35058:	movw	r2, #56364	; 0xdc2c
   3505c:	sub	r3, fp, #68	; 0x44
   35060:	movt	r2, #3
   35064:	mov	r1, r8
   35068:	str	r0, [fp, #-52]	; 0xffffffcc
   3506c:	mov	r0, sl
   35070:	bl	31204 <crc32@@Base+0x177ac>
   35074:	cmp	r0, #0
   35078:	str	r0, [fp, #-56]	; 0xffffffc8
   3507c:	beq	35194 <crc32@@Base+0x1b73c>
   35080:	ldr	r3, [fp, #-68]	; 0xffffffbc
   35084:	cmp	r3, #7
   35088:	bls	35194 <crc32@@Base+0x1b73c>
   3508c:	mov	r3, #0
   35090:	mov	r1, r8
   35094:	movw	r2, #56380	; 0xdc3c
   35098:	mov	r0, sl
   3509c:	movt	r2, #3
   350a0:	mov	ip, #8
   350a4:	str	ip, [fp, #-44]	; 0xffffffd4
   350a8:	bl	31204 <crc32@@Base+0x177ac>
   350ac:	mov	r3, #0
   350b0:	mov	r1, r8
   350b4:	movw	r2, #56392	; 0xdc48
   350b8:	movt	r2, #3
   350bc:	str	r0, [fp, #-60]	; 0xffffffc4
   350c0:	mov	r0, sl
   350c4:	bl	31204 <crc32@@Base+0x177ac>
   350c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   350cc:	cmp	r3, #0
   350d0:	str	r0, [fp, #-64]	; 0xffffffc0
   350d4:	beq	351b0 <crc32@@Base+0x1b758>
   350d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   350dc:	cmp	r2, #0
   350e0:	beq	351b0 <crc32@@Base+0x1b758>
   350e4:	ldr	r2, [r4, #28]
   350e8:	cmp	r7, #0
   350ec:	ldr	r1, [r4, #24]
   350f0:	mov	r8, sp
   350f4:	ldr	ip, [r4, #20]
   350f8:	ldr	sl, [r2, #4]
   350fc:	str	r1, [fp, #-72]	; 0xffffffb8
   35100:	beq	351a8 <crc32@@Base+0x1b750>
   35104:	cmp	ip, #0
   35108:	beq	351a8 <crc32@@Base+0x1b750>
   3510c:	cmp	r3, #0
   35110:	add	r2, r3, #7
   35114:	movlt	r3, r2
   35118:	asr	r3, r3, #3
   3511c:	cmp	r6, #512	; 0x200
   35120:	cmpls	r3, r6
   35124:	bne	351a0 <crc32@@Base+0x1b748>
   35128:	add	r3, r6, #7
   3512c:	mov	r1, r6
   35130:	bic	r3, r3, #7
   35134:	mov	r0, r7
   35138:	sub	sp, sp, r3
   3513c:	sub	r2, fp, #64	; 0x40
   35140:	add	r6, sp, #8
   35144:	ldr	r7, [ip, #4]
   35148:	mov	r3, r6
   3514c:	bl	35ae0 <crc32@@Base+0x1c088>
   35150:	cmp	r0, #0
   35154:	bne	35178 <crc32@@Base+0x1b720>
   35158:	str	r7, [sp]
   3515c:	mov	r3, r9
   35160:	ldr	r1, [fp, #-72]	; 0xffffffb8
   35164:	mov	r2, sl
   35168:	mov	r0, r4
   3516c:	ldr	r7, [r1, #4]
   35170:	mov	r1, r6
   35174:	blx	r7
   35178:	mov	sp, r8
   3517c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35180:	ldr	r3, [r5]
   35184:	cmp	r2, r3
   35188:	bne	351c0 <crc32@@Base+0x1b768>
   3518c:	sub	sp, fp, #32
   35190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35194:	mov	r3, #0
   35198:	str	r3, [fp, #-56]	; 0xffffffc8
   3519c:	b	3508c <crc32@@Base+0x1b634>
   351a0:	mvn	r0, #21
   351a4:	b	35178 <crc32@@Base+0x1b720>
   351a8:	mvn	r0, #4
   351ac:	b	35178 <crc32@@Base+0x1b720>
   351b0:	mvn	r0, #13
   351b4:	b	3517c <crc32@@Base+0x1b724>
   351b8:	mvn	r0, #8
   351bc:	b	3517c <crc32@@Base+0x1b724>
   351c0:	bl	124b8 <__stack_chk_fail@plt>
   351c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   351c8:	add	sl, r1, #2
   351cc:	ldr	fp, [r0, #20]
   351d0:	sub	sp, sp, #12
   351d4:	mov	r4, r1
   351d8:	mov	r0, sl
   351dc:	add	r1, r1, #3
   351e0:	str	r3, [sp, #4]
   351e4:	ldr	r7, [fp, #4]
   351e8:	ldr	r8, [fp, #8]
   351ec:	sub	r6, r2, r7
   351f0:	sub	r9, r6, r8
   351f4:	sub	r2, r9, #4
   351f8:	sub	r9, r9, #3
   351fc:	bl	126ec <memcmp@plt>
   35200:	mov	r2, r8
   35204:	ldr	r1, [fp, #12]
   35208:	mov	r5, r0
   3520c:	add	r0, sl, r9
   35210:	add	r0, r0, #1
   35214:	bl	126ec <memcmp@plt>
   35218:	ldrb	r2, [r4, #1]
   3521c:	ldrb	r3, [r4, #2]
   35220:	eor	r2, r2, #1
   35224:	ldrb	ip, [r4]
   35228:	ldrb	r1, [sl, r9]
   3522c:	mvn	r3, r3
   35230:	orr	r2, r2, r3
   35234:	orr	r2, r2, ip
   35238:	orr	r2, r2, r1
   3523c:	uxtb	r2, r2
   35240:	orr	r0, r5, r0
   35244:	orrs	r2, r2, r0
   35248:	bne	3526c <crc32@@Base+0x1b814>
   3524c:	mov	r2, r7
   35250:	ldr	r1, [sp, #4]
   35254:	add	r0, r4, r6
   35258:	bl	126ec <memcmp@plt>
   3525c:	cmp	r0, #0
   35260:	mvnne	r0, #12
   35264:	add	sp, sp, #12
   35268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3526c:	mvn	r0, #21
   35270:	b	35264 <crc32@@Base+0x1b80c>
   35274:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35278:	sub	sp, sp, #76	; 0x4c
   3527c:	mov	r7, r2
   35280:	movw	ip, #61168	; 0xeef0
   35284:	ldr	r2, [sp, #112]	; 0x70
   35288:	movt	ip, #4
   3528c:	str	ip, [sp, #20]
   35290:	mov	r6, r1
   35294:	sub	r2, r7, r2
   35298:	ldr	ip, [ip]
   3529c:	sub	r5, r2, #1
   352a0:	ldr	r9, [r0, #20]
   352a4:	sub	r4, r2, #2
   352a8:	str	r3, [sp, #28]
   352ac:	mov	r0, r5
   352b0:	mov	r3, #0
   352b4:	str	ip, [sp, #68]	; 0x44
   352b8:	str	r3, [sp, #64]	; 0x40
   352bc:	str	r3, [sp, #60]	; 0x3c
   352c0:	str	r4, [sp, #24]
   352c4:	bl	125cc <malloc@plt>
   352c8:	mov	r8, r0
   352cc:	str	r0, [sp, #8]
   352d0:	ldr	r0, [sp, #112]	; 0x70
   352d4:	bl	125cc <malloc@plt>
   352d8:	mov	r1, #1
   352dc:	mov	sl, r0
   352e0:	str	r0, [sp, #4]
   352e4:	mov	r0, r5
   352e8:	bl	1253c <calloc@plt>
   352ec:	mov	fp, r0
   352f0:	mov	r0, r5
   352f4:	bl	125cc <malloc@plt>
   352f8:	str	r0, [sp]
   352fc:	mov	r0, r4
   35300:	bl	125cc <malloc@plt>
   35304:	str	r0, [sp, #12]
   35308:	ldr	r0, [sp, #112]	; 0x70
   3530c:	bl	125cc <malloc@plt>
   35310:	cmp	sl, #0
   35314:	cmpne	r8, #0
   35318:	str	r0, [sp, #16]
   3531c:	beq	35594 <crc32@@Base+0x1bb3c>
   35320:	ldr	r3, [sp]
   35324:	cmp	r3, #0
   35328:	cmpne	fp, #0
   3532c:	beq	35594 <crc32@@Base+0x1bb3c>
   35330:	ldr	r3, [sp, #12]
   35334:	clz	r4, r0
   35338:	cmp	r3, #0
   3533c:	lsr	r4, r4, #5
   35340:	moveq	r4, #1
   35344:	cmp	r4, #0
   35348:	bne	35594 <crc32@@Base+0x1bb3c>
   3534c:	add	r7, r6, r7
   35350:	ldrb	r3, [r7, #-1]
   35354:	cmp	r3, #188	; 0xbc
   35358:	bne	355b4 <crc32@@Base+0x1bb5c>
   3535c:	ldr	r7, [sp, #8]
   35360:	mov	r2, r5
   35364:	mov	r1, r6
   35368:	mov	r0, r7
   3536c:	bl	125c0 <memcpy@plt>
   35370:	ldr	r2, [sp, #112]	; 0x70
   35374:	add	r1, r6, r5
   35378:	ldr	r0, [sp, #4]
   3537c:	bl	125c0 <memcpy@plt>
   35380:	ldrb	r8, [r7]
   35384:	tst	r8, #128	; 0x80
   35388:	bne	355d4 <crc32@@Base+0x1bb7c>
   3538c:	ldr	r6, [r9, #4]
   35390:	add	r2, sp, #56	; 0x38
   35394:	ldr	r3, [sp, #4]
   35398:	ldr	r1, [sp, #112]	; 0x70
   3539c:	mov	r0, r6
   353a0:	str	r3, [sp, #32]
   353a4:	mov	r3, #4
   353a8:	str	r1, [sp, #36]	; 0x24
   353ac:	strd	r2, [sp, #40]	; 0x28
   353b0:	bl	125cc <malloc@plt>
   353b4:	subs	sl, r0, #0
   353b8:	beq	35600 <crc32@@Base+0x1bba8>
   353bc:	cmp	r5, #0
   353c0:	ble	3558c <crc32@@Base+0x1bb34>
   353c4:	mov	r7, r4
   353c8:	strb	r7, [sp, #59]	; 0x3b
   353cc:	lsr	r2, r7, #24
   353d0:	lsr	r3, r7, #16
   353d4:	strb	r2, [sp, #56]	; 0x38
   353d8:	strb	r3, [sp, #57]	; 0x39
   353dc:	lsr	r2, r7, #8
   353e0:	mov	r3, sl
   353e4:	strb	r2, [sp, #58]	; 0x3a
   353e8:	add	r1, sp, #32
   353ec:	mov	r2, #2
   353f0:	ldr	r0, [r9]
   353f4:	ldr	ip, [r9, #20]
   353f8:	blx	ip
   353fc:	cmp	r0, #0
   35400:	blt	35448 <crc32@@Base+0x1b9f0>
   35404:	cmp	r5, r4
   35408:	cmpgt	r6, #0
   3540c:	ble	3543c <crc32@@Base+0x1b9e4>
   35410:	sub	r3, r4, #1
   35414:	sub	r2, sl, #1
   35418:	add	r3, fp, r3
   3541c:	mov	ip, r4
   35420:	add	r4, r4, #1
   35424:	ldrb	r1, [r2, #1]!
   35428:	sub	r0, r4, ip
   3542c:	cmp	r6, r0
   35430:	cmpgt	r5, r4
   35434:	strb	r1, [r3, #1]!
   35438:	bgt	35420 <crc32@@Base+0x1b9c8>
   3543c:	cmp	r5, r4
   35440:	add	r7, r7, #1
   35444:	bgt	353c8 <crc32@@Base+0x1b970>
   35448:	mov	r0, sl
   3544c:	bl	1214c <free@plt>
   35450:	ldr	r3, [sp]
   35454:	sub	r0, fp, #1
   35458:	ldr	ip, [sp, #8]
   3545c:	mov	r2, #0
   35460:	sub	r1, r3, #1
   35464:	b	3546c <crc32@@Base+0x1ba14>
   35468:	ldrb	r8, [ip, #1]!
   3546c:	add	r2, r2, #1
   35470:	ldrb	r3, [r0, #1]!
   35474:	cmp	r5, r2
   35478:	eor	r3, r3, r8
   3547c:	strb	r3, [r1, #1]!
   35480:	bgt	35468 <crc32@@Base+0x1ba10>
   35484:	ldr	r2, [sp]
   35488:	ldrb	r3, [r2]
   3548c:	and	r3, r3, #127	; 0x7f
   35490:	strb	r3, [r2]
   35494:	cmp	r3, #1
   35498:	bne	35560 <crc32@@Base+0x1bb08>
   3549c:	ldr	r6, [sp, #24]
   354a0:	ldr	r5, [sp, #12]
   354a4:	ldr	r3, [sp]
   354a8:	mov	r2, r6
   354ac:	add	r1, r3, #1
   354b0:	mov	r0, r5
   354b4:	bl	125c0 <memcpy@plt>
   354b8:	ldr	r2, [sp, #28]
   354bc:	ldr	r4, [r9, #20]
   354c0:	mov	ip, #8
   354c4:	ldr	r0, [r9]
   354c8:	add	r3, sp, #60	; 0x3c
   354cc:	ldr	r7, [sp, #16]
   354d0:	add	r1, sp, #32
   354d4:	str	r2, [sp, #40]	; 0x28
   354d8:	ldr	r2, [sp, #112]	; 0x70
   354dc:	str	r3, [sp, #32]
   354e0:	mov	r3, r7
   354e4:	str	ip, [sp, #36]	; 0x24
   354e8:	str	r2, [sp, #44]	; 0x2c
   354ec:	mov	r2, #3
   354f0:	str	r5, [sp, #48]	; 0x30
   354f4:	str	r6, [sp, #52]	; 0x34
   354f8:	blx	r4
   354fc:	ldr	r2, [sp, #112]	; 0x70
   35500:	mov	r1, r7
   35504:	ldr	r0, [sp, #4]
   35508:	bl	126ec <memcmp@plt>
   3550c:	mov	r4, r0
   35510:	ldr	r0, [sp, #16]
   35514:	bl	1214c <free@plt>
   35518:	ldr	r0, [sp, #12]
   3551c:	bl	1214c <free@plt>
   35520:	ldr	r0, [sp]
   35524:	bl	1214c <free@plt>
   35528:	mov	r0, fp
   3552c:	bl	1214c <free@plt>
   35530:	ldr	r0, [sp, #4]
   35534:	bl	1214c <free@plt>
   35538:	ldr	r0, [sp, #8]
   3553c:	bl	1214c <free@plt>
   35540:	ldr	r3, [sp, #20]
   35544:	ldr	r2, [sp, #68]	; 0x44
   35548:	mov	r0, r4
   3554c:	ldr	r3, [r3]
   35550:	cmp	r2, r3
   35554:	bne	3560c <crc32@@Base+0x1bbb4>
   35558:	add	sp, sp, #76	; 0x4c
   3555c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35560:	movw	r2, #56408	; 0xdc58
   35564:	movw	r1, #56504	; 0xdcb8
   35568:	movt	r2, #3
   3556c:	movt	r1, #3
   35570:	mov	r0, #1
   35574:	mov	r4, #22
   35578:	bl	12794 <__printf_chk@plt>
   3557c:	movw	r0, #56568	; 0xdcf8
   35580:	movt	r0, #3
   35584:	bl	12290 <puts@plt>
   35588:	b	35510 <crc32@@Base+0x1bab8>
   3558c:	bl	1214c <free@plt>
   35590:	b	35484 <crc32@@Base+0x1ba2c>
   35594:	movw	r2, #56408	; 0xdc58
   35598:	movw	r1, #56428	; 0xdc6c
   3559c:	movt	r2, #3
   355a0:	movt	r1, #3
   355a4:	mov	r0, #1
   355a8:	mvn	r4, #11
   355ac:	bl	12794 <__printf_chk@plt>
   355b0:	b	35510 <crc32@@Base+0x1bab8>
   355b4:	movw	r2, #56408	; 0xdc58
   355b8:	movw	r1, #56460	; 0xdc8c
   355bc:	movt	r2, #3
   355c0:	movt	r1, #3
   355c4:	mov	r0, #1
   355c8:	mvn	r4, #21
   355cc:	bl	12794 <__printf_chk@plt>
   355d0:	b	35510 <crc32@@Base+0x1bab8>
   355d4:	movw	r2, #56408	; 0xdc58
   355d8:	movw	r1, #56504	; 0xdcb8
   355dc:	movt	r2, #3
   355e0:	movt	r1, #3
   355e4:	mov	r0, #1
   355e8:	mvn	r4, #21
   355ec:	bl	12794 <__printf_chk@plt>
   355f0:	movw	r0, #56532	; 0xdcd4
   355f4:	movt	r0, #3
   355f8:	bl	12290 <puts@plt>
   355fc:	b	35510 <crc32@@Base+0x1bab8>
   35600:	cmp	r5, #0
   35604:	ble	35484 <crc32@@Base+0x1ba2c>
   35608:	b	35450 <crc32@@Base+0x1b9f8>
   3560c:	bl	124b8 <__stack_chk_fail@plt>
   35610:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35614:	mov	r4, r0
   35618:	add	fp, sp, #32
   3561c:	sub	sp, sp, #132	; 0x84
   35620:	ldr	ip, [r0, #28]
   35624:	ldr	r0, [r0, #20]
   35628:	movw	r6, #61168	; 0xeef0
   3562c:	mov	r8, r1
   35630:	movt	r6, #4
   35634:	mov	r9, r2
   35638:	ldr	r2, [ip, #4]
   3563c:	ldr	r1, [r0, #4]
   35640:	str	r3, [fp, #-152]	; 0xffffff68
   35644:	add	r3, r2, #7
   35648:	cmp	r2, r1
   3564c:	ldr	r2, [r6]
   35650:	bic	r3, r3, #7
   35654:	ldr	r5, [r4, #32]
   35658:	sub	sp, sp, r3
   3565c:	str	r2, [fp, #-40]	; 0xffffffd8
   35660:	blt	357dc <crc32@@Base+0x1bd84>
   35664:	movw	r2, #29816	; 0x7478
   35668:	mov	r1, #0
   3566c:	movt	r2, #3
   35670:	mov	r0, r5
   35674:	bl	30ed4 <crc32@@Base+0x1747c>
   35678:	subs	r3, r0, #0
   3567c:	str	r3, [fp, #-156]	; 0xffffff64
   35680:	blt	357e4 <crc32@@Base+0x1bd8c>
   35684:	ldr	r0, [r4, #20]
   35688:	add	r7, sp, #8
   3568c:	mov	r1, r8
   35690:	mov	r2, r9
   35694:	mov	r3, r7
   35698:	ldr	r8, [r0, #20]
   3569c:	ldr	r0, [r0]
   356a0:	blx	r8
   356a4:	cmp	r0, #0
   356a8:	blt	357dc <crc32@@Base+0x1bd84>
   356ac:	ldr	r3, [r4, #36]	; 0x24
   356b0:	cmn	r3, #1
   356b4:	beq	356d8 <crc32@@Base+0x1bc80>
   356b8:	str	r3, [sp]
   356bc:	mov	r1, r7
   356c0:	ldr	r3, [fp, #4]
   356c4:	mov	r0, r4
   356c8:	ldr	r2, [fp, #-152]	; 0xffffff68
   356cc:	bl	34fe8 <crc32@@Base+0x1b590>
   356d0:	cmp	r0, #0
   356d4:	beq	35734 <crc32@@Base+0x1bcdc>
   356d8:	ldr	r1, [r4, #4]
   356dc:	mov	r3, #100	; 0x64
   356e0:	movw	r2, #56256	; 0xdbc0
   356e4:	sub	r0, fp, #140	; 0x8c
   356e8:	movt	r2, #3
   356ec:	str	r2, [sp]
   356f0:	str	r1, [sp, #4]
   356f4:	mov	r2, #1
   356f8:	mov	r1, r3
   356fc:	bl	125f0 <__snprintf_chk@plt>
   35700:	sub	r2, fp, #140	; 0x8c
   35704:	ldr	r1, [fp, #-156]	; 0xffffff64
   35708:	mov	r0, r5
   3570c:	bl	30ed4 <crc32@@Base+0x1747c>
   35710:	ldr	r3, [fp, #4]
   35714:	ldr	r2, [fp, #-152]	; 0xffffff68
   35718:	mov	r1, r7
   3571c:	str	r0, [sp]
   35720:	mov	r8, r0
   35724:	mov	r0, r4
   35728:	bl	34fe8 <crc32@@Base+0x1b590>
   3572c:	subs	r9, r0, #0
   35730:	bne	35754 <crc32@@Base+0x1bcfc>
   35734:	mov	r9, #0
   35738:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3573c:	mov	r0, r9
   35740:	ldr	r3, [r6]
   35744:	cmp	r2, r3
   35748:	bne	357ec <crc32@@Base+0x1bd94>
   3574c:	sub	sp, fp, #32
   35750:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35754:	sub	sl, fp, #36	; 0x24
   35758:	mov	r3, #0
   3575c:	ldr	r1, [fp, #-156]	; 0xffffff64
   35760:	str	r3, [sl, #-108]!	; 0xffffff94
   35764:	mov	r2, sl
   35768:	ldr	r0, [r4, #8]
   3576c:	bl	2dc88 <crc32@@Base+0x14230>
   35770:	subs	r5, r0, #0
   35774:	bge	35794 <crc32@@Base+0x1bd3c>
   35778:	b	35738 <crc32@@Base+0x1bce0>
   3577c:	mov	r1, r5
   35780:	mov	r2, sl
   35784:	ldr	r0, [r4, #8]
   35788:	bl	2dc88 <crc32@@Base+0x14230>
   3578c:	subs	r5, r0, #0
   35790:	blt	35738 <crc32@@Base+0x1bce0>
   35794:	ldr	r3, [fp, #-144]	; 0xffffff70
   35798:	cmp	r3, #0
   3579c:	ble	35738 <crc32@@Base+0x1bce0>
   357a0:	subs	r2, r8, r5
   357a4:	movne	r2, #1
   357a8:	cmp	r3, #1
   357ac:	movne	r2, #0
   357b0:	cmp	r2, #0
   357b4:	beq	3577c <crc32@@Base+0x1bd24>
   357b8:	str	r5, [sp]
   357bc:	mov	r1, r7
   357c0:	ldr	r3, [fp, #4]
   357c4:	mov	r0, r4
   357c8:	ldr	r2, [fp, #-152]	; 0xffffff68
   357cc:	bl	34fe8 <crc32@@Base+0x1b590>
   357d0:	subs	r9, r0, #0
   357d4:	bne	3577c <crc32@@Base+0x1bd24>
   357d8:	b	35734 <crc32@@Base+0x1bcdc>
   357dc:	mvn	r9, #21
   357e0:	b	35738 <crc32@@Base+0x1bce0>
   357e4:	mvn	r9, #1
   357e8:	b	35738 <crc32@@Base+0x1bce0>
   357ec:	bl	124b8 <__stack_chk_fail@plt>
   357f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   357f4:	movw	r8, #61168	; 0xeef0
   357f8:	movt	r8, #4
   357fc:	mov	r7, r2
   35800:	sub	sp, sp, #28
   35804:	mov	r6, r1
   35808:	ldr	r2, [r8]
   3580c:	add	r1, sp, #12
   35810:	mov	sl, r3
   35814:	str	r2, [sp, #20]
   35818:	bl	2ab40 <crc32@@Base+0x110e8>
   3581c:	cmp	r0, #0
   35820:	bne	35890 <crc32@@Base+0x1be38>
   35824:	ldr	r0, [sp, #12]
   35828:	add	r1, sp, #16
   3582c:	ldr	r3, [r0, #16]
   35830:	blx	r3
   35834:	cmp	r0, #0
   35838:	bne	35890 <crc32@@Base+0x1be38>
   3583c:	cmp	r7, #1
   35840:	beq	358ac <crc32@@Base+0x1be54>
   35844:	mov	r4, r0
   35848:	sub	r7, r7, #1
   3584c:	mov	r9, r0
   35850:	mov	r5, r6
   35854:	b	35868 <crc32@@Base+0x1be10>
   35858:	add	r4, r4, #1
   3585c:	add	r5, r5, #8
   35860:	cmp	r7, r4
   35864:	beq	358a8 <crc32@@Base+0x1be50>
   35868:	ldr	ip, [sp, #12]
   3586c:	ldr	r3, [r5, #4]
   35870:	ldr	r2, [r6, r4, lsl #3]
   35874:	ldr	r1, [sp, #16]
   35878:	mov	r0, ip
   3587c:	str	r9, [sp]
   35880:	ldr	fp, [ip, #20]
   35884:	blx	fp
   35888:	cmp	r0, #0
   3588c:	beq	35858 <crc32@@Base+0x1be00>
   35890:	ldr	r2, [sp, #20]
   35894:	ldr	r3, [r8]
   35898:	cmp	r2, r3
   3589c:	bne	358f4 <crc32@@Base+0x1be9c>
   358a0:	add	sp, sp, #28
   358a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   358a8:	add	r6, r6, r7, lsl #3
   358ac:	ldr	ip, [sp, #12]
   358b0:	mov	lr, #1
   358b4:	ldrd	r2, [r6]
   358b8:	ldr	r1, [sp, #16]
   358bc:	str	lr, [sp]
   358c0:	mov	r0, ip
   358c4:	ldr	r4, [ip, #20]
   358c8:	blx	r4
   358cc:	cmp	r0, #0
   358d0:	bne	35890 <crc32@@Base+0x1be38>
   358d4:	ldr	r3, [sp, #12]
   358d8:	mov	r2, sl
   358dc:	ldr	r1, [sp, #16]
   358e0:	ldr	r4, [r3, #24]
   358e4:	mov	r0, r3
   358e8:	ldr	r3, [r3, #4]
   358ec:	blx	r4
   358f0:	b	35890 <crc32@@Base+0x1be38>
   358f4:	bl	124b8 <__stack_chk_fail@plt>
   358f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   358fc:	sub	sp, sp, #44	; 0x2c
   35900:	mov	fp, r0
   35904:	mov	r0, r1
   35908:	str	r1, [sp, #16]
   3590c:	ldr	r1, [fp]
   35910:	str	r3, [sp, #32]
   35914:	cmp	r1, #0
   35918:	beq	35ac4 <crc32@@Base+0x1c06c>
   3591c:	sub	r3, r0, #4
   35920:	str	r3, [sp, #36]	; 0x24
   35924:	mov	r1, r3
   35928:	mov	r3, #0
   3592c:	mov	ip, r3
   35930:	str	ip, [r1, #4]!
   35934:	add	r3, r3, #1
   35938:	ldr	r0, [fp]
   3593c:	cmp	r0, r3
   35940:	bhi	35930 <crc32@@Base+0x1bed8>
   35944:	cmp	r0, #0
   35948:	beq	35ac4 <crc32@@Base+0x1c06c>
   3594c:	ldr	r3, [fp, #8]
   35950:	str	fp, [sp, #4]
   35954:	str	r3, [sp, #28]
   35958:	sub	r3, r2, #4
   3595c:	str	r3, [sp, #20]
   35960:	mov	r3, #0
   35964:	str	r3, [sp, #24]
   35968:	ldr	r3, [sp, #20]
   3596c:	mov	fp, #0
   35970:	ldr	ip, [sp, #16]
   35974:	cmp	r0, #1
   35978:	ldr	r9, [sp, #32]
   3597c:	mov	r7, #0
   35980:	ldr	r8, [r3, #4]!
   35984:	ldr	r6, [ip]
   35988:	ldr	r2, [sp, #4]
   3598c:	str	r3, [sp, #20]
   35990:	ldr	r3, [r9]
   35994:	mov	sl, r6
   35998:	ldr	r5, [r2, #4]
   3599c:	ldr	r4, [sp, #28]
   359a0:	umlal	sl, fp, r3, r8
   359a4:	ldr	r1, [r4]
   359a8:	mul	r5, sl, r5
   359ac:	mov	r6, sl
   359b0:	umlal	r6, r7, r1, r5
   359b4:	bls	35ad8 <crc32@@Base+0x1c080>
   359b8:	str	r8, [sp, #8]
   359bc:	mov	lr, #1
   359c0:	str	r5, [sp, #12]
   359c4:	mov	r8, r9
   359c8:	b	359d0 <crc32@@Base+0x1bf78>
   359cc:	mov	lr, r3
   359d0:	ldr	r5, [r8, #4]!
   359d4:	mov	r3, #0
   359d8:	ldr	r6, [sp, #8]
   359dc:	mov	sl, fp
   359e0:	mov	fp, r3
   359e4:	ldr	r9, [r4, #4]!
   359e8:	mov	r1, r3
   359ec:	ldr	r3, [sp, #12]
   359f0:	umlal	sl, fp, r5, r6
   359f4:	ldr	r2, [ip, #4]
   359f8:	mov	r0, r7
   359fc:	umlal	r0, r1, r9, r3
   35a00:	adds	r6, sl, r2
   35a04:	ldr	r2, [sp, #4]
   35a08:	adc	r7, fp, #0
   35a0c:	adds	r6, r0, r6
   35a10:	str	r6, [ip], #4
   35a14:	add	r3, lr, #1
   35a18:	mov	fp, r7
   35a1c:	ldr	r2, [r2]
   35a20:	adc	r7, r1, #0
   35a24:	cmp	r3, r2
   35a28:	bcc	359cc <crc32@@Base+0x1bf74>
   35a2c:	ldr	r3, [sp, #16]
   35a30:	add	lr, r3, lr, lsl #2
   35a34:	adds	r2, r7, fp
   35a38:	mov	r1, #0
   35a3c:	adc	r3, r1, r1
   35a40:	mov	r5, r1
   35a44:	str	r2, [lr]
   35a48:	mov	r4, r3
   35a4c:	orrs	r3, r4, r5
   35a50:	beq	35acc <crc32@@Base+0x1c074>
   35a54:	ldr	r7, [sp, #4]
   35a58:	ldr	r3, [r7]
   35a5c:	cmp	r3, r1
   35a60:	beq	35ac4 <crc32@@Base+0x1c06c>
   35a64:	ldr	r3, [sp, #28]
   35a68:	mov	ip, r1
   35a6c:	ldr	r1, [sp, #36]	; 0x24
   35a70:	mov	r2, #0
   35a74:	sub	lr, r3, #4
   35a78:	mov	r3, #0
   35a7c:	ldr	r6, [r1, #4]!
   35a80:	add	ip, ip, #1
   35a84:	ldr	r0, [lr, #4]!
   35a88:	adds	r4, r2, r6
   35a8c:	adc	r5, r3, #0
   35a90:	subs	r8, r4, r0
   35a94:	str	r8, [r1]
   35a98:	sbc	r9, r5, #0
   35a9c:	ldr	r0, [r7]
   35aa0:	mov	r2, r9
   35aa4:	asr	r3, r9, #31
   35aa8:	cmp	ip, r0
   35aac:	bcc	35a7c <crc32@@Base+0x1c024>
   35ab0:	ldr	r3, [sp, #24]
   35ab4:	add	r3, r3, #1
   35ab8:	str	r3, [sp, #24]
   35abc:	cmp	r3, r0
   35ac0:	bcc	35968 <crc32@@Base+0x1bf10>
   35ac4:	add	sp, sp, #44	; 0x2c
   35ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35acc:	ldr	r3, [sp, #4]
   35ad0:	ldr	r0, [r3]
   35ad4:	b	35ab0 <crc32@@Base+0x1c058>
   35ad8:	ldr	lr, [sp, #16]
   35adc:	b	35a34 <crc32@@Base+0x1bfdc>
   35ae0:	movw	ip, #61168	; 0xeef0
   35ae4:	movt	ip, #4
   35ae8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35aec:	add	fp, sp, #32
   35af0:	mov	lr, ip
   35af4:	sub	sp, sp, #76	; 0x4c
   35af8:	str	ip, [fp, #-100]	; 0xffffff9c
   35afc:	mov	ip, r0
   35b00:	ldr	r0, [lr]
   35b04:	cmp	r2, #0
   35b08:	str	r1, [fp, #-96]	; 0xffffffa0
   35b0c:	str	r3, [fp, #-104]	; 0xffffff98
   35b10:	str	r0, [fp, #-40]	; 0xffffffd8
   35b14:	beq	35fac <crc32@@Base+0x1c554>
   35b18:	ldrd	r0, [r2, #8]
   35b1c:	ldr	r3, [r2, #16]
   35b20:	cmp	r0, #0
   35b24:	str	r1, [fp, #-64]	; 0xffffffc0
   35b28:	str	r3, [fp, #-68]	; 0xffffffbc
   35b2c:	beq	35f90 <crc32@@Base+0x1c538>
   35b30:	ldr	r1, [r0]
   35b34:	mov	r6, #0
   35b38:	ldr	r0, [r0, #4]
   35b3c:	ubfx	r4, r1, #16, #8
   35b40:	ubfx	lr, r1, #8, #8
   35b44:	lsl	r5, r1, #24
   35b48:	str	r5, [fp, #-72]	; 0xffffffb8
   35b4c:	mov	r5, #0
   35b50:	str	r5, [fp, #-76]	; 0xffffffb4
   35b54:	lsl	r4, r4, #8
   35b58:	str	r4, [fp, #-88]	; 0xffffffa8
   35b5c:	ldrd	r4, [fp, #-76]	; 0xffffffb4
   35b60:	lsl	r7, lr, #16
   35b64:	lsr	lr, r0, #24
   35b68:	mov	r8, r4
   35b6c:	mov	r9, r5
   35b70:	orr	r8, r8, lr
   35b74:	ubfx	lr, r0, #16, #8
   35b78:	orr	r5, r9, r7
   35b7c:	lsr	r7, r1, #24
   35b80:	mov	r1, #0
   35b84:	str	r1, [fp, #-92]	; 0xffffffa4
   35b88:	orr	r4, r8, r4
   35b8c:	ldrd	r8, [fp, #-92]	; 0xffffffa4
   35b90:	ubfx	r1, r0, #8, #8
   35b94:	orr	r8, r8, r4
   35b98:	uxtb	r4, r0
   35b9c:	orr	r9, r9, r5
   35ba0:	lsr	r0, r4, #8
   35ba4:	str	r0, [fp, #-80]	; 0xffffffb0
   35ba8:	lsl	r0, r4, #24
   35bac:	str	r0, [fp, #-84]	; 0xffffffac
   35bb0:	uxtb	r0, r1
   35bb4:	orr	r4, r8, r6
   35bb8:	orr	r5, r9, r7
   35bbc:	ldrd	r8, [fp, #-84]	; 0xffffffac
   35bc0:	lsr	r7, r0, #16
   35bc4:	lsl	r6, r0, #16
   35bc8:	uxtb	r0, lr
   35bcc:	orr	r8, r8, r4
   35bd0:	orr	r9, r9, r5
   35bd4:	orr	r8, r8, r6
   35bd8:	orr	r9, r9, r7
   35bdc:	lsr	r5, r0, #24
   35be0:	lsl	r4, r0, #8
   35be4:	orr	r7, r9, r5
   35be8:	orr	r6, r8, r4
   35bec:	strd	r6, [fp, #-52]	; 0xffffffcc
   35bf0:	cmp	r3, #0
   35bf4:	beq	35fa4 <crc32@@Base+0x1c54c>
   35bf8:	ldr	r7, [r2, #4]
   35bfc:	cmp	r7, #0
   35c00:	beq	35fa4 <crc32@@Base+0x1c54c>
   35c04:	ldr	r9, [r2]
   35c08:	cmp	r9, #0
   35c0c:	beq	35fa4 <crc32@@Base+0x1c54c>
   35c10:	sub	r2, r3, #2048	; 0x800
   35c14:	cmp	r2, #2048	; 0x800
   35c18:	bhi	35fa4 <crc32@@Base+0x1c54c>
   35c1c:	lsr	r3, r3, #5
   35c20:	mov	r6, #0
   35c24:	str	r3, [fp, #-68]	; 0xffffffbc
   35c28:	lsl	r4, r3, #2
   35c2c:	add	r5, r4, #10
   35c30:	add	r7, r7, r4
   35c34:	bic	r1, r5, #7
   35c38:	sub	sp, sp, r1
   35c3c:	mov	r2, sp
   35c40:	sub	sp, sp, r1
   35c44:	sub	sl, r2, #4
   35c48:	str	r2, [fp, #-60]	; 0xffffffc4
   35c4c:	mov	r8, sp
   35c50:	str	r8, [fp, #-56]	; 0xffffffc8
   35c54:	ldr	lr, [r7, #-4]!
   35c58:	add	r6, r6, #1
   35c5c:	cmp	r3, r6
   35c60:	ubfx	r0, lr, #8, #8
   35c64:	ubfx	r1, lr, #16, #8
   35c68:	lsr	r2, lr, #24
   35c6c:	orr	r2, r2, lr, lsl #24
   35c70:	orr	r2, r2, r0, lsl #16
   35c74:	orr	r2, r2, r1, lsl #8
   35c78:	str	r2, [sl, #4]!
   35c7c:	bgt	35c54 <crc32@@Base+0x1c1fc>
   35c80:	add	r9, r9, r4
   35c84:	sub	r7, r8, #4
   35c88:	mov	r6, #0
   35c8c:	ldr	r1, [r9, #-4]!
   35c90:	add	r6, r6, #1
   35c94:	cmp	r3, r6
   35c98:	ubfx	lr, r1, #8, #8
   35c9c:	ubfx	r0, r1, #16, #8
   35ca0:	lsr	r2, r1, #24
   35ca4:	orr	r2, r2, r1, lsl #24
   35ca8:	orr	r2, r2, lr, lsl #16
   35cac:	orr	r2, r2, r0, lsl #8
   35cb0:	str	r2, [r7, #4]!
   35cb4:	bgt	35c8c <crc32@@Base+0x1c234>
   35cb8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   35cbc:	mov	r1, ip
   35cc0:	bic	r3, r2, #3
   35cc4:	add	r3, r3, #10
   35cc8:	bic	r3, r3, #7
   35ccc:	sub	sp, sp, r3
   35cd0:	mov	r9, sp
   35cd4:	mov	r0, r9
   35cd8:	bl	125c0 <memcpy@plt>
   35cdc:	bic	r3, r5, #7
   35ce0:	str	sp, [fp, #-76]	; 0xffffffb4
   35ce4:	sub	sp, sp, r3
   35ce8:	sub	ip, r4, #4
   35cec:	mov	r7, sp
   35cf0:	sub	sp, sp, r3
   35cf4:	add	ip, r9, ip
   35cf8:	sub	sl, r7, #4
   35cfc:	mov	r5, sp
   35d00:	sub	sp, sp, r3
   35d04:	sub	lr, ip, r4
   35d08:	mov	r2, sp
   35d0c:	sub	sp, sp, r3
   35d10:	lsr	r2, r2, #2
   35d14:	str	r2, [fp, #-84]	; 0xffffffac
   35d18:	mov	r6, sp
   35d1c:	lsl	r4, r2, #2
   35d20:	ldr	r0, [ip], #-4
   35d24:	ubfx	r1, r0, #8, #8
   35d28:	ubfx	r2, r0, #16, #8
   35d2c:	lsr	r3, r0, #24
   35d30:	cmp	lr, ip
   35d34:	orr	r3, r3, r0, lsl #24
   35d38:	orr	r3, r3, r1, lsl #16
   35d3c:	orr	r3, r3, r2, lsl #8
   35d40:	str	r3, [sl, #4]!
   35d44:	bne	35d20 <crc32@@Base+0x1c2c8>
   35d48:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   35d4c:	orrs	r3, r0, r1
   35d50:	beq	35f6c <crc32@@Base+0x1c514>
   35d54:	lsrs	r3, r1, #1
   35d58:	rrx	r2, r0
   35d5c:	orrs	ip, r2, r3
   35d60:	beq	35f6c <crc32@@Base+0x1c514>
   35d64:	mov	sl, #2
   35d68:	b	35d78 <crc32@@Base+0x1c320>
   35d6c:	add	sl, sl, #1
   35d70:	cmp	sl, #65	; 0x41
   35d74:	beq	35f6c <crc32@@Base+0x1c514>
   35d78:	lsrs	r3, r3, #1
   35d7c:	rrx	r2, r2
   35d80:	orrs	ip, r2, r3
   35d84:	bne	35d6c <crc32@@Base+0x1c314>
   35d88:	and	r0, r0, #1
   35d8c:	cmp	r0, #0
   35d90:	beq	35f6c <crc32@@Base+0x1c514>
   35d94:	mov	r3, r8
   35d98:	mov	r2, r7
   35d9c:	mov	r1, r5
   35da0:	sub	r0, fp, #68	; 0x44
   35da4:	bl	358f8 <crc32@@Base+0x1bea0>
   35da8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   35dac:	mov	r1, r5
   35db0:	mov	r0, r6
   35db4:	lsl	r2, r2, #2
   35db8:	bl	125c0 <memcpy@plt>
   35dbc:	subs	r8, sl, #2
   35dc0:	beq	35e24 <crc32@@Base+0x1c3cc>
   35dc4:	mov	sl, #1
   35dc8:	b	35de8 <crc32@@Base+0x1c390>
   35dcc:	mov	r3, r6
   35dd0:	mov	r2, r4
   35dd4:	mov	r1, r5
   35dd8:	sub	r0, fp, #68	; 0x44
   35ddc:	bl	358f8 <crc32@@Base+0x1bea0>
   35de0:	subs	r8, r8, #1
   35de4:	beq	35e24 <crc32@@Base+0x1c3cc>
   35de8:	mov	r3, r5
   35dec:	mov	r2, r5
   35df0:	mov	r1, r4
   35df4:	sub	r0, fp, #68	; 0x44
   35df8:	bl	358f8 <crc32@@Base+0x1bea0>
   35dfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35e00:	ands	r3, r3, sl, lsl r8
   35e04:	bne	35dcc <crc32@@Base+0x1c374>
   35e08:	ldr	r2, [fp, #-68]	; 0xffffffbc
   35e0c:	mov	r1, r4
   35e10:	mov	r0, r5
   35e14:	lsl	r2, r2, #2
   35e18:	bl	125c0 <memcpy@plt>
   35e1c:	subs	r8, r8, #1
   35e20:	bne	35de8 <crc32@@Base+0x1c390>
   35e24:	mov	r3, r5
   35e28:	mov	r2, r5
   35e2c:	mov	r1, r4
   35e30:	sub	r0, fp, #68	; 0x44
   35e34:	bl	358f8 <crc32@@Base+0x1bea0>
   35e38:	mov	r3, r7
   35e3c:	mov	r1, r5
   35e40:	mov	r2, r4
   35e44:	sub	r0, fp, #68	; 0x44
   35e48:	bl	358f8 <crc32@@Base+0x1bea0>
   35e4c:	ldr	r6, [fp, #-68]	; 0xffffffbc
   35e50:	mov	r1, r5
   35e54:	mov	r0, r4
   35e58:	lsl	r5, r6, #2
   35e5c:	mov	r2, r5
   35e60:	bl	125c0 <memcpy@plt>
   35e64:	subs	r3, r6, #1
   35e68:	bmi	35ebc <crc32@@Base+0x1c464>
   35e6c:	ldr	r1, [fp, #-84]	; 0xffffffac
   35e70:	lsl	r2, r3, #2
   35e74:	ldr	r0, [fp, #-60]	; 0xffffffc4
   35e78:	ldr	r2, [r2, r1, lsl #2]
   35e7c:	ldr	r1, [r0, r3, lsl #2]
   35e80:	cmp	r1, r2
   35e84:	bhi	35f1c <crc32@@Base+0x1c4c4>
   35e88:	bcc	35ebc <crc32@@Base+0x1c464>
   35e8c:	sub	r1, r5, #4
   35e90:	mov	r2, r3
   35e94:	add	r0, r0, r1
   35e98:	add	r1, r4, r1
   35e9c:	b	35eb4 <crc32@@Base+0x1c45c>
   35ea0:	ldr	lr, [r1, #-4]!
   35ea4:	ldr	ip, [r0, #-4]!
   35ea8:	cmp	lr, ip
   35eac:	bcc	35f1c <crc32@@Base+0x1c4c4>
   35eb0:	bhi	35ebc <crc32@@Base+0x1c464>
   35eb4:	subs	r2, r2, #1
   35eb8:	bcs	35ea0 <crc32@@Base+0x1c448>
   35ebc:	cmp	r6, #0
   35ec0:	beq	35f50 <crc32@@Base+0x1c4f8>
   35ec4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   35ec8:	sub	ip, r4, #4
   35ecc:	mov	r6, #0
   35ed0:	mov	r7, #0
   35ed4:	add	r8, r5, r2
   35ed8:	str	r4, [fp, #-84]	; 0xffffffac
   35edc:	str	r5, [fp, #-92]	; 0xffffffa4
   35ee0:	ldr	sl, [ip, #4]!
   35ee4:	ldr	lr, [r2], #4
   35ee8:	adds	r0, r6, sl
   35eec:	adc	r1, r7, #0
   35ef0:	subs	r4, r0, lr
   35ef4:	sbc	r5, r1, #0
   35ef8:	cmp	r8, r2
   35efc:	str	r4, [ip]
   35f00:	mov	r6, r5
   35f04:	asr	r7, r5, #31
   35f08:	bne	35ee0 <crc32@@Base+0x1c488>
   35f0c:	cmp	r3, #0
   35f10:	ldr	r4, [fp, #-84]	; 0xffffffac
   35f14:	ldr	r5, [fp, #-92]	; 0xffffffa4
   35f18:	blt	35f50 <crc32@@Base+0x1c4f8>
   35f1c:	add	r4, r4, r5
   35f20:	mov	r0, r9
   35f24:	ldr	r1, [r4, #-4]!
   35f28:	sub	r3, r3, #1
   35f2c:	cmn	r3, #1
   35f30:	ubfx	lr, r1, #8, #8
   35f34:	ubfx	ip, r1, #16, #8
   35f38:	lsr	r2, r1, #24
   35f3c:	orr	r2, r2, r1, lsl #24
   35f40:	orr	r2, r2, lr, lsl #16
   35f44:	orr	r2, r2, ip, lsl #8
   35f48:	str	r2, [r0], #4
   35f4c:	bne	35f24 <crc32@@Base+0x1c4cc>
   35f50:	mov	r1, r9
   35f54:	ldr	r2, [fp, #-96]	; 0xffffffa0
   35f58:	ldr	sp, [fp, #-76]	; 0xffffffb4
   35f5c:	ldr	r0, [fp, #-104]	; 0xffffff98
   35f60:	bl	125c0 <memcpy@plt>
   35f64:	mov	r0, #0
   35f68:	b	35f74 <crc32@@Base+0x1c51c>
   35f6c:	ldr	sp, [fp, #-76]	; 0xffffffb4
   35f70:	mvn	r0, #21
   35f74:	ldr	r3, [fp, #-100]	; 0xffffff9c
   35f78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35f7c:	ldr	r3, [r3]
   35f80:	cmp	r2, r3
   35f84:	bne	35fb4 <crc32@@Base+0x1c55c>
   35f88:	sub	sp, fp, #32
   35f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35f90:	mov	r0, #1
   35f94:	mov	r1, #0
   35f98:	movt	r0, #1
   35f9c:	strd	r0, [fp, #-52]	; 0xffffffcc
   35fa0:	b	35bf0 <crc32@@Base+0x1c198>
   35fa4:	mvn	r0, #13
   35fa8:	b	35f74 <crc32@@Base+0x1c51c>
   35fac:	mvn	r0, #8
   35fb0:	b	35f74 <crc32@@Base+0x1c51c>
   35fb4:	bl	124b8 <__stack_chk_fail@plt>
   35fb8:	push	{r4, r5, r6, lr}
   35fbc:	movw	r5, #64940	; 0xfdac
   35fc0:	movw	r4, #65196	; 0xfeac
   35fc4:	movt	r5, #4
   35fc8:	movt	r4, #4
   35fcc:	mov	r1, #1
   35fd0:	ldr	r3, [r5, #80]	; 0x50
   35fd4:	movw	r2, #56604	; 0xdd1c
   35fd8:	ldr	r0, [r4]
   35fdc:	movt	r2, #3
   35fe0:	bl	122d8 <__fprintf_chk@plt>
   35fe4:	ldr	r3, [r5, #80]	; 0x50
   35fe8:	mov	r1, #1
   35fec:	ldr	r0, [r4]
   35ff0:	movw	r2, #56672	; 0xdd60
   35ff4:	movt	r2, #3
   35ff8:	bl	122d8 <__fprintf_chk@plt>
   35ffc:	ldr	r3, [r5, #80]	; 0x50
   36000:	mov	r1, #1
   36004:	ldr	r0, [r4]
   36008:	movw	r2, #56908	; 0xde4c
   3600c:	movt	r2, #3
   36010:	bl	122d8 <__fprintf_chk@plt>
   36014:	ldr	r3, [r5, #80]	; 0x50
   36018:	ldr	r0, [r4]
   3601c:	movw	r2, #56960	; 0xde80
   36020:	mov	r1, #1
   36024:	movt	r2, #3
   36028:	bl	122d8 <__fprintf_chk@plt>
   3602c:	mov	r0, #0
   36030:	bl	12218 <exit@plt>
   36034:	cmp	r1, #0
   36038:	beq	36244 <crc32@@Base+0x1c7ec>
   3603c:	eor	ip, r0, r1
   36040:	rsbmi	r1, r1, #0
   36044:	subs	r2, r1, #1
   36048:	beq	36210 <crc32@@Base+0x1c7b8>
   3604c:	movs	r3, r0
   36050:	rsbmi	r3, r0, #0
   36054:	cmp	r3, r1
   36058:	bls	3621c <crc32@@Base+0x1c7c4>
   3605c:	tst	r1, r2
   36060:	beq	3622c <crc32@@Base+0x1c7d4>
   36064:	clz	r2, r3
   36068:	clz	r0, r1
   3606c:	sub	r2, r0, r2
   36070:	rsbs	r2, r2, #31
   36074:	addne	r2, r2, r2, lsl #1
   36078:	mov	r0, #0
   3607c:	addne	pc, pc, r2, lsl #2
   36080:	nop	{0}
   36084:	cmp	r3, r1, lsl #31
   36088:	adc	r0, r0, r0
   3608c:	subcs	r3, r3, r1, lsl #31
   36090:	cmp	r3, r1, lsl #30
   36094:	adc	r0, r0, r0
   36098:	subcs	r3, r3, r1, lsl #30
   3609c:	cmp	r3, r1, lsl #29
   360a0:	adc	r0, r0, r0
   360a4:	subcs	r3, r3, r1, lsl #29
   360a8:	cmp	r3, r1, lsl #28
   360ac:	adc	r0, r0, r0
   360b0:	subcs	r3, r3, r1, lsl #28
   360b4:	cmp	r3, r1, lsl #27
   360b8:	adc	r0, r0, r0
   360bc:	subcs	r3, r3, r1, lsl #27
   360c0:	cmp	r3, r1, lsl #26
   360c4:	adc	r0, r0, r0
   360c8:	subcs	r3, r3, r1, lsl #26
   360cc:	cmp	r3, r1, lsl #25
   360d0:	adc	r0, r0, r0
   360d4:	subcs	r3, r3, r1, lsl #25
   360d8:	cmp	r3, r1, lsl #24
   360dc:	adc	r0, r0, r0
   360e0:	subcs	r3, r3, r1, lsl #24
   360e4:	cmp	r3, r1, lsl #23
   360e8:	adc	r0, r0, r0
   360ec:	subcs	r3, r3, r1, lsl #23
   360f0:	cmp	r3, r1, lsl #22
   360f4:	adc	r0, r0, r0
   360f8:	subcs	r3, r3, r1, lsl #22
   360fc:	cmp	r3, r1, lsl #21
   36100:	adc	r0, r0, r0
   36104:	subcs	r3, r3, r1, lsl #21
   36108:	cmp	r3, r1, lsl #20
   3610c:	adc	r0, r0, r0
   36110:	subcs	r3, r3, r1, lsl #20
   36114:	cmp	r3, r1, lsl #19
   36118:	adc	r0, r0, r0
   3611c:	subcs	r3, r3, r1, lsl #19
   36120:	cmp	r3, r1, lsl #18
   36124:	adc	r0, r0, r0
   36128:	subcs	r3, r3, r1, lsl #18
   3612c:	cmp	r3, r1, lsl #17
   36130:	adc	r0, r0, r0
   36134:	subcs	r3, r3, r1, lsl #17
   36138:	cmp	r3, r1, lsl #16
   3613c:	adc	r0, r0, r0
   36140:	subcs	r3, r3, r1, lsl #16
   36144:	cmp	r3, r1, lsl #15
   36148:	adc	r0, r0, r0
   3614c:	subcs	r3, r3, r1, lsl #15
   36150:	cmp	r3, r1, lsl #14
   36154:	adc	r0, r0, r0
   36158:	subcs	r3, r3, r1, lsl #14
   3615c:	cmp	r3, r1, lsl #13
   36160:	adc	r0, r0, r0
   36164:	subcs	r3, r3, r1, lsl #13
   36168:	cmp	r3, r1, lsl #12
   3616c:	adc	r0, r0, r0
   36170:	subcs	r3, r3, r1, lsl #12
   36174:	cmp	r3, r1, lsl #11
   36178:	adc	r0, r0, r0
   3617c:	subcs	r3, r3, r1, lsl #11
   36180:	cmp	r3, r1, lsl #10
   36184:	adc	r0, r0, r0
   36188:	subcs	r3, r3, r1, lsl #10
   3618c:	cmp	r3, r1, lsl #9
   36190:	adc	r0, r0, r0
   36194:	subcs	r3, r3, r1, lsl #9
   36198:	cmp	r3, r1, lsl #8
   3619c:	adc	r0, r0, r0
   361a0:	subcs	r3, r3, r1, lsl #8
   361a4:	cmp	r3, r1, lsl #7
   361a8:	adc	r0, r0, r0
   361ac:	subcs	r3, r3, r1, lsl #7
   361b0:	cmp	r3, r1, lsl #6
   361b4:	adc	r0, r0, r0
   361b8:	subcs	r3, r3, r1, lsl #6
   361bc:	cmp	r3, r1, lsl #5
   361c0:	adc	r0, r0, r0
   361c4:	subcs	r3, r3, r1, lsl #5
   361c8:	cmp	r3, r1, lsl #4
   361cc:	adc	r0, r0, r0
   361d0:	subcs	r3, r3, r1, lsl #4
   361d4:	cmp	r3, r1, lsl #3
   361d8:	adc	r0, r0, r0
   361dc:	subcs	r3, r3, r1, lsl #3
   361e0:	cmp	r3, r1, lsl #2
   361e4:	adc	r0, r0, r0
   361e8:	subcs	r3, r3, r1, lsl #2
   361ec:	cmp	r3, r1, lsl #1
   361f0:	adc	r0, r0, r0
   361f4:	subcs	r3, r3, r1, lsl #1
   361f8:	cmp	r3, r1
   361fc:	adc	r0, r0, r0
   36200:	subcs	r3, r3, r1
   36204:	cmp	ip, #0
   36208:	rsbmi	r0, r0, #0
   3620c:	bx	lr
   36210:	teq	ip, r0
   36214:	rsbmi	r0, r0, #0
   36218:	bx	lr
   3621c:	movcc	r0, #0
   36220:	asreq	r0, ip, #31
   36224:	orreq	r0, r0, #1
   36228:	bx	lr
   3622c:	clz	r2, r1
   36230:	rsb	r2, r2, #31
   36234:	cmp	ip, #0
   36238:	lsr	r0, r3, r2
   3623c:	rsbmi	r0, r0, #0
   36240:	bx	lr
   36244:	cmp	r0, #0
   36248:	mvngt	r0, #-2147483648	; 0x80000000
   3624c:	movlt	r0, #-2147483648	; 0x80000000
   36250:	b	362b0 <crc32@@Base+0x1c858>
   36254:	cmp	r1, #0
   36258:	beq	36244 <crc32@@Base+0x1c7ec>
   3625c:	push	{r0, r1, lr}
   36260:	bl	3603c <crc32@@Base+0x1c5e4>
   36264:	pop	{r1, r2, lr}
   36268:	mul	r3, r2, r0
   3626c:	sub	r1, r1, r3
   36270:	bx	lr
   36274:	cmp	r3, #0
   36278:	cmpeq	r2, #0
   3627c:	bne	36294 <crc32@@Base+0x1c83c>
   36280:	cmp	r1, #0
   36284:	cmpeq	r0, #0
   36288:	mvnne	r1, #0
   3628c:	mvnne	r0, #0
   36290:	b	362b0 <crc32@@Base+0x1c858>
   36294:	sub	sp, sp, #8
   36298:	push	{sp, lr}
   3629c:	bl	362c0 <crc32@@Base+0x1c868>
   362a0:	ldr	lr, [sp, #4]
   362a4:	add	sp, sp, #8
   362a8:	pop	{r2, r3}
   362ac:	bx	lr
   362b0:	push	{r1, lr}
   362b4:	mov	r0, #8
   362b8:	bl	12524 <raise@plt>
   362bc:	pop	{r1, pc}
   362c0:	cmp	r1, r3
   362c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   362c8:	cmpeq	r0, r2
   362cc:	sub	sp, sp, #12
   362d0:	mov	sl, r0
   362d4:	mov	fp, r1
   362d8:	ldr	r8, [sp, #48]	; 0x30
   362dc:	bcc	363d4 <crc32@@Base+0x1c97c>
   362e0:	cmp	r3, #0
   362e4:	mov	r0, r2
   362e8:	mov	r1, r3
   362ec:	clzeq	r3, r0
   362f0:	addeq	r2, r3, #32
   362f4:	clzne	r2, r3
   362f8:	cmp	fp, #0
   362fc:	clzeq	r3, sl
   36300:	clzne	r3, fp
   36304:	addeq	r3, r3, #32
   36308:	sub	r3, r2, r3
   3630c:	sub	ip, r3, #32
   36310:	lsl	r7, r1, r3
   36314:	orr	r7, r7, r0, lsl ip
   36318:	rsb	lr, r3, #32
   3631c:	orr	r7, r7, r0, lsr lr
   36320:	lsl	r6, r0, r3
   36324:	cmp	fp, r7
   36328:	cmpeq	sl, r6
   3632c:	bcs	363f4 <crc32@@Base+0x1c99c>
   36330:	mov	r0, #0
   36334:	mov	r1, #0
   36338:	strd	r0, [sp]
   3633c:	cmp	r3, #0
   36340:	beq	363e0 <crc32@@Base+0x1c988>
   36344:	lsrs	r7, r7, #1
   36348:	rrx	r6, r6
   3634c:	mov	r2, r3
   36350:	b	36374 <crc32@@Base+0x1c91c>
   36354:	subs	r0, sl, r6
   36358:	sbc	r1, fp, r7
   3635c:	adds	r4, r0, r0
   36360:	adc	r5, r1, r1
   36364:	adds	sl, r4, #1
   36368:	adc	fp, r5, #0
   3636c:	subs	r2, r2, #1
   36370:	beq	36390 <crc32@@Base+0x1c938>
   36374:	cmp	fp, r7
   36378:	cmpeq	sl, r6
   3637c:	bcs	36354 <crc32@@Base+0x1c8fc>
   36380:	adds	sl, sl, sl
   36384:	adc	fp, fp, fp
   36388:	subs	r2, r2, #1
   3638c:	bne	36374 <crc32@@Base+0x1c91c>
   36390:	lsr	r2, sl, r3
   36394:	lsr	r9, fp, r3
   36398:	orr	r2, r2, fp, lsl lr
   3639c:	ldrd	r6, [sp]
   363a0:	orr	r2, r2, fp, lsr ip
   363a4:	lsl	r1, r9, r3
   363a8:	adds	r6, r6, sl
   363ac:	orr	r1, r1, r2, lsl ip
   363b0:	lsl	r0, r2, r3
   363b4:	adc	r7, r7, fp
   363b8:	orr	r1, r1, r2, lsr lr
   363bc:	subs	r6, r6, r0
   363c0:	mov	sl, r2
   363c4:	sbc	r7, r7, r1
   363c8:	mov	fp, r9
   363cc:	strd	r6, [sp]
   363d0:	b	363e0 <crc32@@Base+0x1c988>
   363d4:	mov	r2, #0
   363d8:	mov	r3, #0
   363dc:	strd	r2, [sp]
   363e0:	cmp	r8, #0
   363e4:	ldrd	r0, [sp]
   363e8:	strdne	sl, [r8]
   363ec:	add	sp, sp, #12
   363f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   363f4:	mov	r2, #1
   363f8:	subs	sl, sl, r6
   363fc:	lsl	r1, r2, ip
   36400:	sbc	fp, fp, r7
   36404:	orr	r1, r1, r2, lsr lr
   36408:	lsl	r2, r2, r3
   3640c:	str	r1, [sp, #4]
   36410:	str	r2, [sp]
   36414:	b	3633c <crc32@@Base+0x1c8e4>
   36418:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   3641c:	mov	r7, r0
   36420:	ldr	r6, [pc, #76]	; 36474 <crc32@@Base+0x1ca1c>
   36424:	mov	r8, r1
   36428:	ldr	r5, [pc, #72]	; 36478 <crc32@@Base+0x1ca20>
   3642c:	mov	r9, r2
   36430:	add	r6, pc, r6
   36434:	bl	1206c <_init@@Base>
   36438:	add	r5, pc, r5
   3643c:	rsb	r6, r5, r6
   36440:	asrs	r6, r6, #2
   36444:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   36448:	sub	r5, r5, #4
   3644c:	mov	r4, #0
   36450:	add	r4, r4, #1
   36454:	ldr	r3, [r5, #4]!
   36458:	mov	r0, r7
   3645c:	mov	r1, r8
   36460:	mov	r2, r9
   36464:	blx	r3
   36468:	cmp	r4, r6
   3646c:	bne	36450 <crc32@@Base+0x1c9f8>
   36470:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   36474:			; <UNDEFINED> instruction: 0x00018ab4
   36478:	andeq	r8, r1, r8, lsr #21
   3647c:	bx	lr

Disassembly of section .fini:

00036480 <_fini@@Base>:
   36480:	push	{r3, lr}
   36484:	pop	{r3, pc}
