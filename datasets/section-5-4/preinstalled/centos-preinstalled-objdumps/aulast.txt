
centos-preinstalled/aulast:     file format elf32-littlearm


Disassembly of section .init:

00010bc4 <_init@@Base>:
   10bc4:	push	{r3, lr}
   10bc8:	bl	11b48 <abort@plt+0xdb4>
   10bcc:	pop	{r3, pc}

Disassembly of section .plt:

00010bd0 <strstr@plt-0x14>:
   10bd0:	push	{lr}		; (str lr, [sp, #-4]!)
   10bd4:	ldr	lr, [pc, #4]	; 10be0 <_init@@Base+0x1c>
   10bd8:	add	lr, pc, lr
   10bdc:	ldr	pc, [lr, #8]!
   10be0:	andeq	r2, r1, r0, lsr #8

00010be4 <strstr@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #73728	; 0x12000
   10bec:	ldr	pc, [ip, #1056]!	; 0x420

00010bf0 <strcmp@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #73728	; 0x12000
   10bf8:	ldr	pc, [ip, #1048]!	; 0x418

00010bfc <auparse_next_event@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #73728	; 0x12000
   10c04:	ldr	pc, [ip, #1040]!	; 0x410

00010c08 <fopen@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #73728	; 0x12000
   10c10:	ldr	pc, [ip, #1032]!	; 0x408

00010c14 <getuid@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #73728	; 0x12000
   10c1c:	ldr	pc, [ip, #1024]!	; 0x400

00010c20 <free@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #73728	; 0x12000
   10c28:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c2c <time@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #73728	; 0x12000
   10c34:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c38 <auparse_next_field@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #73728	; 0x12000
   10c40:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c44 <auparse_destroy@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #73728	; 0x12000
   10c4c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c50 <ctime@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #73728	; 0x12000
   10c58:	ldr	pc, [ip, #984]!	; 0x3d8

00010c5c <__stack_chk_fail@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #73728	; 0x12000
   10c64:	ldr	pc, [ip, #976]!	; 0x3d0

00010c68 <auparse_find_field@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #73728	; 0x12000
   10c70:	ldr	pc, [ip, #968]!	; 0x3c8

00010c74 <auparse_get_time@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #73728	; 0x12000
   10c7c:	ldr	pc, [ip, #960]!	; 0x3c0

00010c80 <fwrite@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #73728	; 0x12000
   10c88:	ldr	pc, [ip, #952]!	; 0x3b8

00010c8c <auparse_get_serial@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #73728	; 0x12000
   10c94:	ldr	pc, [ip, #944]!	; 0x3b0

00010c98 <auparse_get_type@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #73728	; 0x12000
   10ca0:	ldr	pc, [ip, #936]!	; 0x3a8

00010ca4 <puts@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #73728	; 0x12000
   10cac:	ldr	pc, [ip, #928]!	; 0x3a0

00010cb0 <malloc@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #73728	; 0x12000
   10cb8:	ldr	pc, [ip, #920]!	; 0x398

00010cbc <__libc_start_main@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #73728	; 0x12000
   10cc4:	ldr	pc, [ip, #912]!	; 0x390

00010cc8 <strerror@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #904]!	; 0x388

00010cd4 <strftime@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #896]!	; 0x380

00010ce0 <localtime@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #888]!	; 0x378

00010cec <auparse_get_record_text@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #880]!	; 0x370

00010cf8 <__gmon_start__@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #872]!	; 0x368

00010d04 <__errno_location@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #864]!	; 0x360

00010d10 <auparse_interpret_field@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #856]!	; 0x358

00010d1c <__strdup@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #848]!	; 0x350

00010d28 <auparse_first_record@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #840]!	; 0x348

00010d34 <putchar@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #73728	; 0x12000
   10d3c:	ldr	pc, [ip, #832]!	; 0x340

00010d40 <auparse_get_field_int@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #73728	; 0x12000
   10d48:	ldr	pc, [ip, #824]!	; 0x338

00010d4c <__printf_chk@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #73728	; 0x12000
   10d54:	ldr	pc, [ip, #816]!	; 0x330

00010d58 <__fprintf_chk@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #73728	; 0x12000
   10d60:	ldr	pc, [ip, #808]!	; 0x328

00010d64 <fclose@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #73728	; 0x12000
   10d6c:	ldr	pc, [ip, #800]!	; 0x320

00010d70 <auparse_init@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #73728	; 0x12000
   10d78:	ldr	pc, [ip, #792]!	; 0x318

00010d7c <setlocale@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #73728	; 0x12000
   10d84:	ldr	pc, [ip, #784]!	; 0x310

00010d88 <strncmp@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #73728	; 0x12000
   10d90:	ldr	pc, [ip, #776]!	; 0x308

00010d94 <abort@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #73728	; 0x12000
   10d9c:	ldr	pc, [ip, #768]!	; 0x300

Disassembly of section .text:

00010da0 <.text>:
   10da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10da4:	movw	fp, #12456	; 0x30a8
   10da8:	movt	fp, #2
   10dac:	sub	sp, sp, #100	; 0x64
   10db0:	mov	r8, r0
   10db4:	mov	r6, r1
   10db8:	ldr	r3, [fp]
   10dbc:	movw	r1, #9392	; 0x24b0
   10dc0:	mov	r0, #6
   10dc4:	movt	r1, #1
   10dc8:	str	r3, [sp, #92]	; 0x5c
   10dcc:	bl	10d7c <setlocale@plt>
   10dd0:	cmp	r8, #1
   10dd4:	ble	11820 <abort@plt+0xa8c>
   10dd8:	mov	r9, #0
   10ddc:	mov	r4, #1
   10de0:	mov	sl, r9
   10de4:	b	10e20 <abort@plt+0x8c>
   10de8:	ldrb	r3, [r5, #1]
   10dec:	cmp	r3, #102	; 0x66
   10df0:	bne	10e34 <abort@plt+0xa0>
   10df4:	ldrb	r3, [r5, #2]
   10df8:	cmp	r3, #0
   10dfc:	bne	10e34 <abort@plt+0xa0>
   10e00:	cmp	sl, #0
   10e04:	bne	11794 <abort@plt+0xa00>
   10e08:	add	r7, r6, r7
   10e0c:	add	r4, r4, #1
   10e10:	ldr	r9, [r7, #4]
   10e14:	add	r4, r4, #1
   10e18:	cmp	r8, r4
   10e1c:	ble	10e68 <abort@plt+0xd4>
   10e20:	ldr	r5, [r6, r4, lsl #2]
   10e24:	lsl	r7, r4, #2
   10e28:	ldrb	r3, [r5]
   10e2c:	cmp	r3, #45	; 0x2d
   10e30:	beq	10de8 <abort@plt+0x54>
   10e34:	movw	r1, #9744	; 0x2610
   10e38:	mov	r0, r5
   10e3c:	movt	r1, #1
   10e40:	bl	10bf0 <strcmp@plt>
   10e44:	cmp	r0, #0
   10e48:	bne	11064 <abort@plt+0x2d0>
   10e4c:	add	r4, r4, #1
   10e50:	movw	r3, #12472	; 0x30b8
   10e54:	cmp	r8, r4
   10e58:	movt	r3, #2
   10e5c:	mov	r2, #1
   10e60:	str	r2, [r3, #4]
   10e64:	bgt	10e20 <abort@plt+0x8c>
   10e68:	ldr	r0, [pc, #3224]	; 11b08 <abort@plt+0xd74>
   10e6c:	bl	12064 <abort@plt+0x12d0>
   10e70:	cmp	r9, #0
   10e74:	beq	117bc <abort@plt+0xa28>
   10e78:	mov	r1, r9
   10e7c:	mov	r0, #1
   10e80:	bl	10d70 <auparse_init@plt>
   10e84:	mov	r4, r0
   10e88:	cmp	r4, #0
   10e8c:	beq	119ec <abort@plt+0xc58>
   10e90:	movw	r5, #12472	; 0x30b8
   10e94:	movw	sl, #9244	; 0x241c
   10e98:	movw	r8, #12460	; 0x30ac
   10e9c:	movt	r5, #2
   10ea0:	movt	sl, #1
   10ea4:	movt	r8, #2
   10ea8:	movw	ip, #10236	; 0x27fc
   10eac:	movt	ip, #1
   10eb0:	str	ip, [sp, #16]
   10eb4:	mov	r0, r4
   10eb8:	bl	10bfc <auparse_next_event@plt>
   10ebc:	cmp	r0, #0
   10ec0:	mov	r0, r4
   10ec4:	ble	116b4 <abort@plt+0x920>
   10ec8:	bl	10c98 <auparse_get_type@plt>
   10ecc:	cmp	r0, #0
   10ed0:	blt	10eb4 <abort@plt+0x120>
   10ed4:	movw	r3, #1112	; 0x458
   10ed8:	cmp	r0, r3
   10edc:	beq	11470 <abort@plt+0x6dc>
   10ee0:	ble	111a0 <abort@plt+0x40c>
   10ee4:	movw	r3, #1128	; 0x468
   10ee8:	cmp	r0, r3
   10eec:	beq	11640 <abort@plt+0x8ac>
   10ef0:	cmp	r0, #1200	; 0x4b0
   10ef4:	beq	11610 <abort@plt+0x87c>
   10ef8:	movw	r3, #1127	; 0x467
   10efc:	cmp	r0, r3
   10f00:	bne	10eb4 <abort@plt+0x120>
   10f04:	ldr	r6, [r5, #24]
   10f08:	cmp	r6, #0
   10f0c:	str	r6, [r5, #28]
   10f10:	movne	r7, #4
   10f14:	beq	10f58 <abort@plt+0x1c4>
   10f18:	ldr	r3, [r6, #20]
   10f1c:	cmp	r3, #0
   10f20:	beq	10f48 <abort@plt+0x1b4>
   10f24:	mov	r0, r4
   10f28:	bl	10c8c <auparse_get_serial@plt>
   10f2c:	str	r7, [r6, #36]	; 0x24
   10f30:	str	r0, [r6, #48]	; 0x30
   10f34:	mov	r0, r4
   10f38:	bl	10c74 <auparse_get_time@plt>
   10f3c:	str	r0, [r6, #8]
   10f40:	mov	r0, r6
   10f44:	bl	11c78 <abort@plt+0xee4>
   10f48:	ldr	r0, [pc, #3000]	; 11b08 <abort@plt+0xd74>
   10f4c:	bl	12074 <abort@plt+0x12e0>
   10f50:	subs	r6, r0, #0
   10f54:	bne	10f18 <abort@plt+0x184>
   10f58:	ldr	r6, [r5, #24]
   10f5c:	cmp	r6, #0
   10f60:	str	r6, [r5, #28]
   10f64:	movne	r7, #3
   10f68:	beq	10fac <abort@plt+0x218>
   10f6c:	ldr	r3, [r6, #36]	; 0x24
   10f70:	cmp	r3, #4
   10f74:	beq	10f9c <abort@plt+0x208>
   10f78:	mov	r0, r4
   10f7c:	bl	10c8c <auparse_get_serial@plt>
   10f80:	str	r7, [r6, #36]	; 0x24
   10f84:	str	r0, [r6, #48]	; 0x30
   10f88:	mov	r0, r4
   10f8c:	bl	10c74 <auparse_get_time@plt>
   10f90:	str	r0, [r6, #8]
   10f94:	mov	r0, r6
   10f98:	bl	11c78 <abort@plt+0xee4>
   10f9c:	ldr	r0, [pc, #2916]	; 11b08 <abort@plt+0xd74>
   10fa0:	bl	12074 <abort@plt+0x12e0>
   10fa4:	subs	r6, r0, #0
   10fa8:	bne	10f6c <abort@plt+0x1d8>
   10fac:	ldr	r0, [pc, #2900]	; 11b08 <abort@plt+0xd74>
   10fb0:	bl	12090 <abort@plt+0x12fc>
   10fb4:	ldr	r0, [pc, #2892]	; 11b08 <abort@plt+0xd74>
   10fb8:	bl	12064 <abort@plt+0x12d0>
   10fbc:	mov	r0, r4
   10fc0:	bl	10c74 <auparse_get_time@plt>
   10fc4:	mov	r7, r0
   10fc8:	mov	r0, r4
   10fcc:	bl	10c8c <auparse_get_serial@plt>
   10fd0:	mov	r1, #0
   10fd4:	mov	r3, r1
   10fd8:	mov	r2, r1
   10fdc:	str	r0, [sp]
   10fe0:	ldr	r0, [pc, #2848]	; 11b08 <abort@plt+0xd74>
   10fe4:	bl	1213c <abort@plt+0x13a8>
   10fe8:	ldr	r6, [r5, #28]
   10fec:	mov	r0, #7
   10ff0:	str	r7, [r6, #4]
   10ff4:	bl	10cb0 <malloc@plt>
   10ff8:	subs	r3, r0, #0
   10ffc:	beq	1101c <abort@plt+0x288>
   11000:	movw	r2, #10228	; 0x27f4
   11004:	movt	r2, #1
   11008:	ldm	r2, {r0, r1}
   1100c:	lsr	r2, r1, #16
   11010:	strb	r2, [r3, #6]
   11014:	str	r0, [r3]
   11018:	strh	r1, [r3, #4]
   1101c:	str	r3, [r6, #20]
   11020:	mov	r0, #12
   11024:	bl	10cb0 <malloc@plt>
   11028:	subs	r3, r0, #0
   1102c:	ldrne	ip, [sp, #16]
   11030:	ldmne	ip, {r0, r1, r2}
   11034:	stmne	r3, {r0, r1, r2}
   11038:	ldr	r0, [r5, #32]
   1103c:	str	r3, [r6, #24]
   11040:	cmp	r0, #0
   11044:	beq	11050 <abort@plt+0x2bc>
   11048:	bl	10d1c <__strdup@plt>
   1104c:	str	r0, [r6, #28]
   11050:	mov	r3, #0
   11054:	mov	r0, r4
   11058:	str	r3, [r6, #32]
   1105c:	bl	11c40 <abort@plt+0xeac>
   11060:	b	10eb4 <abort@plt+0x120>
   11064:	movw	r1, #9752	; 0x2618
   11068:	mov	r0, r5
   1106c:	movt	r1, #1
   11070:	bl	10bf0 <strcmp@plt>
   11074:	cmp	r0, #0
   11078:	bne	11090 <abort@plt+0x2fc>
   1107c:	movw	r3, #12472	; 0x30b8
   11080:	movt	r3, #2
   11084:	mov	r2, #1
   11088:	str	r2, [r3, #8]
   1108c:	b	10e14 <abort@plt+0x80>
   11090:	movw	r1, #9760	; 0x2620
   11094:	mov	r0, r5
   11098:	movt	r1, #1
   1109c:	bl	10bf0 <strcmp@plt>
   110a0:	cmp	r0, #0
   110a4:	beq	11110 <abort@plt+0x37c>
   110a8:	movw	r1, #9788	; 0x263c
   110ac:	mov	r0, r5
   110b0:	movt	r1, #1
   110b4:	bl	10bf0 <strcmp@plt>
   110b8:	cmp	r0, #0
   110bc:	bne	110d0 <abort@plt+0x33c>
   110c0:	cmp	r9, #0
   110c4:	bne	11a44 <abort@plt+0xcb0>
   110c8:	mov	sl, #1
   110cc:	b	10e14 <abort@plt+0x80>
   110d0:	movw	r1, #9816	; 0x2658
   110d4:	mov	r0, r5
   110d8:	movt	r1, #1
   110dc:	bl	10bf0 <strcmp@plt>
   110e0:	cmp	r0, #0
   110e4:	bne	11134 <abort@plt+0x3a0>
   110e8:	movw	r3, #12472	; 0x30b8
   110ec:	movt	r3, #2
   110f0:	ldr	r2, [r3, #12]
   110f4:	cmp	r2, #0
   110f8:	bne	11a90 <abort@plt+0xcfc>
   110fc:	add	r7, r6, r7
   11100:	add	r4, r4, #1
   11104:	ldr	r2, [r7, #4]
   11108:	str	r2, [r3, #12]
   1110c:	b	10e14 <abort@plt+0x80>
   11110:	movw	r0, #9772	; 0x262c
   11114:	movw	r1, #9784	; 0x2638
   11118:	movt	r0, #1
   1111c:	movt	r1, #1
   11120:	bl	10c08 <fopen@plt>
   11124:	movw	r3, #12472	; 0x30b8
   11128:	movt	r3, #2
   1112c:	str	r0, [r3]
   11130:	b	10e14 <abort@plt+0x80>
   11134:	movw	r1, #9824	; 0x2660
   11138:	mov	r0, r5
   1113c:	movt	r1, #1
   11140:	bl	10bf0 <strcmp@plt>
   11144:	cmp	r0, #0
   11148:	bne	11174 <abort@plt+0x3e0>
   1114c:	movw	r3, #12472	; 0x30b8
   11150:	movt	r3, #2
   11154:	ldr	r2, [r3, #16]
   11158:	cmp	r2, #0
   1115c:	bne	11a90 <abort@plt+0xcfc>
   11160:	add	r7, r6, r7
   11164:	add	r4, r4, #1
   11168:	ldr	r2, [r7, #4]
   1116c:	str	r2, [r3, #16]
   11170:	b	10e14 <abort@plt+0x80>
   11174:	mov	r0, r5
   11178:	movw	r1, #9832	; 0x2668
   1117c:	movt	r1, #1
   11180:	bl	10bf0 <strcmp@plt>
   11184:	cmp	r0, #0
   11188:	bne	11a90 <abort@plt+0xcfc>
   1118c:	movw	r3, #12472	; 0x30b8
   11190:	movt	r3, #2
   11194:	mov	r2, #1
   11198:	str	r2, [r3, #20]
   1119c:	b	10e14 <abort@plt+0x80>
   111a0:	movw	r3, #1006	; 0x3ee
   111a4:	cmp	r0, r3
   111a8:	beq	112b8 <abort@plt+0x524>
   111ac:	add	r3, r3, #100	; 0x64
   111b0:	cmp	r0, r3
   111b4:	bne	10eb4 <abort@plt+0x120>
   111b8:	movw	r1, #9900	; 0x26ac
   111bc:	mov	r0, r4
   111c0:	movt	r1, #1
   111c4:	bl	10c68 <auparse_find_field@plt>
   111c8:	cmp	r0, #0
   111cc:	mvneq	r6, #0
   111d0:	beq	111e0 <abort@plt+0x44c>
   111d4:	mov	r0, r4
   111d8:	bl	10d40 <auparse_get_field_int@plt>
   111dc:	mov	r6, r0
   111e0:	movw	r1, #9908	; 0x26b4
   111e4:	mov	r0, r4
   111e8:	movt	r1, #1
   111ec:	bl	10c68 <auparse_find_field@plt>
   111f0:	cmp	r0, #0
   111f4:	mvneq	r7, #0
   111f8:	beq	11208 <abort@plt+0x474>
   111fc:	mov	r0, r4
   11200:	bl	10d40 <auparse_get_field_int@plt>
   11204:	mov	r7, r0
   11208:	movw	r1, #9920	; 0x26c0
   1120c:	mov	r0, r4
   11210:	movt	r1, #1
   11214:	bl	10c68 <auparse_find_field@plt>
   11218:	cmp	r0, #0
   1121c:	beq	112a0 <abort@plt+0x50c>
   11220:	mov	r0, r4
   11224:	bl	10d40 <auparse_get_field_int@plt>
   11228:	cmn	r6, #1
   1122c:	cmnne	r7, #1
   11230:	beq	112a0 <abort@plt+0x50c>
   11234:	cmn	r0, #1
   11238:	beq	112a0 <abort@plt+0x50c>
   1123c:	mov	r2, r6
   11240:	mov	r3, r0
   11244:	mov	r1, r7
   11248:	ldr	r0, [pc, #2232]	; 11b08 <abort@plt+0xd74>
   1124c:	bl	1231c <abort@plt+0x1588>
   11250:	subs	r6, r0, #0
   11254:	beq	112ac <abort@plt+0x518>
   11258:	ldr	r3, [r6, #4]
   1125c:	cmp	r3, #0
   11260:	bne	1167c <abort@plt+0x8e8>
   11264:	movw	r1, #12472	; 0x30b8
   11268:	movt	r1, #2
   1126c:	ldr	r3, [r1, #20]
   11270:	cmp	r3, #0
   11274:	beq	116a8 <abort@plt+0x914>
   11278:	mov	r0, r4
   1127c:	ldr	r6, [r8]
   11280:	bl	10c8c <auparse_get_serial@plt>
   11284:	movw	r2, #10192	; 0x27d0
   11288:	mov	r1, #1
   1128c:	movt	r2, #1
   11290:	mov	r3, r0
   11294:	mov	r0, r6
   11298:	bl	10d58 <__fprintf_chk@plt>
   1129c:	b	116a8 <abort@plt+0x914>
   112a0:	ldr	r3, [r5, #20]
   112a4:	cmp	r3, #0
   112a8:	bne	117f8 <abort@plt+0xa64>
   112ac:	mov	r0, r4
   112b0:	bl	11c40 <abort@plt+0xeac>
   112b4:	b	10eb4 <abort@plt+0x120>
   112b8:	movw	r1, #9900	; 0x26ac
   112bc:	mov	r0, r4
   112c0:	movt	r1, #1
   112c4:	bl	10c68 <auparse_find_field@plt>
   112c8:	cmp	r0, #0
   112cc:	mvneq	r6, #0
   112d0:	beq	112e0 <abort@plt+0x54c>
   112d4:	mov	r0, r4
   112d8:	bl	10d40 <auparse_get_field_int@plt>
   112dc:	mov	r6, r0
   112e0:	movw	r1, #9904	; 0x26b0
   112e4:	mov	r0, r4
   112e8:	movt	r1, #1
   112ec:	bl	10c68 <auparse_find_field@plt>
   112f0:	cmp	r0, #0
   112f4:	beq	11848 <abort@plt+0xab4>
   112f8:	movw	r1, #9908	; 0x26b4
   112fc:	mov	r0, r4
   11300:	movt	r1, #1
   11304:	bl	10c68 <auparse_find_field@plt>
   11308:	cmp	r0, #0
   1130c:	beq	117ec <abort@plt+0xa58>
   11310:	mov	r0, r4
   11314:	bl	10d40 <auparse_get_field_int@plt>
   11318:	mov	r7, r0
   1131c:	mov	r0, r4
   11320:	bl	10d10 <auparse_interpret_field@plt>
   11324:	mov	r9, r0
   11328:	movw	r1, #9916	; 0x26bc
   1132c:	mov	r0, r4
   11330:	movt	r1, #1
   11334:	bl	10c68 <auparse_find_field@plt>
   11338:	cmp	r0, #0
   1133c:	beq	1187c <abort@plt+0xae8>
   11340:	movw	r1, #9920	; 0x26c0
   11344:	mov	r0, r4
   11348:	movt	r1, #1
   1134c:	bl	10c68 <auparse_find_field@plt>
   11350:	cmp	r0, #0
   11354:	beq	1143c <abort@plt+0x6a8>
   11358:	mov	r0, r4
   1135c:	bl	10d40 <auparse_get_field_int@plt>
   11360:	cmn	r6, #1
   11364:	cmnne	r7, #1
   11368:	mov	r2, r0
   1136c:	beq	1143c <abort@plt+0x6a8>
   11370:	cmn	r0, #1
   11374:	beq	1143c <abort@plt+0x6a8>
   11378:	mov	r1, r2
   1137c:	ldr	r0, [pc, #1924]	; 11b08 <abort@plt+0xd74>
   11380:	str	r2, [sp, #8]
   11384:	bl	12370 <abort@plt+0x15dc>
   11388:	ldr	r2, [sp, #8]
   1138c:	subs	r3, r0, #0
   11390:	beq	113c8 <abort@plt+0x634>
   11394:	mov	r1, #5
   11398:	mov	r0, r4
   1139c:	str	r1, [r3, #36]	; 0x24
   113a0:	str	r2, [sp, #8]
   113a4:	str	r3, [sp, #12]
   113a8:	bl	10c74 <auparse_get_time@plt>
   113ac:	ldr	r3, [sp, #12]
   113b0:	str	r0, [r3, #8]
   113b4:	mov	r0, r3
   113b8:	bl	11c78 <abort@plt+0xee4>
   113bc:	ldr	r0, [pc, #1860]	; 11b08 <abort@plt+0xd74>
   113c0:	bl	12274 <abort@plt+0x14e0>
   113c4:	ldr	r2, [sp, #8]
   113c8:	ldr	r3, [r5, #12]
   113cc:	cmp	r3, #0
   113d0:	beq	118e8 <abort@plt+0xb54>
   113d4:	cmp	r9, #0
   113d8:	beq	11400 <abort@plt+0x66c>
   113dc:	mov	r0, r3
   113e0:	mov	r1, r9
   113e4:	str	r2, [sp, #8]
   113e8:	str	r3, [sp, #12]
   113ec:	bl	10bf0 <strcmp@plt>
   113f0:	ldr	r2, [sp, #8]
   113f4:	ldr	r3, [sp, #12]
   113f8:	cmp	r0, #0
   113fc:	beq	118e8 <abort@plt+0xb54>
   11400:	ldr	r2, [r5, #20]
   11404:	cmp	r2, #0
   11408:	beq	112ac <abort@plt+0x518>
   1140c:	mov	r0, r4
   11410:	ldr	r6, [r8]
   11414:	str	r3, [sp, #12]
   11418:	bl	10c8c <auparse_get_serial@plt>
   1141c:	ldr	r3, [sp, #12]
   11420:	movw	r2, #9952	; 0x26e0
   11424:	mov	r1, #1
   11428:	movt	r2, #1
   1142c:	str	r0, [sp]
   11430:	mov	r0, r6
   11434:	bl	10d58 <__fprintf_chk@plt>
   11438:	b	112ac <abort@plt+0x518>
   1143c:	ldr	r3, [r5, #20]
   11440:	cmp	r3, #0
   11444:	beq	112ac <abort@plt+0x518>
   11448:	mov	r0, r4
   1144c:	ldr	r6, [r8]
   11450:	bl	10c8c <auparse_get_serial@plt>
   11454:	movw	r2, #9924	; 0x26c4
   11458:	mov	r1, #1
   1145c:	movt	r2, #1
   11460:	mov	r3, r0
   11464:	mov	r0, r6
   11468:	bl	10d58 <__fprintf_chk@plt>
   1146c:	b	112ac <abort@plt+0x518>
   11470:	movw	r1, #9900	; 0x26ac
   11474:	mov	r0, r4
   11478:	movt	r1, #1
   1147c:	bl	10c68 <auparse_find_field@plt>
   11480:	cmp	r0, #0
   11484:	mvneq	r9, #0
   11488:	beq	11498 <abort@plt+0x704>
   1148c:	mov	r0, r4
   11490:	bl	10d40 <auparse_get_field_int@plt>
   11494:	mov	r9, r0
   11498:	movw	r1, #9920	; 0x26c0
   1149c:	mov	r0, r4
   114a0:	movt	r1, #1
   114a4:	bl	10c68 <auparse_find_field@plt>
   114a8:	cmp	r0, #0
   114ac:	beq	117e0 <abort@plt+0xa4c>
   114b0:	mov	r0, r4
   114b4:	bl	10d40 <auparse_get_field_int@plt>
   114b8:	str	r0, [sp, #24]
   114bc:	movw	r1, #10000	; 0x2710
   114c0:	mov	r0, r4
   114c4:	movt	r1, #1
   114c8:	bl	10c68 <auparse_find_field@plt>
   114cc:	cmp	r0, #0
   114d0:	mov	r0, r4
   114d4:	beq	118b0 <abort@plt+0xb1c>
   114d8:	bl	10d40 <auparse_get_field_int@plt>
   114dc:	mov	r7, r0
   114e0:	mov	r0, r4
   114e4:	bl	10c74 <auparse_get_time@plt>
   114e8:	movw	r1, #10008	; 0x2718
   114ec:	movt	r1, #1
   114f0:	str	r0, [sp, #28]
   114f4:	mov	r0, r4
   114f8:	bl	10c68 <auparse_find_field@plt>
   114fc:	subs	r6, r0, #0
   11500:	beq	11530 <abort@plt+0x79c>
   11504:	ldrb	r3, [r6]
   11508:	cmp	r3, #63	; 0x3f
   1150c:	bne	11530 <abort@plt+0x79c>
   11510:	ldrb	r3, [r6, #1]
   11514:	cmp	r3, #0
   11518:	bne	11530 <abort@plt+0x79c>
   1151c:	movw	r1, #10020	; 0x2724
   11520:	mov	r0, r4
   11524:	movt	r1, #1
   11528:	bl	10c68 <auparse_find_field@plt>
   1152c:	mov	r6, r0
   11530:	movw	r1, #10028	; 0x272c
   11534:	mov	r0, r4
   11538:	movt	r1, #1
   1153c:	bl	10c68 <auparse_find_field@plt>
   11540:	movw	r1, #10040	; 0x2738
   11544:	movt	r1, #1
   11548:	cmp	r0, #0
   1154c:	moveq	r0, sl
   11550:	str	r0, [sp, #20]
   11554:	mov	r0, r4
   11558:	bl	10c68 <auparse_find_field@plt>
   1155c:	cmp	r0, #0
   11560:	beq	11720 <abort@plt+0x98c>
   11564:	mov	r0, r4
   11568:	bl	10d10 <auparse_interpret_field@plt>
   1156c:	cmp	r0, #0
   11570:	beq	11720 <abort@plt+0x98c>
   11574:	movw	r1, #10044	; 0x273c
   11578:	movt	r1, #1
   1157c:	bl	10bf0 <strcmp@plt>
   11580:	cmp	r0, #0
   11584:	beq	11724 <abort@plt+0x990>
   11588:	mov	r0, r4
   1158c:	bl	10d28 <auparse_first_record@plt>
   11590:	mov	r0, r4
   11594:	movw	r1, #10256	; 0x2810
   11598:	movt	r1, #1
   1159c:	bl	10c68 <auparse_find_field@plt>
   115a0:	subs	r3, r0, #0
   115a4:	beq	115b4 <abort@plt+0x820>
   115a8:	mov	r0, r4
   115ac:	bl	10d10 <auparse_interpret_field@plt>
   115b0:	mov	r3, r0
   115b4:	ldr	r2, [r5, #4]
   115b8:	cmp	r2, #1
   115bc:	bne	11744 <abort@plt+0x9b0>
   115c0:	ldr	ip, [sp, #28]
   115c4:	mov	r0, r4
   115c8:	mov	r1, #2
   115cc:	str	r7, [sp, #48]	; 0x30
   115d0:	str	r3, [sp, #56]	; 0x38
   115d4:	mov	r7, #0
   115d8:	str	ip, [sp, #40]	; 0x28
   115dc:	str	ip, [sp, #44]	; 0x2c
   115e0:	ldr	ip, [sp, #20]
   115e4:	str	r6, [sp, #64]	; 0x40
   115e8:	str	r2, [sp, #68]	; 0x44
   115ec:	str	ip, [sp, #60]	; 0x3c
   115f0:	str	r1, [sp, #72]	; 0x48
   115f4:	str	r7, [sp, #76]	; 0x4c
   115f8:	bl	10c8c <auparse_get_serial@plt>
   115fc:	str	r7, [sp, #84]	; 0x54
   11600:	str	r0, [sp, #80]	; 0x50
   11604:	add	r0, sp, #36	; 0x24
   11608:	bl	11c78 <abort@plt+0xee4>
   1160c:	b	112ac <abort@plt+0x518>
   11610:	movw	r1, #10248	; 0x2808
   11614:	mov	r0, r4
   11618:	movt	r1, #1
   1161c:	bl	10c68 <auparse_find_field@plt>
   11620:	subs	r6, r0, #0
   11624:	beq	112ac <abort@plt+0x518>
   11628:	ldr	r0, [r5, #32]
   1162c:	bl	10c20 <free@plt>
   11630:	mov	r0, r6
   11634:	bl	10d1c <__strdup@plt>
   11638:	str	r0, [r5, #32]
   1163c:	b	112ac <abort@plt+0x518>
   11640:	ldr	r6, [r5, #24]
   11644:	cmp	r6, #0
   11648:	str	r6, [r5, #28]
   1164c:	beq	112ac <abort@plt+0x518>
   11650:	ldr	r3, [r6, #20]
   11654:	cmp	r3, #0
   11658:	bne	1167c <abort@plt+0x8e8>
   1165c:	ldr	r0, [pc, #1188]	; 11b08 <abort@plt+0xd74>
   11660:	bl	12074 <abort@plt+0x12e0>
   11664:	cmp	r0, #0
   11668:	beq	112ac <abort@plt+0x518>
   1166c:	ldr	r3, [r0, #20]
   11670:	cmp	r3, #0
   11674:	beq	1165c <abort@plt+0x8c8>
   11678:	mov	r6, r0
   1167c:	mov	r0, r4
   11680:	bl	10c74 <auparse_get_time@plt>
   11684:	mov	r7, r0
   11688:	mov	r0, r4
   1168c:	bl	10c8c <auparse_get_serial@plt>
   11690:	mov	r1, r7
   11694:	mov	r2, r0
   11698:	ldr	r0, [pc, #1128]	; 11b08 <abort@plt+0xd74>
   1169c:	bl	12250 <abort@plt+0x14bc>
   116a0:	mov	r0, r6
   116a4:	bl	11c78 <abort@plt+0xee4>
   116a8:	ldr	r0, [pc, #1112]	; 11b08 <abort@plt+0xd74>
   116ac:	bl	12274 <abort@plt+0x14e0>
   116b0:	b	112ac <abort@plt+0x518>
   116b4:	bl	10c44 <auparse_destroy@plt>
   116b8:	ldr	r3, [r5, #24]
   116bc:	str	r3, [r5, #28]
   116c0:	ldr	r0, [r5, #28]
   116c4:	movw	r4, #12472	; 0x30b8
   116c8:	movt	r4, #2
   116cc:	bl	11c78 <abort@plt+0xee4>
   116d0:	add	r0, r4, #24
   116d4:	bl	12074 <abort@plt+0x12e0>
   116d8:	cmp	r0, #0
   116dc:	bne	116c0 <abort@plt+0x92c>
   116e0:	mov	r6, r0
   116e4:	ldr	r0, [r4, #32]
   116e8:	bl	10c20 <free@plt>
   116ec:	add	r0, r4, #24
   116f0:	bl	12090 <abort@plt+0x12fc>
   116f4:	ldr	r0, [r4]
   116f8:	cmp	r0, #0
   116fc:	beq	11708 <abort@plt+0x974>
   11700:	bl	10d64 <fclose@plt>
   11704:	mov	r0, r6
   11708:	ldr	r2, [sp, #92]	; 0x5c
   1170c:	ldr	r3, [fp]
   11710:	cmp	r2, r3
   11714:	bne	11b04 <abort@plt+0xd70>
   11718:	add	sp, sp, #100	; 0x64
   1171c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11720:	mvn	r0, #0
   11724:	cmn	r9, #1
   11728:	cmnne	r7, #1
   1172c:	beq	11760 <abort@plt+0x9cc>
   11730:	ldr	ip, [sp, #24]
   11734:	cmn	ip, #1
   11738:	beq	11760 <abort@plt+0x9cc>
   1173c:	cmp	r0, #0
   11740:	beq	11988 <abort@plt+0xbf4>
   11744:	ldr	r3, [r5, #20]
   11748:	cmp	r3, #0
   1174c:	beq	112ac <abort@plt+0x518>
   11750:	movw	r0, #10128	; 0x2790
   11754:	movt	r0, #1
   11758:	bl	10ca4 <puts@plt>
   1175c:	b	112ac <abort@plt+0x518>
   11760:	ldr	r3, [r5, #20]
   11764:	cmp	r3, #0
   11768:	beq	112ac <abort@plt+0x518>
   1176c:	mov	r0, r4
   11770:	ldr	r6, [r8]
   11774:	bl	10c8c <auparse_get_serial@plt>
   11778:	movw	r2, #10052	; 0x2744
   1177c:	mov	r1, #1
   11780:	movt	r2, #1
   11784:	mov	r3, r0
   11788:	mov	r0, r6
   1178c:	bl	10d58 <__fprintf_chk@plt>
   11790:	b	112ac <abort@plt+0x518>
   11794:	movw	r3, #12460	; 0x30ac
   11798:	movt	r3, #2
   1179c:	movw	r0, #9720	; 0x25f8
   117a0:	mov	r1, #1
   117a4:	ldr	r3, [r3]
   117a8:	movt	r0, #1
   117ac:	mov	r2, #20
   117b0:	bl	10c80 <fwrite@plt>
   117b4:	mov	r0, #1
   117b8:	b	11708 <abort@plt+0x974>
   117bc:	cmp	sl, #0
   117c0:	beq	11828 <abort@plt+0xa94>
   117c4:	movw	r3, #12464	; 0x30b0
   117c8:	movt	r3, #2
   117cc:	mov	r0, #6
   117d0:	ldr	r1, [r3]
   117d4:	bl	10d70 <auparse_init@plt>
   117d8:	mov	r4, r0
   117dc:	b	10e88 <abort@plt+0xf4>
   117e0:	mvn	r3, #0
   117e4:	str	r3, [sp, #24]
   117e8:	b	114bc <abort@plt+0x728>
   117ec:	mov	r9, r0
   117f0:	mvn	r7, #0
   117f4:	b	11328 <abort@plt+0x594>
   117f8:	mov	r0, r4
   117fc:	ldr	r6, [r8]
   11800:	bl	10c8c <auparse_get_serial@plt>
   11804:	movw	r2, #10160	; 0x27b0
   11808:	mov	r1, #1
   1180c:	movt	r2, #1
   11810:	mov	r3, r0
   11814:	mov	r0, r6
   11818:	bl	10d58 <__fprintf_chk@plt>
   1181c:	b	112ac <abort@plt+0x518>
   11820:	ldr	r0, [pc, #736]	; 11b08 <abort@plt+0xd74>
   11824:	bl	12064 <abort@plt+0x12d0>
   11828:	bl	10c14 <getuid@plt>
   1182c:	cmp	r0, #0
   11830:	bne	11a6c <abort@plt+0xcd8>
   11834:	mov	r0, #0
   11838:	mov	r1, r0
   1183c:	bl	10d70 <auparse_init@plt>
   11840:	mov	r4, r0
   11844:	b	10e88 <abort@plt+0xf4>
   11848:	mov	r0, r4
   1184c:	bl	10d28 <auparse_first_record@plt>
   11850:	mov	r0, r4
   11854:	movw	r1, #9908	; 0x26b4
   11858:	movt	r1, #1
   1185c:	bl	10c68 <auparse_find_field@plt>
   11860:	mov	r0, r4
   11864:	bl	10c38 <auparse_next_field@plt>
   11868:	mov	r0, r4
   1186c:	movw	r1, #9908	; 0x26b4
   11870:	movt	r1, #1
   11874:	bl	10c68 <auparse_find_field@plt>
   11878:	b	11308 <abort@plt+0x574>
   1187c:	mov	r0, r4
   11880:	bl	10d28 <auparse_first_record@plt>
   11884:	mov	r0, r4
   11888:	movw	r1, #9920	; 0x26c0
   1188c:	movt	r1, #1
   11890:	bl	10c68 <auparse_find_field@plt>
   11894:	mov	r0, r4
   11898:	bl	10c38 <auparse_next_field@plt>
   1189c:	mov	r0, r4
   118a0:	movw	r1, #9920	; 0x26c0
   118a4:	movt	r1, #1
   118a8:	bl	10c68 <auparse_find_field@plt>
   118ac:	b	11350 <abort@plt+0x5bc>
   118b0:	bl	10d28 <auparse_first_record@plt>
   118b4:	mov	r0, r4
   118b8:	movw	r1, #10004	; 0x2714
   118bc:	movt	r1, #1
   118c0:	bl	10c68 <auparse_find_field@plt>
   118c4:	cmp	r0, #0
   118c8:	mvneq	r7, #0
   118cc:	beq	118dc <abort@plt+0xb48>
   118d0:	mov	r0, r4
   118d4:	bl	10d40 <auparse_get_field_int@plt>
   118d8:	mov	r7, r0
   118dc:	mov	r0, r4
   118e0:	bl	10d28 <auparse_first_record@plt>
   118e4:	b	114e0 <abort@plt+0x74c>
   118e8:	mov	r0, #56	; 0x38
   118ec:	str	r2, [sp, #8]
   118f0:	bl	10cb0 <malloc@plt>
   118f4:	ldr	r2, [sp, #8]
   118f8:	subs	r3, r0, #0
   118fc:	beq	112ac <abort@plt+0x518>
   11900:	str	r2, [r3]
   11904:	mov	r0, r4
   11908:	str	r3, [sp, #12]
   1190c:	bl	10c74 <auparse_get_time@plt>
   11910:	ldr	r3, [sp, #12]
   11914:	cmp	r9, #0
   11918:	mov	r1, #0
   1191c:	mvn	r2, #0
   11920:	str	r7, [r3, #12]
   11924:	str	r6, [r3, #16]
   11928:	str	r1, [r3, #8]
   1192c:	str	r2, [r3, #32]
   11930:	str	r0, [r3, #4]
   11934:	mov	r0, r9
   11938:	beq	11948 <abort@plt+0xbb4>
   1193c:	str	r3, [sp, #12]
   11940:	bl	10d1c <__strdup@plt>
   11944:	ldr	r3, [sp, #12]
   11948:	mov	r6, #0
   1194c:	str	r0, [r3, #20]
   11950:	str	r6, [r3, #24]
   11954:	mov	r0, r4
   11958:	str	r6, [r3, #28]
   1195c:	str	r6, [r3, #36]	; 0x24
   11960:	str	r3, [sp, #12]
   11964:	bl	10c8c <auparse_get_serial@plt>
   11968:	ldr	r3, [sp, #12]
   1196c:	str	r6, [r3, #44]	; 0x2c
   11970:	mov	r1, r3
   11974:	str	r6, [r3, #48]	; 0x30
   11978:	str	r0, [r3, #40]	; 0x28
   1197c:	ldr	r0, [pc, #388]	; 11b08 <abort@plt+0xd74>
   11980:	bl	120e4 <abort@plt+0x1350>
   11984:	b	112ac <abort@plt+0x518>
   11988:	mov	r1, r7
   1198c:	mov	r2, r9
   11990:	ldr	r3, [sp, #24]
   11994:	ldr	r0, [pc, #364]	; 11b08 <abort@plt+0xd74>
   11998:	bl	1231c <abort@plt+0x1588>
   1199c:	cmp	r0, #0
   119a0:	beq	11744 <abort@plt+0x9b0>
   119a4:	movw	r2, #12472	; 0x30b8
   119a8:	movt	r2, #2
   119ac:	ldr	r1, [r2, #16]
   119b0:	cmp	r1, #0
   119b4:	beq	119c8 <abort@plt+0xc34>
   119b8:	ldr	r0, [sp, #20]
   119bc:	bl	10be4 <strstr@plt>
   119c0:	cmp	r0, #0
   119c4:	beq	11ab8 <abort@plt+0xd24>
   119c8:	mov	r0, r4
   119cc:	bl	10c8c <auparse_get_serial@plt>
   119d0:	mov	r1, r6
   119d4:	ldr	r2, [sp, #20]
   119d8:	mov	r3, #0
   119dc:	str	r0, [sp]
   119e0:	ldr	r0, [pc, #288]	; 11b08 <abort@plt+0xd74>
   119e4:	bl	121f4 <abort@plt+0x1460>
   119e8:	b	112ac <abort@plt+0x518>
   119ec:	movw	r3, #12460	; 0x30ac
   119f0:	movt	r3, #2
   119f4:	movw	r4, #12472	; 0x30b8
   119f8:	movt	r4, #2
   119fc:	ldr	r5, [r3]
   11a00:	bl	10d04 <__errno_location@plt>
   11a04:	ldr	r0, [r0]
   11a08:	bl	10cc8 <strerror@plt>
   11a0c:	mov	r1, #1
   11a10:	movw	r2, #9888	; 0x26a0
   11a14:	movt	r2, #1
   11a18:	mov	r3, r0
   11a1c:	mov	r0, r5
   11a20:	bl	10d58 <__fprintf_chk@plt>
   11a24:	add	r0, r4, #24
   11a28:	bl	12090 <abort@plt+0x12fc>
   11a2c:	ldr	r0, [r4]
   11a30:	cmp	r0, #0
   11a34:	beq	11a3c <abort@plt+0xca8>
   11a38:	bl	10d64 <fclose@plt>
   11a3c:	mov	r0, #1
   11a40:	b	11708 <abort@plt+0x974>
   11a44:	movw	r3, #12460	; 0x30ac
   11a48:	movt	r3, #2
   11a4c:	movw	r0, #9796	; 0x2644
   11a50:	mov	r1, #1
   11a54:	ldr	r3, [r3]
   11a58:	movt	r0, #1
   11a5c:	mov	r2, #19
   11a60:	bl	10c80 <fwrite@plt>
   11a64:	mov	r0, #1
   11a68:	b	11708 <abort@plt+0x974>
   11a6c:	movw	r3, #12460	; 0x30ac
   11a70:	movt	r3, #2
   11a74:	movw	r0, #9840	; 0x2670
   11a78:	mov	r1, #1
   11a7c:	ldr	r3, [r3]
   11a80:	mov	r2, #46	; 0x2e
   11a84:	movt	r0, #1
   11a88:	bl	10c80 <fwrite@plt>
   11a8c:	b	11834 <abort@plt+0xaa0>
   11a90:	movw	r3, #12460	; 0x30ac
   11a94:	movt	r3, #2
   11a98:	movw	r0, #9636	; 0x25a4
   11a9c:	mov	r1, #1
   11aa0:	ldr	r3, [r3]
   11aa4:	movt	r0, #1
   11aa8:	mov	r2, #82	; 0x52
   11aac:	bl	10c80 <fwrite@plt>
   11ab0:	mov	r0, #1
   11ab4:	b	11708 <abort@plt+0x974>
   11ab8:	ldr	r0, [pc, #72]	; 11b08 <abort@plt+0xd74>
   11abc:	bl	12274 <abort@plt+0x14e0>
   11ac0:	movw	ip, #12472	; 0x30b8
   11ac4:	movt	ip, #2
   11ac8:	ldr	r3, [ip, #20]
   11acc:	cmp	r3, #0
   11ad0:	beq	112ac <abort@plt+0x518>
   11ad4:	mov	r0, r4
   11ad8:	ldr	r6, [r8]
   11adc:	ldr	r7, [ip, #16]
   11ae0:	bl	10c8c <auparse_get_serial@plt>
   11ae4:	movw	r2, #10084	; 0x2764
   11ae8:	mov	r1, #1
   11aec:	movt	r2, #1
   11af0:	mov	r3, r7
   11af4:	str	r0, [sp]
   11af8:	mov	r0, r6
   11afc:	bl	10d58 <__fprintf_chk@plt>
   11b00:	b	112ac <abort@plt+0x518>
   11b04:	bl	10c5c <__stack_chk_fail@plt>
   11b08:	ldrdeq	r3, [r2], -r0
   11b0c:	mov	fp, #0
   11b10:	mov	lr, #0
   11b14:	pop	{r1}		; (ldr r1, [sp], #4)
   11b18:	mov	r2, sp
   11b1c:	push	{r2}		; (str r2, [sp, #-4]!)
   11b20:	push	{r0}		; (str r0, [sp, #-4]!)
   11b24:	ldr	ip, [pc, #16]	; 11b3c <abort@plt+0xda8>
   11b28:	push	{ip}		; (str ip, [sp, #-4]!)
   11b2c:	ldr	r0, [pc, #12]	; 11b40 <abort@plt+0xdac>
   11b30:	ldr	r3, [pc, #12]	; 11b44 <abort@plt+0xdb0>
   11b34:	bl	10cbc <__libc_start_main@plt>
   11b38:	bl	10d94 <abort@plt>
   11b3c:	andeq	r2, r1, r8, lsl #8
   11b40:	andeq	r0, r1, r0, lsr #27
   11b44:	andeq	r2, r1, r4, lsr #7
   11b48:	ldr	r3, [pc, #20]	; 11b64 <abort@plt+0xdd0>
   11b4c:	ldr	r2, [pc, #20]	; 11b68 <abort@plt+0xdd4>
   11b50:	add	r3, pc, r3
   11b54:	ldr	r2, [r3, r2]
   11b58:	cmp	r2, #0
   11b5c:	bxeq	lr
   11b60:	b	10cf8 <__gmon_start__@plt>
   11b64:	andeq	r1, r1, r8, lsr #9
   11b68:	andeq	r0, r0, r0, lsr #1
   11b6c:	push	{r3, lr}
   11b70:	movw	r0, #12456	; 0x30a8
   11b74:	ldr	r3, [pc, #36]	; 11ba0 <abort@plt+0xe0c>
   11b78:	movt	r0, #2
   11b7c:	rsb	r3, r0, r3
   11b80:	cmp	r3, #6
   11b84:	popls	{r3, pc}
   11b88:	movw	r3, #0
   11b8c:	movt	r3, #0
   11b90:	cmp	r3, #0
   11b94:	popeq	{r3, pc}
   11b98:	blx	r3
   11b9c:	pop	{r3, pc}
   11ba0:	andeq	r3, r2, fp, lsr #1
   11ba4:	push	{r3, lr}
   11ba8:	movw	r0, #12456	; 0x30a8
   11bac:	movw	r3, #12456	; 0x30a8
   11bb0:	movt	r0, #2
   11bb4:	movt	r3, #2
   11bb8:	rsb	r3, r0, r3
   11bbc:	asr	r3, r3, #2
   11bc0:	add	r3, r3, r3, lsr #31
   11bc4:	asrs	r1, r3, #1
   11bc8:	popeq	{r3, pc}
   11bcc:	movw	r2, #0
   11bd0:	movt	r2, #0
   11bd4:	cmp	r2, #0
   11bd8:	popeq	{r3, pc}
   11bdc:	blx	r2
   11be0:	pop	{r3, pc}
   11be4:	push	{r4, lr}
   11be8:	movw	r4, #12468	; 0x30b4
   11bec:	movt	r4, #2
   11bf0:	ldrb	r3, [r4]
   11bf4:	cmp	r3, #0
   11bf8:	popne	{r4, pc}
   11bfc:	bl	11b6c <abort@plt+0xdd8>
   11c00:	mov	r3, #1
   11c04:	strb	r3, [r4]
   11c08:	pop	{r4, pc}
   11c0c:	movw	r0, #12012	; 0x2eec
   11c10:	movt	r0, #2
   11c14:	push	{r3, lr}
   11c18:	ldr	r3, [r0]
   11c1c:	cmp	r3, #0
   11c20:	beq	11c38 <abort@plt+0xea4>
   11c24:	movw	r3, #0
   11c28:	movt	r3, #0
   11c2c:	cmp	r3, #0
   11c30:	beq	11c38 <abort@plt+0xea4>
   11c34:	blx	r3
   11c38:	pop	{r3, lr}
   11c3c:	b	11ba4 <abort@plt+0xe10>
   11c40:	movw	r3, #12472	; 0x30b8
   11c44:	movt	r3, #2
   11c48:	push	{r4, lr}
   11c4c:	ldr	r4, [r3]
   11c50:	cmp	r4, #0
   11c54:	popeq	{r4, pc}
   11c58:	bl	10cec <auparse_get_record_text@plt>
   11c5c:	movw	r2, #9896	; 0x26a8
   11c60:	mov	r1, #1
   11c64:	movt	r2, #1
   11c68:	mov	r3, r0
   11c6c:	mov	r0, r4
   11c70:	pop	{r4, lr}
   11c74:	b	10d58 <__fprintf_chk@plt>
   11c78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c7c:	movw	r5, #12456	; 0x30a8
   11c80:	movt	r5, #2
   11c84:	sub	sp, sp, #80	; 0x50
   11c88:	subs	r4, r0, #0
   11c8c:	ldr	r3, [r5]
   11c90:	str	r3, [sp, #76]	; 0x4c
   11c94:	beq	11cb0 <abort@plt+0xf1c>
   11c98:	movw	r6, #12472	; 0x30b8
   11c9c:	movt	r6, #2
   11ca0:	ldr	r2, [r4, #32]
   11ca4:	ldr	r3, [r6, #4]
   11ca8:	cmp	r2, r3
   11cac:	beq	11cc8 <abort@plt+0xf34>
   11cb0:	ldr	r2, [sp, #76]	; 0x4c
   11cb4:	ldr	r3, [r5]
   11cb8:	cmp	r2, r3
   11cbc:	bne	12040 <abort@plt+0x12ac>
   11cc0:	add	sp, sp, #80	; 0x50
   11cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11cc8:	ldr	r3, [r4, #20]
   11ccc:	cmp	r3, #0
   11cd0:	beq	11fac <abort@plt+0x1218>
   11cd4:	mov	r2, r3
   11cd8:	movw	r1, #9248	; 0x2420
   11cdc:	mov	r0, #1
   11ce0:	movt	r1, #1
   11ce4:	bl	10d4c <__printf_chk@plt>
   11ce8:	ldr	r0, [r4, #8]
   11cec:	cmp	r0, #0
   11cf0:	movne	r8, #0
   11cf4:	beq	11f90 <abort@plt+0x11fc>
   11cf8:	ldr	r7, [r4, #24]
   11cfc:	mov	r2, #5
   11d00:	movw	r0, #9264	; 0x2430
   11d04:	movt	r0, #1
   11d08:	mov	r1, r7
   11d0c:	bl	10d88 <strncmp@plt>
   11d10:	movw	r1, #9272	; 0x2438
   11d14:	movt	r1, #1
   11d18:	cmp	r0, #0
   11d1c:	mov	r0, #1
   11d20:	addeq	r2, r7, #5
   11d24:	movne	r2, r7
   11d28:	add	r7, r4, #4
   11d2c:	bl	10d4c <__printf_chk@plt>
   11d30:	ldr	r2, [r4, #28]
   11d34:	movw	r3, #9244	; 0x241c
   11d38:	movt	r3, #1
   11d3c:	cmp	r2, #0
   11d40:	movw	r1, #9284	; 0x2444
   11d44:	mov	r0, #1
   11d48:	movt	r1, #1
   11d4c:	moveq	r2, r3
   11d50:	bl	10d4c <__printf_chk@plt>
   11d54:	mov	r0, r7
   11d58:	bl	10c50 <ctime@plt>
   11d5c:	movw	r1, #9284	; 0x2444
   11d60:	movt	r1, #1
   11d64:	mov	r2, r0
   11d68:	mov	r0, #1
   11d6c:	bl	10d4c <__printf_chk@plt>
   11d70:	ldr	r3, [r4, #36]	; 0x24
   11d74:	sub	r3, r3, #1
   11d78:	cmp	r3, #4
   11d7c:	ldrls	pc, [pc, r3, lsl #2]
   11d80:	b	11fa0 <abort@plt+0x120c>
   11d84:	andeq	r1, r1, r8, ror #30
   11d88:	andeq	r1, r1, r8, lsr #29
   11d8c:	muleq	r1, r8, lr
   11d90:	andeq	r1, r1, r8, lsl #29
   11d94:	muleq	r1, r8, sp
   11d98:	movw	r0, #9332	; 0x2474
   11d9c:	movt	r0, #1
   11da0:	bl	10ca4 <puts@plt>
   11da4:	ldr	r3, [r6, #8]
   11da8:	cmp	r3, #0
   11dac:	beq	11cb0 <abort@plt+0xf1c>
   11db0:	ldr	r2, [r4, #40]	; 0x28
   11db4:	cmp	r2, #0
   11db8:	bne	11dc8 <abort@plt+0x1034>
   11dbc:	ldr	r0, [r4, #32]
   11dc0:	cmp	r0, #1
   11dc4:	beq	12000 <abort@plt+0x126c>
   11dc8:	ldr	ip, [r4, #48]	; 0x30
   11dcc:	movw	r1, #9440	; 0x24e0
   11dd0:	ldr	r3, [r4, #44]	; 0x2c
   11dd4:	mov	r0, #1
   11dd8:	movt	r1, #1
   11ddc:	str	ip, [sp]
   11de0:	bl	10d4c <__printf_chk@plt>
   11de4:	movw	r0, #9496	; 0x2518
   11de8:	movt	r0, #1
   11dec:	bl	10ca4 <puts@plt>
   11df0:	mov	r0, r7
   11df4:	bl	10ce0 <localtime@plt>
   11df8:	movw	r2, #9544	; 0x2548
   11dfc:	mov	r1, #32
   11e00:	movt	r2, #1
   11e04:	mov	r3, r0
   11e08:	add	r0, sp, #12
   11e0c:	bl	10cd4 <strftime@plt>
   11e10:	ldr	r3, [r4, #8]
   11e14:	cmp	r3, #0
   11e18:	beq	11f78 <abort@plt+0x11e4>
   11e1c:	add	r0, r4, #8
   11e20:	bl	10ce0 <localtime@plt>
   11e24:	mov	r1, #32
   11e28:	movw	r2, #9544	; 0x2548
   11e2c:	movt	r2, #1
   11e30:	mov	r3, r0
   11e34:	add	r0, sp, #44	; 0x2c
   11e38:	bl	10cd4 <strftime@plt>
   11e3c:	movw	r1, #9552	; 0x2550
   11e40:	add	r3, sp, #44	; 0x2c
   11e44:	add	r2, sp, #12
   11e48:	mov	r0, #1
   11e4c:	movt	r1, #1
   11e50:	bl	10d4c <__printf_chk@plt>
   11e54:	ldr	r3, [r4, #20]
   11e58:	cmp	r3, #0
   11e5c:	beq	12028 <abort@plt+0x1294>
   11e60:	ldr	r3, [r4, #40]	; 0x28
   11e64:	cmp	r3, #0
   11e68:	bne	11e78 <abort@plt+0x10e4>
   11e6c:	ldr	r0, [r4, #32]
   11e70:	cmp	r0, #1
   11e74:	beq	12014 <abort@plt+0x1280>
   11e78:	movw	r0, #9436	; 0x24dc
   11e7c:	movt	r0, #1
   11e80:	bl	10ca4 <puts@plt>
   11e84:	b	11cb0 <abort@plt+0xf1c>
   11e88:	movw	r0, #9324	; 0x246c
   11e8c:	movt	r0, #1
   11e90:	bl	10ca4 <puts@plt>
   11e94:	b	11da4 <abort@plt+0x1010>
   11e98:	movw	r0, #9316	; 0x2464
   11e9c:	movt	r0, #1
   11ea0:	bl	10ca4 <puts@plt>
   11ea4:	b	11da4 <abort@plt+0x1010>
   11ea8:	cmp	r8, #0
   11eac:	bne	11fc8 <abort@plt+0x1234>
   11eb0:	add	r0, r4, #8
   11eb4:	bl	10c50 <ctime@plt>
   11eb8:	movw	r1, #9352	; 0x2488
   11ebc:	movt	r1, #1
   11ec0:	add	r2, r0, #11
   11ec4:	mov	r0, #1
   11ec8:	bl	10d4c <__printf_chk@plt>
   11ecc:	ldr	r1, [r4, #8]
   11ed0:	movw	r2, #46021	; 0xb3c5
   11ed4:	ldr	r3, [r4, #4]
   11ed8:	movt	r2, #37282	; 0x91a2
   11edc:	movw	lr, #34953	; 0x8889
   11ee0:	movt	lr, #34952	; 0x8888
   11ee4:	rsb	r3, r3, r1
   11ee8:	movw	r1, #43691	; 0xaaab
   11eec:	movt	r1, #10922	; 0x2aaa
   11ef0:	movw	r8, #17671	; 0x4507
   11ef4:	smull	r0, ip, r2, r3
   11ef8:	asr	r2, r3, #31
   11efc:	smull	r9, r0, lr, r3
   11f00:	add	ip, ip, r3
   11f04:	movt	r8, #49710	; 0xc22e
   11f08:	add	r0, r0, r3
   11f0c:	rsb	ip, r2, ip, asr #11
   11f10:	smull	sl, r8, r8, r3
   11f14:	rsb	r0, r2, r0, asr #5
   11f18:	smull	r9, r1, r1, ip
   11f1c:	asr	r9, r0, #31
   11f20:	smull	sl, lr, lr, r0
   11f24:	asr	sl, ip, #31
   11f28:	add	r8, r8, r3
   11f2c:	add	lr, lr, r0
   11f30:	rsb	r3, sl, r1, asr #2
   11f34:	rsbs	r2, r2, r8, asr #16
   11f38:	rsb	r1, r9, lr, asr #5
   11f3c:	add	r3, r3, r3, lsl #1
   11f40:	rsb	r1, r1, r1, lsl #4
   11f44:	sub	r3, ip, r3, lsl #3
   11f48:	sub	r1, r0, r1, lsl #2
   11f4c:	beq	11fe4 <abort@plt+0x1250>
   11f50:	str	r1, [sp]
   11f54:	mov	r0, #1
   11f58:	movw	r1, #9364	; 0x2494
   11f5c:	movt	r1, #1
   11f60:	bl	10d4c <__printf_chk@plt>
   11f64:	b	11da4 <abort@plt+0x1010>
   11f68:	movw	r0, #9296	; 0x2450
   11f6c:	movt	r0, #1
   11f70:	bl	10ca4 <puts@plt>
   11f74:	b	11da4 <abort@plt+0x1010>
   11f78:	add	r2, sp, #12
   11f7c:	movw	r1, #9588	; 0x2574
   11f80:	mov	r0, #1
   11f84:	movt	r1, #1
   11f88:	bl	10d4c <__printf_chk@plt>
   11f8c:	b	11e54 <abort@plt+0x10c0>
   11f90:	bl	10c2c <time@plt>
   11f94:	mov	r8, #1
   11f98:	str	r0, [r4, #8]
   11f9c:	b	11cf8 <abort@plt+0xf64>
   11fa0:	mov	r0, #10
   11fa4:	bl	10d34 <putchar@plt>
   11fa8:	b	11da4 <abort@plt+0x1010>
   11fac:	movw	r1, #9256	; 0x2428
   11fb0:	ldr	r2, [r4, #12]
   11fb4:	movt	r1, #1
   11fb8:	mov	r0, #1
   11fbc:	mov	r8, r3
   11fc0:	bl	10d4c <__printf_chk@plt>
   11fc4:	b	11cf8 <abort@plt+0xf64>
   11fc8:	movw	r1, #9352	; 0x2488
   11fcc:	movw	r2, #9280	; 0x2440
   11fd0:	movt	r1, #1
   11fd4:	movt	r2, #1
   11fd8:	mov	r0, #1
   11fdc:	bl	10d4c <__printf_chk@plt>
   11fe0:	b	11ecc <abort@plt+0x1138>
   11fe4:	mov	r2, r3
   11fe8:	mov	r0, #1
   11fec:	mov	r3, r1
   11ff0:	movw	r1, #9380	; 0x24a4
   11ff4:	movt	r1, #1
   11ff8:	bl	10d4c <__printf_chk@plt>
   11ffc:	b	11da4 <abort@plt+0x1010>
   12000:	movw	r1, #9396	; 0x24b4
   12004:	ldr	r2, [r4, #44]	; 0x2c
   12008:	movt	r1, #1
   1200c:	bl	10d4c <__printf_chk@plt>
   12010:	b	11de4 <abort@plt+0x1050>
   12014:	ldr	r2, [r4, #44]	; 0x2c
   12018:	movw	r1, #9628	; 0x259c
   1201c:	movt	r1, #1
   12020:	bl	10d4c <__printf_chk@plt>
   12024:	b	11e78 <abort@plt+0x10e4>
   12028:	movw	r1, #9612	; 0x258c
   1202c:	ldr	r2, [r4]
   12030:	movt	r1, #1
   12034:	mov	r0, #1
   12038:	bl	10d4c <__printf_chk@plt>
   1203c:	b	11e60 <abort@plt+0x10cc>
   12040:	bl	10c5c <__stack_chk_fail@plt>
   12044:	movw	r3, #12460	; 0x30ac
   12048:	movt	r3, #2
   1204c:	movw	r0, #9636	; 0x25a4
   12050:	mov	r1, #1
   12054:	ldr	r3, [r3]
   12058:	movt	r0, #1
   1205c:	mov	r2, #82	; 0x52
   12060:	b	10c80 <fwrite@plt>
   12064:	mov	r3, #0
   12068:	str	r3, [r0]
   1206c:	str	r3, [r0, #4]
   12070:	bx	lr
   12074:	ldr	r3, [r0, #4]
   12078:	cmp	r3, #0
   1207c:	ldrne	r2, [r3, #52]	; 0x34
   12080:	movne	r3, r2
   12084:	strne	r2, [r0, #4]
   12088:	mov	r0, r3
   1208c:	bx	lr
   12090:	push	{r4, r5, r6, lr}
   12094:	mov	r6, r0
   12098:	ldr	r4, [r0]
   1209c:	cmp	r4, #0
   120a0:	beq	120d4 <abort@plt+0x1340>
   120a4:	ldr	r0, [r4, #20]
   120a8:	ldr	r5, [r4, #52]	; 0x34
   120ac:	bl	10c20 <free@plt>
   120b0:	ldr	r0, [r4, #24]
   120b4:	bl	10c20 <free@plt>
   120b8:	ldr	r0, [r4, #28]
   120bc:	bl	10c20 <free@plt>
   120c0:	mov	r0, r4
   120c4:	bl	10c20 <free@plt>
   120c8:	cmp	r5, #0
   120cc:	mov	r4, r5
   120d0:	bne	120a4 <abort@plt+0x1310>
   120d4:	mov	r3, #0
   120d8:	str	r3, [r6]
   120dc:	str	r3, [r6, #4]
   120e0:	pop	{r4, r5, r6, pc}
   120e4:	ldr	r3, [r0]
   120e8:	mov	r2, #0
   120ec:	str	r2, [r1, #52]	; 0x34
   120f0:	cmp	r3, r2
   120f4:	streq	r1, [r0]
   120f8:	beq	12130 <abort@plt+0x139c>
   120fc:	ldr	r3, [r0, #4]
   12100:	cmp	r3, #0
   12104:	beq	12130 <abort@plt+0x139c>
   12108:	ldr	r2, [r3, #52]	; 0x34
   1210c:	cmp	r2, #0
   12110:	bne	1211c <abort@plt+0x1388>
   12114:	b	1212c <abort@plt+0x1398>
   12118:	mov	r2, r3
   1211c:	ldr	r3, [r2, #52]	; 0x34
   12120:	cmp	r3, #0
   12124:	bne	12118 <abort@plt+0x1384>
   12128:	mov	r3, r2
   1212c:	str	r1, [r3, #52]	; 0x34
   12130:	str	r1, [r0, #4]
   12134:	mov	r0, #1
   12138:	bx	lr
   1213c:	push	{r4, r5, r6, r7, r8, lr}
   12140:	mov	r5, r0
   12144:	mov	r0, #56	; 0x38
   12148:	mov	r7, r1
   1214c:	mov	r6, r2
   12150:	mov	r8, r3
   12154:	bl	10cb0 <malloc@plt>
   12158:	cmp	r0, #0
   1215c:	popeq	{r4, r5, r6, r7, r8, pc}
   12160:	ldr	r2, [r5]
   12164:	mov	r4, #0
   12168:	str	r8, [r0]
   1216c:	mvn	r3, #0
   12170:	cmp	r2, r4
   12174:	ldr	r2, [sp, #24]
   12178:	str	r7, [r0, #12]
   1217c:	str	r6, [r0, #16]
   12180:	str	r2, [r0, #40]	; 0x28
   12184:	str	r4, [r0, #4]
   12188:	str	r4, [r0, #8]
   1218c:	str	r4, [r0, #20]
   12190:	str	r4, [r0, #24]
   12194:	str	r4, [r0, #28]
   12198:	str	r4, [r0, #36]	; 0x24
   1219c:	str	r4, [r0, #44]	; 0x2c
   121a0:	str	r4, [r0, #48]	; 0x30
   121a4:	str	r4, [r0, #52]	; 0x34
   121a8:	str	r3, [r0, #32]
   121ac:	streq	r0, [r5]
   121b0:	beq	121e8 <abort@plt+0x1454>
   121b4:	ldr	r3, [r5, #4]
   121b8:	cmp	r3, #0
   121bc:	beq	121e8 <abort@plt+0x1454>
   121c0:	ldr	r2, [r3, #52]	; 0x34
   121c4:	cmp	r2, #0
   121c8:	bne	121d4 <abort@plt+0x1440>
   121cc:	b	121e4 <abort@plt+0x1450>
   121d0:	mov	r2, r3
   121d4:	ldr	r3, [r2, #52]	; 0x34
   121d8:	cmp	r3, #0
   121dc:	bne	121d0 <abort@plt+0x143c>
   121e0:	mov	r3, r2
   121e4:	str	r0, [r3, #52]	; 0x34
   121e8:	str	r0, [r5, #4]
   121ec:	mov	r0, #1
   121f0:	pop	{r4, r5, r6, r7, r8, pc}
   121f4:	cmp	r0, #0
   121f8:	push	{r4, r5, r6, lr}
   121fc:	mov	r5, r1
   12200:	mov	r6, r3
   12204:	popeq	{r4, r5, r6, pc}
   12208:	ldr	r4, [r0, #4]
   1220c:	cmp	r2, #0
   12210:	mov	r3, #1
   12214:	str	r3, [r4, #36]	; 0x24
   12218:	beq	12228 <abort@plt+0x1494>
   1221c:	mov	r0, r2
   12220:	bl	10d1c <__strdup@plt>
   12224:	str	r0, [r4, #24]
   12228:	cmp	r5, #0
   1222c:	beq	1223c <abort@plt+0x14a8>
   12230:	mov	r0, r5
   12234:	bl	10d1c <__strdup@plt>
   12238:	str	r0, [r4, #28]
   1223c:	ldr	r3, [sp, #16]
   12240:	mov	r0, #1
   12244:	str	r6, [r4, #32]
   12248:	str	r3, [r4, #44]	; 0x2c
   1224c:	pop	{r4, r5, r6, pc}
   12250:	cmp	r0, #0
   12254:	bxeq	lr
   12258:	ldr	r3, [r0, #4]
   1225c:	mov	ip, #2
   12260:	mov	r0, #1
   12264:	str	r1, [r3, #8]
   12268:	str	r2, [r3, #48]	; 0x30
   1226c:	str	ip, [r3, #36]	; 0x24
   12270:	bx	lr
   12274:	push	{r4, r5, r6, lr}
   12278:	mov	r6, r0
   1227c:	ldr	r4, [r0]
   12280:	cmp	r4, #0
   12284:	beq	122b0 <abort@plt+0x151c>
   12288:	ldr	r5, [r0, #4]
   1228c:	cmp	r4, r5
   12290:	bne	122a4 <abort@plt+0x1510>
   12294:	b	122b8 <abort@plt+0x1524>
   12298:	cmp	r3, r5
   1229c:	beq	122e8 <abort@plt+0x1554>
   122a0:	mov	r4, r3
   122a4:	ldr	r3, [r4, #52]	; 0x34
   122a8:	cmp	r3, #0
   122ac:	bne	12298 <abort@plt+0x1504>
   122b0:	mov	r0, #0
   122b4:	pop	{r4, r5, r6, pc}
   122b8:	ldr	r3, [r4, #52]	; 0x34
   122bc:	ldr	r0, [r4, #20]
   122c0:	str	r3, [r6]
   122c4:	str	r3, [r6, #4]
   122c8:	bl	10c20 <free@plt>
   122cc:	ldr	r0, [r4, #24]
   122d0:	bl	10c20 <free@plt>
   122d4:	ldr	r0, [r4, #28]
   122d8:	bl	10c20 <free@plt>
   122dc:	mov	r0, r4
   122e0:	bl	10c20 <free@plt>
   122e4:	b	122b0 <abort@plt+0x151c>
   122e8:	ldr	r3, [r5, #52]	; 0x34
   122ec:	ldr	r0, [r5, #20]
   122f0:	str	r3, [r4, #52]	; 0x34
   122f4:	bl	10c20 <free@plt>
   122f8:	ldr	r0, [r5, #24]
   122fc:	bl	10c20 <free@plt>
   12300:	ldr	r0, [r5, #28]
   12304:	bl	10c20 <free@plt>
   12308:	mov	r0, r5
   1230c:	bl	10c20 <free@plt>
   12310:	mov	r0, r4
   12314:	str	r4, [r6, #4]
   12318:	pop	{r4, r5, r6, pc}
   1231c:	push	{r4}		; (str r4, [sp, #-4]!)
   12320:	mov	r4, r0
   12324:	ldr	r0, [r0]
   12328:	cmp	r0, #0
   1232c:	bne	12340 <abort@plt+0x15ac>
   12330:	b	12368 <abort@plt+0x15d4>
   12334:	ldr	r0, [r0, #52]	; 0x34
   12338:	cmp	r0, #0
   1233c:	beq	12368 <abort@plt+0x15d4>
   12340:	ldr	ip, [r0, #16]
   12344:	cmp	ip, r2
   12348:	bne	12334 <abort@plt+0x15a0>
   1234c:	ldr	ip, [r0, #12]
   12350:	cmp	ip, r1
   12354:	bne	12334 <abort@plt+0x15a0>
   12358:	ldr	ip, [r0]
   1235c:	cmp	ip, r3
   12360:	bne	12334 <abort@plt+0x15a0>
   12364:	str	r0, [r4, #4]
   12368:	pop	{r4}		; (ldr r4, [sp], #4)
   1236c:	bx	lr
   12370:	ldr	r3, [r0]
   12374:	cmp	r3, #0
   12378:	bne	1238c <abort@plt+0x15f8>
   1237c:	b	1239c <abort@plt+0x1608>
   12380:	ldr	r3, [r3, #52]	; 0x34
   12384:	cmp	r3, #0
   12388:	beq	1239c <abort@plt+0x1608>
   1238c:	ldr	r2, [r3]
   12390:	cmp	r2, r1
   12394:	bne	12380 <abort@plt+0x15ec>
   12398:	str	r3, [r0, #4]
   1239c:	mov	r0, r3
   123a0:	bx	lr
   123a4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   123a8:	mov	r7, r0
   123ac:	ldr	r6, [pc, #76]	; 12400 <abort@plt+0x166c>
   123b0:	mov	r8, r1
   123b4:	ldr	r5, [pc, #72]	; 12404 <abort@plt+0x1670>
   123b8:	mov	r9, r2
   123bc:	add	r6, pc, r6
   123c0:	bl	10bc4 <_init@@Base>
   123c4:	add	r5, pc, r5
   123c8:	rsb	r6, r5, r6
   123cc:	asrs	r6, r6, #2
   123d0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   123d4:	sub	r5, r5, #4
   123d8:	mov	r4, #0
   123dc:	add	r4, r4, #1
   123e0:	ldr	r3, [r5, #4]!
   123e4:	mov	r0, r7
   123e8:	mov	r1, r8
   123ec:	mov	r2, r9
   123f0:	blx	r3
   123f4:	cmp	r4, r6
   123f8:	bne	123dc <abort@plt+0x1648>
   123fc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12400:	andeq	r0, r1, r4, lsr #22
   12404:	andeq	r0, r1, r8, lsl fp
   12408:	bx	lr

Disassembly of section .fini:

0001240c <_fini@@Base>:
   1240c:	push	{r3, lr}
   12410:	pop	{r3, pc}
