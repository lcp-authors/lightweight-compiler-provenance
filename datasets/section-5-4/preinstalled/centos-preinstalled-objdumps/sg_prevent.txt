
centos-preinstalled/sg_prevent:     file format elf32-littlearm


Disassembly of section .init:

0001075c <_init@@Base>:
   1075c:	push	{r3, lr}
   10760:	bl	10d14 <abort@plt+0x514>
   10764:	pop	{r3, pc}

Disassembly of section .plt:

00010768 <sg_cmds_close_device@plt-0x14>:
   10768:	push	{lr}		; (str lr, [sp, #-4]!)
   1076c:	ldr	lr, [pc, #4]	; 10778 <_init@@Base+0x1c>
   10770:	add	lr, pc, lr
   10774:	ldr	pc, [lr, #8]!
   10778:	andeq	r1, r1, r8, lsl #17

0001077c <sg_cmds_close_device@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2184]!	; 0x888

00010788 <__stack_chk_fail@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2176]!	; 0x880

00010794 <fwrite@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2168]!	; 0x878

000107a0 <__libc_start_main@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2160]!	; 0x870

000107ac <__gmon_start__@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2152]!	; 0x868

000107b8 <getopt_long@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2144]!	; 0x860

000107c4 <sg_ll_prevent_allow@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2136]!	; 0x858

000107d0 <__fprintf_chk@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #69632	; 0x11000
   107d8:	ldr	pc, [ip, #2128]!	; 0x850

000107dc <safe_strerror@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #69632	; 0x11000
   107e4:	ldr	pc, [ip, #2120]!	; 0x848

000107e8 <sg_get_num@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #69632	; 0x11000
   107f0:	ldr	pc, [ip, #2112]!	; 0x840

000107f4 <sg_cmds_open_device@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #69632	; 0x11000
   107fc:	ldr	pc, [ip, #2104]!	; 0x838

00010800 <abort@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #69632	; 0x11000
   10808:	ldr	pc, [ip, #2096]!	; 0x830

Disassembly of section .text:

0001080c <.text>:
   1080c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10810:	movw	r4, #8360	; 0x20a8
   10814:	movt	r4, #2
   10818:	sub	sp, sp, #28
   1081c:	mov	r5, #0
   10820:	movw	r6, #8376	; 0x20b8
   10824:	ldr	r3, [r4]
   10828:	movt	r6, #2
   1082c:	add	sl, sp, #16
   10830:	mov	r7, r0
   10834:	mov	r8, r1
   10838:	mov	r9, r5
   1083c:	mvn	fp, #0
   10840:	str	r5, [sp, #12]
   10844:	str	r3, [sp, #20]
   10848:	str	sl, [sp]
   1084c:	movw	r2, #3716	; 0xe84
   10850:	movw	r3, #8260	; 0x2044
   10854:	movt	r2, #1
   10858:	movt	r3, #2
   1085c:	mov	r0, r7
   10860:	mov	r1, r8
   10864:	str	r9, [sp, #16]
   10868:	bl	107b8 <getopt_long@plt>
   1086c:	cmn	r0, #1
   10870:	beq	10a5c <abort@plt+0x25c>
   10874:	sub	r3, r0, #63	; 0x3f
   10878:	cmp	r3, #55	; 0x37
   1087c:	ldrls	pc, [pc, r3, lsl #2]
   10880:	b	10a1c <abort@plt+0x21c>
   10884:			; <UNDEFINED> instruction: 0x000109b0
   10888:	andeq	r0, r1, ip, lsl sl
   1088c:	andeq	r0, r1, ip, lsl sl
   10890:	andeq	r0, r1, ip, lsl sl
   10894:	andeq	r0, r1, ip, lsl sl
   10898:	andeq	r0, r1, ip, lsl sl
   1089c:	andeq	r0, r1, ip, lsl sl
   108a0:	andeq	r0, r1, ip, lsl sl
   108a4:	andeq	r0, r1, ip, lsl sl
   108a8:	andeq	r0, r1, ip, lsl sl
   108ac:	andeq	r0, r1, ip, lsl sl
   108b0:	andeq	r0, r1, ip, lsl sl
   108b4:	andeq	r0, r1, ip, lsl sl
   108b8:	andeq	r0, r1, ip, lsl sl
   108bc:	andeq	r0, r1, ip, lsl sl
   108c0:	andeq	r0, r1, ip, lsl sl
   108c4:	andeq	r0, r1, ip, lsl sl
   108c8:	andeq	r0, r1, ip, lsl sl
   108cc:	andeq	r0, r1, ip, lsl sl
   108d0:	andeq	r0, r1, ip, lsl sl
   108d4:	andeq	r0, r1, ip, lsl sl
   108d8:	andeq	r0, r1, ip, lsl sl
   108dc:	andeq	r0, r1, ip, lsl sl
   108e0:	andeq	r0, r1, r0, ror r9
   108e4:	andeq	r0, r1, ip, lsl sl
   108e8:	andeq	r0, r1, ip, lsl sl
   108ec:	andeq	r0, r1, ip, lsl sl
   108f0:	andeq	r0, r1, ip, lsl sl
   108f4:	andeq	r0, r1, ip, lsl sl
   108f8:	andeq	r0, r1, ip, lsl sl
   108fc:	andeq	r0, r1, ip, lsl sl
   10900:	andeq	r0, r1, ip, lsl sl
   10904:	andeq	r0, r1, ip, lsl sl
   10908:	andeq	r0, r1, ip, lsl sl
   1090c:	andeq	r0, r1, r4, ror #18
   10910:	andeq	r0, r1, ip, lsl sl
   10914:	andeq	r0, r1, ip, lsl sl
   10918:	andeq	r0, r1, ip, lsl sl
   1091c:	andeq	r0, r1, ip, lsl sl
   10920:	andeq	r0, r1, ip, lsl sl
   10924:	andeq	r0, r1, ip, lsl sl
   10928:			; <UNDEFINED> instruction: 0x000109b0
   1092c:	andeq	r0, r1, ip, lsl sl
   10930:	andeq	r0, r1, ip, lsl sl
   10934:	andeq	r0, r1, ip, lsl sl
   10938:	andeq	r0, r1, ip, lsl sl
   1093c:	andeq	r0, r1, ip, lsl sl
   10940:	andeq	r0, r1, ip, lsl sl
   10944:	andeq	r0, r1, ip, lsl sl
   10948:	andeq	r0, r1, r0, ror #19
   1094c:	andeq	r0, r1, ip, lsl sl
   10950:	andeq	r0, r1, ip, lsl sl
   10954:	andeq	r0, r1, ip, lsl sl
   10958:	andeq	r0, r1, ip, lsl sl
   1095c:	andeq	r0, r1, ip, lsl sl
   10960:	ldrdeq	r0, [r1], -r8
   10964:	mov	r3, #1
   10968:	str	r3, [sp, #12]
   1096c:	b	10848 <abort@plt+0x48>
   10970:	movw	r1, #8372	; 0x20b4
   10974:	movt	r1, #2
   10978:	movw	r2, #4320	; 0x10e0
   1097c:	movw	r3, #4348	; 0x10fc
   10980:	ldr	r0, [r1]
   10984:	movt	r2, #1
   10988:	movt	r3, #1
   1098c:	mov	r1, #1
   10990:	bl	107d0 <__fprintf_chk@plt>
   10994:	mov	r0, #0
   10998:	ldr	r2, [sp, #20]
   1099c:	ldr	r3, [r4]
   109a0:	cmp	r2, r3
   109a4:	bne	10c64 <abort@plt+0x464>
   109a8:	add	sp, sp, #28
   109ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109b0:	movw	r3, #8372	; 0x20b4
   109b4:	movt	r3, #2
   109b8:	movw	r0, #3724	; 0xe8c
   109bc:	mov	r1, #1
   109c0:	ldr	r3, [r3]
   109c4:	movt	r0, #1
   109c8:	mov	r2, #560	; 0x230
   109cc:	bl	10794 <fwrite@plt>
   109d0:	mov	r0, #0
   109d4:	b	10998 <abort@plt+0x198>
   109d8:	add	r5, r5, #1
   109dc:	b	10848 <abort@plt+0x48>
   109e0:	ldr	r0, [r6]
   109e4:	bl	107e8 <sg_get_num@plt>
   109e8:	cmp	r0, #3
   109ec:	mov	fp, r0
   109f0:	bls	10848 <abort@plt+0x48>
   109f4:	movw	r3, #8372	; 0x20b4
   109f8:	movt	r3, #2
   109fc:	movw	r0, #4288	; 0x10c0
   10a00:	mov	r1, #1
   10a04:	ldr	r3, [r3]
   10a08:	movt	r0, #1
   10a0c:	mov	r2, #28
   10a10:	bl	10794 <fwrite@plt>
   10a14:	mov	r0, #1
   10a18:	b	10998 <abort@plt+0x198>
   10a1c:	movw	r5, #8372	; 0x20b4
   10a20:	movt	r5, #2
   10a24:	mov	r3, r0
   10a28:	movw	r2, #4364	; 0x110c
   10a2c:	ldr	r0, [r5]
   10a30:	movt	r2, #1
   10a34:	mov	r1, #1
   10a38:	bl	107d0 <__fprintf_chk@plt>
   10a3c:	ldr	r3, [r5]
   10a40:	movw	r0, #3724	; 0xe8c
   10a44:	mov	r1, #1
   10a48:	movt	r0, #1
   10a4c:	mov	r2, #560	; 0x230
   10a50:	bl	10794 <fwrite@plt>
   10a54:	mov	r0, #1
   10a58:	b	10998 <abort@plt+0x198>
   10a5c:	movw	r6, #8368	; 0x20b0
   10a60:	movt	r6, #2
   10a64:	ldr	r2, [r6]
   10a68:	cmp	r7, r2
   10a6c:	bgt	10a94 <abort@plt+0x294>
   10a70:	movw	r5, #8372	; 0x20b4
   10a74:	movt	r5, #2
   10a78:	movw	r0, #4400	; 0x1130
   10a7c:	mov	r1, #1
   10a80:	ldr	r3, [r5]
   10a84:	mov	r2, #21
   10a88:	movt	r0, #1
   10a8c:	bl	10794 <fwrite@plt>
   10a90:	b	10a3c <abort@plt+0x23c>
   10a94:	add	r1, r2, #1
   10a98:	ldr	r9, [r8, r2, lsl #2]
   10a9c:	cmp	r7, r1
   10aa0:	str	r1, [r6]
   10aa4:	ble	10aec <abort@plt+0x2ec>
   10aa8:	movw	r9, #8372	; 0x20b4
   10aac:	movt	r9, #2
   10ab0:	mov	r3, r1
   10ab4:	ldr	r3, [r8, r3, lsl #2]
   10ab8:	movw	r2, #4424	; 0x1148
   10abc:	ldr	r0, [r9]
   10ac0:	movt	r2, #1
   10ac4:	mov	r1, #1
   10ac8:	movw	r5, #8372	; 0x20b4
   10acc:	bl	107d0 <__fprintf_chk@plt>
   10ad0:	ldr	r3, [r6]
   10ad4:	movt	r5, #2
   10ad8:	add	r3, r3, #1
   10adc:	str	r3, [r6]
   10ae0:	cmp	r7, r3
   10ae4:	bgt	10ab4 <abort@plt+0x2b4>
   10ae8:	b	10a3c <abort@plt+0x23c>
   10aec:	cmp	r9, #0
   10af0:	beq	10a70 <abort@plt+0x270>
   10af4:	ldr	r2, [sp, #12]
   10af8:	cmp	fp, #0
   10afc:	movlt	r2, #0
   10b00:	andge	r2, r2, #1
   10b04:	cmp	r2, #0
   10b08:	bne	10c04 <abort@plt+0x404>
   10b0c:	ldr	r3, [sp, #12]
   10b10:	cmp	r3, #0
   10b14:	movne	fp, r2
   10b18:	bne	10b24 <abort@plt+0x324>
   10b1c:	cmn	fp, #1
   10b20:	moveq	fp, #1
   10b24:	mov	r0, r9
   10b28:	mov	r1, #0
   10b2c:	mov	r2, r5
   10b30:	bl	107f4 <sg_cmds_open_device@plt>
   10b34:	subs	r6, r0, #0
   10b38:	blt	10bcc <abort@plt+0x3cc>
   10b3c:	mov	r3, r5
   10b40:	mov	r1, fp
   10b44:	mov	r2, #1
   10b48:	bl	107c4 <sg_ll_prevent_allow@plt>
   10b4c:	subs	r5, r0, #0
   10b50:	beq	10bac <abort@plt+0x3ac>
   10b54:	cmp	r5, #2
   10b58:	movw	r3, #8372	; 0x20b4
   10b5c:	movt	r3, #2
   10b60:	beq	10c84 <abort@plt+0x484>
   10b64:	cmp	r5, #6
   10b68:	beq	10c68 <abort@plt+0x468>
   10b6c:	cmp	r5, #11
   10b70:	beq	10cbc <abort@plt+0x4bc>
   10b74:	cmp	r5, #9
   10b78:	beq	10ca0 <abort@plt+0x4a0>
   10b7c:	cmp	r5, #5
   10b80:	movweq	r0, #4640	; 0x1220
   10b84:	movwne	r0, #4692	; 0x1254
   10b88:	moveq	r1, #1
   10b8c:	ldreq	r3, [r3]
   10b90:	movteq	r0, #1
   10b94:	moveq	r2, #51	; 0x33
   10b98:	movne	r1, #1
   10b9c:	ldrne	r3, [r3]
   10ba0:	movtne	r0, #1
   10ba4:	movne	r2, #44	; 0x2c
   10ba8:	bl	10794 <fwrite@plt>
   10bac:	mov	r0, r6
   10bb0:	bl	1077c <sg_cmds_close_device@plt>
   10bb4:	cmp	r0, #0
   10bb8:	blt	10c28 <abort@plt+0x428>
   10bbc:	cmp	r5, #0
   10bc0:	movge	r0, r5
   10bc4:	movlt	r0, #99	; 0x63
   10bc8:	b	10998 <abort@plt+0x198>
   10bcc:	movw	r3, #8372	; 0x20b4
   10bd0:	movt	r3, #2
   10bd4:	rsb	r0, r6, #0
   10bd8:	ldr	r5, [r3]
   10bdc:	bl	107dc <safe_strerror@plt>
   10be0:	mov	r3, r9
   10be4:	movw	r2, #4500	; 0x1194
   10be8:	mov	r1, #1
   10bec:	movt	r2, #1
   10bf0:	str	r0, [sp]
   10bf4:	mov	r0, r5
   10bf8:	bl	107d0 <__fprintf_chk@plt>
   10bfc:	mov	r0, #15
   10c00:	b	10998 <abort@plt+0x198>
   10c04:	movw	r5, #8372	; 0x20b4
   10c08:	movt	r5, #2
   10c0c:	movw	r0, #4456	; 0x1168
   10c10:	mov	r1, #1
   10c14:	ldr	r3, [r5]
   10c18:	mov	r2, #43	; 0x2b
   10c1c:	movt	r0, #1
   10c20:	bl	10794 <fwrite@plt>
   10c24:	b	10a3c <abort@plt+0x23c>
   10c28:	movw	r3, #8372	; 0x20b4
   10c2c:	movt	r3, #2
   10c30:	rsb	r0, r0, #0
   10c34:	ldr	r6, [r3]
   10c38:	bl	107dc <safe_strerror@plt>
   10c3c:	movw	r2, #4740	; 0x1284
   10c40:	mov	r1, #1
   10c44:	movt	r2, #1
   10c48:	mov	r3, r0
   10c4c:	mov	r0, r6
   10c50:	bl	107d0 <__fprintf_chk@plt>
   10c54:	cmp	r5, #0
   10c58:	bne	10bbc <abort@plt+0x3bc>
   10c5c:	mov	r0, #15
   10c60:	b	10998 <abort@plt+0x198>
   10c64:	bl	10788 <__stack_chk_fail@plt>
   10c68:	movw	r0, #4552	; 0x11c8
   10c6c:	mov	r1, #1
   10c70:	ldr	r3, [r3]
   10c74:	mov	r2, #15
   10c78:	movt	r0, #1
   10c7c:	bl	10794 <fwrite@plt>
   10c80:	b	10bac <abort@plt+0x3ac>
   10c84:	movw	r0, #4532	; 0x11b4
   10c88:	mov	r1, #1
   10c8c:	ldr	r3, [r3]
   10c90:	mov	r2, #17
   10c94:	movt	r0, #1
   10c98:	bl	10794 <fwrite@plt>
   10c9c:	b	10bac <abort@plt+0x3ac>
   10ca0:	movw	r0, #4588	; 0x11ec
   10ca4:	mov	r1, #1
   10ca8:	ldr	r3, [r3]
   10cac:	mov	r2, #51	; 0x33
   10cb0:	movt	r0, #1
   10cb4:	bl	10794 <fwrite@plt>
   10cb8:	b	10bac <abort@plt+0x3ac>
   10cbc:	movw	r0, #4568	; 0x11d8
   10cc0:	mov	r1, #1
   10cc4:	ldr	r3, [r3]
   10cc8:	mov	r2, #16
   10ccc:	movt	r0, #1
   10cd0:	bl	10794 <fwrite@plt>
   10cd4:	b	10bac <abort@plt+0x3ac>
   10cd8:	mov	fp, #0
   10cdc:	mov	lr, #0
   10ce0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ce4:	mov	r2, sp
   10ce8:	push	{r2}		; (str r2, [sp, #-4]!)
   10cec:	push	{r0}		; (str r0, [sp, #-4]!)
   10cf0:	ldr	ip, [pc, #16]	; 10d08 <abort@plt+0x508>
   10cf4:	push	{ip}		; (str ip, [sp, #-4]!)
   10cf8:	ldr	r0, [pc, #12]	; 10d0c <abort@plt+0x50c>
   10cfc:	ldr	r3, [pc, #12]	; 10d10 <abort@plt+0x510>
   10d00:	bl	107a0 <__libc_start_main@plt>
   10d04:	bl	10800 <abort@plt>
   10d08:	andeq	r0, r1, r0, ror lr
   10d0c:	andeq	r0, r1, ip, lsl #16
   10d10:	andeq	r0, r1, ip, lsl #28
   10d14:	ldr	r3, [pc, #20]	; 10d30 <abort@plt+0x530>
   10d18:	ldr	r2, [pc, #20]	; 10d34 <abort@plt+0x534>
   10d1c:	add	r3, pc, r3
   10d20:	ldr	r2, [r3, r2]
   10d24:	cmp	r2, #0
   10d28:	bxeq	lr
   10d2c:	b	107ac <__gmon_start__@plt>
   10d30:	ldrdeq	r1, [r1], -ip
   10d34:	andeq	r0, r0, ip, lsr r0
   10d38:	push	{r3, lr}
   10d3c:	movw	r0, #8356	; 0x20a4
   10d40:	ldr	r3, [pc, #36]	; 10d6c <abort@plt+0x56c>
   10d44:	movt	r0, #2
   10d48:	rsb	r3, r0, r3
   10d4c:	cmp	r3, #6
   10d50:	popls	{r3, pc}
   10d54:	movw	r3, #0
   10d58:	movt	r3, #0
   10d5c:	cmp	r3, #0
   10d60:	popeq	{r3, pc}
   10d64:	blx	r3
   10d68:	pop	{r3, pc}
   10d6c:	andeq	r2, r2, r7, lsr #1
   10d70:	push	{r3, lr}
   10d74:	movw	r0, #8356	; 0x20a4
   10d78:	movw	r3, #8356	; 0x20a4
   10d7c:	movt	r0, #2
   10d80:	movt	r3, #2
   10d84:	rsb	r3, r0, r3
   10d88:	asr	r3, r3, #2
   10d8c:	add	r3, r3, r3, lsr #31
   10d90:	asrs	r1, r3, #1
   10d94:	popeq	{r3, pc}
   10d98:	movw	r2, #0
   10d9c:	movt	r2, #0
   10da0:	cmp	r2, #0
   10da4:	popeq	{r3, pc}
   10da8:	blx	r2
   10dac:	pop	{r3, pc}
   10db0:	push	{r4, lr}
   10db4:	movw	r4, #8380	; 0x20bc
   10db8:	movt	r4, #2
   10dbc:	ldrb	r3, [r4]
   10dc0:	cmp	r3, #0
   10dc4:	popne	{r4, pc}
   10dc8:	bl	10d38 <abort@plt+0x538>
   10dcc:	mov	r3, #1
   10dd0:	strb	r3, [r4]
   10dd4:	pop	{r4, pc}
   10dd8:	movw	r0, #7932	; 0x1efc
   10ddc:	movt	r0, #2
   10de0:	push	{r3, lr}
   10de4:	ldr	r3, [r0]
   10de8:	cmp	r3, #0
   10dec:	beq	10e04 <abort@plt+0x604>
   10df0:	movw	r3, #0
   10df4:	movt	r3, #0
   10df8:	cmp	r3, #0
   10dfc:	beq	10e04 <abort@plt+0x604>
   10e00:	blx	r3
   10e04:	pop	{r3, lr}
   10e08:	b	10d70 <abort@plt+0x570>
   10e0c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10e10:	mov	r7, r0
   10e14:	ldr	r6, [pc, #76]	; 10e68 <abort@plt+0x668>
   10e18:	mov	r8, r1
   10e1c:	ldr	r5, [pc, #72]	; 10e6c <abort@plt+0x66c>
   10e20:	mov	r9, r2
   10e24:	add	r6, pc, r6
   10e28:	bl	1075c <_init@@Base>
   10e2c:	add	r5, pc, r5
   10e30:	rsb	r6, r5, r6
   10e34:	asrs	r6, r6, #2
   10e38:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10e3c:	sub	r5, r5, #4
   10e40:	mov	r4, #0
   10e44:	add	r4, r4, #1
   10e48:	ldr	r3, [r5, #4]!
   10e4c:	mov	r0, r7
   10e50:	mov	r1, r8
   10e54:	mov	r2, r9
   10e58:	blx	r3
   10e5c:	cmp	r4, r6
   10e60:	bne	10e44 <abort@plt+0x644>
   10e64:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10e68:	andeq	r1, r1, ip, asr #1
   10e6c:	andeq	r1, r1, r0, asr #1
   10e70:	bx	lr

Disassembly of section .fini:

00010e74 <_fini@@Base>:
   10e74:	push	{r3, lr}
   10e78:	pop	{r3, pc}
