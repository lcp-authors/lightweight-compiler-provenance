
centos-preinstalled/setkeycodes:     file format elf32-littlearm


Disassembly of section .init:

00010690 <.init>:
   10690:	push	{r3, lr}
   10694:	bl	109dc <close@plt+0x260>
   10698:	pop	{r3, pc}

Disassembly of section .plt:

0001069c <strtol@plt-0x14>:
   1069c:	push	{lr}		; (str lr, [sp, #-4]!)
   106a0:	ldr	lr, [pc, #4]	; 106ac <strtol@plt-0x4>
   106a4:	add	lr, pc, lr
   106a8:	ldr	pc, [lr, #8]!
   106ac:	andeq	r1, r1, r4, asr r9

000106b0 <strtol@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #69632	; 0x11000
   106b8:	ldr	pc, [ip, #2388]!	; 0x954

000106bc <dcgettext@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #69632	; 0x11000
   106c4:	ldr	pc, [ip, #2380]!	; 0x94c

000106c8 <__stack_chk_fail@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #69632	; 0x11000
   106d0:	ldr	pc, [ip, #2372]!	; 0x944

000106d4 <textdomain@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #69632	; 0x11000
   106dc:	ldr	pc, [ip, #2364]!	; 0x93c

000106e0 <perror@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #69632	; 0x11000
   106e8:	ldr	pc, [ip, #2356]!	; 0x934

000106ec <ioctl@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #69632	; 0x11000
   106f4:	ldr	pc, [ip, #2348]!	; 0x92c

000106f8 <__libc_start_main@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2340]!	; 0x924

00010704 <__gmon_start__@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2332]!	; 0x91c

00010710 <open@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2324]!	; 0x914

0001071c <exit@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2316]!	; 0x90c

00010728 <__printf_chk@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2308]!	; 0x904

00010734 <__fprintf_chk@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2300]!	; 0x8fc

00010740 <setlocale@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2292]!	; 0x8f4

0001074c <strrchr@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2284]!	; 0x8ec

00010758 <bindtextdomain@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2276]!	; 0x8e4

00010764 <isatty@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2268]!	; 0x8dc

00010770 <abort@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2260]!	; 0x8d4

0001077c <close@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2252]!	; 0x8cc

Disassembly of section .text:

00010788 <.text>:
   10788:	push	{r4, r5, r6, r7, lr}
   1078c:	movw	r7, #8288	; 0x2060
   10790:	movt	r7, #2
   10794:	ldr	r6, [r1]
   10798:	sub	sp, sp, #28
   1079c:	mov	r5, r0
   107a0:	ldr	r3, [r7]
   107a4:	mov	r4, r1
   107a8:	mov	r0, r6
   107ac:	mov	r1, #47	; 0x2f
   107b0:	str	r3, [sp, #20]
   107b4:	bl	1074c <strrchr@plt>
   107b8:	movw	r1, #3748	; 0xea4
   107bc:	movt	r1, #1
   107c0:	cmp	r0, #0
   107c4:	addne	r3, r0, #1
   107c8:	mov	r0, #6
   107cc:	moveq	r3, r6
   107d0:	movw	r6, #8300	; 0x206c
   107d4:	movt	r6, #2
   107d8:	str	r3, [r6]
   107dc:	bl	10740 <setlocale@plt>
   107e0:	movw	r0, #3584	; 0xe00
   107e4:	movw	r1, #3588	; 0xe04
   107e8:	movt	r0, #1
   107ec:	movt	r1, #1
   107f0:	bl	10758 <bindtextdomain@plt>
   107f4:	movw	r0, #3584	; 0xe00
   107f8:	movt	r0, #1
   107fc:	bl	106d4 <textdomain@plt>
   10800:	cmp	r5, #2
   10804:	beq	108c0 <close@plt+0x144>
   10808:	lsr	r3, r5, #31
   1080c:	add	r2, r5, r3
   10810:	and	r2, r2, #1
   10814:	rsb	r3, r3, r2
   10818:	cmp	r3, #1
   1081c:	bne	108dc <close@plt+0x160>
   10820:	mov	r0, #0
   10824:	bl	10be8 <close@plt+0x46c>
   10828:	cmp	r5, #2
   1082c:	mov	r6, r0
   10830:	ble	108a4 <close@plt+0x128>
   10834:	mov	r1, #0
   10838:	mov	r2, #10
   1083c:	ldr	r0, [r4, #8]
   10840:	bl	106b0 <strtol@plt>
   10844:	add	r1, sp, #8
   10848:	mov	r2, #16
   1084c:	str	r0, [sp, #16]
   10850:	ldr	r0, [r4, #4]
   10854:	bl	106b0 <strtol@plt>
   10858:	ldr	r3, [sp, #8]
   1085c:	str	r0, [sp, #12]
   10860:	ldrb	r3, [r3]
   10864:	cmp	r3, #0
   10868:	bne	10984 <close@plt+0x208>
   1086c:	cmp	r0, #57344	; 0xe000
   10870:	movw	r1, #19277	; 0x4b4d
   10874:	subcs	r0, r0, #57088	; 0xdf00
   10878:	add	r2, sp, #12
   1087c:	subcs	r0, r0, #128	; 0x80
   10880:	strcs	r0, [sp, #12]
   10884:	mov	r0, r6
   10888:	bl	106ec <ioctl@plt>
   1088c:	cmp	r0, #0
   10890:	bne	10934 <close@plt+0x1b8>
   10894:	sub	r5, r5, #2
   10898:	add	r4, r4, #8
   1089c:	cmp	r5, #2
   108a0:	bgt	10834 <close@plt+0xb8>
   108a4:	ldr	r2, [sp, #20]
   108a8:	mov	r0, #0
   108ac:	ldr	r3, [r7]
   108b0:	cmp	r2, r3
   108b4:	bne	1099c <close@plt+0x220>
   108b8:	add	sp, sp, #28
   108bc:	pop	{r4, r5, r6, r7, pc}
   108c0:	ldr	r3, [r4, #4]
   108c4:	ldrb	r2, [r3]
   108c8:	cmp	r2, #45	; 0x2d
   108cc:	bne	108dc <close@plt+0x160>
   108d0:	ldrb	r2, [r3, #1]
   108d4:	cmp	r2, #86	; 0x56
   108d8:	beq	108f4 <close@plt+0x178>
   108dc:	movw	r1, #3632	; 0xe30
   108e0:	mov	r2, #5
   108e4:	movt	r1, #1
   108e8:	mov	r0, #0
   108ec:	bl	106bc <dcgettext@plt>
   108f0:	bl	10ad4 <close@plt+0x358>
   108f4:	ldrb	r4, [r3, #2]
   108f8:	cmp	r4, #0
   108fc:	bne	108dc <close@plt+0x160>
   10900:	mov	r2, #5
   10904:	movw	r1, #3608	; 0xe18
   10908:	mov	r0, r4
   1090c:	movt	r1, #1
   10910:	bl	106bc <dcgettext@plt>
   10914:	ldr	r2, [r6]
   10918:	movw	r3, #3620	; 0xe24
   1091c:	movt	r3, #1
   10920:	mov	r1, r0
   10924:	mov	r0, #1
   10928:	bl	10728 <__printf_chk@plt>
   1092c:	mov	r0, r4
   10930:	bl	1071c <exit@plt>
   10934:	movw	r0, #3692	; 0xe6c
   10938:	movt	r0, #1
   1093c:	bl	106e0 <perror@plt>
   10940:	movw	r3, #8292	; 0x2064
   10944:	movt	r3, #2
   10948:	mov	r2, #5
   1094c:	movw	r1, #3708	; 0xe7c
   10950:	mov	r0, #0
   10954:	movt	r1, #1
   10958:	ldr	r4, [r3]
   1095c:	bl	106bc <dcgettext@plt>
   10960:	ldr	ip, [sp, #16]
   10964:	mov	r1, #1
   10968:	ldr	r3, [sp, #12]
   1096c:	str	ip, [sp]
   10970:	mov	r2, r0
   10974:	mov	r0, r4
   10978:	bl	10734 <__fprintf_chk@plt>
   1097c:	mov	r0, #1
   10980:	bl	1071c <exit@plt>
   10984:	movw	r1, #3668	; 0xe54
   10988:	mov	r2, #5
   1098c:	movt	r1, #1
   10990:	mov	r0, #0
   10994:	bl	106bc <dcgettext@plt>
   10998:	bl	10ad4 <close@plt+0x358>
   1099c:	bl	106c8 <__stack_chk_fail@plt>
   109a0:	mov	fp, #0
   109a4:	mov	lr, #0
   109a8:	pop	{r1}		; (ldr r1, [sp], #4)
   109ac:	mov	r2, sp
   109b0:	push	{r2}		; (str r2, [sp, #-4]!)
   109b4:	push	{r0}		; (str r0, [sp, #-4]!)
   109b8:	ldr	ip, [pc, #16]	; 109d0 <close@plt+0x254>
   109bc:	push	{ip}		; (str ip, [sp, #-4]!)
   109c0:	ldr	r0, [pc, #12]	; 109d4 <close@plt+0x258>
   109c4:	ldr	r3, [pc, #12]	; 109d8 <close@plt+0x25c>
   109c8:	bl	106f8 <__libc_start_main@plt>
   109cc:	bl	10770 <abort@plt>
   109d0:	andeq	r0, r1, r4, asr sp
   109d4:	andeq	r0, r1, r8, lsl #15
   109d8:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   109dc:	ldr	r3, [pc, #20]	; 109f8 <close@plt+0x27c>
   109e0:	ldr	r2, [pc, #20]	; 109fc <close@plt+0x280>
   109e4:	add	r3, pc, r3
   109e8:	ldr	r2, [r3, r2]
   109ec:	cmp	r2, #0
   109f0:	bxeq	lr
   109f4:	b	10704 <__gmon_start__@plt>
   109f8:	andeq	r1, r1, r4, lsl r6
   109fc:	andeq	r0, r0, r4, asr r0
   10a00:	push	{r3, lr}
   10a04:	movw	r0, #8284	; 0x205c
   10a08:	ldr	r3, [pc, #36]	; 10a34 <close@plt+0x2b8>
   10a0c:	movt	r0, #2
   10a10:	rsb	r3, r0, r3
   10a14:	cmp	r3, #6
   10a18:	popls	{r3, pc}
   10a1c:	movw	r3, #0
   10a20:	movt	r3, #0
   10a24:	cmp	r3, #0
   10a28:	popeq	{r3, pc}
   10a2c:	blx	r3
   10a30:	pop	{r3, pc}
   10a34:	andeq	r2, r2, pc, asr r0
   10a38:	push	{r3, lr}
   10a3c:	movw	r0, #8284	; 0x205c
   10a40:	movw	r3, #8284	; 0x205c
   10a44:	movt	r0, #2
   10a48:	movt	r3, #2
   10a4c:	rsb	r3, r0, r3
   10a50:	asr	r3, r3, #2
   10a54:	add	r3, r3, r3, lsr #31
   10a58:	asrs	r1, r3, #1
   10a5c:	popeq	{r3, pc}
   10a60:	movw	r2, #0
   10a64:	movt	r2, #0
   10a68:	cmp	r2, #0
   10a6c:	popeq	{r3, pc}
   10a70:	blx	r2
   10a74:	pop	{r3, pc}
   10a78:	push	{r4, lr}
   10a7c:	movw	r4, #8296	; 0x2068
   10a80:	movt	r4, #2
   10a84:	ldrb	r3, [r4]
   10a88:	cmp	r3, #0
   10a8c:	popne	{r4, pc}
   10a90:	bl	10a00 <close@plt+0x284>
   10a94:	mov	r3, #1
   10a98:	strb	r3, [r4]
   10a9c:	pop	{r4, pc}
   10aa0:	movw	r0, #7940	; 0x1f04
   10aa4:	movt	r0, #2
   10aa8:	push	{r3, lr}
   10aac:	ldr	r3, [r0]
   10ab0:	cmp	r3, #0
   10ab4:	beq	10acc <close@plt+0x350>
   10ab8:	movw	r3, #0
   10abc:	movt	r3, #0
   10ac0:	cmp	r3, #0
   10ac4:	beq	10acc <close@plt+0x350>
   10ac8:	blx	r3
   10acc:	pop	{r3, lr}
   10ad0:	b	10a38 <close@plt+0x2bc>
   10ad4:	push	{r4, lr}
   10ad8:	movw	r4, #8292	; 0x2064
   10adc:	movt	r4, #2
   10ae0:	mov	r3, r0
   10ae4:	mov	r1, #1
   10ae8:	movw	r2, #3432	; 0xd68
   10aec:	ldr	r0, [r4]
   10af0:	movt	r2, #1
   10af4:	bl	10734 <__fprintf_chk@plt>
   10af8:	mov	r2, #5
   10afc:	movw	r1, #3448	; 0xd78
   10b00:	mov	r0, #0
   10b04:	movt	r1, #1
   10b08:	ldr	r4, [r4]
   10b0c:	bl	106bc <dcgettext@plt>
   10b10:	mov	r1, #1
   10b14:	mov	r2, r0
   10b18:	mov	r0, r4
   10b1c:	bl	10734 <__fprintf_chk@plt>
   10b20:	mov	r0, #1
   10b24:	bl	1071c <exit@plt>
   10b28:	push	{r4, lr}
   10b2c:	mov	r1, #2
   10b30:	mov	r4, r0
   10b34:	bl	10710 <open@plt>
   10b38:	cmp	r0, #0
   10b3c:	popge	{r4, pc}
   10b40:	mov	r0, r4
   10b44:	mov	r1, #1
   10b48:	bl	10710 <open@plt>
   10b4c:	cmp	r0, #0
   10b50:	popge	{r4, pc}
   10b54:	mov	r0, r4
   10b58:	mov	r1, #0
   10b5c:	bl	10710 <open@plt>
   10b60:	orr	r0, r0, r0, asr #31
   10b64:	pop	{r4, pc}
   10b68:	push	{r4, r5, lr}
   10b6c:	movw	r4, #8288	; 0x2060
   10b70:	movt	r4, #2
   10b74:	sub	sp, sp, #12
   10b78:	mov	r2, #0
   10b7c:	mov	r5, r0
   10b80:	ldr	r3, [r4]
   10b84:	strb	r2, [sp, #3]
   10b88:	str	r3, [sp, #4]
   10b8c:	bl	10764 <isatty@plt>
   10b90:	cmp	r0, #0
   10b94:	bne	10bb4 <close@plt+0x438>
   10b98:	mov	r0, #0
   10b9c:	ldr	r2, [sp, #4]
   10ba0:	ldr	r3, [r4]
   10ba4:	cmp	r2, r3
   10ba8:	bne	10be4 <close@plt+0x468>
   10bac:	add	sp, sp, #12
   10bb0:	pop	{r4, r5, pc}
   10bb4:	mov	r0, r5
   10bb8:	movw	r1, #19251	; 0x4b33
   10bbc:	add	r2, sp, #3
   10bc0:	bl	106ec <ioctl@plt>
   10bc4:	cmp	r0, #0
   10bc8:	bne	10b98 <close@plt+0x41c>
   10bcc:	ldrb	r0, [sp, #3]
   10bd0:	sub	r0, r0, #1
   10bd4:	cmp	r0, #1
   10bd8:	movhi	r0, #0
   10bdc:	movls	r0, #1
   10be0:	b	10b9c <close@plt+0x420>
   10be4:	bl	106c8 <__stack_chk_fail@plt>
   10be8:	push	{r3, r4, r5, lr}
   10bec:	subs	r4, r0, #0
   10bf0:	beq	10c14 <close@plt+0x498>
   10bf4:	bl	10b28 <close@plt+0x3ac>
   10bf8:	subs	r5, r0, #0
   10bfc:	blt	10cb4 <close@plt+0x538>
   10c00:	bl	10b68 <close@plt+0x3ec>
   10c04:	cmp	r0, #0
   10c08:	mov	r0, r5
   10c0c:	beq	10cb0 <close@plt+0x534>
   10c10:	pop	{r3, r4, r5, pc}
   10c14:	movw	r4, #3752	; 0xea8
   10c18:	movw	r0, #3780	; 0xec4
   10c1c:	movt	r4, #1
   10c20:	movt	r0, #1
   10c24:	bl	10b28 <close@plt+0x3ac>
   10c28:	subs	r5, r0, #0
   10c2c:	blt	10c44 <close@plt+0x4c8>
   10c30:	bl	10b68 <close@plt+0x3ec>
   10c34:	cmp	r0, #0
   10c38:	mov	r0, r5
   10c3c:	bne	10ca4 <close@plt+0x528>
   10c40:	bl	1077c <close@plt>
   10c44:	ldr	r0, [r4, #4]!
   10c48:	cmp	r0, #0
   10c4c:	bne	10c24 <close@plt+0x4a8>
   10c50:	mov	r5, r0
   10c54:	mov	r0, r5
   10c58:	bl	10b68 <close@plt+0x3ec>
   10c5c:	cmp	r0, #0
   10c60:	bne	10ca8 <close@plt+0x52c>
   10c64:	add	r5, r5, #1
   10c68:	cmp	r5, #3
   10c6c:	bne	10c54 <close@plt+0x4d8>
   10c70:	movw	r3, #8292	; 0x2064
   10c74:	movt	r3, #2
   10c78:	mov	r2, #5
   10c7c:	movw	r1, #3816	; 0xee8
   10c80:	movt	r1, #1
   10c84:	ldr	r4, [r3]
   10c88:	bl	106bc <dcgettext@plt>
   10c8c:	mov	r1, #1
   10c90:	mov	r2, r0
   10c94:	mov	r0, r4
   10c98:	bl	10734 <__fprintf_chk@plt>
   10c9c:	mov	r0, #1
   10ca0:	bl	1071c <exit@plt>
   10ca4:	pop	{r3, r4, r5, pc}
   10ca8:	mov	r0, r5
   10cac:	pop	{r3, r4, r5, pc}
   10cb0:	bl	1077c <close@plt>
   10cb4:	movw	r3, #8292	; 0x2064
   10cb8:	movt	r3, #2
   10cbc:	mov	r2, #5
   10cc0:	movw	r1, #3796	; 0xed4
   10cc4:	mov	r0, #0
   10cc8:	movt	r1, #1
   10ccc:	ldr	r5, [r3]
   10cd0:	bl	106bc <dcgettext@plt>
   10cd4:	mov	r3, r4
   10cd8:	mov	r1, #1
   10cdc:	mov	r2, r0
   10ce0:	mov	r0, r5
   10ce4:	bl	10734 <__fprintf_chk@plt>
   10ce8:	mov	r0, #1
   10cec:	bl	1071c <exit@plt>
   10cf0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10cf4:	mov	r7, r0
   10cf8:	ldr	r6, [pc, #76]	; 10d4c <close@plt+0x5d0>
   10cfc:	mov	r8, r1
   10d00:	ldr	r5, [pc, #72]	; 10d50 <close@plt+0x5d4>
   10d04:	mov	r9, r2
   10d08:	add	r6, pc, r6
   10d0c:	bl	10690 <strtol@plt-0x20>
   10d10:	add	r5, pc, r5
   10d14:	rsb	r6, r5, r6
   10d18:	asrs	r6, r6, #2
   10d1c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10d20:	sub	r5, r5, #4
   10d24:	mov	r4, #0
   10d28:	add	r4, r4, #1
   10d2c:	ldr	r3, [r5, #4]!
   10d30:	mov	r0, r7
   10d34:	mov	r1, r8
   10d38:	mov	r2, r9
   10d3c:	blx	r3
   10d40:	cmp	r4, r6
   10d44:	bne	10d28 <close@plt+0x5ac>
   10d48:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10d4c:	strdeq	r1, [r1], -r0
   10d50:	andeq	r1, r1, r4, ror #3
   10d54:	bx	lr

Disassembly of section .fini:

00010d58 <.fini>:
   10d58:	push	{r3, lr}
   10d5c:	pop	{r3, pc}
