
centos-preinstalled/eog:     file format elf32-littlearm


Disassembly of section .init:

00010bcc <_init@@Base>:
   10bcc:	push	{r3, lr}
   10bd0:	bl	10fb8 <_start@@Base+0x3c>
   10bd4:	pop	{r3, pc}

Disassembly of section .plt:

00010bd8 <textdomain@plt-0x14>:
   10bd8:	push	{lr}		; (str lr, [sp, #-4]!)
   10bdc:	ldr	lr, [pc, #4]	; 10be8 <_init@@Base+0x1c>
   10be0:	add	lr, pc, lr
   10be4:	ldr	pc, [lr, #8]!
   10be8:	andeq	r1, r1, r8, lsl r4

00010bec <textdomain@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #69632	; 0x11000
   10bf4:	ldr	pc, [ip, #1048]!	; 0x418

00010bf8 <g_application_run@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #69632	; 0x11000
   10c00:	ldr	pc, [ip, #1040]!	; 0x410

00010c04 <g_option_context_new@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #69632	; 0x11000
   10c0c:	ldr	pc, [ip, #1032]!	; 0x408

00010c10 <g_print@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #69632	; 0x11000
   10c18:	ldr	pc, [ip, #1024]!	; 0x400

00010c1c <g_type_check_instance_cast@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #69632	; 0x11000
   10c24:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c28 <g_strdup_printf@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #69632	; 0x11000
   10c30:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c34 <dcgettext@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #69632	; 0x11000
   10c3c:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c40 <g_option_context_free@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #69632	; 0x11000
   10c48:	ldr	pc, [ip, #992]!	; 0x3e0

00010c4c <g_free@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #69632	; 0x11000
   10c54:	ldr	pc, [ip, #984]!	; 0x3d8

00010c58 <g_option_context_parse@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #69632	; 0x11000
   10c60:	ldr	pc, [ip, #976]!	; 0x3d0

00010c64 <g_application_set_flags@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #69632	; 0x11000
   10c6c:	ldr	pc, [ip, #968]!	; 0x3c8

00010c70 <__stack_chk_fail@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #69632	; 0x11000
   10c78:	ldr	pc, [ip, #960]!	; 0x3c0

00010c7c <g_application_get_flags@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #69632	; 0x11000
   10c84:	ldr	pc, [ip, #952]!	; 0x3b8

00010c88 <g_option_context_add_main_entries@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #69632	; 0x11000
   10c90:	ldr	pc, [ip, #944]!	; 0x3b0

00010c94 <__libc_start_main@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #69632	; 0x11000
   10c9c:	ldr	pc, [ip, #936]!	; 0x3a8

00010ca0 <__gmon_start__@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #69632	; 0x11000
   10ca8:	ldr	pc, [ip, #928]!	; 0x3a0

00010cac <g_error_free@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #69632	; 0x11000
   10cb4:	ldr	pc, [ip, #920]!	; 0x398

00010cb8 <g_application_get_type@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #69632	; 0x11000
   10cc0:	ldr	pc, [ip, #912]!	; 0x390

00010cc4 <g_option_context_add_group@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #69632	; 0x11000
   10ccc:	ldr	pc, [ip, #904]!	; 0x388

00010cd0 <g_irepository_get_option_group@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #69632	; 0x11000
   10cd8:	ldr	pc, [ip, #896]!	; 0x380

00010cdc <eog_application_get_instance@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #69632	; 0x11000
   10ce4:	ldr	pc, [ip, #888]!	; 0x378

00010ce8 <bind_textdomain_codeset@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #69632	; 0x11000
   10cf0:	ldr	pc, [ip, #880]!	; 0x370

00010cf4 <g_printerr@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #69632	; 0x11000
   10cfc:	ldr	pc, [ip, #872]!	; 0x368

00010d00 <g_object_unref@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #69632	; 0x11000
   10d08:	ldr	pc, [ip, #864]!	; 0x360

00010d0c <abort@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #69632	; 0x11000
   10d14:	ldr	pc, [ip, #856]!	; 0x358

00010d18 <bindtextdomain@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #69632	; 0x11000
   10d20:	ldr	pc, [ip, #848]!	; 0x350

00010d24 <exit@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #69632	; 0x11000
   10d2c:	ldr	pc, [ip, #840]!	; 0x348

00010d30 <gtk_get_option_group@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #69632	; 0x11000
   10d38:	ldr	pc, [ip, #832]!	; 0x340

Disassembly of section .text:

00010d3c <main@@Base>:
   10d3c:	push	{r4, r5, r6, lr}
   10d40:	movw	r5, #8328	; 0x2088
   10d44:	movt	r5, #2
   10d48:	sub	sp, sp, #16
   10d4c:	mov	r4, #0
   10d50:	ldr	r3, [r5]
   10d54:	str	r0, [sp, #4]
   10d58:	movw	r0, #4680	; 0x1248
   10d5c:	str	r1, [sp]
   10d60:	movt	r0, #1
   10d64:	movw	r1, #4684	; 0x124c
   10d68:	movt	r1, #1
   10d6c:	str	r3, [sp, #12]
   10d70:	str	r4, [sp, #8]
   10d74:	bl	10d18 <bindtextdomain@plt>
   10d78:	movw	r0, #4680	; 0x1248
   10d7c:	movw	r1, #4704	; 0x1260
   10d80:	movt	r0, #1
   10d84:	movt	r1, #1
   10d88:	bl	10ce8 <bind_textdomain_codeset@plt>
   10d8c:	movw	r0, #4680	; 0x1248
   10d90:	movt	r0, #1
   10d94:	bl	10bec <textdomain@plt>
   10d98:	mov	r2, #5
   10d9c:	mov	r0, r4
   10da0:	movw	r1, #4712	; 0x1268
   10da4:	movt	r1, #1
   10da8:	bl	10c34 <dcgettext@plt>
   10dac:	bl	10c04 <g_option_context_new@plt>
   10db0:	movw	r1, #4448	; 0x1160
   10db4:	movw	r2, #4680	; 0x1248
   10db8:	movt	r1, #1
   10dbc:	movt	r2, #1
   10dc0:	mov	r6, r0
   10dc4:	bl	10c88 <g_option_context_add_main_entries@plt>
   10dc8:	mov	r0, r4
   10dcc:	bl	10d30 <gtk_get_option_group@plt>
   10dd0:	mov	r1, r0
   10dd4:	mov	r0, r6
   10dd8:	bl	10cc4 <g_option_context_add_group@plt>
   10ddc:	bl	10cd0 <g_irepository_get_option_group@plt>
   10de0:	mov	r1, r0
   10de4:	mov	r0, r6
   10de8:	bl	10cc4 <g_option_context_add_group@plt>
   10dec:	mov	r0, r6
   10df0:	add	r1, sp, #4
   10df4:	mov	r2, sp
   10df8:	add	r3, sp, #8
   10dfc:	bl	10c58 <g_option_context_parse@plt>
   10e00:	cmp	r0, r4
   10e04:	beq	10ee4 <main@@Base+0x1a8>
   10e08:	movw	r4, #8336	; 0x2090
   10e0c:	movt	r4, #2
   10e10:	mov	r0, r6
   10e14:	bl	10c40 <g_option_context_free@plt>
   10e18:	ldr	r3, [r4]
   10e1c:	ldr	r2, [r4, #8]
   10e20:	cmp	r3, #0
   10e24:	ldrne	r3, [r4, #4]
   10e28:	orrne	r3, r3, #1
   10e2c:	strne	r3, [r4, #4]
   10e30:	cmp	r2, #0
   10e34:	movw	r3, #8336	; 0x2090
   10e38:	movt	r3, #2
   10e3c:	ldrne	r2, [r3, #4]
   10e40:	orrne	r2, r2, #4
   10e44:	strne	r2, [r3, #4]
   10e48:	movw	r3, #8336	; 0x2090
   10e4c:	ldr	r2, [r4, #12]
   10e50:	movt	r3, #2
   10e54:	cmp	r2, #0
   10e58:	ldrne	r2, [r3, #4]
   10e5c:	orrne	r2, r2, #2
   10e60:	strne	r2, [r3, #4]
   10e64:	movw	r3, #8336	; 0x2090
   10e68:	ldr	r2, [r4, #16]
   10e6c:	movt	r3, #2
   10e70:	cmp	r2, #0
   10e74:	ldrne	r2, [r3, #4]
   10e78:	orrne	r2, r2, #8
   10e7c:	strne	r2, [r3, #4]
   10e80:	bl	10cdc <eog_application_get_instance@plt>
   10e84:	ldr	r2, [r4, #20]
   10e88:	ldr	r3, [r4, #4]
   10e8c:	cmp	r2, #0
   10e90:	ldr	r2, [r0, #20]
   10e94:	str	r3, [r2, #4]
   10e98:	bne	10f3c <main@@Base+0x200>
   10e9c:	bl	10cdc <eog_application_get_instance@plt>
   10ea0:	mov	r4, r0
   10ea4:	bl	10cb8 <g_application_get_type@plt>
   10ea8:	mov	r1, r0
   10eac:	mov	r0, r4
   10eb0:	bl	10c1c <g_type_check_instance_cast@plt>
   10eb4:	ldr	r1, [sp, #4]
   10eb8:	ldr	r2, [sp]
   10ebc:	bl	10bf8 <g_application_run@plt>
   10ec0:	bl	10cdc <eog_application_get_instance@plt>
   10ec4:	bl	10d00 <g_object_unref@plt>
   10ec8:	mov	r0, #0
   10ecc:	ldr	r2, [sp, #12]
   10ed0:	ldr	r3, [r5]
   10ed4:	cmp	r2, r3
   10ed8:	bne	10f78 <main@@Base+0x23c>
   10edc:	add	sp, sp, #16
   10ee0:	pop	{r4, r5, r6, pc}
   10ee4:	mov	r2, #5
   10ee8:	movw	r1, #4724	; 0x1274
   10eec:	movt	r1, #1
   10ef0:	bl	10c34 <dcgettext@plt>
   10ef4:	ldr	r3, [sp]
   10ef8:	ldr	r1, [r3]
   10efc:	bl	10c28 <g_strdup_printf@plt>
   10f00:	ldr	r3, [sp, #8]
   10f04:	ldr	r1, [r3, #8]
   10f08:	mov	r2, r0
   10f0c:	mov	r4, r0
   10f10:	movw	r0, #4800	; 0x12c0
   10f14:	movt	r0, #1
   10f18:	bl	10cf4 <g_printerr@plt>
   10f1c:	ldr	r0, [sp, #8]
   10f20:	bl	10cac <g_error_free@plt>
   10f24:	mov	r0, r4
   10f28:	bl	10c4c <g_free@plt>
   10f2c:	mov	r0, r6
   10f30:	bl	10c40 <g_option_context_free@plt>
   10f34:	mov	r0, #1
   10f38:	b	10ecc <main@@Base+0x190>
   10f3c:	bl	10cdc <eog_application_get_instance@plt>
   10f40:	mov	r6, r0
   10f44:	bl	10cb8 <g_application_get_type@plt>
   10f48:	mov	r4, r0
   10f4c:	mov	r0, r6
   10f50:	mov	r1, r4
   10f54:	bl	10c1c <g_type_check_instance_cast@plt>
   10f58:	bl	10c7c <g_application_get_flags@plt>
   10f5c:	mov	r6, r0
   10f60:	bl	10cdc <eog_application_get_instance@plt>
   10f64:	mov	r1, r4
   10f68:	bl	10c1c <g_type_check_instance_cast@plt>
   10f6c:	orr	r1, r6, #32
   10f70:	bl	10c64 <g_application_set_flags@plt>
   10f74:	b	10e9c <main@@Base+0x160>
   10f78:	bl	10c70 <__stack_chk_fail@plt>

00010f7c <_start@@Base>:
   10f7c:	mov	fp, #0
   10f80:	mov	lr, #0
   10f84:	pop	{r1}		; (ldr r1, [sp], #4)
   10f88:	mov	r2, sp
   10f8c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f90:	push	{r0}		; (str r0, [sp, #-4]!)
   10f94:	ldr	ip, [pc, #16]	; 10fac <_start@@Base+0x30>
   10f98:	push	{ip}		; (str ip, [sp, #-4]!)
   10f9c:	ldr	r0, [pc, #12]	; 10fb0 <_start@@Base+0x34>
   10fa0:	ldr	r3, [pc, #12]	; 10fb4 <_start@@Base+0x38>
   10fa4:	bl	10c94 <__libc_start_main@plt>
   10fa8:	bl	10d0c <abort@plt>
   10fac:	andeq	r1, r1, ip, asr #2
   10fb0:	andeq	r0, r1, ip, lsr sp
   10fb4:	andeq	r1, r1, r8, ror #1
   10fb8:	ldr	r3, [pc, #20]	; 10fd4 <_start@@Base+0x58>
   10fbc:	ldr	r2, [pc, #20]	; 10fd8 <_start@@Base+0x5c>
   10fc0:	add	r3, pc, r3
   10fc4:	ldr	r2, [r3, r2]
   10fc8:	cmp	r2, #0
   10fcc:	bxeq	lr
   10fd0:	b	10ca0 <__gmon_start__@plt>
   10fd4:	andeq	r1, r1, r8, lsr r0
   10fd8:	andeq	r0, r0, ip, ror r0
   10fdc:	push	{r3, lr}
   10fe0:	movw	r0, #8324	; 0x2084
   10fe4:	ldr	r3, [pc, #36]	; 11010 <_start@@Base+0x94>
   10fe8:	movt	r0, #2
   10fec:	rsb	r3, r0, r3
   10ff0:	cmp	r3, #6
   10ff4:	popls	{r3, pc}
   10ff8:	movw	r3, #0
   10ffc:	movt	r3, #0
   11000:	cmp	r3, #0
   11004:	popeq	{r3, pc}
   11008:	blx	r3
   1100c:	pop	{r3, pc}
   11010:	andeq	r2, r2, r7, lsl #1
   11014:	push	{r3, lr}
   11018:	movw	r0, #8324	; 0x2084
   1101c:	movw	r3, #8324	; 0x2084
   11020:	movt	r0, #2
   11024:	movt	r3, #2
   11028:	rsb	r3, r0, r3
   1102c:	asr	r3, r3, #2
   11030:	add	r3, r3, r3, lsr #31
   11034:	asrs	r1, r3, #1
   11038:	popeq	{r3, pc}
   1103c:	movw	r2, #0
   11040:	movt	r2, #0
   11044:	cmp	r2, #0
   11048:	popeq	{r3, pc}
   1104c:	blx	r2
   11050:	pop	{r3, pc}
   11054:	push	{r4, lr}
   11058:	movw	r4, #8332	; 0x208c
   1105c:	movt	r4, #2
   11060:	ldrb	r3, [r4]
   11064:	cmp	r3, #0
   11068:	popne	{r4, pc}
   1106c:	bl	10fdc <_start@@Base+0x60>
   11070:	mov	r3, #1
   11074:	strb	r3, [r4]
   11078:	pop	{r4, pc}
   1107c:	movw	r0, #7876	; 0x1ec4
   11080:	movt	r0, #2
   11084:	push	{r3, lr}
   11088:	ldr	r3, [r0]
   1108c:	cmp	r3, #0
   11090:	beq	110a8 <_start@@Base+0x12c>
   11094:	movw	r3, #0
   11098:	movt	r3, #0
   1109c:	cmp	r3, #0
   110a0:	beq	110a8 <_start@@Base+0x12c>
   110a4:	blx	r3
   110a8:	pop	{r3, lr}
   110ac:	b	11014 <_start@@Base+0x98>
   110b0:	push	{r3, lr}
   110b4:	mov	r2, #5
   110b8:	movw	r1, #4644	; 0x1224
   110bc:	mov	r0, #0
   110c0:	movt	r1, #1
   110c4:	bl	10c34 <dcgettext@plt>
   110c8:	movw	r2, #4672	; 0x1240
   110cc:	movt	r2, #1
   110d0:	mov	r1, r0
   110d4:	movw	r0, #4664	; 0x1238
   110d8:	movt	r0, #1
   110dc:	bl	10c10 <g_print@plt>
   110e0:	mov	r0, #0
   110e4:	bl	10d24 <exit@plt>

000110e8 <__libc_csu_init@@Base>:
   110e8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   110ec:	mov	r7, r0
   110f0:	ldr	r6, [pc, #76]	; 11144 <__libc_csu_init@@Base+0x5c>
   110f4:	mov	r8, r1
   110f8:	ldr	r5, [pc, #72]	; 11148 <__libc_csu_init@@Base+0x60>
   110fc:	mov	r9, r2
   11100:	add	r6, pc, r6
   11104:	bl	10bcc <_init@@Base>
   11108:	add	r5, pc, r5
   1110c:	rsb	r6, r5, r6
   11110:	asrs	r6, r6, #2
   11114:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11118:	sub	r5, r5, #4
   1111c:	mov	r4, #0
   11120:	add	r4, r4, #1
   11124:	ldr	r3, [r5, #4]!
   11128:	mov	r0, r7
   1112c:	mov	r1, r8
   11130:	mov	r2, r9
   11134:	blx	r3
   11138:	cmp	r4, r6
   1113c:	bne	11120 <__libc_csu_init@@Base+0x38>
   11140:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11144:			; <UNDEFINED> instruction: 0x00010db8
   11148:	andeq	r0, r1, ip, lsr #27

0001114c <__libc_csu_fini@@Base>:
   1114c:	bx	lr

Disassembly of section .fini:

00011150 <_fini@@Base>:
   11150:	push	{r3, lr}
   11154:	pop	{r3, pc}
