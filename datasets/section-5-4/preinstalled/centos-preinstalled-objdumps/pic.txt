
centos-preinstalled/pic:     file format elf32-littlearm


Disassembly of section .init:

00009090 <.init>:
    9090:	push	{r3, lr}
    9094:	bl	98d4 <fputs@plt+0x518>
    9098:	pop	{r3, pc}

Disassembly of section .plt:

0000909c <strerror@plt-0x14>:
    909c:	push	{lr}		; (str lr, [sp, #-4]!)
    90a0:	ldr	lr, [pc, #4]	; 90ac <strerror@plt-0x4>
    90a4:	add	lr, pc, lr
    90a8:	ldr	pc, [lr, #8]!
    90ac:	andeq	r6, r2, r4, asr pc

000090b0 <strerror@plt>:
    90b0:	add	ip, pc, #0, 12
    90b4:	add	ip, ip, #155648	; 0x26000
    90b8:	ldr	pc, [ip, #3924]!	; 0xf54

000090bc <abort@plt>:
    90bc:	add	ip, pc, #0, 12
    90c0:	add	ip, ip, #155648	; 0x26000
    90c4:	ldr	pc, [ip, #3916]!	; 0xf4c

000090c8 <srand@plt>:
    90c8:	add	ip, pc, #0, 12
    90cc:	add	ip, ip, #155648	; 0x26000
    90d0:	ldr	pc, [ip, #3908]!	; 0xf44

000090d4 <memcmp@plt>:
    90d4:	add	ip, pc, #0, 12
    90d8:	add	ip, ip, #155648	; 0x26000
    90dc:	ldr	pc, [ip, #3900]!	; 0xf3c

000090e0 <__libc_start_main@plt>:
    90e0:	add	ip, pc, #0, 12
    90e4:	add	ip, ip, #155648	; 0x26000
    90e8:	ldr	pc, [ip, #3892]!	; 0xf34

000090ec <setbuf@plt>:
    90ec:	add	ip, pc, #0, 12
    90f0:	add	ip, ip, #155648	; 0x26000
    90f4:	ldr	pc, [ip, #3884]!	; 0xf2c

000090f8 <__cxa_guard_acquire@plt>:
    90f8:	add	ip, pc, #0, 12
    90fc:	add	ip, ip, #155648	; 0x26000
    9100:	ldr	pc, [ip, #3876]!	; 0xf24

00009104 <__gmon_start__@plt>:
    9104:	add	ip, pc, #0, 12
    9108:	add	ip, ip, #155648	; 0x26000
    910c:	ldr	pc, [ip, #3868]!	; 0xf1c

00009110 <hypot@plt>:
    9110:	add	ip, pc, #0, 12
    9114:	add	ip, ip, #155648	; 0x26000
    9118:	ldr	pc, [ip, #3860]!	; 0xf14

0000911c <pow@plt>:
    911c:	add	ip, pc, #0, 12
    9120:	add	ip, ip, #155648	; 0x26000
    9124:	ldr	pc, [ip, #3852]!	; 0xf0c

00009128 <fclose@plt>:
    9128:	add	ip, pc, #0, 12
    912c:	add	ip, ip, #155648	; 0x26000
    9130:	ldr	pc, [ip, #3844]!	; 0xf04

00009134 <getenv@plt>:
    9134:	add	ip, pc, #0, 12
    9138:	add	ip, ip, #155648	; 0x26000
    913c:	ldr	pc, [ip, #3836]!	; 0xefc

00009140 <__printf_chk@plt>:
    9140:	add	ip, pc, #0, 12
    9144:	add	ip, ip, #155648	; 0x26000
    9148:	ldr	pc, [ip, #3828]!	; 0xef4

0000914c <_IO_getc@plt>:
    914c:	add	ip, pc, #0, 12
    9150:	add	ip, ip, #155648	; 0x26000
    9154:	ldr	pc, [ip, #3820]!	; 0xeec

00009158 <system@plt>:
    9158:	add	ip, pc, #0, 12
    915c:	add	ip, ip, #155648	; 0x26000
    9160:	ldr	pc, [ip, #3812]!	; 0xee4

00009164 <strchr@plt>:
    9164:	add	ip, pc, #0, 12
    9168:	add	ip, ip, #155648	; 0x26000
    916c:	ldr	pc, [ip, #3804]!	; 0xedc

00009170 <sincos@plt>:
    9170:	add	ip, pc, #0, 12
    9174:	add	ip, ip, #155648	; 0x26000
    9178:	ldr	pc, [ip, #3796]!	; 0xed4

0000917c <fopen@plt>:
    917c:	add	ip, pc, #0, 12
    9180:	add	ip, ip, #155648	; 0x26000
    9184:	ldr	pc, [ip, #3788]!	; 0xecc

00009188 <__cxa_end_cleanup@plt>:
    9188:	add	ip, pc, #0, 12
    918c:	add	ip, ip, #155648	; 0x26000
    9190:	ldr	pc, [ip, #3780]!	; 0xec4

00009194 <ungetc@plt>:
    9194:	add	ip, pc, #0, 12
    9198:	add	ip, ip, #155648	; 0x26000
    919c:	ldr	pc, [ip, #3772]!	; 0xebc

000091a0 <floor@plt>:
    91a0:	add	ip, pc, #0, 12
    91a4:	add	ip, ip, #155648	; 0x26000
    91a8:	ldr	pc, [ip, #3764]!	; 0xeb4

000091ac <sqrt@plt>:
    91ac:	add	ip, pc, #0, 12
    91b0:	add	ip, ip, #155648	; 0x26000
    91b4:	ldr	pc, [ip, #3756]!	; 0xeac

000091b8 <_exit@plt>:
    91b8:	add	ip, pc, #0, 12
    91bc:	add	ip, ip, #155648	; 0x26000
    91c0:	ldr	pc, [ip, #3748]!	; 0xea4

000091c4 <free@plt>:
    91c4:	add	ip, pc, #0, 12
    91c8:	add	ip, ip, #155648	; 0x26000
    91cc:	ldr	pc, [ip, #3740]!	; 0xe9c

000091d0 <write@plt>:
    91d0:	add	ip, pc, #0, 12
    91d4:	add	ip, ip, #155648	; 0x26000
    91d8:	ldr	pc, [ip, #3732]!	; 0xe94

000091dc <fflush@plt>:
    91dc:	add	ip, pc, #0, 12
    91e0:	add	ip, ip, #155648	; 0x26000
    91e4:	ldr	pc, [ip, #3724]!	; 0xe8c

000091e8 <__cxa_guard_release@plt>:
    91e8:	add	ip, pc, #0, 12
    91ec:	add	ip, ip, #155648	; 0x26000
    91f0:	ldr	pc, [ip, #3716]!	; 0xe84

000091f4 <cos@plt>:
    91f4:	add	ip, pc, #0, 12
    91f8:	add	ip, ip, #155648	; 0x26000
    91fc:	ldr	pc, [ip, #3708]!	; 0xe7c

00009200 <strlen@plt>:
    9200:	add	ip, pc, #0, 12
    9204:	add	ip, ip, #155648	; 0x26000
    9208:	ldr	pc, [ip, #3700]!	; 0xe74

0000920c <sscanf@plt>:
    920c:	add	ip, pc, #0, 12
    9210:	add	ip, ip, #155648	; 0x26000
    9214:	ldr	pc, [ip, #3692]!	; 0xe6c

00009218 <memcpy@plt>:
    9218:	add	ip, pc, #0, 12
    921c:	add	ip, ip, #155648	; 0x26000
    9220:	ldr	pc, [ip, #3684]!	; 0xe64

00009224 <setlocale@plt>:
    9224:	add	ip, pc, #0, 12
    9228:	add	ip, ip, #155648	; 0x26000
    922c:	ldr	pc, [ip, #3676]!	; 0xe5c

00009230 <acos@plt>:
    9230:	add	ip, pc, #0, 12
    9234:	add	ip, ip, #155648	; 0x26000
    9238:	ldr	pc, [ip, #3668]!	; 0xe54

0000923c <strtol@plt>:
    923c:	add	ip, pc, #0, 12
    9240:	add	ip, ip, #155648	; 0x26000
    9244:	ldr	pc, [ip, #3660]!	; 0xe4c

00009248 <strcpy@plt>:
    9248:	add	ip, pc, #0, 12
    924c:	add	ip, ip, #155648	; 0x26000
    9250:	ldr	pc, [ip, #3652]!	; 0xe44

00009254 <__cxa_pure_virtual@plt>:
    9254:	add	ip, pc, #0, 12
    9258:	add	ip, ip, #155648	; 0x26000
    925c:	ldr	pc, [ip, #3644]!	; 0xe3c

00009260 <__snprintf_chk@plt>:
    9260:	add	ip, pc, #0, 12
    9264:	add	ip, ip, #155648	; 0x26000
    9268:	ldr	pc, [ip, #3636]!	; 0xe34

0000926c <fwrite@plt>:
    926c:	add	ip, pc, #0, 12
    9270:	add	ip, ip, #155648	; 0x26000
    9274:	ldr	pc, [ip, #3628]!	; 0xe2c

00009278 <_Znaj@plt>:
    9278:	add	ip, pc, #0, 12
    927c:	add	ip, ip, #155648	; 0x26000
    9280:	ldr	pc, [ip, #3620]!	; 0xe24

00009284 <__aeabi_uidivmod@plt>:
    9284:	add	ip, pc, #0, 12
    9288:	add	ip, ip, #155648	; 0x26000
    928c:	ldr	pc, [ip, #3612]!	; 0xe1c

00009290 <log10@plt>:
    9290:	add	ip, pc, #0, 12
    9294:	add	ip, ip, #155648	; 0x26000
    9298:	ldr	pc, [ip, #3604]!	; 0xe14

0000929c <__ctype_b_loc@plt>:
    929c:	add	ip, pc, #0, 12
    92a0:	add	ip, ip, #155648	; 0x26000
    92a4:	ldr	pc, [ip, #3596]!	; 0xe0c

000092a8 <malloc@plt>:
    92a8:	add	ip, pc, #0, 12
    92ac:	add	ip, ip, #155648	; 0x26000
    92b0:	ldr	pc, [ip, #3588]!	; 0xe04

000092b4 <__stack_chk_fail@plt>:
    92b4:	add	ip, pc, #0, 12
    92b8:	add	ip, ip, #155648	; 0x26000
    92bc:	ldr	pc, [ip, #3580]!	; 0xdfc

000092c0 <__fprintf_chk@plt>:
    92c0:	add	ip, pc, #0, 12
    92c4:	add	ip, ip, #155648	; 0x26000
    92c8:	ldr	pc, [ip, #3572]!	; 0xdf4

000092cc <atan2@plt>:
    92cc:	add	ip, pc, #0, 12
    92d0:	add	ip, ip, #155648	; 0x26000
    92d4:	ldr	pc, [ip, #3564]!	; 0xdec

000092d8 <fputc@plt>:
    92d8:	add	ip, pc, #0, 12
    92dc:	add	ip, ip, #155648	; 0x26000
    92e0:	ldr	pc, [ip, #3556]!	; 0xde4

000092e4 <strcat@plt>:
    92e4:	add	ip, pc, #0, 12
    92e8:	add	ip, ip, #155648	; 0x26000
    92ec:	ldr	pc, [ip, #3548]!	; 0xddc

000092f0 <_ZdaPv@plt>:
    92f0:	add	ip, pc, #0, 12
    92f4:	add	ip, ip, #155648	; 0x26000
    92f8:	ldr	pc, [ip, #3540]!	; 0xdd4

000092fc <__aeabi_atexit@plt>:
    92fc:	add	ip, pc, #0, 12
    9300:	add	ip, ip, #155648	; 0x26000
    9304:	ldr	pc, [ip, #3532]!	; 0xdcc

00009308 <puts@plt>:
    9308:	add	ip, pc, #0, 12
    930c:	add	ip, ip, #155648	; 0x26000
    9310:	ldr	pc, [ip, #3524]!	; 0xdc4

00009314 <sin@plt>:
    9314:	add	ip, pc, #0, 12
    9318:	add	ip, ip, #155648	; 0x26000
    931c:	ldr	pc, [ip, #3516]!	; 0xdbc

00009320 <rand@plt>:
    9320:	add	ip, pc, #0, 12
    9324:	add	ip, ip, #155648	; 0x26000
    9328:	ldr	pc, [ip, #3508]!	; 0xdb4

0000932c <snprintf@plt>:
    932c:	add	ip, pc, #0, 12
    9330:	add	ip, ip, #155648	; 0x26000
    9334:	ldr	pc, [ip, #3500]!	; 0xdac

00009338 <__sprintf_chk@plt>:
    9338:	add	ip, pc, #0, 12
    933c:	add	ip, ip, #155648	; 0x26000
    9340:	ldr	pc, [ip, #3492]!	; 0xda4

00009344 <strncmp@plt>:
    9344:	add	ip, pc, #0, 12
    9348:	add	ip, ip, #155648	; 0x26000
    934c:	ldr	pc, [ip, #3484]!	; 0xd9c

00009350 <__gxx_personality_v0@plt>:
    9350:	add	ip, pc, #0, 12
    9354:	add	ip, ip, #155648	; 0x26000
    9358:	ldr	pc, [ip, #3476]!	; 0xd94

0000935c <ferror@plt>:
    935c:	add	ip, pc, #0, 12
    9360:	add	ip, ip, #155648	; 0x26000
    9364:	ldr	pc, [ip, #3468]!	; 0xd8c

00009368 <_IO_putc@plt>:
    9368:	add	ip, pc, #0, 12
    936c:	add	ip, ip, #155648	; 0x26000
    9370:	ldr	pc, [ip, #3460]!	; 0xd84

00009374 <memchr@plt>:
    9374:	add	ip, pc, #0, 12
    9378:	add	ip, ip, #155648	; 0x26000
    937c:	ldr	pc, [ip, #3452]!	; 0xd7c

00009380 <strcmp@plt>:
    9380:	add	ip, pc, #0, 12
    9384:	add	ip, ip, #155648	; 0x26000
    9388:	ldr	pc, [ip, #3444]!	; 0xd74

0000938c <exit@plt>:
    938c:	add	ip, pc, #0, 12
    9390:	add	ip, ip, #155648	; 0x26000
    9394:	ldr	pc, [ip, #3436]!	; 0xd6c

00009398 <__errno_location@plt>:
    9398:	add	ip, pc, #0, 12
    939c:	add	ip, ip, #155648	; 0x26000
    93a0:	ldr	pc, [ip, #3428]!	; 0xd64

000093a4 <fmod@plt>:
    93a4:	add	ip, pc, #0, 12
    93a8:	add	ip, ip, #155648	; 0x26000
    93ac:	ldr	pc, [ip, #3420]!	; 0xd5c

000093b0 <ceil@plt>:
    93b0:	add	ip, pc, #0, 12
    93b4:	add	ip, ip, #155648	; 0x26000
    93b8:	ldr	pc, [ip, #3412]!	; 0xd54

000093bc <fputs@plt>:
    93bc:	add	ip, pc, #0, 12
    93c0:	add	ip, ip, #155648	; 0x26000
    93c4:	ldr	pc, [ip, #3404]!	; 0xd4c

Disassembly of section .text:

000093c8 <_Znwj@@Base-0x175d8>:
    93c8:	push	{r4, lr}
    93cc:	mov	r4, r0
    93d0:	bl	9200 <strlen@plt>
    93d4:	mov	r1, r4
    93d8:	pop	{r4, lr}
    93dc:	mov	r2, r0
    93e0:	mov	r0, #2
    93e4:	b	91d0 <write@plt>
    93e8:	push	{r3, r4, r5, lr}
    93ec:	movw	r4, #1496	; 0x5d8
    93f0:	movt	r4, #3
    93f4:	add	r5, r4, #24
    93f8:	add	r0, r4, #1104	; 0x450
    93fc:	bl	1f008 <fputs@plt+0x15c4c>
    9400:	add	r0, r4, #8
    9404:	bl	15038 <fputs@plt+0xbc7c>
    9408:	mov	r0, r5
    940c:	bl	9a58 <fputs@plt+0x69c>
    9410:	mov	r0, r5
    9414:	movw	r1, #39376	; 0x99d0
    9418:	movw	r2, #5540	; 0x15a4
    941c:	movt	r1, #0
    9420:	movt	r2, #2
    9424:	bl	92fc <__aeabi_atexit@plt>
    9428:	add	r0, r4, #36	; 0x24
    942c:	pop	{r3, r4, r5, lr}
    9430:	b	167ac <fputs@plt+0xd3f0>
    9434:	push	{r4, r5, r6, r7, r8, lr}
    9438:	movw	r4, #2608	; 0xa30
    943c:	movt	r4, #3
    9440:	movw	r5, #5540	; 0x15a4
    9444:	add	r7, r4, #32
    9448:	movt	r5, #2
    944c:	add	r0, r4, #76	; 0x4c
    9450:	add	r8, r4, #8
    9454:	bl	1f008 <fputs@plt+0x15c4c>
    9458:	mov	r0, r7
    945c:	bl	f0f8 <fputs@plt+0x5d3c>
    9460:	movw	r6, #3312	; 0xcf0
    9464:	mov	r2, r5
    9468:	movt	r6, #2
    946c:	mov	r0, r7
    9470:	movw	r1, #58724	; 0xe564
    9474:	movt	r1, #0
    9478:	add	r7, r4, #20
    947c:	bl	92fc <__aeabi_atexit@plt>
    9480:	mov	r0, r8
    9484:	bl	20b8c <_ZdlPv@@Base+0x19c>
    9488:	mov	r2, r5
    948c:	mov	r1, r6
    9490:	mov	r0, r8
    9494:	bl	92fc <__aeabi_atexit@plt>
    9498:	add	r4, r4, #60	; 0x3c
    949c:	mov	r0, r7
    94a0:	bl	20b8c <_ZdlPv@@Base+0x19c>
    94a4:	mov	r1, r6
    94a8:	mov	r2, r5
    94ac:	mov	r0, r7
    94b0:	bl	92fc <__aeabi_atexit@plt>
    94b4:	mov	r0, r4
    94b8:	bl	20b8c <_ZdlPv@@Base+0x19c>
    94bc:	mov	r0, r4
    94c0:	mov	r1, r6
    94c4:	mov	r2, r5
    94c8:	pop	{r4, r5, r6, r7, r8, lr}
    94cc:	b	92fc <__aeabi_atexit@plt>
    94d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    94d4:	movw	r8, #1424	; 0x590
    94d8:	movt	r8, #3
    94dc:	sub	sp, sp, #44	; 0x2c
    94e0:	mov	r5, r1
    94e4:	mov	r6, r0
    94e8:	ldr	r3, [r8]
    94ec:	movw	r1, #22128	; 0x5670
    94f0:	mov	r0, #1
    94f4:	movt	r1, #2
    94f8:	movw	r7, #1488	; 0x5d0
    94fc:	movt	r7, #3
    9500:	str	r3, [sp, #36]	; 0x24
    9504:	bl	9224 <setlocale@plt>
    9508:	ldr	r2, [r5]
    950c:	movw	r3, #14000	; 0x36b0
    9510:	movt	r3, #3
    9514:	ldr	r0, [r7]
    9518:	ldr	r1, [pc, #776]	; 9828 <fputs@plt+0x46c>
    951c:	mov	ip, #0
    9520:	str	r2, [r3]
    9524:	movw	sl, #10872	; 0x2a78
    9528:	str	ip, [sp, #8]
    952c:	movw	r9, #1076	; 0x434
    9530:	str	ip, [sp, #12]
    9534:	bl	90ec <setbuf@plt>
    9538:	movw	fp, #2688	; 0xa80
    953c:	movt	sl, #3
    9540:	movt	r9, #3
    9544:	movt	fp, #3
    9548:	mov	r4, #0
    954c:	movw	r2, #22212	; 0x56c4
    9550:	str	r4, [sp]
    9554:	movt	r2, #2
    9558:	mov	r0, r6
    955c:	mov	r1, r5
    9560:	ldr	r3, [pc, #708]	; 982c <fputs@plt+0x470>
    9564:	bl	2063c <fputs@plt+0x17280>
    9568:	cmn	r0, #1
    956c:	beq	96f0 <fputs@plt+0x334>
    9570:	cmp	r0, #102	; 0x66
    9574:	beq	96d0 <fputs@plt+0x314>
    9578:	bgt	95b0 <fputs@plt+0x1f4>
    957c:	cmp	r0, #83	; 0x53
    9580:	beq	96c4 <fputs@plt+0x308>
    9584:	bgt	95e8 <fputs@plt+0x22c>
    9588:	cmp	r0, #67	; 0x43
    958c:	beq	96b8 <fputs@plt+0x2fc>
    9590:	cmp	r0, #68	; 0x44
    9594:	beq	9548 <fputs@plt+0x18c>
    9598:	cmp	r0, #63	; 0x3f
    959c:	bne	95d4 <fputs@plt+0x218>
    95a0:	ldr	r0, [r7]
    95a4:	bl	13e94 <fputs@plt+0xaad8>
    95a8:	mov	r0, #1
    95ac:	bl	938c <exit@plt>
    95b0:	cmp	r0, #118	; 0x76
    95b4:	beq	967c <fputs@plt+0x2c0>
    95b8:	bgt	9610 <fputs@plt+0x254>
    95bc:	cmp	r0, #112	; 0x70
    95c0:	beq	9650 <fputs@plt+0x294>
    95c4:	cmp	r0, #116	; 0x74
    95c8:	beq	9638 <fputs@plt+0x27c>
    95cc:	cmp	r0, #110	; 0x6e
    95d0:	beq	96b0 <fputs@plt+0x2f4>
    95d4:	movw	r1, #21932	; 0x55ac
    95d8:	movw	r0, #599	; 0x257
    95dc:	movt	r1, #2
    95e0:	bl	1eec8 <fputs@plt+0x15b0c>
    95e4:	b	9548 <fputs@plt+0x18c>
    95e8:	cmp	r0, #85	; 0x55
    95ec:	streq	r4, [r9, #4]
    95f0:	beq	9548 <fputs@plt+0x18c>
    95f4:	blt	9548 <fputs@plt+0x18c>
    95f8:	cmp	r0, #99	; 0x63
    95fc:	ldreq	ip, [sp, #8]
    9600:	addeq	ip, ip, #1
    9604:	streq	ip, [sp, #8]
    9608:	beq	9548 <fputs@plt+0x18c>
    960c:	b	95d4 <fputs@plt+0x218>
    9610:	cmp	r0, #122	; 0x7a
    9614:	beq	96a0 <fputs@plt+0x2e4>
    9618:	cmp	r0, #256	; 0x100
    961c:	bne	9648 <fputs@plt+0x28c>
    9620:	movw	r3, #1484	; 0x5cc
    9624:	movt	r3, #3
    9628:	ldr	r0, [r3]
    962c:	bl	13e94 <fputs@plt+0xaad8>
    9630:	mov	r0, r4
    9634:	bl	938c <exit@plt>
    9638:	ldr	ip, [sp, #12]
    963c:	add	ip, ip, #1
    9640:	str	ip, [sp, #12]
    9644:	b	9548 <fputs@plt+0x18c>
    9648:	cmp	r0, #120	; 0x78
    964c:	bne	95d4 <fputs@plt+0x218>
    9650:	uxtb	r1, r0
    9654:	add	r0, sp, #16
    9658:	bl	1f2b0 <fputs@plt+0x15ef4>
    965c:	movw	r2, #13880	; 0x3638
    9660:	movt	r2, #3
    9664:	movw	r0, #22160	; 0x5690
    9668:	add	r1, sp, #16
    966c:	movt	r0, #2
    9670:	mov	r3, r2
    9674:	bl	1f738 <fputs@plt+0x1637c>
    9678:	b	9548 <fputs@plt+0x18c>
    967c:	movw	r3, #1360	; 0x550
    9680:	movt	r3, #3
    9684:	movw	r1, #22184	; 0x56a8
    9688:	mov	r0, #1
    968c:	ldr	r2, [r3]
    9690:	movt	r1, #2
    9694:	bl	9140 <__printf_chk@plt>
    9698:	mov	r0, r4
    969c:	bl	938c <exit@plt>
    96a0:	ldr	r3, [sl, #28]
    96a4:	add	r3, r3, #1
    96a8:	str	r3, [sl, #28]
    96ac:	b	9548 <fputs@plt+0x18c>
    96b0:	str	r4, [r9, #8]
    96b4:	b	9548 <fputs@plt+0x18c>
    96b8:	mov	r3, #1
    96bc:	str	r3, [fp, #4]
    96c0:	b	9548 <fputs@plt+0x18c>
    96c4:	mov	r3, #1
    96c8:	str	r3, [r9, #4]
    96cc:	b	9548 <fputs@plt+0x18c>
    96d0:	movw	r1, #13880	; 0x3638
    96d4:	movt	r1, #3
    96d8:	movw	r0, #22132	; 0x5674
    96dc:	movt	r0, #2
    96e0:	mov	r2, r1
    96e4:	mov	r3, r1
    96e8:	bl	1f768 <fputs@plt+0x163ac>
    96ec:	b	9548 <fputs@plt+0x18c>
    96f0:	bl	a124 <fputs@plt+0xd68>
    96f4:	ldr	ip, [sp, #8]
    96f8:	cmp	ip, r4
    96fc:	bne	97f0 <fputs@plt+0x434>
    9700:	ldr	ip, [sp, #12]
    9704:	cmp	ip, #0
    9708:	bne	97b4 <fputs@plt+0x3f8>
    970c:	bl	1dd54 <fputs@plt+0x14998>
    9710:	movw	r7, #2688	; 0xa80
    9714:	movt	r7, #3
    9718:	str	r0, [r7, #8]
    971c:	movw	r3, #1092	; 0x444
    9720:	movt	r3, #3
    9724:	ldr	r4, [r3]
    9728:	cmp	r6, r4
    972c:	subgt	r3, r4, #-1073741823	; 0xc0000001
    9730:	addgt	r5, r5, r3, lsl #2
    9734:	ble	97e0 <fputs@plt+0x424>
    9738:	add	r4, r4, #1
    973c:	ldr	r0, [r5, #4]!
    9740:	bl	13508 <fputs@plt+0xa14c>
    9744:	cmp	r4, r6
    9748:	bne	9738 <fputs@plt+0x37c>
    974c:	ldr	r0, [r7, #8]
    9750:	cmp	r0, #0
    9754:	beq	9764 <fputs@plt+0x3a8>
    9758:	ldr	r3, [r0]
    975c:	ldr	r3, [r3, #4]
    9760:	blx	r3
    9764:	movw	r4, #1484	; 0x5cc
    9768:	movt	r4, #3
    976c:	ldr	r0, [r4]
    9770:	bl	935c <ferror@plt>
    9774:	cmp	r0, #0
    9778:	beq	9810 <fputs@plt+0x454>
    977c:	movw	r1, #13880	; 0x3638
    9780:	movt	r1, #3
    9784:	movw	r0, #22228	; 0x56d4
    9788:	movt	r0, #2
    978c:	mov	r2, r1
    9790:	mov	r3, r1
    9794:	bl	1f768 <fputs@plt+0x163ac>
    9798:	ldr	r2, [sp, #36]	; 0x24
    979c:	ldr	r3, [r8]
    97a0:	ldr	r0, [r7, #16]
    97a4:	cmp	r2, r3
    97a8:	bne	9824 <fputs@plt+0x468>
    97ac:	add	sp, sp, #44	; 0x2c
    97b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    97b4:	bl	1eae8 <fputs@plt+0x1572c>
    97b8:	ldr	ip, [sp, #8]
    97bc:	movw	r7, #2688	; 0xa80
    97c0:	movw	r3, #1076	; 0x434
    97c4:	movt	r7, #3
    97c8:	movt	r3, #3
    97cc:	mov	r2, #92	; 0x5c
    97d0:	str	ip, [r3]
    97d4:	str	r2, [r3, #12]
    97d8:	str	r0, [r7, #8]
    97dc:	b	971c <fputs@plt+0x360>
    97e0:	movw	r0, #20988	; 0x51fc
    97e4:	movt	r0, #2
    97e8:	bl	13508 <fputs@plt+0xa14c>
    97ec:	b	974c <fputs@plt+0x390>
    97f0:	bl	1ee3c <fputs@plt+0x15a80>
    97f4:	movw	r7, #2688	; 0xa80
    97f8:	movw	r3, #1076	; 0x434
    97fc:	movt	r7, #3
    9800:	movt	r3, #3
    9804:	str	r4, [r3]
    9808:	str	r0, [r7, #8]
    980c:	b	971c <fputs@plt+0x360>
    9810:	ldr	r0, [r4]
    9814:	bl	91dc <fflush@plt>
    9818:	cmp	r0, #0
    981c:	bge	9798 <fputs@plt+0x3dc>
    9820:	b	977c <fputs@plt+0x3c0>
    9824:	bl	92b4 <__stack_chk_fail@plt>
    9828:	muleq	r3, r4, sl
    982c:	andeq	r5, r2, r4, lsl r5
    9830:	ldr	r0, [pc]	; 9838 <fputs@plt+0x47c>
    9834:	b	1f008 <fputs@plt+0x15c4c>
    9838:	muleq	r3, r8, sl
    983c:	ldr	r0, [pc]	; 9844 <fputs@plt+0x488>
    9840:	b	1f008 <fputs@plt+0x15c4c>
    9844:	andeq	r2, r3, ip, lsl fp
    9848:	movw	r0, #11040	; 0x2b20
    984c:	movt	r0, #3
    9850:	b	1f008 <fputs@plt+0x15c4c>
    9854:	movw	r0, #11044	; 0x2b24
    9858:	movt	r0, #3
    985c:	b	1f008 <fputs@plt+0x15c4c>
    9860:	movw	r0, #11048	; 0x2b28
    9864:	movt	r0, #3
    9868:	b	1f008 <fputs@plt+0x15c4c>
    986c:	ldr	r0, [pc]	; 9874 <fputs@plt+0x4b8>
    9870:	b	1f008 <fputs@plt+0x15c4c>
    9874:	andeq	r3, r3, r0, lsr r6
    9878:	movw	r3, #13880	; 0x3638
    987c:	movt	r3, #3
    9880:	mov	r2, #0
    9884:	str	r2, [r3]
    9888:	bx	lr
    988c:	movw	r0, #13992	; 0x36a8
    9890:	movt	r0, #3
    9894:	b	1f008 <fputs@plt+0x15c4c>
    9898:	mov	fp, #0
    989c:	mov	lr, #0
    98a0:	pop	{r1}		; (ldr r1, [sp], #4)
    98a4:	mov	r2, sp
    98a8:	push	{r2}		; (str r2, [sp, #-4]!)
    98ac:	push	{r0}		; (str r0, [sp, #-4]!)
    98b0:	ldr	ip, [pc, #16]	; 98c8 <fputs@plt+0x50c>
    98b4:	push	{ip}		; (str ip, [sp, #-4]!)
    98b8:	ldr	r0, [pc, #12]	; 98cc <fputs@plt+0x510>
    98bc:	ldr	r3, [pc, #12]	; 98d0 <fputs@plt+0x514>
    98c0:	bl	90e0 <__libc_start_main@plt>
    98c4:	bl	90bc <abort@plt>
    98c8:	muleq	r2, r0, r5
    98cc:	ldrdeq	r9, [r0], -r0
    98d0:	andeq	r1, r2, ip, lsr #10
    98d4:	ldr	r3, [pc, #20]	; 98f0 <fputs@plt+0x534>
    98d8:	ldr	r2, [pc, #20]	; 98f4 <fputs@plt+0x538>
    98dc:	add	r3, pc, r3
    98e0:	ldr	r2, [r3, r2]
    98e4:	cmp	r2, #0
    98e8:	bxeq	lr
    98ec:	b	9104 <__gmon_start__@plt>
    98f0:	andeq	r6, r2, ip, lsl r7
    98f4:	andeq	r0, r0, r4, lsl r1
    98f8:	push	{r3, lr}
    98fc:	movw	r0, #1372	; 0x55c
    9900:	ldr	r3, [pc, #36]	; 992c <fputs@plt+0x570>
    9904:	movt	r0, #3
    9908:	rsb	r3, r0, r3
    990c:	cmp	r3, #6
    9910:	popls	{r3, pc}
    9914:	movw	r3, #0
    9918:	movt	r3, #0
    991c:	cmp	r3, #0
    9920:	popeq	{r3, pc}
    9924:	blx	r3
    9928:	pop	{r3, pc}
    992c:	andeq	r0, r3, pc, asr r5
    9930:	push	{r3, lr}
    9934:	movw	r0, #1372	; 0x55c
    9938:	movw	r3, #1372	; 0x55c
    993c:	movt	r0, #3
    9940:	movt	r3, #3
    9944:	rsb	r3, r0, r3
    9948:	asr	r3, r3, #2
    994c:	add	r3, r3, r3, lsr #31
    9950:	asrs	r1, r3, #1
    9954:	popeq	{r3, pc}
    9958:	movw	r2, #0
    995c:	movt	r2, #0
    9960:	cmp	r2, #0
    9964:	popeq	{r3, pc}
    9968:	blx	r2
    996c:	pop	{r3, pc}
    9970:	push	{r4, lr}
    9974:	movw	r4, #1492	; 0x5d4
    9978:	movt	r4, #3
    997c:	ldrb	r3, [r4]
    9980:	cmp	r3, #0
    9984:	popne	{r4, pc}
    9988:	bl	98f8 <fputs@plt+0x53c>
    998c:	mov	r3, #1
    9990:	strb	r3, [r4]
    9994:	pop	{r4, pc}
    9998:	movw	r0, #65268	; 0xfef4
    999c:	movt	r0, #2
    99a0:	push	{r3, lr}
    99a4:	ldr	r3, [r0]
    99a8:	cmp	r3, #0
    99ac:	beq	99c4 <fputs@plt+0x608>
    99b0:	movw	r3, #0
    99b4:	movt	r3, #0
    99b8:	cmp	r3, #0
    99bc:	beq	99c4 <fputs@plt+0x608>
    99c0:	blx	r3
    99c4:	pop	{r3, lr}
    99c8:	b	9930 <fputs@plt+0x574>
    99cc:	andeq	r0, r0, r0
    99d0:	ldr	r3, [r0, #4]
    99d4:	push	{r4, r5, r6, lr}
    99d8:	cmp	r3, #0
    99dc:	mov	r5, r0
    99e0:	ldr	r3, [r0]
    99e4:	movne	r4, #0
    99e8:	beq	9a30 <fputs@plt+0x674>
    99ec:	ldr	r0, [r3, r4, lsl #3]
    99f0:	lsl	r6, r4, #3
    99f4:	add	r2, r3, r6
    99f8:	add	r4, r4, #1
    99fc:	cmp	r0, #0
    9a00:	beq	9a10 <fputs@plt+0x654>
    9a04:	bl	92f0 <_ZdaPv@plt>
    9a08:	ldr	r3, [r5]
    9a0c:	add	r2, r3, r6
    9a10:	ldr	r0, [r2, #4]
    9a14:	cmp	r0, #0
    9a18:	beq	9a24 <fputs@plt+0x668>
    9a1c:	bl	92f0 <_ZdaPv@plt>
    9a20:	ldr	r3, [r5]
    9a24:	ldr	r2, [r5, #4]
    9a28:	cmp	r2, r4
    9a2c:	bhi	99ec <fputs@plt+0x630>
    9a30:	cmp	r3, #0
    9a34:	beq	9a40 <fputs@plt+0x684>
    9a38:	mov	r0, r3
    9a3c:	bl	92f0 <_ZdaPv@plt>
    9a40:	mov	r0, r5
    9a44:	pop	{r4, r5, r6, pc}
    9a48:	mov	r2, #0
    9a4c:	str	r2, [r0]
    9a50:	str	r2, [r0, #4]
    9a54:	bx	lr
    9a58:	push	{r4, lr}
    9a5c:	mov	r4, r0
    9a60:	mov	r3, #17
    9a64:	mov	r0, #136	; 0x88
    9a68:	str	r3, [r4, #4]
    9a6c:	bl	9278 <_Znaj@plt>
    9a70:	mov	r2, #0
    9a74:	add	r3, r0, #8
    9a78:	add	ip, r0, #144	; 0x90
    9a7c:	str	r2, [r3, #-8]
    9a80:	add	r3, r3, #8
    9a84:	str	r2, [r3, #-12]
    9a88:	cmp	r3, ip
    9a8c:	mov	r1, #0
    9a90:	bne	9a7c <fputs@plt+0x6c0>
    9a94:	str	r0, [r4]
    9a98:	mov	r0, r4
    9a9c:	str	r1, [r4, #8]
    9aa0:	pop	{r4, pc}
    9aa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9aa8:	subs	r6, r1, #0
    9aac:	sub	sp, sp, #12
    9ab0:	mov	r8, r0
    9ab4:	str	r2, [sp]
    9ab8:	beq	9cc8 <fputs@plt+0x90c>
    9abc:	mov	r0, r6
    9ac0:	bl	209fc <_ZdlPv@@Base+0xc>
    9ac4:	ldr	r7, [r8, #4]
    9ac8:	mov	r1, r7
    9acc:	str	r0, [sp, #4]
    9ad0:	bl	9284 <__aeabi_uidivmod@plt>
    9ad4:	ldr	r9, [r8]
    9ad8:	mov	r4, r1
    9adc:	b	9af8 <fputs@plt+0x73c>
    9ae0:	bl	9380 <strcmp@plt>
    9ae4:	cmp	r0, #0
    9ae8:	beq	9b70 <fputs@plt+0x7b4>
    9aec:	cmp	r4, #0
    9af0:	sub	r4, r4, #1
    9af4:	subeq	r4, r7, #1
    9af8:	ldr	r5, [r9, r4, lsl #3]
    9afc:	lsl	sl, r4, #3
    9b00:	mov	r1, r6
    9b04:	add	fp, r9, sl
    9b08:	cmp	r5, #0
    9b0c:	mov	r0, r5
    9b10:	bne	9ae0 <fputs@plt+0x724>
    9b14:	ldr	r3, [sp]
    9b18:	cmp	r3, #0
    9b1c:	beq	9cdc <fputs@plt+0x920>
    9b20:	ldr	r1, [r8, #8]
    9b24:	cmp	r7, r1, lsl #2
    9b28:	bls	9ba0 <fputs@plt+0x7e4>
    9b2c:	mov	r0, r6
    9b30:	bl	9200 <strlen@plt>
    9b34:	add	r0, r0, #1
    9b38:	bl	9278 <_Znaj@plt>
    9b3c:	mov	r1, r6
    9b40:	bl	9248 <strcpy@plt>
    9b44:	ldr	r1, [r8]
    9b48:	ldr	r4, [r8, #8]
    9b4c:	add	ip, r1, sl
    9b50:	add	r3, r4, #1
    9b54:	mov	r2, r0
    9b58:	str	r2, [r1, sl]
    9b5c:	ldr	r2, [sp]
    9b60:	str	r2, [ip, #4]
    9b64:	str	r3, [r8, #8]
    9b68:	add	sp, sp, #12
    9b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9b70:	ldr	r0, [fp, #4]
    9b74:	cmp	r0, #0
    9b78:	beq	9b8c <fputs@plt+0x7d0>
    9b7c:	bl	92f0 <_ZdaPv@plt>
    9b80:	ldr	r2, [r8]
    9b84:	add	fp, r2, sl
    9b88:	ldr	r5, [r2, sl]
    9b8c:	ldr	r2, [sp]
    9b90:	mov	r0, r5
    9b94:	str	r2, [fp, #4]
    9b98:	add	sp, sp, #12
    9b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9ba0:	mov	r0, r7
    9ba4:	bl	20a48 <_ZdlPv@@Base+0x58>
    9ba8:	cmp	r0, #266338304	; 0xfe00000
    9bac:	mov	r4, r0
    9bb0:	str	r0, [r8, #4]
    9bb4:	lslls	r0, r0, #3
    9bb8:	mvnhi	r0, #0
    9bbc:	bl	9278 <_Znaj@plt>
    9bc0:	cmp	r4, #0
    9bc4:	movne	r1, #0
    9bc8:	addne	r3, r0, #8
    9bcc:	movne	ip, r1
    9bd0:	beq	9bec <fputs@plt+0x830>
    9bd4:	add	r1, r1, #1
    9bd8:	str	ip, [r3, #-8]
    9bdc:	cmp	r1, r4
    9be0:	str	ip, [r3, #-4]
    9be4:	add	r3, r3, #8
    9be8:	bne	9bd4 <fputs@plt+0x818>
    9bec:	cmp	r7, #0
    9bf0:	str	r0, [r8]
    9bf4:	moveq	r4, r0
    9bf8:	beq	9c7c <fputs@plt+0x8c0>
    9bfc:	mov	r4, #0
    9c00:	mov	fp, r4
    9c04:	ldr	r0, [r9, r4]
    9c08:	cmp	r0, #0
    9c0c:	beq	9c68 <fputs@plt+0x8ac>
    9c10:	add	sl, r9, r4
    9c14:	ldr	r3, [sl, #4]
    9c18:	cmp	r3, #0
    9c1c:	beq	9cc0 <fputs@plt+0x904>
    9c20:	bl	209fc <_ZdlPv@@Base+0xc>
    9c24:	ldr	r5, [r8, #4]
    9c28:	mov	r1, r5
    9c2c:	bl	9284 <__aeabi_uidivmod@plt>
    9c30:	mov	r3, r1
    9c34:	ldr	r1, [r8]
    9c38:	b	9c48 <fputs@plt+0x88c>
    9c3c:	cmp	r3, #0
    9c40:	sub	r3, r3, #1
    9c44:	subeq	r3, r5, #1
    9c48:	ldr	r0, [r1, r3, lsl #3]
    9c4c:	add	lr, r1, r3, lsl #3
    9c50:	cmp	r0, #0
    9c54:	bne	9c3c <fputs@plt+0x880>
    9c58:	ldr	r3, [r9, r4]
    9c5c:	str	r3, [lr]
    9c60:	ldr	r3, [sl, #4]
    9c64:	str	r3, [lr, #4]
    9c68:	add	fp, fp, #1
    9c6c:	add	r4, r4, #8
    9c70:	cmp	fp, r7
    9c74:	bne	9c04 <fputs@plt+0x848>
    9c78:	ldr	r4, [r8]
    9c7c:	ldr	r5, [r8, #4]
    9c80:	ldr	r0, [sp, #4]
    9c84:	mov	r1, r5
    9c88:	bl	9284 <__aeabi_uidivmod@plt>
    9c8c:	b	9c9c <fputs@plt+0x8e0>
    9c90:	cmp	r1, #0
    9c94:	sub	r1, r1, #1
    9c98:	subeq	r1, r5, #1
    9c9c:	ldr	r0, [r4, r1, lsl #3]
    9ca0:	lsl	sl, r1, #3
    9ca4:	cmp	r0, #0
    9ca8:	bne	9c90 <fputs@plt+0x8d4>
    9cac:	cmp	r9, #0
    9cb0:	beq	9b2c <fputs@plt+0x770>
    9cb4:	mov	r0, r9
    9cb8:	bl	92f0 <_ZdaPv@plt>
    9cbc:	b	9b2c <fputs@plt+0x770>
    9cc0:	bl	92f0 <_ZdaPv@plt>
    9cc4:	b	9c68 <fputs@plt+0x8ac>
    9cc8:	movw	r1, #18800	; 0x4970
    9ccc:	mov	r0, #49	; 0x31
    9cd0:	movt	r1, #2
    9cd4:	bl	1eec8 <fputs@plt+0x15b0c>
    9cd8:	b	9abc <fputs@plt+0x700>
    9cdc:	ldr	r0, [sp]
    9ce0:	b	9b68 <fputs@plt+0x7ac>
    9ce4:	push	{r4, r5, r6, r7, r8, lr}
    9ce8:	subs	r6, r1, #0
    9cec:	mov	r5, r0
    9cf0:	beq	9d50 <fputs@plt+0x994>
    9cf4:	mov	r0, r6
    9cf8:	bl	209fc <_ZdlPv@@Base+0xc>
    9cfc:	ldr	r8, [r5, #4]
    9d00:	mov	r1, r8
    9d04:	bl	9284 <__aeabi_uidivmod@plt>
    9d08:	ldr	r5, [r5]
    9d0c:	mov	r4, r1
    9d10:	b	9d2c <fputs@plt+0x970>
    9d14:	bl	9380 <strcmp@plt>
    9d18:	cmp	r0, #0
    9d1c:	beq	9d48 <fputs@plt+0x98c>
    9d20:	cmp	r4, #0
    9d24:	sub	r4, r4, #1
    9d28:	subeq	r4, r8, #1
    9d2c:	ldr	r3, [r5, r4, lsl #3]
    9d30:	mov	r1, r6
    9d34:	add	r7, r5, r4, lsl #3
    9d38:	cmp	r3, #0
    9d3c:	mov	r0, r3
    9d40:	bne	9d14 <fputs@plt+0x958>
    9d44:	pop	{r4, r5, r6, r7, r8, pc}
    9d48:	ldr	r0, [r7, #4]
    9d4c:	pop	{r4, r5, r6, r7, r8, pc}
    9d50:	movw	r1, #18800	; 0x4970
    9d54:	mov	r0, #49	; 0x31
    9d58:	movt	r1, #2
    9d5c:	bl	1eec8 <fputs@plt+0x15b0c>
    9d60:	b	9cf4 <fputs@plt+0x938>
    9d64:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9d68:	mov	fp, r1
    9d6c:	ldr	r6, [r1]
    9d70:	mov	sl, r0
    9d74:	cmp	r6, #0
    9d78:	beq	9de4 <fputs@plt+0xa28>
    9d7c:	mov	r0, r6
    9d80:	bl	209fc <_ZdlPv@@Base+0xc>
    9d84:	ldr	r9, [sl, #4]
    9d88:	mov	r1, r9
    9d8c:	bl	9284 <__aeabi_uidivmod@plt>
    9d90:	ldr	r7, [sl]
    9d94:	mov	r4, r1
    9d98:	b	9db4 <fputs@plt+0x9f8>
    9d9c:	bl	9380 <strcmp@plt>
    9da0:	cmp	r0, #0
    9da4:	beq	9dd0 <fputs@plt+0xa14>
    9da8:	cmp	r4, #0
    9dac:	sub	r4, r4, #1
    9db0:	subeq	r4, r9, #1
    9db4:	ldr	r5, [r7, r4, lsl #3]
    9db8:	mov	r1, r6
    9dbc:	lsl	r8, r4, #3
    9dc0:	cmp	r5, #0
    9dc4:	mov	r0, r5
    9dc8:	bne	9d9c <fputs@plt+0x9e0>
    9dcc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9dd0:	str	r5, [fp]
    9dd4:	ldr	r3, [sl]
    9dd8:	add	r8, r3, r8
    9ddc:	ldr	r0, [r8, #4]
    9de0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9de4:	movw	r1, #18800	; 0x4970
    9de8:	mov	r0, #49	; 0x31
    9dec:	movt	r1, #2
    9df0:	bl	1eec8 <fputs@plt+0x15b0c>
    9df4:	b	9d7c <fputs@plt+0x9c0>
    9df8:	mov	r2, #0
    9dfc:	stm	r0, {r1, r2}
    9e00:	bx	lr
    9e04:	ldr	ip, [r0]
    9e08:	push	{r4, r5, r6, r7}
    9e0c:	ldr	r3, [r0, #4]
    9e10:	ldm	ip, {r6, r7}
    9e14:	cmp	r7, r3
    9e18:	bls	9e5c <fputs@plt+0xaa0>
    9e1c:	ldr	r5, [r6, r3, lsl #3]
    9e20:	add	r6, r6, r3, lsl #3
    9e24:	cmp	r5, #0
    9e28:	moveq	ip, r6
    9e2c:	beq	9e44 <fputs@plt+0xa88>
    9e30:	b	9e6c <fputs@plt+0xab0>
    9e34:	ldr	r5, [ip, #8]
    9e38:	mov	ip, r4
    9e3c:	cmp	r5, #0
    9e40:	bne	9e6c <fputs@plt+0xab0>
    9e44:	add	r3, r3, #1
    9e48:	add	r4, ip, #8
    9e4c:	cmp	r7, r3
    9e50:	mov	r6, r4
    9e54:	bhi	9e34 <fputs@plt+0xa78>
    9e58:	str	r3, [r0, #4]
    9e5c:	mov	r1, #0
    9e60:	mov	r0, r1
    9e64:	pop	{r4, r5, r6, r7}
    9e68:	bx	lr
    9e6c:	str	r5, [r1]
    9e70:	mov	r1, #1
    9e74:	ldr	ip, [r6, #4]
    9e78:	add	r3, r3, #1
    9e7c:	pop	{r4, r5, r6, r7}
    9e80:	str	ip, [r2]
    9e84:	str	r3, [r0, #4]
    9e88:	mov	r0, r1
    9e8c:	bx	lr
    9e90:	push	{r3, r4, r5, lr}
    9e94:	movw	r2, #1496	; 0x5d8
    9e98:	movw	r3, #284	; 0x11c
    9e9c:	movt	r2, #3
    9ea0:	movt	r3, #3
    9ea4:	mov	r5, r0
    9ea8:	ldr	r4, [r2]
    9eac:	ldr	r0, [r3]
    9eb0:	b	9ebc <fputs@plt+0xb00>
    9eb4:	ldr	r0, [r4, #28]
    9eb8:	ldr	r4, [r4, #24]
    9ebc:	mov	r1, r5
    9ec0:	bl	9ce4 <fputs@plt+0x928>
    9ec4:	cmp	r0, #0
    9ec8:	popne	{r3, r4, r5, pc}
    9ecc:	cmp	r4, #0
    9ed0:	bne	9eb4 <fputs@plt+0xaf8>
    9ed4:	mov	r0, r4
    9ed8:	pop	{r3, r4, r5, pc}
    9edc:	push	{r3, r4, r5, r6, r7, lr}
    9ee0:	mov	r7, r0
    9ee4:	mov	r0, #24
    9ee8:	mov	r4, r1
    9eec:	bl	9278 <_Znaj@plt>
    9ef0:	movw	r5, #284	; 0x11c
    9ef4:	movt	r5, #3
    9ef8:	mov	r6, r0
    9efc:	mov	ip, r0
    9f00:	ldm	r4!, {r0, r1, r2, r3}
    9f04:	stmia	ip!, {r0, r1, r2, r3}
    9f08:	mov	r2, r6
    9f0c:	ldm	r4, {r0, r1}
    9f10:	stm	ip, {r0, r1}
    9f14:	mov	r1, r7
    9f18:	ldr	r0, [r5]
    9f1c:	pop	{r3, r4, r5, r6, r7, lr}
    9f20:	b	9aa4 <fputs@plt+0x6e8>
    9f24:	push	{r4, lr}
    9f28:	mov	r4, r1
    9f2c:	bl	9e90 <fputs@plt+0xad4>
    9f30:	cmp	r0, #0
    9f34:	ldrdne	r2, [r0, #8]
    9f38:	movne	r0, #1
    9f3c:	strdne	r2, [r4]
    9f40:	pop	{r4, pc}
    9f44:	push	{r4, r5, r6, lr}
    9f48:	vpush	{d8}
    9f4c:	mov	r6, r0
    9f50:	mov	r0, #24
    9f54:	vmov.f64	d8, d0
    9f58:	bl	9278 <_Znaj@plt>
    9f5c:	movw	ip, #284	; 0x11c
    9f60:	movt	ip, #3
    9f64:	mov	r2, #0
    9f68:	mov	r1, r6
    9f6c:	mov	r4, #0
    9f70:	mov	r5, #0
    9f74:	mov	r3, r0
    9f78:	str	r2, [r0]
    9f7c:	strd	r4, [r0, #16]
    9f80:	mov	r2, r0
    9f84:	vstr	d8, [r3, #8]
    9f88:	ldr	r0, [ip]
    9f8c:	bl	9aa4 <fputs@plt+0x6e8>
    9f90:	mov	r0, r6
    9f94:	movw	r1, #18808	; 0x4978
    9f98:	movt	r1, #2
    9f9c:	bl	9380 <strcmp@plt>
    9fa0:	cmp	r0, #0
    9fa4:	bne	9fe8 <fputs@plt+0xc2c>
    9fa8:	ldr	r4, [pc, #64]	; 9ff0 <fputs@plt+0xc34>
    9fac:	add	r5, r4, #528	; 0x210
    9fb0:	b	9fc0 <fputs@plt+0xc04>
    9fb4:	add	r4, r4, #24
    9fb8:	cmp	r4, r5
    9fbc:	beq	9fe8 <fputs@plt+0xc2c>
    9fc0:	ldr	r3, [r4]
    9fc4:	cmp	r3, #0
    9fc8:	beq	9fb4 <fputs@plt+0xbf8>
    9fcc:	vldr	d0, [r4, #-8]
    9fd0:	ldr	r0, [r4, #-16]
    9fd4:	vmul.f64	d0, d8, d0
    9fd8:	add	r4, r4, #24
    9fdc:	bl	9f44 <fputs@plt+0xb88>
    9fe0:	cmp	r4, r5
    9fe4:	bne	9fc0 <fputs@plt+0xc04>
    9fe8:	vpop	{d8}
    9fec:	pop	{r4, r5, r6, pc}
    9ff0:			; <UNDEFINED> instruction: 0x000215b8
    9ff4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9ff8:	vpush	{d8-d9}
    9ffc:	movw	sl, #1424	; 0x590
    a000:	movt	sl, #3
    a004:	sub	sp, sp, #24
    a008:	mov	r4, #0
    a00c:	movw	r8, #5544	; 0x15a8
    a010:	ldr	r3, [sl]
    a014:	movt	r8, #2
    a018:	mov	r9, r0
    a01c:	mov	r6, r4
    a020:	str	r3, [sp, #20]
    a024:	ldr	r7, [r8, r4]
    a028:	mov	r0, r9
    a02c:	movw	r5, #5544	; 0x15a8
    a030:	movt	r5, #2
    a034:	mov	r1, r7
    a038:	bl	9380 <strcmp@plt>
    a03c:	cmp	r0, #0
    a040:	beq	a098 <fputs@plt+0xcdc>
    a044:	add	r6, r6, #1
    a048:	add	r4, r4, #24
    a04c:	cmp	r6, #22
    a050:	bne	a024 <fputs@plt+0xc68>
    a054:	mov	r1, r9
    a058:	mov	r0, sp
    a05c:	bl	1f264 <fputs@plt+0x15ea8>
    a060:	movw	r2, #13880	; 0x3638
    a064:	movt	r2, #3
    a068:	movw	r0, #18816	; 0x4980
    a06c:	mov	r1, sp
    a070:	movt	r0, #2
    a074:	mov	r3, r2
    a078:	bl	1024c <fputs@plt+0x6e90>
    a07c:	ldr	r2, [sp, #20]
    a080:	ldr	r3, [sl]
    a084:	cmp	r2, r3
    a088:	bne	a0d8 <fputs@plt+0xd1c>
    a08c:	add	sp, sp, #24
    a090:	vpop	{d8-d9}
    a094:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    a098:	add	r6, r6, r6, lsl #1
    a09c:	add	r5, r5, r6, lsl #3
    a0a0:	vldr	d8, [r5, #8]
    a0a4:	ldr	r3, [r5, #16]
    a0a8:	cmp	r3, #0
    a0ac:	beq	a0c8 <fputs@plt+0xd0c>
    a0b0:	movw	r0, #18808	; 0x4978
    a0b4:	movt	r0, #2
    a0b8:	bl	9e90 <fputs@plt+0xad4>
    a0bc:	cmp	r0, #0
    a0c0:	vldrne	d9, [r0, #8]
    a0c4:	vmul.f64	d8, d8, d9
    a0c8:	mov	r0, r7
    a0cc:	vmov.f64	d0, d8
    a0d0:	bl	9f44 <fputs@plt+0xb88>
    a0d4:	b	a07c <fputs@plt+0xcc0>
    a0d8:	bl	92b4 <__stack_chk_fail@plt>
    a0dc:	push	{r3, r4, r5, lr}
    a0e0:	ldr	r4, [pc, #56]	; a120 <fputs@plt+0xd64>
    a0e4:	add	r5, r4, #528	; 0x210
    a0e8:	b	a0f8 <fputs@plt+0xd3c>
    a0ec:	add	r4, r4, #24
    a0f0:	cmp	r4, r5
    a0f4:	beq	a11c <fputs@plt+0xd60>
    a0f8:	ldr	r3, [r4]
    a0fc:	cmp	r3, #0
    a100:	bne	a0ec <fputs@plt+0xd30>
    a104:	ldr	r0, [r4, #-16]
    a108:	vldr	d0, [r4, #-8]
    a10c:	add	r4, r4, #24
    a110:	bl	9f44 <fputs@plt+0xb88>
    a114:	cmp	r4, r5
    a118:	bne	a0f8 <fputs@plt+0xd3c>
    a11c:	pop	{r3, r4, r5, pc}
    a120:			; <UNDEFINED> instruction: 0x000215b8
    a124:	movw	r1, #1496	; 0x5d8
    a128:	movt	r1, #3
    a12c:	mov	r2, #0
    a130:	mov	r3, #0
    a134:	mov	r0, #0
    a138:	strd	r2, [r1, #8]
    a13c:	str	r0, [r1, #4]
    a140:	strd	r2, [r1, #16]
    a144:	b	a0dc <fputs@plt+0xd20>
    a148:	push	{r4, r5, r6, r7, r8, r9, lr}
    a14c:	movw	r5, #1496	; 0x5d8
    a150:	movt	r5, #3
    a154:	movw	r6, #284	; 0x11c
    a158:	sub	sp, sp, #20
    a15c:	movt	r6, #3
    a160:	ldr	r3, [r5]
    a164:	cmp	r3, #0
    a168:	beq	a1b0 <fputs@plt+0xdf4>
    a16c:	ldr	r4, [r6]
    a170:	cmp	r4, #0
    a174:	mov	r0, r4
    a178:	beq	a188 <fputs@plt+0xdcc>
    a17c:	bl	99d0 <fputs@plt+0x614>
    a180:	mov	r0, r4
    a184:	bl	209f0 <_ZdlPv@@Base>
    a188:	ldr	r3, [r5]
    a18c:	ldr	r2, [r3, #28]
    a190:	mov	r0, r3
    a194:	ldr	r3, [r3, #24]
    a198:	str	r2, [r6]
    a19c:	str	r3, [r5]
    a1a0:	bl	209f0 <_ZdlPv@@Base>
    a1a4:	ldr	r3, [r5]
    a1a8:	cmp	r3, #0
    a1ac:	bne	a16c <fputs@plt+0xdb0>
    a1b0:	ldr	r9, [r6]
    a1b4:	movw	r4, #284	; 0x11c
    a1b8:	ldr	r3, [pc, #248]	; a2b8 <fputs@plt+0xefc>
    a1bc:	movt	r4, #3
    a1c0:	cmp	r9, r3
    a1c4:	beq	a1dc <fputs@plt+0xe20>
    a1c8:	movw	r1, #18800	; 0x4970
    a1cc:	movw	r0, #1817	; 0x719
    a1d0:	movt	r1, #2
    a1d4:	bl	1eec8 <fputs@plt+0x15b0c>
    a1d8:	ldr	r9, [r4]
    a1dc:	ldr	ip, [r9, #4]
    a1e0:	mov	r4, #0
    a1e4:	ldr	r8, [r9]
    a1e8:	mov	r6, r4
    a1ec:	cmp	r4, ip
    a1f0:	bcs	a24c <fputs@plt+0xe90>
    a1f4:	ldr	r3, [r8, r4, lsl #3]
    a1f8:	add	r0, r8, r4, lsl #3
    a1fc:	cmp	r3, #0
    a200:	moveq	r3, r0
    a204:	beq	a21c <fputs@plt+0xe60>
    a208:	b	a27c <fputs@plt+0xec0>
    a20c:	ldr	r1, [r3, #8]
    a210:	mov	r3, r2
    a214:	cmp	r1, #0
    a218:	bne	a27c <fputs@plt+0xec0>
    a21c:	add	r4, r4, #1
    a220:	add	r2, r3, #8
    a224:	cmp	r4, ip
    a228:	mov	r0, r2
    a22c:	bcc	a20c <fputs@plt+0xe50>
    a230:	b	a24c <fputs@plt+0xe90>
    a234:	ldr	r2, [r3, #8]
    a238:	mov	r0, r3
    a23c:	ldr	r3, [r3]
    a240:	str	r2, [r5, #36]	; 0x24
    a244:	ldr	r3, [r3, #4]
    a248:	blx	r3
    a24c:	ldr	r3, [r5, #36]	; 0x24
    a250:	cmp	r3, #0
    a254:	bne	a234 <fputs@plt+0xe78>
    a258:	mov	r1, #0
    a25c:	mov	r2, #0
    a260:	mov	r3, #0
    a264:	str	r1, [r5, #40]	; 0x28
    a268:	strd	r2, [r5, #8]
    a26c:	str	r1, [r5, #4]
    a270:	strd	r2, [r5, #16]
    a274:	add	sp, sp, #20
    a278:	pop	{r4, r5, r6, r7, r8, r9, pc}
    a27c:	ldr	r7, [r0, #4]
    a280:	add	r4, r4, #1
    a284:	ldr	r0, [r7]
    a288:	cmp	r0, #0
    a28c:	beq	a1ec <fputs@plt+0xe30>
    a290:	ldr	r3, [r0]
    a294:	ldr	r3, [r3, #8]
    a298:	blx	r3
    a29c:	ldm	r9, {r8, ip}
    a2a0:	str	r6, [r7]
    a2a4:	vstr	d0, [sp]
    a2a8:	vstr	d0, [r7, #8]
    a2ac:	vstr	d1, [sp, #8]
    a2b0:	vstr	d1, [r7, #16]
    a2b4:	b	a1ec <fputs@plt+0xe30>
    a2b8:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
    a2bc:	sub	r3, r0, #10
    a2c0:	cmp	r3, #10
    a2c4:	bls	a314 <fputs@plt+0xf58>
    a2c8:	movw	r2, #26215	; 0x6667
    a2cc:	movt	r2, #26214	; 0x6666
    a2d0:	asr	r1, r0, #31
    a2d4:	smull	ip, r3, r2, r0
    a2d8:	rsb	r3, r1, r3, asr #2
    a2dc:	add	r3, r3, r3, lsl #2
    a2e0:	sub	r0, r0, r3, lsl #1
    a2e4:	cmp	r0, #2
    a2e8:	beq	a320 <fputs@plt+0xf64>
    a2ec:	cmp	r0, #3
    a2f0:	beq	a32c <fputs@plt+0xf70>
    a2f4:	cmp	r0, #1
    a2f8:	movw	r2, #18852	; 0x49a4
    a2fc:	movw	r3, #20604	; 0x507c
    a300:	movt	r2, #2
    a304:	movt	r3, #2
    a308:	moveq	r0, r2
    a30c:	movne	r0, r3
    a310:	bx	lr
    a314:	movw	r0, #20604	; 0x507c
    a318:	movt	r0, #2
    a31c:	bx	lr
    a320:	movw	r0, #18856	; 0x49a8
    a324:	movt	r0, #2
    a328:	bx	lr
    a32c:	movw	r0, #18860	; 0x49ac
    a330:	movt	r0, #2
    a334:	bx	lr
    a338:	sub	r0, r0, #1
    a33c:	cmp	r0, #9
    a340:	movwls	r3, #5544	; 0x15a8
    a344:	movtls	r3, #2
    a348:	addls	r0, r3, r0, lsl #2
    a34c:	ldrls	r0, [r0, #528]	; 0x210
    a350:	movwhi	r0, #18864	; 0x49b0
    a354:	movthi	r0, #2
    a358:	bx	lr
    a35c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a360:	movw	r3, #1424	; 0x590
    a364:	sub	sp, sp, #60	; 0x3c
    a368:	movt	r3, #3
    a36c:	mov	r6, r0
    a370:	add	r0, sp, #28
    a374:	str	r3, [sp, #20]
    a378:	mov	fp, r1
    a37c:	ldr	r3, [r3]
    a380:	mov	sl, r2
    a384:	str	r3, [sp, #52]	; 0x34
    a388:	bl	20b8c <_ZdlPv@@Base+0x19c>
    a38c:	add	r0, sp, #40	; 0x28
    a390:	bl	20b8c <_ZdlPv@@Base+0x19c>
    a394:	mov	r7, #0
    a398:	mov	r8, #37	; 0x25
    a39c:	mov	r9, r7
    a3a0:	ldrb	r4, [r6]
    a3a4:	cmp	r4, #0
    a3a8:	beq	a3e4 <fputs@plt+0x1028>
    a3ac:	cmp	r4, #37	; 0x25
    a3b0:	beq	a454 <fputs@plt+0x1098>
    a3b4:	ldr	r3, [sp, #32]
    a3b8:	add	r6, r6, #1
    a3bc:	ldr	r2, [sp, #36]	; 0x24
    a3c0:	cmp	r3, r2
    a3c4:	bge	a444 <fputs@plt+0x1088>
    a3c8:	ldr	r2, [sp, #28]
    a3cc:	add	r1, r3, #1
    a3d0:	str	r1, [sp, #32]
    a3d4:	strb	r4, [r2, r3]
    a3d8:	ldrb	r4, [r6]
    a3dc:	cmp	r4, #0
    a3e0:	bne	a3ac <fputs@plt+0xff0>
    a3e4:	ldr	r3, [sp, #32]
    a3e8:	ldr	r2, [sp, #36]	; 0x24
    a3ec:	cmp	r3, r2
    a3f0:	bge	a61c <fputs@plt+0x1260>
    a3f4:	ldr	r2, [sp, #28]
    a3f8:	add	r0, r3, #1
    a3fc:	mov	r1, #0
    a400:	str	r0, [sp, #32]
    a404:	strb	r1, [r2, r3]
    a408:	ldr	r0, [sp, #28]
    a40c:	bl	214b4 <_ZdlPv@@Base+0xac4>
    a410:	mov	r4, r0
    a414:	add	r0, sp, #40	; 0x28
    a418:	bl	20cf0 <_ZdlPv@@Base+0x300>
    a41c:	add	r0, sp, #28
    a420:	bl	20cf0 <_ZdlPv@@Base+0x300>
    a424:	ldr	ip, [sp, #20]
    a428:	ldr	r2, [sp, #52]	; 0x34
    a42c:	mov	r0, r4
    a430:	ldr	r3, [ip]
    a434:	cmp	r2, r3
    a438:	bne	a6bc <fputs@plt+0x1300>
    a43c:	add	sp, sp, #60	; 0x3c
    a440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a444:	add	r0, sp, #28
    a448:	bl	20e3c <_ZdlPv@@Base+0x44c>
    a44c:	ldr	r3, [sp, #32]
    a450:	b	a3c8 <fputs@plt+0x100c>
    a454:	ldr	r3, [sp, #44]	; 0x2c
    a458:	add	r5, r6, #1
    a45c:	ldr	r2, [sp, #48]	; 0x30
    a460:	cmp	r3, r2
    a464:	bge	a58c <fputs@plt+0x11d0>
    a468:	ldr	r2, [sp, #40]	; 0x28
    a46c:	add	r1, r3, #1
    a470:	str	r1, [sp, #44]	; 0x2c
    a474:	strb	r8, [r2, r3]
    a478:	ldrb	r4, [r6, #1]
    a47c:	cmp	r4, #0
    a480:	bne	a4a4 <fputs@plt+0x10e8>
    a484:	b	a64c <fputs@plt+0x1290>
    a488:	ldr	r2, [sp, #40]	; 0x28
    a48c:	add	r1, r3, #1
    a490:	str	r1, [sp, #44]	; 0x2c
    a494:	strb	r4, [r2, r3]
    a498:	ldrb	r4, [r5, #1]!
    a49c:	cmp	r4, #0
    a4a0:	beq	a64c <fputs@plt+0x1290>
    a4a4:	movw	r0, #18872	; 0x49b8
    a4a8:	mov	r1, r4
    a4ac:	movt	r0, #2
    a4b0:	bl	9164 <strchr@plt>
    a4b4:	cmp	r0, #0
    a4b8:	beq	a4dc <fputs@plt+0x1120>
    a4bc:	ldr	r3, [sp, #44]	; 0x2c
    a4c0:	ldr	r2, [sp, #48]	; 0x30
    a4c4:	cmp	r3, r2
    a4c8:	blt	a488 <fputs@plt+0x10cc>
    a4cc:	add	r0, sp, #40	; 0x28
    a4d0:	bl	20e3c <_ZdlPv@@Base+0x44c>
    a4d4:	ldr	r3, [sp, #44]	; 0x2c
    a4d8:	b	a488 <fputs@plt+0x10cc>
    a4dc:	movw	r0, #18944	; 0x4a00
    a4e0:	mov	r1, r4
    a4e4:	movt	r0, #2
    a4e8:	bl	9164 <strchr@plt>
    a4ec:	cmp	r0, #0
    a4f0:	beq	a64c <fputs@plt+0x1290>
    a4f4:	cmp	r4, #37	; 0x25
    a4f8:	beq	a5bc <fputs@plt+0x1200>
    a4fc:	cmp	r7, sl
    a500:	bge	a684 <fputs@plt+0x12c8>
    a504:	ldr	r3, [sp, #44]	; 0x2c
    a508:	add	r6, r5, #1
    a50c:	ldr	r2, [sp, #48]	; 0x30
    a510:	cmp	r3, r2
    a514:	bge	a5ac <fputs@plt+0x11f0>
    a518:	ldr	r2, [sp, #40]	; 0x28
    a51c:	add	r1, r3, #1
    a520:	str	r1, [sp, #44]	; 0x2c
    a524:	strb	r4, [r2, r3]
    a528:	ldr	r3, [sp, #44]	; 0x2c
    a52c:	ldr	r2, [sp, #48]	; 0x30
    a530:	cmp	r3, r2
    a534:	bge	a59c <fputs@plt+0x11e0>
    a538:	ldr	r0, [sp, #40]	; 0x28
    a53c:	add	r2, r3, #1
    a540:	str	r2, [sp, #44]	; 0x2c
    a544:	add	r2, fp, r7, lsl #3
    a548:	mov	r1, #1024	; 0x400
    a54c:	add	r7, r7, #1
    a550:	strb	r9, [r0, r3]
    a554:	mov	r3, r1
    a558:	ldrd	r4, [r2]
    a55c:	mov	r2, #1
    a560:	ldr	ip, [sp, #40]	; 0x28
    a564:	ldr	r0, [pc, #340]	; a6c0 <fputs@plt+0x1304>
    a568:	strd	r4, [sp, #8]
    a56c:	str	ip, [sp]
    a570:	bl	9260 <__snprintf_chk@plt>
    a574:	add	r0, sp, #40	; 0x28
    a578:	bl	21274 <_ZdlPv@@Base+0x884>
    a57c:	add	r0, sp, #28
    a580:	ldr	r1, [pc, #312]	; a6c0 <fputs@plt+0x1304>
    a584:	bl	20e70 <_ZdlPv@@Base+0x480>
    a588:	b	a3a0 <fputs@plt+0xfe4>
    a58c:	add	r0, sp, #40	; 0x28
    a590:	bl	20e3c <_ZdlPv@@Base+0x44c>
    a594:	ldr	r3, [sp, #44]	; 0x2c
    a598:	b	a468 <fputs@plt+0x10ac>
    a59c:	add	r0, sp, #40	; 0x28
    a5a0:	bl	20e3c <_ZdlPv@@Base+0x44c>
    a5a4:	ldr	r3, [sp, #44]	; 0x2c
    a5a8:	b	a538 <fputs@plt+0x117c>
    a5ac:	add	r0, sp, #40	; 0x28
    a5b0:	bl	20e3c <_ZdlPv@@Base+0x44c>
    a5b4:	ldr	r3, [sp, #44]	; 0x2c
    a5b8:	b	a518 <fputs@plt+0x115c>
    a5bc:	ldr	r3, [sp, #44]	; 0x2c
    a5c0:	add	r6, r5, #1
    a5c4:	ldr	r2, [sp, #48]	; 0x30
    a5c8:	cmp	r3, r2
    a5cc:	bge	a63c <fputs@plt+0x1280>
    a5d0:	ldr	r2, [sp, #40]	; 0x28
    a5d4:	add	r1, r3, #1
    a5d8:	str	r1, [sp, #44]	; 0x2c
    a5dc:	strb	r8, [r2, r3]
    a5e0:	ldr	r3, [sp, #44]	; 0x2c
    a5e4:	ldr	r2, [sp, #48]	; 0x30
    a5e8:	cmp	r3, r2
    a5ec:	bge	a62c <fputs@plt+0x1270>
    a5f0:	ldr	r1, [sp, #40]	; 0x28
    a5f4:	add	r2, r3, #1
    a5f8:	str	r2, [sp, #44]	; 0x2c
    a5fc:	movw	r2, #18908	; 0x49dc
    a600:	ldr	r0, [pc, #184]	; a6c0 <fputs@plt+0x1304>
    a604:	movt	r2, #2
    a608:	strb	r9, [r1, r3]
    a60c:	mov	r1, #1024	; 0x400
    a610:	ldr	r3, [sp, #40]	; 0x28
    a614:	bl	932c <snprintf@plt>
    a618:	b	a574 <fputs@plt+0x11b8>
    a61c:	add	r0, sp, #28
    a620:	bl	20e3c <_ZdlPv@@Base+0x44c>
    a624:	ldr	r3, [sp, #32]
    a628:	b	a3f4 <fputs@plt+0x1038>
    a62c:	add	r0, sp, #40	; 0x28
    a630:	bl	20e3c <_ZdlPv@@Base+0x44c>
    a634:	ldr	r3, [sp, #44]	; 0x2c
    a638:	b	a5f0 <fputs@plt+0x1234>
    a63c:	add	r0, sp, #40	; 0x28
    a640:	bl	20e3c <_ZdlPv@@Base+0x44c>
    a644:	ldr	r3, [sp, #44]	; 0x2c
    a648:	b	a5d0 <fputs@plt+0x1214>
    a64c:	movw	r1, #13880	; 0x3638
    a650:	movt	r1, #3
    a654:	movw	r0, #18888	; 0x49c8
    a658:	movt	r0, #2
    a65c:	mov	r2, r1
    a660:	mov	r3, r1
    a664:	bl	1024c <fputs@plt+0x6e90>
    a668:	add	r0, sp, #28
    a66c:	add	r1, sp, #40	; 0x28
    a670:	bl	20ee8 <_ZdlPv@@Base+0x4f8>
    a674:	add	r0, sp, #28
    a678:	mov	r1, r5
    a67c:	bl	20e70 <_ZdlPv@@Base+0x480>
    a680:	b	a3e4 <fputs@plt+0x1028>
    a684:	movw	r1, #13880	; 0x3638
    a688:	movt	r1, #3
    a68c:	movw	r0, #18912	; 0x49e0
    a690:	movt	r0, #2
    a694:	mov	r2, r1
    a698:	mov	r3, r1
    a69c:	bl	1024c <fputs@plt+0x6e90>
    a6a0:	b	a668 <fputs@plt+0x12ac>
    a6a4:	add	r0, sp, #40	; 0x28
    a6a8:	bl	20cf0 <_ZdlPv@@Base+0x300>
    a6ac:	add	r0, sp, #28
    a6b0:	bl	20cf0 <_ZdlPv@@Base+0x300>
    a6b4:	bl	9188 <__cxa_end_cleanup@plt>
    a6b8:	b	a6ac <fputs@plt+0x12f0>
    a6bc:	bl	92b4 <__stack_chk_fail@plt>
    a6c0:	andeq	r0, r3, r4, lsl #12
    a6c4:	push	{lr}		; (str lr, [sp, #-4]!)
    a6c8:	cmp	r0, #0
    a6cc:	sub	sp, sp, #12
    a6d0:	movw	r3, #19012	; 0x4a44
    a6d4:	movt	r3, #2
    a6d8:	add	r1, sp, #8
    a6dc:	mov	r2, #1
    a6e0:	vstmdb	r1!, {d0}
    a6e4:	moveq	r0, r3
    a6e8:	mov	r1, sp
    a6ec:	bl	a35c <fputs@plt+0xfa0>
    a6f0:	add	sp, sp, #12
    a6f4:	pop	{pc}		; (ldr pc, [sp], #4)
    a6f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a6fc:	vpush	{d8-d10}
    a700:	movw	r0, #1424	; 0x590
    a704:	vldr	d8, [pc, #532]	; a920 <fputs@plt+0x1564>
    a708:	movt	r0, #3
    a70c:	sub	sp, sp, #5440	; 0x1540
    a710:	sub	sp, sp, #4
    a714:	movw	ip, #1496	; 0x5d8
    a718:	ldr	r2, [r0]
    a71c:	add	r9, sp, #232	; 0xe8
    a720:	movt	ip, #3
    a724:	str	r0, [sp, #48]	; 0x30
    a728:	movw	r8, #5544	; 0x15a8
    a72c:	add	r0, sp, #8192	; 0x2000
    a730:	movt	r8, #2
    a734:	add	r3, sp, #232	; 0xe8
    a738:	mov	fp, r9
    a73c:	str	r3, [sp, #24]
    a740:	mov	r3, #0
    a744:	add	sl, sp, #632	; 0x278
    a748:	str	r3, [sp, #52]	; 0x34
    a74c:	mov	r6, r3
    a750:	str	r2, [r0, #-2756]	; 0xfffff53c
    a754:	movw	r1, #43691	; 0xaaab
    a758:	mvn	r2, #1
    a75c:	str	r3, [ip, #1068]	; 0x42c
    a760:	str	r2, [ip, #1072]	; 0x430
    a764:	movt	r1, #43690	; 0xaaaa
    a768:	movw	r2, #26215	; 0x6667
    a76c:	mov	r3, #200	; 0xc8
    a770:	movt	r2, #26214	; 0x6666
    a774:	str	ip, [sp, #32]
    a778:	str	sl, [sp, #56]	; 0x38
    a77c:	vldr	d10, [pc, #420]	; a928 <fputs@plt+0x156c>
    a780:	str	r1, [sp, #60]	; 0x3c
    a784:	vldr	d9, [pc, #420]	; a930 <fputs@plt+0x1574>
    a788:	str	r3, [sp, #36]	; 0x24
    a78c:	str	r2, [sp, #68]	; 0x44
    a790:	ldr	ip, [sp, #36]	; 0x24
    a794:	strh	r6, [r9]
    a798:	sub	r3, ip, #-2147483647	; 0x80000001
    a79c:	lsl	r3, r3, #1
    a7a0:	add	r2, fp, r3
    a7a4:	cmp	r9, r2
    a7a8:	bcc	a874 <fputs@plt+0x14b8>
    a7ac:	rsb	sl, fp, r9
    a7b0:	movw	r2, #9999	; 0x270f
    a7b4:	cmp	ip, r2
    a7b8:	asr	sl, sl, #1
    a7bc:	add	sl, sl, #1
    a7c0:	bhi	dda0 <fputs@plt+0x49e4>
    a7c4:	add	r2, r2, #1
    a7c8:	add	r3, r3, #2
    a7cc:	cmp	r3, r2
    a7d0:	movcs	r3, r2
    a7d4:	mov	r0, #26
    a7d8:	str	r3, [sp, #36]	; 0x24
    a7dc:	mul	r0, r0, r3
    a7e0:	add	r0, r0, #23
    a7e4:	bl	92a8 <malloc@plt>
    a7e8:	subs	r4, r0, #0
    a7ec:	beq	dda0 <fputs@plt+0x49e4>
    a7f0:	ldr	lr, [sp, #36]	; 0x24
    a7f4:	lsl	r9, sl, #1
    a7f8:	mov	r1, fp
    a7fc:	add	sl, r9, sl
    a800:	mov	r2, r9
    a804:	lsl	r5, lr, #1
    a808:	bl	9218 <memcpy@plt>
    a80c:	ldr	r0, [sp, #60]	; 0x3c
    a810:	add	r7, r5, #23
    a814:	lsl	sl, sl, #3
    a818:	ldr	r1, [sp, #56]	; 0x38
    a81c:	umull	r0, r7, r0, r7
    a820:	mov	r2, sl
    a824:	lsr	r7, r7, #4
    a828:	add	r7, r7, r7, lsl #1
    a82c:	add	r7, r4, r7, lsl #3
    a830:	mov	r0, r7
    a834:	bl	9218 <memcpy@plt>
    a838:	ldr	r1, [sp, #24]
    a83c:	cmp	fp, r1
    a840:	beq	a84c <fputs@plt+0x1490>
    a844:	mov	r0, fp
    a848:	bl	91c4 <free@plt>
    a84c:	sub	r9, r9, #2
    a850:	sub	r5, r5, #2
    a854:	add	r9, r4, r9
    a858:	add	r5, r4, r5
    a85c:	cmp	r9, r5
    a860:	sub	sl, sl, #24
    a864:	add	sl, r7, sl
    a868:	bcs	ddbc <fputs@plt+0x4a00>
    a86c:	mov	fp, r4
    a870:	str	r7, [sp, #56]	; 0x38
    a874:	cmp	r6, #6
    a878:	beq	ddb4 <fputs@plt+0x49f8>
    a87c:	lsl	r6, r6, #1
    a880:	movw	r5, #5544	; 0x15a8
    a884:	add	r3, r8, r6
    a888:	movt	r5, #2
    a88c:	add	r3, r3, #568	; 0x238
    a890:	ldrh	r7, [r3]
    a894:	sxth	r4, r7
    a898:	cmn	r4, #240	; 0xf0
    a89c:	beq	a8f8 <fputs@plt+0x153c>
    a8a0:	ldr	r2, [sp, #32]
    a8a4:	movw	r3, #1496	; 0x5d8
    a8a8:	movt	r3, #3
    a8ac:	ldr	r0, [r2, #1072]	; 0x430
    a8b0:	cmn	r0, #2
    a8b4:	beq	b058 <fputs@plt+0x1c9c>
    a8b8:	cmp	r0, #0
    a8bc:	ble	afc8 <fputs@plt+0x1c0c>
    a8c0:	cmp	r0, #380	; 0x17c
    a8c4:	addcc	r0, r8, r0
    a8c8:	movcs	r3, #2
    a8cc:	ldrbcc	r3, [r0, #1476]	; 0x5c4
    a8d0:	add	r4, r4, r3
    a8d4:	movw	r2, #2438	; 0x986
    a8d8:	cmp	r4, r2
    a8dc:	bhi	a8f8 <fputs@plt+0x153c>
    a8e0:	lsl	r4, r4, #1
    a8e4:	add	r2, r8, r4
    a8e8:	add	r2, r2, #1856	; 0x740
    a8ec:	ldrsh	r2, [r2]
    a8f0:	cmp	r2, r3
    a8f4:	beq	aff8 <fputs@plt+0x1c3c>
    a8f8:	movw	r3, #13728	; 0x35a0
    a8fc:	movt	r3, #2
    a900:	add	r6, r3, r6
    a904:	str	r3, [sp, #28]
    a908:	add	r6, r6, #3424	; 0xd60
    a90c:	add	r6, r6, #8
    a910:	ldrh	r6, [r6]
    a914:	cmp	r6, #0
    a918:	beq	aea8 <fputs@plt+0x1aec>
    a91c:	b	a93c <fputs@plt+0x1580>
	...
    a92c:	svccc	0x00000000
    a930:	andeq	r0, r0, r0
    a934:	sbcsmi	pc, pc, r0, asr #31
    a938:	andeq	r0, r3, r0, lsl sl
    a93c:	movw	ip, #21912	; 0x5598
    a940:	movt	ip, #2
    a944:	add	r3, ip, r6
    a948:	add	r7, sp, #168	; 0xa8
    a94c:	str	ip, [sp, #40]	; 0x28
    a950:	ldrb	r3, [r3, #-3844]	; 0xfffff0fc
    a954:	mov	ip, r7
    a958:	rsb	r4, r3, #1
    a95c:	str	r3, [sp, #44]	; 0x2c
    a960:	add	r4, r4, r4, lsl #1
    a964:	add	r4, sl, r4, lsl #3
    a968:	ldm	r4!, {r0, r1, r2, r3}
    a96c:	stmia	ip!, {r0, r1, r2, r3}
    a970:	sub	r3, r6, #3
    a974:	ldm	r4, {r0, r1}
    a978:	stm	ip, {r0, r1}
    a97c:	movw	r0, #257	; 0x101
    a980:	cmp	r3, r0
    a984:	ldrls	pc, [pc, r3, lsl #2]
    a988:	b	ae14 <fputs@plt+0x1a58>
    a98c:	muleq	r0, r4, r8
    a990:	andeq	ip, r0, r8, asr r3
    a994:	andeq	ip, r0, ip, lsr r3
    a998:	andeq	ip, r0, r0, lsr #6
    a99c:	andeq	sl, r0, r4, lsl lr
    a9a0:	andeq	sl, r0, r4, lsl lr
    a9a4:	andeq	sl, r0, r4, lsl lr
    a9a8:	andeq	sl, r0, r4, lsl lr
    a9ac:	ldrdeq	ip, [r0], -r8
    a9b0:			; <UNDEFINED> instruction: 0x0000c2b8
    a9b4:	andeq	fp, r0, r0, lsl #1
    a9b8:	andeq	ip, r0, r0, lsl #5
    a9bc:	andeq	ip, r0, r0, ror r2
    a9c0:	andeq	ip, r0, r0, ror #4
    a9c4:	andeq	ip, r0, r0, asr r2
    a9c8:	andeq	ip, r0, r8, lsr r2
    a9cc:	andeq	ip, r0, r0, lsr #4
    a9d0:	andeq	ip, r0, r4, ror #3
    a9d4:	ldrdeq	ip, [r0], -r0
    a9d8:	andeq	ip, r0, r0, ror r1
    a9dc:	andeq	ip, r0, r4, asr #1
    a9e0:	strheq	ip, [r0], -r0
    a9e4:	muleq	r0, ip, r0
    a9e8:	andeq	ip, r0, r8, asr r0
    a9ec:	andeq	ip, r0, ip, asr r1
    a9f0:	strdeq	ip, [r0], -r0
    a9f4:			; <UNDEFINED> instruction: 0x0000c8b0
    a9f8:	andeq	ip, r0, r4, asr #32
    a9fc:	andeq	ip, r0, r4
    aa00:	andeq	fp, r0, r8, asr #31
    aa04:			; <UNDEFINED> instruction: 0x0000bfb4
    aa08:	andeq	fp, r0, r8, asr pc
    aa0c:	andeq	sl, r0, r4, lsl lr
    aa10:	andeq	fp, r0, r4, asr #30
    aa14:	andeq	sl, r0, r4, lsl lr
    aa18:	andeq	sl, r0, r4, lsl lr
    aa1c:	andeq	fp, r0, r8, lsr #30
    aa20:	andeq	fp, r0, ip, lsl #30
    aa24:	strdeq	fp, [r0], -r0
    aa28:	andeq	ip, r0, r8, ror #14
    aa2c:	muleq	r0, r4, sp
    aa30:	andeq	ip, r0, r4, lsr #14
    aa34:	andeq	ip, r0, r8, lsl r7
    aa38:	andeq	ip, r0, r8, lsl #15
    aa3c:	andeq	ip, r0, r4, ror r7
    aa40:	ldrdeq	ip, [r0], -r4
    aa44:	andeq	ip, r0, r8, asr #8
    aa48:	andeq	ip, r0, r0, ror r8
    aa4c:	andeq	ip, r0, r4, ror #16
    aa50:	andeq	ip, r0, r8, lsl #17
    aa54:	ldrdeq	ip, [r0], -r8
    aa58:	andeq	ip, r0, r4, lsr #16
    aa5c:	strdeq	ip, [r0], -r8
    aa60:	andeq	ip, r0, r0, lsr #7
    aa64:	andeq	ip, r0, r4, ror r3
    aa68:	andeq	ip, r0, r4, lsr r6
    aa6c:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    aa70:	andeq	ip, r0, r4, asr #11
    aa74:	andeq	ip, r0, r4, lsr #11
    aa78:	muleq	r0, r0, r6
    aa7c:	andeq	ip, r0, r4, lsr #5
    aa80:	muleq	r0, r0, r2
    aa84:	andeq	ip, r0, ip, asr #7
    aa88:	andeq	ip, r0, r0, lsl #10
    aa8c:			; <UNDEFINED> instruction: 0x0000c4b8
    aa90:	andeq	ip, r0, r0, lsl #9
    aa94:	andeq	ip, r0, r0, ror #8
    aa98:	andeq	ip, r0, r4, asr r5
    aa9c:	andeq	ip, r0, r8, lsr r5
    aaa0:	andeq	ip, r0, r4, ror r5
    aaa4:	andeq	sl, r0, r4, lsl lr
    aaa8:	andeq	sl, r0, r4, lsl lr
    aaac:	andeq	fp, r0, r8, lsr #29
    aab0:	ldrdeq	fp, [r0], -r4
    aab4:	andeq	fp, r0, r0, lsl #29
    aab8:	andeq	fp, r0, ip, lsl sp
    aabc:	strdeq	fp, [r0], -ip
    aac0:	andeq	fp, r0, r0, asr sp
    aac4:	muleq	r0, r8, ip
    aac8:	andeq	fp, r0, r4, lsl ip
    aacc:	andeq	fp, r0, r4, asr #23
    aad0:			; <UNDEFINED> instruction: 0x0000babc
    aad4:	andeq	fp, r0, r4, lsr fp
    aad8:	andeq	fp, r0, ip, lsr #20
    aadc:	muleq	r0, r4, r9
    aae0:	andeq	fp, r0, r8, ror #18
    aae4:	andeq	fp, r0, ip, lsr r9
    aae8:	andeq	fp, r0, r0, lsl r9
    aaec:	ldrdeq	fp, [r0], -ip
    aaf0:	muleq	r0, ip, r8
    aaf4:	andeq	fp, r0, r0, ror #16
    aaf8:	andeq	fp, r0, r4, lsr #16
    aafc:	andeq	fp, r0, r8, ror #15
    ab00:	andeq	fp, r0, ip, lsr #15
    ab04:	andeq	fp, r0, r0, ror r7
    ab08:	andeq	fp, r0, r4, lsr r7
    ab0c:	strdeq	fp, [r0], -r8
    ab10:			; <UNDEFINED> instruction: 0x0000b6bc
    ab14:	andeq	fp, r0, r8, lsl #13
    ab18:	andeq	fp, r0, r8, lsr #12
    ab1c:	ldrdeq	fp, [r0], -r0
    ab20:	andeq	fp, r0, r4, lsr #11
    ab24:	andeq	fp, r0, ip, lsr #10
    ab28:	andeq	fp, r0, r8, ror #9
    ab2c:	andeq	fp, r0, ip, lsl r4
    ab30:	andeq	fp, r0, r4, lsl #8
    ab34:	andeq	fp, r0, r8, asr #7
    ab38:	muleq	r0, ip, r3
    ab3c:	andeq	fp, r0, ip, lsr #9
    ab40:	andeq	fp, r0, ip, asr r4
    ab44:	andeq	fp, r0, r8, lsl #9
    ab48:	andeq	fp, r0, r4, lsl #4
    ab4c:	andeq	fp, r0, r4, lsr #6
    ab50:	strdeq	fp, [r0], -r8
    ab54:	andeq	fp, r0, ip, lsr #5
    ab58:	andeq	fp, r0, r0, lsr r2
    ab5c:	andeq	fp, r0, r0, asr r3
    ab60:	andeq	fp, r0, ip, asr #3
    ab64:	muleq	r0, r0, r1
    ab68:	andeq	fp, r0, ip, ror #2
    ab6c:	andeq	fp, r0, r8, asr #2
    ab70:	andeq	fp, r0, r4, lsr #2
    ab74:	andeq	fp, r0, r0, lsl #2
    ab78:	ldrdeq	fp, [r0], -ip
    ab7c:	strheq	fp, [r0], -r8
    ab80:	andeq	ip, r0, r0, ror #1
    ab84:	andeq	ip, r0, r4, lsl #2
    ab88:	andeq	sp, r0, r8, ror #14
    ab8c:			; <UNDEFINED> instruction: 0x0000c9b0
    ab90:	andeq	ip, r0, r0, ror r9
    ab94:	andeq	ip, r0, r0, lsr r9
    ab98:	andeq	ip, r0, r4, lsl #18
    ab9c:	andeq	sp, r0, r4, asr #14
    aba0:	andeq	sp, r0, r8, lsr r7
    aba4:	andeq	sp, r0, r8, ror #13
    aba8:	strdeq	sp, [r0], -r8
    abac:	andeq	sp, r0, r8, lsr #15
    abb0:	andeq	sp, r0, r8, lsl r8
    abb4:	strdeq	sp, [r0], -r8
    abb8:	andeq	sp, r0, ip, ror #12
    abbc:	andeq	sp, r0, r0, ror #12
    abc0:	andeq	sp, r0, ip, lsr r6
    abc4:	andeq	sp, r0, r8, lsl r6
    abc8:			; <UNDEFINED> instruction: 0x0000d6b0
    abcc:	andeq	sp, r0, ip, lsl #13
    abd0:	ldrdeq	sp, [r0], -r4
    abd4:	andeq	sp, r0, r8, asr #7
    abd8:	andeq	sp, r0, r8, asr r5
    abdc:	andeq	sp, r0, r8, lsl r5
    abe0:	ldrdeq	sp, [r0], -r8
    abe4:	andeq	sl, r0, r4, lsl lr
    abe8:	andeq	sl, r0, r4, lsl lr
    abec:	andeq	sp, r0, r4, asr #9
    abf0:			; <UNDEFINED> instruction: 0x0000d5b4
    abf4:	muleq	r0, r8, r5
    abf8:	andeq	sp, r0, r4, asr #11
    abfc:	andeq	sp, r0, r0, ror r3
    ac00:	andeq	sp, r0, r8, lsr r3
    ac04:	andeq	sp, r0, r8, lsl #6
    ac08:	andeq	sp, r0, ip, asr #5
    ac0c:			; <UNDEFINED> instruction: 0x0000d2b4
    ac10:	andeq	sp, r0, ip, asr r2
    ac14:	andeq	sp, r0, r4, asr #4
    ac18:	andeq	sp, r0, r4, lsr #4
    ac1c:	andeq	sp, r0, ip, lsl #4
    ac20:	andeq	sp, r0, ip, lsr #3
    ac24:	andeq	sp, r0, r0, asr #2
    ac28:	ldrdeq	sp, [r0], -r4
    ac2c:	strheq	sp, [r0], -ip
    ac30:	andeq	sp, r0, r4, lsr #1
    ac34:	andeq	sp, r0, ip, lsl #1
    ac38:	andeq	sp, r0, r4, ror r0
    ac3c:	andeq	sp, r0, ip, asr r0
    ac40:	ldrdeq	sp, [r0], -ip
    ac44:	andeq	sp, r0, r4, asr #3
    ac48:	strdeq	sp, [r0], -r4
    ac4c:	andeq	sp, r0, r4, asr #32
    ac50:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    ac54:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    ac58:			; <UNDEFINED> instruction: 0x0000cfb4
    ac5c:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    ac60:	andeq	ip, r0, r8, ror pc
    ac64:	andeq	ip, r0, r0, ror #30
    ac68:	andeq	ip, r0, r0, asr #30
    ac6c:	andeq	ip, r0, r4, ror lr
    ac70:	andeq	ip, r0, ip, lsl lr
    ac74:	andeq	ip, r0, r0, asr sp
    ac78:	andeq	ip, r0, r0, lsl #26
    ac7c:	andeq	ip, r0, r0, ror #25
    ac80:	andeq	ip, r0, r0, asr #25
    ac84:	andeq	ip, r0, r0, lsr #25
    ac88:	andeq	ip, r0, r0, lsl #25
    ac8c:	andeq	ip, r0, r0, ror #24
    ac90:	andeq	ip, r0, r0, asr #24
    ac94:	andeq	ip, r0, r0, lsr #24
    ac98:	andeq	ip, r0, r0, lsl #24
    ac9c:	andeq	ip, r0, r0, ror #23
    aca0:	andeq	sp, r0, r4, lsl #20
    aca4:	andeq	sp, r0, r4, ror #19
    aca8:	andeq	sp, r0, r4, asr #19
    acac:	andeq	sp, r0, r4, lsr #19
    acb0:	andeq	sp, r0, r4, lsl #19
    acb4:	andeq	sp, r0, r4, ror #18
    acb8:	andeq	sp, r0, r4, asr #18
    acbc:	andeq	sp, r0, r4, lsr #18
    acc0:	andeq	sp, r0, r4, lsl #18
    acc4:	andeq	sp, r0, r4, ror #17
    acc8:	andeq	sp, r0, r4, asr #17
    accc:	andeq	sp, r0, r4, lsr #17
    acd0:	andeq	sp, r0, r4, lsl #17
    acd4:	andeq	sp, r0, r4, ror #16
    acd8:	andeq	sp, r0, r4, asr #16
    acdc:	andeq	sp, r0, r4, lsr #16
    ace0:	strdeq	sp, [r0], -r0
    ace4:	ldrdeq	sp, [r0], -r0
    ace8:			; <UNDEFINED> instruction: 0x0000dab0
    acec:	muleq	r0, r0, sl
    acf0:	andeq	sp, r0, r0, ror sl
    acf4:	andeq	sp, r0, r0, asr sl
    acf8:	andeq	sp, r0, r0, lsr sl
    acfc:	andeq	sp, r0, r4, lsr #20
    ad00:			; <UNDEFINED> instruction: 0x0000dbbc
    ad04:	andeq	sp, r0, r8, asr #22
    ad08:	andeq	sp, r0, ip, lsl fp
    ad0c:	andeq	sp, r0, r0, lsl fp
    ad10:	muleq	r0, r4, fp
    ad14:	andeq	sp, r0, ip, ror #22
    ad18:	andeq	sp, r0, r8, asr #23
    ad1c:	andeq	sp, r0, r8, lsr #7
    ad20:	andeq	sp, r0, r0, ror ip
    ad24:	andeq	sp, r0, ip, asr ip
    ad28:	muleq	r0, r0, ip
    ad2c:			; <UNDEFINED> instruction: 0x0000d4b0
    ad30:	muleq	r0, r0, r4
    ad34:	andeq	sp, r0, r0, ror r4
    ad38:	andeq	sp, r0, r8, lsl r4
    ad3c:	andeq	sp, r0, r8, lsl #8
    ad40:	andeq	sp, r0, ip, lsl #26
    ad44:	strdeq	sp, [r0], -r0
    ad48:	andeq	sp, r0, r0, asr #24
    ad4c:	andeq	sp, r0, r8, ror #23
    ad50:	andeq	sp, r0, r4, lsr #25
    ad54:	muleq	r0, r0, fp
    ad58:	andeq	ip, r0, r8, lsr fp
    ad5c:	andeq	ip, r0, ip, lsl fp
    ad60:	andeq	ip, r0, r0, lsl #22
    ad64:	andeq	ip, r0, r4, ror #21
    ad68:			; <UNDEFINED> instruction: 0x0000cab4
    ad6c:	muleq	r0, r8, sl
    ad70:	andeq	ip, r0, r0, lsl #21
    ad74:	andeq	ip, r0, ip, asr sl
    ad78:	andeq	ip, r0, r8, lsr sl
    ad7c:	andeq	ip, r0, r4, lsl sl
    ad80:	strdeq	ip, [r0], -r0
    ad84:	andeq	ip, r0, ip, ror #12
    ad88:	andeq	ip, r0, ip, lsr #13
    ad8c:	andeq	sp, r0, r8, lsl sp
    ad90:	ldrdeq	fp, [r0], -r0
    ad94:	ldr	r0, [sl, #-24]	; 0xffffffe8
    ad98:	movw	r4, #60264	; 0xeb68
    ad9c:	bl	9200 <strlen@plt>
    ada0:	movt	r4, #65535	; 0xffff
    ada4:	mov	r5, r0
    ada8:	ldr	r0, [sl]
    adac:	bl	9200 <strlen@plt>
    adb0:	add	r0, r5, r0
    adb4:	add	r0, r0, #1
    adb8:	bl	9278 <_Znaj@plt>
    adbc:	add	r3, sp, #5440	; 0x1540
    adc0:	str	r0, [r3, r4]
    adc4:	ldr	r1, [sl, #-24]	; 0xffffffe8
    adc8:	bl	9248 <strcpy@plt>
    adcc:	add	ip, sp, #5440	; 0x1540
    add0:	ldr	r1, [sl]
    add4:	ldr	r0, [ip, r4]
    add8:	bl	92e4 <strcat@plt>
    addc:	ldr	r0, [sl, #-24]	; 0xffffffe8
    ade0:	cmp	r0, #0
    ade4:	beq	adec <fputs@plt+0x1a30>
    ade8:	bl	92f0 <_ZdaPv@plt>
    adec:	ldr	r0, [sl]
    adf0:	cmp	r0, #0
    adf4:	beq	adfc <fputs@plt+0x1a40>
    adf8:	bl	92f0 <_ZdaPv@plt>
    adfc:	ldr	r3, [sl, #-20]	; 0xffffffec
    ae00:	cmp	r3, #0
    ae04:	beq	e224 <fputs@plt+0x4e68>
    ae08:	ldr	r2, [sl, #-16]
    ae0c:	str	r3, [r7, #4]
    ae10:	str	r2, [r7, #8]
    ae14:	ldr	r1, [sp, #40]	; 0x28
    ae18:	mov	r4, r7
    ae1c:	ldr	r2, [sp, #44]	; 0x2c
    ae20:	movw	r7, #2438	; 0x986
    ae24:	add	r3, r1, r6
    ae28:	add	ip, r2, r2, lsl #1
    ae2c:	ldrb	r6, [r3, #-3580]	; 0xfffff204
    ae30:	sub	r9, r9, r2, lsl #1
    ae34:	ldm	r4!, {r0, r1, r2, r3}
    ae38:	sub	sl, sl, ip, lsl #3
    ae3c:	sub	r6, r6, #146	; 0x92
    ae40:	ldr	ip, [sp, #40]	; 0x28
    ae44:	add	sl, sl, #24
    ae48:	lsl	r6, r6, #1
    ae4c:	add	r5, ip, r6
    ae50:	mov	ip, sl
    ae54:	stmia	ip!, {r0, r1, r2, r3}
    ae58:	sub	r5, r5, #3312	; 0xcf0
    ae5c:	ldm	r4, {r0, r1}
    ae60:	ldrsh	r2, [r5, #-4]
    ae64:	stm	ip, {r0, r1}
    ae68:	ldrsh	r3, [r9]
    ae6c:	add	r2, r2, r3
    ae70:	cmp	r2, r7
    ae74:	bhi	ae90 <fputs@plt+0x1ad4>
    ae78:	lsl	r2, r2, #1
    ae7c:	add	r1, r8, r2
    ae80:	add	r1, r1, #1856	; 0x740
    ae84:	ldrsh	r1, [r1]
    ae88:	cmp	r1, r3
    ae8c:	beq	b06c <fputs@plt+0x1cb0>
    ae90:	ldr	r1, [sp, #40]	; 0x28
    ae94:	add	r6, r1, r6
    ae98:	sub	r6, r6, #3216	; 0xc90
    ae9c:	ldrsh	r6, [r6]
    aea0:	add	r9, r9, #2
    aea4:	b	a790 <fputs@plt+0x13d4>
    aea8:	ldr	r2, [sp, #52]	; 0x34
    aeac:	cmp	r2, #0
    aeb0:	beq	afd8 <fputs@plt+0x1c1c>
    aeb4:	ldr	r0, [sp, #52]	; 0x34
    aeb8:	cmp	r0, #3
    aebc:	beq	af60 <fputs@plt+0x1ba4>
    aec0:	mov	r3, r9
    aec4:	movw	r2, #2438	; 0x986
    aec8:	ldr	r0, [sp, #28]
    aecc:	b	aef0 <fputs@plt+0x1b34>
    aed0:	cmp	fp, r3
    aed4:	beq	af84 <fputs@plt+0x1bc8>
    aed8:	ldrsh	r1, [r9, #-2]
    aedc:	sub	sl, sl, #24
    aee0:	sub	r3, r3, #2
    aee4:	add	r1, r8, r1, lsl #1
    aee8:	add	r1, r1, #568	; 0x238
    aeec:	ldrh	r7, [r1]
    aef0:	sxth	r7, r7
    aef4:	mov	r9, r3
    aef8:	cmn	r7, #240	; 0xf0
    aefc:	beq	aed0 <fputs@plt+0x1b14>
    af00:	add	r7, r7, #1
    af04:	cmp	r7, r2
    af08:	bhi	aed0 <fputs@plt+0x1b14>
    af0c:	lsl	r7, r7, #1
    af10:	add	r1, r8, r7
    af14:	add	r1, r1, #1856	; 0x740
    af18:	ldrsh	r1, [r1]
    af1c:	cmp	r1, #1
    af20:	bne	aed0 <fputs@plt+0x1b14>
    af24:	add	r7, r0, r7
    af28:	sub	r7, r7, #1440	; 0x5a0
    af2c:	ldrsh	r6, [r7, #-8]
    af30:	cmp	r6, #0
    af34:	ble	aed0 <fputs@plt+0x1b14>
    af38:	ldr	r4, [pc, #-1544]	; a938 <fputs@plt+0x157c>
    af3c:	mov	r2, #3
    af40:	str	r2, [sp, #52]	; 0x34
    af44:	add	ip, sl, #24
    af48:	ldm	r4!, {r0, r1, r2, r3}
    af4c:	mov	sl, ip
    af50:	stmia	ip!, {r0, r1, r2, r3}
    af54:	ldm	r4, {r0, r1}
    af58:	stm	ip, {r0, r1}
    af5c:	b	aea0 <fputs@plt+0x1ae4>
    af60:	ldr	r1, [sp, #32]
    af64:	movw	r3, #1496	; 0x5d8
    af68:	movt	r3, #3
    af6c:	ldr	r2, [r1, #1072]	; 0x430
    af70:	cmp	r2, #0
    af74:	mvngt	r2, #1
    af78:	strgt	r2, [r3, #1072]	; 0x430
    af7c:	bgt	aec0 <fputs@plt+0x1b04>
    af80:	bne	aec0 <fputs@plt+0x1b04>
    af84:	mov	r4, #1
    af88:	ldr	r3, [sp, #24]
    af8c:	cmp	fp, r3
    af90:	beq	af9c <fputs@plt+0x1be0>
    af94:	mov	r0, fp
    af98:	bl	91c4 <free@plt>
    af9c:	ldr	r1, [sp, #48]	; 0x30
    afa0:	add	ip, sp, #8192	; 0x2000
    afa4:	mov	r0, r4
    afa8:	ldr	r2, [ip, #-2756]	; 0xfffff53c
    afac:	ldr	r3, [r1]
    afb0:	cmp	r2, r3
    afb4:	bne	e0f4 <fputs@plt+0x4d38>
    afb8:	add	sp, sp, #5440	; 0x1540
    afbc:	add	sp, sp, #4
    afc0:	vpop	{d8-d10}
    afc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    afc8:	ldr	ip, [sp, #32]
    afcc:	mov	r3, #0
    afd0:	str	r3, [ip, #1072]	; 0x430
    afd4:	b	a8d0 <fputs@plt+0x1514>
    afd8:	ldr	ip, [sp, #32]
    afdc:	movw	r0, #19540	; 0x4c54
    afe0:	movt	r0, #2
    afe4:	ldr	r3, [ip, #1068]	; 0x42c
    afe8:	add	r3, r3, #1
    afec:	str	r3, [ip, #1068]	; 0x42c
    aff0:	bl	12bfc <fputs@plt+0x9840>
    aff4:	b	aec0 <fputs@plt+0x1b04>
    aff8:	movw	r0, #13728	; 0x35a0
    affc:	movt	r0, #2
    b000:	add	r3, r0, r4
    b004:	str	r0, [sp, #28]
    b008:	sub	r3, r3, #1440	; 0x5a0
    b00c:	ldrsh	r6, [r3, #-8]
    b010:	cmp	r6, #0
    b014:	rsble	r6, r6, #0
    b018:	ble	a93c <fputs@plt+0x1580>
    b01c:	ldr	r1, [sp, #52]	; 0x34
    b020:	mvn	r3, #1
    b024:	ldr	r2, [sp, #32]
    b028:	add	sl, sl, #24
    b02c:	ldr	r4, [pc, #-1788]	; a938 <fputs@plt+0x157c>
    b030:	cmp	r1, #0
    b034:	subne	r1, r1, #1
    b038:	strne	r1, [sp, #52]	; 0x34
    b03c:	str	r3, [r2, #1072]	; 0x430
    b040:	mov	ip, sl
    b044:	ldm	r4!, {r0, r1, r2, r3}
    b048:	stmia	ip!, {r0, r1, r2, r3}
    b04c:	ldm	r4, {r0, r1}
    b050:	stm	ip, {r0, r1}
    b054:	b	aea0 <fputs@plt+0x1ae4>
    b058:	str	r3, [sp, #20]
    b05c:	bl	12638 <fputs@plt+0x927c>
    b060:	ldr	r3, [sp, #20]
    b064:	str	r0, [r3, #1072]	; 0x430
    b068:	b	a8b8 <fputs@plt+0x14fc>
    b06c:	ldr	r0, [sp, #28]
    b070:	add	r3, r0, r2
    b074:	sub	r3, r3, #1440	; 0x5a0
    b078:	ldrsh	r6, [r3, #-8]
    b07c:	b	aea0 <fputs@plt+0x1ae4>
    b080:	ldr	r0, [sl, #-72]	; 0xffffffb8
    b084:	bl	9e90 <fputs@plt+0xad4>
    b088:	cmp	r0, #0
    b08c:	beq	e0c4 <fputs@plt+0x4d08>
    b090:	mov	r3, #0
    b094:	str	r3, [r0]
    b098:	ldrd	r2, [sl]
    b09c:	vstr	d8, [r0, #16]
    b0a0:	strd	r2, [r0, #8]
    b0a4:	ldr	r0, [sl, #-72]	; 0xffffffb8
    b0a8:	cmp	r0, #0
    b0ac:	beq	ae14 <fputs@plt+0x1a58>
    b0b0:	bl	92f0 <_ZdaPv@plt>
    b0b4:	b	ae14 <fputs@plt+0x1a58>
    b0b8:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b0bc:	movw	r2, #60264	; 0xeb68
    b0c0:	add	r1, sp, #5440	; 0x1540
    b0c4:	movt	r2, #65535	; 0xffff
    b0c8:	str	r3, [r1, r2]
    b0cc:	ldr	r2, [r3]
    b0d0:	orr	r2, r2, #4
    b0d4:	str	r2, [r3]
    b0d8:	b	ae14 <fputs@plt+0x1a58>
    b0dc:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b0e0:	movw	r2, #60264	; 0xeb68
    b0e4:	add	r0, sp, #5440	; 0x1540
    b0e8:	movt	r2, #65535	; 0xffff
    b0ec:	str	r3, [r0, r2]
    b0f0:	ldr	r2, [r3]
    b0f4:	orr	r2, r2, #96	; 0x60
    b0f8:	str	r2, [r3]
    b0fc:	b	ae14 <fputs@plt+0x1a58>
    b100:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b104:	movw	r2, #60264	; 0xeb68
    b108:	add	ip, sp, #5440	; 0x1540
    b10c:	movt	r2, #65535	; 0xffff
    b110:	str	r3, [ip, r2]
    b114:	ldr	r2, [r3]
    b118:	orr	r2, r2, #64	; 0x40
    b11c:	str	r2, [r3]
    b120:	b	ae14 <fputs@plt+0x1a58>
    b124:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b128:	movw	r2, #60264	; 0xeb68
    b12c:	add	r1, sp, #5440	; 0x1540
    b130:	movt	r2, #65535	; 0xffff
    b134:	str	r3, [r1, r2]
    b138:	ldr	r2, [r3]
    b13c:	orr	r2, r2, #32
    b140:	str	r2, [r3]
    b144:	b	ae14 <fputs@plt+0x1a58>
    b148:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b14c:	movw	r2, #60264	; 0xeb68
    b150:	add	r0, sp, #5440	; 0x1540
    b154:	movt	r2, #65535	; 0xffff
    b158:	str	r3, [r0, r2]
    b15c:	ldr	r2, [r3]
    b160:	orr	r2, r2, #16
    b164:	str	r2, [r3]
    b168:	b	ae14 <fputs@plt+0x1a58>
    b16c:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b170:	movw	r2, #60264	; 0xeb68
    b174:	add	ip, sp, #5440	; 0x1540
    b178:	movt	r2, #65535	; 0xffff
    b17c:	str	r3, [ip, r2]
    b180:	ldr	r2, [r3]
    b184:	orr	r2, r2, #256	; 0x100
    b188:	str	r2, [r3]
    b18c:	b	ae14 <fputs@plt+0x1a58>
    b190:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b194:	movw	r3, #60264	; 0xeb68
    b198:	add	r2, sp, #5440	; 0x1540
    b19c:	movt	r3, #65535	; 0xffff
    b1a0:	str	r1, [r2, r3]
    b1a4:	ldr	r3, [r1]
    b1a8:	tst	r3, #131072	; 0x20000
    b1ac:	beq	deb8 <fputs@plt+0x4afc>
    b1b0:	bic	r3, r3, #131072	; 0x20000
    b1b4:	vstr	d8, [r1, #144]	; 0x90
    b1b8:	orr	r3, r3, #65536	; 0x10000
    b1bc:	str	r3, [r1]
    b1c0:	ldrd	r2, [sl]
    b1c4:	strd	r2, [r1, #152]	; 0x98
    b1c8:	b	ae14 <fputs@plt+0x1a58>
    b1cc:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b1d0:	movw	r2, #60264	; 0xeb68
    b1d4:	add	r0, sp, #5440	; 0x1540
    b1d8:	movt	r2, #65535	; 0xffff
    b1dc:	str	r3, [r0, r2]
    b1e0:	ldr	r2, [r3]
    b1e4:	tst	r2, #131072	; 0x20000
    b1e8:	beq	dedc <fputs@plt+0x4b20>
    b1ec:	bic	r2, r2, #131072	; 0x20000
    b1f0:	vstr	d8, [r3, #152]	; 0x98
    b1f4:	orr	r2, r2, #65536	; 0x10000
    b1f8:	vstr	d8, [r3, #144]	; 0x90
    b1fc:	str	r2, [r3]
    b200:	b	ae14 <fputs@plt+0x1a58>
    b204:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b208:	add	r2, sp, #5440	; 0x1540
    b20c:	movw	r3, #60264	; 0xeb68
    b210:	movt	r3, #65535	; 0xffff
    b214:	str	r1, [r2, r3]
    b218:	ldr	r3, [r1]
    b21c:	orr	r3, r3, #524288	; 0x80000
    b220:	str	r3, [r1]
    b224:	ldrd	r2, [sl]
    b228:	strd	r2, [r1, #168]	; 0xa8
    b22c:	b	ae14 <fputs@plt+0x1a58>
    b230:	ldr	r5, [sl, #-48]	; 0xffffffd0
    b234:	add	r3, sp, #5440	; 0x1540
    b238:	movw	r4, #60264	; 0xeb68
    b23c:	movt	r4, #65535	; 0xffff
    b240:	str	r5, [r3, r4]
    b244:	ldr	r3, [r5]
    b248:	orr	r3, r3, #13107200	; 0xc80000
    b24c:	str	r3, [r5]
    b250:	ldr	r0, [sl]
    b254:	bl	9200 <strlen@plt>
    b258:	add	r0, r0, #1
    b25c:	bl	9278 <_Znaj@plt>
    b260:	add	ip, sp, #5440	; 0x1540
    b264:	ldr	r3, [ip, r4]
    b268:	str	r0, [r5, #192]	; 0xc0
    b26c:	ldr	r1, [sl]
    b270:	ldr	r0, [r3, #192]	; 0xc0
    b274:	bl	9248 <strcpy@plt>
    b278:	ldr	r0, [sl]
    b27c:	bl	9200 <strlen@plt>
    b280:	add	lr, sp, #5440	; 0x1540
    b284:	ldr	r5, [lr, r4]
    b288:	add	r0, r0, #1
    b28c:	bl	9278 <_Znaj@plt>
    b290:	add	r1, sp, #5440	; 0x1540
    b294:	ldr	r3, [r1, r4]
    b298:	str	r0, [r5, #196]	; 0xc4
    b29c:	ldr	r0, [r3, #196]	; 0xc4
    b2a0:	ldr	r1, [sl]
    b2a4:	bl	9248 <strcpy@plt>
    b2a8:	b	ae14 <fputs@plt+0x1a58>
    b2ac:	ldr	r4, [sl, #-48]	; 0xffffffd0
    b2b0:	add	r1, sp, #5440	; 0x1540
    b2b4:	movw	r5, #60264	; 0xeb68
    b2b8:	movt	r5, #65535	; 0xffff
    b2bc:	str	r4, [r1, r5]
    b2c0:	ldr	r3, [r4]
    b2c4:	orr	r3, r3, #4718592	; 0x480000
    b2c8:	str	r3, [r4]
    b2cc:	ldr	r0, [sl]
    b2d0:	bl	9200 <strlen@plt>
    b2d4:	add	r0, r0, #1
    b2d8:	bl	9278 <_Znaj@plt>
    b2dc:	add	r2, sp, #5440	; 0x1540
    b2e0:	ldr	r3, [r2, r5]
    b2e4:	str	r0, [r4, #192]	; 0xc0
    b2e8:	ldr	r0, [r3, #192]	; 0xc0
    b2ec:	ldr	r1, [sl]
    b2f0:	bl	9248 <strcpy@plt>
    b2f4:	b	ae14 <fputs@plt+0x1a58>
    b2f8:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b2fc:	movw	r3, #60264	; 0xeb68
    b300:	add	r0, sp, #5440	; 0x1540
    b304:	movt	r3, #65535	; 0xffff
    b308:	str	r1, [r0, r3]
    b30c:	ldr	r3, [r1]
    b310:	orr	r3, r3, #33554432	; 0x2000000
    b314:	str	r3, [r1]
    b318:	ldrd	r2, [sl]
    b31c:	strd	r2, [r1, #184]	; 0xb8
    b320:	b	ae14 <fputs@plt+0x1a58>
    b324:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b328:	movw	r3, #60264	; 0xeb68
    b32c:	add	ip, sp, #5440	; 0x1540
    b330:	movt	r3, #65535	; 0xffff
    b334:	str	r1, [ip, r3]
    b338:	ldr	r3, [r1]
    b33c:	orr	r3, r3, #16777216	; 0x1000000
    b340:	str	r3, [r1]
    b344:	ldrd	r2, [sl]
    b348:	strd	r2, [r1, #176]	; 0xb0
    b34c:	b	ae14 <fputs@plt+0x1a58>
    b350:	ldr	r4, [sl, #-48]	; 0xffffffd0
    b354:	add	r2, sp, #5440	; 0x1540
    b358:	movw	r5, #60264	; 0xeb68
    b35c:	movt	r5, #65535	; 0xffff
    b360:	str	r4, [r2, r5]
    b364:	ldr	r3, [r4]
    b368:	orr	r3, r3, #8388608	; 0x800000
    b36c:	str	r3, [r4]
    b370:	ldr	r0, [sl]
    b374:	bl	9200 <strlen@plt>
    b378:	add	r0, r0, #1
    b37c:	bl	9278 <_Znaj@plt>
    b380:	add	ip, sp, #5440	; 0x1540
    b384:	ldr	r3, [ip, r5]
    b388:	str	r0, [r4, #196]	; 0xc4
    b38c:	ldr	r0, [r3, #196]	; 0xc4
    b390:	ldr	r1, [sl]
    b394:	bl	9248 <strcpy@plt>
    b398:	b	ae14 <fputs@plt+0x1a58>
    b39c:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b3a0:	movw	r3, #60264	; 0xeb68
    b3a4:	add	ip, sp, #5440	; 0x1540
    b3a8:	movt	r3, #65535	; 0xffff
    b3ac:	str	r1, [ip, r3]
    b3b0:	ldr	r3, [r1]
    b3b4:	orr	r3, r3, #1
    b3b8:	str	r3, [r1]
    b3bc:	ldrd	r2, [sl]
    b3c0:	strd	r2, [r1, #24]
    b3c4:	b	ae14 <fputs@plt+0x1a58>
    b3c8:	ldr	r4, [sl, #-24]	; 0xffffffe8
    b3cc:	add	r2, sp, #5440	; 0x1540
    b3d0:	movw	r3, #60264	; 0xeb68
    b3d4:	movt	r3, #65535	; 0xffff
    b3d8:	movw	r0, #19048	; 0x4a68
    b3dc:	movt	r0, #2
    b3e0:	str	r4, [r2, r3]
    b3e4:	ldr	r3, [r4]
    b3e8:	orr	r3, r3, #1
    b3ec:	str	r3, [r4]
    b3f0:	bl	9e90 <fputs@plt+0xad4>
    b3f4:	cmp	r0, #0
    b3f8:	ldrdne	r2, [r0, #8]
    b3fc:	strdne	r2, [r4, #24]
    b400:	b	ae14 <fputs@plt+0x1a58>
    b404:	ldr	r2, [sl, #-24]	; 0xffffffe8
    b408:	movw	r3, #60264	; 0xeb68
    b40c:	add	r1, sp, #5440	; 0x1540
    b410:	movt	r3, #65535	; 0xffff
    b414:	str	r2, [r1, r3]
    b418:	b	ae14 <fputs@plt+0x1a58>
    b41c:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b420:	movw	r2, #60264	; 0xeb68
    b424:	add	ip, sp, #5440	; 0x1540
    b428:	movt	r2, #65535	; 0xffff
    b42c:	str	r3, [ip, r2]
    b430:	ldr	r2, [r3]
    b434:	tst	r2, #128	; 0x80
    b438:	bne	dde0 <fputs@plt+0x4a24>
    b43c:	ldr	r2, [r3, #200]	; 0xc8
    b440:	cmp	r2, #3
    b444:	ldrls	pc, [pc, r2, lsl #2]
    b448:	b	dde0 <fputs@plt+0x4a24>
    b44c:	strheq	lr, [r0], -r0
    b450:	ldrdeq	sp, [r0], -r0
    b454:	andeq	lr, r0, r4, lsr r1
    b458:	andeq	lr, r0, r8, ror r1
    b45c:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b460:	movw	r3, #60264	; 0xeb68
    b464:	add	r0, sp, #5440	; 0x1540
    b468:	movt	r3, #65535	; 0xffff
    b46c:	str	r1, [r0, r3]
    b470:	ldr	r3, [r1]
    b474:	orr	r3, r3, #2
    b478:	str	r3, [r1]
    b47c:	ldrd	r2, [sl]
    b480:	strd	r2, [r1, #24]
    b484:	b	ae14 <fputs@plt+0x1a58>
    b488:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b48c:	movw	r2, #60264	; 0xeb68
    b490:	add	r1, sp, #5440	; 0x1540
    b494:	movt	r2, #65535	; 0xffff
    b498:	str	r3, [r1, r2]
    b49c:	ldr	r2, [r3]
    b4a0:	orr	r2, r2, #1048576	; 0x100000
    b4a4:	str	r2, [r3]
    b4a8:	b	ae14 <fputs@plt+0x1a58>
    b4ac:	ldr	r4, [sl, #-24]	; 0xffffffe8
    b4b0:	add	lr, sp, #5440	; 0x1540
    b4b4:	movw	r3, #60264	; 0xeb68
    b4b8:	movt	r3, #65535	; 0xffff
    b4bc:	movw	r0, #19048	; 0x4a68
    b4c0:	movt	r0, #2
    b4c4:	str	r4, [lr, r3]
    b4c8:	ldr	r3, [r4]
    b4cc:	orr	r3, r3, #2
    b4d0:	str	r3, [r4]
    b4d4:	bl	9e90 <fputs@plt+0xad4>
    b4d8:	cmp	r0, #0
    b4dc:	ldrdne	r2, [r0, #8]
    b4e0:	strdne	r2, [r4, #24]
    b4e4:	b	ae14 <fputs@plt+0x1a58>
    b4e8:	ldr	r3, [sl, #-48]	; 0xffffffd0
    b4ec:	movw	r2, #60264	; 0xeb68
    b4f0:	add	r1, sp, #5440	; 0x1540
    b4f4:	movt	r2, #65535	; 0xffff
    b4f8:	vldr	d5, [r3, #208]	; 0xd0
    b4fc:	vldr	d6, [r3, #216]	; 0xd8
    b500:	str	r3, [r1, r2]
    b504:	ldr	r2, [r3]
    b508:	orr	r2, r2, #128	; 0x80
    b50c:	str	r2, [r3]
    b510:	vldr	d7, [sl]
    b514:	vadd.f64	d7, d5, d7
    b518:	vstr	d7, [r3, #208]	; 0xd0
    b51c:	vldr	d7, [sl, #8]
    b520:	vadd.f64	d7, d6, d7
    b524:	vstr	d7, [r3, #216]	; 0xd8
    b528:	b	ae14 <fputs@plt+0x1a58>
    b52c:	ldr	r3, [sl, #-48]	; 0xffffffd0
    b530:	add	ip, sp, #5440	; 0x1540
    b534:	movw	r2, #60264	; 0xeb68
    b538:	movt	r2, #65535	; 0xffff
    b53c:	add	r5, sp, #120	; 0x78
    b540:	add	r4, sp, #192	; 0xc0
    b544:	str	r3, [ip, r2]
    b548:	ldr	r2, [r3]
    b54c:	mov	r0, r5
    b550:	orr	r2, r2, #2048	; 0x800
    b554:	str	r2, [r3]
    b558:	bl	15038 <fputs@plt+0xbc7c>
    b55c:	ldrd	r2, [sl]
    b560:	strd	r2, [sp, #120]	; 0x78
    b564:	ldrd	r2, [sl, #8]
    b568:	strd	r2, [sp, #128]	; 0x80
    b56c:	ldm	r5, {r0, r1, r2, r3}
    b570:	stm	r4, {r0, r1, r2, r3}
    b574:	mov	r0, #40	; 0x28
    b578:	bl	209a0 <_Znwj@@Base>
    b57c:	vldr	d0, [r4]
    b580:	vldr	d1, [r4, #8]
    b584:	mov	r5, r0
    b588:	bl	17488 <fputs@plt+0xe0cc>
    b58c:	movw	r3, #60264	; 0xeb68
    b590:	add	r0, sp, #5440	; 0x1540
    b594:	movt	r3, #65535	; 0xffff
    b598:	ldr	r3, [r0, r3]
    b59c:	str	r5, [r3, #96]	; 0x60
    b5a0:	b	ae14 <fputs@plt+0x1a58>
    b5a4:	ldr	r3, [sl, #-48]	; 0xffffffd0
    b5a8:	movw	r2, #60264	; 0xeb68
    b5ac:	add	r0, sp, #5440	; 0x1540
    b5b0:	movt	r2, #65535	; 0xffff
    b5b4:	str	r3, [r0, r2]
    b5b8:	ldr	r2, [r3]
    b5bc:	orr	r2, r2, #2048	; 0x800
    b5c0:	str	r2, [r3]
    b5c4:	ldr	r2, [sl]
    b5c8:	str	r2, [r3, #96]	; 0x60
    b5cc:	b	ae14 <fputs@plt+0x1a58>
    b5d0:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b5d4:	movw	r3, #60264	; 0xeb68
    b5d8:	add	ip, sp, #5440	; 0x1540
    b5dc:	movt	r3, #65535	; 0xffff
    b5e0:	ldr	r2, [r1, #4]
    b5e4:	str	r1, [ip, r3]
    b5e8:	ldr	r0, [r1]
    b5ec:	cmp	r2, #4
    b5f0:	orr	r3, r0, #1024	; 0x400
    b5f4:	str	r3, [r1]
    b5f8:	ldrd	r2, [sl]
    b5fc:	strd	r2, [r1, #64]	; 0x40
    b600:	ldrd	r2, [sl, #8]
    b604:	strd	r2, [r1, #72]	; 0x48
    b608:	beq	ae14 <fputs@plt+0x1a58>
    b60c:	orr	r0, r0, #1536	; 0x600
    b610:	str	r0, [r1]
    b614:	ldrd	r2, [sl]
    b618:	strd	r2, [r1, #32]
    b61c:	ldrd	r2, [sl, #8]
    b620:	strd	r2, [r1, #40]	; 0x28
    b624:	b	ae14 <fputs@plt+0x1a58>
    b628:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b62c:	movw	r4, #60264	; 0xeb68
    b630:	add	r2, sp, #5440	; 0x1540
    b634:	movt	r4, #65535	; 0xffff
    b638:	str	r1, [r2, r4]
    b63c:	ldr	r3, [r1]
    b640:	tst	r3, #128	; 0x80
    b644:	bne	df0c <fputs@plt+0x4b50>
    b648:	orr	r0, r3, #32768	; 0x8000
    b64c:	orr	r3, r3, #128	; 0x80
    b650:	str	r3, [r1]
    b654:	orr	r0, r0, #128	; 0x80
    b658:	ldrd	r2, [sl]
    b65c:	strd	r2, [r1, #208]	; 0xd0
    b660:	ldrd	r2, [sl, #8]
    b664:	str	r0, [r1]
    b668:	strd	r2, [r1, #216]	; 0xd8
    b66c:	mov	r3, #1
    b670:	str	r3, [r1, #224]	; 0xe0
    b674:	ldrd	r2, [sl]
    b678:	strd	r2, [r1, #48]	; 0x30
    b67c:	ldrd	r2, [sl, #8]
    b680:	strd	r2, [r1, #56]	; 0x38
    b684:	b	ae14 <fputs@plt+0x1a58>
    b688:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b68c:	movw	r3, #60264	; 0xeb68
    b690:	add	r0, sp, #5440	; 0x1540
    b694:	movt	r3, #65535	; 0xffff
    b698:	str	r1, [r0, r3]
    b69c:	ldr	r3, [r1]
    b6a0:	orr	r3, r3, #512	; 0x200
    b6a4:	str	r3, [r1]
    b6a8:	ldrd	r2, [sl]
    b6ac:	strd	r2, [r1, #32]
    b6b0:	ldrd	r2, [sl, #8]
    b6b4:	strd	r2, [r1, #40]	; 0x28
    b6b8:	b	ae14 <fputs@plt+0x1a58>
    b6bc:	ldr	r3, [sl, #-48]	; 0xffffffd0
    b6c0:	movw	r2, #60264	; 0xeb68
    b6c4:	add	ip, sp, #5440	; 0x1540
    b6c8:	movt	r2, #65535	; 0xffff
    b6cc:	vldr	d6, [r3, #208]	; 0xd0
    b6d0:	mov	r1, #2
    b6d4:	str	r3, [ip, r2]
    b6d8:	ldr	r2, [r3]
    b6dc:	str	r1, [r3, #200]	; 0xc8
    b6e0:	orr	r2, r2, #128	; 0x80
    b6e4:	str	r2, [r3]
    b6e8:	vldr	d7, [sl]
    b6ec:	vsub.f64	d7, d6, d7
    b6f0:	vstr	d7, [r3, #208]	; 0xd0
    b6f4:	b	ae14 <fputs@plt+0x1a58>
    b6f8:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b6fc:	vldr	d6, [r3, #208]	; 0xd0
    b700:	vldr	d7, [r3, #128]	; 0x80
    b704:	vsub.f64	d7, d6, d7
    b708:	movw	r2, #60264	; 0xeb68
    b70c:	add	r0, sp, #5440	; 0x1540
    b710:	movt	r2, #65535	; 0xffff
    b714:	mov	r1, #2
    b718:	str	r1, [r3, #200]	; 0xc8
    b71c:	str	r3, [r0, r2]
    b720:	ldr	r2, [r3]
    b724:	orr	r2, r2, #128	; 0x80
    b728:	str	r2, [r3]
    b72c:	vstr	d7, [r3, #208]	; 0xd0
    b730:	b	ae14 <fputs@plt+0x1a58>
    b734:	ldr	r3, [sl, #-48]	; 0xffffffd0
    b738:	movw	r2, #60264	; 0xeb68
    b73c:	add	ip, sp, #5440	; 0x1540
    b740:	movt	r2, #65535	; 0xffff
    b744:	vldr	d6, [r3, #208]	; 0xd0
    b748:	mov	r1, #0
    b74c:	str	r3, [ip, r2]
    b750:	ldr	r2, [r3]
    b754:	str	r1, [r3, #200]	; 0xc8
    b758:	orr	r2, r2, #128	; 0x80
    b75c:	str	r2, [r3]
    b760:	vldr	d7, [sl]
    b764:	vadd.f64	d7, d6, d7
    b768:	vstr	d7, [r3, #208]	; 0xd0
    b76c:	b	ae14 <fputs@plt+0x1a58>
    b770:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b774:	vldr	d6, [r3, #208]	; 0xd0
    b778:	vldr	d7, [r3, #128]	; 0x80
    b77c:	vadd.f64	d7, d6, d7
    b780:	movw	r2, #60264	; 0xeb68
    b784:	add	r0, sp, #5440	; 0x1540
    b788:	movt	r2, #65535	; 0xffff
    b78c:	mov	r1, #0
    b790:	str	r1, [r3, #200]	; 0xc8
    b794:	str	r3, [r0, r2]
    b798:	ldr	r2, [r3]
    b79c:	orr	r2, r2, #128	; 0x80
    b7a0:	str	r2, [r3]
    b7a4:	vstr	d7, [r3, #208]	; 0xd0
    b7a8:	b	ae14 <fputs@plt+0x1a58>
    b7ac:	ldr	r3, [sl, #-48]	; 0xffffffd0
    b7b0:	movw	r2, #60264	; 0xeb68
    b7b4:	add	ip, sp, #5440	; 0x1540
    b7b8:	movt	r2, #65535	; 0xffff
    b7bc:	vldr	d6, [r3, #216]	; 0xd8
    b7c0:	mov	r1, #3
    b7c4:	str	r3, [ip, r2]
    b7c8:	ldr	r2, [r3]
    b7cc:	str	r1, [r3, #200]	; 0xc8
    b7d0:	orr	r2, r2, #128	; 0x80
    b7d4:	str	r2, [r3]
    b7d8:	vldr	d7, [sl]
    b7dc:	vsub.f64	d7, d6, d7
    b7e0:	vstr	d7, [r3, #216]	; 0xd8
    b7e4:	b	ae14 <fputs@plt+0x1a58>
    b7e8:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b7ec:	vldr	d6, [r3, #216]	; 0xd8
    b7f0:	vldr	d7, [r3, #136]	; 0x88
    b7f4:	vsub.f64	d7, d6, d7
    b7f8:	mov	r1, #3
    b7fc:	movw	r2, #60264	; 0xeb68
    b800:	str	r1, [r3, #200]	; 0xc8
    b804:	movt	r2, #65535	; 0xffff
    b808:	add	r1, sp, #5440	; 0x1540
    b80c:	str	r3, [r1, r2]
    b810:	ldr	r2, [r3]
    b814:	orr	r2, r2, #128	; 0x80
    b818:	str	r2, [r3]
    b81c:	vstr	d7, [r3, #216]	; 0xd8
    b820:	b	ae14 <fputs@plt+0x1a58>
    b824:	ldr	r3, [sl, #-48]	; 0xffffffd0
    b828:	movw	r2, #60264	; 0xeb68
    b82c:	add	r0, sp, #5440	; 0x1540
    b830:	movt	r2, #65535	; 0xffff
    b834:	vldr	d6, [r3, #216]	; 0xd8
    b838:	mov	r1, #1
    b83c:	str	r3, [r0, r2]
    b840:	ldr	r2, [r3]
    b844:	str	r1, [r3, #200]	; 0xc8
    b848:	orr	r2, r2, #128	; 0x80
    b84c:	str	r2, [r3]
    b850:	vldr	d7, [sl]
    b854:	vadd.f64	d7, d6, d7
    b858:	vstr	d7, [r3, #216]	; 0xd8
    b85c:	b	ae14 <fputs@plt+0x1a58>
    b860:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b864:	vldr	d6, [r3, #216]	; 0xd8
    b868:	vldr	d7, [r3, #136]	; 0x88
    b86c:	vadd.f64	d7, d6, d7
    b870:	movw	r2, #60264	; 0xeb68
    b874:	add	ip, sp, #5440	; 0x1540
    b878:	movt	r2, #65535	; 0xffff
    b87c:	mov	r1, #1
    b880:	str	r1, [r3, #200]	; 0xc8
    b884:	str	r3, [ip, r2]
    b888:	ldr	r2, [r3]
    b88c:	orr	r2, r2, #128	; 0x80
    b890:	str	r2, [r3]
    b894:	vstr	d7, [r3, #216]	; 0xd8
    b898:	b	ae14 <fputs@plt+0x1a58>
    b89c:	ldr	r3, [sl, #-24]	; 0xffffffe8
    b8a0:	add	r1, sp, #5440	; 0x1540
    b8a4:	movw	r2, #60264	; 0xeb68
    b8a8:	movt	r2, #65535	; 0xffff
    b8ac:	str	r3, [r1, r2]
    b8b0:	ldr	r2, [r3, #200]	; 0xc8
    b8b4:	ldr	r1, [r3]
    b8b8:	orr	r1, r1, #128	; 0x80
    b8bc:	str	r1, [r3]
    b8c0:	cmp	r2, #3
    b8c4:	ldrls	pc, [pc, r2, lsl #2]
    b8c8:	b	ae14 <fputs@plt+0x1a58>
    b8cc:	andeq	sp, r0, ip, lsl #27
    b8d0:	andeq	sp, r0, r8, ror sp
    b8d4:	andeq	sp, r0, r4, ror #26
    b8d8:	andeq	sp, r0, r0, asr sp
    b8dc:	vmov.f64	d7, #96	; 0x3f000000  0.5
    b8e0:	ldr	r3, [sl, #-48]	; 0xffffffd0
    b8e4:	movw	r2, #60264	; 0xeb68
    b8e8:	add	r0, sp, #5440	; 0x1540
    b8ec:	movt	r2, #65535	; 0xffff
    b8f0:	str	r3, [r0, r2]
    b8f4:	vldr	d6, [sl]
    b8f8:	ldr	r2, [r3]
    b8fc:	orr	r2, r2, #16384	; 0x4000
    b900:	str	r2, [r3]
    b904:	vmul.f64	d7, d6, d7
    b908:	vstr	d7, [r3, #112]	; 0x70
    b90c:	b	ae14 <fputs@plt+0x1a58>
    b910:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b914:	movw	r3, #60264	; 0xeb68
    b918:	add	ip, sp, #5440	; 0x1540
    b91c:	movt	r3, #65535	; 0xffff
    b920:	str	r1, [ip, r3]
    b924:	ldrd	r2, [sl]
    b928:	ldr	r0, [r1]
    b92c:	strd	r2, [r1, #120]	; 0x78
    b930:	orr	r3, r0, #8192	; 0x2000
    b934:	str	r3, [r1]
    b938:	b	ae14 <fputs@plt+0x1a58>
    b93c:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b940:	add	r2, sp, #5440	; 0x1540
    b944:	movw	r3, #60264	; 0xeb68
    b948:	movt	r3, #65535	; 0xffff
    b94c:	str	r1, [r2, r3]
    b950:	ldrd	r2, [sl]
    b954:	ldr	r0, [r1]
    b958:	strd	r2, [r1, #112]	; 0x70
    b95c:	orr	r3, r0, #16384	; 0x4000
    b960:	str	r3, [r1]
    b964:	b	ae14 <fputs@plt+0x1a58>
    b968:	ldr	r1, [sl, #-48]	; 0xffffffd0
    b96c:	add	r0, sp, #5440	; 0x1540
    b970:	movw	r3, #60264	; 0xeb68
    b974:	movt	r3, #65535	; 0xffff
    b978:	str	r1, [r0, r3]
    b97c:	ldrd	r2, [sl]
    b980:	ldr	r0, [r1]
    b984:	strd	r2, [r1, #104]	; 0x68
    b988:	orr	r3, r0, #4096	; 0x1000
    b98c:	str	r3, [r1]
    b990:	b	ae14 <fputs@plt+0x1a58>
    b994:	ldr	r3, [sl, #-48]	; 0xffffffd0
    b998:	mov	r0, #232	; 0xe8
    b99c:	ldr	lr, [sp, #32]
    b9a0:	ldrd	r2, [r3]
    b9a4:	strd	r2, [lr, #8]
    b9a8:	ldr	r3, [sl, #-48]	; 0xffffffd0
    b9ac:	ldrd	r2, [r3, #8]
    b9b0:	strd	r2, [lr, #16]
    b9b4:	ldr	r3, [sl, #-48]	; 0xffffffd0
    b9b8:	ldr	r3, [r3, #16]
    b9bc:	str	r3, [lr, #4]
    b9c0:	bl	209a0 <_Znwj@@Base>
    b9c4:	mov	r1, #10
    b9c8:	mov	r5, r0
    b9cc:	bl	1667c <fputs@plt+0xd2c0>
    b9d0:	add	r2, sp, #5440	; 0x1540
    b9d4:	movw	r4, #60264	; 0xeb68
    b9d8:	movt	r4, #65535	; 0xffff
    b9dc:	add	r1, r5, #8
    b9e0:	ldr	r0, [pc, #3780]	; c8ac <fputs@plt+0x34f0>
    b9e4:	str	r5, [r2, r4]
    b9e8:	bl	167e8 <fputs@plt+0xd42c>
    b9ec:	add	ip, sp, #5440	; 0x1540
    b9f0:	movw	r3, #284	; 0x11c
    b9f4:	movt	r3, #3
    b9f8:	ldr	lr, [sp, #32]
    b9fc:	ldr	r2, [ip, r4]
    ba00:	ldr	r1, [r3]
    ba04:	str	r1, [r2, #16]
    ba08:	ldr	r2, [sl, #-48]	; 0xffffffd0
    ba0c:	ldr	r2, [r2, #28]
    ba10:	str	r2, [r3]
    ba14:	ldr	r3, [sl, #-48]	; 0xffffffd0
    ba18:	ldr	r3, [r3, #24]
    ba1c:	str	r3, [lr]
    ba20:	ldr	r0, [sl, #-48]	; 0xffffffd0
    ba24:	bl	209f0 <_ZdlPv@@Base>
    ba28:	b	ae14 <fputs@plt+0x1a58>
    ba2c:	mov	r0, #32
    ba30:	movw	r5, #284	; 0x11c
    ba34:	bl	209a0 <_Znwj@@Base>
    ba38:	ldr	r3, [sp, #32]
    ba3c:	ldr	lr, [sp, #32]
    ba40:	add	r2, sp, #5440	; 0x1540
    ba44:	movt	r5, #3
    ba48:	ldr	ip, [r3, #4]
    ba4c:	movw	r3, #60264	; 0xeb68
    ba50:	movt	r3, #65535	; 0xffff
    ba54:	ldr	r1, [lr]
    ba58:	mov	r4, r0
    ba5c:	str	r4, [r2, r3]
    ba60:	ldrd	r2, [lr, #8]
    ba64:	ldr	r0, [r5]
    ba68:	str	ip, [r4, #16]
    ba6c:	strd	r2, [r4]
    ba70:	vstr	d8, [lr, #8]
    ba74:	ldrd	r2, [lr, #16]
    ba78:	str	r0, [r4, #28]
    ba7c:	mov	r0, #12
    ba80:	str	r1, [r4, #24]
    ba84:	strd	r2, [r4, #8]
    ba88:	vstr	d8, [lr, #16]
    ba8c:	bl	209a0 <_Znwj@@Base>
    ba90:	str	r0, [sp, #64]	; 0x40
    ba94:	bl	9a58 <fputs@plt+0x69c>
    ba98:	ldr	r3, [sp, #64]	; 0x40
    ba9c:	ldr	ip, [sp, #32]
    baa0:	str	r3, [r5]
    baa4:	str	r4, [ip]
    baa8:	bl	16768 <fputs@plt+0xd3ac>
    baac:	mov	r1, r0
    bab0:	ldr	r0, [pc, #3572]	; c8ac <fputs@plt+0x34f0>
    bab4:	bl	167bc <fputs@plt+0xd400>
    bab8:	b	ae14 <fputs@plt+0x1a58>
    babc:	mov	r0, #232	; 0xe8
    bac0:	bl	209a0 <_Znwj@@Base>
    bac4:	mov	r1, #9
    bac8:	mov	r5, r0
    bacc:	bl	1667c <fputs@plt+0xd2c0>
    bad0:	add	lr, sp, #5440	; 0x1540
    bad4:	movw	r3, #60264	; 0xeb68
    bad8:	movt	r3, #65535	; 0xffff
    badc:	add	r1, sp, #72	; 0x48
    bae0:	mov	r2, #1
    bae4:	movw	r0, #19012	; 0x4a44
    bae8:	str	r5, [lr, r3]
    baec:	movt	r0, #2
    baf0:	ldrd	r4, [sl]
    baf4:	strd	r4, [sp, #72]	; 0x48
    baf8:	bl	a35c <fputs@plt+0xfa0>
    bafc:	mov	r4, r0
    bb00:	mov	r0, #24
    bb04:	bl	209a0 <_Znwj@@Base>
    bb08:	mov	r1, r4
    bb0c:	mov	r2, #0
    bb10:	mvn	r3, #0
    bb14:	mov	r5, r0
    bb18:	bl	16634 <fputs@plt+0xd278>
    bb1c:	movw	r3, #60264	; 0xeb68
    bb20:	add	r0, sp, #5440	; 0x1540
    bb24:	movt	r3, #65535	; 0xffff
    bb28:	ldr	r3, [r0, r3]
    bb2c:	str	r5, [r3, #100]	; 0x64
    bb30:	b	ae14 <fputs@plt+0x1a58>
    bb34:	mov	r0, #232	; 0xe8
    bb38:	bl	209a0 <_Znwj@@Base>
    bb3c:	mov	r1, #9
    bb40:	mov	r5, r0
    bb44:	bl	1667c <fputs@plt+0xd2c0>
    bb48:	add	r1, sp, #5440	; 0x1540
    bb4c:	movw	r2, #60264	; 0xeb68
    bb50:	movt	r2, #65535	; 0xffff
    bb54:	movw	r3, #19012	; 0x4a44
    bb58:	movt	r3, #2
    bb5c:	str	r5, [r1, r2]
    bb60:	add	r1, sp, #80	; 0x50
    bb64:	ldr	r0, [sl]
    bb68:	mov	r2, #1
    bb6c:	ldrd	r4, [sl, #-24]	; 0xffffffe8
    bb70:	cmp	r0, #0
    bb74:	moveq	r0, r3
    bb78:	strd	r4, [sp, #80]	; 0x50
    bb7c:	bl	a35c <fputs@plt+0xfa0>
    bb80:	mov	r4, r0
    bb84:	mov	r0, #24
    bb88:	bl	209a0 <_Znwj@@Base>
    bb8c:	mov	r1, r4
    bb90:	ldmib	sl, {r2, r3}
    bb94:	mov	r5, r0
    bb98:	bl	16634 <fputs@plt+0xd278>
    bb9c:	movw	r3, #60264	; 0xeb68
    bba0:	add	r2, sp, #5440	; 0x1540
    bba4:	movt	r3, #65535	; 0xffff
    bba8:	ldr	r3, [r2, r3]
    bbac:	str	r5, [r3, #100]	; 0x64
    bbb0:	ldr	r0, [sl]
    bbb4:	cmp	r0, #0
    bbb8:	beq	ae14 <fputs@plt+0x1a58>
    bbbc:	bl	92f0 <_ZdaPv@plt>
    bbc0:	b	ae14 <fputs@plt+0x1a58>
    bbc4:	mov	r0, #232	; 0xe8
    bbc8:	bl	209a0 <_Znwj@@Base>
    bbcc:	mov	r1, #9
    bbd0:	mov	r5, r0
    bbd4:	bl	1667c <fputs@plt+0xd2c0>
    bbd8:	add	r2, sp, #5440	; 0x1540
    bbdc:	movw	r3, #60264	; 0xeb68
    bbe0:	movt	r3, #65535	; 0xffff
    bbe4:	mov	r0, #24
    bbe8:	str	r5, [r2, r3]
    bbec:	bl	209a0 <_Znwj@@Base>
    bbf0:	ldm	sl, {r1, r2, r3}
    bbf4:	mov	r5, r0
    bbf8:	bl	16634 <fputs@plt+0xd278>
    bbfc:	movw	r3, #60264	; 0xeb68
    bc00:	add	ip, sp, #5440	; 0x1540
    bc04:	movt	r3, #65535	; 0xffff
    bc08:	ldr	r3, [ip, r3]
    bc0c:	str	r5, [r3, #100]	; 0x64
    bc10:	b	ae14 <fputs@plt+0x1a58>
    bc14:	mov	r0, #232	; 0xe8
    bc18:	bl	209a0 <_Znwj@@Base>
    bc1c:	mov	r1, #5
    bc20:	mov	r5, r0
    bc24:	bl	1667c <fputs@plt+0xd2c0>
    bc28:	add	r2, sp, #5440	; 0x1540
    bc2c:	movw	r3, #60264	; 0xeb68
    bc30:	movt	r3, #65535	; 0xffff
    bc34:	movw	r0, #19016	; 0x4a48
    bc38:	movt	r0, #2
    bc3c:	str	r5, [r2, r3]
    bc40:	bl	9e90 <fputs@plt+0xad4>
    bc44:	add	ip, sp, #5440	; 0x1540
    bc48:	cmp	r0, #0
    bc4c:	ldrdne	r2, [r0, #8]
    bc50:	movw	r0, #19024	; 0x4a50
    bc54:	movt	r0, #2
    bc58:	strdne	r2, [r5, #136]	; 0x88
    bc5c:	movw	r3, #60264	; 0xeb68
    bc60:	movt	r3, #65535	; 0xffff
    bc64:	ldr	r4, [ip, r3]
    bc68:	bl	9e90 <fputs@plt+0xad4>
    bc6c:	add	r1, sp, #5440	; 0x1540
    bc70:	cmp	r0, #0
    bc74:	ldrdne	r2, [r0, #8]
    bc78:	ldr	r0, [sp, #32]
    bc7c:	strdne	r2, [r4, #128]	; 0x80
    bc80:	movw	r3, #60264	; 0xeb68
    bc84:	movt	r3, #65535	; 0xffff
    bc88:	ldr	r2, [r0, #4]
    bc8c:	ldr	r3, [r1, r3]
    bc90:	str	r2, [r3, #200]	; 0xc8
    bc94:	b	ae14 <fputs@plt+0x1a58>
    bc98:	mov	r0, #232	; 0xe8
    bc9c:	bl	209a0 <_Znwj@@Base>
    bca0:	mov	r1, #8
    bca4:	mov	r5, r0
    bca8:	bl	1667c <fputs@plt+0xd2c0>
    bcac:	add	r2, sp, #5440	; 0x1540
    bcb0:	movw	r3, #60264	; 0xeb68
    bcb4:	movt	r3, #65535	; 0xffff
    bcb8:	movw	r0, #19032	; 0x4a58
    bcbc:	movt	r0, #2
    bcc0:	str	r5, [r2, r3]
    bcc4:	bl	9e90 <fputs@plt+0xad4>
    bcc8:	add	ip, sp, #5440	; 0x1540
    bccc:	cmp	r0, #0
    bcd0:	ldrdne	r2, [r0, #8]
    bcd4:	movw	r0, #19040	; 0x4a60
    bcd8:	movt	r0, #2
    bcdc:	strdne	r2, [r5, #136]	; 0x88
    bce0:	movw	r3, #60264	; 0xeb68
    bce4:	movt	r3, #65535	; 0xffff
    bce8:	ldr	r4, [ip, r3]
    bcec:	bl	9e90 <fputs@plt+0xad4>
    bcf0:	add	r1, sp, #5440	; 0x1540
    bcf4:	cmp	r0, #0
    bcf8:	ldrdne	r2, [r0, #8]
    bcfc:	ldr	r0, [sp, #32]
    bd00:	strdne	r2, [r4, #128]	; 0x80
    bd04:	movw	r3, #60264	; 0xeb68
    bd08:	movt	r3, #65535	; 0xffff
    bd0c:	ldr	r2, [r0, #4]
    bd10:	ldr	r3, [r1, r3]
    bd14:	str	r2, [r3, #200]	; 0xc8
    bd18:	b	ae14 <fputs@plt+0x1a58>
    bd1c:	mov	r0, #232	; 0xe8
    bd20:	bl	209a0 <_Znwj@@Base>
    bd24:	mov	r1, #4
    bd28:	mov	r5, r0
    bd2c:	bl	1667c <fputs@plt+0xd2c0>
    bd30:	ldr	r0, [sp, #32]
    bd34:	movw	r3, #60264	; 0xeb68
    bd38:	add	r1, sp, #5440	; 0x1540
    bd3c:	movt	r3, #65535	; 0xffff
    bd40:	ldr	r2, [r0, #4]
    bd44:	str	r5, [r1, r3]
    bd48:	str	r2, [r5, #200]	; 0xc8
    bd4c:	b	ae14 <fputs@plt+0x1a58>
    bd50:	mov	r0, #232	; 0xe8
    bd54:	bl	209a0 <_Znwj@@Base>
    bd58:	mov	r1, #7
    bd5c:	mov	r5, r0
    bd60:	bl	1667c <fputs@plt+0xd2c0>
    bd64:	add	r2, sp, #5440	; 0x1540
    bd68:	movw	r3, #60264	; 0xeb68
    bd6c:	movt	r3, #65535	; 0xffff
    bd70:	movw	r0, #19016	; 0x4a48
    bd74:	movt	r0, #2
    bd78:	str	r5, [r2, r3]
    bd7c:	bl	9e90 <fputs@plt+0xad4>
    bd80:	add	ip, sp, #5440	; 0x1540
    bd84:	cmp	r0, #0
    bd88:	ldrdne	r2, [r0, #8]
    bd8c:	movw	r0, #19024	; 0x4a50
    bd90:	movt	r0, #2
    bd94:	strdne	r2, [r5, #136]	; 0x88
    bd98:	movw	r3, #60264	; 0xeb68
    bd9c:	movt	r3, #65535	; 0xffff
    bda0:	ldr	r4, [ip, r3]
    bda4:	bl	9e90 <fputs@plt+0xad4>
    bda8:	add	r1, sp, #5440	; 0x1540
    bdac:	cmp	r0, #0
    bdb0:	ldrdne	r2, [r0, #8]
    bdb4:	ldr	r0, [sp, #32]
    bdb8:	strdne	r2, [r4, #128]	; 0x80
    bdbc:	movw	r3, #60264	; 0xeb68
    bdc0:	movt	r3, #65535	; 0xffff
    bdc4:	ldr	r2, [r0, #4]
    bdc8:	ldr	r3, [r1, r3]
    bdcc:	str	r2, [r3, #200]	; 0xc8
    bdd0:	b	ae14 <fputs@plt+0x1a58>
    bdd4:	mov	r0, #232	; 0xe8
    bdd8:	bl	209a0 <_Znwj@@Base>
    bddc:	mov	r1, #2
    bde0:	mov	r5, r0
    bde4:	bl	1667c <fputs@plt+0xd2c0>
    bde8:	movw	r3, #60264	; 0xeb68
    bdec:	add	r2, sp, #5440	; 0x1540
    bdf0:	movt	r3, #65535	; 0xffff
    bdf4:	str	r5, [r2, r3]
    bdf8:	b	ae14 <fputs@plt+0x1a58>
    bdfc:	mov	r0, #232	; 0xe8
    be00:	bl	209a0 <_Znwj@@Base>
    be04:	mov	r1, #6
    be08:	mov	r5, r0
    be0c:	bl	1667c <fputs@plt+0xd2c0>
    be10:	add	r2, sp, #5440	; 0x1540
    be14:	movw	r3, #60264	; 0xeb68
    be18:	movt	r3, #65535	; 0xffff
    be1c:	movw	r0, #19016	; 0x4a48
    be20:	movt	r0, #2
    be24:	str	r5, [r2, r3]
    be28:	bl	9e90 <fputs@plt+0xad4>
    be2c:	add	ip, sp, #5440	; 0x1540
    be30:	cmp	r0, #0
    be34:	ldrdne	r2, [r0, #8]
    be38:	movw	r0, #19024	; 0x4a50
    be3c:	movt	r0, #2
    be40:	strdne	r2, [r5, #136]	; 0x88
    be44:	movw	r3, #60264	; 0xeb68
    be48:	movt	r3, #65535	; 0xffff
    be4c:	ldr	r4, [ip, r3]
    be50:	bl	9e90 <fputs@plt+0xad4>
    be54:	add	r1, sp, #5440	; 0x1540
    be58:	cmp	r0, #0
    be5c:	ldrdne	r2, [r0, #8]
    be60:	ldr	r0, [sp, #32]
    be64:	strdne	r2, [r4, #128]	; 0x80
    be68:	movw	r3, #60264	; 0xeb68
    be6c:	movt	r3, #65535	; 0xffff
    be70:	ldr	r2, [r0, #4]
    be74:	ldr	r3, [r1, r3]
    be78:	str	r2, [r3, #200]	; 0xc8
    be7c:	b	ae14 <fputs@plt+0x1a58>
    be80:	mov	r0, #232	; 0xe8
    be84:	bl	209a0 <_Znwj@@Base>
    be88:	mov	r1, #3
    be8c:	mov	r5, r0
    be90:	bl	1667c <fputs@plt+0xd2c0>
    be94:	movw	r3, #60264	; 0xeb68
    be98:	add	ip, sp, #5440	; 0x1540
    be9c:	movt	r3, #65535	; 0xffff
    bea0:	str	r5, [ip, r3]
    bea4:	b	ae14 <fputs@plt+0x1a58>
    bea8:	mov	r0, #232	; 0xe8
    beac:	bl	209a0 <_Znwj@@Base>
    beb0:	mov	r1, #1
    beb4:	mov	r5, r0
    beb8:	bl	1667c <fputs@plt+0xd2c0>
    bebc:	movw	r3, #60264	; 0xeb68
    bec0:	add	r1, sp, #5440	; 0x1540
    bec4:	movt	r3, #65535	; 0xffff
    bec8:	str	r5, [r1, r3]
    becc:	b	ae14 <fputs@plt+0x1a58>
    bed0:	vmov.f64	d6, #112	; 0x3f800000  1.0
    bed4:	vldr	d7, [sl]
    bed8:	vcmp.f64	d7, #0.0
    bedc:	vmrs	APSR_nzcv, fpscr
    bee0:	vmoveq.f64	d7, d6
    bee4:	vmovne.f64	d7, d8
    bee8:	vstr	d7, [r7]
    beec:	b	ae14 <fputs@plt+0x1a58>
    bef0:	ldr	r0, [sl]
    bef4:	bl	9ff4 <fputs@plt+0xc38>
    bef8:	ldr	r0, [sl]
    befc:	cmp	r0, #0
    bf00:	beq	ae14 <fputs@plt+0x1a58>
    bf04:	bl	92f0 <_ZdaPv@plt>
    bf08:	b	ae14 <fputs@plt+0x1a58>
    bf0c:	ldr	r0, [sl]
    bf10:	bl	9ff4 <fputs@plt+0xc38>
    bf14:	ldr	r0, [sl]
    bf18:	cmp	r0, #0
    bf1c:	beq	ae14 <fputs@plt+0x1a58>
    bf20:	bl	92f0 <_ZdaPv@plt>
    bf24:	b	ae14 <fputs@plt+0x1a58>
    bf28:	ldr	r0, [sl]
    bf2c:	bl	9ff4 <fputs@plt+0xc38>
    bf30:	ldr	r0, [sl]
    bf34:	cmp	r0, #0
    bf38:	beq	ae14 <fputs@plt+0x1a58>
    bf3c:	bl	92f0 <_ZdaPv@plt>
    bf40:	b	ae14 <fputs@plt+0x1a58>
    bf44:	movw	r0, #18808	; 0x4978
    bf48:	vmov.f64	d0, #112	; 0x3f800000  1.0
    bf4c:	movt	r0, #2
    bf50:	bl	9f44 <fputs@plt+0xb88>
    bf54:	b	ae14 <fputs@plt+0x1a58>
    bf58:	ldr	r2, [sp, #32]
    bf5c:	movw	r3, #2680	; 0xa78
    bf60:	movt	r3, #3
    bf64:	ldr	r1, [r2, #1072]	; 0x430
    bf68:	mov	r2, #0
    bf6c:	str	r2, [r3]
    bf70:	cmp	r1, r2
    bf74:	blt	e2e8 <fputs@plt+0x4f2c>
    bf78:	vldr	d7, [sl, #-72]	; 0xffffffb8
    bf7c:	vcmp.f64	d7, #0.0
    bf80:	vmrs	APSR_nzcv, fpscr
    bf84:	ldrne	r0, [sl, #-64]	; 0xffffffc0
    bf88:	ldreq	r0, [sl]
    bf8c:	bl	101c0 <fputs@plt+0x6e04>
    bf90:	ldr	r0, [sl, #-64]	; 0xffffffc0
    bf94:	cmp	r0, #0
    bf98:	beq	bfa0 <fputs@plt+0x2be4>
    bf9c:	bl	92f0 <_ZdaPv@plt>
    bfa0:	ldr	r0, [sl]
    bfa4:	cmp	r0, #0
    bfa8:	beq	ae14 <fputs@plt+0x1a58>
    bfac:	bl	92f0 <_ZdaPv@plt>
    bfb0:	b	ae14 <fputs@plt+0x1a58>
    bfb4:	movw	r3, #2680	; 0xa78
    bfb8:	movt	r3, #3
    bfbc:	mov	r2, #1
    bfc0:	str	r2, [r3]
    bfc4:	b	ae14 <fputs@plt+0x1a58>
    bfc8:	ldr	r1, [sp, #32]
    bfcc:	ldr	r3, [r1, #1072]	; 0x430
    bfd0:	cmp	r3, #0
    bfd4:	blt	e2e0 <fputs@plt+0x4f24>
    bfd8:	vldr	d7, [sl]
    bfdc:	vcmp.f64	d7, #0.0
    bfe0:	vmrs	APSR_nzcv, fpscr
    bfe4:	beq	bff0 <fputs@plt+0x2c34>
    bfe8:	ldr	r0, [sl, #8]
    bfec:	bl	101c0 <fputs@plt+0x6e04>
    bff0:	ldr	r0, [sl, #8]
    bff4:	cmp	r0, #0
    bff8:	beq	ae14 <fputs@plt+0x1a58>
    bffc:	bl	92f0 <_ZdaPv@plt>
    c000:	b	ae14 <fputs@plt+0x1a58>
    c004:	ldr	r0, [sp, #32]
    c008:	mov	r2, #0
    c00c:	movw	r3, #2680	; 0xa78
    c010:	movt	r3, #3
    c014:	ldr	r1, [r0, #1072]	; 0x430
    c018:	str	r2, [r3]
    c01c:	cmp	r1, r2
    c020:	blt	e308 <fputs@plt+0x4f4c>
    c024:	ldr	r0, [sl, #-192]	; 0xffffff40
    c028:	vldr	d0, [sl, #-144]	; 0xffffff70
    c02c:	vldr	d1, [sl, #-96]	; 0xffffffa0
    c030:	ldr	r1, [sl, #-64]	; 0xffffffc0
    c034:	vldr	d2, [sl, #-72]	; 0xffffffb8
    c038:	ldr	r2, [sl]
    c03c:	bl	100bc <fputs@plt+0x6d00>
    c040:	b	ae14 <fputs@plt+0x1a58>
    c044:	movw	r3, #2680	; 0xa78
    c048:	movt	r3, #3
    c04c:	mov	r2, #1
    c050:	str	r2, [r3]
    c054:	b	ae14 <fputs@plt+0x1a58>
    c058:	ldr	ip, [sp, #32]
    c05c:	ldr	r3, [ip, #1072]	; 0x430
    c060:	cmp	r3, #0
    c064:	blt	e300 <fputs@plt+0x4f44>
    c068:	ldr	r0, [sl, #-120]	; 0xffffff88
    c06c:	ldr	r1, [sl, #-48]	; 0xffffffd0
    c070:	ldr	r2, [sl]
    c074:	bl	10e6c <fputs@plt+0x7ab0>
    c078:	ldr	r0, [sl, #-48]	; 0xffffffd0
    c07c:	cmp	r0, #0
    c080:	beq	c088 <fputs@plt+0x2ccc>
    c084:	bl	92f0 <_ZdaPv@plt>
    c088:	ldr	r0, [sl]
    c08c:	cmp	r0, #0
    c090:	beq	ae14 <fputs@plt+0x1a58>
    c094:	bl	92f0 <_ZdaPv@plt>
    c098:	b	ae14 <fputs@plt+0x1a58>
    c09c:	movw	r3, #2680	; 0xa78
    c0a0:	movt	r3, #3
    c0a4:	mov	r2, #0
    c0a8:	str	r2, [r3]
    c0ac:	b	ae14 <fputs@plt+0x1a58>
    c0b0:	movw	r3, #2680	; 0xa78
    c0b4:	movt	r3, #3
    c0b8:	mov	r2, #2
    c0bc:	str	r2, [r3]
    c0c0:	b	ae14 <fputs@plt+0x1a58>
    c0c4:	ldr	r2, [sp, #32]
    c0c8:	ldr	r3, [r2, #1072]	; 0x430
    c0cc:	cmp	r3, #0
    c0d0:	blt	e310 <fputs@plt+0x4f54>
    c0d4:	ldr	r0, [sl]
    c0d8:	bl	10d68 <fputs@plt+0x79ac>
    c0dc:	b	ae14 <fputs@plt+0x1a58>
    c0e0:	ldr	r3, [sl, #-24]	; 0xffffffe8
    c0e4:	movw	r2, #60264	; 0xeb68
    c0e8:	add	ip, sp, #5440	; 0x1540
    c0ec:	movt	r2, #65535	; 0xffff
    c0f0:	str	r3, [ip, r2]
    c0f4:	ldr	r2, [r3]
    c0f8:	bic	r2, r2, #4
    c0fc:	str	r2, [r3]
    c100:	b	ae14 <fputs@plt+0x1a58>
    c104:	ldr	r4, [sl, #-24]	; 0xffffffe8
    c108:	movw	r2, #60264	; 0xeb68
    c10c:	add	lr, sp, #5440	; 0x1540
    c110:	movt	r2, #65535	; 0xffff
    c114:	ldr	r3, [r4, #100]	; 0x64
    c118:	str	r4, [lr, r2]
    c11c:	cmp	r3, #0
    c120:	addeq	r4, r4, #100	; 0x64
    c124:	bne	c130 <fputs@plt+0x2d74>
    c128:	b	c140 <fputs@plt+0x2d84>
    c12c:	mov	r3, r2
    c130:	ldr	r2, [r3]
    c134:	cmp	r2, #0
    c138:	bne	c12c <fputs@plt+0x2d70>
    c13c:	mov	r4, r3
    c140:	mov	r0, #24
    c144:	bl	209a0 <_Znwj@@Base>
    c148:	ldm	sl, {r1, r2, r3}
    c14c:	mov	r5, r0
    c150:	bl	16634 <fputs@plt+0xd278>
    c154:	str	r5, [r4]
    c158:	b	ae14 <fputs@plt+0x1a58>
    c15c:	movw	r3, #2680	; 0xa78
    c160:	movt	r3, #3
    c164:	mov	r2, #2
    c168:	str	r2, [r3]
    c16c:	b	ae14 <fputs@plt+0x1a58>
    c170:	movw	r2, #1080	; 0x438
    c174:	movt	r2, #3
    c178:	mov	r1, #0
    c17c:	movw	r3, #2680	; 0xa78
    c180:	ldr	r2, [r2]
    c184:	movt	r3, #3
    c188:	cmp	r2, r1
    c18c:	str	r1, [r3]
    c190:	beq	e060 <fputs@plt+0x4ca4>
    c194:	ldr	r1, [sl]
    c198:	add	r0, sp, #192	; 0xc0
    c19c:	bl	1f264 <fputs@plt+0x15ea8>
    c1a0:	movw	r2, #13880	; 0x3638
    c1a4:	movt	r2, #3
    c1a8:	movw	r0, #18980	; 0x4a24
    c1ac:	add	r1, sp, #192	; 0xc0
    c1b0:	movt	r0, #2
    c1b4:	mov	r3, r2
    c1b8:	bl	1024c <fputs@plt+0x6e90>
    c1bc:	ldr	r0, [sl]
    c1c0:	cmp	r0, #0
    c1c4:	beq	ae14 <fputs@plt+0x1a58>
    c1c8:	bl	92f0 <_ZdaPv@plt>
    c1cc:	b	ae14 <fputs@plt+0x1a58>
    c1d0:	movw	r3, #2680	; 0xa78
    c1d4:	movt	r3, #3
    c1d8:	mov	r2, #1
    c1dc:	str	r2, [r3]
    c1e0:	b	ae14 <fputs@plt+0x1a58>
    c1e4:	movw	r4, #1488	; 0x5d0
    c1e8:	movt	r4, #3
    c1ec:	movw	r2, #22208	; 0x56c0
    c1f0:	mov	r1, #1
    c1f4:	ldr	r0, [r4]
    c1f8:	movt	r2, #2
    c1fc:	ldr	r3, [sl]
    c200:	bl	92c0 <__fprintf_chk@plt>
    c204:	ldr	r0, [sl]
    c208:	cmp	r0, #0
    c20c:	beq	c214 <fputs@plt+0x2e58>
    c210:	bl	92f0 <_ZdaPv@plt>
    c214:	ldr	r0, [r4]
    c218:	bl	91dc <fflush@plt>
    c21c:	b	ae14 <fputs@plt+0x1a58>
    c220:	ldm	sl, {r0, r1, r2}
    c224:	bl	1672c <fputs@plt+0xd370>
    c228:	mov	r1, r0
    c22c:	ldr	r0, [pc, #1656]	; c8ac <fputs@plt+0x34f0>
    c230:	bl	167bc <fputs@plt+0xd400>
    c234:	b	ae14 <fputs@plt+0x1a58>
    c238:	ldm	sl, {r0, r1, r2}
    c23c:	bl	1672c <fputs@plt+0xd370>
    c240:	mov	r1, r0
    c244:	ldr	r0, [pc, #1632]	; c8ac <fputs@plt+0x34f0>
    c248:	bl	167bc <fputs@plt+0xd400>
    c24c:	b	ae14 <fputs@plt+0x1a58>
    c250:	ldr	r1, [sp, #32]
    c254:	mov	r3, #0
    c258:	str	r3, [r1, #4]
    c25c:	b	ae14 <fputs@plt+0x1a58>
    c260:	ldr	r0, [sp, #32]
    c264:	mov	r3, #2
    c268:	str	r3, [r0, #4]
    c26c:	b	ae14 <fputs@plt+0x1a58>
    c270:	ldr	ip, [sp, #32]
    c274:	mov	r3, #3
    c278:	str	r3, [ip, #4]
    c27c:	b	ae14 <fputs@plt+0x1a58>
    c280:	ldr	r2, [sp, #32]
    c284:	mov	r3, #1
    c288:	str	r3, [r2, #4]
    c28c:	b	ae14 <fputs@plt+0x1a58>
    c290:	ldrd	r2, [sl]
    c294:	strd	r2, [r7]
    c298:	mov	r3, #1
    c29c:	str	r3, [r7, #8]
    c2a0:	b	ae14 <fputs@plt+0x1a58>
    c2a4:	ldrd	r2, [sl]
    c2a8:	strd	r2, [r7]
    c2ac:	mov	r3, #0
    c2b0:	str	r3, [r7, #8]
    c2b4:	b	ae14 <fputs@plt+0x1a58>
    c2b8:	ldr	r0, [sl, #-48]	; 0xffffffd0
    c2bc:	vldr	d0, [sl]
    c2c0:	bl	9f44 <fputs@plt+0xb88>
    c2c4:	ldr	r0, [sl, #-48]	; 0xffffffd0
    c2c8:	cmp	r0, #0
    c2cc:	beq	ae14 <fputs@plt+0x1a58>
    c2d0:	bl	92f0 <_ZdaPv@plt>
    c2d4:	b	ae14 <fputs@plt+0x1a58>
    c2d8:	movw	r4, #2700	; 0xa8c
    c2dc:	movt	r4, #3
    c2e0:	ldr	r0, [r4]
    c2e4:	cmp	r0, #0
    c2e8:	beq	c2f0 <fputs@plt+0x2f34>
    c2ec:	bl	92f0 <_ZdaPv@plt>
    c2f0:	ldr	r0, [sl]
    c2f4:	bl	9200 <strlen@plt>
    c2f8:	add	r0, r0, #1
    c2fc:	bl	9278 <_Znaj@plt>
    c300:	str	r0, [r4]
    c304:	ldr	r1, [sl]
    c308:	bl	9248 <strcpy@plt>
    c30c:	ldr	r0, [sl]
    c310:	cmp	r0, #0
    c314:	beq	ae14 <fputs@plt+0x1a58>
    c318:	bl	92f0 <_ZdaPv@plt>
    c31c:	b	ae14 <fputs@plt+0x1a58>
    c320:	sub	r4, sl, #48	; 0x30
    c324:	mov	ip, r7
    c328:	ldm	r4!, {r0, r1, r2, r3}
    c32c:	stmia	ip!, {r0, r1, r2, r3}
    c330:	ldm	r4, {r0, r1}
    c334:	stm	ip, {r0, r1}
    c338:	b	ae14 <fputs@plt+0x1a58>
    c33c:	mov	r4, sl
    c340:	mov	ip, r7
    c344:	ldm	r4!, {r0, r1, r2, r3}
    c348:	stmia	ip!, {r0, r1, r2, r3}
    c34c:	ldm	r4, {r0, r1}
    c350:	stm	ip, {r0, r1}
    c354:	b	ae14 <fputs@plt+0x1a58>
    c358:	sub	r4, sl, #24
    c35c:	mov	ip, r7
    c360:	ldm	r4!, {r0, r1, r2, r3}
    c364:	stmia	ip!, {r0, r1, r2, r3}
    c368:	ldm	r4, {r0, r1}
    c36c:	stm	ip, {r0, r1}
    c370:	b	ae14 <fputs@plt+0x1a58>
    c374:	vldr	d7, [sl, #-48]	; 0xffffffd0
    c378:	vcmp.f64	d7, #0.0
    c37c:	vmrs	APSR_nzcv, fpscr
    c380:	beq	e06c <fputs@plt+0x4cb0>
    c384:	vmov.f64	d7, #112	; 0x3f800000  1.0
    c388:	vldr	d6, [sl]
    c38c:	vcmp.f64	d6, #0.0
    c390:	vmrs	APSR_nzcv, fpscr
    c394:	vmoveq.f64	d7, d8
    c398:	vstr	d7, [r7]
    c39c:	b	ae14 <fputs@plt+0x1a58>
    c3a0:	vldr	d7, [sl, #-48]	; 0xffffffd0
    c3a4:	vcmp.f64	d7, #0.0
    c3a8:	vmrs	APSR_nzcv, fpscr
    c3ac:	beq	e07c <fputs@plt+0x4cc0>
    c3b0:	vmov.f64	d7, #112	; 0x3f800000  1.0
    c3b4:	vldr	d6, [sl]
    c3b8:	vcmp.f64	d6, #0.0
    c3bc:	vmrs	APSR_nzcv, fpscr
    c3c0:	vmoveq.f64	d7, d8
    c3c4:	vstr	d7, [r7]
    c3c8:	b	ae14 <fputs@plt+0x1a58>
    c3cc:	movw	r4, #1496	; 0x5d8
    c3d0:	movt	r4, #3
    c3d4:	add	r1, r4, #8
    c3d8:	add	r2, r4, #4
    c3dc:	ldr	r0, [sl]
    c3e0:	movw	r5, #60264	; 0xeb68
    c3e4:	bl	18950 <fputs@plt+0xf594>
    c3e8:	movt	r5, #65535	; 0xffff
    c3ec:	mov	r1, r0
    c3f0:	cmp	r0, #0
    c3f4:	add	r0, sp, #5440	; 0x1540
    c3f8:	str	r1, [r0, r5]
    c3fc:	beq	af84 <fputs@plt+0x1bc8>
    c400:	ldr	r3, [sl]
    c404:	cmp	r3, #0
    c408:	beq	e054 <fputs@plt+0x4c98>
    c40c:	mov	r0, r3
    c410:	str	r3, [sp, #20]
    c414:	bl	1757c <fputs@plt+0xe1c0>
    c418:	ldr	r3, [sp, #20]
    c41c:	mov	r0, r3
    c420:	bl	209f0 <_ZdlPv@@Base>
    c424:	add	r2, sp, #5440	; 0x1540
    c428:	ldr	r1, [r2, r5]
    c42c:	cmp	r1, #0
    c430:	bne	e054 <fputs@plt+0x4c98>
    c434:	ldrd	r2, [r4, #8]
    c438:	strd	r2, [r7, #8]
    c43c:	ldrd	r2, [r4, #16]
    c440:	strd	r2, [r7, #16]
    c444:	b	ae14 <fputs@plt+0x1a58>
    c448:	movw	r3, #60264	; 0xeb68
    c44c:	add	r0, sp, #5440	; 0x1540
    c450:	movt	r3, #65535	; 0xffff
    c454:	mov	r2, #0
    c458:	str	r2, [r0, r3]
    c45c:	b	ae14 <fputs@plt+0x1a58>
    c460:	ldr	r0, [sp, #32]
    c464:	ldrd	r2, [r0, #8]
    c468:	ldr	r1, [r0, #4]
    c46c:	strd	r2, [r7]
    c470:	ldrd	r2, [r0, #16]
    c474:	str	r1, [r7, #16]
    c478:	strd	r2, [r7, #8]
    c47c:	b	ae14 <fputs@plt+0x1a58>
    c480:	mov	lr, sl
    c484:	mov	ip, r7
    c488:	ldm	lr!, {r0, r1, r2, r3}
    c48c:	stmia	ip!, {r0, r1, r2, r3}
    c490:	ldm	lr, {r0, r1}
    c494:	stm	ip, {r0, r1}
    c498:	mov	r1, r7
    c49c:	ldr	r0, [sl, #-72]	; 0xffffffb8
    c4a0:	bl	9edc <fputs@plt+0xb20>
    c4a4:	ldr	r0, [sl, #-72]	; 0xffffffb8
    c4a8:	cmp	r0, #0
    c4ac:	beq	ae14 <fputs@plt+0x1a58>
    c4b0:	bl	92f0 <_ZdaPv@plt>
    c4b4:	b	ae14 <fputs@plt+0x1a58>
    c4b8:	add	ip, sp, #5440	; 0x1540
    c4bc:	movw	r3, #60264	; 0xeb68
    c4c0:	movt	r3, #65535	; 0xffff
    c4c4:	mov	r2, #0
    c4c8:	str	r2, [ip, r3]
    c4cc:	ldrd	r2, [sl]
    c4d0:	strd	r2, [r7, #8]
    c4d4:	ldrd	r2, [sl, #8]
    c4d8:	strd	r2, [r7, #16]
    c4dc:	add	r7, sp, #168	; 0xa8
    c4e0:	ldr	r0, [sl, #-72]	; 0xffffffb8
    c4e4:	mov	r1, r7
    c4e8:	bl	9edc <fputs@plt+0xb20>
    c4ec:	ldr	r0, [sl, #-72]	; 0xffffffb8
    c4f0:	cmp	r0, #0
    c4f4:	beq	ae14 <fputs@plt+0x1a58>
    c4f8:	bl	92f0 <_ZdaPv@plt>
    c4fc:	b	ae14 <fputs@plt+0x1a58>
    c500:	mov	lr, sl
    c504:	mov	ip, r7
    c508:	ldm	lr!, {r0, r1, r2, r3}
    c50c:	stmia	ip!, {r0, r1, r2, r3}
    c510:	ldm	lr, {r0, r1}
    c514:	stm	ip, {r0, r1}
    c518:	mov	r1, r7
    c51c:	ldr	r0, [sl, #-72]	; 0xffffffb8
    c520:	bl	9edc <fputs@plt+0xb20>
    c524:	ldr	r0, [sl, #-72]	; 0xffffffb8
    c528:	cmp	r0, #0
    c52c:	beq	ae14 <fputs@plt+0x1a58>
    c530:	bl	92f0 <_ZdaPv@plt>
    c534:	b	ae14 <fputs@plt+0x1a58>
    c538:	sub	r4, sl, #72	; 0x48
    c53c:	mov	ip, r7
    c540:	ldm	r4!, {r0, r1, r2, r3}
    c544:	stmia	ip!, {r0, r1, r2, r3}
    c548:	ldm	r4, {r0, r1}
    c54c:	stm	ip, {r0, r1}
    c550:	b	ae14 <fputs@plt+0x1a58>
    c554:	ldrd	r2, [sl, #-48]	; 0xffffffd0
    c558:	ldr	r1, [sp, #32]
    c55c:	strd	r2, [r1, #8]
    c560:	ldrd	r2, [sl, #-40]	; 0xffffffd8
    c564:	strd	r2, [r1, #16]
    c568:	ldr	r3, [sl, #-32]	; 0xffffffe0
    c56c:	str	r3, [r1, #4]
    c570:	b	ae14 <fputs@plt+0x1a58>
    c574:	ldr	ip, [sp, #32]
    c578:	movw	r1, #60264	; 0xeb68
    c57c:	movt	r1, #65535	; 0xffff
    c580:	mov	r0, #0
    c584:	ldrd	r2, [ip, #8]
    c588:	add	ip, sp, #5440	; 0x1540
    c58c:	str	r0, [ip, r1]
    c590:	ldr	r0, [sp, #32]
    c594:	strd	r2, [r7, #8]
    c598:	ldrd	r2, [r0, #16]
    c59c:	strd	r2, [r7, #16]
    c5a0:	b	ae14 <fputs@plt+0x1a58>
    c5a4:	vmov.f64	d6, #112	; 0x3f800000  1.0
    c5a8:	vldr	d7, [sl]
    c5ac:	vcmp.f64	d7, #0.0
    c5b0:	vmrs	APSR_nzcv, fpscr
    c5b4:	vmoveq.f64	d7, d6
    c5b8:	vmovne.f64	d7, d8
    c5bc:	vstr	d7, [r7]
    c5c0:	b	ae14 <fputs@plt+0x1a58>
    c5c4:	vldr	d7, [sl, #-48]	; 0xffffffd0
    c5c8:	vcmp.f64	d7, #0.0
    c5cc:	vmrs	APSR_nzcv, fpscr
    c5d0:	vmovne.f64	d7, #112	; 0x3f800000  1.0
    c5d4:	bne	c5f4 <fputs@plt+0x3238>
    c5d8:	vldr	d7, [sl]
    c5dc:	vcmp.f64	d7, #0.0
    c5e0:	vmrs	APSR_nzcv, fpscr
    c5e4:	moveq	ip, #0
    c5e8:	movne	ip, #1
    c5ec:	vmov	s14, ip
    c5f0:	vcvt.f64.u32	d7, s14
    c5f4:	vstr	d7, [r7]
    c5f8:	b	ae14 <fputs@plt+0x1a58>
    c5fc:	vldr	d7, [sl, #-48]	; 0xffffffd0
    c600:	vcmp.f64	d7, #0.0
    c604:	vmrs	APSR_nzcv, fpscr
    c608:	vmovne.f64	d7, #112	; 0x3f800000  1.0
    c60c:	bne	c62c <fputs@plt+0x3270>
    c610:	vldr	d7, [sl]
    c614:	vcmp.f64	d7, #0.0
    c618:	vmrs	APSR_nzcv, fpscr
    c61c:	moveq	r3, #0
    c620:	movne	r3, #1
    c624:	vmov	s14, r3
    c628:	vcvt.f64.u32	d7, s14
    c62c:	vstr	d7, [r7]
    c630:	b	ae14 <fputs@plt+0x1a58>
    c634:	vldr	d7, [sl, #-48]	; 0xffffffd0
    c638:	vcmp.f64	d7, #0.0
    c63c:	vmrs	APSR_nzcv, fpscr
    c640:	vmovne.f64	d7, #112	; 0x3f800000  1.0
    c644:	bne	c664 <fputs@plt+0x32a8>
    c648:	vldr	d7, [sl]
    c64c:	vcmp.f64	d7, #0.0
    c650:	vmrs	APSR_nzcv, fpscr
    c654:	moveq	r2, #0
    c658:	movne	r2, #1
    c65c:	vmov	s14, r2
    c660:	vcvt.f64.u32	d7, s14
    c664:	vstr	d7, [r7]
    c668:	b	ae14 <fputs@plt+0x1a58>
    c66c:	vmov.f64	d5, #112	; 0x3f800000  1.0
    c670:	vldr	d7, [sl]
    c674:	vldr	d6, [sl, #-48]	; 0xffffffd0
    c678:	vcmp.f64	d6, d7
    c67c:	vmrs	APSR_nzcv, fpscr
    c680:	vmovne.f64	d7, d5
    c684:	vmoveq.f64	d7, d8
    c688:	vstr	d7, [r7]
    c68c:	b	ae14 <fputs@plt+0x1a58>
    c690:	mov	r2, #0
    c694:	mov	r3, #0
    c698:	mov	r1, #0
    c69c:	movt	r3, #16368	; 0x3ff0
    c6a0:	str	r1, [r7, #8]
    c6a4:	strd	r2, [r7]
    c6a8:	b	ae14 <fputs@plt+0x1a58>
    c6ac:	vldr	d7, [sl, #-48]	; 0xffffffd0
    c6b0:	vcmp.f64	d7, #0.0
    c6b4:	vmrs	APSR_nzcv, fpscr
    c6b8:	beq	e074 <fputs@plt+0x4cb8>
    c6bc:	vmov.f64	d7, #112	; 0x3f800000  1.0
    c6c0:	vldr	d6, [sl]
    c6c4:	vcmp.f64	d6, #0.0
    c6c8:	vmrs	APSR_nzcv, fpscr
    c6cc:	vmoveq.f64	d7, d8
    c6d0:	vstr	d7, [r7]
    c6d4:	b	ae14 <fputs@plt+0x1a58>
    c6d8:	ldr	r0, [sl, #-48]	; 0xffffffd0
    c6dc:	ldr	r1, [sl]
    c6e0:	bl	9380 <strcmp@plt>
    c6e4:	vmov.f64	d7, #112	; 0x3f800000  1.0
    c6e8:	cmp	r0, #0
    c6ec:	vmovne.f64	d7, d8
    c6f0:	vstr	d7, [r7]
    c6f4:	ldr	r0, [sl, #-48]	; 0xffffffd0
    c6f8:	cmp	r0, #0
    c6fc:	beq	c704 <fputs@plt+0x3348>
    c700:	bl	92f0 <_ZdaPv@plt>
    c704:	ldr	r0, [sl]
    c708:	cmp	r0, #0
    c70c:	beq	ae14 <fputs@plt+0x1a58>
    c710:	bl	92f0 <_ZdaPv@plt>
    c714:	b	ae14 <fputs@plt+0x1a58>
    c718:	ldm	sl, {r0, r1, r2}
    c71c:	stm	r7, {r0, r1, r2}
    c720:	b	ae14 <fputs@plt+0x1a58>
    c724:	mov	r0, #15
    c728:	bl	9278 <_Znaj@plt>
    c72c:	add	lr, sp, #5440	; 0x1540
    c730:	movw	ip, #60264	; 0xeb68
    c734:	movt	ip, #65535	; 0xffff
    c738:	movw	r3, #19012	; 0x4a44
    c73c:	mov	r1, #1
    c740:	movt	r3, #2
    c744:	mov	r2, #15
    c748:	str	r0, [lr, ip]
    c74c:	ldrd	r4, [sl]
    c750:	strd	r4, [sp]
    c754:	bl	9338 <__sprintf_chk@plt>
    c758:	mov	r3, #0
    c75c:	str	r3, [r7, #4]
    c760:	str	r3, [r7, #8]
    c764:	b	ae14 <fputs@plt+0x1a58>
    c768:	ldm	sl, {r0, r1, r2}
    c76c:	stm	r7, {r0, r1, r2}
    c770:	b	ae14 <fputs@plt+0x1a58>
    c774:	movw	r3, #2680	; 0xa78
    c778:	movt	r3, #3
    c77c:	mov	r2, #1
    c780:	str	r2, [r3]
    c784:	b	ae14 <fputs@plt+0x1a58>
    c788:	mov	r0, #31
    c78c:	bl	9278 <_Znaj@plt>
    c790:	add	lr, sp, #5440	; 0x1540
    c794:	movw	ip, #60264	; 0xeb68
    c798:	movt	ip, #65535	; 0xffff
    c79c:	movw	r3, #19008	; 0x4a40
    c7a0:	mov	r1, #1
    c7a4:	movt	r3, #2
    c7a8:	mov	r2, #31
    c7ac:	str	r0, [lr, ip]
    c7b0:	ldrd	r4, [sl]
    c7b4:	strd	r4, [sp]
    c7b8:	ldrd	r4, [sl, #8]
    c7bc:	strd	r4, [sp, #8]
    c7c0:	bl	9338 <__sprintf_chk@plt>
    c7c4:	mov	r3, #0
    c7c8:	str	r3, [r7, #4]
    c7cc:	str	r3, [r7, #8]
    c7d0:	b	ae14 <fputs@plt+0x1a58>
    c7d4:	movw	r3, #2680	; 0xa78
    c7d8:	movt	r3, #3
    c7dc:	mov	r2, #0
    c7e0:	str	r2, [r3]
    c7e4:	ldrd	r2, [sl, #-72]	; 0xffffffb8
    c7e8:	strd	r2, [r7]
    c7ec:	ldr	r3, [sl]
    c7f0:	str	r3, [r7, #8]
    c7f4:	b	ae14 <fputs@plt+0x1a58>
    c7f8:	vldr	d7, [sl, #-48]	; 0xffffffd0
    c7fc:	vcmp.f64	d7, #0.0
    c800:	vmrs	APSR_nzcv, fpscr
    c804:	beq	dfcc <fputs@plt+0x4c10>
    c808:	vmov.f64	d7, #112	; 0x3f800000  1.0
    c80c:	vldr	d6, [sl]
    c810:	vcmp.f64	d6, #0.0
    c814:	vmrs	APSR_nzcv, fpscr
    c818:	vmoveq.f64	d7, d8
    c81c:	vstr	d7, [r7]
    c820:	b	ae14 <fputs@plt+0x1a58>
    c824:	ldr	r0, [sl, #-48]	; 0xffffffd0
    c828:	ldr	r1, [sl]
    c82c:	bl	9380 <strcmp@plt>
    c830:	vmov.f64	d7, #112	; 0x3f800000  1.0
    c834:	cmp	r0, #0
    c838:	vmoveq.f64	d7, d8
    c83c:	vstr	d7, [r7]
    c840:	ldr	r0, [sl, #-48]	; 0xffffffd0
    c844:	cmp	r0, #0
    c848:	beq	c850 <fputs@plt+0x3494>
    c84c:	bl	92f0 <_ZdaPv@plt>
    c850:	ldr	r0, [sl]
    c854:	cmp	r0, #0
    c858:	beq	ae14 <fputs@plt+0x1a58>
    c85c:	bl	92f0 <_ZdaPv@plt>
    c860:	b	ae14 <fputs@plt+0x1a58>
    c864:	ldrd	r2, [sl]
    c868:	strd	r2, [r7]
    c86c:	b	ae14 <fputs@plt+0x1a58>
    c870:	ldr	r2, [sl]
    c874:	movw	r3, #60264	; 0xeb68
    c878:	add	r1, sp, #5440	; 0x1540
    c87c:	movt	r3, #65535	; 0xffff
    c880:	str	r2, [r1, r3]
    c884:	b	ae14 <fputs@plt+0x1a58>
    c888:	ldrd	r2, [sl]
    c88c:	strd	r2, [r7]
    c890:	b	ae14 <fputs@plt+0x1a58>
    c894:	ldr	r1, [sp, #32]
    c898:	ldr	r0, [r1, #36]	; 0x24
    c89c:	cmp	r0, #0
    c8a0:	beq	ae14 <fputs@plt+0x1a58>
    c8a4:	bl	18cc0 <fputs@plt+0xf904>
    c8a8:	b	ae14 <fputs@plt+0x1a58>
    c8ac:	strdeq	r0, [r3], -ip
    c8b0:	ldr	lr, [sp, #32]
    c8b4:	ldr	r3, [lr, #1072]	; 0x430
    c8b8:	cmp	r3, #0
    c8bc:	blt	e290 <fputs@plt+0x4ed4>
    c8c0:	ldr	r0, [sl, #-48]	; 0xffffffd0
    c8c4:	ldr	r1, [sl]
    c8c8:	bl	10810 <fputs@plt+0x7454>
    c8cc:	ldr	r0, [sl, #-48]	; 0xffffffd0
    c8d0:	cmp	r0, #0
    c8d4:	beq	c8dc <fputs@plt+0x3520>
    c8d8:	bl	92f0 <_ZdaPv@plt>
    c8dc:	ldr	r0, [sl]
    c8e0:	cmp	r0, #0
    c8e4:	beq	ae14 <fputs@plt+0x1a58>
    c8e8:	bl	92f0 <_ZdaPv@plt>
    c8ec:	b	ae14 <fputs@plt+0x1a58>
    c8f0:	movw	r3, #2680	; 0xa78
    c8f4:	movt	r3, #3
    c8f8:	mov	r2, #0
    c8fc:	str	r2, [r3]
    c900:	b	ae14 <fputs@plt+0x1a58>
    c904:	ldr	r1, [sl, #-48]	; 0xffffffd0
    c908:	movw	r3, #60264	; 0xeb68
    c90c:	add	r0, sp, #5440	; 0x1540
    c910:	movt	r3, #65535	; 0xffff
    c914:	str	r1, [r0, r3]
    c918:	ldr	r3, [r1]
    c91c:	orr	r3, r3, #262144	; 0x40000
    c920:	str	r3, [r1]
    c924:	ldrd	r2, [sl]
    c928:	strd	r2, [r1, #160]	; 0xa0
    c92c:	b	ae14 <fputs@plt+0x1a58>
    c930:	ldr	r1, [sl, #-24]	; 0xffffffe8
    c934:	movw	r2, #60264	; 0xeb68
    c938:	add	ip, sp, #5440	; 0x1540
    c93c:	movt	r2, #65535	; 0xffff
    c940:	ldr	r3, [r1, #100]	; 0x64
    c944:	str	r1, [ip, r2]
    c948:	cmp	r3, #0
    c94c:	bne	c958 <fputs@plt+0x359c>
    c950:	b	ae14 <fputs@plt+0x1a58>
    c954:	mov	r3, r2
    c958:	ldr	r2, [r3]
    c95c:	cmp	r2, #0
    c960:	bne	c954 <fputs@plt+0x3598>
    c964:	mov	r2, #2
    c968:	str	r2, [r3, #12]
    c96c:	b	ae14 <fputs@plt+0x1a58>
    c970:	ldr	r1, [sl, #-24]	; 0xffffffe8
    c974:	movw	r2, #60264	; 0xeb68
    c978:	add	r0, sp, #5440	; 0x1540
    c97c:	movt	r2, #65535	; 0xffff
    c980:	ldr	r3, [r1, #100]	; 0x64
    c984:	str	r1, [r0, r2]
    c988:	cmp	r3, #0
    c98c:	bne	c998 <fputs@plt+0x35dc>
    c990:	b	ae14 <fputs@plt+0x1a58>
    c994:	mov	r3, r2
    c998:	ldr	r2, [r3]
    c99c:	cmp	r2, #0
    c9a0:	bne	c994 <fputs@plt+0x35d8>
    c9a4:	mov	r2, #1
    c9a8:	str	r2, [r3, #12]
    c9ac:	b	ae14 <fputs@plt+0x1a58>
    c9b0:	ldr	r1, [sl, #-24]	; 0xffffffe8
    c9b4:	movw	r2, #60264	; 0xeb68
    c9b8:	add	ip, sp, #5440	; 0x1540
    c9bc:	movt	r2, #65535	; 0xffff
    c9c0:	ldr	r3, [r1, #100]	; 0x64
    c9c4:	str	r1, [ip, r2]
    c9c8:	cmp	r3, #0
    c9cc:	bne	c9d8 <fputs@plt+0x361c>
    c9d0:	b	ae14 <fputs@plt+0x1a58>
    c9d4:	mov	r3, r2
    c9d8:	ldr	r2, [r3]
    c9dc:	cmp	r2, #0
    c9e0:	bne	c9d4 <fputs@plt+0x3618>
    c9e4:	mov	r2, #2
    c9e8:	str	r2, [r3, #8]
    c9ec:	b	ae14 <fputs@plt+0x1a58>
    c9f0:	vmov.f64	d5, #112	; 0x3f800000  1.0
    c9f4:	vldr	d7, [sl]
    c9f8:	vldr	d6, [sl, #-48]	; 0xffffffd0
    c9fc:	vcmp.f64	d6, d7
    ca00:	vmrs	APSR_nzcv, fpscr
    ca04:	vmoveq.f64	d7, d5
    ca08:	vmovne.f64	d7, d8
    ca0c:	vstr	d7, [r7]
    ca10:	b	ae14 <fputs@plt+0x1a58>
    ca14:	vmov.f64	d5, #112	; 0x3f800000  1.0
    ca18:	vldr	d7, [sl]
    ca1c:	vldr	d6, [sl, #-48]	; 0xffffffd0
    ca20:	vcmpe.f64	d6, d7
    ca24:	vmrs	APSR_nzcv, fpscr
    ca28:	vmovlt.f64	d7, d8
    ca2c:	vmovge.f64	d7, d5
    ca30:	vstr	d7, [r7]
    ca34:	b	ae14 <fputs@plt+0x1a58>
    ca38:	vmov.f64	d5, #112	; 0x3f800000  1.0
    ca3c:	vldr	d7, [sl]
    ca40:	vldr	d6, [sl, #-48]	; 0xffffffd0
    ca44:	vcmpe.f64	d6, d7
    ca48:	vmrs	APSR_nzcv, fpscr
    ca4c:	vmovle.f64	d7, d8
    ca50:	vmovgt.f64	d7, d5
    ca54:	vstr	d7, [r7]
    ca58:	b	ae14 <fputs@plt+0x1a58>
    ca5c:	vmov.f64	d5, #112	; 0x3f800000  1.0
    ca60:	vldr	d7, [sl]
    ca64:	vldr	d6, [sl, #-48]	; 0xffffffd0
    ca68:	vcmpe.f64	d6, d7
    ca6c:	vmrs	APSR_nzcv, fpscr
    ca70:	vmovhi.f64	d7, d8
    ca74:	vmovls.f64	d7, d5
    ca78:	vstr	d7, [r7]
    ca7c:	b	ae14 <fputs@plt+0x1a58>
    ca80:	vstr	d8, [r7]
    ca84:	vldr	d7, [sl, #-24]	; 0xffffffe8
    ca88:	vcvt.u32.f64	s13, d7
    ca8c:	vmov	r0, s13
    ca90:	bl	90c8 <srand@plt>
    ca94:	b	ae14 <fputs@plt+0x1a58>
    ca98:	bl	9320 <rand@plt>
    ca9c:	ubfx	r0, r0, #0, #15
    caa0:	vmov	s13, r0
    caa4:	vcvt.f64.s32	d7, s13
    caa8:	vmul.f64	d7, d7, d10
    caac:	vstr	d7, [r7]
    cab0:	b	ae14 <fputs@plt+0x1a58>
    cab4:	bl	9320 <rand@plt>
    cab8:	vldr	d7, [sl, #-24]	; 0xffffffe8
    cabc:	ubfx	r0, r0, #0, #15
    cac0:	vmov	s13, r0
    cac4:	vcvt.f64.s32	d0, s13
    cac8:	vdiv.f64	d0, d0, d9
    cacc:	vmul.f64	d0, d0, d7
    cad0:	bl	91a0 <floor@plt>
    cad4:	vmov.f64	d7, #112	; 0x3f800000  1.0
    cad8:	vadd.f64	d0, d0, d7
    cadc:	vstr	d0, [r7]
    cae0:	b	ae14 <fputs@plt+0x1a58>
    cae4:	vldr	d0, [sl, #-24]	; 0xffffffe8
    cae8:	vcmpe.f64	d0, #0.0
    caec:	vmrs	APSR_nzcv, fpscr
    caf0:	bmi	defc <fputs@plt+0x4b40>
    caf4:	bl	91a0 <floor@plt>
    caf8:	vstr	d0, [r7]
    cafc:	b	ae14 <fputs@plt+0x1a58>
    cb00:	vldr	d6, [sl, #-72]	; 0xffffffb8
    cb04:	vldr	d7, [sl, #-24]	; 0xffffffe8
    cb08:	vcmpe.f64	d6, d7
    cb0c:	vmrs	APSR_nzcv, fpscr
    cb10:	vmovmi.f64	d7, d6
    cb14:	vstr	d7, [r7]
    cb18:	b	ae14 <fputs@plt+0x1a58>
    cb1c:	vldr	d6, [sl, #-72]	; 0xffffffb8
    cb20:	vldr	d7, [sl, #-24]	; 0xffffffe8
    cb24:	vcmpe.f64	d6, d7
    cb28:	vmrs	APSR_nzcv, fpscr
    cb2c:	vmovgt.f64	d7, d6
    cb30:	vstr	d7, [r7]
    cb34:	b	ae14 <fputs@plt+0x1a58>
    cb38:	bl	9398 <__errno_location@plt>
    cb3c:	mov	r3, #0
    cb40:	str	r3, [r0]
    cb44:	vldr	d0, [sl, #-24]	; 0xffffffe8
    cb48:	vsqrt.f64	d7, d0
    cb4c:	mov	r4, r0
    cb50:	vcmp.f64	d7, d7
    cb54:	vmrs	APSR_nzcv, fpscr
    cb58:	bne	e2bc <fputs@plt+0x4f00>
    cb5c:	ldr	r3, [r4]
    cb60:	vstr	d7, [r7]
    cb64:	cmp	r3, #33	; 0x21
    cb68:	bne	ae14 <fputs@plt+0x1a58>
    cb6c:	movw	r1, #13880	; 0x3638
    cb70:	movt	r1, #3
    cb74:	movw	r0, #19512	; 0x4c38
    cb78:	movt	r0, #2
    cb7c:	mov	r2, r1
    cb80:	mov	r3, r1
    cb84:	bl	1024c <fputs@plt+0x6e90>
    cb88:	mov	r4, #1
    cb8c:	b	af88 <fputs@plt+0x1bcc>
    cb90:	bl	9398 <__errno_location@plt>
    cb94:	mov	r3, #0
    cb98:	vmov.f64	d0, #36	; 0x41200000  10.0
    cb9c:	str	r3, [r0]
    cba0:	vldr	d1, [sl, #-24]	; 0xffffffe8
    cba4:	mov	r4, r0
    cba8:	bl	911c <pow@plt>
    cbac:	ldr	r3, [r4]
    cbb0:	cmp	r3, #34	; 0x22
    cbb4:	vstr	d0, [r7]
    cbb8:	bne	ae14 <fputs@plt+0x1a58>
    cbbc:	movw	r1, #13880	; 0x3638
    cbc0:	movt	r1, #3
    cbc4:	movw	r0, #19488	; 0x4c20
    cbc8:	movt	r0, #2
    cbcc:	mov	r2, r1
    cbd0:	mov	r3, r1
    cbd4:	bl	1024c <fputs@plt+0x6e90>
    cbd8:	mov	r4, #1
    cbdc:	b	af88 <fputs@plt+0x1bcc>
    cbe0:	movw	r3, #60264	; 0xeb68
    cbe4:	add	ip, sp, #5440	; 0x1540
    cbe8:	movt	r3, #65535	; 0xffff
    cbec:	mov	r1, #64	; 0x40
    cbf0:	mov	r2, #1
    cbf4:	str	r2, [r7, #4]
    cbf8:	str	r1, [ip, r3]
    cbfc:	b	ae14 <fputs@plt+0x1a58>
    cc00:	movw	r3, #60264	; 0xeb68
    cc04:	add	r0, sp, #5440	; 0x1540
    cc08:	movt	r3, #65535	; 0xffff
    cc0c:	mov	r1, #52	; 0x34
    cc10:	mov	r2, #1
    cc14:	str	r2, [r7, #4]
    cc18:	str	r1, [r0, r3]
    cc1c:	b	ae14 <fputs@plt+0x1a58>
    cc20:	movw	r3, #60264	; 0xeb68
    cc24:	add	ip, sp, #5440	; 0x1540
    cc28:	movt	r3, #65535	; 0xffff
    cc2c:	mov	r1, #44	; 0x2c
    cc30:	mov	r2, #1
    cc34:	str	r2, [r7, #4]
    cc38:	str	r1, [ip, r3]
    cc3c:	b	ae14 <fputs@plt+0x1a58>
    cc40:	movw	r3, #60264	; 0xeb68
    cc44:	add	r0, sp, #5440	; 0x1540
    cc48:	movt	r3, #65535	; 0xffff
    cc4c:	mov	r1, #48	; 0x30
    cc50:	mov	r2, #1
    cc54:	str	r2, [r7, #4]
    cc58:	str	r1, [r0, r3]
    cc5c:	b	ae14 <fputs@plt+0x1a58>
    cc60:	movw	r3, #60264	; 0xeb68
    cc64:	add	ip, sp, #5440	; 0x1540
    cc68:	movt	r3, #65535	; 0xffff
    cc6c:	mov	r1, #40	; 0x28
    cc70:	mov	r2, #1
    cc74:	str	r2, [r7, #4]
    cc78:	str	r1, [ip, r3]
    cc7c:	b	ae14 <fputs@plt+0x1a58>
    cc80:	movw	r3, #60264	; 0xeb68
    cc84:	add	r0, sp, #5440	; 0x1540
    cc88:	movt	r3, #65535	; 0xffff
    cc8c:	mov	r1, #28
    cc90:	mov	r2, #1
    cc94:	str	r2, [r7, #4]
    cc98:	str	r1, [r0, r3]
    cc9c:	b	ae14 <fputs@plt+0x1a58>
    cca0:	movw	r3, #60264	; 0xeb68
    cca4:	add	ip, sp, #5440	; 0x1540
    cca8:	movt	r3, #65535	; 0xffff
    ccac:	mov	r1, #36	; 0x24
    ccb0:	mov	r2, #1
    ccb4:	str	r2, [r7, #4]
    ccb8:	str	r1, [ip, r3]
    ccbc:	b	ae14 <fputs@plt+0x1a58>
    ccc0:	movw	r3, #60264	; 0xeb68
    ccc4:	add	r0, sp, #5440	; 0x1540
    ccc8:	movt	r3, #65535	; 0xffff
    cccc:	mov	r1, #32
    ccd0:	mov	r2, #1
    ccd4:	str	r2, [r7, #4]
    ccd8:	str	r1, [r0, r3]
    ccdc:	b	ae14 <fputs@plt+0x1a58>
    cce0:	movw	r3, #60264	; 0xeb68
    cce4:	add	ip, sp, #5440	; 0x1540
    cce8:	movt	r3, #65535	; 0xffff
    ccec:	mov	r1, #24
    ccf0:	mov	r2, #1
    ccf4:	str	r2, [r7, #4]
    ccf8:	str	r1, [ip, r3]
    ccfc:	b	ae14 <fputs@plt+0x1a58>
    cd00:	ldr	r1, [sl, #-24]	; 0xffffffe8
    cd04:	add	r0, sp, #192	; 0xc0
    cd08:	bl	1f264 <fputs@plt+0x15ea8>
    cd0c:	movw	r2, #13880	; 0x3638
    cd10:	movt	r2, #3
    cd14:	add	r1, sp, #192	; 0xc0
    cd18:	movw	r0, #19252	; 0x4b34
    cd1c:	movt	r0, #2
    cd20:	mov	r3, r2
    cd24:	bl	10f84 <fputs@plt+0x7bc8>
    cd28:	ldr	r0, [sl, #-24]	; 0xffffffe8
    cd2c:	cmp	r0, #0
    cd30:	beq	cd38 <fputs@plt+0x397c>
    cd34:	bl	92f0 <_ZdaPv@plt>
    cd38:	ldr	r2, [sl]
    cd3c:	movw	r3, #60264	; 0xeb68
    cd40:	add	r0, sp, #5440	; 0x1540
    cd44:	movt	r3, #65535	; 0xffff
    cd48:	str	r2, [r0, r3]
    cd4c:	b	ae14 <fputs@plt+0x1a58>
    cd50:	add	r5, sp, #128	; 0x80
    cd54:	ldr	r1, [sl, #-48]	; 0xffffffd0
    cd58:	sub	r4, r5, #24
    cd5c:	mov	r0, r4
    cd60:	bl	1f290 <fputs@plt+0x15ed4>
    cd64:	ldr	r3, [sl, #-48]	; 0xffffffd0
    cd68:	sub	r2, r3, #10
    cd6c:	cmp	r2, #10
    cd70:	movwls	r1, #20604	; 0x507c
    cd74:	movtls	r1, #2
    cd78:	bls	cdbc <fputs@plt+0x3a00>
    cd7c:	ldr	r2, [sp, #68]	; 0x44
    cd80:	smull	r2, r1, r2, r3
    cd84:	asr	r2, r3, #31
    cd88:	rsb	r2, r2, r1, asr #2
    cd8c:	add	r2, r2, r2, lsl #2
    cd90:	sub	r3, r3, r2, lsl #1
    cd94:	cmp	r3, #2
    cd98:	beq	e354 <fputs@plt+0x4f98>
    cd9c:	cmp	r3, #3
    cda0:	beq	e348 <fputs@plt+0x4f8c>
    cda4:	movw	r2, #20604	; 0x507c
    cda8:	cmp	r3, #1
    cdac:	movt	r2, #2
    cdb0:	movw	r1, #18852	; 0x49a4
    cdb4:	movt	r1, #2
    cdb8:	movne	r1, r2
    cdbc:	sub	r5, r5, #8
    cdc0:	mov	r0, r5
    cdc4:	bl	1f264 <fputs@plt+0x15ea8>
    cdc8:	ldr	r3, [sl, #-24]	; 0xffffffe8
    cdcc:	add	r0, sp, #192	; 0xc0
    cdd0:	sub	r3, r3, #1
    cdd4:	cmp	r3, #9
    cdd8:	addls	r3, r8, r3, lsl #2
    cddc:	movwhi	r1, #18864	; 0x49b0
    cde0:	ldrls	r1, [r3, #528]	; 0x210
    cde4:	movthi	r1, #2
    cde8:	bl	1f264 <fputs@plt+0x15ea8>
    cdec:	add	r3, sp, #192	; 0xc0
    cdf0:	mov	r2, r5
    cdf4:	mov	r1, r4
    cdf8:	movw	r0, #19212	; 0x4b0c
    cdfc:	movt	r0, #2
    ce00:	bl	10f84 <fputs@plt+0x7bc8>
    ce04:	ldr	r2, [sl]
    ce08:	movw	r3, #60264	; 0xeb68
    ce0c:	add	ip, sp, #5440	; 0x1540
    ce10:	movt	r3, #65535	; 0xffff
    ce14:	str	r2, [ip, r3]
    ce18:	b	ae14 <fputs@plt+0x1a58>
    ce1c:	ldr	r3, [sl, #-24]	; 0xffffffe8
    ce20:	add	r0, sp, #192	; 0xc0
    ce24:	sub	r3, r3, #1
    ce28:	cmp	r3, #9
    ce2c:	addls	r3, r8, r3, lsl #2
    ce30:	movwhi	r1, #18864	; 0x49b0
    ce34:	movthi	r1, #2
    ce38:	ldrls	r1, [r3, #528]	; 0x210
    ce3c:	bl	1f264 <fputs@plt+0x15ea8>
    ce40:	movw	r2, #13880	; 0x3638
    ce44:	movt	r2, #3
    ce48:	add	r1, sp, #192	; 0xc0
    ce4c:	movw	r0, #19172	; 0x4ae4
    ce50:	movt	r0, #2
    ce54:	mov	r3, r2
    ce58:	bl	10f84 <fputs@plt+0x7bc8>
    ce5c:	ldr	r2, [sl]
    ce60:	movw	r3, #60264	; 0xeb68
    ce64:	add	r0, sp, #5440	; 0x1540
    ce68:	movt	r3, #65535	; 0xffff
    ce6c:	str	r2, [r0, r3]
    ce70:	b	ae14 <fputs@plt+0x1a58>
    ce74:	add	r5, sp, #128	; 0x80
    ce78:	ldr	r1, [sl, #-72]	; 0xffffffb8
    ce7c:	sub	r4, r5, #24
    ce80:	mov	r0, r4
    ce84:	bl	1f290 <fputs@plt+0x15ed4>
    ce88:	ldr	r3, [sl, #-72]	; 0xffffffb8
    ce8c:	sub	r2, r3, #10
    ce90:	cmp	r2, #10
    ce94:	movwls	r1, #20604	; 0x507c
    ce98:	movtls	r1, #2
    ce9c:	bls	cee0 <fputs@plt+0x3b24>
    cea0:	ldr	r2, [sp, #68]	; 0x44
    cea4:	smull	r2, r1, r2, r3
    cea8:	asr	r2, r3, #31
    ceac:	rsb	r2, r2, r1, asr #2
    ceb0:	add	r2, r2, r2, lsl #2
    ceb4:	sub	r3, r3, r2, lsl #1
    ceb8:	cmp	r3, #2
    cebc:	beq	e33c <fputs@plt+0x4f80>
    cec0:	cmp	r3, #3
    cec4:	beq	e330 <fputs@plt+0x4f74>
    cec8:	movw	r2, #20604	; 0x507c
    cecc:	cmp	r3, #1
    ced0:	movt	r2, #2
    ced4:	movw	r1, #18852	; 0x49a4
    ced8:	movt	r1, #2
    cedc:	movne	r1, r2
    cee0:	sub	r5, r5, #8
    cee4:	mov	r0, r5
    cee8:	bl	1f264 <fputs@plt+0x15ea8>
    ceec:	ldr	r3, [sl, #-24]	; 0xffffffe8
    cef0:	add	r0, sp, #192	; 0xc0
    cef4:	sub	r3, r3, #1
    cef8:	cmp	r3, #9
    cefc:	addls	r3, r8, r3, lsl #2
    cf00:	movwhi	r1, #18864	; 0x49b0
    cf04:	ldrls	r1, [r3, #528]	; 0x210
    cf08:	movthi	r1, #2
    cf0c:	bl	1f264 <fputs@plt+0x15ea8>
    cf10:	add	r3, sp, #192	; 0xc0
    cf14:	mov	r2, r5
    cf18:	mov	r1, r4
    cf1c:	movw	r0, #19128	; 0x4ab8
    cf20:	movt	r0, #2
    cf24:	bl	10f84 <fputs@plt+0x7bc8>
    cf28:	ldr	r2, [sl]
    cf2c:	movw	r3, #60264	; 0xeb68
    cf30:	add	ip, sp, #5440	; 0x1540
    cf34:	movt	r3, #65535	; 0xffff
    cf38:	str	r2, [ip, r3]
    cf3c:	b	ae14 <fputs@plt+0x1a58>
    cf40:	ldr	r0, [sl, #-72]	; 0xffffffb8
    cf44:	add	r1, sp, #5440	; 0x1540
    cf48:	movw	r3, #60264	; 0xeb68
    cf4c:	movt	r3, #65535	; 0xffff
    cf50:	str	r0, [r1, r3]
    cf54:	ldr	r1, [sl, #-24]	; 0xffffffe8
    cf58:	bl	1770c <fputs@plt+0xe350>
    cf5c:	b	ae14 <fputs@plt+0x1a58>
    cf60:	ldr	r2, [sl]
    cf64:	movw	r3, #60264	; 0xeb68
    cf68:	add	r0, sp, #5440	; 0x1540
    cf6c:	movt	r3, #65535	; 0xffff
    cf70:	str	r2, [r0, r3]
    cf74:	b	ae14 <fputs@plt+0x1a58>
    cf78:	ldr	r2, [sl, #-24]	; 0xffffffe8
    cf7c:	add	lr, sp, #5440	; 0x1540
    cf80:	movw	r3, #60264	; 0xeb68
    cf84:	movt	r3, #65535	; 0xffff
    cf88:	mov	r0, r2
    cf8c:	str	r2, [lr, r3]
    cf90:	ldm	sl, {r1, r2}
    cf94:	bl	1766c <fputs@plt+0xe2b0>
    cf98:	b	ae14 <fputs@plt+0x1a58>
    cf9c:	ldr	r2, [sl]
    cfa0:	movw	r3, #60264	; 0xeb68
    cfa4:	add	ip, sp, #5440	; 0x1540
    cfa8:	movt	r3, #65535	; 0xffff
    cfac:	str	r2, [ip, r3]
    cfb0:	b	ae14 <fputs@plt+0x1a58>
    cfb4:	mov	r0, #40	; 0x28
    cfb8:	bl	209a0 <_Znwj@@Base>
    cfbc:	ldm	sl, {r1, r2}
    cfc0:	mov	r5, r0
    cfc4:	bl	1743c <fputs@plt+0xe080>
    cfc8:	movw	r3, #60264	; 0xeb68
    cfcc:	add	r2, sp, #5440	; 0x1540
    cfd0:	movt	r3, #65535	; 0xffff
    cfd4:	str	r5, [r2, r3]
    cfd8:	b	ae14 <fputs@plt+0x1a58>
    cfdc:	ldr	r0, [sl, #-48]	; 0xffffffd0
    cfe0:	add	r1, sp, #5440	; 0x1540
    cfe4:	movw	r3, #60264	; 0xeb68
    cfe8:	movt	r3, #65535	; 0xffff
    cfec:	str	r0, [r1, r3]
    cff0:	ldr	r1, [sl]
    cff4:	bl	176c0 <fputs@plt+0xe304>
    cff8:	b	ae14 <fputs@plt+0x1a58>
    cffc:	mov	r0, #40	; 0x28
    d000:	bl	209a0 <_Znwj@@Base>
    d004:	movw	ip, #60192	; 0xeb20
    d008:	add	r3, sp, #96	; 0x60
    d00c:	movt	ip, #65535	; 0xffff
    d010:	add	lr, sp, #5440	; 0x1540
    d014:	mov	r2, #0
    d018:	ldr	r1, [sl]
    d01c:	str	r2, [lr, ip]
    d020:	str	r2, [sp, #100]	; 0x64
    d024:	ldm	r3, {r2, r3}
    d028:	mov	r5, r0
    d02c:	bl	174b8 <fputs@plt+0xe0fc>
    d030:	movw	r3, #60264	; 0xeb68
    d034:	add	r0, sp, #5440	; 0x1540
    d038:	movt	r3, #65535	; 0xffff
    d03c:	str	r5, [r0, r3]
    d040:	b	ae14 <fputs@plt+0x1a58>
    d044:	movw	r3, #60264	; 0xeb68
    d048:	add	r0, sp, #5440	; 0x1540
    d04c:	movt	r3, #65535	; 0xffff
    d050:	mov	r2, #9
    d054:	str	r2, [r0, r3]
    d058:	b	ae14 <fputs@plt+0x1a58>
    d05c:	movw	r3, #60264	; 0xeb68
    d060:	add	ip, sp, #5440	; 0x1540
    d064:	movt	r3, #65535	; 0xffff
    d068:	mov	r2, #6
    d06c:	str	r2, [ip, r3]
    d070:	b	ae14 <fputs@plt+0x1a58>
    d074:	movw	r3, #60264	; 0xeb68
    d078:	add	r1, sp, #5440	; 0x1540
    d07c:	movt	r3, #65535	; 0xffff
    d080:	mov	r2, #4
    d084:	str	r2, [r1, r3]
    d088:	b	ae14 <fputs@plt+0x1a58>
    d08c:	movw	r3, #60264	; 0xeb68
    d090:	add	r0, sp, #5440	; 0x1540
    d094:	movt	r3, #65535	; 0xffff
    d098:	mov	r2, #3
    d09c:	str	r2, [r0, r3]
    d0a0:	b	ae14 <fputs@plt+0x1a58>
    d0a4:	movw	r3, #60264	; 0xeb68
    d0a8:	add	ip, sp, #5440	; 0x1540
    d0ac:	movt	r3, #65535	; 0xffff
    d0b0:	mov	r2, #2
    d0b4:	str	r2, [ip, r3]
    d0b8:	b	ae14 <fputs@plt+0x1a58>
    d0bc:	movw	r3, #60264	; 0xeb68
    d0c0:	add	r1, sp, #5440	; 0x1540
    d0c4:	movt	r3, #65535	; 0xffff
    d0c8:	mov	r2, #1
    d0cc:	str	r2, [r1, r3]
    d0d0:	b	ae14 <fputs@plt+0x1a58>
    d0d4:	ldr	lr, [sp, #32]
    d0d8:	ldr	r4, [lr, #40]	; 0x28
    d0dc:	cmp	r4, #0
    d0e0:	beq	e360 <fputs@plt+0x4fa4>
    d0e4:	mov	r2, #0
    d0e8:	str	r5, [sp, #64]	; 0x40
    d0ec:	mov	r5, r2
    d0f0:	b	d100 <fputs@plt+0x3d44>
    d0f4:	ldr	r4, [r4, #4]
    d0f8:	cmp	r4, #0
    d0fc:	beq	dfd4 <fputs@plt+0x4c18>
    d100:	ldr	r3, [r4]
    d104:	mov	r0, r4
    d108:	ldr	r3, [r3, #84]	; 0x54
    d10c:	blx	r3
    d110:	ldr	r3, [sl]
    d114:	cmp	r0, r3
    d118:	bne	d0f4 <fputs@plt+0x3d38>
    d11c:	ldr	r3, [sl, #-24]	; 0xffffffe8
    d120:	add	r5, r5, #1
    d124:	cmp	r5, r3
    d128:	bne	d0f4 <fputs@plt+0x3d38>
    d12c:	movw	r3, #60264	; 0xeb68
    d130:	add	ip, sp, #5440	; 0x1540
    d134:	movt	r3, #65535	; 0xffff
    d138:	str	r4, [ip, r3]
    d13c:	b	ae14 <fputs@plt+0x1a58>
    d140:	ldr	r1, [sp, #32]
    d144:	ldr	r4, [r1, #36]	; 0x24
    d148:	cmp	r4, #0
    d14c:	beq	e324 <fputs@plt+0x4f68>
    d150:	mov	r2, #0
    d154:	str	r5, [sp, #64]	; 0x40
    d158:	mov	r5, r2
    d15c:	b	d16c <fputs@plt+0x3db0>
    d160:	ldr	r4, [r4, #8]
    d164:	cmp	r4, #0
    d168:	beq	df4c <fputs@plt+0x4b90>
    d16c:	ldr	r3, [r4]
    d170:	mov	r0, r4
    d174:	ldr	r3, [r3, #84]	; 0x54
    d178:	blx	r3
    d17c:	ldr	r3, [sl]
    d180:	cmp	r0, r3
    d184:	bne	d160 <fputs@plt+0x3da4>
    d188:	ldr	r3, [sl, #-24]	; 0xffffffe8
    d18c:	add	r5, r5, #1
    d190:	cmp	r5, r3
    d194:	bne	d160 <fputs@plt+0x3da4>
    d198:	movw	r3, #60264	; 0xeb68
    d19c:	add	r2, sp, #5440	; 0x1540
    d1a0:	movt	r3, #65535	; 0xffff
    d1a4:	str	r4, [r2, r3]
    d1a8:	b	ae14 <fputs@plt+0x1a58>
    d1ac:	ldr	r2, [sl, #-24]	; 0xffffffe8
    d1b0:	movw	r3, #60264	; 0xeb68
    d1b4:	add	r0, sp, #5440	; 0x1540
    d1b8:	movt	r3, #65535	; 0xffff
    d1bc:	str	r2, [r0, r3]
    d1c0:	b	ae14 <fputs@plt+0x1a58>
    d1c4:	movw	r3, #60264	; 0xeb68
    d1c8:	add	r1, sp, #5440	; 0x1540
    d1cc:	movt	r3, #65535	; 0xffff
    d1d0:	mov	r2, #5
    d1d4:	str	r2, [r1, r3]
    d1d8:	b	ae14 <fputs@plt+0x1a58>
    d1dc:	movw	r3, #60264	; 0xeb68
    d1e0:	add	r0, sp, #5440	; 0x1540
    d1e4:	movt	r3, #65535	; 0xffff
    d1e8:	mov	r2, #7
    d1ec:	str	r2, [r0, r3]
    d1f0:	b	ae14 <fputs@plt+0x1a58>
    d1f4:	movw	r3, #60264	; 0xeb68
    d1f8:	add	ip, sp, #5440	; 0x1540
    d1fc:	movt	r3, #65535	; 0xffff
    d200:	mov	r2, #10
    d204:	str	r2, [ip, r3]
    d208:	b	ae14 <fputs@plt+0x1a58>
    d20c:	movw	r3, #60264	; 0xeb68
    d210:	add	ip, sp, #5440	; 0x1540
    d214:	movt	r3, #65535	; 0xffff
    d218:	mov	r2, #1
    d21c:	str	r2, [ip, r3]
    d220:	b	ae14 <fputs@plt+0x1a58>
    d224:	vldr	d7, [sl, #-24]	; 0xffffffe8
    d228:	vcvt.s32.f64	s14, d7
    d22c:	movw	r3, #60264	; 0xeb68
    d230:	add	r1, sp, #5440	; 0x1540
    d234:	movt	r3, #65535	; 0xffff
    d238:	vmov	r2, s14
    d23c:	str	r2, [r1, r3]
    d240:	b	ae14 <fputs@plt+0x1a58>
    d244:	ldr	r2, [sl]
    d248:	movw	r3, #60264	; 0xeb68
    d24c:	add	r0, sp, #5440	; 0x1540
    d250:	movt	r3, #65535	; 0xffff
    d254:	str	r2, [r0, r3]
    d258:	b	ae14 <fputs@plt+0x1a58>
    d25c:	mov	r4, sl
    d260:	add	r5, sp, #192	; 0xc0
    d264:	ldr	r1, [r4], #-48	; 0xffffffd0
    d268:	add	ip, sp, #5440	; 0x1540
    d26c:	movw	r0, #60184	; 0xeb18
    d270:	add	r3, sp, #88	; 0x58
    d274:	movt	r0, #65535	; 0xffff
    d278:	mov	r2, #0
    d27c:	str	r2, [sp, #92]	; 0x5c
    d280:	str	r2, [ip, r0]
    d284:	mov	r0, r5
    d288:	ldm	r3, {r2, r3}
    d28c:	bl	174b8 <fputs@plt+0xe0fc>
    d290:	mov	r0, r5
    d294:	mov	r1, r4
    d298:	mov	r2, r7
    d29c:	bl	17714 <fputs@plt+0xe358>
    d2a0:	cmp	r0, #0
    d2a4:	mov	r0, r5
    d2a8:	beq	e36c <fputs@plt+0x4fb0>
    d2ac:	bl	17518 <fputs@plt+0xe15c>
    d2b0:	b	ae14 <fputs@plt+0x1a58>
    d2b4:	ldr	r2, [sl]
    d2b8:	movw	r3, #60264	; 0xeb68
    d2bc:	add	r1, sp, #5440	; 0x1540
    d2c0:	movt	r3, #65535	; 0xffff
    d2c4:	str	r2, [r1, r3]
    d2c8:	b	ae14 <fputs@plt+0x1a58>
    d2cc:	ldr	r0, [sl]
    d2d0:	bl	9e90 <fputs@plt+0xad4>
    d2d4:	cmp	r0, #0
    d2d8:	beq	e384 <fputs@plt+0x4fc8>
    d2dc:	mov	r4, r0
    d2e0:	mov	ip, r7
    d2e4:	ldm	r4!, {r0, r1, r2, r3}
    d2e8:	stmia	ip!, {r0, r1, r2, r3}
    d2ec:	ldm	r4, {r0, r1}
    d2f0:	stm	ip, {r0, r1}
    d2f4:	ldr	r0, [sl]
    d2f8:	cmp	r0, #0
    d2fc:	beq	ae14 <fputs@plt+0x1a58>
    d300:	bl	92f0 <_ZdaPv@plt>
    d304:	b	ae14 <fputs@plt+0x1a58>
    d308:	ldr	ip, [sp, #32]
    d30c:	movw	r1, #60264	; 0xeb68
    d310:	movt	r1, #65535	; 0xffff
    d314:	mov	r0, #0
    d318:	ldrd	r2, [ip, #8]
    d31c:	add	ip, sp, #5440	; 0x1540
    d320:	str	r0, [ip, r1]
    d324:	ldr	r0, [sp, #32]
    d328:	strd	r2, [r7, #8]
    d32c:	ldrd	r2, [r0, #16]
    d330:	strd	r2, [r7, #16]
    d334:	b	ae14 <fputs@plt+0x1a58>
    d338:	add	r5, sp, #192	; 0xc0
    d33c:	sub	r3, sl, #48	; 0x30
    d340:	mov	r0, r5
    d344:	ldm	r3, {r1, r2}
    d348:	bl	1743c <fputs@plt+0xe080>
    d34c:	mov	r0, r5
    d350:	mov	r1, sl
    d354:	mov	r2, r7
    d358:	bl	17714 <fputs@plt+0xe358>
    d35c:	cmp	r0, #0
    d360:	mov	r0, r5
    d364:	beq	e36c <fputs@plt+0x4fb0>
    d368:	bl	17518 <fputs@plt+0xe15c>
    d36c:	b	ae14 <fputs@plt+0x1a58>
    d370:	add	r5, sp, #192	; 0xc0
    d374:	sub	r3, sl, #24
    d378:	mov	r0, r5
    d37c:	ldm	r3, {r1, r2}
    d380:	bl	1743c <fputs@plt+0xe080>
    d384:	mov	r0, r5
    d388:	mov	r1, sl
    d38c:	mov	r2, r7
    d390:	bl	17714 <fputs@plt+0xe358>
    d394:	cmp	r0, #0
    d398:	mov	r0, r5
    d39c:	beq	e36c <fputs@plt+0x4fb0>
    d3a0:	bl	17518 <fputs@plt+0xe15c>
    d3a4:	b	ae14 <fputs@plt+0x1a58>
    d3a8:	ldr	r0, [sl, #-24]	; 0xffffffe8
    d3ac:	cmp	r0, #0
    d3b0:	beq	ddc8 <fputs@plt+0x4a0c>
    d3b4:	ldr	r3, [r0]
    d3b8:	ldr	r3, [r3, #12]
    d3bc:	blx	r3
    d3c0:	vstr	d0, [r7]
    d3c4:	b	ae14 <fputs@plt+0x1a58>
    d3c8:	vmov.f64	d4, #112	; 0x3f800000  1.0
    d3cc:	vldr	d2, [sl, #-96]	; 0xffffffa0
    d3d0:	vldr	d6, [sl]
    d3d4:	vldr	d5, [sl, #-48]	; 0xffffffd0
    d3d8:	vldr	d3, [sl, #-40]	; 0xffffffd8
    d3dc:	vldr	d7, [sl, #8]
    d3e0:	vmul.f64	d6, d2, d6
    d3e4:	vsub.f64	d2, d4, d2
    d3e8:	vmla.f64	d6, d2, d5
    d3ec:	vstr	d6, [r7]
    d3f0:	vldr	d6, [sl, #-96]	; 0xffffffa0
    d3f4:	vmul.f64	d7, d6, d7
    d3f8:	vsub.f64	d6, d4, d6
    d3fc:	vmla.f64	d7, d6, d3
    d400:	vstr	d7, [r7, #8]
    d404:	b	ae14 <fputs@plt+0x1a58>
    d408:	vldr	d7, [sl]
    d40c:	vneg.f64	d7, d7
    d410:	vstr	d7, [r7]
    d414:	b	ae14 <fputs@plt+0x1a58>
    d418:	bl	9398 <__errno_location@plt>
    d41c:	mov	r3, #0
    d420:	str	r3, [r0]
    d424:	vldr	d0, [sl, #-48]	; 0xffffffd0
    d428:	vldr	d1, [sl]
    d42c:	mov	r4, r0
    d430:	bl	911c <pow@plt>
    d434:	ldr	r3, [r4]
    d438:	cmp	r3, #33	; 0x21
    d43c:	vstr	d0, [r7]
    d440:	beq	e3d0 <fputs@plt+0x5014>
    d444:	cmp	r3, #34	; 0x22
    d448:	bne	ae14 <fputs@plt+0x1a58>
    d44c:	movw	r1, #13880	; 0x3638
    d450:	movt	r1, #3
    d454:	movw	r0, #19368	; 0x4ba8
    d458:	movt	r0, #2
    d45c:	mov	r2, r1
    d460:	mov	r3, r1
    d464:	bl	1024c <fputs@plt+0x6e90>
    d468:	mov	r4, #1
    d46c:	b	af88 <fputs@plt+0x1bcc>
    d470:	vldr	d1, [sl]
    d474:	vcmp.f64	d1, #0.0
    d478:	vmrs	APSR_nzcv, fpscr
    d47c:	beq	e3f4 <fputs@plt+0x5038>
    d480:	vldr	d0, [sl, #-48]	; 0xffffffd0
    d484:	bl	93a4 <fmod@plt>
    d488:	vstr	d0, [r7]
    d48c:	b	ae14 <fputs@plt+0x1a58>
    d490:	vldr	d7, [sl]
    d494:	vcmp.f64	d7, #0.0
    d498:	vmrs	APSR_nzcv, fpscr
    d49c:	beq	e298 <fputs@plt+0x4edc>
    d4a0:	vldr	d6, [sl, #-48]	; 0xffffffd0
    d4a4:	vdiv.f64	d7, d6, d7
    d4a8:	vstr	d7, [r7]
    d4ac:	b	ae14 <fputs@plt+0x1a58>
    d4b0:	vldr	d6, [sl, #-48]	; 0xffffffd0
    d4b4:	vldr	d7, [sl]
    d4b8:	vmul.f64	d7, d6, d7
    d4bc:	vstr	d7, [r7]
    d4c0:	b	ae14 <fputs@plt+0x1a58>
    d4c4:	ldrd	r2, [sl, #-48]	; 0xffffffd0
    d4c8:	strd	r2, [r7]
    d4cc:	ldrd	r2, [sl]
    d4d0:	strd	r2, [r7, #8]
    d4d4:	b	ae14 <fputs@plt+0x1a58>
    d4d8:	vmov.f64	d5, #112	; 0x3f800000  1.0
    d4dc:	vldr	d3, [sl, #-144]	; 0xffffff70
    d4e0:	vldr	d6, [sl, #-48]	; 0xffffffd0
    d4e4:	vldr	d4, [sl, #-96]	; 0xffffffa0
    d4e8:	vldr	d7, [sl, #-40]	; 0xffffffd8
    d4ec:	vldr	d2, [sl, #-88]	; 0xffffffa8
    d4f0:	vmul.f64	d6, d3, d6
    d4f4:	vsub.f64	d3, d5, d3
    d4f8:	vmla.f64	d6, d3, d4
    d4fc:	vstr	d6, [r7]
    d500:	vldr	d6, [sl, #-144]	; 0xffffff70
    d504:	vmul.f64	d7, d6, d7
    d508:	vsub.f64	d6, d5, d6
    d50c:	vmla.f64	d7, d6, d2
    d510:	vstr	d7, [r7, #8]
    d514:	b	ae14 <fputs@plt+0x1a58>
    d518:	vmov.f64	d5, #112	; 0x3f800000  1.0
    d51c:	vldr	d3, [sl, #-120]	; 0xffffff88
    d520:	vldr	d6, [sl, #-24]	; 0xffffffe8
    d524:	vldr	d4, [sl, #-72]	; 0xffffffb8
    d528:	vldr	d7, [sl, #-16]
    d52c:	vldr	d2, [sl, #-64]	; 0xffffffc0
    d530:	vmul.f64	d6, d3, d6
    d534:	vsub.f64	d3, d5, d3
    d538:	vmla.f64	d6, d3, d4
    d53c:	vstr	d6, [r7]
    d540:	vldr	d6, [sl, #-120]	; 0xffffff88
    d544:	vmul.f64	d7, d6, d7
    d548:	vsub.f64	d6, d5, d6
    d54c:	vmla.f64	d7, d6, d2
    d550:	vstr	d7, [r7, #8]
    d554:	b	ae14 <fputs@plt+0x1a58>
    d558:	vmov.f64	d5, #112	; 0x3f800000  1.0
    d55c:	vldr	d3, [sl, #-120]	; 0xffffff88
    d560:	vldr	d6, [sl, #-24]	; 0xffffffe8
    d564:	vldr	d4, [sl, #-72]	; 0xffffffb8
    d568:	vldr	d7, [sl, #-16]
    d56c:	vldr	d2, [sl, #-64]	; 0xffffffc0
    d570:	vmul.f64	d6, d3, d6
    d574:	vsub.f64	d3, d5, d3
    d578:	vmla.f64	d6, d3, d4
    d57c:	vstr	d6, [r7]
    d580:	vldr	d6, [sl, #-120]	; 0xffffff88
    d584:	vmul.f64	d7, d6, d7
    d588:	vsub.f64	d6, d5, d6
    d58c:	vmla.f64	d7, d6, d2
    d590:	vstr	d7, [r7, #8]
    d594:	b	ae14 <fputs@plt+0x1a58>
    d598:	mov	r4, sl
    d59c:	mov	ip, r7
    d5a0:	ldm	r4!, {r0, r1, r2, r3}
    d5a4:	stmia	ip!, {r0, r1, r2, r3}
    d5a8:	ldm	r4, {r0, r1}
    d5ac:	stm	ip, {r0, r1}
    d5b0:	b	ae14 <fputs@plt+0x1a58>
    d5b4:	sub	r3, sl, #24
    d5b8:	ldm	r3, {r0, r1, r2, r3}
    d5bc:	stm	r7, {r0, r1, r2, r3}
    d5c0:	b	ae14 <fputs@plt+0x1a58>
    d5c4:	add	r5, sp, #192	; 0xc0
    d5c8:	ldm	sl, {r1, r2}
    d5cc:	mov	r0, r5
    d5d0:	bl	1743c <fputs@plt+0xe080>
    d5d4:	mov	r0, r5
    d5d8:	sub	r1, sl, #24
    d5dc:	mov	r2, r7
    d5e0:	bl	17714 <fputs@plt+0xe358>
    d5e4:	cmp	r0, #0
    d5e8:	mov	r0, r5
    d5ec:	beq	e36c <fputs@plt+0x4fb0>
    d5f0:	bl	17518 <fputs@plt+0xe15c>
    d5f4:	b	ae14 <fputs@plt+0x1a58>
    d5f8:	mov	r1, sl
    d5fc:	add	r0, sp, #192	; 0xc0
    d600:	bl	14ff0 <fputs@plt+0xbc34>
    d604:	ldrd	r2, [sp, #192]	; 0xc0
    d608:	strd	r2, [r7]
    d60c:	ldrd	r2, [sp, #200]	; 0xc8
    d610:	strd	r2, [r7, #8]
    d614:	b	ae14 <fputs@plt+0x1a58>
    d618:	vldr	d7, [sl, #-24]	; 0xffffffe8
    d61c:	vldr	d5, [sl, #-72]	; 0xffffffb8
    d620:	vldr	d6, [sl, #-64]	; 0xffffffc0
    d624:	vadd.f64	d5, d5, d7
    d628:	vldr	d7, [sl, #-16]
    d62c:	vadd.f64	d6, d6, d7
    d630:	vstr	d5, [r7]
    d634:	vstr	d6, [r7, #8]
    d638:	b	ae14 <fputs@plt+0x1a58>
    d63c:	vldr	d7, [sl]
    d640:	vldr	d5, [sl, #-48]	; 0xffffffd0
    d644:	vldr	d6, [sl, #-40]	; 0xffffffd8
    d648:	vadd.f64	d5, d5, d7
    d64c:	vldr	d7, [sl, #8]
    d650:	vadd.f64	d6, d6, d7
    d654:	vstr	d5, [r7]
    d658:	vstr	d6, [r7, #8]
    d65c:	b	ae14 <fputs@plt+0x1a58>
    d660:	ldm	sl, {r0, r1, r2, r3}
    d664:	stm	r7, {r0, r1, r2, r3}
    d668:	b	ae14 <fputs@plt+0x1a58>
    d66c:	sub	r1, sl, #24
    d670:	add	r0, sp, #192	; 0xc0
    d674:	bl	14ff0 <fputs@plt+0xbc34>
    d678:	ldrd	r2, [sp, #192]	; 0xc0
    d67c:	strd	r2, [r7]
    d680:	ldrd	r2, [sp, #200]	; 0xc8
    d684:	strd	r2, [r7, #8]
    d688:	b	ae14 <fputs@plt+0x1a58>
    d68c:	vldr	d7, [sl, #-24]	; 0xffffffe8
    d690:	vldr	d5, [sl, #-72]	; 0xffffffb8
    d694:	vldr	d6, [sl, #-64]	; 0xffffffc0
    d698:	vsub.f64	d5, d5, d7
    d69c:	vldr	d7, [sl, #-16]
    d6a0:	vsub.f64	d6, d6, d7
    d6a4:	vstr	d5, [r7]
    d6a8:	vstr	d6, [r7, #8]
    d6ac:	b	ae14 <fputs@plt+0x1a58>
    d6b0:	vldr	d7, [sl]
    d6b4:	vldr	d5, [sl, #-48]	; 0xffffffd0
    d6b8:	vldr	d6, [sl, #-40]	; 0xffffffd8
    d6bc:	vsub.f64	d5, d5, d7
    d6c0:	vldr	d7, [sl, #8]
    d6c4:	vsub.f64	d6, d6, d7
    d6c8:	vstr	d5, [r7]
    d6cc:	vstr	d6, [r7, #8]
    d6d0:	b	ae14 <fputs@plt+0x1a58>
    d6d4:	ldrd	r2, [sl, #-72]	; 0xffffffb8
    d6d8:	strd	r2, [r7]
    d6dc:	ldrd	r2, [sl, #-16]
    d6e0:	strd	r2, [r7, #8]
    d6e4:	b	ae14 <fputs@plt+0x1a58>
    d6e8:	ldr	r2, [sl, #-44]	; 0xffffffd4
    d6ec:	movw	r4, #60264	; 0xeb68
    d6f0:	ldr	r3, [sl, #-40]	; 0xffffffd8
    d6f4:	movt	r4, #65535	; 0xffff
    d6f8:	ldr	r0, [sl, #-48]	; 0xffffffd0
    d6fc:	stmib	r7, {r2, r3}
    d700:	ldr	r2, [sl, #-20]	; 0xffffffec
    d704:	ldr	r1, [sl, #-24]	; 0xffffffe8
    d708:	bl	a35c <fputs@plt+0xfa0>
    d70c:	add	r2, sp, #5440	; 0x1540
    d710:	str	r0, [r2, r4]
    d714:	ldr	r0, [sl, #-24]	; 0xffffffe8
    d718:	cmp	r0, #0
    d71c:	beq	d724 <fputs@plt+0x4368>
    d720:	bl	92f0 <_ZdaPv@plt>
    d724:	ldr	r0, [sl, #-48]	; 0xffffffd0
    d728:	cmp	r0, #0
    d72c:	beq	ae14 <fputs@plt+0x1a58>
    d730:	bl	92f0 <_ZdaPv@plt>
    d734:	b	ae14 <fputs@plt+0x1a58>
    d738:	ldm	sl, {r0, r1, r2}
    d73c:	stm	r7, {r0, r1, r2}
    d740:	b	ae14 <fputs@plt+0x1a58>
    d744:	ldr	r3, [sl, #-24]	; 0xffffffe8
    d748:	movw	r2, #60264	; 0xeb68
    d74c:	add	r1, sp, #5440	; 0x1540
    d750:	movt	r2, #65535	; 0xffff
    d754:	str	r3, [r1, r2]
    d758:	ldr	r2, [r3]
    d75c:	orr	r2, r2, #2097152	; 0x200000
    d760:	str	r2, [r3]
    d764:	b	ae14 <fputs@plt+0x1a58>
    d768:	ldr	r1, [sl, #-24]	; 0xffffffe8
    d76c:	movw	r2, #60264	; 0xeb68
    d770:	add	r0, sp, #5440	; 0x1540
    d774:	movt	r2, #65535	; 0xffff
    d778:	ldr	r3, [r1, #100]	; 0x64
    d77c:	str	r1, [r0, r2]
    d780:	cmp	r3, #0
    d784:	bne	d790 <fputs@plt+0x43d4>
    d788:	b	ae14 <fputs@plt+0x1a58>
    d78c:	mov	r3, r2
    d790:	ldr	r2, [r3]
    d794:	cmp	r2, #0
    d798:	bne	d78c <fputs@plt+0x43d0>
    d79c:	mov	r2, #1
    d7a0:	str	r2, [r3, #8]
    d7a4:	b	ae14 <fputs@plt+0x1a58>
    d7a8:	sub	r3, sl, #48	; 0x30
    d7ac:	movw	r5, #60264	; 0xeb68
    d7b0:	add	ip, r7, #4
    d7b4:	movt	r5, #65535	; 0xffff
    d7b8:	ldm	r3, {r0, r1, r2}
    d7bc:	add	r4, r7, #8
    d7c0:	stm	r7, {r0, r1, r2}
    d7c4:	mov	r2, r1
    d7c8:	ldr	r3, [r7, #8]
    d7cc:	cmp	r1, r3
    d7d0:	bge	de4c <fputs@plt+0x4a90>
    d7d4:	add	r0, sp, #5440	; 0x1540
    d7d8:	ldr	r3, [r0, r5]
    d7dc:	add	r1, r3, r2, lsl #3
    d7e0:	ldrd	r2, [sl]
    d7e4:	strd	r2, [r1]
    d7e8:	ldr	r3, [r7, #4]
    d7ec:	add	r3, r3, #1
    d7f0:	str	r3, [r7, #4]
    d7f4:	b	ae14 <fputs@plt+0x1a58>
    d7f8:	movw	r2, #60264	; 0xeb68
    d7fc:	add	ip, sp, #5440	; 0x1540
    d800:	movt	r2, #65535	; 0xffff
    d804:	mov	r3, #0
    d808:	str	r3, [r7, #4]
    d80c:	str	r3, [ip, r2]
    d810:	str	r3, [r7, #8]
    d814:	b	ae14 <fputs@plt+0x1a58>
    d818:	ldm	sl, {r0, r1, r2, r3}
    d81c:	stm	r7, {r0, r1, r2, r3}
    d820:	b	ae14 <fputs@plt+0x1a58>
    d824:	movw	r3, #60264	; 0xeb68
    d828:	add	ip, sp, #5440	; 0x1540
    d82c:	movt	r3, #65535	; 0xffff
    d830:	mov	r1, #48	; 0x30
    d834:	mov	r2, #1
    d838:	str	r2, [r7, #4]
    d83c:	str	r1, [ip, r3]
    d840:	b	ae14 <fputs@plt+0x1a58>
    d844:	movw	r3, #60264	; 0xeb68
    d848:	add	r0, sp, #5440	; 0x1540
    d84c:	movt	r3, #65535	; 0xffff
    d850:	mov	r1, #40	; 0x28
    d854:	mov	r2, #1
    d858:	str	r2, [r7, #4]
    d85c:	str	r1, [r0, r3]
    d860:	b	ae14 <fputs@plt+0x1a58>
    d864:	movw	r3, #60264	; 0xeb68
    d868:	add	ip, sp, #5440	; 0x1540
    d86c:	movt	r3, #65535	; 0xffff
    d870:	mov	r1, #52	; 0x34
    d874:	mov	r2, #1
    d878:	str	r2, [r7, #4]
    d87c:	str	r1, [ip, r3]
    d880:	b	ae14 <fputs@plt+0x1a58>
    d884:	movw	r3, #60264	; 0xeb68
    d888:	add	r0, sp, #5440	; 0x1540
    d88c:	movt	r3, #65535	; 0xffff
    d890:	mov	r1, #44	; 0x2c
    d894:	mov	r2, #1
    d898:	str	r2, [r7, #4]
    d89c:	str	r1, [r0, r3]
    d8a0:	b	ae14 <fputs@plt+0x1a58>
    d8a4:	movw	r3, #60264	; 0xeb68
    d8a8:	add	ip, sp, #5440	; 0x1540
    d8ac:	movt	r3, #65535	; 0xffff
    d8b0:	mov	r1, #32
    d8b4:	mov	r2, #1
    d8b8:	str	r2, [r7, #4]
    d8bc:	str	r1, [ip, r3]
    d8c0:	b	ae14 <fputs@plt+0x1a58>
    d8c4:	movw	r3, #60264	; 0xeb68
    d8c8:	add	r0, sp, #5440	; 0x1540
    d8cc:	movt	r3, #65535	; 0xffff
    d8d0:	mov	r1, #36	; 0x24
    d8d4:	mov	r2, #1
    d8d8:	str	r2, [r7, #4]
    d8dc:	str	r1, [r0, r3]
    d8e0:	b	ae14 <fputs@plt+0x1a58>
    d8e4:	movw	r3, #60264	; 0xeb68
    d8e8:	add	ip, sp, #5440	; 0x1540
    d8ec:	movt	r3, #65535	; 0xffff
    d8f0:	mov	r1, #48	; 0x30
    d8f4:	mov	r2, #1
    d8f8:	str	r2, [r7, #4]
    d8fc:	str	r1, [ip, r3]
    d900:	b	ae14 <fputs@plt+0x1a58>
    d904:	movw	r3, #60264	; 0xeb68
    d908:	add	r0, sp, #5440	; 0x1540
    d90c:	movt	r3, #65535	; 0xffff
    d910:	mov	r1, #40	; 0x28
    d914:	mov	r2, #1
    d918:	str	r2, [r7, #4]
    d91c:	str	r1, [r0, r3]
    d920:	b	ae14 <fputs@plt+0x1a58>
    d924:	movw	r3, #60264	; 0xeb68
    d928:	add	ip, sp, #5440	; 0x1540
    d92c:	movt	r3, #65535	; 0xffff
    d930:	mov	r1, #52	; 0x34
    d934:	mov	r2, #1
    d938:	str	r2, [r7, #4]
    d93c:	str	r1, [ip, r3]
    d940:	b	ae14 <fputs@plt+0x1a58>
    d944:	movw	r3, #60264	; 0xeb68
    d948:	add	r0, sp, #5440	; 0x1540
    d94c:	movt	r3, #65535	; 0xffff
    d950:	mov	r1, #44	; 0x2c
    d954:	mov	r2, #1
    d958:	str	r2, [r7, #4]
    d95c:	str	r1, [r0, r3]
    d960:	b	ae14 <fputs@plt+0x1a58>
    d964:	movw	r3, #60264	; 0xeb68
    d968:	add	ip, sp, #5440	; 0x1540
    d96c:	movt	r3, #65535	; 0xffff
    d970:	mov	r1, #32
    d974:	mov	r2, #1
    d978:	str	r2, [r7, #4]
    d97c:	str	r1, [ip, r3]
    d980:	b	ae14 <fputs@plt+0x1a58>
    d984:	movw	r3, #60264	; 0xeb68
    d988:	add	r0, sp, #5440	; 0x1540
    d98c:	movt	r3, #65535	; 0xffff
    d990:	mov	r1, #36	; 0x24
    d994:	mov	r2, #1
    d998:	str	r2, [r7, #4]
    d99c:	str	r1, [r0, r3]
    d9a0:	b	ae14 <fputs@plt+0x1a58>
    d9a4:	movw	r3, #60264	; 0xeb68
    d9a8:	add	ip, sp, #5440	; 0x1540
    d9ac:	movt	r3, #65535	; 0xffff
    d9b0:	mov	r1, #28
    d9b4:	mov	r2, #1
    d9b8:	str	r2, [r7, #4]
    d9bc:	str	r1, [ip, r3]
    d9c0:	b	ae14 <fputs@plt+0x1a58>
    d9c4:	movw	r3, #60264	; 0xeb68
    d9c8:	add	r0, sp, #5440	; 0x1540
    d9cc:	movt	r3, #65535	; 0xffff
    d9d0:	mov	r1, #24
    d9d4:	mov	r2, #1
    d9d8:	str	r2, [r7, #4]
    d9dc:	str	r1, [r0, r3]
    d9e0:	b	ae14 <fputs@plt+0x1a58>
    d9e4:	movw	r3, #60264	; 0xeb68
    d9e8:	add	ip, sp, #5440	; 0x1540
    d9ec:	movt	r3, #65535	; 0xffff
    d9f0:	mov	r1, #60	; 0x3c
    d9f4:	mov	r2, #1
    d9f8:	str	r2, [r7, #4]
    d9fc:	str	r1, [ip, r3]
    da00:	b	ae14 <fputs@plt+0x1a58>
    da04:	movw	r3, #60264	; 0xeb68
    da08:	add	r0, sp, #5440	; 0x1540
    da0c:	movt	r3, #65535	; 0xffff
    da10:	mov	r1, #56	; 0x38
    da14:	mov	r2, #1
    da18:	str	r2, [r7, #4]
    da1c:	str	r1, [r0, r3]
    da20:	b	ae14 <fputs@plt+0x1a58>
    da24:	ldrd	r2, [sl]
    da28:	strd	r2, [r7]
    da2c:	b	ae14 <fputs@plt+0x1a58>
    da30:	movw	r3, #60264	; 0xeb68
    da34:	add	r0, sp, #5440	; 0x1540
    da38:	movt	r3, #65535	; 0xffff
    da3c:	mov	r1, #60	; 0x3c
    da40:	mov	r2, #1
    da44:	str	r2, [r7, #4]
    da48:	str	r1, [r0, r3]
    da4c:	b	ae14 <fputs@plt+0x1a58>
    da50:	movw	r3, #60264	; 0xeb68
    da54:	add	ip, sp, #5440	; 0x1540
    da58:	movt	r3, #65535	; 0xffff
    da5c:	mov	r1, #56	; 0x38
    da60:	mov	r2, #1
    da64:	str	r2, [r7, #4]
    da68:	str	r1, [ip, r3]
    da6c:	b	ae14 <fputs@plt+0x1a58>
    da70:	movw	r3, #60264	; 0xeb68
    da74:	add	r0, sp, #5440	; 0x1540
    da78:	movt	r3, #65535	; 0xffff
    da7c:	mov	r1, #64	; 0x40
    da80:	mov	r2, #1
    da84:	str	r2, [r7, #4]
    da88:	str	r1, [r0, r3]
    da8c:	b	ae14 <fputs@plt+0x1a58>
    da90:	movw	r3, #60264	; 0xeb68
    da94:	add	ip, sp, #5440	; 0x1540
    da98:	movt	r3, #65535	; 0xffff
    da9c:	mov	r1, #36	; 0x24
    daa0:	mov	r2, #1
    daa4:	str	r2, [r7, #4]
    daa8:	str	r1, [ip, r3]
    daac:	b	ae14 <fputs@plt+0x1a58>
    dab0:	movw	r3, #60264	; 0xeb68
    dab4:	add	r0, sp, #5440	; 0x1540
    dab8:	movt	r3, #65535	; 0xffff
    dabc:	mov	r1, #32
    dac0:	mov	r2, #1
    dac4:	str	r2, [r7, #4]
    dac8:	str	r1, [r0, r3]
    dacc:	b	ae14 <fputs@plt+0x1a58>
    dad0:	movw	r3, #60264	; 0xeb68
    dad4:	add	ip, sp, #5440	; 0x1540
    dad8:	movt	r3, #65535	; 0xffff
    dadc:	mov	r1, #28
    dae0:	mov	r2, #1
    dae4:	str	r2, [r7, #4]
    dae8:	str	r1, [ip, r3]
    daec:	b	ae14 <fputs@plt+0x1a58>
    daf0:	movw	r3, #60264	; 0xeb68
    daf4:	add	r0, sp, #5440	; 0x1540
    daf8:	movt	r3, #65535	; 0xffff
    dafc:	mov	r1, #24
    db00:	mov	r2, #1
    db04:	str	r2, [r7, #4]
    db08:	str	r1, [r0, r3]
    db0c:	b	ae14 <fputs@plt+0x1a58>
    db10:	ldrd	r2, [sl]
    db14:	strd	r2, [r7]
    db18:	b	ae14 <fputs@plt+0x1a58>
    db1c:	ldr	r0, [sl]
    db20:	bl	9e90 <fputs@plt+0xad4>
    db24:	cmp	r0, #0
    db28:	beq	e0f8 <fputs@plt+0x4d3c>
    db2c:	ldrd	r2, [r0, #8]
    db30:	strd	r2, [r7]
    db34:	ldr	r0, [sl]
    db38:	cmp	r0, #0
    db3c:	beq	ae14 <fputs@plt+0x1a58>
    db40:	bl	92f0 <_ZdaPv@plt>
    db44:	b	ae14 <fputs@plt+0x1a58>
    db48:	vmov.f64	d5, #112	; 0x3f800000  1.0
    db4c:	vldr	d7, [sl]
    db50:	vldr	d6, [sl, #-48]	; 0xffffffd0
    db54:	vcmpe.f64	d6, d7
    db58:	vmrs	APSR_nzcv, fpscr
    db5c:	vmovpl.f64	d7, d8
    db60:	vmovmi.f64	d7, d5
    db64:	vstr	d7, [r7]
    db68:	b	ae14 <fputs@plt+0x1a58>
    db6c:	ldr	r0, [sl, #-24]	; 0xffffffe8
    db70:	cmp	r0, #0
    db74:	beq	def0 <fputs@plt+0x4b34>
    db78:	ldr	r3, [r0]
    db7c:	ldr	r3, [r3, #8]
    db80:	blx	r3
    db84:	vstr	d1, [r7]
    db88:	vstr	d1, [sp, #160]	; 0xa0
    db8c:	vstr	d0, [sp, #152]	; 0x98
    db90:	b	ae14 <fputs@plt+0x1a58>
    db94:	ldr	r0, [sl, #-24]	; 0xffffffe8
    db98:	cmp	r0, #0
    db9c:	beq	de40 <fputs@plt+0x4a84>
    dba0:	ldr	r3, [r0]
    dba4:	ldr	r3, [r3, #8]
    dba8:	blx	r3
    dbac:	vstr	d0, [r7]
    dbb0:	vstr	d0, [sp, #136]	; 0x88
    dbb4:	vstr	d1, [sp, #144]	; 0x90
    dbb8:	b	ae14 <fputs@plt+0x1a58>
    dbbc:	ldrd	r2, [sl]
    dbc0:	strd	r2, [r7]
    dbc4:	b	ae14 <fputs@plt+0x1a58>
    dbc8:	ldr	r0, [sl, #-24]	; 0xffffffe8
    dbcc:	cmp	r0, #0
    dbd0:	beq	ddc8 <fputs@plt+0x4a0c>
    dbd4:	ldr	r3, [r0]
    dbd8:	ldr	r3, [r3, #20]
    dbdc:	blx	r3
    dbe0:	vstr	d0, [r7]
    dbe4:	b	ae14 <fputs@plt+0x1a58>
    dbe8:	bl	9398 <__errno_location@plt>
    dbec:	mov	r3, #0
    dbf0:	str	r3, [r0]
    dbf4:	vldr	d0, [sl, #-72]	; 0xffffffb8
    dbf8:	vldr	d1, [sl, #-24]	; 0xffffffe8
    dbfc:	mov	r4, r0
    dc00:	bl	92cc <atan2@plt>
    dc04:	ldr	r3, [r4]
    dc08:	cmp	r3, #33	; 0x21
    dc0c:	vstr	d0, [r7]
    dc10:	beq	e154 <fputs@plt+0x4d98>
    dc14:	cmp	r3, #34	; 0x22
    dc18:	bne	ae14 <fputs@plt+0x1a58>
    dc1c:	movw	r1, #13880	; 0x3638
    dc20:	movt	r1, #3
    dc24:	movw	r0, #19436	; 0x4bec
    dc28:	movt	r0, #2
    dc2c:	mov	r2, r1
    dc30:	mov	r3, r1
    dc34:	bl	1024c <fputs@plt+0x6e90>
    dc38:	mov	r4, #1
    dc3c:	b	af88 <fputs@plt+0x1bcc>
    dc40:	bl	9398 <__errno_location@plt>
    dc44:	mov	r3, #0
    dc48:	str	r3, [r0]
    dc4c:	vldr	d0, [sl, #-24]	; 0xffffffe8
    dc50:	bl	91f4 <cos@plt>
    dc54:	vstr	d0, [r7]
    dc58:	b	ae14 <fputs@plt+0x1a58>
    dc5c:	vldr	d6, [sl, #-48]	; 0xffffffd0
    dc60:	vldr	d7, [sl]
    dc64:	vadd.f64	d7, d6, d7
    dc68:	vstr	d7, [r7]
    dc6c:	b	ae14 <fputs@plt+0x1a58>
    dc70:	ldr	r0, [sl, #-24]	; 0xffffffe8
    dc74:	cmp	r0, #0
    dc78:	beq	ddc8 <fputs@plt+0x4a0c>
    dc7c:	ldr	r3, [r0]
    dc80:	ldr	r3, [r3, #16]
    dc84:	blx	r3
    dc88:	vstr	d0, [r7]
    dc8c:	b	ae14 <fputs@plt+0x1a58>
    dc90:	vldr	d6, [sl, #-48]	; 0xffffffd0
    dc94:	vldr	d7, [sl]
    dc98:	vsub.f64	d7, d6, d7
    dc9c:	vstr	d7, [r7]
    dca0:	b	ae14 <fputs@plt+0x1a58>
    dca4:	bl	9398 <__errno_location@plt>
    dca8:	mov	r3, #0
    dcac:	str	r3, [r0]
    dcb0:	vldr	d0, [sl, #-24]	; 0xffffffe8
    dcb4:	mov	r4, r0
    dcb8:	bl	9290 <log10@plt>
    dcbc:	ldr	r3, [r4]
    dcc0:	cmp	r3, #34	; 0x22
    dcc4:	vstr	d0, [r7]
    dcc8:	bne	ae14 <fputs@plt+0x1a58>
    dccc:	movw	r1, #13880	; 0x3638
    dcd0:	movt	r1, #3
    dcd4:	movw	r0, #19464	; 0x4c08
    dcd8:	movt	r0, #2
    dcdc:	mov	r2, r1
    dce0:	mov	r3, r1
    dce4:	bl	1024c <fputs@plt+0x6e90>
    dce8:	mov	r4, #1
    dcec:	b	af88 <fputs@plt+0x1bcc>
    dcf0:	bl	9398 <__errno_location@plt>
    dcf4:	mov	r3, #0
    dcf8:	str	r3, [r0]
    dcfc:	vldr	d0, [sl, #-24]	; 0xffffffe8
    dd00:	bl	9314 <sin@plt>
    dd04:	vstr	d0, [r7]
    dd08:	b	ae14 <fputs@plt+0x1a58>
    dd0c:	ldrd	r2, [sl, #-24]	; 0xffffffe8
    dd10:	strd	r2, [r7]
    dd14:	b	ae14 <fputs@plt+0x1a58>
    dd18:	vldr	d7, [sl, #-48]	; 0xffffffd0
    dd1c:	vcmp.f64	d7, #0.0
    dd20:	vmrs	APSR_nzcv, fpscr
    dd24:	vmovne.f64	d7, #112	; 0x3f800000  1.0
    dd28:	bne	dd48 <fputs@plt+0x498c>
    dd2c:	vldr	d7, [sl]
    dd30:	vcmp.f64	d7, #0.0
    dd34:	vmrs	APSR_nzcv, fpscr
    dd38:	moveq	r0, #0
    dd3c:	movne	r0, #1
    dd40:	vmov	s14, r0
    dd44:	vcvt.f64.u32	d7, s14
    dd48:	vstr	d7, [r7]
    dd4c:	b	ae14 <fputs@plt+0x1a58>
    dd50:	vldr	d6, [r3, #216]	; 0xd8
    dd54:	vldr	d7, [sl]
    dd58:	vsub.f64	d7, d6, d7
    dd5c:	vstr	d7, [r3, #216]	; 0xd8
    dd60:	b	ae14 <fputs@plt+0x1a58>
    dd64:	vldr	d6, [r3, #208]	; 0xd0
    dd68:	vldr	d7, [sl]
    dd6c:	vsub.f64	d7, d6, d7
    dd70:	vstr	d7, [r3, #208]	; 0xd0
    dd74:	b	ae14 <fputs@plt+0x1a58>
    dd78:	vldr	d6, [r3, #216]	; 0xd8
    dd7c:	vldr	d7, [sl]
    dd80:	vadd.f64	d7, d6, d7
    dd84:	vstr	d7, [r3, #216]	; 0xd8
    dd88:	b	ae14 <fputs@plt+0x1a58>
    dd8c:	vldr	d6, [r3, #208]	; 0xd0
    dd90:	vldr	d7, [sl]
    dd94:	vadd.f64	d7, d6, d7
    dd98:	vstr	d7, [r3, #208]	; 0xd0
    dd9c:	b	ae14 <fputs@plt+0x1a58>
    dda0:	movw	r0, #19556	; 0x4c64
    dda4:	movt	r0, #2
    dda8:	bl	12bfc <fputs@plt+0x9840>
    ddac:	mov	r4, #2
    ddb0:	b	af88 <fputs@plt+0x1bcc>
    ddb4:	mov	r4, #0
    ddb8:	b	af88 <fputs@plt+0x1bcc>
    ddbc:	mov	fp, r4
    ddc0:	mov	r4, #1
    ddc4:	b	af88 <fputs@plt+0x1bcc>
    ddc8:	vstr	d8, [r7]
    ddcc:	b	ae14 <fputs@plt+0x1a58>
    ddd0:	vldr	d6, [r3, #216]	; 0xd8
    ddd4:	vldr	d7, [r3, #128]	; 0x80
    ddd8:	vadd.f64	d7, d6, d7
    dddc:	vstr	d7, [r3, #216]	; 0xd8
    dde0:	mov	r0, #32
    dde4:	bl	209a0 <_Znwj@@Base>
    dde8:	movw	r3, #60264	; 0xeb68
    ddec:	add	lr, sp, #5440	; 0x1540
    ddf0:	movt	r3, #65535	; 0xffff
    ddf4:	ldr	r3, [lr, r3]
    ddf8:	add	r1, r3, #208	; 0xd0
    ddfc:	ldr	r2, [r3, #224]	; 0xe0
    de00:	ldr	r3, [r3, #204]	; 0xcc
    de04:	mov	r5, r0
    de08:	bl	16608 <fputs@plt+0xd24c>
    de0c:	movw	r3, #60264	; 0xeb68
    de10:	add	r0, sp, #5440	; 0x1540
    de14:	movt	r3, #65535	; 0xffff
    de18:	mov	r1, #0
    de1c:	ldr	r3, [r0, r3]
    de20:	vstr	d8, [r3, #216]	; 0xd8
    de24:	vstr	d8, [r3, #208]	; 0xd0
    de28:	ldr	r2, [r3]
    de2c:	str	r5, [r3, #204]	; 0xcc
    de30:	bic	r2, r2, #128	; 0x80
    de34:	str	r1, [r3, #224]	; 0xe0
    de38:	str	r2, [r3]
    de3c:	b	ae14 <fputs@plt+0x1a58>
    de40:	ldrd	r2, [sl, #-16]
    de44:	strd	r2, [r7]
    de48:	b	ae14 <fputs@plt+0x1a58>
    de4c:	cmp	r1, #0
    de50:	beq	e084 <fputs@plt+0x4cc8>
    de54:	lsl	r2, r3, #1
    de58:	add	ip, sp, #5440	; 0x1540
    de5c:	cmp	r2, #266338304	; 0xfe00000
    de60:	str	r2, [r4]
    de64:	lslls	r0, r3, #4
    de68:	ldr	r5, [ip, r5]
    de6c:	mvnhi	r0, #0
    de70:	movw	r4, #60264	; 0xeb68
    de74:	bl	9278 <_Znaj@plt>
    de78:	ldr	r2, [r7, #4]
    de7c:	mov	r1, r5
    de80:	movt	r4, #65535	; 0xffff
    de84:	lsl	r2, r2, #3
    de88:	bl	9218 <memcpy@plt>
    de8c:	cmp	r5, #0
    de90:	mov	r3, r0
    de94:	add	r0, sp, #5440	; 0x1540
    de98:	str	r3, [r0, r4]
    de9c:	beq	deb0 <fputs@plt+0x4af4>
    dea0:	mov	r0, r5
    dea4:	bl	92f0 <_ZdaPv@plt>
    dea8:	add	r1, sp, #5440	; 0x1540
    deac:	ldr	r3, [r1, r4]
    deb0:	ldr	r2, [r7, #4]
    deb4:	b	d7dc <fputs@plt+0x4420>
    deb8:	tst	r3, #65536	; 0x10000
    debc:	orreq	r0, r3, #65536	; 0x10000
    dec0:	ldrdne	r2, [sl]
    dec4:	ldrdeq	r2, [sl]
    dec8:	streq	r0, [r1]
    decc:	strdne	r2, [r1, #152]	; 0x98
    ded0:	strdeq	r2, [r1, #152]	; 0x98
    ded4:	strdeq	r2, [r1, #144]	; 0x90
    ded8:	b	ae14 <fputs@plt+0x1a58>
    dedc:	tst	r2, #65536	; 0x10000
    dee0:	vstrne	d8, [r3, #152]	; 0x98
    dee4:	orreq	r2, r2, #131072	; 0x20000
    dee8:	streq	r2, [r3]
    deec:	b	ae14 <fputs@plt+0x1a58>
    def0:	ldrd	r2, [sl, #-8]
    def4:	strd	r2, [r7]
    def8:	b	ae14 <fputs@plt+0x1a58>
    defc:	vneg.f64	d0, d0
    df00:	bl	91a0 <floor@plt>
    df04:	vneg.f64	d0, d0
    df08:	b	caf8 <fputs@plt+0x373c>
    df0c:	mov	r0, #32
    df10:	bl	209a0 <_Znwj@@Base>
    df14:	add	ip, sp, #5440	; 0x1540
    df18:	ldr	r3, [ip, r4]
    df1c:	add	r1, r3, #208	; 0xd0
    df20:	ldr	r2, [r3, #224]	; 0xe0
    df24:	ldr	r3, [r3, #204]	; 0xcc
    df28:	mov	r5, r0
    df2c:	bl	16608 <fputs@plt+0xd24c>
    df30:	movw	r3, #60264	; 0xeb68
    df34:	add	r0, sp, #5440	; 0x1540
    df38:	movt	r3, #65535	; 0xffff
    df3c:	ldr	r1, [r0, r3]
    df40:	ldr	r3, [r1]
    df44:	str	r5, [r1, #204]	; 0xcc
    df48:	b	b648 <fputs@plt+0x228c>
    df4c:	ldr	r4, [sp, #64]	; 0x40
    df50:	add	r6, sp, #128	; 0x80
    df54:	ldr	r1, [sl, #-24]	; 0xffffffe8
    df58:	sub	r5, r6, #24
    df5c:	mov	r0, r5
    df60:	bl	1f290 <fputs@plt+0x15ed4>
    df64:	ldr	r3, [sl, #-24]	; 0xffffffe8
    df68:	sub	r2, r3, #10
    df6c:	cmp	r2, #10
    df70:	movwls	r1, #20604	; 0x507c
    df74:	movtls	r1, #2
    df78:	bhi	e1c0 <fputs@plt+0x4e04>
    df7c:	sub	r6, r6, #8
    df80:	mov	r0, r6
    df84:	bl	1f264 <fputs@plt+0x15ea8>
    df88:	ldr	r3, [sl]
    df8c:	add	r0, sp, #192	; 0xc0
    df90:	sub	r3, r3, #1
    df94:	cmp	r3, #9
    df98:	addls	r3, r4, r3, lsl #2
    df9c:	mov	r4, #1
    dfa0:	movwhi	r1, #18864	; 0x49b0
    dfa4:	ldrls	r1, [r3, #528]	; 0x210
    dfa8:	movthi	r1, #2
    dfac:	bl	1f264 <fputs@plt+0x15ea8>
    dfb0:	add	r3, sp, #192	; 0xc0
    dfb4:	mov	r1, r5
    dfb8:	mov	r2, r6
    dfbc:	movw	r0, #19080	; 0x4a88
    dfc0:	movt	r0, #2
    dfc4:	bl	1024c <fputs@plt+0x6e90>
    dfc8:	b	af88 <fputs@plt+0x1bcc>
    dfcc:	vldr	d7, [pc, #996]	; e3b8 <fputs@plt+0x4ffc>
    dfd0:	b	c81c <fputs@plt+0x3460>
    dfd4:	ldr	r4, [sp, #64]	; 0x40
    dfd8:	add	r6, sp, #128	; 0x80
    dfdc:	ldr	r1, [sl, #-24]	; 0xffffffe8
    dfe0:	sub	r5, r6, #24
    dfe4:	mov	r0, r5
    dfe8:	bl	1f290 <fputs@plt+0x15ed4>
    dfec:	ldr	r3, [sl, #-24]	; 0xffffffe8
    dff0:	sub	r2, r3, #10
    dff4:	cmp	r2, #10
    dff8:	movwls	r1, #20604	; 0x507c
    dffc:	movtls	r1, #2
    e000:	bhi	e23c <fputs@plt+0x4e80>
    e004:	sub	r6, r6, #8
    e008:	mov	r0, r6
    e00c:	bl	1f264 <fputs@plt+0x15ea8>
    e010:	ldr	r3, [sl]
    e014:	add	r0, sp, #192	; 0xc0
    e018:	sub	r3, r3, #1
    e01c:	cmp	r3, #9
    e020:	addls	r3, r4, r3, lsl #2
    e024:	mov	r4, #1
    e028:	movwhi	r1, #18864	; 0x49b0
    e02c:	ldrls	r1, [r3, #528]	; 0x210
    e030:	movthi	r1, #2
    e034:	bl	1f264 <fputs@plt+0x15ea8>
    e038:	add	r3, sp, #192	; 0xc0
    e03c:	mov	r1, r5
    e040:	mov	r2, r6
    e044:	movw	r0, #19100	; 0x4a9c
    e048:	movt	r0, #2
    e04c:	bl	1024c <fputs@plt+0x6e90>
    e050:	b	af88 <fputs@plt+0x1bcc>
    e054:	ldr	r0, [pc, #868]	; e3c0 <fputs@plt+0x5004>
    e058:	bl	167bc <fputs@plt+0xd400>
    e05c:	b	ae14 <fputs@plt+0x1a58>
    e060:	ldr	r0, [sl]
    e064:	bl	9158 <system@plt>
    e068:	b	c1bc <fputs@plt+0x2e00>
    e06c:	vldr	d7, [pc, #836]	; e3b8 <fputs@plt+0x4ffc>
    e070:	b	c398 <fputs@plt+0x2fdc>
    e074:	vldr	d7, [pc, #828]	; e3b8 <fputs@plt+0x4ffc>
    e078:	b	c6d0 <fputs@plt+0x3314>
    e07c:	vldr	d7, [pc, #820]	; e3b8 <fputs@plt+0x4ffc>
    e080:	b	c3c4 <fputs@plt+0x3008>
    e084:	mov	r0, #32
    e088:	str	ip, [sp, #20]
    e08c:	bl	9278 <_Znaj@plt>
    e090:	add	r2, sp, #5440	; 0x1540
    e094:	mov	r1, #4
    e098:	str	r1, [r4]
    e09c:	str	r0, [r2, r5]
    e0a0:	mov	r3, r0
    e0a4:	ldr	ip, [sp, #20]
    e0a8:	ldr	r2, [ip]
    e0ac:	b	d7dc <fputs@plt+0x4420>
    e0b0:	vldr	d6, [r3, #208]	; 0xd0
    e0b4:	vldr	d7, [r3, #128]	; 0x80
    e0b8:	vadd.f64	d7, d6, d7
    e0bc:	vstr	d7, [r3, #208]	; 0xd0
    e0c0:	b	dde0 <fputs@plt+0x4a24>
    e0c4:	ldr	r1, [sl, #-72]	; 0xffffffb8
    e0c8:	add	r0, sp, #192	; 0xc0
    e0cc:	bl	1f264 <fputs@plt+0x15ea8>
    e0d0:	movw	r2, #13880	; 0x3638
    e0d4:	movt	r2, #3
    e0d8:	add	r1, sp, #192	; 0xc0
    e0dc:	movw	r0, #18952	; 0x4a08
    e0e0:	movt	r0, #2
    e0e4:	mov	r3, r2
    e0e8:	mov	r4, #1
    e0ec:	bl	1024c <fputs@plt+0x6e90>
    e0f0:	b	af88 <fputs@plt+0x1bcc>
    e0f4:	bl	92b4 <__stack_chk_fail@plt>
    e0f8:	ldr	r1, [sl]
    e0fc:	add	r0, sp, #192	; 0xc0
    e100:	bl	1f264 <fputs@plt+0x15ea8>
    e104:	movw	r2, #13880	; 0x3638
    e108:	movt	r2, #3
    e10c:	add	r1, sp, #192	; 0xc0
    e110:	movw	r0, #19576	; 0x4c78
    e114:	movt	r0, #2
    e118:	mov	r3, r2
    e11c:	mov	r4, #1
    e120:	bl	1024c <fputs@plt+0x6e90>
    e124:	b	af88 <fputs@plt+0x1bcc>
    e128:	mov	r0, r5
    e12c:	bl	209f0 <_ZdlPv@@Base>
    e130:	bl	9188 <__cxa_end_cleanup@plt>
    e134:	vldr	d6, [r3, #208]	; 0xd0
    e138:	vldr	d7, [r3, #128]	; 0x80
    e13c:	vsub.f64	d7, d6, d7
    e140:	vstr	d7, [r3, #208]	; 0xd0
    e144:	b	dde0 <fputs@plt+0x4a24>
    e148:	mov	r0, r5
    e14c:	bl	17518 <fputs@plt+0xe15c>
    e150:	bl	9188 <__cxa_end_cleanup@plt>
    e154:	movw	r1, #13880	; 0x3638
    e158:	movt	r1, #3
    e15c:	movw	r0, #19404	; 0x4bcc
    e160:	movt	r0, #2
    e164:	mov	r2, r1
    e168:	mov	r3, r1
    e16c:	bl	1024c <fputs@plt+0x6e90>
    e170:	mov	r4, #1
    e174:	b	af88 <fputs@plt+0x1bcc>
    e178:	vldr	d6, [r3, #216]	; 0xd8
    e17c:	vldr	d7, [r3, #128]	; 0x80
    e180:	vsub.f64	d7, d6, d7
    e184:	vstr	d7, [r3, #216]	; 0xd8
    e188:	b	dde0 <fputs@plt+0x4a24>
    e18c:	b	e128 <fputs@plt+0x4d6c>
    e190:	b	e128 <fputs@plt+0x4d6c>
    e194:	b	e128 <fputs@plt+0x4d6c>
    e198:	b	e128 <fputs@plt+0x4d6c>
    e19c:	b	e128 <fputs@plt+0x4d6c>
    e1a0:	b	e128 <fputs@plt+0x4d6c>
    e1a4:	b	e128 <fputs@plt+0x4d6c>
    e1a8:	b	e128 <fputs@plt+0x4d6c>
    e1ac:	b	e128 <fputs@plt+0x4d6c>
    e1b0:	b	e128 <fputs@plt+0x4d6c>
    e1b4:	b	e128 <fputs@plt+0x4d6c>
    e1b8:	b	e128 <fputs@plt+0x4d6c>
    e1bc:	b	e128 <fputs@plt+0x4d6c>
    e1c0:	movw	r1, #26215	; 0x6667
    e1c4:	movt	r1, #26214	; 0x6666
    e1c8:	asr	r2, r3, #31
    e1cc:	smull	ip, r1, r1, r3
    e1d0:	rsb	r2, r2, r1, asr #2
    e1d4:	add	r2, r2, r2, lsl #2
    e1d8:	sub	r3, r3, r2, lsl #1
    e1dc:	cmp	r3, #2
    e1e0:	beq	e218 <fputs@plt+0x4e5c>
    e1e4:	cmp	r3, #3
    e1e8:	beq	e20c <fputs@plt+0x4e50>
    e1ec:	movw	r2, #20604	; 0x507c
    e1f0:	cmp	r3, #1
    e1f4:	movt	r2, #2
    e1f8:	movw	r1, #18852	; 0x49a4
    e1fc:	movt	r1, #2
    e200:	movne	r1, r2
    e204:	b	df7c <fputs@plt+0x4bc0>
    e208:	b	e128 <fputs@plt+0x4d6c>
    e20c:	movw	r1, #18860	; 0x49ac
    e210:	movt	r1, #2
    e214:	b	df7c <fputs@plt+0x4bc0>
    e218:	movw	r1, #18856	; 0x49a8
    e21c:	movt	r1, #2
    e220:	b	df7c <fputs@plt+0x4bc0>
    e224:	ldr	r3, [sl, #4]
    e228:	cmp	r3, #0
    e22c:	ldrne	r2, [sl, #8]
    e230:	strne	r3, [r7, #4]
    e234:	strne	r2, [r7, #8]
    e238:	b	ae14 <fputs@plt+0x1a58>
    e23c:	movw	r1, #26215	; 0x6667
    e240:	movt	r1, #26214	; 0x6666
    e244:	asr	r2, r3, #31
    e248:	smull	r0, r1, r1, r3
    e24c:	rsb	r2, r2, r1, asr #2
    e250:	add	r2, r2, r2, lsl #2
    e254:	sub	r3, r3, r2, lsl #1
    e258:	cmp	r3, #2
    e25c:	beq	e2d4 <fputs@plt+0x4f18>
    e260:	cmp	r3, #3
    e264:	beq	e2c8 <fputs@plt+0x4f0c>
    e268:	movw	r2, #20604	; 0x507c
    e26c:	cmp	r3, #1
    e270:	movt	r2, #2
    e274:	movw	r1, #18852	; 0x49a4
    e278:	movt	r1, #2
    e27c:	movne	r1, r2
    e280:	b	e004 <fputs@plt+0x4c48>
    e284:	mov	r0, r5
    e288:	bl	17518 <fputs@plt+0xe15c>
    e28c:	bl	9188 <__cxa_end_cleanup@plt>
    e290:	bl	12600 <fputs@plt+0x9244>
    e294:	b	c8c0 <fputs@plt+0x3504>
    e298:	movw	r1, #13880	; 0x3638
    e29c:	movt	r1, #3
    e2a0:	movw	r0, #19292	; 0x4b5c
    e2a4:	movt	r0, #2
    e2a8:	mov	r2, r1
    e2ac:	mov	r3, r1
    e2b0:	bl	1024c <fputs@plt+0x6e90>
    e2b4:	mov	r4, #1
    e2b8:	b	af88 <fputs@plt+0x1bcc>
    e2bc:	bl	91ac <sqrt@plt>
    e2c0:	vmov.f64	d7, d0
    e2c4:	b	cb5c <fputs@plt+0x37a0>
    e2c8:	movw	r1, #18860	; 0x49ac
    e2cc:	movt	r1, #2
    e2d0:	b	e004 <fputs@plt+0x4c48>
    e2d4:	movw	r1, #18856	; 0x49a8
    e2d8:	movt	r1, #2
    e2dc:	b	e004 <fputs@plt+0x4c48>
    e2e0:	bl	12600 <fputs@plt+0x9244>
    e2e4:	b	bfd8 <fputs@plt+0x2c1c>
    e2e8:	bl	12600 <fputs@plt+0x9244>
    e2ec:	b	bf78 <fputs@plt+0x2bbc>
    e2f0:	ldr	r0, [sp, #64]	; 0x40
    e2f4:	bl	209f0 <_ZdlPv@@Base>
    e2f8:	bl	9188 <__cxa_end_cleanup@plt>
    e2fc:	b	e128 <fputs@plt+0x4d6c>
    e300:	bl	12600 <fputs@plt+0x9244>
    e304:	b	c068 <fputs@plt+0x2cac>
    e308:	bl	12600 <fputs@plt+0x9244>
    e30c:	b	c024 <fputs@plt+0x2c68>
    e310:	bl	12600 <fputs@plt+0x9244>
    e314:	b	c0d4 <fputs@plt+0x2d18>
    e318:	b	e128 <fputs@plt+0x4d6c>
    e31c:	b	e128 <fputs@plt+0x4d6c>
    e320:	b	e128 <fputs@plt+0x4d6c>
    e324:	mov	r4, r5
    e328:	b	df50 <fputs@plt+0x4b94>
    e32c:	b	e128 <fputs@plt+0x4d6c>
    e330:	movw	r1, #18860	; 0x49ac
    e334:	movt	r1, #2
    e338:	b	cee0 <fputs@plt+0x3b24>
    e33c:	movw	r1, #18856	; 0x49a8
    e340:	movt	r1, #2
    e344:	b	cee0 <fputs@plt+0x3b24>
    e348:	movw	r1, #18860	; 0x49ac
    e34c:	movt	r1, #2
    e350:	b	cdbc <fputs@plt+0x3a00>
    e354:	movw	r1, #18856	; 0x49a8
    e358:	movt	r1, #2
    e35c:	b	cdbc <fputs@plt+0x3a00>
    e360:	mov	r4, r5
    e364:	b	dfd8 <fputs@plt+0x4c1c>
    e368:	b	e128 <fputs@plt+0x4d6c>
    e36c:	mov	r4, #1
    e370:	bl	17518 <fputs@plt+0xe15c>
    e374:	b	af88 <fputs@plt+0x1bcc>
    e378:	mov	r0, r5
    e37c:	bl	17518 <fputs@plt+0xe15c>
    e380:	bl	9188 <__cxa_end_cleanup@plt>
    e384:	ldr	r1, [sl]
    e388:	add	r0, sp, #192	; 0xc0
    e38c:	bl	1f264 <fputs@plt+0x15ea8>
    e390:	movw	r2, #13880	; 0x3638
    e394:	movt	r2, #3
    e398:	add	r1, sp, #192	; 0xc0
    e39c:	movw	r0, #19056	; 0x4a70
    e3a0:	movt	r0, #2
    e3a4:	mov	r3, r2
    e3a8:	mov	r4, #1
    e3ac:	bl	1024c <fputs@plt+0x6e90>
    e3b0:	b	af88 <fputs@plt+0x1bcc>
    e3b4:	nop	{0}
	...
    e3c0:	strdeq	r0, [r3], -ip
    e3c4:	mov	r0, r5
    e3c8:	bl	17518 <fputs@plt+0xe15c>
    e3cc:	bl	9188 <__cxa_end_cleanup@plt>
    e3d0:	movw	r1, #13880	; 0x3638
    e3d4:	movt	r1, #3
    e3d8:	movw	r0, #19328	; 0x4b80
    e3dc:	movt	r0, #2
    e3e0:	mov	r2, r1
    e3e4:	mov	r3, r1
    e3e8:	bl	1024c <fputs@plt+0x6e90>
    e3ec:	mov	r4, #1
    e3f0:	b	af88 <fputs@plt+0x1bcc>
    e3f4:	movw	r1, #13880	; 0x3638
    e3f8:	movt	r1, #3
    e3fc:	movw	r0, #19312	; 0x4b70
    e400:	movt	r0, #2
    e404:	mov	r2, r1
    e408:	mov	r3, r1
    e40c:	bl	1024c <fputs@plt+0x6e90>
    e410:	mov	r4, #1
    e414:	b	af88 <fputs@plt+0x1bcc>
    e418:	ldr	r3, [pc, #4]	; e424 <fputs@plt+0x5068>
    e41c:	str	r3, [r0]
    e420:	bx	lr
    e424:	andeq	r4, r2, r8, ror sp
    e428:	mov	r0, #0
    e42c:	bx	lr
    e430:	mov	r3, r0
    e434:	mov	r0, #1
    e438:	ldr	ip, [r3, #12]
    e43c:	ldr	r3, [r3, #16]
    e440:	str	ip, [r1]
    e444:	str	r3, [r2]
    e448:	bx	lr
    e44c:	ldr	r3, [r0, #12]
    e450:	cmp	r3, #0
    e454:	beq	e474 <fputs@plt+0x50b8>
    e458:	ldrb	r2, [r3]
    e45c:	cmp	r2, #0
    e460:	beq	e474 <fputs@plt+0x50b8>
    e464:	add	r2, r3, #1
    e468:	str	r2, [r0, #12]
    e46c:	ldrb	r0, [r3]
    e470:	bx	lr
    e474:	mvn	r0, #0
    e478:	bx	lr
    e47c:	ldr	r3, [r0, #12]
    e480:	cmp	r3, #0
    e484:	beq	e498 <fputs@plt+0x50dc>
    e488:	ldrb	r0, [r3]
    e48c:	cmp	r0, #0
    e490:	mvneq	r0, #0
    e494:	bx	lr
    e498:	mvn	r0, #0
    e49c:	bx	lr
    e4a0:	mov	r3, r0
    e4a4:	mvn	r2, #0
    e4a8:	ldr	r0, [r0, #8]
    e4ac:	str	r2, [r3, #8]
    e4b0:	bx	lr
    e4b4:	ldr	r0, [r0, #8]
    e4b8:	bx	lr
    e4bc:	ldr	r0, [r0, #172]	; 0xac
    e4c0:	push	{r3, lr}
    e4c4:	cmp	r0, #0
    e4c8:	beq	e4dc <fputs@plt+0x5120>
    e4cc:	ldr	r3, [r0]
    e4d0:	ldr	r3, [r3, #8]
    e4d4:	blx	r3
    e4d8:	pop	{r3, pc}
    e4dc:	mvn	r0, #0
    e4e0:	pop	{r3, pc}
    e4e4:	push	{r4, lr}
    e4e8:	mov	r4, r0
    e4ec:	ldr	r0, [r0, #4]
    e4f0:	cmp	r0, #0
    e4f4:	bne	e518 <fputs@plt+0x515c>
    e4f8:	b	e540 <fputs@plt+0x5184>
    e4fc:	ldr	r3, [r3]
    e500:	str	r2, [r4, #4]
    e504:	ldr	r3, [r3, #4]
    e508:	blx	r3
    e50c:	ldr	r0, [r4, #4]
    e510:	cmp	r0, #0
    e514:	beq	e540 <fputs@plt+0x5184>
    e518:	ldr	r3, [r0]
    e51c:	ldr	r3, [r3, #8]
    e520:	blx	r3
    e524:	cmn	r0, #1
    e528:	popne	{r4, pc}
    e52c:	ldr	r3, [r4, #4]
    e530:	ldr	r2, [r3, #4]
    e534:	mov	r0, r3
    e538:	cmp	r2, #0
    e53c:	bne	e4fc <fputs@plt+0x5140>
    e540:	mvn	r0, #0
    e544:	pop	{r4, pc}
    e548:	mov	r3, r0
    e54c:	mov	r0, #1
    e550:	ldr	ip, [r3, #8]
    e554:	ldr	r3, [r3, #12]
    e558:	str	ip, [r1]
    e55c:	str	r3, [r2]
    e560:	bx	lr
    e564:	ldr	r3, [r0, #4]
    e568:	push	{r4, r5, r6, lr}
    e56c:	cmp	r3, #0
    e570:	mov	r5, r0
    e574:	ldr	r3, [r0]
    e578:	movne	r4, #0
    e57c:	beq	e5c4 <fputs@plt+0x5208>
    e580:	ldr	r0, [r3, r4, lsl #3]
    e584:	lsl	r6, r4, #3
    e588:	add	r2, r3, r6
    e58c:	add	r4, r4, #1
    e590:	cmp	r0, #0
    e594:	beq	e5a4 <fputs@plt+0x51e8>
    e598:	bl	92f0 <_ZdaPv@plt>
    e59c:	ldr	r3, [r5]
    e5a0:	add	r2, r3, r6
    e5a4:	ldr	r0, [r2, #4]
    e5a8:	cmp	r0, #0
    e5ac:	beq	e5b8 <fputs@plt+0x51fc>
    e5b0:	bl	92f0 <_ZdaPv@plt>
    e5b4:	ldr	r3, [r5]
    e5b8:	ldr	r2, [r5, #4]
    e5bc:	cmp	r2, r4
    e5c0:	bhi	e580 <fputs@plt+0x51c4>
    e5c4:	cmp	r3, #0
    e5c8:	beq	e5d4 <fputs@plt+0x5218>
    e5cc:	mov	r0, r3
    e5d0:	bl	92f0 <_ZdaPv@plt>
    e5d4:	mov	r0, r5
    e5d8:	pop	{r4, r5, r6, pc}
    e5dc:	push	{r4, lr}
    e5e0:	mov	r4, r0
    e5e4:	ldr	r0, [r0, #8]
    e5e8:	ldr	r3, [pc, #28]	; e60c <fputs@plt+0x5250>
    e5ec:	cmp	r0, #0
    e5f0:	str	r3, [r4]
    e5f4:	beq	e5fc <fputs@plt+0x5240>
    e5f8:	bl	92f0 <_ZdaPv@plt>
    e5fc:	ldr	r3, [pc, #12]	; e610 <fputs@plt+0x5254>
    e600:	mov	r0, r4
    e604:	str	r3, [r4]
    e608:	pop	{r4, pc}
    e60c:			; <UNDEFINED> instruction: 0x00024db8
    e610:	andeq	r4, r2, r8, ror sp
    e614:	ldr	r3, [r0, #20]
    e618:	ldr	r2, [pc, #88]	; e678 <fputs@plt+0x52bc>
    e61c:	cmp	r3, #0
    e620:	push	{r4, r5, r6, lr}
    e624:	mov	r6, r0
    e628:	str	r2, [r0]
    e62c:	addgt	r5, r0, #20
    e630:	movgt	r4, #0
    e634:	ble	e658 <fputs@plt+0x529c>
    e638:	ldr	r0, [r5, #4]!
    e63c:	add	r4, r4, #1
    e640:	cmp	r0, #0
    e644:	beq	e650 <fputs@plt+0x5294>
    e648:	bl	92f0 <_ZdaPv@plt>
    e64c:	ldr	r3, [r6, #20]
    e650:	cmp	r3, r4
    e654:	bgt	e638 <fputs@plt+0x527c>
    e658:	ldr	r0, [r6, #8]
    e65c:	cmp	r0, #0
    e660:	beq	e668 <fputs@plt+0x52ac>
    e664:	bl	92f0 <_ZdaPv@plt>
    e668:	ldr	r3, [pc, #12]	; e67c <fputs@plt+0x52c0>
    e66c:	mov	r0, r6
    e670:	str	r3, [r6]
    e674:	pop	{r4, r5, r6, pc}
    e678:	ldrdeq	r4, [r2], -r8
    e67c:	andeq	r4, r2, r8, ror sp
    e680:	push	{r4, lr}
    e684:	mov	r4, r0
    e688:	ldr	r0, [r0, #8]
    e68c:	ldr	r3, [pc, #44]	; e6c0 <fputs@plt+0x5304>
    e690:	cmp	r0, #0
    e694:	str	r3, [r4]
    e698:	beq	e6a0 <fputs@plt+0x52e4>
    e69c:	bl	92f0 <_ZdaPv@plt>
    e6a0:	ldr	r0, [r4, #12]
    e6a4:	cmp	r0, #0
    e6a8:	beq	e6b0 <fputs@plt+0x52f4>
    e6ac:	bl	92f0 <_ZdaPv@plt>
    e6b0:	ldr	r3, [pc, #12]	; e6c4 <fputs@plt+0x5308>
    e6b4:	mov	r0, r4
    e6b8:	str	r3, [r4]
    e6bc:	pop	{r4, pc}
    e6c0:	strdeq	r4, [r2], -r8
    e6c4:	andeq	r4, r2, r8, ror sp
    e6c8:	ldr	r3, [pc, #20]	; e6e4 <fputs@plt+0x5328>
    e6cc:	push	{r4, lr}
    e6d0:	mov	r4, r0
    e6d4:	str	r3, [r0]
    e6d8:	bl	209f0 <_ZdlPv@@Base>
    e6dc:	mov	r0, r4
    e6e0:	pop	{r4, pc}
    e6e4:	andeq	r4, r2, r8, ror sp
    e6e8:	push	{r4, lr}
    e6ec:	mov	r4, r0
    e6f0:	ldr	r0, [r0, #8]
    e6f4:	ldr	r3, [pc, #36]	; e720 <fputs@plt+0x5364>
    e6f8:	cmp	r0, #0
    e6fc:	str	r3, [r4]
    e700:	beq	e708 <fputs@plt+0x534c>
    e704:	bl	92f0 <_ZdaPv@plt>
    e708:	ldr	r3, [pc, #20]	; e724 <fputs@plt+0x5368>
    e70c:	mov	r0, r4
    e710:	str	r3, [r4]
    e714:	bl	209f0 <_ZdlPv@@Base>
    e718:	mov	r0, r4
    e71c:	pop	{r4, pc}
    e720:			; <UNDEFINED> instruction: 0x00024db8
    e724:	andeq	r4, r2, r8, ror sp
    e728:	push	{r4, lr}
    e72c:	mov	r4, r0
    e730:	bl	e614 <fputs@plt+0x5258>
    e734:	mov	r0, r4
    e738:	bl	209f0 <_ZdlPv@@Base>
    e73c:	mov	r0, r4
    e740:	pop	{r4, pc}
    e744:	push	{r4, lr}
    e748:	mov	r4, r0
    e74c:	bl	e680 <fputs@plt+0x52c4>
    e750:	mov	r0, r4
    e754:	bl	209f0 <_ZdlPv@@Base>
    e758:	mov	r0, r4
    e75c:	pop	{r4, pc}
    e760:	ldr	r3, [pc, #44]	; e794 <fputs@plt+0x53d8>
    e764:	push	{r4, lr}
    e768:	mov	r4, r0
    e76c:	ldr	r0, [r0, #16]
    e770:	str	r3, [r4]
    e774:	bl	9128 <fclose@plt>
    e778:	ldr	r3, [pc, #24]	; e798 <fputs@plt+0x53dc>
    e77c:	mov	r0, r4
    e780:	str	r3, [r4]
    e784:	pop	{r4, pc}
    e788:	ldr	r3, [pc, #8]	; e798 <fputs@plt+0x53dc>
    e78c:	str	r3, [r4]
    e790:	bl	9188 <__cxa_end_cleanup@plt>
    e794:	andeq	r4, r2, r8, lsl lr
    e798:	andeq	r4, r2, r8, ror sp
    e79c:	ldr	r3, [pc, #52]	; e7d8 <fputs@plt+0x541c>
    e7a0:	push	{r4, lr}
    e7a4:	mov	r4, r0
    e7a8:	ldr	r0, [r0, #16]
    e7ac:	str	r3, [r4]
    e7b0:	bl	9128 <fclose@plt>
    e7b4:	ldr	r3, [pc, #32]	; e7dc <fputs@plt+0x5420>
    e7b8:	mov	r0, r4
    e7bc:	str	r3, [r4]
    e7c0:	bl	209f0 <_ZdlPv@@Base>
    e7c4:	mov	r0, r4
    e7c8:	pop	{r4, pc}
    e7cc:	ldr	r3, [pc, #8]	; e7dc <fputs@plt+0x5420>
    e7d0:	str	r3, [r4]
    e7d4:	bl	9188 <__cxa_end_cleanup@plt>
    e7d8:	andeq	r4, r2, r8, lsl lr
    e7dc:	andeq	r4, r2, r8, ror sp
    e7e0:	ldr	r3, [pc, #64]	; e828 <fputs@plt+0x546c>
    e7e4:	push	{r4, lr}
    e7e8:	mov	r4, r0
    e7ec:	ldr	r0, [r0, #8]
    e7f0:	str	r3, [r4]
    e7f4:	bl	9128 <fclose@plt>
    e7f8:	add	r0, r4, #20
    e7fc:	bl	20cf0 <_ZdlPv@@Base+0x300>
    e800:	ldr	r3, [pc, #36]	; e82c <fputs@plt+0x5470>
    e804:	mov	r0, r4
    e808:	str	r3, [r4]
    e80c:	pop	{r4, pc}
    e810:	add	r0, r4, #20
    e814:	bl	20cf0 <_ZdlPv@@Base+0x300>
    e818:	ldr	r3, [pc, #12]	; e82c <fputs@plt+0x5470>
    e81c:	str	r3, [r4]
    e820:	bl	9188 <__cxa_end_cleanup@plt>
    e824:	b	e818 <fputs@plt+0x545c>
    e828:	andeq	r4, r2, r8, lsr lr
    e82c:	andeq	r4, r2, r8, ror sp
    e830:	push	{r4, lr}
    e834:	mov	r4, r0
    e838:	bl	e7e0 <fputs@plt+0x5424>
    e83c:	mov	r0, r4
    e840:	bl	209f0 <_ZdlPv@@Base>
    e844:	mov	r0, r4
    e848:	pop	{r4, pc}
    e84c:	push	{r4, lr}
    e850:	mov	r4, r0
    e854:	ldr	r0, [r0, #12]
    e858:	ldr	r3, [pc, #64]	; e8a0 <fputs@plt+0x54e4>
    e85c:	cmp	r0, #0
    e860:	str	r3, [r4]
    e864:	beq	e86c <fputs@plt+0x54b0>
    e868:	bl	92f0 <_ZdaPv@plt>
    e86c:	ldr	r0, [r4, #16]
    e870:	cmp	r0, #0
    e874:	beq	e87c <fputs@plt+0x54c0>
    e878:	bl	92f0 <_ZdaPv@plt>
    e87c:	add	r0, r4, #160	; 0xa0
    e880:	bl	20cf0 <_ZdlPv@@Base+0x300>
    e884:	ldr	r3, [pc, #24]	; e8a4 <fputs@plt+0x54e8>
    e888:	mov	r0, r4
    e88c:	str	r3, [r4]
    e890:	pop	{r4, pc}
    e894:	ldr	r3, [pc, #8]	; e8a4 <fputs@plt+0x54e8>
    e898:	str	r3, [r4]
    e89c:	bl	9188 <__cxa_end_cleanup@plt>
    e8a0:	andeq	r4, r2, r8, asr lr
    e8a4:	andeq	r4, r2, r8, ror sp
    e8a8:	push	{r4, lr}
    e8ac:	mov	r4, r0
    e8b0:	bl	e84c <fputs@plt+0x5490>
    e8b4:	mov	r0, r4
    e8b8:	bl	209f0 <_ZdlPv@@Base>
    e8bc:	mov	r0, r4
    e8c0:	pop	{r4, pc}
    e8c4:	push	{r4, lr}
    e8c8:	mov	r4, r0
    e8cc:	ldr	r0, [r0, #172]	; 0xac
    e8d0:	ldr	r3, [pc, #48]	; e908 <fputs@plt+0x554c>
    e8d4:	cmp	r0, #0
    e8d8:	str	r3, [r4]
    e8dc:	beq	e8ec <fputs@plt+0x5530>
    e8e0:	ldr	r3, [r0]
    e8e4:	ldr	r3, [r3, #4]
    e8e8:	blx	r3
    e8ec:	mov	r0, r4
    e8f0:	bl	e84c <fputs@plt+0x5490>
    e8f4:	mov	r0, r4
    e8f8:	pop	{r4, pc}
    e8fc:	mov	r0, r4
    e900:	bl	e84c <fputs@plt+0x5490>
    e904:	bl	9188 <__cxa_end_cleanup@plt>
    e908:	andeq	r4, r2, r8, ror lr
    e90c:	push	{r4, lr}
    e910:	mov	r4, r0
    e914:	bl	e8c4 <fputs@plt+0x5508>
    e918:	mov	r0, r4
    e91c:	bl	209f0 <_ZdlPv@@Base>
    e920:	mov	r0, r4
    e924:	pop	{r4, pc}
    e928:	push	{r4, r5, r6, lr}
    e92c:	movw	r6, #1424	; 0x590
    e930:	movt	r6, #3
    e934:	sub	sp, sp, #24
    e938:	mov	r5, r0
    e93c:	ldr	r0, [r0, #16]
    e940:	ldr	r3, [r6]
    e944:	str	r3, [sp, #20]
    e948:	bl	914c <_IO_getc@plt>
    e94c:	subs	r1, r0, #0
    e950:	blt	e970 <fputs@plt+0x55b4>
    e954:	movw	r4, #1104	; 0x450
    e958:	movt	r4, #3
    e95c:	ldrb	r3, [r4, r1]
    e960:	cmp	r3, #0
    e964:	bne	e98c <fputs@plt+0x55d0>
    e968:	cmp	r1, #10
    e96c:	beq	e9d4 <fputs@plt+0x5618>
    e970:	ldr	r2, [sp, #20]
    e974:	mov	r0, r1
    e978:	ldr	r3, [r6]
    e97c:	cmp	r2, r3
    e980:	bne	e9e4 <fputs@plt+0x5628>
    e984:	add	sp, sp, #24
    e988:	pop	{r4, r5, r6, pc}
    e98c:	mov	r0, sp
    e990:	bl	1f290 <fputs@plt+0x15ed4>
    e994:	movw	r2, #13880	; 0x3638
    e998:	movt	r2, #3
    e99c:	mov	r1, sp
    e9a0:	movw	r0, #20440	; 0x4fd8
    e9a4:	movt	r0, #2
    e9a8:	mov	r3, r2
    e9ac:	bl	1f708 <fputs@plt+0x1634c>
    e9b0:	ldr	r0, [r5, #16]
    e9b4:	bl	914c <_IO_getc@plt>
    e9b8:	subs	r1, r0, #0
    e9bc:	blt	e970 <fputs@plt+0x55b4>
    e9c0:	ldrb	r3, [r4, r1]
    e9c4:	cmp	r3, #0
    e9c8:	bne	e98c <fputs@plt+0x55d0>
    e9cc:	cmp	r1, #10
    e9d0:	bne	e970 <fputs@plt+0x55b4>
    e9d4:	ldr	r3, [r5, #12]
    e9d8:	add	r3, r3, #1
    e9dc:	str	r3, [r5, #12]
    e9e0:	b	e970 <fputs@plt+0x55b4>
    e9e4:	bl	92b4 <__stack_chk_fail@plt>
    e9e8:	push	{r4, r5, r6, r7, lr}
    e9ec:	movw	r7, #1424	; 0x590
    e9f0:	movt	r7, #3
    e9f4:	sub	sp, sp, #28
    e9f8:	mov	r6, r0
    e9fc:	ldr	r0, [r0, #16]
    ea00:	ldr	r3, [r7]
    ea04:	str	r3, [sp, #20]
    ea08:	bl	914c <_IO_getc@plt>
    ea0c:	subs	r4, r0, #0
    ea10:	blt	ea94 <fputs@plt+0x56d8>
    ea14:	movw	r5, #1104	; 0x450
    ea18:	movt	r5, #3
    ea1c:	ldrb	r3, [r5, r4]
    ea20:	cmp	r3, #0
    ea24:	beq	ea6c <fputs@plt+0x56b0>
    ea28:	mov	r1, r4
    ea2c:	mov	r0, sp
    ea30:	bl	1f290 <fputs@plt+0x15ed4>
    ea34:	movw	r2, #13880	; 0x3638
    ea38:	movt	r2, #3
    ea3c:	mov	r1, sp
    ea40:	movw	r0, #20440	; 0x4fd8
    ea44:	movt	r0, #2
    ea48:	mov	r3, r2
    ea4c:	bl	1f708 <fputs@plt+0x1634c>
    ea50:	ldr	r0, [r6, #16]
    ea54:	bl	914c <_IO_getc@plt>
    ea58:	subs	r4, r0, #0
    ea5c:	blt	ea94 <fputs@plt+0x56d8>
    ea60:	ldrb	r3, [r5, r4]
    ea64:	cmp	r3, #0
    ea68:	bne	ea28 <fputs@plt+0x566c>
    ea6c:	ldr	r1, [r6, #16]
    ea70:	mov	r0, r4
    ea74:	bl	9194 <ungetc@plt>
    ea78:	ldr	r2, [sp, #20]
    ea7c:	mov	r0, r4
    ea80:	ldr	r3, [r7]
    ea84:	cmp	r2, r3
    ea88:	bne	eaa0 <fputs@plt+0x56e4>
    ea8c:	add	sp, sp, #28
    ea90:	pop	{r4, r5, r6, r7, pc}
    ea94:	cmn	r4, #1
    ea98:	beq	ea78 <fputs@plt+0x56bc>
    ea9c:	b	ea6c <fputs@plt+0x56b0>
    eaa0:	bl	92b4 <__stack_chk_fail@plt>
    eaa4:	ldr	r3, [r0, #16]
    eaa8:	cmp	r3, #0
    eaac:	beq	eac0 <fputs@plt+0x5704>
    eab0:	ldrb	r2, [r3]
    eab4:	cmp	r2, #0
    eab8:	streq	r2, [r0, #16]
    eabc:	bne	eb38 <fputs@plt+0x577c>
    eac0:	ldr	r3, [r0, #12]
    eac4:	cmp	r3, #0
    eac8:	beq	eb48 <fputs@plt+0x578c>
    eacc:	mov	ip, r3
    ead0:	ldrb	r2, [r3], #1
    ead4:	eor	r1, r2, #128	; 0x80
    ead8:	cmp	r1, #31
    eadc:	bhi	eb24 <fputs@plt+0x5768>
    eae0:	str	r3, [r0, #12]
    eae4:	ldrb	r2, [r3, #-1]
    eae8:	ldr	r1, [r0, #20]
    eaec:	sub	ip, r2, #122	; 0x7a
    eaf0:	sub	r2, r2, #128	; 0x80
    eaf4:	cmp	r2, r1
    eaf8:	bge	eacc <fputs@plt+0x5710>
    eafc:	ldr	r2, [r0, ip, lsl #2]
    eb00:	cmp	r2, #0
    eb04:	beq	eacc <fputs@plt+0x5710>
    eb08:	ldrb	r1, [r2]
    eb0c:	cmp	r1, #0
    eb10:	beq	eacc <fputs@plt+0x5710>
    eb14:	add	r3, r2, #1
    eb18:	str	r3, [r0, #16]
    eb1c:	ldrb	r0, [r2]
    eb20:	bx	lr
    eb24:	cmp	r2, #0
    eb28:	beq	eb48 <fputs@plt+0x578c>
    eb2c:	str	r3, [r0, #12]
    eb30:	ldrb	r0, [ip]
    eb34:	bx	lr
    eb38:	add	r2, r3, #1
    eb3c:	str	r2, [r0, #16]
    eb40:	ldrb	r0, [r3]
    eb44:	bx	lr
    eb48:	mvn	r0, #0
    eb4c:	bx	lr
    eb50:	ldr	r3, [r0, #16]
    eb54:	cmp	r3, #0
    eb58:	beq	eb6c <fputs@plt+0x57b0>
    eb5c:	ldrb	r2, [r3]
    eb60:	cmp	r2, #0
    eb64:	streq	r2, [r0, #16]
    eb68:	bne	ebd8 <fputs@plt+0x581c>
    eb6c:	ldr	r3, [r0, #12]
    eb70:	cmp	r3, #0
    eb74:	beq	ebe0 <fputs@plt+0x5824>
    eb78:	ldrb	r2, [r3], #1
    eb7c:	eor	r1, r2, #128	; 0x80
    eb80:	cmp	r1, #31
    eb84:	bhi	ebc8 <fputs@plt+0x580c>
    eb88:	str	r3, [r0, #12]
    eb8c:	ldrb	r2, [r3, #-1]
    eb90:	ldr	r1, [r0, #20]
    eb94:	sub	ip, r2, #122	; 0x7a
    eb98:	sub	r2, r2, #128	; 0x80
    eb9c:	cmp	r2, r1
    eba0:	bge	eb78 <fputs@plt+0x57bc>
    eba4:	ldr	r2, [r0, ip, lsl #2]
    eba8:	cmp	r2, #0
    ebac:	beq	eb78 <fputs@plt+0x57bc>
    ebb0:	ldrb	r1, [r2]
    ebb4:	cmp	r1, #0
    ebb8:	beq	eb78 <fputs@plt+0x57bc>
    ebbc:	str	r2, [r0, #16]
    ebc0:	ldrb	r0, [r2]
    ebc4:	bx	lr
    ebc8:	cmp	r2, #0
    ebcc:	movne	r0, r2
    ebd0:	mvneq	r0, #0
    ebd4:	bx	lr
    ebd8:	mov	r0, r2
    ebdc:	bx	lr
    ebe0:	mvn	r0, #0
    ebe4:	bx	lr
    ebe8:	push	{r4, r5, lr}
    ebec:	movw	r4, #1424	; 0x590
    ebf0:	movt	r4, #3
    ebf4:	ldr	r3, [r0, #48]	; 0x30
    ebf8:	sub	sp, sp, #20
    ebfc:	mov	r5, r0
    ec00:	ldr	r2, [r4]
    ec04:	cmp	r3, #0
    ec08:	str	r2, [sp, #12]
    ec0c:	beq	ece4 <fputs@plt+0x5928>
    ec10:	ldrb	r0, [r3]
    ec14:	cmp	r0, #0
    ec18:	bne	ec2c <fputs@plt+0x5870>
    ec1c:	ldr	r3, [r5, #52]	; 0x34
    ec20:	cmp	r3, #0
    ec24:	moveq	r0, #10
    ec28:	bne	ec44 <fputs@plt+0x5888>
    ec2c:	ldr	r2, [sp, #12]
    ec30:	ldr	r3, [r4]
    ec34:	cmp	r2, r3
    ec38:	bne	ecec <fputs@plt+0x5930>
    ec3c:	add	sp, sp, #20
    ec40:	pop	{r4, r5, pc}
    ec44:	ldr	r0, [r5, #8]
    ec48:	mov	r1, sp
    ec4c:	bl	9f24 <fputs@plt+0xb68>
    ec50:	cmp	r0, #0
    ec54:	beq	ece4 <fputs@plt+0x5928>
    ec58:	ldr	r3, [r5, #32]
    ec5c:	cmp	r3, #0
    ec60:	bne	ecc8 <fputs@plt+0x590c>
    ec64:	vldr	d6, [r5, #16]
    ec68:	vldr	d7, [r5, #24]
    ec6c:	vcmpe.f64	d6, d7
    ec70:	vmrs	APSR_nzcv, fpscr
    ec74:	bhi	ec90 <fputs@plt+0x58d4>
    ec78:	vldr	d5, [sp]
    ec7c:	vldr	d4, [r5, #40]	; 0x28
    ec80:	vadd.f64	d5, d4, d5
    ec84:	vcmpe.f64	d7, d5
    ec88:	vmrs	APSR_nzcv, fpscr
    ec8c:	bmi	ece4 <fputs@plt+0x5928>
    ec90:	vcmpe.f64	d6, d7
    ec94:	vmrs	APSR_nzcv, fpscr
    ec98:	blt	ecb4 <fputs@plt+0x58f8>
    ec9c:	vldr	d6, [sp]
    eca0:	vldr	d5, [r5, #40]	; 0x28
    eca4:	vadd.f64	d6, d5, d6
    eca8:	vcmpe.f64	d7, d6
    ecac:	vmrs	APSR_nzcv, fpscr
    ecb0:	bgt	ece4 <fputs@plt+0x5928>
    ecb4:	ldr	r3, [r5, #12]
    ecb8:	ldrb	r0, [r3]
    ecbc:	cmp	r0, #0
    ecc0:	mvneq	r0, #0
    ecc4:	b	ec2c <fputs@plt+0x5870>
    ecc8:	vldr	d6, [sp]
    eccc:	vldr	d5, [r5, #40]	; 0x28
    ecd0:	vmul.f64	d6, d5, d6
    ecd4:	vldr	d7, [r5, #24]
    ecd8:	vcmpe.f64	d6, d7
    ecdc:	vmrs	APSR_nzcv, fpscr
    ece0:	ble	ecb4 <fputs@plt+0x58f8>
    ece4:	mvn	r0, #0
    ece8:	b	ec2c <fputs@plt+0x5870>
    ecec:	bl	92b4 <__stack_chk_fail@plt>
    ecf0:	push	{r3, r4, r5, r6, r7, lr}
    ecf4:	add	r6, r0, #160	; 0xa0
    ecf8:	mov	r4, r0
    ecfc:	mov	r5, #0
    ed00:	mov	r0, r6
    ed04:	mov	r7, r5
    ed08:	bl	21274 <_ZdlPv@@Base+0x884>
    ed0c:	ldr	r3, [r4]
    ed10:	str	r5, [r4, #156]	; 0x9c
    ed14:	mov	r0, r4
    ed18:	ldr	r3, [r3, #20]
    ed1c:	blx	r3
    ed20:	mov	r5, r0
    ed24:	cmp	r5, #32
    ed28:	beq	edd8 <fputs@plt+0x5a1c>
    ed2c:	cmn	r5, #1
    ed30:	cmpne	r5, #10
    ed34:	beq	ee10 <fputs@plt+0x5a54>
    ed38:	ldr	r2, [r4, #156]	; 0x9c
    ed3c:	cmp	r2, #32
    ed40:	beq	edf0 <fputs@plt+0x5a34>
    ed44:	ldr	r3, [r4, #164]	; 0xa4
    ed48:	add	r1, r4, r2, lsl #2
    ed4c:	add	r2, r2, #1
    ed50:	str	r2, [r4, #156]	; 0x9c
    ed54:	str	r3, [r1, #28]
    ed58:	ldr	r2, [r4, #168]	; 0xa8
    ed5c:	uxtb	r5, r5
    ed60:	cmp	r2, r3
    ed64:	bgt	ed74 <fputs@plt+0x59b8>
    ed68:	mov	r0, r6
    ed6c:	bl	20e3c <_ZdlPv@@Base+0x44c>
    ed70:	ldr	r3, [r4, #164]	; 0xa4
    ed74:	ldr	r2, [r4, #160]	; 0xa0
    ed78:	add	r1, r3, #1
    ed7c:	str	r1, [r4, #164]	; 0xa4
    ed80:	mov	r0, r4
    ed84:	strb	r5, [r2, r3]
    ed88:	ldr	r3, [r4]
    ed8c:	ldr	r3, [r3, #20]
    ed90:	blx	r3
    ed94:	ldr	r3, [r4, #164]	; 0xa4
    ed98:	cmp	r0, #10
    ed9c:	cmpne	r0, #32
    eda0:	mov	r5, r0
    eda4:	bne	ed58 <fputs@plt+0x599c>
    eda8:	ldr	r2, [r4, #168]	; 0xa8
    edac:	cmp	r3, r2
    edb0:	blt	edc0 <fputs@plt+0x5a04>
    edb4:	mov	r0, r6
    edb8:	bl	20e3c <_ZdlPv@@Base+0x44c>
    edbc:	ldr	r3, [r4, #164]	; 0xa4
    edc0:	ldr	r2, [r4, #160]	; 0xa0
    edc4:	cmp	r5, #32
    edc8:	add	r1, r3, #1
    edcc:	str	r1, [r4, #164]	; 0xa4
    edd0:	strb	r7, [r2, r3]
    edd4:	bne	ed2c <fputs@plt+0x5970>
    edd8:	ldr	r3, [r4]
    eddc:	mov	r0, r4
    ede0:	ldr	r3, [r3, #20]
    ede4:	blx	r3
    ede8:	mov	r5, r0
    edec:	b	ed24 <fputs@plt+0x5968>
    edf0:	ldr	r3, [r4]
    edf4:	mov	r0, r4
    edf8:	ldr	r3, [r3, #20]
    edfc:	blx	r3
    ee00:	cmp	r0, #10
    ee04:	cmnne	r0, #1
    ee08:	mov	r5, r0
    ee0c:	bne	edf0 <fputs@plt+0x5a34>
    ee10:	ldr	r1, [r4, #16]
    ee14:	cmp	r1, #0
    ee18:	beq	ee88 <fputs@plt+0x5acc>
    ee1c:	ldr	r3, [r4, #156]	; 0x9c
    ee20:	cmp	r3, #0
    ee24:	ble	ee60 <fputs@plt+0x5aa4>
    ee28:	ldr	r6, [r4, #28]
    ee2c:	cmp	r6, #0
    ee30:	blt	ee70 <fputs@plt+0x5ab4>
    ee34:	ldr	r3, [r4, #164]	; 0xa4
    ee38:	cmp	r6, r3
    ee3c:	bge	ee70 <fputs@plt+0x5ab4>
    ee40:	ldr	r0, [r4, #160]	; 0xa0
    ee44:	add	r0, r0, r6
    ee48:	bl	9380 <strcmp@plt>
    ee4c:	cmp	r0, #0
    ee50:	bne	ee88 <fputs@plt+0x5acc>
    ee54:	mov	r3, #1
    ee58:	str	r3, [r4, #8]
    ee5c:	pop	{r3, r4, r5, r6, r7, pc}
    ee60:	subs	r3, r5, #10
    ee64:	rsbs	r0, r3, #0
    ee68:	adcs	r0, r0, r3
    ee6c:	pop	{r3, r4, r5, r6, r7, pc}
    ee70:	movw	r1, #20472	; 0x4ff8
    ee74:	mov	r0, #99	; 0x63
    ee78:	movt	r1, #2
    ee7c:	bl	1eec8 <fputs@plt+0x15b0c>
    ee80:	ldr	r1, [r4, #16]
    ee84:	b	ee40 <fputs@plt+0x5a84>
    ee88:	ldr	r3, [r4, #156]	; 0x9c
    ee8c:	cmp	r3, #0
    ee90:	ble	ee60 <fputs@plt+0x5aa4>
    ee94:	mov	r0, #1
    ee98:	pop	{r3, r4, r5, r6, r7, pc}
    ee9c:	ldr	r3, [r0, #24]
    eea0:	push	{r4, r5, r6, lr}
    eea4:	cmp	r3, #0
    eea8:	mov	r4, r0
    eeac:	beq	eec0 <fputs@plt+0x5b04>
    eeb0:	ldrb	r2, [r3]
    eeb4:	cmp	r2, #0
    eeb8:	streq	r2, [r0, #24]
    eebc:	bne	ef80 <fputs@plt+0x5bc4>
    eec0:	ldr	r2, [r4, #20]
    eec4:	cmp	r2, #0
    eec8:	beq	ef90 <fputs@plt+0x5bd4>
    eecc:	ldrb	r1, [r2]
    eed0:	cmp	r1, #0
    eed4:	bne	eee4 <fputs@plt+0x5b28>
    eed8:	b	efbc <fputs@plt+0x5c00>
    eedc:	ldrb	r1, [r3]
    eee0:	mov	r2, r3
    eee4:	eor	r0, r1, #128	; 0x80
    eee8:	add	r3, r2, #1
    eeec:	cmp	r0, #31
    eef0:	bhi	ef50 <fputs@plt+0x5b94>
    eef4:	str	r3, [r4, #20]
    eef8:	ldrb	r2, [r2]
    eefc:	ldr	r1, [r4, #156]	; 0x9c
    ef00:	sub	r5, r2, #128	; 0x80
    ef04:	cmp	r5, r1
    ef08:	bge	eedc <fputs@plt+0x5b20>
    ef0c:	add	r2, r4, r2, lsl #2
    ef10:	movw	r1, #20472	; 0x4ff8
    ef14:	mov	r0, #99	; 0x63
    ef18:	movt	r1, #2
    ef1c:	ldr	r6, [r2, #-484]	; 0xfffffe1c
    ef20:	cmp	r6, #0
    ef24:	blt	ef34 <fputs@plt+0x5b78>
    ef28:	ldr	r3, [r4, #164]	; 0xa4
    ef2c:	cmp	r6, r3
    ef30:	blt	ef38 <fputs@plt+0x5b7c>
    ef34:	bl	1eec8 <fputs@plt+0x15b0c>
    ef38:	ldr	r3, [r4, #160]	; 0xa0
    ef3c:	ldrb	r2, [r3, r6]
    ef40:	cmp	r2, #0
    ef44:	bne	ef64 <fputs@plt+0x5ba8>
    ef48:	ldr	r3, [r4, #20]
    ef4c:	b	eedc <fputs@plt+0x5b20>
    ef50:	cmp	r1, #0
    ef54:	beq	eec4 <fputs@plt+0x5b08>
    ef58:	str	r3, [r4, #20]
    ef5c:	ldrb	r0, [r2]
    ef60:	pop	{r4, r5, r6, pc}
    ef64:	add	r5, r4, r5, lsl #2
    ef68:	ldr	r2, [r5, #28]
    ef6c:	add	r1, r3, r2
    ef70:	add	r1, r1, #1
    ef74:	str	r1, [r4, #24]
    ef78:	ldrb	r0, [r3, r2]
    ef7c:	pop	{r4, r5, r6, pc}
    ef80:	add	r2, r3, #1
    ef84:	str	r2, [r0, #24]
    ef88:	ldrb	r0, [r3]
    ef8c:	pop	{r4, r5, r6, pc}
    ef90:	ldr	r3, [r4, #8]
    ef94:	cmp	r3, #0
    ef98:	bne	efc8 <fputs@plt+0x5c0c>
    ef9c:	mov	r0, r4
    efa0:	bl	ecf0 <fputs@plt+0x5934>
    efa4:	cmp	r0, #0
    efa8:	beq	efc8 <fputs@plt+0x5c0c>
    efac:	ldr	r3, [r4, #12]
    efb0:	mov	r2, r3
    efb4:	str	r3, [r4, #20]
    efb8:	b	eecc <fputs@plt+0x5b10>
    efbc:	str	r1, [r4, #20]
    efc0:	mov	r0, #10
    efc4:	pop	{r4, r5, r6, pc}
    efc8:	mvn	r0, #0
    efcc:	pop	{r4, r5, r6, pc}
    efd0:	ldr	r3, [r0, #24]
    efd4:	push	{r4, r5, r6, lr}
    efd8:	cmp	r3, #0
    efdc:	mov	r4, r0
    efe0:	beq	eff4 <fputs@plt+0x5c38>
    efe4:	ldrb	r0, [r3]
    efe8:	cmp	r0, #0
    efec:	popne	{r4, r5, r6, pc}
    eff0:	str	r0, [r4, #24]
    eff4:	ldr	r2, [r4, #20]
    eff8:	cmp	r2, #0
    effc:	beq	f0ac <fputs@plt+0x5cf0>
    f000:	ldrb	r1, [r2]
    f004:	cmp	r1, #0
    f008:	bne	f018 <fputs@plt+0x5c5c>
    f00c:	b	f0d8 <fputs@plt+0x5d1c>
    f010:	ldrb	r1, [r3]
    f014:	mov	r2, r3
    f018:	eor	r0, r1, #128	; 0x80
    f01c:	add	r3, r2, #1
    f020:	cmp	r0, #31
    f024:	bhi	f084 <fputs@plt+0x5cc8>
    f028:	str	r3, [r4, #20]
    f02c:	ldrb	r2, [r2]
    f030:	ldr	r1, [r4, #156]	; 0x9c
    f034:	sub	r5, r2, #128	; 0x80
    f038:	cmp	r5, r1
    f03c:	bge	f010 <fputs@plt+0x5c54>
    f040:	add	r2, r4, r2, lsl #2
    f044:	movw	r1, #20472	; 0x4ff8
    f048:	mov	r0, #99	; 0x63
    f04c:	movt	r1, #2
    f050:	ldr	r6, [r2, #-484]	; 0xfffffe1c
    f054:	cmp	r6, #0
    f058:	blt	f068 <fputs@plt+0x5cac>
    f05c:	ldr	r3, [r4, #164]	; 0xa4
    f060:	cmp	r6, r3
    f064:	blt	f06c <fputs@plt+0x5cb0>
    f068:	bl	1eec8 <fputs@plt+0x15b0c>
    f06c:	ldr	r3, [r4, #160]	; 0xa0
    f070:	ldrb	r2, [r3, r6]
    f074:	cmp	r2, #0
    f078:	bne	f094 <fputs@plt+0x5cd8>
    f07c:	ldr	r3, [r4, #20]
    f080:	b	f010 <fputs@plt+0x5c54>
    f084:	cmp	r1, #0
    f088:	beq	eff8 <fputs@plt+0x5c3c>
    f08c:	mov	r0, r1
    f090:	pop	{r4, r5, r6, pc}
    f094:	add	r5, r4, r5, lsl #2
    f098:	ldr	r2, [r5, #28]
    f09c:	add	r1, r3, r2
    f0a0:	str	r1, [r4, #24]
    f0a4:	ldrb	r0, [r3, r2]
    f0a8:	pop	{r4, r5, r6, pc}
    f0ac:	ldr	r3, [r4, #8]
    f0b0:	cmp	r3, #0
    f0b4:	bne	f0e0 <fputs@plt+0x5d24>
    f0b8:	mov	r0, r4
    f0bc:	bl	ecf0 <fputs@plt+0x5934>
    f0c0:	cmp	r0, #0
    f0c4:	beq	f0e0 <fputs@plt+0x5d24>
    f0c8:	ldr	r3, [r4, #12]
    f0cc:	mov	r2, r3
    f0d0:	str	r3, [r4, #20]
    f0d4:	b	f000 <fputs@plt+0x5c44>
    f0d8:	mov	r0, #10
    f0dc:	pop	{r4, r5, r6, pc}
    f0e0:	mvn	r0, #0
    f0e4:	pop	{r4, r5, r6, pc}
    f0e8:	mov	r2, #0
    f0ec:	str	r2, [r0]
    f0f0:	str	r2, [r0, #4]
    f0f4:	bx	lr
    f0f8:	push	{r4, lr}
    f0fc:	mov	r4, r0
    f100:	mov	r3, #17
    f104:	mov	r0, #136	; 0x88
    f108:	str	r3, [r4, #4]
    f10c:	bl	9278 <_Znaj@plt>
    f110:	mov	r2, #0
    f114:	add	r3, r0, #8
    f118:	add	ip, r0, #144	; 0x90
    f11c:	str	r2, [r3, #-8]
    f120:	add	r3, r3, #8
    f124:	str	r2, [r3, #-12]
    f128:	cmp	r3, ip
    f12c:	mov	r1, #0
    f130:	bne	f11c <fputs@plt+0x5d60>
    f134:	str	r0, [r4]
    f138:	mov	r0, r4
    f13c:	str	r1, [r4, #8]
    f140:	pop	{r4, pc}
    f144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f148:	subs	r6, r1, #0
    f14c:	sub	sp, sp, #12
    f150:	mov	r8, r0
    f154:	str	r2, [sp]
    f158:	beq	f368 <fputs@plt+0x5fac>
    f15c:	mov	r0, r6
    f160:	bl	209fc <_ZdlPv@@Base+0xc>
    f164:	ldr	r7, [r8, #4]
    f168:	mov	r1, r7
    f16c:	str	r0, [sp, #4]
    f170:	bl	9284 <__aeabi_uidivmod@plt>
    f174:	ldr	r9, [r8]
    f178:	mov	r4, r1
    f17c:	b	f198 <fputs@plt+0x5ddc>
    f180:	bl	9380 <strcmp@plt>
    f184:	cmp	r0, #0
    f188:	beq	f210 <fputs@plt+0x5e54>
    f18c:	cmp	r4, #0
    f190:	sub	r4, r4, #1
    f194:	subeq	r4, r7, #1
    f198:	ldr	r5, [r9, r4, lsl #3]
    f19c:	lsl	sl, r4, #3
    f1a0:	mov	r1, r6
    f1a4:	add	fp, r9, sl
    f1a8:	cmp	r5, #0
    f1ac:	mov	r0, r5
    f1b0:	bne	f180 <fputs@plt+0x5dc4>
    f1b4:	ldr	r3, [sp]
    f1b8:	cmp	r3, #0
    f1bc:	beq	f37c <fputs@plt+0x5fc0>
    f1c0:	ldr	r1, [r8, #8]
    f1c4:	cmp	r7, r1, lsl #2
    f1c8:	bls	f240 <fputs@plt+0x5e84>
    f1cc:	mov	r0, r6
    f1d0:	bl	9200 <strlen@plt>
    f1d4:	add	r0, r0, #1
    f1d8:	bl	9278 <_Znaj@plt>
    f1dc:	mov	r1, r6
    f1e0:	bl	9248 <strcpy@plt>
    f1e4:	ldr	r1, [r8]
    f1e8:	ldr	r4, [r8, #8]
    f1ec:	add	ip, r1, sl
    f1f0:	add	r3, r4, #1
    f1f4:	mov	r2, r0
    f1f8:	str	r2, [r1, sl]
    f1fc:	ldr	r2, [sp]
    f200:	str	r2, [ip, #4]
    f204:	str	r3, [r8, #8]
    f208:	add	sp, sp, #12
    f20c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f210:	ldr	r0, [fp, #4]
    f214:	cmp	r0, #0
    f218:	beq	f22c <fputs@plt+0x5e70>
    f21c:	bl	92f0 <_ZdaPv@plt>
    f220:	ldr	r2, [r8]
    f224:	add	fp, r2, sl
    f228:	ldr	r5, [r2, sl]
    f22c:	ldr	r2, [sp]
    f230:	mov	r0, r5
    f234:	str	r2, [fp, #4]
    f238:	add	sp, sp, #12
    f23c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f240:	mov	r0, r7
    f244:	bl	20a48 <_ZdlPv@@Base+0x58>
    f248:	cmp	r0, #266338304	; 0xfe00000
    f24c:	mov	r4, r0
    f250:	str	r0, [r8, #4]
    f254:	lslls	r0, r0, #3
    f258:	mvnhi	r0, #0
    f25c:	bl	9278 <_Znaj@plt>
    f260:	cmp	r4, #0
    f264:	movne	r1, #0
    f268:	addne	r3, r0, #8
    f26c:	movne	ip, r1
    f270:	beq	f28c <fputs@plt+0x5ed0>
    f274:	add	r1, r1, #1
    f278:	str	ip, [r3, #-8]
    f27c:	cmp	r1, r4
    f280:	str	ip, [r3, #-4]
    f284:	add	r3, r3, #8
    f288:	bne	f274 <fputs@plt+0x5eb8>
    f28c:	cmp	r7, #0
    f290:	str	r0, [r8]
    f294:	moveq	r4, r0
    f298:	beq	f31c <fputs@plt+0x5f60>
    f29c:	mov	r4, #0
    f2a0:	mov	fp, r4
    f2a4:	ldr	r0, [r9, r4]
    f2a8:	cmp	r0, #0
    f2ac:	beq	f308 <fputs@plt+0x5f4c>
    f2b0:	add	sl, r9, r4
    f2b4:	ldr	r3, [sl, #4]
    f2b8:	cmp	r3, #0
    f2bc:	beq	f360 <fputs@plt+0x5fa4>
    f2c0:	bl	209fc <_ZdlPv@@Base+0xc>
    f2c4:	ldr	r5, [r8, #4]
    f2c8:	mov	r1, r5
    f2cc:	bl	9284 <__aeabi_uidivmod@plt>
    f2d0:	mov	r3, r1
    f2d4:	ldr	r1, [r8]
    f2d8:	b	f2e8 <fputs@plt+0x5f2c>
    f2dc:	cmp	r3, #0
    f2e0:	sub	r3, r3, #1
    f2e4:	subeq	r3, r5, #1
    f2e8:	ldr	r0, [r1, r3, lsl #3]
    f2ec:	add	lr, r1, r3, lsl #3
    f2f0:	cmp	r0, #0
    f2f4:	bne	f2dc <fputs@plt+0x5f20>
    f2f8:	ldr	r3, [r9, r4]
    f2fc:	str	r3, [lr]
    f300:	ldr	r3, [sl, #4]
    f304:	str	r3, [lr, #4]
    f308:	add	fp, fp, #1
    f30c:	add	r4, r4, #8
    f310:	cmp	fp, r7
    f314:	bne	f2a4 <fputs@plt+0x5ee8>
    f318:	ldr	r4, [r8]
    f31c:	ldr	r5, [r8, #4]
    f320:	ldr	r0, [sp, #4]
    f324:	mov	r1, r5
    f328:	bl	9284 <__aeabi_uidivmod@plt>
    f32c:	b	f33c <fputs@plt+0x5f80>
    f330:	cmp	r1, #0
    f334:	sub	r1, r1, #1
    f338:	subeq	r1, r5, #1
    f33c:	ldr	r0, [r4, r1, lsl #3]
    f340:	lsl	sl, r1, #3
    f344:	cmp	r0, #0
    f348:	bne	f330 <fputs@plt+0x5f74>
    f34c:	cmp	r9, #0
    f350:	beq	f1cc <fputs@plt+0x5e10>
    f354:	mov	r0, r9
    f358:	bl	92f0 <_ZdaPv@plt>
    f35c:	b	f1cc <fputs@plt+0x5e10>
    f360:	bl	92f0 <_ZdaPv@plt>
    f364:	b	f308 <fputs@plt+0x5f4c>
    f368:	movw	r1, #20536	; 0x5038
    f36c:	mov	r0, #28
    f370:	movt	r1, #2
    f374:	bl	1eec8 <fputs@plt+0x15b0c>
    f378:	b	f15c <fputs@plt+0x5da0>
    f37c:	ldr	r0, [sp]
    f380:	b	f208 <fputs@plt+0x5e4c>
    f384:	push	{r4, r5, r6, r7, r8, lr}
    f388:	subs	r6, r1, #0
    f38c:	mov	r5, r0
    f390:	beq	f3f8 <fputs@plt+0x603c>
    f394:	mov	r0, r6
    f398:	bl	209fc <_ZdlPv@@Base+0xc>
    f39c:	ldr	r8, [r5, #4]
    f3a0:	mov	r1, r8
    f3a4:	bl	9284 <__aeabi_uidivmod@plt>
    f3a8:	ldr	r5, [r5]
    f3ac:	mov	r4, r1
    f3b0:	b	f3cc <fputs@plt+0x6010>
    f3b4:	bl	9380 <strcmp@plt>
    f3b8:	cmp	r0, #0
    f3bc:	beq	f3ec <fputs@plt+0x6030>
    f3c0:	cmp	r4, #0
    f3c4:	sub	r4, r4, #1
    f3c8:	subeq	r4, r8, #1
    f3cc:	ldr	r3, [r5, r4, lsl #3]
    f3d0:	mov	r1, r6
    f3d4:	add	r7, r5, r4, lsl #3
    f3d8:	cmp	r3, #0
    f3dc:	mov	r0, r3
    f3e0:	bne	f3b4 <fputs@plt+0x5ff8>
    f3e4:	mov	r0, r3
    f3e8:	pop	{r4, r5, r6, r7, r8, pc}
    f3ec:	ldr	r3, [r7, #4]
    f3f0:	mov	r0, r3
    f3f4:	pop	{r4, r5, r6, r7, r8, pc}
    f3f8:	movw	r1, #20536	; 0x5038
    f3fc:	mov	r0, #28
    f400:	movt	r1, #2
    f404:	bl	1eec8 <fputs@plt+0x15b0c>
    f408:	b	f394 <fputs@plt+0x5fd8>
    f40c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f410:	mov	fp, r1
    f414:	ldr	r6, [r1]
    f418:	mov	sl, r0
    f41c:	cmp	r6, #0
    f420:	beq	f494 <fputs@plt+0x60d8>
    f424:	mov	r0, r6
    f428:	bl	209fc <_ZdlPv@@Base+0xc>
    f42c:	ldr	r9, [sl, #4]
    f430:	mov	r1, r9
    f434:	bl	9284 <__aeabi_uidivmod@plt>
    f438:	ldr	r7, [sl]
    f43c:	mov	r4, r1
    f440:	b	f45c <fputs@plt+0x60a0>
    f444:	bl	9380 <strcmp@plt>
    f448:	cmp	r0, #0
    f44c:	beq	f47c <fputs@plt+0x60c0>
    f450:	cmp	r4, #0
    f454:	sub	r4, r4, #1
    f458:	subeq	r4, r9, #1
    f45c:	ldr	r5, [r7, r4, lsl #3]
    f460:	mov	r1, r6
    f464:	lsl	r8, r4, #3
    f468:	cmp	r5, #0
    f46c:	mov	r0, r5
    f470:	bne	f444 <fputs@plt+0x6088>
    f474:	mov	r0, r5
    f478:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f47c:	str	r5, [fp]
    f480:	ldr	r3, [sl]
    f484:	add	r8, r3, r8
    f488:	ldr	r5, [r8, #4]
    f48c:	mov	r0, r5
    f490:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f494:	movw	r1, #20536	; 0x5038
    f498:	mov	r0, #28
    f49c:	movt	r1, #2
    f4a0:	bl	1eec8 <fputs@plt+0x15b0c>
    f4a4:	b	f424 <fputs@plt+0x6068>
    f4a8:	mov	r2, #0
    f4ac:	stm	r0, {r1, r2}
    f4b0:	bx	lr
    f4b4:	ldr	ip, [r0]
    f4b8:	push	{r4, r5, r6, r7}
    f4bc:	ldr	r3, [r0, #4]
    f4c0:	ldm	ip, {r6, r7}
    f4c4:	cmp	r7, r3
    f4c8:	bls	f50c <fputs@plt+0x6150>
    f4cc:	ldr	r5, [r6, r3, lsl #3]
    f4d0:	add	r6, r6, r3, lsl #3
    f4d4:	cmp	r5, #0
    f4d8:	moveq	ip, r6
    f4dc:	beq	f4f4 <fputs@plt+0x6138>
    f4e0:	b	f51c <fputs@plt+0x6160>
    f4e4:	ldr	r5, [ip, #8]
    f4e8:	mov	ip, r4
    f4ec:	cmp	r5, #0
    f4f0:	bne	f51c <fputs@plt+0x6160>
    f4f4:	add	r3, r3, #1
    f4f8:	add	r4, ip, #8
    f4fc:	cmp	r7, r3
    f500:	mov	r6, r4
    f504:	bhi	f4e4 <fputs@plt+0x6128>
    f508:	str	r3, [r0, #4]
    f50c:	mov	r1, #0
    f510:	mov	r0, r1
    f514:	pop	{r4, r5, r6, r7}
    f518:	bx	lr
    f51c:	str	r5, [r1]
    f520:	mov	r1, #1
    f524:	ldr	ip, [r6, #4]
    f528:	add	r3, r3, #1
    f52c:	pop	{r4, r5, r6, r7}
    f530:	str	ip, [r2]
    f534:	str	r3, [r0, #4]
    f538:	mov	r0, r1
    f53c:	bx	lr
    f540:	ldr	r2, [pc, #12]	; f554 <fputs@plt+0x6198>
    f544:	mov	r1, #0
    f548:	str	r1, [r0, #4]
    f54c:	str	r2, [r0]
    f550:	bx	lr
    f554:	andeq	r4, r2, r8, ror sp
    f558:	push	{r3, r4, r5, lr}
    f55c:	mov	r4, r0
    f560:	ldr	r5, [pc, #60]	; f5a4 <fputs@plt+0x61e8>
    f564:	mov	r3, #0
    f568:	str	r2, [r0, #12]
    f56c:	add	r0, r0, #20
    f570:	str	r1, [r0, #-12]
    f574:	add	r2, r5, #192	; 0xc0
    f578:	str	r3, [r0, #-16]
    f57c:	str	r2, [r4]
    f580:	str	r3, [r4, #16]
    f584:	bl	20b8c <_ZdlPv@@Base+0x19c>
    f588:	movw	r3, #26808	; 0x68b8
    f58c:	mov	r0, r4
    f590:	movt	r3, #2
    f594:	str	r3, [r4, #32]
    f598:	pop	{r3, r4, r5, pc}
    f59c:	str	r5, [r4]
    f5a0:	bl	9188 <__cxa_end_cleanup@plt>
    f5a4:	andeq	r4, r2, r8, ror sp
    f5a8:	push	{r3, r4, r5, lr}
    f5ac:	mov	r4, r0
    f5b0:	ldr	r5, [pc, #44]	; f5e4 <fputs@plt+0x6228>
    f5b4:	mov	r3, #0
    f5b8:	mov	r0, r1
    f5bc:	str	r3, [r4, #4]
    f5c0:	add	r3, r5, #64	; 0x40
    f5c4:	str	r3, [r4]
    f5c8:	bl	214b4 <_ZdlPv@@Base+0xac4>
    f5cc:	str	r0, [r4, #8]
    f5d0:	str	r0, [r4, #12]
    f5d4:	mov	r0, r4
    f5d8:	pop	{r3, r4, r5, pc}
    f5dc:	str	r5, [r4]
    f5e0:	bl	9188 <__cxa_end_cleanup@plt>
    f5e4:	andeq	r4, r2, r8, ror sp
    f5e8:	push	{r4, lr}
    f5ec:	movw	r4, #2608	; 0xa30
    f5f0:	movt	r4, #3
    f5f4:	ldr	r3, [r4]
    f5f8:	cmp	r3, #0
    f5fc:	beq	f624 <fputs@plt+0x6268>
    f600:	ldr	r2, [r3, #4]
    f604:	mov	r0, r3
    f608:	ldr	r3, [r3]
    f60c:	str	r2, [r4]
    f610:	ldr	r3, [r3, #4]
    f614:	blx	r3
    f618:	ldr	r3, [r4]
    f61c:	cmp	r3, #0
    f620:	bne	f600 <fputs@plt+0x6244>
    f624:	mov	r3, #1
    f628:	str	r3, [r4, #4]
    f62c:	pop	{r4, pc}
    f630:	movw	r3, #2608	; 0xa30
    f634:	movt	r3, #3
    f638:	ldr	r2, [r3]
    f63c:	str	r0, [r3]
    f640:	str	r2, [r0, #4]
    f644:	bx	lr
    f648:	push	{r4, lr}
    f64c:	mov	r4, r0
    f650:	bl	f5e8 <fputs@plt+0x622c>
    f654:	movw	r3, #2608	; 0xa30
    f658:	movt	r3, #3
    f65c:	ldr	r2, [r3]
    f660:	str	r4, [r3]
    f664:	str	r2, [r4, #4]
    f668:	pop	{r4, pc}
    f66c:	push	{r3, r4, r5, lr}
    f670:	movw	r5, #2608	; 0xa30
    f674:	movt	r5, #3
    f678:	ldr	r0, [r5]
    f67c:	cmp	r0, #0
    f680:	movne	r4, r5
    f684:	bne	f6bc <fputs@plt+0x6300>
    f688:	b	f6e4 <fputs@plt+0x6328>
    f68c:	ldr	r3, [r5]
    f690:	ldr	r2, [r3, #4]
    f694:	mov	r0, r3
    f698:	cmp	r2, #0
    f69c:	beq	f6e4 <fputs@plt+0x6328>
    f6a0:	ldr	r3, [r3]
    f6a4:	str	r2, [r4]
    f6a8:	ldr	r3, [r3, #4]
    f6ac:	blx	r3
    f6b0:	ldr	r0, [r4]
    f6b4:	cmp	r0, #0
    f6b8:	beq	f6e4 <fputs@plt+0x6328>
    f6bc:	ldr	r3, [r0]
    f6c0:	ldr	r3, [r3, #8]
    f6c4:	blx	r3
    f6c8:	cmn	r0, #1
    f6cc:	beq	f68c <fputs@plt+0x62d0>
    f6d0:	subs	r2, r0, #10
    f6d4:	rsbs	r3, r2, #0
    f6d8:	adcs	r3, r3, r2
    f6dc:	str	r3, [r5, #4]
    f6e0:	pop	{r3, r4, r5, pc}
    f6e4:	mvn	r0, #0
    f6e8:	pop	{r3, r4, r5, pc}
    f6ec:	push	{r3, lr}
    f6f0:	bl	f66c <fputs@plt+0x62b0>
    f6f4:	cmn	r0, #1
    f6f8:	bne	f6f0 <fputs@plt+0x6334>
    f6fc:	pop	{r3, pc}
    f700:	push	{r3, r4, r5, lr}
    f704:	movw	r5, #2608	; 0xa30
    f708:	movt	r5, #3
    f70c:	ldr	r0, [r5]
    f710:	cmp	r0, #0
    f714:	movne	r4, r5
    f718:	bne	f73c <fputs@plt+0x6380>
    f71c:	b	f764 <fputs@plt+0x63a8>
    f720:	ldr	r3, [r3]
    f724:	str	r2, [r4]
    f728:	ldr	r3, [r3, #4]
    f72c:	blx	r3
    f730:	ldr	r0, [r4]
    f734:	cmp	r0, #0
    f738:	beq	f764 <fputs@plt+0x63a8>
    f73c:	ldr	r3, [r0]
    f740:	ldr	r3, [r3, #12]
    f744:	blx	r3
    f748:	cmn	r0, #1
    f74c:	popne	{r3, r4, r5, pc}
    f750:	ldr	r3, [r5]
    f754:	ldr	r2, [r3, #4]
    f758:	mov	r0, r3
    f75c:	cmp	r2, #0
    f760:	bne	f720 <fputs@plt+0x6364>
    f764:	mvn	r0, #0
    f768:	pop	{r3, r4, r5, pc}
    f76c:	ldr	r2, [pc, #16]	; f784 <fputs@plt+0x63c8>
    f770:	uxtb	r1, r1
    f774:	mov	ip, #0
    f778:	str	r1, [r0, #8]
    f77c:	stm	r0, {r2, ip}
    f780:	bx	lr
    f784:	muleq	r2, r8, sp
    f788:	push	{r3, r4, r5, lr}
    f78c:	mov	r4, r0
    f790:	mov	r0, #12
    f794:	mov	r5, r1
    f798:	bl	209a0 <_Znwj@@Base>
    f79c:	movw	r3, #2608	; 0xa30
    f7a0:	movt	r3, #3
    f7a4:	ldr	r1, [r3]
    f7a8:	mov	r2, r0
    f7ac:	ldr	r0, [pc, #8]	; f7bc <fputs@plt+0x6400>
    f7b0:	stm	r2, {r0, r1, r4}
    f7b4:	stm	r3, {r2, r5}
    f7b8:	pop	{r3, r4, r5, pc}
    f7bc:	muleq	r2, r8, sp
    f7c0:	movw	r3, #2608	; 0xa30
    f7c4:	movt	r3, #3
    f7c8:	push	{r4, r5, r6, lr}
    f7cc:	mov	r6, r0
    f7d0:	ldr	r4, [r3]
    f7d4:	mov	r5, r1
    f7d8:	cmp	r4, #0
    f7dc:	bne	f7f0 <fputs@plt+0x6434>
    f7e0:	b	f818 <fputs@plt+0x645c>
    f7e4:	ldr	r4, [r4, #4]
    f7e8:	cmp	r4, #0
    f7ec:	beq	f818 <fputs@plt+0x645c>
    f7f0:	ldr	r3, [r4]
    f7f4:	mov	r0, r4
    f7f8:	mov	r1, r6
    f7fc:	mov	r2, r5
    f800:	ldr	r3, [r3, #16]
    f804:	blx	r3
    f808:	cmp	r0, #0
    f80c:	beq	f7e4 <fputs@plt+0x6428>
    f810:	mov	r0, #1
    f814:	pop	{r4, r5, r6, pc}
    f818:	mov	r0, #0
    f81c:	pop	{r4, r5, r6, pc}
    f820:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    f824:	mov	r8, r0
    f828:	ldr	r6, [pc, #172]	; f8dc <fputs@plt+0x6520>
    f82c:	mov	r7, r1
    f830:	sub	r4, r6, #784	; 0x310
    f834:	rsb	r3, r4, r6
    f838:	asr	r3, r3, #3
    f83c:	add	r3, r3, r3, lsr #31
    f840:	asr	r3, r3, #1
    f844:	ldr	r5, [r4, r3, lsl #3]
    f848:	add	r9, r4, r3, lsl #3
    f84c:	mov	r0, r5
    f850:	bl	9200 <strlen@plt>
    f854:	mov	r1, r5
    f858:	cmp	r0, r7
    f85c:	ble	f890 <fputs@plt+0x64d4>
    f860:	mov	r0, r8
    f864:	mov	r2, r7
    f868:	bl	90d4 <memcmp@plt>
    f86c:	cmp	r0, #0
    f870:	beq	f8b0 <fputs@plt+0x64f4>
    f874:	cmp	r0, #0
    f878:	blt	f8b0 <fputs@plt+0x64f4>
    f87c:	add	r4, r9, #8
    f880:	cmp	r4, r6
    f884:	bcc	f834 <fputs@plt+0x6478>
    f888:	mov	r0, #0
    f88c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    f890:	bge	f8c0 <fputs@plt+0x6504>
    f894:	mov	r2, r0
    f898:	mov	r0, r8
    f89c:	bl	90d4 <memcmp@plt>
    f8a0:	cmp	r0, #0
    f8a4:	beq	f87c <fputs@plt+0x64c0>
    f8a8:	cmp	r0, #0
    f8ac:	bge	f87c <fputs@plt+0x64c0>
    f8b0:	cmp	r9, r4
    f8b4:	bls	f888 <fputs@plt+0x64cc>
    f8b8:	mov	r6, r9
    f8bc:	b	f834 <fputs@plt+0x6478>
    f8c0:	mov	r0, r8
    f8c4:	mov	r2, r7
    f8c8:	bl	90d4 <memcmp@plt>
    f8cc:	cmp	r0, #0
    f8d0:	bne	f874 <fputs@plt+0x64b8>
    f8d4:	ldr	r0, [r9, #4]
    f8d8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    f8dc:	andeq	r0, r3, r0, lsr r4
    f8e0:	sub	r0, r0, #98	; 0x62
    f8e4:	push	{r4, lr}
    f8e8:	cmp	r0, #23
    f8ec:	ldrls	pc, [pc, r0, lsl #2]
    f8f0:	b	fb54 <fputs@plt+0x6798>
    f8f4:	andeq	pc, r0, r0, ror r9	; <UNPREDICTABLE>
    f8f8:	muleq	r0, ip, r9
    f8fc:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f900:	andeq	pc, r0, r4, asr #19
    f904:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f908:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f90c:	strdeq	pc, [r0], -r0
    f910:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f914:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f918:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f91c:	andeq	pc, r0, ip, asr #21
    f920:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f924:	andeq	pc, r0, r4, asr sl	; <UNPREDICTABLE>
    f928:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f92c:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f930:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f934:	strdeq	pc, [r0], -r4
    f938:	andeq	pc, r0, ip, lsl sl	; <UNPREDICTABLE>
    f93c:	andeq	pc, r0, r8, lsr #22
    f940:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f944:	andeq	pc, r0, r4, asr fp	; <UNPREDICTABLE>
    f948:	andeq	pc, r0, r4, lsl #21
    f94c:			; <UNDEFINED> instruction: 0x0000fab0
    f950:	andeq	pc, r0, r4, asr r9	; <UNPREDICTABLE>
    f954:	bl	f66c <fputs@plt+0x62b0>
    f958:	movw	r1, #20560	; 0x5050
    f95c:	ldr	r0, [pc, #1812]	; 10078 <fputs@plt+0x6cbc>
    f960:	movt	r1, #2
    f964:	bl	20d50 <_ZdlPv@@Base+0x360>
    f968:	movw	r0, #321	; 0x141
    f96c:	pop	{r4, pc}
    f970:	bl	f66c <fputs@plt+0x62b0>
    f974:	bl	f700 <fputs@plt+0x6344>
    f978:	cmp	r0, #111	; 0x6f
    f97c:	mov	r4, r0
    f980:	beq	fc0c <fputs@plt+0x6850>
    f984:	movw	r1, #20700	; 0x50dc
    f988:	ldr	r0, [pc, #1768]	; 10078 <fputs@plt+0x6cbc>
    f98c:	movt	r1, #2
    f990:	bl	20d50 <_ZdlPv@@Base+0x360>
    f994:	mov	r0, #312	; 0x138
    f998:	pop	{r4, pc}
    f99c:	bl	f66c <fputs@plt+0x62b0>
    f9a0:	bl	f700 <fputs@plt+0x6344>
    f9a4:	cmp	r0, #101	; 0x65
    f9a8:	beq	fbec <fputs@plt+0x6830>
    f9ac:	movw	r1, #20572	; 0x505c
    f9b0:	ldr	r0, [pc, #1728]	; 10078 <fputs@plt+0x6cbc>
    f9b4:	movt	r1, #2
    f9b8:	bl	20d50 <_ZdlPv@@Base+0x360>
    f9bc:	movw	r0, #317	; 0x13d
    f9c0:	pop	{r4, pc}
    f9c4:	bl	f66c <fputs@plt+0x62b0>
    f9c8:	bl	f700 <fputs@plt+0x6344>
    f9cc:	cmp	r0, #110	; 0x6e
    f9d0:	mov	r4, r0
    f9d4:	beq	fbcc <fputs@plt+0x6810>
    f9d8:	movw	r1, #20596	; 0x5074
    f9dc:	ldr	r0, [pc, #1684]	; 10078 <fputs@plt+0x6cbc>
    f9e0:	movt	r1, #2
    f9e4:	bl	20d50 <_ZdlPv@@Base+0x360>
    f9e8:	movw	r0, #310	; 0x136
    f9ec:	pop	{r4, pc}
    f9f0:	bl	f66c <fputs@plt+0x62b0>
    f9f4:	bl	f700 <fputs@plt+0x6344>
    f9f8:	cmp	r0, #116	; 0x74
    f9fc:	beq	fdb4 <fputs@plt+0x69f8>
    fa00:	cmp	r0, #101	; 0x65
    fa04:	beq	fc2c <fputs@plt+0x6870>
    fa08:	mov	r0, #104	; 0x68
    fa0c:	mov	r1, #0
    fa10:	bl	f788 <fputs@plt+0x63cc>
    fa14:	mov	r0, #46	; 0x2e
    fa18:	pop	{r4, pc}
    fa1c:	bl	f66c <fputs@plt+0x62b0>
    fa20:	bl	f700 <fputs@plt+0x6344>
    fa24:	cmp	r0, #101	; 0x65
    fa28:	beq	fdd0 <fputs@plt+0x6a14>
    fa2c:	cmp	r0, #119	; 0x77
    fa30:	beq	fe10 <fputs@plt+0x6a54>
    fa34:	cmp	r0, #116	; 0x74
    fa38:	beq	fc4c <fputs@plt+0x6890>
    fa3c:	movw	r1, #20636	; 0x509c
    fa40:	ldr	r0, [pc, #1584]	; 10078 <fputs@plt+0x6cbc>
    fa44:	movt	r1, #2
    fa48:	bl	20d50 <_ZdlPv@@Base+0x360>
    fa4c:	mov	r0, #312	; 0x138
    fa50:	pop	{r4, pc}
    fa54:	bl	f66c <fputs@plt+0x62b0>
    fa58:	bl	f700 <fputs@plt+0x6344>
    fa5c:	cmp	r0, #101	; 0x65
    fa60:	beq	fd98 <fputs@plt+0x69dc>
    fa64:	cmp	r0, #119	; 0x77
    fa68:	beq	fc6c <fputs@plt+0x68b0>
    fa6c:	movw	r1, #20584	; 0x5068
    fa70:	ldr	r0, [pc, #1536]	; 10078 <fputs@plt+0x6cbc>
    fa74:	movt	r1, #2
    fa78:	bl	20d50 <_ZdlPv@@Base+0x360>
    fa7c:	movw	r0, #309	; 0x135
    fa80:	pop	{r4, pc}
    fa84:	bl	f66c <fputs@plt+0x62b0>
    fa88:	bl	f700 <fputs@plt+0x6344>
    fa8c:	cmp	r0, #105	; 0x69
    fa90:	mov	r4, r0
    fa94:	beq	fbac <fputs@plt+0x67f0>
    fa98:	movw	r1, #20616	; 0x5088
    fa9c:	ldr	r0, [pc, #1492]	; 10078 <fputs@plt+0x6cbc>
    faa0:	movt	r1, #2
    faa4:	bl	20d50 <_ZdlPv@@Base+0x360>
    faa8:	movw	r0, #311	; 0x137
    faac:	pop	{r4, pc}
    fab0:	bl	f66c <fputs@plt+0x62b0>
    fab4:	movw	r1, #20556	; 0x504c
    fab8:	ldr	r0, [pc, #1464]	; 10078 <fputs@plt+0x6cbc>
    fabc:	movt	r1, #2
    fac0:	bl	20d50 <_ZdlPv@@Base+0x360>
    fac4:	mov	r0, #320	; 0x140
    fac8:	pop	{r4, pc}
    facc:	bl	f66c <fputs@plt+0x62b0>
    fad0:	bl	f700 <fputs@plt+0x6344>
    fad4:	cmp	r0, #101	; 0x65
    fad8:	beq	fb88 <fputs@plt+0x67cc>
    fadc:	movw	r1, #20660	; 0x50b4
    fae0:	ldr	r0, [pc, #1424]	; 10078 <fputs@plt+0x6cbc>
    fae4:	movt	r1, #2
    fae8:	bl	20d50 <_ZdlPv@@Base+0x360>
    faec:	movw	r0, #311	; 0x137
    faf0:	pop	{r4, pc}
    faf4:	bl	f66c <fputs@plt+0x62b0>
    faf8:	bl	f700 <fputs@plt+0x6344>
    fafc:	cmp	r0, #97	; 0x61
    fb00:	mov	r4, r0
    fb04:	beq	fca8 <fputs@plt+0x68ec>
    fb08:	cmp	r0, #105	; 0x69
    fb0c:	beq	fc88 <fputs@plt+0x68cc>
    fb10:	movw	r1, #20680	; 0x50c8
    fb14:	ldr	r0, [pc, #1372]	; 10078 <fputs@plt+0x6cbc>
    fb18:	movt	r1, #2
    fb1c:	bl	20d50 <_ZdlPv@@Base+0x360>
    fb20:	movw	r0, #310	; 0x136
    fb24:	pop	{r4, pc}
    fb28:	bl	f66c <fputs@plt+0x62b0>
    fb2c:	bl	f700 <fputs@plt+0x6344>
    fb30:	cmp	r0, #111	; 0x6f
    fb34:	mov	r4, r0
    fb38:	beq	fb68 <fputs@plt+0x67ac>
    fb3c:	movw	r1, #20648	; 0x50a8
    fb40:	ldr	r0, [pc, #1328]	; 10078 <fputs@plt+0x6cbc>
    fb44:	movt	r1, #2
    fb48:	bl	20d50 <_ZdlPv@@Base+0x360>
    fb4c:	movw	r0, #309	; 0x135
    fb50:	pop	{r4, pc}
    fb54:	mov	r1, #46	; 0x2e
    fb58:	ldr	r0, [pc, #1304]	; 10078 <fputs@plt+0x6cbc>
    fb5c:	bl	20dc4 <_ZdlPv@@Base+0x3d4>
    fb60:	mov	r0, #46	; 0x2e
    fb64:	pop	{r4, pc}
    fb68:	bl	f66c <fputs@plt+0x62b0>
    fb6c:	bl	f700 <fputs@plt+0x6344>
    fb70:	cmp	r0, #112	; 0x70
    fb74:	beq	fe2c <fputs@plt+0x6a70>
    fb78:	mov	r0, r4
    fb7c:	mov	r1, #0
    fb80:	bl	f788 <fputs@plt+0x63cc>
    fb84:	b	fb3c <fputs@plt+0x6780>
    fb88:	bl	f66c <fputs@plt+0x62b0>
    fb8c:	bl	f700 <fputs@plt+0x6344>
    fb90:	cmp	r0, #102	; 0x66
    fb94:	mov	r4, r0
    fb98:	beq	fcc8 <fputs@plt+0x690c>
    fb9c:	mov	r0, #101	; 0x65
    fba0:	mov	r1, #0
    fba4:	bl	f788 <fputs@plt+0x63cc>
    fba8:	b	fadc <fputs@plt+0x6720>
    fbac:	bl	f66c <fputs@plt+0x62b0>
    fbb0:	bl	f700 <fputs@plt+0x6344>
    fbb4:	cmp	r0, #100	; 0x64
    fbb8:	beq	fce8 <fputs@plt+0x692c>
    fbbc:	mov	r0, r4
    fbc0:	mov	r1, #0
    fbc4:	bl	f788 <fputs@plt+0x63cc>
    fbc8:	b	fa98 <fputs@plt+0x66dc>
    fbcc:	bl	f66c <fputs@plt+0x62b0>
    fbd0:	bl	f700 <fputs@plt+0x6344>
    fbd4:	cmp	r0, #100	; 0x64
    fbd8:	beq	fd3c <fputs@plt+0x6980>
    fbdc:	mov	r0, r4
    fbe0:	mov	r1, #0
    fbe4:	bl	f788 <fputs@plt+0x63cc>
    fbe8:	b	f9d8 <fputs@plt+0x661c>
    fbec:	bl	f66c <fputs@plt+0x62b0>
    fbf0:	bl	f700 <fputs@plt+0x6344>
    fbf4:	cmp	r0, #110	; 0x6e
    fbf8:	beq	fd58 <fputs@plt+0x699c>
    fbfc:	mov	r0, #101	; 0x65
    fc00:	mov	r1, #0
    fc04:	bl	f788 <fputs@plt+0x63cc>
    fc08:	b	f9ac <fputs@plt+0x65f0>
    fc0c:	bl	f66c <fputs@plt+0x62b0>
    fc10:	bl	f700 <fputs@plt+0x6344>
    fc14:	cmp	r0, #116	; 0x74
    fc18:	beq	fd14 <fputs@plt+0x6958>
    fc1c:	mov	r0, r4
    fc20:	mov	r1, #0
    fc24:	bl	f788 <fputs@plt+0x63cc>
    fc28:	b	f984 <fputs@plt+0x65c8>
    fc2c:	bl	f66c <fputs@plt+0x62b0>
    fc30:	bl	f700 <fputs@plt+0x6344>
    fc34:	cmp	r0, #105	; 0x69
    fc38:	beq	fd78 <fputs@plt+0x69bc>
    fc3c:	mov	r0, #101	; 0x65
    fc40:	mov	r1, #0
    fc44:	bl	f788 <fputs@plt+0x63cc>
    fc48:	b	fa08 <fputs@plt+0x664c>
    fc4c:	bl	f66c <fputs@plt+0x62b0>
    fc50:	bl	f700 <fputs@plt+0x6344>
    fc54:	cmp	r0, #97	; 0x61
    fc58:	beq	fdec <fputs@plt+0x6a30>
    fc5c:	mov	r0, #116	; 0x74
    fc60:	mov	r1, #0
    fc64:	bl	f788 <fputs@plt+0x63cc>
    fc68:	b	fa3c <fputs@plt+0x6680>
    fc6c:	bl	f66c <fputs@plt+0x62b0>
    fc70:	movw	r1, #20580	; 0x5064
    fc74:	ldr	r0, [pc, #1020]	; 10078 <fputs@plt+0x6cbc>
    fc78:	movt	r1, #2
    fc7c:	bl	20d50 <_ZdlPv@@Base+0x360>
    fc80:	movw	r0, #315	; 0x13b
    fc84:	pop	{r4, pc}
    fc88:	bl	f66c <fputs@plt+0x62b0>
    fc8c:	bl	f700 <fputs@plt+0x6344>
    fc90:	cmp	r0, #103	; 0x67
    fc94:	beq	fe48 <fputs@plt+0x6a8c>
    fc98:	mov	r0, #105	; 0x69
    fc9c:	mov	r1, #0
    fca0:	bl	f788 <fputs@plt+0x63cc>
    fca4:	b	fb10 <fputs@plt+0x6754>
    fca8:	bl	f66c <fputs@plt+0x62b0>
    fcac:	bl	f700 <fputs@plt+0x6344>
    fcb0:	cmp	r0, #100	; 0x64
    fcb4:	beq	fef8 <fputs@plt+0x6b3c>
    fcb8:	mov	r0, r4
    fcbc:	mov	r1, #0
    fcc0:	bl	f788 <fputs@plt+0x63cc>
    fcc4:	b	fb10 <fputs@plt+0x6754>
    fcc8:	bl	f66c <fputs@plt+0x62b0>
    fccc:	bl	f700 <fputs@plt+0x6344>
    fcd0:	cmp	r0, #116	; 0x74
    fcd4:	beq	ff34 <fputs@plt+0x6b78>
    fcd8:	mov	r0, r4
    fcdc:	mov	r1, #0
    fce0:	bl	f788 <fputs@plt+0x63cc>
    fce4:	b	fb9c <fputs@plt+0x67e0>
    fce8:	bl	f66c <fputs@plt+0x62b0>
    fcec:	bl	f700 <fputs@plt+0x6344>
    fcf0:	cmp	r0, #116	; 0x74
    fcf4:	mov	r4, r0
    fcf8:	beq	fe90 <fputs@plt+0x6ad4>
    fcfc:	movw	r1, #20608	; 0x5080
    fd00:	ldr	r0, [pc, #880]	; 10078 <fputs@plt+0x6cbc>
    fd04:	movt	r1, #2
    fd08:	bl	20d50 <_ZdlPv@@Base+0x360>
    fd0c:	movw	r0, #323	; 0x143
    fd10:	pop	{r4, pc}
    fd14:	bl	f66c <fputs@plt+0x62b0>
    fd18:	bl	f700 <fputs@plt+0x6344>
    fd1c:	cmp	r0, #116	; 0x74
    fd20:	beq	fe6c <fputs@plt+0x6ab0>
    fd24:	movw	r1, #20692	; 0x50d4
    fd28:	ldr	r0, [pc, #840]	; 10078 <fputs@plt+0x6cbc>
    fd2c:	movt	r1, #2
    fd30:	bl	20d50 <_ZdlPv@@Base+0x360>
    fd34:	mov	r0, #312	; 0x138
    fd38:	pop	{r4, pc}
    fd3c:	bl	f66c <fputs@plt+0x62b0>
    fd40:	movw	r1, #20588	; 0x506c
    fd44:	ldr	r0, [pc, #812]	; 10078 <fputs@plt+0x6cbc>
    fd48:	movt	r1, #2
    fd4c:	bl	20d50 <_ZdlPv@@Base+0x360>
    fd50:	movw	r0, #319	; 0x13f
    fd54:	pop	{r4, pc}
    fd58:	bl	f66c <fputs@plt+0x62b0>
    fd5c:	bl	f700 <fputs@plt+0x6344>
    fd60:	cmp	r0, #116	; 0x74
    fd64:	beq	feb0 <fputs@plt+0x6af4>
    fd68:	mov	r0, #110	; 0x6e
    fd6c:	mov	r1, #0
    fd70:	bl	f788 <fputs@plt+0x63cc>
    fd74:	b	fbfc <fputs@plt+0x6840>
    fd78:	bl	f66c <fputs@plt+0x62b0>
    fd7c:	bl	f700 <fputs@plt+0x6344>
    fd80:	cmp	r0, #103	; 0x67
    fd84:	beq	fed4 <fputs@plt+0x6b18>
    fd88:	mov	r0, #105	; 0x69
    fd8c:	mov	r1, #0
    fd90:	bl	f788 <fputs@plt+0x63cc>
    fd94:	b	fc3c <fputs@plt+0x6880>
    fd98:	bl	f66c <fputs@plt+0x62b0>
    fd9c:	movw	r1, #20576	; 0x5060
    fda0:	ldr	r0, [pc, #720]	; 10078 <fputs@plt+0x6cbc>
    fda4:	movt	r1, #2
    fda8:	bl	20d50 <_ZdlPv@@Base+0x360>
    fdac:	movw	r0, #313	; 0x139
    fdb0:	pop	{r4, pc}
    fdb4:	bl	f66c <fputs@plt+0x62b0>
    fdb8:	movw	r1, #20544	; 0x5040
    fdbc:	ldr	r0, [pc, #692]	; 10078 <fputs@plt+0x6cbc>
    fdc0:	movt	r1, #2
    fdc4:	bl	20d50 <_ZdlPv@@Base+0x360>
    fdc8:	movw	r0, #322	; 0x142
    fdcc:	pop	{r4, pc}
    fdd0:	bl	f66c <fputs@plt+0x62b0>
    fdd4:	movw	r1, #20620	; 0x508c
    fdd8:	ldr	r0, [pc, #664]	; 10078 <fputs@plt+0x6cbc>
    fddc:	movt	r1, #2
    fde0:	bl	20d50 <_ZdlPv@@Base+0x360>
    fde4:	movw	r0, #314	; 0x13a
    fde8:	pop	{r4, pc}
    fdec:	bl	f66c <fputs@plt+0x62b0>
    fdf0:	bl	f700 <fputs@plt+0x6344>
    fdf4:	cmp	r0, #114	; 0x72
    fdf8:	mov	r4, r0
    fdfc:	beq	ff14 <fputs@plt+0x6b58>
    fe00:	mov	r0, #97	; 0x61
    fe04:	mov	r1, #0
    fe08:	bl	f788 <fputs@plt+0x63cc>
    fe0c:	b	fc5c <fputs@plt+0x68a0>
    fe10:	bl	f66c <fputs@plt+0x62b0>
    fe14:	movw	r1, #20624	; 0x5090
    fe18:	ldr	r0, [pc, #600]	; 10078 <fputs@plt+0x6cbc>
    fe1c:	movt	r1, #2
    fe20:	bl	20d50 <_ZdlPv@@Base+0x360>
    fe24:	mov	r0, #316	; 0x13c
    fe28:	pop	{r4, pc}
    fe2c:	bl	f66c <fputs@plt+0x62b0>
    fe30:	movw	r1, #20640	; 0x50a0
    fe34:	ldr	r0, [pc, #572]	; 10078 <fputs@plt+0x6cbc>
    fe38:	movt	r1, #2
    fe3c:	bl	20d50 <_ZdlPv@@Base+0x360>
    fe40:	movw	r0, #309	; 0x135
    fe44:	pop	{r4, pc}
    fe48:	bl	f66c <fputs@plt+0x62b0>
    fe4c:	bl	f700 <fputs@plt+0x6344>
    fe50:	cmp	r0, #104	; 0x68
    fe54:	mov	r4, r0
    fe58:	beq	ff50 <fputs@plt+0x6b94>
    fe5c:	mov	r0, #103	; 0x67
    fe60:	mov	r1, #0
    fe64:	bl	f788 <fputs@plt+0x63cc>
    fe68:	b	fc98 <fputs@plt+0x68dc>
    fe6c:	bl	f66c <fputs@plt+0x62b0>
    fe70:	bl	f700 <fputs@plt+0x6344>
    fe74:	cmp	r0, #111	; 0x6f
    fe78:	mov	r4, r0
    fe7c:	beq	ff70 <fputs@plt+0x6bb4>
    fe80:	mov	r0, #116	; 0x74
    fe84:	mov	r1, #0
    fe88:	bl	f788 <fputs@plt+0x63cc>
    fe8c:	b	fd24 <fputs@plt+0x6968>
    fe90:	bl	f66c <fputs@plt+0x62b0>
    fe94:	bl	f700 <fputs@plt+0x6344>
    fe98:	cmp	r0, #104	; 0x68
    fe9c:	beq	ff90 <fputs@plt+0x6bd4>
    fea0:	mov	r0, r4
    fea4:	mov	r1, #0
    fea8:	bl	f788 <fputs@plt+0x63cc>
    feac:	b	fcfc <fputs@plt+0x6940>
    feb0:	bl	f66c <fputs@plt+0x62b0>
    feb4:	bl	f700 <fputs@plt+0x6344>
    feb8:	cmp	r0, #101	; 0x65
    febc:	mov	r4, r0
    fec0:	beq	ffac <fputs@plt+0x6bf0>
    fec4:	mov	r0, #116	; 0x74
    fec8:	mov	r1, #0
    fecc:	bl	f788 <fputs@plt+0x63cc>
    fed0:	b	fd68 <fputs@plt+0x69ac>
    fed4:	bl	f66c <fputs@plt+0x62b0>
    fed8:	bl	f700 <fputs@plt+0x6344>
    fedc:	cmp	r0, #104	; 0x68
    fee0:	mov	r4, r0
    fee4:	beq	ffcc <fputs@plt+0x6c10>
    fee8:	mov	r0, #103	; 0x67
    feec:	mov	r1, #0
    fef0:	bl	f788 <fputs@plt+0x63cc>
    fef4:	b	fd88 <fputs@plt+0x69cc>
    fef8:	bl	f66c <fputs@plt+0x62b0>
    fefc:	movw	r1, #20664	; 0x50b8
    ff00:	ldr	r0, [pc, #368]	; 10078 <fputs@plt+0x6cbc>
    ff04:	movt	r1, #2
    ff08:	bl	20d50 <_ZdlPv@@Base+0x360>
    ff0c:	mov	r0, #324	; 0x144
    ff10:	pop	{r4, pc}
    ff14:	bl	f66c <fputs@plt+0x62b0>
    ff18:	bl	f700 <fputs@plt+0x6344>
    ff1c:	cmp	r0, #116	; 0x74
    ff20:	beq	ffec <fputs@plt+0x6c30>
    ff24:	mov	r0, r4
    ff28:	mov	r1, #0
    ff2c:	bl	f788 <fputs@plt+0x63cc>
    ff30:	b	fe00 <fputs@plt+0x6a44>
    ff34:	bl	f66c <fputs@plt+0x62b0>
    ff38:	movw	r1, #20652	; 0x50ac
    ff3c:	ldr	r0, [pc, #308]	; 10078 <fputs@plt+0x6cbc>
    ff40:	movt	r1, #2
    ff44:	bl	20d50 <_ZdlPv@@Base+0x360>
    ff48:	movw	r0, #311	; 0x137
    ff4c:	pop	{r4, pc}
    ff50:	bl	f66c <fputs@plt+0x62b0>
    ff54:	bl	f700 <fputs@plt+0x6344>
    ff58:	cmp	r0, #116	; 0x74
    ff5c:	beq	10024 <fputs@plt+0x6c68>
    ff60:	mov	r0, r4
    ff64:	mov	r1, #0
    ff68:	bl	f788 <fputs@plt+0x63cc>
    ff6c:	b	fe5c <fputs@plt+0x6aa0>
    ff70:	bl	f66c <fputs@plt+0x62b0>
    ff74:	bl	f700 <fputs@plt+0x6344>
    ff78:	cmp	r0, #109	; 0x6d
    ff7c:	beq	10008 <fputs@plt+0x6c4c>
    ff80:	mov	r0, r4
    ff84:	mov	r1, #0
    ff88:	bl	f788 <fputs@plt+0x63cc>
    ff8c:	b	fe80 <fputs@plt+0x6ac4>
    ff90:	bl	f66c <fputs@plt+0x62b0>
    ff94:	movw	r1, #20600	; 0x5078
    ff98:	ldr	r0, [pc, #216]	; 10078 <fputs@plt+0x6cbc>
    ff9c:	movt	r1, #2
    ffa0:	bl	20d50 <_ZdlPv@@Base+0x360>
    ffa4:	movw	r0, #323	; 0x143
    ffa8:	pop	{r4, pc}
    ffac:	bl	f66c <fputs@plt+0x62b0>
    ffb0:	bl	f700 <fputs@plt+0x6344>
    ffb4:	cmp	r0, #114	; 0x72
    ffb8:	beq	10040 <fputs@plt+0x6c84>
    ffbc:	mov	r0, r4
    ffc0:	mov	r1, #0
    ffc4:	bl	f788 <fputs@plt+0x63cc>
    ffc8:	b	fec4 <fputs@plt+0x6b08>
    ffcc:	bl	f66c <fputs@plt+0x62b0>
    ffd0:	bl	f700 <fputs@plt+0x6344>
    ffd4:	cmp	r0, #116	; 0x74
    ffd8:	beq	1005c <fputs@plt+0x6ca0>
    ffdc:	mov	r0, r4
    ffe0:	mov	r1, #0
    ffe4:	bl	f788 <fputs@plt+0x63cc>
    ffe8:	b	fee8 <fputs@plt+0x6b2c>
    ffec:	bl	f66c <fputs@plt+0x62b0>
    fff0:	movw	r1, #20628	; 0x5094
    fff4:	ldr	r0, [pc, #124]	; 10078 <fputs@plt+0x6cbc>
    fff8:	movt	r1, #2
    fffc:	bl	20d50 <_ZdlPv@@Base+0x360>
   10000:	movw	r0, #318	; 0x13e
   10004:	pop	{r4, pc}
   10008:	bl	f66c <fputs@plt+0x62b0>
   1000c:	movw	r1, #20684	; 0x50cc
   10010:	ldr	r0, [pc, #96]	; 10078 <fputs@plt+0x6cbc>
   10014:	movt	r1, #2
   10018:	bl	20d50 <_ZdlPv@@Base+0x360>
   1001c:	mov	r0, #312	; 0x138
   10020:	pop	{r4, pc}
   10024:	bl	f66c <fputs@plt+0x62b0>
   10028:	movw	r1, #20672	; 0x50c0
   1002c:	ldr	r0, [pc, #68]	; 10078 <fputs@plt+0x6cbc>
   10030:	movt	r1, #2
   10034:	bl	20d50 <_ZdlPv@@Base+0x360>
   10038:	movw	r0, #310	; 0x136
   1003c:	pop	{r4, pc}
   10040:	bl	f66c <fputs@plt+0x62b0>
   10044:	movw	r1, #20564	; 0x5054
   10048:	ldr	r0, [pc, #40]	; 10078 <fputs@plt+0x6cbc>
   1004c:	movt	r1, #2
   10050:	bl	20d50 <_ZdlPv@@Base+0x360>
   10054:	movw	r0, #317	; 0x13d
   10058:	pop	{r4, pc}
   1005c:	bl	f66c <fputs@plt+0x62b0>
   10060:	movw	r1, #20548	; 0x5044
   10064:	ldr	r0, [pc, #12]	; 10078 <fputs@plt+0x6cbc>
   10068:	movt	r1, #2
   1006c:	bl	20d50 <_ZdlPv@@Base+0x360>
   10070:	movw	r0, #322	; 0x142
   10074:	pop	{r4, pc}
   10078:	andeq	r0, r3, r8, lsr sl
   1007c:	push	{r4}		; (str r4, [sp, #-4]!)
   10080:	vstr	d0, [r0, #16]
   10084:	vstr	d1, [r0, #24]
   10088:	vstr	d2, [r0, #40]	; 0x28
   1008c:	ldr	r4, [pc, #36]	; 100b8 <fputs@plt+0x6cfc>
   10090:	str	r3, [r0, #12]
   10094:	str	r3, [r0, #48]	; 0x30
   10098:	mov	r3, #0
   1009c:	str	r4, [r0]
   100a0:	str	r1, [r0, #8]
   100a4:	str	r2, [r0, #32]
   100a8:	str	r3, [r0, #4]
   100ac:	str	r3, [r0, #52]	; 0x34
   100b0:	pop	{r4}		; (ldr r4, [sp], #4)
   100b4:	bx	lr
   100b8:	strdeq	r4, [r2], -r8
   100bc:	push	{r4, r5, r6, lr}
   100c0:	vpush	{d8-d10}
   100c4:	mov	r4, r1
   100c8:	vmov.f64	d9, d1
   100cc:	mov	r5, r2
   100d0:	mov	r6, r0
   100d4:	vmov.f64	d8, d2
   100d8:	vmov.f64	d10, d0
   100dc:	bl	9f44 <fputs@plt+0xb88>
   100e0:	cmp	r4, #0
   100e4:	beq	100f4 <fputs@plt+0x6d38>
   100e8:	vcmpe.f64	d8, #0.0
   100ec:	vmrs	APSR_nzcv, fpscr
   100f0:	bls	10160 <fputs@plt+0x6da4>
   100f4:	vcmpe.f64	d8, #0.0
   100f8:	vmrs	APSR_nzcv, fpscr
   100fc:	ble	1010c <fputs@plt+0x6d50>
   10100:	vcmpe.f64	d10, d9
   10104:	vmrs	APSR_nzcv, fpscr
   10108:	bgt	10160 <fputs@plt+0x6da4>
   1010c:	vcmpe.f64	d8, #0.0
   10110:	vmrs	APSR_nzcv, fpscr
   10114:	bmi	10168 <fputs@plt+0x6dac>
   10118:	mov	r0, #56	; 0x38
   1011c:	bl	209a0 <_Znwj@@Base>
   10120:	movw	r3, #2608	; 0xa30
   10124:	movt	r3, #3
   10128:	ldr	ip, [pc, #76]	; 1017c <fputs@plt+0x6dc0>
   1012c:	mov	r1, #0
   10130:	ldr	r2, [r3]
   10134:	vstr	d10, [r0, #16]
   10138:	str	ip, [r0]
   1013c:	vstr	d9, [r0, #24]
   10140:	str	r6, [r0, #8]
   10144:	vstr	d8, [r0, #40]	; 0x28
   10148:	str	r5, [r0, #12]
   1014c:	str	r4, [r0, #32]
   10150:	str	r5, [r0, #48]	; 0x30
   10154:	str	r1, [r0, #52]	; 0x34
   10158:	str	r2, [r0, #4]
   1015c:	str	r0, [r3]
   10160:	vpop	{d8-d10}
   10164:	pop	{r4, r5, r6, pc}
   10168:	vcmpe.f64	d10, d9
   1016c:	vmrs	APSR_nzcv, fpscr
   10170:	bpl	10118 <fputs@plt+0x6d5c>
   10174:	vpop	{d8-d10}
   10178:	pop	{r4, r5, r6, pc}
   1017c:	strdeq	r4, [r2], -r8
   10180:	ldr	r3, [r0, #8]
   10184:	cmp	r3, #0
   10188:	beq	10194 <fputs@plt+0x6dd8>
   1018c:	mov	r0, #0
   10190:	bx	lr
   10194:	b	ecf0 <fputs@plt+0x5934>
   10198:	ldr	ip, [pc, #28]	; 101bc <fputs@plt+0x6e00>
   1019c:	str	r2, [r0, #8]
   101a0:	mov	r2, #0
   101a4:	str	r1, [r0, #16]
   101a8:	mov	r1, #1
   101ac:	str	ip, [r0]
   101b0:	str	r2, [r0, #4]
   101b4:	str	r1, [r0, #12]
   101b8:	bx	lr
   101bc:	andeq	r4, r2, r8, lsl lr
   101c0:	push	{r3, r4, r5, r6, r7, lr}
   101c4:	mov	r7, r0
   101c8:	mov	r0, #12
   101cc:	movw	r5, #2608	; 0xa30
   101d0:	bl	209a0 <_Znwj@@Base>
   101d4:	movt	r5, #3
   101d8:	ldr	r6, [pc, #104]	; 10248 <fputs@plt+0x6e8c>
   101dc:	mov	r2, #10
   101e0:	ldr	r1, [r5]
   101e4:	mov	r3, r0
   101e8:	mov	r0, #16
   101ec:	str	r2, [r3, #8]
   101f0:	add	r2, r6, #32
   101f4:	str	r1, [r3, #4]
   101f8:	str	r2, [r3]
   101fc:	str	r3, [r5]
   10200:	bl	209a0 <_Znwj@@Base>
   10204:	mov	r2, #0
   10208:	add	r3, r6, #64	; 0x40
   1020c:	mov	r4, r0
   10210:	mov	r0, r7
   10214:	str	r2, [r4, #4]
   10218:	str	r3, [r4]
   1021c:	bl	214b4 <_ZdlPv@@Base+0xac4>
   10220:	ldr	r3, [r5]
   10224:	str	r0, [r4, #8]
   10228:	str	r0, [r4, #12]
   1022c:	str	r4, [r5]
   10230:	str	r3, [r4, #4]
   10234:	pop	{r3, r4, r5, r6, r7, pc}
   10238:	mov	r0, r4
   1023c:	str	r6, [r4]
   10240:	bl	209f0 <_ZdlPv@@Base>
   10244:	bl	9188 <__cxa_end_cleanup@plt>
   10248:	andeq	r4, r2, r8, ror sp
   1024c:	movw	ip, #2608	; 0xa30
   10250:	movt	ip, #3
   10254:	push	{r4, r5, r6, r7, r8, r9, lr}
   10258:	movw	r5, #1424	; 0x590
   1025c:	movt	r5, #3
   10260:	ldr	r4, [ip]
   10264:	mov	r9, r0
   10268:	sub	sp, sp, #28
   1026c:	ldr	r0, [r5]
   10270:	cmp	r4, #0
   10274:	mov	r8, r1
   10278:	mov	r7, r2
   1027c:	mov	r6, r3
   10280:	str	r0, [sp, #20]
   10284:	bne	10298 <fputs@plt+0x6edc>
   10288:	b	102d8 <fputs@plt+0x6f1c>
   1028c:	ldr	r4, [r4, #4]
   10290:	cmp	r4, #0
   10294:	beq	102d8 <fputs@plt+0x6f1c>
   10298:	ldr	ip, [r4]
   1029c:	mov	r0, r4
   102a0:	add	r1, sp, #12
   102a4:	add	r2, sp, #16
   102a8:	ldr	ip, [ip, #16]
   102ac:	blx	ip
   102b0:	cmp	r0, #0
   102b4:	beq	1028c <fputs@plt+0x6ed0>
   102b8:	ldr	r0, [sp, #12]
   102bc:	mov	r2, r9
   102c0:	ldr	r1, [sp, #16]
   102c4:	mov	r3, r8
   102c8:	str	r7, [sp]
   102cc:	str	r6, [sp, #4]
   102d0:	bl	1f798 <fputs@plt+0x163dc>
   102d4:	b	102ec <fputs@plt+0x6f30>
   102d8:	mov	r0, r9
   102dc:	mov	r1, r8
   102e0:	mov	r2, r7
   102e4:	mov	r3, r6
   102e8:	bl	1f708 <fputs@plt+0x1634c>
   102ec:	ldr	r2, [sp, #20]
   102f0:	ldr	r3, [r5]
   102f4:	cmp	r2, r3
   102f8:	bne	10304 <fputs@plt+0x6f48>
   102fc:	add	sp, sp, #28
   10300:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10304:	bl	92b4 <__stack_chk_fail@plt>
   10308:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1030c:	movw	r8, #1424	; 0x590
   10310:	movt	r8, #3
   10314:	sub	sp, sp, #24
   10318:	movw	r6, #1104	; 0x450
   1031c:	movw	r9, #2692	; 0xa84
   10320:	ldr	r3, [r8]
   10324:	add	r7, r0, #20
   10328:	movt	r6, #3
   1032c:	movt	r9, #3
   10330:	mov	r5, r0
   10334:	str	r3, [sp, #20]
   10338:	mov	r0, r7
   1033c:	bl	21274 <_ZdlPv@@Base+0x884>
   10340:	ldr	r3, [r5, #16]
   10344:	add	r3, r3, #1
   10348:	str	r3, [r5, #16]
   1034c:	ldr	r0, [r5, #8]
   10350:	bl	914c <_IO_getc@plt>
   10354:	cmn	r0, #1
   10358:	mov	r4, r0
   1035c:	beq	103d8 <fputs@plt+0x701c>
   10360:	cmp	r0, #0
   10364:	blt	103a0 <fputs@plt+0x6fe4>
   10368:	ldrb	r3, [r6, r0]
   1036c:	cmp	r3, #0
   10370:	beq	103a0 <fputs@plt+0x6fe4>
   10374:	mov	r1, r0
   10378:	mov	r0, sp
   1037c:	bl	1f290 <fputs@plt+0x15ed4>
   10380:	movw	r2, #13880	; 0x3638
   10384:	movt	r2, #3
   10388:	movw	r0, #20440	; 0x4fd8
   1038c:	mov	r1, sp
   10390:	movt	r0, #2
   10394:	mov	r3, r2
   10398:	bl	1024c <fputs@plt+0x6e90>
   1039c:	b	1034c <fputs@plt+0x6f90>
   103a0:	ldr	r3, [r5, #24]
   103a4:	uxtb	sl, r4
   103a8:	ldr	r2, [r5, #28]
   103ac:	cmp	r3, r2
   103b0:	blt	103c0 <fputs@plt+0x7004>
   103b4:	mov	r0, r7
   103b8:	bl	20e3c <_ZdlPv@@Base+0x44c>
   103bc:	ldr	r3, [r5, #24]
   103c0:	ldr	r2, [r5, #20]
   103c4:	cmp	r4, #10
   103c8:	add	r1, r3, #1
   103cc:	str	r1, [r5, #24]
   103d0:	strb	sl, [r2, r3]
   103d4:	bne	1034c <fputs@plt+0x6f90>
   103d8:	ldr	r0, [r5, #24]
   103dc:	cmp	r0, #0
   103e0:	beq	104a0 <fputs@plt+0x70e4>
   103e4:	cmp	r0, #2
   103e8:	ble	10474 <fputs@plt+0x70b8>
   103ec:	ldr	r3, [r5, #20]
   103f0:	ldrb	r2, [r3]
   103f4:	cmp	r2, #46	; 0x2e
   103f8:	bne	10474 <fputs@plt+0x70b8>
   103fc:	ldrb	r2, [r3, #1]
   10400:	cmp	r2, #80	; 0x50
   10404:	bne	10474 <fputs@plt+0x70b8>
   10408:	ldrb	r2, [r3, #2]
   1040c:	cmp	r2, #83	; 0x53
   10410:	beq	10424 <fputs@plt+0x7068>
   10414:	cmp	r2, #69	; 0x45
   10418:	beq	10424 <fputs@plt+0x7068>
   1041c:	cmp	r2, #70	; 0x46
   10420:	bne	10474 <fputs@plt+0x70b8>
   10424:	cmp	r0, #3
   10428:	beq	10338 <fputs@plt+0x6f7c>
   1042c:	ldrb	r3, [r3, #3]
   10430:	cmp	r3, #32
   10434:	beq	10338 <fputs@plt+0x6f7c>
   10438:	ldr	r2, [r5, #24]
   1043c:	cmp	r2, #3
   10440:	bgt	1045c <fputs@plt+0x70a0>
   10444:	movw	r1, #20472	; 0x4ff8
   10448:	mov	r0, #99	; 0x63
   1044c:	movt	r1, #2
   10450:	bl	1eec8 <fputs@plt+0x15b0c>
   10454:	ldr	r3, [r5, #20]
   10458:	ldrb	r3, [r3, #3]
   1045c:	cmp	r3, #10
   10460:	beq	10338 <fputs@plt+0x6f7c>
   10464:	ldr	r3, [r9]
   10468:	cmp	r3, #0
   1046c:	bne	10338 <fputs@plt+0x6f7c>
   10470:	ldr	r0, [r5, #24]
   10474:	ldr	r3, [r5, #28]
   10478:	cmp	r0, r3
   1047c:	bge	104b8 <fputs@plt+0x70fc>
   10480:	ldr	r3, [r5, #20]
   10484:	add	r1, r0, #1
   10488:	mov	r2, #0
   1048c:	str	r1, [r5, #24]
   10490:	strb	r2, [r3, r0]
   10494:	mov	r0, #1
   10498:	ldr	r3, [r5, #20]
   1049c:	str	r3, [r5, #32]
   104a0:	ldr	r2, [sp, #20]
   104a4:	ldr	r3, [r8]
   104a8:	cmp	r2, r3
   104ac:	bne	104c8 <fputs@plt+0x710c>
   104b0:	add	sp, sp, #24
   104b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   104b8:	mov	r0, r7
   104bc:	bl	20e3c <_ZdlPv@@Base+0x44c>
   104c0:	ldr	r0, [r5, #24]
   104c4:	b	10480 <fputs@plt+0x70c4>
   104c8:	bl	92b4 <__stack_chk_fail@plt>
   104cc:	ldr	r3, [r0, #32]
   104d0:	push	{r4, lr}
   104d4:	mov	r4, r0
   104d8:	ldrb	r2, [r3]
   104dc:	cmp	r2, #0
   104e0:	beq	104f4 <fputs@plt+0x7138>
   104e4:	add	r2, r3, #1
   104e8:	str	r2, [r4, #32]
   104ec:	ldrb	r0, [r3]
   104f0:	pop	{r4, pc}
   104f4:	bl	10308 <fputs@plt+0x6f4c>
   104f8:	cmp	r0, #0
   104fc:	ldrne	r3, [r4, #32]
   10500:	bne	104e4 <fputs@plt+0x7128>
   10504:	mvn	r0, #0
   10508:	pop	{r4, pc}
   1050c:	ldr	r3, [r0, #32]
   10510:	push	{r4, lr}
   10514:	mov	r4, r0
   10518:	ldrb	r3, [r3]
   1051c:	cmp	r3, #0
   10520:	beq	1052c <fputs@plt+0x7170>
   10524:	mov	r0, r3
   10528:	pop	{r4, pc}
   1052c:	bl	10308 <fputs@plt+0x6f4c>
   10530:	cmp	r0, #0
   10534:	ldrne	r3, [r4, #32]
   10538:	ldrbne	r0, [r3]
   1053c:	mvneq	r0, #0
   10540:	pop	{r4, pc}
   10544:	movw	r1, #1424	; 0x590
   10548:	movt	r1, #3
   1054c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10550:	sub	sp, sp, #52	; 0x34
   10554:	ldr	r3, [r1]
   10558:	str	r1, [sp, #4]
   1055c:	str	r3, [sp, #44]	; 0x2c
   10560:	bl	214b4 <_ZdlPv@@Base+0xac4>
   10564:	ldrb	r3, [r0]
   10568:	mov	fp, r0
   1056c:	cmp	r3, #0
   10570:	beq	106a4 <fputs@plt+0x72e8>
   10574:	mov	r2, #0
   10578:	movw	r7, #11568	; 0x2d30
   1057c:	rsb	r8, r0, #1
   10580:	movt	r7, #3
   10584:	mov	r6, r2
   10588:	mov	r9, r2
   1058c:	b	105ac <fputs@plt+0x71f0>
   10590:	strb	r3, [fp, r9]
   10594:	add	r9, r9, #1
   10598:	add	r6, r6, #1
   1059c:	ldrb	r3, [fp, r6]
   105a0:	mov	r2, r6
   105a4:	cmp	r3, #0
   105a8:	beq	106a8 <fputs@plt+0x72ec>
   105ac:	cmp	r3, #36	; 0x24
   105b0:	bne	10590 <fputs@plt+0x71d4>
   105b4:	add	r2, fp, r2
   105b8:	ldrb	r2, [r2, #1]
   105bc:	ldrb	r2, [r7, r2]
   105c0:	cmp	r2, #0
   105c4:	beq	10590 <fputs@plt+0x71d4>
   105c8:	add	r4, fp, r6
   105cc:	mov	r2, #0
   105d0:	mov	r3, r4
   105d4:	b	105e8 <fputs@plt+0x722c>
   105d8:	cmp	r2, #32
   105dc:	addle	r2, r2, r2, lsl #2
   105e0:	addle	r2, r1, r2, lsl #1
   105e4:	suble	r2, r2, #48	; 0x30
   105e8:	add	r5, r8, r3
   105ec:	ldrb	r1, [r3, #1]!
   105f0:	ldrb	r0, [r7, r1]
   105f4:	cmp	r0, #0
   105f8:	bne	105d8 <fputs@plt+0x721c>
   105fc:	cmp	r2, #32
   10600:	bgt	1061c <fputs@plt+0x7260>
   10604:	cmp	r2, #0
   10608:	addgt	r2, r2, #127	; 0x7f
   1060c:	strbgt	r2, [fp, r9]
   10610:	addgt	r9, r9, #1
   10614:	sub	r6, r5, #1
   10618:	b	10598 <fputs@plt+0x71dc>
   1061c:	add	r0, sp, #12
   10620:	bl	20b8c <_ZdlPv@@Base+0x19c>
   10624:	cmp	r6, r5
   10628:	addlt	sl, r5, fp
   1062c:	blt	1064c <fputs@plt+0x7290>
   10630:	b	10670 <fputs@plt+0x72b4>
   10634:	ldr	r2, [sp, #12]
   10638:	cmp	r4, sl
   1063c:	add	r1, r3, #1
   10640:	str	r1, [sp, #16]
   10644:	strb	r6, [r2, r3]
   10648:	beq	10670 <fputs@plt+0x72b4>
   1064c:	ldr	r3, [sp, #16]
   10650:	ldr	r2, [sp, #20]
   10654:	ldrb	r6, [r4], #1
   10658:	cmp	r3, r2
   1065c:	blt	10634 <fputs@plt+0x7278>
   10660:	add	r0, sp, #12
   10664:	bl	20e3c <_ZdlPv@@Base+0x44c>
   10668:	ldr	r3, [sp, #16]
   1066c:	b	10634 <fputs@plt+0x7278>
   10670:	ldr	r1, [sp, #12]
   10674:	add	r0, sp, #24
   10678:	bl	1f264 <fputs@plt+0x15ea8>
   1067c:	movw	r2, #13880	; 0x3638
   10680:	movt	r2, #3
   10684:	movw	r0, #20704	; 0x50e0
   10688:	add	r1, sp, #24
   1068c:	mov	r3, r2
   10690:	movt	r0, #2
   10694:	bl	1024c <fputs@plt+0x6e90>
   10698:	add	r0, sp, #12
   1069c:	bl	20cf0 <_ZdlPv@@Base+0x300>
   106a0:	b	10614 <fputs@plt+0x7258>
   106a4:	mov	r9, r3
   106a8:	ldr	r1, [sp, #4]
   106ac:	mov	r3, #0
   106b0:	ldr	r2, [sp, #44]	; 0x2c
   106b4:	mov	r0, fp
   106b8:	strb	r3, [fp, r9]
   106bc:	ldr	r3, [r1]
   106c0:	cmp	r2, r3
   106c4:	bne	106d0 <fputs@plt+0x7314>
   106c8:	add	sp, sp, #52	; 0x34
   106cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   106d0:	bl	92b4 <__stack_chk_fail@plt>
   106d4:	add	r0, sp, #12
   106d8:	bl	20cf0 <_ZdlPv@@Base+0x300>
   106dc:	bl	9188 <__cxa_end_cleanup@plt>
   106e0:	push	{r3, r4, r5, lr}
   106e4:	cmp	r2, #0
   106e8:	ldr	r5, [pc, #84]	; 10744 <fputs@plt+0x7388>
   106ec:	mov	r4, r0
   106f0:	subgt	r3, r3, #4
   106f4:	str	r2, [r0, #20]
   106f8:	mov	ip, #0
   106fc:	add	r0, r5, #96	; 0x60
   10700:	str	ip, [r4, #16]
   10704:	addgt	lr, r3, r2, lsl #2
   10708:	stm	r4, {r0, ip}
   1070c:	addgt	ip, r4, #20
   10710:	ble	10724 <fputs@plt+0x7368>
   10714:	ldr	r2, [r3, #4]!
   10718:	cmp	r3, lr
   1071c:	str	r2, [ip, #4]!
   10720:	bne	10714 <fputs@plt+0x7358>
   10724:	mov	r0, r1
   10728:	bl	10544 <fputs@plt+0x7188>
   1072c:	str	r0, [r4, #8]
   10730:	str	r0, [r4, #12]
   10734:	mov	r0, r4
   10738:	pop	{r3, r4, r5, pc}
   1073c:	str	r5, [r4]
   10740:	bl	9188 <__cxa_end_cleanup@plt>
   10744:	andeq	r4, r2, r8, ror sp
   10748:	push	{r4, r5, r6, r7, r8, lr}
   1074c:	add	r6, r0, #160	; 0xa0
   10750:	ldr	r5, [pc, #100]	; 107bc <fputs@plt+0x7400>
   10754:	mov	r4, r0
   10758:	mov	r3, #0
   1075c:	str	r3, [r4, #8]
   10760:	add	r0, r5, #224	; 0xe0
   10764:	stm	r4, {r0, r3}
   10768:	mov	r0, r6
   1076c:	mov	r8, r1
   10770:	mov	r7, r2
   10774:	bl	20b8c <_ZdlPv@@Base+0x19c>
   10778:	mov	r3, #0
   1077c:	mov	r0, r8
   10780:	str	r3, [r4, #24]
   10784:	bl	10544 <fputs@plt+0x7188>
   10788:	str	r0, [r4, #12]
   1078c:	mov	r3, #0
   10790:	mov	r0, r7
   10794:	str	r3, [r4, #20]
   10798:	bl	214b4 <_ZdlPv@@Base+0xac4>
   1079c:	str	r0, [r4, #16]
   107a0:	mov	r0, r4
   107a4:	pop	{r4, r5, r6, r7, r8, pc}
   107a8:	str	r5, [r4]
   107ac:	bl	9188 <__cxa_end_cleanup@plt>
   107b0:	mov	r0, r6
   107b4:	bl	20cf0 <_ZdlPv@@Base+0x300>
   107b8:	b	107a8 <fputs@plt+0x73ec>
   107bc:	andeq	r4, r2, r8, ror sp
   107c0:	push	{r3, r4, r5, lr}
   107c4:	mov	r5, r1
   107c8:	mov	r1, r2
   107cc:	mov	r2, r3
   107d0:	mov	r4, r0
   107d4:	bl	10748 <fputs@plt+0x738c>
   107d8:	ldr	r3, [pc, #12]	; 107ec <fputs@plt+0x7430>
   107dc:	mov	r0, r4
   107e0:	str	r5, [r4, #172]	; 0xac
   107e4:	str	r3, [r4]
   107e8:	pop	{r3, r4, r5, pc}
   107ec:	andeq	r4, r2, r8, ror lr
   107f0:	push	{r4, lr}
   107f4:	mov	r4, r0
   107f8:	bl	10748 <fputs@plt+0x738c>
   107fc:	ldr	r3, [pc, #8]	; 1080c <fputs@plt+0x7450>
   10800:	mov	r0, r4
   10804:	str	r3, [r4]
   10808:	pop	{r4, pc}
   1080c:	muleq	r2, r8, lr
   10810:	push	{r4, r5, r6, lr}
   10814:	mov	r6, r0
   10818:	mov	r0, #172	; 0xac
   1081c:	mov	r5, r1
   10820:	bl	209a0 <_Znwj@@Base>
   10824:	mov	r1, r6
   10828:	mov	r2, r5
   1082c:	mov	r4, r0
   10830:	bl	10748 <fputs@plt+0x738c>
   10834:	movw	r3, #2608	; 0xa30
   10838:	movt	r3, #3
   1083c:	ldr	r1, [pc, #24]	; 1085c <fputs@plt+0x74a0>
   10840:	ldr	r2, [r3]
   10844:	stm	r4, {r1, r2}
   10848:	str	r4, [r3]
   1084c:	pop	{r4, r5, r6, pc}
   10850:	mov	r0, r4
   10854:	bl	209f0 <_ZdlPv@@Base>
   10858:	bl	9188 <__cxa_end_cleanup@plt>
   1085c:	muleq	r2, r8, lr
   10860:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10864:	ldr	r0, [pc, #468]	; 10a40 <fputs@plt+0x7684>
   10868:	bl	21274 <_ZdlPv@@Base+0x884>
   1086c:	bl	f66c <fputs@plt+0x62b0>
   10870:	mov	r4, r0
   10874:	sub	r0, r4, #9
   10878:	cmp	r4, #32
   1087c:	cmpne	r0, #1
   10880:	movhi	r8, #0
   10884:	movls	r8, #1
   10888:	bls	10960 <fputs@plt+0x75a4>
   1088c:	cmn	r4, #1
   10890:	beq	10a1c <fputs@plt+0x7660>
   10894:	ldr	r0, [pc, #424]	; 10a44 <fputs@plt+0x7688>
   10898:	uxtb	r1, r4
   1089c:	movw	r6, #2608	; 0xa30
   108a0:	bl	20dc4 <_ZdlPv@@Base+0x3d4>
   108a4:	movt	r6, #3
   108a8:	mov	sl, r8
   108ac:	mov	r9, r8
   108b0:	b	10914 <fputs@plt+0x7558>
   108b4:	cmp	r8, #2
   108b8:	beq	1098c <fputs@plt+0x75d0>
   108bc:	cmp	r8, #0
   108c0:	beq	1096c <fputs@plt+0x75b0>
   108c4:	movw	r1, #20536	; 0x5038
   108c8:	movw	r0, #1325	; 0x52d
   108cc:	movt	r1, #2
   108d0:	bl	1eec8 <fputs@plt+0x15b0c>
   108d4:	cmp	r8, #3
   108d8:	beq	109f0 <fputs@plt+0x7634>
   108dc:	ldr	r3, [r6, #24]
   108e0:	movw	r7, #2608	; 0xa30
   108e4:	ldr	r2, [r6, #28]
   108e8:	uxtb	r5, r5
   108ec:	movt	r7, #3
   108f0:	cmp	r3, r2
   108f4:	blt	10904 <fputs@plt+0x7548>
   108f8:	add	r0, r7, #20
   108fc:	bl	20e3c <_ZdlPv@@Base+0x44c>
   10900:	ldr	r3, [r7, #24]
   10904:	ldr	r2, [r6, #20]
   10908:	add	r1, r3, #1
   1090c:	str	r1, [r6, #24]
   10910:	strb	r5, [r2, r3]
   10914:	bl	f66c <fputs@plt+0x62b0>
   10918:	cmn	r0, #1
   1091c:	mov	r5, r0
   10920:	beq	109f8 <fputs@plt+0x763c>
   10924:	cmp	r0, #10
   10928:	beq	10934 <fputs@plt+0x7578>
   1092c:	cmp	r9, #0
   10930:	beq	10998 <fputs@plt+0x75dc>
   10934:	mov	r9, #1
   10938:	cmp	r8, #1
   1093c:	bne	108b4 <fputs@plt+0x74f8>
   10940:	cmp	r5, #34	; 0x22
   10944:	cmpne	r5, #10
   10948:	moveq	r8, #0
   1094c:	beq	108dc <fputs@plt+0x7520>
   10950:	cmp	r5, #92	; 0x5c
   10954:	movne	r8, #1
   10958:	moveq	r8, #2
   1095c:	b	108dc <fputs@plt+0x7520>
   10960:	bl	f66c <fputs@plt+0x62b0>
   10964:	mov	r4, r0
   10968:	b	10874 <fputs@plt+0x74b8>
   1096c:	cmp	r4, #123	; 0x7b
   10970:	beq	109d4 <fputs@plt+0x7618>
   10974:	cmp	r4, r5
   10978:	beq	109f0 <fputs@plt+0x7634>
   1097c:	subs	r3, r5, #34	; 0x22
   10980:	rsbs	r8, r3, #0
   10984:	adcs	r8, r8, r3
   10988:	b	108dc <fputs@plt+0x7520>
   1098c:	subs	r8, r5, #10
   10990:	movne	r8, #1
   10994:	b	108dc <fputs@plt+0x7520>
   10998:	ldr	r3, [r6, #12]
   1099c:	movw	r7, #2608	; 0xa30
   109a0:	ldr	r2, [r6, #16]
   109a4:	movt	r7, #3
   109a8:	uxtb	fp, r0
   109ac:	cmp	r3, r2
   109b0:	blt	109c0 <fputs@plt+0x7604>
   109b4:	add	r0, r7, #8
   109b8:	bl	20e3c <_ZdlPv@@Base+0x44c>
   109bc:	ldr	r3, [r7, #12]
   109c0:	ldr	r2, [r6, #8]
   109c4:	add	r1, r3, #1
   109c8:	str	r1, [r6, #12]
   109cc:	strb	fp, [r2, r3]
   109d0:	b	10938 <fputs@plt+0x757c>
   109d4:	cmp	r5, #123	; 0x7b
   109d8:	addeq	sl, sl, #1
   109dc:	beq	108dc <fputs@plt+0x7520>
   109e0:	cmp	r5, #125	; 0x7d
   109e4:	bne	1097c <fputs@plt+0x75c0>
   109e8:	subs	sl, sl, #1
   109ec:	bpl	108dc <fputs@plt+0x7520>
   109f0:	mov	r0, #1
   109f4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109f8:	movw	r1, #13880	; 0x3638
   109fc:	movt	r1, #3
   10a00:	movw	r0, #20760	; 0x5118
   10a04:	movt	r0, #2
   10a08:	mov	r2, r1
   10a0c:	mov	r3, r1
   10a10:	bl	1024c <fputs@plt+0x6e90>
   10a14:	mov	r0, #0
   10a18:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a1c:	movw	r1, #13880	; 0x3638
   10a20:	movt	r1, #3
   10a24:	movw	r0, #20740	; 0x5104
   10a28:	movt	r0, #2
   10a2c:	mov	r2, r1
   10a30:	mov	r3, r1
   10a34:	bl	1024c <fputs@plt+0x6e90>
   10a38:	mov	r0, r8
   10a3c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a40:	andeq	r0, r3, r4, asr #20
   10a44:	andeq	r0, r3, r8, lsr sl
   10a48:	push	{r3, r4, r5, r6, r7, lr}
   10a4c:	bl	f700 <fputs@plt+0x6344>
   10a50:	cmp	r0, #32
   10a54:	bne	10a68 <fputs@plt+0x76ac>
   10a58:	bl	f66c <fputs@plt+0x62b0>
   10a5c:	bl	f700 <fputs@plt+0x6344>
   10a60:	cmp	r0, #32
   10a64:	beq	10a58 <fputs@plt+0x769c>
   10a68:	cmn	r0, #1
   10a6c:	beq	10b64 <fputs@plt+0x77a8>
   10a70:	uxtb	r5, r0
   10a74:	movw	r3, #13616	; 0x3530
   10a78:	movt	r3, #3
   10a7c:	ldrb	r3, [r3, r5]
   10a80:	cmp	r3, #0
   10a84:	beq	10b64 <fputs@plt+0x77a8>
   10a88:	movw	r4, #2608	; 0xa30
   10a8c:	movt	r4, #3
   10a90:	bl	f66c <fputs@plt+0x62b0>
   10a94:	mov	r1, r5
   10a98:	add	r0, r4, #20
   10a9c:	movw	r6, #12592	; 0x3130
   10aa0:	mov	r7, r4
   10aa4:	bl	20dc4 <_ZdlPv@@Base+0x3d4>
   10aa8:	movt	r6, #3
   10aac:	b	10af4 <fputs@plt+0x7738>
   10ab0:	ldrb	r3, [r6, r5]
   10ab4:	cmp	r3, #0
   10ab8:	bne	10ac4 <fputs@plt+0x7708>
   10abc:	cmp	r0, #95	; 0x5f
   10ac0:	bne	10b04 <fputs@plt+0x7748>
   10ac4:	bl	f66c <fputs@plt+0x62b0>
   10ac8:	ldr	r3, [r4, #24]
   10acc:	ldr	r2, [r4, #28]
   10ad0:	cmp	r3, r2
   10ad4:	blt	10ae4 <fputs@plt+0x7728>
   10ad8:	ldr	r0, [pc, #304]	; 10c10 <fputs@plt+0x7854>
   10adc:	bl	20e3c <_ZdlPv@@Base+0x44c>
   10ae0:	ldr	r3, [r7, #24]
   10ae4:	ldr	r2, [r4, #20]
   10ae8:	add	r1, r3, #1
   10aec:	str	r1, [r4, #24]
   10af0:	strb	r5, [r2, r3]
   10af4:	bl	f700 <fputs@plt+0x6344>
   10af8:	cmn	r0, #1
   10afc:	uxtb	r5, r0
   10b00:	bne	10ab0 <fputs@plt+0x76f4>
   10b04:	movw	r5, #2608	; 0xa30
   10b08:	movt	r5, #3
   10b0c:	add	r0, r5, #8
   10b10:	add	r1, r5, #20
   10b14:	bl	20d10 <_ZdlPv@@Base+0x320>
   10b18:	ldr	r3, [r4, #24]
   10b1c:	ldr	r2, [r4, #28]
   10b20:	cmp	r3, r2
   10b24:	bge	10c00 <fputs@plt+0x7844>
   10b28:	ldr	r2, [r4, #20]
   10b2c:	movw	r6, #2608	; 0xa30
   10b30:	movt	r6, #3
   10b34:	add	r0, r3, #1
   10b38:	mov	r1, #0
   10b3c:	str	r0, [r4, #24]
   10b40:	strb	r1, [r2, r3]
   10b44:	add	r0, r6, #32
   10b48:	ldr	r1, [r4, #20]
   10b4c:	bl	f384 <fputs@plt+0x5fc8>
   10b50:	cmp	r0, #0
   10b54:	bne	10ba0 <fputs@plt+0x77e4>
   10b58:	ldr	r3, [r6, #24]
   10b5c:	subs	r5, r3, #2
   10b60:	bpl	10bac <fputs@plt+0x77f0>
   10b64:	bl	10860 <fputs@plt+0x74a4>
   10b68:	cmp	r0, #0
   10b6c:	beq	10bec <fputs@plt+0x7830>
   10b70:	movw	r4, #2608	; 0xa30
   10b74:	movt	r4, #3
   10b78:	ldr	r3, [r4, #24]
   10b7c:	ldr	r2, [r4, #28]
   10b80:	cmp	r3, r2
   10b84:	bge	10bf0 <fputs@plt+0x7834>
   10b88:	ldr	r2, [r4, #20]
   10b8c:	add	r0, r3, #1
   10b90:	mov	r1, #0
   10b94:	str	r0, [r4, #24]
   10b98:	strb	r1, [r2, r3]
   10b9c:	ldr	r0, [r4, #20]
   10ba0:	pop	{r3, r4, r5, r6, r7, lr}
   10ba4:	b	214b4 <_ZdlPv@@Base+0xac4>
   10ba8:	ldr	r3, [r6, #24]
   10bac:	cmp	r5, r3
   10bb0:	movw	r1, #20472	; 0x4ff8
   10bb4:	mov	r0, #99	; 0x63
   10bb8:	movt	r1, #2
   10bbc:	blt	10bc4 <fputs@plt+0x7808>
   10bc0:	bl	1eec8 <fputs@plt+0x15b0c>
   10bc4:	ldr	r3, [r4, #20]
   10bc8:	mov	r1, #0
   10bcc:	ldrb	r0, [r3, r5]
   10bd0:	sub	r5, r5, #1
   10bd4:	bl	f788 <fputs@plt+0x63cc>
   10bd8:	cmn	r5, #1
   10bdc:	bne	10ba8 <fputs@plt+0x77ec>
   10be0:	bl	10860 <fputs@plt+0x74a4>
   10be4:	cmp	r0, #0
   10be8:	bne	10b70 <fputs@plt+0x77b4>
   10bec:	pop	{r3, r4, r5, r6, r7, pc}
   10bf0:	add	r0, r4, #20
   10bf4:	bl	20e3c <_ZdlPv@@Base+0x44c>
   10bf8:	ldr	r3, [r4, #24]
   10bfc:	b	10b88 <fputs@plt+0x77cc>
   10c00:	add	r0, r5, #20
   10c04:	bl	20e3c <_ZdlPv@@Base+0x44c>
   10c08:	ldr	r3, [r5, #24]
   10c0c:	b	10b28 <fputs@plt+0x776c>
   10c10:	andeq	r0, r3, r4, asr #20
   10c14:	push	{r4, r5, lr}
   10c18:	movw	r5, #1424	; 0x590
   10c1c:	movt	r5, #3
   10c20:	ldr	r3, [r0, #48]	; 0x30
   10c24:	sub	sp, sp, #20
   10c28:	mov	r4, r0
   10c2c:	ldr	r2, [r5]
   10c30:	cmp	r3, #0
   10c34:	str	r2, [sp, #12]
   10c38:	beq	10d5c <fputs@plt+0x79a0>
   10c3c:	ldrb	r2, [r3]
   10c40:	cmp	r2, #0
   10c44:	bne	10d18 <fputs@plt+0x795c>
   10c48:	ldr	r3, [r0, #52]	; 0x34
   10c4c:	cmp	r3, #0
   10c50:	beq	10cf4 <fputs@plt+0x7938>
   10c54:	ldr	r0, [r0, #8]
   10c58:	mov	r1, sp
   10c5c:	bl	9f24 <fputs@plt+0xb68>
   10c60:	cmp	r0, #0
   10c64:	beq	10d28 <fputs@plt+0x796c>
   10c68:	ldr	r3, [r4, #32]
   10c6c:	vldr	d7, [sp]
   10c70:	ldr	r0, [r4, #8]
   10c74:	cmp	r3, #0
   10c78:	vldrne	d0, [r4, #40]	; 0x28
   10c7c:	vldreq	d6, [r4, #40]	; 0x28
   10c80:	vmulne.f64	d0, d0, d7
   10c84:	vaddeq.f64	d7, d6, d7
   10c88:	vstrne	d0, [sp]
   10c8c:	vmoveq.f64	d0, d7
   10c90:	vstreq	d7, [sp]
   10c94:	bl	9f44 <fputs@plt+0xb88>
   10c98:	vldr	d6, [r4, #16]
   10c9c:	vldr	d7, [r4, #24]
   10ca0:	vcmpe.f64	d6, d7
   10ca4:	vmrs	APSR_nzcv, fpscr
   10ca8:	bhi	10cbc <fputs@plt+0x7900>
   10cac:	vldr	d5, [sp]
   10cb0:	vcmpe.f64	d7, d5
   10cb4:	vmrs	APSR_nzcv, fpscr
   10cb8:	bmi	10d4c <fputs@plt+0x7990>
   10cbc:	vcmpe.f64	d6, d7
   10cc0:	vmrs	APSR_nzcv, fpscr
   10cc4:	blt	10cd8 <fputs@plt+0x791c>
   10cc8:	vldr	d6, [sp]
   10ccc:	vcmpe.f64	d7, d6
   10cd0:	vmrs	APSR_nzcv, fpscr
   10cd4:	bgt	10d4c <fputs@plt+0x7990>
   10cd8:	ldr	r3, [r4, #12]
   10cdc:	mov	r2, #0
   10ce0:	str	r2, [r4, #52]	; 0x34
   10ce4:	str	r3, [r4, #48]	; 0x30
   10ce8:	ldrb	r2, [r3]
   10cec:	cmp	r2, #0
   10cf0:	bne	10d18 <fputs@plt+0x795c>
   10cf4:	mov	r0, #10
   10cf8:	mov	r3, #1
   10cfc:	str	r3, [r4, #52]	; 0x34
   10d00:	ldr	r2, [sp, #12]
   10d04:	ldr	r3, [r5]
   10d08:	cmp	r2, r3
   10d0c:	bne	10d64 <fputs@plt+0x79a8>
   10d10:	add	sp, sp, #20
   10d14:	pop	{r4, r5, pc}
   10d18:	add	r2, r3, #1
   10d1c:	str	r2, [r4, #48]	; 0x30
   10d20:	ldrb	r0, [r3]
   10d24:	b	10d00 <fputs@plt+0x7944>
   10d28:	movw	r1, #13880	; 0x3638
   10d2c:	movt	r1, #3
   10d30:	movw	r0, #20788	; 0x5134
   10d34:	movt	r0, #2
   10d38:	mov	r2, r1
   10d3c:	mov	r3, r1
   10d40:	bl	1024c <fputs@plt+0x6e90>
   10d44:	mvn	r0, #0
   10d48:	b	10d00 <fputs@plt+0x7944>
   10d4c:	mov	r3, #0
   10d50:	mvn	r0, #0
   10d54:	str	r3, [r4, #48]	; 0x30
   10d58:	b	10d00 <fputs@plt+0x7944>
   10d5c:	mvn	r0, #0
   10d60:	b	10d00 <fputs@plt+0x7944>
   10d64:	bl	92b4 <__stack_chk_fail@plt>
   10d68:	push	{r4, r5, r6, r7, r8, r9, lr}
   10d6c:	movw	r5, #1424	; 0x590
   10d70:	movt	r5, #3
   10d74:	sub	sp, sp, #44	; 0x2c
   10d78:	mov	r7, r0
   10d7c:	mov	r6, #0
   10d80:	ldr	r3, [r5]
   10d84:	str	r3, [sp, #36]	; 0x24
   10d88:	bl	9398 <__errno_location@plt>
   10d8c:	movw	r1, #21076	; 0x5254
   10d90:	movt	r1, #2
   10d94:	mov	r4, r0
   10d98:	mov	r0, r7
   10d9c:	str	r6, [r4]
   10da0:	bl	917c <fopen@plt>
   10da4:	subs	r8, r0, #0
   10da8:	beq	10e14 <fputs@plt+0x7a58>
   10dac:	mov	r0, #36	; 0x24
   10db0:	ldr	r9, [pc, #176]	; 10e68 <fputs@plt+0x7aac>
   10db4:	bl	209a0 <_Znwj@@Base>
   10db8:	add	r3, r9, #192	; 0xc0
   10dbc:	mov	r4, r0
   10dc0:	str	r6, [r0, #4]
   10dc4:	str	r8, [r0, #8]
   10dc8:	add	r0, r0, #20
   10dcc:	str	r7, [r4, #12]
   10dd0:	str	r6, [r4, #16]
   10dd4:	str	r3, [r4]
   10dd8:	bl	20b8c <_ZdlPv@@Base+0x19c>
   10ddc:	movw	r3, #2608	; 0xa30
   10de0:	movt	r3, #3
   10de4:	movw	r2, #26808	; 0x68b8
   10de8:	movt	r2, #2
   10dec:	ldr	r1, [r3]
   10df0:	str	r2, [r4, #32]
   10df4:	str	r4, [r3]
   10df8:	str	r1, [r4, #4]
   10dfc:	ldr	r2, [sp, #36]	; 0x24
   10e00:	ldr	r3, [r5]
   10e04:	cmp	r2, r3
   10e08:	bne	10e54 <fputs@plt+0x7a98>
   10e0c:	add	sp, sp, #44	; 0x2c
   10e10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10e14:	mov	r1, r7
   10e18:	mov	r0, sp
   10e1c:	bl	1f264 <fputs@plt+0x15ea8>
   10e20:	ldr	r0, [r4]
   10e24:	bl	90b0 <strerror@plt>
   10e28:	mov	r1, r0
   10e2c:	add	r0, sp, #16
   10e30:	bl	1f264 <fputs@plt+0x15ea8>
   10e34:	mov	r1, sp
   10e38:	add	r2, sp, #16
   10e3c:	movw	r0, #20832	; 0x5160
   10e40:	movw	r3, #13880	; 0x3638
   10e44:	movt	r0, #2
   10e48:	movt	r3, #3
   10e4c:	bl	1024c <fputs@plt+0x6e90>
   10e50:	b	10dfc <fputs@plt+0x7a40>
   10e54:	bl	92b4 <__stack_chk_fail@plt>
   10e58:	mov	r0, r4
   10e5c:	str	r9, [r4]
   10e60:	bl	209f0 <_ZdlPv@@Base>
   10e64:	bl	9188 <__cxa_end_cleanup@plt>
   10e68:	andeq	r4, r2, r8, ror sp
   10e6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e70:	movw	r5, #1424	; 0x590
   10e74:	movt	r5, #3
   10e78:	sub	sp, sp, #40	; 0x28
   10e7c:	mov	r6, r0
   10e80:	mov	r9, r1
   10e84:	ldr	r3, [r5]
   10e88:	mov	r8, r2
   10e8c:	mov	r7, #0
   10e90:	str	r3, [sp, #36]	; 0x24
   10e94:	bl	9398 <__errno_location@plt>
   10e98:	movw	r1, #21076	; 0x5254
   10e9c:	movt	r1, #2
   10ea0:	mov	r4, r0
   10ea4:	mov	r0, r6
   10ea8:	str	r7, [r4]
   10eac:	bl	917c <fopen@plt>
   10eb0:	subs	sl, r0, #0
   10eb4:	beq	10f2c <fputs@plt+0x7b70>
   10eb8:	mov	r0, #20
   10ebc:	bl	209a0 <_Znwj@@Base>
   10ec0:	ldr	r2, [pc, #180]	; 10f7c <fputs@plt+0x7bc0>
   10ec4:	mov	r3, #1
   10ec8:	mov	r4, r0
   10ecc:	str	r7, [r0, #4]
   10ed0:	str	r6, [r4, #8]
   10ed4:	mov	r0, #176	; 0xb0
   10ed8:	str	r2, [r4]
   10edc:	str	sl, [r4, #16]
   10ee0:	str	r3, [r4, #12]
   10ee4:	bl	209a0 <_Znwj@@Base>
   10ee8:	mov	r1, r9
   10eec:	mov	r2, r8
   10ef0:	mov	r6, r0
   10ef4:	bl	10748 <fputs@plt+0x738c>
   10ef8:	movw	r3, #2608	; 0xa30
   10efc:	movt	r3, #3
   10f00:	ldr	r1, [pc, #120]	; 10f80 <fputs@plt+0x7bc4>
   10f04:	ldr	r2, [r3]
   10f08:	str	r4, [r6, #172]	; 0xac
   10f0c:	stm	r6, {r1, r2}
   10f10:	str	r6, [r3]
   10f14:	ldr	r2, [sp, #36]	; 0x24
   10f18:	ldr	r3, [r5]
   10f1c:	cmp	r2, r3
   10f20:	bne	10f6c <fputs@plt+0x7bb0>
   10f24:	add	sp, sp, #40	; 0x28
   10f28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f2c:	mov	r1, r6
   10f30:	mov	r0, sp
   10f34:	bl	1f264 <fputs@plt+0x15ea8>
   10f38:	ldr	r0, [r4]
   10f3c:	bl	90b0 <strerror@plt>
   10f40:	mov	r1, r0
   10f44:	add	r0, sp, #16
   10f48:	bl	1f264 <fputs@plt+0x15ea8>
   10f4c:	mov	r1, sp
   10f50:	add	r2, sp, #16
   10f54:	movw	r0, #20832	; 0x5160
   10f58:	movw	r3, #13880	; 0x3638
   10f5c:	movt	r0, #2
   10f60:	movt	r3, #3
   10f64:	bl	1024c <fputs@plt+0x6e90>
   10f68:	b	10f14 <fputs@plt+0x7b58>
   10f6c:	bl	92b4 <__stack_chk_fail@plt>
   10f70:	mov	r0, r6
   10f74:	bl	209f0 <_ZdlPv@@Base>
   10f78:	bl	9188 <__cxa_end_cleanup@plt>
   10f7c:	andeq	r4, r2, r8, lsl lr
   10f80:	andeq	r4, r2, r8, ror lr
   10f84:	movw	ip, #2608	; 0xa30
   10f88:	movt	ip, #3
   10f8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10f90:	movw	r5, #1424	; 0x590
   10f94:	movt	r5, #3
   10f98:	ldr	r4, [ip]
   10f9c:	mov	r9, r0
   10fa0:	sub	sp, sp, #28
   10fa4:	ldr	r0, [r5]
   10fa8:	cmp	r4, #0
   10fac:	mov	r8, r1
   10fb0:	mov	r7, r2
   10fb4:	mov	r6, r3
   10fb8:	str	r0, [sp, #20]
   10fbc:	bne	10fd0 <fputs@plt+0x7c14>
   10fc0:	b	11010 <fputs@plt+0x7c54>
   10fc4:	ldr	r4, [r4, #4]
   10fc8:	cmp	r4, #0
   10fcc:	beq	11010 <fputs@plt+0x7c54>
   10fd0:	ldr	ip, [r4]
   10fd4:	mov	r0, r4
   10fd8:	add	r1, sp, #12
   10fdc:	add	r2, sp, #16
   10fe0:	ldr	ip, [ip, #16]
   10fe4:	blx	ip
   10fe8:	cmp	r0, #0
   10fec:	beq	10fc4 <fputs@plt+0x7c08>
   10ff0:	ldr	r0, [sp, #12]
   10ff4:	mov	r2, r9
   10ff8:	ldr	r1, [sp, #16]
   10ffc:	mov	r3, r8
   11000:	str	r7, [sp]
   11004:	str	r6, [sp, #4]
   11008:	bl	1f7d4 <fputs@plt+0x16418>
   1100c:	b	11024 <fputs@plt+0x7c68>
   11010:	mov	r0, r9
   11014:	mov	r1, r8
   11018:	mov	r2, r7
   1101c:	mov	r3, r6
   11020:	bl	1f738 <fputs@plt+0x1637c>
   11024:	ldr	r2, [sp, #20]
   11028:	ldr	r3, [r5]
   1102c:	cmp	r2, r3
   11030:	bne	1103c <fputs@plt+0x7c80>
   11034:	add	sp, sp, #28
   11038:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1103c:	bl	92b4 <__stack_chk_fail@plt>
   11040:	movw	r1, #1424	; 0x590
   11044:	movt	r1, #3
   11048:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1104c:	sub	sp, sp, #164	; 0xa4
   11050:	ldr	ip, [r1]
   11054:	add	r3, sp, #24
   11058:	add	r2, sp, #152	; 0x98
   1105c:	str	r1, [sp]
   11060:	mov	r1, #0
   11064:	str	r0, [sp, #4]
   11068:	str	ip, [sp, #156]	; 0x9c
   1106c:	str	r1, [r3, #4]!
   11070:	cmp	r3, r2
   11074:	bne	1106c <fputs@plt+0x7cb0>
   11078:	mov	r6, #0
   1107c:	movw	fp, #2608	; 0xa30
   11080:	movt	fp, #3
   11084:	mov	r7, r6
   11088:	ldr	r0, [pc, #504]	; 11288 <fputs@plt+0x7ecc>
   1108c:	mov	sl, #0
   11090:	bl	21274 <_ZdlPv@@Base+0x884>
   11094:	mov	r5, sl
   11098:	bl	f66c <fputs@plt+0x62b0>
   1109c:	cmn	r0, #1
   110a0:	mov	r4, r0
   110a4:	beq	1113c <fputs@plt+0x7d80>
   110a8:	cmp	sl, #0
   110ac:	cmpeq	r5, #0
   110b0:	ldr	r3, [fp, #24]
   110b4:	bne	110c4 <fputs@plt+0x7d08>
   110b8:	cmp	r0, #44	; 0x2c
   110bc:	cmpne	r0, #41	; 0x29
   110c0:	beq	111c8 <fputs@plt+0x7e0c>
   110c4:	ldr	r0, [fp, #28]
   110c8:	movw	r8, #2608	; 0xa30
   110cc:	uxtb	r9, r4
   110d0:	movt	r8, #3
   110d4:	cmp	r3, r0
   110d8:	blt	110e8 <fputs@plt+0x7d2c>
   110dc:	add	r0, r8, #20
   110e0:	bl	20e3c <_ZdlPv@@Base+0x44c>
   110e4:	ldr	r3, [r8, #24]
   110e8:	ldr	r1, [fp, #20]
   110ec:	cmp	sl, #1
   110f0:	add	r0, r3, #1
   110f4:	str	r0, [fp, #24]
   110f8:	strb	r9, [r1, r3]
   110fc:	beq	111ac <fputs@plt+0x7df0>
   11100:	cmp	sl, #2
   11104:	beq	111a4 <fputs@plt+0x7de8>
   11108:	cmp	sl, #0
   1110c:	bne	11098 <fputs@plt+0x7cdc>
   11110:	cmp	r4, #34	; 0x22
   11114:	beq	111a4 <fputs@plt+0x7de8>
   11118:	cmp	r4, #40	; 0x28
   1111c:	addeq	r5, r5, #1
   11120:	beq	11098 <fputs@plt+0x7cdc>
   11124:	cmp	r4, #41	; 0x29
   11128:	subeq	r5, r5, #1
   1112c:	bl	f66c <fputs@plt+0x62b0>
   11130:	cmn	r0, #1
   11134:	mov	r4, r0
   11138:	bne	110a8 <fputs@plt+0x7cec>
   1113c:	movw	r1, #13880	; 0x3638
   11140:	movt	r1, #3
   11144:	movw	r0, #20852	; 0x5174
   11148:	movt	r0, #2
   1114c:	mov	r2, r1
   11150:	mov	r3, r1
   11154:	bl	1024c <fputs@plt+0x6e90>
   11158:	mov	r0, #152	; 0x98
   1115c:	bl	209a0 <_Znwj@@Base>
   11160:	ldr	r1, [sp, #4]
   11164:	mov	r2, r7
   11168:	add	r3, sp, #28
   1116c:	mov	r4, r0
   11170:	bl	106e0 <fputs@plt+0x7324>
   11174:	ldr	r2, [sp]
   11178:	movw	r3, #2608	; 0xa30
   1117c:	movt	r3, #3
   11180:	ldr	r0, [sp, #156]	; 0x9c
   11184:	ldr	r1, [r2]
   11188:	ldr	r2, [r3]
   1118c:	cmp	r0, r1
   11190:	str	r4, [r3]
   11194:	str	r2, [r4, #4]
   11198:	bne	11278 <fputs@plt+0x7ebc>
   1119c:	add	sp, sp, #164	; 0xa4
   111a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111a4:	mov	sl, #1
   111a8:	b	11098 <fputs@plt+0x7cdc>
   111ac:	cmp	r4, #34	; 0x22
   111b0:	moveq	sl, #0
   111b4:	beq	11098 <fputs@plt+0x7cdc>
   111b8:	cmp	r4, #92	; 0x5c
   111bc:	movne	sl, #1
   111c0:	moveq	sl, #2
   111c4:	b	11098 <fputs@plt+0x7cdc>
   111c8:	cmp	r3, #0
   111cc:	movw	r5, #2608	; 0xa30
   111d0:	movt	r5, #3
   111d4:	ble	1123c <fputs@plt+0x7e80>
   111d8:	ldr	r2, [r5, #28]
   111dc:	cmp	r3, r2
   111e0:	blt	111f0 <fputs@plt+0x7e34>
   111e4:	add	r0, r5, #20
   111e8:	bl	20e3c <_ZdlPv@@Base+0x44c>
   111ec:	ldr	r3, [r5, #24]
   111f0:	ldr	r2, [fp, #20]
   111f4:	cmp	r6, #0
   111f8:	add	r1, r3, #1
   111fc:	str	r1, [fp, #24]
   11200:	mov	r1, #0
   11204:	strb	r1, [r2, r3]
   11208:	bne	11230 <fputs@plt+0x7e74>
   1120c:	cmp	r7, #32
   11210:	beq	11248 <fputs@plt+0x7e8c>
   11214:	ldr	r0, [fp, #20]
   11218:	bl	214b4 <_ZdlPv@@Base+0xac4>
   1121c:	add	r2, sp, #160	; 0xa0
   11220:	add	r3, r2, r7, lsl #2
   11224:	str	r0, [r3, #-132]	; 0xffffff7c
   11228:	add	r7, r7, #1
   1122c:	mov	r6, #0
   11230:	cmp	r4, #41	; 0x29
   11234:	bne	11088 <fputs@plt+0x7ccc>
   11238:	b	11158 <fputs@plt+0x7d9c>
   1123c:	cmp	r6, #0
   11240:	beq	11228 <fputs@plt+0x7e6c>
   11244:	b	11230 <fputs@plt+0x7e74>
   11248:	mov	r1, r7
   1124c:	add	r0, sp, #8
   11250:	bl	1f290 <fputs@plt+0x15ed4>
   11254:	movw	r2, #13880	; 0x3638
   11258:	movt	r2, #3
   1125c:	add	r1, sp, #8
   11260:	movw	r0, #20896	; 0x51a0
   11264:	movt	r0, #2
   11268:	mov	r3, r2
   1126c:	mov	r6, #1
   11270:	bl	10f84 <fputs@plt+0x7bc8>
   11274:	b	11230 <fputs@plt+0x7e74>
   11278:	bl	92b4 <__stack_chk_fail@plt>
   1127c:	mov	r0, r4
   11280:	bl	209f0 <_ZdlPv@@Base>
   11284:	bl	9188 <__cxa_end_cleanup@plt>
   11288:	andeq	r0, r3, r4, asr #20
   1128c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11290:	vpush	{d8-d9}
   11294:	mov	r8, r0
   11298:	sub	sp, sp, #12
   1129c:	ldr	r0, [pc, #2552]	; 11c9c <fputs@plt+0x88e0>
   112a0:	bl	21274 <_ZdlPv@@Base+0x884>
   112a4:	movw	r4, #2608	; 0xa30
   112a8:	ldr	r9, [pc, #2528]	; 11c90 <fputs@plt+0x88d4>
   112ac:	movt	r4, #3
   112b0:	movw	r5, #1088	; 0x440
   112b4:	movw	r6, #13616	; 0x3530
   112b8:	movt	r5, #3
   112bc:	movt	r6, #3
   112c0:	mov	r7, r4
   112c4:	ldr	sl, [r4, #4]
   112c8:	bl	f66c <fputs@plt+0x62b0>
   112cc:	cmp	sl, #0
   112d0:	movw	sl, #2608	; 0xa30
   112d4:	movt	sl, #3
   112d8:	mov	r1, r0
   112dc:	beq	112ec <fputs@plt+0x7f30>
   112e0:	ldr	r3, [r5]
   112e4:	cmp	r0, r3
   112e8:	beq	1215c <fputs@plt+0x8da0>
   112ec:	add	r3, r1, #1
   112f0:	cmp	r3, #125	; 0x7d
   112f4:	ldrls	pc, [pc, r3, lsl #2]
   112f8:	b	119a8 <fputs@plt+0x85ec>
   112fc:	andeq	r1, r1, r0, lsr #10
   11300:	andeq	r1, r1, r8, lsr #19
   11304:	andeq	r1, r1, r8, lsr #19
   11308:	andeq	r1, r1, r8, lsr #19
   1130c:	andeq	r1, r1, r8, lsr #19
   11310:	andeq	r1, r1, r8, lsr #19
   11314:	andeq	r1, r1, r8, lsr #19
   11318:	andeq	r1, r1, r8, lsr #19
   1131c:	andeq	r1, r1, r8, lsr #19
   11320:	andeq	r1, r1, r8, lsr #19
   11324:	andeq	r1, r1, r4, asr #5
   11328:	andeq	r1, r1, r8, lsr #19
   1132c:	andeq	r1, r1, r8, lsr #19
   11330:	andeq	r1, r1, r8, lsr #19
   11334:	andeq	r1, r1, r8, lsr #19
   11338:	andeq	r1, r1, r8, lsr #19
   1133c:	andeq	r1, r1, r8, lsr #19
   11340:	andeq	r1, r1, r8, lsr #19
   11344:	andeq	r1, r1, r8, lsr #19
   11348:	andeq	r1, r1, r8, lsr #19
   1134c:	andeq	r1, r1, r8, lsr #19
   11350:	andeq	r1, r1, r8, lsr #19
   11354:	andeq	r1, r1, r8, lsr #19
   11358:	andeq	r1, r1, r8, lsr #19
   1135c:	andeq	r1, r1, r8, lsr #19
   11360:	andeq	r1, r1, r8, lsr #19
   11364:	andeq	r1, r1, r8, lsr #19
   11368:	andeq	r1, r1, r8, lsr #19
   1136c:	andeq	r1, r1, r8, lsr #19
   11370:	andeq	r1, r1, r8, lsr #19
   11374:	andeq	r1, r1, r8, lsr #19
   11378:	andeq	r1, r1, r8, lsr #19
   1137c:	andeq	r1, r1, r8, lsr #19
   11380:	andeq	r1, r1, r4, asr #5
   11384:	andeq	r1, r1, r4, lsr r5
   11388:	andeq	r1, r1, r8, asr r5
   1138c:	strdeq	r1, [r1], -r4
   11390:	andeq	r1, r1, r8, lsr #19
   11394:	andeq	r1, r1, r8, lsr #19
   11398:	andeq	r1, r1, r0, ror r6
   1139c:	muleq	r1, r4, r6
   113a0:	andeq	r1, r1, r8, lsr #19
   113a4:	andeq	r1, r1, r8, lsr #19
   113a8:	andeq	r1, r1, r8, lsr #19
   113ac:	andeq	r1, r1, r8, lsr #19
   113b0:	andeq	r1, r1, r8, lsr #19
   113b4:			; <UNDEFINED> instruction: 0x000116bc
   113b8:	andeq	r1, r1, r0, ror #13
   113bc:	andeq	r1, r1, r8, lsr #19
   113c0:	andeq	r1, r1, r0, asr #15
   113c4:	andeq	r1, r1, r0, asr #15
   113c8:	andeq	r1, r1, r0, asr #15
   113cc:	andeq	r1, r1, r0, asr #15
   113d0:	andeq	r1, r1, r0, asr #15
   113d4:	andeq	r1, r1, r0, asr #15
   113d8:	andeq	r1, r1, r0, asr #15
   113dc:	andeq	r1, r1, r0, asr #15
   113e0:	andeq	r1, r1, r0, asr #15
   113e4:	andeq	r1, r1, r0, asr #15
   113e8:	andeq	r1, r1, r8, lsr #19
   113ec:	andeq	r1, r1, r8, lsr #19
   113f0:	strdeq	r1, [r1], -ip
   113f4:	andeq	r1, r1, r8, lsr #18
   113f8:	andeq	r1, r1, ip, asr #18
   113fc:	andeq	r1, r1, r8, lsr #19
   11400:	andeq	r1, r1, r8, lsr #19
   11404:	andeq	r1, r1, r8, lsr #19
   11408:	andeq	r1, r1, r8, lsr #19
   1140c:	andeq	r1, r1, r8, lsr #19
   11410:	andeq	r1, r1, r8, lsr #19
   11414:	andeq	r1, r1, r8, lsr #19
   11418:	andeq	r1, r1, r8, lsr #19
   1141c:	andeq	r1, r1, r8, lsr #19
   11420:	andeq	r1, r1, r8, lsr #19
   11424:	andeq	r1, r1, r8, lsr #19
   11428:	andeq	r1, r1, r8, lsr #19
   1142c:	andeq	r1, r1, r8, lsr #19
   11430:	andeq	r1, r1, r8, lsr #19
   11434:	andeq	r1, r1, r8, lsr #19
   11438:	andeq	r1, r1, r8, lsr #19
   1143c:	andeq	r1, r1, r8, lsr #19
   11440:	andeq	r1, r1, r8, lsr #19
   11444:	andeq	r1, r1, r8, lsr #19
   11448:	andeq	r1, r1, r8, lsr #19
   1144c:	andeq	r1, r1, r8, lsr #19
   11450:	andeq	r1, r1, r8, lsr #19
   11454:	andeq	r1, r1, r8, lsr #19
   11458:	andeq	r1, r1, r8, lsr #19
   1145c:	andeq	r1, r1, r8, lsr #19
   11460:	andeq	r1, r1, r8, lsr #19
   11464:	andeq	r1, r1, r8, lsr #19
   11468:	andeq	r1, r1, r8, lsr #19
   1146c:	andeq	r1, r1, r8, lsr #19
   11470:	andeq	r1, r1, r0, ror r9
   11474:	andeq	r1, r1, r8, lsr #19
   11478:	andeq	r1, r1, r8, lsr #19
   1147c:	andeq	r1, r1, r8, lsr #19
   11480:	andeq	r1, r1, r8, lsr #19
   11484:	andeq	r1, r1, r8, lsr #19
   11488:	andeq	r1, r1, r8, lsr #19
   1148c:	andeq	r1, r1, r8, lsr #19
   11490:	andeq	r1, r1, r8, lsr #19
   11494:	andeq	r1, r1, r8, lsr #19
   11498:	andeq	r1, r1, r8, lsr #19
   1149c:	andeq	r1, r1, r8, lsr #19
   114a0:	andeq	r1, r1, r8, lsr #19
   114a4:	andeq	r1, r1, r8, lsr #19
   114a8:	andeq	r1, r1, r8, lsr #19
   114ac:	andeq	r1, r1, r8, lsr #19
   114b0:	andeq	r1, r1, r8, lsr #19
   114b4:	andeq	r1, r1, r8, lsr #19
   114b8:	andeq	r1, r1, r8, lsr #19
   114bc:	andeq	r1, r1, r8, lsr #19
   114c0:	andeq	r1, r1, r8, lsr #19
   114c4:	andeq	r1, r1, r8, lsr #19
   114c8:	andeq	r1, r1, r8, lsr #19
   114cc:	andeq	r1, r1, r8, lsr #19
   114d0:	andeq	r1, r1, r8, lsr #19
   114d4:	andeq	r1, r1, r8, lsr #19
   114d8:	andeq	r1, r1, r8, lsr #19
   114dc:	andeq	r1, r1, r8, lsr #19
   114e0:	andeq	r1, r1, r8, lsr #19
   114e4:	andeq	r1, r1, r8, lsr #19
   114e8:	andeq	r1, r1, r8, lsr #19
   114ec:	andeq	r1, r1, r8, lsr #19
   114f0:	andeq	r1, r1, r4, lsl #19
   114f4:	bl	f66c <fputs@plt+0x62b0>
   114f8:	cmp	r0, #10
   114fc:	cmnne	r0, #1
   11500:	mov	sl, r0
   11504:	bne	114f4 <fputs@plt+0x8138>
   11508:	cmp	r0, #10
   1150c:	bne	11524 <fputs@plt+0x8168>
   11510:	mov	r1, sl
   11514:	ldr	r0, [pc, #1920]	; 11c9c <fputs@plt+0x88e0>
   11518:	bl	20dc4 <_ZdlPv@@Base+0x3d4>
   1151c:	b	11524 <fputs@plt+0x8168>
   11520:	mvn	sl, #0
   11524:	mov	r0, sl
   11528:	add	sp, sp, #12
   1152c:	vpop	{d8-d9}
   11530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11534:	bl	f700 <fputs@plt+0x6344>
   11538:	cmp	r0, #61	; 0x3d
   1153c:	beq	12040 <fputs@plt+0x8c84>
   11540:	movw	r1, #20996	; 0x5204
   11544:	ldr	r0, [pc, #1872]	; 11c9c <fputs@plt+0x88e0>
   11548:	movt	r1, #2
   1154c:	mov	sl, #33	; 0x21
   11550:	bl	20d50 <_ZdlPv@@Base+0x360>
   11554:	b	11524 <fputs@plt+0x8168>
   11558:	mov	r1, #34	; 0x22
   1155c:	ldr	r0, [pc, #1848]	; 11c9c <fputs@plt+0x88e0>
   11560:	bl	20dc4 <_ZdlPv@@Base+0x3d4>
   11564:	ldr	r0, [pc, #1836]	; 11c98 <fputs@plt+0x88dc>
   11568:	bl	21274 <_ZdlPv@@Base+0x884>
   1156c:	movw	r6, #2608	; 0xa30
   11570:	movt	r6, #3
   11574:	mov	r7, #92	; 0x5c
   11578:	mov	r8, #34	; 0x22
   1157c:	bl	f66c <fputs@plt+0x62b0>
   11580:	cmp	r0, #92	; 0x5c
   11584:	beq	11608 <fputs@plt+0x824c>
   11588:	cmp	r0, #10
   1158c:	beq	11fbc <fputs@plt+0x8c00>
   11590:	cmn	r0, #1
   11594:	beq	11fe0 <fputs@plt+0x8c24>
   11598:	cmp	r0, #34	; 0x22
   1159c:	ldr	r3, [r4, #12]
   115a0:	beq	12004 <fputs@plt+0x8c48>
   115a4:	ldr	r2, [r4, #16]
   115a8:	uxtb	r5, r0
   115ac:	cmp	r3, r2
   115b0:	blt	115c0 <fputs@plt+0x8204>
   115b4:	ldr	r0, [pc, #1760]	; 11c9c <fputs@plt+0x88e0>
   115b8:	bl	20e3c <_ZdlPv@@Base+0x44c>
   115bc:	ldr	r3, [r6, #12]
   115c0:	ldr	r2, [r4, #8]
   115c4:	add	r1, r3, #1
   115c8:	str	r1, [r4, #12]
   115cc:	strb	r5, [r2, r3]
   115d0:	ldr	r3, [r4, #24]
   115d4:	ldr	r2, [r4, #28]
   115d8:	cmp	r3, r2
   115dc:	blt	115ec <fputs@plt+0x8230>
   115e0:	ldr	r0, [pc, #1712]	; 11c98 <fputs@plt+0x88dc>
   115e4:	bl	20e3c <_ZdlPv@@Base+0x44c>
   115e8:	ldr	r3, [r6, #24]
   115ec:	ldr	r2, [r4, #20]
   115f0:	add	r1, r3, #1
   115f4:	str	r1, [r4, #24]
   115f8:	strb	r5, [r2, r3]
   115fc:	bl	f66c <fputs@plt+0x62b0>
   11600:	cmp	r0, #92	; 0x5c
   11604:	bne	11588 <fputs@plt+0x81cc>
   11608:	ldr	r3, [r4, #12]
   1160c:	ldr	r2, [r4, #16]
   11610:	cmp	r3, r2
   11614:	blt	11624 <fputs@plt+0x8268>
   11618:	ldr	r0, [pc, #1660]	; 11c9c <fputs@plt+0x88e0>
   1161c:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11620:	ldr	r3, [r6, #12]
   11624:	ldr	r2, [r4, #8]
   11628:	add	r1, r3, #1
   1162c:	str	r1, [r4, #12]
   11630:	strb	r7, [r2, r3]
   11634:	bl	f700 <fputs@plt+0x6344>
   11638:	cmp	r0, #34	; 0x22
   1163c:	beq	11f5c <fputs@plt+0x8ba0>
   11640:	ldr	r3, [r6, #24]
   11644:	ldr	r2, [r6, #28]
   11648:	cmp	r3, r2
   1164c:	blt	1165c <fputs@plt+0x82a0>
   11650:	ldr	r0, [pc, #1600]	; 11c98 <fputs@plt+0x88dc>
   11654:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11658:	ldr	r3, [r6, #24]
   1165c:	ldr	r2, [r4, #20]
   11660:	add	r1, r3, #1
   11664:	str	r1, [r4, #24]
   11668:	strb	r7, [r2, r3]
   1166c:	b	1157c <fputs@plt+0x81c0>
   11670:	bl	f700 <fputs@plt+0x6344>
   11674:	cmp	r0, #38	; 0x26
   11678:	beq	1205c <fputs@plt+0x8ca0>
   1167c:	movw	r1, #21020	; 0x521c
   11680:	ldr	r0, [pc, #1556]	; 11c9c <fputs@plt+0x88e0>
   11684:	movt	r1, #2
   11688:	mov	sl, #38	; 0x26
   1168c:	bl	20d50 <_ZdlPv@@Base+0x360>
   11690:	b	11524 <fputs@plt+0x8168>
   11694:	bl	f700 <fputs@plt+0x6344>
   11698:	cmp	r0, #116	; 0x74
   1169c:	mov	r4, r0
   116a0:	beq	121fc <fputs@plt+0x8e40>
   116a4:	movw	r1, #19600	; 0x4c90
   116a8:	ldr	r0, [pc, #1516]	; 11c9c <fputs@plt+0x88e0>
   116ac:	movt	r1, #2
   116b0:	mov	sl, #39	; 0x27
   116b4:	bl	20d50 <_ZdlPv@@Base+0x360>
   116b8:	b	11524 <fputs@plt+0x8168>
   116bc:	bl	f700 <fputs@plt+0x6344>
   116c0:	cmp	r0, #62	; 0x3e
   116c4:	beq	12078 <fputs@plt+0x8cbc>
   116c8:	movw	r1, #20988	; 0x51fc
   116cc:	ldr	r0, [pc, #1480]	; 11c9c <fputs@plt+0x88e0>
   116d0:	movt	r1, #2
   116d4:	mov	sl, #45	; 0x2d
   116d8:	bl	20d50 <_ZdlPv@@Base+0x360>
   116dc:	b	11524 <fputs@plt+0x8168>
   116e0:	bl	f700 <fputs@plt+0x6344>
   116e4:	cmn	r0, #1
   116e8:	beq	11c44 <fputs@plt+0x8888>
   116ec:	movw	r3, #11568	; 0x2d30
   116f0:	uxtb	r2, r0
   116f4:	movt	r3, #3
   116f8:	ldrb	r3, [r3, r2]
   116fc:	cmp	r3, #0
   11700:	beq	11c44 <fputs@plt+0x8888>
   11704:	ldr	r0, [pc, #1424]	; 11c9c <fputs@plt+0x88e0>
   11708:	mov	r1, #46	; 0x2e
   1170c:	mov	r2, #0
   11710:	mov	r3, #0
   11714:	strd	r2, [r4, #48]	; 0x30
   11718:	bl	20dc4 <_ZdlPv@@Base+0x3d4>
   1171c:	vmov.f64	d8, #112	; 0x3f800000  1.0
   11720:	movw	r7, #11568	; 0x2d30
   11724:	movw	r6, #2608	; 0xa30
   11728:	movt	r7, #3
   1172c:	movt	r6, #3
   11730:	vmov.f64	d9, #36	; 0x41200000  10.0
   11734:	bl	f700 <fputs@plt+0x6344>
   11738:	cmn	r0, #1
   1173c:	mov	r5, r0
   11740:	beq	117b8 <fputs@plt+0x83fc>
   11744:	uxtb	fp, r0
   11748:	ldrb	r3, [r7, fp]
   1174c:	cmp	r3, #0
   11750:	beq	11f08 <fputs@plt+0x8b4c>
   11754:	bl	f66c <fputs@plt+0x62b0>
   11758:	ldr	r3, [r4, #12]
   1175c:	ldr	r2, [r4, #16]
   11760:	cmp	r3, r2
   11764:	blt	11774 <fputs@plt+0x83b8>
   11768:	ldr	r0, [pc, #1324]	; 11c9c <fputs@plt+0x88e0>
   1176c:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11770:	ldr	r3, [r6, #12]
   11774:	ldr	r2, [r4, #8]
   11778:	cmp	r5, #48	; 0x30
   1177c:	add	r1, r3, #1
   11780:	vdiv.f64	d8, d8, d9
   11784:	str	r1, [r4, #12]
   11788:	strb	fp, [r2, r3]
   1178c:	beq	11734 <fputs@plt+0x8378>
   11790:	sub	r5, r5, #48	; 0x30
   11794:	vldr	d7, [r6, #48]	; 0x30
   11798:	vmov	s11, r5
   1179c:	vcvt.f64.s32	d6, s11
   117a0:	vmla.f64	d7, d6, d8
   117a4:	vstr	d7, [r6, #48]	; 0x30
   117a8:	bl	f700 <fputs@plt+0x6344>
   117ac:	cmn	r0, #1
   117b0:	mov	r5, r0
   117b4:	bne	11744 <fputs@plt+0x8388>
   117b8:	mov	sl, #260	; 0x104
   117bc:	b	11524 <fputs@plt+0x8168>
   117c0:	movw	sl, #2608	; 0xa30
   117c4:	movw	r8, #11568	; 0x2d30
   117c8:	movw	r9, #52427	; 0xcccb
   117cc:	movt	sl, #3
   117d0:	movt	r8, #3
   117d4:	movt	r9, #3276	; 0xccc
   117d8:	mov	r6, #0
   117dc:	ldr	r3, [r4, #12]
   117e0:	add	r6, r6, r6, lsl #2
   117e4:	ldr	r2, [r4, #16]
   117e8:	sub	r0, r1, #48	; 0x30
   117ec:	add	r6, r0, r6, lsl #1
   117f0:	uxtb	r5, r1
   117f4:	cmp	r3, r2
   117f8:	blt	11808 <fputs@plt+0x844c>
   117fc:	ldr	r0, [pc, #1176]	; 11c9c <fputs@plt+0x88e0>
   11800:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11804:	ldr	r3, [sl, #12]
   11808:	ldr	r2, [r4, #8]
   1180c:	add	r1, r3, #1
   11810:	str	r1, [r4, #12]
   11814:	strb	r5, [r2, r3]
   11818:	bl	f700 <fputs@plt+0x6344>
   1181c:	cmn	r0, #1
   11820:	mov	r5, r0
   11824:	beq	11b0c <fputs@plt+0x8750>
   11828:	uxtb	fp, r0
   1182c:	movw	r7, #11568	; 0x2d30
   11830:	movt	r7, #3
   11834:	ldrb	r3, [r8, fp]
   11838:	cmp	r3, #0
   1183c:	beq	11b0c <fputs@plt+0x8750>
   11840:	bl	f66c <fputs@plt+0x62b0>
   11844:	cmp	r6, r9
   11848:	mov	r1, r0
   1184c:	ble	117dc <fputs@plt+0x8420>
   11850:	vmov	s15, r6
   11854:	movw	r8, #2608	; 0xa30
   11858:	vmov.f64	d8, #36	; 0x41200000  10.0
   1185c:	movt	r8, #3
   11860:	vcvt.f64.s32	d6, s15
   11864:	b	11884 <fputs@plt+0x84c8>
   11868:	uxtb	fp, r0
   1186c:	ldrb	r3, [r7, fp]
   11870:	cmp	r3, #0
   11874:	beq	118d8 <fputs@plt+0x851c>
   11878:	bl	f66c <fputs@plt+0x62b0>
   1187c:	vldr	d6, [r8, #48]	; 0x30
   11880:	mov	r1, r0
   11884:	sub	r2, r1, #48	; 0x30
   11888:	ldr	r3, [r4, #12]
   1188c:	uxtb	r5, r1
   11890:	vmov	s14, r2
   11894:	ldr	r2, [r4, #16]
   11898:	vcvt.f64.s32	d7, s14
   1189c:	cmp	r3, r2
   118a0:	vmla.f64	d7, d6, d8
   118a4:	vstr	d7, [r4, #48]	; 0x30
   118a8:	blt	118b8 <fputs@plt+0x84fc>
   118ac:	ldr	r0, [pc, #1000]	; 11c9c <fputs@plt+0x88e0>
   118b0:	bl	20e3c <_ZdlPv@@Base+0x44c>
   118b4:	ldr	r3, [r8, #12]
   118b8:	ldr	r2, [r4, #8]
   118bc:	add	r1, r3, #1
   118c0:	str	r1, [r4, #12]
   118c4:	strb	r5, [r2, r3]
   118c8:	bl	f700 <fputs@plt+0x6344>
   118cc:	cmn	r0, #1
   118d0:	mov	r5, r0
   118d4:	bne	11868 <fputs@plt+0x84ac>
   118d8:	vldr	d7, [r4, #48]	; 0x30
   118dc:	vldr	d6, [pc, #932]	; 11c88 <fputs@plt+0x88cc>
   118e0:	vcmpe.f64	d7, d6
   118e4:	vmrs	APSR_nzcv, fpscr
   118e8:	mvngt	r6, #-2147483648	; 0x80000000
   118ec:	bgt	11b18 <fputs@plt+0x875c>
   118f0:	vcvt.s32.f64	s11, d7
   118f4:	vmov	r6, s11
   118f8:	b	11b18 <fputs@plt+0x875c>
   118fc:	bl	f700 <fputs@plt+0x6344>
   11900:	cmp	r0, #45	; 0x2d
   11904:	beq	122c4 <fputs@plt+0x8f08>
   11908:	cmp	r0, #61	; 0x3d
   1190c:	beq	11c6c <fputs@plt+0x88b0>
   11910:	movw	r1, #20980	; 0x51f4
   11914:	ldr	r0, [pc, #896]	; 11c9c <fputs@plt+0x88e0>
   11918:	movt	r1, #2
   1191c:	mov	sl, #60	; 0x3c
   11920:	bl	20d50 <_ZdlPv@@Base+0x360>
   11924:	b	11524 <fputs@plt+0x8168>
   11928:	bl	f700 <fputs@plt+0x6344>
   1192c:	cmp	r0, #61	; 0x3d
   11930:	beq	120cc <fputs@plt+0x8d10>
   11934:	movw	r1, #21012	; 0x5214
   11938:	ldr	r0, [pc, #860]	; 11c9c <fputs@plt+0x88e0>
   1193c:	movt	r1, #2
   11940:	mov	sl, #61	; 0x3d
   11944:	bl	20d50 <_ZdlPv@@Base+0x360>
   11948:	b	11524 <fputs@plt+0x8168>
   1194c:	bl	f700 <fputs@plt+0x6344>
   11950:	cmp	r0, #61	; 0x3d
   11954:	beq	120b0 <fputs@plt+0x8cf4>
   11958:	movw	r1, #21004	; 0x520c
   1195c:	ldr	r0, [pc, #824]	; 11c9c <fputs@plt+0x88e0>
   11960:	movt	r1, #2
   11964:	mov	sl, #62	; 0x3e
   11968:	bl	20d50 <_ZdlPv@@Base+0x360>
   1196c:	b	11524 <fputs@plt+0x8168>
   11970:	bl	f700 <fputs@plt+0x6344>
   11974:	cmp	r0, #10
   11978:	bne	12420 <fputs@plt+0x9064>
   1197c:	bl	f66c <fputs@plt+0x62b0>
   11980:	b	112c4 <fputs@plt+0x7f08>
   11984:	bl	f700 <fputs@plt+0x6344>
   11988:	cmp	r0, #124	; 0x7c
   1198c:	beq	12094 <fputs@plt+0x8cd8>
   11990:	movw	r1, #21028	; 0x5224
   11994:	ldr	r0, [pc, #768]	; 11c9c <fputs@plt+0x88e0>
   11998:	movt	r1, #2
   1199c:	mov	sl, #124	; 0x7c
   119a0:	bl	20d50 <_ZdlPv@@Base+0x360>
   119a4:	b	11524 <fputs@plt+0x8168>
   119a8:	cmn	r1, #1
   119ac:	beq	11c54 <fputs@plt+0x8898>
   119b0:	uxtb	fp, r1
   119b4:	ldrb	r3, [r6, fp]
   119b8:	mov	sl, fp
   119bc:	cmp	r3, #0
   119c0:	beq	11c5c <fputs@plt+0x88a0>
   119c4:	ldr	r0, [pc, #716]	; 11c98 <fputs@plt+0x88dc>
   119c8:	movw	sl, #12592	; 0x3130
   119cc:	bl	21274 <_ZdlPv@@Base+0x884>
   119d0:	mov	r1, fp
   119d4:	ldr	r0, [pc, #700]	; 11c98 <fputs@plt+0x88dc>
   119d8:	movt	sl, #3
   119dc:	bl	20dc4 <_ZdlPv@@Base+0x3d4>
   119e0:	b	11a2c <fputs@plt+0x8670>
   119e4:	uxtb	fp, r0
   119e8:	ldrb	r2, [sl, fp]
   119ec:	cmp	r2, #0
   119f0:	bne	119fc <fputs@plt+0x8640>
   119f4:	cmp	r0, #95	; 0x5f
   119f8:	bne	11a3c <fputs@plt+0x8680>
   119fc:	bl	f66c <fputs@plt+0x62b0>
   11a00:	ldr	r3, [r4, #24]
   11a04:	ldr	r2, [r4, #28]
   11a08:	cmp	r3, r2
   11a0c:	blt	11a1c <fputs@plt+0x8660>
   11a10:	ldr	r0, [pc, #640]	; 11c98 <fputs@plt+0x88dc>
   11a14:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11a18:	ldr	r3, [r7, #24]
   11a1c:	ldr	r2, [r4, #20]
   11a20:	add	r1, r3, #1
   11a24:	str	r1, [r4, #24]
   11a28:	strb	fp, [r2, r3]
   11a2c:	bl	f700 <fputs@plt+0x6344>
   11a30:	cmn	r0, #1
   11a34:	mov	r3, r0
   11a38:	bne	119e4 <fputs@plt+0x8628>
   11a3c:	ldr	sl, [r4, #20]
   11a40:	ldr	fp, [r4, #24]
   11a44:	str	r3, [sp, #4]
   11a48:	mov	r0, sl
   11a4c:	mov	r1, fp
   11a50:	bl	f820 <fputs@plt+0x6464>
   11a54:	ldr	r3, [sp, #4]
   11a58:	subs	r2, r0, #0
   11a5c:	bne	1240c <fputs@plt+0x9050>
   11a60:	cmp	r8, #0
   11a64:	beq	120f8 <fputs@plt+0x8d3c>
   11a68:	ldr	r2, [r7, #28]
   11a6c:	cmp	fp, r2
   11a70:	blt	11a8c <fputs@plt+0x86d0>
   11a74:	ldr	r0, [pc, #540]	; 11c98 <fputs@plt+0x88dc>
   11a78:	str	r3, [sp, #4]
   11a7c:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11a80:	ldr	sl, [r7, #20]
   11a84:	ldr	fp, [r7, #24]
   11a88:	ldr	r3, [sp, #4]
   11a8c:	add	r2, fp, #1
   11a90:	ldr	r0, [pc, #508]	; 11c94 <fputs@plt+0x88d8>
   11a94:	str	r2, [r4, #24]
   11a98:	mov	r2, #0
   11a9c:	strb	r2, [sl, fp]
   11aa0:	ldr	r1, [r4, #20]
   11aa4:	str	r3, [sp, #4]
   11aa8:	bl	f384 <fputs@plt+0x5fc8>
   11aac:	ldr	r1, [r4, #24]
   11ab0:	sub	r1, r1, #1
   11ab4:	mov	fp, r0
   11ab8:	ldr	r0, [pc, #472]	; 11c98 <fputs@plt+0x88dc>
   11abc:	bl	2121c <_ZdlPv@@Base+0x82c>
   11ac0:	cmp	fp, #0
   11ac4:	ldr	r3, [sp, #4]
   11ac8:	beq	120f8 <fputs@plt+0x8d3c>
   11acc:	cmp	r3, #40	; 0x28
   11ad0:	beq	1214c <fputs@plt+0x8d90>
   11ad4:	mov	r0, #16
   11ad8:	bl	209a0 <_Znwj@@Base>
   11adc:	mov	r3, #0
   11ae0:	mov	sl, r0
   11ae4:	str	r3, [r0, #4]
   11ae8:	mov	r0, fp
   11aec:	str	r9, [sl]
   11af0:	bl	214b4 <_ZdlPv@@Base+0xac4>
   11af4:	ldr	r3, [r4]
   11af8:	str	r0, [sl, #8]
   11afc:	str	r0, [sl, #12]
   11b00:	str	sl, [r4]
   11b04:	str	r3, [sl, #4]
   11b08:	b	112c4 <fputs@plt+0x7f08>
   11b0c:	vmov	s11, r6
   11b10:	vcvt.f64.s32	d7, s11
   11b14:	vstr	d7, [r4, #48]	; 0x30
   11b18:	sub	r3, r5, #46	; 0x2e
   11b1c:	cmp	r3, #70	; 0x46
   11b20:	ldrls	pc, [pc, r3, lsl #2]
   11b24:	b	117b8 <fputs@plt+0x83fc>
   11b28:	strdeq	r1, [r1], -r4
   11b2c:			; <UNDEFINED> instruction: 0x000117b8
   11b30:			; <UNDEFINED> instruction: 0x000117b8
   11b34:			; <UNDEFINED> instruction: 0x000117b8
   11b38:			; <UNDEFINED> instruction: 0x000117b8
   11b3c:			; <UNDEFINED> instruction: 0x000117b8
   11b40:			; <UNDEFINED> instruction: 0x000117b8
   11b44:			; <UNDEFINED> instruction: 0x000117b8
   11b48:			; <UNDEFINED> instruction: 0x000117b8
   11b4c:			; <UNDEFINED> instruction: 0x000117b8
   11b50:			; <UNDEFINED> instruction: 0x000117b8
   11b54:			; <UNDEFINED> instruction: 0x000117b8
   11b58:			; <UNDEFINED> instruction: 0x000117b8
   11b5c:			; <UNDEFINED> instruction: 0x000117b8
   11b60:			; <UNDEFINED> instruction: 0x000117b8
   11b64:			; <UNDEFINED> instruction: 0x000117b8
   11b68:			; <UNDEFINED> instruction: 0x000117b8
   11b6c:			; <UNDEFINED> instruction: 0x000117b8
   11b70:			; <UNDEFINED> instruction: 0x000117b8
   11b74:			; <UNDEFINED> instruction: 0x000117b8
   11b78:			; <UNDEFINED> instruction: 0x000117b8
   11b7c:			; <UNDEFINED> instruction: 0x000117b8
   11b80:			; <UNDEFINED> instruction: 0x000117b8
   11b84:	andeq	r1, r1, r4, lsr #25
   11b88:			; <UNDEFINED> instruction: 0x000117b8
   11b8c:			; <UNDEFINED> instruction: 0x000117b8
   11b90:			; <UNDEFINED> instruction: 0x000117b8
   11b94:	andeq	r1, r1, r4, asr #29
   11b98:			; <UNDEFINED> instruction: 0x000117b8
   11b9c:			; <UNDEFINED> instruction: 0x000117b8
   11ba0:			; <UNDEFINED> instruction: 0x000117b8
   11ba4:			; <UNDEFINED> instruction: 0x000117b8
   11ba8:			; <UNDEFINED> instruction: 0x000117b8
   11bac:			; <UNDEFINED> instruction: 0x000117b8
   11bb0:			; <UNDEFINED> instruction: 0x000117b8
   11bb4:			; <UNDEFINED> instruction: 0x000117b8
   11bb8:			; <UNDEFINED> instruction: 0x000117b8
   11bbc:			; <UNDEFINED> instruction: 0x000117b8
   11bc0:			; <UNDEFINED> instruction: 0x000117b8
   11bc4:			; <UNDEFINED> instruction: 0x000117b8
   11bc8:			; <UNDEFINED> instruction: 0x000117b8
   11bcc:			; <UNDEFINED> instruction: 0x000117b8
   11bd0:			; <UNDEFINED> instruction: 0x000117b8
   11bd4:			; <UNDEFINED> instruction: 0x000117b8
   11bd8:			; <UNDEFINED> instruction: 0x000117b8
   11bdc:			; <UNDEFINED> instruction: 0x000117b8
   11be0:			; <UNDEFINED> instruction: 0x000117b8
   11be4:			; <UNDEFINED> instruction: 0x000117b8
   11be8:			; <UNDEFINED> instruction: 0x000117b8
   11bec:			; <UNDEFINED> instruction: 0x000117b8
   11bf0:			; <UNDEFINED> instruction: 0x000117b8
   11bf4:			; <UNDEFINED> instruction: 0x000117b8
   11bf8:			; <UNDEFINED> instruction: 0x000117b8
   11bfc:			; <UNDEFINED> instruction: 0x000117b8
   11c00:			; <UNDEFINED> instruction: 0x000117b8
   11c04:	andeq	r1, r1, r4, lsr #25
   11c08:			; <UNDEFINED> instruction: 0x000117b8
   11c0c:			; <UNDEFINED> instruction: 0x000117b8
   11c10:			; <UNDEFINED> instruction: 0x000117b8
   11c14:	andeq	r1, r1, r4, asr #29
   11c18:			; <UNDEFINED> instruction: 0x000117b8
   11c1c:			; <UNDEFINED> instruction: 0x000117b8
   11c20:			; <UNDEFINED> instruction: 0x000117b8
   11c24:			; <UNDEFINED> instruction: 0x000117b8
   11c28:	andeq	r1, r1, ip, ror lr
   11c2c:			; <UNDEFINED> instruction: 0x000117b8
   11c30:			; <UNDEFINED> instruction: 0x000117b8
   11c34:			; <UNDEFINED> instruction: 0x000117b8
   11c38:	andeq	r1, r1, r0, lsr #29
   11c3c:	andeq	r1, r1, r8, asr lr
   11c40:	andeq	r1, r1, r4, lsr lr
   11c44:	add	sp, sp, #12
   11c48:	vpop	{d8-d9}
   11c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c50:	b	f8e0 <fputs@plt+0x6524>
   11c54:	mov	sl, #255	; 0xff
   11c58:	mov	fp, sl
   11c5c:	mov	r1, fp
   11c60:	ldr	r0, [pc, #52]	; 11c9c <fputs@plt+0x88e0>
   11c64:	bl	20dc4 <_ZdlPv@@Base+0x3d4>
   11c68:	b	11524 <fputs@plt+0x8168>
   11c6c:	bl	f66c <fputs@plt+0x62b0>
   11c70:	movw	r1, #20976	; 0x51f0
   11c74:	ldr	r0, [pc, #32]	; 11c9c <fputs@plt+0x88e0>
   11c78:	movt	r1, #2
   11c7c:	bl	20d50 <_ZdlPv@@Base+0x360>
   11c80:	movw	sl, #354	; 0x162
   11c84:	b	11524 <fputs@plt+0x8168>
   11c88:			; <UNDEFINED> instruction: 0xffc00000
   11c8c:	ldrshmi	pc, [pc, #255]	; 11d93 <fputs@plt+0x89d7>	; <UNPREDICTABLE>
   11c90:			; <UNDEFINED> instruction: 0x00024db8
   11c94:	andeq	r0, r3, r0, asr sl
   11c98:	andeq	r0, r3, r4, asr #20
   11c9c:	andeq	r0, r3, r8, lsr sl
   11ca0:	andeq	r4, r2, r8, ror sp
   11ca4:	uxtb	fp, r5
   11ca8:	bl	f66c <fputs@plt+0x62b0>
   11cac:	bl	f700 <fputs@plt+0x6344>
   11cb0:	cmp	r0, #43	; 0x2b
   11cb4:	cmpne	r0, #45	; 0x2d
   11cb8:	mov	r6, r0
   11cbc:	beq	1221c <fputs@plt+0x8e60>
   11cc0:	cmn	r0, #1
   11cc4:	beq	120e8 <fputs@plt+0x8d2c>
   11cc8:	movw	r7, #11568	; 0x2d30
   11ccc:	uxtb	r8, r0
   11cd0:	movt	r7, #3
   11cd4:	ldrb	r3, [r7, r8]
   11cd8:	cmp	r3, #0
   11cdc:	beq	120e8 <fputs@plt+0x8d2c>
   11ce0:	ldr	r3, [r4, #12]
   11ce4:	movw	r5, #2608	; 0xa30
   11ce8:	ldr	r2, [r4, #16]
   11cec:	movt	r5, #3
   11cf0:	cmp	r3, r2
   11cf4:	blt	11d04 <fputs@plt+0x8948>
   11cf8:	add	r0, r5, #8
   11cfc:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11d00:	ldr	r3, [r5, #12]
   11d04:	ldr	r2, [r4, #8]
   11d08:	mov	r9, #43	; 0x2b
   11d0c:	add	r1, r3, #1
   11d10:	str	r1, [r4, #12]
   11d14:	strb	fp, [r2, r3]
   11d18:	bl	f66c <fputs@plt+0x62b0>
   11d1c:	ldr	r3, [r4, #12]
   11d20:	ldr	r2, [r4, #16]
   11d24:	movw	r5, #2608	; 0xa30
   11d28:	movt	r5, #3
   11d2c:	cmp	r3, r2
   11d30:	blt	11d40 <fputs@plt+0x8984>
   11d34:	add	r0, r5, #8
   11d38:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11d3c:	ldr	r3, [r5, #12]
   11d40:	ldr	r2, [r4, #8]
   11d44:	movw	sl, #2608	; 0xa30
   11d48:	add	r1, r3, #1
   11d4c:	sub	r6, r6, #48	; 0x30
   11d50:	str	r1, [r4, #12]
   11d54:	movt	sl, #3
   11d58:	strb	r8, [r2, r3]
   11d5c:	b	11dac <fputs@plt+0x89f0>
   11d60:	uxtb	r8, r0
   11d64:	ldrb	r3, [r7, r8]
   11d68:	cmp	r3, #0
   11d6c:	beq	11dbc <fputs@plt+0x8a00>
   11d70:	bl	f66c <fputs@plt+0x62b0>
   11d74:	ldr	r3, [r4, #12]
   11d78:	ldr	r2, [r4, #16]
   11d7c:	cmp	r3, r2
   11d80:	blt	11d90 <fputs@plt+0x89d4>
   11d84:	ldr	r0, [pc, #-240]	; 11c9c <fputs@plt+0x88e0>
   11d88:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11d8c:	ldr	r3, [sl, #12]
   11d90:	add	r6, r6, r6, lsl #2
   11d94:	ldr	r2, [r4, #8]
   11d98:	sub	r5, r5, #48	; 0x30
   11d9c:	add	r1, r3, #1
   11da0:	add	r6, r5, r6, lsl #1
   11da4:	str	r1, [r4, #12]
   11da8:	strb	r8, [r2, r3]
   11dac:	bl	f700 <fputs@plt+0x6344>
   11db0:	cmn	r0, #1
   11db4:	mov	r5, r0
   11db8:	bne	11d60 <fputs@plt+0x89a4>
   11dbc:	cmp	r9, #45	; 0x2d
   11dc0:	beq	1234c <fputs@plt+0x8f90>
   11dc4:	bic	r3, r5, #32
   11dc8:	cmp	r3, #73	; 0x49
   11dcc:	beq	122ec <fputs@plt+0x8f30>
   11dd0:	vmov	s13, r6
   11dd4:	mov	sl, #260	; 0x104
   11dd8:	vmov.f64	d0, #36	; 0x41200000  10.0
   11ddc:	vcvt.f64.s32	d1, s13
   11de0:	bl	911c <pow@plt>
   11de4:	vldr	d7, [r4, #48]	; 0x30
   11de8:	vmul.f64	d0, d7, d0
   11dec:	vstr	d0, [r4, #48]	; 0x30
   11df0:	b	11524 <fputs@plt+0x8168>
   11df4:	ldr	r3, [r4, #12]
   11df8:	movw	r5, #2608	; 0xa30
   11dfc:	ldr	r2, [r4, #16]
   11e00:	movt	r5, #3
   11e04:	cmp	r3, r2
   11e08:	blt	11e18 <fputs@plt+0x8a5c>
   11e0c:	add	r0, r5, #8
   11e10:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11e14:	ldr	r3, [r5, #12]
   11e18:	ldr	r2, [r4, #8]
   11e1c:	add	r0, r3, #1
   11e20:	mov	r1, #46	; 0x2e
   11e24:	str	r0, [r4, #12]
   11e28:	strb	r1, [r2, r3]
   11e2c:	bl	f66c <fputs@plt+0x62b0>
   11e30:	b	1171c <fputs@plt+0x8360>
   11e34:	bl	f66c <fputs@plt+0x62b0>
   11e38:	bl	f700 <fputs@plt+0x6344>
   11e3c:	cmp	r0, #104	; 0x68
   11e40:	beq	123cc <fputs@plt+0x9010>
   11e44:	mov	r0, #116	; 0x74
   11e48:	mov	r1, #0
   11e4c:	bl	f788 <fputs@plt+0x63cc>
   11e50:	mov	sl, #260	; 0x104
   11e54:	b	11524 <fputs@plt+0x8168>
   11e58:	bl	f66c <fputs@plt+0x62b0>
   11e5c:	bl	f700 <fputs@plt+0x6344>
   11e60:	cmp	r0, #116	; 0x74
   11e64:	beq	1238c <fputs@plt+0x8fd0>
   11e68:	mov	r0, #115	; 0x73
   11e6c:	mov	r1, #0
   11e70:	bl	f788 <fputs@plt+0x63cc>
   11e74:	mov	sl, #260	; 0x104
   11e78:	b	11524 <fputs@plt+0x8168>
   11e7c:	bl	f66c <fputs@plt+0x62b0>
   11e80:	bl	f700 <fputs@plt+0x6344>
   11e84:	cmp	r0, #100	; 0x64
   11e88:	beq	123ec <fputs@plt+0x9030>
   11e8c:	mov	r0, #110	; 0x6e
   11e90:	mov	r1, #0
   11e94:	bl	f788 <fputs@plt+0x63cc>
   11e98:	mov	sl, #260	; 0x104
   11e9c:	b	11524 <fputs@plt+0x8168>
   11ea0:	bl	f66c <fputs@plt+0x62b0>
   11ea4:	bl	f700 <fputs@plt+0x6344>
   11ea8:	cmp	r0, #100	; 0x64
   11eac:	beq	123ac <fputs@plt+0x8ff0>
   11eb0:	mov	r0, #114	; 0x72
   11eb4:	mov	r1, #0
   11eb8:	bl	f788 <fputs@plt+0x63cc>
   11ebc:	mov	sl, #260	; 0x104
   11ec0:	b	11524 <fputs@plt+0x8168>
   11ec4:	ldr	r3, [r4, #12]
   11ec8:	movw	r6, #2608	; 0xa30
   11ecc:	ldr	r2, [r4, #16]
   11ed0:	uxtb	r5, r5
   11ed4:	movt	r6, #3
   11ed8:	cmp	r3, r2
   11edc:	blt	11eec <fputs@plt+0x8b30>
   11ee0:	add	r0, r6, #8
   11ee4:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11ee8:	ldr	r3, [r6, #12]
   11eec:	ldr	r2, [r4, #8]
   11ef0:	add	r1, r3, #1
   11ef4:	str	r1, [r4, #12]
   11ef8:	mov	sl, #260	; 0x104
   11efc:	strb	r5, [r2, r3]
   11f00:	bl	f66c <fputs@plt+0x62b0>
   11f04:	b	11524 <fputs@plt+0x8168>
   11f08:	bic	r5, r0, #32
   11f0c:	cmp	r5, #69	; 0x45
   11f10:	beq	11ca8 <fputs@plt+0x88ec>
   11f14:	cmp	r5, #73	; 0x49
   11f18:	bne	117b8 <fputs@plt+0x83fc>
   11f1c:	ldr	r3, [r4, #12]
   11f20:	movw	r5, #2608	; 0xa30
   11f24:	ldr	r2, [r4, #16]
   11f28:	movt	r5, #3
   11f2c:	cmp	r3, r2
   11f30:	blt	11f40 <fputs@plt+0x8b84>
   11f34:	add	r0, r5, #8
   11f38:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11f3c:	ldr	r3, [r5, #12]
   11f40:	ldr	r2, [r4, #8]
   11f44:	add	r1, r3, #1
   11f48:	str	r1, [r4, #12]
   11f4c:	mov	sl, #260	; 0x104
   11f50:	strb	fp, [r2, r3]
   11f54:	bl	f66c <fputs@plt+0x62b0>
   11f58:	b	11524 <fputs@plt+0x8168>
   11f5c:	bl	f66c <fputs@plt+0x62b0>
   11f60:	ldr	r3, [r6, #24]
   11f64:	ldr	r2, [r6, #28]
   11f68:	cmp	r3, r2
   11f6c:	blt	11f7c <fputs@plt+0x8bc0>
   11f70:	ldr	r0, [pc, #-736]	; 11c98 <fputs@plt+0x88dc>
   11f74:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11f78:	ldr	r3, [r6, #24]
   11f7c:	ldr	r2, [r4, #20]
   11f80:	add	r1, r3, #1
   11f84:	str	r1, [r4, #24]
   11f88:	strb	r8, [r2, r3]
   11f8c:	ldr	r3, [r4, #12]
   11f90:	ldr	r2, [r4, #16]
   11f94:	cmp	r3, r2
   11f98:	blt	11fa8 <fputs@plt+0x8bec>
   11f9c:	ldr	r0, [pc, #-776]	; 11c9c <fputs@plt+0x88e0>
   11fa0:	bl	20e3c <_ZdlPv@@Base+0x44c>
   11fa4:	ldr	r3, [r6, #12]
   11fa8:	ldr	r2, [r4, #8]
   11fac:	add	r1, r3, #1
   11fb0:	str	r1, [r4, #12]
   11fb4:	strb	r8, [r2, r3]
   11fb8:	b	1157c <fputs@plt+0x81c0>
   11fbc:	movw	r1, #13880	; 0x3638
   11fc0:	movt	r1, #3
   11fc4:	movw	r0, #20932	; 0x51c4
   11fc8:	movt	r0, #2
   11fcc:	mov	r2, r1
   11fd0:	mov	r3, r1
   11fd4:	bl	1f708 <fputs@plt+0x1634c>
   11fd8:	movw	sl, #261	; 0x105
   11fdc:	b	11524 <fputs@plt+0x8168>
   11fe0:	movw	r1, #13880	; 0x3638
   11fe4:	movt	r1, #3
   11fe8:	movw	r0, #20952	; 0x51d8
   11fec:	movt	r0, #2
   11ff0:	mov	r2, r1
   11ff4:	mov	r3, r1
   11ff8:	bl	1f708 <fputs@plt+0x1634c>
   11ffc:	movw	sl, #261	; 0x105
   12000:	b	11524 <fputs@plt+0x8168>
   12004:	ldr	r2, [r4, #16]
   12008:	movw	r5, #2608	; 0xa30
   1200c:	movt	r5, #3
   12010:	cmp	r3, r2
   12014:	blt	12024 <fputs@plt+0x8c68>
   12018:	add	r0, r5, #8
   1201c:	bl	20e3c <_ZdlPv@@Base+0x44c>
   12020:	ldr	r3, [r5, #12]
   12024:	ldr	r2, [r4, #8]
   12028:	add	r0, r3, #1
   1202c:	mov	r1, #34	; 0x22
   12030:	str	r0, [r4, #12]
   12034:	movw	sl, #261	; 0x105
   12038:	strb	r1, [r2, r3]
   1203c:	b	11524 <fputs@plt+0x8168>
   12040:	bl	f66c <fputs@plt+0x62b0>
   12044:	movw	r1, #20992	; 0x5200
   12048:	ldr	r0, [pc, #-948]	; 11c9c <fputs@plt+0x88e0>
   1204c:	movt	r1, #2
   12050:	bl	20d50 <_ZdlPv@@Base+0x360>
   12054:	mov	sl, #352	; 0x160
   12058:	b	11524 <fputs@plt+0x8168>
   1205c:	bl	f66c <fputs@plt+0x62b0>
   12060:	movw	r1, #21016	; 0x5218
   12064:	ldr	r0, [pc, #-976]	; 11c9c <fputs@plt+0x88e0>
   12068:	movt	r1, #2
   1206c:	bl	20d50 <_ZdlPv@@Base+0x360>
   12070:	movw	sl, #350	; 0x15e
   12074:	b	11524 <fputs@plt+0x8168>
   12078:	bl	f66c <fputs@plt+0x62b0>
   1207c:	movw	r1, #20984	; 0x51f8
   12080:	ldr	r0, [pc, #-1004]	; 11c9c <fputs@plt+0x88e0>
   12084:	movt	r1, #2
   12088:	bl	20d50 <_ZdlPv@@Base+0x360>
   1208c:	movw	sl, #267	; 0x10b
   12090:	b	11524 <fputs@plt+0x8168>
   12094:	bl	f66c <fputs@plt+0x62b0>
   12098:	movw	r1, #21024	; 0x5220
   1209c:	ldr	r0, [pc, #-1032]	; 11c9c <fputs@plt+0x88e0>
   120a0:	movt	r1, #2
   120a4:	bl	20d50 <_ZdlPv@@Base+0x360>
   120a8:	movw	sl, #351	; 0x15f
   120ac:	b	11524 <fputs@plt+0x8168>
   120b0:	bl	f66c <fputs@plt+0x62b0>
   120b4:	movw	r1, #21000	; 0x5208
   120b8:	ldr	r0, [pc, #-1060]	; 11c9c <fputs@plt+0x88e0>
   120bc:	movt	r1, #2
   120c0:	bl	20d50 <_ZdlPv@@Base+0x360>
   120c4:	movw	sl, #355	; 0x163
   120c8:	b	11524 <fputs@plt+0x8168>
   120cc:	bl	f66c <fputs@plt+0x62b0>
   120d0:	movw	r1, #21008	; 0x5210
   120d4:	ldr	r0, [pc, #-1088]	; 11c9c <fputs@plt+0x88e0>
   120d8:	movt	r1, #2
   120dc:	bl	20d50 <_ZdlPv@@Base+0x360>
   120e0:	movw	sl, #353	; 0x161
   120e4:	b	11524 <fputs@plt+0x8168>
   120e8:	mov	r0, fp
   120ec:	mov	r1, #0
   120f0:	bl	f788 <fputs@plt+0x63cc>
   120f4:	b	117b8 <fputs@plt+0x83fc>
   120f8:	ldr	r0, [pc, #-1124]	; 11c9c <fputs@plt+0x88e0>
   120fc:	add	r1, r0, #12
   12100:	bl	20d10 <_ZdlPv@@Base+0x320>
   12104:	ldr	r3, [r4, #24]
   12108:	cmp	r3, #0
   1210c:	bgt	12120 <fputs@plt+0x8d64>
   12110:	movw	r1, #20472	; 0x4ff8
   12114:	mov	r0, #99	; 0x63
   12118:	movt	r1, #2
   1211c:	bl	1eec8 <fputs@plt+0x15b0c>
   12120:	ldr	r0, [r4, #20]
   12124:	movw	r3, #11056	; 0x2b30
   12128:	movt	r3, #3
   1212c:	movw	r1, #259	; 0x103
   12130:	movw	r2, #258	; 0x102
   12134:	ldrb	r0, [r0]
   12138:	ldrb	sl, [r3, r0]
   1213c:	cmp	sl, #0
   12140:	moveq	sl, r1
   12144:	movne	sl, r2
   12148:	b	11524 <fputs@plt+0x8168>
   1214c:	bl	f66c <fputs@plt+0x62b0>
   12150:	mov	r0, fp
   12154:	bl	11040 <fputs@plt+0x7c84>
   12158:	b	112c4 <fputs@plt+0x7f08>
   1215c:	add	r0, sl, #20
   12160:	uxtb	r5, r1
   12164:	bl	21274 <_ZdlPv@@Base+0x884>
   12168:	ldr	r3, [sl, #24]
   1216c:	ldr	r2, [sl, #28]
   12170:	cmp	r3, r2
   12174:	blt	12184 <fputs@plt+0x8dc8>
   12178:	add	r0, sl, #20
   1217c:	bl	20e3c <_ZdlPv@@Base+0x44c>
   12180:	ldr	r3, [sl, #24]
   12184:	ldr	r2, [r4, #20]
   12188:	movw	r6, #2608	; 0xa30
   1218c:	add	r1, r3, #1
   12190:	movt	r6, #3
   12194:	str	r1, [r4, #24]
   12198:	strb	r5, [r2, r3]
   1219c:	b	121d4 <fputs@plt+0x8e18>
   121a0:	bl	f66c <fputs@plt+0x62b0>
   121a4:	ldr	r3, [r4, #24]
   121a8:	ldr	r2, [r4, #28]
   121ac:	uxtb	r5, r5
   121b0:	cmp	r3, r2
   121b4:	blt	121c4 <fputs@plt+0x8e08>
   121b8:	ldr	r0, [pc, #-1320]	; 11c98 <fputs@plt+0x88dc>
   121bc:	bl	20e3c <_ZdlPv@@Base+0x44c>
   121c0:	ldr	r3, [r6, #24]
   121c4:	ldr	r2, [r4, #20]
   121c8:	add	r1, r3, #1
   121cc:	str	r1, [r4, #24]
   121d0:	strb	r5, [r2, r3]
   121d4:	bl	f700 <fputs@plt+0x6344>
   121d8:	cmn	r0, #1
   121dc:	cmpne	r0, #10
   121e0:	mov	r5, r0
   121e4:	bne	121a0 <fputs@plt+0x8de4>
   121e8:	ldr	r0, [pc, #-1364]	; 11c9c <fputs@plt+0x88e0>
   121ec:	movw	sl, #262	; 0x106
   121f0:	add	r1, r0, #12
   121f4:	bl	20d10 <_ZdlPv@@Base+0x320>
   121f8:	b	11524 <fputs@plt+0x8168>
   121fc:	bl	f66c <fputs@plt+0x62b0>
   12200:	bl	f700 <fputs@plt+0x6344>
   12204:	cmp	r0, #104	; 0x68
   12208:	beq	12354 <fputs@plt+0x8f98>
   1220c:	mov	r0, r4
   12210:	mov	r1, #0
   12214:	bl	f788 <fputs@plt+0x63cc>
   12218:	b	116a4 <fputs@plt+0x82e8>
   1221c:	bl	f66c <fputs@plt+0x62b0>
   12220:	bl	f700 <fputs@plt+0x6344>
   12224:	cmn	r0, #1
   12228:	mov	r5, r0
   1222c:	beq	1232c <fputs@plt+0x8f70>
   12230:	movw	r7, #11568	; 0x2d30
   12234:	uxtb	r3, r0
   12238:	movt	r7, #3
   1223c:	ldrb	r3, [r7, r3]
   12240:	cmp	r3, #0
   12244:	beq	1232c <fputs@plt+0x8f70>
   12248:	ldr	r3, [r4, #12]
   1224c:	movw	r8, #2608	; 0xa30
   12250:	ldr	r2, [r4, #16]
   12254:	movt	r8, #3
   12258:	cmp	r3, r2
   1225c:	blt	1226c <fputs@plt+0x8eb0>
   12260:	add	r0, r8, #8
   12264:	bl	20e3c <_ZdlPv@@Base+0x44c>
   12268:	ldr	r3, [r8, #12]
   1226c:	ldr	r2, [r4, #8]
   12270:	add	r1, r3, #1
   12274:	str	r1, [r4, #12]
   12278:	movw	r8, #2608	; 0xa30
   1227c:	uxtb	sl, r6
   12280:	movt	r8, #3
   12284:	strb	fp, [r2, r3]
   12288:	ldr	r3, [r4, #12]
   1228c:	ldr	r2, [r4, #16]
   12290:	cmp	r3, r2
   12294:	blt	122a4 <fputs@plt+0x8ee8>
   12298:	add	r0, r8, #8
   1229c:	bl	20e3c <_ZdlPv@@Base+0x44c>
   122a0:	ldr	r3, [r8, #12]
   122a4:	ldr	r2, [r4, #8]
   122a8:	mov	r9, r6
   122ac:	add	r1, r3, #1
   122b0:	mov	r6, r5
   122b4:	str	r1, [r4, #12]
   122b8:	uxtb	r8, r5
   122bc:	strb	sl, [r2, r3]
   122c0:	b	11d18 <fputs@plt+0x895c>
   122c4:	bl	f66c <fputs@plt+0x62b0>
   122c8:	bl	f700 <fputs@plt+0x6344>
   122cc:	cmp	r0, #62	; 0x3e
   122d0:	beq	12370 <fputs@plt+0x8fb4>
   122d4:	movw	r1, #20972	; 0x51ec
   122d8:	ldr	r0, [pc, #-1604]	; 11c9c <fputs@plt+0x88e0>
   122dc:	movt	r1, #2
   122e0:	movw	sl, #266	; 0x10a
   122e4:	bl	20d50 <_ZdlPv@@Base+0x360>
   122e8:	b	11524 <fputs@plt+0x8168>
   122ec:	ldr	r3, [r4, #12]
   122f0:	movw	r7, #2608	; 0xa30
   122f4:	ldr	r2, [r4, #16]
   122f8:	uxtb	r5, r5
   122fc:	movt	r7, #3
   12300:	cmp	r3, r2
   12304:	blt	12314 <fputs@plt+0x8f58>
   12308:	add	r0, r7, #8
   1230c:	bl	20e3c <_ZdlPv@@Base+0x44c>
   12310:	ldr	r3, [r7, #12]
   12314:	ldr	r2, [r4, #8]
   12318:	add	r1, r3, #1
   1231c:	str	r1, [r4, #12]
   12320:	strb	r5, [r2, r3]
   12324:	bl	f66c <fputs@plt+0x62b0>
   12328:	b	11dd0 <fputs@plt+0x8a14>
   1232c:	uxtb	r0, r6
   12330:	mov	r1, #0
   12334:	bl	f788 <fputs@plt+0x63cc>
   12338:	mov	r0, fp
   1233c:	mov	r1, #0
   12340:	mov	sl, #260	; 0x104
   12344:	bl	f788 <fputs@plt+0x63cc>
   12348:	b	11524 <fputs@plt+0x8168>
   1234c:	rsb	r6, r6, #0
   12350:	b	11dc4 <fputs@plt+0x8a08>
   12354:	bl	f66c <fputs@plt+0x62b0>
   12358:	movw	r1, #20964	; 0x51e4
   1235c:	ldr	r0, [pc, #-1736]	; 11c9c <fputs@plt+0x88e0>
   12360:	movt	r1, #2
   12364:	bl	20d50 <_ZdlPv@@Base+0x360>
   12368:	movw	sl, #265	; 0x109
   1236c:	b	11524 <fputs@plt+0x8168>
   12370:	bl	f66c <fputs@plt+0x62b0>
   12374:	movw	r1, #20968	; 0x51e8
   12378:	ldr	r0, [pc, #-1764]	; 11c9c <fputs@plt+0x88e0>
   1237c:	movt	r1, #2
   12380:	bl	20d50 <_ZdlPv@@Base+0x360>
   12384:	mov	sl, #268	; 0x10c
   12388:	b	11524 <fputs@plt+0x8168>
   1238c:	bl	f66c <fputs@plt+0x62b0>
   12390:	movw	r1, #18852	; 0x49a4
   12394:	ldr	r0, [pc, #-1792]	; 11c9c <fputs@plt+0x88e0>
   12398:	movt	r1, #2
   1239c:	str	r6, [r4, #56]	; 0x38
   123a0:	mov	sl, #264	; 0x108
   123a4:	bl	20e70 <_ZdlPv@@Base+0x480>
   123a8:	b	11524 <fputs@plt+0x8168>
   123ac:	bl	f66c <fputs@plt+0x62b0>
   123b0:	movw	r1, #18860	; 0x49ac
   123b4:	ldr	r0, [pc, #-1824]	; 11c9c <fputs@plt+0x88e0>
   123b8:	movt	r1, #2
   123bc:	str	r6, [r4, #56]	; 0x38
   123c0:	mov	sl, #264	; 0x108
   123c4:	bl	20e70 <_ZdlPv@@Base+0x480>
   123c8:	b	11524 <fputs@plt+0x8168>
   123cc:	bl	f66c <fputs@plt+0x62b0>
   123d0:	movw	r1, #20604	; 0x507c
   123d4:	ldr	r0, [pc, #-1856]	; 11c9c <fputs@plt+0x88e0>
   123d8:	movt	r1, #2
   123dc:	str	r6, [r4, #56]	; 0x38
   123e0:	mov	sl, #264	; 0x108
   123e4:	bl	20e70 <_ZdlPv@@Base+0x480>
   123e8:	b	11524 <fputs@plt+0x8168>
   123ec:	bl	f66c <fputs@plt+0x62b0>
   123f0:	movw	r1, #18856	; 0x49a8
   123f4:	ldr	r0, [pc, #-1888]	; 11c9c <fputs@plt+0x88e0>
   123f8:	movt	r1, #2
   123fc:	str	r6, [r4, #56]	; 0x38
   12400:	mov	sl, #264	; 0x108
   12404:	bl	20e70 <_ZdlPv@@Base+0x480>
   12408:	b	11524 <fputs@plt+0x8168>
   1240c:	ldr	r0, [pc, #-1912]	; 11c9c <fputs@plt+0x88e0>
   12410:	mov	sl, r2
   12414:	add	r1, r0, #12
   12418:	bl	20d10 <_ZdlPv@@Base+0x320>
   1241c:	b	11524 <fputs@plt+0x8168>
   12420:	ldr	r0, [pc, #-1932]	; 11c9c <fputs@plt+0x88e0>
   12424:	mov	r1, #92	; 0x5c
   12428:	bl	20dc4 <_ZdlPv@@Base+0x3d4>
   1242c:	mov	sl, #92	; 0x5c
   12430:	b	11524 <fputs@plt+0x8168>
   12434:	ldr	r2, [pc, #-1948]	; 11ca0 <fputs@plt+0x88e4>
   12438:	mov	r0, sl
   1243c:	str	r2, [sl]
   12440:	bl	209f0 <_ZdlPv@@Base>
   12444:	bl	9188 <__cxa_end_cleanup@plt>
   12448:	push	{r4, r5, r6, lr}
   1244c:	movw	r4, #1424	; 0x590
   12450:	movt	r4, #3
   12454:	sub	sp, sp, #16
   12458:	mov	r0, #0
   1245c:	ldr	r3, [r4]
   12460:	str	r3, [sp, #12]
   12464:	bl	1128c <fputs@plt+0x7ed0>
   12468:	sub	r0, r0, #256	; 0x100
   1246c:	sub	r0, r0, #2
   12470:	cmp	r0, #1
   12474:	bls	124ac <fputs@plt+0x90f0>
   12478:	movw	r1, #13880	; 0x3638
   1247c:	movt	r1, #3
   12480:	movw	r0, #21032	; 0x5228
   12484:	movt	r0, #2
   12488:	mov	r2, r1
   1248c:	mov	r3, r1
   12490:	bl	1024c <fputs@plt+0x6e90>
   12494:	ldr	r2, [sp, #12]
   12498:	ldr	r3, [r4]
   1249c:	cmp	r2, r3
   124a0:	bne	1255c <fputs@plt+0x91a0>
   124a4:	add	sp, sp, #16
   124a8:	pop	{r4, r5, r6, pc}
   124ac:	movw	r5, #2608	; 0xa30
   124b0:	movt	r5, #3
   124b4:	ldr	r3, [r5, #24]
   124b8:	ldr	r2, [r5, #28]
   124bc:	cmp	r3, r2
   124c0:	bge	1253c <fputs@plt+0x9180>
   124c4:	ldr	r2, [r5, #20]
   124c8:	add	r0, r3, #1
   124cc:	mov	r1, #0
   124d0:	str	r0, [r5, #24]
   124d4:	mov	r0, sp
   124d8:	strb	r1, [r2, r3]
   124dc:	ldr	r1, [pc, #136]	; 1256c <fputs@plt+0x91b0>
   124e0:	bl	20c98 <_ZdlPv@@Base+0x2a8>
   124e4:	ldr	r6, [sp]
   124e8:	bl	10860 <fputs@plt+0x74a4>
   124ec:	cmp	r0, #0
   124f0:	beq	12530 <fputs@plt+0x9174>
   124f4:	ldr	r3, [r5, #24]
   124f8:	ldr	r2, [r5, #28]
   124fc:	cmp	r3, r2
   12500:	bge	1254c <fputs@plt+0x9190>
   12504:	ldr	r2, [r5, #20]
   12508:	add	r0, r3, #1
   1250c:	mov	r1, #0
   12510:	str	r0, [r5, #24]
   12514:	strb	r1, [r2, r3]
   12518:	ldr	r0, [r5, #20]
   1251c:	bl	214b4 <_ZdlPv@@Base+0xac4>
   12520:	mov	r2, r0
   12524:	mov	r1, r6
   12528:	ldr	r0, [pc, #64]	; 12570 <fputs@plt+0x91b4>
   1252c:	bl	f144 <fputs@plt+0x5d88>
   12530:	mov	r0, sp
   12534:	bl	20cf0 <_ZdlPv@@Base+0x300>
   12538:	b	12494 <fputs@plt+0x90d8>
   1253c:	add	r0, r5, #20
   12540:	bl	20e3c <_ZdlPv@@Base+0x44c>
   12544:	ldr	r3, [r5, #24]
   12548:	b	124c4 <fputs@plt+0x9108>
   1254c:	ldr	r0, [pc, #24]	; 1256c <fputs@plt+0x91b0>
   12550:	bl	20e3c <_ZdlPv@@Base+0x44c>
   12554:	ldr	r3, [r5, #24]
   12558:	b	12504 <fputs@plt+0x9148>
   1255c:	bl	92b4 <__stack_chk_fail@plt>
   12560:	mov	r0, sp
   12564:	bl	20cf0 <_ZdlPv@@Base+0x300>
   12568:	bl	9188 <__cxa_end_cleanup@plt>
   1256c:	andeq	r0, r3, r4, asr #20
   12570:	andeq	r0, r3, r0, asr sl
   12574:	push	{r4, lr}
   12578:	mov	r0, #0
   1257c:	bl	1128c <fputs@plt+0x7ed0>
   12580:	sub	r0, r0, #256	; 0x100
   12584:	sub	r0, r0, #2
   12588:	cmp	r0, #1
   1258c:	bls	125b0 <fputs@plt+0x91f4>
   12590:	movw	r1, #13880	; 0x3638
   12594:	movt	r1, #3
   12598:	movw	r0, #21032	; 0x5228
   1259c:	movt	r0, #2
   125a0:	mov	r2, r1
   125a4:	mov	r3, r1
   125a8:	pop	{r4, lr}
   125ac:	b	1024c <fputs@plt+0x6e90>
   125b0:	movw	r4, #2608	; 0xa30
   125b4:	movt	r4, #3
   125b8:	ldr	r3, [r4, #24]
   125bc:	ldr	r2, [r4, #28]
   125c0:	cmp	r3, r2
   125c4:	blt	125d4 <fputs@plt+0x9218>
   125c8:	add	r0, r4, #20
   125cc:	bl	20e3c <_ZdlPv@@Base+0x44c>
   125d0:	ldr	r3, [r4, #24]
   125d4:	ldr	ip, [r4, #20]
   125d8:	mov	r1, #0
   125dc:	add	r0, r3, #1
   125e0:	mov	r2, r1
   125e4:	str	r0, [r4, #24]
   125e8:	strb	r1, [ip, r3]
   125ec:	ldr	r0, [pc, #8]	; 125fc <fputs@plt+0x9240>
   125f0:	ldr	r1, [r4, #20]
   125f4:	pop	{r4, lr}
   125f8:	b	f144 <fputs@plt+0x5d88>
   125fc:	andeq	r0, r3, r0, asr sl
   12600:	push	{r4, lr}
   12604:	movw	r4, #288	; 0x120
   12608:	movt	r4, #3
   1260c:	ldr	r3, [r4, #784]	; 0x310
   12610:	cmn	r3, #1
   12614:	popne	{r4, pc}
   12618:	ldr	r0, [pc, #20]	; 12634 <fputs@plt+0x9278>
   1261c:	sub	r1, r0, #52	; 0x34
   12620:	bl	20d10 <_ZdlPv@@Base+0x320>
   12624:	mov	r0, #1
   12628:	bl	1128c <fputs@plt+0x7ed0>
   1262c:	str	r0, [r4, #784]	; 0x310
   12630:	pop	{r4, pc}
   12634:	andeq	r0, r3, ip, ror #20
   12638:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1263c:	movw	r4, #2608	; 0xa30
   12640:	movt	r4, #3
   12644:	ldr	r3, [r4, #72]	; 0x48
   12648:	cmp	r3, #0
   1264c:	bne	126f0 <fputs@plt+0x9334>
   12650:	movw	r6, #288	; 0x120
   12654:	movt	r6, #3
   12658:	mvn	r9, #0
   1265c:	movw	r7, #339	; 0x153
   12660:	mov	r8, r6
   12664:	movw	sl, #361	; 0x169
   12668:	movw	fp, #378	; 0x17a
   1266c:	ldr	r5, [r6, #784]	; 0x310
   12670:	cmp	r5, #0
   12674:	strge	r9, [r8, #784]	; 0x310
   12678:	blt	12898 <fputs@plt+0x94dc>
   1267c:	cmp	r5, r7
   12680:	beq	12bac <fputs@plt+0x97f0>
   12684:	cmp	r5, #340	; 0x154
   12688:	blt	12734 <fputs@plt+0x9378>
   1268c:	cmp	r5, sl
   12690:	beq	12b7c <fputs@plt+0x97c0>
   12694:	bgt	127ec <fputs@plt+0x9430>
   12698:	movw	r3, #358	; 0x166
   1269c:	cmp	r5, r3
   126a0:	beq	12aa8 <fputs@plt+0x96ec>
   126a4:	bgt	128c4 <fputs@plt+0x9508>
   126a8:	cmp	r5, #340	; 0x154
   126ac:	beq	12950 <fputs@plt+0x9594>
   126b0:	movw	r3, #341	; 0x155
   126b4:	cmp	r5, r3
   126b8:	bne	1272c <fputs@plt+0x9370>
   126bc:	ldr	r0, [pc, #1328]	; 12bf4 <fputs@plt+0x9838>
   126c0:	sub	r1, r0, #52	; 0x34
   126c4:	bl	20d10 <_ZdlPv@@Base+0x320>
   126c8:	mov	r0, #1
   126cc:	bl	1128c <fputs@plt+0x7ed0>
   126d0:	sub	r3, r0, #284	; 0x11c
   126d4:	str	r0, [r6, #784]	; 0x310
   126d8:	sub	r3, r3, #1
   126dc:	cmp	r3, #1
   126e0:	bls	1272c <fputs@plt+0x9370>
   126e4:	movw	r0, #21080	; 0x5258
   126e8:	movt	r0, #2
   126ec:	b	12904 <fputs@plt+0x9548>
   126f0:	movw	r2, #288	; 0x120
   126f4:	movt	r2, #3
   126f8:	ldr	r2, [r2, #784]	; 0x310
   126fc:	cmn	r2, #1
   12700:	beq	12718 <fputs@plt+0x935c>
   12704:	movw	r1, #20536	; 0x5038
   12708:	movw	r0, #1782	; 0x6f6
   1270c:	movt	r1, #2
   12710:	bl	1eec8 <fputs@plt+0x15b0c>
   12714:	ldr	r3, [r4, #72]	; 0x48
   12718:	cmp	r3, #2
   1271c:	beq	127c8 <fputs@plt+0x940c>
   12720:	bl	10860 <fputs@plt+0x74a4>
   12724:	subs	r5, r0, #0
   12728:	bne	12770 <fputs@plt+0x93b4>
   1272c:	mov	r0, r5
   12730:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12734:	movw	r3, #262	; 0x106
   12738:	cmp	r5, r3
   1273c:	bgt	12840 <fputs@plt+0x9484>
   12740:	cmp	r5, #260	; 0x104
   12744:	bgt	12af0 <fputs@plt+0x9734>
   12748:	bge	12ad8 <fputs@plt+0x971c>
   1274c:	movw	r3, #258	; 0x102
   12750:	cmp	r5, r3
   12754:	bge	129fc <fputs@plt+0x9640>
   12758:	cmn	r5, #1
   1275c:	moveq	r5, #0
   12760:	beq	1272c <fputs@plt+0x9370>
   12764:	cmp	r5, #10
   12768:	moveq	r5, #59	; 0x3b
   1276c:	b	1272c <fputs@plt+0x9370>
   12770:	ldr	r3, [r4, #24]
   12774:	movw	r5, #2608	; 0xa30
   12778:	ldr	r2, [r4, #28]
   1277c:	movt	r5, #3
   12780:	cmp	r3, r2
   12784:	blt	12794 <fputs@plt+0x93d8>
   12788:	add	r0, r5, #20
   1278c:	bl	20e3c <_ZdlPv@@Base+0x44c>
   12790:	ldr	r3, [r5, #24]
   12794:	ldr	r2, [r4, #20]
   12798:	add	r0, r3, #1
   1279c:	mov	r1, #0
   127a0:	str	r0, [r4, #24]
   127a4:	movw	r5, #263	; 0x107
   127a8:	strb	r1, [r2, r3]
   127ac:	ldr	r0, [r4, #20]
   127b0:	bl	214b4 <_ZdlPv@@Base+0xac4>
   127b4:	movw	r3, #2576	; 0xa10
   127b8:	movt	r3, #3
   127bc:	str	r0, [r3]
   127c0:	mov	r0, r5
   127c4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127c8:	bl	10a48 <fputs@plt+0x768c>
   127cc:	movw	r3, #2576	; 0xa10
   127d0:	movt	r3, #3
   127d4:	movw	r5, #263	; 0x107
   127d8:	cmp	r0, #0
   127dc:	str	r0, [r3]
   127e0:	moveq	r5, #0
   127e4:	mov	r0, r5
   127e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127ec:	cmp	r5, #364	; 0x16c
   127f0:	beq	12a78 <fputs@plt+0x96bc>
   127f4:	bgt	128a8 <fputs@plt+0x94ec>
   127f8:	movw	r3, #362	; 0x16a
   127fc:	cmp	r5, r3
   12800:	beq	12920 <fputs@plt+0x9564>
   12804:	add	r3, r3, #1
   12808:	cmp	r5, r3
   1280c:	bne	1272c <fputs@plt+0x9370>
   12810:	ldr	r0, [pc, #988]	; 12bf4 <fputs@plt+0x9838>
   12814:	sub	r1, r0, #52	; 0x34
   12818:	bl	20d10 <_ZdlPv@@Base+0x320>
   1281c:	mov	r0, #1
   12820:	bl	1128c <fputs@plt+0x7ed0>
   12824:	movw	r3, #303	; 0x12f
   12828:	cmp	r0, r3
   1282c:	str	r0, [r6, #784]	; 0x310
   12830:	beq	1272c <fputs@plt+0x9370>
   12834:	movw	r0, #21148	; 0x529c
   12838:	movt	r0, #2
   1283c:	b	12904 <fputs@plt+0x9548>
   12840:	movw	r3, #285	; 0x11d
   12844:	cmp	r5, r3
   12848:	beq	12a4c <fputs@plt+0x9690>
   1284c:	ble	129e4 <fputs@plt+0x9628>
   12850:	movw	r3, #286	; 0x11e
   12854:	cmp	r5, r3
   12858:	beq	1298c <fputs@plt+0x95d0>
   1285c:	add	r3, r3, #52	; 0x34
   12860:	cmp	r5, r3
   12864:	bne	1272c <fputs@plt+0x9370>
   12868:	ldr	r0, [pc, #900]	; 12bf4 <fputs@plt+0x9838>
   1286c:	sub	r1, r0, #52	; 0x34
   12870:	bl	20d10 <_ZdlPv@@Base+0x320>
   12874:	mov	r0, #1
   12878:	bl	1128c <fputs@plt+0x7ed0>
   1287c:	movw	r3, #303	; 0x12f
   12880:	cmp	r0, r3
   12884:	str	r0, [r6, #784]	; 0x310
   12888:	beq	1272c <fputs@plt+0x9370>
   1288c:	movw	r0, #21120	; 0x5280
   12890:	movt	r0, #2
   12894:	b	12904 <fputs@plt+0x9548>
   12898:	mov	r0, #1
   1289c:	bl	1128c <fputs@plt+0x7ed0>
   128a0:	mov	r5, r0
   128a4:	b	1267c <fputs@plt+0x92c0>
   128a8:	cmp	r5, fp
   128ac:	beq	12984 <fputs@plt+0x95c8>
   128b0:	movw	r3, #379	; 0x17b
   128b4:	cmp	r5, r3
   128b8:	bne	1272c <fputs@plt+0x9370>
   128bc:	bl	12574 <fputs@plt+0x91b8>
   128c0:	b	1266c <fputs@plt+0x92b0>
   128c4:	movw	r3, #359	; 0x167
   128c8:	cmp	r5, r3
   128cc:	beq	129b4 <fputs@plt+0x95f8>
   128d0:	cmp	r5, #360	; 0x168
   128d4:	bne	1272c <fputs@plt+0x9370>
   128d8:	ldr	r0, [pc, #788]	; 12bf4 <fputs@plt+0x9838>
   128dc:	sub	r1, r0, #52	; 0x34
   128e0:	bl	20d10 <_ZdlPv@@Base+0x320>
   128e4:	mov	r0, #1
   128e8:	bl	1128c <fputs@plt+0x7ed0>
   128ec:	movw	r3, #303	; 0x12f
   128f0:	cmp	r0, r3
   128f4:	str	r0, [r6, #784]	; 0x310
   128f8:	beq	1272c <fputs@plt+0x9370>
   128fc:	movw	r0, #21104	; 0x5270
   12900:	movt	r0, #2
   12904:	bl	214b4 <_ZdlPv@@Base+0xac4>
   12908:	movw	r3, #2576	; 0xa10
   1290c:	movt	r3, #3
   12910:	movw	r5, #259	; 0x103
   12914:	str	r0, [r3]
   12918:	mov	r0, r5
   1291c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12920:	ldr	r0, [pc, #716]	; 12bf4 <fputs@plt+0x9838>
   12924:	sub	r1, r0, #52	; 0x34
   12928:	bl	20d10 <_ZdlPv@@Base+0x320>
   1292c:	mov	r0, #1
   12930:	bl	1128c <fputs@plt+0x7ed0>
   12934:	movw	r3, #303	; 0x12f
   12938:	cmp	r0, r3
   1293c:	str	r0, [r6, #784]	; 0x310
   12940:	beq	1272c <fputs@plt+0x9370>
   12944:	movw	r0, #21132	; 0x528c
   12948:	movt	r0, #2
   1294c:	b	12904 <fputs@plt+0x9548>
   12950:	ldr	r0, [pc, #668]	; 12bf4 <fputs@plt+0x9838>
   12954:	sub	r1, r0, #52	; 0x34
   12958:	bl	20d10 <_ZdlPv@@Base+0x320>
   1295c:	mov	r0, #1
   12960:	bl	1128c <fputs@plt+0x7ed0>
   12964:	sub	r3, r0, #284	; 0x11c
   12968:	str	r0, [r6, #784]	; 0x310
   1296c:	sub	r3, r3, #1
   12970:	cmp	r3, #1
   12974:	bls	1272c <fputs@plt+0x9370>
   12978:	movw	r0, #21072	; 0x5250
   1297c:	movt	r0, #2
   12980:	b	12904 <fputs@plt+0x9548>
   12984:	bl	12448 <fputs@plt+0x908c>
   12988:	b	1266c <fputs@plt+0x92b0>
   1298c:	ldr	r0, [pc, #608]	; 12bf4 <fputs@plt+0x9838>
   12990:	sub	r1, r0, #52	; 0x34
   12994:	bl	20d10 <_ZdlPv@@Base+0x320>
   12998:	mov	r0, #1
   1299c:	bl	1128c <fputs@plt+0x7ed0>
   129a0:	movw	r3, #303	; 0x12f
   129a4:	cmp	r0, r3
   129a8:	str	r0, [r6, #784]	; 0x310
   129ac:	moveq	r5, #356	; 0x164
   129b0:	b	1272c <fputs@plt+0x9370>
   129b4:	ldr	r0, [pc, #568]	; 12bf4 <fputs@plt+0x9838>
   129b8:	sub	r1, r0, #52	; 0x34
   129bc:	bl	20d10 <_ZdlPv@@Base+0x320>
   129c0:	mov	r0, #1
   129c4:	bl	1128c <fputs@plt+0x7ed0>
   129c8:	movw	r3, #303	; 0x12f
   129cc:	cmp	r0, r3
   129d0:	str	r0, [r6, #784]	; 0x310
   129d4:	beq	1272c <fputs@plt+0x9370>
   129d8:	movw	r0, #21096	; 0x5268
   129dc:	movt	r0, #2
   129e0:	b	12904 <fputs@plt+0x9548>
   129e4:	cmp	r5, #264	; 0x108
   129e8:	ldreq	r2, [r4, #56]	; 0x38
   129ec:	movweq	r3, #2576	; 0xa10
   129f0:	movteq	r3, #3
   129f4:	streq	r2, [r3]
   129f8:	b	1272c <fputs@plt+0x9370>
   129fc:	ldr	r3, [r4, #24]
   12a00:	movw	r6, #2608	; 0xa30
   12a04:	ldr	r2, [r4, #28]
   12a08:	movt	r6, #3
   12a0c:	cmp	r3, r2
   12a10:	blt	12a20 <fputs@plt+0x9664>
   12a14:	add	r0, r6, #20
   12a18:	bl	20e3c <_ZdlPv@@Base+0x44c>
   12a1c:	ldr	r3, [r6, #24]
   12a20:	ldr	r2, [r4, #20]
   12a24:	add	r0, r3, #1
   12a28:	mov	r1, #0
   12a2c:	str	r0, [r4, #24]
   12a30:	strb	r1, [r2, r3]
   12a34:	ldr	r0, [r4, #20]
   12a38:	bl	214b4 <_ZdlPv@@Base+0xac4>
   12a3c:	movw	r3, #2576	; 0xa10
   12a40:	movt	r3, #3
   12a44:	str	r0, [r3]
   12a48:	b	1272c <fputs@plt+0x9370>
   12a4c:	ldr	r0, [pc, #416]	; 12bf4 <fputs@plt+0x9838>
   12a50:	sub	r1, r0, #52	; 0x34
   12a54:	bl	20d10 <_ZdlPv@@Base+0x320>
   12a58:	mov	r0, #1
   12a5c:	bl	1128c <fputs@plt+0x7ed0>
   12a60:	movw	r2, #303	; 0x12f
   12a64:	movw	r3, #357	; 0x165
   12a68:	cmp	r0, r2
   12a6c:	str	r0, [r6, #784]	; 0x310
   12a70:	moveq	r5, r3
   12a74:	b	1272c <fputs@plt+0x9370>
   12a78:	ldr	r0, [pc, #372]	; 12bf4 <fputs@plt+0x9838>
   12a7c:	sub	r1, r0, #52	; 0x34
   12a80:	bl	20d10 <_ZdlPv@@Base+0x320>
   12a84:	mov	r0, #1
   12a88:	bl	1128c <fputs@plt+0x7ed0>
   12a8c:	movw	r3, #303	; 0x12f
   12a90:	cmp	r0, r3
   12a94:	str	r0, [r6, #784]	; 0x310
   12a98:	beq	1272c <fputs@plt+0x9370>
   12a9c:	movw	r0, #21140	; 0x5294
   12aa0:	movt	r0, #2
   12aa4:	b	12904 <fputs@plt+0x9548>
   12aa8:	ldr	r0, [pc, #324]	; 12bf4 <fputs@plt+0x9838>
   12aac:	sub	r1, r0, #52	; 0x34
   12ab0:	bl	20d10 <_ZdlPv@@Base+0x320>
   12ab4:	mov	r0, #1
   12ab8:	bl	1128c <fputs@plt+0x7ed0>
   12abc:	movw	r3, #303	; 0x12f
   12ac0:	cmp	r0, r3
   12ac4:	str	r0, [r6, #784]	; 0x310
   12ac8:	beq	1272c <fputs@plt+0x9370>
   12acc:	movw	r0, #21088	; 0x5260
   12ad0:	movt	r0, #2
   12ad4:	b	12904 <fputs@plt+0x9548>
   12ad8:	ldrd	r2, [r4, #48]	; 0x30
   12adc:	movw	r1, #2576	; 0xa10
   12ae0:	movt	r1, #3
   12ae4:	mov	r5, #260	; 0x104
   12ae8:	strd	r2, [r1]
   12aec:	b	1272c <fputs@plt+0x9370>
   12af0:	ldr	r3, [r4, #24]
   12af4:	movw	r6, #2608	; 0xa30
   12af8:	ldr	r2, [r4, #28]
   12afc:	movt	r6, #3
   12b00:	cmp	r3, r2
   12b04:	blt	12b14 <fputs@plt+0x9758>
   12b08:	add	r0, r6, #20
   12b0c:	bl	20e3c <_ZdlPv@@Base+0x44c>
   12b10:	ldr	r3, [r6, #24]
   12b14:	ldr	r2, [r4, #20]
   12b18:	mov	r1, #0
   12b1c:	add	r0, r3, #1
   12b20:	str	r0, [r4, #24]
   12b24:	strb	r1, [r2, r3]
   12b28:	ldr	r6, [r4]
   12b2c:	cmp	r6, r1
   12b30:	bne	12b44 <fputs@plt+0x9788>
   12b34:	b	12bdc <fputs@plt+0x9820>
   12b38:	ldr	r6, [r6, #4]
   12b3c:	cmp	r6, #0
   12b40:	beq	12bdc <fputs@plt+0x9820>
   12b44:	ldr	r3, [r6]
   12b48:	mov	r0, r6
   12b4c:	ldr	r1, [pc, #164]	; 12bf8 <fputs@plt+0x983c>
   12b50:	ldr	r3, [r3, #16]
   12b54:	add	r2, r1, #4
   12b58:	blx	r3
   12b5c:	cmp	r0, #0
   12b60:	beq	12b38 <fputs@plt+0x977c>
   12b64:	movw	r6, #2576	; 0xa10
   12b68:	movt	r6, #3
   12b6c:	ldr	r0, [r4, #20]
   12b70:	bl	214b4 <_ZdlPv@@Base+0xac4>
   12b74:	str	r0, [r6]
   12b78:	b	1272c <fputs@plt+0x9370>
   12b7c:	ldr	r0, [pc, #112]	; 12bf4 <fputs@plt+0x9838>
   12b80:	sub	r1, r0, #52	; 0x34
   12b84:	bl	20d10 <_ZdlPv@@Base+0x320>
   12b88:	mov	r0, #1
   12b8c:	bl	1128c <fputs@plt+0x7ed0>
   12b90:	movw	r3, #303	; 0x12f
   12b94:	cmp	r0, r3
   12b98:	str	r0, [r6, #784]	; 0x310
   12b9c:	beq	1272c <fputs@plt+0x9370>
   12ba0:	movw	r0, #21112	; 0x5278
   12ba4:	movt	r0, #2
   12ba8:	b	12904 <fputs@plt+0x9548>
   12bac:	ldr	r0, [pc, #64]	; 12bf4 <fputs@plt+0x9838>
   12bb0:	sub	r1, r0, #52	; 0x34
   12bb4:	bl	20d10 <_ZdlPv@@Base+0x320>
   12bb8:	mov	r0, #1
   12bbc:	bl	1128c <fputs@plt+0x7ed0>
   12bc0:	movw	r3, #303	; 0x12f
   12bc4:	cmp	r0, r3
   12bc8:	str	r0, [r6, #784]	; 0x310
   12bcc:	beq	1272c <fputs@plt+0x9370>
   12bd0:	movw	r0, #21124	; 0x5284
   12bd4:	movt	r0, #2
   12bd8:	b	12904 <fputs@plt+0x9548>
   12bdc:	movw	r6, #2576	; 0xa10
   12be0:	movt	r6, #3
   12be4:	mov	r2, #0
   12be8:	mvn	r3, #0
   12bec:	stmib	r6, {r2, r3}
   12bf0:	b	12b6c <fputs@plt+0x97b0>
   12bf4:	andeq	r0, r3, ip, ror #20
   12bf8:	andeq	r0, r3, r4, lsl sl
   12bfc:	movw	r3, #288	; 0x120
   12c00:	movt	r3, #3
   12c04:	push	{r4, r5, r6, r7, r8, r9, lr}
   12c08:	movw	r5, #1424	; 0x590
   12c0c:	movt	r5, #3
   12c10:	ldr	r3, [r3, #784]	; 0x310
   12c14:	sub	sp, sp, #60	; 0x3c
   12c18:	movw	r4, #2608	; 0xa30
   12c1c:	ldr	r2, [r5]
   12c20:	cmn	r3, #1
   12c24:	mov	r7, r0
   12c28:	movt	r4, #3
   12c2c:	str	r2, [sp, #52]	; 0x34
   12c30:	beq	12c74 <fputs@plt+0x98b8>
   12c34:	ldr	r3, [r4, #64]	; 0x40
   12c38:	cmp	r3, #0
   12c3c:	ble	12c80 <fputs@plt+0x98c4>
   12c40:	ldr	r2, [r4, #68]	; 0x44
   12c44:	cmp	r3, r2
   12c48:	blt	12c58 <fputs@plt+0x989c>
   12c4c:	add	r0, r4, #60	; 0x3c
   12c50:	bl	20e3c <_ZdlPv@@Base+0x44c>
   12c54:	ldr	r3, [r4, #64]	; 0x40
   12c58:	ldr	r2, [r4, #60]	; 0x3c
   12c5c:	add	r0, r3, #1
   12c60:	mov	r1, #0
   12c64:	str	r0, [r4, #64]	; 0x40
   12c68:	strb	r1, [r2, r3]
   12c6c:	ldr	r6, [r4, #60]	; 0x3c
   12c70:	b	12c84 <fputs@plt+0x98c8>
   12c74:	ldr	r3, [r4, #12]
   12c78:	cmp	r3, #0
   12c7c:	bgt	12d9c <fputs@plt+0x99e0>
   12c80:	mov	r6, #0
   12c84:	ldr	r4, [r4]
   12c88:	cmp	r4, #0
   12c8c:	bne	12ca0 <fputs@plt+0x98e4>
   12c90:	b	12d44 <fputs@plt+0x9988>
   12c94:	ldr	r4, [r4, #4]
   12c98:	cmp	r4, #0
   12c9c:	beq	12d44 <fputs@plt+0x9988>
   12ca0:	ldr	r3, [r4]
   12ca4:	mov	r0, r4
   12ca8:	add	r1, sp, #8
   12cac:	add	r2, sp, #12
   12cb0:	ldr	r3, [r3, #16]
   12cb4:	blx	r3
   12cb8:	cmp	r0, #0
   12cbc:	beq	12c94 <fputs@plt+0x98d8>
   12cc0:	cmp	r6, #0
   12cc4:	beq	12e38 <fputs@plt+0x9a7c>
   12cc8:	ldrb	r3, [r6]
   12ccc:	cmp	r3, #10
   12cd0:	bne	12ce0 <fputs@plt+0x9924>
   12cd4:	ldrb	r3, [r6, #1]
   12cd8:	cmp	r3, #0
   12cdc:	beq	12dd0 <fputs@plt+0x9a14>
   12ce0:	ldr	r9, [sp, #8]
   12ce4:	add	r4, sp, #32
   12ce8:	ldr	r8, [sp, #12]
   12cec:	mov	r1, r7
   12cf0:	add	r0, sp, #16
   12cf4:	bl	1f264 <fputs@plt+0x15ea8>
   12cf8:	mov	r1, r6
   12cfc:	mov	r0, r4
   12d00:	bl	1f264 <fputs@plt+0x15ea8>
   12d04:	movw	ip, #13880	; 0x3638
   12d08:	movw	r2, #21172	; 0x52b4
   12d0c:	movt	ip, #3
   12d10:	str	r4, [sp]
   12d14:	mov	r0, r9
   12d18:	mov	r1, r8
   12d1c:	add	r3, sp, #16
   12d20:	movt	r2, #2
   12d24:	str	ip, [sp, #4]
   12d28:	bl	1f798 <fputs@plt+0x163dc>
   12d2c:	ldr	r2, [sp, #52]	; 0x34
   12d30:	ldr	r3, [r5]
   12d34:	cmp	r2, r3
   12d38:	bne	12ea4 <fputs@plt+0x9ae8>
   12d3c:	add	sp, sp, #60	; 0x3c
   12d40:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12d44:	cmp	r6, #0
   12d48:	beq	12e78 <fputs@plt+0x9abc>
   12d4c:	ldrb	r3, [r6]
   12d50:	mov	r1, r7
   12d54:	cmp	r3, #10
   12d58:	bne	12d68 <fputs@plt+0x99ac>
   12d5c:	ldrb	r3, [r6, #1]
   12d60:	cmp	r3, #0
   12d64:	beq	12e10 <fputs@plt+0x9a54>
   12d68:	add	r0, sp, #16
   12d6c:	bl	1f264 <fputs@plt+0x15ea8>
   12d70:	mov	r1, r6
   12d74:	add	r0, sp, #32
   12d78:	bl	1f264 <fputs@plt+0x15ea8>
   12d7c:	add	r1, sp, #16
   12d80:	add	r2, sp, #32
   12d84:	movw	r0, #21172	; 0x52b4
   12d88:	movw	r3, #13880	; 0x3638
   12d8c:	movt	r0, #2
   12d90:	movt	r3, #3
   12d94:	bl	1f708 <fputs@plt+0x1634c>
   12d98:	b	12d2c <fputs@plt+0x9970>
   12d9c:	ldr	r2, [r4, #16]
   12da0:	cmp	r3, r2
   12da4:	blt	12db4 <fputs@plt+0x99f8>
   12da8:	add	r0, r4, #8
   12dac:	bl	20e3c <_ZdlPv@@Base+0x44c>
   12db0:	ldr	r3, [r4, #12]
   12db4:	ldr	r2, [r4, #8]
   12db8:	add	r0, r3, #1
   12dbc:	mov	r1, #0
   12dc0:	str	r0, [r4, #12]
   12dc4:	strb	r1, [r2, r3]
   12dc8:	ldr	r6, [r4, #8]
   12dcc:	b	12c84 <fputs@plt+0x98c8>
   12dd0:	ldr	r6, [sp, #8]
   12dd4:	mov	r1, r7
   12dd8:	ldr	r4, [sp, #12]
   12ddc:	add	r0, sp, #32
   12de0:	bl	1f264 <fputs@plt+0x15ea8>
   12de4:	add	r3, sp, #32
   12de8:	mov	r0, r6
   12dec:	movw	ip, #13880	; 0x3638
   12df0:	mov	r1, r4
   12df4:	movt	ip, #3
   12df8:	movw	r2, #21152	; 0x52a0
   12dfc:	str	ip, [sp]
   12e00:	movt	r2, #2
   12e04:	str	ip, [sp, #4]
   12e08:	bl	1f798 <fputs@plt+0x163dc>
   12e0c:	b	12d2c <fputs@plt+0x9970>
   12e10:	add	r0, sp, #32
   12e14:	bl	1f264 <fputs@plt+0x15ea8>
   12e18:	movw	r2, #13880	; 0x3638
   12e1c:	movt	r2, #3
   12e20:	add	r1, sp, #32
   12e24:	movw	r0, #21152	; 0x52a0
   12e28:	movt	r0, #2
   12e2c:	mov	r3, r2
   12e30:	bl	1f708 <fputs@plt+0x1634c>
   12e34:	b	12d2c <fputs@plt+0x9970>
   12e38:	ldr	r6, [sp, #8]
   12e3c:	mov	r1, r7
   12e40:	ldr	r4, [sp, #12]
   12e44:	add	r0, sp, #32
   12e48:	bl	1f264 <fputs@plt+0x15ea8>
   12e4c:	add	r3, sp, #32
   12e50:	mov	r0, r6
   12e54:	movw	ip, #13880	; 0x3638
   12e58:	mov	r1, r4
   12e5c:	movt	ip, #3
   12e60:	movw	r2, #21188	; 0x52c4
   12e64:	str	ip, [sp]
   12e68:	movt	r2, #2
   12e6c:	str	ip, [sp, #4]
   12e70:	bl	1f798 <fputs@plt+0x163dc>
   12e74:	b	12d2c <fputs@plt+0x9970>
   12e78:	mov	r1, r7
   12e7c:	add	r0, sp, #32
   12e80:	bl	1f264 <fputs@plt+0x15ea8>
   12e84:	movw	r2, #13880	; 0x3638
   12e88:	movt	r2, #3
   12e8c:	add	r1, sp, #32
   12e90:	movw	r0, #21188	; 0x52c4
   12e94:	movt	r0, #2
   12e98:	mov	r3, r2
   12e9c:	bl	1f708 <fputs@plt+0x1634c>
   12ea0:	b	12d2c <fputs@plt+0x9970>
   12ea4:	bl	92b4 <__stack_chk_fail@plt>
   12ea8:	ldr	r3, [pc, #4]	; 12eb4 <fputs@plt+0x9af8>
   12eac:	str	r3, [r0]
   12eb0:	bx	lr
   12eb4:	andeq	r4, r2, r8, ror sp
   12eb8:	ldr	r3, [pc, #20]	; 12ed4 <fputs@plt+0x9b18>
   12ebc:	push	{r4, lr}
   12ec0:	mov	r4, r0
   12ec4:	str	r3, [r0]
   12ec8:	bl	209f0 <_ZdlPv@@Base>
   12ecc:	mov	r0, r4
   12ed0:	pop	{r4, pc}
   12ed4:	andeq	r4, r2, r8, ror sp
   12ed8:	ldr	r3, [pc, #20]	; 12ef4 <fputs@plt+0x9b38>
   12edc:	push	{r4, lr}
   12ee0:	mov	r4, r0
   12ee4:	str	r3, [r0]
   12ee8:	bl	e84c <fputs@plt+0x5490>
   12eec:	mov	r0, r4
   12ef0:	pop	{r4, pc}
   12ef4:	muleq	r2, r8, lr
   12ef8:	ldr	r3, [pc, #28]	; 12f1c <fputs@plt+0x9b60>
   12efc:	push	{r4, lr}
   12f00:	mov	r4, r0
   12f04:	str	r3, [r0]
   12f08:	bl	e84c <fputs@plt+0x5490>
   12f0c:	mov	r0, r4
   12f10:	bl	209f0 <_ZdlPv@@Base>
   12f14:	mov	r0, r4
   12f18:	pop	{r4, pc}
   12f1c:	muleq	r2, r8, lr
   12f20:	movw	ip, #13900	; 0x364c
   12f24:	movw	r3, #13996	; 0x36ac
   12f28:	movt	ip, #3
   12f2c:	movt	r3, #3
   12f30:	mov	r0, #1
   12f34:	ldr	ip, [ip]
   12f38:	ldr	r3, [r3]
   12f3c:	str	ip, [r1]
   12f40:	str	r3, [r2]
   12f44:	bx	lr
   12f48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f4c:	movw	r4, #1424	; 0x590
   12f50:	movt	r4, #3
   12f54:	ldr	r7, [r0, #16]
   12f58:	sub	sp, sp, #32
   12f5c:	mov	r5, r0
   12f60:	ldr	r3, [r4]
   12f64:	cmp	r7, #0
   12f68:	str	r3, [sp, #28]
   12f6c:	bne	12fcc <fputs@plt+0x9c10>
   12f70:	ldr	r6, [r0, #28]
   12f74:	cmn	r6, #1
   12f78:	mvnne	r3, #0
   12f7c:	strne	r3, [r0, #28]
   12f80:	beq	12fa0 <fputs@plt+0x9be4>
   12f84:	ldr	r2, [sp, #28]
   12f88:	mov	r0, r6
   12f8c:	ldr	r3, [r4]
   12f90:	cmp	r2, r3
   12f94:	bne	13120 <fputs@plt+0x9d64>
   12f98:	add	sp, sp, #32
   12f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12fa0:	ldr	r6, [r0, #24]
   12fa4:	cmn	r6, #1
   12fa8:	mvnne	r3, #0
   12fac:	strne	r3, [r0, #24]
   12fb0:	bne	12f84 <fputs@plt+0x9bc8>
   12fb4:	ldr	r6, [r0, #20]
   12fb8:	cmn	r6, #1
   12fbc:	beq	12fd4 <fputs@plt+0x9c18>
   12fc0:	mvn	r3, #0
   12fc4:	str	r3, [r0, #20]
   12fc8:	b	12f84 <fputs@plt+0x9bc8>
   12fcc:	mvn	r6, #0
   12fd0:	b	12f84 <fputs@plt+0x9bc8>
   12fd4:	ldr	r0, [r0, #8]
   12fd8:	bl	914c <_IO_getc@plt>
   12fdc:	subs	r8, r0, #0
   12fe0:	blt	12ff8 <fputs@plt+0x9c3c>
   12fe4:	movw	r9, #1104	; 0x450
   12fe8:	movt	r9, #3
   12fec:	ldrb	r3, [r9, r8]
   12ff0:	cmp	r3, #0
   12ff4:	bne	13044 <fputs@plt+0x9c88>
   12ff8:	ldr	r3, [r5, #12]
   12ffc:	cmp	r3, #0
   13000:	beq	1300c <fputs@plt+0x9c50>
   13004:	cmp	r8, #46	; 0x2e
   13008:	beq	13098 <fputs@plt+0x9cdc>
   1300c:	cmp	r8, #10
   13010:	bne	13080 <fputs@plt+0x9cc4>
   13014:	movw	r3, #13996	; 0x36ac
   13018:	movt	r3, #3
   1301c:	mov	r1, #1
   13020:	mov	r6, r8
   13024:	ldr	r2, [r3]
   13028:	str	r1, [r5, #12]
   1302c:	add	r2, r2, r1
   13030:	str	r2, [r3]
   13034:	b	12f84 <fputs@plt+0x9bc8>
   13038:	ldrb	r3, [r9, r8]
   1303c:	cmp	r3, #0
   13040:	beq	1300c <fputs@plt+0x9c50>
   13044:	mov	r1, r8
   13048:	add	r0, sp, #8
   1304c:	bl	1f290 <fputs@plt+0x15ed4>
   13050:	movw	r2, #13880	; 0x3638
   13054:	movt	r2, #3
   13058:	add	r1, sp, #8
   1305c:	movw	r0, #20440	; 0x4fd8
   13060:	movt	r0, #2
   13064:	mov	r3, r2
   13068:	bl	1f708 <fputs@plt+0x1634c>
   1306c:	ldr	r0, [r5, #8]
   13070:	bl	914c <_IO_getc@plt>
   13074:	str	r7, [r5, #12]
   13078:	subs	r8, r0, #0
   1307c:	bge	13038 <fputs@plt+0x9c7c>
   13080:	cmn	r8, #1
   13084:	mov	r3, #0
   13088:	str	r3, [r5, #12]
   1308c:	beq	130c4 <fputs@plt+0x9d08>
   13090:	mov	r6, r8
   13094:	b	12f84 <fputs@plt+0x9bc8>
   13098:	ldr	r0, [r5, #8]
   1309c:	bl	914c <_IO_getc@plt>
   130a0:	cmp	r0, #80	; 0x50
   130a4:	mov	r9, r0
   130a8:	beq	13124 <fputs@plt+0x9d68>
   130ac:	cmn	r0, #1
   130b0:	beq	13090 <fputs@plt+0x9cd4>
   130b4:	ldr	r1, [r5, #8]
   130b8:	mov	r6, r8
   130bc:	bl	9194 <ungetc@plt>
   130c0:	b	12f84 <fputs@plt+0x9bc8>
   130c4:	movw	r7, #13880	; 0x3638
   130c8:	movt	r7, #3
   130cc:	mov	ip, #1
   130d0:	movw	r0, #21868	; 0x556c
   130d4:	mov	r1, r7
   130d8:	mov	r2, r7
   130dc:	mov	r3, r7
   130e0:	str	ip, [r5, #16]
   130e4:	movt	r0, #2
   130e8:	mov	r6, r8
   130ec:	bl	1f708 <fputs@plt+0x1634c>
   130f0:	ldr	r1, [r5, #32]
   130f4:	movw	r2, #13900	; 0x364c
   130f8:	movt	r2, #3
   130fc:	str	r7, [sp]
   13100:	mov	r3, r7
   13104:	ldr	r0, [r2]
   13108:	sub	r1, r1, #1
   1310c:	str	r7, [sp, #4]
   13110:	movw	r2, #21900	; 0x558c
   13114:	movt	r2, #2
   13118:	bl	1f798 <fputs@plt+0x163dc>
   1311c:	b	12f84 <fputs@plt+0x9bc8>
   13120:	bl	92b4 <__stack_chk_fail@plt>
   13124:	ldr	r0, [r5, #8]
   13128:	bl	914c <_IO_getc@plt>
   1312c:	sub	r3, r0, #69	; 0x45
   13130:	mov	r7, r0
   13134:	cmp	r3, #1
   13138:	bls	131a0 <fputs@plt+0x9de4>
   1313c:	cmp	r0, #83	; 0x53
   13140:	beq	13164 <fputs@plt+0x9da8>
   13144:	cmn	r0, #1
   13148:	beq	13154 <fputs@plt+0x9d98>
   1314c:	ldr	r1, [r5, #8]
   13150:	bl	9194 <ungetc@plt>
   13154:	mov	r3, #80	; 0x50
   13158:	mov	r6, #46	; 0x2e
   1315c:	str	r3, [r5, #20]
   13160:	b	12f84 <fputs@plt+0x9bc8>
   13164:	ldr	r0, [r5, #8]
   13168:	bl	914c <_IO_getc@plt>
   1316c:	cmn	r0, #1
   13170:	mov	sl, r0
   13174:	bne	131d8 <fputs@plt+0x9e1c>
   13178:	movw	r1, #13880	; 0x3638
   1317c:	movt	r1, #3
   13180:	movw	r0, #21856	; 0x5560
   13184:	movt	r0, #2
   13188:	mov	r3, r1
   1318c:	mov	r2, r1
   13190:	bl	1f708 <fputs@plt+0x1634c>
   13194:	mov	r3, #1
   13198:	str	r3, [r5, #16]
   1319c:	b	12f84 <fputs@plt+0x9bc8>
   131a0:	ldr	r0, [r5, #8]
   131a4:	bl	914c <_IO_getc@plt>
   131a8:	cmn	r0, #1
   131ac:	mov	sl, r0
   131b0:	bne	13214 <fputs@plt+0x9e58>
   131b4:	movw	r3, #2688	; 0xa80
   131b8:	movt	r3, #3
   131bc:	subs	r2, r7, #70	; 0x46
   131c0:	rsbs	r7, r2, #0
   131c4:	adcs	r7, r7, r2
   131c8:	mov	r2, #1
   131cc:	str	r7, [r3]
   131d0:	str	r2, [r5, #16]
   131d4:	b	12f84 <fputs@plt+0x9bc8>
   131d8:	ldr	r1, [r5, #8]
   131dc:	bl	9194 <ungetc@plt>
   131e0:	cmp	sl, #32
   131e4:	beq	13178 <fputs@plt+0x9dbc>
   131e8:	cmp	sl, #10
   131ec:	beq	13178 <fputs@plt+0x9dbc>
   131f0:	movw	r3, #2688	; 0xa80
   131f4:	movt	r3, #3
   131f8:	ldr	r3, [r3, #4]
   131fc:	cmp	r3, #0
   13200:	bne	13178 <fputs@plt+0x9dbc>
   13204:	str	r7, [r5, #20]
   13208:	mov	r6, r8
   1320c:	str	r9, [r5, #24]
   13210:	b	12f84 <fputs@plt+0x9bc8>
   13214:	ldr	r1, [r5, #8]
   13218:	bl	9194 <ungetc@plt>
   1321c:	cmp	sl, #32
   13220:	beq	131b4 <fputs@plt+0x9df8>
   13224:	cmp	sl, #10
   13228:	beq	131b4 <fputs@plt+0x9df8>
   1322c:	movw	r3, #2688	; 0xa80
   13230:	movt	r3, #3
   13234:	ldr	r2, [r3, #4]
   13238:	cmp	r2, #0
   1323c:	beq	13204 <fputs@plt+0x9e48>
   13240:	b	131bc <fputs@plt+0x9e00>
   13244:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13248:	movw	r4, #1424	; 0x590
   1324c:	movt	r4, #3
   13250:	ldr	r7, [r0, #16]
   13254:	sub	sp, sp, #24
   13258:	mov	r6, r0
   1325c:	ldr	r3, [r4]
   13260:	cmp	r7, #0
   13264:	str	r3, [sp, #20]
   13268:	bne	1334c <fputs@plt+0x9f90>
   1326c:	ldr	r5, [r0, #28]
   13270:	cmn	r5, #1
   13274:	beq	13294 <fputs@plt+0x9ed8>
   13278:	ldr	r2, [sp, #20]
   1327c:	mov	r0, r5
   13280:	ldr	r3, [r4]
   13284:	cmp	r2, r3
   13288:	bne	13384 <fputs@plt+0x9fc8>
   1328c:	add	sp, sp, #24
   13290:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13294:	ldr	r5, [r0, #24]
   13298:	cmn	r5, #1
   1329c:	bne	13278 <fputs@plt+0x9ebc>
   132a0:	ldr	r5, [r0, #20]
   132a4:	cmn	r5, #1
   132a8:	bne	13278 <fputs@plt+0x9ebc>
   132ac:	ldr	r0, [r0, #8]
   132b0:	bl	914c <_IO_getc@plt>
   132b4:	subs	r8, r0, #0
   132b8:	blt	132d0 <fputs@plt+0x9f14>
   132bc:	movw	r9, #1104	; 0x450
   132c0:	movt	r9, #3
   132c4:	ldrb	r3, [r9, r8]
   132c8:	cmp	r3, #0
   132cc:	bne	13300 <fputs@plt+0x9f44>
   132d0:	ldr	r3, [r6, #12]
   132d4:	cmp	r3, #0
   132d8:	beq	132e4 <fputs@plt+0x9f28>
   132dc:	cmp	r8, #46	; 0x2e
   132e0:	beq	13354 <fputs@plt+0x9f98>
   132e4:	cmn	r8, #1
   132e8:	beq	13278 <fputs@plt+0x9ebc>
   132ec:	ldr	r1, [r6, #8]
   132f0:	mov	r0, r8
   132f4:	bl	9194 <ungetc@plt>
   132f8:	mov	r5, r8
   132fc:	b	13278 <fputs@plt+0x9ebc>
   13300:	mov	r1, r8
   13304:	mov	r0, sp
   13308:	bl	1f290 <fputs@plt+0x15ed4>
   1330c:	movw	r2, #13880	; 0x3638
   13310:	movt	r2, #3
   13314:	mov	r1, sp
   13318:	movw	r0, #20440	; 0x4fd8
   1331c:	movt	r0, #2
   13320:	mov	r3, r2
   13324:	bl	1f708 <fputs@plt+0x1634c>
   13328:	ldr	r0, [r6, #8]
   1332c:	bl	914c <_IO_getc@plt>
   13330:	str	r7, [r6, #12]
   13334:	subs	r8, r0, #0
   13338:	blt	132e4 <fputs@plt+0x9f28>
   1333c:	ldrb	r3, [r9, r8]
   13340:	cmp	r3, #0
   13344:	beq	132ec <fputs@plt+0x9f30>
   13348:	b	13300 <fputs@plt+0x9f44>
   1334c:	mvn	r5, #0
   13350:	b	13278 <fputs@plt+0x9ebc>
   13354:	ldr	r0, [r6, #8]
   13358:	bl	914c <_IO_getc@plt>
   1335c:	cmp	r0, #80	; 0x50
   13360:	mov	r9, r0
   13364:	beq	13388 <fputs@plt+0x9fcc>
   13368:	cmn	r0, #1
   1336c:	beq	13378 <fputs@plt+0x9fbc>
   13370:	ldr	r1, [r6, #8]
   13374:	bl	9194 <ungetc@plt>
   13378:	mov	r5, #46	; 0x2e
   1337c:	str	r5, [r6, #20]
   13380:	b	13278 <fputs@plt+0x9ebc>
   13384:	bl	92b4 <__stack_chk_fail@plt>
   13388:	ldr	r0, [r6, #8]
   1338c:	bl	914c <_IO_getc@plt>
   13390:	sub	r3, r0, #69	; 0x45
   13394:	mov	r7, r0
   13398:	cmp	r3, #1
   1339c:	bls	13408 <fputs@plt+0xa04c>
   133a0:	cmp	r0, #83	; 0x53
   133a4:	beq	133cc <fputs@plt+0xa010>
   133a8:	cmn	r0, #1
   133ac:	beq	133b8 <fputs@plt+0x9ffc>
   133b0:	ldr	r1, [r6, #8]
   133b4:	bl	9194 <ungetc@plt>
   133b8:	mov	r5, #46	; 0x2e
   133bc:	mov	r3, #80	; 0x50
   133c0:	str	r5, [r6, #24]
   133c4:	str	r3, [r6, #20]
   133c8:	b	13278 <fputs@plt+0x9ebc>
   133cc:	ldr	r0, [r6, #8]
   133d0:	bl	914c <_IO_getc@plt>
   133d4:	cmn	r0, #1
   133d8:	mov	sl, r0
   133dc:	bne	13440 <fputs@plt+0xa084>
   133e0:	movw	r1, #13880	; 0x3638
   133e4:	movt	r1, #3
   133e8:	movw	r0, #21856	; 0x5560
   133ec:	movt	r0, #2
   133f0:	mov	r3, r1
   133f4:	mov	r2, r1
   133f8:	bl	1f708 <fputs@plt+0x1634c>
   133fc:	mov	r3, #1
   13400:	str	r3, [r6, #16]
   13404:	b	13278 <fputs@plt+0x9ebc>
   13408:	ldr	r0, [r6, #8]
   1340c:	bl	914c <_IO_getc@plt>
   13410:	cmn	r0, #1
   13414:	mov	sl, r0
   13418:	bne	13480 <fputs@plt+0xa0c4>
   1341c:	movw	r3, #2688	; 0xa80
   13420:	movt	r3, #3
   13424:	subs	r2, r7, #70	; 0x46
   13428:	rsbs	r7, r2, #0
   1342c:	adcs	r7, r7, r2
   13430:	mov	r2, #1
   13434:	str	r7, [r3]
   13438:	str	r2, [r6, #16]
   1343c:	b	13278 <fputs@plt+0x9ebc>
   13440:	ldr	r1, [r6, #8]
   13444:	bl	9194 <ungetc@plt>
   13448:	cmp	sl, #32
   1344c:	beq	133e0 <fputs@plt+0xa024>
   13450:	cmp	sl, #10
   13454:	beq	133e0 <fputs@plt+0xa024>
   13458:	movw	r3, #2688	; 0xa80
   1345c:	movt	r3, #3
   13460:	ldr	r3, [r3, #4]
   13464:	cmp	r3, #0
   13468:	bne	133e0 <fputs@plt+0xa024>
   1346c:	str	r7, [r6, #20]
   13470:	mov	r5, r8
   13474:	str	r9, [r6, #24]
   13478:	str	r8, [r6, #28]
   1347c:	b	13278 <fputs@plt+0x9ebc>
   13480:	ldr	r1, [r6, #8]
   13484:	bl	9194 <ungetc@plt>
   13488:	cmp	sl, #32
   1348c:	beq	1341c <fputs@plt+0xa060>
   13490:	cmp	sl, #10
   13494:	beq	1341c <fputs@plt+0xa060>
   13498:	movw	r3, #2688	; 0xa80
   1349c:	movt	r3, #3
   134a0:	ldr	r2, [r3, #4]
   134a4:	cmp	r2, #0
   134a8:	beq	1346c <fputs@plt+0xa0b0>
   134ac:	b	13424 <fputs@plt+0xa068>
   134b0:	push	{r3, r4, r5, lr}
   134b4:	mov	r4, r0
   134b8:	mov	r5, r1
   134bc:	bl	f540 <fputs@plt+0x6184>
   134c0:	movw	r3, #13996	; 0x36ac
   134c4:	movt	r3, #3
   134c8:	ldr	ip, [pc, #52]	; 13504 <fputs@plt+0xa148>
   134cc:	mov	r0, #1
   134d0:	ldr	r2, [r3]
   134d4:	mov	r1, #0
   134d8:	mvn	r3, #0
   134dc:	str	r0, [r4, #12]
   134e0:	str	r5, [r4, #8]
   134e4:	mov	r0, r4
   134e8:	str	ip, [r4]
   134ec:	str	r1, [r4, #16]
   134f0:	str	r2, [r4, #32]
   134f4:	str	r3, [r4, #28]
   134f8:	str	r3, [r4, #24]
   134fc:	str	r3, [r4, #20]
   13500:	pop	{r3, r4, r5, pc}
   13504:	andeq	r5, r2, r0, lsl #10
   13508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1350c:	sub	sp, sp, #52	; 0x34
   13510:	movw	r1, #1424	; 0x590
   13514:	movt	r1, #3
   13518:	str	r1, [sp, #4]
   1351c:	movw	r1, #20988	; 0x51fc
   13520:	ldr	r2, [sp, #4]
   13524:	movt	r1, #2
   13528:	mov	r4, r0
   1352c:	ldr	r3, [r2]
   13530:	str	r3, [sp, #44]	; 0x2c
   13534:	bl	9380 <strcmp@plt>
   13538:	cmp	r0, #0
   1353c:	bne	139b8 <fputs@plt+0xa5fc>
   13540:	movw	r3, #1480	; 0x5c8
   13544:	movt	r3, #3
   13548:	movw	fp, #2688	; 0xa80
   1354c:	movt	fp, #3
   13550:	ldr	r7, [r3]
   13554:	ldr	r0, [fp, #8]
   13558:	mov	r2, #1
   1355c:	mov	r1, r4
   13560:	movw	sl, #13996	; 0x36ac
   13564:	movw	r6, #1104	; 0x450
   13568:	movt	sl, #3
   1356c:	ldr	r3, [r0]
   13570:	movw	r9, #1484	; 0x5cc
   13574:	movt	r6, #3
   13578:	movt	r9, #3
   1357c:	mov	r8, #0
   13580:	ldr	r3, [r3, #52]	; 0x34
   13584:	blx	r3
   13588:	movw	r3, #13900	; 0x364c
   1358c:	movt	r3, #3
   13590:	mov	r2, #1
   13594:	str	r2, [sl]
   13598:	str	r4, [r3]
   1359c:	mov	r0, r7
   135a0:	bl	914c <_IO_getc@plt>
   135a4:	subs	r4, r0, #0
   135a8:	blt	136fc <fputs@plt+0xa340>
   135ac:	ldrb	r3, [r6, r4]
   135b0:	cmp	r3, #0
   135b4:	beq	13600 <fputs@plt+0xa244>
   135b8:	add	r5, sp, #24
   135bc:	mov	r1, r4
   135c0:	mov	r0, r5
   135c4:	bl	1f290 <fputs@plt+0x15ed4>
   135c8:	movw	r2, #13880	; 0x3638
   135cc:	movt	r2, #3
   135d0:	mov	r1, r5
   135d4:	movw	r0, #20440	; 0x4fd8
   135d8:	movt	r0, #2
   135dc:	mov	r3, r2
   135e0:	bl	1f708 <fputs@plt+0x1634c>
   135e4:	mov	r0, r7
   135e8:	bl	914c <_IO_getc@plt>
   135ec:	subs	r4, r0, #0
   135f0:	blt	136fc <fputs@plt+0xa340>
   135f4:	ldrb	r3, [r6, r4]
   135f8:	cmp	r3, #0
   135fc:	bne	135bc <fputs@plt+0xa200>
   13600:	cmp	r8, #6
   13604:	ldrls	pc, [pc, r8, lsl #2]
   13608:	b	137fc <fputs@plt+0xa440>
   1360c:	andeq	r3, r1, r8, lsl #15
   13610:	andeq	r3, r1, r0, ror #14
   13614:	andeq	r3, r1, r0, asr #15
   13618:	muleq	r1, r8, r7
   1361c:	andeq	r3, r1, ip, lsr #14
   13620:	andeq	r3, r1, r0, lsr #13
   13624:	andeq	r3, r1, r8, lsr #12
   13628:	cmp	r4, #10
   1362c:	cmpne	r4, #32
   13630:	beq	13640 <fputs@plt+0xa284>
   13634:	ldr	r3, [fp, #4]
   13638:	cmp	r3, #0
   1363c:	beq	138a8 <fputs@plt+0xa4ec>
   13640:	add	r5, sp, #24
   13644:	mov	r0, r5
   13648:	bl	20b8c <_ZdlPv@@Base+0x19c>
   1364c:	b	1367c <fputs@plt+0xa2c0>
   13650:	ldr	r2, [sp, #24]
   13654:	cmp	r4, #10
   13658:	add	r1, r3, #1
   1365c:	str	r1, [sp, #28]
   13660:	strb	r8, [r2, r3]
   13664:	beq	13810 <fputs@plt+0xa454>
   13668:	mov	r0, r7
   1366c:	bl	914c <_IO_getc@plt>
   13670:	cmn	r0, #1
   13674:	mov	r4, r0
   13678:	beq	1381c <fputs@plt+0xa460>
   1367c:	ldr	r3, [sp, #28]
   13680:	uxtb	r8, r4
   13684:	ldr	r2, [sp, #32]
   13688:	cmp	r3, r2
   1368c:	blt	13650 <fputs@plt+0xa294>
   13690:	mov	r0, r5
   13694:	bl	20e3c <_ZdlPv@@Base+0x44c>
   13698:	ldr	r3, [sp, #28]
   1369c:	b	13650 <fputs@plt+0xa294>
   136a0:	cmp	r4, #102	; 0x66
   136a4:	moveq	r8, #6
   136a8:	beq	1359c <fputs@plt+0xa1e0>
   136ac:	ldr	r1, [r9]
   136b0:	mov	r0, #46	; 0x2e
   136b4:	bl	9368 <_IO_putc@plt>
   136b8:	mov	r0, #108	; 0x6c
   136bc:	ldr	r1, [r9]
   136c0:	bl	9368 <_IO_putc@plt>
   136c4:	mov	r0, r4
   136c8:	ldr	r1, [r9]
   136cc:	bl	9368 <_IO_putc@plt>
   136d0:	cmp	r4, #10
   136d4:	movne	r8, #1
   136d8:	bne	1359c <fputs@plt+0xa1e0>
   136dc:	ldr	r3, [sl]
   136e0:	mov	r8, #0
   136e4:	add	r3, r3, #1
   136e8:	str	r3, [sl]
   136ec:	mov	r0, r7
   136f0:	bl	914c <_IO_getc@plt>
   136f4:	subs	r4, r0, #0
   136f8:	bge	135ac <fputs@plt+0xa1f0>
   136fc:	cmn	r4, #1
   13700:	bne	13600 <fputs@plt+0xa244>
   13704:	sub	r8, r8, #1
   13708:	cmp	r8, #5
   1370c:	ldrls	pc, [pc, r8, lsl #2]
   13710:	b	138d8 <fputs@plt+0xa51c>
   13714:	andeq	r3, r1, r0, lsr #19
   13718:	andeq	r3, r1, ip, ror r9
   1371c:	andeq	r3, r1, r8, asr r9
   13720:	andeq	r3, r1, r4, lsr r9
   13724:	andeq	r3, r1, r0, lsl r9
   13728:			; <UNDEFINED> instruction: 0x000138b8
   1372c:	cmp	r4, #10
   13730:	cmpne	r4, #32
   13734:	beq	13744 <fputs@plt+0xa388>
   13738:	ldr	r3, [fp, #4]
   1373c:	cmp	r3, #0
   13740:	beq	1387c <fputs@plt+0xa4c0>
   13744:	mov	r1, r7
   13748:	mov	r0, r4
   1374c:	bl	9194 <ungetc@plt>
   13750:	mov	r0, r7
   13754:	bl	13a54 <fputs@plt+0xa698>
   13758:	mov	r8, #0
   1375c:	b	1359c <fputs@plt+0xa1e0>
   13760:	mov	r0, r4
   13764:	ldr	r1, [r9]
   13768:	bl	9368 <_IO_putc@plt>
   1376c:	cmp	r4, #10
   13770:	bne	1359c <fputs@plt+0xa1e0>
   13774:	ldr	r3, [sl]
   13778:	mov	r8, #0
   1377c:	add	r3, r3, #1
   13780:	str	r3, [sl]
   13784:	b	136ec <fputs@plt+0xa330>
   13788:	cmp	r4, #46	; 0x2e
   1378c:	moveq	r8, #2
   13790:	bne	136c4 <fputs@plt+0xa308>
   13794:	b	1359c <fputs@plt+0xa1e0>
   13798:	cmp	r4, #83	; 0x53
   1379c:	moveq	r8, #4
   137a0:	beq	1359c <fputs@plt+0xa1e0>
   137a4:	ldr	r1, [r9]
   137a8:	mov	r0, #46	; 0x2e
   137ac:	bl	9368 <_IO_putc@plt>
   137b0:	ldr	r1, [r9]
   137b4:	mov	r0, #80	; 0x50
   137b8:	bl	9368 <_IO_putc@plt>
   137bc:	b	136c4 <fputs@plt+0xa308>
   137c0:	cmp	r4, #80	; 0x50
   137c4:	moveq	r8, #3
   137c8:	beq	1359c <fputs@plt+0xa1e0>
   137cc:	movw	r3, #1076	; 0x434
   137d0:	movt	r3, #3
   137d4:	ldr	r3, [r3]
   137d8:	cmp	r3, #0
   137dc:	beq	137ec <fputs@plt+0xa430>
   137e0:	cmp	r4, #108	; 0x6c
   137e4:	moveq	r8, #5
   137e8:	beq	1359c <fputs@plt+0xa1e0>
   137ec:	ldr	r1, [r9]
   137f0:	mov	r0, #46	; 0x2e
   137f4:	bl	9368 <_IO_putc@plt>
   137f8:	b	136c4 <fputs@plt+0xa308>
   137fc:	movw	r1, #21932	; 0x55ac
   13800:	movw	r0, #427	; 0x1ab
   13804:	movt	r1, #2
   13808:	bl	1eec8 <fputs@plt+0x15b0c>
   1380c:	b	1359c <fputs@plt+0xa1e0>
   13810:	ldr	r3, [sl]
   13814:	add	r3, r3, #1
   13818:	str	r3, [sl]
   1381c:	ldr	r3, [sp, #28]
   13820:	ldr	r2, [sp, #32]
   13824:	cmp	r3, r2
   13828:	bge	1386c <fputs@plt+0xa4b0>
   1382c:	ldr	r2, [sp, #24]
   13830:	add	r0, r3, #1
   13834:	mov	r1, #0
   13838:	str	r0, [sp, #28]
   1383c:	strb	r1, [r2, r3]
   13840:	ldr	r0, [sp, #24]
   13844:	bl	207b0 <fputs@plt+0x173f4>
   13848:	movw	r1, #21920	; 0x55a0
   1384c:	mov	r0, #1
   13850:	movt	r1, #2
   13854:	ldr	r2, [sp, #24]
   13858:	bl	9140 <__printf_chk@plt>
   1385c:	mov	r0, r5
   13860:	mov	r8, #0
   13864:	bl	20cf0 <_ZdlPv@@Base+0x300>
   13868:	b	1359c <fputs@plt+0xa1e0>
   1386c:	mov	r0, r5
   13870:	bl	20e3c <_ZdlPv@@Base+0x44c>
   13874:	ldr	r3, [sp, #28]
   13878:	b	1382c <fputs@plt+0xa470>
   1387c:	movw	r0, #21916	; 0x559c
   13880:	movt	r0, #2
   13884:	mov	r1, #1
   13888:	mov	r2, #3
   1388c:	ldr	r3, [r9]
   13890:	mov	r8, r1
   13894:	bl	926c <fwrite@plt>
   13898:	mov	r0, r4
   1389c:	ldr	r1, [r9]
   138a0:	bl	9368 <_IO_putc@plt>
   138a4:	b	1359c <fputs@plt+0xa1e0>
   138a8:	movw	r0, #21928	; 0x55a8
   138ac:	mov	r1, #1
   138b0:	movt	r0, #2
   138b4:	b	13888 <fputs@plt+0xa4cc>
   138b8:	movw	r3, #1484	; 0x5cc
   138bc:	movt	r3, #3
   138c0:	movw	r0, #21964	; 0x55cc
   138c4:	mov	r1, #1
   138c8:	ldr	r3, [r3]
   138cc:	movt	r0, #2
   138d0:	mov	r2, #4
   138d4:	bl	926c <fwrite@plt>
   138d8:	movw	r3, #1480	; 0x5c8
   138dc:	movt	r3, #3
   138e0:	ldr	r3, [r3]
   138e4:	cmp	r7, r3
   138e8:	beq	138f4 <fputs@plt+0xa538>
   138ec:	mov	r0, r7
   138f0:	bl	9128 <fclose@plt>
   138f4:	ldr	r1, [sp, #4]
   138f8:	ldr	r2, [sp, #44]	; 0x2c
   138fc:	ldr	r3, [r1]
   13900:	cmp	r2, r3
   13904:	bne	13a44 <fputs@plt+0xa688>
   13908:	add	sp, sp, #52	; 0x34
   1390c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13910:	movw	r3, #1484	; 0x5cc
   13914:	movt	r3, #3
   13918:	movw	r0, #21960	; 0x55c8
   1391c:	mov	r1, #1
   13920:	ldr	r3, [r3]
   13924:	mov	r2, #3
   13928:	movt	r0, #2
   1392c:	bl	926c <fwrite@plt>
   13930:	b	138d8 <fputs@plt+0xa51c>
   13934:	movw	r3, #1484	; 0x5cc
   13938:	movt	r3, #3
   1393c:	movw	r0, #21952	; 0x55c0
   13940:	mov	r1, #1
   13944:	ldr	r3, [r3]
   13948:	mov	r2, #4
   1394c:	movt	r0, #2
   13950:	bl	926c <fwrite@plt>
   13954:	b	138d8 <fputs@plt+0xa51c>
   13958:	movw	r3, #1484	; 0x5cc
   1395c:	movt	r3, #3
   13960:	movw	r0, #21948	; 0x55bc
   13964:	mov	r1, #1
   13968:	ldr	r3, [r3]
   1396c:	mov	r2, #3
   13970:	movt	r0, #2
   13974:	bl	926c <fwrite@plt>
   13978:	b	138d8 <fputs@plt+0xa51c>
   1397c:	movw	r3, #1484	; 0x5cc
   13980:	movt	r3, #3
   13984:	movw	r0, #21944	; 0x55b8
   13988:	mov	r1, #1
   1398c:	ldr	r3, [r3]
   13990:	mov	r2, #2
   13994:	movt	r0, #2
   13998:	bl	926c <fwrite@plt>
   1399c:	b	138d8 <fputs@plt+0xa51c>
   139a0:	movw	r3, #1484	; 0x5cc
   139a4:	movt	r3, #3
   139a8:	mov	r0, #10
   139ac:	ldr	r1, [r3]
   139b0:	bl	9368 <_IO_putc@plt>
   139b4:	b	138d8 <fputs@plt+0xa51c>
   139b8:	bl	9398 <__errno_location@plt>
   139bc:	mov	r3, #0
   139c0:	movw	r1, #21076	; 0x5254
   139c4:	movt	r1, #2
   139c8:	movw	fp, #2688	; 0xa80
   139cc:	movt	fp, #3
   139d0:	str	r3, [r0]
   139d4:	mov	r6, r0
   139d8:	mov	r0, r4
   139dc:	bl	917c <fopen@plt>
   139e0:	subs	r7, r0, #0
   139e4:	bne	13554 <fputs@plt+0xa198>
   139e8:	ldr	r0, [fp, #8]
   139ec:	cmp	r0, #0
   139f0:	beq	13a00 <fputs@plt+0xa644>
   139f4:	ldr	r2, [r0]
   139f8:	ldr	r3, [r2, #4]
   139fc:	blx	r3
   13a00:	mov	r1, r4
   13a04:	add	r0, sp, #8
   13a08:	bl	1f264 <fputs@plt+0x15ea8>
   13a0c:	ldr	r0, [r6]
   13a10:	bl	90b0 <strerror@plt>
   13a14:	add	r5, sp, #24
   13a18:	mov	r1, r0
   13a1c:	mov	r0, r5
   13a20:	bl	1f264 <fputs@plt+0x15ea8>
   13a24:	add	r1, sp, #8
   13a28:	mov	r2, r5
   13a2c:	movw	r0, #20832	; 0x5160
   13a30:	movw	r3, #13880	; 0x3638
   13a34:	movt	r0, #2
   13a38:	movt	r3, #3
   13a3c:	bl	1f768 <fputs@plt+0x163ac>
   13a40:	b	13554 <fputs@plt+0xa198>
   13a44:	bl	92b4 <__stack_chk_fail@plt>
   13a48:	mov	r0, r5
   13a4c:	bl	20cf0 <_ZdlPv@@Base+0x300>
   13a50:	bl	9188 <__cxa_end_cleanup@plt>
   13a54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a58:	movw	r7, #2688	; 0xa80
   13a5c:	movt	r7, #3
   13a60:	movw	r9, #1424	; 0x590
   13a64:	movt	r9, #3
   13a68:	mov	r1, #0
   13a6c:	ldr	r3, [r7, #12]
   13a70:	sub	sp, sp, #32
   13a74:	ldr	r2, [r9]
   13a78:	mov	r5, r0
   13a7c:	cmp	r3, r1
   13a80:	str	r1, [r7]
   13a84:	str	r2, [sp, #28]
   13a88:	beq	13a94 <fputs@plt+0xa6d8>
   13a8c:	mov	r0, r3
   13a90:	bl	92f0 <_ZdaPv@plt>
   13a94:	movw	r0, #21972	; 0x55d4
   13a98:	movt	r0, #2
   13a9c:	bl	214b4 <_ZdlPv@@Base+0xac4>
   13aa0:	str	r0, [r7, #12]
   13aa4:	mov	r0, r5
   13aa8:	bl	914c <_IO_getc@plt>
   13aac:	cmp	r0, #32
   13ab0:	mov	r4, r0
   13ab4:	beq	13aa4 <fputs@plt+0xa6e8>
   13ab8:	cmp	r0, #60	; 0x3c
   13abc:	beq	13d3c <fputs@plt+0xa980>
   13ac0:	ldr	r0, [r7, #8]
   13ac4:	movw	sl, #13900	; 0x364c
   13ac8:	movw	r8, #13996	; 0x36ac
   13acc:	movt	sl, #3
   13ad0:	movt	r8, #3
   13ad4:	add	r6, sp, #16
   13ad8:	ldr	r3, [r0]
   13adc:	ldr	r1, [sl]
   13ae0:	ldr	r2, [r8]
   13ae4:	ldr	r3, [r3, #52]	; 0x34
   13ae8:	blx	r3
   13aec:	mov	r0, r6
   13af0:	bl	20b8c <_ZdlPv@@Base+0x19c>
   13af4:	cmn	r4, #1
   13af8:	bne	13b24 <fputs@plt+0xa768>
   13afc:	b	13bc4 <fputs@plt+0xa808>
   13b00:	ldr	r2, [sp, #16]
   13b04:	add	r1, r3, #1
   13b08:	mov	r0, r5
   13b0c:	str	r1, [sp, #20]
   13b10:	strb	r4, [r2, r3]
   13b14:	bl	914c <_IO_getc@plt>
   13b18:	cmn	r0, #1
   13b1c:	mov	r4, r0
   13b20:	beq	13bc4 <fputs@plt+0xa808>
   13b24:	cmp	r4, #10
   13b28:	ldr	r3, [sp, #20]
   13b2c:	beq	13be4 <fputs@plt+0xa828>
   13b30:	ldr	r2, [sp, #24]
   13b34:	uxtb	r4, r4
   13b38:	cmp	r3, r2
   13b3c:	blt	13b00 <fputs@plt+0xa744>
   13b40:	mov	r0, r6
   13b44:	bl	20e3c <_ZdlPv@@Base+0x44c>
   13b48:	ldr	r3, [sp, #20]
   13b4c:	b	13b00 <fputs@plt+0xa744>
   13b50:	cmp	r0, #32
   13b54:	bne	13b6c <fputs@plt+0xa7b0>
   13b58:	mov	r0, r5
   13b5c:	bl	914c <_IO_getc@plt>
   13b60:	cmp	r0, #10
   13b64:	cmnne	r0, #1
   13b68:	bne	13b58 <fputs@plt+0xa79c>
   13b6c:	cmp	r0, #10
   13b70:	beq	13e38 <fputs@plt+0xaa7c>
   13b74:	ldr	r3, [sp, #20]
   13b78:	cmp	r3, #0
   13b7c:	bne	13de0 <fputs@plt+0xaa24>
   13b80:	movw	r1, #13880	; 0x3638
   13b84:	movt	r1, #3
   13b88:	movw	r0, #21980	; 0x55dc
   13b8c:	movt	r0, #2
   13b90:	mov	r2, r1
   13b94:	mov	r3, r1
   13b98:	bl	1f708 <fputs@plt+0x1634c>
   13b9c:	movw	r2, #13900	; 0x364c
   13ba0:	movw	r3, #13996	; 0x36ac
   13ba4:	movt	r2, #3
   13ba8:	movt	r3, #3
   13bac:	ldr	r1, [r2]
   13bb0:	ldr	r2, [r3]
   13bb4:	ldr	r0, [r7, #8]
   13bb8:	ldr	r3, [r0]
   13bbc:	ldr	r3, [r3, #52]	; 0x34
   13bc0:	blx	r3
   13bc4:	mov	r0, r6
   13bc8:	bl	20cf0 <_ZdlPv@@Base+0x300>
   13bcc:	ldr	r2, [sp, #28]
   13bd0:	ldr	r3, [r9]
   13bd4:	cmp	r2, r3
   13bd8:	bne	13e84 <fputs@plt+0xaac8>
   13bdc:	add	sp, sp, #32
   13be0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13be4:	ldr	r1, [sp, #24]
   13be8:	ldr	r2, [r8]
   13bec:	cmp	r3, r1
   13bf0:	add	r2, r2, #1
   13bf4:	str	r2, [r8]
   13bf8:	bge	13dac <fputs@plt+0xa9f0>
   13bfc:	ldr	r2, [sp, #16]
   13c00:	add	r0, r3, #1
   13c04:	mov	r1, #0
   13c08:	str	r0, [sp, #20]
   13c0c:	strb	r1, [r2, r3]
   13c10:	ldr	r3, [sp, #20]
   13c14:	cmp	r3, r1
   13c18:	bgt	13c2c <fputs@plt+0xa870>
   13c1c:	movw	r1, #20472	; 0x4ff8
   13c20:	mov	r0, #99	; 0x63
   13c24:	movt	r1, #2
   13c28:	bl	1eec8 <fputs@plt+0x15b0c>
   13c2c:	movw	r1, #22008	; 0x55f8
   13c30:	ldr	r0, [sp, #16]
   13c34:	movt	r1, #2
   13c38:	mov	r2, sp
   13c3c:	add	r3, sp, #8
   13c40:	bl	920c <sscanf@plt>
   13c44:	cmp	r0, #1
   13c48:	beq	13dd0 <fputs@plt+0xaa14>
   13c4c:	cmp	r0, #2
   13c50:	beq	13dbc <fputs@plt+0xaa00>
   13c54:	vldr	d7, [pc, #556]	; 13e88 <fputs@plt+0xaacc>
   13c58:	vmov.f64	d1, d7
   13c5c:	vstr	d7, [sp]
   13c60:	vstr	d7, [sp, #8]
   13c64:	vmov.f64	d0, d7
   13c68:	ldr	r0, [r7, #8]
   13c6c:	bl	14dc4 <fputs@plt+0xba08>
   13c70:	ldr	r0, [r7, #8]
   13c74:	ldr	r1, [sp, #16]
   13c78:	bl	14dd0 <fputs@plt+0xba14>
   13c7c:	mov	r0, #36	; 0x24
   13c80:	bl	209a0 <_Znwj@@Base>
   13c84:	mov	r4, r0
   13c88:	bl	f540 <fputs@plt+0x6184>
   13c8c:	ldr	r0, [pc, #508]	; 13e90 <fputs@plt+0xaad4>
   13c90:	mvn	r3, #0
   13c94:	ldr	ip, [r8]
   13c98:	mov	r1, #1
   13c9c:	mov	r2, #0
   13ca0:	str	r5, [r4, #8]
   13ca4:	str	r0, [r4]
   13ca8:	mov	r0, r4
   13cac:	str	ip, [r4, #32]
   13cb0:	str	r1, [r4, #12]
   13cb4:	str	r2, [r4, #16]
   13cb8:	str	r3, [r4, #28]
   13cbc:	str	r3, [r4, #24]
   13cc0:	str	r3, [r4, #20]
   13cc4:	bl	f648 <fputs@plt+0x628c>
   13cc8:	bl	a6f8 <fputs@plt+0x133c>
   13ccc:	cmp	r0, #0
   13cd0:	beq	13cf8 <fputs@plt+0xa93c>
   13cd4:	movw	r1, #13880	; 0x3638
   13cd8:	movt	r1, #3
   13cdc:	movw	r0, #22016	; 0x5600
   13ce0:	movt	r0, #2
   13ce4:	mov	r2, r1
   13ce8:	mov	r3, r1
   13cec:	mov	ip, #1
   13cf0:	str	ip, [r7, #16]
   13cf4:	bl	1024c <fputs@plt+0x6e90>
   13cf8:	bl	a148 <fputs@plt+0xd8c>
   13cfc:	bl	f6ec <fputs@plt+0x6330>
   13d00:	mov	r0, r5
   13d04:	bl	914c <_IO_getc@plt>
   13d08:	cmn	r0, #1
   13d0c:	beq	13dc8 <fputs@plt+0xaa0c>
   13d10:	cmp	r0, #10
   13d14:	bne	13d00 <fputs@plt+0xa944>
   13d18:	ldr	r2, [r8]
   13d1c:	add	r2, r2, #1
   13d20:	str	r2, [r8]
   13d24:	ldr	r0, [r7, #8]
   13d28:	ldr	r1, [sl]
   13d2c:	ldr	r3, [r0]
   13d30:	ldr	r3, [r3, #52]	; 0x34
   13d34:	blx	r3
   13d38:	b	13bc4 <fputs@plt+0xa808>
   13d3c:	add	r6, sp, #16
   13d40:	mov	r0, r6
   13d44:	bl	20b8c <_ZdlPv@@Base+0x19c>
   13d48:	mov	r0, r5
   13d4c:	bl	914c <_IO_getc@plt>
   13d50:	cmp	r0, #32
   13d54:	beq	13d48 <fputs@plt+0xa98c>
   13d58:	b	13d80 <fputs@plt+0xa9c4>
   13d5c:	mov	r0, r6
   13d60:	bl	20e3c <_ZdlPv@@Base+0x44c>
   13d64:	ldr	r2, [sp, #20]
   13d68:	ldr	r3, [sp, #16]
   13d6c:	add	r1, r2, #1
   13d70:	mov	r0, r5
   13d74:	str	r1, [sp, #20]
   13d78:	strb	r4, [r3, r2]
   13d7c:	bl	914c <_IO_getc@plt>
   13d80:	cmp	r0, #32
   13d84:	cmnne	r0, #1
   13d88:	beq	13b50 <fputs@plt+0xa794>
   13d8c:	cmp	r0, #10
   13d90:	beq	13e38 <fputs@plt+0xaa7c>
   13d94:	ldr	r2, [sp, #20]
   13d98:	uxtb	r4, r0
   13d9c:	ldr	r3, [sp, #24]
   13da0:	cmp	r2, r3
   13da4:	blt	13d68 <fputs@plt+0xa9ac>
   13da8:	b	13d5c <fputs@plt+0xa9a0>
   13dac:	mov	r0, r6
   13db0:	bl	20e3c <_ZdlPv@@Base+0x44c>
   13db4:	ldr	r3, [sp, #20]
   13db8:	b	13bfc <fputs@plt+0xa840>
   13dbc:	vldr	d0, [sp]
   13dc0:	vldr	d1, [sp, #8]
   13dc4:	b	13c68 <fputs@plt+0xa8ac>
   13dc8:	ldr	r2, [r8]
   13dcc:	b	13d24 <fputs@plt+0xa968>
   13dd0:	vldr	d1, [pc, #176]	; 13e88 <fputs@plt+0xaacc>
   13dd4:	vldr	d0, [sp]
   13dd8:	vstr	d1, [sp, #8]
   13ddc:	b	13c68 <fputs@plt+0xa8ac>
   13de0:	ldr	r2, [sp, #24]
   13de4:	cmp	r3, r2
   13de8:	bge	13e50 <fputs@plt+0xaa94>
   13dec:	ldr	r2, [sp, #16]
   13df0:	add	r0, r3, #1
   13df4:	mov	r1, #0
   13df8:	str	r0, [sp, #20]
   13dfc:	movw	sl, #13900	; 0x364c
   13e00:	movw	r8, #13996	; 0x36ac
   13e04:	strb	r1, [r2, r3]
   13e08:	movt	sl, #3
   13e0c:	movt	r8, #3
   13e10:	ldr	r0, [sp, #16]
   13e14:	ldr	r5, [sl]
   13e18:	ldr	r4, [r8]
   13e1c:	bl	214b4 <_ZdlPv@@Base+0xac4>
   13e20:	bl	13508 <fputs@plt+0xa14c>
   13e24:	mov	r1, r5
   13e28:	mov	r2, r4
   13e2c:	str	r5, [sl]
   13e30:	str	r4, [r8]
   13e34:	b	13bb4 <fputs@plt+0xa7f8>
   13e38:	movw	r3, #13996	; 0x36ac
   13e3c:	movt	r3, #3
   13e40:	ldr	r2, [r3]
   13e44:	add	r2, r2, #1
   13e48:	str	r2, [r3]
   13e4c:	b	13b74 <fputs@plt+0xa7b8>
   13e50:	mov	r0, r6
   13e54:	bl	20e3c <_ZdlPv@@Base+0x44c>
   13e58:	ldr	r3, [sp, #20]
   13e5c:	b	13dec <fputs@plt+0xaa30>
   13e60:	mov	r0, r4
   13e64:	bl	209f0 <_ZdlPv@@Base>
   13e68:	mov	r0, r6
   13e6c:	bl	20cf0 <_ZdlPv@@Base+0x300>
   13e70:	bl	9188 <__cxa_end_cleanup@plt>
   13e74:	mov	r0, r6
   13e78:	bl	20cf0 <_ZdlPv@@Base+0x300>
   13e7c:	bl	9188 <__cxa_end_cleanup@plt>
   13e80:	b	13e68 <fputs@plt+0xaaac>
   13e84:	bl	92b4 <__stack_chk_fail@plt>
	...
   13e90:	andeq	r5, r2, r0, lsl #10
   13e94:	push	{r4, r5, r6, lr}
   13e98:	movw	r4, #14000	; 0x36b0
   13e9c:	movt	r4, #3
   13ea0:	mov	r5, r0
   13ea4:	mov	r1, #1
   13ea8:	movw	r2, #22044	; 0x561c
   13eac:	ldr	r3, [r4]
   13eb0:	movt	r2, #2
   13eb4:	bl	92c0 <__fprintf_chk@plt>
   13eb8:	mov	r0, r5
   13ebc:	ldr	r3, [r4]
   13ec0:	movw	r2, #22084	; 0x5644
   13ec4:	mov	r1, #1
   13ec8:	movt	r2, #2
   13ecc:	pop	{r4, r5, r6, lr}
   13ed0:	b	92c0 <__fprintf_chk@plt>
   13ed4:	nop	{0}
   13ed8:	ldr	r3, [pc, #20]	; 13ef4 <fputs@plt+0xab38>
   13edc:	push	{r4, lr}
   13ee0:	mov	r4, r0
   13ee4:	str	r3, [r0]
   13ee8:	bl	e418 <fputs@plt+0x505c>
   13eec:	mov	r0, r4
   13ef0:	pop	{r4, pc}
   13ef4:	andeq	r5, r2, r0, lsl #10
   13ef8:	ldr	r3, [pc, #28]	; 13f1c <fputs@plt+0xab60>
   13efc:	push	{r4, lr}
   13f00:	mov	r4, r0
   13f04:	str	r3, [r0]
   13f08:	bl	e418 <fputs@plt+0x505c>
   13f0c:	mov	r0, r4
   13f10:	bl	209f0 <_ZdlPv@@Base>
   13f14:	mov	r0, r4
   13f18:	pop	{r4, pc}
   13f1c:	andeq	r5, r2, r0, lsl #10
   13f20:	mov	r0, #0
   13f24:	bx	lr
   13f28:	bx	lr
   13f2c:	bx	lr
   13f30:	ldr	r3, [pc, #4]	; 13f3c <fputs@plt+0xab80>
   13f34:	str	r3, [r0]
   13f38:	bx	lr
   13f3c:	andeq	r5, r2, r8, lsr #16
   13f40:	bx	lr
   13f44:	bx	lr
   13f48:	bx	lr
   13f4c:	mov	r0, #0
   13f50:	bx	lr
   13f54:	bx	lr
   13f58:	vldr	d0, [pc, #16]	; 13f70 <fputs@plt+0xabb4>
   13f5c:	sub	sp, sp, #32
   13f60:	vmov.f64	d1, d0
   13f64:	add	sp, sp, #32
   13f68:	bx	lr
   13f6c:	nop	{0}
	...
   13f78:	ldr	r3, [r0]
   13f7c:	push	{lr}		; (str lr, [sp, #-4]!)
   13f80:	sub	sp, sp, #36	; 0x24
   13f84:	ldr	r3, [r3, #8]
   13f88:	blx	r3
   13f8c:	add	sp, sp, #36	; 0x24
   13f90:	pop	{pc}		; (ldr pc, [sp], #4)
   13f94:	ldr	r3, [r0]
   13f98:	push	{lr}		; (str lr, [sp, #-4]!)
   13f9c:	sub	sp, sp, #36	; 0x24
   13fa0:	ldr	r3, [r3, #8]
   13fa4:	blx	r3
   13fa8:	add	sp, sp, #36	; 0x24
   13fac:	pop	{pc}		; (ldr pc, [sp], #4)
   13fb0:	ldr	r3, [r0]
   13fb4:	push	{lr}		; (str lr, [sp, #-4]!)
   13fb8:	sub	sp, sp, #36	; 0x24
   13fbc:	ldr	r3, [r3, #8]
   13fc0:	blx	r3
   13fc4:	add	sp, sp, #36	; 0x24
   13fc8:	pop	{pc}		; (ldr pc, [sp], #4)
   13fcc:	ldr	r3, [r0]
   13fd0:	push	{lr}		; (str lr, [sp, #-4]!)
   13fd4:	sub	sp, sp, #36	; 0x24
   13fd8:	ldr	r3, [r3, #8]
   13fdc:	blx	r3
   13fe0:	add	sp, sp, #36	; 0x24
   13fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   13fe8:	ldr	r3, [r0]
   13fec:	push	{lr}		; (str lr, [sp, #-4]!)
   13ff0:	sub	sp, sp, #36	; 0x24
   13ff4:	ldr	r3, [r3, #8]
   13ff8:	blx	r3
   13ffc:	add	sp, sp, #36	; 0x24
   14000:	pop	{pc}		; (ldr pc, [sp], #4)
   14004:	ldr	r3, [r0]
   14008:	push	{lr}		; (str lr, [sp, #-4]!)
   1400c:	sub	sp, sp, #36	; 0x24
   14010:	ldr	r3, [r3, #8]
   14014:	blx	r3
   14018:	add	sp, sp, #36	; 0x24
   1401c:	pop	{pc}		; (ldr pc, [sp], #4)
   14020:	ldr	r3, [r0]
   14024:	push	{lr}		; (str lr, [sp, #-4]!)
   14028:	sub	sp, sp, #36	; 0x24
   1402c:	ldr	r3, [r3, #8]
   14030:	blx	r3
   14034:	add	sp, sp, #36	; 0x24
   14038:	pop	{pc}		; (ldr pc, [sp], #4)
   1403c:	ldr	r3, [r0]
   14040:	push	{lr}		; (str lr, [sp, #-4]!)
   14044:	sub	sp, sp, #36	; 0x24
   14048:	ldr	r3, [r3, #8]
   1404c:	blx	r3
   14050:	add	sp, sp, #36	; 0x24
   14054:	pop	{pc}		; (ldr pc, [sp], #4)
   14058:	ldr	r3, [r0]
   1405c:	push	{lr}		; (str lr, [sp, #-4]!)
   14060:	sub	sp, sp, #36	; 0x24
   14064:	ldr	r3, [r3, #8]
   14068:	blx	r3
   1406c:	add	sp, sp, #36	; 0x24
   14070:	pop	{pc}		; (ldr pc, [sp], #4)
   14074:	ldr	r3, [r0]
   14078:	push	{lr}		; (str lr, [sp, #-4]!)
   1407c:	sub	sp, sp, #36	; 0x24
   14080:	ldr	r3, [r3, #8]
   14084:	blx	r3
   14088:	add	sp, sp, #36	; 0x24
   1408c:	pop	{pc}		; (ldr pc, [sp], #4)
   14090:	ldr	r3, [r0]
   14094:	push	{lr}		; (str lr, [sp, #-4]!)
   14098:	sub	sp, sp, #36	; 0x24
   1409c:	ldr	r3, [r3, #8]
   140a0:	blx	r3
   140a4:	add	sp, sp, #36	; 0x24
   140a8:	pop	{pc}		; (ldr pc, [sp], #4)
   140ac:	vldr	d0, [pc, #4]	; 140b8 <fputs@plt+0xacfc>
   140b0:	bx	lr
   140b4:	nop	{0}
	...
   140c0:	vldr	d0, [pc]	; 140c8 <fputs@plt+0xad0c>
   140c4:	bx	lr
	...
   140d0:	vldr	d0, [pc]	; 140d8 <fputs@plt+0xad1c>
   140d4:	bx	lr
	...
   140e0:	mov	r0, #0
   140e4:	bx	lr
   140e8:	movw	r2, #2696	; 0xa88
   140ec:	movt	r2, #3
   140f0:	push	{r3, lr}
   140f4:	mov	r3, r0
   140f8:	ldr	r0, [r2]
   140fc:	ldr	r1, [r3, #12]
   14100:	ldr	r2, [r3, #16]
   14104:	ldr	ip, [r0]
   14108:	ldr	r3, [r3, #20]
   1410c:	ldr	ip, [ip, #48]	; 0x30
   14110:	blx	ip
   14114:	pop	{r3, pc}
   14118:	mov	r0, #11
   1411c:	bx	lr
   14120:	bx	lr
   14124:	bx	lr
   14128:	bx	lr
   1412c:	vldr	d5, [r0, #56]	; 0x38
   14130:	vldr	d6, [r1]
   14134:	vldr	d7, [r0, #64]	; 0x40
   14138:	vadd.f64	d6, d5, d6
   1413c:	vldr	d5, [r1, #8]
   14140:	vadd.f64	d7, d7, d5
   14144:	vstr	d6, [r0, #56]	; 0x38
   14148:	vstr	d7, [r0, #64]	; 0x40
   1414c:	bx	lr
   14150:	vstr	d0, [r0, #96]	; 0x60
   14154:	bx	lr
   14158:	vstr	d0, [r0, #104]	; 0x68
   1415c:	bx	lr
   14160:	vmov.f64	d6, #96	; 0x3f000000  0.5
   14164:	vldr	d2, [r0, #80]	; 0x50
   14168:	vldr	d1, [r0, #64]	; 0x40
   1416c:	vldr	d3, [r0, #72]	; 0x48
   14170:	vldr	d0, [r0, #56]	; 0x38
   14174:	vldr	d7, [pc, #36]	; 141a0 <fputs@plt+0xade4>
   14178:	vldr	d4, [r0, #128]	; 0x80
   1417c:	vldr	d5, [r0, #120]	; 0x78
   14180:	sub	sp, sp, #32
   14184:	vmla.f64	d1, d2, d6
   14188:	vmla.f64	d0, d3, d6
   1418c:	vmls.f64	d1, d4, d7
   14190:	vmls.f64	d0, d5, d7
   14194:	add	sp, sp, #32
   14198:	bx	lr
   1419c:	nop	{0}
   141a0:	movwcc	r8, #6248	; 0x1868
   141a4:	svccc	0x00d2bec3
   141a8:	vmov.f64	d6, #96	; 0x3f000000  0.5
   141ac:	vldr	d2, [r0, #80]	; 0x50
   141b0:	vldr	d1, [r0, #64]	; 0x40
   141b4:	vldr	d3, [r0, #72]	; 0x48
   141b8:	vldr	d0, [r0, #56]	; 0x38
   141bc:	vldr	d7, [pc, #36]	; 141e8 <fputs@plt+0xae2c>
   141c0:	vldr	d4, [r0, #128]	; 0x80
   141c4:	vldr	d5, [r0, #120]	; 0x78
   141c8:	sub	sp, sp, #32
   141cc:	vmla.f64	d1, d2, d6
   141d0:	vmls.f64	d0, d3, d6
   141d4:	vmls.f64	d1, d4, d7
   141d8:	vmla.f64	d0, d5, d7
   141dc:	add	sp, sp, #32
   141e0:	bx	lr
   141e4:	nop	{0}
   141e8:	movwcc	r8, #6248	; 0x1868
   141ec:	svccc	0x00d2bec3
   141f0:	vmov.f64	d6, #96	; 0x3f000000  0.5
   141f4:	vldr	d2, [r0, #80]	; 0x50
   141f8:	vldr	d1, [r0, #64]	; 0x40
   141fc:	vldr	d3, [r0, #72]	; 0x48
   14200:	vldr	d0, [r0, #56]	; 0x38
   14204:	vldr	d7, [pc, #36]	; 14230 <fputs@plt+0xae74>
   14208:	vldr	d4, [r0, #128]	; 0x80
   1420c:	vldr	d5, [r0, #120]	; 0x78
   14210:	sub	sp, sp, #32
   14214:	vmls.f64	d1, d2, d6
   14218:	vmla.f64	d0, d3, d6
   1421c:	vmla.f64	d1, d4, d7
   14220:	vmls.f64	d0, d5, d7
   14224:	add	sp, sp, #32
   14228:	bx	lr
   1422c:	nop	{0}
   14230:	movwcc	r8, #6248	; 0x1868
   14234:	svccc	0x00d2bec3
   14238:	vmov.f64	d6, #96	; 0x3f000000  0.5
   1423c:	vldr	d2, [r0, #80]	; 0x50
   14240:	vldr	d1, [r0, #64]	; 0x40
   14244:	vldr	d3, [r0, #72]	; 0x48
   14248:	vldr	d0, [r0, #56]	; 0x38
   1424c:	vldr	d7, [pc, #36]	; 14278 <fputs@plt+0xaebc>
   14250:	vldr	d4, [r0, #128]	; 0x80
   14254:	vldr	d5, [r0, #120]	; 0x78
   14258:	sub	sp, sp, #32
   1425c:	vmls.f64	d1, d2, d6
   14260:	vmls.f64	d0, d3, d6
   14264:	vmla.f64	d1, d4, d7
   14268:	vmla.f64	d0, d5, d7
   1426c:	add	sp, sp, #32
   14270:	bx	lr
   14274:	nop	{0}
   14278:	movwcc	r8, #6248	; 0x1868
   1427c:	svccc	0x00d2bec3
   14280:	push	{r4, r5, r6, lr}
   14284:	vpush	{d8}
   14288:	movw	r6, #1424	; 0x590
   1428c:	movt	r6, #3
   14290:	ldr	r2, [r0, #24]
   14294:	sub	sp, sp, #96	; 0x60
   14298:	mov	r4, r0
   1429c:	ldr	r3, [r6]
   142a0:	cmp	r2, #0
   142a4:	str	r3, [sp, #92]	; 0x5c
   142a8:	bne	142bc <fputs@plt+0xaf00>
   142ac:	vldr	d7, [r0, #88]	; 0x58
   142b0:	vcmpe.f64	d7, #0.0
   142b4:	vmrs	APSR_nzcv, fpscr
   142b8:	bmi	14418 <fputs@plt+0xb05c>
   142bc:	ldr	r1, [r4, #112]	; 0x70
   142c0:	movw	r5, #2696	; 0xa88
   142c4:	movt	r5, #3
   142c8:	ldr	r2, [r4, #48]	; 0x30
   142cc:	ldr	r0, [r5]
   142d0:	ldr	r3, [r0]
   142d4:	ldr	r3, [r3, #56]	; 0x38
   142d8:	blx	r3
   142dc:	vldr	d0, [r4, #120]	; 0x78
   142e0:	vcmp.f64	d0, #0.0
   142e4:	vmrs	APSR_nzcv, fpscr
   142e8:	bne	143d0 <fputs@plt+0xb014>
   142ec:	vmov.f64	d7, #96	; 0x3f000000  0.5
   142f0:	vldr	d5, [r4, #72]	; 0x48
   142f4:	vldr	d6, [r4, #80]	; 0x50
   142f8:	add	r1, sp, #40	; 0x28
   142fc:	add	r0, sp, #104	; 0x68
   14300:	mov	r2, #0
   14304:	mov	r3, #0
   14308:	vmul.f64	d5, d5, d7
   1430c:	vmul.f64	d7, d6, d7
   14310:	strd	r2, [r1, #-16]
   14314:	add	r1, r1, #16
   14318:	strd	r2, [r1, #-24]	; 0xffffffe8
   1431c:	cmp	r1, r0
   14320:	bne	14310 <fputs@plt+0xaf54>
   14324:	vldr	d2, [r4, #104]	; 0x68
   14328:	vldr	d3, [r4, #96]	; 0x60
   1432c:	vldr	d6, [r4, #64]	; 0x40
   14330:	vldr	d4, [r4, #56]	; 0x38
   14334:	ldr	r0, [r5]
   14338:	add	r1, sp, #24
   1433c:	mov	r2, #4
   14340:	add	r3, r4, #24
   14344:	vldr	d0, [r4, #88]	; 0x58
   14348:	ldr	ip, [r0]
   1434c:	ldr	ip, [ip, #28]
   14350:	vsub.f64	d8, d7, d2
   14354:	vadd.f64	d1, d3, d5
   14358:	vadd.f64	d2, d2, d7
   1435c:	vsub.f64	d3, d5, d3
   14360:	vadd.f64	d2, d2, d6
   14364:	vsub.f64	d3, d4, d3
   14368:	vstr	d2, [sp, #48]	; 0x30
   1436c:	vsub.f64	d8, d6, d8
   14370:	vstr	d3, [sp, #56]	; 0x38
   14374:	vadd.f64	d2, d5, d4
   14378:	vstr	d8, [sp, #32]
   1437c:	vadd.f64	d3, d7, d6
   14380:	vstr	d2, [sp, #24]
   14384:	vadd.f64	d1, d1, d4
   14388:	vstr	d3, [sp, #64]	; 0x40
   1438c:	vsub.f64	d5, d4, d5
   14390:	vstr	d1, [sp, #40]	; 0x28
   14394:	vsub.f64	d7, d6, d7
   14398:	vstr	d5, [sp, #72]	; 0x48
   1439c:	vstr	d7, [sp, #80]	; 0x50
   143a0:	blx	ip
   143a4:	ldr	r0, [r5]
   143a8:	ldr	r3, [r0]
   143ac:	ldr	r3, [r3, #60]	; 0x3c
   143b0:	blx	r3
   143b4:	ldr	r2, [sp, #92]	; 0x5c
   143b8:	ldr	r3, [r6]
   143bc:	cmp	r2, r3
   143c0:	bne	14428 <fputs@plt+0xb06c>
   143c4:	add	sp, sp, #96	; 0x60
   143c8:	vpop	{d8}
   143cc:	pop	{r4, r5, r6, pc}
   143d0:	ldr	r0, [r5]
   143d4:	vldr	d7, [r4, #80]	; 0x50
   143d8:	vldr	d6, [r4, #72]	; 0x48
   143dc:	vabs.f64	d7, d7
   143e0:	ldr	r3, [r4, #112]	; 0x70
   143e4:	vldr	d1, [r4, #88]	; 0x58
   143e8:	ldr	r2, [r0]
   143ec:	add	r1, r4, #56	; 0x38
   143f0:	vabs.f64	d6, d6
   143f4:	str	r3, [sp]
   143f8:	vstr	d7, [sp, #16]
   143fc:	ldr	ip, [r2, #44]	; 0x2c
   14400:	add	r3, r4, #24
   14404:	add	r2, sp, #8
   14408:	vabs.f64	d0, d0
   1440c:	vstr	d6, [sp, #8]
   14410:	blx	ip
   14414:	b	143a4 <fputs@plt+0xafe8>
   14418:	ldr	r1, [r0, #112]	; 0x70
   1441c:	cmp	r1, #0
   14420:	bne	142c0 <fputs@plt+0xaf04>
   14424:	b	143b4 <fputs@plt+0xaff8>
   14428:	bl	92b4 <__stack_chk_fail@plt>
   1442c:	mov	r0, #10
   14430:	bx	lr
   14434:	push	{r3, r4, r5, lr}
   14438:	mov	r4, r0
   1443c:	ldr	r3, [r0, #24]
   14440:	cmp	r3, #0
   14444:	bne	14458 <fputs@plt+0xb09c>
   14448:	vldr	d7, [r0, #88]	; 0x58
   1444c:	vcmpe.f64	d7, #0.0
   14450:	vmrs	APSR_nzcv, fpscr
   14454:	bmi	144ac <fputs@plt+0xb0f0>
   14458:	ldr	r1, [r4, #112]	; 0x70
   1445c:	movw	r5, #2696	; 0xa88
   14460:	movt	r5, #3
   14464:	ldr	r2, [r4, #48]	; 0x30
   14468:	ldr	r0, [r5]
   1446c:	ldr	r3, [r0]
   14470:	ldr	r3, [r3, #56]	; 0x38
   14474:	blx	r3
   14478:	ldr	r0, [r5]
   1447c:	add	r3, r4, #24
   14480:	add	r1, r4, #56	; 0x38
   14484:	add	r2, r4, #72	; 0x48
   14488:	vldr	d0, [r4, #88]	; 0x58
   1448c:	ldr	ip, [r0]
   14490:	ldr	ip, [ip, #40]	; 0x28
   14494:	blx	ip
   14498:	ldr	r0, [r5]
   1449c:	ldr	r3, [r0]
   144a0:	ldr	r3, [r3, #60]	; 0x3c
   144a4:	blx	r3
   144a8:	pop	{r3, r4, r5, pc}
   144ac:	ldr	r1, [r0, #112]	; 0x70
   144b0:	cmp	r1, #0
   144b4:	bne	1445c <fputs@plt+0xb0a0>
   144b8:	pop	{r3, r4, r5, pc}
   144bc:	push	{r3, r4, r5, lr}
   144c0:	mov	r4, r0
   144c4:	ldr	r3, [r0, #24]
   144c8:	cmp	r3, #0
   144cc:	bne	144e0 <fputs@plt+0xb124>
   144d0:	vldr	d7, [r0, #88]	; 0x58
   144d4:	vcmpe.f64	d7, #0.0
   144d8:	vmrs	APSR_nzcv, fpscr
   144dc:	bmi	1453c <fputs@plt+0xb180>
   144e0:	ldr	r1, [r4, #112]	; 0x70
   144e4:	movw	r5, #2696	; 0xa88
   144e8:	movt	r5, #3
   144ec:	ldr	r2, [r4, #48]	; 0x30
   144f0:	ldr	r0, [r5]
   144f4:	ldr	r3, [r0]
   144f8:	ldr	r3, [r3, #56]	; 0x38
   144fc:	blx	r3
   14500:	vmov.f64	d7, #96	; 0x3f000000  0.5
   14504:	ldr	r0, [r5]
   14508:	vldr	d0, [r4, #72]	; 0x48
   1450c:	add	r1, r4, #56	; 0x38
   14510:	add	r2, r4, #24
   14514:	vldr	d1, [r4, #88]	; 0x58
   14518:	ldr	r3, [r0]
   1451c:	ldr	r3, [r3, #16]
   14520:	vmul.f64	d0, d0, d7
   14524:	blx	r3
   14528:	ldr	r0, [r5]
   1452c:	ldr	r3, [r0]
   14530:	ldr	r3, [r3, #60]	; 0x3c
   14534:	blx	r3
   14538:	pop	{r3, r4, r5, pc}
   1453c:	ldr	r1, [r0, #112]	; 0x70
   14540:	cmp	r1, #0
   14544:	bne	144e4 <fputs@plt+0xb128>
   14548:	pop	{r3, r4, r5, pc}
   1454c:	vldr	d7, [r1]
   14550:	vldr	d5, [r1, #8]
   14554:	vldr	d6, [r0, #56]	; 0x38
   14558:	vldr	d4, [r0, #64]	; 0x40
   1455c:	vadd.f64	d3, d6, d7
   14560:	vldr	d6, [r0, #72]	; 0x48
   14564:	vldr	d7, [r0, #80]	; 0x50
   14568:	vadd.f64	d5, d4, d5
   1456c:	vstr	d3, [r0, #56]	; 0x38
   14570:	vldr	d3, [r1]
   14574:	vstr	d5, [r0, #64]	; 0x40
   14578:	vadd.f64	d6, d6, d3
   1457c:	vldr	d5, [r1, #8]
   14580:	vadd.f64	d7, d7, d5
   14584:	vstr	d6, [r0, #72]	; 0x48
   14588:	vstr	d7, [r0, #80]	; 0x50
   1458c:	bx	lr
   14590:	vldr	d7, [r1]
   14594:	vldr	d5, [r1, #8]
   14598:	vldr	d6, [r0, #88]	; 0x58
   1459c:	vldr	d4, [r0, #96]	; 0x60
   145a0:	vadd.f64	d3, d6, d7
   145a4:	vldr	d6, [r0, #104]	; 0x68
   145a8:	vldr	d7, [r0, #112]	; 0x70
   145ac:	vadd.f64	d5, d4, d5
   145b0:	vstr	d3, [r0, #88]	; 0x58
   145b4:	vldr	d3, [r1]
   145b8:	vstr	d5, [r0, #96]	; 0x60
   145bc:	vadd.f64	d6, d6, d3
   145c0:	vldr	d5, [r1, #8]
   145c4:	vadd.f64	d7, d7, d5
   145c8:	vstr	d6, [r0, #104]	; 0x68
   145cc:	vstr	d7, [r0, #112]	; 0x70
   145d0:	bx	lr
   145d4:	push	{r3, r4, r5, lr}
   145d8:	mov	r5, r0
   145dc:	mov	r4, r1
   145e0:	bl	14590 <fputs@plt+0xb1d4>
   145e4:	ldr	r2, [r5, #124]	; 0x7c
   145e8:	cmp	r2, #0
   145ec:	pople	{r3, r4, r5, pc}
   145f0:	ldr	r3, [r5, #120]	; 0x78
   145f4:	add	r3, r3, #8
   145f8:	add	r2, r3, r2, lsl #4
   145fc:	vldr	d6, [r3, #-8]
   14600:	vldr	d7, [r4]
   14604:	vadd.f64	d7, d6, d7
   14608:	vldr	d6, [r3]
   1460c:	vstr	d7, [r3, #-8]
   14610:	vldr	d7, [r4, #8]
   14614:	vadd.f64	d7, d6, d7
   14618:	vmov	r0, r1, d7
   1461c:	strd	r0, [r3], #16
   14620:	cmp	r3, r2
   14624:	bne	145fc <fputs@plt+0xb240>
   14628:	pop	{r3, r4, r5, pc}
   1462c:	push	{r3, r4, r5, lr}
   14630:	mov	r4, r0
   14634:	mov	r5, r1
   14638:	bl	14590 <fputs@plt+0xb1d4>
   1463c:	vldr	d5, [r4, #128]	; 0x80
   14640:	vldr	d6, [r5]
   14644:	vldr	d7, [r4, #136]	; 0x88
   14648:	vadd.f64	d6, d5, d6
   1464c:	vldr	d5, [r5, #8]
   14650:	vadd.f64	d7, d7, d5
   14654:	vstr	d6, [r4, #128]	; 0x80
   14658:	vstr	d7, [r4, #136]	; 0x88
   1465c:	pop	{r3, r4, r5, pc}
   14660:	vldr	d7, [r0, #136]	; 0x88
   14664:	vldr	d6, [r0, #144]	; 0x90
   14668:	vadd.f64	d7, d6, d7
   1466c:	add	r0, r0, #128	; 0x80
   14670:	sub	sp, sp, #48	; 0x30
   14674:	ldm	r0, {r0, r1, r2, r3}
   14678:	add	ip, sp, #16
   1467c:	stm	ip, {r0, r1, r2, r3}
   14680:	vstr	d7, [sp, #24]
   14684:	ldm	ip, {r0, r1, r2, r3}
   14688:	add	ip, sp, #48	; 0x30
   1468c:	stmdb	ip, {r0, r1, r2, r3}
   14690:	vldr	d0, [sp, #32]
   14694:	vldr	d1, [sp, #40]	; 0x28
   14698:	add	sp, sp, #48	; 0x30
   1469c:	bx	lr
   146a0:	vldr	d6, [r0, #136]	; 0x88
   146a4:	vldr	d7, [r0, #144]	; 0x90
   146a8:	vsub.f64	d7, d6, d7
   146ac:	add	r0, r0, #128	; 0x80
   146b0:	sub	sp, sp, #48	; 0x30
   146b4:	ldm	r0, {r0, r1, r2, r3}
   146b8:	add	ip, sp, #16
   146bc:	stm	ip, {r0, r1, r2, r3}
   146c0:	vstr	d7, [sp, #24]
   146c4:	ldm	ip, {r0, r1, r2, r3}
   146c8:	add	ip, sp, #48	; 0x30
   146cc:	stmdb	ip, {r0, r1, r2, r3}
   146d0:	vldr	d0, [sp, #32]
   146d4:	vldr	d1, [sp, #40]	; 0x28
   146d8:	add	sp, sp, #48	; 0x30
   146dc:	bx	lr
   146e0:	vldr	d7, [r0, #128]	; 0x80
   146e4:	vldr	d6, [r0, #144]	; 0x90
   146e8:	vadd.f64	d7, d6, d7
   146ec:	add	r0, r0, #128	; 0x80
   146f0:	sub	sp, sp, #48	; 0x30
   146f4:	ldm	r0, {r0, r1, r2, r3}
   146f8:	add	ip, sp, #16
   146fc:	stm	ip, {r0, r1, r2, r3}
   14700:	vstr	d7, [sp, #16]
   14704:	ldm	ip, {r0, r1, r2, r3}
   14708:	add	ip, sp, #48	; 0x30
   1470c:	stmdb	ip, {r0, r1, r2, r3}
   14710:	vldr	d0, [sp, #32]
   14714:	vldr	d1, [sp, #40]	; 0x28
   14718:	add	sp, sp, #48	; 0x30
   1471c:	bx	lr
   14720:	vldr	d6, [r0, #128]	; 0x80
   14724:	vldr	d7, [r0, #144]	; 0x90
   14728:	vsub.f64	d7, d6, d7
   1472c:	add	r0, r0, #128	; 0x80
   14730:	sub	sp, sp, #48	; 0x30
   14734:	ldm	r0, {r0, r1, r2, r3}
   14738:	add	ip, sp, #16
   1473c:	stm	ip, {r0, r1, r2, r3}
   14740:	vstr	d7, [sp, #16]
   14744:	ldm	ip, {r0, r1, r2, r3}
   14748:	add	ip, sp, #48	; 0x30
   1474c:	stmdb	ip, {r0, r1, r2, r3}
   14750:	vldr	d0, [sp, #32]
   14754:	vldr	d1, [sp, #40]	; 0x28
   14758:	add	sp, sp, #48	; 0x30
   1475c:	bx	lr
   14760:	vldr	d6, [pc, #32]	; 14788 <fputs@plt+0xb3cc>
   14764:	vldr	d7, [r0, #144]	; 0x90
   14768:	vdiv.f64	d7, d7, d6
   1476c:	vldr	d0, [r0, #128]	; 0x80
   14770:	vldr	d1, [r0, #136]	; 0x88
   14774:	sub	sp, sp, #32
   14778:	vadd.f64	d0, d7, d0
   1477c:	vadd.f64	d1, d7, d1
   14780:	add	sp, sp, #32
   14784:	bx	lr
   14788:	ldrbtvs	r3, [pc], -sp, asr #23
   1478c:	svccc	0x00f6a09e
   14790:	vldr	d6, [pc, #32]	; 147b8 <fputs@plt+0xb3fc>
   14794:	vldr	d7, [r0, #144]	; 0x90
   14798:	vdiv.f64	d7, d7, d6
   1479c:	vldr	d0, [r0, #128]	; 0x80
   147a0:	vldr	d1, [r0, #136]	; 0x88
   147a4:	sub	sp, sp, #32
   147a8:	vsub.f64	d0, d0, d7
   147ac:	vadd.f64	d1, d7, d1
   147b0:	add	sp, sp, #32
   147b4:	bx	lr
   147b8:	ldrbtvs	r3, [pc], -sp, asr #23
   147bc:	svccc	0x00f6a09e
   147c0:	vldr	d6, [pc, #32]	; 147e8 <fputs@plt+0xb42c>
   147c4:	vldr	d7, [r0, #144]	; 0x90
   147c8:	vdiv.f64	d7, d7, d6
   147cc:	vldr	d0, [r0, #128]	; 0x80
   147d0:	vldr	d1, [r0, #136]	; 0x88
   147d4:	sub	sp, sp, #32
   147d8:	vadd.f64	d0, d7, d0
   147dc:	vsub.f64	d1, d1, d7
   147e0:	add	sp, sp, #32
   147e4:	bx	lr
   147e8:	ldrbtvs	r3, [pc], -sp, asr #23
   147ec:	svccc	0x00f6a09e
   147f0:	vldr	d6, [pc, #32]	; 14818 <fputs@plt+0xb45c>
   147f4:	vldr	d7, [r0, #144]	; 0x90
   147f8:	vdiv.f64	d7, d7, d6
   147fc:	vldr	d0, [r0, #128]	; 0x80
   14800:	vldr	d1, [r0, #136]	; 0x88
   14804:	sub	sp, sp, #32
   14808:	vsub.f64	d0, d0, d7
   1480c:	vsub.f64	d1, d1, d7
   14810:	add	sp, sp, #32
   14814:	bx	lr
   14818:	ldrbtvs	r3, [pc], -sp, asr #23
   1481c:	svccc	0x00f6a09e
   14820:	push	{r4, lr}
   14824:	mov	r4, r0
   14828:	ldr	r0, [r0, #4]
   1482c:	ldr	r3, [pc, #20]	; 14848 <fputs@plt+0xb48c>
   14830:	cmp	r0, #0
   14834:	str	r3, [r4]
   14838:	beq	14840 <fputs@plt+0xb484>
   1483c:	bl	92f0 <_ZdaPv@plt>
   14840:	mov	r0, r4
   14844:	pop	{r4, pc}
   14848:	strdeq	r5, [r2], -r8
   1484c:	push	{r4, lr}
   14850:	mov	r4, r0
   14854:	ldr	r0, [r0, #12]
   14858:	ldr	r3, [pc, #28]	; 1487c <fputs@plt+0xb4c0>
   1485c:	cmp	r0, #0
   14860:	str	r3, [r4]
   14864:	beq	1486c <fputs@plt+0xb4b0>
   14868:	bl	92f0 <_ZdaPv@plt>
   1486c:	ldr	r3, [pc, #12]	; 14880 <fputs@plt+0xb4c4>
   14870:	mov	r0, r4
   14874:	str	r3, [r4]
   14878:	pop	{r4, pc}
   1487c:	andeq	r5, r2, r8, asr r9
   14880:	andeq	r5, r2, r8, lsr #16
   14884:	push	{r3, r4, r5, lr}
   14888:	mov	r5, r0
   1488c:	ldr	r3, [r0, #16]
   14890:	ldr	r2, [pc, #80]	; 148e8 <fputs@plt+0xb52c>
   14894:	cmp	r3, #0
   14898:	str	r2, [r0]
   1489c:	beq	148d8 <fputs@plt+0xb51c>
   148a0:	ldr	r4, [r3, #-4]
   148a4:	add	r4, r4, r4, lsl #2
   148a8:	add	r4, r3, r4, lsl #2
   148ac:	b	148c8 <fputs@plt+0xb50c>
   148b0:	ldr	r0, [r4, #-20]	; 0xffffffec
   148b4:	cmp	r0, #0
   148b8:	beq	148c4 <fputs@plt+0xb508>
   148bc:	bl	92f0 <_ZdaPv@plt>
   148c0:	ldr	r3, [r5, #16]
   148c4:	sub	r4, r4, #20
   148c8:	cmp	r3, r4
   148cc:	bne	148b0 <fputs@plt+0xb4f4>
   148d0:	sub	r0, r3, #8
   148d4:	bl	92f0 <_ZdaPv@plt>
   148d8:	ldr	r3, [pc, #12]	; 148ec <fputs@plt+0xb530>
   148dc:	mov	r0, r5
   148e0:	str	r3, [r5]
   148e4:	pop	{r3, r4, r5, pc}
   148e8:	andeq	r5, r2, r0, asr #19
   148ec:	andeq	r5, r2, r8, lsr #16
   148f0:	push	{r4, lr}
   148f4:	mov	r4, r0
   148f8:	ldr	r0, [r0, #120]	; 0x78
   148fc:	ldr	r3, [pc, #36]	; 14928 <fputs@plt+0xb56c>
   14900:	cmp	r0, #0
   14904:	str	r3, [r4]
   14908:	beq	14910 <fputs@plt+0xb554>
   1490c:	bl	92f0 <_ZdaPv@plt>
   14910:	ldr	r3, [pc, #20]	; 1492c <fputs@plt+0xb570>
   14914:	mov	r0, r4
   14918:	str	r3, [r4]
   1491c:	bl	14884 <fputs@plt+0xb4c8>
   14920:	mov	r0, r4
   14924:	pop	{r4, pc}
   14928:	strdeq	r5, [r2], -r8
   1492c:	muleq	r2, r0, ip
   14930:	push	{r4, lr}
   14934:	mov	r4, r0
   14938:	ldr	r0, [r0, #4]
   1493c:	ldr	r3, [pc, #28]	; 14960 <fputs@plt+0xb5a4>
   14940:	cmp	r0, #0
   14944:	str	r3, [r4]
   14948:	beq	14950 <fputs@plt+0xb594>
   1494c:	bl	92f0 <_ZdaPv@plt>
   14950:	mov	r0, r4
   14954:	bl	209f0 <_ZdlPv@@Base>
   14958:	mov	r0, r4
   1495c:	pop	{r4, pc}
   14960:	strdeq	r5, [r2], -r8
   14964:	ldr	r3, [pc, #20]	; 14980 <fputs@plt+0xb5c4>
   14968:	push	{r4, lr}
   1496c:	mov	r4, r0
   14970:	str	r3, [r0]
   14974:	bl	209f0 <_ZdlPv@@Base>
   14978:	mov	r0, r4
   1497c:	pop	{r4, pc}
   14980:	andeq	r5, r2, r8, lsr #16
   14984:	push	{r4, lr}
   14988:	mov	r4, r0
   1498c:	ldr	r0, [r0, #12]
   14990:	ldr	r3, [pc, #36]	; 149bc <fputs@plt+0xb600>
   14994:	cmp	r0, #0
   14998:	str	r3, [r4]
   1499c:	beq	149a4 <fputs@plt+0xb5e8>
   149a0:	bl	92f0 <_ZdaPv@plt>
   149a4:	ldr	r3, [pc, #20]	; 149c0 <fputs@plt+0xb604>
   149a8:	mov	r0, r4
   149ac:	str	r3, [r4]
   149b0:	bl	209f0 <_ZdlPv@@Base>
   149b4:	mov	r0, r4
   149b8:	pop	{r4, pc}
   149bc:	andeq	r5, r2, r8, asr r9
   149c0:	andeq	r5, r2, r8, lsr #16
   149c4:	push	{r4, lr}
   149c8:	mov	r4, r0
   149cc:	bl	14884 <fputs@plt+0xb4c8>
   149d0:	mov	r0, r4
   149d4:	bl	209f0 <_ZdlPv@@Base>
   149d8:	mov	r0, r4
   149dc:	pop	{r4, pc}
   149e0:	push	{r4, lr}
   149e4:	mov	r4, r0
   149e8:	bl	148f0 <fputs@plt+0xb534>
   149ec:	mov	r0, r4
   149f0:	bl	209f0 <_ZdlPv@@Base>
   149f4:	mov	r0, r4
   149f8:	pop	{r4, pc}
   149fc:	push	{r4, lr}
   14a00:	mov	r4, r0
   14a04:	mov	r0, r1
   14a08:	bl	214b4 <_ZdlPv@@Base+0xac4>
   14a0c:	str	r0, [r4, #52]	; 0x34
   14a10:	pop	{r4, pc}
   14a14:	push	{r4, lr}
   14a18:	mov	r4, r0
   14a1c:	mov	r0, r1
   14a20:	bl	214b4 <_ZdlPv@@Base+0xac4>
   14a24:	str	r0, [r4, #112]	; 0x70
   14a28:	pop	{r4, pc}
   14a2c:	push	{r3, r4, r5, lr}
   14a30:	mov	r5, r0
   14a34:	ldr	r4, [r0, #96]	; 0x60
   14a38:	ldr	r3, [pc, #116]	; 14ab4 <fputs@plt+0xb6f8>
   14a3c:	cmp	r4, #0
   14a40:	str	r3, [r0]
   14a44:	beq	14a58 <fputs@plt+0xb69c>
   14a48:	mov	r0, r4
   14a4c:	bl	99d0 <fputs@plt+0x614>
   14a50:	mov	r0, r4
   14a54:	bl	209f0 <_ZdlPv@@Base>
   14a58:	ldr	r3, [r5, #88]	; 0x58
   14a5c:	cmp	r3, #0
   14a60:	bne	14a6c <fputs@plt+0xb6b0>
   14a64:	b	14a88 <fputs@plt+0xb6cc>
   14a68:	mov	r3, r4
   14a6c:	ldr	r2, [r3]
   14a70:	mov	r0, r3
   14a74:	ldr	r4, [r3, #8]
   14a78:	ldr	r3, [r2, #4]
   14a7c:	blx	r3
   14a80:	cmp	r4, #0
   14a84:	bne	14a68 <fputs@plt+0xb6ac>
   14a88:	ldr	r3, [pc, #40]	; 14ab8 <fputs@plt+0xb6fc>
   14a8c:	mov	r0, r5
   14a90:	str	r3, [r5]
   14a94:	bl	14884 <fputs@plt+0xb4c8>
   14a98:	mov	r0, r5
   14a9c:	pop	{r3, r4, r5, pc}
   14aa0:	ldr	r3, [pc, #16]	; 14ab8 <fputs@plt+0xb6fc>
   14aa4:	mov	r0, r5
   14aa8:	str	r3, [r5]
   14aac:	bl	14884 <fputs@plt+0xb4c8>
   14ab0:	bl	9188 <__cxa_end_cleanup@plt>
   14ab4:	andeq	r5, r2, r8, ror #29
   14ab8:	andeq	r5, r2, r8, lsr sl
   14abc:	push	{r4, lr}
   14ac0:	mov	r4, r0
   14ac4:	bl	14a2c <fputs@plt+0xb670>
   14ac8:	mov	r0, r4
   14acc:	bl	209f0 <_ZdlPv@@Base>
   14ad0:	mov	r0, r4
   14ad4:	pop	{r4, pc}
   14ad8:	vcmpe.f64	d0, #0.0
   14adc:	push	{r4, lr}
   14ae0:	vpush	{d8}
   14ae4:	mov	r4, r0
   14ae8:	vmov.f64	d8, d0
   14aec:	vmrs	APSR_nzcv, fpscr
   14af0:	blt	14b00 <fputs@plt+0xb744>
   14af4:	vstr	d8, [r4, #88]	; 0x58
   14af8:	vpop	{d8}
   14afc:	pop	{r4, pc}
   14b00:	movw	r1, #24848	; 0x6110
   14b04:	mov	r0, #732	; 0x2dc
   14b08:	movt	r1, #2
   14b0c:	bl	1eec8 <fputs@plt+0x15b0c>
   14b10:	vstr	d8, [r4, #88]	; 0x58
   14b14:	vpop	{d8}
   14b18:	pop	{r4, pc}
   14b1c:	push	{r4, r5, r6, r7, r8, lr}
   14b20:	vpush	{d8}
   14b24:	movw	r5, #1424	; 0x590
   14b28:	movt	r5, #3
   14b2c:	ldr	r2, [r0, #20]
   14b30:	sub	sp, sp, #40	; 0x28
   14b34:	mov	r4, r0
   14b38:	ldr	r3, [r5]
   14b3c:	cmp	r2, #0
   14b40:	str	r3, [sp, #36]	; 0x24
   14b44:	bne	14be0 <fputs@plt+0xb824>
   14b48:	vldr	d8, [pc, #248]	; 14c48 <fputs@plt+0xb88c>
   14b4c:	ldr	r3, [r4, #16]
   14b50:	cmp	r3, #0
   14b54:	beq	14bc4 <fputs@plt+0xb808>
   14b58:	movw	r6, #2696	; 0xa88
   14b5c:	movt	r6, #3
   14b60:	ldr	r1, [r4, #52]	; 0x34
   14b64:	ldr	r0, [r6]
   14b68:	ldr	r2, [r4, #48]	; 0x30
   14b6c:	ldr	r3, [r0]
   14b70:	ldr	r3, [r3, #56]	; 0x38
   14b74:	blx	r3
   14b78:	ldr	r7, [r6]
   14b7c:	ldr	r3, [r4]
   14b80:	mov	r0, r4
   14b84:	ldr	r2, [r7]
   14b88:	ldr	r3, [r3, #64]	; 0x40
   14b8c:	ldr	r8, [r2, #20]
   14b90:	blx	r3
   14b94:	mov	r0, r7
   14b98:	ldr	r3, [r4, #12]
   14b9c:	add	r1, sp, #16
   14ba0:	ldr	r2, [r4, #16]
   14ba4:	vstr	d0, [sp, #16]
   14ba8:	vstr	d1, [sp, #24]
   14bac:	vmov.f64	d0, d8
   14bb0:	blx	r8
   14bb4:	ldr	r0, [r6]
   14bb8:	ldr	r3, [r0]
   14bbc:	ldr	r3, [r3, #60]	; 0x3c
   14bc0:	blx	r3
   14bc4:	ldr	r2, [sp, #36]	; 0x24
   14bc8:	ldr	r3, [r5]
   14bcc:	cmp	r2, r3
   14bd0:	bne	14c44 <fputs@plt+0xb888>
   14bd4:	add	sp, sp, #40	; 0x28
   14bd8:	vpop	{d8}
   14bdc:	pop	{r4, r5, r6, r7, r8, pc}
   14be0:	ldr	r3, [r0]
   14be4:	ldr	r3, [r3, #60]	; 0x3c
   14be8:	blx	r3
   14bec:	ldr	r3, [r4]
   14bf0:	mov	r0, r4
   14bf4:	ldr	r3, [r3, #56]	; 0x38
   14bf8:	vstr	d0, [sp]
   14bfc:	vstr	d1, [sp, #8]
   14c00:	blx	r3
   14c04:	vldr	d7, [sp]
   14c08:	vldr	d6, [sp, #8]
   14c0c:	vsub.f64	d7, d7, d0
   14c10:	vstr	d0, [sp, #16]
   14c14:	vstr	d1, [sp, #24]
   14c18:	vcmp.f64	d7, #0.0
   14c1c:	vsub.f64	d0, d6, d1
   14c20:	vmrs	APSR_nzcv, fpscr
   14c24:	bne	14c34 <fputs@plt+0xb878>
   14c28:	vcmp.f64	d0, #0.0
   14c2c:	vmrs	APSR_nzcv, fpscr
   14c30:	beq	14b48 <fputs@plt+0xb78c>
   14c34:	vmov.f64	d1, d7
   14c38:	bl	92cc <atan2@plt>
   14c3c:	vmov.f64	d8, d0
   14c40:	b	14b4c <fputs@plt+0xb790>
   14c44:	bl	92b4 <__stack_chk_fail@plt>
	...
   14c50:	push	{r4, r5, r6, lr}
   14c54:	movw	r5, #1424	; 0x590
   14c58:	movt	r5, #3
   14c5c:	sub	sp, sp, #24
   14c60:	mov	r2, r0
   14c64:	mov	r6, r1
   14c68:	ldr	r3, [r5]
   14c6c:	add	r0, sp, #12
   14c70:	mov	r1, r2
   14c74:	movw	r4, #11056	; 0x2b30
   14c78:	movt	r4, #3
   14c7c:	str	r3, [sp, #20]
   14c80:	bl	9df8 <fputs@plt+0xa3c>
   14c84:	add	r0, sp, #12
   14c88:	add	r1, sp, #4
   14c8c:	add	r2, sp, #8
   14c90:	bl	9e04 <fputs@plt+0xa48>
   14c94:	cmp	r0, #0
   14c98:	beq	14cec <fputs@plt+0xb930>
   14c9c:	ldr	r3, [sp, #4]
   14ca0:	cmp	r3, #0
   14ca4:	beq	14c84 <fputs@plt+0xb8c8>
   14ca8:	ldrb	r3, [r3]
   14cac:	ldrb	r3, [r4, r3]
   14cb0:	cmp	r3, #0
   14cb4:	beq	14c84 <fputs@plt+0xb8c8>
   14cb8:	ldr	r3, [sp, #8]
   14cbc:	ldr	r2, [r3]
   14cc0:	cmp	r2, #0
   14cc4:	bne	14c84 <fputs@plt+0xb8c8>
   14cc8:	vldr	d7, [r6]
   14ccc:	vldr	d5, [r3, #8]
   14cd0:	vldr	d6, [r3, #16]
   14cd4:	vadd.f64	d5, d5, d7
   14cd8:	vldr	d7, [r6, #8]
   14cdc:	vadd.f64	d6, d6, d7
   14ce0:	vstr	d5, [r3, #8]
   14ce4:	vstr	d6, [r3, #16]
   14ce8:	b	14c84 <fputs@plt+0xb8c8>
   14cec:	ldr	r2, [sp, #20]
   14cf0:	ldr	r3, [r5]
   14cf4:	cmp	r2, r3
   14cf8:	bne	14d04 <fputs@plt+0xb948>
   14cfc:	add	sp, sp, #24
   14d00:	pop	{r4, r5, r6, pc}
   14d04:	bl	92b4 <__stack_chk_fail@plt>
   14d08:	vldr	d7, [r1]
   14d0c:	vldr	d5, [r0, #56]	; 0x38
   14d10:	vldr	d6, [r0, #64]	; 0x40
   14d14:	vadd.f64	d5, d5, d7
   14d18:	vldr	d7, [r1, #8]
   14d1c:	push	{r4, r5, r6, lr}
   14d20:	mov	r6, r0
   14d24:	ldr	r4, [r0, #88]	; 0x58
   14d28:	mov	r5, r1
   14d2c:	cmp	r4, #0
   14d30:	vadd.f64	d6, d6, d7
   14d34:	vstr	d5, [r0, #56]	; 0x38
   14d38:	vstr	d6, [r0, #64]	; 0x40
   14d3c:	beq	14d60 <fputs@plt+0xb9a4>
   14d40:	ldr	r3, [r4]
   14d44:	mov	r0, r4
   14d48:	mov	r1, r5
   14d4c:	ldr	r3, [r3, #72]	; 0x48
   14d50:	blx	r3
   14d54:	ldr	r4, [r4, #8]
   14d58:	cmp	r4, #0
   14d5c:	bne	14d40 <fputs@plt+0xb984>
   14d60:	ldr	r0, [r6, #96]	; 0x60
   14d64:	mov	r1, r5
   14d68:	pop	{r4, r5, r6, lr}
   14d6c:	b	14c50 <fputs@plt+0xb894>
   14d70:	ldr	r0, [r0, #96]	; 0x60
   14d74:	b	9ce4 <fputs@plt+0x928>
   14d78:	mov	r2, #0
   14d7c:	mov	ip, #1
   14d80:	mov	r3, #0
   14d84:	str	ip, [r0]
   14d88:	movt	r3, #16368	; 0x3ff0
   14d8c:	strd	r2, [r0, #16]
   14d90:	bx	lr
   14d94:	ldr	ip, [pc, #36]	; 14dc0 <fputs@plt+0xba04>
   14d98:	mov	r2, #0
   14d9c:	push	{r4}		; (str r4, [sp, #-4]!)
   14da0:	mov	r4, #0
   14da4:	mov	r3, #0
   14da8:	str	r4, [r0, #4]
   14dac:	strd	r2, [r0, #8]
   14db0:	str	ip, [r0]
   14db4:	strd	r2, [r0, #16]
   14db8:	pop	{r4}		; (ldr r4, [sp], #4)
   14dbc:	bx	lr
   14dc0:	strdeq	r5, [r2], -r8
   14dc4:	vstr	d0, [r0, #16]
   14dc8:	vstr	d1, [r0, #8]
   14dcc:	bx	lr
   14dd0:	push	{r3, r4, r5, lr}
   14dd4:	mov	r5, r0
   14dd8:	ldr	r0, [r0, #4]
   14ddc:	mov	r4, r1
   14de0:	cmp	r0, #0
   14de4:	beq	14dec <fputs@plt+0xba30>
   14de8:	bl	92f0 <_ZdaPv@plt>
   14dec:	cmp	r4, #0
   14df0:	beq	14e00 <fputs@plt+0xba44>
   14df4:	ldrb	r3, [r4]
   14df8:	cmp	r3, #0
   14dfc:	bne	14e0c <fputs@plt+0xba50>
   14e00:	mov	r3, #0
   14e04:	str	r3, [r5, #4]
   14e08:	pop	{r3, r4, r5, pc}
   14e0c:	mov	r0, r4
   14e10:	bl	214b4 <_ZdlPv@@Base+0xac4>
   14e14:	str	r0, [r5, #4]
   14e18:	pop	{r3, r4, r5, pc}
   14e1c:	push	{r4, r5, r6, lr}
   14e20:	vldr	d6, [r0, #16]
   14e24:	movw	r6, #1424	; 0x590
   14e28:	vpush	{d8-d10}
   14e2c:	movt	r6, #3
   14e30:	vcmp.f64	d6, #0.0
   14e34:	sub	sp, sp, #24
   14e38:	vldr	d7, [r1]
   14e3c:	ldr	r3, [r6]
   14e40:	vldr	d5, [r2]
   14e44:	vldr	d9, [r2, #8]
   14e48:	mov	r4, r0
   14e4c:	vsub.f64	d10, d5, d7
   14e50:	vmrs	APSR_nzcv, fpscr
   14e54:	vldr	d7, [r1, #8]
   14e58:	str	r3, [sp, #20]
   14e5c:	vmov.f64	d8, d0
   14e60:	vsub.f64	d9, d9, d7
   14e64:	beq	14eb8 <fputs@plt+0xbafc>
   14e68:	vcmp.f64	d10, #0.0
   14e6c:	vmrs	APSR_nzcv, fpscr
   14e70:	beq	14f78 <fputs@plt+0xbbbc>
   14e74:	vdiv.f64	d7, d10, d6
   14e78:	vldr	d6, [r0, #8]
   14e7c:	vcmp.f64	d6, #0.0
   14e80:	vmrs	APSR_nzcv, fpscr
   14e84:	vmovne.f64	d8, d7
   14e88:	bne	14ecc <fputs@plt+0xbb10>
   14e8c:	vmov.f64	d0, #112	; 0x3f800000  1.0
   14e90:	vcmp.f64	d7, #0.0
   14e94:	vmrs	APSR_nzcv, fpscr
   14e98:	vmovne.f64	d0, d7
   14e9c:	ldr	r2, [sp, #20]
   14ea0:	ldr	r3, [r6]
   14ea4:	cmp	r2, r3
   14ea8:	bne	14fe0 <fputs@plt+0xbc24>
   14eac:	add	sp, sp, #24
   14eb0:	vpop	{d8-d10}
   14eb4:	pop	{r4, r5, r6, pc}
   14eb8:	vldr	d6, [r0, #8]
   14ebc:	vcmp.f64	d6, #0.0
   14ec0:	vmrs	APSR_nzcv, fpscr
   14ec4:	beq	14eec <fputs@plt+0xbb30>
   14ec8:	vldr	d8, [pc, #280]	; 14fe8 <fputs@plt+0xbc2c>
   14ecc:	vcmp.f64	d9, #0.0
   14ed0:	vmrs	APSR_nzcv, fpscr
   14ed4:	beq	14fbc <fputs@plt+0xbc00>
   14ed8:	vdiv.f64	d7, d9, d6
   14edc:	vcmpe.f64	d8, d7
   14ee0:	vmrs	APSR_nzcv, fpscr
   14ee4:	vmovpl.f64	d7, d8
   14ee8:	b	14e8c <fputs@plt+0xbad0>
   14eec:	vmov.f64	d7, #112	; 0x3f800000  1.0
   14ef0:	add	r1, sp, #24
   14ef4:	mov	r4, #0
   14ef8:	mov	r5, #0
   14efc:	movw	r0, #19804	; 0x4d5c
   14f00:	strd	r4, [r1, #-24]!	; 0xffffffe8
   14f04:	movt	r0, #2
   14f08:	mov	r1, sp
   14f0c:	vcmp.f64	d0, #0.0
   14f10:	vmrs	APSR_nzcv, fpscr
   14f14:	vmovls.f64	d8, d7
   14f18:	bl	9f24 <fputs@plt+0xb68>
   14f1c:	add	r1, sp, #24
   14f20:	movw	r0, #19816	; 0x4d68
   14f24:	movt	r0, #2
   14f28:	strd	r4, [r1, #-16]!
   14f2c:	bl	9f24 <fputs@plt+0xb68>
   14f30:	vldr	d5, [sp]
   14f34:	vcmpe.f64	d5, #0.0
   14f38:	vldr	d0, [sp, #8]
   14f3c:	vmrs	APSR_nzcv, fpscr
   14f40:	ble	14f54 <fputs@plt+0xbb98>
   14f44:	vdiv.f64	d7, d10, d8
   14f48:	vcmpe.f64	d5, d7
   14f4c:	vmrs	APSR_nzcv, fpscr
   14f50:	bmi	14fa0 <fputs@plt+0xbbe4>
   14f54:	vcmpe.f64	d0, #0.0
   14f58:	vmrs	APSR_nzcv, fpscr
   14f5c:	ble	14f70 <fputs@plt+0xbbb4>
   14f60:	vdiv.f64	d7, d9, d8
   14f64:	vcmpe.f64	d0, d7
   14f68:	vmrs	APSR_nzcv, fpscr
   14f6c:	bmi	14fa0 <fputs@plt+0xbbe4>
   14f70:	vmov.f64	d0, d8
   14f74:	b	14e9c <fputs@plt+0xbae0>
   14f78:	movw	r1, #13880	; 0x3638
   14f7c:	movt	r1, #3
   14f80:	movw	r0, #24860	; 0x611c
   14f84:	movt	r0, #2
   14f88:	mov	r2, r1
   14f8c:	mov	r3, r1
   14f90:	bl	1f708 <fputs@plt+0x1634c>
   14f94:	vldr	d6, [r4, #8]
   14f98:	vldr	d7, [pc, #72]	; 14fe8 <fputs@plt+0xbc2c>
   14f9c:	b	14e7c <fputs@plt+0xbac0>
   14fa0:	vdiv.f64	d5, d10, d5
   14fa4:	vdiv.f64	d9, d9, d0
   14fa8:	vcmpe.f64	d5, d9
   14fac:	vmrs	APSR_nzcv, fpscr
   14fb0:	vmovle.f64	d0, d9
   14fb4:	vmovgt.f64	d0, d5
   14fb8:	b	14e9c <fputs@plt+0xbae0>
   14fbc:	movw	r1, #13880	; 0x3638
   14fc0:	movt	r1, #3
   14fc4:	movw	r0, #24904	; 0x6148
   14fc8:	movt	r0, #2
   14fcc:	mov	r2, r1
   14fd0:	mov	r3, r1
   14fd4:	bl	1f708 <fputs@plt+0x1634c>
   14fd8:	vmov.f64	d7, d8
   14fdc:	b	14e8c <fputs@plt+0xbad0>
   14fe0:	bl	92b4 <__stack_chk_fail@plt>
   14fe4:	nop	{0}
	...
   14ff0:	push	{r4, r5, r6, lr}
   14ff4:	mov	r6, r0
   14ff8:	ldr	r0, [r1]
   14ffc:	cmp	r0, #0
   15000:	beq	15020 <fputs@plt+0xbc64>
   15004:	ldr	r3, [r0]
   15008:	ldr	r3, [r3, #8]
   1500c:	blx	r3
   15010:	mov	r0, r6
   15014:	vstr	d0, [r6]
   15018:	vstr	d1, [r6, #8]
   1501c:	pop	{r4, r5, r6, pc}
   15020:	ldrd	r4, [r1, #8]
   15024:	mov	r0, r6
   15028:	ldrd	r2, [r1, #16]
   1502c:	strd	r4, [r6]
   15030:	strd	r2, [r6, #8]
   15034:	pop	{r4, r5, r6, pc}
   15038:	mov	r2, #0
   1503c:	mov	r3, #0
   15040:	strd	r2, [r0]
   15044:	strd	r2, [r0, #8]
   15048:	bx	lr
   1504c:	vstr	d0, [r0]
   15050:	vstr	d1, [r0, #8]
   15054:	bx	lr
   15058:	vldr	d6, [r0]
   1505c:	vldr	d7, [r1]
   15060:	vcmp.f64	d6, d7
   15064:	vmrs	APSR_nzcv, fpscr
   15068:	bne	15088 <fputs@plt+0xbccc>
   1506c:	vldr	d6, [r0, #8]
   15070:	vldr	d7, [r1, #8]
   15074:	vcmp.f64	d6, d7
   15078:	vmrs	APSR_nzcv, fpscr
   1507c:	movne	r0, #0
   15080:	moveq	r0, #1
   15084:	bx	lr
   15088:	mov	r0, #0
   1508c:	bx	lr
   15090:	vldr	d6, [r0]
   15094:	vldr	d7, [r1]
   15098:	vcmp.f64	d6, d7
   1509c:	vmrs	APSR_nzcv, fpscr
   150a0:	bne	150c0 <fputs@plt+0xbd04>
   150a4:	vldr	d6, [r0, #8]
   150a8:	vldr	d7, [r1, #8]
   150ac:	vcmp.f64	d6, d7
   150b0:	vmrs	APSR_nzcv, fpscr
   150b4:	moveq	r0, #0
   150b8:	movne	r0, #1
   150bc:	bx	lr
   150c0:	mov	r0, #1
   150c4:	bx	lr
   150c8:	vldr	d6, [r1]
   150cc:	vldr	d5, [r0]
   150d0:	vldr	d7, [r0, #8]
   150d4:	vadd.f64	d6, d5, d6
   150d8:	vldr	d5, [r1, #8]
   150dc:	vadd.f64	d7, d7, d5
   150e0:	vstr	d6, [r0]
   150e4:	vstr	d7, [r0, #8]
   150e8:	bx	lr
   150ec:	vldr	d6, [r1]
   150f0:	vldr	d5, [r0]
   150f4:	vldr	d7, [r0, #8]
   150f8:	vsub.f64	d6, d5, d6
   150fc:	vldr	d5, [r1, #8]
   15100:	vsub.f64	d7, d7, d5
   15104:	vstr	d6, [r0]
   15108:	vstr	d7, [r0, #8]
   1510c:	bx	lr
   15110:	vldr	d6, [r0]
   15114:	vldr	d7, [r0, #8]
   15118:	vmul.f64	d6, d6, d0
   1511c:	vmul.f64	d0, d7, d0
   15120:	vstr	d6, [r0]
   15124:	vstr	d0, [r0, #8]
   15128:	bx	lr
   1512c:	vldr	d6, [r0]
   15130:	vldr	d7, [r0, #8]
   15134:	vdiv.f64	d6, d6, d0
   15138:	vdiv.f64	d0, d7, d0
   1513c:	vstr	d6, [r0]
   15140:	vstr	d0, [r0, #8]
   15144:	bx	lr
   15148:	vldr	d1, [r0, #8]
   1514c:	vldr	d0, [r0]
   15150:	vneg.f64	d1, d1
   15154:	sub	sp, sp, #32
   15158:	vneg.f64	d0, d0
   1515c:	add	sp, sp, #32
   15160:	bx	lr
   15164:	vldr	d7, [r1, #8]
   15168:	vldr	d1, [r0, #8]
   1516c:	vldr	d0, [r0]
   15170:	vadd.f64	d1, d1, d7
   15174:	vldr	d7, [r1]
   15178:	sub	sp, sp, #32
   1517c:	vadd.f64	d0, d0, d7
   15180:	add	sp, sp, #32
   15184:	bx	lr
   15188:	vldr	d7, [r1, #8]
   1518c:	vldr	d1, [r0, #8]
   15190:	vldr	d0, [r0]
   15194:	vsub.f64	d1, d1, d7
   15198:	vldr	d7, [r1]
   1519c:	sub	sp, sp, #32
   151a0:	vsub.f64	d0, d0, d7
   151a4:	add	sp, sp, #32
   151a8:	bx	lr
   151ac:	vldr	d1, [r0, #8]
   151b0:	vldr	d7, [r0]
   151b4:	vdiv.f64	d1, d1, d0
   151b8:	sub	sp, sp, #32
   151bc:	vdiv.f64	d0, d7, d0
   151c0:	add	sp, sp, #32
   151c4:	bx	lr
   151c8:	vldr	d1, [r0, #8]
   151cc:	vldr	d7, [r0]
   151d0:	vmul.f64	d1, d0, d1
   151d4:	sub	sp, sp, #32
   151d8:	vmul.f64	d0, d7, d0
   151dc:	add	sp, sp, #32
   151e0:	bx	lr
   151e4:	vldr	d7, [r1, #8]
   151e8:	vldr	d0, [r0, #8]
   151ec:	vmul.f64	d0, d0, d7
   151f0:	vldr	d6, [r0]
   151f4:	vldr	d7, [r1]
   151f8:	vmla.f64	d0, d6, d7
   151fc:	bx	lr
   15200:	vldr	d0, [r0]
   15204:	vldr	d1, [r0, #8]
   15208:	b	206e0 <fputs@plt+0x17324>
   1520c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15210:	vldr	d0, [r1]
   15214:	movw	r7, #1424	; 0x590
   15218:	vpush	{d8-d11}
   1521c:	movt	r7, #3
   15220:	mov	r4, r1
   15224:	sub	sp, sp, #104	; 0x68
   15228:	vldr	d1, [r4, #8]
   1522c:	ldr	r1, [r7]
   15230:	mov	r6, r0
   15234:	mov	r5, r2
   15238:	mov	r9, r3
   1523c:	ldr	r8, [sp, #168]	; 0xa8
   15240:	str	r1, [sp, #100]	; 0x64
   15244:	bl	206e0 <fputs@plt+0x17324>
   15248:	vcmp.f64	d0, #0.0
   1524c:	vmrs	APSR_nzcv, fpscr
   15250:	beq	15424 <fputs@plt+0xc068>
   15254:	vadd.f64	d6, d0, d0
   15258:	vldr	d9, [r5, #8]
   1525c:	vldr	d7, [r5]
   15260:	mov	lr, r9
   15264:	ldm	lr!, {r0, r1, r2, r3}
   15268:	vldr	d10, [r4]
   1526c:	add	r9, sp, #24
   15270:	vldr	d11, [r4, #8]
   15274:	ldr	r5, [r5, #16]
   15278:	mov	r4, #1
   1527c:	mov	ip, r9
   15280:	movw	sl, #2696	; 0xa88
   15284:	cmp	r5, #0
   15288:	movt	sl, #3
   1528c:	stmia	ip!, {r0, r1, r2, r3}
   15290:	ldm	lr, {r0, r1}
   15294:	vdiv.f64	d9, d9, d6
   15298:	str	r4, [sp, #24]
   1529c:	stm	ip, {r0, r1}
   152a0:	vdiv.f64	d0, d7, d0
   152a4:	vneg.f64	d10, d10
   152a8:	vmul.f64	d8, d9, d11
   152ac:	vmul.f64	d9, d9, d10
   152b0:	vnmul.f64	d11, d11, d0
   152b4:	vmul.f64	d10, d0, d10
   152b8:	bne	15358 <fputs@plt+0xbf9c>
   152bc:	vldr	d7, [r6, #8]
   152c0:	vldr	d6, [r6]
   152c4:	ldr	r0, [sl]
   152c8:	mov	r2, r6
   152cc:	mov	r3, #1
   152d0:	add	r1, sp, #8
   152d4:	ldr	ip, [r0]
   152d8:	ldr	ip, [ip, #24]
   152dc:	str	r9, [sp]
   152e0:	vadd.f64	d6, d10, d6
   152e4:	vadd.f64	d7, d11, d7
   152e8:	vsub.f64	d6, d6, d8
   152ec:	vsub.f64	d7, d7, d9
   152f0:	vstr	d6, [sp, #8]
   152f4:	vstr	d7, [sp, #16]
   152f8:	blx	ip
   152fc:	vldr	d0, [r6, #8]
   15300:	vldr	d7, [r6]
   15304:	vadd.f64	d0, d11, d0
   15308:	ldr	r0, [sl]
   1530c:	add	r1, sp, #8
   15310:	mov	r2, r6
   15314:	mov	r3, #1
   15318:	ldr	ip, [r0]
   1531c:	ldr	ip, [ip, #24]
   15320:	str	r9, [sp]
   15324:	vadd.f64	d10, d10, d7
   15328:	vadd.f64	d9, d9, d0
   1532c:	vadd.f64	d8, d8, d10
   15330:	vstr	d9, [sp, #16]
   15334:	vstr	d8, [sp, #8]
   15338:	blx	ip
   1533c:	ldr	r2, [sp, #100]	; 0x64
   15340:	ldr	r3, [r7]
   15344:	cmp	r2, r3
   15348:	bne	15444 <fputs@plt+0xc088>
   1534c:	add	sp, sp, #104	; 0x68
   15350:	vpop	{d8-d11}
   15354:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15358:	ldr	r0, [sl]
   1535c:	ldr	r3, [r0]
   15360:	ldr	r3, [r3, #72]	; 0x48
   15364:	blx	r3
   15368:	cmp	r0, #0
   1536c:	beq	152bc <fputs@plt+0xbf00>
   15370:	add	ip, sp, #64	; 0x40
   15374:	add	r3, sp, #112	; 0x70
   15378:	mov	r4, #0
   1537c:	mov	r5, #0
   15380:	strd	r4, [ip, #-16]
   15384:	add	ip, ip, #16
   15388:	strd	r4, [ip, #-24]	; 0xffffffe8
   1538c:	cmp	ip, r3
   15390:	bne	15380 <fputs@plt+0xbfc4>
   15394:	vldr	d7, [r6]
   15398:	vadd.f64	d10, d10, d7
   1539c:	vldr	d6, [r6, #8]
   153a0:	ldm	r6, {r0, r1, r2, r3}
   153a4:	add	r4, sp, #48	; 0x30
   153a8:	ldr	ip, [sl]
   153ac:	movw	r5, #39321	; 0x9999
   153b0:	movt	r5, #16313	; 0x3fb9
   153b4:	ldr	lr, [ip]
   153b8:	stm	r4, {r0, r1, r2, r3}
   153bc:	mov	r1, r8
   153c0:	ldr	r3, [lr, #56]	; 0x38
   153c4:	mov	r0, ip
   153c8:	vadd.f64	d11, d11, d6
   153cc:	mov	r2, r8
   153d0:	vadd.f64	d7, d8, d10
   153d4:	vsub.f64	d10, d10, d8
   153d8:	vstr	d7, [sp, #64]	; 0x40
   153dc:	vadd.f64	d7, d9, d11
   153e0:	vstr	d10, [sp, #80]	; 0x50
   153e4:	vsub.f64	d11, d11, d9
   153e8:	vstr	d7, [sp, #72]	; 0x48
   153ec:	vstr	d11, [sp, #88]	; 0x58
   153f0:	blx	r3
   153f4:	ldr	r0, [sl]
   153f8:	mov	r1, r4
   153fc:	mov	r3, r9
   15400:	movw	r4, #39322	; 0x999a
   15404:	mov	r2, #3
   15408:	ldr	ip, [r0]
   1540c:	movt	r4, #39321	; 0x9999
   15410:	vmov.f64	d0, #112	; 0x3f800000  1.0
   15414:	strd	r4, [sp, #40]	; 0x28
   15418:	ldr	ip, [ip, #28]
   1541c:	blx	ip
   15420:	b	1533c <fputs@plt+0xbf80>
   15424:	movw	r1, #13880	; 0x3638
   15428:	movt	r1, #3
   1542c:	movw	r0, #24952	; 0x6178
   15430:	movt	r0, #2
   15434:	mov	r2, r1
   15438:	mov	r3, r1
   1543c:	bl	1f708 <fputs@plt+0x1634c>
   15440:	b	1533c <fputs@plt+0xbf80>
   15444:	bl	92b4 <__stack_chk_fail@plt>
   15448:	push	{r4, r5, r6, r7, r8, lr}
   1544c:	vpush	{d8-d10}
   15450:	movw	r5, #1424	; 0x590
   15454:	movt	r5, #3
   15458:	ldr	r2, [r0, #24]
   1545c:	sub	sp, sp, #48	; 0x30
   15460:	mov	r4, r0
   15464:	ldr	r3, [r5]
   15468:	cmp	r2, #0
   1546c:	str	r3, [sp, #44]	; 0x2c
   15470:	bne	15490 <fputs@plt+0xc0d4>
   15474:	ldr	r2, [sp, #44]	; 0x2c
   15478:	ldr	r3, [r5]
   1547c:	cmp	r2, r3
   15480:	bne	15814 <fputs@plt+0xc458>
   15484:	add	sp, sp, #48	; 0x30
   15488:	vpop	{d8-d10}
   1548c:	pop	{r4, r5, r6, r7, r8, pc}
   15490:	movw	r7, #2696	; 0xa88
   15494:	movt	r7, #3
   15498:	add	r8, r0, #88	; 0x58
   1549c:	mov	r1, #0
   154a0:	ldr	r0, [r7]
   154a4:	add	r6, sp, #8
   154a8:	ldr	r2, [r4, #48]	; 0x30
   154ac:	ldr	r3, [r0]
   154b0:	ldr	r3, [r3, #56]	; 0x38
   154b4:	blx	r3
   154b8:	ldm	r8, {r0, r1, r2, r3}
   154bc:	ldrb	ip, [r4, #56]	; 0x38
   154c0:	cmp	ip, #0
   154c4:	stm	r6, {r0, r1, r2, r3}
   154c8:	bne	15618 <fputs@plt+0xc25c>
   154cc:	ldrb	r3, [r4, #57]	; 0x39
   154d0:	cmp	r3, #0
   154d4:	beq	156cc <fputs@plt+0xc310>
   154d8:	ldr	r3, [r4, #124]	; 0x7c
   154dc:	ldr	r1, [r4, #120]	; 0x78
   154e0:	sub	r2, r3, #-268435455	; 0xf0000001
   154e4:	cmp	r3, #1
   154e8:	lsl	r2, r2, #4
   154ec:	add	r3, r1, r2
   154f0:	subgt	r2, r2, #16
   154f4:	addgt	r2, r1, r2
   154f8:	movle	r2, r8
   154fc:	vldr	d9, [r3]
   15500:	vldr	d7, [r2]
   15504:	vldr	d8, [r3, #8]
   15508:	vsub.f64	d9, d9, d7
   1550c:	vldr	d7, [r2, #8]
   15510:	vsub.f64	d8, d8, d7
   15514:	vmov.f64	d0, d9
   15518:	vmov.f64	d1, d8
   1551c:	bl	206e0 <fputs@plt+0x17324>
   15520:	vcmp.f64	d0, #0.0
   15524:	vmov.f64	d10, d0
   15528:	vmrs	APSR_nzcv, fpscr
   1552c:	beq	155f8 <fputs@plt+0xc23c>
   15530:	ldr	r3, [r4, #80]	; 0x50
   15534:	cmp	r3, #0
   15538:	bne	15760 <fputs@plt+0xc3a4>
   1553c:	vldr	d7, [r4, #40]	; 0x28
   15540:	vabs.f64	d4, d7
   15544:	vldr	d5, [pc, #716]	; 15818 <fputs@plt+0xc45c>
   15548:	vldr	d7, [r4, #104]	; 0x68
   1554c:	vldr	d6, [r4, #112]	; 0x70
   15550:	ldr	r3, [r4, #124]	; 0x7c
   15554:	ldr	r2, [r4, #120]	; 0x78
   15558:	vdiv.f64	d10, d4, d10
   1555c:	sub	r1, r3, #-268435455	; 0xf0000001
   15560:	cmp	r3, #1
   15564:	lsl	r3, r1, #4
   15568:	add	r1, sp, #24
   1556c:	subgt	r8, r3, #16
   15570:	add	r0, r2, r3
   15574:	addgt	r8, r2, r8
   15578:	ldr	r3, [r4, #48]	; 0x30
   1557c:	add	r2, r4, #64	; 0x40
   15580:	vdiv.f64	d10, d10, d5
   15584:	vmov.f64	d5, #80	; 0x3e800000  0.250
   15588:	vmul.f64	d10, d10, d5
   1558c:	vmls.f64	d7, d10, d9
   15590:	vmls.f64	d6, d10, d8
   15594:	vstr	d7, [r0]
   15598:	vstr	d6, [r0, #8]
   1559c:	vldr	d4, [r8, #8]
   155a0:	vldr	d5, [r8]
   155a4:	vsub.f64	d6, d6, d4
   155a8:	add	r8, r4, #24
   155ac:	str	r3, [sp]
   155b0:	mov	r3, r8
   155b4:	vsub.f64	d7, d7, d5
   155b8:	vstr	d6, [sp, #32]
   155bc:	vstr	d7, [sp, #24]
   155c0:	bl	1520c <fputs@plt+0xbe50>
   155c4:	ldr	r2, [r4, #120]	; 0x78
   155c8:	ldr	r3, [r4, #124]	; 0x7c
   155cc:	ldr	r0, [r7]
   155d0:	mov	r1, r6
   155d4:	ldr	ip, [r0]
   155d8:	str	r8, [sp]
   155dc:	ldr	ip, [ip, #24]
   155e0:	blx	ip
   155e4:	ldr	r0, [r7]
   155e8:	ldr	r3, [r0]
   155ec:	ldr	r3, [r3, #60]	; 0x3c
   155f0:	blx	r3
   155f4:	b	15474 <fputs@plt+0xc0b8>
   155f8:	movw	r1, #13880	; 0x3638
   155fc:	movt	r1, #3
   15600:	movw	r0, #24952	; 0x6178
   15604:	movt	r0, #2
   15608:	mov	r2, r1
   1560c:	mov	r3, r1
   15610:	bl	1f708 <fputs@plt+0x1634c>
   15614:	b	15474 <fputs@plt+0xc0b8>
   15618:	ldr	r3, [r4, #120]	; 0x78
   1561c:	vldr	d7, [r4, #88]	; 0x58
   15620:	vldr	d9, [r3]
   15624:	vldr	d8, [r3, #8]
   15628:	vsub.f64	d9, d9, d7
   1562c:	vldr	d7, [r4, #96]	; 0x60
   15630:	vsub.f64	d8, d8, d7
   15634:	vmov.f64	d0, d9
   15638:	vmov.f64	d1, d8
   1563c:	bl	206e0 <fputs@plt+0x17324>
   15640:	vcmp.f64	d0, #0.0
   15644:	vmov.f64	d10, d0
   15648:	vmrs	APSR_nzcv, fpscr
   1564c:	beq	155f8 <fputs@plt+0xc23c>
   15650:	ldr	r3, [r4, #80]	; 0x50
   15654:	cmp	r3, #0
   15658:	bne	156dc <fputs@plt+0xc320>
   1565c:	vldr	d7, [r4, #40]	; 0x28
   15660:	vabs.f64	d4, d7
   15664:	vldr	d5, [pc, #428]	; 15818 <fputs@plt+0xc45c>
   15668:	vldr	d7, [r4, #88]	; 0x58
   1566c:	vldr	d6, [r4, #96]	; 0x60
   15670:	ldr	ip, [r4, #120]	; 0x78
   15674:	ldr	lr, [r4, #48]	; 0x30
   15678:	mov	r0, r6
   1567c:	vdiv.f64	d10, d4, d10
   15680:	add	r1, sp, #24
   15684:	add	r2, r4, #64	; 0x40
   15688:	add	r3, r4, #24
   1568c:	vdiv.f64	d10, d10, d5
   15690:	vmov.f64	d5, #80	; 0x3e800000  0.250
   15694:	vmul.f64	d5, d10, d5
   15698:	vmla.f64	d7, d5, d9
   1569c:	vmla.f64	d6, d5, d8
   156a0:	vstr	d7, [sp, #8]
   156a4:	vstr	d6, [sp, #16]
   156a8:	vldr	d4, [ip, #8]
   156ac:	vldr	d5, [ip]
   156b0:	vsub.f64	d6, d6, d4
   156b4:	str	lr, [sp]
   156b8:	vsub.f64	d7, d7, d5
   156bc:	vstr	d6, [sp, #32]
   156c0:	vstr	d7, [sp, #24]
   156c4:	bl	1520c <fputs@plt+0xbe50>
   156c8:	b	154cc <fputs@plt+0xc110>
   156cc:	add	r8, r4, #24
   156d0:	ldr	r2, [r4, #120]	; 0x78
   156d4:	ldr	r3, [r4, #124]	; 0x7c
   156d8:	b	155cc <fputs@plt+0xc210>
   156dc:	ldr	r0, [r7]
   156e0:	ldr	r3, [r0]
   156e4:	ldr	r3, [r3, #72]	; 0x48
   156e8:	blx	r3
   156ec:	cmp	r0, #0
   156f0:	beq	1565c <fputs@plt+0xc2a0>
   156f4:	vldr	d7, [r4, #64]	; 0x40
   156f8:	vdiv.f64	d10, d7, d10
   156fc:	ldr	r3, [r4, #120]	; 0x78
   15700:	vldr	d4, [r4, #96]	; 0x60
   15704:	vldr	d6, [r3, #8]
   15708:	vldr	d7, [r3]
   1570c:	vldr	d5, [r4, #88]	; 0x58
   15710:	ldr	ip, [r4, #48]	; 0x30
   15714:	mov	r0, r8
   15718:	add	r1, sp, #24
   1571c:	add	r2, r4, #64	; 0x40
   15720:	add	r3, r4, #24
   15724:	str	ip, [sp]
   15728:	vmul.f64	d9, d10, d9
   1572c:	vmul.f64	d8, d10, d8
   15730:	vsub.f64	d6, d4, d6
   15734:	vsub.f64	d7, d5, d7
   15738:	vstr	d6, [sp, #32]
   1573c:	vstr	d7, [sp, #24]
   15740:	bl	1520c <fputs@plt+0xbe50>
   15744:	vldr	d6, [r4, #96]	; 0x60
   15748:	vldr	d7, [r4, #88]	; 0x58
   1574c:	vadd.f64	d6, d8, d6
   15750:	vadd.f64	d7, d9, d7
   15754:	vstr	d6, [sp, #16]
   15758:	vstr	d7, [sp, #8]
   1575c:	b	154cc <fputs@plt+0xc110>
   15760:	ldr	r0, [r7]
   15764:	ldr	r3, [r0]
   15768:	ldr	r3, [r3, #72]	; 0x48
   1576c:	blx	r3
   15770:	cmp	r0, #0
   15774:	beq	1553c <fputs@plt+0xc180>
   15778:	vldr	d7, [r4, #64]	; 0x40
   1577c:	vdiv.f64	d10, d7, d10
   15780:	ldr	r3, [r4, #124]	; 0x7c
   15784:	add	r0, r4, #104	; 0x68
   15788:	ldr	r1, [r4, #120]	; 0x78
   1578c:	sub	r2, r3, #-268435455	; 0xf0000001
   15790:	cmp	r3, #1
   15794:	lsl	r2, r2, #4
   15798:	add	r3, r1, r2
   1579c:	subgt	r2, r2, #16
   157a0:	vldr	d7, [r3, #8]
   157a4:	addgt	r8, r1, r2
   157a8:	vldr	d5, [r3]
   157ac:	vldr	d6, [r8, #8]
   157b0:	ldr	r3, [r4, #48]	; 0x30
   157b4:	add	r1, sp, #24
   157b8:	add	r2, r4, #64	; 0x40
   157bc:	vmul.f64	d9, d10, d9
   157c0:	vmul.f64	d8, d10, d8
   157c4:	vsub.f64	d6, d7, d6
   157c8:	vldr	d7, [r8]
   157cc:	add	r8, r4, #24
   157d0:	str	r3, [sp]
   157d4:	mov	r3, r8
   157d8:	vsub.f64	d7, d5, d7
   157dc:	vstr	d6, [sp, #32]
   157e0:	vstr	d7, [sp, #24]
   157e4:	bl	1520c <fputs@plt+0xbe50>
   157e8:	vldr	d7, [r4, #112]	; 0x70
   157ec:	vldr	d6, [r4, #104]	; 0x68
   157f0:	vsub.f64	d7, d7, d8
   157f4:	ldr	r3, [r4, #124]	; 0x7c
   157f8:	ldr	r2, [r4, #120]	; 0x78
   157fc:	sub	r1, r3, #-268435455	; 0xf0000001
   15800:	add	r1, r2, r1, lsl #4
   15804:	vsub.f64	d9, d6, d9
   15808:	vstr	d7, [r1, #8]
   1580c:	vstr	d9, [r1]
   15810:	b	155cc <fputs@plt+0xc210>
   15814:	bl	92b4 <__stack_chk_fail@plt>
   15818:	andeq	r0, r0, r0
   1581c:	subsmi	r0, r2, r0
   15820:	push	{r4, r5, r6, r7, r8, lr}
   15824:	vpush	{d8-d10}
   15828:	movw	r5, #1424	; 0x590
   1582c:	movt	r5, #3
   15830:	ldr	r2, [r0, #24]
   15834:	sub	sp, sp, #48	; 0x30
   15838:	mov	r4, r0
   1583c:	ldr	r3, [r5]
   15840:	cmp	r2, #0
   15844:	str	r3, [sp, #44]	; 0x2c
   15848:	bne	15868 <fputs@plt+0xc4ac>
   1584c:	ldr	r2, [sp, #44]	; 0x2c
   15850:	ldr	r3, [r5]
   15854:	cmp	r2, r3
   15858:	bne	15bf4 <fputs@plt+0xc838>
   1585c:	add	sp, sp, #48	; 0x30
   15860:	vpop	{d8-d10}
   15864:	pop	{r4, r5, r6, r7, r8, pc}
   15868:	movw	r7, #2696	; 0xa88
   1586c:	movt	r7, #3
   15870:	add	r8, r0, #88	; 0x58
   15874:	mov	r1, #0
   15878:	ldr	r0, [r7]
   1587c:	add	r6, sp, #8
   15880:	ldr	r2, [r4, #48]	; 0x30
   15884:	ldr	r3, [r0]
   15888:	ldr	r3, [r3, #56]	; 0x38
   1588c:	blx	r3
   15890:	ldm	r8, {r0, r1, r2, r3}
   15894:	ldrb	ip, [r4, #56]	; 0x38
   15898:	cmp	ip, #0
   1589c:	stm	r6, {r0, r1, r2, r3}
   158a0:	bne	159f0 <fputs@plt+0xc634>
   158a4:	ldrb	r3, [r4, #57]	; 0x39
   158a8:	cmp	r3, #0
   158ac:	beq	15aa4 <fputs@plt+0xc6e8>
   158b0:	ldr	r3, [r4, #124]	; 0x7c
   158b4:	ldr	r1, [r4, #120]	; 0x78
   158b8:	sub	r2, r3, #-268435455	; 0xf0000001
   158bc:	cmp	r3, #1
   158c0:	lsl	r2, r2, #4
   158c4:	add	r3, r1, r2
   158c8:	subgt	r2, r2, #16
   158cc:	addgt	r2, r1, r2
   158d0:	movle	r2, r8
   158d4:	vldr	d9, [r3]
   158d8:	vldr	d7, [r2]
   158dc:	vldr	d8, [r3, #8]
   158e0:	vsub.f64	d9, d9, d7
   158e4:	vldr	d7, [r2, #8]
   158e8:	vsub.f64	d8, d8, d7
   158ec:	vmov.f64	d0, d9
   158f0:	vmov.f64	d1, d8
   158f4:	bl	206e0 <fputs@plt+0x17324>
   158f8:	vcmp.f64	d0, #0.0
   158fc:	vmov.f64	d10, d0
   15900:	vmrs	APSR_nzcv, fpscr
   15904:	beq	159d0 <fputs@plt+0xc614>
   15908:	ldr	r3, [r4, #80]	; 0x50
   1590c:	cmp	r3, #0
   15910:	bne	15b3c <fputs@plt+0xc780>
   15914:	vldr	d7, [r4, #40]	; 0x28
   15918:	vabs.f64	d4, d7
   1591c:	vldr	d5, [pc, #724]	; 15bf8 <fputs@plt+0xc83c>
   15920:	vldr	d7, [r4, #104]	; 0x68
   15924:	vldr	d6, [r4, #112]	; 0x70
   15928:	ldr	r3, [r4, #124]	; 0x7c
   1592c:	ldr	r2, [r4, #120]	; 0x78
   15930:	vdiv.f64	d10, d4, d10
   15934:	sub	r1, r3, #-268435455	; 0xf0000001
   15938:	cmp	r3, #1
   1593c:	lsl	r3, r1, #4
   15940:	add	r1, sp, #24
   15944:	subgt	r8, r3, #16
   15948:	add	r0, r2, r3
   1594c:	addgt	r8, r2, r8
   15950:	ldr	r3, [r4, #48]	; 0x30
   15954:	add	r2, r4, #64	; 0x40
   15958:	vdiv.f64	d10, d10, d5
   1595c:	vmov.f64	d5, #80	; 0x3e800000  0.250
   15960:	vmul.f64	d10, d10, d5
   15964:	vmls.f64	d7, d10, d9
   15968:	vmls.f64	d6, d10, d8
   1596c:	vstr	d7, [r0]
   15970:	vstr	d6, [r0, #8]
   15974:	vldr	d4, [r8, #8]
   15978:	vldr	d5, [r8]
   1597c:	vsub.f64	d6, d6, d4
   15980:	add	r8, r4, #24
   15984:	str	r3, [sp]
   15988:	mov	r3, r8
   1598c:	vsub.f64	d7, d7, d5
   15990:	vstr	d6, [sp, #32]
   15994:	vstr	d7, [sp, #24]
   15998:	bl	1520c <fputs@plt+0xbe50>
   1599c:	ldr	r2, [r4, #120]	; 0x78
   159a0:	ldr	r3, [r4, #124]	; 0x7c
   159a4:	ldr	r0, [r7]
   159a8:	mov	r1, r6
   159ac:	ldr	ip, [r0]
   159b0:	str	r8, [sp]
   159b4:	ldr	ip, [ip, #32]
   159b8:	blx	ip
   159bc:	ldr	r0, [r7]
   159c0:	ldr	r3, [r0]
   159c4:	ldr	r3, [r3, #60]	; 0x3c
   159c8:	blx	r3
   159cc:	b	1584c <fputs@plt+0xc490>
   159d0:	movw	r1, #13880	; 0x3638
   159d4:	movt	r1, #3
   159d8:	movw	r0, #24952	; 0x6178
   159dc:	movt	r0, #2
   159e0:	mov	r2, r1
   159e4:	mov	r3, r1
   159e8:	bl	1f708 <fputs@plt+0x1634c>
   159ec:	b	1584c <fputs@plt+0xc490>
   159f0:	ldr	r3, [r4, #120]	; 0x78
   159f4:	vldr	d7, [r4, #88]	; 0x58
   159f8:	vldr	d9, [r3]
   159fc:	vldr	d8, [r3, #8]
   15a00:	vsub.f64	d9, d9, d7
   15a04:	vldr	d7, [r4, #96]	; 0x60
   15a08:	vsub.f64	d8, d8, d7
   15a0c:	vmov.f64	d0, d9
   15a10:	vmov.f64	d1, d8
   15a14:	bl	206e0 <fputs@plt+0x17324>
   15a18:	vcmp.f64	d0, #0.0
   15a1c:	vmov.f64	d10, d0
   15a20:	vmrs	APSR_nzcv, fpscr
   15a24:	beq	159d0 <fputs@plt+0xc614>
   15a28:	ldr	r3, [r4, #80]	; 0x50
   15a2c:	cmp	r3, #0
   15a30:	bne	15ab4 <fputs@plt+0xc6f8>
   15a34:	vldr	d7, [r4, #40]	; 0x28
   15a38:	vabs.f64	d4, d7
   15a3c:	vldr	d5, [pc, #436]	; 15bf8 <fputs@plt+0xc83c>
   15a40:	vldr	d7, [r4, #88]	; 0x58
   15a44:	vldr	d6, [r4, #96]	; 0x60
   15a48:	ldr	ip, [r4, #120]	; 0x78
   15a4c:	ldr	lr, [r4, #48]	; 0x30
   15a50:	mov	r0, r6
   15a54:	vdiv.f64	d10, d4, d10
   15a58:	add	r1, sp, #24
   15a5c:	add	r2, r4, #64	; 0x40
   15a60:	add	r3, r4, #24
   15a64:	vdiv.f64	d10, d10, d5
   15a68:	vmov.f64	d5, #80	; 0x3e800000  0.250
   15a6c:	vmul.f64	d5, d10, d5
   15a70:	vmla.f64	d7, d5, d9
   15a74:	vmla.f64	d6, d5, d8
   15a78:	vstr	d7, [sp, #8]
   15a7c:	vstr	d6, [sp, #16]
   15a80:	vldr	d4, [ip, #8]
   15a84:	vldr	d5, [ip]
   15a88:	vsub.f64	d6, d6, d4
   15a8c:	str	lr, [sp]
   15a90:	vsub.f64	d7, d7, d5
   15a94:	vstr	d6, [sp, #32]
   15a98:	vstr	d7, [sp, #24]
   15a9c:	bl	1520c <fputs@plt+0xbe50>
   15aa0:	b	158a4 <fputs@plt+0xc4e8>
   15aa4:	add	r8, r4, #24
   15aa8:	ldr	r2, [r4, #120]	; 0x78
   15aac:	ldr	r3, [r4, #124]	; 0x7c
   15ab0:	b	159a4 <fputs@plt+0xc5e8>
   15ab4:	ldr	r0, [r7]
   15ab8:	ldr	r3, [r0]
   15abc:	ldr	r3, [r3, #72]	; 0x48
   15ac0:	blx	r3
   15ac4:	cmp	r0, #0
   15ac8:	beq	15a34 <fputs@plt+0xc678>
   15acc:	vldr	d7, [r4, #64]	; 0x40
   15ad0:	vdiv.f64	d10, d7, d10
   15ad4:	ldr	r3, [r4, #120]	; 0x78
   15ad8:	vldr	d5, [r4, #88]	; 0x58
   15adc:	vldr	d6, [r3, #8]
   15ae0:	vldr	d7, [r3]
   15ae4:	vldr	d4, [r4, #96]	; 0x60
   15ae8:	ldr	ip, [r4, #48]	; 0x30
   15aec:	mov	r0, r8
   15af0:	add	r1, sp, #24
   15af4:	add	r2, r4, #64	; 0x40
   15af8:	add	r3, r4, #24
   15afc:	str	ip, [sp]
   15b00:	vmul.f64	d9, d10, d9
   15b04:	vmul.f64	d8, d10, d8
   15b08:	vsub.f64	d7, d5, d7
   15b0c:	vsub.f64	d6, d4, d6
   15b10:	vstr	d7, [sp, #24]
   15b14:	vstr	d6, [sp, #32]
   15b18:	bl	1520c <fputs@plt+0xbe50>
   15b1c:	vldr	d5, [pc, #220]	; 15c00 <fputs@plt+0xc844>
   15b20:	vldr	d6, [r4, #96]	; 0x60
   15b24:	vldr	d7, [r4, #88]	; 0x58
   15b28:	vmla.f64	d6, d8, d5
   15b2c:	vmla.f64	d7, d9, d5
   15b30:	vstr	d6, [sp, #16]
   15b34:	vstr	d7, [sp, #8]
   15b38:	b	158a4 <fputs@plt+0xc4e8>
   15b3c:	ldr	r0, [r7]
   15b40:	ldr	r3, [r0]
   15b44:	ldr	r3, [r3, #72]	; 0x48
   15b48:	blx	r3
   15b4c:	cmp	r0, #0
   15b50:	beq	15914 <fputs@plt+0xc558>
   15b54:	vldr	d7, [r4, #64]	; 0x40
   15b58:	vdiv.f64	d10, d7, d10
   15b5c:	ldr	r3, [r4, #124]	; 0x7c
   15b60:	add	r0, r4, #104	; 0x68
   15b64:	ldr	r1, [r4, #120]	; 0x78
   15b68:	sub	r2, r3, #-268435455	; 0xf0000001
   15b6c:	cmp	r3, #1
   15b70:	lsl	r2, r2, #4
   15b74:	add	r3, r1, r2
   15b78:	subgt	r2, r2, #16
   15b7c:	vldr	d6, [r3, #8]
   15b80:	vldr	d5, [r3]
   15b84:	addgt	r8, r1, r2
   15b88:	vldr	d7, [r8, #8]
   15b8c:	ldr	r3, [r4, #48]	; 0x30
   15b90:	add	r1, sp, #24
   15b94:	add	r2, r4, #64	; 0x40
   15b98:	vmul.f64	d9, d10, d9
   15b9c:	vmul.f64	d8, d10, d8
   15ba0:	vsub.f64	d7, d6, d7
   15ba4:	vldr	d6, [r8]
   15ba8:	add	r8, r4, #24
   15bac:	str	r3, [sp]
   15bb0:	mov	r3, r8
   15bb4:	vsub.f64	d6, d5, d6
   15bb8:	vstr	d7, [sp, #32]
   15bbc:	vstr	d6, [sp, #24]
   15bc0:	bl	1520c <fputs@plt+0xbe50>
   15bc4:	vldr	d6, [r4, #104]	; 0x68
   15bc8:	vldr	d7, [r4, #112]	; 0x70
   15bcc:	vldr	d5, [pc, #44]	; 15c00 <fputs@plt+0xc844>
   15bd0:	vmls.f64	d6, d9, d5
   15bd4:	ldr	r3, [r4, #124]	; 0x7c
   15bd8:	ldr	r2, [r4, #120]	; 0x78
   15bdc:	sub	r1, r3, #-268435455	; 0xf0000001
   15be0:	add	r1, r2, r1, lsl #4
   15be4:	vmls.f64	d7, d8, d5
   15be8:	vstr	d6, [r1]
   15bec:	vstr	d7, [r1, #8]
   15bf0:	b	159a4 <fputs@plt+0xc5e8>
   15bf4:	bl	92b4 <__stack_chk_fail@plt>
   15bf8:	andeq	r0, r0, r0
   15bfc:	subsmi	r0, r2, r0
   15c00:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   15c04:	svccc	0x00b99999
   15c08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c0c:	vpush	{d8-d12}
   15c10:	movw	r8, #2696	; 0xa88
   15c14:	movt	r8, #3
   15c18:	movw	sl, #1424	; 0x590
   15c1c:	movt	sl, #3
   15c20:	sub	sp, sp, #132	; 0x84
   15c24:	ldr	r3, [r8]
   15c28:	mov	r4, r0
   15c2c:	ldr	lr, [sl]
   15c30:	mov	r1, #0
   15c34:	ldr	r2, [r0, #48]	; 0x30
   15c38:	ldr	ip, [r3]
   15c3c:	mov	r0, r3
   15c40:	str	lr, [sp, #124]	; 0x7c
   15c44:	ldr	r3, [ip, #56]	; 0x38
   15c48:	blx	r3
   15c4c:	ldr	r5, [r4, #120]	; 0x78
   15c50:	mov	r2, #0
   15c54:	mov	r3, #0
   15c58:	cmp	r5, #0
   15c5c:	strd	r2, [sp, #72]	; 0x48
   15c60:	strd	r2, [sp, #80]	; 0x50
   15c64:	beq	15fa8 <fputs@plt+0xcbec>
   15c68:	add	ip, r4, #104	; 0x68
   15c6c:	add	r6, sp, #40	; 0x28
   15c70:	add	r9, r4, #88	; 0x58
   15c74:	add	r7, sp, #56	; 0x38
   15c78:	ldm	ip, {r0, r1, r2, r3}
   15c7c:	str	ip, [sp, #16]
   15c80:	stm	r6, {r0, r1, r2, r3}
   15c84:	ldm	r9, {r0, r1, r2, r3}
   15c88:	stm	r7, {r0, r1, r2, r3}
   15c8c:	ldrb	r3, [r4, #56]	; 0x38
   15c90:	cmp	r3, #0
   15c94:	addeq	fp, r4, #24
   15c98:	beq	15df8 <fputs@plt+0xca3c>
   15c9c:	vldr	d10, [r4, #144]	; 0x90
   15ca0:	vldr	d0, [r4, #64]	; 0x40
   15ca4:	vdiv.f64	d0, d0, d10
   15ca8:	cmp	r5, #0
   15cac:	add	ip, sp, #32
   15cb0:	add	r3, sp, #24
   15cb4:	str	ip, [sp, #12]
   15cb8:	mov	fp, r5
   15cbc:	mov	r0, ip
   15cc0:	mov	r1, r3
   15cc4:	str	r3, [sp, #20]
   15cc8:	vnegne.f64	d0, d0
   15ccc:	bl	9170 <sincos@plt>
   15cd0:	vldr	d4, [r4, #136]	; 0x88
   15cd4:	vldr	d9, [r4, #96]	; 0x60
   15cd8:	vldr	d2, [sp, #32]
   15cdc:	vldr	d3, [sp, #24]
   15ce0:	vldr	d5, [r4, #128]	; 0x80
   15ce4:	vsub.f64	d9, d9, d4
   15ce8:	vldr	d8, [r4, #88]	; 0x58
   15cec:	cmp	r5, #0
   15cf0:	add	r5, sp, #72	; 0x48
   15cf4:	ldr	ip, [sp, #12]
   15cf8:	vmul.f64	d7, d9, d2
   15cfc:	vmul.f64	d6, d9, d3
   15d00:	vsub.f64	d8, d8, d5
   15d04:	vmla.f64	d6, d8, d2
   15d08:	vnmls.f64	d7, d8, d3
   15d0c:	vadd.f64	d6, d4, d6
   15d10:	vadd.f64	d7, d5, d7
   15d14:	vstr	d6, [sp, #80]	; 0x50
   15d18:	vstr	d7, [sp, #72]	; 0x48
   15d1c:	ldm	r5, {r0, r1, r2, r3}
   15d20:	stmne	r7, {r0, r1, r2, r3}
   15d24:	stmeq	r6, {r0, r1, r2, r3}
   15d28:	ldr	r3, [r4, #80]	; 0x50
   15d2c:	cmp	r3, #0
   15d30:	vmoveq.f64	d11, d4
   15d34:	vmoveq.f64	d12, d5
   15d38:	bne	16014 <fputs@plt+0xcc58>
   15d3c:	vldr	d7, [r4, #40]	; 0x28
   15d40:	vldr	d6, [pc, #920]	; 160e0 <fputs@plt+0xcd24>
   15d44:	ldm	r5, {r0, r1, r2, r3}
   15d48:	cmp	fp, #0
   15d4c:	vabs.f64	d0, d7
   15d50:	add	r9, sp, #88	; 0x58
   15d54:	add	fp, r4, #24
   15d58:	stm	r9, {r0, r1, r2, r3}
   15d5c:	vdiv.f64	d0, d0, d6
   15d60:	mov	r0, ip
   15d64:	ldr	r1, [sp, #20]
   15d68:	vmov.f64	d6, #80	; 0x3e800000  0.250
   15d6c:	vmul.f64	d0, d0, d6
   15d70:	vdiv.f64	d0, d0, d10
   15d74:	vnegne.f64	d0, d0
   15d78:	bl	9170 <sincos@plt>
   15d7c:	vldr	d5, [sp, #24]
   15d80:	vldr	d3, [sp, #32]
   15d84:	vldr	d6, [sp, #96]	; 0x60
   15d88:	vldr	d7, [sp, #88]	; 0x58
   15d8c:	ldr	ip, [r4, #48]	; 0x30
   15d90:	vmul.f64	d4, d5, d9
   15d94:	mov	r3, fp
   15d98:	mov	r0, r5
   15d9c:	add	r1, sp, #104	; 0x68
   15da0:	add	r2, r4, #64	; 0x40
   15da4:	str	ip, [sp]
   15da8:	vmul.f64	d9, d3, d9
   15dac:	vmla.f64	d4, d3, d8
   15db0:	vnmls.f64	d9, d5, d8
   15db4:	vadd.f64	d4, d4, d11
   15db8:	vadd.f64	d9, d9, d12
   15dbc:	vstr	d4, [sp, #80]	; 0x50
   15dc0:	vstr	d9, [sp, #72]	; 0x48
   15dc4:	vsub.f64	d4, d4, d6
   15dc8:	vsub.f64	d9, d9, d7
   15dcc:	vstr	d4, [sp, #112]	; 0x70
   15dd0:	vstr	d9, [sp, #104]	; 0x68
   15dd4:	bl	1520c <fputs@plt+0xbe50>
   15dd8:	ldr	r0, [r8]
   15ddc:	mov	r1, r5
   15de0:	mov	r2, r9
   15de4:	mov	r3, #1
   15de8:	ldr	ip, [r0]
   15dec:	str	fp, [sp]
   15df0:	ldr	ip, [ip, #24]
   15df4:	blx	ip
   15df8:	ldrb	r3, [r4, #57]	; 0x39
   15dfc:	cmp	r3, #0
   15e00:	beq	15f5c <fputs@plt+0xcba0>
   15e04:	vldr	d10, [r4, #144]	; 0x90
   15e08:	vldr	d0, [r4, #64]	; 0x40
   15e0c:	vdiv.f64	d0, d0, d10
   15e10:	ldr	r9, [r4, #120]	; 0x78
   15e14:	add	ip, sp, #32
   15e18:	add	r3, sp, #24
   15e1c:	cmp	r9, #0
   15e20:	str	r3, [sp, #20]
   15e24:	mov	r0, ip
   15e28:	mov	r1, r3
   15e2c:	str	ip, [sp, #12]
   15e30:	add	r5, sp, #72	; 0x48
   15e34:	vnegeq.f64	d0, d0
   15e38:	bl	9170 <sincos@plt>
   15e3c:	vldr	d4, [r4, #136]	; 0x88
   15e40:	vldr	d9, [r4, #112]	; 0x70
   15e44:	vldr	d2, [sp, #32]
   15e48:	vldr	d3, [sp, #24]
   15e4c:	vldr	d5, [r4, #128]	; 0x80
   15e50:	vsub.f64	d9, d9, d4
   15e54:	vldr	d8, [r4, #104]	; 0x68
   15e58:	cmp	r9, #0
   15e5c:	ldr	ip, [sp, #12]
   15e60:	vmul.f64	d7, d9, d2
   15e64:	vmul.f64	d6, d9, d3
   15e68:	vsub.f64	d8, d8, d5
   15e6c:	vmla.f64	d6, d8, d2
   15e70:	vnmls.f64	d7, d8, d3
   15e74:	vadd.f64	d6, d4, d6
   15e78:	vadd.f64	d7, d5, d7
   15e7c:	vstr	d6, [sp, #80]	; 0x50
   15e80:	vstr	d7, [sp, #72]	; 0x48
   15e84:	ldm	r5, {r0, r1, r2, r3}
   15e88:	stmne	r6, {r0, r1, r2, r3}
   15e8c:	stmeq	r7, {r0, r1, r2, r3}
   15e90:	ldr	r3, [r4, #80]	; 0x50
   15e94:	cmp	r3, #0
   15e98:	vmoveq.f64	d11, d4
   15e9c:	vmoveq.f64	d12, d5
   15ea0:	bne	15fd0 <fputs@plt+0xcc14>
   15ea4:	vldr	d7, [r4, #40]	; 0x28
   15ea8:	vldr	d6, [pc, #560]	; 160e0 <fputs@plt+0xcd24>
   15eac:	ldm	r5, {r0, r1, r2, r3}
   15eb0:	cmp	r9, #0
   15eb4:	vabs.f64	d0, d7
   15eb8:	add	r9, sp, #88	; 0x58
   15ebc:	stm	r9, {r0, r1, r2, r3}
   15ec0:	vdiv.f64	d0, d0, d6
   15ec4:	mov	r0, ip
   15ec8:	ldr	r1, [sp, #20]
   15ecc:	vmov.f64	d6, #80	; 0x3e800000  0.250
   15ed0:	vmul.f64	d0, d0, d6
   15ed4:	vdiv.f64	d0, d0, d10
   15ed8:	vnegeq.f64	d0, d0
   15edc:	bl	9170 <sincos@plt>
   15ee0:	vldr	d5, [sp, #24]
   15ee4:	vldr	d3, [sp, #32]
   15ee8:	vldr	d6, [sp, #96]	; 0x60
   15eec:	vldr	d7, [sp, #88]	; 0x58
   15ef0:	ldr	ip, [r4, #48]	; 0x30
   15ef4:	vmul.f64	d4, d5, d9
   15ef8:	mov	r0, r5
   15efc:	add	r1, sp, #104	; 0x68
   15f00:	add	r2, r4, #64	; 0x40
   15f04:	mov	r3, fp
   15f08:	str	ip, [sp]
   15f0c:	vmul.f64	d9, d3, d9
   15f10:	vmla.f64	d4, d3, d8
   15f14:	vnmls.f64	d9, d5, d8
   15f18:	vadd.f64	d4, d4, d11
   15f1c:	vadd.f64	d9, d9, d12
   15f20:	vstr	d4, [sp, #80]	; 0x50
   15f24:	vstr	d9, [sp, #72]	; 0x48
   15f28:	vsub.f64	d4, d4, d6
   15f2c:	vsub.f64	d9, d9, d7
   15f30:	vstr	d4, [sp, #112]	; 0x70
   15f34:	vstr	d9, [sp, #104]	; 0x68
   15f38:	bl	1520c <fputs@plt+0xbe50>
   15f3c:	ldr	r0, [r8]
   15f40:	mov	r1, r5
   15f44:	mov	r2, r9
   15f48:	mov	r3, #1
   15f4c:	ldr	ip, [r0]
   15f50:	str	fp, [sp]
   15f54:	ldr	ip, [ip, #24]
   15f58:	blx	ip
   15f5c:	ldr	r0, [r8]
   15f60:	add	r2, r4, #128	; 0x80
   15f64:	mov	r1, r6
   15f68:	mov	r3, r7
   15f6c:	ldr	ip, [r0]
   15f70:	str	fp, [sp]
   15f74:	ldr	ip, [ip, #36]	; 0x24
   15f78:	blx	ip
   15f7c:	ldr	r0, [r8]
   15f80:	ldr	r3, [r0]
   15f84:	ldr	r3, [r3, #60]	; 0x3c
   15f88:	blx	r3
   15f8c:	ldr	r2, [sp, #124]	; 0x7c
   15f90:	ldr	r3, [sl]
   15f94:	cmp	r2, r3
   15f98:	bne	160dc <fputs@plt+0xcd20>
   15f9c:	add	sp, sp, #132	; 0x84
   15fa0:	vpop	{d8-d12}
   15fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fa8:	add	r9, r4, #88	; 0x58
   15fac:	add	ip, r4, #104	; 0x68
   15fb0:	add	r6, sp, #40	; 0x28
   15fb4:	add	r7, sp, #56	; 0x38
   15fb8:	ldm	r9, {r0, r1, r2, r3}
   15fbc:	str	ip, [sp, #16]
   15fc0:	stm	r6, {r0, r1, r2, r3}
   15fc4:	ldm	ip, {r0, r1, r2, r3}
   15fc8:	stm	r7, {r0, r1, r2, r3}
   15fcc:	b	15c8c <fputs@plt+0xc8d0>
   15fd0:	ldr	r0, [r8]
   15fd4:	ldr	r3, [r0]
   15fd8:	ldr	r3, [r3, #72]	; 0x48
   15fdc:	str	ip, [sp, #12]
   15fe0:	blx	r3
   15fe4:	ldr	ip, [sp, #12]
   15fe8:	cmp	r0, #0
   15fec:	bne	16058 <fputs@plt+0xcc9c>
   15ff0:	vldr	d12, [r4, #128]	; 0x80
   15ff4:	vldr	d8, [r4, #104]	; 0x68
   15ff8:	vldr	d11, [r4, #136]	; 0x88
   15ffc:	vldr	d9, [r4, #112]	; 0x70
   16000:	vsub.f64	d8, d8, d12
   16004:	vldr	d10, [r4, #144]	; 0x90
   16008:	ldr	r9, [r4, #120]	; 0x78
   1600c:	vsub.f64	d9, d9, d11
   16010:	b	15ea4 <fputs@plt+0xcae8>
   16014:	ldr	r0, [r8]
   16018:	ldr	r3, [r0]
   1601c:	ldr	r3, [r3, #72]	; 0x48
   16020:	str	ip, [sp, #12]
   16024:	blx	r3
   16028:	ldr	ip, [sp, #12]
   1602c:	cmp	r0, #0
   16030:	bne	16098 <fputs@plt+0xccdc>
   16034:	vldr	d12, [r4, #128]	; 0x80
   16038:	vldr	d8, [r4, #88]	; 0x58
   1603c:	vldr	d11, [r4, #136]	; 0x88
   16040:	vldr	d9, [r4, #96]	; 0x60
   16044:	vsub.f64	d8, d8, d12
   16048:	vldr	d10, [r4, #144]	; 0x90
   1604c:	ldr	fp, [r4, #120]	; 0x78
   16050:	vsub.f64	d9, d9, d11
   16054:	b	15d3c <fputs@plt+0xc980>
   16058:	vldr	d5, [r4, #112]	; 0x70
   1605c:	vldr	d4, [r4, #104]	; 0x68
   16060:	vldr	d6, [sp, #80]	; 0x50
   16064:	vldr	d7, [sp, #72]	; 0x48
   16068:	vsub.f64	d6, d5, d6
   1606c:	ldr	ip, [r4, #48]	; 0x30
   16070:	ldr	r0, [sp, #16]
   16074:	add	r1, sp, #104	; 0x68
   16078:	add	r2, r4, #64	; 0x40
   1607c:	mov	r3, fp
   16080:	str	ip, [sp]
   16084:	vsub.f64	d7, d4, d7
   16088:	vstr	d6, [sp, #112]	; 0x70
   1608c:	vstr	d7, [sp, #104]	; 0x68
   16090:	bl	1520c <fputs@plt+0xbe50>
   16094:	b	15f5c <fputs@plt+0xcba0>
   16098:	vldr	d5, [r4, #96]	; 0x60
   1609c:	vldr	d4, [r4, #88]	; 0x58
   160a0:	vldr	d6, [sp, #80]	; 0x50
   160a4:	vldr	d7, [sp, #72]	; 0x48
   160a8:	vsub.f64	d6, d5, d6
   160ac:	ldr	r2, [r4, #48]	; 0x30
   160b0:	add	fp, r4, #24
   160b4:	mov	r0, r9
   160b8:	add	r1, sp, #104	; 0x68
   160bc:	str	r2, [sp]
   160c0:	mov	r3, fp
   160c4:	add	r2, r4, #64	; 0x40
   160c8:	vsub.f64	d7, d4, d7
   160cc:	vstr	d6, [sp, #112]	; 0x70
   160d0:	vstr	d7, [sp, #104]	; 0x68
   160d4:	bl	1520c <fputs@plt+0xbe50>
   160d8:	b	15df8 <fputs@plt+0xca3c>
   160dc:	bl	92b4 <__stack_chk_fail@plt>
   160e0:	andeq	r0, r0, r0
   160e4:	subsmi	r0, r2, r0
   160e8:	ldr	r3, [r0, #24]
   160ec:	cmp	r3, #0
   160f0:	bxeq	lr
   160f4:	b	15c08 <fputs@plt+0xc84c>
   160f8:	ldr	r1, [pc, #16]	; 16110 <fputs@plt+0xcd54>
   160fc:	mov	r2, #0
   16100:	str	r2, [r0, #4]
   16104:	str	r2, [r0, #8]
   16108:	str	r1, [r0]
   1610c:	bx	lr
   16110:	andeq	r5, r2, r8, lsr #16
   16114:	mov	r2, #0
   16118:	mov	r3, #0
   1611c:	mov	ip, #1
   16120:	strd	r2, [r0, #8]
   16124:	str	ip, [r0]
   16128:	strd	r2, [r0, #16]
   1612c:	strd	r2, [r0, #24]
   16130:	strd	r2, [r0, #32]
   16134:	bx	lr
   16138:	ldr	r3, [r0]
   1613c:	mov	ip, r0
   16140:	push	{r4, r5, r6, r7}
   16144:	cmp	r3, #0
   16148:	mov	r4, r1
   1614c:	bne	161ac <fputs@plt+0xcdf0>
   16150:	vldr	d7, [r1]
   16154:	vldr	d6, [r0, #8]
   16158:	vcmpe.f64	d7, d6
   1615c:	vldr	d5, [r0, #16]
   16160:	pop	{r4, r5, r6, r7}
   16164:	vmrs	APSR_nzcv, fpscr
   16168:	vmovpl.f64	d6, d7
   1616c:	vstrmi	d7, [r0, #8]
   16170:	vldr	d7, [r1, #8]
   16174:	vldrmi	d6, [r1]
   16178:	vcmpe.f64	d7, d5
   1617c:	vldr	d5, [r0, #24]
   16180:	vmrs	APSR_nzcv, fpscr
   16184:	vcmpe.f64	d5, d6
   16188:	vstrmi	d7, [r0, #16]
   1618c:	vldrmi	d7, [r1, #8]
   16190:	vmrs	APSR_nzcv, fpscr
   16194:	vstrmi	d6, [r0, #24]
   16198:	vldr	d6, [r0, #32]
   1619c:	vcmpe.f64	d7, d6
   161a0:	vmrs	APSR_nzcv, fpscr
   161a4:	vstrgt	d7, [r0, #32]
   161a8:	bx	lr
   161ac:	ldm	r1, {r0, r1, r2, r3}
   161b0:	add	r6, ip, #8
   161b4:	add	r5, ip, #24
   161b8:	mov	r7, #0
   161bc:	stm	r6, {r0, r1, r2, r3}
   161c0:	ldm	r4, {r0, r1, r2, r3}
   161c4:	stm	r5, {r0, r1, r2, r3}
   161c8:	str	r7, [ip]
   161cc:	pop	{r4, r5, r6, r7}
   161d0:	bx	lr
   161d4:	push	{r4, r5, r6, lr}
   161d8:	vpush	{d8}
   161dc:	vmov.f64	d8, #96	; 0x3f000000  0.5
   161e0:	vldr	d4, [r0, #80]	; 0x50
   161e4:	vldr	d5, [r0, #72]	; 0x48
   161e8:	vldr	d6, [r0, #64]	; 0x40
   161ec:	vldr	d7, [r0, #56]	; 0x38
   161f0:	movw	r5, #1424	; 0x590
   161f4:	movt	r5, #3
   161f8:	sub	sp, sp, #24
   161fc:	mov	r4, r0
   16200:	mov	r6, r1
   16204:	ldr	r3, [r5]
   16208:	mov	r0, r1
   1620c:	mov	r1, sp
   16210:	str	r3, [sp, #20]
   16214:	vmls.f64	d6, d4, d8
   16218:	vmls.f64	d7, d5, d8
   1621c:	vstr	d6, [sp, #8]
   16220:	vstr	d7, [sp]
   16224:	bl	16138 <fputs@plt+0xcd7c>
   16228:	vldr	d7, [r4, #80]	; 0x50
   1622c:	vldr	d6, [r4, #64]	; 0x40
   16230:	vldr	d5, [r4, #72]	; 0x48
   16234:	vmla.f64	d6, d7, d8
   16238:	vldr	d7, [r4, #56]	; 0x38
   1623c:	mov	r0, r6
   16240:	mov	r1, sp
   16244:	vmla.f64	d7, d5, d8
   16248:	vstr	d6, [sp, #8]
   1624c:	vstr	d7, [sp]
   16250:	bl	16138 <fputs@plt+0xcd7c>
   16254:	ldr	r2, [sp, #20]
   16258:	ldr	r3, [r5]
   1625c:	cmp	r2, r3
   16260:	bne	16270 <fputs@plt+0xceb4>
   16264:	add	sp, sp, #24
   16268:	vpop	{d8}
   1626c:	pop	{r4, r5, r6, pc}
   16270:	bl	92b4 <__stack_chk_fail@plt>
   16274:	push	{r3, r4, r5, lr}
   16278:	mov	r4, r0
   1627c:	mov	r5, r1
   16280:	mov	r0, r1
   16284:	add	r1, r4, #56	; 0x38
   16288:	bl	16138 <fputs@plt+0xcd7c>
   1628c:	mov	r0, r5
   16290:	add	r1, r4, #72	; 0x48
   16294:	pop	{r3, r4, r5, lr}
   16298:	b	16138 <fputs@plt+0xcd7c>
   1629c:	push	{r4, r5, r6, lr}
   162a0:	mov	r5, r0
   162a4:	mov	r6, r1
   162a8:	mov	r0, r1
   162ac:	add	r1, r5, #88	; 0x58
   162b0:	bl	16138 <fputs@plt+0xcd7c>
   162b4:	ldr	r3, [r5, #124]	; 0x7c
   162b8:	cmp	r3, #0
   162bc:	pople	{r4, r5, r6, pc}
   162c0:	mov	r4, #0
   162c4:	ldr	r1, [r5, #120]	; 0x78
   162c8:	mov	r0, r6
   162cc:	add	r1, r1, r4, lsl #4
   162d0:	add	r4, r4, #1
   162d4:	bl	16138 <fputs@plt+0xcd7c>
   162d8:	ldr	r3, [r5, #124]	; 0x7c
   162dc:	cmp	r3, r4
   162e0:	bgt	162c4 <fputs@plt+0xcf08>
   162e4:	pop	{r4, r5, r6, pc}
   162e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   162ec:	vpush	{d8-d9}
   162f0:	movw	r7, #1424	; 0x590
   162f4:	movt	r7, #3
   162f8:	add	r8, r0, #88	; 0x58
   162fc:	sub	sp, sp, #24
   16300:	mov	sl, r0
   16304:	ldr	r3, [r7]
   16308:	mov	r0, r1
   1630c:	mov	r6, r1
   16310:	mov	r1, r8
   16314:	str	r3, [sp, #20]
   16318:	bl	16138 <fputs@plt+0xcd7c>
   1631c:	mov	r0, r6
   16320:	add	r1, sl, #104	; 0x68
   16324:	bl	16138 <fputs@plt+0xcd7c>
   16328:	ldr	r3, [sl, #124]	; 0x7c
   1632c:	cmp	r3, #1
   16330:	ble	163c4 <fputs@plt+0xd008>
   16334:	ldr	r3, [sl, #120]	; 0x78
   16338:	mov	r1, r8
   1633c:	mov	r5, #0
   16340:	mov	r4, #1
   16344:	vmov.f64	d8, #64	; 0x3e000000  0.125
   16348:	vmov.f64	d9, #104	; 0x3f400000  0.750
   1634c:	b	16364 <fputs@plt+0xcfa8>
   16350:	cmp	r4, #1
   16354:	ldr	r3, [sl, #120]	; 0x78
   16358:	moveq	r1, r8
   1635c:	addne	r1, r3, r5
   16360:	mov	r5, r9
   16364:	add	r2, r3, r5
   16368:	vldr	d7, [r2]
   1636c:	vldr	d6, [r2, #8]
   16370:	vmul.f64	d7, d7, d9
   16374:	vldr	d3, [r1]
   16378:	vldr	d2, [r1, #8]
   1637c:	add	r9, r5, #16
   16380:	mov	r0, r6
   16384:	add	r3, r3, r9
   16388:	vldr	d5, [r3]
   1638c:	vldr	d4, [r3, #8]
   16390:	mov	r1, sp
   16394:	add	r4, r4, #1
   16398:	vmul.f64	d6, d6, d9
   1639c:	vmla.f64	d7, d3, d8
   163a0:	vmla.f64	d6, d2, d8
   163a4:	vmla.f64	d7, d5, d8
   163a8:	vmla.f64	d6, d4, d8
   163ac:	vstr	d7, [sp]
   163b0:	vstr	d6, [sp, #8]
   163b4:	bl	16138 <fputs@plt+0xcd7c>
   163b8:	ldr	r3, [sl, #124]	; 0x7c
   163bc:	cmp	r3, r4
   163c0:	bgt	16350 <fputs@plt+0xcf94>
   163c4:	ldr	r2, [sp, #20]
   163c8:	ldr	r3, [r7]
   163cc:	cmp	r2, r3
   163d0:	bne	163e0 <fputs@plt+0xd024>
   163d4:	add	sp, sp, #24
   163d8:	vpop	{d8-d9}
   163dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   163e0:	bl	92b4 <__stack_chk_fail@plt>
   163e4:	push	{r4, r5, r6, r7, lr}
   163e8:	vpush	{d8-d13}
   163ec:	movw	r7, #1424	; 0x590
   163f0:	movt	r7, #3
   163f4:	sub	sp, sp, #28
   163f8:	mov	r5, r0
   163fc:	mov	r6, r1
   16400:	ldr	r3, [r7]
   16404:	mov	r0, r1
   16408:	add	r1, r5, #88	; 0x58
   1640c:	str	r3, [sp, #20]
   16410:	bl	16138 <fputs@plt+0xcd7c>
   16414:	mov	r0, r6
   16418:	add	r1, r5, #104	; 0x68
   1641c:	bl	16138 <fputs@plt+0xcd7c>
   16420:	vldr	d6, [r5, #128]	; 0x80
   16424:	vldr	d10, [r5, #88]	; 0x58
   16428:	vsub.f64	d10, d10, d6
   1642c:	vldr	d7, [r5, #136]	; 0x88
   16430:	vldr	d12, [r5, #96]	; 0x60
   16434:	vcmp.f64	d10, #0.0
   16438:	vsub.f64	d12, d12, d7
   1643c:	vmrs	APSR_nzcv, fpscr
   16440:	bne	16450 <fputs@plt+0xd094>
   16444:	vcmp.f64	d12, #0.0
   16448:	vmrs	APSR_nzcv, fpscr
   1644c:	beq	165a4 <fputs@plt+0xd1e8>
   16450:	vldr	d11, [r5, #104]	; 0x68
   16454:	vsub.f64	d11, d11, d6
   16458:	vldr	d13, [r5, #112]	; 0x70
   1645c:	vcmp.f64	d11, #0.0
   16460:	vsub.f64	d13, d13, d7
   16464:	vmrs	APSR_nzcv, fpscr
   16468:	bne	16478 <fputs@plt+0xd0bc>
   1646c:	vcmp.f64	d13, #0.0
   16470:	vmrs	APSR_nzcv, fpscr
   16474:	beq	165a4 <fputs@plt+0xd1e8>
   16478:	vmov.f64	d1, d10
   1647c:	vldr	d9, [pc, #372]	; 165f8 <fputs@plt+0xd23c>
   16480:	vmov.f64	d0, d12
   16484:	bl	92cc <atan2@plt>
   16488:	vmov.f64	d1, d11
   1648c:	vdiv.f64	d8, d0, d9
   16490:	vmov.f64	d0, d13
   16494:	bl	92cc <atan2@plt>
   16498:	ldr	r3, [r5, #120]	; 0x78
   1649c:	cmp	r3, #0
   164a0:	vdiv.f64	d9, d0, d9
   164a4:	vmoveq.f64	d7, d9
   164a8:	vmoveq.f64	d9, d8
   164ac:	vcmpe.f64	d9, #0.0
   164b0:	vmoveq.f64	d8, d7
   164b4:	vmrs	APSR_nzcv, fpscr
   164b8:	vmovmi.f64	d7, #16	; 0x40800000  4.0
   164bc:	vaddmi.f64	d9, d9, d7
   164c0:	vcmpe.f64	d8, d9
   164c4:	vmrs	APSR_nzcv, fpscr
   164c8:	bhi	164e0 <fputs@plt+0xd124>
   164cc:	vmov.f64	d7, #16	; 0x40800000  4.0
   164d0:	vadd.f64	d8, d8, d7
   164d4:	vcmpe.f64	d9, d8
   164d8:	vmrs	APSR_nzcv, fpscr
   164dc:	bge	164d0 <fputs@plt+0xd114>
   164e0:	vmov.f64	d0, d10
   164e4:	vmov.f64	d1, d12
   164e8:	bl	206e0 <fputs@plt+0x17324>
   164ec:	vmov.f64	d1, d13
   164f0:	vmov.f64	d10, d0
   164f4:	vmov.f64	d0, d11
   164f8:	bl	206e0 <fputs@plt+0x17324>
   164fc:	vcvt.s32.f64	s13, d9
   16500:	vmov	r4, s13
   16504:	add	r4, r4, #1
   16508:	vmov	s13, r4
   1650c:	vcmp.f64	d10, d0
   16510:	vcvt.f64.s32	d7, s13
   16514:	vmrs	APSR_nzcv, fpscr
   16518:	vmov.f64	d11, d0
   1651c:	vcmpe.f64	d8, d7
   16520:	vmovgt.f64	d11, d10
   16524:	vmrs	APSR_nzcv, fpscr
   16528:	ble	165a4 <fputs@plt+0xd1e8>
   1652c:	vneg.f64	d9, d11
   16530:	asr	r2, r4, #31
   16534:	lsr	r2, r2, #30
   16538:	add	r3, r4, r2
   1653c:	and	r3, r3, #3
   16540:	rsb	r3, r2, r3
   16544:	cmp	r3, #3
   16548:	ldrls	pc, [pc, r3, lsl #2]
   1654c:	b	165e4 <fputs@plt+0xd228>
   16550:	andeq	r6, r1, r0, ror #10
   16554:	ldrdeq	r6, [r1], -r8
   16558:	andeq	r6, r1, ip, asr #11
   1655c:	andeq	r6, r1, r0, asr #11
   16560:	vmov.f64	d4, d11
   16564:	vldr	d7, [pc, #148]	; 16600 <fputs@plt+0xd244>
   16568:	vldr	d5, [r5, #136]	; 0x88
   1656c:	vldr	d6, [r5, #128]	; 0x80
   16570:	add	r4, r4, #1
   16574:	mov	r0, r6
   16578:	mov	r1, sp
   1657c:	vadd.f64	d7, d7, d5
   16580:	vadd.f64	d6, d4, d6
   16584:	vstr	d7, [sp, #8]
   16588:	vstr	d6, [sp]
   1658c:	bl	16138 <fputs@plt+0xcd7c>
   16590:	vmov	s13, r4
   16594:	vcvt.f64.s32	d7, s13
   16598:	vcmpe.f64	d7, d8
   1659c:	vmrs	APSR_nzcv, fpscr
   165a0:	bmi	16530 <fputs@plt+0xd174>
   165a4:	ldr	r2, [sp, #20]
   165a8:	ldr	r3, [r7]
   165ac:	cmp	r2, r3
   165b0:	bne	165f0 <fputs@plt+0xd234>
   165b4:	add	sp, sp, #28
   165b8:	vpop	{d8-d13}
   165bc:	pop	{r4, r5, r6, r7, pc}
   165c0:	vmov.f64	d7, d9
   165c4:	vldr	d4, [pc, #52]	; 16600 <fputs@plt+0xd244>
   165c8:	b	16568 <fputs@plt+0xd1ac>
   165cc:	vmov.f64	d4, d9
   165d0:	vldr	d7, [pc, #40]	; 16600 <fputs@plt+0xd244>
   165d4:	b	16568 <fputs@plt+0xd1ac>
   165d8:	vmov.f64	d7, d11
   165dc:	vldr	d4, [pc, #28]	; 16600 <fputs@plt+0xd244>
   165e0:	b	16568 <fputs@plt+0xd1ac>
   165e4:	vldr	d7, [pc, #20]	; 16600 <fputs@plt+0xd244>
   165e8:	vmov.f64	d4, d7
   165ec:	b	16568 <fputs@plt+0xd1ac>
   165f0:	bl	92b4 <__stack_chk_fail@plt>
   165f4:	nop	{0}
   165f8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   165fc:	svccc	0x00f921fb
	...
   16608:	mov	ip, r0
   1660c:	push	{r4, r5}
   16610:	mov	r4, r0
   16614:	mov	r5, r3
   16618:	str	r2, [ip], #8
   1661c:	ldm	r1, {r0, r1, r2, r3}
   16620:	stm	ip, {r0, r1, r2, r3}
   16624:	mov	r0, r4
   16628:	str	r5, [r4, #24]
   1662c:	pop	{r4, r5}
   16630:	bx	lr
   16634:	push	{r4}		; (str r4, [sp, #-4]!)
   16638:	mov	r4, #0
   1663c:	str	r1, [r0, #4]
   16640:	str	r4, [r0]
   16644:	str	r4, [r0, #8]
   16648:	str	r4, [r0, #12]
   1664c:	str	r2, [r0, #16]
   16650:	str	r3, [r0, #20]
   16654:	pop	{r4}		; (ldr r4, [sp], #4)
   16658:	bx	lr
   1665c:	push	{r4, lr}
   16660:	mov	r4, r0
   16664:	ldr	r0, [r0, #4]
   16668:	cmp	r0, #0
   1666c:	beq	16674 <fputs@plt+0xd2b8>
   16670:	bl	92f0 <_ZdaPv@plt>
   16674:	mov	r0, r4
   16678:	pop	{r4, pc}
   1667c:	push	{r4}		; (str r4, [sp, #-4]!)
   16680:	mov	r2, #0
   16684:	mov	r3, #0
   16688:	mov	r4, #0
   1668c:	str	r1, [r0, #4]
   16690:	str	r4, [r0, #8]
   16694:	str	r4, [r0, #12]
   16698:	str	r4, [r0]
   1669c:	str	r4, [r0, #16]
   166a0:	str	r4, [r0, #204]	; 0xcc
   166a4:	str	r4, [r0, #224]	; 0xe0
   166a8:	str	r4, [r0, #100]	; 0x64
   166ac:	str	r4, [r0, #192]	; 0xc0
   166b0:	str	r4, [r0, #196]	; 0xc4
   166b4:	str	r4, [r0, #96]	; 0x60
   166b8:	str	r4, [r0, #200]	; 0xc8
   166bc:	strd	r2, [r0, #32]
   166c0:	strd	r2, [r0, #40]	; 0x28
   166c4:	strd	r2, [r0, #48]	; 0x30
   166c8:	strd	r2, [r0, #56]	; 0x38
   166cc:	strd	r2, [r0, #64]	; 0x40
   166d0:	strd	r2, [r0, #72]	; 0x48
   166d4:	strd	r2, [r0, #80]	; 0x50
   166d8:	strd	r2, [r0, #88]	; 0x58
   166dc:	strd	r2, [r0, #208]	; 0xd0
   166e0:	strd	r2, [r0, #216]	; 0xd8
   166e4:	strd	r2, [r0, #136]	; 0x88
   166e8:	strd	r2, [r0, #128]	; 0x80
   166ec:	strd	r2, [r0, #176]	; 0xb0
   166f0:	strd	r2, [r0, #184]	; 0xb8
   166f4:	pop	{r4}		; (ldr r4, [sp], #4)
   166f8:	bx	lr
   166fc:	push	{r4}		; (str r4, [sp, #-4]!)
   16700:	ldr	r4, [pc, #32]	; 16728 <fputs@plt+0xd36c>
   16704:	str	r1, [r0, #12]
   16708:	mov	r1, #0
   1670c:	str	r2, [r0, #16]
   16710:	str	r4, [r0]
   16714:	str	r3, [r0, #20]
   16718:	str	r1, [r0, #4]
   1671c:	str	r1, [r0, #8]
   16720:	pop	{r4}		; (ldr r4, [sp], #4)
   16724:	bx	lr
   16728:	andeq	r5, r2, r8, asr r9
   1672c:	push	{r4, r5, r6, lr}
   16730:	mov	r4, r0
   16734:	mov	r0, #24
   16738:	mov	r5, r1
   1673c:	mov	r6, r2
   16740:	bl	209a0 <_Znwj@@Base>
   16744:	ldr	r1, [pc, #24]	; 16764 <fputs@plt+0xd3a8>
   16748:	mov	ip, #0
   1674c:	str	r4, [r0, #12]
   16750:	str	r5, [r0, #16]
   16754:	str	r6, [r0, #20]
   16758:	stm	r0, {r1, ip}
   1675c:	str	ip, [r0, #8]
   16760:	pop	{r4, r5, r6, pc}
   16764:	andeq	r5, r2, r8, asr r9
   16768:	push	{r3, lr}
   1676c:	mov	r0, #12
   16770:	bl	209a0 <_Znwj@@Base>
   16774:	ldr	r1, [pc, #16]	; 1678c <fputs@plt+0xd3d0>
   16778:	mov	r2, #0
   1677c:	str	r1, [r0]
   16780:	str	r2, [r0, #4]
   16784:	str	r2, [r0, #8]
   16788:	pop	{r3, pc}
   1678c:	muleq	r2, r0, r8
   16790:	ldr	r1, [pc, #16]	; 167a8 <fputs@plt+0xd3ec>
   16794:	mov	r2, #0
   16798:	str	r2, [r0, #4]
   1679c:	str	r2, [r0, #8]
   167a0:	str	r1, [r0]
   167a4:	bx	lr
   167a8:	muleq	r2, r0, r8
   167ac:	mov	r2, #0
   167b0:	str	r2, [r0]
   167b4:	str	r2, [r0, #4]
   167b8:	bx	lr
   167bc:	ldr	r3, [r0, #4]
   167c0:	cmp	r3, #0
   167c4:	str	r3, [r1, #4]
   167c8:	streq	r3, [r1, #8]
   167cc:	movne	r2, #0
   167d0:	streq	r1, [r0, #4]
   167d4:	strne	r2, [r1, #8]
   167d8:	streq	r1, [r0]
   167dc:	strne	r1, [r3, #8]
   167e0:	strne	r1, [r0, #4]
   167e4:	bx	lr
   167e8:	push	{r4, r5, r6, lr}
   167ec:	mov	r5, r0
   167f0:	ldr	r4, [r0, #4]
   167f4:	mov	r6, r1
   167f8:	cmp	r4, #0
   167fc:	beq	16824 <fputs@plt+0xd468>
   16800:	ldr	r3, [r4]
   16804:	mov	r0, r4
   16808:	ldr	r3, [r3, #84]	; 0x54
   1680c:	blx	r3
   16810:	cmp	r0, #11
   16814:	beq	16838 <fputs@plt+0xd47c>
   16818:	ldr	r4, [r4, #4]
   1681c:	cmp	r4, #0
   16820:	bne	16800 <fputs@plt+0xd444>
   16824:	movw	r1, #24848	; 0x6110
   16828:	mov	r0, #520	; 0x208
   1682c:	movt	r1, #2
   16830:	mov	r4, #0
   16834:	bl	1eec8 <fputs@plt+0x15b0c>
   16838:	ldr	r3, [r4, #8]
   1683c:	mov	r0, r4
   16840:	cmp	r3, #0
   16844:	str	r3, [r6]
   16848:	ldrne	r1, [r5, #4]
   1684c:	movne	r2, #0
   16850:	streq	r3, [r6, #4]
   16854:	strne	r1, [r6, #4]
   16858:	strne	r2, [r3, #4]
   1685c:	ldr	r3, [r4, #4]
   16860:	cmp	r3, #0
   16864:	str	r3, [r5, #4]
   16868:	streq	r3, [r5]
   1686c:	movne	r2, #0
   16870:	strne	r2, [r3, #8]
   16874:	ldr	r3, [r4]
   16878:	ldr	r3, [r3, #4]
   1687c:	blx	r3
   16880:	pop	{r4, r5, r6, pc}
   16884:	mov	r2, #0
   16888:	mvn	r1, #0
   1688c:	str	r2, [r0]
   16890:	str	r1, [r0, #16]
   16894:	str	r2, [r0, #12]
   16898:	str	r2, [r0, #4]
   1689c:	str	r2, [r0, #8]
   168a0:	bx	lr
   168a4:	push	{r4, lr}
   168a8:	mov	r4, r0
   168ac:	ldr	r0, [r0]
   168b0:	cmp	r0, #0
   168b4:	beq	168bc <fputs@plt+0xd500>
   168b8:	bl	92f0 <_ZdaPv@plt>
   168bc:	mov	r0, r4
   168c0:	pop	{r4, pc}
   168c4:	push	{r4, r5}
   168c8:	mov	ip, #0
   168cc:	ldr	r4, [pc, #56]	; 1690c <fputs@plt+0xd550>
   168d0:	mov	r5, #1
   168d4:	mov	r2, #0
   168d8:	mov	r3, #0
   168dc:	str	r5, [r0, #24]
   168e0:	movt	r3, #16368	; 0x3ff0
   168e4:	stm	r0, {r4, ip}
   168e8:	str	ip, [r0, #8]
   168ec:	str	ip, [r0, #12]
   168f0:	str	ip, [r0, #16]
   168f4:	str	ip, [r0, #20]
   168f8:	str	ip, [r0, #48]	; 0x30
   168fc:	strd	r2, [r0, #40]	; 0x28
   16900:	str	ip, [r0, #52]	; 0x34
   16904:	pop	{r4, r5}
   16908:	bx	lr
   1690c:	andeq	r5, r2, r0, asr #19
   16910:	mov	r3, #2
   16914:	vstr	d0, [r0, #32]
   16918:	str	r3, [r0, #24]
   1691c:	bx	lr
   16920:	mov	r3, #3
   16924:	vstr	d0, [r0, #32]
   16928:	str	r3, [r0, #24]
   1692c:	bx	lr
   16930:	vstr	d0, [r0, #40]	; 0x28
   16934:	bx	lr
   16938:	push	{r4, lr}
   1693c:	mov	r4, r0
   16940:	mov	r0, r1
   16944:	bl	214b4 <_ZdlPv@@Base+0xac4>
   16948:	str	r0, [r4, #48]	; 0x30
   1694c:	pop	{r4, pc}
   16950:	ldr	r0, [r0, #48]	; 0x30
   16954:	bx	lr
   16958:	mov	r3, #0
   1695c:	str	r3, [r0, #24]
   16960:	bx	lr
   16964:	push	{r4, r5, r6, r7, r8, lr}
   16968:	subs	r4, r1, #0
   1696c:	mov	r6, r0
   16970:	str	r2, [r0, #20]
   16974:	beq	16a48 <fputs@plt+0xd68c>
   16978:	mov	r3, r4
   1697c:	mov	r5, #0
   16980:	ldr	r3, [r3]
   16984:	add	r5, r5, #1
   16988:	cmp	r3, #0
   1698c:	bne	16980 <fputs@plt+0xd5c4>
   16990:	cmp	r5, #106954752	; 0x6600000
   16994:	mvnhi	r0, #0
   16998:	bls	16a38 <fputs@plt+0xd67c>
   1699c:	bl	9278 <_Znaj@plt>
   169a0:	mov	r1, #0
   169a4:	mov	r2, r1
   169a8:	mvn	ip, #0
   169ac:	mov	r7, #20
   169b0:	add	r3, r0, #28
   169b4:	str	r5, [r0, #4]
   169b8:	str	r7, [r0]
   169bc:	add	r1, r1, #1
   169c0:	str	r2, [r3, #-20]	; 0xffffffec
   169c4:	cmp	r5, r1
   169c8:	stmdb	r3, {r2, ip}
   169cc:	str	r2, [r3, #-16]
   169d0:	add	r3, r3, #20
   169d4:	str	r2, [r3, #-32]	; 0xffffffe0
   169d8:	bne	169bc <fputs@plt+0xd600>
   169dc:	mov	ip, #0
   169e0:	mov	r3, r0
   169e4:	mov	r8, ip
   169e8:	add	r0, r0, #8
   169ec:	str	r0, [r6, #16]
   169f0:	ldr	r0, [r4, #4]
   169f4:	add	r1, r4, #8
   169f8:	ldr	r7, [r4, #16]
   169fc:	add	r2, r3, #12
   16a00:	ldr	r5, [r4, #20]
   16a04:	add	ip, ip, #1
   16a08:	str	r0, [r3, #8]
   16a0c:	add	r3, r3, #20
   16a10:	str	r8, [r4, #4]
   16a14:	ldr	r4, [r4]
   16a18:	ldm	r1, {r0, r1}
   16a1c:	cmp	r4, #0
   16a20:	stm	r2, {r0, r1}
   16a24:	str	r7, [r3]
   16a28:	str	r5, [r3, #4]
   16a2c:	bne	169f0 <fputs@plt+0xd634>
   16a30:	str	ip, [r6, #12]
   16a34:	pop	{r4, r5, r6, r7, r8, pc}
   16a38:	add	r0, r5, r5, lsl #2
   16a3c:	lsl	r0, r0, #2
   16a40:	add	r0, r0, #8
   16a44:	b	1699c <fputs@plt+0xd5e0>
   16a48:	str	r4, [r0, #16]
   16a4c:	mov	ip, r4
   16a50:	str	ip, [r6, #12]
   16a54:	pop	{r4, r5, r6, r7, r8, pc}
   16a58:	push	{r4, r5, r6, r7, r8, r9}
   16a5c:	mov	ip, r0
   16a60:	mov	r2, #0
   16a64:	mov	r3, #0
   16a68:	strd	r2, [r0, #56]	; 0x38
   16a6c:	add	r7, ip, #72	; 0x48
   16a70:	strd	r2, [r0, #64]	; 0x40
   16a74:	mov	r6, #0
   16a78:	ldm	r1, {r0, r1, r2, r3}
   16a7c:	mov	r4, #0
   16a80:	ldr	r8, [pc, #64]	; 16ac8 <fputs@plt+0xd70c>
   16a84:	mov	r9, #1
   16a88:	str	r6, [ip, #4]
   16a8c:	mov	r5, #0
   16a90:	str	r9, [ip, #24]
   16a94:	movt	r5, #16368	; 0x3ff0
   16a98:	str	r8, [ip]
   16a9c:	str	r6, [ip, #8]
   16aa0:	str	r6, [ip, #12]
   16aa4:	strd	r4, [ip, #40]	; 0x28
   16aa8:	str	r6, [ip, #16]
   16aac:	str	r6, [ip, #20]
   16ab0:	str	r6, [ip, #48]	; 0x30
   16ab4:	str	r6, [ip, #52]	; 0x34
   16ab8:	stm	r7, {r0, r1, r2, r3}
   16abc:	mov	r0, ip
   16ac0:	pop	{r4, r5, r6, r7, r8, r9}
   16ac4:	bx	lr
   16ac8:	andeq	r5, r2, r8, lsr sl
   16acc:	vmov.f64	d7, #112	; 0x3f800000  1.0
   16ad0:	mov	ip, r0
   16ad4:	push	{r4, r5, r6, r7, r8, r9, sl}
   16ad8:	mov	r4, #0
   16adc:	mov	r5, #0
   16ae0:	strd	r4, [r0, #56]	; 0x38
   16ae4:	strd	r4, [r0, #64]	; 0x40
   16ae8:	add	r9, ip, #72	; 0x48
   16aec:	ldm	r1, {r0, r1, r2, r3}
   16af0:	mov	r8, #0
   16af4:	ldr	sl, [pc, #84]	; 16b50 <fputs@plt+0xd794>
   16af8:	mov	r6, #1
   16afc:	str	r8, [ip, #4]
   16b00:	mov	r7, #0
   16b04:	str	r6, [ip, #24]
   16b08:	movt	r7, #49136	; 0xbff0
   16b0c:	str	r8, [ip, #8]
   16b10:	mov	r6, #0
   16b14:	str	r8, [ip, #12]
   16b18:	vstr	d7, [ip, #40]	; 0x28
   16b1c:	str	r8, [ip, #16]
   16b20:	str	r8, [ip, #20]
   16b24:	str	r8, [ip, #48]	; 0x30
   16b28:	str	r8, [ip, #52]	; 0x34
   16b2c:	stm	r9, {r0, r1, r2, r3}
   16b30:	mov	r0, ip
   16b34:	strd	r4, [ip, #96]	; 0x60
   16b38:	strd	r4, [ip, #104]	; 0x68
   16b3c:	str	r8, [ip, #112]	; 0x70
   16b40:	str	sl, [ip]
   16b44:	strd	r6, [ip, #88]	; 0x58
   16b48:	pop	{r4, r5, r6, r7, r8, r9, sl}
   16b4c:	bx	lr
   16b50:			; <UNDEFINED> instruction: 0x00025ab0
   16b54:	push	{r4, lr}
   16b58:	vpush	{d8}
   16b5c:	mov	r4, r0
   16b60:	vmov.f64	d8, d0
   16b64:	bl	16acc <fputs@plt+0xd710>
   16b68:	vldr	d7, [r4, #72]	; 0x48
   16b6c:	ldr	r3, [pc, #52]	; 16ba8 <fputs@plt+0xd7ec>
   16b70:	mov	r0, r4
   16b74:	vcmpe.f64	d7, #0.0
   16b78:	vldr	d7, [r4, #80]	; 0x50
   16b7c:	str	r3, [r4]
   16b80:	vmrs	APSR_nzcv, fpscr
   16b84:	vcmpe.f64	d7, #0.0
   16b88:	vnegle.f64	d6, d8
   16b8c:	vmovgt.f64	d6, d8
   16b90:	vmrs	APSR_nzcv, fpscr
   16b94:	vnegle.f64	d8, d8
   16b98:	vstr	d8, [r4, #128]	; 0x80
   16b9c:	vpop	{d8}
   16ba0:	vstr	d6, [r4, #120]	; 0x78
   16ba4:	pop	{r4, pc}
   16ba8:	andeq	r5, r2, r8, lsl ip
   16bac:	push	{r4, r5, r6, r7, r8, r9, sl}
   16bb0:	mov	ip, r0
   16bb4:	mov	r8, r2
   16bb8:	mov	r9, r3
   16bbc:	mov	r4, #0
   16bc0:	mov	r5, #0
   16bc4:	strd	r4, [r0, #56]	; 0x38
   16bc8:	add	sl, ip, #72	; 0x48
   16bcc:	strd	r4, [r0, #64]	; 0x40
   16bd0:	mov	r6, #0
   16bd4:	ldm	r1, {r0, r1, r2, r3}
   16bd8:	mov	r4, #0
   16bdc:	mov	r5, #1
   16be0:	str	r4, [ip, #4]
   16be4:	str	r5, [ip, #24]
   16be8:	mov	r7, #0
   16bec:	str	r4, [ip, #8]
   16bf0:	movt	r7, #16368	; 0x3ff0
   16bf4:	str	r4, [ip, #12]
   16bf8:	mov	r5, ip
   16bfc:	strd	r6, [ip, #40]	; 0x28
   16c00:	str	r4, [ip, #16]
   16c04:	str	r4, [ip, #20]
   16c08:	str	r4, [ip, #48]	; 0x30
   16c0c:	str	r4, [ip, #52]	; 0x34
   16c10:	stm	sl, {r0, r1, r2, r3}
   16c14:	ldr	r4, [pc, #24]	; 16c34 <fputs@plt+0xd878>
   16c18:	ldm	r8, {r0, r1}
   16c1c:	str	r4, [r5], #88	; 0x58
   16c20:	stm	r5, {r0, r1}
   16c24:	mov	r0, ip
   16c28:	str	r9, [ip, #96]	; 0x60
   16c2c:	pop	{r4, r5, r6, r7, r8, r9, sl}
   16c30:	bx	lr
   16c34:	andeq	r5, r2, r8, ror #29
   16c38:	push	{r4, r5, r6, r7, r8, r9}
   16c3c:	mov	ip, r0
   16c40:	mov	r2, #0
   16c44:	mov	r3, #0
   16c48:	strd	r2, [r0, #56]	; 0x38
   16c4c:	add	r7, ip, #72	; 0x48
   16c50:	strd	r2, [r0, #64]	; 0x40
   16c54:	mov	r6, #0
   16c58:	ldm	r1, {r0, r1, r2, r3}
   16c5c:	mov	r4, #0
   16c60:	ldr	r8, [pc, #64]	; 16ca8 <fputs@plt+0xd8ec>
   16c64:	mov	r9, #1
   16c68:	str	r6, [ip, #4]
   16c6c:	mov	r5, #0
   16c70:	str	r9, [ip, #24]
   16c74:	movt	r5, #16368	; 0x3ff0
   16c78:	str	r6, [ip, #8]
   16c7c:	str	r6, [ip, #12]
   16c80:	str	r6, [ip, #16]
   16c84:	strd	r4, [ip, #40]	; 0x28
   16c88:	str	r6, [ip, #20]
   16c8c:	str	r6, [ip, #48]	; 0x30
   16c90:	str	r6, [ip, #52]	; 0x34
   16c94:	stm	r7, {r0, r1, r2, r3}
   16c98:	mov	r0, ip
   16c9c:	str	r8, [ip]
   16ca0:	pop	{r4, r5, r6, r7, r8, r9}
   16ca4:	bx	lr
   16ca8:	andeq	r5, r2, r8, lsr r7
   16cac:	push	{r4, lr}
   16cb0:	mov	r4, r0
   16cb4:	bl	16acc <fputs@plt+0xd710>
   16cb8:	ldr	r3, [pc, #8]	; 16cc8 <fputs@plt+0xd90c>
   16cbc:	mov	r0, r4
   16cc0:	str	r3, [r4]
   16cc4:	pop	{r4, pc}
   16cc8:	andeq	r5, r2, r8, lsr #22
   16ccc:	push	{r4, r5, lr}
   16cd0:	movw	r4, #1424	; 0x590
   16cd4:	movt	r4, #3
   16cd8:	sub	sp, sp, #28
   16cdc:	mov	r5, r0
   16ce0:	vstr	d0, [sp]
   16ce4:	ldr	r3, [r4]
   16ce8:	mov	r1, sp
   16cec:	vstr	d0, [sp, #8]
   16cf0:	str	r3, [sp, #20]
   16cf4:	bl	16acc <fputs@plt+0xd710>
   16cf8:	ldr	r1, [sp, #20]
   16cfc:	mov	r0, r5
   16d00:	ldr	r2, [r4]
   16d04:	ldr	r3, [pc, #20]	; 16d20 <fputs@plt+0xd964>
   16d08:	cmp	r1, r2
   16d0c:	str	r3, [r5]
   16d10:	bne	16d1c <fputs@plt+0xd960>
   16d14:	add	sp, sp, #28
   16d18:	pop	{r4, r5, pc}
   16d1c:	bl	92b4 <__stack_chk_fail@plt>
   16d20:	andeq	r5, r2, r0, lsr #23
   16d24:	push	{r4, r5, r6, r7, r8, r9, sl}
   16d28:	mov	ip, r0
   16d2c:	mov	r9, r2
   16d30:	ldr	sl, [pc, #92]	; 16d94 <fputs@plt+0xd9d8>
   16d34:	ldm	r1, {r0, r1, r2, r3}
   16d38:	mov	r7, ip
   16d3c:	mov	r6, #0
   16d40:	mov	r4, #0
   16d44:	str	r6, [ip, #4]
   16d48:	mov	r8, #1
   16d4c:	str	r6, [ip, #8]
   16d50:	mov	r5, #0
   16d54:	str	r8, [ip, #24]
   16d58:	movt	r5, #16368	; 0x3ff0
   16d5c:	str	r6, [ip, #12]
   16d60:	add	r8, ip, #72	; 0x48
   16d64:	str	r6, [ip, #16]
   16d68:	strd	r4, [ip, #40]	; 0x28
   16d6c:	str	r6, [ip, #20]
   16d70:	str	r6, [ip, #48]	; 0x30
   16d74:	str	r6, [ip, #52]	; 0x34
   16d78:	str	sl, [r7], #56	; 0x38
   16d7c:	stm	r7, {r0, r1, r2, r3}
   16d80:	ldm	r9, {r0, r1, r2, r3}
   16d84:	stm	r8, {r0, r1, r2, r3}
   16d88:	mov	r0, ip
   16d8c:	pop	{r4, r5, r6, r7, r8, r9, sl}
   16d90:	bx	lr
   16d94:	andeq	r5, r2, r0, lsl #27
   16d98:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d9c:	vpush	{d8-d11}
   16da0:	movw	r8, #10912	; 0x2aa0
   16da4:	movt	r8, #3
   16da8:	mov	r7, r0
   16dac:	mov	r6, r1
   16db0:	mov	r9, r2
   16db4:	ldr	r3, [r8]
   16db8:	tst	r3, #1
   16dbc:	beq	16f3c <fputs@plt+0xdb80>
   16dc0:	ldr	r3, [r7]
   16dc4:	ldr	r2, [r7, #200]	; 0xc8
   16dc8:	tst	r3, #512	; 0x200
   16dcc:	str	r2, [r9]
   16dd0:	addne	r2, r7, #32
   16dd4:	moveq	r2, r6
   16dd8:	tst	r3, #128	; 0x80
   16ddc:	vldr	d11, [r2]
   16de0:	vldr	d10, [r2, #8]
   16de4:	addne	r4, r7, #208	; 0xd0
   16de8:	bne	16e10 <fputs@plt+0xda54>
   16dec:	tst	r3, #256	; 0x100
   16df0:	beq	16f1c <fputs@plt+0xdb60>
   16df4:	ldr	r3, [r8, #24]
   16df8:	cmp	r3, #0
   16dfc:	beq	16f1c <fputs@plt+0xdb60>
   16e00:	ldr	r3, [pc, #452]	; 16fcc <fputs@plt+0xdc10>
   16e04:	add	r4, r7, #208	; 0xd0
   16e08:	ldm	r3, {r0, r1, r2, r3}
   16e0c:	stm	r4, {r0, r1, r2, r3}
   16e10:	mov	r0, #32
   16e14:	bl	209a0 <_Znwj@@Base>
   16e18:	ldr	sl, [r7, #204]	; 0xcc
   16e1c:	ldr	fp, [r7, #224]	; 0xe0
   16e20:	mov	r9, #0
   16e24:	mov	lr, sl
   16e28:	mov	ip, r0
   16e2c:	ldm	r4, {r0, r1, r2, r3}
   16e30:	mov	r5, ip
   16e34:	str	fp, [r5], #8
   16e38:	mov	r4, r9
   16e3c:	stm	r5, {r0, r1, r2, r3}
   16e40:	str	sl, [ip, #24]
   16e44:	str	r9, [r7, #204]	; 0xcc
   16e48:	b	16e58 <fputs@plt+0xda9c>
   16e4c:	mov	r4, ip
   16e50:	mov	ip, lr
   16e54:	ldr	lr, [lr, #24]
   16e58:	cmp	lr, #0
   16e5c:	str	r4, [ip, #24]
   16e60:	bne	16e4c <fputs@plt+0xda90>
   16e64:	vmov.f64	d9, d11
   16e68:	str	ip, [r7, #204]	; 0xcc
   16e6c:	vmov.f64	d8, d10
   16e70:	b	16e78 <fputs@plt+0xdabc>
   16e74:	ldr	r4, [r4, #24]
   16e78:	ldr	r3, [ip]
   16e7c:	cmp	r3, #0
   16e80:	vldreq	d6, [ip, #8]
   16e84:	vldreq	d7, [ip, #16]
   16e88:	vldrne	d9, [ip, #8]
   16e8c:	vldrne	d8, [ip, #16]
   16e90:	vaddeq.f64	d9, d9, d6
   16e94:	mov	ip, r4
   16e98:	vaddeq.f64	d8, d8, d7
   16e9c:	cmp	r4, #0
   16ea0:	bne	16e74 <fputs@plt+0xdab8>
   16ea4:	vsub.f64	d6, d9, d11
   16ea8:	mov	r0, #88	; 0x58
   16eac:	mov	r5, #1
   16eb0:	str	r5, [r8, #24]
   16eb4:	vsub.f64	d7, d8, d10
   16eb8:	vstr	d6, [r8, #8]
   16ebc:	vstr	d7, [r8, #16]
   16ec0:	bl	209a0 <_Znwj@@Base>
   16ec4:	ldr	ip, [pc, #260]	; 16fd0 <fputs@plt+0xdc14>
   16ec8:	mov	r2, #0
   16ecc:	mov	r3, #0
   16ed0:	movt	r3, #16368	; 0x3ff0
   16ed4:	vstr	d11, [r0, #56]	; 0x38
   16ed8:	vstr	d10, [r0, #64]	; 0x40
   16edc:	vstr	d9, [r0, #72]	; 0x48
   16ee0:	vstr	d8, [r0, #80]	; 0x50
   16ee4:	str	r5, [r0, #24]
   16ee8:	str	r4, [r0, #4]
   16eec:	str	r4, [r0, #8]
   16ef0:	str	r4, [r0, #12]
   16ef4:	str	r4, [r0, #16]
   16ef8:	str	r4, [r0, #20]
   16efc:	str	r4, [r0, #48]	; 0x30
   16f00:	str	r4, [r0, #52]	; 0x34
   16f04:	str	ip, [r0]
   16f08:	strd	r2, [r0, #40]	; 0x28
   16f0c:	vstr	d9, [r6]
   16f10:	vstr	d8, [r6, #8]
   16f14:	vpop	{d8-d11}
   16f18:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f1c:	ldr	r3, [r7, #200]	; 0xc8
   16f20:	cmp	r3, #3
   16f24:	ldrls	pc, [pc, r3, lsl #2]
   16f28:	b	16fb4 <fputs@plt+0xdbf8>
   16f2c:	andeq	r6, r1, r4, lsr #31
   16f30:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   16f34:	andeq	r6, r1, ip, ror pc
   16f38:	andeq	r6, r1, r8, ror #30
   16f3c:	mov	r0, r8
   16f40:	bl	90f8 <__cxa_guard_acquire@plt>
   16f44:	cmp	r0, #0
   16f48:	beq	16dc0 <fputs@plt+0xda04>
   16f4c:	mov	r0, r8
   16f50:	mov	r4, #0
   16f54:	mov	r5, #0
   16f58:	strd	r4, [r8, #8]
   16f5c:	strd	r4, [r8, #16]
   16f60:	bl	91e8 <__cxa_guard_release@plt>
   16f64:	b	16dc0 <fputs@plt+0xda04>
   16f68:	vldr	d7, [r7, #136]	; 0x88
   16f6c:	vneg.f64	d7, d7
   16f70:	add	r4, r7, #208	; 0xd0
   16f74:	vstr	d7, [r7, #216]	; 0xd8
   16f78:	b	16e10 <fputs@plt+0xda54>
   16f7c:	vldr	d7, [r7, #128]	; 0x80
   16f80:	vneg.f64	d7, d7
   16f84:	mov	r4, r7
   16f88:	vmov	r2, r3, d7
   16f8c:	strd	r2, [r4, #208]!	; 0xd0
   16f90:	b	16e10 <fputs@plt+0xda54>
   16f94:	ldrd	r2, [r7, #136]	; 0x88
   16f98:	add	r4, r7, #208	; 0xd0
   16f9c:	strd	r2, [r7, #216]	; 0xd8
   16fa0:	b	16e10 <fputs@plt+0xda54>
   16fa4:	ldrd	r2, [r7, #128]	; 0x80
   16fa8:	mov	r4, r7
   16fac:	strd	r2, [r4, #208]!	; 0xd0
   16fb0:	b	16e10 <fputs@plt+0xda54>
   16fb4:	movw	r1, #24848	; 0x6110
   16fb8:	movw	r0, #1185	; 0x4a1
   16fbc:	movt	r1, #2
   16fc0:	add	r4, r7, #208	; 0xd0
   16fc4:	bl	1eec8 <fputs@plt+0x15b0c>
   16fc8:	b	16e10 <fputs@plt+0xda54>
   16fcc:	andeq	r2, r3, r8, lsr #21
   16fd0:	andeq	r5, r2, r0, lsl #27
   16fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   16fd8:	mov	ip, r0
   16fdc:	mov	r6, #0
   16fe0:	mov	r8, r2
   16fe4:	strb	r6, [r0, #56]	; 0x38
   16fe8:	add	r9, r0, #88	; 0x58
   16fec:	strb	r6, [r0, #57]	; 0x39
   16ff0:	mov	r4, #0
   16ff4:	ldm	r1, {r0, r1, r2, r3}
   16ff8:	mov	fp, #1
   16ffc:	ldr	sl, [pc, #72]	; 1704c <fputs@plt+0xdc90>
   17000:	mov	r5, #0
   17004:	str	fp, [ip, #24]
   17008:	movt	r5, #16368	; 0x3ff0
   1700c:	str	r6, [ip, #4]
   17010:	add	r7, ip, #104	; 0x68
   17014:	str	sl, [ip]
   17018:	strd	r4, [ip, #40]	; 0x28
   1701c:	str	r6, [ip, #8]
   17020:	str	r6, [ip, #12]
   17024:	str	r6, [ip, #16]
   17028:	str	r6, [ip, #20]
   1702c:	str	r6, [ip, #48]	; 0x30
   17030:	str	r6, [ip, #52]	; 0x34
   17034:	stm	r9, {r0, r1, r2, r3}
   17038:	ldm	r8, {r0, r1, r2, r3}
   1703c:	stm	r7, {r0, r1, r2, r3}
   17040:	mov	r0, ip
   17044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   17048:	bx	lr
   1704c:	muleq	r2, r0, ip
   17050:	push	{r4}		; (str r4, [sp, #-4]!)
   17054:	mov	r4, r3
   17058:	strb	r1, [r0, #56]	; 0x38
   1705c:	add	ip, r0, #64	; 0x40
   17060:	strb	r2, [r0, #57]	; 0x39
   17064:	ldm	r4!, {r0, r1, r2, r3}
   17068:	stmia	ip!, {r0, r1, r2, r3}
   1706c:	ldm	r4, {r0, r1}
   17070:	pop	{r4}		; (ldr r4, [sp], #4)
   17074:	stm	ip, {r0, r1}
   17078:	bx	lr
   1707c:	push	{r4, r5, r6, lr}
   17080:	mov	r4, r0
   17084:	mov	r6, r3
   17088:	ldr	r5, [sp, #16]
   1708c:	bl	16fd4 <fputs@plt+0xdc18>
   17090:	ldr	r3, [pc, #16]	; 170a8 <fputs@plt+0xdcec>
   17094:	mov	r0, r4
   17098:	str	r6, [r4, #120]	; 0x78
   1709c:	str	r5, [r4, #124]	; 0x7c
   170a0:	str	r3, [r4]
   170a4:	pop	{r4, r5, r6, pc}
   170a8:	strdeq	r5, [r2], -r8
   170ac:	push	{r4, r5, r6, lr}
   170b0:	mov	r4, r0
   170b4:	mov	r6, r3
   170b8:	ldr	r5, [sp, #16]
   170bc:	bl	16fd4 <fputs@plt+0xdc18>
   170c0:	ldr	r3, [pc, #16]	; 170d8 <fputs@plt+0xdd1c>
   170c4:	mov	r0, r4
   170c8:	str	r6, [r4, #120]	; 0x78
   170cc:	str	r5, [r4, #124]	; 0x7c
   170d0:	str	r3, [r4]
   170d4:	pop	{r4, r5, r6, pc}
   170d8:			; <UNDEFINED> instruction: 0x000257b0
   170dc:	push	{r4, r5, r6, lr}
   170e0:	mov	r4, r0
   170e4:	mov	r6, r3
   170e8:	ldr	r5, [sp, #16]
   170ec:	bl	16fd4 <fputs@plt+0xdc18>
   170f0:	ldr	r3, [pc, #16]	; 17108 <fputs@plt+0xdd4c>
   170f4:	mov	r0, r4
   170f8:	str	r6, [r4, #120]	; 0x78
   170fc:	str	r5, [r4, #124]	; 0x7c
   17100:	str	r3, [r4]
   17104:	pop	{r4, r5, r6, pc}
   17108:	andeq	r5, r2, r0, ror lr
   1710c:	push	{r3, r4, r5, r6, r7, lr}
   17110:	mov	r6, r2
   17114:	ldr	r5, [sp, #24]
   17118:	mov	r7, r1
   1711c:	mov	r2, r3
   17120:	mov	r1, r6
   17124:	mov	r4, r0
   17128:	bl	16fd4 <fputs@plt+0xdc18>
   1712c:	ldm	r5, {r0, r1, r2, r3}
   17130:	add	ip, r4, #128	; 0x80
   17134:	ldr	lr, [pc, #68]	; 17180 <fputs@plt+0xddc4>
   17138:	str	r7, [r4, #120]	; 0x78
   1713c:	str	lr, [r4]
   17140:	stm	ip, {r0, r1, r2, r3}
   17144:	vldr	d7, [r6]
   17148:	vldr	d0, [r5]
   1714c:	vldr	d1, [r5, #8]
   17150:	vsub.f64	d0, d0, d7
   17154:	vldr	d7, [r6, #8]
   17158:	vsub.f64	d1, d1, d7
   1715c:	bl	206e0 <fputs@plt+0x17324>
   17160:	vstr	d0, [r4, #144]	; 0x90
   17164:	mov	r0, r4
   17168:	pop	{r3, r4, r5, r6, r7, pc}
   1716c:	ldr	r3, [pc, #16]	; 17184 <fputs@plt+0xddc8>
   17170:	mov	r0, r4
   17174:	str	r3, [r4]
   17178:	bl	14884 <fputs@plt+0xb4c8>
   1717c:	bl	9188 <__cxa_end_cleanup@plt>
   17180:	andeq	r5, r2, r8, lsl #26
   17184:	muleq	r2, r0, ip
   17188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1718c:	vpush	{d8-d10}
   17190:	movw	sl, #1424	; 0x590
   17194:	ldr	ip, [r0]
   17198:	movt	sl, #3
   1719c:	ldr	r3, [r0, #200]	; 0xc8
   171a0:	mov	r4, r2
   171a4:	tst	ip, #512	; 0x200
   171a8:	ldr	r2, [sl]
   171ac:	sub	sp, sp, #84	; 0x54
   171b0:	mov	r7, r1
   171b4:	str	r3, [r4]
   171b8:	addne	r3, r0, #32
   171bc:	mov	r8, r0
   171c0:	str	r2, [sp, #76]	; 0x4c
   171c4:	ldmne	r3, {r0, r1, r2, r3}
   171c8:	addne	r9, sp, #24
   171cc:	ldmeq	r7, {r0, r1, r2, r3}
   171d0:	addeq	r9, sp, #24
   171d4:	tst	ip, #16384	; 0x4000
   171d8:	ubfx	fp, ip, #2, #1
   171dc:	stm	r9, {r0, r1, r2, r3}
   171e0:	beq	173d4 <fputs@plt+0xe018>
   171e4:	tst	ip, #32768	; 0x8000
   171e8:	beq	1726c <fputs@plt+0xdeb0>
   171ec:	add	r3, r8, #48	; 0x30
   171f0:	add	r6, sp, #40	; 0x28
   171f4:	ldm	r3, {r0, r1, r2, r3}
   171f8:	stm	r6, {r0, r1, r2, r3}
   171fc:	tst	ip, #1024	; 0x400
   17200:	mov	r4, #0
   17204:	mov	r5, #0
   17208:	strd	r4, [sp, #56]	; 0x38
   1720c:	strd	r4, [sp, #64]	; 0x40
   17210:	beq	172d4 <fputs@plt+0xdf18>
   17214:	add	r8, r8, #64	; 0x40
   17218:	add	r4, sp, #56	; 0x38
   1721c:	ldm	r8, {r0, r1, r2, r3}
   17220:	stm	r4, {r0, r1, r2, r3}
   17224:	mov	r0, #152	; 0x98
   17228:	bl	209a0 <_Znwj@@Base>
   1722c:	str	r4, [sp]
   17230:	mov	r1, fp
   17234:	mov	r2, r9
   17238:	mov	r3, r6
   1723c:	mov	r5, r0
   17240:	bl	1710c <fputs@plt+0xdd50>
   17244:	ldm	r6, {r0, r1, r2, r3}
   17248:	ldr	r4, [sp, #76]	; 0x4c
   1724c:	ldr	ip, [sl]
   17250:	cmp	r4, ip
   17254:	stm	r7, {r0, r1, r2, r3}
   17258:	mov	r0, r5
   1725c:	bne	173fc <fputs@plt+0xe040>
   17260:	add	sp, sp, #84	; 0x54
   17264:	vpop	{d8-d10}
   17268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1726c:	cmp	fp, #0
   17270:	vldr	d7, [r8, #112]	; 0x70
   17274:	ldr	r3, [r8, #200]	; 0xc8
   17278:	bne	173b0 <fputs@plt+0xdff4>
   1727c:	sub	r2, r3, #1
   17280:	cmp	r2, #1
   17284:	sub	r2, r3, #2
   17288:	add	r3, r3, #1
   1728c:	vnegls.f64	d4, d7
   17290:	vmovhi.f64	d4, d7
   17294:	cmp	r2, #1
   17298:	vnegls.f64	d7, d7
   1729c:	vldr	d5, [sp, #32]
   172a0:	vldr	d6, [sp, #24]
   172a4:	asr	r2, r3, #31
   172a8:	add	r6, sp, #40	; 0x28
   172ac:	vadd.f64	d7, d7, d5
   172b0:	lsr	r2, r2, #30
   172b4:	add	r3, r3, r2
   172b8:	and	r3, r3, #3
   172bc:	rsb	r2, r2, r3
   172c0:	str	r2, [r4]
   172c4:	vadd.f64	d6, d4, d6
   172c8:	vstr	d7, [sp, #48]	; 0x30
   172cc:	vstr	d6, [sp, #40]	; 0x28
   172d0:	b	171fc <fputs@plt+0xde40>
   172d4:	vldr	d7, [sp, #24]
   172d8:	vldr	d0, [sp, #40]	; 0x28
   172dc:	vcmp.f64	d7, d0
   172e0:	vmrs	APSR_nzcv, fpscr
   172e4:	beq	1738c <fputs@plt+0xdfd0>
   172e8:	vldr	d9, [sp, #48]	; 0x30
   172ec:	vldr	d5, [sp, #32]
   172f0:	vmov.f64	d6, #96	; 0x3f000000  0.5
   172f4:	vsub.f64	d7, d0, d7
   172f8:	vsub.f64	d9, d9, d5
   172fc:	vmul.f64	d8, d7, d6
   17300:	vmul.f64	d9, d9, d6
   17304:	vmov.f64	d0, d8
   17308:	vmov.f64	d1, d9
   1730c:	bl	206e0 <fputs@plt+0x17324>
   17310:	vldr	d6, [r8, #112]	; 0x70
   17314:	vcmpe.f64	d6, #0.0
   17318:	vmrs	APSR_nzcv, fpscr
   1731c:	bls	173ec <fputs@plt+0xe030>
   17320:	vcmpe.f64	d0, d6
   17324:	add	r4, sp, #56	; 0x38
   17328:	vmrs	APSR_nzcv, fpscr
   1732c:	vmovgt.f64	d6, d0
   17330:	vstrgt	d0, [r8, #112]	; 0x70
   17334:	vdiv.f64	d0, d0, d6
   17338:	bl	9230 <acos@plt>
   1733c:	vmov.f64	d1, d8
   17340:	vmov.f64	d10, d0
   17344:	vmov.f64	d0, d9
   17348:	bl	92cc <atan2@plt>
   1734c:	cmp	fp, #0
   17350:	add	r0, sp, #16
   17354:	add	r1, sp, #8
   17358:	vsubne.f64	d0, d0, d10
   1735c:	vaddeq.f64	d0, d0, d10
   17360:	bl	9170 <sincos@plt>
   17364:	vldr	d5, [r8, #112]	; 0x70
   17368:	vldr	d3, [sp, #8]
   1736c:	vldr	d6, [sp, #24]
   17370:	vldr	d4, [sp, #16]
   17374:	vldr	d7, [sp, #32]
   17378:	vmla.f64	d6, d3, d5
   1737c:	vmla.f64	d7, d4, d5
   17380:	vstr	d6, [sp, #56]	; 0x38
   17384:	vstr	d7, [sp, #64]	; 0x40
   17388:	b	17224 <fputs@plt+0xde68>
   1738c:	vldr	d5, [sp, #32]
   17390:	vldr	d9, [sp, #48]	; 0x30
   17394:	vcmp.f64	d5, d9
   17398:	vmrs	APSR_nzcv, fpscr
   1739c:	bne	172f0 <fputs@plt+0xdf34>
   173a0:	ldm	r9, {r0, r1, r2, r3}
   173a4:	add	r4, sp, #56	; 0x38
   173a8:	stm	r4, {r0, r1, r2, r3}
   173ac:	b	17224 <fputs@plt+0xde68>
   173b0:	sub	r2, r3, #2
   173b4:	cmp	r2, #1
   173b8:	vnegls.f64	d4, d7
   173bc:	vmovhi.f64	d4, d7
   173c0:	cmp	r3, #3
   173c4:	cmpne	r3, #0
   173c8:	add	r3, r3, #3
   173cc:	vnegeq.f64	d7, d7
   173d0:	b	1729c <fputs@plt+0xdee0>
   173d4:	movw	r0, #19668	; 0x4cd4
   173d8:	add	r1, r8, #112	; 0x70
   173dc:	movt	r0, #2
   173e0:	bl	9f24 <fputs@plt+0xb68>
   173e4:	ldr	ip, [r8]
   173e8:	b	171e4 <fputs@plt+0xde28>
   173ec:	vmov.f64	d7, #80	; 0x3e800000  0.250
   173f0:	vmov.f64	d6, d7
   173f4:	vstr	d7, [r8, #112]	; 0x70
   173f8:	b	17320 <fputs@plt+0xdf64>
   173fc:	bl	92b4 <__stack_chk_fail@plt>
   17400:	mov	r0, r5
   17404:	bl	209f0 <_ZdlPv@@Base>
   17408:	bl	9188 <__cxa_end_cleanup@plt>
   1740c:	mov	r2, #0
   17410:	str	r1, [r0, #4]
   17414:	str	r2, [r0]
   17418:	bx	lr
   1741c:	push	{r4, lr}
   17420:	mov	r4, r0
   17424:	ldr	r0, [r0, #4]
   17428:	cmp	r0, #0
   1742c:	beq	17434 <fputs@plt+0xe078>
   17430:	bl	92f0 <_ZdaPv@plt>
   17434:	mov	r0, r4
   17438:	pop	{r4, pc}
   1743c:	push	{r4, r5, r6}
   17440:	sub	sp, sp, #12
   17444:	mov	r3, r0
   17448:	add	r6, r0, #16
   1744c:	mov	r4, #0
   17450:	mov	r5, #0
   17454:	stm	sp, {r1, r2}
   17458:	strd	r4, [r0]
   1745c:	ldm	sp, {r0, r1}
   17460:	mov	r1, #0
   17464:	strd	r4, [r3, #8]
   17468:	stm	r6, {r0, r2}
   1746c:	mov	r0, r3
   17470:	str	r1, [r3, #24]
   17474:	str	r1, [r3, #28]
   17478:	str	r1, [r3, #32]
   1747c:	add	sp, sp, #12
   17480:	pop	{r4, r5, r6}
   17484:	bx	lr
   17488:	mov	r2, #1
   1748c:	sub	sp, sp, #16
   17490:	str	r2, [r0, #32]
   17494:	vstr	d0, [r0]
   17498:	mov	r2, #0
   1749c:	vstr	d1, [r0, #8]
   174a0:	str	r2, [r0, #16]
   174a4:	str	r2, [r0, #20]
   174a8:	str	r2, [r0, #24]
   174ac:	str	r2, [r0, #28]
   174b0:	add	sp, sp, #16
   174b4:	bx	lr
   174b8:	push	{r4, r5, r6, r7, lr}
   174bc:	add	ip, r0, #16
   174c0:	sub	sp, sp, #12
   174c4:	mov	r6, r0
   174c8:	mov	r4, #0
   174cc:	mov	r5, #0
   174d0:	strd	r4, [r0]
   174d4:	mov	r7, #0
   174d8:	strd	r4, [r0, #8]
   174dc:	mov	r4, r1
   174e0:	mov	r0, #8
   174e4:	add	r1, sp, r0
   174e8:	stm	ip, {r2, r3}
   174ec:	str	r7, [r6, #28]
   174f0:	str	r7, [r6, #32]
   174f4:	stmdb	r1, {r2, r3}
   174f8:	bl	209a0 <_Znwj@@Base>
   174fc:	mov	r3, r0
   17500:	mov	r0, r6
   17504:	str	r4, [r3, #4]
   17508:	str	r7, [r3]
   1750c:	str	r3, [r6, #24]
   17510:	add	sp, sp, #12
   17514:	pop	{r4, r5, r6, r7, pc}
   17518:	push	{r3, r4, r5, lr}
   1751c:	mov	r5, r0
   17520:	ldr	r4, [r0, #24]
   17524:	cmp	r4, #0
   17528:	beq	17558 <fputs@plt+0xe19c>
   1752c:	ldr	r0, [r4, #4]
   17530:	ldr	r3, [r4]
   17534:	cmp	r0, #0
   17538:	str	r3, [r5, #24]
   1753c:	beq	17544 <fputs@plt+0xe188>
   17540:	bl	92f0 <_ZdaPv@plt>
   17544:	mov	r0, r4
   17548:	bl	209f0 <_ZdlPv@@Base>
   1754c:	ldr	r4, [r5, #24]
   17550:	cmp	r4, #0
   17554:	bne	1752c <fputs@plt+0xe170>
   17558:	ldr	r4, [r5, #28]
   1755c:	cmp	r4, #0
   17560:	beq	17574 <fputs@plt+0xe1b8>
   17564:	mov	r0, r4
   17568:	bl	17518 <fputs@plt+0xe15c>
   1756c:	mov	r0, r4
   17570:	bl	209f0 <_ZdlPv@@Base>
   17574:	mov	r0, r5
   17578:	pop	{r3, r4, r5, pc}
   1757c:	push	{r3, r4, r5, lr}
   17580:	mov	r4, r0
   17584:	ldr	r5, [r0, #16]
   17588:	cmp	r5, #0
   1758c:	beq	175a0 <fputs@plt+0xe1e4>
   17590:	mov	r0, r5
   17594:	bl	99d0 <fputs@plt+0x614>
   17598:	mov	r0, r5
   1759c:	bl	209f0 <_ZdlPv@@Base>
   175a0:	ldr	r0, [r4, #204]	; 0xcc
   175a4:	cmp	r0, #0
   175a8:	beq	175c4 <fputs@plt+0xe208>
   175ac:	ldr	r3, [r0, #24]
   175b0:	str	r3, [r4, #204]	; 0xcc
   175b4:	bl	209f0 <_ZdlPv@@Base>
   175b8:	ldr	r0, [r4, #204]	; 0xcc
   175bc:	cmp	r0, #0
   175c0:	bne	175ac <fputs@plt+0xe1f0>
   175c4:	ldr	r3, [r4, #8]
   175c8:	cmp	r3, #0
   175cc:	beq	175f0 <fputs@plt+0xe234>
   175d0:	ldr	r2, [r3]
   175d4:	mov	r0, r3
   175d8:	ldr	r5, [r3, #8]
   175dc:	ldr	r3, [r2, #4]
   175e0:	blx	r3
   175e4:	cmp	r5, #0
   175e8:	mov	r3, r5
   175ec:	bne	175d0 <fputs@plt+0xe214>
   175f0:	ldr	r5, [r4, #100]	; 0x64
   175f4:	cmp	r5, #0
   175f8:	beq	17628 <fputs@plt+0xe26c>
   175fc:	ldr	r0, [r5, #4]
   17600:	ldr	r3, [r5]
   17604:	cmp	r0, #0
   17608:	str	r3, [r4, #100]	; 0x64
   1760c:	beq	17614 <fputs@plt+0xe258>
   17610:	bl	92f0 <_ZdaPv@plt>
   17614:	mov	r0, r5
   17618:	bl	209f0 <_ZdlPv@@Base>
   1761c:	ldr	r5, [r4, #100]	; 0x64
   17620:	cmp	r5, #0
   17624:	bne	175fc <fputs@plt+0xe240>
   17628:	ldr	r5, [r4, #96]	; 0x60
   1762c:	cmp	r5, #0
   17630:	beq	17644 <fputs@plt+0xe288>
   17634:	mov	r0, r5
   17638:	bl	17518 <fputs@plt+0xe15c>
   1763c:	mov	r0, r5
   17640:	bl	209f0 <_ZdlPv@@Base>
   17644:	ldr	r0, [r4, #192]	; 0xc0
   17648:	cmp	r0, #0
   1764c:	beq	17654 <fputs@plt+0xe298>
   17650:	bl	92f0 <_ZdaPv@plt>
   17654:	ldr	r0, [r4, #196]	; 0xc4
   17658:	cmp	r0, #0
   1765c:	beq	17664 <fputs@plt+0xe2a8>
   17660:	bl	92f0 <_ZdaPv@plt>
   17664:	mov	r0, r4
   17668:	pop	{r3, r4, r5, pc}
   1766c:	push	{r4, r5, lr}
   17670:	sub	sp, sp, #12
   17674:	ldr	r3, [r0, #16]
   17678:	mov	r5, r0
   1767c:	mov	r4, sp
   17680:	stm	sp, {r1, r2}
   17684:	cmp	r3, #0
   17688:	beq	176b0 <fputs@plt+0xe2f4>
   1768c:	movw	r1, #24848	; 0x6110
   17690:	movw	r0, #2004	; 0x7d4
   17694:	movt	r1, #2
   17698:	bl	1eec8 <fputs@plt+0x15b0c>
   1769c:	ldm	r4, {r0, r1}
   176a0:	add	r5, r5, #16
   176a4:	stm	r5, {r0, r1}
   176a8:	add	sp, sp, #12
   176ac:	pop	{r4, r5, pc}
   176b0:	ldr	r3, [r0, #20]
   176b4:	tst	r3, #1
   176b8:	bne	1768c <fputs@plt+0xe2d0>
   176bc:	b	1769c <fputs@plt+0xe2e0>
   176c0:	ldr	r2, [r0, #24]
   176c4:	push	{r3, r4, r5, lr}
   176c8:	cmp	r2, #0
   176cc:	mov	r4, r1
   176d0:	addeq	r5, r0, #24
   176d4:	bne	176e0 <fputs@plt+0xe324>
   176d8:	b	176f0 <fputs@plt+0xe334>
   176dc:	mov	r2, r3
   176e0:	ldr	r3, [r2]
   176e4:	cmp	r3, #0
   176e8:	bne	176dc <fputs@plt+0xe320>
   176ec:	mov	r5, r2
   176f0:	mov	r0, #8
   176f4:	bl	209a0 <_Znwj@@Base>
   176f8:	mov	r3, #0
   176fc:	str	r4, [r0, #4]
   17700:	str	r3, [r0]
   17704:	str	r0, [r5]
   17708:	pop	{r3, r4, r5, pc}
   1770c:	str	r1, [r0, #28]
   17710:	bx	lr
   17714:	push	{r4, r5, r6, r7, r8, r9, lr}
   17718:	movw	r6, #1424	; 0x590
   1771c:	movt	r6, #3
   17720:	ldr	r5, [r0, #32]
   17724:	sub	sp, sp, #36	; 0x24
   17728:	mov	r8, r0
   1772c:	ldr	r3, [r6]
   17730:	cmp	r5, #0
   17734:	mov	r9, r1
   17738:	mov	r7, r2
   1773c:	str	r3, [sp, #28]
   17740:	bne	177d4 <fputs@plt+0xe418>
   17744:	ldr	r4, [r0, #24]
   17748:	cmp	r4, #0
   1774c:	moveq	r0, r1
   17750:	beq	177f4 <fputs@plt+0xe438>
   17754:	ldr	r0, [r1]
   17758:	cmp	r0, #0
   1775c:	beq	17790 <fputs@plt+0xe3d4>
   17760:	ldr	r3, [r0]
   17764:	ldr	r1, [r4, #4]
   17768:	ldr	r3, [r3, #68]	; 0x44
   1776c:	blx	r3
   17770:	cmp	r0, #0
   17774:	beq	17790 <fputs@plt+0xe3d4>
   17778:	ldr	r4, [r4]
   1777c:	cmp	r4, #0
   17780:	beq	177f4 <fputs@plt+0xe438>
   17784:	ldr	r0, [r0]
   17788:	cmp	r0, #0
   1778c:	bne	17760 <fputs@plt+0xe3a4>
   17790:	ldr	r1, [r4, #4]
   17794:	mov	r0, sp
   17798:	bl	1f264 <fputs@plt+0x15ea8>
   1779c:	movw	r2, #13880	; 0x3638
   177a0:	movt	r2, #3
   177a4:	movw	r0, #25000	; 0x61a8
   177a8:	mov	r1, sp
   177ac:	movt	r0, #2
   177b0:	mov	r3, r2
   177b4:	bl	1024c <fputs@plt+0x6e90>
   177b8:	ldr	r2, [sp, #28]
   177bc:	mov	r0, r5
   177c0:	ldr	r3, [r6]
   177c4:	cmp	r2, r3
   177c8:	bne	178ac <fputs@plt+0xe4f0>
   177cc:	add	sp, sp, #36	; 0x24
   177d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   177d4:	ldrd	r4, [r0]
   177d8:	mov	r3, #0
   177dc:	ldrd	r0, [r0, #8]
   177e0:	str	r3, [r2]
   177e4:	strd	r4, [r2, #8]
   177e8:	mov	r5, #1
   177ec:	strd	r0, [r2, #16]
   177f0:	b	177b8 <fputs@plt+0xe3fc>
   177f4:	ldr	r1, [r8, #16]
   177f8:	cmp	r1, #0
   177fc:	beq	17884 <fputs@plt+0xe4c8>
   17800:	ldr	r2, [r0]
   17804:	cmp	r2, #0
   17808:	beq	17890 <fputs@plt+0xe4d4>
   1780c:	ldr	r0, [r8, #20]
   17810:	tst	r0, #1
   17814:	addeq	r0, r2, r0, asr #1
   17818:	ldrne	r3, [r2, r0, asr #1]
   1781c:	addne	r0, r2, r0, asr #1
   17820:	ldrne	r1, [r3, r1]
   17824:	blx	r1
   17828:	mov	r3, #0
   1782c:	str	r3, [r7]
   17830:	vstr	d0, [sp]
   17834:	vstr	d0, [r7, #8]
   17838:	vstr	d1, [sp, #8]
   1783c:	vstr	d1, [r7, #16]
   17840:	ldr	r0, [r8, #28]
   17844:	cmp	r0, #0
   17848:	beq	1787c <fputs@plt+0xe4c0>
   1784c:	mov	r1, r9
   17850:	mov	r2, sp
   17854:	bl	17714 <fputs@plt+0xe358>
   17858:	subs	r5, r0, #0
   1785c:	beq	177b8 <fputs@plt+0xe3fc>
   17860:	ldr	r3, [sp]
   17864:	ldr	r2, [r7]
   17868:	ldrd	r0, [sp, #16]
   1786c:	cmp	r2, r3
   17870:	strd	r0, [r7, #16]
   17874:	movne	r3, #0
   17878:	strne	r3, [r7]
   1787c:	mov	r5, #1
   17880:	b	177b8 <fputs@plt+0xe3fc>
   17884:	ldr	r2, [r8, #20]
   17888:	tst	r2, #1
   1788c:	bne	17800 <fputs@plt+0xe444>
   17890:	mov	r4, r0
   17894:	mov	ip, r7
   17898:	ldm	r4!, {r0, r1, r2, r3}
   1789c:	stmia	ip!, {r0, r1, r2, r3}
   178a0:	ldm	r4, {r0, r1}
   178a4:	stm	ip, {r0, r1}
   178a8:	b	17840 <fputs@plt+0xe484>
   178ac:	bl	92b4 <__stack_chk_fail@plt>
   178b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   178b4:	vpush	{d8-d9}
   178b8:	movw	r7, #1424	; 0x590
   178bc:	movt	r7, #3
   178c0:	mov	r9, r0
   178c4:	ldr	r3, [r3]
   178c8:	sub	sp, sp, #92	; 0x5c
   178cc:	ldr	r0, [r7]
   178d0:	mov	r4, #0
   178d4:	mov	r5, #0
   178d8:	mov	r8, r1
   178dc:	mov	r6, r2
   178e0:	str	r3, [r9, #200]	; 0xc8
   178e4:	str	r0, [sp, #84]	; 0x54
   178e8:	strd	r4, [sp]
   178ec:	strd	r4, [sp, #8]
   178f0:	cmp	r3, #3
   178f4:	ldrls	pc, [pc, r3, lsl #2]
   178f8:	b	17a34 <fputs@plt+0xe678>
   178fc:	strdeq	r7, [r1], -r4
   17900:	andeq	r7, r1, r4, lsl sl
   17904:	andeq	r7, r1, r4, lsr #19
   17908:	andeq	r7, r1, ip, lsl #18
   1790c:	ldr	r3, [r1]
   17910:	mov	r0, r1
   17914:	vmov.f64	d8, #96	; 0x3f000000  0.5
   17918:	vldr	d9, [pc, #384]	; 17aa0 <fputs@plt+0xe6e4>
   1791c:	ldr	r3, [r3, #20]
   17920:	blx	r3
   17924:	vnmul.f64	d8, d0, d8
   17928:	ldr	r2, [r9]
   1792c:	tst	r2, #1024	; 0x400
   17930:	beq	179cc <fputs@plt+0xe610>
   17934:	add	r3, r9, #64	; 0x40
   17938:	tst	r2, #2048	; 0x800
   1793c:	mov	r4, sp
   17940:	ldm	r3, {r0, r1, r2, r3}
   17944:	stm	sp, {r0, r1, r2, r3}
   17948:	bne	17a50 <fputs@plt+0xe694>
   1794c:	ldr	r3, [r8]
   17950:	mov	r0, r8
   17954:	mov	r1, sp
   17958:	ldr	r3, [r3, #72]	; 0x48
   1795c:	blx	r3
   17960:	vldr	d6, [sp]
   17964:	vldr	d7, [sp, #8]
   17968:	vadd.f64	d9, d6, d9
   1796c:	mov	ip, #1
   17970:	vadd.f64	d8, d7, d8
   17974:	vstr	d9, [sp]
   17978:	vstr	d8, [sp, #8]
   1797c:	ldm	r4, {r0, r1, r2, r3}
   17980:	stm	r6, {r0, r1, r2, r3}
   17984:	mov	r0, ip
   17988:	ldr	r2, [sp, #84]	; 0x54
   1798c:	ldr	r3, [r7]
   17990:	cmp	r2, r3
   17994:	bne	17a9c <fputs@plt+0xe6e0>
   17998:	add	sp, sp, #92	; 0x5c
   1799c:	vpop	{d8-d9}
   179a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   179a4:	ldr	r3, [r1]
   179a8:	mov	r0, r1
   179ac:	vmov.f64	d9, #96	; 0x3f000000  0.5
   179b0:	vldr	d8, [pc, #232]	; 17aa0 <fputs@plt+0xe6e4>
   179b4:	ldr	r3, [r3, #12]
   179b8:	blx	r3
   179bc:	ldr	r2, [r9]
   179c0:	tst	r2, #1024	; 0x400
   179c4:	vnmul.f64	d9, d0, d9
   179c8:	bne	17934 <fputs@plt+0xe578>
   179cc:	ldm	r6, {r0, r1, r2, r3}
   179d0:	mov	r4, sp
   179d4:	stm	sp, {r0, r1, r2, r3}
   179d8:	vldr	d6, [sp]
   179dc:	vldr	d7, [sp, #8]
   179e0:	vadd.f64	d6, d6, d9
   179e4:	vadd.f64	d7, d7, d8
   179e8:	vstr	d6, [sp]
   179ec:	vstr	d7, [sp, #8]
   179f0:	b	1794c <fputs@plt+0xe590>
   179f4:	ldr	r3, [r1]
   179f8:	mov	r0, r1
   179fc:	vmov.f64	d9, #96	; 0x3f000000  0.5
   17a00:	vldr	d8, [pc, #152]	; 17aa0 <fputs@plt+0xe6e4>
   17a04:	ldr	r3, [r3, #12]
   17a08:	blx	r3
   17a0c:	vmul.f64	d9, d0, d9
   17a10:	b	17928 <fputs@plt+0xe56c>
   17a14:	ldr	r3, [r1]
   17a18:	mov	r0, r1
   17a1c:	vmov.f64	d8, #96	; 0x3f000000  0.5
   17a20:	vldr	d9, [pc, #120]	; 17aa0 <fputs@plt+0xe6e4>
   17a24:	ldr	r3, [r3, #20]
   17a28:	blx	r3
   17a2c:	vmul.f64	d8, d0, d8
   17a30:	b	17928 <fputs@plt+0xe56c>
   17a34:	movw	r1, #24848	; 0x6110
   17a38:	mov	r0, #884	; 0x374
   17a3c:	movt	r1, #2
   17a40:	vldr	d8, [pc, #88]	; 17aa0 <fputs@plt+0xe6e4>
   17a44:	bl	1eec8 <fputs@plt+0x15b0c>
   17a48:	vmov.f64	d9, d8
   17a4c:	b	17928 <fputs@plt+0xe56c>
   17a50:	add	r1, sp, #88	; 0x58
   17a54:	ldr	r0, [r9, #96]	; 0x60
   17a58:	add	r2, sp, #32
   17a5c:	str	r8, [r1, #-32]!	; 0xffffffe0
   17a60:	bl	17714 <fputs@plt+0xe358>
   17a64:	subs	ip, r0, #0
   17a68:	beq	17984 <fputs@plt+0xe5c8>
   17a6c:	add	r1, sp, #32
   17a70:	add	r0, sp, #16
   17a74:	bl	14ff0 <fputs@plt+0xbc34>
   17a78:	vldr	d5, [sp]
   17a7c:	vldr	d7, [sp, #8]
   17a80:	vldr	d6, [sp, #16]
   17a84:	vldr	d4, [sp, #24]
   17a88:	vsub.f64	d6, d5, d6
   17a8c:	vsub.f64	d7, d7, d4
   17a90:	vstr	d6, [sp]
   17a94:	vstr	d7, [sp, #8]
   17a98:	b	1794c <fputs@plt+0xe590>
   17a9c:	bl	92b4 <__stack_chk_fail@plt>
	...
   17aa8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17aac:	movw	sl, #1424	; 0x590
   17ab0:	movt	sl, #3
   17ab4:	ldr	r3, [r0]
   17ab8:	mov	r8, r2
   17abc:	sub	sp, sp, #24
   17ac0:	ldr	r2, [sl]
   17ac4:	tst	r3, #4096	; 0x1000
   17ac8:	movw	r7, #10912	; 0x2aa0
   17acc:	mov	r6, r0
   17ad0:	mov	r9, r1
   17ad4:	movt	r7, #3
   17ad8:	str	r2, [sp, #20]
   17adc:	bne	17afc <fputs@plt+0xe740>
   17ae0:	tst	r3, #256	; 0x100
   17ae4:	beq	17c3c <fputs@plt+0xe880>
   17ae8:	ldr	r2, [r7, #28]
   17aec:	cmp	r2, #0
   17af0:	beq	17c3c <fputs@plt+0xe880>
   17af4:	ldrd	r4, [r7, #32]
   17af8:	strd	r4, [r0, #104]	; 0x68
   17afc:	tst	r3, #8192	; 0x2000
   17b00:	bne	17b28 <fputs@plt+0xe76c>
   17b04:	tst	r3, #256	; 0x100
   17b08:	beq	17c54 <fputs@plt+0xe898>
   17b0c:	ldr	r1, [r7, #28]
   17b10:	movw	r2, #10912	; 0x2aa0
   17b14:	movt	r2, #3
   17b18:	cmp	r1, #0
   17b1c:	beq	17c54 <fputs@plt+0xe898>
   17b20:	ldrd	r4, [r2, #40]	; 0x28
   17b24:	strd	r4, [r6, #120]	; 0x78
   17b28:	tst	r3, #16384	; 0x4000
   17b2c:	bne	17b64 <fputs@plt+0xe7a8>
   17b30:	tst	r3, #256	; 0x100
   17b34:	beq	17b54 <fputs@plt+0xe798>
   17b38:	ldr	r2, [r7, #28]
   17b3c:	movw	r3, #10912	; 0x2aa0
   17b40:	movt	r3, #3
   17b44:	cmp	r2, #0
   17b48:	vldrne	d7, [r3, #48]	; 0x30
   17b4c:	vstrne	d7, [r6, #112]	; 0x70
   17b50:	bne	17b68 <fputs@plt+0xe7ac>
   17b54:	movw	r0, #19724	; 0x4d0c
   17b58:	add	r1, r6, #112	; 0x70
   17b5c:	movt	r0, #2
   17b60:	bl	9f24 <fputs@plt+0xb68>
   17b64:	vldr	d7, [r6, #112]	; 0x70
   17b68:	vabs.f64	d4, d7
   17b6c:	vldr	d6, [r6, #120]	; 0x78
   17b70:	vstr	d7, [r7, #48]	; 0x30
   17b74:	vldr	d7, [r6, #104]	; 0x68
   17b78:	mov	r0, #136	; 0x88
   17b7c:	mov	r3, #1
   17b80:	vstr	d6, [r7, #40]	; 0x28
   17b84:	vstr	d7, [r7, #32]
   17b88:	vadd.f64	d5, d4, d4
   17b8c:	str	r3, [r7, #28]
   17b90:	vstr	d6, [sp]
   17b94:	vstr	d7, [sp, #8]
   17b98:	vabs.f64	d3, d6
   17b9c:	vcmpe.f64	d5, d3
   17ba0:	vmrs	APSR_nzcv, fpscr
   17ba4:	vmovgt.f64	d4, #96	; 0x3f000000  0.5
   17ba8:	vmulgt.f64	d4, d6, d4
   17bac:	vabsgt.f64	d4, d4
   17bb0:	vaddgt.f64	d5, d4, d4
   17bb4:	vstr	d4, [r6, #112]	; 0x70
   17bb8:	vabs.f64	d4, d7
   17bbc:	vcmpe.f64	d4, d5
   17bc0:	vmrs	APSR_nzcv, fpscr
   17bc4:	vmovmi.f64	d5, #96	; 0x3f000000  0.5
   17bc8:	vmulmi.f64	d5, d7, d5
   17bcc:	vabsmi.f64	d5, d5
   17bd0:	vstrmi	d5, [r6, #112]	; 0x70
   17bd4:	bl	209a0 <_Znwj@@Base>
   17bd8:	mov	r1, sp
   17bdc:	vldr	d0, [r6, #112]	; 0x70
   17be0:	mov	r4, r0
   17be4:	bl	16b54 <fputs@plt+0xd798>
   17be8:	mov	r3, r8
   17bec:	mov	r0, r6
   17bf0:	mov	r1, r4
   17bf4:	mov	r2, r9
   17bf8:	bl	178b0 <fputs@plt+0xe4f4>
   17bfc:	subs	r3, r0, #0
   17c00:	bne	17c20 <fputs@plt+0xe864>
   17c04:	cmp	r4, #0
   17c08:	beq	17c20 <fputs@plt+0xe864>
   17c0c:	ldr	r2, [r4]
   17c10:	mov	r0, r4
   17c14:	mov	r4, r3
   17c18:	ldr	r3, [r2, #4]
   17c1c:	blx	r3
   17c20:	ldr	r2, [sp, #20]
   17c24:	mov	r0, r4
   17c28:	ldr	r3, [sl]
   17c2c:	cmp	r2, r3
   17c30:	bne	17c6c <fputs@plt+0xe8b0>
   17c34:	add	sp, sp, #24
   17c38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c3c:	movw	r0, #19708	; 0x4cfc
   17c40:	add	r1, r6, #104	; 0x68
   17c44:	movt	r0, #2
   17c48:	bl	9f24 <fputs@plt+0xb68>
   17c4c:	ldr	r3, [r6]
   17c50:	b	17afc <fputs@plt+0xe740>
   17c54:	movw	r0, #19716	; 0x4d04
   17c58:	add	r1, r6, #120	; 0x78
   17c5c:	movt	r0, #2
   17c60:	bl	9f24 <fputs@plt+0xb68>
   17c64:	ldr	r3, [r6]
   17c68:	b	17b28 <fputs@plt+0xe76c>
   17c6c:	bl	92b4 <__stack_chk_fail@plt>
   17c70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17c74:	vpush	{d8-d9}
   17c78:	movw	r8, #1424	; 0x590
   17c7c:	vldr	d7, [pc, #492]	; 17e70 <fputs@plt+0xeab4>
   17c80:	movt	r8, #3
   17c84:	ldr	r6, [r0, #8]
   17c88:	sub	sp, sp, #64	; 0x40
   17c8c:	mov	r4, r2
   17c90:	ldr	r3, [r8]
   17c94:	cmp	r6, #0
   17c98:	mov	r2, #1
   17c9c:	mov	r7, r0
   17ca0:	mov	r5, r1
   17ca4:	str	r2, [sp, #16]
   17ca8:	str	r3, [sp, #60]	; 0x3c
   17cac:	vstr	d7, [sp, #24]
   17cb0:	vstr	d7, [sp, #32]
   17cb4:	vstr	d7, [sp, #40]	; 0x28
   17cb8:	vstr	d7, [sp, #48]	; 0x30
   17cbc:	beq	17e5c <fputs@plt+0xeaa0>
   17cc0:	ldr	r3, [r6]
   17cc4:	mov	r0, r6
   17cc8:	add	r1, sp, #16
   17ccc:	ldr	r3, [r3, #80]	; 0x50
   17cd0:	blx	r3
   17cd4:	ldr	r6, [r6, #8]
   17cd8:	cmp	r6, #0
   17cdc:	bne	17cc0 <fputs@plt+0xe904>
   17ce0:	ldr	r3, [sp, #16]
   17ce4:	cmp	r3, #0
   17ce8:	bne	17e50 <fputs@plt+0xea94>
   17cec:	vmov.f64	d7, #96	; 0x3f000000  0.5
   17cf0:	vldr	d3, [sp, #32]
   17cf4:	vldr	d4, [sp, #48]	; 0x30
   17cf8:	vldr	d5, [sp, #24]
   17cfc:	vldr	d6, [sp, #40]	; 0x28
   17d00:	ldr	r6, [r7, #8]
   17d04:	cmp	r6, #0
   17d08:	vadd.f64	d4, d3, d4
   17d0c:	vadd.f64	d6, d5, d6
   17d10:	vnmul.f64	d4, d4, d7
   17d14:	vnmul.f64	d7, d6, d7
   17d18:	vstr	d4, [sp, #8]
   17d1c:	vstr	d7, [sp]
   17d20:	beq	17d44 <fputs@plt+0xe988>
   17d24:	ldr	r3, [r6]
   17d28:	mov	r0, r6
   17d2c:	mov	r1, sp
   17d30:	ldr	r3, [r3, #72]	; 0x48
   17d34:	blx	r3
   17d38:	ldr	r6, [r6, #8]
   17d3c:	cmp	r6, #0
   17d40:	bne	17d24 <fputs@plt+0xe968>
   17d44:	mov	r1, sp
   17d48:	ldr	r0, [r7, #16]
   17d4c:	bl	14c50 <fputs@plt+0xb894>
   17d50:	vldr	d9, [sp, #40]	; 0x28
   17d54:	vldr	d6, [sp, #24]
   17d58:	vldr	d8, [sp, #48]	; 0x30
   17d5c:	vldr	d7, [sp, #32]
   17d60:	vsub.f64	d9, d9, d6
   17d64:	vsub.f64	d8, d8, d7
   17d68:	ldr	r3, [r7]
   17d6c:	mov	r0, #104	; 0x68
   17d70:	ldr	sl, [pc, #256]	; 17e78 <fputs@plt+0xeabc>
   17d74:	tst	r3, #8192	; 0x2000
   17d78:	vldrne	d9, [r7, #120]	; 0x78
   17d7c:	tst	r3, #4096	; 0x1000
   17d80:	vldrne	d8, [r7, #104]	; 0x68
   17d84:	bl	209a0 <_Znwj@@Base>
   17d88:	add	r3, r7, #8
   17d8c:	ldr	r9, [r7, #16]
   17d90:	mov	r2, r5
   17d94:	mov	ip, #1
   17d98:	mov	r5, #0
   17d9c:	vmov.f64	d7, #112	; 0x3f800000  1.0
   17da0:	mov	r6, r0
   17da4:	mov	lr, r0
   17da8:	ldm	r3, {r0, r1}
   17dac:	mov	r3, r4
   17db0:	str	ip, [r6, #24]
   17db4:	vstr	d9, [r6, #72]	; 0x48
   17db8:	mov	ip, #0
   17dbc:	vstr	d8, [r6, #80]	; 0x50
   17dc0:	str	ip, [r6, #4]
   17dc4:	vstr	d7, [r6, #40]	; 0x28
   17dc8:	str	ip, [r6, #8]
   17dcc:	mov	r4, #0
   17dd0:	str	ip, [r6, #12]
   17dd4:	strd	r4, [r6, #56]	; 0x38
   17dd8:	str	ip, [r6, #16]
   17ddc:	strd	r4, [r6, #64]	; 0x40
   17de0:	str	ip, [r6, #20]
   17de4:	str	ip, [r6, #48]	; 0x30
   17de8:	str	ip, [r6, #52]	; 0x34
   17dec:	str	sl, [lr], #88	; 0x58
   17df0:	stm	lr, {r0, r1}
   17df4:	mov	r1, r6
   17df8:	str	r9, [r6, #96]	; 0x60
   17dfc:	mov	r0, r7
   17e00:	bl	178b0 <fputs@plt+0xe4f4>
   17e04:	subs	r3, r0, #0
   17e08:	bne	17e20 <fputs@plt+0xea64>
   17e0c:	ldr	r2, [r6]
   17e10:	mov	r0, r6
   17e14:	mov	r6, r3
   17e18:	ldr	r3, [r2, #4]
   17e1c:	blx	r3
   17e20:	ldr	r1, [sp, #60]	; 0x3c
   17e24:	mov	r3, #0
   17e28:	ldr	r2, [r8]
   17e2c:	mov	r0, r6
   17e30:	str	r3, [r7, #16]
   17e34:	cmp	r1, r2
   17e38:	str	r3, [r7, #12]
   17e3c:	str	r3, [r7, #8]
   17e40:	bne	17e68 <fputs@plt+0xeaac>
   17e44:	add	sp, sp, #64	; 0x40
   17e48:	vpop	{d8-d9}
   17e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17e50:	vldr	d8, [pc, #24]	; 17e70 <fputs@plt+0xeab4>
   17e54:	vmov.f64	d9, d8
   17e58:	b	17d68 <fputs@plt+0xe9ac>
   17e5c:	vmov.f64	d8, d7
   17e60:	vmov.f64	d9, d7
   17e64:	b	17d68 <fputs@plt+0xe9ac>
   17e68:	bl	92b4 <__stack_chk_fail@plt>
   17e6c:	nop	{0}
	...
   17e78:	andeq	r5, r2, r8, ror #29
   17e7c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e80:	mov	fp, r0
   17e84:	ldr	r3, [r0]
   17e88:	mov	sl, r1
   17e8c:	mov	r9, r2
   17e90:	ands	r4, r3, #4096	; 0x1000
   17e94:	beq	17f3c <fputs@plt+0xeb80>
   17e98:	tst	r3, #8192	; 0x2000
   17e9c:	beq	17f8c <fputs@plt+0xebd0>
   17ea0:	mov	r0, #88	; 0x58
   17ea4:	ldrd	r4, [fp, #104]	; 0x68
   17ea8:	ldrd	r6, [fp, #120]	; 0x78
   17eac:	bl	209a0 <_Znwj@@Base>
   17eb0:	vmov.f64	d7, #112	; 0x3f800000  1.0
   17eb4:	ldr	ip, [pc, #244]	; 17fb0 <fputs@plt+0xebf4>
   17eb8:	mov	r3, r9
   17ebc:	mov	r1, #1
   17ec0:	mov	r2, sl
   17ec4:	mov	r8, r0
   17ec8:	mov	r0, fp
   17ecc:	strd	r4, [r8, #80]	; 0x50
   17ed0:	vstr	d7, [r8, #40]	; 0x28
   17ed4:	str	ip, [r8]
   17ed8:	mov	r4, #0
   17edc:	mov	ip, #0
   17ee0:	str	r1, [r8, #24]
   17ee4:	mov	r5, #0
   17ee8:	strd	r6, [r8, #72]	; 0x48
   17eec:	str	ip, [r8, #4]
   17ef0:	mov	r1, r8
   17ef4:	str	ip, [r8, #8]
   17ef8:	strd	r4, [r8, #56]	; 0x38
   17efc:	str	ip, [r8, #12]
   17f00:	strd	r4, [r8, #64]	; 0x40
   17f04:	str	ip, [r8, #16]
   17f08:	str	ip, [r8, #20]
   17f0c:	str	ip, [r8, #48]	; 0x30
   17f10:	str	ip, [r8, #52]	; 0x34
   17f14:	bl	178b0 <fputs@plt+0xe4f4>
   17f18:	subs	r3, r0, #0
   17f1c:	bne	17f34 <fputs@plt+0xeb78>
   17f20:	ldr	r2, [r8]
   17f24:	mov	r0, r8
   17f28:	mov	r8, r3
   17f2c:	ldr	r3, [r2, #4]
   17f30:	blx	r3
   17f34:	mov	r0, r8
   17f38:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f3c:	movw	r0, #19756	; 0x4d2c
   17f40:	add	r1, fp, #104	; 0x68
   17f44:	movt	r0, #2
   17f48:	bl	9f24 <fputs@plt+0xb68>
   17f4c:	ldr	r3, [fp, #100]	; 0x64
   17f50:	cmp	r3, #0
   17f54:	beq	17fa0 <fputs@plt+0xebe4>
   17f58:	mov	r2, r4
   17f5c:	ldr	r3, [r3]
   17f60:	add	r2, r2, #1
   17f64:	cmp	r3, #0
   17f68:	bne	17f5c <fputs@plt+0xeba0>
   17f6c:	vmov	s15, r2
   17f70:	vcvt.f64.s32	d6, s15
   17f74:	vldr	d7, [fp, #104]	; 0x68
   17f78:	ldr	r3, [fp]
   17f7c:	tst	r3, #8192	; 0x2000
   17f80:	vmul.f64	d7, d7, d6
   17f84:	vstr	d7, [fp, #104]	; 0x68
   17f88:	bne	17ea0 <fputs@plt+0xeae4>
   17f8c:	movw	r0, #19764	; 0x4d34
   17f90:	add	r1, fp, #120	; 0x78
   17f94:	movt	r0, #2
   17f98:	bl	9f24 <fputs@plt+0xb68>
   17f9c:	b	17ea0 <fputs@plt+0xeae4>
   17fa0:	vldr	d6, [pc]	; 17fa8 <fputs@plt+0xebec>
   17fa4:	b	17f74 <fputs@plt+0xebb8>
	...
   17fb0:	andeq	r5, r2, r8, lsr r7
   17fb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17fb8:	movw	r8, #1424	; 0x590
   17fbc:	movt	r8, #3
   17fc0:	ldr	r3, [r0]
   17fc4:	mov	r6, r2
   17fc8:	sub	sp, sp, #24
   17fcc:	ldr	r2, [r8]
   17fd0:	tst	r3, #4096	; 0x1000
   17fd4:	movw	sl, #10912	; 0x2aa0
   17fd8:	mov	r9, r0
   17fdc:	mov	r7, r1
   17fe0:	movt	sl, #3
   17fe4:	str	r2, [sp, #20]
   17fe8:	bne	18008 <fputs@plt+0xec4c>
   17fec:	tst	r3, #256	; 0x100
   17ff0:	beq	180c0 <fputs@plt+0xed04>
   17ff4:	ldr	r2, [sl, #56]	; 0x38
   17ff8:	cmp	r2, #0
   17ffc:	beq	180c0 <fputs@plt+0xed04>
   18000:	ldrd	r4, [sl, #64]	; 0x40
   18004:	strd	r4, [r0, #104]	; 0x68
   18008:	tst	r3, #8192	; 0x2000
   1800c:	bne	18038 <fputs@plt+0xec7c>
   18010:	tst	r3, #256	; 0x100
   18014:	beq	180d8 <fputs@plt+0xed1c>
   18018:	ldr	r2, [sl, #56]	; 0x38
   1801c:	movw	r3, #10912	; 0x2aa0
   18020:	movt	r3, #3
   18024:	cmp	r2, #0
   18028:	beq	180d8 <fputs@plt+0xed1c>
   1802c:	ldrd	r4, [r3, #72]	; 0x48
   18030:	strd	r4, [r9, #120]	; 0x78
   18034:	b	1803c <fputs@plt+0xec80>
   18038:	ldrd	r4, [r9, #120]	; 0x78
   1803c:	ldrd	r2, [r9, #104]	; 0x68
   18040:	mov	r0, #120	; 0x78
   18044:	strd	r4, [sl, #72]	; 0x48
   18048:	mov	r1, #1
   1804c:	strd	r4, [sp]
   18050:	strd	r2, [sl, #64]	; 0x40
   18054:	strd	r2, [sp, #8]
   18058:	str	r1, [sl, #56]	; 0x38
   1805c:	bl	209a0 <_Znwj@@Base>
   18060:	mov	r1, sp
   18064:	mov	r4, r0
   18068:	bl	16acc <fputs@plt+0xd710>
   1806c:	ldr	ip, [pc, #128]	; 180f4 <fputs@plt+0xed38>
   18070:	mov	r0, r9
   18074:	mov	r2, r7
   18078:	mov	r3, r6
   1807c:	mov	r1, r4
   18080:	str	ip, [r4]
   18084:	bl	178b0 <fputs@plt+0xe4f4>
   18088:	subs	r5, r0, #0
   1808c:	movne	r0, r4
   18090:	bne	180a8 <fputs@plt+0xecec>
   18094:	ldr	r3, [r4]
   18098:	mov	r0, r4
   1809c:	ldr	r3, [r3, #4]
   180a0:	blx	r3
   180a4:	mov	r0, r5
   180a8:	ldr	r2, [sp, #20]
   180ac:	ldr	r3, [r8]
   180b0:	cmp	r2, r3
   180b4:	bne	180f0 <fputs@plt+0xed34>
   180b8:	add	sp, sp, #24
   180bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   180c0:	movw	r0, #19732	; 0x4d14
   180c4:	add	r1, r9, #104	; 0x68
   180c8:	movt	r0, #2
   180cc:	bl	9f24 <fputs@plt+0xb68>
   180d0:	ldr	r3, [r9]
   180d4:	b	18008 <fputs@plt+0xec4c>
   180d8:	movw	r0, #19744	; 0x4d20
   180dc:	add	r1, r9, #120	; 0x78
   180e0:	movt	r0, #2
   180e4:	bl	9f24 <fputs@plt+0xb68>
   180e8:	ldrd	r4, [r9, #120]	; 0x78
   180ec:	b	1803c <fputs@plt+0xec80>
   180f0:	bl	92b4 <__stack_chk_fail@plt>
   180f4:	andeq	r5, r2, r8, lsr #22
   180f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   180fc:	movw	sl, #1424	; 0x590
   18100:	movt	sl, #3
   18104:	ldr	r3, [r0]
   18108:	mov	r8, r2
   1810c:	sub	sp, sp, #24
   18110:	ldr	r2, [sl]
   18114:	tst	r3, #16384	; 0x4000
   18118:	mov	r7, r0
   1811c:	mov	r9, r1
   18120:	movw	r6, #10912	; 0x2aa0
   18124:	str	r2, [sp, #20]
   18128:	beq	181b8 <fputs@plt+0xedfc>
   1812c:	ldrd	r4, [r0, #112]	; 0x70
   18130:	movt	r6, #3
   18134:	mov	r0, #120	; 0x78
   18138:	mov	r3, #1
   1813c:	strd	r4, [r6, #88]	; 0x58
   18140:	str	r3, [r6, #80]	; 0x50
   18144:	bl	209a0 <_Znwj@@Base>
   18148:	vldr	d7, [r7, #112]	; 0x70
   1814c:	vadd.f64	d7, d7, d7
   18150:	mov	r1, sp
   18154:	vstr	d7, [sp]
   18158:	vstr	d7, [sp, #8]
   1815c:	mov	r4, r0
   18160:	bl	16acc <fputs@plt+0xd710>
   18164:	ldr	ip, [pc, #136]	; 181f4 <fputs@plt+0xee38>
   18168:	mov	r0, r7
   1816c:	mov	r2, r9
   18170:	mov	r3, r8
   18174:	mov	r1, r4
   18178:	str	ip, [r4]
   1817c:	bl	178b0 <fputs@plt+0xe4f4>
   18180:	subs	r5, r0, #0
   18184:	movne	r0, r4
   18188:	bne	181a0 <fputs@plt+0xede4>
   1818c:	ldr	r3, [r4]
   18190:	mov	r0, r4
   18194:	ldr	r3, [r3, #4]
   18198:	blx	r3
   1819c:	mov	r0, r5
   181a0:	ldr	r2, [sp, #20]
   181a4:	ldr	r3, [sl]
   181a8:	cmp	r2, r3
   181ac:	bne	181f0 <fputs@plt+0xee34>
   181b0:	add	sp, sp, #24
   181b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   181b8:	tst	r3, #256	; 0x100
   181bc:	movt	r6, #3
   181c0:	beq	181d8 <fputs@plt+0xee1c>
   181c4:	ldr	r3, [r6, #80]	; 0x50
   181c8:	cmp	r3, #0
   181cc:	ldrdne	r4, [r6, #88]	; 0x58
   181d0:	strdne	r4, [r0, #112]	; 0x70
   181d4:	bne	18134 <fputs@plt+0xed78>
   181d8:	movw	r0, #19696	; 0x4cf0
   181dc:	add	r1, r7, #112	; 0x70
   181e0:	movt	r0, #2
   181e4:	bl	9f24 <fputs@plt+0xb68>
   181e8:	ldrd	r4, [r7, #112]	; 0x70
   181ec:	b	18134 <fputs@plt+0xed78>
   181f0:	bl	92b4 <__stack_chk_fail@plt>
   181f4:	andeq	r5, r2, r0, lsr #23
   181f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181fc:	vpush	{d8-d12}
   18200:	movw	r9, #10912	; 0x2aa0
   18204:	movt	r9, #3
   18208:	movw	sl, #1424	; 0x590
   1820c:	movt	sl, #3
   18210:	mov	r7, r0
   18214:	ldr	r3, [r9, #96]	; 0x60
   18218:	sub	sp, sp, #244	; 0xf4
   1821c:	ldr	r0, [sl]
   18220:	mov	r6, r2
   18224:	tst	r3, #1
   18228:	str	r1, [sp, #4]
   1822c:	str	r0, [sp, #236]	; 0xec
   18230:	beq	18568 <fputs@plt+0xf1ac>
   18234:	ldr	r3, [r7, #200]	; 0xc8
   18238:	str	r3, [r6]
   1823c:	ldr	ip, [r7]
   18240:	and	r3, ip, #3072	; 0xc00
   18244:	cmp	r3, #3072	; 0xc00
   18248:	beq	18254 <fputs@plt+0xee98>
   1824c:	tst	ip, #512	; 0x200
   18250:	bne	18528 <fputs@plt+0xf16c>
   18254:	ldr	ip, [sp, #4]
   18258:	add	r8, sp, #8
   1825c:	ldm	ip, {r0, r1, r2, r3}
   18260:	ldr	ip, [r7]
   18264:	stm	r8, {r0, r1, r2, r3}
   18268:	tst	ip, #128	; 0x80
   1826c:	addne	r5, r7, #208	; 0xd0
   18270:	bne	182b8 <fputs@plt+0xeefc>
   18274:	tst	ip, #256	; 0x100
   18278:	beq	1828c <fputs@plt+0xeed0>
   1827c:	ldr	r3, [r7, #4]
   18280:	sub	r3, r3, #6
   18284:	cmp	r3, #1
   18288:	bls	186a0 <fputs@plt+0xf2e4>
   1828c:	ldr	r3, [r7, #200]	; 0xc8
   18290:	cmp	r3, #3
   18294:	ldrls	pc, [pc, r3, lsl #2]
   18298:	b	187c4 <fputs@plt+0xf408>
   1829c:	muleq	r1, r0, r6
   182a0:	andeq	r8, r1, ip, lsr #5
   182a4:	andeq	r8, r1, r8, ror r6
   182a8:	andeq	r8, r1, r4, ror #12
   182ac:	ldrd	r2, [r7, #136]	; 0x88
   182b0:	add	r5, r7, #208	; 0xd0
   182b4:	strd	r2, [r7, #216]	; 0xd8
   182b8:	mov	r0, #32
   182bc:	bl	209a0 <_Znwj@@Base>
   182c0:	ldr	fp, [r7, #204]	; 0xcc
   182c4:	ldr	r6, [r7, #224]	; 0xe0
   182c8:	mov	r4, r0
   182cc:	ldm	r5, {r0, r1, r2, r3}
   182d0:	mov	lr, r4
   182d4:	mov	r5, #0
   182d8:	str	r6, [lr], #8
   182dc:	mov	ip, r5
   182e0:	mov	r6, fp
   182e4:	stm	lr, {r0, r1, r2, r3}
   182e8:	str	fp, [r4, #24]
   182ec:	str	r5, [r7, #204]	; 0xcc
   182f0:	b	18300 <fputs@plt+0xef44>
   182f4:	mov	ip, r4
   182f8:	mov	r4, r6
   182fc:	ldr	r6, [r6, #24]
   18300:	cmp	r6, #0
   18304:	str	ip, [r4, #24]
   18308:	bne	182f4 <fputs@plt+0xef38>
   1830c:	ldm	r8, {r0, r1, r2, r3}
   18310:	add	r5, sp, #24
   18314:	mov	lr, #1
   18318:	str	r4, [r7, #204]	; 0xcc
   1831c:	stm	r5, {r0, r1, r2, r3}
   18320:	b	18340 <fputs@plt+0xef84>
   18324:	add	r3, r4, #8
   18328:	ldr	r4, [r4, #24]
   1832c:	add	r6, r6, #1
   18330:	ldm	r3, {r0, r1, r2, r3}
   18334:	cmp	r4, #0
   18338:	stm	r5, {r0, r1, r2, r3}
   1833c:	beq	1838c <fputs@plt+0xefd0>
   18340:	ldr	r3, [r4]
   18344:	cmp	r3, #0
   18348:	bne	18324 <fputs@plt+0xef68>
   1834c:	vldr	d5, [r4, #8]
   18350:	vldr	d6, [sp, #32]
   18354:	vldr	d4, [sp, #24]
   18358:	vldr	d7, [r4, #16]
   1835c:	vadd.f64	d5, d4, d5
   18360:	add	ip, r4, #8
   18364:	add	r6, r6, #1
   18368:	vadd.f64	d7, d6, d7
   1836c:	vstr	d5, [sp, #24]
   18370:	vstr	d7, [sp, #32]
   18374:	ldm	r5, {r0, r1, r2, r3}
   18378:	stm	ip, {r0, r1, r2, r3}
   1837c:	str	lr, [r4]
   18380:	ldr	r4, [r4, #24]
   18384:	cmp	r4, #0
   18388:	bne	18340 <fputs@plt+0xef84>
   1838c:	ldr	r3, [r7]
   18390:	and	r3, r3, #3072	; 0xc00
   18394:	cmp	r3, #3072	; 0xc00
   18398:	beq	186f4 <fputs@plt+0xf338>
   1839c:	cmp	r6, #133169152	; 0x7f00000
   183a0:	lslls	r0, r6, #4
   183a4:	mvnhi	r0, #0
   183a8:	bl	9278 <_Znaj@plt>
   183ac:	cmp	r6, #0
   183b0:	movne	r2, #0
   183b4:	movne	r3, #0
   183b8:	mov	r4, r0
   183bc:	addne	r1, r0, #16
   183c0:	movne	r0, #0
   183c4:	beq	183e0 <fputs@plt+0xf024>
   183c8:	add	r0, r0, #1
   183cc:	strd	r2, [r1, #-16]
   183d0:	cmp	r6, r0
   183d4:	strd	r2, [r1, #-8]
   183d8:	add	r1, r1, #16
   183dc:	bne	183c8 <fputs@plt+0xf00c>
   183e0:	ldr	lr, [r7, #204]	; 0xcc
   183e4:	cmp	lr, #0
   183e8:	movne	fp, #0
   183ec:	beq	18410 <fputs@plt+0xf054>
   183f0:	add	r3, lr, #8
   183f4:	ldr	lr, [lr, #24]
   183f8:	add	ip, r4, fp
   183fc:	add	fp, fp, #16
   18400:	ldm	r3, {r0, r1, r2, r3}
   18404:	cmp	lr, #0
   18408:	stm	ip, {r0, r1, r2, r3}
   1840c:	bne	183f0 <fputs@plt+0xf034>
   18410:	ldr	r3, [r7]
   18414:	tst	r3, #131072	; 0x20000
   18418:	bne	18594 <fputs@plt+0xf1d8>
   1841c:	tst	r3, #65536	; 0x10000
   18420:	beq	184a4 <fputs@plt+0xf0e8>
   18424:	vldr	d10, [r7, #144]	; 0x90
   18428:	vcmp.f64	d10, #0.0
   1842c:	vmrs	APSR_nzcv, fpscr
   18430:	bne	186c0 <fputs@plt+0xf304>
   18434:	vldr	d8, [pc, #964]	; 18800 <fputs@plt+0xf444>
   18438:	vmov.f64	d9, d8
   1843c:	vldr	d10, [r7, #152]	; 0x98
   18440:	sub	r3, r6, #-268435455	; 0xf0000001
   18444:	vcmp.f64	d10, #0.0
   18448:	vmrs	APSR_nzcv, fpscr
   1844c:	bne	185bc <fputs@plt+0xf200>
   18450:	vldr	d7, [pc, #936]	; 18800 <fputs@plt+0xf444>
   18454:	vmov.f64	d4, d7
   18458:	add	r3, r4, r3, lsl #4
   1845c:	vldr	d6, [sp, #16]
   18460:	vldr	d5, [sp, #8]
   18464:	vadd.f64	d6, d6, d8
   18468:	vadd.f64	d5, d5, d9
   1846c:	vstr	d5, [sp, #8]
   18470:	vldr	d3, [r3]
   18474:	vstr	d6, [sp, #16]
   18478:	vsub.f64	d3, d3, d4
   1847c:	vldr	d6, [r3, #8]
   18480:	vsub.f64	d5, d6, d7
   18484:	vstr	d3, [r3]
   18488:	vldr	d6, [sp, #24]
   1848c:	vstr	d5, [r3, #8]
   18490:	vsub.f64	d4, d6, d4
   18494:	vldr	d6, [sp, #32]
   18498:	vsub.f64	d7, d6, d7
   1849c:	vstr	d4, [sp, #24]
   184a0:	vstr	d7, [sp, #32]
   184a4:	ldr	r3, [r7, #4]
   184a8:	cmp	r3, #6
   184ac:	beq	1860c <fputs@plt+0xf250>
   184b0:	cmp	r3, #7
   184b4:	beq	1853c <fputs@plt+0xf180>
   184b8:	cmp	r3, #5
   184bc:	beq	18638 <fputs@plt+0xf27c>
   184c0:	movw	r1, #24848	; 0x6110
   184c4:	movw	r0, #1558	; 0x616
   184c8:	movt	r1, #2
   184cc:	mov	r7, #0
   184d0:	bl	1eec8 <fputs@plt+0x15b0c>
   184d4:	vldr	d4, [sp, #32]
   184d8:	vldr	d5, [sp, #16]
   184dc:	vldr	d6, [sp, #24]
   184e0:	vldr	d7, [sp, #8]
   184e4:	vsub.f64	d5, d4, d5
   184e8:	mov	r3, #1
   184ec:	str	r3, [r9, #120]	; 0x78
   184f0:	ldm	r5, {r0, r1, r2, r3}
   184f4:	ldr	ip, [sp, #4]
   184f8:	stm	ip, {r0, r1, r2, r3}
   184fc:	vsub.f64	d7, d6, d7
   18500:	vstr	d5, [r9, #112]	; 0x70
   18504:	vstr	d7, [r9, #104]	; 0x68
   18508:	ldr	r2, [sp, #236]	; 0xec
   1850c:	mov	r0, r7
   18510:	ldr	r3, [sl]
   18514:	cmp	r2, r3
   18518:	bne	187ec <fputs@plt+0xf430>
   1851c:	add	sp, sp, #244	; 0xf4
   18520:	vpop	{d8-d12}
   18524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18528:	add	r3, r7, #32
   1852c:	add	r8, sp, #8
   18530:	ldm	r3, {r0, r1, r2, r3}
   18534:	stm	r8, {r0, r1, r2, r3}
   18538:	b	18268 <fputs@plt+0xeeac>
   1853c:	mov	r0, #128	; 0x80
   18540:	bl	209a0 <_Znwj@@Base>
   18544:	mov	r1, r8
   18548:	mov	r2, r5
   1854c:	mov	r7, r0
   18550:	bl	16fd4 <fputs@plt+0xdc18>
   18554:	ldr	r3, [pc, #684]	; 18808 <fputs@plt+0xf44c>
   18558:	str	r4, [r7, #120]	; 0x78
   1855c:	str	r6, [r7, #124]	; 0x7c
   18560:	str	r3, [r7]
   18564:	b	184d4 <fputs@plt+0xf118>
   18568:	add	r0, r9, #96	; 0x60
   1856c:	bl	90f8 <__cxa_guard_acquire@plt>
   18570:	cmp	r0, #0
   18574:	beq	18234 <fputs@plt+0xee78>
   18578:	add	r0, r9, #96	; 0x60
   1857c:	mov	r4, #0
   18580:	mov	r5, #0
   18584:	strd	r4, [r9, #104]	; 0x68
   18588:	strd	r4, [r9, #112]	; 0x70
   1858c:	bl	91e8 <__cxa_guard_release@plt>
   18590:	b	18234 <fputs@plt+0xee78>
   18594:	add	r1, r7, #144	; 0x90
   18598:	movw	r0, #19696	; 0x4cf0
   1859c:	movt	r0, #2
   185a0:	bl	9f24 <fputs@plt+0xb68>
   185a4:	ldrd	r2, [r7, #144]	; 0x90
   185a8:	ldr	r1, [r7]
   185ac:	strd	r2, [r7, #152]	; 0x98
   185b0:	orr	r3, r1, #65536	; 0x10000
   185b4:	str	r3, [r7]
   185b8:	b	1841c <fputs@plt+0xf060>
   185bc:	lsl	r3, r3, #4
   185c0:	cmp	r6, #1
   185c4:	add	fp, r4, r3
   185c8:	subne	r3, r3, #16
   185cc:	addne	r3, r4, r3
   185d0:	moveq	r3, r8
   185d4:	vldr	d7, [fp, #8]
   185d8:	vldr	d6, [r3]
   185dc:	vldr	d11, [r3, #8]
   185e0:	vldr	d12, [fp]
   185e4:	vsub.f64	d11, d7, d11
   185e8:	vsub.f64	d12, d12, d6
   185ec:	vmov.f64	d1, d11
   185f0:	vmov.f64	d0, d12
   185f4:	bl	206e0 <fputs@plt+0x17324>
   185f8:	mov	r3, fp
   185fc:	vdiv.f64	d0, d10, d0
   18600:	vmul.f64	d4, d0, d12
   18604:	vmul.f64	d7, d0, d11
   18608:	b	1845c <fputs@plt+0xf0a0>
   1860c:	mov	r0, #128	; 0x80
   18610:	bl	209a0 <_Znwj@@Base>
   18614:	mov	r1, r8
   18618:	mov	r2, r5
   1861c:	mov	r7, r0
   18620:	bl	16fd4 <fputs@plt+0xdc18>
   18624:	ldr	r3, [pc, #480]	; 1880c <fputs@plt+0xf450>
   18628:	str	r4, [r7, #120]	; 0x78
   1862c:	str	r6, [r7, #124]	; 0x7c
   18630:	str	r3, [r7]
   18634:	b	184d4 <fputs@plt+0xf118>
   18638:	mov	r0, #128	; 0x80
   1863c:	bl	209a0 <_Znwj@@Base>
   18640:	mov	r1, r8
   18644:	mov	r2, r5
   18648:	mov	r7, r0
   1864c:	bl	16fd4 <fputs@plt+0xdc18>
   18650:	ldr	r3, [pc, #440]	; 18810 <fputs@plt+0xf454>
   18654:	str	r4, [r7, #120]	; 0x78
   18658:	str	r6, [r7, #124]	; 0x7c
   1865c:	str	r3, [r7]
   18660:	b	184d4 <fputs@plt+0xf118>
   18664:	vldr	d7, [r7, #136]	; 0x88
   18668:	vneg.f64	d7, d7
   1866c:	add	r5, r7, #208	; 0xd0
   18670:	vstr	d7, [r7, #216]	; 0xd8
   18674:	b	182b8 <fputs@plt+0xeefc>
   18678:	vldr	d7, [r7, #128]	; 0x80
   1867c:	vneg.f64	d7, d7
   18680:	mov	r5, r7
   18684:	vmov	r2, r3, d7
   18688:	strd	r2, [r5, #208]!	; 0xd0
   1868c:	b	182b8 <fputs@plt+0xeefc>
   18690:	ldrd	r2, [r7, #128]	; 0x80
   18694:	mov	r5, r7
   18698:	strd	r2, [r5, #208]!	; 0xd0
   1869c:	b	182b8 <fputs@plt+0xeefc>
   186a0:	ldr	r3, [r9, #120]	; 0x78
   186a4:	cmp	r3, #0
   186a8:	beq	1828c <fputs@plt+0xeed0>
   186ac:	ldr	r3, [pc, #352]	; 18814 <fputs@plt+0xf458>
   186b0:	add	r5, r7, #208	; 0xd0
   186b4:	ldm	r3, {r0, r1, r2, r3}
   186b8:	stm	r5, {r0, r1, r2, r3}
   186bc:	b	182b8 <fputs@plt+0xeefc>
   186c0:	vldr	d6, [sp, #8]
   186c4:	vldr	d9, [r4]
   186c8:	vldr	d7, [sp, #16]
   186cc:	vsub.f64	d9, d9, d6
   186d0:	vldr	d8, [r4, #8]
   186d4:	vsub.f64	d8, d8, d7
   186d8:	vmov.f64	d0, d9
   186dc:	vmov.f64	d1, d8
   186e0:	bl	206e0 <fputs@plt+0x17324>
   186e4:	vdiv.f64	d0, d10, d0
   186e8:	vmul.f64	d9, d0, d9
   186ec:	vmul.f64	d8, d0, d8
   186f0:	b	1843c <fputs@plt+0xf080>
   186f4:	add	fp, sp, #104	; 0x68
   186f8:	mov	r1, r8
   186fc:	mov	r2, r5
   18700:	mov	r0, fp
   18704:	bl	16fd4 <fputs@plt+0xdc18>
   18708:	ldr	r3, [pc, #252]	; 1880c <fputs@plt+0xf450>
   1870c:	add	r1, sp, #240	; 0xf0
   18710:	add	r2, sp, #56	; 0x38
   18714:	ldr	r0, [r7, #96]	; 0x60
   18718:	vldr	d9, [r7, #64]	; 0x40
   1871c:	str	fp, [r1, #-160]!	; 0xffffff60
   18720:	vldr	d8, [r7, #72]	; 0x48
   18724:	str	r4, [sp, #224]	; 0xe0
   18728:	str	r4, [sp, #228]	; 0xe4
   1872c:	str	r3, [sp, #104]	; 0x68
   18730:	bl	17714 <fputs@plt+0xe358>
   18734:	subs	r4, r0, #0
   18738:	beq	187dc <fputs@plt+0xf420>
   1873c:	add	r1, sp, #56	; 0x38
   18740:	add	r0, sp, #40	; 0x28
   18744:	bl	14ff0 <fputs@plt+0xbc34>
   18748:	ldr	r3, [r7, #204]	; 0xcc
   1874c:	vldr	d5, [sp, #40]	; 0x28
   18750:	vldr	d2, [sp, #48]	; 0x30
   18754:	vsub.f64	d5, d9, d5
   18758:	cmp	r3, #0
   1875c:	vsub.f64	d2, d8, d2
   18760:	beq	18788 <fputs@plt+0xf3cc>
   18764:	vldr	d6, [r3, #8]
   18768:	vldr	d7, [r3, #16]
   1876c:	vadd.f64	d6, d6, d5
   18770:	vadd.f64	d7, d7, d2
   18774:	vstr	d6, [r3, #8]
   18778:	vstr	d7, [r3, #16]
   1877c:	ldr	r3, [r3, #24]
   18780:	cmp	r3, #0
   18784:	bne	18764 <fputs@plt+0xf3a8>
   18788:	vldr	d3, [sp, #8]
   1878c:	vldr	d4, [sp, #16]
   18790:	vldr	d6, [sp, #24]
   18794:	vldr	d7, [sp, #32]
   18798:	vadd.f64	d3, d3, d5
   1879c:	mov	r0, fp
   187a0:	vadd.f64	d4, d4, d2
   187a4:	vstr	d3, [sp, #8]
   187a8:	vadd.f64	d6, d6, d5
   187ac:	vstr	d4, [sp, #16]
   187b0:	vadd.f64	d7, d7, d2
   187b4:	vstr	d6, [sp, #24]
   187b8:	vstr	d7, [sp, #32]
   187bc:	bl	148f0 <fputs@plt+0xb534>
   187c0:	b	1839c <fputs@plt+0xefe0>
   187c4:	movw	r1, #24848	; 0x6110
   187c8:	movw	r0, #1481	; 0x5c9
   187cc:	movt	r1, #2
   187d0:	add	r5, r7, #208	; 0xd0
   187d4:	bl	1eec8 <fputs@plt+0x15b0c>
   187d8:	b	182b8 <fputs@plt+0xeefc>
   187dc:	mov	r0, fp
   187e0:	mov	r7, r4
   187e4:	bl	148f0 <fputs@plt+0xb534>
   187e8:	b	18508 <fputs@plt+0xf14c>
   187ec:	bl	92b4 <__stack_chk_fail@plt>
   187f0:	mov	r0, fp
   187f4:	bl	148f0 <fputs@plt+0xb534>
   187f8:	bl	9188 <__cxa_end_cleanup@plt>
   187fc:	nop	{0}
	...
   18808:			; <UNDEFINED> instruction: 0x000257b0
   1880c:	strdeq	r5, [r2], -r8
   18810:	andeq	r5, r2, r0, ror lr
   18814:	andeq	r2, r3, r8, lsl #22
   18818:	push	{r4, r5, r6, r7, r8, r9, lr}
   1881c:	movw	r5, #1424	; 0x590
   18820:	movt	r5, #3
   18824:	ldr	ip, [r0, #4]
   18828:	sub	sp, sp, #44	; 0x2c
   1882c:	mov	r4, r0
   18830:	ldr	r3, [r5]
   18834:	cmp	ip, #4
   18838:	str	r3, [sp, #36]	; 0x24
   1883c:	beq	1890c <fputs@plt+0xf550>
   18840:	bl	181f8 <fputs@plt+0xee3c>
   18844:	mov	r8, r0
   18848:	ldr	r3, [r4, #4]
   1884c:	cmp	r3, #7
   18850:	beq	188f8 <fputs@plt+0xf53c>
   18854:	cmp	r8, #0
   18858:	beq	188dc <fputs@plt+0xf520>
   1885c:	ldr	r0, [r4]
   18860:	tst	r0, #96	; 0x60
   18864:	beq	188dc <fputs@plt+0xf520>
   18868:	tst	r0, #4096	; 0x1000
   1886c:	ubfx	r7, r0, #5, #1
   18870:	ubfx	r6, r0, #6, #1
   18874:	beq	18918 <fputs@plt+0xf55c>
   18878:	ldrd	r2, [r4, #104]	; 0x68
   1887c:	add	r9, sp, #40	; 0x28
   18880:	tst	r0, #8192	; 0x2000
   18884:	strd	r2, [r9, #-32]!	; 0xffffffe0
   18888:	beq	18938 <fputs@plt+0xf57c>
   1888c:	ldrd	r2, [r4, #120]	; 0x78
   18890:	strd	r2, [sp, #16]
   18894:	mov	r1, sp
   18898:	movw	r0, #19792	; 0x4d50
   1889c:	mov	r4, r9
   188a0:	movt	r0, #2
   188a4:	bl	9f24 <fputs@plt+0xb68>
   188a8:	ldm	r4!, {r0, r1, r2, r3}
   188ac:	vldr	d7, [sp]
   188b0:	vcmp.f64	d7, #0.0
   188b4:	add	ip, r8, #64	; 0x40
   188b8:	strb	r7, [r8, #56]	; 0x38
   188bc:	strb	r6, [r8, #57]	; 0x39
   188c0:	vmrs	APSR_nzcv, fpscr
   188c4:	stmia	ip!, {r0, r1, r2, r3}
   188c8:	moveq	r3, #0
   188cc:	movne	r3, #1
   188d0:	str	r3, [sp, #24]
   188d4:	ldm	r4, {r0, r1}
   188d8:	stm	ip, {r0, r1}
   188dc:	ldr	r2, [sp, #36]	; 0x24
   188e0:	mov	r0, r8
   188e4:	ldr	r3, [r5]
   188e8:	cmp	r2, r3
   188ec:	bne	1894c <fputs@plt+0xf590>
   188f0:	add	sp, sp, #44	; 0x2c
   188f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   188f8:	ldr	r3, [r4]
   188fc:	tst	r3, #96	; 0x60
   18900:	orreq	r3, r3, #64	; 0x40
   18904:	streq	r3, [r4]
   18908:	b	18854 <fputs@plt+0xf498>
   1890c:	bl	17188 <fputs@plt+0xddcc>
   18910:	mov	r8, r0
   18914:	b	18848 <fputs@plt+0xf48c>
   18918:	add	r9, sp, #8
   1891c:	movw	r0, #19676	; 0x4cdc
   18920:	movt	r0, #2
   18924:	mov	r1, r9
   18928:	bl	9f24 <fputs@plt+0xb68>
   1892c:	ldr	r0, [r4]
   18930:	tst	r0, #8192	; 0x2000
   18934:	bne	1888c <fputs@plt+0xf4d0>
   18938:	movw	r0, #19684	; 0x4ce4
   1893c:	add	r1, sp, #16
   18940:	movt	r0, #2
   18944:	bl	9f24 <fputs@plt+0xb68>
   18948:	b	18894 <fputs@plt+0xf4d8>
   1894c:	bl	92b4 <__stack_chk_fail@plt>
   18950:	push	{r4, r5, r6, r7, r8, lr}
   18954:	movw	r6, #1424	; 0x590
   18958:	movt	r6, #3
   1895c:	mov	r8, r0
   18960:	ldr	r3, [r8, #4]
   18964:	sub	sp, sp, #32
   18968:	ldr	r0, [r6]
   1896c:	sub	r3, r3, #1
   18970:	str	r0, [sp, #28]
   18974:	cmp	r3, #9
   18978:	ldrls	pc, [pc, r3, lsl #2]
   1897c:	b	18b8c <fputs@plt+0xf7d0>
   18980:	andeq	r8, r1, r0, lsl #21
   18984:	muleq	r1, r0, sl
   18988:	andeq	r8, r1, r0, lsr #21
   1898c:			; <UNDEFINED> instruction: 0x00018ab0
   18990:			; <UNDEFINED> instruction: 0x00018ab0
   18994:			; <UNDEFINED> instruction: 0x00018ab0
   18998:			; <UNDEFINED> instruction: 0x00018ab0
   1899c:	andeq	r8, r1, r0, asr #21
   189a0:	ldrdeq	r8, [r1], -r0
   189a4:	andeq	r8, r1, r8, lsr #19
   189a8:	mov	r0, r8
   189ac:	bl	17c70 <fputs@plt+0xe8b4>
   189b0:	mov	r7, r0
   189b4:	cmp	r7, #0
   189b8:	beq	18a64 <fputs@plt+0xf6a8>
   189bc:	ldr	r2, [r8]
   189c0:	ldr	r1, [r8, #100]	; 0x64
   189c4:	tst	r2, #16
   189c8:	movne	r3, #0
   189cc:	strne	r3, [r7, #24]
   189d0:	cmp	r1, #0
   189d4:	beq	189e8 <fputs@plt+0xf62c>
   189d8:	ubfx	r2, r2, #21, #1
   189dc:	mov	r0, r7
   189e0:	bl	16964 <fputs@plt+0xd5a8>
   189e4:	ldr	r2, [r8]
   189e8:	tst	r2, #1
   189ec:	beq	18ae0 <fputs@plt+0xf724>
   189f0:	ldrd	r4, [r8, #24]
   189f4:	tst	r2, #262144	; 0x40000
   189f8:	mov	r3, #2
   189fc:	str	r3, [r7, #24]
   18a00:	strd	r4, [r7, #32]
   18a04:	beq	18afc <fputs@plt+0xf740>
   18a08:	ldrd	r4, [r8, #160]	; 0xa0
   18a0c:	tst	r2, #8388608	; 0x800000
   18a10:	strd	r4, [sp]
   18a14:	strd	r4, [r7, #40]	; 0x28
   18a18:	bne	18b20 <fputs@plt+0xf764>
   18a1c:	tst	r2, #16777216	; 0x1000000
   18a20:	bne	18b38 <fputs@plt+0xf77c>
   18a24:	tst	r2, #33554432	; 0x2000000
   18a28:	bne	18b58 <fputs@plt+0xf79c>
   18a2c:	tst	r2, #1572864	; 0x180000
   18a30:	beq	18a64 <fputs@plt+0xf6a8>
   18a34:	tst	r2, #4194304	; 0x400000
   18a38:	bne	18b74 <fputs@plt+0xf7b8>
   18a3c:	tst	r2, #1048576	; 0x100000
   18a40:	bne	18ba4 <fputs@plt+0xf7e8>
   18a44:	vldr	d0, [r8, #168]	; 0xa8
   18a48:	vcmpe.f64	d0, #0.0
   18a4c:	vmrs	APSR_nzcv, fpscr
   18a50:	bmi	18bb8 <fputs@plt+0xf7fc>
   18a54:	ldr	r3, [r7]
   18a58:	mov	r0, r7
   18a5c:	ldr	r3, [r3, #96]	; 0x60
   18a60:	blx	r3
   18a64:	ldr	r2, [sp, #28]
   18a68:	mov	r0, r7
   18a6c:	ldr	r3, [r6]
   18a70:	cmp	r2, r3
   18a74:	bne	18be0 <fputs@plt+0xf824>
   18a78:	add	sp, sp, #32
   18a7c:	pop	{r4, r5, r6, r7, r8, pc}
   18a80:	mov	r0, r8
   18a84:	bl	17aa8 <fputs@plt+0xe6ec>
   18a88:	mov	r7, r0
   18a8c:	b	189b4 <fputs@plt+0xf5f8>
   18a90:	mov	r0, r8
   18a94:	bl	180f8 <fputs@plt+0xed3c>
   18a98:	mov	r7, r0
   18a9c:	b	189b4 <fputs@plt+0xf5f8>
   18aa0:	mov	r0, r8
   18aa4:	bl	17fb4 <fputs@plt+0xebf8>
   18aa8:	mov	r7, r0
   18aac:	b	189b4 <fputs@plt+0xf5f8>
   18ab0:	mov	r0, r8
   18ab4:	bl	18818 <fputs@plt+0xf45c>
   18ab8:	mov	r7, r0
   18abc:	b	189b4 <fputs@plt+0xf5f8>
   18ac0:	mov	r0, r8
   18ac4:	bl	16d98 <fputs@plt+0xd9dc>
   18ac8:	mov	r7, r0
   18acc:	b	189b4 <fputs@plt+0xf5f8>
   18ad0:	mov	r0, r8
   18ad4:	bl	17e7c <fputs@plt+0xeac0>
   18ad8:	mov	r7, r0
   18adc:	b	189b4 <fputs@plt+0xf5f8>
   18ae0:	tst	r2, #2
   18ae4:	ldrdne	r0, [r8, #24]
   18ae8:	movne	r3, #3
   18aec:	strne	r3, [r7, #24]
   18af0:	strdne	r0, [r7, #32]
   18af4:	tst	r2, #262144	; 0x40000
   18af8:	bne	18a08 <fputs@plt+0xf64c>
   18afc:	movw	r0, #19772	; 0x4d3c
   18b00:	mov	r1, sp
   18b04:	movt	r0, #2
   18b08:	bl	9f24 <fputs@plt+0xb68>
   18b0c:	ldr	r2, [r8]
   18b10:	ldrd	r4, [sp]
   18b14:	tst	r2, #8388608	; 0x800000
   18b18:	strd	r4, [r7, #40]	; 0x28
   18b1c:	beq	18a1c <fputs@plt+0xf660>
   18b20:	ldr	r0, [r8, #196]	; 0xc4
   18b24:	bl	214b4 <_ZdlPv@@Base+0xac4>
   18b28:	ldr	r2, [r8]
   18b2c:	tst	r2, #16777216	; 0x1000000
   18b30:	str	r0, [r7, #48]	; 0x30
   18b34:	beq	18a24 <fputs@plt+0xf668>
   18b38:	ldr	r3, [r7]
   18b3c:	mov	r0, r7
   18b40:	vldr	d0, [r8, #176]	; 0xb0
   18b44:	ldr	r3, [r3, #100]	; 0x64
   18b48:	blx	r3
   18b4c:	ldr	r2, [r8]
   18b50:	tst	r2, #33554432	; 0x2000000
   18b54:	beq	18a2c <fputs@plt+0xf670>
   18b58:	ldr	r3, [r7]
   18b5c:	mov	r0, r7
   18b60:	vldr	d0, [r8, #184]	; 0xb8
   18b64:	ldr	r3, [r3, #104]	; 0x68
   18b68:	blx	r3
   18b6c:	ldr	r2, [r8]
   18b70:	b	18a2c <fputs@plt+0xf670>
   18b74:	ldr	r3, [r7]
   18b78:	mov	r0, r7
   18b7c:	ldr	r1, [r8, #192]	; 0xc0
   18b80:	ldr	r3, [r3, #108]	; 0x6c
   18b84:	blx	r3
   18b88:	b	18a64 <fputs@plt+0xf6a8>
   18b8c:	movw	r1, #24848	; 0x6110
   18b90:	movw	r0, #1909	; 0x775
   18b94:	movt	r1, #2
   18b98:	mov	r7, #0
   18b9c:	bl	1eec8 <fputs@plt+0x15b0c>
   18ba0:	b	18a64 <fputs@plt+0xf6a8>
   18ba4:	movw	r0, #19784	; 0x4d48
   18ba8:	add	r1, r8, #168	; 0xa8
   18bac:	movt	r0, #2
   18bb0:	bl	9f24 <fputs@plt+0xb68>
   18bb4:	b	18a44 <fputs@plt+0xf688>
   18bb8:	add	r0, sp, #8
   18bbc:	bl	1f2d0 <fputs@plt+0x15f14>
   18bc0:	movw	r2, #13880	; 0x3638
   18bc4:	movt	r2, #3
   18bc8:	add	r1, sp, #8
   18bcc:	movw	r0, #25040	; 0x61d0
   18bd0:	movt	r0, #2
   18bd4:	mov	r3, r2
   18bd8:	bl	1f708 <fputs@plt+0x1634c>
   18bdc:	b	18a64 <fputs@plt+0xf6a8>
   18be0:	bl	92b4 <__stack_chk_fail@plt>
   18be4:	push	{r4, lr}
   18be8:	subs	r4, r0, #0
   18bec:	popeq	{r4, pc}
   18bf0:	ldr	r3, [r4]
   18bf4:	mov	r0, r4
   18bf8:	ldr	r3, [r3, #88]	; 0x58
   18bfc:	blx	r3
   18c00:	ldr	r3, [r4]
   18c04:	mov	r0, r4
   18c08:	ldr	r3, [r3, #92]	; 0x5c
   18c0c:	blx	r3
   18c10:	ldr	r4, [r4, #8]
   18c14:	cmp	r4, #0
   18c18:	bne	18bf0 <fputs@plt+0xf834>
   18c1c:	pop	{r4, pc}
   18c20:	push	{r4, r5, r6, r7, r8, lr}
   18c24:	movw	r5, #2696	; 0xa88
   18c28:	movt	r5, #3
   18c2c:	movw	r4, #1424	; 0x590
   18c30:	movt	r4, #3
   18c34:	ldr	r3, [r0]
   18c38:	ldr	r7, [r5]
   18c3c:	sub	sp, sp, #40	; 0x28
   18c40:	ldr	r1, [r4]
   18c44:	mov	r6, r0
   18c48:	ldr	r3, [r3, #52]	; 0x34
   18c4c:	ldr	r2, [r7]
   18c50:	str	r1, [sp, #36]	; 0x24
   18c54:	ldr	r8, [r2, #76]	; 0x4c
   18c58:	blx	r3
   18c5c:	ldr	r3, [r6]
   18c60:	mov	r0, r6
   18c64:	ldr	r3, [r3, #40]	; 0x28
   18c68:	vstr	d0, [sp]
   18c6c:	vstr	d1, [sp, #8]
   18c70:	blx	r3
   18c74:	add	r2, sp, #16
   18c78:	mov	r1, sp
   18c7c:	mov	r0, r7
   18c80:	vstr	d0, [sp, #16]
   18c84:	vstr	d1, [sp, #24]
   18c88:	blx	r8
   18c8c:	ldr	r0, [r6, #88]	; 0x58
   18c90:	bl	18be4 <fputs@plt+0xf828>
   18c94:	ldr	r0, [r5]
   18c98:	ldr	r3, [r0]
   18c9c:	ldr	r3, [r3, #80]	; 0x50
   18ca0:	blx	r3
   18ca4:	ldr	r2, [sp, #36]	; 0x24
   18ca8:	ldr	r3, [r4]
   18cac:	cmp	r2, r3
   18cb0:	bne	18cbc <fputs@plt+0xf900>
   18cb4:	add	sp, sp, #40	; 0x28
   18cb8:	pop	{r4, r5, r6, r7, r8, pc}
   18cbc:	bl	92b4 <__stack_chk_fail@plt>
   18cc0:	push	{r4, r5, r6, lr}
   18cc4:	movw	r5, #1424	; 0x590
   18cc8:	movt	r5, #3
   18ccc:	sub	sp, sp, #56	; 0x38
   18cd0:	subs	r6, r0, #0
   18cd4:	mov	r2, #0
   18cd8:	ldr	r1, [r5]
   18cdc:	mov	r3, #0
   18ce0:	mov	r0, #1
   18ce4:	strd	r2, [sp, #16]
   18ce8:	str	r0, [sp, #8]
   18cec:	movne	r4, r6
   18cf0:	str	r1, [sp, #52]	; 0x34
   18cf4:	strd	r2, [sp, #24]
   18cf8:	strd	r2, [sp, #32]
   18cfc:	strd	r2, [sp, #40]	; 0x28
   18d00:	beq	18d24 <fputs@plt+0xf968>
   18d04:	ldr	r3, [r4]
   18d08:	mov	r0, r4
   18d0c:	add	r1, sp, #8
   18d10:	ldr	r3, [r3, #80]	; 0x50
   18d14:	blx	r3
   18d18:	ldr	r4, [r4, #8]
   18d1c:	cmp	r4, #0
   18d20:	bne	18d04 <fputs@plt+0xf948>
   18d24:	movw	r4, #2696	; 0xa88
   18d28:	movt	r4, #3
   18d2c:	mov	r1, sp
   18d30:	movw	r0, #18808	; 0x4978
   18d34:	movt	r0, #2
   18d38:	bl	9f24 <fputs@plt+0xb68>
   18d3c:	ldr	r0, [r4]
   18d40:	add	r2, sp, #32
   18d44:	vldr	d0, [sp]
   18d48:	add	r1, sp, #16
   18d4c:	ldr	r3, [r0]
   18d50:	ldr	r3, [r3, #8]
   18d54:	blx	r3
   18d58:	mov	r0, r6
   18d5c:	bl	18be4 <fputs@plt+0xf828>
   18d60:	ldr	r0, [r4]
   18d64:	ldr	r3, [r0]
   18d68:	ldr	r3, [r3, #12]
   18d6c:	blx	r3
   18d70:	ldr	r2, [sp, #52]	; 0x34
   18d74:	ldr	r3, [r5]
   18d78:	cmp	r2, r3
   18d7c:	bne	18d88 <fputs@plt+0xf9cc>
   18d80:	add	sp, sp, #56	; 0x38
   18d84:	pop	{r4, r5, r6, pc}
   18d88:	bl	92b4 <__stack_chk_fail@plt>
   18d8c:	nop	{0}
   18d90:	bx	lr
   18d94:	mov	r0, #0
   18d98:	bx	lr
   18d9c:	vldr	d0, [r0, #72]	; 0x48
   18da0:	bx	lr
   18da4:	vldr	d0, [r0, #80]	; 0x50
   18da8:	bx	lr
   18dac:	add	r0, r0, #56	; 0x38
   18db0:	sub	sp, sp, #32
   18db4:	add	ip, sp, #32
   18db8:	ldm	r0, {r0, r1, r2, r3}
   18dbc:	stmdb	ip, {r0, r1, r2, r3}
   18dc0:	vldr	d0, [sp, #16]
   18dc4:	vldr	d1, [sp, #24]
   18dc8:	add	sp, sp, #32
   18dcc:	bx	lr
   18dd0:	add	r0, r0, #56	; 0x38
   18dd4:	sub	sp, sp, #32
   18dd8:	add	ip, sp, #32
   18ddc:	ldm	r0, {r0, r1, r2, r3}
   18de0:	stmdb	ip, {r0, r1, r2, r3}
   18de4:	vldr	d0, [sp, #16]
   18de8:	vldr	d1, [sp, #24]
   18dec:	add	sp, sp, #32
   18df0:	bx	lr
   18df4:	vmov.f64	d7, #96	; 0x3f000000  0.5
   18df8:	vldr	d6, [r0, #80]	; 0x50
   18dfc:	vldr	d1, [r0, #64]	; 0x40
   18e00:	vldr	d0, [r0, #56]	; 0x38
   18e04:	sub	sp, sp, #32
   18e08:	vmla.f64	d1, d6, d7
   18e0c:	add	sp, sp, #32
   18e10:	bx	lr
   18e14:	vmov.f64	d7, #96	; 0x3f000000  0.5
   18e18:	vldr	d6, [r0, #80]	; 0x50
   18e1c:	vldr	d1, [r0, #64]	; 0x40
   18e20:	vldr	d0, [r0, #56]	; 0x38
   18e24:	sub	sp, sp, #32
   18e28:	vmls.f64	d1, d6, d7
   18e2c:	add	sp, sp, #32
   18e30:	bx	lr
   18e34:	vmov.f64	d7, #96	; 0x3f000000  0.5
   18e38:	vldr	d6, [r0, #72]	; 0x48
   18e3c:	vldr	d0, [r0, #56]	; 0x38
   18e40:	vldr	d1, [r0, #64]	; 0x40
   18e44:	sub	sp, sp, #32
   18e48:	vmla.f64	d0, d6, d7
   18e4c:	add	sp, sp, #32
   18e50:	bx	lr
   18e54:	vmov.f64	d7, #96	; 0x3f000000  0.5
   18e58:	vldr	d6, [r0, #72]	; 0x48
   18e5c:	vldr	d0, [r0, #56]	; 0x38
   18e60:	vldr	d1, [r0, #64]	; 0x40
   18e64:	sub	sp, sp, #32
   18e68:	vmls.f64	d0, d6, d7
   18e6c:	add	sp, sp, #32
   18e70:	bx	lr
   18e74:	vmov.f64	d7, #96	; 0x3f000000  0.5
   18e78:	vldr	d5, [r0, #80]	; 0x50
   18e7c:	vldr	d1, [r0, #64]	; 0x40
   18e80:	vldr	d6, [r0, #72]	; 0x48
   18e84:	vldr	d0, [r0, #56]	; 0x38
   18e88:	sub	sp, sp, #32
   18e8c:	vmla.f64	d1, d5, d7
   18e90:	vmla.f64	d0, d6, d7
   18e94:	add	sp, sp, #32
   18e98:	bx	lr
   18e9c:	vmov.f64	d7, #96	; 0x3f000000  0.5
   18ea0:	vldr	d5, [r0, #80]	; 0x50
   18ea4:	vldr	d1, [r0, #64]	; 0x40
   18ea8:	vldr	d6, [r0, #72]	; 0x48
   18eac:	vldr	d0, [r0, #56]	; 0x38
   18eb0:	sub	sp, sp, #32
   18eb4:	vmla.f64	d1, d5, d7
   18eb8:	vmls.f64	d0, d6, d7
   18ebc:	add	sp, sp, #32
   18ec0:	bx	lr
   18ec4:	vmov.f64	d7, #96	; 0x3f000000  0.5
   18ec8:	vldr	d5, [r0, #80]	; 0x50
   18ecc:	vldr	d1, [r0, #64]	; 0x40
   18ed0:	vldr	d6, [r0, #72]	; 0x48
   18ed4:	vldr	d0, [r0, #56]	; 0x38
   18ed8:	sub	sp, sp, #32
   18edc:	vmls.f64	d1, d5, d7
   18ee0:	vmla.f64	d0, d6, d7
   18ee4:	add	sp, sp, #32
   18ee8:	bx	lr
   18eec:	vmov.f64	d7, #96	; 0x3f000000  0.5
   18ef0:	vldr	d5, [r0, #80]	; 0x50
   18ef4:	vldr	d1, [r0, #64]	; 0x40
   18ef8:	vldr	d6, [r0, #72]	; 0x48
   18efc:	vldr	d0, [r0, #56]	; 0x38
   18f00:	sub	sp, sp, #32
   18f04:	vmls.f64	d1, d5, d7
   18f08:	vmls.f64	d0, d6, d7
   18f0c:	add	sp, sp, #32
   18f10:	bx	lr
   18f14:	mov	r0, #1
   18f18:	bx	lr
   18f1c:	mov	r0, #9
   18f20:	bx	lr
   18f24:	andeq	r0, r0, r0
   18f28:	vldr	d7, [pc, #40]	; 18f58 <fputs@plt+0xfb9c>
   18f2c:	vldr	d1, [r0, #80]	; 0x50
   18f30:	vldr	d5, [r0, #72]	; 0x48
   18f34:	vdiv.f64	d1, d1, d7
   18f38:	vldr	d6, [r0, #64]	; 0x40
   18f3c:	vldr	d0, [r0, #56]	; 0x38
   18f40:	sub	sp, sp, #32
   18f44:	vdiv.f64	d7, d5, d7
   18f48:	vadd.f64	d1, d1, d6
   18f4c:	vadd.f64	d0, d0, d7
   18f50:	add	sp, sp, #32
   18f54:	bx	lr
   18f58:	ldrbtvs	r3, [pc], -sp, asr #23
   18f5c:	mulmi	r6, lr, r0
   18f60:	vldr	d7, [pc, #40]	; 18f90 <fputs@plt+0xfbd4>
   18f64:	vldr	d1, [r0, #80]	; 0x50
   18f68:	vldr	d5, [r0, #72]	; 0x48
   18f6c:	vdiv.f64	d1, d1, d7
   18f70:	vldr	d6, [r0, #64]	; 0x40
   18f74:	vldr	d0, [r0, #56]	; 0x38
   18f78:	sub	sp, sp, #32
   18f7c:	vdiv.f64	d7, d5, d7
   18f80:	vadd.f64	d1, d1, d6
   18f84:	vsub.f64	d0, d0, d7
   18f88:	add	sp, sp, #32
   18f8c:	bx	lr
   18f90:	ldrbtvs	r3, [pc], -sp, asr #23
   18f94:	mulmi	r6, lr, r0
   18f98:	vldr	d7, [pc, #40]	; 18fc8 <fputs@plt+0xfc0c>
   18f9c:	vldr	d1, [r0, #80]	; 0x50
   18fa0:	vldr	d5, [r0, #72]	; 0x48
   18fa4:	vdiv.f64	d1, d1, d7
   18fa8:	vldr	d6, [r0, #64]	; 0x40
   18fac:	vldr	d0, [r0, #56]	; 0x38
   18fb0:	sub	sp, sp, #32
   18fb4:	vdiv.f64	d7, d5, d7
   18fb8:	vsub.f64	d1, d6, d1
   18fbc:	vadd.f64	d0, d0, d7
   18fc0:	add	sp, sp, #32
   18fc4:	bx	lr
   18fc8:	ldrbtvs	r3, [pc], -sp, asr #23
   18fcc:	mulmi	r6, lr, r0
   18fd0:	vldr	d7, [pc, #40]	; 19000 <fputs@plt+0xfc44>
   18fd4:	vldr	d1, [r0, #80]	; 0x50
   18fd8:	vldr	d5, [r0, #72]	; 0x48
   18fdc:	vdiv.f64	d1, d1, d7
   18fe0:	vldr	d6, [r0, #64]	; 0x40
   18fe4:	vldr	d0, [r0, #56]	; 0x38
   18fe8:	sub	sp, sp, #32
   18fec:	vdiv.f64	d7, d5, d7
   18ff0:	vsub.f64	d1, d6, d1
   18ff4:	vsub.f64	d0, d0, d7
   18ff8:	add	sp, sp, #32
   18ffc:	bx	lr
   19000:	ldrbtvs	r3, [pc], -sp, asr #23
   19004:	mulmi	r6, lr, r0
   19008:	vmov.f64	d7, #96	; 0x3f000000  0.5
   1900c:	vldr	d0, [r0, #72]	; 0x48
   19010:	vmul.f64	d0, d0, d7
   19014:	bx	lr
   19018:	mov	r0, #3
   1901c:	bx	lr
   19020:	mov	r0, #2
   19024:	bx	lr
   19028:	add	r0, r0, #72	; 0x48
   1902c:	sub	sp, sp, #32
   19030:	add	ip, sp, #32
   19034:	ldm	r0, {r0, r1, r2, r3}
   19038:	stmdb	ip, {r0, r1, r2, r3}
   1903c:	vldr	d0, [sp, #16]
   19040:	vldr	d1, [sp, #24]
   19044:	add	sp, sp, #32
   19048:	bx	lr
   1904c:	mov	r0, #8
   19050:	bx	lr
   19054:	add	r0, r0, #88	; 0x58
   19058:	sub	sp, sp, #32
   1905c:	add	ip, sp, #32
   19060:	ldm	r0, {r0, r1, r2, r3}
   19064:	stmdb	ip, {r0, r1, r2, r3}
   19068:	vldr	d0, [sp, #16]
   1906c:	vldr	d1, [sp, #24]
   19070:	add	sp, sp, #32
   19074:	bx	lr
   19078:	add	r0, r0, #104	; 0x68
   1907c:	sub	sp, sp, #32
   19080:	add	ip, sp, #32
   19084:	ldm	r0, {r0, r1, r2, r3}
   19088:	stmdb	ip, {r0, r1, r2, r3}
   1908c:	vldr	d0, [sp, #16]
   19090:	vldr	d1, [sp, #24]
   19094:	add	sp, sp, #32
   19098:	bx	lr
   1909c:	add	r0, r0, #88	; 0x58
   190a0:	sub	sp, sp, #32
   190a4:	add	ip, sp, #32
   190a8:	ldm	r0, {r0, r1, r2, r3}
   190ac:	stmdb	ip, {r0, r1, r2, r3}
   190b0:	vldr	d0, [sp, #16]
   190b4:	vldr	d1, [sp, #24]
   190b8:	add	sp, sp, #32
   190bc:	bx	lr
   190c0:	vmov.f64	d7, #96	; 0x3f000000  0.5
   190c4:	vldr	d1, [r0, #96]	; 0x60
   190c8:	vldr	d5, [r0, #112]	; 0x70
   190cc:	vldr	d0, [r0, #88]	; 0x58
   190d0:	vldr	d6, [r0, #104]	; 0x68
   190d4:	sub	sp, sp, #32
   190d8:	vadd.f64	d1, d1, d5
   190dc:	vadd.f64	d0, d0, d6
   190e0:	vmul.f64	d1, d1, d7
   190e4:	vmul.f64	d0, d0, d7
   190e8:	add	sp, sp, #32
   190ec:	bx	lr
   190f0:	vldr	d6, [r0, #112]	; 0x70
   190f4:	vldr	d7, [r0, #96]	; 0x60
   190f8:	vsub.f64	d7, d6, d7
   190fc:	sub	sp, sp, #32
   19100:	add	ip, sp, #32
   19104:	vcmpe.f64	d7, #0.0
   19108:	vmrs	APSR_nzcv, fpscr
   1910c:	addgt	r0, r0, #104	; 0x68
   19110:	addle	r0, r0, #88	; 0x58
   19114:	ldm	r0, {r0, r1, r2, r3}
   19118:	stmdb	ip, {r0, r1, r2, r3}
   1911c:	vldr	d0, [sp, #16]
   19120:	vldr	d1, [sp, #24]
   19124:	add	sp, sp, #32
   19128:	bx	lr
   1912c:	vldr	d6, [r0, #112]	; 0x70
   19130:	vldr	d7, [r0, #96]	; 0x60
   19134:	vsub.f64	d7, d6, d7
   19138:	sub	sp, sp, #32
   1913c:	add	ip, sp, #32
   19140:	vcmpe.f64	d7, #0.0
   19144:	vmrs	APSR_nzcv, fpscr
   19148:	addmi	r0, r0, #104	; 0x68
   1914c:	addpl	r0, r0, #88	; 0x58
   19150:	ldm	r0, {r0, r1, r2, r3}
   19154:	stmdb	ip, {r0, r1, r2, r3}
   19158:	vldr	d0, [sp, #16]
   1915c:	vldr	d1, [sp, #24]
   19160:	add	sp, sp, #32
   19164:	bx	lr
   19168:	vldr	d6, [r0, #104]	; 0x68
   1916c:	vldr	d7, [r0, #88]	; 0x58
   19170:	vsub.f64	d7, d6, d7
   19174:	sub	sp, sp, #32
   19178:	add	ip, sp, #32
   1917c:	vcmpe.f64	d7, #0.0
   19180:	vmrs	APSR_nzcv, fpscr
   19184:	addgt	r0, r0, #104	; 0x68
   19188:	addle	r0, r0, #88	; 0x58
   1918c:	ldm	r0, {r0, r1, r2, r3}
   19190:	stmdb	ip, {r0, r1, r2, r3}
   19194:	vldr	d0, [sp, #16]
   19198:	vldr	d1, [sp, #24]
   1919c:	add	sp, sp, #32
   191a0:	bx	lr
   191a4:	vldr	d6, [r0, #104]	; 0x68
   191a8:	vldr	d7, [r0, #88]	; 0x58
   191ac:	vsub.f64	d7, d6, d7
   191b0:	sub	sp, sp, #32
   191b4:	add	ip, sp, #32
   191b8:	vcmpe.f64	d7, #0.0
   191bc:	vmrs	APSR_nzcv, fpscr
   191c0:	addmi	r0, r0, #104	; 0x68
   191c4:	addpl	r0, r0, #88	; 0x58
   191c8:	ldm	r0, {r0, r1, r2, r3}
   191cc:	stmdb	ip, {r0, r1, r2, r3}
   191d0:	vldr	d0, [sp, #16]
   191d4:	vldr	d1, [sp, #24]
   191d8:	add	sp, sp, #32
   191dc:	bx	lr
   191e0:	mov	r0, #6
   191e4:	bx	lr
   191e8:	mov	r0, #7
   191ec:	bx	lr
   191f0:	mov	r0, #5
   191f4:	bx	lr
   191f8:	add	r0, r0, #128	; 0x80
   191fc:	sub	sp, sp, #32
   19200:	add	ip, sp, #32
   19204:	ldm	r0, {r0, r1, r2, r3}
   19208:	stmdb	ip, {r0, r1, r2, r3}
   1920c:	vldr	d0, [sp, #16]
   19210:	vldr	d1, [sp, #24]
   19214:	add	sp, sp, #32
   19218:	bx	lr
   1921c:	add	r0, r0, #128	; 0x80
   19220:	sub	sp, sp, #32
   19224:	add	ip, sp, #32
   19228:	ldm	r0, {r0, r1, r2, r3}
   1922c:	stmdb	ip, {r0, r1, r2, r3}
   19230:	vldr	d0, [sp, #16]
   19234:	vldr	d1, [sp, #24]
   19238:	add	sp, sp, #32
   1923c:	bx	lr
   19240:	vldr	d0, [r0, #144]	; 0x90
   19244:	bx	lr
   19248:	mov	r0, #4
   1924c:	bx	lr
   19250:	ldr	r3, [pc, #4]	; 1925c <fputs@plt+0xfea0>
   19254:	str	r3, [r0]
   19258:	bx	lr
   1925c:	andeq	r5, r2, r8, lsr #16
   19260:	ldr	r3, [pc, #20]	; 1927c <fputs@plt+0xfec0>
   19264:	push	{r4, lr}
   19268:	mov	r4, r0
   1926c:	str	r3, [r0]
   19270:	bl	14884 <fputs@plt+0xb4c8>
   19274:	mov	r0, r4
   19278:	pop	{r4, pc}
   1927c:	andeq	r5, r2, r8, lsr sl
   19280:	ldr	r3, [pc, #20]	; 1929c <fputs@plt+0xfee0>
   19284:	push	{r4, lr}
   19288:	mov	r4, r0
   1928c:	str	r3, [r0]
   19290:	bl	14884 <fputs@plt+0xb4c8>
   19294:	mov	r0, r4
   19298:	pop	{r4, pc}
   1929c:	andeq	r5, r2, r8, lsr sl
   192a0:	ldr	r3, [pc, #20]	; 192bc <fputs@plt+0xff00>
   192a4:	push	{r4, lr}
   192a8:	mov	r4, r0
   192ac:	str	r3, [r0]
   192b0:	bl	14884 <fputs@plt+0xb4c8>
   192b4:	mov	r0, r4
   192b8:	pop	{r4, pc}
   192bc:	andeq	r5, r2, r8, lsr sl
   192c0:	ldr	r3, [pc, #20]	; 192dc <fputs@plt+0xff20>
   192c4:	push	{r4, lr}
   192c8:	mov	r4, r0
   192cc:	str	r3, [r0]
   192d0:	bl	14884 <fputs@plt+0xb4c8>
   192d4:	mov	r0, r4
   192d8:	pop	{r4, pc}
   192dc:	andeq	r5, r2, r8, lsr sl
   192e0:	ldr	r3, [pc, #20]	; 192fc <fputs@plt+0xff40>
   192e4:	push	{r4, lr}
   192e8:	mov	r4, r0
   192ec:	str	r3, [r0]
   192f0:	bl	14884 <fputs@plt+0xb4c8>
   192f4:	mov	r0, r4
   192f8:	pop	{r4, pc}
   192fc:	andeq	r5, r2, r8, lsr sl
   19300:	ldr	r3, [pc, #20]	; 1931c <fputs@plt+0xff60>
   19304:	push	{r4, lr}
   19308:	mov	r4, r0
   1930c:	str	r3, [r0]
   19310:	bl	14884 <fputs@plt+0xb4c8>
   19314:	mov	r0, r4
   19318:	pop	{r4, pc}
   1931c:	andeq	r5, r2, r8, lsr sl
   19320:	ldr	r3, [pc, #20]	; 1933c <fputs@plt+0xff80>
   19324:	push	{r4, lr}
   19328:	mov	r4, r0
   1932c:	str	r3, [r0]
   19330:	bl	14884 <fputs@plt+0xb4c8>
   19334:	mov	r0, r4
   19338:	pop	{r4, pc}
   1933c:	muleq	r2, r0, ip
   19340:	ldr	r3, [pc, #20]	; 1935c <fputs@plt+0xffa0>
   19344:	push	{r4, lr}
   19348:	mov	r4, r0
   1934c:	str	r3, [r0]
   19350:	bl	14884 <fputs@plt+0xb4c8>
   19354:	mov	r0, r4
   19358:	pop	{r4, pc}
   1935c:	muleq	r2, r0, ip
   19360:	ldr	r3, [pc, #20]	; 1937c <fputs@plt+0xffc0>
   19364:	push	{r4, lr}
   19368:	mov	r4, r0
   1936c:	str	r3, [r0]
   19370:	bl	14884 <fputs@plt+0xb4c8>
   19374:	mov	r0, r4
   19378:	pop	{r4, pc}
   1937c:	andeq	r5, r2, r0, lsl #27
   19380:	ldr	r3, [pc, #20]	; 1939c <fputs@plt+0xffe0>
   19384:	push	{r4, lr}
   19388:	mov	r4, r0
   1938c:	str	r3, [r0]
   19390:	bl	148f0 <fputs@plt+0xb534>
   19394:	mov	r0, r4
   19398:	pop	{r4, pc}
   1939c:	andeq	r5, r2, r0, ror lr
   193a0:	ldr	r3, [pc, #20]	; 193bc <fputs@plt+0x10000>
   193a4:	push	{r4, lr}
   193a8:	mov	r4, r0
   193ac:	str	r3, [r0]
   193b0:	bl	148f0 <fputs@plt+0xb534>
   193b4:	mov	r0, r4
   193b8:	pop	{r4, pc}
   193bc:			; <UNDEFINED> instruction: 0x000257b0
   193c0:	ldr	r3, [pc, #20]	; 193dc <fputs@plt+0x10020>
   193c4:	push	{r4, lr}
   193c8:	mov	r4, r0
   193cc:	str	r3, [r0]
   193d0:	bl	209f0 <_ZdlPv@@Base>
   193d4:	mov	r0, r4
   193d8:	pop	{r4, pc}
   193dc:	andeq	r5, r2, r8, lsr #16
   193e0:	ldr	r3, [pc, #28]	; 19404 <fputs@plt+0x10048>
   193e4:	push	{r4, lr}
   193e8:	mov	r4, r0
   193ec:	str	r3, [r0]
   193f0:	bl	14884 <fputs@plt+0xb4c8>
   193f4:	mov	r0, r4
   193f8:	bl	209f0 <_ZdlPv@@Base>
   193fc:	mov	r0, r4
   19400:	pop	{r4, pc}
   19404:	andeq	r5, r2, r8, lsr sl
   19408:	ldr	r3, [pc, #28]	; 1942c <fputs@plt+0x10070>
   1940c:	push	{r4, lr}
   19410:	mov	r4, r0
   19414:	str	r3, [r0]
   19418:	bl	14884 <fputs@plt+0xb4c8>
   1941c:	mov	r0, r4
   19420:	bl	209f0 <_ZdlPv@@Base>
   19424:	mov	r0, r4
   19428:	pop	{r4, pc}
   1942c:	andeq	r5, r2, r8, lsr sl
   19430:	ldr	r3, [pc, #28]	; 19454 <fputs@plt+0x10098>
   19434:	push	{r4, lr}
   19438:	mov	r4, r0
   1943c:	str	r3, [r0]
   19440:	bl	14884 <fputs@plt+0xb4c8>
   19444:	mov	r0, r4
   19448:	bl	209f0 <_ZdlPv@@Base>
   1944c:	mov	r0, r4
   19450:	pop	{r4, pc}
   19454:	andeq	r5, r2, r8, lsr sl
   19458:	ldr	r3, [pc, #28]	; 1947c <fputs@plt+0x100c0>
   1945c:	push	{r4, lr}
   19460:	mov	r4, r0
   19464:	str	r3, [r0]
   19468:	bl	14884 <fputs@plt+0xb4c8>
   1946c:	mov	r0, r4
   19470:	bl	209f0 <_ZdlPv@@Base>
   19474:	mov	r0, r4
   19478:	pop	{r4, pc}
   1947c:	andeq	r5, r2, r8, lsr sl
   19480:	ldr	r3, [pc, #28]	; 194a4 <fputs@plt+0x100e8>
   19484:	push	{r4, lr}
   19488:	mov	r4, r0
   1948c:	str	r3, [r0]
   19490:	bl	14884 <fputs@plt+0xb4c8>
   19494:	mov	r0, r4
   19498:	bl	209f0 <_ZdlPv@@Base>
   1949c:	mov	r0, r4
   194a0:	pop	{r4, pc}
   194a4:	andeq	r5, r2, r8, lsr sl
   194a8:	ldr	r3, [pc, #28]	; 194cc <fputs@plt+0x10110>
   194ac:	push	{r4, lr}
   194b0:	mov	r4, r0
   194b4:	str	r3, [r0]
   194b8:	bl	14884 <fputs@plt+0xb4c8>
   194bc:	mov	r0, r4
   194c0:	bl	209f0 <_ZdlPv@@Base>
   194c4:	mov	r0, r4
   194c8:	pop	{r4, pc}
   194cc:	andeq	r5, r2, r8, lsr sl
   194d0:	ldr	r3, [pc, #28]	; 194f4 <fputs@plt+0x10138>
   194d4:	push	{r4, lr}
   194d8:	mov	r4, r0
   194dc:	str	r3, [r0]
   194e0:	bl	14884 <fputs@plt+0xb4c8>
   194e4:	mov	r0, r4
   194e8:	bl	209f0 <_ZdlPv@@Base>
   194ec:	mov	r0, r4
   194f0:	pop	{r4, pc}
   194f4:	muleq	r2, r0, ip
   194f8:	ldr	r3, [pc, #28]	; 1951c <fputs@plt+0x10160>
   194fc:	push	{r4, lr}
   19500:	mov	r4, r0
   19504:	str	r3, [r0]
   19508:	bl	148f0 <fputs@plt+0xb534>
   1950c:	mov	r0, r4
   19510:	bl	209f0 <_ZdlPv@@Base>
   19514:	mov	r0, r4
   19518:	pop	{r4, pc}
   1951c:	andeq	r5, r2, r0, ror lr
   19520:	ldr	r3, [pc, #28]	; 19544 <fputs@plt+0x10188>
   19524:	push	{r4, lr}
   19528:	mov	r4, r0
   1952c:	str	r3, [r0]
   19530:	bl	148f0 <fputs@plt+0xb534>
   19534:	mov	r0, r4
   19538:	bl	209f0 <_ZdlPv@@Base>
   1953c:	mov	r0, r4
   19540:	pop	{r4, pc}
   19544:			; <UNDEFINED> instruction: 0x000257b0
   19548:	ldr	r3, [pc, #28]	; 1956c <fputs@plt+0x101b0>
   1954c:	push	{r4, lr}
   19550:	mov	r4, r0
   19554:	str	r3, [r0]
   19558:	bl	14884 <fputs@plt+0xb4c8>
   1955c:	mov	r0, r4
   19560:	bl	209f0 <_ZdlPv@@Base>
   19564:	mov	r0, r4
   19568:	pop	{r4, pc}
   1956c:	muleq	r2, r0, ip
   19570:	ldr	r3, [pc, #28]	; 19594 <fputs@plt+0x101d8>
   19574:	push	{r4, lr}
   19578:	mov	r4, r0
   1957c:	str	r3, [r0]
   19580:	bl	14884 <fputs@plt+0xb4c8>
   19584:	mov	r0, r4
   19588:	bl	209f0 <_ZdlPv@@Base>
   1958c:	mov	r0, r4
   19590:	pop	{r4, pc}
   19594:	andeq	r5, r2, r0, lsl #27
   19598:	push	{r4, r5, r6, r7, r8, lr}
   1959c:	vpush	{d8-d11}
   195a0:	movw	r4, #1424	; 0x590
   195a4:	movt	r4, #3
   195a8:	vmov.f64	d11, d1
   195ac:	sub	sp, sp, #152	; 0x98
   195b0:	mov	r5, r1
   195b4:	ldr	r3, [r4]
   195b8:	mov	r6, r0
   195bc:	add	r1, sp, #8
   195c0:	add	r0, sp, #16
   195c4:	vmov.f64	d8, d0
   195c8:	mov	r7, r2
   195cc:	str	r3, [sp, #148]	; 0x94
   195d0:	mov	r8, #1
   195d4:	vmov.f64	d0, d2
   195d8:	bl	9170 <sincos@plt>
   195dc:	add	r0, sp, #16
   195e0:	add	r1, sp, #8
   195e4:	vldr	d9, [sp, #8]
   195e8:	vldr	d10, [sp, #16]
   195ec:	vmov.f64	d0, d11
   195f0:	bl	9170 <sincos@plt>
   195f4:	mov	lr, r7
   195f8:	ldm	lr!, {r0, r1, r2, r3}
   195fc:	vldr	d1, [sp, #16]
   19600:	add	ip, sp, #120	; 0x78
   19604:	vldr	d0, [sp, #8]
   19608:	ldr	r7, [r6]
   1960c:	stmia	ip!, {r0, r1, r2, r3}
   19610:	ldm	lr, {r0, r1}
   19614:	ldr	r7, [r7, #36]	; 0x24
   19618:	str	r8, [sp, #120]	; 0x78
   1961c:	stm	ip, {r0, r1}
   19620:	add	r0, sp, #24
   19624:	bl	1504c <fputs@plt+0xbc90>
   19628:	vmov.f64	d0, d8
   1962c:	add	r0, sp, #24
   19630:	bl	151c8 <fputs@plt+0xbe0c>
   19634:	add	r1, sp, #40	; 0x28
   19638:	mov	r0, r5
   1963c:	vstr	d1, [sp, #48]	; 0x30
   19640:	vstr	d0, [sp, #40]	; 0x28
   19644:	bl	15164 <fputs@plt+0xbda8>
   19648:	add	r0, sp, #72	; 0x48
   1964c:	vstr	d1, [sp, #64]	; 0x40
   19650:	vstr	d0, [sp, #56]	; 0x38
   19654:	vmov.f64	d1, d10
   19658:	vmov.f64	d0, d9
   1965c:	bl	1504c <fputs@plt+0xbc90>
   19660:	add	r0, sp, #72	; 0x48
   19664:	vmov.f64	d0, d8
   19668:	bl	151c8 <fputs@plt+0xbe0c>
   1966c:	mov	r0, r5
   19670:	add	r1, sp, #88	; 0x58
   19674:	vstr	d1, [sp, #96]	; 0x60
   19678:	vstr	d0, [sp, #88]	; 0x58
   1967c:	bl	15164 <fputs@plt+0xbda8>
   19680:	mov	r2, r5
   19684:	add	r3, sp, #120	; 0x78
   19688:	mov	r0, r6
   1968c:	str	r3, [sp]
   19690:	add	r1, sp, #56	; 0x38
   19694:	add	r3, sp, #104	; 0x68
   19698:	vstr	d1, [sp, #112]	; 0x70
   1969c:	vstr	d0, [sp, #104]	; 0x68
   196a0:	blx	r7
   196a4:	ldr	r2, [sp, #148]	; 0x94
   196a8:	ldr	r3, [r4]
   196ac:	cmp	r2, r3
   196b0:	bne	196c0 <fputs@plt+0x10304>
   196b4:	add	sp, sp, #152	; 0x98
   196b8:	vpop	{d8-d11}
   196bc:	pop	{r4, r5, r6, r7, r8, pc}
   196c0:	bl	92b4 <__stack_chk_fail@plt>
   196c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   196c8:	vpush	{d8-d11}
   196cc:	movw	r9, #1424	; 0x590
   196d0:	movt	r9, #3
   196d4:	ldr	r3, [r2]
   196d8:	mov	r6, r2
   196dc:	sub	sp, sp, #36	; 0x24
   196e0:	ldr	r2, [r9]
   196e4:	cmp	r3, #3
   196e8:	mov	r5, r0
   196ec:	mov	r8, r1
   196f0:	vmov.f64	d9, d0
   196f4:	str	r2, [sp, #28]
   196f8:	beq	1970c <fputs@plt+0x10350>
   196fc:	movw	r1, #25192	; 0x6268
   19700:	mov	r0, #29
   19704:	movt	r1, #2
   19708:	bl	1eec8 <fputs@plt+0x15b0c>
   1970c:	vldr	d8, [r6, #8]
   19710:	vdiv.f64	d8, d8, d9
   19714:	mov	lr, r6
   19718:	vldr	d7, [pc, #296]	; 19848 <fputs@plt+0x1048c>
   1971c:	ldm	lr!, {r0, r1, r2, r3}
   19720:	mov	ip, sp
   19724:	mov	r4, #1
   19728:	stmia	ip!, {r0, r1, r2, r3}
   1972c:	ldm	lr, {r0, r1}
   19730:	str	r4, [sp]
   19734:	stm	ip, {r0, r1}
   19738:	vcmpe.f64	d8, d7
   1973c:	vmrs	APSR_nzcv, fpscr
   19740:	blt	197c4 <fputs@plt+0x10408>
   19744:	vldr	d11, [pc, #260]	; 19850 <fputs@plt+0x10494>
   19748:	vcmpe.f64	d8, d11
   1974c:	vmrs	APSR_nzcv, fpscr
   19750:	vsubmi.f64	d11, d11, d8
   19754:	movmi	r7, #4
   19758:	bpl	19804 <fputs@plt+0x10448>
   1975c:	mov	r4, #0
   19760:	vmov.f64	d10, #96	; 0x3f000000  0.5
   19764:	vmul.f64	d10, d8, d10
   19768:	vadd.f64	d11, d8, d11
   1976c:	vmov	s13, r4
   19770:	ldr	r3, [r5]
   19774:	add	r4, r4, #1
   19778:	mov	r0, r5
   1977c:	mov	r1, r8
   19780:	mov	r2, r6
   19784:	ldr	r3, [r3, #88]	; 0x58
   19788:	vcvt.f64.s32	d7, s13
   1978c:	vmov.f64	d1, d10
   19790:	vnmls.f64	d1, d7, d11
   19794:	vmov.f64	d0, d9
   19798:	vadd.f64	d2, d1, d8
   1979c:	blx	r3
   197a0:	cmp	r4, r7
   197a4:	blt	1976c <fputs@plt+0x103b0>
   197a8:	ldr	r2, [sp, #28]
   197ac:	ldr	r3, [r9]
   197b0:	cmp	r2, r3
   197b4:	bne	19840 <fputs@plt+0x10484>
   197b8:	add	sp, sp, #36	; 0x24
   197bc:	vpop	{d8-d11}
   197c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   197c4:	vmov.f64	d7, #16	; 0x40800000  4.0
   197c8:	vldr	d0, [pc, #136]	; 19858 <fputs@plt+0x1049c>
   197cc:	vmul.f64	d7, d8, d7
   197d0:	vdiv.f64	d0, d0, d7
   197d4:	bl	93b0 <ceil@plt>
   197d8:	vldr	d7, [pc, #128]	; 19860 <fputs@plt+0x104a4>
   197dc:	vcvt.s32.f64	s0, d0
   197e0:	vmov	r3, s0
   197e4:	lsl	r7, r3, #2
   197e8:	cmp	r7, #0
   197ec:	vmov	s13, r7
   197f0:	vcvt.f64.s32	d11, s13
   197f4:	vdiv.f64	d11, d7, d11
   197f8:	vsub.f64	d11, d11, d8
   197fc:	bgt	1975c <fputs@plt+0x103a0>
   19800:	b	197a8 <fputs@plt+0x103ec>
   19804:	vldr	d11, [pc, #76]	; 19858 <fputs@plt+0x1049c>
   19808:	vcmpe.f64	d8, d11
   1980c:	vmrs	APSR_nzcv, fpscr
   19810:	vsubmi.f64	d11, d11, d8
   19814:	movmi	r7, #2
   19818:	bmi	1975c <fputs@plt+0x103a0>
   1981c:	ldr	r3, [r5]
   19820:	mov	r1, r8
   19824:	vmov.f64	d0, d9
   19828:	mov	r2, sp
   1982c:	mov	r0, r5
   19830:	ldr	r3, [r3, #16]
   19834:	vmov.f64	d1, #240	; 0xbf800000 -1.0
   19838:	blx	r3
   1983c:	b	197a8 <fputs@plt+0x103ec>
   19840:	bl	92b4 <__stack_chk_fail@plt>
   19844:	nop	{0}
   19848:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1984c:	svccc	0x00e921fb
   19850:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   19854:	svccc	0x00f921fb
   19858:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1985c:	strdmi	r2, [r9], -fp
   19860:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   19864:			; <UNDEFINED> instruction: 0x401921fb
   19868:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1986c:	vpush	{d8-d10}
   19870:	movw	sl, #1424	; 0x590
   19874:	movt	sl, #3
   19878:	ldr	r3, [r2]
   1987c:	mov	r7, r2
   19880:	sub	sp, sp, #72	; 0x48
   19884:	ldr	r2, [sl]
   19888:	cmp	r3, #2
   1988c:	mov	r5, r0
   19890:	mov	r9, r1
   19894:	vmov.f64	d9, d0
   19898:	str	r2, [sp, #68]	; 0x44
   1989c:	beq	198b0 <fputs@plt+0x104f4>
   198a0:	movw	r1, #25192	; 0x6268
   198a4:	mov	r0, #64	; 0x40
   198a8:	movt	r1, #2
   198ac:	bl	1eec8 <fputs@plt+0x15b0c>
   198b0:	vldr	d7, [r7, #8]
   198b4:	vdiv.f64	d7, d7, d9
   198b8:	vldr	d6, [pc, #232]	; 199a8 <fputs@plt+0x105ec>
   198bc:	vcmpe.f64	d7, d6
   198c0:	vmrs	APSR_nzcv, fpscr
   198c4:	blt	19970 <fputs@plt+0x105b4>
   198c8:	mov	r8, #2
   198cc:	vldr	d10, [pc, #220]	; 199b0 <fputs@plt+0x105f4>
   198d0:	vldr	d1, [pc, #224]	; 199b8 <fputs@plt+0x105fc>
   198d4:	vmov.f64	d0, #112	; 0x3f800000  1.0
   198d8:	mov	r4, #0
   198dc:	vmov.f64	d8, d1
   198e0:	b	198fc <fputs@plt+0x10540>
   198e4:	vmov.f64	d0, d8
   198e8:	add	r0, sp, #8
   198ec:	mov	r1, sp
   198f0:	bl	9170 <sincos@plt>
   198f4:	vldr	d0, [sp]
   198f8:	vldr	d1, [sp, #8]
   198fc:	ldr	r3, [r5]
   19900:	add	r0, sp, #16
   19904:	add	r4, r4, #1
   19908:	ldr	r6, [r3, #84]	; 0x54
   1990c:	bl	1504c <fputs@plt+0xbc90>
   19910:	vmov.f64	d0, d9
   19914:	add	r0, sp, #16
   19918:	bl	151c8 <fputs@plt+0xbe0c>
   1991c:	mov	r0, r9
   19920:	add	r1, sp, #32
   19924:	vstr	d1, [sp, #40]	; 0x28
   19928:	vstr	d0, [sp, #32]
   1992c:	bl	15164 <fputs@plt+0xbda8>
   19930:	mov	r0, r5
   19934:	add	r1, sp, #48	; 0x30
   19938:	mov	r2, r7
   1993c:	vstr	d0, [sp, #48]	; 0x30
   19940:	vstr	d1, [sp, #56]	; 0x38
   19944:	blx	r6
   19948:	cmp	r4, r8
   1994c:	vadd.f64	d8, d8, d10
   19950:	blt	198e4 <fputs@plt+0x10528>
   19954:	ldr	r2, [sp, #68]	; 0x44
   19958:	ldr	r3, [sl]
   1995c:	cmp	r2, r3
   19960:	bne	199a4 <fputs@plt+0x105e8>
   19964:	add	sp, sp, #72	; 0x48
   19968:	vpop	{d8-d10}
   1996c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19970:	vadd.f64	d7, d7, d7
   19974:	vldr	d6, [pc, #52]	; 199b0 <fputs@plt+0x105f4>
   19978:	vldr	d10, [pc, #64]	; 199c0 <fputs@plt+0x10604>
   1997c:	vdiv.f64	d7, d6, d7
   19980:	vcvt.s32.f64	s14, d7
   19984:	vmov	r3, s14
   19988:	lsl	r8, r3, #2
   1998c:	cmp	r8, #0
   19990:	vmov	s13, r8
   19994:	vcvt.f64.s32	d7, s13
   19998:	vdiv.f64	d10, d10, d7
   1999c:	bgt	198d0 <fputs@plt+0x10514>
   199a0:	b	19954 <fputs@plt+0x10598>
   199a4:	bl	92b4 <__stack_chk_fail@plt>
   199a8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   199ac:	svccc	0x00f921fb
   199b0:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   199b4:	strdmi	r2, [r9], -fp
	...
   199c0:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   199c4:			; <UNDEFINED> instruction: 0x401921fb
   199c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   199cc:	vpush	{d8-d14}
   199d0:	sub	sp, sp, #128	; 0x80
   199d4:	movw	r7, #1424	; 0x590
   199d8:	movt	r7, #3
   199dc:	ldr	r8, [sp, #220]	; 0xdc
   199e0:	mov	r5, r2
   199e4:	mov	r6, r3
   199e8:	ldr	r3, [r7]
   199ec:	mov	r9, r0
   199f0:	mov	sl, r1
   199f4:	ldr	r2, [r8]
   199f8:	ldr	r4, [sp, #216]	; 0xd8
   199fc:	cmp	r2, #1
   19a00:	str	r3, [sp, #124]	; 0x7c
   19a04:	beq	19a18 <fputs@plt+0x1065c>
   19a08:	movw	r1, #25192	; 0x6268
   19a0c:	mov	r0, #87	; 0x57
   19a10:	movt	r1, #2
   19a14:	bl	1eec8 <fputs@plt+0x15b0c>
   19a18:	vldr	d7, [r4]
   19a1c:	vcmp.f64	d7, #0.0
   19a20:	vmrs	APSR_nzcv, fpscr
   19a24:	beq	19ccc <fputs@plt+0x10910>
   19a28:	vldr	d7, [r4, #8]
   19a2c:	vcmp.f64	d7, #0.0
   19a30:	vmrs	APSR_nzcv, fpscr
   19a34:	beq	19ccc <fputs@plt+0x10910>
   19a38:	mov	r1, r6
   19a3c:	mov	r0, r5
   19a40:	bl	15164 <fputs@plt+0xbda8>
   19a44:	add	r0, sp, #104	; 0x68
   19a48:	vstr	d0, [sp, #104]	; 0x68
   19a4c:	vmov.f64	d0, #0	; 0x40000000  2.0
   19a50:	vstr	d1, [sp, #112]	; 0x70
   19a54:	bl	151ac <fputs@plt+0xbdf0>
   19a58:	vldr	d6, [r4, #8]
   19a5c:	vmov.f64	d7, d1
   19a60:	vstr	d0, [sp, #24]
   19a64:	vldr	d1, [r4]
   19a68:	vstr	d7, [sp, #32]
   19a6c:	vdiv.f64	d1, d0, d1
   19a70:	vdiv.f64	d0, d7, d6
   19a74:	bl	92cc <atan2@plt>
   19a78:	add	r0, sp, #16
   19a7c:	add	r1, sp, #8
   19a80:	bl	9170 <sincos@plt>
   19a84:	vldr	d6, [r4]
   19a88:	vldr	d7, [r4, #8]
   19a8c:	vldr	d0, [sp, #8]
   19a90:	vldr	d1, [sp, #16]
   19a94:	add	r0, sp, #40	; 0x28
   19a98:	vmul.f64	d0, d0, d6
   19a9c:	vmul.f64	d1, d1, d7
   19aa0:	bl	1504c <fputs@plt+0xbc90>
   19aa4:	vldr	d9, [r4, #8]
   19aa8:	vldr	d10, [r4]
   19aac:	vldr	d6, [sp, #40]	; 0x28
   19ab0:	vldr	d7, [sp, #48]	; 0x30
   19ab4:	vmul.f64	d9, d9, d9
   19ab8:	vmul.f64	d10, d10, d10
   19abc:	vmul.f64	d4, d9, d9
   19ac0:	vmul.f64	d3, d10, d10
   19ac4:	vmul.f64	d5, d6, d4
   19ac8:	vmul.f64	d2, d7, d3
   19acc:	vmul.f64	d5, d6, d5
   19ad0:	vmla.f64	d5, d7, d2
   19ad4:	vdiv.f64	d2, d5, d3
   19ad8:	vdiv.f64	d2, d2, d4
   19adc:	vmul.f64	d2, d2, d5
   19ae0:	vdiv.f64	d3, d2, d3
   19ae4:	vdiv.f64	d4, d3, d4
   19ae8:	vmul.f64	d0, d4, d5
   19aec:	vsqrt.f64	d8, d0
   19af0:	vcmp.f64	d8, d8
   19af4:	vsub.f64	d11, d10, d9
   19af8:	vmrs	APSR_nzcv, fpscr
   19afc:	bne	19d38 <fputs@plt+0x1097c>
   19b00:	add	r0, sp, #56	; 0x38
   19b04:	vmul.f64	d5, d6, d11
   19b08:	vnmul.f64	d11, d11, d7
   19b0c:	vdiv.f64	d5, d5, d10
   19b10:	vdiv.f64	d11, d11, d9
   19b14:	vmul.f64	d5, d6, d5
   19b18:	vmul.f64	d11, d7, d11
   19b1c:	vdiv.f64	d0, d5, d10
   19b20:	vdiv.f64	d1, d11, d9
   19b24:	vmul.f64	d0, d6, d0
   19b28:	vmul.f64	d1, d7, d1
   19b2c:	bl	1504c <fputs@plt+0xbc90>
   19b30:	vldr	d6, [sp, #64]	; 0x40
   19b34:	vldr	d7, [sp, #56]	; 0x38
   19b38:	vldr	d0, [r5, #8]
   19b3c:	vldr	d1, [r5]
   19b40:	vsub.f64	d0, d0, d6
   19b44:	vsub.f64	d1, d1, d7
   19b48:	bl	92cc <atan2@plt>
   19b4c:	add	r0, sp, #16
   19b50:	add	r1, sp, #8
   19b54:	vmov.f64	d13, d0
   19b58:	bl	9170 <sincos@plt>
   19b5c:	vldr	d7, [sp, #56]	; 0x38
   19b60:	vldr	d6, [sp, #64]	; 0x40
   19b64:	vldr	d0, [r6, #8]
   19b68:	vldr	d1, [r6]
   19b6c:	vldr	d9, [sp, #8]
   19b70:	vldr	d10, [sp, #16]
   19b74:	vsub.f64	d1, d1, d7
   19b78:	vsub.f64	d0, d0, d6
   19b7c:	bl	92cc <atan2@plt>
   19b80:	add	r1, sp, #8
   19b84:	add	r0, sp, #16
   19b88:	vmov.f64	d14, d0
   19b8c:	bl	9170 <sincos@plt>
   19b90:	add	r0, sp, #104	; 0x68
   19b94:	vldr	d12, [sp, #8]
   19b98:	vldr	d11, [sp, #16]
   19b9c:	vmul.f64	d0, d9, d8
   19ba0:	vmul.f64	d1, d10, d8
   19ba4:	bl	1504c <fputs@plt+0xbc90>
   19ba8:	add	r1, sp, #56	; 0x38
   19bac:	add	r0, sp, #104	; 0x68
   19bb0:	bl	15164 <fputs@plt+0xbda8>
   19bb4:	add	r0, sp, #104	; 0x68
   19bb8:	vstr	d0, [sp, #72]	; 0x48
   19bbc:	vstr	d1, [sp, #80]	; 0x50
   19bc0:	vmul.f64	d0, d12, d8
   19bc4:	vmul.f64	d1, d11, d8
   19bc8:	bl	1504c <fputs@plt+0xbc90>
   19bcc:	add	r0, sp, #104	; 0x68
   19bd0:	add	r1, sp, #56	; 0x38
   19bd4:	bl	15164 <fputs@plt+0xbda8>
   19bd8:	add	r1, sp, #72	; 0x48
   19bdc:	mov	r0, r5
   19be0:	vstr	d1, [sp, #96]	; 0x60
   19be4:	vstr	d0, [sp, #88]	; 0x58
   19be8:	bl	15188 <fputs@plt+0xbdcc>
   19bec:	add	r0, sp, #104	; 0x68
   19bf0:	vstr	d1, [sp, #112]	; 0x70
   19bf4:	vstr	d0, [sp, #104]	; 0x68
   19bf8:	bl	15200 <fputs@plt+0xbe44>
   19bfc:	mov	r0, r5
   19c00:	mov	r1, r5
   19c04:	vmov.f64	d9, d0
   19c08:	bl	151e4 <fputs@plt+0xbe28>
   19c0c:	vsqrt.f64	d7, d0
   19c10:	vcmp.f64	d7, d7
   19c14:	vmrs	APSR_nzcv, fpscr
   19c18:	bne	19d2c <fputs@plt+0x10970>
   19c1c:	add	r1, sp, #88	; 0x58
   19c20:	mov	r0, r6
   19c24:	vdiv.f64	d9, d9, d7
   19c28:	bl	15188 <fputs@plt+0xbdcc>
   19c2c:	add	r0, sp, #104	; 0x68
   19c30:	vstr	d1, [sp, #112]	; 0x70
   19c34:	vstr	d0, [sp, #104]	; 0x68
   19c38:	bl	15200 <fputs@plt+0xbe44>
   19c3c:	mov	r0, r6
   19c40:	mov	r1, r6
   19c44:	vmov.f64	d10, d0
   19c48:	bl	151e4 <fputs@plt+0xbe28>
   19c4c:	vsqrt.f64	d7, d0
   19c50:	vcmp.f64	d7, d7
   19c54:	vmrs	APSR_nzcv, fpscr
   19c58:	bne	19d20 <fputs@plt+0x10964>
   19c5c:	vldr	d6, [pc, #236]	; 19d50 <fputs@plt+0x10994>
   19c60:	vcmpe.f64	d9, d6
   19c64:	vmrs	APSR_nzcv, fpscr
   19c68:	bpl	19c7c <fputs@plt+0x108c0>
   19c6c:	vdiv.f64	d10, d10, d7
   19c70:	vcmpe.f64	d10, d6
   19c74:	vmrs	APSR_nzcv, fpscr
   19c78:	bmi	19ce0 <fputs@plt+0x10924>
   19c7c:	mov	r2, r5
   19c80:	mov	r0, r9
   19c84:	mov	r1, sl
   19c88:	add	r3, sp, #40	; 0x28
   19c8c:	str	r4, [sp]
   19c90:	str	r8, [sp, #4]
   19c94:	bl	199c8 <fputs@plt+0x1060c>
   19c98:	stm	sp, {r4, r8}
   19c9c:	mov	r0, r9
   19ca0:	mov	r1, sl
   19ca4:	add	r2, sp, #40	; 0x28
   19ca8:	mov	r3, r6
   19cac:	bl	199c8 <fputs@plt+0x1060c>
   19cb0:	ldr	r2, [sp, #124]	; 0x7c
   19cb4:	ldr	r3, [r7]
   19cb8:	cmp	r2, r3
   19cbc:	bne	19d1c <fputs@plt+0x10960>
   19cc0:	add	sp, sp, #128	; 0x80
   19cc4:	vpop	{d8-d14}
   19cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ccc:	movw	r1, #25192	; 0x6268
   19cd0:	mov	r0, #88	; 0x58
   19cd4:	movt	r1, #2
   19cd8:	bl	1eec8 <fputs@plt+0x15b0c>
   19cdc:	b	19a38 <fputs@plt+0x1067c>
   19ce0:	ldr	r3, [r9]
   19ce4:	add	r0, sp, #56	; 0x38
   19ce8:	mov	r1, sl
   19cec:	ldr	r4, [r3, #88]	; 0x58
   19cf0:	bl	15164 <fputs@plt+0xbda8>
   19cf4:	mov	r0, r9
   19cf8:	add	r1, sp, #104	; 0x68
   19cfc:	vmov.f64	d2, d14
   19d00:	mov	r2, r8
   19d04:	vstr	d0, [sp, #104]	; 0x68
   19d08:	vstr	d1, [sp, #112]	; 0x70
   19d0c:	vmov.f64	d0, d8
   19d10:	vmov.f64	d1, d13
   19d14:	blx	r4
   19d18:	b	19cb0 <fputs@plt+0x108f4>
   19d1c:	bl	92b4 <__stack_chk_fail@plt>
   19d20:	bl	91ac <sqrt@plt>
   19d24:	vmov.f64	d7, d0
   19d28:	b	19c5c <fputs@plt+0x108a0>
   19d2c:	bl	91ac <sqrt@plt>
   19d30:	vmov.f64	d7, d0
   19d34:	b	19c1c <fputs@plt+0x10860>
   19d38:	bl	91ac <sqrt@plt>
   19d3c:	vldr	d7, [sp, #48]	; 0x30
   19d40:	vldr	d6, [sp, #40]	; 0x28
   19d44:	vmov.f64	d8, d0
   19d48:	b	19b00 <fputs@plt+0x10744>
   19d4c:	nop	{0}
   19d50:	bl	72aa0c <stderr@@GLIBC_2.4+0x6fa43c>
   19d54:	svccc	0x001a36e2
   19d58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d5c:	vpush	{d8-d15}
   19d60:	movw	ip, #1424	; 0x590
   19d64:	sub	sp, sp, #196	; 0xc4
   19d68:	movt	ip, #3
   19d6c:	mov	r5, r3
   19d70:	ldr	r3, [r3]
   19d74:	str	r1, [sp, #40]	; 0x28
   19d78:	ldr	r1, [ip]
   19d7c:	cmp	r3, #3
   19d80:	str	ip, [sp, #44]	; 0x2c
   19d84:	str	r0, [sp, #36]	; 0x24
   19d88:	str	r2, [sp, #32]
   19d8c:	str	r1, [sp, #188]	; 0xbc
   19d90:	beq	19da4 <fputs@plt+0x109e8>
   19d94:	movw	r1, #25192	; 0x6268
   19d98:	mov	r0, #127	; 0x7f
   19d9c:	movt	r1, #2
   19da0:	bl	1eec8 <fputs@plt+0x15b0c>
   19da4:	ldr	ip, [sp, #32]
   19da8:	vldr	d10, [ip]
   19dac:	vldr	d11, [ip, #8]
   19db0:	vadd.f64	d5, d10, d11
   19db4:	vldr	d6, [pc, #788]	; 1a0d0 <fputs@plt+0x10d14>
   19db8:	vldr	d4, [pc, #792]	; 1a0d8 <fputs@plt+0x10d1c>
   19dbc:	vldr	d15, [r5, #8]
   19dc0:	mov	lr, r5
   19dc4:	ldm	lr!, {r0, r1, r2, r3}
   19dc8:	vldr	d14, [pc, #784]	; 1a0e0 <fputs@plt+0x10d24>
   19dcc:	add	ip, sp, #160	; 0xa0
   19dd0:	mov	r4, #1
   19dd4:	mov	sl, #0
   19dd8:	add	r6, sp, #96	; 0x60
   19ddc:	mov	r8, sl
   19de0:	stmia	ip!, {r0, r1, r2, r3}
   19de4:	vsub.f64	d7, d10, d11
   19de8:	ldm	lr, {r0, r1}
   19dec:	str	r4, [sp, #160]	; 0xa0
   19df0:	stm	ip, {r0, r1}
   19df4:	vdiv.f64	d7, d7, d5
   19df8:	vmov.f64	d3, #8	; 0x40400000  3.0
   19dfc:	vmul.f64	d3, d7, d3
   19e00:	vmul.f64	d3, d3, d7
   19e04:	vmov.f64	d2, #48	; 0x41800000  16.0
   19e08:	vmul.f64	d3, d3, d7
   19e0c:	vmul.f64	d2, d7, d2
   19e10:	vmov.f64	d1, d6
   19e14:	vmls.f64	d6, d2, d7
   19e18:	vmls.f64	d1, d3, d7
   19e1c:	vdiv.f64	d7, d1, d6
   19e20:	vldr	d1, [pc, #704]	; 1a0e8 <fputs@plt+0x10d2c>
   19e24:	vmul.f64	d6, d5, d4
   19e28:	vmul.f64	d6, d6, d7
   19e2c:	vdiv.f64	d4, d6, d15
   19e30:	vmov.f64	d7, #96	; 0x3f000000  0.5
   19e34:	vmov.f64	d5, #64	; 0x3e000000  0.125
   19e38:	vmov.f64	d3, d7
   19e3c:	vmla.f64	d3, d4, d5
   19e40:	vcvt.s32.f64	s8, d3
   19e44:	vmov	ip, s8
   19e48:	vmul.f64	d10, d10, d7
   19e4c:	vmul.f64	d11, d11, d7
   19e50:	lsl	ip, ip, #3
   19e54:	str	ip, [sp, #24]
   19e58:	cmp	ip, #7
   19e5c:	asrgt	ip, ip, r4
   19e60:	add	r4, sp, #64	; 0x40
   19e64:	movle	ip, #8
   19e68:	strle	ip, [sp, #24]
   19e6c:	vmovgt	s14, ip
   19e70:	mov	r0, r4
   19e74:	add	ip, sp, #80	; 0x50
   19e78:	str	ip, [sp, #8]
   19e7c:	add	ip, sp, #112	; 0x70
   19e80:	str	ip, [sp, #12]
   19e84:	vmulle.f64	d15, d6, d5
   19e88:	vmovle.f64	d7, #16	; 0x40800000  4.0
   19e8c:	vcvtgt.f64.s32	d7, s14
   19e90:	vmls.f64	d6, d15, d7
   19e94:	vdiv.f64	d3, d6, d7
   19e98:	vmov.f64	d0, d10
   19e9c:	vstr	d3, [sp, #16]
   19ea0:	vmov.f64	d8, d1
   19ea4:	bl	1504c <fputs@plt+0xbc90>
   19ea8:	vldr	d7, [r5, #8]
   19eac:	ldm	r4, {r0, r1, r2, r3}
   19eb0:	add	r5, sp, #144	; 0x90
   19eb4:	ldr	ip, [sp, #8]
   19eb8:	vmov.f64	d6, #36	; 0x41200000  10.0
   19ebc:	stm	ip, {r0, r1, r2, r3}
   19ec0:	vdiv.f64	d7, d6, d7
   19ec4:	vcvt.s32.f64	s2, d7
   19ec8:	vstr	s2, [sp, #28]
   19ecc:	add	r9, sl, #1
   19ed0:	asr	ip, sl, #1
   19ed4:	ldm	r4, {r0, r1, r2, r3}
   19ed8:	vldr	d1, [sp, #16]
   19edc:	asr	lr, r9, #1
   19ee0:	vmov	s18, lr
   19ee4:	ldr	lr, [sp, #8]
   19ee8:	vcvt.f64.s32	d9, s18
   19eec:	stm	r6, {r0, r1, r2, r3}
   19ef0:	ldm	lr, {r0, r1, r2, r3}
   19ef4:	ldr	lr, [sp, #12]
   19ef8:	vmul.f64	d9, d9, d1
   19efc:	vmov	s2, ip
   19f00:	stm	lr, {r0, r1, r2, r3}
   19f04:	mov	r1, #0
   19f08:	movt	r1, #16352	; 0x3fe0
   19f0c:	mov	r0, #0
   19f10:	vcvt.f64.s32	d7, s2
   19f14:	vmov	d1, r0, r1
   19f18:	vadd.f64	d7, d7, d1
   19f1c:	vmla.f64	d9, d7, d15
   19f20:	vcmpe.f64	d9, d8
   19f24:	vmrs	APSR_nzcv, fpscr
   19f28:	ble	1a0bc <fputs@plt+0x10d00>
   19f2c:	add	fp, r8, #1
   19f30:	vldr	s3, [sp, #28]
   19f34:	vmov.f64	d12, d8
   19f38:	lsl	r7, fp, #1
   19f3c:	vcvt.f64.s32	d13, s3
   19f40:	b	19f4c <fputs@plt+0x10b90>
   19f44:	vmov.f64	d12, d8
   19f48:	add	fp, fp, #1
   19f4c:	vmov	s6, r7
   19f50:	mov	r8, fp
   19f54:	ldm	r4, {r0, r1, r2, r3}
   19f58:	add	r7, r7, #2
   19f5c:	vcvt.f64.s32	d0, s6
   19f60:	stm	r6, {r0, r1, r2, r3}
   19f64:	add	r1, sp, #48	; 0x30
   19f68:	add	r0, sp, #56	; 0x38
   19f6c:	vmul.f64	d0, d0, d14
   19f70:	vdiv.f64	d0, d0, d13
   19f74:	bl	9170 <sincos@plt>
   19f78:	vldr	d0, [sp, #48]	; 0x30
   19f7c:	vldr	d1, [sp, #56]	; 0x38
   19f80:	mov	r0, r5
   19f84:	vmul.f64	d0, d0, d10
   19f88:	vmul.f64	d1, d1, d11
   19f8c:	bl	1504c <fputs@plt+0xbc90>
   19f90:	ldm	r5, {r0, r1, r2, r3}
   19f94:	stm	r4, {r0, r1, r2, r3}
   19f98:	mov	r0, r4
   19f9c:	mov	r1, r6
   19fa0:	bl	15188 <fputs@plt+0xbdcc>
   19fa4:	mov	r0, r5
   19fa8:	vstr	d0, [sp, #144]	; 0x90
   19fac:	vstr	d1, [sp, #152]	; 0x98
   19fb0:	bl	15200 <fputs@plt+0xbe44>
   19fb4:	vadd.f64	d8, d8, d0
   19fb8:	vcmpe.f64	d9, d8
   19fbc:	vmrs	APSR_nzcv, fpscr
   19fc0:	bgt	19f44 <fputs@plt+0x10b88>
   19fc4:	vsub.f64	d9, d9, d12
   19fc8:	mov	r1, r6
   19fcc:	mov	r0, r4
   19fd0:	vdiv.f64	d9, d9, d0
   19fd4:	bl	15188 <fputs@plt+0xbdcc>
   19fd8:	add	r0, sp, #128	; 0x80
   19fdc:	vstr	d0, [sp, #128]	; 0x80
   19fe0:	vstr	d1, [sp, #136]	; 0x88
   19fe4:	vmov.f64	d0, d9
   19fe8:	bl	151c8 <fputs@plt+0xbe0c>
   19fec:	mov	r0, r6
   19ff0:	mov	r1, r5
   19ff4:	vstr	d1, [sp, #152]	; 0x98
   19ff8:	vstr	d0, [sp, #144]	; 0x90
   19ffc:	bl	15164 <fputs@plt+0xbda8>
   1a000:	vmov.f64	d7, d1
   1a004:	vstr	d0, [sp, #80]	; 0x50
   1a008:	vstr	d7, [sp, #88]	; 0x58
   1a00c:	vdiv.f64	d1, d0, d10
   1a010:	vdiv.f64	d0, d7, d11
   1a014:	bl	92cc <atan2@plt>
   1a018:	add	r1, sp, #48	; 0x30
   1a01c:	add	r0, sp, #56	; 0x38
   1a020:	bl	9170 <sincos@plt>
   1a024:	vldr	d0, [sp, #48]	; 0x30
   1a028:	vldr	d1, [sp, #56]	; 0x38
   1a02c:	mov	r0, r5
   1a030:	vmul.f64	d0, d0, d10
   1a034:	vmul.f64	d1, d1, d11
   1a038:	bl	1504c <fputs@plt+0xbc90>
   1a03c:	ldm	r5, {r0, r1, r2, r3}
   1a040:	tst	sl, #1
   1a044:	ldr	ip, [sp, #8]
   1a048:	stm	ip, {r0, r1, r2, r3}
   1a04c:	bne	1a08c <fputs@plt+0x10cd0>
   1a050:	cmp	sl, #1
   1a054:	ble	1a08c <fputs@plt+0x10cd0>
   1a058:	ldr	r0, [sp, #32]
   1a05c:	vmov.f64	d0, #0	; 0x40000000  2.0
   1a060:	bl	151ac <fputs@plt+0xbdf0>
   1a064:	add	lr, sp, #160	; 0xa0
   1a068:	str	r5, [sp]
   1a06c:	add	r2, sp, #112	; 0x70
   1a070:	str	lr, [sp, #4]
   1a074:	add	r3, sp, #80	; 0x50
   1a078:	ldr	r0, [sp, #36]	; 0x24
   1a07c:	ldr	r1, [sp, #40]	; 0x28
   1a080:	vstr	d0, [sp, #144]	; 0x90
   1a084:	vstr	d1, [sp, #152]	; 0x98
   1a088:	bl	199c8 <fputs@plt+0x1060c>
   1a08c:	ldr	ip, [sp, #24]
   1a090:	cmp	ip, r9
   1a094:	movge	sl, r9
   1a098:	bge	19ecc <fputs@plt+0x10b10>
   1a09c:	ldr	ip, [sp, #44]	; 0x2c
   1a0a0:	ldr	r2, [sp, #188]	; 0xbc
   1a0a4:	ldr	r3, [ip]
   1a0a8:	cmp	r2, r3
   1a0ac:	bne	1a0c8 <fputs@plt+0x10d0c>
   1a0b0:	add	sp, sp, #196	; 0xc4
   1a0b4:	vpop	{d8-d15}
   1a0b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0bc:	vmov.f64	d0, #112	; 0x3f800000  1.0
   1a0c0:	vldr	d12, [pc, #32]	; 1a0e8 <fputs@plt+0x10d2c>
   1a0c4:	b	19fc4 <fputs@plt+0x10c08>
   1a0c8:	bl	92b4 <__stack_chk_fail@plt>
   1a0cc:	nop	{0}
   1a0d0:	andeq	r0, r0, r0
   1a0d4:	subsmi	r0, r0, r0
   1a0d8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1a0dc:	svccc	0x00f921fb
   1a0e0:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1a0e4:	strdmi	r2, [r9], -fp
	...
   1a0f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a0f4:	vpush	{d8-d15}
   1a0f8:	sub	sp, sp, #164	; 0xa4
   1a0fc:	mov	r7, r3
   1a100:	movw	r3, #1424	; 0x590
   1a104:	movt	r3, #3
   1a108:	str	r3, [sp, #28]
   1a10c:	ldr	lr, [sp, #28]
   1a110:	mov	fp, r0
   1a114:	ldr	r3, [r7]
   1a118:	mov	r4, r2
   1a11c:	str	r1, [sp, #20]
   1a120:	ldr	r1, [lr]
   1a124:	cmp	r3, #2
   1a128:	str	r1, [sp, #156]	; 0x9c
   1a12c:	beq	1a140 <fputs@plt+0x10d84>
   1a130:	movw	r1, #25192	; 0x6268
   1a134:	mov	r0, #186	; 0xba
   1a138:	movt	r1, #2
   1a13c:	bl	1eec8 <fputs@plt+0x15b0c>
   1a140:	vldr	d6, [r4, #8]
   1a144:	vldr	d10, [r4]
   1a148:	vadd.f64	d5, d10, d6
   1a14c:	vldr	d4, [pc, #668]	; 1a3f0 <fputs@plt+0x11034>
   1a150:	vldr	d3, [pc, #672]	; 1a3f8 <fputs@plt+0x1103c>
   1a154:	vldr	d9, [r7, #8]
   1a158:	mov	lr, r7
   1a15c:	add	ip, sp, #128	; 0x80
   1a160:	ldm	lr!, {r0, r1, r2, r3}
   1a164:	vldr	d1, [pc, #660]	; 1a400 <fputs@plt+0x11044>
   1a168:	add	r4, sp, #48	; 0x30
   1a16c:	vldr	d14, [pc, #660]	; 1a408 <fputs@plt+0x1104c>
   1a170:	mov	sl, #1
   1a174:	add	r6, sp, #64	; 0x40
   1a178:	add	r5, sp, #112	; 0x70
   1a17c:	mov	r8, #0
   1a180:	stmia	ip!, {r0, r1, r2, r3}
   1a184:	vsub.f64	d7, d10, d6
   1a188:	ldm	lr, {r0, r1}
   1a18c:	str	sl, [sp, #128]	; 0x80
   1a190:	stm	ip, {r0, r1}
   1a194:	add	r1, sp, #80	; 0x50
   1a198:	str	r1, [sp, #4]
   1a19c:	mov	r0, r4
   1a1a0:	vdiv.f64	d7, d7, d5
   1a1a4:	vmov.f64	d2, #8	; 0x40400000  3.0
   1a1a8:	vmul.f64	d2, d7, d2
   1a1ac:	vmul.f64	d2, d2, d7
   1a1b0:	vmov.f64	d0, #48	; 0x41800000  16.0
   1a1b4:	vmul.f64	d2, d2, d7
   1a1b8:	vmul.f64	d0, d7, d0
   1a1bc:	vmov.f64	d11, d4
   1a1c0:	vmls.f64	d4, d0, d7
   1a1c4:	vmls.f64	d11, d2, d7
   1a1c8:	vdiv.f64	d2, d11, d4
   1a1cc:	vmul.f64	d5, d5, d3
   1a1d0:	vmul.f64	d15, d5, d2
   1a1d4:	vdiv.f64	d9, d15, d9
   1a1d8:	vmov.f64	d11, #96	; 0x3f000000  0.5
   1a1dc:	vmov.f64	d7, #80	; 0x3e800000  0.250
   1a1e0:	vmov.f64	d5, d11
   1a1e4:	vmla.f64	d5, d9, d7
   1a1e8:	vcvt.s32.f64	s14, d5
   1a1ec:	vmov	r1, s14
   1a1f0:	vmul.f64	d10, d10, d11
   1a1f4:	vmov.f64	d0, d10
   1a1f8:	lsl	r1, r1, #2
   1a1fc:	str	r1, [sp, #16]
   1a200:	vmul.f64	d11, d6, d11
   1a204:	vmov.f64	d8, d1
   1a208:	bl	1504c <fputs@plt+0xbc90>
   1a20c:	vldr	d7, [r7, #8]
   1a210:	ldr	r3, [sp, #16]
   1a214:	cmp	r3, #4
   1a218:	movlt	r3, #4
   1a21c:	str	r3, [sp, #16]
   1a220:	vmov.f64	d6, #36	; 0x41200000  10.0
   1a224:	vmov	s11, r3
   1a228:	vdiv.f64	d7, d6, d7
   1a22c:	vcvt.f64.s32	d5, s11
   1a230:	vcvt.s32.f64	s12, d7
   1a234:	vstr	d5, [sp, #8]
   1a238:	vstr	s12, [sp, #24]
   1a23c:	vmov	s13, sl
   1a240:	vldr	d7, [sp, #8]
   1a244:	ldm	r4, {r0, r1, r2, r3}
   1a248:	vcvt.f64.s32	d9, s13
   1a24c:	stm	r6, {r0, r1, r2, r3}
   1a250:	vmul.f64	d9, d9, d15
   1a254:	vdiv.f64	d9, d9, d7
   1a258:	vcmpe.f64	d9, d8
   1a25c:	vmrs	APSR_nzcv, fpscr
   1a260:	ble	1a3dc <fputs@plt+0x11020>
   1a264:	add	r9, r8, #1
   1a268:	vldr	s15, [sp, #24]
   1a26c:	vmov.f64	d12, d8
   1a270:	lsl	r7, r9, #1
   1a274:	vcvt.f64.s32	d13, s15
   1a278:	b	1a284 <fputs@plt+0x10ec8>
   1a27c:	vmov.f64	d12, d8
   1a280:	add	r9, r9, #1
   1a284:	vmov	s10, r7
   1a288:	mov	r8, r9
   1a28c:	ldm	r4, {r0, r1, r2, r3}
   1a290:	add	r7, r7, #2
   1a294:	vcvt.f64.s32	d0, s10
   1a298:	stm	r6, {r0, r1, r2, r3}
   1a29c:	add	r1, sp, #32
   1a2a0:	add	r0, sp, #40	; 0x28
   1a2a4:	vmul.f64	d0, d0, d14
   1a2a8:	vdiv.f64	d0, d0, d13
   1a2ac:	bl	9170 <sincos@plt>
   1a2b0:	vldr	d0, [sp, #32]
   1a2b4:	vldr	d1, [sp, #40]	; 0x28
   1a2b8:	mov	r0, r5
   1a2bc:	vmul.f64	d0, d0, d10
   1a2c0:	vmul.f64	d1, d1, d11
   1a2c4:	bl	1504c <fputs@plt+0xbc90>
   1a2c8:	ldm	r5, {r0, r1, r2, r3}
   1a2cc:	stm	r4, {r0, r1, r2, r3}
   1a2d0:	mov	r0, r4
   1a2d4:	mov	r1, r6
   1a2d8:	bl	15188 <fputs@plt+0xbdcc>
   1a2dc:	mov	r0, r5
   1a2e0:	vstr	d0, [sp, #112]	; 0x70
   1a2e4:	vstr	d1, [sp, #120]	; 0x78
   1a2e8:	bl	15200 <fputs@plt+0xbe44>
   1a2ec:	vadd.f64	d8, d8, d0
   1a2f0:	vcmpe.f64	d9, d8
   1a2f4:	vmrs	APSR_nzcv, fpscr
   1a2f8:	bgt	1a27c <fputs@plt+0x10ec0>
   1a2fc:	vsub.f64	d9, d9, d12
   1a300:	mov	r1, r6
   1a304:	mov	r0, r4
   1a308:	add	sl, sl, #1
   1a30c:	vdiv.f64	d9, d9, d0
   1a310:	bl	15188 <fputs@plt+0xbdcc>
   1a314:	add	r0, sp, #96	; 0x60
   1a318:	vstr	d0, [sp, #96]	; 0x60
   1a31c:	vstr	d1, [sp, #104]	; 0x68
   1a320:	vmov.f64	d0, d9
   1a324:	bl	151c8 <fputs@plt+0xbe0c>
   1a328:	mov	r0, r6
   1a32c:	mov	r1, r5
   1a330:	vstr	d1, [sp, #120]	; 0x78
   1a334:	vstr	d0, [sp, #112]	; 0x70
   1a338:	bl	15164 <fputs@plt+0xbda8>
   1a33c:	vmov.f64	d7, d1
   1a340:	vstr	d0, [sp, #80]	; 0x50
   1a344:	vstr	d7, [sp, #88]	; 0x58
   1a348:	vdiv.f64	d1, d0, d10
   1a34c:	vdiv.f64	d0, d7, d11
   1a350:	bl	92cc <atan2@plt>
   1a354:	add	r1, sp, #32
   1a358:	add	r0, sp, #40	; 0x28
   1a35c:	bl	9170 <sincos@plt>
   1a360:	vldr	d0, [sp, #32]
   1a364:	vldr	d1, [sp, #40]	; 0x28
   1a368:	mov	r0, r5
   1a36c:	vmul.f64	d0, d0, d10
   1a370:	vmul.f64	d1, d1, d11
   1a374:	bl	1504c <fputs@plt+0xbc90>
   1a378:	ldm	r5, {r0, r1, r2, r3}
   1a37c:	ldr	lr, [sp, #4]
   1a380:	ldr	ip, [fp]
   1a384:	stm	lr, {r0, r1, r2, r3}
   1a388:	add	r1, sp, #80	; 0x50
   1a38c:	ldr	r0, [sp, #20]
   1a390:	ldr	r7, [ip, #84]	; 0x54
   1a394:	bl	15164 <fputs@plt+0xbda8>
   1a398:	mov	r0, fp
   1a39c:	mov	r1, r5
   1a3a0:	add	r2, sp, #128	; 0x80
   1a3a4:	vstr	d0, [sp, #112]	; 0x70
   1a3a8:	vstr	d1, [sp, #120]	; 0x78
   1a3ac:	blx	r7
   1a3b0:	ldr	r0, [sp, #16]
   1a3b4:	cmp	r0, sl
   1a3b8:	bge	1a23c <fputs@plt+0x10e80>
   1a3bc:	ldr	r1, [sp, #28]
   1a3c0:	ldr	r2, [sp, #156]	; 0x9c
   1a3c4:	ldr	r3, [r1]
   1a3c8:	cmp	r2, r3
   1a3cc:	bne	1a3e8 <fputs@plt+0x1102c>
   1a3d0:	add	sp, sp, #164	; 0xa4
   1a3d4:	vpop	{d8-d15}
   1a3d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a3dc:	vmov.f64	d0, #112	; 0x3f800000  1.0
   1a3e0:	vmov.f64	d12, d8
   1a3e4:	b	1a2fc <fputs@plt+0x10f40>
   1a3e8:	bl	92b4 <__stack_chk_fail@plt>
   1a3ec:	nop	{0}
   1a3f0:	andeq	r0, r0, r0
   1a3f4:	subsmi	r0, r0, r0
   1a3f8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1a3fc:	svccc	0x00f921fb
	...
   1a408:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1a40c:	strdmi	r2, [r9], -fp
   1a410:	push	{r4, r5, r6, r7, lr}
   1a414:	vpush	{d8}
   1a418:	movw	r4, #1424	; 0x590
   1a41c:	movt	r4, #3
   1a420:	sub	sp, sp, #60	; 0x3c
   1a424:	mov	r5, r0
   1a428:	mov	r0, r1
   1a42c:	ldr	ip, [r4]
   1a430:	mov	r1, r5
   1a434:	mov	r6, r2
   1a438:	mov	r7, r3
   1a43c:	str	ip, [sp, #52]	; 0x34
   1a440:	bl	15188 <fputs@plt+0xbdcc>
   1a444:	mov	r0, r6
   1a448:	mov	r1, r5
   1a44c:	vstr	d0, [sp]
   1a450:	vstr	d1, [sp, #8]
   1a454:	bl	15188 <fputs@plt+0xbdcc>
   1a458:	mov	r0, sp
   1a45c:	add	r1, sp, #16
   1a460:	vstr	d0, [sp, #16]
   1a464:	vstr	d1, [sp, #24]
   1a468:	bl	151e4 <fputs@plt+0xbe28>
   1a46c:	vcmp.f64	d0, #0.0
   1a470:	vmov.f64	d8, d0
   1a474:	vmrs	APSR_nzcv, fpscr
   1a478:	moveq	r0, #0
   1a47c:	beq	1a4bc <fputs@plt+0x11100>
   1a480:	add	r0, sp, #16
   1a484:	mov	r1, r0
   1a488:	bl	151e4 <fputs@plt+0xbe28>
   1a48c:	vadd.f64	d8, d8, d8
   1a490:	mov	r0, sp
   1a494:	vdiv.f64	d0, d0, d8
   1a498:	bl	151c8 <fputs@plt+0xbe0c>
   1a49c:	mov	r0, r5
   1a4a0:	add	r1, sp, #32
   1a4a4:	vstr	d1, [sp, #40]	; 0x28
   1a4a8:	vstr	d0, [sp, #32]
   1a4ac:	bl	15164 <fputs@plt+0xbda8>
   1a4b0:	mov	r0, #1
   1a4b4:	vstr	d0, [r7]
   1a4b8:	vstr	d1, [r7, #8]
   1a4bc:	ldr	r2, [sp, #52]	; 0x34
   1a4c0:	ldr	r3, [r4]
   1a4c4:	cmp	r2, r3
   1a4c8:	bne	1a4d8 <fputs@plt+0x1111c>
   1a4cc:	add	sp, sp, #60	; 0x3c
   1a4d0:	vpop	{d8}
   1a4d4:	pop	{r4, r5, r6, r7, pc}
   1a4d8:	bl	92b4 <__stack_chk_fail@plt>
   1a4dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a4e0:	vpush	{d8-d11}
   1a4e4:	sub	sp, sp, #84	; 0x54
   1a4e8:	movw	r8, #1424	; 0x590
   1a4ec:	movt	r8, #3
   1a4f0:	ldr	r6, [sp, #144]	; 0x90
   1a4f4:	mov	r7, r2
   1a4f8:	mov	r9, r3
   1a4fc:	ldr	r3, [r8]
   1a500:	mov	r5, r0
   1a504:	mov	r4, r1
   1a508:	ldr	r2, [r6]
   1a50c:	str	r3, [sp, #76]	; 0x4c
   1a510:	cmp	r2, #3
   1a514:	beq	1a528 <fputs@plt+0x1116c>
   1a518:	movw	r1, #25192	; 0x6268
   1a51c:	mov	r0, #253	; 0xfd
   1a520:	movt	r1, #2
   1a524:	bl	1eec8 <fputs@plt+0x15b0c>
   1a528:	add	r0, sp, #8
   1a52c:	bl	15038 <fputs@plt+0xbc7c>
   1a530:	mov	r0, r4
   1a534:	mov	r1, r7
   1a538:	mov	r2, r9
   1a53c:	add	r3, sp, #8
   1a540:	bl	1a410 <fputs@plt+0x11054>
   1a544:	cmp	r0, #0
   1a548:	bne	1a588 <fputs@plt+0x111cc>
   1a54c:	ldr	ip, [r5]
   1a550:	mov	r1, r4
   1a554:	str	r6, [sp]
   1a558:	mov	r2, r9
   1a55c:	mov	r0, r5
   1a560:	mov	r3, #1
   1a564:	ldr	ip, [ip, #24]
   1a568:	blx	ip
   1a56c:	ldr	r2, [sp, #76]	; 0x4c
   1a570:	ldr	r3, [r8]
   1a574:	cmp	r2, r3
   1a578:	bne	1a6c0 <fputs@plt+0x11304>
   1a57c:	add	sp, sp, #84	; 0x54
   1a580:	vpop	{d8-d11}
   1a584:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a588:	mov	r0, r4
   1a58c:	add	r1, sp, #8
   1a590:	bl	15188 <fputs@plt+0xbdcc>
   1a594:	mov	r0, r9
   1a598:	add	r1, sp, #8
   1a59c:	vstr	d0, [sp, #24]
   1a5a0:	vstr	d1, [sp, #32]
   1a5a4:	bl	15188 <fputs@plt+0xbdcc>
   1a5a8:	vstr	d0, [sp, #40]	; 0x28
   1a5ac:	vstr	d1, [sp, #48]	; 0x30
   1a5b0:	vldr	d0, [sp, #32]
   1a5b4:	vldr	d1, [sp, #24]
   1a5b8:	bl	92cc <atan2@plt>
   1a5bc:	vldr	d1, [sp, #40]	; 0x28
   1a5c0:	vmov.f64	d9, d0
   1a5c4:	vldr	d0, [sp, #48]	; 0x30
   1a5c8:	bl	92cc <atan2@plt>
   1a5cc:	add	r0, sp, #8
   1a5d0:	mov	r1, r4
   1a5d4:	vmov.f64	d11, d0
   1a5d8:	bl	15188 <fputs@plt+0xbdcc>
   1a5dc:	add	r0, sp, #56	; 0x38
   1a5e0:	vstr	d0, [sp, #56]	; 0x38
   1a5e4:	vstr	d1, [sp, #64]	; 0x40
   1a5e8:	bl	15200 <fputs@plt+0xbe44>
   1a5ec:	vsub.f64	d7, d11, d9
   1a5f0:	vldr	d8, [r6, #8]
   1a5f4:	vcmpe.f64	d7, #0.0
   1a5f8:	vmrs	APSR_nzcv, fpscr
   1a5fc:	vmov.f64	d10, d0
   1a600:	vdiv.f64	d8, d8, d0
   1a604:	bpl	1a61c <fputs@plt+0x11260>
   1a608:	vldr	d6, [pc, #184]	; 1a6c8 <fputs@plt+0x1130c>
   1a60c:	vadd.f64	d7, d7, d6
   1a610:	vcmpe.f64	d7, #0.0
   1a614:	vmrs	APSR_nzcv, fpscr
   1a618:	bmi	1a60c <fputs@plt+0x11250>
   1a61c:	vadd.f64	d6, d8, d8
   1a620:	vcmpe.f64	d6, d7
   1a624:	vmrs	APSR_nzcv, fpscr
   1a628:	bge	1a698 <fputs@plt+0x112dc>
   1a62c:	vsub.f64	d7, d7, d8
   1a630:	vdiv.f64	d6, d7, d6
   1a634:	vmov.f64	d5, #96	; 0x3f000000  0.5
   1a638:	vadd.f64	d6, d6, d5
   1a63c:	vcvt.s32.f64	s11, d6
   1a640:	vmov	r9, s11
   1a644:	vcvt.f64.s32	d11, s11
   1a648:	vdiv.f64	d11, d7, d11
   1a64c:	cmp	r9, #0
   1a650:	blt	1a56c <fputs@plt+0x111b0>
   1a654:	mov	r4, #0
   1a658:	vmov	s13, r4
   1a65c:	ldr	r3, [r5]
   1a660:	mov	r0, r5
   1a664:	mov	r1, r7
   1a668:	mov	r2, r6
   1a66c:	add	r4, r4, #1
   1a670:	ldr	r3, [r3, #88]	; 0x58
   1a674:	vcvt.f64.s32	d7, s13
   1a678:	vmov.f64	d1, d9
   1a67c:	vmla.f64	d1, d7, d11
   1a680:	vmov.f64	d0, d10
   1a684:	vadd.f64	d2, d1, d8
   1a688:	blx	r3
   1a68c:	cmp	r9, r4
   1a690:	bge	1a658 <fputs@plt+0x1129c>
   1a694:	b	1a56c <fputs@plt+0x111b0>
   1a698:	ldr	r3, [r5]
   1a69c:	mov	r1, r7
   1a6a0:	vmov.f64	d0, d10
   1a6a4:	mov	r2, r6
   1a6a8:	mov	r0, r5
   1a6ac:	ldr	r3, [r3, #88]	; 0x58
   1a6b0:	vmov.f64	d1, d9
   1a6b4:	vmov.f64	d2, d11
   1a6b8:	blx	r3
   1a6bc:	b	1a56c <fputs@plt+0x111b0>
   1a6c0:	bl	92b4 <__stack_chk_fail@plt>
   1a6c4:	nop	{0}
   1a6c8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1a6cc:			; <UNDEFINED> instruction: 0x401921fb
   1a6d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a6d4:	vpush	{d8-d11}
   1a6d8:	sub	sp, sp, #128	; 0x80
   1a6dc:	movw	sl, #1424	; 0x590
   1a6e0:	movt	sl, #3
   1a6e4:	ldr	r7, [sp, #192]	; 0xc0
   1a6e8:	mov	r8, r2
   1a6ec:	mov	r6, r3
   1a6f0:	ldr	r3, [sl]
   1a6f4:	mov	r5, r0
   1a6f8:	mov	r4, r1
   1a6fc:	ldr	r2, [r7]
   1a700:	str	r3, [sp, #124]	; 0x7c
   1a704:	cmp	r2, #2
   1a708:	beq	1a71c <fputs@plt+0x11360>
   1a70c:	movw	r1, #25192	; 0x6268
   1a710:	mov	r0, #284	; 0x11c
   1a714:	movt	r1, #2
   1a718:	bl	1eec8 <fputs@plt+0x15b0c>
   1a71c:	add	r0, sp, #24
   1a720:	bl	15038 <fputs@plt+0xbc7c>
   1a724:	mov	r0, r4
   1a728:	mov	r1, r8
   1a72c:	mov	r2, r6
   1a730:	add	r3, sp, #24
   1a734:	bl	1a410 <fputs@plt+0x11054>
   1a738:	cmp	r0, #0
   1a73c:	beq	1a890 <fputs@plt+0x114d4>
   1a740:	mov	r0, r4
   1a744:	add	r1, sp, #24
   1a748:	bl	15188 <fputs@plt+0xbdcc>
   1a74c:	mov	r0, r6
   1a750:	add	r1, sp, #24
   1a754:	vstr	d0, [sp, #40]	; 0x28
   1a758:	vstr	d1, [sp, #48]	; 0x30
   1a75c:	bl	15188 <fputs@plt+0xbdcc>
   1a760:	vstr	d0, [sp, #56]	; 0x38
   1a764:	vstr	d1, [sp, #64]	; 0x40
   1a768:	vldr	d0, [sp, #48]	; 0x30
   1a76c:	vldr	d1, [sp, #40]	; 0x28
   1a770:	bl	92cc <atan2@plt>
   1a774:	vldr	d1, [sp, #56]	; 0x38
   1a778:	vmov.f64	d9, d0
   1a77c:	vldr	d0, [sp, #64]	; 0x40
   1a780:	bl	92cc <atan2@plt>
   1a784:	vsub.f64	d8, d0, d9
   1a788:	vcmpe.f64	d8, #0.0
   1a78c:	vmrs	APSR_nzcv, fpscr
   1a790:	bpl	1a7a8 <fputs@plt+0x113ec>
   1a794:	vldr	d7, [pc, #316]	; 1a8d8 <fputs@plt+0x1151c>
   1a798:	vadd.f64	d8, d8, d7
   1a79c:	vcmpe.f64	d8, #0.0
   1a7a0:	vmrs	APSR_nzcv, fpscr
   1a7a4:	bmi	1a798 <fputs@plt+0x113dc>
   1a7a8:	add	r0, sp, #24
   1a7ac:	mov	r1, r4
   1a7b0:	bl	15188 <fputs@plt+0xbdcc>
   1a7b4:	add	r0, sp, #104	; 0x68
   1a7b8:	vstr	d0, [sp, #104]	; 0x68
   1a7bc:	vstr	d1, [sp, #112]	; 0x70
   1a7c0:	bl	15200 <fputs@plt+0xbe44>
   1a7c4:	vldr	d7, [r7, #8]
   1a7c8:	vmov.f64	d6, #96	; 0x3f000000  0.5
   1a7cc:	vdiv.f64	d7, d7, d0
   1a7d0:	vdiv.f64	d7, d8, d7
   1a7d4:	vadd.f64	d7, d7, d6
   1a7d8:	vcvt.s32.f64	s13, d7
   1a7dc:	vmov	r9, s13
   1a7e0:	vmov.f64	d10, d0
   1a7e4:	cmp	r9, #0
   1a7e8:	beq	1a8b4 <fputs@plt+0x114f8>
   1a7ec:	blt	1a874 <fputs@plt+0x114b8>
   1a7f0:	vcvt.f64.s32	d11, s13
   1a7f4:	mov	r4, #0
   1a7f8:	vmov	s13, r4
   1a7fc:	add	r1, sp, #8
   1a800:	add	r0, sp, #16
   1a804:	add	r4, r4, #1
   1a808:	vcvt.f64.s32	d7, s13
   1a80c:	vmul.f64	d7, d7, d8
   1a810:	vdiv.f64	d0, d7, d11
   1a814:	vadd.f64	d0, d0, d9
   1a818:	bl	9170 <sincos@plt>
   1a81c:	ldr	r3, [r5]
   1a820:	vldr	d1, [sp, #16]
   1a824:	vldr	d0, [sp, #8]
   1a828:	add	r0, sp, #72	; 0x48
   1a82c:	ldr	r6, [r3, #84]	; 0x54
   1a830:	bl	1504c <fputs@plt+0xbc90>
   1a834:	add	r0, sp, #72	; 0x48
   1a838:	vmov.f64	d0, d10
   1a83c:	bl	151c8 <fputs@plt+0xbe0c>
   1a840:	mov	r0, r8
   1a844:	add	r1, sp, #88	; 0x58
   1a848:	vstr	d1, [sp, #96]	; 0x60
   1a84c:	vstr	d0, [sp, #88]	; 0x58
   1a850:	bl	15164 <fputs@plt+0xbda8>
   1a854:	mov	r0, r5
   1a858:	add	r1, sp, #104	; 0x68
   1a85c:	mov	r2, r7
   1a860:	vstr	d0, [sp, #104]	; 0x68
   1a864:	vstr	d1, [sp, #112]	; 0x70
   1a868:	blx	r6
   1a86c:	cmp	r9, r4
   1a870:	bge	1a7f8 <fputs@plt+0x1143c>
   1a874:	ldr	r2, [sp, #124]	; 0x7c
   1a878:	ldr	r3, [sl]
   1a87c:	cmp	r2, r3
   1a880:	bne	1a8d0 <fputs@plt+0x11514>
   1a884:	add	sp, sp, #128	; 0x80
   1a888:	vpop	{d8-d11}
   1a88c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a890:	ldr	ip, [r5]
   1a894:	mov	r1, r4
   1a898:	str	r7, [sp]
   1a89c:	mov	r2, r6
   1a8a0:	mov	r0, r5
   1a8a4:	mov	r3, #1
   1a8a8:	ldr	ip, [ip, #24]
   1a8ac:	blx	ip
   1a8b0:	b	1a874 <fputs@plt+0x114b8>
   1a8b4:	ldr	r3, [r5]
   1a8b8:	mov	r1, r4
   1a8bc:	mov	r2, r7
   1a8c0:	mov	r0, r5
   1a8c4:	ldr	r3, [r3, #84]	; 0x54
   1a8c8:	blx	r3
   1a8cc:	b	1a874 <fputs@plt+0x114b8>
   1a8d0:	bl	92b4 <__stack_chk_fail@plt>
   1a8d4:	nop	{0}
   1a8d8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1a8dc:			; <UNDEFINED> instruction: 0x401921fb
   1a8e0:	push	{r3, r4, r5, r6, r7, lr}
   1a8e4:	vpush	{d8-d15}
   1a8e8:	vsub.f64	d11, d2, d1
   1a8ec:	vldr	d9, [pc, #236]	; 1a9e0 <fputs@plt+0x11624>
   1a8f0:	mov	r4, r0
   1a8f4:	mov	r7, r1
   1a8f8:	mov	r6, r2
   1a8fc:	mov	r5, r3
   1a900:	vldr	d7, [r3]
   1a904:	vmul.f64	d11, d11, d0
   1a908:	vmov.f64	d12, d1
   1a90c:	vmov.f64	d15, d2
   1a910:	vmov.f64	d10, d0
   1a914:	vmov.f64	d8, d3
   1a918:	vmov.f64	d13, d4
   1a91c:	vmov.f64	d14, d9
   1a920:	mov	r0, r4
   1a924:	mov	r1, r7
   1a928:	mov	r2, r6
   1a92c:	vcmpe.f64	d8, d7
   1a930:	vmov.f64	d0, d10
   1a934:	vmrs	APSR_nzcv, fpscr
   1a938:	bhi	1a964 <fputs@plt+0x115a8>
   1a93c:	vadd.f64	d6, d8, d13
   1a940:	vsub.f64	d6, d6, d7
   1a944:	vadd.f64	d6, d9, d6
   1a948:	vcmpe.f64	d11, d6
   1a94c:	vmrs	APSR_nzcv, fpscr
   1a950:	bmi	1a9c8 <fputs@plt+0x1160c>
   1a954:	vstr	d14, [r5]
   1a958:	vmov.f64	d9, d6
   1a95c:	vldr	d7, [pc, #124]	; 1a9e0 <fputs@plt+0x11624>
   1a960:	b	1a920 <fputs@plt+0x11564>
   1a964:	vsub.f64	d7, d8, d7
   1a968:	ldr	r3, [r4]
   1a96c:	vadd.f64	d7, d9, d7
   1a970:	vcmpe.f64	d11, d7
   1a974:	vdiv.f64	d1, d9, d10
   1a978:	vmrs	APSR_nzcv, fpscr
   1a97c:	bmi	1a9a4 <fputs@plt+0x115e8>
   1a980:	ldr	r3, [r3, #88]	; 0x58
   1a984:	vdiv.f64	d2, d7, d10
   1a988:	vadd.f64	d1, d1, d12
   1a98c:	vadd.f64	d2, d2, d12
   1a990:	vmov.f64	d9, d7
   1a994:	blx	r3
   1a998:	vstr	d8, [r5]
   1a99c:	vmov.f64	d7, d8
   1a9a0:	b	1a920 <fputs@plt+0x11564>
   1a9a4:	mov	r1, r7
   1a9a8:	vmov.f64	d2, d15
   1a9ac:	mov	r2, r6
   1a9b0:	mov	r0, r4
   1a9b4:	ldr	r3, [r3, #88]	; 0x58
   1a9b8:	vmov.f64	d0, d10
   1a9bc:	vadd.f64	d1, d1, d12
   1a9c0:	blx	r3
   1a9c4:	vldr	d7, [r5]
   1a9c8:	vsub.f64	d9, d11, d9
   1a9cc:	vadd.f64	d7, d7, d9
   1a9d0:	vpop	{d8-d15}
   1a9d4:	vstr	d7, [r5]
   1a9d8:	pop	{r3, r4, r5, r6, r7, pc}
   1a9dc:	nop	{0}
	...
   1a9e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a9ec:	vpush	{d8-d13}
   1a9f0:	movw	r9, #1424	; 0x590
   1a9f4:	movt	r9, #3
   1a9f8:	mov	sl, r2
   1a9fc:	sub	sp, sp, #80	; 0x50
   1aa00:	mov	r5, r0
   1aa04:	ldr	r2, [r9]
   1aa08:	mov	r0, sl
   1aa0c:	mov	r8, r3
   1aa10:	vmov.f64	d8, d0
   1aa14:	mov	r6, r1
   1aa18:	ldr	r4, [sp, #160]	; 0xa0
   1aa1c:	str	r2, [sp, #76]	; 0x4c
   1aa20:	vmov.f64	d12, d1
   1aa24:	bl	15188 <fputs@plt+0xbdcc>
   1aa28:	add	r0, sp, #8
   1aa2c:	vstr	d0, [sp, #8]
   1aa30:	vstr	d1, [sp, #16]
   1aa34:	bl	15200 <fputs@plt+0xbe44>
   1aa38:	vcmp.f64	d0, #0.0
   1aa3c:	vmov.f64	d10, d0
   1aa40:	vmrs	APSR_nzcv, fpscr
   1aa44:	beq	1ab30 <fputs@plt+0x11774>
   1aa48:	vldr	d9, [pc, #352]	; 1abb0 <fputs@plt+0x117f4>
   1aa4c:	vldr	d11, [r4]
   1aa50:	vmov.f64	d13, d9
   1aa54:	vcmpe.f64	d8, d11
   1aa58:	vmrs	APSR_nzcv, fpscr
   1aa5c:	bhi	1aa90 <fputs@plt+0x116d4>
   1aa60:	vadd.f64	d7, d8, d12
   1aa64:	vsub.f64	d7, d7, d11
   1aa68:	vadd.f64	d7, d9, d7
   1aa6c:	vcmpe.f64	d10, d7
   1aa70:	vmrs	APSR_nzcv, fpscr
   1aa74:	bmi	1ab24 <fputs@plt+0x11768>
   1aa78:	vldr	d11, [pc, #304]	; 1abb0 <fputs@plt+0x117f4>
   1aa7c:	vcmpe.f64	d8, d11
   1aa80:	vstr	d13, [r4]
   1aa84:	vmov.f64	d9, d7
   1aa88:	vmrs	APSR_nzcv, fpscr
   1aa8c:	bls	1aa60 <fputs@plt+0x116a4>
   1aa90:	vsub.f64	d11, d8, d11
   1aa94:	vadd.f64	d11, d9, d11
   1aa98:	vcmpe.f64	d10, d11
   1aa9c:	vmrs	APSR_nzcv, fpscr
   1aaa0:	bmi	1ab4c <fputs@plt+0x11790>
   1aaa4:	vdiv.f64	d0, d11, d10
   1aaa8:	add	r0, sp, #8
   1aaac:	bl	151c8 <fputs@plt+0xbe0c>
   1aab0:	mov	r0, r6
   1aab4:	add	r1, sp, #56	; 0x38
   1aab8:	vstr	d1, [sp, #64]	; 0x40
   1aabc:	vstr	d0, [sp, #56]	; 0x38
   1aac0:	bl	15164 <fputs@plt+0xbda8>
   1aac4:	ldr	r1, [r5]
   1aac8:	add	r0, sp, #8
   1aacc:	ldr	r7, [r1, #24]
   1aad0:	vstr	d0, [sp, #24]
   1aad4:	vdiv.f64	d0, d9, d10
   1aad8:	vstr	d1, [sp, #32]
   1aadc:	bl	151c8 <fputs@plt+0xbe0c>
   1aae0:	mov	r0, r6
   1aae4:	add	r1, sp, #40	; 0x28
   1aae8:	vstr	d1, [sp, #48]	; 0x30
   1aaec:	vstr	d0, [sp, #40]	; 0x28
   1aaf0:	bl	15164 <fputs@plt+0xbda8>
   1aaf4:	str	r8, [sp]
   1aaf8:	mov	r0, r5
   1aafc:	add	r1, sp, #56	; 0x38
   1ab00:	add	r2, sp, #24
   1ab04:	mov	r3, #1
   1ab08:	vmov.f64	d9, d11
   1ab0c:	vmov.f64	d11, d8
   1ab10:	vstr	d0, [sp, #56]	; 0x38
   1ab14:	vstr	d1, [sp, #64]	; 0x40
   1ab18:	blx	r7
   1ab1c:	vstr	d8, [r4]
   1ab20:	b	1aa54 <fputs@plt+0x11698>
   1ab24:	vsub.f64	d9, d10, d9
   1ab28:	vadd.f64	d11, d11, d9
   1ab2c:	vstr	d11, [r4]
   1ab30:	ldr	r2, [sp, #76]	; 0x4c
   1ab34:	ldr	r3, [r9]
   1ab38:	cmp	r2, r3
   1ab3c:	bne	1aba8 <fputs@plt+0x117ec>
   1ab40:	add	sp, sp, #80	; 0x50
   1ab44:	vpop	{d8-d13}
   1ab48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ab4c:	vdiv.f64	d0, d9, d10
   1ab50:	ldr	r3, [r5]
   1ab54:	add	r0, sp, #8
   1ab58:	ldr	r7, [r3, #24]
   1ab5c:	bl	151c8 <fputs@plt+0xbe0c>
   1ab60:	mov	r0, r6
   1ab64:	add	r1, sp, #40	; 0x28
   1ab68:	vstr	d1, [sp, #48]	; 0x30
   1ab6c:	vstr	d0, [sp, #40]	; 0x28
   1ab70:	bl	15164 <fputs@plt+0xbda8>
   1ab74:	str	r8, [sp]
   1ab78:	mov	r0, r5
   1ab7c:	mov	r2, sl
   1ab80:	add	r1, sp, #56	; 0x38
   1ab84:	mov	r3, #1
   1ab88:	vstr	d0, [sp, #56]	; 0x38
   1ab8c:	vstr	d1, [sp, #64]	; 0x40
   1ab90:	blx	r7
   1ab94:	vsub.f64	d9, d10, d9
   1ab98:	vldr	d7, [r4]
   1ab9c:	vadd.f64	d7, d7, d9
   1aba0:	vstr	d7, [r4]
   1aba4:	b	1ab30 <fputs@plt+0x11774>
   1aba8:	bl	92b4 <__stack_chk_fail@plt>
   1abac:	nop	{0}
	...
   1abb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1abbc:	vpush	{d8-d11}
   1abc0:	vldr	d11, [pc, #1008]	; 1afb8 <fputs@plt+0x11bfc>
   1abc4:	vmul.f64	d11, d0, d11
   1abc8:	vldr	d5, [r2]
   1abcc:	vldr	d7, [r3, #8]
   1abd0:	mov	lr, r3
   1abd4:	mov	r4, r2
   1abd8:	mov	r6, r1
   1abdc:	mov	r5, r3
   1abe0:	mov	r7, r0
   1abe4:	sub	sp, sp, #112	; 0x70
   1abe8:	ldm	lr!, {r0, r1, r2, r3}
   1abec:	add	ip, sp, #80	; 0x50
   1abf0:	movw	r9, #1424	; 0x590
   1abf4:	movt	r9, #3
   1abf8:	mov	r8, #1
   1abfc:	ldr	sl, [r9]
   1ac00:	stmia	ip!, {r0, r1, r2, r3}
   1ac04:	ldm	lr, {r0, r1}
   1ac08:	str	r8, [sp, #80]	; 0x50
   1ac0c:	add	r8, sp, #8
   1ac10:	str	sl, [sp, #108]	; 0x6c
   1ac14:	stm	ip, {r0, r1}
   1ac18:	add	r0, sp, #48	; 0x30
   1ac1c:	vadd.f64	d6, d5, d11
   1ac20:	vadd.f64	d4, d7, d7
   1ac24:	vdiv.f64	d10, d6, d4
   1ac28:	vmov.f64	d3, #96	; 0x3f000000  0.5
   1ac2c:	vadd.f64	d10, d10, d3
   1ac30:	vcvt.s32.f64	s20, d10
   1ac34:	vmov	r3, s20
   1ac38:	vmov.f64	d3, #96	; 0x3f000000  0.5
   1ac3c:	vmov.f64	d8, #96	; 0x3f000000  0.5
   1ac40:	cmp	r3, #0
   1ac44:	vldreq	d10, [pc, #884]	; 1afc0 <fputs@plt+0x11c04>
   1ac48:	vmov.f64	d9, d0
   1ac4c:	vcvtne.f64.s32	d10, s20
   1ac50:	vdivne.f64	d10, d6, d10
   1ac54:	vldr	d6, [r4, #8]
   1ac58:	vadd.f64	d11, d11, d6
   1ac5c:	vdiv.f64	d4, d11, d4
   1ac60:	vadd.f64	d4, d4, d3
   1ac64:	vcvt.s32.f64	s8, d4
   1ac68:	vmov	r3, s8
   1ac6c:	vsubne.f64	d10, d10, d7
   1ac70:	vmov.f64	d1, d9
   1ac74:	vnmls.f64	d0, d5, d8
   1ac78:	cmp	r3, #0
   1ac7c:	vldreq	d11, [pc, #828]	; 1afc0 <fputs@plt+0x11c04>
   1ac80:	vcvtne.f64.s32	d4, s8
   1ac84:	vdivne.f64	d11, d11, d4
   1ac88:	vsubne.f64	d11, d11, d7
   1ac8c:	vmul.f64	d7, d7, d8
   1ac90:	vmls.f64	d1, d6, d8
   1ac94:	vstr	d7, [sp, #8]
   1ac98:	bl	1504c <fputs@plt+0xbc90>
   1ac9c:	mov	r0, r6
   1aca0:	add	r1, sp, #48	; 0x30
   1aca4:	bl	15164 <fputs@plt+0xbda8>
   1aca8:	vldr	d2, [pc, #784]	; 1afc0 <fputs@plt+0x11c04>
   1acac:	vldr	d3, [r5, #8]
   1acb0:	mov	r3, r8
   1acb4:	add	r2, sp, #80	; 0x50
   1acb8:	add	r1, sp, #64	; 0x40
   1acbc:	mov	r0, r7
   1acc0:	vmov.f64	d4, d11
   1acc4:	vstr	d0, [sp, #64]	; 0x40
   1acc8:	vstr	d1, [sp, #72]	; 0x48
   1accc:	vmov.f64	d0, d9
   1acd0:	vldr	d1, [pc, #752]	; 1afc8 <fputs@plt+0x11c0c>
   1acd4:	bl	1a8e0 <fputs@plt+0x11524>
   1acd8:	vldr	d7, [r4, #8]
   1acdc:	vldr	d0, [r4]
   1ace0:	add	r0, sp, #16
   1ace4:	vmov.f64	d1, d9
   1ace8:	vmul.f64	d0, d0, d8
   1acec:	vmls.f64	d1, d7, d8
   1acf0:	bl	1504c <fputs@plt+0xbc90>
   1acf4:	add	r1, sp, #16
   1acf8:	mov	r0, r6
   1acfc:	bl	15164 <fputs@plt+0xbda8>
   1ad00:	vldr	d6, [r4]
   1ad04:	vldr	d7, [r4, #8]
   1ad08:	add	r0, sp, #48	; 0x30
   1ad0c:	vstr	d1, [sp, #40]	; 0x28
   1ad10:	vmov.f64	d1, d9
   1ad14:	vstr	d0, [sp, #32]
   1ad18:	vnmls.f64	d1, d7, d8
   1ad1c:	vmul.f64	d0, d6, d8
   1ad20:	bl	1504c <fputs@plt+0xbc90>
   1ad24:	mov	r0, r6
   1ad28:	add	r1, sp, #48	; 0x30
   1ad2c:	bl	15164 <fputs@plt+0xbda8>
   1ad30:	add	r2, sp, #64	; 0x40
   1ad34:	add	r3, sp, #80	; 0x50
   1ad38:	add	r1, sp, #32
   1ad3c:	str	r8, [sp]
   1ad40:	mov	r0, r7
   1ad44:	vldr	d7, [r5, #8]
   1ad48:	vstr	d0, [sp, #64]	; 0x40
   1ad4c:	vstr	d1, [sp, #72]	; 0x48
   1ad50:	vmov.f64	d0, d7
   1ad54:	vmov.f64	d1, d11
   1ad58:	bl	1a9e8 <fputs@plt+0x1162c>
   1ad5c:	vldr	d6, [r4]
   1ad60:	vldr	d7, [r4, #8]
   1ad64:	add	r0, sp, #48	; 0x30
   1ad68:	vmov.f64	d0, d9
   1ad6c:	vmov.f64	d1, d9
   1ad70:	vnmls.f64	d0, d6, d8
   1ad74:	vnmls.f64	d1, d7, d8
   1ad78:	bl	1504c <fputs@plt+0xbc90>
   1ad7c:	mov	r0, r6
   1ad80:	add	r1, sp, #48	; 0x30
   1ad84:	bl	15164 <fputs@plt+0xbda8>
   1ad88:	mov	r3, r8
   1ad8c:	vldr	d2, [pc, #572]	; 1afd0 <fputs@plt+0x11c14>
   1ad90:	add	r2, sp, #80	; 0x50
   1ad94:	vldr	d3, [r5, #8]
   1ad98:	add	r1, sp, #64	; 0x40
   1ad9c:	mov	r0, r7
   1ada0:	vmov.f64	d4, d11
   1ada4:	vstr	d0, [sp, #64]	; 0x40
   1ada8:	vstr	d1, [sp, #72]	; 0x48
   1adac:	vmov.f64	d0, d9
   1adb0:	vldr	d1, [pc, #520]	; 1afc0 <fputs@plt+0x11c04>
   1adb4:	bl	1a8e0 <fputs@plt+0x11524>
   1adb8:	vldr	d7, [r5, #8]
   1adbc:	vldr	d6, [r4]
   1adc0:	add	r0, sp, #48	; 0x30
   1adc4:	vmul.f64	d5, d7, d8
   1adc8:	vldr	d7, [r4, #8]
   1adcc:	vmov.f64	d0, d9
   1add0:	vstr	d5, [sp, #8]
   1add4:	vmov.f64	d1, d9
   1add8:	vnmls.f64	d0, d6, d8
   1addc:	vnmls.f64	d1, d7, d8
   1ade0:	bl	1504c <fputs@plt+0xbc90>
   1ade4:	mov	r0, r6
   1ade8:	add	r1, sp, #48	; 0x30
   1adec:	bl	15164 <fputs@plt+0xbda8>
   1adf0:	vldr	d2, [pc, #480]	; 1afd8 <fputs@plt+0x11c1c>
   1adf4:	vldr	d3, [r5, #8]
   1adf8:	mov	r3, r8
   1adfc:	add	r2, sp, #80	; 0x50
   1ae00:	add	r1, sp, #64	; 0x40
   1ae04:	mov	r0, r7
   1ae08:	vmov.f64	d4, d10
   1ae0c:	vstr	d0, [sp, #64]	; 0x40
   1ae10:	vstr	d1, [sp, #72]	; 0x48
   1ae14:	vmov.f64	d0, d9
   1ae18:	vldr	d1, [pc, #432]	; 1afd0 <fputs@plt+0x11c14>
   1ae1c:	bl	1a8e0 <fputs@plt+0x11524>
   1ae20:	vldr	d7, [r4]
   1ae24:	vldr	d1, [r4, #8]
   1ae28:	add	r0, sp, #16
   1ae2c:	vmov.f64	d0, d9
   1ae30:	vmul.f64	d1, d1, d8
   1ae34:	vnmls.f64	d0, d7, d8
   1ae38:	bl	1504c <fputs@plt+0xbc90>
   1ae3c:	add	r1, sp, #16
   1ae40:	mov	r0, r6
   1ae44:	bl	15164 <fputs@plt+0xbda8>
   1ae48:	vldr	d6, [r4]
   1ae4c:	vldr	d7, [r4, #8]
   1ae50:	add	r0, sp, #48	; 0x30
   1ae54:	vstr	d0, [sp, #32]
   1ae58:	vmov.f64	d0, d9
   1ae5c:	vstr	d1, [sp, #40]	; 0x28
   1ae60:	vmls.f64	d0, d6, d8
   1ae64:	vmul.f64	d1, d7, d8
   1ae68:	bl	1504c <fputs@plt+0xbc90>
   1ae6c:	mov	r0, r6
   1ae70:	add	r1, sp, #48	; 0x30
   1ae74:	bl	15164 <fputs@plt+0xbda8>
   1ae78:	add	r2, sp, #64	; 0x40
   1ae7c:	add	r3, sp, #80	; 0x50
   1ae80:	add	r1, sp, #32
   1ae84:	str	r8, [sp]
   1ae88:	mov	r0, r7
   1ae8c:	vldr	d7, [r5, #8]
   1ae90:	vstr	d0, [sp, #64]	; 0x40
   1ae94:	vstr	d1, [sp, #72]	; 0x48
   1ae98:	vmov.f64	d0, d7
   1ae9c:	vmov.f64	d1, d10
   1aea0:	bl	1a9e8 <fputs@plt+0x1162c>
   1aea4:	vldr	d6, [r4]
   1aea8:	vldr	d7, [r4, #8]
   1aeac:	add	r0, sp, #48	; 0x30
   1aeb0:	vmov.f64	d0, d9
   1aeb4:	vmov.f64	d1, d9
   1aeb8:	vmls.f64	d0, d6, d8
   1aebc:	vnmls.f64	d1, d7, d8
   1aec0:	bl	1504c <fputs@plt+0xbc90>
   1aec4:	mov	r0, r6
   1aec8:	add	r1, sp, #48	; 0x30
   1aecc:	bl	15164 <fputs@plt+0xbda8>
   1aed0:	mov	r3, r8
   1aed4:	vldr	d2, [pc, #260]	; 1afe0 <fputs@plt+0x11c24>
   1aed8:	add	r2, sp, #80	; 0x50
   1aedc:	vldr	d3, [r5, #8]
   1aee0:	add	r1, sp, #64	; 0x40
   1aee4:	mov	r0, r7
   1aee8:	vmov.f64	d4, d10
   1aeec:	vstr	d0, [sp, #64]	; 0x40
   1aef0:	vstr	d1, [sp, #72]	; 0x48
   1aef4:	vmov.f64	d0, d9
   1aef8:	vldr	d1, [pc, #216]	; 1afd8 <fputs@plt+0x11c1c>
   1aefc:	bl	1a8e0 <fputs@plt+0x11524>
   1af00:	vldr	d7, [r5, #8]
   1af04:	vldr	d6, [r4]
   1af08:	add	r0, sp, #48	; 0x30
   1af0c:	vmul.f64	d5, d7, d8
   1af10:	vldr	d7, [r4, #8]
   1af14:	vmov.f64	d0, d9
   1af18:	vstr	d5, [sp, #8]
   1af1c:	vmov.f64	d1, d9
   1af20:	vmls.f64	d0, d6, d8
   1af24:	vnmls.f64	d1, d7, d8
   1af28:	bl	1504c <fputs@plt+0xbc90>
   1af2c:	mov	r0, r6
   1af30:	add	r1, sp, #48	; 0x30
   1af34:	bl	15164 <fputs@plt+0xbda8>
   1af38:	vldr	d2, [pc, #168]	; 1afe8 <fputs@plt+0x11c2c>
   1af3c:	vldr	d3, [r5, #8]
   1af40:	mov	r3, r8
   1af44:	add	r2, sp, #80	; 0x50
   1af48:	add	r1, sp, #64	; 0x40
   1af4c:	mov	r0, r7
   1af50:	vmov.f64	d4, d11
   1af54:	vstr	d0, [sp, #64]	; 0x40
   1af58:	vstr	d1, [sp, #72]	; 0x48
   1af5c:	vmov.f64	d0, d9
   1af60:	vldr	d1, [pc, #120]	; 1afe0 <fputs@plt+0x11c24>
   1af64:	bl	1a8e0 <fputs@plt+0x11524>
   1af68:	vldr	d7, [r4, #8]
   1af6c:	vldr	d0, [r4]
   1af70:	add	r0, sp, #16
   1af74:	vmov.f64	d1, d9
   1af78:	vnmul.f64	d0, d0, d8
   1af7c:	vnmls.f64	d1, d7, d8
   1af80:	bl	1504c <fputs@plt+0xbc90>
   1af84:	add	r1, sp, #16
   1af88:	mov	r0, r6
   1af8c:	bl	15164 <fputs@plt+0xbda8>
   1af90:	vldr	d6, [r4]
   1af94:	vldr	d7, [r4, #8]
   1af98:	add	r0, sp, #48	; 0x30
   1af9c:	vstr	d1, [sp, #40]	; 0x28
   1afa0:	vmov.f64	d1, d9
   1afa4:	vstr	d0, [sp, #32]
   1afa8:	vmls.f64	d1, d7, d8
   1afac:	vnmul.f64	d0, d6, d8
   1afb0:	bl	1504c <fputs@plt+0xbc90>
   1afb4:	b	1b008 <fputs@plt+0x11c4c>
   1afb8:	vfmage.f64	d20, d31, d16
   1afbc:	svclt	0x00db7812
	...
   1afc8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1afcc:	svclt	0x00e921fb
   1afd0:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1afd4:	svccc	0x00e921fb
   1afd8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1afdc:	svccc	0x00f921fb
   1afe0:	svcvc	0x003321d2
   1afe4:	andmi	sp, r2, ip, ror r9
   1afe8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1afec:	strdmi	r2, [r9], -fp
   1aff0:	ldmdbcs	r5, {r1, r2, r3, r4, r6, fp, ip, sp}^
   1aff4:	andmi	r6, pc, sl, ror sl	; <UNPREDICTABLE>
   1aff8:	ldmib	fp!, {r0, r2, r4, r5, r6, r8, r9, sl, sp, pc}
   1affc:			; <UNDEFINED> instruction: 0x4015fdbb
   1b000:	svcvc	0x003321d2
   1b004:	andsmi	sp, r2, ip, ror r9
   1b008:	mov	r0, r6
   1b00c:	add	r1, sp, #48	; 0x30
   1b010:	bl	15164 <fputs@plt+0xbda8>
   1b014:	add	r2, sp, #64	; 0x40
   1b018:	add	r3, sp, #80	; 0x50
   1b01c:	add	r1, sp, #32
   1b020:	str	r8, [sp]
   1b024:	mov	r0, r7
   1b028:	vldr	d7, [r5, #8]
   1b02c:	vstr	d0, [sp, #64]	; 0x40
   1b030:	vstr	d1, [sp, #72]	; 0x48
   1b034:	vmov.f64	d0, d7
   1b038:	vmov.f64	d1, d11
   1b03c:	bl	1a9e8 <fputs@plt+0x1162c>
   1b040:	vldr	d6, [r4]
   1b044:	vldr	d7, [r4, #8]
   1b048:	add	r0, sp, #48	; 0x30
   1b04c:	vmov.f64	d0, d9
   1b050:	vmov.f64	d1, d9
   1b054:	vmls.f64	d0, d6, d8
   1b058:	vmls.f64	d1, d7, d8
   1b05c:	bl	1504c <fputs@plt+0xbc90>
   1b060:	mov	r0, r6
   1b064:	add	r1, sp, #48	; 0x30
   1b068:	bl	15164 <fputs@plt+0xbda8>
   1b06c:	mov	r3, r8
   1b070:	vldr	d2, [pc, #-136]	; 1aff0 <fputs@plt+0x11c34>
   1b074:	add	r2, sp, #80	; 0x50
   1b078:	vldr	d3, [r5, #8]
   1b07c:	add	r1, sp, #64	; 0x40
   1b080:	mov	r0, r7
   1b084:	vmov.f64	d4, d11
   1b088:	vstr	d0, [sp, #64]	; 0x40
   1b08c:	vstr	d1, [sp, #72]	; 0x48
   1b090:	vmov.f64	d0, d9
   1b094:	vldr	d1, [pc, #-180]	; 1afe8 <fputs@plt+0x11c2c>
   1b098:	bl	1a8e0 <fputs@plt+0x11524>
   1b09c:	vldr	d7, [r5, #8]
   1b0a0:	vldr	d6, [r4]
   1b0a4:	add	r0, sp, #48	; 0x30
   1b0a8:	vmul.f64	d5, d7, d8
   1b0ac:	vldr	d7, [r4, #8]
   1b0b0:	vmov.f64	d0, d9
   1b0b4:	vstr	d5, [sp, #8]
   1b0b8:	vmov.f64	d1, d9
   1b0bc:	vmls.f64	d0, d6, d8
   1b0c0:	vmls.f64	d1, d7, d8
   1b0c4:	bl	1504c <fputs@plt+0xbc90>
   1b0c8:	mov	r0, r6
   1b0cc:	add	r1, sp, #48	; 0x30
   1b0d0:	bl	15164 <fputs@plt+0xbda8>
   1b0d4:	vldr	d2, [pc, #-220]	; 1b000 <fputs@plt+0x11c44>
   1b0d8:	vldr	d3, [r5, #8]
   1b0dc:	mov	r3, r8
   1b0e0:	add	r2, sp, #80	; 0x50
   1b0e4:	add	r1, sp, #64	; 0x40
   1b0e8:	mov	r0, r7
   1b0ec:	vmov.f64	d4, d10
   1b0f0:	vstr	d0, [sp, #64]	; 0x40
   1b0f4:	vstr	d1, [sp, #72]	; 0x48
   1b0f8:	vmov.f64	d0, d9
   1b0fc:	vldr	d1, [pc, #-276]	; 1aff0 <fputs@plt+0x11c34>
   1b100:	bl	1a8e0 <fputs@plt+0x11524>
   1b104:	vldr	d7, [r4]
   1b108:	vldr	d1, [r4, #8]
   1b10c:	add	r0, sp, #16
   1b110:	vmov.f64	d0, d9
   1b114:	vnmul.f64	d1, d1, d8
   1b118:	vmls.f64	d0, d7, d8
   1b11c:	bl	1504c <fputs@plt+0xbc90>
   1b120:	add	r1, sp, #16
   1b124:	mov	r0, r6
   1b128:	bl	15164 <fputs@plt+0xbda8>
   1b12c:	vldr	d6, [r4]
   1b130:	vldr	d7, [r4, #8]
   1b134:	add	r0, sp, #48	; 0x30
   1b138:	vstr	d0, [sp, #32]
   1b13c:	vmov.f64	d0, d9
   1b140:	vstr	d1, [sp, #40]	; 0x28
   1b144:	vnmls.f64	d0, d6, d8
   1b148:	vnmul.f64	d1, d7, d8
   1b14c:	bl	1504c <fputs@plt+0xbc90>
   1b150:	mov	r0, r6
   1b154:	add	r1, sp, #48	; 0x30
   1b158:	bl	15164 <fputs@plt+0xbda8>
   1b15c:	add	r2, sp, #64	; 0x40
   1b160:	add	r3, sp, #80	; 0x50
   1b164:	add	r1, sp, #32
   1b168:	str	r8, [sp]
   1b16c:	mov	r0, r7
   1b170:	vldr	d7, [r5, #8]
   1b174:	vstr	d0, [sp, #64]	; 0x40
   1b178:	vstr	d1, [sp, #72]	; 0x48
   1b17c:	vmov.f64	d0, d7
   1b180:	vmov.f64	d1, d10
   1b184:	bl	1a9e8 <fputs@plt+0x1162c>
   1b188:	vldr	d6, [r4]
   1b18c:	vldr	d7, [r4, #8]
   1b190:	add	r0, sp, #48	; 0x30
   1b194:	vmov.f64	d0, d9
   1b198:	vmov.f64	d1, d9
   1b19c:	vnmls.f64	d0, d6, d8
   1b1a0:	vmls.f64	d1, d7, d8
   1b1a4:	bl	1504c <fputs@plt+0xbc90>
   1b1a8:	mov	r0, r6
   1b1ac:	add	r1, sp, #48	; 0x30
   1b1b0:	bl	15164 <fputs@plt+0xbda8>
   1b1b4:	mov	r3, r8
   1b1b8:	add	r2, sp, #80	; 0x50
   1b1bc:	add	r1, sp, #64	; 0x40
   1b1c0:	mov	r0, r7
   1b1c4:	vldr	d2, [pc, #-468]	; 1aff8 <fputs@plt+0x11c3c>
   1b1c8:	vldr	d3, [r5, #8]
   1b1cc:	vmov.f64	d4, d10
   1b1d0:	vstr	d0, [sp, #64]	; 0x40
   1b1d4:	vstr	d1, [sp, #72]	; 0x48
   1b1d8:	vmov.f64	d0, d9
   1b1dc:	vldr	d1, [pc, #-484]	; 1b000 <fputs@plt+0x11c44>
   1b1e0:	bl	1a8e0 <fputs@plt+0x11524>
   1b1e4:	ldr	r2, [sp, #108]	; 0x6c
   1b1e8:	ldr	r3, [r9]
   1b1ec:	cmp	r2, r3
   1b1f0:	bne	1b200 <fputs@plt+0x11e44>
   1b1f4:	add	sp, sp, #112	; 0x70
   1b1f8:	vpop	{d8-d11}
   1b1fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b200:	bl	92b4 <__stack_chk_fail@plt>
   1b204:	vsub.f64	d2, d2, d1
   1b208:	vldr	d6, [r3]
   1b20c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b210:	vpush	{d8-d13}
   1b214:	movw	r7, #1424	; 0x590
   1b218:	vldr	d8, [pc, #240]	; 1b310 <fputs@plt+0x11f54>
   1b21c:	movt	r7, #3
   1b220:	mov	r4, r3
   1b224:	sub	sp, sp, #76	; 0x4c
   1b228:	mov	r5, r0
   1b22c:	ldr	r3, [r7]
   1b230:	mov	r8, r1
   1b234:	mov	r9, r2
   1b238:	str	r3, [sp, #68]	; 0x44
   1b23c:	vcmp.f64	d6, #0.0
   1b240:	vmov.f64	d13, d1
   1b244:	vmrs	APSR_nzcv, fpscr
   1b248:	vmov.f64	d12, d0
   1b24c:	vmov.f64	d10, d3
   1b250:	vmov.f64	d11, d8
   1b254:	vmul.f64	d9, d2, d0
   1b258:	beq	1b278 <fputs@plt+0x11ebc>
   1b25c:	vsub.f64	d7, d10, d6
   1b260:	vadd.f64	d7, d8, d7
   1b264:	vcmpe.f64	d9, d7
   1b268:	vmrs	APSR_nzcv, fpscr
   1b26c:	bmi	1b2e4 <fputs@plt+0x11f28>
   1b270:	vmov.f64	d8, d7
   1b274:	vstr	d11, [r4]
   1b278:	mov	r1, sp
   1b27c:	add	r0, sp, #8
   1b280:	vdiv.f64	d0, d8, d12
   1b284:	vadd.f64	d0, d0, d13
   1b288:	bl	9170 <sincos@plt>
   1b28c:	ldr	r3, [r5]
   1b290:	vldr	d1, [sp, #8]
   1b294:	vldr	d0, [sp]
   1b298:	add	r0, sp, #16
   1b29c:	ldr	r6, [r3, #84]	; 0x54
   1b2a0:	bl	1504c <fputs@plt+0xbc90>
   1b2a4:	add	r0, sp, #16
   1b2a8:	vmov.f64	d0, d12
   1b2ac:	bl	151c8 <fputs@plt+0xbe0c>
   1b2b0:	mov	r0, r8
   1b2b4:	add	r1, sp, #32
   1b2b8:	vstr	d1, [sp, #40]	; 0x28
   1b2bc:	vstr	d0, [sp, #32]
   1b2c0:	bl	15164 <fputs@plt+0xbda8>
   1b2c4:	mov	r0, r5
   1b2c8:	add	r1, sp, #48	; 0x30
   1b2cc:	mov	r2, r9
   1b2d0:	vstr	d0, [sp, #48]	; 0x30
   1b2d4:	vstr	d1, [sp, #56]	; 0x38
   1b2d8:	blx	r6
   1b2dc:	vldr	d6, [r4]
   1b2e0:	b	1b25c <fputs@plt+0x11ea0>
   1b2e4:	vsub.f64	d8, d9, d8
   1b2e8:	ldr	r2, [sp, #68]	; 0x44
   1b2ec:	ldr	r3, [r7]
   1b2f0:	cmp	r2, r3
   1b2f4:	vadd.f64	d6, d6, d8
   1b2f8:	vstr	d6, [r4]
   1b2fc:	bne	1b30c <fputs@plt+0x11f50>
   1b300:	add	sp, sp, #76	; 0x4c
   1b304:	vpop	{d8-d13}
   1b308:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1b30c:	bl	92b4 <__stack_chk_fail@plt>
	...
   1b318:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b31c:	vpush	{d8-d11}
   1b320:	movw	r5, #1424	; 0x590
   1b324:	movt	r5, #3
   1b328:	mov	r6, r0
   1b32c:	mov	r0, r2
   1b330:	sub	sp, sp, #60	; 0x3c
   1b334:	ldr	r2, [r5]
   1b338:	mov	r9, r3
   1b33c:	vmov.f64	d10, d0
   1b340:	mov	r8, r1
   1b344:	ldr	r4, [sp, #120]	; 0x78
   1b348:	str	r2, [sp, #52]	; 0x34
   1b34c:	bl	15188 <fputs@plt+0xbdcc>
   1b350:	mov	r0, sp
   1b354:	vstr	d0, [sp]
   1b358:	vstr	d1, [sp, #8]
   1b35c:	bl	15200 <fputs@plt+0xbe44>
   1b360:	vcmp.f64	d0, #0.0
   1b364:	vmov.f64	d9, d0
   1b368:	vmrs	APSR_nzcv, fpscr
   1b36c:	beq	1b3f8 <fputs@plt+0x1203c>
   1b370:	vldr	d6, [r4]
   1b374:	vldr	d8, [pc, #156]	; 1b418 <fputs@plt+0x1205c>
   1b378:	vcmp.f64	d6, #0.0
   1b37c:	vmov.f64	d11, d8
   1b380:	vmrs	APSR_nzcv, fpscr
   1b384:	bne	1b3d8 <fputs@plt+0x1201c>
   1b388:	b	1b394 <fputs@plt+0x11fd8>
   1b38c:	vmov.f64	d8, d7
   1b390:	vstr	d11, [r4]
   1b394:	ldr	ip, [r6]
   1b398:	mov	r0, sp
   1b39c:	vdiv.f64	d0, d8, d9
   1b3a0:	ldr	r7, [ip, #84]	; 0x54
   1b3a4:	bl	151c8 <fputs@plt+0xbe0c>
   1b3a8:	mov	r0, r8
   1b3ac:	add	r1, sp, #16
   1b3b0:	vstr	d1, [sp, #24]
   1b3b4:	vstr	d0, [sp, #16]
   1b3b8:	bl	15164 <fputs@plt+0xbda8>
   1b3bc:	mov	r0, r6
   1b3c0:	add	r1, sp, #32
   1b3c4:	mov	r2, r9
   1b3c8:	vstr	d0, [sp, #32]
   1b3cc:	vstr	d1, [sp, #40]	; 0x28
   1b3d0:	blx	r7
   1b3d4:	vldr	d6, [r4]
   1b3d8:	vsub.f64	d7, d10, d6
   1b3dc:	vadd.f64	d7, d8, d7
   1b3e0:	vcmpe.f64	d9, d7
   1b3e4:	vmrs	APSR_nzcv, fpscr
   1b3e8:	bpl	1b38c <fputs@plt+0x11fd0>
   1b3ec:	vsub.f64	d8, d9, d8
   1b3f0:	vadd.f64	d6, d6, d8
   1b3f4:	vstr	d6, [r4]
   1b3f8:	ldr	r2, [sp, #52]	; 0x34
   1b3fc:	ldr	r3, [r5]
   1b400:	cmp	r2, r3
   1b404:	bne	1b414 <fputs@plt+0x12058>
   1b408:	add	sp, sp, #60	; 0x3c
   1b40c:	vpop	{d8-d11}
   1b410:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1b414:	bl	92b4 <__stack_chk_fail@plt>
	...
   1b420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b424:	vpush	{d8-d15}
   1b428:	vldr	d12, [pc, #1008]	; 1b820 <fputs@plt+0x12464>
   1b42c:	vmul.f64	d12, d0, d12
   1b430:	vldr	d5, [r2]
   1b434:	vldr	d7, [r3, #8]
   1b438:	mov	lr, r3
   1b43c:	mov	r4, r2
   1b440:	mov	r5, r1
   1b444:	mov	r6, r0
   1b448:	ldm	lr!, {r0, r1, r2, r3}
   1b44c:	vldr	d13, [pc, #980]	; 1b828 <fputs@plt+0x1246c>
   1b450:	sub	sp, sp, #116	; 0x74
   1b454:	vldr	d11, [pc, #980]	; 1b830 <fputs@plt+0x12474>
   1b458:	add	ip, sp, #80	; 0x50
   1b45c:	movw	r8, #1424	; 0x590
   1b460:	movt	r8, #3
   1b464:	mov	r7, #1
   1b468:	vstr	d11, [sp, #8]
   1b46c:	vldr	d14, [pc, #964]	; 1b838 <fputs@plt+0x1247c>
   1b470:	stmia	ip!, {r0, r1, r2, r3}
   1b474:	vldr	d15, [pc, #964]	; 1b840 <fputs@plt+0x12484>
   1b478:	movw	fp, #27258	; 0x6a7a
   1b47c:	ldm	lr, {r0, r1}
   1b480:	movt	fp, #16399	; 0x400f
   1b484:	ldr	r9, [r8]
   1b488:	str	r7, [sp, #80]	; 0x50
   1b48c:	add	r7, sp, #8
   1b490:	stm	ip, {r0, r1}
   1b494:	add	r0, sp, #48	; 0x30
   1b498:	str	r9, [sp, #108]	; 0x6c
   1b49c:	vadd.f64	d6, d5, d12
   1b4a0:	vdiv.f64	d10, d6, d7
   1b4a4:	vmov.f64	d4, #96	; 0x3f000000  0.5
   1b4a8:	vadd.f64	d10, d10, d4
   1b4ac:	vcvt.s32.f64	s20, d10
   1b4b0:	vmov	r3, s20
   1b4b4:	vmov.f64	d4, #96	; 0x3f000000  0.5
   1b4b8:	vmul.f64	d13, d0, d13
   1b4bc:	cmp	r3, #0
   1b4c0:	vcvtne.f64.s32	d10, s20
   1b4c4:	vdivne.f64	d10, d6, d10
   1b4c8:	vldr	d6, [r4, #8]
   1b4cc:	vadd.f64	d12, d12, d6
   1b4d0:	vdiv.f64	d3, d12, d7
   1b4d4:	vadd.f64	d4, d3, d4
   1b4d8:	vcvt.s32.f64	s8, d4
   1b4dc:	vmov	sl, s8
   1b4e0:	vmoveq.f64	d10, d7
   1b4e4:	vmov.f64	d9, #96	; 0x3f000000  0.5
   1b4e8:	vmov.f64	d8, d0
   1b4ec:	vmov.f64	d1, d8
   1b4f0:	cmp	sl, #0
   1b4f4:	movw	sl, #14430	; 0x385e
   1b4f8:	movt	sl, #10581	; 0x2955
   1b4fc:	vcvtne.f64.s32	d4, s8
   1b500:	vdivne.f64	d12, d12, d4
   1b504:	vnmls.f64	d0, d5, d9
   1b508:	vmls.f64	d1, d6, d9
   1b50c:	vmoveq.f64	d12, d7
   1b510:	vdiv.f64	d13, d7, d13
   1b514:	bl	1504c <fputs@plt+0xbc90>
   1b518:	mov	r0, r5
   1b51c:	add	r1, sp, #48	; 0x30
   1b520:	bl	15164 <fputs@plt+0xbda8>
   1b524:	mov	r3, r7
   1b528:	add	r2, sp, #80	; 0x50
   1b52c:	add	r1, sp, #64	; 0x40
   1b530:	mov	r0, r6
   1b534:	vstr	d0, [sp, #64]	; 0x40
   1b538:	vstr	d1, [sp, #72]	; 0x48
   1b53c:	vldr	d1, [pc, #772]	; 1b848 <fputs@plt+0x1248c>
   1b540:	vmov.f64	d2, d11
   1b544:	vmov.f64	d3, d12
   1b548:	vmov.f64	d0, d8
   1b54c:	bl	1b204 <fputs@plt+0x11e48>
   1b550:	vldr	d7, [r4, #8]
   1b554:	vldr	d0, [r4]
   1b558:	add	r0, sp, #16
   1b55c:	vmov.f64	d1, d8
   1b560:	vmul.f64	d0, d0, d9
   1b564:	vmls.f64	d1, d7, d9
   1b568:	bl	1504c <fputs@plt+0xbc90>
   1b56c:	add	r1, sp, #16
   1b570:	mov	r0, r5
   1b574:	bl	15164 <fputs@plt+0xbda8>
   1b578:	vldr	d6, [r4]
   1b57c:	vldr	d7, [r4, #8]
   1b580:	add	r0, sp, #48	; 0x30
   1b584:	vstr	d1, [sp, #40]	; 0x28
   1b588:	vmov.f64	d1, d8
   1b58c:	vstr	d0, [sp, #32]
   1b590:	vnmls.f64	d1, d7, d9
   1b594:	vmul.f64	d0, d6, d9
   1b598:	bl	1504c <fputs@plt+0xbc90>
   1b59c:	mov	r0, r5
   1b5a0:	add	r1, sp, #48	; 0x30
   1b5a4:	bl	15164 <fputs@plt+0xbda8>
   1b5a8:	add	r2, sp, #64	; 0x40
   1b5ac:	add	r3, sp, #80	; 0x50
   1b5b0:	add	r1, sp, #32
   1b5b4:	mov	r0, r6
   1b5b8:	str	r7, [sp]
   1b5bc:	vstr	d0, [sp, #64]	; 0x40
   1b5c0:	vmov.f64	d0, d12
   1b5c4:	vstr	d1, [sp, #72]	; 0x48
   1b5c8:	bl	1b318 <fputs@plt+0x11f5c>
   1b5cc:	vldr	d6, [r4]
   1b5d0:	vldr	d7, [r4, #8]
   1b5d4:	add	r0, sp, #48	; 0x30
   1b5d8:	vmov.f64	d0, d8
   1b5dc:	vmov.f64	d1, d8
   1b5e0:	vnmls.f64	d0, d6, d9
   1b5e4:	vnmls.f64	d1, d7, d9
   1b5e8:	bl	1504c <fputs@plt+0xbc90>
   1b5ec:	mov	r0, r5
   1b5f0:	add	r1, sp, #48	; 0x30
   1b5f4:	bl	15164 <fputs@plt+0xbda8>
   1b5f8:	mov	r3, r7
   1b5fc:	add	r2, sp, #80	; 0x50
   1b600:	add	r1, sp, #64	; 0x40
   1b604:	mov	r0, r6
   1b608:	vmov.f64	d3, d12
   1b60c:	vsub.f64	d2, d14, d13
   1b610:	vstr	d0, [sp, #64]	; 0x40
   1b614:	vstr	d1, [sp, #72]	; 0x48
   1b618:	vmov.f64	d0, d8
   1b61c:	vmov.f64	d1, d11
   1b620:	bl	1b204 <fputs@plt+0x11e48>
   1b624:	vldr	d6, [r4]
   1b628:	vldr	d7, [r4, #8]
   1b62c:	add	r0, sp, #48	; 0x30
   1b630:	vstr	d11, [sp, #8]
   1b634:	vmov.f64	d0, d8
   1b638:	vmov.f64	d1, d8
   1b63c:	vnmls.f64	d0, d6, d9
   1b640:	vnmls.f64	d1, d7, d9
   1b644:	bl	1504c <fputs@plt+0xbc90>
   1b648:	mov	r0, r5
   1b64c:	add	r1, sp, #48	; 0x30
   1b650:	bl	15164 <fputs@plt+0xbda8>
   1b654:	vldr	d2, [pc, #500]	; 1b850 <fputs@plt+0x12494>
   1b658:	mov	r3, r7
   1b65c:	add	r2, sp, #80	; 0x50
   1b660:	add	r1, sp, #64	; 0x40
   1b664:	mov	r0, r6
   1b668:	vmov.f64	d3, d10
   1b66c:	vstr	d0, [sp, #64]	; 0x40
   1b670:	vstr	d1, [sp, #72]	; 0x48
   1b674:	vmov.f64	d0, d8
   1b678:	vmov.f64	d1, d14
   1b67c:	bl	1b204 <fputs@plt+0x11e48>
   1b680:	vldr	d7, [r4]
   1b684:	vldr	d1, [r4, #8]
   1b688:	add	r0, sp, #16
   1b68c:	vmov.f64	d0, d8
   1b690:	vmul.f64	d1, d1, d9
   1b694:	vnmls.f64	d0, d7, d9
   1b698:	bl	1504c <fputs@plt+0xbc90>
   1b69c:	add	r1, sp, #16
   1b6a0:	mov	r0, r5
   1b6a4:	bl	15164 <fputs@plt+0xbda8>
   1b6a8:	vldr	d6, [r4]
   1b6ac:	vldr	d7, [r4, #8]
   1b6b0:	add	r0, sp, #48	; 0x30
   1b6b4:	vstr	d0, [sp, #32]
   1b6b8:	vmov.f64	d0, d8
   1b6bc:	vstr	d1, [sp, #40]	; 0x28
   1b6c0:	vmls.f64	d0, d6, d9
   1b6c4:	vmul.f64	d1, d7, d9
   1b6c8:	bl	1504c <fputs@plt+0xbc90>
   1b6cc:	mov	r0, r5
   1b6d0:	add	r1, sp, #48	; 0x30
   1b6d4:	bl	15164 <fputs@plt+0xbda8>
   1b6d8:	add	r2, sp, #64	; 0x40
   1b6dc:	add	r3, sp, #80	; 0x50
   1b6e0:	add	r1, sp, #32
   1b6e4:	mov	r0, r6
   1b6e8:	str	r7, [sp]
   1b6ec:	vstr	d0, [sp, #64]	; 0x40
   1b6f0:	vmov.f64	d0, d10
   1b6f4:	vstr	d1, [sp, #72]	; 0x48
   1b6f8:	bl	1b318 <fputs@plt+0x11f5c>
   1b6fc:	vldr	d6, [r4]
   1b700:	vldr	d7, [r4, #8]
   1b704:	add	r0, sp, #48	; 0x30
   1b708:	vmov.f64	d0, d8
   1b70c:	vmov.f64	d1, d8
   1b710:	vmls.f64	d0, d6, d9
   1b714:	vnmls.f64	d1, d7, d9
   1b718:	bl	1504c <fputs@plt+0xbc90>
   1b71c:	mov	r0, r5
   1b720:	add	r1, sp, #48	; 0x30
   1b724:	bl	15164 <fputs@plt+0xbda8>
   1b728:	mov	r3, r7
   1b72c:	add	r2, sp, #80	; 0x50
   1b730:	add	r1, sp, #64	; 0x40
   1b734:	mov	r0, r6
   1b738:	vmov.f64	d3, d10
   1b73c:	vsub.f64	d2, d15, d13
   1b740:	vstr	d0, [sp, #64]	; 0x40
   1b744:	vstr	d1, [sp, #72]	; 0x48
   1b748:	vldr	d1, [pc, #256]	; 1b850 <fputs@plt+0x12494>
   1b74c:	vmov.f64	d0, d8
   1b750:	bl	1b204 <fputs@plt+0x11e48>
   1b754:	vldr	d6, [r4]
   1b758:	vldr	d7, [r4, #8]
   1b75c:	add	r0, sp, #48	; 0x30
   1b760:	vstr	d11, [sp, #8]
   1b764:	vmov.f64	d0, d8
   1b768:	vmov.f64	d1, d8
   1b76c:	vmls.f64	d0, d6, d9
   1b770:	vnmls.f64	d1, d7, d9
   1b774:	bl	1504c <fputs@plt+0xbc90>
   1b778:	mov	r0, r5
   1b77c:	add	r1, sp, #48	; 0x30
   1b780:	bl	15164 <fputs@plt+0xbda8>
   1b784:	vldr	d2, [pc, #204]	; 1b858 <fputs@plt+0x1249c>
   1b788:	mov	r3, r7
   1b78c:	add	r2, sp, #80	; 0x50
   1b790:	add	r1, sp, #64	; 0x40
   1b794:	mov	r0, r6
   1b798:	vmov.f64	d3, d12
   1b79c:	vstr	d0, [sp, #64]	; 0x40
   1b7a0:	vstr	d1, [sp, #72]	; 0x48
   1b7a4:	vmov.f64	d0, d8
   1b7a8:	vmov.f64	d1, d15
   1b7ac:	bl	1b204 <fputs@plt+0x11e48>
   1b7b0:	vldr	d7, [r4, #8]
   1b7b4:	vldr	d0, [r4]
   1b7b8:	add	r0, sp, #16
   1b7bc:	vmov.f64	d1, d8
   1b7c0:	vnmul.f64	d0, d0, d9
   1b7c4:	vnmls.f64	d1, d7, d9
   1b7c8:	bl	1504c <fputs@plt+0xbc90>
   1b7cc:	add	r1, sp, #16
   1b7d0:	mov	r0, r5
   1b7d4:	bl	15164 <fputs@plt+0xbda8>
   1b7d8:	vldr	d6, [r4]
   1b7dc:	vldr	d7, [r4, #8]
   1b7e0:	add	r0, sp, #48	; 0x30
   1b7e4:	vstr	d1, [sp, #40]	; 0x28
   1b7e8:	vmov.f64	d1, d8
   1b7ec:	vstr	d0, [sp, #32]
   1b7f0:	vmls.f64	d1, d7, d9
   1b7f4:	vnmul.f64	d0, d6, d9
   1b7f8:	bl	1504c <fputs@plt+0xbc90>
   1b7fc:	mov	r0, r5
   1b800:	add	r1, sp, #48	; 0x30
   1b804:	bl	15164 <fputs@plt+0xbda8>
   1b808:	add	r2, sp, #64	; 0x40
   1b80c:	add	r3, sp, #80	; 0x50
   1b810:	add	r1, sp, #32
   1b814:	mov	r0, r6
   1b818:	str	r7, [sp]
   1b81c:	b	1b870 <fputs@plt+0x124b4>
   1b820:	vfmage.f64	d20, d31, d16
   1b824:	svclt	0x00db7812
   1b828:	andeq	r0, r0, r0
   1b82c:	subsmi	r0, r9, r0
	...
   1b838:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1b83c:	svccc	0x00e921fb
   1b840:	svcvc	0x003321d2
   1b844:	andmi	sp, r2, ip, ror r9
   1b848:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1b84c:	svclt	0x00e921fb
   1b850:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1b854:	svccc	0x00f921fb
   1b858:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1b85c:	strdmi	r2, [r9], -fp
   1b860:	ldmib	fp!, {r0, r2, r4, r5, r6, r8, r9, sl, sp, pc}
   1b864:			; <UNDEFINED> instruction: 0x4015fdbb
   1b868:	svcvc	0x003321d2
   1b86c:	andsmi	sp, r2, ip, ror r9
   1b870:	vstr	d0, [sp, #64]	; 0x40
   1b874:	vmov.f64	d0, d12
   1b878:	vstr	d1, [sp, #72]	; 0x48
   1b87c:	bl	1b318 <fputs@plt+0x11f5c>
   1b880:	vldr	d6, [r4]
   1b884:	vldr	d7, [r4, #8]
   1b888:	add	r0, sp, #48	; 0x30
   1b88c:	vmov.f64	d0, d8
   1b890:	vmov.f64	d1, d8
   1b894:	vmls.f64	d0, d6, d9
   1b898:	vmls.f64	d1, d7, d9
   1b89c:	bl	1504c <fputs@plt+0xbc90>
   1b8a0:	mov	r0, r5
   1b8a4:	add	r1, sp, #48	; 0x30
   1b8a8:	bl	15164 <fputs@plt+0xbda8>
   1b8ac:	vmov	d7, sl, fp
   1b8b0:	mov	r3, r7
   1b8b4:	add	r2, sp, #80	; 0x50
   1b8b8:	add	r1, sp, #64	; 0x40
   1b8bc:	mov	r0, r6
   1b8c0:	vsub.f64	d2, d7, d13
   1b8c4:	vstr	d0, [sp, #64]	; 0x40
   1b8c8:	vstr	d1, [sp, #72]	; 0x48
   1b8cc:	vmov.f64	d3, d12
   1b8d0:	vldr	d1, [pc, #-128]	; 1b858 <fputs@plt+0x1249c>
   1b8d4:	vmov.f64	d0, d8
   1b8d8:	bl	1b204 <fputs@plt+0x11e48>
   1b8dc:	vldr	d6, [r4]
   1b8e0:	vldr	d7, [r4, #8]
   1b8e4:	add	r0, sp, #48	; 0x30
   1b8e8:	vstr	d11, [sp, #8]
   1b8ec:	vmov.f64	d0, d8
   1b8f0:	vmov.f64	d1, d8
   1b8f4:	vmls.f64	d0, d6, d9
   1b8f8:	vmls.f64	d1, d7, d9
   1b8fc:	bl	1504c <fputs@plt+0xbc90>
   1b900:	mov	r0, r5
   1b904:	add	r1, sp, #48	; 0x30
   1b908:	bl	15164 <fputs@plt+0xbda8>
   1b90c:	vldr	d2, [pc, #-172]	; 1b868 <fputs@plt+0x124ac>
   1b910:	mov	r3, r7
   1b914:	add	r2, sp, #80	; 0x50
   1b918:	add	r1, sp, #64	; 0x40
   1b91c:	mov	r0, r6
   1b920:	vmov.f64	d3, d10
   1b924:	vstr	d0, [sp, #64]	; 0x40
   1b928:	vstr	d1, [sp, #72]	; 0x48
   1b92c:	vmov.f64	d0, d8
   1b930:	vmov	d1, sl, fp
   1b934:	bl	1b204 <fputs@plt+0x11e48>
   1b938:	vldr	d7, [r4]
   1b93c:	vldr	d1, [r4, #8]
   1b940:	add	r0, sp, #16
   1b944:	vmov.f64	d0, d8
   1b948:	vnmul.f64	d1, d1, d9
   1b94c:	vmls.f64	d0, d7, d9
   1b950:	bl	1504c <fputs@plt+0xbc90>
   1b954:	add	r1, sp, #16
   1b958:	mov	r0, r5
   1b95c:	bl	15164 <fputs@plt+0xbda8>
   1b960:	vldr	d6, [r4]
   1b964:	vldr	d7, [r4, #8]
   1b968:	add	r0, sp, #48	; 0x30
   1b96c:	vstr	d0, [sp, #32]
   1b970:	vmov.f64	d0, d8
   1b974:	vstr	d1, [sp, #40]	; 0x28
   1b978:	vnmls.f64	d0, d6, d9
   1b97c:	vnmul.f64	d1, d7, d9
   1b980:	bl	1504c <fputs@plt+0xbc90>
   1b984:	mov	r0, r5
   1b988:	add	r1, sp, #48	; 0x30
   1b98c:	bl	15164 <fputs@plt+0xbda8>
   1b990:	add	r2, sp, #64	; 0x40
   1b994:	add	r3, sp, #80	; 0x50
   1b998:	add	r1, sp, #32
   1b99c:	mov	r0, r6
   1b9a0:	str	r7, [sp]
   1b9a4:	vstr	d0, [sp, #64]	; 0x40
   1b9a8:	vmov.f64	d0, d10
   1b9ac:	vstr	d1, [sp, #72]	; 0x48
   1b9b0:	bl	1b318 <fputs@plt+0x11f5c>
   1b9b4:	vldr	d6, [r4]
   1b9b8:	vldr	d7, [r4, #8]
   1b9bc:	add	r0, sp, #48	; 0x30
   1b9c0:	vmov.f64	d0, d8
   1b9c4:	vmov.f64	d1, d8
   1b9c8:	vnmls.f64	d0, d6, d9
   1b9cc:	vmls.f64	d1, d7, d9
   1b9d0:	bl	1504c <fputs@plt+0xbc90>
   1b9d4:	mov	r0, r5
   1b9d8:	add	r1, sp, #48	; 0x30
   1b9dc:	bl	15164 <fputs@plt+0xbda8>
   1b9e0:	mov	r3, r7
   1b9e4:	add	r2, sp, #80	; 0x50
   1b9e8:	add	r1, sp, #64	; 0x40
   1b9ec:	mov	r0, r6
   1b9f0:	vldr	d2, [pc, #-408]	; 1b860 <fputs@plt+0x124a4>
   1b9f4:	vmov.f64	d3, d10
   1b9f8:	vsub.f64	d2, d2, d13
   1b9fc:	vstr	d0, [sp, #64]	; 0x40
   1ba00:	vstr	d1, [sp, #72]	; 0x48
   1ba04:	vldr	d1, [pc, #-420]	; 1b868 <fputs@plt+0x124ac>
   1ba08:	vmov.f64	d0, d8
   1ba0c:	bl	1b204 <fputs@plt+0x11e48>
   1ba10:	ldr	r2, [sp, #108]	; 0x6c
   1ba14:	ldr	r3, [r8]
   1ba18:	cmp	r2, r3
   1ba1c:	bne	1ba2c <fputs@plt+0x12670>
   1ba20:	add	sp, sp, #116	; 0x74
   1ba24:	vpop	{d8-d15}
   1ba28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ba2c:	bl	92b4 <__stack_chk_fail@plt>
   1ba30:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ba34:	vpush	{d8-d10}
   1ba38:	movw	r8, #1424	; 0x590
   1ba3c:	movt	r8, #3
   1ba40:	mov	r4, r2
   1ba44:	sub	sp, sp, #132	; 0x84
   1ba48:	vmov.f64	d9, d0
   1ba4c:	ldr	r2, [r8]
   1ba50:	mov	r5, r0
   1ba54:	mov	r0, r4
   1ba58:	mov	r6, r1
   1ba5c:	mov	r7, r3
   1ba60:	vmov.f64	d0, #0	; 0x40000000  2.0
   1ba64:	str	r2, [sp, #124]	; 0x7c
   1ba68:	bl	151ac <fputs@plt+0xbdf0>
   1ba6c:	add	r1, sp, #104	; 0x68
   1ba70:	mov	r0, r6
   1ba74:	vmov.f64	d8, #96	; 0x3f000000  0.5
   1ba78:	vneg.f64	d10, d9
   1ba7c:	vstr	d0, [sp, #104]	; 0x68
   1ba80:	vstr	d1, [sp, #112]	; 0x70
   1ba84:	bl	15188 <fputs@plt+0xbdcc>
   1ba88:	ldr	r3, [r5]
   1ba8c:	add	r0, sp, #24
   1ba90:	ldr	r9, [r3, #36]	; 0x24
   1ba94:	vstr	d0, [sp, #8]
   1ba98:	vstr	d1, [sp, #16]
   1ba9c:	vldr	d0, [pc, #1012]	; 1be98 <fputs@plt+0x12adc>
   1baa0:	vmov.f64	d1, d9
   1baa4:	bl	1504c <fputs@plt+0xbc90>
   1baa8:	add	r1, sp, #24
   1baac:	add	r0, sp, #8
   1bab0:	bl	15164 <fputs@plt+0xbda8>
   1bab4:	add	r0, sp, #56	; 0x38
   1bab8:	vstr	d0, [sp, #40]	; 0x28
   1babc:	vstr	d1, [sp, #48]	; 0x30
   1bac0:	vmov.f64	d0, d9
   1bac4:	vmov.f64	d1, d9
   1bac8:	bl	1504c <fputs@plt+0xbc90>
   1bacc:	add	r1, sp, #56	; 0x38
   1bad0:	add	r0, sp, #8
   1bad4:	bl	15164 <fputs@plt+0xbda8>
   1bad8:	add	r0, sp, #88	; 0x58
   1badc:	vstr	d0, [sp, #72]	; 0x48
   1bae0:	vstr	d1, [sp, #80]	; 0x50
   1bae4:	vmov.f64	d0, d9
   1bae8:	vldr	d1, [pc, #936]	; 1be98 <fputs@plt+0x12adc>
   1baec:	bl	1504c <fputs@plt+0xbc90>
   1baf0:	add	r0, sp, #8
   1baf4:	add	r1, sp, #88	; 0x58
   1baf8:	bl	15164 <fputs@plt+0xbda8>
   1bafc:	add	r2, sp, #72	; 0x48
   1bb00:	add	r3, sp, #104	; 0x68
   1bb04:	add	r1, sp, #40	; 0x28
   1bb08:	mov	r0, r5
   1bb0c:	str	r7, [sp]
   1bb10:	vstr	d0, [sp, #104]	; 0x68
   1bb14:	vstr	d1, [sp, #112]	; 0x70
   1bb18:	blx	r9
   1bb1c:	vldr	d0, [r4]
   1bb20:	vldr	d1, [r4, #8]
   1bb24:	vnmul.f64	d0, d0, d8
   1bb28:	add	r0, sp, #104	; 0x68
   1bb2c:	vmul.f64	d1, d1, d8
   1bb30:	bl	1504c <fputs@plt+0xbc90>
   1bb34:	add	r1, sp, #104	; 0x68
   1bb38:	mov	r0, r6
   1bb3c:	bl	15164 <fputs@plt+0xbda8>
   1bb40:	ldr	r3, [r5]
   1bb44:	add	r0, sp, #24
   1bb48:	ldr	r9, [r3, #36]	; 0x24
   1bb4c:	vstr	d0, [sp, #8]
   1bb50:	vstr	d1, [sp, #16]
   1bb54:	vmov.f64	d0, d9
   1bb58:	vldr	d1, [pc, #824]	; 1be98 <fputs@plt+0x12adc>
   1bb5c:	bl	1504c <fputs@plt+0xbc90>
   1bb60:	add	r1, sp, #24
   1bb64:	add	r0, sp, #8
   1bb68:	bl	15164 <fputs@plt+0xbda8>
   1bb6c:	add	r0, sp, #56	; 0x38
   1bb70:	vstr	d0, [sp, #40]	; 0x28
   1bb74:	vstr	d1, [sp, #48]	; 0x30
   1bb78:	vmov.f64	d0, d9
   1bb7c:	vmov.f64	d1, d10
   1bb80:	bl	1504c <fputs@plt+0xbc90>
   1bb84:	add	r1, sp, #56	; 0x38
   1bb88:	add	r0, sp, #8
   1bb8c:	bl	15164 <fputs@plt+0xbda8>
   1bb90:	add	r0, sp, #88	; 0x58
   1bb94:	vstr	d0, [sp, #72]	; 0x48
   1bb98:	vstr	d1, [sp, #80]	; 0x50
   1bb9c:	vldr	d0, [pc, #756]	; 1be98 <fputs@plt+0x12adc>
   1bba0:	vmov.f64	d1, d10
   1bba4:	bl	1504c <fputs@plt+0xbc90>
   1bba8:	add	r0, sp, #8
   1bbac:	add	r1, sp, #88	; 0x58
   1bbb0:	bl	15164 <fputs@plt+0xbda8>
   1bbb4:	add	r2, sp, #72	; 0x48
   1bbb8:	add	r3, sp, #104	; 0x68
   1bbbc:	add	r1, sp, #40	; 0x28
   1bbc0:	mov	r0, r5
   1bbc4:	str	r7, [sp]
   1bbc8:	vstr	d1, [sp, #112]	; 0x70
   1bbcc:	vstr	d0, [sp, #104]	; 0x68
   1bbd0:	blx	r9
   1bbd4:	vmov.f64	d0, #0	; 0x40000000  2.0
   1bbd8:	mov	r0, r4
   1bbdc:	bl	151ac <fputs@plt+0xbdf0>
   1bbe0:	add	r1, sp, #104	; 0x68
   1bbe4:	mov	r0, r6
   1bbe8:	vstr	d1, [sp, #112]	; 0x70
   1bbec:	vstr	d0, [sp, #104]	; 0x68
   1bbf0:	bl	15164 <fputs@plt+0xbda8>
   1bbf4:	ldr	r3, [r5]
   1bbf8:	add	r0, sp, #24
   1bbfc:	ldr	r9, [r3, #36]	; 0x24
   1bc00:	vstr	d1, [sp, #16]
   1bc04:	vstr	d0, [sp, #8]
   1bc08:	vmov.f64	d1, d10
   1bc0c:	vldr	d0, [pc, #644]	; 1be98 <fputs@plt+0x12adc>
   1bc10:	bl	1504c <fputs@plt+0xbc90>
   1bc14:	add	r1, sp, #24
   1bc18:	add	r0, sp, #8
   1bc1c:	bl	15164 <fputs@plt+0xbda8>
   1bc20:	add	r0, sp, #56	; 0x38
   1bc24:	vstr	d0, [sp, #40]	; 0x28
   1bc28:	vstr	d1, [sp, #48]	; 0x30
   1bc2c:	vmov.f64	d0, d10
   1bc30:	vmov.f64	d1, d10
   1bc34:	bl	1504c <fputs@plt+0xbc90>
   1bc38:	add	r1, sp, #56	; 0x38
   1bc3c:	add	r0, sp, #8
   1bc40:	bl	15164 <fputs@plt+0xbda8>
   1bc44:	add	r0, sp, #88	; 0x58
   1bc48:	vstr	d0, [sp, #72]	; 0x48
   1bc4c:	vstr	d1, [sp, #80]	; 0x50
   1bc50:	vmov.f64	d0, d10
   1bc54:	vldr	d1, [pc, #572]	; 1be98 <fputs@plt+0x12adc>
   1bc58:	bl	1504c <fputs@plt+0xbc90>
   1bc5c:	add	r0, sp, #8
   1bc60:	add	r1, sp, #88	; 0x58
   1bc64:	bl	15164 <fputs@plt+0xbda8>
   1bc68:	add	r2, sp, #72	; 0x48
   1bc6c:	add	r3, sp, #104	; 0x68
   1bc70:	add	r1, sp, #40	; 0x28
   1bc74:	mov	r0, r5
   1bc78:	str	r7, [sp]
   1bc7c:	vstr	d0, [sp, #104]	; 0x68
   1bc80:	vstr	d1, [sp, #112]	; 0x70
   1bc84:	blx	r9
   1bc88:	vldr	d0, [r4]
   1bc8c:	vldr	d1, [r4, #8]
   1bc90:	vmul.f64	d0, d0, d8
   1bc94:	add	r0, sp, #104	; 0x68
   1bc98:	vnmul.f64	d1, d1, d8
   1bc9c:	bl	1504c <fputs@plt+0xbc90>
   1bca0:	add	r1, sp, #104	; 0x68
   1bca4:	mov	r0, r6
   1bca8:	bl	15164 <fputs@plt+0xbda8>
   1bcac:	ldr	r3, [r5]
   1bcb0:	add	r0, sp, #24
   1bcb4:	ldr	r9, [r3, #36]	; 0x24
   1bcb8:	vstr	d0, [sp, #8]
   1bcbc:	vstr	d1, [sp, #16]
   1bcc0:	vmov.f64	d0, d10
   1bcc4:	vldr	d1, [pc, #460]	; 1be98 <fputs@plt+0x12adc>
   1bcc8:	bl	1504c <fputs@plt+0xbc90>
   1bccc:	add	r1, sp, #24
   1bcd0:	add	r0, sp, #8
   1bcd4:	bl	15164 <fputs@plt+0xbda8>
   1bcd8:	add	r0, sp, #56	; 0x38
   1bcdc:	vstr	d0, [sp, #40]	; 0x28
   1bce0:	vstr	d1, [sp, #48]	; 0x30
   1bce4:	vmov.f64	d0, d10
   1bce8:	vmov.f64	d1, d9
   1bcec:	bl	1504c <fputs@plt+0xbc90>
   1bcf0:	add	r1, sp, #56	; 0x38
   1bcf4:	add	r0, sp, #8
   1bcf8:	bl	15164 <fputs@plt+0xbda8>
   1bcfc:	add	r0, sp, #88	; 0x58
   1bd00:	vstr	d0, [sp, #72]	; 0x48
   1bd04:	vstr	d1, [sp, #80]	; 0x50
   1bd08:	vldr	d0, [pc, #392]	; 1be98 <fputs@plt+0x12adc>
   1bd0c:	vmov.f64	d1, d9
   1bd10:	bl	1504c <fputs@plt+0xbc90>
   1bd14:	add	r0, sp, #8
   1bd18:	add	r1, sp, #88	; 0x58
   1bd1c:	bl	15164 <fputs@plt+0xbda8>
   1bd20:	add	r2, sp, #72	; 0x48
   1bd24:	add	r3, sp, #104	; 0x68
   1bd28:	add	r1, sp, #40	; 0x28
   1bd2c:	mov	r0, r5
   1bd30:	str	r7, [sp]
   1bd34:	vstr	d0, [sp, #104]	; 0x68
   1bd38:	vstr	d1, [sp, #112]	; 0x70
   1bd3c:	blx	r9
   1bd40:	add	r0, sp, #40	; 0x28
   1bd44:	bl	15038 <fputs@plt+0xbc7c>
   1bd48:	vmov.f64	d1, d9
   1bd4c:	vldr	d7, [r4, #8]
   1bd50:	vldr	d0, [r4]
   1bd54:	add	r0, sp, #104	; 0x68
   1bd58:	vnmls.f64	d1, d7, d8
   1bd5c:	vnmul.f64	d0, d0, d8
   1bd60:	bl	1504c <fputs@plt+0xbc90>
   1bd64:	add	r1, sp, #104	; 0x68
   1bd68:	mov	r0, r6
   1bd6c:	bl	15164 <fputs@plt+0xbda8>
   1bd70:	ldr	r3, [r5]
   1bd74:	mov	r0, r4
   1bd78:	ldr	r9, [r3, #24]
   1bd7c:	vstr	d0, [sp, #40]	; 0x28
   1bd80:	vmov.f64	d0, #0	; 0x40000000  2.0
   1bd84:	vstr	d1, [sp, #48]	; 0x30
   1bd88:	bl	151ac <fputs@plt+0xbdf0>
   1bd8c:	add	r1, sp, #56	; 0x38
   1bd90:	mov	r0, r6
   1bd94:	vstr	d1, [sp, #64]	; 0x40
   1bd98:	vstr	d0, [sp, #56]	; 0x38
   1bd9c:	bl	15188 <fputs@plt+0xbdcc>
   1bda0:	add	r0, sp, #88	; 0x58
   1bda4:	vstr	d1, [sp, #80]	; 0x50
   1bda8:	vstr	d0, [sp, #72]	; 0x48
   1bdac:	vmov.f64	d1, d9
   1bdb0:	vldr	d0, [pc, #224]	; 1be98 <fputs@plt+0x12adc>
   1bdb4:	bl	1504c <fputs@plt+0xbc90>
   1bdb8:	add	r0, sp, #72	; 0x48
   1bdbc:	add	r1, sp, #88	; 0x58
   1bdc0:	bl	15164 <fputs@plt+0xbda8>
   1bdc4:	add	r2, sp, #40	; 0x28
   1bdc8:	mov	r3, #1
   1bdcc:	add	r1, sp, #104	; 0x68
   1bdd0:	mov	r0, r5
   1bdd4:	str	r7, [sp]
   1bdd8:	vstr	d0, [sp, #104]	; 0x68
   1bddc:	vstr	d1, [sp, #112]	; 0x70
   1bde0:	blx	r9
   1bde4:	vmov.f64	d0, d9
   1bde8:	vldr	d7, [r4]
   1bdec:	vldr	d1, [r4, #8]
   1bdf0:	add	r0, sp, #104	; 0x68
   1bdf4:	vnmls.f64	d0, d7, d8
   1bdf8:	vmul.f64	d1, d1, d8
   1bdfc:	bl	1504c <fputs@plt+0xbc90>
   1be00:	add	r1, sp, #104	; 0x68
   1be04:	mov	r0, r6
   1be08:	bl	15164 <fputs@plt+0xbda8>
   1be0c:	ldr	r3, [r5]
   1be10:	vldr	d6, [r4]
   1be14:	vldr	d7, [r4, #8]
   1be18:	add	r0, sp, #88	; 0x58
   1be1c:	ldr	r9, [r3, #24]
   1be20:	vstr	d0, [sp, #40]	; 0x28
   1be24:	vmov.f64	d0, d9
   1be28:	vstr	d1, [sp, #48]	; 0x30
   1be2c:	vmls.f64	d0, d6, d8
   1be30:	vmul.f64	d1, d7, d8
   1be34:	bl	1504c <fputs@plt+0xbc90>
   1be38:	mov	r0, r6
   1be3c:	add	r1, sp, #88	; 0x58
   1be40:	bl	15164 <fputs@plt+0xbda8>
   1be44:	add	r2, sp, #40	; 0x28
   1be48:	mov	r3, #1
   1be4c:	add	r1, sp, #104	; 0x68
   1be50:	mov	r0, r5
   1be54:	str	r7, [sp]
   1be58:	vstr	d0, [sp, #104]	; 0x68
   1be5c:	vstr	d1, [sp, #112]	; 0x70
   1be60:	blx	r9
   1be64:	vmov.f64	d1, d9
   1be68:	vldr	d7, [r4, #8]
   1be6c:	vldr	d0, [r4]
   1be70:	add	r0, sp, #104	; 0x68
   1be74:	vmls.f64	d1, d7, d8
   1be78:	vmul.f64	d0, d0, d8
   1be7c:	bl	1504c <fputs@plt+0xbc90>
   1be80:	add	r1, sp, #104	; 0x68
   1be84:	mov	r0, r6
   1be88:	bl	15164 <fputs@plt+0xbda8>
   1be8c:	ldr	r3, [r5]
   1be90:	b	1bea0 <fputs@plt+0x12ae4>
   1be94:	nop	{0}
	...
   1bea0:	vldr	d6, [r4]
   1bea4:	vldr	d7, [r4, #8]
   1bea8:	add	r0, sp, #88	; 0x58
   1beac:	ldr	r9, [r3, #24]
   1beb0:	vstr	d1, [sp, #48]	; 0x30
   1beb4:	vmov.f64	d1, d9
   1beb8:	vstr	d0, [sp, #40]	; 0x28
   1bebc:	vnmls.f64	d1, d7, d8
   1bec0:	vmul.f64	d0, d6, d8
   1bec4:	bl	1504c <fputs@plt+0xbc90>
   1bec8:	mov	r0, r6
   1becc:	add	r1, sp, #88	; 0x58
   1bed0:	bl	15164 <fputs@plt+0xbda8>
   1bed4:	add	r2, sp, #40	; 0x28
   1bed8:	mov	r3, #1
   1bedc:	add	r1, sp, #104	; 0x68
   1bee0:	mov	r0, r5
   1bee4:	str	r7, [sp]
   1bee8:	vstr	d0, [sp, #104]	; 0x68
   1beec:	vstr	d1, [sp, #112]	; 0x70
   1bef0:	blx	r9
   1bef4:	vmov.f64	d0, d9
   1bef8:	vldr	d7, [r4]
   1befc:	vldr	d1, [r4, #8]
   1bf00:	add	r0, sp, #104	; 0x68
   1bf04:	vmls.f64	d0, d7, d8
   1bf08:	vnmul.f64	d1, d1, d8
   1bf0c:	bl	1504c <fputs@plt+0xbc90>
   1bf10:	add	r1, sp, #104	; 0x68
   1bf14:	mov	r0, r6
   1bf18:	bl	15164 <fputs@plt+0xbda8>
   1bf1c:	ldr	r3, [r5]
   1bf20:	vldr	d6, [r4]
   1bf24:	vldr	d7, [r4, #8]
   1bf28:	add	r0, sp, #88	; 0x58
   1bf2c:	ldr	r4, [r3, #24]
   1bf30:	vstr	d0, [sp, #40]	; 0x28
   1bf34:	vmov.f64	d0, d9
   1bf38:	vstr	d1, [sp, #48]	; 0x30
   1bf3c:	vnmls.f64	d0, d6, d8
   1bf40:	vnmul.f64	d1, d7, d8
   1bf44:	bl	1504c <fputs@plt+0xbc90>
   1bf48:	mov	r0, r6
   1bf4c:	add	r1, sp, #88	; 0x58
   1bf50:	bl	15164 <fputs@plt+0xbda8>
   1bf54:	add	r2, sp, #40	; 0x28
   1bf58:	mov	r3, #1
   1bf5c:	str	r7, [sp]
   1bf60:	mov	r0, r5
   1bf64:	add	r1, sp, #104	; 0x68
   1bf68:	vstr	d0, [sp, #104]	; 0x68
   1bf6c:	vstr	d1, [sp, #112]	; 0x70
   1bf70:	blx	r4
   1bf74:	ldr	r2, [sp, #124]	; 0x7c
   1bf78:	ldr	r3, [r8]
   1bf7c:	cmp	r2, r3
   1bf80:	bne	1bf90 <fputs@plt+0x12bd4>
   1bf84:	add	sp, sp, #132	; 0x84
   1bf88:	vpop	{d8-d10}
   1bf8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1bf90:	bl	92b4 <__stack_chk_fail@plt>
   1bf94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bf98:	vpush	{d8-d10}
   1bf9c:	vmov.f64	d9, #96	; 0x3f000000  0.5
   1bfa0:	movw	r8, #1424	; 0x590
   1bfa4:	movt	r8, #3
   1bfa8:	sub	sp, sp, #128	; 0x80
   1bfac:	mov	r6, r0
   1bfb0:	ldr	r3, [r8]
   1bfb4:	add	r0, sp, #32
   1bfb8:	mov	r4, r2
   1bfbc:	mov	r7, r1
   1bfc0:	add	r9, sp, #120	; 0x78
   1bfc4:	add	r5, sp, #56	; 0x38
   1bfc8:	str	r3, [sp, #124]	; 0x7c
   1bfcc:	vmov.f64	d8, d0
   1bfd0:	vmov.f64	d10, d1
   1bfd4:	bl	14d78 <fputs@plt+0xb9bc>
   1bfd8:	ldr	r3, [r6]
   1bfdc:	vldr	d6, [r4]
   1bfe0:	vldr	d7, [r4, #8]
   1bfe4:	mov	r0, sp
   1bfe8:	mov	r2, #0
   1bfec:	str	r2, [sp, #32]
   1bff0:	vmov.f64	d0, d8
   1bff4:	ldr	sl, [r3, #16]
   1bff8:	vmov.f64	d1, d8
   1bffc:	vnmls.f64	d0, d6, d9
   1c000:	vnmls.f64	d1, d7, d9
   1c004:	bl	1504c <fputs@plt+0xbc90>
   1c008:	mov	r0, r7
   1c00c:	mov	r1, sp
   1c010:	bl	15164 <fputs@plt+0xbda8>
   1c014:	add	r2, sp, #32
   1c018:	add	r1, sp, #16
   1c01c:	mov	r0, r6
   1c020:	vstr	d0, [sp, #16]
   1c024:	vstr	d1, [sp, #24]
   1c028:	vmov.f64	d0, d8
   1c02c:	vmov.f64	d1, d10
   1c030:	blx	sl
   1c034:	ldr	r3, [r6]
   1c038:	vldr	d6, [r4]
   1c03c:	vldr	d7, [r4, #8]
   1c040:	mov	r0, sp
   1c044:	vmov.f64	d0, d8
   1c048:	ldr	sl, [r3, #16]
   1c04c:	vmov.f64	d1, d8
   1c050:	vmls.f64	d0, d6, d9
   1c054:	vnmls.f64	d1, d7, d9
   1c058:	bl	1504c <fputs@plt+0xbc90>
   1c05c:	mov	r0, r7
   1c060:	mov	r1, sp
   1c064:	bl	15164 <fputs@plt+0xbda8>
   1c068:	add	r2, sp, #32
   1c06c:	add	r1, sp, #16
   1c070:	mov	r0, r6
   1c074:	vstr	d0, [sp, #16]
   1c078:	vstr	d1, [sp, #24]
   1c07c:	vmov.f64	d0, d8
   1c080:	vmov.f64	d1, d10
   1c084:	blx	sl
   1c088:	ldr	r3, [r6]
   1c08c:	vldr	d6, [r4]
   1c090:	vldr	d7, [r4, #8]
   1c094:	mov	r0, sp
   1c098:	vmov.f64	d0, d8
   1c09c:	ldr	sl, [r3, #16]
   1c0a0:	vmov.f64	d1, d8
   1c0a4:	vmls.f64	d0, d6, d9
   1c0a8:	vmls.f64	d1, d7, d9
   1c0ac:	bl	1504c <fputs@plt+0xbc90>
   1c0b0:	mov	r0, r7
   1c0b4:	mov	r1, sp
   1c0b8:	bl	15164 <fputs@plt+0xbda8>
   1c0bc:	add	r2, sp, #32
   1c0c0:	add	r1, sp, #16
   1c0c4:	mov	r0, r6
   1c0c8:	vstr	d0, [sp, #16]
   1c0cc:	vstr	d1, [sp, #24]
   1c0d0:	vmov.f64	d0, d8
   1c0d4:	vmov.f64	d1, d10
   1c0d8:	blx	sl
   1c0dc:	ldr	r3, [r6]
   1c0e0:	vldr	d6, [r4]
   1c0e4:	vldr	d7, [r4, #8]
   1c0e8:	mov	r0, sp
   1c0ec:	vmov.f64	d0, d8
   1c0f0:	ldr	sl, [r3, #16]
   1c0f4:	vmov.f64	d1, d8
   1c0f8:	vnmls.f64	d0, d6, d9
   1c0fc:	vmls.f64	d1, d7, d9
   1c100:	bl	1504c <fputs@plt+0xbc90>
   1c104:	mov	r0, r7
   1c108:	mov	r1, sp
   1c10c:	bl	15164 <fputs@plt+0xbda8>
   1c110:	mov	r0, r6
   1c114:	add	r1, sp, #16
   1c118:	add	r2, sp, #32
   1c11c:	vstr	d0, [sp, #16]
   1c120:	vstr	d1, [sp, #24]
   1c124:	vmov.f64	d0, d8
   1c128:	vmov.f64	d1, d10
   1c12c:	blx	sl
   1c130:	mov	r0, r5
   1c134:	add	r5, r5, #16
   1c138:	bl	15038 <fputs@plt+0xbc7c>
   1c13c:	cmp	r5, r9
   1c140:	bne	1c130 <fputs@plt+0x12d74>
   1c144:	vmov.f64	d9, #96	; 0x3f000000  0.5
   1c148:	vldr	d7, [r4, #8]
   1c14c:	vldr	d0, [r4]
   1c150:	add	r0, sp, #16
   1c154:	vmov.f64	d1, d8
   1c158:	vmul.f64	d0, d0, d9
   1c15c:	vnmls.f64	d1, d7, d9
   1c160:	bl	1504c <fputs@plt+0xbc90>
   1c164:	add	r1, sp, #16
   1c168:	mov	r0, r7
   1c16c:	bl	15164 <fputs@plt+0xbda8>
   1c170:	vldr	d6, [r4]
   1c174:	vldr	d7, [r4, #8]
   1c178:	add	r0, sp, #16
   1c17c:	vstr	d1, [sp, #64]	; 0x40
   1c180:	vmov.f64	d1, d8
   1c184:	vstr	d0, [sp, #56]	; 0x38
   1c188:	vnmls.f64	d1, d7, d9
   1c18c:	vnmul.f64	d0, d6, d9
   1c190:	bl	1504c <fputs@plt+0xbc90>
   1c194:	add	r1, sp, #16
   1c198:	mov	r0, r7
   1c19c:	bl	15164 <fputs@plt+0xbda8>
   1c1a0:	vldr	d6, [r4]
   1c1a4:	vldr	d7, [r4, #8]
   1c1a8:	add	r0, sp, #16
   1c1ac:	vstr	d1, [sp, #80]	; 0x50
   1c1b0:	vmov.f64	d1, d8
   1c1b4:	vstr	d0, [sp, #72]	; 0x48
   1c1b8:	vmls.f64	d1, d7, d9
   1c1bc:	vnmul.f64	d0, d6, d9
   1c1c0:	bl	1504c <fputs@plt+0xbc90>
   1c1c4:	add	r1, sp, #16
   1c1c8:	mov	r0, r7
   1c1cc:	bl	15164 <fputs@plt+0xbda8>
   1c1d0:	vldr	d6, [r4]
   1c1d4:	vldr	d7, [r4, #8]
   1c1d8:	add	r0, sp, #16
   1c1dc:	vstr	d1, [sp, #96]	; 0x60
   1c1e0:	vmov.f64	d1, d8
   1c1e4:	vstr	d0, [sp, #88]	; 0x58
   1c1e8:	vmls.f64	d1, d7, d9
   1c1ec:	vmul.f64	d0, d6, d9
   1c1f0:	bl	1504c <fputs@plt+0xbc90>
   1c1f4:	mov	r0, r7
   1c1f8:	add	r1, sp, #16
   1c1fc:	bl	15164 <fputs@plt+0xbda8>
   1c200:	ldr	ip, [r6]
   1c204:	mov	r2, #4
   1c208:	add	r3, sp, #32
   1c20c:	add	r1, sp, #56	; 0x38
   1c210:	mov	r0, r6
   1c214:	ldr	ip, [ip, #28]
   1c218:	vstr	d0, [sp, #104]	; 0x68
   1c21c:	vstr	d1, [sp, #112]	; 0x70
   1c220:	vmov.f64	d0, d10
   1c224:	blx	ip
   1c228:	vldr	d7, [r4]
   1c22c:	vldr	d1, [r4, #8]
   1c230:	add	r0, sp, #16
   1c234:	vmov.f64	d0, d8
   1c238:	vmul.f64	d1, d1, d9
   1c23c:	vnmls.f64	d0, d7, d9
   1c240:	bl	1504c <fputs@plt+0xbc90>
   1c244:	add	r1, sp, #16
   1c248:	mov	r0, r7
   1c24c:	bl	15164 <fputs@plt+0xbda8>
   1c250:	vldr	d6, [r4]
   1c254:	vldr	d7, [r4, #8]
   1c258:	add	r0, sp, #16
   1c25c:	vstr	d0, [sp, #56]	; 0x38
   1c260:	vmov.f64	d0, d8
   1c264:	vstr	d1, [sp, #64]	; 0x40
   1c268:	vmls.f64	d0, d6, d9
   1c26c:	vmul.f64	d1, d7, d9
   1c270:	bl	1504c <fputs@plt+0xbc90>
   1c274:	add	r1, sp, #16
   1c278:	mov	r0, r7
   1c27c:	bl	15164 <fputs@plt+0xbda8>
   1c280:	vldr	d6, [r4]
   1c284:	vldr	d7, [r4, #8]
   1c288:	add	r0, sp, #16
   1c28c:	vstr	d0, [sp, #72]	; 0x48
   1c290:	vmov.f64	d0, d8
   1c294:	vstr	d1, [sp, #80]	; 0x50
   1c298:	vmls.f64	d0, d6, d9
   1c29c:	vnmul.f64	d1, d7, d9
   1c2a0:	bl	1504c <fputs@plt+0xbc90>
   1c2a4:	add	r1, sp, #16
   1c2a8:	mov	r0, r7
   1c2ac:	bl	15164 <fputs@plt+0xbda8>
   1c2b0:	vldr	d6, [r4]
   1c2b4:	vldr	d7, [r4, #8]
   1c2b8:	add	r0, sp, #16
   1c2bc:	vstr	d0, [sp, #88]	; 0x58
   1c2c0:	vmov.f64	d0, d8
   1c2c4:	vstr	d1, [sp, #96]	; 0x60
   1c2c8:	vnmls.f64	d0, d6, d9
   1c2cc:	vnmul.f64	d1, d7, d9
   1c2d0:	bl	1504c <fputs@plt+0xbc90>
   1c2d4:	mov	r0, r7
   1c2d8:	add	r1, sp, #16
   1c2dc:	bl	15164 <fputs@plt+0xbda8>
   1c2e0:	ldr	ip, [r6]
   1c2e4:	add	r3, sp, #32
   1c2e8:	mov	r2, #4
   1c2ec:	add	r1, sp, #56	; 0x38
   1c2f0:	mov	r0, r6
   1c2f4:	ldr	ip, [ip, #28]
   1c2f8:	vstr	d0, [sp, #104]	; 0x68
   1c2fc:	vstr	d1, [sp, #112]	; 0x70
   1c300:	vmov.f64	d0, d10
   1c304:	blx	ip
   1c308:	ldr	r2, [sp, #124]	; 0x7c
   1c30c:	ldr	r3, [r8]
   1c310:	cmp	r2, r3
   1c314:	bne	1c324 <fputs@plt+0x12f68>
   1c318:	add	sp, sp, #128	; 0x80
   1c31c:	vpop	{d8-d10}
   1c320:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c324:	bl	92b4 <__stack_chk_fail@plt>
   1c328:	vcmpe.f64	d1, #0.0
   1c32c:	push	{r4, r5, r6, r7, r8, lr}
   1c330:	vpush	{d8}
   1c334:	mov	r4, r3
   1c338:	mov	r7, r0
   1c33c:	mov	r6, r1
   1c340:	mov	r5, r2
   1c344:	vmov.f64	d8, d0
   1c348:	ldr	r3, [sp, #32]
   1c34c:	vmrs	APSR_nzcv, fpscr
   1c350:	blt	1c3f0 <fputs@plt+0x13034>
   1c354:	mov	r0, r7
   1c358:	mov	r1, r6
   1c35c:	mov	r2, r5
   1c360:	vmov.f64	d0, d8
   1c364:	bl	1bf94 <fputs@plt+0x12bd8>
   1c368:	ldr	ip, [r4]
   1c36c:	cmp	ip, #3
   1c370:	ldrls	pc, [pc, ip, lsl #2]
   1c374:	b	1c3fc <fputs@plt+0x13040>
   1c378:	andeq	ip, r1, r8, ror #7
   1c37c:	andeq	ip, r1, r8, asr #7
   1c380:	andeq	ip, r1, r8, lsr #7
   1c384:	andeq	ip, r1, r8, lsl #7
   1c388:	vmov.f64	d0, d8
   1c38c:	mov	r0, r7
   1c390:	vpop	{d8}
   1c394:	mov	r1, r6
   1c398:	mov	r2, r5
   1c39c:	mov	r3, r4
   1c3a0:	pop	{r4, r5, r6, r7, r8, lr}
   1c3a4:	b	1abb8 <fputs@plt+0x117fc>
   1c3a8:	vmov.f64	d0, d8
   1c3ac:	mov	r0, r7
   1c3b0:	vpop	{d8}
   1c3b4:	mov	r1, r6
   1c3b8:	mov	r2, r5
   1c3bc:	mov	r3, r4
   1c3c0:	pop	{r4, r5, r6, r7, r8, lr}
   1c3c4:	b	1b420 <fputs@plt+0x12064>
   1c3c8:	vmov.f64	d0, d8
   1c3cc:	mov	r0, r7
   1c3d0:	vpop	{d8}
   1c3d4:	mov	r1, r6
   1c3d8:	mov	r2, r5
   1c3dc:	mov	r3, r4
   1c3e0:	pop	{r4, r5, r6, r7, r8, lr}
   1c3e4:	b	1ba30 <fputs@plt+0x12674>
   1c3e8:	vpop	{d8}
   1c3ec:	pop	{r4, r5, r6, r7, r8, pc}
   1c3f0:	cmp	r3, #0
   1c3f4:	bne	1c354 <fputs@plt+0x12f98>
   1c3f8:	b	1c368 <fputs@plt+0x12fac>
   1c3fc:	vpop	{d8}
   1c400:	movw	r1, #25192	; 0x6268
   1c404:	mov	r0, #340	; 0x154
   1c408:	movt	r1, #2
   1c40c:	pop	{r4, r5, r6, r7, r8, lr}
   1c410:	b	1eec8 <fputs@plt+0x15b0c>
   1c414:	nop	{0}
   1c418:	ldr	r3, [pc, #20]	; 1c434 <fputs@plt+0x13078>
   1c41c:	push	{r4, lr}
   1c420:	mov	r4, r0
   1c424:	str	r3, [r0]
   1c428:	bl	14820 <fputs@plt+0xb464>
   1c42c:	mov	r0, r4
   1c430:	pop	{r4, pc}
   1c434:	strdeq	r6, [r2], -r0
   1c438:	ldr	r3, [pc, #28]	; 1c45c <fputs@plt+0x130a0>
   1c43c:	push	{r4, lr}
   1c440:	mov	r4, r0
   1c444:	str	r3, [r0]
   1c448:	bl	14820 <fputs@plt+0xb464>
   1c44c:	mov	r0, r4
   1c450:	bl	209f0 <_ZdlPv@@Base>
   1c454:	mov	r0, r4
   1c458:	pop	{r4, pc}
   1c45c:	strdeq	r6, [r2], -r0
   1c460:	movw	r3, #1084	; 0x43c
   1c464:	movt	r3, #3
   1c468:	ldr	r0, [r3]
   1c46c:	adds	r0, r0, #0
   1c470:	movne	r0, #1
   1c474:	bx	lr
   1c478:	ldr	ip, [r0]
   1c47c:	push	{r3, r4, r5, r6, r7, lr}
   1c480:	mov	r4, r0
   1c484:	ldr	lr, [sp, #24]
   1c488:	mov	r5, r3
   1c48c:	vldr	d0, [lr, #16]
   1c490:	ldr	r3, [ip, #116]	; 0x74
   1c494:	mov	r7, r1
   1c498:	mov	r6, r2
   1c49c:	blx	r3
   1c4a0:	ldr	ip, [r4]
   1c4a4:	mov	r1, r7
   1c4a8:	mov	r2, r6
   1c4ac:	mov	r3, r5
   1c4b0:	mov	r0, r4
   1c4b4:	ldr	ip, [ip, #96]	; 0x60
   1c4b8:	blx	ip
   1c4bc:	pop	{r3, r4, r5, r6, r7, pc}
   1c4c0:	push	{r4, r5, r6, r7, r8, lr}
   1c4c4:	vpush	{d8}
   1c4c8:	movw	r5, #1084	; 0x43c
   1c4cc:	movt	r5, #3
   1c4d0:	mov	r8, r2
   1c4d4:	sub	sp, sp, #8
   1c4d8:	mov	r7, r1
   1c4dc:	ldr	r2, [r5]
   1c4e0:	mov	r6, r3
   1c4e4:	vmov.f64	d8, d0
   1c4e8:	mov	r4, r0
   1c4ec:	cmp	r2, #0
   1c4f0:	beq	1c534 <fputs@plt+0x13178>
   1c4f4:	vcmpe.f64	d0, #0.0
   1c4f8:	vmrs	APSR_nzcv, fpscr
   1c4fc:	blt	1c5a4 <fputs@plt+0x131e8>
   1c500:	ldr	r3, [r4]
   1c504:	mov	r0, r4
   1c508:	ldr	r3, [r3, #64]	; 0x40
   1c50c:	blx	r3
   1c510:	cmp	r0, #0
   1c514:	beq	1c5f0 <fputs@plt+0x13234>
   1c518:	ldr	ip, [r4]
   1c51c:	mov	r0, r4
   1c520:	mov	r1, #1
   1c524:	mov	r2, r7
   1c528:	mov	r3, r8
   1c52c:	ldr	ip, [ip, #112]	; 0x70
   1c530:	blx	ip
   1c534:	ldr	r0, [r6]
   1c538:	cmp	r0, #1
   1c53c:	beq	1c554 <fputs@plt+0x13198>
   1c540:	cmp	r0, #0
   1c544:	bne	1c560 <fputs@plt+0x131a4>
   1c548:	add	sp, sp, #8
   1c54c:	vpop	{d8}
   1c550:	pop	{r4, r5, r6, r7, r8, pc}
   1c554:	ldr	r3, [r5]
   1c558:	cmp	r3, #0
   1c55c:	bne	1c5bc <fputs@plt+0x13200>
   1c560:	ldr	r3, [r4]
   1c564:	mov	r0, r4
   1c568:	vldr	d0, [r6, #16]
   1c56c:	ldr	r3, [r3, #116]	; 0x74
   1c570:	blx	r3
   1c574:	ldr	r3, [r4]
   1c578:	sub	r1, r8, #-268435455	; 0xf0000001
   1c57c:	str	r6, [sp]
   1c580:	mov	r0, r4
   1c584:	mov	r2, r7
   1c588:	ldr	ip, [r3, #24]
   1c58c:	add	r1, r7, r1, lsl #4
   1c590:	mov	r3, r8
   1c594:	blx	ip
   1c598:	add	sp, sp, #8
   1c59c:	vpop	{d8}
   1c5a0:	pop	{r4, r5, r6, r7, r8, pc}
   1c5a4:	ldr	r3, [r0]
   1c5a8:	ldr	r3, [r3, #64]	; 0x40
   1c5ac:	blx	r3
   1c5b0:	cmp	r0, #0
   1c5b4:	bne	1c500 <fputs@plt+0x13144>
   1c5b8:	b	1c534 <fputs@plt+0x13178>
   1c5bc:	ldr	r3, [r4]
   1c5c0:	mov	r0, r4
   1c5c4:	vldr	d0, [r6, #16]
   1c5c8:	ldr	r3, [r3, #116]	; 0x74
   1c5cc:	blx	r3
   1c5d0:	ldr	ip, [r4]
   1c5d4:	mov	r2, r7
   1c5d8:	mov	r3, r8
   1c5dc:	mov	r0, r4
   1c5e0:	mov	r1, #0
   1c5e4:	ldr	ip, [ip, #112]	; 0x70
   1c5e8:	blx	ip
   1c5ec:	b	1c548 <fputs@plt+0x1318c>
   1c5f0:	ldr	r3, [r4]
   1c5f4:	vmov.f64	d0, d8
   1c5f8:	mov	r0, r4
   1c5fc:	ldr	r3, [r3, #120]	; 0x78
   1c600:	blx	r3
   1c604:	b	1c518 <fputs@plt+0x1315c>
   1c608:	ldr	r0, [r0, #80]	; 0x50
   1c60c:	bx	lr
   1c610:	ldr	r0, [r0, #84]	; 0x54
   1c614:	bx	lr
   1c618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c61c:	vpush	{d8-d9}
   1c620:	sub	sp, sp, #132	; 0x84
   1c624:	mov	r6, r0
   1c628:	mov	r5, r2
   1c62c:	str	r3, [sp, #8]
   1c630:	movw	r7, #1424	; 0x590
   1c634:	ldm	r1, {r0, r1, r2, r3}
   1c638:	movt	r7, #3
   1c63c:	ldr	ip, [r6]
   1c640:	add	r4, sp, #24
   1c644:	ldr	lr, [r7]
   1c648:	ldr	sl, [sp, #184]	; 0xb8
   1c64c:	vldr	d0, [sl, #16]
   1c650:	ldr	ip, [ip, #116]	; 0x74
   1c654:	stm	r4, {r0, r1, r2, r3}
   1c658:	mov	r0, r6
   1c65c:	str	r7, [sp, #16]
   1c660:	str	lr, [sp, #124]	; 0x7c
   1c664:	blx	ip
   1c668:	ldr	ip, [sp, #8]
   1c66c:	cmp	ip, #0
   1c670:	ble	1c70c <fputs@plt+0x13350>
   1c674:	vmov.f64	d9, #96	; 0x3f000000  0.5
   1c678:	mov	ip, #0
   1c67c:	mov	fp, ip
   1c680:	ldr	r3, [sl]
   1c684:	cmp	r3, #3
   1c688:	ldrls	pc, [pc, r3, lsl #2]
   1c68c:	b	1c860 <fputs@plt+0x134a4>
   1c690:	strdeq	ip, [r1], -r0
   1c694:	andeq	ip, r1, ip, lsr #14
   1c698:	andeq	ip, r1, r0, lsr #13
   1c69c:	andeq	ip, r1, r8, asr #14
   1c6a0:	mov	r0, r5
   1c6a4:	mov	r1, r4
   1c6a8:	bl	15188 <fputs@plt+0xbdcc>
   1c6ac:	add	r0, sp, #72	; 0x48
   1c6b0:	vstr	d0, [sp, #72]	; 0x48
   1c6b4:	vstr	d1, [sp, #80]	; 0x50
   1c6b8:	bl	15200 <fputs@plt+0xbe44>
   1c6bc:	vldr	d7, [sl, #8]
   1c6c0:	vdiv.f64	d0, d0, d7
   1c6c4:	vadd.f64	d7, d0, d9
   1c6c8:	vcvt.s32.f64	s11, d7
   1c6cc:	vmov	r3, s11
   1c6d0:	cmp	r3, #0
   1c6d4:	bne	1c874 <fputs@plt+0x134b8>
   1c6d8:	ldr	r3, [r6]
   1c6dc:	mov	r0, r6
   1c6e0:	mov	r1, r4
   1c6e4:	mov	r2, sl
   1c6e8:	ldr	r3, [r3, #84]	; 0x54
   1c6ec:	blx	r3
   1c6f0:	ldm	r5, {r0, r1, r2, r3}
   1c6f4:	add	fp, fp, #1
   1c6f8:	ldr	r7, [sp, #8]
   1c6fc:	add	r5, r5, #16
   1c700:	cmp	fp, r7
   1c704:	stm	r4, {r0, r1, r2, r3}
   1c708:	bne	1c680 <fputs@plt+0x132c4>
   1c70c:	ldr	ip, [sp, #16]
   1c710:	ldr	r2, [sp, #124]	; 0x7c
   1c714:	ldr	r3, [ip]
   1c718:	cmp	r2, r3
   1c71c:	bne	1c908 <fputs@plt+0x1354c>
   1c720:	add	sp, sp, #132	; 0x84
   1c724:	vpop	{d8-d9}
   1c728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c72c:	ldr	r3, [r6]
   1c730:	mov	r0, r6
   1c734:	mov	r1, r4
   1c738:	mov	r2, r5
   1c73c:	ldr	r3, [r3, #92]	; 0x5c
   1c740:	blx	r3
   1c744:	b	1c6f0 <fputs@plt+0x13334>
   1c748:	mov	r0, r5
   1c74c:	mov	r1, r4
   1c750:	bl	15188 <fputs@plt+0xbdcc>
   1c754:	add	r0, sp, #40	; 0x28
   1c758:	vstr	d0, [sp, #40]	; 0x28
   1c75c:	vstr	d1, [sp, #48]	; 0x30
   1c760:	bl	15200 <fputs@plt+0xbe44>
   1c764:	vmov.f64	d8, d0
   1c768:	vldr	d0, [sl, #8]
   1c76c:	vadd.f64	d7, d0, d0
   1c770:	vcmpe.f64	d8, d7
   1c774:	vmrs	APSR_nzcv, fpscr
   1c778:	bls	1c72c <fputs@plt+0x13370>
   1c77c:	vsub.f64	d6, d8, d0
   1c780:	add	r0, sp, #40	; 0x28
   1c784:	vdiv.f64	d7, d6, d7
   1c788:	vdiv.f64	d0, d0, d8
   1c78c:	vadd.f64	d7, d7, d9
   1c790:	vcvt.s32.f64	s11, d7
   1c794:	vstr	s11, [sp, #12]
   1c798:	bl	151c8 <fputs@plt+0xbe0c>
   1c79c:	vldr	d7, [sl, #8]
   1c7a0:	vsub.f64	d7, d8, d7
   1c7a4:	vldr	s11, [sp, #12]
   1c7a8:	add	r0, sp, #40	; 0x28
   1c7ac:	vcvt.f64.s32	d6, s11
   1c7b0:	vstr	d0, [sp, #56]	; 0x38
   1c7b4:	vdiv.f64	d0, d7, d6
   1c7b8:	vstr	d1, [sp, #64]	; 0x40
   1c7bc:	vdiv.f64	d0, d0, d8
   1c7c0:	bl	151c8 <fputs@plt+0xbe0c>
   1c7c4:	ldr	r1, [sp, #12]
   1c7c8:	cmp	r1, #0
   1c7cc:	vstr	d1, [sp, #80]	; 0x50
   1c7d0:	vstr	d0, [sp, #72]	; 0x48
   1c7d4:	blt	1c6f0 <fputs@plt+0x13334>
   1c7d8:	add	r9, sp, #88	; 0x58
   1c7dc:	add	r8, sp, #104	; 0x68
   1c7e0:	str	r5, [sp, #20]
   1c7e4:	mov	r7, #0
   1c7e8:	mov	r5, r1
   1c7ec:	str	sl, [sp, #12]
   1c7f0:	vmov	s11, r7
   1c7f4:	add	r0, sp, #72	; 0x48
   1c7f8:	add	r7, r7, #1
   1c7fc:	vcvt.f64.s32	d0, s11
   1c800:	bl	151c8 <fputs@plt+0xbe0c>
   1c804:	mov	r0, r4
   1c808:	mov	r1, r8
   1c80c:	vstr	d0, [sp, #104]	; 0x68
   1c810:	vstr	d1, [sp, #112]	; 0x70
   1c814:	bl	15164 <fputs@plt+0xbda8>
   1c818:	ldr	r3, [r6]
   1c81c:	mov	r0, r9
   1c820:	add	r1, sp, #56	; 0x38
   1c824:	ldr	sl, [r3, #92]	; 0x5c
   1c828:	vstr	d0, [sp, #88]	; 0x58
   1c82c:	vstr	d1, [sp, #96]	; 0x60
   1c830:	bl	15164 <fputs@plt+0xbda8>
   1c834:	mov	r0, r6
   1c838:	mov	r1, r9
   1c83c:	mov	r2, r8
   1c840:	vstr	d0, [sp, #104]	; 0x68
   1c844:	vstr	d1, [sp, #112]	; 0x70
   1c848:	blx	sl
   1c84c:	cmp	r5, r7
   1c850:	bge	1c7f0 <fputs@plt+0x13434>
   1c854:	ldr	r5, [sp, #20]
   1c858:	ldr	sl, [sp, #12]
   1c85c:	b	1c6f0 <fputs@plt+0x13334>
   1c860:	movw	r1, #25536	; 0x63c0
   1c864:	mov	r0, #129	; 0x81
   1c868:	movt	r1, #2
   1c86c:	bl	1eec8 <fputs@plt+0x15b0c>
   1c870:	b	1c6f0 <fputs@plt+0x13334>
   1c874:	add	r0, sp, #72	; 0x48
   1c878:	vcvt.f64.s32	d0, s11
   1c87c:	vstr	s11, [sp, #4]
   1c880:	bl	1512c <fputs@plt+0xbd70>
   1c884:	ldr	r3, [sp, #4]
   1c888:	cmp	r3, #0
   1c88c:	blt	1c6f0 <fputs@plt+0x13334>
   1c890:	mov	r7, #0
   1c894:	add	r9, sp, #88	; 0x58
   1c898:	add	r8, sp, #104	; 0x68
   1c89c:	str	r5, [sp, #12]
   1c8a0:	mov	r5, r7
   1c8a4:	mov	r7, r3
   1c8a8:	str	fp, [sp, #20]
   1c8ac:	vmov	s15, r5
   1c8b0:	ldr	r2, [r6]
   1c8b4:	add	r0, sp, #72	; 0x48
   1c8b8:	add	r5, r5, #1
   1c8bc:	vcvt.f64.s32	d0, s15
   1c8c0:	ldr	fp, [r2, #84]	; 0x54
   1c8c4:	bl	151c8 <fputs@plt+0xbe0c>
   1c8c8:	mov	r0, r4
   1c8cc:	mov	r1, r9
   1c8d0:	vstr	d0, [sp, #88]	; 0x58
   1c8d4:	vstr	d1, [sp, #96]	; 0x60
   1c8d8:	bl	15164 <fputs@plt+0xbda8>
   1c8dc:	mov	r0, r6
   1c8e0:	mov	r1, r8
   1c8e4:	mov	r2, sl
   1c8e8:	vstr	d0, [sp, #104]	; 0x68
   1c8ec:	vstr	d1, [sp, #112]	; 0x70
   1c8f0:	blx	fp
   1c8f4:	cmp	r7, r5
   1c8f8:	bge	1c8ac <fputs@plt+0x134f0>
   1c8fc:	ldr	r5, [sp, #12]
   1c900:	ldr	fp, [sp, #20]
   1c904:	b	1c6f0 <fputs@plt+0x13334>
   1c908:	bl	92b4 <__stack_chk_fail@plt>
   1c90c:	movw	r3, #1084	; 0x43c
   1c910:	movt	r3, #3
   1c914:	push	{r4, r5, r6, lr}
   1c918:	vpush	{d8-d9}
   1c91c:	mov	r6, r1
   1c920:	ldr	r3, [r3]
   1c924:	vmov.f64	d8, d0
   1c928:	mov	r5, r2
   1c92c:	mov	r4, r0
   1c930:	cmp	r3, #0
   1c934:	vmov.f64	d9, d1
   1c938:	beq	1c97c <fputs@plt+0x135c0>
   1c93c:	vcmpe.f64	d1, #0.0
   1c940:	vmrs	APSR_nzcv, fpscr
   1c944:	blt	1ca24 <fputs@plt+0x13668>
   1c948:	ldr	r3, [r4]
   1c94c:	mov	r0, r4
   1c950:	ldr	r3, [r3, #64]	; 0x40
   1c954:	blx	r3
   1c958:	cmp	r0, #0
   1c95c:	beq	1ca3c <fputs@plt+0x13680>
   1c960:	ldr	r3, [r4]
   1c964:	mov	r0, r4
   1c968:	mov	r1, #1
   1c96c:	mov	r2, r6
   1c970:	vmov.f64	d0, d8
   1c974:	ldr	r3, [r3, #104]	; 0x68
   1c978:	blx	r3
   1c97c:	ldr	r3, [r4]
   1c980:	mov	r0, r4
   1c984:	vldr	d0, [r5, #16]
   1c988:	ldr	r3, [r3, #116]	; 0x74
   1c98c:	blx	r3
   1c990:	ldr	r3, [r5]
   1c994:	cmp	r3, #3
   1c998:	ldrls	pc, [pc, r3, lsl #2]
   1c99c:	b	1ca0c <fputs@plt+0x13650>
   1c9a0:	andeq	ip, r1, ip, asr #19
   1c9a4:			; <UNDEFINED> instruction: 0x0001c9b0
   1c9a8:	strdeq	ip, [r1], -r0
   1c9ac:	ldrdeq	ip, [r1], -r4
   1c9b0:	ldr	r3, [r4]
   1c9b4:	mov	r2, r6
   1c9b8:	vmov.f64	d0, d8
   1c9bc:	mov	r0, r4
   1c9c0:	mov	r1, #0
   1c9c4:	ldr	r3, [r3, #104]	; 0x68
   1c9c8:	blx	r3
   1c9cc:	vpop	{d8-d9}
   1c9d0:	pop	{r4, r5, r6, pc}
   1c9d4:	vmov.f64	d0, d8
   1c9d8:	mov	r0, r4
   1c9dc:	vpop	{d8-d9}
   1c9e0:	mov	r1, r6
   1c9e4:	mov	r2, r5
   1c9e8:	pop	{r4, r5, r6, lr}
   1c9ec:	b	196c4 <fputs@plt+0x10308>
   1c9f0:	vmov.f64	d0, d8
   1c9f4:	mov	r0, r4
   1c9f8:	vpop	{d8-d9}
   1c9fc:	mov	r1, r6
   1ca00:	mov	r2, r5
   1ca04:	pop	{r4, r5, r6, lr}
   1ca08:	b	19868 <fputs@plt+0x104ac>
   1ca0c:	vpop	{d8-d9}
   1ca10:	movw	r1, #25536	; 0x63c0
   1ca14:	mov	r0, #182	; 0xb6
   1ca18:	movt	r1, #2
   1ca1c:	pop	{r4, r5, r6, lr}
   1ca20:	b	1eec8 <fputs@plt+0x15b0c>
   1ca24:	ldr	r3, [r0]
   1ca28:	ldr	r3, [r3, #64]	; 0x40
   1ca2c:	blx	r3
   1ca30:	cmp	r0, #0
   1ca34:	bne	1c948 <fputs@plt+0x1358c>
   1ca38:	b	1c97c <fputs@plt+0x135c0>
   1ca3c:	ldr	r3, [r4]
   1ca40:	vmov.f64	d0, d9
   1ca44:	mov	r0, r4
   1ca48:	ldr	r3, [r3, #120]	; 0x78
   1ca4c:	blx	r3
   1ca50:	b	1c960 <fputs@plt+0x135a4>
   1ca54:	movw	ip, #1084	; 0x43c
   1ca58:	movt	ip, #3
   1ca5c:	push	{r4, r5, r6, r7, r8, lr}
   1ca60:	vpush	{d8}
   1ca64:	mov	r6, r1
   1ca68:	ldr	ip, [ip]
   1ca6c:	mov	r7, r2
   1ca70:	mov	r5, r3
   1ca74:	vmov.f64	d8, d0
   1ca78:	cmp	ip, #0
   1ca7c:	mov	r4, r0
   1ca80:	beq	1cac4 <fputs@plt+0x13708>
   1ca84:	vcmpe.f64	d0, #0.0
   1ca88:	vmrs	APSR_nzcv, fpscr
   1ca8c:	blt	1cb80 <fputs@plt+0x137c4>
   1ca90:	ldr	r3, [r4]
   1ca94:	mov	r0, r4
   1ca98:	ldr	r3, [r3, #64]	; 0x40
   1ca9c:	blx	r3
   1caa0:	cmp	r0, #0
   1caa4:	beq	1cb98 <fputs@plt+0x137dc>
   1caa8:	ldr	ip, [r4]
   1caac:	mov	r0, r4
   1cab0:	mov	r1, #1
   1cab4:	mov	r2, r6
   1cab8:	mov	r3, r7
   1cabc:	ldr	ip, [ip, #108]	; 0x6c
   1cac0:	blx	ip
   1cac4:	ldr	r0, [r5]
   1cac8:	cmp	r0, #0
   1cacc:	bne	1cad8 <fputs@plt+0x1371c>
   1cad0:	vpop	{d8}
   1cad4:	pop	{r4, r5, r6, r7, r8, pc}
   1cad8:	ldr	r3, [r4]
   1cadc:	mov	r0, r4
   1cae0:	vldr	d0, [r5, #16]
   1cae4:	ldr	r3, [r3, #116]	; 0x74
   1cae8:	blx	r3
   1caec:	ldr	r3, [r5]
   1caf0:	cmp	r3, #3
   1caf4:	ldrls	pc, [pc, r3, lsl #2]
   1caf8:	b	1cb68 <fputs@plt+0x137ac>
   1cafc:	ldrdeq	ip, [r1], -r0
   1cb00:	andeq	ip, r1, r4, asr #22
   1cb04:	andeq	ip, r1, r8, lsr #22
   1cb08:	andeq	ip, r1, ip, lsl #22
   1cb0c:	vpop	{d8}
   1cb10:	mov	r0, r4
   1cb14:	mov	r1, r6
   1cb18:	mov	r2, r7
   1cb1c:	mov	r3, r5
   1cb20:	pop	{r4, r5, r6, r7, r8, lr}
   1cb24:	b	19d58 <fputs@plt+0x1099c>
   1cb28:	vpop	{d8}
   1cb2c:	mov	r0, r4
   1cb30:	mov	r1, r6
   1cb34:	mov	r2, r7
   1cb38:	mov	r3, r5
   1cb3c:	pop	{r4, r5, r6, r7, r8, lr}
   1cb40:	b	1a0f0 <fputs@plt+0x10d34>
   1cb44:	ldr	ip, [r4]
   1cb48:	mov	r2, r6
   1cb4c:	mov	r3, r7
   1cb50:	mov	r0, r4
   1cb54:	mov	r1, #0
   1cb58:	ldr	ip, [ip, #108]	; 0x6c
   1cb5c:	blx	ip
   1cb60:	vpop	{d8}
   1cb64:	pop	{r4, r5, r6, r7, r8, pc}
   1cb68:	vpop	{d8}
   1cb6c:	movw	r1, #25536	; 0x63c0
   1cb70:	mov	r0, #209	; 0xd1
   1cb74:	movt	r1, #2
   1cb78:	pop	{r4, r5, r6, r7, r8, lr}
   1cb7c:	b	1eec8 <fputs@plt+0x15b0c>
   1cb80:	ldr	r3, [r0]
   1cb84:	ldr	r3, [r3, #64]	; 0x40
   1cb88:	blx	r3
   1cb8c:	cmp	r0, #0
   1cb90:	bne	1ca90 <fputs@plt+0x136d4>
   1cb94:	b	1cac4 <fputs@plt+0x13708>
   1cb98:	ldr	r3, [r4]
   1cb9c:	vmov.f64	d0, d8
   1cba0:	mov	r0, r4
   1cba4:	ldr	r3, [r3, #120]	; 0x78
   1cba8:	blx	r3
   1cbac:	b	1caa8 <fputs@plt+0x136ec>
   1cbb0:	ldr	r3, [pc, #20]	; 1cbcc <fputs@plt+0x13810>
   1cbb4:	push	{r4, lr}
   1cbb8:	mov	r4, r0
   1cbbc:	str	r3, [r0]
   1cbc0:	bl	14820 <fputs@plt+0xb464>
   1cbc4:	mov	r0, r4
   1cbc8:	pop	{r4, pc}
   1cbcc:	strdeq	r6, [r2], -r0
   1cbd0:	ldr	r3, [pc, #28]	; 1cbf4 <fputs@plt+0x13838>
   1cbd4:	push	{r4, lr}
   1cbd8:	mov	r4, r0
   1cbdc:	str	r3, [r0]
   1cbe0:	bl	14820 <fputs@plt+0xb464>
   1cbe4:	mov	r0, r4
   1cbe8:	bl	209f0 <_ZdlPv@@Base>
   1cbec:	mov	r0, r4
   1cbf0:	pop	{r4, pc}
   1cbf4:	strdeq	r6, [r2], -r0
   1cbf8:	vmov.f64	d7, #240	; 0xbf800000 -1.0
   1cbfc:	movw	r3, #1084	; 0x43c
   1cc00:	push	{r4, lr}
   1cc04:	vpush	{d8}
   1cc08:	movt	r3, #3
   1cc0c:	sub	sp, sp, #8
   1cc10:	mov	r4, r0
   1cc14:	ldr	r3, [r3]
   1cc18:	vmov.f64	d8, d0
   1cc1c:	vcmp.f64	d0, #0.0
   1cc20:	vmrs	APSR_nzcv, fpscr
   1cc24:	vmovmi.f64	d8, d7
   1cc28:	cmp	r3, #0
   1cc2c:	beq	1cc40 <fputs@plt+0x13884>
   1cc30:	vldr	d7, [r0, #64]	; 0x40
   1cc34:	vcmp.f64	d7, d8
   1cc38:	vmrs	APSR_nzcv, fpscr
   1cc3c:	bne	1cc4c <fputs@plt+0x13890>
   1cc40:	add	sp, sp, #8
   1cc44:	vpop	{d8}
   1cc48:	pop	{r4, pc}
   1cc4c:	vneg.f64	d7, d8
   1cc50:	movw	r1, #25548	; 0x63cc
   1cc54:	vmov	r2, r3, d8
   1cc58:	movt	r1, #2
   1cc5c:	mov	r0, #1
   1cc60:	vstr	d7, [sp]
   1cc64:	bl	9140 <__printf_chk@plt>
   1cc68:	vstr	d8, [r4, #64]	; 0x40
   1cc6c:	add	sp, sp, #8
   1cc70:	vpop	{d8}
   1cc74:	pop	{r4, pc}
   1cc78:	push	{r4, r5, r6, r7, r8, lr}
   1cc7c:	vpush	{d8}
   1cc80:	sub	sp, sp, #24
   1cc84:	ldrd	r4, [r1]
   1cc88:	mov	r6, r0
   1cc8c:	mov	r8, r1
   1cc90:	mov	r7, r2
   1cc94:	strd	r4, [r0, #32]
   1cc98:	ldrd	r4, [r2, #8]
   1cc9c:	strd	r4, [r0, #40]	; 0x28
   1cca0:	bl	14e1c <fputs@plt+0xba60>
   1cca4:	vldr	d6, [r7, #8]
   1cca8:	vldr	d7, [r8, #8]
   1ccac:	vldr	d8, [r7]
   1ccb0:	vsub.f64	d7, d6, d7
   1ccb4:	vldr	d6, [r8]
   1ccb8:	movw	r1, #25580	; 0x63ec
   1ccbc:	mov	r0, #1
   1ccc0:	movt	r1, #2
   1ccc4:	vsub.f64	d8, d8, d6
   1ccc8:	vdiv.f64	d7, d7, d0
   1cccc:	vstr	d0, [r6, #56]	; 0x38
   1ccd0:	vdiv.f64	d8, d8, d0
   1ccd4:	vstr	d7, [r6, #48]	; 0x30
   1ccd8:	vmov	r2, r3, d7
   1ccdc:	vstr	d8, [sp]
   1cce0:	bl	9140 <__printf_chk@plt>
   1cce4:	ldr	r2, [r6, #4]
   1cce8:	cmp	r2, #0
   1ccec:	beq	1cd8c <fputs@plt+0x139d0>
   1ccf0:	movw	r1, #25596	; 0x63fc
   1ccf4:	mov	r0, #1
   1ccf8:	movt	r1, #2
   1ccfc:	bl	9140 <__printf_chk@plt>
   1cd00:	ldrd	r0, [r8, #8]
   1cd04:	ldrd	r2, [r8]
   1cd08:	strd	r0, [sp]
   1cd0c:	ldrd	r0, [r7, #8]
   1cd10:	ldrd	r4, [r7]
   1cd14:	strd	r0, [sp, #16]
   1cd18:	movw	r1, #25604	; 0x6404
   1cd1c:	strd	r4, [sp, #8]
   1cd20:	movt	r1, #2
   1cd24:	mov	r0, #1
   1cd28:	bl	9140 <__printf_chk@plt>
   1cd2c:	vstr	d8, [sp, #8]
   1cd30:	ldrd	r0, [r6, #48]	; 0x30
   1cd34:	mov	r2, #0
   1cd38:	mov	r3, #0
   1cd3c:	strd	r2, [sp, #16]
   1cd40:	strd	r0, [sp]
   1cd44:	movw	r1, #25624	; 0x6418
   1cd48:	mov	r0, #1
   1cd4c:	movt	r1, #2
   1cd50:	bl	9140 <__printf_chk@plt>
   1cd54:	movw	r0, #25656	; 0x6438
   1cd58:	movt	r0, #2
   1cd5c:	bl	9308 <puts@plt>
   1cd60:	movw	r0, #25676	; 0x644c
   1cd64:	movt	r0, #2
   1cd68:	bl	9308 <puts@plt>
   1cd6c:	vmov	r2, r3, d8
   1cd70:	movw	r1, #25688	; 0x6458
   1cd74:	mov	r0, #1
   1cd78:	movt	r1, #2
   1cd7c:	add	sp, sp, #24
   1cd80:	vpop	{d8}
   1cd84:	pop	{r4, r5, r6, r7, r8, lr}
   1cd88:	b	9140 <__printf_chk@plt>
   1cd8c:	movw	r3, #1484	; 0x5cc
   1cd90:	movt	r3, #3
   1cd94:	mov	r0, #10
   1cd98:	ldr	r1, [r3]
   1cd9c:	bl	9368 <_IO_putc@plt>
   1cda0:	b	1cd00 <fputs@plt+0x13944>
   1cda4:	ldr	r3, [r0]
   1cda8:	vmov.f64	d0, #128	; 0xc0000000 -2.0
   1cdac:	push	{r4, r5, r6, lr}
   1cdb0:	mov	r4, r0
   1cdb4:	ldr	r3, [r3, #116]	; 0x74
   1cdb8:	movw	r5, #2688	; 0xa80
   1cdbc:	blx	r3
   1cdc0:	ldr	r3, [r4]
   1cdc4:	movt	r5, #3
   1cdc8:	mov	r2, #0
   1cdcc:	mov	r0, r4
   1cdd0:	ldr	r1, [r3, #60]	; 0x3c
   1cdd4:	mov	r3, #0
   1cdd8:	movt	r3, #49136	; 0xbff0
   1cddc:	strd	r2, [r4, #72]	; 0x48
   1cde0:	blx	r1
   1cde4:	ldr	r3, [r5]
   1cde8:	cmp	r3, #0
   1cdec:	beq	1ce78 <fputs@plt+0x13abc>
   1cdf0:	movw	r0, #25740	; 0x648c
   1cdf4:	movt	r0, #2
   1cdf8:	bl	9308 <puts@plt>
   1cdfc:	movw	r0, #25756	; 0x649c
   1ce00:	movt	r0, #2
   1ce04:	bl	9308 <puts@plt>
   1ce08:	movw	r0, #25760	; 0x64a0
   1ce0c:	movt	r0, #2
   1ce10:	bl	9308 <puts@plt>
   1ce14:	ldr	r1, [r4]
   1ce18:	movw	r2, #13900	; 0x364c
   1ce1c:	movw	r3, #13996	; 0x36ac
   1ce20:	movt	r2, #3
   1ce24:	movt	r3, #3
   1ce28:	mov	r0, r4
   1ce2c:	ldr	ip, [r1, #52]	; 0x34
   1ce30:	ldr	r1, [r2]
   1ce34:	ldr	r2, [r3]
   1ce38:	blx	ip
   1ce3c:	ldr	r0, [r5]
   1ce40:	movw	r3, #1484	; 0x5cc
   1ce44:	movw	r1, #25716	; 0x6474
   1ce48:	cmp	r0, #0
   1ce4c:	movt	r1, #2
   1ce50:	movt	r3, #3
   1ce54:	movw	r2, #25708	; 0x646c
   1ce58:	movt	r2, #2
   1ce5c:	moveq	r0, r1
   1ce60:	ldr	r3, [r3]
   1ce64:	mov	r1, #1
   1ce68:	movne	r0, r2
   1ce6c:	mov	r2, #4
   1ce70:	pop	{r4, r5, r6, lr}
   1ce74:	b	926c <fwrite@plt>
   1ce78:	movw	r1, #25724	; 0x647c
   1ce7c:	ldrd	r2, [r4, #48]	; 0x30
   1ce80:	movt	r1, #2
   1ce84:	mov	r0, #1
   1ce88:	bl	9140 <__printf_chk@plt>
   1ce8c:	b	1cdf0 <fputs@plt+0x13a34>
   1ce90:	subs	ip, r2, #0
   1ce94:	push	{r3, r4, r5, lr}
   1ce98:	mov	r5, r1
   1ce9c:	beq	1ceb4 <fputs@plt+0x13af8>
   1cea0:	ldr	lr, [r0]
   1cea4:	mov	r2, r3
   1cea8:	mov	r1, ip
   1ceac:	ldr	r3, [lr, #52]	; 0x34
   1ceb0:	blx	r3
   1ceb4:	movw	r4, #1484	; 0x5cc
   1ceb8:	movt	r4, #3
   1cebc:	mov	r0, r5
   1cec0:	ldr	r1, [r4]
   1cec4:	bl	93bc <fputs@plt>
   1cec8:	ldr	r1, [r4]
   1cecc:	mov	r0, #10
   1ced0:	pop	{r3, r4, r5, lr}
   1ced4:	b	9368 <_IO_putc@plt>
   1ced8:	movw	r3, #1084	; 0x43c
   1cedc:	movt	r3, #3
   1cee0:	push	{r4, lr}
   1cee4:	vpush	{d8}
   1cee8:	mov	r4, r0
   1ceec:	ldr	r3, [r3]
   1cef0:	vmov.f64	d8, d0
   1cef4:	cmp	r3, #0
   1cef8:	beq	1cf0c <fputs@plt+0x13b50>
   1cefc:	vldr	d7, [r0, #72]	; 0x48
   1cf00:	vcmp.f64	d7, d0
   1cf04:	vmrs	APSR_nzcv, fpscr
   1cf08:	bne	1cf40 <fputs@plt+0x13b84>
   1cf0c:	ldr	r0, [r4, #80]	; 0x50
   1cf10:	cmp	r0, #0
   1cf14:	beq	1cf38 <fputs@plt+0x13b7c>
   1cf18:	bl	91c4 <free@plt>
   1cf1c:	vpop	{d8}
   1cf20:	mov	r3, #0
   1cf24:	movw	r0, #25796	; 0x64c4
   1cf28:	str	r3, [r4, #80]	; 0x50
   1cf2c:	movt	r0, #2
   1cf30:	pop	{r4, lr}
   1cf34:	b	9308 <puts@plt>
   1cf38:	vpop	{d8}
   1cf3c:	pop	{r4, pc}
   1cf40:	vmov.f64	d7, #112	; 0x3f800000  1.0
   1cf44:	movw	r1, #25772	; 0x64ac
   1cf48:	mov	r0, #1
   1cf4c:	movt	r1, #2
   1cf50:	vsub.f64	d6, d7, d0
   1cf54:	vmov	r2, r3, d6
   1cf58:	bl	9140 <__printf_chk@plt>
   1cf5c:	vstr	d8, [r4, #72]	; 0x48
   1cf60:	b	1cf0c <fputs@plt+0x13b50>
   1cf64:	push	{r4, r5, r6, r7, r8, lr}
   1cf68:	mov	r5, r0
   1cf6c:	ldr	r4, [sp, #24]
   1cf70:	mov	r8, r1
   1cf74:	mov	r7, r2
   1cf78:	mov	r6, r3
   1cf7c:	ldr	ip, [r4]
   1cf80:	cmp	ip, #2
   1cf84:	beq	1cfd4 <fputs@plt+0x13c18>
   1cf88:	cmp	ip, #3
   1cf8c:	beq	1cfc8 <fputs@plt+0x13c0c>
   1cf90:	cmp	ip, #1
   1cf94:	popne	{r4, r5, r6, r7, r8, pc}
   1cf98:	ldr	r3, [r0]
   1cf9c:	vldr	d0, [r4, #16]
   1cfa0:	ldr	r3, [r3, #116]	; 0x74
   1cfa4:	blx	r3
   1cfa8:	ldr	ip, [r5]
   1cfac:	mov	r1, r8
   1cfb0:	mov	r2, r7
   1cfb4:	mov	r3, r6
   1cfb8:	mov	r0, r5
   1cfbc:	ldr	ip, [ip, #100]	; 0x64
   1cfc0:	blx	ip
   1cfc4:	pop	{r4, r5, r6, r7, r8, pc}
   1cfc8:	str	r4, [sp, #24]
   1cfcc:	pop	{r4, r5, r6, r7, r8, lr}
   1cfd0:	b	1a4dc <fputs@plt+0x11120>
   1cfd4:	str	r4, [sp, #24]
   1cfd8:	pop	{r4, r5, r6, r7, r8, lr}
   1cfdc:	b	1a6d0 <fputs@plt+0x11314>
   1cfe0:	movw	r3, #1084	; 0x43c
   1cfe4:	movt	r3, #3
   1cfe8:	push	{r4, r5, r6, lr}
   1cfec:	mov	r4, r0
   1cff0:	ldr	r3, [r3]
   1cff4:	mov	r6, r1
   1cff8:	mov	r5, r2
   1cffc:	cmp	r3, #0
   1d000:	popeq	{r4, r5, r6, pc}
   1d004:	ldr	r3, [r0, #80]	; 0x50
   1d008:	cmp	r3, #0
   1d00c:	beq	1d074 <fputs@plt+0x13cb8>
   1d010:	ldr	r3, [r4]
   1d014:	mov	r0, r4
   1d018:	ldr	r3, [r3, #60]	; 0x3c
   1d01c:	blx	r3
   1d020:	cmp	r6, #0
   1d024:	beq	1d048 <fputs@plt+0x13c8c>
   1d028:	mov	r2, r6
   1d02c:	movw	r1, #25804	; 0x64cc
   1d030:	mov	r0, #1
   1d034:	movt	r1, #2
   1d038:	bl	9140 <__printf_chk@plt>
   1d03c:	mov	r0, r6
   1d040:	bl	214b4 <_ZdlPv@@Base+0xac4>
   1d044:	str	r0, [r4, #80]	; 0x50
   1d048:	cmp	r5, #0
   1d04c:	popeq	{r4, r5, r6, pc}
   1d050:	mov	r2, r5
   1d054:	movw	r1, #25816	; 0x64d8
   1d058:	mov	r0, #1
   1d05c:	movt	r1, #2
   1d060:	bl	9140 <__printf_chk@plt>
   1d064:	mov	r0, r5
   1d068:	bl	214b4 <_ZdlPv@@Base+0xac4>
   1d06c:	str	r0, [r4, #84]	; 0x54
   1d070:	pop	{r4, r5, r6, pc}
   1d074:	ldr	r3, [r0, #84]	; 0x54
   1d078:	cmp	r3, #0
   1d07c:	bne	1d010 <fputs@plt+0x13c54>
   1d080:	b	1d020 <fputs@plt+0x13c64>
   1d084:	movw	r3, #1084	; 0x43c
   1d088:	movt	r3, #3
   1d08c:	push	{r4, lr}
   1d090:	mov	r4, r0
   1d094:	ldr	r3, [r3]
   1d098:	cmp	r3, #0
   1d09c:	popeq	{r4, pc}
   1d0a0:	ldr	r3, [r0, #80]	; 0x50
   1d0a4:	cmp	r3, #0
   1d0a8:	beq	1d0d0 <fputs@plt+0x13d14>
   1d0ac:	movw	r0, #25796	; 0x64c4
   1d0b0:	movt	r0, #2
   1d0b4:	bl	9308 <puts@plt>
   1d0b8:	ldr	r0, [r4, #80]	; 0x50
   1d0bc:	cmp	r0, #0
   1d0c0:	beq	1d0c8 <fputs@plt+0x13d0c>
   1d0c4:	bl	92f0 <_ZdaPv@plt>
   1d0c8:	mov	r3, #0
   1d0cc:	str	r3, [r4, #80]	; 0x50
   1d0d0:	ldr	r3, [r4, #84]	; 0x54
   1d0d4:	cmp	r3, #0
   1d0d8:	popeq	{r4, pc}
   1d0dc:	movw	r0, #25828	; 0x64e4
   1d0e0:	movt	r0, #2
   1d0e4:	bl	9308 <puts@plt>
   1d0e8:	ldr	r0, [r4, #84]	; 0x54
   1d0ec:	cmp	r0, #0
   1d0f0:	beq	1d0f8 <fputs@plt+0x13d3c>
   1d0f4:	bl	92f0 <_ZdaPv@plt>
   1d0f8:	mov	r3, #0
   1d0fc:	str	r3, [r4, #84]	; 0x54
   1d100:	pop	{r4, pc}
   1d104:	push	{r4, r5, r6, lr}
   1d108:	mov	r4, r1
   1d10c:	ldr	r1, [r0, #24]
   1d110:	mov	r5, r0
   1d114:	mov	r6, r2
   1d118:	cmp	r1, #0
   1d11c:	beq	1d130 <fputs@plt+0x13d74>
   1d120:	mov	r0, r4
   1d124:	bl	9380 <strcmp@plt>
   1d128:	cmp	r0, #0
   1d12c:	beq	1d150 <fputs@plt+0x13d94>
   1d130:	mov	r2, r6
   1d134:	movw	r1, #25844	; 0x64f4
   1d138:	mov	r0, #1
   1d13c:	movt	r1, #2
   1d140:	mov	r3, r4
   1d144:	bl	9140 <__printf_chk@plt>
   1d148:	str	r4, [r5, #24]
   1d14c:	pop	{r4, r5, r6, pc}
   1d150:	mov	r2, r6
   1d154:	movw	r1, #25836	; 0x64ec
   1d158:	mov	r0, #1
   1d15c:	movt	r1, #2
   1d160:	pop	{r4, r5, r6, lr}
   1d164:	b	9140 <__printf_chk@plt>
   1d168:	push	{r4, r5, r6, r7, lr}
   1d16c:	vldr	d7, [r0, #32]
   1d170:	vpush	{d8}
   1d174:	vldr	d5, [r2, #8]
   1d178:	vmov.f64	d8, d0
   1d17c:	vldr	d6, [r0, #40]	; 0x28
   1d180:	vldr	d0, [r2]
   1d184:	movw	r5, #1424	; 0x590
   1d188:	movt	r5, #3
   1d18c:	sub	sp, sp, #68	; 0x44
   1d190:	add	r4, sp, #24
   1d194:	vldr	d1, [r0, #56]	; 0x38
   1d198:	vsub.f64	d6, d6, d5
   1d19c:	ldr	r3, [r5]
   1d1a0:	mov	r6, r0
   1d1a4:	mov	r0, r4
   1d1a8:	mov	r7, r1
   1d1ac:	str	r3, [sp, #60]	; 0x3c
   1d1b0:	vsub.f64	d0, d0, d7
   1d1b4:	vdiv.f64	d0, d0, d1
   1d1b8:	vdiv.f64	d1, d6, d1
   1d1bc:	bl	1504c <fputs@plt+0xbc90>
   1d1c0:	vldr	d7, [r6, #56]	; 0x38
   1d1c4:	ldm	r4, {r0, r1, r2, r3}
   1d1c8:	cmp	r7, #0
   1d1cc:	add	ip, sp, #40	; 0x28
   1d1d0:	moveq	r7, #99	; 0x63
   1d1d4:	movne	r7, #67	; 0x43
   1d1d8:	str	r7, [sp, #8]
   1d1dc:	stm	ip, {r0, r1, r2, r3}
   1d1e0:	vldr	d6, [sp, #40]	; 0x28
   1d1e4:	movw	r1, #25856	; 0x6500
   1d1e8:	ldrd	r2, [sp, #48]	; 0x30
   1d1ec:	movt	r1, #2
   1d1f0:	mov	r0, #1
   1d1f4:	strd	r2, [sp]
   1d1f8:	vadd.f64	d5, d8, d8
   1d1fc:	vdiv.f64	d8, d8, d7
   1d200:	vdiv.f64	d7, d5, d7
   1d204:	vsub.f64	d5, d6, d8
   1d208:	vstr	d7, [sp, #16]
   1d20c:	vmov	r2, r3, d5
   1d210:	bl	9140 <__printf_chk@plt>
   1d214:	ldr	r2, [sp, #60]	; 0x3c
   1d218:	ldr	r3, [r5]
   1d21c:	cmp	r2, r3
   1d220:	bne	1d230 <fputs@plt+0x13e74>
   1d224:	add	sp, sp, #68	; 0x44
   1d228:	vpop	{d8}
   1d22c:	pop	{r4, r5, r6, r7, pc}
   1d230:	bl	92b4 <__stack_chk_fail@plt>
   1d234:	movw	r3, #1084	; 0x43c
   1d238:	movt	r3, #3
   1d23c:	push	{r4, r5, r6, lr}
   1d240:	movw	r6, #1424	; 0x590
   1d244:	movt	r6, #3
   1d248:	ldr	r3, [r3]
   1d24c:	mov	r5, r1
   1d250:	sub	sp, sp, #56	; 0x38
   1d254:	ldr	r1, [r6]
   1d258:	cmp	r3, #0
   1d25c:	mov	r4, r0
   1d260:	str	r1, [sp, #52]	; 0x34
   1d264:	bne	1d2ec <fputs@plt+0x13f30>
   1d268:	vldr	d7, [r0, #32]
   1d26c:	vldr	d0, [r5]
   1d270:	vldr	d1, [r0, #40]	; 0x28
   1d274:	vldr	d6, [r5, #8]
   1d278:	vsub.f64	d0, d0, d7
   1d27c:	add	r5, sp, #16
   1d280:	vldr	d7, [r0, #56]	; 0x38
   1d284:	movw	r4, #18874	; 0x49ba
   1d288:	mov	r0, r5
   1d28c:	movt	r4, #524	; 0x20c
   1d290:	vsub.f64	d1, d1, d6
   1d294:	vdiv.f64	d0, d0, d7
   1d298:	vdiv.f64	d1, d1, d7
   1d29c:	bl	1504c <fputs@plt+0xbc90>
   1d2a0:	ldm	r5, {r0, r1, r2, r3}
   1d2a4:	add	ip, sp, #32
   1d2a8:	movw	r5, #34603	; 0x872b
   1d2ac:	movt	r5, #16294	; 0x3fa6
   1d2b0:	strd	r4, [sp, #8]
   1d2b4:	stm	ip, {r0, r1, r2, r3}
   1d2b8:	movw	r1, #25896	; 0x6528
   1d2bc:	ldrd	r4, [sp, #40]	; 0x28
   1d2c0:	movt	r1, #2
   1d2c4:	ldrd	r2, [sp, #32]
   1d2c8:	mov	r0, #1
   1d2cc:	strd	r4, [sp]
   1d2d0:	bl	9140 <__printf_chk@plt>
   1d2d4:	ldr	r2, [sp, #52]	; 0x34
   1d2d8:	ldr	r3, [r6]
   1d2dc:	cmp	r2, r3
   1d2e0:	bne	1d318 <fputs@plt+0x13f5c>
   1d2e4:	add	sp, sp, #56	; 0x38
   1d2e8:	pop	{r4, r5, r6, pc}
   1d2ec:	ldr	r3, [r0]
   1d2f0:	vldr	d0, [r2, #16]
   1d2f4:	ldr	r3, [r3, #116]	; 0x74
   1d2f8:	blx	r3
   1d2fc:	ldr	r3, [r4]
   1d300:	mov	r1, r5
   1d304:	mov	r0, r4
   1d308:	mov	r2, r5
   1d30c:	ldr	r3, [r3, #92]	; 0x5c
   1d310:	blx	r3
   1d314:	b	1d2d4 <fputs@plt+0x13f18>
   1d318:	bl	92b4 <__stack_chk_fail@plt>
   1d31c:	vldr	d7, [r0, #32]
   1d320:	vldr	d5, [r2, #8]
   1d324:	vldr	d0, [r2]
   1d328:	vldr	d6, [r0, #40]	; 0x28
   1d32c:	vsub.f64	d0, d0, d7
   1d330:	vldr	d1, [r0, #56]	; 0x38
   1d334:	push	{r4, r5, r6, r7, r8, lr}
   1d338:	movw	r5, #1424	; 0x590
   1d33c:	movt	r5, #3
   1d340:	sub	sp, sp, #72	; 0x48
   1d344:	add	r4, sp, #32
   1d348:	mov	r6, r0
   1d34c:	ldr	r2, [r5]
   1d350:	mov	r8, r1
   1d354:	mov	r0, r4
   1d358:	mov	r7, r3
   1d35c:	str	r2, [sp, #68]	; 0x44
   1d360:	vsub.f64	d6, d6, d5
   1d364:	vdiv.f64	d0, d0, d1
   1d368:	vdiv.f64	d1, d6, d1
   1d36c:	bl	1504c <fputs@plt+0xbc90>
   1d370:	vldr	d7, [r6, #56]	; 0x38
   1d374:	vldr	d6, [r7]
   1d378:	vldr	d4, [r7, #8]
   1d37c:	ldm	r4, {r0, r1, r2, r3}
   1d380:	cmp	r8, #0
   1d384:	add	ip, sp, #48	; 0x30
   1d388:	moveq	r8, #101	; 0x65
   1d38c:	movne	r8, #69	; 0x45
   1d390:	str	r8, [sp, #8]
   1d394:	stm	ip, {r0, r1, r2, r3}
   1d398:	vldr	d5, [sp, #48]	; 0x30
   1d39c:	movw	r1, #25944	; 0x6558
   1d3a0:	ldrd	r2, [sp, #56]	; 0x38
   1d3a4:	movt	r1, #2
   1d3a8:	mov	r0, #1
   1d3ac:	strd	r2, [sp]
   1d3b0:	vadd.f64	d2, d7, d7
   1d3b4:	vdiv.f64	d3, d6, d7
   1d3b8:	vdiv.f64	d6, d6, d2
   1d3bc:	vstr	d3, [sp, #16]
   1d3c0:	vdiv.f64	d7, d4, d7
   1d3c4:	vsub.f64	d4, d5, d6
   1d3c8:	vstr	d7, [sp, #24]
   1d3cc:	vmov	r2, r3, d4
   1d3d0:	bl	9140 <__printf_chk@plt>
   1d3d4:	ldr	r2, [sp, #68]	; 0x44
   1d3d8:	ldr	r3, [r5]
   1d3dc:	cmp	r2, r3
   1d3e0:	bne	1d3ec <fputs@plt+0x14030>
   1d3e4:	add	sp, sp, #72	; 0x48
   1d3e8:	pop	{r4, r5, r6, r7, r8, pc}
   1d3ec:	bl	92b4 <__stack_chk_fail@plt>
   1d3f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3f4:	vpush	{d8}
   1d3f8:	movw	ip, #1424	; 0x590
   1d3fc:	sub	sp, sp, #100	; 0x64
   1d400:	movt	ip, #3
   1d404:	mov	r5, r1
   1d408:	ldr	r1, [r0]
   1d40c:	str	ip, [sp, #32]
   1d410:	vmov.f64	d8, d0
   1d414:	ldr	ip, [ip]
   1d418:	mov	r9, r3
   1d41c:	ldr	r3, [r1, #116]	; 0x74
   1d420:	mov	sl, r0
   1d424:	mov	r8, r2
   1d428:	vmov.f64	d0, #128	; 0xc0000000 -2.0
   1d42c:	str	ip, [sp, #92]	; 0x5c
   1d430:	blx	r3
   1d434:	movw	r3, #1084	; 0x43c
   1d438:	movt	r3, #3
   1d43c:	ldr	r3, [r3]
   1d440:	cmp	r3, #0
   1d444:	streq	r3, [sp, #36]	; 0x24
   1d448:	beq	1d460 <fputs@plt+0x140a4>
   1d44c:	vcmp.f64	d8, #0.0
   1d450:	vmrs	APSR_nzcv, fpscr
   1d454:	moveq	ip, #0
   1d458:	streq	ip, [sp, #36]	; 0x24
   1d45c:	bne	1d690 <fputs@plt+0x142d4>
   1d460:	cmp	r9, #0
   1d464:	ble	1d618 <fputs@plt+0x1425c>
   1d468:	movw	ip, #25992	; 0x6588
   1d46c:	movw	fp, #1484	; 0x5cc
   1d470:	movt	ip, #2
   1d474:	add	r8, r8, #12
   1d478:	str	ip, [sp, #16]
   1d47c:	movt	fp, #3
   1d480:	movw	ip, #19600	; 0x4c90
   1d484:	mov	r7, #0
   1d488:	movt	ip, #2
   1d48c:	vldr	d8, [pc, #636]	; 1d710 <fputs@plt+0x14354>
   1d490:	str	ip, [sp, #20]
   1d494:	mov	r6, r5
   1d498:	b	1d4ac <fputs@plt+0x140f0>
   1d49c:	add	r7, r7, #1
   1d4a0:	add	r8, r8, #20
   1d4a4:	cmp	r7, r9
   1d4a8:	beq	1d618 <fputs@plt+0x1425c>
   1d4ac:	ldr	r3, [r8, #-12]
   1d4b0:	cmp	r3, #0
   1d4b4:	beq	1d49c <fputs@plt+0x140e0>
   1d4b8:	ldrb	r3, [r3]
   1d4bc:	cmp	r3, #0
   1d4c0:	beq	1d49c <fputs@plt+0x140e0>
   1d4c4:	vldr	d6, [r6]
   1d4c8:	vldr	d7, [sl, #32]
   1d4cc:	vldr	d5, [sl, #40]	; 0x28
   1d4d0:	vsub.f64	d0, d6, d7
   1d4d4:	vldr	d6, [r6, #8]
   1d4d8:	add	r4, sp, #56	; 0x38
   1d4dc:	vldr	d1, [sl, #56]	; 0x38
   1d4e0:	mov	r0, r4
   1d4e4:	vsub.f64	d5, d5, d6
   1d4e8:	vdiv.f64	d0, d0, d1
   1d4ec:	vdiv.f64	d1, d5, d1
   1d4f0:	bl	1504c <fputs@plt+0xbc90>
   1d4f4:	ldm	r4, {r0, r1, r2, r3}
   1d4f8:	add	lr, sp, #72	; 0x48
   1d4fc:	ldr	ip, [r8]
   1d500:	cmp	ip, #0
   1d504:	stm	lr, {r0, r1, r2, r3}
   1d508:	vldr	d7, [sp, #80]	; 0x50
   1d50c:	vstr	d7, [sp, #24]
   1d510:	ldrd	r4, [sp, #72]	; 0x48
   1d514:	beq	1d530 <fputs@plt+0x14174>
   1d518:	ldr	r3, [sl]
   1d51c:	mov	r1, ip
   1d520:	mov	r0, sl
   1d524:	ldr	r2, [r8, #4]
   1d528:	ldr	r3, [r3, #52]	; 0x34
   1d52c:	blx	r3
   1d530:	mov	r2, r4
   1d534:	mov	r3, r5
   1d538:	movw	r1, #26136	; 0x6618
   1d53c:	mov	r0, #1
   1d540:	movt	r1, #2
   1d544:	bl	9140 <__printf_chk@plt>
   1d548:	ldr	r4, [r8, #-12]
   1d54c:	mov	r1, #39	; 0x27
   1d550:	mov	r0, r4
   1d554:	bl	9164 <strchr@plt>
   1d558:	ldr	ip, [sp, #20]
   1d55c:	ldr	r3, [r8, #-8]
   1d560:	ldr	r2, [sp, #16]
   1d564:	cmp	r0, #0
   1d568:	moveq	r2, ip
   1d56c:	cmp	r3, #2
   1d570:	beq	1d660 <fputs@plt+0x142a4>
   1d574:	cmp	r3, #1
   1d578:	beq	1d594 <fputs@plt+0x141d8>
   1d57c:	movw	r1, #26160	; 0x6630
   1d580:	str	r2, [sp]
   1d584:	mov	r3, r4
   1d588:	mov	r0, #1
   1d58c:	movt	r1, #2
   1d590:	bl	9140 <__printf_chk@plt>
   1d594:	ldr	r1, [fp]
   1d598:	mov	r0, #39	; 0x27
   1d59c:	bl	9368 <_IO_putc@plt>
   1d5a0:	sub	r0, r9, #1
   1d5a4:	str	r7, [sp, #4]
   1d5a8:	vstr	d8, [sp, #8]
   1d5ac:	str	r0, [sp]
   1d5b0:	movw	r1, #26176	; 0x6640
   1d5b4:	ldrd	r2, [sp, #24]
   1d5b8:	movt	r1, #2
   1d5bc:	mov	r0, #1
   1d5c0:	bl	9140 <__printf_chk@plt>
   1d5c4:	ldr	r0, [r8, #-4]
   1d5c8:	cmp	r0, #1
   1d5cc:	beq	1d650 <fputs@plt+0x14294>
   1d5d0:	cmp	r0, #2
   1d5d4:	beq	1d67c <fputs@plt+0x142c0>
   1d5d8:	ldr	r1, [fp]
   1d5dc:	mov	r0, #39	; 0x27
   1d5e0:	bl	9368 <_IO_putc@plt>
   1d5e4:	ldr	r0, [r8, #-12]
   1d5e8:	ldr	r1, [fp]
   1d5ec:	add	r7, r7, #1
   1d5f0:	bl	93bc <fputs@plt>
   1d5f4:	movw	r0, #25980	; 0x657c
   1d5f8:	mov	r1, #1
   1d5fc:	movt	r0, #2
   1d600:	mov	r2, #8
   1d604:	ldr	r3, [fp]
   1d608:	bl	926c <fwrite@plt>
   1d60c:	cmp	r7, r9
   1d610:	add	r8, r8, #20
   1d614:	bne	1d4ac <fputs@plt+0x140f0>
   1d618:	ldr	ip, [sp, #36]	; 0x24
   1d61c:	cmp	ip, #0
   1d620:	beq	1d630 <fputs@plt+0x14274>
   1d624:	movw	r0, #26220	; 0x666c
   1d628:	movt	r0, #2
   1d62c:	bl	9308 <puts@plt>
   1d630:	ldr	ip, [sp, #32]
   1d634:	ldr	r2, [sp, #92]	; 0x5c
   1d638:	ldr	r3, [ip]
   1d63c:	cmp	r2, r3
   1d640:	bne	1d708 <fputs@plt+0x1434c>
   1d644:	add	sp, sp, #100	; 0x64
   1d648:	vpop	{d8}
   1d64c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d650:	movw	r1, #26204	; 0x665c
   1d654:	movt	r1, #2
   1d658:	bl	9140 <__printf_chk@plt>
   1d65c:	b	1d5d8 <fputs@plt+0x1421c>
   1d660:	str	r2, [sp]
   1d664:	mov	r3, r4
   1d668:	movw	r1, #26148	; 0x6624
   1d66c:	mov	r0, #1
   1d670:	movt	r1, #2
   1d674:	bl	9140 <__printf_chk@plt>
   1d678:	b	1d594 <fputs@plt+0x141d8>
   1d67c:	movw	r1, #26212	; 0x6664
   1d680:	mov	r0, #1
   1d684:	movt	r1, #2
   1d688:	bl	9140 <__printf_chk@plt>
   1d68c:	b	1d5d8 <fputs@plt+0x1421c>
   1d690:	vldr	d6, [r5]
   1d694:	vldr	d7, [sl, #32]
   1d698:	vldr	d5, [sl, #40]	; 0x28
   1d69c:	vsub.f64	d0, d6, d7
   1d6a0:	vldr	d6, [r5, #8]
   1d6a4:	add	r4, sp, #72	; 0x48
   1d6a8:	vldr	d1, [sl, #56]	; 0x38
   1d6ac:	mov	ip, #1
   1d6b0:	mov	r0, r4
   1d6b4:	str	ip, [sp, #36]	; 0x24
   1d6b8:	vsub.f64	d5, d5, d6
   1d6bc:	vdiv.f64	d0, d0, d1
   1d6c0:	vdiv.f64	d1, d5, d1
   1d6c4:	bl	1504c <fputs@plt+0xbc90>
   1d6c8:	vldr	d6, [pc, #72]	; 1d718 <fputs@plt+0x1435c>
   1d6cc:	vldr	d7, [pc, #76]	; 1d720 <fputs@plt+0x14364>
   1d6d0:	ldm	r4, {r0, r1, r2, r3}
   1d6d4:	add	ip, sp, #40	; 0x28
   1d6d8:	stm	ip, {r0, r1, r2, r3}
   1d6dc:	movw	r1, #26000	; 0x6590
   1d6e0:	ldrd	r6, [sp, #48]	; 0x30
   1d6e4:	movt	r1, #2
   1d6e8:	ldrd	r2, [sp, #40]	; 0x28
   1d6ec:	mov	r0, #1
   1d6f0:	strd	r6, [sp]
   1d6f4:	vnmul.f64	d8, d8, d6
   1d6f8:	vdiv.f64	d7, d8, d7
   1d6fc:	vstr	d7, [sp, #8]
   1d700:	bl	9140 <__printf_chk@plt>
   1d704:	b	1d460 <fputs@plt+0x140a4>
   1d708:	bl	92b4 <__stack_chk_fail@plt>
   1d70c:	nop	{0}
   1d710:	addgt	r5, pc, #10496	; 0x2900
   1d714:	svccc	0x00cc28f5
   1d718:	andeq	r0, r0, r0
   1d71c:	rsbmi	r8, r6, r0
   1d720:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1d724:	strdmi	r2, [r9], -fp
   1d728:	vldr	d7, [r0, #32]
   1d72c:	vldr	d5, [r1, #8]
   1d730:	vldr	d0, [r1]
   1d734:	vldr	d6, [r0, #40]	; 0x28
   1d738:	vsub.f64	d0, d0, d7
   1d73c:	vldr	d1, [r0, #56]	; 0x38
   1d740:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d744:	movw	r6, #1424	; 0x590
   1d748:	movt	r6, #3
   1d74c:	sub	sp, sp, #148	; 0x94
   1d750:	add	r5, sp, #120	; 0x78
   1d754:	mov	r7, r0
   1d758:	ldr	r3, [r6]
   1d75c:	mov	r9, r2
   1d760:	mov	r0, r5
   1d764:	add	r4, sp, #104	; 0x68
   1d768:	add	r8, sp, #24
   1d76c:	str	r3, [sp, #140]	; 0x8c
   1d770:	vsub.f64	d6, d6, d5
   1d774:	vdiv.f64	d0, d0, d1
   1d778:	vdiv.f64	d1, d6, d1
   1d77c:	bl	1504c <fputs@plt+0xbc90>
   1d780:	vldr	d5, [r7, #32]
   1d784:	vldr	d6, [r9, #8]
   1d788:	vldr	d0, [r9]
   1d78c:	vldr	d1, [r7, #40]	; 0x28
   1d790:	vldr	d7, [r7, #56]	; 0x38
   1d794:	ldm	r5, {r0, r1, r2, r3}
   1d798:	add	lr, sp, #88	; 0x58
   1d79c:	add	ip, sp, #72	; 0x48
   1d7a0:	stm	lr, {r0, r1, r2, r3}
   1d7a4:	stm	ip, {r0, r1, r2, r3}
   1d7a8:	stm	r8, {r0, r1, r2, r3}
   1d7ac:	mov	r0, r4
   1d7b0:	vsub.f64	d0, d0, d5
   1d7b4:	vsub.f64	d1, d1, d6
   1d7b8:	vdiv.f64	d0, d0, d7
   1d7bc:	vdiv.f64	d1, d1, d7
   1d7c0:	bl	1504c <fputs@plt+0xbc90>
   1d7c4:	ldm	r4, {r0, r1, r2, r3}
   1d7c8:	add	ip, sp, #56	; 0x38
   1d7cc:	stm	r5, {r0, r1, r2, r3}
   1d7d0:	stm	ip, {r0, r1, r2, r3}
   1d7d4:	mov	r0, ip
   1d7d8:	mov	r1, r8
   1d7dc:	bl	15188 <fputs@plt+0xbdcc>
   1d7e0:	ldrd	r4, [sp, #32]
   1d7e4:	ldrd	r2, [sp, #24]
   1d7e8:	movw	r1, #26268	; 0x669c
   1d7ec:	mov	r0, #1
   1d7f0:	movt	r1, #2
   1d7f4:	strd	r4, [sp]
   1d7f8:	vstr	d0, [sp, #8]
   1d7fc:	vstr	d0, [sp, #40]	; 0x28
   1d800:	vstr	d1, [sp, #16]
   1d804:	vstr	d1, [sp, #48]	; 0x30
   1d808:	bl	9140 <__printf_chk@plt>
   1d80c:	ldr	r2, [sp, #140]	; 0x8c
   1d810:	ldr	r3, [r6]
   1d814:	cmp	r2, r3
   1d818:	bne	1d824 <fputs@plt+0x14468>
   1d81c:	add	sp, sp, #148	; 0x94
   1d820:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d824:	bl	92b4 <__stack_chk_fail@plt>
   1d828:	vldr	d7, [r0, #32]
   1d82c:	vldr	d5, [r1, #8]
   1d830:	vldr	d0, [r1]
   1d834:	vldr	d6, [r0, #40]	; 0x28
   1d838:	vsub.f64	d0, d0, d7
   1d83c:	vldr	d1, [r0, #56]	; 0x38
   1d840:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d844:	movw	r6, #1424	; 0x590
   1d848:	movt	r6, #3
   1d84c:	sub	sp, sp, #228	; 0xe4
   1d850:	add	r4, sp, #200	; 0xc8
   1d854:	mov	fp, r2
   1d858:	ldr	r2, [r6]
   1d85c:	mov	r7, r0
   1d860:	mov	r0, r4
   1d864:	mov	sl, r3
   1d868:	add	r9, sp, #40	; 0x28
   1d86c:	add	r8, sp, #56	; 0x38
   1d870:	str	r2, [sp, #220]	; 0xdc
   1d874:	add	r5, sp, #184	; 0xb8
   1d878:	vsub.f64	d6, d6, d5
   1d87c:	vdiv.f64	d0, d0, d1
   1d880:	vdiv.f64	d1, d6, d1
   1d884:	bl	1504c <fputs@plt+0xbc90>
   1d888:	vldr	d3, [fp]
   1d88c:	vldr	d5, [r7, #32]
   1d890:	vldr	d4, [fp, #8]
   1d894:	vldr	d6, [r7, #40]	; 0x28
   1d898:	vldr	d1, [r7, #56]	; 0x38
   1d89c:	ldm	r4, {r0, r1, r2, r3}
   1d8a0:	add	lr, sp, #136	; 0x88
   1d8a4:	add	ip, sp, #120	; 0x78
   1d8a8:	stm	lr, {r0, r1, r2, r3}
   1d8ac:	stm	ip, {r0, r1, r2, r3}
   1d8b0:	stm	r9, {r0, r1, r2, r3}
   1d8b4:	mov	r0, r4
   1d8b8:	vsub.f64	d0, d3, d5
   1d8bc:	vsub.f64	d6, d6, d4
   1d8c0:	vdiv.f64	d0, d0, d1
   1d8c4:	vdiv.f64	d1, d6, d1
   1d8c8:	bl	1504c <fputs@plt+0xbc90>
   1d8cc:	ldm	r4, {r0, r1, r2, r3}
   1d8d0:	add	lr, sp, #168	; 0xa8
   1d8d4:	add	ip, sp, #152	; 0x98
   1d8d8:	stm	lr, {r0, r1, r2, r3}
   1d8dc:	stm	ip, {r0, r1, r2, r3}
   1d8e0:	stm	r8, {r0, r1, r2, r3}
   1d8e4:	mov	r1, r9
   1d8e8:	mov	r0, r8
   1d8ec:	bl	15188 <fputs@plt+0xbdcc>
   1d8f0:	vldr	d3, [sl]
   1d8f4:	vldr	d4, [r7, #32]
   1d8f8:	vldr	d5, [r7, #40]	; 0x28
   1d8fc:	vldr	d6, [sl, #8]
   1d900:	vldr	d7, [r7, #56]	; 0x38
   1d904:	mov	r0, r5
   1d908:	vstr	d0, [sp, #72]	; 0x48
   1d90c:	vstr	d1, [sp, #80]	; 0x50
   1d910:	vsub.f64	d0, d3, d4
   1d914:	vsub.f64	d1, d5, d6
   1d918:	vdiv.f64	d0, d0, d7
   1d91c:	vdiv.f64	d1, d1, d7
   1d920:	bl	1504c <fputs@plt+0xbc90>
   1d924:	ldm	r5, {r0, r1, r2, r3}
   1d928:	add	ip, sp, #104	; 0x68
   1d92c:	stm	r4, {r0, r1, r2, r3}
   1d930:	stm	ip, {r0, r1, r2, r3}
   1d934:	mov	r0, ip
   1d938:	mov	r1, r8
   1d93c:	bl	15188 <fputs@plt+0xbdcc>
   1d940:	ldrd	r4, [sp, #48]	; 0x30
   1d944:	ldrd	r2, [sp, #40]	; 0x28
   1d948:	movw	r1, #26312	; 0x66c8
   1d94c:	mov	r0, #1
   1d950:	movt	r1, #2
   1d954:	strd	r4, [sp]
   1d958:	ldrd	r4, [sp, #72]	; 0x48
   1d95c:	strd	r4, [sp, #8]
   1d960:	ldrd	r4, [sp, #80]	; 0x50
   1d964:	strd	r4, [sp, #16]
   1d968:	vstr	d0, [sp, #24]
   1d96c:	vstr	d0, [sp, #88]	; 0x58
   1d970:	vstr	d1, [sp, #32]
   1d974:	vstr	d1, [sp, #96]	; 0x60
   1d978:	bl	9140 <__printf_chk@plt>
   1d97c:	ldr	r2, [sp, #220]	; 0xdc
   1d980:	ldr	r3, [r6]
   1d984:	cmp	r2, r3
   1d988:	bne	1d994 <fputs@plt+0x145d8>
   1d98c:	add	sp, sp, #228	; 0xe4
   1d990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d994:	bl	92b4 <__stack_chk_fail@plt>
   1d998:	vldr	d7, [r0, #32]
   1d99c:	vldr	d5, [r1]
   1d9a0:	vldr	d4, [r1, #8]
   1d9a4:	vsub.f64	d0, d5, d7
   1d9a8:	vldr	d6, [r0, #40]	; 0x28
   1d9ac:	movw	r1, #1424	; 0x590
   1d9b0:	movt	r1, #3
   1d9b4:	vldr	d1, [r0, #56]	; 0x38
   1d9b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d9bc:	sub	sp, sp, #148	; 0x94
   1d9c0:	add	r5, sp, #120	; 0x78
   1d9c4:	mov	sl, r2
   1d9c8:	ldr	r2, [r1]
   1d9cc:	mov	fp, r0
   1d9d0:	mov	r0, r5
   1d9d4:	str	r1, [sp, #20]
   1d9d8:	str	r3, [sp, #16]
   1d9dc:	movw	r3, #1484	; 0x5cc
   1d9e0:	str	r2, [sp, #140]	; 0x8c
   1d9e4:	movt	r3, #3
   1d9e8:	vsub.f64	d6, d6, d4
   1d9ec:	str	r3, [sp, #12]
   1d9f0:	add	r7, sp, #24
   1d9f4:	add	r4, sp, #72	; 0x48
   1d9f8:	vdiv.f64	d0, d0, d1
   1d9fc:	vdiv.f64	d1, d6, d1
   1da00:	bl	1504c <fputs@plt+0xbc90>
   1da04:	ldm	r5, {r0, r1, r2, r3}
   1da08:	add	lr, sp, #56	; 0x38
   1da0c:	stm	r7, {r0, r1, r2, r3}
   1da10:	ldrd	r8, [sp, #32]
   1da14:	stm	lr, {r0, r1, r2, r3}
   1da18:	stm	r4, {r0, r1, r2, r3}
   1da1c:	movw	r1, #26368	; 0x6700
   1da20:	ldrd	r2, [sp, #24]
   1da24:	movt	r1, #2
   1da28:	mov	r0, #1
   1da2c:	strd	r8, [sp]
   1da30:	bl	9140 <__printf_chk@plt>
   1da34:	ldr	r1, [sp, #12]
   1da38:	mov	r2, #5
   1da3c:	movw	r0, #26388	; 0x6714
   1da40:	movt	r0, #2
   1da44:	ldr	r3, [r1]
   1da48:	mov	r1, #1
   1da4c:	bl	926c <fwrite@plt>
   1da50:	ldr	r2, [sp, #16]
   1da54:	cmp	r2, #0
   1da58:	ble	1db10 <fputs@plt+0x14754>
   1da5c:	add	sl, sl, #8
   1da60:	add	r8, sp, #104	; 0x68
   1da64:	add	r6, sp, #88	; 0x58
   1da68:	add	r4, sp, #40	; 0x28
   1da6c:	mov	r9, #0
   1da70:	vldr	d7, [fp, #32]
   1da74:	vldr	d6, [sl]
   1da78:	vldr	d0, [sl, #-8]
   1da7c:	vldr	d1, [fp, #40]	; 0x28
   1da80:	mov	r0, r8
   1da84:	vsub.f64	d1, d1, d6
   1da88:	vsub.f64	d0, d0, d7
   1da8c:	vldr	d7, [fp, #56]	; 0x38
   1da90:	vdiv.f64	d0, d0, d7
   1da94:	vdiv.f64	d1, d1, d7
   1da98:	bl	1504c <fputs@plt+0xbc90>
   1da9c:	ldm	r8, {r0, r1, r2, r3}
   1daa0:	stm	r5, {r0, r1, r2, r3}
   1daa4:	stm	r6, {r0, r1, r2, r3}
   1daa8:	stm	r4, {r0, r1, r2, r3}
   1daac:	mov	r0, r4
   1dab0:	mov	r1, r7
   1dab4:	bl	15188 <fputs@plt+0xbdcc>
   1dab8:	ldm	r4, {r0, r1, r2, r3}
   1dabc:	cmp	r9, #0
   1dac0:	stm	r7, {r0, r1, r2, r3}
   1dac4:	vstr	d0, [sp, #104]	; 0x68
   1dac8:	vstr	d1, [sp, #112]	; 0x70
   1dacc:	beq	1dae0 <fputs@plt+0x14724>
   1dad0:	ldr	r2, [sp, #12]
   1dad4:	mov	r0, #32
   1dad8:	ldr	r1, [r2]
   1dadc:	bl	9368 <_IO_putc@plt>
   1dae0:	ldrd	r0, [sp, #112]	; 0x70
   1dae4:	add	r9, r9, #1
   1dae8:	ldrd	r2, [sp, #104]	; 0x68
   1daec:	add	sl, sl, #16
   1daf0:	strd	r0, [sp]
   1daf4:	movw	r1, #25584	; 0x63f0
   1daf8:	mov	r0, #1
   1dafc:	movt	r1, #2
   1db00:	bl	9140 <__printf_chk@plt>
   1db04:	ldr	r3, [sp, #16]
   1db08:	cmp	r9, r3
   1db0c:	bne	1da70 <fputs@plt+0x146b4>
   1db10:	movw	r0, #26396	; 0x671c
   1db14:	movt	r0, #2
   1db18:	bl	9308 <puts@plt>
   1db1c:	ldr	r1, [sp, #20]
   1db20:	ldr	r2, [sp, #140]	; 0x8c
   1db24:	ldr	r3, [r1]
   1db28:	cmp	r2, r3
   1db2c:	bne	1db38 <fputs@plt+0x1477c>
   1db30:	add	sp, sp, #148	; 0x94
   1db34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db38:	bl	92b4 <__stack_chk_fail@plt>
   1db3c:	vldr	d7, [r0, #32]
   1db40:	vldr	d6, [r2]
   1db44:	vldr	d5, [r0, #40]	; 0x28
   1db48:	vsub.f64	d0, d6, d7
   1db4c:	vldr	d6, [r2, #8]
   1db50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db54:	mov	sl, r2
   1db58:	vldr	d1, [r0, #56]	; 0x38
   1db5c:	sub	sp, sp, #148	; 0x94
   1db60:	movw	r2, #1424	; 0x590
   1db64:	movt	r2, #3
   1db68:	add	r5, sp, #120	; 0x78
   1db6c:	str	r2, [sp, #20]
   1db70:	mov	fp, r0
   1db74:	ldr	r2, [r2]
   1db78:	mov	r0, r5
   1db7c:	mov	r4, r1
   1db80:	str	r3, [sp, #16]
   1db84:	add	r7, sp, #24
   1db88:	add	r6, sp, #72	; 0x48
   1db8c:	str	r2, [sp, #140]	; 0x8c
   1db90:	vsub.f64	d5, d5, d6
   1db94:	vdiv.f64	d0, d0, d1
   1db98:	vdiv.f64	d1, d5, d1
   1db9c:	bl	1504c <fputs@plt+0xbc90>
   1dba0:	ldm	r5, {r0, r1, r2, r3}
   1dba4:	add	lr, sp, #56	; 0x38
   1dba8:	stm	r7, {r0, r1, r2, r3}
   1dbac:	ldrd	r8, [sp, #32]
   1dbb0:	stm	lr, {r0, r1, r2, r3}
   1dbb4:	stm	r6, {r0, r1, r2, r3}
   1dbb8:	movw	r1, #26368	; 0x6700
   1dbbc:	ldrd	r2, [sp, #24]
   1dbc0:	movt	r1, #2
   1dbc4:	mov	r0, #1
   1dbc8:	strd	r8, [sp]
   1dbcc:	bl	9140 <__printf_chk@plt>
   1dbd0:	cmp	r4, #0
   1dbd4:	movw	r1, #26408	; 0x6728
   1dbd8:	mov	r0, #1
   1dbdc:	moveq	r2, #112	; 0x70
   1dbe0:	movne	r2, #80	; 0x50
   1dbe4:	movt	r1, #2
   1dbe8:	bl	9140 <__printf_chk@plt>
   1dbec:	ldr	r3, [sp, #16]
   1dbf0:	cmp	r3, #1
   1dbf4:	ble	1dcb8 <fputs@plt+0x148fc>
   1dbf8:	add	sl, sl, #24
   1dbfc:	add	r8, sp, #104	; 0x68
   1dc00:	add	r6, sp, #88	; 0x58
   1dc04:	add	r4, sp, #40	; 0x28
   1dc08:	mov	r9, #1
   1dc0c:	movw	r2, #1484	; 0x5cc
   1dc10:	movt	r2, #3
   1dc14:	str	r2, [sp, #12]
   1dc18:	vldr	d7, [fp, #32]
   1dc1c:	vldr	d6, [sl]
   1dc20:	vldr	d0, [sl, #-8]
   1dc24:	vldr	d1, [fp, #40]	; 0x28
   1dc28:	mov	r0, r8
   1dc2c:	vsub.f64	d1, d1, d6
   1dc30:	vsub.f64	d0, d0, d7
   1dc34:	vldr	d7, [fp, #56]	; 0x38
   1dc38:	vdiv.f64	d0, d0, d7
   1dc3c:	vdiv.f64	d1, d1, d7
   1dc40:	bl	1504c <fputs@plt+0xbc90>
   1dc44:	ldm	r8, {r0, r1, r2, r3}
   1dc48:	stm	r5, {r0, r1, r2, r3}
   1dc4c:	stm	r6, {r0, r1, r2, r3}
   1dc50:	stm	r4, {r0, r1, r2, r3}
   1dc54:	mov	r0, r4
   1dc58:	mov	r1, r7
   1dc5c:	bl	15188 <fputs@plt+0xbdcc>
   1dc60:	ldm	r4, {r0, r1, r2, r3}
   1dc64:	cmp	r9, #1
   1dc68:	stm	r7, {r0, r1, r2, r3}
   1dc6c:	vstr	d0, [sp, #104]	; 0x68
   1dc70:	vstr	d1, [sp, #112]	; 0x70
   1dc74:	beq	1dc88 <fputs@plt+0x148cc>
   1dc78:	ldr	r3, [sp, #12]
   1dc7c:	mov	r0, #32
   1dc80:	ldr	r1, [r3]
   1dc84:	bl	9368 <_IO_putc@plt>
   1dc88:	ldrd	r0, [sp, #112]	; 0x70
   1dc8c:	add	r9, r9, #1
   1dc90:	ldrd	r2, [sp, #104]	; 0x68
   1dc94:	add	sl, sl, #16
   1dc98:	strd	r0, [sp]
   1dc9c:	movw	r1, #25584	; 0x63f0
   1dca0:	mov	r0, #1
   1dca4:	movt	r1, #2
   1dca8:	bl	9140 <__printf_chk@plt>
   1dcac:	ldr	r1, [sp, #16]
   1dcb0:	cmp	r9, r1
   1dcb4:	bne	1dc18 <fputs@plt+0x1485c>
   1dcb8:	movw	r0, #26396	; 0x671c
   1dcbc:	movt	r0, #2
   1dcc0:	bl	9308 <puts@plt>
   1dcc4:	ldr	r1, [sp, #20]
   1dcc8:	ldr	r2, [sp, #140]	; 0x8c
   1dccc:	ldr	r3, [r1]
   1dcd0:	cmp	r2, r3
   1dcd4:	bne	1dce0 <fputs@plt+0x14924>
   1dcd8:	add	sp, sp, #148	; 0x94
   1dcdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dce0:	bl	92b4 <__stack_chk_fail@plt>
   1dce4:	push	{r4, r5, r6, lr}
   1dce8:	mov	r6, r0
   1dcec:	bl	14d94 <fputs@plt+0xb9d8>
   1dcf0:	ldr	r3, [pc, #84]	; 1dd4c <fputs@plt+0x14990>
   1dcf4:	mov	r2, #0
   1dcf8:	add	r0, r6, #32
   1dcfc:	str	r2, [r6, #24]
   1dd00:	ldr	r4, [pc, #72]	; 1dd50 <fputs@plt+0x14994>
   1dd04:	str	r3, [r6]
   1dd08:	bl	15038 <fputs@plt+0xbc7c>
   1dd0c:	mov	r3, #0
   1dd10:	mov	r4, #0
   1dd14:	mov	r5, #-1073741824	; 0xc0000000
   1dd18:	str	r3, [r6, #80]	; 0x50
   1dd1c:	str	r3, [r6, #84]	; 0x54
   1dd20:	mov	r2, #0
   1dd24:	mov	r3, #0
   1dd28:	strd	r4, [r6, #64]	; 0x40
   1dd2c:	movt	r3, #49136	; 0xbff0
   1dd30:	mov	r0, r6
   1dd34:	strd	r2, [r6, #72]	; 0x48
   1dd38:	pop	{r4, r5, r6, pc}
   1dd3c:	str	r4, [r6]
   1dd40:	mov	r0, r6
   1dd44:	bl	14820 <fputs@plt+0xb464>
   1dd48:	bl	9188 <__cxa_end_cleanup@plt>
   1dd4c:	andeq	r6, r2, r8, lsl #6
   1dd50:	strdeq	r6, [r2], -r0
   1dd54:	push	{r4, lr}
   1dd58:	mov	r0, #88	; 0x58
   1dd5c:	bl	209a0 <_Znwj@@Base>
   1dd60:	mov	r4, r0
   1dd64:	bl	1dce4 <fputs@plt+0x14928>
   1dd68:	mov	r0, r4
   1dd6c:	pop	{r4, pc}
   1dd70:	mov	r0, r4
   1dd74:	bl	209f0 <_ZdlPv@@Base>
   1dd78:	bl	9188 <__cxa_end_cleanup@plt>
   1dd7c:	nop	{0}
   1dd80:	ldr	r3, [pc, #20]	; 1dd9c <fputs@plt+0x149e0>
   1dd84:	push	{r4, lr}
   1dd88:	mov	r4, r0
   1dd8c:	str	r3, [r0]
   1dd90:	bl	14820 <fputs@plt+0xb464>
   1dd94:	mov	r0, r4
   1dd98:	pop	{r4, pc}
   1dd9c:	strdeq	r6, [r2], -r0
   1dda0:	ldr	r3, [pc, #28]	; 1ddc4 <fputs@plt+0x14a08>
   1dda4:	push	{r4, lr}
   1dda8:	mov	r4, r0
   1ddac:	str	r3, [r0]
   1ddb0:	bl	14820 <fputs@plt+0xb464>
   1ddb4:	mov	r0, r4
   1ddb8:	bl	209f0 <_ZdlPv@@Base>
   1ddbc:	mov	r0, r4
   1ddc0:	pop	{r4, pc}
   1ddc4:	strdeq	r6, [r2], -r0
   1ddc8:	mov	r0, #1
   1ddcc:	bx	lr
   1ddd0:	bx	lr
   1ddd4:	bx	lr
   1ddd8:	mov	r0, #0
   1dddc:	bx	lr
   1dde0:	mov	r0, #0
   1dde4:	bx	lr
   1dde8:	ldr	r3, [pc, #20]	; 1de04 <fputs@plt+0x14a48>
   1ddec:	push	{r4, lr}
   1ddf0:	mov	r4, r0
   1ddf4:	str	r3, [r0]
   1ddf8:	bl	14820 <fputs@plt+0xb464>
   1ddfc:	mov	r0, r4
   1de00:	pop	{r4, pc}
   1de04:	strdeq	r6, [r2], -r0
   1de08:	ldr	r3, [pc, #28]	; 1de2c <fputs@plt+0x14a70>
   1de0c:	push	{r4, lr}
   1de10:	mov	r4, r0
   1de14:	str	r3, [r0]
   1de18:	bl	14820 <fputs@plt+0xb464>
   1de1c:	mov	r0, r4
   1de20:	bl	209f0 <_ZdlPv@@Base>
   1de24:	mov	r0, r4
   1de28:	pop	{r4, pc}
   1de2c:	strdeq	r6, [r2], -r0
   1de30:	vmov.f64	d6, #240	; 0xbf800000 -1.0
   1de34:	vldr	d7, [r0, #64]	; 0x40
   1de38:	vcmp.f64	d0, #0.0
   1de3c:	vmrs	APSR_nzcv, fpscr
   1de40:	vmovmi.f64	d0, d6
   1de44:	vcmp.f64	d7, d0
   1de48:	vmrs	APSR_nzcv, fpscr
   1de4c:	bxeq	lr
   1de50:	vcmpe.f64	d0, #0.0
   1de54:	vstr	d0, [r0, #64]	; 0x40
   1de58:	movw	r1, #26680	; 0x6838
   1de5c:	mov	r0, #1
   1de60:	movt	r1, #2
   1de64:	vmrs	APSR_nzcv, fpscr
   1de68:	vmovpl.f64	d7, #96	; 0x3f000000  0.5
   1de6c:	vldrpl	d6, [pc, #20]	; 1de88 <fputs@plt+0x14acc>
   1de70:	movmi	r2, #8
   1de74:	vmlapl.f64	d7, d0, d6
   1de78:	vcvtpl.s32.f64	s13, d7
   1de7c:	vmovpl	r2, s13
   1de80:	b	9140 <__printf_chk@plt>
   1de84:	nop	{0}
   1de88:	bicvc	r1, r7, r2, ror ip
   1de8c:	eormi	ip, fp, ip, lsl r7
   1de90:	push	{r4, r5, lr}
   1de94:	sub	sp, sp, #12
   1de98:	ldrd	r4, [r0, #48]	; 0x30
   1de9c:	movw	r1, #26704	; 0x6850
   1dea0:	ldrd	r2, [r0, #40]	; 0x28
   1dea4:	movt	r1, #2
   1dea8:	mov	r0, #1
   1deac:	strd	r4, [sp]
   1deb0:	bl	9140 <__printf_chk@plt>
   1deb4:	add	sp, sp, #12
   1deb8:	pop	{r4, r5, pc}
   1debc:	vcmpe.f64	d0, #0.0
   1dec0:	push	{r4, r5, r6, r7, lr}
   1dec4:	mov	r6, r0
   1dec8:	sub	sp, sp, #12
   1decc:	mov	r5, r1
   1ded0:	mov	r4, r2
   1ded4:	mov	r7, r3
   1ded8:	vmrs	APSR_nzcv, fpscr
   1dedc:	blt	1df04 <fputs@plt+0x14b48>
   1dee0:	vmov.f64	d7, #112	; 0x3f800000  1.0
   1dee4:	movw	r1, #26784	; 0x68a0
   1dee8:	mov	r0, #1
   1deec:	movt	r1, #2
   1def0:	vcmp.f64	d0, d7
   1def4:	vmrs	APSR_nzcv, fpscr
   1def8:	vmovgt	r2, r3, d7
   1defc:	vmovle	r2, r3, d0
   1df00:	bl	9140 <__printf_chk@plt>
   1df04:	ldr	r3, [r6]
   1df08:	sub	r1, r4, #-268435455	; 0xf0000001
   1df0c:	str	r7, [sp]
   1df10:	mov	r0, r6
   1df14:	add	r1, r5, r1, lsl #4
   1df18:	mov	r2, r5
   1df1c:	ldr	ip, [r3, #24]
   1df20:	mov	r3, r4
   1df24:	blx	ip
   1df28:	add	sp, sp, #12
   1df2c:	pop	{r4, r5, r6, r7, pc}
   1df30:	push	{r4, r5, r6, r7, r8, lr}
   1df34:	sub	sp, sp, #8
   1df38:	ldrd	r4, [r1]
   1df3c:	mov	r6, r0
   1df40:	mov	r7, r1
   1df44:	mov	r8, r2
   1df48:	strd	r4, [r0, #24]
   1df4c:	ldrd	r4, [r2, #8]
   1df50:	strd	r4, [r0, #32]
   1df54:	bl	14e1c <fputs@plt+0xba60>
   1df58:	vldr	d6, [r8, #8]
   1df5c:	vldr	d7, [r7, #8]
   1df60:	vldr	d5, [r8]
   1df64:	vsub.f64	d7, d6, d7
   1df68:	vldr	d6, [r7]
   1df6c:	movw	r3, #2700	; 0xa8c
   1df70:	movt	r3, #3
   1df74:	movw	r1, #26812	; 0x68bc
   1df78:	mov	r0, #1
   1df7c:	ldr	r3, [r3]
   1df80:	movt	r1, #2
   1df84:	str	r3, [sp]
   1df88:	mov	r2, r3
   1df8c:	vsub.f64	d6, d5, d6
   1df90:	vdiv.f64	d7, d7, d0
   1df94:	vstr	d0, [r6, #56]	; 0x38
   1df98:	vdiv.f64	d0, d6, d0
   1df9c:	vstr	d7, [r6, #40]	; 0x28
   1dfa0:	vstr	d0, [r6, #48]	; 0x30
   1dfa4:	bl	9140 <__printf_chk@plt>
   1dfa8:	mov	r2, #0
   1dfac:	mov	r3, #-1073741824	; 0xc0000000
   1dfb0:	strd	r2, [r6, #64]	; 0x40
   1dfb4:	add	sp, sp, #8
   1dfb8:	pop	{r4, r5, r6, r7, r8, pc}
   1dfbc:	vldr	d7, [r0, #24]
   1dfc0:	vldr	d6, [r1]
   1dfc4:	vldr	d1, [r0, #32]
   1dfc8:	vsub.f64	d0, d6, d7
   1dfcc:	vldr	d5, [r1, #8]
   1dfd0:	movw	r1, #1424	; 0x590
   1dfd4:	movt	r1, #3
   1dfd8:	vldr	d7, [r0, #56]	; 0x38
   1dfdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dfe0:	sub	sp, sp, #68	; 0x44
   1dfe4:	add	r4, sp, #24
   1dfe8:	mov	r6, r2
   1dfec:	ldr	r2, [r1]
   1dff0:	mov	r9, r3
   1dff4:	mov	r0, r4
   1dff8:	str	r1, [sp, #20]
   1dffc:	str	r2, [sp, #60]	; 0x3c
   1e000:	vsub.f64	d1, d1, d5
   1e004:	vdiv.f64	d0, d0, d7
   1e008:	vdiv.f64	d1, d1, d7
   1e00c:	bl	1504c <fputs@plt+0xbc90>
   1e010:	ldm	r4, {r0, r1, r2, r3}
   1e014:	add	ip, sp, #40	; 0x28
   1e018:	cmp	r9, #0
   1e01c:	stm	ip, {r0, r1, r2, r3}
   1e020:	vldr	d7, [sp, #40]	; 0x28
   1e024:	vstr	d7, [sp, #8]
   1e028:	ldrd	sl, [sp, #48]	; 0x30
   1e02c:	ble	1e164 <fputs@plt+0x14da8>
   1e030:	movw	r7, #1484	; 0x5cc
   1e034:	rsb	r5, r9, #0
   1e038:	movt	r7, #3
   1e03c:	mov	r4, #0
   1e040:	b	1e13c <fputs@plt+0x14d80>
   1e044:	add	r8, r6, r4
   1e048:	mov	r2, r5
   1e04c:	ldr	r3, [r8, #8]
   1e050:	cmp	r3, #1
   1e054:	addeq	r5, r5, #2
   1e058:	beq	1e070 <fputs@plt+0x14cb4>
   1e05c:	cmp	r3, #2
   1e060:	addeq	r5, r2, #2
   1e064:	addne	r2, r2, #1
   1e068:	addne	r5, r5, #2
   1e06c:	moveq	r2, r5
   1e070:	cmp	r2, #0
   1e074:	bne	1e180 <fputs@plt+0x14dc4>
   1e078:	movw	r1, #27056	; 0x69b0
   1e07c:	mov	r0, #1
   1e080:	movt	r1, #2
   1e084:	mov	r2, sl
   1e088:	mov	r3, fp
   1e08c:	bl	9140 <__printf_chk@plt>
   1e090:	ldrd	r2, [sp, #8]
   1e094:	movw	r1, #27264	; 0x6a80
   1e098:	mov	r0, #1
   1e09c:	movt	r1, #2
   1e0a0:	bl	9140 <__printf_chk@plt>
   1e0a4:	mov	r2, #13
   1e0a8:	ldr	r3, [r7]
   1e0ac:	movw	r0, #27304	; 0x6aa8
   1e0b0:	mov	r1, #1
   1e0b4:	movt	r0, #2
   1e0b8:	bl	926c <fwrite@plt>
   1e0bc:	ldr	r2, [r8, #4]
   1e0c0:	movw	r3, #1484	; 0x5cc
   1e0c4:	movt	r3, #3
   1e0c8:	cmp	r2, #1
   1e0cc:	beq	1e0e8 <fputs@plt+0x14d2c>
   1e0d0:	movw	r0, #27320	; 0x6ab8
   1e0d4:	ldr	r3, [r3]
   1e0d8:	mov	r1, #1
   1e0dc:	movt	r0, #2
   1e0e0:	mov	r2, #5
   1e0e4:	bl	926c <fwrite@plt>
   1e0e8:	ldr	r0, [r6, r4]
   1e0ec:	ldr	r1, [r7]
   1e0f0:	bl	93bc <fputs@plt>
   1e0f4:	ldr	r3, [r8, #4]
   1e0f8:	cmp	r3, #2
   1e0fc:	beq	1e118 <fputs@plt+0x14d5c>
   1e100:	movw	r0, #27328	; 0x6ac0
   1e104:	mov	r1, #1
   1e108:	movt	r0, #2
   1e10c:	mov	r2, #4
   1e110:	ldr	r3, [r7]
   1e114:	bl	926c <fwrite@plt>
   1e118:	movw	r0, #27336	; 0x6ac8
   1e11c:	mov	r1, #1
   1e120:	movt	r0, #2
   1e124:	mov	r2, #4
   1e128:	ldr	r3, [r7]
   1e12c:	add	r4, r4, #20
   1e130:	bl	926c <fwrite@plt>
   1e134:	cmp	r5, r9
   1e138:	beq	1e164 <fputs@plt+0x14da8>
   1e13c:	ldr	r3, [r6, r4]
   1e140:	cmp	r3, #0
   1e144:	beq	1e154 <fputs@plt+0x14d98>
   1e148:	ldrb	r3, [r3]
   1e14c:	cmp	r3, #0
   1e150:	bne	1e044 <fputs@plt+0x14c88>
   1e154:	add	r5, r5, #2
   1e158:	add	r4, r4, #20
   1e15c:	cmp	r5, r9
   1e160:	bne	1e13c <fputs@plt+0x14d80>
   1e164:	ldr	r1, [sp, #20]
   1e168:	ldr	r2, [sp, #60]	; 0x3c
   1e16c:	ldr	r3, [r1]
   1e170:	cmp	r2, r3
   1e174:	bne	1e198 <fputs@plt+0x14ddc>
   1e178:	add	sp, sp, #68	; 0x44
   1e17c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e180:	strd	sl, [sp]
   1e184:	movw	r1, #27112	; 0x69e8
   1e188:	mov	r0, #1
   1e18c:	movt	r1, #2
   1e190:	bl	9140 <__printf_chk@plt>
   1e194:	b	1e090 <fputs@plt+0x14cd4>
   1e198:	bl	92b4 <__stack_chk_fail@plt>
   1e19c:	push	{r4, r5, r6, r7, r8, lr}
   1e1a0:	vpush	{d8-d9}
   1e1a4:	movw	r4, #1424	; 0x590
   1e1a8:	movt	r4, #3
   1e1ac:	vcmpe.f64	d1, #0.0
   1e1b0:	sub	sp, sp, #48	; 0x30
   1e1b4:	mov	r6, r0
   1e1b8:	ldr	r3, [r4]
   1e1bc:	mov	r7, r1
   1e1c0:	mov	r5, r2
   1e1c4:	vmov.f64	d8, d1
   1e1c8:	vmrs	APSR_nzcv, fpscr
   1e1cc:	str	r3, [sp, #44]	; 0x2c
   1e1d0:	vmov.f64	d9, d0
   1e1d4:	blt	1e234 <fputs@plt+0x14e78>
   1e1d8:	ldr	r3, [r2]
   1e1dc:	cmp	r3, #1
   1e1e0:	beq	1e2b0 <fputs@plt+0x14ef4>
   1e1e4:	vmov.f64	d7, #112	; 0x3f800000  1.0
   1e1e8:	add	r0, sp, #16
   1e1ec:	vcmp.f64	d1, d7
   1e1f0:	vmrs	APSR_nzcv, fpscr
   1e1f4:	vmovgt.f64	d8, d7
   1e1f8:	bl	14d78 <fputs@plt+0xb9bc>
   1e1fc:	ldr	r3, [r6]
   1e200:	mov	r0, sp
   1e204:	mov	r2, #0
   1e208:	str	r2, [sp, #16]
   1e20c:	vadd.f64	d0, d9, d9
   1e210:	ldr	r8, [r3, #40]	; 0x28
   1e214:	vmov.f64	d1, d0
   1e218:	bl	1504c <fputs@plt+0xbc90>
   1e21c:	mov	r0, r6
   1e220:	mov	r1, r7
   1e224:	mov	r2, sp
   1e228:	add	r3, sp, #16
   1e22c:	vmov.f64	d0, d8
   1e230:	blx	r8
   1e234:	ldr	r3, [r5]
   1e238:	cmp	r3, #3
   1e23c:	ldrls	pc, [pc, r3, lsl #2]
   1e240:	b	1e254 <fputs@plt+0x14e98>
   1e244:	andeq	lr, r1, r4, ror #4
   1e248:			; <UNDEFINED> instruction: 0x0001e2b0
   1e24c:	muleq	r1, r8, r2
   1e250:	andeq	lr, r1, r0, lsl #5
   1e254:	movw	r1, #27344	; 0x6ad0
   1e258:	mov	r0, #308	; 0x134
   1e25c:	movt	r1, #2
   1e260:	bl	1eec8 <fputs@plt+0x15b0c>
   1e264:	ldr	r2, [sp, #44]	; 0x2c
   1e268:	ldr	r3, [r4]
   1e26c:	cmp	r2, r3
   1e270:	bne	1e2e4 <fputs@plt+0x14f28>
   1e274:	add	sp, sp, #48	; 0x30
   1e278:	vpop	{d8-d9}
   1e27c:	pop	{r4, r5, r6, r7, r8, pc}
   1e280:	mov	r0, r6
   1e284:	mov	r1, r7
   1e288:	vmov.f64	d0, d9
   1e28c:	mov	r2, r5
   1e290:	bl	196c4 <fputs@plt+0x10308>
   1e294:	b	1e264 <fputs@plt+0x14ea8>
   1e298:	mov	r0, r6
   1e29c:	mov	r1, r7
   1e2a0:	vmov.f64	d0, d9
   1e2a4:	mov	r2, r5
   1e2a8:	bl	19868 <fputs@plt+0x104ac>
   1e2ac:	b	1e264 <fputs@plt+0x14ea8>
   1e2b0:	vadd.f64	d0, d9, d9
   1e2b4:	ldr	r3, [r6]
   1e2b8:	add	r0, sp, #16
   1e2bc:	ldr	r8, [r3, #40]	; 0x28
   1e2c0:	vmov.f64	d1, d0
   1e2c4:	bl	1504c <fputs@plt+0xbc90>
   1e2c8:	mov	r0, r6
   1e2cc:	mov	r1, r7
   1e2d0:	add	r2, sp, #16
   1e2d4:	mov	r3, r5
   1e2d8:	vmov.f64	d0, d8
   1e2dc:	blx	r8
   1e2e0:	b	1e264 <fputs@plt+0x14ea8>
   1e2e4:	bl	92b4 <__stack_chk_fail@plt>
   1e2e8:	push	{r4, lr}
   1e2ec:	movw	r4, #1484	; 0x5cc
   1e2f0:	movt	r4, #3
   1e2f4:	mov	r0, r1
   1e2f8:	ldr	r1, [r4]
   1e2fc:	bl	93bc <fputs@plt>
   1e300:	ldr	r1, [r4]
   1e304:	mov	r0, #37	; 0x25
   1e308:	bl	9368 <_IO_putc@plt>
   1e30c:	ldr	r1, [r4]
   1e310:	mov	r0, #10
   1e314:	pop	{r4, lr}
   1e318:	b	9368 <_IO_putc@plt>
   1e31c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e320:	movw	r8, #1424	; 0x590
   1e324:	movt	r8, #3
   1e328:	mov	r5, r1
   1e32c:	ldrb	r1, [r1]
   1e330:	mov	r9, r2
   1e334:	ldr	r2, [r8]
   1e338:	sub	sp, sp, #20
   1e33c:	cmp	r1, #46	; 0x2e
   1e340:	mov	fp, r0
   1e344:	mov	sl, r3
   1e348:	str	r2, [sp, #12]
   1e34c:	beq	1e360 <fputs@plt+0x14fa4>
   1e350:	movw	r1, #27344	; 0x6ad0
   1e354:	movw	r0, #417	; 0x1a1
   1e358:	movt	r1, #2
   1e35c:	bl	1eec8 <fputs@plt+0x15b0c>
   1e360:	ldrb	r3, [r5, #1]
   1e364:	cmp	r3, #112	; 0x70
   1e368:	beq	1e398 <fputs@plt+0x14fdc>
   1e36c:	movw	r1, #27408	; 0x6b10
   1e370:	add	r2, r5, #1
   1e374:	mov	r0, #1
   1e378:	movt	r1, #2
   1e37c:	bl	9140 <__printf_chk@plt>
   1e380:	ldr	r2, [sp, #12]
   1e384:	ldr	r3, [r8]
   1e388:	cmp	r2, r3
   1e38c:	bne	1e4a4 <fputs@plt+0x150e8>
   1e390:	add	sp, sp, #20
   1e394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e398:	ldrb	r3, [r5, #2]
   1e39c:	cmp	r3, #115	; 0x73
   1e3a0:	bne	1e36c <fputs@plt+0x14fb0>
   1e3a4:	ldrb	r4, [r5, #3]
   1e3a8:	cmp	r4, #0
   1e3ac:	bne	1e460 <fputs@plt+0x150a4>
   1e3b0:	movw	r7, #12080	; 0x2f30
   1e3b4:	movt	r7, #3
   1e3b8:	add	r6, r5, #3
   1e3bc:	ldrb	r3, [r7, r4]
   1e3c0:	cmp	r3, #0
   1e3c4:	beq	1e3e0 <fputs@plt+0x15024>
   1e3c8:	add	ip, r5, #4
   1e3cc:	mov	r6, ip
   1e3d0:	ldrb	r4, [ip], #1
   1e3d4:	ldrb	r5, [r7, r4]
   1e3d8:	cmp	r5, #0
   1e3dc:	bne	1e3cc <fputs@plt+0x15010>
   1e3e0:	cmp	r4, #0
   1e3e4:	bne	1e3fc <fputs@plt+0x15040>
   1e3e8:	ldr	r2, [fp, #72]	; 0x48
   1e3ec:	ldr	r3, [fp, #76]	; 0x4c
   1e3f0:	str	r2, [fp, #76]	; 0x4c
   1e3f4:	str	r3, [fp, #72]	; 0x48
   1e3f8:	b	1e380 <fputs@plt+0x14fc4>
   1e3fc:	mov	r0, r6
   1e400:	add	r1, sp, #8
   1e404:	mov	r2, #10
   1e408:	bl	923c <strtol@plt>
   1e40c:	cmp	r0, #0
   1e410:	bne	1e430 <fputs@plt+0x15074>
   1e414:	ldr	r3, [sp, #8]
   1e418:	cmp	r3, r6
   1e41c:	beq	1e478 <fputs@plt+0x150bc>
   1e420:	ldr	r3, [fp, #72]	; 0x48
   1e424:	str	r0, [fp, #72]	; 0x48
   1e428:	str	r3, [fp, #76]	; 0x4c
   1e42c:	b	1e380 <fputs@plt+0x14fc4>
   1e430:	bge	1e420 <fputs@plt+0x15064>
   1e434:	movw	r2, #13880	; 0x3638
   1e438:	movt	r2, #3
   1e43c:	mov	r0, r9
   1e440:	str	r2, [sp]
   1e444:	mov	r3, r2
   1e448:	str	r2, [sp, #4]
   1e44c:	mov	r1, sl
   1e450:	movw	r2, #27388	; 0x6afc
   1e454:	movt	r2, #2
   1e458:	bl	1f798 <fputs@plt+0x163dc>
   1e45c:	b	1e380 <fputs@plt+0x14fc4>
   1e460:	movw	r3, #13616	; 0x3530
   1e464:	movt	r3, #3
   1e468:	ldrb	r3, [r3, r4]
   1e46c:	cmp	r3, #0
   1e470:	beq	1e3b0 <fputs@plt+0x14ff4>
   1e474:	b	1e36c <fputs@plt+0x14fb0>
   1e478:	movw	r2, #13880	; 0x3638
   1e47c:	movt	r2, #3
   1e480:	mov	r0, r9
   1e484:	str	r2, [sp]
   1e488:	mov	r3, r2
   1e48c:	str	r2, [sp, #4]
   1e490:	mov	r1, sl
   1e494:	movw	r2, #27352	; 0x6ad8
   1e498:	movt	r2, #2
   1e49c:	bl	1f798 <fputs@plt+0x163dc>
   1e4a0:	b	1e380 <fputs@plt+0x14fc4>
   1e4a4:	bl	92b4 <__stack_chk_fail@plt>
   1e4a8:	vcmpe.f64	d0, #0.0
   1e4ac:	vmrs	APSR_nzcv, fpscr
   1e4b0:	bmi	1e4b8 <fputs@plt+0x150fc>
   1e4b4:	b	1de30 <fputs@plt+0x14a74>
   1e4b8:	ldr	r2, [r0, #72]	; 0x48
   1e4bc:	movw	r1, #26680	; 0x6838
   1e4c0:	mov	r0, #1
   1e4c4:	movt	r1, #2
   1e4c8:	b	9140 <__printf_chk@plt>
   1e4cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e4d0:	vpush	{d8-d9}
   1e4d4:	sub	sp, sp, #48	; 0x30
   1e4d8:	movw	r4, #1424	; 0x590
   1e4dc:	movt	r4, #3
   1e4e0:	ldr	r6, [sp, #96]	; 0x60
   1e4e4:	mov	r9, r0
   1e4e8:	ldr	ip, [r4]
   1e4ec:	mov	r7, r1
   1e4f0:	mov	sl, r2
   1e4f4:	mov	r8, r3
   1e4f8:	ldr	r5, [r6]
   1e4fc:	str	ip, [sp, #44]	; 0x2c
   1e500:	cmp	r5, #2
   1e504:	beq	1e588 <fputs@plt+0x151cc>
   1e508:	cmp	r5, #3
   1e50c:	beq	1e57c <fputs@plt+0x151c0>
   1e510:	cmp	r5, #1
   1e514:	beq	1e534 <fputs@plt+0x15178>
   1e518:	ldr	r2, [sp, #44]	; 0x2c
   1e51c:	ldr	r3, [r4]
   1e520:	cmp	r2, r3
   1e524:	bne	1e618 <fputs@plt+0x1525c>
   1e528:	add	sp, sp, #48	; 0x30
   1e52c:	vpop	{d8-d9}
   1e530:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e534:	add	r0, sp, #8
   1e538:	bl	15038 <fputs@plt+0xbc7c>
   1e53c:	mov	r0, r7
   1e540:	mov	r1, sl
   1e544:	mov	r2, r8
   1e548:	add	r3, sp, #8
   1e54c:	bl	1a410 <fputs@plt+0x11054>
   1e550:	cmp	r0, #0
   1e554:	bne	1e594 <fputs@plt+0x151d8>
   1e558:	ldr	ip, [r9]
   1e55c:	mov	r1, r7
   1e560:	str	r6, [sp]
   1e564:	mov	r2, r8
   1e568:	mov	r3, r5
   1e56c:	mov	r0, r9
   1e570:	ldr	ip, [ip, #24]
   1e574:	blx	ip
   1e578:	b	1e518 <fputs@plt+0x1515c>
   1e57c:	str	r6, [sp]
   1e580:	bl	1a4dc <fputs@plt+0x11120>
   1e584:	b	1e518 <fputs@plt+0x1515c>
   1e588:	str	r6, [sp]
   1e58c:	bl	1a6d0 <fputs@plt+0x11314>
   1e590:	b	1e518 <fputs@plt+0x1515c>
   1e594:	ldr	r3, [r9]
   1e598:	mov	r1, r7
   1e59c:	mov	r0, sl
   1e5a0:	ldr	r5, [r3, #88]	; 0x58
   1e5a4:	bl	15188 <fputs@plt+0xbdcc>
   1e5a8:	add	r0, sp, #24
   1e5ac:	vstr	d1, [sp, #32]
   1e5b0:	vstr	d0, [sp, #24]
   1e5b4:	bl	15200 <fputs@plt+0xbe44>
   1e5b8:	vldr	d6, [sp, #16]
   1e5bc:	vldr	d7, [sp, #8]
   1e5c0:	vldr	d1, [r7]
   1e5c4:	vsub.f64	d1, d1, d7
   1e5c8:	vmov.f64	d9, d0
   1e5cc:	vldr	d0, [r7, #8]
   1e5d0:	vsub.f64	d0, d0, d6
   1e5d4:	bl	92cc <atan2@plt>
   1e5d8:	vldr	d6, [sp, #16]
   1e5dc:	vldr	d7, [sp, #8]
   1e5e0:	vldr	d1, [r8]
   1e5e4:	vsub.f64	d1, d1, d7
   1e5e8:	vmov.f64	d8, d0
   1e5ec:	vldr	d0, [r8, #8]
   1e5f0:	vsub.f64	d0, d0, d6
   1e5f4:	bl	92cc <atan2@plt>
   1e5f8:	mov	r0, r9
   1e5fc:	add	r1, sp, #8
   1e600:	mov	r2, r6
   1e604:	vmov.f64	d1, d8
   1e608:	vmov.f64	d2, d0
   1e60c:	vmov.f64	d0, d9
   1e610:	blx	r5
   1e614:	b	1e518 <fputs@plt+0x1515c>
   1e618:	bl	92b4 <__stack_chk_fail@plt>
   1e61c:	movw	r3, #10900	; 0x2a94
   1e620:	movt	r3, #3
   1e624:	push	{r4, r5, r6, r7, r8, r9, lr}
   1e628:	vpush	{d8}
   1e62c:	movw	r4, #1424	; 0x590
   1e630:	movt	r4, #3
   1e634:	ldr	r3, [r3]
   1e638:	mov	ip, r0
   1e63c:	sub	sp, sp, #60	; 0x3c
   1e640:	ldr	r0, [r4]
   1e644:	cmp	r3, #0
   1e648:	mov	lr, r1
   1e64c:	str	r0, [sp, #52]	; 0x34
   1e650:	bne	1e710 <fputs@plt+0x15354>
   1e654:	vmov.f64	d8, #96	; 0x3f000000  0.5
   1e658:	vldr	d3, [r2, #16]
   1e65c:	vldr	d6, [pc, #252]	; 1e760 <fputs@plt+0x153a4>
   1e660:	vldr	d4, [ip, #24]
   1e664:	vldr	d5, [r1, #8]
   1e668:	vldr	d0, [r1]
   1e66c:	vldr	d1, [ip, #32]
   1e670:	add	r6, sp, #8
   1e674:	vldr	d7, [ip, #56]	; 0x38
   1e678:	mov	r0, r6
   1e67c:	vmov.f64	d2, d8
   1e680:	vmla.f64	d2, d3, d6
   1e684:	vsub.f64	d0, d0, d4
   1e688:	vsub.f64	d1, d1, d5
   1e68c:	vcvt.s32.f64	s5, d2
   1e690:	vdiv.f64	d0, d0, d7
   1e694:	vmov	r5, s5
   1e698:	vdiv.f64	d1, d1, d7
   1e69c:	bl	1504c <fputs@plt+0xbc90>
   1e6a0:	ldm	r6, {r0, r1, r2, r3}
   1e6a4:	add	ip, sp, #24
   1e6a8:	vldr	d7, [pc, #184]	; 1e768 <fputs@plt+0x153ac>
   1e6ac:	cmp	r5, #0
   1e6b0:	moveq	r5, #1
   1e6b4:	stm	ip, {r0, r1, r2, r3}
   1e6b8:	vldr	d5, [sp, #24]
   1e6bc:	vldr	d6, [sp, #32]
   1e6c0:	movw	r1, #27416	; 0x6b18
   1e6c4:	str	r5, [sp]
   1e6c8:	movt	r1, #2
   1e6cc:	mov	r0, #1
   1e6d0:	str	r5, [sp, #4]
   1e6d4:	vmov.f64	d4, d8
   1e6d8:	vmla.f64	d8, d6, d7
   1e6dc:	vmla.f64	d4, d5, d7
   1e6e0:	vcvt.s32.f64	s15, d8
   1e6e4:	vcvt.s32.f64	s9, d4
   1e6e8:	vmov	r3, s15
   1e6ec:	vmov	r2, s9
   1e6f0:	bl	9140 <__printf_chk@plt>
   1e6f4:	ldr	r2, [sp, #52]	; 0x34
   1e6f8:	ldr	r3, [r4]
   1e6fc:	cmp	r2, r3
   1e700:	bne	1e758 <fputs@plt+0x1539c>
   1e704:	add	sp, sp, #60	; 0x3c
   1e708:	vpop	{d8}
   1e70c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e710:	mov	r6, r2
   1e714:	add	r5, sp, #24
   1e718:	ldm	r6!, {r0, r1, r2, r3}
   1e71c:	add	r7, sp, #56	; 0x38
   1e720:	ldr	r9, [ip]
   1e724:	mov	r8, #1
   1e728:	stmia	r5!, {r0, r1, r2, r3}
   1e72c:	mov	r3, r8
   1e730:	ldm	r6, {r0, r1}
   1e734:	mov	r2, lr
   1e738:	str	r8, [r7, #-32]!	; 0xffffffe0
   1e73c:	str	r7, [sp]
   1e740:	stm	r5, {r0, r1}
   1e744:	mov	r1, lr
   1e748:	ldr	r5, [r9, #24]
   1e74c:	mov	r0, ip
   1e750:	blx	r5
   1e754:	b	1e6f4 <fputs@plt+0x15338>
   1e758:	bl	92b4 <__stack_chk_fail@plt>
   1e75c:	nop	{0}
   1e760:	bicvc	r1, r7, r2, ror ip
   1e764:	andsmi	ip, fp, ip, lsl r7
   1e768:	andeq	r0, r0, r0
   1e76c:	addmi	r4, pc, r0
   1e770:	push	{r4, r5, r6, r7, r8, r9, lr}
   1e774:	vpush	{d8}
   1e778:	movw	r5, #1424	; 0x590
   1e77c:	movt	r5, #3
   1e780:	mov	r7, r3
   1e784:	ldr	r3, [r3]
   1e788:	mov	r9, r2
   1e78c:	ldr	r2, [r5]
   1e790:	sub	sp, sp, #60	; 0x3c
   1e794:	cmp	r3, #0
   1e798:	mov	r8, r1
   1e79c:	vmov.f64	d8, d0
   1e7a0:	mov	r6, r0
   1e7a4:	str	r2, [sp, #52]	; 0x34
   1e7a8:	bne	1e960 <fputs@plt+0x155a4>
   1e7ac:	vcmpe.f64	d0, #0.0
   1e7b0:	vmrs	APSR_nzcv, fpscr
   1e7b4:	bmi	1e85c <fputs@plt+0x154a0>
   1e7b8:	vcmpe.f64	d8, #0.0
   1e7bc:	vmrs	APSR_nzcv, fpscr
   1e7c0:	blt	1e7e8 <fputs@plt+0x1542c>
   1e7c4:	vmov.f64	d7, #112	; 0x3f800000  1.0
   1e7c8:	movw	r1, #26784	; 0x68a0
   1e7cc:	mov	r0, #1
   1e7d0:	movt	r1, #2
   1e7d4:	vcmp.f64	d8, d7
   1e7d8:	vmrs	APSR_nzcv, fpscr
   1e7dc:	vmovgt	r2, r3, d7
   1e7e0:	vmovle	r2, r3, d8
   1e7e4:	bl	9140 <__printf_chk@plt>
   1e7e8:	vldr	d7, [r6, #24]
   1e7ec:	vldr	d0, [r8]
   1e7f0:	vldr	d1, [r6, #32]
   1e7f4:	vsub.f64	d0, d0, d7
   1e7f8:	vldr	d6, [r8, #8]
   1e7fc:	add	r4, sp, #16
   1e800:	vldr	d7, [r6, #56]	; 0x38
   1e804:	mov	r0, r4
   1e808:	vsub.f64	d1, d1, d6
   1e80c:	vdiv.f64	d0, d0, d7
   1e810:	vdiv.f64	d1, d1, d7
   1e814:	bl	1504c <fputs@plt+0xbc90>
   1e818:	ldm	r4, {r0, r1, r2, r3}
   1e81c:	add	ip, sp, #32
   1e820:	ldr	lr, [r7]
   1e824:	stm	ip, {r0, r1, r2, r3}
   1e828:	vldr	d5, [sp, #32]
   1e82c:	vldr	d4, [sp, #40]	; 0x28
   1e830:	cmp	lr, #3
   1e834:	ldrls	pc, [pc, lr, lsl #2]
   1e838:	b	1e84c <fputs@plt+0x15490>
   1e83c:	ldrdeq	lr, [r1], -r0
   1e840:	ldrdeq	lr, [r1], -r0
   1e844:	andeq	lr, r1, r4, lsr #17
   1e848:	andeq	lr, r1, r8, ror r8
   1e84c:	movw	r1, #27344	; 0x6ad0
   1e850:	mov	r0, #344	; 0x158
   1e854:	movt	r1, #2
   1e858:	bl	1eec8 <fputs@plt+0x15b0c>
   1e85c:	ldr	r2, [sp, #52]	; 0x34
   1e860:	ldr	r3, [r5]
   1e864:	cmp	r2, r3
   1e868:	bne	1e974 <fputs@plt+0x155b8>
   1e86c:	add	sp, sp, #60	; 0x3c
   1e870:	vpop	{d8}
   1e874:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e878:	mov	r0, r9
   1e87c:	vldr	d0, [r6, #56]	; 0x38
   1e880:	bl	151ac <fputs@plt+0xbdf0>
   1e884:	mov	r0, r6
   1e888:	mov	r1, r8
   1e88c:	mov	r2, r4
   1e890:	mov	r3, r7
   1e894:	vstr	d0, [sp, #16]
   1e898:	vstr	d1, [sp, #24]
   1e89c:	bl	19d58 <fputs@plt+0x1099c>
   1e8a0:	b	1e85c <fputs@plt+0x154a0>
   1e8a4:	mov	r0, r9
   1e8a8:	vldr	d0, [r6, #56]	; 0x38
   1e8ac:	bl	151ac <fputs@plt+0xbdf0>
   1e8b0:	mov	r0, r6
   1e8b4:	mov	r1, r8
   1e8b8:	mov	r2, r4
   1e8bc:	mov	r3, r7
   1e8c0:	vstr	d0, [sp, #16]
   1e8c4:	vstr	d1, [sp, #24]
   1e8c8:	bl	1a0f0 <fputs@plt+0x10d34>
   1e8cc:	b	1e85c <fputs@plt+0x154a0>
   1e8d0:	vldr	d7, [r6, #56]	; 0x38
   1e8d4:	vadd.f64	d7, d7, d7
   1e8d8:	vldr	d2, [r9]
   1e8dc:	vldr	d3, [r9, #8]
   1e8e0:	vldr	d6, [pc, #144]	; 1e978 <fputs@plt+0x155bc>
   1e8e4:	cmp	lr, #0
   1e8e8:	movw	r3, #27480	; 0x6b58
   1e8ec:	movt	r3, #2
   1e8f0:	movw	r2, #27484	; 0x6b5c
   1e8f4:	movw	r1, #27488	; 0x6b60
   1e8f8:	movt	r2, #2
   1e8fc:	movt	r1, #2
   1e900:	moveq	r2, r3
   1e904:	mov	r0, #1
   1e908:	vdiv.f64	d2, d2, d7
   1e90c:	vdiv.f64	d3, d3, d7
   1e910:	vmov.f64	d7, #96	; 0x3f000000  0.5
   1e914:	vmov.f64	d1, d7
   1e918:	vmla.f64	d1, d2, d6
   1e91c:	vmov.f64	d2, d1
   1e920:	vmov.f64	d1, d7
   1e924:	vmla.f64	d1, d3, d6
   1e928:	vmov.f64	d3, d1
   1e92c:	vmov.f64	d1, d7
   1e930:	vmla.f64	d7, d5, d6
   1e934:	vmla.f64	d1, d4, d6
   1e938:	vcvt.s32.f64	s4, d2
   1e93c:	vcvt.s32.f64	s8, d1
   1e940:	vstr	s4, [sp, #4]
   1e944:	vcvt.s32.f64	s6, d3
   1e948:	vstr	s8, [sp]
   1e94c:	vcvt.s32.f64	s3, d7
   1e950:	vstr	s6, [sp, #8]
   1e954:	vmov	r3, s3
   1e958:	bl	9140 <__printf_chk@plt>
   1e95c:	b	1e85c <fputs@plt+0x154a0>
   1e960:	ldr	r3, [r0]
   1e964:	vldr	d0, [r7, #16]
   1e968:	ldr	r3, [r3, #92]	; 0x5c
   1e96c:	blx	r3
   1e970:	b	1e7b8 <fputs@plt+0x153fc>
   1e974:	bl	92b4 <__stack_chk_fail@plt>
   1e978:	andeq	r0, r0, r0
   1e97c:	addmi	r4, pc, r0
   1e980:	push	{r4, r5, r6, r7, lr}
   1e984:	vpush	{d8-d10}
   1e988:	movw	r6, #1424	; 0x590
   1e98c:	movt	r6, #3
   1e990:	ldr	r3, [r0]
   1e994:	vmov.f64	d10, d0
   1e998:	vldr	d0, [r2, #16]
   1e99c:	ldr	r2, [r6]
   1e9a0:	sub	sp, sp, #68	; 0x44
   1e9a4:	ldr	r3, [r3, #92]	; 0x5c
   1e9a8:	mov	r5, r0
   1e9ac:	mov	r7, r1
   1e9b0:	add	r4, sp, #24
   1e9b4:	str	r2, [sp, #60]	; 0x3c
   1e9b8:	vmov.f64	d8, d1
   1e9bc:	vmov.f64	d9, d2
   1e9c0:	blx	r3
   1e9c4:	vldr	d7, [r5, #24]
   1e9c8:	vldr	d5, [r7, #8]
   1e9cc:	vldr	d0, [r7]
   1e9d0:	vldr	d6, [r5, #32]
   1e9d4:	vldr	d1, [r5, #56]	; 0x38
   1e9d8:	mov	r0, r4
   1e9dc:	vsub.f64	d6, d6, d5
   1e9e0:	vsub.f64	d0, d0, d7
   1e9e4:	vdiv.f64	d0, d0, d1
   1e9e8:	vdiv.f64	d1, d6, d1
   1e9ec:	bl	1504c <fputs@plt+0xbc90>
   1e9f0:	vldr	d7, [r5, #56]	; 0x38
   1e9f4:	ldm	r4, {r0, r1, r2, r3}
   1e9f8:	vldr	d4, [pc, #152]	; 1ea98 <fputs@plt+0x156dc>
   1e9fc:	add	ip, sp, #40	; 0x28
   1ea00:	stm	ip, {r0, r1, r2, r3}
   1ea04:	vldr	d5, [sp, #40]	; 0x28
   1ea08:	vldr	d6, [sp, #48]	; 0x30
   1ea0c:	movw	r1, #27532	; 0x6b8c
   1ea10:	mov	r0, #1
   1ea14:	movt	r1, #2
   1ea18:	vdiv.f64	d10, d10, d7
   1ea1c:	vmov.f64	d7, #96	; 0x3f000000  0.5
   1ea20:	vmov.f64	d3, d7
   1ea24:	vmla.f64	d3, d5, d4
   1ea28:	vmov.f64	d5, d7
   1ea2c:	vmla.f64	d7, d6, d4
   1ea30:	vmla.f64	d5, d10, d4
   1ea34:	vcvt.s32.f64	s13, d3
   1ea38:	vmov	r2, s13
   1ea3c:	vcvt.s32.f64	s13, d7
   1ea40:	vcmpe.f64	d9, d8
   1ea44:	vmov	r3, s13
   1ea48:	vmrs	APSR_nzcv, fpscr
   1ea4c:	vldrmi	d6, [pc, #76]	; 1eaa0 <fputs@plt+0x156e4>
   1ea50:	vsubmi.f64	d8, d6, d8
   1ea54:	vcvt.s32.f64	s15, d5
   1ea58:	vnegpl.f64	d8, d8
   1ea5c:	vstr	s15, [sp]
   1ea60:	vstr	s15, [sp, #4]
   1ea64:	vneg.f64	d9, d9
   1ea68:	vstr	d8, [sp, #16]
   1ea6c:	vstr	d9, [sp, #8]
   1ea70:	bl	9140 <__printf_chk@plt>
   1ea74:	ldr	r2, [sp, #60]	; 0x3c
   1ea78:	ldr	r3, [r6]
   1ea7c:	cmp	r2, r3
   1ea80:	bne	1ea90 <fputs@plt+0x156d4>
   1ea84:	add	sp, sp, #68	; 0x44
   1ea88:	vpop	{d8-d10}
   1ea8c:	pop	{r4, r5, r6, r7, pc}
   1ea90:	bl	92b4 <__stack_chk_fail@plt>
   1ea94:	nop	{0}
   1ea98:	andeq	r0, r0, r0
   1ea9c:	addmi	r4, pc, r0
   1eaa0:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1eaa4:			; <UNDEFINED> instruction: 0x401921fb
   1eaa8:	push	{r3, r4, r5, lr}
   1eaac:	mov	r4, r0
   1eab0:	bl	14d94 <fputs@plt+0xb9d8>
   1eab4:	ldr	r3, [pc, #36]	; 1eae0 <fputs@plt+0x15724>
   1eab8:	mov	r0, r4
   1eabc:	ldr	r5, [pc, #32]	; 1eae4 <fputs@plt+0x15728>
   1eac0:	str	r3, [r0], #24
   1eac4:	bl	15038 <fputs@plt+0xbc7c>
   1eac8:	mov	r0, r4
   1eacc:	pop	{r3, r4, r5, pc}
   1ead0:	str	r5, [r4]
   1ead4:	mov	r0, r4
   1ead8:	bl	14820 <fputs@plt+0xb464>
   1eadc:	bl	9188 <__cxa_end_cleanup@plt>
   1eae0:	andeq	r6, r2, r8, lsr r7
   1eae4:	strdeq	r6, [r2], -r0
   1eae8:	push	{r4, lr}
   1eaec:	mov	r0, #72	; 0x48
   1eaf0:	bl	209a0 <_Znwj@@Base>
   1eaf4:	mov	r4, r0
   1eaf8:	bl	1eaa8 <fputs@plt+0x156ec>
   1eafc:	mov	r0, r4
   1eb00:	pop	{r4, pc}
   1eb04:	mov	r0, r4
   1eb08:	bl	209f0 <_ZdlPv@@Base>
   1eb0c:	bl	9188 <__cxa_end_cleanup@plt>
   1eb10:	vldr	d7, [r0, #24]
   1eb14:	vldr	d6, [r1, #8]
   1eb18:	vldr	d0, [r1]
   1eb1c:	vldr	d1, [r0, #32]
   1eb20:	vsub.f64	d0, d0, d7
   1eb24:	vldr	d7, [r0, #56]	; 0x38
   1eb28:	push	{r4, r5, lr}
   1eb2c:	movw	r5, #1424	; 0x590
   1eb30:	movt	r5, #3
   1eb34:	sub	sp, sp, #44	; 0x2c
   1eb38:	ldr	r3, [r5]
   1eb3c:	mov	r0, sp
   1eb40:	str	r3, [sp, #36]	; 0x24
   1eb44:	vsub.f64	d1, d1, d6
   1eb48:	vdiv.f64	d0, d0, d7
   1eb4c:	vdiv.f64	d1, d1, d7
   1eb50:	bl	1504c <fputs@plt+0xbc90>
   1eb54:	ldm	sp, {r0, r1, r2, r3}
   1eb58:	add	ip, sp, #16
   1eb5c:	vldr	d6, [pc, #84]	; 1ebb8 <fputs@plt+0x157fc>
   1eb60:	stm	ip, {r0, r1, r2, r3}
   1eb64:	vldr	d4, [sp, #16]
   1eb68:	vldr	d5, [sp, #24]
   1eb6c:	movw	r1, #27572	; 0x6bb4
   1eb70:	mov	r0, #1
   1eb74:	movt	r1, #2
   1eb78:	vmov.f64	d7, #96	; 0x3f000000  0.5
   1eb7c:	vmov.f64	d3, d7
   1eb80:	vmla.f64	d7, d5, d6
   1eb84:	vmla.f64	d3, d4, d6
   1eb88:	vcvt.s32.f64	s13, d7
   1eb8c:	vcvt.s32.f64	s7, d3
   1eb90:	vmov	r3, s13
   1eb94:	vmov	r2, s7
   1eb98:	bl	9140 <__printf_chk@plt>
   1eb9c:	ldr	r2, [sp, #36]	; 0x24
   1eba0:	ldr	r3, [r5]
   1eba4:	cmp	r2, r3
   1eba8:	bne	1ebb4 <fputs@plt+0x157f8>
   1ebac:	add	sp, sp, #44	; 0x2c
   1ebb0:	pop	{r4, r5, pc}
   1ebb4:	bl	92b4 <__stack_chk_fail@plt>
   1ebb8:	andeq	r0, r0, r0
   1ebbc:	addmi	r4, pc, r0
   1ebc0:	push	{r4, r5, r6, r7, r8, lr}
   1ebc4:	mov	r4, r1
   1ebc8:	ldr	r1, [r0]
   1ebcc:	mov	r6, r0
   1ebd0:	ldr	r8, [sp, #24]
   1ebd4:	mov	r7, r3
   1ebd8:	vldr	d0, [r8, #16]
   1ebdc:	mov	r5, r2
   1ebe0:	ldr	r3, [r1, #92]	; 0x5c
   1ebe4:	blx	r3
   1ebe8:	mov	r1, r4
   1ebec:	mov	r0, r6
   1ebf0:	bl	1eb10 <fputs@plt+0x15754>
   1ebf4:	cmp	r7, #0
   1ebf8:	movgt	r4, #0
   1ebfc:	ble	1ec1c <fputs@plt+0x15860>
   1ec00:	mov	r1, r5
   1ec04:	add	r4, r4, #1
   1ec08:	mov	r0, r6
   1ec0c:	add	r5, r5, #16
   1ec10:	bl	1eb10 <fputs@plt+0x15754>
   1ec14:	cmp	r4, r7
   1ec18:	bne	1ec00 <fputs@plt+0x15844>
   1ec1c:	movw	r4, #1484	; 0x5cc
   1ec20:	movt	r4, #3
   1ec24:	movw	r0, #27600	; 0x6bd0
   1ec28:	mov	r1, #1
   1ec2c:	ldr	r3, [r4]
   1ec30:	movt	r0, #2
   1ec34:	mov	r2, #13
   1ec38:	bl	926c <fwrite@plt>
   1ec3c:	ldr	r3, [r8]
   1ec40:	cmp	r3, #3
   1ec44:	ldrls	pc, [pc, r3, lsl #2]
   1ec48:	b	1ec7c <fputs@plt+0x158c0>
   1ec4c:	ldrdeq	lr, [r1], -r8
   1ec50:			; <UNDEFINED> instruction: 0x0001ecbc
   1ec54:	muleq	r1, r8, ip
   1ec58:	andeq	lr, r1, ip, asr ip
   1ec5c:	vldr	d6, [r8, #8]
   1ec60:	vldr	d7, [r6, #56]	; 0x38
   1ec64:	vdiv.f64	d5, d6, d7
   1ec68:	movw	r1, #27632	; 0x6bf0
   1ec6c:	mov	r0, #1
   1ec70:	movt	r1, #2
   1ec74:	vmov	r2, r3, d5
   1ec78:	bl	9140 <__printf_chk@plt>
   1ec7c:	ldr	r3, [r4]
   1ec80:	movw	r0, #27640	; 0x6bf8
   1ec84:	mov	r1, #1
   1ec88:	movt	r0, #2
   1ec8c:	mov	r2, #3
   1ec90:	pop	{r4, r5, r6, r7, r8, lr}
   1ec94:	b	926c <fwrite@plt>
   1ec98:	vldr	d6, [r8, #8]
   1ec9c:	vldr	d7, [r6, #56]	; 0x38
   1eca0:	vdiv.f64	d5, d6, d7
   1eca4:	movw	r1, #27624	; 0x6be8
   1eca8:	mov	r0, #1
   1ecac:	movt	r1, #2
   1ecb0:	vmov	r2, r3, d5
   1ecb4:	bl	9140 <__printf_chk@plt>
   1ecb8:	b	1ec7c <fputs@plt+0x158c0>
   1ecbc:	movw	r0, #27620	; 0x6be4
   1ecc0:	mov	r1, #1
   1ecc4:	mov	r2, #2
   1ecc8:	ldr	r3, [r4]
   1eccc:	movt	r0, #2
   1ecd0:	bl	926c <fwrite@plt>
   1ecd4:	b	1ec7c <fputs@plt+0x158c0>
   1ecd8:	movw	r0, #27616	; 0x6be0
   1ecdc:	mov	r1, #1
   1ece0:	mov	r2, #2
   1ece4:	ldr	r3, [r4]
   1ece8:	movt	r0, #2
   1ecec:	bl	926c <fwrite@plt>
   1ecf0:	b	1ec7c <fputs@plt+0x158c0>
   1ecf4:	push	{r4, r5, r6, r7, r8, lr}
   1ecf8:	mov	r7, r3
   1ecfc:	ldr	r8, [sp, #24]
   1ed00:	mov	r4, r1
   1ed04:	mov	r5, r2
   1ed08:	mov	r6, r0
   1ed0c:	ldr	r3, [r8]
   1ed10:	cmp	r3, #0
   1ed14:	popeq	{r4, r5, r6, r7, r8, pc}
   1ed18:	ldr	r3, [r0]
   1ed1c:	vldr	d0, [r8, #16]
   1ed20:	ldr	r3, [r3, #92]	; 0x5c
   1ed24:	blx	r3
   1ed28:	mov	r1, r4
   1ed2c:	mov	r0, r6
   1ed30:	bl	1eb10 <fputs@plt+0x15754>
   1ed34:	cmp	r7, #0
   1ed38:	movgt	r4, #0
   1ed3c:	ble	1ed5c <fputs@plt+0x159a0>
   1ed40:	mov	r1, r5
   1ed44:	add	r4, r4, #1
   1ed48:	mov	r0, r6
   1ed4c:	add	r5, r5, #16
   1ed50:	bl	1eb10 <fputs@plt+0x15754>
   1ed54:	cmp	r4, r7
   1ed58:	bne	1ed40 <fputs@plt+0x15984>
   1ed5c:	movw	r4, #1484	; 0x5cc
   1ed60:	movt	r4, #3
   1ed64:	movw	r0, #27644	; 0x6bfc
   1ed68:	mov	r1, #1
   1ed6c:	ldr	r3, [r4]
   1ed70:	movt	r0, #2
   1ed74:	mov	r2, #15
   1ed78:	bl	926c <fwrite@plt>
   1ed7c:	ldr	r3, [r8]
   1ed80:	cmp	r3, #2
   1ed84:	beq	1ede8 <fputs@plt+0x15a2c>
   1ed88:	cmp	r3, #3
   1ed8c:	beq	1edc4 <fputs@plt+0x15a08>
   1ed90:	cmp	r3, #0
   1ed94:	bne	1eda8 <fputs@plt+0x159ec>
   1ed98:	movw	r1, #27344	; 0x6ad0
   1ed9c:	mov	r0, #235	; 0xeb
   1eda0:	movt	r1, #2
   1eda4:	bl	1eec8 <fputs@plt+0x15b0c>
   1eda8:	ldr	r3, [r4]
   1edac:	movw	r0, #27640	; 0x6bf8
   1edb0:	mov	r1, #1
   1edb4:	movt	r0, #2
   1edb8:	mov	r2, #3
   1edbc:	pop	{r4, r5, r6, r7, r8, lr}
   1edc0:	b	926c <fwrite@plt>
   1edc4:	vldr	d6, [r8, #8]
   1edc8:	vldr	d7, [r6, #56]	; 0x38
   1edcc:	vdiv.f64	d5, d6, d7
   1edd0:	movw	r1, #27660	; 0x6c0c
   1edd4:	mov	r0, #1
   1edd8:	movt	r1, #2
   1eddc:	vmov	r2, r3, d5
   1ede0:	bl	9140 <__printf_chk@plt>
   1ede4:	b	1eda8 <fputs@plt+0x159ec>
   1ede8:	vldr	d6, [r8, #8]
   1edec:	vneg.f64	d6, d6
   1edf0:	vldr	d7, [r6, #56]	; 0x38
   1edf4:	movw	r1, #27660	; 0x6c0c
   1edf8:	mov	r0, #1
   1edfc:	movt	r1, #2
   1ee00:	vdiv.f64	d5, d6, d7
   1ee04:	vmov	r2, r3, d5
   1ee08:	bl	9140 <__printf_chk@plt>
   1ee0c:	b	1eda8 <fputs@plt+0x159ec>
   1ee10:	push	{r4, lr}
   1ee14:	mov	r4, r0
   1ee18:	bl	1eaa8 <fputs@plt+0x156ec>
   1ee1c:	ldr	r2, [pc, #20]	; 1ee38 <fputs@plt+0x15a7c>
   1ee20:	mov	r3, #8
   1ee24:	mov	r0, r4
   1ee28:	str	r3, [r4, #72]	; 0x48
   1ee2c:	str	r3, [r4, #76]	; 0x4c
   1ee30:	str	r2, [r4]
   1ee34:	pop	{r4, pc}
   1ee38:	andeq	r6, r2, r0, lsr #15
   1ee3c:	push	{r4, lr}
   1ee40:	mov	r0, #80	; 0x50
   1ee44:	bl	209a0 <_Znwj@@Base>
   1ee48:	mov	r4, r0
   1ee4c:	bl	1eaa8 <fputs@plt+0x156ec>
   1ee50:	ldr	r2, [pc, #32]	; 1ee78 <fputs@plt+0x15abc>
   1ee54:	mov	r3, #8
   1ee58:	mov	r0, r4
   1ee5c:	str	r3, [r4, #72]	; 0x48
   1ee60:	str	r3, [r4, #76]	; 0x4c
   1ee64:	str	r2, [r4]
   1ee68:	pop	{r4, pc}
   1ee6c:	mov	r0, r4
   1ee70:	bl	209f0 <_ZdlPv@@Base>
   1ee74:	bl	9188 <__cxa_end_cleanup@plt>
   1ee78:	andeq	r6, r2, r0, lsr #15
   1ee7c:	nop	{0}
   1ee80:	ldr	r3, [pc, #20]	; 1ee9c <fputs@plt+0x15ae0>
   1ee84:	push	{r4, lr}
   1ee88:	mov	r4, r0
   1ee8c:	str	r3, [r0]
   1ee90:	bl	14820 <fputs@plt+0xb464>
   1ee94:	mov	r0, r4
   1ee98:	pop	{r4, pc}
   1ee9c:	strdeq	r6, [r2], -r0
   1eea0:	ldr	r3, [pc, #28]	; 1eec4 <fputs@plt+0x15b08>
   1eea4:	push	{r4, lr}
   1eea8:	mov	r4, r0
   1eeac:	str	r3, [r0]
   1eeb0:	bl	14820 <fputs@plt+0xb464>
   1eeb4:	mov	r0, r4
   1eeb8:	bl	209f0 <_ZdlPv@@Base>
   1eebc:	mov	r0, r4
   1eec0:	pop	{r4, pc}
   1eec4:	strdeq	r6, [r2], -r0
   1eec8:	movw	r2, #14000	; 0x36b0
   1eecc:	movt	r2, #3
   1eed0:	push	{r4, r5, r6, lr}
   1eed4:	movw	r4, #1488	; 0x5d0
   1eed8:	ldr	r3, [r2]
   1eedc:	sub	sp, sp, #8
   1eee0:	mov	r6, r0
   1eee4:	mov	r5, r1
   1eee8:	cmp	r3, #0
   1eeec:	movt	r4, #3
   1eef0:	beq	1ef08 <fputs@plt+0x15b4c>
   1eef4:	movw	r2, #27668	; 0x6c14
   1eef8:	ldr	r0, [r4]
   1eefc:	movt	r2, #2
   1ef00:	mov	r1, #1
   1ef04:	bl	92c0 <__fprintf_chk@plt>
   1ef08:	mov	r3, r6
   1ef0c:	mov	r1, #1
   1ef10:	ldr	r0, [r4]
   1ef14:	movw	r2, #27676	; 0x6c1c
   1ef18:	str	r5, [sp]
   1ef1c:	movt	r2, #2
   1ef20:	bl	92c0 <__fprintf_chk@plt>
   1ef24:	ldr	r0, [r4]
   1ef28:	bl	91dc <fflush@plt>
   1ef2c:	bl	90bc <abort@plt>
   1ef30:	mov	r3, #0
   1ef34:	mov	r2, r3
   1ef38:	strb	r2, [r0, r3]
   1ef3c:	add	r3, r3, #1
   1ef40:	cmp	r3, #256	; 0x100
   1ef44:	bne	1ef38 <fputs@plt+0x15b7c>
   1ef48:	bx	lr
   1ef4c:	mov	r3, #0
   1ef50:	mov	r2, r3
   1ef54:	strb	r2, [r0, r3]
   1ef58:	add	r3, r3, #1
   1ef5c:	cmp	r3, #256	; 0x100
   1ef60:	bne	1ef54 <fputs@plt+0x15b98>
   1ef64:	bx	lr
   1ef68:	mov	r3, #0
   1ef6c:	mov	r2, r3
   1ef70:	strb	r2, [r0, r3]
   1ef74:	add	r3, r3, #1
   1ef78:	cmp	r3, #256	; 0x100
   1ef7c:	bne	1ef70 <fputs@plt+0x15bb4>
   1ef80:	ldrb	r3, [r1]
   1ef84:	cmp	r3, #0
   1ef88:	bxeq	lr
   1ef8c:	mov	r2, #1
   1ef90:	strb	r2, [r0, r3]
   1ef94:	ldrb	r3, [r1, #1]!
   1ef98:	cmp	r3, #0
   1ef9c:	bne	1ef90 <fputs@plt+0x15bd4>
   1efa0:	bx	lr
   1efa4:	mov	r3, #0
   1efa8:	mov	r2, r3
   1efac:	strb	r2, [r0, r3]
   1efb0:	add	r3, r3, #1
   1efb4:	cmp	r3, #256	; 0x100
   1efb8:	bne	1efac <fputs@plt+0x15bf0>
   1efbc:	ldrb	r3, [r1]
   1efc0:	cmp	r3, #0
   1efc4:	bxeq	lr
   1efc8:	mov	r2, #1
   1efcc:	strb	r2, [r0, r3]
   1efd0:	ldrb	r3, [r1, #1]!
   1efd4:	cmp	r3, #0
   1efd8:	bne	1efcc <fputs@plt+0x15c10>
   1efdc:	bx	lr
   1efe0:	bx	lr
   1efe4:	mov	r3, #0
   1efe8:	mov	ip, #1
   1efec:	ldrb	r2, [r1, r3]
   1eff0:	cmp	r2, #0
   1eff4:	strbne	ip, [r0, r3]
   1eff8:	add	r3, r3, #1
   1effc:	cmp	r3, #256	; 0x100
   1f000:	bne	1efec <fputs@plt+0x15c30>
   1f004:	bx	lr
   1f008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f00c:	movw	fp, #11052	; 0x2b2c
   1f010:	movt	fp, #3
   1f014:	sub	sp, sp, #28
   1f018:	ldr	r4, [fp]
   1f01c:	str	r0, [sp, #20]
   1f020:	cmp	r4, #0
   1f024:	bne	1f254 <fputs@plt+0x15e98>
   1f028:	add	r3, fp, #1792	; 0x700
   1f02c:	str	r3, [sp, #12]
   1f030:	add	ip, fp, #2048	; 0x800
   1f034:	add	r3, fp, #2304	; 0x900
   1f038:	str	ip, [sp, #4]
   1f03c:	add	ip, fp, #2560	; 0xa00
   1f040:	str	r3, [sp, #16]
   1f044:	add	sl, fp, #1024	; 0x400
   1f048:	ldr	r3, [sp, #12]
   1f04c:	add	r9, fp, #1280	; 0x500
   1f050:	str	ip, [sp, #8]
   1f054:	add	r8, fp, #1536	; 0x600
   1f058:	ldr	ip, [sp, #4]
   1f05c:	add	r3, r3, #4
   1f060:	str	r3, [sp, #12]
   1f064:	mov	r7, fp
   1f068:	ldr	r3, [sp, #16]
   1f06c:	add	ip, ip, #4
   1f070:	str	ip, [sp, #4]
   1f074:	add	sl, sl, #4
   1f078:	ldr	ip, [sp, #8]
   1f07c:	add	r3, r3, #4
   1f080:	str	r3, [sp, #16]
   1f084:	mov	r3, #1
   1f088:	add	ip, ip, #4
   1f08c:	add	r9, r9, #4
   1f090:	add	r8, r8, #4
   1f094:	str	ip, [sp, #8]
   1f098:	mov	r5, r4
   1f09c:	mov	r6, r3
   1f0a0:	add	fp, fp, #772	; 0x304
   1f0a4:	str	r3, [r7], #4
   1f0a8:	b	1f20c <fputs@plt+0x15e50>
   1f0ac:	bl	929c <__ctype_b_loc@plt>
   1f0b0:	lsl	r3, r4, #1
   1f0b4:	sub	ip, r4, #48	; 0x30
   1f0b8:	str	ip, [sp]
   1f0bc:	ldr	ip, [sp, #8]
   1f0c0:	mov	r2, #1
   1f0c4:	ldr	r1, [r0]
   1f0c8:	ldrh	r1, [r1, r3]
   1f0cc:	and	r1, r1, #1024	; 0x400
   1f0d0:	uxth	r1, r1
   1f0d4:	cmp	r1, #0
   1f0d8:	movne	r1, r6
   1f0dc:	strb	r1, [ip, r4]
   1f0e0:	ldr	r1, [r0]
   1f0e4:	ldr	ip, [sp]
   1f0e8:	ldrh	r1, [r1, r3]
   1f0ec:	and	r1, r1, #256	; 0x100
   1f0f0:	uxth	r1, r1
   1f0f4:	cmp	r1, #0
   1f0f8:	movne	r1, r6
   1f0fc:	strb	r1, [r7, r4]
   1f100:	ldr	r1, [r0]
   1f104:	ldrh	r1, [r1, r3]
   1f108:	and	r1, r1, #512	; 0x200
   1f10c:	uxth	r1, r1
   1f110:	cmp	r1, #0
   1f114:	movne	r1, r6
   1f118:	cmp	ip, #10
   1f11c:	ldr	ip, [pc, #316]	; 1f260 <fputs@plt+0x15ea4>
   1f120:	strb	r1, [ip, r4]
   1f124:	add	ip, ip, #256	; 0x100
   1f128:	movcc	r1, r6
   1f12c:	movcs	r1, r5
   1f130:	strb	r1, [ip, r4]
   1f134:	ldr	r1, [r0]
   1f138:	ldr	ip, [sp, #12]
   1f13c:	ldrh	r1, [r1, r3]
   1f140:	and	r1, r1, #4096	; 0x1000
   1f144:	uxth	r1, r1
   1f148:	cmp	r1, #0
   1f14c:	movne	r1, r6
   1f150:	strb	r1, [fp, r4]
   1f154:	ldr	r1, [r0]
   1f158:	ldrh	r1, [r1, r3]
   1f15c:	and	r1, r1, #8192	; 0x2000
   1f160:	uxth	r1, r1
   1f164:	cmp	r1, #0
   1f168:	movne	r1, r6
   1f16c:	strb	r1, [sl, r4]
   1f170:	ldr	r1, [r0]
   1f174:	ldrh	r1, [r1, r3]
   1f178:	and	r1, r1, #4
   1f17c:	uxth	r1, r1
   1f180:	cmp	r1, #0
   1f184:	movne	r1, r6
   1f188:	strb	r1, [r9, r4]
   1f18c:	ldr	r1, [r0]
   1f190:	ldrh	r1, [r1, r3]
   1f194:	and	r1, r1, #8
   1f198:	uxth	r1, r1
   1f19c:	cmp	r1, #0
   1f1a0:	movne	r1, r6
   1f1a4:	strb	r1, [r8, r4]
   1f1a8:	ldr	r1, [r0]
   1f1ac:	ldrh	r1, [r1, r3]
   1f1b0:	and	r1, r1, #16384	; 0x4000
   1f1b4:	uxth	r1, r1
   1f1b8:	cmp	r1, #0
   1f1bc:	movne	r1, r6
   1f1c0:	strb	r1, [ip, r4]
   1f1c4:	ldr	r1, [r0]
   1f1c8:	ldr	ip, [sp, #4]
   1f1cc:	ldrh	r1, [r1, r3]
   1f1d0:	and	r1, r1, #32768	; 0x8000
   1f1d4:	uxth	r1, r1
   1f1d8:	cmp	r1, #0
   1f1dc:	movne	r1, r6
   1f1e0:	strb	r1, [ip, r4]
   1f1e4:	ldr	r1, [r0]
   1f1e8:	ldrh	r3, [r1, r3]
   1f1ec:	tst	r3, #2
   1f1f0:	bne	1f1f8 <fputs@plt+0x15e3c>
   1f1f4:	mov	r2, #0
   1f1f8:	ldr	r3, [sp, #16]
   1f1fc:	strb	r2, [r3, r4]
   1f200:	add	r4, r4, #1
   1f204:	cmp	r4, #256	; 0x100
   1f208:	beq	1f254 <fputs@plt+0x15e98>
   1f20c:	bics	r3, r4, #127	; 0x7f
   1f210:	beq	1f0ac <fputs@plt+0x15cf0>
   1f214:	ldr	ip, [sp, #8]
   1f218:	ldr	r3, [pc, #64]	; 1f260 <fputs@plt+0x15ea4>
   1f21c:	strb	r5, [r7, r4]
   1f220:	strb	r5, [ip, r4]
   1f224:	add	ip, r3, #256	; 0x100
   1f228:	strb	r5, [r3, r4]
   1f22c:	strb	r5, [ip, r4]
   1f230:	ldr	r3, [sp, #12]
   1f234:	ldr	ip, [sp, #4]
   1f238:	strb	r5, [fp, r4]
   1f23c:	strb	r5, [sl, r4]
   1f240:	strb	r5, [r9, r4]
   1f244:	strb	r5, [r8, r4]
   1f248:	strb	r5, [r3, r4]
   1f24c:	strb	r5, [ip, r4]
   1f250:	b	1f1f4 <fputs@plt+0x15e38>
   1f254:	ldr	r0, [sp, #20]
   1f258:	add	sp, sp, #28
   1f25c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f260:	andeq	r2, r3, r0, lsr ip
   1f264:	cmp	r1, #0
   1f268:	movw	r3, #27720	; 0x6c48
   1f26c:	movt	r3, #2
   1f270:	mov	ip, #1
   1f274:	str	ip, [r0]
   1f278:	moveq	r1, r3
   1f27c:	str	r1, [r0, #8]
   1f280:	bx	lr
   1f284:	mov	r2, #0
   1f288:	str	r2, [r0]
   1f28c:	bx	lr
   1f290:	mov	r2, #3
   1f294:	str	r1, [r0, #8]
   1f298:	str	r2, [r0]
   1f29c:	bx	lr
   1f2a0:	mov	r2, #4
   1f2a4:	str	r1, [r0, #8]
   1f2a8:	str	r2, [r0]
   1f2ac:	bx	lr
   1f2b0:	mov	r2, #2
   1f2b4:	strb	r1, [r0, #8]
   1f2b8:	str	r2, [r0]
   1f2bc:	bx	lr
   1f2c0:	mov	r2, #2
   1f2c4:	strb	r1, [r0, #8]
   1f2c8:	str	r2, [r0]
   1f2cc:	bx	lr
   1f2d0:	mov	r2, #5
   1f2d4:	vstr	d0, [r0, #8]
   1f2d8:	str	r2, [r0]
   1f2dc:	bx	lr
   1f2e0:	ldr	r0, [r0]
   1f2e4:	rsbs	r0, r0, #1
   1f2e8:	movcc	r0, #0
   1f2ec:	bx	lr
   1f2f0:	ldr	r3, [r0]
   1f2f4:	push	{r4, r5, lr}
   1f2f8:	sub	r3, r3, #1
   1f2fc:	sub	sp, sp, #12
   1f300:	cmp	r3, #4
   1f304:	ldrls	pc, [pc, r3, lsl #2]
   1f308:	b	1f344 <fputs@plt+0x15f88>
   1f30c:	andeq	pc, r1, ip, ror #6
   1f310:	andeq	pc, r1, r8, lsl #7
   1f314:	andeq	pc, r1, r4, lsr #7
   1f318:	andeq	pc, r1, ip, asr #6
   1f31c:	andeq	pc, r1, r0, lsr #6
   1f320:	ldrd	r4, [r0, #8]
   1f324:	movw	r3, #1488	; 0x5d0
   1f328:	movt	r3, #3
   1f32c:	movw	r2, #19012	; 0x4a44
   1f330:	mov	r1, #1
   1f334:	movt	r2, #2
   1f338:	ldr	r0, [r3]
   1f33c:	strd	r4, [sp]
   1f340:	bl	92c0 <__fprintf_chk@plt>
   1f344:	add	sp, sp, #12
   1f348:	pop	{r4, r5, pc}
   1f34c:	ldr	r0, [r0, #8]
   1f350:	bl	2076c <fputs@plt+0x173b0>
   1f354:	movw	r3, #1488	; 0x5d0
   1f358:	movt	r3, #3
   1f35c:	ldr	r1, [r3]
   1f360:	add	sp, sp, #12
   1f364:	pop	{r4, r5, lr}
   1f368:	b	93bc <fputs@plt>
   1f36c:	movw	r3, #1488	; 0x5d0
   1f370:	movt	r3, #3
   1f374:	ldr	r0, [r0, #8]
   1f378:	ldr	r1, [r3]
   1f37c:	add	sp, sp, #12
   1f380:	pop	{r4, r5, lr}
   1f384:	b	93bc <fputs@plt>
   1f388:	movw	r3, #1488	; 0x5d0
   1f38c:	movt	r3, #3
   1f390:	ldrb	r0, [r0, #8]
   1f394:	ldr	r1, [r3]
   1f398:	add	sp, sp, #12
   1f39c:	pop	{r4, r5, lr}
   1f3a0:	b	9368 <_IO_putc@plt>
   1f3a4:	ldr	r0, [r0, #8]
   1f3a8:	bl	206e4 <fputs@plt+0x17328>
   1f3ac:	movw	r3, #1488	; 0x5d0
   1f3b0:	movt	r3, #3
   1f3b4:	ldr	r1, [r3]
   1f3b8:	add	sp, sp, #12
   1f3bc:	pop	{r4, r5, lr}
   1f3c0:	b	93bc <fputs@plt>
   1f3c4:	push	{r4, r5, r6, r7, r8, lr}
   1f3c8:	subs	r4, r0, #0
   1f3cc:	mov	r6, r1
   1f3d0:	mov	r7, r2
   1f3d4:	mov	r8, r3
   1f3d8:	beq	1f510 <fputs@plt+0x16154>
   1f3dc:	movw	r5, #1488	; 0x5d0
   1f3e0:	movt	r5, #3
   1f3e4:	ldrb	r0, [r4]
   1f3e8:	cmp	r0, #0
   1f3ec:	beq	1f46c <fputs@plt+0x160b0>
   1f3f0:	cmp	r0, #37	; 0x25
   1f3f4:	bne	1f4c4 <fputs@plt+0x16108>
   1f3f8:	ldrb	ip, [r4, #1]
   1f3fc:	add	r4, r4, #2
   1f400:	sub	ip, ip, #37	; 0x25
   1f404:	cmp	ip, #14
   1f408:	ldrls	pc, [pc, ip, lsl #2]
   1f40c:	b	1f4b0 <fputs@plt+0x160f4>
   1f410:	andeq	pc, r1, r0, lsr #9
   1f414:			; <UNDEFINED> instruction: 0x0001f4b0
   1f418:			; <UNDEFINED> instruction: 0x0001f4b0
   1f41c:			; <UNDEFINED> instruction: 0x0001f4b0
   1f420:			; <UNDEFINED> instruction: 0x0001f4b0
   1f424:			; <UNDEFINED> instruction: 0x0001f4b0
   1f428:			; <UNDEFINED> instruction: 0x0001f4b0
   1f42c:			; <UNDEFINED> instruction: 0x0001f4b0
   1f430:			; <UNDEFINED> instruction: 0x0001f4b0
   1f434:			; <UNDEFINED> instruction: 0x0001f4b0
   1f438:			; <UNDEFINED> instruction: 0x0001f4b0
   1f43c:			; <UNDEFINED> instruction: 0x0001f4b0
   1f440:	andeq	pc, r1, r8, lsl #9
   1f444:	andeq	pc, r1, r0, ror r4	; <UNPREDICTABLE>
   1f448:	andeq	pc, r1, ip, asr #8
   1f44c:	ldr	r3, [r8]
   1f450:	cmp	r3, #0
   1f454:	beq	1f4d4 <fputs@plt+0x16118>
   1f458:	mov	r0, r8
   1f45c:	bl	1f2f0 <fputs@plt+0x15f34>
   1f460:	ldrb	r0, [r4]
   1f464:	cmp	r0, #0
   1f468:	bne	1f3f0 <fputs@plt+0x16034>
   1f46c:	pop	{r4, r5, r6, r7, r8, pc}
   1f470:	ldr	r3, [r7]
   1f474:	cmp	r3, #0
   1f478:	beq	1f4fc <fputs@plt+0x16140>
   1f47c:	mov	r0, r7
   1f480:	bl	1f2f0 <fputs@plt+0x15f34>
   1f484:	b	1f3e4 <fputs@plt+0x16028>
   1f488:	ldr	r3, [r6]
   1f48c:	cmp	r3, #0
   1f490:	beq	1f4e8 <fputs@plt+0x1612c>
   1f494:	mov	r0, r6
   1f498:	bl	1f2f0 <fputs@plt+0x15f34>
   1f49c:	b	1f3e4 <fputs@plt+0x16028>
   1f4a0:	ldr	r1, [r5]
   1f4a4:	mov	r0, #37	; 0x25
   1f4a8:	bl	92d8 <fputc@plt>
   1f4ac:	b	1f3e4 <fputs@plt+0x16028>
   1f4b0:	movw	r1, #27728	; 0x6c50
   1f4b4:	mov	r0, #121	; 0x79
   1f4b8:	movt	r1, #2
   1f4bc:	bl	1eec8 <fputs@plt+0x15b0c>
   1f4c0:	b	1f3e4 <fputs@plt+0x16028>
   1f4c4:	ldr	r1, [r5]
   1f4c8:	add	r4, r4, #1
   1f4cc:	bl	9368 <_IO_putc@plt>
   1f4d0:	b	1f3e4 <fputs@plt+0x16028>
   1f4d4:	movw	r1, #27728	; 0x6c50
   1f4d8:	mov	r0, #117	; 0x75
   1f4dc:	movt	r1, #2
   1f4e0:	bl	1eec8 <fputs@plt+0x15b0c>
   1f4e4:	b	1f458 <fputs@plt+0x1609c>
   1f4e8:	movw	r1, #27728	; 0x6c50
   1f4ec:	mov	r0, #109	; 0x6d
   1f4f0:	movt	r1, #2
   1f4f4:	bl	1eec8 <fputs@plt+0x15b0c>
   1f4f8:	b	1f494 <fputs@plt+0x160d8>
   1f4fc:	movw	r1, #27728	; 0x6c50
   1f500:	mov	r0, #113	; 0x71
   1f504:	movt	r1, #2
   1f508:	bl	1eec8 <fputs@plt+0x15b0c>
   1f50c:	b	1f47c <fputs@plt+0x160c0>
   1f510:	movw	r1, #27728	; 0x6c50
   1f514:	mov	r0, #99	; 0x63
   1f518:	movt	r1, #2
   1f51c:	bl	1eec8 <fputs@plt+0x15b0c>
   1f520:	b	1f3dc <fputs@plt+0x16020>
   1f524:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f528:	movw	ip, #14000	; 0x36b0
   1f52c:	sub	sp, sp, #20
   1f530:	movt	ip, #3
   1f534:	movw	r4, #1488	; 0x5d0
   1f538:	mov	r5, r0
   1f53c:	str	r1, [sp, #12]
   1f540:	mov	sl, r2
   1f544:	ldr	r1, [ip]
   1f548:	mov	r6, r3
   1f54c:	ldr	fp, [sp, #56]	; 0x38
   1f550:	movt	r4, #3
   1f554:	cmp	r1, #0
   1f558:	ldr	r9, [sp, #60]	; 0x3c
   1f55c:	ldr	r8, [sp, #64]	; 0x40
   1f560:	ldr	r7, [sp, #68]	; 0x44
   1f564:	beq	1f584 <fputs@plt+0x161c8>
   1f568:	mov	r3, r1
   1f56c:	movw	r2, #27760	; 0x6c70
   1f570:	mov	r1, #1
   1f574:	ldr	r0, [r4]
   1f578:	movt	r2, #2
   1f57c:	bl	92c0 <__fprintf_chk@plt>
   1f580:	mov	r1, #1
   1f584:	mvn	r3, sl
   1f588:	cmp	r5, #0
   1f58c:	lsr	r3, r3, #31
   1f590:	moveq	r3, #0
   1f594:	cmp	r3, #0
   1f598:	beq	1f5ec <fputs@plt+0x16230>
   1f59c:	mov	r0, r5
   1f5a0:	movw	r1, #20988	; 0x51fc
   1f5a4:	movt	r1, #2
   1f5a8:	bl	9380 <strcmp@plt>
   1f5ac:	movw	r3, #27740	; 0x6c5c
   1f5b0:	ldr	r2, [sp, #12]
   1f5b4:	movt	r3, #2
   1f5b8:	cmp	r0, #0
   1f5bc:	ldr	r0, [r4]
   1f5c0:	moveq	r5, r3
   1f5c4:	cmp	r2, #0
   1f5c8:	mov	r3, r5
   1f5cc:	beq	1f680 <fputs@plt+0x162c4>
   1f5d0:	str	r2, [sp]
   1f5d4:	mov	r1, #1
   1f5d8:	movw	r2, #27764	; 0x6c74
   1f5dc:	str	sl, [sp, #4]
   1f5e0:	movt	r2, #2
   1f5e4:	bl	92c0 <__fprintf_chk@plt>
   1f5e8:	mov	r1, #1
   1f5ec:	cmp	r6, #0
   1f5f0:	beq	1f664 <fputs@plt+0x162a8>
   1f5f4:	cmp	r6, #2
   1f5f8:	beq	1f63c <fputs@plt+0x16280>
   1f5fc:	cmp	r1, #0
   1f600:	bne	1f654 <fputs@plt+0x16298>
   1f604:	mov	r2, r8
   1f608:	mov	r3, r7
   1f60c:	mov	r0, fp
   1f610:	mov	r1, r9
   1f614:	bl	1f3c4 <fputs@plt+0x16008>
   1f618:	ldr	r1, [r4]
   1f61c:	mov	r0, #10
   1f620:	bl	92d8 <fputc@plt>
   1f624:	ldr	r0, [r4]
   1f628:	bl	91dc <fflush@plt>
   1f62c:	cmp	r6, #2
   1f630:	beq	1f69c <fputs@plt+0x162e0>
   1f634:	add	sp, sp, #20
   1f638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f63c:	movw	r0, #27784	; 0x6c88
   1f640:	mov	r1, #1
   1f644:	movt	r0, #2
   1f648:	mov	r2, #12
   1f64c:	ldr	r3, [r4]
   1f650:	bl	926c <fwrite@plt>
   1f654:	ldr	r1, [r4]
   1f658:	mov	r0, #32
   1f65c:	bl	92d8 <fputc@plt>
   1f660:	b	1f604 <fputs@plt+0x16248>
   1f664:	movw	r0, #27800	; 0x6c98
   1f668:	mov	r1, #1
   1f66c:	mov	r2, #8
   1f670:	ldr	r3, [r4]
   1f674:	movt	r0, #2
   1f678:	bl	926c <fwrite@plt>
   1f67c:	b	1f654 <fputs@plt+0x16298>
   1f680:	mov	r1, #1
   1f684:	str	sl, [sp]
   1f688:	movw	r2, #27776	; 0x6c80
   1f68c:	movt	r2, #2
   1f690:	bl	92c0 <__fprintf_chk@plt>
   1f694:	mov	r1, #1
   1f698:	b	1f5ec <fputs@plt+0x16230>
   1f69c:	add	sp, sp, #20
   1f6a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f6a4:	b	1f84c <fputs@plt+0x16490>
   1f6a8:	push	{r4, r5, r6, lr}
   1f6ac:	movw	ip, #13996	; 0x36ac
   1f6b0:	sub	sp, sp, #16
   1f6b4:	movt	ip, #3
   1f6b8:	movw	r4, #13900	; 0x364c
   1f6bc:	movw	lr, #13896	; 0x3648
   1f6c0:	movt	r4, #3
   1f6c4:	movt	lr, #3
   1f6c8:	ldr	r6, [r4]
   1f6cc:	mov	r4, r0
   1f6d0:	ldr	r5, [lr]
   1f6d4:	ldr	lr, [ip]
   1f6d8:	ldr	ip, [sp, #32]
   1f6dc:	mov	r0, r6
   1f6e0:	str	r1, [sp]
   1f6e4:	mov	r1, r5
   1f6e8:	str	r2, [sp, #4]
   1f6ec:	mov	r2, lr
   1f6f0:	str	r3, [sp, #8]
   1f6f4:	mov	r3, r4
   1f6f8:	str	ip, [sp, #12]
   1f6fc:	bl	1f524 <fputs@plt+0x16168>
   1f700:	add	sp, sp, #16
   1f704:	pop	{r4, r5, r6, pc}
   1f708:	push	{lr}		; (str lr, [sp, #-4]!)
   1f70c:	sub	sp, sp, #12
   1f710:	mov	lr, r1
   1f714:	mov	ip, r2
   1f718:	mov	r1, r0
   1f71c:	str	r3, [sp]
   1f720:	mov	r2, lr
   1f724:	mov	r0, #1
   1f728:	mov	r3, ip
   1f72c:	bl	1f6a8 <fputs@plt+0x162ec>
   1f730:	add	sp, sp, #12
   1f734:	pop	{pc}		; (ldr pc, [sp], #4)
   1f738:	push	{lr}		; (str lr, [sp, #-4]!)
   1f73c:	sub	sp, sp, #12
   1f740:	mov	lr, r1
   1f744:	mov	ip, r2
   1f748:	mov	r1, r0
   1f74c:	str	r3, [sp]
   1f750:	mov	r2, lr
   1f754:	mov	r0, #0
   1f758:	mov	r3, ip
   1f75c:	bl	1f6a8 <fputs@plt+0x162ec>
   1f760:	add	sp, sp, #12
   1f764:	pop	{pc}		; (ldr pc, [sp], #4)
   1f768:	push	{lr}		; (str lr, [sp, #-4]!)
   1f76c:	sub	sp, sp, #12
   1f770:	mov	lr, r1
   1f774:	mov	ip, r2
   1f778:	mov	r1, r0
   1f77c:	str	r3, [sp]
   1f780:	mov	r2, lr
   1f784:	mov	r0, #2
   1f788:	mov	r3, ip
   1f78c:	bl	1f6a8 <fputs@plt+0x162ec>
   1f790:	add	sp, sp, #12
   1f794:	pop	{pc}		; (ldr pc, [sp], #4)
   1f798:	push	{r4, lr}
   1f79c:	sub	sp, sp, #16
   1f7a0:	mov	r4, r1
   1f7a4:	mov	r1, #0
   1f7a8:	ldr	lr, [sp, #24]
   1f7ac:	ldr	ip, [sp, #28]
   1f7b0:	str	r2, [sp]
   1f7b4:	mov	r2, r4
   1f7b8:	str	r3, [sp, #4]
   1f7bc:	mov	r3, #1
   1f7c0:	str	lr, [sp, #8]
   1f7c4:	str	ip, [sp, #12]
   1f7c8:	bl	1f524 <fputs@plt+0x16168>
   1f7cc:	add	sp, sp, #16
   1f7d0:	pop	{r4, pc}
   1f7d4:	push	{r4, lr}
   1f7d8:	sub	sp, sp, #16
   1f7dc:	mov	r4, r1
   1f7e0:	mov	r1, #0
   1f7e4:	ldr	lr, [sp, #24]
   1f7e8:	ldr	ip, [sp, #28]
   1f7ec:	str	r2, [sp]
   1f7f0:	mov	r2, r4
   1f7f4:	str	r3, [sp, #4]
   1f7f8:	mov	r3, r1
   1f7fc:	str	lr, [sp, #8]
   1f800:	str	ip, [sp, #12]
   1f804:	bl	1f524 <fputs@plt+0x16168>
   1f808:	add	sp, sp, #16
   1f80c:	pop	{r4, pc}
   1f810:	push	{r4, lr}
   1f814:	sub	sp, sp, #16
   1f818:	mov	r4, r1
   1f81c:	mov	r1, #0
   1f820:	ldr	lr, [sp, #24]
   1f824:	ldr	ip, [sp, #28]
   1f828:	str	r2, [sp]
   1f82c:	mov	r2, r4
   1f830:	str	r3, [sp, #4]
   1f834:	mov	r3, #2
   1f838:	str	lr, [sp, #8]
   1f83c:	str	ip, [sp, #12]
   1f840:	bl	1f524 <fputs@plt+0x16168>
   1f844:	add	sp, sp, #16
   1f848:	pop	{r4, pc}
   1f84c:	push	{r3, lr}
   1f850:	mov	r0, #3
   1f854:	bl	938c <exit@plt>
   1f858:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   1f85c:	sub	sp, sp, #8
   1f860:	ldr	r6, [r1, #36]	; 0x24
   1f864:	ldr	fp, [r1, #32]
   1f868:	ldr	sl, [r1]
   1f86c:	add	r9, r0, r6, lsl #2
   1f870:	mov	r5, fp
   1f874:	mov	r7, sl
   1f878:	cmp	r6, r5
   1f87c:	cmpgt	r7, r6
   1f880:	ble	1f8d4 <fputs@plt+0x16518>
   1f884:	rsb	r4, r6, r7
   1f888:	rsb	r8, r5, r6
   1f88c:	cmp	r4, r8
   1f890:	bgt	1f8f0 <fputs@plt+0x16534>
   1f894:	cmp	r4, #0
   1f898:	add	r4, r5, r4
   1f89c:	addgt	r5, r0, r5, lsl #2
   1f8a0:	movgt	r3, r9
   1f8a4:	addgt	r8, r0, r4, lsl #2
   1f8a8:	ble	1f8c4 <fputs@plt+0x16508>
   1f8ac:	ldr	ip, [r3]
   1f8b0:	ldr	r2, [r5]
   1f8b4:	str	ip, [r5], #4
   1f8b8:	cmp	r5, r8
   1f8bc:	str	r2, [r3], #4
   1f8c0:	bne	1f8ac <fputs@plt+0x164f0>
   1f8c4:	mov	r5, r4
   1f8c8:	cmp	r6, r5
   1f8cc:	cmpgt	r7, r6
   1f8d0:	bgt	1f884 <fputs@plt+0x164c8>
   1f8d4:	rsb	r6, r6, sl
   1f8d8:	str	sl, [r1, #36]	; 0x24
   1f8dc:	add	fp, fp, r6
   1f8e0:	str	fp, [r1, #32]
   1f8e4:	add	sp, sp, #8
   1f8e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   1f8ec:	bx	lr
   1f8f0:	cmp	r8, #0
   1f8f4:	ble	1f930 <fputs@plt+0x16574>
   1f8f8:	rsb	r2, r6, r5
   1f8fc:	add	r4, r8, r5
   1f900:	add	r2, r7, r2
   1f904:	add	r3, r0, r5, lsl #2
   1f908:	add	r4, r0, r4, lsl #2
   1f90c:	str	r1, [sp, #4]
   1f910:	add	r2, r0, r2, lsl #2
   1f914:	ldr	r1, [r2]
   1f918:	ldr	ip, [r3]
   1f91c:	str	r1, [r3], #4
   1f920:	cmp	r3, r4
   1f924:	str	ip, [r2], #4
   1f928:	bne	1f914 <fputs@plt+0x16558>
   1f92c:	ldr	r1, [sp, #4]
   1f930:	rsb	r7, r8, r7
   1f934:	b	1f878 <fputs@plt+0x164bc>
   1f938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f93c:	sub	sp, sp, #68	; 0x44
   1f940:	mov	r9, r2
   1f944:	ldrb	r2, [r2]
   1f948:	ldr	r4, [sp, #116]	; 0x74
   1f94c:	cmp	r2, #58	; 0x3a
   1f950:	str	r3, [sp, #24]
   1f954:	str	r1, [sp, #20]
   1f958:	ldr	r3, [r4, #4]
   1f95c:	moveq	r3, #0
   1f960:	subs	r6, r0, #0
   1f964:	str	r3, [sp, #8]
   1f968:	ble	1fbc4 <fputs@plt+0x16808>
   1f96c:	ldr	r3, [r4]
   1f970:	mov	r2, #0
   1f974:	str	r2, [r4, #12]
   1f978:	cmp	r3, r2
   1f97c:	beq	1fb1c <fputs@plt+0x16760>
   1f980:	ldr	r2, [r4, #16]
   1f984:	cmp	r2, #0
   1f988:	bne	1f9f4 <fputs@plt+0x16638>
   1f98c:	ldr	r0, [sp, #112]	; 0x70
   1f990:	str	r3, [r4, #36]	; 0x24
   1f994:	cmp	r0, #0
   1f998:	str	r3, [r4, #32]
   1f99c:	mov	r3, #0
   1f9a0:	str	r3, [r4, #20]
   1f9a4:	movne	r0, #1
   1f9a8:	beq	1fbfc <fputs@plt+0x16840>
   1f9ac:	str	r0, [r4, #28]
   1f9b0:	ldrb	r3, [r9]
   1f9b4:	cmp	r3, #45	; 0x2d
   1f9b8:	addeq	r9, r9, #1
   1f9bc:	moveq	r3, #2
   1f9c0:	streq	r3, [r4, #24]
   1f9c4:	beq	1f9ec <fputs@plt+0x16630>
   1f9c8:	cmp	r3, #43	; 0x2b
   1f9cc:	addeq	r9, r9, #1
   1f9d0:	moveq	r3, #0
   1f9d4:	streq	r3, [r4, #24]
   1f9d8:	beq	1f9ec <fputs@plt+0x16630>
   1f9dc:	cmp	r0, #0
   1f9e0:	movne	r3, #0
   1f9e4:	moveq	r3, #1
   1f9e8:	str	r3, [r4, #24]
   1f9ec:	mov	r3, #1
   1f9f0:	str	r3, [r4, #16]
   1f9f4:	ldr	r7, [r4, #20]
   1f9f8:	cmp	r7, #0
   1f9fc:	beq	1fb28 <fputs@plt+0x1676c>
   1fa00:	ldrb	r3, [r7]
   1fa04:	cmp	r3, #0
   1fa08:	beq	1fb28 <fputs@plt+0x1676c>
   1fa0c:	ldr	r3, [sp, #24]
   1fa10:	cmp	r3, #0
   1fa14:	beq	1fa7c <fputs@plt+0x166c0>
   1fa18:	ldr	r3, [r4]
   1fa1c:	ldr	r0, [sp, #20]
   1fa20:	str	r3, [sp, #12]
   1fa24:	ldr	r3, [r0, r3, lsl #2]
   1fa28:	str	r3, [sp, #28]
   1fa2c:	ldr	r3, [sp, #12]
   1fa30:	lsl	r3, r3, #2
   1fa34:	str	r3, [sp, #60]	; 0x3c
   1fa38:	ldr	r3, [sp, #28]
   1fa3c:	ldrb	r3, [r3, #1]
   1fa40:	cmp	r3, #45	; 0x2d
   1fa44:	str	r3, [sp, #32]
   1fa48:	beq	1fc94 <fputs@plt+0x168d8>
   1fa4c:	ldr	r3, [sp, #108]	; 0x6c
   1fa50:	cmp	r3, #0
   1fa54:	beq	1fa7c <fputs@plt+0x166c0>
   1fa58:	ldr	r0, [sp, #28]
   1fa5c:	ldrb	r3, [r0, #2]
   1fa60:	cmp	r3, #0
   1fa64:	bne	1fc94 <fputs@plt+0x168d8>
   1fa68:	mov	r0, r9
   1fa6c:	ldr	r1, [sp, #32]
   1fa70:	bl	9164 <strchr@plt>
   1fa74:	cmp	r0, #0
   1fa78:	beq	1fc94 <fputs@plt+0x168d8>
   1fa7c:	add	r8, r7, #1
   1fa80:	str	r8, [r4, #20]
   1fa84:	ldrb	r7, [r7]
   1fa88:	mov	r0, r9
   1fa8c:	mov	r1, r7
   1fa90:	mov	r5, r7
   1fa94:	bl	9164 <strchr@plt>
   1fa98:	ldrb	r3, [r8]
   1fa9c:	cmp	r3, #0
   1faa0:	ldreq	r3, [r4]
   1faa4:	addeq	r3, r3, #1
   1faa8:	streq	r3, [r4]
   1faac:	cmp	r0, #0
   1fab0:	cmpne	r7, #58	; 0x3a
   1fab4:	bne	1fc48 <fputs@plt+0x1688c>
   1fab8:	ldr	r3, [sp, #8]
   1fabc:	cmp	r3, #0
   1fac0:	beq	1fb08 <fputs@plt+0x1674c>
   1fac4:	ldr	r3, [r4, #28]
   1fac8:	movw	r1, #1488	; 0x5d0
   1facc:	movt	r1, #3
   1fad0:	cmp	r3, #0
   1fad4:	ldreq	r0, [sp, #20]
   1fad8:	movwne	r2, #28060	; 0x6d9c
   1fadc:	ldrne	lr, [sp, #20]
   1fae0:	movweq	r2, #28088	; 0x6db8
   1fae4:	ldrne	r0, [r1]
   1fae8:	movtne	r2, #2
   1faec:	ldreq	r3, [r0]
   1faf0:	movteq	r2, #2
   1faf4:	ldreq	r0, [r1]
   1faf8:	mov	r1, #1
   1fafc:	ldrne	r3, [lr]
   1fb00:	str	r7, [sp]
   1fb04:	bl	92c0 <__fprintf_chk@plt>
   1fb08:	str	r7, [r4, #8]
   1fb0c:	mov	r5, #63	; 0x3f
   1fb10:	mov	r0, r5
   1fb14:	add	sp, sp, #68	; 0x44
   1fb18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb1c:	mov	r3, #1
   1fb20:	str	r3, [r4]
   1fb24:	b	1f98c <fputs@plt+0x165d0>
   1fb28:	ldr	r2, [r4]
   1fb2c:	ldr	r3, [r4, #36]	; 0x24
   1fb30:	cmp	r3, r2
   1fb34:	ldr	r3, [r4, #32]
   1fb38:	strgt	r2, [r4, #36]	; 0x24
   1fb3c:	cmp	r2, r3
   1fb40:	ldr	r3, [r4, #24]
   1fb44:	strlt	r2, [r4, #32]
   1fb48:	cmp	r3, #1
   1fb4c:	beq	1fe48 <fputs@plt+0x16a8c>
   1fb50:	cmp	r6, r2
   1fb54:	beq	1fe3c <fputs@plt+0x16a80>
   1fb58:	ldr	r0, [sp, #20]
   1fb5c:	ldr	r3, [r0, r2, lsl #2]
   1fb60:	ldrb	r1, [r3]
   1fb64:	cmp	r1, #45	; 0x2d
   1fb68:	bne	1fbd4 <fputs@plt+0x16818>
   1fb6c:	ldrb	r1, [r3, #1]
   1fb70:	cmp	r1, #45	; 0x2d
   1fb74:	bne	1fc14 <fputs@plt+0x16858>
   1fb78:	ldrb	r1, [r3, #2]
   1fb7c:	cmp	r1, #0
   1fb80:	bne	1fc14 <fputs@plt+0x16858>
   1fb84:	ldr	r3, [r4, #32]
   1fb88:	add	r2, r2, #1
   1fb8c:	ldr	r1, [r4, #36]	; 0x24
   1fb90:	str	r2, [r4]
   1fb94:	cmp	r3, r1
   1fb98:	beq	1ffec <fputs@plt+0x16c30>
   1fb9c:	cmp	r2, r1
   1fba0:	beq	1fbb0 <fputs@plt+0x167f4>
   1fba4:	mov	r1, r4
   1fba8:	bl	1f858 <fputs@plt+0x1649c>
   1fbac:	ldr	r3, [r4, #32]
   1fbb0:	mov	r2, r6
   1fbb4:	str	r6, [r4, #36]	; 0x24
   1fbb8:	str	r6, [r4]
   1fbbc:	cmp	r2, r3
   1fbc0:	strne	r3, [r4]
   1fbc4:	mvn	r5, #0
   1fbc8:	mov	r0, r5
   1fbcc:	add	sp, sp, #68	; 0x44
   1fbd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fbd4:	ldr	r1, [r4, #24]
   1fbd8:	cmp	r1, #0
   1fbdc:	beq	1fbc4 <fputs@plt+0x16808>
   1fbe0:	mov	r5, #1
   1fbe4:	add	r2, r2, #1
   1fbe8:	str	r3, [r4, #12]
   1fbec:	str	r2, [r4]
   1fbf0:	mov	r0, r5
   1fbf4:	add	sp, sp, #68	; 0x44
   1fbf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fbfc:	movw	r0, #27812	; 0x6ca4
   1fc00:	movt	r0, #2
   1fc04:	bl	9134 <getenv@plt>
   1fc08:	adds	r0, r0, #0
   1fc0c:	movne	r0, #1
   1fc10:	b	1f9ac <fputs@plt+0x165f0>
   1fc14:	ldrb	r1, [r3, #1]
   1fc18:	cmp	r1, #0
   1fc1c:	beq	1fbd4 <fputs@plt+0x16818>
   1fc20:	ldr	r2, [sp, #24]
   1fc24:	cmp	r2, #0
   1fc28:	moveq	r7, #1
   1fc2c:	beq	1fc3c <fputs@plt+0x16880>
   1fc30:	cmp	r1, #45	; 0x2d
   1fc34:	moveq	r7, #2
   1fc38:	movne	r7, #1
   1fc3c:	add	r7, r3, r7
   1fc40:	str	r7, [r4, #20]
   1fc44:	b	1fa0c <fputs@plt+0x16650>
   1fc48:	ldrb	r3, [r0]
   1fc4c:	cmp	r3, #87	; 0x57
   1fc50:	ldrb	r3, [r0, #1]
   1fc54:	beq	1fff8 <fputs@plt+0x16c3c>
   1fc58:	cmp	r3, #58	; 0x3a
   1fc5c:	bne	1fbf0 <fputs@plt+0x16834>
   1fc60:	ldrb	r3, [r0, #2]
   1fc64:	cmp	r3, #58	; 0x3a
   1fc68:	ldrb	r3, [r8]
   1fc6c:	beq	20220 <fputs@plt+0x16e64>
   1fc70:	cmp	r3, #0
   1fc74:	ldr	r3, [r4]
   1fc78:	beq	201cc <fputs@plt+0x16e10>
   1fc7c:	add	r3, r3, #1
   1fc80:	str	r8, [r4, #12]
   1fc84:	str	r3, [r4]
   1fc88:	mov	r3, #0
   1fc8c:	str	r3, [r4, #20]
   1fc90:	b	1fbf0 <fputs@plt+0x16834>
   1fc94:	ldrb	r3, [r7]
   1fc98:	cmp	r3, #61	; 0x3d
   1fc9c:	cmpne	r3, #0
   1fca0:	str	r3, [sp, #36]	; 0x24
   1fca4:	beq	2013c <fputs@plt+0x16d80>
   1fca8:	add	r3, r7, #1
   1fcac:	mov	r1, r3
   1fcb0:	ldrb	r2, [r3], #1
   1fcb4:	cmp	r2, #61	; 0x3d
   1fcb8:	cmpne	r2, #0
   1fcbc:	bne	1fcac <fputs@plt+0x168f0>
   1fcc0:	str	r1, [sp, #40]	; 0x28
   1fcc4:	ldr	r3, [sp, #24]
   1fcc8:	ldr	fp, [r3]
   1fccc:	cmp	fp, #0
   1fcd0:	beq	20144 <fputs@plt+0x16d88>
   1fcd4:	ldr	sl, [sp, #24]
   1fcd8:	mov	r5, #0
   1fcdc:	ldr	r3, [sp, #40]	; 0x28
   1fce0:	mvn	lr, #0
   1fce4:	str	r6, [sp, #44]	; 0x2c
   1fce8:	mov	r6, fp
   1fcec:	str	r9, [sp, #48]	; 0x30
   1fcf0:	rsb	r8, r7, r3
   1fcf4:	str	r4, [sp, #52]	; 0x34
   1fcf8:	mov	fp, r5
   1fcfc:	str	lr, [sp, #56]	; 0x38
   1fd00:	mov	r9, sl
   1fd04:	mov	r4, r5
   1fd08:	b	1fd3c <fputs@plt+0x16980>
   1fd0c:	ldr	r3, [sp, #108]	; 0x6c
   1fd10:	cmp	r3, #0
   1fd14:	bne	1fd28 <fputs@plt+0x1696c>
   1fd18:	ldr	r2, [fp, #4]
   1fd1c:	ldr	r3, [r9, #4]
   1fd20:	cmp	r2, r3
   1fd24:	beq	1fe18 <fputs@plt+0x16a5c>
   1fd28:	mov	r4, #1
   1fd2c:	ldr	r6, [r9, #16]!
   1fd30:	add	r5, r5, #1
   1fd34:	cmp	r6, #0
   1fd38:	beq	1fd88 <fputs@plt+0x169cc>
   1fd3c:	mov	r0, r6
   1fd40:	mov	r1, r7
   1fd44:	mov	r2, r8
   1fd48:	mov	sl, r9
   1fd4c:	bl	9344 <strncmp@plt>
   1fd50:	cmp	r0, #0
   1fd54:	bne	1fd2c <fputs@plt+0x16970>
   1fd58:	mov	r0, r6
   1fd5c:	bl	9200 <strlen@plt>
   1fd60:	cmp	r0, r8
   1fd64:	beq	1ff88 <fputs@plt+0x16bcc>
   1fd68:	cmp	fp, #0
   1fd6c:	bne	1fd0c <fputs@plt+0x16950>
   1fd70:	mov	fp, r9
   1fd74:	ldr	r6, [r9, #16]!
   1fd78:	str	r5, [sp, #56]	; 0x38
   1fd7c:	add	r5, r5, #1
   1fd80:	cmp	r6, #0
   1fd84:	bne	1fd3c <fputs@plt+0x16980>
   1fd88:	mov	r3, r4
   1fd8c:	cmp	r3, #0
   1fd90:	ldr	r6, [sp, #44]	; 0x2c
   1fd94:	ldr	r9, [sp, #48]	; 0x30
   1fd98:	ldr	r4, [sp, #52]	; 0x34
   1fd9c:	beq	1fecc <fputs@plt+0x16b10>
   1fda0:	ldr	r3, [sp, #8]
   1fda4:	cmp	r3, #0
   1fda8:	beq	1fde4 <fputs@plt+0x16a28>
   1fdac:	movw	r1, #1488	; 0x5d0
   1fdb0:	movt	r1, #3
   1fdb4:	ldr	lr, [sp, #20]
   1fdb8:	movw	r2, #27828	; 0x6cb4
   1fdbc:	ldr	r0, [r1]
   1fdc0:	movt	r2, #2
   1fdc4:	ldr	r1, [sp, #28]
   1fdc8:	ldr	r3, [lr]
   1fdcc:	str	r1, [sp]
   1fdd0:	mov	r1, #1
   1fdd4:	bl	92c0 <__fprintf_chk@plt>
   1fdd8:	ldr	r3, [r4]
   1fddc:	ldr	r7, [r4, #20]
   1fde0:	str	r3, [sp, #12]
   1fde4:	mov	r0, r7
   1fde8:	mov	r5, #63	; 0x3f
   1fdec:	bl	9200 <strlen@plt>
   1fdf0:	ldr	r3, [sp, #12]
   1fdf4:	add	r2, r3, #1
   1fdf8:	mov	r3, #0
   1fdfc:	str	r2, [r4]
   1fe00:	str	r3, [r4, #8]
   1fe04:	add	r0, r7, r0
   1fe08:	str	r0, [r4, #20]
   1fe0c:	mov	r0, r5
   1fe10:	add	sp, sp, #68	; 0x44
   1fe14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe18:	ldr	r2, [fp, #8]
   1fe1c:	ldr	r3, [r9, #8]
   1fe20:	cmp	r2, r3
   1fe24:	bne	1fd28 <fputs@plt+0x1696c>
   1fe28:	ldr	r2, [fp, #12]
   1fe2c:	ldr	r3, [r9, #12]
   1fe30:	cmp	r2, r3
   1fe34:	movne	r4, #1
   1fe38:	b	1fd2c <fputs@plt+0x16970>
   1fe3c:	ldr	r2, [r4, #36]	; 0x24
   1fe40:	ldr	r3, [r4, #32]
   1fe44:	b	1fbbc <fputs@plt+0x16800>
   1fe48:	ldr	r1, [r4, #32]
   1fe4c:	ldr	r3, [r4, #36]	; 0x24
   1fe50:	cmp	r1, r3
   1fe54:	beq	1ffe0 <fputs@plt+0x16c24>
   1fe58:	cmp	r2, r3
   1fe5c:	beq	1fe70 <fputs@plt+0x16ab4>
   1fe60:	ldr	r0, [sp, #20]
   1fe64:	mov	r1, r4
   1fe68:	bl	1f858 <fputs@plt+0x1649c>
   1fe6c:	ldr	r2, [r4]
   1fe70:	cmp	r6, r2
   1fe74:	ble	20218 <fputs@plt+0x16e5c>
   1fe78:	sub	r1, r2, #-1073741823	; 0xc0000001
   1fe7c:	mov	r3, r2
   1fe80:	ldr	r2, [sp, #20]
   1fe84:	add	r1, r2, r1, lsl #2
   1fe88:	b	1fe9c <fputs@plt+0x16ae0>
   1fe8c:	add	r3, r3, #1
   1fe90:	str	r3, [r4]
   1fe94:	cmp	r3, r6
   1fe98:	beq	1fec0 <fputs@plt+0x16b04>
   1fe9c:	ldr	r2, [r1, #4]!
   1fea0:	ldrb	r0, [r2]
   1fea4:	cmp	r0, #45	; 0x2d
   1fea8:	bne	1fe8c <fputs@plt+0x16ad0>
   1feac:	ldrb	r2, [r2, #1]
   1feb0:	cmp	r2, #0
   1feb4:	beq	1fe8c <fputs@plt+0x16ad0>
   1feb8:	ldr	r2, [r4]
   1febc:	b	1fec4 <fputs@plt+0x16b08>
   1fec0:	mov	r2, r3
   1fec4:	str	r3, [r4, #36]	; 0x24
   1fec8:	b	1fb50 <fputs@plt+0x16794>
   1fecc:	cmp	fp, #0
   1fed0:	beq	20144 <fputs@plt+0x16d88>
   1fed4:	ldr	r5, [sp, #56]	; 0x38
   1fed8:	mov	sl, fp
   1fedc:	ldr	r0, [sp, #40]	; 0x28
   1fee0:	ldr	lr, [sp, #12]
   1fee4:	add	r3, lr, #1
   1fee8:	str	r3, [r4]
   1feec:	ldrb	r2, [r0]
   1fef0:	cmp	r2, #0
   1fef4:	beq	1ff98 <fputs@plt+0x16bdc>
   1fef8:	ldr	r3, [sl, #4]
   1fefc:	cmp	r3, #0
   1ff00:	addne	r3, r0, #1
   1ff04:	strne	r3, [r4, #12]
   1ff08:	bne	1ffa4 <fputs@plt+0x16be8>
   1ff0c:	ldr	r3, [sp, #8]
   1ff10:	cmp	r3, #0
   1ff14:	beq	1ff68 <fputs@plt+0x16bac>
   1ff18:	ldr	r0, [sp, #20]
   1ff1c:	ldr	lr, [sp, #60]	; 0x3c
   1ff20:	ldr	r3, [r0, lr]
   1ff24:	ldrb	r2, [r3, #1]
   1ff28:	cmp	r2, #45	; 0x2d
   1ff2c:	beq	20298 <fputs@plt+0x16edc>
   1ff30:	ldrb	ip, [r3]
   1ff34:	movw	r0, #1488	; 0x5d0
   1ff38:	ldr	r1, [sp, #20]
   1ff3c:	movt	r0, #3
   1ff40:	movw	r2, #27908	; 0x6d04
   1ff44:	movt	r2, #2
   1ff48:	ldr	r3, [r1]
   1ff4c:	mov	r1, #1
   1ff50:	str	ip, [sp]
   1ff54:	ldr	ip, [sl]
   1ff58:	ldr	r0, [r0]
   1ff5c:	str	ip, [sp, #4]
   1ff60:	bl	92c0 <__fprintf_chk@plt>
   1ff64:	ldr	r7, [r4, #20]
   1ff68:	mov	r0, r7
   1ff6c:	mov	r5, #63	; 0x3f
   1ff70:	bl	9200 <strlen@plt>
   1ff74:	ldr	r3, [sl, #12]
   1ff78:	str	r3, [r4, #8]
   1ff7c:	add	r0, r7, r0
   1ff80:	str	r0, [r4, #20]
   1ff84:	b	1fbf0 <fputs@plt+0x16834>
   1ff88:	ldr	r6, [sp, #44]	; 0x2c
   1ff8c:	ldr	r9, [sp, #48]	; 0x30
   1ff90:	ldr	r4, [sp, #52]	; 0x34
   1ff94:	b	1fedc <fputs@plt+0x16b20>
   1ff98:	ldr	r1, [sl, #4]
   1ff9c:	cmp	r1, #1
   1ffa0:	beq	201ec <fputs@plt+0x16e30>
   1ffa4:	mov	r0, r7
   1ffa8:	bl	9200 <strlen@plt>
   1ffac:	ldr	r1, [sp, #104]	; 0x68
   1ffb0:	cmp	r1, #0
   1ffb4:	add	r0, r7, r0
   1ffb8:	str	r0, [r4, #20]
   1ffbc:	beq	1ffc4 <fputs@plt+0x16c08>
   1ffc0:	str	r5, [r1]
   1ffc4:	ldr	r3, [sl, #8]
   1ffc8:	cmp	r3, #0
   1ffcc:	ldrne	r2, [sl, #12]
   1ffd0:	movne	r5, #0
   1ffd4:	ldreq	r5, [sl, #12]
   1ffd8:	strne	r2, [r3]
   1ffdc:	b	1fbf0 <fputs@plt+0x16834>
   1ffe0:	cmp	r2, r1
   1ffe4:	strne	r2, [r4, #32]
   1ffe8:	b	1fe70 <fputs@plt+0x16ab4>
   1ffec:	mov	r3, r2
   1fff0:	str	r2, [r4, #32]
   1fff4:	b	1fbb0 <fputs@plt+0x167f4>
   1fff8:	cmp	r3, #59	; 0x3b
   1fffc:	bne	1fc58 <fputs@plt+0x1689c>
   20000:	ldrb	r3, [r8]
   20004:	cmp	r3, #0
   20008:	ldr	r3, [r4]
   2000c:	beq	20274 <fputs@plt+0x16eb8>
   20010:	add	r3, r3, #1
   20014:	str	r8, [sp, #16]
   20018:	str	r8, [r4, #12]
   2001c:	str	r3, [r4]
   20020:	ldr	r3, [sp, #16]
   20024:	str	r3, [r4, #20]
   20028:	ldrb	r7, [r3]
   2002c:	cmp	r7, #61	; 0x3d
   20030:	cmpne	r7, #0
   20034:	beq	204dc <fputs@plt+0x17120>
   20038:	add	r3, r3, #1
   2003c:	mov	r2, r3
   20040:	ldrb	r7, [r3], #1
   20044:	cmp	r7, #61	; 0x3d
   20048:	cmpne	r7, #0
   2004c:	bne	2003c <fputs@plt+0x16c80>
   20050:	str	r2, [sp, #12]
   20054:	ldr	r3, [sp, #24]
   20058:	ldr	sl, [r3]
   2005c:	cmp	sl, #0
   20060:	beq	20514 <fputs@plt+0x17158>
   20064:	ldr	fp, [sp, #24]
   20068:	mov	r5, #0
   2006c:	ldr	lr, [sp, #16]
   20070:	ldr	r3, [sp, #12]
   20074:	str	r7, [sp, #28]
   20078:	rsb	r8, lr, r3
   2007c:	str	r6, [sp, #32]
   20080:	str	r9, [sp, #36]	; 0x24
   20084:	mov	r7, lr
   20088:	str	r4, [sp, #40]	; 0x28
   2008c:	mov	r6, r5
   20090:	mov	r4, fp
   20094:	mov	r9, sl
   20098:	mov	fp, r5
   2009c:	str	r5, [sp, #24]
   200a0:	mov	r0, r9
   200a4:	mov	r1, r7
   200a8:	mov	r2, r8
   200ac:	mov	sl, r4
   200b0:	bl	9344 <strncmp@plt>
   200b4:	cmp	r0, #0
   200b8:	mov	r0, r9
   200bc:	bne	200dc <fputs@plt+0x16d20>
   200c0:	bl	9200 <strlen@plt>
   200c4:	cmp	r8, r0
   200c8:	beq	2031c <fputs@plt+0x16f60>
   200cc:	cmp	fp, #0
   200d0:	streq	r5, [sp, #24]
   200d4:	movne	r6, #1
   200d8:	moveq	fp, r4
   200dc:	ldr	r9, [r4, #16]!
   200e0:	add	r5, r5, #1
   200e4:	cmp	r9, #0
   200e8:	bne	200a0 <fputs@plt+0x16ce4>
   200ec:	mov	ip, r6
   200f0:	cmp	ip, #0
   200f4:	ldr	r7, [sp, #28]
   200f8:	ldr	r6, [sp, #32]
   200fc:	ldr	r9, [sp, #36]	; 0x24
   20100:	ldr	r4, [sp, #40]	; 0x28
   20104:	beq	203a0 <fputs@plt+0x16fe4>
   20108:	ldr	r3, [sp, #8]
   2010c:	cmp	r3, #0
   20110:	bne	203b4 <fputs@plt+0x16ff8>
   20114:	ldr	r6, [sp, #16]
   20118:	mov	r0, r6
   2011c:	mov	r5, #63	; 0x3f
   20120:	bl	9200 <strlen@plt>
   20124:	ldr	r3, [r4]
   20128:	add	r3, r3, #1
   2012c:	str	r3, [r4]
   20130:	add	r0, r6, r0
   20134:	str	r0, [r4, #20]
   20138:	b	1fbf0 <fputs@plt+0x16834>
   2013c:	str	r7, [sp, #40]	; 0x28
   20140:	b	1fcc4 <fputs@plt+0x16908>
   20144:	ldr	r3, [sp, #108]	; 0x6c
   20148:	cmp	r3, #0
   2014c:	bne	202c8 <fputs@plt+0x16f0c>
   20150:	ldr	r3, [sp, #8]
   20154:	cmp	r3, #0
   20158:	beq	201a4 <fputs@plt+0x16de8>
   2015c:	ldr	r3, [sp, #32]
   20160:	cmp	r3, #45	; 0x2d
   20164:	beq	203f8 <fputs@plt+0x1703c>
   20168:	ldr	r0, [sp, #28]
   2016c:	movw	r1, #1488	; 0x5d0
   20170:	ldr	lr, [sp, #20]
   20174:	movt	r1, #3
   20178:	movw	r2, #28028	; 0x6d7c
   2017c:	movt	r2, #2
   20180:	ldrb	ip, [r0]
   20184:	ldr	r3, [lr]
   20188:	ldr	r0, [r1]
   2018c:	mov	r1, #1
   20190:	str	r7, [sp, #4]
   20194:	str	ip, [sp]
   20198:	bl	92c0 <__fprintf_chk@plt>
   2019c:	ldr	r3, [r4]
   201a0:	str	r3, [sp, #12]
   201a4:	ldr	r3, [sp, #12]
   201a8:	mov	r5, #63	; 0x3f
   201ac:	add	r2, r3, #1
   201b0:	movw	r3, #26808	; 0x68b8
   201b4:	str	r2, [r4]
   201b8:	movt	r3, #2
   201bc:	mov	r2, #0
   201c0:	str	r3, [r4, #20]
   201c4:	str	r2, [r4, #8]
   201c8:	b	1fbf0 <fputs@plt+0x16834>
   201cc:	cmp	r3, r6
   201d0:	beq	202f8 <fputs@plt+0x16f3c>
   201d4:	ldr	r0, [sp, #20]
   201d8:	ldr	r2, [r0, r3, lsl #2]
   201dc:	add	r3, r3, #1
   201e0:	str	r3, [r4]
   201e4:	str	r2, [r4, #12]
   201e8:	b	1fc88 <fputs@plt+0x168cc>
   201ec:	cmp	r6, r3
   201f0:	ble	2023c <fputs@plt+0x16e80>
   201f4:	ldr	r2, [sp, #20]
   201f8:	ldr	lr, [sp, #60]	; 0x3c
   201fc:	ldr	r0, [sp, #12]
   20200:	add	r3, r2, lr
   20204:	add	r2, r0, #2
   20208:	str	r2, [r4]
   2020c:	ldr	r3, [r3, #4]
   20210:	str	r3, [r4, #12]
   20214:	b	1ffa4 <fputs@plt+0x16be8>
   20218:	mov	r3, r2
   2021c:	b	1fec4 <fputs@plt+0x16b08>
   20220:	cmp	r3, #0
   20224:	strne	r8, [r4, #12]
   20228:	streq	r3, [r4, #12]
   2022c:	ldrne	r3, [r4]
   20230:	addne	r3, r3, #1
   20234:	strne	r3, [r4]
   20238:	b	1fc88 <fputs@plt+0x168cc>
   2023c:	ldr	r3, [sp, #8]
   20240:	cmp	r3, #0
   20244:	bne	2042c <fputs@plt+0x17070>
   20248:	mov	r0, r7
   2024c:	bl	9200 <strlen@plt>
   20250:	ldr	r3, [sl, #12]
   20254:	str	r3, [r4, #8]
   20258:	add	r0, r7, r0
   2025c:	str	r0, [r4, #20]
   20260:	ldrb	r3, [r9]
   20264:	cmp	r3, #58	; 0x3a
   20268:	bne	1fb0c <fputs@plt+0x16750>
   2026c:	mov	r5, #58	; 0x3a
   20270:	b	1fbf0 <fputs@plt+0x16834>
   20274:	cmp	r3, r6
   20278:	beq	20490 <fputs@plt+0x170d4>
   2027c:	ldr	r0, [sp, #20]
   20280:	ldr	r2, [r0, r3, lsl #2]
   20284:	add	r3, r3, #1
   20288:	str	r3, [r4]
   2028c:	str	r2, [sp, #16]
   20290:	str	r2, [r4, #12]
   20294:	b	20020 <fputs@plt+0x16c64>
   20298:	ldr	ip, [sl]
   2029c:	movw	r1, #1488	; 0x5d0
   202a0:	movt	r1, #3
   202a4:	ldr	r3, [r0]
   202a8:	movw	r2, #27860	; 0x6cd4
   202ac:	movt	r2, #2
   202b0:	ldr	r0, [r1]
   202b4:	mov	r1, #1
   202b8:	str	ip, [sp]
   202bc:	bl	92c0 <__fprintf_chk@plt>
   202c0:	ldr	r7, [r4, #20]
   202c4:	b	1ff68 <fputs@plt+0x16bac>
   202c8:	ldr	r3, [sp, #32]
   202cc:	cmp	r3, #45	; 0x2d
   202d0:	beq	203ec <fputs@plt+0x17030>
   202d4:	ldr	r1, [sp, #36]	; 0x24
   202d8:	mov	r0, r9
   202dc:	bl	9164 <strchr@plt>
   202e0:	cmp	r0, #0
   202e4:	bne	1fa7c <fputs@plt+0x166c0>
   202e8:	ldr	r3, [sp, #8]
   202ec:	cmp	r3, #0
   202f0:	bne	20168 <fputs@plt+0x16dac>
   202f4:	b	201a4 <fputs@plt+0x16de8>
   202f8:	ldr	r3, [sp, #8]
   202fc:	cmp	r3, #0
   20300:	bne	204e8 <fputs@plt+0x1712c>
   20304:	str	r7, [r4, #8]
   20308:	ldrb	r5, [r9]
   2030c:	cmp	r5, #58	; 0x3a
   20310:	movne	r5, #63	; 0x3f
   20314:	moveq	r5, #58	; 0x3a
   20318:	b	1fc88 <fputs@plt+0x168cc>
   2031c:	ldr	r7, [sp, #28]
   20320:	ldr	r6, [sp, #32]
   20324:	ldr	r9, [sp, #36]	; 0x24
   20328:	ldr	r4, [sp, #40]	; 0x28
   2032c:	cmp	r7, #0
   20330:	beq	20460 <fputs@plt+0x170a4>
   20334:	ldr	r3, [sl, #4]
   20338:	cmp	r3, #0
   2033c:	ldrne	r0, [sp, #12]
   20340:	addne	r3, r0, #1
   20344:	strne	r3, [r4, #12]
   20348:	bne	2046c <fputs@plt+0x170b0>
   2034c:	ldr	r3, [sp, #8]
   20350:	cmp	r3, #0
   20354:	beq	20384 <fputs@plt+0x16fc8>
   20358:	ldr	ip, [sl]
   2035c:	movw	r0, #1488	; 0x5d0
   20360:	ldr	lr, [sp, #20]
   20364:	movt	r0, #3
   20368:	movw	r2, #28192	; 0x6e20
   2036c:	mov	r1, #1
   20370:	movt	r2, #2
   20374:	ldr	r3, [lr]
   20378:	str	ip, [sp]
   2037c:	ldr	r0, [r0]
   20380:	bl	92c0 <__fprintf_chk@plt>
   20384:	ldr	r6, [r4, #20]
   20388:	mov	r5, #63	; 0x3f
   2038c:	mov	r0, r6
   20390:	bl	9200 <strlen@plt>
   20394:	add	r0, r6, r0
   20398:	str	r0, [r4, #20]
   2039c:	b	1fbf0 <fputs@plt+0x16834>
   203a0:	cmp	fp, #0
   203a4:	beq	20514 <fputs@plt+0x17158>
   203a8:	ldr	r5, [sp, #24]
   203ac:	mov	sl, fp
   203b0:	b	2032c <fputs@plt+0x16f70>
   203b4:	ldr	ip, [r4]
   203b8:	movw	r0, #1488	; 0x5d0
   203bc:	ldr	lr, [sp, #20]
   203c0:	movt	r0, #3
   203c4:	movw	r2, #28156	; 0x6dfc
   203c8:	mov	r1, #1
   203cc:	ldr	r0, [r0]
   203d0:	movt	r2, #2
   203d4:	ldr	ip, [lr, ip, lsl #2]
   203d8:	ldr	r3, [lr]
   203dc:	str	ip, [sp]
   203e0:	bl	92c0 <__fprintf_chk@plt>
   203e4:	ldr	r6, [r4, #20]
   203e8:	b	20118 <fputs@plt+0x16d5c>
   203ec:	ldr	r3, [sp, #8]
   203f0:	cmp	r3, #0
   203f4:	beq	201a4 <fputs@plt+0x16de8>
   203f8:	ldr	lr, [sp, #20]
   203fc:	movw	r1, #1488	; 0x5d0
   20400:	movt	r1, #3
   20404:	movw	r2, #27996	; 0x6d5c
   20408:	movt	r2, #2
   2040c:	ldr	r3, [lr]
   20410:	ldr	r0, [r1]
   20414:	mov	r1, #1
   20418:	str	r7, [sp]
   2041c:	bl	92c0 <__fprintf_chk@plt>
   20420:	ldr	r3, [r4]
   20424:	str	r3, [sp, #12]
   20428:	b	201a4 <fputs@plt+0x16de8>
   2042c:	ldr	lr, [sp, #20]
   20430:	movw	r0, #1488	; 0x5d0
   20434:	ldr	r3, [sp, #60]	; 0x3c
   20438:	movt	r0, #3
   2043c:	movw	r2, #27956	; 0x6d34
   20440:	movt	r2, #2
   20444:	ldr	r0, [r0]
   20448:	ldr	ip, [lr, r3]
   2044c:	ldr	r3, [lr]
   20450:	str	ip, [sp]
   20454:	bl	92c0 <__fprintf_chk@plt>
   20458:	ldr	r7, [r4, #20]
   2045c:	b	20248 <fputs@plt+0x16e8c>
   20460:	ldr	r1, [sl, #4]
   20464:	cmp	r1, #1
   20468:	beq	20524 <fputs@plt+0x17168>
   2046c:	ldr	r0, [sp, #16]
   20470:	bl	9200 <strlen@plt>
   20474:	ldr	r1, [sp, #104]	; 0x68
   20478:	ldr	r3, [sp, #16]
   2047c:	cmp	r1, #0
   20480:	add	r0, r3, r0
   20484:	str	r0, [r4, #20]
   20488:	bne	1ffc0 <fputs@plt+0x16c04>
   2048c:	b	1ffc4 <fputs@plt+0x16c08>
   20490:	ldr	r3, [sp, #8]
   20494:	cmp	r3, #0
   20498:	beq	204c4 <fputs@plt+0x17108>
   2049c:	ldr	lr, [sp, #20]
   204a0:	movw	r1, #1488	; 0x5d0
   204a4:	movt	r1, #3
   204a8:	str	r7, [sp]
   204ac:	movw	r2, #28116	; 0x6dd4
   204b0:	movt	r2, #2
   204b4:	ldr	r0, [r1]
   204b8:	mov	r1, #1
   204bc:	ldr	r3, [lr]
   204c0:	bl	92c0 <__fprintf_chk@plt>
   204c4:	str	r7, [r4, #8]
   204c8:	ldrb	r5, [r9]
   204cc:	cmp	r5, #58	; 0x3a
   204d0:	movne	r5, #63	; 0x3f
   204d4:	moveq	r5, #58	; 0x3a
   204d8:	b	1fbf0 <fputs@plt+0x16834>
   204dc:	ldr	r3, [sp, #16]
   204e0:	str	r3, [sp, #12]
   204e4:	b	20054 <fputs@plt+0x16c98>
   204e8:	ldr	lr, [sp, #20]
   204ec:	movw	r1, #1488	; 0x5d0
   204f0:	movt	r1, #3
   204f4:	str	r7, [sp]
   204f8:	movw	r2, #28116	; 0x6dd4
   204fc:	movt	r2, #2
   20500:	ldr	r3, [lr]
   20504:	ldr	r0, [r1]
   20508:	mov	r1, #1
   2050c:	bl	92c0 <__fprintf_chk@plt>
   20510:	b	20304 <fputs@plt+0x16f48>
   20514:	mov	r3, #0
   20518:	mov	r5, #87	; 0x57
   2051c:	str	r3, [r4, #20]
   20520:	b	1fbf0 <fputs@plt+0x16834>
   20524:	ldr	r3, [r4]
   20528:	cmp	r6, r3
   2052c:	ble	20548 <fputs@plt+0x1718c>
   20530:	ldr	r0, [sp, #20]
   20534:	ldr	r2, [r0, r3, lsl #2]
   20538:	add	r3, r3, #1
   2053c:	str	r3, [r4]
   20540:	str	r2, [r4, #12]
   20544:	b	2046c <fputs@plt+0x170b0>
   20548:	ldr	r2, [sp, #8]
   2054c:	cmp	r2, #0
   20550:	beq	20580 <fputs@plt+0x171c4>
   20554:	ldr	lr, [sp, #20]
   20558:	sub	r3, r3, #-1073741823	; 0xc0000001
   2055c:	movw	r0, #1488	; 0x5d0
   20560:	movt	r0, #3
   20564:	movw	r2, #27956	; 0x6d34
   20568:	movt	r2, #2
   2056c:	ldr	ip, [lr, r3, lsl #2]
   20570:	ldr	r0, [r0]
   20574:	ldr	r3, [lr]
   20578:	str	ip, [sp]
   2057c:	bl	92c0 <__fprintf_chk@plt>
   20580:	ldr	r5, [r4, #20]
   20584:	mov	r0, r5
   20588:	bl	9200 <strlen@plt>
   2058c:	add	r0, r5, r0
   20590:	str	r0, [r4, #20]
   20594:	ldrb	r3, [r9]
   20598:	cmp	r3, #58	; 0x3a
   2059c:	bne	1fb0c <fputs@plt+0x16750>
   205a0:	b	2026c <fputs@plt+0x16eb0>
   205a4:	push	{r4, r5, r6, r7, r8, lr}
   205a8:	sub	sp, sp, #16
   205ac:	movw	r5, #1092	; 0x444
   205b0:	movt	r5, #3
   205b4:	ldr	r8, [sp, #40]	; 0x28
   205b8:	movw	r4, #13904	; 0x3650
   205bc:	ldr	r7, [sp, #44]	; 0x2c
   205c0:	movt	r4, #3
   205c4:	ldr	r6, [sp, #48]	; 0x30
   205c8:	ldr	ip, [r5, #4]
   205cc:	ldr	lr, [r5]
   205d0:	str	r4, [sp, #12]
   205d4:	str	r8, [sp]
   205d8:	str	r7, [sp, #4]
   205dc:	str	r6, [sp, #8]
   205e0:	str	ip, [r4, #4]
   205e4:	str	lr, [r4]
   205e8:	bl	1f938 <fputs@plt+0x1657c>
   205ec:	ldr	ip, [r4]
   205f0:	movw	r3, #14016	; 0x36c0
   205f4:	ldr	r1, [r4, #8]
   205f8:	movt	r3, #3
   205fc:	ldr	r2, [r4, #12]
   20600:	str	ip, [r5]
   20604:	str	r1, [r5, #8]
   20608:	str	r2, [r3]
   2060c:	add	sp, sp, #16
   20610:	pop	{r4, r5, r6, r7, r8, pc}
   20614:	push	{lr}		; (str lr, [sp, #-4]!)
   20618:	sub	sp, sp, #20
   2061c:	mov	ip, #0
   20620:	mov	lr, #1
   20624:	str	ip, [sp]
   20628:	mov	r3, ip
   2062c:	stmib	sp, {ip, lr}
   20630:	bl	205a4 <fputs@plt+0x171e8>
   20634:	add	sp, sp, #20
   20638:	pop	{pc}		; (ldr pc, [sp], #4)
   2063c:	push	{lr}		; (str lr, [sp, #-4]!)
   20640:	sub	sp, sp, #20
   20644:	mov	ip, #0
   20648:	ldr	lr, [sp, #24]
   2064c:	str	ip, [sp, #4]
   20650:	str	ip, [sp, #8]
   20654:	str	lr, [sp]
   20658:	bl	205a4 <fputs@plt+0x171e8>
   2065c:	add	sp, sp, #20
   20660:	pop	{pc}		; (ldr pc, [sp], #4)
   20664:	push	{r4, lr}
   20668:	sub	sp, sp, #16
   2066c:	mov	ip, #0
   20670:	ldr	r4, [sp, #24]
   20674:	ldr	lr, [sp, #28]
   20678:	str	ip, [sp, #8]
   2067c:	stm	sp, {r4, ip}
   20680:	str	lr, [sp, #12]
   20684:	bl	1f938 <fputs@plt+0x1657c>
   20688:	add	sp, sp, #16
   2068c:	pop	{r4, pc}
   20690:	push	{r4, lr}
   20694:	sub	sp, sp, #16
   20698:	mov	lr, #0
   2069c:	mov	r4, #1
   206a0:	ldr	ip, [sp, #24]
   206a4:	stmib	sp, {r4, lr}
   206a8:	str	ip, [sp]
   206ac:	bl	205a4 <fputs@plt+0x171e8>
   206b0:	add	sp, sp, #16
   206b4:	pop	{r4, pc}
   206b8:	push	{r4, r5, lr}
   206bc:	sub	sp, sp, #20
   206c0:	mov	ip, #0
   206c4:	mov	r5, #1
   206c8:	ldr	r4, [sp, #32]
   206cc:	ldr	lr, [sp, #36]	; 0x24
   206d0:	stm	sp, {r4, r5, ip, lr}
   206d4:	bl	1f938 <fputs@plt+0x1657c>
   206d8:	add	sp, sp, #20
   206dc:	pop	{r4, r5, pc}
   206e0:	b	9110 <hypot@plt>
   206e4:	subs	r3, r0, #0
   206e8:	ldr	r1, [pc, #120]	; 20768 <fputs@plt+0x173ac>
   206ec:	push	{r4}		; (str r4, [sp, #-4]!)
   206f0:	movw	r4, #26215	; 0x6667
   206f4:	movt	r4, #26214	; 0x6666
   206f8:	blt	2072c <fputs@plt+0x17370>
   206fc:	smull	r2, ip, r4, r3
   20700:	asr	r2, r3, #31
   20704:	mov	r0, r1
   20708:	rsb	r2, r2, ip, asr #2
   2070c:	add	ip, r2, r2, lsl #2
   20710:	sub	ip, r3, ip, lsl #1
   20714:	subs	r3, r2, #0
   20718:	add	r2, ip, #48	; 0x30
   2071c:	strb	r2, [r1], #-1
   20720:	bne	206fc <fputs@plt+0x17340>
   20724:	pop	{r4}		; (ldr r4, [sp], #4)
   20728:	bx	lr
   2072c:	smull	r2, r0, r4, r3
   20730:	asr	r2, r3, #31
   20734:	mov	ip, r1
   20738:	rsb	r2, r2, r0, asr #2
   2073c:	add	r0, r2, r2, lsl #2
   20740:	sub	r0, r3, r0, lsl #1
   20744:	subs	r3, r2, #0
   20748:	rsb	r2, r0, #48	; 0x30
   2074c:	strb	r2, [r1], #-1
   20750:	bne	2072c <fputs@plt+0x17370>
   20754:	mov	r3, #45	; 0x2d
   20758:	strb	r3, [ip, #-1]
   2075c:	mov	r0, r1
   20760:	pop	{r4}		; (ldr r4, [sp], #4)
   20764:	bx	lr
   20768:	andeq	r3, r3, fp, lsl #13
   2076c:	ldr	r2, [pc, #56]	; 207ac <fputs@plt+0x173f0>
   20770:	mov	r1, r0
   20774:	push	{r4}		; (str r4, [sp, #-4]!)
   20778:	movw	r4, #52429	; 0xcccd
   2077c:	movt	r4, #52428	; 0xcccc
   20780:	umull	r0, r3, r4, r1
   20784:	mov	r0, r2
   20788:	lsr	r3, r3, #3
   2078c:	add	ip, r3, r3, lsl #2
   20790:	sub	ip, r1, ip, lsl #1
   20794:	subs	r1, r3, #0
   20798:	add	r3, ip, #48	; 0x30
   2079c:	strb	r3, [r2], #-1
   207a0:	bne	20780 <fputs@plt+0x173c4>
   207a4:	pop	{r4}		; (ldr r4, [sp], #4)
   207a8:	bx	lr
   207ac:	andeq	r3, r3, r3, lsr #13
   207b0:	push	{r4, r5, r6, lr}
   207b4:	movw	r5, #1424	; 0x590
   207b8:	movt	r5, #3
   207bc:	ldrb	r2, [r0]
   207c0:	sub	sp, sp, #16
   207c4:	ldr	r3, [r5]
   207c8:	cmp	r2, #32
   207cc:	str	r3, [sp, #12]
   207d0:	bne	207e8 <fputs@plt+0x1742c>
   207d4:	add	r3, r0, #1
   207d8:	mov	r0, r3
   207dc:	ldrb	r2, [r3], #1
   207e0:	cmp	r2, #32
   207e4:	beq	207d8 <fputs@plt+0x1741c>
   207e8:	movw	ip, #11568	; 0x2d30
   207ec:	movt	ip, #3
   207f0:	ldrb	r2, [ip, r2]
   207f4:	cmp	r2, #0
   207f8:	beq	20910 <fputs@plt+0x17554>
   207fc:	ldrb	r2, [r0]
   20800:	mov	r4, #0
   20804:	b	2080c <fputs@plt+0x17450>
   20808:	mov	r2, r3
   2080c:	ldrb	r3, [r0, #1]
   20810:	add	r4, r4, r4, lsl #2
   20814:	sub	r2, r2, #48	; 0x30
   20818:	add	r0, r0, #1
   2081c:	add	r4, r2, r4, lsl #1
   20820:	ldrb	r2, [ip, r3]
   20824:	mov	r1, r0
   20828:	cmp	r2, #0
   2082c:	bne	20808 <fputs@plt+0x1744c>
   20830:	cmp	r3, #10
   20834:	bne	20908 <fputs@plt+0x1754c>
   20838:	cmp	r3, #0
   2083c:	cmpne	r3, #10
   20840:	movne	r3, #0
   20844:	moveq	r3, #1
   20848:	beq	20958 <fputs@plt+0x1759c>
   2084c:	ldrb	r2, [r1]
   20850:	ands	r0, r2, #223	; 0xdf
   20854:	beq	20984 <fputs@plt+0x175c8>
   20858:	cmp	r2, #10
   2085c:	beq	20978 <fputs@plt+0x175bc>
   20860:	cmp	r2, #92	; 0x5c
   20864:	addne	r2, r1, #1
   20868:	bne	20880 <fputs@plt+0x174c4>
   2086c:	b	20978 <fputs@plt+0x175bc>
   20870:	cmp	r3, #10
   20874:	beq	20894 <fputs@plt+0x174d8>
   20878:	cmp	r3, #92	; 0x5c
   2087c:	beq	20894 <fputs@plt+0x174d8>
   20880:	mov	r6, r2
   20884:	add	r2, r2, #1
   20888:	ldrb	r3, [r6]
   2088c:	tst	r3, #223	; 0xdf
   20890:	bne	20870 <fputs@plt+0x174b4>
   20894:	rsb	r2, r1, r6
   20898:	mov	r0, sp
   2089c:	bl	20ba0 <_ZdlPv@@Base+0x1b0>
   208a0:	ldrb	r3, [r6]
   208a4:	cmp	r3, #32
   208a8:	bne	208b8 <fputs@plt+0x174fc>
   208ac:	ldrb	r3, [r6, #1]!
   208b0:	cmp	r3, #32
   208b4:	beq	208ac <fputs@plt+0x174f0>
   208b8:	cmp	r3, #0
   208bc:	cmpne	r3, #10
   208c0:	bne	20930 <fputs@plt+0x17574>
   208c4:	ldr	r3, [sp, #4]
   208c8:	ldr	r2, [sp, #8]
   208cc:	cmp	r3, r2
   208d0:	bge	20968 <fputs@plt+0x175ac>
   208d4:	ldr	r2, [sp]
   208d8:	add	r0, r3, #1
   208dc:	mov	r1, #0
   208e0:	str	r0, [sp, #4]
   208e4:	strb	r1, [r2, r3]
   208e8:	ldr	r0, [sp]
   208ec:	bl	214e0 <_ZdlPv@@Base+0xaf0>
   208f0:	mov	r0, r4
   208f4:	bl	2151c <_ZdlPv@@Base+0xb2c>
   208f8:	mov	r4, #1
   208fc:	mov	r0, sp
   20900:	bl	20cf0 <_ZdlPv@@Base+0x300>
   20904:	b	20914 <fputs@plt+0x17558>
   20908:	tst	r3, #223	; 0xdf
   2090c:	beq	20938 <fputs@plt+0x1757c>
   20910:	mov	r4, r2
   20914:	ldr	r1, [sp, #12]
   20918:	mov	r0, r4
   2091c:	ldr	r3, [r5]
   20920:	cmp	r1, r3
   20924:	bne	20990 <fputs@plt+0x175d4>
   20928:	add	sp, sp, #16
   2092c:	pop	{r4, r5, r6, pc}
   20930:	mov	r4, #0
   20934:	b	208fc <fputs@plt+0x17540>
   20938:	cmp	r3, #32
   2093c:	addeq	r0, r0, #1
   20940:	bne	20838 <fputs@plt+0x1747c>
   20944:	mov	r1, r0
   20948:	ldrb	r3, [r0], #1
   2094c:	cmp	r3, #32
   20950:	beq	20944 <fputs@plt+0x17588>
   20954:	b	20838 <fputs@plt+0x1747c>
   20958:	mov	r0, r4
   2095c:	mov	r4, #1
   20960:	bl	2151c <_ZdlPv@@Base+0xb2c>
   20964:	b	20914 <fputs@plt+0x17558>
   20968:	mov	r0, sp
   2096c:	bl	20e3c <_ZdlPv@@Base+0x44c>
   20970:	ldr	r3, [sp, #4]
   20974:	b	208d4 <fputs@plt+0x17518>
   20978:	mov	r2, r3
   2097c:	mov	r6, r1
   20980:	b	20898 <fputs@plt+0x174dc>
   20984:	mov	r2, r0
   20988:	mov	r6, r1
   2098c:	b	20898 <fputs@plt+0x174dc>
   20990:	bl	92b4 <__stack_chk_fail@plt>
   20994:	mov	r0, sp
   20998:	bl	20cf0 <_ZdlPv@@Base+0x300>
   2099c:	bl	9188 <__cxa_end_cleanup@plt>

000209a0 <_Znwj@@Base>:
   209a0:	cmp	r0, #0
   209a4:	push	{r3, lr}
   209a8:	moveq	r0, #1
   209ac:	bl	92a8 <malloc@plt>
   209b0:	cmp	r0, #0
   209b4:	popne	{r3, pc}
   209b8:	movw	r3, #14000	; 0x36b0
   209bc:	movt	r3, #3
   209c0:	ldr	r0, [r3]
   209c4:	cmp	r0, #0
   209c8:	beq	209dc <_Znwj@@Base+0x3c>
   209cc:	bl	93c8 <fputs@plt+0xc>
   209d0:	movw	r0, #28240	; 0x6e50
   209d4:	movt	r0, #2
   209d8:	bl	93c8 <fputs@plt+0xc>
   209dc:	movw	r0, #28244	; 0x6e54
   209e0:	movt	r0, #2
   209e4:	bl	93c8 <fputs@plt+0xc>
   209e8:	mvn	r0, #0
   209ec:	bl	91b8 <_exit@plt>

000209f0 <_ZdlPv@@Base>:
   209f0:	cmp	r0, #0
   209f4:	bxeq	lr
   209f8:	b	91c4 <free@plt>
   209fc:	push	{r4, lr}
   20a00:	subs	r4, r0, #0
   20a04:	beq	20a34 <_ZdlPv@@Base+0x44>
   20a08:	sub	r2, r4, #1
   20a0c:	mov	r0, #0
   20a10:	b	20a24 <_ZdlPv@@Base+0x34>
   20a14:	add	r0, r3, r0, lsl #4
   20a18:	ands	r3, r0, #-268435456	; 0xf0000000
   20a1c:	eor	r1, r3, r0
   20a20:	eorne	r0, r1, r3, lsr #24
   20a24:	ldrb	r3, [r2, #1]!
   20a28:	cmp	r3, #0
   20a2c:	bne	20a14 <_ZdlPv@@Base+0x24>
   20a30:	pop	{r4, pc}
   20a34:	movw	r1, #28348	; 0x6ebc
   20a38:	mov	r0, #28
   20a3c:	movt	r1, #2
   20a40:	bl	1eec8 <fputs@plt+0x15b0c>
   20a44:	b	20a08 <_ZdlPv@@Base+0x18>
   20a48:	cmp	r0, #100	; 0x64
   20a4c:	push	{r3, r4, r5, lr}
   20a50:	mov	r5, r0
   20a54:	bls	20aa0 <_ZdlPv@@Base+0xb0>
   20a58:	movw	r4, #28260	; 0x6e64
   20a5c:	movt	r4, #2
   20a60:	ldr	r0, [r4, #4]!
   20a64:	cmp	r0, r5
   20a68:	bhi	20a9c <_ZdlPv@@Base+0xac>
   20a6c:	cmp	r0, #0
   20a70:	bne	20a60 <_ZdlPv@@Base+0x70>
   20a74:	movw	r1, #13880	; 0x3638
   20a78:	movt	r1, #3
   20a7c:	movw	r0, #28360	; 0x6ec8
   20a80:	movt	r0, #2
   20a84:	mov	r2, r1
   20a88:	mov	r3, r1
   20a8c:	bl	1f768 <fputs@plt+0x163ac>
   20a90:	ldr	r0, [r4, #4]!
   20a94:	cmp	r0, r5
   20a98:	bls	20a6c <_ZdlPv@@Base+0x7c>
   20a9c:	pop	{r3, r4, r5, pc}
   20aa0:	mov	r0, #101	; 0x65
   20aa4:	pop	{r3, r4, r5, pc}
   20aa8:	cmp	r1, r2
   20aac:	push	{r3, r4, r5, lr}
   20ab0:	mov	r4, r2
   20ab4:	mov	r5, r3
   20ab8:	bge	20ae0 <_ZdlPv@@Base+0xf0>
   20abc:	cmp	r0, #0
   20ac0:	beq	20ac8 <_ZdlPv@@Base+0xd8>
   20ac4:	bl	92f0 <_ZdaPv@plt>
   20ac8:	cmp	r4, #0
   20acc:	beq	20ae8 <_ZdlPv@@Base+0xf8>
   20ad0:	lsl	r0, r4, #1
   20ad4:	str	r0, [r5]
   20ad8:	pop	{r3, r4, r5, lr}
   20adc:	b	9278 <_Znaj@plt>
   20ae0:	str	r1, [r3]
   20ae4:	pop	{r3, r4, r5, pc}
   20ae8:	str	r4, [r5]
   20aec:	mov	r0, r4
   20af0:	pop	{r3, r4, r5, pc}
   20af4:	cmp	r1, r3
   20af8:	push	{r3, r4, r5, r6, r7, lr}
   20afc:	mov	r4, r3
   20b00:	mov	r6, r2
   20b04:	mov	r5, r0
   20b08:	bge	20b4c <_ZdlPv@@Base+0x15c>
   20b0c:	cmp	r3, #0
   20b10:	beq	20b58 <_ZdlPv@@Base+0x168>
   20b14:	lsl	r0, r3, #1
   20b18:	ldr	r3, [sp, #24]
   20b1c:	str	r0, [r3]
   20b20:	bl	9278 <_Znaj@plt>
   20b24:	cmp	r6, #0
   20b28:	cmpne	r6, r4
   20b2c:	mov	r7, r0
   20b30:	blt	20b7c <_ZdlPv@@Base+0x18c>
   20b34:	cmp	r5, #0
   20b38:	beq	20b74 <_ZdlPv@@Base+0x184>
   20b3c:	mov	r0, r5
   20b40:	bl	92f0 <_ZdaPv@plt>
   20b44:	mov	r0, r7
   20b48:	pop	{r3, r4, r5, r6, r7, pc}
   20b4c:	ldr	r3, [sp, #24]
   20b50:	str	r1, [r3]
   20b54:	pop	{r3, r4, r5, r6, r7, pc}
   20b58:	cmp	r0, #0
   20b5c:	beq	20b64 <_ZdlPv@@Base+0x174>
   20b60:	bl	92f0 <_ZdaPv@plt>
   20b64:	ldr	r3, [sp, #24]
   20b68:	mov	r0, #0
   20b6c:	str	r0, [r3]
   20b70:	pop	{r3, r4, r5, r6, r7, pc}
   20b74:	mov	r0, r7
   20b78:	pop	{r3, r4, r5, r6, r7, pc}
   20b7c:	mov	r2, r6
   20b80:	mov	r1, r5
   20b84:	bl	9218 <memcpy@plt>
   20b88:	b	20b34 <_ZdlPv@@Base+0x144>
   20b8c:	mov	r2, #0
   20b90:	str	r2, [r0]
   20b94:	str	r2, [r0, #4]
   20b98:	str	r2, [r0, #8]
   20b9c:	bx	lr
   20ba0:	cmp	r2, #0
   20ba4:	push	{r4, r5, r6, lr}
   20ba8:	mov	r4, r0
   20bac:	mov	r5, r2
   20bb0:	mov	r6, r1
   20bb4:	str	r2, [r4, #4]
   20bb8:	blt	20bd0 <_ZdlPv@@Base+0x1e0>
   20bbc:	bne	20be0 <_ZdlPv@@Base+0x1f0>
   20bc0:	str	r2, [r4, #8]
   20bc4:	mov	r0, r4
   20bc8:	str	r2, [r4]
   20bcc:	pop	{r4, r5, r6, pc}
   20bd0:	movw	r1, #28380	; 0x6edc
   20bd4:	mov	r0, #86	; 0x56
   20bd8:	movt	r1, #2
   20bdc:	bl	1eec8 <fputs@plt+0x15b0c>
   20be0:	lsl	r0, r5, #1
   20be4:	str	r0, [r4, #8]
   20be8:	bl	9278 <_Znaj@plt>
   20bec:	mov	r1, r6
   20bf0:	mov	r2, r5
   20bf4:	str	r0, [r4]
   20bf8:	bl	9218 <memcpy@plt>
   20bfc:	mov	r0, r4
   20c00:	pop	{r4, r5, r6, pc}
   20c04:	push	{r3, r4, r5, lr}
   20c08:	subs	r5, r1, #0
   20c0c:	mov	r4, r0
   20c10:	streq	r5, [r0, #4]
   20c14:	streq	r5, [r0]
   20c18:	streq	r5, [r0, #8]
   20c1c:	beq	20c48 <_ZdlPv@@Base+0x258>
   20c20:	mov	r0, r5
   20c24:	bl	9200 <strlen@plt>
   20c28:	cmp	r0, #0
   20c2c:	mov	r2, r0
   20c30:	str	r0, [r4, #4]
   20c34:	bne	20c50 <_ZdlPv@@Base+0x260>
   20c38:	str	r0, [r4, #8]
   20c3c:	str	r0, [r4]
   20c40:	mov	r1, r5
   20c44:	bl	9218 <memcpy@plt>
   20c48:	mov	r0, r4
   20c4c:	pop	{r3, r4, r5, pc}
   20c50:	lsl	r0, r0, #1
   20c54:	str	r0, [r4, #8]
   20c58:	bl	9278 <_Znaj@plt>
   20c5c:	ldr	r2, [r4, #4]
   20c60:	b	20c3c <_ZdlPv@@Base+0x24c>
   20c64:	push	{r3, r4, r5, lr}
   20c68:	mov	r4, r0
   20c6c:	mov	r3, #1
   20c70:	mov	r0, #2
   20c74:	str	r3, [r4, #4]
   20c78:	mov	r5, r1
   20c7c:	str	r0, [r4, #8]
   20c80:	bl	9278 <_Znaj@plt>
   20c84:	mov	r3, r0
   20c88:	mov	r0, r4
   20c8c:	str	r3, [r4]
   20c90:	strb	r5, [r3]
   20c94:	pop	{r3, r4, r5, pc}
   20c98:	push	{r3, r4, r5, lr}
   20c9c:	mov	r4, r0
   20ca0:	ldr	r0, [r1, #4]
   20ca4:	mov	r5, r1
   20ca8:	cmp	r0, #0
   20cac:	str	r0, [r4, #4]
   20cb0:	bne	20cc4 <_ZdlPv@@Base+0x2d4>
   20cb4:	str	r0, [r4, #8]
   20cb8:	str	r0, [r4]
   20cbc:	mov	r0, r4
   20cc0:	pop	{r3, r4, r5, pc}
   20cc4:	lsl	r0, r0, #1
   20cc8:	str	r0, [r4, #8]
   20ccc:	bl	9278 <_Znaj@plt>
   20cd0:	ldr	r2, [r4, #4]
   20cd4:	cmp	r2, #0
   20cd8:	str	r0, [r4]
   20cdc:	beq	20cbc <_ZdlPv@@Base+0x2cc>
   20ce0:	ldr	r1, [r5]
   20ce4:	bl	9218 <memcpy@plt>
   20ce8:	mov	r0, r4
   20cec:	pop	{r3, r4, r5, pc}
   20cf0:	push	{r4, lr}
   20cf4:	mov	r4, r0
   20cf8:	ldr	r0, [r0]
   20cfc:	cmp	r0, #0
   20d00:	beq	20d08 <_ZdlPv@@Base+0x318>
   20d04:	bl	92f0 <_ZdaPv@plt>
   20d08:	mov	r0, r4
   20d0c:	pop	{r4, pc}
   20d10:	push	{r3, r4, r5, lr}
   20d14:	mov	r5, r1
   20d18:	mov	r3, r0
   20d1c:	mov	r4, r0
   20d20:	ldr	r2, [r5, #4]
   20d24:	ldr	r0, [r0]
   20d28:	ldr	r1, [r3, #8]!
   20d2c:	bl	20aa8 <_ZdlPv@@Base+0xb8>
   20d30:	ldr	r2, [r5, #4]
   20d34:	cmp	r2, #0
   20d38:	stm	r4, {r0, r2}
   20d3c:	beq	20d48 <_ZdlPv@@Base+0x358>
   20d40:	ldr	r1, [r5]
   20d44:	bl	9218 <memcpy@plt>
   20d48:	mov	r0, r4
   20d4c:	pop	{r3, r4, r5, pc}
   20d50:	push	{r4, r5, r6, lr}
   20d54:	subs	r6, r1, #0
   20d58:	mov	r4, r0
   20d5c:	beq	20d9c <_ZdlPv@@Base+0x3ac>
   20d60:	mov	r0, r6
   20d64:	bl	9200 <strlen@plt>
   20d68:	mov	r3, r4
   20d6c:	ldr	r1, [r3, #8]!
   20d70:	mov	r5, r0
   20d74:	mov	r2, r0
   20d78:	ldr	r0, [r4]
   20d7c:	bl	20aa8 <_ZdlPv@@Base+0xb8>
   20d80:	str	r5, [r4, #4]
   20d84:	mov	r2, r5
   20d88:	mov	r1, r6
   20d8c:	str	r0, [r4]
   20d90:	bl	9218 <memcpy@plt>
   20d94:	mov	r0, r4
   20d98:	pop	{r4, r5, r6, pc}
   20d9c:	ldr	r0, [r0]
   20da0:	cmp	r0, #0
   20da4:	beq	20dac <_ZdlPv@@Base+0x3bc>
   20da8:	bl	92f0 <_ZdaPv@plt>
   20dac:	mov	r3, #0
   20db0:	mov	r0, r4
   20db4:	str	r3, [r4, #4]
   20db8:	str	r3, [r4]
   20dbc:	str	r3, [r4, #8]
   20dc0:	pop	{r4, r5, r6, pc}
   20dc4:	push	{r3, r4, r5, lr}
   20dc8:	mov	r3, r0
   20dcc:	mov	r4, r0
   20dd0:	mov	r5, r1
   20dd4:	mov	r2, #1
   20dd8:	ldr	r1, [r3, #8]!
   20ddc:	ldr	r0, [r0]
   20de0:	bl	20aa8 <_ZdlPv@@Base+0xb8>
   20de4:	mov	r2, #1
   20de8:	str	r2, [r4, #4]
   20dec:	mov	r3, r0
   20df0:	str	r0, [r4]
   20df4:	mov	r0, r4
   20df8:	strb	r5, [r3]
   20dfc:	pop	{r3, r4, r5, pc}
   20e00:	push	{r3, r4, r5, lr}
   20e04:	mov	r5, r0
   20e08:	ldr	r0, [r0]
   20e0c:	mov	r4, r1
   20e10:	cmp	r0, #0
   20e14:	beq	20e1c <_ZdlPv@@Base+0x42c>
   20e18:	bl	92f0 <_ZdaPv@plt>
   20e1c:	ldmib	r4, {r1, r2}
   20e20:	mov	r3, #0
   20e24:	ldr	r0, [r4]
   20e28:	stm	r5, {r0, r1, r2}
   20e2c:	str	r3, [r4]
   20e30:	str	r3, [r4, #4]
   20e34:	str	r3, [r4, #8]
   20e38:	pop	{r3, r4, r5, pc}
   20e3c:	mov	ip, r0
   20e40:	ldr	r2, [r0, #4]
   20e44:	ldr	r1, [ip, #8]!
   20e48:	push	{r4, lr}
   20e4c:	sub	sp, sp, #8
   20e50:	mov	r4, r0
   20e54:	add	r3, r2, #1
   20e58:	ldr	r0, [r0]
   20e5c:	str	ip, [sp]
   20e60:	bl	20af4 <_ZdlPv@@Base+0x104>
   20e64:	str	r0, [r4]
   20e68:	add	sp, sp, #8
   20e6c:	pop	{r4, pc}
   20e70:	push	{r4, r5, r6, r7, lr}
   20e74:	subs	r6, r1, #0
   20e78:	sub	sp, sp, #12
   20e7c:	mov	r4, r0
   20e80:	beq	20ebc <_ZdlPv@@Base+0x4cc>
   20e84:	mov	r0, r6
   20e88:	bl	9200 <strlen@plt>
   20e8c:	ldr	r2, [r4, #4]
   20e90:	ldr	r1, [r4, #8]
   20e94:	add	r5, r2, r0
   20e98:	mov	r7, r0
   20e9c:	cmp	r5, r1
   20ea0:	bgt	20ec8 <_ZdlPv@@Base+0x4d8>
   20ea4:	ldr	r0, [r4]
   20ea8:	add	r0, r0, r2
   20eac:	mov	r1, r6
   20eb0:	mov	r2, r7
   20eb4:	bl	9218 <memcpy@plt>
   20eb8:	str	r5, [r4, #4]
   20ebc:	mov	r0, r4
   20ec0:	add	sp, sp, #12
   20ec4:	pop	{r4, r5, r6, r7, pc}
   20ec8:	mov	lr, r4
   20ecc:	mov	r3, r5
   20ed0:	ldr	r0, [lr], #8
   20ed4:	str	lr, [sp]
   20ed8:	bl	20af4 <_ZdlPv@@Base+0x104>
   20edc:	ldr	r2, [r4, #4]
   20ee0:	str	r0, [r4]
   20ee4:	b	20ea8 <_ZdlPv@@Base+0x4b8>
   20ee8:	ldr	ip, [r1, #4]
   20eec:	push	{r4, r5, r6, lr}
   20ef0:	cmp	ip, #0
   20ef4:	sub	sp, sp, #8
   20ef8:	mov	r5, r1
   20efc:	mov	r4, r0
   20f00:	beq	20f30 <_ZdlPv@@Base+0x540>
   20f04:	ldr	lr, [r0, #4]
   20f08:	ldr	r1, [r0, #8]
   20f0c:	add	r6, ip, lr
   20f10:	cmp	r6, r1
   20f14:	bgt	20f3c <_ZdlPv@@Base+0x54c>
   20f18:	ldr	r0, [r0]
   20f1c:	mov	r2, ip
   20f20:	add	r0, r0, lr
   20f24:	ldr	r1, [r5]
   20f28:	bl	9218 <memcpy@plt>
   20f2c:	str	r6, [r4, #4]
   20f30:	mov	r0, r4
   20f34:	add	sp, sp, #8
   20f38:	pop	{r4, r5, r6, pc}
   20f3c:	mov	ip, r0
   20f40:	mov	r2, lr
   20f44:	ldr	r0, [ip], #8
   20f48:	mov	r3, r6
   20f4c:	str	ip, [sp]
   20f50:	bl	20af4 <_ZdlPv@@Base+0x104>
   20f54:	ldr	r2, [r5, #4]
   20f58:	ldr	lr, [r4, #4]
   20f5c:	str	r0, [r4]
   20f60:	b	20f20 <_ZdlPv@@Base+0x530>
   20f64:	push	{r4, r5, r6, r7, lr}
   20f68:	subs	r6, r2, #0
   20f6c:	sub	sp, sp, #12
   20f70:	mov	r4, r0
   20f74:	mov	r7, r1
   20f78:	ble	20fa8 <_ZdlPv@@Base+0x5b8>
   20f7c:	ldr	r2, [r0, #4]
   20f80:	ldr	r1, [r0, #8]
   20f84:	add	r5, r2, r6
   20f88:	cmp	r5, r1
   20f8c:	bgt	20fb0 <_ZdlPv@@Base+0x5c0>
   20f90:	ldr	r0, [r0]
   20f94:	add	r0, r0, r2
   20f98:	mov	r1, r7
   20f9c:	mov	r2, r6
   20fa0:	bl	9218 <memcpy@plt>
   20fa4:	str	r5, [r4, #4]
   20fa8:	add	sp, sp, #12
   20fac:	pop	{r4, r5, r6, r7, pc}
   20fb0:	mov	lr, r0
   20fb4:	mov	r3, r5
   20fb8:	ldr	r0, [lr], #8
   20fbc:	str	lr, [sp]
   20fc0:	bl	20af4 <_ZdlPv@@Base+0x104>
   20fc4:	ldr	r2, [r4, #4]
   20fc8:	str	r0, [r4]
   20fcc:	b	20f94 <_ZdlPv@@Base+0x5a4>
   20fd0:	push	{r4, r5, r6, r7, r8, lr}
   20fd4:	mov	r6, r2
   20fd8:	ldr	r5, [sp, #24]
   20fdc:	mov	r4, r0
   20fe0:	mov	r8, r1
   20fe4:	mov	r7, r3
   20fe8:	cmp	r2, #0
   20fec:	cmpge	r5, #0
   20ff0:	blt	21054 <_ZdlPv@@Base+0x664>
   20ff4:	add	ip, r6, r5
   20ff8:	str	ip, [r4, #4]
   20ffc:	cmp	ip, #0
   21000:	streq	ip, [r4, #8]
   21004:	streq	ip, [r4]
   21008:	beq	21038 <_ZdlPv@@Base+0x648>
   2100c:	lsl	r0, ip, #1
   21010:	str	r0, [r4, #8]
   21014:	bl	9278 <_Znaj@plt>
   21018:	cmp	r6, #0
   2101c:	str	r0, [r4]
   21020:	beq	21040 <_ZdlPv@@Base+0x650>
   21024:	mov	r1, r8
   21028:	mov	r2, r6
   2102c:	bl	9218 <memcpy@plt>
   21030:	cmp	r5, #0
   21034:	bne	21068 <_ZdlPv@@Base+0x678>
   21038:	mov	r0, r4
   2103c:	pop	{r4, r5, r6, r7, r8, pc}
   21040:	mov	r1, r7
   21044:	mov	r2, r5
   21048:	bl	9218 <memcpy@plt>
   2104c:	mov	r0, r4
   21050:	pop	{r4, r5, r6, r7, r8, pc}
   21054:	movw	r1, #28380	; 0x6edc
   21058:	mov	r0, #212	; 0xd4
   2105c:	movt	r1, #2
   21060:	bl	1eec8 <fputs@plt+0x15b0c>
   21064:	b	20ff4 <_ZdlPv@@Base+0x604>
   21068:	ldr	r0, [r4]
   2106c:	mov	r1, r7
   21070:	mov	r2, r5
   21074:	add	r0, r0, r6
   21078:	bl	9218 <memcpy@plt>
   2107c:	mov	r0, r4
   21080:	pop	{r4, r5, r6, r7, r8, pc}
   21084:	push	{r3, lr}
   21088:	ldr	r2, [r0, #4]
   2108c:	ldr	r3, [r1, #4]
   21090:	cmp	r2, r3
   21094:	bgt	210bc <_ZdlPv@@Base+0x6cc>
   21098:	cmp	r2, #0
   2109c:	beq	210e0 <_ZdlPv@@Base+0x6f0>
   210a0:	ldr	r0, [r0]
   210a4:	ldr	r1, [r1]
   210a8:	bl	90d4 <memcmp@plt>
   210ac:	cmp	r0, #0
   210b0:	movgt	r0, #0
   210b4:	movle	r0, #1
   210b8:	pop	{r3, pc}
   210bc:	cmp	r3, #0
   210c0:	beq	210d8 <_ZdlPv@@Base+0x6e8>
   210c4:	mov	r2, r3
   210c8:	ldr	r0, [r0]
   210cc:	ldr	r1, [r1]
   210d0:	bl	90d4 <memcmp@plt>
   210d4:	lsr	r3, r0, #31
   210d8:	mov	r0, r3
   210dc:	pop	{r3, pc}
   210e0:	mov	r0, #1
   210e4:	pop	{r3, pc}
   210e8:	push	{r3, lr}
   210ec:	ldr	r2, [r0, #4]
   210f0:	ldr	r3, [r1, #4]
   210f4:	cmp	r2, r3
   210f8:	bge	21120 <_ZdlPv@@Base+0x730>
   210fc:	cmp	r2, #0
   21100:	beq	21144 <_ZdlPv@@Base+0x754>
   21104:	ldr	r0, [r0]
   21108:	ldr	r1, [r1]
   2110c:	bl	90d4 <memcmp@plt>
   21110:	cmp	r0, #0
   21114:	movgt	r0, #0
   21118:	movle	r0, #1
   2111c:	pop	{r3, pc}
   21120:	cmp	r3, #0
   21124:	beq	2113c <_ZdlPv@@Base+0x74c>
   21128:	mov	r2, r3
   2112c:	ldr	r0, [r0]
   21130:	ldr	r1, [r1]
   21134:	bl	90d4 <memcmp@plt>
   21138:	lsr	r3, r0, #31
   2113c:	mov	r0, r3
   21140:	pop	{r3, pc}
   21144:	mov	r0, #1
   21148:	pop	{r3, pc}
   2114c:	push	{r3, lr}
   21150:	ldr	r2, [r1, #4]
   21154:	ldr	r3, [r0, #4]
   21158:	cmp	r3, r2
   2115c:	blt	21180 <_ZdlPv@@Base+0x790>
   21160:	cmp	r2, #0
   21164:	beq	211ac <_ZdlPv@@Base+0x7bc>
   21168:	ldr	r0, [r0]
   2116c:	ldr	r1, [r1]
   21170:	bl	90d4 <memcmp@plt>
   21174:	mvn	r0, r0
   21178:	lsr	r0, r0, #31
   2117c:	pop	{r3, pc}
   21180:	cmp	r3, #0
   21184:	beq	211a4 <_ZdlPv@@Base+0x7b4>
   21188:	mov	r2, r3
   2118c:	ldr	r0, [r0]
   21190:	ldr	r1, [r1]
   21194:	bl	90d4 <memcmp@plt>
   21198:	cmp	r0, #0
   2119c:	movle	r3, #0
   211a0:	movgt	r3, #1
   211a4:	mov	r0, r3
   211a8:	pop	{r3, pc}
   211ac:	mov	r0, #1
   211b0:	pop	{r3, pc}
   211b4:	push	{r3, lr}
   211b8:	ldr	r2, [r1, #4]
   211bc:	ldr	r3, [r0, #4]
   211c0:	cmp	r3, r2
   211c4:	ble	211e8 <_ZdlPv@@Base+0x7f8>
   211c8:	cmp	r2, #0
   211cc:	beq	21214 <_ZdlPv@@Base+0x824>
   211d0:	ldr	r0, [r0]
   211d4:	ldr	r1, [r1]
   211d8:	bl	90d4 <memcmp@plt>
   211dc:	mvn	r0, r0
   211e0:	lsr	r0, r0, #31
   211e4:	pop	{r3, pc}
   211e8:	cmp	r3, #0
   211ec:	beq	2120c <_ZdlPv@@Base+0x81c>
   211f0:	mov	r2, r3
   211f4:	ldr	r0, [r0]
   211f8:	ldr	r1, [r1]
   211fc:	bl	90d4 <memcmp@plt>
   21200:	cmp	r0, #0
   21204:	movle	r3, #0
   21208:	movgt	r3, #1
   2120c:	mov	r0, r3
   21210:	pop	{r3, pc}
   21214:	mov	r0, #1
   21218:	pop	{r3, pc}
   2121c:	push	{r4, r5, lr}
   21220:	subs	r5, r1, #0
   21224:	sub	sp, sp, #12
   21228:	mov	r4, r0
   2122c:	blt	21260 <_ZdlPv@@Base+0x870>
   21230:	ldr	r1, [r4, #8]
   21234:	cmp	r5, r1
   21238:	ble	21254 <_ZdlPv@@Base+0x864>
   2123c:	ldm	r4, {r0, r2}
   21240:	add	ip, r4, #8
   21244:	mov	r3, r5
   21248:	str	ip, [sp]
   2124c:	bl	20af4 <_ZdlPv@@Base+0x104>
   21250:	str	r0, [r4]
   21254:	str	r5, [r4, #4]
   21258:	add	sp, sp, #12
   2125c:	pop	{r4, r5, pc}
   21260:	movw	r1, #28380	; 0x6edc
   21264:	mov	r0, #260	; 0x104
   21268:	movt	r1, #2
   2126c:	bl	1eec8 <fputs@plt+0x15b0c>
   21270:	b	21230 <_ZdlPv@@Base+0x840>
   21274:	mov	r3, #0
   21278:	str	r3, [r0, #4]
   2127c:	bx	lr
   21280:	push	{r4, lr}
   21284:	ldr	r4, [r0]
   21288:	cmp	r4, #0
   2128c:	beq	212ac <_ZdlPv@@Base+0x8bc>
   21290:	ldr	r2, [r0, #4]
   21294:	mov	r0, r4
   21298:	bl	9374 <memchr@plt>
   2129c:	cmp	r0, #0
   212a0:	beq	212ac <_ZdlPv@@Base+0x8bc>
   212a4:	rsb	r0, r4, r0
   212a8:	pop	{r4, pc}
   212ac:	mvn	r0, #0
   212b0:	pop	{r4, pc}
   212b4:	push	{r3, r4, r5, lr}
   212b8:	ldm	r0, {r5, lr}
   212bc:	cmp	lr, #0
   212c0:	ble	2131c <_ZdlPv@@Base+0x92c>
   212c4:	add	r4, r5, lr
   212c8:	mov	r2, r5
   212cc:	mov	ip, #0
   212d0:	ldrb	r1, [r2], #1
   212d4:	cmp	r1, #0
   212d8:	addeq	ip, ip, #1
   212dc:	cmp	r2, r4
   212e0:	bne	212d0 <_ZdlPv@@Base+0x8e0>
   212e4:	add	r0, lr, #1
   212e8:	rsb	r0, ip, r0
   212ec:	bl	9278 <_Znaj@plt>
   212f0:	mov	r3, r5
   212f4:	mov	r1, r0
   212f8:	ldrb	r2, [r3], #1
   212fc:	cmp	r2, #0
   21300:	strbne	r2, [r1]
   21304:	addne	r1, r1, #1
   21308:	cmp	r3, r4
   2130c:	bne	212f8 <_ZdlPv@@Base+0x908>
   21310:	mov	r3, #0
   21314:	strb	r3, [r1]
   21318:	pop	{r3, r4, r5, pc}
   2131c:	add	r0, lr, #1
   21320:	bl	9278 <_Znaj@plt>
   21324:	mov	r1, r0
   21328:	b	21310 <_ZdlPv@@Base+0x920>
   2132c:	push	{r4, r5, r6, lr}
   21330:	mov	r5, r0
   21334:	ldr	r0, [r0, #4]
   21338:	ldr	ip, [r5]
   2133c:	subs	r0, r0, #1
   21340:	bmi	21418 <_ZdlPv@@Base+0xa28>
   21344:	ldrb	r3, [ip, r0]
   21348:	cmp	r3, #32
   2134c:	mov	r3, r0
   21350:	beq	21364 <_ZdlPv@@Base+0x974>
   21354:	b	213dc <_ZdlPv@@Base+0x9ec>
   21358:	ldrb	r2, [ip, r3]
   2135c:	cmp	r2, #32
   21360:	bne	213dc <_ZdlPv@@Base+0x9ec>
   21364:	subs	r3, r3, #1
   21368:	bcs	21358 <_ZdlPv@@Base+0x968>
   2136c:	cmp	r3, r0
   21370:	mov	r4, ip
   21374:	popeq	{r4, r5, r6, pc}
   21378:	cmp	r3, #0
   2137c:	blt	213b8 <_ZdlPv@@Base+0x9c8>
   21380:	add	r3, r3, #1
   21384:	ldr	r0, [r5, #8]
   21388:	str	r3, [r5, #4]
   2138c:	bl	9278 <_Znaj@plt>
   21390:	mov	r1, r4
   21394:	ldr	r2, [r5, #4]
   21398:	mov	r6, r0
   2139c:	bl	9218 <memcpy@plt>
   213a0:	ldr	r0, [r5]
   213a4:	cmp	r0, #0
   213a8:	beq	213b0 <_ZdlPv@@Base+0x9c0>
   213ac:	bl	92f0 <_ZdaPv@plt>
   213b0:	str	r6, [r5]
   213b4:	pop	{r4, r5, r6, pc}
   213b8:	cmp	ip, #0
   213bc:	mov	r4, #0
   213c0:	str	r4, [r5, #4]
   213c4:	popeq	{r4, r5, r6, pc}
   213c8:	mov	r0, ip
   213cc:	bl	92f0 <_ZdaPv@plt>
   213d0:	str	r4, [r5]
   213d4:	str	r4, [r5, #8]
   213d8:	pop	{r4, r5, r6, pc}
   213dc:	cmp	r3, #0
   213e0:	beq	21420 <_ZdlPv@@Base+0xa30>
   213e4:	ldrb	r2, [ip]
   213e8:	cmp	r2, #32
   213ec:	bne	21430 <_ZdlPv@@Base+0xa40>
   213f0:	add	r2, ip, #1
   213f4:	ldrb	r1, [r2]
   213f8:	mov	r4, r2
   213fc:	sub	r3, r3, #1
   21400:	add	r2, r2, #1
   21404:	cmp	r1, #32
   21408:	beq	213f4 <_ZdlPv@@Base+0xa04>
   2140c:	cmp	r3, r0
   21410:	bne	21378 <_ZdlPv@@Base+0x988>
   21414:	pop	{r4, r5, r6, pc}
   21418:	mov	r3, r0
   2141c:	b	2136c <_ZdlPv@@Base+0x97c>
   21420:	cmp	r0, #0
   21424:	popeq	{r4, r5, r6, pc}
   21428:	mov	r4, ip
   2142c:	b	21380 <_ZdlPv@@Base+0x990>
   21430:	cmp	r0, r3
   21434:	bne	21428 <_ZdlPv@@Base+0xa38>
   21438:	pop	{r4, r5, r6, pc}
   2143c:	push	{r4, r5, r6, lr}
   21440:	mov	r5, r1
   21444:	ldm	r0, {r4, r6}
   21448:	cmp	r6, #0
   2144c:	pople	{r4, r5, r6, pc}
   21450:	add	r6, r4, r6
   21454:	ldrb	r0, [r4], #1
   21458:	mov	r1, r5
   2145c:	bl	9368 <_IO_putc@plt>
   21460:	cmp	r4, r6
   21464:	bne	21454 <_ZdlPv@@Base+0xa64>
   21468:	pop	{r4, r5, r6, pc}
   2146c:	push	{r4, r5, lr}
   21470:	movw	r4, #14004	; 0x36b4
   21474:	sub	sp, sp, #12
   21478:	movt	r4, #3
   2147c:	mov	r5, r0
   21480:	mov	r2, #12
   21484:	str	r1, [sp]
   21488:	mov	r0, r4
   2148c:	mov	r1, #1
   21490:	movw	r3, #28392	; 0x6ee8
   21494:	movt	r3, #2
   21498:	bl	9338 <__sprintf_chk@plt>
   2149c:	mov	r0, r5
   214a0:	mov	r1, r4
   214a4:	bl	20c04 <_ZdlPv@@Base+0x214>
   214a8:	mov	r0, r5
   214ac:	add	sp, sp, #12
   214b0:	pop	{r4, r5, pc}
   214b4:	push	{r4, lr}
   214b8:	subs	r4, r0, #0
   214bc:	beq	214d8 <_ZdlPv@@Base+0xae8>
   214c0:	bl	9200 <strlen@plt>
   214c4:	add	r0, r0, #1
   214c8:	bl	9278 <_Znaj@plt>
   214cc:	mov	r1, r4
   214d0:	bl	9248 <strcpy@plt>
   214d4:	pop	{r4, pc}
   214d8:	mov	r0, r4
   214dc:	pop	{r4, pc}
   214e0:	push	{r3, r4, r5, lr}
   214e4:	movw	r4, #13900	; 0x364c
   214e8:	movt	r4, #3
   214ec:	mov	r5, r0
   214f0:	ldr	r0, [r4]
   214f4:	cmp	r0, #0
   214f8:	beq	2150c <_ZdlPv@@Base+0xb1c>
   214fc:	mov	r1, r5
   21500:	bl	9380 <strcmp@plt>
   21504:	cmp	r0, #0
   21508:	popeq	{r3, r4, r5, pc}
   2150c:	mov	r0, r5
   21510:	bl	214b4 <_ZdlPv@@Base+0xac4>
   21514:	str	r0, [r4]
   21518:	pop	{r3, r4, r5, pc}
   2151c:	movw	r3, #13996	; 0x36ac
   21520:	movt	r3, #3
   21524:	str	r0, [r3]
   21528:	bx	lr
   2152c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   21530:	mov	r7, r0
   21534:	ldr	r6, [pc, #76]	; 21588 <_ZdlPv@@Base+0xb98>
   21538:	mov	r8, r1
   2153c:	ldr	r5, [pc, #72]	; 2158c <_ZdlPv@@Base+0xb9c>
   21540:	mov	r9, r2
   21544:	add	r6, pc, r6
   21548:	bl	9090 <strerror@plt-0x20>
   2154c:	add	r5, pc, r5
   21550:	rsb	r6, r5, r6
   21554:	asrs	r6, r6, #2
   21558:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   2155c:	sub	r5, r5, #4
   21560:	mov	r4, #0
   21564:	add	r4, r4, #1
   21568:	ldr	r3, [r5, #4]!
   2156c:	mov	r0, r7
   21570:	mov	r1, r8
   21574:	mov	r2, r9
   21578:	blx	r3
   2157c:	cmp	r4, r6
   21580:	bne	21564 <_ZdlPv@@Base+0xb74>
   21584:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   21588:	andeq	lr, r0, r4, lsr #19
   2158c:	andeq	lr, r0, r0, ror r9
   21590:	bx	lr

Disassembly of section .fini:

00021594 <.fini>:
   21594:	push	{r3, lr}
   21598:	pop	{r3, pc}
