
centos-preinstalled/xsetroot:     file format elf32-littlearm


Disassembly of section .init:

00010c94 <_init@@Base>:
   10c94:	push	{r3, lr}
   10c98:	bl	11bd8 <abort@plt+0xd44>
   10c9c:	pop	{r3, pc}

Disassembly of section .plt:

00010ca0 <raise@plt-0x14>:
   10ca0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ca4:	ldr	lr, [pc, #4]	; 10cb0 <_init@@Base+0x1c>
   10ca8:	add	lr, pc, lr
   10cac:	ldr	pc, [lr, #8]!
   10cb0:	andeq	r2, r1, r0, asr r3

00010cb4 <raise@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #848]!	; 0x350

00010cc0 <XClearWindow@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #840]!	; 0x348

00010ccc <strcmp@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #832]!	; 0x340

00010cd8 <strtol@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #824]!	; 0x338

00010ce4 <XAllocColor@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #816]!	; 0x330

00010cf0 <XSetCloseDownMode@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #808]!	; 0x328

00010cfc <XCopyPlane@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #800]!	; 0x320

00010d08 <XStoreName@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #792]!	; 0x318

00010d14 <XKillClient@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #784]!	; 0x310

00010d20 <__stack_chk_fail@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #776]!	; 0x308

00010d2c <XFreePixmap@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #768]!	; 0x300

00010d38 <XCreateBitmapFromData@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #73728	; 0x12000
   10d40:	ldr	pc, [ip, #760]!	; 0x2f8

00010d44 <XCreatePixmapCursor@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #73728	; 0x12000
   10d4c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d50 <puts@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #73728	; 0x12000
   10d58:	ldr	pc, [ip, #744]!	; 0x2e8

00010d5c <__libc_start_main@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #73728	; 0x12000
   10d64:	ldr	pc, [ip, #736]!	; 0x2e0

00010d68 <XOpenDisplay@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #728]!	; 0x2d8

00010d74 <__gmon_start__@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #720]!	; 0x2d0

00010d80 <exit@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #73728	; 0x12000
   10d88:	ldr	pc, [ip, #712]!	; 0x2c8

00010d8c <XcursorImagesLoadCursor@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #73728	; 0x12000
   10d94:	ldr	pc, [ip, #704]!	; 0x2c0

00010d98 <XmuCursorNameToIndex@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #73728	; 0x12000
   10da0:	ldr	pc, [ip, #696]!	; 0x2b8

00010da4 <XCreateGlyphCursor@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #73728	; 0x12000
   10dac:	ldr	pc, [ip, #688]!	; 0x2b0

00010db0 <XInternAtom@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #73728	; 0x12000
   10db8:	ldr	pc, [ip, #680]!	; 0x2a8

00010dbc <XChangeProperty@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #73728	; 0x12000
   10dc4:	ldr	pc, [ip, #672]!	; 0x2a0

00010dc8 <XDisplayName@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #73728	; 0x12000
   10dd0:	ldr	pc, [ip, #664]!	; 0x298

00010dd4 <XLoadFont@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #73728	; 0x12000
   10ddc:	ldr	pc, [ip, #656]!	; 0x290

00010de0 <XUndefineCursor@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #73728	; 0x12000
   10de8:	ldr	pc, [ip, #648]!	; 0x288

00010dec <__fprintf_chk@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #73728	; 0x12000
   10df4:	ldr	pc, [ip, #640]!	; 0x280

00010df8 <XDefineCursor@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #73728	; 0x12000
   10e00:	ldr	pc, [ip, #632]!	; 0x278

00010e04 <XcursorFilenameLoadImages@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #73728	; 0x12000
   10e0c:	ldr	pc, [ip, #624]!	; 0x270

00010e10 <XCreateGC@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #73728	; 0x12000
   10e18:	ldr	pc, [ip, #616]!	; 0x268

00010e1c <XQueryColor@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #73728	; 0x12000
   10e24:	ldr	pc, [ip, #608]!	; 0x260

00010e28 <XSetWindowBackgroundPixmap@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #73728	; 0x12000
   10e30:	ldr	pc, [ip, #600]!	; 0x258

00010e34 <XFreeCursor@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #73728	; 0x12000
   10e3c:	ldr	pc, [ip, #592]!	; 0x250

00010e40 <XSetWindowBackground@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #73728	; 0x12000
   10e48:	ldr	pc, [ip, #584]!	; 0x248

00010e4c <XFreeGC@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #73728	; 0x12000
   10e54:	ldr	pc, [ip, #576]!	; 0x240

00010e58 <XParseColor@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #73728	; 0x12000
   10e60:	ldr	pc, [ip, #568]!	; 0x238

00010e64 <XGetWindowProperty@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #73728	; 0x12000
   10e6c:	ldr	pc, [ip, #560]!	; 0x230

00010e70 <XCloseDisplay@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #73728	; 0x12000
   10e78:	ldr	pc, [ip, #552]!	; 0x228

00010e7c <XCreatePixmap@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #73728	; 0x12000
   10e84:	ldr	pc, [ip, #544]!	; 0x220

00010e88 <XReadBitmapFile@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #73728	; 0x12000
   10e90:	ldr	pc, [ip, #536]!	; 0x218

00010e94 <abort@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #73728	; 0x12000
   10e9c:	ldr	pc, [ip, #528]!	; 0x210

Disassembly of section .text:

00010ea0 <.text>:
   10ea0:	movw	r3, #12480	; 0x30c0
   10ea4:	movt	r3, #2
   10ea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10eac:	cmp	r0, #1
   10eb0:	ldr	ip, [r1]
   10eb4:	sub	sp, sp, #212	; 0xd4
   10eb8:	ldr	r3, [r3]
   10ebc:	movw	r9, #12496	; 0x30d0
   10ec0:	movt	r9, #2
   10ec4:	mov	r7, r1
   10ec8:	mov	r6, r0
   10ecc:	str	ip, [sp, #40]	; 0x28
   10ed0:	str	r3, [sp, #204]	; 0xcc
   10ed4:	str	ip, [r9]
   10ed8:	ble	11164 <abort@plt+0x2d0>
   10edc:	mov	sl, #1
   10ee0:	mov	r5, #0
   10ee4:	mov	fp, sl
   10ee8:	mov	ip, #32
   10eec:	str	r5, [sp, #84]	; 0x54
   10ef0:	str	r5, [sp, #80]	; 0x50
   10ef4:	str	r5, [sp, #88]	; 0x58
   10ef8:	str	r5, [sp, #72]	; 0x48
   10efc:	str	r5, [sp, #76]	; 0x4c
   10f00:	str	r5, [sp, #68]	; 0x44
   10f04:	str	r5, [sp, #64]	; 0x40
   10f08:	str	r5, [sp, #60]	; 0x3c
   10f0c:	str	r5, [sp, #56]	; 0x38
   10f10:	str	r5, [sp, #36]	; 0x24
   10f14:	str	r5, [sp, #44]	; 0x2c
   10f18:	str	r5, [sp, #48]	; 0x30
   10f1c:	str	r5, [sp, #52]	; 0x34
   10f20:	str	ip, [sp, #92]	; 0x5c
   10f24:	ldr	r4, [r7, fp, lsl #2]
   10f28:	movw	r0, #10024	; 0x2728
   10f2c:	movt	r0, #1
   10f30:	lsl	r8, fp, #2
   10f34:	mov	r1, r4
   10f38:	bl	10ccc <strcmp@plt>
   10f3c:	cmp	r0, #0
   10f40:	beq	10ff4 <abort@plt+0x160>
   10f44:	ldrb	sl, [r4]
   10f48:	rsbs	sl, sl, #45	; 0x2d
   10f4c:	bne	10f5c <abort@plt+0xc8>
   10f50:	ldrb	r2, [r4, #1]
   10f54:	cmp	r2, #100	; 0x64
   10f58:	beq	10fe8 <abort@plt+0x154>
   10f5c:	movw	r0, #10036	; 0x2734
   10f60:	mov	r1, r4
   10f64:	movt	r0, #1
   10f68:	bl	10ccc <strcmp@plt>
   10f6c:	cmp	r0, #0
   10f70:	beq	10fe4 <abort@plt+0x150>
   10f74:	movw	r0, #10044	; 0x273c
   10f78:	mov	r1, r4
   10f7c:	movt	r0, #1
   10f80:	bl	10ccc <strcmp@plt>
   10f84:	cmp	r0, #0
   10f88:	beq	115f8 <abort@plt+0x764>
   10f8c:	movw	r0, #10072	; 0x2758
   10f90:	mov	r1, r4
   10f94:	movt	r0, #1
   10f98:	bl	10ccc <strcmp@plt>
   10f9c:	cmp	r0, #0
   10fa0:	bne	11010 <abort@plt+0x17c>
   10fa4:	mov	ip, #1
   10fa8:	str	ip, [sp, #44]	; 0x2c
   10fac:	add	fp, fp, #1
   10fb0:	cmp	r6, fp
   10fb4:	bgt	10f24 <abort@plt+0x90>
   10fb8:	ldr	ip, [sp, #52]	; 0x34
   10fbc:	cmp	ip, #1
   10fc0:	ble	111a4 <abort@plt+0x310>
   10fc4:	movw	r1, #12488	; 0x30c8
   10fc8:	movt	r1, #2
   10fcc:	movw	r2, #10196	; 0x27d4
   10fd0:	ldr	r3, [sp, #40]	; 0x28
   10fd4:	ldr	r0, [r1]
   10fd8:	movt	r2, #1
   10fdc:	mov	r1, #1
   10fe0:	bl	10dec <__fprintf_chk@plt>
   10fe4:	bl	11cd0 <abort@plt+0xe3c>
   10fe8:	ldrb	r2, [r4, #2]
   10fec:	cmp	r2, #0
   10ff0:	bne	10f5c <abort@plt+0xc8>
   10ff4:	add	fp, fp, #1
   10ff8:	cmp	r6, fp
   10ffc:	ble	10fe4 <abort@plt+0x150>
   11000:	add	r8, r7, r8
   11004:	ldr	r8, [r8, #4]
   11008:	str	r8, [sp, #36]	; 0x24
   1100c:	b	10fac <abort@plt+0x118>
   11010:	movw	r0, #10080	; 0x2760
   11014:	mov	r1, r4
   11018:	movt	r0, #1
   1101c:	bl	10ccc <strcmp@plt>
   11020:	cmp	r0, #0
   11024:	beq	10fa4 <abort@plt+0x110>
   11028:	movw	r0, #10092	; 0x276c
   1102c:	mov	r1, r4
   11030:	movt	r0, #1
   11034:	bl	10ccc <strcmp@plt>
   11038:	cmp	r0, #0
   1103c:	beq	11094 <abort@plt+0x200>
   11040:	movw	r0, #10100	; 0x2774
   11044:	mov	r1, r4
   11048:	movt	r0, #1
   1104c:	bl	10ccc <strcmp@plt>
   11050:	cmp	r0, #0
   11054:	bne	110bc <abort@plt+0x228>
   11058:	add	r2, fp, #1
   1105c:	cmp	r6, r2
   11060:	ble	10fe4 <abort@plt+0x150>
   11064:	add	r8, r7, r8
   11068:	add	fp, fp, #2
   1106c:	cmp	r6, fp
   11070:	ldr	ip, [r8, #4]
   11074:	str	ip, [sp, #60]	; 0x3c
   11078:	ble	10fe4 <abort@plt+0x150>
   1107c:	ldr	r8, [r8, #8]
   11080:	ldr	r3, [sp, #48]	; 0x30
   11084:	str	r8, [sp, #64]	; 0x40
   11088:	add	r3, r3, #1
   1108c:	str	r3, [sp, #48]	; 0x30
   11090:	b	10fac <abort@plt+0x118>
   11094:	add	fp, fp, #1
   11098:	cmp	r6, fp
   1109c:	ble	10fe4 <abort@plt+0x150>
   110a0:	add	r8, r7, r8
   110a4:	ldr	r3, [sp, #48]	; 0x30
   110a8:	ldr	r8, [r8, #4]
   110ac:	add	r3, r3, #1
   110b0:	str	r3, [sp, #48]	; 0x30
   110b4:	str	r8, [sp, #56]	; 0x38
   110b8:	b	10fac <abort@plt+0x118>
   110bc:	movw	r0, #10108	; 0x277c
   110c0:	mov	r1, r4
   110c4:	movt	r0, #1
   110c8:	bl	10ccc <strcmp@plt>
   110cc:	cmp	r0, #0
   110d0:	beq	1113c <abort@plt+0x2a8>
   110d4:	movw	r0, #10124	; 0x278c
   110d8:	mov	r1, r4
   110dc:	movt	r0, #1
   110e0:	bl	10ccc <strcmp@plt>
   110e4:	cmp	r0, #0
   110e8:	bne	11618 <abort@plt+0x784>
   110ec:	add	r2, fp, #1
   110f0:	cmp	r6, r2
   110f4:	ble	10fe4 <abort@plt+0x150>
   110f8:	add	r8, r7, r8
   110fc:	add	fp, fp, #2
   11100:	cmp	r6, fp
   11104:	ldr	ip, [r8, #4]
   11108:	str	ip, [sp, #72]	; 0x48
   1110c:	ble	10fe4 <abort@plt+0x150>
   11110:	ldr	r3, [sp, #48]	; 0x30
   11114:	mov	r1, #0
   11118:	ldr	r0, [r8, #8]
   1111c:	mov	r2, #10
   11120:	add	r3, r3, #1
   11124:	str	r3, [sp, #48]	; 0x30
   11128:	bl	10cd8 <strtol@plt>
   1112c:	cmp	r0, #0
   11130:	movle	r0, #32
   11134:	str	r0, [sp, #92]	; 0x5c
   11138:	b	10fac <abort@plt+0x118>
   1113c:	add	fp, fp, #1
   11140:	cmp	r6, fp
   11144:	ble	10fe4 <abort@plt+0x150>
   11148:	add	r8, r7, r8
   1114c:	ldr	ip, [sp, #48]	; 0x30
   11150:	ldr	r8, [r8, #4]
   11154:	add	ip, ip, #1
   11158:	str	ip, [sp, #48]	; 0x30
   1115c:	str	r8, [sp, #68]	; 0x44
   11160:	b	10fac <abort@plt+0x118>
   11164:	mov	r5, #0
   11168:	mov	ip, #32
   1116c:	str	r5, [sp, #84]	; 0x54
   11170:	str	ip, [sp, #92]	; 0x5c
   11174:	str	r5, [sp, #80]	; 0x50
   11178:	str	r5, [sp, #88]	; 0x58
   1117c:	str	r5, [sp, #72]	; 0x48
   11180:	str	r5, [sp, #76]	; 0x4c
   11184:	str	r5, [sp, #68]	; 0x44
   11188:	str	r5, [sp, #64]	; 0x40
   1118c:	str	r5, [sp, #60]	; 0x3c
   11190:	str	r5, [sp, #56]	; 0x38
   11194:	str	r5, [sp, #36]	; 0x24
   11198:	str	r5, [sp, #44]	; 0x2c
   1119c:	str	r5, [sp, #48]	; 0x30
   111a0:	str	r5, [sp, #52]	; 0x34
   111a4:	ldr	r0, [sp, #36]	; 0x24
   111a8:	bl	10d68 <XOpenDisplay@plt>
   111ac:	movw	r3, #12496	; 0x30d0
   111b0:	movt	r3, #2
   111b4:	cmp	r0, #0
   111b8:	str	r0, [r9, #4]
   111bc:	beq	11984 <abort@plt+0xaf0>
   111c0:	ldr	ip, [sp, #52]	; 0x34
   111c4:	mov	r8, #80	; 0x50
   111c8:	ldr	r1, [sp, #48]	; 0x30
   111cc:	ldr	r2, [r0, #132]	; 0x84
   111d0:	orrs	ip, ip, r1
   111d4:	ldr	r1, [r0, #140]	; 0x8c
   111d8:	ldr	ip, [sp, #44]	; 0x2c
   111dc:	str	r2, [r3, #12]
   111e0:	mla	r2, r8, r2, r1
   111e4:	moveq	ip, #1
   111e8:	str	ip, [sp, #44]	; 0x2c
   111ec:	ldr	ip, [sp, #60]	; 0x3c
   111f0:	cmp	ip, #0
   111f4:	ldr	r1, [r2, #8]
   111f8:	str	r1, [r3, #8]
   111fc:	beq	11354 <abort@plt+0x4c0>
   11200:	add	r6, sp, #96	; 0x60
   11204:	ldr	r2, [r2, #56]	; 0x38
   11208:	ldr	r1, [r9, #20]
   1120c:	add	r4, sp, #136	; 0x88
   11210:	mov	r0, r6
   11214:	add	r7, sp, #148	; 0x94
   11218:	bl	11e04 <abort@plt+0xf70>
   1121c:	ldm	r6, {r0, r1, r2}
   11220:	ldr	r3, [r9, #4]
   11224:	stm	r4, {r0, r1, r2}
   11228:	mov	r0, r6
   1122c:	ldr	r3, [r3, #140]	; 0x8c
   11230:	ldr	r2, [r9, #12]
   11234:	ldr	r1, [r9, #24]
   11238:	mla	r8, r8, r2, r3
   1123c:	ldr	r2, [r8, #52]	; 0x34
   11240:	bl	11e04 <abort@plt+0xf70>
   11244:	ldm	r6, {r0, r1, r2}
   11248:	ldr	r3, [r9, #28]
   1124c:	cmp	r3, #0
   11250:	stm	r7, {r0, r1, r2}
   11254:	beq	11274 <abort@plt+0x3e0>
   11258:	ldm	r4, {r0, r1, r2}
   1125c:	add	r3, sp, #160	; 0xa0
   11260:	stm	r3, {r0, r1, r2}
   11264:	ldm	r7, {r0, r1, r2}
   11268:	stm	r4, {r0, r1, r2}
   1126c:	ldm	r3, {r0, r1, r2}
   11270:	stm	r7, {r0, r1, r2}
   11274:	add	r3, sp, #132	; 0x84
   11278:	add	r1, sp, #112	; 0x70
   1127c:	str	r3, [sp]
   11280:	add	r2, sp, #116	; 0x74
   11284:	add	r3, sp, #128	; 0x80
   11288:	ldr	r0, [sp, #60]	; 0x3c
   1128c:	bl	11d14 <abort@plt+0xe80>
   11290:	mov	r3, #0
   11294:	add	r1, sp, #120	; 0x78
   11298:	str	r3, [sp]
   1129c:	add	r2, sp, #124	; 0x7c
   112a0:	mov	r6, r0
   112a4:	ldr	r0, [sp, #64]	; 0x40
   112a8:	bl	11d14 <abort@plt+0xe80>
   112ac:	ldr	r1, [sp, #112]	; 0x70
   112b0:	ldr	r3, [sp, #120]	; 0x78
   112b4:	cmp	r1, r3
   112b8:	mov	r8, r0
   112bc:	bne	11a9c <abort@plt+0xc08>
   112c0:	ldr	r3, [sp, #116]	; 0x74
   112c4:	ldr	r2, [sp, #124]	; 0x7c
   112c8:	cmp	r3, r2
   112cc:	bne	11a9c <abort@plt+0xc08>
   112d0:	ldr	r2, [sp, #128]	; 0x80
   112d4:	cmn	r2, #1
   112d8:	beq	11808 <abort@plt+0x974>
   112dc:	cmp	r2, #0
   112e0:	blt	11814 <abort@plt+0x980>
   112e4:	cmp	r1, r2
   112e8:	bls	11814 <abort@plt+0x980>
   112ec:	ldr	r0, [sp, #132]	; 0x84
   112f0:	cmp	r0, #0
   112f4:	blt	11814 <abort@plt+0x980>
   112f8:	cmp	r3, r0
   112fc:	bls	11814 <abort@plt+0x980>
   11300:	mov	r3, r4
   11304:	str	r2, [sp, #4]
   11308:	mov	r1, r6
   1130c:	mov	r2, r8
   11310:	str	r0, [sp, #8]
   11314:	str	r7, [sp]
   11318:	ldr	r0, [r9, #4]
   1131c:	bl	10d44 <XCreatePixmapCursor@plt>
   11320:	mov	r1, r6
   11324:	mov	r4, r0
   11328:	ldr	r0, [r9, #4]
   1132c:	bl	10d2c <XFreePixmap@plt>
   11330:	mov	r1, r8
   11334:	ldr	r0, [r9, #4]
   11338:	bl	10d2c <XFreePixmap@plt>
   1133c:	ldmib	r9, {r0, r1}
   11340:	mov	r2, r4
   11344:	bl	10df8 <XDefineCursor@plt>
   11348:	mov	r1, r4
   1134c:	ldr	r0, [r9, #4]
   11350:	bl	10e34 <XFreeCursor@plt>
   11354:	ldr	ip, [sp, #68]	; 0x44
   11358:	cmp	ip, #0
   1135c:	beq	1141c <abort@plt+0x588>
   11360:	ldr	r3, [r9, #4]
   11364:	mov	r8, #80	; 0x50
   11368:	ldr	r2, [r9, #12]
   1136c:	add	r6, sp, #96	; 0x60
   11370:	ldr	r1, [r9, #20]
   11374:	add	r4, sp, #136	; 0x88
   11378:	ldr	r3, [r3, #140]	; 0x8c
   1137c:	mov	r0, r6
   11380:	add	r7, sp, #148	; 0x94
   11384:	mla	r3, r8, r2, r3
   11388:	ldr	r2, [r3, #56]	; 0x38
   1138c:	bl	11e04 <abort@plt+0xf70>
   11390:	ldm	r6, {r0, r1, r2}
   11394:	ldr	r3, [r9, #4]
   11398:	stm	r4, {r0, r1, r2}
   1139c:	mov	r0, r6
   113a0:	ldr	r3, [r3, #140]	; 0x8c
   113a4:	ldr	r2, [r9, #12]
   113a8:	ldr	r1, [r9, #24]
   113ac:	mla	r8, r8, r2, r3
   113b0:	ldr	r2, [r8, #52]	; 0x34
   113b4:	bl	11e04 <abort@plt+0xf70>
   113b8:	ldm	r6, {r0, r1, r2}
   113bc:	ldr	r3, [r9, #28]
   113c0:	cmp	r3, #0
   113c4:	stm	r7, {r0, r1, r2}
   113c8:	beq	113e8 <abort@plt+0x554>
   113cc:	ldm	r4, {r0, r1, r2}
   113d0:	add	r3, sp, #160	; 0xa0
   113d4:	stm	r3, {r0, r1, r2}
   113d8:	ldm	r7, {r0, r1, r2}
   113dc:	stm	r4, {r0, r1, r2}
   113e0:	ldm	r3, {r0, r1, r2}
   113e4:	stm	r7, {r0, r1, r2}
   113e8:	ldr	r0, [sp, #68]	; 0x44
   113ec:	bl	10d98 <XmuCursorNameToIndex@plt>
   113f0:	cmn	r0, #1
   113f4:	mov	r8, r0
   113f8:	beq	1141c <abort@plt+0x588>
   113fc:	movw	r1, #10396	; 0x289c
   11400:	ldr	r0, [r9, #4]
   11404:	movt	r1, #1
   11408:	movw	r6, #12496	; 0x30d0
   1140c:	bl	10dd4 <XLoadFont@plt>
   11410:	movt	r6, #2
   11414:	subs	r1, r0, #0
   11418:	bne	118dc <abort@plt+0xa48>
   1141c:	ldr	ip, [sp, #72]	; 0x48
   11420:	cmp	ip, #0
   11424:	beq	11454 <abort@plt+0x5c0>
   11428:	ldr	r1, [sp, #92]	; 0x5c
   1142c:	mov	r0, ip
   11430:	bl	10e04 <XcursorFilenameLoadImages@plt>
   11434:	subs	r1, r0, #0
   11438:	beq	11960 <abort@plt+0xacc>
   1143c:	ldr	r0, [r9, #4]
   11440:	movw	r4, #12496	; 0x30d0
   11444:	bl	10d8c <XcursorImagesLoadCursor@plt>
   11448:	movt	r4, #2
   1144c:	subs	r6, r0, #0
   11450:	bne	1183c <abort@plt+0x9a8>
   11454:	ldr	ip, [sp, #88]	; 0x58
   11458:	cmp	ip, #0
   1145c:	bne	1173c <abort@plt+0x8a8>
   11460:	ldr	ip, [sp, #76]	; 0x4c
   11464:	cmp	ip, #0
   11468:	beq	114b0 <abort@plt+0x61c>
   1146c:	ldr	r4, [r9, #4]
   11470:	mov	r1, #80	; 0x50
   11474:	ldr	r3, [r9, #12]
   11478:	ldrb	r0, [ip]
   1147c:	ldr	r2, [r4, #140]	; 0x8c
   11480:	cmp	r0, #0
   11484:	ldr	r6, [r9, #8]
   11488:	mla	r3, r1, r3, r2
   1148c:	ldr	r2, [r3, #56]	; 0x38
   11490:	bne	117f8 <abort@plt+0x964>
   11494:	mov	r1, r6
   11498:	mov	r0, r4
   1149c:	bl	10e40 <XSetWindowBackground@plt>
   114a0:	ldmib	r9, {r0, r1}
   114a4:	bl	10cc0 <XClearWindow@plt>
   114a8:	mov	r3, #1
   114ac:	str	r3, [r9, #36]	; 0x24
   114b0:	ldr	ip, [sp, #80]	; 0x50
   114b4:	cmp	ip, #0
   114b8:	beq	114e0 <abort@plt+0x64c>
   114bc:	mov	r3, #0
   114c0:	add	r1, sp, #120	; 0x78
   114c4:	add	r2, sp, #124	; 0x7c
   114c8:	mov	r0, ip
   114cc:	str	r3, [sp]
   114d0:	bl	11d14 <abort@plt+0xe80>
   114d4:	ldr	r1, [sp, #120]	; 0x78
   114d8:	ldr	r2, [sp, #124]	; 0x7c
   114dc:	bl	12024 <abort@plt+0x1190>
   114e0:	ldr	ip, [sp, #84]	; 0x54
   114e4:	cmp	ip, #0
   114e8:	bne	11768 <abort@plt+0x8d4>
   114ec:	ldr	ip, [sp, #56]	; 0x38
   114f0:	cmp	ip, #0
   114f4:	beq	11504 <abort@plt+0x670>
   114f8:	mov	r2, ip
   114fc:	ldmib	r9, {r0, r1}
   11500:	bl	10d08 <XStoreName@plt>
   11504:	ldr	ip, [sp, #44]	; 0x2c
   11508:	cmp	ip, #0
   1150c:	beq	11528 <abort@plt+0x694>
   11510:	ldr	ip, [sp, #60]	; 0x3c
   11514:	cmp	ip, #0
   11518:	beq	11a08 <abort@plt+0xb74>
   1151c:	ldr	ip, [sp, #52]	; 0x34
   11520:	cmp	ip, #0
   11524:	beq	11920 <abort@plt+0xa8c>
   11528:	ldr	r0, [r9, #4]
   1152c:	mov	ip, #80	; 0x50
   11530:	ldr	r2, [r9, #12]
   11534:	movw	r3, #12496	; 0x30d0
   11538:	movt	r3, #2
   1153c:	ldr	r1, [r0, #140]	; 0x8c
   11540:	mla	r2, ip, r2, r1
   11544:	ldr	r2, [r2, #40]	; 0x28
   11548:	ldr	r2, [r2, #8]
   1154c:	ands	r2, r2, #1
   11550:	streq	r2, [r3, #36]	; 0x24
   11554:	beq	11690 <abort@plt+0x7fc>
   11558:	ldr	r3, [r3, #36]	; 0x24
   1155c:	cmp	r3, #0
   11560:	beq	11690 <abort@plt+0x7fc>
   11564:	movw	r1, #10432	; 0x28c0
   11568:	mov	r2, #0
   1156c:	movt	r1, #1
   11570:	movw	r4, #12496	; 0x30d0
   11574:	bl	10db0 <XInternAtom@plt>
   11578:	ldr	r3, [r9, #36]	; 0x24
   1157c:	movt	r4, #2
   11580:	cmp	r3, #0
   11584:	mov	r5, r0
   11588:	bne	1185c <abort@plt+0x9c8>
   1158c:	ldr	r3, [r9, #16]
   11590:	movw	r4, #12496	; 0x30d0
   11594:	movt	r4, #2
   11598:	cmp	r3, #0
   1159c:	beq	115e8 <abort@plt+0x754>
   115a0:	ldr	r3, [r4, #32]
   115a4:	cmp	r3, #0
   115a8:	beq	11940 <abort@plt+0xaac>
   115ac:	ldr	r3, [pc, #1508]	; 11b98 <abort@plt+0xd04>
   115b0:	mov	r0, #32
   115b4:	mov	r1, #0
   115b8:	str	r0, [sp]
   115bc:	mov	r4, #1
   115c0:	str	r1, [sp, #4]
   115c4:	str	r3, [sp, #8]
   115c8:	mov	r2, r5
   115cc:	ldmib	r9, {r0, r1}
   115d0:	mov	r3, #20
   115d4:	str	r4, [sp, #12]
   115d8:	bl	10dbc <XChangeProperty@plt>
   115dc:	mov	r1, r4
   115e0:	ldr	r0, [r9, #4]
   115e4:	bl	10cf0 <XSetCloseDownMode@plt>
   115e8:	ldr	r0, [r9, #4]
   115ec:	bl	10e70 <XCloseDisplay@plt>
   115f0:	mov	r0, #0
   115f4:	bl	10d80 <exit@plt>
   115f8:	mov	r2, r0
   115fc:	movw	r0, #10056	; 0x2748
   11600:	movt	r0, #1
   11604:	str	r2, [sp, #32]
   11608:	bl	10d50 <puts@plt>
   1160c:	ldr	r2, [sp, #32]
   11610:	mov	r0, r2
   11614:	bl	10d80 <exit@plt>
   11618:	cmp	sl, #0
   1161c:	beq	116d4 <abort@plt+0x840>
   11620:	movw	r0, #10496	; 0x2900
   11624:	mov	r1, r4
   11628:	movt	r0, #1
   1162c:	bl	10ccc <strcmp@plt>
   11630:	cmp	r0, #0
   11634:	beq	116b8 <abort@plt+0x824>
   11638:	movw	r0, #10132	; 0x2794
   1163c:	mov	r1, r4
   11640:	movt	r0, #1
   11644:	bl	10ccc <strcmp@plt>
   11648:	cmp	r0, #0
   1164c:	beq	11720 <abort@plt+0x88c>
   11650:	movw	r0, #10144	; 0x27a0
   11654:	mov	r1, r4
   11658:	movt	r0, #1
   1165c:	bl	10ccc <strcmp@plt>
   11660:	cmp	r0, #0
   11664:	bne	11a14 <abort@plt+0xb80>
   11668:	add	fp, fp, #1
   1166c:	cmp	r6, fp
   11670:	ble	10fe4 <abort@plt+0x150>
   11674:	add	r8, r7, r8
   11678:	ldr	ip, [sp, #52]	; 0x34
   1167c:	ldr	r8, [r8, #4]
   11680:	add	ip, ip, #1
   11684:	str	ip, [sp, #52]	; 0x34
   11688:	str	r8, [sp, #76]	; 0x4c
   1168c:	b	10fac <abort@plt+0x118>
   11690:	ldr	r3, [r9, #16]
   11694:	cmp	r3, #0
   11698:	beq	115e8 <abort@plt+0x754>
   1169c:	b	11564 <abort@plt+0x6d0>
   116a0:	ldrb	r1, [r4, #2]
   116a4:	cmp	r1, #103	; 0x67
   116a8:	bne	116e0 <abort@plt+0x84c>
   116ac:	ldrb	r1, [r4, #3]
   116b0:	cmp	r1, #0
   116b4:	bne	116e0 <abort@plt+0x84c>
   116b8:	add	fp, fp, #1
   116bc:	cmp	r6, fp
   116c0:	ble	10fe4 <abort@plt+0x150>
   116c4:	add	r8, r7, r8
   116c8:	ldr	r2, [r8, #4]
   116cc:	str	r2, [r9, #20]
   116d0:	b	10fac <abort@plt+0x118>
   116d4:	ldrb	r2, [r4, #1]
   116d8:	cmp	r2, #102	; 0x66
   116dc:	beq	116a0 <abort@plt+0x80c>
   116e0:	movw	r0, #10496	; 0x2900
   116e4:	mov	r1, r4
   116e8:	movt	r0, #1
   116ec:	str	r2, [sp, #32]
   116f0:	bl	10ccc <strcmp@plt>
   116f4:	ldr	r2, [sp, #32]
   116f8:	cmp	r0, #0
   116fc:	beq	116b8 <abort@plt+0x824>
   11700:	cmp	r2, #98	; 0x62
   11704:	bne	11638 <abort@plt+0x7a4>
   11708:	ldrb	r2, [r4, #2]
   1170c:	cmp	r2, #103	; 0x67
   11710:	bne	11638 <abort@plt+0x7a4>
   11714:	ldrb	r2, [r4, #3]
   11718:	cmp	r2, #0
   1171c:	bne	11638 <abort@plt+0x7a4>
   11720:	add	fp, fp, #1
   11724:	cmp	r6, fp
   11728:	ble	10fe4 <abort@plt+0x150>
   1172c:	add	r8, r7, r8
   11730:	ldr	r2, [r8, #4]
   11734:	str	r2, [r9, #24]
   11738:	b	10fac <abort@plt+0x118>
   1173c:	mov	r4, #2
   11740:	ldmib	r9, {r0, r1}
   11744:	str	r4, [sp]
   11748:	mov	r3, r4
   1174c:	movw	r2, #12472	; 0x30b8
   11750:	movt	r2, #2
   11754:	bl	10d38 <XCreateBitmapFromData@plt>
   11758:	mov	r1, r4
   1175c:	mov	r2, r4
   11760:	bl	12024 <abort@plt+0x1190>
   11764:	b	11460 <abort@plt+0x5cc>
   11768:	mov	r6, #15
   1176c:	mov	r4, #0
   11770:	mov	r7, ip
   11774:	mov	r0, r6
   11778:	mov	r1, r7
   1177c:	bl	123f8 <abort@plt+0x1564>
   11780:	lsl	r4, r4, #1
   11784:	cmp	r1, #0
   11788:	orreq	r4, r4, #1
   1178c:	subs	r6, r6, #1
   11790:	bcs	11774 <abort@plt+0x8e0>
   11794:	ubfx	r7, r4, #8, #8
   11798:	add	sl, sp, #172	; 0xac
   1179c:	mov	r8, #0
   117a0:	mov	r0, r8
   117a4:	mov	r1, r5
   117a8:	bl	123f8 <abort@plt+0x1564>
   117ac:	add	r8, r8, #1
   117b0:	add	sl, sl, #2
   117b4:	cmp	r1, #0
   117b8:	strbeq	r6, [sl, #-2]
   117bc:	strbeq	r6, [sl, #-1]
   117c0:	strbne	r4, [sl, #-2]
   117c4:	strbne	r7, [sl, #-1]
   117c8:	cmp	r8, #16
   117cc:	bne	117a0 <abort@plt+0x90c>
   117d0:	add	r2, sp, #172	; 0xac
   117d4:	ldr	r1, [r9, #8]
   117d8:	str	r8, [sp]
   117dc:	mov	r3, r8
   117e0:	ldr	r0, [r9, #4]
   117e4:	bl	10d38 <XCreateBitmapFromData@plt>
   117e8:	mov	r1, r8
   117ec:	mov	r2, r8
   117f0:	bl	12024 <abort@plt+0x1190>
   117f4:	b	114ec <abort@plt+0x658>
   117f8:	mov	r0, ip
   117fc:	bl	11f00 <abort@plt+0x106c>
   11800:	mov	r2, r0
   11804:	b	11494 <abort@plt+0x600>
   11808:	ldr	r2, [sp, #132]	; 0x84
   1180c:	cmn	r2, #1
   11810:	beq	119f8 <abort@plt+0xb64>
   11814:	movw	r1, #12488	; 0x30c8
   11818:	movt	r1, #2
   1181c:	ldr	r3, [r9]
   11820:	movw	r2, #10356	; 0x2874
   11824:	ldr	r0, [r1]
   11828:	movt	r2, #1
   1182c:	mov	r1, #1
   11830:	bl	10dec <__fprintf_chk@plt>
   11834:	mov	r0, #1
   11838:	bl	10d80 <exit@plt>
   1183c:	ldr	r1, [r4, #8]
   11840:	mov	r2, r6
   11844:	ldr	r0, [r4, #4]
   11848:	bl	10df8 <XDefineCursor@plt>
   1184c:	ldr	r0, [r4, #4]
   11850:	mov	r1, r6
   11854:	bl	10e34 <XFreeCursor@plt>
   11858:	b	11454 <abort@plt+0x5c0>
   1185c:	mov	r3, #0
   11860:	mov	r2, #1
   11864:	str	r3, [sp, #8]
   11868:	add	r1, sp, #128	; 0x80
   1186c:	str	r2, [sp]
   11870:	str	r2, [sp, #4]
   11874:	add	r2, sp, #132	; 0x84
   11878:	str	r1, [sp, #12]
   1187c:	add	r1, sp, #136	; 0x88
   11880:	str	r2, [sp, #16]
   11884:	add	r2, sp, #148	; 0x94
   11888:	str	r1, [sp, #20]
   1188c:	add	r1, sp, #160	; 0xa0
   11890:	str	r2, [sp, #24]
   11894:	mov	r2, r0
   11898:	str	r1, [sp, #28]
   1189c:	ldmib	r4, {r0, r1}
   118a0:	bl	10e64 <XGetWindowProperty@plt>
   118a4:	ldr	r3, [sp, #128]	; 0x80
   118a8:	cmp	r3, #20
   118ac:	beq	119c0 <abort@plt+0xb2c>
   118b0:	cmp	r3, #0
   118b4:	beq	1158c <abort@plt+0x6f8>
   118b8:	movw	r3, #12488	; 0x30c8
   118bc:	movt	r3, #2
   118c0:	movw	r2, #10448	; 0x28d0
   118c4:	mov	r1, #1
   118c8:	ldr	r0, [r3]
   118cc:	movt	r2, #1
   118d0:	ldr	r3, [r9]
   118d4:	bl	10dec <__fprintf_chk@plt>
   118d8:	b	1158c <abort@plt+0x6f8>
   118dc:	stmib	sp, {r4, r7}
   118e0:	add	r0, r8, #1
   118e4:	mov	r2, r1
   118e8:	str	r0, [sp]
   118ec:	mov	r3, r8
   118f0:	ldr	r0, [r6, #4]
   118f4:	bl	10da4 <XCreateGlyphCursor@plt>
   118f8:	subs	r4, r0, #0
   118fc:	beq	1141c <abort@plt+0x588>
   11900:	ldr	r1, [r6, #8]
   11904:	mov	r2, r4
   11908:	ldr	r0, [r6, #4]
   1190c:	bl	10df8 <XDefineCursor@plt>
   11910:	ldr	r0, [r6, #4]
   11914:	mov	r1, r4
   11918:	bl	10e34 <XFreeCursor@plt>
   1191c:	b	1141c <abort@plt+0x588>
   11920:	mov	r2, ip
   11924:	ldmib	r9, {r0, r1}
   11928:	bl	10e28 <XSetWindowBackgroundPixmap@plt>
   1192c:	ldmib	r9, {r0, r1}
   11930:	bl	10cc0 <XClearWindow@plt>
   11934:	mov	r3, #1
   11938:	str	r3, [r9, #36]	; 0x24
   1193c:	b	11528 <abort@plt+0x694>
   11940:	mov	r3, #1
   11944:	ldr	r0, [r4, #4]
   11948:	mov	r2, r3
   1194c:	str	r3, [sp]
   11950:	ldr	r1, [r4, #8]
   11954:	bl	10e7c <XCreatePixmap@plt>
   11958:	str	r0, [r4, #32]
   1195c:	b	115ac <abort@plt+0x718>
   11960:	movw	r1, #12488	; 0x30c8
   11964:	movt	r1, #2
   11968:	ldr	r3, [sp, #72]	; 0x48
   1196c:	movw	r2, #10404	; 0x28a4
   11970:	ldr	r0, [r1]
   11974:	movt	r2, #1
   11978:	mov	r1, #1
   1197c:	bl	10dec <__fprintf_chk@plt>
   11980:	b	11454 <abort@plt+0x5c0>
   11984:	movw	r2, #12488	; 0x30c8
   11988:	movt	r2, #2
   1198c:	ldr	r0, [sp, #36]	; 0x24
   11990:	ldr	r4, [r2]
   11994:	ldr	r5, [r3]
   11998:	bl	10dc8 <XDisplayName@plt>
   1199c:	movw	r2, #10248	; 0x2808
   119a0:	mov	r1, #1
   119a4:	movt	r2, #1
   119a8:	mov	r3, r5
   119ac:	str	r0, [sp]
   119b0:	mov	r0, r4
   119b4:	bl	10dec <__fprintf_chk@plt>
   119b8:	mov	r0, #2
   119bc:	bl	10d80 <exit@plt>
   119c0:	ldr	r3, [sp, #132]	; 0x84
   119c4:	cmp	r3, #32
   119c8:	bne	118b8 <abort@plt+0xa24>
   119cc:	ldr	r3, [sp, #136]	; 0x88
   119d0:	cmp	r3, #1
   119d4:	bne	118b8 <abort@plt+0xa24>
   119d8:	ldr	r3, [sp, #148]	; 0x94
   119dc:	cmp	r3, #0
   119e0:	bne	118b8 <abort@plt+0xa24>
   119e4:	ldr	r3, [sp, #160]	; 0xa0
   119e8:	ldr	r0, [r4, #4]
   119ec:	ldr	r1, [r3]
   119f0:	bl	10d14 <XKillClient@plt>
   119f4:	b	1158c <abort@plt+0x6f8>
   119f8:	mov	r2, #8
   119fc:	str	r2, [sp, #128]	; 0x80
   11a00:	str	r2, [sp, #132]	; 0x84
   11a04:	b	112e4 <abort@plt+0x450>
   11a08:	ldmib	r9, {r0, r1}
   11a0c:	bl	10de0 <XUndefineCursor@plt>
   11a10:	b	1151c <abort@plt+0x688>
   11a14:	movw	r0, #10152	; 0x27a8
   11a18:	mov	r1, r4
   11a1c:	movt	r0, #1
   11a20:	bl	10ccc <strcmp@plt>
   11a24:	cmp	r0, #0
   11a28:	beq	11a84 <abort@plt+0xbf0>
   11a2c:	movw	r0, #10160	; 0x27b0
   11a30:	mov	r1, r4
   11a34:	movt	r0, #1
   11a38:	bl	10ccc <strcmp@plt>
   11a3c:	cmp	r0, #0
   11a40:	beq	11a84 <abort@plt+0xbf0>
   11a44:	movw	r0, #10168	; 0x27b8
   11a48:	mov	r1, r4
   11a4c:	movt	r0, #1
   11a50:	bl	10ccc <strcmp@plt>
   11a54:	cmp	r0, #0
   11a58:	bne	11ac4 <abort@plt+0xc30>
   11a5c:	add	fp, fp, #1
   11a60:	cmp	r6, fp
   11a64:	ble	10fe4 <abort@plt+0x150>
   11a68:	add	r8, r7, r8
   11a6c:	ldr	ip, [sp, #52]	; 0x34
   11a70:	ldr	r8, [r8, #4]
   11a74:	add	ip, ip, #1
   11a78:	str	ip, [sp, #52]	; 0x34
   11a7c:	str	r8, [sp, #80]	; 0x50
   11a80:	b	10fac <abort@plt+0x118>
   11a84:	ldr	ip, [sp, #52]	; 0x34
   11a88:	add	ip, ip, #1
   11a8c:	str	ip, [sp, #52]	; 0x34
   11a90:	mov	ip, #1
   11a94:	str	ip, [sp, #88]	; 0x58
   11a98:	b	10fac <abort@plt+0x118>
   11a9c:	movw	r1, #12488	; 0x30c8
   11aa0:	movt	r1, #2
   11aa4:	ldr	r3, [r9]
   11aa8:	movw	r2, #10284	; 0x282c
   11aac:	ldr	r0, [r1]
   11ab0:	movt	r2, #1
   11ab4:	mov	r1, #1
   11ab8:	bl	10dec <__fprintf_chk@plt>
   11abc:	mov	r0, #1
   11ac0:	bl	10d80 <exit@plt>
   11ac4:	movw	r0, #10176	; 0x27c0
   11ac8:	mov	r1, r4
   11acc:	movt	r0, #1
   11ad0:	bl	10ccc <strcmp@plt>
   11ad4:	subs	ip, r0, #0
   11ad8:	bne	11b48 <abort@plt+0xcb4>
   11adc:	add	r2, fp, #1
   11ae0:	cmp	r6, r2
   11ae4:	ble	10fe4 <abort@plt+0x150>
   11ae8:	add	r8, r7, r8
   11aec:	mov	r1, ip
   11af0:	mov	r2, #10
   11af4:	add	fp, fp, #2
   11af8:	ldr	r0, [r8, #4]
   11afc:	str	ip, [sp, #32]
   11b00:	bl	10cd8 <strtol@plt>
   11b04:	ldr	ip, [sp, #32]
   11b08:	cmp	r0, #1
   11b0c:	movlt	r0, #1
   11b10:	cmp	r6, fp
   11b14:	str	r0, [sp, #84]	; 0x54
   11b18:	ble	10fe4 <abort@plt+0x150>
   11b1c:	mov	r1, ip
   11b20:	ldr	ip, [sp, #52]	; 0x34
   11b24:	ldr	r0, [r8, #8]
   11b28:	mov	r2, #10
   11b2c:	add	ip, ip, #1
   11b30:	str	ip, [sp, #52]	; 0x34
   11b34:	bl	10cd8 <strtol@plt>
   11b38:	cmp	r0, #1
   11b3c:	movge	r5, r0
   11b40:	movlt	r5, #1
   11b44:	b	10fac <abort@plt+0x118>
   11b48:	cmp	sl, #0
   11b4c:	bne	11b74 <abort@plt+0xce0>
   11b50:	ldrb	r2, [r4, #1]
   11b54:	cmp	r2, #114	; 0x72
   11b58:	bne	11b74 <abort@plt+0xce0>
   11b5c:	ldrb	r2, [r4, #2]
   11b60:	cmp	r2, #118	; 0x76
   11b64:	bne	11b74 <abort@plt+0xce0>
   11b68:	ldrb	r2, [r4, #3]
   11b6c:	cmp	r2, #0
   11b70:	beq	11b8c <abort@plt+0xcf8>
   11b74:	mov	r1, r4
   11b78:	movw	r0, #10184	; 0x27c8
   11b7c:	movt	r0, #1
   11b80:	bl	10ccc <strcmp@plt>
   11b84:	cmp	r0, #0
   11b88:	bne	10fe4 <abort@plt+0x150>
   11b8c:	mov	r0, #1
   11b90:	str	r0, [r9, #28]
   11b94:	b	10fac <abort@plt+0x118>
   11b98:	strdeq	r3, [r2], -r0
   11b9c:	mov	fp, #0
   11ba0:	mov	lr, #0
   11ba4:	pop	{r1}		; (ldr r1, [sp], #4)
   11ba8:	mov	r2, sp
   11bac:	push	{r2}		; (str r2, [sp, #-4]!)
   11bb0:	push	{r0}		; (str r0, [sp, #-4]!)
   11bb4:	ldr	ip, [pc, #16]	; 11bcc <abort@plt+0xd38>
   11bb8:	push	{ip}		; (str ip, [sp, #-4]!)
   11bbc:	ldr	r0, [pc, #12]	; 11bd0 <abort@plt+0xd3c>
   11bc0:	ldr	r3, [pc, #12]	; 11bd4 <abort@plt+0xd40>
   11bc4:	bl	10d5c <__libc_start_main@plt>
   11bc8:	bl	10e94 <abort@plt>
   11bcc:	andeq	r2, r1, ip, lsl #9
   11bd0:	andeq	r0, r1, r0, lsr #29
   11bd4:	andeq	r2, r1, r8, lsr #8
   11bd8:	ldr	r3, [pc, #20]	; 11bf4 <abort@plt+0xd60>
   11bdc:	ldr	r2, [pc, #20]	; 11bf8 <abort@plt+0xd64>
   11be0:	add	r3, pc, r3
   11be4:	ldr	r2, [r3, r2]
   11be8:	cmp	r2, #0
   11bec:	bxeq	lr
   11bf0:	b	10d74 <__gmon_start__@plt>
   11bf4:	andeq	r1, r1, r8, lsl r4
   11bf8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   11bfc:	push	{r3, lr}
   11c00:	movw	r0, #12476	; 0x30bc
   11c04:	ldr	r3, [pc, #36]	; 11c30 <abort@plt+0xd9c>
   11c08:	movt	r0, #2
   11c0c:	rsb	r3, r0, r3
   11c10:	cmp	r3, #6
   11c14:	popls	{r3, pc}
   11c18:	movw	r3, #0
   11c1c:	movt	r3, #0
   11c20:	cmp	r3, #0
   11c24:	popeq	{r3, pc}
   11c28:	blx	r3
   11c2c:	pop	{r3, pc}
   11c30:	strheq	r3, [r2], -pc	; <UNPREDICTABLE>
   11c34:	push	{r3, lr}
   11c38:	movw	r0, #12476	; 0x30bc
   11c3c:	movw	r3, #12476	; 0x30bc
   11c40:	movt	r0, #2
   11c44:	movt	r3, #2
   11c48:	rsb	r3, r0, r3
   11c4c:	asr	r3, r3, #2
   11c50:	add	r3, r3, r3, lsr #31
   11c54:	asrs	r1, r3, #1
   11c58:	popeq	{r3, pc}
   11c5c:	movw	r2, #0
   11c60:	movt	r2, #0
   11c64:	cmp	r2, #0
   11c68:	popeq	{r3, pc}
   11c6c:	blx	r2
   11c70:	pop	{r3, pc}
   11c74:	push	{r4, lr}
   11c78:	movw	r4, #12492	; 0x30cc
   11c7c:	movt	r4, #2
   11c80:	ldrb	r3, [r4]
   11c84:	cmp	r3, #0
   11c88:	popne	{r4, pc}
   11c8c:	bl	11bfc <abort@plt+0xd68>
   11c90:	mov	r3, #1
   11c94:	strb	r3, [r4]
   11c98:	pop	{r4, pc}
   11c9c:	movw	r0, #12012	; 0x2eec
   11ca0:	movt	r0, #2
   11ca4:	push	{r3, lr}
   11ca8:	ldr	r3, [r0]
   11cac:	cmp	r3, #0
   11cb0:	beq	11cc8 <abort@plt+0xe34>
   11cb4:	movw	r3, #0
   11cb8:	movt	r3, #0
   11cbc:	cmp	r3, #0
   11cc0:	beq	11cc8 <abort@plt+0xe34>
   11cc4:	blx	r3
   11cc8:	pop	{r3, lr}
   11ccc:	b	11c34 <abort@plt+0xda0>
   11cd0:	push	{lr}		; (str lr, [sp, #-4]!)
   11cd4:	movw	r0, #12488	; 0x30c8
   11cd8:	sub	sp, sp, #12
   11cdc:	movw	r3, #12496	; 0x30d0
   11ce0:	movt	r0, #2
   11ce4:	movt	r3, #2
   11ce8:	movw	r1, #9400	; 0x24b8
   11cec:	movw	r2, #9376	; 0x24a0
   11cf0:	ldr	r0, [r0]
   11cf4:	movt	r1, #1
   11cf8:	ldr	r3, [r3]
   11cfc:	movt	r2, #1
   11d00:	str	r1, [sp]
   11d04:	mov	r1, #1
   11d08:	bl	10dec <__fprintf_chk@plt>
   11d0c:	mov	r0, #1
   11d10:	bl	10d80 <exit@plt>
   11d14:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d18:	movw	r4, #12496	; 0x30d0
   11d1c:	sub	sp, sp, #24
   11d20:	movt	r4, #2
   11d24:	movw	r5, #12480	; 0x30c0
   11d28:	movt	r5, #2
   11d2c:	ldr	sl, [r4, #4]
   11d30:	mov	r6, r0
   11d34:	ldr	r9, [r4, #8]
   11d38:	mov	r8, r1
   11d3c:	ldr	r7, [sp, #56]	; 0x38
   11d40:	add	lr, sp, #16
   11d44:	ldr	ip, [r5]
   11d48:	mov	r0, sl
   11d4c:	str	r2, [sp]
   11d50:	mov	r1, r9
   11d54:	str	r3, [sp, #8]
   11d58:	mov	r2, r6
   11d5c:	mov	r3, r8
   11d60:	str	r7, [sp, #12]
   11d64:	str	lr, [sp, #4]
   11d68:	str	ip, [sp, #20]
   11d6c:	bl	10e88 <XReadBitmapFile@plt>
   11d70:	cmp	r0, #0
   11d74:	bne	11d98 <abort@plt+0xf04>
   11d78:	ldr	r2, [sp, #20]
   11d7c:	ldr	r3, [r5]
   11d80:	ldr	r0, [sp, #16]
   11d84:	cmp	r2, r3
   11d88:	bne	11d94 <abort@plt+0xf00>
   11d8c:	add	sp, sp, #24
   11d90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d94:	bl	10d20 <__stack_chk_fail@plt>
   11d98:	cmp	r0, #1
   11d9c:	beq	11ddc <abort@plt+0xf48>
   11da0:	cmp	r0, #2
   11da4:	movw	r1, #12488	; 0x30c8
   11da8:	movt	r1, #2
   11dac:	str	r6, [sp]
   11db0:	movweq	r2, #9840	; 0x2670
   11db4:	movwne	r2, #9872	; 0x2690
   11db8:	ldr	r0, [r1]
   11dbc:	movteq	r2, #1
   11dc0:	ldreq	r3, [r4]
   11dc4:	movtne	r2, #1
   11dc8:	ldrne	r3, [r4]
   11dcc:	mov	r1, #1
   11dd0:	bl	10dec <__fprintf_chk@plt>
   11dd4:	mov	r0, #1
   11dd8:	bl	10d80 <exit@plt>
   11ddc:	movw	ip, #12488	; 0x30c8
   11de0:	movt	ip, #2
   11de4:	str	r6, [sp]
   11de8:	mov	r1, r0
   11dec:	ldr	r3, [r4]
   11df0:	movw	r2, #9812	; 0x2654
   11df4:	ldr	r0, [ip]
   11df8:	movt	r2, #1
   11dfc:	bl	10dec <__fprintf_chk@plt>
   11e00:	b	11dd4 <abort@plt+0xf40>
   11e04:	push	{r4, r5, r6, r7, r8, lr}
   11e08:	movw	r5, #12480	; 0x30c0
   11e0c:	movt	r5, #2
   11e10:	sub	sp, sp, #40	; 0x28
   11e14:	subs	r4, r1, #0
   11e18:	mov	r6, r0
   11e1c:	ldr	r3, [r5]
   11e20:	str	r3, [sp, #36]	; 0x24
   11e24:	beq	11e34 <abort@plt+0xfa0>
   11e28:	ldrb	r3, [r4]
   11e2c:	cmp	r3, #0
   11e30:	bne	11e88 <abort@plt+0xff4>
   11e34:	movw	r3, #12496	; 0x30d0
   11e38:	movt	r3, #2
   11e3c:	mov	ip, #80	; 0x50
   11e40:	add	r4, sp, #40	; 0x28
   11e44:	ldr	r0, [r3, #4]
   11e48:	ldr	r3, [r3, #12]
   11e4c:	str	r2, [r4, #-28]!	; 0xffffffe4
   11e50:	mov	r2, r4
   11e54:	ldr	r1, [r0, #140]	; 0x8c
   11e58:	mla	r3, ip, r3, r1
   11e5c:	ldr	r1, [r3, #48]	; 0x30
   11e60:	bl	10e1c <XQueryColor@plt>
   11e64:	ldm	r4, {r0, r1, r2}
   11e68:	ldr	ip, [sp, #36]	; 0x24
   11e6c:	ldr	r3, [r5]
   11e70:	cmp	ip, r3
   11e74:	stm	r6, {r0, r1, r2}
   11e78:	mov	r0, r6
   11e7c:	bne	11ed0 <abort@plt+0x103c>
   11e80:	add	sp, sp, #40	; 0x28
   11e84:	pop	{r4, r5, r6, r7, r8, pc}
   11e88:	movw	r7, #12496	; 0x30d0
   11e8c:	movt	r7, #2
   11e90:	mov	lr, #80	; 0x50
   11e94:	add	r8, sp, #24
   11e98:	ldr	r0, [r7, #4]
   11e9c:	mov	r2, r4
   11ea0:	ldr	r1, [r7, #12]
   11ea4:	mov	r3, r8
   11ea8:	ldr	ip, [r0, #140]	; 0x8c
   11eac:	mla	r1, lr, r1, ip
   11eb0:	ldr	r1, [r1, #48]	; 0x30
   11eb4:	bl	10e58 <XParseColor@plt>
   11eb8:	cmp	r0, #0
   11ebc:	beq	11ed4 <abort@plt+0x1040>
   11ec0:	ldm	r8, {r0, r1, r2}
   11ec4:	add	r4, sp, #12
   11ec8:	stm	r4, {r0, r1, r2}
   11ecc:	b	11e64 <abort@plt+0xfd0>
   11ed0:	bl	10d20 <__stack_chk_fail@plt>
   11ed4:	movw	r1, #12488	; 0x30c8
   11ed8:	movt	r1, #2
   11edc:	str	r4, [sp]
   11ee0:	movw	r2, #9912	; 0x26b8
   11ee4:	ldr	r0, [r1]
   11ee8:	movt	r2, #1
   11eec:	ldr	r3, [r7]
   11ef0:	mov	r1, #1
   11ef4:	bl	10dec <__fprintf_chk@plt>
   11ef8:	mov	r0, #1
   11efc:	bl	10d80 <exit@plt>
   11f00:	push	{r4, r5, r6, lr}
   11f04:	movw	r4, #12496	; 0x30d0
   11f08:	movt	r4, #2
   11f0c:	mov	r2, r0
   11f10:	movw	r5, #12480	; 0x30c0
   11f14:	mov	r6, r0
   11f18:	ldr	r1, [r4, #4]
   11f1c:	movt	r5, #2
   11f20:	ldr	r3, [r4, #12]
   11f24:	sub	sp, sp, #24
   11f28:	ldr	lr, [r5]
   11f2c:	ldr	ip, [r1, #140]	; 0x8c
   11f30:	mov	r0, r1
   11f34:	add	r1, r3, r3, lsl #2
   11f38:	add	r3, sp, #8
   11f3c:	str	lr, [sp, #20]
   11f40:	add	r1, ip, r1, lsl #4
   11f44:	ldr	r1, [r1, #48]	; 0x30
   11f48:	bl	10e58 <XParseColor@plt>
   11f4c:	cmp	r0, #0
   11f50:	beq	12008 <abort@plt+0x1174>
   11f54:	ldr	r0, [r4, #4]
   11f58:	add	r2, sp, #8
   11f5c:	ldr	r3, [r4, #12]
   11f60:	ldr	ip, [r0, #140]	; 0x8c
   11f64:	add	r3, r3, r3, lsl #2
   11f68:	add	r3, ip, r3, lsl #4
   11f6c:	ldr	r1, [r3, #48]	; 0x30
   11f70:	bl	10ce4 <XAllocColor@plt>
   11f74:	cmp	r0, #0
   11f78:	beq	11fdc <abort@plt+0x1148>
   11f7c:	ldr	r3, [r4, #4]
   11f80:	ldr	r2, [r4, #12]
   11f84:	ldr	r0, [sp, #8]
   11f88:	ldr	r1, [r3, #140]	; 0x8c
   11f8c:	add	r2, r2, r2, lsl #2
   11f90:	add	r3, r1, r2, lsl #4
   11f94:	ldr	r2, [r3, #56]	; 0x38
   11f98:	cmp	r0, r2
   11f9c:	beq	11fc0 <abort@plt+0x112c>
   11fa0:	ldr	r2, [r3, #52]	; 0x34
   11fa4:	cmp	r0, r2
   11fa8:	beq	11fc0 <abort@plt+0x112c>
   11fac:	ldr	r3, [r3, #40]	; 0x28
   11fb0:	ldr	r3, [r3, #8]
   11fb4:	tst	r3, #1
   11fb8:	movne	r3, #1
   11fbc:	strne	r3, [r4, #16]
   11fc0:	ldr	r2, [sp, #20]
   11fc4:	ldr	r3, [r5]
   11fc8:	cmp	r2, r3
   11fcc:	bne	11fd8 <abort@plt+0x1144>
   11fd0:	add	sp, sp, #24
   11fd4:	pop	{r4, r5, r6, pc}
   11fd8:	bl	10d20 <__stack_chk_fail@plt>
   11fdc:	ldr	r3, [r4]
   11fe0:	movw	r1, #12488	; 0x30c8
   11fe4:	movw	r2, #9984	; 0x2700
   11fe8:	movt	r1, #2
   11fec:	movt	r2, #1
   11ff0:	str	r6, [sp]
   11ff4:	ldr	r0, [r1]
   11ff8:	mov	r1, #1
   11ffc:	bl	10dec <__fprintf_chk@plt>
   12000:	mov	r0, #1
   12004:	bl	10d80 <exit@plt>
   12008:	movw	r1, #12488	; 0x30c8
   1200c:	movw	r2, #9956	; 0x26e4
   12010:	movt	r1, #2
   12014:	str	r6, [sp]
   12018:	ldr	r3, [r4]
   1201c:	movt	r2, #1
   12020:	b	11ff4 <abort@plt+0x1160>
   12024:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12028:	movw	r4, #12496	; 0x30d0
   1202c:	movt	r4, #2
   12030:	mov	r8, r0
   12034:	movw	r5, #12480	; 0x30c0
   12038:	movt	r5, #2
   1203c:	ldr	ip, [r4, #4]
   12040:	mov	fp, r1
   12044:	ldr	r0, [r4, #12]
   12048:	mov	sl, r2
   1204c:	ldr	r3, [r4, #20]
   12050:	sub	sp, sp, #132	; 0x84
   12054:	ldr	r1, [ip, #140]	; 0x8c
   12058:	add	r0, r0, r0, lsl #2
   1205c:	ldr	r2, [r5]
   12060:	cmp	r3, #0
   12064:	add	r0, r1, r0, lsl #4
   12068:	str	r2, [sp, #124]	; 0x7c
   1206c:	ldr	r0, [r0, #56]	; 0x38
   12070:	beq	12080 <abort@plt+0x11ec>
   12074:	ldrb	r2, [r3]
   12078:	cmp	r2, #0
   1207c:	bne	121c8 <abort@plt+0x1334>
   12080:	ldr	r1, [r4, #4]
   12084:	ldr	r2, [r4, #12]
   12088:	ldr	r3, [r4, #24]
   1208c:	ldr	r1, [r1, #140]	; 0x8c
   12090:	add	r2, r2, r2, lsl #2
   12094:	cmp	r3, #0
   12098:	str	r0, [sp, #40]	; 0x28
   1209c:	add	r2, r1, r2, lsl #4
   120a0:	ldr	r0, [r2, #52]	; 0x34
   120a4:	beq	120b4 <abort@plt+0x1220>
   120a8:	ldrb	r2, [r3]
   120ac:	cmp	r2, #0
   120b0:	bne	121bc <abort@plt+0x1328>
   120b4:	ldr	r3, [r4, #28]
   120b8:	mov	r2, #12
   120bc:	str	r0, [sp, #44]	; 0x2c
   120c0:	movw	r7, #12496	; 0x30d0
   120c4:	cmp	r3, #0
   120c8:	ldr	r1, [r4, #8]
   120cc:	movt	r7, #2
   120d0:	ldrne	r3, [sp, #40]	; 0x28
   120d4:	strne	r0, [sp, #40]	; 0x28
   120d8:	ldr	r0, [r4, #4]
   120dc:	strne	r3, [sp, #44]	; 0x2c
   120e0:	add	r3, sp, #32
   120e4:	bl	10e10 <XCreateGC@plt>
   120e8:	ldr	ip, [r4, #12]
   120ec:	mov	r2, fp
   120f0:	mov	r3, sl
   120f4:	ldr	r1, [r4, #8]
   120f8:	add	ip, ip, ip, lsl #2
   120fc:	mov	r9, r0
   12100:	ldr	r0, [r4, #4]
   12104:	ldr	lr, [r0, #140]	; 0x8c
   12108:	add	ip, lr, ip, lsl #4
   1210c:	ldr	ip, [ip, #36]	; 0x24
   12110:	str	ip, [sp]
   12114:	bl	10e7c <XCreatePixmap@plt>
   12118:	mov	ip, #0
   1211c:	mov	r3, r9
   12120:	mov	lr, #1
   12124:	str	ip, [sp]
   12128:	mov	r1, r8
   1212c:	str	ip, [sp, #4]
   12130:	str	ip, [sp, #16]
   12134:	str	ip, [sp, #20]
   12138:	str	lr, [sp, #24]
   1213c:	str	fp, [sp, #8]
   12140:	str	sl, [sp, #12]
   12144:	mov	r6, r0
   12148:	ldr	r0, [r4, #4]
   1214c:	mov	r2, r6
   12150:	bl	10cfc <XCopyPlane@plt>
   12154:	mov	r2, r6
   12158:	ldmib	r4, {r0, r1}
   1215c:	bl	10e28 <XSetWindowBackgroundPixmap@plt>
   12160:	mov	r1, r9
   12164:	ldr	r0, [r4, #4]
   12168:	bl	10e4c <XFreeGC@plt>
   1216c:	mov	r1, r8
   12170:	ldr	r0, [r4, #4]
   12174:	bl	10d2c <XFreePixmap@plt>
   12178:	ldr	r3, [r4, #16]
   1217c:	cmp	r3, #0
   12180:	strne	r6, [r7, #32]
   12184:	bne	12194 <abort@plt+0x1300>
   12188:	ldr	r0, [r7, #4]
   1218c:	mov	r1, r6
   12190:	bl	10d2c <XFreePixmap@plt>
   12194:	ldmib	r4, {r0, r1}
   12198:	bl	10cc0 <XClearWindow@plt>
   1219c:	ldr	r2, [sp, #124]	; 0x7c
   121a0:	ldr	r3, [r5]
   121a4:	mov	r1, #1
   121a8:	str	r1, [r4, #36]	; 0x24
   121ac:	cmp	r2, r3
   121b0:	bne	121d4 <abort@plt+0x1340>
   121b4:	add	sp, sp, #132	; 0x84
   121b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121bc:	mov	r0, r3
   121c0:	bl	11f00 <abort@plt+0x106c>
   121c4:	b	120b4 <abort@plt+0x1220>
   121c8:	mov	r0, r3
   121cc:	bl	11f00 <abort@plt+0x106c>
   121d0:	b	12080 <abort@plt+0x11ec>
   121d4:	bl	10d20 <__stack_chk_fail@plt>
   121d8:	cmp	r1, #0
   121dc:	beq	123e8 <abort@plt+0x1554>
   121e0:	eor	ip, r0, r1
   121e4:	rsbmi	r1, r1, #0
   121e8:	subs	r2, r1, #1
   121ec:	beq	123b4 <abort@plt+0x1520>
   121f0:	movs	r3, r0
   121f4:	rsbmi	r3, r0, #0
   121f8:	cmp	r3, r1
   121fc:	bls	123c0 <abort@plt+0x152c>
   12200:	tst	r1, r2
   12204:	beq	123d0 <abort@plt+0x153c>
   12208:	clz	r2, r3
   1220c:	clz	r0, r1
   12210:	sub	r2, r0, r2
   12214:	rsbs	r2, r2, #31
   12218:	addne	r2, r2, r2, lsl #1
   1221c:	mov	r0, #0
   12220:	addne	pc, pc, r2, lsl #2
   12224:	nop	{0}
   12228:	cmp	r3, r1, lsl #31
   1222c:	adc	r0, r0, r0
   12230:	subcs	r3, r3, r1, lsl #31
   12234:	cmp	r3, r1, lsl #30
   12238:	adc	r0, r0, r0
   1223c:	subcs	r3, r3, r1, lsl #30
   12240:	cmp	r3, r1, lsl #29
   12244:	adc	r0, r0, r0
   12248:	subcs	r3, r3, r1, lsl #29
   1224c:	cmp	r3, r1, lsl #28
   12250:	adc	r0, r0, r0
   12254:	subcs	r3, r3, r1, lsl #28
   12258:	cmp	r3, r1, lsl #27
   1225c:	adc	r0, r0, r0
   12260:	subcs	r3, r3, r1, lsl #27
   12264:	cmp	r3, r1, lsl #26
   12268:	adc	r0, r0, r0
   1226c:	subcs	r3, r3, r1, lsl #26
   12270:	cmp	r3, r1, lsl #25
   12274:	adc	r0, r0, r0
   12278:	subcs	r3, r3, r1, lsl #25
   1227c:	cmp	r3, r1, lsl #24
   12280:	adc	r0, r0, r0
   12284:	subcs	r3, r3, r1, lsl #24
   12288:	cmp	r3, r1, lsl #23
   1228c:	adc	r0, r0, r0
   12290:	subcs	r3, r3, r1, lsl #23
   12294:	cmp	r3, r1, lsl #22
   12298:	adc	r0, r0, r0
   1229c:	subcs	r3, r3, r1, lsl #22
   122a0:	cmp	r3, r1, lsl #21
   122a4:	adc	r0, r0, r0
   122a8:	subcs	r3, r3, r1, lsl #21
   122ac:	cmp	r3, r1, lsl #20
   122b0:	adc	r0, r0, r0
   122b4:	subcs	r3, r3, r1, lsl #20
   122b8:	cmp	r3, r1, lsl #19
   122bc:	adc	r0, r0, r0
   122c0:	subcs	r3, r3, r1, lsl #19
   122c4:	cmp	r3, r1, lsl #18
   122c8:	adc	r0, r0, r0
   122cc:	subcs	r3, r3, r1, lsl #18
   122d0:	cmp	r3, r1, lsl #17
   122d4:	adc	r0, r0, r0
   122d8:	subcs	r3, r3, r1, lsl #17
   122dc:	cmp	r3, r1, lsl #16
   122e0:	adc	r0, r0, r0
   122e4:	subcs	r3, r3, r1, lsl #16
   122e8:	cmp	r3, r1, lsl #15
   122ec:	adc	r0, r0, r0
   122f0:	subcs	r3, r3, r1, lsl #15
   122f4:	cmp	r3, r1, lsl #14
   122f8:	adc	r0, r0, r0
   122fc:	subcs	r3, r3, r1, lsl #14
   12300:	cmp	r3, r1, lsl #13
   12304:	adc	r0, r0, r0
   12308:	subcs	r3, r3, r1, lsl #13
   1230c:	cmp	r3, r1, lsl #12
   12310:	adc	r0, r0, r0
   12314:	subcs	r3, r3, r1, lsl #12
   12318:	cmp	r3, r1, lsl #11
   1231c:	adc	r0, r0, r0
   12320:	subcs	r3, r3, r1, lsl #11
   12324:	cmp	r3, r1, lsl #10
   12328:	adc	r0, r0, r0
   1232c:	subcs	r3, r3, r1, lsl #10
   12330:	cmp	r3, r1, lsl #9
   12334:	adc	r0, r0, r0
   12338:	subcs	r3, r3, r1, lsl #9
   1233c:	cmp	r3, r1, lsl #8
   12340:	adc	r0, r0, r0
   12344:	subcs	r3, r3, r1, lsl #8
   12348:	cmp	r3, r1, lsl #7
   1234c:	adc	r0, r0, r0
   12350:	subcs	r3, r3, r1, lsl #7
   12354:	cmp	r3, r1, lsl #6
   12358:	adc	r0, r0, r0
   1235c:	subcs	r3, r3, r1, lsl #6
   12360:	cmp	r3, r1, lsl #5
   12364:	adc	r0, r0, r0
   12368:	subcs	r3, r3, r1, lsl #5
   1236c:	cmp	r3, r1, lsl #4
   12370:	adc	r0, r0, r0
   12374:	subcs	r3, r3, r1, lsl #4
   12378:	cmp	r3, r1, lsl #3
   1237c:	adc	r0, r0, r0
   12380:	subcs	r3, r3, r1, lsl #3
   12384:	cmp	r3, r1, lsl #2
   12388:	adc	r0, r0, r0
   1238c:	subcs	r3, r3, r1, lsl #2
   12390:	cmp	r3, r1, lsl #1
   12394:	adc	r0, r0, r0
   12398:	subcs	r3, r3, r1, lsl #1
   1239c:	cmp	r3, r1
   123a0:	adc	r0, r0, r0
   123a4:	subcs	r3, r3, r1
   123a8:	cmp	ip, #0
   123ac:	rsbmi	r0, r0, #0
   123b0:	bx	lr
   123b4:	teq	ip, r0
   123b8:	rsbmi	r0, r0, #0
   123bc:	bx	lr
   123c0:	movcc	r0, #0
   123c4:	asreq	r0, ip, #31
   123c8:	orreq	r0, r0, #1
   123cc:	bx	lr
   123d0:	clz	r2, r1
   123d4:	rsb	r2, r2, #31
   123d8:	cmp	ip, #0
   123dc:	lsr	r0, r3, r2
   123e0:	rsbmi	r0, r0, #0
   123e4:	bx	lr
   123e8:	cmp	r0, #0
   123ec:	mvngt	r0, #-2147483648	; 0x80000000
   123f0:	movlt	r0, #-2147483648	; 0x80000000
   123f4:	b	12418 <abort@plt+0x1584>
   123f8:	cmp	r1, #0
   123fc:	beq	123e8 <abort@plt+0x1554>
   12400:	push	{r0, r1, lr}
   12404:	bl	121e0 <abort@plt+0x134c>
   12408:	pop	{r1, r2, lr}
   1240c:	mul	r3, r2, r0
   12410:	sub	r1, r1, r3
   12414:	bx	lr
   12418:	push	{r1, lr}
   1241c:	mov	r0, #8
   12420:	bl	10cb4 <raise@plt>
   12424:	pop	{r1, pc}
   12428:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1242c:	mov	r7, r0
   12430:	ldr	r6, [pc, #76]	; 12484 <abort@plt+0x15f0>
   12434:	mov	r8, r1
   12438:	ldr	r5, [pc, #72]	; 12488 <abort@plt+0x15f4>
   1243c:	mov	r9, r2
   12440:	add	r6, pc, r6
   12444:	bl	10c94 <_init@@Base>
   12448:	add	r5, pc, r5
   1244c:	rsb	r6, r5, r6
   12450:	asrs	r6, r6, #2
   12454:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   12458:	sub	r5, r5, #4
   1245c:	mov	r4, #0
   12460:	add	r4, r4, #1
   12464:	ldr	r3, [r5, #4]!
   12468:	mov	r0, r7
   1246c:	mov	r1, r8
   12470:	mov	r2, r9
   12474:	blx	r3
   12478:	cmp	r4, r6
   1247c:	bne	12460 <abort@plt+0x15cc>
   12480:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12484:	andeq	r0, r1, r0, lsr #21
   12488:	muleq	r1, r4, sl
   1248c:	bx	lr

Disassembly of section .fini:

00012490 <_fini@@Base>:
   12490:	push	{r3, lr}
   12494:	pop	{r3, pc}
