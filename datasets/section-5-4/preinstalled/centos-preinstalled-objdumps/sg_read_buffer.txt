
centos-preinstalled/sg_read_buffer:     file format elf32-littlearm


Disassembly of section .init:

0001092c <_init@@Base>:
   1092c:	push	{r3, lr}
   10930:	bl	11354 <abort@plt+0x8f4>
   10934:	pop	{r3, pc}

Disassembly of section .plt:

00010938 <sg_set_binary_mode@plt-0x14>:
   10938:	push	{lr}		; (str lr, [sp, #-4]!)
   1093c:	ldr	lr, [pc, #4]	; 10948 <_init@@Base+0x1c>
   10940:	add	lr, pc, lr
   10944:	ldr	pc, [lr, #8]!
   10948:			; <UNDEFINED> instruction: 0x000116b8

0001094c <sg_set_binary_mode@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1720]!	; 0x6b8

00010958 <dStrHex@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #69632	; 0x11000
   10960:	ldr	pc, [ip, #1712]!	; 0x6b0

00010964 <free@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #69632	; 0x11000
   1096c:	ldr	pc, [ip, #1704]!	; 0x6a8

00010970 <sg_cmds_close_device@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #69632	; 0x11000
   10978:	ldr	pc, [ip, #1696]!	; 0x6a0

0001097c <__stack_chk_fail@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #69632	; 0x11000
   10984:	ldr	pc, [ip, #1688]!	; 0x698

00010988 <perror@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #69632	; 0x11000
   10990:	ldr	pc, [ip, #1680]!	; 0x690

00010994 <fwrite@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1672]!	; 0x688

000109a0 <malloc@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1664]!	; 0x680

000109ac <__libc_start_main@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1656]!	; 0x678

000109b8 <__gmon_start__@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1648]!	; 0x670

000109c4 <getopt_long@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1640]!	; 0x668

000109d0 <__ctype_b_loc@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1632]!	; 0x660

000109dc <strlen@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1624]!	; 0x658

000109e8 <memset@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1616]!	; 0x650

000109f4 <putchar@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1608]!	; 0x648

00010a00 <__printf_chk@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #69632	; 0x11000
   10a08:	ldr	pc, [ip, #1600]!	; 0x640

00010a0c <__fprintf_chk@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #69632	; 0x11000
   10a14:	ldr	pc, [ip, #1592]!	; 0x638

00010a18 <fputc@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #69632	; 0x11000
   10a20:	ldr	pc, [ip, #1584]!	; 0x630

00010a24 <safe_strerror@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #69632	; 0x11000
   10a2c:	ldr	pc, [ip, #1576]!	; 0x628

00010a30 <sg_get_num@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #69632	; 0x11000
   10a38:	ldr	pc, [ip, #1568]!	; 0x620

00010a3c <sg_cmds_open_device@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #69632	; 0x11000
   10a44:	ldr	pc, [ip, #1560]!	; 0x618

00010a48 <sg_ll_read_buffer@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #69632	; 0x11000
   10a50:	ldr	pc, [ip, #1552]!	; 0x610

00010a54 <strncmp@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #69632	; 0x11000
   10a5c:	ldr	pc, [ip, #1544]!	; 0x608

00010a60 <abort@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #69632	; 0x11000
   10a68:	ldr	pc, [ip, #1536]!	; 0x600

Disassembly of section .text:

00010a6c <.text>:
   10a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a70:	movw	fp, #8472	; 0x2118
   10a74:	movt	fp, #2
   10a78:	sub	sp, sp, #76	; 0x4c
   10a7c:	mov	r4, #0
   10a80:	movw	sl, #5428	; 0x1534
   10a84:	ldr	r3, [fp]
   10a88:	add	r9, sp, #64	; 0x40
   10a8c:	movt	sl, #1
   10a90:	mov	r6, r0
   10a94:	mov	r7, r1
   10a98:	mov	r5, r4
   10a9c:	mov	r8, r4
   10aa0:	movw	r2, #8488	; 0x2128
   10aa4:	str	r4, [sp, #32]
   10aa8:	movt	r2, #2
   10aac:	str	r4, [sp, #48]	; 0x30
   10ab0:	str	r2, [sp, #20]
   10ab4:	mov	r2, #4
   10ab8:	str	r4, [sp, #36]	; 0x24
   10abc:	str	r4, [sp, #40]	; 0x28
   10ac0:	str	r4, [sp, #24]
   10ac4:	str	r2, [sp, #44]	; 0x2c
   10ac8:	str	r3, [sp, #68]	; 0x44
   10acc:	str	r4, [sp, #28]
   10ad0:	str	r9, [sp]
   10ad4:	movw	r2, #5624	; 0x15f8
   10ad8:	movw	r3, #8308	; 0x2074
   10adc:	movt	r2, #1
   10ae0:	movt	r3, #2
   10ae4:	mov	r0, r6
   10ae8:	mov	r1, r7
   10aec:	str	r8, [sp, #64]	; 0x40
   10af0:	bl	109c4 <getopt_long@plt>
   10af4:	cmn	r0, #1
   10af8:	beq	10e34 <abort@plt+0x3d4>
   10afc:	sub	r3, r0, #63	; 0x3f
   10b00:	cmp	r3, #55	; 0x37
   10b04:	ldrls	pc, [pc, r3, lsl #2]
   10b08:	b	10dbc <abort@plt+0x35c>
   10b0c:	andeq	r0, r1, ip, lsr #27
   10b10:			; <UNDEFINED> instruction: 0x00010dbc
   10b14:			; <UNDEFINED> instruction: 0x00010dbc
   10b18:			; <UNDEFINED> instruction: 0x00010dbc
   10b1c:			; <UNDEFINED> instruction: 0x00010dbc
   10b20:			; <UNDEFINED> instruction: 0x00010dbc
   10b24:			; <UNDEFINED> instruction: 0x00010dbc
   10b28:			; <UNDEFINED> instruction: 0x00010dbc
   10b2c:			; <UNDEFINED> instruction: 0x00010dbc
   10b30:	muleq	r1, ip, sp
   10b34:			; <UNDEFINED> instruction: 0x00010dbc
   10b38:			; <UNDEFINED> instruction: 0x00010dbc
   10b3c:			; <UNDEFINED> instruction: 0x00010dbc
   10b40:			; <UNDEFINED> instruction: 0x00010dbc
   10b44:			; <UNDEFINED> instruction: 0x00010dbc
   10b48:			; <UNDEFINED> instruction: 0x00010dbc
   10b4c:			; <UNDEFINED> instruction: 0x00010dbc
   10b50:			; <UNDEFINED> instruction: 0x00010dbc
   10b54:			; <UNDEFINED> instruction: 0x00010dbc
   10b58:			; <UNDEFINED> instruction: 0x00010dbc
   10b5c:			; <UNDEFINED> instruction: 0x00010dbc
   10b60:			; <UNDEFINED> instruction: 0x00010dbc
   10b64:			; <UNDEFINED> instruction: 0x00010dbc
   10b68:	andeq	r0, r1, ip, asr sp
   10b6c:			; <UNDEFINED> instruction: 0x00010dbc
   10b70:			; <UNDEFINED> instruction: 0x00010dbc
   10b74:			; <UNDEFINED> instruction: 0x00010dbc
   10b78:			; <UNDEFINED> instruction: 0x00010dbc
   10b7c:			; <UNDEFINED> instruction: 0x00010dbc
   10b80:			; <UNDEFINED> instruction: 0x00010dbc
   10b84:			; <UNDEFINED> instruction: 0x00010dbc
   10b88:			; <UNDEFINED> instruction: 0x00010dbc
   10b8c:			; <UNDEFINED> instruction: 0x00010dbc
   10b90:			; <UNDEFINED> instruction: 0x00010dbc
   10b94:			; <UNDEFINED> instruction: 0x00010dbc
   10b98:			; <UNDEFINED> instruction: 0x00010dbc
   10b9c:			; <UNDEFINED> instruction: 0x00010dbc
   10ba0:			; <UNDEFINED> instruction: 0x00010dbc
   10ba4:			; <UNDEFINED> instruction: 0x00010dbc
   10ba8:			; <UNDEFINED> instruction: 0x00010dbc
   10bac:			; <UNDEFINED> instruction: 0x00010dbc
   10bb0:	andeq	r0, r1, ip, lsr #27
   10bb4:	andeq	r0, r1, ip, lsl sp
   10bb8:			; <UNDEFINED> instruction: 0x00010dbc
   10bbc:			; <UNDEFINED> instruction: 0x00010dbc
   10bc0:	ldrdeq	r0, [r1], -ip
   10bc4:	andeq	r0, r1, ip, asr #24
   10bc8:			; <UNDEFINED> instruction: 0x00010dbc
   10bcc:	andeq	r0, r1, ip, lsl #24
   10bd0:			; <UNDEFINED> instruction: 0x00010dbc
   10bd4:			; <UNDEFINED> instruction: 0x00010dbc
   10bd8:	strdeq	r0, [r1], -ip
   10bdc:			; <UNDEFINED> instruction: 0x00010dbc
   10be0:			; <UNDEFINED> instruction: 0x00010dbc
   10be4:			; <UNDEFINED> instruction: 0x00010dbc
   10be8:	andeq	r0, r1, ip, ror #23
   10bec:	ldr	r3, [sp, #28]
   10bf0:	add	r3, r3, #1
   10bf4:	str	r3, [sp, #28]
   10bf8:	b	10ad0 <abort@plt+0x70>
   10bfc:	ldr	r2, [sp, #32]
   10c00:	add	r2, r2, #1
   10c04:	str	r2, [sp, #32]
   10c08:	b	10ad0 <abort@plt+0x70>
   10c0c:	ldr	r3, [sp, #20]
   10c10:	ldr	r0, [r3]
   10c14:	bl	10a30 <sg_get_num@plt>
   10c18:	cmp	r0, #0
   10c1c:	str	r0, [sp, #48]	; 0x30
   10c20:	bge	10ad0 <abort@plt+0x70>
   10c24:	movw	r3, #8484	; 0x2124
   10c28:	movt	r3, #2
   10c2c:	movw	r0, #5776	; 0x1690
   10c30:	mov	r1, #1
   10c34:	ldr	r3, [r3]
   10c38:	movt	r0, #1
   10c3c:	mov	r2, #27
   10c40:	bl	10994 <fwrite@plt>
   10c44:	mov	r0, #1
   10c48:	b	10d84 <abort@plt+0x324>
   10c4c:	bl	109d0 <__ctype_b_loc@plt>
   10c50:	ldr	r3, [sp, #20]
   10c54:	ldr	r5, [r3]
   10c58:	ldrb	r3, [r5]
   10c5c:	lsl	r3, r3, #1
   10c60:	ldr	r2, [r0]
   10c64:	mov	r0, r5
   10c68:	ldrh	r4, [r2, r3]
   10c6c:	and	r4, r4, #2048	; 0x800
   10c70:	uxth	r4, r4
   10c74:	cmp	r4, #0
   10c78:	bne	10dfc <abort@plt+0x39c>
   10c7c:	bl	109dc <strlen@plt>
   10c80:	str	r6, [sp, #56]	; 0x38
   10c84:	str	r7, [sp, #60]	; 0x3c
   10c88:	mov	r6, r5
   10c8c:	mov	r7, r4
   10c90:	str	fp, [sp, #52]	; 0x34
   10c94:	mov	fp, r4
   10c98:	mov	r4, r0
   10c9c:	ldr	r0, [sl, fp]
   10ca0:	mov	r1, r6
   10ca4:	mov	r2, r4
   10ca8:	movw	r5, #5428	; 0x1534
   10cac:	bl	10a54 <strncmp@plt>
   10cb0:	movt	r5, #1
   10cb4:	cmp	r0, #0
   10cb8:	beq	10e84 <abort@plt+0x424>
   10cbc:	add	r7, r7, #1
   10cc0:	add	fp, fp, #12
   10cc4:	cmp	r7, #8
   10cc8:	bne	10c9c <abort@plt+0x23c>
   10ccc:	ldr	fp, [sp, #52]	; 0x34
   10cd0:	bl	1144c <abort@plt+0x9ec>
   10cd4:	mov	r0, #1
   10cd8:	b	10d84 <abort@plt+0x324>
   10cdc:	ldr	r2, [sp, #20]
   10ce0:	ldr	r0, [r2]
   10ce4:	bl	10a30 <sg_get_num@plt>
   10ce8:	cmp	r0, #0
   10cec:	str	r0, [sp, #44]	; 0x2c
   10cf0:	bge	10ad0 <abort@plt+0x70>
   10cf4:	movw	r3, #8484	; 0x2124
   10cf8:	movt	r3, #2
   10cfc:	movw	r0, #5692	; 0x163c
   10d00:	mov	r1, #1
   10d04:	ldr	r3, [r3]
   10d08:	movt	r0, #1
   10d0c:	mov	r2, #27
   10d10:	bl	10994 <fwrite@plt>
   10d14:	mov	r0, #1
   10d18:	b	10d84 <abort@plt+0x324>
   10d1c:	ldr	r3, [sp, #20]
   10d20:	ldr	r0, [r3]
   10d24:	bl	10a30 <sg_get_num@plt>
   10d28:	cmp	r0, #255	; 0xff
   10d2c:	str	r0, [sp, #36]	; 0x24
   10d30:	bls	10ad0 <abort@plt+0x70>
   10d34:	movw	r3, #8484	; 0x2124
   10d38:	movt	r3, #2
   10d3c:	movw	r0, #5640	; 0x1608
   10d40:	mov	r1, #1
   10d44:	ldr	r3, [r3]
   10d48:	movt	r0, #1
   10d4c:	mov	r2, #51	; 0x33
   10d50:	bl	10994 <fwrite@plt>
   10d54:	mov	r0, #1
   10d58:	b	10d84 <abort@plt+0x324>
   10d5c:	movw	r1, #8484	; 0x2124
   10d60:	movt	r1, #2
   10d64:	movw	r2, #5804	; 0x16ac
   10d68:	movw	r3, #5820	; 0x16bc
   10d6c:	ldr	r0, [r1]
   10d70:	movt	r2, #1
   10d74:	movt	r3, #1
   10d78:	mov	r1, #1
   10d7c:	bl	10a0c <__fprintf_chk@plt>
   10d80:	mov	r0, #0
   10d84:	ldr	r2, [sp, #68]	; 0x44
   10d88:	ldr	r3, [fp]
   10d8c:	cmp	r2, r3
   10d90:	bne	1128c <abort@plt+0x82c>
   10d94:	add	sp, sp, #76	; 0x4c
   10d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d9c:	ldr	r2, [sp, #40]	; 0x28
   10da0:	add	r2, r2, #1
   10da4:	str	r2, [sp, #40]	; 0x28
   10da8:	b	10ad0 <abort@plt+0x70>
   10dac:	ldr	r3, [sp, #24]
   10db0:	add	r3, r3, #1
   10db4:	str	r3, [sp, #24]
   10db8:	b	10ad0 <abort@plt+0x70>
   10dbc:	movw	r4, #8484	; 0x2124
   10dc0:	movt	r4, #2
   10dc4:	mov	r3, r0
   10dc8:	movw	r2, #5836	; 0x16cc
   10dcc:	ldr	r0, [r4]
   10dd0:	movt	r2, #1
   10dd4:	mov	r1, #1
   10dd8:	bl	10a0c <__fprintf_chk@plt>
   10ddc:	ldr	r3, [r4]
   10de0:	movw	r0, #5872	; 0x16f0
   10de4:	mov	r1, #1
   10de8:	movt	r0, #1
   10dec:	movw	r2, #767	; 0x2ff
   10df0:	bl	10994 <fwrite@plt>
   10df4:	mov	r0, #1
   10df8:	b	10d84 <abort@plt+0x324>
   10dfc:	bl	10a30 <sg_get_num@plt>
   10e00:	cmp	r0, #31
   10e04:	mov	r5, r0
   10e08:	bls	10ad0 <abort@plt+0x70>
   10e0c:	movw	r3, #8484	; 0x2124
   10e10:	movt	r3, #2
   10e14:	movw	r0, #5720	; 0x1658
   10e18:	mov	r1, #1
   10e1c:	ldr	r3, [r3]
   10e20:	movt	r0, #1
   10e24:	mov	r2, #52	; 0x34
   10e28:	bl	10994 <fwrite@plt>
   10e2c:	mov	r0, #1
   10e30:	b	10d84 <abort@plt+0x324>
   10e34:	ldr	r2, [sp, #24]
   10e38:	ldr	r4, [sp, #28]
   10e3c:	cmp	r2, #0
   10e40:	beq	10ea4 <abort@plt+0x444>
   10e44:	cmp	r2, #1
   10e48:	beq	10f30 <abort@plt+0x4d0>
   10e4c:	movw	r4, #8484	; 0x2124
   10e50:	movt	r4, #2
   10e54:	movw	r2, #767	; 0x2ff
   10e58:	mov	r1, #1
   10e5c:	ldr	r3, [r4]
   10e60:	movw	r0, #5872	; 0x16f0
   10e64:	movt	r0, #1
   10e68:	bl	10994 <fwrite@plt>
   10e6c:	ldr	r1, [r4]
   10e70:	mov	r0, #10
   10e74:	bl	10a18 <fputc@plt>
   10e78:	bl	1144c <abort@plt+0x9ec>
   10e7c:	mov	r0, #0
   10e80:	b	10d84 <abort@plt+0x324>
   10e84:	mov	r3, r7
   10e88:	mov	r2, #12
   10e8c:	mla	r3, r2, r3, r5
   10e90:	ldr	r6, [sp, #56]	; 0x38
   10e94:	ldr	r7, [sp, #60]	; 0x3c
   10e98:	ldr	fp, [sp, #52]	; 0x34
   10e9c:	ldr	r5, [r3, #4]
   10ea0:	b	10ad0 <abort@plt+0x70>
   10ea4:	movw	r9, #8480	; 0x2120
   10ea8:	movt	r9, #2
   10eac:	ldr	r2, [r9]
   10eb0:	cmp	r6, r2
   10eb4:	bgt	10edc <abort@plt+0x47c>
   10eb8:	movw	r4, #8484	; 0x2124
   10ebc:	movt	r4, #2
   10ec0:	movw	r0, #6640	; 0x19f0
   10ec4:	mov	r1, #1
   10ec8:	ldr	r3, [r4]
   10ecc:	mov	r2, #21
   10ed0:	movt	r0, #1
   10ed4:	bl	10994 <fwrite@plt>
   10ed8:	b	10ddc <abort@plt+0x37c>
   10edc:	add	r3, r2, #1
   10ee0:	ldr	r8, [r7, r2, lsl #2]
   10ee4:	cmp	r6, r3
   10ee8:	str	r3, [r9]
   10eec:	ble	10f58 <abort@plt+0x4f8>
   10ef0:	movw	r5, #8484	; 0x2124
   10ef4:	movt	r5, #2
   10ef8:	ldr	r3, [r7, r3, lsl #2]
   10efc:	movw	r2, #6664	; 0x1a08
   10f00:	ldr	r0, [r5]
   10f04:	movt	r2, #1
   10f08:	mov	r1, #1
   10f0c:	movw	r4, #8484	; 0x2124
   10f10:	bl	10a0c <__fprintf_chk@plt>
   10f14:	ldr	r3, [r9]
   10f18:	movt	r4, #2
   10f1c:	add	r3, r3, #1
   10f20:	str	r3, [r9]
   10f24:	cmp	r6, r3
   10f28:	bgt	10ef8 <abort@plt+0x498>
   10f2c:	b	10ddc <abort@plt+0x37c>
   10f30:	movw	r3, #8484	; 0x2124
   10f34:	movt	r3, #2
   10f38:	ldr	r1, [sp, #24]
   10f3c:	movw	r0, #5872	; 0x16f0
   10f40:	ldr	r3, [r3]
   10f44:	movt	r0, #1
   10f48:	movw	r2, #767	; 0x2ff
   10f4c:	bl	10994 <fwrite@plt>
   10f50:	mov	r0, #0
   10f54:	b	10d84 <abort@plt+0x324>
   10f58:	cmp	r8, #0
   10f5c:	beq	10eb8 <abort@plt+0x458>
   10f60:	ldr	r3, [sp, #44]	; 0x2c
   10f64:	cmp	r3, #0
   10f68:	bgt	11110 <abort@plt+0x6b0>
   10f6c:	ldr	r6, [sp, #24]
   10f70:	ldr	r2, [sp, #32]
   10f74:	cmp	r2, #0
   10f78:	beq	10f8c <abort@plt+0x52c>
   10f7c:	mov	r0, #1
   10f80:	bl	1094c <sg_set_binary_mode@plt>
   10f84:	cmp	r0, #0
   10f88:	blt	1121c <abort@plt+0x7bc>
   10f8c:	mov	r0, r8
   10f90:	mov	r1, #0
   10f94:	mov	r2, r4
   10f98:	bl	10a3c <sg_cmds_open_device@plt>
   10f9c:	subs	r7, r0, #0
   10fa0:	blt	11130 <abort@plt+0x6d0>
   10fa4:	ldr	r3, [sp, #44]	; 0x2c
   10fa8:	mov	r9, #1
   10fac:	str	r6, [sp]
   10fb0:	mov	r1, r5
   10fb4:	ldr	r2, [sp, #36]	; 0x24
   10fb8:	str	r3, [sp, #4]
   10fbc:	str	r4, [sp, #12]
   10fc0:	ldr	r3, [sp, #48]	; 0x30
   10fc4:	str	r9, [sp, #8]
   10fc8:	bl	10a48 <sg_ll_read_buffer@plt>
   10fcc:	subs	r8, r0, #0
   10fd0:	beq	11168 <abort@plt+0x708>
   10fd4:	sub	r3, r8, #2
   10fd8:	cmp	r3, #9
   10fdc:	ldrls	pc, [pc, r3, lsl #2]
   10fe0:	b	110ec <abort@plt+0x68c>
   10fe4:	andeq	r1, r1, r8, asr #1
   10fe8:	andeq	r1, r1, ip, ror #1
   10fec:	andeq	r1, r1, ip, ror #1
   10ff0:	andeq	r1, r1, r4, lsr #1
   10ff4:	andeq	r1, r1, r0, lsl #1
   10ff8:	andeq	r1, r1, ip, ror #1
   10ffc:	andeq	r1, r1, ip, ror #1
   11000:	andeq	r1, r1, ip, asr r0
   11004:	andeq	r1, r1, ip, ror #1
   11008:	andeq	r1, r1, ip
   1100c:	movw	r3, #8484	; 0x2124
   11010:	movt	r3, #2
   11014:	movw	r0, #6860	; 0x1acc
   11018:	mov	r1, #1
   1101c:	ldr	r3, [r3]
   11020:	movt	r0, #1
   11024:	mov	r2, #29
   11028:	bl	10994 <fwrite@plt>
   1102c:	cmp	r6, #0
   11030:	beq	1103c <abort@plt+0x5dc>
   11034:	mov	r0, r6
   11038:	bl	10964 <free@plt>
   1103c:	mov	r0, r7
   11040:	bl	10970 <sg_cmds_close_device@plt>
   11044:	cmp	r0, #0
   11048:	blt	11230 <abort@plt+0x7d0>
   1104c:	cmp	r8, #0
   11050:	movge	r0, r8
   11054:	movlt	r0, #99	; 0x63
   11058:	b	10d84 <abort@plt+0x324>
   1105c:	movw	r3, #8484	; 0x2124
   11060:	movt	r3, #2
   11064:	movw	r0, #6892	; 0x1aec
   11068:	mov	r1, #1
   1106c:	ldr	r3, [r3]
   11070:	mov	r2, #34	; 0x22
   11074:	movt	r0, #1
   11078:	bl	10994 <fwrite@plt>
   1107c:	b	1102c <abort@plt+0x5cc>
   11080:	movw	r3, #8484	; 0x2124
   11084:	movt	r3, #2
   11088:	movw	r0, #6820	; 0x1aa4
   1108c:	mov	r1, #1
   11090:	ldr	r3, [r3]
   11094:	mov	r2, #37	; 0x25
   11098:	movt	r0, #1
   1109c:	bl	10994 <fwrite@plt>
   110a0:	b	1102c <abort@plt+0x5cc>
   110a4:	movw	r3, #8484	; 0x2124
   110a8:	movt	r3, #2
   110ac:	movw	r0, #6928	; 0x1b10
   110b0:	mov	r1, #1
   110b4:	ldr	r3, [r3]
   110b8:	mov	r2, #29
   110bc:	movt	r0, #1
   110c0:	bl	10994 <fwrite@plt>
   110c4:	b	1102c <abort@plt+0x5cc>
   110c8:	movw	r3, #8484	; 0x2124
   110cc:	movt	r3, #2
   110d0:	movw	r0, #6780	; 0x1a7c
   110d4:	mov	r1, #1
   110d8:	ldr	r3, [r3]
   110dc:	mov	r2, #37	; 0x25
   110e0:	movt	r0, #1
   110e4:	bl	10994 <fwrite@plt>
   110e8:	b	1102c <abort@plt+0x5cc>
   110ec:	movw	r3, #8484	; 0x2124
   110f0:	movt	r3, #2
   110f4:	movw	r2, #6960	; 0x1b30
   110f8:	mov	r1, #1
   110fc:	ldr	r0, [r3]
   11100:	movt	r2, #1
   11104:	mov	r3, r8
   11108:	bl	10a0c <__fprintf_chk@plt>
   1110c:	b	1102c <abort@plt+0x5cc>
   11110:	mov	r0, r3
   11114:	bl	109a0 <malloc@plt>
   11118:	subs	r6, r0, #0
   1111c:	beq	111f4 <abort@plt+0x794>
   11120:	ldr	r1, [sp, #24]
   11124:	ldr	r2, [sp, #44]	; 0x2c
   11128:	bl	109e8 <memset@plt>
   1112c:	b	10f70 <abort@plt+0x510>
   11130:	movw	r3, #8484	; 0x2124
   11134:	movt	r3, #2
   11138:	rsb	r0, r7, #0
   1113c:	ldr	r4, [r3]
   11140:	bl	10a24 <safe_strerror@plt>
   11144:	mov	r3, r8
   11148:	movw	r2, #6760	; 0x1a68
   1114c:	mov	r1, #1
   11150:	movt	r2, #1
   11154:	str	r0, [sp]
   11158:	mov	r0, r4
   1115c:	bl	10a0c <__fprintf_chk@plt>
   11160:	mov	r0, #15
   11164:	b	10d84 <abort@plt+0x324>
   11168:	ldr	r2, [sp, #44]	; 0x2c
   1116c:	cmp	r2, #0
   11170:	ble	1102c <abort@plt+0x5cc>
   11174:	ldr	r3, [sp, #32]
   11178:	cmp	r3, #0
   1117c:	bne	1126c <abort@plt+0x80c>
   11180:	ldr	r2, [sp, #40]	; 0x28
   11184:	adds	r3, r2, #0
   11188:	ldr	r2, [sp, #44]	; 0x2c
   1118c:	movne	r3, #1
   11190:	cmp	r2, #3
   11194:	orrle	r3, r3, #1
   11198:	cmp	r3, #0
   1119c:	bne	11290 <abort@plt+0x830>
   111a0:	cmp	r5, #3
   111a4:	beq	112cc <abort@plt+0x86c>
   111a8:	cmp	r5, #11
   111ac:	bne	112b0 <abort@plt+0x850>
   111b0:	ldrb	r4, [r6, #2]
   111b4:	mov	r0, r9
   111b8:	ldrb	r3, [r6, #3]
   111bc:	movw	r1, #7072	; 0x1ba0
   111c0:	and	r4, r4, #31
   111c4:	ldrb	r2, [r6]
   111c8:	movt	r1, #1
   111cc:	orr	r4, r3, r4, lsl #8
   111d0:	and	r2, r2, #1
   111d4:	bl	10a00 <__printf_chk@plt>
   111d8:	mov	r0, r9
   111dc:	mov	r2, r4
   111e0:	movw	r1, #7084	; 0x1bac
   111e4:	mov	r3, r4
   111e8:	movt	r1, #1
   111ec:	bl	10a00 <__printf_chk@plt>
   111f0:	b	11034 <abort@plt+0x5d4>
   111f4:	movw	r1, #8484	; 0x2124
   111f8:	movt	r1, #2
   111fc:	ldr	r3, [sp, #44]	; 0x2c
   11200:	movw	r2, #6696	; 0x1a28
   11204:	ldr	r0, [r1]
   11208:	movt	r2, #1
   1120c:	mov	r1, #1
   11210:	bl	10a0c <__fprintf_chk@plt>
   11214:	mov	r0, #99	; 0x63
   11218:	b	10d84 <abort@plt+0x324>
   1121c:	movw	r0, #6740	; 0x1a54
   11220:	movt	r0, #1
   11224:	bl	10988 <perror@plt>
   11228:	mov	r0, #15
   1122c:	b	10d84 <abort@plt+0x324>
   11230:	movw	r3, #8484	; 0x2124
   11234:	movt	r3, #2
   11238:	rsb	r0, r0, #0
   1123c:	ldr	r4, [r3]
   11240:	bl	10a24 <safe_strerror@plt>
   11244:	movw	r2, #7120	; 0x1bd0
   11248:	mov	r1, #1
   1124c:	movt	r2, #1
   11250:	mov	r3, r0
   11254:	mov	r0, r4
   11258:	bl	10a0c <__fprintf_chk@plt>
   1125c:	cmp	r8, #0
   11260:	bne	1104c <abort@plt+0x5ec>
   11264:	mov	r0, #15
   11268:	b	10d84 <abort@plt+0x324>
   1126c:	mov	r4, r8
   11270:	mov	r5, r2
   11274:	ldrb	r0, [r6, r4]
   11278:	add	r4, r4, #1
   1127c:	bl	109f4 <putchar@plt>
   11280:	cmp	r4, r5
   11284:	bne	11274 <abort@plt+0x814>
   11288:	b	1102c <abort@plt+0x5cc>
   1128c:	bl	1097c <__stack_chk_fail@plt>
   11290:	ldr	r3, [sp, #40]	; 0x28
   11294:	mov	r1, r2
   11298:	mov	r0, r6
   1129c:	cmp	r3, #1
   112a0:	movgt	r2, #0
   112a4:	movle	r2, #1
   112a8:	bl	10958 <dStrHex@plt>
   112ac:	b	1102c <abort@plt+0x5cc>
   112b0:	cmp	r4, #1
   112b4:	ldr	r1, [sp, #44]	; 0x2c
   112b8:	mov	r0, r6
   112bc:	movgt	r2, #0
   112c0:	movle	r2, #1
   112c4:	bl	10958 <dStrHex@plt>
   112c8:	b	1102c <abort@plt+0x5cc>
   112cc:	ldrb	ip, [r6, #2]
   112d0:	mov	r0, r9
   112d4:	ldrb	r4, [r6, #1]
   112d8:	movw	r1, #6988	; 0x1b4c
   112dc:	ldrb	r3, [r6, #3]
   112e0:	movt	r1, #1
   112e4:	lsl	ip, ip, #8
   112e8:	ldrb	r2, [r6]
   112ec:	orr	r4, ip, r4, lsl #16
   112f0:	orr	r4, r4, r3
   112f4:	lsl	r3, r9, r2
   112f8:	bl	10a00 <__printf_chk@plt>
   112fc:	mov	r0, r9
   11300:	mov	r2, r4
   11304:	movw	r1, #7044	; 0x1b84
   11308:	mov	r3, r4
   1130c:	movt	r1, #1
   11310:	bl	10a00 <__printf_chk@plt>
   11314:	b	11034 <abort@plt+0x5d4>
   11318:	mov	fp, #0
   1131c:	mov	lr, #0
   11320:	pop	{r1}		; (ldr r1, [sp], #4)
   11324:	mov	r2, sp
   11328:	push	{r2}		; (str r2, [sp, #-4]!)
   1132c:	push	{r0}		; (str r0, [sp, #-4]!)
   11330:	ldr	ip, [pc, #16]	; 11348 <abort@plt+0x8e8>
   11334:	push	{ip}		; (str ip, [sp, #-4]!)
   11338:	ldr	r0, [pc, #12]	; 1134c <abort@plt+0x8ec>
   1133c:	ldr	r3, [pc, #12]	; 11350 <abort@plt+0x8f0>
   11340:	bl	109ac <__libc_start_main@plt>
   11344:	bl	10a60 <abort@plt>
   11348:	andeq	r1, r1, r0, lsr #10
   1134c:	andeq	r0, r1, ip, ror #20
   11350:			; <UNDEFINED> instruction: 0x000114bc
   11354:	ldr	r3, [pc, #20]	; 11370 <abort@plt+0x910>
   11358:	ldr	r2, [pc, #20]	; 11374 <abort@plt+0x914>
   1135c:	add	r3, pc, r3
   11360:	ldr	r2, [r3, r2]
   11364:	cmp	r2, #0
   11368:	bxeq	lr
   1136c:	b	109b8 <__gmon_start__@plt>
   11370:	muleq	r1, ip, ip
   11374:	andeq	r0, r0, ip, rrx
   11378:	push	{r3, lr}
   1137c:	movw	r0, #8468	; 0x2114
   11380:	ldr	r3, [pc, #36]	; 113ac <abort@plt+0x94c>
   11384:	movt	r0, #2
   11388:	rsb	r3, r0, r3
   1138c:	cmp	r3, #6
   11390:	popls	{r3, pc}
   11394:	movw	r3, #0
   11398:	movt	r3, #0
   1139c:	cmp	r3, #0
   113a0:	popeq	{r3, pc}
   113a4:	blx	r3
   113a8:	pop	{r3, pc}
   113ac:	andeq	r2, r2, r7, lsl r1
   113b0:	push	{r3, lr}
   113b4:	movw	r0, #8468	; 0x2114
   113b8:	movw	r3, #8468	; 0x2114
   113bc:	movt	r0, #2
   113c0:	movt	r3, #2
   113c4:	rsb	r3, r0, r3
   113c8:	asr	r3, r3, #2
   113cc:	add	r3, r3, r3, lsr #31
   113d0:	asrs	r1, r3, #1
   113d4:	popeq	{r3, pc}
   113d8:	movw	r2, #0
   113dc:	movt	r2, #0
   113e0:	cmp	r2, #0
   113e4:	popeq	{r3, pc}
   113e8:	blx	r2
   113ec:	pop	{r3, pc}
   113f0:	push	{r4, lr}
   113f4:	movw	r4, #8492	; 0x212c
   113f8:	movt	r4, #2
   113fc:	ldrb	r3, [r4]
   11400:	cmp	r3, #0
   11404:	popne	{r4, pc}
   11408:	bl	11378 <abort@plt+0x918>
   1140c:	mov	r3, #1
   11410:	strb	r3, [r4]
   11414:	pop	{r4, pc}
   11418:	movw	r0, #7932	; 0x1efc
   1141c:	movt	r0, #2
   11420:	push	{r3, lr}
   11424:	ldr	r3, [r0]
   11428:	cmp	r3, #0
   1142c:	beq	11444 <abort@plt+0x9e4>
   11430:	movw	r3, #0
   11434:	movt	r3, #0
   11438:	cmp	r3, #0
   1143c:	beq	11444 <abort@plt+0x9e4>
   11440:	blx	r3
   11444:	pop	{r3, lr}
   11448:	b	113b0 <abort@plt+0x950>
   1144c:	push	{r4, r5, r6, r7, lr}
   11450:	movw	r6, #8484	; 0x2124
   11454:	movt	r6, #2
   11458:	sub	sp, sp, #20
   1145c:	movw	r0, #5524	; 0x1594
   11460:	mov	r1, #1
   11464:	ldr	r3, [r6]
   11468:	movt	r0, #1
   1146c:	mov	r2, #74	; 0x4a
   11470:	ldr	r4, [pc, #64]	; 114b8 <abort@plt+0xa58>
   11474:	bl	10994 <fwrite@plt>
   11478:	add	r7, r4, #96	; 0x60
   1147c:	ldr	ip, [r4, #-4]
   11480:	movw	r2, #5600	; 0x15e0
   11484:	ldr	r5, [r4, #-8]
   11488:	movt	r2, #1
   1148c:	ldr	lr, [r4], #12
   11490:	mov	r1, #1
   11494:	ldr	r0, [r6]
   11498:	mov	r3, ip
   1149c:	str	ip, [sp]
   114a0:	stmib	sp, {r5, lr}
   114a4:	bl	10a0c <__fprintf_chk@plt>
   114a8:	cmp	r4, r7
   114ac:	bne	1147c <abort@plt+0xa1c>
   114b0:	add	sp, sp, #20
   114b4:	pop	{r4, r5, r6, r7, pc}
   114b8:	andeq	r1, r1, ip, lsr r5
   114bc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   114c0:	mov	r7, r0
   114c4:	ldr	r6, [pc, #76]	; 11518 <abort@plt+0xab8>
   114c8:	mov	r8, r1
   114cc:	ldr	r5, [pc, #72]	; 1151c <abort@plt+0xabc>
   114d0:	mov	r9, r2
   114d4:	add	r6, pc, r6
   114d8:	bl	1092c <_init@@Base>
   114dc:	add	r5, pc, r5
   114e0:	rsb	r6, r5, r6
   114e4:	asrs	r6, r6, #2
   114e8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   114ec:	sub	r5, r5, #4
   114f0:	mov	r4, #0
   114f4:	add	r4, r4, #1
   114f8:	ldr	r3, [r5, #4]!
   114fc:	mov	r0, r7
   11500:	mov	r1, r8
   11504:	mov	r2, r9
   11508:	blx	r3
   1150c:	cmp	r4, r6
   11510:	bne	114f4 <abort@plt+0xa94>
   11514:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11518:	andeq	r0, r1, ip, lsl sl
   1151c:	andeq	r0, r1, r0, lsl sl
   11520:	bx	lr

Disassembly of section .fini:

00011524 <_fini@@Base>:
   11524:	push	{r3, lr}
   11528:	pop	{r3, pc}
