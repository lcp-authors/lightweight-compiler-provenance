
centos-preinstalled/aulastlog:     file format elf32-littlearm


Disassembly of section .init:

00010a0c <_init@@Base>:
   10a0c:	push	{r3, lr}
   10a10:	bl	10ff0 <abort@plt+0x48c>
   10a14:	pop	{r3, pc}

Disassembly of section .plt:

00010a18 <strcmp@plt-0x14>:
   10a18:	push	{lr}		; (str lr, [sp, #-4]!)
   10a1c:	ldr	lr, [pc, #4]	; 10a28 <_init@@Base+0x1c>
   10a20:	add	lr, pc, lr
   10a24:	ldr	pc, [lr, #8]!
   10a28:	ldrdeq	r1, [r1], -r8

00010a2c <strcmp@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #69632	; 0x11000
   10a34:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a38 <auparse_next_event@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #69632	; 0x11000
   10a40:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a44 <free@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a50 <ausearch_set_stop@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a5c <auparse_destroy@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a68 <getpwent@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a74 <__stack_chk_fail@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a80 <auparse_find_field@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a8c <fwrite@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1432]!	; 0x598

00010a98 <auparse_get_timestamp@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1424]!	; 0x590

00010aa4 <ausearch_next_event@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1416]!	; 0x588

00010ab0 <puts@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1408]!	; 0x580

00010abc <malloc@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1400]!	; 0x578

00010ac8 <__libc_start_main@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #69632	; 0x11000
   10ad0:	ldr	pc, [ip, #1392]!	; 0x570

00010ad4 <strerror@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #69632	; 0x11000
   10adc:	ldr	pc, [ip, #1384]!	; 0x568

00010ae0 <strftime@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1376]!	; 0x560

00010aec <localtime@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1368]!	; 0x558

00010af8 <__gmon_start__@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1360]!	; 0x550

00010b04 <__errno_location@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1352]!	; 0x548

00010b10 <__strdup@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1344]!	; 0x540

00010b1c <auparse_get_field_int@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1336]!	; 0x538

00010b28 <__printf_chk@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1328]!	; 0x530

00010b34 <auparse_init@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1320]!	; 0x528

00010b40 <setlocale@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1312]!	; 0x520

00010b4c <endpwent@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1304]!	; 0x518

00010b58 <ausearch_add_item@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1296]!	; 0x510

00010b64 <abort@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1288]!	; 0x508

Disassembly of section .text:

00010b70 <.text>:
   10b70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b74:	movw	fp, #8320	; 0x2080
   10b78:	movt	fp, #2
   10b7c:	sub	sp, sp, #108	; 0x6c
   10b80:	mov	r6, r0
   10b84:	mov	r7, r1
   10b88:	ldr	r3, [fp]
   10b8c:	movw	r1, #5212	; 0x145c
   10b90:	mov	r0, #6
   10b94:	movt	r1, #1
   10b98:	mov	r9, #0
   10b9c:	str	r3, [sp, #100]	; 0x64
   10ba0:	bl	10b40 <setlocale@plt>
   10ba4:	cmp	r6, #1
   10ba8:	ble	10f84 <abort@plt+0x420>
   10bac:	mov	r4, #1
   10bb0:	mov	sl, r9
   10bb4:	b	10bf0 <abort@plt+0x8c>
   10bb8:	ldrb	r3, [r5, #1]
   10bbc:	cmp	r3, #117	; 0x75
   10bc0:	bne	10c1c <abort@plt+0xb8>
   10bc4:	ldrb	r3, [r5, #2]
   10bc8:	cmp	r3, #0
   10bcc:	bne	10c1c <abort@plt+0xb8>
   10bd0:	add	r4, r4, #1
   10bd4:	cmp	r6, r4
   10bd8:	ble	10f10 <abort@plt+0x3ac>
   10bdc:	add	r4, r4, #1
   10be0:	add	r8, r7, r8
   10be4:	cmp	r6, r4
   10be8:	ldr	r9, [r8, #4]
   10bec:	ble	10c44 <abort@plt+0xe0>
   10bf0:	ldr	r5, [r7, r4, lsl #2]
   10bf4:	movw	r1, #5060	; 0x13c4
   10bf8:	movt	r1, #1
   10bfc:	lsl	r8, r4, #2
   10c00:	mov	r0, r5
   10c04:	bl	10a2c <strcmp@plt>
   10c08:	cmp	r0, #0
   10c0c:	beq	10bd0 <abort@plt+0x6c>
   10c10:	ldrb	r3, [r5]
   10c14:	cmp	r3, #45	; 0x2d
   10c18:	beq	10bb8 <abort@plt+0x54>
   10c1c:	mov	r0, r5
   10c20:	movw	r1, #5068	; 0x13cc
   10c24:	movt	r1, #1
   10c28:	bl	10a2c <strcmp@plt>
   10c2c:	cmp	r0, #0
   10c30:	bne	10f10 <abort@plt+0x3ac>
   10c34:	add	r4, r4, #1
   10c38:	mov	sl, #1
   10c3c:	cmp	r6, r4
   10c40:	bgt	10bf0 <abort@plt+0x8c>
   10c44:	add	r0, sp, #12
   10c48:	mov	r4, #0
   10c4c:	bl	11108 <abort@plt+0x5a4>
   10c50:	bl	10a68 <getpwent@plt>
   10c54:	cmp	r0, #0
   10c58:	beq	10ca8 <abort@plt+0x144>
   10c5c:	ldr	r1, [r0]
   10c60:	cmp	r9, #0
   10c64:	ldr	r3, [r0, #8]
   10c68:	str	r4, [sp, #24]
   10c6c:	str	r1, [sp, #32]
   10c70:	str	r3, [sp, #28]
   10c74:	str	r4, [sp, #36]	; 0x24
   10c78:	str	r4, [sp, #40]	; 0x28
   10c7c:	beq	10c90 <abort@plt+0x12c>
   10c80:	mov	r0, r9
   10c84:	bl	10a2c <strcmp@plt>
   10c88:	cmp	r0, #0
   10c8c:	bne	10c50 <abort@plt+0xec>
   10c90:	add	r0, sp, #12
   10c94:	add	r1, sp, #24
   10c98:	bl	11138 <abort@plt+0x5d4>
   10c9c:	bl	10a68 <getpwent@plt>
   10ca0:	cmp	r0, #0
   10ca4:	bne	10c5c <abort@plt+0xf8>
   10ca8:	bl	10b4c <endpwent@plt>
   10cac:	cmp	r9, #0
   10cb0:	beq	10cc0 <abort@plt+0x15c>
   10cb4:	ldr	r3, [sp, #20]
   10cb8:	cmp	r3, #0
   10cbc:	beq	10f38 <abort@plt+0x3d4>
   10cc0:	cmp	sl, #0
   10cc4:	movwne	r3, #8328	; 0x2088
   10cc8:	movtne	r3, #2
   10ccc:	moveq	r0, sl
   10cd0:	movne	r0, #6
   10cd4:	ldrne	r1, [r3]
   10cd8:	moveq	r1, r0
   10cdc:	bl	10b34 <auparse_init@plt>
   10ce0:	cmp	r0, #0
   10ce4:	mov	r4, r0
   10ce8:	beq	10f60 <abort@plt+0x3fc>
   10cec:	mov	r3, #0
   10cf0:	movw	r1, #5108	; 0x13f4
   10cf4:	str	r3, [sp]
   10cf8:	movt	r1, #1
   10cfc:	movw	r2, #5116	; 0x13fc
   10d00:	movw	r3, #5120	; 0x1400
   10d04:	movt	r2, #1
   10d08:	movt	r3, #1
   10d0c:	bl	10b58 <ausearch_add_item@plt>
   10d10:	cmp	r0, #0
   10d14:	bne	10ec0 <abort@plt+0x35c>
   10d18:	mov	r3, #2
   10d1c:	movw	r1, #5164	; 0x142c
   10d20:	str	r3, [sp]
   10d24:	movt	r1, #1
   10d28:	movw	r2, #5116	; 0x13fc
   10d2c:	movw	r3, #5168	; 0x1430
   10d30:	movt	r2, #1
   10d34:	movt	r3, #1
   10d38:	mov	r0, r4
   10d3c:	bl	10b58 <ausearch_add_item@plt>
   10d40:	cmp	r0, #0
   10d44:	bne	10ec0 <abort@plt+0x35c>
   10d48:	mov	r0, r4
   10d4c:	mov	r1, #1
   10d50:	bl	10a50 <ausearch_set_stop@plt>
   10d54:	subs	r5, r0, #0
   10d58:	beq	10e04 <abort@plt+0x2a0>
   10d5c:	b	10f8c <abort@plt+0x428>
   10d60:	mov	r0, r4
   10d64:	bl	10a98 <auparse_get_timestamp@plt>
   10d68:	movw	r1, #5208	; 0x1458
   10d6c:	movt	r1, #1
   10d70:	mov	r6, r0
   10d74:	mov	r0, r4
   10d78:	bl	10a80 <auparse_find_field@plt>
   10d7c:	cmp	r0, #0
   10d80:	beq	10df4 <abort@plt+0x290>
   10d84:	mov	r0, r4
   10d88:	bl	10b1c <auparse_get_field_int@plt>
   10d8c:	ldr	r3, [sp, #12]
   10d90:	str	r3, [sp, #16]
   10d94:	mov	r1, r0
   10d98:	add	r0, sp, #12
   10d9c:	bl	112d8 <abort@plt+0x774>
   10da0:	cmp	r0, #0
   10da4:	beq	10df4 <abort@plt+0x290>
   10da8:	ldr	r1, [r6]
   10dac:	add	r0, sp, #12
   10db0:	bl	11224 <abort@plt+0x6c0>
   10db4:	mov	r0, r4
   10db8:	movw	r1, #5216	; 0x1460
   10dbc:	movt	r1, #1
   10dc0:	bl	10a80 <auparse_find_field@plt>
   10dc4:	subs	r1, r0, #0
   10dc8:	beq	10dd4 <abort@plt+0x270>
   10dcc:	add	r0, sp, #12
   10dd0:	bl	11238 <abort@plt+0x6d4>
   10dd4:	movw	r1, #5228	; 0x146c
   10dd8:	mov	r0, r4
   10ddc:	movt	r1, #1
   10de0:	bl	10a80 <auparse_find_field@plt>
   10de4:	subs	r1, r0, #0
   10de8:	beq	10df4 <abort@plt+0x290>
   10dec:	add	r0, sp, #12
   10df0:	bl	11288 <abort@plt+0x724>
   10df4:	mov	r0, r4
   10df8:	bl	10a38 <auparse_next_event@plt>
   10dfc:	cmp	r0, #0
   10e00:	blt	10e14 <abort@plt+0x2b0>
   10e04:	mov	r0, r4
   10e08:	bl	10aa4 <ausearch_next_event@plt>
   10e0c:	cmp	r0, #0
   10e10:	bgt	10d60 <abort@plt+0x1fc>
   10e14:	mov	r0, r4
   10e18:	movw	r6, #5212	; 0x145c
   10e1c:	bl	10a5c <auparse_destroy@plt>
   10e20:	movw	r0, #5240	; 0x1478
   10e24:	movt	r0, #1
   10e28:	movt	r6, #1
   10e2c:	bl	10ab0 <puts@plt>
   10e30:	ldr	r3, [sp, #12]
   10e34:	str	r3, [sp, #16]
   10e38:	b	10e80 <abort@plt+0x31c>
   10e3c:	ldr	ip, [r4, #12]
   10e40:	movw	r1, #5312	; 0x14c0
   10e44:	ldr	r3, [r4, #16]
   10e48:	movt	r1, #1
   10e4c:	cmp	ip, #0
   10e50:	ldr	r2, [r4, #8]
   10e54:	mov	r0, #1
   10e58:	str	lr, [sp, #4]
   10e5c:	moveq	ip, r6
   10e60:	cmp	r3, #0
   10e64:	str	ip, [sp]
   10e68:	moveq	r3, r6
   10e6c:	bl	10b28 <__printf_chk@plt>
   10e70:	add	r0, sp, #12
   10e74:	bl	1111c <abort@plt+0x5b8>
   10e78:	cmp	r0, #0
   10e7c:	beq	10f54 <abort@plt+0x3f0>
   10e80:	ldr	r4, [sp, #16]
   10e84:	ldr	r3, [r4]
   10e88:	cmp	r3, #0
   10e8c:	movweq	lr, #5040	; 0x13b0
   10e90:	movteq	lr, #1
   10e94:	beq	10e3c <abort@plt+0x2d8>
   10e98:	mov	r0, r4
   10e9c:	bl	10aec <localtime@plt>
   10ea0:	movw	r2, #5304	; 0x14b8
   10ea4:	mov	r1, #48	; 0x30
   10ea8:	movt	r2, #1
   10eac:	mov	r3, r0
   10eb0:	add	r0, sp, #52	; 0x34
   10eb4:	bl	10ae0 <strftime@plt>
   10eb8:	add	lr, sp, #52	; 0x34
   10ebc:	b	10e3c <abort@plt+0x2d8>
   10ec0:	bl	10b04 <__errno_location@plt>
   10ec4:	ldr	r0, [r0]
   10ec8:	bl	10ad4 <strerror@plt>
   10ecc:	movw	r1, #5132	; 0x140c
   10ed0:	movt	r1, #1
   10ed4:	mov	r2, r0
   10ed8:	mov	r0, #1
   10edc:	bl	10b28 <__printf_chk@plt>
   10ee0:	mov	r0, r4
   10ee4:	bl	10a5c <auparse_destroy@plt>
   10ee8:	add	r0, sp, #12
   10eec:	mov	r5, #1
   10ef0:	bl	111cc <abort@plt+0x668>
   10ef4:	ldr	r2, [sp, #100]	; 0x64
   10ef8:	mov	r0, r5
   10efc:	ldr	r3, [fp]
   10f00:	cmp	r2, r3
   10f04:	bne	10fb0 <abort@plt+0x44c>
   10f08:	add	sp, sp, #108	; 0x6c
   10f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f10:	movw	r3, #8324	; 0x2084
   10f14:	movt	r3, #2
   10f18:	mov	r1, #1
   10f1c:	movw	r0, #4996	; 0x1384
   10f20:	ldr	r3, [r3]
   10f24:	mov	r2, #41	; 0x29
   10f28:	movt	r0, #1
   10f2c:	mov	r5, r1
   10f30:	bl	10a8c <fwrite@plt>
   10f34:	b	10ef4 <abort@plt+0x390>
   10f38:	mov	r2, r9
   10f3c:	movw	r1, #5076	; 0x13d4
   10f40:	mov	r0, #1
   10f44:	movt	r1, #1
   10f48:	bl	10b28 <__printf_chk@plt>
   10f4c:	mov	r5, #1
   10f50:	b	10ef4 <abort@plt+0x390>
   10f54:	add	r0, sp, #12
   10f58:	bl	111cc <abort@plt+0x668>
   10f5c:	b	10ef4 <abort@plt+0x390>
   10f60:	bl	10b04 <__errno_location@plt>
   10f64:	ldr	r0, [r0]
   10f68:	bl	10ad4 <strerror@plt>
   10f6c:	movw	r1, #5096	; 0x13e8
   10f70:	movt	r1, #1
   10f74:	mov	r2, r0
   10f78:	mov	r0, #1
   10f7c:	bl	10b28 <__printf_chk@plt>
   10f80:	b	10ee8 <abort@plt+0x384>
   10f84:	mov	sl, r9
   10f88:	b	10c44 <abort@plt+0xe0>
   10f8c:	bl	10b04 <__errno_location@plt>
   10f90:	ldr	r0, [r0]
   10f94:	bl	10ad4 <strerror@plt>
   10f98:	movw	r1, #5176	; 0x1438
   10f9c:	movt	r1, #1
   10fa0:	mov	r2, r0
   10fa4:	mov	r0, #1
   10fa8:	bl	10b28 <__printf_chk@plt>
   10fac:	b	10ee0 <abort@plt+0x37c>
   10fb0:	bl	10a74 <__stack_chk_fail@plt>
   10fb4:	mov	fp, #0
   10fb8:	mov	lr, #0
   10fbc:	pop	{r1}		; (ldr r1, [sp], #4)
   10fc0:	mov	r2, sp
   10fc4:	push	{r2}		; (str r2, [sp, #-4]!)
   10fc8:	push	{r0}		; (str r0, [sp, #-4]!)
   10fcc:	ldr	ip, [pc, #16]	; 10fe4 <abort@plt+0x480>
   10fd0:	push	{ip}		; (str ip, [sp, #-4]!)
   10fd4:	ldr	r0, [pc, #12]	; 10fe8 <abort@plt+0x484>
   10fd8:	ldr	r3, [pc, #12]	; 10fec <abort@plt+0x488>
   10fdc:	bl	10ac8 <__libc_start_main@plt>
   10fe0:	bl	10b64 <abort@plt>
   10fe4:	andeq	r1, r1, r0, ror r3
   10fe8:	andeq	r0, r1, r0, ror fp
   10fec:	andeq	r1, r1, ip, lsl #6
   10ff0:	ldr	r3, [pc, #20]	; 1100c <abort@plt+0x4a8>
   10ff4:	ldr	r2, [pc, #20]	; 11010 <abort@plt+0x4ac>
   10ff8:	add	r3, pc, r3
   10ffc:	ldr	r2, [r3, r2]
   11000:	cmp	r2, #0
   11004:	bxeq	lr
   11008:	b	10af8 <__gmon_start__@plt>
   1100c:	andeq	r1, r1, r0
   11010:	andeq	r0, r0, r8, ror r0
   11014:	push	{r3, lr}
   11018:	movw	r0, #8320	; 0x2080
   1101c:	ldr	r3, [pc, #36]	; 11048 <abort@plt+0x4e4>
   11020:	movt	r0, #2
   11024:	rsb	r3, r0, r3
   11028:	cmp	r3, #6
   1102c:	popls	{r3, pc}
   11030:	movw	r3, #0
   11034:	movt	r3, #0
   11038:	cmp	r3, #0
   1103c:	popeq	{r3, pc}
   11040:	blx	r3
   11044:	pop	{r3, pc}
   11048:	andeq	r2, r2, r3, lsl #1
   1104c:	push	{r3, lr}
   11050:	movw	r0, #8320	; 0x2080
   11054:	movw	r3, #8320	; 0x2080
   11058:	movt	r0, #2
   1105c:	movt	r3, #2
   11060:	rsb	r3, r0, r3
   11064:	asr	r3, r3, #2
   11068:	add	r3, r3, r3, lsr #31
   1106c:	asrs	r1, r3, #1
   11070:	popeq	{r3, pc}
   11074:	movw	r2, #0
   11078:	movt	r2, #0
   1107c:	cmp	r2, #0
   11080:	popeq	{r3, pc}
   11084:	blx	r2
   11088:	pop	{r3, pc}
   1108c:	push	{r4, lr}
   11090:	movw	r4, #8332	; 0x208c
   11094:	movt	r4, #2
   11098:	ldrb	r3, [r4]
   1109c:	cmp	r3, #0
   110a0:	popne	{r4, pc}
   110a4:	bl	11014 <abort@plt+0x4b0>
   110a8:	mov	r3, #1
   110ac:	strb	r3, [r4]
   110b0:	pop	{r4, pc}
   110b4:	movw	r0, #7916	; 0x1eec
   110b8:	movt	r0, #2
   110bc:	push	{r3, lr}
   110c0:	ldr	r3, [r0]
   110c4:	cmp	r3, #0
   110c8:	beq	110e0 <abort@plt+0x57c>
   110cc:	movw	r3, #0
   110d0:	movt	r3, #0
   110d4:	cmp	r3, #0
   110d8:	beq	110e0 <abort@plt+0x57c>
   110dc:	blx	r3
   110e0:	pop	{r3, lr}
   110e4:	b	1104c <abort@plt+0x4e8>
   110e8:	movw	r3, #8324	; 0x2084
   110ec:	movt	r3, #2
   110f0:	movw	r0, #4996	; 0x1384
   110f4:	mov	r1, #1
   110f8:	ldr	r3, [r3]
   110fc:	movt	r0, #1
   11100:	mov	r2, #41	; 0x29
   11104:	b	10a8c <fwrite@plt>
   11108:	mov	r3, #0
   1110c:	str	r3, [r0]
   11110:	str	r3, [r0, #4]
   11114:	str	r3, [r0, #8]
   11118:	bx	lr
   1111c:	ldr	r3, [r0, #4]
   11120:	cmp	r3, #0
   11124:	ldrne	r2, [r3, #24]
   11128:	movne	r3, r2
   1112c:	strne	r2, [r0, #4]
   11130:	mov	r0, r3
   11134:	bx	lr
   11138:	push	{r4, r5, r6, lr}
   1113c:	mov	r6, r0
   11140:	mov	r0, #28
   11144:	mov	r5, r1
   11148:	bl	10abc <malloc@plt>
   1114c:	ldm	r5, {r2, r3}
   11150:	mov	r4, r0
   11154:	ldr	r0, [r5, #8]
   11158:	stm	r4, {r2, r3}
   1115c:	bl	10b10 <__strdup@plt>
   11160:	ldr	r3, [r5, #12]
   11164:	cmp	r3, #0
   11168:	streq	r3, [r4, #12]
   1116c:	str	r0, [r4, #8]
   11170:	beq	11180 <abort@plt+0x61c>
   11174:	mov	r0, r3
   11178:	bl	10b10 <__strdup@plt>
   1117c:	str	r0, [r4, #12]
   11180:	ldr	r0, [r5, #16]
   11184:	cmp	r0, #0
   11188:	streq	r0, [r4, #16]
   1118c:	beq	11198 <abort@plt+0x634>
   11190:	bl	10b10 <__strdup@plt>
   11194:	str	r0, [r4, #16]
   11198:	ldr	r1, [r6]
   1119c:	mov	r2, #0
   111a0:	ldr	r3, [r6, #8]
   111a4:	cmp	r1, r2
   111a8:	str	r2, [r4, #24]
   111ac:	ldrne	r2, [r6, #4]
   111b0:	str	r3, [r4, #20]
   111b4:	add	r3, r3, #1
   111b8:	streq	r4, [r6]
   111bc:	strne	r4, [r2, #24]
   111c0:	str	r4, [r6, #4]
   111c4:	str	r3, [r6, #8]
   111c8:	pop	{r4, r5, r6, pc}
   111cc:	push	{r4, r5, r6, lr}
   111d0:	mov	r6, r0
   111d4:	ldr	r4, [r0]
   111d8:	cmp	r4, #0
   111dc:	beq	11210 <abort@plt+0x6ac>
   111e0:	ldr	r0, [r4, #8]
   111e4:	ldr	r5, [r4, #24]
   111e8:	bl	10a44 <free@plt>
   111ec:	ldr	r0, [r4, #12]
   111f0:	bl	10a44 <free@plt>
   111f4:	ldr	r0, [r4, #16]
   111f8:	bl	10a44 <free@plt>
   111fc:	mov	r0, r4
   11200:	bl	10a44 <free@plt>
   11204:	cmp	r5, #0
   11208:	mov	r4, r5
   1120c:	bne	111e0 <abort@plt+0x67c>
   11210:	mov	r3, #0
   11214:	str	r3, [r6]
   11218:	str	r3, [r6, #4]
   1121c:	str	r3, [r6, #8]
   11220:	pop	{r4, r5, r6, pc}
   11224:	cmp	r0, #0
   11228:	ldrne	r3, [r0, #4]
   1122c:	movne	r0, #1
   11230:	strne	r1, [r3]
   11234:	bx	lr
   11238:	cmp	r0, #0
   1123c:	push	{r3, r4, r5, lr}
   11240:	mov	r4, r1
   11244:	beq	1127c <abort@plt+0x718>
   11248:	ldr	r5, [r0, #4]
   1124c:	cmp	r1, #0
   11250:	moveq	r3, #1
   11254:	streq	r1, [r5, #12]
   11258:	beq	11274 <abort@plt+0x710>
   1125c:	ldr	r0, [r5, #12]
   11260:	bl	10a44 <free@plt>
   11264:	mov	r0, r4
   11268:	bl	10b10 <__strdup@plt>
   1126c:	mov	r3, #1
   11270:	str	r0, [r5, #12]
   11274:	mov	r0, r3
   11278:	pop	{r3, r4, r5, pc}
   1127c:	mov	r3, r0
   11280:	mov	r0, r3
   11284:	pop	{r3, r4, r5, pc}
   11288:	cmp	r0, #0
   1128c:	push	{r3, r4, r5, lr}
   11290:	mov	r4, r1
   11294:	beq	112cc <abort@plt+0x768>
   11298:	ldr	r5, [r0, #4]
   1129c:	cmp	r1, #0
   112a0:	moveq	r3, #1
   112a4:	streq	r1, [r5, #16]
   112a8:	beq	112c4 <abort@plt+0x760>
   112ac:	ldr	r0, [r5, #16]
   112b0:	bl	10a44 <free@plt>
   112b4:	mov	r0, r4
   112b8:	bl	10b10 <__strdup@plt>
   112bc:	mov	r3, #1
   112c0:	str	r0, [r5, #16]
   112c4:	mov	r0, r3
   112c8:	pop	{r3, r4, r5, pc}
   112cc:	mov	r3, r0
   112d0:	mov	r0, r3
   112d4:	pop	{r3, r4, r5, pc}
   112d8:	ldr	r3, [r0]
   112dc:	cmp	r3, #0
   112e0:	bne	112f4 <abort@plt+0x790>
   112e4:	b	11304 <abort@plt+0x7a0>
   112e8:	ldr	r3, [r3, #24]
   112ec:	cmp	r3, #0
   112f0:	beq	11304 <abort@plt+0x7a0>
   112f4:	ldr	r2, [r3, #4]
   112f8:	cmp	r2, r1
   112fc:	bne	112e8 <abort@plt+0x784>
   11300:	str	r3, [r0, #4]
   11304:	mov	r0, r3
   11308:	bx	lr
   1130c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11310:	mov	r7, r0
   11314:	ldr	r6, [pc, #76]	; 11368 <abort@plt+0x804>
   11318:	mov	r8, r1
   1131c:	ldr	r5, [pc, #72]	; 1136c <abort@plt+0x808>
   11320:	mov	r9, r2
   11324:	add	r6, pc, r6
   11328:	bl	10a0c <_init@@Base>
   1132c:	add	r5, pc, r5
   11330:	rsb	r6, r5, r6
   11334:	asrs	r6, r6, #2
   11338:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1133c:	sub	r5, r5, #4
   11340:	mov	r4, #0
   11344:	add	r4, r4, #1
   11348:	ldr	r3, [r5, #4]!
   1134c:	mov	r0, r7
   11350:	mov	r1, r8
   11354:	mov	r2, r9
   11358:	blx	r3
   1135c:	cmp	r4, r6
   11360:	bne	11344 <abort@plt+0x7e0>
   11364:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11368:			; <UNDEFINED> instruction: 0x00010bbc
   1136c:			; <UNDEFINED> instruction: 0x00010bb0
   11370:	bx	lr

Disassembly of section .fini:

00011374 <_fini@@Base>:
   11374:	push	{r3, lr}
   11378:	pop	{r3, pc}
