
centos-preinstalled/showrgb:     file format elf32-littlearm


Disassembly of section .init:

00010608 <.init>:
   10608:	push	{r3, lr}
   1060c:	bl	1073c <abort@plt+0x78>
   10610:	pop	{r3, pc}

Disassembly of section .plt:

00010614 <fopen@plt-0x14>:
   10614:	push	{lr}		; (str lr, [sp, #-4]!)
   10618:	ldr	lr, [pc, #4]	; 10624 <fopen@plt-0x4>
   1061c:	add	lr, pc, lr
   10620:	ldr	pc, [lr, #8]!
   10624:	ldrdeq	r0, [r1], -ip

00010628 <fopen@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #16, 20	; 0x10000
   10630:	ldr	pc, [ip, #2524]!	; 0x9dc

00010634 <free@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #16, 20	; 0x10000
   1063c:	ldr	pc, [ip, #2516]!	; 0x9d4

00010640 <fgets@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #16, 20	; 0x10000
   10648:	ldr	pc, [ip, #2508]!	; 0x9cc

0001064c <__stack_chk_fail@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #16, 20	; 0x10000
   10654:	ldr	pc, [ip, #2500]!	; 0x9c4

00010658 <perror@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #16, 20	; 0x10000
   10660:	ldr	pc, [ip, #2492]!	; 0x9bc

00010664 <__asprintf_chk@plt>:
   10664:	add	ip, pc, #0, 12
   10668:	add	ip, ip, #16, 20	; 0x10000
   1066c:	ldr	pc, [ip, #2484]!	; 0x9b4

00010670 <__libc_start_main@plt>:
   10670:	add	ip, pc, #0, 12
   10674:	add	ip, ip, #16, 20	; 0x10000
   10678:	ldr	pc, [ip, #2476]!	; 0x9ac

0001067c <__gmon_start__@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #16, 20	; 0x10000
   10684:	ldr	pc, [ip, #2468]!	; 0x9a4

00010688 <exit@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #16, 20	; 0x10000
   10690:	ldr	pc, [ip, #2460]!	; 0x99c

00010694 <__printf_chk@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #16, 20	; 0x10000
   1069c:	ldr	pc, [ip, #2452]!	; 0x994

000106a0 <__fprintf_chk@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #16, 20	; 0x10000
   106a8:	ldr	pc, [ip, #2444]!	; 0x98c

000106ac <fclose@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #16, 20	; 0x10000
   106b4:	ldr	pc, [ip, #2436]!	; 0x984

000106b8 <sscanf@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #16, 20	; 0x10000
   106c0:	ldr	pc, [ip, #2428]!	; 0x97c

000106c4 <abort@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #16, 20	; 0x10000
   106cc:	ldr	pc, [ip, #2420]!	; 0x974

Disassembly of section .text:

000106d0 <.text>:
   106d0:	cmp	r0, #2
   106d4:	ldr	r2, [r1]
   106d8:	push	{r3, lr}
   106dc:	movw	r3, #4192	; 0x1060
   106e0:	movt	r3, #2
   106e4:	movwne	r0, #3016	; 0xbc8
   106e8:	ldreq	r0, [r1, #4]
   106ec:	movtne	r0, #1
   106f0:	str	r2, [r3]
   106f4:	bl	10834 <abort@plt+0x170>
   106f8:	mov	r0, #0
   106fc:	bl	10688 <exit@plt>
   10700:	mov	fp, #0
   10704:	mov	lr, #0
   10708:	pop	{r1}		; (ldr r1, [sp], #4)
   1070c:	mov	r2, sp
   10710:	push	{r2}		; (str r2, [sp, #-4]!)
   10714:	push	{r0}		; (str r0, [sp, #-4]!)
   10718:	ldr	ip, [pc, #16]	; 10730 <abort@plt+0x6c>
   1071c:	push	{ip}		; (str ip, [sp, #-4]!)
   10720:	ldr	r0, [pc, #12]	; 10734 <abort@plt+0x70>
   10724:	ldr	r3, [pc, #12]	; 10738 <abort@plt+0x74>
   10728:	bl	10670 <__libc_start_main@plt>
   1072c:	bl	106c4 <abort@plt>
   10730:	andeq	r0, r1, r4, lsl fp
   10734:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10738:			; <UNDEFINED> instruction: 0x00010ab0
   1073c:	ldr	r3, [pc, #20]	; 10758 <abort@plt+0x94>
   10740:	ldr	r2, [pc, #20]	; 1075c <abort@plt+0x98>
   10744:	add	r3, pc, r3
   10748:	ldr	r2, [r3, r2]
   1074c:	cmp	r2, #0
   10750:	bxeq	lr
   10754:	b	1067c <__gmon_start__@plt>
   10758:			; <UNDEFINED> instruction: 0x000108b4
   1075c:	andeq	r0, r0, r4, asr #32
   10760:	push	{r3, lr}
   10764:	movw	r0, #4172	; 0x104c
   10768:	ldr	r3, [pc, #36]	; 10794 <abort@plt+0xd0>
   1076c:	movt	r0, #2
   10770:	rsb	r3, r0, r3
   10774:	cmp	r3, #6
   10778:	popls	{r3, pc}
   1077c:	movw	r3, #0
   10780:	movt	r3, #0
   10784:	cmp	r3, #0
   10788:	popeq	{r3, pc}
   1078c:	blx	r3
   10790:	pop	{r3, pc}
   10794:	andeq	r1, r2, pc, asr #32
   10798:	push	{r3, lr}
   1079c:	movw	r0, #4172	; 0x104c
   107a0:	movw	r3, #4172	; 0x104c
   107a4:	movt	r0, #2
   107a8:	movt	r3, #2
   107ac:	rsb	r3, r0, r3
   107b0:	asr	r3, r3, #2
   107b4:	add	r3, r3, r3, lsr #31
   107b8:	asrs	r1, r3, #1
   107bc:	popeq	{r3, pc}
   107c0:	movw	r2, #0
   107c4:	movt	r2, #0
   107c8:	cmp	r2, #0
   107cc:	popeq	{r3, pc}
   107d0:	blx	r2
   107d4:	pop	{r3, pc}
   107d8:	push	{r4, lr}
   107dc:	movw	r4, #4188	; 0x105c
   107e0:	movt	r4, #2
   107e4:	ldrb	r3, [r4]
   107e8:	cmp	r3, #0
   107ec:	popne	{r4, pc}
   107f0:	bl	10760 <abort@plt+0x9c>
   107f4:	mov	r3, #1
   107f8:	strb	r3, [r4]
   107fc:	pop	{r4, pc}
   10800:	movw	r0, #3844	; 0xf04
   10804:	movt	r0, #2
   10808:	push	{r3, lr}
   1080c:	ldr	r3, [r0]
   10810:	cmp	r3, #0
   10814:	beq	1082c <abort@plt+0x168>
   10818:	movw	r3, #0
   1081c:	movt	r3, #0
   10820:	cmp	r3, #0
   10824:	beq	1082c <abort@plt+0x168>
   10828:	blx	r3
   1082c:	pop	{r3, lr}
   10830:	b	10798 <abort@plt+0xd4>
   10834:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10838:	movw	sl, #4176	; 0x1050
   1083c:	movt	sl, #2
   10840:	sub	sp, sp, #16384	; 0x4000
   10844:	sub	sp, sp, #40	; 0x28
   10848:	mov	r3, r0
   1084c:	ldr	ip, [sl]
   10850:	add	lr, sp, #16384	; 0x4000
   10854:	mov	r5, r0
   10858:	movw	r2, #2856	; 0xb28
   1085c:	add	r0, sp, #20
   10860:	mov	r1, #1
   10864:	movt	r2, #1
   10868:	str	ip, [lr, #36]	; 0x24
   1086c:	bl	10664 <__asprintf_chk@plt>
   10870:	cmn	r0, #1
   10874:	beq	10a94 <abort@plt+0x3d0>
   10878:	add	r2, sp, #16384	; 0x4000
   1087c:	movw	r4, #49132	; 0xbfec
   10880:	add	r2, r2, #40	; 0x28
   10884:	movt	r4, #65535	; 0xffff
   10888:	movw	r1, #2864	; 0xb30
   1088c:	movt	r1, #1
   10890:	ldr	r0, [r2, r4]
   10894:	bl	10628 <fopen@plt>
   10898:	subs	r6, r0, #0
   1089c:	beq	10a38 <abort@plt+0x374>
   108a0:	movw	r7, #49148	; 0xbffc
   108a4:	movw	r9, #4184	; 0x1058
   108a8:	movw	r8, #4192	; 0x1060
   108ac:	movt	r7, #65535	; 0xffff
   108b0:	movt	r9, #2
   108b4:	movt	r8, #2
   108b8:	mov	r4, #0
   108bc:	add	r0, sp, #36	; 0x24
   108c0:	mov	r1, #8192	; 0x2000
   108c4:	mov	r2, r6
   108c8:	bl	10640 <fgets@plt>
   108cc:	cmp	r0, #0
   108d0:	beq	109e0 <abort@plt+0x31c>
   108d4:	add	lr, sp, #8192	; 0x2000
   108d8:	add	r3, sp, #32
   108dc:	add	lr, lr, #40	; 0x28
   108e0:	movw	r1, #2908	; 0xb5c
   108e4:	sub	r5, lr, #4
   108e8:	add	r0, sp, #36	; 0x24
   108ec:	stm	sp, {r3, r5}
   108f0:	movt	r1, #1
   108f4:	add	r2, sp, #24
   108f8:	add	r3, sp, #28
   108fc:	bl	106b8 <sscanf@plt>
   10900:	add	r4, r4, #1
   10904:	cmp	r0, #4
   10908:	beq	10960 <abort@plt+0x29c>
   1090c:	add	r2, sp, #16384	; 0x4000
   10910:	add	r2, r2, #40	; 0x28
   10914:	ldrb	r2, [r2, r7]
   10918:	uxtb	r3, r2
   1091c:	cmp	r3, #33	; 0x21
   10920:	cmpne	r3, #0
   10924:	beq	108bc <abort@plt+0x1f8>
   10928:	add	lr, sp, #16384	; 0x4000
   1092c:	movw	r3, #49132	; 0xbfec
   10930:	add	lr, lr, #40	; 0x28
   10934:	movt	r3, #65535	; 0xffff
   10938:	ldr	r0, [r9]
   1093c:	movw	r2, #2988	; 0xbac
   10940:	ldr	ip, [lr, r3]
   10944:	movt	r2, #1
   10948:	ldr	r3, [r8]
   1094c:	mov	r1, #1
   10950:	str	r4, [sp, #4]
   10954:	str	ip, [sp]
   10958:	bl	106a0 <__fprintf_chk@plt>
   1095c:	b	108bc <abort@plt+0x1f8>
   10960:	add	r0, sp, #16384	; 0x4000
   10964:	movw	r3, #49136	; 0xbff0
   10968:	add	r0, r0, #40	; 0x28
   1096c:	movt	r3, #65535	; 0xffff
   10970:	ldr	r2, [r0, r3]
   10974:	cmp	r2, #255	; 0xff
   10978:	bhi	109a4 <abort@plt+0x2e0>
   1097c:	movw	r3, #49140	; 0xbff4
   10980:	movt	r3, #65535	; 0xffff
   10984:	ldr	r3, [r0, r3]
   10988:	cmp	r3, #255	; 0xff
   1098c:	bhi	109a4 <abort@plt+0x2e0>
   10990:	movw	r1, #49144	; 0xbff8
   10994:	movt	r1, #65535	; 0xffff
   10998:	ldr	r1, [r0, r1]
   1099c:	cmp	r1, #255	; 0xff
   109a0:	bls	10a20 <abort@plt+0x35c>
   109a4:	add	r1, sp, #16384	; 0x4000
   109a8:	movw	r3, #49132	; 0xbfec
   109ac:	add	r1, r1, #40	; 0x28
   109b0:	movt	r3, #65535	; 0xffff
   109b4:	ldr	r0, [r9]
   109b8:	movw	r2, #2944	; 0xb80
   109bc:	ldr	ip, [r1, r3]
   109c0:	movt	r2, #1
   109c4:	ldr	r3, [r8]
   109c8:	mov	r1, #1
   109cc:	str	r5, [sp]
   109d0:	str	r4, [sp, #8]
   109d4:	str	ip, [sp, #4]
   109d8:	bl	106a0 <__fprintf_chk@plt>
   109dc:	b	108bc <abort@plt+0x1f8>
   109e0:	add	r1, sp, #16384	; 0x4000
   109e4:	movw	r3, #49132	; 0xbfec
   109e8:	add	r1, r1, #40	; 0x28
   109ec:	movt	r3, #65535	; 0xffff
   109f0:	ldr	r0, [r1, r3]
   109f4:	bl	10634 <free@plt>
   109f8:	mov	r0, r6
   109fc:	bl	106ac <fclose@plt>
   10a00:	add	r3, sp, #16384	; 0x4000
   10a04:	ldr	r2, [r3, #36]	; 0x24
   10a08:	ldr	r3, [sl]
   10a0c:	cmp	r2, r3
   10a10:	bne	10aac <abort@plt+0x3e8>
   10a14:	add	sp, sp, #16384	; 0x4000
   10a18:	add	sp, sp, #40	; 0x28
   10a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a20:	stm	sp, {r1, r5}
   10a24:	mov	r0, #1
   10a28:	movw	r1, #2924	; 0xb6c
   10a2c:	movt	r1, #1
   10a30:	bl	10694 <__printf_chk@plt>
   10a34:	b	108bc <abort@plt+0x1f8>
   10a38:	movw	r1, #2864	; 0xb30
   10a3c:	mov	r0, r5
   10a40:	movt	r1, #1
   10a44:	bl	10628 <fopen@plt>
   10a48:	subs	r6, r0, #0
   10a4c:	bne	108a0 <abort@plt+0x1dc>
   10a50:	movw	r1, #4184	; 0x1058
   10a54:	movw	r3, #4192	; 0x1060
   10a58:	movt	r1, #2
   10a5c:	movt	r3, #2
   10a60:	str	r5, [sp]
   10a64:	movw	r2, #2868	; 0xb34
   10a68:	ldr	r0, [r1]
   10a6c:	movt	r2, #1
   10a70:	ldr	r3, [r3]
   10a74:	mov	r1, #1
   10a78:	bl	106a0 <__fprintf_chk@plt>
   10a7c:	add	r3, sp, #16384	; 0x4000
   10a80:	add	r3, r3, #40	; 0x28
   10a84:	ldr	r0, [r3, r4]
   10a88:	bl	10634 <free@plt>
   10a8c:	mov	r0, #1
   10a90:	bl	10688 <exit@plt>
   10a94:	movw	r3, #4192	; 0x1060
   10a98:	movt	r3, #2
   10a9c:	ldr	r0, [r3]
   10aa0:	bl	10658 <perror@plt>
   10aa4:	mov	r0, #1
   10aa8:	bl	10688 <exit@plt>
   10aac:	bl	1064c <__stack_chk_fail@plt>
   10ab0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10ab4:	mov	r7, r0
   10ab8:	ldr	r6, [pc, #76]	; 10b0c <abort@plt+0x448>
   10abc:	mov	r8, r1
   10ac0:	ldr	r5, [pc, #72]	; 10b10 <abort@plt+0x44c>
   10ac4:	mov	r9, r2
   10ac8:	add	r6, pc, r6
   10acc:	bl	10608 <fopen@plt-0x20>
   10ad0:	add	r5, pc, r5
   10ad4:	rsb	r6, r5, r6
   10ad8:	asrs	r6, r6, #2
   10adc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10ae0:	sub	r5, r5, #4
   10ae4:	mov	r4, #0
   10ae8:	add	r4, r4, #1
   10aec:	ldr	r3, [r5, #4]!
   10af0:	mov	r0, r7
   10af4:	mov	r1, r8
   10af8:	mov	r2, r9
   10afc:	blx	r3
   10b00:	cmp	r4, r6
   10b04:	bne	10ae8 <abort@plt+0x424>
   10b08:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10b0c:	andeq	r0, r1, r0, lsr r4
   10b10:	andeq	r0, r1, r4, lsr #8
   10b14:	bx	lr

Disassembly of section .fini:

00010b18 <.fini>:
   10b18:	push	{r3, lr}
   10b1c:	pop	{r3, pc}
