
centos-preinstalled/db_tuner:     file format elf32-littlearm


Disassembly of section .init:

000108b4 <_init@@Base>:
   108b4:	push	{r3, lr}
   108b8:	bl	10f44 <exit@plt+0x58c>
   108bc:	pop	{r3, pc}

Disassembly of section .plt:

000108c0 <sigemptyset@plt-0x14>:
   108c0:	push	{lr}		; (str lr, [sp, #-4]!)
   108c4:	ldr	lr, [pc, #4]	; 108d0 <_init@@Base+0x1c>
   108c8:	add	lr, pc, lr
   108cc:	ldr	pc, [lr, #8]!
   108d0:	andeq	r3, r1, r0, lsr r7

000108d4 <sigemptyset@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #77824	; 0x13000
   108dc:	ldr	pc, [ip, #1840]!	; 0x730

000108e0 <__bam_traverse@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #77824	; 0x13000
   108e8:	ldr	pc, [ip, #1832]!	; 0x728

000108ec <abort@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #77824	; 0x13000
   108f4:	ldr	pc, [ip, #1824]!	; 0x720

000108f8 <__libc_start_main@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #77824	; 0x13000
   10900:	ldr	pc, [ip, #1816]!	; 0x718

00010904 <__gmon_start__@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #77824	; 0x13000
   1090c:	ldr	pc, [ip, #1808]!	; 0x710

00010910 <__printf_chk@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #77824	; 0x13000
   10918:	ldr	pc, [ip, #1800]!	; 0x708

0001091c <putchar@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #77824	; 0x13000
   10924:	ldr	pc, [ip, #1792]!	; 0x700

00010928 <memset@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #77824	; 0x13000
   10930:	ldr	pc, [ip, #1784]!	; 0x6f8

00010934 <getopt@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #77824	; 0x13000
   1093c:	ldr	pc, [ip, #1776]!	; 0x6f0

00010940 <strtol@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #77824	; 0x13000
   10948:	ldr	pc, [ip, #1768]!	; 0x6e8

0001094c <raise@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #77824	; 0x13000
   10954:	ldr	pc, [ip, #1760]!	; 0x6e0

00010958 <db_create@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #77824	; 0x13000
   10960:	ldr	pc, [ip, #1752]!	; 0x6d8

00010964 <__stack_chk_fail@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #77824	; 0x13000
   1096c:	ldr	pc, [ip, #1744]!	; 0x6d0

00010970 <sigaction@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #77824	; 0x13000
   10978:	ldr	pc, [ip, #1736]!	; 0x6c8

0001097c <__fprintf_chk@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #77824	; 0x13000
   10984:	ldr	pc, [ip, #1728]!	; 0x6c0

00010988 <db_env_create@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #77824	; 0x13000
   10990:	ldr	pc, [ip, #1720]!	; 0x6b8

00010994 <puts@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #77824	; 0x13000
   1099c:	ldr	pc, [ip, #1712]!	; 0x6b0

000109a0 <db_version@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #77824	; 0x13000
   109a8:	ldr	pc, [ip, #1704]!	; 0x6a8

000109ac <db_strerror@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #77824	; 0x13000
   109b4:	ldr	pc, [ip, #1696]!	; 0x6a0

000109b8 <exit@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #77824	; 0x13000
   109c0:	ldr	pc, [ip, #1688]!	; 0x698

Disassembly of section .text:

000109c8 <.text>:
   109c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109cc:	sub	sp, sp, #60	; 0x3c
   109d0:	ldr	fp, [pc, #1252]	; 10ebc <exit@plt+0x504>
   109d4:	add	r7, sp, #40	; 0x28
   109d8:	ldr	r2, [pc, #1248]	; 10ec0 <exit@plt+0x508>
   109dc:	add	r9, sp, #44	; 0x2c
   109e0:	add	fp, pc, fp
   109e4:	add	r8, sp, #48	; 0x30
   109e8:	mov	r4, r0
   109ec:	mov	r5, r1
   109f0:	ldr	r2, [fp, r2]
   109f4:	mov	r0, r7
   109f8:	mov	r1, r9
   109fc:	str	r2, [sp, #16]
   10a00:	mov	r2, r8
   10a04:	ldr	r3, [sp, #16]
   10a08:	ldr	ip, [r3]
   10a0c:	str	ip, [sp, #52]	; 0x34
   10a10:	bl	109a0 <db_version@plt>
   10a14:	ldr	r0, [sp, #40]	; 0x28
   10a18:	ldr	ip, [sp, #44]	; 0x2c
   10a1c:	cmp	r0, #5
   10a20:	beq	10a80 <exit@plt+0xc8>
   10a24:	ldr	r5, [pc, #1176]	; 10ec4 <exit@plt+0x50c>
   10a28:	mov	lr, #3
   10a2c:	ldr	r6, [pc, #1172]	; 10ec8 <exit@plt+0x510>
   10a30:	mov	r4, #5
   10a34:	ldr	r2, [pc, #1168]	; 10ecc <exit@plt+0x514>
   10a38:	mov	r1, #1
   10a3c:	ldr	r5, [fp, r5]
   10a40:	ldr	r3, [fp, r6]
   10a44:	add	r2, pc, r2
   10a48:	str	r0, [sp, #8]
   10a4c:	ldr	r0, [r5]
   10a50:	ldr	r3, [r3]
   10a54:	str	ip, [sp, #12]
   10a58:	stm	sp, {r4, lr}
   10a5c:	bl	1097c <__fprintf_chk@plt>
   10a60:	mov	r0, #1
   10a64:	ldr	r1, [sp, #16]
   10a68:	ldr	r2, [sp, #52]	; 0x34
   10a6c:	ldr	r3, [r1]
   10a70:	cmp	r2, r3
   10a74:	bne	10eb8 <exit@plt+0x500>
   10a78:	add	sp, sp, #60	; 0x3c
   10a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a80:	cmp	ip, #3
   10a84:	bne	10a24 <exit@plt+0x6c>
   10a88:	ldr	r6, [pc, #1088]	; 10ed0 <exit@plt+0x518>
   10a8c:	mov	r2, #0
   10a90:	mov	sl, r2
   10a94:	str	r0, [sp, #44]	; 0x2c
   10a98:	add	r6, pc, r6
   10a9c:	str	r2, [sp, #40]	; 0x28
   10aa0:	str	r2, [sp, #24]
   10aa4:	str	r2, [sp, #20]
   10aa8:	str	r2, [sp, #36]	; 0x24
   10aac:	str	r2, [sp, #28]
   10ab0:	str	r2, [sp, #32]
   10ab4:	mov	r0, r4
   10ab8:	mov	r1, r5
   10abc:	mov	r2, r6
   10ac0:	bl	10934 <getopt@plt>
   10ac4:	cmn	r0, #1
   10ac8:	beq	10b9c <exit@plt+0x1e4>
   10acc:	sub	r0, r0, #99	; 0x63
   10ad0:	cmp	r0, #19
   10ad4:	addls	pc, pc, r0, lsl #2
   10ad8:	b	10b98 <exit@plt+0x1e0>
   10adc:	b	10b78 <exit@plt+0x1c0>
   10ae0:	b	10b5c <exit@plt+0x1a4>
   10ae4:	b	10b98 <exit@plt+0x1e0>
   10ae8:	b	10b98 <exit@plt+0x1e0>
   10aec:	b	10b98 <exit@plt+0x1e0>
   10af0:	b	10b48 <exit@plt+0x190>
   10af4:	b	10b98 <exit@plt+0x1e0>
   10af8:	b	10b98 <exit@plt+0x1e0>
   10afc:	b	10b98 <exit@plt+0x1e0>
   10b00:	b	10b98 <exit@plt+0x1e0>
   10b04:	b	10b98 <exit@plt+0x1e0>
   10b08:	b	10b98 <exit@plt+0x1e0>
   10b0c:	b	10b98 <exit@plt+0x1e0>
   10b10:	b	10b98 <exit@plt+0x1e0>
   10b14:	b	10b98 <exit@plt+0x1e0>
   10b18:	b	10b98 <exit@plt+0x1e0>
   10b1c:	b	10b34 <exit@plt+0x17c>
   10b20:	b	10b98 <exit@plt+0x1e0>
   10b24:	b	10b98 <exit@plt+0x1e0>
   10b28:	b	10b2c <exit@plt+0x174>
   10b2c:	mov	sl, #1
   10b30:	b	10ab4 <exit@plt+0xfc>
   10b34:	ldr	r3, [pc, #920]	; 10ed4 <exit@plt+0x51c>
   10b38:	ldr	r3, [fp, r3]
   10b3c:	ldr	r3, [r3]
   10b40:	str	r3, [sp, #36]	; 0x24
   10b44:	b	10ab4 <exit@plt+0xfc>
   10b48:	ldr	r3, [pc, #900]	; 10ed4 <exit@plt+0x51c>
   10b4c:	ldr	r3, [fp, r3]
   10b50:	ldr	r3, [r3]
   10b54:	str	r3, [sp, #28]
   10b58:	b	10ab4 <exit@plt+0xfc>
   10b5c:	ldr	r3, [pc, #880]	; 10ed4 <exit@plt+0x51c>
   10b60:	mov	r1, #1
   10b64:	str	r1, [sp, #20]
   10b68:	ldr	r3, [fp, r3]
   10b6c:	ldr	r3, [r3]
   10b70:	str	r3, [sp, #32]
   10b74:	b	10ab4 <exit@plt+0xfc>
   10b78:	ldr	r3, [pc, #852]	; 10ed4 <exit@plt+0x51c>
   10b7c:	mov	r1, #0
   10b80:	mov	r2, #10
   10b84:	ldr	r3, [fp, r3]
   10b88:	ldr	r0, [r3]
   10b8c:	bl	10940 <strtol@plt>
   10b90:	str	r0, [sp, #24]
   10b94:	b	10ab4 <exit@plt+0xfc>
   10b98:	bl	11184 <exit@plt+0x7cc>
   10b9c:	bl	12f8c <exit@plt+0x25d4>
   10ba0:	ldr	r3, [sp, #20]
   10ba4:	cmp	r3, #0
   10ba8:	beq	10b98 <exit@plt+0x1e0>
   10bac:	mov	r0, r7
   10bb0:	mov	r1, #0
   10bb4:	bl	10988 <db_env_create@plt>
   10bb8:	subs	r7, r0, #0
   10bbc:	beq	10c28 <exit@plt+0x270>
   10bc0:	ldr	r1, [pc, #764]	; 10ec4 <exit@plt+0x50c>
   10bc4:	ldr	r2, [pc, #764]	; 10ec8 <exit@plt+0x510>
   10bc8:	ldr	r5, [fp, r1]
   10bcc:	ldr	r4, [fp, r2]
   10bd0:	ldr	r6, [r5]
   10bd4:	ldr	r8, [r4]
   10bd8:	bl	109ac <db_strerror@plt>
   10bdc:	ldr	r2, [pc, #756]	; 10ed8 <exit@plt+0x520>
   10be0:	mov	r1, #1
   10be4:	add	r2, pc, r2
   10be8:	mov	r3, r8
   10bec:	str	r0, [sp]
   10bf0:	mov	r0, r6
   10bf4:	bl	1097c <__fprintf_chk@plt>
   10bf8:	ldr	r0, [sp, #40]	; 0x28
   10bfc:	cmp	r0, #0
   10c00:	beq	10c18 <exit@plt+0x260>
   10c04:	ldr	r3, [r0, #328]	; 0x148
   10c08:	mov	r1, #0
   10c0c:	blx	r3
   10c10:	subs	r7, r0, #0
   10c14:	bne	10dd8 <exit@plt+0x420>
   10c18:	bl	12fdc <exit@plt+0x2624>
   10c1c:	adds	r0, r7, #0
   10c20:	movne	r0, #1
   10c24:	b	10a64 <exit@plt+0xac>
   10c28:	ldr	r2, [pc, #660]	; 10ec4 <exit@plt+0x50c>
   10c2c:	ldr	r0, [sp, #40]	; 0x28
   10c30:	ldr	r5, [fp, r2]
   10c34:	ldr	r2, [r0, #932]	; 0x3a4
   10c38:	ldr	r1, [r5]
   10c3c:	blx	r2
   10c40:	ldr	r2, [pc, #640]	; 10ec8 <exit@plt+0x510>
   10c44:	ldr	r0, [sp, #40]	; 0x28
   10c48:	ldr	r4, [fp, r2]
   10c4c:	ldr	r3, [r0, #936]	; 0x3a8
   10c50:	ldr	r1, [r4]
   10c54:	blx	r3
   10c58:	ldr	r3, [sp, #24]
   10c5c:	cmp	r3, #0
   10c60:	beq	10ca0 <exit@plt+0x2e8>
   10c64:	ldr	r0, [sp, #40]	; 0x28
   10c68:	mov	r1, r7
   10c6c:	mov	r2, r3
   10c70:	mov	r3, #1
   10c74:	ldr	ip, [r0, #900]	; 0x384
   10c78:	blx	ip
   10c7c:	subs	r7, r0, #0
   10c80:	beq	10ca0 <exit@plt+0x2e8>
   10c84:	ldr	r0, [sp, #40]	; 0x28
   10c88:	mov	r1, r7
   10c8c:	ldr	r2, [pc, #584]	; 10edc <exit@plt+0x524>
   10c90:	ldr	r3, [r0, #344]	; 0x158
   10c94:	add	r2, pc, r2
   10c98:	blx	r3
   10c9c:	b	10bf8 <exit@plt+0x240>
   10ca0:	ldr	r0, [sp, #40]	; 0x28
   10ca4:	mov	r2, #4
   10ca8:	ldr	r1, [sp, #28]
   10cac:	mov	r3, #0
   10cb0:	ldr	ip, [r0, #748]	; 0x2ec
   10cb4:	blx	ip
   10cb8:	subs	r7, r0, #0
   10cbc:	beq	10d10 <exit@plt+0x358>
   10cc0:	movw	r3, #34567	; 0x8707
   10cc4:	movt	r3, #65535	; 0xffff
   10cc8:	cmp	r7, r3
   10ccc:	beq	10cf4 <exit@plt+0x33c>
   10cd0:	ldr	r0, [sp, #40]	; 0x28
   10cd4:	movw	r2, #1029	; 0x405
   10cd8:	ldr	r1, [sp, #28]
   10cdc:	mov	r3, #0
   10ce0:	movt	r2, #1
   10ce4:	ldr	ip, [r0, #748]	; 0x2ec
   10ce8:	blx	ip
   10cec:	subs	r7, r0, #0
   10cf0:	beq	10d10 <exit@plt+0x358>
   10cf4:	ldr	r0, [sp, #40]	; 0x28
   10cf8:	mov	r1, r7
   10cfc:	ldr	r2, [pc, #476]	; 10ee0 <exit@plt+0x528>
   10d00:	ldr	r3, [r0, #344]	; 0x158
   10d04:	add	r2, pc, r2
   10d08:	blx	r3
   10d0c:	b	10bf8 <exit@plt+0x240>
   10d10:	ldr	r6, [sp, #40]	; 0x28
   10d14:	mov	r0, r8
   10d18:	mov	r2, #0
   10d1c:	mov	r1, r6
   10d20:	bl	10958 <db_create@plt>
   10d24:	subs	r7, r0, #0
   10d28:	bne	10e04 <exit@plt+0x44c>
   10d2c:	ldr	r8, [sp, #48]	; 0x30
   10d30:	mov	r1, r7
   10d34:	str	r7, [sp, #8]
   10d38:	mov	r0, #5
   10d3c:	mov	r2, #1024	; 0x400
   10d40:	str	r0, [sp]
   10d44:	str	r2, [sp, #4]
   10d48:	mov	r0, r8
   10d4c:	ldr	r3, [sp, #36]	; 0x24
   10d50:	ldr	r2, [sp, #32]
   10d54:	ldr	ip, [r8, #548]	; 0x224
   10d58:	blx	ip
   10d5c:	subs	r7, r0, #0
   10d60:	bne	10e38 <exit@plt+0x480>
   10d64:	mov	r1, r9
   10d68:	ldr	r3, [r8, #536]	; 0x218
   10d6c:	mov	r0, r8
   10d70:	blx	r3
   10d74:	subs	r1, r0, #0
   10d78:	bne	10e88 <exit@plt+0x4d0>
   10d7c:	ldr	r3, [sp, #44]	; 0x2c
   10d80:	cmp	r3, #1
   10d84:	bne	10e6c <exit@plt+0x4b4>
   10d88:	mov	r1, r8
   10d8c:	mov	r2, sl
   10d90:	ldr	r0, [sp, #40]	; 0x28
   10d94:	bl	116a4 <exit@plt+0xcec>
   10d98:	subs	r1, r0, #0
   10d9c:	bne	10ea0 <exit@plt+0x4e8>
   10da0:	ldr	r3, [r8, #328]	; 0x148
   10da4:	mov	r0, r8
   10da8:	mov	r1, #0
   10dac:	blx	r3
   10db0:	subs	r7, r0, #0
   10db4:	beq	10bf8 <exit@plt+0x240>
   10db8:	ldr	r0, [sp, #40]	; 0x28
   10dbc:	mov	r1, r7
   10dc0:	ldr	r2, [pc, #284]	; 10ee4 <exit@plt+0x52c>
   10dc4:	ldr	r3, [sp, #32]
   10dc8:	add	r2, pc, r2
   10dcc:	ldr	ip, [r0, #344]	; 0x158
   10dd0:	blx	ip
   10dd4:	b	10bf8 <exit@plt+0x240>
   10dd8:	ldr	r5, [r5]
   10ddc:	ldr	r4, [r4]
   10de0:	bl	109ac <db_strerror@plt>
   10de4:	ldr	r2, [pc, #252]	; 10ee8 <exit@plt+0x530>
   10de8:	mov	r1, #1
   10dec:	add	r2, pc, r2
   10df0:	mov	r3, r4
   10df4:	str	r0, [sp]
   10df8:	mov	r0, r5
   10dfc:	bl	1097c <__fprintf_chk@plt>
   10e00:	b	10c18 <exit@plt+0x260>
   10e04:	ldr	r2, [pc, #224]	; 10eec <exit@plt+0x534>
   10e08:	mov	r0, r6
   10e0c:	ldr	r3, [r6, #344]	; 0x158
   10e10:	mov	r1, r7
   10e14:	add	r2, pc, r2
   10e18:	blx	r3
   10e1c:	ldr	r0, [sp, #40]	; 0x28
   10e20:	ldr	r2, [pc, #200]	; 10ef0 <exit@plt+0x538>
   10e24:	mov	r1, r7
   10e28:	add	r2, pc, r2
   10e2c:	ldr	r3, [r0, #344]	; 0x158
   10e30:	blx	r3
   10e34:	b	10bf8 <exit@plt+0x240>
   10e38:	ldr	r2, [pc, #180]	; 10ef4 <exit@plt+0x53c>
   10e3c:	mov	r0, r6
   10e40:	ldr	r3, [r6, #344]	; 0x158
   10e44:	mov	r1, r7
   10e48:	add	r2, pc, r2
   10e4c:	blx	r3
   10e50:	ldr	r0, [sp, #40]	; 0x28
   10e54:	ldr	r2, [pc, #156]	; 10ef8 <exit@plt+0x540>
   10e58:	mov	r1, r7
   10e5c:	add	r2, pc, r2
   10e60:	ldr	r3, [r0, #344]	; 0x158
   10e64:	blx	r3
   10e68:	b	10da0 <exit@plt+0x3e8>
   10e6c:	ldr	r0, [sp, #40]	; 0x28
   10e70:	ldr	r1, [pc, #132]	; 10efc <exit@plt+0x544>
   10e74:	ldr	r2, [r4]
   10e78:	add	r1, pc, r1
   10e7c:	ldr	r3, [r0, #348]	; 0x15c
   10e80:	blx	r3
   10e84:	b	10da0 <exit@plt+0x3e8>
   10e88:	ldr	r0, [sp, #40]	; 0x28
   10e8c:	ldr	r2, [pc, #108]	; 10f00 <exit@plt+0x548>
   10e90:	ldr	r3, [r0, #344]	; 0x158
   10e94:	add	r2, pc, r2
   10e98:	blx	r3
   10e9c:	b	10da0 <exit@plt+0x3e8>
   10ea0:	ldr	r0, [sp, #40]	; 0x28
   10ea4:	ldr	r2, [pc, #88]	; 10f04 <exit@plt+0x54c>
   10ea8:	ldr	r3, [r0, #344]	; 0x158
   10eac:	add	r2, pc, r2
   10eb0:	blx	r3
   10eb4:	b	10da0 <exit@plt+0x3e8>
   10eb8:	bl	10964 <__stack_chk_fail@plt>
   10ebc:	andeq	r3, r1, r8, lsl r6
   10ec0:	andeq	r0, r0, r0, rrx
   10ec4:	andeq	r0, r0, r8, rrx
   10ec8:	andeq	r0, r0, r4, rrx
   10ecc:	andeq	r3, r0, r0, asr #4
   10ed0:	andeq	r3, r0, ip, lsr #4
   10ed4:	andeq	r0, r0, ip, rrx
   10ed8:	andeq	r3, r0, ip, ror #1
   10edc:	andeq	r3, r0, r4, asr r0
   10ee0:	strdeq	r2, [r0], -ip
   10ee4:	andeq	r2, r0, ip, asr #31
   10ee8:			; <UNDEFINED> instruction: 0x00002fb8
   10eec:	strdeq	r2, [r0], -ip
   10ef0:	strdeq	r2, [r0], -ip
   10ef4:	andeq	r2, r0, r8, ror #29
   10ef8:	andeq	r2, r0, r8, asr #29
   10efc:	strdeq	r2, [r0], -r4
   10f00:	andeq	r2, r0, r8, lsr #29
   10f04:	andeq	r2, r0, r0, lsr #29
   10f08:	mov	fp, #0
   10f0c:	mov	lr, #0
   10f10:	pop	{r1}		; (ldr r1, [sp], #4)
   10f14:	mov	r2, sp
   10f18:	push	{r2}		; (str r2, [sp, #-4]!)
   10f1c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f20:	ldr	ip, [pc, #16]	; 10f38 <exit@plt+0x580>
   10f24:	push	{ip}		; (str ip, [sp, #-4]!)
   10f28:	ldr	r0, [pc, #12]	; 10f3c <exit@plt+0x584>
   10f2c:	ldr	r3, [pc, #12]	; 10f40 <exit@plt+0x588>
   10f30:	bl	108f8 <__libc_start_main@plt>
   10f34:	bl	108ec <abort@plt>
   10f38:	andeq	r3, r1, r4, asr #12
   10f3c:	andeq	r0, r1, r8, asr #19
   10f40:	andeq	r3, r1, r0, ror #11
   10f44:	ldr	r3, [pc, #20]	; 10f60 <exit@plt+0x5a8>
   10f48:	ldr	r2, [pc, #20]	; 10f64 <exit@plt+0x5ac>
   10f4c:	add	r3, pc, r3
   10f50:	ldr	r2, [r3, r2]
   10f54:	cmp	r2, #0
   10f58:	bxeq	lr
   10f5c:	b	10904 <__gmon_start__@plt>
   10f60:	andeq	r3, r1, ip, lsr #1
   10f64:	andeq	r0, r0, ip, asr r0
   10f68:	push	{r3, lr}
   10f6c:	movw	r0, #16504	; 0x4078
   10f70:	ldr	r3, [pc, #36]	; 10f9c <exit@plt+0x5e4>
   10f74:	movt	r0, #2
   10f78:	rsb	r3, r0, r3
   10f7c:	cmp	r3, #6
   10f80:	popls	{r3, pc}
   10f84:	movw	r3, #0
   10f88:	movt	r3, #0
   10f8c:	cmp	r3, #0
   10f90:	popeq	{r3, pc}
   10f94:	blx	r3
   10f98:	pop	{r3, pc}
   10f9c:	andeq	r4, r2, fp, ror r0
   10fa0:	push	{r3, lr}
   10fa4:	movw	r0, #16504	; 0x4078
   10fa8:	movw	r3, #16504	; 0x4078
   10fac:	movt	r0, #2
   10fb0:	movt	r3, #2
   10fb4:	rsb	r3, r0, r3
   10fb8:	asr	r3, r3, #2
   10fbc:	add	r3, r3, r3, lsr #31
   10fc0:	asrs	r1, r3, #1
   10fc4:	popeq	{r3, pc}
   10fc8:	movw	r2, #0
   10fcc:	movt	r2, #0
   10fd0:	cmp	r2, #0
   10fd4:	popeq	{r3, pc}
   10fd8:	blx	r2
   10fdc:	pop	{r3, pc}
   10fe0:	push	{r4, lr}
   10fe4:	movw	r4, #16504	; 0x4078
   10fe8:	movt	r4, #2
   10fec:	ldrb	r3, [r4]
   10ff0:	cmp	r3, #0
   10ff4:	popne	{r4, pc}
   10ff8:	bl	10f68 <exit@plt+0x5b0>
   10ffc:	mov	r3, #1
   11000:	strb	r3, [r4]
   11004:	pop	{r4, pc}
   11008:	movw	r0, #16116	; 0x3ef4
   1100c:	movt	r0, #2
   11010:	push	{r3, lr}
   11014:	ldr	r3, [r0]
   11018:	cmp	r3, #0
   1101c:	beq	11034 <exit@plt+0x67c>
   11020:	movw	r3, #0
   11024:	movt	r3, #0
   11028:	cmp	r3, #0
   1102c:	beq	11034 <exit@plt+0x67c>
   11030:	blx	r3
   11034:	pop	{r3, lr}
   11038:	b	10fa0 <exit@plt+0x5e8>
   1103c:	andeq	r0, r0, r0
   11040:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11044:	mov	r8, #512	; 0x200
   11048:	lsl	r8, r8, r1
   1104c:	mov	r7, #88	; 0x58
   11050:	sub	r4, r8, #26
   11054:	mov	r6, r1
   11058:	mla	r7, r7, r1, r2
   1105c:	mov	r1, r4
   11060:	mov	r9, r2
   11064:	mov	sl, r0
   11068:	bl	1300c <exit@plt+0x2654>
   1106c:	mov	r1, r4
   11070:	add	r7, r7, #784	; 0x310
   11074:	ldrd	r4, [r7]
   11078:	adds	r4, r4, r0
   1107c:	mov	r0, sl
   11080:	adc	r5, r5, #0
   11084:	strd	r4, [r7]
   11088:	bl	131f8 <exit@plt+0x2840>
   1108c:	vmov	s9, r8
   11090:	vmov.f64	d5, #36	; 0x41200000  10.0
   11094:	vcvt.f64.u32	d6, s9
   11098:	add	r1, r1, #26
   1109c:	vmov	s9, r1
   110a0:	vcvt.f64.u32	d7, s9
   110a4:	vmul.f64	d7, d7, d5
   110a8:	vdiv.f64	d7, d7, d6
   110ac:	vcvt.s32.f64	s13, d7
   110b0:	vmov	r3, s13
   110b4:	cmp	r3, #10
   110b8:	bgt	110e8 <exit@plt+0x730>
   110bc:	add	r1, r6, r6, lsl #2
   110c0:	mov	r2, #704	; 0x2c0
   110c4:	mov	r0, #0
   110c8:	add	r6, r6, r1, lsl #1
   110cc:	add	r3, r6, r3
   110d0:	add	r9, r9, r3, lsl #3
   110d4:	ldrd	r4, [r9, r2]
   110d8:	adds	r4, r4, #1
   110dc:	adc	r5, r5, #0
   110e0:	strd	r4, [r9, r2]
   110e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   110e8:	movw	r0, #34536	; 0x86e8
   110ec:	movt	r0, #65535	; 0xffff
   110f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   110f4:	lsl	r2, r0, #2
   110f8:	add	ip, r1, r2
   110fc:	push	{r4}		; (str r4, [sp, #-4]!)
   11100:	ldr	r3, [ip, #2144]	; 0x860
   11104:	cmp	r3, #0
   11108:	beq	11174 <exit@plt+0x7bc>
   1110c:	vmov.f64	d5, #36	; 0x41200000  10.0
   11110:	mov	r4, #512	; 0x200
   11114:	vmov	s13, r3
   11118:	lsl	r4, r4, r0
   1111c:	vmov	s15, r4
   11120:	vcvt.f64.u32	d4, s13
   11124:	vmul.f64	d5, d4, d5
   11128:	vcvt.f64.u32	d6, s15
   1112c:	vdiv.f64	d7, d5, d6
   11130:	vcvt.s32.f64	s13, d7
   11134:	vmov	r3, s13
   11138:	cmp	r3, #10
   1113c:	movwgt	r0, #34536	; 0x86e8
   11140:	movtgt	r0, #65535	; 0xffff
   11144:	ble	11150 <exit@plt+0x798>
   11148:	pop	{r4}		; (ldr r4, [sp], #4)
   1114c:	bx	lr
   11150:	add	r2, r2, r0
   11154:	mov	r4, #1408	; 0x580
   11158:	add	r0, r0, r2, lsl #1
   1115c:	add	r3, r0, r3
   11160:	add	r1, r1, r3, lsl #3
   11164:	ldrd	r2, [r1, r4]
   11168:	adds	r2, r2, #1
   1116c:	adc	r3, r3, #0
   11170:	strd	r2, [r1, r4]
   11174:	mov	r0, #0
   11178:	str	r0, [ip, #2144]	; 0x860
   1117c:	pop	{r4}		; (ldr r4, [sp], #4)
   11180:	bx	lr
   11184:	ldr	r3, [pc, #68]	; 111d0 <exit@plt+0x818>
   11188:	mov	r1, #1
   1118c:	ldr	r2, [pc, #64]	; 111d4 <exit@plt+0x81c>
   11190:	ldr	r0, [pc, #64]	; 111d8 <exit@plt+0x820>
   11194:	add	r3, pc, r3
   11198:	push	{lr}		; (str lr, [sp, #-4]!)
   1119c:	sub	sp, sp, #12
   111a0:	ldr	r0, [r3, r0]
   111a4:	ldr	r3, [r3, r2]
   111a8:	ldr	ip, [pc, #44]	; 111dc <exit@plt+0x824>
   111ac:	ldr	r2, [pc, #44]	; 111e0 <exit@plt+0x828>
   111b0:	add	ip, pc, ip
   111b4:	ldr	r0, [r0]
   111b8:	ldr	r3, [r3]
   111bc:	add	r2, pc, r2
   111c0:	str	ip, [sp]
   111c4:	bl	1097c <__fprintf_chk@plt>
   111c8:	mov	r0, #1
   111cc:	bl	109b8 <exit@plt>
   111d0:	andeq	r2, r1, r4, ror #28
   111d4:	andeq	r0, r0, r4, rrx
   111d8:	andeq	r0, r0, r8, rrx
   111dc:			; <UNDEFINED> instruction: 0x000024b0
   111e0:	muleq	r0, r4, r4
   111e4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111e8:	tst	r1, #1024	; 0x400
   111ec:	ldr	r4, [sp, #40]	; 0x28
   111f0:	mov	r6, #512	; 0x200
   111f4:	mov	r9, r0
   111f8:	mov	sl, r3
   111fc:	lsl	r6, r6, r4
   11200:	ldr	ip, [sp, #44]	; 0x2c
   11204:	ldr	r8, [sp, #48]	; 0x30
   11208:	subne	fp, r6, #64	; 0x40
   1120c:	ldr	r7, [sp, #52]	; 0x34
   11210:	bne	11220 <exit@plt+0x868>
   11214:	tst	r1, #1
   11218:	subne	fp, r6, #32
   1121c:	beq	11314 <exit@plt+0x95c>
   11220:	lsr	fp, fp, #2
   11224:	sub	fp, fp, #10
   11228:	uxth	fp, fp
   1122c:	cmp	fp, r2
   11230:	movcs	r5, #0
   11234:	movcc	r5, #1
   11238:	cmp	r5, #0
   1123c:	bne	11328 <exit@plt+0x970>
   11240:	cmp	ip, #2
   11244:	beq	11268 <exit@plt+0x8b0>
   11248:	cmp	ip, #3
   1124c:	moveq	r5, #2
   11250:	beq	11268 <exit@plt+0x8b0>
   11254:	cmp	ip, #1
   11258:	addeq	r2, r2, #6
   1125c:	movweq	r5, #65532	; 0xfffc
   11260:	andeq	r5, r2, r5
   11264:	addeq	r5, r5, #2
   11268:	cmp	sl, fp
   1126c:	bhi	11364 <exit@plt+0x9ac>
   11270:	cmp	r8, #2
   11274:	beq	1128c <exit@plt+0x8d4>
   11278:	cmp	r8, #4
   1127c:	addeq	r5, r5, #14
   11280:	beq	11294 <exit@plt+0x8dc>
   11284:	cmp	r8, #1
   11288:	beq	113c8 <exit@plt+0xa10>
   1128c:	cmp	r5, #0
   11290:	beq	113e0 <exit@plt+0xa28>
   11294:	lsl	r0, r4, #2
   11298:	add	r3, r7, r0
   1129c:	ldr	r1, [r3, #2112]	; 0x840
   112a0:	cmp	r1, #0
   112a4:	moveq	r1, #26
   112a8:	add	r2, r1, r5
   112ac:	streq	r1, [r3, #2112]	; 0x840
   112b0:	cmp	r6, r2
   112b4:	bcs	1131c <exit@plt+0x964>
   112b8:	vmov.f64	d7, #36	; 0x41200000  10.0
   112bc:	vmov	s11, r1
   112c0:	vcvt.f64.u32	d6, s11
   112c4:	vmov	s11, r6
   112c8:	vmul.f64	d7, d6, d7
   112cc:	vcvt.f64.u32	d6, s11
   112d0:	vdiv.f64	d7, d7, d6
   112d4:	vcvt.s32.f64	s13, d7
   112d8:	vmov	r2, s13
   112dc:	cmp	r2, #10
   112e0:	bgt	113a0 <exit@plt+0x9e8>
   112e4:	add	ip, r0, r4
   112e8:	add	r1, r5, #26
   112ec:	mov	r0, #0
   112f0:	add	r4, r4, ip, lsl #1
   112f4:	add	r2, r4, r2
   112f8:	lsl	r2, r2, #3
   112fc:	ldrd	r4, [r7, r2]
   11300:	adds	r4, r4, #1
   11304:	adc	r5, r5, #0
   11308:	strd	r4, [r7, r2]
   1130c:	str	r1, [r3, #2112]	; 0x840
   11310:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11314:	sub	fp, r6, #26
   11318:	b	11220 <exit@plt+0x868>
   1131c:	str	r2, [r3, #2112]	; 0x840
   11320:	mov	r0, #0
   11324:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11328:	mov	r0, r2
   1132c:	mov	r1, r4
   11330:	mov	r2, r7
   11334:	bl	11040 <exit@plt+0x688>
   11338:	subs	r5, r0, #0
   1133c:	moveq	r5, #14
   11340:	beq	11268 <exit@plt+0x8b0>
   11344:	ldr	r2, [pc, #160]	; 113ec <exit@plt+0xa34>
   11348:	mov	r0, r9
   1134c:	ldr	r3, [r9, #344]	; 0x158
   11350:	mov	r1, r5
   11354:	add	r2, pc, r2
   11358:	blx	r3
   1135c:	mov	r0, r5
   11360:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11364:	mov	r0, sl
   11368:	mov	r1, r4
   1136c:	mov	r2, r7
   11370:	add	r5, r5, #14
   11374:	bl	11040 <exit@plt+0x688>
   11378:	subs	r8, r0, #0
   1137c:	beq	11294 <exit@plt+0x8dc>
   11380:	ldr	r2, [pc, #104]	; 113f0 <exit@plt+0xa38>
   11384:	mov	r0, r9
   11388:	ldr	r3, [r9, #344]	; 0x158
   1138c:	mov	r1, r8
   11390:	add	r2, pc, r2
   11394:	blx	r3
   11398:	mov	r0, r8
   1139c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113a0:	ldr	r2, [pc, #76]	; 113f4 <exit@plt+0xa3c>
   113a4:	mov	r0, r9
   113a8:	ldr	r3, [r9, #344]	; 0x158
   113ac:	movw	r1, #34536	; 0x86e8
   113b0:	add	r2, pc, r2
   113b4:	movt	r1, #65535	; 0xffff
   113b8:	blx	r3
   113bc:	movw	r0, #34536	; 0x86e8
   113c0:	movt	r0, #65535	; 0xffff
   113c4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113c8:	add	sl, sl, #6
   113cc:	movw	r3, #65532	; 0xfffc
   113d0:	and	r3, sl, r3
   113d4:	add	r3, r3, #2
   113d8:	add	r5, r5, r3
   113dc:	b	11294 <exit@plt+0x8dc>
   113e0:	movw	r0, #34535	; 0x86e7
   113e4:	movt	r0, #65535	; 0xffff
   113e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113ec:	andeq	r2, r0, r8, asr #6
   113f0:	andeq	r2, r0, ip, lsr #6
   113f4:	andeq	r2, r0, r4, lsr #6
   113f8:	tst	r1, #1024	; 0x400
   113fc:	push	{r4, r5, r6, r7, r8, lr}
   11400:	mov	r5, #512	; 0x200
   11404:	mov	r4, r3
   11408:	lsl	r5, r5, r3
   1140c:	mov	r7, r0
   11410:	ldr	r6, [sp, #24]
   11414:	movne	r3, #64	; 0x40
   11418:	bne	11428 <exit@plt+0xa70>
   1141c:	tst	r1, #1
   11420:	moveq	r3, #26
   11424:	movne	r3, #32
   11428:	rsb	r3, r3, r5
   1142c:	lsr	r3, r3, #2
   11430:	sub	r3, r3, #10
   11434:	uxth	r3, r3
   11438:	cmp	r3, r2
   1143c:	bcs	114e0 <exit@plt+0xb28>
   11440:	mov	r0, r2
   11444:	mov	r1, r4
   11448:	mov	r2, r6
   1144c:	bl	11040 <exit@plt+0x688>
   11450:	subs	r8, r0, #0
   11454:	moveq	ip, #14
   11458:	bne	11528 <exit@plt+0xb70>
   1145c:	lsl	r0, r4, #2
   11460:	add	r3, r6, r0
   11464:	ldr	r2, [r3, #2144]	; 0x860
   11468:	cmp	r2, #0
   1146c:	moveq	r2, #26
   11470:	add	r1, r2, ip
   11474:	streq	r2, [r3, #2144]	; 0x860
   11478:	cmp	r5, r1
   1147c:	bcs	114f4 <exit@plt+0xb3c>
   11480:	vmov.f64	d7, #36	; 0x41200000  10.0
   11484:	vmov	s11, r2
   11488:	vcvt.f64.u32	d6, s11
   1148c:	vmov	s11, r5
   11490:	vmul.f64	d7, d6, d7
   11494:	vcvt.f64.u32	d6, s11
   11498:	vdiv.f64	d7, d7, d6
   1149c:	vcvt.s32.f64	s13, d7
   114a0:	vmov	r2, s13
   114a4:	cmp	r2, #10
   114a8:	bgt	11500 <exit@plt+0xb48>
   114ac:	add	r5, r0, r4
   114b0:	mov	r1, #1408	; 0x580
   114b4:	add	ip, ip, #26
   114b8:	mov	r0, #0
   114bc:	add	r4, r4, r5, lsl #1
   114c0:	add	r2, r2, r4
   114c4:	add	r6, r6, r2, lsl #3
   114c8:	ldrd	r4, [r6, r1]
   114cc:	adds	r4, r4, #1
   114d0:	adc	r5, r5, #0
   114d4:	strd	r4, [r6, r1]
   114d8:	str	ip, [r3, #2144]	; 0x860
   114dc:	pop	{r4, r5, r6, r7, r8, pc}
   114e0:	add	r2, r2, #6
   114e4:	movw	ip, #65532	; 0xfffc
   114e8:	and	ip, r2, ip
   114ec:	add	ip, ip, #2
   114f0:	b	1145c <exit@plt+0xaa4>
   114f4:	str	r1, [r3, #2144]	; 0x860
   114f8:	mov	r0, #0
   114fc:	pop	{r4, r5, r6, r7, r8, pc}
   11500:	ldr	r2, [pc, #64]	; 11548 <exit@plt+0xb90>
   11504:	mov	r0, r7
   11508:	ldr	r3, [r7, #344]	; 0x158
   1150c:	movw	r1, #34536	; 0x86e8
   11510:	add	r2, pc, r2
   11514:	movt	r1, #65535	; 0xffff
   11518:	blx	r3
   1151c:	movw	r0, #34536	; 0x86e8
   11520:	movt	r0, #65535	; 0xffff
   11524:	pop	{r4, r5, r6, r7, r8, pc}
   11528:	ldr	r2, [pc, #28]	; 1154c <exit@plt+0xb94>
   1152c:	mov	r0, r7
   11530:	ldr	r3, [r7, #344]	; 0x158
   11534:	mov	r1, r8
   11538:	add	r2, pc, r2
   1153c:	blx	r3
   11540:	mov	r0, r8
   11544:	pop	{r4, r5, r6, r7, r8, pc}
   11548:	ldrdeq	r2, [r0], -ip
   1154c:	andeq	r2, r0, r4, lsl #3
   11550:	tst	r0, #1024	; 0x400
   11554:	beq	115a0 <exit@plt+0xbe8>
   11558:	lsl	r2, r2, #1
   1155c:	add	r3, r1, r2
   11560:	ldrh	r3, [r3, #64]	; 0x40
   11564:	add	r3, r1, r3
   11568:	ldrb	r3, [r3, #2]
   1156c:	bic	r3, r3, #128	; 0x80
   11570:	cmp	r3, #1
   11574:	mov	r3, #64	; 0x40
   11578:	beq	115cc <exit@plt+0xc14>
   1157c:	add	r3, r1, r3
   11580:	movw	r0, #65532	; 0xfffc
   11584:	ldrh	r3, [r3, r2]
   11588:	add	r1, r1, r3
   1158c:	ldr	r3, [r1, #8]
   11590:	add	r3, r3, #6
   11594:	and	r0, r3, r0
   11598:	add	r0, r0, #2
   1159c:	bx	lr
   115a0:	tst	r0, #1
   115a4:	beq	115ec <exit@plt+0xc34>
   115a8:	lsl	r2, r2, #1
   115ac:	add	r3, r1, r2
   115b0:	ldrh	r3, [r3, #32]
   115b4:	add	r3, r1, r3
   115b8:	ldrb	r3, [r3, #2]
   115bc:	bic	r3, r3, #128	; 0x80
   115c0:	cmp	r3, #1
   115c4:	mov	r3, #32
   115c8:	bne	1157c <exit@plt+0xbc4>
   115cc:	add	r3, r1, r3
   115d0:	movw	r0, #65532	; 0xfffc
   115d4:	ldrh	r3, [r3, r2]
   115d8:	ldrh	r3, [r1, r3]
   115dc:	add	r3, r3, #6
   115e0:	and	r0, r3, r0
   115e4:	add	r0, r0, #2
   115e8:	bx	lr
   115ec:	lsl	r2, r2, #1
   115f0:	add	r3, r1, r2
   115f4:	ldrh	r3, [r3, #26]
   115f8:	add	r3, r1, r3
   115fc:	ldrb	r3, [r3, #2]
   11600:	bic	r3, r3, #128	; 0x80
   11604:	cmp	r3, #1
   11608:	mov	r3, #26
   1160c:	bne	1157c <exit@plt+0xbc4>
   11610:	b	115cc <exit@plt+0xc14>
   11614:	tst	r0, #1024	; 0x400
   11618:	beq	1164c <exit@plt+0xc94>
   1161c:	add	r2, r1, r2, lsl #1
   11620:	ldrh	r3, [r2, #64]	; 0x40
   11624:	add	r3, r1, r3
   11628:	ldrb	r3, [r3, #2]
   1162c:	bic	r3, r3, #128	; 0x80
   11630:	cmp	r3, #1
   11634:	mov	r3, #64	; 0x40
   11638:	beq	11674 <exit@plt+0xcbc>
   1163c:	ldrh	r3, [r2, r3]
   11640:	add	r1, r1, r3
   11644:	ldr	r0, [r1, #8]
   11648:	bx	lr
   1164c:	tst	r0, #1
   11650:	beq	11680 <exit@plt+0xcc8>
   11654:	add	r2, r1, r2, lsl #1
   11658:	ldrh	r3, [r2, #32]
   1165c:	add	r3, r1, r3
   11660:	ldrb	r3, [r3, #2]
   11664:	bic	r3, r3, #128	; 0x80
   11668:	cmp	r3, #1
   1166c:	mov	r3, #32
   11670:	bne	1163c <exit@plt+0xc84>
   11674:	ldrh	r3, [r2, r3]
   11678:	ldrh	r0, [r1, r3]
   1167c:	bx	lr
   11680:	add	r2, r1, r2, lsl #1
   11684:	ldrh	r3, [r2, #26]
   11688:	add	r3, r1, r3
   1168c:	ldrb	r3, [r3, #2]
   11690:	bic	r3, r3, #128	; 0x80
   11694:	cmp	r3, #1
   11698:	mov	r3, #26
   1169c:	bne	1163c <exit@plt+0xc84>
   116a0:	b	11674 <exit@plt+0xcbc>
   116a4:	ldr	r3, [pc, #1956]	; 11e50 <exit@plt+0x1498>
   116a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116ac:	vpush	{d8-d10}
   116b0:	sub	sp, sp, #2608	; 0xa30
   116b4:	ldr	ip, [pc, #1944]	; 11e54 <exit@plt+0x149c>
   116b8:	sub	sp, sp, #4
   116bc:	add	r3, pc, r3
   116c0:	add	lr, sp, #424	; 0x1a8
   116c4:	str	r2, [sp, #68]	; 0x44
   116c8:	mov	r5, r1
   116cc:	str	lr, [sp, #56]	; 0x38
   116d0:	mov	r1, #0
   116d4:	ldr	ip, [r3, ip]
   116d8:	mov	r2, #2176	; 0x880
   116dc:	mov	r4, r0
   116e0:	mov	r0, lr
   116e4:	ldr	r3, [ip]
   116e8:	str	ip, [sp, #76]	; 0x4c
   116ec:	str	r3, [sp, #2604]	; 0xa2c
   116f0:	bl	10928 <memset@plt>
   116f4:	mov	r1, #0
   116f8:	ldr	ip, [r5, #336]	; 0x150
   116fc:	mov	r0, r5
   11700:	add	r2, sp, #100	; 0x64
   11704:	mov	r3, r1
   11708:	blx	ip
   1170c:	subs	r5, r0, #0
   11710:	bne	11a9c <exit@plt+0x10e4>
   11714:	ldr	r3, [pc, #1852]	; 11e58 <exit@plt+0x14a0>
   11718:	add	r0, sp, #424	; 0x1a8
   1171c:	mov	r2, r5
   11720:	str	r0, [sp]
   11724:	mov	r1, #1
   11728:	ldr	r0, [sp, #100]	; 0x64
   1172c:	add	r3, pc, r3
   11730:	bl	108e0 <__bam_traverse@plt>
   11734:	subs	r5, r0, #0
   11738:	bne	11b38 <exit@plt+0x1180>
   1173c:	add	r1, sp, #424	; 0x1a8
   11740:	vmov.f64	d7, #36	; 0x41200000  10.0
   11744:	add	r0, r1, #2096	; 0x830
   11748:	mov	ip, #512	; 0x200
   1174c:	add	r0, r0, #12
   11750:	mov	r1, r5
   11754:	b	117ec <exit@plt+0xe34>
   11758:	add	r2, r1, r1, lsl #2
   1175c:	add	r2, r1, r2, lsl #1
   11760:	add	r3, r2, r3
   11764:	add	r2, sp, #2608	; 0xa30
   11768:	add	lr, r2, r3, lsl #3
   1176c:	sub	lr, lr, #2176	; 0x880
   11770:	ldrd	r2, [lr, #-8]
   11774:	adds	r2, r2, #1
   11778:	adc	r3, r3, #0
   1177c:	strd	r2, [lr, #-8]
   11780:	ldr	r3, [r0, #32]
   11784:	cmp	r3, #0
   11788:	beq	117e0 <exit@plt+0xe28>
   1178c:	vmov	s9, r3
   11790:	lsl	r3, ip, r1
   11794:	vcvt.f64.u32	d5, s9
   11798:	vmov	s9, r3
   1179c:	vmul.f64	d5, d5, d7
   117a0:	vcvt.f64.s32	d6, s9
   117a4:	vdiv.f64	d6, d5, d6
   117a8:	vcvt.s32.f64	s11, d6
   117ac:	vmov	r3, s11
   117b0:	cmp	r3, #10
   117b4:	bgt	11a74 <exit@plt+0x10bc>
   117b8:	add	r2, r1, r1, lsl #2
   117bc:	add	r2, r1, r2, lsl #1
   117c0:	add	r3, r2, r3
   117c4:	add	r2, sp, #2608	; 0xa30
   117c8:	add	lr, r2, r3, lsl #3
   117cc:	sub	lr, lr, #776	; 0x308
   117d0:	ldrd	r2, [lr]
   117d4:	adds	r2, r2, #1
   117d8:	adc	r3, r3, #0
   117dc:	strd	r2, [lr]
   117e0:	add	r1, r1, #1
   117e4:	cmp	r1, #8
   117e8:	beq	11848 <exit@plt+0xe90>
   117ec:	ldr	r3, [r0, #4]!
   117f0:	cmp	r3, #0
   117f4:	beq	11780 <exit@plt+0xdc8>
   117f8:	vmov	s9, r3
   117fc:	lsl	r2, ip, r1
   11800:	vcvt.f64.u32	d5, s9
   11804:	vmov	s9, r2
   11808:	vmul.f64	d5, d5, d7
   1180c:	vcvt.f64.s32	d6, s9
   11810:	vdiv.f64	d6, d5, d6
   11814:	vcvt.s32.f64	s11, d6
   11818:	vmov	r3, s11
   1181c:	cmp	r3, #10
   11820:	ble	11758 <exit@plt+0xda0>
   11824:	ldr	r2, [pc, #1584]	; 11e5c <exit@plt+0x14a4>
   11828:	movw	r1, #34536	; 0x86e8
   1182c:	ldr	r3, [r4, #344]	; 0x158
   11830:	movt	r1, #65535	; 0xffff
   11834:	mov	r0, r4
   11838:	add	r2, pc, r2
   1183c:	blx	r3
   11840:	movw	r5, #34536	; 0x86e8
   11844:	movt	r5, #65535	; 0xffff
   11848:	ldr	r0, [sp, #100]	; 0x64
   1184c:	cmp	r0, #0
   11850:	beq	11864 <exit@plt+0xeac>
   11854:	ldr	r3, [r0, #224]	; 0xe0
   11858:	blx	r3
   1185c:	subs	r3, r0, #0
   11860:	bne	11b54 <exit@plt+0x119c>
   11864:	cmp	r5, #0
   11868:	bne	11ab4 <exit@plt+0x10fc>
   1186c:	add	fp, sp, #424	; 0x1a8
   11870:	mov	sl, r5
   11874:	add	r4, sp, #232	; 0xe8
   11878:	add	r5, sp, #296	; 0x128
   1187c:	str	r4, [sp, #52]	; 0x34
   11880:	add	ip, sp, #360	; 0x168
   11884:	str	r5, [sp, #48]	; 0x30
   11888:	add	r4, sp, #104	; 0x68
   1188c:	add	r5, sp, #168	; 0xa8
   11890:	str	ip, [sp, #44]	; 0x2c
   11894:	str	r4, [sp, #60]	; 0x3c
   11898:	str	r5, [sp, #64]	; 0x40
   1189c:	str	sl, [sp, #24]
   118a0:	ldr	lr, [sp, #24]
   118a4:	mov	ip, #512	; 0x200
   118a8:	add	r4, sp, #232	; 0xe8
   118ac:	add	r5, sp, #296	; 0x128
   118b0:	lsl	ip, ip, lr
   118b4:	add	lr, sp, #360	; 0x168
   118b8:	mov	r8, #0
   118bc:	mov	r9, #0
   118c0:	str	ip, [sp, #32]
   118c4:	mov	r0, r8
   118c8:	mov	r1, r9
   118cc:	mov	r2, r8
   118d0:	mov	r3, r9
   118d4:	mov	ip, #0
   118d8:	strd	r8, [r4, sl]
   118dc:	mov	r6, r8
   118e0:	strd	r8, [r5, sl]
   118e4:	mov	r7, r9
   118e8:	strd	r8, [lr, sl]
   118ec:	b	11900 <exit@plt+0xf48>
   118f0:	mov	r2, r8
   118f4:	mov	r3, r9
   118f8:	mov	r6, r4
   118fc:	mov	r7, r5
   11900:	add	lr, fp, ip
   11904:	ldrd	r8, [fp, ip]
   11908:	add	r4, lr, #704	; 0x2c0
   1190c:	add	lr, lr, #1408	; 0x580
   11910:	adds	r0, r0, r8
   11914:	add	ip, ip, #8
   11918:	ldrd	r4, [r4]
   1191c:	adc	r1, r1, r9
   11920:	ldrd	r8, [lr]
   11924:	adds	r4, r4, r6
   11928:	adc	r5, r5, r7
   1192c:	adds	r8, r8, r2
   11930:	adc	r9, r9, r3
   11934:	cmp	ip, #88	; 0x58
   11938:	bne	118f0 <exit@plt+0xf38>
   1193c:	adds	r2, r0, r8
   11940:	mov	r6, r0
   11944:	ldr	r0, [sp, #24]
   11948:	adc	r3, r1, r9
   1194c:	mov	r7, r1
   11950:	adds	r2, r2, r4
   11954:	add	r0, r0, #1
   11958:	str	r0, [sp, #24]
   1195c:	ldr	r0, [sp, #32]
   11960:	add	ip, sp, #232	; 0xe8
   11964:	adc	r3, r3, r5
   11968:	add	fp, fp, #88	; 0x58
   1196c:	strd	r8, [ip, sl]
   11970:	add	ip, sl, #104	; 0x68
   11974:	asr	r1, r0, #31
   11978:	strd	r0, [sp, #16]
   1197c:	ldr	lr, [sp, #20]
   11980:	mov	r0, sp
   11984:	ldr	r1, [sp, #24]
   11988:	strd	r2, [ip, r0]
   1198c:	add	r0, sp, #296	; 0x128
   11990:	cmp	r1, #8
   11994:	add	ip, sp, #360	; 0x168
   11998:	mul	r1, r2, lr
   1199c:	ldr	lr, [sp, #32]
   119a0:	strd	r6, [r0, sl]
   119a4:	add	r0, sl, #168	; 0xa8
   119a8:	strd	r4, [ip, sl]
   119ac:	add	sl, sl, #8
   119b0:	mla	r1, lr, r3, r1
   119b4:	umull	r2, r3, r2, lr
   119b8:	mov	lr, sp
   119bc:	add	r3, r1, r3
   119c0:	strd	r2, [r0, lr]
   119c4:	bne	118a0 <exit@plt+0xee8>
   119c8:	ldr	r4, [sp, #68]	; 0x44
   119cc:	cmp	r4, #1
   119d0:	beq	11b78 <exit@plt+0x11c0>
   119d4:	movw	r3, #63288	; 0xf738
   119d8:	add	r0, sp, #2608	; 0xa30
   119dc:	movt	r3, #65535	; 0xffff
   119e0:	ldrd	r2, [r3, r0]
   119e4:	orrs	r1, r2, r3
   119e8:	bne	11ad0 <exit@plt+0x1118>
   119ec:	movw	r3, #63096	; 0xf678
   119f0:	movt	r3, #65535	; 0xffff
   119f4:	add	lr, sp, #168	; 0xa8
   119f8:	mov	r9, #0
   119fc:	ldrd	r0, [r0, r3]
   11a00:	mov	ip, #1
   11a04:	ldrd	r2, [lr, #8]!
   11a08:	orrs	r4, r2, r3
   11a0c:	beq	11a24 <exit@plt+0x106c>
   11a10:	cmp	r3, r1
   11a14:	cmpeq	r2, r0
   11a18:	movcc	r0, r2
   11a1c:	movcc	r1, r3
   11a20:	movcc	r9, ip
   11a24:	add	ip, ip, #1
   11a28:	cmp	ip, #8
   11a2c:	bne	11a04 <exit@plt+0x104c>
   11a30:	ldr	r1, [pc, #1064]	; 11e60 <exit@plt+0x14a8>
   11a34:	mov	r2, #512	; 0x200
   11a38:	mov	r0, #1
   11a3c:	lsl	r2, r2, r9
   11a40:	add	r1, pc, r1
   11a44:	mov	r5, #0
   11a48:	bl	10910 <__printf_chk@plt>
   11a4c:	ldr	r4, [sp, #76]	; 0x4c
   11a50:	mov	r0, r5
   11a54:	ldr	r2, [sp, #2604]	; 0xa2c
   11a58:	ldr	r3, [r4]
   11a5c:	cmp	r2, r3
   11a60:	bne	12298 <exit@plt+0x18e0>
   11a64:	add	sp, sp, #2608	; 0xa30
   11a68:	add	sp, sp, #4
   11a6c:	vpop	{d8-d10}
   11a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a74:	ldr	r2, [pc, #1000]	; 11e64 <exit@plt+0x14ac>
   11a78:	movw	r1, #34536	; 0x86e8
   11a7c:	ldr	r3, [r4, #344]	; 0x158
   11a80:	movt	r1, #65535	; 0xffff
   11a84:	mov	r0, r4
   11a88:	add	r2, pc, r2
   11a8c:	movw	r5, #34536	; 0x86e8
   11a90:	blx	r3
   11a94:	movt	r5, #65535	; 0xffff
   11a98:	b	11848 <exit@plt+0xe90>
   11a9c:	ldr	r2, [pc, #964]	; 11e68 <exit@plt+0x14b0>
   11aa0:	mov	r0, r4
   11aa4:	ldr	r3, [r4, #344]	; 0x158
   11aa8:	mov	r1, r5
   11aac:	add	r2, pc, r2
   11ab0:	blx	r3
   11ab4:	ldr	r2, [pc, #944]	; 11e6c <exit@plt+0x14b4>
   11ab8:	mov	r0, r4
   11abc:	ldr	r3, [r4, #344]	; 0x158
   11ac0:	mov	r1, r5
   11ac4:	add	r2, pc, r2
   11ac8:	blx	r3
   11acc:	b	11a4c <exit@plt+0x1094>
   11ad0:	add	r5, sp, #360	; 0x168
   11ad4:	add	sl, sp, #352	; 0x160
   11ad8:	add	fp, sp, #104	; 0x68
   11adc:	mov	r9, #0
   11ae0:	mov	r8, #1
   11ae4:	mov	r6, r5
   11ae8:	vldr	d9, [pc, #840]	; 11e38 <exit@plt+0x1480>
   11aec:	ldrd	r2, [r6, #8]!
   11af0:	ldrd	r0, [sl, #8]!
   11af4:	ldrd	r4, [fp, #8]!
   11af8:	subs	r0, r0, r2
   11afc:	sbc	r1, r1, r3
   11b00:	bl	1355c <exit@plt+0x2ba4>
   11b04:	vmov	d8, r0, r1
   11b08:	mov	r0, r4
   11b0c:	mov	r1, r5
   11b10:	bl	1355c <exit@plt+0x2ba4>
   11b14:	vmov	d6, r0, r1
   11b18:	vmul.f64	d7, d6, d9
   11b1c:	vcmp.f64	d8, d7
   11b20:	vmrs	APSR_nzcv, fpscr
   11b24:	movgt	r9, r8
   11b28:	add	r8, r8, #1
   11b2c:	cmp	r8, #8
   11b30:	bne	11aec <exit@plt+0x1134>
   11b34:	b	11a30 <exit@plt+0x1078>
   11b38:	ldr	r2, [pc, #816]	; 11e70 <exit@plt+0x14b8>
   11b3c:	mov	r0, r4
   11b40:	ldr	r3, [r4, #344]	; 0x158
   11b44:	mov	r1, r5
   11b48:	add	r2, pc, r2
   11b4c:	blx	r3
   11b50:	b	11848 <exit@plt+0xe90>
   11b54:	ldr	r2, [pc, #792]	; 11e74 <exit@plt+0x14bc>
   11b58:	cmp	r5, #0
   11b5c:	mov	r1, r3
   11b60:	ldr	ip, [r4, #344]	; 0x158
   11b64:	mov	r0, r4
   11b68:	add	r2, pc, r2
   11b6c:	moveq	r5, r3
   11b70:	blx	ip
   11b74:	b	11ab4 <exit@plt+0x10fc>
   11b78:	ldr	r1, [pc, #760]	; 11e78 <exit@plt+0x14c0>
   11b7c:	mov	r0, r4
   11b80:	ldr	r2, [pc, #756]	; 11e7c <exit@plt+0x14c4>
   11b84:	mov	r5, #0
   11b88:	add	r1, pc, r1
   11b8c:	str	r5, [sp, #72]	; 0x48
   11b90:	add	r2, pc, r2
   11b94:	ldr	r4, [pc, #740]	; 11e80 <exit@plt+0x14c8>
   11b98:	bl	10910 <__printf_chk@plt>
   11b9c:	ldr	r3, [pc, #736]	; 11e84 <exit@plt+0x14cc>
   11ba0:	ldr	r1, [pc, #736]	; 11e88 <exit@plt+0x14d0>
   11ba4:	add	fp, sp, #424	; 0x1a8
   11ba8:	add	r3, pc, r3
   11bac:	ldr	r2, [pc, #728]	; 11e8c <exit@plt+0x14d4>
   11bb0:	str	r3, [sp]
   11bb4:	add	r1, pc, r1
   11bb8:	ldr	r3, [pc, #720]	; 11e90 <exit@plt+0x14d8>
   11bbc:	add	r2, pc, r2
   11bc0:	ldr	r0, [sp, #68]	; 0x44
   11bc4:	add	r4, pc, r4
   11bc8:	add	r3, pc, r3
   11bcc:	str	r5, [sp, #56]	; 0x38
   11bd0:	bl	10910 <__printf_chk@plt>
   11bd4:	ldr	ip, [pc, #696]	; 11e94 <exit@plt+0x14dc>
   11bd8:	ldr	r5, [pc, #696]	; 11e98 <exit@plt+0x14e0>
   11bdc:	vldr	d9, [pc, #604]	; 11e40 <exit@plt+0x1488>
   11be0:	add	ip, pc, ip
   11be4:	str	ip, [sp, #84]	; 0x54
   11be8:	ldr	ip, [pc, #684]	; 11e9c <exit@plt+0x14e4>
   11bec:	add	r5, pc, r5
   11bf0:	str	r4, [sp, #68]	; 0x44
   11bf4:	vldr	d8, [pc, #588]	; 11e48 <exit@plt+0x1490>
   11bf8:	add	ip, pc, ip
   11bfc:	str	r5, [sp, #88]	; 0x58
   11c00:	str	ip, [sp, #92]	; 0x5c
   11c04:	ldr	r2, [sp, #68]	; 0x44
   11c08:	mov	r0, #1
   11c0c:	ldr	r1, [sp, #84]	; 0x54
   11c10:	ldr	r5, [pc, #648]	; 11ea0 <exit@plt+0x14e8>
   11c14:	mov	r3, r2
   11c18:	ldr	r7, [pc, #644]	; 11ea4 <exit@plt+0x14ec>
   11c1c:	bl	10910 <__printf_chk@plt>
   11c20:	ldr	r4, [sp, #56]	; 0x38
   11c24:	mov	r2, #512	; 0x200
   11c28:	ldr	r1, [sp, #88]	; 0x58
   11c2c:	lsl	r2, r2, r4
   11c30:	mov	r0, #1
   11c34:	bl	10910 <__printf_chk@plt>
   11c38:	ldr	r2, [sp, #68]	; 0x44
   11c3c:	ldr	r1, [sp, #92]	; 0x5c
   11c40:	mov	r0, #1
   11c44:	ldr	r6, [pc, #604]	; 11ea8 <exit@plt+0x14f0>
   11c48:	mov	r4, #0
   11c4c:	mov	r3, r2
   11c50:	add	r5, pc, r5
   11c54:	bl	10910 <__printf_chk@plt>
   11c58:	ldr	r0, [pc, #588]	; 11eac <exit@plt+0x14f4>
   11c5c:	add	r7, pc, r7
   11c60:	add	r6, pc, r6
   11c64:	add	r0, pc, r0
   11c68:	bl	10994 <puts@plt>
   11c6c:	ldr	r2, [pc, #572]	; 11eb0 <exit@plt+0x14f8>
   11c70:	ldr	r3, [pc, #572]	; 11eb4 <exit@plt+0x14fc>
   11c74:	mov	r0, #1
   11c78:	add	r2, pc, r2
   11c7c:	ldr	r1, [pc, #564]	; 11eb8 <exit@plt+0x1500>
   11c80:	add	r3, pc, r3
   11c84:	stm	sp, {r2, r3}
   11c88:	ldr	r2, [pc, #556]	; 11ebc <exit@plt+0x1504>
   11c8c:	add	r1, pc, r1
   11c90:	ldr	r3, [pc, #552]	; 11ec0 <exit@plt+0x1508>
   11c94:	add	r2, pc, r2
   11c98:	add	r3, pc, r3
   11c9c:	bl	10910 <__printf_chk@plt>
   11ca0:	ldr	r1, [sp, #72]	; 0x48
   11ca4:	add	r0, sp, #296	; 0x128
   11ca8:	ldr	r3, [sp, #72]	; 0x48
   11cac:	add	r0, r0, r1
   11cb0:	add	r2, sp, #232	; 0xe8
   11cb4:	ldr	ip, [sp, #72]	; 0x48
   11cb8:	add	r2, r2, r3
   11cbc:	ldrd	r0, [r0]
   11cc0:	add	lr, sp, #360	; 0x168
   11cc4:	vldr	d6, [pc, #372]	; 11e40 <exit@plt+0x1488>
   11cc8:	ldrd	r8, [lr, ip]
   11ccc:	strd	r0, [sp, #24]
   11cd0:	ldrd	r2, [r2]
   11cd4:	ldr	ip, [pc, #488]	; 11ec4 <exit@plt+0x150c>
   11cd8:	strd	r2, [sp, #32]
   11cdc:	add	ip, pc, ip
   11ce0:	str	ip, [sp, #80]	; 0x50
   11ce4:	b	11d7c <exit@plt+0x13c4>
   11ce8:	mov	r0, #1
   11cec:	mov	r1, r7
   11cf0:	mov	r2, #0
   11cf4:	mov	r3, #0
   11cf8:	bl	10910 <__printf_chk@plt>
   11cfc:	ldrd	r0, [sp, #32]
   11d00:	orrs	r1, r0, r1
   11d04:	beq	11d1c <exit@plt+0x1364>
   11d08:	add	r3, fp, r4, lsl #3
   11d0c:	add	r3, r3, #1408	; 0x580
   11d10:	ldrd	r2, [r3]
   11d14:	orrs	ip, r2, r3
   11d18:	bne	11df8 <exit@plt+0x1440>
   11d1c:	mov	r0, #1
   11d20:	mov	r1, r6
   11d24:	mov	r2, #0
   11d28:	mov	r3, #0
   11d2c:	bl	10910 <__printf_chk@plt>
   11d30:	orrs	r0, r8, r9
   11d34:	beq	11d4c <exit@plt+0x1394>
   11d38:	add	r3, fp, r4, lsl #3
   11d3c:	add	r3, r3, #704	; 0x2c0
   11d40:	ldrd	r2, [r3]
   11d44:	orrs	r1, r2, r3
   11d48:	bne	11f50 <exit@plt+0x1598>
   11d4c:	ldr	r1, [pc, #372]	; 11ec8 <exit@plt+0x1510>
   11d50:	mov	r0, #1
   11d54:	mov	r2, #0
   11d58:	mov	r3, #0
   11d5c:	add	r1, pc, r1
   11d60:	add	r4, r4, #1
   11d64:	bl	10910 <__printf_chk@plt>
   11d68:	cmp	r4, #11
   11d6c:	beq	11f9c <exit@plt+0x15e4>
   11d70:	cmp	r4, #10
   11d74:	vmovne.f64	d6, d9
   11d78:	vmoveq.f64	d6, d8
   11d7c:	vmov	s9, r4
   11d80:	mov	r1, r5
   11d84:	mov	r0, #1
   11d88:	vmov.f64	d7, #36	; 0x41200000  10.0
   11d8c:	vcvt.f64.s32	d5, s9
   11d90:	vdiv.f64	d7, d5, d7
   11d94:	vadd.f64	d6, d7, d6
   11d98:	vmov	r2, r3, d7
   11d9c:	vstr	d6, [sp]
   11da0:	bl	10910 <__printf_chk@plt>
   11da4:	ldrd	r0, [sp, #24]
   11da8:	orrs	r1, r0, r1
   11dac:	beq	11ce8 <exit@plt+0x1330>
   11db0:	lsl	r3, r4, #3
   11db4:	ldrd	r2, [r3, fp]
   11db8:	orrs	ip, r2, r3
   11dbc:	beq	11ce8 <exit@plt+0x1330>
   11dc0:	mov	ip, #100	; 0x64
   11dc4:	umull	r0, r1, r2, ip
   11dc8:	mla	r1, ip, r3, r1
   11dcc:	bl	1355c <exit@plt+0x2ba4>
   11dd0:	vmov	d10, r0, r1
   11dd4:	ldrd	r0, [sp, #24]
   11dd8:	bl	1355c <exit@plt+0x2ba4>
   11ddc:	vmov	d6, r0, r1
   11de0:	ldr	r1, [sp, #80]	; 0x50
   11de4:	mov	r0, #1
   11de8:	vdiv.f64	d10, d10, d6
   11dec:	vmov	r2, r3, d10
   11df0:	bl	10910 <__printf_chk@plt>
   11df4:	b	11cfc <exit@plt+0x1344>
   11df8:	mov	ip, #100	; 0x64
   11dfc:	ldr	sl, [pc, #200]	; 11ecc <exit@plt+0x1514>
   11e00:	umull	r0, r1, r2, ip
   11e04:	add	sl, pc, sl
   11e08:	mla	r1, ip, r3, r1
   11e0c:	bl	1355c <exit@plt+0x2ba4>
   11e10:	vmov	d10, r0, r1
   11e14:	ldrd	r0, [sp, #32]
   11e18:	bl	1355c <exit@plt+0x2ba4>
   11e1c:	vmov	d6, r0, r1
   11e20:	mov	r1, sl
   11e24:	mov	r0, #1
   11e28:	vdiv.f64	d10, d10, d6
   11e2c:	vmov	r2, r3, d10
   11e30:	bl	10910 <__printf_chk@plt>
   11e34:	b	11d30 <exit@plt+0x1378>
   11e38:			; <UNDEFINED> instruction: 0x47ae147b
   11e3c:	svccc	0x00947ae1
   11e40:	subvs	sp, sp, #536870927	; 0x2000000f
   11e44:	svccc	0x00b95810
	...
   11e50:	andeq	r2, r1, ip, lsr r9
   11e54:	andeq	r0, r0, r0, rrx
   11e58:	andeq	r0, r0, r8, ror #22
   11e5c:	andeq	r2, r0, r8, lsr #6
   11e60:	andeq	r2, r0, r4, lsr #1
   11e64:	andeq	r1, r0, r4, ror #24
   11e68:	andeq	r1, r0, r8, asr ip
   11e6c:	andeq	r1, r0, ip, ror #24
   11e70:	andeq	r1, r0, ip, asr #23
   11e74:			; <UNDEFINED> instruction: 0x00001bbc
   11e78:	ldrdeq	r1, [r0], -r4
   11e7c:	ldrdeq	r1, [r0], -r8
   11e80:	andeq	r1, r0, r8, lsl #25
   11e84:	andeq	r1, r0, r4, ror #24
   11e88:	andeq	r1, r0, r0, ror #23
   11e8c:	andeq	r1, r0, ip, ror #23
   11e90:	andeq	r1, r0, r0, lsl ip
   11e94:	andeq	r1, r0, r4, ror #24
   11e98:	andeq	r1, r0, r8, lsl #25
   11e9c:	andeq	r1, r0, r0, asr lr
   11ea0:	muleq	r0, r4, ip
   11ea4:	muleq	r0, r8, ip
   11ea8:	muleq	r0, r4, ip
   11eac:	andeq	r1, r0, r0, lsr #24
   11eb0:	andeq	r1, r0, ip, asr ip
   11eb4:	andeq	r1, r0, ip, asr ip
   11eb8:	andeq	r1, r0, r0, lsr #24
   11ebc:	andeq	r1, r0, ip, lsr #24
   11ec0:	andeq	r1, r0, r4, lsr ip
   11ec4:	andeq	r1, r0, r0, lsr #24
   11ec8:	muleq	r0, r8, fp
   11ecc:	strdeq	r1, [r0], -r8
   11ed0:	andeq	r1, r0, r0, lsr #19
   11ed4:	andeq	r1, r0, r8, lsr r9
   11ed8:	andeq	r1, r0, ip, lsr r9
   11edc:	andeq	r1, r0, ip, lsr sl
   11ee0:	andeq	r1, r0, r4, ror #20
   11ee4:	andeq	r1, r0, r4, ror #19
   11ee8:	andeq	r1, r0, r4, lsl #20
   11eec:	andeq	r1, r0, ip, lsl sl
   11ef0:	andeq	r1, r0, r0, lsl #19
   11ef4:	andeq	r1, r0, ip, lsl r9
   11ef8:	andeq	r1, r0, r4, lsr r9
   11efc:	andeq	r1, r0, r4, asr #18
   11f00:	andeq	r1, r0, r4, ror sl
   11f04:	andeq	r1, r0, ip, lsr #20
   11f08:	andeq	r1, r0, r0, lsr sl
   11f0c:	andeq	r1, r0, r0, lsr sl
   11f10:	andeq	r1, r0, ip, lsl #20
   11f14:	andeq	r1, r0, r4, lsr sl
   11f18:	andeq	r1, r0, r0, asr #19
   11f1c:	andeq	r1, r0, r0, ror #19
   11f20:	andeq	r1, r0, r4, ror #19
   11f24:	andeq	r1, r0, r8, ror #19
   11f28:	andeq	r1, r0, ip, asr #19
   11f2c:	andeq	r1, r0, r0, asr #19
   11f30:			; <UNDEFINED> instruction: 0x000019bc
   11f34:	andeq	r1, r0, r4, lsl #19
   11f38:	andeq	r1, r0, ip, asr #18
   11f3c:	andeq	r1, r0, r4, lsl r9
   11f40:	ldrdeq	r1, [r0], -r8
   11f44:	muleq	r0, ip, r8
   11f48:	andeq	r1, r0, r0, ror #15
   11f4c:	andeq	r1, r0, r8, asr #15
   11f50:	mov	ip, #100	; 0x64
   11f54:	ldr	sl, [pc, #-140]	; 11ed0 <exit@plt+0x1518>
   11f58:	umull	r0, r1, r2, ip
   11f5c:	add	sl, pc, sl
   11f60:	add	r4, r4, #1
   11f64:	mla	r1, ip, r3, r1
   11f68:	bl	1355c <exit@plt+0x2ba4>
   11f6c:	vmov	d10, r0, r1
   11f70:	mov	r0, r8
   11f74:	mov	r1, r9
   11f78:	bl	1355c <exit@plt+0x2ba4>
   11f7c:	vmov	d6, r0, r1
   11f80:	mov	r1, sl
   11f84:	mov	r0, #1
   11f88:	vdiv.f64	d10, d10, d6
   11f8c:	vmov	r2, r3, d10
   11f90:	bl	10910 <__printf_chk@plt>
   11f94:	cmp	r4, #11
   11f98:	bne	11d70 <exit@plt+0x13b8>
   11f9c:	ldr	r4, [sp, #56]	; 0x38
   11fa0:	add	fp, fp, #88	; 0x58
   11fa4:	ldr	r5, [sp, #72]	; 0x48
   11fa8:	add	r4, r4, #1
   11fac:	str	r4, [sp, #56]	; 0x38
   11fb0:	cmp	r4, #8
   11fb4:	add	r5, r5, #8
   11fb8:	str	r5, [sp, #72]	; 0x48
   11fbc:	bne	11c04 <exit@plt+0x124c>
   11fc0:	ldr	r1, [pc, #-244]	; 11ed4 <exit@plt+0x151c>
   11fc4:	mov	r0, #1
   11fc8:	ldr	r2, [pc, #-248]	; 11ed8 <exit@plt+0x1520>
   11fcc:	mov	r4, #0
   11fd0:	add	r1, pc, r1
   11fd4:	ldr	r7, [pc, #-256]	; 11edc <exit@plt+0x1524>
   11fd8:	add	r2, pc, r2
   11fdc:	ldr	r6, [pc, #-260]	; 11ee0 <exit@plt+0x1528>
   11fe0:	bl	10910 <__printf_chk@plt>
   11fe4:	ldr	r1, [pc, #-264]	; 11ee4 <exit@plt+0x152c>
   11fe8:	ldr	r2, [pc, #-264]	; 11ee8 <exit@plt+0x1530>
   11fec:	add	r6, pc, r6
   11ff0:	ldr	r3, [pc, #-268]	; 11eec <exit@plt+0x1534>
   11ff4:	add	r1, pc, r1
   11ff8:	add	r2, pc, r2
   11ffc:	ldr	ip, [pc, #-276]	; 11ef0 <exit@plt+0x1538>
   12000:	add	r3, pc, r3
   12004:	add	r7, pc, r7
   12008:	stmib	sp, {r1, r2, r3}
   1200c:	add	ip, pc, ip
   12010:	ldr	r1, [pc, #-292]	; 11ef4 <exit@plt+0x153c>
   12014:	mov	r0, #1
   12018:	ldr	r2, [pc, #-296]	; 11ef8 <exit@plt+0x1540>
   1201c:	mov	r5, r4
   12020:	ldr	r3, [pc, #-300]	; 11efc <exit@plt+0x1544>
   12024:	add	r1, pc, r1
   12028:	str	ip, [sp]
   1202c:	add	r2, pc, r2
   12030:	add	r3, pc, r3
   12034:	ldr	sl, [pc, #-316]	; 11f00 <exit@plt+0x1548>
   12038:	bl	10910 <__printf_chk@plt>
   1203c:	mov	r1, r7
   12040:	mov	r2, r6
   12044:	mov	r3, r6
   12048:	str	r6, [sp]
   1204c:	mov	r0, #1
   12050:	str	r6, [sp, #4]
   12054:	add	sl, pc, sl
   12058:	str	r6, [sp, #8]
   1205c:	str	r6, [sp, #12]
   12060:	bl	10910 <__printf_chk@plt>
   12064:	ldr	r1, [pc, #-360]	; 11f04 <exit@plt+0x154c>
   12068:	ldr	r2, [pc, #-360]	; 11f08 <exit@plt+0x1550>
   1206c:	mov	r0, #1
   12070:	ldr	r3, [pc, #-364]	; 11f0c <exit@plt+0x1554>
   12074:	add	r1, pc, r1
   12078:	add	r2, pc, r2
   1207c:	ldr	ip, [pc, #-372]	; 11f10 <exit@plt+0x1558>
   12080:	add	r3, pc, r3
   12084:	ldr	fp, [pc, #-376]	; 11f14 <exit@plt+0x155c>
   12088:	stmib	sp, {r1, r2, r3}
   1208c:	add	ip, pc, ip
   12090:	ldr	r1, [pc, #-384]	; 11f18 <exit@plt+0x1560>
   12094:	add	fp, pc, fp
   12098:	ldr	r2, [pc, #-388]	; 11f1c <exit@plt+0x1564>
   1209c:	ldr	r3, [pc, #-388]	; 11f20 <exit@plt+0x1568>
   120a0:	add	r1, pc, r1
   120a4:	str	ip, [sp]
   120a8:	add	r2, pc, r2
   120ac:	add	r3, pc, r3
   120b0:	bl	10910 <__printf_chk@plt>
   120b4:	mov	r3, r6
   120b8:	mov	r2, r6
   120bc:	str	r6, [sp]
   120c0:	mov	r1, r7
   120c4:	str	r6, [sp, #4]
   120c8:	str	r6, [sp, #8]
   120cc:	mov	r0, #1
   120d0:	str	r6, [sp, #12]
   120d4:	ldr	r7, [pc, #-440]	; 11f24 <exit@plt+0x156c>
   120d8:	bl	10910 <__printf_chk@plt>
   120dc:	ldr	r6, [pc, #-444]	; 11f28 <exit@plt+0x1570>
   120e0:	add	r7, pc, r7
   120e4:	ldr	ip, [pc, #-448]	; 11f2c <exit@plt+0x1574>
   120e8:	ldr	r3, [pc, #-448]	; 11f30 <exit@plt+0x1578>
   120ec:	add	r6, pc, r6
   120f0:	str	r7, [sp, #72]	; 0x48
   120f4:	add	r7, sp, #104	; 0x68
   120f8:	str	sl, [sp, #56]	; 0x38
   120fc:	add	sl, sp, #168	; 0xa8
   12100:	str	fp, [sp, #68]	; 0x44
   12104:	add	fp, sp, #232	; 0xe8
   12108:	add	ip, pc, ip
   1210c:	add	r3, pc, r3
   12110:	str	ip, [sp, #24]
   12114:	str	r3, [sp, #32]
   12118:	mov	r2, #512	; 0x200
   1211c:	mov	r1, r6
   12120:	lsl	r2, r2, r5
   12124:	mov	r0, #1
   12128:	bl	10910 <__printf_chk@plt>
   1212c:	ldrd	r8, [r4, sl]
   12130:	ldr	r1, [pc, #-516]	; 11f34 <exit@plt+0x157c>
   12134:	mov	r0, #1
   12138:	mov	r2, r8
   1213c:	add	r1, pc, r1
   12140:	bl	10910 <__printf_chk@plt>
   12144:	mov	r2, r8
   12148:	mov	r3, #0
   1214c:	cmp	r9, r3
   12150:	cmpeq	r8, r2
   12154:	beq	12164 <exit@plt+0x17ac>
   12158:	mov	r0, #1
   1215c:	ldr	r1, [sp, #72]	; 0x48
   12160:	bl	10910 <__printf_chk@plt>
   12164:	ldrd	r8, [r4, r7]
   12168:	mov	r0, #1
   1216c:	ldr	r1, [pc, #-572]	; 11f38 <exit@plt+0x1580>
   12170:	mov	r2, r8
   12174:	add	r1, pc, r1
   12178:	bl	10910 <__printf_chk@plt>
   1217c:	mov	r2, r8
   12180:	mov	r3, #0
   12184:	cmp	r9, r3
   12188:	cmpeq	r8, r2
   1218c:	beq	1219c <exit@plt+0x17e4>
   12190:	mov	r0, #1
   12194:	ldr	r1, [sp, #24]
   12198:	bl	10910 <__printf_chk@plt>
   1219c:	add	ip, sp, #360	; 0x168
   121a0:	ldr	r1, [pc, #-620]	; 11f3c <exit@plt+0x1584>
   121a4:	mov	r0, #1
   121a8:	ldrd	r8, [ip, r4]
   121ac:	add	r1, pc, r1
   121b0:	mov	r2, r8
   121b4:	bl	10910 <__printf_chk@plt>
   121b8:	mov	r2, r8
   121bc:	mov	r3, #0
   121c0:	cmp	r9, r3
   121c4:	cmpeq	r8, r2
   121c8:	beq	121d8 <exit@plt+0x1820>
   121cc:	mov	r0, #1
   121d0:	ldr	r1, [sp, #32]
   121d4:	bl	10910 <__printf_chk@plt>
   121d8:	add	lr, sp, #296	; 0x128
   121dc:	ldr	r1, [pc, #-676]	; 11f40 <exit@plt+0x1588>
   121e0:	mov	r0, #1
   121e4:	ldrd	r8, [lr, r4]
   121e8:	add	r1, pc, r1
   121ec:	mov	r2, r8
   121f0:	bl	10910 <__printf_chk@plt>
   121f4:	mov	r2, r8
   121f8:	mov	r3, #0
   121fc:	cmp	r9, r3
   12200:	cmpeq	r8, r2
   12204:	beq	12214 <exit@plt+0x185c>
   12208:	mov	r0, #1
   1220c:	ldr	r1, [sp, #56]	; 0x38
   12210:	bl	10910 <__printf_chk@plt>
   12214:	ldrd	r8, [fp, r4]
   12218:	mov	r0, #1
   1221c:	ldr	r1, [pc, #-736]	; 11f44 <exit@plt+0x158c>
   12220:	mov	r2, r8
   12224:	add	r1, pc, r1
   12228:	bl	10910 <__printf_chk@plt>
   1222c:	mov	r2, r8
   12230:	mov	r3, #0
   12234:	cmp	r9, r3
   12238:	cmpeq	r8, r2
   1223c:	beq	1224c <exit@plt+0x1894>
   12240:	mov	r0, #1
   12244:	ldr	r1, [sp, #68]	; 0x44
   12248:	bl	10910 <__printf_chk@plt>
   1224c:	add	r5, r5, #1
   12250:	mov	r0, #10
   12254:	bl	1091c <putchar@plt>
   12258:	cmp	r5, #8
   1225c:	add	r4, r4, #8
   12260:	bne	12118 <exit@plt+0x1760>
   12264:	ldr	ip, [pc, #-804]	; 11f48 <exit@plt+0x1590>
   12268:	mov	r0, #1
   1226c:	ldr	r1, [pc, #-808]	; 11f4c <exit@plt+0x1594>
   12270:	add	ip, pc, ip
   12274:	str	ip, [sp]
   12278:	add	r1, pc, r1
   1227c:	str	ip, [sp, #4]
   12280:	mov	r2, ip
   12284:	mov	r3, ip
   12288:	str	ip, [sp, #8]
   1228c:	str	ip, [sp, #12]
   12290:	bl	10910 <__printf_chk@plt>
   12294:	b	119d4 <exit@plt+0x101c>
   12298:	bl	10964 <__stack_chk_fail@plt>
   1229c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122a0:	sub	sp, sp, #100	; 0x64
   122a4:	mov	r9, r1
   122a8:	ldr	ip, [pc, #3020]	; 12e7c <exit@plt+0x24c4>
   122ac:	str	r0, [sp, #36]	; 0x24
   122b0:	mov	r8, r2
   122b4:	ldr	r1, [sp, #36]	; 0x24
   122b8:	add	ip, pc, ip
   122bc:	ldr	r0, [pc, #3004]	; 12e80 <exit@plt+0x24c8>
   122c0:	mov	r4, #1
   122c4:	mov	r2, ip
   122c8:	ldr	r1, [r1, #4]
   122cc:	str	r1, [sp, #60]	; 0x3c
   122d0:	mov	r1, #0
   122d4:	ldr	r0, [ip, r0]
   122d8:	ldr	r2, [r0]
   122dc:	str	r1, [r3]
   122e0:	ldrb	r3, [r9, #25]
   122e4:	str	r0, [sp, #52]	; 0x34
   122e8:	sub	r3, r3, #3
   122ec:	str	r2, [sp, #92]	; 0x5c
   122f0:	uxtb	r3, r3
   122f4:	cmp	r3, #9
   122f8:	bhi	12604 <exit@plt+0x1c4c>
   122fc:	lsl	r3, r4, r3
   12300:	tst	r3, #19
   12304:	bne	12638 <exit@plt+0x1c80>
   12308:	tst	r3, #520	; 0x208
   1230c:	beq	12640 <exit@plt+0x1c88>
   12310:	ldr	r3, [r9, #12]
   12314:	cmp	r3, #0
   12318:	bne	12638 <exit@plt+0x1c80>
   1231c:	ldr	ip, [sp, #36]	; 0x24
   12320:	mov	sl, r9
   12324:	str	r3, [sp, #48]	; 0x30
   12328:	str	r9, [sp, #24]
   1232c:	ldr	ip, [ip]
   12330:	str	r8, [sp, #64]	; 0x40
   12334:	str	ip, [sp, #28]
   12338:	add	ip, sp, #88	; 0x58
   1233c:	str	ip, [sp, #32]
   12340:	ldr	ip, [sp, #36]	; 0x24
   12344:	ldr	r0, [sp, #28]
   12348:	ldr	ip, [ip, #4]
   1234c:	str	ip, [sp, #56]	; 0x38
   12350:	add	ip, sp, #84	; 0x54
   12354:	str	ip, [sp, #40]	; 0x28
   12358:	ldr	ip, [sp, #28]
   1235c:	ldr	ip, [ip, #24]
   12360:	str	ip, [sp, #44]	; 0x2c
   12364:	ldr	ip, [r0, #36]	; 0x24
   12368:	str	r9, [sp, #84]	; 0x54
   1236c:	mov	fp, ip
   12370:	ldrh	r5, [sl, #20]
   12374:	cmp	r5, #0
   12378:	beq	12c08 <exit@plt+0x2250>
   1237c:	ldr	ip, [sp, #28]
   12380:	mov	r4, #0
   12384:	mov	r9, r4
   12388:	mov	r2, r4
   1238c:	ldr	r7, [ip, #772]	; 0x304
   12390:	and	r6, r7, #1024	; 0x400
   12394:	and	r8, r7, #1
   12398:	cmp	r6, #0
   1239c:	movne	r3, #64	; 0x40
   123a0:	bne	123b0 <exit@plt+0x19f8>
   123a4:	cmp	r8, #0
   123a8:	moveq	r3, #26
   123ac:	movne	r3, #32
   123b0:	add	r3, r3, r4, lsl #1
   123b4:	ldrh	r3, [sl, r3]
   123b8:	add	r3, sl, r3
   123bc:	ldrsb	r3, [r3, #2]
   123c0:	cmp	r3, #0
   123c4:	blt	123d8 <exit@plt+0x1a20>
   123c8:	mov	r0, r7
   123cc:	mov	r1, sl
   123d0:	bl	11550 <exit@plt+0xb98>
   123d4:	add	r9, r9, r0
   123d8:	add	r4, r4, #1
   123dc:	uxth	r2, r4
   123e0:	cmp	r5, r2
   123e4:	bhi	12398 <exit@plt+0x19e0>
   123e8:	ldr	ip, [sp, #24]
   123ec:	ldr	r2, [sl, #16]
   123f0:	cmp	ip, sl
   123f4:	ldr	ip, [sp, #48]	; 0x30
   123f8:	str	r2, [sp, #88]	; 0x58
   123fc:	add	ip, ip, r9
   12400:	str	ip, [sp, #48]	; 0x30
   12404:	beq	12430 <exit@plt+0x1a78>
   12408:	ldr	lr, [sp, #36]	; 0x24
   1240c:	mov	r1, sl
   12410:	ldr	ip, [fp, #136]	; 0x88
   12414:	mov	r0, fp
   12418:	mov	r3, #0
   1241c:	ldr	r2, [lr, #20]
   12420:	blx	ip
   12424:	cmp	r0, #0
   12428:	bne	12e28 <exit@plt+0x2470>
   1242c:	ldr	r2, [sp, #88]	; 0x58
   12430:	cmp	r2, #0
   12434:	beq	1246c <exit@plt+0x1ab4>
   12438:	ldr	ip, [sp, #36]	; 0x24
   1243c:	add	lr, sp, #84	; 0x54
   12440:	mov	r0, fp
   12444:	add	r1, sp, #88	; 0x58
   12448:	mov	r3, #0
   1244c:	ldr	r2, [ip, #16]
   12450:	str	lr, [sp]
   12454:	ldr	ip, [fp, #92]	; 0x5c
   12458:	blx	ip
   1245c:	cmp	r0, #0
   12460:	bne	12de8 <exit@plt+0x2430>
   12464:	ldr	sl, [sp, #84]	; 0x54
   12468:	b	12370 <exit@plt+0x19b8>
   1246c:	ldr	r9, [sp, #24]
   12470:	mov	r6, r2
   12474:	ldr	r8, [sp, #64]	; 0x40
   12478:	ldr	ip, [sp, #36]	; 0x24
   1247c:	mov	r0, #512	; 0x200
   12480:	lsl	r3, r0, r6
   12484:	ldr	r5, [ip]
   12488:	ldr	ip, [sp, #48]	; 0x30
   1248c:	cmp	ip, r3, lsr #2
   12490:	ldr	ip, [r5, #24]
   12494:	movcc	r7, #0
   12498:	movcs	r7, #1
   1249c:	cmp	r7, #0
   124a0:	str	ip, [sp, #32]
   124a4:	ldr	ip, [r5, #36]	; 0x24
   124a8:	ldreq	r3, [sp, #32]
   124ac:	str	r9, [sp, #84]	; 0x54
   124b0:	str	ip, [sp, #24]
   124b4:	bne	12d00 <exit@plt+0x2348>
   124b8:	mov	sl, #1
   124bc:	add	ip, sp, #88	; 0x58
   124c0:	str	r3, [sp, #28]
   124c4:	str	ip, [sp, #40]	; 0x28
   124c8:	add	ip, sp, #84	; 0x54
   124cc:	str	ip, [sp, #44]	; 0x2c
   124d0:	ldrh	r1, [r9, #20]
   124d4:	cmp	r1, #0
   124d8:	beq	12c54 <exit@plt+0x229c>
   124dc:	mov	r4, #0
   124e0:	b	12510 <exit@plt+0x1b58>
   124e4:	mov	r2, r3
   124e8:	str	r8, [sp]
   124ec:	mov	r3, r6
   124f0:	bl	113f8 <exit@plt+0xa40>
   124f4:	cmp	r0, #0
   124f8:	bne	12cd8 <exit@plt+0x2320>
   124fc:	ldrh	r1, [r9, #20]
   12500:	add	r4, r4, #1
   12504:	uxth	r4, r4
   12508:	cmp	r1, r4
   1250c:	bls	12c54 <exit@plt+0x229c>
   12510:	ldr	fp, [r5, #772]	; 0x304
   12514:	tst	fp, #1024	; 0x400
   12518:	movne	r3, #64	; 0x40
   1251c:	bne	1252c <exit@plt+0x1b74>
   12520:	tst	fp, #1
   12524:	moveq	r3, #26
   12528:	movne	r3, #32
   1252c:	add	r3, r3, r4, lsl #1
   12530:	ldrh	r3, [r9, r3]
   12534:	add	r3, r9, r3
   12538:	ldrsb	r3, [r3, #2]
   1253c:	cmp	r3, #0
   12540:	blt	12500 <exit@plt+0x1b48>
   12544:	mov	r1, r9
   12548:	mov	r0, fp
   1254c:	mov	r2, r4
   12550:	bl	11614 <exit@plt+0xc5c>
   12554:	cmp	r7, #0
   12558:	mov	r1, fp
   1255c:	mov	r3, r0
   12560:	ldr	r0, [r5, #24]
   12564:	bne	124e4 <exit@plt+0x1b2c>
   12568:	mov	r2, #3
   1256c:	str	r6, [sp]
   12570:	str	r2, [sp, #4]
   12574:	mov	r2, r7
   12578:	str	sl, [sp, #8]
   1257c:	str	r8, [sp, #12]
   12580:	bl	111e4 <exit@plt+0x82c>
   12584:	cmp	r0, #0
   12588:	beq	124fc <exit@plt+0x1b44>
   1258c:	ldr	lr, [sp, #28]
   12590:	mov	r3, r0
   12594:	ldr	r2, [pc, #2280]	; 12e84 <exit@plt+0x24cc>
   12598:	mov	r1, r3
   1259c:	mov	r4, r3
   125a0:	ldr	ip, [lr, #344]	; 0x158
   125a4:	mov	r0, lr
   125a8:	add	r2, pc, r2
   125ac:	blx	ip
   125b0:	ldr	ip, [sp, #32]
   125b4:	mov	r1, r4
   125b8:	ldr	r2, [pc, #2248]	; 12e88 <exit@plt+0x24d0>
   125bc:	ldr	r3, [ip, #344]	; 0x158
   125c0:	mov	r0, ip
   125c4:	add	r2, pc, r2
   125c8:	blx	r3
   125cc:	ldr	ip, [sp, #56]	; 0x38
   125d0:	mov	r1, r4
   125d4:	ldr	r2, [pc, #2224]	; 12e8c <exit@plt+0x24d4>
   125d8:	ldr	r3, [ip, #344]	; 0x158
   125dc:	mov	r0, ip
   125e0:	add	r2, pc, r2
   125e4:	blx	r3
   125e8:	ldr	ip, [sp, #60]	; 0x3c
   125ec:	mov	r1, r4
   125f0:	ldr	r2, [pc, #2200]	; 12e90 <exit@plt+0x24d8>
   125f4:	ldr	r3, [ip, #344]	; 0x158
   125f8:	mov	r0, ip
   125fc:	add	r2, pc, r2
   12600:	blx	r3
   12604:	ldr	ip, [sp, #52]	; 0x34
   12608:	mov	r0, r4
   1260c:	ldr	r2, [sp, #92]	; 0x5c
   12610:	ldr	r3, [ip]
   12614:	cmp	r2, r3
   12618:	bne	12e60 <exit@plt+0x24a8>
   1261c:	add	sp, sp, #100	; 0x64
   12620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12624:	cmp	r7, #0
   12628:	bne	12d8c <exit@plt+0x23d4>
   1262c:	add	r6, r6, #1
   12630:	cmp	r6, #8
   12634:	bne	12478 <exit@plt+0x1ac0>
   12638:	mov	r4, #0
   1263c:	b	12604 <exit@plt+0x1c4c>
   12640:	tst	r3, #4
   12644:	beq	12604 <exit@plt+0x1c4c>
   12648:	ldr	ip, [sp, #36]	; 0x24
   1264c:	ldr	ip, [ip]
   12650:	ldr	r4, [ip, #772]	; 0x304
   12654:	str	ip, [sp, #44]	; 0x2c
   12658:	ldr	ip, [ip, #24]
   1265c:	tst	r4, #1024	; 0x400
   12660:	movne	r3, #64	; 0x40
   12664:	str	ip, [sp, #72]	; 0x48
   12668:	beq	12c10 <exit@plt+0x2258>
   1266c:	ldrh	ip, [r9, #20]
   12670:	add	r3, r9, r3
   12674:	str	r3, [sp, #64]	; 0x40
   12678:	cmp	ip, #0
   1267c:	str	ip, [sp, #40]	; 0x28
   12680:	beq	12638 <exit@plt+0x1c80>
   12684:	ldr	ip, [pc, #2056]	; 12e94 <exit@plt+0x24dc>
   12688:	mov	r6, #0
   1268c:	mov	fp, r6
   12690:	str	r8, [sp, #32]
   12694:	add	ip, pc, ip
   12698:	str	ip, [sp, #76]	; 0x4c
   1269c:	ldr	ip, [sp, #40]	; 0x28
   126a0:	add	sl, fp, #2
   126a4:	lsl	r3, fp, #1
   126a8:	cmp	sl, ip
   126ac:	bge	126c4 <exit@plt+0x1d0c>
   126b0:	ldr	r2, [sp, #64]	; 0x40
   126b4:	ldrh	r8, [r2, r3]!
   126b8:	ldrh	r2, [r2, #4]
   126bc:	cmp	r2, r8
   126c0:	beq	127f4 <exit@plt+0x1e3c>
   126c4:	ands	r8, r4, #1024	; 0x400
   126c8:	movne	r2, #64	; 0x40
   126cc:	bne	126dc <exit@plt+0x1d24>
   126d0:	tst	r4, #1
   126d4:	moveq	r2, #26
   126d8:	movne	r2, #32
   126dc:	add	r5, r9, r3
   126e0:	ldrh	r3, [r5, r2]
   126e4:	add	r3, r9, r3
   126e8:	ldrsb	r3, [r3, #2]
   126ec:	cmp	r3, #0
   126f0:	blt	127a4 <exit@plt+0x1dec>
   126f4:	mov	r0, r4
   126f8:	mov	r1, r9
   126fc:	mov	r2, fp
   12700:	bl	11614 <exit@plt+0xc5c>
   12704:	cmp	r8, #0
   12708:	mov	r7, r0
   1270c:	beq	127bc <exit@plt+0x1e04>
   12710:	ldrh	r3, [r5, #66]	; 0x42
   12714:	add	r3, r9, r3
   12718:	ldrb	r3, [r3, #2]
   1271c:	tst	r3, #128	; 0x80
   12720:	bne	127a4 <exit@plt+0x1dec>
   12724:	bic	r3, r3, #128	; 0x80
   12728:	cmp	r3, #2
   1272c:	beq	127e8 <exit@plt+0x1e30>
   12730:	add	r2, fp, #1
   12734:	mov	r0, r4
   12738:	mov	r1, r9
   1273c:	mov	fp, #1
   12740:	uxth	r2, r2
   12744:	bl	11614 <exit@plt+0xc5c>
   12748:	mov	r8, r0
   1274c:	mov	r1, r4
   12750:	mov	r5, #0
   12754:	ldr	r4, [sp, #44]	; 0x2c
   12758:	ldr	r6, [sp, #32]
   1275c:	b	12764 <exit@plt+0x1dac>
   12760:	ldr	r1, [r4, #772]	; 0x304
   12764:	ldr	r0, [r4, #24]
   12768:	mov	lr, #1
   1276c:	str	r5, [sp]
   12770:	mov	r2, r7
   12774:	str	lr, [sp, #4]
   12778:	mov	r3, r8
   1277c:	str	fp, [sp, #8]
   12780:	str	r6, [sp, #12]
   12784:	bl	111e4 <exit@plt+0x82c>
   12788:	cmp	r0, #0
   1278c:	bne	12bc0 <exit@plt+0x2208>
   12790:	add	r5, r5, #1
   12794:	cmp	r5, #8
   12798:	bne	12760 <exit@plt+0x1da8>
   1279c:	mov	r6, r0
   127a0:	uxth	fp, sl
   127a4:	ldr	ip, [sp, #40]	; 0x28
   127a8:	cmp	ip, fp
   127ac:	bls	12c20 <exit@plt+0x2268>
   127b0:	ldr	ip, [sp, #44]	; 0x2c
   127b4:	ldr	r4, [ip, #772]	; 0x304
   127b8:	b	1269c <exit@plt+0x1ce4>
   127bc:	tst	r4, #1
   127c0:	beq	12e64 <exit@plt+0x24ac>
   127c4:	ldrh	r3, [r5, #34]	; 0x22
   127c8:	add	r3, r9, r3
   127cc:	ldrsb	r2, [r3, #2]
   127d0:	cmp	r2, #0
   127d4:	blt	127a4 <exit@plt+0x1dec>
   127d8:	ldrb	r3, [r3, #2]
   127dc:	bic	r3, r3, #128	; 0x80
   127e0:	cmp	r3, #2
   127e4:	bne	12730 <exit@plt+0x1d78>
   127e8:	mov	fp, r3
   127ec:	mov	r8, #0
   127f0:	b	1274c <exit@plt+0x1d94>
   127f4:	ands	r5, r4, #1024	; 0x400
   127f8:	movne	r2, #64	; 0x40
   127fc:	bne	1280c <exit@plt+0x1e54>
   12800:	tst	r4, #1
   12804:	moveq	r2, #26
   12808:	movne	r2, #32
   1280c:	add	sl, r9, r3
   12810:	ldrh	r3, [sl, r2]
   12814:	add	r3, r9, r3
   12818:	ldrsb	r3, [r3, #2]
   1281c:	cmp	r3, #0
   12820:	blt	127a4 <exit@plt+0x1dec>
   12824:	mov	r0, r4
   12828:	mov	r1, r9
   1282c:	mov	r2, fp
   12830:	bl	11550 <exit@plt+0xb98>
   12834:	ldr	ip, [sp, #40]	; 0x28
   12838:	cmp	ip, fp
   1283c:	str	r0, [sp, #56]	; 0x38
   12840:	bls	12e58 <exit@plt+0x24a0>
   12844:	and	r6, r4, #1
   12848:	mov	r2, sl
   1284c:	str	r6, [sp, #24]
   12850:	mov	sl, r9
   12854:	mov	r6, r5
   12858:	mov	r9, r4
   1285c:	str	fp, [sp, #28]
   12860:	mov	r4, r0
   12864:	ldr	r7, [sp, #64]	; 0x40
   12868:	mov	r5, ip
   1286c:	b	12884 <exit@plt+0x1ecc>
   12870:	lsl	r2, fp, #1
   12874:	ldrh	r1, [r7, r2]
   12878:	cmp	r1, r8
   1287c:	bne	128dc <exit@plt+0x1f24>
   12880:	add	r2, sl, r2
   12884:	cmp	r6, #0
   12888:	movne	r1, #66	; 0x42
   1288c:	bne	128a0 <exit@plt+0x1ee8>
   12890:	ldr	r3, [sp, #24]
   12894:	cmp	r3, #0
   12898:	moveq	r1, #28
   1289c:	movne	r1, #34	; 0x22
   128a0:	ldrh	r2, [r2, r1]
   128a4:	add	r2, sl, r2
   128a8:	ldrsb	r2, [r2, #2]
   128ac:	cmp	r2, #0
   128b0:	blt	128cc <exit@plt+0x1f14>
   128b4:	add	r2, fp, #1
   128b8:	mov	r0, r9
   128bc:	mov	r1, sl
   128c0:	uxth	r2, r2
   128c4:	bl	11550 <exit@plt+0xb98>
   128c8:	add	r4, r4, r0
   128cc:	add	r3, fp, #2
   128d0:	uxth	fp, r3
   128d4:	cmp	r5, fp
   128d8:	bhi	12870 <exit@plt+0x1eb8>
   128dc:	mov	r7, fp
   128e0:	ldr	fp, [sp, #28]
   128e4:	mov	r9, sl
   128e8:	str	r4, [sp, #56]	; 0x38
   128ec:	ldr	ip, [sp, #56]	; 0x38
   128f0:	cmp	ip, #0
   128f4:	beq	12e4c <exit@plt+0x2494>
   128f8:	ldr	ip, [sp, #36]	; 0x24
   128fc:	mov	sl, r7
   12900:	ldr	ip, [ip, #4]
   12904:	str	ip, [sp, #68]	; 0x44
   12908:	mov	ip, #0
   1290c:	str	ip, [sp, #28]
   12910:	ldr	ip, [sp, #28]
   12914:	mov	r0, #512	; 0x200
   12918:	lsl	r3, r0, ip
   1291c:	ldr	ip, [sp, #36]	; 0x24
   12920:	ldr	r6, [ip]
   12924:	ldr	ip, [sp, #56]	; 0x38
   12928:	cmp	ip, r3, lsr #2
   1292c:	ldr	ip, [r6, #24]
   12930:	str	ip, [sp, #48]	; 0x30
   12934:	movcc	ip, #0
   12938:	movcs	ip, #1
   1293c:	cmp	fp, sl
   12940:	str	ip, [sp, #24]
   12944:	bge	12b5c <exit@plt+0x21a4>
   12948:	mov	r4, fp
   1294c:	mov	r3, fp
   12950:	b	12984 <exit@plt+0x1fcc>
   12954:	ldr	ip, [sp, #32]
   12958:	mov	r2, r3
   1295c:	ldr	r3, [sp, #28]
   12960:	str	ip, [sp]
   12964:	bl	113f8 <exit@plt+0xa40>
   12968:	cmp	r0, #0
   1296c:	bne	12be0 <exit@plt+0x2228>
   12970:	add	r4, r4, #2
   12974:	uxth	r4, r4
   12978:	cmp	sl, r4
   1297c:	mov	r3, r4
   12980:	ble	12b5c <exit@plt+0x21a4>
   12984:	cmp	fp, r3
   12988:	ldr	r5, [r6, #772]	; 0x304
   1298c:	beq	12aa4 <exit@plt+0x20ec>
   12990:	lsl	ip, r4, #1
   12994:	and	r3, r5, #1024	; 0x400
   12998:	mov	r8, #3
   1299c:	mov	r7, #0
   129a0:	cmp	r3, #0
   129a4:	movne	r3, #66	; 0x42
   129a8:	bne	129b8 <exit@plt+0x2000>
   129ac:	tst	r5, #1
   129b0:	moveq	r3, #28
   129b4:	movne	r3, #34	; 0x22
   129b8:	add	r3, r9, r3
   129bc:	ldrh	r3, [r3, ip]
   129c0:	add	r3, r9, r3
   129c4:	ldrsb	r3, [r3, #2]
   129c8:	cmp	r3, #0
   129cc:	blt	12970 <exit@plt+0x1fb8>
   129d0:	add	r2, r4, #1
   129d4:	mov	r1, r9
   129d8:	mov	r0, r5
   129dc:	uxth	r2, r2
   129e0:	bl	11614 <exit@plt+0xc5c>
   129e4:	ldr	ip, [sp, #24]
   129e8:	mov	r1, r5
   129ec:	cmp	ip, #0
   129f0:	mov	r3, r0
   129f4:	ldr	r0, [r6, #24]
   129f8:	bne	12954 <exit@plt+0x1f9c>
   129fc:	ldr	ip, [sp, #28]
   12a00:	mov	lr, #1
   12a04:	mov	r2, r7
   12a08:	str	r8, [sp, #4]
   12a0c:	str	lr, [sp, #8]
   12a10:	str	ip, [sp]
   12a14:	ldr	ip, [sp, #32]
   12a18:	str	ip, [sp, #12]
   12a1c:	bl	111e4 <exit@plt+0x82c>
   12a20:	cmp	r0, #0
   12a24:	beq	12970 <exit@plt+0x1fb8>
   12a28:	ldr	lr, [sp, #48]	; 0x30
   12a2c:	mov	r3, r0
   12a30:	ldr	r2, [pc, #1120]	; 12e98 <exit@plt+0x24e0>
   12a34:	mov	r1, r3
   12a38:	mov	r4, r3
   12a3c:	ldr	ip, [lr, #344]	; 0x158
   12a40:	mov	r0, lr
   12a44:	add	r2, pc, r2
   12a48:	blx	ip
   12a4c:	ldr	ip, [sp, #68]	; 0x44
   12a50:	mov	r1, r4
   12a54:	ldr	r2, [pc, #1088]	; 12e9c <exit@plt+0x24e4>
   12a58:	ldr	r3, [ip, #344]	; 0x158
   12a5c:	mov	r0, ip
   12a60:	add	r2, pc, r2
   12a64:	blx	r3
   12a68:	ldr	ip, [sp, #72]	; 0x48
   12a6c:	mov	r1, r4
   12a70:	ldr	r2, [pc, #1064]	; 12ea0 <exit@plt+0x24e8>
   12a74:	ldr	r3, [ip, #344]	; 0x158
   12a78:	mov	r0, ip
   12a7c:	add	r2, pc, r2
   12a80:	blx	r3
   12a84:	ldr	ip, [sp, #60]	; 0x3c
   12a88:	mov	r1, r4
   12a8c:	ldr	r2, [pc, #1040]	; 12ea4 <exit@plt+0x24ec>
   12a90:	ldr	r3, [ip, #344]	; 0x158
   12a94:	mov	r0, ip
   12a98:	add	r2, pc, r2
   12a9c:	blx	r3
   12aa0:	b	12604 <exit@plt+0x1c4c>
   12aa4:	ands	r3, r5, #1024	; 0x400
   12aa8:	movne	r2, #64	; 0x40
   12aac:	bne	12abc <exit@plt+0x2104>
   12ab0:	tst	r5, #1
   12ab4:	moveq	r2, #26
   12ab8:	movne	r2, #32
   12abc:	add	r2, r9, r2
   12ac0:	lsl	ip, r4, #1
   12ac4:	ldrh	r2, [r2, ip]
   12ac8:	add	r2, r9, r2
   12acc:	ldrsb	r2, [r2, #2]
   12ad0:	cmp	r2, #0
   12ad4:	blt	12970 <exit@plt+0x1fb8>
   12ad8:	mov	r0, r5
   12adc:	mov	r1, r9
   12ae0:	mov	r2, r4
   12ae4:	str	r3, [sp, #20]
   12ae8:	str	ip, [sp, #16]
   12aec:	bl	11614 <exit@plt+0xc5c>
   12af0:	ldr	r3, [sp, #20]
   12af4:	ldr	ip, [sp, #16]
   12af8:	mov	r7, r0
   12afc:	ldr	r0, [sp, #24]
   12b00:	cmp	r0, #0
   12b04:	moveq	r8, #1
   12b08:	beq	129a0 <exit@plt+0x1fe8>
   12b0c:	ldr	r0, [r6, #24]
   12b10:	mov	lr, #4
   12b14:	ldr	r2, [sp, #28]
   12b18:	mov	r3, #1
   12b1c:	str	lr, [sp, #8]
   12b20:	mov	r1, r5
   12b24:	ldr	lr, [sp, #32]
   12b28:	str	r2, [sp]
   12b2c:	mov	r2, r7
   12b30:	str	r3, [sp, #4]
   12b34:	mov	r3, #0
   12b38:	str	lr, [sp, #12]
   12b3c:	bl	111e4 <exit@plt+0x82c>
   12b40:	ldr	ip, [sp, #16]
   12b44:	cmp	r0, #0
   12b48:	bne	12c30 <exit@plt+0x2278>
   12b4c:	ldr	r5, [r6, #772]	; 0x304
   12b50:	mov	r8, #1
   12b54:	and	r3, r5, #1024	; 0x400
   12b58:	b	129a0 <exit@plt+0x1fe8>
   12b5c:	ldr	ip, [sp, #24]
   12b60:	cmp	ip, #0
   12b64:	bne	12b88 <exit@plt+0x21d0>
   12b68:	ldr	ip, [sp, #28]
   12b6c:	add	ip, ip, #1
   12b70:	str	ip, [sp, #28]
   12b74:	cmp	ip, #8
   12b78:	bne	12910 <exit@plt+0x1f58>
   12b7c:	mov	fp, sl
   12b80:	mov	r6, #0
   12b84:	b	127a4 <exit@plt+0x1dec>
   12b88:	ldr	r0, [sp, #28]
   12b8c:	ldr	r1, [sp, #32]
   12b90:	bl	110f4 <exit@plt+0x73c>
   12b94:	cmp	r0, #0
   12b98:	beq	12b68 <exit@plt+0x21b0>
   12b9c:	ldr	ip, [sp, #68]	; 0x44
   12ba0:	mov	r4, r0
   12ba4:	ldr	r2, [pc, #764]	; 12ea8 <exit@plt+0x24f0>
   12ba8:	mov	r1, r4
   12bac:	ldr	r3, [ip, #344]	; 0x158
   12bb0:	mov	r0, ip
   12bb4:	add	r2, pc, r2
   12bb8:	blx	r3
   12bbc:	b	12a68 <exit@plt+0x20b0>
   12bc0:	ldr	ip, [sp, #72]	; 0x48
   12bc4:	mov	r6, r0
   12bc8:	mov	r1, r6
   12bcc:	ldr	r2, [sp, #76]	; 0x4c
   12bd0:	ldr	r3, [ip, #344]	; 0x158
   12bd4:	mov	r0, ip
   12bd8:	blx	r3
   12bdc:	b	127a0 <exit@plt+0x1de8>
   12be0:	ldr	lr, [sp, #48]	; 0x30
   12be4:	mov	r3, r0
   12be8:	ldr	r2, [pc, #700]	; 12eac <exit@plt+0x24f4>
   12bec:	mov	r1, r3
   12bf0:	mov	r4, r3
   12bf4:	ldr	ip, [lr, #344]	; 0x158
   12bf8:	mov	r0, lr
   12bfc:	add	r2, pc, r2
   12c00:	blx	ip
   12c04:	b	12a4c <exit@plt+0x2094>
   12c08:	mov	r9, r5
   12c0c:	b	123e8 <exit@plt+0x1a30>
   12c10:	tst	r4, #1
   12c14:	moveq	r3, #26
   12c18:	movne	r3, #32
   12c1c:	b	1266c <exit@plt+0x1cb4>
   12c20:	cmp	r6, #0
   12c24:	beq	12638 <exit@plt+0x1c80>
   12c28:	mov	r4, r6
   12c2c:	b	12a84 <exit@plt+0x20cc>
   12c30:	mov	r3, r0
   12c34:	ldr	r0, [sp, #48]	; 0x30
   12c38:	ldr	r2, [pc, #624]	; 12eb0 <exit@plt+0x24f8>
   12c3c:	mov	r1, r3
   12c40:	mov	r4, r3
   12c44:	ldr	ip, [r0, #344]	; 0x158
   12c48:	add	r2, pc, r2
   12c4c:	blx	ip
   12c50:	b	12a4c <exit@plt+0x2094>
   12c54:	ldr	r1, [sp, #84]	; 0x54
   12c58:	cmp	r9, r1
   12c5c:	ldr	r3, [r1, #16]
   12c60:	str	r3, [sp, #88]	; 0x58
   12c64:	beq	12c90 <exit@plt+0x22d8>
   12c68:	ldr	ip, [sp, #24]
   12c6c:	mov	r3, #0
   12c70:	ldr	r4, [ip, #136]	; 0x88
   12c74:	mov	r0, ip
   12c78:	ldr	ip, [sp, #36]	; 0x24
   12c7c:	ldr	r2, [ip, #20]
   12c80:	blx	r4
   12c84:	cmp	r0, #0
   12c88:	bne	12d68 <exit@plt+0x23b0>
   12c8c:	ldr	r3, [sp, #88]	; 0x58
   12c90:	cmp	r3, #0
   12c94:	beq	12624 <exit@plt+0x1c6c>
   12c98:	ldr	ip, [sp, #36]	; 0x24
   12c9c:	add	lr, sp, #84	; 0x54
   12ca0:	ldr	r0, [sp, #24]
   12ca4:	add	r1, sp, #88	; 0x58
   12ca8:	mov	r3, #0
   12cac:	ldr	r2, [ip, #16]
   12cb0:	str	lr, [sp]
   12cb4:	ldr	r4, [r0, #92]	; 0x5c
   12cb8:	blx	r4
   12cbc:	cmp	r0, #0
   12cc0:	bne	12d44 <exit@plt+0x238c>
   12cc4:	ldr	ip, [sp, #36]	; 0x24
   12cc8:	ldr	r5, [ip]
   12ccc:	ldr	ip, [r5, #24]
   12cd0:	str	ip, [sp, #28]
   12cd4:	b	124d0 <exit@plt+0x1b18>
   12cd8:	ldr	lr, [sp, #28]
   12cdc:	mov	r3, r0
   12ce0:	ldr	r2, [pc, #460]	; 12eb4 <exit@plt+0x24fc>
   12ce4:	mov	r1, r3
   12ce8:	mov	r4, r3
   12cec:	ldr	ip, [lr, #344]	; 0x158
   12cf0:	mov	r0, lr
   12cf4:	add	r2, pc, r2
   12cf8:	blx	ip
   12cfc:	b	125b0 <exit@plt+0x1bf8>
   12d00:	mov	r2, #0
   12d04:	ldr	r1, [r5, #772]	; 0x304
   12d08:	mov	lr, #2
   12d0c:	mov	ip, #4
   12d10:	str	r6, [sp]
   12d14:	mov	r3, r2
   12d18:	str	lr, [sp, #4]
   12d1c:	ldr	r0, [sp, #32]
   12d20:	str	ip, [sp, #8]
   12d24:	str	r8, [sp, #12]
   12d28:	bl	111e4 <exit@plt+0x82c>
   12d2c:	cmp	r0, #0
   12d30:	bne	12dc4 <exit@plt+0x240c>
   12d34:	ldr	ip, [sp, #36]	; 0x24
   12d38:	ldr	r5, [ip]
   12d3c:	ldr	r3, [r5, #24]
   12d40:	b	124b8 <exit@plt+0x1b00>
   12d44:	ldr	ip, [sp, #32]
   12d48:	mov	r4, r0
   12d4c:	ldr	r2, [pc, #356]	; 12eb8 <exit@plt+0x2500>
   12d50:	mov	r1, r4
   12d54:	ldr	r3, [ip, #344]	; 0x158
   12d58:	mov	r0, ip
   12d5c:	add	r2, pc, r2
   12d60:	blx	r3
   12d64:	b	125cc <exit@plt+0x1c14>
   12d68:	ldr	ip, [sp, #32]
   12d6c:	mov	r4, r0
   12d70:	ldr	r2, [pc, #324]	; 12ebc <exit@plt+0x2504>
   12d74:	mov	r1, r4
   12d78:	ldr	r3, [ip, #344]	; 0x158
   12d7c:	mov	r0, ip
   12d80:	add	r2, pc, r2
   12d84:	blx	r3
   12d88:	b	125cc <exit@plt+0x1c14>
   12d8c:	mov	r0, r6
   12d90:	mov	r1, r8
   12d94:	bl	110f4 <exit@plt+0x73c>
   12d98:	cmp	r0, #0
   12d9c:	beq	1262c <exit@plt+0x1c74>
   12da0:	ldr	ip, [sp, #32]
   12da4:	mov	r4, r0
   12da8:	ldr	r2, [pc, #272]	; 12ec0 <exit@plt+0x2508>
   12dac:	mov	r1, r4
   12db0:	ldr	r3, [ip, #344]	; 0x158
   12db4:	mov	r0, ip
   12db8:	add	r2, pc, r2
   12dbc:	blx	r3
   12dc0:	b	125cc <exit@plt+0x1c14>
   12dc4:	ldr	ip, [sp, #32]
   12dc8:	mov	r4, r0
   12dcc:	ldr	r2, [pc, #240]	; 12ec4 <exit@plt+0x250c>
   12dd0:	mov	r1, r4
   12dd4:	ldr	r3, [ip, #344]	; 0x158
   12dd8:	mov	r0, ip
   12ddc:	add	r2, pc, r2
   12de0:	blx	r3
   12de4:	b	125cc <exit@plt+0x1c14>
   12de8:	ldr	ip, [sp, #44]	; 0x2c
   12dec:	mov	r4, r0
   12df0:	ldr	r2, [pc, #208]	; 12ec8 <exit@plt+0x2510>
   12df4:	mov	r1, r4
   12df8:	ldr	r3, [ip, #344]	; 0x158
   12dfc:	mov	r0, ip
   12e00:	add	r2, pc, r2
   12e04:	blx	r3
   12e08:	ldr	ip, [sp, #56]	; 0x38
   12e0c:	mov	r1, r4
   12e10:	ldr	r2, [pc, #180]	; 12ecc <exit@plt+0x2514>
   12e14:	ldr	r3, [ip, #344]	; 0x158
   12e18:	mov	r0, ip
   12e1c:	add	r2, pc, r2
   12e20:	blx	r3
   12e24:	b	125e8 <exit@plt+0x1c30>
   12e28:	ldr	ip, [sp, #44]	; 0x2c
   12e2c:	mov	r4, r0
   12e30:	ldr	r2, [pc, #152]	; 12ed0 <exit@plt+0x2518>
   12e34:	mov	r1, r4
   12e38:	ldr	r3, [ip, #344]	; 0x158
   12e3c:	mov	r0, ip
   12e40:	add	r2, pc, r2
   12e44:	blx	r3
   12e48:	b	12e08 <exit@plt+0x2450>
   12e4c:	movw	r4, #34534	; 0x86e6
   12e50:	movt	r4, #65535	; 0xffff
   12e54:	b	12a84 <exit@plt+0x20cc>
   12e58:	mov	r7, fp
   12e5c:	b	128ec <exit@plt+0x1f34>
   12e60:	bl	10964 <__stack_chk_fail@plt>
   12e64:	ldrh	r3, [r5, #28]
   12e68:	add	r3, r9, r3
   12e6c:	ldrsb	r2, [r3, #2]
   12e70:	cmp	r2, #0
   12e74:	bge	127d8 <exit@plt+0x1e20>
   12e78:	b	127a4 <exit@plt+0x1dec>
   12e7c:	andeq	r1, r1, r0, asr #26
   12e80:	andeq	r0, r0, r0, rrx
   12e84:	andeq	r1, r0, ip, asr #11
   12e88:	andeq	r1, r0, ip, ror r6
   12e8c:	andeq	r1, r0, ip, ror r6
   12e90:	andeq	r1, r0, r4, ror r6
   12e94:	andeq	r1, r0, r0, ror #9
   12e98:	andeq	r1, r0, r0, lsr r1
   12e9c:	muleq	r0, r8, r1
   12ea0:	muleq	r0, ip, r1
   12ea4:	andeq	r1, r0, r4, lsr #2
   12ea8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12eac:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   12eb0:	andeq	r0, r0, ip, lsr #30
   12eb4:	muleq	r0, r8, lr
   12eb8:	andeq	r0, r0, r8, lsl #29
   12ebc:	andeq	r0, r0, r0, asr lr
   12ec0:	andeq	r0, r0, ip, ror #27
   12ec4:	muleq	r0, r8, sp
   12ec8:	andeq	r0, r0, r4, ror #27
   12ecc:	andeq	r0, r0, r4, lsl lr
   12ed0:	muleq	r0, r0, sp
   12ed4:	cmp	r0, #0
   12ed8:	bne	12ef0 <exit@plt+0x2538>
   12edc:	ldr	r3, [pc, #28]	; 12f00 <exit@plt+0x2548>
   12ee0:	mov	r2, #2
   12ee4:	add	r3, pc, r3
   12ee8:	str	r2, [r3]
   12eec:	bx	lr
   12ef0:	ldr	r3, [pc, #12]	; 12f04 <exit@plt+0x254c>
   12ef4:	add	r3, pc, r3
   12ef8:	str	r0, [r3]
   12efc:	bx	lr
   12f00:	muleq	r1, r0, r1
   12f04:	andeq	r1, r1, r0, lsl #3
   12f08:	ldr	r3, [pc, #112]	; 12f80 <exit@plt+0x25c8>
   12f0c:	cmp	r1, #0
   12f10:	ldr	r2, [pc, #108]	; 12f84 <exit@plt+0x25cc>
   12f14:	add	r3, pc, r3
   12f18:	push	{r4, r5, r6, lr}
   12f1c:	sub	sp, sp, #288	; 0x120
   12f20:	ldr	r5, [r3, r2]
   12f24:	mov	r6, r0
   12f28:	ldr	r3, [r5]
   12f2c:	str	r3, [sp, #284]	; 0x11c
   12f30:	movne	r3, #0
   12f34:	ldreq	r3, [pc, #76]	; 12f88 <exit@plt+0x25d0>
   12f38:	addeq	r3, pc, r3
   12f3c:	add	r4, sp, #288	; 0x120
   12f40:	add	r0, sp, #8
   12f44:	str	r3, [r4, #-284]!	; 0xfffffee4
   12f48:	bl	108d4 <sigemptyset@plt>
   12f4c:	add	r2, sp, #144	; 0x90
   12f50:	mov	r1, r4
   12f54:	mov	r0, r6
   12f58:	mov	r3, #0
   12f5c:	str	r3, [sp, #136]	; 0x88
   12f60:	bl	10970 <sigaction@plt>
   12f64:	ldr	r2, [sp, #284]	; 0x11c
   12f68:	ldr	r3, [r5]
   12f6c:	cmp	r2, r3
   12f70:	bne	12f7c <exit@plt+0x25c4>
   12f74:	add	sp, sp, #288	; 0x120
   12f78:	pop	{r4, r5, r6, pc}
   12f7c:	bl	10964 <__stack_chk_fail@plt>
   12f80:	andeq	r1, r1, r4, ror #1
   12f84:	andeq	r0, r0, r0, rrx
   12f88:			; <UNDEFINED> instruction: 0xffffff94
   12f8c:	push	{r3, lr}
   12f90:	mov	r0, #1
   12f94:	mov	r1, #0
   12f98:	bl	12f08 <exit@plt+0x2550>
   12f9c:	mov	r0, #2
   12fa0:	mov	r1, #0
   12fa4:	bl	12f08 <exit@plt+0x2550>
   12fa8:	mov	r0, #13
   12fac:	mov	r1, #0
   12fb0:	bl	12f08 <exit@plt+0x2550>
   12fb4:	mov	r0, #15
   12fb8:	mov	r1, #0
   12fbc:	pop	{r3, lr}
   12fc0:	b	12f08 <exit@plt+0x2550>
   12fc4:	ldr	r3, [pc, #12]	; 12fd8 <exit@plt+0x2620>
   12fc8:	ldr	r0, [pc, r3]
   12fcc:	adds	r0, r0, #0
   12fd0:	movne	r0, #1
   12fd4:	bx	lr
   12fd8:	andeq	r1, r1, ip, lsr #1
   12fdc:	ldr	r3, [pc, #36]	; 13008 <exit@plt+0x2650>
   12fe0:	push	{r4, lr}
   12fe4:	ldr	r4, [pc, r3]
   12fe8:	cmp	r4, #0
   12fec:	popeq	{r4, pc}
   12ff0:	mov	r0, r4
   12ff4:	mov	r1, #1
   12ff8:	bl	12f08 <exit@plt+0x2550>
   12ffc:	mov	r0, r4
   13000:	pop	{r4, lr}
   13004:	b	1094c <raise@plt>
   13008:	muleq	r1, r0, r0
   1300c:	subs	r2, r1, #1
   13010:	bxeq	lr
   13014:	bcc	131ec <exit@plt+0x2834>
   13018:	cmp	r0, r1
   1301c:	bls	131d0 <exit@plt+0x2818>
   13020:	tst	r1, r2
   13024:	beq	131dc <exit@plt+0x2824>
   13028:	clz	r3, r0
   1302c:	clz	r2, r1
   13030:	sub	r3, r2, r3
   13034:	rsbs	r3, r3, #31
   13038:	addne	r3, r3, r3, lsl #1
   1303c:	mov	r2, #0
   13040:	addne	pc, pc, r3, lsl #2
   13044:	nop	{0}
   13048:	cmp	r0, r1, lsl #31
   1304c:	adc	r2, r2, r2
   13050:	subcs	r0, r0, r1, lsl #31
   13054:	cmp	r0, r1, lsl #30
   13058:	adc	r2, r2, r2
   1305c:	subcs	r0, r0, r1, lsl #30
   13060:	cmp	r0, r1, lsl #29
   13064:	adc	r2, r2, r2
   13068:	subcs	r0, r0, r1, lsl #29
   1306c:	cmp	r0, r1, lsl #28
   13070:	adc	r2, r2, r2
   13074:	subcs	r0, r0, r1, lsl #28
   13078:	cmp	r0, r1, lsl #27
   1307c:	adc	r2, r2, r2
   13080:	subcs	r0, r0, r1, lsl #27
   13084:	cmp	r0, r1, lsl #26
   13088:	adc	r2, r2, r2
   1308c:	subcs	r0, r0, r1, lsl #26
   13090:	cmp	r0, r1, lsl #25
   13094:	adc	r2, r2, r2
   13098:	subcs	r0, r0, r1, lsl #25
   1309c:	cmp	r0, r1, lsl #24
   130a0:	adc	r2, r2, r2
   130a4:	subcs	r0, r0, r1, lsl #24
   130a8:	cmp	r0, r1, lsl #23
   130ac:	adc	r2, r2, r2
   130b0:	subcs	r0, r0, r1, lsl #23
   130b4:	cmp	r0, r1, lsl #22
   130b8:	adc	r2, r2, r2
   130bc:	subcs	r0, r0, r1, lsl #22
   130c0:	cmp	r0, r1, lsl #21
   130c4:	adc	r2, r2, r2
   130c8:	subcs	r0, r0, r1, lsl #21
   130cc:	cmp	r0, r1, lsl #20
   130d0:	adc	r2, r2, r2
   130d4:	subcs	r0, r0, r1, lsl #20
   130d8:	cmp	r0, r1, lsl #19
   130dc:	adc	r2, r2, r2
   130e0:	subcs	r0, r0, r1, lsl #19
   130e4:	cmp	r0, r1, lsl #18
   130e8:	adc	r2, r2, r2
   130ec:	subcs	r0, r0, r1, lsl #18
   130f0:	cmp	r0, r1, lsl #17
   130f4:	adc	r2, r2, r2
   130f8:	subcs	r0, r0, r1, lsl #17
   130fc:	cmp	r0, r1, lsl #16
   13100:	adc	r2, r2, r2
   13104:	subcs	r0, r0, r1, lsl #16
   13108:	cmp	r0, r1, lsl #15
   1310c:	adc	r2, r2, r2
   13110:	subcs	r0, r0, r1, lsl #15
   13114:	cmp	r0, r1, lsl #14
   13118:	adc	r2, r2, r2
   1311c:	subcs	r0, r0, r1, lsl #14
   13120:	cmp	r0, r1, lsl #13
   13124:	adc	r2, r2, r2
   13128:	subcs	r0, r0, r1, lsl #13
   1312c:	cmp	r0, r1, lsl #12
   13130:	adc	r2, r2, r2
   13134:	subcs	r0, r0, r1, lsl #12
   13138:	cmp	r0, r1, lsl #11
   1313c:	adc	r2, r2, r2
   13140:	subcs	r0, r0, r1, lsl #11
   13144:	cmp	r0, r1, lsl #10
   13148:	adc	r2, r2, r2
   1314c:	subcs	r0, r0, r1, lsl #10
   13150:	cmp	r0, r1, lsl #9
   13154:	adc	r2, r2, r2
   13158:	subcs	r0, r0, r1, lsl #9
   1315c:	cmp	r0, r1, lsl #8
   13160:	adc	r2, r2, r2
   13164:	subcs	r0, r0, r1, lsl #8
   13168:	cmp	r0, r1, lsl #7
   1316c:	adc	r2, r2, r2
   13170:	subcs	r0, r0, r1, lsl #7
   13174:	cmp	r0, r1, lsl #6
   13178:	adc	r2, r2, r2
   1317c:	subcs	r0, r0, r1, lsl #6
   13180:	cmp	r0, r1, lsl #5
   13184:	adc	r2, r2, r2
   13188:	subcs	r0, r0, r1, lsl #5
   1318c:	cmp	r0, r1, lsl #4
   13190:	adc	r2, r2, r2
   13194:	subcs	r0, r0, r1, lsl #4
   13198:	cmp	r0, r1, lsl #3
   1319c:	adc	r2, r2, r2
   131a0:	subcs	r0, r0, r1, lsl #3
   131a4:	cmp	r0, r1, lsl #2
   131a8:	adc	r2, r2, r2
   131ac:	subcs	r0, r0, r1, lsl #2
   131b0:	cmp	r0, r1, lsl #1
   131b4:	adc	r2, r2, r2
   131b8:	subcs	r0, r0, r1, lsl #1
   131bc:	cmp	r0, r1
   131c0:	adc	r2, r2, r2
   131c4:	subcs	r0, r0, r1
   131c8:	mov	r0, r2
   131cc:	bx	lr
   131d0:	moveq	r0, #1
   131d4:	movne	r0, #0
   131d8:	bx	lr
   131dc:	clz	r2, r1
   131e0:	rsb	r2, r2, #31
   131e4:	lsr	r0, r0, r2
   131e8:	bx	lr
   131ec:	cmp	r0, #0
   131f0:	mvnne	r0, #0
   131f4:	b	135d0 <exit@plt+0x2c18>
   131f8:	cmp	r1, #0
   131fc:	beq	131ec <exit@plt+0x2834>
   13200:	push	{r0, r1, lr}
   13204:	bl	1300c <exit@plt+0x2654>
   13208:	pop	{r1, r2, lr}
   1320c:	mul	r3, r2, r0
   13210:	sub	r1, r1, r3
   13214:	bx	lr
   13218:	eor	r1, r1, #-2147483648	; 0x80000000
   1321c:	b	13224 <exit@plt+0x286c>
   13220:	eor	r3, r3, #-2147483648	; 0x80000000
   13224:	push	{r4, r5, lr}
   13228:	lsl	r4, r1, #1
   1322c:	lsl	r5, r3, #1
   13230:	teq	r4, r5
   13234:	teqeq	r0, r2
   13238:	orrsne	ip, r4, r0
   1323c:	orrsne	ip, r5, r2
   13240:	mvnsne	ip, r4, asr #21
   13244:	mvnsne	ip, r5, asr #21
   13248:	beq	13434 <exit@plt+0x2a7c>
   1324c:	lsr	r4, r4, #21
   13250:	rsbs	r5, r4, r5, lsr #21
   13254:	rsblt	r5, r5, #0
   13258:	ble	13278 <exit@plt+0x28c0>
   1325c:	add	r4, r4, r5
   13260:	eor	r2, r0, r2
   13264:	eor	r3, r1, r3
   13268:	eor	r0, r2, r0
   1326c:	eor	r1, r3, r1
   13270:	eor	r2, r0, r2
   13274:	eor	r3, r1, r3
   13278:	cmp	r5, #54	; 0x36
   1327c:	pophi	{r4, r5, pc}
   13280:	tst	r1, #-2147483648	; 0x80000000
   13284:	lsl	r1, r1, #12
   13288:	mov	ip, #1048576	; 0x100000
   1328c:	orr	r1, ip, r1, lsr #12
   13290:	beq	1329c <exit@plt+0x28e4>
   13294:	rsbs	r0, r0, #0
   13298:	rsc	r1, r1, #0
   1329c:	tst	r3, #-2147483648	; 0x80000000
   132a0:	lsl	r3, r3, #12
   132a4:	orr	r3, ip, r3, lsr #12
   132a8:	beq	132b4 <exit@plt+0x28fc>
   132ac:	rsbs	r2, r2, #0
   132b0:	rsc	r3, r3, #0
   132b4:	teq	r4, r5
   132b8:	beq	1341c <exit@plt+0x2a64>
   132bc:	sub	r4, r4, #1
   132c0:	rsbs	lr, r5, #32
   132c4:	blt	132e0 <exit@plt+0x2928>
   132c8:	lsl	ip, r2, lr
   132cc:	adds	r0, r0, r2, lsr r5
   132d0:	adc	r1, r1, #0
   132d4:	adds	r0, r0, r3, lsl lr
   132d8:	adcs	r1, r1, r3, asr r5
   132dc:	b	132fc <exit@plt+0x2944>
   132e0:	sub	r5, r5, #32
   132e4:	add	lr, lr, #32
   132e8:	cmp	r2, #1
   132ec:	lsl	ip, r3, lr
   132f0:	orrcs	ip, ip, #2
   132f4:	adds	r0, r0, r3, asr r5
   132f8:	adcs	r1, r1, r3, asr #31
   132fc:	and	r5, r1, #-2147483648	; 0x80000000
   13300:	bpl	13310 <exit@plt+0x2958>
   13304:	rsbs	ip, ip, #0
   13308:	rscs	r0, r0, #0
   1330c:	rsc	r1, r1, #0
   13310:	cmp	r1, #1048576	; 0x100000
   13314:	bcc	13354 <exit@plt+0x299c>
   13318:	cmp	r1, #2097152	; 0x200000
   1331c:	bcc	1333c <exit@plt+0x2984>
   13320:	lsrs	r1, r1, #1
   13324:	rrxs	r0, r0
   13328:	rrx	ip, ip
   1332c:	add	r4, r4, #1
   13330:	lsl	r2, r4, #21
   13334:	cmn	r2, #4194304	; 0x400000
   13338:	bcs	13494 <exit@plt+0x2adc>
   1333c:	cmp	ip, #-2147483648	; 0x80000000
   13340:	lsrseq	ip, r0, #1
   13344:	adcs	r0, r0, #0
   13348:	adc	r1, r1, r4, lsl #20
   1334c:	orr	r1, r1, r5
   13350:	pop	{r4, r5, pc}
   13354:	lsls	ip, ip, #1
   13358:	adcs	r0, r0, r0
   1335c:	adc	r1, r1, r1
   13360:	tst	r1, #1048576	; 0x100000
   13364:	sub	r4, r4, #1
   13368:	bne	1333c <exit@plt+0x2984>
   1336c:	teq	r1, #0
   13370:	moveq	r1, r0
   13374:	moveq	r0, #0
   13378:	clz	r3, r1
   1337c:	addeq	r3, r3, #32
   13380:	sub	r3, r3, #11
   13384:	subs	r2, r3, #32
   13388:	bge	133ac <exit@plt+0x29f4>
   1338c:	adds	r2, r2, #12
   13390:	ble	133a8 <exit@plt+0x29f0>
   13394:	add	ip, r2, #20
   13398:	rsb	r2, r2, #12
   1339c:	lsl	r0, r1, ip
   133a0:	lsr	r1, r1, r2
   133a4:	b	133bc <exit@plt+0x2a04>
   133a8:	add	r2, r2, #20
   133ac:	rsble	ip, r2, #32
   133b0:	lsl	r1, r1, r2
   133b4:	orrle	r1, r1, r0, lsr ip
   133b8:	lslle	r0, r0, r2
   133bc:	subs	r4, r4, r3
   133c0:	addge	r1, r1, r4, lsl #20
   133c4:	orrge	r1, r1, r5
   133c8:	popge	{r4, r5, pc}
   133cc:	mvn	r4, r4
   133d0:	subs	r4, r4, #31
   133d4:	bge	13410 <exit@plt+0x2a58>
   133d8:	adds	r4, r4, #12
   133dc:	bgt	133f8 <exit@plt+0x2a40>
   133e0:	add	r4, r4, #20
   133e4:	rsb	r2, r4, #32
   133e8:	lsr	r0, r0, r4
   133ec:	orr	r0, r0, r1, lsl r2
   133f0:	orr	r1, r5, r1, lsr r4
   133f4:	pop	{r4, r5, pc}
   133f8:	rsb	r4, r4, #12
   133fc:	rsb	r2, r4, #32
   13400:	lsr	r0, r0, r2
   13404:	orr	r0, r0, r1, lsl r4
   13408:	mov	r1, r5
   1340c:	pop	{r4, r5, pc}
   13410:	lsr	r0, r1, r4
   13414:	mov	r1, r5
   13418:	pop	{r4, r5, pc}
   1341c:	teq	r4, #0
   13420:	eor	r3, r3, #1048576	; 0x100000
   13424:	eoreq	r1, r1, #1048576	; 0x100000
   13428:	addeq	r4, r4, #1
   1342c:	subne	r5, r5, #1
   13430:	b	132bc <exit@plt+0x2904>
   13434:	mvns	ip, r4, asr #21
   13438:	mvnsne	ip, r5, asr #21
   1343c:	beq	134a4 <exit@plt+0x2aec>
   13440:	teq	r4, r5
   13444:	teqeq	r0, r2
   13448:	beq	1345c <exit@plt+0x2aa4>
   1344c:	orrs	ip, r4, r0
   13450:	moveq	r1, r3
   13454:	moveq	r0, r2
   13458:	pop	{r4, r5, pc}
   1345c:	teq	r1, r3
   13460:	movne	r1, #0
   13464:	movne	r0, #0
   13468:	popne	{r4, r5, pc}
   1346c:	lsrs	ip, r4, #21
   13470:	bne	13484 <exit@plt+0x2acc>
   13474:	lsls	r0, r0, #1
   13478:	adcs	r1, r1, r1
   1347c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   13480:	pop	{r4, r5, pc}
   13484:	adds	r4, r4, #4194304	; 0x400000
   13488:	addcc	r1, r1, #1048576	; 0x100000
   1348c:	popcc	{r4, r5, pc}
   13490:	and	r5, r1, #-2147483648	; 0x80000000
   13494:	orr	r1, r5, #2130706432	; 0x7f000000
   13498:	orr	r1, r1, #15728640	; 0xf00000
   1349c:	mov	r0, #0
   134a0:	pop	{r4, r5, pc}
   134a4:	mvns	ip, r4, asr #21
   134a8:	movne	r1, r3
   134ac:	movne	r0, r2
   134b0:	mvnseq	ip, r5, asr #21
   134b4:	movne	r3, r1
   134b8:	movne	r2, r0
   134bc:	orrs	r4, r0, r1, lsl #12
   134c0:	orrseq	r5, r2, r3, lsl #12
   134c4:	teqeq	r1, r3
   134c8:	orrne	r1, r1, #524288	; 0x80000
   134cc:	pop	{r4, r5, pc}
   134d0:	teq	r0, #0
   134d4:	moveq	r1, #0
   134d8:	bxeq	lr
   134dc:	push	{r4, r5, lr}
   134e0:	mov	r4, #1024	; 0x400
   134e4:	add	r4, r4, #50	; 0x32
   134e8:	mov	r5, #0
   134ec:	mov	r1, #0
   134f0:	b	1336c <exit@plt+0x29b4>
   134f4:	teq	r0, #0
   134f8:	moveq	r1, #0
   134fc:	bxeq	lr
   13500:	push	{r4, r5, lr}
   13504:	mov	r4, #1024	; 0x400
   13508:	add	r4, r4, #50	; 0x32
   1350c:	ands	r5, r0, #-2147483648	; 0x80000000
   13510:	rsbmi	r0, r0, #0
   13514:	mov	r1, #0
   13518:	b	1336c <exit@plt+0x29b4>
   1351c:	lsls	r2, r0, #1
   13520:	asr	r1, r2, #3
   13524:	rrx	r1, r1
   13528:	lsl	r0, r2, #28
   1352c:	andsne	r3, r2, #-16777216	; 0xff000000
   13530:	teqne	r3, #-16777216	; 0xff000000
   13534:	eorne	r1, r1, #939524096	; 0x38000000
   13538:	bxne	lr
   1353c:	teq	r2, #0
   13540:	teqne	r3, #-16777216	; 0xff000000
   13544:	bxeq	lr
   13548:	push	{r4, r5, lr}
   1354c:	mov	r4, #896	; 0x380
   13550:	and	r5, r1, #-2147483648	; 0x80000000
   13554:	bic	r1, r1, #-2147483648	; 0x80000000
   13558:	b	1336c <exit@plt+0x29b4>
   1355c:	orrs	r2, r0, r1
   13560:	bxeq	lr
   13564:	push	{r4, r5, lr}
   13568:	mov	r5, #0
   1356c:	b	1358c <exit@plt+0x2bd4>
   13570:	orrs	r2, r0, r1
   13574:	bxeq	lr
   13578:	push	{r4, r5, lr}
   1357c:	ands	r5, r1, #-2147483648	; 0x80000000
   13580:	bpl	1358c <exit@plt+0x2bd4>
   13584:	rsbs	r0, r0, #0
   13588:	rsc	r1, r1, #0
   1358c:	mov	r4, #1024	; 0x400
   13590:	add	r4, r4, #50	; 0x32
   13594:	lsrs	ip, r1, #22
   13598:	beq	13310 <exit@plt+0x2958>
   1359c:	mov	r2, #3
   135a0:	lsrs	ip, ip, #3
   135a4:	addne	r2, r2, #3
   135a8:	lsrs	ip, ip, #3
   135ac:	addne	r2, r2, #3
   135b0:	add	r2, r2, ip, lsr #3
   135b4:	rsb	r3, r2, #32
   135b8:	lsl	ip, r0, r3
   135bc:	lsr	r0, r0, r2
   135c0:	orr	r0, r0, r1, lsl r3
   135c4:	lsr	r1, r1, r2
   135c8:	add	r4, r4, r2
   135cc:	b	13310 <exit@plt+0x2958>
   135d0:	push	{r1, lr}
   135d4:	mov	r0, #8
   135d8:	bl	1094c <raise@plt>
   135dc:	pop	{r1, pc}
   135e0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   135e4:	mov	r7, r0
   135e8:	ldr	r6, [pc, #76]	; 1363c <exit@plt+0x2c84>
   135ec:	mov	r8, r1
   135f0:	ldr	r5, [pc, #72]	; 13640 <exit@plt+0x2c88>
   135f4:	mov	r9, r2
   135f8:	add	r6, pc, r6
   135fc:	bl	108b4 <_init@@Base>
   13600:	add	r5, pc, r5
   13604:	rsb	r6, r5, r6
   13608:	asrs	r6, r6, #2
   1360c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   13610:	sub	r5, r5, #4
   13614:	mov	r4, #0
   13618:	add	r4, r4, #1
   1361c:	ldr	r3, [r5, #4]!
   13620:	mov	r0, r7
   13624:	mov	r1, r8
   13628:	mov	r2, r9
   1362c:	blx	r3
   13630:	cmp	r4, r6
   13634:	bne	13618 <exit@plt+0x2c60>
   13638:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1363c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   13640:	andeq	r0, r1, r4, ror #17
   13644:	bx	lr

Disassembly of section .fini:

00013648 <_fini@@Base>:
   13648:	push	{r3, lr}
   1364c:	pop	{r3, pc}
