
centos-preinstalled/lsattr:     file format elf32-littlearm


Disassembly of section .init:

00010a08 <_init@@Base>:
   10a08:	push	{r3, lr}
   10a0c:	bl	10e14 <set_com_err_gettext@plt+0x2a8>
   10a10:	pop	{r3, pc}

Disassembly of section .plt:

00010a14 <free@plt-0x14>:
   10a14:	push	{lr}		; (str lr, [sp, #-4]!)
   10a18:	ldr	lr, [pc, #4]	; 10a24 <_init@@Base+0x1c>
   10a1c:	add	lr, pc, lr
   10a20:	ldr	pc, [lr, #8]!
   10a24:	ldrdeq	r1, [r1], -ip

00010a28 <free@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a34 <fgetversion@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a40 <fgetflags@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a4c <dcgettext@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a58 <__stack_chk_fail@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a64 <textdomain@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a70 <com_err@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a7c <perror@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a88 <malloc@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1436]!	; 0x59c

00010a94 <__libc_start_main@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1428]!	; 0x594

00010aa0 <__gmon_start__@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1420]!	; 0x58c

00010aac <print_flags@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1412]!	; 0x584

00010ab8 <exit@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1404]!	; 0x57c

00010ac4 <gettext@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1396]!	; 0x574

00010ad0 <strlen@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1388]!	; 0x56c

00010adc <getopt@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #69632	; 0x11000
   10ae4:	ldr	pc, [ip, #1380]!	; 0x564

00010ae8 <__errno_location@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #69632	; 0x11000
   10af0:	ldr	pc, [ip, #1372]!	; 0x55c

00010af4 <__sprintf_chk@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #69632	; 0x11000
   10afc:	ldr	pc, [ip, #1364]!	; 0x554

00010b00 <putchar@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1356]!	; 0x54c

00010b0c <__printf_chk@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1348]!	; 0x544

00010b18 <__fprintf_chk@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1340]!	; 0x53c

00010b24 <setlocale@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1332]!	; 0x534

00010b30 <iterate_on_dir@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1324]!	; 0x52c

00010b3c <fputc@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1316]!	; 0x524

00010b48 <bindtextdomain@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1308]!	; 0x51c

00010b54 <abort@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1300]!	; 0x514

00010b60 <__lxstat64@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1292]!	; 0x50c

00010b6c <set_com_err_gettext@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1284]!	; 0x504

Disassembly of section .text:

00010b78 <.text>:
   10b78:	push	{r4, r5, r6, r7, lr}
   10b7c:	mov	r4, r0
   10b80:	sub	sp, sp, #12
   10b84:	mov	r6, r1
   10b88:	mov	r0, #5
   10b8c:	movw	r1, #5040	; 0x13b0
   10b90:	movt	r1, #1
   10b94:	bl	10b24 <setlocale@plt>
   10b98:	movw	r1, #5040	; 0x13b0
   10b9c:	mov	r0, #0
   10ba0:	movt	r1, #1
   10ba4:	bl	10b24 <setlocale@plt>
   10ba8:	movw	r0, #5092	; 0x13e4
   10bac:	movw	r1, #5104	; 0x13f0
   10bb0:	movt	r0, #1
   10bb4:	movt	r1, #1
   10bb8:	bl	10b48 <bindtextdomain@plt>
   10bbc:	movw	r0, #5092	; 0x13e4
   10bc0:	movt	r0, #1
   10bc4:	bl	10a64 <textdomain@plt>
   10bc8:	movw	r0, #2756	; 0xac4
   10bcc:	movt	r0, #1
   10bd0:	bl	10b6c <set_com_err_gettext@plt>
   10bd4:	cmp	r4, #0
   10bd8:	beq	10bf0 <set_com_err_gettext@plt+0x84>
   10bdc:	ldr	r2, [r6]
   10be0:	cmp	r2, #0
   10be4:	movwne	r3, #8324	; 0x2084
   10be8:	movtne	r3, #2
   10bec:	strne	r2, [r3]
   10bf0:	movw	r5, #8352	; 0x20a0
   10bf4:	movt	r5, #2
   10bf8:	mov	r7, #1
   10bfc:	movw	r2, #5124	; 0x1404
   10c00:	mov	r0, r4
   10c04:	movt	r2, #1
   10c08:	mov	r1, r6
   10c0c:	bl	10adc <getopt@plt>
   10c10:	cmn	r0, #1
   10c14:	beq	10d30 <set_com_err_gettext@plt+0x1c4>
   10c18:	sub	r3, r0, #82	; 0x52
   10c1c:	cmp	r3, #36	; 0x24
   10c20:	ldrls	pc, [pc, r3, lsl #2]
   10c24:	b	10cec <set_com_err_gettext@plt+0x180>
   10c28:	andeq	r0, r1, r4, ror #25
   10c2c:	andeq	r0, r1, ip, ror #25
   10c30:	andeq	r0, r1, ip, ror #25
   10c34:	andeq	r0, r1, ip, ror #25
   10c38:	ldrdeq	r0, [r1], -ip
   10c3c:	andeq	r0, r1, ip, ror #25
   10c40:	andeq	r0, r1, ip, ror #25
   10c44:	andeq	r0, r1, ip, ror #25
   10c48:	andeq	r0, r1, ip, ror #25
   10c4c:	andeq	r0, r1, ip, ror #25
   10c50:	andeq	r0, r1, ip, ror #25
   10c54:	andeq	r0, r1, ip, ror #25
   10c58:	andeq	r0, r1, ip, ror #25
   10c5c:	andeq	r0, r1, ip, ror #25
   10c60:	andeq	r0, r1, ip, ror #25
   10c64:	ldrdeq	r0, [r1], -r4
   10c68:	andeq	r0, r1, ip, ror #25
   10c6c:	andeq	r0, r1, ip, ror #25
   10c70:	andeq	r0, r1, ip, asr #25
   10c74:	andeq	r0, r1, ip, ror #25
   10c78:	andeq	r0, r1, ip, ror #25
   10c7c:	andeq	r0, r1, ip, ror #25
   10c80:	andeq	r0, r1, ip, ror #25
   10c84:	andeq	r0, r1, ip, ror #25
   10c88:	andeq	r0, r1, ip, ror #25
   10c8c:	andeq	r0, r1, ip, ror #25
   10c90:	andeq	r0, r1, r4, asr #25
   10c94:	andeq	r0, r1, ip, ror #25
   10c98:	andeq	r0, r1, ip, ror #25
   10c9c:	andeq	r0, r1, ip, ror #25
   10ca0:	andeq	r0, r1, ip, ror #25
   10ca4:	andeq	r0, r1, ip, ror #25
   10ca8:	andeq	r0, r1, ip, ror #25
   10cac:	andeq	r0, r1, ip, ror #25
   10cb0:	andeq	r0, r1, ip, ror #25
   10cb4:	andeq	r0, r1, ip, ror #25
   10cb8:			; <UNDEFINED> instruction: 0x00010cbc
   10cbc:	str	r7, [r5]
   10cc0:	b	10bfc <set_com_err_gettext@plt+0x90>
   10cc4:	str	r7, [r5, #4]
   10cc8:	b	10bfc <set_com_err_gettext@plt+0x90>
   10ccc:	str	r7, [r5, #16]
   10cd0:	b	10bfc <set_com_err_gettext@plt+0x90>
   10cd4:	str	r7, [r5, #8]
   10cd8:	b	10bfc <set_com_err_gettext@plt+0x90>
   10cdc:	str	r7, [r5, #20]
   10ce0:	b	10bfc <set_com_err_gettext@plt+0x90>
   10ce4:	str	r7, [r5, #12]
   10ce8:	b	10bfc <set_com_err_gettext@plt+0x90>
   10cec:	movw	r3, #8340	; 0x2094
   10cf0:	movt	r3, #2
   10cf4:	mov	r2, #5
   10cf8:	movw	r1, #5132	; 0x140c
   10cfc:	mov	r0, #0
   10d00:	movt	r1, #1
   10d04:	ldr	r4, [r3]
   10d08:	bl	10a4c <dcgettext@plt>
   10d0c:	movw	r3, #8324	; 0x2084
   10d10:	movt	r3, #2
   10d14:	mov	r1, #1
   10d18:	ldr	r3, [r3]
   10d1c:	mov	r2, r0
   10d20:	mov	r0, r4
   10d24:	bl	10b18 <__fprintf_chk@plt>
   10d28:	mov	r0, #1
   10d2c:	bl	10ab8 <exit@plt>
   10d30:	movw	r3, #8352	; 0x20a0
   10d34:	movt	r3, #2
   10d38:	ldr	r3, [r3, #20]
   10d3c:	cmp	r3, #0
   10d40:	bne	10da4 <set_com_err_gettext@plt+0x238>
   10d44:	movw	r3, #8336	; 0x2090
   10d48:	movt	r3, #2
   10d4c:	ldr	r5, [r3]
   10d50:	cmp	r4, r5
   10d54:	ble	10d88 <set_com_err_gettext@plt+0x21c>
   10d58:	sub	r3, r5, #-1073741823	; 0xc0000001
   10d5c:	mov	r7, #0
   10d60:	add	r6, r6, r3, lsl #2
   10d64:	ldr	r0, [r6, #4]!
   10d68:	add	r5, r5, #1
   10d6c:	bl	11218 <set_com_err_gettext@plt+0x6ac>
   10d70:	cmp	r0, #0
   10d74:	movne	r7, #1
   10d78:	cmp	r5, r4
   10d7c:	bne	10d64 <set_com_err_gettext@plt+0x1f8>
   10d80:	mov	r0, r7
   10d84:	bl	10ab8 <exit@plt>
   10d88:	movw	r0, #5200	; 0x1450
   10d8c:	movt	r0, #1
   10d90:	bl	11218 <set_com_err_gettext@plt+0x6ac>
   10d94:	cmn	r0, #1
   10d98:	movne	r7, #0
   10d9c:	moveq	r7, #1
   10da0:	b	10d80 <set_com_err_gettext@plt+0x214>
   10da4:	movw	r1, #8340	; 0x2094
   10da8:	movt	r1, #2
   10dac:	movw	r3, #5188	; 0x1444
   10db0:	movw	r2, #5164	; 0x142c
   10db4:	ldr	r0, [r1]
   10db8:	movt	r3, #1
   10dbc:	movt	r2, #1
   10dc0:	str	r3, [sp]
   10dc4:	mov	r1, #1
   10dc8:	movw	r3, #5180	; 0x143c
   10dcc:	movt	r3, #1
   10dd0:	bl	10b18 <__fprintf_chk@plt>
   10dd4:	b	10d44 <set_com_err_gettext@plt+0x1d8>
   10dd8:	mov	fp, #0
   10ddc:	mov	lr, #0
   10de0:	pop	{r1}		; (ldr r1, [sp], #4)
   10de4:	mov	r2, sp
   10de8:	push	{r2}		; (str r2, [sp, #-4]!)
   10dec:	push	{r0}		; (str r0, [sp, #-4]!)
   10df0:	ldr	ip, [pc, #16]	; 10e08 <set_com_err_gettext@plt+0x29c>
   10df4:	push	{ip}		; (str ip, [sp, #-4]!)
   10df8:	ldr	r0, [pc, #12]	; 10e0c <set_com_err_gettext@plt+0x2a0>
   10dfc:	ldr	r3, [pc, #12]	; 10e10 <set_com_err_gettext@plt+0x2a4>
   10e00:	bl	10a94 <__libc_start_main@plt>
   10e04:	bl	10b54 <abort@plt>
   10e08:	andeq	r1, r1, r0, asr r3
   10e0c:	andeq	r0, r1, r8, ror fp
   10e10:	andeq	r1, r1, ip, ror #5
   10e14:	ldr	r3, [pc, #20]	; 10e30 <set_com_err_gettext@plt+0x2c4>
   10e18:	ldr	r2, [pc, #20]	; 10e34 <set_com_err_gettext@plt+0x2c8>
   10e1c:	add	r3, pc, r3
   10e20:	ldr	r2, [r3, r2]
   10e24:	cmp	r2, #0
   10e28:	bxeq	lr
   10e2c:	b	10aa0 <__gmon_start__@plt>
   10e30:	ldrdeq	r1, [r1], -ip
   10e34:	andeq	r0, r0, ip, ror r0
   10e38:	push	{r3, lr}
   10e3c:	movw	r0, #8328	; 0x2088
   10e40:	ldr	r3, [pc, #36]	; 10e6c <set_com_err_gettext@plt+0x300>
   10e44:	movt	r0, #2
   10e48:	rsb	r3, r0, r3
   10e4c:	cmp	r3, #6
   10e50:	popls	{r3, pc}
   10e54:	movw	r3, #0
   10e58:	movt	r3, #0
   10e5c:	cmp	r3, #0
   10e60:	popeq	{r3, pc}
   10e64:	blx	r3
   10e68:	pop	{r3, pc}
   10e6c:	andeq	r2, r2, fp, lsl #1
   10e70:	push	{r3, lr}
   10e74:	movw	r0, #8328	; 0x2088
   10e78:	movw	r3, #8328	; 0x2088
   10e7c:	movt	r0, #2
   10e80:	movt	r3, #2
   10e84:	rsb	r3, r0, r3
   10e88:	asr	r3, r3, #2
   10e8c:	add	r3, r3, r3, lsr #31
   10e90:	asrs	r1, r3, #1
   10e94:	popeq	{r3, pc}
   10e98:	movw	r2, #0
   10e9c:	movt	r2, #0
   10ea0:	cmp	r2, #0
   10ea4:	popeq	{r3, pc}
   10ea8:	blx	r2
   10eac:	pop	{r3, pc}
   10eb0:	push	{r4, lr}
   10eb4:	movw	r4, #8348	; 0x209c
   10eb8:	movt	r4, #2
   10ebc:	ldrb	r3, [r4]
   10ec0:	cmp	r3, #0
   10ec4:	popne	{r4, pc}
   10ec8:	bl	10e38 <set_com_err_gettext@plt+0x2cc>
   10ecc:	mov	r3, #1
   10ed0:	strb	r3, [r4]
   10ed4:	pop	{r4, pc}
   10ed8:	movw	r0, #7924	; 0x1ef4
   10edc:	movt	r0, #2
   10ee0:	push	{r3, lr}
   10ee4:	ldr	r3, [r0]
   10ee8:	cmp	r3, #0
   10eec:	beq	10f04 <set_com_err_gettext@plt+0x398>
   10ef0:	movw	r3, #0
   10ef4:	movt	r3, #0
   10ef8:	cmp	r3, #0
   10efc:	beq	10f04 <set_com_err_gettext@plt+0x398>
   10f00:	blx	r3
   10f04:	pop	{r3, lr}
   10f08:	b	10e70 <set_com_err_gettext@plt+0x304>
   10f0c:	push	{r4, r5, r6, r7, r8, lr}
   10f10:	movw	r4, #8328	; 0x2088
   10f14:	movt	r4, #2
   10f18:	sub	sp, sp, #16
   10f1c:	add	r1, sp, #4
   10f20:	mov	r7, r0
   10f24:	ldr	r3, [r4]
   10f28:	str	r3, [sp, #12]
   10f2c:	bl	10a40 <fgetflags@plt>
   10f30:	cmn	r0, #1
   10f34:	mov	r6, r0
   10f38:	beq	11018 <set_com_err_gettext@plt+0x4ac>
   10f3c:	movw	r5, #8352	; 0x20a0
   10f40:	movt	r5, #2
   10f44:	ldr	r3, [r5]
   10f48:	cmp	r3, #0
   10f4c:	bne	10fe8 <set_com_err_gettext@plt+0x47c>
   10f50:	ldr	r2, [r5, #4]
   10f54:	movw	r5, #8352	; 0x20a0
   10f58:	movt	r5, #2
   10f5c:	ands	r6, r2, #1
   10f60:	bne	10fa8 <set_com_err_gettext@plt+0x43c>
   10f64:	movw	ip, #8344	; 0x2098
   10f68:	movt	ip, #2
   10f6c:	ldr	r1, [sp, #4]
   10f70:	ldr	r0, [ip]
   10f74:	bl	10aac <print_flags@plt>
   10f78:	movw	r1, #5036	; 0x13ac
   10f7c:	mov	r2, r7
   10f80:	mov	r0, #1
   10f84:	movt	r1, #1
   10f88:	bl	10b0c <__printf_chk@plt>
   10f8c:	ldr	r2, [sp, #12]
   10f90:	mov	r0, r6
   10f94:	ldr	r3, [r4]
   10f98:	cmp	r2, r3
   10f9c:	bne	11078 <set_com_err_gettext@plt+0x50c>
   10fa0:	add	sp, sp, #16
   10fa4:	pop	{r4, r5, r6, r7, r8, pc}
   10fa8:	movw	r8, #8344	; 0x2098
   10fac:	movt	r8, #2
   10fb0:	mov	r2, r7
   10fb4:	movw	r1, #5028	; 0x13a4
   10fb8:	mov	r0, #1
   10fbc:	movt	r1, #1
   10fc0:	bl	10b0c <__printf_chk@plt>
   10fc4:	ldr	r0, [r8]
   10fc8:	ldr	r1, [sp, #4]
   10fcc:	mov	r6, #0
   10fd0:	ldr	r2, [r5, #4]
   10fd4:	bl	10aac <print_flags@plt>
   10fd8:	ldr	r1, [r8]
   10fdc:	mov	r0, #10
   10fe0:	bl	10b3c <fputc@plt>
   10fe4:	b	10f8c <set_com_err_gettext@plt+0x420>
   10fe8:	mov	r0, r7
   10fec:	add	r1, sp, #8
   10ff0:	bl	10a34 <fgetversion@plt>
   10ff4:	cmn	r0, #1
   10ff8:	mov	r6, r0
   10ffc:	beq	11058 <set_com_err_gettext@plt+0x4ec>
   11000:	movw	r1, #5020	; 0x139c
   11004:	ldr	r2, [sp, #8]
   11008:	movt	r1, #1
   1100c:	mov	r0, #1
   11010:	bl	10b0c <__printf_chk@plt>
   11014:	b	10f50 <set_com_err_gettext@plt+0x3e4>
   11018:	movw	r3, #8324	; 0x2084
   1101c:	movt	r3, #2
   11020:	ldr	r8, [r3]
   11024:	bl	10ae8 <__errno_location@plt>
   11028:	movw	r1, #4964	; 0x1364
   1102c:	movt	r1, #1
   11030:	mov	r2, #5
   11034:	ldr	r5, [r0]
   11038:	mov	r0, #0
   1103c:	bl	10a4c <dcgettext@plt>
   11040:	mov	r3, r7
   11044:	mov	r1, r5
   11048:	mov	r2, r0
   1104c:	mov	r0, r8
   11050:	bl	10a70 <com_err@plt>
   11054:	b	10f8c <set_com_err_gettext@plt+0x420>
   11058:	movw	r3, #8324	; 0x2084
   1105c:	movt	r3, #2
   11060:	ldr	r8, [r3]
   11064:	bl	10ae8 <__errno_location@plt>
   11068:	movw	r1, #4992	; 0x1380
   1106c:	mov	r2, #5
   11070:	movt	r1, #1
   11074:	b	11034 <set_com_err_gettext@plt+0x4c8>
   11078:	bl	10a58 <__stack_chk_fail@plt>
   1107c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11080:	movw	r4, #8328	; 0x2088
   11084:	movt	r4, #2
   11088:	sub	sp, sp, #124	; 0x7c
   1108c:	add	r8, r1, #11
   11090:	mov	r7, r1
   11094:	ldr	r3, [r4]
   11098:	mov	r9, r0
   1109c:	str	r3, [sp, #116]	; 0x74
   110a0:	bl	10ad0 <strlen@plt>
   110a4:	mov	r6, r0
   110a8:	mov	r0, r8
   110ac:	bl	10ad0 <strlen@plt>
   110b0:	add	r0, r6, r0
   110b4:	add	r0, r0, #2
   110b8:	bl	10a88 <malloc@plt>
   110bc:	cmp	r6, #0
   110c0:	mov	r5, r0
   110c4:	beq	110d8 <set_com_err_gettext@plt+0x56c>
   110c8:	add	r6, r9, r6
   110cc:	ldrb	r3, [r6, #-1]
   110d0:	cmp	r3, #47	; 0x2f
   110d4:	beq	111c4 <set_com_err_gettext@plt+0x658>
   110d8:	movw	r3, #5052	; 0x13bc
   110dc:	str	r9, [sp]
   110e0:	str	r8, [sp, #4]
   110e4:	movt	r3, #1
   110e8:	mov	r0, r5
   110ec:	mov	r1, #1
   110f0:	mvn	r2, #0
   110f4:	bl	10af4 <__sprintf_chk@plt>
   110f8:	mov	r0, #3
   110fc:	mov	r1, r5
   11100:	add	r2, sp, #8
   11104:	bl	10b60 <__lxstat64@plt>
   11108:	cmn	r0, #1
   1110c:	beq	111e4 <set_com_err_gettext@plt+0x678>
   11110:	ldrb	r3, [r7, #11]
   11114:	cmp	r3, #46	; 0x2e
   11118:	beq	11158 <set_com_err_gettext@plt+0x5ec>
   1111c:	mov	r0, r5
   11120:	bl	10f0c <set_com_err_gettext@plt+0x3a0>
   11124:	ldr	r3, [sp, #24]
   11128:	and	r3, r3, #61440	; 0xf000
   1112c:	cmp	r3, #16384	; 0x4000
   11130:	beq	11170 <set_com_err_gettext@plt+0x604>
   11134:	mov	r0, r5
   11138:	bl	10a28 <free@plt>
   1113c:	ldr	r2, [sp, #116]	; 0x74
   11140:	ldr	r3, [r4]
   11144:	mov	r0, #0
   11148:	cmp	r2, r3
   1114c:	bne	11214 <set_com_err_gettext@plt+0x6a8>
   11150:	add	sp, sp, #124	; 0x7c
   11154:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11158:	movw	r3, #8352	; 0x20a0
   1115c:	movt	r3, #2
   11160:	ldr	r3, [r3, #8]
   11164:	cmp	r3, #0
   11168:	bne	1111c <set_com_err_gettext@plt+0x5b0>
   1116c:	b	11134 <set_com_err_gettext@plt+0x5c8>
   11170:	movw	r3, #8352	; 0x20a0
   11174:	movt	r3, #2
   11178:	ldr	r3, [r3, #12]
   1117c:	cmp	r3, #0
   11180:	beq	11134 <set_com_err_gettext@plt+0x5c8>
   11184:	ldrb	r3, [r7, #11]
   11188:	cmp	r3, #46	; 0x2e
   1118c:	beq	111f0 <set_com_err_gettext@plt+0x684>
   11190:	mov	r2, r5
   11194:	movw	r1, #5060	; 0x13c4
   11198:	mov	r0, #1
   1119c:	movt	r1, #1
   111a0:	bl	10b0c <__printf_chk@plt>
   111a4:	mov	r0, r5
   111a8:	mov	r2, #0
   111ac:	movw	r1, #4220	; 0x107c
   111b0:	movt	r1, #1
   111b4:	bl	10b30 <iterate_on_dir@plt>
   111b8:	mov	r0, #10
   111bc:	bl	10b00 <putchar@plt>
   111c0:	b	11134 <set_com_err_gettext@plt+0x5c8>
   111c4:	str	r9, [sp]
   111c8:	movw	r3, #5044	; 0x13b4
   111cc:	str	r8, [sp, #4]
   111d0:	movt	r3, #1
   111d4:	mov	r1, #1
   111d8:	mvn	r2, #0
   111dc:	bl	10af4 <__sprintf_chk@plt>
   111e0:	b	110f8 <set_com_err_gettext@plt+0x58c>
   111e4:	mov	r0, r5
   111e8:	bl	10a7c <perror@plt>
   111ec:	b	11134 <set_com_err_gettext@plt+0x5c8>
   111f0:	ldrb	r3, [r7, #12]
   111f4:	cmp	r3, #0
   111f8:	beq	11134 <set_com_err_gettext@plt+0x5c8>
   111fc:	cmp	r3, #46	; 0x2e
   11200:	bne	11190 <set_com_err_gettext@plt+0x624>
   11204:	ldrb	r3, [r7, #13]
   11208:	cmp	r3, #0
   1120c:	beq	11134 <set_com_err_gettext@plt+0x5c8>
   11210:	b	11190 <set_com_err_gettext@plt+0x624>
   11214:	bl	10a58 <__stack_chk_fail@plt>
   11218:	push	{r4, r5, r6, r7, r8, lr}
   1121c:	movw	r4, #8328	; 0x2088
   11220:	movt	r4, #2
   11224:	sub	sp, sp, #112	; 0x70
   11228:	mov	r1, r0
   1122c:	mov	r5, r0
   11230:	ldr	r3, [r4]
   11234:	mov	r2, sp
   11238:	mov	r0, #3
   1123c:	str	r3, [sp, #108]	; 0x6c
   11240:	bl	10b60 <__lxstat64@plt>
   11244:	cmn	r0, #1
   11248:	mov	r6, r0
   1124c:	beq	112a4 <set_com_err_gettext@plt+0x738>
   11250:	ldr	r3, [sp, #16]
   11254:	mov	r0, r5
   11258:	and	r3, r3, #61440	; 0xf000
   1125c:	cmp	r3, #16384	; 0x4000
   11260:	beq	11280 <set_com_err_gettext@plt+0x714>
   11264:	bl	10f0c <set_com_err_gettext@plt+0x3a0>
   11268:	ldr	r2, [sp, #108]	; 0x6c
   1126c:	ldr	r3, [r4]
   11270:	cmp	r2, r3
   11274:	bne	112e8 <set_com_err_gettext@plt+0x77c>
   11278:	add	sp, sp, #112	; 0x70
   1127c:	pop	{r4, r5, r6, r7, r8, pc}
   11280:	movw	r3, #8352	; 0x20a0
   11284:	movt	r3, #2
   11288:	ldr	r2, [r3, #16]
   1128c:	cmp	r2, #0
   11290:	bne	11264 <set_com_err_gettext@plt+0x6f8>
   11294:	movw	r1, #4220	; 0x107c
   11298:	movt	r1, #1
   1129c:	bl	10b30 <iterate_on_dir@plt>
   112a0:	b	11268 <set_com_err_gettext@plt+0x6fc>
   112a4:	movw	r3, #8324	; 0x2084
   112a8:	movt	r3, #2
   112ac:	ldr	r8, [r3]
   112b0:	bl	10ae8 <__errno_location@plt>
   112b4:	mov	r2, #5
   112b8:	movw	r1, #5068	; 0x13cc
   112bc:	movt	r1, #1
   112c0:	ldr	r7, [r0]
   112c4:	mov	r0, #0
   112c8:	bl	10a4c <dcgettext@plt>
   112cc:	mov	r3, r5
   112d0:	mov	r1, r7
   112d4:	mov	r2, r0
   112d8:	mov	r0, r8
   112dc:	bl	10a70 <com_err@plt>
   112e0:	mov	r0, r6
   112e4:	b	11268 <set_com_err_gettext@plt+0x6fc>
   112e8:	bl	10a58 <__stack_chk_fail@plt>
   112ec:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   112f0:	mov	r7, r0
   112f4:	ldr	r6, [pc, #76]	; 11348 <set_com_err_gettext@plt+0x7dc>
   112f8:	mov	r8, r1
   112fc:	ldr	r5, [pc, #72]	; 1134c <set_com_err_gettext@plt+0x7e0>
   11300:	mov	r9, r2
   11304:	add	r6, pc, r6
   11308:	bl	10a08 <_init@@Base>
   1130c:	add	r5, pc, r5
   11310:	rsb	r6, r5, r6
   11314:	asrs	r6, r6, #2
   11318:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1131c:	sub	r5, r5, #4
   11320:	mov	r4, #0
   11324:	add	r4, r4, #1
   11328:	ldr	r3, [r5, #4]!
   1132c:	mov	r0, r7
   11330:	mov	r1, r8
   11334:	mov	r2, r9
   11338:	blx	r3
   1133c:	cmp	r4, r6
   11340:	bne	11324 <set_com_err_gettext@plt+0x7b8>
   11344:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11348:	andeq	r0, r1, r4, ror #23
   1134c:	ldrdeq	r0, [r1], -r8
   11350:	bx	lr

Disassembly of section .fini:

00011354 <_fini@@Base>:
   11354:	push	{r3, lr}
   11358:	pop	{r3, pc}
