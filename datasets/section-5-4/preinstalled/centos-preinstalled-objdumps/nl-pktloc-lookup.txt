
centos-preinstalled/nl-pktloc-lookup:     file format elf32-littlearm


Disassembly of section .init:

000107d8 <.init>:
   107d8:	push	{r3, lr}
   107dc:	bl	10b70 <exit@plt+0x2c4>
   107e0:	pop	{r3, pc}

Disassembly of section .plt:

000107e4 <abort@plt-0x14>:
   107e4:	push	{lr}		; (str lr, [sp, #-4]!)
   107e8:	ldr	lr, [pc, #4]	; 107f4 <abort@plt-0x4>
   107ec:	add	lr, pc, lr
   107f0:	ldr	pc, [lr, #8]!
   107f4:	andeq	r1, r1, ip, lsl #16

000107f8 <abort@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2060]!	; 0x80c

00010804 <nl_cli_fatal@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2052]!	; 0x804

00010810 <__libc_start_main@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2044]!	; 0x7fc

0001081c <__gmon_start__@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2036]!	; 0x7f4

00010828 <__printf_chk@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2028]!	; 0x7ec

00010834 <nl_cli_print_version@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2020]!	; 0x7e4

00010840 <getopt_long@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #2012]!	; 0x7dc

0001084c <rtnl_pktloc_foreach@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #2004]!	; 0x7d4

00010858 <__snprintf_chk@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #1996]!	; 0x7cc

00010864 <__stack_chk_fail@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #1988]!	; 0x7c4

00010870 <puts@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #69632	; 0x11000
   10878:	ldr	pc, [ip, #1980]!	; 0x7bc

0001087c <nl_geterror@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #69632	; 0x11000
   10884:	ldr	pc, [ip, #1972]!	; 0x7b4

00010888 <nl_cli_parse_u32@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #69632	; 0x11000
   10890:	ldr	pc, [ip, #1964]!	; 0x7ac

00010894 <rtnl_pktloc_lookup@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #69632	; 0x11000
   1089c:	ldr	pc, [ip, #1956]!	; 0x7a4

000108a0 <__strcpy_chk@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #69632	; 0x11000
   108a8:	ldr	pc, [ip, #1948]!	; 0x79c

000108ac <exit@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #69632	; 0x11000
   108b4:	ldr	pc, [ip, #1940]!	; 0x794

Disassembly of section .text:

000108b8 <.text>:
   108b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108bc:	movw	r4, #8368	; 0x20b0
   108c0:	movt	r4, #2
   108c4:	sub	sp, sp, #36	; 0x24
   108c8:	mov	r5, #0
   108cc:	movw	r9, #8372	; 0x20b4
   108d0:	ldr	r3, [r4]
   108d4:	movt	r9, #2
   108d8:	add	r6, sp, #24
   108dc:	mov	r8, r0
   108e0:	mov	r7, r1
   108e4:	mov	sl, r5
   108e8:	movw	fp, #257	; 0x101
   108ec:	str	r5, [sp, #20]
   108f0:	str	r3, [sp, #28]
   108f4:	str	r6, [sp]
   108f8:	movw	r2, #4004	; 0xfa4
   108fc:	movw	r3, #8276	; 0x2054
   10900:	movt	r2, #1
   10904:	movt	r3, #2
   10908:	mov	r0, r8
   1090c:	mov	r1, r7
   10910:	str	sl, [sp, #24]
   10914:	bl	10840 <getopt_long@plt>
   10918:	cmn	r0, #1
   1091c:	beq	10998 <exit@plt+0xec>
   10920:	cmp	r0, #108	; 0x6c
   10924:	beq	10968 <exit@plt+0xbc>
   10928:	ble	10954 <exit@plt+0xa8>
   1092c:	cmp	r0, #118	; 0x76
   10930:	beq	10960 <exit@plt+0xb4>
   10934:	cmp	r0, fp
   10938:	bne	108f4 <exit@plt+0x48>
   1093c:	ldr	r0, [r9]
   10940:	mov	r3, #1
   10944:	str	r3, [sp, #20]
   10948:	bl	10888 <nl_cli_parse_u32@plt>
   1094c:	mov	r5, r0
   10950:	b	108f4 <exit@plt+0x48>
   10954:	cmp	r0, #104	; 0x68
   10958:	bne	108f4 <exit@plt+0x48>
   1095c:	bl	10c68 <exit@plt+0x3bc>
   10960:	bl	10834 <nl_cli_print_version@plt>
   10964:	b	108f4 <exit@plt+0x48>
   10968:	movw	r0, #4008	; 0xfa8
   1096c:	movt	r0, #1
   10970:	bl	10870 <puts@plt>
   10974:	movw	r0, #4076	; 0xfec
   10978:	movt	r0, #1
   1097c:	bl	10870 <puts@plt>
   10980:	movw	r0, #3320	; 0xcf8
   10984:	mov	r1, #0
   10988:	movt	r0, #1
   1098c:	bl	1084c <rtnl_pktloc_foreach@plt>
   10990:	mov	r0, #0
   10994:	bl	108ac <exit@plt>
   10998:	movw	r3, #8360	; 0x20a8
   1099c:	movt	r3, #2
   109a0:	ldr	r2, [r3]
   109a4:	cmp	r8, r2
   109a8:	ble	1095c <exit@plt+0xb0>
   109ac:	ldr	r0, [r7, r2, lsl #2]
   109b0:	mov	r1, r6
   109b4:	add	r2, r2, #1
   109b8:	str	r2, [r3]
   109bc:	bl	10894 <rtnl_pktloc_lookup@plt>
   109c0:	subs	r6, r0, #0
   109c4:	blt	10ad8 <exit@plt+0x22c>
   109c8:	ldr	r3, [sp, #20]
   109cc:	cmp	r3, #0
   109d0:	bne	10a48 <exit@plt+0x19c>
   109d4:	ldr	r5, [sp, #24]
   109d8:	ldrh	r0, [r5, #8]
   109dc:	ldr	r6, [r5]
   109e0:	bl	10c80 <exit@plt+0x3d4>
   109e4:	ldrb	lr, [r5, #4]
   109e8:	movw	ip, #3552	; 0xde0
   109ec:	movt	ip, #1
   109f0:	movw	r1, #4316	; 0x10dc
   109f4:	mov	r2, r6
   109f8:	movt	r1, #1
   109fc:	add	ip, ip, lr, lsl #2
   10a00:	ldr	ip, [ip, #20]
   10a04:	str	ip, [sp]
   10a08:	ldrh	ip, [r5, #6]
   10a0c:	str	ip, [sp, #4]
   10a10:	ldr	ip, [r5, #12]
   10a14:	str	ip, [sp, #8]
   10a18:	ldrb	ip, [r5, #5]
   10a1c:	str	ip, [sp, #12]
   10a20:	mov	r3, r0
   10a24:	mov	r0, #1
   10a28:	bl	10828 <__printf_chk@plt>
   10a2c:	ldr	r2, [sp, #28]
   10a30:	mov	r0, #0
   10a34:	ldr	r3, [r4]
   10a38:	cmp	r2, r3
   10a3c:	bne	10b30 <exit@plt+0x284>
   10a40:	add	sp, sp, #36	; 0x24
   10a44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a48:	ldr	r6, [sp, #24]
   10a4c:	ldrh	r3, [r6, #8]
   10a50:	cmp	r3, #4
   10a54:	bhi	10b1c <exit@plt+0x270>
   10a58:	ldrb	r3, [r6, #4]
   10a5c:	cmp	r3, #0
   10a60:	beq	10b08 <exit@plt+0x25c>
   10a64:	ldrb	r3, [r6, #5]
   10a68:	cmp	r3, #0
   10a6c:	bne	10af4 <exit@plt+0x248>
   10a70:	ldr	r1, [r6, #12]
   10a74:	movw	r3, #3552	; 0xde0
   10a78:	ldrh	r0, [r6, #8]
   10a7c:	movt	r3, #1
   10a80:	cmp	r1, #0
   10a84:	ldr	r2, [r3, r0, lsl #2]
   10a88:	addeq	r3, r3, r0, lsl #2
   10a8c:	ldrb	r0, [r6, #4]
   10a90:	movne	ip, r1
   10a94:	ldreq	ip, [r3, #32]
   10a98:	movw	r1, #4000	; 0xfa0
   10a9c:	cmp	r0, #2
   10aa0:	movt	r1, #1
   10aa4:	movw	r3, #3992	; 0xf98
   10aa8:	movt	r3, #1
   10aac:	str	ip, [sp]
   10ab0:	movne	r3, r1
   10ab4:	str	r3, [sp, #4]
   10ab8:	movw	r1, #4296	; 0x10c8
   10abc:	ldrh	ip, [r6, #6]
   10ac0:	mov	r3, r5
   10ac4:	movt	r1, #1
   10ac8:	mov	r0, #1
   10acc:	str	ip, [sp, #8]
   10ad0:	bl	10828 <__printf_chk@plt>
   10ad4:	b	10a2c <exit@plt+0x180>
   10ad8:	bl	1087c <nl_geterror@plt>
   10adc:	movw	r1, #4136	; 0x1028
   10ae0:	movt	r1, #1
   10ae4:	mov	r2, r0
   10ae8:	mov	r0, r6
   10aec:	bl	10804 <nl_cli_fatal@plt>
   10af0:	b	109c8 <exit@plt+0x11c>
   10af4:	movw	r1, #4264	; 0x10a8
   10af8:	mov	r0, #22
   10afc:	movt	r1, #1
   10b00:	bl	10804 <nl_cli_fatal@plt>
   10b04:	b	10a70 <exit@plt+0x1c4>
   10b08:	movw	r1, #4220	; 0x107c
   10b0c:	mov	r0, #22
   10b10:	movt	r1, #1
   10b14:	bl	10804 <nl_cli_fatal@plt>
   10b18:	b	10a64 <exit@plt+0x1b8>
   10b1c:	movw	r1, #4176	; 0x1050
   10b20:	mov	r0, #22
   10b24:	movt	r1, #1
   10b28:	bl	10804 <nl_cli_fatal@plt>
   10b2c:	b	10a58 <exit@plt+0x1ac>
   10b30:	bl	10864 <__stack_chk_fail@plt>
   10b34:	mov	fp, #0
   10b38:	mov	lr, #0
   10b3c:	pop	{r1}		; (ldr r1, [sp], #4)
   10b40:	mov	r2, sp
   10b44:	push	{r2}		; (str r2, [sp, #-4]!)
   10b48:	push	{r0}		; (str r0, [sp, #-4]!)
   10b4c:	ldr	ip, [pc, #16]	; 10b64 <exit@plt+0x2b8>
   10b50:	push	{ip}		; (str ip, [sp, #-4]!)
   10b54:	ldr	r0, [pc, #12]	; 10b68 <exit@plt+0x2bc>
   10b58:	ldr	r3, [pc, #12]	; 10b6c <exit@plt+0x2c0>
   10b5c:	bl	10810 <__libc_start_main@plt>
   10b60:	bl	107f8 <abort@plt>
   10b64:	andeq	r0, r1, ip, asr #27
   10b68:			; <UNDEFINED> instruction: 0x000108b8
   10b6c:	andeq	r0, r1, r8, ror #26
   10b70:	ldr	r3, [pc, #20]	; 10b8c <exit@plt+0x2e0>
   10b74:	ldr	r2, [pc, #20]	; 10b90 <exit@plt+0x2e4>
   10b78:	add	r3, pc, r3
   10b7c:	ldr	r2, [r3, r2]
   10b80:	cmp	r2, #0
   10b84:	bxeq	lr
   10b88:	b	1081c <__gmon_start__@plt>
   10b8c:	andeq	r1, r1, r0, lsl #9
   10b90:	andeq	r0, r0, ip, asr #32
   10b94:	push	{r3, lr}
   10b98:	movw	r0, #8356	; 0x20a4
   10b9c:	ldr	r3, [pc, #36]	; 10bc8 <exit@plt+0x31c>
   10ba0:	movt	r0, #2
   10ba4:	rsb	r3, r0, r3
   10ba8:	cmp	r3, #6
   10bac:	popls	{r3, pc}
   10bb0:	movw	r3, #0
   10bb4:	movt	r3, #0
   10bb8:	cmp	r3, #0
   10bbc:	popeq	{r3, pc}
   10bc0:	blx	r3
   10bc4:	pop	{r3, pc}
   10bc8:	andeq	r2, r2, r7, lsr #1
   10bcc:	push	{r3, lr}
   10bd0:	movw	r0, #8356	; 0x20a4
   10bd4:	movw	r3, #8356	; 0x20a4
   10bd8:	movt	r0, #2
   10bdc:	movt	r3, #2
   10be0:	rsb	r3, r0, r3
   10be4:	asr	r3, r3, #2
   10be8:	add	r3, r3, r3, lsr #31
   10bec:	asrs	r1, r3, #1
   10bf0:	popeq	{r3, pc}
   10bf4:	movw	r2, #0
   10bf8:	movt	r2, #0
   10bfc:	cmp	r2, #0
   10c00:	popeq	{r3, pc}
   10c04:	blx	r2
   10c08:	pop	{r3, pc}
   10c0c:	push	{r4, lr}
   10c10:	movw	r4, #8376	; 0x20b8
   10c14:	movt	r4, #2
   10c18:	ldrb	r3, [r4]
   10c1c:	cmp	r3, #0
   10c20:	popne	{r4, pc}
   10c24:	bl	10b94 <exit@plt+0x2e8>
   10c28:	mov	r3, #1
   10c2c:	strb	r3, [r4]
   10c30:	pop	{r4, pc}
   10c34:	movw	r0, #7868	; 0x1ebc
   10c38:	movt	r0, #2
   10c3c:	push	{r3, lr}
   10c40:	ldr	r3, [r0]
   10c44:	cmp	r3, #0
   10c48:	beq	10c60 <exit@plt+0x3b4>
   10c4c:	movw	r3, #0
   10c50:	movt	r3, #0
   10c54:	cmp	r3, #0
   10c58:	beq	10c60 <exit@plt+0x3b4>
   10c5c:	blx	r3
   10c60:	pop	{r3, lr}
   10c64:	b	10bcc <exit@plt+0x320>
   10c68:	push	{r3, lr}
   10c6c:	movw	r0, #3604	; 0xe14
   10c70:	movt	r0, #1
   10c74:	bl	10870 <puts@plt>
   10c78:	mov	r0, #0
   10c7c:	bl	108ac <exit@plt>
   10c80:	cmp	r0, #4
   10c84:	mov	r3, r0
   10c88:	push	{lr}		; (str lr, [sp, #-4]!)
   10c8c:	sub	sp, sp, #12
   10c90:	bls	10ccc <exit@plt+0x420>
   10c94:	mov	r1, #16
   10c98:	str	r0, [sp, #4]
   10c9c:	mov	r3, r1
   10ca0:	movw	r2, #3952	; 0xf70
   10ca4:	movw	r0, #8380	; 0x20bc
   10ca8:	movt	r2, #1
   10cac:	movt	r0, #2
   10cb0:	str	r2, [sp]
   10cb4:	mov	r2, #1
   10cb8:	bl	10858 <__snprintf_chk@plt>
   10cbc:	movw	r0, #8380	; 0x20bc
   10cc0:	movt	r0, #2
   10cc4:	add	sp, sp, #12
   10cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   10ccc:	movw	r1, #3552	; 0xde0
   10cd0:	movt	r1, #1
   10cd4:	mov	r2, #16
   10cd8:	movw	r0, #8380	; 0x20bc
   10cdc:	ldr	r1, [r1, r3, lsl #2]
   10ce0:	movt	r0, #2
   10ce4:	bl	108a0 <__strcpy_chk@plt>
   10ce8:	movw	r0, #8380	; 0x20bc
   10cec:	movt	r0, #2
   10cf0:	add	sp, sp, #12
   10cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   10cf8:	push	{r4, r5, lr}
   10cfc:	mov	r4, r0
   10d00:	sub	sp, sp, #28
   10d04:	ldrh	r0, [r0, #8]
   10d08:	ldr	r5, [r4]
   10d0c:	bl	10c80 <exit@plt+0x3d4>
   10d10:	ldrb	lr, [r4, #4]
   10d14:	movw	ip, #3552	; 0xde0
   10d18:	movt	ip, #1
   10d1c:	movw	r1, #3956	; 0xf74
   10d20:	mov	r2, r5
   10d24:	movt	r1, #1
   10d28:	add	ip, ip, lr, lsl #2
   10d2c:	ldr	ip, [ip, #20]
   10d30:	str	ip, [sp]
   10d34:	ldrh	ip, [r4, #6]
   10d38:	str	ip, [sp, #4]
   10d3c:	ldr	ip, [r4, #12]
   10d40:	str	ip, [sp, #8]
   10d44:	ldrb	ip, [r4, #5]
   10d48:	str	ip, [sp, #12]
   10d4c:	ldr	ip, [r4, #16]
   10d50:	str	ip, [sp, #16]
   10d54:	mov	r3, r0
   10d58:	mov	r0, #1
   10d5c:	bl	10828 <__printf_chk@plt>
   10d60:	add	sp, sp, #28
   10d64:	pop	{r4, r5, pc}
   10d68:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10d6c:	mov	r7, r0
   10d70:	ldr	r6, [pc, #76]	; 10dc4 <exit@plt+0x518>
   10d74:	mov	r8, r1
   10d78:	ldr	r5, [pc, #72]	; 10dc8 <exit@plt+0x51c>
   10d7c:	mov	r9, r2
   10d80:	add	r6, pc, r6
   10d84:	bl	107d8 <abort@plt-0x20>
   10d88:	add	r5, pc, r5
   10d8c:	rsb	r6, r5, r6
   10d90:	asrs	r6, r6, #2
   10d94:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10d98:	sub	r5, r5, #4
   10d9c:	mov	r4, #0
   10da0:	add	r4, r4, #1
   10da4:	ldr	r3, [r5, #4]!
   10da8:	mov	r0, r7
   10dac:	mov	r1, r8
   10db0:	mov	r2, r9
   10db4:	blx	r3
   10db8:	cmp	r4, r6
   10dbc:	bne	10da0 <exit@plt+0x4f4>
   10dc0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10dc4:	andeq	r1, r1, r0, lsr r1
   10dc8:	andeq	r1, r1, r4, lsr #2
   10dcc:	bx	lr

Disassembly of section .fini:

00010dd0 <.fini>:
   10dd0:	push	{r3, lr}
   10dd4:	pop	{r3, pc}
