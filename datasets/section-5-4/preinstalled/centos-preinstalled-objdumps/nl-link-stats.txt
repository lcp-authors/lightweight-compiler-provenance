
centos-preinstalled/nl-link-stats:     file format elf32-littlearm


Disassembly of section .init:

000108fc <.init>:
   108fc:	push	{r3, lr}
   10900:	bl	10bc8 <exit@plt+0x1bc>
   10904:	pop	{r3, pc}

Disassembly of section .plt:

00010908 <rtnl_link_get_name@plt-0x14>:
   10908:	push	{lr}		; (str lr, [sp, #-4]!)
   1090c:	ldr	lr, [pc, #4]	; 10918 <rtnl_link_get_name@plt-0x4>
   10910:	add	lr, pc, lr
   10914:	ldr	pc, [lr, #8]!
   10918:	andeq	r1, r1, r8, ror #13

0001091c <rtnl_link_get_name@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1768]!	; 0x6e8

00010928 <abort@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1760]!	; 0x6e0

00010934 <nl_cache_foreach_filter@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1752]!	; 0x6d8

00010940 <__libc_start_main@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1744]!	; 0x6d0

0001094c <__gmon_start__@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1736]!	; 0x6c8

00010958 <rtnl_link_str2stat@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #69632	; 0x11000
   10960:	ldr	pc, [ip, #1728]!	; 0x6c0

00010964 <__printf_chk@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #69632	; 0x11000
   1096c:	ldr	pc, [ip, #1720]!	; 0x6b8

00010970 <nl_cli_print_version@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #69632	; 0x11000
   10978:	ldr	pc, [ip, #1712]!	; 0x6b0

0001097c <nl_cli_alloc_socket@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #69632	; 0x11000
   10984:	ldr	pc, [ip, #1704]!	; 0x6a8

00010988 <nl_cli_link_parse_name@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #69632	; 0x11000
   10990:	ldr	pc, [ip, #1696]!	; 0x6a0

00010994 <getopt_long@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1688]!	; 0x698

000109a0 <nl_cli_link_alloc_cache@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1680]!	; 0x690

000109ac <rtnl_link_get_stat@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1672]!	; 0x688

000109b8 <rtnl_link_stat2str@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1664]!	; 0x680

000109c4 <__stack_chk_fail@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1656]!	; 0x678

000109d0 <nl_cli_link_parse_ifindex@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1648]!	; 0x670

000109dc <__fprintf_chk@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1640]!	; 0x668

000109e8 <puts@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1632]!	; 0x660

000109f4 <nl_cli_connect@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1624]!	; 0x658

00010a00 <nl_cli_link_alloc@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #69632	; 0x11000
   10a08:	ldr	pc, [ip, #1616]!	; 0x650

00010a0c <exit@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #69632	; 0x11000
   10a14:	ldr	pc, [ip, #1608]!	; 0x648

Disassembly of section .text:

00010a18 <.text>:
   10a18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a1c:	movw	r4, #8400	; 0x20d0
   10a20:	movt	r4, #2
   10a24:	sub	sp, sp, #84	; 0x54
   10a28:	mov	r6, r1
   10a2c:	mov	r5, r0
   10a30:	ldr	r3, [r4]
   10a34:	mov	r7, #0
   10a38:	movw	r8, #8412	; 0x20dc
   10a3c:	add	r9, sp, #8
   10a40:	movt	r8, #2
   10a44:	str	r3, [sp, #76]	; 0x4c
   10a48:	bl	1097c <nl_cli_alloc_socket@plt>
   10a4c:	mov	r1, r7
   10a50:	mov	sl, r0
   10a54:	bl	109f4 <nl_cli_connect@plt>
   10a58:	mov	r0, sl
   10a5c:	bl	109a0 <nl_cli_link_alloc_cache@plt>
   10a60:	mov	fp, r0
   10a64:	bl	10a00 <nl_cli_link_alloc@plt>
   10a68:	mov	sl, r0
   10a6c:	str	r9, [sp]
   10a70:	movw	r2, #3728	; 0xe90
   10a74:	movw	r3, #8296	; 0x2068
   10a78:	movt	r2, #1
   10a7c:	movt	r3, #2
   10a80:	mov	r0, r5
   10a84:	mov	r1, r6
   10a88:	str	r7, [sp, #8]
   10a8c:	bl	10994 <getopt_long@plt>
   10a90:	cmn	r0, #1
   10a94:	beq	10b48 <exit@plt+0x13c>
   10a98:	sub	r0, r0, #104	; 0x68
   10a9c:	cmp	r0, #14
   10aa0:	ldrls	pc, [pc, r0, lsl #2]
   10aa4:	b	10a6c <exit@plt+0x60>
   10aa8:	andeq	r0, r1, r4, lsr fp
   10aac:	andeq	r0, r1, r4, lsr #22
   10ab0:	andeq	r0, r1, ip, ror #20
   10ab4:	andeq	r0, r1, ip, ror #20
   10ab8:	strdeq	r0, [r1], -ip
   10abc:	andeq	r0, r1, ip, ror #20
   10ac0:	andeq	r0, r1, ip, ror #21
   10ac4:	andeq	r0, r1, ip, ror #20
   10ac8:	andeq	r0, r1, ip, ror #20
   10acc:	andeq	r0, r1, ip, ror #20
   10ad0:	andeq	r0, r1, ip, ror #20
   10ad4:	andeq	r0, r1, ip, ror #20
   10ad8:	andeq	r0, r1, ip, ror #20
   10adc:	andeq	r0, r1, ip, ror #20
   10ae0:	andeq	r0, r1, r4, ror #21
   10ae4:	bl	10970 <nl_cli_print_version@plt>
   10ae8:	b	10a6c <exit@plt+0x60>
   10aec:	mov	r0, sl
   10af0:	ldr	r1, [r8]
   10af4:	bl	10988 <nl_cli_link_parse_name@plt>
   10af8:	b	10a6c <exit@plt+0x60>
   10afc:	mov	r4, #0
   10b00:	mov	r0, r4
   10b04:	add	r1, sp, #12
   10b08:	mov	r2, #64	; 0x40
   10b0c:	add	r4, r4, #1
   10b10:	bl	109b8 <rtnl_link_stat2str@plt>
   10b14:	bl	109e8 <puts@plt>
   10b18:	cmp	r4, #62	; 0x3e
   10b1c:	bne	10b00 <exit@plt+0xf4>
   10b20:	b	10b40 <exit@plt+0x134>
   10b24:	mov	r0, sl
   10b28:	ldr	r1, [r8]
   10b2c:	bl	109d0 <nl_cli_link_parse_ifindex@plt>
   10b30:	b	10a6c <exit@plt+0x60>
   10b34:	movw	r0, #3736	; 0xe98
   10b38:	movt	r0, #1
   10b3c:	bl	109e8 <puts@plt>
   10b40:	mov	r0, #0
   10b44:	bl	10a0c <exit@plt>
   10b48:	movw	ip, #8420	; 0x20e4
   10b4c:	movt	ip, #2
   10b50:	mov	r0, fp
   10b54:	mov	r3, r6
   10b58:	mov	r1, sl
   10b5c:	movw	r2, #3392	; 0xd40
   10b60:	movt	r2, #1
   10b64:	str	r5, [ip]
   10b68:	bl	10934 <nl_cache_foreach_filter@plt>
   10b6c:	ldr	r2, [sp, #76]	; 0x4c
   10b70:	ldr	r3, [r4]
   10b74:	mov	r0, #0
   10b78:	cmp	r2, r3
   10b7c:	bne	10b88 <exit@plt+0x17c>
   10b80:	add	sp, sp, #84	; 0x54
   10b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b88:	bl	109c4 <__stack_chk_fail@plt>
   10b8c:	mov	fp, #0
   10b90:	mov	lr, #0
   10b94:	pop	{r1}		; (ldr r1, [sp], #4)
   10b98:	mov	r2, sp
   10b9c:	push	{r2}		; (str r2, [sp, #-4]!)
   10ba0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ba4:	ldr	ip, [pc, #16]	; 10bbc <exit@plt+0x1b0>
   10ba8:	push	{ip}		; (str ip, [sp, #-4]!)
   10bac:	ldr	r0, [pc, #12]	; 10bc0 <exit@plt+0x1b4>
   10bb0:	ldr	r3, [pc, #12]	; 10bc4 <exit@plt+0x1b8>
   10bb4:	bl	10940 <__libc_start_main@plt>
   10bb8:	bl	10928 <abort@plt>
   10bbc:	andeq	r0, r1, ip, asr #28
   10bc0:	andeq	r0, r1, r8, lsl sl
   10bc4:	andeq	r0, r1, r8, ror #27
   10bc8:	ldr	r3, [pc, #20]	; 10be4 <exit@plt+0x1d8>
   10bcc:	ldr	r2, [pc, #20]	; 10be8 <exit@plt+0x1dc>
   10bd0:	add	r3, pc, r3
   10bd4:	ldr	r2, [r3, r2]
   10bd8:	cmp	r2, #0
   10bdc:	bxeq	lr
   10be0:	b	1094c <__gmon_start__@plt>
   10be4:	andeq	r1, r1, r8, lsr #8
   10be8:	andeq	r0, r0, r0, rrx
   10bec:	push	{r3, lr}
   10bf0:	movw	r0, #8392	; 0x20c8
   10bf4:	ldr	r3, [pc, #36]	; 10c20 <exit@plt+0x214>
   10bf8:	movt	r0, #2
   10bfc:	rsb	r3, r0, r3
   10c00:	cmp	r3, #6
   10c04:	popls	{r3, pc}
   10c08:	movw	r3, #0
   10c0c:	movt	r3, #0
   10c10:	cmp	r3, #0
   10c14:	popeq	{r3, pc}
   10c18:	blx	r3
   10c1c:	pop	{r3, pc}
   10c20:	andeq	r2, r2, fp, asr #1
   10c24:	push	{r3, lr}
   10c28:	movw	r0, #8392	; 0x20c8
   10c2c:	movw	r3, #8392	; 0x20c8
   10c30:	movt	r0, #2
   10c34:	movt	r3, #2
   10c38:	rsb	r3, r0, r3
   10c3c:	asr	r3, r3, #2
   10c40:	add	r3, r3, r3, lsr #31
   10c44:	asrs	r1, r3, #1
   10c48:	popeq	{r3, pc}
   10c4c:	movw	r2, #0
   10c50:	movt	r2, #0
   10c54:	cmp	r2, #0
   10c58:	popeq	{r3, pc}
   10c5c:	blx	r2
   10c60:	pop	{r3, pc}
   10c64:	push	{r4, lr}
   10c68:	movw	r4, #8416	; 0x20e0
   10c6c:	movt	r4, #2
   10c70:	ldrb	r3, [r4]
   10c74:	cmp	r3, #0
   10c78:	popne	{r4, pc}
   10c7c:	bl	10bec <exit@plt+0x1e0>
   10c80:	mov	r3, #1
   10c84:	strb	r3, [r4]
   10c88:	pop	{r4, pc}
   10c8c:	movw	r0, #7868	; 0x1ebc
   10c90:	movt	r0, #2
   10c94:	push	{r3, lr}
   10c98:	ldr	r3, [r0]
   10c9c:	cmp	r3, #0
   10ca0:	beq	10cb8 <exit@plt+0x2ac>
   10ca4:	movw	r3, #0
   10ca8:	movt	r3, #0
   10cac:	cmp	r3, #0
   10cb0:	beq	10cb8 <exit@plt+0x2ac>
   10cb4:	blx	r3
   10cb8:	pop	{r3, lr}
   10cbc:	b	10c24 <exit@plt+0x218>
   10cc0:	push	{r4, r5, r6, r7, r8, lr}
   10cc4:	movw	r6, #8400	; 0x20d0
   10cc8:	movt	r6, #2
   10ccc:	sub	sp, sp, #80	; 0x50
   10cd0:	mov	r7, r0
   10cd4:	mov	r8, r1
   10cd8:	ldr	r3, [r6]
   10cdc:	str	r3, [sp, #76]	; 0x4c
   10ce0:	bl	109ac <rtnl_link_get_stat@plt>
   10ce4:	mov	r4, r0
   10ce8:	mov	r0, r7
   10cec:	mov	r5, r1
   10cf0:	bl	1091c <rtnl_link_get_name@plt>
   10cf4:	add	r1, sp, #12
   10cf8:	mov	r2, #64	; 0x40
   10cfc:	mov	r7, r0
   10d00:	mov	r0, r8
   10d04:	bl	109b8 <rtnl_link_stat2str@plt>
   10d08:	mov	r2, r7
   10d0c:	strd	r4, [sp]
   10d10:	movw	r1, #3680	; 0xe60
   10d14:	movt	r1, #1
   10d18:	mov	r3, r0
   10d1c:	mov	r0, #1
   10d20:	bl	10964 <__printf_chk@plt>
   10d24:	ldr	r2, [sp, #76]	; 0x4c
   10d28:	ldr	r3, [r6]
   10d2c:	cmp	r2, r3
   10d30:	bne	10d3c <exit@plt+0x330>
   10d34:	add	sp, sp, #80	; 0x50
   10d38:	pop	{r4, r5, r6, r7, r8, pc}
   10d3c:	bl	109c4 <__stack_chk_fail@plt>
   10d40:	push	{r4, r5, r6, r7, r8, lr}
   10d44:	movw	r4, #8392	; 0x20c8
   10d48:	movw	r6, #8420	; 0x20e4
   10d4c:	movt	r4, #2
   10d50:	movt	r6, #2
   10d54:	mov	r5, r0
   10d58:	ldr	r3, [r4]
   10d5c:	mov	r7, r1
   10d60:	ldr	r2, [r6]
   10d64:	cmp	r3, r2
   10d68:	bge	10dc8 <exit@plt+0x3bc>
   10d6c:	movw	r8, #8408	; 0x20d8
   10d70:	movt	r8, #2
   10d74:	b	10d94 <exit@plt+0x388>
   10d78:	bl	10cc0 <exit@plt+0x2b4>
   10d7c:	ldr	r3, [r4]
   10d80:	ldr	r2, [r6]
   10d84:	add	r3, r3, #1
   10d88:	str	r3, [r4]
   10d8c:	cmp	r3, r2
   10d90:	popge	{r4, r5, r6, r7, r8, pc}
   10d94:	ldr	r0, [r7, r3, lsl #2]
   10d98:	bl	10958 <rtnl_link_str2stat@plt>
   10d9c:	subs	r1, r0, #0
   10da0:	mov	r0, r5
   10da4:	bge	10d78 <exit@plt+0x36c>
   10da8:	ldr	r3, [r4]
   10dac:	movw	r2, #3692	; 0xe6c
   10db0:	ldr	r0, [r8]
   10db4:	movt	r2, #1
   10db8:	mov	r1, #1
   10dbc:	ldr	r3, [r7, r3, lsl #2]
   10dc0:	bl	109dc <__fprintf_chk@plt>
   10dc4:	b	10d7c <exit@plt+0x370>
   10dc8:	mov	r4, #0
   10dcc:	mov	r1, r4
   10dd0:	mov	r0, r5
   10dd4:	add	r4, r4, #1
   10dd8:	bl	10cc0 <exit@plt+0x2b4>
   10ddc:	cmp	r4, #62	; 0x3e
   10de0:	bne	10dcc <exit@plt+0x3c0>
   10de4:	pop	{r4, r5, r6, r7, r8, pc}
   10de8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10dec:	mov	r7, r0
   10df0:	ldr	r6, [pc, #76]	; 10e44 <exit@plt+0x438>
   10df4:	mov	r8, r1
   10df8:	ldr	r5, [pc, #72]	; 10e48 <exit@plt+0x43c>
   10dfc:	mov	r9, r2
   10e00:	add	r6, pc, r6
   10e04:	bl	108fc <rtnl_link_get_name@plt-0x20>
   10e08:	add	r5, pc, r5
   10e0c:	rsb	r6, r5, r6
   10e10:	asrs	r6, r6, #2
   10e14:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10e18:	sub	r5, r5, #4
   10e1c:	mov	r4, #0
   10e20:	add	r4, r4, #1
   10e24:	ldr	r3, [r5, #4]!
   10e28:	mov	r0, r7
   10e2c:	mov	r1, r8
   10e30:	mov	r2, r9
   10e34:	blx	r3
   10e38:	cmp	r4, r6
   10e3c:	bne	10e20 <exit@plt+0x414>
   10e40:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10e44:	strheq	r1, [r1], -r0
   10e48:	andeq	r1, r1, r4, lsr #1
   10e4c:	bx	lr

Disassembly of section .fini:

00010e50 <.fini>:
   10e50:	push	{r3, lr}
   10e54:	pop	{r3, pc}
