
centos-preinstalled/nl-route-list:     file format elf32-littlearm


Disassembly of section .init:

00010a2c <.init>:
   10a2c:	push	{r3, lr}
   10a30:	bl	10e68 <exit@plt+0x2e4>
   10a34:	pop	{r3, pc}

Disassembly of section .plt:

00010a38 <abort@plt-0x14>:
   10a38:	push	{lr}		; (str lr, [sp, #-4]!)
   10a3c:	ldr	lr, [pc, #4]	; 10a48 <abort@plt-0x4>
   10a40:	add	lr, pc, lr
   10a44:	ldr	pc, [lr, #8]!
   10a48:			; <UNDEFINED> instruction: 0x000115b8

00010a4c <abort@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a58 <nl_cache_dump_filter@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a64 <__libc_start_main@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a70 <__gmon_start__@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a7c <nl_cli_route_parse_pref_src@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1432]!	; 0x598

00010a88 <nl_cli_print_version@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1424]!	; 0x590

00010a94 <nl_cli_route_parse_family@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1416]!	; 0x588

00010aa0 <nl_cli_alloc_socket@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1408]!	; 0x580

00010aac <getopt_long@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1400]!	; 0x578

00010ab8 <nl_cli_route_parse_prio@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1392]!	; 0x570

00010ac4 <nl_cli_parse_dumptype@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1384]!	; 0x568

00010ad0 <nl_cli_route_parse_scope@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1376]!	; 0x560

00010adc <nl_cli_route_parse_protocol@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #69632	; 0x11000
   10ae4:	ldr	pc, [ip, #1368]!	; 0x558

00010ae8 <nl_cli_route_parse_nexthop@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #69632	; 0x11000
   10af0:	ldr	pc, [ip, #1360]!	; 0x550

00010af4 <nl_cli_link_alloc_cache@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #69632	; 0x11000
   10afc:	ldr	pc, [ip, #1352]!	; 0x548

00010b00 <__stack_chk_fail@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1344]!	; 0x540

00010b0c <nl_cli_route_parse_type@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1336]!	; 0x538

00010b18 <nl_cli_route_parse_dst@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1328]!	; 0x530

00010b24 <nl_cli_route_parse_metric@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1320]!	; 0x528

00010b30 <nl_cli_route_alloc@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1312]!	; 0x520

00010b3c <puts@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1304]!	; 0x518

00010b48 <nl_cli_route_parse_table@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1296]!	; 0x510

00010b54 <nl_cli_route_parse_iif@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1288]!	; 0x508

00010b60 <nl_cli_connect@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1280]!	; 0x500

00010b6c <nl_cli_route_parse_src@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b78 <nl_cli_route_alloc_cache@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b84 <exit@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1256]!	; 0x4e8

Disassembly of section .text:

00010b90 <.text>:
   10b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b94:	movw	r2, #8592	; 0x2190
   10b98:	sub	sp, sp, #92	; 0x5c
   10b9c:	movt	r2, #2
   10ba0:	movw	r3, #8596	; 0x2194
   10ba4:	movt	r3, #2
   10ba8:	str	r2, [sp, #8]
   10bac:	mov	sl, #0
   10bb0:	ldr	r2, [r2]
   10bb4:	mov	r6, r1
   10bb8:	ldr	r3, [r3]
   10bbc:	mov	r7, r0
   10bc0:	str	sl, [sp, #12]
   10bc4:	movw	r9, #8600	; 0x2198
   10bc8:	str	r2, [sp, #84]	; 0x54
   10bcc:	movt	r9, #2
   10bd0:	str	r3, [sp, #60]	; 0x3c
   10bd4:	add	r5, sp, #28
   10bd8:	str	sl, [sp, #32]
   10bdc:	mov	r4, sl
   10be0:	str	sl, [sp, #36]	; 0x24
   10be4:	movw	r8, #257	; 0x101
   10be8:	str	sl, [sp, #40]	; 0x28
   10bec:	movw	fp, #261	; 0x105
   10bf0:	str	sl, [sp, #44]	; 0x2c
   10bf4:	str	sl, [sp, #48]	; 0x30
   10bf8:	str	sl, [sp, #52]	; 0x34
   10bfc:	str	sl, [sp, #56]	; 0x38
   10c00:	str	sl, [sp, #64]	; 0x40
   10c04:	str	sl, [sp, #68]	; 0x44
   10c08:	str	sl, [sp, #72]	; 0x48
   10c0c:	str	sl, [sp, #76]	; 0x4c
   10c10:	str	sl, [sp, #80]	; 0x50
   10c14:	bl	10aa0 <nl_cli_alloc_socket@plt>
   10c18:	mov	r1, sl
   10c1c:	str	r0, [sp, #16]
   10c20:	bl	10b60 <nl_cli_connect@plt>
   10c24:	ldr	r0, [sp, #16]
   10c28:	bl	10af4 <nl_cli_link_alloc_cache@plt>
   10c2c:	str	r0, [sp, #20]
   10c30:	bl	10b30 <nl_cli_route_alloc@plt>
   10c34:	mov	sl, r0
   10c38:	str	r5, [sp]
   10c3c:	movw	r2, #4056	; 0xfd8
   10c40:	movw	r3, #8320	; 0x2080
   10c44:	movt	r2, #1
   10c48:	movt	r3, #2
   10c4c:	mov	r0, r7
   10c50:	mov	r1, r6
   10c54:	str	r4, [sp, #28]
   10c58:	bl	10aac <getopt_long@plt>
   10c5c:	cmn	r0, #1
   10c60:	beq	10df0 <exit@plt+0x26c>
   10c64:	cmp	r0, r8
   10c68:	beq	10db0 <exit@plt+0x22c>
   10c6c:	ble	10cb0 <exit@plt+0x12c>
   10c70:	cmp	r0, fp
   10c74:	beq	10d80 <exit@plt+0x1fc>
   10c78:	ble	10d0c <exit@plt+0x188>
   10c7c:	movw	r3, #263	; 0x107
   10c80:	cmp	r0, r3
   10c84:	beq	10da0 <exit@plt+0x21c>
   10c88:	blt	10d90 <exit@plt+0x20c>
   10c8c:	cmp	r0, #264	; 0x108
   10c90:	beq	10dc0 <exit@plt+0x23c>
   10c94:	add	r3, r3, #2
   10c98:	cmp	r0, r3
   10c9c:	bne	10c38 <exit@plt+0xb4>
   10ca0:	mov	r0, sl
   10ca4:	ldr	r1, [r9]
   10ca8:	bl	10b0c <nl_cli_route_parse_type@plt>
   10cac:	b	10c38 <exit@plt+0xb4>
   10cb0:	cmp	r0, #104	; 0x68
   10cb4:	beq	10d40 <exit@plt+0x1bc>
   10cb8:	bgt	10ce0 <exit@plt+0x15c>
   10cbc:	cmp	r0, #100	; 0x64
   10cc0:	beq	10de0 <exit@plt+0x25c>
   10cc4:	cmp	r0, #102	; 0x66
   10cc8:	beq	10dd0 <exit@plt+0x24c>
   10ccc:	ldr	r3, [sp, #12]
   10cd0:	cmp	r0, #99	; 0x63
   10cd4:	moveq	r3, #1
   10cd8:	str	r3, [sp, #12]
   10cdc:	b	10c38 <exit@plt+0xb4>
   10ce0:	cmp	r0, #116	; 0x74
   10ce4:	beq	10d30 <exit@plt+0x1ac>
   10ce8:	cmp	r0, #118	; 0x76
   10cec:	beq	10d78 <exit@plt+0x1f4>
   10cf0:	cmp	r0, #110	; 0x6e
   10cf4:	bne	10c38 <exit@plt+0xb4>
   10cf8:	mov	r0, sl
   10cfc:	ldr	r1, [r9]
   10d00:	ldr	r2, [sp, #20]
   10d04:	bl	10ae8 <nl_cli_route_parse_nexthop@plt>
   10d08:	b	10c38 <exit@plt+0xb4>
   10d0c:	movw	r3, #259	; 0x103
   10d10:	cmp	r0, r3
   10d14:	beq	10d64 <exit@plt+0x1e0>
   10d18:	cmp	r0, #260	; 0x104
   10d1c:	bge	10d54 <exit@plt+0x1d0>
   10d20:	mov	r0, sl
   10d24:	ldr	r1, [r9]
   10d28:	bl	10b6c <nl_cli_route_parse_src@plt>
   10d2c:	b	10c38 <exit@plt+0xb4>
   10d30:	mov	r0, sl
   10d34:	ldr	r1, [r9]
   10d38:	bl	10b48 <nl_cli_route_parse_table@plt>
   10d3c:	b	10c38 <exit@plt+0xb4>
   10d40:	movw	r0, #4068	; 0xfe4
   10d44:	movt	r0, #1
   10d48:	bl	10b3c <puts@plt>
   10d4c:	mov	r0, #0
   10d50:	bl	10b84 <exit@plt>
   10d54:	mov	r0, sl
   10d58:	ldr	r1, [r9]
   10d5c:	bl	10a7c <nl_cli_route_parse_pref_src@plt>
   10d60:	b	10c38 <exit@plt+0xb4>
   10d64:	mov	r0, sl
   10d68:	ldr	r1, [r9]
   10d6c:	ldr	r2, [sp, #20]
   10d70:	bl	10b54 <nl_cli_route_parse_iif@plt>
   10d74:	b	10c38 <exit@plt+0xb4>
   10d78:	bl	10a88 <nl_cli_print_version@plt>
   10d7c:	b	10c38 <exit@plt+0xb4>
   10d80:	mov	r0, sl
   10d84:	ldr	r1, [r9]
   10d88:	bl	10b24 <nl_cli_route_parse_metric@plt>
   10d8c:	b	10c38 <exit@plt+0xb4>
   10d90:	mov	r0, sl
   10d94:	ldr	r1, [r9]
   10d98:	bl	10ab8 <nl_cli_route_parse_prio@plt>
   10d9c:	b	10c38 <exit@plt+0xb4>
   10da0:	mov	r0, sl
   10da4:	ldr	r1, [r9]
   10da8:	bl	10ad0 <nl_cli_route_parse_scope@plt>
   10dac:	b	10c38 <exit@plt+0xb4>
   10db0:	mov	r0, sl
   10db4:	ldr	r1, [r9]
   10db8:	bl	10a94 <nl_cli_route_parse_family@plt>
   10dbc:	b	10c38 <exit@plt+0xb4>
   10dc0:	mov	r0, sl
   10dc4:	ldr	r1, [r9]
   10dc8:	bl	10adc <nl_cli_route_parse_protocol@plt>
   10dcc:	b	10c38 <exit@plt+0xb4>
   10dd0:	ldr	r0, [r9]
   10dd4:	bl	10ac4 <nl_cli_parse_dumptype@plt>
   10dd8:	str	r0, [sp, #32]
   10ddc:	b	10c38 <exit@plt+0xb4>
   10de0:	mov	r0, sl
   10de4:	ldr	r1, [r9]
   10de8:	bl	10b18 <nl_cli_route_parse_dst@plt>
   10dec:	b	10c38 <exit@plt+0xb4>
   10df0:	ldr	r1, [sp, #12]
   10df4:	ldr	r0, [sp, #16]
   10df8:	bl	10b78 <nl_cli_route_alloc_cache@plt>
   10dfc:	mov	r2, sl
   10e00:	add	r1, sp, #32
   10e04:	bl	10a58 <nl_cache_dump_filter@plt>
   10e08:	ldr	r0, [sp, #8]
   10e0c:	ldr	r2, [sp, #84]	; 0x54
   10e10:	ldr	r3, [r0]
   10e14:	mov	r0, #0
   10e18:	cmp	r2, r3
   10e1c:	bne	10e28 <exit@plt+0x2a4>
   10e20:	add	sp, sp, #92	; 0x5c
   10e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e28:	bl	10b00 <__stack_chk_fail@plt>
   10e2c:	mov	fp, #0
   10e30:	mov	lr, #0
   10e34:	pop	{r1}		; (ldr r1, [sp], #4)
   10e38:	mov	r2, sp
   10e3c:	push	{r2}		; (str r2, [sp, #-4]!)
   10e40:	push	{r0}		; (str r0, [sp, #-4]!)
   10e44:	ldr	ip, [pc, #16]	; 10e5c <exit@plt+0x2d8>
   10e48:	push	{ip}		; (str ip, [sp, #-4]!)
   10e4c:	ldr	r0, [pc, #12]	; 10e60 <exit@plt+0x2dc>
   10e50:	ldr	r3, [pc, #12]	; 10e64 <exit@plt+0x2e0>
   10e54:	bl	10a64 <__libc_start_main@plt>
   10e58:	bl	10a4c <abort@plt>
   10e5c:	andeq	r0, r1, r4, asr #31
   10e60:	muleq	r1, r0, fp
   10e64:	andeq	r0, r1, r0, ror #30
   10e68:	ldr	r3, [pc, #20]	; 10e84 <exit@plt+0x300>
   10e6c:	ldr	r2, [pc, #20]	; 10e88 <exit@plt+0x304>
   10e70:	add	r3, pc, r3
   10e74:	ldr	r2, [r3, r2]
   10e78:	cmp	r2, #0
   10e7c:	bxeq	lr
   10e80:	b	10a70 <__gmon_start__@plt>
   10e84:	andeq	r1, r1, r8, lsl #3
   10e88:	andeq	r0, r0, r8, ror r0
   10e8c:	push	{r3, lr}
   10e90:	movw	r0, #8592	; 0x2190
   10e94:	ldr	r3, [pc, #36]	; 10ec0 <exit@plt+0x33c>
   10e98:	movt	r0, #2
   10e9c:	rsb	r3, r0, r3
   10ea0:	cmp	r3, #6
   10ea4:	popls	{r3, pc}
   10ea8:	movw	r3, #0
   10eac:	movt	r3, #0
   10eb0:	cmp	r3, #0
   10eb4:	popeq	{r3, pc}
   10eb8:	blx	r3
   10ebc:	pop	{r3, pc}
   10ec0:	muleq	r2, r3, r1
   10ec4:	push	{r3, lr}
   10ec8:	movw	r0, #8592	; 0x2190
   10ecc:	movw	r3, #8592	; 0x2190
   10ed0:	movt	r0, #2
   10ed4:	movt	r3, #2
   10ed8:	rsb	r3, r0, r3
   10edc:	asr	r3, r3, #2
   10ee0:	add	r3, r3, r3, lsr #31
   10ee4:	asrs	r1, r3, #1
   10ee8:	popeq	{r3, pc}
   10eec:	movw	r2, #0
   10ef0:	movt	r2, #0
   10ef4:	cmp	r2, #0
   10ef8:	popeq	{r3, pc}
   10efc:	blx	r2
   10f00:	pop	{r3, pc}
   10f04:	push	{r4, lr}
   10f08:	movw	r4, #8604	; 0x219c
   10f0c:	movt	r4, #2
   10f10:	ldrb	r3, [r4]
   10f14:	cmp	r3, #0
   10f18:	popne	{r4, pc}
   10f1c:	bl	10e8c <exit@plt+0x308>
   10f20:	mov	r3, #1
   10f24:	strb	r3, [r4]
   10f28:	pop	{r4, pc}
   10f2c:	movw	r0, #7868	; 0x1ebc
   10f30:	movt	r0, #2
   10f34:	push	{r3, lr}
   10f38:	ldr	r3, [r0]
   10f3c:	cmp	r3, #0
   10f40:	beq	10f58 <exit@plt+0x3d4>
   10f44:	movw	r3, #0
   10f48:	movt	r3, #0
   10f4c:	cmp	r3, #0
   10f50:	beq	10f58 <exit@plt+0x3d4>
   10f54:	blx	r3
   10f58:	pop	{r3, lr}
   10f5c:	b	10ec4 <exit@plt+0x340>
   10f60:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10f64:	mov	r7, r0
   10f68:	ldr	r6, [pc, #76]	; 10fbc <exit@plt+0x438>
   10f6c:	mov	r8, r1
   10f70:	ldr	r5, [pc, #72]	; 10fc0 <exit@plt+0x43c>
   10f74:	mov	r9, r2
   10f78:	add	r6, pc, r6
   10f7c:	bl	10a2c <abort@plt-0x20>
   10f80:	add	r5, pc, r5
   10f84:	rsb	r6, r5, r6
   10f88:	asrs	r6, r6, #2
   10f8c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10f90:	sub	r5, r5, #4
   10f94:	mov	r4, #0
   10f98:	add	r4, r4, #1
   10f9c:	ldr	r3, [r5, #4]!
   10fa0:	mov	r0, r7
   10fa4:	mov	r1, r8
   10fa8:	mov	r2, r9
   10fac:	blx	r3
   10fb0:	cmp	r4, r6
   10fb4:	bne	10f98 <exit@plt+0x414>
   10fb8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10fbc:	andeq	r0, r1, r8, lsr pc
   10fc0:	andeq	r0, r1, ip, lsr #30
   10fc4:	bx	lr

Disassembly of section .fini:

00010fc8 <.fini>:
   10fc8:	push	{r3, lr}
   10fcc:	pop	{r3, pc}
