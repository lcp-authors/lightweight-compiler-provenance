
centos-preinstalled/ncb:     file format elf32-littlearm


Disassembly of section .init:

00010520 <.init>:
   10520:	push	{r3, lr}
   10524:	bl	1072c <abort@plt+0x174>
   10528:	pop	{r3, pc}

Disassembly of section .plt:

0001052c <strtol@plt-0x14>:
   1052c:	push	{lr}		; (str lr, [sp, #-4]!)
   10530:	ldr	lr, [pc, #4]	; 1053c <strtol@plt-0x4>
   10534:	add	lr, pc, lr
   10538:	ldr	pc, [lr, #8]!
   1053c:	andeq	r0, r1, r4, asr #21

00010540 <strtol@plt>:
   10540:	add	ip, pc, #0, 12
   10544:	add	ip, ip, #16, 20	; 0x10000
   10548:	ldr	pc, [ip, #2756]!	; 0xac4

0001054c <setsockopt@plt>:
   1054c:	add	ip, pc, #0, 12
   10550:	add	ip, ip, #16, 20	; 0x10000
   10554:	ldr	pc, [ip, #2748]!	; 0xabc

00010558 <recvfrom@plt>:
   10558:	add	ip, pc, #0, 12
   1055c:	add	ip, ip, #16, 20	; 0x10000
   10560:	ldr	pc, [ip, #2740]!	; 0xab4

00010564 <__stack_chk_fail@plt>:
   10564:	add	ip, pc, #0, 12
   10568:	add	ip, ip, #16, 20	; 0x10000
   1056c:	ldr	pc, [ip, #2732]!	; 0xaac

00010570 <fwrite@plt>:
   10570:	add	ip, pc, #0, 12
   10574:	add	ip, ip, #16, 20	; 0x10000
   10578:	ldr	pc, [ip, #2724]!	; 0xaa4

0001057c <__libc_start_main@plt>:
   1057c:	add	ip, pc, #0, 12
   10580:	add	ip, ip, #16, 20	; 0x10000
   10584:	ldr	pc, [ip, #2716]!	; 0xa9c

00010588 <__gmon_start__@plt>:
   10588:	add	ip, pc, #0, 12
   1058c:	add	ip, ip, #16, 20	; 0x10000
   10590:	ldr	pc, [ip, #2708]!	; 0xa94

00010594 <bind@plt>:
   10594:	add	ip, pc, #0, 12
   10598:	add	ip, ip, #16, 20	; 0x10000
   1059c:	ldr	pc, [ip, #2700]!	; 0xa8c

000105a0 <write@plt>:
   105a0:	add	ip, pc, #0, 12
   105a4:	add	ip, ip, #16, 20	; 0x10000
   105a8:	ldr	pc, [ip, #2692]!	; 0xa84

000105ac <socket@plt>:
   105ac:	add	ip, pc, #0, 12
   105b0:	add	ip, ip, #16, 20	; 0x10000
   105b4:	ldr	pc, [ip, #2684]!	; 0xa7c

000105b8 <abort@plt>:
   105b8:	add	ip, pc, #0, 12
   105bc:	add	ip, ip, #16, 20	; 0x10000
   105c0:	ldr	pc, [ip, #2676]!	; 0xa74

Disassembly of section .text:

000105c4 <.text>:
   105c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   105c8:	movw	r8, #3840	; 0xf00
   105cc:	movt	r8, #2
   105d0:	sub	sp, sp, #552	; 0x228
   105d4:	cmp	r0, #1
   105d8:	mov	r2, #16
   105dc:	ldr	r3, [r8]
   105e0:	str	r2, [sp, #16]
   105e4:	movwle	r4, #6666	; 0x1a0a
   105e8:	str	r3, [sp, #548]	; 0x224
   105ec:	ble	10604 <abort@plt+0x4c>
   105f0:	ldr	r0, [r1, #4]
   105f4:	mov	r2, #10
   105f8:	mov	r1, #0
   105fc:	bl	10540 <strtol@plt>
   10600:	mov	r4, r0
   10604:	mov	r1, #2
   10608:	mov	r2, #17
   1060c:	mov	r0, r1
   10610:	add	r5, sp, #20
   10614:	bl	105ac <socket@plt>
   10618:	add	r3, sp, #552	; 0x228
   1061c:	mov	r1, #1
   10620:	mov	r2, #2
   10624:	str	r1, [r3, #-540]!	; 0xfffffde4
   10628:	rev16	r4, r4
   1062c:	movw	sl, #4160	; 0x1040
   10630:	movw	r9, #2136	; 0x858
   10634:	movt	sl, #2
   10638:	movt	r9, #1
   1063c:	add	r7, sp, #16
   10640:	mov	r6, r0
   10644:	mov	r0, #4
   10648:	str	r0, [sp]
   1064c:	mov	r0, #3
   10650:	bl	1054c <setsockopt@plt>
   10654:	mov	r1, r5
   10658:	mov	r0, r6
   1065c:	mov	r2, #16
   10660:	mov	r3, #2
   10664:	strh	r4, [r5, #2]
   10668:	strh	r3, [r5]
   1066c:	mov	r3, #0
   10670:	str	r3, [sp, #24]
   10674:	bl	10594 <bind@plt>
   10678:	b	10694 <abort@plt+0xdc>
   1067c:	mov	r2, r4
   10680:	add	r1, sp, #36	; 0x24
   10684:	mov	r0, #1
   10688:	bl	105a0 <write@plt>
   1068c:	cmp	r0, r4
   10690:	bne	106d4 <abort@plt+0x11c>
   10694:	str	r7, [sp, #4]
   10698:	mov	r3, #0
   1069c:	str	r5, [sp]
   106a0:	mov	r2, #512	; 0x200
   106a4:	add	r1, sp, #36	; 0x24
   106a8:	mov	r0, r6
   106ac:	bl	10558 <recvfrom@plt>
   106b0:	subs	r4, r0, #0
   106b4:	bge	1067c <abort@plt+0xc4>
   106b8:	ldr	r2, [sp, #548]	; 0x224
   106bc:	mov	r0, #0
   106c0:	ldr	r3, [r8]
   106c4:	cmp	r2, r3
   106c8:	bne	106ec <abort@plt+0x134>
   106cc:	add	sp, sp, #552	; 0x228
   106d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   106d4:	ldr	r3, [sl]
   106d8:	mov	r2, #35	; 0x23
   106dc:	mov	r1, #1
   106e0:	mov	r0, r9
   106e4:	bl	10570 <fwrite@plt>
   106e8:	b	10694 <abort@plt+0xdc>
   106ec:	bl	10564 <__stack_chk_fail@plt>
   106f0:	mov	fp, #0
   106f4:	mov	lr, #0
   106f8:	pop	{r1}		; (ldr r1, [sp], #4)
   106fc:	mov	r2, sp
   10700:	push	{r2}		; (str r2, [sp, #-4]!)
   10704:	push	{r0}		; (str r0, [sp, #-4]!)
   10708:	ldr	ip, [pc, #16]	; 10720 <abort@plt+0x168>
   1070c:	push	{ip}		; (str ip, [sp, #-4]!)
   10710:	ldr	r0, [pc, #12]	; 10724 <abort@plt+0x16c>
   10714:	ldr	r3, [pc, #12]	; 10728 <abort@plt+0x170>
   10718:	bl	1057c <__libc_start_main@plt>
   1071c:	bl	105b8 <abort@plt>
   10720:	andeq	r0, r1, r4, asr #16
   10724:	andeq	r0, r1, r4, asr #11
   10728:	andeq	r0, r1, r0, ror #15
   1072c:	ldr	r3, [pc, #20]	; 10748 <abort@plt+0x190>
   10730:	ldr	r2, [pc, #20]	; 1074c <abort@plt+0x194>
   10734:	add	r3, pc, r3
   10738:	ldr	r2, [r3, r2]
   1073c:	cmp	r2, #0
   10740:	bxeq	lr
   10744:	b	10588 <__gmon_start__@plt>
   10748:	andeq	r0, r1, r4, asr #17
   1074c:	andeq	r0, r0, r8, lsr r0
   10750:	movw	r0, #4160	; 0x1040
   10754:	movt	r0, #2
   10758:	movw	r3, #4160	; 0x1040
   1075c:	movt	r3, #2
   10760:	cmp	r3, r0
   10764:	bxeq	lr
   10768:	movw	r3, #0
   1076c:	movt	r3, #0
   10770:	cmp	r3, #0
   10774:	bxeq	lr
   10778:	bx	r3
   1077c:	movw	r0, #4160	; 0x1040
   10780:	movt	r0, #2
   10784:	movw	r1, #4160	; 0x1040
   10788:	movt	r1, #2
   1078c:	sub	r1, r1, r0
   10790:	asr	r1, r1, #2
   10794:	add	r1, r1, r1, lsr #31
   10798:	asrs	r1, r1, #1
   1079c:	bxeq	lr
   107a0:	movw	r3, #0
   107a4:	movt	r3, #0
   107a8:	cmp	r3, #0
   107ac:	bxeq	lr
   107b0:	bx	r3
   107b4:	push	{r4, lr}
   107b8:	movw	r4, #4164	; 0x1044
   107bc:	movt	r4, #2
   107c0:	ldrb	r3, [r4]
   107c4:	cmp	r3, #0
   107c8:	popne	{r4, pc}
   107cc:	bl	10750 <abort@plt+0x198>
   107d0:	mov	r3, #1
   107d4:	strb	r3, [r4]
   107d8:	pop	{r4, pc}
   107dc:	b	1077c <abort@plt+0x1c4>
   107e0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   107e4:	mov	r7, r0
   107e8:	ldr	r6, [pc, #76]	; 1083c <abort@plt+0x284>
   107ec:	mov	r8, r1
   107f0:	ldr	r5, [pc, #72]	; 10840 <abort@plt+0x288>
   107f4:	mov	r9, r2
   107f8:	add	r6, pc, r6
   107fc:	bl	10520 <strtol@plt-0x20>
   10800:	add	r5, pc, r5
   10804:	rsb	r6, r5, r6
   10808:	asrs	r6, r6, #2
   1080c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10810:	sub	r5, r5, #4
   10814:	mov	r4, #0
   10818:	add	r4, r4, #1
   1081c:	ldr	r3, [r5, #4]!
   10820:	mov	r0, r7
   10824:	mov	r1, r8
   10828:	mov	r2, r9
   1082c:	blx	r3
   10830:	cmp	r4, r6
   10834:	bne	10818 <abort@plt+0x260>
   10838:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1083c:	strdeq	r0, [r1], -ip
   10840:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10844:	bx	lr

Disassembly of section .fini:

00010848 <.fini>:
   10848:	push	{r3, lr}
   1084c:	pop	{r3, pc}
