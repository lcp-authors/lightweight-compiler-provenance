
centos-preinstalled/echo:     file format elf32-littlearm


Disassembly of section .init:

00010dd8 <.init>:
   10dd8:	push	{r3, lr}
   10ddc:	bl	11780 <close@plt+0x730>
   10de0:	pop	{r3, pc}

Disassembly of section .plt:

00010de4 <fdopen@plt-0x14>:
   10de4:	push	{lr}		; (str lr, [sp, #-4]!)
   10de8:	ldr	lr, [pc, #4]	; 10df4 <fdopen@plt-0x4>
   10dec:	add	lr, pc, lr
   10df0:	ldr	pc, [lr, #8]!
   10df4:	andeq	r5, r1, ip, lsl #4

00010df8 <fdopen@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #524]!	; 0x20c

00010e04 <calloc@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #516]!	; 0x204

00010e10 <fputs_unlocked@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #508]!	; 0x1fc

00010e1c <raise@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #500]!	; 0x1f4

00010e28 <strcmp@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #492]!	; 0x1ec

00010e34 <fflush@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #484]!	; 0x1e4

00010e40 <free@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #476]!	; 0x1dc

00010e4c <_exit@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #468]!	; 0x1d4

00010e58 <memcpy@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #460]!	; 0x1cc

00010e64 <mbsinit@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #452]!	; 0x1c4

00010e70 <memcmp@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #444]!	; 0x1bc

00010e7c <dcgettext@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #436]!	; 0x1b4

00010e88 <__stack_chk_fail@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #428]!	; 0x1ac

00010e94 <realloc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #420]!	; 0x1a4

00010ea0 <textdomain@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #412]!	; 0x19c

00010eac <iswprint@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #404]!	; 0x194

00010eb8 <fwrite@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #396]!	; 0x18c

00010ec4 <lseek64@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #388]!	; 0x184

00010ed0 <__ctype_get_mb_cur_max@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #380]!	; 0x17c

00010edc <strcpy@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #372]!	; 0x174

00010ee8 <__fpending@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #364]!	; 0x16c

00010ef4 <mbrtowc@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #356]!	; 0x164

00010f00 <error@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #348]!	; 0x15c

00010f0c <open64@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #340]!	; 0x154

00010f18 <getenv@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #332]!	; 0x14c

00010f24 <malloc@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #324]!	; 0x144

00010f30 <__libc_start_main@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #316]!	; 0x13c

00010f3c <__freading@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #308]!	; 0x134

00010f48 <__gmon_start__@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #300]!	; 0x12c

00010f54 <__ctype_b_loc@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #292]!	; 0x124

00010f60 <exit@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #284]!	; 0x11c

00010f6c <strlen@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #276]!	; 0x114

00010f78 <ungetc@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #268]!	; 0x10c

00010f84 <__errno_location@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #260]!	; 0x104

00010f90 <__cxa_atexit@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #252]!	; 0xfc

00010f9c <memset@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #244]!	; 0xf4

00010fa8 <fscanf@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #86016	; 0x15000
   10fb0:	ldr	pc, [ip, #236]!	; 0xec

00010fb4 <__printf_chk@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #86016	; 0x15000
   10fbc:	ldr	pc, [ip, #228]!	; 0xe4

00010fc0 <fileno@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #86016	; 0x15000
   10fc8:	ldr	pc, [ip, #220]!	; 0xdc

00010fcc <__fprintf_chk@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #86016	; 0x15000
   10fd4:	ldr	pc, [ip, #212]!	; 0xd4

00010fd8 <fclose@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #86016	; 0x15000
   10fe0:	ldr	pc, [ip, #204]!	; 0xcc

00010fe4 <fseeko64@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #86016	; 0x15000
   10fec:	ldr	pc, [ip, #196]!	; 0xc4

00010ff0 <__uflow@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #86016	; 0x15000
   10ff8:	ldr	pc, [ip, #188]!	; 0xbc

00010ffc <__overflow@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #86016	; 0x15000
   11004:	ldr	pc, [ip, #180]!	; 0xb4

00011008 <setlocale@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #86016	; 0x15000
   11010:	ldr	pc, [ip, #172]!	; 0xac

00011014 <strrchr@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #86016	; 0x15000
   1101c:	ldr	pc, [ip, #164]!	; 0xa4

00011020 <nl_langinfo@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #86016	; 0x15000
   11028:	ldr	pc, [ip, #156]!	; 0x9c

0001102c <bindtextdomain@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #86016	; 0x15000
   11034:	ldr	pc, [ip, #148]!	; 0x94

00011038 <strncmp@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #86016	; 0x15000
   11040:	ldr	pc, [ip, #140]!	; 0x8c

00011044 <abort@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #86016	; 0x15000
   1104c:	ldr	pc, [ip, #132]!	; 0x84

00011050 <close@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #86016	; 0x15000
   11058:	ldr	pc, [ip, #124]!	; 0x7c

Disassembly of section .text:

0001105c <close_stdout@@Base-0xbb4>:
   1105c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11060:	mov	r9, r0
   11064:	ldr	r0, [pc, #1684]	; 11700 <close@plt+0x6b0>
   11068:	sub	sp, sp, #28
   1106c:	mov	sl, r1
   11070:	ldr	r8, [pc, #1676]	; 11704 <close@plt+0x6b4>
   11074:	add	r0, pc, r0
   11078:	bl	10f18 <getenv@plt>
   1107c:	add	r8, pc, r8
   11080:	cmp	r0, #0
   11084:	beq	1118c <close@plt+0x13c>
   11088:	cmp	r9, #1
   1108c:	ble	110a0 <close@plt+0x50>
   11090:	ldr	r3, [sl, #4]
   11094:	ldrb	r2, [r3]
   11098:	cmp	r2, #45	; 0x2d
   1109c:	beq	11174 <close@plt+0x124>
   110a0:	ldr	r0, [sl], #4
   110a4:	sub	r9, r9, #1
   110a8:	bl	11dcc <close_stdout@@Base+0x1bc>
   110ac:	ldr	r1, [pc, #1620]	; 11708 <close@plt+0x6b8>
   110b0:	ldr	r4, [pc, #1620]	; 1170c <close@plt+0x6bc>
   110b4:	mov	r0, #6
   110b8:	add	r1, pc, r1
   110bc:	mov	r6, #1
   110c0:	bl	11008 <setlocale@plt>
   110c4:	add	r4, pc, r4
   110c8:	ldr	r1, [pc, #1600]	; 11710 <close@plt+0x6c0>
   110cc:	mov	r0, r4
   110d0:	add	r1, pc, r1
   110d4:	bl	1102c <bindtextdomain@plt>
   110d8:	mov	r0, r4
   110dc:	bl	10ea0 <textdomain@plt>
   110e0:	ldr	r3, [pc, #1580]	; 11714 <close@plt+0x6c4>
   110e4:	ldr	r0, [r8, r3]
   110e8:	bl	14700 <close_stdout@@Base+0x2af0>
   110ec:	cmp	r9, #0
   110f0:	ble	11138 <close@plt+0xe8>
   110f4:	ldr	r3, [pc, #1564]	; 11718 <close@plt+0x6c8>
   110f8:	mov	r5, #32
   110fc:	ldr	r4, [r8, r3]
   11100:	b	11124 <close@plt+0xd4>
   11104:	ldr	r0, [r4]
   11108:	ldr	r3, [r0, #20]
   1110c:	ldr	r2, [r0, #24]
   11110:	cmp	r3, r2
   11114:	addcc	r2, r3, #1
   11118:	strcc	r2, [r0, #20]
   1111c:	strbcc	r5, [r3]
   11120:	bcs	116c4 <close@plt+0x674>
   11124:	ldr	r0, [sl], #4
   11128:	ldr	r1, [r4]
   1112c:	bl	10e10 <fputs_unlocked@plt>
   11130:	subs	r9, r9, #1
   11134:	bne	11104 <close@plt+0xb4>
   11138:	cmp	r6, #0
   1113c:	beq	1116c <close@plt+0x11c>
   11140:	ldr	r3, [pc, #1488]	; 11718 <close@plt+0x6c8>
   11144:	ldr	r3, [r8, r3]
   11148:	ldr	r0, [r3]
   1114c:	ldr	r3, [r0, #20]
   11150:	ldr	r2, [r0, #24]
   11154:	cmp	r3, r2
   11158:	addcc	r1, r3, #1
   1115c:	strcc	r1, [r0, #20]
   11160:	movcc	r2, #10
   11164:	strbcc	r2, [r3]
   11168:	bcs	116f4 <close@plt+0x6a4>
   1116c:	mov	r0, #0
   11170:	bl	10f60 <exit@plt>
   11174:	ldrb	r2, [r3, #1]
   11178:	cmp	r2, #110	; 0x6e
   1117c:	bne	110a0 <close@plt+0x50>
   11180:	ldrb	r3, [r3, #2]
   11184:	cmp	r3, #0
   11188:	bne	110a0 <close@plt+0x50>
   1118c:	ldr	r0, [sl]
   11190:	bl	11dcc <close_stdout@@Base+0x1bc>
   11194:	ldr	r1, [pc, #1408]	; 1171c <close@plt+0x6cc>
   11198:	ldr	r4, [pc, #1408]	; 11720 <close@plt+0x6d0>
   1119c:	mov	r0, #6
   111a0:	add	r1, pc, r1
   111a4:	bl	11008 <setlocale@plt>
   111a8:	add	r4, pc, r4
   111ac:	ldr	r1, [pc, #1392]	; 11724 <close@plt+0x6d4>
   111b0:	mov	r0, r4
   111b4:	add	r1, pc, r1
   111b8:	bl	1102c <bindtextdomain@plt>
   111bc:	mov	r0, r4
   111c0:	bl	10ea0 <textdomain@plt>
   111c4:	ldr	r3, [pc, #1352]	; 11714 <close@plt+0x6c4>
   111c8:	ldr	r0, [r8, r3]
   111cc:	bl	14700 <close_stdout@@Base+0x2af0>
   111d0:	cmp	r9, #2
   111d4:	bne	116d0 <close@plt+0x680>
   111d8:	ldr	r4, [sl, #4]
   111dc:	ldr	r1, [pc, #1348]	; 11728 <close@plt+0x6d8>
   111e0:	mov	r0, r4
   111e4:	add	r1, pc, r1
   111e8:	bl	10e28 <strcmp@plt>
   111ec:	cmp	r0, #0
   111f0:	beq	11640 <close@plt+0x5f0>
   111f4:	ldr	r1, [pc, #1328]	; 1172c <close@plt+0x6dc>
   111f8:	mov	r0, r4
   111fc:	add	r1, pc, r1
   11200:	bl	10e28 <strcmp@plt>
   11204:	subs	r4, r0, #0
   11208:	addne	sl, sl, #4
   1120c:	movne	r9, #1
   11210:	beq	11644 <close@plt+0x5f4>
   11214:	ldr	ip, [sl]
   11218:	ldrb	r3, [ip]
   1121c:	cmp	r3, #45	; 0x2d
   11220:	bne	116bc <close@plt+0x66c>
   11224:	mov	r1, #0
   11228:	mov	r6, #1
   1122c:	ldrb	r3, [ip, #1]
   11230:	add	r0, ip, #1
   11234:	cmp	r3, #0
   11238:	beq	11258 <close@plt+0x208>
   1123c:	mov	r2, #0
   11240:	cmp	r3, #101	; 0x65
   11244:	beq	1157c <close@plt+0x52c>
   11248:	cmp	r3, #110	; 0x6e
   1124c:	beq	1157c <close@plt+0x52c>
   11250:	cmp	r3, #69	; 0x45
   11254:	beq	1157c <close@plt+0x52c>
   11258:	cmp	r1, #0
   1125c:	subne	sl, sl, #4
   11260:	movne	r7, #92	; 0x5c
   11264:	beq	110ec <close@plt+0x9c>
   11268:	ldr	r4, [sl, #4]!
   1126c:	b	1129c <close@plt+0x24c>
   11270:	ldr	r3, [pc, #1184]	; 11718 <close@plt+0x6c8>
   11274:	ldr	r4, [r8, r3]
   11278:	ldr	r0, [r4]
   1127c:	ldr	r3, [r0, #20]
   11280:	ldr	r2, [r0, #24]
   11284:	cmp	r3, r2
   11288:	addcc	r2, r3, #1
   1128c:	strcc	r2, [r0, #20]
   11290:	strbcc	r1, [r3]
   11294:	bcs	116b4 <close@plt+0x664>
   11298:	mov	r4, r5
   1129c:	ldrb	r1, [r4]
   112a0:	add	r5, r4, #1
   112a4:	cmp	r1, #0
   112a8:	beq	115f0 <close@plt+0x5a0>
   112ac:	cmp	r1, #92	; 0x5c
   112b0:	bne	11270 <close@plt+0x220>
   112b4:	ldrb	fp, [r4, #1]
   112b8:	cmp	fp, #0
   112bc:	beq	11270 <close@plt+0x220>
   112c0:	sub	r1, fp, #48	; 0x30
   112c4:	add	r5, r4, #2
   112c8:	cmp	r1, #72	; 0x48
   112cc:	addls	pc, pc, r1, lsl #2
   112d0:	b	11540 <close@plt+0x4f0>
   112d4:	b	113f8 <close@plt+0x3a8>
   112d8:	b	11410 <close@plt+0x3c0>
   112dc:	b	11410 <close@plt+0x3c0>
   112e0:	b	11410 <close@plt+0x3c0>
   112e4:	b	11410 <close@plt+0x3c0>
   112e8:	b	11410 <close@plt+0x3c0>
   112ec:	b	11410 <close@plt+0x3c0>
   112f0:	b	11410 <close@plt+0x3c0>
   112f4:	b	11540 <close@plt+0x4f0>
   112f8:	b	11540 <close@plt+0x4f0>
   112fc:	b	11540 <close@plt+0x4f0>
   11300:	b	11540 <close@plt+0x4f0>
   11304:	b	11540 <close@plt+0x4f0>
   11308:	b	11540 <close@plt+0x4f0>
   1130c:	b	11540 <close@plt+0x4f0>
   11310:	b	11540 <close@plt+0x4f0>
   11314:	b	11540 <close@plt+0x4f0>
   11318:	b	11540 <close@plt+0x4f0>
   1131c:	b	11540 <close@plt+0x4f0>
   11320:	b	11540 <close@plt+0x4f0>
   11324:	b	11540 <close@plt+0x4f0>
   11328:	b	11540 <close@plt+0x4f0>
   1132c:	b	11540 <close@plt+0x4f0>
   11330:	b	11540 <close@plt+0x4f0>
   11334:	b	11540 <close@plt+0x4f0>
   11338:	b	11540 <close@plt+0x4f0>
   1133c:	b	11540 <close@plt+0x4f0>
   11340:	b	11540 <close@plt+0x4f0>
   11344:	b	11540 <close@plt+0x4f0>
   11348:	b	11540 <close@plt+0x4f0>
   1134c:	b	11540 <close@plt+0x4f0>
   11350:	b	11540 <close@plt+0x4f0>
   11354:	b	11540 <close@plt+0x4f0>
   11358:	b	11540 <close@plt+0x4f0>
   1135c:	b	11540 <close@plt+0x4f0>
   11360:	b	11540 <close@plt+0x4f0>
   11364:	b	11540 <close@plt+0x4f0>
   11368:	b	11540 <close@plt+0x4f0>
   1136c:	b	11540 <close@plt+0x4f0>
   11370:	b	11540 <close@plt+0x4f0>
   11374:	b	11540 <close@plt+0x4f0>
   11378:	b	11540 <close@plt+0x4f0>
   1137c:	b	11540 <close@plt+0x4f0>
   11380:	b	11540 <close@plt+0x4f0>
   11384:	b	1146c <close@plt+0x41c>
   11388:	b	11540 <close@plt+0x4f0>
   1138c:	b	11540 <close@plt+0x4f0>
   11390:	b	11540 <close@plt+0x4f0>
   11394:	b	11540 <close@plt+0x4f0>
   11398:	b	1145c <close@plt+0x40c>
   1139c:	b	114f0 <close@plt+0x4a0>
   113a0:	b	1116c <close@plt+0x11c>
   113a4:	b	11540 <close@plt+0x4f0>
   113a8:	b	114e0 <close@plt+0x490>
   113ac:	b	11530 <close@plt+0x4e0>
   113b0:	b	11540 <close@plt+0x4f0>
   113b4:	b	11540 <close@plt+0x4f0>
   113b8:	b	11540 <close@plt+0x4f0>
   113bc:	b	11540 <close@plt+0x4f0>
   113c0:	b	11540 <close@plt+0x4f0>
   113c4:	b	11540 <close@plt+0x4f0>
   113c8:	b	11540 <close@plt+0x4f0>
   113cc:	b	11520 <close@plt+0x4d0>
   113d0:	b	11540 <close@plt+0x4f0>
   113d4:	b	11540 <close@plt+0x4f0>
   113d8:	b	11540 <close@plt+0x4f0>
   113dc:	b	11510 <close@plt+0x4c0>
   113e0:	b	11540 <close@plt+0x4f0>
   113e4:	b	11500 <close@plt+0x4b0>
   113e8:	b	11540 <close@plt+0x4f0>
   113ec:	b	114d0 <close@plt+0x480>
   113f0:	b	11540 <close@plt+0x4f0>
   113f4:	b	1147c <close@plt+0x42c>
   113f8:	ldrb	fp, [r4, #2]
   113fc:	sub	r1, fp, #48	; 0x30
   11400:	uxtb	r3, r1
   11404:	cmp	r3, #7
   11408:	bhi	11630 <close@plt+0x5e0>
   1140c:	add	r5, r4, #3
   11410:	ldrb	r3, [r5]
   11414:	uxtb	r1, r1
   11418:	sub	r3, r3, #48	; 0x30
   1141c:	uxtb	r3, r3
   11420:	cmp	r3, #7
   11424:	bhi	11270 <close@plt+0x220>
   11428:	ldrb	r2, [r5, #1]
   1142c:	add	r1, r3, r1, lsl #3
   11430:	and	r1, r1, #255	; 0xff
   11434:	sub	r3, r2, #48	; 0x30
   11438:	uxtb	r3, r3
   1143c:	cmp	r3, #7
   11440:	bhi	116e4 <close@plt+0x694>
   11444:	ldr	r2, [pc, #716]	; 11718 <close@plt+0x6c8>
   11448:	add	r1, r3, r1, lsl #3
   1144c:	and	r1, r1, #255	; 0xff
   11450:	add	r5, r5, #2
   11454:	ldr	r4, [r8, r2]
   11458:	b	11278 <close@plt+0x228>
   1145c:	ldr	r3, [pc, #692]	; 11718 <close@plt+0x6c8>
   11460:	mov	r1, #7
   11464:	ldr	r4, [r8, r3]
   11468:	b	11278 <close@plt+0x228>
   1146c:	ldr	r3, [pc, #676]	; 11718 <close@plt+0x6c8>
   11470:	mov	r1, fp
   11474:	ldr	r4, [r8, r3]
   11478:	b	11278 <close@plt+0x228>
   1147c:	bl	10f54 <__ctype_b_loc@plt>
   11480:	ldrb	r2, [r4, #2]
   11484:	lsl	r1, r2, #1
   11488:	ldr	r3, [r0]
   1148c:	ldrh	r1, [r3, r1]
   11490:	tst	r1, #4096	; 0x1000
   11494:	beq	11540 <close@plt+0x4f0>
   11498:	mov	r0, r2
   1149c:	str	r3, [sp, #20]
   114a0:	bl	11878 <close@plt+0x828>
   114a4:	ldrb	r2, [r4, #3]
   114a8:	ldr	r3, [sp, #20]
   114ac:	lsl	r1, r2, #1
   114b0:	ldrh	r3, [r3, r1]
   114b4:	tst	r3, #4096	; 0x1000
   114b8:	uxtb	r1, r0
   114bc:	bne	1168c <close@plt+0x63c>
   114c0:	ldr	r3, [pc, #592]	; 11718 <close@plt+0x6c8>
   114c4:	add	r5, r4, #3
   114c8:	ldr	r4, [r8, r3]
   114cc:	b	11278 <close@plt+0x228>
   114d0:	ldr	r3, [pc, #576]	; 11718 <close@plt+0x6c8>
   114d4:	mov	r1, #11
   114d8:	ldr	r4, [r8, r3]
   114dc:	b	11278 <close@plt+0x228>
   114e0:	ldr	r3, [pc, #560]	; 11718 <close@plt+0x6c8>
   114e4:	mov	r1, #27
   114e8:	ldr	r4, [r8, r3]
   114ec:	b	11278 <close@plt+0x228>
   114f0:	ldr	r3, [pc, #544]	; 11718 <close@plt+0x6c8>
   114f4:	mov	r1, #8
   114f8:	ldr	r4, [r8, r3]
   114fc:	b	11278 <close@plt+0x228>
   11500:	ldr	r3, [pc, #528]	; 11718 <close@plt+0x6c8>
   11504:	mov	r1, #9
   11508:	ldr	r4, [r8, r3]
   1150c:	b	11278 <close@plt+0x228>
   11510:	ldr	r3, [pc, #512]	; 11718 <close@plt+0x6c8>
   11514:	mov	r1, #13
   11518:	ldr	r4, [r8, r3]
   1151c:	b	11278 <close@plt+0x228>
   11520:	ldr	r3, [pc, #496]	; 11718 <close@plt+0x6c8>
   11524:	mov	r1, #10
   11528:	ldr	r4, [r8, r3]
   1152c:	b	11278 <close@plt+0x228>
   11530:	ldr	r3, [pc, #480]	; 11718 <close@plt+0x6c8>
   11534:	mov	r1, #12
   11538:	ldr	r4, [r8, r3]
   1153c:	b	11278 <close@plt+0x228>
   11540:	ldr	r3, [pc, #464]	; 11718 <close@plt+0x6c8>
   11544:	ldr	r4, [r8, r3]
   11548:	ldr	r0, [r4]
   1154c:	ldr	r3, [r0, #20]
   11550:	ldr	r2, [r0, #24]
   11554:	cmp	r3, r2
   11558:	addcc	r2, r3, #1
   1155c:	strcc	r2, [r0, #20]
   11560:	movcc	r1, fp
   11564:	strbcc	r7, [r3]
   11568:	bcc	11278 <close@plt+0x228>
   1156c:	mov	r1, #92	; 0x5c
   11570:	bl	10ffc <__overflow@plt>
   11574:	mov	r1, fp
   11578:	b	11278 <close@plt+0x228>
   1157c:	ldrb	r3, [r0, #1]!
   11580:	add	r2, r2, #1
   11584:	cmp	r3, #0
   11588:	bne	11240 <close@plt+0x1f0>
   1158c:	cmp	r2, #0
   11590:	beq	11258 <close@plt+0x208>
   11594:	mov	r2, ip
   11598:	ldrb	r3, [r2, #1]!
   1159c:	cmp	r3, #0
   115a0:	beq	115d0 <close@plt+0x580>
   115a4:	cmp	r3, #101	; 0x65
   115a8:	moveq	r1, #1
   115ac:	beq	11598 <close@plt+0x548>
   115b0:	cmp	r3, #110	; 0x6e
   115b4:	moveq	r6, #0
   115b8:	beq	11598 <close@plt+0x548>
   115bc:	cmp	r3, #69	; 0x45
   115c0:	ldrb	r3, [r2, #1]!
   115c4:	moveq	r1, #0
   115c8:	cmp	r3, #0
   115cc:	bne	115a4 <close@plt+0x554>
   115d0:	subs	r9, r9, #1
   115d4:	add	sl, sl, #4
   115d8:	beq	11138 <close@plt+0xe8>
   115dc:	ldr	ip, [sl]
   115e0:	ldrb	r3, [ip]
   115e4:	cmp	r3, #45	; 0x2d
   115e8:	beq	1122c <close@plt+0x1dc>
   115ec:	b	11258 <close@plt+0x208>
   115f0:	subs	r9, r9, #1
   115f4:	beq	11138 <close@plt+0xe8>
   115f8:	ldr	r3, [pc, #280]	; 11718 <close@plt+0x6c8>
   115fc:	ldr	r4, [r8, r3]
   11600:	ldr	r0, [r4]
   11604:	ldr	r3, [r0, #20]
   11608:	ldr	r2, [r0, #24]
   1160c:	cmp	r3, r2
   11610:	addcc	r1, r3, #1
   11614:	strcc	r1, [r0, #20]
   11618:	movcc	r2, #32
   1161c:	strbcc	r2, [r3]
   11620:	bcc	11268 <close@plt+0x218>
   11624:	mov	r1, #32
   11628:	bl	10ffc <__overflow@plt>
   1162c:	b	11268 <close@plt+0x218>
   11630:	ldr	r3, [pc, #224]	; 11718 <close@plt+0x6c8>
   11634:	mov	r1, #0
   11638:	ldr	r4, [r8, r3]
   1163c:	b	11278 <close@plt+0x228>
   11640:	bl	11958 <close@plt+0x908>
   11644:	ldr	r2, [pc, #204]	; 11718 <close@plt+0x6c8>
   11648:	ldr	r3, [pc, #224]	; 11730 <close@plt+0x6e0>
   1164c:	ldr	r1, [pc, #224]	; 11734 <close@plt+0x6e4>
   11650:	ldr	r0, [r8, r2]
   11654:	ldr	r3, [r8, r3]
   11658:	add	r1, pc, r1
   1165c:	ldr	r2, [pc, #212]	; 11738 <close@plt+0x6e8>
   11660:	ldr	r0, [r0]
   11664:	add	r2, pc, r2
   11668:	ldr	r3, [r3]
   1166c:	stm	sp, {r1, r2, r4}
   11670:	ldr	r1, [pc, #196]	; 1173c <close@plt+0x6ec>
   11674:	ldr	r2, [pc, #196]	; 11740 <close@plt+0x6f0>
   11678:	add	r1, pc, r1
   1167c:	add	r2, pc, r2
   11680:	bl	13ab8 <close_stdout@@Base+0x1ea8>
   11684:	mov	r0, r4
   11688:	bl	10f60 <exit@plt>
   1168c:	lsl	r1, r1, #4
   11690:	mov	r0, r2
   11694:	add	r5, r4, #4
   11698:	uxtb	fp, r1
   1169c:	bl	11878 <close@plt+0x828>
   116a0:	ldr	r3, [pc, #112]	; 11718 <close@plt+0x6c8>
   116a4:	ldr	r4, [r8, r3]
   116a8:	add	r0, fp, r0
   116ac:	uxtb	r1, r0
   116b0:	b	11278 <close@plt+0x228>
   116b4:	bl	10ffc <__overflow@plt>
   116b8:	b	11298 <close@plt+0x248>
   116bc:	mov	r6, #1
   116c0:	b	110f4 <close@plt+0xa4>
   116c4:	mov	r1, #32
   116c8:	bl	10ffc <__overflow@plt>
   116cc:	b	11124 <close@plt+0xd4>
   116d0:	sub	r9, r9, #1
   116d4:	add	sl, sl, #4
   116d8:	cmp	r9, #0
   116dc:	ble	11140 <close@plt+0xf0>
   116e0:	b	11214 <close@plt+0x1c4>
   116e4:	ldr	r3, [pc, #44]	; 11718 <close@plt+0x6c8>
   116e8:	add	r5, r5, #1
   116ec:	ldr	r4, [r8, r3]
   116f0:	b	11278 <close@plt+0x228>
   116f4:	mov	r1, #10
   116f8:	bl	10ffc <__overflow@plt>
   116fc:	b	1116c <close@plt+0x11c>
   11700:			; <UNDEFINED> instruction: 0x00003bb4
   11704:	andeq	r4, r1, ip, ror pc
   11708:	andeq	r3, r0, ip, ror #22
   1170c:	andeq	r3, r0, r0, lsr #21
   11710:	andeq	r3, r0, r8, ror #22
   11714:	andeq	r0, r0, r8, ror #1
   11718:	strdeq	r0, [r0], -r4
   1171c:	andeq	r3, r0, r4, lsl #21
   11720:			; <UNDEFINED> instruction: 0x000039bc
   11724:	andeq	r3, r0, r4, lsl #21
   11728:	andeq	r3, r0, r8, ror #20
   1172c:	andeq	r3, r0, r8, asr sl
   11730:	andeq	r0, r0, r0, ror #1
   11734:	andeq	r3, r0, r8, lsl #12
   11738:	andeq	r3, r0, r8, lsl #12
   1173c:	andeq	r3, r0, r8, asr #9
   11740:	andeq	r3, r0, r4, ror #9
   11744:	mov	fp, #0
   11748:	mov	lr, #0
   1174c:	pop	{r1}		; (ldr r1, [sp], #4)
   11750:	mov	r2, sp
   11754:	push	{r2}		; (str r2, [sp, #-4]!)
   11758:	push	{r0}		; (str r0, [sp, #-4]!)
   1175c:	ldr	ip, [pc, #16]	; 11774 <close@plt+0x724>
   11760:	push	{ip}		; (str ip, [sp, #-4]!)
   11764:	ldr	r0, [pc, #12]	; 11778 <close@plt+0x728>
   11768:	ldr	r3, [pc, #12]	; 1177c <close@plt+0x72c>
   1176c:	bl	10f30 <__libc_start_main@plt>
   11770:	bl	11044 <abort@plt>
   11774:	strdeq	r4, [r1], -ip
   11778:	andeq	r1, r1, ip, asr r0
   1177c:	muleq	r1, r8, r6
   11780:	ldr	r3, [pc, #20]	; 1179c <close@plt+0x74c>
   11784:	ldr	r2, [pc, #20]	; 117a0 <close@plt+0x750>
   11788:	add	r3, pc, r3
   1178c:	ldr	r2, [r3, r2]
   11790:	cmp	r2, #0
   11794:	bxeq	lr
   11798:	b	10f48 <__gmon_start__@plt>
   1179c:	andeq	r4, r1, r0, ror r8
   117a0:	andeq	r0, r0, ip, ror #1
   117a4:	push	{r3, lr}
   117a8:	movw	r0, #24920	; 0x6158
   117ac:	ldr	r3, [pc, #36]	; 117d8 <close@plt+0x788>
   117b0:	movt	r0, #2
   117b4:	rsb	r3, r0, r3
   117b8:	cmp	r3, #6
   117bc:	popls	{r3, pc}
   117c0:	movw	r3, #0
   117c4:	movt	r3, #0
   117c8:	cmp	r3, #0
   117cc:	popeq	{r3, pc}
   117d0:	blx	r3
   117d4:	pop	{r3, pc}
   117d8:	andeq	r6, r2, fp, asr r1
   117dc:	push	{r3, lr}
   117e0:	movw	r0, #24920	; 0x6158
   117e4:	movw	r3, #24920	; 0x6158
   117e8:	movt	r0, #2
   117ec:	movt	r3, #2
   117f0:	rsb	r3, r0, r3
   117f4:	asr	r3, r3, #2
   117f8:	add	r3, r3, r3, lsr #31
   117fc:	asrs	r1, r3, #1
   11800:	popeq	{r3, pc}
   11804:	movw	r2, #0
   11808:	movt	r2, #0
   1180c:	cmp	r2, #0
   11810:	popeq	{r3, pc}
   11814:	blx	r2
   11818:	pop	{r3, pc}
   1181c:	push	{r4, lr}
   11820:	movw	r4, #24920	; 0x6158
   11824:	movt	r4, #2
   11828:	ldrb	r3, [r4]
   1182c:	cmp	r3, #0
   11830:	popne	{r4, pc}
   11834:	bl	117a4 <close@plt+0x754>
   11838:	mov	r3, #1
   1183c:	strb	r3, [r4]
   11840:	pop	{r4, pc}
   11844:	movw	r0, #24288	; 0x5ee0
   11848:	movt	r0, #2
   1184c:	push	{r3, lr}
   11850:	ldr	r3, [r0]
   11854:	cmp	r3, #0
   11858:	beq	11870 <close@plt+0x820>
   1185c:	movw	r3, #0
   11860:	movt	r3, #0
   11864:	cmp	r3, #0
   11868:	beq	11870 <close@plt+0x820>
   1186c:	blx	r3
   11870:	pop	{r3, lr}
   11874:	b	117dc <close@plt+0x78c>
   11878:	sub	r3, r0, #65	; 0x41
   1187c:	cmp	r3, #37	; 0x25
   11880:	addls	pc, pc, r3, lsl #2
   11884:	b	11950 <close@plt+0x900>
   11888:	b	11948 <close@plt+0x8f8>
   1188c:	b	11920 <close@plt+0x8d0>
   11890:	b	11928 <close@plt+0x8d8>
   11894:	b	11930 <close@plt+0x8e0>
   11898:	b	11938 <close@plt+0x8e8>
   1189c:	b	11940 <close@plt+0x8f0>
   118a0:	b	11950 <close@plt+0x900>
   118a4:	b	11950 <close@plt+0x900>
   118a8:	b	11950 <close@plt+0x900>
   118ac:	b	11950 <close@plt+0x900>
   118b0:	b	11950 <close@plt+0x900>
   118b4:	b	11950 <close@plt+0x900>
   118b8:	b	11950 <close@plt+0x900>
   118bc:	b	11950 <close@plt+0x900>
   118c0:	b	11950 <close@plt+0x900>
   118c4:	b	11950 <close@plt+0x900>
   118c8:	b	11950 <close@plt+0x900>
   118cc:	b	11950 <close@plt+0x900>
   118d0:	b	11950 <close@plt+0x900>
   118d4:	b	11950 <close@plt+0x900>
   118d8:	b	11950 <close@plt+0x900>
   118dc:	b	11950 <close@plt+0x900>
   118e0:	b	11950 <close@plt+0x900>
   118e4:	b	11950 <close@plt+0x900>
   118e8:	b	11950 <close@plt+0x900>
   118ec:	b	11950 <close@plt+0x900>
   118f0:	b	11950 <close@plt+0x900>
   118f4:	b	11950 <close@plt+0x900>
   118f8:	b	11950 <close@plt+0x900>
   118fc:	b	11950 <close@plt+0x900>
   11900:	b	11950 <close@plt+0x900>
   11904:	b	11950 <close@plt+0x900>
   11908:	b	11948 <close@plt+0x8f8>
   1190c:	b	11920 <close@plt+0x8d0>
   11910:	b	11928 <close@plt+0x8d8>
   11914:	b	11930 <close@plt+0x8e0>
   11918:	b	11938 <close@plt+0x8e8>
   1191c:	b	11940 <close@plt+0x8f0>
   11920:	mov	r0, #11
   11924:	bx	lr
   11928:	mov	r0, #12
   1192c:	bx	lr
   11930:	mov	r0, #13
   11934:	bx	lr
   11938:	mov	r0, #14
   1193c:	bx	lr
   11940:	mov	r0, #15
   11944:	bx	lr
   11948:	mov	r0, #10
   1194c:	bx	lr
   11950:	sub	r0, r0, #48	; 0x30
   11954:	bx	lr
   11958:	push	{r4, r5, r6, lr}
   1195c:	subs	r4, r0, #0
   11960:	ldr	r5, [pc, #556]	; 11b94 <close@plt+0xb44>
   11964:	add	r5, pc, r5
   11968:	beq	119b0 <close@plt+0x960>
   1196c:	ldr	r3, [pc, #548]	; 11b98 <close@plt+0xb48>
   11970:	mov	r2, #5
   11974:	ldr	r1, [pc, #544]	; 11b9c <close@plt+0xb4c>
   11978:	mov	r0, #0
   1197c:	ldr	r3, [r5, r3]
   11980:	add	r1, pc, r1
   11984:	ldr	r6, [r3]
   11988:	bl	10e7c <dcgettext@plt>
   1198c:	ldr	r3, [pc, #524]	; 11ba0 <close@plt+0xb50>
   11990:	mov	r1, #1
   11994:	ldr	r3, [r5, r3]
   11998:	ldr	r3, [r3]
   1199c:	mov	r2, r0
   119a0:	mov	r0, r6
   119a4:	bl	10fcc <__fprintf_chk@plt>
   119a8:	mov	r0, r4
   119ac:	bl	10f60 <exit@plt>
   119b0:	ldr	r1, [pc, #492]	; 11ba4 <close@plt+0xb54>
   119b4:	mov	r2, #5
   119b8:	add	r1, pc, r1
   119bc:	bl	10e7c <dcgettext@plt>
   119c0:	ldr	r3, [pc, #472]	; 11ba0 <close@plt+0xb50>
   119c4:	ldr	r6, [r5, r3]
   119c8:	ldr	r2, [r6]
   119cc:	mov	r3, r2
   119d0:	mov	r1, r0
   119d4:	mov	r0, #1
   119d8:	bl	10fb4 <__printf_chk@plt>
   119dc:	ldr	r1, [pc, #452]	; 11ba8 <close@plt+0xb58>
   119e0:	mov	r2, #5
   119e4:	mov	r0, r4
   119e8:	add	r1, pc, r1
   119ec:	bl	10e7c <dcgettext@plt>
   119f0:	ldr	r3, [pc, #436]	; 11bac <close@plt+0xb5c>
   119f4:	ldr	r5, [r5, r3]
   119f8:	ldr	r1, [r5]
   119fc:	bl	10e10 <fputs_unlocked@plt>
   11a00:	ldr	r1, [pc, #424]	; 11bb0 <close@plt+0xb60>
   11a04:	mov	r2, #5
   11a08:	mov	r0, r4
   11a0c:	add	r1, pc, r1
   11a10:	bl	10e7c <dcgettext@plt>
   11a14:	ldr	r1, [r5]
   11a18:	bl	10e10 <fputs_unlocked@plt>
   11a1c:	ldr	r1, [pc, #400]	; 11bb4 <close@plt+0xb64>
   11a20:	mov	r2, #5
   11a24:	mov	r0, r4
   11a28:	add	r1, pc, r1
   11a2c:	bl	10e7c <dcgettext@plt>
   11a30:	ldr	r1, [r5]
   11a34:	bl	10e10 <fputs_unlocked@plt>
   11a38:	ldr	r1, [pc, #376]	; 11bb8 <close@plt+0xb68>
   11a3c:	mov	r2, #5
   11a40:	mov	r0, r4
   11a44:	add	r1, pc, r1
   11a48:	bl	10e7c <dcgettext@plt>
   11a4c:	ldr	r1, [r5]
   11a50:	bl	10e10 <fputs_unlocked@plt>
   11a54:	ldr	r1, [pc, #352]	; 11bbc <close@plt+0xb6c>
   11a58:	mov	r2, #5
   11a5c:	mov	r0, r4
   11a60:	add	r1, pc, r1
   11a64:	bl	10e7c <dcgettext@plt>
   11a68:	ldr	r1, [r5]
   11a6c:	bl	10e10 <fputs_unlocked@plt>
   11a70:	ldr	r1, [pc, #328]	; 11bc0 <close@plt+0xb70>
   11a74:	mov	r2, #5
   11a78:	mov	r0, r4
   11a7c:	add	r1, pc, r1
   11a80:	bl	10e7c <dcgettext@plt>
   11a84:	ldr	r1, [r5]
   11a88:	bl	10e10 <fputs_unlocked@plt>
   11a8c:	ldr	r1, [pc, #304]	; 11bc4 <close@plt+0xb74>
   11a90:	mov	r2, #5
   11a94:	mov	r0, r4
   11a98:	add	r1, pc, r1
   11a9c:	bl	10e7c <dcgettext@plt>
   11aa0:	ldr	r1, [r5]
   11aa4:	bl	10e10 <fputs_unlocked@plt>
   11aa8:	ldr	r1, [pc, #280]	; 11bc8 <close@plt+0xb78>
   11aac:	mov	r2, #5
   11ab0:	mov	r0, r4
   11ab4:	add	r1, pc, r1
   11ab8:	bl	10e7c <dcgettext@plt>
   11abc:	ldr	r2, [pc, #264]	; 11bcc <close@plt+0xb7c>
   11ac0:	add	r2, pc, r2
   11ac4:	mov	r1, r0
   11ac8:	mov	r0, #1
   11acc:	bl	10fb4 <__printf_chk@plt>
   11ad0:	ldr	r1, [pc, #248]	; 11bd0 <close@plt+0xb80>
   11ad4:	mov	r2, #5
   11ad8:	mov	r0, r4
   11adc:	add	r1, pc, r1
   11ae0:	bl	10e7c <dcgettext@plt>
   11ae4:	ldr	r2, [pc, #232]	; 11bd4 <close@plt+0xb84>
   11ae8:	ldr	r3, [pc, #232]	; 11bd8 <close@plt+0xb88>
   11aec:	add	r2, pc, r2
   11af0:	add	r3, pc, r3
   11af4:	mov	r1, r0
   11af8:	mov	r0, #1
   11afc:	bl	10fb4 <__printf_chk@plt>
   11b00:	mov	r0, #5
   11b04:	mov	r1, r4
   11b08:	bl	11008 <setlocale@plt>
   11b0c:	cmp	r0, #0
   11b10:	beq	11b2c <close@plt+0xadc>
   11b14:	ldr	r1, [pc, #192]	; 11bdc <close@plt+0xb8c>
   11b18:	mov	r2, #3
   11b1c:	add	r1, pc, r1
   11b20:	bl	11038 <strncmp@plt>
   11b24:	cmp	r0, #0
   11b28:	bne	11b60 <close@plt+0xb10>
   11b2c:	ldr	r1, [pc, #172]	; 11be0 <close@plt+0xb90>
   11b30:	mov	r2, #5
   11b34:	mov	r0, #0
   11b38:	add	r1, pc, r1
   11b3c:	bl	10e7c <dcgettext@plt>
   11b40:	mov	r5, r0
   11b44:	ldr	r0, [r6]
   11b48:	bl	11d28 <close_stdout@@Base+0x118>
   11b4c:	mov	r1, r5
   11b50:	mov	r2, r0
   11b54:	mov	r0, #1
   11b58:	bl	10fb4 <__printf_chk@plt>
   11b5c:	b	119a8 <close@plt+0x958>
   11b60:	ldr	r1, [pc, #124]	; 11be4 <close@plt+0xb94>
   11b64:	mov	r2, #5
   11b68:	mov	r0, r4
   11b6c:	add	r1, pc, r1
   11b70:	bl	10e7c <dcgettext@plt>
   11b74:	mov	r5, r0
   11b78:	ldr	r0, [r6]
   11b7c:	bl	11d28 <close_stdout@@Base+0x118>
   11b80:	mov	r1, r5
   11b84:	mov	r2, r0
   11b88:	mov	r0, #1
   11b8c:	bl	10fb4 <__printf_chk@plt>
   11b90:	b	11b2c <close@plt+0xadc>
   11b94:	muleq	r1, r4, r6
   11b98:	andeq	r0, r0, r4, ror #1
   11b9c:			; <UNDEFINED> instruction: 0x00002db4
   11ba0:	andeq	r0, r0, r0, lsl #2
   11ba4:	andeq	r2, r0, r4, lsr #27
   11ba8:			; <UNDEFINED> instruction: 0x00002db4
   11bac:	strdeq	r0, [r0], -r4
   11bb0:	strdeq	r2, [r0], -r0
   11bb4:	andeq	r2, r0, r8, asr lr
   11bb8:	andeq	r2, r0, ip, ror #28
   11bbc:	andeq	r2, r0, r8, lsl #29
   11bc0:	andeq	r2, r0, ip, lsr #29
   11bc4:	andeq	r2, r0, r8, ror pc
   11bc8:	andeq	r2, r0, ip, asr #31
   11bcc:	andeq	r3, r0, r0, lsl #1
   11bd0:	andeq	r3, r0, ip, rrx
   11bd4:	andeq	r3, r0, r4, ror r0
   11bd8:	andeq	r3, r0, r0, lsl #1
   11bdc:	andeq	r3, r0, ip, ror r0
   11be0:	andeq	r3, r0, ip, lsr #1
   11be4:	andeq	r3, r0, r0, lsr r0
   11be8:	ldr	r3, [pc, #8]	; 11bf8 <close@plt+0xba8>
   11bec:	add	r3, pc, r3
   11bf0:	str	r0, [r3]
   11bf4:	bx	lr
   11bf8:	andeq	r4, r1, r8, ror #10
   11bfc:	ldr	r3, [pc, #8]	; 11c0c <close@plt+0xbbc>
   11c00:	add	r3, pc, r3
   11c04:	strb	r0, [r3, #4]
   11c08:	bx	lr
   11c0c:	andeq	r4, r1, r4, asr r5

00011c10 <close_stdout@@Base>:
   11c10:	push	{r4, r5, r6, r7, lr}
   11c14:	sub	sp, sp, #12
   11c18:	ldr	r4, [pc, #228]	; 11d04 <close_stdout@@Base+0xf4>
   11c1c:	ldr	r3, [pc, #228]	; 11d08 <close_stdout@@Base+0xf8>
   11c20:	add	r4, pc, r4
   11c24:	ldr	r3, [r4, r3]
   11c28:	ldr	r0, [r3]
   11c2c:	bl	13e34 <close_stdout@@Base+0x2224>
   11c30:	cmp	r0, #0
   11c34:	beq	11c5c <close_stdout@@Base+0x4c>
   11c38:	ldr	r3, [pc, #204]	; 11d0c <close_stdout@@Base+0xfc>
   11c3c:	add	r3, pc, r3
   11c40:	ldrb	r3, [r3, #4]
   11c44:	cmp	r3, #0
   11c48:	beq	11c7c <close_stdout@@Base+0x6c>
   11c4c:	bl	10f84 <__errno_location@plt>
   11c50:	ldr	r3, [r0]
   11c54:	cmp	r3, #32
   11c58:	bne	11c7c <close_stdout@@Base+0x6c>
   11c5c:	ldr	r3, [pc, #172]	; 11d10 <close_stdout@@Base+0x100>
   11c60:	ldr	r3, [r4, r3]
   11c64:	ldr	r0, [r3]
   11c68:	bl	13e34 <close_stdout@@Base+0x2224>
   11c6c:	cmp	r0, #0
   11c70:	bne	11cd0 <close_stdout@@Base+0xc0>
   11c74:	add	sp, sp, #12
   11c78:	pop	{r4, r5, r6, r7, pc}
   11c7c:	ldr	r1, [pc, #144]	; 11d14 <close_stdout@@Base+0x104>
   11c80:	mov	r0, #0
   11c84:	mov	r2, #5
   11c88:	add	r1, pc, r1
   11c8c:	bl	10e7c <dcgettext@plt>
   11c90:	ldr	r3, [pc, #128]	; 11d18 <close_stdout@@Base+0x108>
   11c94:	ldr	r5, [pc, r3]
   11c98:	cmp	r5, #0
   11c9c:	mov	r6, r0
   11ca0:	beq	11ce0 <close_stdout@@Base+0xd0>
   11ca4:	bl	10f84 <__errno_location@plt>
   11ca8:	ldr	r7, [r0]
   11cac:	mov	r0, r5
   11cb0:	bl	134c8 <close_stdout@@Base+0x18b8>
   11cb4:	ldr	r2, [pc, #96]	; 11d1c <close_stdout@@Base+0x10c>
   11cb8:	str	r6, [sp]
   11cbc:	mov	r1, r7
   11cc0:	add	r2, pc, r2
   11cc4:	mov	r3, r0
   11cc8:	mov	r0, #0
   11ccc:	bl	10f00 <error@plt>
   11cd0:	ldr	r3, [pc, #72]	; 11d20 <close_stdout@@Base+0x110>
   11cd4:	ldr	r3, [r4, r3]
   11cd8:	ldr	r0, [r3]
   11cdc:	bl	10e4c <_exit@plt>
   11ce0:	bl	10f84 <__errno_location@plt>
   11ce4:	ldr	r2, [pc, #56]	; 11d24 <close_stdout@@Base+0x114>
   11ce8:	add	r2, pc, r2
   11cec:	mov	r3, r0
   11cf0:	mov	r0, r5
   11cf4:	ldr	r1, [r3]
   11cf8:	mov	r3, r6
   11cfc:	bl	10f00 <error@plt>
   11d00:	b	11cd0 <close_stdout@@Base+0xc0>
   11d04:	ldrdeq	r4, [r1], -r8
   11d08:	strdeq	r0, [r0], -r4
   11d0c:	andeq	r4, r1, r8, lsl r5
   11d10:	andeq	r0, r0, r4, ror #1
   11d14:	strdeq	r2, [r0], -r8
   11d18:	andeq	r4, r1, r0, asr #9
   11d1c:	andeq	r2, r0, ip, asr #31
   11d20:	strdeq	r0, [r0], -r8
   11d24:	andeq	r2, r0, r8, lsr #31
   11d28:	ldrb	r3, [r0]
   11d2c:	cmp	r3, #47	; 0x2f
   11d30:	bne	11d4c <close_stdout@@Base+0x13c>
   11d34:	add	r2, r0, #1
   11d38:	mov	r0, r2
   11d3c:	add	r2, r2, #1
   11d40:	ldrb	r3, [r0]
   11d44:	cmp	r3, #47	; 0x2f
   11d48:	beq	11d38 <close_stdout@@Base+0x128>
   11d4c:	cmp	r3, #0
   11d50:	bxeq	lr
   11d54:	mov	r2, r0
   11d58:	mov	r1, #0
   11d5c:	cmp	r3, #47	; 0x2f
   11d60:	moveq	r1, #1
   11d64:	beq	11d74 <close_stdout@@Base+0x164>
   11d68:	cmp	r1, #0
   11d6c:	movne	r0, r2
   11d70:	movne	r1, #0
   11d74:	ldrb	r3, [r2, #1]!
   11d78:	cmp	r3, #0
   11d7c:	bne	11d5c <close_stdout@@Base+0x14c>
   11d80:	bx	lr
   11d84:	push	{r4, lr}
   11d88:	mov	r4, r0
   11d8c:	bl	10f6c <strlen@plt>
   11d90:	cmp	r0, #1
   11d94:	popls	{r4, pc}
   11d98:	sub	r3, r0, #1
   11d9c:	ldrb	r2, [r4, r3]
   11da0:	cmp	r2, #47	; 0x2f
   11da4:	popne	{r4, pc}
   11da8:	mov	r0, r3
   11dac:	cmp	r0, #1
   11db0:	sub	r3, r3, #1
   11db4:	beq	11dc8 <close_stdout@@Base+0x1b8>
   11db8:	ldrb	r2, [r4, r3]
   11dbc:	cmp	r2, #47	; 0x2f
   11dc0:	popne	{r4, pc}
   11dc4:	b	11da8 <close_stdout@@Base+0x198>
   11dc8:	pop	{r4, pc}
   11dcc:	push	{r3, r4, r5, r6, r7, lr}
   11dd0:	subs	r4, r0, #0
   11dd4:	ldr	r5, [pc, #172]	; 11e88 <close_stdout@@Base+0x278>
   11dd8:	add	r5, pc, r5
   11ddc:	beq	11e64 <close_stdout@@Base+0x254>
   11de0:	mov	r1, #47	; 0x2f
   11de4:	bl	11014 <strrchr@plt>
   11de8:	subs	r6, r0, #0
   11dec:	beq	11e48 <close_stdout@@Base+0x238>
   11df0:	add	r7, r6, #1
   11df4:	rsb	r3, r4, r7
   11df8:	cmp	r3, #6
   11dfc:	ble	11e48 <close_stdout@@Base+0x238>
   11e00:	ldr	r1, [pc, #132]	; 11e8c <close_stdout@@Base+0x27c>
   11e04:	sub	r0, r6, #6
   11e08:	mov	r2, #7
   11e0c:	add	r1, pc, r1
   11e10:	bl	11038 <strncmp@plt>
   11e14:	cmp	r0, #0
   11e18:	bne	11e48 <close_stdout@@Base+0x238>
   11e1c:	ldr	r1, [pc, #108]	; 11e90 <close_stdout@@Base+0x280>
   11e20:	mov	r0, r7
   11e24:	mov	r2, #3
   11e28:	add	r1, pc, r1
   11e2c:	bl	11038 <strncmp@plt>
   11e30:	cmp	r0, #0
   11e34:	movne	r4, r7
   11e38:	ldreq	r3, [pc, #84]	; 11e94 <close_stdout@@Base+0x284>
   11e3c:	addeq	r4, r6, #4
   11e40:	ldreq	r3, [r5, r3]
   11e44:	streq	r4, [r3]
   11e48:	ldr	r2, [pc, #72]	; 11e98 <close_stdout@@Base+0x288>
   11e4c:	ldr	r3, [pc, #72]	; 11e9c <close_stdout@@Base+0x28c>
   11e50:	ldr	r2, [r5, r2]
   11e54:	str	r4, [r2]
   11e58:	ldr	r3, [r5, r3]
   11e5c:	str	r4, [r3]
   11e60:	pop	{r3, r4, r5, r6, r7, pc}
   11e64:	ldr	r3, [pc, #52]	; 11ea0 <close_stdout@@Base+0x290>
   11e68:	mov	r1, #1
   11e6c:	ldr	r0, [pc, #48]	; 11ea4 <close_stdout@@Base+0x294>
   11e70:	mov	r2, #55	; 0x37
   11e74:	ldr	r3, [r5, r3]
   11e78:	add	r0, pc, r0
   11e7c:	ldr	r3, [r3]
   11e80:	bl	10eb8 <fwrite@plt>
   11e84:	bl	11044 <abort@plt>
   11e88:	andeq	r4, r1, r0, lsr #4
   11e8c:	andeq	r2, r0, r0, asr #29
   11e90:	andeq	r2, r0, ip, lsr #29
   11e94:	andeq	r0, r0, r8, lsl #2
   11e98:	andeq	r0, r0, r0, lsl #2
   11e9c:	strdeq	r0, [r0], -ip
   11ea0:	andeq	r0, r0, r4, ror #1
   11ea4:	andeq	r2, r0, ip, lsl lr
   11ea8:	push	{r3, lr}
   11eac:	mov	r3, r0
   11eb0:	mov	r2, #0
   11eb4:	cmp	r1, #8
   11eb8:	str	r2, [r3], #4
   11ebc:	add	r3, r3, #4
   11ec0:	str	r2, [r0, #4]
   11ec4:	str	r2, [r3], #4
   11ec8:	str	r2, [r3], #4
   11ecc:	str	r2, [r3], #4
   11ed0:	str	r2, [r3], #4
   11ed4:	str	r2, [r3], #4
   11ed8:	str	r2, [r3], #4
   11edc:	str	r2, [r3], #4
   11ee0:	str	r2, [r3], #4
   11ee4:	str	r2, [r3], #4
   11ee8:	str	r2, [r3]
   11eec:	beq	11ef8 <close_stdout@@Base+0x2e8>
   11ef0:	str	r1, [r0]
   11ef4:	pop	{r3, pc}
   11ef8:	bl	11044 <abort@plt>
   11efc:	push	{r4, r5, r6, lr}
   11f00:	mov	r4, r0
   11f04:	mov	r6, r1
   11f08:	mov	r0, #0
   11f0c:	mov	r1, r4
   11f10:	mov	r2, #5
   11f14:	bl	10e7c <dcgettext@plt>
   11f18:	cmp	r0, r4
   11f1c:	mov	r5, r0
   11f20:	beq	11f28 <close_stdout@@Base+0x318>
   11f24:	pop	{r4, r5, r6, pc}
   11f28:	bl	13eb4 <close_stdout@@Base+0x22a4>
   11f2c:	ldrb	r3, [r0]
   11f30:	bic	r3, r3, #32
   11f34:	cmp	r3, #85	; 0x55
   11f38:	bne	11fac <close_stdout@@Base+0x39c>
   11f3c:	ldrb	r3, [r0, #1]
   11f40:	bic	r3, r3, #32
   11f44:	cmp	r3, #84	; 0x54
   11f48:	bne	11f98 <close_stdout@@Base+0x388>
   11f4c:	ldrb	r3, [r0, #2]
   11f50:	bic	r3, r3, #32
   11f54:	cmp	r3, #70	; 0x46
   11f58:	bne	11f98 <close_stdout@@Base+0x388>
   11f5c:	ldrb	r3, [r0, #3]
   11f60:	cmp	r3, #45	; 0x2d
   11f64:	bne	11f98 <close_stdout@@Base+0x388>
   11f68:	ldrb	r3, [r0, #4]
   11f6c:	cmp	r3, #56	; 0x38
   11f70:	bne	11f98 <close_stdout@@Base+0x388>
   11f74:	ldrb	r3, [r0, #5]
   11f78:	cmp	r3, #0
   11f7c:	bne	11f98 <close_stdout@@Base+0x388>
   11f80:	ldrb	r3, [r5]
   11f84:	cmp	r3, #96	; 0x60
   11f88:	beq	12024 <close_stdout@@Base+0x414>
   11f8c:	ldr	r0, [pc, #180]	; 12048 <close_stdout@@Base+0x438>
   11f90:	add	r0, pc, r0
   11f94:	pop	{r4, r5, r6, pc}
   11f98:	cmp	r6, #7
   11f9c:	beq	12030 <close_stdout@@Base+0x420>
   11fa0:	ldr	r0, [pc, #164]	; 1204c <close_stdout@@Base+0x43c>
   11fa4:	add	r0, pc, r0
   11fa8:	pop	{r4, r5, r6, pc}
   11fac:	cmp	r3, #71	; 0x47
   11fb0:	bne	11f98 <close_stdout@@Base+0x388>
   11fb4:	ldrb	r3, [r0, #1]
   11fb8:	bic	r3, r3, #32
   11fbc:	cmp	r3, #66	; 0x42
   11fc0:	bne	11f98 <close_stdout@@Base+0x388>
   11fc4:	ldrb	r3, [r0, #2]
   11fc8:	cmp	r3, #49	; 0x31
   11fcc:	bne	11f98 <close_stdout@@Base+0x388>
   11fd0:	ldrb	r3, [r0, #3]
   11fd4:	cmp	r3, #56	; 0x38
   11fd8:	bne	11f98 <close_stdout@@Base+0x388>
   11fdc:	ldrb	r3, [r0, #4]
   11fe0:	cmp	r3, #48	; 0x30
   11fe4:	bne	11f98 <close_stdout@@Base+0x388>
   11fe8:	ldrb	r3, [r0, #5]
   11fec:	cmp	r3, #51	; 0x33
   11ff0:	bne	11f98 <close_stdout@@Base+0x388>
   11ff4:	ldrb	r3, [r0, #6]
   11ff8:	cmp	r3, #48	; 0x30
   11ffc:	bne	11f98 <close_stdout@@Base+0x388>
   12000:	ldrb	r3, [r0, #7]
   12004:	cmp	r3, #0
   12008:	bne	11f98 <close_stdout@@Base+0x388>
   1200c:	ldrb	r3, [r5]
   12010:	cmp	r3, #96	; 0x60
   12014:	beq	1203c <close_stdout@@Base+0x42c>
   12018:	ldr	r0, [pc, #48]	; 12050 <close_stdout@@Base+0x440>
   1201c:	add	r0, pc, r0
   12020:	pop	{r4, r5, r6, pc}
   12024:	ldr	r0, [pc, #40]	; 12054 <close_stdout@@Base+0x444>
   12028:	add	r0, pc, r0
   1202c:	pop	{r4, r5, r6, pc}
   12030:	ldr	r0, [pc, #32]	; 12058 <close_stdout@@Base+0x448>
   12034:	add	r0, pc, r0
   12038:	pop	{r4, r5, r6, pc}
   1203c:	ldr	r0, [pc, #24]	; 1205c <close_stdout@@Base+0x44c>
   12040:	add	r0, pc, r0
   12044:	pop	{r4, r5, r6, pc}
   12048:	andeq	r2, r0, r8, ror #26
   1204c:	andeq	r2, r0, ip, asr sp
   12050:	andeq	r2, r0, r0, ror #25
   12054:	andeq	r2, r0, r4, ror #25
   12058:	ldrdeq	r2, [r0], -r0
   1205c:	andeq	r2, r0, r8, asr #25
   12060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12064:	sub	sp, sp, #124	; 0x7c
   12068:	ldr	ip, [pc, #3304]	; 12d58 <close_stdout@@Base+0x1148>
   1206c:	mov	sl, r1
   12070:	str	r0, [sp, #40]	; 0x28
   12074:	mov	r8, r3
   12078:	ldr	r0, [pc, #3292]	; 12d5c <close_stdout@@Base+0x114c>
   1207c:	add	ip, pc, ip
   12080:	str	r2, [sp, #32]
   12084:	ldr	r1, [sp, #164]	; 0xa4
   12088:	mov	r3, ip
   1208c:	ldr	r0, [ip, r0]
   12090:	ldr	r2, [sp, #172]	; 0xac
   12094:	ubfx	r1, r1, #1, #1
   12098:	str	r1, [sp, #36]	; 0x24
   1209c:	str	r0, [sp, #56]	; 0x38
   120a0:	ldr	r0, [sp, #168]	; 0xa8
   120a4:	ldr	r1, [sp, #176]	; 0xb0
   120a8:	str	r2, [sp, #72]	; 0x48
   120ac:	str	r0, [sp, #48]	; 0x30
   120b0:	ldr	r0, [sp, #56]	; 0x38
   120b4:	str	r1, [sp, #68]	; 0x44
   120b8:	ldr	r3, [r0]
   120bc:	str	r3, [sp, #116]	; 0x74
   120c0:	bl	10ed0 <__ctype_get_mb_cur_max@plt>
   120c4:	ldr	r2, [sp, #160]	; 0xa0
   120c8:	str	r0, [sp, #64]	; 0x40
   120cc:	cmp	r2, #8
   120d0:	addls	pc, pc, r2, lsl #2
   120d4:	b	12c34 <close_stdout@@Base+0x1024>
   120d8:	b	120fc <close_stdout@@Base+0x4ec>
   120dc:	b	1294c <close_stdout@@Base+0xd3c>
   120e0:	b	1297c <close_stdout@@Base+0xd6c>
   120e4:	b	1282c <close_stdout@@Base+0xc1c>
   120e8:	b	1286c <close_stdout@@Base+0xc5c>
   120ec:	b	12898 <close_stdout@@Base+0xc88>
   120f0:	b	128b8 <close_stdout@@Base+0xca8>
   120f4:	b	128b8 <close_stdout@@Base+0xca8>
   120f8:	b	128b8 <close_stdout@@Base+0xca8>
   120fc:	mov	r2, #0
   12100:	str	r2, [sp, #36]	; 0x24
   12104:	mov	r9, r2
   12108:	str	r2, [sp, #24]
   1210c:	str	r2, [sp, #28]
   12110:	str	r2, [sp, #52]	; 0x34
   12114:	ldr	r0, [sp, #36]	; 0x24
   12118:	mov	fp, #0
   1211c:	ldr	r1, [sp, #24]
   12120:	eor	r2, r0, #1
   12124:	eor	r3, r1, #1
   12128:	and	r3, r2, r3
   1212c:	and	r2, r1, r0
   12130:	str	r3, [sp, #44]	; 0x2c
   12134:	str	r2, [sp, #76]	; 0x4c
   12138:	cmn	r8, #1
   1213c:	beq	124bc <close_stdout@@Base+0x8ac>
   12140:	subs	r3, fp, r8
   12144:	movne	r3, #1
   12148:	cmp	r3, #0
   1214c:	beq	124d4 <close_stdout@@Base+0x8c4>
   12150:	ldr	r3, [sp, #28]
   12154:	ldr	r0, [sp, #24]
   12158:	adds	r7, r3, #0
   1215c:	movne	r7, #1
   12160:	ands	r6, r7, r0
   12164:	bne	129c0 <close_stdout@@Base+0xdb0>
   12168:	ldr	r1, [sp, #32]
   1216c:	add	r5, r1, fp
   12170:	ldrb	r4, [r5]
   12174:	cmp	r4, #126	; 0x7e
   12178:	addls	pc, pc, r4, lsl #2
   1217c:	b	12740 <close_stdout@@Base+0xb30>
   12180:	b	1264c <close_stdout@@Base+0xa3c>
   12184:	b	12740 <close_stdout@@Base+0xb30>
   12188:	b	12740 <close_stdout@@Base+0xb30>
   1218c:	b	12740 <close_stdout@@Base+0xb30>
   12190:	b	12740 <close_stdout@@Base+0xb30>
   12194:	b	12740 <close_stdout@@Base+0xb30>
   12198:	b	12740 <close_stdout@@Base+0xb30>
   1219c:	b	12634 <close_stdout@@Base+0xa24>
   121a0:	b	1261c <close_stdout@@Base+0xa0c>
   121a4:	b	12644 <close_stdout@@Base+0xa34>
   121a8:	b	1263c <close_stdout@@Base+0xa2c>
   121ac:	b	1262c <close_stdout@@Base+0xa1c>
   121b0:	b	12624 <close_stdout@@Base+0xa14>
   121b4:	b	125e8 <close_stdout@@Base+0x9d8>
   121b8:	b	12740 <close_stdout@@Base+0xb30>
   121bc:	b	12740 <close_stdout@@Base+0xb30>
   121c0:	b	12740 <close_stdout@@Base+0xb30>
   121c4:	b	12740 <close_stdout@@Base+0xb30>
   121c8:	b	12740 <close_stdout@@Base+0xb30>
   121cc:	b	12740 <close_stdout@@Base+0xb30>
   121d0:	b	12740 <close_stdout@@Base+0xb30>
   121d4:	b	12740 <close_stdout@@Base+0xb30>
   121d8:	b	12740 <close_stdout@@Base+0xb30>
   121dc:	b	12740 <close_stdout@@Base+0xb30>
   121e0:	b	12740 <close_stdout@@Base+0xb30>
   121e4:	b	12740 <close_stdout@@Base+0xb30>
   121e8:	b	12740 <close_stdout@@Base+0xb30>
   121ec:	b	12740 <close_stdout@@Base+0xb30>
   121f0:	b	12740 <close_stdout@@Base+0xb30>
   121f4:	b	12740 <close_stdout@@Base+0xb30>
   121f8:	b	12740 <close_stdout@@Base+0xb30>
   121fc:	b	12740 <close_stdout@@Base+0xb30>
   12200:	b	12574 <close_stdout@@Base+0x964>
   12204:	b	12574 <close_stdout@@Base+0x964>
   12208:	b	12574 <close_stdout@@Base+0x964>
   1220c:	b	1256c <close_stdout@@Base+0x95c>
   12210:	b	12574 <close_stdout@@Base+0x964>
   12214:	b	12448 <close_stdout@@Base+0x838>
   12218:	b	12574 <close_stdout@@Base+0x964>
   1221c:	b	126e8 <close_stdout@@Base+0xad8>
   12220:	b	12574 <close_stdout@@Base+0x964>
   12224:	b	12574 <close_stdout@@Base+0x964>
   12228:	b	12574 <close_stdout@@Base+0x964>
   1222c:	b	12448 <close_stdout@@Base+0x838>
   12230:	b	12448 <close_stdout@@Base+0x838>
   12234:	b	12448 <close_stdout@@Base+0x838>
   12238:	b	12448 <close_stdout@@Base+0x838>
   1223c:	b	12448 <close_stdout@@Base+0x838>
   12240:	b	12448 <close_stdout@@Base+0x838>
   12244:	b	12448 <close_stdout@@Base+0x838>
   12248:	b	12448 <close_stdout@@Base+0x838>
   1224c:	b	12448 <close_stdout@@Base+0x838>
   12250:	b	12448 <close_stdout@@Base+0x838>
   12254:	b	12448 <close_stdout@@Base+0x838>
   12258:	b	12448 <close_stdout@@Base+0x838>
   1225c:	b	12448 <close_stdout@@Base+0x838>
   12260:	b	12448 <close_stdout@@Base+0x838>
   12264:	b	12448 <close_stdout@@Base+0x838>
   12268:	b	12448 <close_stdout@@Base+0x838>
   1226c:	b	12574 <close_stdout@@Base+0x964>
   12270:	b	12574 <close_stdout@@Base+0x964>
   12274:	b	12574 <close_stdout@@Base+0x964>
   12278:	b	12574 <close_stdout@@Base+0x964>
   1227c:	b	1237c <close_stdout@@Base+0x76c>
   12280:	b	12740 <close_stdout@@Base+0xb30>
   12284:	b	12448 <close_stdout@@Base+0x838>
   12288:	b	12448 <close_stdout@@Base+0x838>
   1228c:	b	12448 <close_stdout@@Base+0x838>
   12290:	b	12448 <close_stdout@@Base+0x838>
   12294:	b	12448 <close_stdout@@Base+0x838>
   12298:	b	12448 <close_stdout@@Base+0x838>
   1229c:	b	12448 <close_stdout@@Base+0x838>
   122a0:	b	12448 <close_stdout@@Base+0x838>
   122a4:	b	12448 <close_stdout@@Base+0x838>
   122a8:	b	12448 <close_stdout@@Base+0x838>
   122ac:	b	12448 <close_stdout@@Base+0x838>
   122b0:	b	12448 <close_stdout@@Base+0x838>
   122b4:	b	12448 <close_stdout@@Base+0x838>
   122b8:	b	12448 <close_stdout@@Base+0x838>
   122bc:	b	12448 <close_stdout@@Base+0x838>
   122c0:	b	12448 <close_stdout@@Base+0x838>
   122c4:	b	12448 <close_stdout@@Base+0x838>
   122c8:	b	12448 <close_stdout@@Base+0x838>
   122cc:	b	12448 <close_stdout@@Base+0x838>
   122d0:	b	12448 <close_stdout@@Base+0x838>
   122d4:	b	12448 <close_stdout@@Base+0x838>
   122d8:	b	12448 <close_stdout@@Base+0x838>
   122dc:	b	12448 <close_stdout@@Base+0x838>
   122e0:	b	12448 <close_stdout@@Base+0x838>
   122e4:	b	12448 <close_stdout@@Base+0x838>
   122e8:	b	12448 <close_stdout@@Base+0x838>
   122ec:	b	12574 <close_stdout@@Base+0x964>
   122f0:	b	126cc <close_stdout@@Base+0xabc>
   122f4:	b	12448 <close_stdout@@Base+0x838>
   122f8:	b	12574 <close_stdout@@Base+0x964>
   122fc:	b	12448 <close_stdout@@Base+0x838>
   12300:	b	12574 <close_stdout@@Base+0x964>
   12304:	b	12448 <close_stdout@@Base+0x838>
   12308:	b	12448 <close_stdout@@Base+0x838>
   1230c:	b	12448 <close_stdout@@Base+0x838>
   12310:	b	12448 <close_stdout@@Base+0x838>
   12314:	b	12448 <close_stdout@@Base+0x838>
   12318:	b	12448 <close_stdout@@Base+0x838>
   1231c:	b	12448 <close_stdout@@Base+0x838>
   12320:	b	12448 <close_stdout@@Base+0x838>
   12324:	b	12448 <close_stdout@@Base+0x838>
   12328:	b	12448 <close_stdout@@Base+0x838>
   1232c:	b	12448 <close_stdout@@Base+0x838>
   12330:	b	12448 <close_stdout@@Base+0x838>
   12334:	b	12448 <close_stdout@@Base+0x838>
   12338:	b	12448 <close_stdout@@Base+0x838>
   1233c:	b	12448 <close_stdout@@Base+0x838>
   12340:	b	12448 <close_stdout@@Base+0x838>
   12344:	b	12448 <close_stdout@@Base+0x838>
   12348:	b	12448 <close_stdout@@Base+0x838>
   1234c:	b	12448 <close_stdout@@Base+0x838>
   12350:	b	12448 <close_stdout@@Base+0x838>
   12354:	b	12448 <close_stdout@@Base+0x838>
   12358:	b	12448 <close_stdout@@Base+0x838>
   1235c:	b	12448 <close_stdout@@Base+0x838>
   12360:	b	12448 <close_stdout@@Base+0x838>
   12364:	b	12448 <close_stdout@@Base+0x838>
   12368:	b	12448 <close_stdout@@Base+0x838>
   1236c:	b	12554 <close_stdout@@Base+0x944>
   12370:	b	12574 <close_stdout@@Base+0x964>
   12374:	b	12554 <close_stdout@@Base+0x944>
   12378:	b	1256c <close_stdout@@Base+0x95c>
   1237c:	ldr	r3, [sp, #160]	; 0xa0
   12380:	cmp	r3, #2
   12384:	beq	12c10 <close_stdout@@Base+0x1000>
   12388:	cmp	r3, #3
   1238c:	bne	12448 <close_stdout@@Base+0x838>
   12390:	ldr	r1, [sp, #164]	; 0xa4
   12394:	tst	r1, #4
   12398:	beq	12448 <close_stdout@@Base+0x838>
   1239c:	add	r3, fp, #2
   123a0:	cmp	r8, r3
   123a4:	bls	12448 <close_stdout@@Base+0x838>
   123a8:	ldrb	r2, [r5, #1]
   123ac:	mov	r1, #1
   123b0:	cmp	r2, #63	; 0x3f
   123b4:	bne	12448 <close_stdout@@Base+0x838>
   123b8:	ldr	r0, [sp, #32]
   123bc:	ldrb	ip, [r0, r3]
   123c0:	sub	r0, ip, #33	; 0x21
   123c4:	uxtb	r0, r0
   123c8:	cmp	r0, #29
   123cc:	bhi	12448 <close_stdout@@Base+0x838>
   123d0:	lsl	r1, r1, r0
   123d4:	movw	r0, #20929	; 0x51c1
   123d8:	movt	r0, #14336	; 0x3800
   123dc:	and	r0, r1, r0
   123e0:	cmp	r0, #0
   123e4:	beq	12448 <close_stdout@@Base+0x838>
   123e8:	ldr	r1, [sp, #36]	; 0x24
   123ec:	cmp	r1, #0
   123f0:	bne	12590 <close_stdout@@Base+0x980>
   123f4:	cmp	r9, sl
   123f8:	mov	r4, ip
   123fc:	mov	fp, r3
   12400:	ldrcc	r0, [sp, #40]	; 0x28
   12404:	strbcc	r2, [r0, r9]
   12408:	add	r2, r9, #1
   1240c:	cmp	sl, r2
   12410:	ldrhi	r0, [sp, #40]	; 0x28
   12414:	movhi	r1, #34	; 0x22
   12418:	strbhi	r1, [r0, r2]
   1241c:	add	r2, r9, #2
   12420:	cmp	sl, r2
   12424:	ldrhi	r0, [sp, #40]	; 0x28
   12428:	movhi	r1, #34	; 0x22
   1242c:	strbhi	r1, [r0, r2]
   12430:	add	r2, r9, #3
   12434:	cmp	sl, r2
   12438:	add	r9, r9, #4
   1243c:	ldrhi	r0, [sp, #40]	; 0x28
   12440:	movhi	r1, #63	; 0x3f
   12444:	strbhi	r1, [r0, r2]
   12448:	ldr	r0, [sp, #44]	; 0x2c
   1244c:	cmp	r0, #0
   12450:	bne	12478 <close_stdout@@Base+0x868>
   12454:	ldr	r1, [sp, #48]	; 0x30
   12458:	cmp	r1, #0
   1245c:	beq	12478 <close_stdout@@Base+0x868>
   12460:	ubfx	r2, r4, #5, #8
   12464:	and	r3, r4, #31
   12468:	ldr	r2, [r1, r2, lsl #2]
   1246c:	lsr	r3, r2, r3
   12470:	tst	r3, #1
   12474:	bne	12480 <close_stdout@@Base+0x870>
   12478:	cmp	r6, #0
   1247c:	beq	124a0 <close_stdout@@Base+0x890>
   12480:	ldr	r2, [sp, #36]	; 0x24
   12484:	cmp	r2, #0
   12488:	bne	12590 <close_stdout@@Base+0x980>
   1248c:	cmp	r9, sl
   12490:	ldrcc	r0, [sp, #40]	; 0x28
   12494:	movcc	r3, #92	; 0x5c
   12498:	strbcc	r3, [r0, r9]
   1249c:	add	r9, r9, #1
   124a0:	add	fp, fp, #1
   124a4:	cmp	r9, sl
   124a8:	ldrcc	r1, [sp, #40]	; 0x28
   124ac:	strbcc	r4, [r1, r9]
   124b0:	cmn	r8, #1
   124b4:	add	r9, r9, #1
   124b8:	bne	12140 <close_stdout@@Base+0x530>
   124bc:	ldr	r2, [sp, #32]
   124c0:	ldrb	r3, [r2, fp]
   124c4:	adds	r3, r3, #0
   124c8:	movne	r3, #1
   124cc:	cmp	r3, #0
   124d0:	bne	12150 <close_stdout@@Base+0x540>
   124d4:	ldr	r3, [sp, #160]	; 0xa0
   124d8:	cmp	r9, #0
   124dc:	cmpeq	r3, #2
   124e0:	bne	124f0 <close_stdout@@Base+0x8e0>
   124e4:	ldr	r0, [sp, #36]	; 0x24
   124e8:	cmp	r0, #0
   124ec:	bne	12590 <close_stdout@@Base+0x980>
   124f0:	ldr	r1, [sp, #36]	; 0x24
   124f4:	ldr	r2, [sp, #52]	; 0x34
   124f8:	eor	r3, r1, #1
   124fc:	cmp	r2, #0
   12500:	moveq	r3, #0
   12504:	andne	r3, r3, #1
   12508:	cmp	r3, #0
   1250c:	beq	12538 <close_stdout@@Base+0x928>
   12510:	ldrb	r3, [r2]
   12514:	cmp	r3, #0
   12518:	beq	12538 <close_stdout@@Base+0x928>
   1251c:	ldr	r1, [sp, #40]	; 0x28
   12520:	cmp	sl, r9
   12524:	strbhi	r3, [r1, r9]
   12528:	ldrb	r3, [r2, #1]!
   1252c:	add	r9, r9, #1
   12530:	cmp	r3, #0
   12534:	bne	12520 <close_stdout@@Base+0x910>
   12538:	cmp	r9, sl
   1253c:	movcs	r0, r9
   12540:	ldrcc	r1, [sp, #40]	; 0x28
   12544:	movcc	r3, #0
   12548:	movcc	r0, r9
   1254c:	strbcc	r3, [r1, r9]
   12550:	b	125cc <close_stdout@@Base+0x9bc>
   12554:	cmn	r8, #1
   12558:	beq	12c20 <close_stdout@@Base+0x1010>
   1255c:	subs	r3, r8, #1
   12560:	movne	r3, #1
   12564:	cmp	r3, #0
   12568:	bne	12448 <close_stdout@@Base+0x838>
   1256c:	cmp	fp, #0
   12570:	bne	12448 <close_stdout@@Base+0x838>
   12574:	ldr	r3, [sp, #36]	; 0x24
   12578:	ldr	r0, [sp, #160]	; 0xa0
   1257c:	cmp	r0, #2
   12580:	movne	r3, #0
   12584:	andeq	r3, r3, #1
   12588:	cmp	r3, #0
   1258c:	beq	12448 <close_stdout@@Base+0x838>
   12590:	ldr	r2, [sp, #164]	; 0xa4
   12594:	mov	ip, #0
   12598:	ldr	r0, [sp, #160]	; 0xa0
   1259c:	bic	r3, r2, #2
   125a0:	ldr	r1, [sp, #72]	; 0x48
   125a4:	ldr	r2, [sp, #68]	; 0x44
   125a8:	stm	sp, {r0, r3}
   125ac:	mov	r3, r8
   125b0:	str	r1, [sp, #12]
   125b4:	mov	r1, sl
   125b8:	str	r2, [sp, #16]
   125bc:	ldr	r0, [sp, #40]	; 0x28
   125c0:	ldr	r2, [sp, #32]
   125c4:	str	ip, [sp, #8]
   125c8:	bl	12060 <close_stdout@@Base+0x450>
   125cc:	ldr	r1, [sp, #56]	; 0x38
   125d0:	ldr	r2, [sp, #116]	; 0x74
   125d4:	ldr	r3, [r1]
   125d8:	cmp	r2, r3
   125dc:	bne	12d10 <close_stdout@@Base+0x1100>
   125e0:	add	sp, sp, #124	; 0x7c
   125e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125e8:	mov	r3, #114	; 0x72
   125ec:	ldr	r2, [sp, #36]	; 0x24
   125f0:	ldr	r0, [sp, #160]	; 0xa0
   125f4:	cmp	r0, #2
   125f8:	movne	r2, #0
   125fc:	andeq	r2, r2, #1
   12600:	cmp	r2, #0
   12604:	bne	12590 <close_stdout@@Base+0x980>
   12608:	ldr	r1, [sp, #24]
   1260c:	cmp	r1, #0
   12610:	beq	12448 <close_stdout@@Base+0x838>
   12614:	mov	r4, r3
   12618:	b	12480 <close_stdout@@Base+0x870>
   1261c:	mov	r3, #98	; 0x62
   12620:	b	12608 <close_stdout@@Base+0x9f8>
   12624:	mov	r3, #102	; 0x66
   12628:	b	12608 <close_stdout@@Base+0x9f8>
   1262c:	mov	r3, #118	; 0x76
   12630:	b	12608 <close_stdout@@Base+0x9f8>
   12634:	mov	r3, #97	; 0x61
   12638:	b	12608 <close_stdout@@Base+0x9f8>
   1263c:	mov	r3, #110	; 0x6e
   12640:	b	125ec <close_stdout@@Base+0x9dc>
   12644:	mov	r3, #116	; 0x74
   12648:	b	125ec <close_stdout@@Base+0x9dc>
   1264c:	ldr	r2, [sp, #24]
   12650:	cmp	r2, #0
   12654:	beq	12bfc <close_stdout@@Base+0xfec>
   12658:	ldr	r3, [sp, #36]	; 0x24
   1265c:	cmp	r3, #0
   12660:	bne	12590 <close_stdout@@Base+0x980>
   12664:	cmp	r9, sl
   12668:	add	r2, r9, #1
   1266c:	ldrcc	r0, [sp, #40]	; 0x28
   12670:	movcc	r3, #92	; 0x5c
   12674:	strbcc	r3, [r0, r9]
   12678:	add	r3, fp, #1
   1267c:	cmp	r8, r3
   12680:	bls	126c0 <close_stdout@@Base+0xab0>
   12684:	ldr	r1, [sp, #32]
   12688:	ldrb	r3, [r1, r3]
   1268c:	sub	r3, r3, #48	; 0x30
   12690:	cmp	r3, #9
   12694:	bhi	126c0 <close_stdout@@Base+0xab0>
   12698:	cmp	sl, r2
   1269c:	ldrhi	r0, [sp, #40]	; 0x28
   126a0:	movhi	r3, #48	; 0x30
   126a4:	strbhi	r3, [r0, r2]
   126a8:	add	r3, r9, #2
   126ac:	cmp	sl, r3
   126b0:	ldrhi	r1, [sp, #40]	; 0x28
   126b4:	movhi	r2, #48	; 0x30
   126b8:	strbhi	r2, [r1, r3]
   126bc:	add	r2, r9, #3
   126c0:	mov	r9, r2
   126c4:	mov	r4, #48	; 0x30
   126c8:	b	12454 <close_stdout@@Base+0x844>
   126cc:	ldr	r1, [sp, #76]	; 0x4c
   126d0:	cmp	r1, #0
   126d4:	beq	126e0 <close_stdout@@Base+0xad0>
   126d8:	cmp	r7, #0
   126dc:	bne	124a0 <close_stdout@@Base+0x890>
   126e0:	mov	r3, r4
   126e4:	b	125ec <close_stdout@@Base+0x9dc>
   126e8:	ldr	r1, [sp, #160]	; 0xa0
   126ec:	cmp	r1, #2
   126f0:	bne	12448 <close_stdout@@Base+0x838>
   126f4:	ldr	r2, [sp, #36]	; 0x24
   126f8:	cmp	r2, #0
   126fc:	bne	12590 <close_stdout@@Base+0x980>
   12700:	cmp	r9, sl
   12704:	ldrcc	r0, [sp, #40]	; 0x28
   12708:	movcc	r3, #39	; 0x27
   1270c:	strbcc	r3, [r0, r9]
   12710:	add	r3, r9, #1
   12714:	cmp	sl, r3
   12718:	ldrhi	r1, [sp, #40]	; 0x28
   1271c:	movhi	r2, #92	; 0x5c
   12720:	strbhi	r2, [r1, r3]
   12724:	add	r3, r9, #2
   12728:	cmp	sl, r3
   1272c:	add	r9, r9, #3
   12730:	ldrhi	r0, [sp, #40]	; 0x28
   12734:	movhi	r2, #39	; 0x27
   12738:	strbhi	r2, [r0, r3]
   1273c:	b	12448 <close_stdout@@Base+0x838>
   12740:	ldr	r1, [sp, #64]	; 0x40
   12744:	cmp	r1, #1
   12748:	bne	12a40 <close_stdout@@Base+0xe30>
   1274c:	bl	10f54 <__ctype_b_loc@plt>
   12750:	ldr	r2, [sp, #64]	; 0x40
   12754:	sxth	r3, r4
   12758:	str	r2, [sp, #60]	; 0x3c
   1275c:	lsl	r3, r3, #1
   12760:	ldr	r2, [r0]
   12764:	ldrh	r2, [r2, r3]
   12768:	eor	r2, r2, #16384	; 0x4000
   1276c:	ubfx	r2, r2, #14, #1
   12770:	ldr	r1, [sp, #24]
   12774:	ands	r2, r2, r1
   12778:	beq	12448 <close_stdout@@Base+0x838>
   1277c:	ldr	r3, [sp, #60]	; 0x3c
   12780:	mov	r0, #92	; 0x5c
   12784:	ldr	r7, [sp, #36]	; 0x24
   12788:	add	r1, r3, fp
   1278c:	str	r8, [sp, #60]	; 0x3c
   12790:	ldr	r3, [sp, #40]	; 0x28
   12794:	b	127f8 <close_stdout@@Base+0xbe8>
   12798:	cmp	r7, #0
   1279c:	bne	12c38 <close_stdout@@Base+0x1028>
   127a0:	add	ip, r9, #1
   127a4:	cmp	r9, sl
   127a8:	strbcc	r0, [r3, r9]
   127ac:	cmp	sl, ip
   127b0:	lsrhi	r8, r4, #6
   127b4:	addhi	r8, r8, #48	; 0x30
   127b8:	strbhi	r8, [r3, ip]
   127bc:	add	ip, r9, #2
   127c0:	add	r9, r9, #3
   127c4:	cmp	sl, ip
   127c8:	ubfxhi	r8, r4, #3, #3
   127cc:	and	r4, r4, #7
   127d0:	add	r4, r4, #48	; 0x30
   127d4:	addhi	r8, r8, #48	; 0x30
   127d8:	strbhi	r8, [r3, ip]
   127dc:	add	fp, fp, #1
   127e0:	cmp	r1, fp
   127e4:	bls	12824 <close_stdout@@Base+0xc14>
   127e8:	cmp	r9, sl
   127ec:	strbcc	r4, [r3, r9]
   127f0:	ldrb	r4, [r5, #1]!
   127f4:	add	r9, r9, #1
   127f8:	cmp	r2, #0
   127fc:	bne	12798 <close_stdout@@Base+0xb88>
   12800:	cmp	r6, #0
   12804:	beq	127dc <close_stdout@@Base+0xbcc>
   12808:	add	fp, fp, #1
   1280c:	cmp	r9, sl
   12810:	strbcc	r0, [r3, r9]
   12814:	cmp	r1, fp
   12818:	add	r9, r9, #1
   1281c:	mov	r6, #0
   12820:	bhi	127e8 <close_stdout@@Base+0xbd8>
   12824:	ldr	r8, [sp, #60]	; 0x3c
   12828:	b	124a4 <close_stdout@@Base+0x894>
   1282c:	ldr	r3, [sp, #36]	; 0x24
   12830:	cmp	r3, #0
   12834:	bne	12d38 <close_stdout@@Base+0x1128>
   12838:	cmp	sl, #0
   1283c:	beq	12c50 <close_stdout@@Base+0x1040>
   12840:	ldr	r1, [sp, #40]	; 0x28
   12844:	mov	r0, #1
   12848:	ldr	r2, [pc, #1296]	; 12d60 <close_stdout@@Base+0x1150>
   1284c:	mov	r3, #34	; 0x22
   12850:	str	r0, [sp, #24]
   12854:	mov	r9, r0
   12858:	add	r2, pc, r2
   1285c:	str	r0, [sp, #28]
   12860:	strb	r3, [r1]
   12864:	str	r2, [sp, #52]	; 0x34
   12868:	b	12114 <close_stdout@@Base+0x504>
   1286c:	ldr	r3, [pc, #1264]	; 12d64 <close_stdout@@Base+0x1154>
   12870:	mov	r2, #1
   12874:	mov	r0, #3
   12878:	str	r2, [sp, #36]	; 0x24
   1287c:	add	r3, pc, r3
   12880:	str	r2, [sp, #24]
   12884:	str	r3, [sp, #52]	; 0x34
   12888:	mov	r9, #0
   1288c:	str	r2, [sp, #28]
   12890:	str	r0, [sp, #160]	; 0xa0
   12894:	b	12114 <close_stdout@@Base+0x504>
   12898:	mov	r0, #0
   1289c:	mov	r1, #1
   128a0:	str	r0, [sp, #36]	; 0x24
   128a4:	mov	r9, r0
   128a8:	str	r1, [sp, #24]
   128ac:	str	r0, [sp, #28]
   128b0:	str	r0, [sp, #52]	; 0x34
   128b4:	b	12114 <close_stdout@@Base+0x504>
   128b8:	ldr	r3, [sp, #160]	; 0xa0
   128bc:	cmp	r3, #8
   128c0:	beq	128ec <close_stdout@@Base+0xcdc>
   128c4:	ldr	r0, [pc, #1180]	; 12d68 <close_stdout@@Base+0x1158>
   128c8:	mov	r1, r3
   128cc:	add	r0, pc, r0
   128d0:	bl	11efc <close_stdout@@Base+0x2ec>
   128d4:	ldr	r1, [sp, #160]	; 0xa0
   128d8:	str	r0, [sp, #72]	; 0x48
   128dc:	ldr	r0, [pc, #1160]	; 12d6c <close_stdout@@Base+0x115c>
   128e0:	add	r0, pc, r0
   128e4:	bl	11efc <close_stdout@@Base+0x2ec>
   128e8:	str	r0, [sp, #68]	; 0x44
   128ec:	ldr	r0, [sp, #36]	; 0x24
   128f0:	cmp	r0, #0
   128f4:	movne	r9, #0
   128f8:	bne	12930 <close_stdout@@Base+0xd20>
   128fc:	ldr	r1, [sp, #72]	; 0x48
   12900:	ldrb	r3, [r1]
   12904:	cmp	r3, #0
   12908:	beq	12d08 <close_stdout@@Base+0x10f8>
   1290c:	mov	r2, r1
   12910:	ldr	r1, [sp, #40]	; 0x28
   12914:	mov	r9, r0
   12918:	cmp	r9, sl
   1291c:	strbcc	r3, [r1, r9]
   12920:	ldrb	r3, [r2, #1]!
   12924:	add	r9, r9, #1
   12928:	cmp	r3, #0
   1292c:	bne	12918 <close_stdout@@Base+0xd08>
   12930:	ldr	r0, [sp, #68]	; 0x44
   12934:	str	r0, [sp, #52]	; 0x34
   12938:	bl	10f6c <strlen@plt>
   1293c:	mov	r2, #1
   12940:	str	r2, [sp, #24]
   12944:	str	r0, [sp, #28]
   12948:	b	12114 <close_stdout@@Base+0x504>
   1294c:	ldr	r3, [pc, #1052]	; 12d70 <close_stdout@@Base+0x1160>
   12950:	mov	r2, #0
   12954:	mov	r1, #1
   12958:	mov	r0, #2
   1295c:	add	r3, pc, r3
   12960:	str	r1, [sp, #36]	; 0x24
   12964:	str	r2, [sp, #24]
   12968:	mov	r9, r2
   1296c:	str	r1, [sp, #28]
   12970:	str	r3, [sp, #52]	; 0x34
   12974:	str	r0, [sp, #160]	; 0xa0
   12978:	b	12114 <close_stdout@@Base+0x504>
   1297c:	ldr	r3, [sp, #36]	; 0x24
   12980:	cmp	r3, #0
   12984:	bne	12d14 <close_stdout@@Base+0x1104>
   12988:	cmp	sl, #0
   1298c:	beq	12c70 <close_stdout@@Base+0x1060>
   12990:	ldr	r1, [sp, #40]	; 0x28
   12994:	mov	r3, #39	; 0x27
   12998:	ldr	r2, [sp, #36]	; 0x24
   1299c:	mov	r0, #1
   129a0:	mov	r9, r0
   129a4:	str	r0, [sp, #28]
   129a8:	strb	r3, [r1]
   129ac:	ldr	r3, [pc, #960]	; 12d74 <close_stdout@@Base+0x1164>
   129b0:	str	r2, [sp, #24]
   129b4:	add	r3, pc, r3
   129b8:	str	r3, [sp, #52]	; 0x34
   129bc:	b	12114 <close_stdout@@Base+0x504>
   129c0:	ldr	r2, [sp, #28]
   129c4:	cmp	r2, #1
   129c8:	add	r4, fp, r2
   129cc:	movls	r3, #0
   129d0:	movhi	r3, #1
   129d4:	cmn	r8, #1
   129d8:	movne	r3, #0
   129dc:	cmp	r3, #0
   129e0:	beq	129f0 <close_stdout@@Base+0xde0>
   129e4:	ldr	r0, [sp, #32]
   129e8:	bl	10f6c <strlen@plt>
   129ec:	mov	r8, r0
   129f0:	cmp	r8, r4
   129f4:	ldrcc	r3, [sp, #32]
   129f8:	movcc	r6, #0
   129fc:	addcc	r5, r3, fp
   12a00:	bcc	12170 <close_stdout@@Base+0x560>
   12a04:	ldr	r0, [sp, #32]
   12a08:	ldr	r1, [sp, #52]	; 0x34
   12a0c:	add	r5, r0, fp
   12a10:	ldr	r2, [sp, #28]
   12a14:	mov	r0, r5
   12a18:	bl	10e70 <memcmp@plt>
   12a1c:	cmp	r0, #0
   12a20:	bne	12a38 <close_stdout@@Base+0xe28>
   12a24:	ldr	r1, [sp, #36]	; 0x24
   12a28:	cmp	r1, #0
   12a2c:	bne	12590 <close_stdout@@Base+0x980>
   12a30:	mov	r6, #1
   12a34:	b	12170 <close_stdout@@Base+0x560>
   12a38:	mov	r6, #0
   12a3c:	b	12170 <close_stdout@@Base+0x560>
   12a40:	add	r7, sp, #108	; 0x6c
   12a44:	cmn	r8, #1
   12a48:	mov	r3, #0
   12a4c:	str	r3, [sp, #108]	; 0x6c
   12a50:	str	r3, [r7, #4]
   12a54:	beq	12c40 <close_stdout@@Base+0x1030>
   12a58:	mov	r1, #0
   12a5c:	ldr	r0, [sp, #32]
   12a60:	mov	ip, #1
   12a64:	str	r9, [sp, #88]	; 0x58
   12a68:	str	r6, [sp, #96]	; 0x60
   12a6c:	mov	r9, r1
   12a70:	str	r5, [sp, #100]	; 0x64
   12a74:	mov	r6, ip
   12a78:	mov	r5, r7
   12a7c:	add	r3, sp, #104	; 0x68
   12a80:	sub	r0, r0, #1
   12a84:	str	r3, [sp, #80]	; 0x50
   12a88:	str	r0, [sp, #84]	; 0x54
   12a8c:	str	r1, [sp, #60]	; 0x3c
   12a90:	str	r4, [sp, #92]	; 0x5c
   12a94:	ldr	r2, [sp, #32]
   12a98:	add	r7, r9, fp
   12a9c:	add	r0, sp, #104	; 0x68
   12aa0:	mov	r3, r5
   12aa4:	add	r4, r2, r7
   12aa8:	rsb	r2, r7, r8
   12aac:	mov	r1, r4
   12ab0:	bl	10ef4 <mbrtowc@plt>
   12ab4:	subs	r2, r0, #0
   12ab8:	beq	12bc4 <close_stdout@@Base+0xfb4>
   12abc:	cmn	r2, #1
   12ac0:	beq	12cec <close_stdout@@Base+0x10dc>
   12ac4:	cmn	r2, #2
   12ac8:	beq	12c90 <close_stdout@@Base+0x1080>
   12acc:	ldr	r3, [sp, #36]	; 0x24
   12ad0:	ldr	r0, [sp, #160]	; 0xa0
   12ad4:	cmp	r0, #2
   12ad8:	movne	r3, #0
   12adc:	andeq	r3, r3, #1
   12ae0:	cmp	r3, #0
   12ae4:	beq	12ba0 <close_stdout@@Base+0xf90>
   12ae8:	cmp	r2, #1
   12aec:	beq	12ba0 <close_stdout@@Base+0xf90>
   12af0:	ldr	r1, [sp, #84]	; 0x54
   12af4:	add	r3, r1, r2
   12af8:	add	r7, r3, r7
   12afc:	ldrb	r3, [r4, #1]!
   12b00:	sub	r3, r3, #91	; 0x5b
   12b04:	cmp	r3, #33	; 0x21
   12b08:	addls	pc, pc, r3, lsl #2
   12b0c:	b	12b98 <close_stdout@@Base+0xf88>
   12b10:	b	12590 <close_stdout@@Base+0x980>
   12b14:	b	12590 <close_stdout@@Base+0x980>
   12b18:	b	12b98 <close_stdout@@Base+0xf88>
   12b1c:	b	12590 <close_stdout@@Base+0x980>
   12b20:	b	12b98 <close_stdout@@Base+0xf88>
   12b24:	b	12590 <close_stdout@@Base+0x980>
   12b28:	b	12b98 <close_stdout@@Base+0xf88>
   12b2c:	b	12b98 <close_stdout@@Base+0xf88>
   12b30:	b	12b98 <close_stdout@@Base+0xf88>
   12b34:	b	12b98 <close_stdout@@Base+0xf88>
   12b38:	b	12b98 <close_stdout@@Base+0xf88>
   12b3c:	b	12b98 <close_stdout@@Base+0xf88>
   12b40:	b	12b98 <close_stdout@@Base+0xf88>
   12b44:	b	12b98 <close_stdout@@Base+0xf88>
   12b48:	b	12b98 <close_stdout@@Base+0xf88>
   12b4c:	b	12b98 <close_stdout@@Base+0xf88>
   12b50:	b	12b98 <close_stdout@@Base+0xf88>
   12b54:	b	12b98 <close_stdout@@Base+0xf88>
   12b58:	b	12b98 <close_stdout@@Base+0xf88>
   12b5c:	b	12b98 <close_stdout@@Base+0xf88>
   12b60:	b	12b98 <close_stdout@@Base+0xf88>
   12b64:	b	12b98 <close_stdout@@Base+0xf88>
   12b68:	b	12b98 <close_stdout@@Base+0xf88>
   12b6c:	b	12b98 <close_stdout@@Base+0xf88>
   12b70:	b	12b98 <close_stdout@@Base+0xf88>
   12b74:	b	12b98 <close_stdout@@Base+0xf88>
   12b78:	b	12b98 <close_stdout@@Base+0xf88>
   12b7c:	b	12b98 <close_stdout@@Base+0xf88>
   12b80:	b	12b98 <close_stdout@@Base+0xf88>
   12b84:	b	12b98 <close_stdout@@Base+0xf88>
   12b88:	b	12b98 <close_stdout@@Base+0xf88>
   12b8c:	b	12b98 <close_stdout@@Base+0xf88>
   12b90:	b	12b98 <close_stdout@@Base+0xf88>
   12b94:	b	12590 <close_stdout@@Base+0x980>
   12b98:	cmp	r4, r7
   12b9c:	bne	12afc <close_stdout@@Base+0xeec>
   12ba0:	ldr	r0, [sp, #104]	; 0x68
   12ba4:	add	r9, r9, r2
   12ba8:	bl	10eac <iswprint@plt>
   12bac:	cmp	r0, #0
   12bb0:	mov	r0, r5
   12bb4:	moveq	r6, #0
   12bb8:	bl	10e64 <mbsinit@plt>
   12bbc:	cmp	r0, #0
   12bc0:	beq	12a94 <close_stdout@@Base+0xe84>
   12bc4:	mov	ip, r6
   12bc8:	eor	r2, ip, #1
   12bcc:	str	r9, [sp, #60]	; 0x3c
   12bd0:	ldr	r4, [sp, #92]	; 0x5c
   12bd4:	uxtb	r2, r2
   12bd8:	ldr	r9, [sp, #88]	; 0x58
   12bdc:	ldr	r6, [sp, #96]	; 0x60
   12be0:	ldr	r5, [sp, #100]	; 0x64
   12be4:	ldr	r3, [sp, #60]	; 0x3c
   12be8:	cmp	r3, #1
   12bec:	bls	12770 <close_stdout@@Base+0xb60>
   12bf0:	ldr	r0, [sp, #24]
   12bf4:	and	r2, r2, r0
   12bf8:	b	1277c <close_stdout@@Base+0xb6c>
   12bfc:	ldr	r2, [sp, #164]	; 0xa4
   12c00:	tst	r2, #1
   12c04:	addne	fp, fp, #1
   12c08:	bne	12138 <close_stdout@@Base+0x528>
   12c0c:	b	12448 <close_stdout@@Base+0x838>
   12c10:	ldr	r0, [sp, #36]	; 0x24
   12c14:	cmp	r0, #0
   12c18:	beq	12448 <close_stdout@@Base+0x838>
   12c1c:	b	12590 <close_stdout@@Base+0x980>
   12c20:	ldr	r2, [sp, #32]
   12c24:	ldrb	r3, [r2, #1]
   12c28:	adds	r3, r3, #0
   12c2c:	movne	r3, #1
   12c30:	b	12564 <close_stdout@@Base+0x954>
   12c34:	bl	11044 <abort@plt>
   12c38:	ldr	r8, [sp, #60]	; 0x3c
   12c3c:	b	12590 <close_stdout@@Base+0x980>
   12c40:	ldr	r0, [sp, #32]
   12c44:	bl	10f6c <strlen@plt>
   12c48:	mov	r8, r0
   12c4c:	b	12a58 <close_stdout@@Base+0xe48>
   12c50:	ldr	r2, [pc, #288]	; 12d78 <close_stdout@@Base+0x1168>
   12c54:	mov	r1, #1
   12c58:	mov	r9, r1
   12c5c:	str	r1, [sp, #24]
   12c60:	add	r2, pc, r2
   12c64:	str	r1, [sp, #28]
   12c68:	str	r2, [sp, #52]	; 0x34
   12c6c:	b	12114 <close_stdout@@Base+0x504>
   12c70:	ldr	r2, [pc, #260]	; 12d7c <close_stdout@@Base+0x116c>
   12c74:	mov	r3, #1
   12c78:	mov	r9, r3
   12c7c:	str	r3, [sp, #28]
   12c80:	add	r2, pc, r2
   12c84:	str	sl, [sp, #24]
   12c88:	str	r2, [sp, #52]	; 0x34
   12c8c:	b	12114 <close_stdout@@Base+0x504>
   12c90:	cmp	r8, r7
   12c94:	str	r9, [sp, #60]	; 0x3c
   12c98:	mov	ip, r4
   12c9c:	ldr	r6, [sp, #96]	; 0x60
   12ca0:	ldr	r9, [sp, #88]	; 0x58
   12ca4:	ldr	r4, [sp, #92]	; 0x5c
   12ca8:	ldr	r5, [sp, #100]	; 0x64
   12cac:	bls	12ce4 <close_stdout@@Base+0x10d4>
   12cb0:	ldrb	r3, [ip]
   12cb4:	cmp	r3, #0
   12cb8:	beq	12ce4 <close_stdout@@Base+0x10d4>
   12cbc:	ldr	r3, [sp, #60]	; 0x3c
   12cc0:	b	12cd0 <close_stdout@@Base+0x10c0>
   12cc4:	ldrb	r2, [r5, r3]
   12cc8:	cmp	r2, #0
   12ccc:	beq	12ce0 <close_stdout@@Base+0x10d0>
   12cd0:	add	r3, r3, #1
   12cd4:	add	r2, fp, r3
   12cd8:	cmp	r8, r2
   12cdc:	bhi	12cc4 <close_stdout@@Base+0x10b4>
   12ce0:	str	r3, [sp, #60]	; 0x3c
   12ce4:	mov	r2, #1
   12ce8:	b	12be4 <close_stdout@@Base+0xfd4>
   12cec:	str	r9, [sp, #60]	; 0x3c
   12cf0:	mov	r2, #1
   12cf4:	ldr	r4, [sp, #92]	; 0x5c
   12cf8:	ldr	r6, [sp, #96]	; 0x60
   12cfc:	ldr	r9, [sp, #88]	; 0x58
   12d00:	ldr	r5, [sp, #100]	; 0x64
   12d04:	b	12be4 <close_stdout@@Base+0xfd4>
   12d08:	ldr	r9, [sp, #36]	; 0x24
   12d0c:	b	12930 <close_stdout@@Base+0xd20>
   12d10:	bl	10e88 <__stack_chk_fail@plt>
   12d14:	ldr	r1, [pc, #100]	; 12d80 <close_stdout@@Base+0x1170>
   12d18:	mov	r3, #0
   12d1c:	mov	r0, #1
   12d20:	str	r3, [sp, #24]
   12d24:	add	r1, pc, r1
   12d28:	str	r0, [sp, #28]
   12d2c:	mov	r9, r3
   12d30:	str	r1, [sp, #52]	; 0x34
   12d34:	b	12114 <close_stdout@@Base+0x504>
   12d38:	ldr	r0, [pc, #68]	; 12d84 <close_stdout@@Base+0x1174>
   12d3c:	mov	r3, #1
   12d40:	mov	r9, #0
   12d44:	str	r3, [sp, #24]
   12d48:	add	r0, pc, r0
   12d4c:	str	r3, [sp, #28]
   12d50:	str	r0, [sp, #52]	; 0x34
   12d54:	b	12114 <close_stdout@@Base+0x504>
   12d58:	andeq	r3, r1, ip, ror pc
   12d5c:	ldrdeq	r0, [r0], -ip
   12d60:	andeq	r2, r0, ip, lsr #9
   12d64:	andeq	r2, r0, r8, lsl #9
   12d68:	andeq	r2, r0, r4, asr #8
   12d6c:	andeq	r2, r0, r0, lsr #8
   12d70:	andeq	r2, r0, r4, lsr #7
   12d74:	andeq	r2, r0, ip, asr #6
   12d78:	andeq	r2, r0, r4, lsr #1
   12d7c:	andeq	r2, r0, r0, lsl #1
   12d80:	ldrdeq	r1, [r0], -ip
   12d84:			; <UNDEFINED> instruction: 0x00001fbc
   12d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d8c:	sub	sp, sp, #44	; 0x2c
   12d90:	mov	r6, r0
   12d94:	mov	r9, r1
   12d98:	mov	sl, r2
   12d9c:	mov	r4, r3
   12da0:	bl	10f84 <__errno_location@plt>
   12da4:	ldr	fp, [pc, #412]	; 12f48 <close_stdout@@Base+0x1338>
   12da8:	cmp	r6, #0
   12dac:	add	fp, pc, fp
   12db0:	ldr	r5, [fp]
   12db4:	ldr	r1, [r0]
   12db8:	mov	r8, r0
   12dbc:	str	r1, [sp, #36]	; 0x24
   12dc0:	blt	12f40 <close_stdout@@Base+0x1330>
   12dc4:	ldr	r3, [pc, #384]	; 12f4c <close_stdout@@Base+0x133c>
   12dc8:	add	r3, pc, r3
   12dcc:	ldr	r3, [r3]
   12dd0:	cmp	r6, r3
   12dd4:	bcc	12e28 <close_stdout@@Base+0x1218>
   12dd8:	add	r7, r6, #1
   12ddc:	cmn	r7, #-536870911	; 0xe0000001
   12de0:	bhi	12f44 <close_stdout@@Base+0x1334>
   12de4:	add	r3, fp, #4
   12de8:	cmp	r5, r3
   12dec:	beq	12f18 <close_stdout@@Base+0x1308>
   12df0:	mov	r0, r5
   12df4:	lsl	r1, r7, #3
   12df8:	bl	13c20 <close_stdout@@Base+0x2010>
   12dfc:	mov	r5, r0
   12e00:	str	r0, [fp]
   12e04:	ldr	fp, [pc, #324]	; 12f50 <close_stdout@@Base+0x1340>
   12e08:	mov	r1, #0
   12e0c:	add	fp, pc, fp
   12e10:	ldr	r0, [fp]
   12e14:	rsb	r2, r0, r7
   12e18:	add	r0, r5, r0, lsl #3
   12e1c:	lsl	r2, r2, #3
   12e20:	bl	10f9c <memset@plt>
   12e24:	str	r7, [fp]
   12e28:	add	r2, r4, #8
   12e2c:	str	r2, [sp, #32]
   12e30:	ldr	r1, [r4]
   12e34:	add	fp, r5, r6, lsl #3
   12e38:	ldr	lr, [sp, #32]
   12e3c:	mov	r2, r9
   12e40:	ldr	r3, [r4, #4]
   12e44:	ldr	ip, [r5, r6, lsl #3]
   12e48:	ldr	r7, [fp, #4]
   12e4c:	orr	r3, r3, #1
   12e50:	str	r1, [sp]
   12e54:	str	r3, [sp, #4]
   12e58:	mov	r1, ip
   12e5c:	str	lr, [sp, #8]
   12e60:	mov	r0, r7
   12e64:	ldr	lr, [r4, #40]	; 0x28
   12e68:	str	r3, [sp, #28]
   12e6c:	mov	r3, sl
   12e70:	str	lr, [sp, #12]
   12e74:	ldr	lr, [r4, #44]	; 0x2c
   12e78:	str	ip, [sp, #24]
   12e7c:	str	lr, [sp, #16]
   12e80:	bl	12060 <close_stdout@@Base+0x450>
   12e84:	ldr	ip, [sp, #24]
   12e88:	cmp	ip, r0
   12e8c:	bhi	12f04 <close_stdout@@Base+0x12f4>
   12e90:	ldr	r3, [pc, #188]	; 12f54 <close_stdout@@Base+0x1344>
   12e94:	add	r1, r0, #1
   12e98:	str	r1, [r5, r6, lsl #3]
   12e9c:	add	r3, pc, r3
   12ea0:	cmp	r7, r3
   12ea4:	beq	12eb8 <close_stdout@@Base+0x12a8>
   12ea8:	mov	r0, r7
   12eac:	str	r1, [sp, #24]
   12eb0:	bl	10e40 <free@plt>
   12eb4:	ldr	r1, [sp, #24]
   12eb8:	mov	r0, r1
   12ebc:	str	r1, [sp, #24]
   12ec0:	bl	13bc8 <close_stdout@@Base+0x1fb8>
   12ec4:	ldr	r3, [sp, #28]
   12ec8:	ldr	lr, [sp, #32]
   12ecc:	mov	r2, r9
   12ed0:	str	r0, [fp, #4]
   12ed4:	mov	r7, r0
   12ed8:	ldr	ip, [r4]
   12edc:	str	r3, [sp, #4]
   12ee0:	mov	r3, sl
   12ee4:	str	lr, [sp, #8]
   12ee8:	str	ip, [sp]
   12eec:	ldr	ip, [r4, #40]	; 0x28
   12ef0:	ldr	r1, [sp, #24]
   12ef4:	str	ip, [sp, #12]
   12ef8:	ldr	ip, [r4, #44]	; 0x2c
   12efc:	str	ip, [sp, #16]
   12f00:	bl	12060 <close_stdout@@Base+0x450>
   12f04:	ldr	r1, [sp, #36]	; 0x24
   12f08:	mov	r0, r7
   12f0c:	str	r1, [r8]
   12f10:	add	sp, sp, #44	; 0x2c
   12f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f18:	lsl	r1, r7, #3
   12f1c:	mov	r0, #0
   12f20:	str	r3, [sp, #24]
   12f24:	bl	13c20 <close_stdout@@Base+0x2010>
   12f28:	ldr	r3, [sp, #24]
   12f2c:	mov	r5, r0
   12f30:	ldm	r3, {r0, r1}
   12f34:	str	r5, [fp]
   12f38:	stm	r5, {r0, r1}
   12f3c:	b	12e04 <close_stdout@@Base+0x11f4>
   12f40:	bl	11044 <abort@plt>
   12f44:	bl	13ddc <close_stdout@@Base+0x21cc>
   12f48:	muleq	r1, r8, r3
   12f4c:	andeq	r3, r1, r8, asr #6
   12f50:	andeq	r3, r1, r4, lsl #6
   12f54:	andeq	r3, r1, r4, asr #5
   12f58:	push	{r4, r5, r6, lr}
   12f5c:	mov	r5, r0
   12f60:	bl	10f84 <__errno_location@plt>
   12f64:	cmp	r5, #0
   12f68:	mov	r1, #48	; 0x30
   12f6c:	mov	r4, r0
   12f70:	ldr	r0, [pc, #24]	; 12f90 <close_stdout@@Base+0x1380>
   12f74:	ldr	r6, [r4]
   12f78:	add	r0, pc, r0
   12f7c:	add	r0, r0, #256	; 0x100
   12f80:	movne	r0, r5
   12f84:	bl	13d9c <close_stdout@@Base+0x218c>
   12f88:	str	r6, [r4]
   12f8c:	pop	{r4, r5, r6, pc}
   12f90:	andeq	r3, r1, r8, ror #3
   12f94:	cmp	r0, #0
   12f98:	beq	12fa4 <close_stdout@@Base+0x1394>
   12f9c:	ldr	r0, [r0]
   12fa0:	bx	lr
   12fa4:	ldr	r0, [pc, #12]	; 12fb8 <close_stdout@@Base+0x13a8>
   12fa8:	add	r0, pc, r0
   12fac:	add	r0, r0, #256	; 0x100
   12fb0:	ldr	r0, [r0]
   12fb4:	bx	lr
   12fb8:			; <UNDEFINED> instruction: 0x000131b8
   12fbc:	cmp	r0, #0
   12fc0:	beq	12fcc <close_stdout@@Base+0x13bc>
   12fc4:	str	r1, [r0]
   12fc8:	bx	lr
   12fcc:	ldr	r0, [pc, #12]	; 12fe0 <close_stdout@@Base+0x13d0>
   12fd0:	add	r0, pc, r0
   12fd4:	add	r0, r0, #256	; 0x100
   12fd8:	str	r1, [r0]
   12fdc:	bx	lr
   12fe0:	muleq	r1, r0, r1
   12fe4:	cmp	r0, #0
   12fe8:	movne	r3, r0
   12fec:	beq	1301c <close_stdout@@Base+0x140c>
   12ff0:	lsr	ip, r1, #5
   12ff4:	and	r1, r1, #31
   12ff8:	add	r3, r3, ip, lsl #2
   12ffc:	ldr	ip, [r3, #8]
   13000:	lsr	r0, ip, r1
   13004:	eor	r2, r0, r2
   13008:	and	r0, r0, #1
   1300c:	and	r2, r2, #1
   13010:	eor	ip, ip, r2, lsl r1
   13014:	str	ip, [r3, #8]
   13018:	bx	lr
   1301c:	ldr	r3, [pc, #8]	; 1302c <close_stdout@@Base+0x141c>
   13020:	add	r3, pc, r3
   13024:	add	r3, r3, #256	; 0x100
   13028:	b	12ff0 <close_stdout@@Base+0x13e0>
   1302c:	andeq	r3, r1, r0, asr #2
   13030:	subs	r3, r0, #0
   13034:	beq	13044 <close_stdout@@Base+0x1434>
   13038:	ldr	r0, [r3, #4]
   1303c:	str	r1, [r3, #4]
   13040:	bx	lr
   13044:	ldr	r3, [pc, #8]	; 13054 <close_stdout@@Base+0x1444>
   13048:	add	r3, pc, r3
   1304c:	add	r3, r3, #256	; 0x100
   13050:	b	13038 <close_stdout@@Base+0x1428>
   13054:	andeq	r3, r1, r8, lsl r1
   13058:	cmp	r0, #0
   1305c:	push	{r3, lr}
   13060:	beq	13084 <close_stdout@@Base+0x1474>
   13064:	cmp	r2, #0
   13068:	cmpne	r1, #0
   1306c:	mov	r3, #8
   13070:	strne	r1, [r0, #40]	; 0x28
   13074:	str	r3, [r0]
   13078:	strne	r2, [r0, #44]	; 0x2c
   1307c:	popne	{r3, pc}
   13080:	bl	11044 <abort@plt>
   13084:	ldr	r0, [pc, #8]	; 13094 <close_stdout@@Base+0x1484>
   13088:	add	r0, pc, r0
   1308c:	add	r0, r0, #256	; 0x100
   13090:	b	13064 <close_stdout@@Base+0x1454>
   13094:	ldrdeq	r3, [r1], -r8
   13098:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1309c:	sub	sp, sp, #24
   130a0:	mov	r7, r0
   130a4:	mov	sl, r1
   130a8:	ldr	r4, [sp, #56]	; 0x38
   130ac:	mov	r9, r2
   130b0:	mov	r8, r3
   130b4:	cmp	r4, #0
   130b8:	beq	1310c <close_stdout@@Base+0x14fc>
   130bc:	bl	10f84 <__errno_location@plt>
   130c0:	ldr	r3, [r4]
   130c4:	add	lr, r4, #8
   130c8:	mov	r1, sl
   130cc:	mov	r2, r9
   130d0:	ldr	r6, [r0]
   130d4:	mov	r5, r0
   130d8:	str	r3, [sp]
   130dc:	mov	r0, r7
   130e0:	ldr	ip, [r4, #4]
   130e4:	mov	r3, r8
   130e8:	stmib	sp, {ip, lr}
   130ec:	ldr	ip, [r4, #40]	; 0x28
   130f0:	str	ip, [sp, #12]
   130f4:	ldr	ip, [r4, #44]	; 0x2c
   130f8:	str	ip, [sp, #16]
   130fc:	bl	12060 <close_stdout@@Base+0x450>
   13100:	str	r6, [r5]
   13104:	add	sp, sp, #24
   13108:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1310c:	ldr	r4, [pc, #8]	; 1311c <close_stdout@@Base+0x150c>
   13110:	add	r4, pc, r4
   13114:	add	r4, r4, #256	; 0x100
   13118:	b	130bc <close_stdout@@Base+0x14ac>
   1311c:	andeq	r3, r1, r0, asr r0
   13120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13124:	subs	r4, r3, #0
   13128:	sub	sp, sp, #36	; 0x24
   1312c:	mov	r7, r0
   13130:	mov	r6, r1
   13134:	mov	r5, r2
   13138:	beq	131f4 <close_stdout@@Base+0x15e4>
   1313c:	bl	10f84 <__errno_location@plt>
   13140:	ldr	r3, [r4]
   13144:	ldr	sl, [r4, #4]
   13148:	add	r9, r4, #8
   1314c:	mov	r8, r0
   13150:	mov	r0, #0
   13154:	ldr	r2, [r8]
   13158:	cmp	r5, r0
   1315c:	orreq	sl, sl, #1
   13160:	str	r9, [sp, #8]
   13164:	mov	r1, r0
   13168:	stm	sp, {r3, sl}
   1316c:	mov	r3, r6
   13170:	ldr	ip, [r4, #40]	; 0x28
   13174:	str	r2, [sp, #28]
   13178:	mov	r2, r7
   1317c:	str	ip, [sp, #12]
   13180:	ldr	ip, [r4, #44]	; 0x2c
   13184:	str	ip, [sp, #16]
   13188:	bl	12060 <close_stdout@@Base+0x450>
   1318c:	add	r1, r0, #1
   13190:	mov	fp, r0
   13194:	str	r1, [sp, #24]
   13198:	mov	r0, r1
   1319c:	bl	13bc8 <close_stdout@@Base+0x1fb8>
   131a0:	ldr	lr, [r4]
   131a4:	str	sl, [sp, #4]
   131a8:	mov	r3, r6
   131ac:	str	r9, [sp, #8]
   131b0:	mov	r2, r7
   131b4:	str	lr, [sp]
   131b8:	ldr	lr, [r4, #40]	; 0x28
   131bc:	ldr	r1, [sp, #24]
   131c0:	str	lr, [sp, #12]
   131c4:	ldr	lr, [r4, #44]	; 0x2c
   131c8:	str	lr, [sp, #16]
   131cc:	str	r0, [sp, #24]
   131d0:	bl	12060 <close_stdout@@Base+0x450>
   131d4:	ldr	r3, [sp, #28]
   131d8:	cmp	r5, #0
   131dc:	str	r3, [r8]
   131e0:	ldr	ip, [sp, #24]
   131e4:	strne	fp, [r5]
   131e8:	mov	r0, ip
   131ec:	add	sp, sp, #36	; 0x24
   131f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131f4:	ldr	r4, [pc, #8]	; 13204 <close_stdout@@Base+0x15f4>
   131f8:	add	r4, pc, r4
   131fc:	add	r4, r4, #256	; 0x100
   13200:	b	1313c <close_stdout@@Base+0x152c>
   13204:	andeq	r2, r1, r8, ror #30
   13208:	mov	r3, r2
   1320c:	mov	r2, #0
   13210:	b	13120 <close_stdout@@Base+0x1510>
   13214:	ldr	r2, [pc, #152]	; 132b4 <close_stdout@@Base+0x16a4>
   13218:	push	{r3, r4, r5, r6, r7, lr}
   1321c:	add	r2, pc, r2
   13220:	ldr	r3, [pc, #144]	; 132b8 <close_stdout@@Base+0x16a8>
   13224:	ldr	r6, [r2]
   13228:	add	r3, pc, r3
   1322c:	cmp	r6, #1
   13230:	ldr	r7, [r3]
   13234:	movhi	r4, #1
   13238:	movhi	r5, r7
   1323c:	bls	13258 <close_stdout@@Base+0x1648>
   13240:	ldr	r0, [r5, #12]
   13244:	add	r4, r4, #1
   13248:	bl	10e40 <free@plt>
   1324c:	cmp	r4, r6
   13250:	add	r5, r5, #8
   13254:	bne	13240 <close_stdout@@Base+0x1630>
   13258:	ldr	r4, [pc, #92]	; 132bc <close_stdout@@Base+0x16ac>
   1325c:	ldr	r0, [r7, #4]
   13260:	add	r4, pc, r4
   13264:	cmp	r0, r4
   13268:	beq	13280 <close_stdout@@Base+0x1670>
   1326c:	bl	10e40 <free@plt>
   13270:	ldr	r3, [pc, #72]	; 132c0 <close_stdout@@Base+0x16b0>
   13274:	mov	r2, #256	; 0x100
   13278:	add	r3, pc, r3
   1327c:	stmib	r3, {r2, r4}
   13280:	ldr	r4, [pc, #60]	; 132c4 <close_stdout@@Base+0x16b4>
   13284:	add	r4, pc, r4
   13288:	add	r5, r4, #4
   1328c:	cmp	r7, r5
   13290:	beq	132a0 <close_stdout@@Base+0x1690>
   13294:	mov	r0, r7
   13298:	bl	10e40 <free@plt>
   1329c:	str	r5, [r4]
   132a0:	ldr	r3, [pc, #32]	; 132c8 <close_stdout@@Base+0x16b8>
   132a4:	mov	r2, #1
   132a8:	add	r3, pc, r3
   132ac:	str	r2, [r3]
   132b0:	pop	{r3, r4, r5, r6, r7, pc}
   132b4:	strdeq	r2, [r1], -r4
   132b8:	andeq	r2, r1, ip, lsl pc
   132bc:	andeq	r2, r1, r0, lsl #30
   132c0:	andeq	r2, r1, ip, asr #29
   132c4:	andeq	r2, r1, r0, asr #29
   132c8:	andeq	r2, r1, r8, ror #28
   132cc:	ldr	r3, [pc, #12]	; 132e0 <close_stdout@@Base+0x16d0>
   132d0:	mvn	r2, #0
   132d4:	add	r3, pc, r3
   132d8:	add	r3, r3, #256	; 0x100
   132dc:	b	12d88 <close_stdout@@Base+0x1178>
   132e0:	andeq	r2, r1, ip, lsl #29
   132e4:	ldr	r3, [pc, #8]	; 132f4 <close_stdout@@Base+0x16e4>
   132e8:	add	r3, pc, r3
   132ec:	add	r3, r3, #256	; 0x100
   132f0:	b	12d88 <close_stdout@@Base+0x1178>
   132f4:	andeq	r2, r1, r8, ror lr
   132f8:	mov	r1, r0
   132fc:	mov	r0, #0
   13300:	b	132cc <close_stdout@@Base+0x16bc>
   13304:	mov	r2, r1
   13308:	mov	r1, r0
   1330c:	mov	r0, #0
   13310:	b	132e4 <close_stdout@@Base+0x16d4>
   13314:	ldr	r3, [pc, #92]	; 13378 <close_stdout@@Base+0x1768>
   13318:	ldr	ip, [pc, #92]	; 1337c <close_stdout@@Base+0x176c>
   1331c:	add	r3, pc, r3
   13320:	push	{r4, r5, r6, r7, lr}
   13324:	sub	sp, sp, #60	; 0x3c
   13328:	ldr	r4, [r3, ip]
   1332c:	add	r5, sp, #4
   13330:	mov	r7, r2
   13334:	mov	r6, r0
   13338:	mov	r0, r5
   1333c:	ldr	r3, [r4]
   13340:	str	r3, [sp, #52]	; 0x34
   13344:	bl	11ea8 <close_stdout@@Base+0x298>
   13348:	mov	r3, r5
   1334c:	mvn	r2, #0
   13350:	mov	r0, r6
   13354:	mov	r1, r7
   13358:	bl	12d88 <close_stdout@@Base+0x1178>
   1335c:	ldr	r2, [sp, #52]	; 0x34
   13360:	ldr	r3, [r4]
   13364:	cmp	r2, r3
   13368:	bne	13374 <close_stdout@@Base+0x1764>
   1336c:	add	sp, sp, #60	; 0x3c
   13370:	pop	{r4, r5, r6, r7, pc}
   13374:	bl	10e88 <__stack_chk_fail@plt>
   13378:	ldrdeq	r2, [r1], -ip
   1337c:	ldrdeq	r0, [r0], -ip
   13380:	ldr	ip, [pc, #96]	; 133e8 <close_stdout@@Base+0x17d8>
   13384:	push	{r4, r5, r6, r7, r8, lr}
   13388:	add	ip, pc, ip
   1338c:	ldr	lr, [pc, #88]	; 133ec <close_stdout@@Base+0x17dc>
   13390:	sub	sp, sp, #56	; 0x38
   13394:	mov	r8, r3
   13398:	add	r5, sp, #4
   1339c:	mov	r7, r2
   133a0:	mov	r6, r0
   133a4:	ldr	r4, [ip, lr]
   133a8:	mov	r0, r5
   133ac:	ldr	r3, [r4]
   133b0:	str	r3, [sp, #52]	; 0x34
   133b4:	bl	11ea8 <close_stdout@@Base+0x298>
   133b8:	mov	r2, r8
   133bc:	mov	r3, r5
   133c0:	mov	r0, r6
   133c4:	mov	r1, r7
   133c8:	bl	12d88 <close_stdout@@Base+0x1178>
   133cc:	ldr	r2, [sp, #52]	; 0x34
   133d0:	ldr	r3, [r4]
   133d4:	cmp	r2, r3
   133d8:	bne	133e4 <close_stdout@@Base+0x17d4>
   133dc:	add	sp, sp, #56	; 0x38
   133e0:	pop	{r4, r5, r6, r7, r8, pc}
   133e4:	bl	10e88 <__stack_chk_fail@plt>
   133e8:	andeq	r2, r1, r0, ror ip
   133ec:	ldrdeq	r0, [r0], -ip
   133f0:	mov	r2, r1
   133f4:	mov	r1, r0
   133f8:	mov	r0, #0
   133fc:	b	13314 <close_stdout@@Base+0x1704>
   13400:	mov	ip, r1
   13404:	mov	r3, r2
   13408:	mov	r1, r0
   1340c:	mov	r2, ip
   13410:	mov	r0, #0
   13414:	b	13380 <close_stdout@@Base+0x1770>
   13418:	push	{r4, r5, r6, r7, r8, lr}
   1341c:	mov	r5, r2
   13420:	ldr	lr, [pc, #136]	; 134b0 <close_stdout@@Base+0x18a0>
   13424:	mov	r7, r0
   13428:	mov	r6, r1
   1342c:	ldr	r4, [pc, #128]	; 134b4 <close_stdout@@Base+0x18a4>
   13430:	add	lr, pc, lr
   13434:	sub	sp, sp, #56	; 0x38
   13438:	add	lr, lr, #256	; 0x100
   1343c:	ldr	r8, [pc, #116]	; 134b8 <close_stdout@@Base+0x18a8>
   13440:	add	r4, pc, r4
   13444:	add	ip, sp, #4
   13448:	ldm	lr!, {r0, r1, r2, r3}
   1344c:	ldr	r4, [r4, r8]
   13450:	stmia	ip!, {r0, r1, r2, r3}
   13454:	ldm	lr!, {r0, r1, r2, r3}
   13458:	ldr	r8, [r4]
   1345c:	stmia	ip!, {r0, r1, r2, r3}
   13460:	ldm	lr, {r0, r1, r2, r3}
   13464:	str	r8, [sp, #52]	; 0x34
   13468:	stm	ip, {r0, r1, r2, r3}
   1346c:	mov	r1, r5
   13470:	add	r5, sp, #4
   13474:	mov	r2, #1
   13478:	mov	r0, r5
   1347c:	bl	12fe4 <close_stdout@@Base+0x13d4>
   13480:	mov	r2, r6
   13484:	mov	r3, r5
   13488:	mov	r1, r7
   1348c:	mov	r0, #0
   13490:	bl	12d88 <close_stdout@@Base+0x1178>
   13494:	ldr	r2, [sp, #52]	; 0x34
   13498:	ldr	r3, [r4]
   1349c:	cmp	r2, r3
   134a0:	bne	134ac <close_stdout@@Base+0x189c>
   134a4:	add	sp, sp, #56	; 0x38
   134a8:	pop	{r4, r5, r6, r7, r8, pc}
   134ac:	bl	10e88 <__stack_chk_fail@plt>
   134b0:	andeq	r2, r1, r0, lsr sp
   134b4:			; <UNDEFINED> instruction: 0x00012bb8
   134b8:	ldrdeq	r0, [r0], -ip
   134bc:	mov	r2, r1
   134c0:	mvn	r1, #0
   134c4:	b	13418 <close_stdout@@Base+0x1808>
   134c8:	mov	r1, #58	; 0x3a
   134cc:	b	134bc <close_stdout@@Base+0x18ac>
   134d0:	mov	r2, #58	; 0x3a
   134d4:	b	13418 <close_stdout@@Base+0x1808>
   134d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   134dc:	mov	r5, r2
   134e0:	ldr	lr, [pc, #144]	; 13578 <close_stdout@@Base+0x1968>
   134e4:	mov	r8, r0
   134e8:	mov	r9, r1
   134ec:	mov	r7, r3
   134f0:	add	lr, pc, lr
   134f4:	ldr	r4, [pc, #128]	; 1357c <close_stdout@@Base+0x196c>
   134f8:	add	lr, lr, #256	; 0x100
   134fc:	sub	sp, sp, #56	; 0x38
   13500:	ldr	sl, [pc, #120]	; 13580 <close_stdout@@Base+0x1970>
   13504:	add	r4, pc, r4
   13508:	ldm	lr!, {r0, r1, r2, r3}
   1350c:	add	ip, sp, #4
   13510:	ldr	r4, [r4, sl]
   13514:	ldr	r6, [sp, #88]	; 0x58
   13518:	stmia	ip!, {r0, r1, r2, r3}
   1351c:	ldm	lr!, {r0, r1, r2, r3}
   13520:	ldr	sl, [r4]
   13524:	stmia	ip!, {r0, r1, r2, r3}
   13528:	ldm	lr, {r0, r1, r2, r3}
   1352c:	str	sl, [sp, #52]	; 0x34
   13530:	stm	ip, {r0, r1, r2, r3}
   13534:	mov	r2, r5
   13538:	add	r5, sp, #4
   1353c:	mov	r1, r9
   13540:	mov	r0, r5
   13544:	bl	13058 <close_stdout@@Base+0x1448>
   13548:	mov	r2, r6
   1354c:	mov	r3, r5
   13550:	mov	r0, r8
   13554:	mov	r1, r7
   13558:	bl	12d88 <close_stdout@@Base+0x1178>
   1355c:	ldr	r2, [sp, #52]	; 0x34
   13560:	ldr	r3, [r4]
   13564:	cmp	r2, r3
   13568:	bne	13574 <close_stdout@@Base+0x1964>
   1356c:	add	sp, sp, #56	; 0x38
   13570:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13574:	bl	10e88 <__stack_chk_fail@plt>
   13578:	andeq	r2, r1, r0, ror ip
   1357c:	strdeq	r2, [r1], -r4
   13580:	ldrdeq	r0, [r0], -ip
   13584:	push	{lr}		; (str lr, [sp, #-4]!)
   13588:	sub	sp, sp, #12
   1358c:	mvn	ip, #0
   13590:	str	ip, [sp]
   13594:	bl	134d8 <close_stdout@@Base+0x18c8>
   13598:	add	sp, sp, #12
   1359c:	pop	{pc}		; (ldr pc, [sp], #4)
   135a0:	mov	ip, r1
   135a4:	mov	r3, r2
   135a8:	mov	r1, r0
   135ac:	mov	r2, ip
   135b0:	mov	r0, #0
   135b4:	b	13584 <close_stdout@@Base+0x1974>
   135b8:	push	{lr}		; (str lr, [sp, #-4]!)
   135bc:	sub	sp, sp, #12
   135c0:	mov	lr, r1
   135c4:	mov	ip, r2
   135c8:	mov	r1, r0
   135cc:	str	r3, [sp]
   135d0:	mov	r2, lr
   135d4:	mov	r3, ip
   135d8:	mov	r0, #0
   135dc:	bl	134d8 <close_stdout@@Base+0x18c8>
   135e0:	add	sp, sp, #12
   135e4:	pop	{pc}		; (ldr pc, [sp], #4)
   135e8:	ldr	r3, [pc, #12]	; 135fc <close_stdout@@Base+0x19ec>
   135ec:	ldr	ip, [pc, #12]	; 13600 <close_stdout@@Base+0x19f0>
   135f0:	add	r3, pc, r3
   135f4:	ldr	r3, [r3, ip]
   135f8:	b	12d88 <close_stdout@@Base+0x1178>
   135fc:	andeq	r2, r1, r8, lsl #20
   13600:	ldrdeq	r0, [r0], -r8
   13604:	mov	r2, r1
   13608:	mov	r1, r0
   1360c:	mov	r0, #0
   13610:	b	135e8 <close_stdout@@Base+0x19d8>
   13614:	mvn	r2, #0
   13618:	b	135e8 <close_stdout@@Base+0x19d8>
   1361c:	mov	r1, r0
   13620:	mov	r0, #0
   13624:	b	13614 <close_stdout@@Base+0x1a04>
   13628:	push	{r4, r5, r6, r7, lr}
   1362c:	cmp	r1, #0
   13630:	sub	sp, sp, #36	; 0x24
   13634:	ldr	r7, [pc, #896]	; 139bc <close_stdout@@Base+0x1dac>
   13638:	mov	ip, r3
   1363c:	mov	r5, r0
   13640:	add	r7, pc, r7
   13644:	ldr	r4, [sp, #56]	; 0x38
   13648:	ldr	r6, [sp, #60]	; 0x3c
   1364c:	beq	13990 <close_stdout@@Base+0x1d80>
   13650:	str	r2, [sp]
   13654:	mov	r3, r1
   13658:	ldr	r2, [pc, #864]	; 139c0 <close_stdout@@Base+0x1db0>
   1365c:	mov	r1, #1
   13660:	str	ip, [sp, #4]
   13664:	add	r2, pc, r2
   13668:	bl	10fcc <__fprintf_chk@plt>
   1366c:	ldr	r1, [pc, #848]	; 139c4 <close_stdout@@Base+0x1db4>
   13670:	mov	r2, #5
   13674:	mov	r0, #0
   13678:	add	r1, pc, r1
   1367c:	bl	10e7c <dcgettext@plt>
   13680:	ldr	r2, [pc, #832]	; 139c8 <close_stdout@@Base+0x1db8>
   13684:	movw	ip, #2013	; 0x7dd
   13688:	mov	r1, #1
   1368c:	ldr	r2, [r7, r2]
   13690:	str	ip, [sp]
   13694:	mov	r3, r0
   13698:	mov	r0, r5
   1369c:	bl	10fcc <__fprintf_chk@plt>
   136a0:	ldr	r1, [pc, #804]	; 139cc <close_stdout@@Base+0x1dbc>
   136a4:	mov	r0, #0
   136a8:	mov	r2, #5
   136ac:	add	r1, pc, r1
   136b0:	bl	10e7c <dcgettext@plt>
   136b4:	mov	r1, r5
   136b8:	bl	10e10 <fputs_unlocked@plt>
   136bc:	cmp	r6, #9
   136c0:	addls	pc, pc, r6, lsl #2
   136c4:	b	139ac <close_stdout@@Base+0x1d9c>
   136c8:	b	1375c <close_stdout@@Base+0x1b4c>
   136cc:	b	13760 <close_stdout@@Base+0x1b50>
   136d0:	b	13790 <close_stdout@@Base+0x1b80>
   136d4:	b	137c4 <close_stdout@@Base+0x1bb4>
   136d8:	b	13800 <close_stdout@@Base+0x1bf0>
   136dc:	b	13840 <close_stdout@@Base+0x1c30>
   136e0:	b	13888 <close_stdout@@Base+0x1c78>
   136e4:	b	138d8 <close_stdout@@Base+0x1cc8>
   136e8:	b	13930 <close_stdout@@Base+0x1d20>
   136ec:	b	136f0 <close_stdout@@Base+0x1ae0>
   136f0:	ldr	r1, [pc, #728]	; 139d0 <close_stdout@@Base+0x1dc0>
   136f4:	mov	r0, #0
   136f8:	add	r1, pc, r1
   136fc:	mov	r2, #5
   13700:	bl	10e7c <dcgettext@plt>
   13704:	ldm	r4, {r3, ip}
   13708:	mov	r1, #1
   1370c:	str	ip, [sp]
   13710:	ldr	ip, [r4, #8]
   13714:	str	ip, [sp, #4]
   13718:	ldr	ip, [r4, #12]
   1371c:	str	ip, [sp, #8]
   13720:	ldr	ip, [r4, #16]
   13724:	str	ip, [sp, #12]
   13728:	ldr	ip, [r4, #20]
   1372c:	str	ip, [sp, #16]
   13730:	ldr	ip, [r4, #24]
   13734:	str	ip, [sp, #20]
   13738:	ldr	ip, [r4, #28]
   1373c:	str	ip, [sp, #24]
   13740:	ldr	ip, [r4, #32]
   13744:	str	ip, [sp, #28]
   13748:	mov	r2, r0
   1374c:	mov	r0, r5
   13750:	bl	10fcc <__fprintf_chk@plt>
   13754:	add	sp, sp, #36	; 0x24
   13758:	pop	{r4, r5, r6, r7, pc}
   1375c:	bl	11044 <abort@plt>
   13760:	ldr	r1, [pc, #620]	; 139d4 <close_stdout@@Base+0x1dc4>
   13764:	mov	r2, #5
   13768:	mov	r0, #0
   1376c:	add	r1, pc, r1
   13770:	bl	10e7c <dcgettext@plt>
   13774:	ldr	r3, [r4]
   13778:	mov	r1, #1
   1377c:	mov	r2, r0
   13780:	mov	r0, r5
   13784:	add	sp, sp, #36	; 0x24
   13788:	pop	{r4, r5, r6, r7, lr}
   1378c:	b	10fcc <__fprintf_chk@plt>
   13790:	ldr	r1, [pc, #576]	; 139d8 <close_stdout@@Base+0x1dc8>
   13794:	mov	r2, #5
   13798:	mov	r0, #0
   1379c:	add	r1, pc, r1
   137a0:	bl	10e7c <dcgettext@plt>
   137a4:	ldm	r4, {r3, ip}
   137a8:	mov	r1, #1
   137ac:	str	ip, [sp, #56]	; 0x38
   137b0:	mov	r2, r0
   137b4:	mov	r0, r5
   137b8:	add	sp, sp, #36	; 0x24
   137bc:	pop	{r4, r5, r6, r7, lr}
   137c0:	b	10fcc <__fprintf_chk@plt>
   137c4:	ldr	r1, [pc, #528]	; 139dc <close_stdout@@Base+0x1dcc>
   137c8:	mov	r2, #5
   137cc:	mov	r0, #0
   137d0:	add	r1, pc, r1
   137d4:	bl	10e7c <dcgettext@plt>
   137d8:	ldm	r4, {r3, ip}
   137dc:	mov	r1, #1
   137e0:	str	ip, [sp, #56]	; 0x38
   137e4:	ldr	ip, [r4, #8]
   137e8:	str	ip, [sp, #60]	; 0x3c
   137ec:	mov	r2, r0
   137f0:	mov	r0, r5
   137f4:	add	sp, sp, #36	; 0x24
   137f8:	pop	{r4, r5, r6, r7, lr}
   137fc:	b	10fcc <__fprintf_chk@plt>
   13800:	ldr	r1, [pc, #472]	; 139e0 <close_stdout@@Base+0x1dd0>
   13804:	mov	r2, #5
   13808:	mov	r0, #0
   1380c:	add	r1, pc, r1
   13810:	bl	10e7c <dcgettext@plt>
   13814:	ldm	r4, {r3, ip}
   13818:	mov	r1, #1
   1381c:	str	ip, [sp]
   13820:	ldr	ip, [r4, #8]
   13824:	str	ip, [sp, #4]
   13828:	ldr	ip, [r4, #12]
   1382c:	str	ip, [sp, #8]
   13830:	mov	r2, r0
   13834:	mov	r0, r5
   13838:	bl	10fcc <__fprintf_chk@plt>
   1383c:	b	13754 <close_stdout@@Base+0x1b44>
   13840:	ldr	r1, [pc, #412]	; 139e4 <close_stdout@@Base+0x1dd4>
   13844:	mov	r2, #5
   13848:	mov	r0, #0
   1384c:	add	r1, pc, r1
   13850:	bl	10e7c <dcgettext@plt>
   13854:	ldm	r4, {r3, ip}
   13858:	mov	r1, #1
   1385c:	str	ip, [sp]
   13860:	ldr	ip, [r4, #8]
   13864:	str	ip, [sp, #4]
   13868:	ldr	ip, [r4, #12]
   1386c:	str	ip, [sp, #8]
   13870:	ldr	ip, [r4, #16]
   13874:	str	ip, [sp, #12]
   13878:	mov	r2, r0
   1387c:	mov	r0, r5
   13880:	bl	10fcc <__fprintf_chk@plt>
   13884:	b	13754 <close_stdout@@Base+0x1b44>
   13888:	ldr	r1, [pc, #344]	; 139e8 <close_stdout@@Base+0x1dd8>
   1388c:	mov	r2, #5
   13890:	mov	r0, #0
   13894:	add	r1, pc, r1
   13898:	bl	10e7c <dcgettext@plt>
   1389c:	ldm	r4, {r3, ip}
   138a0:	mov	r1, #1
   138a4:	str	ip, [sp]
   138a8:	ldr	ip, [r4, #8]
   138ac:	str	ip, [sp, #4]
   138b0:	ldr	ip, [r4, #12]
   138b4:	str	ip, [sp, #8]
   138b8:	ldr	ip, [r4, #16]
   138bc:	str	ip, [sp, #12]
   138c0:	ldr	ip, [r4, #20]
   138c4:	str	ip, [sp, #16]
   138c8:	mov	r2, r0
   138cc:	mov	r0, r5
   138d0:	bl	10fcc <__fprintf_chk@plt>
   138d4:	b	13754 <close_stdout@@Base+0x1b44>
   138d8:	ldr	r1, [pc, #268]	; 139ec <close_stdout@@Base+0x1ddc>
   138dc:	mov	r2, #5
   138e0:	mov	r0, #0
   138e4:	add	r1, pc, r1
   138e8:	bl	10e7c <dcgettext@plt>
   138ec:	ldm	r4, {r3, ip}
   138f0:	mov	r1, #1
   138f4:	str	ip, [sp]
   138f8:	ldr	ip, [r4, #8]
   138fc:	str	ip, [sp, #4]
   13900:	ldr	ip, [r4, #12]
   13904:	str	ip, [sp, #8]
   13908:	ldr	ip, [r4, #16]
   1390c:	str	ip, [sp, #12]
   13910:	ldr	ip, [r4, #20]
   13914:	str	ip, [sp, #16]
   13918:	ldr	ip, [r4, #24]
   1391c:	str	ip, [sp, #20]
   13920:	mov	r2, r0
   13924:	mov	r0, r5
   13928:	bl	10fcc <__fprintf_chk@plt>
   1392c:	b	13754 <close_stdout@@Base+0x1b44>
   13930:	ldr	r1, [pc, #184]	; 139f0 <close_stdout@@Base+0x1de0>
   13934:	mov	r2, #5
   13938:	mov	r0, #0
   1393c:	add	r1, pc, r1
   13940:	bl	10e7c <dcgettext@plt>
   13944:	ldm	r4, {r3, ip}
   13948:	mov	r1, #1
   1394c:	str	ip, [sp]
   13950:	ldr	ip, [r4, #8]
   13954:	str	ip, [sp, #4]
   13958:	ldr	ip, [r4, #12]
   1395c:	str	ip, [sp, #8]
   13960:	ldr	ip, [r4, #16]
   13964:	str	ip, [sp, #12]
   13968:	ldr	ip, [r4, #20]
   1396c:	str	ip, [sp, #16]
   13970:	ldr	ip, [r4, #24]
   13974:	str	ip, [sp, #20]
   13978:	ldr	ip, [r4, #28]
   1397c:	str	ip, [sp, #24]
   13980:	mov	r2, r0
   13984:	mov	r0, r5
   13988:	bl	10fcc <__fprintf_chk@plt>
   1398c:	b	13754 <close_stdout@@Base+0x1b44>
   13990:	str	r3, [sp]
   13994:	mov	r3, r2
   13998:	ldr	r2, [pc, #84]	; 139f4 <close_stdout@@Base+0x1de4>
   1399c:	mov	r1, #1
   139a0:	add	r2, pc, r2
   139a4:	bl	10fcc <__fprintf_chk@plt>
   139a8:	b	1366c <close_stdout@@Base+0x1a5c>
   139ac:	ldr	r1, [pc, #68]	; 139f8 <close_stdout@@Base+0x1de8>
   139b0:	mov	r0, #0
   139b4:	add	r1, pc, r1
   139b8:	b	136fc <close_stdout@@Base+0x1aec>
   139bc:			; <UNDEFINED> instruction: 0x000129b8
   139c0:	strdeq	r1, [r0], -r4
   139c4:	strdeq	r1, [r0], -r4
   139c8:	andeq	r0, r0, r4, lsl #2
   139cc:	andeq	r1, r0, r4, asr #13
   139d0:	andeq	r1, r0, r0, asr r8
   139d4:	ldrdeq	r1, [r0], -r0
   139d8:			; <UNDEFINED> instruction: 0x000016b0
   139dc:	muleq	r0, r4, r6
   139e0:	andeq	r1, r0, r4, ror r6
   139e4:	andeq	r1, r0, r4, asr r6
   139e8:	andeq	r1, r0, r0, lsr r6
   139ec:	andeq	r1, r0, r8, lsl #12
   139f0:	ldrdeq	r1, [r0], -ip
   139f4:	andeq	r1, r0, r4, asr #7
   139f8:	andeq	r1, r0, r8, asr #11
   139fc:	push	{r4, r5, lr}
   13a00:	sub	sp, sp, #12
   13a04:	ldr	r5, [sp, #24]
   13a08:	ldr	ip, [r5]
   13a0c:	cmp	ip, #0
   13a10:	beq	13a2c <close_stdout@@Base+0x1e1c>
   13a14:	mov	lr, r5
   13a18:	mov	ip, #0
   13a1c:	ldr	r4, [lr, #4]!
   13a20:	add	ip, ip, #1
   13a24:	cmp	r4, #0
   13a28:	bne	13a1c <close_stdout@@Base+0x1e0c>
   13a2c:	stm	sp, {r5, ip}
   13a30:	bl	13628 <close_stdout@@Base+0x1a18>
   13a34:	add	sp, sp, #12
   13a38:	pop	{r4, r5, pc}
   13a3c:	push	{r4, r5, r6, r7, lr}
   13a40:	sub	sp, sp, #60	; 0x3c
   13a44:	ldr	r4, [pc, #100]	; 13ab0 <close_stdout@@Base+0x1ea0>
   13a48:	mov	ip, #0
   13a4c:	ldr	r5, [pc, #96]	; 13ab4 <close_stdout@@Base+0x1ea4>
   13a50:	mov	lr, ip
   13a54:	add	r4, pc, r4
   13a58:	ldr	r6, [sp, #80]	; 0x50
   13a5c:	ldr	r7, [r4, r5]
   13a60:	add	r5, sp, #12
   13a64:	ldr	r4, [r7]
   13a68:	str	r4, [sp, #52]	; 0x34
   13a6c:	ldr	r4, [r6, ip]
   13a70:	cmp	r4, #0
   13a74:	str	r4, [r5, ip]
   13a78:	beq	13a8c <close_stdout@@Base+0x1e7c>
   13a7c:	add	lr, lr, #1
   13a80:	add	ip, ip, #4
   13a84:	cmp	lr, #10
   13a88:	bne	13a6c <close_stdout@@Base+0x1e5c>
   13a8c:	stm	sp, {r5, lr}
   13a90:	bl	13628 <close_stdout@@Base+0x1a18>
   13a94:	ldr	r2, [sp, #52]	; 0x34
   13a98:	ldr	r3, [r7]
   13a9c:	cmp	r2, r3
   13aa0:	bne	13aac <close_stdout@@Base+0x1e9c>
   13aa4:	add	sp, sp, #60	; 0x3c
   13aa8:	pop	{r4, r5, r6, r7, pc}
   13aac:	bl	10e88 <__stack_chk_fail@plt>
   13ab0:	andeq	r2, r1, r4, lsr #11
   13ab4:	ldrdeq	r0, [r0], -ip
   13ab8:	push	{r3}		; (str r3, [sp, #-4]!)
   13abc:	push	{r4, lr}
   13ac0:	sub	sp, sp, #20
   13ac4:	ldr	lr, [pc, #72]	; 13b14 <close_stdout@@Base+0x1f04>
   13ac8:	add	ip, sp, #32
   13acc:	ldr	r4, [pc, #68]	; 13b18 <close_stdout@@Base+0x1f08>
   13ad0:	add	lr, pc, lr
   13ad4:	ldr	r3, [sp, #28]
   13ad8:	ldr	r4, [lr, r4]
   13adc:	str	ip, [sp]
   13ae0:	str	ip, [sp, #8]
   13ae4:	ldr	ip, [r4]
   13ae8:	str	ip, [sp, #12]
   13aec:	bl	13a3c <close_stdout@@Base+0x1e2c>
   13af0:	ldr	r2, [sp, #12]
   13af4:	ldr	r3, [r4]
   13af8:	cmp	r2, r3
   13afc:	bne	13b10 <close_stdout@@Base+0x1f00>
   13b00:	add	sp, sp, #20
   13b04:	pop	{r4, lr}
   13b08:	add	sp, sp, #4
   13b0c:	bx	lr
   13b10:	bl	10e88 <__stack_chk_fail@plt>
   13b14:	andeq	r2, r1, r8, lsr #10
   13b18:	ldrdeq	r0, [r0], -ip
   13b1c:	ldr	r1, [pc, #132]	; 13ba8 <close_stdout@@Base+0x1f98>
   13b20:	mov	r2, #5
   13b24:	push	{r4, lr}
   13b28:	add	r1, pc, r1
   13b2c:	mov	r0, #0
   13b30:	ldr	r4, [pc, #116]	; 13bac <close_stdout@@Base+0x1f9c>
   13b34:	bl	10e7c <dcgettext@plt>
   13b38:	ldr	r2, [pc, #112]	; 13bb0 <close_stdout@@Base+0x1fa0>
   13b3c:	add	r4, pc, r4
   13b40:	add	r2, pc, r2
   13b44:	mov	r1, r0
   13b48:	mov	r0, #1
   13b4c:	bl	10fb4 <__printf_chk@plt>
   13b50:	ldr	r1, [pc, #92]	; 13bb4 <close_stdout@@Base+0x1fa4>
   13b54:	mov	r2, #5
   13b58:	mov	r0, #0
   13b5c:	add	r1, pc, r1
   13b60:	bl	10e7c <dcgettext@plt>
   13b64:	ldr	r2, [pc, #76]	; 13bb8 <close_stdout@@Base+0x1fa8>
   13b68:	ldr	r3, [pc, #76]	; 13bbc <close_stdout@@Base+0x1fac>
   13b6c:	add	r2, pc, r2
   13b70:	add	r3, pc, r3
   13b74:	mov	r1, r0
   13b78:	mov	r0, #1
   13b7c:	bl	10fb4 <__printf_chk@plt>
   13b80:	ldr	r1, [pc, #56]	; 13bc0 <close_stdout@@Base+0x1fb0>
   13b84:	mov	r0, #0
   13b88:	mov	r2, #5
   13b8c:	add	r1, pc, r1
   13b90:	bl	10e7c <dcgettext@plt>
   13b94:	ldr	r3, [pc, #40]	; 13bc4 <close_stdout@@Base+0x1fb4>
   13b98:	ldr	r3, [r4, r3]
   13b9c:	pop	{r4, lr}
   13ba0:	ldr	r1, [r3]
   13ba4:	b	10e10 <fputs_unlocked@plt>
   13ba8:	muleq	r0, r0, r4
   13bac:			; <UNDEFINED> instruction: 0x000124bc
   13bb0:	muleq	r0, r0, r4
   13bb4:	andeq	r1, r0, ip, lsl #9
   13bb8:	strdeq	r0, [r0], -r4
   13bbc:	andeq	r1, r0, r0
   13bc0:	andeq	r1, r0, r0, ror r4
   13bc4:	strdeq	r0, [r0], -r4
   13bc8:	push	{r4, lr}
   13bcc:	mov	r4, r0
   13bd0:	bl	10f24 <malloc@plt>
   13bd4:	rsbs	r3, r0, #1
   13bd8:	movcc	r3, #0
   13bdc:	cmp	r4, #0
   13be0:	moveq	r3, #0
   13be4:	cmp	r3, #0
   13be8:	popeq	{r4, pc}
   13bec:	bl	13ddc <close_stdout@@Base+0x21cc>
   13bf0:	push	{r3, r4, r5, lr}
   13bf4:	mov	r4, r0
   13bf8:	mvn	r0, #0
   13bfc:	mov	r5, r1
   13c00:	bl	1447c <close_stdout@@Base+0x286c>
   13c04:	cmp	r0, r4
   13c08:	bcc	13c18 <close_stdout@@Base+0x2008>
   13c0c:	mul	r0, r4, r5
   13c10:	pop	{r3, r4, r5, lr}
   13c14:	b	13bc8 <close_stdout@@Base+0x1fb8>
   13c18:	bl	13ddc <close_stdout@@Base+0x21cc>
   13c1c:	b	13bc8 <close_stdout@@Base+0x1fb8>
   13c20:	rsbs	r3, r1, #1
   13c24:	push	{r4, lr}
   13c28:	movcc	r3, #0
   13c2c:	cmp	r0, #0
   13c30:	mov	r4, r1
   13c34:	moveq	r3, #0
   13c38:	cmp	r3, #0
   13c3c:	bne	13c60 <close_stdout@@Base+0x2050>
   13c40:	bl	10e94 <realloc@plt>
   13c44:	rsbs	r3, r0, #1
   13c48:	movcc	r3, #0
   13c4c:	cmp	r4, #0
   13c50:	moveq	r3, #0
   13c54:	cmp	r3, #0
   13c58:	popeq	{r4, pc}
   13c5c:	bl	13ddc <close_stdout@@Base+0x21cc>
   13c60:	bl	10e40 <free@plt>
   13c64:	mov	r0, #0
   13c68:	pop	{r4, pc}
   13c6c:	push	{r4, r5, r6, lr}
   13c70:	mov	r5, r1
   13c74:	mov	r6, r0
   13c78:	mov	r1, r2
   13c7c:	mvn	r0, #0
   13c80:	mov	r4, r2
   13c84:	bl	1447c <close_stdout@@Base+0x286c>
   13c88:	cmp	r0, r5
   13c8c:	bcc	13ca0 <close_stdout@@Base+0x2090>
   13c90:	mov	r0, r6
   13c94:	mul	r1, r5, r4
   13c98:	pop	{r4, r5, r6, lr}
   13c9c:	b	13c20 <close_stdout@@Base+0x2010>
   13ca0:	bl	13ddc <close_stdout@@Base+0x21cc>
   13ca4:	push	{r3, r4, r5, r6, r7, lr}
   13ca8:	subs	r7, r0, #0
   13cac:	mov	r5, r1
   13cb0:	mov	r6, r2
   13cb4:	ldr	r4, [r1]
   13cb8:	beq	13cf0 <close_stdout@@Base+0x20e0>
   13cbc:	movw	r0, #43690	; 0xaaaa
   13cc0:	mov	r1, r2
   13cc4:	bfi	r0, r0, #16, #16
   13cc8:	bl	1447c <close_stdout@@Base+0x286c>
   13ccc:	cmp	r4, r0
   13cd0:	addcc	r3, r4, #1
   13cd4:	addcc	r4, r4, r3, lsr #1
   13cd8:	bcs	13d14 <close_stdout@@Base+0x2104>
   13cdc:	str	r4, [r5]
   13ce0:	mov	r0, r7
   13ce4:	mul	r1, r6, r4
   13ce8:	pop	{r3, r4, r5, r6, r7, lr}
   13cec:	b	13c20 <close_stdout@@Base+0x2010>
   13cf0:	cmp	r4, #0
   13cf4:	bne	13cdc <close_stdout@@Base+0x20cc>
   13cf8:	mov	r0, #64	; 0x40
   13cfc:	mov	r1, r2
   13d00:	bl	1447c <close_stdout@@Base+0x286c>
   13d04:	cmp	r0, #0
   13d08:	movne	r4, r0
   13d0c:	addeq	r4, r0, #1
   13d10:	b	13cdc <close_stdout@@Base+0x20cc>
   13d14:	bl	13ddc <close_stdout@@Base+0x21cc>
   13d18:	cmp	r0, #0
   13d1c:	push	{r3, lr}
   13d20:	ldr	r3, [r1]
   13d24:	beq	13d50 <close_stdout@@Base+0x2140>
   13d28:	movw	r2, #43689	; 0xaaa9
   13d2c:	movt	r2, #43690	; 0xaaaa
   13d30:	cmp	r3, r2
   13d34:	addls	r2, r3, #1
   13d38:	addls	r3, r3, r2, lsr #1
   13d3c:	bhi	13d68 <close_stdout@@Base+0x2158>
   13d40:	str	r3, [r1]
   13d44:	mov	r1, r3
   13d48:	pop	{r3, lr}
   13d4c:	b	13c20 <close_stdout@@Base+0x2010>
   13d50:	cmp	r3, #0
   13d54:	moveq	r3, #64	; 0x40
   13d58:	str	r3, [r1]
   13d5c:	mov	r1, r3
   13d60:	pop	{r3, lr}
   13d64:	b	13c20 <close_stdout@@Base+0x2010>
   13d68:	bl	13ddc <close_stdout@@Base+0x21cc>
   13d6c:	push	{r4, lr}
   13d70:	mov	r4, r0
   13d74:	bl	13bc8 <close_stdout@@Base+0x1fb8>
   13d78:	mov	r2, r4
   13d7c:	mov	r1, #0
   13d80:	pop	{r4, lr}
   13d84:	b	10f9c <memset@plt>
   13d88:	push	{r3, lr}
   13d8c:	bl	10e04 <calloc@plt>
   13d90:	cmp	r0, #0
   13d94:	popne	{r3, pc}
   13d98:	bl	13ddc <close_stdout@@Base+0x21cc>
   13d9c:	push	{r3, r4, r5, lr}
   13da0:	mov	r4, r1
   13da4:	mov	r5, r0
   13da8:	mov	r0, r1
   13dac:	bl	13bc8 <close_stdout@@Base+0x1fb8>
   13db0:	mov	r1, r5
   13db4:	mov	r2, r4
   13db8:	pop	{r3, r4, r5, lr}
   13dbc:	b	10e58 <memcpy@plt>
   13dc0:	push	{r4, lr}
   13dc4:	mov	r4, r0
   13dc8:	bl	10f6c <strlen@plt>
   13dcc:	add	r1, r0, #1
   13dd0:	mov	r0, r4
   13dd4:	pop	{r4, lr}
   13dd8:	b	13d9c <close_stdout@@Base+0x218c>
   13ddc:	ldr	r3, [pc, #64]	; 13e24 <close_stdout@@Base+0x2214>
   13de0:	mov	r2, #5
   13de4:	ldr	ip, [pc, #60]	; 13e28 <close_stdout@@Base+0x2218>
   13de8:	mov	r0, #0
   13dec:	add	r3, pc, r3
   13df0:	ldr	r1, [pc, #52]	; 13e2c <close_stdout@@Base+0x221c>
   13df4:	push	{r4, lr}
   13df8:	add	r1, pc, r1
   13dfc:	ldr	r3, [r3, ip]
   13e00:	ldr	r4, [r3]
   13e04:	bl	10e7c <dcgettext@plt>
   13e08:	ldr	r2, [pc, #32]	; 13e30 <close_stdout@@Base+0x2220>
   13e0c:	mov	r1, #0
   13e10:	add	r2, pc, r2
   13e14:	mov	r3, r0
   13e18:	mov	r0, r4
   13e1c:	bl	10f00 <error@plt>
   13e20:	bl	11044 <abort@plt>
   13e24:	andeq	r2, r1, ip, lsl #4
   13e28:	strdeq	r0, [r0], -r8
   13e2c:	andeq	r1, r0, r4, ror r2
   13e30:	andeq	r0, r0, r0, lsl #29
   13e34:	push	{r4, r5, r6, lr}
   13e38:	mov	r4, r0
   13e3c:	bl	10ee8 <__fpending@plt>
   13e40:	mov	r6, r0
   13e44:	mov	r0, r4
   13e48:	ldr	r4, [r4]
   13e4c:	bl	142d4 <close_stdout@@Base+0x26c4>
   13e50:	and	r4, r4, #32
   13e54:	adds	r5, r0, #0
   13e58:	movne	r5, #1
   13e5c:	cmp	r4, #0
   13e60:	bne	13e80 <close_stdout@@Base+0x2270>
   13e64:	cmp	r5, #0
   13e68:	beq	13e78 <close_stdout@@Base+0x2268>
   13e6c:	cmp	r6, #0
   13e70:	beq	13e9c <close_stdout@@Base+0x228c>
   13e74:	mvn	r4, #0
   13e78:	mov	r0, r4
   13e7c:	pop	{r4, r5, r6, pc}
   13e80:	cmp	r5, #0
   13e84:	bne	13e74 <close_stdout@@Base+0x2264>
   13e88:	bl	10f84 <__errno_location@plt>
   13e8c:	mvn	r4, #0
   13e90:	str	r5, [r0]
   13e94:	mov	r0, r4
   13e98:	pop	{r4, r5, r6, pc}
   13e9c:	bl	10f84 <__errno_location@plt>
   13ea0:	ldr	r4, [r0]
   13ea4:	subs	r4, r4, #9
   13ea8:	mvnne	r4, #0
   13eac:	mov	r0, r4
   13eb0:	pop	{r4, r5, r6, pc}
   13eb4:	ldr	r3, [pc, #984]	; 14294 <close_stdout@@Base+0x2684>
   13eb8:	mov	r0, #14
   13ebc:	ldr	r2, [pc, #980]	; 14298 <close_stdout@@Base+0x2688>
   13ec0:	add	r3, pc, r3
   13ec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ec8:	sub	sp, sp, #132	; 0x84
   13ecc:	ldr	r6, [r3, r2]
   13ed0:	ldr	r3, [r6]
   13ed4:	str	r3, [sp, #124]	; 0x7c
   13ed8:	bl	11020 <nl_langinfo@plt>
   13edc:	subs	r5, r0, #0
   13ee0:	beq	13f94 <close_stdout@@Base+0x2384>
   13ee4:	ldr	r3, [pc, #944]	; 1429c <close_stdout@@Base+0x268c>
   13ee8:	ldr	r4, [pc, r3]
   13eec:	cmp	r4, #0
   13ef0:	beq	13fa0 <close_stdout@@Base+0x2390>
   13ef4:	ldrb	r7, [r4]
   13ef8:	cmp	r7, #0
   13efc:	bne	13f30 <close_stdout@@Base+0x2320>
   13f00:	b	13f68 <close_stdout@@Base+0x2358>
   13f04:	mov	r0, r4
   13f08:	bl	10f6c <strlen@plt>
   13f0c:	add	r0, r0, #1
   13f10:	add	r7, r4, r0
   13f14:	mov	r0, r7
   13f18:	bl	10f6c <strlen@plt>
   13f1c:	add	r0, r0, #1
   13f20:	add	r4, r7, r0
   13f24:	ldrb	r7, [r7, r0]
   13f28:	cmp	r7, #0
   13f2c:	beq	13f68 <close_stdout@@Base+0x2358>
   13f30:	mov	r0, r5
   13f34:	mov	r1, r4
   13f38:	bl	10e28 <strcmp@plt>
   13f3c:	cmp	r0, #0
   13f40:	beq	13f58 <close_stdout@@Base+0x2348>
   13f44:	cmp	r7, #42	; 0x2a
   13f48:	bne	13f04 <close_stdout@@Base+0x22f4>
   13f4c:	ldrb	r3, [r4, #1]
   13f50:	cmp	r3, #0
   13f54:	bne	13f04 <close_stdout@@Base+0x22f4>
   13f58:	mov	r0, r4
   13f5c:	bl	10f6c <strlen@plt>
   13f60:	add	r0, r0, #1
   13f64:	add	r5, r4, r0
   13f68:	ldrb	r3, [r5]
   13f6c:	cmp	r3, #0
   13f70:	ldreq	r5, [pc, #808]	; 142a0 <close_stdout@@Base+0x2690>
   13f74:	addeq	r5, pc, r5
   13f78:	ldr	r2, [sp, #124]	; 0x7c
   13f7c:	mov	r0, r5
   13f80:	ldr	r3, [r6]
   13f84:	cmp	r2, r3
   13f88:	bne	14268 <close_stdout@@Base+0x2658>
   13f8c:	add	sp, sp, #132	; 0x84
   13f90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f94:	ldr	r5, [pc, #776]	; 142a4 <close_stdout@@Base+0x2694>
   13f98:	add	r5, pc, r5
   13f9c:	b	13ee4 <close_stdout@@Base+0x22d4>
   13fa0:	ldr	r0, [pc, #768]	; 142a8 <close_stdout@@Base+0x2698>
   13fa4:	add	r0, pc, r0
   13fa8:	bl	10f18 <getenv@plt>
   13fac:	subs	r8, r0, #0
   13fb0:	beq	14240 <close_stdout@@Base+0x2630>
   13fb4:	ldrb	r3, [r8]
   13fb8:	cmp	r3, #0
   13fbc:	beq	141d4 <close_stdout@@Base+0x25c4>
   13fc0:	bl	10f6c <strlen@plt>
   13fc4:	subs	sl, r0, #0
   13fc8:	subne	r3, sl, #1
   13fcc:	bne	141e4 <close_stdout@@Base+0x25d4>
   13fd0:	mov	r9, #0
   13fd4:	mov	fp, r9
   13fd8:	add	r9, sl, r9
   13fdc:	add	r0, r9, #14
   13fe0:	bl	10f24 <malloc@plt>
   13fe4:	subs	r7, r0, #0
   13fe8:	beq	14234 <close_stdout@@Base+0x2624>
   13fec:	mov	r1, r8
   13ff0:	mov	r2, sl
   13ff4:	bl	10e58 <memcpy@plt>
   13ff8:	cmp	fp, #0
   13ffc:	add	ip, r7, r9
   14000:	movne	r3, #47	; 0x2f
   14004:	strbne	r3, [r7, sl]
   14008:	ldr	r3, [pc, #668]	; 142ac <close_stdout@@Base+0x269c>
   1400c:	add	r3, pc, r3
   14010:	ldm	r3!, {r0, r1, r2}
   14014:	ldrh	r3, [r3]
   14018:	str	r0, [r7, r9]
   1401c:	mov	r0, r7
   14020:	str	r1, [ip, #4]
   14024:	mov	r1, #32768	; 0x8000
   14028:	strh	r3, [ip, #12]
   1402c:	str	r2, [ip, #8]
   14030:	bl	10f0c <open64@plt>
   14034:	subs	r8, r0, #0
   14038:	blt	141fc <close_stdout@@Base+0x25ec>
   1403c:	ldr	r1, [pc, #620]	; 142b0 <close_stdout@@Base+0x26a0>
   14040:	add	r1, pc, r1
   14044:	bl	10df8 <fdopen@plt>
   14048:	subs	fp, r0, #0
   1404c:	beq	14254 <close_stdout@@Base+0x2644>
   14050:	ldr	r0, [pc, #604]	; 142b4 <close_stdout@@Base+0x26a4>
   14054:	add	sl, sp, #20
   14058:	add	r9, sp, #72	; 0x48
   1405c:	mov	r8, #0
   14060:	add	r0, pc, r0
   14064:	str	r0, [sp, #12]
   14068:	ldr	r3, [fp, #4]
   1406c:	ldr	r2, [fp, #8]
   14070:	cmp	r3, r2
   14074:	bcs	14160 <close_stdout@@Base+0x2550>
   14078:	add	r2, r3, #1
   1407c:	str	r2, [fp, #4]
   14080:	ldrb	r0, [r3]
   14084:	cmp	r0, #32
   14088:	beq	14068 <close_stdout@@Base+0x2458>
   1408c:	sub	r3, r0, #9
   14090:	cmp	r3, #1
   14094:	bls	14068 <close_stdout@@Base+0x2458>
   14098:	cmp	r0, #35	; 0x23
   1409c:	beq	14174 <close_stdout@@Base+0x2564>
   140a0:	mov	r1, fp
   140a4:	bl	10f78 <ungetc@plt>
   140a8:	mov	r0, fp
   140ac:	ldr	r1, [sp, #12]
   140b0:	mov	r2, sl
   140b4:	mov	r3, r9
   140b8:	bl	10fa8 <fscanf@plt>
   140bc:	cmp	r0, #1
   140c0:	ble	141a4 <close_stdout@@Base+0x2594>
   140c4:	mov	r0, sl
   140c8:	bl	10f6c <strlen@plt>
   140cc:	str	r0, [sp, #8]
   140d0:	mov	r0, r9
   140d4:	bl	10f6c <strlen@plt>
   140d8:	cmp	r8, #0
   140dc:	mov	r2, r0
   140e0:	bne	14208 <close_stdout@@Base+0x25f8>
   140e4:	ldr	r3, [sp, #8]
   140e8:	str	r2, [sp]
   140ec:	add	r8, r0, r3
   140f0:	add	r0, r8, #3
   140f4:	add	r8, r8, #2
   140f8:	bl	10f24 <malloc@plt>
   140fc:	ldr	r2, [sp]
   14100:	mov	r3, r0
   14104:	cmp	r3, #0
   14108:	beq	1426c <close_stdout@@Base+0x265c>
   1410c:	ldr	r0, [sp, #8]
   14110:	movw	r1, #65534	; 0xfffe
   14114:	movt	r1, #65535	; 0xffff
   14118:	rsb	r2, r2, r8
   1411c:	rsb	r1, r0, r1
   14120:	stm	sp, {r2, r3}
   14124:	add	r0, r1, r2
   14128:	mov	r1, sl
   1412c:	add	r0, r3, r0
   14130:	mov	r4, r3
   14134:	bl	10edc <strcpy@plt>
   14138:	ldr	r2, [sp]
   1413c:	ldr	r3, [sp, #4]
   14140:	mov	r1, r9
   14144:	sub	r0, r2, #1
   14148:	add	r0, r3, r0
   1414c:	bl	10edc <strcpy@plt>
   14150:	ldr	r3, [fp, #4]
   14154:	ldr	r2, [fp, #8]
   14158:	cmp	r3, r2
   1415c:	bcc	14078 <close_stdout@@Base+0x2468>
   14160:	mov	r0, fp
   14164:	bl	10ff0 <__uflow@plt>
   14168:	cmn	r0, #1
   1416c:	beq	141a4 <close_stdout@@Base+0x2594>
   14170:	b	14084 <close_stdout@@Base+0x2474>
   14174:	ldr	r3, [fp, #4]
   14178:	ldr	r2, [fp, #8]
   1417c:	cmp	r3, r2
   14180:	bcs	14288 <close_stdout@@Base+0x2678>
   14184:	add	r2, r3, #1
   14188:	str	r2, [fp, #4]
   1418c:	ldrb	r0, [r3]
   14190:	cmp	r0, #10
   14194:	cmnne	r0, #1
   14198:	bne	14174 <close_stdout@@Base+0x2564>
   1419c:	cmn	r0, #1
   141a0:	bne	14068 <close_stdout@@Base+0x2458>
   141a4:	mov	r0, fp
   141a8:	bl	142d4 <close_stdout@@Base+0x26c4>
   141ac:	cmp	r8, #0
   141b0:	beq	141fc <close_stdout@@Base+0x25ec>
   141b4:	mov	r3, #0
   141b8:	strb	r3, [r4, r8]
   141bc:	mov	r0, r7
   141c0:	bl	10e40 <free@plt>
   141c4:	ldr	r3, [pc, #236]	; 142b8 <close_stdout@@Base+0x26a8>
   141c8:	add	r3, pc, r3
   141cc:	str	r4, [r3]
   141d0:	b	13ef4 <close_stdout@@Base+0x22e4>
   141d4:	ldr	r8, [pc, #224]	; 142bc <close_stdout@@Base+0x26ac>
   141d8:	mov	r3, #7
   141dc:	mov	sl, #8
   141e0:	add	r8, pc, r8
   141e4:	ldrb	r3, [r8, r3]
   141e8:	cmp	r3, #47	; 0x2f
   141ec:	movne	r9, #1
   141f0:	movne	fp, r9
   141f4:	bne	13fd8 <close_stdout@@Base+0x23c8>
   141f8:	b	13fd0 <close_stdout@@Base+0x23c0>
   141fc:	ldr	r4, [pc, #188]	; 142c0 <close_stdout@@Base+0x26b0>
   14200:	add	r4, pc, r4
   14204:	b	141bc <close_stdout@@Base+0x25ac>
   14208:	ldr	r0, [sp, #8]
   1420c:	str	r2, [sp]
   14210:	add	r3, r0, r2
   14214:	mov	r0, r4
   14218:	add	r8, r3, r8
   1421c:	add	r1, r8, #3
   14220:	add	r8, r8, #2
   14224:	bl	10e94 <realloc@plt>
   14228:	ldr	r2, [sp]
   1422c:	mov	r3, r0
   14230:	b	14104 <close_stdout@@Base+0x24f4>
   14234:	ldr	r4, [pc, #136]	; 142c4 <close_stdout@@Base+0x26b4>
   14238:	add	r4, pc, r4
   1423c:	b	141c4 <close_stdout@@Base+0x25b4>
   14240:	ldr	r8, [pc, #128]	; 142c8 <close_stdout@@Base+0x26b8>
   14244:	mov	r3, #7
   14248:	mov	sl, #8
   1424c:	add	r8, pc, r8
   14250:	b	141e4 <close_stdout@@Base+0x25d4>
   14254:	ldr	r4, [pc, #112]	; 142cc <close_stdout@@Base+0x26bc>
   14258:	mov	r0, r8
   1425c:	add	r4, pc, r4
   14260:	bl	11050 <close@plt>
   14264:	b	141bc <close_stdout@@Base+0x25ac>
   14268:	bl	10e88 <__stack_chk_fail@plt>
   1426c:	mov	r0, r4
   14270:	ldr	r4, [pc, #88]	; 142d0 <close_stdout@@Base+0x26c0>
   14274:	bl	10e40 <free@plt>
   14278:	mov	r0, fp
   1427c:	add	r4, pc, r4
   14280:	bl	142d4 <close_stdout@@Base+0x26c4>
   14284:	b	141bc <close_stdout@@Base+0x25ac>
   14288:	mov	r0, fp
   1428c:	bl	10ff0 <__uflow@plt>
   14290:	b	14190 <close_stdout@@Base+0x2580>
   14294:	andeq	r2, r1, r8, lsr r1
   14298:	ldrdeq	r0, [r0], -ip
   1429c:	andeq	r2, r1, r8, lsr #7
   142a0:	andeq	r1, r0, r8, lsl r1
   142a4:	andeq	r0, r0, ip, lsl #25
   142a8:	strdeq	r1, [r0], -r0
   142ac:	muleq	r0, r8, r0
   142b0:	andeq	r1, r0, r4, ror r0
   142b4:	andeq	r1, r0, r8, asr r0
   142b8:	andeq	r2, r1, r8, asr #1
   142bc:	andeq	r0, r0, r0, lsr #29
   142c0:	andeq	r0, r0, r4, lsr #20
   142c4:	andeq	r0, r0, ip, ror #19
   142c8:	andeq	r0, r0, r4, lsr lr
   142cc:	andeq	r0, r0, r8, asr #19
   142d0:	andeq	r0, r0, r8, lsr #19
   142d4:	push	{r4, r5, r6, lr}
   142d8:	sub	sp, sp, #8
   142dc:	mov	r4, r0
   142e0:	bl	10fc0 <fileno@plt>
   142e4:	cmp	r0, #0
   142e8:	mov	r0, r4
   142ec:	blt	14368 <close_stdout@@Base+0x2758>
   142f0:	bl	10f3c <__freading@plt>
   142f4:	cmp	r0, #0
   142f8:	bne	14334 <close_stdout@@Base+0x2724>
   142fc:	mov	r0, r4
   14300:	bl	14374 <close_stdout@@Base+0x2764>
   14304:	cmp	r0, #0
   14308:	beq	14364 <close_stdout@@Base+0x2754>
   1430c:	bl	10f84 <__errno_location@plt>
   14310:	ldr	r6, [r0]
   14314:	mov	r5, r0
   14318:	mov	r0, r4
   1431c:	bl	10fd8 <fclose@plt>
   14320:	cmp	r6, #0
   14324:	mvnne	r0, #0
   14328:	strne	r6, [r5]
   1432c:	add	sp, sp, #8
   14330:	pop	{r4, r5, r6, pc}
   14334:	mov	r0, r4
   14338:	bl	10fc0 <fileno@plt>
   1433c:	mov	r1, #1
   14340:	mov	r2, #0
   14344:	mov	r3, #0
   14348:	str	r1, [sp]
   1434c:	bl	10ec4 <lseek64@plt>
   14350:	mvn	r2, #0
   14354:	mvn	r3, #0
   14358:	cmp	r1, r3
   1435c:	cmpeq	r0, r2
   14360:	bne	142fc <close_stdout@@Base+0x26ec>
   14364:	mov	r0, r4
   14368:	add	sp, sp, #8
   1436c:	pop	{r4, r5, r6, lr}
   14370:	b	10fd8 <fclose@plt>
   14374:	push	{r4, lr}
   14378:	subs	r4, r0, #0
   1437c:	sub	sp, sp, #8
   14380:	beq	14390 <close_stdout@@Base+0x2780>
   14384:	bl	10f3c <__freading@plt>
   14388:	cmp	r0, #0
   1438c:	bne	143a0 <close_stdout@@Base+0x2790>
   14390:	mov	r0, r4
   14394:	add	sp, sp, #8
   14398:	pop	{r4, lr}
   1439c:	b	10e34 <fflush@plt>
   143a0:	ldr	r3, [r4]
   143a4:	tst	r3, #256	; 0x100
   143a8:	beq	14390 <close_stdout@@Base+0x2780>
   143ac:	mov	r3, #1
   143b0:	mov	r0, r4
   143b4:	str	r3, [sp]
   143b8:	mov	r2, #0
   143bc:	mov	r3, #0
   143c0:	bl	143d4 <close_stdout@@Base+0x27c4>
   143c4:	mov	r0, r4
   143c8:	add	sp, sp, #8
   143cc:	pop	{r4, lr}
   143d0:	b	10e34 <fflush@plt>
   143d4:	push	{r4, r5, r6, r7, lr}
   143d8:	sub	sp, sp, #20
   143dc:	ldmib	r0, {r1, ip}
   143e0:	mov	r6, r0
   143e4:	ldr	r4, [sp, #40]	; 0x28
   143e8:	cmp	ip, r1
   143ec:	beq	14404 <close_stdout@@Base+0x27f4>
   143f0:	str	r4, [sp, #40]	; 0x28
   143f4:	mov	r0, r6
   143f8:	add	sp, sp, #20
   143fc:	pop	{r4, r5, r6, r7, lr}
   14400:	b	10fe4 <fseeko64@plt>
   14404:	ldr	ip, [r0, #20]
   14408:	ldr	r1, [r0, #16]
   1440c:	cmp	ip, r1
   14410:	bne	143f0 <close_stdout@@Base+0x27e0>
   14414:	ldr	r7, [r0, #36]	; 0x24
   14418:	cmp	r7, #0
   1441c:	bne	143f0 <close_stdout@@Base+0x27e0>
   14420:	str	r2, [sp, #12]
   14424:	mvn	r5, #0
   14428:	str	r3, [sp, #8]
   1442c:	bl	10fc0 <fileno@plt>
   14430:	str	r4, [sp]
   14434:	mvn	r4, #0
   14438:	ldr	r2, [sp, #12]
   1443c:	ldr	r3, [sp, #8]
   14440:	bl	10ec4 <lseek64@plt>
   14444:	mov	r2, r0
   14448:	mov	r3, r1
   1444c:	cmp	r3, r5
   14450:	cmpeq	r2, r4
   14454:	beq	14474 <close_stdout@@Base+0x2864>
   14458:	ldr	r1, [r6]
   1445c:	mov	r0, r7
   14460:	strd	r2, [r6, #80]	; 0x50
   14464:	bic	r3, r1, #16
   14468:	str	r3, [r6]
   1446c:	add	sp, sp, #20
   14470:	pop	{r4, r5, r6, r7, pc}
   14474:	mvn	r0, #0
   14478:	b	1446c <close_stdout@@Base+0x285c>
   1447c:	subs	r2, r1, #1
   14480:	bxeq	lr
   14484:	bcc	1465c <close_stdout@@Base+0x2a4c>
   14488:	cmp	r0, r1
   1448c:	bls	14640 <close_stdout@@Base+0x2a30>
   14490:	tst	r1, r2
   14494:	beq	1464c <close_stdout@@Base+0x2a3c>
   14498:	clz	r3, r0
   1449c:	clz	r2, r1
   144a0:	sub	r3, r2, r3
   144a4:	rsbs	r3, r3, #31
   144a8:	addne	r3, r3, r3, lsl #1
   144ac:	mov	r2, #0
   144b0:	addne	pc, pc, r3, lsl #2
   144b4:	nop	{0}
   144b8:	cmp	r0, r1, lsl #31
   144bc:	adc	r2, r2, r2
   144c0:	subcs	r0, r0, r1, lsl #31
   144c4:	cmp	r0, r1, lsl #30
   144c8:	adc	r2, r2, r2
   144cc:	subcs	r0, r0, r1, lsl #30
   144d0:	cmp	r0, r1, lsl #29
   144d4:	adc	r2, r2, r2
   144d8:	subcs	r0, r0, r1, lsl #29
   144dc:	cmp	r0, r1, lsl #28
   144e0:	adc	r2, r2, r2
   144e4:	subcs	r0, r0, r1, lsl #28
   144e8:	cmp	r0, r1, lsl #27
   144ec:	adc	r2, r2, r2
   144f0:	subcs	r0, r0, r1, lsl #27
   144f4:	cmp	r0, r1, lsl #26
   144f8:	adc	r2, r2, r2
   144fc:	subcs	r0, r0, r1, lsl #26
   14500:	cmp	r0, r1, lsl #25
   14504:	adc	r2, r2, r2
   14508:	subcs	r0, r0, r1, lsl #25
   1450c:	cmp	r0, r1, lsl #24
   14510:	adc	r2, r2, r2
   14514:	subcs	r0, r0, r1, lsl #24
   14518:	cmp	r0, r1, lsl #23
   1451c:	adc	r2, r2, r2
   14520:	subcs	r0, r0, r1, lsl #23
   14524:	cmp	r0, r1, lsl #22
   14528:	adc	r2, r2, r2
   1452c:	subcs	r0, r0, r1, lsl #22
   14530:	cmp	r0, r1, lsl #21
   14534:	adc	r2, r2, r2
   14538:	subcs	r0, r0, r1, lsl #21
   1453c:	cmp	r0, r1, lsl #20
   14540:	adc	r2, r2, r2
   14544:	subcs	r0, r0, r1, lsl #20
   14548:	cmp	r0, r1, lsl #19
   1454c:	adc	r2, r2, r2
   14550:	subcs	r0, r0, r1, lsl #19
   14554:	cmp	r0, r1, lsl #18
   14558:	adc	r2, r2, r2
   1455c:	subcs	r0, r0, r1, lsl #18
   14560:	cmp	r0, r1, lsl #17
   14564:	adc	r2, r2, r2
   14568:	subcs	r0, r0, r1, lsl #17
   1456c:	cmp	r0, r1, lsl #16
   14570:	adc	r2, r2, r2
   14574:	subcs	r0, r0, r1, lsl #16
   14578:	cmp	r0, r1, lsl #15
   1457c:	adc	r2, r2, r2
   14580:	subcs	r0, r0, r1, lsl #15
   14584:	cmp	r0, r1, lsl #14
   14588:	adc	r2, r2, r2
   1458c:	subcs	r0, r0, r1, lsl #14
   14590:	cmp	r0, r1, lsl #13
   14594:	adc	r2, r2, r2
   14598:	subcs	r0, r0, r1, lsl #13
   1459c:	cmp	r0, r1, lsl #12
   145a0:	adc	r2, r2, r2
   145a4:	subcs	r0, r0, r1, lsl #12
   145a8:	cmp	r0, r1, lsl #11
   145ac:	adc	r2, r2, r2
   145b0:	subcs	r0, r0, r1, lsl #11
   145b4:	cmp	r0, r1, lsl #10
   145b8:	adc	r2, r2, r2
   145bc:	subcs	r0, r0, r1, lsl #10
   145c0:	cmp	r0, r1, lsl #9
   145c4:	adc	r2, r2, r2
   145c8:	subcs	r0, r0, r1, lsl #9
   145cc:	cmp	r0, r1, lsl #8
   145d0:	adc	r2, r2, r2
   145d4:	subcs	r0, r0, r1, lsl #8
   145d8:	cmp	r0, r1, lsl #7
   145dc:	adc	r2, r2, r2
   145e0:	subcs	r0, r0, r1, lsl #7
   145e4:	cmp	r0, r1, lsl #6
   145e8:	adc	r2, r2, r2
   145ec:	subcs	r0, r0, r1, lsl #6
   145f0:	cmp	r0, r1, lsl #5
   145f4:	adc	r2, r2, r2
   145f8:	subcs	r0, r0, r1, lsl #5
   145fc:	cmp	r0, r1, lsl #4
   14600:	adc	r2, r2, r2
   14604:	subcs	r0, r0, r1, lsl #4
   14608:	cmp	r0, r1, lsl #3
   1460c:	adc	r2, r2, r2
   14610:	subcs	r0, r0, r1, lsl #3
   14614:	cmp	r0, r1, lsl #2
   14618:	adc	r2, r2, r2
   1461c:	subcs	r0, r0, r1, lsl #2
   14620:	cmp	r0, r1, lsl #1
   14624:	adc	r2, r2, r2
   14628:	subcs	r0, r0, r1, lsl #1
   1462c:	cmp	r0, r1
   14630:	adc	r2, r2, r2
   14634:	subcs	r0, r0, r1
   14638:	mov	r0, r2
   1463c:	bx	lr
   14640:	moveq	r0, #1
   14644:	movne	r0, #0
   14648:	bx	lr
   1464c:	clz	r2, r1
   14650:	rsb	r2, r2, #31
   14654:	lsr	r0, r0, r2
   14658:	bx	lr
   1465c:	cmp	r0, #0
   14660:	mvnne	r0, #0
   14664:	b	14688 <close_stdout@@Base+0x2a78>
   14668:	cmp	r1, #0
   1466c:	beq	1465c <close_stdout@@Base+0x2a4c>
   14670:	push	{r0, r1, lr}
   14674:	bl	1447c <close_stdout@@Base+0x286c>
   14678:	pop	{r1, r2, lr}
   1467c:	mul	r3, r2, r0
   14680:	sub	r1, r1, r3
   14684:	bx	lr
   14688:	push	{r1, lr}
   1468c:	mov	r0, #8
   14690:	bl	10e1c <raise@plt>
   14694:	pop	{r1, pc}
   14698:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1469c:	mov	r7, r0
   146a0:	ldr	r6, [pc, #76]	; 146f4 <close_stdout@@Base+0x2ae4>
   146a4:	mov	r8, r1
   146a8:	ldr	r5, [pc, #72]	; 146f8 <close_stdout@@Base+0x2ae8>
   146ac:	mov	r9, r2
   146b0:	add	r6, pc, r6
   146b4:	bl	10dd8 <fdopen@plt-0x20>
   146b8:	add	r5, pc, r5
   146bc:	rsb	r6, r5, r6
   146c0:	asrs	r6, r6, #2
   146c4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   146c8:	sub	r5, r5, #4
   146cc:	mov	r4, #0
   146d0:	add	r4, r4, #1
   146d4:	ldr	r3, [r5, #4]!
   146d8:	mov	r0, r7
   146dc:	mov	r1, r8
   146e0:	mov	r2, r9
   146e4:	blx	r3
   146e8:	cmp	r4, r6
   146ec:	bne	146d0 <close_stdout@@Base+0x2ac0>
   146f0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   146f4:	andeq	r1, r1, r4, lsr #16
   146f8:	andeq	r1, r1, r8, lsl r8
   146fc:	bx	lr
   14700:	ldr	r3, [pc, #28]	; 14724 <close_stdout@@Base+0x2b14>
   14704:	mov	r1, #0
   14708:	ldr	r2, [pc, #24]	; 14728 <close_stdout@@Base+0x2b18>
   1470c:	add	r3, pc, r3
   14710:	ldr	r3, [r3, r2]
   14714:	cmp	r3, #0
   14718:	ldrne	r2, [r3]
   1471c:	moveq	r2, r3
   14720:	b	10f90 <__cxa_atexit@plt>
   14724:	andeq	r1, r1, ip, ror #17
   14728:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>

Disassembly of section .fini:

0001472c <.fini>:
   1472c:	push	{r3, lr}
   14730:	pop	{r3, pc}
