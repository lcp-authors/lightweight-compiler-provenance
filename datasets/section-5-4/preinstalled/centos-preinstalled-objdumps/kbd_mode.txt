
centos-preinstalled/kbd_mode:     file format elf32-littlearm


Disassembly of section .init:

000106b8 <.init>:
   106b8:	push	{r3, lr}
   106bc:	bl	10b94 <close@plt+0x3f0>
   106c0:	pop	{r3, pc}

Disassembly of section .plt:

000106c4 <dcgettext@plt-0x14>:
   106c4:	push	{lr}		; (str lr, [sp, #-4]!)
   106c8:	ldr	lr, [pc, #4]	; 106d4 <dcgettext@plt-0x4>
   106cc:	add	lr, pc, lr
   106d0:	ldr	pc, [lr, #8]!
   106d4:	andeq	r1, r1, ip, lsr #18

000106d8 <dcgettext@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #69632	; 0x11000
   106e0:	ldr	pc, [ip, #2348]!	; 0x92c

000106e4 <__stack_chk_fail@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #69632	; 0x11000
   106ec:	ldr	pc, [ip, #2340]!	; 0x924

000106f0 <textdomain@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #69632	; 0x11000
   106f8:	ldr	pc, [ip, #2332]!	; 0x91c

000106fc <perror@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #69632	; 0x11000
   10704:	ldr	pc, [ip, #2324]!	; 0x914

00010708 <ioctl@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #69632	; 0x11000
   10710:	ldr	pc, [ip, #2316]!	; 0x90c

00010714 <__libc_start_main@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #69632	; 0x11000
   1071c:	ldr	pc, [ip, #2308]!	; 0x904

00010720 <__gmon_start__@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #69632	; 0x11000
   10728:	ldr	pc, [ip, #2300]!	; 0x8fc

0001072c <open@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #69632	; 0x11000
   10734:	ldr	pc, [ip, #2292]!	; 0x8f4

00010738 <exit@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #69632	; 0x11000
   10740:	ldr	pc, [ip, #2284]!	; 0x8ec

00010744 <getopt@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010750 <__printf_chk@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2268]!	; 0x8dc

0001075c <__fprintf_chk@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2260]!	; 0x8d4

00010768 <setlocale@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2252]!	; 0x8cc

00010774 <strrchr@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010780 <bindtextdomain@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2236]!	; 0x8bc

0001078c <isatty@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2228]!	; 0x8b4

00010798 <abort@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2220]!	; 0x8ac

000107a4 <close@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2212]!	; 0x8a4

Disassembly of section .text:

000107b0 <.text>:
   107b0:	movw	r3, #8288	; 0x2060
   107b4:	movt	r3, #2
   107b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   107bc:	sub	sp, sp, #12
   107c0:	ldr	r4, [r1]
   107c4:	mov	r6, r0
   107c8:	ldr	r3, [r3]
   107cc:	mov	r5, r1
   107d0:	mov	r1, #47	; 0x2f
   107d4:	movw	r8, #8304	; 0x2070
   107d8:	mov	r0, r4
   107dc:	movt	r8, #2
   107e0:	str	r3, [sp, #4]
   107e4:	bl	10774 <strrchr@plt>
   107e8:	movw	r1, #4176	; 0x1050
   107ec:	movt	r1, #1
   107f0:	cmp	r0, #0
   107f4:	addne	r4, r0, #1
   107f8:	mov	r0, #6
   107fc:	str	r4, [r8]
   10800:	bl	10768 <setlocale@plt>
   10804:	movw	r0, #3892	; 0xf34
   10808:	movw	r1, #3896	; 0xf38
   1080c:	movt	r0, #1
   10810:	movt	r1, #1
   10814:	bl	10780 <bindtextdomain@plt>
   10818:	movw	r0, #3892	; 0xf34
   1081c:	movt	r0, #1
   10820:	bl	106f0 <textdomain@plt>
   10824:	cmp	r6, #2
   10828:	beq	109b0 <close@plt+0x20c>
   1082c:	mov	r7, #0
   10830:	movw	r9, #8296	; 0x2068
   10834:	movt	r9, #2
   10838:	mov	r4, r7
   1083c:	mov	fp, r7
   10840:	mov	sl, #2
   10844:	movw	r2, #3940	; 0xf64
   10848:	mov	r0, r6
   1084c:	movt	r2, #1
   10850:	mov	r1, r5
   10854:	bl	10744 <getopt@plt>
   10858:	cmn	r0, #1
   1085c:	beq	10a0c <close@plt+0x268>
   10860:	sub	r0, r0, #67	; 0x43
   10864:	cmp	r0, #50	; 0x32
   10868:	ldrls	pc, [pc, r0, lsl #2]
   1086c:	b	109ac <close@plt+0x208>
   10870:	muleq	r1, r4, r9
   10874:	andeq	r0, r1, ip, lsr #19
   10878:	andeq	r0, r1, ip, lsr #19
   1087c:	andeq	r0, r1, ip, lsr #19
   10880:	andeq	r0, r1, ip, lsr #19
   10884:	andeq	r0, r1, ip, lsr #19
   10888:	andeq	r0, r1, ip, lsr #19
   1088c:	andeq	r0, r1, ip, lsr #19
   10890:	andeq	r0, r1, ip, lsr #19
   10894:	andeq	r0, r1, ip, lsr #19
   10898:	andeq	r0, r1, ip, lsr #19
   1089c:	andeq	r0, r1, ip, lsr #19
   108a0:	andeq	r0, r1, ip, lsr #19
   108a4:	andeq	r0, r1, ip, lsr #19
   108a8:	andeq	r0, r1, ip, lsr #19
   108ac:	andeq	r0, r1, ip, lsr #19
   108b0:	andeq	r0, r1, ip, lsr #19
   108b4:	andeq	r0, r1, ip, lsr #19
   108b8:	andeq	r0, r1, ip, lsr #19
   108bc:	andeq	r0, r1, ip, lsr #19
   108c0:	andeq	r0, r1, ip, lsr #19
   108c4:	andeq	r0, r1, ip, lsr #19
   108c8:	andeq	r0, r1, ip, lsr #19
   108cc:	andeq	r0, r1, ip, lsr #19
   108d0:	andeq	r0, r1, ip, lsr #19
   108d4:	andeq	r0, r1, ip, lsr #19
   108d8:	andeq	r0, r1, ip, lsr #19
   108dc:	andeq	r0, r1, ip, lsr #19
   108e0:	andeq	r0, r1, ip, lsr #19
   108e4:	andeq	r0, r1, ip, lsr #19
   108e8:	andeq	r0, r1, ip, ror r9
   108ec:	andeq	r0, r1, ip, lsr #19
   108f0:	andeq	r0, r1, ip, lsr #19
   108f4:	andeq	r0, r1, ip, lsr #19
   108f8:	andeq	r0, r1, ip, lsr #19
   108fc:	andeq	r0, r1, ip, lsr #19
   10900:	andeq	r0, r1, ip, lsr #19
   10904:	andeq	r0, r1, ip, lsr #19
   10908:	andeq	r0, r1, ip, lsr #19
   1090c:	andeq	r0, r1, ip, lsr #19
   10910:	andeq	r0, r1, r8, ror #18
   10914:	andeq	r0, r1, ip, lsr #19
   10918:	andeq	r0, r1, ip, lsr #19
   1091c:	andeq	r0, r1, ip, lsr #19
   10920:	andeq	r0, r1, ip, lsr #19
   10924:	andeq	r0, r1, ip, lsr #19
   10928:	andeq	r0, r1, ip, lsr #19
   1092c:	andeq	r0, r1, ip, lsr #19
   10930:	andeq	r0, r1, r4, asr r9
   10934:	andeq	r0, r1, ip, lsr #19
   10938:	andeq	r0, r1, ip, lsr r9
   1093c:	cmp	r4, #1
   10940:	beq	109ac <close@plt+0x208>
   10944:	mov	r3, #3
   10948:	mov	r4, #1
   1094c:	str	r3, [sp]
   10950:	b	10844 <close@plt+0xa0>
   10954:	cmp	r4, #1
   10958:	beq	109ac <close@plt+0x208>
   1095c:	str	fp, [sp]
   10960:	mov	r4, #1
   10964:	b	10844 <close@plt+0xa0>
   10968:	cmp	r4, #1
   1096c:	beq	109ac <close@plt+0x208>
   10970:	str	sl, [sp]
   10974:	mov	r4, #1
   10978:	b	10844 <close@plt+0xa0>
   1097c:	cmp	r4, #1
   10980:	beq	109ac <close@plt+0x208>
   10984:	mov	r3, #1
   10988:	str	r3, [sp]
   1098c:	mov	r4, r3
   10990:	b	10844 <close@plt+0xa0>
   10994:	ldr	r7, [r9]
   10998:	cmp	r7, #0
   1099c:	beq	109ac <close@plt+0x208>
   109a0:	ldrb	r3, [r7]
   109a4:	cmp	r3, #0
   109a8:	bne	10844 <close@plt+0xa0>
   109ac:	bl	10c8c <close@plt+0x4e8>
   109b0:	ldr	r3, [r5, #4]
   109b4:	ldrb	r2, [r3]
   109b8:	cmp	r2, #45	; 0x2d
   109bc:	bne	1082c <close@plt+0x88>
   109c0:	ldrb	r2, [r3, #1]
   109c4:	cmp	r2, #86	; 0x56
   109c8:	bne	1082c <close@plt+0x88>
   109cc:	ldrb	r4, [r3, #2]
   109d0:	cmp	r4, #0
   109d4:	bne	1082c <close@plt+0x88>
   109d8:	mov	r2, #5
   109dc:	movw	r1, #3916	; 0xf4c
   109e0:	mov	r0, r4
   109e4:	movt	r1, #1
   109e8:	bl	106d8 <dcgettext@plt>
   109ec:	ldr	r2, [r8]
   109f0:	movw	r3, #3928	; 0xf58
   109f4:	movt	r3, #1
   109f8:	mov	r1, r0
   109fc:	mov	r0, #1
   10a00:	bl	10750 <__printf_chk@plt>
   10a04:	mov	r0, r4
   10a08:	bl	10738 <exit@plt>
   10a0c:	mov	r0, r7
   10a10:	bl	10d88 <close@plt+0x5e4>
   10a14:	cmp	r4, #0
   10a18:	bne	10a50 <close@plt+0x2ac>
   10a1c:	movw	r1, #19268	; 0x4b44
   10a20:	mov	r2, sp
   10a24:	bl	10708 <ioctl@plt>
   10a28:	cmp	r0, #0
   10a2c:	bne	10b04 <close@plt+0x360>
   10a30:	ldr	r3, [sp]
   10a34:	cmp	r3, #3
   10a38:	ldrls	pc, [pc, r3, lsl #2]
   10a3c:	b	10b48 <close@plt+0x3a4>
   10a40:	ldrdeq	r0, [r1], -r4
   10a44:	strdeq	r0, [r1], -r4
   10a48:	andeq	r0, r1, r4, ror #21
   10a4c:	andeq	r0, r1, ip, lsr #21
   10a50:	movw	r1, #19269	; 0x4b45
   10a54:	ldr	r2, [sp]
   10a58:	bl	10708 <ioctl@plt>
   10a5c:	cmp	r0, #0
   10a60:	beq	10acc <close@plt+0x328>
   10a64:	movw	r0, #4220	; 0x107c
   10a68:	movt	r0, #1
   10a6c:	bl	106fc <perror@plt>
   10a70:	movw	r3, #8292	; 0x2064
   10a74:	movt	r3, #2
   10a78:	mov	r2, #5
   10a7c:	movw	r1, #4232	; 0x1088
   10a80:	mov	r0, #0
   10a84:	movt	r1, #1
   10a88:	ldr	r4, [r3]
   10a8c:	bl	106d8 <dcgettext@plt>
   10a90:	ldr	r3, [r8]
   10a94:	mov	r1, #1
   10a98:	mov	r2, r0
   10a9c:	mov	r0, r4
   10aa0:	bl	1075c <__fprintf_chk@plt>
   10aa4:	mov	r0, #1
   10aa8:	bl	10738 <exit@plt>
   10aac:	movw	r1, #4136	; 0x1028
   10ab0:	movt	r1, #1
   10ab4:	mov	r0, #0
   10ab8:	mov	r2, #5
   10abc:	bl	106d8 <dcgettext@plt>
   10ac0:	mov	r1, r0
   10ac4:	mov	r0, #1
   10ac8:	bl	10750 <__printf_chk@plt>
   10acc:	mov	r0, #0
   10ad0:	bl	10738 <exit@plt>
   10ad4:	movw	r1, #4000	; 0xfa0
   10ad8:	mov	r0, #0
   10adc:	movt	r1, #1
   10ae0:	b	10ab8 <close@plt+0x314>
   10ae4:	movw	r1, #4040	; 0xfc8
   10ae8:	mov	r0, #0
   10aec:	movt	r1, #1
   10af0:	b	10ab8 <close@plt+0x314>
   10af4:	movw	r1, #4088	; 0xff8
   10af8:	mov	r0, #0
   10afc:	movt	r1, #1
   10b00:	b	10ab8 <close@plt+0x314>
   10b04:	movw	r0, #3948	; 0xf6c
   10b08:	movt	r0, #1
   10b0c:	bl	106fc <perror@plt>
   10b10:	movw	r3, #8292	; 0x2064
   10b14:	movt	r3, #2
   10b18:	mov	r0, r4
   10b1c:	mov	r2, #5
   10b20:	movw	r1, #3960	; 0xf78
   10b24:	movt	r1, #1
   10b28:	ldr	r4, [r3]
   10b2c:	bl	106d8 <dcgettext@plt>
   10b30:	mov	r1, #1
   10b34:	mov	r2, r0
   10b38:	mov	r0, r4
   10b3c:	bl	1075c <__fprintf_chk@plt>
   10b40:	mov	r0, #1
   10b44:	bl	10738 <exit@plt>
   10b48:	movw	r1, #4180	; 0x1054
   10b4c:	mov	r0, #0
   10b50:	movt	r1, #1
   10b54:	b	10ab8 <close@plt+0x314>
   10b58:	mov	fp, #0
   10b5c:	mov	lr, #0
   10b60:	pop	{r1}		; (ldr r1, [sp], #4)
   10b64:	mov	r2, sp
   10b68:	push	{r2}		; (str r2, [sp, #-4]!)
   10b6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b70:	ldr	ip, [pc, #16]	; 10b88 <close@plt+0x3e4>
   10b74:	push	{ip}		; (str ip, [sp, #-4]!)
   10b78:	ldr	r0, [pc, #12]	; 10b8c <close@plt+0x3e8>
   10b7c:	ldr	r3, [pc, #12]	; 10b90 <close@plt+0x3ec>
   10b80:	bl	10714 <__libc_start_main@plt>
   10b84:	bl	10798 <abort@plt>
   10b88:	strdeq	r0, [r1], -r4
   10b8c:			; <UNDEFINED> instruction: 0x000107b0
   10b90:	muleq	r1, r0, lr
   10b94:	ldr	r3, [pc, #20]	; 10bb0 <close@plt+0x40c>
   10b98:	ldr	r2, [pc, #20]	; 10bb4 <close@plt+0x410>
   10b9c:	add	r3, pc, r3
   10ba0:	ldr	r2, [r3, r2]
   10ba4:	cmp	r2, #0
   10ba8:	bxeq	lr
   10bac:	b	10720 <__gmon_start__@plt>
   10bb0:	andeq	r1, r1, ip, asr r4
   10bb4:	andeq	r0, r0, r4, asr r0
   10bb8:	push	{r3, lr}
   10bbc:	movw	r0, #8284	; 0x205c
   10bc0:	ldr	r3, [pc, #36]	; 10bec <close@plt+0x448>
   10bc4:	movt	r0, #2
   10bc8:	rsb	r3, r0, r3
   10bcc:	cmp	r3, #6
   10bd0:	popls	{r3, pc}
   10bd4:	movw	r3, #0
   10bd8:	movt	r3, #0
   10bdc:	cmp	r3, #0
   10be0:	popeq	{r3, pc}
   10be4:	blx	r3
   10be8:	pop	{r3, pc}
   10bec:	andeq	r2, r2, pc, asr r0
   10bf0:	push	{r3, lr}
   10bf4:	movw	r0, #8284	; 0x205c
   10bf8:	movw	r3, #8284	; 0x205c
   10bfc:	movt	r0, #2
   10c00:	movt	r3, #2
   10c04:	rsb	r3, r0, r3
   10c08:	asr	r3, r3, #2
   10c0c:	add	r3, r3, r3, lsr #31
   10c10:	asrs	r1, r3, #1
   10c14:	popeq	{r3, pc}
   10c18:	movw	r2, #0
   10c1c:	movt	r2, #0
   10c20:	cmp	r2, #0
   10c24:	popeq	{r3, pc}
   10c28:	blx	r2
   10c2c:	pop	{r3, pc}
   10c30:	push	{r4, lr}
   10c34:	movw	r4, #8300	; 0x206c
   10c38:	movt	r4, #2
   10c3c:	ldrb	r3, [r4]
   10c40:	cmp	r3, #0
   10c44:	popne	{r4, pc}
   10c48:	bl	10bb8 <close@plt+0x414>
   10c4c:	mov	r3, #1
   10c50:	strb	r3, [r4]
   10c54:	pop	{r4, pc}
   10c58:	movw	r0, #7940	; 0x1f04
   10c5c:	movt	r0, #2
   10c60:	push	{r3, lr}
   10c64:	ldr	r3, [r0]
   10c68:	cmp	r3, #0
   10c6c:	beq	10c84 <close@plt+0x4e0>
   10c70:	movw	r3, #0
   10c74:	movt	r3, #0
   10c78:	cmp	r3, #0
   10c7c:	beq	10c84 <close@plt+0x4e0>
   10c80:	blx	r3
   10c84:	pop	{r3, lr}
   10c88:	b	10bf0 <close@plt+0x44c>
   10c8c:	movw	r3, #8292	; 0x2064
   10c90:	movt	r3, #2
   10c94:	push	{r4, lr}
   10c98:	mov	r2, #5
   10c9c:	movw	r1, #3848	; 0xf08
   10ca0:	mov	r0, #0
   10ca4:	movt	r1, #1
   10ca8:	ldr	r4, [r3]
   10cac:	bl	106d8 <dcgettext@plt>
   10cb0:	mov	r1, #1
   10cb4:	mov	r2, r0
   10cb8:	mov	r0, r4
   10cbc:	bl	1075c <__fprintf_chk@plt>
   10cc0:	mov	r0, #1
   10cc4:	bl	10738 <exit@plt>
   10cc8:	push	{r4, lr}
   10ccc:	mov	r1, #2
   10cd0:	mov	r4, r0
   10cd4:	bl	1072c <open@plt>
   10cd8:	cmp	r0, #0
   10cdc:	popge	{r4, pc}
   10ce0:	mov	r0, r4
   10ce4:	mov	r1, #1
   10ce8:	bl	1072c <open@plt>
   10cec:	cmp	r0, #0
   10cf0:	popge	{r4, pc}
   10cf4:	mov	r0, r4
   10cf8:	mov	r1, #0
   10cfc:	bl	1072c <open@plt>
   10d00:	orr	r0, r0, r0, asr #31
   10d04:	pop	{r4, pc}
   10d08:	push	{r4, r5, lr}
   10d0c:	movw	r4, #8288	; 0x2060
   10d10:	movt	r4, #2
   10d14:	sub	sp, sp, #12
   10d18:	mov	r2, #0
   10d1c:	mov	r5, r0
   10d20:	ldr	r3, [r4]
   10d24:	strb	r2, [sp, #3]
   10d28:	str	r3, [sp, #4]
   10d2c:	bl	1078c <isatty@plt>
   10d30:	cmp	r0, #0
   10d34:	bne	10d54 <close@plt+0x5b0>
   10d38:	mov	r0, #0
   10d3c:	ldr	r2, [sp, #4]
   10d40:	ldr	r3, [r4]
   10d44:	cmp	r2, r3
   10d48:	bne	10d84 <close@plt+0x5e0>
   10d4c:	add	sp, sp, #12
   10d50:	pop	{r4, r5, pc}
   10d54:	mov	r0, r5
   10d58:	movw	r1, #19251	; 0x4b33
   10d5c:	add	r2, sp, #3
   10d60:	bl	10708 <ioctl@plt>
   10d64:	cmp	r0, #0
   10d68:	bne	10d38 <close@plt+0x594>
   10d6c:	ldrb	r0, [sp, #3]
   10d70:	sub	r0, r0, #1
   10d74:	cmp	r0, #1
   10d78:	movhi	r0, #0
   10d7c:	movls	r0, #1
   10d80:	b	10d3c <close@plt+0x598>
   10d84:	bl	106e4 <__stack_chk_fail@plt>
   10d88:	push	{r3, r4, r5, lr}
   10d8c:	subs	r4, r0, #0
   10d90:	beq	10db4 <close@plt+0x610>
   10d94:	bl	10cc8 <close@plt+0x524>
   10d98:	subs	r5, r0, #0
   10d9c:	blt	10e54 <close@plt+0x6b0>
   10da0:	bl	10d08 <close@plt+0x564>
   10da4:	cmp	r0, #0
   10da8:	mov	r0, r5
   10dac:	beq	10e50 <close@plt+0x6ac>
   10db0:	pop	{r3, r4, r5, pc}
   10db4:	movw	r4, #4268	; 0x10ac
   10db8:	movw	r0, #4296	; 0x10c8
   10dbc:	movt	r4, #1
   10dc0:	movt	r0, #1
   10dc4:	bl	10cc8 <close@plt+0x524>
   10dc8:	subs	r5, r0, #0
   10dcc:	blt	10de4 <close@plt+0x640>
   10dd0:	bl	10d08 <close@plt+0x564>
   10dd4:	cmp	r0, #0
   10dd8:	mov	r0, r5
   10ddc:	bne	10e44 <close@plt+0x6a0>
   10de0:	bl	107a4 <close@plt>
   10de4:	ldr	r0, [r4, #4]!
   10de8:	cmp	r0, #0
   10dec:	bne	10dc4 <close@plt+0x620>
   10df0:	mov	r5, r0
   10df4:	mov	r0, r5
   10df8:	bl	10d08 <close@plt+0x564>
   10dfc:	cmp	r0, #0
   10e00:	bne	10e48 <close@plt+0x6a4>
   10e04:	add	r5, r5, #1
   10e08:	cmp	r5, #3
   10e0c:	bne	10df4 <close@plt+0x650>
   10e10:	movw	r3, #8292	; 0x2064
   10e14:	movt	r3, #2
   10e18:	mov	r2, #5
   10e1c:	movw	r1, #4332	; 0x10ec
   10e20:	movt	r1, #1
   10e24:	ldr	r4, [r3]
   10e28:	bl	106d8 <dcgettext@plt>
   10e2c:	mov	r1, #1
   10e30:	mov	r2, r0
   10e34:	mov	r0, r4
   10e38:	bl	1075c <__fprintf_chk@plt>
   10e3c:	mov	r0, #1
   10e40:	bl	10738 <exit@plt>
   10e44:	pop	{r3, r4, r5, pc}
   10e48:	mov	r0, r5
   10e4c:	pop	{r3, r4, r5, pc}
   10e50:	bl	107a4 <close@plt>
   10e54:	movw	r3, #8292	; 0x2064
   10e58:	movt	r3, #2
   10e5c:	mov	r2, #5
   10e60:	movw	r1, #4312	; 0x10d8
   10e64:	mov	r0, #0
   10e68:	movt	r1, #1
   10e6c:	ldr	r5, [r3]
   10e70:	bl	106d8 <dcgettext@plt>
   10e74:	mov	r3, r4
   10e78:	mov	r1, #1
   10e7c:	mov	r2, r0
   10e80:	mov	r0, r5
   10e84:	bl	1075c <__fprintf_chk@plt>
   10e88:	mov	r0, #1
   10e8c:	bl	10738 <exit@plt>
   10e90:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10e94:	mov	r7, r0
   10e98:	ldr	r6, [pc, #76]	; 10eec <close@plt+0x748>
   10e9c:	mov	r8, r1
   10ea0:	ldr	r5, [pc, #72]	; 10ef0 <close@plt+0x74c>
   10ea4:	mov	r9, r2
   10ea8:	add	r6, pc, r6
   10eac:	bl	106b8 <dcgettext@plt-0x20>
   10eb0:	add	r5, pc, r5
   10eb4:	rsb	r6, r5, r6
   10eb8:	asrs	r6, r6, #2
   10ebc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10ec0:	sub	r5, r5, #4
   10ec4:	mov	r4, #0
   10ec8:	add	r4, r4, #1
   10ecc:	ldr	r3, [r5, #4]!
   10ed0:	mov	r0, r7
   10ed4:	mov	r1, r8
   10ed8:	mov	r2, r9
   10edc:	blx	r3
   10ee0:	cmp	r4, r6
   10ee4:	bne	10ec8 <close@plt+0x724>
   10ee8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10eec:	andeq	r1, r1, r0, asr r0
   10ef0:	andeq	r1, r1, r4, asr #32
   10ef4:	bx	lr

Disassembly of section .fini:

00010ef8 <.fini>:
   10ef8:	push	{r3, lr}
   10efc:	pop	{r3, pc}
