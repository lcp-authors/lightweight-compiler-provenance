
centos-preinstalled/abrt-action-analyze-c:     file format elf32-littlearm


Disassembly of section .init:

00000c54 <_init@@Base>:
 c54:	push	{r3, lr}
 c58:	bl	1450 <main@@Base+0x5fc>
 c5c:	pop	{r3, pc}

Disassembly of section .plt:

00000c60 <sr_core_stacktrace_from_json_text@plt-0x14>:
 c60:	push	{lr}		; (str lr, [sp, #-4]!)
 c64:	ldr	lr, [pc, #4]	; c70 <_init@@Base+0x1c>
 c68:	add	lr, pc, lr
 c6c:	ldr	pc, [lr, #8]!
 c70:			; <UNDEFINED> instruction: 0x000112b8

00000c74 <sr_core_stacktrace_from_json_text@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #69632	; 0x11000
 c7c:	ldr	pc, [ip, #696]!	; 0x2b8

00000c80 <dd_opendir@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #69632	; 0x11000
 c88:	ldr	pc, [ip, #688]!	; 0x2b0

00000c8c <free@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #69632	; 0x11000
 c94:	ldr	pc, [ip, #680]!	; 0x2a8

00000c98 <dd_close@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #69632	; 0x11000
 ca0:	ldr	pc, [ip, #672]!	; 0x2a0

00000ca4 <libreport_parse_opts@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #69632	; 0x11000
 cac:	ldr	pc, [ip, #664]!	; 0x298

00000cb0 <abrt_run_unstrip_n@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #69632	; 0x11000
 cb8:	ldr	pc, [ip, #656]!	; 0x290

00000cbc <libreport_export_abrt_envvars@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #69632	; 0x11000
 cc4:	ldr	pc, [ip, #648]!	; 0x288

00000cc8 <g_list_free@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #69632	; 0x11000
 cd0:	ldr	pc, [ip, #640]!	; 0x280

00000cd4 <textdomain@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #69632	; 0x11000
 cdc:	ldr	pc, [ip, #632]!	; 0x278

00000ce0 <memset@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #69632	; 0x11000
 ce8:	ldr	pc, [ip, #624]!	; 0x270

00000cec <libreport_xasprintf@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #69632	; 0x11000
 cf4:	ldr	pc, [ip, #616]!	; 0x268

00000cf8 <abort@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #69632	; 0x11000
 d00:	ldr	pc, [ip, #608]!	; 0x260

00000d04 <libreport_strbuf_free_nobuf@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #69632	; 0x11000
 d0c:	ldr	pc, [ip, #600]!	; 0x258

00000d10 <libreport_str_to_sha1str@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #69632	; 0x11000
 d18:	ldr	pc, [ip, #592]!	; 0x250

00000d1c <dd_load_text@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #69632	; 0x11000
 d24:	ldr	pc, [ip, #584]!	; 0x248

00000d28 <sr_core_stacktrace_free@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #69632	; 0x11000
 d30:	ldr	pc, [ip, #576]!	; 0x240

00000d34 <__stack_chk_fail@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #69632	; 0x11000
 d3c:	ldr	pc, [ip, #568]!	; 0x238

00000d40 <g_list_prepend@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #69632	; 0x11000
 d48:	ldr	pc, [ip, #560]!	; 0x230

00000d4c <strchrnul@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #69632	; 0x11000
 d54:	ldr	pc, [ip, #552]!	; 0x228

00000d58 <access@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #69632	; 0x11000
 d60:	ldr	pc, [ip, #544]!	; 0x220

00000d64 <dcgettext@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #69632	; 0x11000
 d6c:	ldr	pc, [ip, #536]!	; 0x218

00000d70 <sr_core_stacktrace_find_crash_thread@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #69632	; 0x11000
 d78:	ldr	pc, [ip, #528]!	; 0x210

00000d7c <log_wrapper@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #69632	; 0x11000
 d84:	ldr	pc, [ip, #520]!	; 0x208

00000d88 <__ctype_b_loc@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #69632	; 0x11000
 d90:	ldr	pc, [ip, #512]!	; 0x200

00000d94 <bindtextdomain@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #69632	; 0x11000
 d9c:	ldr	pc, [ip, #504]!	; 0x1f8

00000da0 <libreport_xmalloc_open_read_close@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #69632	; 0x11000
 da8:	ldr	pc, [ip, #496]!	; 0x1f0

00000dac <setlocale@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #69632	; 0x11000
 db4:	ldr	pc, [ip, #488]!	; 0x1e8

00000db8 <libreport_strbuf_append_strf@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #69632	; 0x11000
 dc0:	ldr	pc, [ip, #480]!	; 0x1e0

00000dc4 <strcmp@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #69632	; 0x11000
 dcc:	ldr	pc, [ip, #472]!	; 0x1d8

00000dd0 <dd_load_text_ext@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #69632	; 0x11000
 dd8:	ldr	pc, [ip, #464]!	; 0x1d0

00000ddc <abrt_init@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #69632	; 0x11000
 de4:	ldr	pc, [ip, #456]!	; 0x1c8

00000de8 <libreport_strbuf_new@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #69632	; 0x11000
 df0:	ldr	pc, [ip, #448]!	; 0x1c0

00000df4 <memchr@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #69632	; 0x11000
 dfc:	ldr	pc, [ip, #440]!	; 0x1b8

00000e00 <dd_save_text@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #69632	; 0x11000
 e08:	ldr	pc, [ip, #432]!	; 0x1b0

00000e0c <strrchr@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #69632	; 0x11000
 e14:	ldr	pc, [ip, #424]!	; 0x1a8

00000e18 <g_list_sort@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #69632	; 0x11000
 e20:	ldr	pc, [ip, #416]!	; 0x1a0

00000e24 <__libc_start_main@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #69632	; 0x11000
 e2c:	ldr	pc, [ip, #408]!	; 0x198

00000e30 <__gmon_start__@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #69632	; 0x11000
 e38:	ldr	pc, [ip, #400]!	; 0x190

00000e3c <strchr@plt>:
 e3c:	add	ip, pc, #0, 12
 e40:	add	ip, ip, #69632	; 0x11000
 e44:	ldr	pc, [ip, #392]!	; 0x188

00000e48 <__cxa_finalize@plt>:
 e48:	add	ip, pc, #0, 12
 e4c:	add	ip, ip, #69632	; 0x11000
 e50:	ldr	pc, [ip, #384]!	; 0x180

Disassembly of section .text:

00000e54 <main@@Base>:
     e54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     e58:	mov	r6, r1
     e5c:	ldr	r5, [pc, #1312]	; 1384 <main@@Base+0x530>
     e60:	sub	sp, sp, #144	; 0x90
     e64:	ldr	r3, [pc, #1308]	; 1388 <main@@Base+0x534>
     e68:	mov	r8, r0
     e6c:	add	r5, pc, r5
     e70:	ldr	r1, [pc, #1300]	; 138c <main@@Base+0x538>
     e74:	ldr	r4, [pc, #1300]	; 1390 <main@@Base+0x53c>
     e78:	mov	r0, #6
     e7c:	ldr	r9, [r5, r3]
     e80:	add	r1, pc, r1
     e84:	add	r4, pc, r4
     e88:	add	r7, sp, #24
     e8c:	ldr	r3, [r9]
     e90:	str	r3, [sp, #140]	; 0x8c
     e94:	bl	dac <setlocale@plt>
     e98:	ldr	r1, [pc, #1268]	; 1394 <main@@Base+0x540>
     e9c:	mov	r0, r4
     ea0:	add	r1, pc, r1
     ea4:	bl	d94 <bindtextdomain@plt>
     ea8:	mov	r0, r4
     eac:	bl	cd4 <textdomain@plt>
     eb0:	mov	r0, r6
     eb4:	bl	ddc <abrt_init@plt>
     eb8:	ldr	r1, [pc, #1240]	; 1398 <main@@Base+0x544>
     ebc:	ldr	r3, [pc, #1240]	; 139c <main@@Base+0x548>
     ec0:	mov	r0, r4
     ec4:	add	r1, pc, r1
     ec8:	mov	r2, #5
     ecc:	add	r3, pc, r3
     ed0:	str	r3, [sp, #16]
     ed4:	bl	d64 <dcgettext@plt>
     ed8:	mov	r1, #0
     edc:	mov	r2, #72	; 0x48
     ee0:	mov	sl, r0
     ee4:	mov	r0, r7
     ee8:	bl	ce0 <memset@plt>
     eec:	ldr	r3, [pc, #1196]	; 13a0 <main@@Base+0x54c>
     ef0:	ldr	r2, [pc, #1196]	; 13a4 <main@@Base+0x550>
     ef4:	mov	r1, #118	; 0x76
     ef8:	str	r1, [sp, #28]
     efc:	mov	r0, r4
     f00:	add	r2, pc, r2
     f04:	ldr	r1, [pc, #1180]	; 13a8 <main@@Base+0x554>
     f08:	str	r2, [sp, #32]
     f0c:	mov	r2, #5
     f10:	ldr	r3, [r5, r3]
     f14:	add	r1, pc, r1
     f18:	str	r3, [sp, #36]	; 0x24
     f1c:	bl	d64 <dcgettext@plt>
     f20:	ldr	r1, [pc, #1156]	; 13ac <main@@Base+0x558>
     f24:	mov	r2, #5
     f28:	ldr	ip, [pc, #1152]	; 13b0 <main@@Base+0x55c>
     f2c:	mov	lr, #2
     f30:	add	r1, pc, r1
     f34:	str	lr, [sp, #48]	; 0x30
     f38:	add	ip, pc, ip
     f3c:	mov	r3, #100	; 0x64
     f40:	str	ip, [sp, #64]	; 0x40
     f44:	str	r3, [sp, #52]	; 0x34
     f48:	add	r3, sp, #16
     f4c:	str	r3, [sp, #60]	; 0x3c
     f50:	str	r0, [sp, #44]	; 0x2c
     f54:	mov	r0, r4
     f58:	bl	d64 <dcgettext@plt>
     f5c:	mov	r2, r7
     f60:	mov	r3, sl
     f64:	mov	r1, r6
     f68:	mov	ip, #6
     f6c:	str	ip, [sp, #72]	; 0x48
     f70:	str	r0, [sp, #68]	; 0x44
     f74:	mov	r0, r8
     f78:	bl	ca4 <libreport_parse_opts@plt>
     f7c:	mov	r0, #0
     f80:	bl	cbc <libreport_export_abrt_envvars@plt>
     f84:	ldr	r0, [pc, #1064]	; 13b4 <main@@Base+0x560>
     f88:	ldr	r1, [sp, #16]
     f8c:	add	r0, pc, r0
     f90:	bl	cec <libreport_xasprintf@plt>
     f94:	mov	r1, #4
     f98:	mov	r4, r0
     f9c:	bl	d58 <access@plt>
     fa0:	cmp	r0, #0
     fa4:	beq	1094 <main@@Base+0x240>
     fa8:	mov	r0, r4
     fac:	bl	c8c <free@plt>
     fb0:	ldr	r0, [pc, #1024]	; 13b8 <main@@Base+0x564>
     fb4:	mov	sl, #0
     fb8:	ldr	r1, [sp, #16]
     fbc:	add	r0, pc, r0
     fc0:	str	sl, [sp, #20]
     fc4:	bl	cec <libreport_xasprintf@plt>
     fc8:	mov	r1, sl
     fcc:	mov	r6, r0
     fd0:	bl	da0 <libreport_xmalloc_open_read_close@plt>
     fd4:	mov	r4, r0
     fd8:	mov	r0, r6
     fdc:	bl	c8c <free@plt>
     fe0:	cmp	r4, sl
     fe4:	beq	1334 <main@@Base+0x4e0>
     fe8:	add	r1, sp, #20
     fec:	mov	r0, r4
     ff0:	bl	c74 <sr_core_stacktrace_from_json_text@plt>
     ff4:	mov	r6, r0
     ff8:	mov	r0, r4
     ffc:	bl	c8c <free@plt>
    1000:	cmp	r6, #0
    1004:	beq	12e4 <main@@Base+0x490>
    1008:	mov	r0, r6
    100c:	bl	d70 <sr_core_stacktrace_find_crash_thread@plt>
    1010:	subs	r8, r0, #0
    1014:	beq	1344 <main@@Base+0x4f0>
    1018:	bl	de8 <libreport_strbuf_new@plt>
    101c:	ldr	r4, [r8, #16]
    1020:	cmp	r4, #0
    1024:	mov	r7, r0
    1028:	beq	133c <main@@Base+0x4e8>
    102c:	mov	r0, sl
    1030:	ldr	r1, [r4, #16]
    1034:	cmp	r1, #0
    1038:	beq	1040 <main@@Base+0x1ec>
    103c:	bl	d40 <g_list_prepend@plt>
    1040:	ldr	r4, [r4, #48]	; 0x30
    1044:	cmp	r4, #0
    1048:	bne	1030 <main@@Base+0x1dc>
    104c:	ldr	r3, [pc, #872]	; 13bc <main@@Base+0x568>
    1050:	ldr	r1, [r5, r3]
    1054:	bl	e18 <g_list_sort@plt>
    1058:	subs	sl, r0, #0
    105c:	beq	12b8 <main@@Base+0x464>
    1060:	ldr	r8, [pc, #856]	; 13c0 <main@@Base+0x56c>
    1064:	mov	r4, sl
    1068:	add	r8, pc, r8
    106c:	ldr	r5, [r4, #4]
    1070:	cmp	r5, #0
    1074:	beq	1298 <main@@Base+0x444>
    1078:	ldr	r0, [r4]
    107c:	ldr	r1, [r5]
    1080:	bl	dc4 <strcmp@plt>
    1084:	cmp	r0, #0
    1088:	bne	1298 <main@@Base+0x444>
    108c:	mov	r4, r5
    1090:	b	106c <main@@Base+0x218>
    1094:	mov	r1, #30
    1098:	ldr	r0, [sp, #16]
    109c:	bl	cb0 <abrt_run_unstrip_n@plt>
    10a0:	mov	r8, r0
    10a4:	mov	r0, r4
    10a8:	bl	c8c <free@plt>
    10ac:	cmp	r8, #0
    10b0:	beq	fb0 <main@@Base+0x15c>
    10b4:	ldrb	r3, [r8]
    10b8:	mov	r7, r8
    10bc:	cmp	r3, #0
    10c0:	beq	114c <main@@Base+0x2f8>
    10c4:	mov	r4, r8
    10c8:	mov	r1, #10
    10cc:	mov	r0, r4
    10d0:	bl	d4c <strchrnul@plt>
    10d4:	mov	r1, #43	; 0x2b
    10d8:	mov	r6, r0
    10dc:	mov	r0, r4
    10e0:	rsb	r2, r4, r6
    10e4:	bl	df4 <memchr@plt>
    10e8:	cmp	r0, #0
    10ec:	movne	r2, r0
    10f0:	bne	1124 <main@@Base+0x2d0>
    10f4:	b	1130 <main@@Base+0x2dc>
    10f8:	ldrb	r4, [r2, #1]
    10fc:	cmp	r4, #64	; 0x40
    1100:	beq	1130 <main@@Base+0x2dc>
    1104:	bl	d88 <__ctype_b_loc@plt>
    1108:	lsl	r2, r4, #1
    110c:	ldr	r3, [r0]
    1110:	ldrh	r3, [r3, r2]
    1114:	mov	r2, r5
    1118:	tst	r3, #8192	; 0x2000
    111c:	strbeq	r4, [r7]
    1120:	addeq	r7, r7, #1
    1124:	add	r5, r2, #1
    1128:	cmp	r6, r5
    112c:	bhi	10f8 <main@@Base+0x2a4>
    1130:	ldrb	r3, [r6]
    1134:	cmp	r3, #10
    1138:	bne	114c <main@@Base+0x2f8>
    113c:	ldrb	r3, [r6, #1]
    1140:	add	r4, r6, #1
    1144:	cmp	r3, #0
    1148:	bne	10c8 <main@@Base+0x274>
    114c:	mov	r3, #0
    1150:	strb	r3, [r7]
    1154:	ldr	r0, [sp, #16]
    1158:	mov	r1, #0
    115c:	bl	c80 <dd_opendir@plt>
    1160:	subs	r5, r0, #0
    1164:	moveq	r0, #1
    1168:	beq	1268 <main@@Base+0x414>
    116c:	ldr	r1, [pc, #592]	; 13c4 <main@@Base+0x570>
    1170:	add	r1, pc, r1
    1174:	bl	d1c <dd_load_text@plt>
    1178:	ldr	r1, [pc, #584]	; 13c8 <main@@Base+0x574>
    117c:	mov	r2, #1
    1180:	add	r1, pc, r1
    1184:	mov	r6, r0
    1188:	mov	r0, r5
    118c:	bl	dd0 <dd_load_text_ext@plt>
    1190:	ldrb	r3, [r0]
    1194:	mov	r4, r0
    1198:	cmp	r3, #0
    119c:	beq	11b8 <main@@Base+0x364>
    11a0:	mov	ip, r0
    11a4:	cmp	r3, #46	; 0x2e
    11a8:	beq	1280 <main@@Base+0x42c>
    11ac:	ldrb	r3, [ip, #1]!
    11b0:	cmp	r3, #0
    11b4:	bne	11a4 <main@@Base+0x350>
    11b8:	mov	r0, r4
    11bc:	mov	r1, #46	; 0x2e
    11c0:	bl	e3c <strchr@plt>
    11c4:	subs	r7, r0, #0
    11c8:	beq	11e0 <main@@Base+0x38c>
    11cc:	mov	r1, #46	; 0x2e
    11d0:	bl	e0c <strrchr@plt>
    11d4:	cmp	r0, r7
    11d8:	movne	r3, #0
    11dc:	strbne	r3, [r0]
    11e0:	ldr	r0, [pc, #484]	; 13cc <main@@Base+0x578>
    11e4:	mov	r1, r4
    11e8:	mov	r2, r6
    11ec:	mov	r3, r8
    11f0:	add	r0, pc, r0
    11f4:	mov	r4, #0
    11f8:	bl	cec <libreport_xasprintf@plt>
    11fc:	ldr	r3, [pc, #460]	; 13d0 <main@@Base+0x57c>
    1200:	ldr	r2, [pc, #460]	; 13d4 <main@@Base+0x580>
    1204:	ldr	r1, [pc, #460]	; 13d8 <main@@Base+0x584>
    1208:	add	r3, pc, r3
    120c:	add	r3, r3, #32
    1210:	add	r2, pc, r2
    1214:	add	r1, pc, r1
    1218:	str	r2, [sp, #8]
    121c:	str	r4, [sp]
    1220:	mov	r2, #211	; 0xd3
    1224:	str	r4, [sp, #4]
    1228:	mov	r6, r0
    122c:	str	r0, [sp, #12]
    1230:	mov	r0, #7
    1234:	bl	d7c <log_wrapper@plt>
    1238:	mov	r1, r6
    123c:	add	r6, sp, #96	; 0x60
    1240:	mov	r0, r6
    1244:	bl	d10 <libreport_str_to_sha1str@plt>
    1248:	ldr	r1, [pc, #396]	; 13dc <main@@Base+0x588>
    124c:	mov	r0, r5
    1250:	mov	r2, r6
    1254:	add	r1, pc, r1
    1258:	bl	e00 <dd_save_text@plt>
    125c:	mov	r0, r5
    1260:	bl	c98 <dd_close@plt>
    1264:	mov	r0, r4
    1268:	ldr	r2, [sp, #140]	; 0x8c
    126c:	ldr	r3, [r9]
    1270:	cmp	r2, r3
    1274:	bne	1380 <main@@Base+0x52c>
    1278:	add	sp, sp, #144	; 0x90
    127c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1280:	ldrb	r3, [ip, #1]
    1284:	sub	lr, r3, #48	; 0x30
    1288:	cmp	lr, #9
    128c:	bhi	12d8 <main@@Base+0x484>
    1290:	add	ip, ip, #1
    1294:	b	11a4 <main@@Base+0x350>
    1298:	mov	r0, r7
    129c:	ldr	r2, [r4]
    12a0:	mov	r1, r8
    12a4:	bl	db8 <libreport_strbuf_append_strf@plt>
    12a8:	ldr	r4, [r4, #4]
    12ac:	cmp	r4, #0
    12b0:	mov	r7, r0
    12b4:	bne	106c <main@@Base+0x218>
    12b8:	mov	r0, sl
    12bc:	bl	cc8 <g_list_free@plt>
    12c0:	mov	r0, r6
    12c4:	bl	d28 <sr_core_stacktrace_free@plt>
    12c8:	mov	r0, r7
    12cc:	bl	d04 <libreport_strbuf_free_nobuf@plt>
    12d0:	mov	r8, r0
    12d4:	b	1154 <main@@Base+0x300>
    12d8:	mov	r3, #0
    12dc:	strb	r3, [ip]
    12e0:	b	11b8 <main@@Base+0x364>
    12e4:	ldr	r3, [sp, #20]
    12e8:	cmp	r3, #0
    12ec:	beq	1334 <main@@Base+0x4e0>
    12f0:	ldr	r1, [pc, #232]	; 13e0 <main@@Base+0x58c>
    12f4:	mov	r0, #6
    12f8:	str	r3, [sp, #12]
    12fc:	mov	r2, #75	; 0x4b
    1300:	add	r1, pc, r1
    1304:	ldr	r3, [pc, #216]	; 13e4 <main@@Base+0x590>
    1308:	str	r1, [sp, #8]
    130c:	mov	r8, r6
    1310:	ldr	r1, [pc, #208]	; 13e8 <main@@Base+0x594>
    1314:	add	r3, pc, r3
    1318:	str	r6, [sp]
    131c:	str	r6, [sp, #4]
    1320:	add	r1, pc, r1
    1324:	bl	d7c <log_wrapper@plt>
    1328:	ldr	r0, [sp, #20]
    132c:	bl	c8c <free@plt>
    1330:	b	1154 <main@@Base+0x300>
    1334:	mov	r8, #0
    1338:	b	1154 <main@@Base+0x300>
    133c:	mov	r0, r4
    1340:	b	104c <main@@Base+0x1f8>
    1344:	ldr	r3, [pc, #160]	; 13ec <main@@Base+0x598>
    1348:	mov	r0, #6
    134c:	ldr	r1, [pc, #156]	; 13f0 <main@@Base+0x59c>
    1350:	mov	r2, #84	; 0x54
    1354:	add	r3, pc, r3
    1358:	str	r3, [sp, #8]
    135c:	ldr	r3, [pc, #144]	; 13f4 <main@@Base+0x5a0>
    1360:	add	r1, pc, r1
    1364:	str	r8, [sp]
    1368:	str	r8, [sp, #4]
    136c:	add	r3, pc, r3
    1370:	bl	d7c <log_wrapper@plt>
    1374:	mov	r0, r6
    1378:	bl	d28 <sr_core_stacktrace_free@plt>
    137c:	b	1154 <main@@Base+0x300>
    1380:	bl	d34 <__stack_chk_fail@plt>
    1384:	strheq	r1, [r1], -r4
    1388:	andeq	r0, r0, ip, lsr #1
    138c:	andeq	r0, r0, r4, lsr r9
    1390:	andeq	r0, r0, r4, ror #15
    1394:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1398:	andeq	r0, r0, r4, asr #15
    139c:			; <UNDEFINED> instruction: 0x000007b8
    13a0:	strheq	r0, [r0], -r8
    13a4:	ldrdeq	r0, [r0], -r8
    13a8:	andeq	r0, r0, ip, asr #15
    13ac:	andeq	r0, r0, r0, asr #15
    13b0:			; <UNDEFINED> instruction: 0x000007b4
    13b4:	andeq	r0, r0, r8, ror r7
    13b8:	andeq	r0, r0, r4, asr r7
    13bc:	andeq	r0, r0, r0, asr #1
    13c0:	andeq	r0, r0, r4, lsl r7
    13c4:	andeq	r0, r0, r0, lsl r6
    13c8:	andeq	r0, r0, ip, lsl #12
    13cc:	andeq	r0, r0, r4, lsr #11
    13d0:	andeq	r0, r0, r8, lsr r4
    13d4:	andeq	r0, r0, ip, lsl #11
    13d8:	andeq	r0, r0, r0, lsl r5
    13dc:	andeq	r0, r0, ip, asr r5
    13e0:	andeq	r0, r0, ip, lsr r4
    13e4:	andeq	r0, r0, ip, lsr #6
    13e8:	andeq	r0, r0, r4, lsl #8
    13ec:	andeq	r0, r0, ip, lsl #8
    13f0:	andeq	r0, r0, r4, asr #7
    13f4:	ldrdeq	r0, [r0], -r4
    13f8:	mov	fp, #0
    13fc:	mov	lr, #0
    1400:	pop	{r1}		; (ldr r1, [sp], #4)
    1404:	mov	r2, sp
    1408:	push	{r2}		; (str r2, [sp, #-4]!)
    140c:	push	{r0}		; (str r0, [sp, #-4]!)
    1410:	ldr	sl, [pc, #40]	; 1440 <main@@Base+0x5ec>
    1414:	add	r3, pc, #36	; 0x24
    1418:	add	sl, sl, r3
    141c:	ldr	ip, [pc, #32]	; 1444 <main@@Base+0x5f0>
    1420:	ldr	ip, [sl, ip]
    1424:	push	{ip}		; (str ip, [sp, #-4]!)
    1428:	ldr	r3, [pc, #24]	; 1448 <main@@Base+0x5f4>
    142c:	ldr	r3, [sl, r3]
    1430:	ldr	r0, [pc, #20]	; 144c <main@@Base+0x5f8>
    1434:	ldr	r0, [sl, r0]
    1438:	bl	e24 <__libc_start_main@plt>
    143c:	bl	cf8 <abort@plt>
    1440:	andeq	r0, r1, r8, ror #21
    1444:	andeq	r0, r0, r8, asr #1
    1448:	strheq	r0, [r0], -ip
    144c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1450:	ldr	r3, [pc, #20]	; 146c <main@@Base+0x618>
    1454:	ldr	r2, [pc, #20]	; 1470 <main@@Base+0x61c>
    1458:	add	r3, pc, r3
    145c:	ldr	r2, [r3, r2]
    1460:	cmp	r2, #0
    1464:	bxeq	lr
    1468:	b	e30 <__gmon_start__@plt>
    146c:	andeq	r0, r1, r8, asr #21
    1470:	andeq	r0, r0, ip, asr #1
    1474:	ldr	r2, [pc, #60]	; 14b8 <main@@Base+0x664>
    1478:	ldr	r0, [pc, #60]	; 14bc <main@@Base+0x668>
    147c:	add	r2, pc, r2
    1480:	add	r0, pc, r0
    1484:	add	r2, r2, #3
    1488:	rsb	r2, r0, r2
    148c:	push	{r3, lr}
    1490:	cmp	r2, #6
    1494:	ldr	r3, [pc, #36]	; 14c0 <main@@Base+0x66c>
    1498:	add	r3, pc, r3
    149c:	popls	{r3, pc}
    14a0:	ldr	r2, [pc, #28]	; 14c4 <main@@Base+0x670>
    14a4:	ldr	r3, [r3, r2]
    14a8:	cmp	r3, #0
    14ac:	popeq	{r3, pc}
    14b0:	blx	r3
    14b4:	pop	{r3, pc}
    14b8:	andeq	r0, r1, r0, lsl #23
    14bc:	andeq	r0, r1, ip, ror fp
    14c0:	andeq	r0, r1, r8, lsl #21
    14c4:	andeq	r0, r0, r4, asr #1
    14c8:	push	{r3, lr}
    14cc:	ldr	r0, [pc, #64]	; 1514 <main@@Base+0x6c0>
    14d0:	ldr	r3, [pc, #64]	; 1518 <main@@Base+0x6c4>
    14d4:	add	r0, pc, r0
    14d8:	ldr	r2, [pc, #60]	; 151c <main@@Base+0x6c8>
    14dc:	add	r3, pc, r3
    14e0:	rsb	r3, r0, r3
    14e4:	add	r2, pc, r2
    14e8:	asr	r3, r3, #2
    14ec:	add	r3, r3, r3, lsr #31
    14f0:	asrs	r3, r3, #1
    14f4:	popeq	{r3, pc}
    14f8:	ldr	r1, [pc, #32]	; 1520 <main@@Base+0x6cc>
    14fc:	ldr	r2, [r2, r1]
    1500:	cmp	r2, #0
    1504:	popeq	{r3, pc}
    1508:	mov	r1, r3
    150c:	blx	r2
    1510:	pop	{r3, pc}
    1514:	andeq	r0, r1, r8, lsr #22
    1518:	andeq	r0, r1, r0, lsr #22
    151c:	andeq	r0, r1, ip, lsr sl
    1520:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1524:	ldr	r2, [pc, #76]	; 1578 <main@@Base+0x724>
    1528:	push	{r3, lr}
    152c:	add	r2, pc, r2
    1530:	ldr	r3, [pc, #68]	; 157c <main@@Base+0x728>
    1534:	ldrb	r2, [r2]
    1538:	add	r3, pc, r3
    153c:	cmp	r2, #0
    1540:	popne	{r3, pc}
    1544:	ldr	r2, [pc, #52]	; 1580 <main@@Base+0x72c>
    1548:	ldr	r3, [r3, r2]
    154c:	cmp	r3, #0
    1550:	beq	1560 <main@@Base+0x70c>
    1554:	ldr	r0, [pc, #40]	; 1584 <main@@Base+0x730>
    1558:	add	r0, pc, r0
    155c:	bl	e48 <__cxa_finalize@plt>
    1560:	bl	1474 <main@@Base+0x620>
    1564:	ldr	r3, [pc, #28]	; 1588 <main@@Base+0x734>
    1568:	mov	r2, #1
    156c:	add	r3, pc, r3
    1570:	strb	r2, [r3]
    1574:	pop	{r3, pc}
    1578:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    157c:	andeq	r0, r1, r8, ror #19
    1580:	ldrdeq	r0, [r0], -r4
    1584:	andeq	r0, r1, ip, lsl #17
    1588:	muleq	r1, r0, sl
    158c:	ldr	r0, [pc, #52]	; 15c8 <main@@Base+0x774>
    1590:	push	{r3, lr}
    1594:	add	r0, pc, r0
    1598:	ldr	r3, [pc, #44]	; 15cc <main@@Base+0x778>
    159c:	ldr	r2, [r0]
    15a0:	add	r3, pc, r3
    15a4:	cmp	r2, #0
    15a8:	beq	15c0 <main@@Base+0x76c>
    15ac:	ldr	r2, [pc, #28]	; 15d0 <main@@Base+0x77c>
    15b0:	ldr	r3, [r3, r2]
    15b4:	cmp	r3, #0
    15b8:	beq	15c0 <main@@Base+0x76c>
    15bc:	blx	r3
    15c0:	pop	{r3, lr}
    15c4:	b	14c8 <main@@Base+0x674>
    15c8:	andeq	r0, r1, ip, asr #16
    15cc:	andeq	r0, r1, r0, lsl #19
    15d0:	strheq	r0, [r0], -r4

000015d4 <__libc_csu_init@@Base>:
    15d4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    15d8:	mov	r7, r0
    15dc:	ldr	r6, [pc, #76]	; 1630 <__libc_csu_init@@Base+0x5c>
    15e0:	mov	r8, r1
    15e4:	ldr	r5, [pc, #72]	; 1634 <__libc_csu_init@@Base+0x60>
    15e8:	mov	r9, r2
    15ec:	add	r6, pc, r6
    15f0:	bl	c54 <_init@@Base>
    15f4:	add	r5, pc, r5
    15f8:	rsb	r6, r5, r6
    15fc:	asrs	r6, r6, #2
    1600:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    1604:	sub	r5, r5, #4
    1608:	mov	r4, #0
    160c:	add	r4, r4, #1
    1610:	ldr	r3, [r5, #4]!
    1614:	mov	r0, r7
    1618:	mov	r1, r8
    161c:	mov	r2, r9
    1620:	blx	r3
    1624:	cmp	r4, r6
    1628:	bne	160c <__libc_csu_init@@Base+0x38>
    162c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    1630:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    1634:	andeq	r0, r1, r4, ror #15

00001638 <__libc_csu_fini@@Base>:
    1638:	bx	lr

Disassembly of section .fini:

0000163c <_fini@@Base>:
    163c:	push	{r3, lr}
    1640:	pop	{r3, pc}
