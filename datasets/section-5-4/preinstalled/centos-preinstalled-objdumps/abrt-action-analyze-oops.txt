
centos-preinstalled/abrt-action-analyze-oops:     file format elf32-littlearm


Disassembly of section .init:

000008dc <_init@@Base>:
 8dc:	push	{r3, lr}
 8e0:	bl	c9c <main@@Base+0x2b0>
 8e4:	pop	{r3, pc}

Disassembly of section .plt:

000008e8 <dd_opendir@plt-0x14>:
 8e8:	push	{lr}		; (str lr, [sp, #-4]!)
 8ec:	ldr	lr, [pc, #4]	; 8f8 <_init@@Base+0x1c>
 8f0:	add	lr, pc, lr
 8f4:	ldr	pc, [lr, #8]!
 8f8:	andeq	r1, r1, r4, lsl #13

000008fc <dd_opendir@plt>:
 8fc:	add	ip, pc, #0, 12
 900:	add	ip, ip, #69632	; 0x11000
 904:	ldr	pc, [ip, #1668]!	; 0x684

00000908 <free@plt>:
 908:	add	ip, pc, #0, 12
 90c:	add	ip, ip, #69632	; 0x11000
 910:	ldr	pc, [ip, #1660]!	; 0x67c

00000914 <dd_close@plt>:
 914:	add	ip, pc, #0, 12
 918:	add	ip, ip, #69632	; 0x11000
 91c:	ldr	pc, [ip, #1652]!	; 0x674

00000920 <libreport_parse_opts@plt>:
 920:	add	ip, pc, #0, 12
 924:	add	ip, ip, #69632	; 0x11000
 928:	ldr	pc, [ip, #1644]!	; 0x66c

0000092c <libreport_export_abrt_envvars@plt>:
 92c:	add	ip, pc, #0, 12
 930:	add	ip, ip, #69632	; 0x11000
 934:	ldr	pc, [ip, #1636]!	; 0x664

00000938 <textdomain@plt>:
 938:	add	ip, pc, #0, 12
 93c:	add	ip, ip, #69632	; 0x11000
 940:	ldr	pc, [ip, #1628]!	; 0x65c

00000944 <memset@plt>:
 944:	add	ip, pc, #0, 12
 948:	add	ip, ip, #69632	; 0x11000
 94c:	ldr	pc, [ip, #1620]!	; 0x654

00000950 <abort@plt>:
 950:	add	ip, pc, #0, 12
 954:	add	ip, ip, #69632	; 0x11000
 958:	ldr	pc, [ip, #1612]!	; 0x64c

0000095c <dd_load_text@plt>:
 95c:	add	ip, pc, #0, 12
 960:	add	ip, ip, #69632	; 0x11000
 964:	ldr	pc, [ip, #1604]!	; 0x644

00000968 <abrt_koops_hash_str@plt>:
 968:	add	ip, pc, #0, 12
 96c:	add	ip, ip, #69632	; 0x11000
 970:	ldr	pc, [ip, #1596]!	; 0x63c

00000974 <__stack_chk_fail@plt>:
 974:	add	ip, pc, #0, 12
 978:	add	ip, ip, #69632	; 0x11000
 97c:	ldr	pc, [ip, #1588]!	; 0x634

00000980 <dcgettext@plt>:
 980:	add	ip, pc, #0, 12
 984:	add	ip, ip, #69632	; 0x11000
 988:	ldr	pc, [ip, #1580]!	; 0x62c

0000098c <log_wrapper@plt>:
 98c:	add	ip, pc, #0, 12
 990:	add	ip, ip, #69632	; 0x11000
 994:	ldr	pc, [ip, #1572]!	; 0x624

00000998 <bindtextdomain@plt>:
 998:	add	ip, pc, #0, 12
 99c:	add	ip, ip, #69632	; 0x11000
 9a0:	ldr	pc, [ip, #1564]!	; 0x61c

000009a4 <setlocale@plt>:
 9a4:	add	ip, pc, #0, 12
 9a8:	add	ip, ip, #69632	; 0x11000
 9ac:	ldr	pc, [ip, #1556]!	; 0x614

000009b0 <abrt_init@plt>:
 9b0:	add	ip, pc, #0, 12
 9b4:	add	ip, ip, #69632	; 0x11000
 9b8:	ldr	pc, [ip, #1548]!	; 0x60c

000009bc <dd_save_text@plt>:
 9bc:	add	ip, pc, #0, 12
 9c0:	add	ip, ip, #69632	; 0x11000
 9c4:	ldr	pc, [ip, #1540]!	; 0x604

000009c8 <__libc_start_main@plt>:
 9c8:	add	ip, pc, #0, 12
 9cc:	add	ip, ip, #69632	; 0x11000
 9d0:	ldr	pc, [ip, #1532]!	; 0x5fc

000009d4 <__gmon_start__@plt>:
 9d4:	add	ip, pc, #0, 12
 9d8:	add	ip, ip, #69632	; 0x11000
 9dc:	ldr	pc, [ip, #1524]!	; 0x5f4

000009e0 <__cxa_finalize@plt>:
 9e0:	add	ip, pc, #0, 12
 9e4:	add	ip, ip, #69632	; 0x11000
 9e8:	ldr	pc, [ip, #1516]!	; 0x5ec

Disassembly of section .text:

000009ec <main@@Base>:
 9ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 9f0:	mov	r7, r1
 9f4:	ldr	r5, [pc, #512]	; bfc <main@@Base+0x210>
 9f8:	sub	sp, sp, #144	; 0x90
 9fc:	ldr	r3, [pc, #508]	; c00 <main@@Base+0x214>
 a00:	mov	r9, r0
 a04:	add	r5, pc, r5
 a08:	ldr	r1, [pc, #500]	; c04 <main@@Base+0x218>
 a0c:	ldr	r4, [pc, #500]	; c08 <main@@Base+0x21c>
 a10:	mov	r0, #6
 a14:	ldr	r6, [r5, r3]
 a18:	add	r1, pc, r1
 a1c:	add	r4, pc, r4
 a20:	add	r8, sp, #24
 a24:	ldr	r3, [r6]
 a28:	str	r3, [sp, #140]	; 0x8c
 a2c:	bl	9a4 <setlocale@plt>
 a30:	ldr	r1, [pc, #468]	; c0c <main@@Base+0x220>
 a34:	mov	r0, r4
 a38:	add	r1, pc, r1
 a3c:	bl	998 <bindtextdomain@plt>
 a40:	mov	r0, r4
 a44:	bl	938 <textdomain@plt>
 a48:	mov	r0, r7
 a4c:	bl	9b0 <abrt_init@plt>
 a50:	ldr	r1, [pc, #440]	; c10 <main@@Base+0x224>
 a54:	ldr	r3, [pc, #440]	; c14 <main@@Base+0x228>
 a58:	mov	r0, r4
 a5c:	add	r1, pc, r1
 a60:	mov	r2, #5
 a64:	add	r3, pc, r3
 a68:	str	r3, [sp, #20]
 a6c:	bl	980 <dcgettext@plt>
 a70:	mov	r1, #0
 a74:	mov	r2, #72	; 0x48
 a78:	mov	sl, r0
 a7c:	mov	r0, r8
 a80:	bl	944 <memset@plt>
 a84:	ldr	r3, [pc, #396]	; c18 <main@@Base+0x22c>
 a88:	ldr	r2, [pc, #396]	; c1c <main@@Base+0x230>
 a8c:	mov	r1, #118	; 0x76
 a90:	str	r1, [sp, #28]
 a94:	mov	r0, r4
 a98:	add	r2, pc, r2
 a9c:	ldr	r1, [pc, #380]	; c20 <main@@Base+0x234>
 aa0:	str	r2, [sp, #32]
 aa4:	mov	r2, #5
 aa8:	ldr	r3, [r5, r3]
 aac:	add	r1, pc, r1
 ab0:	str	r3, [sp, #36]	; 0x24
 ab4:	bl	980 <dcgettext@plt>
 ab8:	ldr	r1, [pc, #356]	; c24 <main@@Base+0x238>
 abc:	mov	r2, #5
 ac0:	ldr	ip, [pc, #352]	; c28 <main@@Base+0x23c>
 ac4:	mov	lr, #2
 ac8:	add	r1, pc, r1
 acc:	str	lr, [sp, #48]	; 0x30
 ad0:	add	ip, pc, ip
 ad4:	mov	r3, #100	; 0x64
 ad8:	str	ip, [sp, #64]	; 0x40
 adc:	str	r3, [sp, #52]	; 0x34
 ae0:	add	r3, sp, #20
 ae4:	str	r3, [sp, #60]	; 0x3c
 ae8:	str	r0, [sp, #44]	; 0x2c
 aec:	mov	r0, r4
 af0:	bl	980 <dcgettext@plt>
 af4:	mov	r1, r7
 af8:	mov	r2, r8
 afc:	mov	r3, sl
 b00:	mov	ip, #6
 b04:	str	ip, [sp, #72]	; 0x48
 b08:	str	r0, [sp, #68]	; 0x44
 b0c:	mov	r0, r9
 b10:	bl	920 <libreport_parse_opts@plt>
 b14:	mov	r0, #0
 b18:	bl	92c <libreport_export_abrt_envvars@plt>
 b1c:	ldr	r0, [sp, #20]
 b20:	mov	r1, #0
 b24:	bl	8fc <dd_opendir@plt>
 b28:	subs	r4, r0, #0
 b2c:	moveq	r0, #1
 b30:	beq	b9c <main@@Base+0x1b0>
 b34:	ldr	r1, [pc, #240]	; c2c <main@@Base+0x240>
 b38:	add	r8, sp, #96	; 0x60
 b3c:	add	r1, pc, r1
 b40:	bl	95c <dd_load_text@plt>
 b44:	mov	r1, r0
 b48:	mov	r7, r0
 b4c:	mov	r0, r8
 b50:	bl	968 <abrt_koops_hash_str@plt>
 b54:	mov	r5, r0
 b58:	mov	r0, r7
 b5c:	bl	908 <free@plt>
 b60:	cmp	r5, #0
 b64:	bne	bb4 <main@@Base+0x1c8>
 b68:	ldr	r1, [pc, #192]	; c30 <main@@Base+0x244>
 b6c:	mov	r0, r4
 b70:	mov	r2, r8
 b74:	add	r1, pc, r1
 b78:	bl	9bc <dd_save_text@plt>
 b7c:	ldr	r1, [pc, #176]	; c34 <main@@Base+0x248>
 b80:	mov	r0, r4
 b84:	mov	r2, r8
 b88:	add	r1, pc, r1
 b8c:	bl	9bc <dd_save_text@plt>
 b90:	mov	r0, r4
 b94:	bl	914 <dd_close@plt>
 b98:	mov	r0, r5
 b9c:	ldr	r2, [sp, #140]	; 0x8c
 ba0:	ldr	r3, [r6]
 ba4:	cmp	r2, r3
 ba8:	bne	bf8 <main@@Base+0x20c>
 bac:	add	sp, sp, #144	; 0x90
 bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 bb4:	ldr	r1, [sp, #20]
 bb8:	mov	r3, #1
 bbc:	ldr	r2, [pc, #116]	; c38 <main@@Base+0x24c>
 bc0:	mov	r0, #0
 bc4:	str	r3, [sp, #4]
 bc8:	str	r1, [sp, #12]
 bcc:	add	r2, pc, r2
 bd0:	ldr	r1, [pc, #100]	; c3c <main@@Base+0x250>
 bd4:	ldr	r3, [pc, #100]	; c40 <main@@Base+0x254>
 bd8:	str	r0, [sp]
 bdc:	add	r1, pc, r1
 be0:	str	r2, [sp, #8]
 be4:	mov	r0, #3
 be8:	mov	r2, #65	; 0x41
 bec:	add	r3, pc, r3
 bf0:	bl	98c <log_wrapper@plt>
 bf4:	b	b90 <main@@Base+0x1a4>
 bf8:	bl	974 <__stack_chk_fail@plt>
 bfc:	andeq	r1, r1, r0, ror r5
 c00:	andeq	r0, r0, ip, asr r0
 c04:	andeq	r0, r0, ip, ror r5
 c08:	andeq	r0, r0, r8, ror r4
 c0c:	andeq	r0, r0, r4, ror #8
 c10:	andeq	r0, r0, r8, asr r4
 c14:	andeq	r0, r0, ip, asr #8
 c18:	andeq	r0, r0, r8, rrx
 c1c:	andeq	r0, r0, r0, ror r4
 c20:	andeq	r0, r0, r4, ror #8
 c24:	andeq	r0, r0, r4, asr r4
 c28:	andeq	r0, r0, r4, lsr r4
 c2c:	strdeq	r0, [r0], -r4
 c30:	andeq	r0, r0, ip, lsl r4
 c34:	andeq	r0, r0, r0, lsl r4
 c38:	andeq	r0, r0, ip, lsl #7
 c3c:	andeq	r0, r0, r0, ror #6
 c40:	andeq	r0, r0, r0, lsr #5
 c44:	mov	fp, #0
 c48:	mov	lr, #0
 c4c:	pop	{r1}		; (ldr r1, [sp], #4)
 c50:	mov	r2, sp
 c54:	push	{r2}		; (str r2, [sp, #-4]!)
 c58:	push	{r0}		; (str r0, [sp, #-4]!)
 c5c:	ldr	sl, [pc, #40]	; c8c <main@@Base+0x2a0>
 c60:	add	r3, pc, #36	; 0x24
 c64:	add	sl, sl, r3
 c68:	ldr	ip, [pc, #32]	; c90 <main@@Base+0x2a4>
 c6c:	ldr	ip, [sl, ip]
 c70:	push	{ip}		; (str ip, [sp, #-4]!)
 c74:	ldr	r3, [pc, #24]	; c94 <main@@Base+0x2a8>
 c78:	ldr	r3, [sl, r3]
 c7c:	ldr	r0, [pc, #20]	; c98 <main@@Base+0x2ac>
 c80:	ldr	r0, [sl, r0]
 c84:	bl	9c8 <__libc_start_main@plt>
 c88:	bl	950 <abort@plt>
 c8c:	strdeq	r1, [r1], -r0
 c90:	andeq	r0, r0, r4, ror r0
 c94:	andeq	r0, r0, ip, rrx
 c98:	andeq	r0, r0, r0, rrx
 c9c:	ldr	r3, [pc, #20]	; cb8 <main@@Base+0x2cc>
 ca0:	ldr	r2, [pc, #20]	; cbc <main@@Base+0x2d0>
 ca4:	add	r3, pc, r3
 ca8:	ldr	r2, [r3, r2]
 cac:	cmp	r2, #0
 cb0:	bxeq	lr
 cb4:	b	9d4 <__gmon_start__@plt>
 cb8:	ldrdeq	r1, [r1], -r0
 cbc:	andeq	r0, r0, r8, ror r0
 cc0:	ldr	r2, [pc, #60]	; d04 <main@@Base+0x318>
 cc4:	ldr	r0, [pc, #60]	; d08 <main@@Base+0x31c>
 cc8:	add	r2, pc, r2
 ccc:	add	r0, pc, r0
 cd0:	add	r2, r2, #3
 cd4:	rsb	r2, r0, r2
 cd8:	push	{r3, lr}
 cdc:	cmp	r2, #6
 ce0:	ldr	r3, [pc, #36]	; d0c <main@@Base+0x320>
 ce4:	add	r3, pc, r3
 ce8:	popls	{r3, pc}
 cec:	ldr	r2, [pc, #28]	; d10 <main@@Base+0x324>
 cf0:	ldr	r3, [r3, r2]
 cf4:	cmp	r3, #0
 cf8:	popeq	{r3, pc}
 cfc:	blx	r3
 d00:	pop	{r3, pc}
 d04:	andeq	r1, r1, r4, lsr r3
 d08:	andeq	r1, r1, r0, lsr r3
 d0c:	muleq	r1, r0, r2
 d10:	andeq	r0, r0, r0, ror r0
 d14:	push	{r3, lr}
 d18:	ldr	r0, [pc, #64]	; d60 <main@@Base+0x374>
 d1c:	ldr	r3, [pc, #64]	; d64 <main@@Base+0x378>
 d20:	add	r0, pc, r0
 d24:	ldr	r2, [pc, #60]	; d68 <main@@Base+0x37c>
 d28:	add	r3, pc, r3
 d2c:	rsb	r3, r0, r3
 d30:	add	r2, pc, r2
 d34:	asr	r3, r3, #2
 d38:	add	r3, r3, r3, lsr #31
 d3c:	asrs	r3, r3, #1
 d40:	popeq	{r3, pc}
 d44:	ldr	r1, [pc, #32]	; d6c <main@@Base+0x380>
 d48:	ldr	r2, [r2, r1]
 d4c:	cmp	r2, #0
 d50:	popeq	{r3, pc}
 d54:	mov	r1, r3
 d58:	blx	r2
 d5c:	pop	{r3, pc}
 d60:	ldrdeq	r1, [r1], -ip
 d64:	ldrdeq	r1, [r1], -r4
 d68:	andeq	r1, r1, r4, asr #4
 d6c:	andeq	r0, r0, ip, ror r0
 d70:	ldr	r2, [pc, #76]	; dc4 <main@@Base+0x3d8>
 d74:	push	{r3, lr}
 d78:	add	r2, pc, r2
 d7c:	ldr	r3, [pc, #68]	; dc8 <main@@Base+0x3dc>
 d80:	ldrb	r2, [r2]
 d84:	add	r3, pc, r3
 d88:	cmp	r2, #0
 d8c:	popne	{r3, pc}
 d90:	ldr	r2, [pc, #52]	; dcc <main@@Base+0x3e0>
 d94:	ldr	r3, [r3, r2]
 d98:	cmp	r3, #0
 d9c:	beq	dac <main@@Base+0x3c0>
 da0:	ldr	r0, [pc, #40]	; dd0 <main@@Base+0x3e4>
 da4:	add	r0, pc, r0
 da8:	bl	9e0 <__cxa_finalize@plt>
 dac:	bl	cc0 <main@@Base+0x2d4>
 db0:	ldr	r3, [pc, #28]	; dd4 <main@@Base+0x3e8>
 db4:	mov	r2, #1
 db8:	add	r3, pc, r3
 dbc:	strb	r2, [r3]
 dc0:	pop	{r3, pc}
 dc4:	andeq	r1, r1, r4, lsl #5
 dc8:	strdeq	r1, [r1], -r0
 dcc:	andeq	r0, r0, r0, lsl #1
 dd0:	muleq	r1, r4, r0
 dd4:	andeq	r1, r1, r4, asr #4
 dd8:	ldr	r0, [pc, #52]	; e14 <main@@Base+0x428>
 ddc:	push	{r3, lr}
 de0:	add	r0, pc, r0
 de4:	ldr	r3, [pc, #44]	; e18 <main@@Base+0x42c>
 de8:	ldr	r2, [r0]
 dec:	add	r3, pc, r3
 df0:	cmp	r2, #0
 df4:	beq	e0c <main@@Base+0x420>
 df8:	ldr	r2, [pc, #28]	; e1c <main@@Base+0x430>
 dfc:	ldr	r3, [r3, r2]
 e00:	cmp	r3, #0
 e04:	beq	e0c <main@@Base+0x420>
 e08:	blx	r3
 e0c:	pop	{r3, lr}
 e10:	b	d14 <main@@Base+0x328>
 e14:	andeq	r1, r1, r4, asr r0
 e18:	andeq	r1, r1, r8, lsl #3
 e1c:	andeq	r0, r0, r4, rrx

00000e20 <__libc_csu_init@@Base>:
 e20:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
 e24:	mov	r7, r0
 e28:	ldr	r6, [pc, #76]	; e7c <__libc_csu_init@@Base+0x5c>
 e2c:	mov	r8, r1
 e30:	ldr	r5, [pc, #72]	; e80 <__libc_csu_init@@Base+0x60>
 e34:	mov	r9, r2
 e38:	add	r6, pc, r6
 e3c:	bl	8dc <_init@@Base>
 e40:	add	r5, pc, r5
 e44:	rsb	r6, r5, r6
 e48:	asrs	r6, r6, #2
 e4c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
 e50:	sub	r5, r5, #4
 e54:	mov	r4, #0
 e58:	add	r4, r4, #1
 e5c:	ldr	r3, [r5, #4]!
 e60:	mov	r0, r7
 e64:	mov	r1, r8
 e68:	mov	r2, r9
 e6c:	blx	r3
 e70:	cmp	r4, r6
 e74:	bne	e58 <__libc_csu_init@@Base+0x38>
 e78:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 e7c:	strdeq	r0, [r1], -r8
 e80:	andeq	r0, r1, ip, ror #31

00000e84 <__libc_csu_fini@@Base>:
 e84:	bx	lr

Disassembly of section .fini:

00000e88 <_fini@@Base>:
 e88:	push	{r3, lr}
 e8c:	pop	{r3, pc}
