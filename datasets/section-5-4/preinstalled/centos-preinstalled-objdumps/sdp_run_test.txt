
centos-preinstalled/sdp_run_test:     file format elf32-littlearm


Disassembly of section .init:

00008990 <.init>:
    8990:	push	{r3, lr}
    8994:	bl	8f54 <__assert_fail@plt+0x40c>
    8998:	pop	{r3, pc}

Disassembly of section .plt:

0000899c <strcasestr@plt-0x14>:
    899c:	push	{lr}		; (str lr, [sp, #-4]!)
    89a0:	ldr	lr, [pc, #4]	; 89ac <strcasestr@plt-0x4>
    89a4:	add	lr, pc, lr
    89a8:	ldr	pc, [lr, #8]!
    89ac:	andeq	r9, r0, r4, asr r6

000089b0 <strcasestr@plt>:
    89b0:	add	ip, pc, #0, 12
    89b4:	add	ip, ip, #36864	; 0x9000
    89b8:	ldr	pc, [ip, #1620]!	; 0x654

000089bc <strcmp@plt>:
    89bc:	add	ip, pc, #0, 12
    89c0:	add	ip, ip, #36864	; 0x9000
    89c4:	ldr	pc, [ip, #1612]!	; 0x64c

000089c8 <strtol@plt>:
    89c8:	add	ip, pc, #0, 12
    89cc:	add	ip, ip, #36864	; 0x9000
    89d0:	ldr	pc, [ip, #1604]!	; 0x644

000089d4 <fopen@plt>:
    89d4:	add	ip, pc, #0, 12
    89d8:	add	ip, ip, #36864	; 0x9000
    89dc:	ldr	pc, [ip, #1596]!	; 0x63c

000089e0 <read@plt>:
    89e0:	add	ip, pc, #0, 12
    89e4:	add	ip, ip, #36864	; 0x9000
    89e8:	ldr	pc, [ip, #1588]!	; 0x634

000089ec <fflush@plt>:
    89ec:	add	ip, pc, #0, 12
    89f0:	add	ip, ip, #36864	; 0x9000
    89f4:	ldr	pc, [ip, #1580]!	; 0x62c

000089f8 <free@plt>:
    89f8:	add	ip, pc, #0, 12
    89fc:	add	ip, ip, #36864	; 0x9000
    8a00:	ldr	pc, [ip, #1572]!	; 0x624

00008a04 <fgets@plt>:
    8a04:	add	ip, pc, #0, 12
    8a08:	add	ip, ip, #36864	; 0x9000
    8a0c:	ldr	pc, [ip, #1564]!	; 0x61c

00008a10 <memcpy@plt>:
    8a10:	add	ip, pc, #0, 12
    8a14:	add	ip, ip, #36864	; 0x9000
    8a18:	ldr	pc, [ip, #1556]!	; 0x614

00008a1c <_IO_getc@plt>:
    8a1c:	add	ip, pc, #0, 12
    8a20:	add	ip, ip, #36864	; 0x9000
    8a24:	ldr	pc, [ip, #1548]!	; 0x60c

00008a28 <sleep@plt>:
    8a28:	add	ip, pc, #0, 12
    8a2c:	add	ip, ip, #36864	; 0x9000
    8a30:	ldr	pc, [ip, #1540]!	; 0x604

00008a34 <__stack_chk_fail@plt>:
    8a34:	add	ip, pc, #0, 12
    8a38:	add	ip, ip, #36864	; 0x9000
    8a3c:	ldr	pc, [ip, #1532]!	; 0x5fc

00008a40 <strcat@plt>:
    8a40:	add	ip, pc, #0, 12
    8a44:	add	ip, ip, #36864	; 0x9000
    8a48:	ldr	pc, [ip, #1524]!	; 0x5f4

00008a4c <usleep@plt>:
    8a4c:	add	ip, pc, #0, 12
    8a50:	add	ip, ip, #36864	; 0x9000
    8a54:	ldr	pc, [ip, #1516]!	; 0x5ec

00008a58 <getenv@plt>:
    8a58:	add	ip, pc, #0, 12
    8a5c:	add	ip, ip, #36864	; 0x9000
    8a60:	ldr	pc, [ip, #1508]!	; 0x5e4

00008a64 <puts@plt>:
    8a64:	add	ip, pc, #0, 12
    8a68:	add	ip, ip, #36864	; 0x9000
    8a6c:	ldr	pc, [ip, #1500]!	; 0x5dc

00008a70 <malloc@plt>:
    8a70:	add	ip, pc, #0, 12
    8a74:	add	ip, ip, #36864	; 0x9000
    8a78:	ldr	pc, [ip, #1492]!	; 0x5d4

00008a7c <__libc_start_main@plt>:
    8a7c:	add	ip, pc, #0, 12
    8a80:	add	ip, ip, #36864	; 0x9000
    8a84:	ldr	pc, [ip, #1484]!	; 0x5cc

00008a88 <strerror@plt>:
    8a88:	add	ip, pc, #0, 12
    8a8c:	add	ip, ip, #36864	; 0x9000
    8a90:	ldr	pc, [ip, #1476]!	; 0x5c4

00008a94 <system@plt>:
    8a94:	add	ip, pc, #0, 12
    8a98:	add	ip, ip, #36864	; 0x9000
    8a9c:	ldr	pc, [ip, #1468]!	; 0x5bc

00008aa0 <__gmon_start__@plt>:
    8aa0:	add	ip, pc, #0, 12
    8aa4:	add	ip, ip, #36864	; 0x9000
    8aa8:	ldr	pc, [ip, #1460]!	; 0x5b4

00008aac <exit@plt>:
    8aac:	add	ip, pc, #0, 12
    8ab0:	add	ip, ip, #36864	; 0x9000
    8ab4:	ldr	pc, [ip, #1452]!	; 0x5ac

00008ab8 <strlen@plt>:
    8ab8:	add	ip, pc, #0, 12
    8abc:	add	ip, ip, #36864	; 0x9000
    8ac0:	ldr	pc, [ip, #1444]!	; 0x5a4

00008ac4 <__errno_location@plt>:
    8ac4:	add	ip, pc, #0, 12
    8ac8:	add	ip, ip, #36864	; 0x9000
    8acc:	ldr	pc, [ip, #1436]!	; 0x59c

00008ad0 <putchar@plt>:
    8ad0:	add	ip, pc, #0, 12
    8ad4:	add	ip, ip, #36864	; 0x9000
    8ad8:	ldr	pc, [ip, #1428]!	; 0x594

00008adc <strncpy@plt>:
    8adc:	add	ip, pc, #0, 12
    8ae0:	add	ip, ip, #36864	; 0x9000
    8ae4:	ldr	pc, [ip, #1420]!	; 0x58c

00008ae8 <__printf_chk@plt>:
    8ae8:	add	ip, pc, #0, 12
    8aec:	add	ip, ip, #36864	; 0x9000
    8af0:	ldr	pc, [ip, #1412]!	; 0x584

00008af4 <write@plt>:
    8af4:	add	ip, pc, #0, 12
    8af8:	add	ip, ip, #36864	; 0x9000
    8afc:	ldr	pc, [ip, #1404]!	; 0x57c

00008b00 <__fprintf_chk@plt>:
    8b00:	add	ip, pc, #0, 12
    8b04:	add	ip, ip, #36864	; 0x9000
    8b08:	ldr	pc, [ip, #1396]!	; 0x574

00008b0c <strtok@plt>:
    8b0c:	add	ip, pc, #0, 12
    8b10:	add	ip, ip, #36864	; 0x9000
    8b14:	ldr	pc, [ip, #1388]!	; 0x56c

00008b18 <socket@plt>:
    8b18:	add	ip, pc, #0, 12
    8b1c:	add	ip, ip, #36864	; 0x9000
    8b20:	ldr	pc, [ip, #1380]!	; 0x564

00008b24 <abort@plt>:
    8b24:	add	ip, pc, #0, 12
    8b28:	add	ip, ip, #36864	; 0x9000
    8b2c:	ldr	pc, [ip, #1372]!	; 0x55c

00008b30 <close@plt>:
    8b30:	add	ip, pc, #0, 12
    8b34:	add	ip, ip, #36864	; 0x9000
    8b38:	ldr	pc, [ip, #1364]!	; 0x554

00008b3c <connect@plt>:
    8b3c:	add	ip, pc, #0, 12
    8b40:	add	ip, ip, #36864	; 0x9000
    8b44:	ldr	pc, [ip, #1356]!	; 0x54c

00008b48 <__assert_fail@plt>:
    8b48:	add	ip, pc, #0, 12
    8b4c:	add	ip, ip, #36864	; 0x9000
    8b50:	ldr	pc, [ip, #1348]!	; 0x544

Disassembly of section .text:

00008b54 <.text>:
    8b54:	cmp	r0, #1
    8b58:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8b5c:	mov	r4, r0
    8b60:	mov	r6, r1
    8b64:	ble	8ed0 <__assert_fail@plt+0x388>
    8b68:	ldr	r5, [r1, #4]
    8b6c:	movw	r1, #38136	; 0x94f8
    8b70:	movt	r1, #0
    8b74:	mov	r0, r5
    8b78:	bl	89bc <strcmp@plt>
    8b7c:	cmp	r0, #0
    8b80:	bne	8e74 <__assert_fail@plt+0x32c>
    8b84:	movw	r3, #8368	; 0x20b0
    8b88:	movt	r3, #1
    8b8c:	ldr	r5, [r3]
    8b90:	cmp	r4, #3
    8b94:	movne	r9, #1
    8b98:	beq	8df4 <__assert_fail@plt+0x2ac>
    8b9c:	movw	r0, #38200	; 0x9538
    8ba0:	movt	r0, #0
    8ba4:	bl	8a64 <puts@plt>
    8ba8:	movw	r0, #38220	; 0x954c
    8bac:	movt	r0, #0
    8bb0:	movw	r6, #8376	; 0x20b8
    8bb4:	bl	8a64 <puts@plt>
    8bb8:	mov	r0, #1024	; 0x400
    8bbc:	bl	8a70 <malloc@plt>
    8bc0:	movt	r6, #1
    8bc4:	mov	r4, r0
    8bc8:	bl	92f0 <__assert_fail@plt+0x7a8>
    8bcc:	cmn	r0, #1
    8bd0:	str	r0, [r6]
    8bd4:	beq	8ee4 <__assert_fail@plt+0x39c>
    8bd8:	cmp	r4, #0
    8bdc:	beq	8ef8 <__assert_fail@plt+0x3b0>
    8be0:	movw	sl, #8368	; 0x20b0
    8be4:	movw	r8, #38316	; 0x95ac
    8be8:	movt	sl, #1
    8bec:	movt	r8, #0
    8bf0:	mov	r7, #0
    8bf4:	mov	r0, r4
    8bf8:	mov	r1, #1024	; 0x400
    8bfc:	mov	r2, r5
    8c00:	bl	8a04 <fgets@plt>
    8c04:	subs	fp, r0, #0
    8c08:	beq	8d74 <__assert_fail@plt+0x22c>
    8c0c:	mov	r0, r4
    8c10:	bl	8ab8 <strlen@plt>
    8c14:	cmp	r0, #1
    8c18:	bls	8c90 <__assert_fail@plt+0x148>
    8c1c:	ldrb	r3, [r4]
    8c20:	cmp	r3, #64	; 0x40
    8c24:	beq	8cc8 <__assert_fail@plt+0x180>
    8c28:	cmp	r3, #33	; 0x21
    8c2c:	beq	8cf4 <__assert_fail@plt+0x1ac>
    8c30:	cmp	r3, #46	; 0x2e
    8c34:	beq	8dc8 <__assert_fail@plt+0x280>
    8c38:	cmp	r3, #43	; 0x2b
    8c3c:	beq	8e24 <__assert_fail@plt+0x2dc>
    8c40:	cmp	r3, #36	; 0x24
    8c44:	beq	8c9c <__assert_fail@plt+0x154>
    8c48:	cmp	r3, #94	; 0x5e
    8c4c:	beq	8d9c <__assert_fail@plt+0x254>
    8c50:	cmp	r3, #126	; 0x7e
    8c54:	beq	8ea0 <__assert_fail@plt+0x358>
    8c58:	cmp	r3, #63	; 0x3f
    8c5c:	beq	8ec4 <__assert_fail@plt+0x37c>
    8c60:	cmp	r3, #42	; 0x2a
    8c64:	beq	8e44 <__assert_fail@plt+0x2fc>
    8c68:	mov	r1, r4
    8c6c:	ldr	r0, [r6]
    8c70:	mov	r2, #0
    8c74:	bl	904c <__assert_fail@plt+0x504>
    8c78:	movw	r1, #38320	; 0x95b0
    8c7c:	mov	r2, r4
    8c80:	movt	r1, #0
    8c84:	mov	r0, #1
    8c88:	bl	8ae8 <__printf_chk@plt>
    8c8c:	b	8bf4 <__assert_fail@plt+0xac>
    8c90:	mov	r0, #10
    8c94:	bl	8ad0 <putchar@plt>
    8c98:	b	8bf4 <__assert_fail@plt+0xac>
    8c9c:	cmp	r9, #0
    8ca0:	beq	8bf4 <__assert_fail@plt+0xac>
    8ca4:	add	r0, r4, #1
    8ca8:	movw	r1, #38368	; 0x95e0
    8cac:	movt	r1, #0
    8cb0:	bl	8b0c <strtok@plt>
    8cb4:	mov	r1, #0
    8cb8:	mov	r2, #10
    8cbc:	bl	89c8 <strtol@plt>
    8cc0:	bl	8a28 <sleep@plt>
    8cc4:	b	8bf4 <__assert_fail@plt+0xac>
    8cc8:	movw	r1, #38300	; 0x959c
    8ccc:	mov	r0, r4
    8cd0:	movt	r1, #0
    8cd4:	bl	8b0c <strtok@plt>
    8cd8:	subs	r2, r0, #0
    8cdc:	beq	8c90 <__assert_fail@plt+0x148>
    8ce0:	movw	r1, #38304	; 0x95a0
    8ce4:	mov	r0, #1
    8ce8:	movt	r1, #0
    8cec:	bl	8ae8 <__printf_chk@plt>
    8cf0:	b	8bf4 <__assert_fail@plt+0xac>
    8cf4:	movw	r1, #38312	; 0x95a8
    8cf8:	mov	r0, r4
    8cfc:	movt	r1, #0
    8d00:	bl	8b0c <strtok@plt>
    8d04:	mov	fp, r0
    8d08:	bl	8ab8 <strlen@plt>
    8d0c:	ldrh	r1, [r8]
    8d10:	cmp	fp, #0
    8d14:	ldrb	r2, [r8, #2]
    8d18:	add	r3, fp, r0
    8d1c:	strh	r1, [fp, r0]
    8d20:	strb	r2, [r3, #2]
    8d24:	beq	8bf4 <__assert_fail@plt+0xac>
    8d28:	mov	r2, fp
    8d2c:	movw	r1, #38320	; 0x95b0
    8d30:	mov	r0, #1
    8d34:	movt	r1, #0
    8d38:	bl	8ae8 <__printf_chk@plt>
    8d3c:	mov	r0, #0
    8d40:	bl	89ec <fflush@plt>
    8d44:	mov	r1, fp
    8d48:	ldr	r0, [r6]
    8d4c:	mov	r2, #1
    8d50:	bl	904c <__assert_fail@plt+0x504>
    8d54:	movw	r1, #38332	; 0x95bc
    8d58:	movt	r1, #0
    8d5c:	mov	r2, r0
    8d60:	mov	r0, #1
    8d64:	bl	8ae8 <__printf_chk@plt>
    8d68:	mov	r0, #0
    8d6c:	bl	89ec <fflush@plt>
    8d70:	b	8bf4 <__assert_fail@plt+0xac>
    8d74:	ldr	r0, [r6]
    8d78:	bl	8b30 <close@plt>
    8d7c:	movw	r0, #38384	; 0x95f0
    8d80:	movt	r0, #0
    8d84:	bl	8a64 <puts@plt>
    8d88:	movw	r0, #38404	; 0x9604
    8d8c:	movt	r0, #0
    8d90:	bl	8a64 <puts@plt>
    8d94:	mov	r0, fp
    8d98:	bl	8aac <exit@plt>
    8d9c:	cmp	r9, #0
    8da0:	beq	8bf4 <__assert_fail@plt+0xac>
    8da4:	add	r0, r4, #1
    8da8:	movw	r1, #38368	; 0x95e0
    8dac:	movt	r1, #0
    8db0:	bl	8b0c <strtok@plt>
    8db4:	mov	r1, #0
    8db8:	mov	r2, #10
    8dbc:	bl	89c8 <strtol@plt>
    8dc0:	bl	8a4c <usleep@plt>
    8dc4:	b	8bf4 <__assert_fail@plt+0xac>
    8dc8:	ldr	r0, [r6]
    8dcc:	mov	r2, #1
    8dd0:	movw	r1, #38344	; 0x95c8
    8dd4:	movt	r1, #0
    8dd8:	bl	904c <__assert_fail@plt+0x504>
    8ddc:	movw	r1, #38352	; 0x95d0
    8de0:	movt	r1, #0
    8de4:	mov	r2, r0
    8de8:	mov	r0, #1
    8dec:	bl	8ae8 <__printf_chk@plt>
    8df0:	b	8bf4 <__assert_fail@plt+0xac>
    8df4:	ldr	r0, [r6, #8]
    8df8:	movw	r1, #38168	; 0x9518
    8dfc:	movt	r1, #0
    8e00:	bl	89bc <strcmp@plt>
    8e04:	cmp	r0, #0
    8e08:	moveq	r9, r0
    8e0c:	beq	8b9c <__assert_fail@plt+0x54>
    8e10:	movw	r0, #38176	; 0x9520
    8e14:	movt	r0, #0
    8e18:	bl	8a64 <puts@plt>
    8e1c:	mov	r0, #1
    8e20:	bl	8aac <exit@plt>
    8e24:	add	r0, r4, #1
    8e28:	movw	r1, #38364	; 0x95dc
    8e2c:	movt	r1, #0
    8e30:	bl	8b0c <strtok@plt>
    8e34:	mov	r1, r0
    8e38:	ldr	r0, [r6]
    8e3c:	bl	90f0 <__assert_fail@plt+0x5a8>
    8e40:	b	8bf4 <__assert_fail@plt+0xac>
    8e44:	movw	r0, #38376	; 0x95e8
    8e48:	movt	r0, #0
    8e4c:	bl	8a94 <system@plt>
    8e50:	cmp	r7, #0
    8e54:	ble	8bf4 <__assert_fail@plt+0xac>
    8e58:	mov	fp, #0
    8e5c:	add	fp, fp, #1
    8e60:	mov	r0, #10
    8e64:	bl	8ad0 <putchar@plt>
    8e68:	cmp	fp, r7
    8e6c:	bne	8e5c <__assert_fail@plt+0x314>
    8e70:	b	8bf4 <__assert_fail@plt+0xac>
    8e74:	mov	r0, r5
    8e78:	movw	r1, #38380	; 0x95ec
    8e7c:	movt	r1, #0
    8e80:	bl	89d4 <fopen@plt>
    8e84:	subs	r5, r0, #0
    8e88:	bne	8b90 <__assert_fail@plt+0x48>
    8e8c:	movw	r0, #38144	; 0x9500
    8e90:	movt	r0, #0
    8e94:	bl	8a64 <puts@plt>
    8e98:	mov	r0, #1
    8e9c:	bl	8aac <exit@plt>
    8ea0:	movw	r1, #38372	; 0x95e4
    8ea4:	mov	r0, r4
    8ea8:	movt	r1, #0
    8eac:	bl	8b0c <strtok@plt>
    8eb0:	mov	r1, #0
    8eb4:	mov	r2, #10
    8eb8:	bl	89c8 <strtol@plt>
    8ebc:	mov	r7, r0
    8ec0:	b	8bf4 <__assert_fail@plt+0xac>
    8ec4:	ldr	r0, [sl]
    8ec8:	bl	8a1c <_IO_getc@plt>
    8ecc:	b	8bf4 <__assert_fail@plt+0xac>
    8ed0:	movw	r0, #38108	; 0x94dc
    8ed4:	movt	r0, #0
    8ed8:	bl	8a64 <puts@plt>
    8edc:	mov	r0, #1
    8ee0:	bl	8aac <exit@plt>
    8ee4:	movw	r0, #38240	; 0x9560
    8ee8:	movt	r0, #0
    8eec:	bl	8a64 <puts@plt>
    8ef0:	mov	r0, #1
    8ef4:	bl	8aac <exit@plt>
    8ef8:	movw	r0, #38276	; 0x9584
    8efc:	movw	r1, #38288	; 0x9590
    8f00:	movw	r3, #37888	; 0x9400
    8f04:	movt	r0, #0
    8f08:	movt	r1, #0
    8f0c:	mov	r2, #227	; 0xe3
    8f10:	movt	r3, #0
    8f14:	bl	8b48 <__assert_fail@plt>
    8f18:	mov	fp, #0
    8f1c:	mov	lr, #0
    8f20:	pop	{r1}		; (ldr r1, [sp], #4)
    8f24:	mov	r2, sp
    8f28:	push	{r2}		; (str r2, [sp, #-4]!)
    8f2c:	push	{r0}		; (str r0, [sp, #-4]!)
    8f30:	ldr	ip, [pc, #16]	; 8f48 <__assert_fail@plt+0x400>
    8f34:	push	{ip}		; (str ip, [sp, #-4]!)
    8f38:	ldr	r0, [pc, #12]	; 8f4c <__assert_fail@plt+0x404>
    8f3c:	ldr	r3, [pc, #12]	; 8f50 <__assert_fail@plt+0x408>
    8f40:	bl	8a7c <__libc_start_main@plt>
    8f44:	bl	8b24 <abort@plt>
    8f48:	andeq	r9, r0, ip, ror #7
    8f4c:	andeq	r8, r0, r4, asr fp
    8f50:	andeq	r9, r0, r8, lsl #7
    8f54:	ldr	r3, [pc, #20]	; 8f70 <__assert_fail@plt+0x428>
    8f58:	ldr	r2, [pc, #20]	; 8f74 <__assert_fail@plt+0x42c>
    8f5c:	add	r3, pc, r3
    8f60:	ldr	r2, [r3, r2]
    8f64:	cmp	r2, #0
    8f68:	bxeq	lr
    8f6c:	b	8aa0 <__gmon_start__@plt>
    8f70:	muleq	r0, ip, r0
    8f74:	muleq	r0, r8, r0
    8f78:	push	{r3, lr}
    8f7c:	movw	r0, #8352	; 0x20a0
    8f80:	ldr	r3, [pc, #36]	; 8fac <__assert_fail@plt+0x464>
    8f84:	movt	r0, #1
    8f88:	rsb	r3, r0, r3
    8f8c:	cmp	r3, #6
    8f90:	popls	{r3, pc}
    8f94:	movw	r3, #0
    8f98:	movt	r3, #0
    8f9c:	cmp	r3, #0
    8fa0:	popeq	{r3, pc}
    8fa4:	blx	r3
    8fa8:	pop	{r3, pc}
    8fac:	andeq	r2, r1, r3, lsr #1
    8fb0:	push	{r3, lr}
    8fb4:	movw	r0, #8352	; 0x20a0
    8fb8:	movw	r3, #8352	; 0x20a0
    8fbc:	movt	r0, #1
    8fc0:	movt	r3, #1
    8fc4:	rsb	r3, r0, r3
    8fc8:	asr	r3, r3, #2
    8fcc:	add	r3, r3, r3, lsr #31
    8fd0:	asrs	r1, r3, #1
    8fd4:	popeq	{r3, pc}
    8fd8:	movw	r2, #0
    8fdc:	movt	r2, #0
    8fe0:	cmp	r2, #0
    8fe4:	popeq	{r3, pc}
    8fe8:	blx	r2
    8fec:	pop	{r3, pc}
    8ff0:	push	{r4, lr}
    8ff4:	movw	r4, #8372	; 0x20b4
    8ff8:	movt	r4, #1
    8ffc:	ldrb	r3, [r4]
    9000:	cmp	r3, #0
    9004:	popne	{r4, pc}
    9008:	bl	8f78 <__assert_fail@plt+0x430>
    900c:	mov	r3, #1
    9010:	strb	r3, [r4]
    9014:	pop	{r4, pc}
    9018:	movw	r0, #7940	; 0x1f04
    901c:	movt	r0, #1
    9020:	push	{r3, lr}
    9024:	ldr	r3, [r0]
    9028:	cmp	r3, #0
    902c:	beq	9044 <__assert_fail@plt+0x4fc>
    9030:	movw	r3, #0
    9034:	movt	r3, #0
    9038:	cmp	r3, #0
    903c:	beq	9044 <__assert_fail@plt+0x4fc>
    9040:	blx	r3
    9044:	pop	{r3, lr}
    9048:	b	8fb0 <__assert_fail@plt+0x468>
    904c:	push	{r3, r4, r5, r6, r7, lr}
    9050:	mov	r5, r0
    9054:	mov	r0, #1000	; 0x3e8
    9058:	mov	r4, r1
    905c:	mov	r7, r2
    9060:	bl	8a70 <malloc@plt>
    9064:	mov	r6, r0
    9068:	mov	r0, r4
    906c:	bl	8ab8 <strlen@plt>
    9070:	mov	r1, r4
    9074:	mov	r2, r0
    9078:	mov	r0, r5
    907c:	bl	8af4 <write@plt>
    9080:	cmp	r0, #0
    9084:	beq	90bc <__assert_fail@plt+0x574>
    9088:	cmp	r7, #1
    908c:	movwne	r3, #37956	; 0x9444
    9090:	movtne	r3, #0
    9094:	bne	90b4 <__assert_fail@plt+0x56c>
    9098:	mov	r2, #1000	; 0x3e8
    909c:	mov	r0, r5
    90a0:	mov	r1, r6
    90a4:	bl	89e0 <read@plt>
    90a8:	mov	r3, r6
    90ac:	mov	r2, #0
    90b0:	strb	r2, [r6, r0]
    90b4:	mov	r0, r3
    90b8:	pop	{r3, r4, r5, r6, r7, pc}
    90bc:	movw	r3, #8360	; 0x20a8
    90c0:	movt	r3, #1
    90c4:	ldr	r4, [r3]
    90c8:	bl	8ac4 <__errno_location@plt>
    90cc:	ldr	r0, [r0]
    90d0:	bl	8a88 <strerror@plt>
    90d4:	movw	r2, #37896	; 0x9408
    90d8:	mov	r1, #1
    90dc:	movt	r2, #0
    90e0:	mov	r3, r0
    90e4:	mov	r0, r4
    90e8:	bl	8b00 <__fprintf_chk@plt>
    90ec:	b	9088 <__assert_fail@plt+0x540>
    90f0:	push	{r3, r4, r5, r6, r7, lr}
    90f4:	mov	r2, r1
    90f8:	mov	r5, r1
    90fc:	mov	r7, r0
    9100:	movw	r1, #37916	; 0x941c
    9104:	mov	r0, #1
    9108:	movt	r1, #0
    910c:	bl	8ae8 <__printf_chk@plt>
    9110:	mov	r0, #1000	; 0x3e8
    9114:	bl	8a70 <malloc@plt>
    9118:	mov	r3, #0
    911c:	mov	r4, r0
    9120:	strb	r3, [r0]
    9124:	b	9134 <__assert_fail@plt+0x5ec>
    9128:	bl	89e0 <read@plt>
    912c:	subs	r3, r0, #0
    9130:	bgt	917c <__assert_fail@plt+0x634>
    9134:	mov	r1, r5
    9138:	mov	r0, r4
    913c:	bl	89b0 <strcasestr@plt>
    9140:	mov	r1, r4
    9144:	mov	r2, #1000	; 0x3e8
    9148:	subs	r6, r0, #0
    914c:	mov	r0, r7
    9150:	beq	9128 <__assert_fail@plt+0x5e0>
    9154:	mov	r0, r4
    9158:	bl	89f8 <free@plt>
    915c:	mov	r2, r4
    9160:	movw	r1, #37960	; 0x9448
    9164:	mov	r0, #1
    9168:	movt	r1, #0
    916c:	bl	8ae8 <__printf_chk@plt>
    9170:	mov	r0, #0
    9174:	pop	{r3, r4, r5, r6, r7, lr}
    9178:	b	89ec <fflush@plt>
    917c:	mov	r2, r4
    9180:	movw	r1, #37944	; 0x9438
    9184:	mov	r0, #1
    9188:	movt	r1, #0
    918c:	strb	r6, [r4, r3]
    9190:	bl	8ae8 <__printf_chk@plt>
    9194:	mov	r0, r6
    9198:	bl	89ec <fflush@plt>
    919c:	b	9134 <__assert_fail@plt+0x5ec>
    91a0:	movw	ip, #38076	; 0x94bc
    91a4:	movt	ip, #0
    91a8:	push	{r4, r5, r6, r7, r8, r9, lr}
    91ac:	mov	r6, r0
    91b0:	ldm	ip!, {r0, r1, r2, r3}
    91b4:	sub	sp, sp, #44	; 0x2c
    91b8:	add	lr, sp, #4
    91bc:	movw	r4, #8352	; 0x20a0
    91c0:	movt	r4, #1
    91c4:	stmia	lr!, {r0, r1, r2, r3}
    91c8:	ldm	ip, {r0, r1, r2, r3}
    91cc:	ldr	r5, [r4]
    91d0:	stm	lr, {r0, r1, r2, r3}
    91d4:	movw	r0, #37980	; 0x945c
    91d8:	movt	r0, #0
    91dc:	str	r5, [sp, #36]	; 0x24
    91e0:	bl	8a58 <getenv@plt>
    91e4:	subs	r1, r0, #0
    91e8:	beq	91f8 <__assert_fail@plt+0x6b0>
    91ec:	ldrb	r3, [r1]
    91f0:	cmp	r3, #0
    91f4:	bne	9298 <__assert_fail@plt+0x750>
    91f8:	movw	r0, #37996	; 0x946c
    91fc:	movt	r0, #0
    9200:	bl	8a58 <getenv@plt>
    9204:	subs	r9, r0, #0
    9208:	beq	92c8 <__assert_fail@plt+0x780>
    920c:	bl	8ab8 <strlen@plt>
    9210:	subs	r7, r0, #0
    9214:	beq	92c8 <__assert_fail@plt+0x780>
    9218:	add	r0, r7, #33	; 0x21
    921c:	bl	8a70 <malloc@plt>
    9220:	subs	r5, r0, #0
    9224:	beq	92dc <__assert_fail@plt+0x794>
    9228:	add	r8, r7, #1
    922c:	mov	r1, r9
    9230:	mov	r2, r8
    9234:	bl	8a10 <memcpy@plt>
    9238:	add	r3, r5, r7
    923c:	add	r1, sp, #4
    9240:	mov	r0, r5
    9244:	ldrb	r3, [r3, #-1]
    9248:	cmp	r3, #47	; 0x2f
    924c:	movne	r2, #47	; 0x2f
    9250:	movne	r3, #0
    9254:	strbne	r2, [r5, r7]
    9258:	strbne	r3, [r5, r8]
    925c:	bl	8a40 <strcat@plt>
    9260:	mov	r1, r5
    9264:	mov	r2, #107	; 0x6b
    9268:	add	r0, r6, #2
    926c:	bl	8adc <strncpy@plt>
    9270:	ldr	r2, [sp, #36]	; 0x24
    9274:	ldr	r3, [r4]
    9278:	mov	r1, #0
    927c:	strb	r1, [r6, #109]	; 0x6d
    9280:	cmp	r2, r3
    9284:	bne	92c4 <__assert_fail@plt+0x77c>
    9288:	mov	r0, r5
    928c:	add	sp, sp, #44	; 0x2c
    9290:	pop	{r4, r5, r6, r7, r8, r9, lr}
    9294:	b	89f8 <free@plt>
    9298:	mov	r2, #107	; 0x6b
    929c:	add	r0, r6, #2
    92a0:	bl	8adc <strncpy@plt>
    92a4:	ldr	r2, [sp, #36]	; 0x24
    92a8:	ldr	r3, [r4]
    92ac:	mov	r1, #0
    92b0:	strb	r1, [r6, #109]	; 0x6d
    92b4:	cmp	r2, r3
    92b8:	bne	92c4 <__assert_fail@plt+0x77c>
    92bc:	add	sp, sp, #44	; 0x2c
    92c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
    92c4:	bl	8a34 <__stack_chk_fail@plt>
    92c8:	movw	r0, #38004	; 0x9474
    92cc:	movt	r0, #0
    92d0:	bl	8a64 <puts@plt>
    92d4:	mov	r0, #1
    92d8:	bl	8aac <exit@plt>
    92dc:	movw	r0, #38060	; 0x94ac
    92e0:	movt	r0, #0
    92e4:	bl	8a64 <puts@plt>
    92e8:	mov	r0, #1
    92ec:	bl	8aac <exit@plt>
    92f0:	push	{r4, r5, lr}
    92f4:	movw	r4, #8352	; 0x20a0
    92f8:	movt	r4, #1
    92fc:	sub	sp, sp, #124	; 0x7c
    9300:	add	r0, sp, #4
    9304:	ldr	r3, [r4]
    9308:	str	r3, [sp, #116]	; 0x74
    930c:	bl	91a0 <__assert_fail@plt+0x658>
    9310:	mov	r3, #1
    9314:	mov	r2, #0
    9318:	mov	r0, r3
    931c:	mov	r1, r3
    9320:	strh	r3, [sp, #4]
    9324:	bl	8b18 <socket@plt>
    9328:	cmn	r0, #1
    932c:	mov	r5, r0
    9330:	beq	9358 <__assert_fail@plt+0x810>
    9334:	add	r0, sp, #6
    9338:	bl	8ab8 <strlen@plt>
    933c:	add	r1, sp, #4
    9340:	add	r2, r0, #2
    9344:	mov	r0, r5
    9348:	bl	8b3c <connect@plt>
    934c:	cmn	r0, #1
    9350:	mov	r3, r0
    9354:	beq	9374 <__assert_fail@plt+0x82c>
    9358:	ldr	r2, [sp, #116]	; 0x74
    935c:	mov	r0, r5
    9360:	ldr	r3, [r4]
    9364:	cmp	r2, r3
    9368:	bne	9384 <__assert_fail@plt+0x83c>
    936c:	add	sp, sp, #124	; 0x7c
    9370:	pop	{r4, r5, pc}
    9374:	mov	r0, r5
    9378:	mov	r5, r3
    937c:	bl	8b30 <close@plt>
    9380:	b	9358 <__assert_fail@plt+0x810>
    9384:	bl	8a34 <__stack_chk_fail@plt>
    9388:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    938c:	mov	r7, r0
    9390:	ldr	r6, [pc, #76]	; 93e4 <__assert_fail@plt+0x89c>
    9394:	mov	r8, r1
    9398:	ldr	r5, [pc, #72]	; 93e8 <__assert_fail@plt+0x8a0>
    939c:	mov	r9, r2
    93a0:	add	r6, pc, r6
    93a4:	bl	8990 <strcasestr@plt-0x20>
    93a8:	add	r5, pc, r5
    93ac:	rsb	r6, r5, r6
    93b0:	asrs	r6, r6, #2
    93b4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    93b8:	sub	r5, r5, #4
    93bc:	mov	r4, #0
    93c0:	add	r4, r4, #1
    93c4:	ldr	r3, [r5, #4]!
    93c8:	mov	r0, r7
    93cc:	mov	r1, r8
    93d0:	mov	r2, r9
    93d4:	blx	r3
    93d8:	cmp	r4, r6
    93dc:	bne	93c0 <__assert_fail@plt+0x878>
    93e0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    93e4:	andeq	r8, r0, r8, asr fp
    93e8:	andeq	r8, r0, ip, asr #22
    93ec:	bx	lr

Disassembly of section .fini:

000093f0 <.fini>:
    93f0:	push	{r3, lr}
    93f4:	pop	{r3, pc}
