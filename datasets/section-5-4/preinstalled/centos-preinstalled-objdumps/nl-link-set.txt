
centos-preinstalled/nl-link-set:     file format elf32-littlearm


Disassembly of section .init:

00010a24 <.init>:
   10a24:	push	{r3, lr}
   10a28:	bl	10e00 <exit@plt+0x284>
   10a2c:	pop	{r3, pc}

Disassembly of section .plt:

00010a30 <nl_cli_link_parse_txqlen@plt-0x14>:
   10a30:	push	{lr}		; (str lr, [sp, #-4]!)
   10a34:	ldr	lr, [pc, #4]	; 10a40 <nl_cli_link_parse_txqlen@plt-0x4>
   10a38:	add	lr, pc, lr
   10a3c:	ldr	pc, [lr, #8]!
   10a40:	andeq	r1, r1, r0, asr #11

00010a44 <nl_cli_link_parse_txqlen@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a50 <abort@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a5c <nl_cli_fatal@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a68 <nl_cache_foreach_filter@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a74 <__libc_start_main@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a80 <__gmon_start__@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1432]!	; 0x598

00010a8c <nl_cli_link_parse_weight@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1424]!	; 0x590

00010a98 <__printf_chk@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1416]!	; 0x588

00010aa4 <nl_cli_print_version@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1408]!	; 0x580

00010ab0 <nl_cli_alloc_socket@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1400]!	; 0x578

00010abc <nl_cli_link_parse_name@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1392]!	; 0x570

00010ac8 <rtnl_link_change@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #69632	; 0x11000
   10ad0:	ldr	pc, [ip, #1384]!	; 0x568

00010ad4 <rtnl_link_unset_flags@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #69632	; 0x11000
   10adc:	ldr	pc, [ip, #1376]!	; 0x560

00010ae0 <getopt_long@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1368]!	; 0x558

00010aec <nl_cli_link_parse_mtu@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1360]!	; 0x550

00010af8 <rtnl_link_set_flags@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1352]!	; 0x548

00010b04 <nl_cli_link_alloc_cache@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1344]!	; 0x540

00010b10 <__stack_chk_fail@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1336]!	; 0x538

00010b1c <nl_cli_link_parse_ifindex@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1328]!	; 0x530

00010b28 <nl_cli_link_parse_ifalias@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1320]!	; 0x528

00010b34 <nl_object_dump@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1312]!	; 0x520

00010b40 <puts@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1304]!	; 0x518

00010b4c <nl_geterror@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1296]!	; 0x510

00010b58 <nl_cli_connect@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1288]!	; 0x508

00010b64 <nl_cli_link_alloc@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1280]!	; 0x500

00010b70 <strcmp@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b7c <exit@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1264]!	; 0x4f0

Disassembly of section .text:

00010b88 <.text>:
   10b88:	movw	r2, #8512	; 0x2140
   10b8c:	movt	r2, #2
   10b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b94:	sub	sp, sp, #36	; 0x24
   10b98:	ldr	r3, [r2]
   10b9c:	mov	r6, r1
   10ba0:	str	r2, [sp, #12]
   10ba4:	mov	r7, r0
   10ba8:	mov	fp, #0
   10bac:	movw	sl, #8528	; 0x2150
   10bb0:	str	r3, [sp, #28]
   10bb4:	bl	10ab0 <nl_cli_alloc_socket@plt>
   10bb8:	movt	sl, #2
   10bbc:	mov	r1, fp
   10bc0:	movw	r9, #8520	; 0x2148
   10bc4:	add	r5, sp, #24
   10bc8:	movt	r9, #2
   10bcc:	mov	r4, fp
   10bd0:	movw	r8, #257	; 0x101
   10bd4:	str	r0, [sl]
   10bd8:	bl	10b58 <nl_cli_connect@plt>
   10bdc:	ldr	r0, [sl]
   10be0:	bl	10b04 <nl_cli_link_alloc_cache@plt>
   10be4:	str	r0, [sp, #20]
   10be8:	bl	10b64 <nl_cli_link_alloc@plt>
   10bec:	str	r0, [sp, #16]
   10bf0:	bl	10b64 <nl_cli_link_alloc@plt>
   10bf4:	str	r0, [sp, #8]
   10bf8:	str	r5, [sp]
   10bfc:	movw	r2, #4768	; 0x12a0
   10c00:	movw	r3, #8320	; 0x2080
   10c04:	movt	r2, #1
   10c08:	movt	r3, #2
   10c0c:	mov	r0, r7
   10c10:	mov	r1, r6
   10c14:	str	r4, [sp, #24]
   10c18:	bl	10ae0 <getopt_long@plt>
   10c1c:	cmn	r0, #1
   10c20:	beq	10d80 <exit@plt+0x204>
   10c24:	cmp	r0, r8
   10c28:	beq	10d24 <exit@plt+0x1a8>
   10c2c:	bgt	10c60 <exit@plt+0xe4>
   10c30:	cmp	r0, #110	; 0x6e
   10c34:	beq	10d38 <exit@plt+0x1bc>
   10c38:	bgt	10c94 <exit@plt+0x118>
   10c3c:	cmp	r0, #104	; 0x68
   10c40:	beq	10d34 <exit@plt+0x1b8>
   10c44:	cmp	r0, #105	; 0x69
   10c48:	bne	10bf8 <exit@plt+0x7c>
   10c4c:	ldr	r0, [sp, #16]
   10c50:	add	fp, fp, #1
   10c54:	ldr	r1, [r9]
   10c58:	bl	10b1c <nl_cli_link_parse_ifindex@plt>
   10c5c:	b	10bf8 <exit@plt+0x7c>
   10c60:	cmp	r0, #260	; 0x104
   10c64:	beq	10d04 <exit@plt+0x188>
   10c68:	bgt	10cb4 <exit@plt+0x138>
   10c6c:	movw	r3, #258	; 0x102
   10c70:	cmp	r0, r3
   10c74:	beq	10d4c <exit@plt+0x1d0>
   10c78:	add	r3, r3, #1
   10c7c:	cmp	r0, r3
   10c80:	bne	10bf8 <exit@plt+0x7c>
   10c84:	ldr	r0, [sp, #8]
   10c88:	ldr	r1, [r9]
   10c8c:	bl	10a44 <nl_cli_link_parse_txqlen@plt>
   10c90:	b	10bf8 <exit@plt+0x7c>
   10c94:	cmp	r0, #113	; 0x71
   10c98:	moveq	r3, #1
   10c9c:	streq	r3, [sl, #4]
   10ca0:	beq	10bf8 <exit@plt+0x7c>
   10ca4:	cmp	r0, #118	; 0x76
   10ca8:	bne	10bf8 <exit@plt+0x7c>
   10cac:	bl	10aa4 <nl_cli_print_version@plt>
   10cb0:	b	10bf8 <exit@plt+0x7c>
   10cb4:	movw	r3, #261	; 0x105
   10cb8:	cmp	r0, r3
   10cbc:	beq	10d14 <exit@plt+0x198>
   10cc0:	add	r3, r3, #1
   10cc4:	cmp	r0, r3
   10cc8:	bne	10bf8 <exit@plt+0x7c>
   10ccc:	ldr	r0, [r9]
   10cd0:	ldrb	r3, [r0]
   10cd4:	cmp	r3, #117	; 0x75
   10cd8:	bne	10d5c <exit@plt+0x1e0>
   10cdc:	ldrb	r3, [r0, #1]
   10ce0:	cmp	r3, #112	; 0x70
   10ce4:	bne	10d5c <exit@plt+0x1e0>
   10ce8:	ldrb	r3, [r0, #2]
   10cec:	cmp	r3, #0
   10cf0:	bne	10d5c <exit@plt+0x1e0>
   10cf4:	ldr	r0, [sp, #8]
   10cf8:	mov	r1, #1
   10cfc:	bl	10af8 <rtnl_link_set_flags@plt>
   10d00:	b	10bf8 <exit@plt+0x7c>
   10d04:	ldr	r0, [sp, #8]
   10d08:	ldr	r1, [r9]
   10d0c:	bl	10a8c <nl_cli_link_parse_weight@plt>
   10d10:	b	10bf8 <exit@plt+0x7c>
   10d14:	ldr	r0, [sp, #8]
   10d18:	ldr	r1, [r9]
   10d1c:	bl	10b28 <nl_cli_link_parse_ifalias@plt>
   10d20:	b	10bf8 <exit@plt+0x7c>
   10d24:	ldr	r0, [sp, #8]
   10d28:	ldr	r1, [r9]
   10d2c:	bl	10abc <nl_cli_link_parse_name@plt>
   10d30:	b	10bf8 <exit@plt+0x7c>
   10d34:	bl	10fdc <exit@plt+0x460>
   10d38:	ldr	r0, [sp, #16]
   10d3c:	add	fp, fp, #1
   10d40:	ldr	r1, [r9]
   10d44:	bl	10abc <nl_cli_link_parse_name@plt>
   10d48:	b	10bf8 <exit@plt+0x7c>
   10d4c:	ldr	r0, [sp, #8]
   10d50:	ldr	r1, [r9]
   10d54:	bl	10aec <nl_cli_link_parse_mtu@plt>
   10d58:	b	10bf8 <exit@plt+0x7c>
   10d5c:	movw	r1, #4776	; 0x12a8
   10d60:	movt	r1, #1
   10d64:	bl	10b70 <strcmp@plt>
   10d68:	cmp	r0, #0
   10d6c:	bne	10bf8 <exit@plt+0x7c>
   10d70:	ldr	r0, [sp, #8]
   10d74:	mov	r1, #1
   10d78:	bl	10ad4 <rtnl_link_unset_flags@plt>
   10d7c:	b	10bf8 <exit@plt+0x7c>
   10d80:	cmp	fp, #0
   10d84:	beq	10d34 <exit@plt+0x1b8>
   10d88:	ldr	r0, [sp, #20]
   10d8c:	movw	r2, #3832	; 0xef8
   10d90:	ldr	r1, [sp, #16]
   10d94:	movt	r2, #1
   10d98:	ldr	r3, [sp, #8]
   10d9c:	bl	10a68 <nl_cache_foreach_filter@plt>
   10da0:	ldr	r1, [sp, #12]
   10da4:	ldr	r2, [sp, #28]
   10da8:	mov	r0, #0
   10dac:	ldr	r3, [r1]
   10db0:	cmp	r2, r3
   10db4:	bne	10dc0 <exit@plt+0x244>
   10db8:	add	sp, sp, #36	; 0x24
   10dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10dc0:	bl	10b10 <__stack_chk_fail@plt>
   10dc4:	mov	fp, #0
   10dc8:	mov	lr, #0
   10dcc:	pop	{r1}		; (ldr r1, [sp], #4)
   10dd0:	mov	r2, sp
   10dd4:	push	{r2}		; (str r2, [sp, #-4]!)
   10dd8:	push	{r0}		; (str r0, [sp, #-4]!)
   10ddc:	ldr	ip, [pc, #16]	; 10df4 <exit@plt+0x278>
   10de0:	push	{ip}		; (str ip, [sp, #-4]!)
   10de4:	ldr	r0, [pc, #12]	; 10df8 <exit@plt+0x27c>
   10de8:	ldr	r3, [pc, #12]	; 10dfc <exit@plt+0x280>
   10dec:	bl	10a74 <__libc_start_main@plt>
   10df0:	bl	10a50 <abort@plt>
   10df4:	andeq	r1, r1, r8, asr r0
   10df8:	andeq	r0, r1, r8, lsl #23
   10dfc:	strdeq	r0, [r1], -r4
   10e00:	ldr	r3, [pc, #20]	; 10e1c <exit@plt+0x2a0>
   10e04:	ldr	r2, [pc, #20]	; 10e20 <exit@plt+0x2a4>
   10e08:	add	r3, pc, r3
   10e0c:	ldr	r2, [r3, r2]
   10e10:	cmp	r2, #0
   10e14:	bxeq	lr
   10e18:	b	10a80 <__gmon_start__@plt>
   10e1c:	strdeq	r1, [r1], -r0
   10e20:	andeq	r0, r0, r8, ror r0
   10e24:	push	{r3, lr}
   10e28:	movw	r0, #8512	; 0x2140
   10e2c:	ldr	r3, [pc, #36]	; 10e58 <exit@plt+0x2dc>
   10e30:	movt	r0, #2
   10e34:	rsb	r3, r0, r3
   10e38:	cmp	r3, #6
   10e3c:	popls	{r3, pc}
   10e40:	movw	r3, #0
   10e44:	movt	r3, #0
   10e48:	cmp	r3, #0
   10e4c:	popeq	{r3, pc}
   10e50:	blx	r3
   10e54:	pop	{r3, pc}
   10e58:	andeq	r2, r2, r3, asr #2
   10e5c:	push	{r3, lr}
   10e60:	movw	r0, #8512	; 0x2140
   10e64:	movw	r3, #8512	; 0x2140
   10e68:	movt	r0, #2
   10e6c:	movt	r3, #2
   10e70:	rsb	r3, r0, r3
   10e74:	asr	r3, r3, #2
   10e78:	add	r3, r3, r3, lsr #31
   10e7c:	asrs	r1, r3, #1
   10e80:	popeq	{r3, pc}
   10e84:	movw	r2, #0
   10e88:	movt	r2, #0
   10e8c:	cmp	r2, #0
   10e90:	popeq	{r3, pc}
   10e94:	blx	r2
   10e98:	pop	{r3, pc}
   10e9c:	push	{r4, lr}
   10ea0:	movw	r4, #8524	; 0x214c
   10ea4:	movt	r4, #2
   10ea8:	ldrb	r3, [r4]
   10eac:	cmp	r3, #0
   10eb0:	popne	{r4, pc}
   10eb4:	bl	10e24 <exit@plt+0x2a8>
   10eb8:	mov	r3, #1
   10ebc:	strb	r3, [r4]
   10ec0:	pop	{r4, pc}
   10ec4:	movw	r0, #7868	; 0x1ebc
   10ec8:	movt	r0, #2
   10ecc:	push	{r3, lr}
   10ed0:	ldr	r3, [r0]
   10ed4:	cmp	r3, #0
   10ed8:	beq	10ef0 <exit@plt+0x374>
   10edc:	movw	r3, #0
   10ee0:	movt	r3, #0
   10ee4:	cmp	r3, #0
   10ee8:	beq	10ef0 <exit@plt+0x374>
   10eec:	blx	r3
   10ef0:	pop	{r3, lr}
   10ef4:	b	10e5c <exit@plt+0x2e0>
   10ef8:	push	{r4, r5, r6, r7, lr}
   10efc:	movw	r3, #8516	; 0x2144
   10f00:	movw	r4, #8512	; 0x2140
   10f04:	movt	r3, #2
   10f08:	movt	r4, #2
   10f0c:	movw	r5, #8528	; 0x2150
   10f10:	ldr	lr, [r3]
   10f14:	movt	r5, #2
   10f18:	ldr	r7, [r4]
   10f1c:	sub	sp, sp, #60	; 0x3c
   10f20:	mov	ip, #0
   10f24:	mov	r6, r0
   10f28:	mov	r2, r1
   10f2c:	ldr	r0, [r5]
   10f30:	mov	r1, r6
   10f34:	mov	r3, ip
   10f38:	str	r7, [sp, #52]	; 0x34
   10f3c:	str	lr, [sp, #28]
   10f40:	str	ip, [sp]
   10f44:	str	ip, [sp, #4]
   10f48:	str	ip, [sp, #8]
   10f4c:	str	ip, [sp, #12]
   10f50:	str	ip, [sp, #16]
   10f54:	str	ip, [sp, #20]
   10f58:	str	ip, [sp, #24]
   10f5c:	str	ip, [sp, #32]
   10f60:	str	ip, [sp, #36]	; 0x24
   10f64:	str	ip, [sp, #40]	; 0x28
   10f68:	str	ip, [sp, #44]	; 0x2c
   10f6c:	str	ip, [sp, #48]	; 0x30
   10f70:	bl	10ac8 <rtnl_link_change@plt>
   10f74:	subs	r7, r0, #0
   10f78:	blt	10fbc <exit@plt+0x440>
   10f7c:	ldr	r3, [r5, #4]
   10f80:	cmp	r3, #0
   10f84:	bne	10fa4 <exit@plt+0x428>
   10f88:	movw	r1, #4232	; 0x1088
   10f8c:	mov	r0, #1
   10f90:	movt	r1, #1
   10f94:	bl	10a98 <__printf_chk@plt>
   10f98:	mov	r0, r6
   10f9c:	mov	r1, sp
   10fa0:	bl	10b34 <nl_object_dump@plt>
   10fa4:	ldr	r2, [sp, #52]	; 0x34
   10fa8:	ldr	r3, [r4]
   10fac:	cmp	r2, r3
   10fb0:	bne	10fd8 <exit@plt+0x45c>
   10fb4:	add	sp, sp, #60	; 0x3c
   10fb8:	pop	{r4, r5, r6, r7, pc}
   10fbc:	bl	10b4c <nl_geterror@plt>
   10fc0:	movw	r1, #4204	; 0x106c
   10fc4:	movt	r1, #1
   10fc8:	mov	r2, r0
   10fcc:	mov	r0, r7
   10fd0:	bl	10a5c <nl_cli_fatal@plt>
   10fd4:	b	10f7c <exit@plt+0x400>
   10fd8:	bl	10b10 <__stack_chk_fail@plt>
   10fdc:	push	{r3, lr}
   10fe0:	movw	r0, #4244	; 0x1094
   10fe4:	movt	r0, #1
   10fe8:	bl	10b40 <puts@plt>
   10fec:	mov	r0, #0
   10ff0:	bl	10b7c <exit@plt>
   10ff4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10ff8:	mov	r7, r0
   10ffc:	ldr	r6, [pc, #76]	; 11050 <exit@plt+0x4d4>
   11000:	mov	r8, r1
   11004:	ldr	r5, [pc, #72]	; 11054 <exit@plt+0x4d8>
   11008:	mov	r9, r2
   1100c:	add	r6, pc, r6
   11010:	bl	10a24 <nl_cli_link_parse_txqlen@plt-0x20>
   11014:	add	r5, pc, r5
   11018:	rsb	r6, r5, r6
   1101c:	asrs	r6, r6, #2
   11020:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11024:	sub	r5, r5, #4
   11028:	mov	r4, #0
   1102c:	add	r4, r4, #1
   11030:	ldr	r3, [r5, #4]!
   11034:	mov	r0, r7
   11038:	mov	r1, r8
   1103c:	mov	r2, r9
   11040:	blx	r3
   11044:	cmp	r4, r6
   11048:	bne	1102c <exit@plt+0x4b0>
   1104c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11050:	andeq	r0, r1, r4, lsr #29
   11054:	muleq	r1, r8, lr
   11058:	bx	lr

Disassembly of section .fini:

0001105c <.fini>:
   1105c:	push	{r3, lr}
   11060:	pop	{r3, pc}
