
centos-preinstalled/brltty-ttb:     file format elf32-littlearm


Disassembly of section .init:

000149ec <_init@@Base>:
   149ec:	push	{r3, lr}
   149f0:	bl	154dc <_start@@Base+0x3c>
   149f4:	pop	{r3, pc}

Disassembly of section .plt:

000149f8 <chdir@plt-0x14>:
   149f8:	push	{lr}		; (str lr, [sp, #-4]!)
   149fc:	ldr	lr, [pc, #4]	; 14a08 <_init@@Base+0x1c>
   14a00:	add	lr, pc, lr
   14a04:	ldr	pc, [lr, #8]!
   14a08:	strdeq	r1, [r2], -r8

00014a0c <chdir@plt>:
   14a0c:	add	ip, pc, #0, 12
   14a10:	add	ip, ip, #135168	; 0x21000
   14a14:	ldr	pc, [ip, #1528]!	; 0x5f8

00014a18 <pthread_mutex_lock@plt>:
   14a18:	add	ip, pc, #0, 12
   14a1c:	add	ip, ip, #135168	; 0x21000
   14a20:	ldr	pc, [ip, #1520]!	; 0x5f0

00014a24 <localtime_r@plt>:
   14a24:	add	ip, pc, #0, 12
   14a28:	add	ip, ip, #135168	; 0x21000
   14a2c:	ldr	pc, [ip, #1512]!	; 0x5e8

00014a30 <wcslen@plt>:
   14a30:	add	ip, pc, #0, 12
   14a34:	add	ip, ip, #135168	; 0x21000
   14a38:	ldr	pc, [ip, #1504]!	; 0x5e0

00014a3c <towlower@plt>:
   14a3c:	add	ip, pc, #0, 12
   14a40:	add	ip, ip, #135168	; 0x21000
   14a44:	ldr	pc, [ip, #1496]!	; 0x5d8

00014a48 <ftruncate@plt>:
   14a48:	add	ip, pc, #0, 12
   14a4c:	add	ip, ip, #135168	; 0x21000
   14a50:	ldr	pc, [ip, #1488]!	; 0x5d0

00014a54 <iswspace@plt>:
   14a54:	add	ip, pc, #0, 12
   14a58:	add	ip, ip, #135168	; 0x21000
   14a5c:	ldr	pc, [ip, #1480]!	; 0x5c8

00014a60 <getpid@plt>:
   14a60:	add	ip, pc, #0, 12
   14a64:	add	ip, ip, #135168	; 0x21000
   14a68:	ldr	pc, [ip, #1472]!	; 0x5c0

00014a6c <__memcpy_chk@plt>:
   14a6c:	add	ip, pc, #0, 12
   14a70:	add	ip, ip, #135168	; 0x21000
   14a74:	ldr	pc, [ip, #1464]!	; 0x5b8

00014a78 <pthread_rwlock_destroy@plt>:
   14a78:	add	ip, pc, #0, 12
   14a7c:	add	ip, ip, #135168	; 0x21000
   14a80:	ldr	pc, [ip, #1456]!	; 0x5b0

00014a84 <dlerror@plt>:
   14a84:	add	ip, pc, #0, 12
   14a88:	add	ip, ip, #135168	; 0x21000
   14a8c:	ldr	pc, [ip, #1448]!	; 0x5a8

00014a90 <gettimeofday@plt>:
   14a90:	add	ip, pc, #0, 12
   14a94:	add	ip, ip, #135168	; 0x21000
   14a98:	ldr	pc, [ip, #1440]!	; 0x5a0

00014a9c <iswupper@plt>:
   14a9c:	add	ip, pc, #0, 12
   14aa0:	add	ip, ip, #135168	; 0x21000
   14aa4:	ldr	pc, [ip, #1432]!	; 0x598

00014aa8 <strcasecmp@plt>:
   14aa8:	add	ip, pc, #0, 12
   14aac:	add	ip, ip, #135168	; 0x21000
   14ab0:	ldr	pc, [ip, #1424]!	; 0x590

00014ab4 <strtol@plt>:
   14ab4:	add	ip, pc, #0, 12
   14ab8:	add	ip, ip, #135168	; 0x21000
   14abc:	ldr	pc, [ip, #1416]!	; 0x588

00014ac0 <free@plt>:
   14ac0:	add	ip, pc, #0, 12
   14ac4:	add	ip, ip, #135168	; 0x21000
   14ac8:	ldr	pc, [ip, #1408]!	; 0x580

00014acc <iswalpha@plt>:
   14acc:	add	ip, pc, #0, 12
   14ad0:	add	ip, ip, #135168	; 0x21000
   14ad4:	ldr	pc, [ip, #1400]!	; 0x578

00014ad8 <__gcc_personality_v0@plt>:
   14ad8:	add	ip, pc, #0, 12
   14adc:	add	ip, ip, #135168	; 0x21000
   14ae0:	ldr	pc, [ip, #1392]!	; 0x570

00014ae4 <brlapi_closeConnection@plt>:
   14ae4:	add	ip, pc, #0, 12
   14ae8:	add	ip, ip, #135168	; 0x21000
   14aec:	ldr	pc, [ip, #1384]!	; 0x568

00014af0 <strncmp@plt>:
   14af0:	add	ip, pc, #0, 12
   14af4:	add	ip, ip, #135168	; 0x21000
   14af8:	ldr	pc, [ip, #1376]!	; 0x560

00014afc <mbstowcs@plt>:
   14afc:	add	ip, pc, #0, 12
   14b00:	add	ip, ip, #135168	; 0x21000
   14b04:	ldr	pc, [ip, #1368]!	; 0x558

00014b08 <__open_2@plt>:
   14b08:	add	ip, pc, #0, 12
   14b0c:	add	ip, ip, #135168	; 0x21000
   14b10:	ldr	pc, [ip, #1360]!	; 0x550

00014b14 <fgetc@plt>:
   14b14:	add	ip, pc, #0, 12
   14b18:	add	ip, ip, #135168	; 0x21000
   14b1c:	ldr	pc, [ip, #1352]!	; 0x548

00014b20 <brlapi_readKey@plt>:
   14b20:	add	ip, pc, #0, 12
   14b24:	add	ip, ip, #135168	; 0x21000
   14b28:	ldr	pc, [ip, #1344]!	; 0x540

00014b2c <brlapi_openConnection@plt>:
   14b2c:	add	ip, pc, #0, 12
   14b30:	add	ip, ip, #135168	; 0x21000
   14b34:	ldr	pc, [ip, #1336]!	; 0x538

00014b38 <exit@plt>:
   14b38:	add	ip, pc, #0, 12
   14b3c:	add	ip, ip, #135168	; 0x21000
   14b40:	ldr	pc, [ip, #1328]!	; 0x530

00014b44 <strerror@plt>:
   14b44:	add	ip, pc, #0, 12
   14b48:	add	ip, ip, #135168	; 0x21000
   14b4c:	ldr	pc, [ip, #1320]!	; 0x528

00014b50 <__xmknod@plt>:
   14b50:	add	ip, pc, #0, 12
   14b54:	add	ip, ip, #135168	; 0x21000
   14b58:	ldr	pc, [ip, #1312]!	; 0x520

00014b5c <__vsnprintf_chk@plt>:
   14b5c:	add	ip, pc, #0, 12
   14b60:	add	ip, ip, #135168	; 0x21000
   14b64:	ldr	pc, [ip, #1304]!	; 0x518

00014b68 <dlclose@plt>:
   14b68:	add	ip, pc, #0, 12
   14b6c:	add	ip, ip, #135168	; 0x21000
   14b70:	ldr	pc, [ip, #1296]!	; 0x510

00014b74 <feof@plt>:
   14b74:	add	ip, pc, #0, 12
   14b78:	add	ip, ip, #135168	; 0x21000
   14b7c:	ldr	pc, [ip, #1288]!	; 0x508

00014b80 <puts@plt>:
   14b80:	add	ip, pc, #0, 12
   14b84:	add	ip, ip, #135168	; 0x21000
   14b88:	ldr	pc, [ip, #1280]!	; 0x500

00014b8c <strtok@plt>:
   14b8c:	add	ip, pc, #0, 12
   14b90:	add	ip, ip, #135168	; 0x21000
   14b94:	ldr	pc, [ip, #1272]!	; 0x4f8

00014b98 <nl_langinfo@plt>:
   14b98:	add	ip, pc, #0, 12
   14b9c:	add	ip, ip, #135168	; 0x21000
   14ba0:	ldr	pc, [ip, #1264]!	; 0x4f0

00014ba4 <wmemcpy@plt>:
   14ba4:	add	ip, pc, #0, 12
   14ba8:	add	ip, ip, #135168	; 0x21000
   14bac:	ldr	pc, [ip, #1256]!	; 0x4e8

00014bb0 <textdomain@plt>:
   14bb0:	add	ip, pc, #0, 12
   14bb4:	add	ip, ip, #135168	; 0x21000
   14bb8:	ldr	pc, [ip, #1248]!	; 0x4e0

00014bbc <readlink@plt>:
   14bbc:	add	ip, pc, #0, 12
   14bc0:	add	ip, ip, #135168	; 0x21000
   14bc4:	ldr	pc, [ip, #1240]!	; 0x4d8

00014bc8 <__fprintf_chk@plt>:
   14bc8:	add	ip, pc, #0, 12
   14bcc:	add	ip, ip, #135168	; 0x21000
   14bd0:	ldr	pc, [ip, #1232]!	; 0x4d0

00014bd4 <strtoul@plt>:
   14bd4:	add	ip, pc, #0, 12
   14bd8:	add	ip, ip, #135168	; 0x21000
   14bdc:	ldr	pc, [ip, #1224]!	; 0x4c8

00014be0 <nanosleep@plt>:
   14be0:	add	ip, pc, #0, 12
   14be4:	add	ip, ip, #135168	; 0x21000
   14be8:	ldr	pc, [ip, #1216]!	; 0x4c0

00014bec <strftime@plt>:
   14bec:	add	ip, pc, #0, 12
   14bf0:	add	ip, ip, #135168	; 0x21000
   14bf4:	ldr	pc, [ip, #1208]!	; 0x4b8

00014bf8 <putchar@plt>:
   14bf8:	add	ip, pc, #0, 12
   14bfc:	add	ip, ip, #135168	; 0x21000
   14c00:	ldr	pc, [ip, #1200]!	; 0x4b0

00014c04 <memset@plt>:
   14c04:	add	ip, pc, #0, 12
   14c08:	add	ip, ip, #135168	; 0x21000
   14c0c:	ldr	pc, [ip, #1192]!	; 0x4a8

00014c10 <closelog@plt>:
   14c10:	add	ip, pc, #0, 12
   14c14:	add	ip, ip, #135168	; 0x21000
   14c18:	ldr	pc, [ip, #1184]!	; 0x4a0

00014c1c <fcntl@plt>:
   14c1c:	add	ip, pc, #0, 12
   14c20:	add	ip, ip, #135168	; 0x21000
   14c24:	ldr	pc, [ip, #1176]!	; 0x498

00014c28 <pthread_rwlock_rdlock@plt>:
   14c28:	add	ip, pc, #0, 12
   14c2c:	add	ip, ip, #135168	; 0x21000
   14c30:	ldr	pc, [ip, #1168]!	; 0x490

00014c34 <wcschr@plt>:
   14c34:	add	ip, pc, #0, 12
   14c38:	add	ip, ip, #135168	; 0x21000
   14c3c:	ldr	pc, [ip, #1160]!	; 0x488

00014c40 <snprintf@plt>:
   14c40:	add	ip, pc, #0, 12
   14c44:	add	ip, ip, #135168	; 0x21000
   14c48:	ldr	pc, [ip, #1152]!	; 0x480

00014c4c <__strdup@plt>:
   14c4c:	add	ip, pc, #0, 12
   14c50:	add	ip, ip, #135168	; 0x21000
   14c54:	ldr	pc, [ip, #1144]!	; 0x478

00014c58 <sigaddset@plt>:
   14c58:	add	ip, pc, #0, 12
   14c5c:	add	ip, ip, #135168	; 0x21000
   14c60:	ldr	pc, [ip, #1136]!	; 0x470

00014c64 <close@plt>:
   14c64:	add	ip, pc, #0, 12
   14c68:	add	ip, ip, #135168	; 0x21000
   14c6c:	ldr	pc, [ip, #1128]!	; 0x468

00014c70 <wmemcmp@plt>:
   14c70:	add	ip, pc, #0, 12
   14c74:	add	ip, ip, #135168	; 0x21000
   14c78:	ldr	pc, [ip, #1120]!	; 0x460

00014c7c <fgetwc@plt>:
   14c7c:	add	ip, pc, #0, 12
   14c80:	add	ip, ip, #135168	; 0x21000
   14c84:	ldr	pc, [ip, #1112]!	; 0x458

00014c88 <fopen@plt>:
   14c88:	add	ip, pc, #0, 12
   14c8c:	add	ip, ip, #135168	; 0x21000
   14c90:	ldr	pc, [ip, #1104]!	; 0x450

00014c94 <read@plt>:
   14c94:	add	ip, pc, #0, 12
   14c98:	add	ip, ip, #135168	; 0x21000
   14c9c:	ldr	pc, [ip, #1096]!	; 0x448

00014ca0 <wmemchr@plt>:
   14ca0:	add	ip, pc, #0, 12
   14ca4:	add	ip, ip, #135168	; 0x21000
   14ca8:	ldr	pc, [ip, #1088]!	; 0x440

00014cac <abort@plt>:
   14cac:	add	ip, pc, #0, 12
   14cb0:	add	ip, ip, #135168	; 0x21000
   14cb4:	ldr	pc, [ip, #1080]!	; 0x438

00014cb8 <poll@plt>:
   14cb8:	add	ip, pc, #0, 12
   14cbc:	add	ip, ip, #135168	; 0x21000
   14cc0:	ldr	pc, [ip, #1072]!	; 0x430

00014cc4 <__ctype_toupper_loc@plt>:
   14cc4:	add	ip, pc, #0, 12
   14cc8:	add	ip, ip, #135168	; 0x21000
   14ccc:	ldr	pc, [ip, #1064]!	; 0x428

00014cd0 <iswlower@plt>:
   14cd0:	add	ip, pc, #0, 12
   14cd4:	add	ip, ip, #135168	; 0x21000
   14cd8:	ldr	pc, [ip, #1056]!	; 0x420

00014cdc <dlopen@plt>:
   14cdc:	add	ip, pc, #0, 12
   14ce0:	add	ip, ip, #135168	; 0x21000
   14ce4:	ldr	pc, [ip, #1048]!	; 0x418

00014ce8 <kill@plt>:
   14ce8:	add	ip, pc, #0, 12
   14cec:	add	ip, ip, #135168	; 0x21000
   14cf0:	ldr	pc, [ip, #1040]!	; 0x410

00014cf4 <ioctl@plt>:
   14cf4:	add	ip, pc, #0, 12
   14cf8:	add	ip, ip, #135168	; 0x21000
   14cfc:	ldr	pc, [ip, #1032]!	; 0x408

00014d00 <clock_gettime@plt>:
   14d00:	add	ip, pc, #0, 12
   14d04:	add	ip, ip, #135168	; 0x21000
   14d08:	ldr	pc, [ip, #1024]!	; 0x400

00014d0c <realloc@plt>:
   14d0c:	add	ip, pc, #0, 12
   14d10:	add	ip, ip, #135168	; 0x21000
   14d14:	ldr	pc, [ip, #1016]!	; 0x3f8

00014d18 <u_charFromName_50@plt>:
   14d18:	add	ip, pc, #0, 12
   14d1c:	add	ip, ip, #135168	; 0x21000
   14d20:	ldr	pc, [ip, #1008]!	; 0x3f0

00014d24 <strtod@plt>:
   14d24:	add	ip, pc, #0, 12
   14d28:	add	ip, ip, #135168	; 0x21000
   14d2c:	ldr	pc, [ip, #1000]!	; 0x3e8

00014d30 <iswpunct@plt>:
   14d30:	add	ip, pc, #0, 12
   14d34:	add	ip, ip, #135168	; 0x21000
   14d38:	ldr	pc, [ip, #992]!	; 0x3e0

00014d3c <open@plt>:
   14d3c:	add	ip, pc, #0, 12
   14d40:	add	ip, ip, #135168	; 0x21000
   14d44:	ldr	pc, [ip, #984]!	; 0x3d8

00014d48 <waitpid@plt>:
   14d48:	add	ip, pc, #0, 12
   14d4c:	add	ip, ip, #135168	; 0x21000
   14d50:	ldr	pc, [ip, #976]!	; 0x3d0

00014d54 <tcsetattr@plt>:
   14d54:	add	ip, pc, #0, 12
   14d58:	add	ip, ip, #135168	; 0x21000
   14d5c:	ldr	pc, [ip, #968]!	; 0x3c8

00014d60 <brlapi_error_location@plt>:
   14d60:	add	ip, pc, #0, 12
   14d64:	add	ip, ip, #135168	; 0x21000
   14d68:	ldr	pc, [ip, #960]!	; 0x3c0

00014d6c <fileno@plt>:
   14d6c:	add	ip, pc, #0, 12
   14d70:	add	ip, ip, #135168	; 0x21000
   14d74:	ldr	pc, [ip, #952]!	; 0x3b8

00014d78 <pthread_rwlock_unlock@plt>:
   14d78:	add	ip, pc, #0, 12
   14d7c:	add	ip, ip, #135168	; 0x21000
   14d80:	ldr	pc, [ip, #944]!	; 0x3b0

00014d84 <__syslog_chk@plt>:
   14d84:	add	ip, pc, #0, 12
   14d88:	add	ip, ip, #135168	; 0x21000
   14d8c:	ldr	pc, [ip, #936]!	; 0x3a8

00014d90 <pthread_rwlock_wrlock@plt>:
   14d90:	add	ip, pc, #0, 12
   14d94:	add	ip, ip, #135168	; 0x21000
   14d98:	ldr	pc, [ip, #928]!	; 0x3a0

00014d9c <__stack_chk_fail@plt>:
   14d9c:	add	ip, pc, #0, 12
   14da0:	add	ip, ip, #135168	; 0x21000
   14da4:	ldr	pc, [ip, #920]!	; 0x398

00014da8 <wmemset@plt>:
   14da8:	add	ip, pc, #0, 12
   14dac:	add	ip, ip, #135168	; 0x21000
   14db0:	ldr	pc, [ip, #912]!	; 0x390

00014db4 <pthread_rwlock_tryrdlock@plt>:
   14db4:	add	ip, pc, #0, 12
   14db8:	add	ip, ip, #135168	; 0x21000
   14dbc:	ldr	pc, [ip, #904]!	; 0x388

00014dc0 <fork@plt>:
   14dc0:	add	ip, pc, #0, 12
   14dc4:	add	ip, ip, #135168	; 0x21000
   14dc8:	ldr	pc, [ip, #896]!	; 0x380

00014dcc <u_charName_50@plt>:
   14dcc:	add	ip, pc, #0, 12
   14dd0:	add	ip, ip, #135168	; 0x21000
   14dd4:	ldr	pc, [ip, #888]!	; 0x378

00014dd8 <access@plt>:
   14dd8:	add	ip, pc, #0, 12
   14ddc:	add	ip, ip, #135168	; 0x21000
   14de0:	ldr	pc, [ip, #880]!	; 0x370

00014de4 <dcgettext@plt>:
   14de4:	add	ip, pc, #0, 12
   14de8:	add	ip, ip, #135168	; 0x21000
   14dec:	ldr	pc, [ip, #872]!	; 0x368

00014df0 <mkdir@plt>:
   14df0:	add	ip, pc, #0, 12
   14df4:	add	ip, ip, #135168	; 0x21000
   14df8:	ldr	pc, [ip, #864]!	; 0x360

00014dfc <__cxa_atexit@plt>:
   14dfc:	add	ip, pc, #0, 12
   14e00:	add	ip, ip, #135168	; 0x21000
   14e04:	ldr	pc, [ip, #856]!	; 0x358

00014e08 <strncasecmp@plt>:
   14e08:	add	ip, pc, #0, 12
   14e0c:	add	ip, ip, #135168	; 0x21000
   14e10:	ldr	pc, [ip, #848]!	; 0x350

00014e14 <getopt_long@plt>:
   14e14:	add	ip, pc, #0, 12
   14e18:	add	ip, ip, #135168	; 0x21000
   14e1c:	ldr	pc, [ip, #840]!	; 0x348

00014e20 <select@plt>:
   14e20:	add	ip, pc, #0, 12
   14e24:	add	ip, ip, #135168	; 0x21000
   14e28:	ldr	pc, [ip, #832]!	; 0x340

00014e2c <lseek@plt>:
   14e2c:	add	ip, pc, #0, 12
   14e30:	add	ip, ip, #135168	; 0x21000
   14e34:	ldr	pc, [ip, #824]!	; 0x338

00014e38 <raise@plt>:
   14e38:	add	ip, pc, #0, 12
   14e3c:	add	ip, ip, #135168	; 0x21000
   14e40:	ldr	pc, [ip, #816]!	; 0x330

00014e44 <__ctype_b_loc@plt>:
   14e44:	add	ip, pc, #0, 12
   14e48:	add	ip, ip, #135168	; 0x21000
   14e4c:	ldr	pc, [ip, #808]!	; 0x328

00014e50 <bindtextdomain@plt>:
   14e50:	add	ip, pc, #0, 12
   14e54:	add	ip, ip, #135168	; 0x21000
   14e58:	ldr	pc, [ip, #800]!	; 0x320

00014e5c <iswdigit@plt>:
   14e5c:	add	ip, pc, #0, 12
   14e60:	add	ip, ip, #135168	; 0x21000
   14e64:	ldr	pc, [ip, #792]!	; 0x318

00014e68 <sysconf@plt>:
   14e68:	add	ip, pc, #0, 12
   14e6c:	add	ip, ip, #135168	; 0x21000
   14e70:	ldr	pc, [ip, #784]!	; 0x310

00014e74 <calloc@plt>:
   14e74:	add	ip, pc, #0, 12
   14e78:	add	ip, ip, #135168	; 0x21000
   14e7c:	ldr	pc, [ip, #776]!	; 0x308

00014e80 <setlocale@plt>:
   14e80:	add	ip, pc, #0, 12
   14e84:	add	ip, ip, #135168	; 0x21000
   14e88:	ldr	pc, [ip, #768]!	; 0x300

00014e8c <ferror@plt>:
   14e8c:	add	ip, pc, #0, 12
   14e90:	add	ip, ip, #135168	; 0x21000
   14e94:	ldr	pc, [ip, #760]!	; 0x2f8

00014e98 <iconv_close@plt>:
   14e98:	add	ip, pc, #0, 12
   14e9c:	add	ip, ip, #135168	; 0x21000
   14ea0:	ldr	pc, [ip, #752]!	; 0x2f0

00014ea4 <fgets@plt>:
   14ea4:	add	ip, pc, #0, 12
   14ea8:	add	ip, ip, #135168	; 0x21000
   14eac:	ldr	pc, [ip, #744]!	; 0x2e8

00014eb0 <__fxstat@plt>:
   14eb0:	add	ip, pc, #0, 12
   14eb4:	add	ip, ip, #135168	; 0x21000
   14eb8:	ldr	pc, [ip, #736]!	; 0x2e0

00014ebc <brlapi_strerror@plt>:
   14ebc:	add	ip, pc, #0, 12
   14ec0:	add	ip, ip, #135168	; 0x21000
   14ec4:	ldr	pc, [ip, #728]!	; 0x2d8

00014ec8 <fputc@plt>:
   14ec8:	add	ip, pc, #0, 12
   14ecc:	add	ip, ip, #135168	; 0x21000
   14ed0:	ldr	pc, [ip, #720]!	; 0x2d0

00014ed4 <setvbuf@plt>:
   14ed4:	add	ip, pc, #0, 12
   14ed8:	add	ip, ip, #135168	; 0x21000
   14edc:	ldr	pc, [ip, #712]!	; 0x2c8

00014ee0 <fwrite@plt>:
   14ee0:	add	ip, pc, #0, 12
   14ee4:	add	ip, ip, #135168	; 0x21000
   14ee8:	ldr	pc, [ip, #704]!	; 0x2c0

00014eec <memcpy@plt>:
   14eec:	add	ip, pc, #0, 12
   14ef0:	add	ip, ip, #135168	; 0x21000
   14ef4:	ldr	pc, [ip, #696]!	; 0x2b8

00014ef8 <iswprint@plt>:
   14ef8:	add	ip, pc, #0, 12
   14efc:	add	ip, ip, #135168	; 0x21000
   14f00:	ldr	pc, [ip, #688]!	; 0x2b0

00014f04 <malloc@plt>:
   14f04:	add	ip, pc, #0, 12
   14f08:	add	ip, ip, #135168	; 0x21000
   14f0c:	ldr	pc, [ip, #680]!	; 0x2a8

00014f10 <strlen@plt>:
   14f10:	add	ip, pc, #0, 12
   14f14:	add	ip, ip, #135168	; 0x21000
   14f18:	ldr	pc, [ip, #672]!	; 0x2a0

00014f1c <__snprintf_chk@plt>:
   14f1c:	add	ip, pc, #0, 12
   14f20:	add	ip, ip, #135168	; 0x21000
   14f24:	ldr	pc, [ip, #664]!	; 0x298

00014f28 <ioperm@plt>:
   14f28:	add	ip, pc, #0, 12
   14f2c:	add	ip, ip, #135168	; 0x21000
   14f30:	ldr	pc, [ip, #656]!	; 0x290

00014f34 <outb@plt>:
   14f34:	add	ip, pc, #0, 12
   14f38:	add	ip, ip, #135168	; 0x21000
   14f3c:	ldr	pc, [ip, #648]!	; 0x288

00014f40 <getcwd@plt>:
   14f40:	add	ip, pc, #0, 12
   14f44:	add	ip, ip, #135168	; 0x21000
   14f48:	ldr	pc, [ip, #640]!	; 0x280

00014f4c <fclose@plt>:
   14f4c:	add	ip, pc, #0, 12
   14f50:	add	ip, ip, #135168	; 0x21000
   14f54:	ldr	pc, [ip, #632]!	; 0x278

00014f58 <write@plt>:
   14f58:	add	ip, pc, #0, 12
   14f5c:	add	ip, ip, #135168	; 0x21000
   14f60:	ldr	pc, [ip, #624]!	; 0x270

00014f64 <inb@plt>:
   14f64:	add	ip, pc, #0, 12
   14f68:	add	ip, ip, #135168	; 0x21000
   14f6c:	ldr	pc, [ip, #616]!	; 0x268

00014f70 <brlapi_write@plt>:
   14f70:	add	ip, pc, #0, 12
   14f74:	add	ip, ip, #135168	; 0x21000
   14f78:	ldr	pc, [ip, #608]!	; 0x260

00014f7c <__fdelt_chk@plt>:
   14f7c:	add	ip, pc, #0, 12
   14f80:	add	ip, ip, #135168	; 0x21000
   14f84:	ldr	pc, [ip, #600]!	; 0x258

00014f88 <mempcpy@plt>:
   14f88:	add	ip, pc, #0, 12
   14f8c:	add	ip, ip, #135168	; 0x21000
   14f90:	ldr	pc, [ip, #592]!	; 0x250

00014f94 <__xstat@plt>:
   14f94:	add	ip, pc, #0, 12
   14f98:	add	ip, ip, #135168	; 0x21000
   14f9c:	ldr	pc, [ip, #584]!	; 0x248

00014fa0 <pthread_rwlock_trywrlock@plt>:
   14fa0:	add	ip, pc, #0, 12
   14fa4:	add	ip, ip, #135168	; 0x21000
   14fa8:	ldr	pc, [ip, #576]!	; 0x240

00014fac <__realpath_chk@plt>:
   14fac:	add	ip, pc, #0, 12
   14fb0:	add	ip, ip, #135168	; 0x21000
   14fb4:	ldr	pc, [ip, #568]!	; 0x238

00014fb8 <iconv_open@plt>:
   14fb8:	add	ip, pc, #0, 12
   14fbc:	add	ip, ip, #135168	; 0x21000
   14fc0:	ldr	pc, [ip, #560]!	; 0x230

00014fc4 <pthread_rwlock_init@plt>:
   14fc4:	add	ip, pc, #0, 12
   14fc8:	add	ip, ip, #135168	; 0x21000
   14fcc:	ldr	pc, [ip, #552]!	; 0x228

00014fd0 <_exit@plt>:
   14fd0:	add	ip, pc, #0, 12
   14fd4:	add	ip, ip, #135168	; 0x21000
   14fd8:	ldr	pc, [ip, #544]!	; 0x220

00014fdc <strcmp@plt>:
   14fdc:	add	ip, pc, #0, 12
   14fe0:	add	ip, ip, #135168	; 0x21000
   14fe4:	ldr	pc, [ip, #536]!	; 0x218

00014fe8 <iconv@plt>:
   14fe8:	add	ip, pc, #0, 12
   14fec:	add	ip, ip, #135168	; 0x21000
   14ff0:	ldr	pc, [ip, #528]!	; 0x210

00014ff4 <tcgetattr@plt>:
   14ff4:	add	ip, pc, #0, 12
   14ff8:	add	ip, ip, #135168	; 0x21000
   14ffc:	ldr	pc, [ip, #520]!	; 0x208

00015000 <__errno_location@plt>:
   15000:	add	ip, pc, #0, 12
   15004:	add	ip, ip, #135168	; 0x21000
   15008:	ldr	pc, [ip, #512]!	; 0x200

0001500c <mount@plt>:
   1500c:	add	ip, pc, #0, 12
   15010:	add	ip, ip, #135168	; 0x21000
   15014:	ldr	pc, [ip, #504]!	; 0x1f8

00015018 <memchr@plt>:
   15018:	add	ip, pc, #0, 12
   1501c:	add	ip, ip, #135168	; 0x21000
   15020:	ldr	pc, [ip, #496]!	; 0x1f0

00015024 <sscanf@plt>:
   15024:	add	ip, pc, #0, 12
   15028:	add	ip, ip, #135168	; 0x21000
   1502c:	ldr	pc, [ip, #488]!	; 0x1e8

00015030 <strncpy@plt>:
   15030:	add	ip, pc, #0, 12
   15034:	add	ip, ip, #135168	; 0x21000
   15038:	ldr	pc, [ip, #480]!	; 0x1e0

0001503c <towupper@plt>:
   1503c:	add	ip, pc, #0, 12
   15040:	add	ip, ip, #135168	; 0x21000
   15044:	ldr	pc, [ip, #472]!	; 0x1d8

00015048 <fflush@plt>:
   15048:	add	ip, pc, #0, 12
   1504c:	add	ip, ip, #135168	; 0x21000
   15050:	ldr	pc, [ip, #464]!	; 0x1d0

00015054 <_Unwind_Resume@plt>:
   15054:	add	ip, pc, #0, 12
   15058:	add	ip, ip, #135168	; 0x21000
   1505c:	ldr	pc, [ip, #456]!	; 0x1c8

00015060 <memcmp@plt>:
   15060:	add	ip, pc, #0, 12
   15064:	add	ip, ip, #135168	; 0x21000
   15068:	ldr	pc, [ip, #448]!	; 0x1c0

0001506c <sigemptyset@plt>:
   1506c:	add	ip, pc, #0, 12
   15070:	add	ip, ip, #135168	; 0x21000
   15074:	ldr	pc, [ip, #440]!	; 0x1b8

00015078 <brlapi_getDisplaySize@plt>:
   15078:	add	ip, pc, #0, 12
   1507c:	add	ip, ip, #135168	; 0x21000
   15080:	ldr	pc, [ip, #432]!	; 0x1b0

00015084 <strrchr@plt>:
   15084:	add	ip, pc, #0, 12
   15088:	add	ip, ip, #135168	; 0x21000
   1508c:	ldr	pc, [ip, #424]!	; 0x1a8

00015090 <__ctype_tolower_loc@plt>:
   15090:	add	ip, pc, #0, 12
   15094:	add	ip, ip, #135168	; 0x21000
   15098:	ldr	pc, [ip, #416]!	; 0x1a0

0001509c <mktime@plt>:
   1509c:	add	ip, pc, #0, 12
   150a0:	add	ip, ip, #135168	; 0x21000
   150a4:	ldr	pc, [ip, #408]!	; 0x198

000150a8 <openlog@plt>:
   150a8:	add	ip, pc, #0, 12
   150ac:	add	ip, ip, #135168	; 0x21000
   150b0:	ldr	pc, [ip, #400]!	; 0x190

000150b4 <fputs@plt>:
   150b4:	add	ip, pc, #0, 12
   150b8:	add	ip, ip, #135168	; 0x21000
   150bc:	ldr	pc, [ip, #392]!	; 0x188

000150c0 <getenv@plt>:
   150c0:	add	ip, pc, #0, 12
   150c4:	add	ip, ip, #135168	; 0x21000
   150c8:	ldr	pc, [ip, #384]!	; 0x180

000150cc <__libc_start_main@plt>:
   150cc:	add	ip, pc, #0, 12
   150d0:	add	ip, ip, #135168	; 0x21000
   150d4:	ldr	pc, [ip, #376]!	; 0x178

000150d8 <dlsym@plt>:
   150d8:	add	ip, pc, #0, 12
   150dc:	add	ip, ip, #135168	; 0x21000
   150e0:	ldr	pc, [ip, #368]!	; 0x170

000150e4 <execvp@plt>:
   150e4:	add	ip, pc, #0, 12
   150e8:	add	ip, ip, #135168	; 0x21000
   150ec:	ldr	pc, [ip, #360]!	; 0x168

000150f0 <__gmon_start__@plt>:
   150f0:	add	ip, pc, #0, 12
   150f4:	add	ip, ip, #135168	; 0x21000
   150f8:	ldr	pc, [ip, #352]!	; 0x160

000150fc <brlapi_enterTtyMode@plt>:
   150fc:	add	ip, pc, #0, 12
   15100:	add	ip, ip, #135168	; 0x21000
   15104:	ldr	pc, [ip, #344]!	; 0x158

00015108 <sigprocmask@plt>:
   15108:	add	ip, pc, #0, 12
   1510c:	add	ip, ip, #135168	; 0x21000
   15110:	ldr	pc, [ip, #336]!	; 0x150

00015114 <strchr@plt>:
   15114:	add	ip, pc, #0, 12
   15118:	add	ip, ip, #135168	; 0x21000
   1511c:	ldr	pc, [ip, #328]!	; 0x148

00015120 <pthread_mutex_unlock@plt>:
   15120:	add	ip, pc, #0, 12
   15124:	add	ip, ip, #135168	; 0x21000
   15128:	ldr	pc, [ip, #320]!	; 0x140

0001512c <__printf_chk@plt>:
   1512c:	add	ip, pc, #0, 12
   15130:	add	ip, ip, #135168	; 0x21000
   15134:	ldr	pc, [ip, #312]!	; 0x138

Disassembly of section .text:

00015138 <main@@Base>:
   15138:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1513c:	add	fp, sp, #28
   15140:	sub	sp, sp, #40	; 0x28
   15144:	movw	r4, #25328	; 0x62f0
   15148:	movt	r4, #3
   1514c:	str	r0, [fp, #-48]	; 0xffffffd0
   15150:	sub	r2, fp, #52	; 0x34
   15154:	ldr	r3, [r4]
   15158:	str	r1, [fp, #-52]	; 0xffffffcc
   1515c:	sub	r1, fp, #48	; 0x30
   15160:	ldr	r0, [pc, #820]	; 1549c <main@@Base+0x364>
   15164:	str	r3, [fp, #-32]	; 0xffffffe0
   15168:	bl	193f0 <processOptions@@Base>
   1516c:	cmp	r0, #1
   15170:	mov	r3, r0
   15174:	moveq	r0, #0
   15178:	beq	15188 <main@@Base+0x50>
   1517c:	cmp	r3, #0
   15180:	movne	r0, r3
   15184:	beq	151a0 <main@@Base+0x68>
   15188:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1518c:	ldr	r3, [r4]
   15190:	cmp	r2, r3
   15194:	bne	15498 <main@@Base+0x360>
   15198:	sub	sp, fp, #28
   1519c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   151a0:	movw	r5, #25340	; 0x62fc
   151a4:	sub	r0, fp, #40	; 0x28
   151a8:	movt	r5, #3
   151ac:	str	r3, [fp, #-36]	; 0xffffffdc
   151b0:	add	r3, r5, #8
   151b4:	str	r3, [fp, #-40]	; 0xffffffd8
   151b8:	bl	18750 <fixInstallPaths@@Base>
   151bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   151c0:	cmp	r3, #0
   151c4:	beq	15228 <main@@Base+0xf0>
   151c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   151cc:	sub	r1, r3, #1
   151d0:	cmp	r1, #0
   151d4:	add	r0, r2, #4
   151d8:	str	r0, [fp, #-52]	; 0xffffffcc
   151dc:	ldr	r0, [r2]
   151e0:	str	r1, [fp, #-48]	; 0xffffffd0
   151e4:	str	r0, [r5, #4]
   151e8:	ble	15240 <main@@Base+0x108>
   151ec:	ldr	r1, [r2, #4]
   151f0:	sub	r3, r3, #2
   151f4:	add	r2, r2, #8
   151f8:	str	r3, [fp, #-48]	; 0xffffffd0
   151fc:	str	r2, [fp, #-52]	; 0xffffffcc
   15200:	str	r1, [r5, #80]	; 0x50
   15204:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15208:	cmp	r3, #0
   1520c:	ble	15264 <main@@Base+0x12c>
   15210:	mov	r0, #3
   15214:	movw	r1, #15476	; 0x3c74
   15218:	movt	r1, #2
   1521c:	bl	1aa88 <logMessage@@Base>
   15220:	mov	r0, #2
   15224:	b	15188 <main@@Base+0x50>
   15228:	mov	r0, #3
   1522c:	movw	r1, #15444	; 0x3c54
   15230:	movt	r1, #2
   15234:	bl	1aa88 <logMessage@@Base>
   15238:	mov	r0, #2
   1523c:	b	15188 <main@@Base+0x50>
   15240:	ldr	r3, [r5, #88]	; 0x58
   15244:	cmp	r3, #0
   15248:	beq	15258 <main@@Base+0x120>
   1524c:	ldrb	r3, [r3]
   15250:	cmp	r3, #0
   15254:	bne	153cc <main@@Base+0x294>
   15258:	mov	r3, #0
   1525c:	str	r3, [r5, #80]	; 0x50
   15260:	b	15204 <main@@Base+0xcc>
   15264:	ldr	r1, [r5, #4]
   15268:	movw	r2, #16876	; 0x41ec
   1526c:	ldr	r0, [r5, #92]	; 0x5c
   15270:	movt	r2, #2
   15274:	bl	1620c <_start@@Base+0xd6c>
   15278:	ldr	r1, [r5, #80]	; 0x50
   1527c:	movw	r6, #25340	; 0x62fc
   15280:	movt	r6, #3
   15284:	cmp	r1, #0
   15288:	streq	r1, [r6, #84]	; 0x54
   1528c:	str	r0, [r5, #12]
   15290:	beq	152a8 <main@@Base+0x170>
   15294:	movw	r2, #15500	; 0x3c8c
   15298:	ldr	r0, [r6, #88]	; 0x58
   1529c:	movt	r2, #2
   152a0:	bl	1620c <_start@@Base+0xd6c>
   152a4:	str	r0, [r6, #84]	; 0x54
   152a8:	ldr	r0, [r5]
   152ac:	movw	r6, #25340	; 0x62fc
   152b0:	movt	r6, #3
   152b4:	ldrb	r3, [r0]
   152b8:	cmp	r3, #0
   152bc:	bne	15450 <main@@Base+0x318>
   152c0:	ldr	r6, [r5, #96]	; 0x60
   152c4:	movw	r5, #25340	; 0x62fc
   152c8:	movt	r5, #3
   152cc:	cmp	r6, #0
   152d0:	beq	152e4 <main@@Base+0x1ac>
   152d4:	bl	1696c <_start@@Base+0x14cc>
   152d8:	mov	r5, r0
   152dc:	mov	r0, r5
   152e0:	b	15188 <main@@Base+0x50>
   152e4:	movw	r3, #25320	; 0x62e8
   152e8:	movt	r3, #3
   152ec:	add	r0, r5, #4
   152f0:	movw	r2, #16016	; 0x3e90
   152f4:	movw	r1, #19928	; 0x4dd8
   152f8:	movt	r2, #2
   152fc:	movt	r1, #2
   15300:	str	r2, [sp]
   15304:	ldr	r2, [r5, #8]
   15308:	ldr	r3, [r3]
   1530c:	bl	166c4 <_start@@Base+0x1224>
   15310:	subs	r7, r0, #0
   15314:	moveq	r5, #4
   15318:	beq	152dc <main@@Base+0x1a4>
   1531c:	ldr	r3, [r5, #12]
   15320:	mov	r1, r7
   15324:	ldr	r0, [r5, #4]
   15328:	ldr	ip, [r3, #4]
   1532c:	ldr	r2, [r3, #12]
   15330:	blx	ip
   15334:	subs	r8, r0, #0
   15338:	moveq	r5, #4
   1533c:	beq	153c0 <main@@Base+0x288>
   15340:	ldr	r3, [r5, #80]	; 0x50
   15344:	cmp	r3, #0
   15348:	moveq	r5, r3
   1534c:	beq	153b8 <main@@Base+0x280>
   15350:	movw	r3, #25332	; 0x62f4
   15354:	movt	r3, #3
   15358:	mov	r2, r6
   1535c:	movw	r0, #15996	; 0x3e7c
   15360:	movw	r1, #14968	; 0x3a78
   15364:	movt	r0, #2
   15368:	movt	r1, #2
   1536c:	str	r0, [sp]
   15370:	add	r0, r5, #80	; 0x50
   15374:	ldr	r3, [r3]
   15378:	bl	166c4 <_start@@Base+0x1224>
   1537c:	subs	r6, r0, #0
   15380:	moveq	r5, #4
   15384:	beq	153b8 <main@@Base+0x280>
   15388:	ldr	r3, [r5, #84]	; 0x54
   1538c:	mov	r1, r6
   15390:	ldr	r0, [r5, #80]	; 0x50
   15394:	mov	r2, r8
   15398:	ldr	ip, [r3, #8]
   1539c:	ldr	r3, [r3, #12]
   153a0:	blx	ip
   153a4:	cmp	r0, #0
   153a8:	mov	r0, r6
   153ac:	moveq	r5, #4
   153b0:	movne	r5, #0
   153b4:	bl	14f4c <fclose@plt>
   153b8:	mov	r0, r8
   153bc:	bl	21d48 <destroyTextTableData@@Base>
   153c0:	mov	r0, r7
   153c4:	bl	14f4c <fclose@plt>
   153c8:	b	152dc <main@@Base+0x1a4>
   153cc:	bl	1adf0 <locatePathExtension@@Base>
   153d0:	mov	r8, sp
   153d4:	cmp	r0, #0
   153d8:	beq	15488 <main@@Base+0x350>
   153dc:	ldr	r9, [r5, #4]
   153e0:	rsb	r9, r9, r0
   153e4:	ldr	r7, [r5, #88]	; 0x58
   153e8:	mov	r0, r7
   153ec:	bl	14f10 <strlen@plt>
   153f0:	movw	ip, #15468	; 0x3c6c
   153f4:	movt	ip, #2
   153f8:	mov	r2, #1
   153fc:	mvn	r3, #0
   15400:	add	r0, r0, #2
   15404:	add	r1, r0, r9
   15408:	add	r0, r1, #7
   1540c:	bic	r0, r0, #7
   15410:	sub	sp, sp, r0
   15414:	add	r6, sp, #16
   15418:	str	r9, [sp, #4]
   1541c:	str	ip, [sp]
   15420:	mov	r0, r6
   15424:	ldr	ip, [r5, #4]
   15428:	str	r7, [sp, #12]
   1542c:	str	ip, [sp, #8]
   15430:	bl	14f1c <__snprintf_chk@plt>
   15434:	mov	r0, r6
   15438:	bl	14c4c <__strdup@plt>
   1543c:	cmp	r0, #0
   15440:	str	r0, [r5, #80]	; 0x50
   15444:	beq	15478 <main@@Base+0x340>
   15448:	mov	sp, r8
   1544c:	b	15204 <main@@Base+0xcc>
   15450:	bl	1f818 <setCharset@@Base>
   15454:	cmp	r0, #0
   15458:	bne	152c0 <main@@Base+0x188>
   1545c:	mov	r0, #3
   15460:	ldr	r2, [r6]
   15464:	movw	r1, #15508	; 0x3c94
   15468:	movt	r1, #2
   1546c:	bl	1aa88 <logMessage@@Base>
   15470:	mov	r0, #3
   15474:	b	15188 <main@@Base+0x50>
   15478:	bl	1ab94 <logMallocError@@Base>
   1547c:	mov	r0, #4
   15480:	mov	sp, r8
   15484:	b	15188 <main@@Base+0x50>
   15488:	ldr	r0, [r5, #4]
   1548c:	bl	14f10 <strlen@plt>
   15490:	mov	r9, r0
   15494:	b	153e4 <main@@Base+0x2ac>
   15498:	bl	14d9c <__stack_chk_fail@plt>
   1549c:	andeq	r3, r2, r4, asr #13

000154a0 <_start@@Base>:
   154a0:	mov	fp, #0
   154a4:	mov	lr, #0
   154a8:	pop	{r1}		; (ldr r1, [sp], #4)
   154ac:	mov	r2, sp
   154b0:	push	{r2}		; (str r2, [sp, #-4]!)
   154b4:	push	{r0}		; (str r0, [sp, #-4]!)
   154b8:	ldr	ip, [pc, #16]	; 154d0 <_start@@Base+0x30>
   154bc:	push	{ip}		; (str ip, [sp, #-4]!)
   154c0:	ldr	r0, [pc, #12]	; 154d4 <_start@@Base+0x34>
   154c4:	ldr	r3, [pc, #12]	; 154d8 <_start@@Base+0x38>
   154c8:	bl	150cc <__libc_start_main@plt>
   154cc:	bl	14cac <abort@plt>
   154d0:	ldrdeq	r3, [r2], -r8
   154d4:	andeq	r5, r1, r8, lsr r1
   154d8:	andeq	r3, r2, r4, ror r5
   154dc:	ldr	r3, [pc, #20]	; 154f8 <_start@@Base+0x58>
   154e0:	ldr	r2, [pc, #20]	; 154fc <_start@@Base+0x5c>
   154e4:	add	r3, pc, r3
   154e8:	ldr	r2, [r3, r2]
   154ec:	cmp	r2, #0
   154f0:	bxeq	lr
   154f4:	b	150f0 <__gmon_start__@plt>
   154f8:	andeq	r0, r2, r4, lsl fp
   154fc:	andeq	r0, r0, ip, asr #5
   15500:	push	{r3, lr}
   15504:	movw	r0, #25320	; 0x62e8
   15508:	ldr	r3, [pc, #36]	; 15534 <_start@@Base+0x94>
   1550c:	movt	r0, #3
   15510:	rsb	r3, r0, r3
   15514:	cmp	r3, #6
   15518:	popls	{r3, pc}
   1551c:	movw	r3, #0
   15520:	movt	r3, #0
   15524:	cmp	r3, #0
   15528:	popeq	{r3, pc}
   1552c:	blx	r3
   15530:	pop	{r3, pc}
   15534:	andeq	r6, r3, fp, ror #5
   15538:	push	{r3, lr}
   1553c:	movw	r0, #25320	; 0x62e8
   15540:	movw	r3, #25320	; 0x62e8
   15544:	movt	r0, #3
   15548:	movt	r3, #3
   1554c:	rsb	r3, r0, r3
   15550:	asr	r3, r3, #2
   15554:	add	r3, r3, r3, lsr #31
   15558:	asrs	r1, r3, #1
   1555c:	popeq	{r3, pc}
   15560:	movw	r2, #0
   15564:	movt	r2, #0
   15568:	cmp	r2, #0
   1556c:	popeq	{r3, pc}
   15570:	blx	r2
   15574:	pop	{r3, pc}
   15578:	push	{r4, lr}
   1557c:	movw	r4, #25336	; 0x62f8
   15580:	movt	r4, #3
   15584:	ldrb	r3, [r4]
   15588:	cmp	r3, #0
   1558c:	popne	{r4, pc}
   15590:	bl	15500 <_start@@Base+0x60>
   15594:	mov	r3, #1
   15598:	strb	r3, [r4]
   1559c:	pop	{r4, pc}
   155a0:	movw	r0, #23940	; 0x5d84
   155a4:	movt	r0, #3
   155a8:	push	{r3, lr}
   155ac:	ldr	r3, [r0]
   155b0:	cmp	r3, #0
   155b4:	beq	155cc <_start@@Base+0x12c>
   155b8:	movw	r3, #0
   155bc:	movt	r3, #0
   155c0:	cmp	r3, #0
   155c4:	beq	155cc <_start@@Base+0x12c>
   155c8:	blx	r3
   155cc:	pop	{r3, lr}
   155d0:	b	15538 <_start@@Base+0x98>
   155d4:	push	{r3, lr}
   155d8:	mov	r0, #3
   155dc:	movw	r1, #14260	; 0x37b4
   155e0:	movt	r1, #2
   155e4:	bl	1aa88 <logMessage@@Base>
   155e8:	mov	r0, #0
   155ec:	pop	{r3, pc}
   155f0:	push	{r3, lr}
   155f4:	mov	r0, #3
   155f8:	movw	r1, #14296	; 0x37d8
   155fc:	movt	r1, #2
   15600:	bl	1aa88 <logMessage@@Base>
   15604:	mov	r0, #0
   15608:	pop	{r3, pc}
   1560c:	push	{r4, r5, r6, lr}
   15610:	mov	r6, r0
   15614:	mov	r5, r1
   15618:	mov	r4, #1
   1561c:	b	1562c <_start@@Base+0x18c>
   15620:	add	r4, r4, #1
   15624:	cmp	r4, #9
   15628:	beq	15664 <_start@@Base+0x1c4>
   1562c:	sub	r3, r4, #1
   15630:	asr	r3, r5, r3
   15634:	tst	r3, #1
   15638:	beq	15620 <_start@@Base+0x180>
   1563c:	movw	r2, #14336	; 0x3800
   15640:	mov	r0, r6
   15644:	movt	r2, #2
   15648:	mov	r1, #1
   1564c:	mov	r3, r4
   15650:	bl	14bc8 <__fprintf_chk@plt>
   15654:	cmn	r0, #1
   15658:	bne	15620 <_start@@Base+0x180>
   1565c:	mov	r0, #0
   15660:	pop	{r4, r5, r6, pc}
   15664:	mov	r0, #1
   15668:	pop	{r4, r5, r6, pc}
   1566c:	cmp	r1, #0
   15670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15674:	mov	r4, r0
   15678:	sub	sp, sp, #68	; 0x44
   1567c:	beq	15708 <_start@@Base+0x268>
   15680:	ldr	r3, [r0, #8]
   15684:	cmp	r3, #0
   15688:	beq	15728 <_start@@Base+0x288>
   1568c:	mov	r9, #255	; 0xff
   15690:	mvn	r3, #0
   15694:	mov	r8, r9
   15698:	mov	r7, #0
   1569c:	rsb	r8, r3, r8
   156a0:	ldrb	r5, [r4, #12]
   156a4:	movw	r6, #257	; 0x101
   156a8:	uxtb	r8, r8
   156ac:	b	156b8 <_start@@Base+0x218>
   156b0:	subs	r6, r6, #1
   156b4:	beq	156fc <_start@@Base+0x25c>
   156b8:	cmp	r7, r5
   156bc:	moveq	r5, r8
   156c0:	add	r5, r5, r9
   156c4:	uxtb	r5, r5
   156c8:	mov	r0, r5
   156cc:	bl	1f988 <convertCharToWchar@@Base>
   156d0:	cmn	r0, #1
   156d4:	mov	r1, r0
   156d8:	beq	156b0 <_start@@Base+0x210>
   156dc:	ldr	r0, [r4]
   156e0:	bl	21ac8 <getUnicodeCellEntry@@Base>
   156e4:	cmp	r0, #0
   156e8:	beq	156b0 <_start@@Base+0x210>
   156ec:	mov	r0, #1
   156f0:	strb	r5, [r4, #12]
   156f4:	add	sp, sp, #68	; 0x44
   156f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156fc:	mov	r0, #0
   15700:	add	sp, sp, #68	; 0x44
   15704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15708:	ldr	r3, [r0, #8]
   1570c:	cmp	r3, #0
   15710:	beq	1594c <_start@@Base+0x4ac>
   15714:	mov	r9, #1
   15718:	mov	r8, r1
   1571c:	mov	r3, r9
   15720:	mov	r7, #255	; 0xff
   15724:	b	1569c <_start@@Base+0x1fc>
   15728:	mvn	r7, #0
   1572c:	str	r3, [sp, #48]	; 0x30
   15730:	mov	ip, #256	; 0x100
   15734:	mov	r8, r3
   15738:	mov	r2, #255	; 0xff
   1573c:	mov	r3, #127	; 0x7f
   15740:	str	ip, [sp, #16]
   15744:	str	r2, [sp, #24]
   15748:	str	r3, [sp, #60]	; 0x3c
   1574c:	ldr	r3, [r4, #12]
   15750:	lsl	r2, r7, #2
   15754:	ldr	r0, [r4]
   15758:	ubfx	ip, r3, #24, #7
   1575c:	str	r2, [sp, #40]	; 0x28
   15760:	str	ip, [sp, #12]
   15764:	mov	r2, #129	; 0x81
   15768:	ubfx	r6, r3, #16, #8
   1576c:	ubfx	r9, r3, #8, #8
   15770:	str	r2, [sp, #20]
   15774:	uxtb	r3, r3
   15778:	str	r3, [sp, #8]
   1577c:	bl	218b8 <getTextTableHeader@@Base>
   15780:	ldr	r3, [sp, #8]
   15784:	str	r4, [sp, #28]
   15788:	str	r0, [sp, #44]	; 0x2c
   1578c:	ldr	ip, [sp, #12]
   15790:	ldr	r2, [sp, #44]	; 0x2c
   15794:	ldr	r1, [r2, ip, lsl #2]
   15798:	cmp	r1, #0
   1579c:	bne	157dc <_start@@Base+0x33c>
   157a0:	ldr	ip, [sp, #12]
   157a4:	ldr	r2, [sp, #48]	; 0x30
   157a8:	cmp	ip, r2
   157ac:	addne	ip, ip, r7
   157b0:	strne	ip, [sp, #12]
   157b4:	ldreq	r3, [sp, #60]	; 0x3c
   157b8:	ldr	ip, [sp, #20]
   157bc:	streq	r3, [sp, #12]
   157c0:	subs	ip, ip, #1
   157c4:	str	ip, [sp, #20]
   157c8:	beq	156fc <_start@@Base+0x25c>
   157cc:	ldr	r9, [sp, #24]
   157d0:	ldr	r3, [sp, #16]
   157d4:	mov	r6, r9
   157d8:	b	1578c <_start@@Base+0x2ec>
   157dc:	ldr	ip, [sp, #28]
   157e0:	ldr	r0, [ip]
   157e4:	str	r3, [sp, #8]
   157e8:	bl	218b0 <getTextTableItem@@Base>
   157ec:	ldr	r3, [sp, #8]
   157f0:	add	r5, r0, r6, lsl #2
   157f4:	ldr	r1, [r5]
   157f8:	cmp	r1, #0
   157fc:	bne	15828 <_start@@Base+0x388>
   15800:	ldr	r3, [sp, #40]	; 0x28
   15804:	cmp	r6, r8
   15808:	add	r5, r5, r3
   1580c:	beq	157a0 <_start@@Base+0x300>
   15810:	ldr	r1, [r5]
   15814:	add	r6, r6, r7
   15818:	ldr	r3, [sp, #16]
   1581c:	cmp	r1, #0
   15820:	ldr	r9, [sp, #24]
   15824:	beq	15800 <_start@@Base+0x360>
   15828:	ldr	r2, [sp, #28]
   1582c:	ldr	r0, [r2]
   15830:	str	r3, [sp, #8]
   15834:	bl	218b0 <getTextTableItem@@Base>
   15838:	ldr	r3, [sp, #8]
   1583c:	str	r6, [sp, #52]	; 0x34
   15840:	str	r5, [sp, #56]	; 0x38
   15844:	mov	r6, r3
   15848:	ldr	r5, [sp, #40]	; 0x28
   1584c:	strd	sl, [sp]
   15850:	add	r4, r0, r9, lsl #2
   15854:	b	1586c <_start@@Base+0x3cc>
   15858:	cmp	r9, r8
   1585c:	add	r4, r4, r5
   15860:	beq	1593c <_start@@Base+0x49c>
   15864:	ldr	r6, [sp, #16]
   15868:	add	r9, r9, r7
   1586c:	ldr	r1, [r4]
   15870:	cmp	r1, #0
   15874:	beq	15858 <_start@@Base+0x3b8>
   15878:	ldr	r3, [sp, #28]
   1587c:	ldr	r0, [r3]
   15880:	bl	218b0 <getTextTableItem@@Base>
   15884:	cmp	r6, r8
   15888:	beq	15858 <_start@@Base+0x3b8>
   1588c:	add	r1, r6, r7
   15890:	mov	sl, #0
   15894:	and	ip, r1, #7
   15898:	str	sl, [sp, #36]	; 0x24
   1589c:	add	r3, r0, r1, lsr #3
   158a0:	mov	fp, #0
   158a4:	mov	sl, #1
   158a8:	ldrb	r2, [r3, #256]	; 0x100
   158ac:	lsr	ip, r2, ip
   158b0:	str	ip, [sp, #32]
   158b4:	ldrd	r2, [sp, #32]
   158b8:	and	r2, r2, sl
   158bc:	and	r3, r3, fp
   158c0:	orrs	fp, r2, r3
   158c4:	bne	15910 <_start@@Base+0x470>
   158c8:	ldrd	sl, [sp]
   158cc:	b	158f4 <_start@@Base+0x454>
   158d0:	ldrb	r2, [r3, #256]	; 0x100
   158d4:	mov	fp, #0
   158d8:	mov	r3, #0
   158dc:	and	r3, r3, fp
   158e0:	lsr	sl, r2, ip
   158e4:	mov	r2, #1
   158e8:	and	r2, r2, sl
   158ec:	orrs	ip, r2, r3
   158f0:	bne	15910 <_start@@Base+0x470>
   158f4:	cmp	r8, r1
   158f8:	add	r1, r1, r7
   158fc:	and	ip, r1, #7
   15900:	add	r3, r0, r1, lsr #3
   15904:	bne	158d0 <_start@@Base+0x430>
   15908:	strd	sl, [sp]
   1590c:	b	15858 <_start@@Base+0x3b8>
   15910:	ldr	r6, [sp, #52]	; 0x34
   15914:	mov	r0, #1
   15918:	ldr	r2, [sp, #12]
   1591c:	ldr	r4, [sp, #28]
   15920:	lsl	r3, r6, #16
   15924:	orr	r3, r3, r2, lsl #24
   15928:	orr	r1, r3, r1
   1592c:	orr	r9, r1, r9, lsl #8
   15930:	str	r9, [r4, #12]
   15934:	add	sp, sp, #68	; 0x44
   15938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1593c:	ldr	r6, [sp, #52]	; 0x34
   15940:	ldr	r5, [sp, #56]	; 0x38
   15944:	ldrd	sl, [sp]
   15948:	b	15800 <_start@@Base+0x360>
   1594c:	str	r3, [sp, #24]
   15950:	mvn	r2, #0
   15954:	str	r3, [sp, #60]	; 0x3c
   15958:	mov	r7, #1
   1595c:	mov	r3, #127	; 0x7f
   15960:	str	r2, [sp, #16]
   15964:	str	r3, [sp, #48]	; 0x30
   15968:	mov	r8, #255	; 0xff
   1596c:	b	1574c <_start@@Base+0x2ac>
   15970:	mov	r3, r0
   15974:	mov	r0, r1
   15978:	mov	r1, r3
   1597c:	b	23108 <processLibLouisStream@@Base>
   15980:	push	{r4, r5, r6, r7, r8, lr}
   15984:	movw	r4, #25328	; 0x62f0
   15988:	movt	r4, #3
   1598c:	sub	sp, sp, #32
   15990:	mov	r8, r0
   15994:	mov	r0, r1
   15998:	ldr	r3, [r4]
   1599c:	mov	r5, r1
   159a0:	orr	r7, r2, #10240	; 0x2800
   159a4:	str	r3, [sp, #28]
   159a8:	bl	14ef8 <iswprint@plt>
   159ac:	cmp	r0, #0
   159b0:	beq	159c4 <_start@@Base+0x524>
   159b4:	mov	r0, r5
   159b8:	bl	14a54 <iswspace@plt>
   159bc:	subs	r6, r0, #0
   159c0:	beq	15a04 <_start@@Base+0x564>
   159c4:	str	r7, [sp]
   159c8:	mov	r0, r8
   159cc:	mov	r3, r5
   159d0:	movw	r2, #14356	; 0x3814
   159d4:	mov	r1, #1
   159d8:	movt	r2, #2
   159dc:	bl	14bc8 <__fprintf_chk@plt>
   159e0:	adds	r6, r0, #1
   159e4:	movne	r6, #1
   159e8:	ldr	r2, [sp, #28]
   159ec:	mov	r0, r6
   159f0:	ldr	r3, [r4]
   159f4:	cmp	r2, r3
   159f8:	bne	15a58 <_start@@Base+0x5b8>
   159fc:	add	sp, sp, #32
   15a00:	pop	{r4, r5, r6, r7, r8, pc}
   15a04:	mov	r0, r5
   15a08:	add	r1, sp, #12
   15a0c:	bl	1f28c <convertWcharToUtf8@@Base>
   15a10:	cmp	r0, #0
   15a14:	beq	159e8 <_start@@Base+0x548>
   15a18:	mov	r0, r7
   15a1c:	add	r1, sp, #20
   15a20:	bl	1f28c <convertWcharToUtf8@@Base>
   15a24:	cmp	r0, #0
   15a28:	beq	159e8 <_start@@Base+0x548>
   15a2c:	add	r3, sp, #20
   15a30:	mov	r0, r8
   15a34:	str	r3, [sp]
   15a38:	movw	r2, #14340	; 0x3804
   15a3c:	add	r3, sp, #12
   15a40:	mov	r1, #1
   15a44:	movt	r2, #2
   15a48:	bl	14bc8 <__fprintf_chk@plt>
   15a4c:	adds	r6, r0, #1
   15a50:	movne	r6, #1
   15a54:	b	159e8 <_start@@Base+0x548>
   15a58:	bl	14d9c <__stack_chk_fail@plt>
   15a5c:	push	{r4, r5, r6, lr}
   15a60:	movw	r4, #25328	; 0x62f0
   15a64:	movt	r4, #3
   15a68:	sub	sp, sp, #24
   15a6c:	add	r5, sp, #12
   15a70:	mov	r6, r0
   15a74:	ldr	r3, [r4]
   15a78:	mov	r0, r1
   15a7c:	mov	r1, r5
   15a80:	str	r3, [sp, #20]
   15a84:	bl	1f28c <convertWcharToUtf8@@Base>
   15a88:	str	r5, [sp]
   15a8c:	movw	r2, #19744	; 0x4d20
   15a90:	mov	r1, #1
   15a94:	movt	r2, #2
   15a98:	mov	r3, r0
   15a9c:	mov	r0, r6
   15aa0:	bl	14bc8 <__fprintf_chk@plt>
   15aa4:	ldr	r2, [sp, #20]
   15aa8:	ldr	r3, [r4]
   15aac:	adds	r0, r0, #1
   15ab0:	movne	r0, #1
   15ab4:	cmp	r2, r3
   15ab8:	bne	15ac4 <_start@@Base+0x624>
   15abc:	add	sp, sp, #24
   15ac0:	pop	{r4, r5, r6, pc}
   15ac4:	bl	14d9c <__stack_chk_fail@plt>
   15ac8:	mov	r3, r0
   15acc:	mov	r0, r1
   15ad0:	mov	r1, r3
   15ad4:	b	22b54 <processGnomeBrailleStream@@Base>
   15ad8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15adc:	movw	r9, #13848	; 0x3618
   15ae0:	movt	r9, #2
   15ae4:	mov	r8, r0
   15ae8:	mov	r7, r1
   15aec:	mov	r6, r2
   15af0:	mov	sl, r3
   15af4:	mov	r4, #0
   15af8:	movw	r5, #65533	; 0xfffd
   15afc:	uxtb	r0, r4
   15b00:	bl	1f988 <convertCharToWchar@@Base>
   15b04:	cmn	r0, #1
   15b08:	movne	r1, r0
   15b0c:	moveq	r1, r5
   15b10:	mov	r0, r6
   15b14:	bl	21ac8 <getUnicodeCellEntry@@Base>
   15b18:	cmp	r0, #0
   15b1c:	ldrbne	r2, [r0]
   15b20:	moveq	r2, r0
   15b24:	cmp	sl, #0
   15b28:	beq	15b78 <_start@@Base+0x6d8>
   15b2c:	mov	r0, #0
   15b30:	mov	ip, r0
   15b34:	ldrb	lr, [r9, ip]
   15b38:	tst	r2, lr
   15b3c:	ldrbne	r3, [sl, ip]
   15b40:	add	ip, ip, #1
   15b44:	orrne	r0, r0, r3
   15b48:	uxtbne	r0, r0
   15b4c:	cmp	ip, #8
   15b50:	bne	15b34 <_start@@Base+0x694>
   15b54:	mov	r1, r7
   15b58:	bl	14ec8 <fputc@plt>
   15b5c:	cmn	r0, #1
   15b60:	beq	15b8c <_start@@Base+0x6ec>
   15b64:	add	r4, r4, #1
   15b68:	cmp	r4, #256	; 0x100
   15b6c:	bne	15afc <_start@@Base+0x65c>
   15b70:	mov	r0, #1
   15b74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b78:	mov	r0, r2
   15b7c:	mov	r1, r7
   15b80:	bl	14ec8 <fputc@plt>
   15b84:	cmn	r0, #1
   15b88:	bne	15b64 <_start@@Base+0x6c4>
   15b8c:	bl	15000 <__errno_location@plt>
   15b90:	ldr	r0, [r0]
   15b94:	bl	14b44 <strerror@plt>
   15b98:	mov	r2, r8
   15b9c:	movw	r1, #14388	; 0x3834
   15ba0:	movt	r1, #2
   15ba4:	mov	r3, r0
   15ba8:	mov	r0, #3
   15bac:	bl	1aa88 <logMessage@@Base>
   15bb0:	mov	r0, #0
   15bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15bb8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15bbc:	mov	r8, r0
   15bc0:	mov	r7, r1
   15bc4:	mov	r9, r2
   15bc8:	bl	21ce4 <newTextTableData@@Base>
   15bcc:	subs	r6, r0, #0
   15bd0:	beq	15c48 <_start@@Base+0x7a8>
   15bd4:	movw	r5, #13848	; 0x3618
   15bd8:	movt	r5, #2
   15bdc:	mov	r4, #0
   15be0:	mov	r0, r7
   15be4:	bl	14b14 <fgetc@plt>
   15be8:	cmn	r0, #1
   15bec:	beq	15c50 <_start@@Base+0x7b0>
   15bf0:	cmp	r9, #0
   15bf4:	beq	15c24 <_start@@Base+0x784>
   15bf8:	mov	lr, #0
   15bfc:	uxtb	r0, r0
   15c00:	mov	r3, lr
   15c04:	ldrb	ip, [r9, r3]
   15c08:	tst	r0, ip
   15c0c:	ldrbne	r2, [r3, r5]
   15c10:	add	r3, r3, #1
   15c14:	orrne	lr, lr, r2
   15c18:	cmp	r3, #8
   15c1c:	bne	15c04 <_start@@Base+0x764>
   15c20:	mov	r0, lr
   15c24:	uxtb	r2, r0
   15c28:	uxtb	r1, r4
   15c2c:	mov	r0, r6
   15c30:	bl	21ca4 <setTextTableByte@@Base>
   15c34:	cmp	r0, #0
   15c38:	beq	15c84 <_start@@Base+0x7e4>
   15c3c:	add	r4, r4, #1
   15c40:	cmp	r4, #256	; 0x100
   15c44:	bne	15be0 <_start@@Base+0x740>
   15c48:	mov	r0, r6
   15c4c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15c50:	mov	r0, r7
   15c54:	bl	14e8c <ferror@plt>
   15c58:	cmp	r0, #0
   15c5c:	beq	15c94 <_start@@Base+0x7f4>
   15c60:	bl	15000 <__errno_location@plt>
   15c64:	ldr	r0, [r0]
   15c68:	bl	14b44 <strerror@plt>
   15c6c:	movw	r1, #14412	; 0x384c
   15c70:	mov	r2, r8
   15c74:	movt	r1, #2
   15c78:	mov	r3, r0
   15c7c:	mov	r0, #3
   15c80:	bl	1aa88 <logMessage@@Base>
   15c84:	mov	r0, r6
   15c88:	bl	21d48 <destroyTextTableData@@Base>
   15c8c:	mov	r0, #0
   15c90:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15c94:	mov	r2, r8
   15c98:	movw	r1, #14432	; 0x3860
   15c9c:	mov	r0, #3
   15ca0:	movt	r1, #2
   15ca4:	bl	1aa88 <logMessage@@Base>
   15ca8:	b	15c84 <_start@@Base+0x7e4>
   15cac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cb0:	add	fp, sp, #32
   15cb4:	sub	sp, sp, #100	; 0x64
   15cb8:	movw	r7, #25328	; 0x62f0
   15cbc:	movt	r7, #3
   15cc0:	ldr	r5, [fp, #4]
   15cc4:	movw	lr, #14460	; 0x387c
   15cc8:	ldr	r4, [r7]
   15ccc:	movt	lr, #2
   15cd0:	cmp	r5, #0
   15cd4:	movw	ip, #14452	; 0x3874
   15cd8:	movt	ip, #2
   15cdc:	mov	sl, r3
   15ce0:	mov	r8, r2
   15ce4:	moveq	r3, lr
   15ce8:	movne	r3, ip
   15cec:	mov	r9, r1
   15cf0:	movw	r2, #14468	; 0x3884
   15cf4:	mov	r1, #1
   15cf8:	movt	r2, #2
   15cfc:	str	r4, [fp, #-40]	; 0xffffffd8
   15d00:	mov	r6, r0
   15d04:	bl	14bc8 <__fprintf_chk@plt>
   15d08:	cmn	r0, #1
   15d0c:	beq	15ecc <_start@@Base+0xa2c>
   15d10:	cmp	r9, #255	; 0xff
   15d14:	movwls	r2, #14472	; 0x3888
   15d18:	movls	r0, r6
   15d1c:	movtls	r2, #2
   15d20:	bls	15d40 <_start@@Base+0x8a0>
   15d24:	cmp	r9, #65536	; 0x10000
   15d28:	movwcc	r2, #14484	; 0x3894
   15d2c:	movwcs	r2, #14492	; 0x389c
   15d30:	movtcc	r2, #2
   15d34:	movtcs	r2, #2
   15d38:	movcc	r0, r6
   15d3c:	movcs	r0, r6
   15d40:	mov	r1, #1
   15d44:	mov	r3, r9
   15d48:	bl	14bc8 <__fprintf_chk@plt>
   15d4c:	cmn	r0, #1
   15d50:	beq	15ecc <_start@@Base+0xa2c>
   15d54:	movw	r2, #14480	; 0x3890
   15d58:	mov	r0, r6
   15d5c:	movt	r2, #2
   15d60:	mov	r1, #1
   15d64:	bl	14bc8 <__fprintf_chk@plt>
   15d68:	cmn	r0, #1
   15d6c:	beq	15ecc <_start@@Base+0xa2c>
   15d70:	movw	r2, #14500	; 0x38a4
   15d74:	mov	r0, r6
   15d78:	movt	r2, #2
   15d7c:	mov	r1, #1
   15d80:	bl	14bc8 <__fprintf_chk@plt>
   15d84:	cmn	r0, #1
   15d88:	beq	15ecc <_start@@Base+0xa2c>
   15d8c:	mov	r5, #8
   15d90:	mov	r4, #1
   15d94:	tst	r4, r8
   15d98:	moveq	r3, #32
   15d9c:	beq	15dbc <_start@@Base+0x91c>
   15da0:	rbit	ip, r4
   15da4:	cmp	r4, #0
   15da8:	clz	ip, ip
   15dac:	mvneq	ip, #0
   15db0:	adds	r3, ip, #1
   15db4:	addne	ip, ip, #49	; 0x31
   15db8:	uxtbne	r3, ip
   15dbc:	movw	r2, #15004	; 0x3a9c
   15dc0:	mov	r0, r6
   15dc4:	movt	r2, #2
   15dc8:	mov	r1, #1
   15dcc:	bl	14bc8 <__fprintf_chk@plt>
   15dd0:	cmn	r0, #1
   15dd4:	beq	15ecc <_start@@Base+0xa2c>
   15dd8:	lsl	r4, r4, #1
   15ddc:	subs	r5, r5, #1
   15de0:	uxtb	r4, r4
   15de4:	bne	15d94 <_start@@Base+0x8f4>
   15de8:	movw	r2, #14868	; 0x3a14
   15dec:	mov	r0, r6
   15df0:	movt	r2, #2
   15df4:	mov	r1, #1
   15df8:	bl	14bc8 <__fprintf_chk@plt>
   15dfc:	cmn	r0, #1
   15e00:	beq	15ecc <_start@@Base+0xa2c>
   15e04:	movw	r2, #14524	; 0x38bc
   15e08:	mov	r0, r6
   15e0c:	movt	r2, #2
   15e10:	mov	r1, #1
   15e14:	bl	14bc8 <__fprintf_chk@plt>
   15e18:	cmn	r0, #1
   15e1c:	beq	15ecc <_start@@Base+0xa2c>
   15e20:	movw	r3, #25340	; 0x62fc
   15e24:	movt	r3, #3
   15e28:	ldr	r3, [r3]
   15e2c:	ldrb	r3, [r3]
   15e30:	cmp	r3, #0
   15e34:	beq	15e9c <_start@@Base+0x9fc>
   15e38:	cmp	sl, #0
   15e3c:	mov	r4, sp
   15e40:	beq	15f98 <_start@@Base+0xaf8>
   15e44:	mov	r2, #2
   15e48:	movw	r3, #14504	; 0x38a8
   15e4c:	str	r2, [sp, #4]
   15e50:	movt	r3, #2
   15e54:	str	r3, [sp]
   15e58:	sub	r5, fp, #112	; 0x70
   15e5c:	ldrb	ip, [sl]
   15e60:	mov	r1, #3
   15e64:	mov	r0, r5
   15e68:	mov	r3, r1
   15e6c:	mov	r2, #1
   15e70:	str	ip, [sp, #8]
   15e74:	bl	14f1c <__snprintf_chk@plt>
   15e78:	movw	r2, #17552	; 0x4490
   15e7c:	mov	r3, r5
   15e80:	mov	r0, r6
   15e84:	movt	r2, #2
   15e88:	mov	r1, #1
   15e8c:	bl	14bc8 <__fprintf_chk@plt>
   15e90:	cmn	r0, #1
   15e94:	beq	15f8c <_start@@Base+0xaec>
   15e98:	mov	sp, r4
   15e9c:	movw	r2, #15092	; 0x3af4
   15ea0:	mov	r0, r6
   15ea4:	movt	r2, #2
   15ea8:	mov	r1, #1
   15eac:	bl	14bc8 <__fprintf_chk@plt>
   15eb0:	cmn	r0, #1
   15eb4:	beq	15ecc <_start@@Base+0xa2c>
   15eb8:	orr	r1, r8, #10240	; 0x2800
   15ebc:	mov	r0, r6
   15ec0:	bl	15a5c <_start@@Base+0x5bc>
   15ec4:	cmp	r0, #0
   15ec8:	bne	15ee8 <_start@@Base+0xa48>
   15ecc:	mov	r0, #0
   15ed0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15ed4:	ldr	r3, [r7]
   15ed8:	cmp	r2, r3
   15edc:	bne	15ff8 <_start@@Base+0xb58>
   15ee0:	sub	sp, fp, #32
   15ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ee8:	movw	r2, #15092	; 0x3af4
   15eec:	mov	r0, r6
   15ef0:	movt	r2, #2
   15ef4:	mov	r1, #1
   15ef8:	bl	14bc8 <__fprintf_chk@plt>
   15efc:	cmn	r0, #1
   15f00:	beq	15ecc <_start@@Base+0xa2c>
   15f04:	mov	r0, r9
   15f08:	bl	14ef8 <iswprint@plt>
   15f0c:	cmp	r0, #0
   15f10:	moveq	r1, #32
   15f14:	beq	15f2c <_start@@Base+0xa8c>
   15f18:	mov	r0, r9
   15f1c:	bl	14a54 <iswspace@plt>
   15f20:	cmp	r0, #0
   15f24:	moveq	r1, r9
   15f28:	movne	r1, #32
   15f2c:	mov	r0, r6
   15f30:	bl	15a5c <_start@@Base+0x5bc>
   15f34:	cmp	r0, #0
   15f38:	beq	15ecc <_start@@Base+0xa2c>
   15f3c:	mov	r4, #0
   15f40:	sub	r3, fp, #108	; 0x6c
   15f44:	str	r4, [fp, #-108]	; 0xffffff94
   15f48:	mov	r0, r9
   15f4c:	str	r3, [sp]
   15f50:	sub	r2, fp, #104	; 0x68
   15f54:	mov	r3, #64	; 0x40
   15f58:	mov	r1, #2
   15f5c:	bl	14dcc <u_charName_50@plt>
   15f60:	ldr	r3, [fp, #-108]	; 0xffffff94
   15f64:	cmp	r3, r4
   15f68:	ble	15fd4 <_start@@Base+0xb34>
   15f6c:	mov	r0, r6
   15f70:	movw	r2, #15200	; 0x3b60
   15f74:	mov	r1, #1
   15f78:	movt	r2, #2
   15f7c:	bl	14bc8 <__fprintf_chk@plt>
   15f80:	adds	r0, r0, #1
   15f84:	movne	r0, #1
   15f88:	b	15ed0 <_start@@Base+0xa30>
   15f8c:	mov	r0, #0
   15f90:	mov	sp, r4
   15f94:	b	15ed0 <_start@@Base+0xa30>
   15f98:	sub	r5, fp, #112	; 0x70
   15f9c:	mov	r1, #3
   15fa0:	mov	ip, #2
   15fa4:	movw	r2, #14512	; 0x38b0
   15fa8:	movw	r3, #14384	; 0x3830
   15fac:	movt	r2, #2
   15fb0:	movt	r3, #2
   15fb4:	str	r2, [sp]
   15fb8:	str	r3, [sp, #8]
   15fbc:	mov	r0, r5
   15fc0:	mov	r3, r1
   15fc4:	mov	r2, #1
   15fc8:	str	ip, [sp, #4]
   15fcc:	bl	14f1c <__snprintf_chk@plt>
   15fd0:	b	15e78 <_start@@Base+0x9d8>
   15fd4:	sub	r3, fp, #104	; 0x68
   15fd8:	movw	r2, #14516	; 0x38b4
   15fdc:	mov	r0, r6
   15fe0:	movt	r2, #2
   15fe4:	mov	r1, #1
   15fe8:	bl	14bc8 <__fprintf_chk@plt>
   15fec:	cmn	r0, #1
   15ff0:	bne	15f6c <_start@@Base+0xacc>
   15ff4:	b	15ecc <_start@@Base+0xa2c>
   15ff8:	bl	14d9c <__stack_chk_fail@plt>
   15ffc:	bl	15054 <_Unwind_Resume@plt>
   16000:	mov	r3, r0
   16004:	mov	r0, r1
   16008:	mov	r1, r3
   1600c:	b	22568 <processTextTableStream@@Base>
   16010:	push	{r4, r5, r6, lr}
   16014:	mov	r6, r1
   16018:	ldr	ip, [sp, #16]
   1601c:	mov	r5, r2
   16020:	mov	r4, r0
   16024:	cmp	ip, #0
   16028:	bne	16034 <_start@@Base+0xb94>
   1602c:	mov	r0, #1
   16030:	pop	{r4, r5, r6, pc}
   16034:	movw	r2, #14528	; 0x38c0
   16038:	mov	r1, #1
   1603c:	movt	r2, #2
   16040:	bl	14bc8 <__fprintf_chk@plt>
   16044:	cmn	r0, #1
   16048:	beq	1611c <_start@@Base+0xc7c>
   1604c:	cmp	r5, #0
   16050:	beq	16124 <_start@@Base+0xc84>
   16054:	movw	r2, #14556	; 0x38dc
   16058:	mov	r0, r4
   1605c:	movt	r2, #2
   16060:	mov	r1, #1
   16064:	bl	14bc8 <__fprintf_chk@plt>
   16068:	cmn	r0, #1
   1606c:	beq	1611c <_start@@Base+0xc7c>
   16070:	mov	r1, r5
   16074:	mov	r0, r4
   16078:	bl	1560c <_start@@Base+0x16c>
   1607c:	cmp	r0, #0
   16080:	beq	1611c <_start@@Base+0xc7c>
   16084:	movw	r2, #14548	; 0x38d4
   16088:	mov	r0, r4
   1608c:	movt	r2, #2
   16090:	mov	r1, #1
   16094:	bl	14bc8 <__fprintf_chk@plt>
   16098:	cmn	r0, #1
   1609c:	beq	1611c <_start@@Base+0xc7c>
   160a0:	cmp	r6, #13
   160a4:	beq	16188 <_start@@Base+0xce8>
   160a8:	bls	160f8 <_start@@Base+0xc58>
   160ac:	cmp	r6, #34	; 0x22
   160b0:	beq	16144 <_start@@Base+0xca4>
   160b4:	cmp	r6, #92	; 0x5c
   160b8:	bne	16164 <_start@@Base+0xcc4>
   160bc:	movw	r2, #14580	; 0x38f4
   160c0:	mov	r0, r4
   160c4:	movt	r2, #2
   160c8:	mov	r1, #1
   160cc:	bl	14bc8 <__fprintf_chk@plt>
   160d0:	cmn	r0, #1
   160d4:	beq	1611c <_start@@Base+0xc7c>
   160d8:	mov	r0, r4
   160dc:	mov	r1, #1
   160e0:	movw	r2, #14568	; 0x38e8
   160e4:	movt	r2, #2
   160e8:	bl	14bc8 <__fprintf_chk@plt>
   160ec:	adds	r0, r0, #1
   160f0:	movne	r0, #1
   160f4:	pop	{r4, r5, r6, pc}
   160f8:	cmp	r6, #10
   160fc:	bne	16164 <_start@@Base+0xcc4>
   16100:	movw	r2, #14564	; 0x38e4
   16104:	mov	r0, r4
   16108:	movt	r2, #2
   1610c:	mov	r1, #1
   16110:	bl	14bc8 <__fprintf_chk@plt>
   16114:	cmn	r0, #1
   16118:	bne	160d8 <_start@@Base+0xc38>
   1611c:	mov	r0, #0
   16120:	pop	{r4, r5, r6, pc}
   16124:	movw	r2, #14540	; 0x38cc
   16128:	mov	r0, r4
   1612c:	movt	r2, #2
   16130:	mov	r1, #1
   16134:	bl	14bc8 <__fprintf_chk@plt>
   16138:	cmn	r0, #1
   1613c:	bne	16084 <_start@@Base+0xbe4>
   16140:	b	1611c <_start@@Base+0xc7c>
   16144:	movw	r2, #14576	; 0x38f0
   16148:	mov	r0, r4
   1614c:	movt	r2, #2
   16150:	mov	r1, #1
   16154:	bl	14bc8 <__fprintf_chk@plt>
   16158:	cmn	r0, #1
   1615c:	bne	160d8 <_start@@Base+0xc38>
   16160:	b	1611c <_start@@Base+0xc7c>
   16164:	mov	r3, r6
   16168:	movw	r2, #14584	; 0x38f8
   1616c:	mov	r0, r4
   16170:	movt	r2, #2
   16174:	mov	r1, #1
   16178:	bl	14bc8 <__fprintf_chk@plt>
   1617c:	cmn	r0, #1
   16180:	bne	160d8 <_start@@Base+0xc38>
   16184:	b	1611c <_start@@Base+0xc7c>
   16188:	movw	r2, #14572	; 0x38ec
   1618c:	mov	r0, r4
   16190:	movt	r2, #2
   16194:	mov	r1, #1
   16198:	bl	14bc8 <__fprintf_chk@plt>
   1619c:	cmn	r0, #1
   161a0:	bne	160d8 <_start@@Base+0xc38>
   161a4:	b	1611c <_start@@Base+0xc7c>
   161a8:	push	{r3, r4, r5, lr}
   161ac:	mov	r3, r1
   161b0:	mov	r5, r2
   161b4:	mov	r1, #1
   161b8:	movw	r2, #14588	; 0x38fc
   161bc:	movt	r2, #2
   161c0:	mov	r4, r0
   161c4:	bl	14bc8 <__fprintf_chk@plt>
   161c8:	cmn	r0, #1
   161cc:	beq	161e4 <_start@@Base+0xd44>
   161d0:	mov	r1, r5
   161d4:	mov	r0, r4
   161d8:	bl	1560c <_start@@Base+0x16c>
   161dc:	cmp	r0, #0
   161e0:	bne	161ec <_start@@Base+0xd4c>
   161e4:	mov	r0, #0
   161e8:	pop	{r3, r4, r5, pc}
   161ec:	mov	r0, r4
   161f0:	mov	r1, #1
   161f4:	movw	r2, #15200	; 0x3b60
   161f8:	movt	r2, #2
   161fc:	bl	14bc8 <__fprintf_chk@plt>
   16200:	adds	r0, r0, #1
   16204:	movne	r0, #1
   16208:	pop	{r3, r4, r5, pc}
   1620c:	push	{r4, r5, r6, lr}
   16210:	subs	r5, r0, #0
   16214:	mov	r6, r2
   16218:	beq	1625c <_start@@Base+0xdbc>
   1621c:	ldrb	r3, [r5]
   16220:	cmp	r3, #0
   16224:	beq	1625c <_start@@Base+0xdbc>
   16228:	movw	r1, #14596	; 0x3904
   1622c:	ldr	r4, [pc, #132]	; 162b8 <_start@@Base+0xe18>
   16230:	movt	r1, #2
   16234:	b	16244 <_start@@Base+0xda4>
   16238:	ldr	r1, [r4, #16]!
   1623c:	cmp	r1, #0
   16240:	beq	16298 <_start@@Base+0xdf8>
   16244:	mov	r0, r5
   16248:	bl	14fdc <strcmp@plt>
   1624c:	cmp	r0, #0
   16250:	bne	16238 <_start@@Base+0xd98>
   16254:	mov	r0, r4
   16258:	pop	{r4, r5, r6, pc}
   1625c:	mov	r0, r1
   16260:	bl	1adf0 <locatePathExtension@@Base>
   16264:	cmp	r0, #0
   16268:	beq	1627c <_start@@Base+0xddc>
   1626c:	ldrb	r3, [r0, #1]
   16270:	add	r5, r0, #1
   16274:	cmp	r3, #0
   16278:	bne	16228 <_start@@Base+0xd88>
   1627c:	mov	r0, #3
   16280:	mov	r2, r6
   16284:	movw	r1, #14600	; 0x3908
   16288:	movt	r1, #2
   1628c:	bl	1aa88 <logMessage@@Base>
   16290:	mov	r0, #2
   16294:	bl	14b38 <exit@plt>
   16298:	mov	r0, #3
   1629c:	mov	r2, r6
   162a0:	mov	r3, r5
   162a4:	movw	r1, #14624	; 0x3920
   162a8:	movt	r1, #2
   162ac:	bl	1aa88 <logMessage@@Base>
   162b0:	mov	r0, #2
   162b4:	bl	14b38 <exit@plt>
   162b8:	andeq	r3, r2, r0, lsr #12
   162bc:	push	{r4, lr}
   162c0:	mov	r1, #0
   162c4:	ldr	r3, [r0, #8]
   162c8:	mov	r4, r0
   162cc:	cmp	r3, #0
   162d0:	mvn	r3, #0
   162d4:	strbne	r3, [r0, #12]
   162d8:	streq	r3, [r0, #12]
   162dc:	bl	1566c <_start@@Base+0x1cc>
   162e0:	cmp	r0, #0
   162e4:	bne	162fc <_start@@Base+0xe5c>
   162e8:	ldr	r3, [r4, #8]
   162ec:	cmp	r3, #0
   162f0:	strbne	r0, [r4, #12]
   162f4:	streq	r0, [r4, #12]
   162f8:	pop	{r4, pc}
   162fc:	mov	r0, #1
   16300:	pop	{r4, pc}
   16304:	push	{r4, lr}
   16308:	mov	r1, #1
   1630c:	ldr	r3, [r0, #8]
   16310:	mov	r4, r0
   16314:	cmp	r3, #0
   16318:	streq	r3, [r0, #12]
   1631c:	movne	r3, #0
   16320:	strbne	r3, [r0, #12]
   16324:	bl	1566c <_start@@Base+0x1cc>
   16328:	cmp	r0, #0
   1632c:	bne	16348 <_start@@Base+0xea8>
   16330:	ldr	r3, [r4, #8]
   16334:	cmp	r3, #0
   16338:	mvn	r3, #0
   1633c:	strbne	r3, [r4, #12]
   16340:	streq	r3, [r4, #12]
   16344:	pop	{r4, pc}
   16348:	mov	r0, #1
   1634c:	pop	{r4, pc}
   16350:	push	{r4, r5, r6, r7, lr}
   16354:	movw	r5, #25328	; 0x62f0
   16358:	movt	r5, #3
   1635c:	sub	sp, sp, #84	; 0x54
   16360:	mov	r6, r0
   16364:	mov	r0, r1
   16368:	ldr	r3, [r5]
   1636c:	mov	r4, r1
   16370:	mov	r7, r2
   16374:	str	r3, [sp, #76]	; 0x4c
   16378:	bl	14a54 <iswspace@plt>
   1637c:	cmp	r0, #0
   16380:	movwne	r3, #14648	; 0x3938
   16384:	movtne	r3, #2
   16388:	bne	163a4 <_start@@Base+0xf04>
   1638c:	mov	r0, r4
   16390:	bl	14e5c <iswdigit@plt>
   16394:	cmp	r0, #0
   16398:	movwne	r3, #14656	; 0x3940
   1639c:	movtne	r3, #2
   163a0:	beq	16540 <_start@@Base+0x10a0>
   163a4:	movw	r2, #17628	; 0x44dc
   163a8:	mov	r0, r6
   163ac:	movt	r2, #2
   163b0:	mov	r1, #1
   163b4:	bl	14bc8 <__fprintf_chk@plt>
   163b8:	cmn	r0, #1
   163bc:	beq	16524 <_start@@Base+0x1084>
   163c0:	movw	r2, #14480	; 0x3890
   163c4:	mov	r0, r6
   163c8:	movt	r2, #2
   163cc:	mov	r1, #1
   163d0:	bl	14bc8 <__fprintf_chk@plt>
   163d4:	cmn	r0, #1
   163d8:	beq	16524 <_start@@Base+0x1084>
   163dc:	cmp	r4, #92	; 0x5c
   163e0:	beq	16594 <_start@@Base+0x10f4>
   163e4:	cmp	r4, #12
   163e8:	beq	165dc <_start@@Base+0x113c>
   163ec:	cmp	r4, #10
   163f0:	beq	16620 <_start@@Base+0x1180>
   163f4:	cmp	r4, #13
   163f8:	beq	16660 <_start@@Base+0x11c0>
   163fc:	cmp	r4, #32
   16400:	beq	16680 <_start@@Base+0x11e0>
   16404:	cmp	r4, #9
   16408:	beq	166a0 <_start@@Base+0x1200>
   1640c:	cmp	r4, #11
   16410:	beq	16640 <_start@@Base+0x11a0>
   16414:	sub	r3, r4, #33	; 0x21
   16418:	cmp	r3, #93	; 0x5d
   1641c:	movhi	r3, #0
   16420:	movls	r3, #1
   16424:	cmp	r4, #35	; 0x23
   16428:	moveq	r3, #0
   1642c:	cmp	r3, #0
   16430:	bne	165fc <_start@@Base+0x115c>
   16434:	cmp	r4, #65536	; 0x10000
   16438:	movcc	r2, #4
   1643c:	movcc	r3, #120	; 0x78
   16440:	bcc	16460 <_start@@Base+0xfc0>
   16444:	movw	r3, #65535	; 0xffff
   16448:	movt	r3, #15
   1644c:	cmp	r4, r3
   16450:	movls	r2, #5
   16454:	movhi	r2, #8
   16458:	movls	r3, #121	; 0x79
   1645c:	movhi	r3, #122	; 0x7a
   16460:	stm	sp, {r2, r4}
   16464:	mov	r0, r6
   16468:	movw	r2, #14724	; 0x3984
   1646c:	mov	r1, #1
   16470:	movt	r2, #2
   16474:	bl	14bc8 <__fprintf_chk@plt>
   16478:	cmn	r0, #1
   1647c:	beq	16524 <_start@@Base+0x1084>
   16480:	movw	r2, #14480	; 0x3890
   16484:	mov	r0, r6
   16488:	movt	r2, #2
   1648c:	mov	r1, #1
   16490:	bl	14bc8 <__fprintf_chk@plt>
   16494:	cmn	r0, #1
   16498:	beq	16524 <_start@@Base+0x1084>
   1649c:	cmp	r7, #0
   164a0:	bne	16510 <_start@@Base+0x1070>
   164a4:	movw	r2, #14736	; 0x3990
   164a8:	mov	r0, r6
   164ac:	movt	r2, #2
   164b0:	mov	r1, #1
   164b4:	bl	14bc8 <__fprintf_chk@plt>
   164b8:	cmn	r0, #1
   164bc:	beq	16524 <_start@@Base+0x1084>
   164c0:	mov	r0, r4
   164c4:	add	r3, sp, #8
   164c8:	mov	r1, #2
   164cc:	str	r3, [sp]
   164d0:	add	r2, sp, #12
   164d4:	mov	r3, #64	; 0x40
   164d8:	mov	r4, #0
   164dc:	str	r4, [sp, #8]
   164e0:	bl	14dcc <u_charName_50@plt>
   164e4:	ldr	r3, [sp, #8]
   164e8:	cmp	r3, r4
   164ec:	ble	165b4 <_start@@Base+0x1114>
   164f0:	mov	r0, r6
   164f4:	movw	r2, #15200	; 0x3b60
   164f8:	mov	r1, #1
   164fc:	movt	r2, #2
   16500:	bl	14bc8 <__fprintf_chk@plt>
   16504:	adds	r0, r0, #1
   16508:	movne	r0, #1
   1650c:	b	16528 <_start@@Base+0x1088>
   16510:	mov	r1, r7
   16514:	mov	r0, r6
   16518:	bl	1560c <_start@@Base+0x16c>
   1651c:	cmp	r0, #0
   16520:	bne	164c0 <_start@@Base+0x1020>
   16524:	mov	r0, #0
   16528:	ldr	r2, [sp, #76]	; 0x4c
   1652c:	ldr	r3, [r5]
   16530:	cmp	r2, r3
   16534:	bne	166c0 <_start@@Base+0x1220>
   16538:	add	sp, sp, #84	; 0x54
   1653c:	pop	{r4, r5, r6, r7, pc}
   16540:	mov	r0, r4
   16544:	bl	14d30 <iswpunct@plt>
   16548:	cmp	r0, #0
   1654c:	movwne	r3, #14664	; 0x3948
   16550:	movtne	r3, #2
   16554:	bne	163a4 <_start@@Base+0xf04>
   16558:	mov	r0, r4
   1655c:	bl	14cd0 <iswlower@plt>
   16560:	cmp	r0, #0
   16564:	movwne	r3, #14676	; 0x3954
   16568:	movtne	r3, #2
   1656c:	bne	163a4 <_start@@Base+0xf04>
   16570:	mov	r0, r4
   16574:	bl	14a9c <iswupper@plt>
   16578:	movw	r2, #14700	; 0x396c
   1657c:	movt	r2, #2
   16580:	movw	r3, #14688	; 0x3960
   16584:	movt	r3, #2
   16588:	cmp	r0, #0
   1658c:	moveq	r3, r2
   16590:	b	163a4 <_start@@Base+0xf04>
   16594:	movw	r2, #14580	; 0x38f4
   16598:	mov	r0, r6
   1659c:	movt	r2, #2
   165a0:	mov	r1, #1
   165a4:	bl	14bc8 <__fprintf_chk@plt>
   165a8:	cmn	r0, #1
   165ac:	bne	16480 <_start@@Base+0xfe0>
   165b0:	b	16524 <_start@@Base+0x1084>
   165b4:	add	r3, sp, #12
   165b8:	movw	r2, #14740	; 0x3994
   165bc:	mov	r0, r6
   165c0:	movt	r2, #2
   165c4:	mov	r1, #1
   165c8:	bl	14bc8 <__fprintf_chk@plt>
   165cc:	cmn	r0, #1
   165d0:	moveq	r0, r4
   165d4:	bne	164f0 <_start@@Base+0x1050>
   165d8:	b	16528 <_start@@Base+0x1088>
   165dc:	movw	r2, #14708	; 0x3974
   165e0:	mov	r0, r6
   165e4:	movt	r2, #2
   165e8:	mov	r1, #1
   165ec:	bl	14bc8 <__fprintf_chk@plt>
   165f0:	cmn	r0, #1
   165f4:	bne	16480 <_start@@Base+0xfe0>
   165f8:	b	16524 <_start@@Base+0x1084>
   165fc:	movw	r2, #14584	; 0x38f8
   16600:	mov	r0, r6
   16604:	movt	r2, #2
   16608:	mov	r1, #1
   1660c:	mov	r3, r4
   16610:	bl	14bc8 <__fprintf_chk@plt>
   16614:	cmn	r0, #1
   16618:	bne	16480 <_start@@Base+0xfe0>
   1661c:	b	16524 <_start@@Base+0x1084>
   16620:	movw	r2, #14564	; 0x38e4
   16624:	mov	r0, r6
   16628:	movt	r2, #2
   1662c:	mov	r1, #1
   16630:	bl	14bc8 <__fprintf_chk@plt>
   16634:	cmn	r0, #1
   16638:	bne	16480 <_start@@Base+0xfe0>
   1663c:	b	16524 <_start@@Base+0x1084>
   16640:	movw	r2, #14720	; 0x3980
   16644:	mov	r0, r6
   16648:	movt	r2, #2
   1664c:	mov	r1, #1
   16650:	bl	14bc8 <__fprintf_chk@plt>
   16654:	cmn	r0, #1
   16658:	bne	16480 <_start@@Base+0xfe0>
   1665c:	b	16524 <_start@@Base+0x1084>
   16660:	movw	r2, #14572	; 0x38ec
   16664:	mov	r0, r6
   16668:	movt	r2, #2
   1666c:	mov	r1, #1
   16670:	bl	14bc8 <__fprintf_chk@plt>
   16674:	cmn	r0, #1
   16678:	bne	16480 <_start@@Base+0xfe0>
   1667c:	b	16524 <_start@@Base+0x1084>
   16680:	movw	r2, #14712	; 0x3978
   16684:	mov	r0, r6
   16688:	movt	r2, #2
   1668c:	mov	r1, #1
   16690:	bl	14bc8 <__fprintf_chk@plt>
   16694:	cmn	r0, #1
   16698:	bne	16480 <_start@@Base+0xfe0>
   1669c:	b	16524 <_start@@Base+0x1084>
   166a0:	movw	r2, #14716	; 0x397c
   166a4:	mov	r0, r6
   166a8:	movt	r2, #2
   166ac:	mov	r1, #1
   166b0:	bl	14bc8 <__fprintf_chk@plt>
   166b4:	cmn	r0, #1
   166b8:	bne	16480 <_start@@Base+0xfe0>
   166bc:	b	16524 <_start@@Base+0x1084>
   166c0:	bl	14d9c <__stack_chk_fail@plt>
   166c4:	push	{r4, r5, r6, r7, r8, lr}
   166c8:	subs	r8, r3, #0
   166cc:	mov	r5, r0
   166d0:	mov	r7, r1
   166d4:	mov	r6, r2
   166d8:	ldr	r4, [r0]
   166dc:	beq	166f8 <_start@@Base+0x1258>
   166e0:	movw	r1, #16036	; 0x3ea4
   166e4:	mov	r0, r4
   166e8:	movt	r1, #2
   166ec:	bl	14fdc <strcmp@plt>
   166f0:	cmp	r0, #0
   166f4:	beq	16738 <_start@@Base+0x1298>
   166f8:	cmp	r6, #0
   166fc:	beq	1671c <_start@@Base+0x127c>
   16700:	mov	r0, r6
   16704:	mov	r1, r4
   16708:	bl	1ae1c <makePath@@Base>
   1670c:	cmp	r0, #0
   16710:	popeq	{r4, r5, r6, r7, r8, pc}
   16714:	mov	r4, r0
   16718:	str	r0, [r5]
   1671c:	mov	r0, r4
   16720:	mov	r1, r7
   16724:	bl	14c88 <fopen@plt>
   16728:	subs	r4, r0, #0
   1672c:	beq	16748 <_start@@Base+0x12a8>
   16730:	mov	r0, r4
   16734:	pop	{r4, r5, r6, r7, r8, pc}
   16738:	ldr	r3, [sp, #24]
   1673c:	mov	r0, r8
   16740:	str	r3, [r5]
   16744:	pop	{r4, r5, r6, r7, r8, pc}
   16748:	bl	15000 <__errno_location@plt>
   1674c:	ldr	r5, [r5]
   16750:	ldr	r0, [r0]
   16754:	bl	14b44 <strerror@plt>
   16758:	mov	r2, r5
   1675c:	movw	r1, #14744	; 0x3998
   16760:	movt	r1, #2
   16764:	mov	r3, r0
   16768:	mov	r0, #3
   1676c:	bl	1aa88 <logMessage@@Base>
   16770:	b	16730 <_start@@Base+0x1290>
   16774:	push	{r4, lr}
   16778:	mov	r4, r0
   1677c:	bl	14d60 <brlapi_error_location@plt>
   16780:	bl	14ebc <brlapi_strerror@plt>
   16784:	str	r0, [r4]
   16788:	pop	{r4, pc}
   1678c:	push	{r4, r5, r6, lr}
   16790:	movw	r4, #25328	; 0x62f0
   16794:	movt	r4, #3
   16798:	ldrb	ip, [r0]
   1679c:	sub	sp, sp, #40	; 0x28
   167a0:	ldr	r5, [r4]
   167a4:	cmp	ip, #0
   167a8:	ldr	r6, [sp, #56]	; 0x38
   167ac:	mov	ip, #0
   167b0:	str	ip, [sp, #32]
   167b4:	str	r5, [sp, #36]	; 0x24
   167b8:	ldr	r5, [sp, #60]	; 0x3c
   167bc:	beq	16860 <_start@@Base+0x13c0>
   167c0:	ldrb	ip, [r2]
   167c4:	cmp	ip, #0
   167c8:	movweq	ip, #14384	; 0x3830
   167cc:	movteq	ip, #2
   167d0:	movwne	ip, #14772	; 0x39b4
   167d4:	movtne	ip, #2
   167d8:	moveq	lr, ip
   167dc:	movne	lr, r3
   167e0:	str	r2, [sp]
   167e4:	mov	r3, ip
   167e8:	mov	r2, r0
   167ec:	str	r1, [sp, #4]
   167f0:	add	r0, sp, #32
   167f4:	str	ip, [sp, #8]
   167f8:	str	r0, [sp, #24]
   167fc:	movw	r1, #14452	; 0x3874
   16800:	str	lr, [sp, #12]
   16804:	movt	r1, #2
   16808:	str	r6, [sp, #16]
   1680c:	mov	r0, #1
   16810:	str	r1, [sp, #20]
   16814:	movw	r1, #14776	; 0x39b8
   16818:	movt	r1, #2
   1681c:	bl	1512c <__printf_chk@plt>
   16820:	ldr	r2, [sp, #32]
   16824:	cmp	r5, r2
   16828:	ble	16848 <_start@@Base+0x13a8>
   1682c:	movw	r1, #14512	; 0x38b0
   16830:	movw	r3, #14384	; 0x3830
   16834:	rsb	r2, r2, r5
   16838:	movt	r1, #2
   1683c:	movt	r3, #2
   16840:	mov	r0, #1
   16844:	bl	1512c <__printf_chk@plt>
   16848:	ldr	r2, [sp, #36]	; 0x24
   1684c:	ldr	r3, [r4]
   16850:	cmp	r2, r3
   16854:	bne	16884 <_start@@Base+0x13e4>
   16858:	add	sp, sp, #40	; 0x28
   1685c:	pop	{r4, r5, r6, pc}
   16860:	ldrb	r1, [r2]
   16864:	cmp	r1, ip
   16868:	moveq	r2, r1
   1686c:	beq	16824 <_start@@Base+0x1384>
   16870:	movw	ip, #14384	; 0x3830
   16874:	movt	ip, #2
   16878:	mov	lr, r3
   1687c:	mov	r1, ip
   16880:	b	167e0 <_start@@Base+0x1340>
   16884:	bl	14d9c <__stack_chk_fail@plt>
   16888:	push	{r3, r4, r5, lr}
   1688c:	mov	r4, r0
   16890:	ldr	r3, [r0, #8]
   16894:	mov	r5, r1
   16898:	cmp	r3, #0
   1689c:	beq	168e4 <_start@@Base+0x1444>
   168a0:	ldrb	r0, [r0, #12]
   168a4:	bl	1f988 <convertCharToWchar@@Base>
   168a8:	cmn	r0, #1
   168ac:	beq	168dc <_start@@Base+0x143c>
   168b0:	mov	r1, r0
   168b4:	mov	r2, r5
   168b8:	ldr	r0, [r4]
   168bc:	bl	21bb4 <setTextTableCharacter@@Base>
   168c0:	cmp	r0, #0
   168c4:	beq	168dc <_start@@Base+0x143c>
   168c8:	ldrb	r3, [r4, #4]
   168cc:	mov	r0, #1
   168d0:	orr	r3, r3, r0
   168d4:	strb	r3, [r4, #4]
   168d8:	pop	{r3, r4, r5, pc}
   168dc:	mov	r0, #0
   168e0:	pop	{r3, r4, r5, pc}
   168e4:	ldr	r0, [r0, #12]
   168e8:	b	168b0 <_start@@Base+0x1410>
   168ec:	push	{r4, r5, r6, lr}
   168f0:	mov	r4, r0
   168f4:	ldr	r3, [r0, #8]
   168f8:	mov	r6, r1
   168fc:	cmp	r3, #0
   16900:	beq	16964 <_start@@Base+0x14c4>
   16904:	ldrb	r0, [r0, #12]
   16908:	bl	1f988 <convertCharToWchar@@Base>
   1690c:	cmn	r0, #1
   16910:	mov	r5, r0
   16914:	beq	1695c <_start@@Base+0x14bc>
   16918:	mov	r1, r5
   1691c:	ldr	r0, [r4]
   16920:	bl	21ac8 <getUnicodeCellEntry@@Base>
   16924:	mov	r1, r5
   16928:	cmp	r0, #0
   1692c:	ldrbne	r0, [r0]
   16930:	eor	r2, r0, r6
   16934:	ldr	r0, [r4]
   16938:	uxtb	r2, r2
   1693c:	bl	21bb4 <setTextTableCharacter@@Base>
   16940:	cmp	r0, #0
   16944:	beq	1695c <_start@@Base+0x14bc>
   16948:	ldrb	r3, [r4, #4]
   1694c:	mov	r0, #1
   16950:	orr	r3, r3, r0
   16954:	strb	r3, [r4, #4]
   16958:	pop	{r4, r5, r6, pc}
   1695c:	mov	r0, #0
   16960:	pop	{r4, r5, r6, pc}
   16964:	ldr	r5, [r0, #12]
   16968:	b	16918 <_start@@Base+0x1478>
   1696c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16970:	add	fp, sp, #32
   16974:	sub	sp, sp, #612	; 0x264
   16978:	movw	r8, #25328	; 0x62f0
   1697c:	movt	r8, #3
   16980:	movw	ip, #25340	; 0x62fc
   16984:	movt	ip, #3
   16988:	str	ip, [fp, #-576]	; 0xfffffdc0
   1698c:	mov	r4, #0
   16990:	ldr	r1, [r8]
   16994:	mov	r3, r4
   16998:	str	r8, [fp, #-588]	; 0xfffffdb4
   1699c:	ldr	r8, [fp, #-576]	; 0xfffffdc0
   169a0:	ldrb	ip, [fp, #-492]	; 0xfffffe14
   169a4:	str	r1, [fp, #-40]	; 0xffffffd8
   169a8:	add	r0, r8, #4
   169ac:	ldr	r2, [r8, #8]
   169b0:	bfi	ip, r4, #0, #1
   169b4:	str	r4, [fp, #-496]	; 0xfffffe10
   169b8:	movw	r1, #19928	; 0x4dd8
   169bc:	strb	ip, [fp, #-492]	; 0xfffffe14
   169c0:	movt	r1, #2
   169c4:	str	r4, [sp]
   169c8:	bl	166c4 <_start@@Base+0x1224>
   169cc:	subs	r5, r0, #0
   169d0:	moveq	r0, #4
   169d4:	beq	1763c <_start@@Base+0x219c>
   169d8:	ldr	r3, [r8, #12]
   169dc:	mov	r1, r5
   169e0:	ldr	r0, [r8, #4]
   169e4:	ldr	ip, [r3, #4]
   169e8:	ldr	r2, [r3, #12]
   169ec:	blx	ip
   169f0:	cmp	r0, r4
   169f4:	str	r0, [fp, #-496]	; 0xfffffe10
   169f8:	beq	17878 <_start@@Base+0x23d8>
   169fc:	mov	r0, r5
   16a00:	bl	14f4c <fclose@plt>
   16a04:	mov	r0, r4
   16a08:	mov	r1, r4
   16a0c:	bl	14b2c <brlapi_openConnection@plt>
   16a10:	cmn	r0, #1
   16a14:	str	r0, [fp, #-480]	; 0xfffffe20
   16a18:	beq	17bf0 <_start@@Base+0x2750>
   16a1c:	sub	r0, fp, #476	; 0x1dc
   16a20:	sub	r1, fp, #472	; 0x1d8
   16a24:	bl	15078 <brlapi_getDisplaySize@plt>
   16a28:	cmn	r0, #1
   16a2c:	beq	17b84 <_start@@Base+0x26e4>
   16a30:	mvn	r0, #0
   16a34:	mov	r1, r4
   16a38:	bl	150fc <brlapi_enterTtyMode@plt>
   16a3c:	cmn	r0, #1
   16a40:	beq	17db4 <_start@@Base+0x2914>
   16a44:	str	r4, [fp, #-468]	; 0xfffffe2c
   16a48:	str	r4, [fp, #-464]	; 0xfffffe30
   16a4c:	movw	ip, #25320	; 0x62e8
   16a50:	movt	ip, #3
   16a54:	mov	r1, #0
   16a58:	mov	r2, #2
   16a5c:	mov	r3, r1
   16a60:	ldr	r0, [ip]
   16a64:	mov	r5, r1
   16a68:	str	ip, [fp, #-584]	; 0xfffffdb8
   16a6c:	bl	14ed4 <setvbuf@plt>
   16a70:	ldr	r8, [fp, #-576]	; 0xfffffdc0
   16a74:	mov	r0, r5
   16a78:	ldr	r1, [pc, #4080]	; 17a70 <_start@@Base+0x25d0>
   16a7c:	str	r5, [r8, #16]
   16a80:	bl	14ff4 <tcgetattr@plt>
   16a84:	cmn	r0, #1
   16a88:	beq	16b24 <_start@@Base+0x1684>
   16a8c:	ldr	r4, [pc, #4060]	; 17a70 <_start@@Base+0x25d0>
   16a90:	sub	lr, fp, #424	; 0x1a8
   16a94:	sub	ip, fp, #408	; 0x198
   16a98:	sub	r6, fp, #376	; 0x178
   16a9c:	ldm	r4!, {r0, r1, r2, r3}
   16aa0:	stmia	lr!, {r0, r1, r2, r3}
   16aa4:	ldm	r4!, {r0, r1, r2, r3}
   16aa8:	ldr	r8, [fp, #-424]	; 0xfffffe58
   16aac:	ldr	r7, [fp, #-412]	; 0xfffffe64
   16ab0:	bic	r8, r8, #1504	; 0x5e0
   16ab4:	stmia	lr!, {r0, r1, r2, r3}
   16ab8:	bic	r7, r7, #32768	; 0x8000
   16abc:	ldm	r4!, {r0, r1, r2, r3}
   16ac0:	bic	r8, r8, #11
   16ac4:	bic	r7, r7, #75	; 0x4b
   16ac8:	str	r8, [fp, #-424]	; 0xfffffe58
   16acc:	stmia	lr!, {r0, r1, r2, r3}
   16ad0:	ldm	r4, {r0, r1, r2}
   16ad4:	stm	lr, {r0, r1, r2}
   16ad8:	str	r7, [fp, #-412]	; 0xfffffe64
   16adc:	ldr	r3, [fp, #-416]	; 0xfffffe60
   16ae0:	bic	r3, r3, #304	; 0x130
   16ae4:	orr	r3, r3, #48	; 0x30
   16ae8:	str	r3, [fp, #-416]	; 0xfffffe60
   16aec:	strb	r5, [ip, #1]!
   16af0:	cmp	ip, r6
   16af4:	mov	r3, #0
   16af8:	bne	16aec <_start@@Base+0x164c>
   16afc:	sub	r2, fp, #424	; 0x1a8
   16b00:	mov	r0, r3
   16b04:	mov	r1, #2
   16b08:	mov	r4, #1
   16b0c:	strb	r3, [fp, #-402]	; 0xfffffe6e
   16b10:	strb	r4, [fp, #-401]	; 0xfffffe6f
   16b14:	bl	14d54 <tcsetattr@plt>
   16b18:	cmn	r0, #1
   16b1c:	ldrne	ip, [fp, #-576]	; 0xfffffdc0
   16b20:	strne	r4, [ip, #16]
   16b24:	ldr	r8, [fp, #-576]	; 0xfffffdc0
   16b28:	sub	r9, fp, #296	; 0x128
   16b2c:	sub	r0, fp, #496	; 0x1f0
   16b30:	movw	ip, #25332	; 0x62f4
   16b34:	movt	ip, #3
   16b38:	str	ip, [fp, #-572]	; 0xfffffdc4
   16b3c:	ldr	r3, [r8]
   16b40:	movw	ip, #14972	; 0x3a7c
   16b44:	add	r8, r9, #256	; 0x100
   16b48:	movt	ip, #2
   16b4c:	str	r8, [fp, #-548]	; 0xfffffddc
   16b50:	movw	r8, #14984	; 0x3a88
   16b54:	ldrb	r2, [r3]
   16b58:	movt	r8, #2
   16b5c:	str	ip, [fp, #-564]	; 0xfffffdcc
   16b60:	cmp	r2, #0
   16b64:	str	r8, [fp, #-568]	; 0xfffffdc8
   16b68:	sub	r8, fp, #40	; 0x28
   16b6c:	moveq	r3, #0
   16b70:	str	r3, [fp, #-488]	; 0xfffffe18
   16b74:	bl	162bc <_start@@Base+0xe1c>
   16b78:	movw	ip, #25340	; 0x62fc
   16b7c:	str	r8, [fp, #-504]	; 0xfffffe08
   16b80:	movt	ip, #3
   16b84:	str	ip, [fp, #-580]	; 0xfffffdbc
   16b88:	ldr	r3, [fp, #-488]	; 0xfffffe18
   16b8c:	cmp	r3, #0
   16b90:	beq	17674 <_start@@Base+0x21d4>
   16b94:	ldrb	r0, [fp, #-484]	; 0xfffffe1c
   16b98:	bl	1f988 <convertCharToWchar@@Base>
   16b9c:	cmn	r0, #1
   16ba0:	mov	r7, r0
   16ba4:	movweq	r6, #65533	; 0xfffd
   16ba8:	movne	r6, r0
   16bac:	moveq	r7, r6
   16bb0:	movne	ip, #1
   16bb4:	moveq	r8, #0
   16bb8:	strne	ip, [fp, #-552]	; 0xfffffdd8
   16bbc:	streq	r8, [fp, #-552]	; 0xfffffdd8
   16bc0:	ldr	r0, [fp, #-496]	; 0xfffffe10
   16bc4:	mov	r1, r7
   16bc8:	bl	21ac8 <getUnicodeCellEntry@@Base>
   16bcc:	cmp	r0, #0
   16bd0:	moveq	r5, r0
   16bd4:	ldrbne	r5, [r0]
   16bd8:	movne	r4, #1
   16bdc:	moveq	r4, r5
   16be0:	cmp	r7, #255	; 0xff
   16be4:	strhi	r7, [fp, #-560]	; 0xfffffdd0
   16be8:	movhi	r2, #32
   16bec:	bhi	16c0c <_start@@Base+0x176c>
   16bf0:	tst	r7, #96	; 0x60
   16bf4:	bne	17730 <_start@@Base+0x2290>
   16bf8:	tst	r7, #128	; 0x80
   16bfc:	orr	r8, r7, #64	; 0x40
   16c00:	str	r8, [fp, #-560]	; 0xfffffdd0
   16c04:	movne	r2, #126	; 0x7e
   16c08:	moveq	r2, #94	; 0x5e
   16c0c:	cmp	r4, #0
   16c10:	beq	176d0 <_start@@Base+0x2230>
   16c14:	and	ip, r5, #8
   16c18:	and	r8, r5, #2
   16c1c:	and	lr, r5, #4
   16c20:	and	r0, r5, #16
   16c24:	uxtb	ip, ip
   16c28:	and	r1, r5, #32
   16c2c:	and	r3, r5, #64	; 0x40
   16c30:	str	ip, [fp, #-520]	; 0xfffffdf8
   16c34:	and	ip, r5, #1
   16c38:	str	ip, [fp, #-516]	; 0xfffffdfc
   16c3c:	uxtb	ip, r5
   16c40:	uxtb	r8, r8
   16c44:	uxtb	lr, lr
   16c48:	uxtb	r0, r0
   16c4c:	uxtb	r1, r1
   16c50:	uxtb	r3, r3
   16c54:	str	r8, [fp, #-544]	; 0xfffffde0
   16c58:	str	lr, [fp, #-536]	; 0xfffffde8
   16c5c:	str	r0, [fp, #-532]	; 0xfffffdec
   16c60:	str	r1, [fp, #-528]	; 0xfffffdf0
   16c64:	str	r3, [fp, #-524]	; 0xfffffdf4
   16c68:	ldr	r8, [fp, #-564]	; 0xfffffdcc
   16c6c:	mov	r1, #256	; 0x100
   16c70:	mov	r3, r1
   16c74:	str	r7, [sp, #4]
   16c78:	str	r2, [sp, #8]
   16c7c:	sxtb	ip, ip
   16c80:	str	r8, [sp]
   16c84:	mov	r2, #1
   16c88:	str	ip, [fp, #-540]	; 0xfffffde4
   16c8c:	mov	r0, r9
   16c90:	bl	14f1c <__snprintf_chk@plt>
   16c94:	ldr	r7, [fp, #-504]	; 0xfffffe08
   16c98:	ldr	ip, [fp, #-548]	; 0xfffffddc
   16c9c:	movw	r2, #14980	; 0x3a84
   16ca0:	movt	r2, #2
   16ca4:	add	r0, r9, r0
   16ca8:	cmp	r0, r7
   16cac:	movcc	r7, r0
   16cb0:	rsb	r1, r7, ip
   16cb4:	rsb	r8, r9, r7
   16cb8:	mov	r0, r7
   16cbc:	str	r8, [fp, #-508]	; 0xfffffe04
   16cc0:	bl	14c40 <snprintf@plt>
   16cc4:	ldr	ip, [fp, #-568]	; 0xfffffdc8
   16cc8:	str	ip, [sp]
   16ccc:	ldr	r8, [fp, #-540]	; 0xfffffde4
   16cd0:	cmp	r8, #0
   16cd4:	movge	r2, #32
   16cd8:	movlt	r2, #56	; 0x38
   16cdc:	cmp	r4, #0
   16ce0:	moveq	r3, #32
   16ce4:	movne	r3, #91	; 0x5b
   16ce8:	str	r2, [sp, #36]	; 0x24
   16cec:	add	r0, r7, r0
   16cf0:	ldr	ip, [fp, #-516]	; 0xfffffdfc
   16cf4:	str	r3, [sp, #4]
   16cf8:	cmp	ip, #0
   16cfc:	ldr	r8, [fp, #-544]	; 0xfffffde0
   16d00:	moveq	r2, #32
   16d04:	movne	r2, #49	; 0x31
   16d08:	str	r2, [sp, #8]
   16d0c:	cmp	r8, #0
   16d10:	ldr	ip, [fp, #-536]	; 0xfffffde8
   16d14:	moveq	r3, #32
   16d18:	movne	r3, #50	; 0x32
   16d1c:	cmp	ip, #0
   16d20:	str	r3, [sp, #12]
   16d24:	ldr	r8, [fp, #-520]	; 0xfffffdf8
   16d28:	moveq	r2, #32
   16d2c:	movne	r2, #51	; 0x33
   16d30:	str	r2, [sp, #16]
   16d34:	cmp	r8, #0
   16d38:	ldr	ip, [fp, #-532]	; 0xfffffdec
   16d3c:	moveq	r3, #32
   16d40:	movne	r3, #52	; 0x34
   16d44:	cmp	ip, #0
   16d48:	str	r3, [sp, #20]
   16d4c:	ldr	r8, [fp, #-528]	; 0xfffffdf0
   16d50:	moveq	r2, #32
   16d54:	movne	r2, #53	; 0x35
   16d58:	str	r2, [sp, #24]
   16d5c:	cmp	r8, #0
   16d60:	ldr	ip, [fp, #-524]	; 0xfffffdf4
   16d64:	moveq	r3, #32
   16d68:	movne	r3, #54	; 0x36
   16d6c:	cmp	ip, #0
   16d70:	str	r3, [sp, #28]
   16d74:	moveq	r2, #32
   16d78:	movne	r2, #55	; 0x37
   16d7c:	cmp	r4, #0
   16d80:	str	r2, [sp, #32]
   16d84:	mov	r2, #1
   16d88:	moveq	r3, #32
   16d8c:	movne	r3, #93	; 0x5d
   16d90:	str	r3, [sp, #40]	; 0x28
   16d94:	mvn	r3, #0
   16d98:	ldr	sl, [fp, #-504]	; 0xfffffe08
   16d9c:	ldr	r8, [fp, #-548]	; 0xfffffddc
   16da0:	cmp	r0, sl
   16da4:	movcc	sl, r0
   16da8:	rsb	r1, sl, r8
   16dac:	rsb	ip, r9, sl
   16db0:	mov	r0, sl
   16db4:	str	ip, [fp, #-556]	; 0xfffffdd4
   16db8:	bl	14f1c <__snprintf_chk@plt>
   16dbc:	mov	r3, #0
   16dc0:	sub	lr, fp, #460	; 0x1cc
   16dc4:	str	r3, [fp, #-460]	; 0xfffffe34
   16dc8:	str	lr, [sp]
   16dcc:	mov	r1, #2
   16dd0:	ldr	r8, [fp, #-504]	; 0xfffffe08
   16dd4:	ldr	ip, [fp, #-548]	; 0xfffffddc
   16dd8:	add	sl, sl, r0
   16ddc:	mov	r0, r6
   16de0:	cmp	sl, r8
   16de4:	rsbls	sl, r9, sl
   16de8:	rsbhi	sl, r9, r8
   16dec:	str	sl, [fp, #-512]	; 0xfffffe00
   16df0:	add	sl, sl, #1
   16df4:	add	r6, r9, sl
   16df8:	rsb	r3, r6, ip
   16dfc:	mov	r2, r6
   16e00:	bl	14dcc <u_charName_50@plt>
   16e04:	ldr	r3, [fp, #-460]	; 0xfffffe34
   16e08:	cmp	r3, #0
   16e0c:	movgt	r0, sl
   16e10:	ble	17710 <_start@@Base+0x2270>
   16e14:	mov	r1, #4
   16e18:	bl	14e74 <calloc@plt>
   16e1c:	subs	r7, r0, #0
   16e20:	beq	175e4 <_start@@Base+0x2144>
   16e24:	ldr	r8, [fp, #-512]	; 0xfffffe00
   16e28:	cmp	r8, #0
   16e2c:	beq	16e5c <_start@@Base+0x19bc>
   16e30:	ldr	ip, [fp, #-512]	; 0xfffffe00
   16e34:	sub	sl, r9, #1
   16e38:	sub	r8, r7, #4
   16e3c:	add	r6, sl, ip
   16e40:	ldrb	r0, [sl, #1]!
   16e44:	bl	1f988 <convertCharToWchar@@Base>
   16e48:	cmn	r0, #1
   16e4c:	moveq	r0, #32
   16e50:	cmp	sl, r6
   16e54:	str	r0, [r8, #4]!
   16e58:	bne	16e40 <_start@@Base+0x19a0>
   16e5c:	ldr	r8, [fp, #-560]	; 0xfffffdd0
   16e60:	cmp	r4, #0
   16e64:	ldr	ip, [fp, #-508]	; 0xfffffe04
   16e68:	moveq	r3, #32
   16e6c:	str	r8, [r7, ip, lsl #2]
   16e70:	orrne	r3, r5, #10240	; 0x2800
   16e74:	ldr	r8, [fp, #-556]	; 0xfffffdd4
   16e78:	mov	sl, #0
   16e7c:	ldr	ip, [fp, #-512]	; 0xfffffe00
   16e80:	movw	r1, #15008	; 0x3aa0
   16e84:	mov	r0, #1
   16e88:	movt	r1, #2
   16e8c:	str	r3, [r7, r8, lsl #2]
   16e90:	movw	r8, #17600	; 0x44c0
   16e94:	str	sl, [r7, ip, lsl #2]
   16e98:	movt	r8, #2
   16e9c:	bl	1512c <__printf_chk@plt>
   16ea0:	ldr	r6, [fp, #-488]	; 0xfffffe18
   16ea4:	movw	r3, #14800	; 0x39d0
   16ea8:	movt	r3, #2
   16eac:	cmp	r6, sl
   16eb0:	mov	ip, #38	; 0x26
   16eb4:	movw	r0, #15012	; 0x3aa4
   16eb8:	str	ip, [sp, #4]
   16ebc:	moveq	r6, r3
   16ec0:	movt	r0, #2
   16ec4:	str	r6, [sp]
   16ec8:	movw	r1, #15016	; 0x3aa8
   16ecc:	str	ip, [fp, #-592]	; 0xfffffdb0
   16ed0:	movt	r1, #2
   16ed4:	movw	r2, #15024	; 0x3ab0
   16ed8:	movw	r3, #15028	; 0x3ab4
   16edc:	movt	r2, #2
   16ee0:	movt	r3, #2
   16ee4:	bl	1678c <_start@@Base+0x12ec>
   16ee8:	movw	lr, #14816	; 0x39e0
   16eec:	str	r8, [sp]
   16ef0:	movw	r0, #15036	; 0x3abc
   16ef4:	str	sl, [sp, #4]
   16ef8:	movt	r0, #2
   16efc:	str	lr, [fp, #-508]	; 0xfffffe04
   16f00:	movw	r1, #15016	; 0x3aa8
   16f04:	movw	r2, #15040	; 0x3ac0
   16f08:	movt	r1, #2
   16f0c:	movt	r2, #2
   16f10:	movw	r3, #15028	; 0x3ab4
   16f14:	movt	r3, #2
   16f18:	bl	1678c <_start@@Base+0x12ec>
   16f1c:	mov	r0, #10
   16f20:	bl	14bf8 <putchar@plt>
   16f24:	str	r6, [sp]
   16f28:	ldr	ip, [fp, #-592]	; 0xfffffdb0
   16f2c:	movw	r0, #15044	; 0x3ac4
   16f30:	movw	r1, #15048	; 0x3ac8
   16f34:	movt	r0, #2
   16f38:	movt	r1, #2
   16f3c:	movw	r2, #15056	; 0x3ad0
   16f40:	str	ip, [sp, #4]
   16f44:	movt	r2, #2
   16f48:	ldr	ip, [fp, #-508]	; 0xfffffe04
   16f4c:	movw	r3, #15060	; 0x3ad4
   16f50:	movt	r3, #2
   16f54:	movw	r6, #14808	; 0x39d8
   16f58:	movt	ip, #2
   16f5c:	str	ip, [fp, #-508]	; 0xfffffe04
   16f60:	bl	1678c <_start@@Base+0x12ec>
   16f64:	stm	sp, {r8, sl}
   16f68:	movw	r0, #15068	; 0x3adc
   16f6c:	movw	r1, #15048	; 0x3ac8
   16f70:	movt	r0, #2
   16f74:	movt	r1, #2
   16f78:	movw	r2, #15072	; 0x3ae0
   16f7c:	movw	r3, #15060	; 0x3ad4
   16f80:	movt	r2, #2
   16f84:	movt	r3, #2
   16f88:	bl	1678c <_start@@Base+0x12ec>
   16f8c:	mov	r0, #10
   16f90:	bl	14bf8 <putchar@plt>
   16f94:	mov	r0, #10
   16f98:	bl	14bf8 <putchar@plt>
   16f9c:	ldr	ip, [fp, #-516]	; 0xfffffdfc
   16fa0:	movt	r6, #2
   16fa4:	mov	r8, #1
   16fa8:	cmp	ip, sl
   16fac:	ldr	r3, [fp, #-508]	; 0xfffffe04
   16fb0:	mov	r0, r8
   16fb4:	str	r8, [sp]
   16fb8:	movne	r3, r6
   16fbc:	movw	r1, #15076	; 0x3ae4
   16fc0:	movw	r2, #15096	; 0x3af8
   16fc4:	movt	r1, #2
   16fc8:	movt	r2, #2
   16fcc:	bl	1512c <__printf_chk@plt>
   16fd0:	ldr	ip, [fp, #-520]	; 0xfffffdf8
   16fd4:	ldr	r3, [fp, #-508]	; 0xfffffe04
   16fd8:	mov	r2, #4
   16fdc:	cmp	ip, sl
   16fe0:	str	r2, [sp]
   16fe4:	mov	r0, r8
   16fe8:	movw	r1, #15076	; 0x3ae4
   16fec:	movne	r3, r6
   16ff0:	movt	r1, #2
   16ff4:	movw	r2, #15100	; 0x3afc
   16ff8:	movt	r2, #2
   16ffc:	bl	1512c <__printf_chk@plt>
   17000:	ldr	ip, [fp, #-552]	; 0xfffffdd8
   17004:	cmp	ip, sl
   17008:	beq	176f8 <_start@@Base+0x2258>
   1700c:	cmp	r4, sl
   17010:	beq	17688 <_start@@Base+0x21e8>
   17014:	cmp	r5, sl
   17018:	movwne	r3, #14824	; 0x39e8
   1701c:	movtne	r3, #2
   17020:	bne	17690 <_start@@Base+0x21f0>
   17024:	mov	r0, r8
   17028:	movw	r1, #18388	; 0x47d4
   1702c:	movw	r2, #15104	; 0x3b00
   17030:	movt	r1, #2
   17034:	movt	r2, #2
   17038:	movw	r3, #15336	; 0x3be8
   1703c:	movt	r3, #2
   17040:	bl	1512c <__printf_chk@plt>
   17044:	mov	r0, #10
   17048:	bl	14bf8 <putchar@plt>
   1704c:	ldr	r3, [fp, #-508]	; 0xfffffe04
   17050:	mov	r2, #2
   17054:	movw	r1, #15076	; 0x3ae4
   17058:	str	r2, [sp]
   1705c:	movt	r1, #2
   17060:	movw	r2, #15108	; 0x3b04
   17064:	mov	r0, #1
   17068:	movt	r2, #2
   1706c:	bl	1512c <__printf_chk@plt>
   17070:	ldr	ip, [fp, #-532]	; 0xfffffdec
   17074:	movw	r2, #14816	; 0x39e0
   17078:	movt	r2, #2
   1707c:	cmp	ip, #0
   17080:	mov	r1, #5
   17084:	movw	r3, #14808	; 0x39d8
   17088:	str	r1, [sp]
   1708c:	movt	r3, #2
   17090:	movw	r1, #15076	; 0x3ae4
   17094:	moveq	r3, r2
   17098:	movt	r1, #2
   1709c:	movw	r2, #15112	; 0x3b08
   170a0:	mov	r0, #1
   170a4:	movt	r2, #2
   170a8:	bl	1512c <__printf_chk@plt>
   170ac:	movw	r1, #15116	; 0x3b0c
   170b0:	movw	r2, #15120	; 0x3b10
   170b4:	movt	r1, #2
   170b8:	movt	r2, #2
   170bc:	mov	r0, #1
   170c0:	bl	1512c <__printf_chk@plt>
   170c4:	ldr	r3, [fp, #-488]	; 0xfffffe18
   170c8:	cmp	r3, #0
   170cc:	beq	177b0 <_start@@Base+0x2310>
   170d0:	bl	14e44 <__ctype_b_loc@plt>
   170d4:	ldrb	r3, [fp, #-484]	; 0xfffffe1c
   170d8:	lsl	r3, r3, #1
   170dc:	ldr	r2, [r0]
   170e0:	ldrh	r3, [r2, r3]
   170e4:	tst	r3, #256	; 0x100
   170e8:	bne	17704 <_start@@Base+0x2264>
   170ec:	tst	r3, #512	; 0x200
   170f0:	beq	1710c <_start@@Base+0x1c6c>
   170f4:	movw	r2, #14688	; 0x3960
   170f8:	movt	r2, #2
   170fc:	movw	r1, #15308	; 0x3bcc
   17100:	mov	r0, #1
   17104:	movt	r1, #2
   17108:	bl	1512c <__printf_chk@plt>
   1710c:	mov	r0, #10
   17110:	movw	r5, #14816	; 0x39e0
   17114:	bl	14bf8 <putchar@plt>
   17118:	ldr	r8, [fp, #-536]	; 0xfffffde8
   1711c:	movt	r5, #2
   17120:	movw	r4, #14808	; 0x39d8
   17124:	cmp	r8, #0
   17128:	movt	r4, #2
   1712c:	mov	r2, #3
   17130:	movw	r1, #15076	; 0x3ae4
   17134:	moveq	r3, r5
   17138:	movne	r3, r4
   1713c:	str	r2, [sp]
   17140:	movt	r1, #2
   17144:	movw	r2, #15124	; 0x3b14
   17148:	mov	r0, #1
   1714c:	movt	r2, #2
   17150:	bl	1512c <__printf_chk@plt>
   17154:	ldr	ip, [fp, #-528]	; 0xfffffdf0
   17158:	mov	r2, #6
   1715c:	movw	r1, #15076	; 0x3ae4
   17160:	cmp	ip, #0
   17164:	str	r2, [sp]
   17168:	movt	r1, #2
   1716c:	movw	r2, #15128	; 0x3b18
   17170:	moveq	r3, r5
   17174:	movne	r3, r4
   17178:	movt	r2, #2
   1717c:	mov	r0, #1
   17180:	bl	1512c <__printf_chk@plt>
   17184:	ldrb	r2, [fp, #-492]	; 0xfffffe14
   17188:	movw	r0, #14384	; 0x3830
   1718c:	movw	r3, #14872	; 0x3a18
   17190:	tst	r2, #1
   17194:	movt	r0, #2
   17198:	movt	r3, #2
   1719c:	movw	r1, #18388	; 0x47d4
   171a0:	movw	r2, #15132	; 0x3b1c
   171a4:	movt	r1, #2
   171a8:	moveq	r3, r0
   171ac:	movt	r2, #2
   171b0:	mov	r0, #1
   171b4:	bl	1512c <__printf_chk@plt>
   171b8:	mov	r0, #10
   171bc:	bl	14bf8 <putchar@plt>
   171c0:	ldr	r8, [fp, #-524]	; 0xfffffdf4
   171c4:	mov	r2, #7
   171c8:	movw	r1, #15076	; 0x3ae4
   171cc:	cmp	r8, #0
   171d0:	str	r2, [sp]
   171d4:	movt	r1, #2
   171d8:	movw	r2, #15136	; 0x3b20
   171dc:	moveq	r3, r5
   171e0:	movne	r3, r4
   171e4:	movt	r2, #2
   171e8:	mov	r0, #1
   171ec:	bl	1512c <__printf_chk@plt>
   171f0:	ldr	ip, [fp, #-540]	; 0xfffffde4
   171f4:	mov	r2, #8
   171f8:	movw	r1, #15076	; 0x3ae4
   171fc:	cmp	ip, #0
   17200:	str	r2, [sp]
   17204:	movt	r1, #2
   17208:	movw	r2, #15140	; 0x3b24
   1720c:	movge	r3, r5
   17210:	movlt	r3, r4
   17214:	movt	r2, #2
   17218:	mov	r0, #1
   1721c:	bl	1512c <__printf_chk@plt>
   17220:	movw	r1, #15144	; 0x3b28
   17224:	movw	r2, #15168	; 0x3b40
   17228:	movt	r1, #2
   1722c:	movt	r2, #2
   17230:	mov	r0, #1
   17234:	bl	1512c <__printf_chk@plt>
   17238:	ldrb	r3, [fp, #-492]	; 0xfffffe14
   1723c:	tst	r3, #1
   17240:	bne	17754 <_start@@Base+0x22b4>
   17244:	mov	r0, #10
   17248:	bl	14bf8 <putchar@plt>
   1724c:	mov	r0, #10
   17250:	bl	14bf8 <putchar@plt>
   17254:	ldr	r3, [fp, #-488]	; 0xfffffe18
   17258:	cmp	r3, #0
   1725c:	beq	17274 <_start@@Base+0x1dd4>
   17260:	movw	r1, #15192	; 0x3b58
   17264:	mov	r0, #1
   17268:	movt	r1, #2
   1726c:	ldrb	r2, [fp, #-484]	; 0xfffffe1c
   17270:	bl	1512c <__printf_chk@plt>
   17274:	ldr	r2, [r7]
   17278:	cmp	r2, #0
   1727c:	movne	r4, r7
   17280:	beq	172a0 <_start@@Base+0x1e00>
   17284:	movw	r1, #14584	; 0x38f8
   17288:	mov	r0, #1
   1728c:	movt	r1, #2
   17290:	bl	1512c <__printf_chk@plt>
   17294:	ldr	r2, [r4, #4]!
   17298:	cmp	r2, #0
   1729c:	bne	17284 <_start@@Base+0x1de4>
   172a0:	mov	r0, #10
   172a4:	bl	14bf8 <putchar@plt>
   172a8:	movw	r0, #15204	; 0x3b64
   172ac:	movt	r0, #2
   172b0:	bl	14b80 <puts@plt>
   172b4:	ldr	r8, [fp, #-516]	; 0xfffffdfc
   172b8:	ldr	ip, [fp, #-520]	; 0xfffffdf8
   172bc:	movw	r1, #15212	; 0x3b6c
   172c0:	cmp	r8, #0
   172c4:	movt	r1, #2
   172c8:	mov	r0, #1
   172cc:	movne	r2, #35	; 0x23
   172d0:	moveq	r2, #32
   172d4:	cmp	ip, #0
   172d8:	movne	r3, #35	; 0x23
   172dc:	moveq	r3, #32
   172e0:	bl	1512c <__printf_chk@plt>
   172e4:	ldr	r8, [fp, #-544]	; 0xfffffde0
   172e8:	ldr	ip, [fp, #-532]	; 0xfffffdec
   172ec:	movw	r1, #15224	; 0x3b78
   172f0:	cmp	r8, #0
   172f4:	movt	r1, #2
   172f8:	mov	r0, #1
   172fc:	movne	r2, #35	; 0x23
   17300:	moveq	r2, #32
   17304:	cmp	ip, #0
   17308:	movne	r3, #35	; 0x23
   1730c:	moveq	r3, #32
   17310:	bl	1512c <__printf_chk@plt>
   17314:	ldr	r8, [fp, #-536]	; 0xfffffde8
   17318:	ldr	ip, [fp, #-528]	; 0xfffffdf0
   1731c:	movw	r1, #15236	; 0x3b84
   17320:	cmp	r8, #0
   17324:	movt	r1, #2
   17328:	mov	r0, #1
   1732c:	movne	r2, #35	; 0x23
   17330:	moveq	r2, #32
   17334:	cmp	ip, #0
   17338:	movne	r3, #35	; 0x23
   1733c:	moveq	r3, #32
   17340:	bl	1512c <__printf_chk@plt>
   17344:	ldr	r8, [fp, #-524]	; 0xfffffdf4
   17348:	ldr	ip, [fp, #-540]	; 0xfffffde4
   1734c:	movw	r1, #15248	; 0x3b90
   17350:	cmp	r8, #0
   17354:	movt	r1, #2
   17358:	mov	r0, #1
   1735c:	movne	r2, #35	; 0x23
   17360:	moveq	r2, #32
   17364:	cmp	ip, #0
   17368:	movge	r3, #32
   1736c:	movlt	r3, #35	; 0x23
   17370:	bl	1512c <__printf_chk@plt>
   17374:	movw	r0, #15204	; 0x3b64
   17378:	movt	r0, #2
   1737c:	bl	14b80 <puts@plt>
   17380:	ldr	r2, [fp, #-468]	; 0xfffffe2c
   17384:	cmp	r2, #0
   17388:	beq	173ac <_start@@Base+0x1f0c>
   1738c:	ldr	r3, [fp, #-464]	; 0xfffffe30
   17390:	movw	r1, #15260	; 0x3b9c
   17394:	mov	r0, #1
   17398:	movt	r1, #2
   1739c:	bl	1512c <__printf_chk@plt>
   173a0:	mov	r3, #0
   173a4:	str	r3, [fp, #-468]	; 0xfffffe2c
   173a8:	str	r3, [fp, #-464]	; 0xfffffe30
   173ac:	ldr	r8, [fp, #-572]	; 0xfffffdc4
   173b0:	ldr	r0, [r8]
   173b4:	bl	15048 <fflush@plt>
   173b8:	ldr	r4, [fp, #-480]	; 0xfffffe20
   173bc:	cmn	r4, #1
   173c0:	beq	17474 <_start@@Base+0x1fd4>
   173c4:	ldr	lr, [pc, #1704]	; 17a74 <_start@@Base+0x25d4>
   173c8:	sub	ip, fp, #460	; 0x1cc
   173cc:	ldr	r6, [fp, #-476]	; 0xfffffe24
   173d0:	mov	r4, sp
   173d4:	ldr	r8, [fp, #-512]	; 0xfffffe00
   173d8:	ldm	lr!, {r0, r1, r2, r3}
   173dc:	lsl	r5, r6, #2
   173e0:	add	r5, r5, #10
   173e4:	cmp	r8, r6
   173e8:	movcc	r6, r8
   173ec:	bic	r5, r5, #7
   173f0:	sub	sp, sp, r5
   173f4:	stmia	ip!, {r0, r1, r2, r3}
   173f8:	add	r5, sp, #48	; 0x30
   173fc:	ldm	lr!, {r0, r1, r2, r3}
   17400:	ldr	lr, [lr]
   17404:	stmia	ip!, {r0, r1, r2, r3}
   17408:	mov	r0, r5
   1740c:	mov	r2, r6
   17410:	mov	r1, r7
   17414:	str	lr, [ip]
   17418:	bl	14ba4 <wmemcpy@plt>
   1741c:	ldr	r2, [fp, #-476]	; 0xfffffe24
   17420:	add	r0, r5, r6, lsl #2
   17424:	mov	r1, #32
   17428:	rsb	r2, r6, r2
   1742c:	bl	14da8 <wmemset@plt>
   17430:	ldr	r2, [fp, #-476]	; 0xfffffe24
   17434:	sub	r0, fp, #460	; 0x1cc
   17438:	str	r5, [fp, #-448]	; 0xfffffe40
   1743c:	mov	r1, #1
   17440:	movw	r3, #15284	; 0x3bb4
   17444:	str	r2, [fp, #-452]	; 0xfffffe3c
   17448:	movt	r3, #2
   1744c:	lsl	r2, r2, #2
   17450:	str	r3, [fp, #-428]	; 0xfffffe54
   17454:	str	r2, [fp, #-444]	; 0xfffffe44
   17458:	str	r1, [fp, #-456]	; 0xfffffe38
   1745c:	bl	14f70 <brlapi_write@plt>
   17460:	cmn	r0, #1
   17464:	mov	r5, r0
   17468:	beq	177e8 <_start@@Base+0x2348>
   1746c:	mov	sp, r4
   17470:	ldr	r4, [fp, #-480]	; 0xfffffe20
   17474:	mov	r0, r7
   17478:	bl	14ac0 <free@plt>
   1747c:	sub	r3, fp, #428	; 0x1ac
   17480:	sub	r1, fp, #300	; 0x12c
   17484:	mov	r2, #0
   17488:	str	r2, [r3, #4]!
   1748c:	cmp	r3, r1
   17490:	bne	17488 <_start@@Base+0x1fe8>
   17494:	ldr	r3, [fp, #-424]	; 0xfffffe58
   17498:	cmn	r4, #1
   1749c:	orr	r3, r3, #1
   174a0:	moveq	r1, #1
   174a4:	str	r3, [fp, #-424]	; 0xfffffe58
   174a8:	beq	174ec <_start@@Base+0x204c>
   174ac:	mov	r0, r4
   174b0:	bl	14f7c <__fdelt_chk@plt>
   174b4:	ldr	r3, [fp, #-480]	; 0xfffffe20
   174b8:	sub	lr, fp, #36	; 0x24
   174bc:	mov	ip, #1
   174c0:	bic	r1, r3, r3, asr #31
   174c4:	asr	r2, r3, #31
   174c8:	add	r1, r1, ip
   174cc:	lsr	r2, r2, #27
   174d0:	add	r3, r3, r2
   174d4:	and	r3, r3, #31
   174d8:	rsb	r2, r2, r3
   174dc:	add	r0, lr, r0, lsl #2
   174e0:	ldr	r3, [r0, #-388]	; 0xfffffe7c
   174e4:	orr	r2, r3, ip, lsl r2
   174e8:	str	r2, [r0, #-388]	; 0xfffffe7c
   174ec:	mov	r4, #0
   174f0:	mov	r0, r1
   174f4:	str	r4, [sp]
   174f8:	mov	r2, r4
   174fc:	mov	r3, r4
   17500:	sub	r1, fp, #424	; 0x1a8
   17504:	bl	14e20 <select@plt>
   17508:	ldr	r0, [fp, #-480]	; 0xfffffe20
   1750c:	cmn	r0, #1
   17510:	beq	17548 <_start@@Base+0x20a8>
   17514:	bl	14f7c <__fdelt_chk@plt>
   17518:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1751c:	asr	r2, r3, #31
   17520:	lsr	r2, r2, #27
   17524:	add	r1, r3, r2
   17528:	and	r1, r1, #31
   1752c:	rsb	r2, r2, r1
   17530:	sub	r1, fp, #36	; 0x24
   17534:	add	r0, r1, r0, lsl #2
   17538:	ldr	r1, [r0, #-388]	; 0xfffffe7c
   1753c:	asr	r2, r1, r2
   17540:	tst	r2, #1
   17544:	bne	17768 <_start@@Base+0x22c8>
   17548:	ldr	r3, [fp, #-424]	; 0xfffffe58
   1754c:	tst	r3, #1
   17550:	beq	16b88 <_start@@Base+0x16e8>
   17554:	ldr	r8, [fp, #-584]	; 0xfffffdb8
   17558:	ldr	r0, [r8]
   1755c:	bl	14c7c <fgetwc@plt>
   17560:	cmn	r0, #1
   17564:	beq	175e4 <_start@@Base+0x2144>
   17568:	sub	r3, r0, #1
   1756c:	cmp	r3, #26
   17570:	ldrls	pc, [pc, r3, lsl #2]
   17574:	b	17ba8 <_start@@Base+0x2708>
   17578:	ldrdeq	r7, [r1], -r8
   1757c:	andeq	r7, r1, r0, ror #12
   17580:	andeq	r7, r1, r0, ror #12
   17584:			; <UNDEFINED> instruction: 0x00017abc
   17588:	andeq	r7, r1, r4, lsr #21
   1758c:	andeq	r7, r1, r0, lsl #21
   17590:	andeq	r7, r1, r4, asr sl
   17594:	andeq	r7, r1, r0, asr #20
   17598:	andeq	r7, r1, r8, lsr #20
   1759c:	andeq	r7, r1, r0, lsl sl
   175a0:	strdeq	r7, [r1], -r8
   175a4:	andeq	r7, r1, r4, ror #19
   175a8:	andeq	r7, r1, r0, ror #12
   175ac:	andeq	r7, r1, r0, ror #12
   175b0:	andeq	r7, r1, ip, asr #19
   175b4:	andeq	r7, r1, r0, asr r9
   175b8:	andeq	r7, r1, r0, lsr #18
   175bc:	andeq	r7, r1, r8, lsl #18
   175c0:	andeq	r7, r1, r8, lsr r9
   175c4:	andeq	r7, r1, r0, lsr #17
   175c8:	andeq	r7, r1, r8, lsl #17
   175cc:	andeq	r7, r1, r0, ror #12
   175d0:	andeq	r7, r1, r8, ror #18
   175d4:	andeq	r7, r1, r0, ror #12
   175d8:	andeq	r7, r1, r0, lsl #19
   175dc:	andeq	r7, r1, r4, ror #11
   175e0:	andeq	r7, r1, r4, ror #11
   175e4:	movw	r1, #15008	; 0x3aa0
   175e8:	mov	r0, #1
   175ec:	movt	r1, #2
   175f0:	bl	1512c <__printf_chk@plt>
   175f4:	ldr	ip, [fp, #-572]	; 0xfffffdc4
   175f8:	ldr	r0, [ip]
   175fc:	bl	15048 <fflush@plt>
   17600:	ldr	r8, [fp, #-576]	; 0xfffffdc0
   17604:	ldr	r3, [r8, #16]
   17608:	cmp	r3, #0
   1760c:	bne	17c08 <_start@@Base+0x2768>
   17610:	ldr	r3, [fp, #-480]	; 0xfffffe20
   17614:	cmn	r3, #1
   17618:	beq	17628 <_start@@Base+0x2188>
   1761c:	bl	14ae4 <brlapi_closeConnection@plt>
   17620:	mvn	r3, #0
   17624:	str	r3, [fp, #-480]	; 0xfffffe20
   17628:	ldr	r0, [fp, #-496]	; 0xfffffe10
   1762c:	cmp	r0, #0
   17630:	beq	1763c <_start@@Base+0x219c>
   17634:	bl	21d48 <destroyTextTableData@@Base>
   17638:	mov	r0, #0
   1763c:	ldr	ip, [fp, #-588]	; 0xfffffdb4
   17640:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17644:	ldr	r3, [ip]
   17648:	cmp	r2, r3
   1764c:	bne	17dcc <_start@@Base+0x292c>
   17650:	sub	sp, fp, #32
   17654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17658:	mov	r0, r4
   1765c:	bl	14f4c <fclose@plt>
   17660:	mov	r0, #7
   17664:	bl	14bf8 <putchar@plt>
   17668:	ldr	r3, [fp, #-488]	; 0xfffffe18
   1766c:	cmp	r3, #0
   17670:	bne	16b94 <_start@@Base+0x16f4>
   17674:	ldr	r7, [fp, #-484]	; 0xfffffe1c
   17678:	mov	ip, #1
   1767c:	str	ip, [fp, #-552]	; 0xfffffdd8
   17680:	mov	r6, r7
   17684:	b	16bc0 <_start@@Base+0x1720>
   17688:	movw	r3, #14840	; 0x39f8
   1768c:	movt	r3, #2
   17690:	movw	r1, #18388	; 0x47d4
   17694:	movw	r2, #15104	; 0x3b00
   17698:	movt	r1, #2
   1769c:	movt	r2, #2
   176a0:	mov	r0, #1
   176a4:	bl	1512c <__printf_chk@plt>
   176a8:	mov	r0, #10
   176ac:	bl	14bf8 <putchar@plt>
   176b0:	ldr	r8, [fp, #-544]	; 0xfffffde0
   176b4:	movw	r2, #14816	; 0x39e0
   176b8:	movt	r2, #2
   176bc:	cmp	r8, #0
   176c0:	movw	r3, #14808	; 0x39d8
   176c4:	movt	r3, #2
   176c8:	moveq	r3, r2
   176cc:	b	17050 <_start@@Base+0x1bb0>
   176d0:	mov	ip, r4
   176d4:	str	r4, [fp, #-524]	; 0xfffffdf4
   176d8:	str	r4, [fp, #-528]	; 0xfffffdf0
   176dc:	mov	r5, r4
   176e0:	str	r4, [fp, #-532]	; 0xfffffdec
   176e4:	str	r4, [fp, #-520]	; 0xfffffdf8
   176e8:	str	r4, [fp, #-536]	; 0xfffffde8
   176ec:	str	r4, [fp, #-544]	; 0xfffffde0
   176f0:	str	r4, [fp, #-516]	; 0xfffffdfc
   176f4:	b	16c68 <_start@@Base+0x17c8>
   176f8:	movw	r3, #14384	; 0x3830
   176fc:	movt	r3, #2
   17700:	b	17690 <_start@@Base+0x21f0>
   17704:	movw	r2, #14676	; 0x3954
   17708:	movt	r2, #2
   1770c:	b	170fc <_start@@Base+0x1c5c>
   17710:	mov	r0, r6
   17714:	bl	14f10 <strlen@plt>
   17718:	mov	r3, #32
   1771c:	strb	r3, [r6, #-1]
   17720:	add	sl, r0, sl
   17724:	str	sl, [fp, #-512]	; 0xfffffe00
   17728:	add	r0, sl, #1
   1772c:	b	16e14 <_start@@Base+0x1974>
   17730:	cmp	r7, #127	; 0x7f
   17734:	beq	177d8 <_start@@Base+0x2338>
   17738:	cmp	r7, #94	; 0x5e
   1773c:	movne	ip, r7
   17740:	moveq	ip, r7
   17744:	moveq	r2, r7
   17748:	movne	r2, #32
   1774c:	str	ip, [fp, #-560]	; 0xfffffdd0
   17750:	b	16c0c <_start@@Base+0x176c>
   17754:	movw	r1, #15172	; 0x3b44
   17758:	mov	r0, #1
   1775c:	movt	r1, #2
   17760:	bl	1512c <__printf_chk@plt>
   17764:	b	17244 <_start@@Base+0x1da4>
   17768:	cmn	r3, #1
   1776c:	beq	17548 <_start@@Base+0x20a8>
   17770:	mov	r0, r4
   17774:	sub	r1, fp, #460	; 0x1cc
   17778:	bl	14b20 <brlapi_readKey@plt>
   1777c:	cmp	r0, #1
   17780:	mov	r4, r0
   17784:	beq	17808 <_start@@Base+0x2368>
   17788:	cmn	r0, #1
   1778c:	bne	17548 <_start@@Base+0x20a8>
   17790:	sub	r0, fp, #464	; 0x1d0
   17794:	movw	r3, #14952	; 0x3a68
   17798:	movt	r3, #2
   1779c:	str	r3, [fp, #-468]	; 0xfffffe2c
   177a0:	bl	16774 <_start@@Base+0x12d4>
   177a4:	bl	14ae4 <brlapi_closeConnection@plt>
   177a8:	str	r4, [fp, #-480]	; 0xfffffe20
   177ac:	b	17548 <_start@@Base+0x20a8>
   177b0:	ldr	r4, [fp, #-484]	; 0xfffffe1c
   177b4:	mov	r0, r4
   177b8:	bl	14a9c <iswupper@plt>
   177bc:	cmp	r0, #0
   177c0:	bne	17704 <_start@@Base+0x2264>
   177c4:	mov	r0, r4
   177c8:	bl	14cd0 <iswlower@plt>
   177cc:	cmp	r0, #0
   177d0:	bne	170f4 <_start@@Base+0x1c54>
   177d4:	b	1710c <_start@@Base+0x1c6c>
   177d8:	mov	r8, #63	; 0x3f
   177dc:	mov	r2, #94	; 0x5e
   177e0:	str	r8, [fp, #-560]	; 0xfffffdd0
   177e4:	b	16c0c <_start@@Base+0x176c>
   177e8:	sub	r0, fp, #464	; 0x1d0
   177ec:	movw	r3, #15292	; 0x3bbc
   177f0:	movt	r3, #2
   177f4:	str	r3, [fp, #-468]	; 0xfffffe2c
   177f8:	bl	16774 <_start@@Base+0x12d4>
   177fc:	bl	14ae4 <brlapi_closeConnection@plt>
   17800:	str	r5, [fp, #-480]	; 0xfffffe20
   17804:	b	1746c <_start@@Base+0x1fcc>
   17808:	movw	r3, #65112	; 0xfe58
   1780c:	sub	r8, fp, #36	; 0x24
   17810:	movt	r3, #65535	; 0xffff
   17814:	mov	r0, #-536870912	; 0xe0000000
   17818:	mov	r1, #0
   1781c:	ldrd	r2, [r3, r8]
   17820:	and	r0, r0, r2
   17824:	and	r1, r1, r3
   17828:	orrs	lr, r0, r1
   1782c:	bic	ip, r2, #-536870912	; 0xe0000000
   17830:	beq	17c1c <_start@@Base+0x277c>
   17834:	cmp	r1, #0
   17838:	cmpeq	r0, #536870912	; 0x20000000
   1783c:	bne	1786c <_start@@Base+0x23cc>
   17840:	lsr	r2, ip, #16
   17844:	lsl	r2, r2, #16
   17848:	cmp	r2, #0
   1784c:	beq	17c64 <_start@@Base+0x27c4>
   17850:	cmp	r2, #2228224	; 0x220000
   17854:	bne	1786c <_start@@Base+0x23cc>
   17858:	uxtb	r1, ip
   1785c:	sub	r0, fp, #496	; 0x1f0
   17860:	bl	16888 <_start@@Base+0x13e8>
   17864:	cmp	r0, #0
   17868:	bne	17548 <_start@@Base+0x20a8>
   1786c:	mov	r0, #7
   17870:	bl	14bf8 <putchar@plt>
   17874:	b	17548 <_start@@Base+0x20a8>
   17878:	mov	r0, r5
   1787c:	bl	14f4c <fclose@plt>
   17880:	mov	r0, #4
   17884:	b	1763c <_start@@Base+0x219c>
   17888:	sub	r0, fp, #496	; 0x1f0
   1788c:	mov	r1, #8
   17890:	bl	168ec <_start@@Base+0x144c>
   17894:	cmp	r0, #0
   17898:	bne	16b88 <_start@@Base+0x16e8>
   1789c:	b	17660 <_start@@Base+0x21c0>
   178a0:	ldr	r3, [fp, #-488]	; 0xfffffe18
   178a4:	cmp	r3, #0
   178a8:	beq	17dd0 <_start@@Base+0x2930>
   178ac:	ldrb	r0, [fp, #-484]	; 0xfffffe1c
   178b0:	bl	1f988 <convertCharToWchar@@Base>
   178b4:	cmn	r0, #1
   178b8:	mov	r4, r0
   178bc:	beq	17660 <_start@@Base+0x21c0>
   178c0:	mov	r1, r4
   178c4:	ldr	r0, [fp, #-496]	; 0xfffffe10
   178c8:	bl	21ac8 <getUnicodeCellEntry@@Base>
   178cc:	mov	r1, r4
   178d0:	cmp	r0, #0
   178d4:	beq	178e4 <_start@@Base+0x2444>
   178d8:	ldrb	r3, [r0]
   178dc:	cmp	r3, #0
   178e0:	beq	17dd8 <_start@@Base+0x2938>
   178e4:	ldr	r0, [fp, #-496]	; 0xfffffe10
   178e8:	mov	r2, #0
   178ec:	bl	21bb4 <setTextTableCharacter@@Base>
   178f0:	cmp	r0, #0
   178f4:	beq	17660 <_start@@Base+0x21c0>
   178f8:	ldrb	r3, [fp, #-492]	; 0xfffffe14
   178fc:	orr	r3, r3, #1
   17900:	strb	r3, [fp, #-492]	; 0xfffffe14
   17904:	b	16b88 <_start@@Base+0x16e8>
   17908:	sub	r0, fp, #496	; 0x1f0
   1790c:	mov	r1, #1
   17910:	bl	168ec <_start@@Base+0x144c>
   17914:	cmp	r0, #0
   17918:	bne	16b88 <_start@@Base+0x16e8>
   1791c:	b	17660 <_start@@Base+0x21c0>
   17920:	sub	r0, fp, #496	; 0x1f0
   17924:	mov	r1, #64	; 0x40
   17928:	bl	168ec <_start@@Base+0x144c>
   1792c:	cmp	r0, #0
   17930:	bne	16b88 <_start@@Base+0x16e8>
   17934:	b	17660 <_start@@Base+0x21c0>
   17938:	ldr	r3, [fp, #-488]	; 0xfffffe18
   1793c:	cmp	r3, #0
   17940:	beq	17a68 <_start@@Base+0x25c8>
   17944:	mov	r3, #0
   17948:	strb	r3, [fp, #-484]	; 0xfffffe1c
   1794c:	b	16b88 <_start@@Base+0x16e8>
   17950:	sub	r0, fp, #496	; 0x1f0
   17954:	mov	r1, #128	; 0x80
   17958:	bl	168ec <_start@@Base+0x144c>
   1795c:	cmp	r0, #0
   17960:	bne	16b88 <_start@@Base+0x16e8>
   17964:	b	17660 <_start@@Base+0x21c0>
   17968:	sub	r0, fp, #496	; 0x1f0
   1796c:	mov	r1, #4
   17970:	bl	168ec <_start@@Base+0x144c>
   17974:	cmp	r0, #0
   17978:	bne	16b88 <_start@@Base+0x16e8>
   1797c:	b	17660 <_start@@Base+0x21c0>
   17980:	ldr	r3, [fp, #-488]	; 0xfffffe18
   17984:	cmp	r3, #0
   17988:	beq	17df8 <_start@@Base+0x2958>
   1798c:	bl	14e44 <__ctype_b_loc@plt>
   17990:	ldrb	r4, [fp, #-484]	; 0xfffffe1c
   17994:	lsl	r3, r4, #1
   17998:	ldr	r2, [r0]
   1799c:	ldrh	r3, [r2, r3]
   179a0:	tst	r3, #1024	; 0x400
   179a4:	beq	17660 <_start@@Base+0x21c0>
   179a8:	tst	r3, #512	; 0x200
   179ac:	bne	17de4 <_start@@Base+0x2944>
   179b0:	tst	r3, #256	; 0x100
   179b4:	beq	17660 <_start@@Base+0x21c0>
   179b8:	bl	15090 <__ctype_tolower_loc@plt>
   179bc:	ldr	r3, [r0]
   179c0:	ldr	r3, [r3, r4, lsl #2]
   179c4:	strb	r3, [fp, #-484]	; 0xfffffe1c
   179c8:	b	16b88 <_start@@Base+0x16e8>
   179cc:	sub	r0, fp, #496	; 0x1f0
   179d0:	mov	r1, #32
   179d4:	bl	168ec <_start@@Base+0x144c>
   179d8:	cmp	r0, #0
   179dc:	bne	16b88 <_start@@Base+0x16e8>
   179e0:	b	17660 <_start@@Base+0x21c0>
   179e4:	sub	r0, fp, #496	; 0x1f0
   179e8:	bl	16304 <_start@@Base+0xe64>
   179ec:	cmp	r0, #0
   179f0:	bne	16b88 <_start@@Base+0x16e8>
   179f4:	b	17660 <_start@@Base+0x21c0>
   179f8:	sub	r0, fp, #496	; 0x1f0
   179fc:	mov	r1, #0
   17a00:	bl	1566c <_start@@Base+0x1cc>
   17a04:	cmp	r0, #0
   17a08:	bne	16b88 <_start@@Base+0x16e8>
   17a0c:	b	17660 <_start@@Base+0x21c0>
   17a10:	sub	r0, fp, #496	; 0x1f0
   17a14:	mov	r1, #1
   17a18:	bl	1566c <_start@@Base+0x1cc>
   17a1c:	cmp	r0, #0
   17a20:	bne	16b88 <_start@@Base+0x16e8>
   17a24:	b	17660 <_start@@Base+0x21c0>
   17a28:	sub	r0, fp, #496	; 0x1f0
   17a2c:	mov	r1, #16
   17a30:	bl	168ec <_start@@Base+0x144c>
   17a34:	cmp	r0, #0
   17a38:	bne	16b88 <_start@@Base+0x16e8>
   17a3c:	b	17660 <_start@@Base+0x21c0>
   17a40:	sub	r0, fp, #496	; 0x1f0
   17a44:	bl	162bc <_start@@Base+0xe1c>
   17a48:	cmp	r0, #0
   17a4c:	bne	16b88 <_start@@Base+0x16e8>
   17a50:	b	17660 <_start@@Base+0x21c0>
   17a54:	ldr	r3, [fp, #-488]	; 0xfffffe18
   17a58:	cmp	r3, #0
   17a5c:	mvn	r3, #0
   17a60:	strbne	r3, [fp, #-484]	; 0xfffffe1c
   17a64:	bne	16b88 <_start@@Base+0x16e8>
   17a68:	str	r3, [fp, #-484]	; 0xfffffe1c
   17a6c:	b	16b88 <_start@@Base+0x16e8>
   17a70:	andeq	r6, r3, r0, lsl r3
   17a74:	andeq	r3, r2, r0, lsr #13
   17a78:	andeq	r6, r3, ip, asr #6
   17a7c:	andeq	r6, r3, r0, lsl r3
   17a80:	ldr	r3, [fp, #-488]	; 0xfffffe18
   17a84:	cmp	r3, #0
   17a88:	ldrbne	r3, [fp, #-484]	; 0xfffffe1c
   17a8c:	ldreq	r3, [fp, #-484]	; 0xfffffe1c
   17a90:	addne	r3, r3, #1
   17a94:	addeq	r3, r3, #1
   17a98:	strbne	r3, [fp, #-484]	; 0xfffffe1c
   17a9c:	streq	r3, [fp, #-484]	; 0xfffffe1c
   17aa0:	b	16b88 <_start@@Base+0x16e8>
   17aa4:	sub	r0, fp, #496	; 0x1f0
   17aa8:	mov	r1, #2
   17aac:	bl	168ec <_start@@Base+0x144c>
   17ab0:	cmp	r0, #0
   17ab4:	bne	16b88 <_start@@Base+0x16e8>
   17ab8:	b	17660 <_start@@Base+0x21c0>
   17abc:	ldr	r3, [fp, #-488]	; 0xfffffe18
   17ac0:	cmp	r3, #0
   17ac4:	beq	17da8 <_start@@Base+0x2908>
   17ac8:	ldrb	r3, [fp, #-484]	; 0xfffffe1c
   17acc:	sub	r3, r3, #1
   17ad0:	strb	r3, [fp, #-484]	; 0xfffffe1c
   17ad4:	b	16b88 <_start@@Base+0x16e8>
   17ad8:	ldrb	r3, [fp, #-492]	; 0xfffffe14
   17adc:	tst	r3, #1
   17ae0:	beq	17660 <_start@@Base+0x21c0>
   17ae4:	ldr	ip, [fp, #-576]	; 0xfffffdc0
   17ae8:	movw	r1, #14968	; 0x3a78
   17aec:	mov	r2, #0
   17af0:	movt	r1, #2
   17af4:	ldr	r0, [pc, #-132]	; 17a78 <_start@@Base+0x25d8>
   17af8:	ldr	r3, [ip, #80]	; 0x50
   17afc:	ldr	ip, [fp, #-576]	; 0xfffffdc0
   17b00:	cmp	r3, #0
   17b04:	ldreq	r8, [fp, #-580]	; 0xfffffdbc
   17b08:	ldreq	r3, [r8, #4]
   17b0c:	streq	r3, [r8, #80]	; 0x50
   17b10:	ldr	r3, [ip, #84]	; 0x54
   17b14:	cmp	r3, #0
   17b18:	ldreq	r8, [fp, #-580]	; 0xfffffdbc
   17b1c:	ldreq	r3, [r8, #12]
   17b20:	streq	r3, [r8, #84]	; 0x54
   17b24:	movw	r3, #15996	; 0x3e7c
   17b28:	movt	r3, #2
   17b2c:	str	r3, [sp]
   17b30:	ldr	ip, [fp, #-572]	; 0xfffffdc4
   17b34:	ldr	r3, [ip]
   17b38:	bl	166c4 <_start@@Base+0x1224>
   17b3c:	subs	r4, r0, #0
   17b40:	beq	17660 <_start@@Base+0x21c0>
   17b44:	ldr	r8, [fp, #-580]	; 0xfffffdbc
   17b48:	mov	r1, r4
   17b4c:	ldr	r2, [fp, #-496]	; 0xfffffe10
   17b50:	ldr	r3, [r8, #84]	; 0x54
   17b54:	ldr	r0, [r8, #80]	; 0x50
   17b58:	ldr	ip, [r3, #8]
   17b5c:	ldr	r3, [r3, #12]
   17b60:	blx	ip
   17b64:	cmp	r0, #0
   17b68:	beq	17658 <_start@@Base+0x21b8>
   17b6c:	ldrb	r3, [fp, #-492]	; 0xfffffe14
   17b70:	mov	r0, r4
   17b74:	bfc	r3, #0, #1
   17b78:	strb	r3, [fp, #-492]	; 0xfffffe14
   17b7c:	bl	14f4c <fclose@plt>
   17b80:	b	16b88 <_start@@Base+0x16e8>
   17b84:	sub	r0, fp, #464	; 0x1d0
   17b88:	movw	r3, #14904	; 0x3a38
   17b8c:	movt	r3, #2
   17b90:	str	r3, [fp, #-468]	; 0xfffffe2c
   17b94:	bl	16774 <_start@@Base+0x12d4>
   17b98:	bl	14ae4 <brlapi_closeConnection@plt>
   17b9c:	mvn	r3, #0
   17ba0:	str	r3, [fp, #-480]	; 0xfffffe20
   17ba4:	b	16a4c <_start@@Base+0x15ac>
   17ba8:	sub	r3, r0, #10240	; 0x2800
   17bac:	cmp	r3, #255	; 0xff
   17bb0:	bls	17bd8 <_start@@Base+0x2738>
   17bb4:	ldr	r3, [fp, #-488]	; 0xfffffe18
   17bb8:	cmp	r3, #0
   17bbc:	streq	r0, [fp, #-484]	; 0xfffffe1c
   17bc0:	beq	16b88 <_start@@Base+0x16e8>
   17bc4:	bl	1fa64 <convertWcharToChar@@Base>
   17bc8:	cmn	r0, #1
   17bcc:	strbne	r0, [fp, #-484]	; 0xfffffe1c
   17bd0:	bne	16b88 <_start@@Base+0x16e8>
   17bd4:	b	17660 <_start@@Base+0x21c0>
   17bd8:	uxtb	r1, r0
   17bdc:	sub	r0, fp, #496	; 0x1f0
   17be0:	bl	16888 <_start@@Base+0x13e8>
   17be4:	cmp	r0, #0
   17be8:	bne	16b88 <_start@@Base+0x16e8>
   17bec:	b	17660 <_start@@Base+0x21c0>
   17bf0:	sub	r0, fp, #464	; 0x1d0
   17bf4:	movw	r3, #14928	; 0x3a50
   17bf8:	movt	r3, #2
   17bfc:	str	r3, [fp, #-468]	; 0xfffffe2c
   17c00:	bl	16774 <_start@@Base+0x12d4>
   17c04:	b	16a4c <_start@@Base+0x15ac>
   17c08:	mov	r1, #2
   17c0c:	ldr	r2, [pc, #-408]	; 17a7c <_start@@Base+0x25dc>
   17c10:	mov	r0, #0
   17c14:	bl	14d54 <tcsetattr@plt>
   17c18:	b	17610 <_start@@Base+0x2170>
   17c1c:	cmp	ip, #255	; 0xff
   17c20:	orrls	ip, ip, #16777216	; 0x1000000
   17c24:	and	r3, ip, #520093696	; 0x1f000000
   17c28:	cmp	r3, #16777216	; 0x1000000
   17c2c:	beq	17d74 <_start@@Base+0x28d4>
   17c30:	sub	ip, ip, #65280	; 0xff00
   17c34:	sub	ip, ip, #80	; 0x50
   17c38:	cmp	ip, #7
   17c3c:	ldrls	pc, [pc, ip, lsl #2]
   17c40:	b	1786c <_start@@Base+0x23cc>
   17c44:	andeq	r7, r1, r0, ror #26
   17c48:	andeq	r7, r1, ip, lsr sp
   17c4c:	andeq	r7, r1, r4, lsr #26
   17c50:	andeq	r7, r1, r0, lsl #26
   17c54:	andeq	r7, r1, r8, ror #25
   17c58:	andeq	r7, r1, ip, ror #16
   17c5c:	andeq	r7, r1, ip, ror #16
   17c60:	ldrdeq	r7, [r1], -r4
   17c64:	sub	ip, ip, #1
   17c68:	cmp	ip, #23
   17c6c:	ldrls	pc, [pc, ip, lsl #2]
   17c70:	b	1786c <_start@@Base+0x23cc>
   17c74:	andeq	r7, r1, r4, lsr #26
   17c78:	andeq	r7, r1, r8, ror #25
   17c7c:	andeq	r7, r1, ip, ror #16
   17c80:	andeq	r7, r1, ip, ror #16
   17c84:	andeq	r7, r1, ip, ror #16
   17c88:	andeq	r7, r1, ip, ror #16
   17c8c:	andeq	r7, r1, ip, ror #16
   17c90:	andeq	r7, r1, ip, ror #16
   17c94:	andeq	r7, r1, r0, ror #26
   17c98:	ldrdeq	r7, [r1], -r4
   17c9c:	andeq	r7, r1, r0, ror #26
   17ca0:	ldrdeq	r7, [r1], -r4
   17ca4:	andeq	r7, r1, ip, ror #16
   17ca8:	andeq	r7, r1, ip, ror #16
   17cac:	andeq	r7, r1, ip, ror #16
   17cb0:	andeq	r7, r1, ip, ror #16
   17cb4:	andeq	r7, r1, ip, ror #16
   17cb8:	andeq	r7, r1, ip, ror #16
   17cbc:	andeq	r7, r1, ip, ror #16
   17cc0:	andeq	r7, r1, ip, ror #16
   17cc4:	andeq	r7, r1, ip, ror #16
   17cc8:	andeq	r7, r1, ip, ror #16
   17ccc:	andeq	r7, r1, ip, lsr sp
   17cd0:	andeq	r7, r1, r0, lsl #26
   17cd4:	sub	r0, fp, #496	; 0x1f0
   17cd8:	bl	16304 <_start@@Base+0xe64>
   17cdc:	cmp	r0, #0
   17ce0:	bne	17548 <_start@@Base+0x20a8>
   17ce4:	b	1786c <_start@@Base+0x23cc>
   17ce8:	sub	r0, fp, #496	; 0x1f0
   17cec:	mov	r1, #0
   17cf0:	bl	1566c <_start@@Base+0x1cc>
   17cf4:	cmp	r0, #0
   17cf8:	bne	17548 <_start@@Base+0x20a8>
   17cfc:	b	1786c <_start@@Base+0x23cc>
   17d00:	ldr	r3, [fp, #-488]	; 0xfffffe18
   17d04:	cmp	r3, #0
   17d08:	ldrbne	r3, [fp, #-484]	; 0xfffffe1c
   17d0c:	ldreq	r3, [fp, #-484]	; 0xfffffe1c
   17d10:	addne	r3, r3, #1
   17d14:	addeq	r3, r3, #1
   17d18:	strbne	r3, [fp, #-484]	; 0xfffffe1c
   17d1c:	streq	r3, [fp, #-484]	; 0xfffffe1c
   17d20:	b	17548 <_start@@Base+0x20a8>
   17d24:	sub	r0, fp, #496	; 0x1f0
   17d28:	mov	r1, #1
   17d2c:	bl	1566c <_start@@Base+0x1cc>
   17d30:	cmp	r0, #0
   17d34:	bne	17548 <_start@@Base+0x20a8>
   17d38:	b	1786c <_start@@Base+0x23cc>
   17d3c:	ldr	r3, [fp, #-488]	; 0xfffffe18
   17d40:	cmp	r3, #0
   17d44:	ldrbne	r3, [fp, #-484]	; 0xfffffe1c
   17d48:	ldreq	r3, [fp, #-484]	; 0xfffffe1c
   17d4c:	subne	r3, r3, #1
   17d50:	subeq	r3, r3, #1
   17d54:	strbne	r3, [fp, #-484]	; 0xfffffe1c
   17d58:	streq	r3, [fp, #-484]	; 0xfffffe1c
   17d5c:	b	17548 <_start@@Base+0x20a8>
   17d60:	sub	r0, fp, #496	; 0x1f0
   17d64:	bl	162bc <_start@@Base+0xe1c>
   17d68:	cmp	r0, #0
   17d6c:	bne	17548 <_start@@Base+0x20a8>
   17d70:	b	1786c <_start@@Base+0x23cc>
   17d74:	bic	r0, ip, #-16777216	; 0xff000000
   17d78:	bic	r3, r0, #255	; 0xff
   17d7c:	cmp	r3, #10240	; 0x2800
   17d80:	beq	17858 <_start@@Base+0x23b8>
   17d84:	ldr	r3, [fp, #-488]	; 0xfffffe18
   17d88:	cmp	r3, #0
   17d8c:	streq	r0, [fp, #-484]	; 0xfffffe1c
   17d90:	beq	17548 <_start@@Base+0x20a8>
   17d94:	bl	1fa64 <convertWcharToChar@@Base>
   17d98:	cmn	r0, #1
   17d9c:	strbne	r0, [fp, #-484]	; 0xfffffe1c
   17da0:	bne	17548 <_start@@Base+0x20a8>
   17da4:	b	1786c <_start@@Base+0x23cc>
   17da8:	ldr	r3, [fp, #-484]	; 0xfffffe1c
   17dac:	sub	r3, r3, #1
   17db0:	b	17a68 <_start@@Base+0x25c8>
   17db4:	sub	r0, fp, #464	; 0x1d0
   17db8:	movw	r3, #14884	; 0x3a24
   17dbc:	movt	r3, #2
   17dc0:	str	r3, [fp, #-468]	; 0xfffffe2c
   17dc4:	bl	16774 <_start@@Base+0x12d4>
   17dc8:	b	17b98 <_start@@Base+0x26f8>
   17dcc:	bl	14d9c <__stack_chk_fail@plt>
   17dd0:	ldr	r4, [fp, #-484]	; 0xfffffe1c
   17dd4:	b	178c0 <_start@@Base+0x2420>
   17dd8:	ldr	r0, [fp, #-496]	; 0xfffffe10
   17ddc:	bl	21c20 <unsetTextTableCharacter@@Base>
   17de0:	b	178f8 <_start@@Base+0x2458>
   17de4:	bl	14cc4 <__ctype_toupper_loc@plt>
   17de8:	ldr	r3, [r0]
   17dec:	ldr	r3, [r3, r4, lsl #2]
   17df0:	strb	r3, [fp, #-484]	; 0xfffffe1c
   17df4:	b	16b88 <_start@@Base+0x16e8>
   17df8:	ldr	r4, [fp, #-484]	; 0xfffffe1c
   17dfc:	mov	r0, r4
   17e00:	bl	14acc <iswalpha@plt>
   17e04:	cmp	r0, #0
   17e08:	beq	17660 <_start@@Base+0x21c0>
   17e0c:	mov	r0, r4
   17e10:	bl	14cd0 <iswlower@plt>
   17e14:	cmp	r0, #0
   17e18:	mov	r0, r4
   17e1c:	bne	17e3c <_start@@Base+0x299c>
   17e20:	bl	14a9c <iswupper@plt>
   17e24:	cmp	r0, #0
   17e28:	beq	17660 <_start@@Base+0x21c0>
   17e2c:	mov	r0, r4
   17e30:	bl	14a3c <towlower@plt>
   17e34:	str	r0, [fp, #-484]	; 0xfffffe1c
   17e38:	b	16b88 <_start@@Base+0x16e8>
   17e3c:	bl	1503c <towupper@plt>
   17e40:	str	r0, [fp, #-484]	; 0xfffffe1c
   17e44:	b	16b88 <_start@@Base+0x16e8>
   17e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e4c:	movw	r5, #25340	; 0x62fc
   17e50:	sub	sp, sp, #100	; 0x64
   17e54:	movt	r5, #3
   17e58:	movw	ip, #25328	; 0x62f0
   17e5c:	movt	ip, #3
   17e60:	str	ip, [sp, #72]	; 0x48
   17e64:	ldr	ip, [r5]
   17e68:	ldr	lr, [sp, #72]	; 0x48
   17e6c:	str	r3, [sp, #44]	; 0x2c
   17e70:	ldrb	r3, [ip]
   17e74:	str	r0, [sp, #36]	; 0x24
   17e78:	ldr	r0, [lr]
   17e7c:	cmp	r3, #0
   17e80:	str	r1, [sp, #32]
   17e84:	str	r2, [sp, #40]	; 0x28
   17e88:	str	r0, [sp, #92]	; 0x5c
   17e8c:	beq	17f70 <_start@@Base+0x2ad0>
   17e90:	add	ip, sp, #96	; 0x60
   17e94:	strd	r6, [sp, #24]
   17e98:	ldr	r6, [sp, #44]	; 0x2c
   17e9c:	mov	r3, #0
   17ea0:	mov	r0, r3
   17ea4:	strb	r3, [ip, #-5]!
   17ea8:	mov	r4, r1
   17eac:	mov	r7, ip
   17eb0:	str	r5, [sp, #48]	; 0x30
   17eb4:	bl	1f988 <convertCharToWchar@@Base>
   17eb8:	cmn	r0, #1
   17ebc:	mov	sl, r0
   17ec0:	beq	17f50 <_start@@Base+0x2ab0>
   17ec4:	mov	r0, r4
   17ec8:	mov	r1, sl
   17ecc:	bl	21ac8 <getUnicodeCellEntry@@Base>
   17ed0:	subs	r5, r0, #0
   17ed4:	beq	17f50 <_start@@Base+0x2ab0>
   17ed8:	mov	r0, r4
   17edc:	ldrb	fp, [r5]
   17ee0:	bl	218b8 <getTextTableHeader@@Base>
   17ee4:	mov	r9, #0
   17ee8:	and	ip, fp, #7
   17eec:	add	r3, r0, fp, lsr #3
   17ef0:	ldrb	r2, [r3, #1536]	; 0x600
   17ef4:	mov	r3, #0
   17ef8:	and	r3, r3, r9
   17efc:	lsr	r8, r2, ip
   17f00:	mov	r2, #1
   17f04:	and	r2, r2, r8
   17f08:	orrs	r1, r2, r3
   17f0c:	moveq	r3, r9
   17f10:	beq	17f28 <_start@@Base+0x2a88>
   17f14:	add	fp, fp, #128	; 0x80
   17f18:	ldr	r3, [r0, fp, lsl #2]
   17f1c:	subs	r1, sl, r3
   17f20:	rsbs	r3, r1, #0
   17f24:	adcs	r3, r3, r1
   17f28:	ldrb	r2, [r5]
   17f2c:	mov	r1, sl
   17f30:	str	r3, [sp]
   17f34:	mov	r3, r7
   17f38:	ldr	r0, [sp, #36]	; 0x24
   17f3c:	str	r6, [sp, #4]
   17f40:	ldr	ip, [sp, #40]	; 0x28
   17f44:	blx	ip
   17f48:	cmp	r0, #0
   17f4c:	beq	17fc0 <_start@@Base+0x2b20>
   17f50:	ldrb	r0, [sp, #91]	; 0x5b
   17f54:	add	r0, r0, #1
   17f58:	uxtb	r0, r0
   17f5c:	strb	r0, [sp, #91]	; 0x5b
   17f60:	cmp	r0, #0
   17f64:	bne	17eb4 <_start@@Base+0x2a14>
   17f68:	ldrd	r6, [sp, #24]
   17f6c:	ldr	r5, [sp, #48]	; 0x30
   17f70:	ldr	r0, [sp, #32]
   17f74:	mov	r8, #1
   17f78:	bl	218b8 <getTextTableHeader@@Base>
   17f7c:	mov	r9, #0
   17f80:	mov	ip, #0
   17f84:	str	r5, [sp, #84]	; 0x54
   17f88:	str	ip, [sp, #60]	; 0x3c
   17f8c:	sub	r0, r0, #4
   17f90:	str	r0, [sp, #68]	; 0x44
   17f94:	ldr	ip, [sp, #68]	; 0x44
   17f98:	ldr	r1, [ip, #4]!
   17f9c:	cmp	r1, #0
   17fa0:	str	ip, [sp, #68]	; 0x44
   17fa4:	bne	17fdc <_start@@Base+0x2b3c>
   17fa8:	ldr	ip, [sp, #60]	; 0x3c
   17fac:	add	ip, ip, #1
   17fb0:	str	ip, [sp, #60]	; 0x3c
   17fb4:	cmp	ip, #128	; 0x80
   17fb8:	bne	17f94 <_start@@Base+0x2af4>
   17fbc:	mov	r0, #1
   17fc0:	ldr	ip, [sp, #72]	; 0x48
   17fc4:	ldr	r2, [sp, #92]	; 0x5c
   17fc8:	ldr	r3, [ip]
   17fcc:	cmp	r2, r3
   17fd0:	bne	1819c <_start@@Base+0x2cfc>
   17fd4:	add	sp, sp, #100	; 0x64
   17fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fdc:	ldr	r0, [sp, #32]
   17fe0:	mov	r4, r6
   17fe4:	bl	218b0 <getTextTableItem@@Base>
   17fe8:	ldr	ip, [sp, #60]	; 0x3c
   17fec:	mov	r5, r7
   17ff0:	lsl	ip, ip, #24
   17ff4:	str	ip, [sp, #80]	; 0x50
   17ff8:	mov	ip, #0
   17ffc:	str	ip, [sp, #56]	; 0x38
   18000:	sub	r0, r0, #4
   18004:	str	r0, [sp, #64]	; 0x40
   18008:	ldr	ip, [sp, #64]	; 0x40
   1800c:	ldr	r1, [ip, #4]!
   18010:	cmp	r1, #0
   18014:	str	ip, [sp, #64]	; 0x40
   18018:	bne	1803c <_start@@Base+0x2b9c>
   1801c:	ldr	ip, [sp, #56]	; 0x38
   18020:	add	ip, ip, #1
   18024:	str	ip, [sp, #56]	; 0x38
   18028:	cmp	ip, #256	; 0x100
   1802c:	bne	18008 <_start@@Base+0x2b68>
   18030:	mov	r6, r4
   18034:	mov	r7, r5
   18038:	b	17fa8 <_start@@Base+0x2b08>
   1803c:	ldr	r0, [sp, #32]
   18040:	bl	218b0 <getTextTableItem@@Base>
   18044:	ldr	r1, [sp, #56]	; 0x38
   18048:	ldr	ip, [sp, #80]	; 0x50
   1804c:	ldr	sl, [sp, #84]	; 0x54
   18050:	orr	ip, ip, r1, lsl #16
   18054:	str	ip, [sp, #76]	; 0x4c
   18058:	mov	ip, #0
   1805c:	str	ip, [sp, #48]	; 0x30
   18060:	sub	r0, r0, #4
   18064:	str	r0, [sp, #52]	; 0x34
   18068:	b	18080 <_start@@Base+0x2be0>
   1806c:	ldr	ip, [sp, #48]	; 0x30
   18070:	add	ip, ip, #1
   18074:	str	ip, [sp, #48]	; 0x30
   18078:	cmp	ip, #256	; 0x100
   1807c:	beq	1801c <_start@@Base+0x2b7c>
   18080:	ldr	ip, [sp, #52]	; 0x34
   18084:	ldr	r1, [ip, #4]!
   18088:	cmp	r1, #0
   1808c:	str	ip, [sp, #52]	; 0x34
   18090:	beq	1806c <_start@@Base+0x2bcc>
   18094:	ldr	lr, [sp, #48]	; 0x30
   18098:	mov	r6, #0
   1809c:	ldr	ip, [sp, #76]	; 0x4c
   180a0:	ldr	r0, [sp, #32]
   180a4:	orr	ip, ip, lr, lsl #8
   180a8:	str	ip, [sp, #24]
   180ac:	bl	218b0 <getTextTableItem@@Base>
   180b0:	mov	r7, r0
   180b4:	b	180d4 <_start@@Base+0x2c34>
   180b8:	mov	r0, fp
   180bc:	bl	1fa64 <convertWcharToChar@@Base>
   180c0:	cmn	r0, #1
   180c4:	beq	18110 <_start@@Base+0x2c70>
   180c8:	add	r6, r6, #1
   180cc:	cmp	r6, #256	; 0x100
   180d0:	beq	1806c <_start@@Base+0x2bcc>
   180d4:	add	r3, r7, r6, lsr #3
   180d8:	and	r1, r6, #7
   180dc:	mov	r5, #0
   180e0:	ldrb	r2, [r3, #256]	; 0x100
   180e4:	and	r3, r5, r9
   180e8:	lsr	r4, r2, r1
   180ec:	and	r2, r4, r8
   180f0:	orrs	r1, r2, r3
   180f4:	beq	180c8 <_start@@Base+0x2c28>
   180f8:	ldr	r3, [sl]
   180fc:	ldr	ip, [sp, #24]
   18100:	ldrb	r3, [r3]
   18104:	orr	fp, r6, ip
   18108:	cmp	r3, #0
   1810c:	bne	180b8 <_start@@Base+0x2c18>
   18110:	ldrb	r1, [r7, r6]
   18114:	ldr	r0, [sp, #32]
   18118:	str	r1, [sp, #12]
   1811c:	bl	218b8 <getTextTableHeader@@Base>
   18120:	ldr	r1, [sp, #12]
   18124:	mov	lr, #0
   18128:	str	lr, [sp, #20]
   1812c:	and	ip, r1, #7
   18130:	add	r3, r0, r1, lsr #3
   18134:	ldrb	r2, [r3, #1536]	; 0x600
   18138:	lsr	ip, r2, ip
   1813c:	str	ip, [sp, #16]
   18140:	ldrd	r2, [sp, #16]
   18144:	and	r3, r3, r9
   18148:	and	r2, r2, r8
   1814c:	orrs	ip, r2, r3
   18150:	moveq	r3, lr
   18154:	beq	1816c <_start@@Base+0x2ccc>
   18158:	add	r1, r1, #128	; 0x80
   1815c:	ldr	r3, [r0, r1, lsl #2]
   18160:	subs	r2, fp, r3
   18164:	rsbs	r3, r2, #0
   18168:	adcs	r3, r3, r2
   1816c:	ldr	ip, [sp, #44]	; 0x2c
   18170:	mov	r1, fp
   18174:	ldrb	r2, [r7, r6]
   18178:	ldr	r0, [sp, #36]	; 0x24
   1817c:	str	r3, [sp]
   18180:	mov	r3, #0
   18184:	str	ip, [sp, #4]
   18188:	ldr	ip, [sp, #40]	; 0x28
   1818c:	blx	ip
   18190:	cmp	r0, #0
   18194:	bne	180c8 <_start@@Base+0x2c28>
   18198:	b	17fc0 <_start@@Base+0x2b20>
   1819c:	bl	14d9c <__stack_chk_fail@plt>
   181a0:	push	{r3, r4, r5, lr}
   181a4:	movw	r3, #25636	; 0x6424
   181a8:	movt	r3, #3
   181ac:	mov	r0, r1
   181b0:	mov	r4, r1
   181b4:	mov	r5, r2
   181b8:	ldr	r3, [r3]
   181bc:	movw	r2, #15356	; 0x3bfc
   181c0:	mov	r1, #1
   181c4:	movt	r2, #2
   181c8:	bl	14bc8 <__fprintf_chk@plt>
   181cc:	cmn	r0, #1
   181d0:	beq	181f8 <_start@@Base+0x2d58>
   181d4:	mov	r0, r4
   181d8:	mov	r1, r5
   181dc:	mov	r3, #0
   181e0:	movw	r2, #25000	; 0x61a8
   181e4:	movt	r2, #1
   181e8:	bl	17e48 <_start@@Base+0x29a8>
   181ec:	adds	r0, r0, #0
   181f0:	movne	r0, #1
   181f4:	pop	{r3, r4, r5, pc}
   181f8:	mov	r0, #0
   181fc:	pop	{r3, r4, r5, pc}
   18200:	push	{r3, r4, r5, lr}
   18204:	movw	r3, #25636	; 0x6424
   18208:	movt	r3, #3
   1820c:	mov	r0, r1
   18210:	mov	r4, r1
   18214:	mov	r5, r2
   18218:	ldr	r3, [r3]
   1821c:	movw	r2, #15376	; 0x3c10
   18220:	mov	r1, #1
   18224:	movt	r2, #2
   18228:	bl	14bc8 <__fprintf_chk@plt>
   1822c:	cmn	r0, #1
   18230:	beq	18258 <_start@@Base+0x2db8>
   18234:	mov	r0, r4
   18238:	mov	r1, r5
   1823c:	mov	r3, #0
   18240:	movw	r2, #24592	; 0x6010
   18244:	movt	r2, #1
   18248:	bl	17e48 <_start@@Base+0x29a8>
   1824c:	adds	r0, r0, #0
   18250:	movne	r0, #1
   18254:	pop	{r3, r4, r5, pc}
   18258:	mov	r0, #0
   1825c:	pop	{r3, r4, r5, pc}
   18260:	movw	ip, #25636	; 0x6424
   18264:	movt	ip, #3
   18268:	push	{r4, r5, r6, lr}
   1826c:	mov	r0, r1
   18270:	mov	r4, r1
   18274:	mov	r6, r2
   18278:	mov	r5, r3
   1827c:	movw	r2, #15376	; 0x3c10
   18280:	ldr	r3, [ip]
   18284:	mov	r1, #1
   18288:	movt	r2, #2
   1828c:	bl	14bc8 <__fprintf_chk@plt>
   18290:	cmn	r0, #1
   18294:	beq	182bc <_start@@Base+0x2e1c>
   18298:	mov	r0, r4
   1829c:	mov	r1, r6
   182a0:	mov	r3, r5
   182a4:	movw	r2, #25424	; 0x6350
   182a8:	movt	r2, #1
   182ac:	bl	17e48 <_start@@Base+0x29a8>
   182b0:	adds	r0, r0, #0
   182b4:	movne	r0, #1
   182b8:	pop	{r4, r5, r6, pc}
   182bc:	mov	r0, #0
   182c0:	pop	{r4, r5, r6, pc}
   182c4:	push	{r4, r5, r6, lr}
   182c8:	mov	r0, r1
   182cc:	mov	r4, r1
   182d0:	mov	r6, r2
   182d4:	mov	r1, #1
   182d8:	movw	r2, #15396	; 0x3c24
   182dc:	movt	r2, #2
   182e0:	mov	r5, r3
   182e4:	bl	14bc8 <__fprintf_chk@plt>
   182e8:	cmn	r0, #1
   182ec:	beq	1833c <_start@@Base+0x2e9c>
   182f0:	movw	ip, #25636	; 0x6424
   182f4:	movt	ip, #3
   182f8:	movw	r2, #15376	; 0x3c10
   182fc:	mov	r0, r4
   18300:	ldr	r3, [ip]
   18304:	movt	r2, #2
   18308:	mov	r1, #1
   1830c:	bl	14bc8 <__fprintf_chk@plt>
   18310:	cmn	r0, #1
   18314:	beq	1833c <_start@@Base+0x2e9c>
   18318:	mov	r0, r4
   1831c:	mov	r1, r6
   18320:	mov	r3, r5
   18324:	movw	r2, #22912	; 0x5980
   18328:	movt	r2, #1
   1832c:	bl	17e48 <_start@@Base+0x29a8>
   18330:	adds	r0, r0, #0
   18334:	movne	r0, #1
   18338:	pop	{r4, r5, r6, pc}
   1833c:	mov	r0, #0
   18340:	pop	{r4, r5, r6, pc}
   18344:	movw	ip, #25636	; 0x6424
   18348:	movt	ip, #3
   1834c:	push	{r4, r5, r6, lr}
   18350:	mov	r0, r1
   18354:	mov	r4, r1
   18358:	mov	r6, r2
   1835c:	mov	r5, r3
   18360:	movw	r2, #15412	; 0x3c34
   18364:	ldr	r3, [ip]
   18368:	mov	r1, #1
   1836c:	movt	r2, #2
   18370:	bl	14bc8 <__fprintf_chk@plt>
   18374:	cmn	r0, #1
   18378:	beq	183f0 <_start@@Base+0x2f50>
   1837c:	movw	r0, #25340	; 0x62fc
   18380:	movt	r0, #3
   18384:	ldr	r3, [r0]
   18388:	ldrb	ip, [r3]
   1838c:	cmp	ip, #0
   18390:	beq	183b0 <_start@@Base+0x2f10>
   18394:	movw	r2, #15432	; 0x3c48
   18398:	mov	r0, r4
   1839c:	movt	r2, #2
   183a0:	mov	r1, #1
   183a4:	bl	14bc8 <__fprintf_chk@plt>
   183a8:	cmn	r0, #1
   183ac:	beq	183f0 <_start@@Base+0x2f50>
   183b0:	movw	r2, #15200	; 0x3b60
   183b4:	mov	r0, r4
   183b8:	movt	r2, #2
   183bc:	mov	r1, #1
   183c0:	bl	14bc8 <__fprintf_chk@plt>
   183c4:	cmn	r0, #1
   183c8:	beq	183f0 <_start@@Base+0x2f50>
   183cc:	mov	r0, r4
   183d0:	mov	r1, r6
   183d4:	mov	r3, r5
   183d8:	movw	r2, #23724	; 0x5cac
   183dc:	movt	r2, #1
   183e0:	bl	17e48 <_start@@Base+0x29a8>
   183e4:	adds	r0, r0, #0
   183e8:	movne	r0, #1
   183ec:	pop	{r4, r5, r6, pc}
   183f0:	mov	r0, #0
   183f4:	pop	{r4, r5, r6, pc}

000183f8 <endProgram@@Base>:
   183f8:	push	{r3, r4, r5, lr}
   183fc:	ldr	r5, [pc, #48]	; 18434 <endProgram@@Base+0x3c>
   18400:	add	r5, pc, r5
   18404:	ldr	r4, [r5]
   18408:	cmp	r4, #0
   1840c:	popeq	{r3, r4, r5, pc}
   18410:	ldm	r4, {r2, r3}
   18414:	str	r2, [r5]
   18418:	blx	r3
   1841c:	mov	r0, r4
   18420:	bl	14ac0 <free@plt>
   18424:	ldr	r4, [r5]
   18428:	cmp	r4, #0
   1842c:	bne	18410 <endProgram@@Base+0x18>
   18430:	pop	{r3, r4, r5, pc}
   18434:	andeq	sp, r1, r8, asr pc
   18438:	push	{r3, r4, r5, lr}
   1843c:	bl	1ae1c <makePath@@Base>
   18440:	subs	r4, r0, #0
   18444:	beq	1845c <endProgram@@Base+0x64>
   18448:	bl	1b074 <testProgramPath@@Base>
   1844c:	subs	r5, r0, #0
   18450:	mov	r0, r4
   18454:	beq	18464 <endProgram@@Base+0x6c>
   18458:	pop	{r3, r4, r5, pc}
   1845c:	mov	r0, r4
   18460:	pop	{r3, r4, r5, pc}
   18464:	bl	14ac0 <free@plt>
   18468:	mov	r0, r5
   1846c:	pop	{r3, r4, r5, pc}

00018470 <beginProgram@@Base>:
   18470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18474:	sub	sp, sp, #4096	; 0x1000
   18478:	ldr	r4, [pc, #564]	; 186b4 <beginProgram@@Base+0x244>
   1847c:	sub	sp, sp, #20
   18480:	ldr	r2, [pc, #560]	; 186b8 <beginProgram@@Base+0x248>
   18484:	mov	r7, r1
   18488:	add	r4, pc, r4
   1848c:	ldr	r3, [pc, #552]	; 186bc <beginProgram@@Base+0x24c>
   18490:	add	r1, sp, #8192	; 0x2000
   18494:	ldr	r5, [pc, #548]	; 186c0 <beginProgram@@Base+0x250>
   18498:	ldr	r6, [r4, r2]
   1849c:	add	r5, pc, r5
   184a0:	ldr	r2, [r6]
   184a4:	str	r2, [r1, #-4084]	; 0xfffff00c
   184a8:	ldr	r0, [r4, r3]
   184ac:	bl	235dc <__libc_csu_fini@@Base+0x4>
   184b0:	ldr	r1, [pc, #524]	; 186c4 <beginProgram@@Base+0x254>
   184b4:	mov	r0, #6
   184b8:	add	r1, pc, r1
   184bc:	bl	14e80 <setlocale@plt>
   184c0:	ldr	r1, [pc, #512]	; 186c8 <beginProgram@@Base+0x258>
   184c4:	mov	r0, r5
   184c8:	add	r1, pc, r1
   184cc:	bl	14e50 <bindtextdomain@plt>
   184d0:	mov	r0, r5
   184d4:	bl	14bb0 <textdomain@plt>
   184d8:	bl	1d6ac <getProgramPath@@Base>
   184dc:	ldr	r3, [pc, #488]	; 186cc <beginProgram@@Base+0x25c>
   184e0:	ldr	r5, [r4, r3]
   184e4:	cmp	r0, #0
   184e8:	str	r0, [r5]
   184ec:	ldreq	r0, [r7]
   184f0:	streq	r0, [r5]
   184f4:	bl	1ae04 <isExplicitPath@@Base>
   184f8:	subs	fp, r0, #0
   184fc:	beq	18590 <beginProgram@@Base+0x120>
   18500:	ldr	r0, [r5]
   18504:	bl	1ae04 <isExplicitPath@@Base>
   18508:	cmp	r0, #0
   1850c:	bne	18548 <beginProgram@@Base+0xd8>
   18510:	ldr	r0, [r5]
   18514:	bl	1ad9c <locatePathName@@Base>
   18518:	ldr	r3, [pc, #432]	; 186d0 <beginProgram@@Base+0x260>
   1851c:	ldr	r3, [r4, r3]
   18520:	str	r0, [r3]
   18524:	bl	1a660 <setLogPrefix@@Base>
   18528:	add	r3, sp, #8192	; 0x2000
   1852c:	ldr	r2, [r3, #-4084]	; 0xfffff00c
   18530:	ldr	r3, [r6]
   18534:	cmp	r2, r3
   18538:	bne	186b0 <beginProgram@@Base+0x240>
   1853c:	add	sp, sp, #4096	; 0x1000
   18540:	add	sp, sp, #20
   18544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18548:	ldr	r0, [r5]
   1854c:	bl	1ac8c <isAbsolutePath@@Base>
   18550:	cmp	r0, #0
   18554:	ldr	r0, [r5]
   18558:	beq	18668 <beginProgram@@Base+0x1f8>
   1855c:	bl	1ac8c <isAbsolutePath@@Base>
   18560:	cmp	r0, #0
   18564:	bne	18510 <beginProgram@@Base+0xa0>
   18568:	bl	1b2cc <getWorkingDirectory@@Base>
   1856c:	subs	r7, r0, #0
   18570:	beq	18510 <beginProgram@@Base+0xa0>
   18574:	ldr	r1, [r5]
   18578:	bl	1ae1c <makePath@@Base>
   1857c:	cmp	r0, #0
   18580:	strne	r0, [r5]
   18584:	mov	r0, r7
   18588:	bl	14ac0 <free@plt>
   1858c:	b	18510 <beginProgram@@Base+0xa0>
   18590:	ldr	r0, [pc, #316]	; 186d4 <beginProgram@@Base+0x264>
   18594:	ldr	r7, [r5]
   18598:	add	r0, pc, r0
   1859c:	bl	150c0 <getenv@plt>
   185a0:	cmp	r0, #0
   185a4:	beq	1864c <beginProgram@@Base+0x1dc>
   185a8:	mov	r1, #58	; 0x3a
   185ac:	add	r2, sp, #8
   185b0:	bl	1c010 <splitString@@Base>
   185b4:	cmp	r0, #0
   185b8:	str	r0, [sp, #4]
   185bc:	beq	1864c <beginProgram@@Base+0x1dc>
   185c0:	add	r2, sp, #4096	; 0x1000
   185c4:	movw	r9, #61432	; 0xeff8
   185c8:	add	r2, r2, #16
   185cc:	movt	r9, #65535	; 0xffff
   185d0:	ldr	r3, [r2, r9]
   185d4:	cmp	r3, #0
   185d8:	ble	18644 <beginProgram@@Base+0x1d4>
   185dc:	ldr	r8, [pc, #244]	; 186d8 <beginProgram@@Base+0x268>
   185e0:	ldr	r3, [sp, #4]
   185e4:	add	r8, pc, r8
   185e8:	sub	sl, r3, #4
   185ec:	b	18608 <beginProgram@@Base+0x198>
   185f0:	add	r1, sp, #4096	; 0x1000
   185f4:	add	fp, fp, #1
   185f8:	add	r1, r1, #16
   185fc:	ldr	r2, [r1, r9]
   18600:	cmp	fp, r2
   18604:	bge	18644 <beginProgram@@Base+0x1d4>
   18608:	ldr	r0, [sl, #4]!
   1860c:	mov	r1, r7
   18610:	ldrb	r2, [r0]
   18614:	cmp	r2, #0
   18618:	moveq	r0, r8
   1861c:	bl	18438 <endProgram@@Base+0x40>
   18620:	subs	r2, r0, #0
   18624:	beq	185f0 <beginProgram@@Base+0x180>
   18628:	ldr	r0, [sp, #4]
   1862c:	str	r2, [sp]
   18630:	bl	1bfdc <deallocateStrings@@Base>
   18634:	ldr	r2, [sp]
   18638:	mov	r0, r2
   1863c:	str	r2, [r5]
   18640:	b	18504 <beginProgram@@Base+0x94>
   18644:	ldr	r0, [sp, #4]
   18648:	bl	1bfdc <deallocateStrings@@Base>
   1864c:	ldr	r0, [pc, #136]	; 186dc <beginProgram@@Base+0x26c>
   18650:	ldr	r1, [r5]
   18654:	add	r0, pc, r0
   18658:	bl	18438 <endProgram@@Base+0x40>
   1865c:	subs	r2, r0, #0
   18660:	beq	18500 <beginProgram@@Base+0x90>
   18664:	b	18638 <beginProgram@@Base+0x1c8>
   18668:	add	r1, sp, #12
   1866c:	mov	r2, #4096	; 0x1000
   18670:	bl	14fac <__realpath_chk@plt>
   18674:	cmp	r0, #0
   18678:	beq	18690 <beginProgram@@Base+0x220>
   1867c:	bl	14c4c <__strdup@plt>
   18680:	cmp	r0, #0
   18684:	beq	186a4 <beginProgram@@Base+0x234>
   18688:	str	r0, [r5]
   1868c:	b	1855c <beginProgram@@Base+0xec>
   18690:	ldr	r0, [pc, #72]	; 186e0 <beginProgram@@Base+0x270>
   18694:	add	r0, pc, r0
   18698:	bl	1ab50 <logSystemError@@Base>
   1869c:	ldr	r0, [r5]
   186a0:	b	1855c <beginProgram@@Base+0xec>
   186a4:	bl	1ab94 <logMallocError@@Base>
   186a8:	ldr	r0, [r5]
   186ac:	b	1855c <beginProgram@@Base+0xec>
   186b0:	bl	14d9c <__stack_chk_fail@plt>
   186b4:	andeq	sp, r1, r0, ror fp
   186b8:	andeq	r0, r0, r4, lsl #5
   186bc:	andeq	r0, r0, r8, lsr #5
   186c0:	andeq	fp, r0, r4, lsl #20
   186c4:	andeq	fp, r0, r0, ror r3
   186c8:	andeq	fp, r0, r0, ror #19
   186cc:			; <UNDEFINED> instruction: 0x000002bc
   186d0:			; <UNDEFINED> instruction: 0x000002b0
   186d4:	andeq	fp, r0, r4, lsr #18
   186d8:	andeq	fp, r0, r0, lsr #15
   186dc:	andeq	fp, r0, r0, lsr r7
   186e0:	andeq	fp, r0, r0, lsr r8

000186e4 <makeProgramBanner@@Base>:
   186e4:	push	{r4, r5, r6, lr}
   186e8:	sub	sp, sp, #24
   186ec:	ldr	r6, [pc, #72]	; 1873c <makeProgramBanner@@Base+0x58>
   186f0:	mov	r2, #1
   186f4:	ldr	r5, [pc, #68]	; 18740 <makeProgramBanner@@Base+0x5c>
   186f8:	mvn	r3, #0
   186fc:	ldr	r4, [pc, #64]	; 18744 <makeProgramBanner@@Base+0x60>
   18700:	add	r6, pc, r6
   18704:	ldr	lr, [pc, #60]	; 18748 <makeProgramBanner@@Base+0x64>
   18708:	add	r5, pc, r5
   1870c:	ldr	ip, [pc, #56]	; 1874c <makeProgramBanner@@Base+0x68>
   18710:	add	r4, pc, r4
   18714:	add	lr, pc, lr
   18718:	str	r6, [sp]
   1871c:	add	ip, pc, ip
   18720:	str	r5, [sp, #4]
   18724:	str	r4, [sp, #8]
   18728:	str	lr, [sp, #12]
   1872c:	str	ip, [sp, #16]
   18730:	bl	14f1c <__snprintf_chk@plt>
   18734:	add	sp, sp, #24
   18738:	pop	{r4, r5, r6, pc}
   1873c:	ldrdeq	fp, [r0], -r0
   18740:	ldrdeq	fp, [r0], -r4
   18744:	ldrdeq	fp, [r0], -r4
   18748:	ldrdeq	fp, [r0], -r4
   1874c:	ldrdeq	fp, [r0], -r4

00018750 <fixInstallPaths@@Base>:
   18750:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   18754:	mov	r4, r0
   18758:	ldr	r5, [pc, #340]	; 188b4 <fixInstallPaths@@Base+0x164>
   1875c:	ldr	r3, [pc, #340]	; 188b8 <fixInstallPaths@@Base+0x168>
   18760:	add	r5, pc, r5
   18764:	add	r3, pc, r3
   18768:	ldr	r2, [r5, #4]
   1876c:	cmp	r2, #0
   18770:	beq	18854 <fixInstallPaths@@Base+0x104>
   18774:	ldr	r3, [r4]
   18778:	cmp	r3, #0
   1877c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   18780:	ldr	r5, [pc, #308]	; 188bc <fixInstallPaths@@Base+0x16c>
   18784:	add	r4, r4, #4
   18788:	ldr	r7, [pc, #304]	; 188c0 <fixInstallPaths@@Base+0x170>
   1878c:	ldr	r6, [pc, #304]	; 188c4 <fixInstallPaths@@Base+0x174>
   18790:	add	r5, pc, r5
   18794:	ldr	r9, [pc, #300]	; 188c8 <fixInstallPaths@@Base+0x178>
   18798:	add	r7, pc, r7
   1879c:	ldr	r8, [pc, #296]	; 188cc <fixInstallPaths@@Base+0x17c>
   187a0:	add	r6, pc, r6
   187a4:	add	r9, pc, r9
   187a8:	add	r8, pc, r8
   187ac:	b	187bc <fixInstallPaths@@Base+0x6c>
   187b0:	ldr	r3, [r4], #4
   187b4:	cmp	r3, #0
   187b8:	beq	18828 <fixInstallPaths@@Base+0xd8>
   187bc:	ldr	r1, [r3]
   187c0:	cmp	r1, #0
   187c4:	beq	187b0 <fixInstallPaths@@Base+0x60>
   187c8:	ldrb	r3, [r1]
   187cc:	cmp	r3, #0
   187d0:	beq	187b0 <fixInstallPaths@@Base+0x60>
   187d4:	ldr	r0, [r5, #4]
   187d8:	bl	1ae1c <makePath@@Base>
   187dc:	subs	r3, r0, #0
   187e0:	beq	1882c <fixInstallPaths@@Base+0xdc>
   187e4:	ldr	r2, [r4, #-4]
   187e8:	str	r3, [r2]
   187ec:	bl	1ac8c <isAbsolutePath@@Base>
   187f0:	cmp	r0, #0
   187f4:	bne	187b0 <fixInstallPaths@@Base+0x60>
   187f8:	mov	r1, r7
   187fc:	mov	r2, #5
   18800:	bl	14de4 <dcgettext@plt>
   18804:	ldr	r3, [r4, #-4]
   18808:	mov	r1, r6
   1880c:	ldr	r3, [r3]
   18810:	mov	r2, r0
   18814:	mov	r0, #4
   18818:	bl	1aa88 <logMessage@@Base>
   1881c:	ldr	r3, [r4], #4
   18820:	cmp	r3, #0
   18824:	bne	187bc <fixInstallPaths@@Base+0x6c>
   18828:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1882c:	mov	r1, r9
   18830:	mov	r2, #5
   18834:	bl	14de4 <dcgettext@plt>
   18838:	ldr	r3, [r4, #-4]
   1883c:	mov	r1, r8
   18840:	ldr	r3, [r3]
   18844:	mov	r2, r0
   18848:	mov	r0, #4
   1884c:	bl	1aa88 <logMessage@@Base>
   18850:	b	187b0 <fixInstallPaths@@Base+0x60>
   18854:	ldr	r2, [pc, #116]	; 188d0 <fixInstallPaths@@Base+0x180>
   18858:	ldr	r3, [r3, r2]
   1885c:	ldr	r0, [r3]
   18860:	bl	1aca4 <getPathDirectory@@Base>
   18864:	cmp	r0, #0
   18868:	mov	r2, r0
   1886c:	str	r0, [r5, #4]
   18870:	beq	18888 <fixInstallPaths@@Base+0x138>
   18874:	ldr	r1, [pc, #88]	; 188d4 <fixInstallPaths@@Base+0x184>
   18878:	mov	r0, #7
   1887c:	add	r1, pc, r1
   18880:	bl	1aa88 <logMessage@@Base>
   18884:	b	18774 <fixInstallPaths@@Base+0x24>
   18888:	ldr	r1, [pc, #72]	; 188d8 <fixInstallPaths@@Base+0x188>
   1888c:	mov	r2, #5
   18890:	add	r1, pc, r1
   18894:	bl	14de4 <dcgettext@plt>
   18898:	mov	r1, r0
   1889c:	mov	r0, #4
   188a0:	bl	1aa88 <logMessage@@Base>
   188a4:	ldr	r2, [pc, #48]	; 188dc <fixInstallPaths@@Base+0x18c>
   188a8:	add	r2, pc, r2
   188ac:	str	r2, [r5, #4]
   188b0:	b	18874 <fixInstallPaths@@Base+0x124>
   188b4:	strdeq	sp, [r1], -r8
   188b8:	muleq	r1, r4, r8
   188bc:	andeq	sp, r1, r8, asr #23
   188c0:			; <UNDEFINED> instruction: 0x0000b7b4
   188c4:	andeq	ip, r0, ip, lsr #32
   188c8:	muleq	r0, r0, r7
   188cc:	andeq	ip, r0, r4, lsr #32
   188d0:			; <UNDEFINED> instruction: 0x000002bc
   188d4:	andeq	fp, r0, r0, lsr #13
   188d8:	andeq	fp, r0, r8, ror #12
   188dc:	ldrdeq	fp, [r0], -ip

000188e0 <fixInstallPath@@Base>:
   188e0:	ldr	r3, [pc, #72]	; 18930 <fixInstallPath@@Base+0x50>
   188e4:	mov	r2, #0
   188e8:	ldr	r1, [pc, #68]	; 18934 <fixInstallPath@@Base+0x54>
   188ec:	add	r3, pc, r3
   188f0:	push	{r4, lr}
   188f4:	sub	sp, sp, #16
   188f8:	ldr	r4, [r3, r1]
   188fc:	str	r0, [sp, #4]
   18900:	add	r0, sp, #4
   18904:	str	r2, [sp, #8]
   18908:	ldr	r3, [r4]
   1890c:	str	r3, [sp, #12]
   18910:	bl	18750 <fixInstallPaths@@Base>
   18914:	ldr	r2, [sp, #12]
   18918:	ldr	r3, [r4]
   1891c:	cmp	r2, r3
   18920:	bne	1892c <fixInstallPath@@Base+0x4c>
   18924:	add	sp, sp, #16
   18928:	pop	{r4, pc}
   1892c:	bl	14d9c <__stack_chk_fail@plt>
   18930:	andeq	sp, r1, ip, lsl #14
   18934:	andeq	r0, r0, r4, lsl #5

00018938 <createPidFile@@Base>:
   18938:	ldr	r3, [pc, #700]	; 18bfc <createPidFile@@Base+0x2c4>
   1893c:	ldr	r2, [pc, #700]	; 18c00 <createPidFile@@Base+0x2c8>
   18940:	add	r3, pc, r3
   18944:	push	{r4, r5, r6, r7, r8, lr}
   18948:	subs	r6, r1, #0
   1894c:	ldr	r5, [r3, r2]
   18950:	sub	sp, sp, #56	; 0x38
   18954:	mov	r4, r0
   18958:	ldr	r3, [r5]
   1895c:	str	r3, [sp, #52]	; 0x34
   18960:	beq	189e0 <createPidFile@@Base+0xa8>
   18964:	cmp	r4, #0
   18968:	beq	189d8 <createPidFile@@Base+0xa0>
   1896c:	ldrb	r3, [r4]
   18970:	cmp	r3, #0
   18974:	bne	18994 <createPidFile@@Base+0x5c>
   18978:	ldr	r2, [sp, #52]	; 0x34
   1897c:	mov	r0, r3
   18980:	ldr	r3, [r5]
   18984:	cmp	r2, r3
   18988:	bne	18bf8 <createPidFile@@Base+0x2c0>
   1898c:	add	sp, sp, #56	; 0x38
   18990:	pop	{r4, r5, r6, r7, r8, pc}
   18994:	mov	r0, r4
   18998:	mov	r1, #66	; 0x42
   1899c:	mov	r2, #420	; 0x1a4
   189a0:	bl	14d3c <open@plt>
   189a4:	cmn	r0, #1
   189a8:	mov	r7, r0
   189ac:	beq	18b00 <createPidFile@@Base+0x1c8>
   189b0:	mov	r1, #1
   189b4:	bl	1b744 <acquireFileLock@@Base>
   189b8:	subs	r8, r0, #0
   189bc:	bne	189ec <createPidFile@@Base+0xb4>
   189c0:	bl	15000 <__errno_location@plt>
   189c4:	ldr	r3, [r0]
   189c8:	cmp	r3, #38	; 0x26
   189cc:	beq	189ec <createPidFile@@Base+0xb4>
   189d0:	mov	r0, r7
   189d4:	bl	14c64 <close@plt>
   189d8:	mov	r3, #0
   189dc:	b	18978 <createPidFile@@Base+0x40>
   189e0:	bl	18d8c <getProcessIdentifier@@Base>
   189e4:	mov	r6, r0
   189e8:	b	18964 <createPidFile@@Base+0x2c>
   189ec:	add	r4, sp, #20
   189f0:	mov	r0, r7
   189f4:	mov	r2, #32
   189f8:	mov	r1, r4
   189fc:	bl	14c94 <read@plt>
   18a00:	cmn	r0, #1
   18a04:	mov	r3, r0
   18a08:	beq	18bbc <createPidFile@@Base+0x284>
   18a0c:	cmp	r0, #32
   18a10:	add	r2, sp, #56	; 0x38
   18a14:	ldr	r1, [pc, #488]	; 18c04 <createPidFile@@Base+0x2cc>
   18a18:	mov	r0, r4
   18a1c:	moveq	r3, #31
   18a20:	add	ip, r2, r3
   18a24:	add	r1, pc, r1
   18a28:	add	r2, sp, #16
   18a2c:	add	r3, sp, #15
   18a30:	mov	lr, #0
   18a34:	strb	lr, [ip, #-36]	; 0xffffffdc
   18a38:	bl	15024 <sscanf@plt>
   18a3c:	cmp	r0, #1
   18a40:	beq	18b7c <createPidFile@@Base+0x244>
   18a44:	cmp	r0, #2
   18a48:	beq	18b6c <createPidFile@@Base+0x234>
   18a4c:	mov	r1, #0
   18a50:	mov	r0, r7
   18a54:	mov	r2, r1
   18a58:	bl	14e2c <lseek@plt>
   18a5c:	cmn	r0, #1
   18a60:	beq	18bd0 <createPidFile@@Base+0x298>
   18a64:	mov	r0, r7
   18a68:	mov	r1, #0
   18a6c:	bl	14a48 <ftruncate@plt>
   18a70:	cmn	r0, #1
   18a74:	beq	18b44 <createPidFile@@Base+0x20c>
   18a78:	ldr	ip, [pc, #392]	; 18c08 <createPidFile@@Base+0x2d0>
   18a7c:	mov	r1, #32
   18a80:	mov	r3, r1
   18a84:	mov	r2, #1
   18a88:	add	ip, pc, ip
   18a8c:	str	r6, [sp, #4]
   18a90:	str	ip, [sp]
   18a94:	mov	r0, r4
   18a98:	bl	14f1c <__snprintf_chk@plt>
   18a9c:	mov	r1, r4
   18aa0:	mov	r2, r0
   18aa4:	mov	r0, r7
   18aa8:	bl	14f58 <write@plt>
   18aac:	cmn	r0, #1
   18ab0:	beq	18be4 <createPidFile@@Base+0x2ac>
   18ab4:	mov	r4, #0
   18ab8:	cmp	r8, #0
   18abc:	bne	18bb0 <createPidFile@@Base+0x278>
   18ac0:	mov	r0, r7
   18ac4:	bl	14c64 <close@plt>
   18ac8:	cmp	r4, #2
   18acc:	beq	18b58 <createPidFile@@Base+0x220>
   18ad0:	cmp	r4, #3
   18ad4:	beq	189d8 <createPidFile@@Base+0xa0>
   18ad8:	cmp	r4, #0
   18adc:	moveq	r3, #1
   18ae0:	beq	18978 <createPidFile@@Base+0x40>
   18ae4:	ldr	r1, [pc, #288]	; 18c0c <createPidFile@@Base+0x2d4>
   18ae8:	mov	r2, r4
   18aec:	mov	r0, #4
   18af0:	add	r1, pc, r1
   18af4:	bl	1aa88 <logMessage@@Base>
   18af8:	mov	r3, #0
   18afc:	b	18978 <createPidFile@@Base+0x40>
   18b00:	ldr	r1, [pc, #264]	; 18c10 <createPidFile@@Base+0x2d8>
   18b04:	mov	r2, #5
   18b08:	mov	r0, #0
   18b0c:	add	r1, pc, r1
   18b10:	bl	14de4 <dcgettext@plt>
   18b14:	mov	r6, r0
   18b18:	bl	15000 <__errno_location@plt>
   18b1c:	ldr	r0, [r0]
   18b20:	bl	14b44 <strerror@plt>
   18b24:	ldr	r1, [pc, #232]	; 18c14 <createPidFile@@Base+0x2dc>
   18b28:	mov	r2, r6
   18b2c:	mov	r3, r4
   18b30:	add	r1, pc, r1
   18b34:	str	r0, [sp]
   18b38:	mov	r0, #4
   18b3c:	bl	1aa88 <logMessage@@Base>
   18b40:	b	189d8 <createPidFile@@Base+0xa0>
   18b44:	ldr	r0, [pc, #204]	; 18c18 <createPidFile@@Base+0x2e0>
   18b48:	mov	r4, #3
   18b4c:	add	r0, pc, r0
   18b50:	bl	1ab50 <logSystemError@@Base>
   18b54:	b	18ab8 <createPidFile@@Base+0x180>
   18b58:	bl	15000 <__errno_location@plt>
   18b5c:	mov	r2, #17
   18b60:	mov	r3, #0
   18b64:	str	r2, [r0]
   18b68:	b	18978 <createPidFile@@Base+0x40>
   18b6c:	ldrb	r3, [sp, #15]
   18b70:	cmp	r3, #10
   18b74:	cmpne	r3, #13
   18b78:	bne	18a4c <createPidFile@@Base+0x114>
   18b7c:	ldr	r0, [sp, #16]
   18b80:	cmp	r0, r6
   18b84:	beq	18ab4 <createPidFile@@Base+0x17c>
   18b88:	bl	18d90 <testProcessIdentifier@@Base>
   18b8c:	cmp	r0, #0
   18b90:	beq	18a4c <createPidFile@@Base+0x114>
   18b94:	ldr	r1, [pc, #128]	; 18c1c <createPidFile@@Base+0x2e4>
   18b98:	mov	r0, #3
   18b9c:	ldr	r2, [sp, #16]
   18ba0:	mov	r4, #2
   18ba4:	add	r1, pc, r1
   18ba8:	bl	1aa88 <logMessage@@Base>
   18bac:	b	18ab8 <createPidFile@@Base+0x180>
   18bb0:	mov	r0, r7
   18bb4:	bl	1b764 <releaseFileLock@@Base>
   18bb8:	b	18ac0 <createPidFile@@Base+0x188>
   18bbc:	ldr	r0, [pc, #92]	; 18c20 <createPidFile@@Base+0x2e8>
   18bc0:	mov	r4, #3
   18bc4:	add	r0, pc, r0
   18bc8:	bl	1ab50 <logSystemError@@Base>
   18bcc:	b	18ab8 <createPidFile@@Base+0x180>
   18bd0:	ldr	r0, [pc, #76]	; 18c24 <createPidFile@@Base+0x2ec>
   18bd4:	mov	r4, #3
   18bd8:	add	r0, pc, r0
   18bdc:	bl	1ab50 <logSystemError@@Base>
   18be0:	b	18ab8 <createPidFile@@Base+0x180>
   18be4:	ldr	r0, [pc, #60]	; 18c28 <createPidFile@@Base+0x2f0>
   18be8:	mov	r4, #3
   18bec:	add	r0, pc, r0
   18bf0:	bl	1ab50 <logSystemError@@Base>
   18bf4:	b	18ab8 <createPidFile@@Base+0x180>
   18bf8:	bl	14d9c <__stack_chk_fail@plt>
   18bfc:			; <UNDEFINED> instruction: 0x0001d6b8
   18c00:	andeq	r0, r0, r4, lsl #5
   18c04:	andeq	fp, r0, r4, asr #10
   18c08:	andeq	fp, r0, r4, lsl r5
   18c0c:	strdeq	fp, [r0], -r4
   18c10:	andeq	fp, r0, r8, lsr #9
   18c14:	andeq	fp, r0, r8, lsr #9
   18c18:	andeq	fp, r0, r4, asr r4
   18c1c:	andeq	fp, r0, ip, asr #7
   18c20:	ldrdeq	fp, [r0], -r0
   18c24:	ldrdeq	fp, [r0], -r4
   18c28:	andeq	fp, r0, r0, ror #16

00018c2c <cancelProgram@@Base>:
   18c2c:	ldr	r2, [pc, #260]	; 18d38 <cancelProgram@@Base+0x10c>
   18c30:	ldr	ip, [pc, #260]	; 18d3c <cancelProgram@@Base+0x110>
   18c34:	add	r2, pc, r2
   18c38:	ldr	r1, [pc, #256]	; 18d40 <cancelProgram@@Base+0x114>
   18c3c:	push	{r4, r5, r6, r7, r8, lr}
   18c40:	sub	sp, sp, #272	; 0x110
   18c44:	ldr	r4, [r2, ip]
   18c48:	add	r1, pc, r1
   18c4c:	mov	r6, r0
   18c50:	ldr	r2, [r4]
   18c54:	str	r2, [sp, #268]	; 0x10c
   18c58:	bl	14c88 <fopen@plt>
   18c5c:	subs	r5, r0, #0
   18c60:	beq	18cf0 <cancelProgram@@Base+0xc4>
   18c64:	add	r0, sp, #12
   18c68:	mov	r1, #256	; 0x100
   18c6c:	mov	r2, r5
   18c70:	bl	14ea4 <fgets@plt>
   18c74:	subs	r7, r0, #0
   18c78:	beq	18ccc <cancelProgram@@Base+0xa0>
   18c7c:	add	r1, sp, #8
   18c80:	mov	r2, #10
   18c84:	bl	14ab4 <strtol@plt>
   18c88:	ldr	r3, [sp, #8]
   18c8c:	ldrb	r6, [r3]
   18c90:	cmp	r6, #0
   18c94:	mov	r8, r0
   18c98:	beq	18cbc <cancelProgram@@Base+0x90>
   18c9c:	bl	14e44 <__ctype_b_loc@plt>
   18ca0:	lsl	r6, r6, #1
   18ca4:	ldr	r3, [r0]
   18ca8:	ldrh	r7, [r3, r6]
   18cac:	and	r7, r7, #8192	; 0x2000
   18cb0:	uxth	r7, r7
   18cb4:	cmp	r7, #0
   18cb8:	beq	18ccc <cancelProgram@@Base+0xa0>
   18cbc:	mov	r0, r8
   18cc0:	bl	18da8 <cancelProcess@@Base>
   18cc4:	adds	r7, r0, #0
   18cc8:	movne	r7, #1
   18ccc:	mov	r0, r5
   18cd0:	bl	14f4c <fclose@plt>
   18cd4:	ldr	r2, [sp, #268]	; 0x10c
   18cd8:	mov	r0, r7
   18cdc:	ldr	r3, [r4]
   18ce0:	cmp	r2, r3
   18ce4:	bne	18d34 <cancelProgram@@Base+0x108>
   18ce8:	add	sp, sp, #272	; 0x110
   18cec:	pop	{r4, r5, r6, r7, r8, pc}
   18cf0:	ldr	r1, [pc, #76]	; 18d44 <cancelProgram@@Base+0x118>
   18cf4:	mov	r2, #5
   18cf8:	mov	r7, r5
   18cfc:	add	r1, pc, r1
   18d00:	bl	14de4 <dcgettext@plt>
   18d04:	mov	r8, r0
   18d08:	bl	15000 <__errno_location@plt>
   18d0c:	ldr	r0, [r0]
   18d10:	bl	14b44 <strerror@plt>
   18d14:	ldr	r1, [pc, #44]	; 18d48 <cancelProgram@@Base+0x11c>
   18d18:	mov	r2, r8
   18d1c:	mov	r3, r6
   18d20:	add	r1, pc, r1
   18d24:	str	r0, [sp]
   18d28:	mov	r0, #3
   18d2c:	bl	1aa88 <logMessage@@Base>
   18d30:	b	18cd4 <cancelProgram@@Base+0xa8>
   18d34:	bl	14d9c <__stack_chk_fail@plt>
   18d38:	andeq	sp, r1, r4, asr #7
   18d3c:	andeq	r0, r0, r4, lsl #5
   18d40:	andeq	ip, r0, r8, lsl #3
   18d44:	andeq	fp, r0, r8, lsl #6
   18d48:			; <UNDEFINED> instruction: 0x0000b2b8

00018d4c <onProgramExit@@Base>:
   18d4c:	push	{r4, lr}
   18d50:	mov	r4, r0
   18d54:	mov	r0, #8
   18d58:	bl	14f04 <malloc@plt>
   18d5c:	cmp	r0, #0
   18d60:	beq	18d80 <onProgramExit@@Base+0x34>
   18d64:	ldr	r2, [pc, #28]	; 18d88 <onProgramExit@@Base+0x3c>
   18d68:	str	r4, [r0, #4]
   18d6c:	add	r2, pc, r2
   18d70:	ldr	r1, [r2]
   18d74:	str	r0, [r2]
   18d78:	str	r1, [r0]
   18d7c:	pop	{r4, pc}
   18d80:	pop	{r4, lr}
   18d84:	b	1ab94 <logMallocError@@Base>
   18d88:	andeq	sp, r1, ip, ror #11

00018d8c <getProcessIdentifier@@Base>:
   18d8c:	b	14a60 <getpid@plt>

00018d90 <testProcessIdentifier@@Base>:
   18d90:	push	{r3, lr}
   18d94:	mov	r1, #0
   18d98:	bl	14ce8 <kill@plt>
   18d9c:	adds	r0, r0, #1
   18da0:	movne	r0, #1
   18da4:	pop	{r3, pc}

00018da8 <cancelProcess@@Base>:
   18da8:	push	{r3, lr}
   18dac:	mov	r1, #15
   18db0:	bl	14ce8 <kill@plt>
   18db4:	adds	r0, r0, #1
   18db8:	movne	r0, #1
   18dbc:	pop	{r3, pc}
   18dc0:	push	{r4, r5, r6, r7, r8, r9, lr}
   18dc4:	mov	r4, r0
   18dc8:	ldr	r5, [r0]
   18dcc:	sub	sp, sp, #20
   18dd0:	mov	r6, r1
   18dd4:	mov	r8, r2
   18dd8:	cmp	r5, #0
   18ddc:	beq	18e78 <cancelProcess@@Base+0xd0>
   18de0:	mov	r0, r5
   18de4:	bl	14f10 <strlen@plt>
   18de8:	mov	r7, r0
   18dec:	mov	r0, r6
   18df0:	bl	14f10 <strlen@plt>
   18df4:	add	r0, r7, r0
   18df8:	add	r7, r0, #2
   18dfc:	mov	r0, r7
   18e00:	bl	14f04 <malloc@plt>
   18e04:	subs	r9, r0, #0
   18e08:	beq	18e90 <cancelProcess@@Base+0xe8>
   18e0c:	cmp	r8, #0
   18e10:	bne	18e50 <cancelProcess@@Base+0xa8>
   18e14:	ldr	ip, [pc, #128]	; 18e9c <cancelProcess@@Base+0xf4>
   18e18:	mov	r1, r7
   18e1c:	str	r5, [sp, #4]
   18e20:	mov	r2, #1
   18e24:	add	ip, pc, ip
   18e28:	str	r6, [sp, #8]
   18e2c:	mvn	r3, #0
   18e30:	str	ip, [sp]
   18e34:	bl	14f1c <__snprintf_chk@plt>
   18e38:	ldr	r0, [r4]
   18e3c:	bl	14ac0 <free@plt>
   18e40:	mov	r0, #1
   18e44:	str	r9, [r4]
   18e48:	add	sp, sp, #20
   18e4c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18e50:	ldr	ip, [pc, #72]	; 18ea0 <cancelProcess@@Base+0xf8>
   18e54:	mov	r1, r7
   18e58:	str	r6, [sp, #4]
   18e5c:	mov	r2, #1
   18e60:	add	ip, pc, ip
   18e64:	str	r5, [sp, #8]
   18e68:	mvn	r3, #0
   18e6c:	str	ip, [sp]
   18e70:	bl	14f1c <__snprintf_chk@plt>
   18e74:	b	18e38 <cancelProcess@@Base+0x90>
   18e78:	mov	r0, r1
   18e7c:	bl	14c4c <__strdup@plt>
   18e80:	cmp	r0, #0
   18e84:	str	r0, [r4]
   18e88:	movne	r0, #1
   18e8c:	bne	18e48 <cancelProcess@@Base+0xa0>
   18e90:	bl	1ab94 <logMallocError@@Base>
   18e94:	mov	r0, #0
   18e98:	b	18e48 <cancelProcess@@Base+0xa0>
   18e9c:	strdeq	fp, [r0], -r4
   18ea0:			; <UNDEFINED> instruction: 0x0000b1b8
   18ea4:	ldr	ip, [pc, #468]	; 19080 <cancelProcess@@Base+0x2d8>
   18ea8:	push	{r4, r5, r6, r7, r8, r9, lr}
   18eac:	add	ip, pc, ip
   18eb0:	ldr	r5, [pc, #460]	; 19084 <cancelProcess@@Base+0x2dc>
   18eb4:	sub	sp, sp, #20
   18eb8:	ldrb	r6, [r1, #8]
   18ebc:	mov	r4, r1
   18ec0:	mov	r7, r0
   18ec4:	mov	r8, r2
   18ec8:	ldr	r5, [ip, r5]
   18ecc:	add	r6, r0, r6
   18ed0:	ldrb	r3, [r6, #8]
   18ed4:	ldr	ip, [r5]
   18ed8:	cmp	r3, #0
   18edc:	str	ip, [sp, #12]
   18ee0:	bne	18f24 <cancelProcess@@Base+0x17c>
   18ee4:	mov	r9, #1
   18ee8:	strb	r9, [r6, #8]
   18eec:	ldr	r3, [r1, #4]
   18ef0:	ldr	r6, [r1, #12]
   18ef4:	cmp	r3, #0
   18ef8:	beq	18f80 <cancelProcess@@Base+0x1d8>
   18efc:	cmp	r6, #0
   18f00:	beq	18f24 <cancelProcess@@Base+0x17c>
   18f04:	ldrb	r3, [r1, #10]
   18f08:	tst	r3, #2
   18f0c:	beq	18f5c <cancelProcess@@Base+0x1b4>
   18f10:	cmp	r2, #0
   18f14:	beq	18f24 <cancelProcess@@Base+0x17c>
   18f18:	ldrb	r3, [r2]
   18f1c:	cmp	r3, #0
   18f20:	bne	18f40 <cancelProcess@@Base+0x198>
   18f24:	mov	r0, #1
   18f28:	ldr	r1, [sp, #12]
   18f2c:	ldr	r3, [r5]
   18f30:	cmp	r1, r3
   18f34:	bne	1907c <cancelProcess@@Base+0x2d4>
   18f38:	add	sp, sp, #20
   18f3c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18f40:	mov	r1, r2
   18f44:	mov	r0, r6
   18f48:	mov	r2, r9
   18f4c:	bl	18dc0 <cancelProcess@@Base+0x18>
   18f50:	cmp	r0, #0
   18f54:	beq	18f28 <cancelProcess@@Base+0x180>
   18f58:	b	18f24 <cancelProcess@@Base+0x17c>
   18f5c:	mov	r0, r2
   18f60:	bl	14c4c <__strdup@plt>
   18f64:	cmp	r0, #0
   18f68:	str	r0, [r6]
   18f6c:	bne	18f24 <cancelProcess@@Base+0x17c>
   18f70:	str	r0, [sp, #4]
   18f74:	bl	1ab94 <logMallocError@@Base>
   18f78:	ldr	r0, [sp, #4]
   18f7c:	b	18f28 <cancelProcess@@Base+0x180>
   18f80:	cmp	r6, #0
   18f84:	beq	18f24 <cancelProcess@@Base+0x17c>
   18f88:	ldr	r1, [pc, #248]	; 19088 <cancelProcess@@Base+0x2e0>
   18f8c:	mov	r0, r2
   18f90:	add	r1, pc, r1
   18f94:	bl	14aa8 <strcasecmp@plt>
   18f98:	cmp	r0, #0
   18f9c:	streq	r9, [r6]
   18fa0:	moveq	r0, r9
   18fa4:	beq	18f28 <cancelProcess@@Base+0x180>
   18fa8:	ldr	r1, [pc, #220]	; 1908c <cancelProcess@@Base+0x2e4>
   18fac:	mov	r0, r8
   18fb0:	add	r1, pc, r1
   18fb4:	bl	14aa8 <strcasecmp@plt>
   18fb8:	cmp	r0, #0
   18fbc:	streq	r0, [r6]
   18fc0:	moveq	r0, r9
   18fc4:	beq	18f28 <cancelProcess@@Base+0x180>
   18fc8:	ldrb	r3, [r4, #10]
   18fcc:	and	r3, r3, #2
   18fd0:	ands	r0, r3, #255	; 0xff
   18fd4:	beq	19004 <cancelProcess@@Base+0x25c>
   18fd8:	add	r0, sp, #8
   18fdc:	mov	r1, r8
   18fe0:	bl	1c250 <isInteger@@Base>
   18fe4:	cmp	r0, #0
   18fe8:	beq	19040 <cancelProcess@@Base+0x298>
   18fec:	ldr	r3, [sp, #8]
   18ff0:	cmp	r3, #0
   18ff4:	blt	19040 <cancelProcess@@Base+0x298>
   18ff8:	ldr	r2, [r4, #12]
   18ffc:	str	r3, [r2]
   19000:	b	18f24 <cancelProcess@@Base+0x17c>
   19004:	ldr	r1, [pc, #132]	; 19090 <cancelProcess@@Base+0x2e8>
   19008:	mov	r2, #5
   1900c:	add	r1, pc, r1
   19010:	bl	14de4 <dcgettext@plt>
   19014:	ldr	r1, [pc, #120]	; 19094 <cancelProcess@@Base+0x2ec>
   19018:	mov	r3, r8
   1901c:	add	r1, pc, r1
   19020:	mov	r2, r0
   19024:	mov	r0, #3
   19028:	bl	1aa88 <logMessage@@Base>
   1902c:	ldrb	r3, [r7, #264]	; 0x108
   19030:	mov	r0, r9
   19034:	orr	r3, r3, #2
   19038:	strb	r3, [r7, #264]	; 0x108
   1903c:	b	18f28 <cancelProcess@@Base+0x180>
   19040:	ldr	r1, [pc, #80]	; 19098 <cancelProcess@@Base+0x2f0>
   19044:	mov	r2, #5
   19048:	mov	r0, #0
   1904c:	add	r1, pc, r1
   19050:	bl	14de4 <dcgettext@plt>
   19054:	ldr	r1, [pc, #64]	; 1909c <cancelProcess@@Base+0x2f4>
   19058:	mov	r3, r8
   1905c:	add	r1, pc, r1
   19060:	mov	r2, r0
   19064:	mov	r0, #3
   19068:	bl	1aa88 <logMessage@@Base>
   1906c:	ldrb	r3, [r7, #264]	; 0x108
   19070:	orr	r3, r3, #2
   19074:	strb	r3, [r7, #264]	; 0x108
   19078:	b	18f24 <cancelProcess@@Base+0x17c>
   1907c:	bl	14d9c <__stack_chk_fail@plt>
   19080:	andeq	sp, r1, ip, asr #2
   19084:	andeq	r0, r0, r4, lsl #5
   19088:	andeq	fp, r0, r8, ror #24
   1908c:	andeq	fp, r0, r0, ror r0
   19090:	andeq	fp, r0, r8, lsl r0
   19094:			; <UNDEFINED> instruction: 0x0000b7b0
   19098:	strdeq	sl, [r0], -r0
   1909c:	andeq	fp, r0, r0, ror r7
   190a0:	push	{r4, r5, r6, r7, r8, lr}
   190a4:	mov	r5, r0
   190a8:	ldr	ip, [r0, #4]
   190ac:	cmp	ip, #0
   190b0:	popeq	{r4, r5, r6, r7, r8, pc}
   190b4:	ldr	r7, [pc, #120]	; 19134 <cancelProcess@@Base+0x38c>
   190b8:	rsbs	r8, r1, #1
   190bc:	ldr	r6, [pc, #116]	; 19138 <cancelProcess@@Base+0x390>
   190c0:	mov	r3, #0
   190c4:	add	r7, pc, r7
   190c8:	movcc	r8, #0
   190cc:	add	r6, pc, r6
   190d0:	mov	r4, r3
   190d4:	ldr	r2, [r5]
   190d8:	rsb	r3, r3, r3, lsl #3
   190dc:	mov	r0, r5
   190e0:	add	r4, r4, #1
   190e4:	add	r3, r2, r3, lsl #2
   190e8:	ldrb	r2, [r3, #10]
   190ec:	mov	r1, r3
   190f0:	ubfx	r2, r2, #2, #1
   190f4:	cmp	r8, r2
   190f8:	beq	19110 <cancelProcess@@Base+0x368>
   190fc:	ldr	r2, [r3, #16]
   19100:	cmp	r2, #0
   19104:	beq	19120 <cancelProcess@@Base+0x378>
   19108:	bl	18ea4 <cancelProcess@@Base+0xfc>
   1910c:	ldr	ip, [r5, #4]
   19110:	cmp	r4, ip
   19114:	mov	r3, r4
   19118:	bcc	190d4 <cancelProcess@@Base+0x32c>
   1911c:	pop	{r4, r5, r6, r7, r8, pc}
   19120:	ldr	r3, [r3, #4]
   19124:	cmp	r3, #0
   19128:	moveq	r2, r7
   1912c:	movne	r2, r6
   19130:	b	19108 <cancelProcess@@Base+0x360>
   19134:	andeq	sl, r0, ip, asr pc
   19138:	andeq	sl, r0, ip, asr r7
   1913c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19140:	mov	r9, r1
   19144:	sub	sp, sp, #12
   19148:	mov	r1, #35	; 0x23
   1914c:	mov	r8, r0
   19150:	bl	15114 <strchr@plt>
   19154:	ldr	r1, [pc, #620]	; 193c8 <cancelProcess@@Base+0x620>
   19158:	add	r1, pc, r1
   1915c:	cmp	r0, #0
   19160:	movne	r3, #0
   19164:	strbne	r3, [r0]
   19168:	mov	r0, r8
   1916c:	bl	14b8c <strtok@plt>
   19170:	subs	fp, r0, #0
   19174:	beq	192e0 <cancelProcess@@Base+0x538>
   19178:	ldr	r3, [r9]
   1917c:	ldr	sl, [r3, #4]
   19180:	cmp	sl, #0
   19184:	beq	191d4 <cancelProcess@@Base+0x42c>
   19188:	ldr	r7, [r3]
   1918c:	mov	r5, #0
   19190:	mov	r4, r5
   19194:	rsb	r2, r5, r5, lsl #3
   19198:	mov	r0, fp
   1919c:	add	r4, r4, #1
   191a0:	add	r6, r7, r2, lsl #2
   191a4:	ldrb	ip, [r6, #10]
   191a8:	tst	ip, #4
   191ac:	beq	191c8 <cancelProcess@@Base+0x420>
   191b0:	ldr	r1, [r7, r2, lsl #2]
   191b4:	cmp	r1, #0
   191b8:	beq	191c8 <cancelProcess@@Base+0x420>
   191bc:	bl	14aa8 <strcasecmp@plt>
   191c0:	subs	ip, r0, #0
   191c4:	beq	19228 <cancelProcess@@Base+0x480>
   191c8:	cmp	r4, sl
   191cc:	mov	r5, r4
   191d0:	bne	19194 <cancelProcess@@Base+0x3ec>
   191d4:	ldr	r1, [pc, #496]	; 193cc <cancelProcess@@Base+0x624>
   191d8:	mov	r2, #5
   191dc:	mov	r0, #0
   191e0:	mov	ip, #1
   191e4:	add	r1, pc, r1
   191e8:	str	ip, [sp, #4]
   191ec:	bl	14de4 <dcgettext@plt>
   191f0:	ldr	r1, [pc, #472]	; 193d0 <cancelProcess@@Base+0x628>
   191f4:	mov	r3, r8
   191f8:	add	r1, pc, r1
   191fc:	mov	r2, r0
   19200:	mov	r0, #3
   19204:	bl	1aa88 <logMessage@@Base>
   19208:	ldr	r3, [r9]
   1920c:	ldrb	r2, [r3, #264]	; 0x108
   19210:	orr	r2, r2, #2
   19214:	strb	r2, [r3, #264]	; 0x108
   19218:	ldr	ip, [sp, #4]
   1921c:	mov	r0, ip
   19220:	add	sp, sp, #12
   19224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19228:	ldr	r4, [pc, #420]	; 193d4 <cancelProcess@@Base+0x62c>
   1922c:	str	ip, [sp, #4]
   19230:	add	r4, pc, r4
   19234:	mov	r1, r4
   19238:	bl	14b8c <strtok@plt>
   1923c:	ldr	ip, [sp, #4]
   19240:	subs	r7, r0, #0
   19244:	beq	193a0 <cancelProcess@@Base+0x5f8>
   19248:	mov	r0, ip
   1924c:	mov	r1, r4
   19250:	str	ip, [sp, #4]
   19254:	bl	14b8c <strtok@plt>
   19258:	ldr	ip, [sp, #4]
   1925c:	cmp	r0, #0
   19260:	beq	192f0 <cancelProcess@@Base+0x548>
   19264:	mov	r0, #0
   19268:	mov	r1, r4
   1926c:	bl	14b8c <strtok@plt>
   19270:	cmp	r0, #0
   19274:	bne	19264 <cancelProcess@@Base+0x4bc>
   19278:	ldr	r1, [pc, #344]	; 193d8 <cancelProcess@@Base+0x630>
   1927c:	mov	r2, #5
   19280:	add	r1, pc, r1
   19284:	bl	14de4 <dcgettext@plt>
   19288:	ldr	r1, [pc, #332]	; 193dc <cancelProcess@@Base+0x634>
   1928c:	mov	r3, r8
   19290:	add	r1, pc, r1
   19294:	mov	r2, r0
   19298:	mov	r0, #3
   1929c:	bl	1aa88 <logMessage@@Base>
   192a0:	ldr	r3, [r9]
   192a4:	mov	ip, #1
   192a8:	mov	r0, ip
   192ac:	ldrb	r2, [r3, #264]	; 0x108
   192b0:	orr	r2, r2, #2
   192b4:	strb	r2, [r3, #264]	; 0x108
   192b8:	add	sp, sp, #12
   192bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192c0:	ldrb	r3, [r7]
   192c4:	cmp	r3, #0
   192c8:	beq	192e0 <cancelProcess@@Base+0x538>
   192cc:	mov	r2, ip
   192d0:	mov	r1, r7
   192d4:	bl	18dc0 <cancelProcess@@Base+0x18>
   192d8:	subs	ip, r0, #0
   192dc:	beq	1921c <cancelProcess@@Base+0x474>
   192e0:	mov	ip, #1
   192e4:	mov	r0, ip
   192e8:	add	sp, sp, #12
   192ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192f0:	ldr	r4, [r9, #4]
   192f4:	lsl	sl, r5, #2
   192f8:	add	r0, r4, sl
   192fc:	ldr	r3, [r4, r5, lsl #2]
   19300:	cmp	r3, #0
   19304:	beq	19374 <cancelProcess@@Base+0x5cc>
   19308:	ldr	r3, [r6, #4]
   1930c:	cmp	r3, #0
   19310:	beq	19320 <cancelProcess@@Base+0x578>
   19314:	ldrb	r3, [r6, #10]
   19318:	tst	r3, #2
   1931c:	bne	192c0 <cancelProcess@@Base+0x518>
   19320:	ldr	r1, [pc, #184]	; 193e0 <cancelProcess@@Base+0x638>
   19324:	mov	r2, #5
   19328:	mov	r0, #0
   1932c:	str	ip, [sp, #4]
   19330:	add	r1, pc, r1
   19334:	bl	14de4 <dcgettext@plt>
   19338:	ldr	r1, [pc, #164]	; 193e4 <cancelProcess@@Base+0x63c>
   1933c:	mov	r3, r8
   19340:	add	r1, pc, r1
   19344:	mov	r2, r0
   19348:	mov	r0, #3
   1934c:	bl	1aa88 <logMessage@@Base>
   19350:	ldr	r3, [r9]
   19354:	ldrb	r2, [r3, #264]	; 0x108
   19358:	orr	r2, r2, #2
   1935c:	strb	r2, [r3, #264]	; 0x108
   19360:	ldr	r0, [r4, sl]
   19364:	bl	14ac0 <free@plt>
   19368:	mov	r3, #0
   1936c:	str	r3, [r4, sl]
   19370:	ldr	ip, [sp, #4]
   19374:	mov	r0, r7
   19378:	str	ip, [sp, #4]
   1937c:	bl	14c4c <__strdup@plt>
   19380:	cmp	r0, #0
   19384:	str	r0, [r4, sl]
   19388:	ldr	ip, [sp, #4]
   1938c:	bne	192e0 <cancelProcess@@Base+0x538>
   19390:	str	ip, [sp, #4]
   19394:	bl	1ab94 <logMallocError@@Base>
   19398:	ldr	ip, [sp, #4]
   1939c:	b	1921c <cancelProcess@@Base+0x474>
   193a0:	ldr	r1, [pc, #64]	; 193e8 <cancelProcess@@Base+0x640>
   193a4:	mov	r2, #5
   193a8:	add	r1, pc, r1
   193ac:	bl	14de4 <dcgettext@plt>
   193b0:	ldr	r1, [pc, #52]	; 193ec <cancelProcess@@Base+0x644>
   193b4:	mov	r3, r8
   193b8:	add	r1, pc, r1
   193bc:	mov	r2, r0
   193c0:	mov	r0, #3
   193c4:	b	1929c <cancelProcess@@Base+0x4f4>
   193c8:	strdeq	sl, [r0], -ip
   193cc:	andeq	sl, r0, ip, lsl #30
   193d0:	ldrdeq	fp, [r0], -r4
   193d4:	andeq	sl, r0, r4, lsr #28
   193d8:	andeq	sl, r0, ip, lsl #28
   193dc:	andeq	fp, r0, ip, lsr r5
   193e0:	andeq	sl, r0, ip, lsl #27
   193e4:	andeq	fp, r0, ip, lsl #9
   193e8:			; <UNDEFINED> instruction: 0x0000acb0
   193ec:	andeq	fp, r0, r4, lsl r4

000193f0 <processOptions@@Base>:
   193f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193f4:	add	fp, sp, #32
   193f8:	ldr	r8, [pc, #4068]	; 1a3e4 <processOptions@@Base+0xff4>
   193fc:	sub	sp, sp, #1680	; 0x690
   19400:	sub	sp, sp, #4
   19404:	ldr	r3, [pc, #4060]	; 1a3e8 <processOptions@@Base+0xff8>
   19408:	add	r8, pc, r8
   1940c:	sub	r5, fp, #1584	; 0x630
   19410:	str	r0, [fp, #-1648]	; 0xfffff990
   19414:	sub	r5, r5, #4
   19418:	str	r5, [fp, #-1652]	; 0xfffff98c
   1941c:	ldr	r3, [r8, r3]
   19420:	mov	r9, r1
   19424:	mov	r0, r5
   19428:	mov	r1, #0
   1942c:	mov	sl, r2
   19430:	mov	r2, #268	; 0x10c
   19434:	str	r3, [fp, #-1668]	; 0xfffff97c
   19438:	ldr	r3, [r3]
   1943c:	str	r3, [fp, #-40]	; 0xffffffd8
   19440:	bl	14c04 <memset@plt>
   19444:	ldr	r5, [fp, #-1648]	; 0xfffff990
   19448:	sub	r2, fp, #1328	; 0x530
   1944c:	sub	r1, fp, #1584	; 0x630
   19450:	add	r2, r2, #3
   19454:	sub	r1, r1, #4
   19458:	ldr	ip, [r5]
   1945c:	add	r3, r1, #7
   19460:	ldr	r0, [r5, #4]
   19464:	mov	r1, #0
   19468:	str	ip, [fp, #-1588]	; 0xfffff9cc
   1946c:	str	r0, [fp, #-1584]	; 0xfffff9d0
   19470:	strb	r1, [r3, #1]!
   19474:	cmp	r3, r2
   19478:	bne	19470 <processOptions@@Base+0x80>
   1947c:	ldr	r1, [sl]
   19480:	ldr	r0, [r9]
   19484:	str	sp, [fp, #-1672]	; 0xfffff978
   19488:	bl	18470 <beginProgram@@Base>
   1948c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   19490:	ldr	r5, [fp, #-1648]	; 0xfffff990
   19494:	add	r2, r3, #1
   19498:	cmp	r3, #0
   1949c:	lsl	r2, r2, #1
   194a0:	ldr	r5, [r5, #24]
   194a4:	add	r1, r2, #7
   194a8:	bic	r1, r1, #7
   194ac:	lsl	r2, r2, #4
   194b0:	sub	sp, sp, r1
   194b4:	sub	r2, r2, #8
   194b8:	add	ip, sp, #24
   194bc:	sub	sp, sp, r2
   194c0:	str	r5, [fp, #-1660]	; 0xfffff984
   194c4:	add	r5, sp, #24
   194c8:	str	ip, [fp, #-1632]	; 0xfffff9a0
   194cc:	str	r5, [fp, #-1664]	; 0xfffff980
   194d0:	beq	1a49c <processOptions@@Base+0x10ac>
   194d4:	ldr	r5, [pc, #3856]	; 1a3ec <processOptions@@Base+0xffc>
   194d8:	sub	r2, fp, #1600	; 0x640
   194dc:	ldr	ip, [pc, #3852]	; 1a3f0 <processOptions@@Base+0x1000>
   194e0:	sub	r2, r2, #4
   194e4:	add	r5, pc, r5
   194e8:	str	r5, [fp, #-1644]	; 0xfffff994
   194ec:	mov	r5, #0
   194f0:	add	ip, pc, ip
   194f4:	sub	r2, r2, #8
   194f8:	str	ip, [fp, #-1624]	; 0xfffff9a8
   194fc:	str	r2, [fp, #-1628]	; 0xfffff9a4
   19500:	mov	r1, r5
   19504:	ldr	r4, [fp, #-1664]	; 0xfffff980
   19508:	mov	ip, r5
   1950c:	str	r9, [fp, #-1636]	; 0xfffff99c
   19510:	str	r8, [fp, #-1640]	; 0xfffff998
   19514:	b	19530 <processOptions@@Base+0x140>
   19518:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1951c:	add	r5, r5, #1
   19520:	cmp	r5, r3
   19524:	mov	r1, r5
   19528:	bcs	195f0 <processOptions@@Base+0x200>
   1952c:	mov	r4, r7
   19530:	ldr	r2, [fp, #-1588]	; 0xfffff9cc
   19534:	rsb	r1, r1, r1, lsl #3
   19538:	add	r6, r2, r1, lsl #2
   1953c:	ldr	r0, [r2, r1, lsl #2]
   19540:	cmp	r0, #0
   19544:	moveq	r7, r4
   19548:	beq	1951c <processOptions@@Base+0x12c>
   1954c:	str	r0, [r4]
   19550:	add	r7, r4, #16
   19554:	ldr	r3, [r6, #4]
   19558:	str	ip, [r4, #8]
   1955c:	adds	r3, r3, #0
   19560:	movne	r3, #1
   19564:	str	r3, [r4, #4]
   19568:	ldrb	r3, [r6, #8]
   1956c:	str	r3, [r4, #12]
   19570:	ldr	r3, [r6, #4]
   19574:	cmp	r3, #0
   19578:	bne	19518 <processOptions@@Base+0x128>
   1957c:	ldr	r3, [r6, #12]
   19580:	cmp	r3, #0
   19584:	beq	19518 <processOptions@@Base+0x128>
   19588:	ldr	r8, [r2, r1, lsl #2]
   1958c:	mov	r2, #3
   19590:	ldr	r0, [fp, #-1624]	; 0xfffff9a8
   19594:	str	ip, [fp, #-1688]	; 0xfffff968
   19598:	mov	r1, r8
   1959c:	bl	14e08 <strncasecmp@plt>
   195a0:	ldr	ip, [fp, #-1688]	; 0xfffff968
   195a4:	cmp	r0, #0
   195a8:	bne	19be8 <processOptions@@Base+0x7f8>
   195ac:	add	r0, r8, #3
   195b0:	bl	14c4c <__strdup@plt>
   195b4:	ldr	ip, [fp, #-1688]	; 0xfffff968
   195b8:	subs	r9, r0, #0
   195bc:	beq	1a350 <processOptions@@Base+0xf60>
   195c0:	ldr	r0, [fp, #-1628]	; 0xfffff9a4
   195c4:	add	r5, r5, #1
   195c8:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   195cc:	add	r7, r4, #32
   195d0:	str	r9, [r4, #16]
   195d4:	mov	r1, r5
   195d8:	str	ip, [r4, #20]
   195dc:	cmp	r5, r3
   195e0:	str	r0, [r4, #24]
   195e4:	ldrb	r2, [r6, #8]
   195e8:	str	r2, [r4, #28]
   195ec:	bcc	1952c <processOptions@@Base+0x13c>
   195f0:	ldr	r9, [fp, #-1636]	; 0xfffff99c
   195f4:	ldr	r8, [fp, #-1640]	; 0xfffff998
   195f8:	mov	r1, #0
   195fc:	mov	r2, #16
   19600:	mov	r0, r7
   19604:	bl	14c04 <memset@plt>
   19608:	sub	r3, fp, #1312	; 0x520
   1960c:	sub	r3, r3, #4
   19610:	sub	r1, fp, #300	; 0x12c
   19614:	sub	r3, r3, #8
   19618:	mov	r2, #0
   1961c:	str	r2, [r3, #4]!
   19620:	cmp	r3, r1
   19624:	bne	1961c <processOptions@@Base+0x22c>
   19628:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1962c:	mov	r2, #43	; 0x2b
   19630:	ldr	r5, [fp, #-1632]	; 0xfffff9a0
   19634:	cmp	r3, #0
   19638:	add	r1, r5, #1
   1963c:	strb	r2, [r5]
   19640:	beq	196a8 <processOptions@@Base+0x2b8>
   19644:	mov	r2, #0
   19648:	mov	lr, #58	; 0x3a
   1964c:	mov	r3, r2
   19650:	mov	r4, r2
   19654:	ldr	r0, [fp, #-1588]	; 0xfffff9cc
   19658:	rsb	r3, r3, r3, lsl #3
   1965c:	sub	r5, fp, #36	; 0x24
   19660:	add	r2, r2, #1
   19664:	add	r3, r0, r3, lsl #2
   19668:	ldrb	r0, [r3, #8]
   1966c:	add	ip, r5, r0, lsl #2
   19670:	str	r3, [ip, #-1284]	; 0xfffffafc
   19674:	strb	r0, [r1]
   19678:	ldr	r0, [r3, #4]
   1967c:	cmp	r0, #0
   19680:	strbne	lr, [r1, #1]
   19684:	ldr	r3, [r3, #12]
   19688:	addne	r1, r1, #2
   1968c:	addeq	r1, r1, #1
   19690:	cmp	r3, #0
   19694:	strne	r4, [r3]
   19698:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1969c:	cmp	r2, r3
   196a0:	mov	r3, r2
   196a4:	bcc	19654 <processOptions@@Base+0x264>
   196a8:	mov	r3, #0
   196ac:	strb	r3, [r1]
   196b0:	ldr	r2, [r9]
   196b4:	cmp	r2, #1
   196b8:	ldrgt	r2, [pc, #3380]	; 1a3f4 <processOptions@@Base+0x1004>
   196bc:	ldrgt	r2, [r8, r2]
   196c0:	strgt	r3, [r2]
   196c4:	mov	ip, #0
   196c8:	ldr	r2, [pc, #3368]	; 1a3f8 <processOptions@@Base+0x1008>
   196cc:	str	ip, [fp, #-1640]	; 0xfffff998
   196d0:	mov	r5, ip
   196d4:	str	ip, [fp, #-1624]	; 0xfffff9a8
   196d8:	mov	r3, #1
   196dc:	ldr	ip, [pc, #3352]	; 1a3fc <processOptions@@Base+0x100c>
   196e0:	mov	r4, r3
   196e4:	ldr	r6, [r8, r2]
   196e8:	mvn	r7, #0
   196ec:	add	ip, pc, ip
   196f0:	str	ip, [fp, #-1628]	; 0xfffff9a4
   196f4:	ldr	ip, [pc, #3332]	; 1a400 <processOptions@@Base+0x1010>
   196f8:	str	r3, [r6]
   196fc:	add	ip, pc, ip
   19700:	str	ip, [fp, #-1636]	; 0xfffff99c
   19704:	ldr	ip, [pc, #3320]	; 1a404 <processOptions@@Base+0x1014>
   19708:	ldr	r0, [r9]
   1970c:	ldr	r1, [sl]
   19710:	add	ip, pc, ip
   19714:	str	ip, [fp, #-1644]	; 0xfffff994
   19718:	ldr	ip, [pc, #3304]	; 1a408 <processOptions@@Base+0x1018>
   1971c:	add	ip, pc, ip
   19720:	str	ip, [fp, #-1656]	; 0xfffff988
   19724:	cmp	r4, r0
   19728:	beq	19760 <processOptions@@Base+0x370>
   1972c:	cmp	r5, #0
   19730:	ldr	r3, [r1, r4, lsl #2]
   19734:	beq	19a8c <processOptions@@Base+0x69c>
   19738:	ldrb	r3, [r5]
   1973c:	cmp	r3, #0
   19740:	bne	199c0 <processOptions@@Base+0x5d0>
   19744:	add	r4, r4, #1
   19748:	str	r4, [r6]
   1974c:	ldr	r0, [r9]
   19750:	mov	r5, r3
   19754:	ldr	r1, [sl]
   19758:	cmp	r4, r0
   1975c:	bne	1972c <processOptions@@Base+0x33c>
   19760:	ldr	r5, [fp, #-1624]	; 0xfffff9a8
   19764:	add	r1, r1, r4, lsl #2
   19768:	str	r1, [sl]
   1976c:	cmp	r5, #0
   19770:	ldr	r3, [r6]
   19774:	ldr	r2, [r9]
   19778:	rsb	r3, r3, r2
   1977c:	str	r3, [r9]
   19780:	bne	19c6c <processOptions@@Base+0x87c>
   19784:	ldr	r5, [fp, #-1664]	; 0xfffff980
   19788:	ldr	r0, [r5]
   1978c:	cmp	r0, #0
   19790:	ldrne	r4, [fp, #-1664]	; 0xfffff980
   19794:	beq	197b4 <processOptions@@Base+0x3c4>
   19798:	ldr	r3, [r4, #8]
   1979c:	cmp	r3, #0
   197a0:	beq	197a8 <processOptions@@Base+0x3b8>
   197a4:	bl	14ac0 <free@plt>
   197a8:	ldr	r0, [r4, #16]!
   197ac:	cmp	r0, #0
   197b0:	bne	19798 <processOptions@@Base+0x3a8>
   197b4:	ldr	ip, [fp, #-1648]	; 0xfffff990
   197b8:	ldr	sp, [fp, #-1672]	; 0xfffff978
   197bc:	ldr	sl, [ip, #16]
   197c0:	cmp	sl, #0
   197c4:	beq	197d4 <processOptions@@Base+0x3e4>
   197c8:	ldr	sl, [sl]
   197cc:	adds	sl, sl, #0
   197d0:	movne	sl, #1
   197d4:	ldr	r5, [fp, #-1648]	; 0xfffff990
   197d8:	str	sl, [fp, #-1624]	; 0xfffff9a8
   197dc:	ldr	r3, [r5, #8]
   197e0:	cmp	r3, #0
   197e4:	beq	197f4 <processOptions@@Base+0x404>
   197e8:	ldr	r3, [r3]
   197ec:	cmp	r3, #0
   197f0:	bne	1a25c <processOptions@@Base+0xe6c>
   197f4:	ldr	ip, [fp, #-1648]	; 0xfffff990
   197f8:	ldr	r3, [ip, #12]
   197fc:	cmp	r3, #0
   19800:	beq	19810 <processOptions@@Base+0x420>
   19804:	ldr	r3, [r3]
   19808:	cmp	r3, #0
   1980c:	bne	1a128 <processOptions@@Base+0xd38>
   19810:	sub	r0, fp, #1584	; 0x630
   19814:	mov	r1, #0
   19818:	sub	r0, r0, #4
   1981c:	bl	190a0 <cancelProcess@@Base+0x2f8>
   19820:	ldr	r5, [fp, #-1648]	; 0xfffff990
   19824:	ldr	r3, [r5, #16]
   19828:	cmp	r3, #0
   1982c:	beq	19978 <processOptions@@Base+0x588>
   19830:	ldr	r3, [r3]
   19834:	cmp	r3, #0
   19838:	beq	19978 <processOptions@@Base+0x588>
   1983c:	sub	r4, fp, #1600	; 0x640
   19840:	ldr	r5, [fp, #-1624]	; 0xfffff9a8
   19844:	sub	r4, r4, #4
   19848:	str	r3, [fp, #-1616]	; 0xfffff9b0
   1984c:	sub	r0, r4, #12
   19850:	eor	sl, r5, #1
   19854:	bl	188e0 <fixInstallPath@@Base>
   19858:	ldr	r5, [fp, #-1616]	; 0xfffff9b0
   1985c:	ldr	r1, [pc, #2984]	; 1a40c <processOptions@@Base+0x101c>
   19860:	mov	r2, sl
   19864:	add	r1, pc, r1
   19868:	mov	r0, r5
   1986c:	bl	1b614 <openDataFile@@Base>
   19870:	subs	r6, r0, #0
   19874:	beq	19c40 <processOptions@@Base+0x850>
   19878:	ldr	r7, [fp, #-1584]	; 0xfffff9d0
   1987c:	sub	ip, fp, #1584	; 0x630
   19880:	sub	ip, ip, #4
   19884:	str	ip, [fp, #-1612]	; 0xfffff9b4
   19888:	lsl	r0, r7, #2
   1988c:	bl	14f04 <malloc@plt>
   19890:	cmp	r0, #0
   19894:	str	r0, [fp, #-1608]	; 0xfffff9b8
   19898:	beq	1a4a4 <processOptions@@Base+0x10b4>
   1989c:	cmp	r7, #0
   198a0:	movne	r3, #0
   198a4:	movne	r2, r0
   198a8:	movne	r1, r3
   198ac:	bne	198b8 <processOptions@@Base+0x4c8>
   198b0:	b	198cc <processOptions@@Base+0x4dc>
   198b4:	ldr	r2, [fp, #-1608]	; 0xfffff9b8
   198b8:	str	r1, [r2, r3, lsl #2]
   198bc:	add	r3, r3, #1
   198c0:	ldr	r2, [fp, #-1584]	; 0xfffff9d0
   198c4:	cmp	r3, r2
   198c8:	bcc	198b4 <processOptions@@Base+0x4c4>
   198cc:	ldr	r1, [pc, #2876]	; 1a410 <processOptions@@Base+0x1020>
   198d0:	sub	r2, r4, #8
   198d4:	mov	r0, r6
   198d8:	add	r1, pc, r1
   198dc:	bl	1b8f0 <processLines@@Base>
   198e0:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   198e4:	cmp	r3, #0
   198e8:	subne	sl, fp, #1584	; 0x630
   198ec:	movne	r4, #0
   198f0:	subne	sl, sl, #4
   198f4:	movne	r9, r4
   198f8:	mov	r7, r0
   198fc:	beq	19944 <processOptions@@Base+0x554>
   19900:	ldr	r2, [fp, #-1608]	; 0xfffff9b8
   19904:	ldr	r8, [r2, r4]
   19908:	cmp	r8, #0
   1990c:	beq	19934 <processOptions@@Base+0x544>
   19910:	ldr	r1, [fp, #-1588]	; 0xfffff9cc
   19914:	rsb	r3, r4, r4, lsl #3
   19918:	mov	r2, r8
   1991c:	mov	r0, sl
   19920:	add	r1, r1, r3
   19924:	bl	18ea4 <cancelProcess@@Base+0xfc>
   19928:	mov	r0, r8
   1992c:	bl	14ac0 <free@plt>
   19930:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   19934:	add	r9, r9, #1
   19938:	add	r4, r4, #4
   1993c:	cmp	r9, r3
   19940:	bcc	19900 <processOptions@@Base+0x510>
   19944:	cmp	r7, #0
   19948:	beq	1a3b0 <processOptions@@Base+0xfc0>
   1994c:	ldr	r0, [fp, #-1608]	; 0xfffff9b8
   19950:	bl	14ac0 <free@plt>
   19954:	mov	r0, r6
   19958:	bl	14f4c <fclose@plt>
   1995c:	ldr	r5, [fp, #-1648]	; 0xfffff990
   19960:	ldr	r0, [fp, #-1616]	; 0xfffff9b0
   19964:	ldr	r3, [r5, #16]
   19968:	ldr	r3, [r3]
   1996c:	cmp	r3, r0
   19970:	beq	19978 <processOptions@@Base+0x588>
   19974:	bl	14ac0 <free@plt>
   19978:	sub	r0, fp, #1584	; 0x630
   1997c:	mov	r1, #1
   19980:	sub	r0, r0, #4
   19984:	bl	190a0 <cancelProcess@@Base+0x2f8>
   19988:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   1998c:	tst	r3, #1
   19990:	movne	r0, #1
   19994:	bne	199a4 <processOptions@@Base+0x5b4>
   19998:	tst	r3, #4
   1999c:	moveq	r0, #0
   199a0:	movne	r0, #2
   199a4:	ldr	ip, [fp, #-1668]	; 0xfffff97c
   199a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   199ac:	ldr	r3, [ip]
   199b0:	cmp	r2, r3
   199b4:	bne	1a4d8 <processOptions@@Base+0x10e8>
   199b8:	sub	sp, fp, #32
   199bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199c0:	sub	r0, fp, #36	; 0x24
   199c4:	add	r2, r0, r3, lsl #2
   199c8:	ldr	r2, [r2, #-1284]	; 0xfffffafc
   199cc:	cmp	r2, #0
   199d0:	beq	199e0 <processOptions@@Base+0x5f0>
   199d4:	ldr	ip, [r2, #4]
   199d8:	cmp	ip, #0
   199dc:	beq	19bd4 <processOptions@@Base+0x7e4>
   199e0:	ldr	r2, [pc, #2604]	; 1a414 <processOptions@@Base+0x1024>
   199e4:	mov	ip, #63	; 0x3f
   199e8:	ldr	r2, [r8, r2]
   199ec:	str	r3, [r2]
   199f0:	cmp	ip, #63	; 0x3f
   199f4:	add	r5, r5, #1
   199f8:	mov	r4, #43	; 0x2b
   199fc:	beq	19ad0 <processOptions@@Base+0x6e0>
   19a00:	bgt	19a64 <processOptions@@Base+0x674>
   19a04:	cmp	ip, #0
   19a08:	beq	19b40 <processOptions@@Base+0x750>
   19a0c:	cmp	ip, #58	; 0x3a
   19a10:	bne	19af8 <processOptions@@Base+0x708>
   19a14:	ldr	r1, [fp, #-1644]	; 0xfffff994
   19a18:	mov	r2, #5
   19a1c:	mov	r0, #0
   19a20:	bl	14de4 <dcgettext@plt>
   19a24:	ldr	ip, [pc, #2536]	; 1a414 <processOptions@@Base+0x1024>
   19a28:	ldr	r1, [fp, #-1656]	; 0xfffff988
   19a2c:	mov	r3, r4
   19a30:	mov	r2, r0
   19a34:	mov	r0, #3
   19a38:	ldr	ip, [r8, ip]
   19a3c:	ldr	ip, [ip]
   19a40:	str	ip, [sp]
   19a44:	bl	1aa88 <logMessage@@Base>
   19a48:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   19a4c:	ldr	r0, [r9]
   19a50:	orr	r3, r3, #4
   19a54:	ldr	r4, [r6]
   19a58:	strb	r3, [fp, #-1324]	; 0xfffffad4
   19a5c:	ldr	r1, [sl]
   19a60:	b	19724 <processOptions@@Base+0x334>
   19a64:	cmp	ip, #72	; 0x48
   19a68:	beq	19b7c <processOptions@@Base+0x78c>
   19a6c:	cmp	ip, #104	; 0x68
   19a70:	bne	19af8 <processOptions@@Base+0x708>
   19a74:	mov	ip, #1
   19a78:	ldr	r0, [r9]
   19a7c:	str	ip, [fp, #-1624]	; 0xfffff9a8
   19a80:	ldr	r4, [r6]
   19a84:	ldr	r1, [sl]
   19a88:	b	19724 <processOptions@@Base+0x334>
   19a8c:	cmp	r7, r4
   19a90:	beq	19aa0 <processOptions@@Base+0x6b0>
   19a94:	ldrb	r2, [r3]
   19a98:	cmp	r2, #43	; 0x2b
   19a9c:	beq	19c58 <processOptions@@Base+0x868>
   19aa0:	mov	r2, #0
   19aa4:	str	r2, [sp]
   19aa8:	ldr	r2, [fp, #-1632]	; 0xfffff9a0
   19aac:	ldr	r3, [fp, #-1664]	; 0xfffff980
   19ab0:	bl	14e14 <getopt_long@plt>
   19ab4:	cmn	r0, #1
   19ab8:	mov	ip, r0
   19abc:	beq	1a4cc <processOptions@@Base+0x10dc>
   19ac0:	cmp	ip, #63	; 0x3f
   19ac4:	mov	r7, r4
   19ac8:	mov	r4, #45	; 0x2d
   19acc:	bne	19a00 <processOptions@@Base+0x610>
   19ad0:	ldr	r1, [fp, #-1628]	; 0xfffff9a4
   19ad4:	mov	r2, #5
   19ad8:	mov	r0, #0
   19adc:	bl	14de4 <dcgettext@plt>
   19ae0:	ldr	ip, [pc, #2348]	; 1a414 <processOptions@@Base+0x1024>
   19ae4:	mov	r3, r4
   19ae8:	ldr	r1, [fp, #-1636]	; 0xfffff99c
   19aec:	mov	r2, r0
   19af0:	mov	r0, #3
   19af4:	b	19a38 <processOptions@@Base+0x648>
   19af8:	sub	r0, fp, #36	; 0x24
   19afc:	add	r3, r0, ip, lsl #2
   19b00:	ldr	r3, [r3, #-1284]	; 0xfffffafc
   19b04:	ldr	r2, [r3, #4]
   19b08:	cmp	r2, #0
   19b0c:	beq	1a100 <processOptions@@Base+0xd10>
   19b10:	ldr	r2, [pc, #2304]	; 1a418 <processOptions@@Base+0x1028>
   19b14:	ldr	r2, [r8, r2]
   19b18:	ldr	r1, [r2]
   19b1c:	ldrb	r2, [r1]
   19b20:	cmp	r2, #0
   19b24:	bne	19b98 <processOptions@@Base+0x7a8>
   19b28:	add	ip, r0, ip
   19b2c:	ldr	r4, [r6]
   19b30:	ldr	r0, [r9]
   19b34:	strb	r2, [ip, #-1544]	; 0xfffff9f8
   19b38:	ldr	r1, [sl]
   19b3c:	b	19724 <processOptions@@Base+0x334>
   19b40:	ldr	r3, [fp, #-1612]	; 0xfffff9b4
   19b44:	sub	r0, fp, #36	; 0x24
   19b48:	sub	r1, fp, #36	; 0x24
   19b4c:	mov	r2, #1
   19b50:	add	r3, r0, r3, lsl #2
   19b54:	ldr	r3, [r3, #-1284]	; 0xfffffafc
   19b58:	ldr	r3, [r3, #12]
   19b5c:	str	ip, [r3]
   19b60:	ldr	r3, [fp, #-1612]	; 0xfffff9b4
   19b64:	ldr	r0, [r9]
   19b68:	add	r3, r1, r3
   19b6c:	ldr	r4, [r6]
   19b70:	ldr	r1, [sl]
   19b74:	strb	r2, [r3, #-1544]	; 0xfffff9f8
   19b78:	b	19724 <processOptions@@Base+0x334>
   19b7c:	mov	ip, #1
   19b80:	ldr	r0, [r9]
   19b84:	str	ip, [fp, #-1640]	; 0xfffff998
   19b88:	str	ip, [fp, #-1624]	; 0xfffff9a8
   19b8c:	ldr	r4, [r6]
   19b90:	ldr	r1, [sl]
   19b94:	b	19724 <processOptions@@Base+0x334>
   19b98:	ldr	r0, [r3, #12]
   19b9c:	cmp	r0, #0
   19ba0:	beq	19bb4 <processOptions@@Base+0x7c4>
   19ba4:	ldrb	r3, [r3, #10]
   19ba8:	tst	r3, #2
   19bac:	streq	r1, [r0]
   19bb0:	bne	1a364 <processOptions@@Base+0xf74>
   19bb4:	sub	r2, fp, #36	; 0x24
   19bb8:	mov	r3, #1
   19bbc:	add	ip, r2, ip
   19bc0:	ldr	r0, [r9]
   19bc4:	ldr	r4, [r6]
   19bc8:	strb	r3, [ip, #-1544]	; 0xfffff9f8
   19bcc:	ldr	r1, [sl]
   19bd0:	b	19724 <processOptions@@Base+0x334>
   19bd4:	ldr	r2, [r2, #12]
   19bd8:	cmp	r2, #0
   19bdc:	strne	r3, [fp, #-1612]	; 0xfffff9b4
   19be0:	bne	199f0 <processOptions@@Base+0x600>
   19be4:	b	199e0 <processOptions@@Base+0x5f0>
   19be8:	mov	r0, r8
   19bec:	str	ip, [fp, #-1688]	; 0xfffff968
   19bf0:	bl	14f10 <strlen@plt>
   19bf4:	add	r1, r0, #4
   19bf8:	str	r1, [fp, #-1684]	; 0xfffff96c
   19bfc:	mov	r0, r1
   19c00:	bl	14f04 <malloc@plt>
   19c04:	ldr	r1, [fp, #-1684]	; 0xfffff96c
   19c08:	ldr	ip, [fp, #-1688]	; 0xfffff968
   19c0c:	subs	r9, r0, #0
   19c10:	beq	1a350 <processOptions@@Base+0xf60>
   19c14:	ldr	r2, [fp, #-1644]	; 0xfffff994
   19c18:	str	r2, [sp]
   19c1c:	mov	r2, #1
   19c20:	ldr	r3, [fp, #-1624]	; 0xfffff9a8
   19c24:	str	r8, [sp, #8]
   19c28:	str	r3, [sp, #4]
   19c2c:	mvn	r3, #0
   19c30:	str	ip, [fp, #-1688]	; 0xfffff968
   19c34:	bl	14f1c <__snprintf_chk@plt>
   19c38:	ldr	ip, [fp, #-1688]	; 0xfffff968
   19c3c:	b	195c0 <processOptions@@Base+0x1d0>
   19c40:	cmp	sl, #0
   19c44:	bne	1a378 <processOptions@@Base+0xf88>
   19c48:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   19c4c:	orr	r3, r3, #2
   19c50:	strb	r3, [fp, #-1324]	; 0xfffffad4
   19c54:	b	1995c <processOptions@@Base+0x56c>
   19c58:	adds	r3, r3, #1
   19c5c:	movne	r5, r3
   19c60:	movne	r7, r4
   19c64:	bne	19724 <processOptions@@Base+0x334>
   19c68:	b	19aa0 <processOptions@@Base+0x6b0>
   19c6c:	ldr	r3, [pc, #1960]	; 1a41c <processOptions@@Base+0x102c>
   19c70:	str	sp, [fp, #-1680]	; 0xfffff970
   19c74:	sub	sp, sp, #80	; 0x50
   19c78:	ldr	r6, [fp, #-1584]	; 0xfffff9d0
   19c7c:	add	sl, sp, #24
   19c80:	ldr	r3, [r8, r3]
   19c84:	cmp	r6, #0
   19c88:	ldr	r3, [r3]
   19c8c:	str	r3, [fp, #-1632]	; 0xfffff9a0
   19c90:	beq	1a4ac <processOptions@@Base+0x10bc>
   19c94:	ldr	r5, [fp, #-1588]	; 0xfffff9cc
   19c98:	mov	r7, #0
   19c9c:	mov	r4, r7
   19ca0:	mov	r3, r7
   19ca4:	mov	r9, r7
   19ca8:	str	r7, [fp, #-1656]	; 0xfffff988
   19cac:	str	r8, [fp, #-1624]	; 0xfffff9a8
   19cb0:	rsb	r3, r3, r3, lsl #3
   19cb4:	ldr	r0, [r5, r3, lsl #2]
   19cb8:	add	r8, r5, r3, lsl #2
   19cbc:	cmp	r0, #0
   19cc0:	beq	19cd0 <processOptions@@Base+0x8e0>
   19cc4:	bl	14f10 <strlen@plt>
   19cc8:	cmp	r4, r0
   19ccc:	movcc	r4, r0
   19cd0:	ldr	r0, [r8, #4]
   19cd4:	cmp	r0, #0
   19cd8:	beq	19ce8 <processOptions@@Base+0x8f8>
   19cdc:	bl	14f10 <strlen@plt>
   19ce0:	cmp	r9, r0
   19ce4:	movcc	r9, r0
   19ce8:	add	r7, r7, #1
   19cec:	cmp	r7, r6
   19cf0:	mov	r3, r7
   19cf4:	bne	19cb0 <processOptions@@Base+0x8c0>
   19cf8:	ldr	r8, [fp, #-1624]	; 0xfffff9a8
   19cfc:	str	r9, [fp, #-1656]	; 0xfffff988
   19d00:	ldr	r1, [pc, #1816]	; 1a420 <processOptions@@Base+0x1030>
   19d04:	mov	r2, #5
   19d08:	mov	r0, #0
   19d0c:	add	r1, pc, r1
   19d10:	bl	14de4 <dcgettext@plt>
   19d14:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   19d18:	bl	150b4 <fputs@plt>
   19d1c:	ldr	r3, [pc, #1792]	; 1a424 <processOptions@@Base+0x1034>
   19d20:	ldr	r2, [pc, #1792]	; 1a428 <processOptions@@Base+0x1038>
   19d24:	mov	r1, #1
   19d28:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   19d2c:	ldr	r3, [r8, r3]
   19d30:	add	r2, pc, r2
   19d34:	ldr	r3, [r3]
   19d38:	bl	14bc8 <__fprintf_chk@plt>
   19d3c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   19d40:	cmp	r3, #0
   19d44:	bne	1a44c <processOptions@@Base+0x105c>
   19d48:	ldr	ip, [fp, #-1660]	; 0xfffff984
   19d4c:	cmp	ip, #0
   19d50:	beq	19d60 <processOptions@@Base+0x970>
   19d54:	ldrb	r3, [ip]
   19d58:	cmp	r3, #0
   19d5c:	bne	1a38c <processOptions@@Base+0xf9c>
   19d60:	mov	r0, #10
   19d64:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   19d68:	bl	14ec8 <fputc@plt>
   19d6c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   19d70:	cmp	r3, #0
   19d74:	beq	1a0c8 <processOptions@@Base+0xcd8>
   19d78:	ldr	r5, [pc, #1708]	; 1a42c <processOptions@@Base+0x103c>
   19d7c:	add	r4, r4, #3
   19d80:	ldr	ip, [pc, #1704]	; 1a430 <processOptions@@Base+0x1040>
   19d84:	add	r5, pc, r5
   19d88:	str	r5, [fp, #-1628]	; 0xfffff9a4
   19d8c:	add	ip, pc, ip
   19d90:	mov	r5, #0
   19d94:	str	ip, [fp, #-1676]	; 0xfffff974
   19d98:	mov	r7, r5
   19d9c:	ldr	ip, [fp, #-1656]	; 0xfffff988
   19da0:	str	r5, [fp, #-1636]	; 0xfffff99c
   19da4:	mov	r5, #32
   19da8:	add	ip, ip, #3
   19dac:	str	r4, [fp, #-1660]	; 0xfffff984
   19db0:	str	ip, [fp, #-1644]	; 0xfffff994
   19db4:	ldr	ip, [fp, #-1640]	; 0xfffff998
   19db8:	rsb	r7, r7, r7, lsl #3
   19dbc:	ldr	r6, [fp, #-1588]	; 0xfffff9cc
   19dc0:	cmp	ip, #0
   19dc4:	add	r8, r6, r7, lsl #2
   19dc8:	bne	19dd8 <processOptions@@Base+0x9e8>
   19dcc:	ldrb	r2, [r8, #10]
   19dd0:	tst	r2, #1
   19dd4:	bne	1a0b0 <processOptions@@Base+0xcc0>
   19dd8:	mov	r0, #45	; 0x2d
   19ddc:	strb	r0, [sl]
   19de0:	ldrb	r3, [r8, #8]
   19de4:	strb	r5, [sl, #2]
   19de8:	ldr	ip, [fp, #-1644]	; 0xfffff994
   19dec:	strb	r3, [sl, #1]
   19df0:	ldr	r9, [r8, #4]
   19df4:	cmp	r9, #0
   19df8:	beq	1a0e4 <processOptions@@Base+0xcf4>
   19dfc:	mov	r0, r9
   19e00:	str	ip, [fp, #-1688]	; 0xfffff968
   19e04:	bl	14f10 <strlen@plt>
   19e08:	mov	r1, r9
   19e0c:	mov	r3, #77	; 0x4d
   19e10:	mov	r4, r0
   19e14:	mov	r2, r0
   19e18:	add	r0, sl, #3
   19e1c:	bl	14a6c <__memcpy_chk@plt>
   19e20:	ldr	r1, [fp, #-1644]	; 0xfffff994
   19e24:	add	r3, r4, #3
   19e28:	add	r2, r4, #4
   19e2c:	cmp	r1, r3
   19e30:	ldr	ip, [fp, #-1688]	; 0xfffff968
   19e34:	bls	1a0f8 <processOptions@@Base+0xd08>
   19e38:	mov	r2, r1
   19e3c:	strb	r5, [sl, r3]
   19e40:	add	r3, r3, #1
   19e44:	cmp	r2, r3
   19e48:	bne	19e3c <processOptions@@Base+0xa4c>
   19e4c:	ldr	r3, [fp, #-1656]	; 0xfffff988
   19e50:	add	r2, r3, #4
   19e54:	ldr	r0, [fp, #-1660]	; 0xfffff984
   19e58:	strb	r5, [sl, ip]
   19e5c:	add	r4, r0, r2
   19e60:	ldr	r0, [r6, r7, lsl #2]
   19e64:	cmp	r0, #0
   19e68:	beq	19ec8 <processOptions@@Base+0xad8>
   19e6c:	add	r9, ip, #3
   19e70:	str	r2, [fp, #-1684]	; 0xfffff96c
   19e74:	str	ip, [fp, #-1688]	; 0xfffff968
   19e78:	bl	14f10 <strlen@plt>
   19e7c:	ldr	ip, [fp, #-1688]	; 0xfffff968
   19e80:	mov	r1, #45	; 0x2d
   19e84:	ldr	r2, [fp, #-1684]	; 0xfffff96c
   19e88:	add	ip, sl, ip
   19e8c:	strb	r1, [sl, r2]
   19e90:	strb	r1, [ip, #2]
   19e94:	ldr	r1, [r6, r7, lsl #2]
   19e98:	mov	r3, r0
   19e9c:	add	r0, sl, r9
   19ea0:	mov	r2, r3
   19ea4:	str	r3, [fp, #-1684]	; 0xfffff96c
   19ea8:	bl	14eec <memcpy@plt>
   19eac:	ldr	r3, [fp, #-1684]	; 0xfffff96c
   19eb0:	ldr	r1, [r8, #4]
   19eb4:	add	r2, r3, r9
   19eb8:	cmp	r1, #0
   19ebc:	movne	r3, #61	; 0x3d
   19ec0:	strbne	r3, [sl, r2]
   19ec4:	addne	r2, r2, #1
   19ec8:	cmp	r4, r2
   19ecc:	bls	1a348 <processOptions@@Base+0xf58>
   19ed0:	mov	r3, r2
   19ed4:	strb	r5, [sl, r3]
   19ed8:	add	r3, r3, #1
   19edc:	cmp	r3, r4
   19ee0:	bne	19ed4 <processOptions@@Base+0xae4>
   19ee4:	mov	r3, sl
   19ee8:	add	r6, r4, #2
   19eec:	strb	r5, [r3, r4]!
   19ef0:	rsb	r9, r4, #77	; 0x4d
   19ef4:	strb	r5, [r3, #1]
   19ef8:	ldr	r1, [r8, #20]
   19efc:	cmp	r1, #0
   19f00:	beq	1a0dc <processOptions@@Base+0xcec>
   19f04:	mov	r0, #0
   19f08:	mov	r2, #5
   19f0c:	bl	14de4 <dcgettext@plt>
   19f10:	mov	r7, r0
   19f14:	ldr	r0, [r8, #24]
   19f18:	cmp	r0, #0
   19f1c:	beq	19fb8 <processOptions@@Base+0xbc8>
   19f20:	ldr	r2, [r0]
   19f24:	sub	lr, fp, #1600	; 0x640
   19f28:	sub	lr, lr, #4
   19f2c:	mov	r4, sp
   19f30:	cmp	r2, #0
   19f34:	subne	r1, lr, #4
   19f38:	movne	r3, #0
   19f3c:	beq	1a3a8 <processOptions@@Base+0xfb8>
   19f40:	str	r2, [r1, #4]!
   19f44:	add	r3, r3, #1
   19f48:	ldr	r2, [r0, #4]!
   19f4c:	cmp	r2, #0
   19f50:	bne	19f40 <processOptions@@Base+0xb50>
   19f54:	cmp	r3, #3
   19f58:	bgt	19f78 <processOptions@@Base+0xb88>
   19f5c:	sub	r2, r3, #1
   19f60:	mov	r1, #0
   19f64:	add	r2, lr, r2, lsl #2
   19f68:	add	r3, r3, #1
   19f6c:	str	r1, [r2, #4]!
   19f70:	cmp	r3, #3
   19f74:	ble	19f68 <processOptions@@Base+0xb78>
   19f78:	str	r7, [sp]
   19f7c:	sub	r7, fp, #296	; 0x128
   19f80:	ldr	lr, [fp, #-1604]	; 0xfffff9bc
   19f84:	mov	r1, #256	; 0x100
   19f88:	mov	r0, r7
   19f8c:	mov	r3, r1
   19f90:	mov	r2, #1
   19f94:	str	lr, [sp, #4]
   19f98:	ldr	lr, [fp, #-1600]	; 0xfffff9c0
   19f9c:	str	lr, [sp, #8]
   19fa0:	ldr	lr, [fp, #-1596]	; 0xfffff9c4
   19fa4:	str	lr, [sp, #12]
   19fa8:	ldr	lr, [fp, #-1592]	; 0xfffff9c8
   19fac:	str	lr, [sp, #16]
   19fb0:	bl	14f1c <__snprintf_chk@plt>
   19fb4:	mov	sp, r4
   19fb8:	mov	r0, r7
   19fbc:	add	ip, sl, r6
   19fc0:	str	ip, [fp, #-1624]	; 0xfffff9a8
   19fc4:	bl	14f10 <strlen@plt>
   19fc8:	mov	r8, r0
   19fcc:	cmp	r9, r8
   19fd0:	movcs	r4, r8
   19fd4:	bcs	1a018 <processOptions@@Base+0xc28>
   19fd8:	ldrb	r2, [r7, r9]
   19fdc:	add	r3, r7, r9
   19fe0:	mov	r4, r9
   19fe4:	cmp	r2, #32
   19fe8:	beq	19ffc <processOptions@@Base+0xc0c>
   19fec:	ldrb	r2, [r3, #-1]!
   19ff0:	sub	r4, r4, #1
   19ff4:	cmp	r2, #32
   19ff8:	bne	19fec <processOptions@@Base+0xbfc>
   19ffc:	add	r3, r7, r4
   1a000:	b	1a008 <processOptions@@Base+0xc18>
   1a004:	mov	r4, r1
   1a008:	ldrb	r2, [r3, #-1]!
   1a00c:	sub	r1, r4, #1
   1a010:	cmp	r2, #32
   1a014:	beq	1a004 <processOptions@@Base+0xc14>
   1a018:	mov	r1, r7
   1a01c:	mov	r2, r4
   1a020:	ldr	r0, [fp, #-1624]	; 0xfffff9a8
   1a024:	bl	14eec <memcpy@plt>
   1a028:	ldr	ip, [fp, #-1624]	; 0xfffff9a8
   1a02c:	mov	r0, #0
   1a030:	ldr	r2, [fp, #-1628]	; 0xfffff9a4
   1a034:	mov	r3, sl
   1a038:	mov	r1, #1
   1a03c:	strb	r0, [ip, r4]
   1a040:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   1a044:	bl	14bc8 <__fprintf_chk@plt>
   1a048:	ldrb	r3, [r7, r4]
   1a04c:	add	r2, r7, r4
   1a050:	cmp	r3, #32
   1a054:	bne	1a080 <processOptions@@Base+0xc90>
   1a058:	rsb	r7, r7, #1
   1a05c:	mov	r4, r2
   1a060:	b	1a068 <processOptions@@Base+0xc78>
   1a064:	mov	r4, r3
   1a068:	ldrb	r2, [r4, #1]
   1a06c:	add	r3, r4, #1
   1a070:	add	r4, r7, r4
   1a074:	cmp	r2, #32
   1a078:	mov	r2, r3
   1a07c:	beq	1a064 <processOptions@@Base+0xc74>
   1a080:	subs	r8, r8, r4
   1a084:	beq	1a0ac <processOptions@@Base+0xcbc>
   1a088:	cmp	r6, #0
   1a08c:	beq	1a0a4 <processOptions@@Base+0xcb4>
   1a090:	mov	r3, #0
   1a094:	strb	r5, [sl, r3]
   1a098:	add	r3, r3, #1
   1a09c:	cmp	r3, r6
   1a0a0:	bne	1a094 <processOptions@@Base+0xca4>
   1a0a4:	mov	r7, r2
   1a0a8:	b	19fcc <processOptions@@Base+0xbdc>
   1a0ac:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1a0b0:	ldr	ip, [fp, #-1636]	; 0xfffff99c
   1a0b4:	add	ip, ip, #1
   1a0b8:	str	ip, [fp, #-1636]	; 0xfffff99c
   1a0bc:	cmp	ip, r3
   1a0c0:	mov	r7, ip
   1a0c4:	bcc	19db4 <processOptions@@Base+0x9c4>
   1a0c8:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   1a0cc:	ldr	sp, [fp, #-1680]	; 0xfffff970
   1a0d0:	orr	r3, r3, #1
   1a0d4:	strb	r3, [fp, #-1324]	; 0xfffffad4
   1a0d8:	b	19784 <processOptions@@Base+0x394>
   1a0dc:	ldr	r7, [fp, #-1676]	; 0xfffff974
   1a0e0:	b	19f14 <processOptions@@Base+0xb24>
   1a0e4:	ldr	r1, [fp, #-1644]	; 0xfffff994
   1a0e8:	mov	r3, #3
   1a0ec:	mov	r2, #4
   1a0f0:	cmp	r1, r3
   1a0f4:	bhi	19e38 <processOptions@@Base+0xa48>
   1a0f8:	mov	ip, r3
   1a0fc:	b	19e54 <processOptions@@Base+0xa64>
   1a100:	ldr	r2, [r3, #12]
   1a104:	cmp	r2, #0
   1a108:	beq	19bb4 <processOptions@@Base+0x7c4>
   1a10c:	ldrb	r3, [r3, #10]
   1a110:	tst	r3, #2
   1a114:	ldrne	r3, [r2]
   1a118:	moveq	r3, #1
   1a11c:	addne	r3, r3, #1
   1a120:	str	r3, [r2]
   1a124:	b	19bb4 <processOptions@@Base+0x7c4>
   1a128:	ldr	ip, [fp, #-1648]	; 0xfffff990
   1a12c:	ldr	ip, [ip, #20]
   1a130:	mov	r0, ip
   1a134:	str	ip, [fp, #-1628]	; 0xfffff9a4
   1a138:	bl	14f10 <strlen@plt>
   1a13c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1a140:	cmp	r3, #0
   1a144:	beq	19810 <processOptions@@Base+0x420>
   1a148:	ldr	r5, [pc, #740]	; 1a434 <processOptions@@Base+0x1044>
   1a14c:	mov	r4, #0
   1a150:	mov	r7, #95	; 0x5f
   1a154:	add	r0, r0, #2
   1a158:	add	r5, pc, r5
   1a15c:	str	r5, [fp, #-1640]	; 0xfffff998
   1a160:	mov	r5, r4
   1a164:	str	r0, [fp, #-1636]	; 0xfffff99c
   1a168:	ldr	r2, [fp, #-1588]	; 0xfffff9cc
   1a16c:	add	r6, r2, r4
   1a170:	ldrb	r1, [r6, #10]
   1a174:	tst	r1, #8
   1a178:	beq	1a248 <processOptions@@Base+0xe58>
   1a17c:	ldr	r9, [r2, r4]
   1a180:	cmp	r9, #0
   1a184:	beq	1a248 <processOptions@@Base+0xe58>
   1a188:	mov	r0, r9
   1a18c:	str	sp, [fp, #-1632]	; 0xfffff9a0
   1a190:	bl	14f10 <strlen@plt>
   1a194:	ldr	ip, [fp, #-1636]	; 0xfffff99c
   1a198:	mov	r2, #1
   1a19c:	mvn	r3, #0
   1a1a0:	add	r1, ip, r0
   1a1a4:	ldr	ip, [fp, #-1640]	; 0xfffff998
   1a1a8:	add	r0, r1, #7
   1a1ac:	bic	r0, r0, #7
   1a1b0:	sub	sp, sp, r0
   1a1b4:	add	r8, sp, #24
   1a1b8:	str	ip, [sp]
   1a1bc:	ldr	ip, [fp, #-1628]	; 0xfffff9a4
   1a1c0:	mov	r0, r8
   1a1c4:	str	r9, [sp, #8]
   1a1c8:	str	ip, [sp, #4]
   1a1cc:	bl	14f1c <__snprintf_chk@plt>
   1a1d0:	ldrb	r9, [sp, #24]
   1a1d4:	cmp	r9, #0
   1a1d8:	addne	sl, sp, #25
   1a1dc:	beq	1a224 <processOptions@@Base+0xe34>
   1a1e0:	cmp	r9, #45	; 0x2d
   1a1e4:	strbeq	r7, [sl, #-1]
   1a1e8:	beq	1a218 <processOptions@@Base+0xe28>
   1a1ec:	bl	14e44 <__ctype_b_loc@plt>
   1a1f0:	sxth	r9, r9
   1a1f4:	lsl	r3, r9, #1
   1a1f8:	ldr	r2, [r0]
   1a1fc:	ldrh	r3, [r2, r3]
   1a200:	tst	r3, #512	; 0x200
   1a204:	beq	1a218 <processOptions@@Base+0xe28>
   1a208:	bl	14cc4 <__ctype_toupper_loc@plt>
   1a20c:	ldr	r3, [r0]
   1a210:	ldr	r3, [r3, r9, lsl #2]
   1a214:	strb	r3, [sl, #-1]
   1a218:	ldrb	r9, [sl], #1
   1a21c:	cmp	r9, #0
   1a220:	bne	1a1e0 <processOptions@@Base+0xdf0>
   1a224:	mov	r0, r8
   1a228:	bl	150c0 <getenv@plt>
   1a22c:	subs	r2, r0, #0
   1a230:	beq	1a240 <processOptions@@Base+0xe50>
   1a234:	ldrb	r3, [r2]
   1a238:	cmp	r3, #0
   1a23c:	bne	1a334 <processOptions@@Base+0xf44>
   1a240:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1a244:	ldr	sp, [fp, #-1632]	; 0xfffff9a0
   1a248:	add	r5, r5, #1
   1a24c:	add	r4, r4, #28
   1a250:	cmp	r5, r3
   1a254:	bcc	1a168 <processOptions@@Base+0xd78>
   1a258:	b	19810 <processOptions@@Base+0x420>
   1a25c:	ldr	r4, [r5, #20]
   1a260:	mov	r0, r4
   1a264:	bl	1d77c <getBootParameters@@Base>
   1a268:	subs	r5, r0, #0
   1a26c:	movne	r0, r5
   1a270:	beq	1a4b8 <processOptions@@Base+0x10c8>
   1a274:	sub	r2, fp, #1600	; 0x640
   1a278:	mov	r1, #44	; 0x2c
   1a27c:	sub	r2, r2, #4
   1a280:	mov	r4, #0
   1a284:	sub	r2, r2, #8
   1a288:	str	r4, [fp, #-1612]	; 0xfffff9b4
   1a28c:	bl	1c010 <splitString@@Base>
   1a290:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1a294:	cmp	r3, r4
   1a298:	movne	r7, #44	; 0x2c
   1a29c:	movne	r2, r4
   1a2a0:	mov	r6, r0
   1a2a4:	beq	1a318 <processOptions@@Base+0xf28>
   1a2a8:	rsb	r2, r2, r2, lsl #3
   1a2ac:	ldr	r1, [fp, #-1588]	; 0xfffff9cc
   1a2b0:	add	r1, r1, r2, lsl #2
   1a2b4:	ldrb	r2, [r1, #9]
   1a2b8:	cmp	r2, #0
   1a2bc:	beq	1a308 <processOptions@@Base+0xf18>
   1a2c0:	ldr	r0, [fp, #-1612]	; 0xfffff9b4
   1a2c4:	cmp	r2, r0
   1a2c8:	bgt	1a308 <processOptions@@Base+0xf18>
   1a2cc:	sub	r2, r2, #-1073741823	; 0xc0000001
   1a2d0:	ldr	r2, [r6, r2, lsl #2]
   1a2d4:	ldrb	r0, [r2]
   1a2d8:	cmp	r0, #0
   1a2dc:	beq	1a308 <processOptions@@Base+0xf18>
   1a2e0:	add	r3, r2, #1
   1a2e4:	cmp	r0, #43	; 0x2b
   1a2e8:	strbeq	r7, [r3, #-1]
   1a2ec:	ldrb	r0, [r3], #1
   1a2f0:	cmp	r0, #0
   1a2f4:	bne	1a2e4 <processOptions@@Base+0xef4>
   1a2f8:	sub	r0, fp, #1584	; 0x630
   1a2fc:	sub	r0, r0, #4
   1a300:	bl	18ea4 <cancelProcess@@Base+0xfc>
   1a304:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1a308:	add	r4, r4, #1
   1a30c:	cmp	r4, r3
   1a310:	mov	r2, r4
   1a314:	bcc	1a2a8 <processOptions@@Base+0xeb8>
   1a318:	mov	r0, r6
   1a31c:	bl	1bfdc <deallocateStrings@@Base>
   1a320:	cmp	r5, #0
   1a324:	beq	197f4 <processOptions@@Base+0x404>
   1a328:	mov	r0, r5
   1a32c:	bl	14ac0 <free@plt>
   1a330:	b	197f4 <processOptions@@Base+0x404>
   1a334:	sub	r0, fp, #1584	; 0x630
   1a338:	mov	r1, r6
   1a33c:	sub	r0, r0, #4
   1a340:	bl	18ea4 <cancelProcess@@Base+0xfc>
   1a344:	b	1a240 <processOptions@@Base+0xe50>
   1a348:	mov	r4, r2
   1a34c:	b	19ee4 <processOptions@@Base+0xaf4>
   1a350:	str	ip, [fp, #-1688]	; 0xfffff968
   1a354:	bl	1ab94 <logMallocError@@Base>
   1a358:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1a35c:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1a360:	b	1951c <processOptions@@Base+0x12c>
   1a364:	mov	r2, #0
   1a368:	str	ip, [fp, #-1688]	; 0xfffff968
   1a36c:	bl	18dc0 <cancelProcess@@Base+0x18>
   1a370:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1a374:	b	19bb4 <processOptions@@Base+0x7c4>
   1a378:	bl	15000 <__errno_location@plt>
   1a37c:	ldr	r3, [r0]
   1a380:	cmp	r3, #2
   1a384:	bne	19c48 <processOptions@@Base+0x858>
   1a388:	b	1995c <processOptions@@Base+0x56c>
   1a38c:	ldr	r2, [pc, #164]	; 1a438 <processOptions@@Base+0x1048>
   1a390:	mov	r3, ip
   1a394:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   1a398:	mov	r1, #1
   1a39c:	add	r2, pc, r2
   1a3a0:	bl	14bc8 <__fprintf_chk@plt>
   1a3a4:	b	19d60 <processOptions@@Base+0x970>
   1a3a8:	mov	r3, r2
   1a3ac:	b	19f5c <processOptions@@Base+0xb6c>
   1a3b0:	ldr	r1, [pc, #132]	; 1a43c <processOptions@@Base+0x104c>
   1a3b4:	mov	r2, #5
   1a3b8:	mov	r0, r7
   1a3bc:	add	r1, pc, r1
   1a3c0:	bl	14de4 <dcgettext@plt>
   1a3c4:	mov	r2, r5
   1a3c8:	mov	r1, r0
   1a3cc:	mov	r0, #3
   1a3d0:	bl	1aa88 <logMessage@@Base>
   1a3d4:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   1a3d8:	orr	r3, r3, #2
   1a3dc:	strb	r3, [fp, #-1324]	; 0xfffffad4
   1a3e0:	b	1994c <processOptions@@Base+0x55c>
   1a3e4:	strdeq	ip, [r1], -r0
   1a3e8:	andeq	r0, r0, r4, lsl #5
   1a3ec:	andeq	sl, r0, r0, lsr ip
   1a3f0:	andeq	sl, r0, r0, lsr #24
   1a3f4:	andeq	r0, r0, r0, lsl #5
   1a3f8:	andeq	r0, r0, r8, lsl #5
   1a3fc:	andeq	sl, r0, r0, lsr sl
   1a400:	andeq	sl, r0, r0, lsr sl
   1a404:	andeq	sl, r0, r8, lsr #20
   1a408:	andeq	sl, r0, r0, lsl sl
   1a40c:	andeq	fp, r0, ip, ror #10
   1a410:			; <UNDEFINED> instruction: 0xfffff85c
   1a414:	andeq	r0, r0, r4, lsr #5
   1a418:	muleq	r0, r4, r2
   1a41c:	andeq	r0, r0, r0, asr #5
   1a420:	andeq	sl, r0, ip, lsr r4
   1a424:			; <UNDEFINED> instruction: 0x000002b0
   1a428:	andeq	sl, r0, ip, ror #26
   1a42c:	andeq	r9, r0, r4, lsl #21
   1a430:	muleq	r0, ip, sl
   1a434:	andeq	sl, r0, r4
   1a438:	andeq	sl, r0, ip, ror #1
   1a43c:	andeq	r9, r0, r8, lsr #27
   1a440:	strdeq	r9, [r0], -r4
   1a444:			; <UNDEFINED> instruction: 0x00009cb4
   1a448:	andeq	r9, r0, r4, asr #25
   1a44c:	ldr	r0, [pc, #-20]	; 1a440 <processOptions@@Base+0x1050>
   1a450:	mov	r1, #1
   1a454:	ldr	r3, [fp, #-1632]	; 0xfffff9a0
   1a458:	mov	r2, #2
   1a45c:	add	r0, pc, r0
   1a460:	bl	14ee0 <fwrite@plt>
   1a464:	ldr	r1, [pc, #-40]	; 1a444 <processOptions@@Base+0x1054>
   1a468:	mov	r2, #5
   1a46c:	mov	r0, #0
   1a470:	add	r1, pc, r1
   1a474:	bl	14de4 <dcgettext@plt>
   1a478:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   1a47c:	bl	150b4 <fputs@plt>
   1a480:	ldr	r0, [pc, #-64]	; 1a448 <processOptions@@Base+0x1058>
   1a484:	mov	r1, #1
   1a488:	mov	r2, #5
   1a48c:	ldr	r3, [fp, #-1632]	; 0xfffff9a0
   1a490:	add	r0, pc, r0
   1a494:	bl	14ee0 <fwrite@plt>
   1a498:	b	19d48 <processOptions@@Base+0x958>
   1a49c:	ldr	r7, [fp, #-1664]	; 0xfffff980
   1a4a0:	b	195f8 <processOptions@@Base+0x208>
   1a4a4:	bl	1ab94 <logMallocError@@Base>
   1a4a8:	b	19954 <processOptions@@Base+0x564>
   1a4ac:	str	r6, [fp, #-1656]	; 0xfffff988
   1a4b0:	mov	r4, r6
   1a4b4:	b	19d00 <processOptions@@Base+0x910>
   1a4b8:	mov	r0, r4
   1a4bc:	bl	150c0 <getenv@plt>
   1a4c0:	cmp	r0, #0
   1a4c4:	bne	1a274 <processOptions@@Base+0xe84>
   1a4c8:	b	197f4 <processOptions@@Base+0x404>
   1a4cc:	ldr	r4, [r6]
   1a4d0:	ldr	r1, [sl]
   1a4d4:	b	19760 <processOptions@@Base+0x370>
   1a4d8:	bl	14d9c <__stack_chk_fail@plt>
   1a4dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a4e0:	sub	sp, sp, #12
   1a4e4:	ldr	ip, [r2]
   1a4e8:	add	r6, r0, r1
   1a4ec:	ldr	r3, [pc, #140]	; 1a580 <processOptions@@Base+0x1190>
   1a4f0:	rsb	r1, r0, r6
   1a4f4:	ldr	r5, [r2, #4]
   1a4f8:	mov	r9, r0
   1a4fc:	ldr	r7, [r2, #8]
   1a500:	add	r3, pc, r3
   1a504:	str	ip, [sp, #4]
   1a508:	mov	r2, #1
   1a50c:	str	r3, [sp]
   1a510:	mvn	r3, #0
   1a514:	bl	14f1c <__snprintf_chk@plt>
   1a518:	add	r7, r5, r7
   1a51c:	add	r0, r9, r0
   1a520:	cmp	r0, r6
   1a524:	movcc	r4, r0
   1a528:	movcs	r4, r6
   1a52c:	cmp	r5, r7
   1a530:	bcs	1a574 <processOptions@@Base+0x1184>
   1a534:	ldr	r8, [pc, #72]	; 1a584 <processOptions@@Base+0x1194>
   1a538:	add	r8, pc, r8
   1a53c:	str	r8, [sp]
   1a540:	mov	r0, r4
   1a544:	ldrb	ip, [r5], #1
   1a548:	rsb	r1, r4, r6
   1a54c:	mov	r2, #1
   1a550:	mvn	r3, #0
   1a554:	str	ip, [sp, #4]
   1a558:	bl	14f1c <__snprintf_chk@plt>
   1a55c:	add	r0, r4, r0
   1a560:	cmp	r0, r6
   1a564:	movcc	r4, r0
   1a568:	movcs	r4, r6
   1a56c:	cmp	r5, r7
   1a570:	bne	1a53c <processOptions@@Base+0x114c>
   1a574:	rsb	r0, r9, r4
   1a578:	add	sp, sp, #12
   1a57c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a580:	andeq	r9, r0, r4, lsl #12
   1a584:	andeq	r9, r0, ip, asr #24
   1a588:	push	{r4, r5, lr}
   1a58c:	mov	ip, r2
   1a590:	ldr	r4, [r2, #4]
   1a594:	sub	sp, sp, #12
   1a598:	ldr	lr, [ip]
   1a59c:	mvn	r3, #0
   1a5a0:	mov	r2, #1
   1a5a4:	mov	r5, r1
   1a5a8:	ldr	ip, [r4]
   1a5ac:	str	lr, [sp]
   1a5b0:	str	ip, [sp, #4]
   1a5b4:	bl	14b5c <__vsnprintf_chk@plt>
   1a5b8:	cmp	r0, #0
   1a5bc:	movlt	r0, #0
   1a5c0:	blt	1a5cc <processOptions@@Base+0x11dc>
   1a5c4:	cmp	r0, r5
   1a5c8:	movcs	r0, r5
   1a5cc:	add	sp, sp, #12
   1a5d0:	pop	{r4, r5, pc}

0001a5d4 <enableLogCategory@@Base>:
   1a5d4:	push	{r3, r4, r5, r6, r7, lr}
   1a5d8:	mov	r5, r0
   1a5dc:	ldr	r6, [pc, #104]	; 1a64c <enableLogCategory@@Base+0x78>
   1a5e0:	ldr	r4, [pc, #104]	; 1a650 <enableLogCategory@@Base+0x7c>
   1a5e4:	ldr	r7, [pc, #104]	; 1a654 <enableLogCategory@@Base+0x80>
   1a5e8:	add	r6, pc, r6
   1a5ec:	add	r4, pc, r4
   1a5f0:	add	r6, r6, #56	; 0x38
   1a5f4:	add	r7, pc, r7
   1a5f8:	ldr	r1, [r4]
   1a5fc:	mov	r0, r5
   1a600:	cmp	r1, #0
   1a604:	beq	1a614 <enableLogCategory@@Base+0x40>
   1a608:	bl	14aa8 <strcasecmp@plt>
   1a60c:	cmp	r0, #0
   1a610:	beq	1a628 <enableLogCategory@@Base+0x54>
   1a614:	add	r4, r4, #8
   1a618:	cmp	r4, r6
   1a61c:	bcc	1a5f8 <enableLogCategory@@Base+0x24>
   1a620:	mov	r0, #0
   1a624:	pop	{r3, r4, r5, r6, r7, pc}
   1a628:	ldr	r2, [pc, #40]	; 1a658 <enableLogCategory@@Base+0x84>
   1a62c:	mov	r3, #1
   1a630:	ldr	r1, [pc, #36]	; 1a65c <enableLogCategory@@Base+0x88>
   1a634:	mov	r0, r3
   1a638:	add	r1, pc, r1
   1a63c:	ldr	r2, [r7, r2]
   1a640:	rsb	r4, r1, r4
   1a644:	strb	r3, [r2, r4, asr #3]
   1a648:	pop	{r3, r4, r5, r6, r7, pc}
   1a64c:	muleq	r1, r8, r7
   1a650:	muleq	r1, r4, r7
   1a654:	andeq	fp, r1, r4, lsl #20
   1a658:	andeq	r0, r0, r0, ror r2
   1a65c:	andeq	fp, r1, r8, asr #14

0001a660 <setLogPrefix@@Base>:
   1a660:	ldr	r3, [pc, #16]	; 1a678 <setLogPrefix@@Base+0x18>
   1a664:	add	r3, pc, r3
   1a668:	ldr	r2, [r3]
   1a66c:	str	r0, [r3]
   1a670:	mov	r0, r2
   1a674:	bx	lr
   1a678:	strdeq	fp, [r1], -ip

0001a67c <closeLogFile@@Base>:
   1a67c:	push	{r4, lr}
   1a680:	ldr	r4, [pc, #28]	; 1a6a4 <closeLogFile@@Base+0x28>
   1a684:	add	r4, pc, r4
   1a688:	ldr	r0, [r4, #4]
   1a68c:	cmp	r0, #0
   1a690:	popeq	{r4, pc}
   1a694:	bl	14f4c <fclose@plt>
   1a698:	mov	r3, #0
   1a69c:	str	r3, [r4, #4]
   1a6a0:	pop	{r4, pc}
   1a6a4:	ldrdeq	fp, [r1], -ip

0001a6a8 <openLogFile@@Base>:
   1a6a8:	push	{r4, lr}
   1a6ac:	mov	r4, r0
   1a6b0:	bl	1a67c <closeLogFile@@Base>
   1a6b4:	ldr	r1, [pc, #24]	; 1a6d4 <openLogFile@@Base+0x2c>
   1a6b8:	mov	r0, r4
   1a6bc:	add	r1, pc, r1
   1a6c0:	bl	14c88 <fopen@plt>
   1a6c4:	ldr	r3, [pc, #12]	; 1a6d8 <openLogFile@@Base+0x30>
   1a6c8:	add	r3, pc, r3
   1a6cc:	str	r0, [r3, #4]
   1a6d0:	pop	{r4, pc}
   1a6d4:			; <UNDEFINED> instruction: 0x000093b4
   1a6d8:	muleq	r1, r8, ip

0001a6dc <openSystemLog@@Base>:
   1a6dc:	push	{r4, lr}
   1a6e0:	ldr	r4, [pc, #44]	; 1a714 <openSystemLog@@Base+0x38>
   1a6e4:	add	r4, pc, r4
   1a6e8:	ldr	r3, [r4, #8]
   1a6ec:	cmp	r3, #0
   1a6f0:	popne	{r4, pc}
   1a6f4:	ldr	r0, [pc, #28]	; 1a718 <openSystemLog@@Base+0x3c>
   1a6f8:	mov	r1, #1
   1a6fc:	mov	r2, #24
   1a700:	add	r0, pc, r0
   1a704:	bl	150a8 <openlog@plt>
   1a708:	mov	r3, #1
   1a70c:	str	r3, [r4, #8]
   1a710:	pop	{r4, pc}
   1a714:	andeq	fp, r1, ip, ror ip
   1a718:	andeq	r9, r0, r0, lsr #15

0001a71c <closeSystemLog@@Base>:
   1a71c:	push	{r4, lr}
   1a720:	ldr	r4, [pc, #28]	; 1a744 <closeSystemLog@@Base+0x28>
   1a724:	add	r4, pc, r4
   1a728:	ldr	r3, [r4, #8]
   1a72c:	cmp	r3, #0
   1a730:	popeq	{r4, pc}
   1a734:	bl	14c10 <closelog@plt>
   1a738:	mov	r3, #0
   1a73c:	str	r3, [r4, #8]
   1a740:	pop	{r4, pc}
   1a744:	andeq	fp, r1, ip, lsr ip

0001a748 <logData@@Base>:
   1a748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a74c:	sub	sp, sp, #4160	; 0x1040
   1a750:	ldr	r4, [pc, #660]	; 1a9ec <logData@@Base+0x2a4>
   1a754:	sub	sp, sp, #12
   1a758:	ldr	r3, [pc, #656]	; 1a9f0 <logData@@Base+0x2a8>
   1a75c:	mov	r5, r0
   1a760:	add	r4, pc, r4
   1a764:	mov	r8, r1
   1a768:	ands	r0, r0, #128	; 0x80
   1a76c:	add	r1, sp, #8192	; 0x2000
   1a770:	ldr	r3, [r4, r3]
   1a774:	mov	r9, r2
   1a778:	str	r3, [sp, #12]
   1a77c:	ldr	r3, [r3]
   1a780:	str	r3, [r1, #-4028]	; 0xfffff044
   1a784:	beq	1a7c0 <logData@@Base+0x78>
   1a788:	ldr	r3, [pc, #612]	; 1a9f4 <logData@@Base+0x2ac>
   1a78c:	and	r5, r5, #127	; 0x7f
   1a790:	ldr	r3, [r4, r3]
   1a794:	ldrb	r3, [r3, r5]
   1a798:	cmp	r3, #0
   1a79c:	beq	1a8e4 <logData@@Base+0x19c>
   1a7a0:	ldr	r2, [pc, #592]	; 1a9f8 <logData@@Base+0x2b0>
   1a7a4:	ldr	r3, [pc, #592]	; 1a9fc <logData@@Base+0x2b4>
   1a7a8:	ldr	r2, [r4, r2]
   1a7ac:	add	r3, pc, r3
   1a7b0:	add	r5, r3, r5, lsl #3
   1a7b4:	ldr	r3, [r5, #4]
   1a7b8:	ldrb	r5, [r2]
   1a7bc:	b	1a7c4 <logData@@Base+0x7c>
   1a7c0:	mov	r3, r0
   1a7c4:	ldr	r1, [pc, #564]	; 1aa00 <logData@@Base+0x2b8>
   1a7c8:	ldr	r2, [pc, #564]	; 1aa04 <logData@@Base+0x2bc>
   1a7cc:	ldr	r1, [r4, r1]
   1a7d0:	ldr	r2, [r4, r2]
   1a7d4:	ldrb	r7, [r1]
   1a7d8:	ldrb	r6, [r2]
   1a7dc:	cmp	r7, r5
   1a7e0:	movlt	r7, #0
   1a7e4:	movge	r7, #1
   1a7e8:	cmp	r6, r5
   1a7ec:	movlt	r6, #0
   1a7f0:	movge	r6, #1
   1a7f4:	orrs	r2, r6, r7
   1a7f8:	beq	1a8e4 <logData@@Base+0x19c>
   1a7fc:	str	r3, [sp, #8]
   1a800:	bl	15000 <__errno_location@plt>
   1a804:	ldr	r3, [sp, #8]
   1a808:	add	fp, sp, #72	; 0x48
   1a80c:	cmp	r3, #0
   1a810:	ldr	ip, [r0]
   1a814:	str	r0, [sp, #16]
   1a818:	str	ip, [sp, #20]
   1a81c:	beq	1a908 <logData@@Base+0x1c0>
   1a820:	sub	sl, fp, #4
   1a824:	ldr	r2, [pc, #476]	; 1aa08 <logData@@Base+0x2c0>
   1a828:	mov	r1, #4096	; 0x1000
   1a82c:	str	r3, [sp, #4]
   1a830:	add	r2, pc, r2
   1a834:	mov	r3, r1
   1a838:	str	r2, [sp]
   1a83c:	mov	r0, sl
   1a840:	mov	r2, #1
   1a844:	bl	14f1c <__snprintf_chk@plt>
   1a848:	add	r3, sl, #4096	; 0x1000
   1a84c:	add	r0, sl, r0
   1a850:	cmp	r0, r3
   1a854:	movcs	r0, r3
   1a858:	add	r1, sl, #4096	; 0x1000
   1a85c:	mov	r2, r9
   1a860:	rsb	r1, r0, r1
   1a864:	blx	r8
   1a868:	cmp	r7, #0
   1a86c:	bne	1a914 <logData@@Base+0x1cc>
   1a870:	cmp	r6, #0
   1a874:	beq	1a8d8 <logData@@Base+0x190>
   1a878:	ldr	r2, [pc, #396]	; 1aa0c <logData@@Base+0x2c4>
   1a87c:	ldr	r3, [pc, #396]	; 1aa10 <logData@@Base+0x2c8>
   1a880:	add	r2, pc, r2
   1a884:	ldr	r0, [r2]
   1a888:	ldr	r3, [r4, r3]
   1a88c:	cmp	r0, #0
   1a890:	ldr	r4, [r3]
   1a894:	beq	1a8b8 <logData@@Base+0x170>
   1a898:	mov	r1, r4
   1a89c:	bl	150b4 <fputs@plt>
   1a8a0:	ldr	r0, [pc, #364]	; 1aa14 <logData@@Base+0x2cc>
   1a8a4:	mov	r1, #1
   1a8a8:	mov	r2, #2
   1a8ac:	add	r0, pc, r0
   1a8b0:	mov	r3, r4
   1a8b4:	bl	14ee0 <fwrite@plt>
   1a8b8:	mov	r1, r4
   1a8bc:	mov	r0, sl
   1a8c0:	bl	150b4 <fputs@plt>
   1a8c4:	mov	r0, #10
   1a8c8:	mov	r1, r4
   1a8cc:	bl	14ec8 <fputc@plt>
   1a8d0:	mov	r0, r4
   1a8d4:	bl	15048 <fflush@plt>
   1a8d8:	ldr	ip, [sp, #20]
   1a8dc:	ldr	r1, [sp, #16]
   1a8e0:	str	ip, [r1]
   1a8e4:	ldr	ip, [sp, #12]
   1a8e8:	add	r3, sp, #8192	; 0x2000
   1a8ec:	ldr	r2, [r3, #-4028]	; 0xfffff044
   1a8f0:	ldr	r3, [ip]
   1a8f4:	cmp	r2, r3
   1a8f8:	bne	1a9e8 <logData@@Base+0x2a0>
   1a8fc:	add	sp, sp, #4160	; 0x1040
   1a900:	add	sp, sp, #12
   1a904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a908:	add	sl, sp, #68	; 0x44
   1a90c:	mov	r0, sl
   1a910:	b	1a858 <logData@@Base+0x110>
   1a914:	ldr	r7, [pc, #252]	; 1aa18 <logData@@Base+0x2d0>
   1a918:	add	r7, pc, r7
   1a91c:	ldr	r3, [r7, #4]
   1a920:	cmp	r3, #0
   1a924:	beq	1a9b8 <logData@@Base+0x270>
   1a928:	sub	r8, fp, #44	; 0x2c
   1a92c:	sub	fp, fp, #36	; 0x24
   1a930:	mov	r0, r8
   1a934:	bl	1cb50 <getCurrentTime@@Base>
   1a938:	add	ip, sp, #4160	; 0x1040
   1a93c:	add	ip, ip, #8
   1a940:	movw	r3, #61396	; 0xefd4
   1a944:	ldr	r2, [pc, #208]	; 1aa1c <logData@@Base+0x2d4>
   1a948:	movt	r3, #65535	; 0xffff
   1a94c:	mov	r1, #32
   1a950:	mov	r0, fp
   1a954:	ldr	r3, [ip, r3]
   1a958:	add	r2, pc, r2
   1a95c:	bl	1cd0c <formatSeconds@@Base>
   1a960:	ldr	r2, [r8, #4]
   1a964:	movw	lr, #56963	; 0xde83
   1a968:	movt	lr, #17179	; 0x431b
   1a96c:	smull	r1, lr, lr, r2
   1a970:	asr	r8, r2, #31
   1a974:	ldr	r2, [pc, #164]	; 1aa20 <logData@@Base+0x2d8>
   1a978:	mov	r1, #1
   1a97c:	add	r2, pc, r2
   1a980:	rsb	lr, r8, lr, asr #18
   1a984:	mov	r3, r0
   1a988:	ldr	r0, [r7, #4]
   1a98c:	str	lr, [sp, #4]
   1a990:	str	fp, [sp]
   1a994:	bl	14bc8 <__fprintf_chk@plt>
   1a998:	ldr	r1, [r7, #4]
   1a99c:	mov	r0, sl
   1a9a0:	bl	150b4 <fputs@plt>
   1a9a4:	mov	r0, #10
   1a9a8:	ldr	r1, [r7, #4]
   1a9ac:	bl	14ec8 <fputc@plt>
   1a9b0:	ldr	r0, [r7, #4]
   1a9b4:	bl	15048 <fflush@plt>
   1a9b8:	ldr	r3, [pc, #100]	; 1aa24 <logData@@Base+0x2dc>
   1a9bc:	add	r3, pc, r3
   1a9c0:	ldr	r3, [r3, #8]
   1a9c4:	cmp	r3, #0
   1a9c8:	beq	1a870 <logData@@Base+0x128>
   1a9cc:	ldr	r2, [pc, #84]	; 1aa28 <logData@@Base+0x2e0>
   1a9d0:	mov	r0, r5
   1a9d4:	mov	r1, #1
   1a9d8:	mov	r3, sl
   1a9dc:	add	r2, pc, r2
   1a9e0:	bl	14d84 <__syslog_chk@plt>
   1a9e4:	b	1a870 <logData@@Base+0x128>
   1a9e8:	bl	14d9c <__stack_chk_fail@plt>
   1a9ec:	muleq	r1, r8, r8
   1a9f0:	andeq	r0, r0, r4, lsl #5
   1a9f4:	andeq	r0, r0, r0, ror r2
   1a9f8:	andeq	r0, r0, r8, ror r2
   1a9fc:	ldrdeq	fp, [r1], -r4
   1aa00:	andeq	r0, r0, ip, lsr #5
   1aa04:	andeq	r0, r0, ip, ror r2
   1aa08:	andeq	r9, r0, ip, asr r9
   1aa0c:	andeq	fp, r1, r0, ror #21
   1aa10:	andeq	r0, r0, r0, lsr #5
   1aa14:	andeq	r9, r0, r8, lsl #18
   1aa18:	andeq	fp, r1, r8, asr #20
   1aa1c:	andeq	r9, r0, ip, lsr r8
   1aa20:	andeq	r9, r0, ip, lsr #16
   1aa24:	andeq	fp, r1, r4, lsr #19
   1aa28:	strdeq	r9, [r0], -r8

0001aa2c <vlogMessage@@Base>:
   1aa2c:	ldr	r3, [pc, #72]	; 1aa7c <vlogMessage@@Base+0x50>
   1aa30:	ldr	ip, [pc, #72]	; 1aa80 <vlogMessage@@Base+0x54>
   1aa34:	add	r3, pc, r3
   1aa38:	push	{r4, lr}
   1aa3c:	sub	sp, sp, #16
   1aa40:	ldr	r4, [r3, ip]
   1aa44:	stmib	sp, {r1, r2}
   1aa48:	add	r2, sp, #4
   1aa4c:	ldr	r1, [pc, #48]	; 1aa84 <vlogMessage@@Base+0x58>
   1aa50:	ldr	r3, [r4]
   1aa54:	add	r1, pc, r1
   1aa58:	str	r3, [sp, #12]
   1aa5c:	bl	1a748 <logData@@Base>
   1aa60:	ldr	r2, [sp, #12]
   1aa64:	ldr	r3, [r4]
   1aa68:	cmp	r2, r3
   1aa6c:	bne	1aa78 <vlogMessage@@Base+0x4c>
   1aa70:	add	sp, sp, #16
   1aa74:	pop	{r4, pc}
   1aa78:	bl	14d9c <__stack_chk_fail@plt>
   1aa7c:	andeq	fp, r1, r4, asr #11
   1aa80:	andeq	r0, r0, r4, lsl #5
   1aa84:			; <UNDEFINED> instruction: 0xfffffb2c

0001aa88 <logMessage@@Base>:
   1aa88:	push	{r1, r2, r3}
   1aa8c:	ldr	r3, [pc, #84]	; 1aae8 <logMessage@@Base+0x60>
   1aa90:	push	{r4, lr}
   1aa94:	add	r3, pc, r3
   1aa98:	ldr	lr, [pc, #76]	; 1aaec <logMessage@@Base+0x64>
   1aa9c:	sub	sp, sp, #12
   1aaa0:	add	r2, sp, #8
   1aaa4:	add	ip, sp, #24
   1aaa8:	ldr	r1, [sp, #20]
   1aaac:	ldr	r4, [r3, lr]
   1aab0:	str	ip, [r2, #-8]!
   1aab4:	mov	r2, sp
   1aab8:	ldr	r3, [r4]
   1aabc:	str	r3, [sp, #4]
   1aac0:	bl	1aa2c <vlogMessage@@Base>
   1aac4:	ldr	r2, [sp, #4]
   1aac8:	ldr	r3, [r4]
   1aacc:	cmp	r2, r3
   1aad0:	bne	1aae4 <logMessage@@Base+0x5c>
   1aad4:	add	sp, sp, #12
   1aad8:	pop	{r4, lr}
   1aadc:	add	sp, sp, #12
   1aae0:	bx	lr
   1aae4:	bl	14d9c <__stack_chk_fail@plt>
   1aae8:	andeq	fp, r1, r4, ror #10
   1aaec:	andeq	r0, r0, r4, lsl #5

0001aaf0 <logBytes@@Base>:
   1aaf0:	ldr	ip, [pc, #76]	; 1ab44 <logBytes@@Base+0x54>
   1aaf4:	push	{r4, lr}
   1aaf8:	add	ip, pc, ip
   1aafc:	ldr	lr, [pc, #68]	; 1ab48 <logBytes@@Base+0x58>
   1ab00:	sub	sp, sp, #16
   1ab04:	ldr	r4, [ip, lr]
   1ab08:	stm	sp, {r1, r2}
   1ab0c:	mov	r2, sp
   1ab10:	ldr	r1, [pc, #52]	; 1ab4c <logBytes@@Base+0x5c>
   1ab14:	ldr	ip, [r4]
   1ab18:	add	r1, pc, r1
   1ab1c:	str	r3, [sp, #8]
   1ab20:	str	ip, [sp, #12]
   1ab24:	bl	1a748 <logData@@Base>
   1ab28:	ldr	r2, [sp, #12]
   1ab2c:	ldr	r3, [r4]
   1ab30:	cmp	r2, r3
   1ab34:	bne	1ab40 <logBytes@@Base+0x50>
   1ab38:	add	sp, sp, #16
   1ab3c:	pop	{r4, pc}
   1ab40:	bl	14d9c <__stack_chk_fail@plt>
   1ab44:	andeq	fp, r1, r0, lsl #10
   1ab48:	andeq	r0, r0, r4, lsl #5
   1ab4c:			; <UNDEFINED> instruction: 0xfffff9bc

0001ab50 <logSystemError@@Base>:
   1ab50:	push	{r4, r5, lr}
   1ab54:	sub	sp, sp, #12
   1ab58:	mov	r5, r0
   1ab5c:	bl	15000 <__errno_location@plt>
   1ab60:	ldr	r4, [r0]
   1ab64:	mov	r0, r4
   1ab68:	bl	14b44 <strerror@plt>
   1ab6c:	ldr	r1, [pc, #28]	; 1ab90 <logSystemError@@Base+0x40>
   1ab70:	mov	r3, r4
   1ab74:	mov	r2, r5
   1ab78:	add	r1, pc, r1
   1ab7c:	str	r0, [sp]
   1ab80:	mov	r0, #3
   1ab84:	bl	1aa88 <logMessage@@Base>
   1ab88:	add	sp, sp, #12
   1ab8c:	pop	{r4, r5, pc}
   1ab90:	andeq	r9, r0, r0, asr #12

0001ab94 <logMallocError@@Base>:
   1ab94:	ldr	r0, [pc, #4]	; 1aba0 <logMallocError@@Base+0xc>
   1ab98:	add	r0, pc, r0
   1ab9c:	b	1ab50 <logSystemError@@Base>
   1aba0:	andeq	r9, r0, r4, lsr r6
   1aba4:	ldr	r3, [pc, #196]	; 1ac70 <logMallocError@@Base+0xdc>
   1aba8:	push	{r4, r5, r6, r7, lr}
   1abac:	add	r3, pc, r3
   1abb0:	mov	r6, r0
   1abb4:	ldr	r0, [pc, #184]	; 1ac74 <logMallocError@@Base+0xe0>
   1abb8:	mov	r5, r1
   1abbc:	mov	r1, r3
   1abc0:	sub	sp, sp, #28
   1abc4:	mov	r3, #0
   1abc8:	ldr	r7, [r1, r0]
   1abcc:	add	r4, sp, #24
   1abd0:	str	r3, [sp, #4]
   1abd4:	str	r3, [sp, #8]
   1abd8:	ldr	r1, [r7]
   1abdc:	str	r3, [sp, #12]
   1abe0:	str	r3, [sp, #16]
   1abe4:	str	r1, [sp, #20]
   1abe8:	strh	r2, [r4, #-20]!	; 0xffffffec
   1abec:	b	1ac00 <logMallocError@@Base+0x6c>
   1abf0:	bl	15000 <__errno_location@plt>
   1abf4:	ldr	r3, [r0]
   1abf8:	cmp	r3, #4
   1abfc:	bne	1ac38 <logMallocError@@Base+0xa4>
   1ac00:	mov	r0, r6
   1ac04:	mov	r1, r5
   1ac08:	mov	r2, r4
   1ac0c:	bl	14c1c <fcntl@plt>
   1ac10:	cmn	r0, #1
   1ac14:	beq	1abf0 <logMallocError@@Base+0x5c>
   1ac18:	mov	r3, #1
   1ac1c:	ldr	r2, [sp, #20]
   1ac20:	mov	r0, r3
   1ac24:	ldr	r3, [r7]
   1ac28:	cmp	r2, r3
   1ac2c:	bne	1ac6c <logMallocError@@Base+0xd8>
   1ac30:	add	sp, sp, #28
   1ac34:	pop	{r4, r5, r6, r7, pc}
   1ac38:	cmp	r3, #13
   1ac3c:	moveq	r2, #11
   1ac40:	moveq	r3, #0
   1ac44:	streq	r2, [r0]
   1ac48:	beq	1ac1c <logMallocError@@Base+0x88>
   1ac4c:	cmp	r3, #11
   1ac50:	moveq	r3, #0
   1ac54:	beq	1ac1c <logMallocError@@Base+0x88>
   1ac58:	ldr	r0, [pc, #24]	; 1ac78 <logMallocError@@Base+0xe4>
   1ac5c:	add	r0, pc, r0
   1ac60:	bl	1ab50 <logSystemError@@Base>
   1ac64:	mov	r3, #0
   1ac68:	b	1ac1c <logMallocError@@Base+0x88>
   1ac6c:	bl	14d9c <__stack_chk_fail@plt>
   1ac70:	andeq	fp, r1, ip, asr #8
   1ac74:	andeq	r0, r0, r4, lsl #5
   1ac78:	andeq	r9, r0, r4, ror r6

0001ac7c <isPathDelimiter@@Base>:
   1ac7c:	subs	r3, r0, #47	; 0x2f
   1ac80:	rsbs	r0, r3, #0
   1ac84:	adcs	r0, r0, r3
   1ac88:	bx	lr

0001ac8c <isAbsolutePath@@Base>:
   1ac8c:	push	{r3, lr}
   1ac90:	ldrb	r0, [r0]
   1ac94:	bl	1ac7c <isPathDelimiter@@Base>
   1ac98:	adds	r0, r0, #0
   1ac9c:	movne	r0, #1
   1aca0:	pop	{r3, pc}

0001aca4 <getPathDirectory@@Base>:
   1aca4:	push	{r4, r5, r6, r7, r8, lr}
   1aca8:	mov	r8, r0
   1acac:	bl	14f10 <strlen@plt>
   1acb0:	subs	r7, r0, #0
   1acb4:	addne	r6, r8, r7
   1acb8:	movne	r5, r7
   1acbc:	bne	1acd0 <getPathDirectory@@Base+0x2c>
   1acc0:	b	1ad10 <getPathDirectory@@Base+0x6c>
   1acc4:	cmp	r4, #0
   1acc8:	mov	r5, r4
   1accc:	beq	1ad40 <getPathDirectory@@Base+0x9c>
   1acd0:	ldrb	r0, [r6, #-1]!
   1acd4:	sub	r4, r5, #1
   1acd8:	bl	1ac7c <isPathDelimiter@@Base>
   1acdc:	cmp	r0, #0
   1ace0:	bne	1acc4 <getPathDirectory@@Base+0x20>
   1ace4:	add	r6, r8, r5
   1ace8:	b	1ad00 <getPathDirectory@@Base+0x5c>
   1acec:	ldrb	r0, [r6, #-2]
   1acf0:	sub	r6, r6, #1
   1acf4:	bl	1ac7c <isPathDelimiter@@Base>
   1acf8:	cmp	r0, #0
   1acfc:	bne	1ad6c <getPathDirectory@@Base+0xc8>
   1ad00:	cmp	r4, #0
   1ad04:	mov	r5, r4
   1ad08:	sub	r4, r4, #1
   1ad0c:	bne	1acec <getPathDirectory@@Base+0x48>
   1ad10:	mov	r0, #2
   1ad14:	ldr	r8, [pc, #124]	; 1ad98 <getPathDirectory@@Base+0xf4>
   1ad18:	bl	14f04 <malloc@plt>
   1ad1c:	mov	r7, #1
   1ad20:	add	r8, pc, r8
   1ad24:	subs	r4, r0, #0
   1ad28:	bne	1ad50 <getPathDirectory@@Base+0xac>
   1ad2c:	bl	1ab94 <logMallocError@@Base>
   1ad30:	mov	r0, r4
   1ad34:	pop	{r4, r5, r6, r7, r8, pc}
   1ad38:	mov	r5, r6
   1ad3c:	mov	r7, r5
   1ad40:	add	r0, r7, #1
   1ad44:	bl	14f04 <malloc@plt>
   1ad48:	subs	r4, r0, #0
   1ad4c:	beq	1ad2c <getPathDirectory@@Base+0x88>
   1ad50:	mov	r1, r8
   1ad54:	mov	r2, r7
   1ad58:	bl	14eec <memcpy@plt>
   1ad5c:	mov	r3, #0
   1ad60:	mov	r0, r4
   1ad64:	strb	r3, [r4, r7]
   1ad68:	pop	{r4, r5, r6, r7, r8, pc}
   1ad6c:	add	r7, r8, r5
   1ad70:	mov	r6, r5
   1ad74:	ldrb	r0, [r7, #-1]!
   1ad78:	sub	r4, r6, #1
   1ad7c:	bl	1ac7c <isPathDelimiter@@Base>
   1ad80:	cmp	r0, #0
   1ad84:	beq	1ad38 <getPathDirectory@@Base+0x94>
   1ad88:	cmp	r4, #0
   1ad8c:	mov	r6, r4
   1ad90:	bne	1ad74 <getPathDirectory@@Base+0xd0>
   1ad94:	b	1ad3c <getPathDirectory@@Base+0x98>
   1ad98:	andeq	r9, r0, r4, rrx

0001ad9c <locatePathName@@Base>:
   1ad9c:	push	{r4, r5, r6, lr}
   1ada0:	mov	r6, r0
   1ada4:	bl	14f10 <strlen@plt>
   1ada8:	add	r4, r6, r0
   1adac:	cmp	r6, r4
   1adb0:	beq	1addc <locatePathName@@Base+0x40>
   1adb4:	mov	r5, r4
   1adb8:	b	1adc4 <locatePathName@@Base+0x28>
   1adbc:	cmp	r6, r5
   1adc0:	beq	1ade4 <locatePathName@@Base+0x48>
   1adc4:	mov	r4, r5
   1adc8:	sub	r5, r5, #1
   1adcc:	ldrb	r0, [r4, #-1]
   1add0:	bl	1ac7c <isPathDelimiter@@Base>
   1add4:	cmp	r0, #0
   1add8:	beq	1adbc <locatePathName@@Base+0x20>
   1addc:	mov	r0, r4
   1ade0:	pop	{r4, r5, r6, pc}
   1ade4:	mov	r4, r6
   1ade8:	mov	r0, r4
   1adec:	pop	{r4, r5, r6, pc}

0001adf0 <locatePathExtension@@Base>:
   1adf0:	push	{r3, lr}
   1adf4:	bl	1ad9c <locatePathName@@Base>
   1adf8:	mov	r1, #46	; 0x2e
   1adfc:	pop	{r3, lr}
   1ae00:	b	15084 <strrchr@plt>

0001ae04 <isExplicitPath@@Base>:
   1ae04:	push	{r4, lr}
   1ae08:	mov	r4, r0
   1ae0c:	bl	1ad9c <locatePathName@@Base>
   1ae10:	subs	r0, r4, r0
   1ae14:	movne	r0, #1
   1ae18:	pop	{r4, pc}

0001ae1c <makePath@@Base>:
   1ae1c:	ldr	r3, [pc, #192]	; 1aee4 <makePath@@Base+0xc8>
   1ae20:	ldr	r2, [pc, #192]	; 1aee8 <makePath@@Base+0xcc>
   1ae24:	add	r3, pc, r3
   1ae28:	push	{r4, r5, lr}
   1ae2c:	sub	sp, sp, #20
   1ae30:	ldr	r4, [r3, r2]
   1ae34:	mov	r5, r0
   1ae38:	mov	r0, r1
   1ae3c:	str	r1, [sp, #8]
   1ae40:	ldr	r3, [r4]
   1ae44:	str	r3, [sp, #12]
   1ae48:	bl	1ac8c <isAbsolutePath@@Base>
   1ae4c:	cmp	r0, #0
   1ae50:	bne	1ae68 <makePath@@Base+0x4c>
   1ae54:	cmp	r5, #0
   1ae58:	beq	1ae68 <makePath@@Base+0x4c>
   1ae5c:	ldrb	r3, [r5]
   1ae60:	cmp	r3, #0
   1ae64:	bne	1ae90 <makePath@@Base+0x74>
   1ae68:	mov	r1, #1
   1ae6c:	mov	r3, #8
   1ae70:	add	r0, sp, r3
   1ae74:	bl	1c124 <joinStrings@@Base>
   1ae78:	ldr	r2, [sp, #12]
   1ae7c:	ldr	r3, [r4]
   1ae80:	cmp	r2, r3
   1ae84:	bne	1aedc <makePath@@Base+0xc0>
   1ae88:	add	sp, sp, #20
   1ae8c:	pop	{r4, r5, pc}
   1ae90:	mov	r0, r5
   1ae94:	bl	14f10 <strlen@plt>
   1ae98:	add	r0, r5, r0
   1ae9c:	ldrb	r0, [r0, #-1]
   1aea0:	bl	1ac7c <isPathDelimiter@@Base>
   1aea4:	cmp	r0, #0
   1aea8:	movne	r1, #2
   1aeac:	movne	r3, #1
   1aeb0:	bne	1aec8 <makePath@@Base+0xac>
   1aeb4:	ldr	r2, [pc, #48]	; 1aeec <makePath@@Base+0xd0>
   1aeb8:	mov	r3, r0
   1aebc:	mov	r1, #3
   1aec0:	add	r2, pc, r2
   1aec4:	str	r2, [sp, #4]
   1aec8:	lsl	r3, r3, #2
   1aecc:	add	r0, sp, #16
   1aed0:	add	r2, r0, r3
   1aed4:	str	r5, [r2, #-16]
   1aed8:	b	1ae70 <makePath@@Base+0x54>
   1aedc:	bl	14d9c <__stack_chk_fail@plt>
   1aee0:	bl	15054 <_Unwind_Resume@plt>
   1aee4:	ldrdeq	fp, [r1], -r4
   1aee8:	andeq	r0, r0, r4, lsl #5
   1aeec:	andeq	r8, r0, ip, ror #21

0001aef0 <ensureFileExtension@@Base>:
   1aef0:	ldr	r3, [pc, #144]	; 1af88 <ensureFileExtension@@Base+0x98>
   1aef4:	ldr	r2, [pc, #144]	; 1af8c <ensureFileExtension@@Base+0x9c>
   1aef8:	add	r3, pc, r3
   1aefc:	push	{r4, r5, r6, r7, lr}
   1af00:	sub	sp, sp, #20
   1af04:	ldr	r4, [r3, r2]
   1af08:	mov	r5, r1
   1af0c:	mov	r6, r0
   1af10:	ldr	r3, [r4]
   1af14:	str	r3, [sp, #12]
   1af18:	bl	14f10 <strlen@plt>
   1af1c:	mov	r7, r0
   1af20:	mov	r0, r5
   1af24:	bl	14f10 <strlen@plt>
   1af28:	str	r6, [sp, #4]
   1af2c:	cmp	r0, #0
   1af30:	beq	1af60 <ensureFileExtension@@Base+0x70>
   1af34:	cmp	r7, r0
   1af38:	bcs	1af48 <ensureFileExtension@@Base+0x58>
   1af3c:	str	r5, [sp, #8]
   1af40:	mov	r1, #2
   1af44:	b	1af64 <ensureFileExtension@@Base+0x74>
   1af48:	rsb	r0, r0, r7
   1af4c:	mov	r1, r5
   1af50:	add	r0, r6, r0
   1af54:	bl	14fdc <strcmp@plt>
   1af58:	cmp	r0, #0
   1af5c:	bne	1af3c <ensureFileExtension@@Base+0x4c>
   1af60:	mov	r1, #1
   1af64:	add	r0, sp, #4
   1af68:	bl	1c124 <joinStrings@@Base>
   1af6c:	ldr	r2, [sp, #12]
   1af70:	ldr	r3, [r4]
   1af74:	cmp	r2, r3
   1af78:	bne	1af84 <ensureFileExtension@@Base+0x94>
   1af7c:	add	sp, sp, #20
   1af80:	pop	{r4, r5, r6, r7, pc}
   1af84:	bl	14d9c <__stack_chk_fail@plt>
   1af88:	andeq	fp, r1, r0, lsl #2
   1af8c:	andeq	r0, r0, r4, lsl #5

0001af90 <makeFilePath@@Base>:
   1af90:	push	{r3, r4, r5, lr}
   1af94:	mov	r5, r0
   1af98:	mov	r0, r1
   1af9c:	mov	r1, r2
   1afa0:	bl	1aef0 <ensureFileExtension@@Base>
   1afa4:	subs	r4, r0, #0
   1afa8:	beq	1afcc <makeFilePath@@Base+0x3c>
   1afac:	mov	r0, r5
   1afb0:	mov	r1, r4
   1afb4:	bl	1ae1c <makePath@@Base>
   1afb8:	mov	r5, r0
   1afbc:	mov	r0, r4
   1afc0:	bl	14ac0 <free@plt>
   1afc4:	mov	r0, r5
   1afc8:	pop	{r3, r4, r5, pc}
   1afcc:	mov	r5, r4
   1afd0:	b	1afc4 <makeFilePath@@Base+0x34>

0001afd4 <testPath@@Base>:
   1afd4:	push	{r3, lr}
   1afd8:	mov	r1, #0
   1afdc:	bl	14dd8 <access@plt>
   1afe0:	adds	r0, r0, #1
   1afe4:	movne	r0, #1
   1afe8:	pop	{r3, pc}

0001afec <testFilePath@@Base>:
   1afec:	ldr	r3, [pc, #120]	; 1b06c <testFilePath@@Base+0x80>
   1aff0:	mov	r1, r0
   1aff4:	ldr	ip, [pc, #116]	; 1b070 <testFilePath@@Base+0x84>
   1aff8:	mov	r0, #3
   1affc:	add	r3, pc, r3
   1b000:	push	{r4, lr}
   1b004:	sub	sp, sp, #96	; 0x60
   1b008:	ldr	r4, [r3, ip]
   1b00c:	mov	r2, sp
   1b010:	ldr	r3, [r4]
   1b014:	str	r3, [sp, #92]	; 0x5c
   1b018:	bl	14f94 <__xstat@plt>
   1b01c:	cmn	r0, #1
   1b020:	moveq	r3, #0
   1b024:	beq	1b04c <testFilePath@@Base+0x60>
   1b028:	ldr	r3, [sp, #16]
   1b02c:	and	r3, r3, #61440	; 0xf000
   1b030:	cmp	r3, #32768	; 0x8000
   1b034:	moveq	r3, #1
   1b038:	beq	1b04c <testFilePath@@Base+0x60>
   1b03c:	bl	15000 <__errno_location@plt>
   1b040:	mov	r3, #0
   1b044:	mov	r2, #17
   1b048:	str	r2, [r0]
   1b04c:	ldr	r2, [sp, #92]	; 0x5c
   1b050:	mov	r0, r3
   1b054:	ldr	r3, [r4]
   1b058:	cmp	r2, r3
   1b05c:	bne	1b068 <testFilePath@@Base+0x7c>
   1b060:	add	sp, sp, #96	; 0x60
   1b064:	pop	{r4, pc}
   1b068:	bl	14d9c <__stack_chk_fail@plt>
   1b06c:	strdeq	sl, [r1], -ip
   1b070:	andeq	r0, r0, r4, lsl #5

0001b074 <testProgramPath@@Base>:
   1b074:	push	{r3, lr}
   1b078:	mov	r1, #1
   1b07c:	bl	14dd8 <access@plt>
   1b080:	adds	r0, r0, #1
   1b084:	movne	r0, #1
   1b088:	pop	{r3, pc}

0001b08c <testDirectoryPath@@Base>:
   1b08c:	ldr	r3, [pc, #120]	; 1b10c <testDirectoryPath@@Base+0x80>
   1b090:	mov	r1, r0
   1b094:	ldr	ip, [pc, #116]	; 1b110 <testDirectoryPath@@Base+0x84>
   1b098:	mov	r0, #3
   1b09c:	add	r3, pc, r3
   1b0a0:	push	{r4, lr}
   1b0a4:	sub	sp, sp, #96	; 0x60
   1b0a8:	ldr	r4, [r3, ip]
   1b0ac:	mov	r2, sp
   1b0b0:	ldr	r3, [r4]
   1b0b4:	str	r3, [sp, #92]	; 0x5c
   1b0b8:	bl	14f94 <__xstat@plt>
   1b0bc:	cmn	r0, #1
   1b0c0:	moveq	r3, #0
   1b0c4:	beq	1b0ec <testDirectoryPath@@Base+0x60>
   1b0c8:	ldr	r3, [sp, #16]
   1b0cc:	and	r3, r3, #61440	; 0xf000
   1b0d0:	cmp	r3, #16384	; 0x4000
   1b0d4:	moveq	r3, #1
   1b0d8:	beq	1b0ec <testDirectoryPath@@Base+0x60>
   1b0dc:	bl	15000 <__errno_location@plt>
   1b0e0:	mov	r3, #0
   1b0e4:	mov	r2, #17
   1b0e8:	str	r2, [r0]
   1b0ec:	ldr	r2, [sp, #92]	; 0x5c
   1b0f0:	mov	r0, r3
   1b0f4:	ldr	r3, [r4]
   1b0f8:	cmp	r2, r3
   1b0fc:	bne	1b108 <testDirectoryPath@@Base+0x7c>
   1b100:	add	sp, sp, #96	; 0x60
   1b104:	pop	{r4, pc}
   1b108:	bl	14d9c <__stack_chk_fail@plt>
   1b10c:	andeq	sl, r1, ip, asr pc
   1b110:	andeq	r0, r0, r4, lsl #5

0001b114 <createDirectory@@Base>:
   1b114:	push	{r4, r5, lr}
   1b118:	movw	r1, #493	; 0x1ed
   1b11c:	sub	sp, sp, #12
   1b120:	mov	r4, r0
   1b124:	bl	14df0 <mkdir@plt>
   1b128:	cmn	r0, #1
   1b12c:	movne	r0, #1
   1b130:	beq	1b13c <createDirectory@@Base+0x28>
   1b134:	add	sp, sp, #12
   1b138:	pop	{r4, r5, pc}
   1b13c:	ldr	r1, [pc, #68]	; 1b188 <createDirectory@@Base+0x74>
   1b140:	mov	r2, #5
   1b144:	mov	r0, #0
   1b148:	add	r1, pc, r1
   1b14c:	bl	14de4 <dcgettext@plt>
   1b150:	mov	r5, r0
   1b154:	bl	15000 <__errno_location@plt>
   1b158:	ldr	r0, [r0]
   1b15c:	bl	14b44 <strerror@plt>
   1b160:	ldr	r1, [pc, #36]	; 1b18c <createDirectory@@Base+0x78>
   1b164:	mov	r2, r5
   1b168:	mov	r3, r4
   1b16c:	add	r1, pc, r1
   1b170:	str	r0, [sp]
   1b174:	mov	r0, #4
   1b178:	bl	1aa88 <logMessage@@Base>
   1b17c:	mov	r0, #0
   1b180:	add	sp, sp, #12
   1b184:	pop	{r4, r5, pc}
   1b188:	andeq	r9, r0, r0, lsr #3
   1b18c:	andeq	r8, r0, ip, ror #28

0001b190 <ensureDirectory@@Base>:
   1b190:	push	{r3, r4, r5, r6, r7, lr}
   1b194:	mov	r5, r0
   1b198:	bl	1b08c <testDirectoryPath@@Base>
   1b19c:	subs	r4, r0, #0
   1b1a0:	movne	r4, #1
   1b1a4:	bne	1b1dc <ensureDirectory@@Base+0x4c>
   1b1a8:	bl	15000 <__errno_location@plt>
   1b1ac:	ldr	r0, [r0]
   1b1b0:	cmp	r0, #17
   1b1b4:	beq	1b238 <ensureDirectory@@Base+0xa8>
   1b1b8:	cmp	r0, #2
   1b1bc:	beq	1b1e4 <ensureDirectory@@Base+0x54>
   1b1c0:	bl	14b44 <strerror@plt>
   1b1c4:	ldr	r1, [pc, #132]	; 1b250 <ensureDirectory@@Base+0xc0>
   1b1c8:	mov	r2, r5
   1b1cc:	add	r1, pc, r1
   1b1d0:	mov	r3, r0
   1b1d4:	mov	r0, #3
   1b1d8:	bl	1aa88 <logMessage@@Base>
   1b1dc:	mov	r0, r4
   1b1e0:	pop	{r3, r4, r5, r6, r7, pc}
   1b1e4:	mov	r0, r5
   1b1e8:	bl	1aca4 <getPathDirectory@@Base>
   1b1ec:	subs	r6, r0, #0
   1b1f0:	beq	1b1dc <ensureDirectory@@Base+0x4c>
   1b1f4:	bl	1b190 <ensureDirectory@@Base>
   1b1f8:	mov	r7, r0
   1b1fc:	mov	r0, r6
   1b200:	bl	14ac0 <free@plt>
   1b204:	cmp	r7, #0
   1b208:	beq	1b1dc <ensureDirectory@@Base+0x4c>
   1b20c:	mov	r0, r5
   1b210:	bl	1b114 <createDirectory@@Base>
   1b214:	cmp	r0, #0
   1b218:	beq	1b1dc <ensureDirectory@@Base+0x4c>
   1b21c:	ldr	r1, [pc, #48]	; 1b254 <ensureDirectory@@Base+0xc4>
   1b220:	mov	r2, r5
   1b224:	mov	r0, #5
   1b228:	mov	r4, #1
   1b22c:	add	r1, pc, r1
   1b230:	bl	1aa88 <logMessage@@Base>
   1b234:	b	1b1dc <ensureDirectory@@Base+0x4c>
   1b238:	ldr	r1, [pc, #24]	; 1b258 <ensureDirectory@@Base+0xc8>
   1b23c:	mov	r2, r5
   1b240:	mov	r0, #3
   1b244:	add	r1, pc, r1
   1b248:	bl	1aa88 <logMessage@@Base>
   1b24c:	b	1b1dc <ensureDirectory@@Base+0x4c>
   1b250:	andeq	r9, r0, r8, asr #2
   1b254:	andeq	r9, r0, r8, lsl #2
   1b258:	strheq	r9, [r0], -ip

0001b25c <getWritableDirectory@@Base>:
   1b25c:	ldr	r3, [pc, #64]	; 1b2a4 <getWritableDirectory@@Base+0x48>
   1b260:	ldr	r2, [pc, #64]	; 1b2a8 <getWritableDirectory@@Base+0x4c>
   1b264:	add	r3, pc, r3
   1b268:	push	{r4, lr}
   1b26c:	ldr	r4, [r3, r2]
   1b270:	ldr	r0, [r4]
   1b274:	cmp	r0, #0
   1b278:	beq	1b29c <getWritableDirectory@@Base+0x40>
   1b27c:	ldrb	r3, [r0]
   1b280:	cmp	r3, #0
   1b284:	beq	1b29c <getWritableDirectory@@Base+0x40>
   1b288:	bl	1b190 <ensureDirectory@@Base>
   1b28c:	cmp	r0, #0
   1b290:	beq	1b29c <getWritableDirectory@@Base+0x40>
   1b294:	ldr	r0, [r4]
   1b298:	pop	{r4, pc}
   1b29c:	mov	r0, #0
   1b2a0:	pop	{r4, pc}
   1b2a4:	muleq	r1, r4, sp
   1b2a8:	andeq	r0, r0, r8, asr #5

0001b2ac <makeWritablePath@@Base>:
   1b2ac:	push	{r4, lr}
   1b2b0:	mov	r4, r0
   1b2b4:	bl	1b25c <getWritableDirectory@@Base>
   1b2b8:	cmp	r0, #0
   1b2bc:	popeq	{r4, pc}
   1b2c0:	mov	r1, r4
   1b2c4:	pop	{r4, lr}
   1b2c8:	b	1ae1c <makePath@@Base>

0001b2cc <getWorkingDirectory@@Base>:
   1b2cc:	push	{r3, r4, r5, r6, r7, lr}
   1b2d0:	mov	r5, #0
   1b2d4:	mov	r4, #128	; 0x80
   1b2d8:	b	1b300 <getWorkingDirectory@@Base+0x34>
   1b2dc:	bl	14f40 <getcwd@plt>
   1b2e0:	mov	r5, r6
   1b2e4:	cmp	r0, #0
   1b2e8:	bne	1b370 <getWorkingDirectory@@Base+0xa4>
   1b2ec:	bl	15000 <__errno_location@plt>
   1b2f0:	ldr	r3, [r0]
   1b2f4:	mov	r7, r0
   1b2f8:	cmp	r3, #34	; 0x22
   1b2fc:	bne	1b378 <getWorkingDirectory@@Base+0xac>
   1b300:	lsl	r4, r4, #1
   1b304:	mov	r0, r5
   1b308:	mov	r1, r4
   1b30c:	bl	14d0c <realloc@plt>
   1b310:	mov	r1, r4
   1b314:	subs	r6, r0, #0
   1b318:	bne	1b2dc <getWorkingDirectory@@Base+0x10>
   1b31c:	bl	1ab94 <logMallocError@@Base>
   1b320:	cmp	r5, #0
   1b324:	bne	1b390 <getWorkingDirectory@@Base+0xc4>
   1b328:	bl	15000 <__errno_location@plt>
   1b32c:	mov	r7, r0
   1b330:	ldr	r1, [pc, #104]	; 1b3a0 <getWorkingDirectory@@Base+0xd4>
   1b334:	mov	r2, #5
   1b338:	mov	r0, #0
   1b33c:	add	r1, pc, r1
   1b340:	bl	14de4 <dcgettext@plt>
   1b344:	mov	r4, r0
   1b348:	ldr	r0, [r7]
   1b34c:	bl	14b44 <strerror@plt>
   1b350:	ldr	r1, [pc, #76]	; 1b3a4 <getWorkingDirectory@@Base+0xd8>
   1b354:	mov	r2, r4
   1b358:	add	r1, pc, r1
   1b35c:	mov	r3, r0
   1b360:	mov	r0, #4
   1b364:	bl	1aa88 <logMessage@@Base>
   1b368:	mov	r0, #0
   1b36c:	pop	{r3, r4, r5, r6, r7, pc}
   1b370:	mov	r0, r6
   1b374:	pop	{r3, r4, r5, r6, r7, pc}
   1b378:	ldr	r0, [pc, #40]	; 1b3a8 <getWorkingDirectory@@Base+0xdc>
   1b37c:	add	r0, pc, r0
   1b380:	bl	1ab50 <logSystemError@@Base>
   1b384:	mov	r0, r6
   1b388:	bl	14ac0 <free@plt>
   1b38c:	b	1b330 <getWorkingDirectory@@Base+0x64>
   1b390:	bl	15000 <__errno_location@plt>
   1b394:	mov	r6, r5
   1b398:	mov	r7, r0
   1b39c:	b	1b384 <getWorkingDirectory@@Base+0xb8>
   1b3a0:	andeq	r9, r0, r8, lsl r0
   1b3a4:	andeq	r9, r0, r4, ror r4
   1b3a8:	ldrdeq	r8, [r0], -r0

0001b3ac <setWorkingDirectory@@Base>:
   1b3ac:	push	{r4, r5, lr}
   1b3b0:	sub	sp, sp, #12
   1b3b4:	mov	r4, r0
   1b3b8:	bl	14a0c <chdir@plt>
   1b3bc:	cmn	r0, #1
   1b3c0:	movne	r0, #1
   1b3c4:	beq	1b3d0 <setWorkingDirectory@@Base+0x24>
   1b3c8:	add	sp, sp, #12
   1b3cc:	pop	{r4, r5, pc}
   1b3d0:	ldr	r1, [pc, #68]	; 1b41c <setWorkingDirectory@@Base+0x70>
   1b3d4:	mov	r2, #5
   1b3d8:	mov	r0, #0
   1b3dc:	add	r1, pc, r1
   1b3e0:	bl	14de4 <dcgettext@plt>
   1b3e4:	mov	r5, r0
   1b3e8:	bl	15000 <__errno_location@plt>
   1b3ec:	ldr	r0, [r0]
   1b3f0:	bl	14b44 <strerror@plt>
   1b3f4:	ldr	r1, [pc, #36]	; 1b420 <setWorkingDirectory@@Base+0x74>
   1b3f8:	mov	r2, r5
   1b3fc:	mov	r3, r4
   1b400:	add	r1, pc, r1
   1b404:	str	r0, [sp]
   1b408:	mov	r0, #4
   1b40c:	bl	1aa88 <logMessage@@Base>
   1b410:	mov	r0, #0
   1b414:	add	sp, sp, #12
   1b418:	pop	{r4, r5, pc}
   1b41c:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   1b420:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>

0001b424 <getHomeDirectory@@Base>:
   1b424:	ldr	r0, [pc, #80]	; 1b47c <getHomeDirectory@@Base+0x58>
   1b428:	push	{lr}		; (str lr, [sp, #-4]!)
   1b42c:	add	r0, pc, r0
   1b430:	sub	sp, sp, #12
   1b434:	bl	150c0 <getenv@plt>
   1b438:	subs	r3, r0, #0
   1b43c:	beq	1b460 <getHomeDirectory@@Base+0x3c>
   1b440:	ldrb	r3, [r3]
   1b444:	cmp	r3, #0
   1b448:	beq	1b460 <getHomeDirectory@@Base+0x3c>
   1b44c:	bl	14c4c <__strdup@plt>
   1b450:	cmp	r0, #0
   1b454:	beq	1b46c <getHomeDirectory@@Base+0x48>
   1b458:	add	sp, sp, #12
   1b45c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b460:	mov	r0, r3
   1b464:	add	sp, sp, #12
   1b468:	pop	{pc}		; (ldr pc, [sp], #4)
   1b46c:	str	r0, [sp, #4]
   1b470:	bl	1ab94 <logMallocError@@Base>
   1b474:	ldr	r0, [sp, #4]
   1b478:	b	1b458 <getHomeDirectory@@Base+0x34>
   1b47c:	andeq	r8, r0, r8, ror #30

0001b480 <getOverrideDirectory@@Base>:
   1b480:	push	{r4, r5, r6, lr}
   1b484:	ldr	r4, [pc, #208]	; 1b55c <getOverrideDirectory@@Base+0xdc>
   1b488:	add	r4, pc, r4
   1b48c:	ldr	r0, [r4]
   1b490:	cmp	r0, #0
   1b494:	beq	1b4a8 <getOverrideDirectory@@Base+0x28>
   1b498:	ldrb	r3, [r0]
   1b49c:	cmp	r3, #0
   1b4a0:	moveq	r0, #0
   1b4a4:	pop	{r4, r5, r6, pc}
   1b4a8:	bl	1b424 <getHomeDirectory@@Base>
   1b4ac:	subs	r6, r0, #0
   1b4b0:	beq	1b4f8 <getOverrideDirectory@@Base+0x78>
   1b4b4:	ldr	r1, [pc, #164]	; 1b560 <getOverrideDirectory@@Base+0xe0>
   1b4b8:	add	r1, pc, r1
   1b4bc:	bl	1ae1c <makePath@@Base>
   1b4c0:	mov	r5, r0
   1b4c4:	mov	r0, r6
   1b4c8:	str	r5, [r4]
   1b4cc:	bl	14ac0 <free@plt>
   1b4d0:	cmp	r5, #0
   1b4d4:	beq	1b4f8 <getOverrideDirectory@@Base+0x78>
   1b4d8:	ldr	r1, [pc, #132]	; 1b564 <getOverrideDirectory@@Base+0xe4>
   1b4dc:	mov	r0, #6
   1b4e0:	mov	r2, r5
   1b4e4:	add	r1, pc, r1
   1b4e8:	bl	1aa88 <logMessage@@Base>
   1b4ec:	ldr	r3, [pc, #116]	; 1b568 <getOverrideDirectory@@Base+0xe8>
   1b4f0:	ldr	r0, [pc, r3]
   1b4f4:	b	1b498 <getOverrideDirectory@@Base+0x18>
   1b4f8:	bl	1b2cc <getWorkingDirectory@@Base>
   1b4fc:	subs	r4, r0, #0
   1b500:	beq	1b530 <getOverrideDirectory@@Base+0xb0>
   1b504:	ldr	r1, [pc, #96]	; 1b56c <getOverrideDirectory@@Base+0xec>
   1b508:	add	r1, pc, r1
   1b50c:	bl	1ae1c <makePath@@Base>
   1b510:	ldr	r3, [pc, #88]	; 1b570 <getOverrideDirectory@@Base+0xf0>
   1b514:	add	r3, pc, r3
   1b518:	mov	r5, r0
   1b51c:	mov	r0, r4
   1b520:	str	r5, [r3]
   1b524:	bl	14ac0 <free@plt>
   1b528:	cmp	r5, #0
   1b52c:	bne	1b4d8 <getOverrideDirectory@@Base+0x58>
   1b530:	ldr	r4, [pc, #60]	; 1b574 <getOverrideDirectory@@Base+0xf4>
   1b534:	mov	r0, #4
   1b538:	ldr	r1, [pc, #56]	; 1b578 <getOverrideDirectory@@Base+0xf8>
   1b53c:	add	r4, pc, r4
   1b540:	ldr	r3, [pc, #52]	; 1b57c <getOverrideDirectory@@Base+0xfc>
   1b544:	add	r1, pc, r1
   1b548:	add	r3, pc, r3
   1b54c:	str	r3, [r4]
   1b550:	bl	1aa88 <logMessage@@Base>
   1b554:	ldr	r0, [r4]
   1b558:	b	1b498 <getOverrideDirectory@@Base+0x18>
   1b55c:	andeq	sl, r1, r4, ror #29
   1b560:	andeq	r8, r0, ip, lsl #28
   1b564:	ldrdeq	r8, [r0], -r0
   1b568:	andeq	sl, r1, ip, ror lr
   1b56c:			; <UNDEFINED> instruction: 0x00008dbc
   1b570:	andeq	sl, r1, r8, asr lr
   1b574:	andeq	sl, r1, r0, lsr lr
   1b578:	andeq	r8, r0, r8, asr lr
   1b57c:	andeq	r8, r0, r0, ror #5

0001b580 <openFile@@Base>:
   1b580:	push	{r4, r5, r6, lr}
   1b584:	mov	r6, r2
   1b588:	mov	r5, r0
   1b58c:	bl	14c88 <fopen@plt>
   1b590:	subs	r4, r0, #0
   1b594:	beq	1b5bc <openFile@@Base+0x3c>
   1b598:	bl	14d6c <fileno@plt>
   1b59c:	ldr	r1, [pc, #104]	; 1b60c <openFile@@Base+0x8c>
   1b5a0:	mov	r2, r5
   1b5a4:	add	r1, pc, r1
   1b5a8:	mov	r3, r0
   1b5ac:	mov	r0, #7
   1b5b0:	bl	1aa88 <logMessage@@Base>
   1b5b4:	mov	r0, r4
   1b5b8:	pop	{r4, r5, r6, pc}
   1b5bc:	cmp	r6, #0
   1b5c0:	bne	1b5f4 <openFile@@Base+0x74>
   1b5c4:	bl	15000 <__errno_location@plt>
   1b5c8:	ldr	r0, [r0]
   1b5cc:	mov	r6, #3
   1b5d0:	bl	14b44 <strerror@plt>
   1b5d4:	ldr	r1, [pc, #52]	; 1b610 <openFile@@Base+0x90>
   1b5d8:	mov	r2, r5
   1b5dc:	add	r1, pc, r1
   1b5e0:	mov	r3, r0
   1b5e4:	mov	r0, r6
   1b5e8:	bl	1aa88 <logMessage@@Base>
   1b5ec:	mov	r0, r4
   1b5f0:	pop	{r4, r5, r6, pc}
   1b5f4:	bl	15000 <__errno_location@plt>
   1b5f8:	ldr	r0, [r0]
   1b5fc:	cmp	r0, #2
   1b600:	moveq	r6, #7
   1b604:	bne	1b5cc <openFile@@Base+0x4c>
   1b608:	b	1b5d0 <openFile@@Base+0x50>
   1b60c:	andeq	r8, r0, r8, lsr #28
   1b610:	andeq	r8, r0, r8, lsl #28

0001b614 <openDataFile@@Base>:
   1b614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b618:	sub	sp, sp, #12
   1b61c:	mov	r5, r1
   1b620:	mov	r6, r2
   1b624:	mov	r8, r0
   1b628:	bl	1ad9c <locatePathName@@Base>
   1b62c:	mov	r4, r0
   1b630:	bl	1b480 <getOverrideDirectory@@Base>
   1b634:	subs	r9, r0, #0
   1b638:	beq	1b68c <openDataFile@@Base+0x78>
   1b63c:	mov	r1, r4
   1b640:	bl	1ae1c <makePath@@Base>
   1b644:	subs	r4, r0, #0
   1b648:	beq	1b68c <openDataFile@@Base+0x78>
   1b64c:	bl	1afec <testFilePath@@Base>
   1b650:	cmp	r0, #0
   1b654:	bne	1b6dc <openDataFile@@Base+0xc8>
   1b658:	mov	r0, r8
   1b65c:	mov	r1, r5
   1b660:	mov	r2, r6
   1b664:	bl	1b580 <openFile@@Base>
   1b668:	subs	r7, r0, #0
   1b66c:	beq	1b694 <openDataFile@@Base+0x80>
   1b670:	cmp	r4, #0
   1b674:	beq	1b680 <openDataFile@@Base+0x6c>
   1b678:	mov	r0, r4
   1b67c:	bl	14ac0 <free@plt>
   1b680:	mov	r0, r7
   1b684:	add	sp, sp, #12
   1b688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b68c:	mov	r4, #0
   1b690:	b	1b658 <openDataFile@@Base+0x44>
   1b694:	ldrb	r3, [r5]
   1b698:	cmp	r3, #119	; 0x77
   1b69c:	cmpne	r3, #97	; 0x61
   1b6a0:	bne	1b670 <openDataFile@@Base+0x5c>
   1b6a4:	bl	15000 <__errno_location@plt>
   1b6a8:	ldr	r3, [r0]
   1b6ac:	mov	sl, r0
   1b6b0:	cmp	r3, #2
   1b6b4:	beq	1b6f4 <openDataFile@@Base+0xe0>
   1b6b8:	cmp	r3, #13
   1b6bc:	cmpne	r3, #30
   1b6c0:	bne	1b670 <openDataFile@@Base+0x5c>
   1b6c4:	cmp	r4, #0
   1b6c8:	beq	1b680 <openDataFile@@Base+0x6c>
   1b6cc:	mov	r0, r9
   1b6d0:	bl	1b190 <ensureDirectory@@Base>
   1b6d4:	cmp	r0, #0
   1b6d8:	beq	1b678 <openDataFile@@Base+0x64>
   1b6dc:	mov	r1, r5
   1b6e0:	mov	r2, r6
   1b6e4:	mov	r0, r4
   1b6e8:	bl	1b580 <openFile@@Base>
   1b6ec:	mov	r7, r0
   1b6f0:	b	1b678 <openDataFile@@Base+0x64>
   1b6f4:	mov	r0, r8
   1b6f8:	bl	1aca4 <getPathDirectory@@Base>
   1b6fc:	subs	fp, r0, #0
   1b700:	beq	1b724 <openDataFile@@Base+0x110>
   1b704:	bl	1b190 <ensureDirectory@@Base>
   1b708:	mov	r3, r0
   1b70c:	mov	r0, fp
   1b710:	str	r3, [sp, #4]
   1b714:	bl	14ac0 <free@plt>
   1b718:	ldr	r3, [sp, #4]
   1b71c:	cmp	r3, #0
   1b720:	bne	1b72c <openDataFile@@Base+0x118>
   1b724:	ldr	r3, [sl]
   1b728:	b	1b6b8 <openDataFile@@Base+0xa4>
   1b72c:	mov	r0, r8
   1b730:	mov	r1, r5
   1b734:	mov	r2, r6
   1b738:	bl	1b580 <openFile@@Base>
   1b73c:	mov	r7, r0
   1b740:	b	1b670 <openDataFile@@Base+0x5c>

0001b744 <acquireFileLock@@Base>:
   1b744:	adds	r2, r1, #0
   1b748:	mov	r1, #7
   1b74c:	movne	r2, #1
   1b750:	b	1aba4 <logMallocError@@Base+0x10>

0001b754 <attemptFileLock@@Base>:
   1b754:	adds	r2, r1, #0
   1b758:	mov	r1, #6
   1b75c:	movne	r2, #1
   1b760:	b	1aba4 <logMallocError@@Base+0x10>

0001b764 <releaseFileLock@@Base>:
   1b764:	mov	r1, #6
   1b768:	mov	r2, #2
   1b76c:	b	1aba4 <logMallocError@@Base+0x10>

0001b770 <readLine@@Base>:
   1b770:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1b774:	mov	r6, r1
   1b778:	mov	r7, r2
   1b77c:	mov	r8, r0
   1b780:	bl	14e8c <ferror@plt>
   1b784:	cmp	r0, #0
   1b788:	beq	1b798 <readLine@@Base+0x28>
   1b78c:	mov	r9, #0
   1b790:	mov	r0, r9
   1b794:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1b798:	mov	r0, r8
   1b79c:	bl	14b74 <feof@plt>
   1b7a0:	subs	r9, r0, #0
   1b7a4:	bne	1b78c <readLine@@Base+0x1c>
   1b7a8:	ldr	r1, [r7]
   1b7ac:	cmp	r1, #0
   1b7b0:	ldrne	r0, [r6]
   1b7b4:	beq	1b858 <readLine@@Base+0xe8>
   1b7b8:	mov	r2, r8
   1b7bc:	bl	14ea4 <fgets@plt>
   1b7c0:	subs	r5, r0, #0
   1b7c4:	beq	1b8d8 <readLine@@Base+0x168>
   1b7c8:	bl	14f10 <strlen@plt>
   1b7cc:	sub	r2, r0, #1
   1b7d0:	mov	r4, r0
   1b7d4:	ldrb	r3, [r5, r2]
   1b7d8:	cmp	r3, #10
   1b7dc:	beq	1b878 <readLine@@Base+0x108>
   1b7e0:	ldr	r3, [r6]
   1b7e4:	b	1b81c <readLine@@Base+0xac>
   1b7e8:	mov	r2, r8
   1b7ec:	add	r0, r3, r4
   1b7f0:	bl	14ea4 <fgets@plt>
   1b7f4:	cmp	r0, #0
   1b7f8:	beq	1b8ac <readLine@@Base+0x13c>
   1b7fc:	bl	14f10 <strlen@plt>
   1b800:	ldr	r5, [r6]
   1b804:	mov	r3, r5
   1b808:	add	r4, r4, r0
   1b80c:	sub	r2, r4, #1
   1b810:	ldrb	r1, [r5, r2]
   1b814:	cmp	r1, #10
   1b818:	beq	1b878 <readLine@@Base+0x108>
   1b81c:	ldr	r2, [r7]
   1b820:	rsb	r1, r4, r2
   1b824:	cmp	r1, #1
   1b828:	bne	1b7e8 <readLine@@Base+0x78>
   1b82c:	lsl	r5, r2, #1
   1b830:	mov	r0, r3
   1b834:	mov	r1, r5
   1b838:	bl	14d0c <realloc@plt>
   1b83c:	rsb	r1, r4, r5
   1b840:	cmp	r0, #0
   1b844:	beq	1b8d0 <readLine@@Base+0x160>
   1b848:	str	r0, [r6]
   1b84c:	str	r5, [r7]
   1b850:	ldr	r3, [r6]
   1b854:	b	1b7e8 <readLine@@Base+0x78>
   1b858:	mov	r0, #128	; 0x80
   1b85c:	str	r0, [r7]
   1b860:	bl	14f04 <malloc@plt>
   1b864:	cmp	r0, #0
   1b868:	str	r0, [r6]
   1b86c:	beq	1b8d0 <readLine@@Base+0x160>
   1b870:	ldr	r1, [r7]
   1b874:	b	1b7b8 <readLine@@Base+0x48>
   1b878:	cmp	r2, #0
   1b87c:	moveq	r3, r5
   1b880:	beq	1b898 <readLine@@Base+0x128>
   1b884:	sub	r4, r4, #2
   1b888:	add	r3, r5, r4
   1b88c:	ldrb	r1, [r5, r4]
   1b890:	cmp	r1, #13
   1b894:	addne	r3, r5, r2
   1b898:	mov	r9, #1
   1b89c:	mov	r2, #0
   1b8a0:	mov	r0, r9
   1b8a4:	strb	r2, [r3]
   1b8a8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1b8ac:	mov	r0, r8
   1b8b0:	bl	14e8c <ferror@plt>
   1b8b4:	cmp	r0, #0
   1b8b8:	moveq	r9, #1
   1b8bc:	beq	1b790 <readLine@@Base+0x20>
   1b8c0:	ldr	r0, [pc, #36]	; 1b8ec <readLine@@Base+0x17c>
   1b8c4:	add	r0, pc, r0
   1b8c8:	bl	1ab50 <logSystemError@@Base>
   1b8cc:	b	1b790 <readLine@@Base+0x20>
   1b8d0:	bl	1ab94 <logMallocError@@Base>
   1b8d4:	b	1b790 <readLine@@Base+0x20>
   1b8d8:	mov	r0, r8
   1b8dc:	bl	14e8c <ferror@plt>
   1b8e0:	cmp	r0, #0
   1b8e4:	beq	1b78c <readLine@@Base+0x1c>
   1b8e8:	b	1b8c0 <readLine@@Base+0x150>
   1b8ec:	ldrdeq	r8, [r0], -r0

0001b8f0 <processLines@@Base>:
   1b8f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b8f4:	sub	sp, sp, #28
   1b8f8:	ldr	lr, [pc, #224]	; 1b9e0 <processLines@@Base+0xf0>
   1b8fc:	mov	r3, #0
   1b900:	ldr	ip, [pc, #220]	; 1b9e4 <processLines@@Base+0xf4>
   1b904:	mov	r4, r3
   1b908:	add	lr, pc, lr
   1b90c:	ldr	sl, [pc, #212]	; 1b9e8 <processLines@@Base+0xf8>
   1b910:	mov	r8, r2
   1b914:	mov	r5, r0
   1b918:	ldr	ip, [lr, ip]
   1b91c:	add	sl, pc, sl
   1b920:	str	r3, [sp, #12]
   1b924:	mov	r2, lr
   1b928:	str	r3, [sp, #16]
   1b92c:	mov	r9, r1
   1b930:	ldr	r3, [ip]
   1b934:	add	sl, sl, #8
   1b938:	str	ip, [sp, #4]
   1b93c:	add	r7, sp, #12
   1b940:	add	r6, sp, #16
   1b944:	str	r3, [sp, #20]
   1b948:	b	1b988 <processLines@@Base+0x98>
   1b94c:	cmp	r4, #0
   1b950:	ldr	fp, [sp, #12]
   1b954:	bne	1b970 <processLines@@Base+0x80>
   1b958:	mov	r0, fp
   1b95c:	mov	r1, sl
   1b960:	mov	r2, #3
   1b964:	bl	14af0 <strncmp@plt>
   1b968:	cmp	r0, #0
   1b96c:	addeq	fp, fp, #3
   1b970:	mov	r0, fp
   1b974:	mov	r1, r8
   1b978:	blx	r9
   1b97c:	add	r4, r4, #1
   1b980:	cmp	r0, #0
   1b984:	beq	1b9a0 <processLines@@Base+0xb0>
   1b988:	mov	r0, r5
   1b98c:	mov	r1, r7
   1b990:	mov	r2, r6
   1b994:	bl	1b770 <readLine@@Base>
   1b998:	cmp	r0, #0
   1b99c:	bne	1b94c <processLines@@Base+0x5c>
   1b9a0:	ldr	r0, [sp, #12]
   1b9a4:	cmp	r0, #0
   1b9a8:	beq	1b9b0 <processLines@@Base+0xc0>
   1b9ac:	bl	14ac0 <free@plt>
   1b9b0:	mov	r0, r5
   1b9b4:	bl	14e8c <ferror@plt>
   1b9b8:	ldr	r1, [sp, #4]
   1b9bc:	ldr	r2, [sp, #20]
   1b9c0:	ldr	r3, [r1]
   1b9c4:	rsbs	r0, r0, #1
   1b9c8:	movcc	r0, #0
   1b9cc:	cmp	r2, r3
   1b9d0:	bne	1b9dc <processLines@@Base+0xec>
   1b9d4:	add	sp, sp, #28
   1b9d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9dc:	bl	14d9c <__stack_chk_fail@plt>
   1b9e0:	strdeq	sl, [r1], -r0
   1b9e4:	andeq	r0, r0, r4, lsl #5
   1b9e8:	andeq	r8, r0, r8, lsr #19

0001b9ec <formatInputError@@Base>:
   1b9ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b9f0:	cmp	r2, #0
   1b9f4:	sub	sp, sp, #12
   1b9f8:	mov	r7, r3
   1b9fc:	mov	r4, r0
   1ba00:	add	r5, r0, r1
   1ba04:	ldr	r9, [sp, #40]	; 0x28
   1ba08:	moveq	r6, r0
   1ba0c:	ldr	r8, [sp, #44]	; 0x2c
   1ba10:	beq	1ba3c <formatInputError@@Base+0x50>
   1ba14:	mov	r3, r2
   1ba18:	ldr	r2, [pc, #184]	; 1bad8 <formatInputError@@Base+0xec>
   1ba1c:	rsb	r1, r0, r5
   1ba20:	mov	r6, r4
   1ba24:	add	r2, pc, r2
   1ba28:	bl	14c40 <snprintf@plt>
   1ba2c:	add	r0, r4, r0
   1ba30:	cmp	r0, r5
   1ba34:	movcc	r4, r0
   1ba38:	movcs	r4, r5
   1ba3c:	cmp	r7, #0
   1ba40:	beq	1ba78 <formatInputError@@Base+0x8c>
   1ba44:	ldr	lr, [r7]
   1ba48:	mov	r0, r4
   1ba4c:	ldr	ip, [pc, #136]	; 1badc <formatInputError@@Base+0xf0>
   1ba50:	rsb	r1, r4, r5
   1ba54:	mov	r2, #1
   1ba58:	mvn	r3, #0
   1ba5c:	add	ip, pc, ip
   1ba60:	stm	sp, {ip, lr}
   1ba64:	bl	14f1c <__snprintf_chk@plt>
   1ba68:	add	r0, r4, r0
   1ba6c:	cmp	r0, r5
   1ba70:	movcc	r4, r0
   1ba74:	movcs	r4, r5
   1ba78:	cmp	r6, r4
   1ba7c:	beq	1baa4 <formatInputError@@Base+0xb8>
   1ba80:	ldr	r2, [pc, #88]	; 1bae0 <formatInputError@@Base+0xf4>
   1ba84:	mov	r0, r4
   1ba88:	rsb	r1, r4, r5
   1ba8c:	add	r2, pc, r2
   1ba90:	bl	14c40 <snprintf@plt>
   1ba94:	add	r0, r4, r0
   1ba98:	cmp	r0, r5
   1ba9c:	movcc	r4, r0
   1baa0:	movcs	r4, r5
   1baa4:	str	r9, [sp]
   1baa8:	mov	r0, r4
   1baac:	str	r8, [sp, #4]
   1bab0:	rsb	r1, r4, r5
   1bab4:	mov	r2, #1
   1bab8:	mvn	r3, #0
   1babc:	bl	14b5c <__vsnprintf_chk@plt>
   1bac0:	add	r0, r4, r0
   1bac4:	cmp	r0, r5
   1bac8:	rsbls	r0, r6, r0
   1bacc:	rsbhi	r0, r6, r5
   1bad0:	add	sp, sp, #12
   1bad4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1bad8:			; <UNDEFINED> instruction: 0x00008ab0
   1badc:	andeq	r8, r0, r4, lsr #19
   1bae0:	andeq	r8, r0, r8, lsr #14

0001bae4 <getConsole@@Base>:
   1bae4:	push	{r4, lr}
   1bae8:	ldr	r4, [pc, #96]	; 1bb50 <getConsole@@Base+0x6c>
   1baec:	add	r4, pc, r4
   1baf0:	ldr	r0, [r4]
   1baf4:	cmp	r0, #0
   1baf8:	popne	{r4, pc}
   1bafc:	ldr	r0, [pc, #80]	; 1bb54 <getConsole@@Base+0x70>
   1bb00:	ldr	r1, [pc, #80]	; 1bb58 <getConsole@@Base+0x74>
   1bb04:	add	r0, pc, r0
   1bb08:	add	r1, pc, r1
   1bb0c:	bl	14c88 <fopen@plt>
   1bb10:	cmp	r0, #0
   1bb14:	str	r0, [r4]
   1bb18:	beq	1bb3c <getConsole@@Base+0x58>
   1bb1c:	bl	14d6c <fileno@plt>
   1bb20:	ldr	r1, [pc, #52]	; 1bb5c <getConsole@@Base+0x78>
   1bb24:	add	r1, pc, r1
   1bb28:	mov	r2, r0
   1bb2c:	mov	r0, #7
   1bb30:	bl	1aa88 <logMessage@@Base>
   1bb34:	ldr	r0, [r4]
   1bb38:	pop	{r4, pc}
   1bb3c:	ldr	r0, [pc, #28]	; 1bb60 <getConsole@@Base+0x7c>
   1bb40:	add	r0, pc, r0
   1bb44:	bl	1ab50 <logSystemError@@Base>
   1bb48:	ldr	r0, [r4]
   1bb4c:	pop	{r4, pc}
   1bb50:	andeq	sl, r1, r8, lsl #17
   1bb54:	andeq	r8, r0, r4, lsl #18
   1bb58:	andeq	r8, r0, r0, lsl r9
   1bb5c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   1bb60:	strdeq	r8, [r0], -r4

0001bb64 <writeConsole@@Base>:
   1bb64:	push	{r3, r4, r5, r6, r7, lr}
   1bb68:	mov	r7, r0
   1bb6c:	mov	r4, r1
   1bb70:	bl	1bae4 <getConsole@@Base>
   1bb74:	subs	r6, r0, #0
   1bb78:	beq	1bbf0 <writeConsole@@Base+0x8c>
   1bb7c:	cmp	r4, #0
   1bb80:	bne	1bba0 <writeConsole@@Base+0x3c>
   1bb84:	b	1bbf8 <writeConsole@@Base+0x94>
   1bb88:	mov	r0, r6
   1bb8c:	bl	14e8c <ferror@plt>
   1bb90:	cmp	r0, #0
   1bb94:	bne	1bbe4 <writeConsole@@Base+0x80>
   1bb98:	subs	r4, r4, r5
   1bb9c:	beq	1bbf8 <writeConsole@@Base+0x94>
   1bba0:	mov	r0, r7
   1bba4:	mov	r1, #1
   1bba8:	mov	r2, r4
   1bbac:	mov	r3, r6
   1bbb0:	bl	14ee0 <fwrite@plt>
   1bbb4:	mov	r5, r0
   1bbb8:	mov	r0, r6
   1bbbc:	bl	14e8c <ferror@plt>
   1bbc0:	add	r7, r7, r5
   1bbc4:	cmp	r0, #0
   1bbc8:	bne	1bb88 <writeConsole@@Base+0x24>
   1bbcc:	mov	r0, r6
   1bbd0:	bl	15048 <fflush@plt>
   1bbd4:	mov	r0, r6
   1bbd8:	bl	14e8c <ferror@plt>
   1bbdc:	cmp	r0, #0
   1bbe0:	beq	1bb98 <writeConsole@@Base+0x34>
   1bbe4:	ldr	r0, [pc, #20]	; 1bc00 <writeConsole@@Base+0x9c>
   1bbe8:	add	r0, pc, r0
   1bbec:	bl	1ab50 <logSystemError@@Base>
   1bbf0:	mov	r0, #0
   1bbf4:	pop	{r3, r4, r5, r6, r7, pc}
   1bbf8:	mov	r0, #1
   1bbfc:	pop	{r3, r4, r5, r6, r7, pc}
   1bc00:	andeq	r8, r0, ip, asr r8

0001bc04 <ringBell@@Base>:
   1bc04:	ldr	r0, [pc, #8]	; 1bc14 <ringBell@@Base+0x10>
   1bc08:	mov	r1, #1
   1bc0c:	add	r0, pc, r0
   1bc10:	b	1bb64 <writeConsole@@Base>
   1bc14:	andeq	sl, r1, r4, asr #13

0001bc18 <getDeviceDirectory@@Base>:
   1bc18:	ldr	r3, [pc, #408]	; 1bdb8 <getDeviceDirectory@@Base+0x1a0>
   1bc1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc20:	add	fp, sp, #32
   1bc24:	ldr	r1, [pc, #400]	; 1bdbc <getDeviceDirectory@@Base+0x1a4>
   1bc28:	sub	sp, sp, #36	; 0x24
   1bc2c:	add	r3, pc, r3
   1bc30:	ldr	r2, [pc, #392]	; 1bdc0 <getDeviceDirectory@@Base+0x1a8>
   1bc34:	ldr	r6, [r3, r1]
   1bc38:	add	r2, pc, r2
   1bc3c:	ldr	r0, [r2, #4]
   1bc40:	ldr	r3, [r6]
   1bc44:	cmp	r0, #0
   1bc48:	str	r3, [fp, #-40]	; 0xffffffd8
   1bc4c:	beq	1bc68 <getDeviceDirectory@@Base+0x50>
   1bc50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bc54:	ldr	r3, [r6]
   1bc58:	cmp	r2, r3
   1bc5c:	bne	1bdb4 <getDeviceDirectory@@Base+0x19c>
   1bc60:	sub	sp, fp, #32
   1bc64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc68:	ldr	r3, [pc, #340]	; 1bdc4 <getDeviceDirectory@@Base+0x1ac>
   1bc6c:	ldr	r4, [pc, #340]	; 1bdc8 <getDeviceDirectory@@Base+0x1b0>
   1bc70:	add	r3, pc, r3
   1bc74:	ldr	r0, [pc, #336]	; 1bdcc <getDeviceDirectory@@Base+0x1b4>
   1bc78:	ldr	r9, [pc, #336]	; 1bdd0 <getDeviceDirectory@@Base+0x1b8>
   1bc7c:	add	r4, pc, r4
   1bc80:	ldr	r8, [pc, #332]	; 1bdd4 <getDeviceDirectory@@Base+0x1bc>
   1bc84:	add	r0, pc, r0
   1bc88:	str	r3, [fp, #-48]	; 0xffffffd0
   1bc8c:	add	r9, pc, r9
   1bc90:	ldr	r3, [pc, #320]	; 1bdd8 <getDeviceDirectory@@Base+0x1c0>
   1bc94:	add	r4, r4, #4
   1bc98:	add	r8, pc, r8
   1bc9c:	add	r3, pc, r3
   1bca0:	str	r3, [fp, #-52]	; 0xffffffcc
   1bca4:	b	1bcb4 <getDeviceDirectory@@Base+0x9c>
   1bca8:	ldr	r0, [r4], #4
   1bcac:	cmp	r0, #0
   1bcb0:	beq	1bd50 <getDeviceDirectory@@Base+0x138>
   1bcb4:	bl	150c0 <getenv@plt>
   1bcb8:	subs	sl, r0, #0
   1bcbc:	beq	1bca8 <getDeviceDirectory@@Base+0x90>
   1bcc0:	ldrb	r3, [sl]
   1bcc4:	cmp	r3, #0
   1bcc8:	beq	1bca8 <getDeviceDirectory@@Base+0x90>
   1bccc:	bl	14f10 <strlen@plt>
   1bcd0:	mov	r7, sp
   1bcd4:	mov	r2, #1
   1bcd8:	add	r3, r0, #12
   1bcdc:	add	r1, r0, #5
   1bce0:	bic	r3, r3, #7
   1bce4:	sub	sp, sp, r3
   1bce8:	mvn	r3, #0
   1bcec:	add	r5, sp, #16
   1bcf0:	stm	sp, {r9, sl}
   1bcf4:	mov	r0, r5
   1bcf8:	str	r8, [sp, #8]
   1bcfc:	bl	14f1c <__snprintf_chk@plt>
   1bd00:	mov	r0, r5
   1bd04:	bl	1b08c <testDirectoryPath@@Base>
   1bd08:	cmp	r0, #0
   1bd0c:	bne	1bd88 <getDeviceDirectory@@Base+0x170>
   1bd10:	bl	15000 <__errno_location@plt>
   1bd14:	ldr	r0, [r0]
   1bd18:	cmp	r0, #2
   1bd1c:	beq	1bd40 <getDeviceDirectory@@Base+0x128>
   1bd20:	ldr	sl, [r4, #-4]
   1bd24:	bl	14b44 <strerror@plt>
   1bd28:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1bd2c:	mov	r2, r5
   1bd30:	mov	r3, sl
   1bd34:	str	r0, [sp]
   1bd38:	mov	r0, #3
   1bd3c:	bl	1aa88 <logMessage@@Base>
   1bd40:	ldr	r0, [r4], #4
   1bd44:	mov	sp, r7
   1bd48:	cmp	r0, #0
   1bd4c:	bne	1bcb4 <getDeviceDirectory@@Base+0x9c>
   1bd50:	ldr	r3, [pc, #132]	; 1bddc <getDeviceDirectory@@Base+0x1c4>
   1bd54:	ldr	r1, [pc, #132]	; 1bde0 <getDeviceDirectory@@Base+0x1c8>
   1bd58:	add	r3, pc, r3
   1bd5c:	add	r1, pc, r1
   1bd60:	mov	r2, r3
   1bd64:	str	r3, [r1, #4]
   1bd68:	ldr	r1, [pc, #116]	; 1bde4 <getDeviceDirectory@@Base+0x1cc>
   1bd6c:	mov	r0, #7
   1bd70:	add	r1, pc, r1
   1bd74:	bl	1aa88 <logMessage@@Base>
   1bd78:	ldr	r3, [pc, #104]	; 1bde8 <getDeviceDirectory@@Base+0x1d0>
   1bd7c:	add	r3, pc, r3
   1bd80:	ldr	r0, [r3, #4]
   1bd84:	b	1bc50 <getDeviceDirectory@@Base+0x38>
   1bd88:	mov	r0, r5
   1bd8c:	bl	14c4c <__strdup@plt>
   1bd90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bd94:	cmp	r0, #0
   1bd98:	str	r0, [r3, #4]
   1bd9c:	bne	1bda8 <getDeviceDirectory@@Base+0x190>
   1bda0:	bl	1ab94 <logMallocError@@Base>
   1bda4:	b	1bd40 <getDeviceDirectory@@Base+0x128>
   1bda8:	mov	r2, r0
   1bdac:	mov	sp, r7
   1bdb0:	b	1bd68 <getDeviceDirectory@@Base+0x150>
   1bdb4:	bl	14d9c <__stack_chk_fail@plt>
   1bdb8:	andeq	sl, r1, ip, asr #7
   1bdbc:	andeq	r0, r0, r4, lsl #5
   1bdc0:	andeq	sl, r1, ip, lsr r7
   1bdc4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   1bdc8:	andeq	sl, r1, ip, asr r1
   1bdcc:	ldrdeq	r8, [r0], -r0
   1bdd0:	andeq	r8, r0, r8, lsl #9
   1bdd4:	andeq	r8, r0, r8, asr #15
   1bdd8:	ldrdeq	sl, [r1], -r8
   1bddc:	andeq	r8, r0, r8, lsl #14
   1bde0:	andeq	sl, r1, r8, lsl r6
   1bde4:	andeq	r8, r0, ip, lsl r7
   1bde8:	strdeq	sl, [r1], -r8

0001bdec <getDevicePath@@Base>:
   1bdec:	push	{r4, lr}
   1bdf0:	mov	r4, r0
   1bdf4:	bl	1bc18 <getDeviceDirectory@@Base>
   1bdf8:	mov	r1, r4
   1bdfc:	pop	{r4, lr}
   1be00:	b	1ae1c <makePath@@Base>

0001be04 <resolveDeviceName@@Base>:
   1be04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be08:	sub	sp, sp, #20
   1be0c:	ldr	r3, [r0]
   1be10:	mov	r7, r1
   1be14:	cmp	r3, #0
   1be18:	str	r3, [sp, #12]
   1be1c:	beq	1bf04 <resolveDeviceName@@Base+0x100>
   1be20:	ldr	r9, [pc, #248]	; 1bf20 <resolveDeviceName@@Base+0x11c>
   1be24:	mov	r8, r0
   1be28:	ldr	sl, [pc, #244]	; 1bf24 <resolveDeviceName@@Base+0x120>
   1be2c:	mov	r6, #0
   1be30:	add	r9, pc, r9
   1be34:	ldr	r5, [sp, #12]
   1be38:	add	sl, pc, sl
   1be3c:	b	1bea4 <resolveDeviceName@@Base+0xa0>
   1be40:	bl	1aa88 <logMessage@@Base>
   1be44:	mov	r0, r4
   1be48:	bl	1afd4 <testPath@@Base>
   1be4c:	cmp	r0, #0
   1be50:	bne	1bef4 <resolveDeviceName@@Base+0xf0>
   1be54:	bl	15000 <__errno_location@plt>
   1be58:	mov	fp, r0
   1be5c:	ldr	r0, [r0]
   1be60:	bl	14b44 <strerror@plt>
   1be64:	mov	r3, r4
   1be68:	mov	r1, sl
   1be6c:	mov	r2, r7
   1be70:	str	r0, [sp]
   1be74:	mov	r0, #7
   1be78:	bl	1aa88 <logMessage@@Base>
   1be7c:	ldr	r3, [fp]
   1be80:	mov	r0, r4
   1be84:	cmp	r3, #2
   1be88:	beq	1be94 <resolveDeviceName@@Base+0x90>
   1be8c:	cmp	r6, #0
   1be90:	moveq	r6, r5
   1be94:	bl	14ac0 <free@plt>
   1be98:	ldr	r5, [r8, #4]!
   1be9c:	cmp	r5, #0
   1bea0:	beq	1bec4 <resolveDeviceName@@Base+0xc0>
   1bea4:	mov	r0, r5
   1bea8:	bl	1bdec <getDevicePath@@Base>
   1beac:	mov	r1, r9
   1beb0:	mov	r2, r7
   1beb4:	subs	r4, r0, #0
   1beb8:	mov	r0, #7
   1bebc:	mov	r3, r4
   1bec0:	bne	1be40 <resolveDeviceName@@Base+0x3c>
   1bec4:	ldr	r3, [sp, #12]
   1bec8:	cmp	r6, #0
   1becc:	moveq	r6, r3
   1bed0:	ldr	r1, [pc, #80]	; 1bf28 <resolveDeviceName@@Base+0x124>
   1bed4:	mov	r2, r7
   1bed8:	mov	r0, #6
   1bedc:	mov	r3, r6
   1bee0:	add	r1, pc, r1
   1bee4:	bl	1aa88 <logMessage@@Base>
   1bee8:	mov	r0, r6
   1beec:	add	sp, sp, #20
   1bef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bef4:	mov	r0, r4
   1bef8:	mov	r6, r5
   1befc:	bl	14ac0 <free@plt>
   1bf00:	b	1bed0 <resolveDeviceName@@Base+0xcc>
   1bf04:	mov	r2, r1
   1bf08:	ldr	r1, [pc, #28]	; 1bf2c <resolveDeviceName@@Base+0x128>
   1bf0c:	mov	r0, #3
   1bf10:	mov	r6, r3
   1bf14:	add	r1, pc, r1
   1bf18:	bl	1aa88 <logMessage@@Base>
   1bf1c:	b	1bee8 <resolveDeviceName@@Base+0xe4>
   1bf20:	muleq	r0, r0, r6
   1bf24:	andeq	r8, r0, r0, lsr #13
   1bf28:	andeq	r8, r0, r8, lsl r6
   1bf2c:	muleq	r0, r0, r5

0001bf30 <isQualifiedDevice@@Base>:
   1bf30:	push	{r3, r4, r5, r6, r7, lr}
   1bf34:	mov	r7, r0
   1bf38:	ldr	r5, [r0]
   1bf3c:	mov	r6, r1
   1bf40:	ldrb	r4, [r5]
   1bf44:	cmp	r4, #0
   1bf48:	beq	1bf78 <isQualifiedDevice@@Base+0x48>
   1bf4c:	cmp	r4, #58	; 0x3a
   1bf50:	beq	1bfd4 <isQualifiedDevice@@Base+0xa4>
   1bf54:	mov	r2, r5
   1bf58:	mov	r4, #0
   1bf5c:	b	1bf68 <isQualifiedDevice@@Base+0x38>
   1bf60:	cmp	r3, #58	; 0x3a
   1bf64:	beq	1bf78 <isQualifiedDevice@@Base+0x48>
   1bf68:	ldrb	r3, [r2, #1]!
   1bf6c:	add	r4, r4, #1
   1bf70:	cmp	r3, #0
   1bf74:	bne	1bf60 <isQualifiedDevice@@Base+0x30>
   1bf78:	mov	r0, r5
   1bf7c:	bl	14f10 <strlen@plt>
   1bf80:	cmp	r0, r4
   1bf84:	beq	1bfc4 <isQualifiedDevice@@Base+0x94>
   1bf88:	cmp	r6, #0
   1bf8c:	beq	1bfcc <isQualifiedDevice@@Base+0x9c>
   1bf90:	cmp	r4, #0
   1bf94:	beq	1bfc4 <isQualifiedDevice@@Base+0x94>
   1bf98:	mov	r1, r6
   1bf9c:	mov	r0, r5
   1bfa0:	mov	r2, r4
   1bfa4:	bl	14e08 <strncasecmp@plt>
   1bfa8:	cmp	r0, #0
   1bfac:	bne	1bfc4 <isQualifiedDevice@@Base+0x94>
   1bfb0:	add	r4, r4, #1
   1bfb4:	mov	r0, #1
   1bfb8:	add	r5, r5, r4
   1bfbc:	str	r5, [r7]
   1bfc0:	pop	{r3, r4, r5, r6, r7, pc}
   1bfc4:	mov	r0, #0
   1bfc8:	pop	{r3, r4, r5, r6, r7, pc}
   1bfcc:	mov	r0, #1
   1bfd0:	pop	{r3, r4, r5, r6, r7, pc}
   1bfd4:	mov	r4, #0
   1bfd8:	b	1bf78 <isQualifiedDevice@@Base+0x48>

0001bfdc <deallocateStrings@@Base>:
   1bfdc:	push	{r3, r4, r5, lr}
   1bfe0:	mov	r5, r0
   1bfe4:	ldr	r0, [r0]
   1bfe8:	cmp	r0, #0
   1bfec:	movne	r4, r5
   1bff0:	beq	1c004 <deallocateStrings@@Base+0x28>
   1bff4:	bl	14ac0 <free@plt>
   1bff8:	ldr	r0, [r4, #4]!
   1bffc:	cmp	r0, #0
   1c000:	bne	1bff4 <deallocateStrings@@Base+0x18>
   1c004:	mov	r0, r5
   1c008:	pop	{r3, r4, r5, lr}
   1c00c:	b	14ac0 <free@plt>

0001c010 <splitString@@Base>:
   1c010:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c014:	cmp	r0, #0
   1c018:	sub	sp, sp, #12
   1c01c:	mov	r8, r1
   1c020:	str	r0, [sp]
   1c024:	str	r2, [sp, #4]
   1c028:	beq	1c0d8 <splitString@@Base+0xc8>
   1c02c:	mov	r7, #0
   1c030:	mov	r9, r7
   1c034:	ldr	r3, [sp]
   1c038:	ldrb	r6, [r3]
   1c03c:	cmp	r6, #0
   1c040:	beq	1c0b8 <splitString@@Base+0xa8>
   1c044:	mov	r5, r3
   1c048:	mov	r6, #0
   1c04c:	b	1c090 <splitString@@Base+0x80>
   1c050:	cmp	r7, #0
   1c054:	add	r0, fp, #1
   1c058:	beq	1c080 <splitString@@Base+0x70>
   1c05c:	bl	14f04 <malloc@plt>
   1c060:	mov	r1, r5
   1c064:	mov	r2, fp
   1c068:	cmp	r0, #0
   1c06c:	mov	sl, r0
   1c070:	str	r0, [r7, r6, lsl #2]
   1c074:	beq	1c0f8 <splitString@@Base+0xe8>
   1c078:	bl	14eec <memcpy@plt>
   1c07c:	strb	r9, [sl, fp]
   1c080:	cmp	r4, #0
   1c084:	add	r5, r4, #1
   1c088:	add	r6, r6, #1
   1c08c:	beq	1c0b8 <splitString@@Base+0xa8>
   1c090:	mov	r0, r5
   1c094:	mov	r1, r8
   1c098:	bl	15114 <strchr@plt>
   1c09c:	subs	r4, r0, #0
   1c0a0:	rsb	fp, r5, r4
   1c0a4:	bne	1c050 <splitString@@Base+0x40>
   1c0a8:	mov	r0, r5
   1c0ac:	bl	14f10 <strlen@plt>
   1c0b0:	mov	fp, r0
   1c0b4:	b	1c050 <splitString@@Base+0x40>
   1c0b8:	cmp	r7, #0
   1c0bc:	bne	1c108 <splitString@@Base+0xf8>
   1c0c0:	add	r0, r6, #1
   1c0c4:	lsl	r0, r0, #2
   1c0c8:	bl	14f04 <malloc@plt>
   1c0cc:	subs	r7, r0, #0
   1c0d0:	bne	1c034 <splitString@@Base+0x24>
   1c0d4:	bl	1ab94 <logMallocError@@Base>
   1c0d8:	ldr	r3, [sp, #4]
   1c0dc:	cmp	r3, #0
   1c0e0:	ldreq	r7, [sp, #4]
   1c0e4:	movne	r7, #0
   1c0e8:	strne	r7, [r3]
   1c0ec:	mov	r0, r7
   1c0f0:	add	sp, sp, #12
   1c0f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c0f8:	bl	1ab94 <logMallocError@@Base>
   1c0fc:	mov	r0, r7
   1c100:	bl	1bfdc <deallocateStrings@@Base>
   1c104:	b	1c0d8 <splitString@@Base+0xc8>
   1c108:	ldr	r3, [sp, #4]
   1c10c:	cmp	r3, #0
   1c110:	mov	r3, #0
   1c114:	str	r3, [r7, r6, lsl #2]
   1c118:	ldrne	r3, [sp, #4]
   1c11c:	strne	r6, [r3]
   1c120:	b	1c0ec <splitString@@Base+0xdc>

0001c124 <joinStrings@@Base>:
   1c124:	ldr	r3, [pc, #236]	; 1c218 <joinStrings@@Base+0xf4>
   1c128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c12c:	mov	r7, r1
   1c130:	add	fp, sp, #32
   1c134:	ldr	r1, [pc, #224]	; 1c21c <joinStrings@@Base+0xf8>
   1c138:	sub	sp, sp, #20
   1c13c:	add	r3, pc, r3
   1c140:	lsl	r9, r7, #2
   1c144:	add	r2, r9, #10
   1c148:	cmp	r7, #0
   1c14c:	ldr	r1, [r3, r1]
   1c150:	bic	r2, r2, #7
   1c154:	sub	sp, sp, r2
   1c158:	mov	r6, r0
   1c15c:	ldr	r3, [r1]
   1c160:	mov	r5, sp
   1c164:	str	r1, [fp, #-48]	; 0xffffffd0
   1c168:	str	r3, [fp, #-40]	; 0xffffffd8
   1c16c:	ble	1c200 <joinStrings@@Base+0xdc>
   1c170:	mov	r4, #0
   1c174:	mov	sl, r4
   1c178:	ldr	r0, [r6, r4]
   1c17c:	bl	14f10 <strlen@plt>
   1c180:	str	r0, [r5, r4]
   1c184:	add	r4, r4, #4
   1c188:	cmp	r9, r4
   1c18c:	add	sl, sl, r0
   1c190:	bne	1c178 <joinStrings@@Base+0x54>
   1c194:	add	r0, sl, #1
   1c198:	bl	14f04 <malloc@plt>
   1c19c:	subs	sl, r0, #0
   1c1a0:	beq	1c1dc <joinStrings@@Base+0xb8>
   1c1a4:	mov	r4, #0
   1c1a8:	mov	r9, sl
   1c1ac:	mov	r8, r4
   1c1b0:	ldr	r2, [r5, r4]
   1c1b4:	mov	r0, r9
   1c1b8:	ldr	r1, [r6, r4]
   1c1bc:	add	r8, r8, #1
   1c1c0:	add	r9, r9, r2
   1c1c4:	bl	14eec <memcpy@plt>
   1c1c8:	cmp	r8, r7
   1c1cc:	add	r4, r4, #4
   1c1d0:	bne	1c1b0 <joinStrings@@Base+0x8c>
   1c1d4:	mov	r3, #0
   1c1d8:	strb	r3, [r9]
   1c1dc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c1e0:	mov	r0, sl
   1c1e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c1e8:	ldr	r3, [r1]
   1c1ec:	cmp	r2, r3
   1c1f0:	bne	1c1fc <joinStrings@@Base+0xd8>
   1c1f4:	sub	sp, fp, #32
   1c1f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1fc:	bl	14d9c <__stack_chk_fail@plt>
   1c200:	mov	r0, #1
   1c204:	bl	14f04 <malloc@plt>
   1c208:	subs	r9, r0, #0
   1c20c:	mov	sl, r9
   1c210:	bne	1c1d4 <joinStrings@@Base+0xb0>
   1c214:	b	1c1dc <joinStrings@@Base+0xb8>
   1c218:			; <UNDEFINED> instruction: 0x00019ebc
   1c21c:	andeq	r0, r0, r4, lsl #5

0001c220 <rescaleInteger@@Base>:
   1c220:	push	{r4, r5, r6, lr}
   1c224:	mov	r4, r1
   1c228:	mov	r6, r0
   1c22c:	lsl	r1, r2, #1
   1c230:	mov	r0, r4
   1c234:	mov	r5, r2
   1c238:	bl	23324 <processLibLouisStream@@Base+0x21c>
   1c23c:	mov	r1, r4
   1c240:	add	r0, r0, r6
   1c244:	mul	r0, r5, r0
   1c248:	bl	23324 <processLibLouisStream@@Base+0x21c>
   1c24c:	pop	{r4, r5, r6, pc}

0001c250 <isInteger@@Base>:
   1c250:	ldr	r3, [pc, #112]	; 1c2c8 <isInteger@@Base+0x78>
   1c254:	ldr	ip, [pc, #112]	; 1c2cc <isInteger@@Base+0x7c>
   1c258:	add	r3, pc, r3
   1c25c:	push	{r4, r5, lr}
   1c260:	sub	sp, sp, #12
   1c264:	ldr	r4, [r3, ip]
   1c268:	mov	r5, r0
   1c26c:	ldrb	r2, [r1]
   1c270:	ldr	r3, [r4]
   1c274:	cmp	r2, #0
   1c278:	moveq	r0, r2
   1c27c:	str	r3, [sp, #4]
   1c280:	beq	1c2ac <isInteger@@Base+0x5c>
   1c284:	mov	r0, r1
   1c288:	mov	r2, #0
   1c28c:	mov	r1, sp
   1c290:	bl	14ab4 <strtol@plt>
   1c294:	ldr	r3, [sp]
   1c298:	ldrb	r3, [r3]
   1c29c:	cmp	r3, #0
   1c2a0:	movne	r0, #0
   1c2a4:	streq	r0, [r5]
   1c2a8:	moveq	r0, #1
   1c2ac:	ldr	r1, [sp, #4]
   1c2b0:	ldr	r3, [r4]
   1c2b4:	cmp	r1, r3
   1c2b8:	bne	1c2c4 <isInteger@@Base+0x74>
   1c2bc:	add	sp, sp, #12
   1c2c0:	pop	{r4, r5, pc}
   1c2c4:	bl	14d9c <__stack_chk_fail@plt>
   1c2c8:	andeq	r9, r1, r0, lsr #27
   1c2cc:	andeq	r0, r0, r4, lsl #5

0001c2d0 <isUnsignedInteger@@Base>:
   1c2d0:	ldr	r3, [pc, #112]	; 1c348 <isUnsignedInteger@@Base+0x78>
   1c2d4:	ldr	ip, [pc, #112]	; 1c34c <isUnsignedInteger@@Base+0x7c>
   1c2d8:	add	r3, pc, r3
   1c2dc:	push	{r4, r5, lr}
   1c2e0:	sub	sp, sp, #12
   1c2e4:	ldr	r4, [r3, ip]
   1c2e8:	mov	r5, r0
   1c2ec:	ldrb	r2, [r1]
   1c2f0:	ldr	r3, [r4]
   1c2f4:	cmp	r2, #0
   1c2f8:	moveq	r0, r2
   1c2fc:	str	r3, [sp, #4]
   1c300:	beq	1c32c <isUnsignedInteger@@Base+0x5c>
   1c304:	mov	r0, r1
   1c308:	mov	r2, #0
   1c30c:	mov	r1, sp
   1c310:	bl	14bd4 <strtoul@plt>
   1c314:	ldr	r3, [sp]
   1c318:	ldrb	r3, [r3]
   1c31c:	cmp	r3, #0
   1c320:	movne	r0, #0
   1c324:	streq	r0, [r5]
   1c328:	moveq	r0, #1
   1c32c:	ldr	r1, [sp, #4]
   1c330:	ldr	r3, [r4]
   1c334:	cmp	r1, r3
   1c338:	bne	1c344 <isUnsignedInteger@@Base+0x74>
   1c33c:	add	sp, sp, #12
   1c340:	pop	{r4, r5, pc}
   1c344:	bl	14d9c <__stack_chk_fail@plt>
   1c348:	andeq	r9, r1, r0, lsr #26
   1c34c:	andeq	r0, r0, r4, lsl #5

0001c350 <isLogLevel@@Base>:
   1c350:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c354:	sub	sp, sp, #8
   1c358:	ldr	r5, [pc, #220]	; 1c43c <isLogLevel@@Base+0xec>
   1c35c:	mov	sl, r0
   1c360:	ldr	r3, [pc, #216]	; 1c440 <isLogLevel@@Base+0xf0>
   1c364:	mov	r6, r1
   1c368:	add	r5, pc, r5
   1c36c:	ldrb	r2, [r1]
   1c370:	ldr	r9, [r5, r3]
   1c374:	cmp	r2, #0
   1c378:	moveq	r0, #1
   1c37c:	ldr	r3, [r9]
   1c380:	str	r3, [sp, #4]
   1c384:	beq	1c3e8 <isLogLevel@@Base+0x98>
   1c388:	mov	r0, r1
   1c38c:	bl	14f10 <strlen@plt>
   1c390:	ldr	r3, [pc, #172]	; 1c444 <isLogLevel@@Base+0xf4>
   1c394:	ldr	r3, [r5, r3]
   1c398:	ldr	r7, [r3]
   1c39c:	cmp	r7, #0
   1c3a0:	mov	r8, r0
   1c3a4:	beq	1c400 <isLogLevel@@Base+0xb0>
   1c3a8:	ldr	r3, [pc, #152]	; 1c448 <isLogLevel@@Base+0xf8>
   1c3ac:	mov	r4, #0
   1c3b0:	ldr	r5, [r5, r3]
   1c3b4:	sub	r5, r5, #4
   1c3b8:	b	1c3c8 <isLogLevel@@Base+0x78>
   1c3bc:	add	r4, r4, #1
   1c3c0:	cmp	r4, r7
   1c3c4:	beq	1c400 <isLogLevel@@Base+0xb0>
   1c3c8:	mov	r0, r6
   1c3cc:	ldr	r1, [r5, #4]!
   1c3d0:	mov	r2, r8
   1c3d4:	bl	14e08 <strncasecmp@plt>
   1c3d8:	cmp	r0, #0
   1c3dc:	bne	1c3bc <isLogLevel@@Base+0x6c>
   1c3e0:	mov	r0, #1
   1c3e4:	str	r4, [sl]
   1c3e8:	ldr	r2, [sp, #4]
   1c3ec:	ldr	r3, [r9]
   1c3f0:	cmp	r2, r3
   1c3f4:	bne	1c438 <isLogLevel@@Base+0xe8>
   1c3f8:	add	sp, sp, #8
   1c3fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c400:	mov	r1, r6
   1c404:	mov	r0, sp
   1c408:	bl	1c250 <isInteger@@Base>
   1c40c:	cmp	r0, #0
   1c410:	beq	1c430 <isLogLevel@@Base+0xe0>
   1c414:	ldr	r3, [sp]
   1c418:	cmp	r3, #0
   1c41c:	blt	1c430 <isLogLevel@@Base+0xe0>
   1c420:	cmp	r3, r7
   1c424:	strcc	r3, [sl]
   1c428:	movcc	r0, #1
   1c42c:	bcc	1c3e8 <isLogLevel@@Base+0x98>
   1c430:	mov	r0, #0
   1c434:	b	1c3e8 <isLogLevel@@Base+0x98>
   1c438:	bl	14d9c <__stack_chk_fail@plt>
   1c43c:	muleq	r1, r0, ip
   1c440:	andeq	r0, r0, r4, lsl #5
   1c444:	andeq	r0, r0, r4, ror r2
   1c448:	muleq	r0, r8, r2

0001c44c <validateInteger@@Base>:
   1c44c:	ldr	ip, [pc, #164]	; 1c4f8 <validateInteger@@Base+0xac>
   1c450:	push	{r4, r5, r6, r7, r8, lr}
   1c454:	add	ip, pc, ip
   1c458:	ldr	r4, [pc, #156]	; 1c4fc <validateInteger@@Base+0xb0>
   1c45c:	sub	sp, sp, #8
   1c460:	ldrb	r5, [r1]
   1c464:	mov	r7, r0
   1c468:	mov	r6, r2
   1c46c:	mov	r8, r3
   1c470:	ldr	r4, [ip, r4]
   1c474:	cmp	r5, #0
   1c478:	moveq	r0, #1
   1c47c:	ldr	ip, [r4]
   1c480:	str	ip, [sp, #4]
   1c484:	bne	1c4a0 <validateInteger@@Base+0x54>
   1c488:	ldr	r2, [sp, #4]
   1c48c:	ldr	r3, [r4]
   1c490:	cmp	r2, r3
   1c494:	bne	1c4f4 <validateInteger@@Base+0xa8>
   1c498:	add	sp, sp, #8
   1c49c:	pop	{r4, r5, r6, r7, r8, pc}
   1c4a0:	mov	r0, sp
   1c4a4:	bl	1c250 <isInteger@@Base>
   1c4a8:	cmp	r0, #0
   1c4ac:	beq	1c4e0 <validateInteger@@Base+0x94>
   1c4b0:	cmp	r6, #0
   1c4b4:	ldreq	r3, [sp]
   1c4b8:	beq	1c4cc <validateInteger@@Base+0x80>
   1c4bc:	ldr	r2, [r6]
   1c4c0:	ldr	r3, [sp]
   1c4c4:	cmp	r2, r3
   1c4c8:	bgt	1c4e0 <validateInteger@@Base+0x94>
   1c4cc:	cmp	r8, #0
   1c4d0:	beq	1c4e8 <validateInteger@@Base+0x9c>
   1c4d4:	ldr	r2, [r8]
   1c4d8:	cmp	r2, r3
   1c4dc:	bge	1c4e8 <validateInteger@@Base+0x9c>
   1c4e0:	mov	r0, #0
   1c4e4:	b	1c488 <validateInteger@@Base+0x3c>
   1c4e8:	str	r3, [r7]
   1c4ec:	mov	r0, #1
   1c4f0:	b	1c488 <validateInteger@@Base+0x3c>
   1c4f4:	bl	14d9c <__stack_chk_fail@plt>
   1c4f8:	andeq	r9, r1, r4, lsr #23
   1c4fc:	andeq	r0, r0, r4, lsl #5

0001c500 <validateChoice@@Base>:
   1c500:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1c504:	mov	r9, r0
   1c508:	mov	r0, r1
   1c50c:	mov	r6, r1
   1c510:	mov	r5, r2
   1c514:	bl	14f10 <strlen@plt>
   1c518:	mov	r7, #0
   1c51c:	str	r7, [r9]
   1c520:	subs	r8, r0, #0
   1c524:	beq	1c570 <validateChoice@@Base+0x70>
   1c528:	ldr	r1, [r5]
   1c52c:	cmp	r1, r7
   1c530:	beq	1c578 <validateChoice@@Base+0x78>
   1c534:	mov	r4, r7
   1c538:	b	1c54c <validateChoice@@Base+0x4c>
   1c53c:	ldr	r1, [r5, #4]!
   1c540:	mov	r7, r4
   1c544:	cmp	r1, #0
   1c548:	beq	1c578 <validateChoice@@Base+0x78>
   1c54c:	mov	r0, r6
   1c550:	mov	r2, r8
   1c554:	bl	14e08 <strncasecmp@plt>
   1c558:	add	r4, r4, #1
   1c55c:	cmp	r0, #0
   1c560:	bne	1c53c <validateChoice@@Base+0x3c>
   1c564:	str	r7, [r9]
   1c568:	mov	r0, #1
   1c56c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1c570:	mov	r0, #1
   1c574:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1c578:	mov	r0, r1
   1c57c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

0001c580 <validateFlag@@Base>:
   1c580:	ldr	ip, [pc, #76]	; 1c5d4 <validateFlag@@Base+0x54>
   1c584:	push	{r4, lr}
   1c588:	add	ip, pc, ip
   1c58c:	ldr	r4, [pc, #68]	; 1c5d8 <validateFlag@@Base+0x58>
   1c590:	sub	sp, sp, #16
   1c594:	mov	lr, #0
   1c598:	ldr	r4, [ip, r4]
   1c59c:	str	r3, [sp]
   1c5a0:	str	r2, [sp, #4]
   1c5a4:	mov	r2, sp
   1c5a8:	ldr	r3, [r4]
   1c5ac:	str	lr, [sp, #8]
   1c5b0:	str	r3, [sp, #12]
   1c5b4:	bl	1c500 <validateChoice@@Base>
   1c5b8:	ldr	r2, [sp, #12]
   1c5bc:	ldr	r3, [r4]
   1c5c0:	cmp	r2, r3
   1c5c4:	bne	1c5d0 <validateFlag@@Base+0x50>
   1c5c8:	add	sp, sp, #16
   1c5cc:	pop	{r4, pc}
   1c5d0:	bl	14d9c <__stack_chk_fail@plt>
   1c5d4:	andeq	r9, r1, r0, ror sl
   1c5d8:	andeq	r0, r0, r4, lsl #5

0001c5dc <validateOnOff@@Base>:
   1c5dc:	ldr	r2, [pc, #12]	; 1c5f0 <validateOnOff@@Base+0x14>
   1c5e0:	ldr	r3, [pc, #12]	; 1c5f4 <validateOnOff@@Base+0x18>
   1c5e4:	add	r2, pc, r2
   1c5e8:	add	r3, pc, r3
   1c5ec:	b	1c580 <validateFlag@@Base>
   1c5f0:	andeq	r8, r0, r4, lsl r6
   1c5f4:	andeq	r7, r0, r8, lsr sl

0001c5f8 <validateYesNo@@Base>:
   1c5f8:	ldr	r2, [pc, #12]	; 1c60c <validateYesNo@@Base+0x14>
   1c5fc:	ldr	r3, [pc, #12]	; 1c610 <validateYesNo@@Base+0x18>
   1c600:	add	r2, pc, r2
   1c604:	add	r3, pc, r3
   1c608:	b	1c580 <validateFlag@@Base>
   1c60c:	andeq	r7, r0, r8, lsl pc
   1c610:	andeq	r7, r0, r8, lsl pc

0001c614 <isFloat@@Base>:
   1c614:	ldr	r3, [pc, #112]	; 1c68c <isFloat@@Base+0x78>
   1c618:	ldr	ip, [pc, #112]	; 1c690 <isFloat@@Base+0x7c>
   1c61c:	add	r3, pc, r3
   1c620:	push	{r4, r5, lr}
   1c624:	sub	sp, sp, #12
   1c628:	ldr	r4, [r3, ip]
   1c62c:	mov	r5, r0
   1c630:	ldrb	r2, [r1]
   1c634:	ldr	r3, [r4]
   1c638:	cmp	r2, #0
   1c63c:	moveq	r0, r2
   1c640:	str	r3, [sp, #4]
   1c644:	beq	1c670 <isFloat@@Base+0x5c>
   1c648:	mov	r0, r1
   1c64c:	mov	r1, sp
   1c650:	bl	14d24 <strtod@plt>
   1c654:	ldr	r3, [sp]
   1c658:	ldrb	r3, [r3]
   1c65c:	cmp	r3, #0
   1c660:	moveq	r0, #1
   1c664:	movne	r0, #0
   1c668:	vcvteq.f32.f64	s0, d0
   1c66c:	vstreq	s0, [r5]
   1c670:	ldr	r1, [sp, #4]
   1c674:	ldr	r3, [r4]
   1c678:	cmp	r1, r3
   1c67c:	bne	1c688 <isFloat@@Base+0x74>
   1c680:	add	sp, sp, #12
   1c684:	pop	{r4, r5, pc}
   1c688:	bl	14d9c <__stack_chk_fail@plt>
   1c68c:	ldrdeq	r9, [r1], -ip
   1c690:	andeq	r0, r0, r4, lsl #5

0001c694 <validateFloat@@Base>:
   1c694:	ldr	ip, [pc, #168]	; 1c744 <validateFloat@@Base+0xb0>
   1c698:	push	{r4, r5, r6, r7, r8, lr}
   1c69c:	add	ip, pc, ip
   1c6a0:	ldr	r4, [pc, #160]	; 1c748 <validateFloat@@Base+0xb4>
   1c6a4:	sub	sp, sp, #8
   1c6a8:	ldrb	r5, [r1]
   1c6ac:	mov	r7, r0
   1c6b0:	mov	r6, r2
   1c6b4:	mov	r8, r3
   1c6b8:	ldr	r4, [ip, r4]
   1c6bc:	cmp	r5, #0
   1c6c0:	moveq	r0, #1
   1c6c4:	ldr	ip, [r4]
   1c6c8:	str	ip, [sp, #4]
   1c6cc:	bne	1c6e8 <validateFloat@@Base+0x54>
   1c6d0:	ldr	r2, [sp, #4]
   1c6d4:	ldr	r3, [r4]
   1c6d8:	cmp	r2, r3
   1c6dc:	bne	1c740 <validateFloat@@Base+0xac>
   1c6e0:	add	sp, sp, #8
   1c6e4:	pop	{r4, r5, r6, r7, r8, pc}
   1c6e8:	mov	r0, sp
   1c6ec:	bl	1c614 <isFloat@@Base>
   1c6f0:	cmp	r0, #0
   1c6f4:	beq	1c72c <validateFloat@@Base+0x98>
   1c6f8:	cmp	r6, #0
   1c6fc:	vldr	s15, [sp]
   1c700:	beq	1c714 <validateFloat@@Base+0x80>
   1c704:	vldr	s14, [r6]
   1c708:	vcmpe.f32	s14, s15
   1c70c:	vmrs	APSR_nzcv, fpscr
   1c710:	bgt	1c72c <validateFloat@@Base+0x98>
   1c714:	cmp	r8, #0
   1c718:	beq	1c734 <validateFloat@@Base+0xa0>
   1c71c:	vldr	s14, [r8]
   1c720:	vcmpe.f32	s14, s15
   1c724:	vmrs	APSR_nzcv, fpscr
   1c728:	bpl	1c734 <validateFloat@@Base+0xa0>
   1c72c:	mov	r0, #0
   1c730:	b	1c6d0 <validateFloat@@Base+0x3c>
   1c734:	vstr	s15, [r7]
   1c738:	mov	r0, #1
   1c73c:	b	1c6d0 <validateFloat@@Base+0x3c>
   1c740:	bl	14d9c <__stack_chk_fail@plt>
   1c744:	andeq	r9, r1, ip, asr r9
   1c748:	andeq	r0, r0, r4, lsl #5

0001c74c <getParameters@@Base>:
   1c74c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c750:	subs	r8, r0, #0
   1c754:	sub	sp, sp, #44	; 0x2c
   1c758:	mov	r7, r2
   1c75c:	str	r1, [sp, #8]
   1c760:	beq	1ca7c <getParameters@@Base+0x330>
   1c764:	ldr	r4, [r8]
   1c768:	cmp	r4, #0
   1c76c:	beq	1ca88 <getParameters@@Base+0x33c>
   1c770:	mov	r3, r8
   1c774:	mov	r4, #0
   1c778:	ldr	r5, [r3, #4]!
   1c77c:	add	r4, r4, #1
   1c780:	cmp	r5, #0
   1c784:	bne	1c778 <getParameters@@Base+0x2c>
   1c788:	add	r0, r4, #1
   1c78c:	lsl	r0, r0, #2
   1c790:	bl	14f04 <malloc@plt>
   1c794:	cmp	r0, #0
   1c798:	str	r0, [sp, #4]
   1c79c:	beq	1cabc <getParameters@@Base+0x370>
   1c7a0:	cmp	r4, #0
   1c7a4:	beq	1ca9c <getParameters@@Base+0x350>
   1c7a8:	sub	r6, r0, #4
   1c7ac:	b	1c7bc <getParameters@@Base+0x70>
   1c7b0:	add	r5, r5, #1
   1c7b4:	cmp	r4, r5
   1c7b8:	beq	1c7f4 <getParameters@@Base+0xa8>
   1c7bc:	mov	r0, #1
   1c7c0:	mov	r1, r0
   1c7c4:	bl	14e74 <calloc@plt>
   1c7c8:	cmp	r0, #0
   1c7cc:	str	r0, [r6, #4]!
   1c7d0:	bne	1c7b0 <getParameters@@Base+0x64>
   1c7d4:	bl	1ab94 <logMallocError@@Base>
   1c7d8:	cmp	r4, r5
   1c7dc:	beq	1c7f4 <getParameters@@Base+0xa8>
   1c7e0:	ldr	r0, [sp, #4]
   1c7e4:	bl	1bfdc <deallocateStrings@@Base>
   1c7e8:	mov	r0, #0
   1c7ec:	add	sp, sp, #44	; 0x2c
   1c7f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c7f4:	lsl	r5, r5, #2
   1c7f8:	ldr	r2, [sp, #4]
   1c7fc:	cmp	r7, #0
   1c800:	mov	r3, #0
   1c804:	str	r3, [r2, r5]
   1c808:	beq	1c818 <getParameters@@Base+0xcc>
   1c80c:	ldrb	r3, [r7]
   1c810:	cmp	r3, #0
   1c814:	bne	1c824 <getParameters@@Base+0xd8>
   1c818:	ldr	r0, [sp, #4]
   1c81c:	add	sp, sp, #44	; 0x2c
   1c820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c824:	mov	r0, r7
   1c828:	bl	14c4c <__strdup@plt>
   1c82c:	cmp	r0, #0
   1c830:	str	r0, [sp, #20]
   1c834:	beq	1cab4 <getParameters@@Base+0x368>
   1c838:	ldr	r3, [pc, #648]	; 1cac8 <getParameters@@Base+0x37c>
   1c83c:	mov	r4, r0
   1c840:	ldr	r2, [pc, #644]	; 1cacc <getParameters@@Base+0x380>
   1c844:	add	r3, pc, r3
   1c848:	str	r3, [sp, #32]
   1c84c:	add	r2, pc, r2
   1c850:	ldr	r3, [pc, #632]	; 1cad0 <getParameters@@Base+0x384>
   1c854:	str	r2, [sp, #36]	; 0x24
   1c858:	ldr	r2, [pc, #628]	; 1cad4 <getParameters@@Base+0x388>
   1c85c:	add	r3, pc, r3
   1c860:	str	r3, [sp, #24]
   1c864:	add	r2, pc, r2
   1c868:	ldr	r3, [pc, #616]	; 1cad8 <getParameters@@Base+0x38c>
   1c86c:	str	r2, [sp, #28]
   1c870:	ldr	r2, [pc, #612]	; 1cadc <getParameters@@Base+0x390>
   1c874:	add	r3, pc, r3
   1c878:	str	r3, [sp, #12]
   1c87c:	add	r2, pc, r2
   1c880:	str	r2, [sp, #16]
   1c884:	b	1c8a4 <getParameters@@Base+0x158>
   1c888:	ldr	r0, [sp, #8]
   1c88c:	bl	14f10 <strlen@plt>
   1c890:	cmp	r9, r0
   1c894:	beq	1c96c <getParameters@@Base+0x220>
   1c898:	cmp	r5, #0
   1c89c:	bne	1c960 <getParameters@@Base+0x214>
   1c8a0:	add	r4, r6, #1
   1c8a4:	mov	r0, r4
   1c8a8:	mov	r1, #44	; 0x2c
   1c8ac:	bl	15114 <strchr@plt>
   1c8b0:	rsbs	r5, r0, #1
   1c8b4:	mov	r6, r0
   1c8b8:	movcc	r5, #0
   1c8bc:	cmp	r5, #0
   1c8c0:	strbeq	r5, [r0]
   1c8c4:	ldrb	r3, [r4]
   1c8c8:	cmp	r3, #0
   1c8cc:	beq	1c898 <getParameters@@Base+0x14c>
   1c8d0:	mov	r0, r4
   1c8d4:	mov	r1, #61	; 0x3d
   1c8d8:	bl	15114 <strchr@plt>
   1c8dc:	subs	r3, r0, #0
   1c8e0:	str	r3, [sp]
   1c8e4:	beq	1ca50 <getParameters@@Base+0x304>
   1c8e8:	ldr	r3, [sp]
   1c8ec:	cmp	r4, r3
   1c8f0:	beq	1c934 <getParameters@@Base+0x1e8>
   1c8f4:	ldr	r2, [sp, #8]
   1c8f8:	ldr	r3, [sp]
   1c8fc:	cmp	r2, #0
   1c900:	rsb	r7, r4, r3
   1c904:	beq	1c988 <getParameters@@Base+0x23c>
   1c908:	mov	r0, r4
   1c90c:	mov	r1, #58	; 0x3a
   1c910:	mov	r2, r7
   1c914:	bl	15018 <memchr@plt>
   1c918:	cmp	r0, #0
   1c91c:	beq	1c988 <getParameters@@Base+0x23c>
   1c920:	subs	r9, r0, r4
   1c924:	beq	1ca28 <getParameters@@Base+0x2dc>
   1c928:	add	sl, r9, #1
   1c92c:	subs	r7, r7, sl
   1c930:	bne	1c888 <getParameters@@Base+0x13c>
   1c934:	ldr	r1, [sp, #12]
   1c938:	mov	r2, #5
   1c93c:	mov	r0, #0
   1c940:	bl	14de4 <dcgettext@plt>
   1c944:	mov	r3, r4
   1c948:	ldr	r1, [sp, #16]
   1c94c:	mov	r2, r0
   1c950:	mov	r0, #3
   1c954:	bl	1aa88 <logMessage@@Base>
   1c958:	cmp	r5, #0
   1c95c:	beq	1c8a0 <getParameters@@Base+0x154>
   1c960:	ldr	r0, [sp, #20]
   1c964:	bl	14ac0 <free@plt>
   1c968:	b	1c818 <getParameters@@Base+0xcc>
   1c96c:	mov	r0, r4
   1c970:	mov	r2, r9
   1c974:	ldr	r1, [sp, #8]
   1c978:	bl	15060 <memcmp@plt>
   1c97c:	cmp	r0, #0
   1c980:	addeq	r4, r4, sl
   1c984:	bne	1c898 <getParameters@@Base+0x14c>
   1c988:	ldr	r1, [r8]
   1c98c:	cmp	r1, #0
   1c990:	beq	1ca00 <getParameters@@Base+0x2b4>
   1c994:	add	fp, r8, #4
   1c998:	mov	sl, r8
   1c99c:	mov	r9, #0
   1c9a0:	b	1c9b8 <getParameters@@Base+0x26c>
   1c9a4:	rsb	r9, r8, fp
   1c9a8:	mov	sl, fp
   1c9ac:	ldr	r1, [fp], #4
   1c9b0:	cmp	r1, #0
   1c9b4:	beq	1ca00 <getParameters@@Base+0x2b4>
   1c9b8:	mov	r0, r4
   1c9bc:	mov	r2, r7
   1c9c0:	bl	14e08 <strncasecmp@plt>
   1c9c4:	cmp	r0, #0
   1c9c8:	bne	1c9a4 <getParameters@@Base+0x258>
   1c9cc:	ldr	r3, [sp]
   1c9d0:	add	r0, r3, #1
   1c9d4:	bl	14c4c <__strdup@plt>
   1c9d8:	subs	r7, r0, #0
   1c9dc:	beq	1caa4 <getParameters@@Base+0x358>
   1c9e0:	ldr	r2, [sp, #4]
   1c9e4:	ldr	r0, [r2, r9]
   1c9e8:	bl	14ac0 <free@plt>
   1c9ec:	ldr	r3, [sp, #4]
   1c9f0:	str	r7, [r3, r9]
   1c9f4:	ldr	r3, [sl]
   1c9f8:	cmp	r3, #0
   1c9fc:	bne	1c898 <getParameters@@Base+0x14c>
   1ca00:	ldr	r1, [sp, #32]
   1ca04:	mov	r2, #5
   1ca08:	mov	r0, #0
   1ca0c:	bl	14de4 <dcgettext@plt>
   1ca10:	mov	r3, r4
   1ca14:	ldr	r1, [sp, #36]	; 0x24
   1ca18:	mov	r2, r0
   1ca1c:	mov	r0, #3
   1ca20:	bl	1aa88 <logMessage@@Base>
   1ca24:	b	1c898 <getParameters@@Base+0x14c>
   1ca28:	ldr	r1, [sp, #24]
   1ca2c:	mov	r0, r9
   1ca30:	mov	r2, #5
   1ca34:	bl	14de4 <dcgettext@plt>
   1ca38:	mov	r3, r4
   1ca3c:	ldr	r1, [sp, #28]
   1ca40:	mov	r2, r0
   1ca44:	mov	r0, #3
   1ca48:	bl	1aa88 <logMessage@@Base>
   1ca4c:	b	1c898 <getParameters@@Base+0x14c>
   1ca50:	ldr	r1, [pc, #136]	; 1cae0 <getParameters@@Base+0x394>
   1ca54:	mov	r2, #5
   1ca58:	add	r1, pc, r1
   1ca5c:	bl	14de4 <dcgettext@plt>
   1ca60:	ldr	r1, [pc, #124]	; 1cae4 <getParameters@@Base+0x398>
   1ca64:	mov	r3, r4
   1ca68:	add	r1, pc, r1
   1ca6c:	mov	r2, r0
   1ca70:	mov	r0, #3
   1ca74:	bl	1aa88 <logMessage@@Base>
   1ca78:	b	1c898 <getParameters@@Base+0x14c>
   1ca7c:	ldr	r8, [pc, #100]	; 1cae8 <getParameters@@Base+0x39c>
   1ca80:	add	r8, pc, r8
   1ca84:	b	1c764 <getParameters@@Base+0x18>
   1ca88:	mov	r0, #4
   1ca8c:	bl	14f04 <malloc@plt>
   1ca90:	cmp	r0, #0
   1ca94:	str	r0, [sp, #4]
   1ca98:	beq	1cabc <getParameters@@Base+0x370>
   1ca9c:	mov	r5, r4
   1caa0:	b	1c7f8 <getParameters@@Base+0xac>
   1caa4:	bl	1ab94 <logMallocError@@Base>
   1caa8:	ldr	r0, [sp, #20]
   1caac:	bl	14ac0 <free@plt>
   1cab0:	b	1c7e0 <getParameters@@Base+0x94>
   1cab4:	bl	1ab94 <logMallocError@@Base>
   1cab8:	b	1c7e0 <getParameters@@Base+0x94>
   1cabc:	bl	1ab94 <logMallocError@@Base>
   1cac0:	mov	r0, #0
   1cac4:	b	1c81c <getParameters@@Base+0xd0>
   1cac8:	andeq	r7, r0, r8, lsr #26
   1cacc:	andeq	r7, r0, r0, lsl #31
   1cad0:	strdeq	r7, [r0], -r4
   1cad4:	andeq	r7, r0, r8, ror #30
   1cad8:	andeq	r7, r0, r4, asr #25
   1cadc:	andeq	r7, r0, r0, asr pc
   1cae0:	andeq	r7, r0, r8, asr #21
   1cae4:	andeq	r7, r0, r4, ror #26
   1cae8:	muleq	r0, r4, sl

0001caec <logParameters@@Base>:
   1caec:	cmp	r0, #0
   1caf0:	cmpne	r1, #0
   1caf4:	push	{r4, r5, r6, r7, lr}
   1caf8:	mov	r4, r1
   1cafc:	sub	sp, sp, #12
   1cb00:	mov	r6, r2
   1cb04:	beq	1cb44 <logParameters@@Base+0x58>
   1cb08:	ldr	r3, [r0]
   1cb0c:	cmp	r3, #0
   1cb10:	beq	1cb44 <logParameters@@Base+0x58>
   1cb14:	ldr	r7, [pc, #48]	; 1cb4c <logParameters@@Base+0x60>
   1cb18:	mov	r5, r0
   1cb1c:	add	r7, pc, r7
   1cb20:	ldr	ip, [r4], #4
   1cb24:	mov	r0, #6
   1cb28:	mov	r1, r7
   1cb2c:	mov	r2, r6
   1cb30:	str	ip, [sp]
   1cb34:	bl	1aa88 <logMessage@@Base>
   1cb38:	ldr	r3, [r5, #4]!
   1cb3c:	cmp	r3, #0
   1cb40:	bne	1cb20 <logParameters@@Base+0x34>
   1cb44:	add	sp, sp, #12
   1cb48:	pop	{r4, r5, r6, r7, pc}
   1cb4c:	andeq	r7, r0, r8, ror #20

0001cb50 <getCurrentTime@@Base>:
   1cb50:	ldr	r3, [pc, #84]	; 1cbac <getCurrentTime@@Base+0x5c>
   1cb54:	ldr	r2, [pc, #84]	; 1cbb0 <getCurrentTime@@Base+0x60>
   1cb58:	add	r3, pc, r3
   1cb5c:	push	{r4, r5, lr}
   1cb60:	sub	sp, sp, #20
   1cb64:	ldr	r4, [r3, r2]
   1cb68:	mov	r5, r0
   1cb6c:	add	r1, sp, #4
   1cb70:	mov	r0, #0
   1cb74:	ldr	r3, [r4]
   1cb78:	str	r3, [sp, #12]
   1cb7c:	bl	14d00 <clock_gettime@plt>
   1cb80:	ldr	r3, [sp, #4]
   1cb84:	ldr	r2, [sp, #12]
   1cb88:	ldr	r1, [sp, #8]
   1cb8c:	str	r3, [r5]
   1cb90:	ldr	r3, [r4]
   1cb94:	str	r1, [r5, #4]
   1cb98:	cmp	r2, r3
   1cb9c:	bne	1cba8 <getCurrentTime@@Base+0x58>
   1cba0:	add	sp, sp, #20
   1cba4:	pop	{r4, r5, pc}
   1cba8:	bl	14d9c <__stack_chk_fail@plt>
   1cbac:	andeq	r9, r1, r0, lsr #9
   1cbb0:	andeq	r0, r0, r4, lsl #5

0001cbb4 <makeTimeValue@@Base>:
   1cbb4:	ldr	r2, [pc, #164]	; 1cc60 <makeTimeValue@@Base+0xac>
   1cbb8:	mov	r3, #0
   1cbbc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1cbc0:	add	r2, pc, r2
   1cbc4:	ldr	r4, [pc, #152]	; 1cc64 <makeTimeValue@@Base+0xb0>
   1cbc8:	mov	r5, r0
   1cbcc:	ldr	lr, [r1, #8]
   1cbd0:	sub	sp, sp, #52	; 0x34
   1cbd4:	mvn	ip, #0
   1cbd8:	ldr	r4, [r2, r4]
   1cbdc:	mov	r0, sp
   1cbe0:	str	lr, [r5, #4]
   1cbe4:	ldrh	r9, [r1]
   1cbe8:	ldrb	r8, [r1, #6]
   1cbec:	ldrb	r7, [r1, #5]
   1cbf0:	sub	r9, r9, #1888	; 0x760
   1cbf4:	ldrb	r6, [r1, #4]
   1cbf8:	sub	r9, r9, #12
   1cbfc:	ldrb	lr, [r1, #2]
   1cc00:	ldr	r2, [r4]
   1cc04:	ldrb	r1, [r1, #3]
   1cc08:	str	r3, [sp, #24]
   1cc0c:	add	r1, r1, #1
   1cc10:	str	r2, [sp, #44]	; 0x2c
   1cc14:	str	r3, [sp, #28]
   1cc18:	str	r3, [sp, #36]	; 0x24
   1cc1c:	str	r3, [sp, #40]	; 0x28
   1cc20:	str	r9, [sp, #20]
   1cc24:	str	r8, [sp]
   1cc28:	str	r1, [sp, #12]
   1cc2c:	str	r7, [sp, #4]
   1cc30:	str	r6, [sp, #8]
   1cc34:	str	lr, [sp, #16]
   1cc38:	str	ip, [sp, #32]
   1cc3c:	bl	1509c <mktime@plt>
   1cc40:	ldr	r3, [sp, #44]	; 0x2c
   1cc44:	str	r0, [r5]
   1cc48:	ldr	r2, [r4]
   1cc4c:	cmp	r3, r2
   1cc50:	bne	1cc5c <makeTimeValue@@Base+0xa8>
   1cc54:	add	sp, sp, #52	; 0x34
   1cc58:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1cc5c:	bl	14d9c <__stack_chk_fail@plt>
   1cc60:	andeq	r9, r1, r8, lsr r4
   1cc64:	andeq	r0, r0, r4, lsl #5

0001cc68 <expandTimeValue@@Base>:
   1cc68:	ldr	r2, [pc, #148]	; 1cd04 <expandTimeValue@@Base+0x9c>
   1cc6c:	ldr	ip, [pc, #148]	; 1cd08 <expandTimeValue@@Base+0xa0>
   1cc70:	add	r2, pc, r2
   1cc74:	push	{r4, r5, r6, lr}
   1cc78:	mov	r6, r0
   1cc7c:	sub	sp, sp, #56	; 0x38
   1cc80:	ldr	r5, [r2, ip]
   1cc84:	ldr	r3, [r6]
   1cc88:	add	r0, sp, #56	; 0x38
   1cc8c:	mov	r4, r1
   1cc90:	add	r1, sp, #8
   1cc94:	str	r3, [r0, #-52]!	; 0xffffffcc
   1cc98:	ldr	r3, [r5]
   1cc9c:	str	r3, [sp, #52]	; 0x34
   1cca0:	bl	14a24 <localtime_r@plt>
   1cca4:	ldr	r1, [sp, #24]
   1cca8:	ldr	r3, [sp, #28]
   1ccac:	ldr	r2, [sp, #20]
   1ccb0:	add	r3, r3, #1888	; 0x760
   1ccb4:	ldr	r0, [r6, #4]
   1ccb8:	add	r3, r3, #12
   1ccbc:	strb	r1, [r4, #2]
   1ccc0:	sub	r2, r2, #1
   1ccc4:	ldr	ip, [sp, #52]	; 0x34
   1ccc8:	strb	r2, [r4, #3]
   1cccc:	strh	r3, [r4]
   1ccd0:	ldr	r3, [r5]
   1ccd4:	ldr	r1, [sp, #16]
   1ccd8:	ldr	r2, [sp, #12]
   1ccdc:	cmp	ip, r3
   1cce0:	ldr	r3, [sp, #8]
   1cce4:	str	r0, [r4, #8]
   1cce8:	strb	r1, [r4, #4]
   1ccec:	strb	r2, [r4, #5]
   1ccf0:	strb	r3, [r4, #6]
   1ccf4:	bne	1cd00 <expandTimeValue@@Base+0x98>
   1ccf8:	add	sp, sp, #56	; 0x38
   1ccfc:	pop	{r4, r5, r6, pc}
   1cd00:	bl	14d9c <__stack_chk_fail@plt>
   1cd04:	andeq	r9, r1, r8, lsl #7
   1cd08:	andeq	r0, r0, r4, lsl #5

0001cd0c <formatSeconds@@Base>:
   1cd0c:	push	{r4, r5, r6, r7, r8, lr}
   1cd10:	sub	sp, sp, #56	; 0x38
   1cd14:	ldr	lr, [pc, #100]	; 1cd80 <formatSeconds@@Base+0x74>
   1cd18:	add	ip, sp, #56	; 0x38
   1cd1c:	ldr	r4, [pc, #96]	; 1cd84 <formatSeconds@@Base+0x78>
   1cd20:	add	r5, sp, #8
   1cd24:	add	lr, pc, lr
   1cd28:	mov	r7, r0
   1cd2c:	mov	r6, r1
   1cd30:	mov	r8, r2
   1cd34:	ldr	r4, [lr, r4]
   1cd38:	mov	r1, r5
   1cd3c:	str	r3, [ip, #-52]!	; 0xffffffcc
   1cd40:	mov	r0, ip
   1cd44:	ldr	r3, [r4]
   1cd48:	str	r3, [sp, #52]	; 0x34
   1cd4c:	bl	14a24 <localtime_r@plt>
   1cd50:	mov	r2, r8
   1cd54:	mov	r3, r5
   1cd58:	mov	r0, r7
   1cd5c:	mov	r1, r6
   1cd60:	bl	14bec <strftime@plt>
   1cd64:	ldr	r2, [sp, #52]	; 0x34
   1cd68:	ldr	r3, [r4]
   1cd6c:	cmp	r2, r3
   1cd70:	bne	1cd7c <formatSeconds@@Base+0x70>
   1cd74:	add	sp, sp, #56	; 0x38
   1cd78:	pop	{r4, r5, r6, r7, r8, pc}
   1cd7c:	bl	14d9c <__stack_chk_fail@plt>
   1cd80:	ldrdeq	r9, [r1], -r4
   1cd84:	andeq	r0, r0, r4, lsl #5

0001cd88 <normalizeTimeValue@@Base>:
   1cd88:	ldr	r3, [r0, #4]
   1cd8c:	cmp	r3, #0
   1cd90:	bge	1cdbc <normalizeTimeValue@@Base+0x34>
   1cd94:	ldr	r2, [r0]
   1cd98:	sub	r2, r2, #1
   1cd9c:	add	r3, r3, #998244352	; 0x3b800000
   1cda0:	mov	r1, r2
   1cda4:	add	r3, r3, #1753088	; 0x1ac000
   1cda8:	sub	r2, r2, #1
   1cdac:	add	r3, r3, #2560	; 0xa00
   1cdb0:	cmp	r3, #0
   1cdb4:	blt	1cd9c <normalizeTimeValue@@Base+0x14>
   1cdb8:	stm	r0, {r1, r3}
   1cdbc:	movw	r1, #51711	; 0xc9ff
   1cdc0:	movt	r1, #15258	; 0x3b9a
   1cdc4:	cmp	r3, r1
   1cdc8:	bxle	lr
   1cdcc:	mov	r2, #13824	; 0x3600
   1cdd0:	movt	r2, #50277	; 0xc465
   1cdd4:	add	r2, r3, r2
   1cdd8:	ldr	ip, [r0]
   1cddc:	cmp	r2, r1
   1cde0:	add	r1, ip, #1
   1cde4:	addgt	ip, ip, #2
   1cde8:	movgt	r2, #27648	; 0x6c00
   1cdec:	movtgt	r2, #35018	; 0x88ca
   1cdf0:	addgt	r2, r3, r2
   1cdf4:	movle	ip, r1
   1cdf8:	str	r2, [r0, #4]
   1cdfc:	str	ip, [r0]
   1ce00:	bx	lr

0001ce04 <adjustTimeValue@@Base>:
   1ce04:	movw	r3, #19923	; 0x4dd3
   1ce08:	movt	r3, #4194	; 0x1062
   1ce0c:	ldr	ip, [pc, #148]	; 1cea8 <adjustTimeValue@@Base+0xa4>
   1ce10:	smull	r2, r3, r3, r1
   1ce14:	add	ip, pc, ip
   1ce18:	push	{r4, r5, r6, lr}
   1ce1c:	asr	r6, r1, #31
   1ce20:	ldr	r5, [pc, #132]	; 1ceac <adjustTimeValue@@Base+0xa8>
   1ce24:	sub	sp, sp, #16
   1ce28:	mov	lr, #1000	; 0x3e8
   1ce2c:	movw	r2, #16960	; 0x4240
   1ce30:	rsb	r3, r6, r3, asr #6
   1ce34:	movt	r2, #15
   1ce38:	ldr	r5, [ip, r5]
   1ce3c:	mov	r4, r0
   1ce40:	str	r3, [sp, #4]
   1ce44:	mls	r3, lr, r3, r1
   1ce48:	ldr	r1, [r5]
   1ce4c:	str	r1, [sp, #12]
   1ce50:	mul	r2, r2, r3
   1ce54:	str	r2, [sp, #8]
   1ce58:	bl	1cd88 <normalizeTimeValue@@Base>
   1ce5c:	add	r0, sp, #4
   1ce60:	bl	1cd88 <normalizeTimeValue@@Base>
   1ce64:	ldr	r2, [r4, #4]
   1ce68:	ldr	ip, [r4]
   1ce6c:	mov	r0, r4
   1ce70:	ldr	r1, [sp, #4]
   1ce74:	ldr	r3, [sp, #8]
   1ce78:	add	r1, ip, r1
   1ce7c:	str	r1, [r4]
   1ce80:	add	r3, r2, r3
   1ce84:	str	r3, [r4, #4]
   1ce88:	bl	1cd88 <normalizeTimeValue@@Base>
   1ce8c:	ldr	r2, [sp, #12]
   1ce90:	ldr	r3, [r5]
   1ce94:	cmp	r2, r3
   1ce98:	bne	1cea4 <adjustTimeValue@@Base+0xa0>
   1ce9c:	add	sp, sp, #16
   1cea0:	pop	{r4, r5, r6, pc}
   1cea4:	bl	14d9c <__stack_chk_fail@plt>
   1cea8:	andeq	r9, r1, r4, ror #3
   1ceac:	andeq	r0, r0, r4, lsl #5

0001ceb0 <compareTimeValues@@Base>:
   1ceb0:	ldr	r2, [r0]
   1ceb4:	ldr	r3, [r1]
   1ceb8:	cmp	r2, r3
   1cebc:	blt	1cee8 <compareTimeValues@@Base+0x38>
   1cec0:	bgt	1cee0 <compareTimeValues@@Base+0x30>
   1cec4:	ldr	r2, [r0, #4]
   1cec8:	ldr	r3, [r1, #4]
   1cecc:	cmp	r2, r3
   1ced0:	blt	1cee8 <compareTimeValues@@Base+0x38>
   1ced4:	movle	r0, #0
   1ced8:	movgt	r0, #1
   1cedc:	bx	lr
   1cee0:	mov	r0, #1
   1cee4:	bx	lr
   1cee8:	mvn	r0, #0
   1ceec:	bx	lr

0001cef0 <millisecondsBetween@@Base>:
   1cef0:	ldr	r2, [pc, #124]	; 1cf74 <millisecondsBetween@@Base+0x84>
   1cef4:	mov	r3, r0
   1cef8:	ldr	ip, [pc, #120]	; 1cf78 <millisecondsBetween@@Base+0x88>
   1cefc:	add	r2, pc, r2
   1cf00:	push	{r4, r5, lr}
   1cf04:	sub	sp, sp, #20
   1cf08:	ldr	r4, [r2, ip]
   1cf0c:	add	r0, sp, #4
   1cf10:	ldr	r5, [r1]
   1cf14:	ldr	lr, [r1, #4]
   1cf18:	ldm	r3, {r1, r2}
   1cf1c:	ldr	r3, [r4]
   1cf20:	rsb	r1, r1, r5
   1cf24:	rsb	r2, r2, lr
   1cf28:	stmib	sp, {r1, r2}
   1cf2c:	str	r3, [sp, #12]
   1cf30:	bl	1cd88 <normalizeTimeValue@@Base>
   1cf34:	ldr	r3, [sp, #8]
   1cf38:	movw	r2, #56963	; 0xde83
   1cf3c:	movt	r2, #17179	; 0x431b
   1cf40:	ldr	r5, [sp, #12]
   1cf44:	ldr	ip, [r4]
   1cf48:	mov	r0, #1000	; 0x3e8
   1cf4c:	smull	r1, r2, r2, r3
   1cf50:	asr	r3, r3, #31
   1cf54:	ldr	r1, [sp, #4]
   1cf58:	cmp	r5, ip
   1cf5c:	rsb	r3, r3, r2, asr #18
   1cf60:	mla	r0, r0, r1, r3
   1cf64:	bne	1cf70 <millisecondsBetween@@Base+0x80>
   1cf68:	add	sp, sp, #20
   1cf6c:	pop	{r4, r5, pc}
   1cf70:	bl	14d9c <__stack_chk_fail@plt>
   1cf74:	strdeq	r9, [r1], -ip
   1cf78:	andeq	r0, r0, r4, lsl #5

0001cf7c <getMonotonicTime@@Base>:
   1cf7c:	ldr	r3, [pc, #84]	; 1cfd8 <getMonotonicTime@@Base+0x5c>
   1cf80:	ldr	r2, [pc, #84]	; 1cfdc <getMonotonicTime@@Base+0x60>
   1cf84:	add	r3, pc, r3
   1cf88:	push	{r4, r5, lr}
   1cf8c:	sub	sp, sp, #20
   1cf90:	ldr	r4, [r3, r2]
   1cf94:	mov	r5, r0
   1cf98:	add	r1, sp, #4
   1cf9c:	mov	r0, #1
   1cfa0:	ldr	r3, [r4]
   1cfa4:	str	r3, [sp, #12]
   1cfa8:	bl	14d00 <clock_gettime@plt>
   1cfac:	ldr	r3, [sp, #4]
   1cfb0:	ldr	r2, [sp, #12]
   1cfb4:	ldr	r1, [sp, #8]
   1cfb8:	str	r3, [r5]
   1cfbc:	ldr	r3, [r4]
   1cfc0:	str	r1, [r5, #4]
   1cfc4:	cmp	r2, r3
   1cfc8:	bne	1cfd4 <getMonotonicTime@@Base+0x58>
   1cfcc:	add	sp, sp, #20
   1cfd0:	pop	{r4, r5, pc}
   1cfd4:	bl	14d9c <__stack_chk_fail@plt>
   1cfd8:	andeq	r9, r1, r4, ror r0
   1cfdc:	andeq	r0, r0, r4, lsl #5

0001cfe0 <getMonotonicElapsed@@Base>:
   1cfe0:	ldr	r3, [pc, #80]	; 1d038 <getMonotonicElapsed@@Base+0x58>
   1cfe4:	ldr	r2, [pc, #80]	; 1d03c <getMonotonicElapsed@@Base+0x5c>
   1cfe8:	add	r3, pc, r3
   1cfec:	push	{r4, r5, r6, lr}
   1cff0:	sub	sp, sp, #16
   1cff4:	ldr	r4, [r3, r2]
   1cff8:	add	r5, sp, #4
   1cffc:	mov	r6, r0
   1d000:	mov	r0, r5
   1d004:	ldr	r3, [r4]
   1d008:	str	r3, [sp, #12]
   1d00c:	bl	1cf7c <getMonotonicTime@@Base>
   1d010:	mov	r0, r6
   1d014:	mov	r1, r5
   1d018:	bl	1cef0 <millisecondsBetween@@Base>
   1d01c:	ldr	r2, [sp, #12]
   1d020:	ldr	r3, [r4]
   1d024:	cmp	r2, r3
   1d028:	bne	1d034 <getMonotonicElapsed@@Base+0x54>
   1d02c:	add	sp, sp, #16
   1d030:	pop	{r4, r5, r6, pc}
   1d034:	bl	14d9c <__stack_chk_fail@plt>
   1d038:	andeq	r9, r1, r0, lsl r0
   1d03c:	andeq	r0, r0, r4, lsl #5

0001d040 <restartTimePeriod@@Base>:
   1d040:	b	1cf7c <getMonotonicTime@@Base>

0001d044 <startTimePeriod@@Base>:
   1d044:	str	r1, [r0, #8]
   1d048:	b	1d040 <restartTimePeriod@@Base>

0001d04c <afterTimePeriod@@Base>:
   1d04c:	push	{r3, r4, r5, lr}
   1d050:	mov	r4, r1
   1d054:	mov	r5, r0
   1d058:	bl	1cfe0 <getMonotonicElapsed@@Base>
   1d05c:	cmp	r4, #0
   1d060:	strne	r0, [r4]
   1d064:	ldr	r3, [r5, #8]
   1d068:	cmp	r0, r3
   1d06c:	movlt	r0, #0
   1d070:	movge	r0, #1
   1d074:	pop	{r3, r4, r5, pc}

0001d078 <approximateDelay@@Base>:
   1d078:	ldr	r3, [pc, #160]	; 1d120 <approximateDelay@@Base+0xa8>
   1d07c:	subs	r2, r0, #0
   1d080:	ldr	r1, [pc, #156]	; 1d124 <approximateDelay@@Base+0xac>
   1d084:	add	r3, pc, r3
   1d088:	push	{r4, r5, lr}
   1d08c:	sub	sp, sp, #20
   1d090:	ldr	r4, [r3, r1]
   1d094:	ldr	r3, [r4]
   1d098:	str	r3, [sp, #12]
   1d09c:	ble	1d0e4 <approximateDelay@@Base+0x6c>
   1d0a0:	movw	r1, #19923	; 0x4dd3
   1d0a4:	movt	r1, #4194	; 0x1062
   1d0a8:	asr	r5, r2, #31
   1d0ac:	mov	lr, #1000	; 0x3e8
   1d0b0:	smull	r3, ip, r1, r2
   1d0b4:	movw	r3, #16960	; 0x4240
   1d0b8:	movt	r3, #15
   1d0bc:	add	r0, sp, #4
   1d0c0:	mov	r1, #0
   1d0c4:	rsb	ip, r5, ip, asr #6
   1d0c8:	str	ip, [sp, #4]
   1d0cc:	mls	r2, lr, ip, r2
   1d0d0:	mul	r3, r3, r2
   1d0d4:	str	r3, [sp, #8]
   1d0d8:	bl	14be0 <nanosleep@plt>
   1d0dc:	cmn	r0, #1
   1d0e0:	beq	1d0fc <approximateDelay@@Base+0x84>
   1d0e4:	ldr	r2, [sp, #12]
   1d0e8:	ldr	r3, [r4]
   1d0ec:	cmp	r2, r3
   1d0f0:	bne	1d11c <approximateDelay@@Base+0xa4>
   1d0f4:	add	sp, sp, #20
   1d0f8:	pop	{r4, r5, pc}
   1d0fc:	bl	15000 <__errno_location@plt>
   1d100:	ldr	r3, [r0]
   1d104:	cmp	r3, #4
   1d108:	beq	1d0e4 <approximateDelay@@Base+0x6c>
   1d10c:	ldr	r0, [pc, #20]	; 1d128 <approximateDelay@@Base+0xb0>
   1d110:	add	r0, pc, r0
   1d114:	bl	1ab50 <logSystemError@@Base>
   1d118:	b	1d0e4 <approximateDelay@@Base+0x6c>
   1d11c:	bl	14d9c <__stack_chk_fail@plt>
   1d120:	andeq	r8, r1, r4, ror pc
   1d124:	andeq	r0, r0, r4, lsl #5
   1d128:	andeq	r7, r0, r0, lsl #9

0001d12c <accurateDelay@@Base>:
   1d12c:	ldr	r3, [pc, #184]	; 1d1ec <accurateDelay@@Base+0xc0>
   1d130:	ldr	r2, [pc, #184]	; 1d1f0 <accurateDelay@@Base+0xc4>
   1d134:	push	{r4, r5, r6, r7, lr}
   1d138:	add	r3, pc, r3
   1d13c:	ldr	r4, [pc, #176]	; 1d1f4 <accurateDelay@@Base+0xc8>
   1d140:	sub	sp, sp, #20
   1d144:	ldr	r6, [r3, r2]
   1d148:	mov	r5, r0
   1d14c:	add	r4, pc, r4
   1d150:	ldr	r1, [r4]
   1d154:	ldr	r3, [r6]
   1d158:	cmp	r1, #0
   1d15c:	str	r3, [sp, #12]
   1d160:	movne	r7, r1
   1d164:	bne	1d190 <accurateDelay@@Base+0x64>
   1d168:	mov	r0, #2
   1d16c:	bl	14e68 <sysconf@plt>
   1d170:	mov	r1, r0
   1d174:	mov	r0, #1000	; 0x3e8
   1d178:	bl	23324 <processLibLouisStream@@Base+0x21c>
   1d17c:	cmp	r0, #0
   1d180:	strne	r0, [r4]
   1d184:	movne	r7, r0
   1d188:	moveq	r7, #1
   1d18c:	streq	r7, [r4]
   1d190:	mov	r1, r5
   1d194:	mov	r0, sp
   1d198:	bl	1d044 <startTimePeriod@@Base>
   1d19c:	cmp	r7, r5
   1d1a0:	ble	1d1d0 <accurateDelay@@Base+0xa4>
   1d1a4:	mov	r0, sp
   1d1a8:	mov	r1, #0
   1d1ac:	bl	1d04c <afterTimePeriod@@Base>
   1d1b0:	cmp	r0, #0
   1d1b4:	beq	1d1a4 <accurateDelay@@Base+0x78>
   1d1b8:	ldr	r2, [sp, #12]
   1d1bc:	ldr	r3, [r6]
   1d1c0:	cmp	r2, r3
   1d1c4:	bne	1d1e8 <accurateDelay@@Base+0xbc>
   1d1c8:	add	sp, sp, #20
   1d1cc:	pop	{r4, r5, r6, r7, pc}
   1d1d0:	mov	r0, r5
   1d1d4:	mov	r1, r7
   1d1d8:	bl	23324 <processLibLouisStream@@Base+0x21c>
   1d1dc:	mul	r0, r0, r7
   1d1e0:	bl	1d078 <approximateDelay@@Base>
   1d1e4:	b	1d1a4 <accurateDelay@@Base+0x78>
   1d1e8:	bl	14d9c <__stack_chk_fail@plt>
   1d1ec:	andeq	r8, r1, r0, asr #29
   1d1f0:	andeq	r0, r0, r4, lsl #5
   1d1f4:	andeq	r9, r1, r0, lsr r2
   1d1f8:	ldr	r3, [pc, #236]	; 1d2ec <accurateDelay@@Base+0x1c0>
   1d1fc:	ldr	ip, [pc, #236]	; 1d2f0 <accurateDelay@@Base+0x1c4>
   1d200:	add	r3, pc, r3
   1d204:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d208:	sub	sp, sp, #16
   1d20c:	ldr	r5, [r3, ip]
   1d210:	add	sl, sp, #4
   1d214:	mov	r9, r0
   1d218:	mov	r6, r1
   1d21c:	mov	r8, r2
   1d220:	mov	r7, #0
   1d224:	ldr	r3, [r5]
   1d228:	str	r3, [sp, #12]
   1d22c:	cmp	r8, #0
   1d230:	mov	r1, #1
   1d234:	mov	r0, sl
   1d238:	mov	r2, r6
   1d23c:	moveq	r3, r1
   1d240:	movne	r3, #4
   1d244:	str	r7, [sp, #8]
   1d248:	str	r9, [sp, #4]
   1d24c:	strh	r3, [sp, #8]
   1d250:	bl	14cb8 <poll@plt>
   1d254:	cmn	r0, #1
   1d258:	mov	r4, r0
   1d25c:	bne	1d29c <accurateDelay@@Base+0x170>
   1d260:	bl	15000 <__errno_location@plt>
   1d264:	ldr	r3, [r0]
   1d268:	cmp	r3, #4
   1d26c:	beq	1d22c <accurateDelay@@Base+0x100>
   1d270:	ldr	r0, [pc, #124]	; 1d2f4 <accurateDelay@@Base+0x1c8>
   1d274:	mov	r4, #0
   1d278:	add	r0, pc, r0
   1d27c:	bl	1ab50 <logSystemError@@Base>
   1d280:	ldr	r2, [sp, #12]
   1d284:	mov	r0, r4
   1d288:	ldr	r3, [r5]
   1d28c:	cmp	r2, r3
   1d290:	bne	1d2e8 <accurateDelay@@Base+0x1bc>
   1d294:	add	sp, sp, #16
   1d298:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d29c:	cmp	r0, #0
   1d2a0:	movne	r4, #1
   1d2a4:	bne	1d280 <accurateDelay@@Base+0x154>
   1d2a8:	cmp	r6, #0
   1d2ac:	ble	1d2d8 <accurateDelay@@Base+0x1ac>
   1d2b0:	ldr	r3, [pc, #64]	; 1d2f8 <accurateDelay@@Base+0x1cc>
   1d2b4:	cmp	r6, #1
   1d2b8:	add	r3, pc, r3
   1d2bc:	ldrne	r3, [pc, #56]	; 1d2fc <accurateDelay@@Base+0x1d0>
   1d2c0:	addne	r3, pc, r3
   1d2c4:	ldr	r1, [pc, #52]	; 1d300 <accurateDelay@@Base+0x1d4>
   1d2c8:	mov	r2, r6
   1d2cc:	mov	r0, #7
   1d2d0:	add	r1, pc, r1
   1d2d4:	bl	1aa88 <logMessage@@Base>
   1d2d8:	bl	15000 <__errno_location@plt>
   1d2dc:	mov	r3, #11
   1d2e0:	str	r3, [r0]
   1d2e4:	b	1d280 <accurateDelay@@Base+0x154>
   1d2e8:	bl	14d9c <__stack_chk_fail@plt>
   1d2ec:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1d2f0:	andeq	r0, r0, r4, lsl #5
   1d2f4:	andeq	r7, r0, r0, asr #6
   1d2f8:	andeq	r7, r0, r4, ror #5
   1d2fc:	andeq	r7, r0, r8, ror #5
   1d300:	strdeq	r7, [r0], -r0

0001d304 <awaitInput@@Base>:
   1d304:	mov	r2, #0
   1d308:	b	1d1f8 <accurateDelay@@Base+0xcc>

0001d30c <readChunk@@Base>:
   1d30c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d310:	subs	r4, r3, #0
   1d314:	mov	r6, r0
   1d318:	mov	r7, r1
   1d31c:	mov	r5, r2
   1d320:	ldr	r9, [sp, #32]
   1d324:	ldr	r8, [sp, #36]	; 0x24
   1d328:	bne	1d348 <readChunk@@Base+0x3c>
   1d32c:	b	1d3e0 <readChunk@@Base+0xd4>
   1d330:	ldr	r3, [r5]
   1d334:	rsb	r4, r0, r4
   1d338:	add	r0, r3, r0
   1d33c:	str	r0, [r5]
   1d340:	cmp	r4, #0
   1d344:	beq	1d3e0 <readChunk@@Base+0xd4>
   1d348:	ldr	r1, [r5]
   1d34c:	mov	r0, r6
   1d350:	mov	r2, r4
   1d354:	add	r1, r7, r1
   1d358:	bl	14c94 <read@plt>
   1d35c:	cmn	r0, #1
   1d360:	beq	1d3b4 <readChunk@@Base+0xa8>
   1d364:	cmp	r0, #0
   1d368:	bne	1d330 <readChunk@@Base+0x24>
   1d36c:	ldr	sl, [r5]
   1d370:	mov	r0, r6
   1d374:	cmp	sl, #0
   1d378:	moveq	sl, r9
   1d37c:	movne	sl, r8
   1d380:	cmp	sl, #0
   1d384:	mov	r1, sl
   1d388:	beq	1d3ec <readChunk@@Base+0xe0>
   1d38c:	bl	1d304 <awaitInput@@Base>
   1d390:	subs	sl, r0, #0
   1d394:	bne	1d340 <readChunk@@Base+0x34>
   1d398:	ldr	r1, [pc, #92]	; 1d3fc <readChunk@@Base+0xf0>
   1d39c:	mov	r0, #4
   1d3a0:	ldr	r2, [r5]
   1d3a4:	add	r1, pc, r1
   1d3a8:	bl	1aa88 <logMessage@@Base>
   1d3ac:	mov	r0, sl
   1d3b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d3b4:	bl	15000 <__errno_location@plt>
   1d3b8:	ldr	r3, [r0]
   1d3bc:	cmp	r3, #4
   1d3c0:	beq	1d340 <readChunk@@Base+0x34>
   1d3c4:	cmp	r3, #11
   1d3c8:	beq	1d36c <readChunk@@Base+0x60>
   1d3cc:	ldr	r0, [pc, #44]	; 1d400 <readChunk@@Base+0xf4>
   1d3d0:	mov	sl, #0
   1d3d4:	add	r0, pc, r0
   1d3d8:	bl	1ab50 <logSystemError@@Base>
   1d3dc:	b	1d3ac <readChunk@@Base+0xa0>
   1d3e0:	mov	sl, #1
   1d3e4:	mov	r0, sl
   1d3e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d3ec:	bl	15000 <__errno_location@plt>
   1d3f0:	mov	r3, #11
   1d3f4:	str	r3, [r0]
   1d3f8:	b	1d3ac <readChunk@@Base+0xa0>
   1d3fc:	andeq	r7, r0, r0, lsr r2
   1d400:	andeq	r6, r0, r0, asr #23

0001d404 <readData@@Base>:
   1d404:	push	{r4, r5, r6, lr}
   1d408:	sub	sp, sp, #16
   1d40c:	ldr	lr, [pc, #116]	; 1d488 <readData@@Base+0x84>
   1d410:	add	ip, sp, #16
   1d414:	ldr	r4, [pc, #112]	; 1d48c <readData@@Base+0x88>
   1d418:	mov	r5, r2
   1d41c:	add	lr, pc, lr
   1d420:	ldr	r6, [sp, #32]
   1d424:	mov	r2, #0
   1d428:	ldr	r4, [lr, r4]
   1d42c:	str	r3, [sp]
   1d430:	mov	r3, r5
   1d434:	str	r2, [ip, #-8]!
   1d438:	mov	r2, ip
   1d43c:	ldr	ip, [r4]
   1d440:	str	r6, [sp, #4]
   1d444:	str	ip, [sp, #12]
   1d448:	bl	1d30c <readChunk@@Base>
   1d44c:	cmp	r0, #0
   1d450:	movne	r0, r5
   1d454:	bne	1d46c <readData@@Base+0x68>
   1d458:	bl	15000 <__errno_location@plt>
   1d45c:	ldr	r3, [r0]
   1d460:	cmp	r3, #11
   1d464:	ldreq	r0, [sp, #8]
   1d468:	mvnne	r0, #0
   1d46c:	ldr	r2, [sp, #12]
   1d470:	ldr	r3, [r4]
   1d474:	cmp	r2, r3
   1d478:	bne	1d484 <readData@@Base+0x80>
   1d47c:	add	sp, sp, #16
   1d480:	pop	{r4, r5, r6, pc}
   1d484:	bl	14d9c <__stack_chk_fail@plt>
   1d488:	ldrdeq	r8, [r1], -ip
   1d48c:	andeq	r0, r0, r4, lsl #5

0001d490 <awaitOutput@@Base>:
   1d490:	mov	r2, #1
   1d494:	b	1d1f8 <accurateDelay@@Base+0xcc>

0001d498 <writeData@@Base>:
   1d498:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1d49c:	subs	r6, r2, #0
   1d4a0:	mov	r4, r0
   1d4a4:	mov	r9, r1
   1d4a8:	beq	1d560 <writeData@@Base+0xc8>
   1d4ac:	mov	r7, r1
   1d4b0:	mov	r8, #11
   1d4b4:	mov	r0, r4
   1d4b8:	mov	r1, r7
   1d4bc:	mov	r2, r6
   1d4c0:	bl	14f58 <write@plt>
   1d4c4:	cmn	r0, #1
   1d4c8:	mov	r5, r0
   1d4cc:	beq	1d52c <writeData@@Base+0x94>
   1d4d0:	cmp	r0, #0
   1d4d4:	bne	1d518 <writeData@@Base+0x80>
   1d4d8:	bl	15000 <__errno_location@plt>
   1d4dc:	str	r8, [r0]
   1d4e0:	b	1d4f4 <writeData@@Base+0x5c>
   1d4e4:	bl	15000 <__errno_location@plt>
   1d4e8:	ldr	r3, [r0]
   1d4ec:	cmp	r3, #11
   1d4f0:	bne	1d558 <writeData@@Base+0xc0>
   1d4f4:	mov	r0, r4
   1d4f8:	movw	r1, #15000	; 0x3a98
   1d4fc:	bl	1d490 <awaitOutput@@Base>
   1d500:	cmp	r0, #0
   1d504:	beq	1d4e4 <writeData@@Base+0x4c>
   1d508:	cmp	r6, #0
   1d50c:	bne	1d4b4 <writeData@@Base+0x1c>
   1d510:	rsb	r0, r9, r7
   1d514:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d518:	rsb	r6, r0, r6
   1d51c:	add	r7, r7, r0
   1d520:	cmp	r6, #0
   1d524:	bne	1d4b4 <writeData@@Base+0x1c>
   1d528:	b	1d510 <writeData@@Base+0x78>
   1d52c:	bl	15000 <__errno_location@plt>
   1d530:	ldr	r3, [r0]
   1d534:	cmp	r3, #4
   1d538:	beq	1d508 <writeData@@Base+0x70>
   1d53c:	cmp	r3, #11
   1d540:	beq	1d4f4 <writeData@@Base+0x5c>
   1d544:	ldr	r0, [pc, #28]	; 1d568 <writeData@@Base+0xd0>
   1d548:	add	r0, pc, r0
   1d54c:	bl	1ab50 <logSystemError@@Base>
   1d550:	mov	r0, r5
   1d554:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d558:	mvn	r0, #0
   1d55c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d560:	mov	r0, r6
   1d564:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d568:	andeq	r7, r0, ip, lsr #1

0001d56c <changeOpenFlags@@Base>:
   1d56c:	push	{r4, r5, r6, lr}
   1d570:	mov	r5, r1
   1d574:	mov	r1, #3
   1d578:	mov	r6, r2
   1d57c:	mov	r4, r0
   1d580:	bl	14c1c <fcntl@plt>
   1d584:	cmn	r0, #1
   1d588:	beq	1d5b0 <changeOpenFlags@@Base+0x44>
   1d58c:	bic	r2, r0, r5
   1d590:	mov	r1, #4
   1d594:	mov	r0, r4
   1d598:	orr	r2, r2, r6
   1d59c:	bl	14c1c <fcntl@plt>
   1d5a0:	cmn	r0, #1
   1d5a4:	beq	1d5c4 <changeOpenFlags@@Base+0x58>
   1d5a8:	mov	r0, #1
   1d5ac:	pop	{r4, r5, r6, pc}
   1d5b0:	ldr	r0, [pc, #32]	; 1d5d8 <changeOpenFlags@@Base+0x6c>
   1d5b4:	add	r0, pc, r0
   1d5b8:	bl	1ab50 <logSystemError@@Base>
   1d5bc:	mov	r0, #0
   1d5c0:	pop	{r4, r5, r6, pc}
   1d5c4:	ldr	r0, [pc, #16]	; 1d5dc <changeOpenFlags@@Base+0x70>
   1d5c8:	add	r0, pc, r0
   1d5cc:	bl	1ab50 <logSystemError@@Base>
   1d5d0:	mov	r0, #0
   1d5d4:	pop	{r4, r5, r6, pc}
   1d5d8:	andeq	r7, r0, r0, asr r0
   1d5dc:	andeq	r7, r0, r4, lsr r0

0001d5e0 <setOpenFlags@@Base>:
   1d5e0:	subs	r3, r1, #0
   1d5e4:	mov	r1, r2
   1d5e8:	bne	1d5f4 <setOpenFlags@@Base+0x14>
   1d5ec:	mov	r2, r3
   1d5f0:	b	1d56c <changeOpenFlags@@Base>
   1d5f4:	mov	r1, #0
   1d5f8:	b	1d56c <changeOpenFlags@@Base>

0001d5fc <setBlockingIo@@Base>:
   1d5fc:	rsbs	r1, r1, #1
   1d600:	mov	r2, #2048	; 0x800
   1d604:	push	{r3, lr}
   1d608:	movcc	r1, #0
   1d60c:	bl	1d5e0 <setOpenFlags@@Base>
   1d610:	adds	r0, r0, #0
   1d614:	movne	r0, #1
   1d618:	pop	{r3, pc}

0001d61c <setCloseOnExec@@Base>:
   1d61c:	adds	r2, r1, #0
   1d620:	mov	r1, #2
   1d624:	push	{r3, lr}
   1d628:	movne	r2, #1
   1d62c:	bl	14c1c <fcntl@plt>
   1d630:	adds	r0, r0, #1
   1d634:	movne	r0, #1
   1d638:	pop	{r3, pc}
   1d63c:	push	{lr}		; (str lr, [sp, #-4]!)
   1d640:	sub	sp, sp, #12
   1d644:	add	r2, sp, #8
   1d648:	str	r1, [r2, #-4]!
   1d64c:	movw	r1, #20485	; 0x5005
   1d650:	movt	r1, #49156	; 0xc004
   1d654:	bl	14cf4 <ioctl@plt>
   1d658:	cmn	r0, #1
   1d65c:	moveq	r0, #8
   1d660:	beq	1d698 <setCloseOnExec@@Base+0x7c>
   1d664:	ldr	r1, [sp, #4]
   1d668:	cmp	r1, #8
   1d66c:	beq	1d6a0 <setCloseOnExec@@Base+0x84>
   1d670:	ldr	r3, [pc, #48]	; 1d6a8 <setCloseOnExec@@Base+0x8c>
   1d674:	add	r3, pc, r3
   1d678:	b	1d688 <setCloseOnExec@@Base+0x6c>
   1d67c:	ldr	r2, [r3, #4]
   1d680:	cmp	r2, r1
   1d684:	beq	1d698 <setCloseOnExec@@Base+0x7c>
   1d688:	ldr	r0, [r3, #8]
   1d68c:	add	r3, r3, #8
   1d690:	cmp	r0, #8
   1d694:	bne	1d67c <setCloseOnExec@@Base+0x60>
   1d698:	add	sp, sp, #12
   1d69c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d6a0:	mov	r0, #0
   1d6a4:	b	1d698 <setCloseOnExec@@Base+0x7c>
   1d6a8:	muleq	r0, r8, pc	; <UNPREDICTABLE>

0001d6ac <getProgramPath@@Base>:
   1d6ac:	push	{r3, r4, r5, r6, r7, lr}
   1d6b0:	mov	r6, #0
   1d6b4:	ldr	r7, [pc, #184]	; 1d774 <getProgramPath@@Base+0xc8>
   1d6b8:	mov	r4, #128	; 0x80
   1d6bc:	add	r7, pc, r7
   1d6c0:	b	1d6e0 <getProgramPath@@Base+0x34>
   1d6c4:	bl	14bbc <readlink@plt>
   1d6c8:	mov	r6, r5
   1d6cc:	cmn	r0, #1
   1d6d0:	mov	r3, r0
   1d6d4:	beq	1d718 <getProgramPath@@Base+0x6c>
   1d6d8:	cmp	r4, r0
   1d6dc:	bhi	1d754 <getProgramPath@@Base+0xa8>
   1d6e0:	lsl	r4, r4, #1
   1d6e4:	mov	r0, r6
   1d6e8:	mov	r1, r4
   1d6ec:	bl	14d0c <realloc@plt>
   1d6f0:	mov	r2, r4
   1d6f4:	subs	r5, r0, #0
   1d6f8:	mov	r0, r7
   1d6fc:	mov	r1, r5
   1d700:	bne	1d6c4 <getProgramPath@@Base+0x18>
   1d704:	bl	1ab94 <logMallocError@@Base>
   1d708:	cmp	r6, #0
   1d70c:	bne	1d73c <getProgramPath@@Base+0x90>
   1d710:	mov	r0, r6
   1d714:	pop	{r3, r4, r5, r6, r7, pc}
   1d718:	bl	15000 <__errno_location@plt>
   1d71c:	ldr	r3, [r0]
   1d720:	cmp	r3, #2
   1d724:	beq	1d740 <getProgramPath@@Base+0x94>
   1d728:	ldr	r0, [pc, #72]	; 1d778 <getProgramPath@@Base+0xcc>
   1d72c:	mov	r6, #0
   1d730:	add	r0, pc, r0
   1d734:	bl	1ab50 <logSystemError@@Base>
   1d738:	b	1d744 <getProgramPath@@Base+0x98>
   1d73c:	mov	r5, r6
   1d740:	mov	r6, #0
   1d744:	mov	r0, r5
   1d748:	bl	14ac0 <free@plt>
   1d74c:	mov	r0, r6
   1d750:	pop	{r3, r4, r5, r6, r7, pc}
   1d754:	mov	r2, #0
   1d758:	mov	r0, r5
   1d75c:	strb	r2, [r5, r3]
   1d760:	bl	14c4c <__strdup@plt>
   1d764:	subs	r6, r0, #0
   1d768:	bne	1d744 <getProgramPath@@Base+0x98>
   1d76c:	bl	1ab94 <logMallocError@@Base>
   1d770:	b	1d744 <getProgramPath@@Base+0x98>
   1d774:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   1d778:	andeq	r6, r0, r4, lsr pc

0001d77c <getBootParameters@@Base>:
   1d77c:	ldr	r3, [pc, #280]	; 1d89c <getBootParameters@@Base+0x120>
   1d780:	ldr	r2, [pc, #280]	; 1d8a0 <getBootParameters@@Base+0x124>
   1d784:	add	r3, pc, r3
   1d788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d78c:	sub	sp, sp, #4096	; 0x1000
   1d790:	ldr	r7, [r3, r2]
   1d794:	sub	sp, sp, #12
   1d798:	add	r2, sp, #8192	; 0x2000
   1d79c:	mov	r6, r0
   1d7a0:	ldr	r3, [r7]
   1d7a4:	str	r3, [r2, #-4092]	; 0xfffff004
   1d7a8:	bl	14f10 <strlen@plt>
   1d7ac:	mov	r4, r0
   1d7b0:	mov	r0, #1
   1d7b4:	mov	r1, r0
   1d7b8:	bl	14e74 <calloc@plt>
   1d7bc:	subs	r8, r0, #0
   1d7c0:	beq	1d888 <getBootParameters@@Base+0x10c>
   1d7c4:	ldr	r0, [pc, #216]	; 1d8a4 <getBootParameters@@Base+0x128>
   1d7c8:	ldr	r1, [pc, #216]	; 1d8a8 <getBootParameters@@Base+0x12c>
   1d7cc:	add	r0, pc, r0
   1d7d0:	add	r1, pc, r1
   1d7d4:	bl	14c88 <fopen@plt>
   1d7d8:	subs	r9, r0, #0
   1d7dc:	beq	1d844 <getBootParameters@@Base+0xc8>
   1d7e0:	mov	r1, #4096	; 0x1000
   1d7e4:	add	r0, sp, #4
   1d7e8:	mov	r2, r9
   1d7ec:	bl	14ea4 <fgets@plt>
   1d7f0:	cmp	r0, #0
   1d7f4:	beq	1d83c <getBootParameters@@Base+0xc0>
   1d7f8:	ldr	r5, [pc, #172]	; 1d8ac <getBootParameters@@Base+0x130>
   1d7fc:	add	sl, r4, #1
   1d800:	add	r5, pc, r5
   1d804:	b	1d82c <getBootParameters@@Base+0xb0>
   1d808:	mov	r1, r6
   1d80c:	mov	r2, r4
   1d810:	bl	14af0 <strncmp@plt>
   1d814:	cmp	r0, #0
   1d818:	bne	1d828 <getBootParameters@@Base+0xac>
   1d81c:	ldrb	r3, [fp, r4]
   1d820:	cmp	r3, #61	; 0x3d
   1d824:	beq	1d868 <getBootParameters@@Base+0xec>
   1d828:	mov	r0, #0
   1d82c:	mov	r1, r5
   1d830:	bl	14b8c <strtok@plt>
   1d834:	subs	fp, r0, #0
   1d838:	bne	1d808 <getBootParameters@@Base+0x8c>
   1d83c:	mov	r0, r9
   1d840:	bl	14f4c <fclose@plt>
   1d844:	add	r3, sp, #8192	; 0x2000
   1d848:	mov	r0, r8
   1d84c:	ldr	r2, [r3, #-4092]	; 0xfffff004
   1d850:	ldr	r3, [r7]
   1d854:	cmp	r2, r3
   1d858:	bne	1d898 <getBootParameters@@Base+0x11c>
   1d85c:	add	sp, sp, #4096	; 0x1000
   1d860:	add	sp, sp, #12
   1d864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d868:	add	r0, fp, sl
   1d86c:	bl	14c4c <__strdup@plt>
   1d870:	subs	r3, r0, #0
   1d874:	beq	1d890 <getBootParameters@@Base+0x114>
   1d878:	mov	r0, r8
   1d87c:	mov	r8, r3
   1d880:	bl	14ac0 <free@plt>
   1d884:	b	1d828 <getBootParameters@@Base+0xac>
   1d888:	bl	1ab94 <logMallocError@@Base>
   1d88c:	b	1d844 <getBootParameters@@Base+0xc8>
   1d890:	bl	1ab94 <logMallocError@@Base>
   1d894:	b	1d828 <getBootParameters@@Base+0xac>
   1d898:	bl	14d9c <__stack_chk_fail@plt>
   1d89c:	andeq	r8, r1, r4, ror r8
   1d8a0:	andeq	r0, r0, r4, lsl #5
   1d8a4:	andeq	r6, r0, r4, lsr #29
   1d8a8:	andeq	r7, r0, r0, lsl #12
   1d8ac:	andeq	r6, r0, r0, lsl #29

0001d8b0 <executeHostCommand@@Base>:
   1d8b0:	ldr	r3, [pc, #392]	; 1da40 <executeHostCommand@@Base+0x190>
   1d8b4:	ldr	r2, [pc, #392]	; 1da44 <executeHostCommand@@Base+0x194>
   1d8b8:	add	r3, pc, r3
   1d8bc:	push	{r4, r5, r6, r7, lr}
   1d8c0:	sub	sp, sp, #268	; 0x10c
   1d8c4:	ldr	r6, [r3, r2]
   1d8c8:	add	r4, sp, #4
   1d8cc:	mov	r7, r0
   1d8d0:	add	r5, sp, #132	; 0x84
   1d8d4:	mov	r0, r4
   1d8d8:	ldr	r3, [r6]
   1d8dc:	str	r3, [sp, #260]	; 0x104
   1d8e0:	bl	1506c <sigemptyset@plt>
   1d8e4:	mov	r1, #17
   1d8e8:	mov	r0, r4
   1d8ec:	bl	14c58 <sigaddset@plt>
   1d8f0:	mov	r2, r5
   1d8f4:	mov	r1, r4
   1d8f8:	mov	r0, #0
   1d8fc:	bl	15108 <sigprocmask@plt>
   1d900:	bl	14dc0 <fork@plt>
   1d904:	cmn	r0, #1
   1d908:	mov	r2, r0
   1d90c:	beq	1d990 <executeHostCommand@@Base+0xe0>
   1d910:	cmp	r0, #0
   1d914:	beq	1d964 <executeHostCommand@@Base+0xb4>
   1d918:	mov	r1, sp
   1d91c:	mov	r2, #0
   1d920:	bl	14d48 <waitpid@plt>
   1d924:	cmn	r0, #1
   1d928:	beq	1da0c <executeHostCommand@@Base+0x15c>
   1d92c:	ldr	r2, [sp]
   1d930:	ands	r4, r2, #127	; 0x7f
   1d934:	beq	1d9f0 <executeHostCommand@@Base+0x140>
   1d938:	add	r3, r4, #1
   1d93c:	sbfx	r3, r3, #1, #7
   1d940:	cmp	r3, #0
   1d944:	ble	1d9cc <executeHostCommand@@Base+0x11c>
   1d948:	ldr	r1, [pc, #248]	; 1da48 <executeHostCommand@@Base+0x198>
   1d94c:	mov	r2, r4
   1d950:	mov	r0, #7
   1d954:	add	r4, r4, #128	; 0x80
   1d958:	add	r1, pc, r1
   1d95c:	bl	1aa88 <logMessage@@Base>
   1d960:	b	1d9a0 <executeHostCommand@@Base+0xf0>
   1d964:	mov	r1, r5
   1d968:	mov	r0, #2
   1d96c:	bl	15108 <sigprocmask@plt>
   1d970:	mov	r1, r7
   1d974:	ldr	r0, [r7]
   1d978:	bl	150e4 <execvp@plt>
   1d97c:	ldr	r0, [pc, #200]	; 1da4c <executeHostCommand@@Base+0x19c>
   1d980:	add	r0, pc, r0
   1d984:	bl	1ab50 <logSystemError@@Base>
   1d988:	mov	r0, #1
   1d98c:	bl	14fd0 <_exit@plt>
   1d990:	ldr	r0, [pc, #184]	; 1da50 <executeHostCommand@@Base+0x1a0>
   1d994:	mov	r4, #255	; 0xff
   1d998:	add	r0, pc, r0
   1d99c:	bl	1ab50 <logSystemError@@Base>
   1d9a0:	mov	r2, #0
   1d9a4:	mov	r1, r5
   1d9a8:	mov	r0, #2
   1d9ac:	bl	15108 <sigprocmask@plt>
   1d9b0:	ldr	r2, [sp, #260]	; 0x104
   1d9b4:	ldr	r3, [r6]
   1d9b8:	mov	r0, r4
   1d9bc:	cmp	r2, r3
   1d9c0:	bne	1da3c <executeHostCommand@@Base+0x18c>
   1d9c4:	add	sp, sp, #268	; 0x10c
   1d9c8:	pop	{r4, r5, r6, r7, pc}
   1d9cc:	uxtb	r3, r2
   1d9d0:	cmp	r3, #127	; 0x7f
   1d9d4:	beq	1da20 <executeHostCommand@@Base+0x170>
   1d9d8:	ldr	r1, [pc, #116]	; 1da54 <executeHostCommand@@Base+0x1a4>
   1d9dc:	mov	r0, #7
   1d9e0:	mov	r4, #255	; 0xff
   1d9e4:	add	r1, pc, r1
   1d9e8:	bl	1aa88 <logMessage@@Base>
   1d9ec:	b	1d9a0 <executeHostCommand@@Base+0xf0>
   1d9f0:	ubfx	r4, r2, #8, #8
   1d9f4:	ldr	r1, [pc, #92]	; 1da58 <executeHostCommand@@Base+0x1a8>
   1d9f8:	mov	r0, #7
   1d9fc:	add	r1, pc, r1
   1da00:	mov	r2, r4
   1da04:	bl	1aa88 <logMessage@@Base>
   1da08:	b	1d9a0 <executeHostCommand@@Base+0xf0>
   1da0c:	ldr	r0, [pc, #72]	; 1da5c <executeHostCommand@@Base+0x1ac>
   1da10:	mov	r4, #255	; 0xff
   1da14:	add	r0, pc, r0
   1da18:	bl	1ab50 <logSystemError@@Base>
   1da1c:	b	1d9a0 <executeHostCommand@@Base+0xf0>
   1da20:	ldr	r1, [pc, #56]	; 1da60 <executeHostCommand@@Base+0x1b0>
   1da24:	ubfx	r2, r2, #8, #8
   1da28:	mov	r0, #7
   1da2c:	add	r4, r2, #128	; 0x80
   1da30:	add	r1, pc, r1
   1da34:	bl	1aa88 <logMessage@@Base>
   1da38:	b	1d9a0 <executeHostCommand@@Base+0xf0>
   1da3c:	bl	14d9c <__stack_chk_fail@plt>
   1da40:	andeq	r8, r1, r0, asr #14
   1da44:	andeq	r0, r0, r4, lsl #5
   1da48:	andeq	r6, r0, r4, asr sp
   1da4c:	andeq	r6, r0, ip, lsl #26
   1da50:	andeq	r6, r0, ip, ror #25
   1da54:	strdeq	r6, [r0], -r0
   1da58:	andeq	r6, r0, r0, lsr #25
   1da5c:	andeq	r6, r0, r0, lsl #25
   1da60:	muleq	r0, r4, ip
   1da64:	ldr	r3, [pc, #332]	; 1dbb8 <executeHostCommand@@Base+0x308>
   1da68:	ldr	r2, [pc, #332]	; 1dbbc <executeHostCommand@@Base+0x30c>
   1da6c:	add	r3, pc, r3
   1da70:	push	{r4, r5, r6, r7, r8, r9, lr}
   1da74:	subs	r4, r1, #0
   1da78:	ldr	r5, [r3, r2]
   1da7c:	sub	sp, sp, #284	; 0x11c
   1da80:	ldr	r9, [pc, #312]	; 1dbc0 <executeHostCommand@@Base+0x310>
   1da84:	mov	r8, r0
   1da88:	ldr	r1, [pc, #308]	; 1dbc4 <executeHostCommand@@Base+0x314>
   1da8c:	ldr	r3, [r5]
   1da90:	add	r9, pc, r9
   1da94:	add	r1, pc, r1
   1da98:	mov	r0, r9
   1da9c:	str	r3, [sp, #276]	; 0x114
   1daa0:	ldrne	r3, [r4]
   1daa4:	addne	r3, r3, #1
   1daa8:	strne	r3, [r4]
   1daac:	bl	14c88 <fopen@plt>
   1dab0:	subs	r7, r0, #0
   1dab4:	beq	1db84 <executeHostCommand@@Base+0x2d4>
   1dab8:	add	r0, sp, #20
   1dabc:	mov	r1, #256	; 0x100
   1dac0:	mov	r2, r7
   1dac4:	bl	14ea4 <fgets@plt>
   1dac8:	subs	r6, r0, #0
   1dacc:	beq	1dadc <executeHostCommand@@Base+0x22c>
   1dad0:	bl	14f10 <strlen@plt>
   1dad4:	cmp	r0, #0
   1dad8:	bne	1db44 <executeHostCommand@@Base+0x294>
   1dadc:	ldr	r6, [pc, #228]	; 1dbc8 <executeHostCommand@@Base+0x318>
   1dae0:	add	r6, pc, r6
   1dae4:	mov	r0, r7
   1dae8:	bl	14f4c <fclose@plt>
   1daec:	ldr	r3, [pc, #216]	; 1dbcc <executeHostCommand@@Base+0x31c>
   1daf0:	add	r0, sp, #4
   1daf4:	str	r6, [sp, #4]
   1daf8:	mov	r6, #0
   1dafc:	add	r3, pc, r3
   1db00:	str	r8, [sp, #12]
   1db04:	str	r3, [sp, #8]
   1db08:	str	r6, [sp, #16]
   1db0c:	bl	1d8b0 <executeHostCommand@@Base>
   1db10:	cmp	r0, r6
   1db14:	bne	1db68 <executeHostCommand@@Base+0x2b8>
   1db18:	cmp	r4, #0
   1db1c:	mov	r0, #1
   1db20:	ldrne	r3, [r4]
   1db24:	addne	r3, r3, #1
   1db28:	strne	r3, [r4]
   1db2c:	ldr	r2, [sp, #276]	; 0x114
   1db30:	ldr	r3, [r5]
   1db34:	cmp	r2, r3
   1db38:	bne	1dbb4 <executeHostCommand@@Base+0x304>
   1db3c:	add	sp, sp, #284	; 0x11c
   1db40:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1db44:	sub	r0, r0, #1
   1db48:	ldrb	r3, [r6, r0]
   1db4c:	cmp	r3, #10
   1db50:	bne	1dae4 <executeHostCommand@@Base+0x234>
   1db54:	cmp	r0, #0
   1db58:	mov	r3, #0
   1db5c:	strb	r3, [r6, r0]
   1db60:	bne	1dae4 <executeHostCommand@@Base+0x234>
   1db64:	b	1dadc <executeHostCommand@@Base+0x22c>
   1db68:	ldr	r1, [pc, #96]	; 1dbd0 <executeHostCommand@@Base+0x320>
   1db6c:	mov	r0, #4
   1db70:	mov	r2, r8
   1db74:	add	r1, pc, r1
   1db78:	bl	1aa88 <logMessage@@Base>
   1db7c:	mov	r0, r6
   1db80:	b	1db2c <executeHostCommand@@Base+0x27c>
   1db84:	bl	15000 <__errno_location@plt>
   1db88:	ldr	r6, [pc, #68]	; 1dbd4 <executeHostCommand@@Base+0x324>
   1db8c:	add	r6, pc, r6
   1db90:	ldr	r0, [r0]
   1db94:	bl	14b44 <strerror@plt>
   1db98:	ldr	r1, [pc, #56]	; 1dbd8 <executeHostCommand@@Base+0x328>
   1db9c:	mov	r2, r9
   1dba0:	add	r1, pc, r1
   1dba4:	mov	r3, r0
   1dba8:	mov	r0, #4
   1dbac:	bl	1aa88 <logMessage@@Base>
   1dbb0:	b	1daec <executeHostCommand@@Base+0x23c>
   1dbb4:	bl	14d9c <__stack_chk_fail@plt>
   1dbb8:	andeq	r8, r1, ip, lsl #11
   1dbbc:	andeq	r0, r0, r4, lsl #5
   1dbc0:	andeq	r6, r0, r8, ror #24
   1dbc4:	andeq	r7, r0, ip, lsr r3
   1dbc8:	andeq	r6, r0, ip, lsl #24
   1dbcc:	andeq	r6, r0, ip, lsr #24
   1dbd0:			; <UNDEFINED> instruction: 0x00006bb8
   1dbd4:	andeq	r6, r0, r0, ror #22
   1dbd8:	andeq	r6, r0, r4, ror fp

0001dbdc <mountFileSystem@@Base>:
   1dbdc:	push	{lr}		; (str lr, [sp, #-4]!)
   1dbe0:	sub	sp, sp, #12
   1dbe4:	mov	ip, r0
   1dbe8:	mov	r3, #0
   1dbec:	mov	r0, r1
   1dbf0:	str	r3, [sp]
   1dbf4:	mov	r1, ip
   1dbf8:	bl	1500c <mount@plt>
   1dbfc:	adds	r0, r0, #1
   1dc00:	movne	r0, #1
   1dc04:	add	sp, sp, #12
   1dc08:	pop	{pc}		; (ldr pc, [sp], #4)

0001dc0c <loadSharedObject@@Base>:
   1dc0c:	push	{r4, lr}
   1dc10:	movw	r1, #258	; 0x102
   1dc14:	bl	14cdc <dlopen@plt>
   1dc18:	subs	r4, r0, #0
   1dc1c:	beq	1dc28 <loadSharedObject@@Base+0x1c>
   1dc20:	mov	r0, r4
   1dc24:	pop	{r4, pc}
   1dc28:	bl	14a84 <dlerror@plt>
   1dc2c:	ldr	r1, [pc, #16]	; 1dc44 <loadSharedObject@@Base+0x38>
   1dc30:	add	r1, pc, r1
   1dc34:	mov	r2, r0
   1dc38:	mov	r0, #3
   1dc3c:	bl	1aa88 <logMessage@@Base>
   1dc40:	b	1dc20 <loadSharedObject@@Base+0x14>
   1dc44:	andeq	r6, r0, r4, lsr #17

0001dc48 <unloadSharedObject@@Base>:
   1dc48:	b	14b68 <dlclose@plt>

0001dc4c <findSharedSymbol@@Base>:
   1dc4c:	push	{r4, r5, r6, lr}
   1dc50:	mov	r4, r0
   1dc54:	mov	r6, r1
   1dc58:	mov	r5, r2
   1dc5c:	bl	14a84 <dlerror@plt>
   1dc60:	mov	r1, r6
   1dc64:	mov	r0, r4
   1dc68:	bl	150d8 <dlsym@plt>
   1dc6c:	str	r0, [r5]
   1dc70:	bl	14a84 <dlerror@plt>
   1dc74:	subs	r2, r0, #0
   1dc78:	beq	1dc94 <findSharedSymbol@@Base+0x48>
   1dc7c:	ldr	r1, [pc, #24]	; 1dc9c <findSharedSymbol@@Base+0x50>
   1dc80:	mov	r0, #3
   1dc84:	add	r1, pc, r1
   1dc88:	bl	1aa88 <logMessage@@Base>
   1dc8c:	mov	r0, #0
   1dc90:	pop	{r4, r5, r6, pc}
   1dc94:	mov	r0, #1
   1dc98:	pop	{r4, r5, r6, pc}
   1dc9c:	andeq	r6, r0, r0, asr r8

0001dca0 <synchronousBeep@@Base>:
   1dca0:	mov	r0, #0
   1dca4:	bx	lr

0001dca8 <asynchronousBeep@@Base>:
   1dca8:	push	{r4, r5, r6, lr}
   1dcac:	mov	r5, r0
   1dcb0:	mov	r4, r1
   1dcb4:	bl	1bae4 <getConsole@@Base>
   1dcb8:	subs	r3, r0, #0
   1dcbc:	beq	1dd08 <asynchronousBeep@@Base+0x60>
   1dcc0:	bl	14d6c <fileno@plt>
   1dcc4:	mov	r1, r5
   1dcc8:	lsl	r4, r4, #16
   1dccc:	mov	r6, r0
   1dcd0:	movw	r0, #13532	; 0x34dc
   1dcd4:	movt	r0, #18
   1dcd8:	bl	23324 <processLibLouisStream@@Base+0x21c>
   1dcdc:	movw	r1, #19248	; 0x4b30
   1dce0:	orr	r2, r4, r0
   1dce4:	mov	r0, r6
   1dce8:	bl	14cf4 <ioctl@plt>
   1dcec:	cmn	r0, #1
   1dcf0:	beq	1dcfc <asynchronousBeep@@Base+0x54>
   1dcf4:	mov	r0, #1
   1dcf8:	pop	{r4, r5, r6, pc}
   1dcfc:	ldr	r0, [pc, #12]	; 1dd10 <asynchronousBeep@@Base+0x68>
   1dd00:	add	r0, pc, r0
   1dd04:	bl	1ab50 <logSystemError@@Base>
   1dd08:	mov	r0, #0
   1dd0c:	pop	{r4, r5, r6, pc}
   1dd10:	andeq	r6, r0, ip, asr #20

0001dd14 <startBeep@@Base>:
   1dd14:	push	{r3, r4, r5, lr}
   1dd18:	mov	r4, r0
   1dd1c:	bl	1bae4 <getConsole@@Base>
   1dd20:	subs	r3, r0, #0
   1dd24:	beq	1dd6c <startBeep@@Base+0x58>
   1dd28:	bl	14d6c <fileno@plt>
   1dd2c:	mov	r1, r4
   1dd30:	mov	r5, r0
   1dd34:	movw	r0, #13532	; 0x34dc
   1dd38:	movt	r0, #18
   1dd3c:	bl	23324 <processLibLouisStream@@Base+0x21c>
   1dd40:	movw	r1, #19247	; 0x4b2f
   1dd44:	mov	r2, r0
   1dd48:	mov	r0, r5
   1dd4c:	bl	14cf4 <ioctl@plt>
   1dd50:	cmn	r0, #1
   1dd54:	beq	1dd60 <startBeep@@Base+0x4c>
   1dd58:	mov	r0, #1
   1dd5c:	pop	{r3, r4, r5, pc}
   1dd60:	ldr	r0, [pc, #12]	; 1dd74 <startBeep@@Base+0x60>
   1dd64:	add	r0, pc, r0
   1dd68:	bl	1ab50 <logSystemError@@Base>
   1dd6c:	mov	r0, #0
   1dd70:	pop	{r3, r4, r5, pc}
   1dd74:	strdeq	r6, [r0], -r8

0001dd78 <stopBeep@@Base>:
   1dd78:	push	{r3, lr}
   1dd7c:	bl	1bae4 <getConsole@@Base>
   1dd80:	subs	r3, r0, #0
   1dd84:	beq	1ddb4 <stopBeep@@Base+0x3c>
   1dd88:	bl	14d6c <fileno@plt>
   1dd8c:	movw	r1, #19247	; 0x4b2f
   1dd90:	mov	r2, #0
   1dd94:	bl	14cf4 <ioctl@plt>
   1dd98:	cmn	r0, #1
   1dd9c:	beq	1dda8 <stopBeep@@Base+0x30>
   1dda0:	mov	r0, #1
   1dda4:	pop	{r3, pc}
   1dda8:	ldr	r0, [pc, #12]	; 1ddbc <stopBeep@@Base+0x44>
   1ddac:	add	r0, pc, r0
   1ddb0:	bl	1ab50 <logSystemError@@Base>
   1ddb4:	mov	r0, #0
   1ddb8:	pop	{r3, pc}
   1ddbc:			; <UNDEFINED> instruction: 0x000069b0

0001ddc0 <endBeep@@Base>:
   1ddc0:	bx	lr

0001ddc4 <closePcmDevice@@Base>:
   1ddc4:	push	{r4, lr}
   1ddc8:	mov	r4, r0
   1ddcc:	ldr	r0, [r0]
   1ddd0:	bl	14c64 <close@plt>
   1ddd4:	mov	r0, r4
   1ddd8:	pop	{r4, lr}
   1dddc:	b	14ac0 <free@plt>

0001dde0 <writePcmData@@Base>:
   1dde0:	push	{r3, lr}
   1dde4:	ldr	r0, [r0]
   1dde8:	bl	1d498 <writeData@@Base>
   1ddec:	adds	r0, r0, #1
   1ddf0:	movne	r0, #1
   1ddf4:	pop	{r3, pc}

0001ddf8 <getPcmBlockSize@@Base>:
   1ddf8:	ldr	r3, [pc, #120]	; 1de78 <getPcmBlockSize@@Base+0x80>
   1ddfc:	mov	ip, #7
   1de00:	push	{r4, r5, lr}
   1de04:	add	r3, pc, r3
   1de08:	ldr	lr, [pc, #108]	; 1de7c <getPcmBlockSize@@Base+0x84>
   1de0c:	sub	sp, sp, #20
   1de10:	add	r2, sp, #16
   1de14:	movt	ip, #65535	; 0xffff
   1de18:	mov	r5, r0
   1de1c:	movw	r1, #20490	; 0x500a
   1de20:	ldr	r4, [r3, lr]
   1de24:	movt	r1, #49156	; 0xc004
   1de28:	str	ip, [r2, #-12]!
   1de2c:	ldr	r0, [r0]
   1de30:	ldr	r3, [r4]
   1de34:	str	r3, [sp, #12]
   1de38:	bl	14cf4 <ioctl@plt>
   1de3c:	add	r2, sp, #8
   1de40:	ldr	r0, [r5]
   1de44:	movw	r1, #20484	; 0x5004
   1de48:	movt	r1, #49156	; 0xc004
   1de4c:	bl	14cf4 <ioctl@plt>
   1de50:	ldr	r2, [sp, #12]
   1de54:	ldr	r3, [r4]
   1de58:	cmn	r0, #1
   1de5c:	ldrne	r0, [sp, #8]
   1de60:	moveq	r0, #128	; 0x80
   1de64:	cmp	r2, r3
   1de68:	bne	1de74 <getPcmBlockSize@@Base+0x7c>
   1de6c:	add	sp, sp, #20
   1de70:	pop	{r4, r5, pc}
   1de74:	bl	14d9c <__stack_chk_fail@plt>
   1de78:	strdeq	r8, [r1], -r4
   1de7c:	andeq	r0, r0, r4, lsl #5

0001de80 <getPcmSampleRate@@Base>:
   1de80:	ldr	r0, [r0, #8]
   1de84:	bx	lr

0001de88 <setPcmSampleRate@@Base>:
   1de88:	push	{r4, lr}
   1de8c:	sub	sp, sp, #8
   1de90:	add	r2, sp, #8
   1de94:	mov	r4, r0
   1de98:	ldr	r0, [r0]
   1de9c:	str	r1, [r2, #-4]!
   1dea0:	movw	r1, #20482	; 0x5002
   1dea4:	movt	r1, #49156	; 0xc004
   1dea8:	bl	14cf4 <ioctl@plt>
   1deac:	cmn	r0, #1
   1deb0:	mov	r0, r4
   1deb4:	ldrne	r3, [sp, #4]
   1deb8:	strne	r3, [r4, #8]
   1debc:	bl	1de80 <getPcmSampleRate@@Base>
   1dec0:	add	sp, sp, #8
   1dec4:	pop	{r4, pc}

0001dec8 <getPcmChannelCount@@Base>:
   1dec8:	ldr	r0, [r0, #12]
   1decc:	bx	lr

0001ded0 <setPcmChannelCount@@Base>:
   1ded0:	push	{r4, lr}
   1ded4:	sub	sp, sp, #8
   1ded8:	add	r2, sp, #8
   1dedc:	mov	r4, r0
   1dee0:	ldr	r0, [r0]
   1dee4:	str	r1, [r2, #-4]!
   1dee8:	movw	r1, #20486	; 0x5006
   1deec:	movt	r1, #49156	; 0xc004
   1def0:	bl	14cf4 <ioctl@plt>
   1def4:	cmn	r0, #1
   1def8:	mov	r0, r4
   1defc:	ldrne	r3, [sp, #4]
   1df00:	strne	r3, [r4, #12]
   1df04:	bl	1dec8 <getPcmChannelCount@@Base>
   1df08:	add	sp, sp, #8
   1df0c:	pop	{r4, pc}

0001df10 <openPcmDevice@@Base>:
   1df10:	push	{r4, r5, r6, lr}
   1df14:	mov	r6, r0
   1df18:	mov	r0, #16
   1df1c:	mov	r5, r1
   1df20:	bl	14f04 <malloc@plt>
   1df24:	subs	r4, r0, #0
   1df28:	beq	1e004 <openPcmDevice@@Base+0xf4>
   1df2c:	ldrb	r3, [r5]
   1df30:	cmp	r3, #0
   1df34:	beq	1dfb0 <openPcmDevice@@Base+0xa0>
   1df38:	mov	r0, r5
   1df3c:	movw	r1, #2049	; 0x801
   1df40:	bl	14d3c <open@plt>
   1df44:	cmn	r0, #1
   1df48:	str	r0, [r4]
   1df4c:	beq	1dfd0 <openPcmDevice@@Base+0xc0>
   1df50:	mov	r1, #1
   1df54:	bl	1d5fc <setBlockingIo@@Base>
   1df58:	mov	r2, r4
   1df5c:	mov	r3, #196608	; 0x30000
   1df60:	movw	r1, #19830	; 0x4d76
   1df64:	str	r3, [r4, #4]
   1df68:	movt	r1, #32772	; 0x8004
   1df6c:	ldr	r0, [r2], #4
   1df70:	bl	14cf4 <ioctl@plt>
   1df74:	cmn	r0, #1
   1df78:	beq	1dfbc <openPcmDevice@@Base+0xac>
   1df7c:	ldr	r1, [pc, #148]	; 1e018 <openPcmDevice@@Base+0x108>
   1df80:	mov	r0, #7
   1df84:	ldr	r2, [r4, #4]
   1df88:	add	r1, pc, r1
   1df8c:	bl	1aa88 <logMessage@@Base>
   1df90:	mov	r0, r4
   1df94:	mov	r1, #8000	; 0x1f40
   1df98:	bl	1de88 <setPcmSampleRate@@Base>
   1df9c:	mov	r0, r4
   1dfa0:	mov	r1, #1
   1dfa4:	bl	1ded0 <setPcmChannelCount@@Base>
   1dfa8:	mov	r0, r4
   1dfac:	pop	{r4, r5, r6, pc}
   1dfb0:	ldr	r5, [pc, #100]	; 1e01c <openPcmDevice@@Base+0x10c>
   1dfb4:	add	r5, pc, r5
   1dfb8:	b	1df38 <openPcmDevice@@Base+0x28>
   1dfbc:	ldr	r1, [pc, #92]	; 1e020 <openPcmDevice@@Base+0x110>
   1dfc0:	mov	r0, r6
   1dfc4:	add	r1, pc, r1
   1dfc8:	bl	1aa88 <logMessage@@Base>
   1dfcc:	b	1df7c <openPcmDevice@@Base+0x6c>
   1dfd0:	bl	15000 <__errno_location@plt>
   1dfd4:	ldr	r0, [r0]
   1dfd8:	bl	14b44 <strerror@plt>
   1dfdc:	ldr	r1, [pc, #64]	; 1e024 <openPcmDevice@@Base+0x114>
   1dfe0:	mov	r2, r5
   1dfe4:	add	r1, pc, r1
   1dfe8:	mov	r3, r0
   1dfec:	mov	r0, r6
   1dff0:	bl	1aa88 <logMessage@@Base>
   1dff4:	mov	r0, r4
   1dff8:	bl	14ac0 <free@plt>
   1dffc:	mov	r0, #0
   1e000:	pop	{r4, r5, r6, pc}
   1e004:	ldr	r0, [pc, #28]	; 1e028 <openPcmDevice@@Base+0x118>
   1e008:	add	r0, pc, r0
   1e00c:	bl	1ab50 <logSystemError@@Base>
   1e010:	mov	r0, r4
   1e014:	pop	{r4, r5, r6, pc}
   1e018:	andeq	r6, r0, r0, lsl r8
   1e01c:			; <UNDEFINED> instruction: 0x000067b8
   1e020:			; <UNDEFINED> instruction: 0x000067b4
   1e024:	ldrdeq	r6, [r0], -r0
   1e028:	andeq	r6, r0, ip, asr #15

0001e02c <getPcmAmplitudeFormat@@Base>:
   1e02c:	ldr	r0, [r0]
   1e030:	mov	r1, #0
   1e034:	b	1d63c <setCloseOnExec@@Base+0x20>

0001e038 <setPcmAmplitudeFormat@@Base>:
   1e038:	cmp	r1, #0
   1e03c:	beq	1e078 <setPcmAmplitudeFormat@@Base+0x40>
   1e040:	ldr	r3, [pc, #60]	; 1e084 <setPcmAmplitudeFormat@@Base+0x4c>
   1e044:	add	r3, pc, r3
   1e048:	add	r3, r3, #8
   1e04c:	b	1e058 <setPcmAmplitudeFormat@@Base+0x20>
   1e050:	cmp	r2, r1
   1e054:	beq	1e06c <setPcmAmplitudeFormat@@Base+0x34>
   1e058:	ldr	r2, [r3]
   1e05c:	mov	ip, r3
   1e060:	add	r3, r3, #8
   1e064:	cmp	r2, #8
   1e068:	bne	1e050 <setPcmAmplitudeFormat@@Base+0x18>
   1e06c:	ldr	r0, [r0]
   1e070:	ldr	r1, [ip, #4]
   1e074:	b	1d63c <setCloseOnExec@@Base+0x20>
   1e078:	ldr	ip, [pc, #8]	; 1e088 <setPcmAmplitudeFormat@@Base+0x50>
   1e07c:	add	ip, pc, ip
   1e080:	b	1e06c <setPcmAmplitudeFormat@@Base+0x34>
   1e084:	andeq	r6, r0, r8, asr #11
   1e088:	muleq	r0, r0, r5

0001e08c <forcePcmOutput@@Base>:
   1e08c:	ldr	r0, [r0]
   1e090:	movw	r1, #20488	; 0x5008
   1e094:	mov	r2, #0
   1e098:	b	14cf4 <ioctl@plt>

0001e09c <awaitPcmOutput@@Base>:
   1e09c:	ldr	r0, [r0]
   1e0a0:	movw	r1, #20481	; 0x5001
   1e0a4:	mov	r2, #0
   1e0a8:	b	14cf4 <ioctl@plt>

0001e0ac <cancelPcmOutput@@Base>:
   1e0ac:	ldr	r0, [r0]
   1e0b0:	mov	r1, #20480	; 0x5000
   1e0b4:	mov	r2, #0
   1e0b8:	b	14cf4 <ioctl@plt>

0001e0bc <seqbuf_dump@@Base>:
   1e0bc:	push	{r4, lr}
   1e0c0:	ldr	r4, [pc, #68]	; 1e10c <seqbuf_dump@@Base+0x50>
   1e0c4:	add	r4, pc, r4
   1e0c8:	ldr	r1, [r4]
   1e0cc:	ldr	r2, [r1, #140]	; 0x8c
   1e0d0:	cmp	r2, #0
   1e0d4:	bne	1e0e4 <seqbuf_dump@@Base+0x28>
   1e0d8:	mov	r3, #0
   1e0dc:	str	r3, [r1, #140]	; 0x8c
   1e0e0:	pop	{r4, pc}
   1e0e4:	ldr	r0, [r1], #8
   1e0e8:	bl	1d498 <writeData@@Base>
   1e0ec:	cmn	r0, #1
   1e0f0:	beq	1e0fc <seqbuf_dump@@Base+0x40>
   1e0f4:	ldr	r1, [r4]
   1e0f8:	b	1e0d8 <seqbuf_dump@@Base+0x1c>
   1e0fc:	ldr	r0, [pc, #12]	; 1e110 <seqbuf_dump@@Base+0x54>
   1e100:	add	r0, pc, r0
   1e104:	bl	1ab50 <logSystemError@@Base>
   1e108:	b	1e0f4 <seqbuf_dump@@Base+0x38>
   1e10c:			; <UNDEFINED> instruction: 0x000182bc
   1e110:	andeq	r6, r0, ip, ror #13

0001e114 <openMidiDevice@@Base>:
   1e114:	ldr	r3, [pc, #744]	; 1e404 <openMidiDevice@@Base+0x2f0>
   1e118:	ldr	r2, [pc, #744]	; 1e408 <openMidiDevice@@Base+0x2f4>
   1e11c:	add	r3, pc, r3
   1e120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e124:	sub	sp, sp, #172	; 0xac
   1e128:	ldr	r2, [r3, r2]
   1e12c:	mov	sl, r0
   1e130:	mov	r0, #144	; 0x90
   1e134:	mov	r5, r1
   1e138:	ldr	r3, [r2]
   1e13c:	str	r2, [sp, #8]
   1e140:	str	r3, [sp, #164]	; 0xa4
   1e144:	bl	14f04 <malloc@plt>
   1e148:	subs	r4, r0, #0
   1e14c:	beq	1e3ec <openMidiDevice@@Base+0x2d8>
   1e150:	ldrb	r3, [r5]
   1e154:	cmp	r3, #0
   1e158:	beq	1e304 <openMidiDevice@@Base+0x1f0>
   1e15c:	mov	r0, r5
   1e160:	mov	r1, #1
   1e164:	bl	14d3c <open@plt>
   1e168:	cmn	r0, #1
   1e16c:	str	r0, [r4]
   1e170:	beq	1e3b8 <openMidiDevice@@Base+0x2a4>
   1e174:	add	r9, sp, #16
   1e178:	movw	r1, #20746	; 0x510a
   1e17c:	movt	r1, #32772	; 0x8004
   1e180:	mvn	r6, #0
   1e184:	mov	r2, r9
   1e188:	str	r6, [sp, #20]
   1e18c:	bl	14cf4 <ioctl@plt>
   1e190:	cmp	r0, r6
   1e194:	mov	r5, r0
   1e198:	beq	1e360 <openMidiDevice@@Base+0x24c>
   1e19c:	ldr	r3, [sp, #16]
   1e1a0:	cmp	r3, #0
   1e1a4:	ble	1e3b0 <openMidiDevice@@Base+0x29c>
   1e1a8:	ldr	r1, [pc, #604]	; 1e40c <openMidiDevice@@Base+0x2f8>
   1e1ac:	add	r5, sp, #24
   1e1b0:	ldr	r7, [pc, #600]	; 1e410 <openMidiDevice@@Base+0x2fc>
   1e1b4:	mov	r8, r6
   1e1b8:	add	r1, pc, r1
   1e1bc:	mov	fp, #0
   1e1c0:	str	r1, [sp, #12]
   1e1c4:	add	r7, pc, r7
   1e1c8:	b	1e220 <openMidiDevice@@Base+0x10c>
   1e1cc:	ldr	r2, [sp, #60]	; 0x3c
   1e1d0:	cmp	r2, #0
   1e1d4:	moveq	r6, fp
   1e1d8:	beq	1e210 <openMidiDevice@@Base+0xfc>
   1e1dc:	cmp	r2, #1
   1e1e0:	ldr	r3, [sp, #64]	; 0x40
   1e1e4:	bne	1e200 <openMidiDevice@@Base+0xec>
   1e1e8:	cmp	r3, #16
   1e1ec:	streq	fp, [sp, #20]
   1e1f0:	beq	1e210 <openMidiDevice@@Base+0xfc>
   1e1f4:	cmp	r3, #32
   1e1f8:	moveq	r8, fp
   1e1fc:	beq	1e210 <openMidiDevice@@Base+0xfc>
   1e200:	str	r5, [sp]
   1e204:	mov	r0, #7
   1e208:	mov	r1, r7
   1e20c:	bl	1aa88 <logMessage@@Base>
   1e210:	ldr	r3, [sp, #16]
   1e214:	add	fp, fp, #1
   1e218:	cmp	r3, fp
   1e21c:	ble	1e270 <openMidiDevice@@Base+0x15c>
   1e220:	movw	r1, #20738	; 0x5102
   1e224:	ldr	r0, [r4]
   1e228:	movt	r1, #49292	; 0xc08c
   1e22c:	mov	r2, r5
   1e230:	str	fp, [sp, #56]	; 0x38
   1e234:	bl	14cf4 <ioctl@plt>
   1e238:	cmn	r0, #1
   1e23c:	bne	1e1cc <openMidiDevice@@Base+0xb8>
   1e240:	bl	15000 <__errno_location@plt>
   1e244:	ldr	r0, [r0]
   1e248:	bl	14b44 <strerror@plt>
   1e24c:	mov	r2, fp
   1e250:	ldr	r1, [sp, #12]
   1e254:	add	fp, fp, #1
   1e258:	mov	r3, r0
   1e25c:	mov	r0, sl
   1e260:	bl	1aa88 <logMessage@@Base>
   1e264:	ldr	r3, [sp, #16]
   1e268:	cmp	r3, fp
   1e26c:	bgt	1e220 <openMidiDevice@@Base+0x10c>
   1e270:	ldr	r3, [sp, #20]
   1e274:	cmp	r3, #0
   1e278:	blt	1e298 <openMidiDevice@@Base+0x184>
   1e27c:	movw	r1, #20745	; 0x5109
   1e280:	ldr	r0, [r4]
   1e284:	movt	r1, #16388	; 0x4004
   1e288:	add	r2, sp, #20
   1e28c:	bl	14cf4 <ioctl@plt>
   1e290:	cmn	r0, #1
   1e294:	beq	1e334 <openMidiDevice@@Base+0x220>
   1e298:	mov	r2, r9
   1e29c:	movw	r1, #20747	; 0x510b
   1e2a0:	ldr	r0, [r4]
   1e2a4:	movt	r1, #32772	; 0x8004
   1e2a8:	bl	14cf4 <ioctl@plt>
   1e2ac:	cmn	r0, #1
   1e2b0:	mov	r5, r0
   1e2b4:	beq	1e38c <openMidiDevice@@Base+0x278>
   1e2b8:	ldr	r0, [sp, #16]
   1e2bc:	cmp	r0, #0
   1e2c0:	subgt	r5, r0, #1
   1e2c4:	ble	1e32c <openMidiDevice@@Base+0x218>
   1e2c8:	cmn	r8, #1
   1e2cc:	beq	1e310 <openMidiDevice@@Base+0x1fc>
   1e2d0:	mov	r0, r4
   1e2d4:	mov	r2, #128	; 0x80
   1e2d8:	mov	r3, #0
   1e2dc:	str	r8, [r4, #4]
   1e2e0:	str	r2, [r4, #136]	; 0x88
   1e2e4:	str	r3, [r4, #140]	; 0x8c
   1e2e8:	ldr	r1, [sp, #8]
   1e2ec:	ldr	r2, [sp, #164]	; 0xa4
   1e2f0:	ldr	r3, [r1]
   1e2f4:	cmp	r2, r3
   1e2f8:	bne	1e400 <openMidiDevice@@Base+0x2ec>
   1e2fc:	add	sp, sp, #172	; 0xac
   1e300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e304:	ldr	r5, [pc, #264]	; 1e414 <openMidiDevice@@Base+0x300>
   1e308:	add	r5, pc, r5
   1e30c:	b	1e15c <openMidiDevice@@Base+0x48>
   1e310:	ldr	r8, [sp, #20]
   1e314:	cmp	r8, #0
   1e318:	bge	1e2d0 <openMidiDevice@@Base+0x1bc>
   1e31c:	cmn	r6, #1
   1e320:	biceq	r8, r5, r5, asr #31
   1e324:	movne	r8, r6
   1e328:	b	1e2d0 <openMidiDevice@@Base+0x1bc>
   1e32c:	mvn	r5, #0
   1e330:	b	1e2c8 <openMidiDevice@@Base+0x1b4>
   1e334:	bl	15000 <__errno_location@plt>
   1e338:	ldr	r5, [sp, #20]
   1e33c:	ldr	r0, [r0]
   1e340:	bl	14b44 <strerror@plt>
   1e344:	ldr	r1, [pc, #204]	; 1e418 <openMidiDevice@@Base+0x304>
   1e348:	mov	r2, r5
   1e34c:	add	r1, pc, r1
   1e350:	mov	r3, r0
   1e354:	mov	r0, sl
   1e358:	bl	1aa88 <logMessage@@Base>
   1e35c:	b	1e298 <openMidiDevice@@Base+0x184>
   1e360:	bl	15000 <__errno_location@plt>
   1e364:	mov	r6, r5
   1e368:	mov	r8, r5
   1e36c:	ldr	r0, [r0]
   1e370:	bl	14b44 <strerror@plt>
   1e374:	ldr	r1, [pc, #160]	; 1e41c <openMidiDevice@@Base+0x308>
   1e378:	add	r1, pc, r1
   1e37c:	mov	r2, r0
   1e380:	mov	r0, sl
   1e384:	bl	1aa88 <logMessage@@Base>
   1e388:	b	1e298 <openMidiDevice@@Base+0x184>
   1e38c:	bl	15000 <__errno_location@plt>
   1e390:	ldr	r0, [r0]
   1e394:	bl	14b44 <strerror@plt>
   1e398:	ldr	r1, [pc, #128]	; 1e420 <openMidiDevice@@Base+0x30c>
   1e39c:	add	r1, pc, r1
   1e3a0:	mov	r2, r0
   1e3a4:	mov	r0, sl
   1e3a8:	bl	1aa88 <logMessage@@Base>
   1e3ac:	b	1e2c8 <openMidiDevice@@Base+0x1b4>
   1e3b0:	mov	r8, r6
   1e3b4:	b	1e270 <openMidiDevice@@Base+0x15c>
   1e3b8:	bl	15000 <__errno_location@plt>
   1e3bc:	ldr	r0, [r0]
   1e3c0:	bl	14b44 <strerror@plt>
   1e3c4:	ldr	r1, [pc, #88]	; 1e424 <openMidiDevice@@Base+0x310>
   1e3c8:	mov	r2, r5
   1e3cc:	add	r1, pc, r1
   1e3d0:	mov	r3, r0
   1e3d4:	mov	r0, sl
   1e3d8:	bl	1aa88 <logMessage@@Base>
   1e3dc:	mov	r0, r4
   1e3e0:	bl	14ac0 <free@plt>
   1e3e4:	mov	r0, #0
   1e3e8:	b	1e2e8 <openMidiDevice@@Base+0x1d4>
   1e3ec:	ldr	r0, [pc, #52]	; 1e428 <openMidiDevice@@Base+0x314>
   1e3f0:	add	r0, pc, r0
   1e3f4:	bl	1ab50 <logSystemError@@Base>
   1e3f8:	mov	r0, r4
   1e3fc:	b	1e2e8 <openMidiDevice@@Base+0x1d4>
   1e400:	bl	14d9c <__stack_chk_fail@plt>
   1e404:	ldrdeq	r7, [r1], -ip
   1e408:	andeq	r0, r0, r4, lsl #5
   1e40c:	andeq	r6, r0, r0, ror r6
   1e410:	andeq	r6, r0, r4, asr #12
   1e414:	strdeq	r6, [r0], -r0
   1e418:	andeq	r6, r0, ip, lsl #10
   1e41c:	andeq	r6, r0, r0, lsl r5
   1e420:	andeq	r6, r0, r4, lsl r5
   1e424:	andeq	r6, r0, r8, lsl #10
   1e428:	andeq	r6, r0, r4, lsl #10

0001e42c <closeMidiDevice@@Base>:
   1e42c:	push	{r4, lr}
   1e430:	mov	r4, r0
   1e434:	ldr	r0, [r0]
   1e438:	bl	14c64 <close@plt>
   1e43c:	mov	r0, r4
   1e440:	pop	{r4, lr}
   1e444:	b	14ac0 <free@plt>

0001e448 <flushMidiDevice@@Base>:
   1e448:	push	{r4, lr}
   1e44c:	ldr	r4, [pc, #24]	; 1e46c <flushMidiDevice@@Base+0x24>
   1e450:	add	r4, pc, r4
   1e454:	str	r0, [r4]
   1e458:	bl	1e0bc <seqbuf_dump@@Base>
   1e45c:	mov	r3, #0
   1e460:	mov	r0, #1
   1e464:	str	r3, [r4]
   1e468:	pop	{r4, pc}
   1e46c:	andeq	r7, r1, r0, lsr pc

0001e470 <setMidiInstrument@@Base>:
   1e470:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e474:	mov	r4, r0
   1e478:	ldr	r0, [r0, #140]	; 0x8c
   1e47c:	mov	r9, r2
   1e480:	ldr	r5, [pc, #124]	; 1e504 <setMidiInstrument@@Base+0x94>
   1e484:	mov	sl, r1
   1e488:	ldr	r3, [r4, #136]	; 0x88
   1e48c:	add	r2, r0, #7
   1e490:	add	r5, pc, r5
   1e494:	cmp	r2, r3
   1e498:	str	r4, [r5]
   1e49c:	movlt	ip, r4
   1e4a0:	blt	1e4b0 <setMidiInstrument@@Base+0x40>
   1e4a4:	bl	1e0bc <seqbuf_dump@@Base>
   1e4a8:	ldr	ip, [r5]
   1e4ac:	ldr	r0, [ip, #140]	; 0x8c
   1e4b0:	add	r3, ip, r0
   1e4b4:	mvn	r2, #109	; 0x6d
   1e4b8:	add	r6, r0, #14
   1e4bc:	ldr	r5, [pc, #68]	; 1e508 <setMidiInstrument@@Base+0x98>
   1e4c0:	strb	r2, [r3, #8]
   1e4c4:	mvn	r7, #63	; 0x3f
   1e4c8:	ldr	r8, [r4, #4]
   1e4cc:	add	r5, pc, r5
   1e4d0:	mov	r4, #0
   1e4d4:	strb	sl, [r3, #11]
   1e4d8:	strb	r9, [r3, #12]
   1e4dc:	mov	r0, #1
   1e4e0:	strb	r8, [r3, #9]
   1e4e4:	strb	r7, [r3, #10]
   1e4e8:	strb	r4, [r3, #13]
   1e4ec:	strh	r4, [ip, r6]
   1e4f0:	ldr	r3, [ip, #140]	; 0x8c
   1e4f4:	str	r4, [r5]
   1e4f8:	add	r3, r3, #8
   1e4fc:	str	r3, [ip, #140]	; 0x8c
   1e500:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e504:	strdeq	r7, [r1], -r0
   1e508:			; <UNDEFINED> instruction: 0x00017eb4

0001e50c <beginMidiBlock@@Base>:
   1e50c:	push	{r4, lr}
   1e510:	ldr	r2, [r0, #140]	; 0x8c
   1e514:	ldr	r3, [r0, #136]	; 0x88
   1e518:	ldr	r4, [pc, #104]	; 1e588 <beginMidiBlock@@Base+0x7c>
   1e51c:	add	r1, r2, #7
   1e520:	cmp	r1, r3
   1e524:	add	r4, pc, r4
   1e528:	movlt	r3, r0
   1e52c:	str	r0, [r4]
   1e530:	blt	1e540 <beginMidiBlock@@Base+0x34>
   1e534:	bl	1e0bc <seqbuf_dump@@Base>
   1e538:	ldr	r3, [r4]
   1e53c:	ldr	r2, [r3, #140]	; 0x8c
   1e540:	add	r1, r3, r2
   1e544:	add	r4, r2, #12
   1e548:	ldr	ip, [pc, #60]	; 1e58c <beginMidiBlock@@Base+0x80>
   1e54c:	mvn	r0, #126	; 0x7e
   1e550:	mov	r2, #4
   1e554:	strb	r0, [r1, #8]
   1e558:	strb	r2, [r1, #9]
   1e55c:	add	ip, pc, ip
   1e560:	mov	r2, #0
   1e564:	strb	r2, [r1, #10]
   1e568:	strb	r2, [r1, #11]
   1e56c:	mov	r0, #1
   1e570:	str	r2, [r3, r4]
   1e574:	ldr	r1, [r3, #140]	; 0x8c
   1e578:	str	r2, [ip]
   1e57c:	add	r2, r1, #8
   1e580:	str	r2, [r3, #140]	; 0x8c
   1e584:	pop	{r4, pc}
   1e588:	andeq	r7, r1, ip, asr lr
   1e58c:	andeq	r7, r1, r4, lsr #28

0001e590 <endMidiBlock@@Base>:
   1e590:	push	{r3, r4, r5, lr}
   1e594:	mov	r4, r0
   1e598:	ldr	r1, [r0, #140]	; 0x8c
   1e59c:	ldr	r3, [r0, #136]	; 0x88
   1e5a0:	ldr	r5, [pc, #120]	; 1e620 <endMidiBlock@@Base+0x90>
   1e5a4:	add	r2, r1, #7
   1e5a8:	cmp	r2, r3
   1e5ac:	add	r5, pc, r5
   1e5b0:	movlt	r3, r0
   1e5b4:	str	r0, [r5]
   1e5b8:	blt	1e5c8 <endMidiBlock@@Base+0x38>
   1e5bc:	bl	1e0bc <seqbuf_dump@@Base>
   1e5c0:	ldr	r3, [r5]
   1e5c4:	ldr	r1, [r3, #140]	; 0x8c
   1e5c8:	add	r2, r3, r1
   1e5cc:	add	r1, r1, #12
   1e5d0:	mov	r5, #0
   1e5d4:	mvn	ip, #126	; 0x7e
   1e5d8:	strb	r5, [r2, #10]
   1e5dc:	mov	r0, #3
   1e5e0:	strb	ip, [r2, #8]
   1e5e4:	strb	r0, [r2, #9]
   1e5e8:	strb	r5, [r2, #11]
   1e5ec:	str	r5, [r3, r1]
   1e5f0:	ldr	r2, [r3, #140]	; 0x8c
   1e5f4:	add	r2, r2, #8
   1e5f8:	str	r2, [r3, #140]	; 0x8c
   1e5fc:	bl	1e0bc <seqbuf_dump@@Base>
   1e600:	ldr	r0, [r4]
   1e604:	movw	r1, #20737	; 0x5101
   1e608:	bl	14cf4 <ioctl@plt>
   1e60c:	ldr	r3, [pc, #16]	; 1e624 <endMidiBlock@@Base+0x94>
   1e610:	mov	r0, #1
   1e614:	add	r3, pc, r3
   1e618:	str	r5, [r3]
   1e61c:	pop	{r3, r4, r5, pc}
   1e620:	ldrdeq	r7, [r1], -r4
   1e624:	andeq	r7, r1, ip, ror #26

0001e628 <startMidiNote@@Base>:
   1e628:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e62c:	mov	r4, r0
   1e630:	ldr	r0, [r0, #140]	; 0x8c
   1e634:	mov	r8, r1
   1e638:	ldr	r5, [pc, #156]	; 1e6dc <startMidiNote@@Base+0xb4>
   1e63c:	mov	r9, r2
   1e640:	ldr	r1, [r4, #136]	; 0x88
   1e644:	add	r6, r0, #7
   1e648:	add	r5, pc, r5
   1e64c:	mov	r7, r3
   1e650:	cmp	r6, r1
   1e654:	str	r4, [r5]
   1e658:	movlt	r5, r4
   1e65c:	blt	1e670 <startMidiNote@@Base+0x48>
   1e660:	bl	1e0bc <seqbuf_dump@@Base>
   1e664:	ldr	r5, [r5]
   1e668:	ldr	r0, [r5, #140]	; 0x8c
   1e66c:	add	r6, r0, #7
   1e670:	rsb	r3, r7, r7, lsl #7
   1e674:	movw	r7, #34079	; 0x851f
   1e678:	movt	r7, #20971	; 0x51eb
   1e67c:	add	ip, r5, r0
   1e680:	ldr	sl, [pc, #88]	; 1e6e0 <startMidiNote@@Base+0xb8>
   1e684:	mvn	r2, #108	; 0x6c
   1e688:	smull	r1, r7, r7, r3
   1e68c:	strb	r2, [ip, #8]
   1e690:	ldr	r1, [r4, #4]
   1e694:	add	sl, pc, sl
   1e698:	add	r6, r5, r6
   1e69c:	asr	r3, r3, #31
   1e6a0:	add	r2, r0, #8
   1e6a4:	strb	r8, [ip, #11]
   1e6a8:	strb	r1, [ip, #9]
   1e6ac:	mvn	r4, #111	; 0x6f
   1e6b0:	mov	r1, #0
   1e6b4:	strb	r9, [ip, #12]
   1e6b8:	strb	r4, [ip, #10]
   1e6bc:	rsb	r7, r3, r7, asr #5
   1e6c0:	strb	r1, [ip, #14]
   1e6c4:	mov	r0, #1
   1e6c8:	strb	r7, [ip, #13]
   1e6cc:	str	r1, [sl]
   1e6d0:	strb	r1, [r6, #8]
   1e6d4:	str	r2, [r5, #140]	; 0x8c
   1e6d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e6dc:	andeq	r7, r1, r8, lsr sp
   1e6e0:	andeq	r7, r1, ip, ror #25

0001e6e4 <stopMidiNote@@Base>:
   1e6e4:	push	{r4, r5, r6, r7, r8, lr}
   1e6e8:	mov	r4, r0
   1e6ec:	ldr	r2, [r0, #140]	; 0x8c
   1e6f0:	mov	r8, r1
   1e6f4:	ldr	r3, [r0, #136]	; 0x88
   1e6f8:	ldr	r5, [pc, #120]	; 1e778 <stopMidiNote@@Base+0x94>
   1e6fc:	add	r0, r2, #7
   1e700:	cmp	r0, r3
   1e704:	add	r5, pc, r5
   1e708:	movlt	ip, r4
   1e70c:	str	r4, [r5]
   1e710:	blt	1e724 <stopMidiNote@@Base+0x40>
   1e714:	bl	1e0bc <seqbuf_dump@@Base>
   1e718:	ldr	ip, [r5]
   1e71c:	ldr	r2, [ip, #140]	; 0x8c
   1e720:	add	r0, r2, #7
   1e724:	add	r3, ip, r2
   1e728:	ldr	r7, [pc, #76]	; 1e77c <stopMidiNote@@Base+0x98>
   1e72c:	mvn	r1, #108	; 0x6c
   1e730:	add	r6, ip, r0
   1e734:	strb	r1, [r3, #8]
   1e738:	add	r7, pc, r7
   1e73c:	ldr	r4, [r4, #4]
   1e740:	add	r5, r2, #8
   1e744:	strb	r8, [r3, #11]
   1e748:	mov	r2, #0
   1e74c:	mvn	r0, #127	; 0x7f
   1e750:	strb	r2, [r3, #12]
   1e754:	strb	r0, [r3, #10]
   1e758:	mov	r0, #1
   1e75c:	strb	r4, [r3, #9]
   1e760:	strb	r2, [r3, #13]
   1e764:	strb	r2, [r3, #14]
   1e768:	str	r2, [r7]
   1e76c:	strb	r2, [r6, #8]
   1e770:	str	r5, [ip, #140]	; 0x8c
   1e774:	pop	{r4, r5, r6, r7, r8, pc}
   1e778:	andeq	r7, r1, ip, ror ip
   1e77c:	andeq	r7, r1, r8, asr #24

0001e780 <insertMidiWait@@Base>:
   1e780:	push	{r4, r5, r6, lr}
   1e784:	mov	r5, r1
   1e788:	ldr	ip, [r0, #140]	; 0x8c
   1e78c:	ldr	r3, [r0, #136]	; 0x88
   1e790:	ldr	r4, [pc, #124]	; 1e814 <insertMidiWait@@Base+0x94>
   1e794:	add	r2, ip, #7
   1e798:	cmp	r2, r3
   1e79c:	add	r4, pc, r4
   1e7a0:	movlt	r3, r0
   1e7a4:	str	r0, [r4]
   1e7a8:	blt	1e7b8 <insertMidiWait@@Base+0x38>
   1e7ac:	bl	1e0bc <seqbuf_dump@@Base>
   1e7b0:	ldr	r3, [r4]
   1e7b4:	ldr	ip, [r3, #140]	; 0x8c
   1e7b8:	add	r1, r5, #9
   1e7bc:	movw	r0, #26215	; 0x6667
   1e7c0:	movt	r0, #26214	; 0x6666
   1e7c4:	add	r2, r3, ip
   1e7c8:	asr	r5, r1, #31
   1e7cc:	add	ip, ip, #12
   1e7d0:	smull	r4, r6, r0, r1
   1e7d4:	ldr	r1, [pc, #60]	; 1e818 <insertMidiWait@@Base+0x98>
   1e7d8:	mvn	r4, #126	; 0x7e
   1e7dc:	mov	r0, #1
   1e7e0:	strb	r4, [r2, #8]
   1e7e4:	add	r1, pc, r1
   1e7e8:	mov	r4, #0
   1e7ec:	strb	r0, [r2, #9]
   1e7f0:	strb	r4, [r2, #10]
   1e7f4:	strb	r4, [r2, #11]
   1e7f8:	rsb	r5, r5, r6, asr #2
   1e7fc:	str	r5, [r3, ip]
   1e800:	ldr	r2, [r3, #140]	; 0x8c
   1e804:	str	r4, [r1]
   1e808:	add	r2, r2, #8
   1e80c:	str	r2, [r3, #140]	; 0x8c
   1e810:	pop	{r4, r5, r6, pc}
   1e814:	andeq	r7, r1, r4, ror #23
   1e818:	muleq	r1, ip, fp

0001e81c <enablePorts@@Base>:
   1e81c:	push	{r4, r5, r6, lr}
   1e820:	mov	r5, r1
   1e824:	sub	sp, sp, #8
   1e828:	mov	r1, r2
   1e82c:	mov	r4, r2
   1e830:	mov	r6, r0
   1e834:	mov	r2, #1
   1e838:	mov	r0, r5
   1e83c:	bl	14f28 <ioperm@plt>
   1e840:	cmn	r0, #1
   1e844:	movne	r0, #1
   1e848:	beq	1e854 <enablePorts@@Base+0x38>
   1e84c:	add	sp, sp, #8
   1e850:	pop	{r4, r5, r6, pc}
   1e854:	bl	15000 <__errno_location@plt>
   1e858:	ldr	r0, [r0]
   1e85c:	bl	14b44 <strerror@plt>
   1e860:	ldr	r1, [pc, #32]	; 1e888 <enablePorts@@Base+0x6c>
   1e864:	mov	r2, r5
   1e868:	mov	r3, r4
   1e86c:	add	r1, pc, r1
   1e870:	str	r0, [sp]
   1e874:	mov	r0, r6
   1e878:	bl	1aa88 <logMessage@@Base>
   1e87c:	mov	r0, #0
   1e880:	add	sp, sp, #8
   1e884:	pop	{r4, r5, r6, pc}
   1e888:	andeq	r6, r0, r0, lsr #1

0001e88c <disablePorts@@Base>:
   1e88c:	push	{r4, r5, lr}
   1e890:	mov	r2, #0
   1e894:	sub	sp, sp, #12
   1e898:	mov	r5, r0
   1e89c:	mov	r4, r1
   1e8a0:	bl	14f28 <ioperm@plt>
   1e8a4:	cmn	r0, #1
   1e8a8:	movne	r0, #1
   1e8ac:	beq	1e8b8 <disablePorts@@Base+0x2c>
   1e8b0:	add	sp, sp, #12
   1e8b4:	pop	{r4, r5, pc}
   1e8b8:	bl	15000 <__errno_location@plt>
   1e8bc:	ldr	r0, [r0]
   1e8c0:	bl	14b44 <strerror@plt>
   1e8c4:	ldr	r1, [pc, #32]	; 1e8ec <disablePorts@@Base+0x60>
   1e8c8:	mov	r2, r5
   1e8cc:	mov	r3, r4
   1e8d0:	add	r1, pc, r1
   1e8d4:	str	r0, [sp]
   1e8d8:	mov	r0, #3
   1e8dc:	bl	1aa88 <logMessage@@Base>
   1e8e0:	mov	r0, #0
   1e8e4:	add	sp, sp, #12
   1e8e8:	pop	{r4, r5, pc}
   1e8ec:	andeq	r6, r0, ip, asr r0

0001e8f0 <readPort1@@Base>:
   1e8f0:	b	14f64 <inb@plt>

0001e8f4 <writePort1@@Base>:
   1e8f4:	mov	r3, r0
   1e8f8:	mov	r0, r1
   1e8fc:	mov	r1, r3
   1e900:	b	14f34 <outb@plt>

0001e904 <installKernelModule@@Base>:
   1e904:	cmp	r1, #0
   1e908:	beq	1e918 <installKernelModule@@Base+0x14>
   1e90c:	ldr	r3, [r1]
   1e910:	cmp	r3, #0
   1e914:	bne	1e91c <installKernelModule@@Base+0x18>
   1e918:	b	1da64 <executeHostCommand@@Base+0x1b4>
   1e91c:	subs	r3, r3, #2
   1e920:	rsbs	r0, r3, #0
   1e924:	adcs	r0, r0, r3
   1e928:	bx	lr

0001e92c <canBeep@@Base>:
   1e92c:	ldr	r1, [pc, #36]	; 1e958 <canBeep@@Base+0x2c>
   1e930:	ldr	r0, [pc, #36]	; 1e95c <canBeep@@Base+0x30>
   1e934:	add	r1, pc, r1
   1e938:	push	{r3, lr}
   1e93c:	add	r1, r1, #4
   1e940:	add	r0, pc, r0
   1e944:	bl	1e904 <installKernelModule@@Base>
   1e948:	bl	1bae4 <getConsole@@Base>
   1e94c:	adds	r0, r0, #0
   1e950:	movne	r0, #1
   1e954:	pop	{r3, pc}
   1e958:	andeq	r7, r1, ip, asr #20
   1e95c:	andeq	r6, r0, ip

0001e960 <openCharacterDevice@@Base>:
   1e960:	ldr	ip, [pc, #716]	; 1ec34 <openCharacterDevice@@Base+0x2d4>
   1e964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e968:	mov	r7, r1
   1e96c:	ldr	r1, [pc, #708]	; 1ec38 <openCharacterDevice@@Base+0x2d8>
   1e970:	add	ip, pc, ip
   1e974:	mov	r9, r3
   1e978:	sub	sp, sp, #124	; 0x7c
   1e97c:	mov	r3, ip
   1e980:	mov	sl, r2
   1e984:	ldr	r6, [ip, r1]
   1e988:	mov	r8, r0
   1e98c:	ldr	r3, [r6]
   1e990:	str	r3, [sp, #116]	; 0x74
   1e994:	bl	1bdec <getDevicePath@@Base>
   1e998:	subs	r5, r0, #0
   1e99c:	beq	1ea9c <openCharacterDevice@@Base+0x13c>
   1e9a0:	mov	r1, r7
   1e9a4:	bl	14b08 <__open_2@plt>
   1e9a8:	cmn	r0, #1
   1e9ac:	mov	r4, r0
   1e9b0:	beq	1ea54 <openCharacterDevice@@Base+0xf4>
   1e9b4:	ldr	r1, [pc, #640]	; 1ec3c <openCharacterDevice@@Base+0x2dc>
   1e9b8:	mov	r0, #7
   1e9bc:	mov	r2, r5
   1e9c0:	mov	r3, r4
   1e9c4:	add	r1, pc, r1
   1e9c8:	bl	1aa88 <logMessage@@Base>
   1e9cc:	mov	r0, #3
   1e9d0:	mov	r1, r4
   1e9d4:	add	r2, sp, #24
   1e9d8:	bl	14eb0 <__fxstat@plt>
   1e9dc:	cmn	r0, #1
   1e9e0:	beq	1eaa4 <openCharacterDevice@@Base+0x144>
   1e9e4:	ldr	r3, [sp, #40]	; 0x28
   1e9e8:	and	r3, r3, #61440	; 0xf000
   1e9ec:	cmp	r3, #8192	; 0x2000
   1e9f0:	beq	1ea30 <openCharacterDevice@@Base+0xd0>
   1e9f4:	ldr	r1, [pc, #580]	; 1ec40 <openCharacterDevice@@Base+0x2e0>
   1e9f8:	mov	r0, #7
   1e9fc:	mov	r2, r5
   1ea00:	mov	r3, r4
   1ea04:	add	r1, pc, r1
   1ea08:	bl	1aa88 <logMessage@@Base>
   1ea0c:	mov	r0, r4
   1ea10:	bl	14c64 <close@plt>
   1ea14:	ldr	r1, [pc, #552]	; 1ec44 <openCharacterDevice@@Base+0x2e4>
   1ea18:	mov	r3, r4
   1ea1c:	mov	r0, #7
   1ea20:	add	r1, pc, r1
   1ea24:	mov	r2, r5
   1ea28:	mvn	r4, #0
   1ea2c:	bl	1aa88 <logMessage@@Base>
   1ea30:	mov	r0, r5
   1ea34:	bl	14ac0 <free@plt>
   1ea38:	ldr	r2, [sp, #116]	; 0x74
   1ea3c:	mov	r0, r4
   1ea40:	ldr	r3, [r6]
   1ea44:	cmp	r2, r3
   1ea48:	bne	1ebec <openCharacterDevice@@Base+0x28c>
   1ea4c:	add	sp, sp, #124	; 0x7c
   1ea50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea54:	bl	15000 <__errno_location@plt>
   1ea58:	ldr	r3, [pc, #488]	; 1ec48 <openCharacterDevice@@Base+0x2e8>
   1ea5c:	add	r3, pc, r3
   1ea60:	str	r3, [sp, #12]
   1ea64:	mov	fp, r0
   1ea68:	ldr	r0, [r0]
   1ea6c:	bl	14b44 <strerror@plt>
   1ea70:	ldr	r1, [sp, #12]
   1ea74:	mov	r2, r5
   1ea78:	mov	r3, r0
   1ea7c:	mov	r0, #7
   1ea80:	bl	1aa88 <logMessage@@Base>
   1ea84:	ldr	r3, [fp]
   1ea88:	cmp	r3, #2
   1ea8c:	beq	1ead0 <openCharacterDevice@@Base+0x170>
   1ea90:	cmp	r5, #0
   1ea94:	mvnne	r4, #0
   1ea98:	bne	1ea30 <openCharacterDevice@@Base+0xd0>
   1ea9c:	mvn	r4, #0
   1eaa0:	b	1ea38 <openCharacterDevice@@Base+0xd8>
   1eaa4:	bl	15000 <__errno_location@plt>
   1eaa8:	ldr	r0, [r0]
   1eaac:	bl	14b44 <strerror@plt>
   1eab0:	ldr	r1, [pc, #404]	; 1ec4c <openCharacterDevice@@Base+0x2ec>
   1eab4:	mov	r2, r4
   1eab8:	mov	r3, r5
   1eabc:	add	r1, pc, r1
   1eac0:	str	r0, [sp]
   1eac4:	mov	r0, #7
   1eac8:	bl	1aa88 <logMessage@@Base>
   1eacc:	b	1ea0c <openCharacterDevice@@Base+0xac>
   1ead0:	mov	r0, r5
   1ead4:	bl	14ac0 <free@plt>
   1ead8:	mov	r0, r8
   1eadc:	bl	1ad9c <locatePathName@@Base>
   1eae0:	bl	1b2ac <makeWritablePath@@Base>
   1eae4:	subs	r5, r0, #0
   1eae8:	beq	1ea9c <openCharacterDevice@@Base+0x13c>
   1eaec:	mov	r1, r7
   1eaf0:	bl	14b08 <__open_2@plt>
   1eaf4:	cmn	r0, #1
   1eaf8:	mov	r4, r0
   1eafc:	beq	1eb1c <openCharacterDevice@@Base+0x1bc>
   1eb00:	ldr	r1, [pc, #328]	; 1ec50 <openCharacterDevice@@Base+0x2f0>
   1eb04:	mov	r0, #7
   1eb08:	mov	r2, r5
   1eb0c:	mov	r3, r4
   1eb10:	add	r1, pc, r1
   1eb14:	bl	1aa88 <logMessage@@Base>
   1eb18:	b	1e9cc <openCharacterDevice@@Base+0x6c>
   1eb1c:	ldr	r0, [fp]
   1eb20:	bl	14b44 <strerror@plt>
   1eb24:	ldr	r1, [sp, #12]
   1eb28:	mov	r2, r5
   1eb2c:	mov	r3, r0
   1eb30:	mov	r0, #7
   1eb34:	bl	1aa88 <logMessage@@Base>
   1eb38:	ldr	r3, [fp]
   1eb3c:	cmp	r3, #2
   1eb40:	bne	1ea90 <openCharacterDevice@@Base+0x130>
   1eb44:	bic	lr, r9, #255	; 0xff
   1eb48:	ubfx	r8, sl, #0, #12
   1eb4c:	bic	r3, sl, #4080	; 0xff0
   1eb50:	uxtb	r4, r9
   1eb54:	lsr	r1, lr, #20
   1eb58:	lsl	r0, lr, #12
   1eb5c:	add	lr, sp, #120	; 0x78
   1eb60:	bic	r3, r3, #15
   1eb64:	mov	r2, #0
   1eb68:	orr	r4, r4, r8, lsl #8
   1eb6c:	orr	r2, r2, r0
   1eb70:	orr	r3, r3, r1
   1eb74:	orr	r2, r2, r4
   1eb78:	mov	r0, #1
   1eb7c:	strd	r2, [lr, #-104]!	; 0xffffff98
   1eb80:	mov	r1, r5
   1eb84:	mov	r2, #8576	; 0x2180
   1eb88:	mov	r3, lr
   1eb8c:	bl	14b50 <__xmknod@plt>
   1eb90:	cmn	r0, #1
   1eb94:	beq	1ebf0 <openCharacterDevice@@Base+0x290>
   1eb98:	ldr	r1, [pc, #180]	; 1ec54 <openCharacterDevice@@Base+0x2f4>
   1eb9c:	mov	r0, #7
   1eba0:	mov	r2, r5
   1eba4:	mov	r3, #8576	; 0x2180
   1eba8:	add	r1, pc, r1
   1ebac:	str	sl, [sp]
   1ebb0:	str	r9, [sp, #4]
   1ebb4:	bl	1aa88 <logMessage@@Base>
   1ebb8:	mov	r0, r5
   1ebbc:	mov	r1, r7
   1ebc0:	bl	14b08 <__open_2@plt>
   1ebc4:	cmn	r0, #1
   1ebc8:	mov	r4, r0
   1ebcc:	beq	1ec14 <openCharacterDevice@@Base+0x2b4>
   1ebd0:	ldr	r1, [pc, #128]	; 1ec58 <openCharacterDevice@@Base+0x2f8>
   1ebd4:	mov	r0, #7
   1ebd8:	mov	r2, r5
   1ebdc:	mov	r3, r4
   1ebe0:	add	r1, pc, r1
   1ebe4:	bl	1aa88 <logMessage@@Base>
   1ebe8:	b	1e9cc <openCharacterDevice@@Base+0x6c>
   1ebec:	bl	14d9c <__stack_chk_fail@plt>
   1ebf0:	ldr	r0, [fp]
   1ebf4:	bl	14b44 <strerror@plt>
   1ebf8:	ldr	r1, [pc, #92]	; 1ec5c <openCharacterDevice@@Base+0x2fc>
   1ebfc:	mov	r2, r5
   1ec00:	add	r1, pc, r1
   1ec04:	mov	r3, r0
   1ec08:	mov	r0, #7
   1ec0c:	bl	1aa88 <logMessage@@Base>
   1ec10:	b	1ea90 <openCharacterDevice@@Base+0x130>
   1ec14:	ldr	r0, [fp]
   1ec18:	bl	14b44 <strerror@plt>
   1ec1c:	ldr	r1, [sp, #12]
   1ec20:	mov	r2, r5
   1ec24:	mov	r3, r0
   1ec28:	mov	r0, #7
   1ec2c:	bl	1aa88 <logMessage@@Base>
   1ec30:	b	1ea90 <openCharacterDevice@@Base+0x130>
   1ec34:	andeq	r7, r1, r8, lsl #13
   1ec38:	andeq	r0, r0, r4, lsl #5
   1ec3c:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   1ec40:	strdeq	r5, [r0], -ip
   1ec44:	andeq	r6, r0, r4
   1ec48:	andeq	r5, r0, r4, lsl pc
   1ec4c:	andeq	r5, r0, r0, lsr #30
   1ec50:	andeq	r5, r0, r4, asr #28
   1ec54:	andeq	r5, r0, r4, lsl #28
   1ec58:	andeq	r5, r0, r4, ror sp
   1ec5c:	andeq	r5, r0, ip, lsl #27

0001ec60 <getUinputDevice@@Base>:
   1ec60:	ldr	r3, [pc, #616]	; 1eed0 <getUinputDevice@@Base+0x270>
   1ec64:	ldr	r1, [pc, #616]	; 1eed4 <getUinputDevice@@Base+0x274>
   1ec68:	add	r3, pc, r3
   1ec6c:	ldr	r2, [pc, #612]	; 1eed8 <getUinputDevice@@Base+0x278>
   1ec70:	push	{r4, r5, r6, r7, lr}
   1ec74:	add	r2, pc, r2
   1ec78:	ldr	r6, [r3, r1]
   1ec7c:	sub	sp, sp, #1120	; 0x460
   1ec80:	ldr	r0, [r2]
   1ec84:	sub	sp, sp, #4
   1ec88:	ldr	r3, [r6]
   1ec8c:	cmn	r0, #1
   1ec90:	str	r3, [sp, #1116]	; 0x45c
   1ec94:	beq	1ecb4 <getUinputDevice@@Base+0x54>
   1ec98:	ldr	r2, [sp, #1116]	; 0x45c
   1ec9c:	ldr	r3, [r6]
   1eca0:	cmp	r2, r3
   1eca4:	bne	1eecc <getUinputDevice@@Base+0x26c>
   1eca8:	add	sp, sp, #1120	; 0x460
   1ecac:	add	sp, sp, #4
   1ecb0:	pop	{r4, r5, r6, r7, pc}
   1ecb4:	ldr	r1, [pc, #544]	; 1eedc <getUinputDevice@@Base+0x27c>
   1ecb8:	ldr	r0, [pc, #544]	; 1eee0 <getUinputDevice@@Base+0x280>
   1ecbc:	add	r1, pc, r1
   1ecc0:	add	r0, pc, r0
   1ecc4:	ldr	r4, [r1, #8]!
   1ecc8:	bl	1e904 <installKernelModule@@Base>
   1eccc:	cmp	r0, #0
   1ecd0:	beq	1ece4 <getUinputDevice@@Base+0x84>
   1ecd4:	cmp	r4, #0
   1ecd8:	bne	1ece4 <getUinputDevice@@Base+0x84>
   1ecdc:	mov	r0, #500	; 0x1f4
   1ece0:	bl	1d078 <approximateDelay@@Base>
   1ece4:	ldr	r0, [pc, #504]	; 1eee4 <getUinputDevice@@Base+0x284>
   1ece8:	ldr	r1, [pc, #504]	; 1eee8 <getUinputDevice@@Base+0x288>
   1ecec:	add	r0, pc, r0
   1ecf0:	add	r1, pc, r1
   1ecf4:	bl	1be04 <resolveDeviceName@@Base>
   1ecf8:	subs	r4, r0, #0
   1ecfc:	beq	1ee90 <getUinputDevice@@Base+0x230>
   1ed00:	mov	r1, #1
   1ed04:	mov	r2, #10
   1ed08:	mov	r3, #223	; 0xdf
   1ed0c:	bl	1e960 <openCharacterDevice@@Base>
   1ed10:	cmn	r0, #1
   1ed14:	mov	r5, r0
   1ed18:	beq	1ee74 <getUinputDevice@@Base+0x214>
   1ed1c:	ldr	r1, [pc, #456]	; 1eeec <getUinputDevice@@Base+0x28c>
   1ed20:	mov	r3, r5
   1ed24:	mov	r2, r4
   1ed28:	mov	r0, #7
   1ed2c:	add	r1, pc, r1
   1ed30:	bl	1aa88 <logMessage@@Base>
   1ed34:	mov	r1, #0
   1ed38:	movw	r2, #1116	; 0x45c
   1ed3c:	mov	r0, sp
   1ed40:	bl	14c04 <memset@plt>
   1ed44:	ldr	r3, [pc, #420]	; 1eef0 <getUinputDevice@@Base+0x290>
   1ed48:	movw	r2, #1116	; 0x45c
   1ed4c:	add	r3, pc, r3
   1ed50:	ldm	r3, {r0, r1}
   1ed54:	lsr	r3, r1, #16
   1ed58:	strb	r3, [sp, #6]
   1ed5c:	str	r0, [sp]
   1ed60:	mov	r0, r5
   1ed64:	strh	r1, [sp, #4]
   1ed68:	mov	r1, sp
   1ed6c:	bl	14f58 <write@plt>
   1ed70:	cmn	r0, #1
   1ed74:	beq	1ee9c <getUinputDevice@@Base+0x23c>
   1ed78:	movw	r1, #21860	; 0x5564
   1ed7c:	mov	r0, r5
   1ed80:	movt	r1, #16388	; 0x4004
   1ed84:	mov	r2, #1
   1ed88:	bl	14cf4 <ioctl@plt>
   1ed8c:	ldr	r7, [pc, #352]	; 1eef4 <getUinputDevice@@Base+0x294>
   1ed90:	mov	r4, #0
   1ed94:	add	r7, pc, r7
   1ed98:	cmn	r0, #1
   1ed9c:	bne	1edb0 <getUinputDevice@@Base+0x150>
   1eda0:	b	1eeac <getUinputDevice@@Base+0x24c>
   1eda4:	add	r4, r4, #1
   1eda8:	cmp	r4, #768	; 0x300
   1edac:	beq	1edf0 <getUinputDevice@@Base+0x190>
   1edb0:	movw	r1, #21861	; 0x5565
   1edb4:	mov	r0, r5
   1edb8:	movt	r1, #16388	; 0x4004
   1edbc:	mov	r2, r4
   1edc0:	bl	14cf4 <ioctl@plt>
   1edc4:	cmn	r0, #1
   1edc8:	bne	1eda4 <getUinputDevice@@Base+0x144>
   1edcc:	bl	15000 <__errno_location@plt>
   1edd0:	ldr	r0, [r0]
   1edd4:	bl	14b44 <strerror@plt>
   1edd8:	mov	r1, r7
   1eddc:	mov	r2, r4
   1ede0:	mov	r3, r0
   1ede4:	mov	r0, #4
   1ede8:	bl	1aa88 <logMessage@@Base>
   1edec:	b	1eda4 <getUinputDevice@@Base+0x144>
   1edf0:	movw	r1, #21860	; 0x5564
   1edf4:	mov	r0, r5
   1edf8:	movt	r1, #16388	; 0x4004
   1edfc:	mov	r2, #20
   1ee00:	bl	14cf4 <ioctl@plt>
   1ee04:	cmn	r0, #1
   1ee08:	beq	1eebc <getUinputDevice@@Base+0x25c>
   1ee0c:	mov	r0, r5
   1ee10:	movw	r1, #21761	; 0x5501
   1ee14:	bl	14cf4 <ioctl@plt>
   1ee18:	cmn	r0, #1
   1ee1c:	beq	1ee34 <getUinputDevice@@Base+0x1d4>
   1ee20:	ldr	r3, [pc, #208]	; 1eef8 <getUinputDevice@@Base+0x298>
   1ee24:	mov	r0, r5
   1ee28:	add	r3, pc, r3
   1ee2c:	str	r5, [r3]
   1ee30:	b	1ec98 <getUinputDevice@@Base+0x38>
   1ee34:	ldr	r0, [pc, #192]	; 1eefc <getUinputDevice@@Base+0x29c>
   1ee38:	add	r0, pc, r0
   1ee3c:	bl	1ab50 <logSystemError@@Base>
   1ee40:	ldr	r4, [pc, #184]	; 1ef00 <getUinputDevice@@Base+0x2a0>
   1ee44:	mov	r0, r5
   1ee48:	add	r4, pc, r4
   1ee4c:	ldr	r3, [r4]
   1ee50:	cmp	r5, r3
   1ee54:	beq	1ec98 <getUinputDevice@@Base+0x38>
   1ee58:	bl	14c64 <close@plt>
   1ee5c:	ldr	r1, [pc, #160]	; 1ef04 <getUinputDevice@@Base+0x2a4>
   1ee60:	mov	r0, #7
   1ee64:	add	r1, pc, r1
   1ee68:	bl	1aa88 <logMessage@@Base>
   1ee6c:	ldr	r0, [r4]
   1ee70:	b	1ec98 <getUinputDevice@@Base+0x38>
   1ee74:	ldr	r1, [pc, #140]	; 1ef08 <getUinputDevice@@Base+0x2a8>
   1ee78:	mov	r0, #7
   1ee7c:	add	r1, pc, r1
   1ee80:	bl	1aa88 <logMessage@@Base>
   1ee84:	ldr	r3, [pc, #128]	; 1ef0c <getUinputDevice@@Base+0x2ac>
   1ee88:	ldr	r0, [pc, r3]
   1ee8c:	b	1ec98 <getUinputDevice@@Base+0x38>
   1ee90:	ldr	r3, [pc, #120]	; 1ef10 <getUinputDevice@@Base+0x2b0>
   1ee94:	ldr	r0, [pc, r3]
   1ee98:	b	1ec98 <getUinputDevice@@Base+0x38>
   1ee9c:	ldr	r0, [pc, #112]	; 1ef14 <getUinputDevice@@Base+0x2b4>
   1eea0:	add	r0, pc, r0
   1eea4:	bl	1ab50 <logSystemError@@Base>
   1eea8:	b	1ee40 <getUinputDevice@@Base+0x1e0>
   1eeac:	ldr	r0, [pc, #100]	; 1ef18 <getUinputDevice@@Base+0x2b8>
   1eeb0:	add	r0, pc, r0
   1eeb4:	bl	1ab50 <logSystemError@@Base>
   1eeb8:	b	1ee40 <getUinputDevice@@Base+0x1e0>
   1eebc:	ldr	r0, [pc, #88]	; 1ef1c <getUinputDevice@@Base+0x2bc>
   1eec0:	add	r0, pc, r0
   1eec4:	bl	1ab50 <logSystemError@@Base>
   1eec8:	b	1ee40 <getUinputDevice@@Base+0x1e0>
   1eecc:	bl	14d9c <__stack_chk_fail@plt>
   1eed0:	muleq	r1, r0, r3
   1eed4:	andeq	r0, r0, r4, lsl #5
   1eed8:	andeq	r7, r1, r0, ror #12
   1eedc:	andeq	r7, r1, r4, asr #13
   1eee0:	andeq	r5, r0, r4, asr lr
   1eee4:	strdeq	r7, [r1], -r8
   1eee8:	andeq	r5, r0, r4, lsr #28
   1eeec:	andeq	r5, r0, r4, lsl sp
   1eef0:	andeq	r5, r0, r4, asr r1
   1eef4:	andeq	r5, r0, r0, ror #25
   1eef8:	andeq	r7, r1, ip, lsr #9
   1eefc:	andeq	r5, r0, r8, lsl #25
   1ef00:	andeq	r7, r1, ip, lsl #9
   1ef04:	muleq	r0, r4, ip
   1ef08:	andeq	r5, r0, ip, lsl #25
   1ef0c:	andeq	r7, r1, ip, asr #8
   1ef10:	andeq	r7, r1, r0, asr #8
   1ef14:	andeq	r5, r0, r8, lsr ip
   1ef18:	andeq	r5, r0, r8, lsr #23
   1ef1c:	andeq	r5, r0, r4, ror #23

0001ef20 <hasInputEvent@@Base>:
   1ef20:	push	{r4, r5, r6, fp, lr}
   1ef24:	lsr	r3, r3, #5
   1ef28:	ldr	lr, [pc, #132]	; 1efb4 <hasInputEvent@@Base+0x94>
   1ef2c:	add	fp, sp, #16
   1ef30:	ldr	r4, [pc, #128]	; 1efb8 <hasInputEvent@@Base+0x98>
   1ef34:	sub	sp, sp, #12
   1ef38:	add	lr, pc, lr
   1ef3c:	add	r3, r3, #1
   1ef40:	add	r1, r1, #32
   1ef44:	ldr	r4, [lr, r4]
   1ef48:	orr	r1, r1, #-2147483648	; 0x80000000
   1ef4c:	lsl	r5, r3, #2
   1ef50:	movw	ip, #32760	; 0x7ff8
   1ef54:	add	r5, r5, #10
   1ef58:	orr	r1, r1, #17664	; 0x4500
   1ef5c:	and	ip, r5, ip
   1ef60:	orr	r1, r1, r3, lsl #18
   1ef64:	sub	sp, sp, ip
   1ef68:	ldr	r3, [r4]
   1ef6c:	mov	r6, r2
   1ef70:	mov	r2, sp
   1ef74:	str	r3, [fp, #-24]	; 0xffffffe8
   1ef78:	bl	14cf4 <ioctl@plt>
   1ef7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ef80:	cmn	r0, #1
   1ef84:	lsrne	r3, r6, #5
   1ef88:	andne	r6, r6, #31
   1ef8c:	moveq	r0, #0
   1ef90:	ldrne	r0, [sp, r3, lsl #2]
   1ef94:	ldr	r3, [r4]
   1ef98:	lsrne	r0, r0, r6
   1ef9c:	andne	r0, r0, #1
   1efa0:	cmp	r2, r3
   1efa4:	bne	1efb0 <hasInputEvent@@Base+0x90>
   1efa8:	sub	sp, fp, #16
   1efac:	pop	{r4, r5, r6, fp, pc}
   1efb0:	bl	14d9c <__stack_chk_fail@plt>
   1efb4:	andeq	r7, r1, r0, asr #1
   1efb8:	andeq	r0, r0, r4, lsl #5

0001efbc <writeInputEvent@@Base>:
   1efbc:	ldr	r3, [pc, #180]	; 1f078 <writeInputEvent@@Base+0xbc>
   1efc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1efc4:	mov	r9, r0
   1efc8:	ldr	r0, [pc, #172]	; 1f07c <writeInputEvent@@Base+0xc0>
   1efcc:	add	r3, pc, r3
   1efd0:	sub	sp, sp, #24
   1efd4:	mov	r8, r1
   1efd8:	mov	r7, r2
   1efdc:	ldr	r5, [r3, r0]
   1efe0:	ldr	r3, [r5]
   1efe4:	str	r3, [sp, #20]
   1efe8:	bl	1ec60 <getUinputDevice@@Base>
   1efec:	cmn	r0, #1
   1eff0:	mov	r6, r0
   1eff4:	moveq	r0, #0
   1eff8:	beq	1f048 <writeInputEvent@@Base+0x8c>
   1effc:	add	sl, sp, #4
   1f000:	mov	r4, #0
   1f004:	mov	r1, r4
   1f008:	str	r4, [sp, #4]
   1f00c:	mov	r0, sl
   1f010:	str	r4, [sp, #8]
   1f014:	str	r4, [sp, #12]
   1f018:	str	r4, [sp, #16]
   1f01c:	bl	14a90 <gettimeofday@plt>
   1f020:	mov	r1, sl
   1f024:	mov	r0, r6
   1f028:	mov	r2, #16
   1f02c:	strh	r9, [sp, #12]
   1f030:	strh	r8, [sp, #14]
   1f034:	str	r7, [sp, #16]
   1f038:	bl	14f58 <write@plt>
   1f03c:	cmn	r0, #1
   1f040:	movne	r0, #1
   1f044:	beq	1f060 <writeInputEvent@@Base+0xa4>
   1f048:	ldr	r2, [sp, #20]
   1f04c:	ldr	r3, [r5]
   1f050:	cmp	r2, r3
   1f054:	bne	1f074 <writeInputEvent@@Base+0xb8>
   1f058:	add	sp, sp, #24
   1f05c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f060:	ldr	r0, [pc, #24]	; 1f080 <writeInputEvent@@Base+0xc4>
   1f064:	add	r0, pc, r0
   1f068:	bl	1ab50 <logSystemError@@Base>
   1f06c:	mov	r0, r4
   1f070:	b	1f048 <writeInputEvent@@Base+0x8c>
   1f074:	bl	14d9c <__stack_chk_fail@plt>
   1f078:	andeq	r7, r1, ip, lsr #32
   1f07c:	andeq	r0, r0, r4, lsl #5
   1f080:			; <UNDEFINED> instruction: 0x00005ab8

0001f084 <writeKeyEvent@@Base>:
   1f084:	push	{r3, r4, r5, lr}
   1f088:	mov	r2, r1
   1f08c:	mov	r4, r0
   1f090:	mov	r5, r1
   1f094:	uxth	r1, r0
   1f098:	mov	r0, #1
   1f09c:	bl	1efbc <writeInputEvent@@Base>
   1f0a0:	cmp	r0, #0
   1f0a4:	popeq	{r3, r4, r5, pc}
   1f0a8:	cmp	r5, #0
   1f0ac:	bne	1f0e8 <writeKeyEvent@@Base+0x64>
   1f0b0:	ldr	r2, [pc, #84]	; 1f10c <writeKeyEvent@@Base+0x88>
   1f0b4:	and	r3, r4, #7
   1f0b8:	mov	r1, #1
   1f0bc:	add	r2, pc, r2
   1f0c0:	add	r4, r2, r4, lsr #3
   1f0c4:	ldrb	r2, [r4, #12]
   1f0c8:	bic	r3, r2, r1, lsl r3
   1f0cc:	strb	r3, [r4, #12]
   1f0d0:	mov	r0, #0
   1f0d4:	mov	r1, r0
   1f0d8:	mov	r2, r0
   1f0dc:	bl	1efbc <writeInputEvent@@Base>
   1f0e0:	mov	r0, #1
   1f0e4:	pop	{r3, r4, r5, pc}
   1f0e8:	ldr	r2, [pc, #32]	; 1f110 <writeKeyEvent@@Base+0x8c>
   1f0ec:	and	r3, r4, #7
   1f0f0:	mov	r1, #1
   1f0f4:	add	r2, pc, r2
   1f0f8:	add	r4, r2, r4, lsr #3
   1f0fc:	ldrb	r2, [r4, #12]
   1f100:	orr	r3, r2, r1, lsl r3
   1f104:	strb	r3, [r4, #12]
   1f108:	b	1f0d0 <writeKeyEvent@@Base+0x4c>
   1f10c:	andeq	r7, r1, r4, asr #5
   1f110:	andeq	r7, r1, ip, lsl #5

0001f114 <releaseAllKeys@@Base>:
   1f114:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f118:	mov	r6, #1
   1f11c:	ldr	r9, [pc, #88]	; 1f17c <releaseAllKeys@@Base+0x68>
   1f120:	mov	r7, #0
   1f124:	mov	r8, #0
   1f128:	add	r9, pc, r9
   1f12c:	b	1f13c <releaseAllKeys@@Base+0x28>
   1f130:	add	r8, r8, #1
   1f134:	cmp	r8, #768	; 0x300
   1f138:	beq	1f178 <releaseAllKeys@@Base+0x64>
   1f13c:	add	r3, r9, r8, lsr #3
   1f140:	and	r1, r8, #7
   1f144:	mov	r5, #0
   1f148:	ldrb	r2, [r3, #12]
   1f14c:	and	r3, r5, r7
   1f150:	lsr	r4, r2, r1
   1f154:	and	r2, r4, r6
   1f158:	orrs	r1, r2, r3
   1f15c:	beq	1f130 <releaseAllKeys@@Base+0x1c>
   1f160:	mov	r0, r8
   1f164:	mov	r1, r5
   1f168:	bl	1f084 <writeKeyEvent@@Base>
   1f16c:	cmp	r0, #0
   1f170:	bne	1f130 <releaseAllKeys@@Base+0x1c>
   1f174:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1f178:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1f17c:	andeq	r7, r1, r8, asr r2

0001f180 <newLockDescriptor@@Base>:
   1f180:	push	{r4, lr}
   1f184:	mov	r0, #32
   1f188:	bl	14f04 <malloc@plt>
   1f18c:	subs	r4, r0, #0
   1f190:	beq	1f1b0 <newLockDescriptor@@Base+0x30>
   1f194:	mov	r1, #0
   1f198:	bl	14fc4 <pthread_rwlock_init@plt>
   1f19c:	cmp	r0, #0
   1f1a0:	mov	r0, r4
   1f1a4:	bne	1f1ac <newLockDescriptor@@Base+0x2c>
   1f1a8:	pop	{r4, pc}
   1f1ac:	bl	14ac0 <free@plt>
   1f1b0:	mov	r0, #0
   1f1b4:	pop	{r4, pc}

0001f1b8 <freeLockDescriptor@@Base>:
   1f1b8:	push	{r4, lr}
   1f1bc:	mov	r4, r0
   1f1c0:	bl	14a78 <pthread_rwlock_destroy@plt>
   1f1c4:	mov	r0, r4
   1f1c8:	pop	{r4, lr}
   1f1cc:	b	14ac0 <free@plt>

0001f1d0 <obtainLock@@Base>:
   1f1d0:	tst	r1, #1
   1f1d4:	push	{r3, lr}
   1f1d8:	beq	1f1f4 <obtainLock@@Base+0x24>
   1f1dc:	tst	r1, #2
   1f1e0:	beq	1f208 <obtainLock@@Base+0x38>
   1f1e4:	bl	14fa0 <pthread_rwlock_trywrlock@plt>
   1f1e8:	rsbs	r0, r0, #1
   1f1ec:	movcc	r0, #0
   1f1f0:	pop	{r3, pc}
   1f1f4:	tst	r1, #2
   1f1f8:	bne	1f214 <obtainLock@@Base+0x44>
   1f1fc:	bl	14c28 <pthread_rwlock_rdlock@plt>
   1f200:	mov	r0, #1
   1f204:	pop	{r3, pc}
   1f208:	bl	14d90 <pthread_rwlock_wrlock@plt>
   1f20c:	mov	r0, #1
   1f210:	pop	{r3, pc}
   1f214:	bl	14db4 <pthread_rwlock_tryrdlock@plt>
   1f218:	rsbs	r0, r0, #1
   1f21c:	movcc	r0, #0
   1f220:	pop	{r3, pc}

0001f224 <releaseLock@@Base>:
   1f224:	b	14d78 <pthread_rwlock_unlock@plt>

0001f228 <getLockDescriptor@@Base>:
   1f228:	push	{r4, lr}
   1f22c:	mov	r4, r0
   1f230:	ldr	r0, [r0]
   1f234:	cmp	r0, #0
   1f238:	popne	{r4, pc}
   1f23c:	ldr	r0, [pc, #48]	; 1f274 <getLockDescriptor@@Base+0x4c>
   1f240:	add	r0, pc, r0
   1f244:	bl	14a18 <pthread_mutex_lock@plt>
   1f248:	ldr	r3, [r4]
   1f24c:	cmp	r3, #0
   1f250:	beq	1f268 <getLockDescriptor@@Base+0x40>
   1f254:	ldr	r0, [pc, #28]	; 1f278 <getLockDescriptor@@Base+0x50>
   1f258:	add	r0, pc, r0
   1f25c:	bl	15120 <pthread_mutex_unlock@plt>
   1f260:	ldr	r0, [r4]
   1f264:	pop	{r4, pc}
   1f268:	bl	1f180 <newLockDescriptor@@Base>
   1f26c:	str	r0, [r4]
   1f270:	b	1f254 <getLockDescriptor@@Base+0x2c>
   1f274:	andeq	r7, r1, ip, lsr #3
   1f278:	muleq	r1, r4, r1

0001f27c <getTextLength@@Base>:
   1f27c:	mov	r1, r0
   1f280:	mov	r0, #0
   1f284:	mov	r2, r0
   1f288:	b	14afc <mbstowcs@plt>

0001f28c <convertWcharToUtf8@@Base>:
   1f28c:	ldr	r2, [pc, #196]	; 1f358 <convertWcharToUtf8@@Base+0xcc>
   1f290:	mov	r3, r0
   1f294:	ldr	r0, [pc, #192]	; 1f35c <convertWcharToUtf8@@Base+0xd0>
   1f298:	bics	ip, r3, #127	; 0x7f
   1f29c:	add	r2, pc, r2
   1f2a0:	push	{r4, r5, r6, r7, r8, lr}
   1f2a4:	sub	sp, sp, #16
   1f2a8:	ldr	r7, [r2, r0]
   1f2ac:	mov	r8, r1
   1f2b0:	moveq	r6, #1
   1f2b4:	ldr	r2, [r7]
   1f2b8:	strbeq	r3, [r1]
   1f2bc:	str	r2, [sp, #12]
   1f2c0:	beq	1f330 <convertWcharToUtf8@@Base+0xa4>
   1f2c4:	add	lr, sp, #11
   1f2c8:	and	r4, r3, #63	; 0x3f
   1f2cc:	lsrs	r3, r3, #6
   1f2d0:	mov	ip, lr
   1f2d4:	orr	r5, r4, #128	; 0x80
   1f2d8:	sub	lr, lr, #1
   1f2dc:	strb	r5, [ip]
   1f2e0:	bne	1f2c8 <convertWcharToUtf8@@Base+0x3c>
   1f2e4:	add	r6, sp, #12
   1f2e8:	mov	r1, #1
   1f2ec:	rsb	r6, ip, r6
   1f2f0:	mov	r0, ip
   1f2f4:	rsb	r2, r6, #7
   1f2f8:	cmp	r4, r1, lsl r2
   1f2fc:	strbge	r3, [r0, #-1]
   1f300:	addge	r6, r6, #1
   1f304:	uxtblt	r2, r5
   1f308:	movge	r2, r3
   1f30c:	movge	ip, lr
   1f310:	rsb	r5, r6, #8
   1f314:	mvn	r3, #0
   1f318:	orr	r5, r2, r3, lsl r5
   1f31c:	mov	r1, ip
   1f320:	strb	r5, [ip]
   1f324:	mov	r0, r8
   1f328:	mov	r2, r6
   1f32c:	bl	14eec <memcpy@plt>
   1f330:	mov	r3, #0
   1f334:	ldr	r2, [sp, #12]
   1f338:	strb	r3, [r8, r6]
   1f33c:	mov	r0, r6
   1f340:	ldr	r3, [r7]
   1f344:	cmp	r2, r3
   1f348:	bne	1f354 <convertWcharToUtf8@@Base+0xc8>
   1f34c:	add	sp, sp, #16
   1f350:	pop	{r4, r5, r6, r7, r8, pc}
   1f354:	bl	14d9c <__stack_chk_fail@plt>
   1f358:	andeq	r6, r1, ip, asr sp
   1f35c:	andeq	r0, r0, r4, lsl #5

0001f360 <convertUtf8ToWchar@@Base>:
   1f360:	ldr	ip, [r1]
   1f364:	mov	r2, r0
   1f368:	push	{r4, r5}
   1f36c:	mvn	r0, #0
   1f370:	mov	r4, #0
   1f374:	mov	r5, #1
   1f378:	cmp	ip, #0
   1f37c:	beq	1f418 <convertUtf8ToWchar@@Base+0xb8>
   1f380:	ldr	r3, [r2]
   1f384:	add	ip, r3, #1
   1f388:	str	ip, [r2]
   1f38c:	ldrb	r3, [r3]
   1f390:	ldr	ip, [r1]
   1f394:	tst	r3, #128	; 0x80
   1f398:	sub	ip, ip, #1
   1f39c:	str	ip, [r1]
   1f3a0:	beq	1f478 <convertUtf8ToWchar@@Base+0x118>
   1f3a4:	tst	r3, #64	; 0x40
   1f3a8:	bne	1f420 <convertUtf8ToWchar@@Base+0xc0>
   1f3ac:	cmn	r0, #1
   1f3b0:	beq	1f3c4 <convertUtf8ToWchar@@Base+0x64>
   1f3b4:	subs	r4, r4, #1
   1f3b8:	and	r3, r3, #63	; 0x3f
   1f3bc:	orr	r0, r3, r0, lsl #6
   1f3c0:	bne	1f378 <convertUtf8ToWchar@@Base+0x18>
   1f3c4:	cmp	ip, #0
   1f3c8:	beq	1f418 <convertUtf8ToWchar@@Base+0xb8>
   1f3cc:	ldr	r3, [r2]
   1f3d0:	ldrb	ip, [r3]
   1f3d4:	and	ip, ip, #192	; 0xc0
   1f3d8:	cmp	ip, #128	; 0x80
   1f3dc:	beq	1f3f8 <convertUtf8ToWchar@@Base+0x98>
   1f3e0:	b	1f418 <convertUtf8ToWchar@@Base+0xb8>
   1f3e4:	ldr	r3, [r2]
   1f3e8:	ldrb	r0, [r3]
   1f3ec:	and	r0, r0, #192	; 0xc0
   1f3f0:	cmp	r0, #128	; 0x80
   1f3f4:	bne	1f414 <convertUtf8ToWchar@@Base+0xb4>
   1f3f8:	add	r3, r3, #1
   1f3fc:	str	r3, [r2]
   1f400:	ldr	r3, [r1]
   1f404:	sub	r3, r3, #1
   1f408:	str	r3, [r1]
   1f40c:	cmp	r3, #0
   1f410:	bne	1f3e4 <convertUtf8ToWchar@@Base+0x84>
   1f414:	mvn	r0, #0
   1f418:	pop	{r4, r5}
   1f41c:	bx	lr
   1f420:	tst	r3, #32
   1f424:	beq	1f460 <convertUtf8ToWchar@@Base+0x100>
   1f428:	tst	r3, #16
   1f42c:	beq	1f468 <convertUtf8ToWchar@@Base+0x108>
   1f430:	tst	r3, #8
   1f434:	beq	1f470 <convertUtf8ToWchar@@Base+0x110>
   1f438:	tst	r3, #4
   1f43c:	moveq	r4, #4
   1f440:	bne	1f4a4 <convertUtf8ToWchar@@Base+0x144>
   1f444:	cmn	r0, #1
   1f448:	bne	1f480 <convertUtf8ToWchar@@Base+0x120>
   1f44c:	rsb	r0, r4, #6
   1f450:	lsl	r0, r5, r0
   1f454:	sub	r0, r0, #1
   1f458:	and	r0, r0, r3
   1f45c:	b	1f378 <convertUtf8ToWchar@@Base+0x18>
   1f460:	mov	r4, #1
   1f464:	b	1f444 <convertUtf8ToWchar@@Base+0xe4>
   1f468:	mov	r4, #2
   1f46c:	b	1f444 <convertUtf8ToWchar@@Base+0xe4>
   1f470:	mov	r4, #3
   1f474:	b	1f444 <convertUtf8ToWchar@@Base+0xe4>
   1f478:	cmn	r0, #1
   1f47c:	beq	1f4b4 <convertUtf8ToWchar@@Base+0x154>
   1f480:	ldr	r3, [r2]
   1f484:	mvn	r0, #0
   1f488:	add	r3, r3, r0
   1f48c:	str	r3, [r2]
   1f490:	ldr	r3, [r1]
   1f494:	pop	{r4, r5}
   1f498:	add	r3, r3, #1
   1f49c:	str	r3, [r1]
   1f4a0:	bx	lr
   1f4a4:	tst	r3, #2
   1f4a8:	bne	1f4bc <convertUtf8ToWchar@@Base+0x15c>
   1f4ac:	mov	r4, #5
   1f4b0:	b	1f444 <convertUtf8ToWchar@@Base+0xe4>
   1f4b4:	mov	r0, r3
   1f4b8:	b	1f3c4 <convertUtf8ToWchar@@Base+0x64>
   1f4bc:	cmn	r0, #1
   1f4c0:	beq	1f3c4 <convertUtf8ToWchar@@Base+0x64>
   1f4c4:	b	1f480 <convertUtf8ToWchar@@Base+0x120>

0001f4c8 <getUtf8Length@@Base>:
   1f4c8:	ldr	r3, [pc, #136]	; 1f558 <getUtf8Length@@Base+0x90>
   1f4cc:	ldr	r2, [pc, #136]	; 1f55c <getUtf8Length@@Base+0x94>
   1f4d0:	push	{r4, r5, r6, r7, r8, lr}
   1f4d4:	add	r3, pc, r3
   1f4d8:	sub	sp, sp, #16
   1f4dc:	str	r0, [sp, #4]
   1f4e0:	ldr	r8, [r3, r2]
   1f4e4:	ldrb	r4, [r0]
   1f4e8:	ldr	r3, [r8]
   1f4ec:	cmp	r4, #0
   1f4f0:	str	r3, [sp, #12]
   1f4f4:	beq	1f538 <getUtf8Length@@Base+0x70>
   1f4f8:	add	r7, sp, #4
   1f4fc:	add	r6, sp, #8
   1f500:	mov	r4, #0
   1f504:	mov	r5, #7
   1f508:	b	1f520 <getUtf8Length@@Base+0x58>
   1f50c:	ldr	r3, [sp, #4]
   1f510:	add	r4, r4, #1
   1f514:	ldrb	r3, [r3]
   1f518:	cmp	r3, #0
   1f51c:	beq	1f538 <getUtf8Length@@Base+0x70>
   1f520:	mov	r0, r7
   1f524:	mov	r1, r6
   1f528:	str	r5, [sp, #8]
   1f52c:	bl	1f360 <convertUtf8ToWchar@@Base>
   1f530:	cmn	r0, #1
   1f534:	bne	1f50c <getUtf8Length@@Base+0x44>
   1f538:	ldr	r2, [sp, #12]
   1f53c:	mov	r0, r4
   1f540:	ldr	r3, [r8]
   1f544:	cmp	r2, r3
   1f548:	bne	1f554 <getUtf8Length@@Base+0x8c>
   1f54c:	add	sp, sp, #16
   1f550:	pop	{r4, r5, r6, r7, r8, pc}
   1f554:	bl	14d9c <__stack_chk_fail@plt>
   1f558:	andeq	r6, r1, r4, lsr #22
   1f55c:	andeq	r0, r0, r4, lsl #5

0001f560 <convertUtf8ToWchars@@Base>:
   1f560:	ldr	r3, [pc, #188]	; 1f624 <convertUtf8ToWchars@@Base+0xc4>
   1f564:	push	{r4, r5, r6, r7, r8, r9, lr}
   1f568:	mov	r5, r0
   1f56c:	ldr	r0, [pc, #180]	; 1f628 <convertUtf8ToWchars@@Base+0xc8>
   1f570:	add	r3, pc, r3
   1f574:	mov	r6, r1
   1f578:	ldr	r1, [r5]
   1f57c:	mov	r4, r2
   1f580:	sub	sp, sp, #12
   1f584:	ldr	r9, [r3, r0]
   1f588:	ldrb	r2, [r1]
   1f58c:	ldr	r3, [r9]
   1f590:	cmp	r2, #0
   1f594:	str	r3, [sp, #4]
   1f598:	beq	1f614 <convertUtf8ToWchars@@Base+0xb4>
   1f59c:	cmp	r4, #1
   1f5a0:	movhi	r7, #7
   1f5a4:	bhi	1f5d8 <convertUtf8ToWchars@@Base+0x78>
   1f5a8:	b	1f614 <convertUtf8ToWchars@@Base+0xb4>
   1f5ac:	ldr	r3, [r6]
   1f5b0:	sub	r4, r4, #1
   1f5b4:	add	r2, r3, #4
   1f5b8:	str	r2, [r6]
   1f5bc:	str	r0, [r3]
   1f5c0:	ldr	r3, [r5]
   1f5c4:	ldrb	r3, [r3]
   1f5c8:	cmp	r3, #0
   1f5cc:	beq	1f614 <convertUtf8ToWchars@@Base+0xb4>
   1f5d0:	cmp	r4, #1
   1f5d4:	beq	1f5f0 <convertUtf8ToWchars@@Base+0x90>
   1f5d8:	mov	r0, r5
   1f5dc:	mov	r1, sp
   1f5e0:	str	r7, [sp]
   1f5e4:	bl	1f360 <convertUtf8ToWchar@@Base>
   1f5e8:	cmn	r0, #1
   1f5ec:	bne	1f5ac <convertUtf8ToWchars@@Base+0x4c>
   1f5f0:	ldr	r3, [r6]
   1f5f4:	mov	r2, #0
   1f5f8:	str	r2, [r3]
   1f5fc:	ldr	r2, [sp, #4]
   1f600:	ldr	r3, [r9]
   1f604:	cmp	r2, r3
   1f608:	bne	1f620 <convertUtf8ToWchars@@Base+0xc0>
   1f60c:	add	sp, sp, #12
   1f610:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1f614:	cmp	r4, #0
   1f618:	beq	1f5fc <convertUtf8ToWchars@@Base+0x9c>
   1f61c:	b	1f5f0 <convertUtf8ToWchars@@Base+0x90>
   1f620:	bl	14d9c <__stack_chk_fail@plt>
   1f624:	andeq	r6, r1, r8, lsl #21
   1f628:	andeq	r0, r0, r4, lsl #5

0001f62c <makeUtf8FromWchars@@Base>:
   1f62c:	ldr	r3, [pc, #232]	; 1f71c <makeUtf8FromWchars@@Base+0xf0>
   1f630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f634:	mov	r6, r1
   1f638:	ldr	r1, [pc, #224]	; 1f720 <makeUtf8FromWchars@@Base+0xf4>
   1f63c:	add	r3, pc, r3
   1f640:	sub	sp, sp, #28
   1f644:	rsb	ip, r6, r6, lsl #3
   1f648:	mov	r5, r0
   1f64c:	add	r0, ip, #1
   1f650:	ldr	r1, [r3, r1]
   1f654:	mov	fp, r2
   1f658:	ldr	r3, [r1]
   1f65c:	str	r1, [sp, #4]
   1f660:	str	r3, [sp, #20]
   1f664:	bl	14f04 <malloc@plt>
   1f668:	subs	r9, r0, #0
   1f66c:	beq	1f710 <makeUtf8FromWchars@@Base+0xe4>
   1f670:	cmp	r6, #0
   1f674:	beq	1f708 <makeUtf8FromWchars@@Base+0xdc>
   1f678:	sub	r5, r5, #4
   1f67c:	add	r7, sp, #12
   1f680:	mov	sl, r9
   1f684:	mov	r4, #0
   1f688:	mov	r8, #32
   1f68c:	b	1f69c <makeUtf8FromWchars@@Base+0x70>
   1f690:	add	r4, r4, #1
   1f694:	cmp	r4, r6
   1f698:	beq	1f6d4 <makeUtf8FromWchars@@Base+0xa8>
   1f69c:	ldr	r0, [r5, #4]!
   1f6a0:	mov	r1, r7
   1f6a4:	bl	1f28c <convertWcharToUtf8@@Base>
   1f6a8:	subs	r2, r0, #0
   1f6ac:	strbeq	r8, [sl]
   1f6b0:	addeq	sl, sl, #1
   1f6b4:	beq	1f690 <makeUtf8FromWchars@@Base+0x64>
   1f6b8:	mov	r0, sl
   1f6bc:	mov	r1, r7
   1f6c0:	bl	14f88 <mempcpy@plt>
   1f6c4:	add	r4, r4, #1
   1f6c8:	cmp	r4, r6
   1f6cc:	mov	sl, r0
   1f6d0:	bne	1f69c <makeUtf8FromWchars@@Base+0x70>
   1f6d4:	cmp	fp, #0
   1f6d8:	mov	r2, #0
   1f6dc:	strb	r2, [sl]
   1f6e0:	rsbne	r3, r9, sl
   1f6e4:	strne	r3, [fp]
   1f6e8:	ldr	r1, [sp, #4]
   1f6ec:	mov	r0, r9
   1f6f0:	ldr	r2, [sp, #20]
   1f6f4:	ldr	r3, [r1]
   1f6f8:	cmp	r2, r3
   1f6fc:	bne	1f718 <makeUtf8FromWchars@@Base+0xec>
   1f700:	add	sp, sp, #28
   1f704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f708:	mov	sl, r9
   1f70c:	b	1f6d4 <makeUtf8FromWchars@@Base+0xa8>
   1f710:	bl	1ab94 <logMallocError@@Base>
   1f714:	b	1f6e8 <makeUtf8FromWchars@@Base+0xbc>
   1f718:	bl	14d9c <__stack_chk_fail@plt>
   1f71c:			; <UNDEFINED> instruction: 0x000169bc
   1f720:	andeq	r0, r0, r4, lsl #5

0001f724 <convertCharToUtf8@@Base>:
   1f724:	push	{r4, lr}
   1f728:	mov	r4, r1
   1f72c:	bl	1f988 <convertCharToWchar@@Base>
   1f730:	cmn	r0, #1
   1f734:	beq	1f744 <convertCharToUtf8@@Base+0x20>
   1f738:	mov	r1, r4
   1f73c:	pop	{r4, lr}
   1f740:	b	1f28c <convertWcharToUtf8@@Base>
   1f744:	mov	r0, #0
   1f748:	pop	{r4, pc}

0001f74c <convertUtf8ToChar@@Base>:
   1f74c:	push	{r3, lr}
   1f750:	bl	1f360 <convertUtf8ToWchar@@Base>
   1f754:	cmn	r0, #1
   1f758:	popeq	{r3, pc}
   1f75c:	pop	{r3, lr}
   1f760:	b	1fa64 <convertWcharToChar@@Base>

0001f764 <getWcharCharset@@Base>:
   1f764:	ldr	r3, [pc, #156]	; 1f808 <getWcharCharset@@Base+0xa4>
   1f768:	ldr	r2, [pc, #156]	; 1f80c <getWcharCharset@@Base+0xa8>
   1f76c:	push	{r4, r5, r6, lr}
   1f770:	add	r3, pc, r3
   1f774:	ldr	r5, [pc, #148]	; 1f810 <getWcharCharset@@Base+0xac>
   1f778:	sub	sp, sp, #40	; 0x28
   1f77c:	ldr	r4, [r3, r2]
   1f780:	add	r5, pc, r5
   1f784:	ldr	r0, [r5]
   1f788:	ldr	r3, [r4]
   1f78c:	cmp	r0, #0
   1f790:	str	r3, [sp, #36]	; 0x24
   1f794:	beq	1f7b0 <getWcharCharset@@Base+0x4c>
   1f798:	ldr	r2, [sp, #36]	; 0x24
   1f79c:	ldr	r3, [r4]
   1f7a0:	cmp	r2, r3
   1f7a4:	bne	1f804 <getWcharCharset@@Base+0xa0>
   1f7a8:	add	sp, sp, #40	; 0x28
   1f7ac:	pop	{r4, r5, r6, pc}
   1f7b0:	add	r6, sp, #20
   1f7b4:	ldr	ip, [pc, #88]	; 1f814 <getWcharCharset@@Base+0xb0>
   1f7b8:	mov	r1, #16
   1f7bc:	mov	r2, #4
   1f7c0:	add	ip, pc, ip
   1f7c4:	mov	r3, r1
   1f7c8:	str	ip, [sp]
   1f7cc:	mov	r0, r6
   1f7d0:	mov	ip, #76	; 0x4c
   1f7d4:	str	r2, [sp, #4]
   1f7d8:	str	ip, [sp, #8]
   1f7dc:	mov	r2, #1
   1f7e0:	bl	14f1c <__snprintf_chk@plt>
   1f7e4:	mov	r0, r6
   1f7e8:	bl	14c4c <__strdup@plt>
   1f7ec:	cmp	r0, #0
   1f7f0:	str	r0, [r5]
   1f7f4:	bne	1f798 <getWcharCharset@@Base+0x34>
   1f7f8:	bl	1ab94 <logMallocError@@Base>
   1f7fc:	ldr	r0, [r5]
   1f800:	b	1f798 <getWcharCharset@@Base+0x34>
   1f804:	bl	14d9c <__stack_chk_fail@plt>
   1f808:	andeq	r6, r1, r8, lsl #17
   1f80c:	andeq	r0, r0, r4, lsl #5
   1f810:	andeq	r6, r1, r4, lsl #25
   1f814:	muleq	r0, r4, r3

0001f818 <setCharset@@Base>:
   1f818:	push	{r3, r4, r5, lr}
   1f81c:	subs	r5, r0, #0
   1f820:	beq	1f89c <setCharset@@Base+0x84>
   1f824:	ldr	r3, [pc, #172]	; 1f8d8 <setCharset@@Base+0xc0>
   1f828:	add	r3, pc, r3
   1f82c:	ldr	r4, [r3, #4]
   1f830:	cmp	r4, #0
   1f834:	beq	1f84c <setCharset@@Base+0x34>
   1f838:	mov	r0, r4
   1f83c:	mov	r1, r5
   1f840:	bl	14fdc <strcmp@plt>
   1f844:	cmp	r0, #0
   1f848:	beq	1f894 <setCharset@@Base+0x7c>
   1f84c:	mov	r0, r5
   1f850:	bl	14c4c <__strdup@plt>
   1f854:	subs	r5, r0, #0
   1f858:	beq	1f8cc <setCharset@@Base+0xb4>
   1f85c:	bl	1fb98 <registerCharacterSet@@Base>
   1f860:	subs	r4, r0, #0
   1f864:	beq	1f8bc <setCharset@@Base+0xa4>
   1f868:	ldr	r3, [pc, #108]	; 1f8dc <setCharset@@Base+0xc4>
   1f86c:	add	r3, pc, r3
   1f870:	ldr	r0, [r3, #4]
   1f874:	cmp	r0, #0
   1f878:	beq	1f880 <setCharset@@Base+0x68>
   1f87c:	bl	14ac0 <free@plt>
   1f880:	ldr	r3, [pc, #88]	; 1f8e0 <setCharset@@Base+0xc8>
   1f884:	mov	r0, r5
   1f888:	add	r3, pc, r3
   1f88c:	str	r5, [r3, #4]
   1f890:	pop	{r3, r4, r5, pc}
   1f894:	mov	r0, r4
   1f898:	pop	{r3, r4, r5, pc}
   1f89c:	ldr	r3, [pc, #64]	; 1f8e4 <setCharset@@Base+0xcc>
   1f8a0:	add	r3, pc, r3
   1f8a4:	ldr	r0, [r3, #4]
   1f8a8:	cmp	r0, #0
   1f8ac:	popne	{r3, r4, r5, pc}
   1f8b0:	bl	1fb44 <getLocaleCharset@@Base>
   1f8b4:	mov	r5, r0
   1f8b8:	b	1f84c <setCharset@@Base+0x34>
   1f8bc:	mov	r0, r5
   1f8c0:	bl	14ac0 <free@plt>
   1f8c4:	mov	r0, r4
   1f8c8:	pop	{r3, r4, r5, pc}
   1f8cc:	bl	1ab94 <logMallocError@@Base>
   1f8d0:	mov	r0, r5
   1f8d4:	pop	{r3, r4, r5, pc}
   1f8d8:	ldrdeq	r6, [r1], -ip
   1f8dc:	muleq	r1, r8, fp
   1f8e0:	andeq	r6, r1, ip, ror fp
   1f8e4:	andeq	r6, r1, r4, ror #22

0001f8e8 <getCharset@@Base>:
   1f8e8:	mov	r0, #0
   1f8ec:	b	1f818 <setCharset@@Base>

0001f8f0 <lockCharset@@Base>:
   1f8f0:	ldr	r3, [pc, #36]	; 1f91c <lockCharset@@Base+0x2c>
   1f8f4:	push	{r4, lr}
   1f8f8:	add	r3, pc, r3
   1f8fc:	mov	r4, r0
   1f900:	add	r0, r3, #8
   1f904:	bl	1f228 <getLockDescriptor@@Base>
   1f908:	cmp	r0, #0
   1f90c:	popeq	{r4, pc}
   1f910:	mov	r1, r4
   1f914:	pop	{r4, lr}
   1f918:	b	1f1d0 <obtainLock@@Base>
   1f91c:	andeq	r6, r1, ip, lsl #22

0001f920 <unlockCharset@@Base>:
   1f920:	ldr	r0, [pc, #28]	; 1f944 <unlockCharset@@Base+0x24>
   1f924:	push	{r3, lr}
   1f928:	add	r0, pc, r0
   1f92c:	add	r0, r0, #8
   1f930:	bl	1f228 <getLockDescriptor@@Base>
   1f934:	cmp	r0, #0
   1f938:	popeq	{r3, pc}
   1f93c:	pop	{r3, lr}
   1f940:	b	1f224 <releaseLock@@Base>
   1f944:	ldrdeq	r6, [r1], -ip

0001f948 <isPosixLocale@@Base>:
   1f948:	push	{r3, lr}
   1f94c:	ldrb	r3, [r0]
   1f950:	cmp	r3, #67	; 0x43
   1f954:	bne	1f96c <isPosixLocale@@Base+0x24>
   1f958:	ldrb	r3, [r0, #1]
   1f95c:	cmp	r3, #0
   1f960:	bne	1f96c <isPosixLocale@@Base+0x24>
   1f964:	mov	r0, #1
   1f968:	pop	{r3, pc}
   1f96c:	ldr	r1, [pc, #16]	; 1f984 <isPosixLocale@@Base+0x3c>
   1f970:	add	r1, pc, r1
   1f974:	bl	14fdc <strcmp@plt>
   1f978:	rsbs	r0, r0, #1
   1f97c:	movcc	r0, #0
   1f980:	pop	{r3, pc}
   1f984:	strdeq	r5, [r0], -r0

0001f988 <convertCharToWchar@@Base>:
   1f988:	ldr	r3, [pc, #196]	; 1fa54 <convertCharToWchar@@Base+0xcc>
   1f98c:	ldr	r2, [pc, #196]	; 1fa58 <convertCharToWchar@@Base+0xd0>
   1f990:	push	{r4, r5, lr}
   1f994:	add	r3, pc, r3
   1f998:	sub	sp, sp, #44	; 0x2c
   1f99c:	strb	r0, [sp, #15]
   1f9a0:	ldr	r4, [r3, r2]
   1f9a4:	ldr	r3, [r4]
   1f9a8:	str	r3, [sp, #36]	; 0x24
   1f9ac:	bl	1f8e8 <getCharset@@Base>
   1f9b0:	cmp	r0, #0
   1f9b4:	mvneq	r0, #0
   1f9b8:	beq	1fa10 <convertCharToWchar@@Base+0x88>
   1f9bc:	ldr	r0, [pc, #152]	; 1fa5c <convertCharToWchar@@Base+0xd4>
   1f9c0:	add	r3, sp, #32
   1f9c4:	add	r1, sp, #16
   1f9c8:	str	r3, [sp]
   1f9cc:	add	r0, pc, r0
   1f9d0:	add	r2, sp, #20
   1f9d4:	add	r3, sp, #28
   1f9d8:	mov	ip, #1
   1f9dc:	ldr	r0, [r0]
   1f9e0:	add	lr, sp, #15
   1f9e4:	str	ip, [sp, #20]
   1f9e8:	add	ip, sp, #24
   1f9ec:	str	lr, [sp, #16]
   1f9f0:	str	ip, [sp, #28]
   1f9f4:	mov	ip, #4
   1f9f8:	str	ip, [sp, #32]
   1f9fc:	bl	14fe8 <iconv@plt>
   1fa00:	cmn	r0, #1
   1fa04:	mov	r5, r0
   1fa08:	beq	1fa28 <convertCharToWchar@@Base+0xa0>
   1fa0c:	ldr	r0, [sp, #24]
   1fa10:	ldr	r2, [sp, #36]	; 0x24
   1fa14:	ldr	r3, [r4]
   1fa18:	cmp	r2, r3
   1fa1c:	bne	1fa50 <convertCharToWchar@@Base+0xc8>
   1fa20:	add	sp, sp, #44	; 0x2c
   1fa24:	pop	{r4, r5, pc}
   1fa28:	bl	15000 <__errno_location@plt>
   1fa2c:	ldr	r0, [r0]
   1fa30:	bl	14b44 <strerror@plt>
   1fa34:	ldr	r1, [pc, #36]	; 1fa60 <convertCharToWchar@@Base+0xd8>
   1fa38:	add	r1, pc, r1
   1fa3c:	mov	r2, r0
   1fa40:	mov	r0, #7
   1fa44:	bl	1aa88 <logMessage@@Base>
   1fa48:	mov	r0, r5
   1fa4c:	b	1fa10 <convertCharToWchar@@Base+0x88>
   1fa50:	bl	14d9c <__stack_chk_fail@plt>
   1fa54:	andeq	r6, r1, r4, ror #12
   1fa58:	andeq	r0, r0, r4, lsl #5
   1fa5c:	andeq	r6, r1, ip, lsl #18
   1fa60:	andeq	r5, r0, r0, lsr r1

0001fa64 <convertWcharToChar@@Base>:
   1fa64:	ldr	r3, [pc, #200]	; 1fb34 <convertWcharToChar@@Base+0xd0>
   1fa68:	ldr	r2, [pc, #200]	; 1fb38 <convertWcharToChar@@Base+0xd4>
   1fa6c:	push	{r4, r5, lr}
   1fa70:	add	r3, pc, r3
   1fa74:	sub	sp, sp, #44	; 0x2c
   1fa78:	str	r0, [sp, #12]
   1fa7c:	ldr	r4, [r3, r2]
   1fa80:	ldr	r3, [r4]
   1fa84:	str	r3, [sp, #36]	; 0x24
   1fa88:	bl	1f8e8 <getCharset@@Base>
   1fa8c:	cmp	r0, #0
   1fa90:	beq	1fb00 <convertWcharToChar@@Base+0x9c>
   1fa94:	ldr	r0, [pc, #160]	; 1fb3c <convertWcharToChar@@Base+0xd8>
   1fa98:	add	r3, sp, #32
   1fa9c:	add	r1, sp, #20
   1faa0:	str	r3, [sp]
   1faa4:	add	r0, pc, r0
   1faa8:	add	r2, sp, #24
   1faac:	add	r3, sp, #28
   1fab0:	mov	ip, #4
   1fab4:	ldr	r0, [r0, #4]
   1fab8:	add	lr, sp, #12
   1fabc:	str	ip, [sp, #24]
   1fac0:	add	ip, sp, #19
   1fac4:	str	lr, [sp, #20]
   1fac8:	str	ip, [sp, #28]
   1facc:	mov	ip, #1
   1fad0:	str	ip, [sp, #32]
   1fad4:	bl	14fe8 <iconv@plt>
   1fad8:	cmn	r0, #1
   1fadc:	mov	r5, r0
   1fae0:	beq	1fb08 <convertWcharToChar@@Base+0xa4>
   1fae4:	ldrb	r0, [sp, #19]
   1fae8:	ldr	r2, [sp, #36]	; 0x24
   1faec:	ldr	r3, [r4]
   1faf0:	cmp	r2, r3
   1faf4:	bne	1fb30 <convertWcharToChar@@Base+0xcc>
   1faf8:	add	sp, sp, #44	; 0x2c
   1fafc:	pop	{r4, r5, pc}
   1fb00:	mvn	r0, #0
   1fb04:	b	1fae8 <convertWcharToChar@@Base+0x84>
   1fb08:	bl	15000 <__errno_location@plt>
   1fb0c:	ldr	r0, [r0]
   1fb10:	bl	14b44 <strerror@plt>
   1fb14:	ldr	r1, [pc, #36]	; 1fb40 <convertWcharToChar@@Base+0xdc>
   1fb18:	add	r1, pc, r1
   1fb1c:	mov	r2, r0
   1fb20:	mov	r0, #7
   1fb24:	bl	1aa88 <logMessage@@Base>
   1fb28:	mov	r0, r5
   1fb2c:	b	1fae8 <convertWcharToChar@@Base+0x84>
   1fb30:	bl	14d9c <__stack_chk_fail@plt>
   1fb34:	andeq	r6, r1, r8, lsl #11
   1fb38:	andeq	r0, r0, r4, lsl #5
   1fb3c:	andeq	r6, r1, r4, lsr r8
   1fb40:	andeq	r5, r0, r4, ror r0

0001fb44 <getLocaleCharset@@Base>:
   1fb44:	ldr	r1, [pc, #64]	; 1fb8c <getLocaleCharset@@Base+0x48>
   1fb48:	mov	r0, #6
   1fb4c:	push	{r4, lr}
   1fb50:	add	r1, pc, r1
   1fb54:	bl	14e80 <setlocale@plt>
   1fb58:	ldr	r4, [pc, #48]	; 1fb90 <getLocaleCharset@@Base+0x4c>
   1fb5c:	add	r4, pc, r4
   1fb60:	cmp	r0, #0
   1fb64:	beq	1fb74 <getLocaleCharset@@Base+0x30>
   1fb68:	bl	1f948 <isPosixLocale@@Base>
   1fb6c:	cmp	r0, #0
   1fb70:	beq	1fb80 <getLocaleCharset@@Base+0x3c>
   1fb74:	ldr	r3, [pc, #24]	; 1fb94 <getLocaleCharset@@Base+0x50>
   1fb78:	ldr	r0, [r4, r3]
   1fb7c:	pop	{r4, pc}
   1fb80:	mov	r0, #14
   1fb84:	pop	{r4, lr}
   1fb88:	b	14b98 <nl_langinfo@plt>
   1fb8c:	ldrdeq	r3, [r0], -r8
   1fb90:	muleq	r1, ip, r4
   1fb94:	andeq	r0, r0, r4, asr #5

0001fb98 <registerCharacterSet@@Base>:
   1fb98:	ldr	r3, [pc, #444]	; 1fd5c <registerCharacterSet@@Base+0x1c4>
   1fb9c:	ldr	r2, [pc, #444]	; 1fd60 <registerCharacterSet@@Base+0x1c8>
   1fba0:	add	r3, pc, r3
   1fba4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fba8:	sub	sp, sp, #64	; 0x40
   1fbac:	ldr	r8, [r3, r2]
   1fbb0:	mov	r6, r0
   1fbb4:	add	r4, sp, #20
   1fbb8:	ldr	r3, [r8]
   1fbbc:	str	r3, [sp, #60]	; 0x3c
   1fbc0:	bl	1f764 <getWcharCharset@@Base>
   1fbc4:	ldr	r3, [pc, #408]	; 1fd64 <registerCharacterSet@@Base+0x1cc>
   1fbc8:	mvn	r1, #0
   1fbcc:	ldrb	r9, [sp, #52]	; 0x34
   1fbd0:	mov	r2, #0
   1fbd4:	add	r3, pc, r3
   1fbd8:	ldrb	r7, [sp, #12]
   1fbdc:	ldrb	ip, [sp, #32]
   1fbe0:	add	sl, r3, #4
   1fbe4:	mov	r5, r3
   1fbe8:	bfc	r7, #0, #1
   1fbec:	bfc	ip, #0, #1
   1fbf0:	str	r3, [sp]
   1fbf4:	str	r6, [sp, #4]
   1fbf8:	mov	r3, r2
   1fbfc:	str	r6, [sp, #28]
   1fc00:	str	sl, [sp, #20]
   1fc04:	strb	r7, [sp, #12]
   1fc08:	strb	ip, [sp, #32]
   1fc0c:	str	r1, [sp, #16]
   1fc10:	str	r1, [sp, #36]	; 0x24
   1fc14:	str	r1, [sp, #56]	; 0x38
   1fc18:	str	r2, [sp, #40]	; 0x28
   1fc1c:	str	r2, [sp, #44]	; 0x2c
   1fc20:	str	r2, [sp, #48]	; 0x30
   1fc24:	str	r0, [sp, #8]
   1fc28:	str	r0, [sp, #24]
   1fc2c:	orr	r0, r9, #1
   1fc30:	mov	r9, r1
   1fc34:	strb	r0, [sp, #52]	; 0x34
   1fc38:	b	1fc64 <registerCharacterSet@@Base+0xcc>
   1fc3c:	ldr	r6, [r5]
   1fc40:	cmn	r6, #1
   1fc44:	strne	r9, [r4, #-4]
   1fc48:	beq	1fd38 <registerCharacterSet@@Base+0x1a0>
   1fc4c:	mov	r6, r4
   1fc50:	ldr	r5, [r4], #20
   1fc54:	cmp	r5, #0
   1fc58:	beq	1fcd4 <registerCharacterSet@@Base+0x13c>
   1fc5c:	ldrb	r3, [r7, #32]
   1fc60:	and	r3, r3, #1
   1fc64:	cmp	r3, #0
   1fc68:	sub	r7, r4, #20
   1fc6c:	bne	1fc3c <registerCharacterSet@@Base+0xa4>
   1fc70:	ldr	r0, [r4, #-12]
   1fc74:	ldr	r1, [r4, #-16]
   1fc78:	bl	14fb8 <iconv_open@plt>
   1fc7c:	cmn	r0, #1
   1fc80:	str	r0, [r4, #-4]
   1fc84:	bne	1fc4c <registerCharacterSet@@Base+0xb4>
   1fc88:	ldr	r0, [pc, #216]	; 1fd68 <registerCharacterSet@@Base+0x1d0>
   1fc8c:	mov	r9, sp
   1fc90:	add	r0, pc, r0
   1fc94:	bl	1ab50 <logSystemError@@Base>
   1fc98:	cmp	r7, r9
   1fc9c:	subne	r5, r7, #20
   1fca0:	movne	r4, r5
   1fca4:	beq	1fccc <registerCharacterSet@@Base+0x134>
   1fca8:	rsb	r3, r7, r4
   1fcac:	add	r3, r3, r5
   1fcb0:	ldr	r0, [r3, #36]	; 0x24
   1fcb4:	cmn	r0, #1
   1fcb8:	beq	1fcc0 <registerCharacterSet@@Base+0x128>
   1fcbc:	bl	14e98 <iconv_close@plt>
   1fcc0:	cmp	r9, r4
   1fcc4:	sub	r4, r4, #20
   1fcc8:	bne	1fca8 <registerCharacterSet@@Base+0x110>
   1fccc:	mov	r0, #0
   1fcd0:	b	1fd1c <registerCharacterSet@@Base+0x184>
   1fcd4:	mov	r9, sp
   1fcd8:	cmp	r6, r9
   1fcdc:	beq	1fd18 <registerCharacterSet@@Base+0x180>
   1fce0:	sub	r4, r6, #4
   1fce4:	ldr	r5, [r4]
   1fce8:	sub	r6, r6, #20
   1fcec:	cmn	r5, #1
   1fcf0:	beq	1fd0c <registerCharacterSet@@Base+0x174>
   1fcf4:	ldr	r7, [r4, #-16]
   1fcf8:	ldr	r0, [r7]
   1fcfc:	cmn	r0, #1
   1fd00:	beq	1fd08 <registerCharacterSet@@Base+0x170>
   1fd04:	bl	14e98 <iconv_close@plt>
   1fd08:	str	r5, [r7]
   1fd0c:	cmp	r6, r9
   1fd10:	sub	r4, r4, #20
   1fd14:	bne	1fce4 <registerCharacterSet@@Base+0x14c>
   1fd18:	mov	r0, #1
   1fd1c:	ldr	r2, [sp, #60]	; 0x3c
   1fd20:	ldr	r3, [r8]
   1fd24:	cmp	r2, r3
   1fd28:	bne	1fd34 <registerCharacterSet@@Base+0x19c>
   1fd2c:	add	sp, sp, #64	; 0x40
   1fd30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fd34:	bl	14d9c <__stack_chk_fail@plt>
   1fd38:	ldr	r0, [r4, #-12]
   1fd3c:	ldr	r1, [r4, #-16]
   1fd40:	bl	14fb8 <iconv_open@plt>
   1fd44:	cmn	r0, #1
   1fd48:	str	r0, [r4, #-4]
   1fd4c:	beq	1fc88 <registerCharacterSet@@Base+0xf0>
   1fd50:	str	r0, [r5]
   1fd54:	str	r6, [r4, #-4]
   1fd58:	b	1fc4c <registerCharacterSet@@Base+0xb4>
   1fd5c:	andeq	r6, r1, r8, asr r4
   1fd60:	andeq	r0, r0, r4, lsl #5
   1fd64:	andeq	r6, r1, r4, lsl #14
   1fd68:	andeq	r4, r0, r8, lsr #30

0001fd6c <isHexadecimalDigit@@Base>:
   1fd6c:	sub	r3, r0, #48	; 0x30
   1fd70:	cmp	r3, #9
   1fd74:	strls	r3, [r1]
   1fd78:	bls	1fda4 <isHexadecimalDigit@@Base+0x38>
   1fd7c:	sub	r3, r0, #97	; 0x61
   1fd80:	cmp	r3, #5
   1fd84:	subls	r0, r0, #87	; 0x57
   1fd88:	strls	r0, [r1]
   1fd8c:	bls	1fda4 <isHexadecimalDigit@@Base+0x38>
   1fd90:	sub	r3, r0, #65	; 0x41
   1fd94:	cmp	r3, #5
   1fd98:	bhi	1fdb4 <isHexadecimalDigit@@Base+0x48>
   1fd9c:	sub	r0, r0, #55	; 0x37
   1fda0:	str	r0, [r1]
   1fda4:	mov	r3, #4
   1fda8:	mov	r0, #1
   1fdac:	str	r3, [r2]
   1fdb0:	bx	lr
   1fdb4:	mov	r0, #0
   1fdb8:	bx	lr

0001fdbc <isOctalDigit@@Base>:
   1fdbc:	sub	r0, r0, #48	; 0x30
   1fdc0:	cmp	r0, #7
   1fdc4:	strls	r0, [r1]
   1fdc8:	movls	r3, #3
   1fdcc:	movls	r0, #1
   1fdd0:	strls	r3, [r2]
   1fdd4:	movhi	r0, #0
   1fdd8:	bx	lr
   1fddc:	push	{r4, lr}
   1fde0:	mov	r4, r0
   1fde4:	ldr	r0, [r0]
   1fde8:	cmp	r0, #0
   1fdec:	beq	1fdf4 <isOctalDigit@@Base+0x38>
   1fdf0:	bl	14ac0 <free@plt>
   1fdf4:	ldr	r0, [r4, #8]
   1fdf8:	cmp	r0, #0
   1fdfc:	beq	1fe04 <isOctalDigit@@Base+0x48>
   1fe00:	bl	14ac0 <free@plt>
   1fe04:	mov	r0, r4
   1fe08:	pop	{r4, lr}
   1fe0c:	b	14ac0 <free@plt>
   1fe10:	push	{r3, lr}
   1fe14:	ldr	r2, [r0, #4]
   1fe18:	ldr	r3, [r1, #4]
   1fe1c:	cmp	r2, r3
   1fe20:	beq	1fe2c <isOctalDigit@@Base+0x70>
   1fe24:	mov	r0, #0
   1fe28:	pop	{r3, pc}
   1fe2c:	ldr	r0, [r0]
   1fe30:	ldr	r1, [r1]
   1fe34:	bl	14c70 <wmemcmp@plt>
   1fe38:	rsbs	r0, r0, #1
   1fe3c:	movcc	r0, #0
   1fe40:	pop	{r3, pc}
   1fe44:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1fe48:	mov	r8, r0
   1fe4c:	mov	r0, #16
   1fe50:	mov	r6, r1
   1fe54:	bl	14f04 <malloc@plt>
   1fe58:	subs	r4, r0, #0
   1fe5c:	beq	1fecc <isOctalDigit@@Base+0x110>
   1fe60:	mov	r3, r4
   1fe64:	mov	r5, #0
   1fe68:	str	r5, [r3], #4
   1fe6c:	add	r3, r3, #4
   1fe70:	str	r5, [r4, #4]
   1fe74:	str	r5, [r3], #4
   1fe78:	str	r5, [r3]
   1fe7c:	ldr	r7, [r6, #4]
   1fe80:	lsl	r0, r7, #2
   1fe84:	bl	14f04 <malloc@plt>
   1fe88:	subs	r9, r0, #0
   1fe8c:	beq	1fef0 <isOctalDigit@@Base+0x134>
   1fe90:	mov	r2, r7
   1fe94:	ldr	r1, [r6]
   1fe98:	bl	14ba4 <wmemcpy@plt>
   1fe9c:	mov	r1, r4
   1fea0:	str	r0, [r4]
   1fea4:	mov	r0, r8
   1fea8:	ldr	r3, [r6, #4]
   1feac:	str	r5, [r4, #8]
   1feb0:	str	r5, [r4, #12]
   1feb4:	str	r3, [r4, #4]
   1feb8:	bl	215ac <enqueueItem@@Base>
   1febc:	cmp	r0, r5
   1fec0:	beq	1fed8 <isOctalDigit@@Base+0x11c>
   1fec4:	mov	r0, r4
   1fec8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1fecc:	bl	1ab94 <logMallocError@@Base>
   1fed0:	mov	r0, r4
   1fed4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1fed8:	mov	r0, r9
   1fedc:	bl	14ac0 <free@plt>
   1fee0:	mov	r0, r4
   1fee4:	bl	14ac0 <free@plt>
   1fee8:	mov	r0, #0
   1feec:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1fef0:	bl	1ab94 <logMallocError@@Base>
   1fef4:	b	1fee0 <isOctalDigit@@Base+0x124>
   1fef8:	push	{r4, r5, r6, r7, r8, lr}
   1fefc:	subs	r4, r3, #0
   1ff00:	mov	r5, r0
   1ff04:	mov	r7, r1
   1ff08:	mov	r8, r2
   1ff0c:	moveq	r6, r4
   1ff10:	bne	1ff34 <isOctalDigit@@Base+0x178>
   1ff14:	ldr	r0, [r5]
   1ff18:	cmp	r0, #0
   1ff1c:	beq	1ff24 <isOctalDigit@@Base+0x168>
   1ff20:	bl	14ac0 <free@plt>
   1ff24:	str	r6, [r5]
   1ff28:	mov	r0, #1
   1ff2c:	str	r4, [r7]
   1ff30:	pop	{r4, r5, r6, r7, r8, pc}
   1ff34:	lsl	r0, r4, #2
   1ff38:	bl	14f04 <malloc@plt>
   1ff3c:	subs	r6, r0, #0
   1ff40:	beq	1ff54 <isOctalDigit@@Base+0x198>
   1ff44:	mov	r1, r8
   1ff48:	mov	r2, r4
   1ff4c:	bl	14ba4 <wmemcpy@plt>
   1ff50:	b	1ff14 <isOctalDigit@@Base+0x158>
   1ff54:	bl	1ab94 <logMallocError@@Base>
   1ff58:	mov	r0, r6
   1ff5c:	pop	{r4, r5, r6, r7, r8, pc}
   1ff60:	push	{r3, r4, r5, lr}
   1ff64:	ldr	r3, [pc, #68]	; 1ffb0 <isOctalDigit@@Base+0x1f4>
   1ff68:	ldr	r4, [pc, r3]
   1ff6c:	cmp	r4, #0
   1ff70:	beq	1ff7c <isOctalDigit@@Base+0x1c0>
   1ff74:	mov	r0, r4
   1ff78:	pop	{r3, r4, r5, pc}
   1ff7c:	ldr	r0, [pc, #48]	; 1ffb4 <isOctalDigit@@Base+0x1f8>
   1ff80:	mov	r1, r4
   1ff84:	add	r0, pc, r0
   1ff88:	bl	213bc <newQueue@@Base>
   1ff8c:	subs	r5, r0, #0
   1ff90:	beq	1ff9c <isOctalDigit@@Base+0x1e0>
   1ff94:	mov	r1, r4
   1ff98:	bl	21464 <setQueueData@@Base>
   1ff9c:	ldr	r3, [pc, #20]	; 1ffb8 <isOctalDigit@@Base+0x1fc>
   1ffa0:	mov	r0, r5
   1ffa4:	add	r3, pc, r3
   1ffa8:	str	r5, [r3]
   1ffac:	pop	{r3, r4, r5, pc}
   1ffb0:	andeq	r6, r1, r8, lsr #9
   1ffb4:			; <UNDEFINED> instruction: 0xfffffe50
   1ffb8:	andeq	r6, r1, ip, ror #8

0001ffbc <brlDotNumberToIndex@@Base>:
   1ffbc:	push	{r3, r4, r5, lr}
   1ffc0:	mov	r2, #8
   1ffc4:	ldr	r3, [pc, #48]	; 1fffc <brlDotNumberToIndex@@Base+0x40>
   1ffc8:	mov	r5, r1
   1ffcc:	ldr	ip, [pc, #44]	; 20000 <brlDotNumberToIndex@@Base+0x44>
   1ffd0:	mov	r1, r0
   1ffd4:	add	r3, pc, r3
   1ffd8:	ldr	r4, [r3, ip]
   1ffdc:	mov	r0, r4
   1ffe0:	bl	14ca0 <wmemchr@plt>
   1ffe4:	cmp	r0, #0
   1ffe8:	rsbne	r4, r4, r0
   1ffec:	movne	r0, #1
   1fff0:	asrne	r4, r4, #2
   1fff4:	strne	r4, [r5]
   1fff8:	pop	{r3, r4, r5, pc}
   1fffc:	andeq	r6, r1, r4, lsr #32
   20000:			; <UNDEFINED> instruction: 0x000002b4

00020004 <brlDotBitToIndex@@Base>:
   20004:	push	{r3, r4, r5, lr}
   20008:	mov	r2, #8
   2000c:	ldr	r3, [pc, #44]	; 20040 <brlDotBitToIndex@@Base+0x3c>
   20010:	mov	r5, r1
   20014:	ldr	ip, [pc, #40]	; 20044 <brlDotBitToIndex@@Base+0x40>
   20018:	mov	r1, r0
   2001c:	add	r3, pc, r3
   20020:	ldr	r4, [r3, ip]
   20024:	mov	r0, r4
   20028:	bl	15018 <memchr@plt>
   2002c:	cmp	r0, #0
   20030:	rsbne	r4, r4, r0
   20034:	strne	r4, [r5]
   20038:	movne	r0, #1
   2003c:	pop	{r3, r4, r5, pc}
   20040:	ldrdeq	r5, [r1], -ip
   20044:	muleq	r0, ip, r2

00020048 <reportDataError@@Base>:
   20048:	push	{r1, r2, r3}
   2004c:	cmp	r0, #0
   20050:	ldr	r3, [pc, #144]	; 200e8 <reportDataError@@Base+0xa0>
   20054:	ldr	r2, [pc, #144]	; 200ec <reportDataError@@Base+0xa4>
   20058:	add	r3, pc, r3
   2005c:	push	{r4, r5, lr}
   20060:	sub	sp, sp, #272	; 0x110
   20064:	ldr	r4, [r3, r2]
   20068:	ldr	r1, [sp, #284]	; 0x11c
   2006c:	ldr	r3, [r4]
   20070:	str	r3, [sp, #268]	; 0x10c
   20074:	beq	200d8 <reportDataError@@Base+0x90>
   20078:	ldm	r0, {r2, r3}
   2007c:	cmp	r3, #0
   20080:	addne	r3, r0, #4
   20084:	add	r5, sp, #12
   20088:	add	ip, sp, #288	; 0x120
   2008c:	str	r1, [sp]
   20090:	mov	r1, #256	; 0x100
   20094:	str	ip, [sp, #4]
   20098:	mov	r0, r5
   2009c:	str	ip, [sp, #8]
   200a0:	bl	1b9ec <formatInputError@@Base>
   200a4:	ldr	r1, [pc, #68]	; 200f0 <reportDataError@@Base+0xa8>
   200a8:	mov	r2, r5
   200ac:	mov	r0, #4
   200b0:	add	r1, pc, r1
   200b4:	bl	1aa88 <logMessage@@Base>
   200b8:	ldr	r2, [sp, #268]	; 0x10c
   200bc:	ldr	r3, [r4]
   200c0:	cmp	r2, r3
   200c4:	bne	200e4 <reportDataError@@Base+0x9c>
   200c8:	add	sp, sp, #272	; 0x110
   200cc:	pop	{r4, r5, lr}
   200d0:	add	sp, sp, #12
   200d4:	bx	lr
   200d8:	mov	r3, r0
   200dc:	mov	r2, r0
   200e0:	b	20084 <reportDataError@@Base+0x3c>
   200e4:	bl	14d9c <__stack_chk_fail@plt>
   200e8:	andeq	r5, r1, r0, lsr #31
   200ec:	andeq	r0, r0, r4, lsl #5
   200f0:	andeq	r4, r0, r4, lsr #8

000200f4 <isKeyword@@Base>:
   200f4:	push	{r3, r4, r5, r6, r7, lr}
   200f8:	mov	r7, r2
   200fc:	mov	r6, r1
   20100:	mov	r5, r0
   20104:	bl	14a30 <wcslen@plt>
   20108:	cmp	r0, r7
   2010c:	mov	r4, r0
   20110:	beq	2011c <isKeyword@@Base+0x28>
   20114:	mov	r0, #0
   20118:	pop	{r3, r4, r5, r6, r7, pc}
   2011c:	cmp	r0, #0
   20120:	beq	20148 <isKeyword@@Base+0x54>
   20124:	ldr	r0, [r6], #4
   20128:	bl	14a3c <towlower@plt>
   2012c:	mov	r7, r0
   20130:	ldr	r0, [r5], #4
   20134:	bl	14a3c <towlower@plt>
   20138:	cmp	r7, r0
   2013c:	bne	20114 <isKeyword@@Base+0x20>
   20140:	subs	r4, r4, #1
   20144:	bne	20124 <isKeyword@@Base+0x30>
   20148:	mov	r0, #1
   2014c:	pop	{r3, r4, r5, r6, r7, pc}

00020150 <isNumber@@Base>:
   20150:	ldr	r3, [pc, #196]	; 2021c <isNumber@@Base+0xcc>
   20154:	cmp	r2, #0
   20158:	push	{r4, r5, r6, r7, fp, lr}
   2015c:	add	fp, sp, #20
   20160:	ldr	ip, [pc, #184]	; 20220 <isNumber@@Base+0xd0>
   20164:	sub	sp, sp, #8
   20168:	add	r3, pc, r3
   2016c:	mov	r5, r0
   20170:	movle	r0, #0
   20174:	ldr	r4, [r3, ip]
   20178:	ldr	r3, [r4]
   2017c:	str	r3, [fp, #-24]	; 0xffffffe8
   20180:	ble	201ec <isNumber@@Base+0x9c>
   20184:	add	r3, r2, #8
   20188:	mov	r6, sp
   2018c:	bic	r3, r3, #7
   20190:	sub	r1, r1, #4
   20194:	sub	sp, sp, r3
   20198:	mov	r7, #0
   2019c:	add	ip, sp, r2
   201a0:	mov	r0, sp
   201a4:	mov	r3, sp
   201a8:	strb	r7, [sp, r2]
   201ac:	ldr	r2, [r1, #4]!
   201b0:	cmp	r2, #255	; 0xff
   201b4:	bhi	20204 <isNumber@@Base+0xb4>
   201b8:	strb	r2, [r3], #1
   201bc:	cmp	r3, ip
   201c0:	bne	201ac <isNumber@@Base+0x5c>
   201c4:	sub	r1, fp, #28
   201c8:	mov	r2, #0
   201cc:	bl	14ab4 <strtol@plt>
   201d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   201d4:	ldrb	r3, [r3]
   201d8:	cmp	r3, #0
   201dc:	bne	2020c <isNumber@@Base+0xbc>
   201e0:	str	r0, [r5]
   201e4:	mov	r0, #1
   201e8:	mov	sp, r6
   201ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   201f0:	ldr	r3, [r4]
   201f4:	cmp	r2, r3
   201f8:	bne	20218 <isNumber@@Base+0xc8>
   201fc:	sub	sp, fp, #20
   20200:	pop	{r4, r5, r6, r7, fp, pc}
   20204:	mov	r0, #0
   20208:	b	201e8 <isNumber@@Base+0x98>
   2020c:	mov	r0, #0
   20210:	mov	sp, r6
   20214:	b	201ec <isNumber@@Base+0x9c>
   20218:	bl	14d9c <__stack_chk_fail@plt>
   2021c:	muleq	r1, r0, lr
   20220:	andeq	r0, r0, r4, lsl #5

00020224 <setGlobalDataVariable@@Base>:
   20224:	ldr	r3, [pc, #316]	; 20368 <setGlobalDataVariable@@Base+0x144>
   20228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2022c:	add	fp, sp, #32
   20230:	ldr	r2, [pc, #308]	; 2036c <setGlobalDataVariable@@Base+0x148>
   20234:	sub	sp, sp, #28
   20238:	add	r3, pc, r3
   2023c:	mov	r6, r1
   20240:	mov	sl, r0
   20244:	ldr	r2, [r3, r2]
   20248:	sub	r4, fp, #48	; 0x30
   2024c:	ldr	r3, [r2]
   20250:	str	r2, [fp, #-56]	; 0xffffffc8
   20254:	str	r3, [fp, #-40]	; 0xffffffd8
   20258:	bl	1f4c8 <getUtf8Length@@Base>
   2025c:	add	r7, r0, #1
   20260:	mov	r5, r0
   20264:	mov	r0, r6
   20268:	lsl	r7, r7, #2
   2026c:	add	r2, r7, #10
   20270:	bic	r2, r2, #7
   20274:	sub	sp, sp, r2
   20278:	bl	1f4c8 <getUtf8Length@@Base>
   2027c:	lsr	r2, r7, #2
   20280:	sub	r7, fp, #52	; 0x34
   20284:	mov	ip, sp
   20288:	mov	r1, r4
   2028c:	str	sp, [fp, #-48]	; 0xffffffd0
   20290:	str	ip, [fp, #-60]	; 0xffffffc4
   20294:	str	sl, [fp, #-52]	; 0xffffffcc
   20298:	add	r8, r0, #1
   2029c:	mov	r9, r0
   202a0:	mov	r0, r7
   202a4:	lsl	r8, r8, #2
   202a8:	add	lr, r8, #10
   202ac:	bic	lr, lr, #7
   202b0:	sub	sp, sp, lr
   202b4:	bl	1f560 <convertUtf8ToWchars@@Base>
   202b8:	mov	r0, r7
   202bc:	lsr	r2, r8, #2
   202c0:	mov	r1, r4
   202c4:	str	r6, [fp, #-52]	; 0xffffffcc
   202c8:	mov	r6, sp
   202cc:	str	sp, [fp, #-48]	; 0xffffffd0
   202d0:	bl	1f560 <convertUtf8ToWchars@@Base>
   202d4:	bl	1ff60 <isOctalDigit@@Base+0x1a4>
   202d8:	ldr	ip, [fp, #-60]	; 0xffffffc4
   202dc:	subs	r7, r0, #0
   202e0:	moveq	r0, r7
   202e4:	beq	20330 <setGlobalDataVariable@@Base+0x10c>
   202e8:	ldr	r1, [pc, #128]	; 20370 <setGlobalDataVariable@@Base+0x14c>
   202ec:	mov	r2, r4
   202f0:	str	ip, [fp, #-48]	; 0xffffffd0
   202f4:	add	r1, pc, r1
   202f8:	str	r5, [fp, #-44]	; 0xffffffd4
   202fc:	bl	21684 <findItem@@Base>
   20300:	cmp	r0, #0
   20304:	movne	r1, r0
   20308:	beq	2034c <setGlobalDataVariable@@Base+0x128>
   2030c:	add	r0, r1, #8
   20310:	mov	r2, r6
   20314:	mov	r3, r9
   20318:	add	r1, r1, #12
   2031c:	bl	1fef8 <isOctalDigit@@Base+0x13c>
   20320:	cmp	r0, #0
   20324:	movne	r0, #1
   20328:	bne	20330 <setGlobalDataVariable@@Base+0x10c>
   2032c:	mov	r0, #0
   20330:	ldr	r1, [fp, #-56]	; 0xffffffc8
   20334:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20338:	ldr	r3, [r1]
   2033c:	cmp	r2, r3
   20340:	bne	20364 <setGlobalDataVariable@@Base+0x140>
   20344:	sub	sp, fp, #32
   20348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2034c:	mov	r1, r4
   20350:	mov	r0, r7
   20354:	bl	1fe44 <isOctalDigit@@Base+0x88>
   20358:	subs	r1, r0, #0
   2035c:	beq	2032c <setGlobalDataVariable@@Base+0x108>
   20360:	b	2030c <setGlobalDataVariable@@Base+0xe8>
   20364:	bl	14d9c <__stack_chk_fail@plt>
   20368:	andeq	r5, r1, r0, asr #27
   2036c:	andeq	r0, r0, r4, lsl #5
   20370:			; <UNDEFINED> instruction: 0xfffffb14

00020374 <setGlobalTableVariables@@Base>:
   20374:	mov	r3, r0
   20378:	ldr	r0, [pc, #52]	; 203b4 <setGlobalTableVariables@@Base+0x40>
   2037c:	push	{r4, lr}
   20380:	add	r0, pc, r0
   20384:	mov	r4, r1
   20388:	mov	r1, r3
   2038c:	bl	20224 <setGlobalDataVariable@@Base>
   20390:	cmp	r0, #0
   20394:	popeq	{r4, pc}
   20398:	ldr	r0, [pc, #24]	; 203b8 <setGlobalTableVariables@@Base+0x44>
   2039c:	mov	r1, r4
   203a0:	add	r0, pc, r0
   203a4:	bl	20224 <setGlobalDataVariable@@Base>
   203a8:	adds	r0, r0, #0
   203ac:	movne	r0, #1
   203b0:	pop	{r4, pc}
   203b4:	andeq	r4, r0, ip, ror #16
   203b8:	andeq	r4, r0, ip, asr r8

000203bc <findDataOperand@@Base>:
   203bc:	push	{r4, r5, r6, r7, r8, lr}
   203c0:	mov	r6, r0
   203c4:	ldr	r4, [r0, #24]
   203c8:	mov	r8, r1
   203cc:	str	r4, [r0, #20]
   203d0:	b	203d8 <findDataOperand@@Base+0x1c>
   203d4:	str	r4, [r6, #20]
   203d8:	mov	r5, r4
   203dc:	add	r4, r4, #4
   203e0:	ldr	r0, [r5]
   203e4:	bl	14a54 <iswspace@plt>
   203e8:	subs	r7, r0, #0
   203ec:	bne	203d4 <findDataOperand@@Base+0x18>
   203f0:	str	r5, [r6, #24]
   203f4:	ldr	r3, [r5]
   203f8:	cmp	r3, #0
   203fc:	movne	r7, #1
   20400:	bne	20420 <findDataOperand@@Base+0x64>
   20404:	cmp	r8, #0
   20408:	beq	20420 <findDataOperand@@Base+0x64>
   2040c:	ldr	r1, [pc, #20]	; 20428 <findDataOperand@@Base+0x6c>
   20410:	mov	r0, r6
   20414:	mov	r2, r8
   20418:	add	r1, pc, r1
   2041c:	bl	20048 <reportDataError@@Base>
   20420:	mov	r0, r7
   20424:	pop	{r4, r5, r6, r7, r8, pc}
   20428:	strdeq	r4, [r0], -r8
   2042c:	ldr	r3, [pc, #228]	; 20518 <findDataOperand@@Base+0x15c>
   20430:	push	{r4, r5, r6, r7, fp, lr}
   20434:	add	fp, sp, #20
   20438:	ldr	r2, [pc, #220]	; 2051c <findDataOperand@@Base+0x160>
   2043c:	sub	sp, sp, #16
   20440:	add	r3, pc, r3
   20444:	mov	r4, r1
   20448:	mov	r7, r0
   2044c:	ldr	r6, [r3, r2]
   20450:	ldr	r3, [r6]
   20454:	str	r3, [fp, #-24]	; 0xffffffe8
   20458:	bl	14f10 <strlen@plt>
   2045c:	ldr	r3, [r4, #4]
   20460:	sub	r1, fp, #28
   20464:	str	r7, [fp, #-32]	; 0xffffffe0
   20468:	add	r3, r3, #1
   2046c:	str	r3, [r4, #4]
   20470:	add	r2, r0, #1
   20474:	sub	r0, fp, #32
   20478:	lsl	r3, r2, #2
   2047c:	add	r3, r3, #10
   20480:	bic	r3, r3, #7
   20484:	sub	sp, sp, r3
   20488:	str	sp, [fp, #-28]	; 0xffffffe4
   2048c:	bl	1f560 <convertUtf8ToWchars@@Base>
   20490:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20494:	ldrb	r1, [r2]
   20498:	cmp	r1, #0
   2049c:	bne	204f8 <findDataOperand@@Base+0x13c>
   204a0:	str	sp, [r4, #20]
   204a4:	mov	r0, r4
   204a8:	str	sp, [r4, #24]
   204ac:	bl	203bc <findDataOperand@@Base>
   204b0:	cmp	r0, #0
   204b4:	beq	204f0 <findDataOperand@@Base+0x134>
   204b8:	ldr	r3, [r4, #20]
   204bc:	ldr	r3, [r3]
   204c0:	cmp	r3, #35	; 0x23
   204c4:	beq	204f0 <findDataOperand@@Base+0x134>
   204c8:	mov	r0, r4
   204cc:	ldr	r3, [r4, #8]
   204d0:	ldr	r1, [r4, #12]
   204d4:	blx	r3
   204d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   204dc:	ldr	r3, [r6]
   204e0:	cmp	r2, r3
   204e4:	bne	20514 <findDataOperand@@Base+0x158>
   204e8:	sub	sp, fp, #20
   204ec:	pop	{r4, r5, r6, r7, fp, pc}
   204f0:	mov	r0, #1
   204f4:	b	204d8 <findDataOperand@@Base+0x11c>
   204f8:	ldr	r1, [pc, #32]	; 20520 <findDataOperand@@Base+0x164>
   204fc:	mov	r0, r4
   20500:	rsb	r2, r7, r2
   20504:	add	r1, pc, r1
   20508:	bl	20048 <reportDataError@@Base>
   2050c:	mov	r0, #1
   20510:	b	204d8 <findDataOperand@@Base+0x11c>
   20514:	bl	14d9c <__stack_chk_fail@plt>
   20518:			; <UNDEFINED> instruction: 0x00015bb8
   2051c:	andeq	r0, r0, r4, lsl #5
   20520:	andeq	r4, r0, r0, lsr #14

00020524 <getDataCharacter@@Base>:
   20524:	ldr	r3, [r0, #24]
   20528:	ldr	r2, [r3]
   2052c:	cmp	r2, #0
   20530:	addne	r2, r3, #4
   20534:	strne	r2, [r0, #24]
   20538:	ldrne	r3, [r3]
   2053c:	movne	r0, #1
   20540:	moveq	r0, r2
   20544:	strne	r3, [r1]
   20548:	bx	lr

0002054c <ungetDataCharacters@@Base>:
   2054c:	push	{r3, lr}
   20550:	mov	ip, r0
   20554:	ldr	r2, [r0, #24]
   20558:	ldr	r3, [r0, #20]
   2055c:	rsb	r3, r3, r2
   20560:	asr	r3, r3, #2
   20564:	cmp	r3, r1
   20568:	bcc	2057c <ungetDataCharacters@@Base+0x30>
   2056c:	sub	r1, r2, r1, lsl #2
   20570:	mov	r0, #1
   20574:	str	r1, [ip, #24]
   20578:	pop	{r3, pc}
   2057c:	mov	r2, r1
   20580:	ldr	r1, [pc, #12]	; 20594 <ungetDataCharacters@@Base+0x48>
   20584:	add	r1, pc, r1
   20588:	bl	20048 <reportDataError@@Base>
   2058c:	mov	r0, #0
   20590:	pop	{r3, pc}
   20594:	andeq	r4, r0, r8, asr #13

00020598 <getDataOperand@@Base>:
   20598:	push	{r4, r5, r6, lr}
   2059c:	mov	r6, r1
   205a0:	mov	r1, r2
   205a4:	mov	r5, r0
   205a8:	bl	203bc <findDataOperand@@Base>
   205ac:	cmp	r0, #0
   205b0:	popeq	{r4, r5, r6, pc}
   205b4:	ldr	r3, [r5, #24]
   205b8:	b	205cc <getDataOperand@@Base+0x34>
   205bc:	bl	14a54 <iswspace@plt>
   205c0:	mov	r3, r4
   205c4:	cmp	r0, #0
   205c8:	bne	205e0 <getDataOperand@@Base+0x48>
   205cc:	add	r4, r3, #4
   205d0:	str	r4, [r5, #24]
   205d4:	ldr	r0, [r3, #4]
   205d8:	cmp	r0, #0
   205dc:	bne	205bc <getDataOperand@@Base+0x24>
   205e0:	ldr	r3, [r5, #20]
   205e4:	mov	r0, #1
   205e8:	str	r3, [r6]
   205ec:	ldr	r2, [r5, #24]
   205f0:	ldr	r3, [r5, #20]
   205f4:	rsb	r3, r3, r2
   205f8:	asr	r3, r3, #2
   205fc:	str	r3, [r6, #4]
   20600:	pop	{r4, r5, r6, pc}

00020604 <getDataText@@Base>:
   20604:	push	{r4, r5, r6, lr}
   20608:	mov	r6, r1
   2060c:	mov	r1, r2
   20610:	mov	r4, r0
   20614:	bl	203bc <findDataOperand@@Base>
   20618:	cmp	r0, #0
   2061c:	popeq	{r4, r5, r6, pc}
   20620:	ldr	r5, [r4, #20]
   20624:	mov	r0, r5
   20628:	bl	14a30 <wcslen@plt>
   2062c:	add	r0, r5, r0, lsl #2
   20630:	str	r0, [r4, #24]
   20634:	str	r5, [r6]
   20638:	ldr	r2, [r4, #24]
   2063c:	ldr	r3, [r4, #20]
   20640:	rsb	r3, r3, r2
   20644:	asr	r3, r3, #2
   20648:	str	r3, [r6, #4]
   2064c:	cmp	r3, #0
   20650:	addne	r5, r5, r3, lsl #2
   20654:	bne	20668 <getDataText@@Base+0x64>
   20658:	b	20680 <getDataText@@Base+0x7c>
   2065c:	cmp	r4, #0
   20660:	str	r4, [r6, #4]
   20664:	beq	20680 <getDataText@@Base+0x7c>
   20668:	ldr	r0, [r5, #-4]!
   2066c:	sub	r4, r3, #1
   20670:	bl	14a54 <iswspace@plt>
   20674:	mov	r3, r4
   20678:	cmp	r0, #0
   2067c:	bne	2065c <getDataText@@Base+0x58>
   20680:	mov	r0, #1
   20684:	pop	{r4, r5, r6, pc}

00020688 <parseDataString@@Base>:
   20688:	ldr	ip, [pc, #1444]	; 20c34 <parseDataString@@Base+0x5ac>
   2068c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20690:	subs	sl, r3, #0
   20694:	add	fp, sp, #32
   20698:	ldr	r3, [pc, #1432]	; 20c38 <parseDataString@@Base+0x5b0>
   2069c:	sub	sp, sp, #76	; 0x4c
   206a0:	add	ip, pc, ip
   206a4:	str	ip, [fp, #-80]	; 0xffffffb0
   206a8:	str	r0, [fp, #-92]	; 0xffffffa4
   206ac:	mov	r4, #0
   206b0:	ldr	r3, [ip, r3]
   206b4:	mov	r6, r1
   206b8:	mov	r7, r2
   206bc:	str	r3, [fp, #-84]	; 0xffffffac
   206c0:	ldr	r3, [r3]
   206c4:	strb	r4, [r1]
   206c8:	str	r3, [fp, #-40]	; 0xffffffd8
   206cc:	ble	20bc0 <parseDataString@@Base+0x538>
   206d0:	ldr	r1, [pc, #1380]	; 20c3c <parseDataString@@Base+0x5b4>
   206d4:	sub	r2, fp, #48	; 0x30
   206d8:	str	r2, [fp, #-68]	; 0xffffffbc
   206dc:	add	r1, pc, r1
   206e0:	str	r1, [fp, #-76]	; 0xffffffb4
   206e4:	b	20720 <parseDataString@@Base+0x98>
   206e8:	sub	r1, fp, #56	; 0x38
   206ec:	mov	r2, #1
   206f0:	ldrb	r0, [r6]
   206f4:	add	r4, r4, #1
   206f8:	add	r5, r2, r0
   206fc:	cmp	r5, #254	; 0xfe
   20700:	bhi	20bf0 <parseDataString@@Base+0x568>
   20704:	add	r0, r6, r0, lsl #2
   20708:	uxtb	r5, r5
   2070c:	add	r0, r0, #4
   20710:	bl	14ba4 <wmemcpy@plt>
   20714:	cmp	sl, r4
   20718:	strb	r5, [r6]
   2071c:	ble	20bc4 <parseDataString@@Base+0x53c>
   20720:	ldr	r3, [r7, r4, lsl #2]
   20724:	lsl	r2, r4, #2
   20728:	add	ip, r7, r2
   2072c:	str	ip, [fp, #-64]	; 0xffffffc0
   20730:	cmp	r3, #92	; 0x5c
   20734:	str	r3, [fp, #-56]	; 0xffffffc8
   20738:	bne	206e8 <parseDataString@@Base+0x60>
   2073c:	add	r5, r4, #1
   20740:	cmp	sl, r5
   20744:	ble	2094c <parseDataString@@Base+0x2c4>
   20748:	add	r1, r2, #4
   2074c:	add	r3, r7, r1
   20750:	ldr	r0, [r7, r1]
   20754:	sub	r1, r0, #35	; 0x23
   20758:	str	r0, [fp, #-56]	; 0xffffffc8
   2075c:	cmp	r1, #88	; 0x58
   20760:	addls	pc, pc, r1, lsl #2
   20764:	b	20944 <parseDataString@@Base+0x2bc>
   20768:	b	20984 <parseDataString@@Base+0x2fc>
   2076c:	b	20944 <parseDataString@@Base+0x2bc>
   20770:	b	20944 <parseDataString@@Base+0x2bc>
   20774:	b	20944 <parseDataString@@Base+0x2bc>
   20778:	b	20944 <parseDataString@@Base+0x2bc>
   2077c:	b	20944 <parseDataString@@Base+0x2bc>
   20780:	b	20944 <parseDataString@@Base+0x2bc>
   20784:	b	20944 <parseDataString@@Base+0x2bc>
   20788:	b	20944 <parseDataString@@Base+0x2bc>
   2078c:	b	20944 <parseDataString@@Base+0x2bc>
   20790:	b	20944 <parseDataString@@Base+0x2bc>
   20794:	b	20944 <parseDataString@@Base+0x2bc>
   20798:	b	20944 <parseDataString@@Base+0x2bc>
   2079c:	b	20944 <parseDataString@@Base+0x2bc>
   207a0:	b	20944 <parseDataString@@Base+0x2bc>
   207a4:	b	20944 <parseDataString@@Base+0x2bc>
   207a8:	b	20944 <parseDataString@@Base+0x2bc>
   207ac:	b	20944 <parseDataString@@Base+0x2bc>
   207b0:	b	20944 <parseDataString@@Base+0x2bc>
   207b4:	b	20944 <parseDataString@@Base+0x2bc>
   207b8:	b	20944 <parseDataString@@Base+0x2bc>
   207bc:	b	20944 <parseDataString@@Base+0x2bc>
   207c0:	b	20944 <parseDataString@@Base+0x2bc>
   207c4:	b	20944 <parseDataString@@Base+0x2bc>
   207c8:	b	20944 <parseDataString@@Base+0x2bc>
   207cc:	b	209b0 <parseDataString@@Base+0x328>
   207d0:	b	20944 <parseDataString@@Base+0x2bc>
   207d4:	b	20944 <parseDataString@@Base+0x2bc>
   207d8:	b	20944 <parseDataString@@Base+0x2bc>
   207dc:	b	20944 <parseDataString@@Base+0x2bc>
   207e0:	b	20944 <parseDataString@@Base+0x2bc>
   207e4:	b	20944 <parseDataString@@Base+0x2bc>
   207e8:	b	20944 <parseDataString@@Base+0x2bc>
   207ec:	b	20944 <parseDataString@@Base+0x2bc>
   207f0:	b	20944 <parseDataString@@Base+0x2bc>
   207f4:	b	20944 <parseDataString@@Base+0x2bc>
   207f8:	b	20944 <parseDataString@@Base+0x2bc>
   207fc:	b	20944 <parseDataString@@Base+0x2bc>
   20800:	b	20944 <parseDataString@@Base+0x2bc>
   20804:	b	20944 <parseDataString@@Base+0x2bc>
   20808:	b	20944 <parseDataString@@Base+0x2bc>
   2080c:	b	20944 <parseDataString@@Base+0x2bc>
   20810:	b	20944 <parseDataString@@Base+0x2bc>
   20814:	b	20944 <parseDataString@@Base+0x2bc>
   20818:	b	20944 <parseDataString@@Base+0x2bc>
   2081c:	b	20944 <parseDataString@@Base+0x2bc>
   20820:	b	20944 <parseDataString@@Base+0x2bc>
   20824:	b	20944 <parseDataString@@Base+0x2bc>
   20828:	b	20944 <parseDataString@@Base+0x2bc>
   2082c:	b	20944 <parseDataString@@Base+0x2bc>
   20830:	b	2098c <parseDataString@@Base+0x304>
   20834:	b	20944 <parseDataString@@Base+0x2bc>
   20838:	b	20944 <parseDataString@@Base+0x2bc>
   2083c:	b	208cc <parseDataString@@Base+0x244>
   20840:	b	20944 <parseDataString@@Base+0x2bc>
   20844:	b	20944 <parseDataString@@Base+0x2bc>
   20848:	b	20944 <parseDataString@@Base+0x2bc>
   2084c:	b	20984 <parseDataString@@Base+0x2fc>
   20850:	b	20944 <parseDataString@@Base+0x2bc>
   20854:	b	20944 <parseDataString@@Base+0x2bc>
   20858:	b	20944 <parseDataString@@Base+0x2bc>
   2085c:	b	20944 <parseDataString@@Base+0x2bc>
   20860:	b	20944 <parseDataString@@Base+0x2bc>
   20864:	b	20b94 <parseDataString@@Base+0x50c>
   20868:	b	20944 <parseDataString@@Base+0x2bc>
   2086c:	b	20944 <parseDataString@@Base+0x2bc>
   20870:	b	20944 <parseDataString@@Base+0x2bc>
   20874:	b	20b84 <parseDataString@@Base+0x4fc>
   20878:	b	20944 <parseDataString@@Base+0x2bc>
   2087c:	b	20944 <parseDataString@@Base+0x2bc>
   20880:	b	20944 <parseDataString@@Base+0x2bc>
   20884:	b	20944 <parseDataString@@Base+0x2bc>
   20888:	b	20944 <parseDataString@@Base+0x2bc>
   2088c:	b	20944 <parseDataString@@Base+0x2bc>
   20890:	b	20944 <parseDataString@@Base+0x2bc>
   20894:	b	20b74 <parseDataString@@Base+0x4ec>
   20898:	b	20b5c <parseDataString@@Base+0x4d4>
   2089c:	b	20944 <parseDataString@@Base+0x2bc>
   208a0:	b	20944 <parseDataString@@Base+0x2bc>
   208a4:	b	20b4c <parseDataString@@Base+0x4c4>
   208a8:	b	20b3c <parseDataString@@Base+0x4b4>
   208ac:	b	20b2c <parseDataString@@Base+0x4a4>
   208b0:	b	20b08 <parseDataString@@Base+0x480>
   208b4:	b	20af8 <parseDataString@@Base+0x470>
   208b8:	b	20944 <parseDataString@@Base+0x2bc>
   208bc:	b	208cc <parseDataString@@Base+0x244>
   208c0:	b	20944 <parseDataString@@Base+0x2bc>
   208c4:	b	20944 <parseDataString@@Base+0x2bc>
   208c8:	b	20a88 <parseDataString@@Base+0x400>
   208cc:	ldr	r2, [pc, #876]	; 20c40 <parseDataString@@Base+0x5b8>
   208d0:	mov	r8, #2
   208d4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   208d8:	ldr	r2, [r1, r2]
   208dc:	str	r2, [fp, #-72]	; 0xffffffb8
   208e0:	sub	ip, fp, #52	; 0x34
   208e4:	mov	r9, #0
   208e8:	str	r4, [fp, #-88]	; 0xffffffa8
   208ec:	mov	r4, r9
   208f0:	str	r6, [fp, #-96]	; 0xffffffa0
   208f4:	mov	r9, r3
   208f8:	ldr	r6, [fp, #-72]	; 0xffffffb8
   208fc:	str	r7, [fp, #-72]	; 0xffffffb8
   20900:	mov	r7, ip
   20904:	b	20934 <parseDataString@@Base+0x2ac>
   20908:	ldr	r0, [r9, #4]!
   2090c:	mov	r1, r7
   20910:	sub	r2, fp, #48	; 0x30
   20914:	blx	r6
   20918:	cmp	r0, #0
   2091c:	beq	20940 <parseDataString@@Base+0x2b8>
   20920:	ldr	r1, [fp, #-48]	; 0xffffffd0
   20924:	subs	r8, r8, #1
   20928:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2092c:	orr	r4, r2, r4, lsl r1
   20930:	beq	20c08 <parseDataString@@Base+0x580>
   20934:	add	r5, r5, #1
   20938:	cmp	r5, sl
   2093c:	bne	20908 <parseDataString@@Base+0x280>
   20940:	ldr	r4, [fp, #-88]	; 0xffffffa8
   20944:	cmp	sl, r5
   20948:	addgt	r5, r5, #1
   2094c:	ldr	r1, [pc, #752]	; 20c44 <parseDataString@@Base+0x5bc>
   20950:	mov	r2, #5
   20954:	mov	r0, #0
   20958:	add	r1, pc, r1
   2095c:	bl	14de4 <dcgettext@plt>
   20960:	ldr	ip, [fp, #-64]	; 0xffffffc0
   20964:	ldr	r1, [pc, #732]	; 20c48 <parseDataString@@Base+0x5c0>
   20968:	rsb	r3, r4, r5
   2096c:	str	ip, [sp]
   20970:	add	r1, pc, r1
   20974:	mov	r2, r0
   20978:	ldr	r0, [fp, #-92]	; 0xffffffa4
   2097c:	bl	20048 <reportDataError@@Base>
   20980:	b	20c00 <parseDataString@@Base+0x578>
   20984:	mov	r4, r5
   20988:	b	206e8 <parseDataString@@Base+0x60>
   2098c:	ldr	ip, [fp, #4]
   20990:	cmp	ip, #0
   20994:	bne	20944 <parseDataString@@Base+0x2bc>
   20998:	ldr	r2, [pc, #672]	; 20c40 <parseDataString@@Base+0x5b8>
   2099c:	mov	r8, #8
   209a0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   209a4:	ldr	r2, [r1, r2]
   209a8:	str	r2, [fp, #-72]	; 0xffffffb8
   209ac:	b	208e0 <parseDataString@@Base+0x258>
   209b0:	add	r2, r2, #8
   209b4:	add	r5, r4, #2
   209b8:	add	r9, r7, r2
   209bc:	mov	r1, #62	; 0x3e
   209c0:	rsb	r2, r5, sl
   209c4:	mov	r0, r9
   209c8:	bl	14ca0 <wmemchr@plt>
   209cc:	ldr	r3, [fp, #4]
   209d0:	cmp	r3, #0
   209d4:	bne	20944 <parseDataString@@Base+0x2bc>
   209d8:	cmp	r0, #0
   209dc:	beq	20c24 <parseDataString@@Base+0x59c>
   209e0:	rsb	ip, r9, r0
   209e4:	mov	r8, sp
   209e8:	asr	lr, ip, #2
   209ec:	add	r3, lr, #8
   209f0:	cmp	lr, #0
   209f4:	bic	r3, r3, #7
   209f8:	add	r5, r5, lr
   209fc:	sub	sp, sp, r3
   20a00:	subgt	r0, r9, #4
   20a04:	add	r1, sp, #8
   20a08:	addgt	lr, r1, lr
   20a0c:	movgt	r2, r1
   20a10:	bgt	20a30 <parseDataString@@Base+0x3a8>
   20a14:	b	20a4c <parseDataString@@Base+0x3c4>
   20a18:	cmp	r3, #255	; 0xff
   20a1c:	bhi	20c1c <parseDataString@@Base+0x594>
   20a20:	uxtb	r3, r3
   20a24:	strb	r3, [r2], #1
   20a28:	cmp	r2, lr
   20a2c:	beq	20a4c <parseDataString@@Base+0x3c4>
   20a30:	ldr	r3, [r0, #4]!
   20a34:	cmp	r3, #95	; 0x5f
   20a38:	bne	20a18 <parseDataString@@Base+0x390>
   20a3c:	mov	r3, #32
   20a40:	strb	r3, [r2], #1
   20a44:	cmp	r2, lr
   20a48:	bne	20a30 <parseDataString@@Base+0x3a8>
   20a4c:	mov	r2, #0
   20a50:	mov	r0, #2
   20a54:	strb	r2, [r1, ip, asr #2]
   20a58:	sub	r2, fp, #48	; 0x30
   20a5c:	mov	r3, #0
   20a60:	str	r3, [fp, #-48]	; 0xffffffd0
   20a64:	bl	14d18 <u_charFromName_50@plt>
   20a68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20a6c:	mov	r2, #1
   20a70:	str	r0, [fp, #-56]	; 0xffffffc8
   20a74:	sub	r1, fp, #56	; 0x38
   20a78:	cmp	r3, #0
   20a7c:	mov	sp, r8
   20a80:	ble	20af0 <parseDataString@@Base+0x468>
   20a84:	b	20944 <parseDataString@@Base+0x2bc>
   20a88:	add	r2, r2, #8
   20a8c:	add	r9, r4, #2
   20a90:	add	r5, r7, r2
   20a94:	mov	r1, #125	; 0x7d
   20a98:	rsb	r2, r9, sl
   20a9c:	mov	r0, r5
   20aa0:	bl	14ca0 <wmemchr@plt>
   20aa4:	cmp	r0, #0
   20aa8:	beq	20c24 <parseDataString@@Base+0x59c>
   20aac:	ldr	r2, [fp, #-92]	; 0xffffffa4
   20ab0:	rsb	r0, r5, r0
   20ab4:	str	r4, [fp, #-72]	; 0xffffffb8
   20ab8:	sub	r4, fp, #48	; 0x30
   20abc:	str	r5, [fp, #-48]	; 0xffffffd0
   20ac0:	asr	r5, r0, #2
   20ac4:	ldr	r8, [r2, #16]
   20ac8:	str	r5, [fp, #-44]	; 0xffffffd4
   20acc:	mov	r0, r8
   20ad0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   20ad4:	mov	r2, r4
   20ad8:	bl	21684 <findItem@@Base>
   20adc:	cmp	r0, #0
   20ae0:	beq	20ba4 <parseDataString@@Base+0x51c>
   20ae4:	ldr	r1, [r0, #8]
   20ae8:	add	r5, r9, r5
   20aec:	ldr	r2, [r0, #12]
   20af0:	mov	r4, r5
   20af4:	b	206f0 <parseDataString@@Base+0x68>
   20af8:	mov	r3, #11
   20afc:	mov	r4, r5
   20b00:	str	r3, [fp, #-56]	; 0xffffffc8
   20b04:	b	206e8 <parseDataString@@Base+0x60>
   20b08:	ldr	r2, [fp, #4]
   20b0c:	cmp	r2, #0
   20b10:	bne	20944 <parseDataString@@Base+0x2bc>
   20b14:	ldr	r2, [pc, #292]	; 20c40 <parseDataString@@Base+0x5b8>
   20b18:	mov	r8, #4
   20b1c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   20b20:	ldr	r2, [ip, r2]
   20b24:	str	r2, [fp, #-72]	; 0xffffffb8
   20b28:	b	208e0 <parseDataString@@Base+0x258>
   20b2c:	mov	r3, #9
   20b30:	mov	r4, r5
   20b34:	str	r3, [fp, #-56]	; 0xffffffc8
   20b38:	b	206e8 <parseDataString@@Base+0x60>
   20b3c:	mov	r2, #32
   20b40:	mov	r4, r5
   20b44:	str	r2, [fp, #-56]	; 0xffffffc8
   20b48:	b	206e8 <parseDataString@@Base+0x60>
   20b4c:	mov	r3, #13
   20b50:	mov	r4, r5
   20b54:	str	r3, [fp, #-56]	; 0xffffffc8
   20b58:	b	206e8 <parseDataString@@Base+0x60>
   20b5c:	ldr	r2, [pc, #232]	; 20c4c <parseDataString@@Base+0x5c4>
   20b60:	mov	r8, #3
   20b64:	ldr	r1, [fp, #-80]	; 0xffffffb0
   20b68:	ldr	r2, [r1, r2]
   20b6c:	str	r2, [fp, #-72]	; 0xffffffb8
   20b70:	b	208e0 <parseDataString@@Base+0x258>
   20b74:	mov	r3, #10
   20b78:	mov	r4, r5
   20b7c:	str	r3, [fp, #-56]	; 0xffffffc8
   20b80:	b	206e8 <parseDataString@@Base+0x60>
   20b84:	mov	r3, #12
   20b88:	mov	r4, r5
   20b8c:	str	r3, [fp, #-56]	; 0xffffffc8
   20b90:	b	206e8 <parseDataString@@Base+0x60>
   20b94:	mov	r3, #8
   20b98:	mov	r4, r5
   20b9c:	str	r3, [fp, #-56]	; 0xffffffc8
   20ba0:	b	206e8 <parseDataString@@Base+0x60>
   20ba4:	mov	r0, r8
   20ba8:	bl	2145c <getQueueData@@Base>
   20bac:	subs	r8, r0, #0
   20bb0:	bne	20acc <parseDataString@@Base+0x444>
   20bb4:	ldr	r4, [fp, #-72]	; 0xffffffb8
   20bb8:	add	r5, r9, r5
   20bbc:	b	20944 <parseDataString@@Base+0x2bc>
   20bc0:	mov	r5, r4
   20bc4:	add	r6, r6, r5, lsl #2
   20bc8:	mov	r0, #1
   20bcc:	mov	r3, #0
   20bd0:	str	r3, [r6, #4]
   20bd4:	ldr	r1, [fp, #-84]	; 0xffffffac
   20bd8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20bdc:	ldr	r3, [r1]
   20be0:	cmp	r2, r3
   20be4:	bne	20c2c <parseDataString@@Base+0x5a4>
   20be8:	sub	sp, fp, #32
   20bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20bf0:	ldr	r1, [pc, #88]	; 20c50 <parseDataString@@Base+0x5c8>
   20bf4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   20bf8:	add	r1, pc, r1
   20bfc:	bl	20048 <reportDataError@@Base>
   20c00:	mov	r0, #0
   20c04:	b	20bd4 <parseDataString@@Base+0x54c>
   20c08:	str	r4, [fp, #-56]	; 0xffffffc8
   20c0c:	mov	r4, r5
   20c10:	ldr	r6, [fp, #-96]	; 0xffffffa0
   20c14:	ldr	r7, [fp, #-72]	; 0xffffffb8
   20c18:	b	206e8 <parseDataString@@Base+0x60>
   20c1c:	mov	sp, r8
   20c20:	b	20944 <parseDataString@@Base+0x2bc>
   20c24:	sub	r5, sl, #1
   20c28:	b	20944 <parseDataString@@Base+0x2bc>
   20c2c:	bl	14d9c <__stack_chk_fail@plt>
   20c30:	bl	15054 <_Unwind_Resume@plt>
   20c34:	andeq	r5, r1, r8, asr r9
   20c38:	andeq	r0, r0, r4, lsl #5
   20c3c:			; <UNDEFINED> instruction: 0xfffff72c
   20c40:	muleq	r0, r0, r2
   20c44:	andeq	r4, r0, r0, lsr #6
   20c48:	andeq	r4, r0, r4, asr #8
   20c4c:			; <UNDEFINED> instruction: 0x000002b8
   20c50:	muleq	r0, r8, r0

00020c54 <getDataString@@Base>:
   20c54:	push	{r4, r5, r6, r7, lr}
   20c58:	mov	r5, r2
   20c5c:	ldr	lr, [pc, #112]	; 20cd4 <getDataString@@Base+0x80>
   20c60:	mov	r2, r3
   20c64:	ldr	ip, [pc, #108]	; 20cd8 <getDataString@@Base+0x84>
   20c68:	sub	sp, sp, #28
   20c6c:	add	lr, pc, lr
   20c70:	mov	r6, r1
   20c74:	add	r1, sp, #12
   20c78:	mov	r7, r0
   20c7c:	ldr	r4, [lr, ip]
   20c80:	mov	r3, lr
   20c84:	ldr	r3, [r4]
   20c88:	str	r3, [sp, #20]
   20c8c:	bl	20598 <getDataOperand@@Base>
   20c90:	cmp	r0, #0
   20c94:	beq	20cb8 <getDataString@@Base+0x64>
   20c98:	ldr	r2, [sp, #12]
   20c9c:	mov	r0, r7
   20ca0:	ldr	r3, [sp, #16]
   20ca4:	mov	r1, r6
   20ca8:	str	r5, [sp]
   20cac:	bl	20688 <parseDataString@@Base>
   20cb0:	adds	r0, r0, #0
   20cb4:	movne	r0, #1
   20cb8:	ldr	r2, [sp, #20]
   20cbc:	ldr	r3, [r4]
   20cc0:	cmp	r2, r3
   20cc4:	bne	20cd0 <getDataString@@Base+0x7c>
   20cc8:	add	sp, sp, #28
   20ccc:	pop	{r4, r5, r6, r7, pc}
   20cd0:	bl	14d9c <__stack_chk_fail@plt>
   20cd4:	andeq	r5, r1, ip, lsl #7
   20cd8:	andeq	r0, r0, r4, lsl #5

00020cdc <getDotOperand@@Base>:
   20cdc:	ldr	r3, [pc, #160]	; 20d84 <getDotOperand@@Base+0xa8>
   20ce0:	ldr	ip, [pc, #160]	; 20d88 <getDotOperand@@Base+0xac>
   20ce4:	add	r3, pc, r3
   20ce8:	ldr	r2, [pc, #156]	; 20d8c <getDotOperand@@Base+0xb0>
   20cec:	push	{r4, r5, r6, r7, r8, lr}
   20cf0:	sub	sp, sp, #16
   20cf4:	ldr	r5, [r3, ip]
   20cf8:	mov	r6, r1
   20cfc:	add	r2, pc, r2
   20d00:	add	r1, sp, #4
   20d04:	mov	r7, r0
   20d08:	ldr	r3, [r5]
   20d0c:	str	r3, [sp, #12]
   20d10:	bl	20598 <getDataOperand@@Base>
   20d14:	subs	r4, r0, #0
   20d18:	bne	20d38 <getDotOperand@@Base+0x5c>
   20d1c:	ldr	r2, [sp, #12]
   20d20:	mov	r0, r4
   20d24:	ldr	r3, [r5]
   20d28:	cmp	r2, r3
   20d2c:	bne	20d80 <getDotOperand@@Base+0xa4>
   20d30:	add	sp, sp, #16
   20d34:	pop	{r4, r5, r6, r7, r8, pc}
   20d38:	ldr	r4, [sp, #8]
   20d3c:	ldr	r8, [sp, #4]
   20d40:	cmp	r4, #1
   20d44:	beq	20d68 <getDotOperand@@Base+0x8c>
   20d48:	ldr	r1, [pc, #64]	; 20d90 <getDotOperand@@Base+0xb4>
   20d4c:	mov	r2, r4
   20d50:	mov	r0, r7
   20d54:	mov	r3, r8
   20d58:	add	r1, pc, r1
   20d5c:	mov	r4, #0
   20d60:	bl	20048 <reportDataError@@Base>
   20d64:	b	20d1c <getDotOperand@@Base+0x40>
   20d68:	mov	r1, r6
   20d6c:	ldr	r0, [r8]
   20d70:	bl	1ffbc <brlDotNumberToIndex@@Base>
   20d74:	cmp	r0, #0
   20d78:	beq	20d48 <getDotOperand@@Base+0x6c>
   20d7c:	b	20d1c <getDotOperand@@Base+0x40>
   20d80:	bl	14d9c <__stack_chk_fail@plt>
   20d84:	andeq	r5, r1, r4, lsl r3
   20d88:	andeq	r0, r0, r4, lsl #5
   20d8c:	andeq	r3, r0, ip, lsr #31
   20d90:	andeq	r3, r0, ip, asr pc

00020d94 <processAssignOperands@@Base>:
   20d94:	ldr	r3, [pc, #200]	; 20e64 <processAssignOperands@@Base+0xd0>
   20d98:	ldr	ip, [pc, #200]	; 20e68 <processAssignOperands@@Base+0xd4>
   20d9c:	add	r3, pc, r3
   20da0:	ldr	r2, [pc, #196]	; 20e6c <processAssignOperands@@Base+0xd8>
   20da4:	push	{r4, r5, r6, lr}
   20da8:	sub	sp, sp, #24
   20dac:	ldr	r4, [r3, ip]
   20db0:	add	r5, sp, #4
   20db4:	add	r2, pc, r2
   20db8:	mov	r6, r0
   20dbc:	mov	r1, r5
   20dc0:	ldr	r3, [r4]
   20dc4:	str	r3, [sp, #20]
   20dc8:	bl	20598 <getDataOperand@@Base>
   20dcc:	cmp	r0, #0
   20dd0:	bne	20df0 <processAssignOperands@@Base+0x5c>
   20dd4:	ldr	r2, [sp, #20]
   20dd8:	mov	r0, #1
   20ddc:	ldr	r3, [r4]
   20de0:	cmp	r2, r3
   20de4:	bne	20e60 <processAssignOperands@@Base+0xcc>
   20de8:	add	sp, sp, #24
   20dec:	pop	{r4, r5, r6, pc}
   20df0:	mov	r0, r6
   20df4:	add	r1, sp, #12
   20df8:	mov	r2, #0
   20dfc:	bl	20598 <getDataOperand@@Base>
   20e00:	ldr	r6, [r6, #16]
   20e04:	ldr	r1, [pc, #100]	; 20e70 <processAssignOperands@@Base+0xdc>
   20e08:	mov	r2, r5
   20e0c:	add	r1, pc, r1
   20e10:	cmp	r0, #0
   20e14:	streq	r0, [sp, #12]
   20e18:	streq	r0, [sp, #16]
   20e1c:	mov	r0, r6
   20e20:	bl	21684 <findItem@@Base>
   20e24:	cmp	r0, #0
   20e28:	movne	r1, r0
   20e2c:	beq	20e48 <processAssignOperands@@Base+0xb4>
   20e30:	add	r0, r1, #8
   20e34:	ldr	r2, [sp, #12]
   20e38:	add	r1, r1, #12
   20e3c:	ldr	r3, [sp, #16]
   20e40:	bl	1fef8 <isOctalDigit@@Base+0x13c>
   20e44:	b	20dd4 <processAssignOperands@@Base+0x40>
   20e48:	mov	r1, r5
   20e4c:	mov	r0, r6
   20e50:	bl	1fe44 <isOctalDigit@@Base+0x88>
   20e54:	subs	r1, r0, #0
   20e58:	beq	20dd4 <processAssignOperands@@Base+0x40>
   20e5c:	b	20e30 <processAssignOperands@@Base+0x9c>
   20e60:	bl	14d9c <__stack_chk_fail@plt>
   20e64:	andeq	r5, r1, ip, asr r2
   20e68:	andeq	r0, r0, r4, lsl #5
   20e6c:	andeq	r3, r0, r4, lsr #30
   20e70:			; <UNDEFINED> instruction: 0xffffeffc

00020e74 <processPropertyOperand@@Base>:
   20e74:	ldr	ip, [pc, #220]	; 20f58 <processPropertyOperand@@Base+0xe4>
   20e78:	push	{r4, r5, r6, r7, r8, lr}
   20e7c:	add	ip, pc, ip
   20e80:	ldr	lr, [pc, #212]	; 20f5c <processPropertyOperand@@Base+0xe8>
   20e84:	mov	r7, r3
   20e88:	sub	sp, sp, #24
   20e8c:	mov	r4, r1
   20e90:	add	r1, sp, #12
   20e94:	mov	r6, r0
   20e98:	ldr	r5, [ip, lr]
   20e9c:	mov	r8, r2
   20ea0:	ldr	r3, [r5]
   20ea4:	str	r3, [sp, #20]
   20ea8:	bl	20598 <getDataOperand@@Base>
   20eac:	cmp	r0, #0
   20eb0:	moveq	r0, #1
   20eb4:	beq	20ef8 <processPropertyOperand@@Base+0x84>
   20eb8:	ldr	r0, [r4]
   20ebc:	cmp	r0, #0
   20ec0:	bne	20ed4 <processPropertyOperand@@Base+0x60>
   20ec4:	b	20f10 <processPropertyOperand@@Base+0x9c>
   20ec8:	ldr	r0, [r4, #8]!
   20ecc:	cmp	r0, #0
   20ed0:	beq	20f10 <processPropertyOperand@@Base+0x9c>
   20ed4:	ldr	r1, [sp, #12]
   20ed8:	ldr	r2, [sp, #16]
   20edc:	bl	200f4 <isKeyword@@Base>
   20ee0:	cmp	r0, #0
   20ee4:	beq	20ec8 <processPropertyOperand@@Base+0x54>
   20ee8:	ldr	r3, [r4, #4]
   20eec:	mov	r0, r6
   20ef0:	mov	r1, r7
   20ef4:	blx	r3
   20ef8:	ldr	r2, [sp, #20]
   20efc:	ldr	r3, [r5]
   20f00:	cmp	r2, r3
   20f04:	bne	20f54 <processPropertyOperand@@Base+0xe0>
   20f08:	add	sp, sp, #24
   20f0c:	pop	{r4, r5, r6, r7, r8, pc}
   20f10:	ldr	r3, [r4, #4]
   20f14:	cmp	r3, #0
   20f18:	beq	20f2c <processPropertyOperand@@Base+0xb8>
   20f1c:	mov	r0, r6
   20f20:	ldr	r1, [sp, #16]
   20f24:	bl	2054c <ungetDataCharacters@@Base>
   20f28:	b	20ee8 <processPropertyOperand@@Base+0x74>
   20f2c:	ldr	ip, [sp, #12]
   20f30:	mov	r0, r6
   20f34:	ldr	r1, [pc, #36]	; 20f60 <processPropertyOperand@@Base+0xec>
   20f38:	mov	r2, r8
   20f3c:	ldr	r3, [sp, #16]
   20f40:	add	r1, pc, r1
   20f44:	str	ip, [sp]
   20f48:	bl	20048 <reportDataError@@Base>
   20f4c:	mov	r0, #1
   20f50:	b	20ef8 <processPropertyOperand@@Base+0x84>
   20f54:	bl	14d9c <__stack_chk_fail@plt>
   20f58:	andeq	r5, r1, ip, ror r1
   20f5c:	andeq	r0, r0, r4, lsl #5
   20f60:	andeq	r3, r0, r8, lsr #27

00020f64 <processDataStream@@Base>:
   20f64:	ldr	ip, [pc, #204]	; 21038 <processDataStream@@Base+0xd4>
   20f68:	push	{r4, r5, r6, r7, lr}
   20f6c:	add	ip, pc, ip
   20f70:	ldr	lr, [pc, #196]	; 2103c <processDataStream@@Base+0xd8>
   20f74:	sub	sp, sp, #36	; 0x24
   20f78:	subs	r6, r0, #0
   20f7c:	mov	r7, r1
   20f80:	ldr	r5, [sp, #56]	; 0x38
   20f84:	mov	r1, #0
   20f88:	ldr	r4, [ip, lr]
   20f8c:	str	r3, [sp, #8]
   20f90:	str	r2, [sp]
   20f94:	ldr	r3, [r4]
   20f98:	str	r5, [sp, #12]
   20f9c:	str	r1, [sp, #4]
   20fa0:	str	r3, [sp, #28]
   20fa4:	beq	2101c <processDataStream@@Base+0xb8>
   20fa8:	ldr	r1, [pc, #144]	; 21040 <processDataStream@@Base+0xdc>
   20fac:	mov	r0, #7
   20fb0:	add	r1, pc, r1
   20fb4:	bl	1aa88 <logMessage@@Base>
   20fb8:	ldr	r0, [pc, #132]	; 21044 <processDataStream@@Base+0xe0>
   20fbc:	mov	r1, #0
   20fc0:	add	r0, pc, r0
   20fc4:	bl	213bc <newQueue@@Base>
   20fc8:	subs	r5, r0, #0
   20fcc:	beq	2102c <processDataStream@@Base+0xc8>
   20fd0:	mov	r1, r6
   20fd4:	bl	21464 <setQueueData@@Base>
   20fd8:	ldr	r1, [pc, #104]	; 21048 <processDataStream@@Base+0xe4>
   20fdc:	mov	r0, r7
   20fe0:	mov	r2, sp
   20fe4:	add	r1, pc, r1
   20fe8:	str	r5, [sp, #16]
   20fec:	bl	1b8f0 <processLines@@Base>
   20ff0:	adds	r5, r0, #0
   20ff4:	ldr	r0, [sp, #16]
   20ff8:	movne	r5, #1
   20ffc:	bl	21434 <deallocateQueue@@Base>
   21000:	ldr	r2, [sp, #28]
   21004:	mov	r0, r5
   21008:	ldr	r3, [r4]
   2100c:	cmp	r2, r3
   21010:	bne	21034 <processDataStream@@Base+0xd0>
   21014:	add	sp, sp, #36	; 0x24
   21018:	pop	{r4, r5, r6, r7, pc}
   2101c:	bl	1ff60 <isOctalDigit@@Base+0x1a4>
   21020:	subs	r6, r0, #0
   21024:	ldrne	r2, [sp]
   21028:	bne	20fa8 <processDataStream@@Base+0x44>
   2102c:	mov	r5, #0
   21030:	b	21000 <processDataStream@@Base+0x9c>
   21034:	bl	14d9c <__stack_chk_fail@plt>
   21038:	andeq	r5, r1, ip, lsl #1
   2103c:	andeq	r0, r0, r4, lsl #5
   21040:	andeq	r3, r0, ip, asr #26
   21044:			; <UNDEFINED> instruction: 0xffffee14
   21048:			; <UNDEFINED> instruction: 0xfffff440

0002104c <includeDataFile@@Base>:
   2104c:	ldr	r3, [pc, #320]	; 21194 <includeDataFile@@Base+0x148>
   21050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21054:	add	fp, sp, #32
   21058:	ldr	ip, [pc, #312]	; 21198 <includeDataFile@@Base+0x14c>
   2105c:	sub	sp, sp, #36	; 0x24
   21060:	add	r3, pc, r3
   21064:	mov	r4, r0
   21068:	mov	r0, r1
   2106c:	ldr	r7, [r3, ip]
   21070:	mov	r1, r2
   21074:	sub	r2, fp, #44	; 0x2c
   21078:	ldr	r9, [r4]
   2107c:	ldr	r3, [r7]
   21080:	str	r3, [fp, #-40]	; 0xffffffd8
   21084:	bl	1f62c <makeUtf8FromWchars@@Base>
   21088:	subs	r8, r0, #0
   2108c:	beq	21184 <includeDataFile@@Base+0x138>
   21090:	bl	1ac8c <isAbsolutePath@@Base>
   21094:	subs	r5, r0, #0
   21098:	movne	r5, #0
   2109c:	movne	lr, r5
   210a0:	beq	21164 <includeDataFile@@Base+0x118>
   210a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   210a8:	mov	r2, #1
   210ac:	mov	sl, sp
   210b0:	ldr	ip, [pc, #228]	; 2119c <includeDataFile@@Base+0x150>
   210b4:	add	r1, r0, r2
   210b8:	mvn	r3, #0
   210bc:	add	r1, r1, lr
   210c0:	add	ip, pc, ip
   210c4:	add	lr, r1, #7
   210c8:	bic	lr, lr, #7
   210cc:	sub	sp, sp, lr
   210d0:	add	r6, sp, #24
   210d4:	str	r0, [sp, #12]
   210d8:	str	r5, [sp, #4]
   210dc:	mov	r0, r6
   210e0:	str	ip, [sp]
   210e4:	str	r9, [sp, #8]
   210e8:	str	r8, [sp, #16]
   210ec:	bl	14f1c <__snprintf_chk@plt>
   210f0:	ldr	r1, [pc, #168]	; 211a0 <includeDataFile@@Base+0x154>
   210f4:	mov	r0, r6
   210f8:	mov	r2, #0
   210fc:	add	r1, pc, r1
   21100:	bl	1b614 <openDataFile@@Base>
   21104:	subs	r5, r0, #0
   21108:	moveq	r4, r5
   2110c:	beq	2113c <includeDataFile@@Base+0xf0>
   21110:	ldr	ip, [r4, #12]
   21114:	mov	r2, r6
   21118:	ldr	r0, [r4, #16]
   2111c:	mov	r1, r5
   21120:	ldr	r3, [r4, #8]
   21124:	str	ip, [sp]
   21128:	bl	20f64 <processDataStream@@Base>
   2112c:	adds	r4, r0, #0
   21130:	mov	r0, r5
   21134:	movne	r4, #1
   21138:	bl	14f4c <fclose@plt>
   2113c:	mov	r0, r8
   21140:	mov	sp, sl
   21144:	bl	14ac0 <free@plt>
   21148:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2114c:	mov	r0, r4
   21150:	ldr	r3, [r7]
   21154:	cmp	r2, r3
   21158:	bne	21190 <includeDataFile@@Base+0x144>
   2115c:	sub	sp, fp, #32
   21160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21164:	mov	r0, r9
   21168:	mov	r1, #47	; 0x2f
   2116c:	bl	15084 <strrchr@plt>
   21170:	cmp	r0, #0
   21174:	rsbne	r5, r9, r0
   21178:	addne	r5, r5, #1
   2117c:	mov	lr, r5
   21180:	b	210a4 <includeDataFile@@Base+0x58>
   21184:	bl	1ab94 <logMallocError@@Base>
   21188:	mov	r4, r8
   2118c:	b	21148 <includeDataFile@@Base+0xfc>
   21190:	bl	14d9c <__stack_chk_fail@plt>
   21194:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   21198:	andeq	r0, r0, r4, lsl #5
   2119c:	andeq	r3, r0, r4, asr ip
   211a0:	ldrdeq	r3, [r0], -r4

000211a4 <processIncludeOperands@@Base>:
   211a4:	ldr	ip, [pc, #124]	; 21228 <processIncludeOperands@@Base+0x84>
   211a8:	mov	r2, #0
   211ac:	push	{r4, r5, r6, lr}
   211b0:	add	ip, pc, ip
   211b4:	ldr	lr, [pc, #112]	; 2122c <processIncludeOperands@@Base+0x88>
   211b8:	sub	sp, sp, #1024	; 0x400
   211bc:	ldr	r3, [pc, #108]	; 21230 <processIncludeOperands@@Base+0x8c>
   211c0:	sub	sp, sp, #8
   211c4:	add	r1, sp, #4
   211c8:	mov	r6, r0
   211cc:	ldr	r4, [ip, lr]
   211d0:	add	r3, pc, r3
   211d4:	add	r5, sp, #8
   211d8:	ldr	ip, [r4]
   211dc:	str	ip, [sp, #1028]	; 0x404
   211e0:	bl	20c54 <getDataString@@Base>
   211e4:	cmp	r0, #0
   211e8:	moveq	r0, #1
   211ec:	beq	21208 <processIncludeOperands@@Base+0x64>
   211f0:	mov	r0, r6
   211f4:	mov	r1, r5
   211f8:	ldrb	r2, [sp, #4]
   211fc:	bl	2104c <includeDataFile@@Base>
   21200:	adds	r0, r0, #0
   21204:	movne	r0, #1
   21208:	ldr	r2, [sp, #1028]	; 0x404
   2120c:	ldr	r3, [r4]
   21210:	cmp	r2, r3
   21214:	bne	21224 <processIncludeOperands@@Base+0x80>
   21218:	add	sp, sp, #1024	; 0x400
   2121c:	add	sp, sp, #8
   21220:	pop	{r4, r5, r6, pc}
   21224:	bl	14d9c <__stack_chk_fail@plt>
   21228:	andeq	r4, r1, r8, asr #28
   2122c:	andeq	r0, r0, r4, lsl #5
   21230:	andeq	r3, r0, r0, asr fp

00021234 <processDataFile@@Base>:
   21234:	push	{r4, r5, r6, r7, lr}
   21238:	mov	r7, r1
   2123c:	ldr	r1, [pc, #84]	; 21298 <processDataFile@@Base+0x64>
   21240:	sub	sp, sp, #12
   21244:	mov	r6, r2
   21248:	mov	r2, #0
   2124c:	add	r1, pc, r1
   21250:	mov	r5, r0
   21254:	bl	1b614 <openDataFile@@Base>
   21258:	subs	r4, r0, #0
   2125c:	moveq	r5, r4
   21260:	beq	2128c <processDataFile@@Base+0x58>
   21264:	mov	r2, r5
   21268:	str	r6, [sp]
   2126c:	mov	r3, r7
   21270:	mov	r0, #0
   21274:	mov	r1, r4
   21278:	bl	20f64 <processDataStream@@Base>
   2127c:	adds	r5, r0, #0
   21280:	mov	r0, r4
   21284:	movne	r5, #1
   21288:	bl	14f4c <fclose@plt>
   2128c:	mov	r0, r5
   21290:	add	sp, sp, #12
   21294:	pop	{r4, r5, r6, r7, pc}
   21298:	andeq	r3, r0, r4, lsl #23
   2129c:	mov	r2, r1
   212a0:	mov	r1, r0
   212a4:	push	{r3, lr}
   212a8:	ldr	r3, [r2]
   212ac:	ldr	r0, [r2, #4]
   212b0:	ldr	ip, [r3, #16]
   212b4:	ldr	r2, [r3, #8]
   212b8:	blx	ip
   212bc:	pop	{r3, pc}
   212c0:	subs	r3, r1, r0
   212c4:	rsbs	r0, r3, #0
   212c8:	adcs	r0, r0, r3
   212cc:	bx	lr

000212d0 <deleteElement@@Base>:
   212d0:	push	{r3, r4, r5, lr}
   212d4:	mov	r4, r0
   212d8:	ldr	r3, [r0]
   212dc:	ldr	r2, [r0, #8]
   212e0:	cmp	r0, r3
   212e4:	moveq	r3, #0
   212e8:	streq	r3, [r2]
   212ec:	beq	21310 <deleteElement@@Base+0x40>
   212f0:	ldr	r1, [r2]
   212f4:	cmp	r0, r1
   212f8:	streq	r3, [r2]
   212fc:	ldr	r2, [r0, #4]
   21300:	ldreq	r3, [r0]
   21304:	str	r2, [r3, #4]
   21308:	ldm	r0, {r2, r3}
   2130c:	str	r2, [r3]
   21310:	ldr	r0, [r4, #12]
   21314:	mov	r3, #0
   21318:	ldr	r5, [r4, #8]
   2131c:	cmp	r0, r3
   21320:	str	r3, [r4]
   21324:	str	r3, [r4, #4]
   21328:	beq	21348 <deleteElement@@Base+0x78>
   2132c:	ldr	r3, [r5, #12]
   21330:	cmp	r3, #0
   21334:	beq	21340 <deleteElement@@Base+0x70>
   21338:	ldr	r1, [r5, #8]
   2133c:	blx	r3
   21340:	mov	r3, #0
   21344:	str	r3, [r4, #12]
   21348:	ldr	r3, [pc, #36]	; 21374 <deleteElement@@Base+0xa4>
   2134c:	mov	r2, #0
   21350:	str	r2, [r4, #8]
   21354:	add	r3, pc, r3
   21358:	ldr	r1, [r5, #4]
   2135c:	ldr	r2, [r3]
   21360:	sub	r1, r1, #1
   21364:	str	r4, [r3]
   21368:	str	r1, [r5, #4]
   2136c:	str	r2, [r4]
   21370:	pop	{r3, r4, r5, pc}
   21374:	andeq	r5, r1, r0, asr #1

00021378 <dequeueItem@@Base>:
   21378:	push	{r4, lr}
   2137c:	ldr	r3, [r0]
   21380:	cmp	r3, #0
   21384:	beq	213a4 <dequeueItem@@Base+0x2c>
   21388:	ldr	r4, [r3, #12]
   2138c:	mov	r2, #0
   21390:	mov	r0, r3
   21394:	str	r2, [r3, #12]
   21398:	bl	212d0 <deleteElement@@Base>
   2139c:	mov	r0, r4
   213a0:	pop	{r4, pc}
   213a4:	mov	r0, r3
   213a8:	pop	{r4, pc}

000213ac <getElementQueue@@Base>:
   213ac:	ldr	r0, [r0, #8]
   213b0:	bx	lr

000213b4 <getElementItem@@Base>:
   213b4:	ldr	r0, [r0, #12]
   213b8:	bx	lr

000213bc <newQueue@@Base>:
   213bc:	push	{r4, r5, lr}
   213c0:	mov	r4, r0
   213c4:	sub	sp, sp, #12
   213c8:	mov	r0, #20
   213cc:	mov	r5, r1
   213d0:	bl	14f04 <malloc@plt>
   213d4:	cmp	r0, #0
   213d8:	beq	213fc <newQueue@@Base+0x40>
   213dc:	mov	r3, #0
   213e0:	str	r4, [r0, #12]
   213e4:	str	r5, [r0, #16]
   213e8:	str	r3, [r0]
   213ec:	str	r3, [r0, #4]
   213f0:	str	r3, [r0, #8]
   213f4:	add	sp, sp, #12
   213f8:	pop	{r4, r5, pc}
   213fc:	str	r0, [sp, #4]
   21400:	bl	1ab94 <logMallocError@@Base>
   21404:	ldr	r0, [sp, #4]
   21408:	b	213f4 <newQueue@@Base+0x38>

0002140c <deleteElements@@Base>:
   2140c:	push	{r4, lr}
   21410:	mov	r4, r0
   21414:	ldr	r0, [r0]
   21418:	cmp	r0, #0
   2141c:	popeq	{r4, pc}
   21420:	bl	212d0 <deleteElement@@Base>
   21424:	ldr	r0, [r4]
   21428:	cmp	r0, #0
   2142c:	bne	21420 <deleteElements@@Base+0x14>
   21430:	pop	{r4, pc}

00021434 <deallocateQueue@@Base>:
   21434:	push	{r4, lr}
   21438:	mov	r4, r0
   2143c:	bl	2140c <deleteElements@@Base>
   21440:	mov	r0, r4
   21444:	pop	{r4, lr}
   21448:	b	14ac0 <free@plt>

0002144c <getQueueHead@@Base>:
   2144c:	ldr	r0, [r0]
   21450:	bx	lr

00021454 <getQueueSize@@Base>:
   21454:	ldr	r0, [r0, #4]
   21458:	bx	lr

0002145c <getQueueData@@Base>:
   2145c:	ldr	r0, [r0, #8]
   21460:	bx	lr

00021464 <setQueueData@@Base>:
   21464:	mov	r3, r0
   21468:	ldr	r0, [r0, #8]
   2146c:	str	r1, [r3, #8]
   21470:	bx	lr

00021474 <findElement@@Base>:
   21474:	push	{r3, r4, r5, r6, r7, lr}
   21478:	mov	r5, r0
   2147c:	ldr	r4, [r0]
   21480:	mov	r7, r1
   21484:	mov	r6, r2
   21488:	cmp	r4, #0
   2148c:	bne	214a4 <findElement@@Base+0x30>
   21490:	b	214c0 <findElement@@Base+0x4c>
   21494:	ldr	r4, [r4]
   21498:	ldr	r3, [r5]
   2149c:	cmp	r4, r3
   214a0:	beq	214c0 <findElement@@Base+0x4c>
   214a4:	ldr	r0, [r4, #12]
   214a8:	mov	r1, r6
   214ac:	blx	r7
   214b0:	cmp	r0, #0
   214b4:	beq	21494 <findElement@@Base+0x20>
   214b8:	mov	r0, r4
   214bc:	pop	{r3, r4, r5, r6, r7, pc}
   214c0:	mov	r0, #0
   214c4:	pop	{r3, r4, r5, r6, r7, pc}
   214c8:	ldr	r3, [pc, #208]	; 215a0 <findElement@@Base+0x12c>
   214cc:	ldr	r2, [pc, #208]	; 215a4 <findElement@@Base+0x130>
   214d0:	add	r3, pc, r3
   214d4:	push	{r4, r5, r6, lr}
   214d8:	sub	sp, sp, #16
   214dc:	ldr	r5, [r0, #8]
   214e0:	mov	r4, r0
   214e4:	ldr	r6, [r3, r2]
   214e8:	ldr	r3, [r5]
   214ec:	ldr	r2, [r6]
   214f0:	cmp	r3, #0
   214f4:	str	r2, [sp, #12]
   214f8:	beq	21590 <findElement@@Base+0x11c>
   214fc:	ldr	r2, [r5, #16]
   21500:	cmp	r2, #0
   21504:	beq	21574 <findElement@@Base+0x100>
   21508:	ldr	r3, [r0, #12]
   2150c:	add	r2, sp, #4
   21510:	ldr	r1, [pc, #144]	; 215a8 <findElement@@Base+0x134>
   21514:	mov	r0, r5
   21518:	str	r5, [sp, #4]
   2151c:	add	r1, pc, r1
   21520:	str	r3, [sp, #8]
   21524:	bl	21474 <findElement@@Base>
   21528:	cmp	r0, #0
   2152c:	ldreq	r3, [r5]
   21530:	beq	21574 <findElement@@Base+0x100>
   21534:	ldr	r2, [r5]
   21538:	str	r0, [r4]
   2153c:	ldr	r3, [r0, #4]
   21540:	cmp	r0, r2
   21544:	str	r3, [r4, #4]
   21548:	str	r4, [r0, #4]
   2154c:	ldr	r3, [r4, #4]
   21550:	str	r4, [r3]
   21554:	bne	2155c <findElement@@Base+0xe8>
   21558:	str	r4, [r5]
   2155c:	ldr	r2, [sp, #12]
   21560:	ldr	r3, [r6]
   21564:	cmp	r2, r3
   21568:	bne	2159c <findElement@@Base+0x128>
   2156c:	add	sp, sp, #16
   21570:	pop	{r4, r5, r6, pc}
   21574:	str	r3, [r4]
   21578:	ldr	r2, [r3, #4]
   2157c:	str	r2, [r4, #4]
   21580:	str	r4, [r3, #4]
   21584:	ldr	r3, [r4, #4]
   21588:	str	r4, [r3]
   2158c:	b	2155c <findElement@@Base+0xe8>
   21590:	str	r0, [r4]
   21594:	str	r0, [r4, #4]
   21598:	b	21558 <findElement@@Base+0xe4>
   2159c:	bl	14d9c <__stack_chk_fail@plt>
   215a0:	andeq	r4, r1, r8, lsr #22
   215a4:	andeq	r0, r0, r4, lsl #5
   215a8:			; <UNDEFINED> instruction: 0xfffffd78

000215ac <enqueueItem@@Base>:
   215ac:	ldr	r3, [pc, #124]	; 21630 <enqueueItem@@Base+0x84>
   215b0:	push	{r4, r5, lr}
   215b4:	add	r3, pc, r3
   215b8:	sub	sp, sp, #12
   215bc:	mov	r5, r0
   215c0:	ldr	r4, [r3]
   215c4:	cmp	r4, #0
   215c8:	beq	21604 <enqueueItem@@Base+0x58>
   215cc:	ldr	r2, [r4]
   215d0:	mov	r0, #0
   215d4:	str	r0, [r4]
   215d8:	str	r2, [r3]
   215dc:	str	r5, [r4, #8]
   215e0:	mov	r0, r4
   215e4:	ldr	r3, [r5, #4]
   215e8:	add	r3, r3, #1
   215ec:	str	r3, [r5, #4]
   215f0:	str	r1, [r4, #12]
   215f4:	bl	214c8 <findElement@@Base+0x54>
   215f8:	mov	r0, r4
   215fc:	add	sp, sp, #12
   21600:	pop	{r4, r5, pc}
   21604:	mov	r0, #16
   21608:	str	r1, [sp, #4]
   2160c:	bl	14f04 <malloc@plt>
   21610:	ldr	r1, [sp, #4]
   21614:	subs	r4, r0, #0
   21618:	movne	r3, #0
   2161c:	strne	r3, [r4]
   21620:	strne	r3, [r4, #4]
   21624:	bne	215dc <enqueueItem@@Base+0x30>
   21628:	bl	1ab94 <logMallocError@@Base>
   2162c:	b	215f8 <enqueueItem@@Base+0x4c>
   21630:	andeq	r4, r1, r0, ror #28

00021634 <requeueElement@@Base>:
   21634:	ldr	r2, [r0]
   21638:	mov	r3, r0
   2163c:	ldr	r1, [r0, #8]
   21640:	cmp	r0, r2
   21644:	moveq	r2, #0
   21648:	streq	r2, [r1]
   2164c:	beq	21670 <requeueElement@@Base+0x3c>
   21650:	ldr	r0, [r1]
   21654:	cmp	r3, r0
   21658:	streq	r2, [r1]
   2165c:	ldr	r1, [r3, #4]
   21660:	ldreq	r2, [r3]
   21664:	str	r1, [r2, #4]
   21668:	ldm	r3, {r1, r2}
   2166c:	str	r1, [r2]
   21670:	mov	r2, #0
   21674:	mov	r0, r3
   21678:	str	r2, [r3]
   2167c:	str	r2, [r3, #4]
   21680:	b	214c8 <findElement@@Base+0x54>

00021684 <findItem@@Base>:
   21684:	push	{r3, lr}
   21688:	bl	21474 <findElement@@Base>
   2168c:	cmp	r0, #0
   21690:	ldrne	r0, [r0, #12]
   21694:	pop	{r3, pc}

00021698 <processQueue@@Base>:
   21698:	push	{r4, r5, r6, r7, r8, lr}
   2169c:	mov	r6, r0
   216a0:	ldr	r5, [r0]
   216a4:	mov	r7, r1
   216a8:	mov	r8, r2
   216ac:	cmp	r5, #0
   216b0:	movne	r3, r5
   216b4:	bne	216dc <processQueue@@Base+0x44>
   216b8:	b	21700 <processQueue@@Base+0x68>
   216bc:	ldr	r0, [r5, #12]
   216c0:	blx	r7
   216c4:	cmp	r0, #0
   216c8:	bne	21708 <processQueue@@Base+0x70>
   216cc:	cmp	r4, #0
   216d0:	mov	r5, r4
   216d4:	beq	21700 <processQueue@@Base+0x68>
   216d8:	ldr	r3, [r6]
   216dc:	ldr	r4, [r5]
   216e0:	mov	r1, r8
   216e4:	cmp	r3, r4
   216e8:	bne	216bc <processQueue@@Base+0x24>
   216ec:	mov	r1, r8
   216f0:	ldr	r0, [r5, #12]
   216f4:	blx	r7
   216f8:	cmp	r0, #0
   216fc:	bne	21708 <processQueue@@Base+0x70>
   21700:	mov	r0, #0
   21704:	pop	{r4, r5, r6, r7, r8, pc}
   21708:	mov	r0, r5
   2170c:	pop	{r4, r5, r6, r7, r8, pc}

00021710 <deleteItem@@Base>:
   21710:	mov	r2, r1
   21714:	ldr	r1, [pc, #44]	; 21748 <deleteItem@@Base+0x38>
   21718:	push	{r3, lr}
   2171c:	add	r1, pc, r1
   21720:	bl	21474 <findElement@@Base>
   21724:	subs	r3, r0, #0
   21728:	beq	21740 <deleteItem@@Base+0x30>
   2172c:	mov	r2, #0
   21730:	str	r2, [r3, #12]
   21734:	bl	212d0 <deleteElement@@Base>
   21738:	mov	r0, #1
   2173c:	pop	{r3, pc}
   21740:	mov	r0, r3
   21744:	pop	{r3, pc}
   21748:			; <UNDEFINED> instruction: 0xfffffb9c

0002174c <resetDataArea@@Base>:
   2174c:	mov	r3, #0
   21750:	str	r3, [r0]
   21754:	str	r3, [r0, #4]
   21758:	str	r3, [r0, #8]
   2175c:	bx	lr

00021760 <newDataArea@@Base>:
   21760:	push	{r4, lr}
   21764:	mov	r0, #12
   21768:	bl	14f04 <malloc@plt>
   2176c:	subs	r4, r0, #0
   21770:	beq	21778 <newDataArea@@Base+0x18>
   21774:	bl	2174c <resetDataArea@@Base>
   21778:	mov	r0, r4
   2177c:	pop	{r4, pc}

00021780 <destroyDataArea@@Base>:
   21780:	push	{r4, lr}
   21784:	mov	r4, r0
   21788:	ldr	r0, [r0]
   2178c:	cmp	r0, #0
   21790:	beq	21798 <destroyDataArea@@Base+0x18>
   21794:	bl	14ac0 <free@plt>
   21798:	mov	r0, r4
   2179c:	pop	{r4, lr}
   217a0:	b	14ac0 <free@plt>

000217a4 <allocateDataItem@@Base>:
   217a4:	push	{r4, r5, r6, r7, r8, lr}
   217a8:	mov	r4, r0
   217ac:	ldr	r0, [r0, #8]
   217b0:	mov	r7, r1
   217b4:	mov	r1, r3
   217b8:	mov	r5, r3
   217bc:	sub	r0, r0, #1
   217c0:	mov	r6, r2
   217c4:	add	r0, r0, r3
   217c8:	bl	23118 <processLibLouisStream@@Base+0x10>
   217cc:	ldr	r3, [r4, #4]
   217d0:	mul	r0, r5, r0
   217d4:	add	r6, r0, r6
   217d8:	cmp	r6, r3
   217dc:	str	r0, [r4, #8]
   217e0:	bhi	217fc <allocateDataItem@@Base+0x58>
   217e4:	cmp	r7, #0
   217e8:	mov	r0, #1
   217ec:	ldrne	r3, [r4, #8]
   217f0:	strne	r3, [r7]
   217f4:	str	r6, [r4, #8]
   217f8:	pop	{r4, r5, r6, r7, r8, pc}
   217fc:	mvn	r5, r6, lsr #12
   21800:	ldr	r0, [r4]
   21804:	mvn	r5, r5, lsl #12
   21808:	mov	r1, r5
   2180c:	bl	14d0c <realloc@plt>
   21810:	subs	r8, r0, #0
   21814:	beq	21838 <allocateDataItem@@Base+0x94>
   21818:	ldr	r2, [r4, #4]
   2181c:	mov	r1, #0
   21820:	add	r0, r8, r2
   21824:	rsb	r2, r2, r5
   21828:	bl	14c04 <memset@plt>
   2182c:	str	r8, [r4]
   21830:	str	r5, [r4, #4]
   21834:	b	217e4 <allocateDataItem@@Base+0x40>
   21838:	ldr	r1, [pc, #16]	; 21850 <allocateDataItem@@Base+0xac>
   2183c:	mov	r0, #3
   21840:	add	r1, pc, r1
   21844:	bl	1aa88 <logMessage@@Base>
   21848:	mov	r0, r8
   2184c:	pop	{r4, r5, r6, r7, r8, pc}
   21850:	strdeq	r3, [r0], -r4

00021854 <getDataItem@@Base>:
   21854:	ldr	r0, [r0]
   21858:	add	r0, r0, r1
   2185c:	bx	lr

00021860 <getDataSize@@Base>:
   21860:	ldr	r0, [r0, #8]
   21864:	bx	lr

00021868 <saveDataItem@@Base>:
   21868:	push	{r3, r4, r5, r6, r7, lr}
   2186c:	mov	r4, r3
   21870:	mov	r5, r2
   21874:	ldr	r3, [sp, #24]
   21878:	mov	r2, r4
   2187c:	mov	r7, r0
   21880:	mov	r6, r1
   21884:	bl	217a4 <allocateDataItem@@Base>
   21888:	cmp	r0, #0
   2188c:	popeq	{r3, r4, r5, r6, r7, pc}
   21890:	ldr	r1, [r6]
   21894:	mov	r0, r7
   21898:	bl	21854 <getDataItem@@Base>
   2189c:	mov	r1, r5
   218a0:	mov	r2, r4
   218a4:	bl	14eec <memcpy@plt>
   218a8:	mov	r0, #1
   218ac:	pop	{r3, r4, r5, r6, r7, pc}

000218b0 <getTextTableItem@@Base>:
   218b0:	ldr	r0, [r0]
   218b4:	b	21854 <getDataItem@@Base>

000218b8 <getTextTableHeader@@Base>:
   218b8:	mov	r1, #0
   218bc:	b	218b0 <getTextTableItem@@Base>
   218c0:	ldr	r3, [pc, #412]	; 21a64 <getTextTableHeader@@Base+0x1ac>
   218c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   218c8:	mov	r7, r1
   218cc:	ldr	r1, [pc, #404]	; 21a68 <getTextTableHeader@@Base+0x1b0>
   218d0:	add	r3, pc, r3
   218d4:	adds	r6, r2, #0
   218d8:	sub	sp, sp, #12
   218dc:	mov	r4, r0
   218e0:	ubfx	r8, r7, #24, #7
   218e4:	ldr	r5, [r3, r1]
   218e8:	movne	r6, #1
   218ec:	ldr	r3, [r5]
   218f0:	str	r3, [sp, #4]
   218f4:	bl	218b8 <getTextTableHeader@@Base>
   218f8:	ldr	r3, [r0, r8, lsl #2]
   218fc:	cmp	r3, #0
   21900:	movne	r2, #0
   21904:	andeq	r2, r6, #1
   21908:	cmp	r2, #0
   2190c:	str	r3, [sp]
   21910:	moveq	r8, r3
   21914:	bne	219bc <getTextTableHeader@@Base+0x104>
   21918:	cmp	r8, #0
   2191c:	bne	2193c <getTextTableHeader@@Base+0x84>
   21920:	mov	r0, #0
   21924:	ldr	r2, [sp, #4]
   21928:	ldr	r3, [r5]
   2192c:	cmp	r2, r3
   21930:	bne	21a60 <getTextTableHeader@@Base+0x1a8>
   21934:	add	sp, sp, #12
   21938:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2193c:	mov	r1, r8
   21940:	ldr	r0, [r4]
   21944:	bl	21854 <getDataItem@@Base>
   21948:	ubfx	r9, r7, #16, #8
   2194c:	ldr	r1, [r0, r9, lsl #2]
   21950:	cmp	r1, #0
   21954:	movne	r3, #0
   21958:	andeq	r3, r6, #1
   2195c:	cmp	r3, #0
   21960:	str	r1, [sp]
   21964:	moveq	r8, r1
   21968:	bne	21a28 <getTextTableHeader@@Base+0x170>
   2196c:	cmp	r8, #0
   21970:	beq	21920 <getTextTableHeader@@Base+0x68>
   21974:	mov	r1, r8
   21978:	ldr	r0, [r4]
   2197c:	bl	21854 <getDataItem@@Base>
   21980:	ubfx	r7, r7, #8, #8
   21984:	ldr	r0, [r0, r7, lsl #2]
   21988:	cmp	r0, #0
   2198c:	movne	r6, #0
   21990:	andeq	r6, r6, #1
   21994:	cmp	r6, #0
   21998:	str	r0, [sp]
   2199c:	moveq	r1, r0
   219a0:	bne	219f0 <getTextTableHeader@@Base+0x138>
   219a4:	cmp	r1, #0
   219a8:	moveq	r0, r1
   219ac:	beq	21924 <getTextTableHeader@@Base+0x6c>
   219b0:	ldr	r0, [r4]
   219b4:	bl	21854 <getDataItem@@Base>
   219b8:	b	21924 <getTextTableHeader@@Base+0x6c>
   219bc:	ldr	r0, [r4]
   219c0:	mov	r1, sp
   219c4:	mov	r2, #1024	; 0x400
   219c8:	mov	r3, #4
   219cc:	bl	217a4 <allocateDataItem@@Base>
   219d0:	cmp	r0, #0
   219d4:	beq	21920 <getTextTableHeader@@Base+0x68>
   219d8:	mov	r0, r4
   219dc:	bl	218b8 <getTextTableHeader@@Base>
   219e0:	ldr	r3, [sp]
   219e4:	str	r3, [r0, r8, lsl #2]
   219e8:	ldr	r8, [sp]
   219ec:	b	21918 <getTextTableHeader@@Base+0x60>
   219f0:	ldr	r0, [r4]
   219f4:	mov	r1, sp
   219f8:	mov	r2, #288	; 0x120
   219fc:	mov	r3, #1
   21a00:	bl	217a4 <allocateDataItem@@Base>
   21a04:	cmp	r0, #0
   21a08:	beq	21924 <getTextTableHeader@@Base+0x6c>
   21a0c:	mov	r1, r8
   21a10:	ldr	r0, [r4]
   21a14:	bl	21854 <getDataItem@@Base>
   21a18:	ldr	r3, [sp]
   21a1c:	str	r3, [r0, r7, lsl #2]
   21a20:	ldr	r1, [sp]
   21a24:	b	219a4 <getTextTableHeader@@Base+0xec>
   21a28:	ldr	r0, [r4]
   21a2c:	mov	r1, sp
   21a30:	mov	r2, #1024	; 0x400
   21a34:	mov	r3, #4
   21a38:	bl	217a4 <allocateDataItem@@Base>
   21a3c:	cmp	r0, #0
   21a40:	beq	21920 <getTextTableHeader@@Base+0x68>
   21a44:	mov	r1, r8
   21a48:	ldr	r0, [r4]
   21a4c:	bl	21854 <getDataItem@@Base>
   21a50:	ldr	r3, [sp]
   21a54:	str	r3, [r0, r9, lsl #2]
   21a58:	ldr	r8, [sp]
   21a5c:	b	2196c <getTextTableHeader@@Base+0xb4>
   21a60:	bl	14d9c <__stack_chk_fail@plt>
   21a64:	andeq	r4, r1, r8, lsr #14
   21a68:	andeq	r0, r0, r4, lsl #5
   21a6c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   21a70:	mov	r8, r1
   21a74:	mov	r9, r2
   21a78:	bl	218b8 <getTextTableHeader@@Base>
   21a7c:	and	r1, r8, #7
   21a80:	mov	r6, #1
   21a84:	mov	r7, #0
   21a88:	mov	r5, #0
   21a8c:	and	r7, r7, r5
   21a90:	add	r3, r0, r8, lsr #3
   21a94:	ldrb	r2, [r3, #1536]	; 0x600
   21a98:	lsr	r4, r2, r1
   21a9c:	and	r6, r6, r4
   21aa0:	orrs	ip, r6, r7
   21aa4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   21aa8:	add	r8, r0, r8, lsl #2
   21aac:	ldr	r0, [r8, #512]	; 0x200
   21ab0:	cmp	r0, r9
   21ab4:	streq	r5, [r8, #512]	; 0x200
   21ab8:	moveq	r0, #1
   21abc:	biceq	r2, r2, r0, lsl r1
   21ac0:	strbeq	r2, [r3, #1536]	; 0x600
   21ac4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

00021ac8 <getUnicodeCellEntry@@Base>:
   21ac8:	push	{r3, r4, r5, r6, r7, lr}
   21acc:	mov	r2, #0
   21ad0:	mov	r4, r1
   21ad4:	bl	218c0 <getTextTableHeader@@Base+0x8>
   21ad8:	cmp	r0, #0
   21adc:	popeq	{r3, r4, r5, r6, r7, pc}
   21ae0:	uxtb	r1, r4
   21ae4:	mov	r3, #0
   21ae8:	and	ip, r1, #7
   21aec:	mov	r4, #1
   21af0:	add	r6, r0, r1, lsr #3
   21af4:	mov	r5, #0
   21af8:	and	r5, r5, r3
   21afc:	mov	r7, #0
   21b00:	ldrb	r6, [r6, #256]	; 0x100
   21b04:	lsr	r2, r6, ip
   21b08:	and	r4, r4, r2
   21b0c:	orrs	ip, r4, r5
   21b10:	addne	r0, r0, r1
   21b14:	moveq	r0, r3
   21b18:	pop	{r3, r4, r5, r6, r7, pc}

00021b1c <setTextTableGlyph@@Base>:
   21b1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21b20:	sub	sp, sp, #12
   21b24:	mov	r9, r2
   21b28:	mov	r2, #1
   21b2c:	str	r0, [sp, #4]
   21b30:	mov	fp, r1
   21b34:	bl	218c0 <getTextTableHeader@@Base+0x8>
   21b38:	subs	sl, r0, #0
   21b3c:	beq	21ba8 <setTextTableGlyph@@Base+0x8c>
   21b40:	uxtb	r8, fp
   21b44:	mov	r6, #1
   21b48:	and	r1, r8, #7
   21b4c:	mov	r7, #0
   21b50:	add	r3, sl, r8, lsr #3
   21b54:	mov	r5, #0
   21b58:	and	r5, r5, r7
   21b5c:	ldrb	r2, [r3, #256]	; 0x100
   21b60:	lsr	r4, r2, r1
   21b64:	and	r4, r4, r6
   21b68:	orrs	r0, r4, r5
   21b6c:	beq	21b98 <setTextTableGlyph@@Base+0x7c>
   21b70:	ldrb	r1, [sl, r8]
   21b74:	cmp	r1, r9
   21b78:	beq	21b88 <setTextTableGlyph@@Base+0x6c>
   21b7c:	ldr	r0, [sp, #4]
   21b80:	mov	r2, fp
   21b84:	bl	21a6c <getTextTableHeader@@Base+0x1b4>
   21b88:	mov	r0, #1
   21b8c:	strb	r9, [sl, r8]
   21b90:	add	sp, sp, #12
   21b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b98:	mov	r0, #1
   21b9c:	orr	r2, r2, r0, lsl r1
   21ba0:	strb	r2, [r3, #256]	; 0x100
   21ba4:	b	21b88 <setTextTableGlyph@@Base+0x6c>
   21ba8:	mov	r0, sl
   21bac:	add	sp, sp, #12
   21bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021bb4 <setTextTableCharacter@@Base>:
   21bb4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   21bb8:	mov	r4, r0
   21bbc:	mov	r9, r1
   21bc0:	mov	r8, r2
   21bc4:	bl	21b1c <setTextTableGlyph@@Base>
   21bc8:	subs	r3, r0, #0
   21bcc:	beq	21c18 <setTextTableCharacter@@Base+0x64>
   21bd0:	mov	r0, r4
   21bd4:	mov	r6, #1
   21bd8:	bl	218b8 <getTextTableHeader@@Base>
   21bdc:	and	ip, r8, #7
   21be0:	mov	r7, #0
   21be4:	mov	r5, #0
   21be8:	and	r5, r5, r7
   21bec:	add	r2, r0, r8, lsr #3
   21bf0:	ldrb	r1, [r2, #1536]	; 0x600
   21bf4:	lsr	r4, r1, ip
   21bf8:	and	r4, r4, r6
   21bfc:	orrs	r3, r4, r5
   21c00:	addeq	r8, r8, #128	; 0x80
   21c04:	moveq	r3, #1
   21c08:	movne	r3, #1
   21c0c:	orreq	r1, r1, r3, lsl ip
   21c10:	streq	r9, [r0, r8, lsl #2]
   21c14:	strbeq	r1, [r2, #1536]	; 0x600
   21c18:	mov	r0, r3
   21c1c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

00021c20 <unsetTextTableCharacter@@Base>:
   21c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21c24:	sub	sp, sp, #12
   21c28:	mov	r2, #0
   21c2c:	mov	fp, r1
   21c30:	str	r0, [sp, #4]
   21c34:	bl	218c0 <getTextTableHeader@@Base+0x8>
   21c38:	subs	r9, r0, #0
   21c3c:	beq	21c9c <unsetTextTableCharacter@@Base+0x7c>
   21c40:	uxtb	r8, fp
   21c44:	mov	r0, #1
   21c48:	and	r3, r8, #7
   21c4c:	mov	r1, #0
   21c50:	add	sl, r9, r8, lsr #3
   21c54:	mov	r5, #0
   21c58:	and	r1, r1, r5
   21c5c:	ldrb	r6, [sl, #256]	; 0x100
   21c60:	lsr	r4, r6, r3
   21c64:	and	r0, r0, r4
   21c68:	orrs	r2, r0, r1
   21c6c:	beq	21c9c <unsetTextTableCharacter@@Base+0x7c>
   21c70:	ldrb	r1, [r9, r8]
   21c74:	mov	r2, fp
   21c78:	ldr	r0, [sp, #4]
   21c7c:	str	r3, [sp]
   21c80:	bl	21a6c <getTextTableHeader@@Base+0x1b4>
   21c84:	strb	r5, [r9, r8]
   21c88:	mov	r1, #1
   21c8c:	ldr	r3, [sp]
   21c90:	ldrb	r2, [sl, #256]	; 0x100
   21c94:	bic	r3, r2, r1, lsl r3
   21c98:	strb	r3, [sl, #256]	; 0x100
   21c9c:	add	sp, sp, #12
   21ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021ca4 <setTextTableByte@@Base>:
   21ca4:	push	{r3, r4, r5, lr}
   21ca8:	mov	r4, r0
   21cac:	mov	r0, r1
   21cb0:	mov	r5, r2
   21cb4:	bl	1f988 <convertCharToWchar@@Base>
   21cb8:	cmn	r0, #1
   21cbc:	mov	r1, r0
   21cc0:	beq	21cdc <setTextTableByte@@Base+0x38>
   21cc4:	mov	r0, r4
   21cc8:	mov	r2, r5
   21ccc:	bl	21bb4 <setTextTableCharacter@@Base>
   21cd0:	adds	r0, r0, #0
   21cd4:	movne	r0, #1
   21cd8:	pop	{r3, r4, r5, pc}
   21cdc:	mov	r0, #1
   21ce0:	pop	{r3, r4, r5, pc}

00021ce4 <newTextTableData@@Base>:
   21ce4:	push	{r3, r4, r5, lr}
   21ce8:	mov	r0, #4
   21cec:	bl	14f04 <malloc@plt>
   21cf0:	subs	r4, r0, #0
   21cf4:	beq	21d40 <newTextTableData@@Base+0x5c>
   21cf8:	mov	r5, #0
   21cfc:	str	r5, [r4]
   21d00:	bl	21760 <newDataArea@@Base>
   21d04:	cmp	r0, r5
   21d08:	str	r0, [r4]
   21d0c:	beq	21d38 <newTextTableData@@Base+0x54>
   21d10:	mov	r1, r5
   21d14:	mov	r2, #1568	; 0x620
   21d18:	mov	r3, #4
   21d1c:	bl	217a4 <allocateDataItem@@Base>
   21d20:	cmp	r0, r5
   21d24:	beq	21d30 <newTextTableData@@Base+0x4c>
   21d28:	mov	r0, r4
   21d2c:	pop	{r3, r4, r5, pc}
   21d30:	ldr	r0, [r4]
   21d34:	bl	21780 <destroyDataArea@@Base>
   21d38:	mov	r0, r4
   21d3c:	bl	14ac0 <free@plt>
   21d40:	mov	r0, #0
   21d44:	pop	{r3, r4, r5, pc}

00021d48 <destroyTextTableData@@Base>:
   21d48:	push	{r4, lr}
   21d4c:	mov	r4, r0
   21d50:	ldr	r0, [r0]
   21d54:	bl	21780 <destroyDataArea@@Base>
   21d58:	mov	r0, r4
   21d5c:	pop	{r4, lr}
   21d60:	b	14ac0 <free@plt>

00021d64 <processTextTableLines@@Base>:
   21d64:	push	{r4, r5, r6, r7, lr}
   21d68:	mov	r7, r0
   21d6c:	mov	r6, r1
   21d70:	ldr	r0, [pc, #108]	; 21de4 <processTextTableLines@@Base+0x80>
   21d74:	ldr	r1, [pc, #108]	; 21de8 <processTextTableLines@@Base+0x84>
   21d78:	sub	sp, sp, #12
   21d7c:	add	r0, pc, r0
   21d80:	mov	r5, r2
   21d84:	add	r1, pc, r1
   21d88:	bl	20374 <setGlobalTableVariables@@Base>
   21d8c:	cmp	r0, #0
   21d90:	beq	21dcc <processTextTableLines@@Base+0x68>
   21d94:	bl	21ce4 <newTextTableData@@Base>
   21d98:	subs	r4, r0, #0
   21d9c:	beq	21dcc <processTextTableLines@@Base+0x68>
   21da0:	mov	r3, r5
   21da4:	str	r4, [sp]
   21da8:	mov	r1, r7
   21dac:	mov	r2, r6
   21db0:	mov	r0, #0
   21db4:	bl	20f64 <processDataStream@@Base>
   21db8:	subs	r5, r0, #0
   21dbc:	mov	r0, r4
   21dc0:	beq	21dd8 <processTextTableLines@@Base+0x74>
   21dc4:	add	sp, sp, #12
   21dc8:	pop	{r4, r5, r6, r7, pc}
   21dcc:	mov	r0, #0
   21dd0:	add	sp, sp, #12
   21dd4:	pop	{r4, r5, r6, r7, pc}
   21dd8:	bl	21d48 <destroyTextTableData@@Base>
   21ddc:	mov	r0, r5
   21de0:	b	21dc4 <processTextTableLines@@Base+0x60>
   21de4:	ldrdeq	r2, [r0], -ip
   21de8:	ldrdeq	r2, [r0], -ip

00021dec <makeTextTable@@Base>:
   21dec:	push	{r3, r4, r5, lr}
   21df0:	mov	r5, r0
   21df4:	mov	r0, #8
   21df8:	bl	14f04 <malloc@plt>
   21dfc:	subs	r4, r0, #0
   21e00:	beq	21e24 <makeTextTable@@Base+0x38>
   21e04:	mov	r0, r5
   21e08:	bl	218b8 <getTextTableHeader@@Base>
   21e0c:	str	r0, [r4]
   21e10:	ldr	r0, [r5]
   21e14:	bl	21860 <getDataSize@@Base>
   21e18:	str	r0, [r4, #4]
   21e1c:	ldr	r0, [r5]
   21e20:	bl	2174c <resetDataArea@@Base>
   21e24:	mov	r0, r4
   21e28:	pop	{r3, r4, r5, pc}

00021e2c <destroyTextTable@@Base>:
   21e2c:	push	{r4, lr}
   21e30:	mov	r4, r0
   21e34:	ldr	r3, [r0, #4]
   21e38:	cmp	r3, #0
   21e3c:	popeq	{r4, pc}
   21e40:	ldr	r0, [r0]
   21e44:	bl	14ac0 <free@plt>
   21e48:	mov	r0, r4
   21e4c:	pop	{r4, lr}
   21e50:	b	14ac0 <free@plt>

00021e54 <ensureTextTableExtension@@Base>:
   21e54:	ldr	r1, [pc, #4]	; 21e60 <ensureTextTableExtension@@Base+0xc>
   21e58:	add	r1, pc, r1
   21e5c:	b	1aef0 <ensureFileExtension@@Base>
   21e60:	andeq	r2, r0, r0, lsl #30

00021e64 <makeTextTablePath@@Base>:
   21e64:	ldr	r2, [pc, #4]	; 21e70 <makeTextTablePath@@Base+0xc>
   21e68:	add	r2, pc, r2
   21e6c:	b	1af90 <makeFilePath@@Base>
   21e70:	strdeq	r2, [r0], -r0
   21e74:	push	{r3, r4, r5, lr}
   21e78:	bl	21e64 <makeTextTablePath@@Base>
   21e7c:	subs	r4, r0, #0
   21e80:	moveq	r5, r4
   21e84:	beq	21eb4 <makeTextTablePath@@Base+0x50>
   21e88:	ldr	r1, [pc, #44]	; 21ebc <makeTextTablePath@@Base+0x58>
   21e8c:	mov	r0, #7
   21e90:	mov	r2, r4
   21e94:	add	r1, pc, r1
   21e98:	bl	1aa88 <logMessage@@Base>
   21e9c:	mov	r0, r4
   21ea0:	bl	1afec <testFilePath@@Base>
   21ea4:	adds	r5, r0, #0
   21ea8:	mov	r0, r4
   21eac:	movne	r5, #1
   21eb0:	bl	14ac0 <free@plt>
   21eb4:	mov	r0, r5
   21eb8:	pop	{r3, r4, r5, pc}
   21ebc:	ldrdeq	r2, [r0], -r4

00021ec0 <selectTextTable@@Base>:
   21ec0:	ldr	r3, [pc, #368]	; 22038 <selectTextTable@@Base+0x178>
   21ec4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21ec8:	add	fp, sp, #28
   21ecc:	ldr	r2, [pc, #360]	; 2203c <selectTextTable@@Base+0x17c>
   21ed0:	sub	sp, sp, #8
   21ed4:	add	r3, pc, r3
   21ed8:	mov	r8, r0
   21edc:	mov	r0, #0
   21ee0:	ldr	r6, [r3, r2]
   21ee4:	mov	r1, r0
   21ee8:	ldr	r3, [r6]
   21eec:	str	r3, [fp, #-32]	; 0xffffffe0
   21ef0:	bl	14e80 <setlocale@plt>
   21ef4:	subs	r9, r0, #0
   21ef8:	beq	22024 <selectTextTable@@Base+0x164>
   21efc:	bl	14f10 <strlen@plt>
   21f00:	ldrb	r4, [r9]
   21f04:	mov	r7, sp
   21f08:	cmp	r4, #0
   21f0c:	add	r0, r0, #8
   21f10:	bic	r3, r0, #7
   21f14:	sub	sp, sp, r3
   21f18:	mov	r5, sp
   21f1c:	beq	21f5c <selectTextTable@@Base+0x9c>
   21f20:	cmp	r4, #46	; 0x2e
   21f24:	beq	2201c <selectTextTable@@Base+0x15c>
   21f28:	cmp	r4, #64	; 0x40
   21f2c:	beq	2201c <selectTextTable@@Base+0x15c>
   21f30:	mov	r2, r9
   21f34:	mov	r4, #0
   21f38:	b	21f4c <selectTextTable@@Base+0x8c>
   21f3c:	cmp	r3, #46	; 0x2e
   21f40:	beq	21f5c <selectTextTable@@Base+0x9c>
   21f44:	cmp	r3, #64	; 0x40
   21f48:	beq	21f5c <selectTextTable@@Base+0x9c>
   21f4c:	ldrb	r3, [r2, #1]!
   21f50:	add	r4, r4, #1
   21f54:	cmp	r3, #0
   21f58:	bne	21f3c <selectTextTable@@Base+0x7c>
   21f5c:	mov	r1, r9
   21f60:	mov	r0, r5
   21f64:	mov	r2, r4
   21f68:	bl	15030 <strncpy@plt>
   21f6c:	mov	r3, #0
   21f70:	strb	r3, [r5, r4]
   21f74:	ldrb	r3, [r5]
   21f78:	cmp	r3, #67	; 0x43
   21f7c:	bne	21f9c <selectTextTable@@Base+0xdc>
   21f80:	ldrb	r3, [r5, #1]
   21f84:	cmp	r3, #0
   21f88:	bne	21f9c <selectTextTable@@Base+0xdc>
   21f8c:	strb	r3, [r5]
   21f90:	mov	r0, #0
   21f94:	mov	sp, r7
   21f98:	b	21fd0 <selectTextTable@@Base+0x110>
   21f9c:	mov	r0, r8
   21fa0:	mov	r1, r5
   21fa4:	bl	21e74 <makeTextTablePath@@Base+0x10>
   21fa8:	subs	r4, r0, #0
   21fac:	beq	21fe8 <selectTextTable@@Base+0x128>
   21fb0:	ldrb	r3, [r5]
   21fb4:	cmp	r3, #0
   21fb8:	beq	21f90 <selectTextTable@@Base+0xd0>
   21fbc:	mov	r0, r5
   21fc0:	bl	14c4c <__strdup@plt>
   21fc4:	cmp	r0, #0
   21fc8:	beq	2202c <selectTextTable@@Base+0x16c>
   21fcc:	mov	sp, r7
   21fd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21fd4:	ldr	r3, [r6]
   21fd8:	cmp	r2, r3
   21fdc:	bne	22034 <selectTextTable@@Base+0x174>
   21fe0:	sub	sp, fp, #28
   21fe4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21fe8:	mov	r0, r5
   21fec:	mov	r1, #95	; 0x5f
   21ff0:	bl	15114 <strchr@plt>
   21ff4:	cmp	r0, #0
   21ff8:	beq	21fb0 <selectTextTable@@Base+0xf0>
   21ffc:	strb	r4, [r0]
   22000:	mov	r1, r5
   22004:	mov	r0, r8
   22008:	bl	21e74 <makeTextTablePath@@Base+0x10>
   2200c:	cmp	r0, #0
   22010:	strbeq	r0, [r5]
   22014:	beq	21f90 <selectTextTable@@Base+0xd0>
   22018:	b	21fb0 <selectTextTable@@Base+0xf0>
   2201c:	mov	r4, #0
   22020:	b	21f5c <selectTextTable@@Base+0x9c>
   22024:	mov	r0, r9
   22028:	b	21fd0 <selectTextTable@@Base+0x110>
   2202c:	bl	1ab94 <logMallocError@@Base>
   22030:	b	21f90 <selectTextTable@@Base+0xd0>
   22034:	bl	14d9c <__stack_chk_fail@plt>
   22038:	andeq	r4, r1, r4, lsr #2
   2203c:	andeq	r0, r0, r4, lsl #5
   22040:	mov	r3, r1
   22044:	ldr	r2, [pc, #12]	; 22058 <selectTextTable@@Base+0x198>
   22048:	ldr	r1, [pc, #12]	; 2205c <selectTextTable@@Base+0x19c>
   2204c:	add	r2, pc, r2
   22050:	add	r1, pc, r1
   22054:	b	20e74 <processPropertyOperand@@Base>
   22058:	andeq	r2, r0, r8, lsr sp
   2205c:	andeq	r3, r1, r0, asr lr
   22060:	ldr	ip, [pc, #168]	; 22110 <selectTextTable@@Base+0x250>
   22064:	mov	r2, #1
   22068:	push	{r4, r5, r6, r7, lr}
   2206c:	add	ip, pc, ip
   22070:	ldr	lr, [pc, #156]	; 22114 <selectTextTable@@Base+0x254>
   22074:	sub	sp, sp, #1040	; 0x410
   22078:	sub	sp, sp, #4
   2207c:	ldr	r3, [pc, #148]	; 22118 <selectTextTable@@Base+0x258>
   22080:	add	r5, sp, #16
   22084:	mov	r7, r1
   22088:	ldr	r4, [ip, lr]
   2208c:	sub	r1, r5, #4
   22090:	add	r3, pc, r3
   22094:	mov	r6, r0
   22098:	ldr	ip, [r4]
   2209c:	str	ip, [sp, #1036]	; 0x40c
   220a0:	bl	20c54 <getDataString@@Base>
   220a4:	cmp	r0, #0
   220a8:	beq	220d8 <selectTextTable@@Base+0x218>
   220ac:	ldrb	r3, [sp, #12]
   220b0:	cmp	r3, #1
   220b4:	beq	220f4 <selectTextTable@@Base+0x234>
   220b8:	ldr	r1, [pc, #92]	; 2211c <selectTextTable@@Base+0x25c>
   220bc:	mov	r0, r6
   220c0:	ldr	r2, [pc, #88]	; 22120 <selectTextTable@@Base+0x260>
   220c4:	str	r5, [sp]
   220c8:	add	r1, pc, r1
   220cc:	add	r2, pc, r2
   220d0:	bl	20048 <reportDataError@@Base>
   220d4:	mov	r0, #0
   220d8:	ldr	r2, [sp, #1036]	; 0x40c
   220dc:	ldr	r3, [r4]
   220e0:	cmp	r2, r3
   220e4:	bne	2210c <selectTextTable@@Base+0x24c>
   220e8:	add	sp, sp, #1040	; 0x410
   220ec:	add	sp, sp, #4
   220f0:	pop	{r4, r5, r6, r7, pc}
   220f4:	ldr	r2, [sp, #16]
   220f8:	cmp	r2, #255	; 0xff
   220fc:	strbls	r2, [r7]
   22100:	movls	r0, r3
   22104:	bhi	220b8 <selectTextTable@@Base+0x1f8>
   22108:	b	220d8 <selectTextTable@@Base+0x218>
   2210c:	bl	14d9c <__stack_chk_fail@plt>
   22110:	andeq	r3, r1, ip, lsl #31
   22114:	andeq	r0, r0, r4, lsl #5
   22118:	andeq	r2, r0, ip, lsl #26
   2211c:	andeq	r2, r0, r4, ror #25
   22120:	ldrdeq	r2, [r0], -r0
   22124:	ldr	ip, [pc, #152]	; 221c4 <selectTextTable@@Base+0x304>
   22128:	mov	r2, #0
   2212c:	ldr	r3, [pc, #148]	; 221c8 <selectTextTable@@Base+0x308>
   22130:	add	ip, pc, ip
   22134:	push	{r4, r5, r6, r7, r8, lr}
   22138:	sub	sp, sp, #1040	; 0x410
   2213c:	ldr	r4, [ip, r3]
   22140:	add	r6, sp, #16
   22144:	ldr	r5, [pc, #128]	; 221cc <selectTextTable@@Base+0x30c>
   22148:	mov	r7, r1
   2214c:	sub	r1, r6, #4
   22150:	mov	r8, r0
   22154:	ldr	ip, [r4]
   22158:	add	r5, pc, r5
   2215c:	mov	r3, r5
   22160:	str	ip, [sp, #1036]	; 0x40c
   22164:	bl	20c54 <getDataString@@Base>
   22168:	cmp	r0, #0
   2216c:	beq	22184 <selectTextTable@@Base+0x2c4>
   22170:	ldr	r3, [sp, #16]
   22174:	cmp	r3, #0
   22178:	blt	2219c <selectTextTable@@Base+0x2dc>
   2217c:	mov	r0, #1
   22180:	str	r3, [r7]
   22184:	ldr	r2, [sp, #1036]	; 0x40c
   22188:	ldr	r3, [r4]
   2218c:	cmp	r2, r3
   22190:	bne	221c0 <selectTextTable@@Base+0x300>
   22194:	add	sp, sp, #1040	; 0x410
   22198:	pop	{r4, r5, r6, r7, r8, pc}
   2219c:	ldr	r1, [pc, #44]	; 221d0 <selectTextTable@@Base+0x310>
   221a0:	mov	r0, r8
   221a4:	ldrb	r3, [sp, #12]
   221a8:	mov	r2, r5
   221ac:	str	r6, [sp]
   221b0:	add	r1, pc, r1
   221b4:	bl	20048 <reportDataError@@Base>
   221b8:	mov	r0, #0
   221bc:	b	22184 <selectTextTable@@Base+0x2c4>
   221c0:	bl	14d9c <__stack_chk_fail@plt>
   221c4:	andeq	r3, r1, r8, asr #29
   221c8:	andeq	r0, r0, r4, lsl #5
   221cc:	andeq	r2, r0, r8, ror #24
   221d0:	strdeq	r2, [r0], -ip
   221d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   221d8:	sub	sp, sp, #28
   221dc:	ldr	r5, [pc, #436]	; 22398 <selectTextTable@@Base+0x4d8>
   221e0:	mov	r4, r1
   221e4:	ldr	r3, [pc, #432]	; 2239c <selectTextTable@@Base+0x4dc>
   221e8:	mov	r7, r0
   221ec:	add	r5, pc, r5
   221f0:	ldr	r1, [pc, #424]	; 223a0 <selectTextTable@@Base+0x4e0>
   221f4:	ldr	r3, [r5, r3]
   221f8:	add	r1, pc, r1
   221fc:	str	r3, [sp, #4]
   22200:	ldr	r3, [r3]
   22204:	str	r3, [sp, #20]
   22208:	bl	203bc <findDataOperand@@Base>
   2220c:	subs	r3, r0, #0
   22210:	bne	22234 <selectTextTable@@Base+0x374>
   22214:	ldr	r1, [sp, #4]
   22218:	mov	r0, r3
   2221c:	ldr	r2, [sp, #20]
   22220:	ldr	r3, [r1]
   22224:	cmp	r2, r3
   22228:	bne	22394 <selectTextTable@@Base+0x4d4>
   2222c:	add	sp, sp, #28
   22230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22234:	add	r8, sp, #12
   22238:	mov	r0, r7
   2223c:	mov	r1, r8
   22240:	bl	20524 <getDataCharacter@@Base>
   22244:	subs	r3, r0, #0
   22248:	beq	22214 <selectTextTable@@Base+0x354>
   2224c:	ldr	r1, [sp, #12]
   22250:	cmp	r1, #40	; 0x28
   22254:	beq	222f8 <selectTextTable@@Base+0x438>
   22258:	ldr	r0, [pc, #324]	; 223a4 <selectTextTable@@Base+0x4e4>
   2225c:	mov	r6, #0
   22260:	strb	r6, [r4]
   22264:	add	r0, pc, r0
   22268:	bl	14c34 <wcschr@plt>
   2226c:	cmp	r0, #0
   22270:	movne	sl, #1
   22274:	beq	2237c <selectTextTable@@Base+0x4bc>
   22278:	add	fp, sp, #16
   2227c:	mov	r0, r7
   22280:	mov	r1, r8
   22284:	bl	20524 <getDataCharacter@@Base>
   22288:	subs	r3, r0, #0
   2228c:	beq	22340 <selectTextTable@@Base+0x480>
   22290:	ldr	r9, [sp, #12]
   22294:	mov	r0, r9
   22298:	bl	14a54 <iswspace@plt>
   2229c:	cmp	r6, #0
   222a0:	beq	22308 <selectTextTable@@Base+0x448>
   222a4:	cmp	r6, r9
   222a8:	beq	2231c <selectTextTable@@Base+0x45c>
   222ac:	cmp	r0, #0
   222b0:	bne	2227c <selectTextTable@@Base+0x3bc>
   222b4:	cmp	sl, #0
   222b8:	bne	22324 <selectTextTable@@Base+0x464>
   222bc:	mov	r0, r9
   222c0:	mov	r1, fp
   222c4:	bl	1ffbc <brlDotNumberToIndex@@Base>
   222c8:	cmp	r0, #0
   222cc:	beq	22324 <selectTextTable@@Base+0x464>
   222d0:	ldr	r1, [pc, #208]	; 223a8 <selectTextTable@@Base+0x4e8>
   222d4:	ldr	r3, [sp, #16]
   222d8:	ldrb	r2, [r4]
   222dc:	ldr	r1, [r5, r1]
   222e0:	ldrb	r3, [r1, r3]
   222e4:	tst	r2, r3
   222e8:	bne	22364 <selectTextTable@@Base+0x4a4>
   222ec:	orr	r3, r2, r3
   222f0:	strb	r3, [r4]
   222f4:	b	2227c <selectTextTable@@Base+0x3bc>
   222f8:	mov	sl, #0
   222fc:	mov	r6, #41	; 0x29
   22300:	strb	sl, [r4]
   22304:	b	22278 <selectTextTable@@Base+0x3b8>
   22308:	cmp	r0, #0
   2230c:	beq	222b4 <selectTextTable@@Base+0x3f4>
   22310:	mov	r0, r7
   22314:	mov	r1, #1
   22318:	bl	2054c <ungetDataCharacters@@Base>
   2231c:	mov	r3, #1
   22320:	b	22214 <selectTextTable@@Base+0x354>
   22324:	ldr	r1, [pc, #128]	; 223ac <selectTextTable@@Base+0x4ec>
   22328:	mov	r0, r7
   2232c:	mov	r2, r8
   22330:	add	r1, pc, r1
   22334:	bl	20048 <reportDataError@@Base>
   22338:	mov	r3, #0
   2233c:	b	22214 <selectTextTable@@Base+0x354>
   22340:	cmp	r6, #0
   22344:	beq	2231c <selectTextTable@@Base+0x45c>
   22348:	ldr	r1, [pc, #96]	; 223b0 <selectTextTable@@Base+0x4f0>
   2234c:	mov	r0, r7
   22350:	str	r3, [sp]
   22354:	add	r1, pc, r1
   22358:	bl	20048 <reportDataError@@Base>
   2235c:	ldr	r3, [sp]
   22360:	b	22214 <selectTextTable@@Base+0x354>
   22364:	ldr	r1, [pc, #72]	; 223b4 <selectTextTable@@Base+0x4f4>
   22368:	mov	r0, r7
   2236c:	mov	r2, r8
   22370:	add	r1, pc, r1
   22374:	bl	20048 <reportDataError@@Base>
   22378:	b	22338 <selectTextTable@@Base+0x478>
   2237c:	mov	r6, r0
   22380:	mov	r1, #1
   22384:	mov	r0, r7
   22388:	mov	sl, r6
   2238c:	bl	2054c <ungetDataCharacters@@Base>
   22390:	b	22278 <selectTextTable@@Base+0x3b8>
   22394:	bl	14d9c <__stack_chk_fail@plt>
   22398:	andeq	r3, r1, ip, lsl #28
   2239c:	andeq	r0, r0, r4, lsl #5
   223a0:	ldrdeq	r2, [r0], -ip
   223a4:	andeq	r2, r0, r0, asr #23
   223a8:	muleq	r0, ip, r2
   223ac:	andeq	r2, r0, ip, lsr #21
   223b0:	andeq	r2, r0, r0, asr #21
   223b4:	andeq	r2, r0, r8, lsl #21
   223b8:	ldr	r3, [pc, #128]	; 22440 <selectTextTable@@Base+0x580>
   223bc:	ldr	r2, [pc, #128]	; 22444 <selectTextTable@@Base+0x584>
   223c0:	add	r3, pc, r3
   223c4:	push	{r4, r5, r6, lr}
   223c8:	sub	sp, sp, #8
   223cc:	ldr	r4, [r3, r2]
   223d0:	mov	r6, r1
   223d4:	add	r1, sp, #2
   223d8:	mov	r5, r0
   223dc:	ldr	r3, [r4]
   223e0:	str	r3, [sp, #4]
   223e4:	bl	22060 <selectTextTable@@Base+0x1a0>
   223e8:	cmp	r0, #0
   223ec:	bne	2240c <selectTextTable@@Base+0x54c>
   223f0:	mov	r0, #1
   223f4:	ldr	r2, [sp, #4]
   223f8:	ldr	r3, [r4]
   223fc:	cmp	r2, r3
   22400:	bne	2243c <selectTextTable@@Base+0x57c>
   22404:	add	sp, sp, #8
   22408:	pop	{r4, r5, r6, pc}
   2240c:	mov	r0, r5
   22410:	add	r1, sp, #3
   22414:	bl	221d4 <selectTextTable@@Base+0x314>
   22418:	cmp	r0, #0
   2241c:	beq	223f0 <selectTextTable@@Base+0x530>
   22420:	mov	r0, r6
   22424:	ldrb	r1, [sp, #2]
   22428:	ldrb	r2, [sp, #3]
   2242c:	bl	21ca4 <setTextTableByte@@Base>
   22430:	cmp	r0, #0
   22434:	bne	223f0 <selectTextTable@@Base+0x530>
   22438:	b	223f4 <selectTextTable@@Base+0x534>
   2243c:	bl	14d9c <__stack_chk_fail@plt>
   22440:	andeq	r3, r1, r8, lsr ip
   22444:	andeq	r0, r0, r4, lsl #5
   22448:	ldr	r3, [pc, #128]	; 224d0 <selectTextTable@@Base+0x610>
   2244c:	ldr	r2, [pc, #128]	; 224d4 <selectTextTable@@Base+0x614>
   22450:	add	r3, pc, r3
   22454:	push	{r4, r5, r6, lr}
   22458:	sub	sp, sp, #16
   2245c:	ldr	r4, [r3, r2]
   22460:	mov	r6, r1
   22464:	add	r1, sp, #8
   22468:	mov	r5, r0
   2246c:	ldr	r3, [r4]
   22470:	str	r3, [sp, #12]
   22474:	bl	22124 <selectTextTable@@Base+0x264>
   22478:	cmp	r0, #0
   2247c:	bne	2249c <selectTextTable@@Base+0x5dc>
   22480:	mov	r0, #1
   22484:	ldr	r2, [sp, #12]
   22488:	ldr	r3, [r4]
   2248c:	cmp	r2, r3
   22490:	bne	224cc <selectTextTable@@Base+0x60c>
   22494:	add	sp, sp, #16
   22498:	pop	{r4, r5, r6, pc}
   2249c:	mov	r0, r5
   224a0:	add	r1, sp, #7
   224a4:	bl	221d4 <selectTextTable@@Base+0x314>
   224a8:	cmp	r0, #0
   224ac:	beq	22480 <selectTextTable@@Base+0x5c0>
   224b0:	mov	r0, r6
   224b4:	ldr	r1, [sp, #8]
   224b8:	ldrb	r2, [sp, #7]
   224bc:	bl	21b1c <setTextTableGlyph@@Base>
   224c0:	cmp	r0, #0
   224c4:	bne	22480 <selectTextTable@@Base+0x5c0>
   224c8:	b	22484 <selectTextTable@@Base+0x5c4>
   224cc:	bl	14d9c <__stack_chk_fail@plt>
   224d0:	andeq	r3, r1, r8, lsr #23
   224d4:	andeq	r0, r0, r4, lsl #5
   224d8:	ldr	r3, [pc, #128]	; 22560 <selectTextTable@@Base+0x6a0>
   224dc:	ldr	r2, [pc, #128]	; 22564 <selectTextTable@@Base+0x6a4>
   224e0:	add	r3, pc, r3
   224e4:	push	{r4, r5, r6, lr}
   224e8:	sub	sp, sp, #16
   224ec:	ldr	r4, [r3, r2]
   224f0:	mov	r6, r1
   224f4:	add	r1, sp, #8
   224f8:	mov	r5, r0
   224fc:	ldr	r3, [r4]
   22500:	str	r3, [sp, #12]
   22504:	bl	22124 <selectTextTable@@Base+0x264>
   22508:	cmp	r0, #0
   2250c:	bne	2252c <selectTextTable@@Base+0x66c>
   22510:	mov	r0, #1
   22514:	ldr	r2, [sp, #12]
   22518:	ldr	r3, [r4]
   2251c:	cmp	r2, r3
   22520:	bne	2255c <selectTextTable@@Base+0x69c>
   22524:	add	sp, sp, #16
   22528:	pop	{r4, r5, r6, pc}
   2252c:	mov	r0, r5
   22530:	add	r1, sp, #7
   22534:	bl	221d4 <selectTextTable@@Base+0x314>
   22538:	cmp	r0, #0
   2253c:	beq	22510 <selectTextTable@@Base+0x650>
   22540:	mov	r0, r6
   22544:	ldr	r1, [sp, #8]
   22548:	ldrb	r2, [sp, #7]
   2254c:	bl	21bb4 <setTextTableCharacter@@Base>
   22550:	cmp	r0, #0
   22554:	bne	22510 <selectTextTable@@Base+0x650>
   22558:	b	22514 <selectTextTable@@Base+0x654>
   2255c:	bl	14d9c <__stack_chk_fail@plt>
   22560:	andeq	r3, r1, r8, lsl fp
   22564:	andeq	r0, r0, r4, lsl #5

00022568 <processTextTableStream@@Base>:
   22568:	ldr	r2, [pc, #4]	; 22574 <processTextTableStream@@Base+0xc>
   2256c:	add	r2, pc, r2
   22570:	b	21d64 <processTextTableLines@@Base>
   22574:			; <UNDEFINED> instruction: 0xfffffacc

00022578 <compileTextTable@@Base>:
   22578:	ldr	r1, [pc, #84]	; 225d4 <compileTextTable@@Base+0x5c>
   2257c:	mov	r2, #0
   22580:	push	{r4, r5, r6, lr}
   22584:	add	r1, pc, r1
   22588:	mov	r5, r0
   2258c:	bl	1b614 <openDataFile@@Base>
   22590:	subs	r4, r0, #0
   22594:	beq	225cc <compileTextTable@@Base+0x54>
   22598:	mov	r1, r5
   2259c:	bl	22568 <processTextTableStream@@Base>
   225a0:	subs	r6, r0, #0
   225a4:	moveq	r5, r6
   225a8:	beq	225bc <compileTextTable@@Base+0x44>
   225ac:	bl	21dec <makeTextTable@@Base>
   225b0:	mov	r5, r0
   225b4:	mov	r0, r6
   225b8:	bl	21d48 <destroyTextTableData@@Base>
   225bc:	mov	r0, r4
   225c0:	bl	14f4c <fclose@plt>
   225c4:	mov	r0, r5
   225c8:	pop	{r4, r5, r6, pc}
   225cc:	mov	r5, r4
   225d0:	b	225c4 <compileTextTable@@Base+0x4c>
   225d4:	andeq	r2, r0, ip, asr #16
   225d8:	ldr	r2, [pc, #44]	; 2260c <compileTextTable@@Base+0x94>
   225dc:	mov	r3, r1
   225e0:	ldr	r1, [pc, #40]	; 22610 <compileTextTable@@Base+0x98>
   225e4:	add	r2, pc, r2
   225e8:	add	r1, pc, r1
   225ec:	ldr	r2, [r2]
   225f0:	cmp	r2, #0
   225f4:	ldreq	r1, [pc, #24]	; 22614 <compileTextTable@@Base+0x9c>
   225f8:	addeq	r1, pc, r1
   225fc:	addeq	r1, r1, #16
   22600:	ldr	r2, [pc, #16]	; 22618 <compileTextTable@@Base+0xa0>
   22604:	add	r2, pc, r2
   22608:	b	20e74 <processPropertyOperand@@Base>
   2260c:	andeq	r3, r1, r4, lsr lr
   22610:	andeq	r3, r1, r8, lsl #16
   22614:	strdeq	r3, [r1], -r8
   22618:	andeq	r2, r0, r8, lsl #17
   2261c:	ldr	r3, [pc, #248]	; 2271c <compileTextTable@@Base+0x1a4>
   22620:	ldr	ip, [pc, #248]	; 22720 <compileTextTable@@Base+0x1a8>
   22624:	add	r3, pc, r3
   22628:	ldr	r2, [pc, #244]	; 22724 <compileTextTable@@Base+0x1ac>
   2262c:	push	{r4, r5, r6, lr}
   22630:	sub	sp, sp, #24
   22634:	ldr	r4, [r3, ip]
   22638:	mov	r6, r1
   2263c:	add	r2, pc, r2
   22640:	add	r1, sp, #4
   22644:	mov	r5, r0
   22648:	ldr	r3, [r4]
   2264c:	str	r3, [sp, #20]
   22650:	bl	20598 <getDataOperand@@Base>
   22654:	cmp	r0, #0
   22658:	beq	22690 <compileTextTable@@Base+0x118>
   2265c:	ldr	r3, [sp, #8]
   22660:	mov	r0, r5
   22664:	cmp	r3, #1
   22668:	beq	226ac <compileTextTable@@Base+0x134>
   2266c:	ldr	r1, [pc, #180]	; 22728 <compileTextTable@@Base+0x1b0>
   22670:	add	r1, pc, r1
   22674:	bl	20048 <reportDataError@@Base>
   22678:	mov	r0, #1
   2267c:	b	22694 <compileTextTable@@Base+0x11c>
   22680:	ldr	r1, [pc, #164]	; 2272c <compileTextTable@@Base+0x1b4>
   22684:	mov	r0, r5
   22688:	add	r1, pc, r1
   2268c:	bl	20048 <reportDataError@@Base>
   22690:	mov	r0, #1
   22694:	ldr	r2, [sp, #20]
   22698:	ldr	r3, [r4]
   2269c:	cmp	r2, r3
   226a0:	bne	22718 <compileTextTable@@Base+0x1a0>
   226a4:	add	sp, sp, #24
   226a8:	pop	{r4, r5, r6, pc}
   226ac:	ldr	r2, [pc, #124]	; 22730 <compileTextTable@@Base+0x1b8>
   226b0:	add	r1, sp, #12
   226b4:	add	r2, pc, r2
   226b8:	bl	20598 <getDataOperand@@Base>
   226bc:	cmp	r0, #0
   226c0:	beq	22690 <compileTextTable@@Base+0x118>
   226c4:	ldr	r3, [sp, #16]
   226c8:	cmp	r3, #1
   226cc:	bne	22680 <compileTextTable@@Base+0x108>
   226d0:	ldr	r3, [sp, #12]
   226d4:	ldr	r2, [r3]
   226d8:	bic	r3, r2, #255	; 0xff
   226dc:	cmp	r3, #10240	; 0x2800
   226e0:	beq	226f8 <compileTextTable@@Base+0x180>
   226e4:	ldr	r1, [pc, #72]	; 22734 <compileTextTable@@Base+0x1bc>
   226e8:	mov	r0, r5
   226ec:	add	r1, pc, r1
   226f0:	bl	20048 <reportDataError@@Base>
   226f4:	b	22690 <compileTextTable@@Base+0x118>
   226f8:	ldr	r3, [sp, #4]
   226fc:	mov	r0, r6
   22700:	uxtb	r2, r2
   22704:	ldr	r1, [r3]
   22708:	bl	21bb4 <setTextTableCharacter@@Base>
   2270c:	cmp	r0, #0
   22710:	beq	22694 <compileTextTable@@Base+0x11c>
   22714:	b	22690 <compileTextTable@@Base+0x118>
   22718:	bl	14d9c <__stack_chk_fail@plt>
   2271c:	ldrdeq	r3, [r1], -r4
   22720:	andeq	r0, r0, r4, lsl #5
   22724:	andeq	r2, r0, r8, ror #16
   22728:	muleq	r0, r8, r8
   2272c:	andeq	r2, r0, r0, asr r8
   22730:	andeq	r2, r0, ip, lsl #16
   22734:	andeq	r2, r0, ip, asr #15
   22738:	ldr	r3, [pc, #136]	; 227c8 <compileTextTable@@Base+0x250>
   2273c:	ldr	ip, [pc, #136]	; 227cc <compileTextTable@@Base+0x254>
   22740:	add	r3, pc, r3
   22744:	ldr	r2, [pc, #132]	; 227d0 <compileTextTable@@Base+0x258>
   22748:	push	{r4, r5, lr}
   2274c:	sub	sp, sp, #20
   22750:	ldr	r4, [r3, ip]
   22754:	add	r1, sp, #4
   22758:	add	r2, pc, r2
   2275c:	mov	r5, r0
   22760:	ldr	r3, [r4]
   22764:	str	r3, [sp, #12]
   22768:	bl	20598 <getDataOperand@@Base>
   2276c:	cmp	r0, #0
   22770:	bne	22790 <compileTextTable@@Base+0x218>
   22774:	ldr	r2, [sp, #12]
   22778:	mov	r0, #1
   2277c:	ldr	r3, [r4]
   22780:	cmp	r2, r3
   22784:	bne	227c4 <compileTextTable@@Base+0x24c>
   22788:	add	sp, sp, #20
   2278c:	pop	{r4, r5, pc}
   22790:	ldr	r0, [pc, #60]	; 227d4 <compileTextTable@@Base+0x25c>
   22794:	ldmib	sp, {r1, r2}
   22798:	add	r0, pc, r0
   2279c:	bl	200f4 <isKeyword@@Base>
   227a0:	cmp	r0, #0
   227a4:	bne	22774 <compileTextTable@@Base+0x1fc>
   227a8:	ldr	r1, [pc, #40]	; 227d8 <compileTextTable@@Base+0x260>
   227ac:	mov	r0, r5
   227b0:	ldr	r2, [sp, #8]
   227b4:	add	r1, pc, r1
   227b8:	ldr	r3, [sp, #4]
   227bc:	bl	20048 <reportDataError@@Base>
   227c0:	b	22774 <compileTextTable@@Base+0x1fc>
   227c4:	bl	14d9c <__stack_chk_fail@plt>
   227c8:			; <UNDEFINED> instruction: 0x000138b8
   227cc:	andeq	r0, r0, r4, lsl #5
   227d0:	ldrdeq	r2, [r0], -r8
   227d4:	andeq	r2, r0, r8, ror r8
   227d8:	muleq	r0, r4, r7
   227dc:	ldr	r3, [pc, #228]	; 228c8 <compileTextTable@@Base+0x350>
   227e0:	ldr	ip, [pc, #228]	; 228cc <compileTextTable@@Base+0x354>
   227e4:	add	r3, pc, r3
   227e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   227ec:	sub	sp, sp, #24
   227f0:	ldr	r4, [r3, ip]
   227f4:	mov	r5, r1
   227f8:	add	r1, sp, #12
   227fc:	mov	r6, r0
   22800:	ldr	r3, [r4]
   22804:	str	r3, [sp, #20]
   22808:	bl	20598 <getDataOperand@@Base>
   2280c:	cmp	r0, #0
   22810:	beq	22844 <compileTextTable@@Base+0x2cc>
   22814:	ldr	r2, [sp, #16]
   22818:	ldr	r3, [sp, #12]
   2281c:	cmp	r2, #2
   22820:	bls	22830 <compileTextTable@@Base+0x2b8>
   22824:	ldr	r1, [r3]
   22828:	cmp	r1, #85	; 0x55
   2282c:	beq	2285c <compileTextTable@@Base+0x2e4>
   22830:	ldr	r1, [pc, #152]	; 228d0 <compileTextTable@@Base+0x358>
   22834:	mov	r0, r6
   22838:	add	r1, pc, r1
   2283c:	bl	20048 <reportDataError@@Base>
   22840:	mov	r0, #0
   22844:	ldr	r2, [sp, #20]
   22848:	ldr	r3, [r4]
   2284c:	cmp	r2, r3
   22850:	bne	228c4 <compileTextTable@@Base+0x34c>
   22854:	add	sp, sp, #24
   22858:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2285c:	ldr	r1, [r3, #4]
   22860:	cmp	r1, #43	; 0x2b
   22864:	bne	22830 <compileTextTable@@Base+0x2b8>
   22868:	sub	r7, r2, #2
   2286c:	add	sl, sp, #4
   22870:	add	r9, sp, #8
   22874:	add	r8, r3, #8
   22878:	mov	r3, #0
   2287c:	str	r3, [r5]
   22880:	ldr	r0, [r8], #4
   22884:	mov	r1, sl
   22888:	mov	r2, r9
   2288c:	bl	1fd6c <isHexadecimalDigit@@Base>
   22890:	cmp	r0, #0
   22894:	beq	228b8 <compileTextTable@@Base+0x340>
   22898:	ldr	r1, [r5]
   2289c:	subs	r7, r7, #1
   228a0:	ldmib	sp, {r2, r3}
   228a4:	orr	r3, r2, r1, lsl r3
   228a8:	str	r3, [r5]
   228ac:	bne	22880 <compileTextTable@@Base+0x308>
   228b0:	mov	r0, #1
   228b4:	b	22844 <compileTextTable@@Base+0x2cc>
   228b8:	ldr	r2, [sp, #16]
   228bc:	ldr	r3, [sp, #12]
   228c0:	b	22830 <compileTextTable@@Base+0x2b8>
   228c4:	bl	14d9c <__stack_chk_fail@plt>
   228c8:	andeq	r3, r1, r4, lsl r8
   228cc:	andeq	r0, r0, r4, lsl #5
   228d0:	andeq	r2, r0, r8, lsr r7
   228d4:	ldr	r3, [pc, #180]	; 22990 <compileTextTable@@Base+0x418>
   228d8:	ldr	ip, [pc, #180]	; 22994 <compileTextTable@@Base+0x41c>
   228dc:	add	r3, pc, r3
   228e0:	ldr	r2, [pc, #176]	; 22998 <compileTextTable@@Base+0x420>
   228e4:	push	{r4, r5, r6, lr}
   228e8:	sub	sp, sp, #16
   228ec:	ldr	r4, [r3, ip]
   228f0:	mov	r6, r1
   228f4:	add	r2, pc, r2
   228f8:	add	r1, sp, #4
   228fc:	mov	r5, r0
   22900:	ldr	r3, [r4]
   22904:	str	r3, [sp, #12]
   22908:	bl	227dc <compileTextTable@@Base+0x264>
   2290c:	cmp	r0, #0
   22910:	bne	22930 <compileTextTable@@Base+0x3b8>
   22914:	mov	r0, #1
   22918:	ldr	r2, [sp, #12]
   2291c:	ldr	r3, [r4]
   22920:	cmp	r2, r3
   22924:	bne	2298c <compileTextTable@@Base+0x414>
   22928:	add	sp, sp, #16
   2292c:	pop	{r4, r5, r6, pc}
   22930:	ldr	r2, [pc, #100]	; 2299c <compileTextTable@@Base+0x424>
   22934:	mov	r0, r5
   22938:	add	r1, sp, #8
   2293c:	add	r2, pc, r2
   22940:	bl	227dc <compileTextTable@@Base+0x264>
   22944:	cmp	r0, #0
   22948:	beq	22914 <compileTextTable@@Base+0x39c>
   2294c:	ldr	r2, [sp, #8]
   22950:	bic	r3, r2, #255	; 0xff
   22954:	cmp	r3, #10240	; 0x2800
   22958:	bne	22978 <compileTextTable@@Base+0x400>
   2295c:	mov	r0, r6
   22960:	uxtb	r2, r2
   22964:	ldr	r1, [sp, #4]
   22968:	bl	21bb4 <setTextTableCharacter@@Base>
   2296c:	cmp	r0, #0
   22970:	bne	22914 <compileTextTable@@Base+0x39c>
   22974:	b	22918 <compileTextTable@@Base+0x3a0>
   22978:	ldr	r1, [pc, #32]	; 229a0 <compileTextTable@@Base+0x428>
   2297c:	mov	r0, r5
   22980:	add	r1, pc, r1
   22984:	bl	20048 <reportDataError@@Base>
   22988:	b	22914 <compileTextTable@@Base+0x39c>
   2298c:	bl	14d9c <__stack_chk_fail@plt>
   22990:	andeq	r3, r1, ip, lsl r7
   22994:	andeq	r0, r0, r4, lsl #5
   22998:	ldrdeq	r2, [r0], -r4
   2299c:	andeq	r2, r0, r4, lsl #11
   229a0:	andeq	r2, r0, r8, lsr r5
   229a4:	ldr	r3, [pc, #196]	; 22a70 <compileTextTable@@Base+0x4f8>
   229a8:	ldr	ip, [pc, #196]	; 22a74 <compileTextTable@@Base+0x4fc>
   229ac:	add	r3, pc, r3
   229b0:	ldr	r2, [pc, #192]	; 22a78 <compileTextTable@@Base+0x500>
   229b4:	push	{r4, r5, r6, lr}
   229b8:	sub	sp, sp, #24
   229bc:	ldr	r4, [r3, ip]
   229c0:	add	r1, sp, #12
   229c4:	add	r2, pc, r2
   229c8:	mov	r6, r0
   229cc:	ldr	r3, [r4]
   229d0:	str	r3, [sp, #20]
   229d4:	bl	20598 <getDataOperand@@Base>
   229d8:	cmp	r0, #0
   229dc:	beq	22a30 <compileTextTable@@Base+0x4b8>
   229e0:	ldr	r3, [pc, #148]	; 22a7c <compileTextTable@@Base+0x504>
   229e4:	ldr	r5, [pc, #148]	; 22a80 <compileTextTable@@Base+0x508>
   229e8:	add	r3, pc, r3
   229ec:	add	r5, pc, r5
   229f0:	ldr	r3, [r3]
   229f4:	cmp	r3, #0
   229f8:	ldreq	r5, [pc, #132]	; 22a84 <compileTextTable@@Base+0x50c>
   229fc:	addeq	r5, pc, r5
   22a00:	mov	r0, r5
   22a04:	ldr	r1, [sp, #12]
   22a08:	ldr	r2, [sp, #16]
   22a0c:	bl	200f4 <isKeyword@@Base>
   22a10:	cmp	r0, #0
   22a14:	beq	22a4c <compileTextTable@@Base+0x4d4>
   22a18:	ldr	r3, [pc, #104]	; 22a88 <compileTextTable@@Base+0x510>
   22a1c:	add	r3, pc, r3
   22a20:	ldr	r2, [r3]
   22a24:	rsbs	r2, r2, #1
   22a28:	movcc	r2, #0
   22a2c:	str	r2, [r3]
   22a30:	ldr	r2, [sp, #20]
   22a34:	mov	r0, #1
   22a38:	ldr	r3, [r4]
   22a3c:	cmp	r2, r3
   22a40:	bne	22a6c <compileTextTable@@Base+0x4f4>
   22a44:	add	sp, sp, #24
   22a48:	pop	{r4, r5, r6, pc}
   22a4c:	ldr	r1, [pc, #56]	; 22a8c <compileTextTable@@Base+0x514>
   22a50:	mov	r0, r6
   22a54:	ldr	r2, [sp, #16]
   22a58:	ldr	r3, [sp, #12]
   22a5c:	add	r1, pc, r1
   22a60:	str	r5, [sp]
   22a64:	bl	20048 <reportDataError@@Base>
   22a68:	b	22a30 <compileTextTable@@Base+0x4b8>
   22a6c:	bl	14d9c <__stack_chk_fail@plt>
   22a70:	andeq	r3, r1, ip, asr #12
   22a74:	andeq	r0, r0, r4, lsl #5
   22a78:	ldrdeq	r2, [r0], -r0
   22a7c:	andeq	r3, r1, r0, lsr sl
   22a80:	andeq	r2, r0, ip, lsr r6
   22a84:	andeq	r2, r0, ip, lsr r6
   22a88:	strdeq	r3, [r1], -ip
   22a8c:	andeq	r2, r0, ip, asr #10
   22a90:	ldr	r3, [pc, #168]	; 22b40 <compileTextTable@@Base+0x5c8>
   22a94:	ldr	ip, [pc, #168]	; 22b44 <compileTextTable@@Base+0x5cc>
   22a98:	add	r3, pc, r3
   22a9c:	ldr	r2, [pc, #164]	; 22b48 <compileTextTable@@Base+0x5d0>
   22aa0:	push	{r4, r5, lr}
   22aa4:	sub	sp, sp, #28
   22aa8:	ldr	r4, [r3, ip]
   22aac:	add	r1, sp, #4
   22ab0:	add	r2, pc, r2
   22ab4:	mov	r5, r0
   22ab8:	ldr	r3, [r4]
   22abc:	str	r3, [sp, #20]
   22ac0:	bl	20598 <getDataOperand@@Base>
   22ac4:	cmp	r0, #0
   22ac8:	bne	22ae8 <compileTextTable@@Base+0x570>
   22acc:	mov	r0, #1
   22ad0:	ldr	r2, [sp, #20]
   22ad4:	ldr	r3, [r4]
   22ad8:	cmp	r2, r3
   22adc:	bne	22b3c <compileTextTable@@Base+0x5c4>
   22ae0:	add	sp, sp, #28
   22ae4:	pop	{r4, r5, pc}
   22ae8:	ldr	r0, [pc, #92]	; 22b4c <compileTextTable@@Base+0x5d4>
   22aec:	ldmib	sp, {r1, r2}
   22af0:	add	r0, pc, r0
   22af4:	bl	200f4 <isKeyword@@Base>
   22af8:	cmp	r0, #0
   22afc:	mov	r0, r5
   22b00:	beq	22b30 <compileTextTable@@Base+0x5b8>
   22b04:	ldr	r2, [pc, #68]	; 22b50 <compileTextTable@@Base+0x5d8>
   22b08:	add	r1, sp, #12
   22b0c:	add	r2, pc, r2
   22b10:	bl	20598 <getDataOperand@@Base>
   22b14:	cmp	r0, #0
   22b18:	beq	22acc <compileTextTable@@Base+0x554>
   22b1c:	mov	r0, r5
   22b20:	ldr	r1, [sp, #12]
   22b24:	ldr	r2, [sp, #16]
   22b28:	bl	2104c <includeDataFile@@Base>
   22b2c:	b	22ad0 <compileTextTable@@Base+0x558>
   22b30:	ldmib	sp, {r1, r2}
   22b34:	bl	2104c <includeDataFile@@Base>
   22b38:	b	22ad0 <compileTextTable@@Base+0x558>
   22b3c:	bl	14d9c <__stack_chk_fail@plt>
   22b40:	andeq	r3, r1, r0, ror #10
   22b44:	andeq	r0, r0, r4, lsl #5
   22b48:	andeq	r2, r0, ip, lsr #10
   22b4c:	andeq	r2, r0, r0, ror #10
   22b50:	andeq	r2, r0, r0, ror #9

00022b54 <processGnomeBrailleStream@@Base>:
   22b54:	push	{r4, r5, r6, lr}
   22b58:	mov	r5, #0
   22b5c:	ldr	r4, [pc, #60]	; 22ba0 <processGnomeBrailleStream@@Base+0x4c>
   22b60:	ldr	r2, [pc, #60]	; 22ba4 <processGnomeBrailleStream@@Base+0x50>
   22b64:	add	r4, pc, r4
   22b68:	add	r2, pc, r2
   22b6c:	str	r5, [r4]
   22b70:	bl	21d64 <processTextTableLines@@Base>
   22b74:	subs	r6, r0, #0
   22b78:	beq	22b98 <processGnomeBrailleStream@@Base+0x44>
   22b7c:	ldr	r3, [r4]
   22b80:	cmp	r3, r5
   22b84:	beq	22b98 <processGnomeBrailleStream@@Base+0x44>
   22b88:	ldr	r1, [pc, #24]	; 22ba8 <processGnomeBrailleStream@@Base+0x54>
   22b8c:	mov	r0, r5
   22b90:	add	r1, pc, r1
   22b94:	bl	20048 <reportDataError@@Base>
   22b98:	mov	r0, r6
   22b9c:	pop	{r4, r5, r6, pc}
   22ba0:			; <UNDEFINED> instruction: 0x000138b4
   22ba4:			; <UNDEFINED> instruction: 0xfffffa68
   22ba8:	andeq	r2, r0, r8, ror #8
   22bac:	mov	r3, r1
   22bb0:	ldr	r2, [pc, #12]	; 22bc4 <processGnomeBrailleStream@@Base+0x70>
   22bb4:	ldr	r1, [pc, #12]	; 22bc8 <processGnomeBrailleStream@@Base+0x74>
   22bb8:	add	r2, pc, r2
   22bbc:	add	r1, pc, r1
   22bc0:	b	20e74 <processPropertyOperand@@Base>
   22bc4:	andeq	r2, r0, r4, ror r5
   22bc8:	andeq	r3, r1, r4, ror r2
   22bcc:	ldr	r1, [pc, #16]	; 22be4 <processGnomeBrailleStream@@Base+0x90>
   22bd0:	push	{r3, lr}
   22bd4:	add	r1, pc, r1
   22bd8:	bl	20048 <reportDataError@@Base>
   22bdc:	mov	r0, #1
   22be0:	pop	{r3, pc}
   22be4:	andeq	r2, r0, ip, ror #10
   22be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22bec:	sub	sp, sp, #52	; 0x34
   22bf0:	ldr	r4, [pc, #708]	; 22ebc <processGnomeBrailleStream@@Base+0x368>
   22bf4:	mov	fp, r2
   22bf8:	ldr	lr, [pc, #704]	; 22ec0 <processGnomeBrailleStream@@Base+0x36c>
   22bfc:	mov	r2, r3
   22c00:	add	r4, pc, r4
   22c04:	str	r0, [sp, #4]
   22c08:	mov	r7, r1
   22c0c:	add	r1, sp, #36	; 0x24
   22c10:	ldr	lr, [r4, lr]
   22c14:	mov	r3, r4
   22c18:	ldr	r3, [lr]
   22c1c:	str	lr, [sp]
   22c20:	str	r3, [sp, #44]	; 0x2c
   22c24:	bl	20598 <getDataOperand@@Base>
   22c28:	cmp	r0, #0
   22c2c:	beq	22d6c <processGnomeBrailleStream@@Base+0x218>
   22c30:	cmp	fp, #0
   22c34:	ldr	r4, [sp, #36]	; 0x24
   22c38:	ble	22d68 <processGnomeBrailleStream@@Base+0x214>
   22c3c:	ldr	ip, [pc, #640]	; 22ec4 <processGnomeBrailleStream@@Base+0x370>
   22c40:	mov	r5, #0
   22c44:	add	sl, sp, #28
   22c48:	mov	r6, r5
   22c4c:	add	ip, pc, ip
   22c50:	str	ip, [sp, #8]
   22c54:	add	ip, sp, #32
   22c58:	str	ip, [sp, #16]
   22c5c:	b	22c70 <processGnomeBrailleStream@@Base+0x11c>
   22c60:	add	r6, r6, #1
   22c64:	add	r5, r5, #4
   22c68:	cmp	r6, fp
   22c6c:	beq	22d68 <processGnomeBrailleStream@@Base+0x214>
   22c70:	ldr	r3, [r4]
   22c74:	cmp	r3, #92	; 0x5c
   22c78:	addne	r4, r4, #4
   22c7c:	strne	r3, [r7, r5]
   22c80:	bne	22c60 <processGnomeBrailleStream@@Base+0x10c>
   22c84:	ldr	r3, [r4, #4]
   22c88:	add	r2, r4, #4
   22c8c:	sub	r3, r3, #70	; 0x46
   22c90:	cmp	r3, #50	; 0x32
   22c94:	addls	pc, pc, r3, lsl #2
   22c98:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22c9c:	b	22d98 <processGnomeBrailleStream@@Base+0x244>
   22ca0:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22ca4:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22ca8:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cac:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cb0:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cb4:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cb8:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cbc:	b	22da8 <processGnomeBrailleStream@@Base+0x254>
   22cc0:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cc4:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cc8:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22ccc:	b	22db8 <processGnomeBrailleStream@@Base+0x264>
   22cd0:	b	22dc8 <processGnomeBrailleStream@@Base+0x274>
   22cd4:	b	22dd8 <processGnomeBrailleStream@@Base+0x284>
   22cd8:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cdc:	b	22de8 <processGnomeBrailleStream@@Base+0x294>
   22ce0:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22ce4:	b	22df8 <processGnomeBrailleStream@@Base+0x2a4>
   22ce8:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cec:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cf0:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cf4:	b	22d88 <processGnomeBrailleStream@@Base+0x234>
   22cf8:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22cfc:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d00:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d04:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d08:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d0c:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d10:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d14:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d18:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d1c:	b	22d98 <processGnomeBrailleStream@@Base+0x244>
   22d20:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d24:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d28:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d2c:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d30:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d34:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d38:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d3c:	b	22da8 <processGnomeBrailleStream@@Base+0x254>
   22d40:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d44:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d48:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d4c:	b	22db8 <processGnomeBrailleStream@@Base+0x264>
   22d50:	b	22dc8 <processGnomeBrailleStream@@Base+0x274>
   22d54:	b	22dd8 <processGnomeBrailleStream@@Base+0x284>
   22d58:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d5c:	b	22de8 <processGnomeBrailleStream@@Base+0x294>
   22d60:	b	22e90 <processGnomeBrailleStream@@Base+0x33c>
   22d64:	b	22df8 <processGnomeBrailleStream@@Base+0x2a4>
   22d68:	mov	r0, #1
   22d6c:	ldr	ip, [sp]
   22d70:	ldr	r2, [sp, #44]	; 0x2c
   22d74:	ldr	r3, [ip]
   22d78:	cmp	r2, r3
   22d7c:	bne	22eb8 <processGnomeBrailleStream@@Base+0x364>
   22d80:	add	sp, sp, #52	; 0x34
   22d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d88:	mov	r3, #92	; 0x5c
   22d8c:	mov	r4, r2
   22d90:	str	r3, [r7, r5]
   22d94:	b	22c60 <processGnomeBrailleStream@@Base+0x10c>
   22d98:	mov	r3, #12
   22d9c:	mov	r4, r2
   22da0:	str	r3, [r7, r5]
   22da4:	b	22c60 <processGnomeBrailleStream@@Base+0x10c>
   22da8:	mov	r3, #10
   22dac:	mov	r4, r2
   22db0:	str	r3, [r7, r5]
   22db4:	b	22c60 <processGnomeBrailleStream@@Base+0x10c>
   22db8:	mov	r3, #13
   22dbc:	mov	r4, r2
   22dc0:	str	r3, [r7, r5]
   22dc4:	b	22c60 <processGnomeBrailleStream@@Base+0x10c>
   22dc8:	mov	r3, #32
   22dcc:	mov	r4, r2
   22dd0:	str	r3, [r7, r5]
   22dd4:	b	22c60 <processGnomeBrailleStream@@Base+0x10c>
   22dd8:	mov	r1, #9
   22ddc:	mov	r4, r2
   22de0:	str	r1, [r7, r5]
   22de4:	b	22c60 <processGnomeBrailleStream@@Base+0x10c>
   22de8:	mov	r3, #11
   22dec:	mov	r4, r2
   22df0:	str	r3, [r7, r5]
   22df4:	b	22c60 <processGnomeBrailleStream@@Base+0x10c>
   22df8:	ldr	r3, [sp, #36]	; 0x24
   22dfc:	add	r4, r4, #8
   22e00:	ldr	ip, [sp, #40]	; 0x28
   22e04:	mov	r1, #0
   22e08:	rsb	r2, r3, r4
   22e0c:	str	r4, [sp, #12]
   22e10:	str	r1, [r7, r5]
   22e14:	asr	r2, r2, #2
   22e18:	subs	r8, ip, r2
   22e1c:	beq	22eb0 <processGnomeBrailleStream@@Base+0x35c>
   22e20:	str	r6, [sp, #20]
   22e24:	mov	r9, r4
   22e28:	add	r6, sp, #32
   22e2c:	b	22e50 <processGnomeBrailleStream@@Base+0x2fc>
   22e30:	ldr	r0, [r7, r5]
   22e34:	subs	r8, r8, #1
   22e38:	ldr	r2, [sp, #32]
   22e3c:	mov	r4, r9
   22e40:	ldr	r1, [sp, #28]
   22e44:	orr	r2, r1, r0, lsl r2
   22e48:	str	r2, [r7, r5]
   22e4c:	beq	22e70 <processGnomeBrailleStream@@Base+0x31c>
   22e50:	ldr	r0, [r9]
   22e54:	mov	r1, sl
   22e58:	mov	r2, r6
   22e5c:	mov	r4, r9
   22e60:	bl	1fd6c <isHexadecimalDigit@@Base>
   22e64:	add	r9, r9, #4
   22e68:	cmp	r0, #0
   22e6c:	bne	22e30 <processGnomeBrailleStream@@Base+0x2dc>
   22e70:	ldr	r3, [sp, #12]
   22e74:	ldr	r6, [sp, #20]
   22e78:	cmp	r4, r3
   22e7c:	bne	22c60 <processGnomeBrailleStream@@Base+0x10c>
   22e80:	ldr	r3, [sp, #36]	; 0x24
   22e84:	rsb	r2, r3, r4
   22e88:	asr	r2, r2, #2
   22e8c:	b	22ea0 <processGnomeBrailleStream@@Base+0x34c>
   22e90:	ldr	r3, [sp, #36]	; 0x24
   22e94:	mov	r4, r2
   22e98:	rsb	r2, r3, r2
   22e9c:	asr	r2, r2, #2
   22ea0:	add	r2, r2, #1
   22ea4:	ldmib	sp, {r0, r1}
   22ea8:	bl	20048 <reportDataError@@Base>
   22eac:	b	22c60 <processGnomeBrailleStream@@Base+0x10c>
   22eb0:	ldr	r4, [sp, #12]
   22eb4:	b	22ea0 <processGnomeBrailleStream@@Base+0x34c>
   22eb8:	bl	14d9c <__stack_chk_fail@plt>
   22ebc:	strdeq	r3, [r1], -r8
   22ec0:	andeq	r0, r0, r4, lsl #5
   22ec4:	andeq	r2, r0, ip, lsl #10
   22ec8:	ldr	r3, [pc, #200]	; 22f98 <processGnomeBrailleStream@@Base+0x444>
   22ecc:	ldr	ip, [pc, #200]	; 22f9c <processGnomeBrailleStream@@Base+0x448>
   22ed0:	add	r3, pc, r3
   22ed4:	ldr	r2, [pc, #196]	; 22fa0 <processGnomeBrailleStream@@Base+0x44c>
   22ed8:	push	{r4, r5, r6, r7, r8, lr}
   22edc:	sub	sp, sp, #16
   22ee0:	ldr	r7, [r3, ip]
   22ee4:	mov	r6, r1
   22ee8:	mov	r4, #0
   22eec:	add	r1, sp, #4
   22ef0:	add	r2, pc, r2
   22ef4:	mov	r8, r0
   22ef8:	ldr	r3, [r7]
   22efc:	strb	r4, [r6]
   22f00:	str	r3, [sp, #12]
   22f04:	bl	20598 <getDataOperand@@Base>
   22f08:	cmp	r0, r4
   22f0c:	beq	22f78 <processGnomeBrailleStream@@Base+0x424>
   22f10:	ldr	r2, [sp, #8]
   22f14:	cmp	r2, #0
   22f18:	beq	22f78 <processGnomeBrailleStream@@Base+0x424>
   22f1c:	ldr	r3, [sp, #4]
   22f20:	mov	ip, r4
   22f24:	mov	r0, #1
   22f28:	b	22f48 <processGnomeBrailleStream@@Base+0x3f4>
   22f2c:	ldrb	r1, [r6]
   22f30:	orr	r5, r1, r0, lsl r5
   22f34:	strb	r5, [r6]
   22f38:	add	ip, ip, #1
   22f3c:	cmp	ip, r2
   22f40:	mov	r4, ip
   22f44:	beq	22f78 <processGnomeBrailleStream@@Base+0x424>
   22f48:	ldr	r4, [r3, r4, lsl #2]
   22f4c:	sub	r5, r4, #49	; 0x31
   22f50:	cmp	r5, #7
   22f54:	bls	22f2c <processGnomeBrailleStream@@Base+0x3d8>
   22f58:	cmp	r4, #45	; 0x2d
   22f5c:	bne	22f38 <processGnomeBrailleStream@@Base+0x3e4>
   22f60:	ldr	r1, [pc, #60]	; 22fa4 <processGnomeBrailleStream@@Base+0x450>
   22f64:	mov	r0, r8
   22f68:	add	r1, pc, r1
   22f6c:	bl	20048 <reportDataError@@Base>
   22f70:	mov	r0, #0
   22f74:	b	22f7c <processGnomeBrailleStream@@Base+0x428>
   22f78:	mov	r0, #1
   22f7c:	ldr	r2, [sp, #12]
   22f80:	ldr	r3, [r7]
   22f84:	cmp	r2, r3
   22f88:	bne	22f94 <processGnomeBrailleStream@@Base+0x440>
   22f8c:	add	sp, sp, #16
   22f90:	pop	{r4, r5, r6, r7, r8, pc}
   22f94:	bl	14d9c <__stack_chk_fail@plt>
   22f98:	andeq	r3, r1, r8, lsr #2
   22f9c:	andeq	r0, r0, r4, lsl #5
   22fa0:	ldrdeq	r1, [r0], -r0
   22fa4:	andeq	r2, r0, r0, lsl r2
   22fa8:	ldr	ip, [pc, #140]	; 2303c <processGnomeBrailleStream@@Base+0x4e8>
   22fac:	mov	r2, #1
   22fb0:	push	{r4, r5, r6, lr}
   22fb4:	add	ip, pc, ip
   22fb8:	ldr	lr, [pc, #128]	; 23040 <processGnomeBrailleStream@@Base+0x4ec>
   22fbc:	sub	sp, sp, #16
   22fc0:	ldr	r3, [pc, #124]	; 23044 <processGnomeBrailleStream@@Base+0x4f0>
   22fc4:	mov	r6, r1
   22fc8:	add	r1, sp, #8
   22fcc:	mov	r5, r0
   22fd0:	ldr	r4, [ip, lr]
   22fd4:	add	r3, pc, r3
   22fd8:	ldr	ip, [r4]
   22fdc:	str	ip, [sp, #12]
   22fe0:	bl	22be8 <processGnomeBrailleStream@@Base+0x94>
   22fe4:	cmp	r0, #0
   22fe8:	bne	23008 <processGnomeBrailleStream@@Base+0x4b4>
   22fec:	mov	r0, #1
   22ff0:	ldr	r2, [sp, #12]
   22ff4:	ldr	r3, [r4]
   22ff8:	cmp	r2, r3
   22ffc:	bne	23038 <processGnomeBrailleStream@@Base+0x4e4>
   23000:	add	sp, sp, #16
   23004:	pop	{r4, r5, r6, pc}
   23008:	mov	r0, r5
   2300c:	add	r1, sp, #7
   23010:	bl	22ec8 <processGnomeBrailleStream@@Base+0x374>
   23014:	cmp	r0, #0
   23018:	beq	22fec <processGnomeBrailleStream@@Base+0x498>
   2301c:	mov	r0, r6
   23020:	ldr	r1, [sp, #8]
   23024:	ldrb	r2, [sp, #7]
   23028:	bl	21bb4 <setTextTableCharacter@@Base>
   2302c:	cmp	r0, #0
   23030:	bne	22fec <processGnomeBrailleStream@@Base+0x498>
   23034:	b	22ff0 <processGnomeBrailleStream@@Base+0x49c>
   23038:	bl	14d9c <__stack_chk_fail@plt>
   2303c:	andeq	r3, r1, r4, asr #32
   23040:	andeq	r0, r0, r4, lsl #5
   23044:	strdeq	r1, [r0], -r4
   23048:	ldr	ip, [pc, #172]	; 230fc <processGnomeBrailleStream@@Base+0x5a8>
   2304c:	mov	r2, #2
   23050:	push	{r4, r5, r6, lr}
   23054:	add	ip, pc, ip
   23058:	ldr	lr, [pc, #160]	; 23100 <processGnomeBrailleStream@@Base+0x5ac>
   2305c:	sub	sp, sp, #16
   23060:	ldr	r3, [pc, #156]	; 23104 <processGnomeBrailleStream@@Base+0x5b0>
   23064:	mov	r6, r1
   23068:	add	r1, sp, #4
   2306c:	mov	r5, r0
   23070:	ldr	r4, [ip, lr]
   23074:	add	r3, pc, r3
   23078:	ldr	ip, [r4]
   2307c:	str	ip, [sp, #12]
   23080:	bl	22be8 <processGnomeBrailleStream@@Base+0x94>
   23084:	cmp	r0, #0
   23088:	bne	230a8 <processGnomeBrailleStream@@Base+0x554>
   2308c:	mov	r0, #1
   23090:	ldr	r2, [sp, #12]
   23094:	ldr	r3, [r4]
   23098:	cmp	r2, r3
   2309c:	bne	230f8 <processGnomeBrailleStream@@Base+0x5a4>
   230a0:	add	sp, sp, #16
   230a4:	pop	{r4, r5, r6, pc}
   230a8:	mov	r0, r5
   230ac:	add	r1, sp, #3
   230b0:	bl	22ec8 <processGnomeBrailleStream@@Base+0x374>
   230b4:	cmp	r0, #0
   230b8:	beq	2308c <processGnomeBrailleStream@@Base+0x538>
   230bc:	mov	r0, r6
   230c0:	ldr	r1, [sp, #4]
   230c4:	ldrb	r2, [sp, #3]
   230c8:	bl	21bb4 <setTextTableCharacter@@Base>
   230cc:	cmp	r0, #0
   230d0:	bne	230dc <processGnomeBrailleStream@@Base+0x588>
   230d4:	mov	r0, #0
   230d8:	b	23090 <processGnomeBrailleStream@@Base+0x53c>
   230dc:	mov	r0, r6
   230e0:	ldr	r1, [sp, #8]
   230e4:	ldrb	r2, [sp, #3]
   230e8:	bl	21bb4 <setTextTableCharacter@@Base>
   230ec:	cmp	r0, #0
   230f0:	beq	230d4 <processGnomeBrailleStream@@Base+0x580>
   230f4:	b	2308c <processGnomeBrailleStream@@Base+0x538>
   230f8:	bl	14d9c <__stack_chk_fail@plt>
   230fc:	andeq	r2, r1, r4, lsr #31
   23100:	andeq	r0, r0, r4, lsl #5
   23104:	andeq	r2, r0, r4, lsr #2

00023108 <processLibLouisStream@@Base>:
   23108:	ldr	r2, [pc, #4]	; 23114 <processLibLouisStream@@Base+0xc>
   2310c:	add	r2, pc, r2
   23110:	b	21d64 <processTextTableLines@@Base>
   23114:			; <UNDEFINED> instruction: 0xfffffa98
   23118:	subs	r2, r1, #1
   2311c:	bxeq	lr
   23120:	bcc	232f8 <processLibLouisStream@@Base+0x1f0>
   23124:	cmp	r0, r1
   23128:	bls	232dc <processLibLouisStream@@Base+0x1d4>
   2312c:	tst	r1, r2
   23130:	beq	232e8 <processLibLouisStream@@Base+0x1e0>
   23134:	clz	r3, r0
   23138:	clz	r2, r1
   2313c:	sub	r3, r2, r3
   23140:	rsbs	r3, r3, #31
   23144:	addne	r3, r3, r3, lsl #1
   23148:	mov	r2, #0
   2314c:	addne	pc, pc, r3, lsl #2
   23150:	nop	{0}
   23154:	cmp	r0, r1, lsl #31
   23158:	adc	r2, r2, r2
   2315c:	subcs	r0, r0, r1, lsl #31
   23160:	cmp	r0, r1, lsl #30
   23164:	adc	r2, r2, r2
   23168:	subcs	r0, r0, r1, lsl #30
   2316c:	cmp	r0, r1, lsl #29
   23170:	adc	r2, r2, r2
   23174:	subcs	r0, r0, r1, lsl #29
   23178:	cmp	r0, r1, lsl #28
   2317c:	adc	r2, r2, r2
   23180:	subcs	r0, r0, r1, lsl #28
   23184:	cmp	r0, r1, lsl #27
   23188:	adc	r2, r2, r2
   2318c:	subcs	r0, r0, r1, lsl #27
   23190:	cmp	r0, r1, lsl #26
   23194:	adc	r2, r2, r2
   23198:	subcs	r0, r0, r1, lsl #26
   2319c:	cmp	r0, r1, lsl #25
   231a0:	adc	r2, r2, r2
   231a4:	subcs	r0, r0, r1, lsl #25
   231a8:	cmp	r0, r1, lsl #24
   231ac:	adc	r2, r2, r2
   231b0:	subcs	r0, r0, r1, lsl #24
   231b4:	cmp	r0, r1, lsl #23
   231b8:	adc	r2, r2, r2
   231bc:	subcs	r0, r0, r1, lsl #23
   231c0:	cmp	r0, r1, lsl #22
   231c4:	adc	r2, r2, r2
   231c8:	subcs	r0, r0, r1, lsl #22
   231cc:	cmp	r0, r1, lsl #21
   231d0:	adc	r2, r2, r2
   231d4:	subcs	r0, r0, r1, lsl #21
   231d8:	cmp	r0, r1, lsl #20
   231dc:	adc	r2, r2, r2
   231e0:	subcs	r0, r0, r1, lsl #20
   231e4:	cmp	r0, r1, lsl #19
   231e8:	adc	r2, r2, r2
   231ec:	subcs	r0, r0, r1, lsl #19
   231f0:	cmp	r0, r1, lsl #18
   231f4:	adc	r2, r2, r2
   231f8:	subcs	r0, r0, r1, lsl #18
   231fc:	cmp	r0, r1, lsl #17
   23200:	adc	r2, r2, r2
   23204:	subcs	r0, r0, r1, lsl #17
   23208:	cmp	r0, r1, lsl #16
   2320c:	adc	r2, r2, r2
   23210:	subcs	r0, r0, r1, lsl #16
   23214:	cmp	r0, r1, lsl #15
   23218:	adc	r2, r2, r2
   2321c:	subcs	r0, r0, r1, lsl #15
   23220:	cmp	r0, r1, lsl #14
   23224:	adc	r2, r2, r2
   23228:	subcs	r0, r0, r1, lsl #14
   2322c:	cmp	r0, r1, lsl #13
   23230:	adc	r2, r2, r2
   23234:	subcs	r0, r0, r1, lsl #13
   23238:	cmp	r0, r1, lsl #12
   2323c:	adc	r2, r2, r2
   23240:	subcs	r0, r0, r1, lsl #12
   23244:	cmp	r0, r1, lsl #11
   23248:	adc	r2, r2, r2
   2324c:	subcs	r0, r0, r1, lsl #11
   23250:	cmp	r0, r1, lsl #10
   23254:	adc	r2, r2, r2
   23258:	subcs	r0, r0, r1, lsl #10
   2325c:	cmp	r0, r1, lsl #9
   23260:	adc	r2, r2, r2
   23264:	subcs	r0, r0, r1, lsl #9
   23268:	cmp	r0, r1, lsl #8
   2326c:	adc	r2, r2, r2
   23270:	subcs	r0, r0, r1, lsl #8
   23274:	cmp	r0, r1, lsl #7
   23278:	adc	r2, r2, r2
   2327c:	subcs	r0, r0, r1, lsl #7
   23280:	cmp	r0, r1, lsl #6
   23284:	adc	r2, r2, r2
   23288:	subcs	r0, r0, r1, lsl #6
   2328c:	cmp	r0, r1, lsl #5
   23290:	adc	r2, r2, r2
   23294:	subcs	r0, r0, r1, lsl #5
   23298:	cmp	r0, r1, lsl #4
   2329c:	adc	r2, r2, r2
   232a0:	subcs	r0, r0, r1, lsl #4
   232a4:	cmp	r0, r1, lsl #3
   232a8:	adc	r2, r2, r2
   232ac:	subcs	r0, r0, r1, lsl #3
   232b0:	cmp	r0, r1, lsl #2
   232b4:	adc	r2, r2, r2
   232b8:	subcs	r0, r0, r1, lsl #2
   232bc:	cmp	r0, r1, lsl #1
   232c0:	adc	r2, r2, r2
   232c4:	subcs	r0, r0, r1, lsl #1
   232c8:	cmp	r0, r1
   232cc:	adc	r2, r2, r2
   232d0:	subcs	r0, r0, r1
   232d4:	mov	r0, r2
   232d8:	bx	lr
   232dc:	moveq	r0, #1
   232e0:	movne	r0, #0
   232e4:	bx	lr
   232e8:	clz	r2, r1
   232ec:	rsb	r2, r2, #31
   232f0:	lsr	r0, r0, r2
   232f4:	bx	lr
   232f8:	cmp	r0, #0
   232fc:	mvnne	r0, #0
   23300:	b	23564 <processLibLouisStream@@Base+0x45c>
   23304:	cmp	r1, #0
   23308:	beq	232f8 <processLibLouisStream@@Base+0x1f0>
   2330c:	push	{r0, r1, lr}
   23310:	bl	23118 <processLibLouisStream@@Base+0x10>
   23314:	pop	{r1, r2, lr}
   23318:	mul	r3, r2, r0
   2331c:	sub	r1, r1, r3
   23320:	bx	lr
   23324:	cmp	r1, #0
   23328:	beq	23534 <processLibLouisStream@@Base+0x42c>
   2332c:	eor	ip, r0, r1
   23330:	rsbmi	r1, r1, #0
   23334:	subs	r2, r1, #1
   23338:	beq	23500 <processLibLouisStream@@Base+0x3f8>
   2333c:	movs	r3, r0
   23340:	rsbmi	r3, r0, #0
   23344:	cmp	r3, r1
   23348:	bls	2350c <processLibLouisStream@@Base+0x404>
   2334c:	tst	r1, r2
   23350:	beq	2351c <processLibLouisStream@@Base+0x414>
   23354:	clz	r2, r3
   23358:	clz	r0, r1
   2335c:	sub	r2, r0, r2
   23360:	rsbs	r2, r2, #31
   23364:	addne	r2, r2, r2, lsl #1
   23368:	mov	r0, #0
   2336c:	addne	pc, pc, r2, lsl #2
   23370:	nop	{0}
   23374:	cmp	r3, r1, lsl #31
   23378:	adc	r0, r0, r0
   2337c:	subcs	r3, r3, r1, lsl #31
   23380:	cmp	r3, r1, lsl #30
   23384:	adc	r0, r0, r0
   23388:	subcs	r3, r3, r1, lsl #30
   2338c:	cmp	r3, r1, lsl #29
   23390:	adc	r0, r0, r0
   23394:	subcs	r3, r3, r1, lsl #29
   23398:	cmp	r3, r1, lsl #28
   2339c:	adc	r0, r0, r0
   233a0:	subcs	r3, r3, r1, lsl #28
   233a4:	cmp	r3, r1, lsl #27
   233a8:	adc	r0, r0, r0
   233ac:	subcs	r3, r3, r1, lsl #27
   233b0:	cmp	r3, r1, lsl #26
   233b4:	adc	r0, r0, r0
   233b8:	subcs	r3, r3, r1, lsl #26
   233bc:	cmp	r3, r1, lsl #25
   233c0:	adc	r0, r0, r0
   233c4:	subcs	r3, r3, r1, lsl #25
   233c8:	cmp	r3, r1, lsl #24
   233cc:	adc	r0, r0, r0
   233d0:	subcs	r3, r3, r1, lsl #24
   233d4:	cmp	r3, r1, lsl #23
   233d8:	adc	r0, r0, r0
   233dc:	subcs	r3, r3, r1, lsl #23
   233e0:	cmp	r3, r1, lsl #22
   233e4:	adc	r0, r0, r0
   233e8:	subcs	r3, r3, r1, lsl #22
   233ec:	cmp	r3, r1, lsl #21
   233f0:	adc	r0, r0, r0
   233f4:	subcs	r3, r3, r1, lsl #21
   233f8:	cmp	r3, r1, lsl #20
   233fc:	adc	r0, r0, r0
   23400:	subcs	r3, r3, r1, lsl #20
   23404:	cmp	r3, r1, lsl #19
   23408:	adc	r0, r0, r0
   2340c:	subcs	r3, r3, r1, lsl #19
   23410:	cmp	r3, r1, lsl #18
   23414:	adc	r0, r0, r0
   23418:	subcs	r3, r3, r1, lsl #18
   2341c:	cmp	r3, r1, lsl #17
   23420:	adc	r0, r0, r0
   23424:	subcs	r3, r3, r1, lsl #17
   23428:	cmp	r3, r1, lsl #16
   2342c:	adc	r0, r0, r0
   23430:	subcs	r3, r3, r1, lsl #16
   23434:	cmp	r3, r1, lsl #15
   23438:	adc	r0, r0, r0
   2343c:	subcs	r3, r3, r1, lsl #15
   23440:	cmp	r3, r1, lsl #14
   23444:	adc	r0, r0, r0
   23448:	subcs	r3, r3, r1, lsl #14
   2344c:	cmp	r3, r1, lsl #13
   23450:	adc	r0, r0, r0
   23454:	subcs	r3, r3, r1, lsl #13
   23458:	cmp	r3, r1, lsl #12
   2345c:	adc	r0, r0, r0
   23460:	subcs	r3, r3, r1, lsl #12
   23464:	cmp	r3, r1, lsl #11
   23468:	adc	r0, r0, r0
   2346c:	subcs	r3, r3, r1, lsl #11
   23470:	cmp	r3, r1, lsl #10
   23474:	adc	r0, r0, r0
   23478:	subcs	r3, r3, r1, lsl #10
   2347c:	cmp	r3, r1, lsl #9
   23480:	adc	r0, r0, r0
   23484:	subcs	r3, r3, r1, lsl #9
   23488:	cmp	r3, r1, lsl #8
   2348c:	adc	r0, r0, r0
   23490:	subcs	r3, r3, r1, lsl #8
   23494:	cmp	r3, r1, lsl #7
   23498:	adc	r0, r0, r0
   2349c:	subcs	r3, r3, r1, lsl #7
   234a0:	cmp	r3, r1, lsl #6
   234a4:	adc	r0, r0, r0
   234a8:	subcs	r3, r3, r1, lsl #6
   234ac:	cmp	r3, r1, lsl #5
   234b0:	adc	r0, r0, r0
   234b4:	subcs	r3, r3, r1, lsl #5
   234b8:	cmp	r3, r1, lsl #4
   234bc:	adc	r0, r0, r0
   234c0:	subcs	r3, r3, r1, lsl #4
   234c4:	cmp	r3, r1, lsl #3
   234c8:	adc	r0, r0, r0
   234cc:	subcs	r3, r3, r1, lsl #3
   234d0:	cmp	r3, r1, lsl #2
   234d4:	adc	r0, r0, r0
   234d8:	subcs	r3, r3, r1, lsl #2
   234dc:	cmp	r3, r1, lsl #1
   234e0:	adc	r0, r0, r0
   234e4:	subcs	r3, r3, r1, lsl #1
   234e8:	cmp	r3, r1
   234ec:	adc	r0, r0, r0
   234f0:	subcs	r3, r3, r1
   234f4:	cmp	ip, #0
   234f8:	rsbmi	r0, r0, #0
   234fc:	bx	lr
   23500:	teq	ip, r0
   23504:	rsbmi	r0, r0, #0
   23508:	bx	lr
   2350c:	movcc	r0, #0
   23510:	asreq	r0, ip, #31
   23514:	orreq	r0, r0, #1
   23518:	bx	lr
   2351c:	clz	r2, r1
   23520:	rsb	r2, r2, #31
   23524:	cmp	ip, #0
   23528:	lsr	r0, r3, r2
   2352c:	rsbmi	r0, r0, #0
   23530:	bx	lr
   23534:	cmp	r0, #0
   23538:	mvngt	r0, #-2147483648	; 0x80000000
   2353c:	movlt	r0, #-2147483648	; 0x80000000
   23540:	b	23564 <processLibLouisStream@@Base+0x45c>
   23544:	cmp	r1, #0
   23548:	beq	23534 <processLibLouisStream@@Base+0x42c>
   2354c:	push	{r0, r1, lr}
   23550:	bl	2332c <processLibLouisStream@@Base+0x224>
   23554:	pop	{r1, r2, lr}
   23558:	mul	r3, r2, r0
   2355c:	sub	r1, r1, r3
   23560:	bx	lr
   23564:	push	{r1, lr}
   23568:	mov	r0, #8
   2356c:	bl	14e38 <raise@plt>
   23570:	pop	{r1, pc}

00023574 <__libc_csu_init@@Base>:
   23574:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   23578:	mov	r7, r0
   2357c:	ldr	r6, [pc, #76]	; 235d0 <__libc_csu_init@@Base+0x5c>
   23580:	mov	r8, r1
   23584:	ldr	r5, [pc, #72]	; 235d4 <__libc_csu_init@@Base+0x60>
   23588:	mov	r9, r2
   2358c:	add	r6, pc, r6
   23590:	bl	149ec <_init@@Base>
   23594:	add	r5, pc, r5
   23598:	rsb	r6, r5, r6
   2359c:	asrs	r6, r6, #2
   235a0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   235a4:	sub	r5, r5, #4
   235a8:	mov	r4, #0
   235ac:	add	r4, r4, #1
   235b0:	ldr	r3, [r5, #4]!
   235b4:	mov	r0, r7
   235b8:	mov	r1, r8
   235bc:	mov	r2, r9
   235c0:	blx	r3
   235c4:	cmp	r4, r6
   235c8:	bne	235ac <__libc_csu_init@@Base+0x38>
   235cc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   235d0:	andeq	r2, r1, ip, ror #15
   235d4:	andeq	r2, r1, r0, ror #15

000235d8 <__libc_csu_fini@@Base>:
   235d8:	bx	lr
   235dc:	ldr	r3, [pc, #28]	; 23600 <__libc_csu_fini@@Base+0x28>
   235e0:	mov	r1, #0
   235e4:	ldr	r2, [pc, #24]	; 23604 <__libc_csu_fini@@Base+0x2c>
   235e8:	add	r3, pc, r3
   235ec:	ldr	r3, [r3, r2]
   235f0:	cmp	r3, #0
   235f4:	ldrne	r2, [r3]
   235f8:	moveq	r2, r3
   235fc:	b	14dfc <__cxa_atexit@plt>
   23600:	andeq	r2, r1, r0, lsl sl
   23604:	andeq	r0, r0, ip, lsl #5

Disassembly of section .fini:

00023608 <_fini@@Base>:
   23608:	push	{r3, lr}
   2360c:	pop	{r3, pc}
