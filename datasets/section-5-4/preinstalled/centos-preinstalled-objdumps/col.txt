
centos-preinstalled/col:     file format elf32-littlearm


Disassembly of section .init:

00010d9c <.init>:
   10d9c:	push	{r3, lr}
   10da0:	bl	11774 <strspn@plt+0x748>
   10da4:	pop	{r3, pc}

Disassembly of section .plt:

00010da8 <calloc@plt-0x14>:
   10da8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dac:	ldr	lr, [pc, #4]	; 10db8 <calloc@plt-0x4>
   10db0:	add	lr, pc, lr
   10db4:	ldr	pc, [lr, #8]!
   10db8:	andeq	r4, r1, r8, asr #4

00010dbc <calloc@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #584]!	; 0x248

00010dc8 <raise@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #576]!	; 0x240

00010dd4 <strcmp@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #568]!	; 0x238

00010de0 <strtol@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #560]!	; 0x230

00010dec <strcspn@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #20, 20	; 0x14000
   10df4:	ldr	pc, [ip, #552]!	; 0x228

00010df8 <wcwidth@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #20, 20	; 0x14000
   10e00:	ldr	pc, [ip, #544]!	; 0x220

00010e04 <free@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #20, 20	; 0x14000
   10e0c:	ldr	pc, [ip, #536]!	; 0x218

00010e10 <ferror@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #20, 20	; 0x14000
   10e18:	ldr	pc, [ip, #528]!	; 0x210

00010e1c <_exit@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #20, 20	; 0x14000
   10e24:	ldr	pc, [ip, #520]!	; 0x208

00010e28 <memcpy@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #20, 20	; 0x14000
   10e30:	ldr	pc, [ip, #512]!	; 0x200

00010e34 <__strtoull_internal@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #20, 20	; 0x14000
   10e3c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e40 <dcgettext@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #20, 20	; 0x14000
   10e48:	ldr	pc, [ip, #496]!	; 0x1f0

00010e4c <__stack_chk_fail@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #20, 20	; 0x14000
   10e54:	ldr	pc, [ip, #488]!	; 0x1e8

00010e58 <realloc@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #20, 20	; 0x14000
   10e60:	ldr	pc, [ip, #480]!	; 0x1e0

00010e64 <iswgraph@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #20, 20	; 0x14000
   10e6c:	ldr	pc, [ip, #472]!	; 0x1d8

00010e70 <textdomain@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #20, 20	; 0x14000
   10e78:	ldr	pc, [ip, #464]!	; 0x1d0

00010e7c <__strndup@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #20, 20	; 0x14000
   10e84:	ldr	pc, [ip, #456]!	; 0x1c8

00010e88 <err@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #20, 20	; 0x14000
   10e90:	ldr	pc, [ip, #448]!	; 0x1c0

00010e94 <putwchar@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #20, 20	; 0x14000
   10e9c:	ldr	pc, [ip, #440]!	; 0x1b8

00010ea0 <__fpending@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #20, 20	; 0x14000
   10ea8:	ldr	pc, [ip, #432]!	; 0x1b0

00010eac <malloc@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #20, 20	; 0x14000
   10eb4:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb8 <__libc_start_main@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #20, 20	; 0x14000
   10ec0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ec4 <__gmon_start__@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #20, 20	; 0x14000
   10ecc:	ldr	pc, [ip, #408]!	; 0x198

00010ed0 <getopt_long@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #20, 20	; 0x14000
   10ed8:	ldr	pc, [ip, #400]!	; 0x190

00010edc <__ctype_b_loc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #20, 20	; 0x14000
   10ee4:	ldr	pc, [ip, #392]!	; 0x188

00010ee8 <exit@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #20, 20	; 0x14000
   10ef0:	ldr	pc, [ip, #384]!	; 0x180

00010ef4 <feof@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #20, 20	; 0x14000
   10efc:	ldr	pc, [ip, #376]!	; 0x178

00010f00 <iswspace@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #20, 20	; 0x14000
   10f08:	ldr	pc, [ip, #368]!	; 0x170

00010f0c <strtoul@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #20, 20	; 0x14000
   10f14:	ldr	pc, [ip, #360]!	; 0x168

00010f18 <strlen@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #20, 20	; 0x14000
   10f20:	ldr	pc, [ip, #352]!	; 0x160

00010f24 <strchr@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #20, 20	; 0x14000
   10f2c:	ldr	pc, [ip, #344]!	; 0x158

00010f30 <warnx@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #20, 20	; 0x14000
   10f38:	ldr	pc, [ip, #336]!	; 0x150

00010f3c <__errno_location@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #20, 20	; 0x14000
   10f44:	ldr	pc, [ip, #328]!	; 0x148

00010f48 <__cxa_atexit@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #20, 20	; 0x14000
   10f50:	ldr	pc, [ip, #320]!	; 0x140

00010f54 <__vasprintf_chk@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #20, 20	; 0x14000
   10f5c:	ldr	pc, [ip, #312]!	; 0x138

00010f60 <__strdup@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #20, 20	; 0x14000
   10f68:	ldr	pc, [ip, #304]!	; 0x130

00010f6c <memset@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #20, 20	; 0x14000
   10f74:	ldr	pc, [ip, #296]!	; 0x128

00010f78 <fgetc@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #20, 20	; 0x14000
   10f80:	ldr	pc, [ip, #288]!	; 0x120

00010f84 <__printf_chk@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #20, 20	; 0x14000
   10f8c:	ldr	pc, [ip, #280]!	; 0x118

00010f90 <strtod@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #20, 20	; 0x14000
   10f98:	ldr	pc, [ip, #272]!	; 0x110

00010f9c <getwchar@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #20, 20	; 0x14000
   10fa4:	ldr	pc, [ip, #264]!	; 0x108

00010fa8 <__fprintf_chk@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #20, 20	; 0x14000
   10fb0:	ldr	pc, [ip, #256]!	; 0x100

00010fb4 <fclose@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #20, 20	; 0x14000
   10fbc:	ldr	pc, [ip, #248]!	; 0xf8

00010fc0 <setlocale@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #20, 20	; 0x14000
   10fc8:	ldr	pc, [ip, #240]!	; 0xf0

00010fcc <errx@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #20, 20	; 0x14000
   10fd4:	ldr	pc, [ip, #232]!	; 0xe8

00010fd8 <warn@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #20, 20	; 0x14000
   10fe0:	ldr	pc, [ip, #224]!	; 0xe0

00010fe4 <localeconv@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #20, 20	; 0x14000
   10fec:	ldr	pc, [ip, #216]!	; 0xd8

00010ff0 <__strtoll_internal@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #20, 20	; 0x14000
   10ff8:	ldr	pc, [ip, #208]!	; 0xd0

00010ffc <bindtextdomain@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #20, 20	; 0x14000
   11004:	ldr	pc, [ip, #200]!	; 0xc8

00011008 <strncmp@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #20, 20	; 0x14000
   11010:	ldr	pc, [ip, #192]!	; 0xc0

00011014 <abort@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #20, 20	; 0x14000
   1101c:	ldr	pc, [ip, #184]!	; 0xb8

00011020 <__snprintf_chk@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #20, 20	; 0x14000
   11028:	ldr	pc, [ip, #176]!	; 0xb0

0001102c <strspn@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #20, 20	; 0x14000
   11034:	ldr	pc, [ip, #168]!	; 0xa8

Disassembly of section .text:

00011038 <.text>:
   11038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1103c:	mov	r7, r1
   11040:	sub	sp, sp, #44	; 0x2c
   11044:	mov	r6, r0
   11048:	movw	r1, #18324	; 0x4794
   1104c:	mov	r0, #6
   11050:	movt	r1, #1
   11054:	movw	r5, #20760	; 0x5118
   11058:	bl	10fc0 <setlocale@plt>
   1105c:	movw	r0, #18368	; 0x47c0
   11060:	movw	r1, #18380	; 0x47cc
   11064:	movt	r0, #1
   11068:	movt	r1, #1
   1106c:	movt	r5, #2
   11070:	bl	10ffc <bindtextdomain@plt>
   11074:	movw	r0, #18368	; 0x47c0
   11078:	movt	r0, #1
   1107c:	movw	r8, #20752	; 0x5110
   11080:	bl	10e70 <textdomain@plt>
   11084:	movw	r0, #6448	; 0x1930
   11088:	movt	r0, #1
   1108c:	movt	r8, #2
   11090:	bl	144c8 <strspn@plt+0x349c>
   11094:	mov	r3, #0
   11098:	mov	r4, r3
   1109c:	mov	r9, #1
   110a0:	mov	r2, #256	; 0x100
   110a4:	str	r9, [r5, #24]
   110a8:	str	r2, [r5, #44]	; 0x2c
   110ac:	str	r3, [r5, #48]	; 0x30
   110b0:	str	r4, [sp]
   110b4:	movw	r2, #18448	; 0x4810
   110b8:	movw	r3, #17668	; 0x4504
   110bc:	movt	r2, #1
   110c0:	movt	r3, #1
   110c4:	mov	r0, r6
   110c8:	mov	r1, r7
   110cc:	bl	10ed0 <getopt_long@plt>
   110d0:	cmn	r0, #1
   110d4:	beq	11264 <strspn@plt+0x238>
   110d8:	sub	r3, r0, #72	; 0x48
   110dc:	cmp	r3, #48	; 0x30
   110e0:	ldrls	pc, [pc, r3, lsl #2]
   110e4:	b	11254 <strspn@plt+0x228>
   110e8:	andeq	r1, r1, r4, asr #4
   110ec:	andeq	r1, r1, r4, asr r2
   110f0:	andeq	r1, r1, r4, asr r2
   110f4:	andeq	r1, r1, r4, asr r2
   110f8:	andeq	r1, r1, r4, asr r2
   110fc:	andeq	r1, r1, r4, asr r2
   11100:	andeq	r1, r1, r4, asr r2
   11104:	andeq	r1, r1, r4, asr r2
   11108:	andeq	r1, r1, r4, asr r2
   1110c:	andeq	r1, r1, r4, asr r2
   11110:	andeq	r1, r1, r4, asr r2
   11114:	andeq	r1, r1, r4, asr r2
   11118:	andeq	r1, r1, r4, asr r2
   1111c:	andeq	r1, r1, r4, asr r2
   11120:	andeq	r1, r1, r4, lsl #4
   11124:	andeq	r1, r1, r4, asr r2
   11128:	andeq	r1, r1, r4, asr r2
   1112c:	andeq	r1, r1, r4, asr r2
   11130:	andeq	r1, r1, r4, asr r2
   11134:	andeq	r1, r1, r4, asr r2
   11138:	andeq	r1, r1, r4, asr r2
   1113c:	andeq	r1, r1, r4, asr r2
   11140:	andeq	r1, r1, r4, asr r2
   11144:	andeq	r1, r1, r4, asr r2
   11148:	andeq	r1, r1, r4, asr r2
   1114c:	andeq	r1, r1, r4, asr r2
   11150:	strdeq	r1, [r1], -ip
   11154:	andeq	r1, r1, r4, asr r2
   11158:	andeq	r1, r1, r4, asr r2
   1115c:	andeq	r1, r1, r4, asr r2
   11160:	strdeq	r1, [r1], -r4
   11164:	andeq	r1, r1, r4, asr r2
   11168:	andeq	r1, r1, ip, ror #3
   1116c:	andeq	r1, r1, r4, asr r2
   11170:	andeq	r1, r1, r4, asr r2
   11174:	andeq	r1, r1, r4, asr r2
   11178:			; <UNDEFINED> instruction: 0x000111bc
   1117c:	andeq	r1, r1, r4, asr r2
   11180:	andeq	r1, r1, r4, asr r2
   11184:	andeq	r1, r1, r4, asr r2
   11188:			; <UNDEFINED> instruction: 0x000111b4
   1118c:	andeq	r1, r1, r4, asr r2
   11190:	andeq	r1, r1, r4, asr r2
   11194:	andeq	r1, r1, r4, asr r2
   11198:	andeq	r1, r1, r4, asr r2
   1119c:	andeq	r1, r1, r4, asr r2
   111a0:	andeq	r1, r1, r4, asr r2
   111a4:	andeq	r1, r1, r4, asr r2
   111a8:	andeq	r1, r1, ip, lsr #3
   111ac:	str	r4, [r5, #24]
   111b0:	b	110b0 <strspn@plt+0x84>
   111b4:	str	r9, [r5, #48]	; 0x30
   111b8:	b	110b0 <strspn@plt+0x84>
   111bc:	mov	r2, #5
   111c0:	movw	r1, #18400	; 0x47e0
   111c4:	mov	r0, #0
   111c8:	movt	r1, #1
   111cc:	ldr	sl, [r8]
   111d0:	bl	10e40 <dcgettext@plt>
   111d4:	mov	r1, r0
   111d8:	mov	r0, sl
   111dc:	bl	126f4 <strspn@plt+0x16c8>
   111e0:	lsl	r0, r0, #1
   111e4:	str	r0, [r5, #44]	; 0x2c
   111e8:	b	110b0 <strspn@plt+0x84>
   111ec:	str	r9, [r5, #24]
   111f0:	b	110b0 <strspn@plt+0x84>
   111f4:	str	r9, [r5, #4]
   111f8:	b	110b0 <strspn@plt+0x84>
   111fc:	str	r9, [r5, #32]
   11200:	b	110b0 <strspn@plt+0x84>
   11204:	mov	r2, #5
   11208:	movw	r1, #18416	; 0x47f0
   1120c:	mov	r0, #0
   11210:	movt	r1, #1
   11214:	bl	10e40 <dcgettext@plt>
   11218:	movw	r2, #20720	; 0x50f0
   1121c:	movt	r2, #2
   11220:	movw	r3, #18428	; 0x47fc
   11224:	movt	r3, #1
   11228:	ldr	r2, [r2]
   1122c:	mov	r1, r0
   11230:	mov	r0, #1
   11234:	bl	10f84 <__printf_chk@plt>
   11238:	mov	r0, #0
   1123c:	add	sp, sp, #44	; 0x2c
   11240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11244:	movw	r3, #20744	; 0x5108
   11248:	movt	r3, #2
   1124c:	ldr	r0, [r3]
   11250:	bl	1186c <strspn@plt+0x840>
   11254:	movw	r3, #20732	; 0x50fc
   11258:	movt	r3, #2
   1125c:	ldr	r0, [r3]
   11260:	bl	1186c <strspn@plt+0x840>
   11264:	movw	r3, #20728	; 0x50f8
   11268:	movt	r3, #2
   1126c:	ldr	r3, [r3]
   11270:	cmp	r3, r6
   11274:	bne	11254 <strspn@plt+0x228>
   11278:	mov	r3, #1
   1127c:	mov	r1, #0
   11280:	str	r3, [sp, #24]
   11284:	strb	r3, [r5, #28]
   11288:	str	r1, [sp, #20]
   1128c:	bl	11f08 <strspn@plt+0xedc>
   11290:	ldr	r3, [sp, #20]
   11294:	str	r3, [sp, #16]
   11298:	mov	r4, r3
   1129c:	str	r3, [sp, #28]
   112a0:	mov	r8, r3
   112a4:	str	r3, [sp, #32]
   112a8:	mov	r7, r3
   112ac:	str	r3, [sp, #36]	; 0x24
   112b0:	movw	r3, #20736	; 0x5100
   112b4:	movt	r3, #2
   112b8:	str	r3, [sp, #12]
   112bc:	mov	r9, r0
   112c0:	str	r0, [r5, #36]	; 0x24
   112c4:	ldr	r3, [sp, #12]
   112c8:	ldr	r0, [r3]
   112cc:	bl	10ef4 <feof@plt>
   112d0:	subs	r6, r0, #0
   112d4:	bne	11508 <strspn@plt+0x4dc>
   112d8:	bl	10f3c <__errno_location@plt>
   112dc:	str	r6, [r0]
   112e0:	mov	fp, r0
   112e4:	bl	10f9c <getwchar@plt>
   112e8:	cmn	r0, #1
   112ec:	mov	sl, r0
   112f0:	beq	11678 <strspn@plt+0x64c>
   112f4:	bl	10e64 <iswgraph@plt>
   112f8:	cmp	r0, #0
   112fc:	bne	1139c <strspn@plt+0x370>
   11300:	sub	r3, sl, #8
   11304:	cmp	r3, #24
   11308:	ldrls	pc, [pc, r3, lsl #2]
   1130c:	b	11380 <strspn@plt+0x354>
   11310:	andeq	r1, r1, ip, lsl #12
   11314:	andeq	r1, r1, r4, ror r3
   11318:	strdeq	r1, [r1], -r0
   1131c:	andeq	r1, r1, r8, asr #11
   11320:	andeq	r1, r1, r0, lsl #7
   11324:	ldrdeq	r1, [r1], -ip
   11328:	andeq	r1, r1, r4, ror #11
   1132c:	ldrdeq	r1, [r1], -r0
   11330:	andeq	r1, r1, r0, lsl #7
   11334:	andeq	r1, r1, r0, lsl #7
   11338:	andeq	r1, r1, r0, lsl #7
   1133c:	andeq	r1, r1, r0, lsl #7
   11340:	andeq	r1, r1, r0, lsl #7
   11344:	andeq	r1, r1, r0, lsl #7
   11348:	andeq	r1, r1, r0, lsl #7
   1134c:	andeq	r1, r1, r0, lsl #7
   11350:	andeq	r1, r1, r0, lsl #7
   11354:	andeq	r1, r1, r0, lsl #7
   11358:	andeq	r1, r1, r0, lsl #7
   1135c:	andeq	r1, r1, ip, lsr #11
   11360:	andeq	r1, r1, r0, lsl #7
   11364:	andeq	r1, r1, r0, lsl #7
   11368:	andeq	r1, r1, r0, lsl #7
   1136c:	andeq	r1, r1, r0, lsl #7
   11370:	andeq	r1, r1, r8, ror r3
   11374:	orr	r7, r7, #7
   11378:	add	r7, r7, #1
   1137c:	b	112c4 <strspn@plt+0x298>
   11380:	mov	r0, sl
   11384:	bl	10f00 <iswspace@plt>
   11388:	cmp	r0, #0
   1138c:	bne	11698 <strspn@plt+0x66c>
   11390:	ldr	r3, [r5, #48]	; 0x30
   11394:	cmp	r3, #0
   11398:	beq	112c4 <strspn@plt+0x298>
   1139c:	ldr	r1, [sp, #16]
   113a0:	rsb	r3, r1, r4
   113a4:	cmp	r3, r8
   113a8:	beq	1144c <strspn@plt+0x420>
   113ac:	ldr	r3, [r5, #4]
   113b0:	rsb	r4, r4, r8
   113b4:	cmp	r3, #0
   113b8:	movne	r3, #0
   113bc:	strne	r3, [sp, #16]
   113c0:	bne	113d8 <strspn@plt+0x3ac>
   113c4:	ands	fp, r8, #1
   113c8:	streq	fp, [sp, #16]
   113cc:	addne	r4, r4, #1
   113d0:	movne	r3, #1
   113d4:	strne	r3, [sp, #16]
   113d8:	cmp	r4, #0
   113dc:	blt	114ec <strspn@plt+0x4c0>
   113e0:	bne	113f4 <strspn@plt+0x3c8>
   113e4:	b	11424 <strspn@plt+0x3f8>
   113e8:	subs	r4, r4, #1
   113ec:	mov	r9, r3
   113f0:	beq	11424 <strspn@plt+0x3f8>
   113f4:	ldr	r3, [r9, #8]
   113f8:	cmp	r3, #0
   113fc:	bne	113e8 <strspn@plt+0x3bc>
   11400:	mov	r6, r9
   11404:	b	1140c <strspn@plt+0x3e0>
   11408:	mov	r6, r0
   1140c:	bl	11f08 <strspn@plt+0xedc>
   11410:	subs	r4, r4, #1
   11414:	str	r6, [r0, #4]
   11418:	str	r0, [r6, #8]
   1141c:	bne	11408 <strspn@plt+0x3dc>
   11420:	mov	r9, r0
   11424:	ldr	r3, [sp, #16]
   11428:	ldr	r1, [sp, #28]
   1142c:	add	r4, r8, r3
   11430:	rsb	r3, r1, r4
   11434:	cmp	r3, #0
   11438:	ble	1144c <strspn@plt+0x420>
   1143c:	ldr	r2, [r5, #44]	; 0x2c
   11440:	add	r1, r2, #32
   11444:	cmp	r3, r1
   11448:	bcs	11594 <strspn@plt+0x568>
   1144c:	ldr	r3, [r9, #16]
   11450:	ldr	r2, [r9, #12]
   11454:	add	r1, r3, #1
   11458:	cmp	r1, r2
   1145c:	blt	114a0 <strspn@plt+0x474>
   11460:	cmp	r2, #0
   11464:	ldr	r0, [r9]
   11468:	lslne	fp, r2, #1
   1146c:	moveq	fp, #90	; 0x5a
   11470:	lsl	r6, fp, #4
   11474:	mov	r1, r6
   11478:	bl	10e58 <realloc@plt>
   1147c:	adds	r3, r6, #0
   11480:	movne	r3, #1
   11484:	cmp	r0, #0
   11488:	movne	r3, #0
   1148c:	cmp	r3, #0
   11490:	bne	11724 <strspn@plt+0x6f8>
   11494:	ldr	r3, [r9, #16]
   11498:	str	r0, [r9]
   1149c:	str	fp, [r9, #12]
   114a0:	ldr	r2, [r9]
   114a4:	add	r1, r3, #1
   114a8:	str	r1, [r9, #16]
   114ac:	mov	r0, sl
   114b0:	ldr	r1, [sp, #24]
   114b4:	add	r6, r2, r3, lsl #4
   114b8:	str	sl, [r6, #8]
   114bc:	strb	r1, [r6, #4]
   114c0:	str	r7, [r2, r3, lsl #4]
   114c4:	bl	10df8 <wcwidth@plt>
   114c8:	ldr	r3, [r9, #24]
   114cc:	cmp	r7, r3
   114d0:	movlt	r2, #1
   114d4:	str	r0, [r6, #12]
   114d8:	strge	r7, [r9, #24]
   114dc:	strlt	r2, [r9, #20]
   114e0:	cmp	r0, #0
   114e4:	addgt	r7, r7, r0
   114e8:	b	112c4 <strspn@plt+0x298>
   114ec:	mov	fp, r9
   114f0:	ldr	r9, [r9, #4]
   114f4:	cmp	r9, #0
   114f8:	beq	11618 <strspn@plt+0x5ec>
   114fc:	adds	r4, r4, #1
   11500:	bne	114ec <strspn@plt+0x4c0>
   11504:	b	11424 <strspn@plt+0x3f8>
   11508:	mov	r6, #0
   1150c:	ldr	r3, [r9, #8]
   11510:	cmp	r3, #0
   11514:	beq	11528 <strspn@plt+0x4fc>
   11518:	ldr	r3, [r3, #8]
   1151c:	add	r4, r4, #1
   11520:	cmp	r3, #0
   11524:	bne	11518 <strspn@plt+0x4ec>
   11528:	ldr	r3, [sp, #28]
   1152c:	rsb	r0, r3, r4
   11530:	ldr	r3, [sp, #36]	; 0x24
   11534:	add	r0, r3, r0
   11538:	add	r0, r0, #1
   1153c:	bl	11e90 <strspn@plt+0xe64>
   11540:	ldrsb	r3, [r5, #28]
   11544:	cmp	r3, #1
   11548:	beq	11560 <strspn@plt+0x534>
   1154c:	mov	r0, #15
   11550:	bl	10e94 <putwchar@plt>
   11554:	cmn	r0, #1
   11558:	bne	11560 <strspn@plt+0x534>
   1155c:	bl	1190c <strspn@plt+0x8e0>
   11560:	ldr	r3, [sp, #32]
   11564:	tst	r3, #1
   11568:	rsb	r4, r4, r3
   1156c:	addne	r4, r4, #1
   11570:	strne	r4, [r5]
   11574:	bne	11588 <strspn@plt+0x55c>
   11578:	cmp	r4, #0
   1157c:	strne	r4, [r5]
   11580:	moveq	r3, #2
   11584:	streq	r3, [r5]
   11588:	bl	11a6c <strspn@plt+0xa40>
   1158c:	mov	r0, r6
   11590:	b	1123c <strspn@plt+0x210>
   11594:	rsb	r0, r2, r3
   11598:	ldr	r3, [sp, #28]
   1159c:	add	r3, r0, r3
   115a0:	str	r3, [sp, #28]
   115a4:	bl	11e90 <strspn@plt+0xe64>
   115a8:	b	1144c <strspn@plt+0x420>
   115ac:	bl	10f9c <getwchar@plt>
   115b0:	cmp	r0, #8
   115b4:	beq	116d0 <strspn@plt+0x6a4>
   115b8:	cmp	r0, #9
   115bc:	beq	116b8 <strspn@plt+0x68c>
   115c0:	cmp	r0, #7
   115c4:	bne	112c4 <strspn@plt+0x298>
   115c8:	sub	r8, r8, #2
   115cc:	b	112c4 <strspn@plt+0x298>
   115d0:	mov	r3, #1
   115d4:	str	r3, [sp, #24]
   115d8:	b	112c4 <strspn@plt+0x298>
   115dc:	mov	r7, #0
   115e0:	b	112c4 <strspn@plt+0x298>
   115e4:	mov	r3, #2
   115e8:	str	r3, [sp, #24]
   115ec:	b	112c4 <strspn@plt+0x298>
   115f0:	ldr	r3, [sp, #32]
   115f4:	add	r8, r8, #2
   115f8:	mov	r7, #0
   115fc:	cmp	r3, r8
   11600:	movlt	r3, r8
   11604:	str	r3, [sp, #32]
   11608:	b	112c4 <strspn@plt+0x298>
   1160c:	cmp	r7, #0
   11610:	subne	r7, r7, #1
   11614:	b	112c4 <strspn@plt+0x298>
   11618:	ldr	r3, [sp, #28]
   1161c:	mov	r6, r4
   11620:	cmp	r3, #0
   11624:	beq	1164c <strspn@plt+0x620>
   11628:	ldr	r3, [sp, #20]
   1162c:	cmp	r3, #0
   11630:	add	r9, r3, #1
   11634:	beq	116d8 <strspn@plt+0x6ac>
   11638:	str	r9, [sp, #20]
   1163c:	rsb	r8, r4, r8
   11640:	mov	r9, fp
   11644:	b	11424 <strspn@plt+0x3f8>
   11648:	mov	fp, r0
   1164c:	bl	11f08 <strspn@plt+0xedc>
   11650:	adds	r4, r4, #1
   11654:	str	r0, [fp, #4]
   11658:	str	r0, [r5, #36]	; 0x24
   1165c:	str	fp, [r0, #8]
   11660:	bne	11648 <strspn@plt+0x61c>
   11664:	ldr	r3, [sp, #36]	; 0x24
   11668:	mov	r9, r0
   1166c:	rsb	r3, r6, r3
   11670:	str	r3, [sp, #36]	; 0x24
   11674:	b	11424 <strspn@plt+0x3f8>
   11678:	mov	sl, fp
   1167c:	ldr	r3, [sl]
   11680:	cmp	r3, #84	; 0x54
   11684:	bne	11508 <strspn@plt+0x4dc>
   11688:	mov	r0, r6
   1168c:	mov	r6, #1
   11690:	bl	10fd8 <warn@plt>
   11694:	b	1150c <strspn@plt+0x4e0>
   11698:	mov	r0, sl
   1169c:	bl	10df8 <wcwidth@plt>
   116a0:	cmp	r0, #0
   116a4:	ble	112c4 <strspn@plt+0x298>
   116a8:	mov	r0, sl
   116ac:	bl	10df8 <wcwidth@plt>
   116b0:	add	r7, r7, r0
   116b4:	b	112c4 <strspn@plt+0x298>
   116b8:	ldr	r3, [sp, #32]
   116bc:	add	r8, r8, #1
   116c0:	cmp	r3, r8
   116c4:	movlt	r3, r8
   116c8:	str	r3, [sp, #32]
   116cc:	b	112c4 <strspn@plt+0x298>
   116d0:	sub	r8, r8, #1
   116d4:	b	112c4 <strspn@plt+0x298>
   116d8:	mov	r2, #5
   116dc:	mov	r0, r3
   116e0:	movw	r1, #18460	; 0x481c
   116e4:	movt	r1, #1
   116e8:	bl	10e40 <dcgettext@plt>
   116ec:	cmp	r8, #0
   116f0:	movwlt	r1, #18488	; 0x4838
   116f4:	movwge	r1, #18504	; 0x4848
   116f8:	movlt	r2, #5
   116fc:	movge	r2, #5
   11700:	mov	r6, r0
   11704:	movtlt	r1, #1
   11708:	movtge	r1, #1
   1170c:	ldr	r0, [sp, #20]
   11710:	bl	10e40 <dcgettext@plt>
   11714:	mov	r1, r0
   11718:	mov	r0, r6
   1171c:	bl	10f30 <warnx@plt>
   11720:	b	11638 <strspn@plt+0x60c>
   11724:	movw	r1, #18340	; 0x47a4
   11728:	mov	r2, r6
   1172c:	mov	r0, #1
   11730:	movt	r1, #1
   11734:	bl	10e88 <err@plt>
   11738:	mov	fp, #0
   1173c:	mov	lr, #0
   11740:	pop	{r1}		; (ldr r1, [sp], #4)
   11744:	mov	r2, sp
   11748:	push	{r2}		; (str r2, [sp, #-4]!)
   1174c:	push	{r0}		; (str r0, [sp, #-4]!)
   11750:	ldr	ip, [pc, #16]	; 11768 <strspn@plt+0x73c>
   11754:	push	{ip}		; (str ip, [sp, #-4]!)
   11758:	ldr	r0, [pc, #12]	; 1176c <strspn@plt+0x740>
   1175c:	ldr	r3, [pc, #12]	; 11770 <strspn@plt+0x744>
   11760:	bl	10eb8 <__libc_start_main@plt>
   11764:	bl	11014 <abort@plt>
   11768:	andeq	r4, r1, r4, asr #9
   1176c:	andeq	r1, r1, r8, lsr r0
   11770:	andeq	r4, r1, r0, ror #8
   11774:	ldr	r3, [pc, #20]	; 11790 <strspn@plt+0x764>
   11778:	ldr	r2, [pc, #20]	; 11794 <strspn@plt+0x768>
   1177c:	add	r3, pc, r3
   11780:	ldr	r2, [r3, r2]
   11784:	cmp	r2, #0
   11788:	bxeq	lr
   1178c:	b	10ec4 <__gmon_start__@plt>
   11790:	andeq	r3, r1, ip, ror r8
   11794:	andeq	r0, r0, r4, ror #1
   11798:	push	{r3, lr}
   1179c:	movw	r0, #20720	; 0x50f0
   117a0:	ldr	r3, [pc, #36]	; 117cc <strspn@plt+0x7a0>
   117a4:	movt	r0, #2
   117a8:	rsb	r3, r0, r3
   117ac:	cmp	r3, #6
   117b0:	popls	{r3, pc}
   117b4:	movw	r3, #0
   117b8:	movt	r3, #0
   117bc:	cmp	r3, #0
   117c0:	popeq	{r3, pc}
   117c4:	blx	r3
   117c8:	pop	{r3, pc}
   117cc:	strdeq	r5, [r2], -r3
   117d0:	push	{r3, lr}
   117d4:	movw	r0, #20720	; 0x50f0
   117d8:	movw	r3, #20720	; 0x50f0
   117dc:	movt	r0, #2
   117e0:	movt	r3, #2
   117e4:	rsb	r3, r0, r3
   117e8:	asr	r3, r3, #2
   117ec:	add	r3, r3, r3, lsr #31
   117f0:	asrs	r1, r3, #1
   117f4:	popeq	{r3, pc}
   117f8:	movw	r2, #0
   117fc:	movt	r2, #0
   11800:	cmp	r2, #0
   11804:	popeq	{r3, pc}
   11808:	blx	r2
   1180c:	pop	{r3, pc}
   11810:	push	{r4, lr}
   11814:	movw	r4, #20756	; 0x5114
   11818:	movt	r4, #2
   1181c:	ldrb	r3, [r4]
   11820:	cmp	r3, #0
   11824:	popne	{r4, pc}
   11828:	bl	11798 <strspn@plt+0x76c>
   1182c:	mov	r3, #1
   11830:	strb	r3, [r4]
   11834:	pop	{r4, pc}
   11838:	movw	r0, #20228	; 0x4f04
   1183c:	movt	r0, #2
   11840:	push	{r3, lr}
   11844:	ldr	r3, [r0]
   11848:	cmp	r3, #0
   1184c:	beq	11864 <strspn@plt+0x838>
   11850:	movw	r3, #0
   11854:	movt	r3, #0
   11858:	cmp	r3, #0
   1185c:	beq	11864 <strspn@plt+0x838>
   11860:	blx	r3
   11864:	pop	{r3, lr}
   11868:	b	117d0 <strspn@plt+0x7a4>
   1186c:	push	{r3, r4, r5, lr}
   11870:	mov	r2, #5
   11874:	mov	r4, r0
   11878:	movw	r1, #17812	; 0x4594
   1187c:	mov	r0, #0
   11880:	movt	r1, #1
   11884:	bl	10e40 <dcgettext@plt>
   11888:	movw	r5, #20720	; 0x50f0
   1188c:	movt	r5, #2
   11890:	mov	r1, #1
   11894:	ldr	r3, [r5]
   11898:	mov	r2, r0
   1189c:	mov	r0, r4
   118a0:	bl	10fa8 <__fprintf_chk@plt>
   118a4:	mov	r2, #5
   118a8:	movw	r1, #17836	; 0x45ac
   118ac:	mov	r0, #0
   118b0:	movt	r1, #1
   118b4:	bl	10e40 <dcgettext@plt>
   118b8:	mov	r1, #1
   118bc:	mov	r2, r0
   118c0:	mov	r0, r4
   118c4:	bl	10fa8 <__fprintf_chk@plt>
   118c8:	mov	r2, #5
   118cc:	movw	r1, #18264	; 0x4758
   118d0:	mov	r0, #0
   118d4:	movt	r1, #1
   118d8:	bl	10e40 <dcgettext@plt>
   118dc:	ldr	r3, [r5]
   118e0:	mov	r1, #1
   118e4:	mov	r2, r0
   118e8:	mov	r0, r4
   118ec:	bl	10fa8 <__fprintf_chk@plt>
   118f0:	movw	r3, #20732	; 0x50fc
   118f4:	movt	r3, #2
   118f8:	ldr	r0, [r3]
   118fc:	subs	r3, r4, r0
   11900:	rsbs	r0, r3, #0
   11904:	adcs	r0, r0, r3
   11908:	bl	10ee8 <exit@plt>
   1190c:	push	{r3, lr}
   11910:	movw	r1, #18328	; 0x4798
   11914:	mov	r0, #0
   11918:	movt	r1, #1
   1191c:	mov	r2, #5
   11920:	bl	10e40 <dcgettext@plt>
   11924:	mov	r1, r0
   11928:	mov	r0, #1
   1192c:	bl	10fcc <errx@plt>
   11930:	movw	r3, #20744	; 0x5108
   11934:	movt	r3, #2
   11938:	push	{r4, r5, r6, lr}
   1193c:	ldr	r4, [r3]
   11940:	mov	r0, r4
   11944:	bl	10ea0 <__fpending@plt>
   11948:	mov	r6, r0
   1194c:	mov	r0, r4
   11950:	bl	10e10 <ferror@plt>
   11954:	mov	r5, r0
   11958:	mov	r0, r4
   1195c:	bl	10fb4 <fclose@plt>
   11960:	adds	r4, r0, #0
   11964:	movne	r4, #1
   11968:	cmp	r5, #0
   1196c:	bne	119e4 <strspn@plt+0x9b8>
   11970:	cmp	r4, #0
   11974:	beq	11990 <strspn@plt+0x964>
   11978:	cmp	r6, #0
   1197c:	beq	11a34 <strspn@plt+0xa08>
   11980:	bl	10f3c <__errno_location@plt>
   11984:	ldr	r3, [r0]
   11988:	cmp	r3, #32
   1198c:	bne	11a48 <strspn@plt+0xa1c>
   11990:	movw	r3, #20732	; 0x50fc
   11994:	movt	r3, #2
   11998:	ldr	r4, [r3]
   1199c:	mov	r0, r4
   119a0:	bl	10ea0 <__fpending@plt>
   119a4:	mov	r6, r0
   119a8:	mov	r0, r4
   119ac:	bl	10e10 <ferror@plt>
   119b0:	mov	r5, r0
   119b4:	mov	r0, r4
   119b8:	bl	10fb4 <fclose@plt>
   119bc:	adds	r4, r0, #0
   119c0:	movne	r4, #1
   119c4:	cmp	r5, #0
   119c8:	beq	11a10 <strspn@plt+0x9e4>
   119cc:	cmp	r4, #0
   119d0:	bne	119dc <strspn@plt+0x9b0>
   119d4:	bl	10f3c <__errno_location@plt>
   119d8:	str	r4, [r0]
   119dc:	mov	r0, #1
   119e0:	bl	10e1c <_exit@plt>
   119e4:	cmp	r4, #0
   119e8:	bne	11980 <strspn@plt+0x954>
   119ec:	bl	10f3c <__errno_location@plt>
   119f0:	str	r4, [r0]
   119f4:	mov	r2, #5
   119f8:	movw	r1, #18328	; 0x4798
   119fc:	mov	r0, #0
   11a00:	movt	r1, #1
   11a04:	bl	10e40 <dcgettext@plt>
   11a08:	bl	10f30 <warnx@plt>
   11a0c:	b	119dc <strspn@plt+0x9b0>
   11a10:	cmp	r4, #0
   11a14:	popeq	{r4, r5, r6, pc}
   11a18:	cmp	r6, #0
   11a1c:	bne	119dc <strspn@plt+0x9b0>
   11a20:	bl	10f3c <__errno_location@plt>
   11a24:	ldr	r3, [r0]
   11a28:	cmp	r3, #9
   11a2c:	bne	119dc <strspn@plt+0x9b0>
   11a30:	pop	{r4, r5, r6, pc}
   11a34:	bl	10f3c <__errno_location@plt>
   11a38:	ldr	r3, [r0]
   11a3c:	cmp	r3, #9
   11a40:	bne	11988 <strspn@plt+0x95c>
   11a44:	b	11990 <strspn@plt+0x964>
   11a48:	cmp	r3, #0
   11a4c:	beq	119f4 <strspn@plt+0x9c8>
   11a50:	mov	r2, #5
   11a54:	movw	r1, #18328	; 0x4798
   11a58:	mov	r0, #0
   11a5c:	movt	r1, #1
   11a60:	bl	10e40 <dcgettext@plt>
   11a64:	bl	10fd8 <warn@plt>
   11a68:	b	119dc <strspn@plt+0x9b0>
   11a6c:	push	{r3, r4, r5, r6, r7, lr}
   11a70:	movw	r5, #20760	; 0x5118
   11a74:	movt	r5, #2
   11a78:	ldr	r3, [r5]
   11a7c:	ands	r7, r3, #1
   11a80:	beq	11a94 <strspn@plt+0xa68>
   11a84:	ldr	r7, [r5, #4]
   11a88:	cmp	r7, #0
   11a8c:	addeq	r3, r3, #1
   11a90:	movne	r7, #1
   11a94:	add	r3, r3, r3, lsr #31
   11a98:	asr	r6, r3, #1
   11a9c:	mov	r4, r6
   11aa0:	b	11ab4 <strspn@plt+0xa88>
   11aa4:	mov	r0, #10
   11aa8:	bl	10e94 <putwchar@plt>
   11aac:	cmn	r0, #1
   11ab0:	beq	11b08 <strspn@plt+0xadc>
   11ab4:	subs	r4, r4, #1
   11ab8:	bpl	11aa4 <strspn@plt+0xa78>
   11abc:	cmp	r7, #0
   11ac0:	bne	11ad0 <strspn@plt+0xaa4>
   11ac4:	mov	r3, #0
   11ac8:	str	r3, [r5]
   11acc:	pop	{r3, r4, r5, r6, r7, pc}
   11ad0:	mov	r0, #27
   11ad4:	bl	10e94 <putwchar@plt>
   11ad8:	cmn	r0, #1
   11adc:	beq	11b08 <strspn@plt+0xadc>
   11ae0:	mov	r0, #57	; 0x39
   11ae4:	bl	10e94 <putwchar@plt>
   11ae8:	cmn	r0, #1
   11aec:	beq	11b08 <strspn@plt+0xadc>
   11af0:	cmp	r6, #0
   11af4:	bne	11ac4 <strspn@plt+0xa98>
   11af8:	mov	r0, #13
   11afc:	bl	10e94 <putwchar@plt>
   11b00:	cmn	r0, #1
   11b04:	bne	11ac4 <strspn@plt+0xa98>
   11b08:	bl	1190c <strspn@plt+0x8e0>
   11b0c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b10:	mov	r5, r0
   11b14:	ldr	r3, [r0, #20]
   11b18:	ldr	r8, [r0, #16]
   11b1c:	cmp	r3, #0
   11b20:	beq	11ce0 <strspn@plt+0xcb4>
   11b24:	movw	r7, #20760	; 0x5118
   11b28:	movt	r7, #2
   11b2c:	ldr	r3, [r0, #12]
   11b30:	ldr	r2, [r7, #8]
   11b34:	cmp	r3, r2
   11b38:	bgt	11d30 <strspn@plt+0xd04>
   11b3c:	ldr	r3, [r5, #24]
   11b40:	movw	r6, #20760	; 0x5118
   11b44:	ldr	r2, [r7, #16]
   11b48:	movt	r6, #2
   11b4c:	cmp	r3, r2
   11b50:	bge	11cf0 <strspn@plt+0xcc4>
   11b54:	ldr	r4, [r6, #20]
   11b58:	lsl	r2, r3, #2
   11b5c:	mov	r0, r4
   11b60:	add	r2, r2, #1
   11b64:	mov	r1, #0
   11b68:	bl	10f6c <memset@plt>
   11b6c:	ldr	r6, [r5]
   11b70:	cmp	r6, #0
   11b74:	subeq	ip, r8, #1
   11b78:	beq	11bb8 <strspn@plt+0xb8c>
   11b7c:	subs	ip, r8, #1
   11b80:	bmi	11bb8 <strspn@plt+0xb8c>
   11b84:	add	r3, r6, #16
   11b88:	mov	r2, ip
   11b8c:	b	11ba0 <strspn@plt+0xb74>
   11b90:	sub	r2, r2, #1
   11b94:	add	r3, r3, #16
   11b98:	cmn	r2, #1
   11b9c:	beq	11bb8 <strspn@plt+0xb8c>
   11ba0:	ldr	r1, [r3, #-16]
   11ba4:	cmp	r3, #0
   11ba8:	ldr	r0, [r4, r1, lsl #2]
   11bac:	add	r0, r0, #1
   11bb0:	str	r0, [r4, r1, lsl #2]
   11bb4:	bne	11b90 <strspn@plt+0xb64>
   11bb8:	ldr	r3, [r5, #24]
   11bbc:	cmp	r3, #0
   11bc0:	movge	r3, #0
   11bc4:	movge	r1, r4
   11bc8:	movge	r2, r3
   11bcc:	blt	11bec <strspn@plt+0xbc0>
   11bd0:	ldr	r9, [r1]
   11bd4:	add	r2, r2, #1
   11bd8:	str	r3, [r1], #4
   11bdc:	ldr	r0, [r5, #24]
   11be0:	add	r3, r3, r9
   11be4:	cmp	r0, r2
   11be8:	bge	11bd0 <strspn@plt+0xba4>
   11bec:	cmp	ip, #0
   11bf0:	addge	r6, r6, #16
   11bf4:	ldrge	r9, [r7, #12]
   11bf8:	blt	11e58 <strspn@plt+0xe2c>
   11bfc:	mov	r3, r6
   11c00:	sub	ip, ip, #1
   11c04:	ldr	r2, [r3, #-16]!
   11c08:	cmn	ip, #1
   11c0c:	add	r6, r6, #16
   11c10:	ldr	r5, [r4, r2, lsl #2]
   11c14:	add	r1, r5, #1
   11c18:	str	r1, [r4, r2, lsl #2]
   11c1c:	ldm	r3, {r0, r1, r2, r3}
   11c20:	add	r5, r9, r5, lsl #4
   11c24:	stm	r5, {r0, r1, r2, r3}
   11c28:	bne	11bfc <strspn@plt+0xbd0>
   11c2c:	cmp	r8, #0
   11c30:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c34:	movw	r7, #20760	; 0x5118
   11c38:	movt	r7, #2
   11c3c:	mov	sl, #0
   11c40:	ldr	fp, [r9]
   11c44:	mov	r5, r9
   11c48:	b	11c5c <strspn@plt+0xc30>
   11c4c:	ldr	r3, [r5, #16]
   11c50:	cmp	r3, fp
   11c54:	bne	11e68 <strspn@plt+0xe3c>
   11c58:	mov	r5, r6
   11c5c:	subs	r8, r8, #1
   11c60:	add	r6, r5, #16
   11c64:	bne	11c4c <strspn@plt+0xc20>
   11c68:	ldr	r3, [r7, #32]
   11c6c:	cmp	r3, #0
   11c70:	moveq	r5, r9
   11c74:	cmp	fp, sl
   11c78:	ble	11d90 <strspn@plt+0xd64>
   11c7c:	ldr	r3, [r7, #24]
   11c80:	rsb	r4, sl, fp
   11c84:	cmp	r3, #0
   11c88:	beq	11d84 <strspn@plt+0xd58>
   11c8c:	cmp	r4, #1
   11c90:	ble	11d84 <strspn@plt+0xd58>
   11c94:	add	r3, sl, #7
   11c98:	cmp	sl, #0
   11c9c:	add	r9, fp, #7
   11ca0:	movlt	sl, r3
   11ca4:	cmp	fp, #0
   11ca8:	asr	r3, sl, #3
   11cac:	movge	r9, fp
   11cb0:	rsb	r9, r3, r9, asr #3
   11cb4:	cmp	r9, #0
   11cb8:	andgt	r4, fp, #7
   11cbc:	bgt	11cd4 <strspn@plt+0xca8>
   11cc0:	b	11d84 <strspn@plt+0xd58>
   11cc4:	mov	r0, #9
   11cc8:	bl	10e94 <putwchar@plt>
   11ccc:	cmn	r0, #1
   11cd0:	beq	11e40 <strspn@plt+0xe14>
   11cd4:	subs	r9, r9, #1
   11cd8:	bcs	11cc4 <strspn@plt+0xc98>
   11cdc:	b	11d84 <strspn@plt+0xd58>
   11ce0:	cmp	r8, #0
   11ce4:	ldr	r9, [r0]
   11ce8:	bgt	11c34 <strspn@plt+0xc08>
   11cec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cf0:	add	r3, r3, #1
   11cf4:	ldr	r0, [r6, #20]
   11cf8:	str	r3, [r6, #16]
   11cfc:	lsl	r4, r3, #2
   11d00:	mov	r1, r4
   11d04:	bl	10e58 <realloc@plt>
   11d08:	rsbs	r3, r0, #1
   11d0c:	movcc	r3, #0
   11d10:	cmp	r4, #0
   11d14:	moveq	r3, #0
   11d18:	cmp	r3, #0
   11d1c:	bne	11d60 <strspn@plt+0xd34>
   11d20:	ldr	r3, [r5, #24]
   11d24:	mov	r4, r0
   11d28:	str	r0, [r6, #20]
   11d2c:	b	11b58 <strspn@plt+0xb2c>
   11d30:	lsl	r4, r3, #4
   11d34:	ldr	r0, [r7, #12]
   11d38:	str	r3, [r7, #8]
   11d3c:	mov	r1, r4
   11d40:	bl	10e58 <realloc@plt>
   11d44:	rsbs	r3, r0, #1
   11d48:	movcc	r3, #0
   11d4c:	cmp	r4, #0
   11d50:	moveq	r3, #0
   11d54:	cmp	r3, #0
   11d58:	streq	r0, [r7, #12]
   11d5c:	beq	11b3c <strspn@plt+0xb10>
   11d60:	movw	r1, #18340	; 0x47a4
   11d64:	mov	r2, r4
   11d68:	mov	r0, #1
   11d6c:	movt	r1, #1
   11d70:	bl	10e88 <err@plt>
   11d74:	mov	r0, #32
   11d78:	bl	10e94 <putwchar@plt>
   11d7c:	cmn	r0, #1
   11d80:	beq	11e40 <strspn@plt+0xe14>
   11d84:	subs	r4, r4, #1
   11d88:	bpl	11d74 <strspn@plt+0xd48>
   11d8c:	mov	sl, fp
   11d90:	add	r5, r5, #16
   11d94:	ldrb	r2, [r5, #-12]
   11d98:	mov	r9, r5
   11d9c:	ldrsb	r1, [r7, #28]
   11da0:	sxtb	r3, r2
   11da4:	cmp	r1, r3
   11da8:	beq	11dd4 <strspn@plt+0xda8>
   11dac:	cmp	r3, #1
   11db0:	beq	11e30 <strspn@plt+0xe04>
   11db4:	cmp	r3, #2
   11db8:	bne	11dd0 <strspn@plt+0xda4>
   11dbc:	mov	r0, #14
   11dc0:	bl	10e94 <putwchar@plt>
   11dc4:	cmn	r0, #1
   11dc8:	beq	11e40 <strspn@plt+0xe14>
   11dcc:	ldrb	r2, [r5, #-12]
   11dd0:	strb	r2, [r7, #28]
   11dd4:	ldr	r0, [r5, #-8]
   11dd8:	bl	10e94 <putwchar@plt>
   11ddc:	cmn	r0, #1
   11de0:	beq	11e40 <strspn@plt+0xe14>
   11de4:	cmp	r5, r6
   11de8:	bcs	11e1c <strspn@plt+0xdf0>
   11dec:	ldr	r3, [r5, #-4]
   11df0:	cmp	r3, #0
   11df4:	ble	11e1c <strspn@plt+0xdf0>
   11df8:	mov	r4, #0
   11dfc:	mov	r0, #8
   11e00:	bl	10e94 <putwchar@plt>
   11e04:	cmn	r0, #1
   11e08:	beq	11e40 <strspn@plt+0xe14>
   11e0c:	ldr	r3, [r5, #-4]
   11e10:	add	r4, r4, #1
   11e14:	cmp	r3, r4
   11e18:	bgt	11dfc <strspn@plt+0xdd0>
   11e1c:	cmp	r6, r5
   11e20:	add	r3, r5, #16
   11e24:	bls	11e44 <strspn@plt+0xe18>
   11e28:	mov	r5, r3
   11e2c:	b	11d94 <strspn@plt+0xd68>
   11e30:	mov	r0, #15
   11e34:	bl	10e94 <putwchar@plt>
   11e38:	cmn	r0, #1
   11e3c:	bne	11dcc <strspn@plt+0xda0>
   11e40:	bl	1190c <strspn@plt+0x8e0>
   11e44:	ldr	r3, [r5, #-4]
   11e48:	add	sl, sl, r3
   11e4c:	cmp	r8, #0
   11e50:	bgt	11c40 <strspn@plt+0xc14>
   11e54:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e58:	cmp	r8, #0
   11e5c:	ldr	r9, [r7, #12]
   11e60:	bgt	11c34 <strspn@plt+0xc08>
   11e64:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e68:	ldr	r2, [r7, #32]
   11e6c:	cmp	r2, #0
   11e70:	moveq	r5, r9
   11e74:	beq	11c74 <strspn@plt+0xc48>
   11e78:	ldr	r2, [r6, #-4]
   11e7c:	add	r2, fp, r2
   11e80:	cmp	r2, r3
   11e84:	ble	11c74 <strspn@plt+0xc48>
   11e88:	mov	r9, r5
   11e8c:	b	11e4c <strspn@plt+0xe20>
   11e90:	push	{r4, r5, r6, lr}
   11e94:	subs	r6, r0, #1
   11e98:	movw	r5, #20760	; 0x5118
   11e9c:	movt	r5, #2
   11ea0:	bmi	11ef4 <strspn@plt+0xec8>
   11ea4:	ldr	r4, [r5, #36]	; 0x24
   11ea8:	sub	r6, r6, #1
   11eac:	ldr	r0, [r4]
   11eb0:	ldr	r3, [r4, #8]
   11eb4:	cmp	r0, #0
   11eb8:	str	r3, [r5, #36]	; 0x24
   11ebc:	beq	11ed0 <strspn@plt+0xea4>
   11ec0:	bl	11a6c <strspn@plt+0xa40>
   11ec4:	mov	r0, r4
   11ec8:	bl	11b0c <strspn@plt+0xae0>
   11ecc:	ldr	r0, [r4]
   11ed0:	ldr	r3, [r5]
   11ed4:	add	r3, r3, #1
   11ed8:	str	r3, [r5]
   11edc:	bl	10e04 <free@plt>
   11ee0:	ldr	r3, [r5, #40]	; 0x28
   11ee4:	cmn	r6, #1
   11ee8:	str	r4, [r5, #40]	; 0x28
   11eec:	str	r3, [r4, #8]
   11ef0:	bne	11ea4 <strspn@plt+0xe78>
   11ef4:	ldr	r3, [r5, #36]	; 0x24
   11ef8:	cmp	r3, #0
   11efc:	movne	r2, #0
   11f00:	strne	r2, [r3, #4]
   11f04:	pop	{r4, r5, r6, pc}
   11f08:	push	{r3, r4, r5, lr}
   11f0c:	movw	r4, #20760	; 0x5118
   11f10:	movt	r4, #2
   11f14:	ldr	r5, [r4, #40]	; 0x28
   11f18:	cmp	r5, #0
   11f1c:	beq	11f40 <strspn@plt+0xf14>
   11f20:	ldr	r3, [r5, #8]
   11f24:	mov	r0, r5
   11f28:	mov	r1, #0
   11f2c:	mov	r2, #28
   11f30:	str	r3, [r4, #40]	; 0x28
   11f34:	bl	10f6c <memset@plt>
   11f38:	mov	r0, r5
   11f3c:	pop	{r3, r4, r5, pc}
   11f40:	mov	r0, #1792	; 0x700
   11f44:	bl	10eac <malloc@plt>
   11f48:	cmp	r0, #0
   11f4c:	strne	r0, [r4, #40]	; 0x28
   11f50:	addne	r2, r0, #1760	; 0x6e0
   11f54:	movne	r3, r0
   11f58:	addne	r2, r2, #4
   11f5c:	beq	11f80 <strspn@plt+0xf54>
   11f60:	add	r3, r3, #28
   11f64:	cmp	r3, r2
   11f68:	str	r3, [r3, #-20]	; 0xffffffec
   11f6c:	bne	11f60 <strspn@plt+0xf34>
   11f70:	mov	r3, #0
   11f74:	mov	r5, r0
   11f78:	str	r3, [r0, #1772]	; 0x6ec
   11f7c:	b	11f20 <strspn@plt+0xef4>
   11f80:	movw	r1, #18340	; 0x47a4
   11f84:	mov	r0, #1
   11f88:	movt	r1, #1
   11f8c:	mov	r2, #1792	; 0x700
   11f90:	bl	10e88 <err@plt>
   11f94:	movw	r3, #20760	; 0x5118
   11f98:	movt	r3, #2
   11f9c:	ldr	r2, [r3, #40]	; 0x28
   11fa0:	str	r0, [r3, #40]	; 0x28
   11fa4:	str	r2, [r0, #8]
   11fa8:	bx	lr
   11fac:	andeq	r0, r0, r0
   11fb0:	cmp	r0, #0
   11fb4:	mov	r3, #0
   11fb8:	str	r3, [r1]
   11fbc:	bxeq	lr
   11fc0:	ldrb	r2, [r0]
   11fc4:	cmp	r2, #47	; 0x2f
   11fc8:	bne	12010 <strspn@plt+0xfe4>
   11fcc:	ldrsb	r3, [r0, #1]
   11fd0:	cmp	r3, #47	; 0x2f
   11fd4:	bne	12018 <strspn@plt+0xfec>
   11fd8:	mov	r3, r0
   11fdc:	b	11ffc <strspn@plt+0xfd0>
   11fe0:	ldrb	r2, [r3, #1]
   11fe4:	mov	r3, r0
   11fe8:	cmp	r2, #47	; 0x2f
   11fec:	bne	12010 <strspn@plt+0xfe4>
   11ff0:	ldrsb	r2, [r0, #1]
   11ff4:	cmp	r2, #47	; 0x2f
   11ff8:	bne	12018 <strspn@plt+0xfec>
   11ffc:	cmn	r3, #1
   12000:	add	r0, r0, #1
   12004:	bne	11fe0 <strspn@plt+0xfb4>
   12008:	mov	r0, #0
   1200c:	bx	lr
   12010:	cmp	r2, #0
   12014:	beq	12008 <strspn@plt+0xfdc>
   12018:	mov	r3, #1
   1201c:	str	r3, [r1]
   12020:	ldrsb	r3, [r0, #1]
   12024:	cmp	r3, #47	; 0x2f
   12028:	cmpne	r3, #0
   1202c:	bxeq	lr
   12030:	mov	r3, #2
   12034:	str	r3, [r1]
   12038:	ldrb	r2, [r0, r3]
   1203c:	add	r3, r3, #1
   12040:	cmp	r2, #47	; 0x2f
   12044:	cmpne	r2, #0
   12048:	bne	12034 <strspn@plt+0x1008>
   1204c:	bx	lr
   12050:	push	{r3, r4, r5, r6, r7, lr}
   12054:	mov	r7, r1
   12058:	ldrb	r3, [r0]
   1205c:	cmp	r3, #0
   12060:	beq	120d8 <strspn@plt+0x10ac>
   12064:	mov	r4, #0
   12068:	mov	r5, r0
   1206c:	mov	r6, r4
   12070:	b	120a0 <strspn@plt+0x1074>
   12074:	cmp	r3, #92	; 0x5c
   12078:	mov	r0, r7
   1207c:	mov	r1, r3
   12080:	beq	120c8 <strspn@plt+0x109c>
   12084:	bl	10f24 <strchr@plt>
   12088:	cmp	r0, #0
   1208c:	bne	120d0 <strspn@plt+0x10a4>
   12090:	ldrb	r3, [r5, #1]!
   12094:	add	r4, r4, #1
   12098:	cmp	r3, #0
   1209c:	beq	120c0 <strspn@plt+0x1094>
   120a0:	cmp	r6, #0
   120a4:	sxtb	r3, r3
   120a8:	beq	12074 <strspn@plt+0x1048>
   120ac:	ldrb	r3, [r5, #1]!
   120b0:	mov	r6, #0
   120b4:	add	r4, r4, #1
   120b8:	cmp	r3, #0
   120bc:	bne	120a0 <strspn@plt+0x1074>
   120c0:	rsb	r0, r6, r4
   120c4:	pop	{r3, r4, r5, r6, r7, pc}
   120c8:	mov	r6, #1
   120cc:	b	12090 <strspn@plt+0x1064>
   120d0:	mov	r0, r4
   120d4:	pop	{r3, r4, r5, r6, r7, pc}
   120d8:	mov	r0, r3
   120dc:	pop	{r3, r4, r5, r6, r7, pc}
   120e0:	ldr	r3, [pc, #224]	; 121c8 <strspn@plt+0x119c>
   120e4:	push	{r4, r5, r6, r7, r8, r9, lr}
   120e8:	mov	r6, r0
   120ec:	ldr	r0, [pc, #216]	; 121cc <strspn@plt+0x11a0>
   120f0:	add	r3, pc, r3
   120f4:	sub	sp, sp, #12
   120f8:	mov	r4, #0
   120fc:	mov	r9, r1
   12100:	mov	r5, r2
   12104:	ldr	r8, [r3, r0]
   12108:	str	r4, [sp]
   1210c:	ldr	r3, [r8]
   12110:	str	r3, [sp, #4]
   12114:	bl	10f3c <__errno_location@plt>
   12118:	cmp	r6, r4
   1211c:	mov	r7, r0
   12120:	str	r4, [r0]
   12124:	beq	12134 <strspn@plt+0x1108>
   12128:	ldrsb	r3, [r6]
   1212c:	cmp	r3, r4
   12130:	bne	1214c <strspn@plt+0x1120>
   12134:	ldr	r1, [pc, #148]	; 121d0 <strspn@plt+0x11a4>
   12138:	mov	r2, r9
   1213c:	mov	r3, r6
   12140:	mov	r0, #1
   12144:	add	r1, pc, r1
   12148:	bl	10fcc <errx@plt>
   1214c:	mov	r3, r4
   12150:	mov	r2, r5
   12154:	mov	r0, r6
   12158:	mov	r1, sp
   1215c:	bl	10e34 <__strtoull_internal@plt>
   12160:	ldr	r3, [r7]
   12164:	cmp	r3, r4
   12168:	bne	121a4 <strspn@plt+0x1178>
   1216c:	ldr	r3, [sp]
   12170:	cmp	r6, r3
   12174:	beq	12134 <strspn@plt+0x1108>
   12178:	cmp	r3, r4
   1217c:	beq	1218c <strspn@plt+0x1160>
   12180:	ldrsb	r3, [r3]
   12184:	cmp	r3, r4
   12188:	bne	12134 <strspn@plt+0x1108>
   1218c:	ldr	r2, [sp, #4]
   12190:	ldr	r3, [r8]
   12194:	cmp	r2, r3
   12198:	bne	121c4 <strspn@plt+0x1198>
   1219c:	add	sp, sp, #12
   121a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   121a4:	cmp	r3, #34	; 0x22
   121a8:	bne	12134 <strspn@plt+0x1108>
   121ac:	ldr	r1, [pc, #32]	; 121d4 <strspn@plt+0x11a8>
   121b0:	mov	r2, r9
   121b4:	mov	r3, r6
   121b8:	mov	r0, #1
   121bc:	add	r1, pc, r1
   121c0:	bl	10e88 <err@plt>
   121c4:	bl	10e4c <__stack_chk_fail@plt>
   121c8:	andeq	r2, r1, r8, lsl #30
   121cc:	andeq	r0, r0, r0, ror #1
   121d0:	andeq	r2, r0, ip, asr r7
   121d4:	andeq	r2, r0, r4, ror #13
   121d8:	ldr	r3, [pc, #596]	; 12434 <strspn@plt+0x1408>
   121dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121e0:	add	r3, pc, r3
   121e4:	subs	r6, r0, #0
   121e8:	ldr	r0, [pc, #584]	; 12438 <strspn@plt+0x140c>
   121ec:	mov	r8, r1
   121f0:	mov	r1, r3
   121f4:	sub	sp, sp, #20
   121f8:	mov	r9, r2
   121fc:	ldr	sl, [r1, r0]
   12200:	mov	r2, #0
   12204:	mov	r3, #0
   12208:	ldr	r1, [sl]
   1220c:	strd	r2, [r8]
   12210:	str	r1, [sp, #12]
   12214:	beq	122fc <strspn@plt+0x12d0>
   12218:	ldrb	r5, [r6]
   1221c:	cmp	r5, #0
   12220:	beq	122fc <strspn@plt+0x12d0>
   12224:	str	r6, [sp, #8]
   12228:	bl	10edc <__ctype_b_loc@plt>
   1222c:	mov	r3, r6
   12230:	ldr	r1, [r0]
   12234:	b	12248 <strspn@plt+0x121c>
   12238:	add	r2, r3, #1
   1223c:	str	r2, [sp, #8]
   12240:	ldrb	r5, [r3, #1]
   12244:	mov	r3, r2
   12248:	lsl	r2, r5, #1
   1224c:	ldrh	r4, [r1, r2]
   12250:	and	r4, r4, #8192	; 0x2000
   12254:	uxth	r4, r4
   12258:	cmp	r4, #0
   1225c:	bne	12238 <strspn@plt+0x120c>
   12260:	cmp	r5, #45	; 0x2d
   12264:	beq	122fc <strspn@plt+0x12d0>
   12268:	add	r5, sp, #16
   1226c:	str	r4, [r5, #-8]!
   12270:	bl	10f3c <__errno_location@plt>
   12274:	mov	r2, r4
   12278:	mov	r1, r5
   1227c:	mov	r3, r4
   12280:	mov	r7, r0
   12284:	mov	r0, r6
   12288:	str	r4, [r7]
   1228c:	bl	10e34 <__strtoull_internal@plt>
   12290:	mov	r5, r1
   12294:	ldr	r1, [sp, #8]
   12298:	mov	r4, r0
   1229c:	cmp	r1, r6
   122a0:	beq	122fc <strspn@plt+0x12d0>
   122a4:	ldr	r3, [r7]
   122a8:	cmp	r3, #0
   122ac:	bne	122e0 <strspn@plt+0x12b4>
   122b0:	cmp	r1, #0
   122b4:	beq	123e4 <strspn@plt+0x13b8>
   122b8:	ldrb	r0, [r1]
   122bc:	cmp	r0, #0
   122c0:	bne	12304 <strspn@plt+0x12d8>
   122c4:	strd	r4, [r8]
   122c8:	ldr	r2, [sp, #12]
   122cc:	ldr	r3, [sl]
   122d0:	cmp	r2, r3
   122d4:	bne	12430 <strspn@plt+0x1404>
   122d8:	add	sp, sp, #20
   122dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122e0:	subs	r2, r4, #1
   122e4:	mvn	r6, #2
   122e8:	sbc	r3, r5, #0
   122ec:	mvn	r7, #0
   122f0:	cmp	r3, r7
   122f4:	cmpeq	r2, r6
   122f8:	bls	122b0 <strspn@plt+0x1284>
   122fc:	mvn	r0, #0
   12300:	b	122c8 <strspn@plt+0x129c>
   12304:	ldrb	r2, [r1, #1]
   12308:	sxtb	r3, r2
   1230c:	cmp	r3, #105	; 0x69
   12310:	beq	123ec <strspn@plt+0x13c0>
   12314:	cmp	r3, #66	; 0x42
   12318:	beq	123c8 <strspn@plt+0x139c>
   1231c:	cmp	r2, #0
   12320:	bne	122fc <strspn@plt+0x12d0>
   12324:	mov	r6, #1024	; 0x400
   12328:	ldr	r7, [pc, #268]	; 1243c <strspn@plt+0x1410>
   1232c:	sxtb	r3, r0
   12330:	str	r3, [sp, #4]
   12334:	add	r7, pc, r7
   12338:	mov	r1, r3
   1233c:	mov	r0, r7
   12340:	bl	10f24 <strchr@plt>
   12344:	ldr	r3, [sp, #4]
   12348:	cmp	r0, #0
   1234c:	rsbne	fp, r7, r0
   12350:	addne	fp, fp, #1
   12354:	beq	12408 <strspn@plt+0x13dc>
   12358:	cmp	fp, #0
   1235c:	beq	123b8 <strspn@plt+0x138c>
   12360:	asr	r7, r6, #31
   12364:	mvn	r0, #0
   12368:	mvn	r1, #0
   1236c:	mov	r2, r6
   12370:	mov	r3, r7
   12374:	bl	138d4 <strspn@plt+0x28a8>
   12378:	cmp	r1, r5
   1237c:	cmpeq	r0, r4
   12380:	bcc	123dc <strspn@plt+0x13b0>
   12384:	sub	ip, fp, #1
   12388:	mov	r3, #0
   1238c:	b	123a0 <strspn@plt+0x1374>
   12390:	cmp	r1, r5
   12394:	cmpeq	r0, r4
   12398:	add	r3, r3, #1
   1239c:	bcc	123dc <strspn@plt+0x13b0>
   123a0:	mul	r2, r4, r7
   123a4:	cmp	r3, ip
   123a8:	mla	r2, r6, r5, r2
   123ac:	umull	r4, r5, r4, r6
   123b0:	add	r5, r2, r5
   123b4:	bne	12390 <strspn@plt+0x1364>
   123b8:	mov	r0, #0
   123bc:	cmp	r9, #0
   123c0:	strne	fp, [r9]
   123c4:	b	122c4 <strspn@plt+0x1298>
   123c8:	ldrsb	r3, [r1, #2]
   123cc:	cmp	r3, #0
   123d0:	bne	122fc <strspn@plt+0x12d0>
   123d4:	mov	r6, #1000	; 0x3e8
   123d8:	b	12328 <strspn@plt+0x12fc>
   123dc:	mvn	r0, #1
   123e0:	b	123bc <strspn@plt+0x1390>
   123e4:	mov	r0, r1
   123e8:	b	122c4 <strspn@plt+0x1298>
   123ec:	ldrsb	r3, [r1, #2]
   123f0:	cmp	r3, #66	; 0x42
   123f4:	bne	122fc <strspn@plt+0x12d0>
   123f8:	ldrsb	r3, [r1, #3]
   123fc:	cmp	r3, #0
   12400:	beq	12324 <strspn@plt+0x12f8>
   12404:	b	122fc <strspn@plt+0x12d0>
   12408:	ldr	r7, [pc, #48]	; 12440 <strspn@plt+0x1414>
   1240c:	mov	r1, r3
   12410:	add	r7, pc, r7
   12414:	mov	r0, r7
   12418:	bl	10f24 <strchr@plt>
   1241c:	cmp	r0, #0
   12420:	beq	122fc <strspn@plt+0x12d0>
   12424:	rsb	r7, r7, r0
   12428:	add	fp, r7, #1
   1242c:	b	12358 <strspn@plt+0x132c>
   12430:	bl	10e4c <__stack_chk_fail@plt>
   12434:	andeq	r2, r1, r8, lsl lr
   12438:	andeq	r0, r0, r0, ror #1
   1243c:	andeq	r2, r0, r8, ror r5
   12440:	andeq	r2, r0, r8, lsr #9
   12444:	mov	r2, #0
   12448:	b	121d8 <strspn@plt+0x11ac>
   1244c:	push	{r4, r5, r6, lr}
   12450:	subs	r6, r0, #0
   12454:	beq	124d8 <strspn@plt+0x14ac>
   12458:	ldrb	r4, [r6]
   1245c:	cmp	r4, #0
   12460:	beq	124e0 <strspn@plt+0x14b4>
   12464:	bl	10edc <__ctype_b_loc@plt>
   12468:	mov	r3, r6
   1246c:	ldr	r5, [r0]
   12470:	b	1248c <strspn@plt+0x1460>
   12474:	cmn	r3, #1
   12478:	beq	124c8 <strspn@plt+0x149c>
   1247c:	ldrb	r4, [r3, #1]
   12480:	mov	r3, r1
   12484:	cmp	r4, #0
   12488:	beq	124d0 <strspn@plt+0x14a4>
   1248c:	lsl	r4, r4, #1
   12490:	mov	ip, r3
   12494:	add	r1, r3, #1
   12498:	ldrh	r2, [r5, r4]
   1249c:	tst	r2, #2048	; 0x800
   124a0:	bne	12474 <strspn@plt+0x1448>
   124a4:	cmp	ip, #0
   124a8:	cmpne	ip, r6
   124ac:	movls	r0, #0
   124b0:	movhi	r0, #1
   124b4:	popls	{r4, r5, r6, pc}
   124b8:	ldrsb	r0, [ip]
   124bc:	rsbs	r0, r0, #1
   124c0:	movcc	r0, #0
   124c4:	pop	{r4, r5, r6, pc}
   124c8:	mov	r0, #0
   124cc:	pop	{r4, r5, r6, pc}
   124d0:	mov	ip, r1
   124d4:	b	124a4 <strspn@plt+0x1478>
   124d8:	mov	r0, r6
   124dc:	pop	{r4, r5, r6, pc}
   124e0:	mov	r0, r4
   124e4:	pop	{r4, r5, r6, pc}
   124e8:	cmp	r1, #0
   124ec:	push	{r4, r5}
   124f0:	sub	r4, r1, #1
   124f4:	beq	12560 <strspn@plt+0x1534>
   124f8:	ldrb	r1, [r0]
   124fc:	cmp	r1, #0
   12500:	beq	12560 <strspn@plt+0x1534>
   12504:	sxtb	r1, r1
   12508:	sxtb	r2, r2
   1250c:	cmp	r1, r2
   12510:	beq	1254c <strspn@plt+0x1520>
   12514:	add	r1, r0, #1
   12518:	mov	r3, #0
   1251c:	b	12538 <strspn@plt+0x150c>
   12520:	ldrb	r0, [r1], #1
   12524:	cmp	r0, #0
   12528:	sxtb	ip, r0
   1252c:	beq	1254c <strspn@plt+0x1520>
   12530:	cmp	ip, r2
   12534:	beq	12554 <strspn@plt+0x1528>
   12538:	cmp	r3, r4
   1253c:	mov	r5, r1
   12540:	add	r3, r3, #1
   12544:	bne	12520 <strspn@plt+0x14f4>
   12548:	mov	r0, #0
   1254c:	pop	{r4, r5}
   12550:	bx	lr
   12554:	mov	r0, r5
   12558:	pop	{r4, r5}
   1255c:	bx	lr
   12560:	mov	r0, r1
   12564:	b	1254c <strspn@plt+0x1520>
   12568:	ldr	r3, [pc, #228]	; 12654 <strspn@plt+0x1628>
   1256c:	ldr	r2, [pc, #228]	; 12658 <strspn@plt+0x162c>
   12570:	add	r3, pc, r3
   12574:	push	{r4, r6, r7, r8, r9, lr}
   12578:	subs	r6, r0, #0
   1257c:	ldr	r7, [r3, r2]
   12580:	mov	r0, r3
   12584:	sub	sp, sp, #8
   12588:	mov	r4, #0
   1258c:	mov	r8, r1
   12590:	ldr	r3, [r7]
   12594:	str	r4, [sp]
   12598:	str	r3, [sp, #4]
   1259c:	beq	125ac <strspn@plt+0x1580>
   125a0:	ldrsb	r3, [r6]
   125a4:	cmp	r3, r4
   125a8:	bne	125d4 <strspn@plt+0x15a8>
   125ac:	bl	10f3c <__errno_location@plt>
   125b0:	ldr	r3, [r0]
   125b4:	cmp	r3, #0
   125b8:	bne	12600 <strspn@plt+0x15d4>
   125bc:	ldr	r1, [pc, #152]	; 1265c <strspn@plt+0x1630>
   125c0:	mov	r2, r8
   125c4:	mov	r3, r6
   125c8:	mov	r0, #1
   125cc:	add	r1, pc, r1
   125d0:	bl	10fcc <errx@plt>
   125d4:	bl	10f3c <__errno_location@plt>
   125d8:	mov	r3, r4
   125dc:	mov	r1, sp
   125e0:	mov	r2, #10
   125e4:	mov	r9, r0
   125e8:	str	r4, [r0]
   125ec:	mov	r0, r6
   125f0:	bl	10ff0 <__strtoll_internal@plt>
   125f4:	ldr	r3, [r9]
   125f8:	cmp	r3, r4
   125fc:	beq	12618 <strspn@plt+0x15ec>
   12600:	ldr	r1, [pc, #88]	; 12660 <strspn@plt+0x1634>
   12604:	mov	r2, r8
   12608:	mov	r3, r6
   1260c:	mov	r0, #1
   12610:	add	r1, pc, r1
   12614:	bl	10e88 <err@plt>
   12618:	ldr	r3, [sp]
   1261c:	cmp	r6, r3
   12620:	beq	125bc <strspn@plt+0x1590>
   12624:	cmp	r3, #0
   12628:	beq	12638 <strspn@plt+0x160c>
   1262c:	ldrsb	r3, [r3]
   12630:	cmp	r3, #0
   12634:	bne	125bc <strspn@plt+0x1590>
   12638:	ldr	r2, [sp, #4]
   1263c:	ldr	r3, [r7]
   12640:	cmp	r2, r3
   12644:	bne	12650 <strspn@plt+0x1624>
   12648:	add	sp, sp, #8
   1264c:	pop	{r4, r6, r7, r8, r9, pc}
   12650:	bl	10e4c <__stack_chk_fail@plt>
   12654:	andeq	r2, r1, r8, lsl #21
   12658:	andeq	r0, r0, r0, ror #1
   1265c:	ldrdeq	r2, [r0], -r4
   12660:	muleq	r0, r0, r2
   12664:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   12668:	mov	r8, r0
   1266c:	mov	r9, r1
   12670:	bl	12568 <strspn@plt+0x153c>
   12674:	mvn	r4, #0
   12678:	mov	r5, #0
   1267c:	adds	r6, r0, #-2147483648	; 0x80000000
   12680:	adc	r7, r1, #0
   12684:	cmp	r7, r5
   12688:	cmpeq	r6, r4
   1268c:	popls	{r3, r4, r5, r6, r7, r8, r9, pc}
   12690:	ldr	r1, [pc, #16]	; 126a8 <strspn@plt+0x167c>
   12694:	mov	r2, r9
   12698:	mov	r3, r8
   1269c:	mov	r0, #1
   126a0:	add	r1, pc, r1
   126a4:	bl	10fcc <errx@plt>
   126a8:	andeq	r2, r0, r0, lsl #4
   126ac:	push	{r3, r4, r5, lr}
   126b0:	mov	r4, r0
   126b4:	mov	r5, r1
   126b8:	bl	12664 <strspn@plt+0x1638>
   126bc:	add	ip, r0, #32768	; 0x8000
   126c0:	cmp	ip, #65536	; 0x10000
   126c4:	bcs	126d0 <strspn@plt+0x16a4>
   126c8:	sxth	r0, r0
   126cc:	pop	{r3, r4, r5, pc}
   126d0:	ldr	r1, [pc, #16]	; 126e8 <strspn@plt+0x16bc>
   126d4:	mov	r2, r5
   126d8:	mov	r3, r4
   126dc:	mov	r0, #1
   126e0:	add	r1, pc, r1
   126e4:	bl	10fcc <errx@plt>
   126e8:	andeq	r2, r0, r0, asr #3
   126ec:	mov	r2, #10
   126f0:	b	120e0 <strspn@plt+0x10b4>
   126f4:	push	{r3, r4, r5, r6, r7, lr}
   126f8:	mov	r6, r0
   126fc:	mov	r7, r1
   12700:	bl	126ec <strspn@plt+0x16c0>
   12704:	mvn	r4, #0
   12708:	mov	r5, #0
   1270c:	cmp	r1, r5
   12710:	cmpeq	r0, r4
   12714:	popls	{r3, r4, r5, r6, r7, pc}
   12718:	ldr	r1, [pc, #16]	; 12730 <strspn@plt+0x1704>
   1271c:	mov	r2, r7
   12720:	mov	r3, r6
   12724:	mov	r0, #1
   12728:	add	r1, pc, r1
   1272c:	bl	10fcc <errx@plt>
   12730:	andeq	r2, r0, r8, ror r1
   12734:	push	{r3, r4, r5, lr}
   12738:	mov	r4, r0
   1273c:	mov	r5, r1
   12740:	bl	126f4 <strspn@plt+0x16c8>
   12744:	cmp	r0, #65536	; 0x10000
   12748:	bcs	12754 <strspn@plt+0x1728>
   1274c:	uxth	r0, r0
   12750:	pop	{r3, r4, r5, pc}
   12754:	ldr	r1, [pc, #16]	; 1276c <strspn@plt+0x1740>
   12758:	mov	r2, r5
   1275c:	mov	r3, r4
   12760:	mov	r0, #1
   12764:	add	r1, pc, r1
   12768:	bl	10fcc <errx@plt>
   1276c:	andeq	r2, r0, ip, lsr r1
   12770:	mov	r2, #16
   12774:	b	120e0 <strspn@plt+0x10b4>
   12778:	ldr	r3, [pc, #216]	; 12858 <strspn@plt+0x182c>
   1277c:	push	{r4, r5, r6, r7, r8, lr}
   12780:	subs	r4, r0, #0
   12784:	ldr	r0, [pc, #208]	; 1285c <strspn@plt+0x1830>
   12788:	add	r3, pc, r3
   1278c:	sub	sp, sp, #8
   12790:	mov	r5, #0
   12794:	mov	r7, r1
   12798:	ldr	r6, [r3, r0]
   1279c:	str	r5, [sp]
   127a0:	ldr	r3, [r6]
   127a4:	str	r3, [sp, #4]
   127a8:	beq	127b8 <strspn@plt+0x178c>
   127ac:	ldrsb	r3, [r4]
   127b0:	cmp	r3, r5
   127b4:	bne	127e0 <strspn@plt+0x17b4>
   127b8:	bl	10f3c <__errno_location@plt>
   127bc:	ldr	r3, [r0]
   127c0:	cmp	r3, #0
   127c4:	bne	12804 <strspn@plt+0x17d8>
   127c8:	ldr	r1, [pc, #144]	; 12860 <strspn@plt+0x1834>
   127cc:	mov	r2, r7
   127d0:	mov	r3, r4
   127d4:	mov	r0, #1
   127d8:	add	r1, pc, r1
   127dc:	bl	10fcc <errx@plt>
   127e0:	bl	10f3c <__errno_location@plt>
   127e4:	mov	r1, sp
   127e8:	mov	r8, r0
   127ec:	str	r5, [r0]
   127f0:	mov	r0, r4
   127f4:	bl	10f90 <strtod@plt>
   127f8:	ldr	r3, [r8]
   127fc:	cmp	r3, r5
   12800:	beq	1281c <strspn@plt+0x17f0>
   12804:	ldr	r1, [pc, #88]	; 12864 <strspn@plt+0x1838>
   12808:	mov	r2, r7
   1280c:	mov	r3, r4
   12810:	mov	r0, #1
   12814:	add	r1, pc, r1
   12818:	bl	10e88 <err@plt>
   1281c:	ldr	r3, [sp]
   12820:	cmp	r4, r3
   12824:	beq	127c8 <strspn@plt+0x179c>
   12828:	cmp	r3, #0
   1282c:	beq	1283c <strspn@plt+0x1810>
   12830:	ldrsb	r3, [r3]
   12834:	cmp	r3, #0
   12838:	bne	127c8 <strspn@plt+0x179c>
   1283c:	ldr	r2, [sp, #4]
   12840:	ldr	r3, [r6]
   12844:	cmp	r2, r3
   12848:	bne	12854 <strspn@plt+0x1828>
   1284c:	add	sp, sp, #8
   12850:	pop	{r4, r5, r6, r7, r8, pc}
   12854:	bl	10e4c <__stack_chk_fail@plt>
   12858:	andeq	r2, r1, r0, ror r8
   1285c:	andeq	r0, r0, r0, ror #1
   12860:	andeq	r2, r0, r8, asr #1
   12864:	andeq	r2, r0, ip, lsl #1
   12868:	ldr	r3, [pc, #220]	; 1294c <strspn@plt+0x1920>
   1286c:	push	{r4, r5, r6, r7, r8, lr}
   12870:	subs	r4, r0, #0
   12874:	ldr	r0, [pc, #212]	; 12950 <strspn@plt+0x1924>
   12878:	add	r3, pc, r3
   1287c:	sub	sp, sp, #8
   12880:	mov	r5, #0
   12884:	mov	r7, r1
   12888:	ldr	r6, [r3, r0]
   1288c:	str	r5, [sp]
   12890:	ldr	r3, [r6]
   12894:	str	r3, [sp, #4]
   12898:	beq	128a8 <strspn@plt+0x187c>
   1289c:	ldrsb	r3, [r4]
   128a0:	cmp	r3, r5
   128a4:	bne	128d0 <strspn@plt+0x18a4>
   128a8:	bl	10f3c <__errno_location@plt>
   128ac:	ldr	r3, [r0]
   128b0:	cmp	r3, #0
   128b4:	bne	128f8 <strspn@plt+0x18cc>
   128b8:	ldr	r1, [pc, #148]	; 12954 <strspn@plt+0x1928>
   128bc:	mov	r2, r7
   128c0:	mov	r3, r4
   128c4:	mov	r0, #1
   128c8:	add	r1, pc, r1
   128cc:	bl	10fcc <errx@plt>
   128d0:	bl	10f3c <__errno_location@plt>
   128d4:	mov	r1, sp
   128d8:	mov	r2, #10
   128dc:	mov	r8, r0
   128e0:	str	r5, [r0]
   128e4:	mov	r0, r4
   128e8:	bl	10de0 <strtol@plt>
   128ec:	ldr	r3, [r8]
   128f0:	cmp	r3, r5
   128f4:	beq	12910 <strspn@plt+0x18e4>
   128f8:	ldr	r1, [pc, #88]	; 12958 <strspn@plt+0x192c>
   128fc:	mov	r2, r7
   12900:	mov	r3, r4
   12904:	mov	r0, #1
   12908:	add	r1, pc, r1
   1290c:	bl	10e88 <err@plt>
   12910:	ldr	r3, [sp]
   12914:	cmp	r4, r3
   12918:	beq	128b8 <strspn@plt+0x188c>
   1291c:	cmp	r3, #0
   12920:	beq	12930 <strspn@plt+0x1904>
   12924:	ldrsb	r3, [r3]
   12928:	cmp	r3, #0
   1292c:	bne	128b8 <strspn@plt+0x188c>
   12930:	ldr	r2, [sp, #4]
   12934:	ldr	r3, [r6]
   12938:	cmp	r2, r3
   1293c:	bne	12948 <strspn@plt+0x191c>
   12940:	add	sp, sp, #8
   12944:	pop	{r4, r5, r6, r7, r8, pc}
   12948:	bl	10e4c <__stack_chk_fail@plt>
   1294c:	andeq	r2, r1, r0, lsl #15
   12950:	andeq	r0, r0, r0, ror #1
   12954:	ldrdeq	r1, [r0], -r8
   12958:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   1295c:	ldr	r3, [pc, #220]	; 12a40 <strspn@plt+0x1a14>
   12960:	push	{r4, r5, r6, r7, r8, lr}
   12964:	subs	r4, r0, #0
   12968:	ldr	r0, [pc, #212]	; 12a44 <strspn@plt+0x1a18>
   1296c:	add	r3, pc, r3
   12970:	sub	sp, sp, #8
   12974:	mov	r5, #0
   12978:	mov	r7, r1
   1297c:	ldr	r6, [r3, r0]
   12980:	str	r5, [sp]
   12984:	ldr	r3, [r6]
   12988:	str	r3, [sp, #4]
   1298c:	beq	1299c <strspn@plt+0x1970>
   12990:	ldrsb	r3, [r4]
   12994:	cmp	r3, r5
   12998:	bne	129c4 <strspn@plt+0x1998>
   1299c:	bl	10f3c <__errno_location@plt>
   129a0:	ldr	r3, [r0]
   129a4:	cmp	r3, #0
   129a8:	bne	129ec <strspn@plt+0x19c0>
   129ac:	ldr	r1, [pc, #148]	; 12a48 <strspn@plt+0x1a1c>
   129b0:	mov	r2, r7
   129b4:	mov	r3, r4
   129b8:	mov	r0, #1
   129bc:	add	r1, pc, r1
   129c0:	bl	10fcc <errx@plt>
   129c4:	bl	10f3c <__errno_location@plt>
   129c8:	mov	r1, sp
   129cc:	mov	r2, #10
   129d0:	mov	r8, r0
   129d4:	str	r5, [r0]
   129d8:	mov	r0, r4
   129dc:	bl	10f0c <strtoul@plt>
   129e0:	ldr	r3, [r8]
   129e4:	cmp	r3, r5
   129e8:	beq	12a04 <strspn@plt+0x19d8>
   129ec:	ldr	r1, [pc, #88]	; 12a4c <strspn@plt+0x1a20>
   129f0:	mov	r2, r7
   129f4:	mov	r3, r4
   129f8:	mov	r0, #1
   129fc:	add	r1, pc, r1
   12a00:	bl	10e88 <err@plt>
   12a04:	ldr	r3, [sp]
   12a08:	cmp	r4, r3
   12a0c:	beq	129ac <strspn@plt+0x1980>
   12a10:	cmp	r3, #0
   12a14:	beq	12a24 <strspn@plt+0x19f8>
   12a18:	ldrsb	r3, [r3]
   12a1c:	cmp	r3, #0
   12a20:	bne	129ac <strspn@plt+0x1980>
   12a24:	ldr	r2, [sp, #4]
   12a28:	ldr	r3, [r6]
   12a2c:	cmp	r2, r3
   12a30:	bne	12a3c <strspn@plt+0x1a10>
   12a34:	add	sp, sp, #8
   12a38:	pop	{r4, r5, r6, r7, r8, pc}
   12a3c:	bl	10e4c <__stack_chk_fail@plt>
   12a40:	andeq	r2, r1, ip, lsl #13
   12a44:	andeq	r0, r0, r0, ror #1
   12a48:	andeq	r1, r0, r4, ror #29
   12a4c:	andeq	r1, r0, r4, lsr #29
   12a50:	ldr	ip, [pc, #132]	; 12adc <strspn@plt+0x1ab0>
   12a54:	push	{r4, r5, r6, lr}
   12a58:	add	ip, pc, ip
   12a5c:	ldr	lr, [pc, #124]	; 12ae0 <strspn@plt+0x1ab4>
   12a60:	sub	sp, sp, #16
   12a64:	mov	r6, r1
   12a68:	mov	r5, r0
   12a6c:	mov	r1, sp
   12a70:	ldr	r4, [ip, lr]
   12a74:	ldr	ip, [r4]
   12a78:	str	ip, [sp, #12]
   12a7c:	bl	12444 <strspn@plt+0x1418>
   12a80:	cmp	r0, #0
   12a84:	bne	12aa4 <strspn@plt+0x1a78>
   12a88:	ldr	r2, [sp, #12]
   12a8c:	ldr	r3, [r4]
   12a90:	ldrd	r0, [sp]
   12a94:	cmp	r2, r3
   12a98:	bne	12ad8 <strspn@plt+0x1aac>
   12a9c:	add	sp, sp, #16
   12aa0:	pop	{r4, r5, r6, pc}
   12aa4:	bl	10f3c <__errno_location@plt>
   12aa8:	mov	r2, r6
   12aac:	ldr	r3, [r0]
   12ab0:	mov	r0, #1
   12ab4:	cmp	r3, #0
   12ab8:	mov	r3, r5
   12abc:	beq	12acc <strspn@plt+0x1aa0>
   12ac0:	ldr	r1, [pc, #28]	; 12ae4 <strspn@plt+0x1ab8>
   12ac4:	add	r1, pc, r1
   12ac8:	bl	10e88 <err@plt>
   12acc:	ldr	r1, [pc, #20]	; 12ae8 <strspn@plt+0x1abc>
   12ad0:	add	r1, pc, r1
   12ad4:	bl	10fcc <errx@plt>
   12ad8:	bl	10e4c <__stack_chk_fail@plt>
   12adc:	andeq	r2, r1, r0, lsr #11
   12ae0:	andeq	r0, r0, r0, ror #1
   12ae4:	ldrdeq	r1, [r0], -ip
   12ae8:	ldrdeq	r1, [r0], -r0
   12aec:	push	{r4, lr}
   12af0:	mov	r4, r1
   12af4:	mov	r1, r2
   12af8:	bl	12778 <strspn@plt+0x174c>
   12afc:	vldr	d7, [pc, #28]	; 12b20 <strspn@plt+0x1af4>
   12b00:	vcvt.s32.f64	s11, d0
   12b04:	vcvt.f64.s32	d6, s11
   12b08:	vstr	s11, [r4]
   12b0c:	vsub.f64	d0, d0, d6
   12b10:	vmul.f64	d0, d0, d7
   12b14:	vcvt.s32.f64	s0, d0
   12b18:	vstr	s0, [r4, #4]
   12b1c:	pop	{r4, pc}
   12b20:	andeq	r0, r0, r0
   12b24:	smlawbmi	lr, r0, r4, r8
   12b28:	and	r3, r0, #61440	; 0xf000
   12b2c:	cmp	r3, #16384	; 0x4000
   12b30:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   12b34:	moveq	r3, #100	; 0x64
   12b38:	beq	12bb0 <strspn@plt+0x1b84>
   12b3c:	cmp	r3, #40960	; 0xa000
   12b40:	moveq	r3, #108	; 0x6c
   12b44:	beq	12bb0 <strspn@plt+0x1b84>
   12b48:	cmp	r3, #8192	; 0x2000
   12b4c:	moveq	r3, #99	; 0x63
   12b50:	beq	12bb0 <strspn@plt+0x1b84>
   12b54:	cmp	r3, #24576	; 0x6000
   12b58:	moveq	r3, #98	; 0x62
   12b5c:	beq	12bb0 <strspn@plt+0x1b84>
   12b60:	cmp	r3, #49152	; 0xc000
   12b64:	moveq	r3, #115	; 0x73
   12b68:	beq	12bb0 <strspn@plt+0x1b84>
   12b6c:	cmp	r3, #4096	; 0x1000
   12b70:	moveq	r3, #112	; 0x70
   12b74:	beq	12bb0 <strspn@plt+0x1b84>
   12b78:	cmp	r3, #32768	; 0x8000
   12b7c:	beq	12bac <strspn@plt+0x1b80>
   12b80:	mov	r4, #9
   12b84:	mov	r3, #8
   12b88:	mov	r6, #7
   12b8c:	mov	r7, #6
   12b90:	mov	r2, #5
   12b94:	mov	r8, #4
   12b98:	mov	r9, #3
   12b9c:	mov	ip, #2
   12ba0:	mov	sl, #1
   12ba4:	mov	fp, #0
   12ba8:	b	12bdc <strspn@plt+0x1bb0>
   12bac:	mov	r3, #45	; 0x2d
   12bb0:	strb	r3, [r1]
   12bb4:	mov	r4, #10
   12bb8:	mov	r3, #9
   12bbc:	mov	r6, #8
   12bc0:	mov	r7, #7
   12bc4:	mov	r2, #6
   12bc8:	mov	r8, #5
   12bcc:	mov	r9, #4
   12bd0:	mov	ip, #3
   12bd4:	mov	sl, #2
   12bd8:	mov	fp, #1
   12bdc:	tst	r0, #256	; 0x100
   12be0:	add	ip, r1, ip
   12be4:	moveq	r5, #45	; 0x2d
   12be8:	movne	r5, #114	; 0x72
   12bec:	tst	r0, #128	; 0x80
   12bf0:	strb	r5, [r1, fp]
   12bf4:	moveq	r5, #45	; 0x2d
   12bf8:	movne	r5, #119	; 0x77
   12bfc:	tst	r0, #2048	; 0x800
   12c00:	strb	r5, [r1, sl]
   12c04:	beq	12ca0 <strspn@plt+0x1c74>
   12c08:	tst	r0, #64	; 0x40
   12c0c:	moveq	r5, #83	; 0x53
   12c10:	movne	r5, #115	; 0x73
   12c14:	tst	r0, #32
   12c18:	strb	r5, [ip]
   12c1c:	add	r2, r1, r2
   12c20:	moveq	ip, #45	; 0x2d
   12c24:	movne	ip, #114	; 0x72
   12c28:	tst	r0, #16
   12c2c:	strb	ip, [r1, r9]
   12c30:	moveq	ip, #45	; 0x2d
   12c34:	movne	ip, #119	; 0x77
   12c38:	tst	r0, #1024	; 0x400
   12c3c:	strb	ip, [r1, r8]
   12c40:	beq	12cc0 <strspn@plt+0x1c94>
   12c44:	tst	r0, #8
   12c48:	moveq	ip, #83	; 0x53
   12c4c:	movne	ip, #115	; 0x73
   12c50:	tst	r0, #4
   12c54:	strb	ip, [r2]
   12c58:	add	r3, r1, r3
   12c5c:	moveq	r2, #45	; 0x2d
   12c60:	movne	r2, #114	; 0x72
   12c64:	tst	r0, #2
   12c68:	strb	r2, [r1, r7]
   12c6c:	moveq	r2, #45	; 0x2d
   12c70:	movne	r2, #119	; 0x77
   12c74:	tst	r0, #512	; 0x200
   12c78:	strb	r2, [r1, r6]
   12c7c:	beq	12cb0 <strspn@plt+0x1c84>
   12c80:	tst	r0, #1
   12c84:	moveq	r2, #84	; 0x54
   12c88:	movne	r2, #116	; 0x74
   12c8c:	strb	r2, [r3]
   12c90:	mov	r3, #0
   12c94:	strb	r3, [r1, r4]
   12c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   12c9c:	bx	lr
   12ca0:	tst	r0, #64	; 0x40
   12ca4:	moveq	r5, #45	; 0x2d
   12ca8:	movne	r5, #120	; 0x78
   12cac:	b	12c14 <strspn@plt+0x1be8>
   12cb0:	tst	r0, #1
   12cb4:	moveq	r2, #45	; 0x2d
   12cb8:	movne	r2, #120	; 0x78
   12cbc:	b	12c8c <strspn@plt+0x1c60>
   12cc0:	tst	r0, #8
   12cc4:	moveq	ip, #45	; 0x2d
   12cc8:	movne	ip, #120	; 0x78
   12ccc:	b	12c50 <strspn@plt+0x1c24>
   12cd0:	ldr	r1, [pc, #580]	; 12f1c <strspn@plt+0x1ef0>
   12cd4:	tst	r0, #2
   12cd8:	ldr	ip, [pc, #576]	; 12f20 <strspn@plt+0x1ef4>
   12cdc:	add	r1, pc, r1
   12ce0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ce4:	sub	sp, sp, #100	; 0x64
   12ce8:	ldr	r6, [r1, ip]
   12cec:	addeq	r7, sp, #52	; 0x34
   12cf0:	addne	lr, sp, #53	; 0x35
   12cf4:	addne	r7, sp, #52	; 0x34
   12cf8:	moveq	lr, r7
   12cfc:	mov	ip, #10
   12d00:	ldr	r1, [r6]
   12d04:	str	r1, [sp, #92]	; 0x5c
   12d08:	movne	r1, #32
   12d0c:	strbne	r1, [sp, #52]	; 0x34
   12d10:	mov	r1, #1
   12d14:	sub	r9, ip, #32
   12d18:	rsb	r8, ip, #32
   12d1c:	lsl	r5, r1, r9
   12d20:	lsl	r4, r1, ip
   12d24:	orr	r5, r5, r1, lsr r8
   12d28:	cmp	r3, r5
   12d2c:	cmpeq	r2, r4
   12d30:	bcc	12e9c <strspn@plt+0x1e70>
   12d34:	add	ip, ip, #10
   12d38:	cmp	ip, #70	; 0x46
   12d3c:	bne	12d14 <strspn@plt+0x1ce8>
   12d40:	mov	r1, #60	; 0x3c
   12d44:	movw	r5, #26215	; 0x6667
   12d48:	movt	r5, #26214	; 0x6666
   12d4c:	ldr	r8, [pc, #464]	; 12f24 <strspn@plt+0x1ef8>
   12d50:	mov	fp, #1
   12d54:	smull	sl, r9, r5, r1
   12d58:	add	r8, pc, r8
   12d5c:	str	r8, [sp, #36]	; 0x24
   12d60:	sub	r8, r1, #32
   12d64:	asr	r4, r1, #31
   12d68:	lsl	r5, fp, r8
   12d6c:	str	r4, [sp, #44]	; 0x2c
   12d70:	lsl	r4, fp, r1
   12d74:	subs	r4, r4, #1
   12d78:	str	r9, [sp, #40]	; 0x28
   12d7c:	rsb	r9, r1, #32
   12d80:	ldr	sl, [sp, #40]	; 0x28
   12d84:	orr	r5, r5, fp, lsr r9
   12d88:	ldr	fp, [sp, #44]	; 0x2c
   12d8c:	sbc	r5, r5, #0
   12d90:	tst	r0, #1
   12d94:	lsr	r1, r2, r1
   12d98:	rsb	fp, fp, sl, asr #2
   12d9c:	ldr	sl, [sp, #36]	; 0x24
   12da0:	orr	r1, r1, r3, lsl r9
   12da4:	and	r5, r5, r3
   12da8:	orr	r8, r1, r3, lsr r8
   12dac:	and	r4, r4, r2
   12db0:	ldrb	r0, [sl, fp]
   12db4:	add	r3, lr, #1
   12db8:	strb	r0, [lr]
   12dbc:	bne	12e80 <strspn@plt+0x1e54>
   12dc0:	orrs	fp, r4, r5
   12dc4:	mov	r2, #0
   12dc8:	strb	r2, [r3]
   12dcc:	beq	12eb4 <strspn@plt+0x1e88>
   12dd0:	sub	lr, ip, #20
   12dd4:	sub	ip, ip, #52	; 0x34
   12dd8:	rsb	r3, lr, #32
   12ddc:	lsr	r0, r4, lr
   12de0:	orr	r0, r0, r5, lsl r3
   12de4:	lsr	r1, r5, lr
   12de8:	orr	r0, r0, r5, lsr ip
   12dec:	mov	r2, #100	; 0x64
   12df0:	adds	r0, r0, #50	; 0x32
   12df4:	mov	r3, #0
   12df8:	adc	r1, r1, #0
   12dfc:	bl	138d4 <strspn@plt+0x28a8>
   12e00:	mov	r4, r0
   12e04:	mov	r5, r1
   12e08:	cmp	r5, #0
   12e0c:	cmpeq	r4, #10
   12e10:	addeq	r8, r8, #1
   12e14:	beq	12eb4 <strspn@plt+0x1e88>
   12e18:	orrs	r2, r4, r5
   12e1c:	beq	12eb4 <strspn@plt+0x1e88>
   12e20:	bl	10fe4 <localeconv@plt>
   12e24:	cmp	r0, #0
   12e28:	beq	12f00 <strspn@plt+0x1ed4>
   12e2c:	ldr	r3, [r0]
   12e30:	cmp	r3, #0
   12e34:	beq	12f10 <strspn@plt+0x1ee4>
   12e38:	ldrsb	r2, [r3]
   12e3c:	cmp	r2, #0
   12e40:	ldreq	r3, [pc, #224]	; 12f28 <strspn@plt+0x1efc>
   12e44:	addeq	r3, pc, r3
   12e48:	add	r9, sp, #60	; 0x3c
   12e4c:	ldr	ip, [pc, #216]	; 12f2c <strspn@plt+0x1f00>
   12e50:	mov	r1, #32
   12e54:	str	r3, [sp, #8]
   12e58:	add	ip, pc, ip
   12e5c:	str	r8, [sp, #4]
   12e60:	mov	r0, r9
   12e64:	strd	r4, [sp, #16]
   12e68:	mov	r3, r1
   12e6c:	str	r7, [sp, #24]
   12e70:	mov	r2, #1
   12e74:	str	ip, [sp]
   12e78:	bl	11020 <__snprintf_chk@plt>
   12e7c:	b	12ee0 <strspn@plt+0x1eb4>
   12e80:	cmp	r0, #66	; 0x42
   12e84:	addne	r3, lr, #3
   12e88:	movne	r1, #105	; 0x69
   12e8c:	movne	r2, #66	; 0x42
   12e90:	strbne	r1, [lr, #1]
   12e94:	strbne	r2, [lr, #2]
   12e98:	b	12dc0 <strspn@plt+0x1d94>
   12e9c:	subs	r1, ip, #10
   12ea0:	strbeq	r1, [lr, #1]
   12ea4:	moveq	r3, #66	; 0x42
   12ea8:	moveq	r8, r2
   12eac:	strbeq	r3, [lr]
   12eb0:	bne	12d44 <strspn@plt+0x1d18>
   12eb4:	ldr	r3, [pc, #116]	; 12f30 <strspn@plt+0x1f04>
   12eb8:	add	r9, sp, #60	; 0x3c
   12ebc:	mov	r1, #32
   12ec0:	str	r8, [sp, #4]
   12ec4:	add	r3, pc, r3
   12ec8:	str	r7, [sp, #8]
   12ecc:	str	r3, [sp]
   12ed0:	mov	r0, r9
   12ed4:	mov	r3, r1
   12ed8:	mov	r2, #1
   12edc:	bl	11020 <__snprintf_chk@plt>
   12ee0:	mov	r0, r9
   12ee4:	bl	10f60 <__strdup@plt>
   12ee8:	ldr	r2, [sp, #92]	; 0x5c
   12eec:	ldr	r3, [r6]
   12ef0:	cmp	r2, r3
   12ef4:	bne	12f0c <strspn@plt+0x1ee0>
   12ef8:	add	sp, sp, #100	; 0x64
   12efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f00:	ldr	r3, [pc, #44]	; 12f34 <strspn@plt+0x1f08>
   12f04:	add	r3, pc, r3
   12f08:	b	12e48 <strspn@plt+0x1e1c>
   12f0c:	bl	10e4c <__stack_chk_fail@plt>
   12f10:	ldr	r3, [pc, #32]	; 12f38 <strspn@plt+0x1f0c>
   12f14:	add	r3, pc, r3
   12f18:	b	12e48 <strspn@plt+0x1e1c>
   12f1c:	andeq	r2, r1, ip, lsl r3
   12f20:	andeq	r0, r0, r0, ror #1
   12f24:	andeq	r1, r0, r0, ror fp
   12f28:	andeq	r1, r0, r0, lsl #21
   12f2c:	andeq	r1, r0, r8, ror sl
   12f30:	andeq	r1, r0, r8, lsl sl
   12f34:	andeq	r1, r0, r0, asr #19
   12f38:			; <UNDEFINED> instruction: 0x000019b0
   12f3c:	cmp	r0, #0
   12f40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f44:	mov	r8, r1
   12f48:	mov	sl, r2
   12f4c:	mov	r9, r3
   12f50:	beq	1300c <strspn@plt+0x1fe0>
   12f54:	ldrb	r5, [r0]
   12f58:	cmp	r5, #0
   12f5c:	beq	1300c <strspn@plt+0x1fe0>
   12f60:	cmp	r2, #0
   12f64:	cmpne	r1, #0
   12f68:	movne	ip, #0
   12f6c:	moveq	ip, #1
   12f70:	beq	1300c <strspn@plt+0x1fe0>
   12f74:	cmp	r3, #0
   12f78:	movne	r4, r0
   12f7c:	movne	r6, ip
   12f80:	bne	12f94 <strspn@plt+0x1f68>
   12f84:	b	1300c <strspn@plt+0x1fe0>
   12f88:	ldrb	r5, [r4, #1]!
   12f8c:	cmp	r5, #0
   12f90:	beq	13004 <strspn@plt+0x1fd8>
   12f94:	cmp	sl, r6
   12f98:	bls	13014 <strspn@plt+0x1fe8>
   12f9c:	cmp	ip, #0
   12fa0:	ldrsb	r7, [r4, #1]
   12fa4:	moveq	ip, r4
   12fa8:	cmp	r5, #44	; 0x2c
   12fac:	mov	r0, ip
   12fb0:	moveq	r5, r4
   12fb4:	movne	r5, #0
   12fb8:	cmp	r7, #0
   12fbc:	addeq	r5, r4, #1
   12fc0:	cmp	r5, #0
   12fc4:	rsb	r1, ip, r5
   12fc8:	beq	12ffc <strspn@plt+0x1fd0>
   12fcc:	cmp	ip, r5
   12fd0:	bcs	1300c <strspn@plt+0x1fe0>
   12fd4:	blx	r9
   12fd8:	mov	ip, #0
   12fdc:	add	r3, r6, #1
   12fe0:	cmn	r0, #1
   12fe4:	beq	1300c <strspn@plt+0x1fe0>
   12fe8:	str	r0, [r8, r6, lsl #2]
   12fec:	mov	r6, r3
   12ff0:	ldrsb	r2, [r5]
   12ff4:	cmp	r2, ip
   12ff8:	beq	1301c <strspn@plt+0x1ff0>
   12ffc:	cmn	r4, #1
   13000:	bne	12f88 <strspn@plt+0x1f5c>
   13004:	mov	r0, r6
   13008:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1300c:	mvn	r0, #0
   13010:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13014:	mvn	r0, #1
   13018:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1301c:	mov	r6, r3
   13020:	b	13004 <strspn@plt+0x1fd8>
   13024:	cmp	r0, #0
   13028:	push	{r4, lr}
   1302c:	mov	r4, r3
   13030:	beq	130a8 <strspn@plt+0x207c>
   13034:	ldrb	ip, [r0]
   13038:	cmp	ip, #0
   1303c:	beq	130a8 <strspn@plt+0x207c>
   13040:	cmp	r3, #0
   13044:	beq	130a8 <strspn@plt+0x207c>
   13048:	ldr	r3, [r3]
   1304c:	cmp	r3, #0
   13050:	blt	130a8 <strspn@plt+0x207c>
   13054:	cmp	r3, r2
   13058:	bhi	130a8 <strspn@plt+0x207c>
   1305c:	cmp	ip, #43	; 0x2b
   13060:	lsleq	ip, r3, #2
   13064:	addeq	r0, r0, #1
   13068:	movne	ip, #0
   1306c:	strne	ip, [r4]
   13070:	movne	r3, ip
   13074:	add	r1, r1, ip
   13078:	rsb	r2, r3, r2
   1307c:	ldr	r3, [sp, #8]
   13080:	bl	12f3c <strspn@plt+0x1f10>
   13084:	subs	r3, r0, #0
   13088:	ble	130a0 <strspn@plt+0x2074>
   1308c:	ldr	r2, [r4]
   13090:	mov	r0, r3
   13094:	add	r3, r2, r3
   13098:	str	r3, [r4]
   1309c:	pop	{r4, pc}
   130a0:	mov	r0, r3
   130a4:	pop	{r4, pc}
   130a8:	mvn	r0, #0
   130ac:	pop	{r4, pc}
   130b0:	cmp	r2, #0
   130b4:	cmpne	r0, #0
   130b8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   130bc:	mov	r4, r0
   130c0:	mov	r7, r2
   130c4:	movne	r3, #0
   130c8:	moveq	r3, #1
   130cc:	mov	r9, r1
   130d0:	beq	1316c <strspn@plt+0x2140>
   130d4:	cmp	r1, #0
   130d8:	beq	1316c <strspn@plt+0x2140>
   130dc:	mov	r6, r0
   130e0:	mov	r8, #1
   130e4:	ldrb	r5, [r6], #1
   130e8:	cmp	r5, #0
   130ec:	beq	1315c <strspn@plt+0x2130>
   130f0:	cmp	r5, #44	; 0x2c
   130f4:	ldrsb	r0, [r4, #1]
   130f8:	moveq	r5, r4
   130fc:	movne	r5, #0
   13100:	cmp	r3, #0
   13104:	moveq	r3, r4
   13108:	cmp	r0, #0
   1310c:	mov	r0, r3
   13110:	moveq	r5, r6
   13114:	cmp	r5, #0
   13118:	rsb	r1, r3, r5
   1311c:	beq	13154 <strspn@plt+0x2128>
   13120:	cmp	r3, r5
   13124:	bcs	13164 <strspn@plt+0x2138>
   13128:	blx	r7
   1312c:	mov	r3, #0
   13130:	cmp	r0, #0
   13134:	and	r2, r0, #7
   13138:	poplt	{r3, r4, r5, r6, r7, r8, r9, pc}
   1313c:	ldrb	r1, [r9, r0, asr #3]
   13140:	orr	r2, r1, r8, lsl r2
   13144:	strb	r2, [r9, r0, asr #3]
   13148:	ldrsb	r2, [r5]
   1314c:	cmp	r2, r3
   13150:	beq	1315c <strspn@plt+0x2130>
   13154:	adds	r4, r4, #1
   13158:	bne	130e4 <strspn@plt+0x20b8>
   1315c:	mov	r0, #0
   13160:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13164:	mvn	r0, #0
   13168:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1316c:	mvn	r0, #21
   13170:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13174:	cmp	r2, #0
   13178:	cmpne	r0, #0
   1317c:	push	{r4, r5, r6, r7, r8, lr}
   13180:	movne	r3, #0
   13184:	moveq	r3, #1
   13188:	mov	r4, r0
   1318c:	mov	r8, r2
   13190:	mov	r7, r1
   13194:	beq	13228 <strspn@plt+0x21fc>
   13198:	cmp	r1, #0
   1319c:	beq	13228 <strspn@plt+0x21fc>
   131a0:	mov	r6, r0
   131a4:	ldrb	r5, [r6], #1
   131a8:	cmp	r5, #0
   131ac:	beq	13218 <strspn@plt+0x21ec>
   131b0:	cmp	r5, #44	; 0x2c
   131b4:	ldrsb	r0, [r4, #1]
   131b8:	moveq	r5, r4
   131bc:	movne	r5, #0
   131c0:	cmp	r3, #0
   131c4:	moveq	r3, r4
   131c8:	cmp	r0, #0
   131cc:	mov	r0, r3
   131d0:	moveq	r5, r6
   131d4:	cmp	r5, #0
   131d8:	rsb	r1, r3, r5
   131dc:	beq	13210 <strspn@plt+0x21e4>
   131e0:	cmp	r3, r5
   131e4:	bcs	13220 <strspn@plt+0x21f4>
   131e8:	blx	r8
   131ec:	mov	r3, #0
   131f0:	cmp	r0, #0
   131f4:	poplt	{r4, r5, r6, r7, r8, pc}
   131f8:	ldr	r2, [r7]
   131fc:	orr	r0, r2, r0
   13200:	str	r0, [r7]
   13204:	ldrsb	r2, [r5]
   13208:	cmp	r2, r3
   1320c:	beq	13218 <strspn@plt+0x21ec>
   13210:	adds	r4, r4, #1
   13214:	bne	131a4 <strspn@plt+0x2178>
   13218:	mov	r0, #0
   1321c:	pop	{r4, r5, r6, r7, r8, pc}
   13220:	mvn	r0, #0
   13224:	pop	{r4, r5, r6, r7, r8, pc}
   13228:	mvn	r0, #21
   1322c:	pop	{r4, r5, r6, r7, r8, pc}
   13230:	ldr	ip, [pc, #380]	; 133b4 <strspn@plt+0x2388>
   13234:	push	{r4, r5, r6, r7, r8, r9, lr}
   13238:	subs	r4, r0, #0
   1323c:	ldr	r0, [pc, #372]	; 133b8 <strspn@plt+0x238c>
   13240:	add	ip, pc, ip
   13244:	mov	r6, r2
   13248:	sub	sp, sp, #12
   1324c:	mov	r2, ip
   13250:	mov	r8, #0
   13254:	ldr	r7, [ip, r0]
   13258:	mov	r9, r1
   1325c:	str	r8, [sp]
   13260:	ldr	r2, [r7]
   13264:	str	r2, [sp, #4]
   13268:	beq	132d8 <strspn@plt+0x22ac>
   1326c:	str	r3, [r1]
   13270:	str	r3, [r6]
   13274:	bl	10f3c <__errno_location@plt>
   13278:	str	r8, [r0]
   1327c:	mov	r5, r0
   13280:	ldrsb	r3, [r4]
   13284:	cmp	r3, #58	; 0x3a
   13288:	beq	132f4 <strspn@plt+0x22c8>
   1328c:	mov	r0, r4
   13290:	mov	r2, #10
   13294:	mov	r1, sp
   13298:	bl	10de0 <strtol@plt>
   1329c:	str	r0, [r9]
   132a0:	str	r0, [r6]
   132a4:	ldr	r0, [r5]
   132a8:	cmp	r0, #0
   132ac:	bne	133a8 <strspn@plt+0x237c>
   132b0:	ldr	r3, [sp]
   132b4:	cmp	r3, #0
   132b8:	beq	133a8 <strspn@plt+0x237c>
   132bc:	cmp	r4, r3
   132c0:	beq	133a8 <strspn@plt+0x237c>
   132c4:	ldrsb	r2, [r3]
   132c8:	cmp	r2, #58	; 0x3a
   132cc:	beq	13340 <strspn@plt+0x2314>
   132d0:	cmp	r2, #45	; 0x2d
   132d4:	beq	13350 <strspn@plt+0x2324>
   132d8:	mov	r0, #0
   132dc:	ldr	r2, [sp, #4]
   132e0:	ldr	r3, [r7]
   132e4:	cmp	r2, r3
   132e8:	bne	133b0 <strspn@plt+0x2384>
   132ec:	add	sp, sp, #12
   132f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   132f4:	add	r4, r4, #1
   132f8:	mov	r1, sp
   132fc:	mov	r2, #10
   13300:	mov	r0, r4
   13304:	bl	10de0 <strtol@plt>
   13308:	str	r0, [r6]
   1330c:	ldr	r3, [r5]
   13310:	cmp	r3, #0
   13314:	bne	133a8 <strspn@plt+0x237c>
   13318:	ldr	r3, [sp]
   1331c:	cmp	r3, #0
   13320:	beq	133a8 <strspn@plt+0x237c>
   13324:	ldrsb	r2, [r3]
   13328:	cmp	r2, #0
   1332c:	bne	133a8 <strspn@plt+0x237c>
   13330:	cmp	r4, r3
   13334:	movne	r0, #0
   13338:	mvneq	r0, #0
   1333c:	b	132dc <strspn@plt+0x22b0>
   13340:	ldrsb	r2, [r3, #1]
   13344:	cmp	r2, #0
   13348:	streq	r0, [r6]
   1334c:	beq	132dc <strspn@plt+0x22b0>
   13350:	add	r4, r3, #1
   13354:	mov	ip, #0
   13358:	mov	r1, sp
   1335c:	mov	r2, #10
   13360:	mov	r0, r4
   13364:	str	ip, [r5]
   13368:	str	ip, [sp]
   1336c:	bl	10de0 <strtol@plt>
   13370:	str	r0, [r6]
   13374:	ldr	r3, [r5]
   13378:	cmp	r3, #0
   1337c:	bne	133a8 <strspn@plt+0x237c>
   13380:	ldr	r2, [sp]
   13384:	cmp	r2, #0
   13388:	beq	133a8 <strspn@plt+0x237c>
   1338c:	ldrsb	r3, [r2]
   13390:	cmp	r3, #0
   13394:	bne	133a8 <strspn@plt+0x237c>
   13398:	cmp	r4, r2
   1339c:	movne	r0, #0
   133a0:	mvneq	r0, #0
   133a4:	b	132dc <strspn@plt+0x22b0>
   133a8:	mvn	r0, #0
   133ac:	b	132dc <strspn@plt+0x22b0>
   133b0:	bl	10e4c <__stack_chk_fail@plt>
   133b4:			; <UNDEFINED> instruction: 0x00011db8
   133b8:	andeq	r0, r0, r0, ror #1
   133bc:	rsbs	r2, r0, #1
   133c0:	push	{r4, r5, r6, lr}
   133c4:	movcc	r2, #0
   133c8:	rsbs	r3, r1, #1
   133cc:	mov	r5, r0
   133d0:	mov	r4, r1
   133d4:	movcc	r3, #0
   133d8:	ands	ip, r2, r3
   133dc:	bne	13448 <strspn@plt+0x241c>
   133e0:	orrs	r3, r2, r3
   133e4:	bne	13450 <strspn@plt+0x2424>
   133e8:	bl	10dd4 <strcmp@plt>
   133ec:	cmp	r0, #0
   133f0:	beq	13448 <strspn@plt+0x241c>
   133f4:	mov	r0, r5
   133f8:	bl	10f18 <strlen@plt>
   133fc:	mov	r6, r0
   13400:	mov	r0, r4
   13404:	bl	10f18 <strlen@plt>
   13408:	cmp	r6, #0
   1340c:	beq	13420 <strspn@plt+0x23f4>
   13410:	sub	r3, r6, #1
   13414:	ldrsb	r2, [r5, r3]
   13418:	cmp	r2, #47	; 0x2f
   1341c:	moveq	r6, r3
   13420:	cmp	r0, #0
   13424:	beq	13438 <strspn@plt+0x240c>
   13428:	sub	r3, r0, #1
   1342c:	ldrsb	r2, [r4, r3]
   13430:	cmp	r2, #47	; 0x2f
   13434:	moveq	r0, r3
   13438:	cmp	r6, r0
   1343c:	beq	13458 <strspn@plt+0x242c>
   13440:	mov	r0, #0
   13444:	pop	{r4, r5, r6, pc}
   13448:	mov	r0, #1
   1344c:	pop	{r4, r5, r6, pc}
   13450:	mov	r0, ip
   13454:	pop	{r4, r5, r6, pc}
   13458:	mov	r0, r5
   1345c:	mov	r1, r4
   13460:	mov	r2, r6
   13464:	bl	11008 <strncmp@plt>
   13468:	rsbs	r0, r0, #1
   1346c:	movcc	r0, #0
   13470:	pop	{r4, r5, r6, pc}
   13474:	ldr	r3, [pc, #248]	; 13574 <strspn@plt+0x2548>
   13478:	cmp	r0, #0
   1347c:	cmpne	r1, #0
   13480:	ldr	r2, [pc, #240]	; 13578 <strspn@plt+0x254c>
   13484:	add	r3, pc, r3
   13488:	push	{r4, r5, r6, r7, r8, r9, lr}
   1348c:	sub	sp, sp, #20
   13490:	ldr	r9, [r3, r2]
   13494:	mov	r6, r1
   13498:	addne	r8, sp, #4
   1349c:	addne	r7, sp, #8
   134a0:	ldr	r3, [r9]
   134a4:	str	r3, [sp, #12]
   134a8:	bne	134f0 <strspn@plt+0x24c4>
   134ac:	b	13568 <strspn@plt+0x253c>
   134b0:	cmp	r4, r3
   134b4:	bne	13568 <strspn@plt+0x253c>
   134b8:	mov	r0, r5
   134bc:	mov	r1, r6
   134c0:	mov	r2, r4
   134c4:	bl	11008 <strncmp@plt>
   134c8:	cmp	r0, #0
   134cc:	bne	13568 <strspn@plt+0x253c>
   134d0:	adds	r6, r6, r4
   134d4:	moveq	r3, #0
   134d8:	movne	r3, #1
   134dc:	adds	r0, r5, r4
   134e0:	moveq	r3, #0
   134e4:	andne	r3, r3, #1
   134e8:	cmp	r3, #0
   134ec:	beq	13568 <strspn@plt+0x253c>
   134f0:	mov	r1, r8
   134f4:	bl	11fb0 <strspn@plt+0xf84>
   134f8:	mov	r1, r7
   134fc:	mov	r5, r0
   13500:	mov	r0, r6
   13504:	bl	11fb0 <strspn@plt+0xf84>
   13508:	ldr	r4, [sp, #4]
   1350c:	ldr	r3, [sp, #8]
   13510:	mov	r6, r0
   13514:	adds	r0, r3, r4
   13518:	beq	1354c <strspn@plt+0x2520>
   1351c:	cmp	r0, #1
   13520:	bne	134b0 <strspn@plt+0x2484>
   13524:	cmp	r5, #0
   13528:	beq	13538 <strspn@plt+0x250c>
   1352c:	ldrsb	r2, [r5]
   13530:	cmp	r2, #47	; 0x2f
   13534:	beq	13550 <strspn@plt+0x2524>
   13538:	cmp	r6, #0
   1353c:	beq	134b0 <strspn@plt+0x2484>
   13540:	ldrsb	r2, [r6]
   13544:	cmp	r2, #47	; 0x2f
   13548:	bne	134b0 <strspn@plt+0x2484>
   1354c:	mov	r0, #1
   13550:	ldr	r2, [sp, #12]
   13554:	ldr	r3, [r9]
   13558:	cmp	r2, r3
   1355c:	bne	13570 <strspn@plt+0x2544>
   13560:	add	sp, sp, #20
   13564:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13568:	mov	r0, #0
   1356c:	b	13550 <strspn@plt+0x2524>
   13570:	bl	10e4c <__stack_chk_fail@plt>
   13574:	andeq	r1, r1, r4, ror fp
   13578:	andeq	r0, r0, r0, ror #1
   1357c:	rsbs	r3, r0, #1
   13580:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13584:	movcc	r3, #0
   13588:	rsbs	r4, r1, #1
   1358c:	mov	r7, r1
   13590:	mov	r6, r2
   13594:	mov	sl, r0
   13598:	movcc	r4, #0
   1359c:	tst	r3, r4
   135a0:	bne	13604 <strspn@plt+0x25d8>
   135a4:	cmp	r3, #0
   135a8:	bne	1361c <strspn@plt+0x25f0>
   135ac:	cmp	r4, #0
   135b0:	bne	1362c <strspn@plt+0x2600>
   135b4:	bl	10f18 <strlen@plt>
   135b8:	mvn	r3, r0
   135bc:	cmp	r6, r3
   135c0:	mov	r5, r0
   135c4:	bhi	13614 <strspn@plt+0x25e8>
   135c8:	add	r9, r0, r6
   135cc:	add	r0, r9, #1
   135d0:	bl	10eac <malloc@plt>
   135d4:	subs	r8, r0, #0
   135d8:	beq	13634 <strspn@plt+0x2608>
   135dc:	mov	r1, sl
   135e0:	mov	r2, r5
   135e4:	bl	10e28 <memcpy@plt>
   135e8:	add	r0, r8, r5
   135ec:	mov	r1, r7
   135f0:	mov	r2, r6
   135f4:	bl	10e28 <memcpy@plt>
   135f8:	strb	r4, [r8, r9]
   135fc:	mov	r0, r8
   13600:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13604:	mov	r0, #1
   13608:	mov	r1, r0
   1360c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13610:	b	10dbc <calloc@plt>
   13614:	mov	r0, r4
   13618:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1361c:	mov	r0, r1
   13620:	mov	r1, r2
   13624:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13628:	b	10e7c <__strndup@plt>
   1362c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13630:	b	10f60 <__strdup@plt>
   13634:	mov	r0, r8
   13638:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1363c:	push	{r3, r4, r5, lr}
   13640:	subs	r4, r1, #0
   13644:	mov	r5, r0
   13648:	beq	13668 <strspn@plt+0x263c>
   1364c:	mov	r0, r4
   13650:	bl	10f18 <strlen@plt>
   13654:	mov	r1, r4
   13658:	mov	r2, r0
   1365c:	mov	r0, r5
   13660:	pop	{r3, r4, r5, lr}
   13664:	b	1357c <strspn@plt+0x2550>
   13668:	mov	r2, r4
   1366c:	mov	r0, r5
   13670:	mov	r1, r4
   13674:	pop	{r3, r4, r5, lr}
   13678:	b	1357c <strspn@plt+0x2550>
   1367c:	push	{r1, r2, r3}
   13680:	mov	r1, #1
   13684:	push	{r4, r5, lr}
   13688:	sub	sp, sp, #16
   1368c:	ldr	lr, [pc, #124]	; 13710 <strspn@plt+0x26e4>
   13690:	add	ip, sp, #32
   13694:	ldr	r4, [pc, #120]	; 13714 <strspn@plt+0x26e8>
   13698:	mov	r5, r0
   1369c:	add	lr, pc, lr
   136a0:	mov	r3, ip
   136a4:	ldr	r2, [sp, #28]
   136a8:	add	r0, sp, #8
   136ac:	ldr	r4, [lr, r4]
   136b0:	str	ip, [sp, #4]
   136b4:	ldr	ip, [r4]
   136b8:	str	ip, [sp, #12]
   136bc:	bl	10f54 <__vasprintf_chk@plt>
   136c0:	subs	r2, r0, #0
   136c4:	blt	13704 <strspn@plt+0x26d8>
   136c8:	mov	r0, r5
   136cc:	ldr	r1, [sp, #8]
   136d0:	bl	1357c <strspn@plt+0x2550>
   136d4:	mov	r5, r0
   136d8:	ldr	r0, [sp, #8]
   136dc:	bl	10e04 <free@plt>
   136e0:	mov	r0, r5
   136e4:	ldr	r2, [sp, #12]
   136e8:	ldr	r3, [r4]
   136ec:	cmp	r2, r3
   136f0:	bne	1370c <strspn@plt+0x26e0>
   136f4:	add	sp, sp, #16
   136f8:	pop	{r4, r5, lr}
   136fc:	add	sp, sp, #12
   13700:	bx	lr
   13704:	mov	r0, #0
   13708:	b	136e4 <strspn@plt+0x26b8>
   1370c:	bl	10e4c <__stack_chk_fail@plt>
   13710:	andeq	r1, r1, ip, asr r9
   13714:	andeq	r0, r0, r0, ror #1
   13718:	ldr	ip, [pc, #372]	; 13894 <strspn@plt+0x2868>
   1371c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13720:	mov	r6, r0
   13724:	ldr	r0, [pc, #364]	; 13898 <strspn@plt+0x286c>
   13728:	add	ip, pc, ip
   1372c:	ldr	r4, [r6]
   13730:	mov	r9, r3
   13734:	sub	sp, sp, #12
   13738:	mov	r7, r1
   1373c:	ldr	r5, [ip, r0]
   13740:	mov	r8, r2
   13744:	ldrsb	ip, [r4]
   13748:	ldr	r3, [r5]
   1374c:	cmp	ip, #0
   13750:	moveq	r0, ip
   13754:	str	r3, [sp, #4]
   13758:	beq	13808 <strspn@plt+0x27dc>
   1375c:	mov	r0, r4
   13760:	mov	r1, r2
   13764:	bl	1102c <strspn@plt>
   13768:	ldrb	sl, [r4, r0]
   1376c:	add	r4, r4, r0
   13770:	cmp	sl, #0
   13774:	beq	13884 <strspn@plt+0x2858>
   13778:	cmp	r9, #0
   1377c:	beq	13820 <strspn@plt+0x27f4>
   13780:	sxtb	r9, sl
   13784:	ldr	r0, [pc, #272]	; 1389c <strspn@plt+0x2870>
   13788:	mov	r1, r9
   1378c:	add	r0, pc, r0
   13790:	bl	10f24 <strchr@plt>
   13794:	cmp	r0, #0
   13798:	beq	13844 <strspn@plt+0x2818>
   1379c:	add	fp, r4, #1
   137a0:	mov	r1, sp
   137a4:	mov	r3, #0
   137a8:	strb	sl, [sp]
   137ac:	mov	r0, fp
   137b0:	strb	r3, [sp, #1]
   137b4:	bl	12050 <strspn@plt+0x1024>
   137b8:	add	r3, r4, r0
   137bc:	str	r0, [r7]
   137c0:	ldrb	r3, [r3, #1]
   137c4:	cmp	r3, #0
   137c8:	beq	13884 <strspn@plt+0x2858>
   137cc:	sxtb	r3, r3
   137d0:	cmp	r9, r3
   137d4:	bne	13884 <strspn@plt+0x2858>
   137d8:	add	r0, r0, #2
   137dc:	add	r7, r4, r0
   137e0:	ldrb	r1, [r4, r0]
   137e4:	cmp	r1, #0
   137e8:	beq	13800 <strspn@plt+0x27d4>
   137ec:	mov	r0, r8
   137f0:	sxtb	r1, r1
   137f4:	bl	10f24 <strchr@plt>
   137f8:	cmp	r0, #0
   137fc:	beq	13884 <strspn@plt+0x2858>
   13800:	mov	r0, fp
   13804:	str	r7, [r6]
   13808:	ldr	r2, [sp, #4]
   1380c:	ldr	r3, [r5]
   13810:	cmp	r2, r3
   13814:	bne	13890 <strspn@plt+0x2864>
   13818:	add	sp, sp, #12
   1381c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13820:	mov	r0, r4
   13824:	mov	r1, r8
   13828:	bl	10dec <strcspn@plt>
   1382c:	mov	r3, r0
   13830:	mov	r0, r4
   13834:	add	r4, r4, r3
   13838:	str	r3, [r7]
   1383c:	str	r4, [r6]
   13840:	b	13808 <strspn@plt+0x27dc>
   13844:	mov	r1, r8
   13848:	mov	r0, r4
   1384c:	bl	12050 <strspn@plt+0x1024>
   13850:	str	r0, [r7]
   13854:	add	r7, r4, r0
   13858:	ldrb	r1, [r4, r0]
   1385c:	cmp	r1, #0
   13860:	beq	13878 <strspn@plt+0x284c>
   13864:	mov	r0, r8
   13868:	sxtb	r1, r1
   1386c:	bl	10f24 <strchr@plt>
   13870:	cmp	r0, #0
   13874:	beq	1383c <strspn@plt+0x2810>
   13878:	str	r7, [r6]
   1387c:	mov	r0, r4
   13880:	b	13808 <strspn@plt+0x27dc>
   13884:	str	r4, [r6]
   13888:	mov	r0, #0
   1388c:	b	13808 <strspn@plt+0x27dc>
   13890:	bl	10e4c <__stack_chk_fail@plt>
   13894:	ldrdeq	r1, [r1], -r0
   13898:	andeq	r0, r0, r0, ror #1
   1389c:	andeq	r1, r0, r8, asr r1
   138a0:	push	{r4, lr}
   138a4:	mov	r4, r0
   138a8:	b	138b4 <strspn@plt+0x2888>
   138ac:	cmp	r0, #10
   138b0:	beq	138cc <strspn@plt+0x28a0>
   138b4:	mov	r0, r4
   138b8:	bl	10f78 <fgetc@plt>
   138bc:	cmn	r0, #1
   138c0:	bne	138ac <strspn@plt+0x2880>
   138c4:	mov	r0, #1
   138c8:	pop	{r4, pc}
   138cc:	mov	r0, #0
   138d0:	pop	{r4, pc}
   138d4:	cmp	r3, #0
   138d8:	cmpeq	r2, #0
   138dc:	bne	138f4 <strspn@plt+0x28c8>
   138e0:	cmp	r1, #0
   138e4:	cmpeq	r0, #0
   138e8:	mvnne	r1, #0
   138ec:	mvnne	r0, #0
   138f0:	b	13910 <strspn@plt+0x28e4>
   138f4:	sub	sp, sp, #8
   138f8:	push	{sp, lr}
   138fc:	bl	1395c <strspn@plt+0x2930>
   13900:	ldr	lr, [sp, #4]
   13904:	add	sp, sp, #8
   13908:	pop	{r2, r3}
   1390c:	bx	lr
   13910:	push	{r1, lr}
   13914:	mov	r0, #8
   13918:	bl	10dc8 <raise@plt>
   1391c:	pop	{r1, pc}
   13920:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13924:	mov	r8, r2
   13928:	mov	r6, r0
   1392c:	mov	r7, r1
   13930:	mov	sl, r3
   13934:	ldr	r9, [sp, #32]
   13938:	bl	13998 <strspn@plt+0x296c>
   1393c:	umull	r4, r5, r8, r0
   13940:	mul	r8, r8, r1
   13944:	mla	r2, r0, sl, r8
   13948:	add	r5, r2, r5
   1394c:	subs	r4, r6, r4
   13950:	sbc	r5, r7, r5
   13954:	strd	r4, [r9]
   13958:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1395c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   13960:	mov	r8, r2
   13964:	mov	r6, r0
   13968:	mov	r7, r1
   1396c:	mov	r5, r3
   13970:	ldr	r9, [sp, #32]
   13974:	bl	13e24 <strspn@plt+0x2df8>
   13978:	mul	r3, r0, r5
   1397c:	umull	r4, r5, r0, r8
   13980:	mla	r8, r8, r1, r3
   13984:	add	r5, r8, r5
   13988:	subs	r4, r6, r4
   1398c:	sbc	r5, r7, r5
   13990:	strd	r4, [r9]
   13994:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1399c:	rsbs	r4, r0, #0
   139a0:	rsc	r5, r1, #0
   139a4:	cmp	r1, #0
   139a8:	mvn	r6, #0
   139ac:	sub	sp, sp, #12
   139b0:	movge	r4, r0
   139b4:	movge	r5, r1
   139b8:	movge	r6, #0
   139bc:	cmp	r3, #0
   139c0:	blt	13bf8 <strspn@plt+0x2bcc>
   139c4:	cmp	r3, #0
   139c8:	mov	sl, r4
   139cc:	mov	ip, r5
   139d0:	mov	r0, r2
   139d4:	mov	r1, r3
   139d8:	mov	r8, r2
   139dc:	mov	r7, r4
   139e0:	mov	r9, r5
   139e4:	bne	13adc <strspn@plt+0x2ab0>
   139e8:	cmp	r2, r5
   139ec:	bls	13b18 <strspn@plt+0x2aec>
   139f0:	clz	r3, r2
   139f4:	cmp	r3, #0
   139f8:	rsbne	r2, r3, #32
   139fc:	lslne	r8, r0, r3
   13a00:	lsrne	r2, r4, r2
   13a04:	lslne	r7, r4, r3
   13a08:	orrne	r9, r2, r5, lsl r3
   13a0c:	lsr	r4, r8, #16
   13a10:	uxth	sl, r8
   13a14:	mov	r1, r4
   13a18:	mov	r0, r9
   13a1c:	bl	14254 <strspn@plt+0x3228>
   13a20:	mov	r1, r4
   13a24:	mov	fp, r0
   13a28:	mov	r0, r9
   13a2c:	bl	14440 <strspn@plt+0x3414>
   13a30:	mul	r0, sl, fp
   13a34:	lsr	r2, r7, #16
   13a38:	orr	r1, r2, r1, lsl #16
   13a3c:	cmp	r0, r1
   13a40:	bls	13a64 <strspn@plt+0x2a38>
   13a44:	adds	r1, r1, r8
   13a48:	sub	r3, fp, #1
   13a4c:	bcs	13a60 <strspn@plt+0x2a34>
   13a50:	cmp	r0, r1
   13a54:	subhi	fp, fp, #2
   13a58:	addhi	r1, r1, r8
   13a5c:	bhi	13a64 <strspn@plt+0x2a38>
   13a60:	mov	fp, r3
   13a64:	rsb	r9, r0, r1
   13a68:	mov	r1, r4
   13a6c:	uxth	r7, r7
   13a70:	mov	r0, r9
   13a74:	bl	14254 <strspn@plt+0x3228>
   13a78:	mov	r1, r4
   13a7c:	mov	r5, r0
   13a80:	mov	r0, r9
   13a84:	bl	14440 <strspn@plt+0x3414>
   13a88:	mul	sl, sl, r5
   13a8c:	orr	r1, r7, r1, lsl #16
   13a90:	cmp	sl, r1
   13a94:	bls	13ab4 <strspn@plt+0x2a88>
   13a98:	adds	r8, r1, r8
   13a9c:	sub	r3, r5, #1
   13aa0:	bcs	13ab0 <strspn@plt+0x2a84>
   13aa4:	cmp	sl, r8
   13aa8:	subhi	r5, r5, #2
   13aac:	bhi	13ab4 <strspn@plt+0x2a88>
   13ab0:	mov	r5, r3
   13ab4:	orr	r3, r5, fp, lsl #16
   13ab8:	mov	r4, #0
   13abc:	cmp	r6, #0
   13ac0:	mov	r0, r3
   13ac4:	mov	r1, r4
   13ac8:	beq	13ad4 <strspn@plt+0x2aa8>
   13acc:	rsbs	r0, r0, #0
   13ad0:	rsc	r1, r1, #0
   13ad4:	add	sp, sp, #12
   13ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13adc:	cmp	r3, r5
   13ae0:	movhi	r4, #0
   13ae4:	movhi	r3, r4
   13ae8:	bhi	13abc <strspn@plt+0x2a90>
   13aec:	clz	r5, r1
   13af0:	cmp	r5, #0
   13af4:	bne	13ce4 <strspn@plt+0x2cb8>
   13af8:	cmp	r1, ip
   13afc:	cmpcs	r2, sl
   13b00:	movhi	r4, #0
   13b04:	movls	r4, #1
   13b08:	movls	r3, #1
   13b0c:	movls	r4, r5
   13b10:	movhi	r3, r4
   13b14:	b	13abc <strspn@plt+0x2a90>
   13b18:	cmp	r2, #0
   13b1c:	bne	13b30 <strspn@plt+0x2b04>
   13b20:	mov	r1, r2
   13b24:	mov	r0, #1
   13b28:	bl	14254 <strspn@plt+0x3228>
   13b2c:	mov	r8, r0
   13b30:	clz	r3, r8
   13b34:	cmp	r3, #0
   13b38:	bne	13c08 <strspn@plt+0x2bdc>
   13b3c:	rsb	r9, r8, r9
   13b40:	lsr	r5, r8, #16
   13b44:	uxth	sl, r8
   13b48:	mov	r4, #1
   13b4c:	mov	r1, r5
   13b50:	mov	r0, r9
   13b54:	bl	14254 <strspn@plt+0x3228>
   13b58:	mov	r1, r5
   13b5c:	mov	fp, r0
   13b60:	mov	r0, r9
   13b64:	bl	14440 <strspn@plt+0x3414>
   13b68:	mul	r0, sl, fp
   13b6c:	lsr	r2, r7, #16
   13b70:	orr	r1, r2, r1, lsl #16
   13b74:	cmp	r0, r1
   13b78:	bls	13b98 <strspn@plt+0x2b6c>
   13b7c:	adds	r1, r1, r8
   13b80:	sub	r3, fp, #1
   13b84:	bcs	13e04 <strspn@plt+0x2dd8>
   13b88:	cmp	r0, r1
   13b8c:	subhi	fp, fp, #2
   13b90:	addhi	r1, r1, r8
   13b94:	bls	13e04 <strspn@plt+0x2dd8>
   13b98:	rsb	r2, r0, r1
   13b9c:	mov	r1, r5
   13ba0:	str	r2, [sp]
   13ba4:	uxth	r7, r7
   13ba8:	mov	r0, r2
   13bac:	bl	14254 <strspn@plt+0x3228>
   13bb0:	ldr	r2, [sp]
   13bb4:	mov	r1, r5
   13bb8:	mov	r9, r0
   13bbc:	mov	r0, r2
   13bc0:	bl	14440 <strspn@plt+0x3414>
   13bc4:	mul	sl, sl, r9
   13bc8:	orr	r1, r7, r1, lsl #16
   13bcc:	cmp	sl, r1
   13bd0:	bls	13bf0 <strspn@plt+0x2bc4>
   13bd4:	adds	r8, r1, r8
   13bd8:	sub	r3, r9, #1
   13bdc:	bcs	13bec <strspn@plt+0x2bc0>
   13be0:	cmp	sl, r8
   13be4:	subhi	r9, r9, #2
   13be8:	bhi	13bf0 <strspn@plt+0x2bc4>
   13bec:	mov	r9, r3
   13bf0:	orr	r3, r9, fp, lsl #16
   13bf4:	b	13abc <strspn@plt+0x2a90>
   13bf8:	mvn	r6, r6
   13bfc:	rsbs	r2, r2, #0
   13c00:	rsc	r3, r3, #0
   13c04:	b	139c4 <strspn@plt+0x2998>
   13c08:	lsl	r8, r8, r3
   13c0c:	rsb	fp, r3, #32
   13c10:	lsr	r4, r9, fp
   13c14:	lsr	fp, r7, fp
   13c18:	lsr	r5, r8, #16
   13c1c:	orr	fp, fp, r9, lsl r3
   13c20:	mov	r0, r4
   13c24:	lsl	r7, r7, r3
   13c28:	mov	r1, r5
   13c2c:	uxth	sl, r8
   13c30:	bl	14254 <strspn@plt+0x3228>
   13c34:	mov	r1, r5
   13c38:	mov	r3, r0
   13c3c:	mov	r0, r4
   13c40:	str	r3, [sp]
   13c44:	bl	14440 <strspn@plt+0x3414>
   13c48:	ldr	r3, [sp]
   13c4c:	lsr	r2, fp, #16
   13c50:	mul	r0, sl, r3
   13c54:	orr	r1, r2, r1, lsl #16
   13c58:	cmp	r0, r1
   13c5c:	bls	13c7c <strspn@plt+0x2c50>
   13c60:	adds	r1, r1, r8
   13c64:	sub	r2, r3, #1
   13c68:	bcs	13e1c <strspn@plt+0x2df0>
   13c6c:	cmp	r0, r1
   13c70:	subhi	r3, r3, #2
   13c74:	addhi	r1, r1, r8
   13c78:	bls	13e1c <strspn@plt+0x2df0>
   13c7c:	rsb	r9, r0, r1
   13c80:	mov	r1, r5
   13c84:	str	r3, [sp]
   13c88:	uxth	fp, fp
   13c8c:	mov	r0, r9
   13c90:	bl	14254 <strspn@plt+0x3228>
   13c94:	mov	r1, r5
   13c98:	mov	r4, r0
   13c9c:	mov	r0, r9
   13ca0:	bl	14440 <strspn@plt+0x3414>
   13ca4:	mul	r9, sl, r4
   13ca8:	ldr	r3, [sp]
   13cac:	orr	r1, fp, r1, lsl #16
   13cb0:	cmp	r9, r1
   13cb4:	bls	13cd8 <strspn@plt+0x2cac>
   13cb8:	adds	r1, r1, r8
   13cbc:	sub	r2, r4, #1
   13cc0:	bcs	13cd4 <strspn@plt+0x2ca8>
   13cc4:	cmp	r9, r1
   13cc8:	subhi	r4, r4, #2
   13ccc:	addhi	r1, r1, r8
   13cd0:	bhi	13cd8 <strspn@plt+0x2cac>
   13cd4:	mov	r4, r2
   13cd8:	rsb	r9, r9, r1
   13cdc:	orr	r4, r4, r3, lsl #16
   13ce0:	b	13b4c <strspn@plt+0x2b20>
   13ce4:	rsb	sl, r5, #32
   13ce8:	lsl	r3, r2, r5
   13cec:	lsr	r0, r2, sl
   13cf0:	lsr	r2, ip, sl
   13cf4:	orr	r4, r0, r1, lsl r5
   13cf8:	lsr	sl, r7, sl
   13cfc:	mov	r0, r2
   13d00:	orr	sl, sl, ip, lsl r5
   13d04:	lsr	r9, r4, #16
   13d08:	str	r3, [sp, #4]
   13d0c:	str	r2, [sp]
   13d10:	uxth	fp, r4
   13d14:	mov	r1, r9
   13d18:	bl	14254 <strspn@plt+0x3228>
   13d1c:	ldr	r2, [sp]
   13d20:	mov	r1, r9
   13d24:	mov	r8, r0
   13d28:	mov	r0, r2
   13d2c:	bl	14440 <strspn@plt+0x3414>
   13d30:	mul	r0, fp, r8
   13d34:	lsr	r2, sl, #16
   13d38:	orr	r1, r2, r1, lsl #16
   13d3c:	cmp	r0, r1
   13d40:	bls	13d60 <strspn@plt+0x2d34>
   13d44:	adds	r1, r1, r4
   13d48:	sub	r2, r8, #1
   13d4c:	bcs	13e14 <strspn@plt+0x2de8>
   13d50:	cmp	r0, r1
   13d54:	subhi	r8, r8, #2
   13d58:	addhi	r1, r1, r4
   13d5c:	bls	13e14 <strspn@plt+0x2de8>
   13d60:	rsb	ip, r0, r1
   13d64:	mov	r1, r9
   13d68:	str	ip, [sp]
   13d6c:	mov	r0, ip
   13d70:	bl	14254 <strspn@plt+0x3228>
   13d74:	ldr	ip, [sp]
   13d78:	mov	r1, r9
   13d7c:	mov	r2, r0
   13d80:	mov	r0, ip
   13d84:	str	r2, [sp]
   13d88:	bl	14440 <strspn@plt+0x3414>
   13d8c:	ldr	r2, [sp]
   13d90:	uxth	ip, sl
   13d94:	mul	fp, fp, r2
   13d98:	orr	ip, ip, r1, lsl #16
   13d9c:	cmp	fp, ip
   13da0:	bls	13dc0 <strspn@plt+0x2d94>
   13da4:	adds	ip, ip, r4
   13da8:	sub	r1, r2, #1
   13dac:	bcs	13e0c <strspn@plt+0x2de0>
   13db0:	cmp	fp, ip
   13db4:	subhi	r2, r2, #2
   13db8:	addhi	ip, ip, r4
   13dbc:	bls	13e0c <strspn@plt+0x2de0>
   13dc0:	ldr	r0, [sp, #4]
   13dc4:	orr	r1, r2, r8, lsl #16
   13dc8:	rsb	fp, fp, ip
   13dcc:	umull	r2, r3, r1, r0
   13dd0:	cmp	fp, r3
   13dd4:	bcc	13df8 <strspn@plt+0x2dcc>
   13dd8:	movne	r4, #0
   13ddc:	moveq	r4, #1
   13de0:	cmp	r2, r7, lsl r5
   13de4:	movls	r4, #0
   13de8:	andhi	r4, r4, #1
   13dec:	cmp	r4, #0
   13df0:	moveq	r3, r1
   13df4:	beq	13abc <strspn@plt+0x2a90>
   13df8:	sub	r3, r1, #1
   13dfc:	mov	r4, #0
   13e00:	b	13abc <strspn@plt+0x2a90>
   13e04:	mov	fp, r3
   13e08:	b	13b98 <strspn@plt+0x2b6c>
   13e0c:	mov	r2, r1
   13e10:	b	13dc0 <strspn@plt+0x2d94>
   13e14:	mov	r8, r2
   13e18:	b	13d60 <strspn@plt+0x2d34>
   13e1c:	mov	r3, r2
   13e20:	b	13c7c <strspn@plt+0x2c50>
   13e24:	cmp	r3, #0
   13e28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e2c:	mov	r6, r0
   13e30:	sub	sp, sp, #12
   13e34:	mov	r5, r1
   13e38:	mov	r7, r0
   13e3c:	mov	r4, r2
   13e40:	mov	r8, r1
   13e44:	bne	13f24 <strspn@plt+0x2ef8>
   13e48:	cmp	r2, r1
   13e4c:	bls	13f60 <strspn@plt+0x2f34>
   13e50:	clz	r3, r2
   13e54:	cmp	r3, #0
   13e58:	rsbne	r8, r3, #32
   13e5c:	lslne	r4, r2, r3
   13e60:	lsrne	r8, r0, r8
   13e64:	lslne	r7, r0, r3
   13e68:	orrne	r8, r8, r1, lsl r3
   13e6c:	lsr	r5, r4, #16
   13e70:	uxth	sl, r4
   13e74:	mov	r1, r5
   13e78:	mov	r0, r8
   13e7c:	bl	14254 <strspn@plt+0x3228>
   13e80:	mov	r1, r5
   13e84:	mov	r9, r0
   13e88:	mov	r0, r8
   13e8c:	bl	14440 <strspn@plt+0x3414>
   13e90:	mul	r0, sl, r9
   13e94:	lsr	r3, r7, #16
   13e98:	orr	r1, r3, r1, lsl #16
   13e9c:	cmp	r0, r1
   13ea0:	bls	13ec4 <strspn@plt+0x2e98>
   13ea4:	adds	r1, r1, r4
   13ea8:	sub	r2, r9, #1
   13eac:	bcs	13ec0 <strspn@plt+0x2e94>
   13eb0:	cmp	r0, r1
   13eb4:	subhi	r9, r9, #2
   13eb8:	addhi	r1, r1, r4
   13ebc:	bhi	13ec4 <strspn@plt+0x2e98>
   13ec0:	mov	r9, r2
   13ec4:	rsb	r8, r0, r1
   13ec8:	mov	r1, r5
   13ecc:	uxth	r7, r7
   13ed0:	mov	r0, r8
   13ed4:	bl	14254 <strspn@plt+0x3228>
   13ed8:	mov	r1, r5
   13edc:	mov	r6, r0
   13ee0:	mov	r0, r8
   13ee4:	bl	14440 <strspn@plt+0x3414>
   13ee8:	mul	sl, sl, r6
   13eec:	orr	r1, r7, r1, lsl #16
   13ef0:	cmp	sl, r1
   13ef4:	bls	13f10 <strspn@plt+0x2ee4>
   13ef8:	adds	r4, r1, r4
   13efc:	sub	r3, r6, #1
   13f00:	bcs	1420c <strspn@plt+0x31e0>
   13f04:	cmp	sl, r4
   13f08:	subhi	r6, r6, #2
   13f0c:	bls	1420c <strspn@plt+0x31e0>
   13f10:	orr	r0, r6, r9, lsl #16
   13f14:	mov	r6, #0
   13f18:	mov	r1, r6
   13f1c:	add	sp, sp, #12
   13f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f24:	cmp	r3, r1
   13f28:	movhi	r6, #0
   13f2c:	movhi	r0, r6
   13f30:	bhi	13f18 <strspn@plt+0x2eec>
   13f34:	clz	r7, r3
   13f38:	cmp	r7, #0
   13f3c:	bne	1403c <strspn@plt+0x3010>
   13f40:	cmp	r3, r1
   13f44:	cmpcs	r2, r6
   13f48:	movhi	r6, #0
   13f4c:	movls	r6, #1
   13f50:	movls	r0, #1
   13f54:	movls	r6, r7
   13f58:	movhi	r0, r6
   13f5c:	b	13f18 <strspn@plt+0x2eec>
   13f60:	cmp	r2, #0
   13f64:	bne	13f78 <strspn@plt+0x2f4c>
   13f68:	mov	r1, r2
   13f6c:	mov	r0, #1
   13f70:	bl	14254 <strspn@plt+0x3228>
   13f74:	mov	r4, r0
   13f78:	clz	r3, r4
   13f7c:	cmp	r3, #0
   13f80:	bne	14138 <strspn@plt+0x310c>
   13f84:	rsb	r5, r4, r5
   13f88:	lsr	r8, r4, #16
   13f8c:	uxth	sl, r4
   13f90:	mov	r6, #1
   13f94:	mov	r1, r8
   13f98:	mov	r0, r5
   13f9c:	bl	14254 <strspn@plt+0x3228>
   13fa0:	mov	r1, r8
   13fa4:	mov	r9, r0
   13fa8:	mov	r0, r5
   13fac:	bl	14440 <strspn@plt+0x3414>
   13fb0:	mul	r0, sl, r9
   13fb4:	lsr	r3, r7, #16
   13fb8:	orr	r1, r3, r1, lsl #16
   13fbc:	cmp	r0, r1
   13fc0:	bls	13fe0 <strspn@plt+0x2fb4>
   13fc4:	adds	r1, r1, r4
   13fc8:	sub	r2, r9, #1
   13fcc:	bcs	14214 <strspn@plt+0x31e8>
   13fd0:	cmp	r0, r1
   13fd4:	subhi	r9, r9, #2
   13fd8:	addhi	r1, r1, r4
   13fdc:	bls	14214 <strspn@plt+0x31e8>
   13fe0:	rsb	fp, r0, r1
   13fe4:	mov	r1, r8
   13fe8:	uxth	r7, r7
   13fec:	mov	r0, fp
   13ff0:	bl	14254 <strspn@plt+0x3228>
   13ff4:	mov	r1, r8
   13ff8:	mov	r5, r0
   13ffc:	mov	r0, fp
   14000:	bl	14440 <strspn@plt+0x3414>
   14004:	mul	sl, sl, r5
   14008:	orr	r1, r7, r1, lsl #16
   1400c:	cmp	sl, r1
   14010:	bls	1402c <strspn@plt+0x3000>
   14014:	adds	r4, r1, r4
   14018:	sub	r3, r5, #1
   1401c:	bcs	1421c <strspn@plt+0x31f0>
   14020:	cmp	sl, r4
   14024:	subhi	r5, r5, #2
   14028:	bls	1421c <strspn@plt+0x31f0>
   1402c:	orr	r0, r5, r9, lsl #16
   14030:	mov	r1, r6
   14034:	add	sp, sp, #12
   14038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1403c:	rsb	r1, r7, #32
   14040:	lsl	r0, r2, r7
   14044:	lsr	r2, r2, r1
   14048:	lsr	fp, r5, r1
   1404c:	orr	r8, r2, r3, lsl r7
   14050:	lsr	r1, r6, r1
   14054:	str	r0, [sp, #4]
   14058:	orr	r5, r1, r5, lsl r7
   1405c:	lsr	r9, r8, #16
   14060:	mov	r0, fp
   14064:	uxth	sl, r8
   14068:	mov	r1, r9
   1406c:	bl	14254 <strspn@plt+0x3228>
   14070:	mov	r1, r9
   14074:	mov	r4, r0
   14078:	mov	r0, fp
   1407c:	bl	14440 <strspn@plt+0x3414>
   14080:	mul	r0, sl, r4
   14084:	lsr	ip, r5, #16
   14088:	orr	r1, ip, r1, lsl #16
   1408c:	cmp	r0, r1
   14090:	bls	140a4 <strspn@plt+0x3078>
   14094:	adds	r1, r1, r8
   14098:	sub	r2, r4, #1
   1409c:	bcc	14238 <strspn@plt+0x320c>
   140a0:	mov	r4, r2
   140a4:	rsb	ip, r0, r1
   140a8:	mov	r1, r9
   140ac:	str	ip, [sp]
   140b0:	uxth	r5, r5
   140b4:	mov	r0, ip
   140b8:	bl	14254 <strspn@plt+0x3228>
   140bc:	ldr	ip, [sp]
   140c0:	mov	r1, r9
   140c4:	mov	fp, r0
   140c8:	mov	r0, ip
   140cc:	bl	14440 <strspn@plt+0x3414>
   140d0:	mul	sl, sl, fp
   140d4:	orr	r1, r5, r1, lsl #16
   140d8:	cmp	sl, r1
   140dc:	bls	140f0 <strspn@plt+0x30c4>
   140e0:	adds	r1, r1, r8
   140e4:	sub	r2, fp, #1
   140e8:	bcc	14224 <strspn@plt+0x31f8>
   140ec:	mov	fp, r2
   140f0:	ldr	r3, [sp, #4]
   140f4:	orr	r0, fp, r4, lsl #16
   140f8:	rsb	sl, sl, r1
   140fc:	umull	r4, r5, r0, r3
   14100:	cmp	sl, r5
   14104:	bcc	14124 <strspn@plt+0x30f8>
   14108:	movne	r3, #0
   1410c:	moveq	r3, #1
   14110:	cmp	r4, r6, lsl r7
   14114:	movls	r6, #0
   14118:	andhi	r6, r3, #1
   1411c:	cmp	r6, #0
   14120:	beq	13f18 <strspn@plt+0x2eec>
   14124:	mov	r6, #0
   14128:	sub	r0, r0, #1
   1412c:	mov	r1, r6
   14130:	add	sp, sp, #12
   14134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14138:	lsl	r4, r4, r3
   1413c:	rsb	r9, r3, #32
   14140:	lsr	r2, r5, r9
   14144:	lsr	r9, r6, r9
   14148:	lsr	r8, r4, #16
   1414c:	orr	r9, r9, r5, lsl r3
   14150:	mov	r0, r2
   14154:	lsl	r7, r6, r3
   14158:	mov	r1, r8
   1415c:	str	r2, [sp]
   14160:	bl	14254 <strspn@plt+0x3228>
   14164:	ldr	r2, [sp]
   14168:	mov	r1, r8
   1416c:	uxth	sl, r4
   14170:	mov	fp, r0
   14174:	mov	r0, r2
   14178:	bl	14440 <strspn@plt+0x3414>
   1417c:	mul	r0, sl, fp
   14180:	lsr	r3, r9, #16
   14184:	orr	r1, r3, r1, lsl #16
   14188:	cmp	r0, r1
   1418c:	bls	141ac <strspn@plt+0x3180>
   14190:	adds	r1, r1, r4
   14194:	sub	r3, fp, #1
   14198:	bcs	1424c <strspn@plt+0x3220>
   1419c:	cmp	r0, r1
   141a0:	subhi	fp, fp, #2
   141a4:	addhi	r1, r1, r4
   141a8:	bls	1424c <strspn@plt+0x3220>
   141ac:	rsb	r5, r0, r1
   141b0:	mov	r1, r8
   141b4:	uxth	r9, r9
   141b8:	mov	r0, r5
   141bc:	bl	14254 <strspn@plt+0x3228>
   141c0:	mov	r1, r8
   141c4:	mov	r6, r0
   141c8:	mov	r0, r5
   141cc:	bl	14440 <strspn@plt+0x3414>
   141d0:	mul	r5, sl, r6
   141d4:	orr	r1, r9, r1, lsl #16
   141d8:	cmp	r5, r1
   141dc:	bls	14200 <strspn@plt+0x31d4>
   141e0:	adds	r1, r1, r4
   141e4:	sub	r3, r6, #1
   141e8:	bcs	141fc <strspn@plt+0x31d0>
   141ec:	cmp	r5, r1
   141f0:	subhi	r6, r6, #2
   141f4:	addhi	r1, r1, r4
   141f8:	bhi	14200 <strspn@plt+0x31d4>
   141fc:	mov	r6, r3
   14200:	rsb	r5, r5, r1
   14204:	orr	r6, r6, fp, lsl #16
   14208:	b	13f94 <strspn@plt+0x2f68>
   1420c:	mov	r6, r3
   14210:	b	13f10 <strspn@plt+0x2ee4>
   14214:	mov	r9, r2
   14218:	b	13fe0 <strspn@plt+0x2fb4>
   1421c:	mov	r5, r3
   14220:	b	1402c <strspn@plt+0x3000>
   14224:	cmp	sl, r1
   14228:	subhi	fp, fp, #2
   1422c:	addhi	r1, r1, r8
   14230:	bhi	140f0 <strspn@plt+0x30c4>
   14234:	b	140ec <strspn@plt+0x30c0>
   14238:	cmp	r0, r1
   1423c:	subhi	r4, r4, #2
   14240:	addhi	r1, r1, r8
   14244:	bhi	140a4 <strspn@plt+0x3078>
   14248:	b	140a0 <strspn@plt+0x3074>
   1424c:	mov	fp, r3
   14250:	b	141ac <strspn@plt+0x3180>
   14254:	subs	r2, r1, #1
   14258:	bxeq	lr
   1425c:	bcc	14434 <strspn@plt+0x3408>
   14260:	cmp	r0, r1
   14264:	bls	14418 <strspn@plt+0x33ec>
   14268:	tst	r1, r2
   1426c:	beq	14424 <strspn@plt+0x33f8>
   14270:	clz	r3, r0
   14274:	clz	r2, r1
   14278:	sub	r3, r2, r3
   1427c:	rsbs	r3, r3, #31
   14280:	addne	r3, r3, r3, lsl #1
   14284:	mov	r2, #0
   14288:	addne	pc, pc, r3, lsl #2
   1428c:	nop	{0}
   14290:	cmp	r0, r1, lsl #31
   14294:	adc	r2, r2, r2
   14298:	subcs	r0, r0, r1, lsl #31
   1429c:	cmp	r0, r1, lsl #30
   142a0:	adc	r2, r2, r2
   142a4:	subcs	r0, r0, r1, lsl #30
   142a8:	cmp	r0, r1, lsl #29
   142ac:	adc	r2, r2, r2
   142b0:	subcs	r0, r0, r1, lsl #29
   142b4:	cmp	r0, r1, lsl #28
   142b8:	adc	r2, r2, r2
   142bc:	subcs	r0, r0, r1, lsl #28
   142c0:	cmp	r0, r1, lsl #27
   142c4:	adc	r2, r2, r2
   142c8:	subcs	r0, r0, r1, lsl #27
   142cc:	cmp	r0, r1, lsl #26
   142d0:	adc	r2, r2, r2
   142d4:	subcs	r0, r0, r1, lsl #26
   142d8:	cmp	r0, r1, lsl #25
   142dc:	adc	r2, r2, r2
   142e0:	subcs	r0, r0, r1, lsl #25
   142e4:	cmp	r0, r1, lsl #24
   142e8:	adc	r2, r2, r2
   142ec:	subcs	r0, r0, r1, lsl #24
   142f0:	cmp	r0, r1, lsl #23
   142f4:	adc	r2, r2, r2
   142f8:	subcs	r0, r0, r1, lsl #23
   142fc:	cmp	r0, r1, lsl #22
   14300:	adc	r2, r2, r2
   14304:	subcs	r0, r0, r1, lsl #22
   14308:	cmp	r0, r1, lsl #21
   1430c:	adc	r2, r2, r2
   14310:	subcs	r0, r0, r1, lsl #21
   14314:	cmp	r0, r1, lsl #20
   14318:	adc	r2, r2, r2
   1431c:	subcs	r0, r0, r1, lsl #20
   14320:	cmp	r0, r1, lsl #19
   14324:	adc	r2, r2, r2
   14328:	subcs	r0, r0, r1, lsl #19
   1432c:	cmp	r0, r1, lsl #18
   14330:	adc	r2, r2, r2
   14334:	subcs	r0, r0, r1, lsl #18
   14338:	cmp	r0, r1, lsl #17
   1433c:	adc	r2, r2, r2
   14340:	subcs	r0, r0, r1, lsl #17
   14344:	cmp	r0, r1, lsl #16
   14348:	adc	r2, r2, r2
   1434c:	subcs	r0, r0, r1, lsl #16
   14350:	cmp	r0, r1, lsl #15
   14354:	adc	r2, r2, r2
   14358:	subcs	r0, r0, r1, lsl #15
   1435c:	cmp	r0, r1, lsl #14
   14360:	adc	r2, r2, r2
   14364:	subcs	r0, r0, r1, lsl #14
   14368:	cmp	r0, r1, lsl #13
   1436c:	adc	r2, r2, r2
   14370:	subcs	r0, r0, r1, lsl #13
   14374:	cmp	r0, r1, lsl #12
   14378:	adc	r2, r2, r2
   1437c:	subcs	r0, r0, r1, lsl #12
   14380:	cmp	r0, r1, lsl #11
   14384:	adc	r2, r2, r2
   14388:	subcs	r0, r0, r1, lsl #11
   1438c:	cmp	r0, r1, lsl #10
   14390:	adc	r2, r2, r2
   14394:	subcs	r0, r0, r1, lsl #10
   14398:	cmp	r0, r1, lsl #9
   1439c:	adc	r2, r2, r2
   143a0:	subcs	r0, r0, r1, lsl #9
   143a4:	cmp	r0, r1, lsl #8
   143a8:	adc	r2, r2, r2
   143ac:	subcs	r0, r0, r1, lsl #8
   143b0:	cmp	r0, r1, lsl #7
   143b4:	adc	r2, r2, r2
   143b8:	subcs	r0, r0, r1, lsl #7
   143bc:	cmp	r0, r1, lsl #6
   143c0:	adc	r2, r2, r2
   143c4:	subcs	r0, r0, r1, lsl #6
   143c8:	cmp	r0, r1, lsl #5
   143cc:	adc	r2, r2, r2
   143d0:	subcs	r0, r0, r1, lsl #5
   143d4:	cmp	r0, r1, lsl #4
   143d8:	adc	r2, r2, r2
   143dc:	subcs	r0, r0, r1, lsl #4
   143e0:	cmp	r0, r1, lsl #3
   143e4:	adc	r2, r2, r2
   143e8:	subcs	r0, r0, r1, lsl #3
   143ec:	cmp	r0, r1, lsl #2
   143f0:	adc	r2, r2, r2
   143f4:	subcs	r0, r0, r1, lsl #2
   143f8:	cmp	r0, r1, lsl #1
   143fc:	adc	r2, r2, r2
   14400:	subcs	r0, r0, r1, lsl #1
   14404:	cmp	r0, r1
   14408:	adc	r2, r2, r2
   1440c:	subcs	r0, r0, r1
   14410:	mov	r0, r2
   14414:	bx	lr
   14418:	moveq	r0, #1
   1441c:	movne	r0, #0
   14420:	bx	lr
   14424:	clz	r2, r1
   14428:	rsb	r2, r2, #31
   1442c:	lsr	r0, r0, r2
   14430:	bx	lr
   14434:	cmp	r0, #0
   14438:	mvnne	r0, #0
   1443c:	b	13910 <strspn@plt+0x28e4>
   14440:	cmp	r1, #0
   14444:	beq	14434 <strspn@plt+0x3408>
   14448:	push	{r0, r1, lr}
   1444c:	bl	14254 <strspn@plt+0x3228>
   14450:	pop	{r1, r2, lr}
   14454:	mul	r3, r2, r0
   14458:	sub	r1, r1, r3
   1445c:	bx	lr
   14460:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14464:	mov	r7, r0
   14468:	ldr	r6, [pc, #76]	; 144bc <strspn@plt+0x3490>
   1446c:	mov	r8, r1
   14470:	ldr	r5, [pc, #72]	; 144c0 <strspn@plt+0x3494>
   14474:	mov	r9, r2
   14478:	add	r6, pc, r6
   1447c:	bl	10d9c <calloc@plt-0x20>
   14480:	add	r5, pc, r5
   14484:	rsb	r6, r5, r6
   14488:	asrs	r6, r6, #2
   1448c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   14490:	sub	r5, r5, #4
   14494:	mov	r4, #0
   14498:	add	r4, r4, #1
   1449c:	ldr	r3, [r5, #4]!
   144a0:	mov	r0, r7
   144a4:	mov	r1, r8
   144a8:	mov	r2, r9
   144ac:	blx	r3
   144b0:	cmp	r4, r6
   144b4:	bne	14498 <strspn@plt+0x346c>
   144b8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   144bc:	andeq	r0, r1, r0, lsl #21
   144c0:	andeq	r0, r1, r4, ror sl
   144c4:	bx	lr
   144c8:	ldr	r3, [pc, #28]	; 144ec <strspn@plt+0x34c0>
   144cc:	mov	r1, #0
   144d0:	ldr	r2, [pc, #24]	; 144f0 <strspn@plt+0x34c4>
   144d4:	add	r3, pc, r3
   144d8:	ldr	r3, [r3, r2]
   144dc:	cmp	r3, #0
   144e0:	ldrne	r2, [r3]
   144e4:	moveq	r2, r3
   144e8:	b	10f48 <__cxa_atexit@plt>
   144ec:	andeq	r0, r1, r4, lsr #22
   144f0:	andeq	r0, r0, r8, ror #1

Disassembly of section .fini:

000144f4 <.fini>:
   144f4:	push	{r3, lr}
   144f8:	pop	{r3, pc}
