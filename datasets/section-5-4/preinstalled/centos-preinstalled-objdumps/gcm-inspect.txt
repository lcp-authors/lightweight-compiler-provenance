
centos-preinstalled/gcm-inspect:     file format elf32-littlearm


Disassembly of section .init:

00013538 <_init@@Base>:
   13538:	push	{r3, lr}
   1353c:	bl	14a34 <g_strcmp0@plt+0xa98>
   13540:	pop	{r3, pc}

Disassembly of section .plt:

00013544 <g_object_new@plt-0x14>:
   13544:	push	{lr}		; (str lr, [sp, #-4]!)
   13548:	ldr	lr, [pc, #4]	; 13554 <_init@@Base+0x1c>
   1354c:	add	lr, pc, lr
   13550:	ldr	pc, [lr, #8]!
   13554:	andeq	r9, r1, ip, lsr #14

00013558 <g_object_new@plt>:
   13558:	add	ip, pc, #0, 12
   1355c:	add	ip, ip, #102400	; 0x19000
   13560:	ldr	pc, [ip, #1836]!	; 0x72c

00013564 <g_variant_iter_free@plt>:
   13564:	add	ip, pc, #0, 12
   13568:	add	ip, ip, #102400	; 0x19000
   1356c:	ldr	pc, [ip, #1828]!	; 0x724

00013570 <g_object_ref@plt>:
   13570:	add	ip, pc, #0, 12
   13574:	add	ip, ip, #102400	; 0x19000
   13578:	ldr	pc, [ip, #1820]!	; 0x71c

0001357c <g_bus_get_sync@plt>:
   1357c:	add	ip, pc, #0, 12
   13580:	add	ip, ip, #102400	; 0x19000
   13584:	ldr	pc, [ip, #1812]!	; 0x714

00013588 <g_option_context_parse@plt>:
   13588:	add	ip, pc, #0, 12
   1358c:	add	ip, ip, #102400	; 0x19000
   13590:	ldr	pc, [ip, #1804]!	; 0x70c

00013594 <g_option_context_add_group@plt>:
   13594:	add	ip, pc, #0, 12
   13598:	add	ip, ip, #102400	; 0x19000
   1359c:	ldr	pc, [ip, #1796]!	; 0x704

000135a0 <cairo_set_line_width@plt>:
   135a0:	add	ip, pc, #0, 12
   135a4:	add	ip, ip, #102400	; 0x19000
   135a8:	ldr	pc, [ip, #1788]!	; 0x6fc

000135ac <cd_icc_get_copyright@plt>:
   135ac:	add	ip, pc, #0, 12
   135b0:	add	ip, ip, #102400	; 0x19000
   135b4:	ldr	pc, [ip, #1780]!	; 0x6f4

000135b8 <cd_transform_set_input_pixel_format@plt>:
   135b8:	add	ip, pc, #0, 12
   135bc:	add	ip, ip, #102400	; 0x19000
   135c0:	ldr	pc, [ip, #1772]!	; 0x6ec

000135c4 <cd_transform_set_abstract_icc@plt>:
   135c4:	add	ip, pc, #0, 12
   135c8:	add	ip, ip, #102400	; 0x19000
   135cc:	ldr	pc, [ip, #1764]!	; 0x6e4

000135d0 <cairo_scale@plt>:
   135d0:	add	ip, pc, #0, 12
   135d4:	add	ip, ip, #102400	; 0x19000
   135d8:	ldr	pc, [ip, #1756]!	; 0x6dc

000135dc <g_cclosure_marshal_VOID__UINT@plt>:
   135dc:	add	ip, pc, #0, 12
   135e0:	add	ip, ip, #102400	; 0x19000
   135e4:	ldr	pc, [ip, #1748]!	; 0x6d4

000135e8 <gdk_x11_window_get_xid@plt>:
   135e8:	add	ip, pc, #0, 12
   135ec:	add	ip, ip, #102400	; 0x19000
   135f0:	ldr	pc, [ip, #1740]!	; 0x6cc

000135f4 <TIFFClose@plt>:
   135f4:	add	ip, pc, #0, 12
   135f8:	add	ip, ip, #102400	; 0x19000
   135fc:	ldr	pc, [ip, #1732]!	; 0x6c4

00013600 <g_return_if_fail_warning@plt>:
   13600:	add	ip, pc, #0, 12
   13604:	add	ip, ip, #102400	; 0x19000
   13608:	ldr	pc, [ip, #1724]!	; 0x6bc

0001360c <g_object_set_data_full@plt>:
   1360c:	add	ip, pc, #0, 12
   13610:	add	ip, ip, #102400	; 0x19000
   13614:	ldr	pc, [ip, #1716]!	; 0x6b4

00013618 <cd_transform_new@plt>:
   13618:	add	ip, pc, #0, 12
   1361c:	add	ip, ip, #102400	; 0x19000
   13620:	ldr	pc, [ip, #1708]!	; 0x6ac

00013624 <cd_color_yxy_get_type@plt>:
   13624:	add	ip, pc, #0, 12
   13628:	add	ip, ip, #102400	; 0x19000
   1362c:	ldr	pc, [ip, #1700]!	; 0x6a4

00013630 <g_type_register_static_simple@plt>:
   13630:	add	ip, pc, #0, 12
   13634:	add	ip, ip, #102400	; 0x19000
   13638:	ldr	pc, [ip, #1692]!	; 0x69c

0001363c <gdk_error_trap_pop@plt>:
   1363c:	add	ip, pc, #0, 12
   13640:	add	ip, ip, #102400	; 0x19000
   13644:	ldr	pc, [ip, #1684]!	; 0x694

00013648 <gtk_print_context_get_width@plt>:
   13648:	add	ip, pc, #0, 12
   1364c:	add	ip, ip, #102400	; 0x19000
   13650:	ldr	pc, [ip, #1676]!	; 0x68c

00013654 <g_param_spec_boolean@plt>:
   13654:	add	ip, pc, #0, 12
   13658:	add	ip, ip, #102400	; 0x19000
   1365c:	ldr	pc, [ip, #1668]!	; 0x684

00013660 <g_type_class_adjust_private_offset@plt>:
   13660:	add	ip, pc, #0, 12
   13664:	add	ip, ip, #102400	; 0x19000
   13668:	ldr	pc, [ip, #1660]!	; 0x67c

0001366c <g_variant_type_checked_@plt>:
   1366c:	add	ip, pc, #0, 12
   13670:	add	ip, ip, #102400	; 0x19000
   13674:	ldr	pc, [ip, #1652]!	; 0x674

00013678 <g_variant_get_child_value@plt>:
   13678:	add	ip, pc, #0, 12
   1367c:	add	ip, ip, #102400	; 0x19000
   13680:	ldr	pc, [ip, #1644]!	; 0x66c

00013684 <gdk_pixbuf_new_from_data@plt>:
   13684:	add	ip, pc, #0, 12
   13688:	add	ip, ip, #102400	; 0x19000
   1368c:	ldr	pc, [ip, #1636]!	; 0x664

00013690 <g_variant_new_uint32@plt>:
   13690:	add	ip, pc, #0, 12
   13694:	add	ip, ip, #102400	; 0x19000
   13698:	ldr	pc, [ip, #1628]!	; 0x65c

0001369c <pango_context_set_base_gravity@plt>:
   1369c:	add	ip, pc, #0, 12
   136a0:	add	ip, ip, #102400	; 0x19000
   136a4:	ldr	pc, [ip, #1620]!	; 0x654

000136a8 <g_error_free@plt>:
   136a8:	add	ip, pc, #0, 12
   136ac:	add	ip, ip, #102400	; 0x19000
   136b0:	ldr	pc, [ip, #1612]!	; 0x64c

000136b4 <g_variant_builder_end@plt>:
   136b4:	add	ip, pc, #0, 12
   136b8:	add	ip, ip, #102400	; 0x19000
   136bc:	ldr	pc, [ip, #1604]!	; 0x644

000136c0 <g_variant_new_string@plt>:
   136c0:	add	ip, pc, #0, 12
   136c4:	add	ip, ip, #102400	; 0x19000
   136c8:	ldr	pc, [ip, #1596]!	; 0x63c

000136cc <bind_textdomain_codeset@plt>:
   136cc:	add	ip, pc, #0, 12
   136d0:	add	ip, ip, #102400	; 0x19000
   136d4:	ldr	pc, [ip, #1588]!	; 0x634

000136d8 <g_param_spec_string@plt>:
   136d8:	add	ip, pc, #0, 12
   136dc:	add	ip, ip, #102400	; 0x19000
   136e0:	ldr	pc, [ip, #1580]!	; 0x62c

000136e4 <gtk_get_option_group@plt>:
   136e4:	add	ip, pc, #0, 12
   136e8:	add	ip, ip, #102400	; 0x19000
   136ec:	ldr	pc, [ip, #1572]!	; 0x624

000136f0 <g_variant_builder_add_value@plt>:
   136f0:	add	ip, pc, #0, 12
   136f4:	add	ip, ip, #102400	; 0x19000
   136f8:	ldr	pc, [ip, #1564]!	; 0x61c

000136fc <TIFFOpen@plt>:
   136fc:	add	ip, pc, #0, 12
   13700:	add	ip, ip, #102400	; 0x19000
   13704:	ldr	pc, [ip, #1556]!	; 0x614

00013708 <__gcc_personality_v0@plt>:
   13708:	add	ip, pc, #0, 12
   1370c:	add	ip, ip, #102400	; 0x19000
   13710:	ldr	pc, [ip, #1548]!	; 0x60c

00013714 <g_log_set_handler@plt>:
   13714:	add	ip, pc, #0, 12
   13718:	add	ip, ip, #102400	; 0x19000
   1371c:	ldr	pc, [ip, #1540]!	; 0x604

00013720 <gtk_widget_get_type@plt>:
   13720:	add	ip, pc, #0, 12
   13724:	add	ip, ip, #102400	; 0x19000
   13728:	ldr	pc, [ip, #1532]!	; 0x5fc

0001372c <g_string_new@plt>:
   1372c:	add	ip, pc, #0, 12
   13730:	add	ip, ip, #102400	; 0x19000
   13734:	ldr	pc, [ip, #1524]!	; 0x5f4

00013738 <g_type_check_instance_cast@plt>:
   13738:	add	ip, pc, #0, 12
   1373c:	add	ip, ip, #102400	; 0x19000
   13740:	ldr	pc, [ip, #1516]!	; 0x5ec

00013744 <g_option_context_new@plt>:
   13744:	add	ip, pc, #0, 12
   13748:	add	ip, ip, #102400	; 0x19000
   1374c:	ldr	pc, [ip, #1508]!	; 0x5e4

00013750 <cd_transform_set_input_icc@plt>:
   13750:	add	ip, pc, #0, 12
   13754:	add	ip, ip, #102400	; 0x19000
   13758:	ldr	pc, [ip, #1500]!	; 0x5dc

0001375c <cairo_move_to@plt>:
   1375c:	add	ip, pc, #0, 12
   13760:	add	ip, ip, #102400	; 0x19000
   13764:	ldr	pc, [ip, #1492]!	; 0x5d4

00013768 <g_variant_builder_new@plt>:
   13768:	add	ip, pc, #0, 12
   1376c:	add	ip, ip, #102400	; 0x19000
   13770:	ldr	pc, [ip, #1484]!	; 0x5cc

00013774 <gtk_widget_get_window@plt>:
   13774:	add	ip, pc, #0, 12
   13778:	add	ip, ip, #102400	; 0x19000
   1377c:	ldr	pc, [ip, #1476]!	; 0x5c4

00013780 <gtk_widget_hide@plt>:
   13780:	add	ip, pc, #0, 12
   13784:	add	ip, ip, #102400	; 0x19000
   13788:	ldr	pc, [ip, #1468]!	; 0x5bc

0001378c <gdk_pixbuf_get_colorspace@plt>:
   1378c:	add	ip, pc, #0, 12
   13790:	add	ip, ip, #102400	; 0x19000
   13794:	ldr	pc, [ip, #1460]!	; 0x5b4

00013798 <g_string_append_len@plt>:
   13798:	add	ip, pc, #0, 12
   1379c:	add	ip, ip, #102400	; 0x19000
   137a0:	ldr	pc, [ip, #1452]!	; 0x5ac

000137a4 <g_option_group_new@plt>:
   137a4:	add	ip, pc, #0, 12
   137a8:	add	ip, ip, #102400	; 0x19000
   137ac:	ldr	pc, [ip, #1444]!	; 0x5a4

000137b0 <g_log@plt>:
   137b0:	add	ip, pc, #0, 12
   137b4:	add	ip, ip, #102400	; 0x19000
   137b8:	ldr	pc, [ip, #1436]!	; 0x59c

000137bc <gdk_cairo_surface_create_from_pixbuf@plt>:
   137bc:	add	ip, pc, #0, 12
   137c0:	add	ip, ip, #102400	; 0x19000
   137c4:	ldr	pc, [ip, #1428]!	; 0x594

000137c8 <g_type_name@plt>:
   137c8:	add	ip, pc, #0, 12
   137cc:	add	ip, ip, #102400	; 0x19000
   137d0:	ldr	pc, [ip, #1420]!	; 0x58c

000137d4 <g_main_loop_quit@plt>:
   137d4:	add	ip, pc, #0, 12
   137d8:	add	ip, ip, #102400	; 0x19000
   137dc:	ldr	pc, [ip, #1412]!	; 0x584

000137e0 <gtk_print_operation_get_status@plt>:
   137e0:	add	ip, pc, #0, 12
   137e4:	add	ip, ip, #102400	; 0x19000
   137e8:	ldr	pc, [ip, #1404]!	; 0x57c

000137ec <g_build_filename@plt>:
   137ec:	add	ip, pc, #0, 12
   137f0:	add	ip, ip, #102400	; 0x19000
   137f4:	ldr	pc, [ip, #1396]!	; 0x574

000137f8 <g_value_set_uint@plt>:
   137f8:	add	ip, pc, #0, 12
   137fc:	add	ip, ip, #102400	; 0x19000
   13800:	ldr	pc, [ip, #1388]!	; 0x56c

00013804 <cairo_rectangle@plt>:
   13804:	add	ip, pc, #0, 12
   13808:	add	ip, ip, #102400	; 0x19000
   1380c:	ldr	pc, [ip, #1380]!	; 0x564

00013810 <g_variant_new_strv@plt>:
   13810:	add	ip, pc, #0, 12
   13814:	add	ip, ip, #102400	; 0x19000
   13818:	ldr	pc, [ip, #1372]!	; 0x55c

0001381c <g_file_get_path@plt>:
   1381c:	add	ip, pc, #0, 12
   13820:	add	ip, ip, #102400	; 0x19000
   13824:	ldr	pc, [ip, #1364]!	; 0x554

00013828 <g_set_error_literal@plt>:
   13828:	add	ip, pc, #0, 12
   1382c:	add	ip, ip, #102400	; 0x19000
   13830:	ldr	pc, [ip, #1356]!	; 0x54c

00013834 <cd_color_yxy_copy@plt>:
   13834:	add	ip, pc, #0, 12
   13838:	add	ip, ip, #102400	; 0x19000
   1383c:	ldr	pc, [ip, #1348]!	; 0x544

00013840 <gdk_screen_get_root_window@plt>:
   13840:	add	ip, pc, #0, 12
   13844:	add	ip, ip, #102400	; 0x19000
   13848:	ldr	pc, [ip, #1340]!	; 0x53c

0001384c <gtk_print_operation_set_use_full_page@plt>:
   1384c:	add	ip, pc, #0, 12
   13850:	add	ip, ip, #102400	; 0x19000
   13854:	ldr	pc, [ip, #1332]!	; 0x534

00013858 <g_memdup@plt>:
   13858:	add	ip, pc, #0, 12
   1385c:	add	ip, ip, #102400	; 0x19000
   13860:	ldr	pc, [ip, #1324]!	; 0x52c

00013864 <g_variant_new@plt>:
   13864:	add	ip, pc, #0, 12
   13868:	add	ip, ip, #102400	; 0x19000
   1386c:	ldr	pc, [ip, #1316]!	; 0x524

00013870 <textdomain@plt>:
   13870:	add	ip, pc, #0, 12
   13874:	add	ip, ip, #102400	; 0x19000
   13878:	ldr	pc, [ip, #1308]!	; 0x51c

0001387c <gdk_pixbuf_get_rowstride@plt>:
   1387c:	add	ip, pc, #0, 12
   13880:	add	ip, ip, #102400	; 0x19000
   13884:	ldr	pc, [ip, #1300]!	; 0x514

00013888 <g_variant_iter_n_children@plt>:
   13888:	add	ip, pc, #0, 12
   1388c:	add	ip, ip, #102400	; 0x19000
   13890:	ldr	pc, [ip, #1292]!	; 0x50c

00013894 <g_option_group_set_parse_hooks@plt>:
   13894:	add	ip, pc, #0, 12
   13898:	add	ip, ip, #102400	; 0x19000
   1389c:	ldr	pc, [ip, #1284]!	; 0x504

000138a0 <cairo_save@plt>:
   138a0:	add	ip, pc, #0, 12
   138a4:	add	ip, ip, #102400	; 0x19000
   138a8:	ldr	pc, [ip, #1276]!	; 0x4fc

000138ac <g_file_query_info@plt>:
   138ac:	add	ip, pc, #0, 12
   138b0:	add	ip, ip, #102400	; 0x19000
   138b4:	ldr	pc, [ip, #1268]!	; 0x4f4

000138b8 <cairo_set_source_rgb@plt>:
   138b8:	add	ip, pc, #0, 12
   138bc:	add	ip, ip, #102400	; 0x19000
   138c0:	ldr	pc, [ip, #1260]!	; 0x4ec

000138c4 <g_signal_emit@plt>:
   138c4:	add	ip, pc, #0, 12
   138c8:	add	ip, ip, #102400	; 0x19000
   138cc:	ldr	pc, [ip, #1252]!	; 0x4e4

000138d0 <g_strdup@plt>:
   138d0:	add	ip, pc, #0, 12
   138d4:	add	ip, ip, #102400	; 0x19000
   138d8:	ldr	pc, [ip, #1244]!	; 0x4dc

000138dc <cd_color_xyz_free@plt>:
   138dc:	add	ip, pc, #0, 12
   138e0:	add	ip, ip, #102400	; 0x19000
   138e4:	ldr	pc, [ip, #1236]!	; 0x4d4

000138e8 <strftime@plt>:
   138e8:	add	ip, pc, #0, 12
   138ec:	add	ip, ip, #102400	; 0x19000
   138f0:	ldr	pc, [ip, #1228]!	; 0x4cc

000138f4 <g_strchomp@plt>:
   138f4:	add	ip, pc, #0, 12
   138f8:	add	ip, ip, #102400	; 0x19000
   138fc:	ldr	pc, [ip, #1220]!	; 0x4c4

00013900 <memset@plt>:
   13900:	add	ip, pc, #0, 12
   13904:	add	ip, ip, #102400	; 0x19000
   13908:	ldr	pc, [ip, #1212]!	; 0x4bc

0001390c <g_variant_builder_unref@plt>:
   1390c:	add	ip, pc, #0, 12
   13910:	add	ip, ip, #102400	; 0x19000
   13914:	ldr	pc, [ip, #1204]!	; 0x4b4

00013918 <gdk_error_trap_push@plt>:
   13918:	add	ip, pc, #0, 12
   1391c:	add	ip, ip, #102400	; 0x19000
   13920:	ldr	pc, [ip, #1196]!	; 0x4ac

00013924 <gtk_print_settings_new@plt>:
   13924:	add	ip, pc, #0, 12
   13928:	add	ip, ip, #102400	; 0x19000
   1392c:	ldr	pc, [ip, #1188]!	; 0x4a4

00013930 <gtk_print_operation_set_embed_page_setup@plt>:
   13930:	add	ip, pc, #0, 12
   13934:	add	ip, ip, #102400	; 0x19000
   13938:	ldr	pc, [ip, #1180]!	; 0x49c

0001393c <g_ascii_tolower@plt>:
   1393c:	add	ip, pc, #0, 12
   13940:	add	ip, ip, #102400	; 0x19000
   13944:	ldr	pc, [ip, #1172]!	; 0x494

00013948 <g_ptr_array_new_with_free_func@plt>:
   13948:	add	ip, pc, #0, 12
   1394c:	add	ip, ip, #102400	; 0x19000
   13950:	ldr	pc, [ip, #1164]!	; 0x48c

00013954 <gtk_image_set_from_pixbuf@plt>:
   13954:	add	ip, pc, #0, 12
   13958:	add	ip, ip, #102400	; 0x19000
   1395c:	ldr	pc, [ip, #1156]!	; 0x484

00013960 <gtk_show_uri@plt>:
   13960:	add	ip, pc, #0, 12
   13964:	add	ip, ip, #102400	; 0x19000
   13968:	ldr	pc, [ip, #1148]!	; 0x47c

0001396c <g_main_loop_run@plt>:
   1396c:	add	ip, pc, #0, 12
   13970:	add	ip, ip, #102400	; 0x19000
   13974:	ldr	pc, [ip, #1140]!	; 0x474

00013978 <gdk_property_get@plt>:
   13978:	add	ip, pc, #0, 12
   1397c:	add	ip, ip, #102400	; 0x19000
   13980:	ldr	pc, [ip, #1132]!	; 0x46c

00013984 <g_signal_new@plt>:
   13984:	add	ip, pc, #0, 12
   13988:	add	ip, ip, #102400	; 0x19000
   1398c:	ldr	pc, [ip, #1124]!	; 0x464

00013990 <pango_font_description_free@plt>:
   13990:	add	ip, pc, #0, 12
   13994:	add	ip, ip, #102400	; 0x19000
   13998:	ldr	pc, [ip, #1116]!	; 0x45c

0001399c <g_main_loop_new@plt>:
   1399c:	add	ip, pc, #0, 12
   139a0:	add	ip, ip, #102400	; 0x19000
   139a4:	ldr	pc, [ip, #1108]!	; 0x454

000139a8 <abort@plt>:
   139a8:	add	ip, pc, #0, 12
   139ac:	add	ip, ip, #102400	; 0x19000
   139b0:	ldr	pc, [ip, #1100]!	; 0x44c

000139b4 <gdk_pixbuf_get_height@plt>:
   139b4:	add	ip, pc, #0, 12
   139b8:	add	ip, ip, #102400	; 0x19000
   139bc:	ldr	pc, [ip, #1092]!	; 0x444

000139c0 <TIFFGetField@plt>:
   139c0:	add	ip, pc, #0, 12
   139c4:	add	ip, ip, #102400	; 0x19000
   139c8:	ldr	pc, [ip, #1084]!	; 0x43c

000139cc <g_strsplit@plt>:
   139cc:	add	ip, pc, #0, 12
   139d0:	add	ip, ip, #102400	; 0x19000
   139d4:	ldr	pc, [ip, #1076]!	; 0x434

000139d8 <gdk_pixbuf_get_bits_per_sample@plt>:
   139d8:	add	ip, pc, #0, 12
   139dc:	add	ip, ip, #102400	; 0x19000
   139e0:	ldr	pc, [ip, #1068]!	; 0x42c

000139e4 <g_value_set_boolean@plt>:
   139e4:	add	ip, pc, #0, 12
   139e8:	add	ip, ip, #102400	; 0x19000
   139ec:	ldr	pc, [ip, #1060]!	; 0x424

000139f0 <g_value_set_string@plt>:
   139f0:	add	ip, pc, #0, 12
   139f4:	add	ip, ip, #102400	; 0x19000
   139f8:	ldr	pc, [ip, #1052]!	; 0x41c

000139fc <gdk_pixbuf_get_width@plt>:
   139fc:	add	ip, pc, #0, 12
   13a00:	add	ip, ip, #102400	; 0x19000
   13a04:	ldr	pc, [ip, #1044]!	; 0x414

00013a08 <g_value_get_boolean@plt>:
   13a08:	add	ip, pc, #0, 12
   13a0c:	add	ip, ip, #102400	; 0x19000
   13a10:	ldr	pc, [ip, #1036]!	; 0x40c

00013a14 <g_type_instance_get_private@plt>:
   13a14:	add	ip, pc, #0, 12
   13a18:	add	ip, ip, #102400	; 0x19000
   13a1c:	ldr	pc, [ip, #1028]!	; 0x404

00013a20 <g_str_has_prefix@plt>:
   13a20:	add	ip, pc, #0, 12
   13a24:	add	ip, ip, #102400	; 0x19000
   13a28:	ldr	pc, [ip, #1020]!	; 0x3fc

00013a2c <localtime@plt>:
   13a2c:	add	ip, pc, #0, 12
   13a30:	add	ip, ip, #102400	; 0x19000
   13a34:	ldr	pc, [ip, #1012]!	; 0x3f4

00013a38 <gtk_widget_get_allocation@plt>:
   13a38:	add	ip, pc, #0, 12
   13a3c:	add	ip, ip, #102400	; 0x19000
   13a40:	ldr	pc, [ip, #1004]!	; 0x3ec

00013a44 <g_idle_add@plt>:
   13a44:	add	ip, pc, #0, 12
   13a48:	add	ip, ip, #102400	; 0x19000
   13a4c:	ldr	pc, [ip, #996]!	; 0x3e4

00013a50 <g_signal_connect_data@plt>:
   13a50:	add	ip, pc, #0, 12
   13a54:	add	ip, ip, #102400	; 0x19000
   13a58:	ldr	pc, [ip, #988]!	; 0x3dc

00013a5c <cd_icc_new@plt>:
   13a5c:	add	ip, pc, #0, 12
   13a60:	add	ip, ip, #102400	; 0x19000
   13a64:	ldr	pc, [ip, #980]!	; 0x3d4

00013a68 <g_once_init_enter@plt>:
   13a68:	add	ip, pc, #0, 12
   13a6c:	add	ip, ip, #102400	; 0x19000
   13a70:	ldr	pc, [ip, #972]!	; 0x3cc

00013a74 <gtk_print_operation_set_n_pages@plt>:
   13a74:	add	ip, pc, #0, 12
   13a78:	add	ip, ip, #102400	; 0x19000
   13a7c:	ldr	pc, [ip, #964]!	; 0x3c4

00013a80 <gtk_print_context_get_page_setup@plt>:
   13a80:	add	ip, pc, #0, 12
   13a84:	add	ip, ip, #102400	; 0x19000
   13a88:	ldr	pc, [ip, #956]!	; 0x3bc

00013a8c <gtk_print_context_get_height@plt>:
   13a8c:	add	ip, pc, #0, 12
   13a90:	add	ip, ip, #102400	; 0x19000
   13a94:	ldr	pc, [ip, #948]!	; 0x3b4

00013a98 <gtk_widget_destroy@plt>:
   13a98:	add	ip, pc, #0, 12
   13a9c:	add	ip, ip, #102400	; 0x19000
   13aa0:	ldr	pc, [ip, #940]!	; 0x3ac

00013aa4 <cairo_stroke_preserve@plt>:
   13aa4:	add	ip, pc, #0, 12
   13aa8:	add	ip, ip, #102400	; 0x19000
   13aac:	ldr	pc, [ip, #932]!	; 0x3a4

00013ab0 <gtk_print_operation_new@plt>:
   13ab0:	add	ip, pc, #0, 12
   13ab4:	add	ip, ip, #102400	; 0x19000
   13ab8:	ldr	pc, [ip, #924]!	; 0x39c

00013abc <g_dbus_connection_call_sync@plt>:
   13abc:	add	ip, pc, #0, 12
   13ac0:	add	ip, ip, #102400	; 0x19000
   13ac4:	ldr	pc, [ip, #916]!	; 0x394

00013ac8 <g_ptr_array_set_size@plt>:
   13ac8:	add	ip, pc, #0, 12
   13acc:	add	ip, ip, #102400	; 0x19000
   13ad0:	ldr	pc, [ip, #908]!	; 0x38c

00013ad4 <gtk_print_operation_set_show_progress@plt>:
   13ad4:	add	ip, pc, #0, 12
   13ad8:	add	ip, ip, #102400	; 0x19000
   13adc:	ldr	pc, [ip, #900]!	; 0x384

00013ae0 <g_intern_static_string@plt>:
   13ae0:	add	ip, pc, #0, 12
   13ae4:	add	ip, ip, #102400	; 0x19000
   13ae8:	ldr	pc, [ip, #892]!	; 0x37c

00013aec <gtk_print_context_get_cairo_context@plt>:
   13aec:	add	ip, pc, #0, 12
   13af0:	add	ip, ip, #102400	; 0x19000
   13af4:	ldr	pc, [ip, #884]!	; 0x374

00013af8 <g_strstr_len@plt>:
   13af8:	add	ip, pc, #0, 12
   13afc:	add	ip, ip, #102400	; 0x19000
   13b00:	ldr	pc, [ip, #876]!	; 0x36c

00013b04 <g_strfreev@plt>:
   13b04:	add	ip, pc, #0, 12
   13b08:	add	ip, ip, #102400	; 0x19000
   13b0c:	ldr	pc, [ip, #868]!	; 0x364

00013b10 <g_strv_length@plt>:
   13b10:	add	ip, pc, #0, 12
   13b14:	add	ip, ip, #102400	; 0x19000
   13b18:	ldr	pc, [ip, #860]!	; 0x35c

00013b1c <g_variant_iter_loop@plt>:
   13b1c:	add	ip, pc, #0, 12
   13b20:	add	ip, ip, #102400	; 0x19000
   13b24:	ldr	pc, [ip, #852]!	; 0x354

00013b28 <g_option_context_free@plt>:
   13b28:	add	ip, pc, #0, 12
   13b2c:	add	ip, ip, #102400	; 0x19000
   13b30:	ldr	pc, [ip, #844]!	; 0x34c

00013b34 <g_ptr_array_get_type@plt>:
   13b34:	add	ip, pc, #0, 12
   13b38:	add	ip, ip, #102400	; 0x19000
   13b3c:	ldr	pc, [ip, #836]!	; 0x344

00013b40 <fileno@plt>:
   13b40:	add	ip, pc, #0, 12
   13b44:	add	ip, ip, #102400	; 0x19000
   13b48:	ldr	pc, [ip, #828]!	; 0x33c

00013b4c <g_variant_get@plt>:
   13b4c:	add	ip, pc, #0, 12
   13b50:	add	ip, ip, #102400	; 0x19000
   13b54:	ldr	pc, [ip, #820]!	; 0x334

00013b58 <__stack_chk_fail@plt>:
   13b58:	add	ip, pc, #0, 12
   13b5c:	add	ip, ip, #102400	; 0x19000
   13b60:	ldr	pc, [ip, #812]!	; 0x32c

00013b64 <g_getenv@plt>:
   13b64:	add	ip, pc, #0, 12
   13b68:	add	ip, ip, #102400	; 0x19000
   13b6c:	ldr	pc, [ip, #804]!	; 0x324

00013b70 <g_spawn_sync@plt>:
   13b70:	add	ip, pc, #0, 12
   13b74:	add	ip, ip, #102400	; 0x19000
   13b78:	ldr	pc, [ip, #796]!	; 0x31c

00013b7c <gdk_atom_intern_static_string@plt>:
   13b7c:	add	ip, pc, #0, 12
   13b80:	add	ip, ip, #102400	; 0x19000
   13b84:	ldr	pc, [ip, #788]!	; 0x314

00013b88 <isatty@plt>:
   13b88:	add	ip, pc, #0, 12
   13b8c:	add	ip, ip, #102400	; 0x19000
   13b90:	ldr	pc, [ip, #780]!	; 0x30c

00013b94 <g_free@plt>:
   13b94:	add	ip, pc, #0, 12
   13b98:	add	ip, ip, #102400	; 0x19000
   13b9c:	ldr	pc, [ip, #772]!	; 0x304

00013ba0 <cairo_line_to@plt>:
   13ba0:	add	ip, pc, #0, 12
   13ba4:	add	ip, ip, #102400	; 0x19000
   13ba8:	ldr	pc, [ip, #764]!	; 0x2fc

00013bac <cd_color_yxy_free@plt>:
   13bac:	add	ip, pc, #0, 12
   13bb0:	add	ip, ip, #102400	; 0x19000
   13bb4:	ldr	pc, [ip, #756]!	; 0x2f4

00013bb8 <dcgettext@plt>:
   13bb8:	add	ip, pc, #0, 12
   13bbc:	add	ip, ip, #102400	; 0x19000
   13bc0:	ldr	pc, [ip, #748]!	; 0x2ec

00013bc4 <cairo_surface_destroy@plt>:
   13bc4:	add	ip, pc, #0, 12
   13bc8:	add	ip, ip, #102400	; 0x19000
   13bcc:	ldr	pc, [ip, #740]!	; 0x2e4

00013bd0 <g_type_add_instance_private@plt>:
   13bd0:	add	ip, pc, #0, 12
   13bd4:	add	ip, ip, #102400	; 0x19000
   13bd8:	ldr	pc, [ip, #732]!	; 0x2dc

00013bdc <gtk_image_get_pixbuf@plt>:
   13bdc:	add	ip, pc, #0, 12
   13be0:	add	ip, ip, #102400	; 0x19000
   13be4:	ldr	pc, [ip, #724]!	; 0x2d4

00013be8 <gdk_pixbuf_new_from_file@plt>:
   13be8:	add	ip, pc, #0, 12
   13bec:	add	ip, ip, #102400	; 0x19000
   13bf0:	ldr	pc, [ip, #716]!	; 0x2cc

00013bf4 <g_param_spec_boxed@plt>:
   13bf4:	add	ip, pc, #0, 12
   13bf8:	add	ip, ip, #102400	; 0x19000
   13bfc:	ldr	pc, [ip, #708]!	; 0x2c4

00013c00 <g_object_get@plt>:
   13c00:	add	ip, pc, #0, 12
   13c04:	add	ip, ip, #102400	; 0x19000
   13c08:	ldr	pc, [ip, #700]!	; 0x2bc

00013c0c <gtk_dialog_get_type@plt>:
   13c0c:	add	ip, pc, #0, 12
   13c10:	add	ip, ip, #102400	; 0x19000
   13c14:	ldr	pc, [ip, #692]!	; 0x2b4

00013c18 <g_object_class_install_property@plt>:
   13c18:	add	ip, pc, #0, 12
   13c1c:	add	ip, ip, #102400	; 0x19000
   13c20:	ldr	pc, [ip, #684]!	; 0x2ac

00013c24 <g_variant_unref@plt>:
   13c24:	add	ip, pc, #0, 12
   13c28:	add	ip, ip, #102400	; 0x19000
   13c2c:	ldr	pc, [ip, #676]!	; 0x2a4

00013c30 <g_file_get_basename@plt>:
   13c30:	add	ip, pc, #0, 12
   13c34:	add	ip, ip, #102400	; 0x19000
   13c38:	ldr	pc, [ip, #668]!	; 0x29c

00013c3c <g_type_class_add_private@plt>:
   13c3c:	add	ip, pc, #0, 12
   13c40:	add	ip, ip, #102400	; 0x19000
   13c44:	ldr	pc, [ip, #660]!	; 0x294

00013c48 <g_param_spec_uint@plt>:
   13c48:	add	ip, pc, #0, 12
   13c4c:	add	ip, ip, #102400	; 0x19000
   13c50:	ldr	pc, [ip, #652]!	; 0x28c

00013c54 <cd_transform_process@plt>:
   13c54:	add	ip, pc, #0, 12
   13c58:	add	ip, ip, #102400	; 0x19000
   13c5c:	ldr	pc, [ip, #644]!	; 0x284

00013c60 <cd_transform_set_rendering_intent@plt>:
   13c60:	add	ip, pc, #0, 12
   13c64:	add	ip, ip, #102400	; 0x19000
   13c68:	ldr	pc, [ip, #636]!	; 0x27c

00013c6c <cd_icc_load_data@plt>:
   13c6c:	add	ip, pc, #0, 12
   13c70:	add	ip, ip, #102400	; 0x19000
   13c74:	ldr	pc, [ip, #628]!	; 0x274

00013c78 <raise@plt>:
   13c78:	add	ip, pc, #0, 12
   13c7c:	add	ip, ip, #102400	; 0x19000
   13c80:	ldr	pc, [ip, #620]!	; 0x26c

00013c84 <g_type_check_instance_is_a@plt>:
   13c84:	add	ip, pc, #0, 12
   13c88:	add	ip, ip, #102400	; 0x19000
   13c8c:	ldr	pc, [ip, #612]!	; 0x264

00013c90 <g_print@plt>:
   13c90:	add	ip, pc, #0, 12
   13c94:	add	ip, ip, #102400	; 0x19000
   13c98:	ldr	pc, [ip, #604]!	; 0x25c

00013c9c <bindtextdomain@plt>:
   13c9c:	add	ip, pc, #0, 12
   13ca0:	add	ip, ip, #102400	; 0x19000
   13ca4:	ldr	pc, [ip, #596]!	; 0x254

00013ca8 <gtk_print_operation_set_support_selection@plt>:
   13ca8:	add	ip, pc, #0, 12
   13cac:	add	ip, ip, #102400	; 0x19000
   13cb0:	ldr	pc, [ip, #588]!	; 0x24c

00013cb4 <setlocale@plt>:
   13cb4:	add	ip, pc, #0, 12
   13cb8:	add	ip, ip, #102400	; 0x19000
   13cbc:	ldr	pc, [ip, #580]!	; 0x244

00013cc0 <g_strconcat@plt>:
   13cc0:	add	ip, pc, #0, 12
   13cc4:	add	ip, ip, #102400	; 0x19000
   13cc8:	ldr	pc, [ip, #572]!	; 0x23c

00013ccc <g_option_context_add_main_entries@plt>:
   13ccc:	add	ip, pc, #0, 12
   13cd0:	add	ip, ip, #102400	; 0x19000
   13cd4:	ldr	pc, [ip, #564]!	; 0x234

00013cd8 <exif_content_get_entry@plt>:
   13cd8:	add	ip, pc, #0, 12
   13cdc:	add	ip, ip, #102400	; 0x19000
   13ce0:	ldr	pc, [ip, #556]!	; 0x22c

00013ce4 <gtk_print_operation_set_track_print_status@plt>:
   13ce4:	add	ip, pc, #0, 12
   13ce8:	add	ip, ip, #102400	; 0x19000
   13cec:	ldr	pc, [ip, #548]!	; 0x224

00013cf0 <gtk_widget_get_pango_context@plt>:
   13cf0:	add	ip, pc, #0, 12
   13cf4:	add	ip, ip, #102400	; 0x19000
   13cf8:	ldr	pc, [ip, #540]!	; 0x21c

00013cfc <g_string_free@plt>:
   13cfc:	add	ip, pc, #0, 12
   13d00:	add	ip, ip, #102400	; 0x19000
   13d04:	ldr	pc, [ip, #532]!	; 0x214

00013d08 <gtk_dialog_run@plt>:
   13d08:	add	ip, pc, #0, 12
   13d0c:	add	ip, ip, #102400	; 0x19000
   13d10:	ldr	pc, [ip, #524]!	; 0x20c

00013d14 <powf@plt>:
   13d14:	add	ip, pc, #0, 12
   13d18:	add	ip, ip, #102400	; 0x19000
   13d1c:	ldr	pc, [ip, #516]!	; 0x204

00013d20 <gtk_print_operation_set_print_settings@plt>:
   13d20:	add	ip, pc, #0, 12
   13d24:	add	ip, ip, #102400	; 0x19000
   13d28:	ldr	pc, [ip, #508]!	; 0x1fc

00013d2c <gtk_widget_show@plt>:
   13d2c:	add	ip, pc, #0, 12
   13d30:	add	ip, ip, #102400	; 0x19000
   13d34:	ldr	pc, [ip, #500]!	; 0x1f4

00013d38 <g_object_unref@plt>:
   13d38:	add	ip, pc, #0, 12
   13d3c:	add	ip, ip, #102400	; 0x19000
   13d40:	ldr	pc, [ip, #492]!	; 0x1ec

00013d44 <g_once_init_leave@plt>:
   13d44:	add	ip, pc, #0, 12
   13d48:	add	ip, ip, #102400	; 0x19000
   13d4c:	ldr	pc, [ip, #484]!	; 0x1e4

00013d50 <g_log_set_fatal_mask@plt>:
   13d50:	add	ip, pc, #0, 12
   13d54:	add	ip, ip, #102400	; 0x19000
   13d58:	ldr	pc, [ip, #476]!	; 0x1dc

00013d5c <g_file_info_get_attribute_string@plt>:
   13d5c:	add	ip, pc, #0, 12
   13d60:	add	ip, ip, #102400	; 0x19000
   13d64:	ldr	pc, [ip, #468]!	; 0x1d4

00013d68 <cd_transform_set_output_pixel_format@plt>:
   13d68:	add	ip, pc, #0, 12
   13d6c:	add	ip, ip, #102400	; 0x19000
   13d70:	ldr	pc, [ip, #460]!	; 0x1cc

00013d74 <pango_layout_new@plt>:
   13d74:	add	ip, pc, #0, 12
   13d78:	add	ip, ip, #102400	; 0x19000
   13d7c:	ldr	pc, [ip, #452]!	; 0x1c4

00013d80 <gdk_screen_get_default@plt>:
   13d80:	add	ip, pc, #0, 12
   13d84:	add	ip, ip, #102400	; 0x19000
   13d88:	ldr	pc, [ip, #444]!	; 0x1bc

00013d8c <cd_color_xyz_to_yxy@plt>:
   13d8c:	add	ip, pc, #0, 12
   13d90:	add	ip, ip, #102400	; 0x19000
   13d94:	ldr	pc, [ip, #436]!	; 0x1b4

00013d98 <g_malloc0_n@plt>:
   13d98:	add	ip, pc, #0, 12
   13d9c:	add	ip, ip, #102400	; 0x19000
   13da0:	ldr	pc, [ip, #428]!	; 0x1ac

00013da4 <cairo_close_path@plt>:
   13da4:	add	ip, pc, #0, 12
   13da8:	add	ip, ip, #102400	; 0x19000
   13dac:	ldr	pc, [ip, #420]!	; 0x1a4

00013db0 <cairo_restore@plt>:
   13db0:	add	ip, pc, #0, 12
   13db4:	add	ip, ip, #102400	; 0x19000
   13db8:	ldr	pc, [ip, #412]!	; 0x19c

00013dbc <g_variant_get_string@plt>:
   13dbc:	add	ip, pc, #0, 12
   13dc0:	add	ip, ip, #102400	; 0x19000
   13dc4:	ldr	pc, [ip, #404]!	; 0x194

00013dc8 <cairo_paint@plt>:
   13dc8:	add	ip, pc, #0, 12
   13dcc:	add	ip, ip, #102400	; 0x19000
   13dd0:	ldr	pc, [ip, #396]!	; 0x18c

00013dd4 <g_type_class_peek_parent@plt>:
   13dd4:	add	ip, pc, #0, 12
   13dd8:	add	ip, ip, #102400	; 0x19000
   13ddc:	ldr	pc, [ip, #388]!	; 0x184

00013de0 <g_file_new_for_path@plt>:
   13de0:	add	ip, pc, #0, 12
   13de4:	add	ip, ip, #102400	; 0x19000
   13de8:	ldr	pc, [ip, #380]!	; 0x17c

00013dec <g_ptr_array_unref@plt>:
   13dec:	add	ip, pc, #0, 12
   13df0:	add	ip, ip, #102400	; 0x19000
   13df4:	ldr	pc, [ip, #372]!	; 0x174

00013df8 <g_malloc0@plt>:
   13df8:	add	ip, pc, #0, 12
   13dfc:	add	ip, ip, #102400	; 0x19000
   13e00:	ldr	pc, [ip, #364]!	; 0x16c

00013e04 <exif_data_unref@plt>:
   13e04:	add	ip, pc, #0, 12
   13e08:	add	ip, ip, #102400	; 0x19000
   13e0c:	ldr	pc, [ip, #356]!	; 0x164

00013e10 <g_ptr_array_add@plt>:
   13e10:	add	ip, pc, #0, 12
   13e14:	add	ip, ip, #102400	; 0x19000
   13e18:	ldr	pc, [ip, #348]!	; 0x15c

00013e1c <g_markup_escape_text@plt>:
   13e1c:	add	ip, pc, #0, 12
   13e20:	add	ip, ip, #102400	; 0x19000
   13e24:	ldr	pc, [ip, #340]!	; 0x154

00013e28 <gtk_init@plt>:
   13e28:	add	ip, pc, #0, 12
   13e2c:	add	ip, ip, #102400	; 0x19000
   13e30:	ldr	pc, [ip, #332]!	; 0x14c

00013e34 <time@plt>:
   13e34:	add	ip, pc, #0, 12
   13e38:	add	ip, ip, #102400	; 0x19000
   13e3c:	ldr	pc, [ip, #324]!	; 0x144

00013e40 <cd_color_yxy_new@plt>:
   13e40:	add	ip, pc, #0, 12
   13e44:	add	ip, ip, #102400	; 0x19000
   13e48:	ldr	pc, [ip, #316]!	; 0x13c

00013e4c <gtk_message_dialog_new@plt>:
   13e4c:	add	ip, pc, #0, 12
   13e50:	add	ip, ip, #102400	; 0x19000
   13e54:	ldr	pc, [ip, #308]!	; 0x134

00013e58 <exif_entry_get_value@plt>:
   13e58:	add	ip, pc, #0, 12
   13e5c:	add	ip, ip, #102400	; 0x19000
   13e60:	ldr	pc, [ip, #300]!	; 0x12c

00013e64 <gdk_pixbuf_get_pixels@plt>:
   13e64:	add	ip, pc, #0, 12
   13e68:	add	ip, ip, #102400	; 0x19000
   13e6c:	ldr	pc, [ip, #292]!	; 0x124

00013e70 <g_ptr_array_ref@plt>:
   13e70:	add	ip, pc, #0, 12
   13e74:	add	ip, ip, #102400	; 0x19000
   13e78:	ldr	pc, [ip, #284]!	; 0x11c

00013e7c <pango_font_description_from_string@plt>:
   13e7c:	add	ip, pc, #0, 12
   13e80:	add	ip, ip, #102400	; 0x19000
   13e84:	ldr	pc, [ip, #276]!	; 0x114

00013e88 <_Unwind_Resume@plt>:
   13e88:	add	ip, pc, #0, 12
   13e8c:	add	ip, ip, #102400	; 0x19000
   13e90:	ldr	pc, [ip, #268]!	; 0x10c

00013e94 <g_string_append@plt>:
   13e94:	add	ip, pc, #0, 12
   13e98:	add	ip, ip, #102400	; 0x19000
   13e9c:	ldr	pc, [ip, #260]!	; 0x104

00013ea0 <gtk_print_operation_cancel@plt>:
   13ea0:	add	ip, pc, #0, 12
   13ea4:	add	ip, ip, #102400	; 0x19000
   13ea8:	ldr	pc, [ip, #252]!	; 0xfc

00013eac <gtk_drawing_area_get_type@plt>:
   13eac:	add	ip, pc, #0, 12
   13eb0:	add	ip, ip, #102400	; 0x19000
   13eb4:	ldr	pc, [ip, #244]!	; 0xf4

00013eb8 <gtk_print_operation_run@plt>:
   13eb8:	add	ip, pc, #0, 12
   13ebc:	add	ip, ip, #102400	; 0x19000
   13ec0:	ldr	pc, [ip, #236]!	; 0xec

00013ec4 <cairo_stroke@plt>:
   13ec4:	add	ip, pc, #0, 12
   13ec8:	add	ip, ip, #102400	; 0x19000
   13ecc:	ldr	pc, [ip, #228]!	; 0xe4

00013ed0 <gdk_pixbuf_get_has_alpha@plt>:
   13ed0:	add	ip, pc, #0, 12
   13ed4:	add	ip, ip, #102400	; 0x19000
   13ed8:	ldr	pc, [ip, #220]!	; 0xdc

00013edc <cairo_set_source_surface@plt>:
   13edc:	add	ip, pc, #0, 12
   13ee0:	add	ip, ip, #102400	; 0x19000
   13ee4:	ldr	pc, [ip, #212]!	; 0xd4

00013ee8 <g_set_error@plt>:
   13ee8:	add	ip, pc, #0, 12
   13eec:	add	ip, ip, #102400	; 0x19000
   13ef0:	ldr	pc, [ip, #204]!	; 0xcc

00013ef4 <exif_data_new_from_file@plt>:
   13ef4:	add	ip, pc, #0, 12
   13ef8:	add	ip, ip, #102400	; 0x19000
   13efc:	ldr	pc, [ip, #196]!	; 0xc4

00013f00 <g_get_user_data_dir@plt>:
   13f00:	add	ip, pc, #0, 12
   13f04:	add	ip, ip, #102400	; 0x19000
   13f08:	ldr	pc, [ip, #188]!	; 0xbc

00013f0c <cairo_fill@plt>:
   13f0c:	add	ip, pc, #0, 12
   13f10:	add	ip, ip, #102400	; 0x19000
   13f14:	ldr	pc, [ip, #180]!	; 0xb4

00013f18 <g_type_check_class_cast@plt>:
   13f18:	add	ip, pc, #0, 12
   13f1c:	add	ip, ip, #102400	; 0x19000
   13f20:	ldr	pc, [ip, #172]!	; 0xac

00013f24 <cd_transform_set_output_icc@plt>:
   13f24:	add	ip, pc, #0, 12
   13f28:	add	ip, ip, #102400	; 0x19000
   13f2c:	ldr	pc, [ip, #164]!	; 0xa4

00013f30 <g_value_get_boxed@plt>:
   13f30:	add	ip, pc, #0, 12
   13f34:	add	ip, ip, #102400	; 0x19000
   13f38:	ldr	pc, [ip, #156]!	; 0x9c

00013f3c <__libc_start_main@plt>:
   13f3c:	add	ip, pc, #0, 12
   13f40:	add	ip, ip, #102400	; 0x19000
   13f44:	ldr	pc, [ip, #148]!	; 0x94

00013f48 <g_main_loop_unref@plt>:
   13f48:	add	ip, pc, #0, 12
   13f4c:	add	ip, ip, #102400	; 0x19000
   13f50:	ldr	pc, [ip, #140]!	; 0x8c

00013f54 <pango_layout_set_font_description@plt>:
   13f54:	add	ip, pc, #0, 12
   13f58:	add	ip, ip, #102400	; 0x19000
   13f5c:	ldr	pc, [ip, #132]!	; 0x84

00013f60 <__gmon_start__@plt>:
   13f60:	add	ip, pc, #0, 12
   13f64:	add	ip, ip, #102400	; 0x19000
   13f68:	ldr	pc, [ip, #124]!	; 0x7c

00013f6c <gtk_print_operation_get_print_settings@plt>:
   13f6c:	add	ip, pc, #0, 12
   13f70:	add	ip, ip, #102400	; 0x19000
   13f74:	ldr	pc, [ip, #116]!	; 0x74

00013f78 <g_object_get_data@plt>:
   13f78:	add	ip, pc, #0, 12
   13f7c:	add	ip, ip, #102400	; 0x19000
   13f80:	ldr	pc, [ip, #108]!	; 0x6c

00013f84 <cairo_set_dash@plt>:
   13f84:	add	ip, pc, #0, 12
   13f88:	add	ip, ip, #102400	; 0x19000
   13f8c:	ldr	pc, [ip, #100]!	; 0x64

00013f90 <cd_icc_get_description@plt>:
   13f90:	add	ip, pc, #0, 12
   13f94:	add	ip, ip, #102400	; 0x19000
   13f98:	ldr	pc, [ip, #92]!	; 0x5c

00013f9c <g_strcmp0@plt>:
   13f9c:	add	ip, pc, #0, 12
   13fa0:	add	ip, ip, #102400	; 0x19000
   13fa4:	ldr	pc, [ip, #84]!	; 0x54

Disassembly of section .text:

00013fa8 <.text>:
   13fa8:	push	{r4, r5, r6, r7, r8, r9, lr}
   13fac:	movw	r5, #53256	; 0xd008
   13fb0:	movt	r5, #2
   13fb4:	sub	sp, sp, #252	; 0xfc
   13fb8:	mov	r4, #0
   13fbc:	mov	r2, #140	; 0x8c
   13fc0:	ldr	r3, [r5]
   13fc4:	str	r0, [sp, #36]	; 0x24
   13fc8:	add	r0, sp, #104	; 0x68
   13fcc:	str	r1, [sp, #32]
   13fd0:	mov	r1, r4
   13fd4:	str	r3, [sp, #244]	; 0xf4
   13fd8:	str	r4, [sp, #44]	; 0x2c
   13fdc:	str	r4, [sp, #48]	; 0x30
   13fe0:	str	r4, [sp, #52]	; 0x34
   13fe4:	str	r4, [sp, #56]	; 0x38
   13fe8:	bl	13900 <memset@plt>
   13fec:	mov	r2, #5
   13ff0:	mov	r0, r4
   13ff4:	movw	r1, #38040	; 0x9498
   13ff8:	movt	r1, #1
   13ffc:	mov	ip, #120	; 0x78
   14000:	movw	r3, #38032	; 0x9490
   14004:	strb	ip, [sp, #108]	; 0x6c
   14008:	movt	r3, #1
   1400c:	str	r3, [sp, #104]	; 0x68
   14010:	add	r3, sp, #44	; 0x2c
   14014:	str	r3, [sp, #120]	; 0x78
   14018:	bl	13bb8 <dcgettext@plt>
   1401c:	mov	r2, #5
   14020:	movw	r1, #38064	; 0x94b0
   14024:	movt	r1, #1
   14028:	mov	ip, #1
   1402c:	movw	r3, #38096	; 0x94d0
   14030:	str	ip, [sp, #144]	; 0x90
   14034:	movt	r3, #1
   14038:	add	ip, sp, #56	; 0x38
   1403c:	str	r3, [sp, #132]	; 0x84
   14040:	str	ip, [sp, #148]	; 0x94
   14044:	str	r0, [sp, #124]	; 0x7c
   14048:	mov	r0, r4
   1404c:	bl	13bb8 <dcgettext@plt>
   14050:	mov	r2, #5
   14054:	movw	r1, #38108	; 0x94dc
   14058:	movt	r1, #1
   1405c:	mov	ip, #2
   14060:	movw	r3, #38104	; 0x94d8
   14064:	str	ip, [sp, #172]	; 0xac
   14068:	movt	r3, #1
   1406c:	str	r3, [sp, #160]	; 0xa0
   14070:	add	r3, sp, #52	; 0x34
   14074:	str	r3, [sp, #176]	; 0xb0
   14078:	str	r0, [sp, #152]	; 0x98
   1407c:	mov	r0, r4
   14080:	bl	13bb8 <dcgettext@plt>
   14084:	mov	r2, #5
   14088:	movw	r1, #38156	; 0x950c
   1408c:	movt	r1, #1
   14090:	mov	ip, #100	; 0x64
   14094:	movw	r3, #38148	; 0x9504
   14098:	strb	ip, [sp, #192]	; 0xc0
   1409c:	movt	r3, #1
   140a0:	str	r3, [sp, #188]	; 0xbc
   140a4:	add	r3, sp, #48	; 0x30
   140a8:	str	r3, [sp, #204]	; 0xcc
   140ac:	str	r0, [sp, #180]	; 0xb4
   140b0:	mov	r0, r4
   140b4:	bl	13bb8 <dcgettext@plt>
   140b8:	movw	r1, #47156	; 0xb834
   140bc:	movt	r1, #1
   140c0:	str	r0, [sp, #208]	; 0xd0
   140c4:	mov	r0, #6
   140c8:	bl	13cb4 <setlocale@plt>
   140cc:	movw	r0, #38192	; 0x9530
   140d0:	movw	r1, #38212	; 0x9544
   140d4:	movt	r0, #1
   140d8:	movt	r1, #1
   140dc:	bl	13c9c <bindtextdomain@plt>
   140e0:	movw	r0, #38192	; 0x9530
   140e4:	movw	r1, #38232	; 0x9558
   140e8:	movt	r0, #1
   140ec:	movt	r1, #1
   140f0:	bl	136cc <bind_textdomain_codeset@plt>
   140f4:	movw	r0, #38192	; 0x9530
   140f8:	movt	r0, #1
   140fc:	bl	13870 <textdomain@plt>
   14100:	add	r0, sp, #36	; 0x24
   14104:	add	r1, sp, #32
   14108:	bl	13e28 <gtk_init@plt>
   1410c:	movw	r1, #38240	; 0x9560
   14110:	mov	r0, r4
   14114:	movt	r1, #1
   14118:	mov	r2, #5
   1411c:	bl	13bb8 <dcgettext@plt>
   14120:	bl	13744 <g_option_context_new@plt>
   14124:	add	r1, sp, #104	; 0x68
   14128:	mov	r2, #0
   1412c:	mov	r4, r0
   14130:	bl	13ccc <g_option_context_add_main_entries@plt>
   14134:	bl	164f8 <g_strcmp0@plt+0x255c>
   14138:	mov	r1, r0
   1413c:	mov	r0, r4
   14140:	bl	13594 <g_option_context_add_group@plt>
   14144:	mov	r0, #1
   14148:	bl	136e4 <gtk_get_option_group@plt>
   1414c:	mov	r1, r0
   14150:	mov	r0, r4
   14154:	bl	13594 <g_option_context_add_group@plt>
   14158:	mov	r0, r4
   1415c:	add	r1, sp, #36	; 0x24
   14160:	add	r2, sp, #32
   14164:	mov	r3, #0
   14168:	bl	13588 <g_option_context_parse@plt>
   1416c:	mov	r0, r4
   14170:	bl	13b28 <g_option_context_free@plt>
   14174:	ldr	r3, [sp, #44]	; 0x2c
   14178:	cmp	r3, #0
   1417c:	bne	14448 <g_strcmp0@plt+0x4ac>
   14180:	ldr	r3, [sp, #48]	; 0x30
   14184:	cmp	r3, #0
   14188:	bne	14448 <g_strcmp0@plt+0x4ac>
   1418c:	ldr	ip, [sp, #56]	; 0x38
   14190:	cmp	ip, #0
   14194:	beq	14308 <g_strcmp0@plt+0x36c>
   14198:	mov	r3, #0
   1419c:	mov	r0, #2
   141a0:	mov	r1, r3
   141a4:	add	r2, sp, #92	; 0x5c
   141a8:	str	ip, [sp, #84]	; 0x54
   141ac:	str	r3, [sp, #92]	; 0x5c
   141b0:	str	r3, [sp, #96]	; 0x60
   141b4:	bl	1357c <g_bus_get_sync@plt>
   141b8:	subs	r4, r0, #0
   141bc:	beq	147ec <g_strcmp0@plt+0x850>
   141c0:	movw	r0, #38684	; 0x971c
   141c4:	movw	r2, #47156	; 0xb834
   141c8:	movt	r0, #1
   141cc:	movt	r2, #1
   141d0:	ldr	r1, [sp, #84]	; 0x54
   141d4:	bl	13864 <g_variant_new@plt>
   141d8:	mov	r6, r0
   141dc:	movw	r0, #38692	; 0x9724
   141e0:	movt	r0, #1
   141e4:	bl	1366c <g_variant_type_checked_@plt>
   141e8:	movw	r1, #38700	; 0x972c
   141ec:	movt	r1, #1
   141f0:	add	r3, sp, #92	; 0x5c
   141f4:	mov	ip, #0
   141f8:	str	r0, [sp, #8]
   141fc:	movw	r2, #38748	; 0x975c
   14200:	str	r3, [sp, #24]
   14204:	movt	r2, #1
   14208:	mvn	lr, #0
   1420c:	str	r2, [sp]
   14210:	str	r6, [sp, #4]
   14214:	movw	r2, #38724	; 0x9744
   14218:	mov	r0, r4
   1421c:	mov	r3, r1
   14220:	str	ip, [sp, #12]
   14224:	movt	r2, #1
   14228:	str	ip, [sp, #20]
   1422c:	str	lr, [sp, #16]
   14230:	bl	13abc <g_dbus_connection_call_sync@plt>
   14234:	subs	r7, r0, #0
   14238:	beq	1486c <g_strcmp0@plt+0x8d0>
   1423c:	movw	r1, #38692	; 0x9724
   14240:	add	r2, sp, #96	; 0x60
   14244:	movt	r1, #1
   14248:	bl	13b4c <g_variant_get@plt>
   1424c:	ldr	r0, [sp, #96]	; 0x60
   14250:	bl	13888 <g_variant_iter_n_children@plt>
   14254:	cmp	r0, #0
   14258:	beq	145cc <g_strcmp0@plt+0x630>
   1425c:	mov	r2, #5
   14260:	movw	r1, #38836	; 0x97b4
   14264:	mov	r0, #0
   14268:	movt	r1, #1
   1426c:	bl	13bb8 <dcgettext@plt>
   14270:	ldr	r2, [sp, #84]	; 0x54
   14274:	mov	r1, r0
   14278:	movw	r0, #38676	; 0x9714
   1427c:	movt	r0, #1
   14280:	bl	13c90 <g_print@plt>
   14284:	mov	r4, #0
   14288:	b	142a8 <g_strcmp0@plt+0x30c>
   1428c:	add	r4, r4, #1
   14290:	movw	r0, #38860	; 0x97cc
   14294:	ldr	r2, [sp, #88]	; 0x58
   14298:	movt	r0, #1
   1429c:	mov	r1, r4
   142a0:	ldr	r3, [sp, #84]	; 0x54
   142a4:	bl	13c90 <g_print@plt>
   142a8:	movw	r1, #38684	; 0x971c
   142ac:	ldr	r0, [sp, #96]	; 0x60
   142b0:	movt	r1, #1
   142b4:	add	r2, sp, #84	; 0x54
   142b8:	add	r3, sp, #88	; 0x58
   142bc:	bl	13b1c <g_variant_iter_loop@plt>
   142c0:	cmp	r0, #0
   142c4:	bne	1428c <g_strcmp0@plt+0x2f0>
   142c8:	ldr	r0, [sp, #96]	; 0x60
   142cc:	cmp	r0, #0
   142d0:	beq	142d8 <g_strcmp0@plt+0x33c>
   142d4:	bl	13564 <g_variant_iter_free@plt>
   142d8:	cmp	r6, #0
   142dc:	beq	142e8 <g_strcmp0@plt+0x34c>
   142e0:	mov	r0, r6
   142e4:	bl	13c24 <g_variant_unref@plt>
   142e8:	cmp	r7, #0
   142ec:	beq	142f8 <g_strcmp0@plt+0x35c>
   142f0:	mov	r0, r7
   142f4:	bl	13c24 <g_variant_unref@plt>
   142f8:	ldr	r0, [sp, #92]	; 0x5c
   142fc:	cmp	r0, #0
   14300:	beq	14308 <g_strcmp0@plt+0x36c>
   14304:	bl	136a8 <g_error_free@plt>
   14308:	ldr	r6, [sp, #52]	; 0x34
   1430c:	cmp	r6, #0
   14310:	beq	14424 <g_strcmp0@plt+0x488>
   14314:	add	r4, sp, #248	; 0xf8
   14318:	mov	r1, #0
   1431c:	mov	r0, #2
   14320:	str	r1, [r4, #-148]!	; 0xffffff6c
   14324:	mov	r2, r4
   14328:	bl	1357c <g_bus_get_sync@plt>
   1432c:	subs	r8, r0, #0
   14330:	beq	14840 <g_strcmp0@plt+0x8a4>
   14334:	movw	r0, #38872	; 0x97d8
   14338:	mov	r1, r6
   1433c:	movt	r0, #1
   14340:	bl	13864 <g_variant_new@plt>
   14344:	mov	r7, r0
   14348:	movw	r0, #38876	; 0x97dc
   1434c:	movt	r0, #1
   14350:	bl	1366c <g_variant_type_checked_@plt>
   14354:	movw	r1, #38700	; 0x972c
   14358:	movt	r1, #1
   1435c:	mov	ip, #0
   14360:	str	r0, [sp, #8]
   14364:	movw	r2, #38880	; 0x97e0
   14368:	mvn	lr, #0
   1436c:	movt	r2, #1
   14370:	str	r7, [sp, #4]
   14374:	str	r2, [sp]
   14378:	mov	r0, r8
   1437c:	movw	r2, #38724	; 0x9744
   14380:	str	r4, [sp, #24]
   14384:	mov	r3, r1
   14388:	str	ip, [sp, #12]
   1438c:	str	ip, [sp, #20]
   14390:	movt	r2, #1
   14394:	str	lr, [sp, #16]
   14398:	bl	13abc <g_dbus_connection_call_sync@plt>
   1439c:	subs	r4, r0, #0
   143a0:	beq	147a8 <g_strcmp0@plt+0x80c>
   143a4:	mov	r1, #0
   143a8:	bl	13678 <g_variant_get_child_value@plt>
   143ac:	mov	r1, #0
   143b0:	bl	13dbc <g_variant_get_string@plt>
   143b4:	subs	r8, r0, #0
   143b8:	beq	148b8 <g_strcmp0@plt+0x91c>
   143bc:	mov	r2, #5
   143c0:	movw	r1, #38836	; 0x97b4
   143c4:	mov	r0, #0
   143c8:	movt	r1, #1
   143cc:	bl	13bb8 <dcgettext@plt>
   143d0:	mov	r2, r6
   143d4:	mov	r1, r0
   143d8:	movw	r0, #38944	; 0x9820
   143dc:	movt	r0, #1
   143e0:	bl	13c90 <g_print@plt>
   143e4:	movw	r0, #38952	; 0x9828
   143e8:	movw	r1, #38964	; 0x9834
   143ec:	mov	r2, r8
   143f0:	movt	r0, #1
   143f4:	movt	r1, #1
   143f8:	bl	13c90 <g_print@plt>
   143fc:	mov	r0, r4
   14400:	bl	13c24 <g_variant_unref@plt>
   14404:	cmp	r7, #0
   14408:	beq	14414 <g_strcmp0@plt+0x478>
   1440c:	mov	r0, r7
   14410:	bl	13c24 <g_variant_unref@plt>
   14414:	ldr	r0, [sp, #100]	; 0x64
   14418:	cmp	r0, #0
   1441c:	beq	14424 <g_strcmp0@plt+0x488>
   14420:	bl	136a8 <g_error_free@plt>
   14424:	ldr	r0, [sp, #56]	; 0x38
   14428:	bl	13b94 <g_free@plt>
   1442c:	ldr	r2, [sp, #244]	; 0xf4
   14430:	ldr	r3, [r5]
   14434:	mov	r0, #0
   14438:	cmp	r2, r3
   1443c:	bne	148f8 <g_strcmp0@plt+0x95c>
   14440:	add	sp, sp, #252	; 0xfc
   14444:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14448:	mov	r3, #0
   1444c:	str	r3, [sp, #60]	; 0x3c
   14450:	str	r3, [sp, #64]	; 0x40
   14454:	bl	13d80 <gdk_screen_get_default@plt>
   14458:	bl	13840 <gdk_screen_get_root_window@plt>
   1445c:	mov	r4, r0
   14460:	bl	13918 <gdk_error_trap_push@plt>
   14464:	movw	r0, #38264	; 0x9578
   14468:	movt	r0, #1
   1446c:	bl	13b7c <gdk_atom_intern_static_string@plt>
   14470:	mov	r6, r0
   14474:	movw	r0, #38280	; 0x9588
   14478:	movt	r0, #1
   1447c:	bl	13b7c <gdk_atom_intern_static_string@plt>
   14480:	mov	ip, #0
   14484:	mov	r2, r0
   14488:	str	ip, [sp, #4]
   1448c:	mov	r3, ip
   14490:	str	ip, [sp, #8]
   14494:	mvn	lr, #-2147483648	; 0x80000000
   14498:	str	ip, [sp, #12]
   1449c:	mov	r0, r4
   144a0:	add	ip, sp, #68	; 0x44
   144a4:	mov	r1, r6
   144a8:	str	ip, [sp, #16]
   144ac:	add	ip, sp, #64	; 0x40
   144b0:	str	lr, [sp]
   144b4:	str	ip, [sp, #20]
   144b8:	bl	13978 <gdk_property_get@plt>
   144bc:	subs	r2, r0, #0
   144c0:	beq	145f0 <g_strcmp0@plt+0x654>
   144c4:	bl	1363c <gdk_error_trap_pop@plt>
   144c8:	subs	r6, r0, #0
   144cc:	bne	14898 <g_strcmp0@plt+0x8fc>
   144d0:	ldr	r7, [sp, #68]	; 0x44
   144d4:	cmp	r7, #0
   144d8:	beq	148dc <g_strcmp0@plt+0x940>
   144dc:	movw	r1, #38388	; 0x95f4
   144e0:	mov	r2, #5
   144e4:	movt	r1, #1
   144e8:	bl	13bb8 <dcgettext@plt>
   144ec:	str	r6, [sp, #72]	; 0x48
   144f0:	ldr	r8, [sp, #64]	; 0x40
   144f4:	mov	r9, r0
   144f8:	bl	13a5c <cd_icc_new@plt>
   144fc:	add	ip, sp, #72	; 0x48
   14500:	mov	r1, r8
   14504:	mov	r2, r7
   14508:	mov	r3, #0
   1450c:	str	ip, [sp]
   14510:	mov	r6, r0
   14514:	bl	13c6c <cd_icc_load_data@plt>
   14518:	cmp	r0, #0
   1451c:	beq	14784 <g_strcmp0@plt+0x7e8>
   14520:	movw	r0, #38868	; 0x97d4
   14524:	mov	r1, r9
   14528:	movt	r0, #1
   1452c:	bl	13c90 <g_print@plt>
   14530:	mov	r2, #5
   14534:	movw	r1, #38460	; 0x963c
   14538:	mov	r0, #0
   1453c:	movt	r1, #1
   14540:	bl	13bb8 <dcgettext@plt>
   14544:	mov	r1, #0
   14548:	mov	r2, r1
   1454c:	mov	r7, r0
   14550:	mov	r0, r6
   14554:	bl	13f90 <cd_icc_get_description@plt>
   14558:	mov	r2, r0
   1455c:	mov	r1, r7
   14560:	movw	r0, #38476	; 0x964c
   14564:	movt	r0, #1
   14568:	bl	13c90 <g_print@plt>
   1456c:	mov	r2, #5
   14570:	movw	r1, #38488	; 0x9658
   14574:	mov	r0, #0
   14578:	movt	r1, #1
   1457c:	bl	13bb8 <dcgettext@plt>
   14580:	mov	r1, #0
   14584:	mov	r2, r1
   14588:	mov	r7, r0
   1458c:	mov	r0, r6
   14590:	bl	135ac <cd_icc_get_copyright@plt>
   14594:	mov	r2, r0
   14598:	mov	r1, r7
   1459c:	movw	r0, #38476	; 0x964c
   145a0:	movt	r0, #1
   145a4:	bl	13c90 <g_print@plt>
   145a8:	ldr	r0, [sp, #72]	; 0x48
   145ac:	cmp	r0, #0
   145b0:	beq	145b8 <g_strcmp0@plt+0x61c>
   145b4:	bl	136a8 <g_error_free@plt>
   145b8:	cmp	r6, #0
   145bc:	beq	1462c <g_strcmp0@plt+0x690>
   145c0:	mov	r0, r6
   145c4:	bl	13d38 <g_object_unref@plt>
   145c8:	b	1462c <g_strcmp0@plt+0x690>
   145cc:	movw	r1, #38788	; 0x9784
   145d0:	mov	r2, #5
   145d4:	movt	r1, #1
   145d8:	bl	13bb8 <dcgettext@plt>
   145dc:	mov	r1, r0
   145e0:	movw	r0, #38868	; 0x97d4
   145e4:	movt	r0, #1
   145e8:	bl	13c90 <g_print@plt>
   145ec:	b	142c8 <g_strcmp0@plt+0x32c>
   145f0:	movw	r3, #38292	; 0x9594
   145f4:	add	r0, sp, #60	; 0x3c
   145f8:	movt	r3, #1
   145fc:	mov	r1, #1
   14600:	bl	13828 <g_set_error_literal@plt>
   14604:	ldr	r3, [sp, #60]	; 0x3c
   14608:	movw	r0, #38412	; 0x960c
   1460c:	movw	r2, #38980	; 0x9844
   14610:	movt	r0, #1
   14614:	movt	r2, #1
   14618:	mov	r1, #16
   1461c:	ldr	r3, [r3, #8]
   14620:	bl	137b0 <g_log@plt>
   14624:	mov	r3, #0
   14628:	str	r3, [sp, #60]	; 0x3c
   1462c:	mov	r3, #0
   14630:	str	r3, [sp, #80]	; 0x50
   14634:	bl	13918 <gdk_error_trap_push@plt>
   14638:	movw	r0, #38500	; 0x9664
   1463c:	movt	r0, #1
   14640:	bl	13b7c <gdk_atom_intern_static_string@plt>
   14644:	mov	r6, r0
   14648:	movw	r0, #38280	; 0x9588
   1464c:	movt	r0, #1
   14650:	bl	13b7c <gdk_atom_intern_static_string@plt>
   14654:	mov	ip, #0
   14658:	mov	r2, r0
   1465c:	str	ip, [sp, #4]
   14660:	mov	r3, ip
   14664:	str	ip, [sp, #8]
   14668:	mvn	lr, #-2147483648	; 0x80000000
   1466c:	str	ip, [sp, #12]
   14670:	mov	r0, r4
   14674:	add	ip, sp, #76	; 0x4c
   14678:	mov	r1, r6
   1467c:	str	ip, [sp, #16]
   14680:	add	ip, sp, #80	; 0x50
   14684:	str	lr, [sp]
   14688:	str	ip, [sp, #20]
   1468c:	bl	13978 <gdk_property_get@plt>
   14690:	subs	r2, r0, #0
   14694:	bne	1473c <g_strcmp0@plt+0x7a0>
   14698:	movw	r3, #38292	; 0x9594
   1469c:	add	r0, sp, #60	; 0x3c
   146a0:	movt	r3, #1
   146a4:	mov	r1, #1
   146a8:	bl	13828 <g_set_error_literal@plt>
   146ac:	mvn	r4, #0
   146b0:	mov	r6, #0
   146b4:	mov	r7, r4
   146b8:	ldr	r0, [sp, #80]	; 0x50
   146bc:	bl	13b94 <g_free@plt>
   146c0:	cmp	r6, #0
   146c4:	bne	1470c <g_strcmp0@plt+0x770>
   146c8:	ldr	r3, [sp, #60]	; 0x3c
   146cc:	movw	r0, #38412	; 0x960c
   146d0:	movw	r2, #38552	; 0x9698
   146d4:	movt	r0, #1
   146d8:	movt	r2, #1
   146dc:	mov	r1, #16
   146e0:	ldr	r3, [r3, #8]
   146e4:	bl	137b0 <g_log@plt>
   146e8:	mov	r3, #0
   146ec:	str	r3, [sp, #60]	; 0x3c
   146f0:	ldr	r0, [sp, #64]	; 0x40
   146f4:	bl	13b94 <g_free@plt>
   146f8:	ldr	r0, [sp, #60]	; 0x3c
   146fc:	cmp	r0, #0
   14700:	beq	1418c <g_strcmp0@plt+0x1f0>
   14704:	bl	136a8 <g_error_free@plt>
   14708:	b	1418c <g_strcmp0@plt+0x1f0>
   1470c:	mov	r2, #5
   14710:	movw	r1, #38596	; 0x96c4
   14714:	mov	r0, #0
   14718:	movt	r1, #1
   1471c:	bl	13bb8 <dcgettext@plt>
   14720:	mov	r2, r7
   14724:	mov	r3, r4
   14728:	mov	r1, r0
   1472c:	movw	r0, #38628	; 0x96e4
   14730:	movt	r0, #1
   14734:	bl	13c90 <g_print@plt>
   14738:	b	146f0 <g_strcmp0@plt+0x754>
   1473c:	bl	1363c <gdk_error_trap_pop@plt>
   14740:	cmp	r0, #0
   14744:	bne	14820 <g_strcmp0@plt+0x884>
   14748:	ldr	r2, [sp, #76]	; 0x4c
   1474c:	cmp	r2, #0
   14750:	beq	147d4 <g_strcmp0@plt+0x838>
   14754:	ldr	r3, [sp, #80]	; 0x50
   14758:	mov	r1, #100	; 0x64
   1475c:	mov	r6, #1
   14760:	ldrb	r4, [r3]
   14764:	mov	r0, r4
   14768:	bl	18fb8 <g_strcmp0@plt+0x501c>
   1476c:	mov	r1, #100	; 0x64
   14770:	uxtb	r7, r0
   14774:	mov	r0, r4
   14778:	bl	191a4 <g_strcmp0@plt+0x5208>
   1477c:	uxtb	r4, r1
   14780:	b	146b8 <g_strcmp0@plt+0x71c>
   14784:	ldr	r3, [sp, #72]	; 0x48
   14788:	movw	r0, #38412	; 0x960c
   1478c:	movw	r2, #38432	; 0x9620
   14790:	movt	r0, #1
   14794:	movt	r2, #1
   14798:	mov	r1, #16
   1479c:	ldr	r3, [r3, #8]
   147a0:	bl	137b0 <g_log@plt>
   147a4:	b	145a8 <g_strcmp0@plt+0x60c>
   147a8:	mov	r2, #5
   147ac:	movw	r1, #38768	; 0x9770
   147b0:	movt	r1, #1
   147b4:	bl	13bb8 <dcgettext@plt>
   147b8:	ldr	r3, [sp, #100]	; 0x64
   147bc:	ldr	r2, [r3, #8]
   147c0:	mov	r1, r0
   147c4:	movw	r0, #38676	; 0x9714
   147c8:	movt	r0, #1
   147cc:	bl	13c90 <g_print@plt>
   147d0:	b	14404 <g_strcmp0@plt+0x468>
   147d4:	movw	r3, #38352	; 0x95d0
   147d8:	add	r0, sp, #60	; 0x3c
   147dc:	movt	r3, #1
   147e0:	mov	r1, #1
   147e4:	bl	13ee8 <g_set_error@plt>
   147e8:	b	146ac <g_strcmp0@plt+0x710>
   147ec:	mov	r2, #5
   147f0:	movw	r1, #38640	; 0x96f0
   147f4:	movt	r1, #1
   147f8:	bl	13bb8 <dcgettext@plt>
   147fc:	ldr	r3, [sp, #92]	; 0x5c
   14800:	ldr	r2, [r3, #8]
   14804:	mov	r1, r0
   14808:	movw	r0, #38676	; 0x9714
   1480c:	movt	r0, #1
   14810:	bl	13c90 <g_print@plt>
   14814:	mov	r7, #0
   14818:	mov	r6, r7
   1481c:	b	142c8 <g_strcmp0@plt+0x32c>
   14820:	str	r0, [sp]
   14824:	movw	r3, #38528	; 0x9680
   14828:	add	r0, sp, #60	; 0x3c
   1482c:	movt	r3, #1
   14830:	mov	r1, #1
   14834:	mov	r2, #0
   14838:	bl	13ee8 <g_set_error@plt>
   1483c:	b	146ac <g_strcmp0@plt+0x710>
   14840:	mov	r2, #5
   14844:	movw	r1, #38640	; 0x96f0
   14848:	movt	r1, #1
   1484c:	bl	13bb8 <dcgettext@plt>
   14850:	ldr	r3, [sp, #100]	; 0x64
   14854:	ldr	r2, [r3, #8]
   14858:	mov	r1, r0
   1485c:	movw	r0, #38676	; 0x9714
   14860:	movt	r0, #1
   14864:	bl	13c90 <g_print@plt>
   14868:	b	14414 <g_strcmp0@plt+0x478>
   1486c:	mov	r2, #5
   14870:	movw	r1, #38768	; 0x9770
   14874:	movt	r1, #1
   14878:	bl	13bb8 <dcgettext@plt>
   1487c:	ldr	r3, [sp, #92]	; 0x5c
   14880:	ldr	r2, [r3, #8]
   14884:	mov	r1, r0
   14888:	movw	r0, #38676	; 0x9714
   1488c:	movt	r0, #1
   14890:	bl	13c90 <g_print@plt>
   14894:	b	142c8 <g_strcmp0@plt+0x32c>
   14898:	movw	r3, #38316	; 0x95ac
   1489c:	str	r6, [sp]
   148a0:	add	r0, sp, #60	; 0x3c
   148a4:	movt	r3, #1
   148a8:	mov	r1, #1
   148ac:	mov	r2, #0
   148b0:	bl	13ee8 <g_set_error@plt>
   148b4:	b	14604 <g_strcmp0@plt+0x668>
   148b8:	movw	r1, #38900	; 0x97f4
   148bc:	mov	r2, #5
   148c0:	movt	r1, #1
   148c4:	bl	13bb8 <dcgettext@plt>
   148c8:	mov	r1, r0
   148cc:	movw	r0, #38868	; 0x97d4
   148d0:	movt	r0, #1
   148d4:	bl	13c90 <g_print@plt>
   148d8:	b	143fc <g_strcmp0@plt+0x460>
   148dc:	movw	r3, #38352	; 0x95d0
   148e0:	mov	r2, r7
   148e4:	add	r0, sp, #60	; 0x3c
   148e8:	movt	r3, #1
   148ec:	mov	r1, #1
   148f0:	bl	13ee8 <g_set_error@plt>
   148f4:	b	14604 <g_strcmp0@plt+0x668>
   148f8:	bl	13b58 <__stack_chk_fail@plt>
   148fc:	mov	r5, r0
   14900:	mov	r7, #0
   14904:	mov	r4, r5
   14908:	cmp	r7, #0
   1490c:	beq	14918 <g_strcmp0@plt+0x97c>
   14910:	mov	r0, r7
   14914:	bl	13c24 <g_variant_unref@plt>
   14918:	ldr	r0, [sp, #100]	; 0x64
   1491c:	cmp	r0, #0
   14920:	beq	14928 <g_strcmp0@plt+0x98c>
   14924:	bl	136a8 <g_error_free@plt>
   14928:	ldr	r0, [sp, #56]	; 0x38
   1492c:	bl	13b94 <g_free@plt>
   14930:	mov	r0, r4
   14934:	bl	13e88 <_Unwind_Resume@plt>
   14938:	mov	r4, r0
   1493c:	cmp	r6, #0
   14940:	beq	1494c <g_strcmp0@plt+0x9b0>
   14944:	mov	r0, r6
   14948:	bl	13d38 <g_object_unref@plt>
   1494c:	ldr	r0, [sp, #64]	; 0x40
   14950:	bl	13b94 <g_free@plt>
   14954:	ldr	r0, [sp, #60]	; 0x3c
   14958:	cmp	r0, #0
   1495c:	bne	14924 <g_strcmp0@plt+0x988>
   14960:	b	14928 <g_strcmp0@plt+0x98c>
   14964:	mov	r5, r0
   14968:	b	14904 <g_strcmp0@plt+0x968>
   1496c:	b	148fc <g_strcmp0@plt+0x960>
   14970:	mov	r4, r0
   14974:	b	1494c <g_strcmp0@plt+0x9b0>
   14978:	mov	r4, r0
   1497c:	b	14928 <g_strcmp0@plt+0x98c>
   14980:	mov	r4, r0
   14984:	ldr	r0, [sp, #80]	; 0x50
   14988:	bl	13b94 <g_free@plt>
   1498c:	b	1494c <g_strcmp0@plt+0x9b0>
   14990:	mov	r4, r0
   14994:	b	14954 <g_strcmp0@plt+0x9b8>
   14998:	mov	r4, r0
   1499c:	mov	r6, #0
   149a0:	ldr	r0, [sp, #72]	; 0x48
   149a4:	cmp	r0, #0
   149a8:	beq	1493c <g_strcmp0@plt+0x9a0>
   149ac:	bl	136a8 <g_error_free@plt>
   149b0:	b	1493c <g_strcmp0@plt+0x9a0>
   149b4:	mov	r4, r0
   149b8:	b	149a0 <g_strcmp0@plt+0xa04>
   149bc:	mov	r4, r0
   149c0:	b	14908 <g_strcmp0@plt+0x96c>
   149c4:	mov	r4, r0
   149c8:	b	14918 <g_strcmp0@plt+0x97c>
   149cc:	ldr	r3, [sp, #92]	; 0x5c
   149d0:	mov	r4, r0
   149d4:	cmp	r3, #0
   149d8:	movne	r0, r3
   149dc:	bne	14924 <g_strcmp0@plt+0x988>
   149e0:	b	14928 <g_strcmp0@plt+0x98c>
   149e4:	b	148fc <g_strcmp0@plt+0x960>
   149e8:	mov	r5, r0
   149ec:	mov	r0, r4
   149f0:	bl	13c24 <g_variant_unref@plt>
   149f4:	b	14904 <g_strcmp0@plt+0x968>
   149f8:	mov	fp, #0
   149fc:	mov	lr, #0
   14a00:	pop	{r1}		; (ldr r1, [sp], #4)
   14a04:	mov	r2, sp
   14a08:	push	{r2}		; (str r2, [sp, #-4]!)
   14a0c:	push	{r0}		; (str r0, [sp, #-4]!)
   14a10:	ldr	ip, [pc, #16]	; 14a28 <g_strcmp0@plt+0xa8c>
   14a14:	push	{ip}		; (str ip, [sp, #-4]!)
   14a18:	ldr	r0, [pc, #12]	; 14a2c <g_strcmp0@plt+0xa90>
   14a1c:	ldr	r3, [pc, #12]	; 14a30 <g_strcmp0@plt+0xa94>
   14a20:	bl	13f3c <__libc_start_main@plt>
   14a24:	bl	139a8 <abort@plt>
   14a28:	andeq	r9, r1, r8, ror r4
   14a2c:	andeq	r3, r1, r8, lsr #31
   14a30:	andeq	r9, r1, r4, lsl r4
   14a34:	ldr	r3, [pc, #20]	; 14a50 <g_strcmp0@plt+0xab4>
   14a38:	ldr	r2, [pc, #20]	; 14a54 <g_strcmp0@plt+0xab8>
   14a3c:	add	r3, pc, r3
   14a40:	ldr	r2, [r3, r2]
   14a44:	cmp	r2, #0
   14a48:	bxeq	lr
   14a4c:	b	13f60 <__gmon_start__@plt>
   14a50:	andeq	r8, r1, ip, lsr r2
   14a54:	andeq	r0, r0, ip, ror r3
   14a58:	push	{r3, lr}
   14a5c:	movw	r0, #53252	; 0xd004
   14a60:	ldr	r3, [pc, #36]	; 14a8c <g_strcmp0@plt+0xaf0>
   14a64:	movt	r0, #2
   14a68:	rsb	r3, r0, r3
   14a6c:	cmp	r3, #6
   14a70:	popls	{r3, pc}
   14a74:	movw	r3, #0
   14a78:	movt	r3, #0
   14a7c:	cmp	r3, #0
   14a80:	popeq	{r3, pc}
   14a84:	blx	r3
   14a88:	pop	{r3, pc}
   14a8c:	andeq	sp, r2, r7
   14a90:	push	{r3, lr}
   14a94:	movw	r0, #53252	; 0xd004
   14a98:	movw	r3, #53252	; 0xd004
   14a9c:	movt	r0, #2
   14aa0:	movt	r3, #2
   14aa4:	rsb	r3, r0, r3
   14aa8:	asr	r3, r3, #2
   14aac:	add	r3, r3, r3, lsr #31
   14ab0:	asrs	r1, r3, #1
   14ab4:	popeq	{r3, pc}
   14ab8:	movw	r2, #0
   14abc:	movt	r2, #0
   14ac0:	cmp	r2, #0
   14ac4:	popeq	{r3, pc}
   14ac8:	blx	r2
   14acc:	pop	{r3, pc}
   14ad0:	push	{r4, lr}
   14ad4:	movw	r4, #53268	; 0xd014
   14ad8:	movt	r4, #2
   14adc:	ldrb	r3, [r4]
   14ae0:	cmp	r3, #0
   14ae4:	popne	{r4, pc}
   14ae8:	bl	14a58 <g_strcmp0@plt+0xabc>
   14aec:	mov	r3, #1
   14af0:	strb	r3, [r4]
   14af4:	pop	{r4, pc}
   14af8:	movw	r0, #51988	; 0xcb14
   14afc:	movt	r0, #2
   14b00:	push	{r3, lr}
   14b04:	ldr	r3, [r0]
   14b08:	cmp	r3, #0
   14b0c:	beq	14b24 <g_strcmp0@plt+0xb88>
   14b10:	movw	r3, #0
   14b14:	movt	r3, #0
   14b18:	cmp	r3, #0
   14b1c:	beq	14b24 <g_strcmp0@plt+0xb88>
   14b20:	blx	r3
   14b24:	pop	{r3, lr}
   14b28:	b	14a90 <g_strcmp0@plt+0xaf4>
   14b2c:	andeq	r0, r0, r0
   14b30:	vldr	d7, [pc, #120]	; 14bb0 <g_strcmp0@plt+0xc14>
   14b34:	vsub.f64	d0, d0, d7
   14b38:	ldr	r3, [r0, #20]
   14b3c:	vldr	s12, [r3, #24]
   14b40:	vldr	s10, [r3, #28]
   14b44:	push	{r4}		; (str r4, [sp, #-4]!)
   14b48:	movw	r0, #39024	; 0x9870
   14b4c:	ldr	r4, [r3, #12]
   14b50:	movt	r0, #1
   14b54:	ldr	ip, [r3, #8]
   14b58:	sub	r4, r4, #1
   14b5c:	sub	ip, ip, #1
   14b60:	vcvt.u32.f64	s13, d0
   14b64:	vmov	r3, s13
   14b68:	vmov	s13, r4
   14b6c:	pop	{r4}		; (ldr r4, [sp], #4)
   14b70:	vcvt.f64.u32	d5, s10
   14b74:	vcvt.f64.u32	d7, s13
   14b78:	vmov	s13, ip
   14b7c:	vcvt.f64.u32	d3, s13
   14b80:	add	r3, r3, r3, lsl #1
   14b84:	add	r0, r0, r3, lsl #3
   14b88:	vldr	d2, [r0, #8]
   14b8c:	vmls.f64	d7, d2, d7
   14b90:	vldr	d4, [r0]
   14b94:	vcvt.f64.u32	d6, s12
   14b98:	vmla.f64	d6, d3, d4
   14b9c:	vsub.f64	d7, d7, d5
   14ba0:	vstr	d6, [r1]
   14ba4:	vstr	d7, [r2]
   14ba8:	bx	lr
   14bac:	nop	{0}
   14bb0:	andeq	r0, r0, r0
   14bb4:	rsbsmi	ip, r7, r0
   14bb8:	ldr	r3, [r0, #20]
   14bbc:	ldr	r3, [r3, #20]
   14bc0:	ldr	r2, [r3, #4]
   14bc4:	cmp	r2, r1
   14bc8:	bxls	lr
   14bcc:	ldr	r3, [r3]
   14bd0:	ldr	r3, [r3, r1, lsl #2]
   14bd4:	ldr	r2, [r3, #8]
   14bd8:	cmp	r2, #0
   14bdc:	beq	14c18 <g_strcmp0@plt+0xc7c>
   14be0:	vldr	s13, [r3]
   14be4:	vcvt.f64.u32	d7, s13
   14be8:	vldr	s13, [r3, #4]
   14bec:	vcmpe.f64	d7, d0
   14bf0:	vmrs	APSR_nzcv, fpscr
   14bf4:	vcvtgt.u32.f64	s15, d0
   14bf8:	vmovgt	r2, s15
   14bfc:	vcvt.f64.u32	d7, s13
   14c00:	vcmpe.f64	d0, d7
   14c04:	strgt	r2, [r3]
   14c08:	vmrs	APSR_nzcv, fpscr
   14c0c:	vcvtgt.u32.f64	s0, d0
   14c10:	vstrgt	s0, [r3, #4]
   14c14:	bx	lr
   14c18:	vcvt.u32.f64	s0, d0
   14c1c:	mov	r2, #1
   14c20:	str	r2, [r3, #8]
   14c24:	vstr	s0, [r3]
   14c28:	bx	lr
   14c2c:	push	{r4, r5, r6, r7, lr}
   14c30:	sub	sp, sp, #12
   14c34:	mov	r5, r0
   14c38:	bl	13dd4 <g_type_class_peek_parent@plt>
   14c3c:	movw	r1, #53272	; 0xd018
   14c40:	movt	r1, #2
   14c44:	ldr	r3, [r1, #4]
   14c48:	cmp	r3, #0
   14c4c:	str	r0, [r1]
   14c50:	beq	14c60 <g_strcmp0@plt+0xcc4>
   14c54:	add	r1, r1, #4
   14c58:	mov	r0, r5
   14c5c:	bl	13660 <g_type_class_adjust_private_offset@plt>
   14c60:	bl	13720 <gtk_widget_get_type@plt>
   14c64:	mov	r6, #3
   14c68:	mov	r1, r0
   14c6c:	mov	r0, r5
   14c70:	bl	13f18 <g_type_check_class_cast@plt>
   14c74:	mov	r1, #80	; 0x50
   14c78:	mov	r7, r0
   14c7c:	mov	r0, r5
   14c80:	bl	13f18 <g_type_check_class_cast@plt>
   14c84:	mov	r1, #56	; 0x38
   14c88:	movw	r2, #21680	; 0x54b0
   14c8c:	movw	r3, #21476	; 0x53e4
   14c90:	movt	r2, #1
   14c94:	movt	r3, #1
   14c98:	str	r2, [r7, #144]	; 0x90
   14c9c:	movw	r2, #21136	; 0x5290
   14ca0:	movt	r2, #1
   14ca4:	mov	r4, r0
   14ca8:	mov	r0, r5
   14cac:	str	r3, [r4, #16]
   14cb0:	movw	r3, #19944	; 0x4de8
   14cb4:	str	r2, [r4, #12]
   14cb8:	movt	r3, #1
   14cbc:	str	r3, [r4, #24]
   14cc0:	mov	r5, #2
   14cc4:	bl	13c3c <g_type_class_add_private@plt>
   14cc8:	mov	r1, #0
   14ccc:	mov	r2, r1
   14cd0:	mov	r3, #1
   14cd4:	str	r6, [sp]
   14cd8:	movw	r0, #46768	; 0xb6b0
   14cdc:	movt	r0, #1
   14ce0:	bl	13654 <g_param_spec_boolean@plt>
   14ce4:	mov	r1, #1
   14ce8:	mov	r2, r0
   14cec:	mov	r0, r4
   14cf0:	bl	13c18 <g_object_class_install_property@plt>
   14cf4:	mov	r1, #0
   14cf8:	mov	r3, #1
   14cfc:	mov	r2, r1
   14d00:	str	r6, [sp]
   14d04:	movw	r0, #46780	; 0xb6bc
   14d08:	movt	r0, #1
   14d0c:	bl	13654 <g_param_spec_boolean@plt>
   14d10:	mov	r1, r5
   14d14:	mov	r2, r0
   14d18:	mov	r0, r4
   14d1c:	bl	13c18 <g_object_class_install_property@plt>
   14d20:	bl	13624 <cd_color_yxy_get_type@plt>
   14d24:	mov	r1, #0
   14d28:	mov	r2, r1
   14d2c:	str	r5, [sp]
   14d30:	mov	r3, r0
   14d34:	movw	r0, #46796	; 0xb6cc
   14d38:	movt	r0, #1
   14d3c:	bl	13bf4 <g_param_spec_boxed@plt>
   14d40:	mov	r1, r6
   14d44:	mov	r2, r0
   14d48:	mov	r0, r4
   14d4c:	bl	13c18 <g_object_class_install_property@plt>
   14d50:	bl	13624 <cd_color_yxy_get_type@plt>
   14d54:	mov	r1, #0
   14d58:	mov	r2, r1
   14d5c:	str	r5, [sp]
   14d60:	mov	r3, r0
   14d64:	movw	r0, #46800	; 0xb6d0
   14d68:	movt	r0, #1
   14d6c:	bl	13bf4 <g_param_spec_boxed@plt>
   14d70:	mov	r1, #4
   14d74:	mov	r2, r0
   14d78:	mov	r0, r4
   14d7c:	bl	13c18 <g_object_class_install_property@plt>
   14d80:	bl	13624 <cd_color_yxy_get_type@plt>
   14d84:	mov	r1, #0
   14d88:	mov	r2, r1
   14d8c:	str	r5, [sp]
   14d90:	mov	r3, r0
   14d94:	movw	r0, #46808	; 0xb6d8
   14d98:	movt	r0, #1
   14d9c:	bl	13bf4 <g_param_spec_boxed@plt>
   14da0:	mov	r1, #5
   14da4:	mov	r2, r0
   14da8:	mov	r0, r4
   14dac:	bl	13c18 <g_object_class_install_property@plt>
   14db0:	bl	13624 <cd_color_yxy_get_type@plt>
   14db4:	mov	r1, #0
   14db8:	mov	r2, r1
   14dbc:	str	r5, [sp]
   14dc0:	mov	r3, r0
   14dc4:	movw	r0, #46816	; 0xb6e0
   14dc8:	movt	r0, #1
   14dcc:	bl	13bf4 <g_param_spec_boxed@plt>
   14dd0:	mov	r1, #6
   14dd4:	mov	r2, r0
   14dd8:	mov	r0, r4
   14ddc:	add	sp, sp, #12
   14de0:	pop	{r4, r5, r6, r7, lr}
   14de4:	b	13c18 <g_object_class_install_property@plt>
   14de8:	ldr	r3, [r0, #20]
   14dec:	push	{r4, lr}
   14df0:	mov	r4, r0
   14df4:	ldr	r0, [r3, #16]
   14df8:	bl	13d38 <g_object_unref@plt>
   14dfc:	ldr	r3, [r4, #20]
   14e00:	ldr	r0, [r3, #44]	; 0x2c
   14e04:	bl	13bac <cd_color_yxy_free@plt>
   14e08:	ldr	r3, [r4, #20]
   14e0c:	ldr	r0, [r3, #32]
   14e10:	bl	13bac <cd_color_yxy_free@plt>
   14e14:	ldr	r3, [r4, #20]
   14e18:	ldr	r0, [r3, #36]	; 0x24
   14e1c:	bl	13bac <cd_color_yxy_free@plt>
   14e20:	ldr	r3, [r4, #20]
   14e24:	ldr	r0, [r3, #40]	; 0x28
   14e28:	bl	13bac <cd_color_yxy_free@plt>
   14e2c:	ldr	r3, [r4, #20]
   14e30:	ldr	r0, [r3, #20]
   14e34:	bl	13dec <g_ptr_array_unref@plt>
   14e38:	movw	r3, #53272	; 0xd018
   14e3c:	movt	r3, #2
   14e40:	mov	r1, #80	; 0x50
   14e44:	ldr	r0, [r3]
   14e48:	bl	13f18 <g_type_check_class_cast@plt>
   14e4c:	ldr	r3, [r0, #24]
   14e50:	mov	r0, r4
   14e54:	blx	r3
   14e58:	pop	{r4, pc}
   14e5c:	ldr	r3, [r0, #20]
   14e60:	vldr	d7, [r3, #48]	; 0x30
   14e64:	vcmp.f64	d7, #0.0
   14e68:	push	{r4, lr}
   14e6c:	mov	r4, r1
   14e70:	vmrs	APSR_nzcv, fpscr
   14e74:	bne	14e9c <g_strcmp0@plt+0xf00>
   14e78:	vldr	d0, [r1]
   14e7c:	vldr	d7, [pc, #100]	; 14ee8 <g_strcmp0@plt+0xf4c>
   14e80:	vcmpe.f64	d0, d7
   14e84:	vmrs	APSR_nzcv, fpscr
   14e88:	bpl	14ec0 <g_strcmp0@plt+0xf24>
   14e8c:	vldr	d7, [pc, #92]	; 14ef0 <g_strcmp0@plt+0xf54>
   14e90:	vmul.f64	d0, d0, d7
   14e94:	vstr	d0, [r1]
   14e98:	pop	{r4, pc}
   14e9c:	vmov.f64	d6, #112	; 0x3f800000  1.0
   14ea0:	vldr	d0, [r1]
   14ea4:	vdiv.f64	d7, d6, d7
   14ea8:	vcvt.f32.f64	s0, d0
   14eac:	vcvt.f32.f64	s1, d7
   14eb0:	bl	13d14 <powf@plt>
   14eb4:	vcvt.f64.f32	d0, s0
   14eb8:	vstr	d0, [r4]
   14ebc:	pop	{r4, pc}
   14ec0:	vcvt.f32.f64	s0, d0
   14ec4:	vldr	s1, [pc, #60]	; 14f08 <g_strcmp0@plt+0xf6c>
   14ec8:	bl	13d14 <powf@plt>
   14ecc:	vldr	d6, [pc, #36]	; 14ef8 <g_strcmp0@plt+0xf5c>
   14ed0:	vldr	d7, [pc, #40]	; 14f00 <g_strcmp0@plt+0xf64>
   14ed4:	vcvt.f64.f32	d0, s0
   14ed8:	vnmls.f64	d7, d0, d6
   14edc:	vstr	d7, [r4]
   14ee0:	pop	{r4, pc}
   14ee4:	nop	{0}
   14ee8:	stclhi	15, cr13, [pc, #-236]	; 14e04 <g_strcmp0@plt+0xe68>
   14eec:	svccc	0x00926e97
   14ef0:	svc	0x00d55556
   14ef4:	andsmi	r0, r2, sl, lsl lr
   14ef8:	strteq	sp, [r4], -pc, lsr #26
   14efc:	svccc	0x00f19581
   14f00:	subvs	sp, sp, #536870927	; 0x2000000f
   14f04:	svccc	0x00b95810
   14f08:	cdpcc	6, 14, cr6, cr6, cr6, {3}
   14f0c:	ldr	r3, [r0, #20]
   14f10:	vldr	s13, [r3, #8]
   14f14:	vcvt.f64.u32	d7, s13
   14f18:	push	{r4, lr}
   14f1c:	vpush	{d8-d13}
   14f20:	mov	r4, r0
   14f24:	vcmpe.f64	d7, d0
   14f28:	vmov.f64	d10, d0
   14f2c:	vmrs	APSR_nzcv, fpscr
   14f30:	vmov.f64	d9, d1
   14f34:	vmov.f64	d8, d3
   14f38:	bmi	14ff4 <g_strcmp0@plt+0x1058>
   14f3c:	vldr	s14, [r3, #12]
   14f40:	vcvt.f64.u32	d7, s14
   14f44:	vcmpe.f64	d7, d1
   14f48:	vmrs	APSR_nzcv, fpscr
   14f4c:	bmi	14ff4 <g_strcmp0@plt+0x1058>
   14f50:	vcmp.f64	d0, d2
   14f54:	vmrs	APSR_nzcv, fpscr
   14f58:	vcmp.f64	d1, d3
   14f5c:	movne	r2, #0
   14f60:	moveq	r2, #1
   14f64:	vmrs	APSR_nzcv, fpscr
   14f68:	movne	r3, #0
   14f6c:	moveq	r3, #1
   14f70:	tst	r2, r3
   14f74:	bne	14ff4 <g_strcmp0@plt+0x1058>
   14f78:	cmp	r3, #0
   14f7c:	bne	14ff4 <g_strcmp0@plt+0x1058>
   14f80:	cmp	r2, #0
   14f84:	beq	14ffc <g_strcmp0@plt+0x1060>
   14f88:	vcmpe.f64	d1, d3
   14f8c:	vmrs	APSR_nzcv, fpscr
   14f90:	vmovls.f64	d12, #112	; 0x3f800000  1.0
   14f94:	vmovls.f64	d11, d1
   14f98:	bhi	14fc0 <g_strcmp0@plt+0x1024>
   14f9c:	mov	r0, r4
   14fa0:	vcvt.u32.f64	s15, d11
   14fa4:	vmov.f64	d0, d10
   14fa8:	vmov	r1, s15
   14fac:	bl	14bb8 <g_strcmp0@plt+0xc1c>
   14fb0:	vadd.f64	d11, d11, d12
   14fb4:	vcmpe.f64	d8, d11
   14fb8:	vmrs	APSR_nzcv, fpscr
   14fbc:	bge	14f9c <g_strcmp0@plt+0x1000>
   14fc0:	vcmpe.f64	d9, d8
   14fc4:	vmrs	APSR_nzcv, fpscr
   14fc8:	vmovge.f64	d11, #112	; 0x3f800000  1.0
   14fcc:	blt	14ff4 <g_strcmp0@plt+0x1058>
   14fd0:	mov	r0, r4
   14fd4:	vcvt.u32.f64	s13, d8
   14fd8:	vmov.f64	d0, d10
   14fdc:	vmov	r1, s13
   14fe0:	bl	14bb8 <g_strcmp0@plt+0xc1c>
   14fe4:	vadd.f64	d8, d8, d11
   14fe8:	vcmpe.f64	d9, d8
   14fec:	vmrs	APSR_nzcv, fpscr
   14ff0:	bge	14fd0 <g_strcmp0@plt+0x1034>
   14ff4:	vpop	{d8-d13}
   14ff8:	pop	{r4, pc}
   14ffc:	vsub.f64	d2, d0, d2
   15000:	vsub.f64	d11, d1, d3
   15004:	vdiv.f64	d11, d11, d2
   15008:	vcmpe.f64	d1, d3
   1500c:	vmov.f64	d12, d1
   15010:	vmrs	APSR_nzcv, fpscr
   15014:	vmls.f64	d12, d0, d11
   15018:	vmovls.f64	d13, #112	; 0x3f800000  1.0
   1501c:	vmovls.f64	d10, d1
   15020:	bhi	1504c <g_strcmp0@plt+0x10b0>
   15024:	mov	r0, r4
   15028:	vsub.f64	d0, d10, d12
   1502c:	vcvt.u32.f64	s15, d10
   15030:	vdiv.f64	d0, d0, d11
   15034:	vmov	r1, s15
   15038:	bl	14bb8 <g_strcmp0@plt+0xc1c>
   1503c:	vadd.f64	d10, d10, d13
   15040:	vcmpe.f64	d8, d10
   15044:	vmrs	APSR_nzcv, fpscr
   15048:	bge	15024 <g_strcmp0@plt+0x1088>
   1504c:	vcmpe.f64	d9, d8
   15050:	vmrs	APSR_nzcv, fpscr
   15054:	vmovge.f64	d10, #112	; 0x3f800000  1.0
   15058:	blt	14ff4 <g_strcmp0@plt+0x1058>
   1505c:	mov	r0, r4
   15060:	vsub.f64	d0, d8, d12
   15064:	vcvt.u32.f64	s13, d8
   15068:	vdiv.f64	d0, d0, d11
   1506c:	vmov	r1, s13
   15070:	bl	14bb8 <g_strcmp0@plt+0xc1c>
   15074:	vadd.f64	d8, d8, d10
   15078:	vcmpe.f64	d9, d8
   1507c:	vmrs	APSR_nzcv, fpscr
   15080:	bge	1505c <g_strcmp0@plt+0x10c0>
   15084:	b	14ff4 <g_strcmp0@plt+0x1058>
   15088:	push	{r4, r5, r6, lr}
   1508c:	movw	r4, #53272	; 0xd018
   15090:	dmb	sy
   15094:	movt	r4, #2
   15098:	sub	sp, sp, #16
   1509c:	ldr	r5, [r4, #8]
   150a0:	dmb	sy
   150a4:	cmp	r5, #0
   150a8:	beq	150b8 <g_strcmp0@plt+0x111c>
   150ac:	ldr	r0, [r4, #8]
   150b0:	add	sp, sp, #16
   150b4:	pop	{r4, r5, r6, pc}
   150b8:	add	r0, r4, #8
   150bc:	bl	13a68 <g_once_init_enter@plt>
   150c0:	cmp	r0, #0
   150c4:	beq	150ac <g_strcmp0@plt+0x1110>
   150c8:	bl	13eac <gtk_drawing_area_get_type@plt>
   150cc:	mov	r6, r0
   150d0:	movw	r0, #46824	; 0xb6e8
   150d4:	movt	r0, #1
   150d8:	bl	13ae0 <g_intern_static_string@plt>
   150dc:	str	r5, [sp, #8]
   150e0:	mov	r3, #24
   150e4:	movw	r2, #20764	; 0x511c
   150e8:	str	r3, [sp]
   150ec:	movt	r2, #1
   150f0:	movw	r3, #19500	; 0x4c2c
   150f4:	str	r2, [sp, #4]
   150f8:	movt	r3, #1
   150fc:	mov	r2, #428	; 0x1ac
   15100:	mov	r1, r0
   15104:	mov	r0, r6
   15108:	bl	13630 <g_type_register_static_simple@plt>
   1510c:	mov	r1, r0
   15110:	add	r0, r4, #8
   15114:	bl	13d44 <g_once_init_leave@plt>
   15118:	b	150ac <g_strcmp0@plt+0x1110>
   1511c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15120:	mov	r8, r0
   15124:	bl	15088 <g_strcmp0@plt+0x10ec>
   15128:	movw	r7, #838	; 0x346
   1512c:	movt	r7, #16340	; 0x3fd4
   15130:	mov	r1, r0
   15134:	mov	r0, r8
   15138:	bl	13a14 <g_type_instance_get_private@plt>
   1513c:	mov	r3, #1
   15140:	mov	r4, r0
   15144:	str	r0, [r8, #20]
   15148:	str	r3, [r4]
   1514c:	movw	r0, #15252	; 0x3b94
   15150:	str	r3, [r4, #4]
   15154:	movt	r0, #1
   15158:	bl	13948 <g_ptr_array_new_with_free_func@plt>
   1515c:	ldr	r6, [r8, #20]
   15160:	str	r0, [r4, #20]
   15164:	bl	13e40 <cd_color_yxy_new@plt>
   15168:	ldr	r5, [r8, #20]
   1516c:	str	r0, [r6, #32]
   15170:	movw	r6, #25480	; 0x6388
   15174:	bl	13e40 <cd_color_yxy_new@plt>
   15178:	ldr	r4, [r8, #20]
   1517c:	movt	r6, #56413	; 0xdc5d
   15180:	str	r0, [r5, #36]	; 0x24
   15184:	movw	r5, #4089	; 0xff9
   15188:	bl	13e40 <cd_color_yxy_new@plt>
   1518c:	ldr	sl, [r8, #20]
   15190:	movt	r5, #16341	; 0x3fd5
   15194:	str	r0, [r4, #40]	; 0x28
   15198:	movw	r4, #17721	; 0x4539
   1519c:	bl	13e40 <cd_color_yxy_new@plt>
   151a0:	ldr	r1, [r8, #20]
   151a4:	vldr	d2, [pc, #180]	; 15260 <g_strcmp0@plt+0x12c4>
   151a8:	vldr	d3, [pc, #184]	; 15268 <g_strcmp0@plt+0x12cc>
   151ac:	vldr	d4, [pc, #188]	; 15270 <g_strcmp0@plt+0x12d4>
   151b0:	vldr	d5, [pc, #192]	; 15278 <g_strcmp0@plt+0x12dc>
   151b4:	ldr	lr, [r1, #36]	; 0x24
   151b8:	vldr	d6, [pc, #192]	; 15280 <g_strcmp0@plt+0x12e4>
   151bc:	ldr	ip, [r1, #40]	; 0x28
   151c0:	vldr	d7, [pc, #192]	; 15288 <g_strcmp0@plt+0x12ec>
   151c4:	ldr	r9, [r1, #32]
   151c8:	mov	r2, #0
   151cc:	mov	r3, #0
   151d0:	movt	r4, #29255	; 0x7247
   151d4:	str	r0, [sl, #44]	; 0x2c
   151d8:	vstr	d2, [r9, #8]
   151dc:	ldr	r0, [r1, #44]	; 0x2c
   151e0:	vstr	d3, [r9, #16]
   151e4:	vstr	d4, [lr, #8]
   151e8:	vstr	d5, [lr, #16]
   151ec:	vstr	d6, [ip, #8]
   151f0:	vstr	d7, [ip, #16]
   151f4:	strd	r4, [r0, #16]
   151f8:	strd	r6, [r0, #8]
   151fc:	strd	r2, [r1, #48]	; 0x30
   15200:	bl	13720 <gtk_widget_get_type@plt>
   15204:	mov	r1, r0
   15208:	mov	r0, r8
   1520c:	bl	13738 <g_type_check_instance_cast@plt>
   15210:	bl	13cf0 <gtk_widget_get_pango_context@plt>
   15214:	mov	r1, #4
   15218:	mov	r4, r0
   1521c:	bl	1369c <pango_context_set_base_gravity@plt>
   15220:	mov	r0, r4
   15224:	ldr	r4, [r8, #20]
   15228:	bl	13d74 <pango_layout_new@plt>
   1522c:	str	r0, [r4, #16]
   15230:	movw	r0, #46840	; 0xb6f8
   15234:	movt	r0, #1
   15238:	bl	13e7c <pango_font_description_from_string@plt>
   1523c:	ldr	r3, [r8, #20]
   15240:	mov	r4, r0
   15244:	mov	r1, r0
   15248:	ldr	r0, [r3, #16]
   1524c:	bl	13f54 <pango_layout_set_font_description@plt>
   15250:	mov	r0, r4
   15254:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15258:	b	13990 <pango_font_description_free@plt>
   1525c:	nop	{0}
   15260:			; <UNDEFINED> instruction: 0x47ae147b
   15264:	svccc	0x00e47ae1
   15268:	mvnpl	r8, pc, lsl r5
   1526c:	svccc	0x00d51eb8
   15270:	teqcc	r3, #-872415232	; 0xcc000000
   15274:	svccc	0x00d33333
   15278:	teqcc	r3, #-872415232	; 0xcc000000
   1527c:	svccc	0x00e33333
   15280:	teqcc	r3, #-872415232	; 0xcc000000
   15284:	svccc	0x00c33333
   15288:	bl	fe15cd70 <__bss_end__@@Base+0xfe12fd1c>
   1528c:	svccc	0x00aeb851
   15290:	push	{r4, r5, r6, r7, r8, r9, lr}
   15294:	sub	sp, sp, #28
   15298:	mov	r5, r1
   1529c:	mov	r6, r0
   152a0:	mov	r7, r2
   152a4:	mov	r9, r3
   152a8:	bl	15088 <g_strcmp0@plt+0x10ec>
   152ac:	mov	r1, r0
   152b0:	mov	r0, r6
   152b4:	bl	13738 <g_type_check_instance_cast@plt>
   152b8:	sub	ip, r5, #1
   152bc:	mov	r4, r0
   152c0:	ldr	r8, [r0, #20]
   152c4:	cmp	ip, #5
   152c8:	ldrls	pc, [pc, ip, lsl #2]
   152cc:	b	15384 <g_strcmp0@plt+0x13e8>
   152d0:	andeq	r5, r1, r8, lsr #6
   152d4:	andeq	r5, r1, r8, lsr r3
   152d8:	andeq	r5, r1, r8, asr #6
   152dc:	andeq	r5, r1, ip, asr r3
   152e0:	andeq	r5, r1, r0, ror r3
   152e4:	andeq	r5, r1, r8, ror #5
   152e8:	mov	r0, r7
   152ec:	bl	13f30 <g_value_get_boxed@plt>
   152f0:	ldr	r1, [r8, #44]	; 0x2c
   152f4:	bl	13834 <cd_color_yxy_copy@plt>
   152f8:	bl	13720 <gtk_widget_get_type@plt>
   152fc:	mov	r5, r0
   15300:	mov	r0, r4
   15304:	mov	r1, r5
   15308:	bl	13738 <g_type_check_instance_cast@plt>
   1530c:	bl	13780 <gtk_widget_hide@plt>
   15310:	mov	r0, r4
   15314:	mov	r1, r5
   15318:	bl	13738 <g_type_check_instance_cast@plt>
   1531c:	add	sp, sp, #28
   15320:	pop	{r4, r5, r6, r7, r8, r9, lr}
   15324:	b	13d2c <gtk_widget_show@plt>
   15328:	mov	r0, r7
   1532c:	bl	13a08 <g_value_get_boolean@plt>
   15330:	str	r0, [r8]
   15334:	b	152f8 <g_strcmp0@plt+0x135c>
   15338:	mov	r0, r7
   1533c:	bl	13a08 <g_value_get_boolean@plt>
   15340:	str	r0, [r8, #4]
   15344:	b	152f8 <g_strcmp0@plt+0x135c>
   15348:	mov	r0, r7
   1534c:	bl	13f30 <g_value_get_boxed@plt>
   15350:	ldr	r1, [r8, #32]
   15354:	bl	13834 <cd_color_yxy_copy@plt>
   15358:	b	152f8 <g_strcmp0@plt+0x135c>
   1535c:	mov	r0, r7
   15360:	bl	13f30 <g_value_get_boxed@plt>
   15364:	ldr	r1, [r8, #36]	; 0x24
   15368:	bl	13834 <cd_color_yxy_copy@plt>
   1536c:	b	152f8 <g_strcmp0@plt+0x135c>
   15370:	mov	r0, r7
   15374:	bl	13f30 <g_value_get_boxed@plt>
   15378:	ldr	r1, [r8, #40]	; 0x28
   1537c:	bl	13834 <cd_color_yxy_copy@plt>
   15380:	b	152f8 <g_strcmp0@plt+0x135c>
   15384:	ldm	r9, {r3, r8}
   15388:	ldr	r0, [r3]
   1538c:	bl	137c8 <g_type_name@plt>
   15390:	ldr	r3, [r6]
   15394:	mov	r7, r0
   15398:	ldr	r0, [r3]
   1539c:	bl	137c8 <g_type_name@plt>
   153a0:	mov	r2, #448	; 0x1c0
   153a4:	str	r8, [sp, #12]
   153a8:	movw	r3, #46928	; 0xb750
   153ac:	str	r7, [sp, #16]
   153b0:	movt	r3, #1
   153b4:	str	r5, [sp, #8]
   153b8:	mov	r1, #16
   153bc:	stm	sp, {r2, r3}
   153c0:	movw	r2, #46848	; 0xb700
   153c4:	movw	r3, #46904	; 0xb738
   153c8:	movt	r2, #1
   153cc:	movt	r3, #1
   153d0:	str	r0, [sp, #20]
   153d4:	movw	r0, #38412	; 0x960c
   153d8:	movt	r0, #1
   153dc:	bl	137b0 <g_log@plt>
   153e0:	b	152f8 <g_strcmp0@plt+0x135c>
   153e4:	push	{r4, r5, r6, r7, lr}
   153e8:	sub	sp, sp, #28
   153ec:	mov	r4, r1
   153f0:	mov	r5, r0
   153f4:	mov	r7, r2
   153f8:	mov	r6, r3
   153fc:	bl	15088 <g_strcmp0@plt+0x10ec>
   15400:	mov	r1, r0
   15404:	mov	r0, r5
   15408:	bl	13738 <g_type_check_instance_cast@plt>
   1540c:	cmp	r4, #1
   15410:	beq	15498 <g_strcmp0@plt+0x14fc>
   15414:	cmp	r4, #2
   15418:	bne	15434 <g_strcmp0@plt+0x1498>
   1541c:	ldr	r3, [r0, #20]
   15420:	mov	r0, r7
   15424:	ldr	r1, [r3, #4]
   15428:	add	sp, sp, #28
   1542c:	pop	{r4, r5, r6, r7, lr}
   15430:	b	139e4 <g_value_set_boolean@plt>
   15434:	ldm	r6, {r3, r7}
   15438:	ldr	r0, [r3]
   1543c:	bl	137c8 <g_type_name@plt>
   15440:	ldr	r3, [r5]
   15444:	mov	r6, r0
   15448:	ldr	r0, [r3]
   1544c:	bl	137c8 <g_type_name@plt>
   15450:	str	r7, [sp, #12]
   15454:	str	r6, [sp, #16]
   15458:	movw	r2, #417	; 0x1a1
   1545c:	str	r4, [sp, #8]
   15460:	mov	r1, #16
   15464:	movw	r3, #46928	; 0xb750
   15468:	movt	r3, #1
   1546c:	stm	sp, {r2, r3}
   15470:	movw	r2, #46848	; 0xb700
   15474:	movw	r3, #46904	; 0xb738
   15478:	movt	r2, #1
   1547c:	movt	r3, #1
   15480:	str	r0, [sp, #20]
   15484:	movw	r0, #38412	; 0x960c
   15488:	movt	r0, #1
   1548c:	bl	137b0 <g_log@plt>
   15490:	add	sp, sp, #28
   15494:	pop	{r4, r5, r6, r7, pc}
   15498:	ldr	r3, [r0, #20]
   1549c:	mov	r0, r7
   154a0:	ldr	r1, [r3]
   154a4:	add	sp, sp, #28
   154a8:	pop	{r4, r5, r6, r7, lr}
   154ac:	b	139e4 <g_value_set_boolean@plt>
   154b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   154b4:	vpush	{d8-d15}
   154b8:	movw	r9, #53256	; 0xd008
   154bc:	movt	r9, #2
   154c0:	sub	sp, sp, #132	; 0x84
   154c4:	subs	r4, r0, #0
   154c8:	mov	r6, r1
   154cc:	ldr	r3, [r9]
   154d0:	str	r3, [sp, #124]	; 0x7c
   154d4:	beq	160a8 <g_strcmp0@plt+0x210c>
   154d8:	bl	15088 <g_strcmp0@plt+0x10ec>
   154dc:	ldr	r3, [r4]
   154e0:	cmp	r3, #0
   154e4:	beq	154f4 <g_strcmp0@plt+0x1558>
   154e8:	ldr	r3, [r3]
   154ec:	cmp	r0, r3
   154f0:	beq	15544 <g_strcmp0@plt+0x15a8>
   154f4:	mov	r1, r0
   154f8:	mov	r0, r4
   154fc:	bl	13c84 <g_type_check_instance_is_a@plt>
   15500:	cmp	r0, #0
   15504:	bne	15544 <g_strcmp0@plt+0x15a8>
   15508:	movw	r0, #38412	; 0x960c
   1550c:	movw	r2, #46952	; 0xb768
   15510:	movt	r0, #1
   15514:	movt	r2, #1
   15518:	ldr	r1, [pc, #32]	; 15540 <g_strcmp0@plt+0x15a4>
   1551c:	bl	13600 <g_return_if_fail_warning@plt>
   15520:	ldr	r2, [sp, #124]	; 0x7c
   15524:	mov	r0, #0
   15528:	ldr	r3, [r9]
   1552c:	cmp	r2, r3
   15530:	bne	160c4 <g_strcmp0@plt+0x2128>
   15534:	add	sp, sp, #132	; 0x84
   15538:	vpop	{d8-d15}
   1553c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15540:	muleq	r1, r8, r6
   15544:	mov	r0, r6
   15548:	bl	138a0 <cairo_save@plt>
   1554c:	add	r1, sp, #108	; 0x6c
   15550:	mov	r0, r4
   15554:	bl	13a38 <gtk_widget_get_allocation@plt>
   15558:	ldr	r5, [sp, #120]	; 0x78
   1555c:	ldr	r7, [sp, #116]	; 0x74
   15560:	vmov.f32	s14, #52	; 0x41a00000  20.0
   15564:	ldr	r3, [r4, #20]
   15568:	vldr	d0, [pc, #528]	; 15780 <g_strcmp0@plt+0x17e4>
   1556c:	vmov	s7, r5
   15570:	mov	r0, r6
   15574:	vmov	s8, r7
   15578:	str	r5, [r3, #12]
   1557c:	sub	r5, r5, #1
   15580:	str	r7, [r3, #8]
   15584:	sub	r7, r7, #1
   15588:	vmov.f32	s15, #50	; 0x41900000  18.0
   1558c:	vcvt.f32.u32	s12, s7
   15590:	vcvt.f32.u32	s13, s8
   15594:	vdiv.f32	s14, s12, s14
   15598:	vdiv.f32	s15, s13, s15
   1559c:	vcvt.u32.f32	s14, s14
   155a0:	vcvt.u32.f32	s15, s15
   155a4:	vstr	s14, [r3, #28]
   155a8:	vstr	s15, [r3, #24]
   155ac:	vcvt.f64.s32	d2, s8
   155b0:	vcvt.f64.s32	d3, s7
   155b4:	vmov.f64	d1, d0
   155b8:	bl	13804 <cairo_rectangle@plt>
   155bc:	mov	r0, r6
   155c0:	vmov.f64	d0, #112	; 0x3f800000  1.0
   155c4:	vmov.f64	d2, d0
   155c8:	vmov.f64	d1, d0
   155cc:	bl	138b8 <cairo_set_source_rgb@plt>
   155d0:	mov	r0, r6
   155d4:	bl	13f0c <cairo_fill@plt>
   155d8:	vmov	s4, r7
   155dc:	vmov	s6, r5
   155e0:	mov	r0, r6
   155e4:	vmov.f64	d0, #96	; 0x3f000000  0.5
   155e8:	vcvt.f64.s32	d3, s6
   155ec:	vmov.f64	d1, d0
   155f0:	vcvt.f64.s32	d2, s4
   155f4:	bl	13804 <cairo_rectangle@plt>
   155f8:	vldr	d0, [pc, #392]	; 15788 <g_strcmp0@plt+0x17ec>
   155fc:	mov	r0, r6
   15600:	vmov.f64	d1, d0
   15604:	vmov.f64	d2, d0
   15608:	bl	138b8 <cairo_set_source_rgb@plt>
   1560c:	mov	r0, r6
   15610:	vmov.f64	d0, #112	; 0x3f800000  1.0
   15614:	bl	135a0 <cairo_set_line_width@plt>
   15618:	mov	r0, r6
   1561c:	bl	13ec4 <cairo_stroke@plt>
   15620:	ldr	r8, [r4, #20]
   15624:	ldr	r3, [r8]
   15628:	cmp	r3, #0
   1562c:	bne	15d84 <g_strcmp0@plt+0x1de8>
   15630:	ldr	r0, [r8, #20]
   15634:	mov	r1, #0
   15638:	bl	13ac8 <g_ptr_array_set_size@plt>
   1563c:	ldr	r3, [r8, #12]
   15640:	cmp	r3, #0
   15644:	movne	r5, #0
   15648:	beq	15670 <g_strcmp0@plt+0x16d4>
   1564c:	mov	r0, #12
   15650:	add	r5, r5, #1
   15654:	bl	13df8 <g_malloc0@plt>
   15658:	mov	r1, r0
   1565c:	ldr	r0, [r8, #20]
   15660:	bl	13e10 <g_ptr_array_add@plt>
   15664:	ldr	r3, [r8, #12]
   15668:	cmp	r5, r3
   1566c:	bcc	1564c <g_strcmp0@plt+0x16b0>
   15670:	mov	r0, r4
   15674:	vldr	d0, [pc, #276]	; 15790 <g_strcmp0@plt+0x17f4>
   15678:	add	r1, sp, #72	; 0x48
   1567c:	add	r2, sp, #80	; 0x50
   15680:	bl	14b30 <g_strcmp0@plt+0xb94>
   15684:	movw	r5, #381	; 0x17d
   15688:	movw	r7, #701	; 0x2bd
   1568c:	vmov	s9, r5
   15690:	add	r1, sp, #56	; 0x38
   15694:	add	r2, sp, #64	; 0x40
   15698:	mov	r0, r4
   1569c:	vcvt.f64.s32	d0, s9
   156a0:	add	r5, r5, #1
   156a4:	bl	14b30 <g_strcmp0@plt+0xb94>
   156a8:	mov	r0, r4
   156ac:	vldr	d0, [sp, #56]	; 0x38
   156b0:	vldr	d1, [sp, #64]	; 0x40
   156b4:	vldr	d2, [sp, #72]	; 0x48
   156b8:	vldr	d3, [sp, #80]	; 0x50
   156bc:	bl	14f0c <g_strcmp0@plt+0xf70>
   156c0:	ldrd	r0, [sp, #56]	; 0x38
   156c4:	ldrd	r2, [sp, #64]	; 0x40
   156c8:	cmp	r5, r7
   156cc:	strd	r0, [sp, #72]	; 0x48
   156d0:	strd	r2, [sp, #80]	; 0x50
   156d4:	bne	1568c <g_strcmp0@plt+0x16f0>
   156d8:	add	r1, sp, #56	; 0x38
   156dc:	add	r2, sp, #64	; 0x40
   156e0:	mov	r0, r4
   156e4:	vldr	d0, [pc, #164]	; 15790 <g_strcmp0@plt+0x17f4>
   156e8:	bl	14b30 <g_strcmp0@plt+0xb94>
   156ec:	mov	r0, r4
   156f0:	vldr	d0, [sp, #56]	; 0x38
   156f4:	vldr	d1, [sp, #64]	; 0x40
   156f8:	vldr	d2, [sp, #72]	; 0x48
   156fc:	vldr	d3, [sp, #80]	; 0x50
   15700:	bl	14f0c <g_strcmp0@plt+0xf70>
   15704:	mov	r0, r6
   15708:	bl	138a0 <cairo_save@plt>
   1570c:	vldr	s12, [r8, #12]
   15710:	vcvt.f64.u32	d7, s12
   15714:	vcmpe.f64	d7, #0.0
   15718:	vmrs	APSR_nzcv, fpscr
   1571c:	ble	15ae0 <g_strcmp0@plt+0x1b44>
   15720:	vmov.f64	d11, #112	; 0x3f800000  1.0
   15724:	vldr	d9, [pc, #84]	; 15780 <g_strcmp0@plt+0x17e4>
   15728:	vstr	d9, [sp, #40]	; 0x28
   1572c:	vldr	d10, [sp, #40]	; 0x28
   15730:	ldr	r3, [r8, #20]
   15734:	ldr	r3, [r3]
   15738:	vcvt.u32.f64	s13, d10
   1573c:	vmov	r2, s13
   15740:	ldr	r5, [r3, r2, lsl #2]
   15744:	ldr	r3, [r5, #8]
   15748:	cmp	r3, #0
   1574c:	beq	15ac4 <g_strcmp0@plt+0x1b28>
   15750:	vldr	s19, [r5]
   15754:	vldr	s24, [r5, #4]
   15758:	vcvt.f64.u32	d10, s19
   1575c:	vcvt.f64.u32	d7, s24
   15760:	vcmpe.f64	d7, d10
   15764:	vmrs	APSR_nzcv, fpscr
   15768:	ble	15ac4 <g_strcmp0@plt+0x1b28>
   1576c:	vcvt.f64.u32	d9, s13
   15770:	vmov.f64	d14, d10
   15774:	vstr	d9, [sp, #48]	; 0x30
   15778:	b	15798 <g_strcmp0@plt+0x17fc>
   1577c:	nop	{0}
	...
   15788:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   1578c:	svccc	0x00b99999
   15790:	andeq	r0, r0, r0
   15794:	rsbsmi	ip, r7, r0
   15798:	ldr	r3, [r4, #20]
   1579c:	ldr	r2, [r3, #40]	; 0x28
   157a0:	vldr	d4, [r2, #8]
   157a4:	vldr	d0, [r2, #16]
   157a8:	vadd.f64	d9, d4, d0
   157ac:	ldr	r2, [r3, #32]
   157b0:	vldr	d5, [r2, #8]
   157b4:	vldr	d3, [r2, #16]
   157b8:	ldr	r2, [r3, #36]	; 0x24
   157bc:	vldr	d2, [r2, #8]
   157c0:	vldr	d6, [r2, #16]
   157c4:	ldr	r2, [r3, #44]	; 0x2c
   157c8:	vldr	d7, [r2, #16]
   157cc:	vldr	d10, [r2, #8]
   157d0:	ldr	r0, [r3, #28]
   157d4:	ldr	r2, [r3, #12]
   157d8:	ldr	r1, [r3, #24]
   157dc:	sub	r2, r2, #1
   157e0:	ldr	r3, [r3, #8]
   157e4:	vsub.f64	d9, d11, d9
   157e8:	sub	r3, r3, #1
   157ec:	vadd.f64	d8, d5, d3
   157f0:	vmul.f64	d12, d2, d9
   157f4:	vsub.f64	d8, d11, d8
   157f8:	vstr	d12, [sp, #8]
   157fc:	vadd.f64	d1, d2, d6
   15800:	vmul.f64	d12, d8, d4
   15804:	vsub.f64	d1, d11, d1
   15808:	vstr	d12, [sp, #24]
   1580c:	vldr	d12, [sp, #8]
   15810:	vnmls.f64	d12, d1, d4
   15814:	vstr	d12, [sp, #8]
   15818:	vmul.f64	d12, d1, d0
   1581c:	vstr	d12, [sp]
   15820:	vmul.f64	d12, d5, d1
   15824:	vstr	d12, [sp, #32]
   15828:	vldr	d12, [sp, #24]
   1582c:	vnmls.f64	d12, d5, d9
   15830:	vstr	d12, [sp, #24]
   15834:	vmul.f64	d12, d3, d9
   15838:	vstr	d12, [sp, #16]
   1583c:	vldr	d12, [sp, #32]
   15840:	vnmls.f64	d12, d8, d2
   15844:	vstr	d12, [sp, #32]
   15848:	vldr	d12, [sp]
   1584c:	vnmls.f64	d12, d6, d9
   15850:	vstr	d12, [sp]
   15854:	vldr	d12, [sp, #16]
   15858:	vnmls.f64	d12, d8, d0
   1585c:	vmul.f64	d9, d8, d6
   15860:	vstr	d12, [sp, #16]
   15864:	vldr	d12, [sp, #8]
   15868:	vmul.f64	d15, d6, d4
   1586c:	vmul.f64	d8, d7, d12
   15870:	vldr	d12, [sp, #24]
   15874:	vmul.f64	d13, d5, d0
   15878:	vnmls.f64	d9, d3, d1
   1587c:	vnmls.f64	d15, d2, d0
   15880:	vmul.f64	d1, d7, d12
   15884:	vldr	d12, [sp]
   15888:	vmla.f64	d8, d10, d12
   1588c:	vadd.f64	d0, d10, d7
   15890:	vnmls.f64	d13, d3, d4
   15894:	vldr	d4, [sp, #32]
   15898:	vmul.f64	d12, d3, d2
   1589c:	vmul.f64	d2, d7, d4
   158a0:	vldr	d4, [sp, #16]
   158a4:	vsub.f64	d0, d11, d0
   158a8:	vnmls.f64	d12, d5, d6
   158ac:	vmov	s10, r1
   158b0:	vmla.f64	d1, d10, d4
   158b4:	vmov	s9, r0
   158b8:	vmla.f64	d2, d10, d9
   158bc:	vldr	d10, [sp, #40]	; 0x28
   158c0:	vmla.f64	d8, d0, d15
   158c4:	vmla.f64	d1, d0, d13
   158c8:	vmla.f64	d2, d0, d12
   158cc:	vdiv.f64	d0, d8, d7
   158d0:	vdiv.f64	d1, d1, d7
   158d4:	vcvt.f64.u32	d3, s9
   158d8:	vldr	d4, [sp, #8]
   158dc:	vdiv.f64	d4, d4, d0
   158e0:	vdiv.f64	d2, d2, d7
   158e4:	vstr	d4, [sp, #8]
   158e8:	vldr	d6, [sp, #24]
   158ec:	vadd.f64	d3, d10, d3
   158f0:	vmov	s21, r2
   158f4:	mov	r2, #0
   158f8:	vcvt.f64.u32	d7, s21
   158fc:	vldr	d10, [sp, #32]
   15900:	vdiv.f64	d3, d3, d7
   15904:	vdiv.f64	d7, d6, d1
   15908:	vmov	s13, r3
   1590c:	mov	r3, #0
   15910:	vcvt.f64.u32	d8, s13
   15914:	vcvt.f64.u32	d4, s10
   15918:	vldr	d5, [sp]
   1591c:	vdiv.f64	d6, d10, d2
   15920:	vdiv.f64	d10, d5, d0
   15924:	vldr	d5, [sp, #16]
   15928:	vdiv.f64	d5, d5, d1
   1592c:	vsub.f64	d4, d14, d4
   15930:	vstr	d5, [sp]
   15934:	vdiv.f64	d4, d4, d8
   15938:	vdiv.f64	d8, d9, d2
   1593c:	vldr	d9, [sp, #8]
   15940:	vdiv.f64	d0, d15, d0
   15944:	vdiv.f64	d1, d13, d1
   15948:	vsub.f64	d3, d11, d3
   1594c:	vdiv.f64	d2, d12, d2
   15950:	vmul.f64	d5, d3, d9
   15954:	vmul.f64	d7, d3, d7
   15958:	vmul.f64	d6, d3, d6
   1595c:	vmla.f64	d5, d4, d10
   15960:	vldr	d10, [sp]
   15964:	vadd.f64	d3, d4, d3
   15968:	vmla.f64	d7, d4, d10
   1596c:	vmla.f64	d6, d4, d8
   15970:	vmov	d4, r2, r3
   15974:	vsub.f64	d3, d11, d3
   15978:	vmla.f64	d5, d3, d0
   1597c:	vmla.f64	d7, d3, d1
   15980:	vstr	d5, [sp, #64]	; 0x40
   15984:	vmla.f64	d6, d3, d2
   15988:	vstr	d7, [sp, #72]	; 0x48
   1598c:	vcmpe.f64	d5, #0.0
   15990:	vstr	d6, [sp, #80]	; 0x50
   15994:	vmrs	APSR_nzcv, fpscr
   15998:	vmovle.f64	d4, d5
   1599c:	vcmpe.f64	d7, d4
   159a0:	vmrs	APSR_nzcv, fpscr
   159a4:	vmovle.f64	d4, d7
   159a8:	vcmpe.f64	d6, d4
   159ac:	vmrs	APSR_nzcv, fpscr
   159b0:	vmovle.f64	d4, d6
   159b4:	vcmpe.f64	d4, #0.0
   159b8:	vmrs	APSR_nzcv, fpscr
   159bc:	vsubmi.f64	d7, d7, d4
   159c0:	vsubmi.f64	d6, d6, d4
   159c4:	vstrmi	d7, [sp, #72]	; 0x48
   159c8:	vsubmi.f64	d5, d5, d4
   159cc:	vstrmi	d6, [sp, #80]	; 0x50
   159d0:	vcmpe.f64	d7, d6
   159d4:	vstrmi	d5, [sp, #64]	; 0x40
   159d8:	vmovmi.f64	d8, #104	; 0x3f400000  0.750
   159dc:	vmovpl.f64	d8, #112	; 0x3f800000  1.0
   159e0:	vmrs	APSR_nzcv, fpscr
   159e4:	ble	159fc <g_strcmp0@plt+0x1a60>
   159e8:	vcmpe.f64	d7, d5
   159ec:	vmrs	APSR_nzcv, fpscr
   159f0:	bpl	15a18 <g_strcmp0@plt+0x1a7c>
   159f4:	vmov.f64	d4, d5
   159f8:	b	15a1c <g_strcmp0@plt+0x1a80>
   159fc:	vcmpe.f64	d6, d5
   15a00:	vmrs	APSR_nzcv, fpscr
   15a04:	bmi	159f4 <g_strcmp0@plt+0x1a58>
   15a08:	vcmpe.f64	d7, d6
   15a0c:	vmrs	APSR_nzcv, fpscr
   15a10:	vmovle.f64	d4, d6
   15a14:	ble	15a1c <g_strcmp0@plt+0x1a80>
   15a18:	vmov.f64	d4, d7
   15a1c:	vcmpe.f64	d4, #0.0
   15a20:	vmrs	APSR_nzcv, fpscr
   15a24:	ble	15a40 <g_strcmp0@plt+0x1aa4>
   15a28:	vdiv.f64	d5, d5, d4
   15a2c:	vdiv.f64	d7, d7, d4
   15a30:	vstr	d5, [sp, #64]	; 0x40
   15a34:	vdiv.f64	d6, d6, d4
   15a38:	vstr	d7, [sp, #72]	; 0x48
   15a3c:	vstr	d6, [sp, #80]	; 0x50
   15a40:	mov	r0, r4
   15a44:	add	r1, sp, #64	; 0x40
   15a48:	bl	14e5c <g_strcmp0@plt+0xec0>
   15a4c:	mov	r0, r4
   15a50:	add	r1, sp, #72	; 0x48
   15a54:	bl	14e5c <g_strcmp0@plt+0xec0>
   15a58:	add	r1, sp, #80	; 0x50
   15a5c:	mov	r0, r4
   15a60:	bl	14e5c <g_strcmp0@plt+0xec0>
   15a64:	vldr	d0, [sp, #64]	; 0x40
   15a68:	vldr	d1, [sp, #72]	; 0x48
   15a6c:	vmul.f64	d0, d8, d0
   15a70:	mov	r0, r6
   15a74:	vldr	d2, [sp, #80]	; 0x50
   15a78:	vmul.f64	d1, d8, d1
   15a7c:	vmul.f64	d2, d8, d2
   15a80:	bl	138b8 <cairo_set_source_rgb@plt>
   15a84:	mov	r0, r6
   15a88:	vldr	d1, [sp, #48]	; 0x30
   15a8c:	vmov.f64	d2, #112	; 0x3f800000  1.0
   15a90:	vcvt.u32.f64	s0, d14
   15a94:	vmov.f64	d3, d2
   15a98:	vcvt.f64.u32	d0, s0
   15a9c:	bl	13804 <cairo_rectangle@plt>
   15aa0:	mov	r0, r6
   15aa4:	bl	13f0c <cairo_fill@plt>
   15aa8:	vldr	s7, [r5, #4]
   15aac:	vadd.f64	d14, d14, d11
   15ab0:	vcvt.f64.u32	d7, s7
   15ab4:	vcmpe.f64	d14, d7
   15ab8:	vmrs	APSR_nzcv, fpscr
   15abc:	bmi	15798 <g_strcmp0@plt+0x17fc>
   15ac0:	vldr	s12, [r8, #12]
   15ac4:	vldr	d9, [sp, #40]	; 0x28
   15ac8:	vadd.f64	d9, d9, d11
   15acc:	vcvt.f64.u32	d7, s12
   15ad0:	vstr	d9, [sp, #40]	; 0x28
   15ad4:	vcmpe.f64	d9, d7
   15ad8:	vmrs	APSR_nzcv, fpscr
   15adc:	bmi	1572c <g_strcmp0@plt+0x1790>
   15ae0:	mov	r0, r6
   15ae4:	movw	r5, #381	; 0x17d
   15ae8:	bl	13db0 <cairo_restore@plt>
   15aec:	mov	r0, r6
   15af0:	bl	138a0 <cairo_save@plt>
   15af4:	mov	r0, r6
   15af8:	vmov.f64	d0, #0	; 0x40000000  2.0
   15afc:	movw	r7, #701	; 0x2bd
   15b00:	bl	135a0 <cairo_set_line_width@plt>
   15b04:	mov	r0, r6
   15b08:	vmov.f64	d0, #96	; 0x3f000000  0.5
   15b0c:	vmov.f64	d1, d0
   15b10:	vmov.f64	d2, d0
   15b14:	bl	138b8 <cairo_set_source_rgb@plt>
   15b18:	mov	r0, r4
   15b1c:	vldr	d0, [pc, #-916]	; 15790 <g_strcmp0@plt+0x17f4>
   15b20:	add	r1, sp, #72	; 0x48
   15b24:	add	r2, sp, #80	; 0x50
   15b28:	bl	14b30 <g_strcmp0@plt+0xb94>
   15b2c:	mov	r0, r6
   15b30:	vldr	d0, [sp, #72]	; 0x48
   15b34:	vldr	d1, [sp, #80]	; 0x50
   15b38:	bl	1375c <cairo_move_to@plt>
   15b3c:	vmov	s8, r5
   15b40:	mov	r0, r4
   15b44:	add	r1, sp, #56	; 0x38
   15b48:	add	r2, sp, #64	; 0x40
   15b4c:	vcvt.f64.s32	d0, s8
   15b50:	bl	14b30 <g_strcmp0@plt+0xb94>
   15b54:	vldr	d0, [sp, #56]	; 0x38
   15b58:	vldr	d7, [sp, #72]	; 0x48
   15b5c:	vldr	d1, [sp, #64]	; 0x40
   15b60:	vcmp.f64	d0, d7
   15b64:	vmrs	APSR_nzcv, fpscr
   15b68:	bne	15b7c <g_strcmp0@plt+0x1be0>
   15b6c:	vldr	d7, [sp, #80]	; 0x50
   15b70:	vcmp.f64	d1, d7
   15b74:	vmrs	APSR_nzcv, fpscr
   15b78:	beq	15b94 <g_strcmp0@plt+0x1bf8>
   15b7c:	mov	r0, r6
   15b80:	bl	13ba0 <cairo_line_to@plt>
   15b84:	ldrd	r0, [sp, #56]	; 0x38
   15b88:	ldrd	r2, [sp, #64]	; 0x40
   15b8c:	strd	r0, [sp, #72]	; 0x48
   15b90:	strd	r2, [sp, #80]	; 0x50
   15b94:	add	r5, r5, #1
   15b98:	cmp	r5, r7
   15b9c:	bne	15b3c <g_strcmp0@plt+0x1ba0>
   15ba0:	mov	r0, r6
   15ba4:	bl	13da4 <cairo_close_path@plt>
   15ba8:	mov	r0, r6
   15bac:	bl	13aa4 <cairo_stroke_preserve@plt>
   15bb0:	mov	r0, r6
   15bb4:	vmov.f64	d0, #112	; 0x3f800000  1.0
   15bb8:	bl	135a0 <cairo_set_line_width@plt>
   15bbc:	vldr	d0, [pc, #764]	; 15ec0 <g_strcmp0@plt+0x1f24>
   15bc0:	mov	r0, r6
   15bc4:	vmov.f64	d1, d0
   15bc8:	vmov.f64	d2, d0
   15bcc:	bl	138b8 <cairo_set_source_rgb@plt>
   15bd0:	mov	r0, r6
   15bd4:	bl	13ec4 <cairo_stroke@plt>
   15bd8:	mov	r0, r6
   15bdc:	bl	13db0 <cairo_restore@plt>
   15be0:	mov	r0, r6
   15be4:	ldr	r5, [r4, #20]
   15be8:	bl	138a0 <cairo_save@plt>
   15bec:	mov	r0, r6
   15bf0:	vldr	d0, [pc, #720]	; 15ec8 <g_strcmp0@plt+0x1f2c>
   15bf4:	bl	135a0 <cairo_set_line_width@plt>
   15bf8:	vldr	d0, [pc, #704]	; 15ec0 <g_strcmp0@plt+0x1f24>
   15bfc:	mov	r0, r6
   15c00:	vmov.f64	d1, d0
   15c04:	vmov.f64	d2, d0
   15c08:	bl	138b8 <cairo_set_source_rgb@plt>
   15c0c:	ldr	r3, [r4, #20]
   15c10:	ldr	r2, [r5, #32]
   15c14:	vldr	d5, [r2, #8]
   15c18:	vldr	d6, [r2, #16]
   15c1c:	vldr	s0, [r3, #24]
   15c20:	ldr	r2, [r3, #8]
   15c24:	vcvt.f64.u32	d0, s0
   15c28:	vldr	s2, [r3, #28]
   15c2c:	sub	r2, r2, #1
   15c30:	vmov	s8, r2
   15c34:	ldr	r2, [r3, #12]
   15c38:	sub	r2, r2, #1
   15c3c:	vcvt.f64.u32	d4, s8
   15c40:	vmov	s18, r2
   15c44:	vcvt.f64.u32	d7, s18
   15c48:	vmla.f64	d0, d4, d5
   15c4c:	vmls.f64	d7, d7, d6
   15c50:	vcvt.f64.u32	d1, s2
   15c54:	vcmpe.f64	d0, #0.0
   15c58:	vsub.f64	d1, d7, d1
   15c5c:	vmrs	APSR_nzcv, fpscr
   15c60:	bmi	15d60 <g_strcmp0@plt+0x1dc4>
   15c64:	vcmpe.f64	d1, #0.0
   15c68:	vmrs	APSR_nzcv, fpscr
   15c6c:	bmi	15d60 <g_strcmp0@plt+0x1dc4>
   15c70:	mov	r0, r6
   15c74:	bl	1375c <cairo_move_to@plt>
   15c78:	ldr	r3, [r4, #20]
   15c7c:	ldr	r2, [r5, #36]	; 0x24
   15c80:	vldr	d5, [r2, #8]
   15c84:	vldr	d6, [r2, #16]
   15c88:	vldr	s0, [r3, #24]
   15c8c:	ldr	r2, [r3, #8]
   15c90:	vcvt.f64.u32	d0, s0
   15c94:	vldr	s2, [r3, #28]
   15c98:	sub	r2, r2, #1
   15c9c:	vmov	s8, r2
   15ca0:	ldr	r2, [r3, #12]
   15ca4:	sub	r2, r2, #1
   15ca8:	vcvt.f64.u32	d4, s8
   15cac:	vmov	s19, r2
   15cb0:	vcvt.f64.u32	d7, s19
   15cb4:	vmla.f64	d0, d4, d5
   15cb8:	vmls.f64	d7, d7, d6
   15cbc:	vcvt.f64.u32	d1, s2
   15cc0:	vcmpe.f64	d0, #0.0
   15cc4:	vsub.f64	d1, d7, d1
   15cc8:	vmrs	APSR_nzcv, fpscr
   15ccc:	bmi	15d60 <g_strcmp0@plt+0x1dc4>
   15cd0:	vcmpe.f64	d1, #0.0
   15cd4:	vmrs	APSR_nzcv, fpscr
   15cd8:	bmi	15d60 <g_strcmp0@plt+0x1dc4>
   15cdc:	mov	r0, r6
   15ce0:	bl	13ba0 <cairo_line_to@plt>
   15ce4:	ldr	r3, [r4, #20]
   15ce8:	ldr	r2, [r5, #40]	; 0x28
   15cec:	vldr	d5, [r2, #8]
   15cf0:	vldr	d6, [r2, #16]
   15cf4:	vldr	s0, [r3, #24]
   15cf8:	ldr	r2, [r3, #8]
   15cfc:	vcvt.f64.u32	d0, s0
   15d00:	vldr	s2, [r3, #28]
   15d04:	sub	r2, r2, #1
   15d08:	vmov	s8, r2
   15d0c:	ldr	r2, [r3, #12]
   15d10:	sub	r2, r2, #1
   15d14:	vcvt.f64.u32	d4, s8
   15d18:	vmov	s20, r2
   15d1c:	vcvt.f64.u32	d7, s20
   15d20:	vmla.f64	d0, d4, d5
   15d24:	vmls.f64	d7, d7, d6
   15d28:	vcvt.f64.u32	d1, s2
   15d2c:	vcmpe.f64	d0, #0.0
   15d30:	vsub.f64	d1, d7, d1
   15d34:	vmrs	APSR_nzcv, fpscr
   15d38:	bmi	15d60 <g_strcmp0@plt+0x1dc4>
   15d3c:	vcmpe.f64	d1, #0.0
   15d40:	vmrs	APSR_nzcv, fpscr
   15d44:	bmi	15d60 <g_strcmp0@plt+0x1dc4>
   15d48:	mov	r0, r6
   15d4c:	bl	13ba0 <cairo_line_to@plt>
   15d50:	mov	r0, r6
   15d54:	bl	13da4 <cairo_close_path@plt>
   15d58:	mov	r0, r6
   15d5c:	bl	13ec4 <cairo_stroke@plt>
   15d60:	mov	r0, r6
   15d64:	bl	13db0 <cairo_restore@plt>
   15d68:	ldr	r5, [r4, #20]
   15d6c:	ldr	r3, [r5, #4]
   15d70:	cmp	r3, #0
   15d74:	bne	15ee0 <g_strcmp0@plt+0x1f44>
   15d78:	mov	r0, r6
   15d7c:	bl	13db0 <cairo_restore@plt>
   15d80:	b	15520 <g_strcmp0@plt+0x1584>
   15d84:	vmov.f64	d7, #36	; 0x41200000  10.0
   15d88:	ldr	r3, [pc, #328]	; 15ed8 <g_strcmp0@plt+0x1f3c>
   15d8c:	vldr	s20, [r8, #8]
   15d90:	vldr	s18, [r8, #12]
   15d94:	add	r7, sp, #88	; 0x58
   15d98:	mov	r5, #1
   15d9c:	ldm	r3, {r0, r1, r2, r3}
   15da0:	stm	r7, {r0, r1, r2, r3}
   15da4:	mov	r0, r6
   15da8:	vcvt.f64.u32	d10, s20
   15dac:	vcvt.f64.u32	d9, s18
   15db0:	vdiv.f64	d10, d10, d7
   15db4:	vdiv.f64	d9, d9, d7
   15db8:	bl	138a0 <cairo_save@plt>
   15dbc:	mov	r0, r6
   15dc0:	vmov.f64	d0, #112	; 0x3f800000  1.0
   15dc4:	bl	135a0 <cairo_set_line_width@plt>
   15dc8:	mov	r0, r6
   15dcc:	mov	r1, r7
   15dd0:	mov	r2, #2
   15dd4:	vldr	d0, [pc, #228]	; 15ec0 <g_strcmp0@plt+0x1f24>
   15dd8:	bl	13f84 <cairo_set_dash@plt>
   15ddc:	vldr	d0, [pc, #236]	; 15ed0 <g_strcmp0@plt+0x1f34>
   15de0:	mov	r0, r6
   15de4:	vmov.f64	d1, d0
   15de8:	vmov.f64	d2, d0
   15dec:	bl	138b8 <cairo_set_source_rgb@plt>
   15df0:	vmov.f32	s22, #96	; 0x3f000000  0.5
   15df4:	vmov	s7, r5
   15df8:	vldr	d1, [pc, #192]	; 15ec0 <g_strcmp0@plt+0x1f24>
   15dfc:	mov	r0, r6
   15e00:	add	r5, r5, #1
   15e04:	vcvt.f64.s32	d7, s7
   15e08:	vmul.f64	d7, d10, d7
   15e0c:	vcvt.s32.f64	s16, d7
   15e10:	vcvt.f32.s32	s16, s16
   15e14:	vadd.f32	s16, s16, s22
   15e18:	vcvt.f64.f32	d8, s16
   15e1c:	vmov.f64	d0, d8
   15e20:	bl	1375c <cairo_move_to@plt>
   15e24:	ldr	r3, [r4, #20]
   15e28:	mov	r0, r6
   15e2c:	vldr	s2, [r3, #12]
   15e30:	vmov.f64	d0, d8
   15e34:	vcvt.f64.u32	d1, s2
   15e38:	bl	13ba0 <cairo_line_to@plt>
   15e3c:	mov	r0, r6
   15e40:	bl	13ec4 <cairo_stroke@plt>
   15e44:	cmp	r5, #10
   15e48:	bne	15df4 <g_strcmp0@plt+0x1e58>
   15e4c:	mov	r5, #1
   15e50:	vmov.f32	s20, #96	; 0x3f000000  0.5
   15e54:	vmov	s8, r5
   15e58:	vldr	d0, [pc, #96]	; 15ec0 <g_strcmp0@plt+0x1f24>
   15e5c:	mov	r0, r6
   15e60:	add	r5, r5, #1
   15e64:	vcvt.f64.s32	d7, s8
   15e68:	vmul.f64	d7, d9, d7
   15e6c:	vcvt.s32.f64	s16, d7
   15e70:	vcvt.f32.s32	s16, s16
   15e74:	vadd.f32	s16, s16, s20
   15e78:	vcvt.f64.f32	d8, s16
   15e7c:	vmov.f64	d1, d8
   15e80:	bl	1375c <cairo_move_to@plt>
   15e84:	ldr	r3, [r4, #20]
   15e88:	mov	r0, r6
   15e8c:	vldr	s0, [r3, #8]
   15e90:	vmov.f64	d1, d8
   15e94:	vcvt.f64.u32	d0, s0
   15e98:	bl	13ba0 <cairo_line_to@plt>
   15e9c:	mov	r0, r6
   15ea0:	bl	13ec4 <cairo_stroke@plt>
   15ea4:	cmp	r5, #10
   15ea8:	bne	15e54 <g_strcmp0@plt+0x1eb8>
   15eac:	mov	r0, r6
   15eb0:	bl	13db0 <cairo_restore@plt>
   15eb4:	ldr	r8, [r4, #20]
   15eb8:	b	15630 <g_strcmp0@plt+0x1694>
   15ebc:	nop	{0}
	...
   15ec8:	andgt	r0, r0, r0
   15ecc:	svccc	0x00eccccc
   15ed0:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   15ed4:	svccc	0x00b99999
   15ed8:	andeq	fp, r1, r8, lsl #13
   15edc:	andmi	r0, ip, #0
   15ee0:	mov	r0, r6
   15ee4:	vmov.f64	d11, #96	; 0x3f000000  0.5
   15ee8:	bl	138a0 <cairo_save@plt>
   15eec:	vldr	s21, [r5, #8]
   15ef0:	vldr	s15, [pc, #-28]	; 15edc <g_strcmp0@plt+0x1f40>
   15ef4:	mov	r0, r6
   15ef8:	vcvt.f32.u32	s20, s21
   15efc:	vdiv.f32	s20, s20, s15
   15f00:	vcvt.f64.f32	d10, s20
   15f04:	vmov.f64	d0, #112	; 0x3f800000  1.0
   15f08:	bl	135a0 <cairo_set_line_width@plt>
   15f0c:	ldr	r3, [r5, #32]
   15f10:	vldr	d7, [pc, #432]	; 160c8 <g_strcmp0@plt+0x212c>
   15f14:	vldr	d6, [r3, #8]
   15f18:	vcmpe.f64	d6, d7
   15f1c:	vmul.f64	d11, d10, d11
   15f20:	vmrs	APSR_nzcv, fpscr
   15f24:	bpl	15f3c <g_strcmp0@plt+0x1fa0>
   15f28:	ldr	r3, [r5, #36]	; 0x24
   15f2c:	vldr	d6, [r3, #8]
   15f30:	vcmpe.f64	d6, d7
   15f34:	vmrs	APSR_nzcv, fpscr
   15f38:	bmi	1607c <g_strcmp0@plt+0x20e0>
   15f3c:	vldr	d0, [pc, #396]	; 160d0 <g_strcmp0@plt+0x2134>
   15f40:	mov	r0, r6
   15f44:	vmov.f64	d1, d0
   15f48:	vmov.f64	d2, d0
   15f4c:	bl	138b8 <cairo_set_source_rgb@plt>
   15f50:	ldr	r3, [r4, #20]
   15f54:	vldr	s12, [r3, #24]
   15f58:	ldr	r2, [r5, #44]	; 0x2c
   15f5c:	vldr	d2, [r2, #16]
   15f60:	vldr	d4, [r2, #8]
   15f64:	vcvt.f64.u32	d6, s12
   15f68:	ldr	r1, [r3, #12]
   15f6c:	vldr	s10, [r3, #28]
   15f70:	ldr	r2, [r3, #8]
   15f74:	mov	r0, r6
   15f78:	sub	r1, r1, #1
   15f7c:	sub	r2, r2, #1
   15f80:	vmov	s24, r1
   15f84:	vmov	s25, r2
   15f88:	vcvt.f64.u32	d7, s24
   15f8c:	vcvt.f64.u32	d3, s25
   15f90:	vmls.f64	d7, d7, d2
   15f94:	vmla.f64	d6, d3, d4
   15f98:	vcvt.f64.u32	d5, s10
   15f9c:	vcvt.s32.f64	s12, d6
   15fa0:	vsub.f64	d7, d7, d5
   15fa4:	vmov.f32	s3, #96	; 0x3f000000  0.5
   15fa8:	vcvt.f32.s32	s16, s12
   15fac:	vcvt.s32.f64	s15, d7
   15fb0:	vadd.f32	s16, s16, s3
   15fb4:	vcvt.f32.s32	s15, s15
   15fb8:	vcvt.f64.f32	d8, s16
   15fbc:	vadd.f32	s3, s15, s3
   15fc0:	vsub.f64	d12, d8, d11
   15fc4:	vcvt.f64.f32	d9, s3
   15fc8:	vmov.f64	d0, d12
   15fcc:	vmov.f64	d1, d9
   15fd0:	bl	1375c <cairo_move_to@plt>
   15fd4:	mov	r0, r6
   15fd8:	vsub.f64	d0, d12, d10
   15fdc:	vmov.f64	d1, d9
   15fe0:	bl	13ba0 <cairo_line_to@plt>
   15fe4:	mov	r0, r6
   15fe8:	bl	13ec4 <cairo_stroke@plt>
   15fec:	mov	r0, r6
   15ff0:	vadd.f64	d12, d11, d8
   15ff4:	vmov.f64	d1, d9
   15ff8:	vmov.f64	d0, d12
   15ffc:	bl	1375c <cairo_move_to@plt>
   16000:	mov	r0, r6
   16004:	vadd.f64	d0, d10, d12
   16008:	vmov.f64	d1, d9
   1600c:	bl	13ba0 <cairo_line_to@plt>
   16010:	mov	r0, r6
   16014:	bl	13ec4 <cairo_stroke@plt>
   16018:	mov	r0, r6
   1601c:	vsub.f64	d12, d9, d11
   16020:	vmov.f64	d0, d8
   16024:	vmov.f64	d1, d12
   16028:	bl	1375c <cairo_move_to@plt>
   1602c:	mov	r0, r6
   16030:	vmov.f64	d0, d8
   16034:	vsub.f64	d1, d12, d10
   16038:	bl	13ba0 <cairo_line_to@plt>
   1603c:	mov	r0, r6
   16040:	bl	13ec4 <cairo_stroke@plt>
   16044:	mov	r0, r6
   16048:	vadd.f64	d9, d11, d9
   1604c:	vmov.f64	d0, d8
   16050:	vmov.f64	d1, d9
   16054:	bl	1375c <cairo_move_to@plt>
   16058:	mov	r0, r6
   1605c:	vmov.f64	d0, d8
   16060:	vadd.f64	d1, d10, d9
   16064:	bl	13ba0 <cairo_line_to@plt>
   16068:	mov	r0, r6
   1606c:	bl	13ec4 <cairo_stroke@plt>
   16070:	mov	r0, r6
   16074:	bl	13db0 <cairo_restore@plt>
   16078:	b	15d78 <g_strcmp0@plt+0x1ddc>
   1607c:	ldr	r3, [r5, #40]	; 0x28
   16080:	vldr	d6, [r3, #8]
   16084:	vcmpe.f64	d6, d7
   16088:	vmrs	APSR_nzcv, fpscr
   1608c:	bpl	15f3c <g_strcmp0@plt+0x1fa0>
   16090:	vmov.f64	d0, #112	; 0x3f800000  1.0
   16094:	mov	r0, r6
   16098:	vmov.f64	d1, d0
   1609c:	vmov.f64	d2, d0
   160a0:	bl	138b8 <cairo_set_source_rgb@plt>
   160a4:	b	15f50 <g_strcmp0@plt+0x1fb4>
   160a8:	movw	r0, #38412	; 0x960c
   160ac:	movw	r2, #46940	; 0xb75c
   160b0:	movt	r0, #1
   160b4:	movt	r2, #1
   160b8:	ldr	r1, [pc, #24]	; 160d8 <g_strcmp0@plt+0x213c>
   160bc:	bl	13600 <g_return_if_fail_warning@plt>
   160c0:	b	15520 <g_strcmp0@plt+0x1584>
   160c4:	bl	13b58 <__stack_chk_fail@plt>
   160c8:	rscsle	sl, r1, #252, 18	; 0x3f0000
   160cc:	svccc	0x0050624d
	...
   160d8:	muleq	r1, r8, r6
   160dc:	push	{r4, r5, r6, r7, lr}
   160e0:	movw	r5, #53256	; 0xd008
   160e4:	movt	r5, #2
   160e8:	sub	sp, sp, #52	; 0x34
   160ec:	mov	r6, r0
   160f0:	mov	r7, r1
   160f4:	ldr	r3, [r5]
   160f8:	str	r3, [sp, #44]	; 0x2c
   160fc:	bl	15088 <g_strcmp0@plt+0x10ec>
   16100:	mov	r1, r0
   16104:	mov	r0, r6
   16108:	bl	13738 <g_type_check_instance_cast@plt>
   1610c:	movw	r2, #46800	; 0xb6d0
   16110:	movw	r3, #46808	; 0xb6d8
   16114:	movt	r2, #1
   16118:	movt	r3, #1
   1611c:	str	r2, [sp, #4]
   16120:	str	r3, [sp, #12]
   16124:	add	r2, sp, #32
   16128:	add	r3, sp, #40	; 0x28
   1612c:	str	r2, [sp]
   16130:	str	r3, [sp, #16]
   16134:	add	r2, sp, #36	; 0x24
   16138:	mov	r3, #0
   1613c:	str	r2, [sp, #8]
   16140:	str	r3, [sp, #20]
   16144:	add	r2, sp, #28
   16148:	movw	r1, #46816	; 0xb6e0
   1614c:	movw	r3, #46796	; 0xb6cc
   16150:	movt	r1, #1
   16154:	movt	r3, #1
   16158:	mov	r4, r0
   1615c:	mov	r0, r7
   16160:	bl	13c00 <g_object_get@plt>
   16164:	ldr	r3, [r4, #20]
   16168:	ldr	r0, [sp, #28]
   1616c:	ldr	r1, [r3, #44]	; 0x2c
   16170:	bl	13d8c <cd_color_xyz_to_yxy@plt>
   16174:	ldr	r3, [r4, #20]
   16178:	ldr	r0, [sp, #32]
   1617c:	ldr	r1, [r3, #32]
   16180:	bl	13d8c <cd_color_xyz_to_yxy@plt>
   16184:	ldr	r3, [r4, #20]
   16188:	ldr	r0, [sp, #36]	; 0x24
   1618c:	ldr	r1, [r3, #36]	; 0x24
   16190:	bl	13d8c <cd_color_xyz_to_yxy@plt>
   16194:	ldr	r3, [r4, #20]
   16198:	ldr	r0, [sp, #40]	; 0x28
   1619c:	ldr	r1, [r3, #40]	; 0x28
   161a0:	bl	13d8c <cd_color_xyz_to_yxy@plt>
   161a4:	ldr	r3, [r4, #20]
   161a8:	vldr	d7, [pc, #104]	; 16218 <g_strcmp0@plt+0x227c>
   161ac:	mov	r0, r6
   161b0:	ldr	r3, [r3, #44]	; 0x2c
   161b4:	vldr	d6, [r3, #8]
   161b8:	vcmpe.f64	d6, d7
   161bc:	vmrs	APSR_nzcv, fpscr
   161c0:	bgt	16200 <g_strcmp0@plt+0x2264>
   161c4:	bl	13780 <gtk_widget_hide@plt>
   161c8:	ldr	r0, [sp, #28]
   161cc:	bl	138dc <cd_color_xyz_free@plt>
   161d0:	ldr	r0, [sp, #32]
   161d4:	bl	138dc <cd_color_xyz_free@plt>
   161d8:	ldr	r0, [sp, #36]	; 0x24
   161dc:	bl	138dc <cd_color_xyz_free@plt>
   161e0:	ldr	r0, [sp, #40]	; 0x28
   161e4:	bl	138dc <cd_color_xyz_free@plt>
   161e8:	ldr	r2, [sp, #44]	; 0x2c
   161ec:	ldr	r3, [r5]
   161f0:	cmp	r2, r3
   161f4:	bne	16210 <g_strcmp0@plt+0x2274>
   161f8:	add	sp, sp, #52	; 0x34
   161fc:	pop	{r4, r5, r6, r7, pc}
   16200:	bl	13780 <gtk_widget_hide@plt>
   16204:	mov	r0, r6
   16208:	bl	13d2c <gtk_widget_show@plt>
   1620c:	b	161c8 <g_strcmp0@plt+0x222c>
   16210:	bl	13b58 <__stack_chk_fail@plt>
   16214:	nop	{0}
   16218:	rscsle	sl, r1, #252, 18	; 0x3f0000
   1621c:	svccc	0x0050624d
   16220:	push	{r3, lr}
   16224:	bl	15088 <g_strcmp0@plt+0x10ec>
   16228:	mov	r1, #0
   1622c:	pop	{r3, lr}
   16230:	b	13558 <g_object_new@plt>
   16234:	bx	lr
   16238:	push	{r4, r5, r6, lr}
   1623c:	movw	r4, #53256	; 0xd008
   16240:	movt	r4, #2
   16244:	sub	sp, sp, #272	; 0x110
   16248:	add	r0, sp, #8
   1624c:	mov	r5, r1
   16250:	ldr	r3, [r4]
   16254:	mov	r6, r2
   16258:	str	r3, [sp, #268]	; 0x10c
   1625c:	bl	13e34 <time@plt>
   16260:	add	r0, sp, #8
   16264:	bl	13a2c <localtime@plt>
   16268:	movw	r2, #46976	; 0xb780
   1626c:	mov	r1, #254	; 0xfe
   16270:	movt	r2, #1
   16274:	mov	r3, r0
   16278:	add	r0, sp, #12
   1627c:	bl	138e8 <strftime@plt>
   16280:	movw	r0, #53284	; 0xd024
   16284:	movt	r0, #2
   16288:	ldr	r3, [r0]
   1628c:	cmp	r3, #0
   16290:	bne	162cc <g_strcmp0@plt+0x2330>
   16294:	cmp	r5, #128	; 0x80
   16298:	add	r1, sp, #12
   1629c:	mov	r2, r6
   162a0:	movweq	r0, #46988	; 0xb78c
   162a4:	movwne	r0, #46996	; 0xb794
   162a8:	movteq	r0, #1
   162ac:	movtne	r0, #1
   162b0:	bl	13c90 <g_print@plt>
   162b4:	ldr	r2, [sp, #268]	; 0x10c
   162b8:	ldr	r3, [r4]
   162bc:	cmp	r2, r3
   162c0:	bne	16348 <g_strcmp0@plt+0x23ac>
   162c4:	add	sp, sp, #272	; 0x110
   162c8:	pop	{r4, r5, r6, pc}
   162cc:	cmp	r5, #8
   162d0:	cmpne	r5, #4
   162d4:	movw	r0, #47012	; 0xb7a4
   162d8:	add	r3, sp, #12
   162dc:	mov	r1, #27
   162e0:	movt	r0, #1
   162e4:	mov	r2, #32
   162e8:	movne	r5, #0
   162ec:	moveq	r5, #1
   162f0:	bne	16320 <g_strcmp0@plt+0x2384>
   162f4:	bl	13c90 <g_print@plt>
   162f8:	mov	r1, #27
   162fc:	mov	r2, #0
   16300:	mov	r3, r6
   16304:	str	r2, [sp, #4]
   16308:	movw	r0, #47024	; 0xb7b0
   1630c:	str	r1, [sp]
   16310:	movt	r0, #1
   16314:	mov	r2, #31
   16318:	bl	13c90 <g_print@plt>
   1631c:	b	162b4 <g_strcmp0@plt+0x2318>
   16320:	bl	13c90 <g_print@plt>
   16324:	mov	r1, #27
   16328:	str	r5, [sp, #4]
   1632c:	mov	r3, r6
   16330:	str	r1, [sp]
   16334:	movw	r0, #47024	; 0xb7b0
   16338:	mov	r2, #34	; 0x22
   1633c:	movt	r0, #1
   16340:	bl	13c90 <g_print@plt>
   16344:	b	162b4 <g_strcmp0@plt+0x2318>
   16348:	bl	13b58 <__stack_chk_fail@plt>
   1634c:	push	{r4, r5, r6, lr}
   16350:	movw	r4, #53256	; 0xd008
   16354:	movt	r4, #2
   16358:	ldr	r6, [pc, #136]	; 163e8 <g_strcmp0@plt+0x244c>
   1635c:	sub	sp, sp, #64	; 0x40
   16360:	mov	r3, #0
   16364:	ldr	ip, [r4]
   16368:	mov	r2, r3
   1636c:	add	r1, sp, #4
   16370:	str	r3, [sp, #8]
   16374:	str	r3, [sp, #12]
   16378:	movw	lr, #47040	; 0xb7c0
   1637c:	str	ip, [sp, #60]	; 0x3c
   16380:	movt	lr, #1
   16384:	str	r3, [sp, #16]
   16388:	movw	ip, #47048	; 0xb7c8
   1638c:	str	r3, [sp, #28]
   16390:	movt	ip, #1
   16394:	str	r3, [sp, #32]
   16398:	mov	r5, #118	; 0x76
   1639c:	str	r3, [sp, #36]	; 0x24
   163a0:	str	r3, [sp, #40]	; 0x28
   163a4:	str	r3, [sp, #44]	; 0x2c
   163a8:	str	r3, [sp, #48]	; 0x30
   163ac:	str	r3, [sp, #52]	; 0x34
   163b0:	str	r3, [sp, #56]	; 0x38
   163b4:	str	lr, [sp, #4]
   163b8:	str	ip, [sp, #24]
   163bc:	str	r6, [sp, #20]
   163c0:	strb	r5, [sp, #8]
   163c4:	bl	13ccc <g_option_context_add_main_entries@plt>
   163c8:	ldr	r2, [sp, #60]	; 0x3c
   163cc:	mov	r0, #1
   163d0:	ldr	r3, [r4]
   163d4:	cmp	r2, r3
   163d8:	bne	163e4 <g_strcmp0@plt+0x2448>
   163dc:	add	sp, sp, #64	; 0x40
   163e0:	pop	{r4, r5, r6, pc}
   163e4:	bl	13b58 <__stack_chk_fail@plt>
   163e8:	andeq	sp, r2, r8, lsr #32
   163ec:	push	{r3, lr}
   163f0:	movw	r3, #53284	; 0xd024
   163f4:	movt	r3, #2
   163f8:	ldr	r3, [r3, #4]
   163fc:	cmp	r3, #0
   16400:	beq	1640c <g_strcmp0@plt+0x2470>
   16404:	mov	r0, #1
   16408:	pop	{r3, pc}
   1640c:	movw	r0, #47092	; 0xb7f4
   16410:	movt	r0, #1
   16414:	bl	13b64 <g_getenv@plt>
   16418:	adds	r0, r0, #0
   1641c:	movne	r0, #1
   16420:	pop	{r3, pc}
   16424:	subs	r3, r0, #0
   16428:	push	{r4, lr}
   1642c:	bne	1644c <g_strcmp0@plt+0x24b0>
   16430:	movw	r0, #38412	; 0x960c
   16434:	movw	r2, #25140	; 0x6234
   16438:	movt	r0, #1
   1643c:	movt	r2, #1
   16440:	mov	r1, #128	; 0x80
   16444:	pop	{r4, lr}
   16448:	b	13714 <g_log_set_handler@plt>
   1644c:	mov	r1, #12
   16450:	mov	r0, #0
   16454:	bl	13d50 <g_log_set_fatal_mask@plt>
   16458:	movw	r0, #38412	; 0x960c
   1645c:	movw	r2, #25144	; 0x6238
   16460:	movt	r0, #1
   16464:	movt	r2, #1
   16468:	mov	r1, #156	; 0x9c
   1646c:	mov	r3, #0
   16470:	pop	{r4, lr}
   16474:	b	13714 <g_log_set_handler@plt>
   16478:	push	{r4, lr}
   1647c:	movw	r4, #53284	; 0xd024
   16480:	movt	r4, #2
   16484:	sub	sp, sp, #8
   16488:	ldr	r0, [r4, #4]
   1648c:	bl	16424 <g_strcmp0@plt+0x2488>
   16490:	movw	r3, #53264	; 0xd010
   16494:	movt	r3, #2
   16498:	ldr	r0, [r3]
   1649c:	bl	13b40 <fileno@plt>
   164a0:	bl	13b88 <isatty@plt>
   164a4:	ldr	r1, [r4, #4]
   164a8:	movw	r2, #47100	; 0xb7fc
   164ac:	movt	r2, #1
   164b0:	cmp	r1, #0
   164b4:	movw	r3, #47108	; 0xb804
   164b8:	movt	r3, #1
   164bc:	mov	r1, #128	; 0x80
   164c0:	movne	r3, r2
   164c4:	movw	r2, #47120	; 0xb810
   164c8:	movt	r2, #1
   164cc:	subs	r0, r0, #1
   164d0:	rsbs	ip, r0, #0
   164d4:	adcs	ip, ip, r0
   164d8:	movw	r0, #38412	; 0x960c
   164dc:	str	ip, [sp]
   164e0:	movt	r0, #1
   164e4:	str	ip, [r4]
   164e8:	bl	137b0 <g_log@plt>
   164ec:	mov	r0, #1
   164f0:	add	sp, sp, #8
   164f4:	pop	{r4, pc}
   164f8:	push	{r4, lr}
   164fc:	mov	r2, #5
   16500:	sub	sp, sp, #8
   16504:	movw	r1, #47160	; 0xb838
   16508:	mov	r0, #0
   1650c:	movt	r1, #1
   16510:	bl	13bb8 <dcgettext@plt>
   16514:	mov	r2, #5
   16518:	movw	r1, #47180	; 0xb84c
   1651c:	movt	r1, #1
   16520:	mov	r4, r0
   16524:	mov	r0, #0
   16528:	bl	13bb8 <dcgettext@plt>
   1652c:	mov	r3, #0
   16530:	mov	r1, r4
   16534:	str	r3, [sp]
   16538:	mov	r2, r0
   1653c:	movw	r0, #47204	; 0xb864
   16540:	movt	r0, #1
   16544:	bl	137a4 <g_option_group_new@plt>
   16548:	movw	r1, #25420	; 0x634c
   1654c:	movw	r2, #25720	; 0x6478
   16550:	movt	r1, #1
   16554:	movt	r2, #1
   16558:	mov	r4, r0
   1655c:	bl	13894 <g_option_group_set_parse_hooks@plt>
   16560:	mov	r0, r4
   16564:	add	sp, sp, #8
   16568:	pop	{r4, pc}
   1656c:	movw	r3, #53292	; 0xd02c
   16570:	movt	r3, #2
   16574:	mov	r2, #0
   16578:	mov	ip, #4
   1657c:	ldr	r1, [r3]
   16580:	add	r3, r0, r1
   16584:	str	r2, [r0, r1]
   16588:	str	r2, [r3, #4]
   1658c:	str	r2, [r3, #8]
   16590:	str	ip, [r3, #12]
   16594:	bx	lr
   16598:	push	{r4, r5, lr}
   1659c:	sub	sp, sp, #20
   165a0:	mov	r4, r0
   165a4:	bl	13dd4 <g_type_class_peek_parent@plt>
   165a8:	movw	r1, #53292	; 0xd02c
   165ac:	movt	r1, #2
   165b0:	ldr	r3, [r1]
   165b4:	cmp	r3, #0
   165b8:	str	r0, [r1, #4]
   165bc:	beq	165c8 <g_strcmp0@plt+0x262c>
   165c0:	mov	r0, r4
   165c4:	bl	13660 <g_type_class_adjust_private_offset@plt>
   165c8:	mov	r0, r4
   165cc:	mov	r1, #80	; 0x50
   165d0:	bl	13f18 <g_type_check_class_cast@plt>
   165d4:	mov	r1, #0
   165d8:	mov	r5, #1
   165dc:	movw	r2, #27116	; 0x69ec
   165e0:	movw	r3, #26844	; 0x68dc
   165e4:	movt	r2, #1
   165e8:	movt	r3, #1
   165ec:	mov	r4, r0
   165f0:	str	r2, [r0, #24]
   165f4:	str	r3, [r0, #16]
   165f8:	mov	r2, r1
   165fc:	mov	r3, r1
   16600:	str	r5, [sp]
   16604:	movw	r0, #47228	; 0xb87c
   16608:	movt	r0, #1
   1660c:	bl	136d8 <g_param_spec_string@plt>
   16610:	mov	r1, r5
   16614:	mov	r2, r0
   16618:	mov	r0, r4
   1661c:	bl	13c18 <g_object_class_install_property@plt>
   16620:	mov	r1, #0
   16624:	mov	r3, r1
   16628:	mov	r2, r1
   1662c:	str	r5, [sp]
   16630:	movw	r0, #47244	; 0xb88c
   16634:	movt	r0, #1
   16638:	bl	136d8 <g_param_spec_string@plt>
   1663c:	mov	r1, #2
   16640:	mov	r2, r0
   16644:	mov	r0, r4
   16648:	bl	13c18 <g_object_class_install_property@plt>
   1664c:	mov	r1, #0
   16650:	mov	r3, r1
   16654:	mov	r2, r1
   16658:	str	r5, [sp]
   1665c:	movw	r0, #47252	; 0xb894
   16660:	movt	r0, #1
   16664:	bl	136d8 <g_param_spec_string@plt>
   16668:	mov	r1, #3
   1666c:	mov	r2, r0
   16670:	mov	r0, r4
   16674:	bl	13c18 <g_object_class_install_property@plt>
   16678:	mov	r3, #0
   1667c:	mov	r1, r3
   16680:	mov	r2, r3
   16684:	mvn	ip, #0
   16688:	stmib	sp, {r3, r5}
   1668c:	str	ip, [sp]
   16690:	movw	r0, #47260	; 0xb89c
   16694:	movt	r0, #1
   16698:	bl	13c48 <g_param_spec_uint@plt>
   1669c:	mov	r1, #4
   166a0:	mov	r2, r0
   166a4:	mov	r0, r4
   166a8:	add	sp, sp, #20
   166ac:	pop	{r4, r5, lr}
   166b0:	b	13c18 <g_object_class_install_property@plt>
   166b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   166b8:	movw	r7, #53256	; 0xd008
   166bc:	movt	r7, #2
   166c0:	sub	sp, sp, #2048	; 0x800
   166c4:	sub	sp, sp, #12
   166c8:	movw	r3, #53292	; 0xd02c
   166cc:	ldr	ip, [r7]
   166d0:	movt	r3, #2
   166d4:	mov	r4, r1
   166d8:	mov	r9, r0
   166dc:	mov	r1, #0
   166e0:	mov	r6, r2
   166e4:	add	r0, sp, #4
   166e8:	mov	r2, #1024	; 0x400
   166ec:	ldr	r8, [r3]
   166f0:	str	ip, [sp, #2052]	; 0x804
   166f4:	bl	13900 <memset@plt>
   166f8:	add	r0, sp, #1024	; 0x400
   166fc:	mov	r1, #0
   16700:	mov	r2, #1024	; 0x400
   16704:	add	r0, r0, #4
   16708:	bl	13900 <memset@plt>
   1670c:	mov	r0, r4
   16710:	bl	13ef4 <exif_data_new_from_file@plt>
   16714:	add	r5, r9, r8
   16718:	subs	r4, r0, #0
   1671c:	beq	1681c <g_strcmp0@plt+0x2880>
   16720:	ldr	r0, [r4]
   16724:	movw	r1, #271	; 0x10f
   16728:	bl	13cd8 <exif_content_get_entry@plt>
   1672c:	cmp	r0, #0
   16730:	beq	16748 <g_strcmp0@plt+0x27ac>
   16734:	add	r1, sp, #4
   16738:	mov	r2, #1024	; 0x400
   1673c:	bl	13e58 <exif_entry_get_value@plt>
   16740:	add	r0, sp, #4
   16744:	bl	138f4 <g_strchomp@plt>
   16748:	ldr	r0, [r4]
   1674c:	mov	r1, #272	; 0x110
   16750:	bl	13cd8 <exif_content_get_entry@plt>
   16754:	cmp	r0, #0
   16758:	beq	16778 <g_strcmp0@plt+0x27dc>
   1675c:	add	r1, sp, #1024	; 0x400
   16760:	mov	r2, #1024	; 0x400
   16764:	add	r1, r1, #4
   16768:	bl	13e58 <exif_entry_get_value@plt>
   1676c:	add	r0, sp, #1024	; 0x400
   16770:	add	r0, r0, #4
   16774:	bl	138f4 <g_strchomp@plt>
   16778:	movw	r1, #33437	; 0x829d
   1677c:	ldr	r0, [r4, #8]
   16780:	bl	13cd8 <exif_content_get_entry@plt>
   16784:	movw	r1, #37377	; 0x9201
   16788:	cmp	r0, #0
   1678c:	ldr	r0, [r4, #8]
   16790:	movne	r6, #4
   16794:	moveq	r6, #0
   16798:	bl	13cd8 <exif_content_get_entry@plt>
   1679c:	movw	r1, #37385	; 0x9209
   167a0:	cmp	r0, #0
   167a4:	ldr	r0, [r4, #8]
   167a8:	movne	r6, #4
   167ac:	bl	13cd8 <exif_content_get_entry@plt>
   167b0:	cmp	r0, #0
   167b4:	ldr	r0, [r9, r8]
   167b8:	movne	r6, #4
   167bc:	bl	13b94 <g_free@plt>
   167c0:	ldr	r0, [r5, #4]
   167c4:	bl	13b94 <g_free@plt>
   167c8:	ldr	r0, [r5, #8]
   167cc:	bl	13b94 <g_free@plt>
   167d0:	add	r0, sp, #4
   167d4:	bl	138d0 <g_strdup@plt>
   167d8:	str	r0, [r9, r8]
   167dc:	add	r0, sp, #1024	; 0x400
   167e0:	add	r0, r0, #4
   167e4:	bl	138d0 <g_strdup@plt>
   167e8:	mov	r3, #0
   167ec:	str	r6, [r5, #12]
   167f0:	stmib	r5, {r0, r3}
   167f4:	mov	r0, r4
   167f8:	bl	13e04 <exif_data_unref@plt>
   167fc:	mov	r0, #1
   16800:	ldr	r2, [sp, #2052]	; 0x804
   16804:	ldr	r3, [r7]
   16808:	cmp	r2, r3
   1680c:	bne	1683c <g_strcmp0@plt+0x28a0>
   16810:	add	sp, sp, #2048	; 0x800
   16814:	add	sp, sp, #12
   16818:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1681c:	mov	r0, r6
   16820:	movw	r3, #47272	; 0xb8a8
   16824:	mov	r1, #1
   16828:	movt	r3, #1
   1682c:	mov	r2, r4
   16830:	bl	13ee8 <g_set_error@plt>
   16834:	mov	r0, r4
   16838:	b	16800 <g_strcmp0@plt+0x2864>
   1683c:	bl	13b58 <__stack_chk_fail@plt>
   16840:	push	{r4, r5, lr}
   16844:	movw	r4, #53292	; 0xd02c
   16848:	dmb	sy
   1684c:	movt	r4, #2
   16850:	sub	sp, sp, #20
   16854:	ldr	r5, [r4, #8]
   16858:	dmb	sy
   1685c:	cmp	r5, #0
   16860:	beq	16870 <g_strcmp0@plt+0x28d4>
   16864:	ldr	r0, [r4, #8]
   16868:	add	sp, sp, #20
   1686c:	pop	{r4, r5, pc}
   16870:	add	r0, r4, #8
   16874:	bl	13a68 <g_once_init_enter@plt>
   16878:	cmp	r0, #0
   1687c:	beq	16864 <g_strcmp0@plt+0x28c8>
   16880:	movw	r0, #47316	; 0xb8d4
   16884:	movt	r0, #1
   16888:	bl	13ae0 <g_intern_static_string@plt>
   1688c:	str	r5, [sp, #8]
   16890:	mov	r2, #12
   16894:	movw	r3, #25964	; 0x656c
   16898:	movt	r3, #1
   1689c:	stm	sp, {r2, r3}
   168a0:	mov	r2, #68	; 0x44
   168a4:	movw	r3, #26008	; 0x6598
   168a8:	movt	r3, #1
   168ac:	mov	r1, r0
   168b0:	mov	r0, #80	; 0x50
   168b4:	bl	13630 <g_type_register_static_simple@plt>
   168b8:	mov	r1, #16
   168bc:	mov	r5, r0
   168c0:	bl	13bd0 <g_type_add_instance_private@plt>
   168c4:	mov	r1, r5
   168c8:	mov	r3, r0
   168cc:	mov	r0, r4
   168d0:	str	r3, [r0], #8
   168d4:	bl	13d44 <g_once_init_leave@plt>
   168d8:	b	16864 <g_strcmp0@plt+0x28c8>
   168dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   168e0:	sub	sp, sp, #28
   168e4:	mov	r5, r1
   168e8:	mov	r8, r3
   168ec:	mov	r6, r0
   168f0:	mov	r9, r2
   168f4:	bl	16840 <g_strcmp0@plt+0x28a4>
   168f8:	sub	r4, r5, #1
   168fc:	mov	r1, r0
   16900:	mov	r0, r6
   16904:	bl	13738 <g_type_check_instance_cast@plt>
   16908:	movw	ip, #53292	; 0xd02c
   1690c:	movt	ip, #2
   16910:	ldr	r1, [ip]
   16914:	mov	r7, r0
   16918:	add	r3, r0, r1
   1691c:	cmp	r4, #3
   16920:	ldrls	pc, [pc, r4, lsl #2]
   16924:	b	16988 <g_strcmp0@plt+0x29ec>
   16928:	andeq	r6, r1, r4, ror r9
   1692c:	andeq	r6, r1, r0, ror #18
   16930:	andeq	r6, r1, ip, asr #18
   16934:	andeq	r6, r1, r8, lsr r9
   16938:	mov	r0, r9
   1693c:	ldr	r1, [r3, #12]
   16940:	add	sp, sp, #28
   16944:	pop	{r4, r5, r6, r7, r8, r9, lr}
   16948:	b	137f8 <g_value_set_uint@plt>
   1694c:	mov	r0, r9
   16950:	ldr	r1, [r3, #8]
   16954:	add	sp, sp, #28
   16958:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1695c:	b	139f0 <g_value_set_string@plt>
   16960:	mov	r0, r9
   16964:	ldr	r1, [r3, #4]
   16968:	add	sp, sp, #28
   1696c:	pop	{r4, r5, r6, r7, r8, r9, lr}
   16970:	b	139f0 <g_value_set_string@plt>
   16974:	mov	r0, r9
   16978:	ldr	r1, [r7, r1]
   1697c:	add	sp, sp, #28
   16980:	pop	{r4, r5, r6, r7, r8, r9, lr}
   16984:	b	139f0 <g_value_set_string@plt>
   16988:	ldm	r8, {r3, r7}
   1698c:	ldr	r0, [r3]
   16990:	bl	137c8 <g_type_name@plt>
   16994:	ldr	r3, [r6]
   16998:	mov	r4, r0
   1699c:	ldr	r0, [r3]
   169a0:	bl	137c8 <g_type_name@plt>
   169a4:	str	r7, [sp, #12]
   169a8:	str	r4, [sp, #16]
   169ac:	movw	r2, #345	; 0x159
   169b0:	str	r5, [sp, #8]
   169b4:	mov	r1, #16
   169b8:	movw	r3, #46928	; 0xb750
   169bc:	movt	r3, #1
   169c0:	stm	sp, {r2, r3}
   169c4:	movw	r2, #46848	; 0xb700
   169c8:	movw	r3, #47324	; 0xb8dc
   169cc:	movt	r2, #1
   169d0:	movt	r3, #1
   169d4:	str	r0, [sp, #20]
   169d8:	movw	r0, #38412	; 0x960c
   169dc:	movt	r0, #1
   169e0:	bl	137b0 <g_log@plt>
   169e4:	add	sp, sp, #28
   169e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   169ec:	push	{r4, r5, r6, lr}
   169f0:	mov	r5, r0
   169f4:	bl	16840 <g_strcmp0@plt+0x28a4>
   169f8:	movw	r4, #53292	; 0xd02c
   169fc:	movt	r4, #2
   16a00:	mov	r1, r0
   16a04:	mov	r0, r5
   16a08:	bl	13738 <g_type_check_instance_cast@plt>
   16a0c:	ldr	r3, [r4]
   16a10:	add	r6, r0, r3
   16a14:	ldr	r0, [r0, r3]
   16a18:	bl	13b94 <g_free@plt>
   16a1c:	ldr	r0, [r6, #4]
   16a20:	bl	13b94 <g_free@plt>
   16a24:	ldr	r0, [r6, #8]
   16a28:	bl	13b94 <g_free@plt>
   16a2c:	ldr	r0, [r4, #4]
   16a30:	mov	r1, #80	; 0x50
   16a34:	bl	13f18 <g_type_check_class_cast@plt>
   16a38:	ldr	r3, [r0, #24]
   16a3c:	mov	r0, r5
   16a40:	blx	r3
   16a44:	pop	{r4, r5, r6, pc}
   16a48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a4c:	movw	r4, #53256	; 0xd008
   16a50:	movt	r4, #2
   16a54:	sub	sp, sp, #68	; 0x44
   16a58:	mov	r5, r0
   16a5c:	mov	r6, r1
   16a60:	ldr	r3, [r4]
   16a64:	mov	r7, r2
   16a68:	str	r3, [sp, #60]	; 0x3c
   16a6c:	bl	16840 <g_strcmp0@plt+0x28a4>
   16a70:	cmp	r5, #0
   16a74:	beq	16aa4 <g_strcmp0@plt+0x2b08>
   16a78:	ldr	r3, [r5]
   16a7c:	cmp	r3, #0
   16a80:	beq	16a90 <g_strcmp0@plt+0x2af4>
   16a84:	ldr	r3, [r3]
   16a88:	cmp	r0, r3
   16a8c:	beq	16aec <g_strcmp0@plt+0x2b50>
   16a90:	mov	r1, r0
   16a94:	mov	r0, r5
   16a98:	bl	13c84 <g_type_check_instance_is_a@plt>
   16a9c:	cmp	r0, #0
   16aa0:	bne	16aec <g_strcmp0@plt+0x2b50>
   16aa4:	movw	r0, #38412	; 0x960c
   16aa8:	movw	r1, #47212	; 0xb86c
   16aac:	movw	r2, #47784	; 0xbaa8
   16ab0:	movt	r0, #1
   16ab4:	movt	r1, #1
   16ab8:	movt	r2, #1
   16abc:	bl	13600 <g_return_if_fail_warning@plt>
   16ac0:	mov	r6, #0
   16ac4:	mov	r5, r6
   16ac8:	mov	r0, r6
   16acc:	bl	13b94 <g_free@plt>
   16ad0:	ldr	r2, [sp, #60]	; 0x3c
   16ad4:	ldr	r3, [r4]
   16ad8:	mov	r0, r5
   16adc:	cmp	r2, r3
   16ae0:	bne	16fd4 <g_strcmp0@plt+0x3038>
   16ae4:	add	sp, sp, #68	; 0x44
   16ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16aec:	cmp	r7, #0
   16af0:	beq	16b20 <g_strcmp0@plt+0x2b84>
   16af4:	ldr	r3, [r7]
   16af8:	cmp	r3, #0
   16afc:	beq	16b20 <g_strcmp0@plt+0x2b84>
   16b00:	movw	r0, #38412	; 0x960c
   16b04:	movw	r1, #47212	; 0xb86c
   16b08:	movw	r2, #47804	; 0xbabc
   16b0c:	movt	r0, #1
   16b10:	movt	r1, #1
   16b14:	movt	r2, #1
   16b18:	bl	13600 <g_return_if_fail_warning@plt>
   16b1c:	b	16ac0 <g_strcmp0@plt+0x2b24>
   16b20:	mov	r2, #0
   16b24:	movw	r1, #47344	; 0xb8f0
   16b28:	str	r7, [sp]
   16b2c:	mov	r3, r2
   16b30:	mov	r0, r6
   16b34:	movt	r1, #1
   16b38:	bl	138ac <g_file_query_info@plt>
   16b3c:	subs	r9, r0, #0
   16b40:	beq	16ac0 <g_strcmp0@plt+0x2b24>
   16b44:	movw	r1, #47344	; 0xb8f0
   16b48:	movt	r1, #1
   16b4c:	bl	13d5c <g_file_info_get_attribute_string@plt>
   16b50:	movw	r1, #47368	; 0xb908
   16b54:	movt	r1, #1
   16b58:	mov	r8, r0
   16b5c:	bl	13f9c <g_strcmp0@plt>
   16b60:	cmp	r0, #0
   16b64:	bne	16c98 <g_strcmp0@plt+0x2cfc>
   16b68:	mov	r0, r6
   16b6c:	bl	1381c <g_file_get_path@plt>
   16b70:	movw	r3, #53292	; 0xd02c
   16b74:	movt	r3, #2
   16b78:	movw	r1, #38428	; 0x961c
   16b7c:	movt	r1, #1
   16b80:	ldr	sl, [r3]
   16b84:	mov	r6, r0
   16b88:	mov	r3, #0
   16b8c:	str	r3, [sp, #24]
   16b90:	str	r3, [sp, #28]
   16b94:	str	r3, [sp, #32]
   16b98:	str	r3, [sp, #36]	; 0x24
   16b9c:	bl	136fc <TIFFOpen@plt>
   16ba0:	movw	r1, #271	; 0x10f
   16ba4:	add	r2, sp, #24
   16ba8:	mov	r8, r0
   16bac:	bl	139c0 <TIFFGetField@plt>
   16bb0:	mov	r0, r8
   16bb4:	mov	r1, #272	; 0x110
   16bb8:	add	r2, sp, #28
   16bbc:	bl	139c0 <TIFFGetField@plt>
   16bc0:	mov	r0, r8
   16bc4:	movw	r1, #50735	; 0xc62f
   16bc8:	add	r2, sp, #32
   16bcc:	bl	139c0 <TIFFGetField@plt>
   16bd0:	ldr	r3, [sp, #24]
   16bd4:	cmp	r3, #0
   16bd8:	beq	16e10 <g_strcmp0@plt+0x2e74>
   16bdc:	ldr	r3, [sp, #28]
   16be0:	cmp	r3, #0
   16be4:	beq	16e10 <g_strcmp0@plt+0x2e74>
   16be8:	mov	r0, r8
   16bec:	movw	r1, #33437	; 0x829d
   16bf0:	add	r2, sp, #36	; 0x24
   16bf4:	bl	139c0 <TIFFGetField@plt>
   16bf8:	ldr	fp, [sp, #36]	; 0x24
   16bfc:	add	r2, sp, #36	; 0x24
   16c00:	mov	r0, r8
   16c04:	movw	r1, #50736	; 0xc630
   16c08:	cmp	fp, #0
   16c0c:	movne	fp, #4
   16c10:	moveq	fp, #0
   16c14:	bl	139c0 <TIFFGetField@plt>
   16c18:	ldr	r3, [sp, #36]	; 0x24
   16c1c:	movw	r1, #47416	; 0xb938
   16c20:	ldr	r0, [sp, #24]
   16c24:	movt	r1, #1
   16c28:	cmp	r3, #0
   16c2c:	movne	fp, #4
   16c30:	bl	13a20 <g_str_has_prefix@plt>
   16c34:	cmp	r0, #0
   16c38:	ldr	r0, [r5, sl]
   16c3c:	add	r7, r5, sl
   16c40:	movne	fp, #4
   16c44:	bl	13b94 <g_free@plt>
   16c48:	ldr	r0, [r7, #4]
   16c4c:	bl	13b94 <g_free@plt>
   16c50:	ldr	r0, [r7, #8]
   16c54:	bl	13b94 <g_free@plt>
   16c58:	ldr	r0, [sp, #24]
   16c5c:	bl	138d0 <g_strdup@plt>
   16c60:	str	r0, [r5, sl]
   16c64:	ldr	r0, [sp, #28]
   16c68:	bl	138d0 <g_strdup@plt>
   16c6c:	str	r0, [r7, #4]
   16c70:	ldr	r0, [sp, #32]
   16c74:	bl	138d0 <g_strdup@plt>
   16c78:	mov	r5, #1
   16c7c:	str	r0, [r7, #8]
   16c80:	str	fp, [r7, #12]
   16c84:	mov	r0, r8
   16c88:	bl	135f4 <TIFFClose@plt>
   16c8c:	mov	r0, r9
   16c90:	bl	13d38 <g_object_unref@plt>
   16c94:	b	16ac8 <g_strcmp0@plt+0x2b2c>
   16c98:	movw	r1, #47424	; 0xb940
   16c9c:	mov	r0, r8
   16ca0:	movt	r1, #1
   16ca4:	bl	13f9c <g_strcmp0@plt>
   16ca8:	cmp	r0, #0
   16cac:	beq	16dbc <g_strcmp0@plt+0x2e20>
   16cb0:	movw	r1, #47436	; 0xb94c
   16cb4:	mov	r0, r8
   16cb8:	movt	r1, #1
   16cbc:	bl	13f9c <g_strcmp0@plt>
   16cc0:	cmp	r0, #0
   16cc4:	beq	16ce0 <g_strcmp0@plt+0x2d44>
   16cc8:	movw	r1, #47456	; 0xb960
   16ccc:	mov	r0, r8
   16cd0:	movt	r1, #1
   16cd4:	bl	13f9c <g_strcmp0@plt>
   16cd8:	cmp	r0, #0
   16cdc:	bne	16e30 <g_strcmp0@plt+0x2e94>
   16ce0:	mov	r0, r6
   16ce4:	bl	1381c <g_file_get_path@plt>
   16ce8:	mov	ip, #0
   16cec:	movw	r8, #53292	; 0xd02c
   16cf0:	movt	r8, #2
   16cf4:	add	r3, sp, #44	; 0x2c
   16cf8:	add	lr, sp, #40	; 0x28
   16cfc:	str	r3, [sp, #8]
   16d00:	str	lr, [sp, #16]
   16d04:	mov	r6, r0
   16d08:	str	r0, [sp, #52]	; 0x34
   16d0c:	mov	r2, ip
   16d10:	str	r7, [sp, #20]
   16d14:	mov	r0, ip
   16d18:	str	ip, [sp]
   16d1c:	add	r1, sp, #48	; 0x30
   16d20:	str	ip, [sp, #4]
   16d24:	mov	r3, #16
   16d28:	str	ip, [sp, #12]
   16d2c:	movw	lr, #47676	; 0xba3c
   16d30:	str	ip, [sp, #40]	; 0x28
   16d34:	movt	lr, #1
   16d38:	str	ip, [sp, #44]	; 0x2c
   16d3c:	str	ip, [sp, #56]	; 0x38
   16d40:	ldr	sl, [r8]
   16d44:	str	lr, [sp, #48]	; 0x30
   16d48:	bl	13b70 <g_spawn_sync@plt>
   16d4c:	cmp	r0, #0
   16d50:	beq	16e00 <g_strcmp0@plt+0x2e64>
   16d54:	ldr	r3, [sp, #40]	; 0x28
   16d58:	cmp	r3, #0
   16d5c:	bne	16de0 <g_strcmp0@plt+0x2e44>
   16d60:	movw	r1, #38484	; 0x9654
   16d64:	ldr	r0, [sp, #44]	; 0x2c
   16d68:	movt	r1, #1
   16d6c:	mvn	r2, #0
   16d70:	bl	139cc <g_strsplit@plt>
   16d74:	mov	r8, r0
   16d78:	bl	13b10 <g_strv_length@plt>
   16d7c:	cmp	r0, #4
   16d80:	beq	16f48 <g_strcmp0@plt+0x2fac>
   16d84:	ldr	ip, [sp, #44]	; 0x2c
   16d88:	mov	r1, #1
   16d8c:	movw	r3, #47728	; 0xba70
   16d90:	mov	r0, r7
   16d94:	mov	r2, r1
   16d98:	movt	r3, #1
   16d9c:	str	ip, [sp]
   16da0:	bl	13ee8 <g_set_error@plt>
   16da4:	cmp	r8, #0
   16da8:	beq	17030 <g_strcmp0@plt+0x3094>
   16dac:	mov	r5, #0
   16db0:	mov	r0, r8
   16db4:	bl	13b04 <g_strfreev@plt>
   16db8:	b	16e04 <g_strcmp0@plt+0x2e68>
   16dbc:	mov	r0, r6
   16dc0:	bl	1381c <g_file_get_path@plt>
   16dc4:	mov	r6, r0
   16dc8:	mov	r2, r7
   16dcc:	mov	r0, r5
   16dd0:	mov	r1, r6
   16dd4:	bl	166b4 <g_strcmp0@plt+0x2718>
   16dd8:	mov	r5, r0
   16ddc:	b	16c8c <g_strcmp0@plt+0x2cf0>
   16de0:	ldr	ip, [sp, #44]	; 0x2c
   16de4:	mov	r1, #1
   16de8:	movw	r3, #47708	; 0xba5c
   16dec:	mov	r0, r7
   16df0:	mov	r2, r1
   16df4:	movt	r3, #1
   16df8:	str	ip, [sp]
   16dfc:	bl	13ee8 <g_set_error@plt>
   16e00:	mov	r5, #0
   16e04:	ldr	r0, [sp, #44]	; 0x2c
   16e08:	bl	13b94 <g_free@plt>
   16e0c:	b	16c8c <g_strcmp0@plt+0x2cf0>
   16e10:	movw	r3, #47380	; 0xb914
   16e14:	mov	r0, r7
   16e18:	mov	r1, #1
   16e1c:	movt	r3, #1
   16e20:	mov	r2, #0
   16e24:	bl	13ee8 <g_set_error@plt>
   16e28:	mov	r5, #0
   16e2c:	b	16c84 <g_strcmp0@plt+0x2ce8>
   16e30:	movw	r1, #47476	; 0xb974
   16e34:	mov	r0, r8
   16e38:	movt	r1, #1
   16e3c:	bl	13f9c <g_strcmp0@plt>
   16e40:	cmp	r0, #0
   16e44:	beq	16ce0 <g_strcmp0@plt+0x2d44>
   16e48:	movw	r1, #47496	; 0xb988
   16e4c:	mov	r0, r8
   16e50:	movt	r1, #1
   16e54:	bl	13f9c <g_strcmp0@plt>
   16e58:	cmp	r0, #0
   16e5c:	beq	16ce0 <g_strcmp0@plt+0x2d44>
   16e60:	movw	r1, #47512	; 0xb998
   16e64:	mov	r0, r8
   16e68:	movt	r1, #1
   16e6c:	bl	13f9c <g_strcmp0@plt>
   16e70:	cmp	r0, #0
   16e74:	beq	16ce0 <g_strcmp0@plt+0x2d44>
   16e78:	movw	r1, #47532	; 0xb9ac
   16e7c:	mov	r0, r8
   16e80:	movt	r1, #1
   16e84:	bl	13f9c <g_strcmp0@plt>
   16e88:	cmp	r0, #0
   16e8c:	beq	16ce0 <g_strcmp0@plt+0x2d44>
   16e90:	movw	r1, #47552	; 0xb9c0
   16e94:	mov	r0, r8
   16e98:	movt	r1, #1
   16e9c:	bl	13f9c <g_strcmp0@plt>
   16ea0:	cmp	r0, #0
   16ea4:	beq	16ce0 <g_strcmp0@plt+0x2d44>
   16ea8:	movw	r1, #47572	; 0xb9d4
   16eac:	mov	r0, r8
   16eb0:	movt	r1, #1
   16eb4:	bl	13f9c <g_strcmp0@plt>
   16eb8:	cmp	r0, #0
   16ebc:	beq	16ce0 <g_strcmp0@plt+0x2d44>
   16ec0:	movw	r1, #47592	; 0xb9e8
   16ec4:	mov	r0, r8
   16ec8:	movt	r1, #1
   16ecc:	bl	13f9c <g_strcmp0@plt>
   16ed0:	cmp	r0, #0
   16ed4:	beq	16ce0 <g_strcmp0@plt+0x2d44>
   16ed8:	movw	r1, #47616	; 0xba00
   16edc:	mov	r0, r8
   16ee0:	movt	r1, #1
   16ee4:	bl	13f9c <g_strcmp0@plt>
   16ee8:	cmp	r0, #0
   16eec:	beq	16ce0 <g_strcmp0@plt+0x2d44>
   16ef0:	movw	r1, #47636	; 0xba14
   16ef4:	mov	r0, r8
   16ef8:	movt	r1, #1
   16efc:	bl	13f9c <g_strcmp0@plt>
   16f00:	cmp	r0, #0
   16f04:	beq	16ce0 <g_strcmp0@plt+0x2d44>
   16f08:	movw	r1, #47656	; 0xba28
   16f0c:	mov	r0, r8
   16f10:	movt	r1, #1
   16f14:	bl	13f9c <g_strcmp0@plt>
   16f18:	cmp	r0, #0
   16f1c:	beq	16ce0 <g_strcmp0@plt+0x2d44>
   16f20:	mov	r1, #1
   16f24:	movw	r3, #47752	; 0xba88
   16f28:	str	r8, [sp]
   16f2c:	mov	r0, r7
   16f30:	mov	r2, r1
   16f34:	movt	r3, #1
   16f38:	bl	13ee8 <g_set_error@plt>
   16f3c:	mov	r6, #0
   16f40:	mov	r5, r6
   16f44:	b	16c8c <g_strcmp0@plt+0x2cf0>
   16f48:	ldr	r0, [r5, sl]
   16f4c:	add	r7, r5, sl
   16f50:	bl	13b94 <g_free@plt>
   16f54:	ldr	r0, [r7, #4]
   16f58:	bl	13b94 <g_free@plt>
   16f5c:	ldr	r0, [r7, #8]
   16f60:	bl	13b94 <g_free@plt>
   16f64:	ldr	r0, [r8]
   16f68:	ldrb	r3, [r0]
   16f6c:	cmp	r3, #0
   16f70:	streq	r3, [r5, sl]
   16f74:	bne	16fb0 <g_strcmp0@plt+0x3014>
   16f78:	ldr	r0, [r8, #4]
   16f7c:	ldrb	r3, [r0]
   16f80:	cmp	r3, #0
   16f84:	streq	r3, [r7, #4]
   16f88:	bne	16fc8 <g_strcmp0@plt+0x302c>
   16f8c:	ldr	r0, [r8, #8]
   16f90:	ldrb	r3, [r0]
   16f94:	cmp	r3, #0
   16f98:	streq	r3, [r7, #8]
   16f9c:	bne	16fbc <g_strcmp0@plt+0x3020>
   16fa0:	mov	r3, #4
   16fa4:	mov	r5, #1
   16fa8:	str	r3, [r7, #12]
   16fac:	b	16db0 <g_strcmp0@plt+0x2e14>
   16fb0:	bl	138d0 <g_strdup@plt>
   16fb4:	str	r0, [r5, sl]
   16fb8:	b	16f78 <g_strcmp0@plt+0x2fdc>
   16fbc:	bl	138d0 <g_strdup@plt>
   16fc0:	str	r0, [r7, #8]
   16fc4:	b	16fa0 <g_strcmp0@plt+0x3004>
   16fc8:	bl	138d0 <g_strdup@plt>
   16fcc:	str	r0, [r7, #4]
   16fd0:	b	16f8c <g_strcmp0@plt+0x2ff0>
   16fd4:	bl	13b58 <__stack_chk_fail@plt>
   16fd8:	mov	r4, r0
   16fdc:	mov	r6, #0
   16fe0:	mov	r0, r9
   16fe4:	bl	13d38 <g_object_unref@plt>
   16fe8:	mov	r0, r6
   16fec:	bl	13b94 <g_free@plt>
   16ff0:	mov	r0, r4
   16ff4:	bl	13e88 <_Unwind_Resume@plt>
   16ff8:	mov	r4, r0
   16ffc:	mov	r6, #0
   17000:	b	16fe8 <g_strcmp0@plt+0x304c>
   17004:	b	16ff8 <g_strcmp0@plt+0x305c>
   17008:	mov	r4, r0
   1700c:	b	16fe0 <g_strcmp0@plt+0x3044>
   17010:	mov	r4, r0
   17014:	b	16fe8 <g_strcmp0@plt+0x304c>
   17018:	b	16fd8 <g_strcmp0@plt+0x303c>
   1701c:	b	16ff8 <g_strcmp0@plt+0x305c>
   17020:	mov	r4, r0
   17024:	ldr	r0, [sp, #44]	; 0x2c
   17028:	bl	13b94 <g_free@plt>
   1702c:	b	16fe0 <g_strcmp0@plt+0x3044>
   17030:	mov	r5, r8
   17034:	b	16e04 <g_strcmp0@plt+0x2e68>
   17038:	b	16fd8 <g_strcmp0@plt+0x303c>
   1703c:	b	16ff8 <g_strcmp0@plt+0x305c>
   17040:	b	16ff8 <g_strcmp0@plt+0x305c>
   17044:	b	16fd8 <g_strcmp0@plt+0x303c>
   17048:	b	16fd8 <g_strcmp0@plt+0x303c>
   1704c:	b	16fd8 <g_strcmp0@plt+0x303c>
   17050:	b	16fd8 <g_strcmp0@plt+0x303c>
   17054:	mov	r4, r0
   17058:	mov	r0, r8
   1705c:	bl	13b04 <g_strfreev@plt>
   17060:	b	17024 <g_strcmp0@plt+0x3088>
   17064:	b	17020 <g_strcmp0@plt+0x3084>
   17068:	b	16fd8 <g_strcmp0@plt+0x303c>
   1706c:	cmp	r8, #0
   17070:	mov	r4, r0
   17074:	bne	17058 <g_strcmp0@plt+0x30bc>
   17078:	b	17024 <g_strcmp0@plt+0x3088>
   1707c:	b	16fd8 <g_strcmp0@plt+0x303c>
   17080:	b	16fd8 <g_strcmp0@plt+0x303c>
   17084:	b	16fd8 <g_strcmp0@plt+0x303c>
   17088:	b	16fd8 <g_strcmp0@plt+0x303c>
   1708c:	b	16fd8 <g_strcmp0@plt+0x303c>
   17090:	b	16fd8 <g_strcmp0@plt+0x303c>
   17094:	b	16fd8 <g_strcmp0@plt+0x303c>
   17098:	b	16fd8 <g_strcmp0@plt+0x303c>
   1709c:	b	16fd8 <g_strcmp0@plt+0x303c>
   170a0:	b	16fd8 <g_strcmp0@plt+0x303c>
   170a4:	b	16fd8 <g_strcmp0@plt+0x303c>
   170a8:	movw	r3, #53292	; 0xd02c
   170ac:	movt	r3, #2
   170b0:	ldr	r3, [r3]
   170b4:	ldr	r0, [r0, r3]
   170b8:	bx	lr
   170bc:	movw	r3, #53292	; 0xd02c
   170c0:	movt	r3, #2
   170c4:	ldr	r3, [r3]
   170c8:	add	r0, r0, r3
   170cc:	ldr	r0, [r0, #4]
   170d0:	bx	lr
   170d4:	movw	r3, #53292	; 0xd02c
   170d8:	movt	r3, #2
   170dc:	ldr	r3, [r3]
   170e0:	add	r0, r0, r3
   170e4:	ldr	r0, [r0, #8]
   170e8:	bx	lr
   170ec:	movw	r3, #53292	; 0xd02c
   170f0:	movt	r3, #2
   170f4:	ldr	r3, [r3]
   170f8:	add	r0, r0, r3
   170fc:	ldr	r0, [r0, #12]
   17100:	bx	lr
   17104:	push	{r4, lr}
   17108:	bl	16840 <g_strcmp0@plt+0x28a4>
   1710c:	mov	r1, #0
   17110:	bl	13558 <g_object_new@plt>
   17114:	mov	r4, r0
   17118:	bl	16840 <g_strcmp0@plt+0x28a4>
   1711c:	mov	r1, r0
   17120:	mov	r0, r4
   17124:	pop	{r4, lr}
   17128:	b	13738 <g_type_check_instance_cast@plt>
   1712c:	andeq	r0, r0, r0
   17130:	push	{r3, r4, r5, lr}
   17134:	movw	r3, #53304	; 0xd038
   17138:	movt	r3, #2
   1713c:	mov	r5, r0
   17140:	ldr	r4, [r3]
   17144:	bl	13924 <gtk_print_settings_new@plt>
   17148:	str	r0, [r5, r4]
   1714c:	pop	{r3, r4, r5, pc}
   17150:	push	{r4, r5, lr}
   17154:	sub	sp, sp, #28
   17158:	mov	r5, r0
   1715c:	bl	13dd4 <g_type_class_peek_parent@plt>
   17160:	movw	r4, #53304	; 0xd038
   17164:	movt	r4, #2
   17168:	ldr	r3, [r4]
   1716c:	cmp	r3, #0
   17170:	str	r0, [r4, #4]
   17174:	beq	17184 <g_strcmp0@plt+0x31e8>
   17178:	mov	r0, r5
   1717c:	mov	r1, r4
   17180:	bl	13660 <g_type_class_adjust_private_offset@plt>
   17184:	mov	r0, r5
   17188:	mov	r1, #80	; 0x50
   1718c:	bl	13f18 <g_type_check_class_cast@plt>
   17190:	movw	r2, #30068	; 0x7574
   17194:	movw	r3, #13788	; 0x35dc
   17198:	movt	r2, #1
   1719c:	movt	r3, #1
   171a0:	ldr	r1, [r0]
   171a4:	str	r2, [r0, #24]
   171a8:	mov	r0, #4
   171ac:	str	r3, [sp, #8]
   171b0:	mov	r2, #1
   171b4:	mov	r3, #0
   171b8:	str	r0, [sp, #12]
   171bc:	str	r3, [sp]
   171c0:	movw	r0, #47836	; 0xbadc
   171c4:	str	r3, [sp, #4]
   171c8:	movt	r0, #1
   171cc:	str	r2, [sp, #16]
   171d0:	mov	r3, #28
   171d4:	mov	r2, #2
   171d8:	str	r3, [sp, #20]
   171dc:	mov	r3, #68	; 0x44
   171e0:	bl	13984 <g_signal_new@plt>
   171e4:	str	r0, [r4, #8]
   171e8:	add	sp, sp, #28
   171ec:	pop	{r4, r5, pc}
   171f0:	movw	r0, #38412	; 0x960c
   171f4:	movw	r2, #47852	; 0xbaec
   171f8:	movt	r0, #1
   171fc:	movt	r2, #1
   17200:	mov	r1, #128	; 0x80
   17204:	b	137b0 <g_log@plt>
   17208:	push	{r3, lr}
   1720c:	ldr	r0, [r0, #16]
   17210:	bl	137d4 <g_main_loop_quit@plt>
   17214:	mov	r0, #0
   17218:	pop	{r3, pc}
   1721c:	push	{r4, r5, r6, r7, r8, lr}
   17220:	vpush	{d8-d10}
   17224:	mov	r8, r0
   17228:	sub	sp, sp, #32
   1722c:	mov	r0, r1
   17230:	mov	r4, r1
   17234:	mov	r7, r2
   17238:	mov	r6, r3
   1723c:	bl	13648 <gtk_print_context_get_width@plt>
   17240:	mov	r0, r4
   17244:	vmov.f64	d9, d0
   17248:	bl	13a8c <gtk_print_context_get_height@plt>
   1724c:	mov	r0, r4
   17250:	vmov.f64	d8, d0
   17254:	bl	13aec <gtk_print_context_get_cairo_context@plt>
   17258:	ldr	r3, [r6, #4]
   1725c:	add	r1, r6, #24
   17260:	ldr	r3, [r3]
   17264:	mov	r5, r0
   17268:	ldr	r0, [r3, r7, lsl #2]
   1726c:	bl	13be8 <gdk_pixbuf_new_from_file@plt>
   17270:	subs	r4, r0, #0
   17274:	beq	17374 <g_strcmp0@plt+0x33d8>
   17278:	mov	r1, #1
   1727c:	mov	r2, #0
   17280:	bl	137bc <gdk_cairo_surface_create_from_pixbuf@plt>
   17284:	mov	r6, r0
   17288:	mov	r0, r4
   1728c:	bl	139fc <gdk_pixbuf_get_width@plt>
   17290:	vmov	s13, r0
   17294:	mov	r0, r4
   17298:	vcvt.f64.s32	d10, s13
   1729c:	vdiv.f64	d10, d9, d10
   172a0:	bl	139b4 <gdk_pixbuf_get_height@plt>
   172a4:	vmov	s13, r0
   172a8:	mov	r0, r4
   172ac:	vcvt.f64.s32	d7, s13
   172b0:	vdiv.f64	d7, d8, d7
   172b4:	vcmpe.f64	d10, d7
   172b8:	vmrs	APSR_nzcv, fpscr
   172bc:	bmi	17360 <g_strcmp0@plt+0x33c4>
   172c0:	bl	139b4 <gdk_pixbuf_get_height@plt>
   172c4:	vmov	s13, r0
   172c8:	vcvt.f64.s32	d10, s13
   172cc:	vdiv.f64	d10, d8, d10
   172d0:	mov	r0, r4
   172d4:	bl	139fc <gdk_pixbuf_get_width@plt>
   172d8:	mov	r7, r0
   172dc:	mov	r0, r4
   172e0:	bl	139b4 <gdk_pixbuf_get_height@plt>
   172e4:	str	r0, [sp, #20]
   172e8:	movw	r2, #47876	; 0xbb04
   172ec:	movw	r0, #38412	; 0x960c
   172f0:	vstr	d9, [sp]
   172f4:	vstr	d8, [sp, #8]
   172f8:	str	r7, [sp, #16]
   172fc:	vstr	d10, [sp, #24]
   17300:	movt	r0, #1
   17304:	movt	r2, #1
   17308:	mov	r1, #128	; 0x80
   1730c:	bl	137b0 <g_log@plt>
   17310:	mov	r0, r5
   17314:	vmov.f64	d0, d10
   17318:	vmov.f64	d1, d10
   1731c:	bl	135d0 <cairo_scale@plt>
   17320:	vldr	d0, [pc, #120]	; 173a0 <g_strcmp0@plt+0x3404>
   17324:	mov	r0, r5
   17328:	mov	r1, r6
   1732c:	vmov.f64	d1, d0
   17330:	bl	13edc <cairo_set_source_surface@plt>
   17334:	mov	r0, r5
   17338:	bl	13dc8 <cairo_paint@plt>
   1733c:	cmp	r6, #0
   17340:	beq	1734c <g_strcmp0@plt+0x33b0>
   17344:	mov	r0, r6
   17348:	bl	13bc4 <cairo_surface_destroy@plt>
   1734c:	mov	r0, r4
   17350:	add	sp, sp, #32
   17354:	vpop	{d8-d10}
   17358:	pop	{r4, r5, r6, r7, r8, lr}
   1735c:	b	13d38 <g_object_unref@plt>
   17360:	bl	139fc <gdk_pixbuf_get_width@plt>
   17364:	vmov	s15, r0
   17368:	vcvt.f64.s32	d10, s15
   1736c:	vdiv.f64	d10, d9, d10
   17370:	b	172d0 <g_strcmp0@plt+0x3334>
   17374:	mov	r0, r8
   17378:	bl	13ea0 <gtk_print_operation_cancel@plt>
   1737c:	add	sp, sp, #32
   17380:	vpop	{d8-d10}
   17384:	pop	{r4, r5, r6, r7, r8, pc}
   17388:	mov	r5, r0
   1738c:	mov	r0, r4
   17390:	bl	13d38 <g_object_unref@plt>
   17394:	mov	r0, r5
   17398:	bl	13e88 <_Unwind_Resume@plt>
   1739c:	nop	{0}
	...
   173a8:	push	{r3, r4, r5, lr}
   173ac:	mov	r5, r0
   173b0:	mov	r0, r1
   173b4:	mov	r4, r2
   173b8:	bl	13a80 <gtk_print_context_get_page_setup@plt>
   173bc:	ldr	ip, [r4, #8]
   173c0:	ldr	r2, [r4, #12]
   173c4:	add	r3, r4, #24
   173c8:	mov	r1, r0
   173cc:	ldr	r0, [r4]
   173d0:	blx	ip
   173d4:	cmp	r0, #0
   173d8:	str	r0, [r4, #4]
   173dc:	beq	17410 <g_strcmp0@plt+0x3474>
   173e0:	ldr	r3, [r0, #4]
   173e4:	mov	r1, #128	; 0x80
   173e8:	movw	r0, #38412	; 0x960c
   173ec:	movw	r2, #47920	; 0xbb30
   173f0:	movt	r0, #1
   173f4:	movt	r2, #1
   173f8:	bl	137b0 <g_log@plt>
   173fc:	ldr	r3, [r4, #4]
   17400:	mov	r0, r5
   17404:	ldr	r1, [r3, #4]
   17408:	pop	{r3, r4, r5, lr}
   1740c:	b	13a74 <gtk_print_operation_set_n_pages@plt>
   17410:	mov	r0, r5
   17414:	pop	{r3, r4, r5, lr}
   17418:	b	13ea0 <gtk_print_operation_cancel@plt>
   1741c:	push	{r3, r4, r5, lr}
   17420:	mov	r5, r1
   17424:	bl	137e0 <gtk_print_operation_get_status@plt>
   17428:	mov	r1, #128	; 0x80
   1742c:	movw	r2, #47940	; 0xbb44
   17430:	movt	r2, #1
   17434:	mov	r4, r0
   17438:	movw	r0, #38412	; 0x960c
   1743c:	mov	r3, r4
   17440:	movt	r0, #1
   17444:	bl	137b0 <g_log@plt>
   17448:	movw	ip, #53304	; 0xd038
   1744c:	movt	ip, #2
   17450:	ldr	r0, [r5]
   17454:	mov	r2, #0
   17458:	mov	r3, r4
   1745c:	ldr	r1, [ip, #8]
   17460:	bl	138c4 <g_signal_emit@plt>
   17464:	cmp	r4, #7
   17468:	movweq	r0, #38412	; 0x960c
   1746c:	movweq	r2, #47968	; 0xbb60
   17470:	movteq	r0, #1
   17474:	movteq	r2, #1
   17478:	beq	174a8 <g_strcmp0@plt+0x350c>
   1747c:	cmp	r4, #8
   17480:	popne	{r3, r4, r5, pc}
   17484:	ldr	r2, [r5, #24]
   17488:	mov	r1, #1
   1748c:	str	r1, [r5, #20]
   17490:	cmp	r2, #0
   17494:	beq	174c4 <g_strcmp0@plt+0x3528>
   17498:	movw	r0, #38412	; 0x960c
   1749c:	movw	r2, #48032	; 0xbba0
   174a0:	movt	r0, #1
   174a4:	movt	r2, #1
   174a8:	mov	r1, #128	; 0x80
   174ac:	bl	137b0 <g_log@plt>
   174b0:	mov	r1, r5
   174b4:	movw	r0, #29192	; 0x7208
   174b8:	movt	r0, #1
   174bc:	pop	{r3, r4, r5, lr}
   174c0:	b	13a44 <g_idle_add@plt>
   174c4:	movw	r3, #47988	; 0xbb74
   174c8:	add	r0, r5, #24
   174cc:	movt	r3, #1
   174d0:	bl	13ee8 <g_set_error@plt>
   174d4:	b	17498 <g_strcmp0@plt+0x34fc>
   174d8:	push	{r4, r5, lr}
   174dc:	movw	r4, #53304	; 0xd038
   174e0:	dmb	sy
   174e4:	movt	r4, #2
   174e8:	sub	sp, sp, #20
   174ec:	ldr	r5, [r4, #12]
   174f0:	dmb	sy
   174f4:	cmp	r5, #0
   174f8:	beq	17508 <g_strcmp0@plt+0x356c>
   174fc:	ldr	r0, [r4, #12]
   17500:	add	sp, sp, #20
   17504:	pop	{r4, r5, pc}
   17508:	add	r0, r4, #12
   1750c:	bl	13a68 <g_once_init_enter@plt>
   17510:	cmp	r0, #0
   17514:	beq	174fc <g_strcmp0@plt+0x3560>
   17518:	movw	r0, #48052	; 0xbbb4
   1751c:	movt	r0, #1
   17520:	bl	13ae0 <g_intern_static_string@plt>
   17524:	str	r5, [sp, #8]
   17528:	mov	r2, #12
   1752c:	movw	r3, #28976	; 0x7130
   17530:	movt	r3, #1
   17534:	stm	sp, {r2, r3}
   17538:	mov	r2, #72	; 0x48
   1753c:	movw	r3, #29008	; 0x7150
   17540:	movt	r3, #1
   17544:	mov	r1, r0
   17548:	mov	r0, #80	; 0x50
   1754c:	bl	13630 <g_type_register_static_simple@plt>
   17550:	mov	r1, #4
   17554:	mov	r5, r0
   17558:	bl	13bd0 <g_type_add_instance_private@plt>
   1755c:	mov	r1, r5
   17560:	mov	r3, r0
   17564:	mov	r0, r4
   17568:	str	r3, [r0], #12
   1756c:	bl	13d44 <g_once_init_leave@plt>
   17570:	b	174fc <g_strcmp0@plt+0x3560>
   17574:	push	{r3, r4, r5, lr}
   17578:	mov	r5, r0
   1757c:	bl	174d8 <g_strcmp0@plt+0x353c>
   17580:	movw	r4, #53304	; 0xd038
   17584:	movt	r4, #2
   17588:	mov	r1, r0
   1758c:	mov	r0, r5
   17590:	bl	13738 <g_type_check_instance_cast@plt>
   17594:	ldr	r3, [r4]
   17598:	ldr	r0, [r0, r3]
   1759c:	bl	13d38 <g_object_unref@plt>
   175a0:	ldr	r0, [r4, #4]
   175a4:	mov	r1, #80	; 0x50
   175a8:	bl	13f18 <g_type_check_class_cast@plt>
   175ac:	ldr	r3, [r0, #24]
   175b0:	mov	r0, r5
   175b4:	blx	r3
   175b8:	pop	{r3, r4, r5, pc}
   175bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   175c0:	movw	ip, #53304	; 0xd038
   175c4:	sub	sp, sp, #8
   175c8:	movt	ip, #2
   175cc:	mov	r6, r0
   175d0:	mov	r0, #28
   175d4:	mov	r5, r2
   175d8:	mov	sl, r3
   175dc:	ldr	r7, [ip]
   175e0:	mov	r8, r1
   175e4:	ldr	r9, [sp, #40]	; 0x28
   175e8:	bl	13df8 <g_malloc0@plt>
   175ec:	mov	r4, r0
   175f0:	mov	r0, r6
   175f4:	bl	13570 <g_object_ref@plt>
   175f8:	str	r5, [r4, #8]
   175fc:	str	sl, [r4, #12]
   17600:	str	r0, [r4]
   17604:	mov	r0, #0
   17608:	mov	r1, r0
   1760c:	bl	1399c <g_main_loop_new@plt>
   17610:	str	r0, [r4, #16]
   17614:	bl	13ab0 <gtk_print_operation_new@plt>
   17618:	ldr	r1, [r6, r7]
   1761c:	mov	r5, r0
   17620:	bl	13d20 <gtk_print_operation_set_print_settings@plt>
   17624:	mov	r3, #0
   17628:	movw	r1, #48064	; 0xbbc0
   1762c:	str	r3, [sp]
   17630:	movw	r2, #29608	; 0x73a8
   17634:	str	r3, [sp, #4]
   17638:	movt	r1, #1
   1763c:	mov	r0, r5
   17640:	movt	r2, #1
   17644:	mov	r3, r4
   17648:	bl	13a50 <g_signal_connect_data@plt>
   1764c:	mov	r3, #0
   17650:	movw	r1, #48076	; 0xbbcc
   17654:	str	r3, [sp]
   17658:	movw	r2, #29212	; 0x721c
   1765c:	str	r3, [sp, #4]
   17660:	movt	r1, #1
   17664:	mov	r0, r5
   17668:	movt	r2, #1
   1766c:	mov	r3, r4
   17670:	bl	13a50 <g_signal_connect_data@plt>
   17674:	mov	ip, #0
   17678:	movw	r1, #47836	; 0xbadc
   1767c:	movw	r2, #29724	; 0x741c
   17680:	str	ip, [sp]
   17684:	movt	r1, #1
   17688:	str	ip, [sp, #4]
   1768c:	mov	r0, r5
   17690:	movt	r2, #1
   17694:	mov	r3, r4
   17698:	bl	13a50 <g_signal_connect_data@plt>
   1769c:	mov	ip, #0
   176a0:	movw	r1, #48088	; 0xbbd8
   176a4:	movw	r2, #29168	; 0x71f0
   176a8:	str	ip, [sp]
   176ac:	movt	r1, #1
   176b0:	str	ip, [sp, #4]
   176b4:	mov	r0, r5
   176b8:	movt	r2, #1
   176bc:	mov	r3, r4
   176c0:	bl	13a50 <g_signal_connect_data@plt>
   176c4:	mov	r0, r5
   176c8:	mov	r1, #0
   176cc:	bl	1384c <gtk_print_operation_set_use_full_page@plt>
   176d0:	mov	r0, r5
   176d4:	mov	r1, #0
   176d8:	bl	13ad4 <gtk_print_operation_set_show_progress@plt>
   176dc:	mov	r0, r5
   176e0:	mov	r1, #0
   176e4:	bl	13ca8 <gtk_print_operation_set_support_selection@plt>
   176e8:	mov	r0, r5
   176ec:	mov	r1, #1
   176f0:	bl	13ce4 <gtk_print_operation_set_track_print_status@plt>
   176f4:	mov	r0, r5
   176f8:	mov	r1, #1
   176fc:	bl	13930 <gtk_print_operation_set_embed_page_setup@plt>
   17700:	mov	r0, r5
   17704:	mov	r2, r8
   17708:	mov	r1, #0
   1770c:	mov	r3, r9
   17710:	bl	13eb8 <gtk_print_operation_run@plt>
   17714:	cmp	r0, #1
   17718:	beq	1778c <g_strcmp0@plt+0x37f0>
   1771c:	cmp	r0, #0
   17720:	bne	177a4 <g_strcmp0@plt+0x3808>
   17724:	mov	r6, #0
   17728:	ldr	r0, [r4, #4]
   1772c:	cmp	r0, #0
   17730:	beq	17738 <g_strcmp0@plt+0x379c>
   17734:	bl	13dec <g_ptr_array_unref@plt>
   17738:	ldr	r0, [r4]
   1773c:	cmp	r0, #0
   17740:	beq	17748 <g_strcmp0@plt+0x37ac>
   17744:	bl	13d38 <g_object_unref@plt>
   17748:	ldr	r0, [r4, #16]
   1774c:	cmp	r0, #0
   17750:	beq	17758 <g_strcmp0@plt+0x37bc>
   17754:	bl	13f48 <g_main_loop_unref@plt>
   17758:	ldr	r0, [r4, #24]
   1775c:	cmp	r0, #0
   17760:	beq	17768 <g_strcmp0@plt+0x37cc>
   17764:	bl	136a8 <g_error_free@plt>
   17768:	mov	r0, r4
   1776c:	bl	13b94 <g_free@plt>
   17770:	cmp	r5, #0
   17774:	beq	17780 <g_strcmp0@plt+0x37e4>
   17778:	mov	r0, r5
   1777c:	bl	13d38 <g_object_unref@plt>
   17780:	mov	r0, r6
   17784:	add	sp, sp, #8
   17788:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1778c:	ldr	r0, [r6, r7]
   17790:	bl	13d38 <g_object_unref@plt>
   17794:	mov	r0, r5
   17798:	bl	13f6c <gtk_print_operation_get_print_settings@plt>
   1779c:	bl	13570 <g_object_ref@plt>
   177a0:	str	r0, [r6, r7]
   177a4:	ldr	r0, [r4, #16]
   177a8:	bl	1396c <g_main_loop_run@plt>
   177ac:	ldr	r3, [r4, #24]
   177b0:	cmp	r3, #0
   177b4:	beq	177d0 <g_strcmp0@plt+0x3834>
   177b8:	mov	r0, r9
   177bc:	ldr	r3, [r3, #8]
   177c0:	mov	r1, #1
   177c4:	mov	r2, #0
   177c8:	bl	13828 <g_set_error_literal@plt>
   177cc:	b	17724 <g_strcmp0@plt+0x3788>
   177d0:	mov	r6, #1
   177d4:	b	17728 <g_strcmp0@plt+0x378c>
   177d8:	cmp	r5, #0
   177dc:	mov	r4, r0
   177e0:	beq	177ec <g_strcmp0@plt+0x3850>
   177e4:	mov	r0, r5
   177e8:	bl	13d38 <g_object_unref@plt>
   177ec:	mov	r0, r4
   177f0:	bl	13e88 <_Unwind_Resume@plt>
   177f4:	push	{r4, lr}
   177f8:	bl	174d8 <g_strcmp0@plt+0x353c>
   177fc:	mov	r1, #0
   17800:	bl	13558 <g_object_new@plt>
   17804:	mov	r4, r0
   17808:	bl	174d8 <g_strcmp0@plt+0x353c>
   1780c:	mov	r1, r0
   17810:	mov	r0, r4
   17814:	pop	{r4, lr}
   17818:	b	13738 <g_type_check_instance_cast@plt>
   1781c:	andeq	r0, r0, r0
   17820:	push	{r4, r5, r6, r7, lr}
   17824:	sub	sp, sp, #12
   17828:	mov	r5, r0
   1782c:	bl	13dd4 <g_type_class_peek_parent@plt>
   17830:	movw	r1, #53320	; 0xd048
   17834:	movt	r1, #2
   17838:	ldr	r3, [r1, #4]
   1783c:	cmp	r3, #0
   17840:	str	r0, [r1]
   17844:	beq	17854 <g_strcmp0@plt+0x38b8>
   17848:	add	r1, r1, #4
   1784c:	mov	r0, r5
   17850:	bl	13660 <g_type_class_adjust_private_offset@plt>
   17854:	bl	13720 <gtk_widget_get_type@plt>
   17858:	mov	r6, #2
   1785c:	mov	r1, r0
   17860:	mov	r0, r5
   17864:	bl	13f18 <g_type_check_class_cast@plt>
   17868:	mov	r1, #80	; 0x50
   1786c:	mov	r7, r0
   17870:	mov	r0, r5
   17874:	bl	13f18 <g_type_check_class_cast@plt>
   17878:	mov	r1, #28
   1787c:	movw	r2, #31800	; 0x7c38
   17880:	movw	r3, #31628	; 0x7b8c
   17884:	movt	r2, #1
   17888:	movt	r3, #1
   1788c:	str	r2, [r7, #144]	; 0x90
   17890:	movw	r2, #31364	; 0x7a84
   17894:	movt	r2, #1
   17898:	mov	r4, r0
   1789c:	mov	r0, r5
   178a0:	str	r3, [r4, #16]
   178a4:	movw	r3, #31008	; 0x7920
   178a8:	str	r2, [r4, #12]
   178ac:	movt	r3, #1
   178b0:	str	r3, [r4, #24]
   178b4:	bl	13c3c <g_type_class_add_private@plt>
   178b8:	mov	r1, #0
   178bc:	mov	r2, r1
   178c0:	mov	r3, #3
   178c4:	movw	r0, #46768	; 0xb6b0
   178c8:	str	r3, [sp]
   178cc:	movt	r0, #1
   178d0:	mov	r3, #1
   178d4:	bl	13654 <g_param_spec_boolean@plt>
   178d8:	mov	r1, #1
   178dc:	mov	r2, r0
   178e0:	mov	r0, r4
   178e4:	bl	13c18 <g_object_class_install_property@plt>
   178e8:	bl	13b34 <g_ptr_array_get_type@plt>
   178ec:	mov	r1, #0
   178f0:	mov	r2, r1
   178f4:	str	r6, [sp]
   178f8:	mov	r3, r0
   178fc:	movw	r0, #48136	; 0xbc08
   17900:	movt	r0, #1
   17904:	bl	13bf4 <g_param_spec_boxed@plt>
   17908:	mov	r1, r6
   1790c:	mov	r2, r0
   17910:	mov	r0, r4
   17914:	add	sp, sp, #12
   17918:	pop	{r4, r5, r6, r7, lr}
   1791c:	b	13c18 <g_object_class_install_property@plt>
   17920:	ldr	r3, [r0, #20]
   17924:	push	{r4, lr}
   17928:	mov	r4, r0
   1792c:	ldr	r0, [r3, #16]
   17930:	bl	13d38 <g_object_unref@plt>
   17934:	ldr	r3, [r4, #20]
   17938:	ldr	r0, [r3, #4]
   1793c:	cmp	r0, #0
   17940:	beq	17948 <g_strcmp0@plt+0x39ac>
   17944:	bl	13dec <g_ptr_array_unref@plt>
   17948:	movw	r3, #53320	; 0xd048
   1794c:	movt	r3, #2
   17950:	mov	r1, #80	; 0x50
   17954:	ldr	r0, [r3]
   17958:	bl	13f18 <g_type_check_class_cast@plt>
   1795c:	ldr	r3, [r0, #24]
   17960:	mov	r0, r4
   17964:	blx	r3
   17968:	pop	{r4, pc}
   1796c:	push	{r4, r5, r6, lr}
   17970:	movw	r4, #53320	; 0xd048
   17974:	dmb	sy
   17978:	movt	r4, #2
   1797c:	sub	sp, sp, #16
   17980:	ldr	r5, [r4, #8]
   17984:	dmb	sy
   17988:	cmp	r5, #0
   1798c:	beq	1799c <g_strcmp0@plt+0x3a00>
   17990:	ldr	r0, [r4, #8]
   17994:	add	sp, sp, #16
   17998:	pop	{r4, r5, r6, pc}
   1799c:	add	r0, r4, #8
   179a0:	bl	13a68 <g_once_init_enter@plt>
   179a4:	cmp	r0, #0
   179a8:	beq	17990 <g_strcmp0@plt+0x39f4>
   179ac:	bl	13eac <gtk_drawing_area_get_type@plt>
   179b0:	mov	r6, r0
   179b4:	movw	r0, #48144	; 0xbc10
   179b8:	movt	r0, #1
   179bc:	bl	13ae0 <g_intern_static_string@plt>
   179c0:	str	r5, [sp, #8]
   179c4:	mov	r3, #24
   179c8:	movw	r2, #31232	; 0x7a00
   179cc:	str	r3, [sp]
   179d0:	movt	r2, #1
   179d4:	movw	r3, #30752	; 0x7820
   179d8:	str	r2, [sp, #4]
   179dc:	movt	r3, #1
   179e0:	mov	r2, #428	; 0x1ac
   179e4:	mov	r1, r0
   179e8:	mov	r0, r6
   179ec:	bl	13630 <g_type_register_static_simple@plt>
   179f0:	mov	r1, r0
   179f4:	add	r0, r4, #8
   179f8:	bl	13d44 <g_once_init_leave@plt>
   179fc:	b	17990 <g_strcmp0@plt+0x39f4>
   17a00:	push	{r3, r4, r5, lr}
   17a04:	mov	r4, r0
   17a08:	bl	1796c <g_strcmp0@plt+0x39d0>
   17a0c:	mov	r1, r0
   17a10:	mov	r0, r4
   17a14:	bl	13a14 <g_type_instance_get_private@plt>
   17a18:	mov	r2, #1
   17a1c:	mov	r3, #0
   17a20:	str	r0, [r4, #20]
   17a24:	stm	r0, {r2, r3}
   17a28:	bl	13720 <gtk_widget_get_type@plt>
   17a2c:	mov	r1, r0
   17a30:	mov	r0, r4
   17a34:	bl	13738 <g_type_check_instance_cast@plt>
   17a38:	bl	13cf0 <gtk_widget_get_pango_context@plt>
   17a3c:	mov	r1, #4
   17a40:	mov	r5, r0
   17a44:	bl	1369c <pango_context_set_base_gravity@plt>
   17a48:	mov	r0, r5
   17a4c:	ldr	r5, [r4, #20]
   17a50:	bl	13d74 <pango_layout_new@plt>
   17a54:	str	r0, [r5, #16]
   17a58:	movw	r0, #46840	; 0xb6f8
   17a5c:	movt	r0, #1
   17a60:	bl	13e7c <pango_font_description_from_string@plt>
   17a64:	ldr	r3, [r4, #20]
   17a68:	mov	r5, r0
   17a6c:	mov	r1, r0
   17a70:	ldr	r0, [r3, #16]
   17a74:	bl	13f54 <pango_layout_set_font_description@plt>
   17a78:	mov	r0, r5
   17a7c:	pop	{r3, r4, r5, lr}
   17a80:	b	13990 <pango_font_description_free@plt>
   17a84:	push	{r4, r5, r6, r7, r8, lr}
   17a88:	sub	sp, sp, #24
   17a8c:	mov	r5, r1
   17a90:	mov	r6, r0
   17a94:	mov	r7, r2
   17a98:	mov	r8, r3
   17a9c:	bl	1796c <g_strcmp0@plt+0x39d0>
   17aa0:	mov	r1, r0
   17aa4:	mov	r0, r6
   17aa8:	bl	13738 <g_type_check_instance_cast@plt>
   17aac:	cmp	r5, #1
   17ab0:	mov	r4, r0
   17ab4:	beq	17b78 <g_strcmp0@plt+0x3bdc>
   17ab8:	cmp	r5, #2
   17abc:	bne	17aec <g_strcmp0@plt+0x3b50>
   17ac0:	ldr	r5, [r0, #20]
   17ac4:	ldr	r0, [r5, #4]
   17ac8:	cmp	r0, #0
   17acc:	beq	17ad8 <g_strcmp0@plt+0x3b3c>
   17ad0:	bl	13dec <g_ptr_array_unref@plt>
   17ad4:	ldr	r5, [r4, #20]
   17ad8:	mov	r0, r7
   17adc:	bl	13f30 <g_value_get_boxed@plt>
   17ae0:	bl	13e70 <g_ptr_array_ref@plt>
   17ae4:	str	r0, [r5, #4]
   17ae8:	b	17b48 <g_strcmp0@plt+0x3bac>
   17aec:	ldm	r8, {r3, r8}
   17af0:	ldr	r0, [r3]
   17af4:	bl	137c8 <g_type_name@plt>
   17af8:	ldr	r3, [r6]
   17afc:	mov	r7, r0
   17b00:	ldr	r0, [r3]
   17b04:	bl	137c8 <g_type_name@plt>
   17b08:	mov	r2, #86	; 0x56
   17b0c:	movw	r3, #46928	; 0xb750
   17b10:	str	r8, [sp, #12]
   17b14:	movt	r3, #1
   17b18:	str	r7, [sp, #16]
   17b1c:	stm	sp, {r2, r3}
   17b20:	mov	r1, #16
   17b24:	movw	r2, #46848	; 0xb700
   17b28:	movw	r3, #48160	; 0xbc20
   17b2c:	str	r5, [sp, #8]
   17b30:	movt	r2, #1
   17b34:	movt	r3, #1
   17b38:	str	r0, [sp, #20]
   17b3c:	movw	r0, #38412	; 0x960c
   17b40:	movt	r0, #1
   17b44:	bl	137b0 <g_log@plt>
   17b48:	bl	13720 <gtk_widget_get_type@plt>
   17b4c:	mov	r5, r0
   17b50:	mov	r0, r4
   17b54:	mov	r1, r5
   17b58:	bl	13738 <g_type_check_instance_cast@plt>
   17b5c:	bl	13780 <gtk_widget_hide@plt>
   17b60:	mov	r0, r4
   17b64:	mov	r1, r5
   17b68:	bl	13738 <g_type_check_instance_cast@plt>
   17b6c:	add	sp, sp, #24
   17b70:	pop	{r4, r5, r6, r7, r8, lr}
   17b74:	b	13d2c <gtk_widget_show@plt>
   17b78:	mov	r0, r7
   17b7c:	ldr	r5, [r4, #20]
   17b80:	bl	13a08 <g_value_get_boolean@plt>
   17b84:	str	r0, [r5]
   17b88:	b	17b48 <g_strcmp0@plt+0x3bac>
   17b8c:	push	{r4, r5, r6, r7, lr}
   17b90:	sub	sp, sp, #28
   17b94:	mov	r4, r1
   17b98:	mov	r5, r0
   17b9c:	mov	r7, r2
   17ba0:	mov	r6, r3
   17ba4:	bl	1796c <g_strcmp0@plt+0x39d0>
   17ba8:	mov	r1, r0
   17bac:	mov	r0, r5
   17bb0:	bl	13738 <g_type_check_instance_cast@plt>
   17bb4:	cmp	r4, #1
   17bb8:	beq	17c20 <g_strcmp0@plt+0x3c84>
   17bbc:	ldm	r6, {r3, r7}
   17bc0:	ldr	r0, [r3]
   17bc4:	bl	137c8 <g_type_name@plt>
   17bc8:	ldr	r3, [r5]
   17bcc:	mov	r6, r0
   17bd0:	ldr	r0, [r3]
   17bd4:	bl	137c8 <g_type_name@plt>
   17bd8:	str	r7, [sp, #12]
   17bdc:	str	r6, [sp, #16]
   17be0:	mov	r2, #66	; 0x42
   17be4:	str	r4, [sp, #8]
   17be8:	mov	r1, #16
   17bec:	movw	r3, #46928	; 0xb750
   17bf0:	movt	r3, #1
   17bf4:	stm	sp, {r2, r3}
   17bf8:	movw	r2, #46848	; 0xb700
   17bfc:	movw	r3, #48160	; 0xbc20
   17c00:	movt	r2, #1
   17c04:	movt	r3, #1
   17c08:	str	r0, [sp, #20]
   17c0c:	movw	r0, #38412	; 0x960c
   17c10:	movt	r0, #1
   17c14:	bl	137b0 <g_log@plt>
   17c18:	add	sp, sp, #28
   17c1c:	pop	{r4, r5, r6, r7, pc}
   17c20:	ldr	r3, [r0, #20]
   17c24:	mov	r0, r7
   17c28:	ldr	r1, [r3]
   17c2c:	add	sp, sp, #28
   17c30:	pop	{r4, r5, r6, r7, lr}
   17c34:	b	139e4 <g_value_set_boolean@plt>
   17c38:	push	{r4, r5, r6, r7, r8, r9, lr}
   17c3c:	vpush	{d8-d12}
   17c40:	movw	r7, #53256	; 0xd008
   17c44:	movt	r7, #2
   17c48:	sub	sp, sp, #44	; 0x2c
   17c4c:	subs	r5, r0, #0
   17c50:	mov	r4, r1
   17c54:	ldr	r3, [r7]
   17c58:	str	r3, [sp, #36]	; 0x24
   17c5c:	beq	18250 <g_strcmp0@plt+0x42b4>
   17c60:	bl	1796c <g_strcmp0@plt+0x39d0>
   17c64:	ldr	r3, [r5]
   17c68:	cmp	r3, #0
   17c6c:	beq	17c7c <g_strcmp0@plt+0x3ce0>
   17c70:	ldr	r3, [r3]
   17c74:	cmp	r0, r3
   17c78:	beq	17cc8 <g_strcmp0@plt+0x3d2c>
   17c7c:	mov	r1, r0
   17c80:	mov	r0, r5
   17c84:	bl	13c84 <g_type_check_instance_is_a@plt>
   17c88:	cmp	r0, #0
   17c8c:	bne	17cc8 <g_strcmp0@plt+0x3d2c>
   17c90:	movw	r0, #38412	; 0x960c
   17c94:	movw	r2, #48196	; 0xbc44
   17c98:	movt	r0, #1
   17c9c:	movt	r2, #1
   17ca0:	ldr	r1, [pc, #904]	; 18030 <g_strcmp0@plt+0x4094>
   17ca4:	bl	13600 <g_return_if_fail_warning@plt>
   17ca8:	ldr	r2, [sp, #36]	; 0x24
   17cac:	mov	r0, #0
   17cb0:	ldr	r3, [r7]
   17cb4:	cmp	r2, r3
   17cb8:	bne	18334 <g_strcmp0@plt+0x4398>
   17cbc:	add	sp, sp, #44	; 0x2c
   17cc0:	vpop	{d8-d12}
   17cc4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17cc8:	mov	r0, r4
   17ccc:	mov	r9, #1
   17cd0:	bl	138a0 <cairo_save@plt>
   17cd4:	add	r1, sp, #20
   17cd8:	mov	r0, r5
   17cdc:	bl	13a38 <gtk_widget_get_allocation@plt>
   17ce0:	ldr	r6, [sp, #32]
   17ce4:	ldr	r8, [sp, #28]
   17ce8:	vldr	d0, [pc, #808]	; 18018 <g_strcmp0@plt+0x407c>
   17cec:	ldr	r3, [r5, #20]
   17cf0:	vmov.f64	d1, d0
   17cf4:	vmov	s14, r6
   17cf8:	mov	r0, r4
   17cfc:	vmov	s13, r8
   17d00:	str	r6, [r3, #12]
   17d04:	sub	r6, r6, #1
   17d08:	str	r8, [r3, #8]
   17d0c:	vcvt.f64.s32	d3, s14
   17d10:	str	r9, [r3, #20]
   17d14:	sub	r8, r8, #1
   17d18:	str	r9, [r3, #24]
   17d1c:	vcvt.f64.s32	d2, s13
   17d20:	bl	13804 <cairo_rectangle@plt>
   17d24:	mov	r0, r4
   17d28:	vmov.f64	d0, #112	; 0x3f800000  1.0
   17d2c:	vmov.f64	d2, d0
   17d30:	vmov.f64	d1, d0
   17d34:	bl	138b8 <cairo_set_source_rgb@plt>
   17d38:	mov	r0, r4
   17d3c:	bl	13f0c <cairo_fill@plt>
   17d40:	vmov	s6, r6
   17d44:	vmov	s4, r8
   17d48:	mov	r0, r4
   17d4c:	vmov.f64	d0, #96	; 0x3f000000  0.5
   17d50:	vcvt.f64.s32	d3, s6
   17d54:	vmov.f64	d1, d0
   17d58:	vcvt.f64.s32	d2, s4
   17d5c:	bl	13804 <cairo_rectangle@plt>
   17d60:	vldr	d0, [pc, #696]	; 18020 <g_strcmp0@plt+0x4084>
   17d64:	mov	r0, r4
   17d68:	vmov.f64	d1, d0
   17d6c:	vmov.f64	d2, d0
   17d70:	bl	138b8 <cairo_set_source_rgb@plt>
   17d74:	mov	r0, r4
   17d78:	vmov.f64	d0, #112	; 0x3f800000  1.0
   17d7c:	bl	135a0 <cairo_set_line_width@plt>
   17d80:	mov	r0, r4
   17d84:	bl	13ec4 <cairo_stroke@plt>
   17d88:	ldr	r6, [r5, #20]
   17d8c:	ldr	r3, [r6]
   17d90:	cmp	r3, #0
   17d94:	bne	18118 <g_strcmp0@plt+0x417c>
   17d98:	ldr	r3, [r6, #4]
   17d9c:	cmp	r3, #0
   17da0:	beq	1810c <g_strcmp0@plt+0x4170>
   17da4:	vldr	s14, [r6, #8]
   17da8:	vcvt.f32.u32	s18, s14
   17dac:	vldr	s15, [pc, #628]	; 18028 <g_strcmp0@plt+0x408c>
   17db0:	mov	r0, r4
   17db4:	vldr	s22, [r3, #4]
   17db8:	vdiv.f32	s18, s18, s15
   17dbc:	bl	138a0 <cairo_save@plt>
   17dc0:	mov	r0, r4
   17dc4:	vmov.f32	s24, #112	; 0x3f800000  1.0
   17dc8:	vadd.f32	s20, s18, s24
   17dcc:	vcvt.f64.f32	d10, s20
   17dd0:	vcvt.f32.u32	s22, s22
   17dd4:	vmov.f64	d0, d10
   17dd8:	bl	135a0 <cairo_set_line_width@plt>
   17ddc:	vldr	d1, [pc, #564]	; 18018 <g_strcmp0@plt+0x407c>
   17de0:	mov	r0, r4
   17de4:	vmov.f64	d0, #96	; 0x3f000000  0.5
   17de8:	vmov.f64	d2, d1
   17dec:	bl	138b8 <cairo_set_source_rgb@plt>
   17df0:	vcmpe.f32	s22, #0.0
   17df4:	vmrs	APSR_nzcv, fpscr
   17df8:	ble	1826c <g_strcmp0@plt+0x42d0>
   17dfc:	vsub.f32	s23, s22, s24
   17e00:	vldr	s19, [pc, #548]	; 1802c <g_strcmp0@plt+0x4090>
   17e04:	vmov.f64	d8, #112	; 0x3f800000  1.0
   17e08:	b	17e20 <g_strcmp0@plt+0x3e84>
   17e0c:	bl	1375c <cairo_move_to@plt>
   17e10:	vadd.f32	s19, s19, s24
   17e14:	vcmpe.f32	s22, s19
   17e18:	vmrs	APSR_nzcv, fpscr
   17e1c:	ble	17eb0 <g_strcmp0@plt+0x3f14>
   17e20:	vcvt.u32.f32	s15, s19
   17e24:	ldr	r3, [r5, #20]
   17e28:	vldr	s8, [r3, #24]
   17e2c:	vldr	s0, [r3, #20]
   17e30:	ldr	r2, [r6, #4]
   17e34:	ldr	r0, [r3, #12]
   17e38:	ldr	r1, [r3, #8]
   17e3c:	ldr	r2, [r2]
   17e40:	sub	r0, r0, #1
   17e44:	sub	r1, r1, #1
   17e48:	vmov	r3, s15
   17e4c:	vmov	s11, r0
   17e50:	mov	r0, r4
   17e54:	vdiv.f32	s10, s19, s23
   17e58:	ldr	r3, [r2, r3, lsl #2]
   17e5c:	vldr	d3, [r3]
   17e60:	vcvt.f32.f64	s6, d3
   17e64:	vcvt.f64.u32	d7, s11
   17e68:	vmov	s11, r1
   17e6c:	vcvt.f64.f32	d3, s6
   17e70:	vmls.f64	d7, d3, d7
   17e74:	vcvt.f64.u32	d4, s8
   17e78:	vsub.f64	d1, d7, d4
   17e7c:	vcvt.f64.u32	d6, s11
   17e80:	vcvt.f64.u32	d0, s0
   17e84:	vcvt.f64.f32	d5, s10
   17e88:	vcmp.f32	s19, #0.0
   17e8c:	vmla.f64	d0, d5, d6
   17e90:	vmrs	APSR_nzcv, fpscr
   17e94:	vadd.f64	d1, d1, d8
   17e98:	beq	17e0c <g_strcmp0@plt+0x3e70>
   17e9c:	bl	13ba0 <cairo_line_to@plt>
   17ea0:	vadd.f32	s19, s19, s24
   17ea4:	vcmpe.f32	s22, s19
   17ea8:	vmrs	APSR_nzcv, fpscr
   17eac:	bgt	17e20 <g_strcmp0@plt+0x3e84>
   17eb0:	mov	r0, r4
   17eb4:	bl	13aa4 <cairo_stroke_preserve@plt>
   17eb8:	vcvt.f64.f32	d9, s18
   17ebc:	mov	r0, r4
   17ec0:	vmov.f64	d0, d9
   17ec4:	bl	135a0 <cairo_set_line_width@plt>
   17ec8:	vldr	d1, [pc, #328]	; 18018 <g_strcmp0@plt+0x407c>
   17ecc:	mov	r0, r4
   17ed0:	vmov.f64	d2, d1
   17ed4:	vmov.f64	d0, #112	; 0x3f800000  1.0
   17ed8:	bl	138b8 <cairo_set_source_rgb@plt>
   17edc:	mov	r0, r4
   17ee0:	bl	13ec4 <cairo_stroke@plt>
   17ee4:	mov	r0, r4
   17ee8:	vmov.f64	d0, d10
   17eec:	bl	135a0 <cairo_set_line_width@plt>
   17ef0:	vldr	d0, [pc, #288]	; 18018 <g_strcmp0@plt+0x407c>
   17ef4:	mov	r0, r4
   17ef8:	vmov.f64	d1, #96	; 0x3f000000  0.5
   17efc:	vmov.f64	d2, d0
   17f00:	bl	138b8 <cairo_set_source_rgb@plt>
   17f04:	vldr	s24, [pc, #288]	; 1802c <g_strcmp0@plt+0x4090>
   17f08:	vmov.f64	d8, #112	; 0x3f800000  1.0
   17f0c:	vmov.f32	s25, #112	; 0x3f800000  1.0
   17f10:	b	17f28 <g_strcmp0@plt+0x3f8c>
   17f14:	bl	1375c <cairo_move_to@plt>
   17f18:	vadd.f32	s24, s24, s25
   17f1c:	vcmpe.f32	s22, s24
   17f20:	vmrs	APSR_nzcv, fpscr
   17f24:	ble	17fb8 <g_strcmp0@plt+0x401c>
   17f28:	ldr	r3, [r5, #20]
   17f2c:	vcvt.u32.f32	s13, s24
   17f30:	ldr	r2, [r6, #4]
   17f34:	vldr	s8, [r3, #24]
   17f38:	vldr	s0, [r3, #20]
   17f3c:	ldr	r0, [r3, #12]
   17f40:	ldr	r1, [r2]
   17f44:	sub	r0, r0, #1
   17f48:	ldr	r2, [r3, #8]
   17f4c:	vmov	s14, r0
   17f50:	sub	r2, r2, #1
   17f54:	vmov	r0, s13
   17f58:	vdiv.f32	s10, s24, s23
   17f5c:	vmov	s11, r2
   17f60:	ldr	r1, [r1, r0, lsl #2]
   17f64:	vldr	d3, [r1, #8]
   17f68:	mov	r0, r4
   17f6c:	vcvt.f32.f64	s6, d3
   17f70:	vcvt.f64.u32	d7, s14
   17f74:	vcvt.f64.f32	d3, s6
   17f78:	vmls.f64	d7, d3, d7
   17f7c:	vcvt.f64.u32	d4, s8
   17f80:	vsub.f64	d1, d7, d4
   17f84:	vcvt.f64.u32	d6, s11
   17f88:	vcvt.f64.u32	d0, s0
   17f8c:	vcvt.f64.f32	d5, s10
   17f90:	vcmp.f32	s24, #0.0
   17f94:	vmla.f64	d0, d5, d6
   17f98:	vmrs	APSR_nzcv, fpscr
   17f9c:	vsub.f64	d1, d1, d8
   17fa0:	beq	17f14 <g_strcmp0@plt+0x3f78>
   17fa4:	bl	13ba0 <cairo_line_to@plt>
   17fa8:	vadd.f32	s24, s24, s25
   17fac:	vcmpe.f32	s22, s24
   17fb0:	vmrs	APSR_nzcv, fpscr
   17fb4:	bgt	17f28 <g_strcmp0@plt+0x3f8c>
   17fb8:	mov	r0, r4
   17fbc:	bl	13aa4 <cairo_stroke_preserve@plt>
   17fc0:	mov	r0, r4
   17fc4:	vmov.f64	d0, d9
   17fc8:	bl	135a0 <cairo_set_line_width@plt>
   17fcc:	vldr	d0, [pc, #68]	; 18018 <g_strcmp0@plt+0x407c>
   17fd0:	mov	r0, r4
   17fd4:	vmov.f64	d2, d0
   17fd8:	vmov.f64	d1, #112	; 0x3f800000  1.0
   17fdc:	bl	138b8 <cairo_set_source_rgb@plt>
   17fe0:	mov	r0, r4
   17fe4:	bl	13ec4 <cairo_stroke@plt>
   17fe8:	mov	r0, r4
   17fec:	vmov.f64	d0, d10
   17ff0:	bl	135a0 <cairo_set_line_width@plt>
   17ff4:	vldr	d0, [pc, #28]	; 18018 <g_strcmp0@plt+0x407c>
   17ff8:	mov	r0, r4
   17ffc:	vmov.f64	d2, #96	; 0x3f000000  0.5
   18000:	vmov.f64	d1, d0
   18004:	bl	138b8 <cairo_set_source_rgb@plt>
   18008:	vldr	s16, [pc, #28]	; 1802c <g_strcmp0@plt+0x4090>
   1800c:	vmov.f32	s17, #112	; 0x3f800000  1.0
   18010:	b	18048 <g_strcmp0@plt+0x40ac>
   18014:	nop	{0}
	...
   18020:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   18024:	svccc	0x00b99999
   18028:	cmnmi	sl, #0
   1802c:	andeq	r0, r0, r0
   18030:	strdeq	fp, [r1], -r0
   18034:	bl	1375c <cairo_move_to@plt>
   18038:	vadd.f32	s16, s16, s17
   1803c:	vcmpe.f32	s22, s16
   18040:	vmrs	APSR_nzcv, fpscr
   18044:	ble	180d4 <g_strcmp0@plt+0x4138>
   18048:	ldr	r3, [r5, #20]
   1804c:	vcvt.u32.f32	s13, s16
   18050:	ldr	r2, [r6, #4]
   18054:	vldr	s2, [r3, #24]
   18058:	vldr	s0, [r3, #20]
   1805c:	ldr	r0, [r3, #12]
   18060:	ldr	r1, [r2]
   18064:	sub	r0, r0, #1
   18068:	ldr	r2, [r3, #8]
   1806c:	vmov	s14, r0
   18070:	sub	r2, r2, #1
   18074:	vmov	r0, s13
   18078:	vdiv.f32	s10, s16, s23
   1807c:	vmov	s11, r2
   18080:	ldr	r1, [r1, r0, lsl #2]
   18084:	vldr	d4, [r1, #16]
   18088:	mov	r0, r4
   1808c:	vcvt.f32.f64	s8, d4
   18090:	vcvt.f64.u32	d7, s14
   18094:	vcvt.f64.f32	d4, s8
   18098:	vmls.f64	d7, d4, d7
   1809c:	vcvt.f64.u32	d6, s11
   180a0:	vcvt.f64.u32	d1, s2
   180a4:	vcvt.f64.u32	d0, s0
   180a8:	vcvt.f64.f32	d5, s10
   180ac:	vcmp.f32	s16, #0.0
   180b0:	vsub.f64	d1, d7, d1
   180b4:	vmrs	APSR_nzcv, fpscr
   180b8:	vmla.f64	d0, d5, d6
   180bc:	beq	18034 <g_strcmp0@plt+0x4098>
   180c0:	bl	13ba0 <cairo_line_to@plt>
   180c4:	vadd.f32	s16, s16, s17
   180c8:	vcmpe.f32	s22, s16
   180cc:	vmrs	APSR_nzcv, fpscr
   180d0:	bgt	18048 <g_strcmp0@plt+0x40ac>
   180d4:	mov	r0, r4
   180d8:	bl	13aa4 <cairo_stroke_preserve@plt>
   180dc:	mov	r0, r4
   180e0:	vmov.f64	d0, d9
   180e4:	bl	135a0 <cairo_set_line_width@plt>
   180e8:	vldr	d0, [pc, #584]	; 18338 <g_strcmp0@plt+0x439c>
   180ec:	mov	r0, r4
   180f0:	vmov.f64	d2, #112	; 0x3f800000  1.0
   180f4:	vmov.f64	d1, d0
   180f8:	bl	138b8 <cairo_set_source_rgb@plt>
   180fc:	mov	r0, r4
   18100:	bl	13ec4 <cairo_stroke@plt>
   18104:	mov	r0, r4
   18108:	bl	13db0 <cairo_restore@plt>
   1810c:	mov	r0, r4
   18110:	bl	13db0 <cairo_restore@plt>
   18114:	b	17ca8 <g_strcmp0@plt+0x3d0c>
   18118:	vmov.f64	d7, #36	; 0x41200000  10.0
   1811c:	movw	r3, #48096	; 0xbbe0
   18120:	movt	r3, #1
   18124:	vldr	s20, [r6, #8]
   18128:	vldr	s18, [r6, #12]
   1812c:	mov	r6, r9
   18130:	ldm	r3, {r0, r1, r2, r3}
   18134:	stm	sp, {r0, r1, r2, r3}
   18138:	mov	r0, r4
   1813c:	vcvt.f64.u32	d10, s20
   18140:	vcvt.f64.u32	d9, s18
   18144:	vdiv.f64	d10, d10, d7
   18148:	vdiv.f64	d9, d9, d7
   1814c:	bl	138a0 <cairo_save@plt>
   18150:	mov	r0, r4
   18154:	vmov.f64	d0, #112	; 0x3f800000  1.0
   18158:	bl	135a0 <cairo_set_line_width@plt>
   1815c:	mov	r0, r4
   18160:	mov	r1, sp
   18164:	mov	r2, #2
   18168:	vldr	d0, [pc, #456]	; 18338 <g_strcmp0@plt+0x439c>
   1816c:	bl	13f84 <cairo_set_dash@plt>
   18170:	vldr	d0, [pc, #456]	; 18340 <g_strcmp0@plt+0x43a4>
   18174:	mov	r0, r4
   18178:	vmov.f64	d1, d0
   1817c:	vmov.f64	d2, d0
   18180:	bl	138b8 <cairo_set_source_rgb@plt>
   18184:	vmov.f32	s22, #96	; 0x3f000000  0.5
   18188:	vmov	s11, r6
   1818c:	vldr	d1, [pc, #420]	; 18338 <g_strcmp0@plt+0x439c>
   18190:	mov	r0, r4
   18194:	add	r6, r6, #1
   18198:	vcvt.f64.s32	d8, s11
   1819c:	vmul.f64	d8, d10, d8
   181a0:	vcvt.s32.f64	s16, d8
   181a4:	vcvt.f32.s32	s16, s16
   181a8:	vadd.f32	s16, s16, s22
   181ac:	vcvt.f64.f32	d8, s16
   181b0:	vmov.f64	d0, d8
   181b4:	bl	1375c <cairo_move_to@plt>
   181b8:	ldr	r3, [r5, #20]
   181bc:	mov	r0, r4
   181c0:	vldr	s2, [r3, #12]
   181c4:	vmov.f64	d0, d8
   181c8:	vcvt.f64.u32	d1, s2
   181cc:	bl	13ba0 <cairo_line_to@plt>
   181d0:	mov	r0, r4
   181d4:	bl	13ec4 <cairo_stroke@plt>
   181d8:	cmp	r6, #10
   181dc:	bne	18188 <g_strcmp0@plt+0x41ec>
   181e0:	mov	r6, #1
   181e4:	vmov.f32	s20, #96	; 0x3f000000  0.5
   181e8:	vmov	s13, r6
   181ec:	vldr	d0, [pc, #324]	; 18338 <g_strcmp0@plt+0x439c>
   181f0:	mov	r0, r4
   181f4:	add	r6, r6, #1
   181f8:	vcvt.f64.s32	d8, s13
   181fc:	vmul.f64	d8, d9, d8
   18200:	vcvt.s32.f64	s16, d8
   18204:	vcvt.f32.s32	s16, s16
   18208:	vadd.f32	s16, s16, s20
   1820c:	vcvt.f64.f32	d8, s16
   18210:	vmov.f64	d1, d8
   18214:	bl	1375c <cairo_move_to@plt>
   18218:	ldr	r3, [r5, #20]
   1821c:	mov	r0, r4
   18220:	vldr	s0, [r3, #8]
   18224:	vmov.f64	d1, d8
   18228:	vcvt.f64.u32	d0, s0
   1822c:	bl	13ba0 <cairo_line_to@plt>
   18230:	mov	r0, r4
   18234:	bl	13ec4 <cairo_stroke@plt>
   18238:	cmp	r6, #10
   1823c:	bne	181e8 <g_strcmp0@plt+0x424c>
   18240:	mov	r0, r4
   18244:	bl	13db0 <cairo_restore@plt>
   18248:	ldr	r6, [r5, #20]
   1824c:	b	17d98 <g_strcmp0@plt+0x3dfc>
   18250:	movw	r0, #38412	; 0x960c
   18254:	movw	r2, #48184	; 0xbc38
   18258:	movt	r0, #1
   1825c:	movt	r2, #1
   18260:	ldr	r1, [pc, #224]	; 18348 <g_strcmp0@plt+0x43ac>
   18264:	bl	13600 <g_return_if_fail_warning@plt>
   18268:	b	17ca8 <g_strcmp0@plt+0x3d0c>
   1826c:	mov	r0, r4
   18270:	bl	13aa4 <cairo_stroke_preserve@plt>
   18274:	vcvt.f64.f32	d9, s18
   18278:	mov	r0, r4
   1827c:	vmov.f64	d0, d9
   18280:	bl	135a0 <cairo_set_line_width@plt>
   18284:	vldr	d1, [pc, #172]	; 18338 <g_strcmp0@plt+0x439c>
   18288:	mov	r0, r4
   1828c:	vmov.f64	d2, d1
   18290:	vmov.f64	d0, #112	; 0x3f800000  1.0
   18294:	bl	138b8 <cairo_set_source_rgb@plt>
   18298:	mov	r0, r4
   1829c:	bl	13ec4 <cairo_stroke@plt>
   182a0:	mov	r0, r4
   182a4:	vmov.f64	d0, d10
   182a8:	bl	135a0 <cairo_set_line_width@plt>
   182ac:	vldr	d0, [pc, #132]	; 18338 <g_strcmp0@plt+0x439c>
   182b0:	mov	r0, r4
   182b4:	vmov.f64	d1, #96	; 0x3f000000  0.5
   182b8:	vmov.f64	d2, d0
   182bc:	bl	138b8 <cairo_set_source_rgb@plt>
   182c0:	vcmpe.f32	s22, #0.0
   182c4:	vmrs	APSR_nzcv, fpscr
   182c8:	vsubgt.f32	s23, s22, s24
   182cc:	bgt	17f04 <g_strcmp0@plt+0x3f68>
   182d0:	mov	r0, r4
   182d4:	bl	13aa4 <cairo_stroke_preserve@plt>
   182d8:	mov	r0, r4
   182dc:	vmov.f64	d0, d9
   182e0:	bl	135a0 <cairo_set_line_width@plt>
   182e4:	vldr	d0, [pc, #76]	; 18338 <g_strcmp0@plt+0x439c>
   182e8:	mov	r0, r4
   182ec:	vmov.f64	d2, d0
   182f0:	vmov.f64	d1, #112	; 0x3f800000  1.0
   182f4:	bl	138b8 <cairo_set_source_rgb@plt>
   182f8:	mov	r0, r4
   182fc:	bl	13ec4 <cairo_stroke@plt>
   18300:	mov	r0, r4
   18304:	vmov.f64	d0, d10
   18308:	bl	135a0 <cairo_set_line_width@plt>
   1830c:	vldr	d0, [pc, #36]	; 18338 <g_strcmp0@plt+0x439c>
   18310:	mov	r0, r4
   18314:	vmov.f64	d2, #96	; 0x3f000000  0.5
   18318:	vmov.f64	d1, d0
   1831c:	bl	138b8 <cairo_set_source_rgb@plt>
   18320:	vcmpe.f32	s22, #0.0
   18324:	vmrs	APSR_nzcv, fpscr
   18328:	vsubgt.f32	s23, s22, s24
   1832c:	ble	180d4 <g_strcmp0@plt+0x4138>
   18330:	b	18008 <g_strcmp0@plt+0x406c>
   18334:	bl	13b58 <__stack_chk_fail@plt>
	...
   18340:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   18344:	svccc	0x00b99999
   18348:	strdeq	fp, [r1], -r0
   1834c:	push	{r3, lr}
   18350:	bl	1796c <g_strcmp0@plt+0x39d0>
   18354:	mov	r1, #0
   18358:	pop	{r3, lr}
   1835c:	b	13558 <g_object_new@plt>
   18360:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18364:	mvn	r1, #0
   18368:	bl	13e1c <g_markup_escape_text@plt>
   1836c:	mov	r9, r0
   18370:	movw	r0, #47156	; 0xb834
   18374:	movt	r0, #1
   18378:	bl	1372c <g_string_new@plt>
   1837c:	mov	r4, #0
   18380:	mov	r8, r0
   18384:	mov	r5, r9
   18388:	mov	r6, r4
   1838c:	b	183a4 <g_strcmp0@plt+0x4408>
   18390:	ldrb	r3, [r7]
   18394:	add	r5, r5, #1
   18398:	cmp	r3, #0
   1839c:	beq	18458 <g_strcmp0@plt+0x44bc>
   183a0:	add	r6, r6, #1
   183a4:	movw	r1, #48436	; 0xbd34
   183a8:	mov	r0, r5
   183ac:	movt	r1, #1
   183b0:	mov	r7, r5
   183b4:	bl	13a20 <g_str_has_prefix@plt>
   183b8:	cmp	r0, #0
   183bc:	beq	18390 <g_strcmp0@plt+0x43f4>
   183c0:	mov	r0, r8
   183c4:	add	r1, r9, r4
   183c8:	rsb	r2, r4, r6
   183cc:	bl	13798 <g_string_append_len@plt>
   183d0:	ldrb	r3, [r9, r6]
   183d4:	tst	r3, #223	; 0xdf
   183d8:	movne	r3, r5
   183dc:	movne	r4, r6
   183e0:	beq	18488 <g_strcmp0@plt+0x44ec>
   183e4:	ldrb	ip, [r3, #1]!
   183e8:	add	r4, r4, #1
   183ec:	tst	ip, #223	; 0xdf
   183f0:	bne	183e4 <g_strcmp0@plt+0x4448>
   183f4:	movw	r1, #48444	; 0xbd3c
   183f8:	mov	r0, r8
   183fc:	movt	r1, #1
   18400:	bl	13e94 <g_string_append@plt>
   18404:	rsb	sl, r6, r4
   18408:	mov	r0, r8
   1840c:	mov	r1, r5
   18410:	mov	r2, sl
   18414:	bl	13798 <g_string_append_len@plt>
   18418:	movw	r1, #48456	; 0xbd48
   1841c:	mov	r0, r8
   18420:	movt	r1, #1
   18424:	bl	13e94 <g_string_append@plt>
   18428:	mov	r0, r8
   1842c:	mov	r1, r5
   18430:	mov	r2, sl
   18434:	bl	13798 <g_string_append_len@plt>
   18438:	movw	r1, #48460	; 0xbd4c
   1843c:	mov	r0, r8
   18440:	movt	r1, #1
   18444:	bl	13e94 <g_string_append@plt>
   18448:	ldrb	r3, [r7]
   1844c:	add	r5, r5, #1
   18450:	cmp	r3, #0
   18454:	bne	183a0 <g_strcmp0@plt+0x4404>
   18458:	rsb	r2, r4, r6
   1845c:	add	r1, r9, r4
   18460:	mov	r0, r8
   18464:	bl	13798 <g_string_append_len@plt>
   18468:	mov	r0, r8
   1846c:	mov	r1, #0
   18470:	bl	13cfc <g_string_free@plt>
   18474:	mov	r4, r0
   18478:	mov	r0, r9
   1847c:	bl	13b94 <g_free@plt>
   18480:	mov	r0, r4
   18484:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18488:	mov	r4, r6
   1848c:	b	183f4 <g_strcmp0@plt+0x4458>
   18490:	mov	r4, r0
   18494:	mov	r9, #0
   18498:	mov	r0, r9
   1849c:	bl	13b94 <g_free@plt>
   184a0:	mov	r0, r4
   184a4:	bl	13e88 <_Unwind_Resume@plt>
   184a8:	mov	r4, r0
   184ac:	b	18498 <g_strcmp0@plt+0x44fc>
   184b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   184b4:	movw	r5, #53256	; 0xd008
   184b8:	movt	r5, #2
   184bc:	sub	sp, sp, #44	; 0x2c
   184c0:	subs	r6, r0, #0
   184c4:	mov	r2, #0
   184c8:	ldr	r3, [r5]
   184cc:	mov	r4, r1
   184d0:	str	r2, [sp, #32]
   184d4:	str	r3, [sp, #36]	; 0x24
   184d8:	beq	18654 <g_strcmp0@plt+0x46b8>
   184dc:	cmp	r1, #0
   184e0:	moveq	r9, r1
   184e4:	beq	18504 <g_strcmp0@plt+0x4568>
   184e8:	bl	13720 <gtk_widget_get_type@plt>
   184ec:	mov	r1, r0
   184f0:	mov	r0, r4
   184f4:	bl	13738 <g_type_check_instance_cast@plt>
   184f8:	bl	13774 <gtk_widget_get_window@plt>
   184fc:	bl	135e8 <gdk_x11_window_get_xid@plt>
   18500:	mov	r9, r0
   18504:	movw	r1, #48468	; 0xbd54
   18508:	mov	r0, r6
   1850c:	mov	r2, #1
   18510:	movt	r1, #1
   18514:	bl	139cc <g_strsplit@plt>
   18518:	mov	r7, r0
   1851c:	mov	r1, #0
   18520:	mov	r0, #2
   18524:	add	r2, sp, #32
   18528:	bl	1357c <g_bus_get_sync@plt>
   1852c:	subs	r8, r0, #0
   18530:	beq	18684 <g_strcmp0@plt+0x46e8>
   18534:	movw	r0, #48472	; 0xbd58
   18538:	movt	r0, #1
   1853c:	bl	1366c <g_variant_type_checked_@plt>
   18540:	bl	13768 <g_variant_builder_new@plt>
   18544:	mov	r4, r0
   18548:	mov	r0, r9
   1854c:	bl	13690 <g_variant_new_uint32@plt>
   18550:	mov	r1, r0
   18554:	mov	r0, r4
   18558:	bl	136f0 <g_variant_builder_add_value@plt>
   1855c:	mov	r0, r7
   18560:	mvn	r1, #0
   18564:	bl	13810 <g_variant_new_strv@plt>
   18568:	mov	r1, r0
   1856c:	mov	r0, r4
   18570:	bl	136f0 <g_variant_builder_add_value@plt>
   18574:	movw	r0, #48480	; 0xbd60
   18578:	movt	r0, #1
   1857c:	bl	136c0 <g_variant_new_string@plt>
   18580:	mov	r1, r0
   18584:	mov	r0, r4
   18588:	bl	136f0 <g_variant_builder_add_value@plt>
   1858c:	mov	r0, r4
   18590:	bl	136b4 <g_variant_builder_end@plt>
   18594:	mov	r6, r0
   18598:	add	r3, sp, #32
   1859c:	movw	r2, #48608	; 0xbde0
   185a0:	str	r3, [sp, #24]
   185a4:	movt	r2, #1
   185a8:	mov	r3, #0
   185ac:	str	r2, [sp]
   185b0:	movw	r1, #48516	; 0xbd84
   185b4:	mvn	r2, #-2147483648	; 0x80000000
   185b8:	str	r3, [sp, #8]
   185bc:	str	r3, [sp, #12]
   185c0:	mov	r0, r8
   185c4:	str	r3, [sp, #20]
   185c8:	movt	r1, #1
   185cc:	str	r2, [sp, #16]
   185d0:	movw	r3, #48572	; 0xbdbc
   185d4:	movw	r2, #48544	; 0xbda0
   185d8:	str	r6, [sp, #4]
   185dc:	movt	r2, #1
   185e0:	movt	r3, #1
   185e4:	bl	13abc <g_dbus_connection_call_sync@plt>
   185e8:	cmp	r0, #0
   185ec:	beq	186b8 <g_strcmp0@plt+0x471c>
   185f0:	bl	13c24 <g_variant_unref@plt>
   185f4:	mov	r8, #1
   185f8:	cmp	r4, #0
   185fc:	beq	18608 <g_strcmp0@plt+0x466c>
   18600:	mov	r0, r4
   18604:	bl	1390c <g_variant_builder_unref@plt>
   18608:	cmp	r6, #0
   1860c:	beq	18618 <g_strcmp0@plt+0x467c>
   18610:	mov	r0, r6
   18614:	bl	13c24 <g_variant_unref@plt>
   18618:	cmp	r7, #0
   1861c:	beq	18628 <g_strcmp0@plt+0x468c>
   18620:	mov	r0, r7
   18624:	bl	13b04 <g_strfreev@plt>
   18628:	ldr	r0, [sp, #32]
   1862c:	cmp	r0, #0
   18630:	beq	18638 <g_strcmp0@plt+0x469c>
   18634:	bl	136a8 <g_error_free@plt>
   18638:	ldr	r2, [sp, #36]	; 0x24
   1863c:	mov	r0, r8
   18640:	ldr	r3, [r5]
   18644:	cmp	r2, r3
   18648:	bne	186f4 <g_strcmp0@plt+0x4758>
   1864c:	add	sp, sp, #44	; 0x2c
   18650:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18654:	movw	r0, #38412	; 0x960c
   18658:	movw	r1, #48220	; 0xbc5c
   1865c:	movw	r2, #48628	; 0xbdf4
   18660:	movt	r0, #1
   18664:	movt	r1, #1
   18668:	movt	r2, #1
   1866c:	bl	13600 <g_return_if_fail_warning@plt>
   18670:	mov	r4, #0
   18674:	mov	r6, r4
   18678:	mov	r7, r4
   1867c:	mov	r8, #0
   18680:	b	185f8 <g_strcmp0@plt+0x465c>
   18684:	mov	r2, #5
   18688:	movw	r1, #38640	; 0x96f0
   1868c:	movt	r1, #1
   18690:	bl	13bb8 <dcgettext@plt>
   18694:	ldr	r3, [sp, #32]
   18698:	ldr	r2, [r3, #8]
   1869c:	mov	r1, r0
   186a0:	movw	r0, #38676	; 0x9714
   186a4:	movt	r0, #1
   186a8:	bl	13c90 <g_print@plt>
   186ac:	mov	r4, #0
   186b0:	mov	r6, r4
   186b4:	b	1867c <g_strcmp0@plt+0x46e0>
   186b8:	mov	r2, #5
   186bc:	movw	r1, #38768	; 0x9770
   186c0:	movt	r1, #1
   186c4:	bl	13bb8 <dcgettext@plt>
   186c8:	ldr	r1, [sp, #32]
   186cc:	movw	r2, #38676	; 0x9714
   186d0:	movt	r2, #1
   186d4:	ldr	ip, [r1, #8]
   186d8:	mov	r1, #16
   186dc:	str	ip, [sp]
   186e0:	mov	r3, r0
   186e4:	movw	r0, #38412	; 0x960c
   186e8:	movt	r0, #1
   186ec:	bl	137b0 <g_log@plt>
   186f0:	b	1867c <g_strcmp0@plt+0x46e0>
   186f4:	bl	13b58 <__stack_chk_fail@plt>
   186f8:	mov	r5, r0
   186fc:	mov	r6, #0
   18700:	mov	r4, r5
   18704:	cmp	r6, #0
   18708:	beq	18714 <g_strcmp0@plt+0x4778>
   1870c:	mov	r0, r6
   18710:	bl	13c24 <g_variant_unref@plt>
   18714:	cmp	r7, #0
   18718:	beq	18724 <g_strcmp0@plt+0x4788>
   1871c:	mov	r0, r7
   18720:	bl	13b04 <g_strfreev@plt>
   18724:	ldr	r0, [sp, #32]
   18728:	cmp	r0, #0
   1872c:	beq	18734 <g_strcmp0@plt+0x4798>
   18730:	bl	136a8 <g_error_free@plt>
   18734:	mov	r0, r4
   18738:	bl	13e88 <_Unwind_Resume@plt>
   1873c:	mov	r6, #0
   18740:	mov	r5, r0
   18744:	mov	r7, r6
   18748:	b	18700 <g_strcmp0@plt+0x4764>
   1874c:	mov	r4, r0
   18750:	b	18714 <g_strcmp0@plt+0x4778>
   18754:	mov	r4, r0
   18758:	b	18704 <g_strcmp0@plt+0x4768>
   1875c:	b	1873c <g_strcmp0@plt+0x47a0>
   18760:	b	1873c <g_strcmp0@plt+0x47a0>
   18764:	b	1873c <g_strcmp0@plt+0x47a0>
   18768:	b	1873c <g_strcmp0@plt+0x47a0>
   1876c:	mov	r5, r0
   18770:	mov	r6, #0
   18774:	cmp	r4, #0
   18778:	beq	18700 <g_strcmp0@plt+0x4764>
   1877c:	mov	r0, r4
   18780:	bl	1390c <g_variant_builder_unref@plt>
   18784:	b	18700 <g_strcmp0@plt+0x4764>
   18788:	b	1876c <g_strcmp0@plt+0x47d0>
   1878c:	b	186f8 <g_strcmp0@plt+0x475c>
   18790:	b	1873c <g_strcmp0@plt+0x47a0>
   18794:	b	186f8 <g_strcmp0@plt+0x475c>
   18798:	mov	r5, r0
   1879c:	b	18774 <g_strcmp0@plt+0x47d8>
   187a0:	b	1876c <g_strcmp0@plt+0x47d0>
   187a4:	b	1876c <g_strcmp0@plt+0x47d0>
   187a8:	b	1876c <g_strcmp0@plt+0x47d0>
   187ac:	b	1876c <g_strcmp0@plt+0x47d0>
   187b0:	b	1876c <g_strcmp0@plt+0x47d0>
   187b4:	b	186f8 <g_strcmp0@plt+0x475c>
   187b8:	mov	r4, r0
   187bc:	b	18724 <g_strcmp0@plt+0x4788>
   187c0:	push	{r4, lr}
   187c4:	subs	r4, r0, #0
   187c8:	beq	187ec <g_strcmp0@plt+0x4850>
   187cc:	movw	r2, #48680	; 0xbe28
   187d0:	mvn	r1, #0
   187d4:	movt	r2, #1
   187d8:	bl	13af8 <g_strstr_len@plt>
   187dc:	cmp	r0, #0
   187e0:	beq	1880c <g_strcmp0@plt+0x4870>
   187e4:	mov	r0, #1
   187e8:	pop	{r4, pc}
   187ec:	ldr	r1, [pc, #56]	; 1882c <g_strcmp0@plt+0x4890>
   187f0:	movw	r0, #38412	; 0x960c
   187f4:	movw	r2, #48660	; 0xbe14
   187f8:	movt	r0, #1
   187fc:	movt	r2, #1
   18800:	bl	13600 <g_return_if_fail_warning@plt>
   18804:	mov	r0, r4
   18808:	pop	{r4, pc}
   1880c:	mov	r0, r4
   18810:	mvn	r1, #0
   18814:	movw	r2, #48652	; 0xbe0c
   18818:	movt	r2, #1
   1881c:	bl	13af8 <g_strstr_len@plt>
   18820:	adds	r0, r0, #0
   18824:	movne	r0, #1
   18828:	pop	{r4, pc}
   1882c:	andeq	fp, r1, r8, ror ip
   18830:	push	{r4, lr}
   18834:	subs	r4, r0, #0
   18838:	beq	1888c <g_strcmp0@plt+0x48f0>
   1883c:	bl	187c0 <g_strcmp0@plt+0x4824>
   18840:	cmp	r0, #0
   18844:	beq	18850 <g_strcmp0@plt+0x48b4>
   18848:	mov	r0, #1
   1884c:	pop	{r4, pc}
   18850:	movw	r2, #48688	; 0xbe30
   18854:	mov	r0, r4
   18858:	movt	r2, #1
   1885c:	mvn	r1, #0
   18860:	bl	13af8 <g_strstr_len@plt>
   18864:	cmp	r0, #0
   18868:	bne	18848 <g_strcmp0@plt+0x48ac>
   1886c:	mov	r0, r4
   18870:	mvn	r1, #0
   18874:	movw	r2, #48692	; 0xbe34
   18878:	movt	r2, #1
   1887c:	bl	13af8 <g_strstr_len@plt>
   18880:	adds	r0, r0, #0
   18884:	movne	r0, #1
   18888:	pop	{r4, pc}
   1888c:	ldr	r1, [pc, #24]	; 188ac <g_strcmp0@plt+0x4910>
   18890:	movw	r0, #38412	; 0x960c
   18894:	movw	r2, #48660	; 0xbe14
   18898:	movt	r0, #1
   1889c:	movt	r2, #1
   188a0:	bl	13600 <g_return_if_fail_warning@plt>
   188a4:	mov	r0, r4
   188a8:	pop	{r4, pc}
   188ac:	muleq	r1, ip, ip
   188b0:	cmp	r0, #0
   188b4:	push	{r4, r5, r6, lr}
   188b8:	beq	18900 <g_strcmp0@plt+0x4964>
   188bc:	bl	13c30 <g_file_get_basename@plt>
   188c0:	mov	r5, r0
   188c4:	bl	13f00 <g_get_user_data_dir@plt>
   188c8:	movw	r1, #48696	; 0xbe38
   188cc:	mov	r2, r5
   188d0:	movt	r1, #1
   188d4:	mov	r3, #0
   188d8:	bl	137ec <g_build_filename@plt>
   188dc:	mov	r6, r0
   188e0:	bl	13de0 <g_file_new_for_path@plt>
   188e4:	mov	r4, r0
   188e8:	mov	r0, r6
   188ec:	bl	13b94 <g_free@plt>
   188f0:	mov	r0, r5
   188f4:	bl	13b94 <g_free@plt>
   188f8:	mov	r0, r4
   188fc:	pop	{r4, r5, r6, pc}
   18900:	movw	r0, #38412	; 0x960c
   18904:	movw	r2, #48700	; 0xbe3c
   18908:	movt	r0, #1
   1890c:	movt	r2, #1
   18910:	ldr	r1, [pc, #88]	; 18970 <g_strcmp0@plt+0x49d4>
   18914:	bl	13600 <g_return_if_fail_warning@plt>
   18918:	mov	r6, #0
   1891c:	mov	r5, r6
   18920:	mov	r4, r6
   18924:	b	188e8 <g_strcmp0@plt+0x494c>
   18928:	mov	r6, #0
   1892c:	mov	r4, r0
   18930:	mov	r5, r6
   18934:	mov	r0, r6
   18938:	bl	13b94 <g_free@plt>
   1893c:	mov	r0, r5
   18940:	bl	13b94 <g_free@plt>
   18944:	mov	r0, r4
   18948:	bl	13e88 <_Unwind_Resume@plt>
   1894c:	mov	r4, r0
   18950:	b	1893c <g_strcmp0@plt+0x49a0>
   18954:	mov	r4, r0
   18958:	b	18934 <g_strcmp0@plt+0x4998>
   1895c:	mov	r4, r0
   18960:	mov	r6, #0
   18964:	b	18934 <g_strcmp0@plt+0x4998>
   18968:	b	1895c <g_strcmp0@plt+0x49c0>
   1896c:	b	18928 <g_strcmp0@plt+0x498c>
   18970:			; <UNDEFINED> instruction: 0x0001bcb4
   18974:	push	{r3, r4, r5, r6, r7, lr}
   18978:	subs	r6, r0, #0
   1897c:	beq	189d4 <g_strcmp0@plt+0x4a38>
   18980:	ldr	r0, [r6, #4]
   18984:	mov	r1, #4
   18988:	add	r0, r0, #1
   1898c:	bl	13d98 <g_malloc0_n@plt>
   18990:	ldr	r3, [r6, #4]
   18994:	cmp	r3, #0
   18998:	mov	r7, r0
   1899c:	beq	189cc <g_strcmp0@plt+0x4a30>
   189a0:	mov	r4, #0
   189a4:	mov	r5, r4
   189a8:	ldr	r3, [r6]
   189ac:	add	r5, r5, #1
   189b0:	ldr	r0, [r3, r4]
   189b4:	bl	138d0 <g_strdup@plt>
   189b8:	ldr	r3, [r6, #4]
   189bc:	cmp	r3, r5
   189c0:	str	r0, [r7, r4]
   189c4:	add	r4, r4, #4
   189c8:	bhi	189a8 <g_strcmp0@plt+0x4a0c>
   189cc:	mov	r0, r7
   189d0:	pop	{r3, r4, r5, r6, r7, pc}
   189d4:	ldr	r1, [pc, #24]	; 189f4 <g_strcmp0@plt+0x4a58>
   189d8:	movw	r0, #38412	; 0x960c
   189dc:	movw	r2, #48716	; 0xbe4c
   189e0:	movt	r0, #1
   189e4:	movt	r2, #1
   189e8:	bl	13600 <g_return_if_fail_warning@plt>
   189ec:	mov	r0, r6
   189f0:	pop	{r3, r4, r5, r6, r7, pc}
   189f4:	ldrdeq	fp, [r1], -r8
   189f8:	push	{r4, r5, r6, lr}
   189fc:	movw	r4, #53256	; 0xd008
   18a00:	movt	r4, #2
   18a04:	sub	sp, sp, #16
   18a08:	subs	r1, r0, #0
   18a0c:	mov	r2, #0
   18a10:	ldr	r3, [r4]
   18a14:	str	r2, [sp, #8]
   18a18:	str	r3, [sp, #12]
   18a1c:	beq	18aec <g_strcmp0@plt+0x4b50>
   18a20:	movw	r0, #48732	; 0xbe5c
   18a24:	movt	r0, #1
   18a28:	bl	13cc0 <g_strconcat@plt>
   18a2c:	mov	r5, r0
   18a30:	movw	r2, #48788	; 0xbe94
   18a34:	movw	r0, #38412	; 0x960c
   18a38:	movt	r2, #1
   18a3c:	movt	r0, #1
   18a40:	mov	r1, #128	; 0x80
   18a44:	mov	r3, r5
   18a48:	bl	137b0 <g_log@plt>
   18a4c:	mov	r0, #0
   18a50:	mov	r1, r5
   18a54:	mov	r2, r0
   18a58:	add	r3, sp, #8
   18a5c:	bl	13960 <gtk_show_uri@plt>
   18a60:	ldr	r2, [sp, #8]
   18a64:	cmp	r2, #0
   18a68:	beq	18afc <g_strcmp0@plt+0x4b60>
   18a6c:	movw	r3, #39016	; 0x9868
   18a70:	movt	r3, #1
   18a74:	str	r3, [sp]
   18a78:	mov	r1, #3
   18a7c:	ldr	ip, [r2, #8]
   18a80:	mov	r0, #0
   18a84:	mov	r2, r1
   18a88:	mov	r3, #1
   18a8c:	str	ip, [sp, #4]
   18a90:	bl	13e4c <gtk_message_dialog_new@plt>
   18a94:	mov	r6, r0
   18a98:	bl	13c0c <gtk_dialog_get_type@plt>
   18a9c:	mov	r1, r0
   18aa0:	mov	r0, r6
   18aa4:	bl	13738 <g_type_check_instance_cast@plt>
   18aa8:	bl	13d08 <gtk_dialog_run@plt>
   18aac:	mov	r0, r6
   18ab0:	bl	13a98 <gtk_widget_destroy@plt>
   18ab4:	mov	r6, #0
   18ab8:	mov	r0, r5
   18abc:	bl	13b94 <g_free@plt>
   18ac0:	ldr	r0, [sp, #8]
   18ac4:	cmp	r0, #0
   18ac8:	beq	18ad0 <g_strcmp0@plt+0x4b34>
   18acc:	bl	136a8 <g_error_free@plt>
   18ad0:	ldr	r2, [sp, #12]
   18ad4:	mov	r0, r6
   18ad8:	ldr	r3, [r4]
   18adc:	cmp	r2, r3
   18ae0:	bne	18b04 <g_strcmp0@plt+0x4b68>
   18ae4:	add	sp, sp, #16
   18ae8:	pop	{r4, r5, r6, pc}
   18aec:	movw	r0, #48760	; 0xbe78
   18af0:	movt	r0, #1
   18af4:	bl	138d0 <g_strdup@plt>
   18af8:	b	18a2c <g_strcmp0@plt+0x4a90>
   18afc:	mov	r6, #1
   18b00:	b	18ab8 <g_strcmp0@plt+0x4b1c>
   18b04:	bl	13b58 <__stack_chk_fail@plt>
   18b08:	mov	r4, r0
   18b0c:	mov	r5, #0
   18b10:	mov	r0, r5
   18b14:	bl	13b94 <g_free@plt>
   18b18:	ldr	r0, [sp, #8]
   18b1c:	cmp	r0, #0
   18b20:	beq	18b28 <g_strcmp0@plt+0x4b8c>
   18b24:	bl	136a8 <g_error_free@plt>
   18b28:	mov	r0, r4
   18b2c:	bl	13e88 <_Unwind_Resume@plt>
   18b30:	mov	r4, r0
   18b34:	b	18b18 <g_strcmp0@plt+0x4b7c>
   18b38:	mov	r4, r0
   18b3c:	b	18b10 <g_strcmp0@plt+0x4b74>
   18b40:	b	18b08 <g_strcmp0@plt+0x4b6c>
   18b44:	cmp	r0, #0
   18b48:	push	{r4, r5, r6, lr}
   18b4c:	beq	18ba0 <g_strcmp0@plt+0x4c04>
   18b50:	ldrb	r3, [r0]
   18b54:	cmp	r3, #0
   18b58:	popeq	{r4, r5, r6, pc}
   18b5c:	movw	r2, #53260	; 0xd00c
   18b60:	movt	r2, #2
   18b64:	add	r4, r0, #1
   18b68:	mov	r5, r0
   18b6c:	ldr	r6, [r2]
   18b70:	lsl	r3, r3, #1
   18b74:	mov	r0, #95	; 0x5f
   18b78:	ldrh	r3, [r6, r3]
   18b7c:	tst	r3, #1
   18b80:	ldrbne	r0, [r5]
   18b84:	bl	1393c <g_ascii_tolower@plt>
   18b88:	strb	r0, [r5]
   18b8c:	mov	r5, r4
   18b90:	ldrb	r3, [r4], #1
   18b94:	cmp	r3, #0
   18b98:	bne	18b70 <g_strcmp0@plt+0x4bd4>
   18b9c:	pop	{r4, r5, r6, pc}
   18ba0:	movw	r0, #38412	; 0x960c
   18ba4:	movw	r2, #48804	; 0xbea4
   18ba8:	movt	r0, #1
   18bac:	movt	r2, #1
   18bb0:	ldr	r1, [pc, #4]	; 18bbc <g_strcmp0@plt+0x4c20>
   18bb4:	pop	{r4, r5, r6, lr}
   18bb8:	b	13600 <g_return_if_fail_warning@plt>
   18bbc:	strdeq	fp, [r1], -r4
   18bc0:	cmp	r0, #0
   18bc4:	push	{r4}		; (str r4, [sp, #-4]!)
   18bc8:	beq	18c3c <g_strcmp0@plt+0x4ca0>
   18bcc:	ldrb	r3, [r0]
   18bd0:	cmp	r3, #0
   18bd4:	beq	18c34 <g_strcmp0@plt+0x4c98>
   18bd8:	movw	r1, #53260	; 0xd00c
   18bdc:	movt	r1, #2
   18be0:	add	r2, r0, #1
   18be4:	mov	r4, #95	; 0x5f
   18be8:	ldr	ip, [r1]
   18bec:	cmp	r3, #32
   18bf0:	bic	r1, r3, #4
   18bf4:	sub	r1, r1, #40	; 0x28
   18bf8:	beq	18c24 <g_strcmp0@plt+0x4c88>
   18bfc:	cmp	r1, #1
   18c00:	bls	18c24 <g_strcmp0@plt+0x4c88>
   18c04:	cmp	r3, #91	; 0x5b
   18c08:	lsl	r1, r3, #1
   18c0c:	beq	18c24 <g_strcmp0@plt+0x4c88>
   18c10:	cmp	r3, #93	; 0x5d
   18c14:	beq	18c24 <g_strcmp0@plt+0x4c88>
   18c18:	ldrh	r3, [ip, r1]
   18c1c:	tst	r3, #1
   18c20:	strbeq	r4, [r0]
   18c24:	mov	r0, r2
   18c28:	ldrb	r3, [r2], #1
   18c2c:	cmp	r3, #0
   18c30:	bne	18bec <g_strcmp0@plt+0x4c50>
   18c34:	pop	{r4}		; (ldr r4, [sp], #4)
   18c38:	bx	lr
   18c3c:	movw	r0, #38412	; 0x960c
   18c40:	movw	r2, #48804	; 0xbea4
   18c44:	movt	r0, #1
   18c48:	movt	r2, #1
   18c4c:	ldr	r1, [pc, #4]	; 18c58 <g_strcmp0@plt+0x4cbc>
   18c50:	pop	{r4}		; (ldr r4, [sp], #4)
   18c54:	b	13600 <g_return_if_fail_warning@plt>
   18c58:	andeq	fp, r1, r0, lsl sp
   18c5c:	cmp	r0, #6
   18c60:	beq	18c90 <g_strcmp0@plt+0x4cf4>
   18c64:	cmp	r0, #9
   18c68:	beq	18ca4 <g_strcmp0@plt+0x4d08>
   18c6c:	cmp	r0, #7
   18c70:	bne	18c88 <g_strcmp0@plt+0x4cec>
   18c74:	movw	r1, #48832	; 0xbec0
   18c78:	mov	r0, #0
   18c7c:	movt	r1, #1
   18c80:	mov	r2, #5
   18c84:	b	13bb8 <dcgettext@plt>
   18c88:	mov	r0, #0
   18c8c:	bx	lr
   18c90:	movw	r1, #48820	; 0xbeb4
   18c94:	mov	r0, #0
   18c98:	movt	r1, #1
   18c9c:	mov	r2, #5
   18ca0:	b	13bb8 <dcgettext@plt>
   18ca4:	movw	r1, #48824	; 0xbeb8
   18ca8:	mov	r0, #0
   18cac:	movt	r1, #1
   18cb0:	mov	r2, #5
   18cb4:	b	13bb8 <dcgettext@plt>
   18cb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18cbc:	sub	sp, sp, #52	; 0x34
   18cc0:	mov	r6, r1
   18cc4:	mov	r7, r2
   18cc8:	mov	r8, r3
   18ccc:	mov	r9, r0
   18cd0:	bl	13bdc <gtk_image_get_pixbuf@plt>
   18cd4:	subs	r4, r0, #0
   18cd8:	beq	18e44 <g_strcmp0@plt+0x4ea8>
   18cdc:	bl	139d8 <gdk_pixbuf_get_bits_per_sample@plt>
   18ce0:	mov	r5, r0
   18ce4:	mov	r0, r4
   18ce8:	bl	13ed0 <gdk_pixbuf_get_has_alpha@plt>
   18cec:	cmp	r0, #0
   18cf0:	beq	18e24 <g_strcmp0@plt+0x4e88>
   18cf4:	cmp	r5, #8
   18cf8:	moveq	r5, #153	; 0x99
   18cfc:	movteq	r5, #4
   18d00:	bne	18e2c <g_strcmp0@plt+0x4e90>
   18d04:	mov	r1, #80	; 0x50
   18d08:	mov	r0, r4
   18d0c:	bl	13738 <g_type_check_instance_cast@plt>
   18d10:	movw	r1, #48840	; 0xbec8
   18d14:	movt	r1, #1
   18d18:	bl	13f78 <g_object_get_data@plt>
   18d1c:	subs	sl, r0, #0
   18d20:	beq	18e84 <g_strcmp0@plt+0x4ee8>
   18d24:	bl	13618 <cd_transform_new@plt>
   18d28:	mov	r1, r6
   18d2c:	mov	fp, r0
   18d30:	bl	13750 <cd_transform_set_input_icc@plt>
   18d34:	mov	r0, fp
   18d38:	mov	r1, r7
   18d3c:	bl	135c4 <cd_transform_set_abstract_icc@plt>
   18d40:	mov	r0, fp
   18d44:	mov	r1, r8
   18d48:	bl	13f24 <cd_transform_set_output_icc@plt>
   18d4c:	mov	r0, fp
   18d50:	mov	r1, #1
   18d54:	bl	13c60 <cd_transform_set_rendering_intent@plt>
   18d58:	mov	r0, fp
   18d5c:	mov	r1, r5
   18d60:	bl	135b8 <cd_transform_set_input_pixel_format@plt>
   18d64:	mov	r0, fp
   18d68:	mov	r1, r5
   18d6c:	bl	13d68 <cd_transform_set_output_pixel_format@plt>
   18d70:	mov	r0, r4
   18d74:	bl	1387c <gdk_pixbuf_get_rowstride@plt>
   18d78:	mov	r5, r0
   18d7c:	mov	r0, r4
   18d80:	bl	139fc <gdk_pixbuf_get_width@plt>
   18d84:	mov	r1, r0
   18d88:	mov	r0, r5
   18d8c:	bl	191c4 <g_strcmp0@plt+0x5228>
   18d90:	mov	r8, r0
   18d94:	mov	r0, sl
   18d98:	bl	13e64 <gdk_pixbuf_get_pixels@plt>
   18d9c:	mov	r7, r0
   18da0:	mov	r0, r4
   18da4:	bl	13e64 <gdk_pixbuf_get_pixels@plt>
   18da8:	mov	r6, r0
   18dac:	mov	r0, r4
   18db0:	bl	139fc <gdk_pixbuf_get_width@plt>
   18db4:	mov	r5, r0
   18db8:	mov	r0, r4
   18dbc:	bl	139b4 <gdk_pixbuf_get_height@plt>
   18dc0:	mov	sl, r0
   18dc4:	mov	r0, r4
   18dc8:	bl	1387c <gdk_pixbuf_get_rowstride@plt>
   18dcc:	mov	r1, r8
   18dd0:	str	sl, [sp]
   18dd4:	bl	18fb8 <g_strcmp0@plt+0x501c>
   18dd8:	ldr	r3, [sp, #88]	; 0x58
   18ddc:	mov	ip, #0
   18de0:	mov	r1, r7
   18de4:	mov	r2, r6
   18de8:	str	r3, [sp, #12]
   18dec:	mov	r3, r5
   18df0:	stmib	sp, {r0, ip}
   18df4:	mov	r0, fp
   18df8:	bl	13c54 <cd_transform_process@plt>
   18dfc:	cmp	r0, #0
   18e00:	moveq	r4, r0
   18e04:	bne	18e60 <g_strcmp0@plt+0x4ec4>
   18e08:	cmp	fp, #0
   18e0c:	beq	18e48 <g_strcmp0@plt+0x4eac>
   18e10:	mov	r0, fp
   18e14:	bl	13d38 <g_object_unref@plt>
   18e18:	mov	r0, r4
   18e1c:	add	sp, sp, #52	; 0x34
   18e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e24:	cmp	r5, #8
   18e28:	beq	18e54 <g_strcmp0@plt+0x4eb8>
   18e2c:	movw	r3, #48852	; 0xbed4
   18e30:	ldr	r0, [sp, #88]	; 0x58
   18e34:	movt	r3, #1
   18e38:	mov	r1, #1
   18e3c:	mov	r2, #0
   18e40:	bl	13828 <g_set_error_literal@plt>
   18e44:	mov	r4, #0
   18e48:	mov	r0, r4
   18e4c:	add	sp, sp, #52	; 0x34
   18e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e54:	mov	r5, #25
   18e58:	movt	r5, #4
   18e5c:	b	18d04 <g_strcmp0@plt+0x4d68>
   18e60:	mov	r0, r4
   18e64:	bl	13570 <g_object_ref@plt>
   18e68:	mov	r0, r9
   18e6c:	mov	r1, r4
   18e70:	bl	13954 <gtk_image_set_from_pixbuf@plt>
   18e74:	mov	r0, r4
   18e78:	bl	13d38 <g_object_unref@plt>
   18e7c:	mov	r4, #1
   18e80:	b	18e08 <g_strcmp0@plt+0x4e6c>
   18e84:	mov	r0, r4
   18e88:	bl	13e64 <gdk_pixbuf_get_pixels@plt>
   18e8c:	mov	fp, r0
   18e90:	mov	r0, r4
   18e94:	bl	139d8 <gdk_pixbuf_get_bits_per_sample@plt>
   18e98:	mov	r3, r0
   18e9c:	mov	r0, r4
   18ea0:	str	r3, [sp, #32]
   18ea4:	bl	1387c <gdk_pixbuf_get_rowstride@plt>
   18ea8:	ldr	r3, [sp, #32]
   18eac:	mul	r3, r0, r3
   18eb0:	mov	r0, r4
   18eb4:	str	r3, [sp, #32]
   18eb8:	bl	139b4 <gdk_pixbuf_get_height@plt>
   18ebc:	ldr	r3, [sp, #32]
   18ec0:	mul	r3, r0, r3
   18ec4:	mov	r0, fp
   18ec8:	cmp	r3, #0
   18ecc:	add	r2, r3, #7
   18ed0:	movge	r1, r3
   18ed4:	movlt	r1, r2
   18ed8:	asr	r1, r1, #3
   18edc:	bl	13858 <g_memdup@plt>
   18ee0:	mov	fp, r0
   18ee4:	mov	r0, r4
   18ee8:	bl	1378c <gdk_pixbuf_get_colorspace@plt>
   18eec:	mov	r1, r0
   18ef0:	mov	r0, r4
   18ef4:	str	r1, [sp, #28]
   18ef8:	bl	13ed0 <gdk_pixbuf_get_has_alpha@plt>
   18efc:	mov	r2, r0
   18f00:	mov	r0, r4
   18f04:	str	r2, [sp, #36]	; 0x24
   18f08:	bl	139d8 <gdk_pixbuf_get_bits_per_sample@plt>
   18f0c:	mov	r3, r0
   18f10:	mov	r0, r4
   18f14:	str	r3, [sp, #32]
   18f18:	bl	139fc <gdk_pixbuf_get_width@plt>
   18f1c:	mov	ip, r0
   18f20:	mov	r0, r4
   18f24:	str	ip, [sp, #40]	; 0x28
   18f28:	bl	139b4 <gdk_pixbuf_get_height@plt>
   18f2c:	str	r0, [sp, #44]	; 0x2c
   18f30:	mov	r0, r4
   18f34:	bl	1387c <gdk_pixbuf_get_rowstride@plt>
   18f38:	ldr	ip, [sp, #40]	; 0x28
   18f3c:	ldr	r2, [sp, #36]	; 0x24
   18f40:	ldr	r3, [sp, #32]
   18f44:	str	ip, [sp]
   18f48:	ldr	ip, [sp, #44]	; 0x2c
   18f4c:	ldr	r1, [sp, #28]
   18f50:	str	sl, [sp, #16]
   18f54:	str	ip, [sp, #4]
   18f58:	movw	ip, #15252	; 0x3b94
   18f5c:	movt	ip, #1
   18f60:	str	ip, [sp, #12]
   18f64:	str	r0, [sp, #8]
   18f68:	mov	r0, fp
   18f6c:	bl	13684 <gdk_pixbuf_new_from_data@plt>
   18f70:	mov	r1, #80	; 0x50
   18f74:	mov	sl, r0
   18f78:	mov	r0, r4
   18f7c:	bl	13738 <g_type_check_instance_cast@plt>
   18f80:	mov	r2, sl
   18f84:	movw	r1, #48840	; 0xbec8
   18f88:	movw	r3, #15672	; 0x3d38
   18f8c:	movt	r1, #1
   18f90:	movt	r3, #1
   18f94:	bl	1360c <g_object_set_data_full@plt>
   18f98:	b	18d24 <g_strcmp0@plt+0x4d88>
   18f9c:	cmp	fp, #0
   18fa0:	mov	r4, r0
   18fa4:	beq	18fb0 <g_strcmp0@plt+0x5014>
   18fa8:	mov	r0, fp
   18fac:	bl	13d38 <g_object_unref@plt>
   18fb0:	mov	r0, r4
   18fb4:	bl	13e88 <_Unwind_Resume@plt>
   18fb8:	subs	r2, r1, #1
   18fbc:	bxeq	lr
   18fc0:	bcc	19198 <g_strcmp0@plt+0x51fc>
   18fc4:	cmp	r0, r1
   18fc8:	bls	1917c <g_strcmp0@plt+0x51e0>
   18fcc:	tst	r1, r2
   18fd0:	beq	19188 <g_strcmp0@plt+0x51ec>
   18fd4:	clz	r3, r0
   18fd8:	clz	r2, r1
   18fdc:	sub	r3, r2, r3
   18fe0:	rsbs	r3, r3, #31
   18fe4:	addne	r3, r3, r3, lsl #1
   18fe8:	mov	r2, #0
   18fec:	addne	pc, pc, r3, lsl #2
   18ff0:	nop	{0}
   18ff4:	cmp	r0, r1, lsl #31
   18ff8:	adc	r2, r2, r2
   18ffc:	subcs	r0, r0, r1, lsl #31
   19000:	cmp	r0, r1, lsl #30
   19004:	adc	r2, r2, r2
   19008:	subcs	r0, r0, r1, lsl #30
   1900c:	cmp	r0, r1, lsl #29
   19010:	adc	r2, r2, r2
   19014:	subcs	r0, r0, r1, lsl #29
   19018:	cmp	r0, r1, lsl #28
   1901c:	adc	r2, r2, r2
   19020:	subcs	r0, r0, r1, lsl #28
   19024:	cmp	r0, r1, lsl #27
   19028:	adc	r2, r2, r2
   1902c:	subcs	r0, r0, r1, lsl #27
   19030:	cmp	r0, r1, lsl #26
   19034:	adc	r2, r2, r2
   19038:	subcs	r0, r0, r1, lsl #26
   1903c:	cmp	r0, r1, lsl #25
   19040:	adc	r2, r2, r2
   19044:	subcs	r0, r0, r1, lsl #25
   19048:	cmp	r0, r1, lsl #24
   1904c:	adc	r2, r2, r2
   19050:	subcs	r0, r0, r1, lsl #24
   19054:	cmp	r0, r1, lsl #23
   19058:	adc	r2, r2, r2
   1905c:	subcs	r0, r0, r1, lsl #23
   19060:	cmp	r0, r1, lsl #22
   19064:	adc	r2, r2, r2
   19068:	subcs	r0, r0, r1, lsl #22
   1906c:	cmp	r0, r1, lsl #21
   19070:	adc	r2, r2, r2
   19074:	subcs	r0, r0, r1, lsl #21
   19078:	cmp	r0, r1, lsl #20
   1907c:	adc	r2, r2, r2
   19080:	subcs	r0, r0, r1, lsl #20
   19084:	cmp	r0, r1, lsl #19
   19088:	adc	r2, r2, r2
   1908c:	subcs	r0, r0, r1, lsl #19
   19090:	cmp	r0, r1, lsl #18
   19094:	adc	r2, r2, r2
   19098:	subcs	r0, r0, r1, lsl #18
   1909c:	cmp	r0, r1, lsl #17
   190a0:	adc	r2, r2, r2
   190a4:	subcs	r0, r0, r1, lsl #17
   190a8:	cmp	r0, r1, lsl #16
   190ac:	adc	r2, r2, r2
   190b0:	subcs	r0, r0, r1, lsl #16
   190b4:	cmp	r0, r1, lsl #15
   190b8:	adc	r2, r2, r2
   190bc:	subcs	r0, r0, r1, lsl #15
   190c0:	cmp	r0, r1, lsl #14
   190c4:	adc	r2, r2, r2
   190c8:	subcs	r0, r0, r1, lsl #14
   190cc:	cmp	r0, r1, lsl #13
   190d0:	adc	r2, r2, r2
   190d4:	subcs	r0, r0, r1, lsl #13
   190d8:	cmp	r0, r1, lsl #12
   190dc:	adc	r2, r2, r2
   190e0:	subcs	r0, r0, r1, lsl #12
   190e4:	cmp	r0, r1, lsl #11
   190e8:	adc	r2, r2, r2
   190ec:	subcs	r0, r0, r1, lsl #11
   190f0:	cmp	r0, r1, lsl #10
   190f4:	adc	r2, r2, r2
   190f8:	subcs	r0, r0, r1, lsl #10
   190fc:	cmp	r0, r1, lsl #9
   19100:	adc	r2, r2, r2
   19104:	subcs	r0, r0, r1, lsl #9
   19108:	cmp	r0, r1, lsl #8
   1910c:	adc	r2, r2, r2
   19110:	subcs	r0, r0, r1, lsl #8
   19114:	cmp	r0, r1, lsl #7
   19118:	adc	r2, r2, r2
   1911c:	subcs	r0, r0, r1, lsl #7
   19120:	cmp	r0, r1, lsl #6
   19124:	adc	r2, r2, r2
   19128:	subcs	r0, r0, r1, lsl #6
   1912c:	cmp	r0, r1, lsl #5
   19130:	adc	r2, r2, r2
   19134:	subcs	r0, r0, r1, lsl #5
   19138:	cmp	r0, r1, lsl #4
   1913c:	adc	r2, r2, r2
   19140:	subcs	r0, r0, r1, lsl #4
   19144:	cmp	r0, r1, lsl #3
   19148:	adc	r2, r2, r2
   1914c:	subcs	r0, r0, r1, lsl #3
   19150:	cmp	r0, r1, lsl #2
   19154:	adc	r2, r2, r2
   19158:	subcs	r0, r0, r1, lsl #2
   1915c:	cmp	r0, r1, lsl #1
   19160:	adc	r2, r2, r2
   19164:	subcs	r0, r0, r1, lsl #1
   19168:	cmp	r0, r1
   1916c:	adc	r2, r2, r2
   19170:	subcs	r0, r0, r1
   19174:	mov	r0, r2
   19178:	bx	lr
   1917c:	moveq	r0, #1
   19180:	movne	r0, #0
   19184:	bx	lr
   19188:	clz	r2, r1
   1918c:	rsb	r2, r2, #31
   19190:	lsr	r0, r0, r2
   19194:	bx	lr
   19198:	cmp	r0, #0
   1919c:	mvnne	r0, #0
   191a0:	b	19404 <g_strcmp0@plt+0x5468>
   191a4:	cmp	r1, #0
   191a8:	beq	19198 <g_strcmp0@plt+0x51fc>
   191ac:	push	{r0, r1, lr}
   191b0:	bl	18fb8 <g_strcmp0@plt+0x501c>
   191b4:	pop	{r1, r2, lr}
   191b8:	mul	r3, r2, r0
   191bc:	sub	r1, r1, r3
   191c0:	bx	lr
   191c4:	cmp	r1, #0
   191c8:	beq	193d4 <g_strcmp0@plt+0x5438>
   191cc:	eor	ip, r0, r1
   191d0:	rsbmi	r1, r1, #0
   191d4:	subs	r2, r1, #1
   191d8:	beq	193a0 <g_strcmp0@plt+0x5404>
   191dc:	movs	r3, r0
   191e0:	rsbmi	r3, r0, #0
   191e4:	cmp	r3, r1
   191e8:	bls	193ac <g_strcmp0@plt+0x5410>
   191ec:	tst	r1, r2
   191f0:	beq	193bc <g_strcmp0@plt+0x5420>
   191f4:	clz	r2, r3
   191f8:	clz	r0, r1
   191fc:	sub	r2, r0, r2
   19200:	rsbs	r2, r2, #31
   19204:	addne	r2, r2, r2, lsl #1
   19208:	mov	r0, #0
   1920c:	addne	pc, pc, r2, lsl #2
   19210:	nop	{0}
   19214:	cmp	r3, r1, lsl #31
   19218:	adc	r0, r0, r0
   1921c:	subcs	r3, r3, r1, lsl #31
   19220:	cmp	r3, r1, lsl #30
   19224:	adc	r0, r0, r0
   19228:	subcs	r3, r3, r1, lsl #30
   1922c:	cmp	r3, r1, lsl #29
   19230:	adc	r0, r0, r0
   19234:	subcs	r3, r3, r1, lsl #29
   19238:	cmp	r3, r1, lsl #28
   1923c:	adc	r0, r0, r0
   19240:	subcs	r3, r3, r1, lsl #28
   19244:	cmp	r3, r1, lsl #27
   19248:	adc	r0, r0, r0
   1924c:	subcs	r3, r3, r1, lsl #27
   19250:	cmp	r3, r1, lsl #26
   19254:	adc	r0, r0, r0
   19258:	subcs	r3, r3, r1, lsl #26
   1925c:	cmp	r3, r1, lsl #25
   19260:	adc	r0, r0, r0
   19264:	subcs	r3, r3, r1, lsl #25
   19268:	cmp	r3, r1, lsl #24
   1926c:	adc	r0, r0, r0
   19270:	subcs	r3, r3, r1, lsl #24
   19274:	cmp	r3, r1, lsl #23
   19278:	adc	r0, r0, r0
   1927c:	subcs	r3, r3, r1, lsl #23
   19280:	cmp	r3, r1, lsl #22
   19284:	adc	r0, r0, r0
   19288:	subcs	r3, r3, r1, lsl #22
   1928c:	cmp	r3, r1, lsl #21
   19290:	adc	r0, r0, r0
   19294:	subcs	r3, r3, r1, lsl #21
   19298:	cmp	r3, r1, lsl #20
   1929c:	adc	r0, r0, r0
   192a0:	subcs	r3, r3, r1, lsl #20
   192a4:	cmp	r3, r1, lsl #19
   192a8:	adc	r0, r0, r0
   192ac:	subcs	r3, r3, r1, lsl #19
   192b0:	cmp	r3, r1, lsl #18
   192b4:	adc	r0, r0, r0
   192b8:	subcs	r3, r3, r1, lsl #18
   192bc:	cmp	r3, r1, lsl #17
   192c0:	adc	r0, r0, r0
   192c4:	subcs	r3, r3, r1, lsl #17
   192c8:	cmp	r3, r1, lsl #16
   192cc:	adc	r0, r0, r0
   192d0:	subcs	r3, r3, r1, lsl #16
   192d4:	cmp	r3, r1, lsl #15
   192d8:	adc	r0, r0, r0
   192dc:	subcs	r3, r3, r1, lsl #15
   192e0:	cmp	r3, r1, lsl #14
   192e4:	adc	r0, r0, r0
   192e8:	subcs	r3, r3, r1, lsl #14
   192ec:	cmp	r3, r1, lsl #13
   192f0:	adc	r0, r0, r0
   192f4:	subcs	r3, r3, r1, lsl #13
   192f8:	cmp	r3, r1, lsl #12
   192fc:	adc	r0, r0, r0
   19300:	subcs	r3, r3, r1, lsl #12
   19304:	cmp	r3, r1, lsl #11
   19308:	adc	r0, r0, r0
   1930c:	subcs	r3, r3, r1, lsl #11
   19310:	cmp	r3, r1, lsl #10
   19314:	adc	r0, r0, r0
   19318:	subcs	r3, r3, r1, lsl #10
   1931c:	cmp	r3, r1, lsl #9
   19320:	adc	r0, r0, r0
   19324:	subcs	r3, r3, r1, lsl #9
   19328:	cmp	r3, r1, lsl #8
   1932c:	adc	r0, r0, r0
   19330:	subcs	r3, r3, r1, lsl #8
   19334:	cmp	r3, r1, lsl #7
   19338:	adc	r0, r0, r0
   1933c:	subcs	r3, r3, r1, lsl #7
   19340:	cmp	r3, r1, lsl #6
   19344:	adc	r0, r0, r0
   19348:	subcs	r3, r3, r1, lsl #6
   1934c:	cmp	r3, r1, lsl #5
   19350:	adc	r0, r0, r0
   19354:	subcs	r3, r3, r1, lsl #5
   19358:	cmp	r3, r1, lsl #4
   1935c:	adc	r0, r0, r0
   19360:	subcs	r3, r3, r1, lsl #4
   19364:	cmp	r3, r1, lsl #3
   19368:	adc	r0, r0, r0
   1936c:	subcs	r3, r3, r1, lsl #3
   19370:	cmp	r3, r1, lsl #2
   19374:	adc	r0, r0, r0
   19378:	subcs	r3, r3, r1, lsl #2
   1937c:	cmp	r3, r1, lsl #1
   19380:	adc	r0, r0, r0
   19384:	subcs	r3, r3, r1, lsl #1
   19388:	cmp	r3, r1
   1938c:	adc	r0, r0, r0
   19390:	subcs	r3, r3, r1
   19394:	cmp	ip, #0
   19398:	rsbmi	r0, r0, #0
   1939c:	bx	lr
   193a0:	teq	ip, r0
   193a4:	rsbmi	r0, r0, #0
   193a8:	bx	lr
   193ac:	movcc	r0, #0
   193b0:	asreq	r0, ip, #31
   193b4:	orreq	r0, r0, #1
   193b8:	bx	lr
   193bc:	clz	r2, r1
   193c0:	rsb	r2, r2, #31
   193c4:	cmp	ip, #0
   193c8:	lsr	r0, r3, r2
   193cc:	rsbmi	r0, r0, #0
   193d0:	bx	lr
   193d4:	cmp	r0, #0
   193d8:	mvngt	r0, #-2147483648	; 0x80000000
   193dc:	movlt	r0, #-2147483648	; 0x80000000
   193e0:	b	19404 <g_strcmp0@plt+0x5468>
   193e4:	cmp	r1, #0
   193e8:	beq	193d4 <g_strcmp0@plt+0x5438>
   193ec:	push	{r0, r1, lr}
   193f0:	bl	191cc <g_strcmp0@plt+0x5230>
   193f4:	pop	{r1, r2, lr}
   193f8:	mul	r3, r2, r0
   193fc:	sub	r1, r1, r3
   19400:	bx	lr
   19404:	push	{r1, lr}
   19408:	mov	r0, #8
   1940c:	bl	13c78 <raise@plt>
   19410:	pop	{r1, pc}
   19414:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19418:	mov	r7, r0
   1941c:	ldr	r6, [pc, #76]	; 19470 <g_strcmp0@plt+0x54d4>
   19420:	mov	r8, r1
   19424:	ldr	r5, [pc, #72]	; 19474 <g_strcmp0@plt+0x54d8>
   19428:	mov	r9, r2
   1942c:	add	r6, pc, r6
   19430:	bl	13538 <_init@@Base>
   19434:	add	r5, pc, r5
   19438:	rsb	r6, r5, r6
   1943c:	asrs	r6, r6, #2
   19440:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   19444:	sub	r5, r5, #4
   19448:	mov	r4, #0
   1944c:	add	r4, r4, #1
   19450:	ldr	r3, [r5, #4]!
   19454:	mov	r0, r7
   19458:	mov	r1, r8
   1945c:	mov	r2, r9
   19460:	blx	r3
   19464:	cmp	r4, r6
   19468:	bne	1944c <g_strcmp0@plt+0x54b0>
   1946c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19470:	ldrdeq	r3, [r1], -ip
   19474:	ldrdeq	r3, [r1], -r0
   19478:	bx	lr

Disassembly of section .fini:

0001947c <_fini@@Base>:
   1947c:	push	{r3, lr}
   19480:	pop	{r3, pc}
