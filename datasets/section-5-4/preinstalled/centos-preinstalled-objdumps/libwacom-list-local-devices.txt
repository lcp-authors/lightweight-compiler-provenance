
centos-preinstalled/libwacom-list-local-devices:     file format elf32-littlearm


Disassembly of section .init:

000109d4 <_init@@Base>:
   109d4:	push	{r3, lr}
   109d8:	bl	10de8 <strncmp@plt+0x2e0>
   109dc:	pop	{r3, pc}

Disassembly of section .plt:

000109e0 <g_free@plt-0x14>:
   109e0:	push	{lr}		; (str lr, [sp, #-4]!)
   109e4:	ldr	lr, [pc, #4]	; 109f0 <_init@@Base+0x1c>
   109e8:	add	lr, pc, lr
   109ec:	ldr	pc, [lr, #8]!
   109f0:	andeq	r1, r1, r0, lsl r6

000109f4 <g_free@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1552]!	; 0x610

00010a00 <abort@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #69632	; 0x11000
   10a08:	ldr	pc, [ip, #1544]!	; 0x608

00010a0c <__libc_start_main@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #69632	; 0x11000
   10a14:	ldr	pc, [ip, #1536]!	; 0x600

00010a18 <g_option_context_free@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #69632	; 0x11000
   10a20:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a24 <libwacom_database_destroy@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #69632	; 0x11000
   10a2c:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a30 <__gmon_start__@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #69632	; 0x11000
   10a38:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a3c <libwacom_new_from_path@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #69632	; 0x11000
   10a44:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a48 <scandir@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #69632	; 0x11000
   10a50:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a54 <g_option_context_add_main_entries@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #69632	; 0x11000
   10a5c:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a60 <libwacom_destroy@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #69632	; 0x11000
   10a68:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a6c <free@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #69632	; 0x11000
   10a74:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a78 <libwacom_database_new@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #69632	; 0x11000
   10a80:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a84 <libwacom_print_device_description@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #69632	; 0x11000
   10a8c:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a90 <g_option_context_parse@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #69632	; 0x11000
   10a98:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a9c <alphasort@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #69632	; 0x11000
   10aa4:	ldr	pc, [ip, #1440]!	; 0x5a0

00010aa8 <libwacom_database_new_for_path@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #69632	; 0x11000
   10ab0:	ldr	pc, [ip, #1432]!	; 0x598

00010ab4 <__snprintf_chk@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #69632	; 0x11000
   10abc:	ldr	pc, [ip, #1424]!	; 0x590

00010ac0 <fwrite@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #69632	; 0x11000
   10ac8:	ldr	pc, [ip, #1416]!	; 0x588

00010acc <__dprintf_chk@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1408]!	; 0x580

00010ad8 <__stack_chk_fail@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1400]!	; 0x578

00010ae4 <__fprintf_chk@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1392]!	; 0x570

00010af0 <g_option_context_new@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #69632	; 0x11000
   10af8:	ldr	pc, [ip, #1384]!	; 0x568

00010afc <g_error_free@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1376]!	; 0x560

00010b08 <strncmp@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1368]!	; 0x558

Disassembly of section .text:

00010b14 <.text>:
   10b14:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b18:	sub	sp, sp, #4096	; 0x1000
   10b1c:	sub	sp, sp, #32
   10b20:	movw	r7, #8368	; 0x20b0
   10b24:	add	r5, sp, #4096	; 0x1000
   10b28:	movt	r7, #2
   10b2c:	add	r5, r5, #32
   10b30:	movw	ip, #61420	; 0xefec
   10b34:	movt	ip, #65535	; 0xffff
   10b38:	ldr	lr, [r7]
   10b3c:	mov	r4, #0
   10b40:	movw	r2, #61416	; 0xefe8
   10b44:	str	r0, [r5, ip]
   10b48:	add	ip, sp, #8192	; 0x2000
   10b4c:	movt	r2, #65535	; 0xffff
   10b50:	movw	r3, #61428	; 0xeff4
   10b54:	str	lr, [ip, #-4068]	; 0xfffff01c
   10b58:	add	ip, sp, #4096	; 0x1000
   10b5c:	add	ip, ip, #32
   10b60:	movt	r3, #65535	; 0xffff
   10b64:	mov	r0, r4
   10b68:	movw	r5, #61432	; 0xeff8
   10b6c:	str	r1, [ip, r2]
   10b70:	movt	r5, #65535	; 0xffff
   10b74:	str	r4, [ip, r3]
   10b78:	bl	10af0 <g_option_context_new@plt>
   10b7c:	mov	r2, r4
   10b80:	movw	r1, #8308	; 0x2074
   10b84:	movt	r1, #2
   10b88:	mov	r6, r0
   10b8c:	bl	10a54 <g_option_context_add_main_entries@plt>
   10b90:	add	ip, sp, #4096	; 0x1000
   10b94:	add	r2, sp, #32
   10b98:	add	ip, ip, #32
   10b9c:	mov	r0, r6
   10ba0:	add	r1, sp, #12
   10ba4:	sub	r2, r2, #24
   10ba8:	add	r3, sp, #24
   10bac:	str	r4, [ip, r5]
   10bb0:	bl	10a90 <g_option_context_parse@plt>
   10bb4:	cmp	r0, r4
   10bb8:	bne	10c28 <strncmp@plt+0x120>
   10bbc:	add	r2, sp, #4096	; 0x1000
   10bc0:	add	r2, r2, #32
   10bc4:	ldr	r3, [r2, r5]
   10bc8:	cmp	r3, r4
   10bcc:	moveq	r0, #1
   10bd0:	beq	10c08 <strncmp@plt+0x100>
   10bd4:	movw	r1, #8372	; 0x20b4
   10bd8:	movt	r1, #2
   10bdc:	ldr	r3, [r3, #8]
   10be0:	movw	r2, #3972	; 0xf84
   10be4:	ldr	r0, [r1]
   10be8:	movt	r2, #1
   10bec:	mov	r1, #1
   10bf0:	bl	10ae4 <__fprintf_chk@plt>
   10bf4:	add	r3, sp, #4096	; 0x1000
   10bf8:	add	r3, r3, #32
   10bfc:	ldr	r0, [r3, r5]
   10c00:	bl	10afc <g_error_free@plt>
   10c04:	mov	r0, #1
   10c08:	add	ip, sp, #8192	; 0x2000
   10c0c:	ldr	r2, [ip, #-4068]	; 0xfffff01c
   10c10:	ldr	r3, [r7]
   10c14:	cmp	r2, r3
   10c18:	bne	10da8 <strncmp@plt+0x2a0>
   10c1c:	add	sp, sp, #4096	; 0x1000
   10c20:	add	sp, sp, #32
   10c24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c28:	movw	r4, #8380	; 0x20bc
   10c2c:	movt	r4, #2
   10c30:	mov	r0, r6
   10c34:	bl	10a18 <g_option_context_free@plt>
   10c38:	ldr	r0, [r4]
   10c3c:	cmp	r0, #0
   10c40:	beq	10d50 <strncmp@plt+0x248>
   10c44:	bl	10aa8 <libwacom_database_new_for_path@plt>
   10c48:	mov	r8, r0
   10c4c:	ldr	r0, [r4]
   10c50:	bl	109f4 <g_free@plt>
   10c54:	cmp	r8, #0
   10c58:	beq	10d80 <strncmp@plt+0x278>
   10c5c:	add	r1, sp, #20
   10c60:	movw	r0, #4016	; 0xfb0
   10c64:	movw	r2, #3808	; 0xee0
   10c68:	movt	r0, #1
   10c6c:	movt	r2, #1
   10c70:	movw	r3, #2716	; 0xa9c
   10c74:	movt	r3, #1
   10c78:	bl	10a48 <scandir@plt>
   10c7c:	cmp	r0, #0
   10c80:	ble	10d5c <strncmp@plt+0x254>
   10c84:	sub	r4, r0, #1
   10c88:	movw	r9, #4060	; 0xfdc
   10c8c:	movw	sl, #61428	; 0xeff4
   10c90:	movt	r9, #1
   10c94:	lsl	r5, r4, #2
   10c98:	movt	sl, #65535	; 0xffff
   10c9c:	add	r2, sp, #4096	; 0x1000
   10ca0:	mov	r1, #4096	; 0x1000
   10ca4:	add	r2, r2, #32
   10ca8:	mov	r3, r1
   10cac:	add	r0, sp, #28
   10cb0:	ldr	ip, [r2, sl]
   10cb4:	mov	r2, #1
   10cb8:	str	r9, [sp]
   10cbc:	ldr	ip, [ip, r5]
   10cc0:	add	ip, ip, #11
   10cc4:	str	ip, [sp, #4]
   10cc8:	bl	10ab4 <__snprintf_chk@plt>
   10ccc:	mov	r2, #0
   10cd0:	mov	r0, r8
   10cd4:	add	r1, sp, #28
   10cd8:	mov	r3, r2
   10cdc:	bl	10a3c <libwacom_new_from_path@plt>
   10ce0:	subs	r6, r0, #0
   10ce4:	beq	10d10 <strncmp@plt+0x208>
   10ce8:	mov	r1, r6
   10cec:	mov	r0, #1
   10cf0:	bl	10a84 <libwacom_print_device_description@plt>
   10cf4:	mov	r0, r6
   10cf8:	bl	10a60 <libwacom_destroy@plt>
   10cfc:	mov	r0, #1
   10d00:	movw	r2, #4076	; 0xfec
   10d04:	mov	r1, r0
   10d08:	movt	r2, #1
   10d0c:	bl	10acc <__dprintf_chk@plt>
   10d10:	sub	r4, r4, #1
   10d14:	sub	r5, r5, #4
   10d18:	cmn	r4, #1
   10d1c:	bne	10c9c <strncmp@plt+0x194>
   10d20:	add	r5, sp, #4096	; 0x1000
   10d24:	movw	r3, #61428	; 0xeff4
   10d28:	add	r5, r5, #32
   10d2c:	movt	r3, #65535	; 0xffff
   10d30:	ldr	r0, [r5, r3]
   10d34:	cmp	r0, #0
   10d38:	beq	10d40 <strncmp@plt+0x238>
   10d3c:	bl	10a6c <free@plt>
   10d40:	mov	r0, r8
   10d44:	bl	10a24 <libwacom_database_destroy@plt>
   10d48:	mov	r0, #0
   10d4c:	b	10c08 <strncmp@plt+0x100>
   10d50:	bl	10a78 <libwacom_database_new@plt>
   10d54:	mov	r8, r0
   10d58:	b	10c54 <strncmp@plt+0x14c>
   10d5c:	movw	r3, #8372	; 0x20b4
   10d60:	movt	r3, #2
   10d64:	movw	r0, #4028	; 0xfbc
   10d68:	mov	r1, #1
   10d6c:	ldr	r3, [r3]
   10d70:	mov	r2, #28
   10d74:	movt	r0, #1
   10d78:	bl	10ac0 <fwrite@plt>
   10d7c:	b	10d20 <strncmp@plt+0x218>
   10d80:	movw	r3, #8372	; 0x20b4
   10d84:	movt	r3, #2
   10d88:	movw	r0, #3976	; 0xf88
   10d8c:	mov	r1, #1
   10d90:	ldr	r3, [r3]
   10d94:	movt	r0, #1
   10d98:	mov	r2, #37	; 0x25
   10d9c:	bl	10ac0 <fwrite@plt>
   10da0:	mov	r0, #1
   10da4:	b	10c08 <strncmp@plt+0x100>
   10da8:	bl	10ad8 <__stack_chk_fail@plt>
   10dac:	mov	fp, #0
   10db0:	mov	lr, #0
   10db4:	pop	{r1}		; (ldr r1, [sp], #4)
   10db8:	mov	r2, sp
   10dbc:	push	{r2}		; (str r2, [sp, #-4]!)
   10dc0:	push	{r0}		; (str r0, [sp, #-4]!)
   10dc4:	ldr	ip, [pc, #16]	; 10ddc <strncmp@plt+0x2d4>
   10dc8:	push	{ip}		; (str ip, [sp, #-4]!)
   10dcc:	ldr	r0, [pc, #12]	; 10de0 <strncmp@plt+0x2d8>
   10dd0:	ldr	r3, [pc, #12]	; 10de4 <strncmp@plt+0x2dc>
   10dd4:	bl	10a0c <__libc_start_main@plt>
   10dd8:	bl	10a00 <abort@plt>
   10ddc:	andeq	r0, r1, r8, ror #30
   10de0:	andeq	r0, r1, r4, lsl fp
   10de4:	andeq	r0, r1, r4, lsl #30
   10de8:	ldr	r3, [pc, #20]	; 10e04 <strncmp@plt+0x2fc>
   10dec:	ldr	r2, [pc, #20]	; 10e08 <strncmp@plt+0x300>
   10df0:	add	r3, pc, r3
   10df4:	ldr	r2, [r3, r2]
   10df8:	cmp	r2, #0
   10dfc:	bxeq	lr
   10e00:	b	10a30 <__gmon_start__@plt>
   10e04:	andeq	r1, r1, r8, lsl #4
   10e08:	andeq	r0, r0, ip, rrx
   10e0c:	push	{r3, lr}
   10e10:	movw	r0, #8364	; 0x20ac
   10e14:	ldr	r3, [pc, #36]	; 10e40 <strncmp@plt+0x338>
   10e18:	movt	r0, #2
   10e1c:	rsb	r3, r0, r3
   10e20:	cmp	r3, #6
   10e24:	popls	{r3, pc}
   10e28:	movw	r3, #0
   10e2c:	movt	r3, #0
   10e30:	cmp	r3, #0
   10e34:	popeq	{r3, pc}
   10e38:	blx	r3
   10e3c:	pop	{r3, pc}
   10e40:	andeq	r2, r2, pc, lsr #1
   10e44:	push	{r3, lr}
   10e48:	movw	r0, #8364	; 0x20ac
   10e4c:	movw	r3, #8364	; 0x20ac
   10e50:	movt	r0, #2
   10e54:	movt	r3, #2
   10e58:	rsb	r3, r0, r3
   10e5c:	asr	r3, r3, #2
   10e60:	add	r3, r3, r3, lsr #31
   10e64:	asrs	r1, r3, #1
   10e68:	popeq	{r3, pc}
   10e6c:	movw	r2, #0
   10e70:	movt	r2, #0
   10e74:	cmp	r2, #0
   10e78:	popeq	{r3, pc}
   10e7c:	blx	r2
   10e80:	pop	{r3, pc}
   10e84:	push	{r4, lr}
   10e88:	movw	r4, #8376	; 0x20b8
   10e8c:	movt	r4, #2
   10e90:	ldrb	r3, [r4]
   10e94:	cmp	r3, #0
   10e98:	popne	{r4, pc}
   10e9c:	bl	10e0c <strncmp@plt+0x304>
   10ea0:	mov	r3, #1
   10ea4:	strb	r3, [r4]
   10ea8:	pop	{r4, pc}
   10eac:	movw	r0, #7908	; 0x1ee4
   10eb0:	movt	r0, #2
   10eb4:	push	{r3, lr}
   10eb8:	ldr	r3, [r0]
   10ebc:	cmp	r3, #0
   10ec0:	beq	10ed8 <strncmp@plt+0x3d0>
   10ec4:	movw	r3, #0
   10ec8:	movt	r3, #0
   10ecc:	cmp	r3, #0
   10ed0:	beq	10ed8 <strncmp@plt+0x3d0>
   10ed4:	blx	r3
   10ed8:	pop	{r3, lr}
   10edc:	b	10e44 <strncmp@plt+0x33c>
   10ee0:	add	r1, r0, #11
   10ee4:	mov	r2, #5
   10ee8:	push	{r3, lr}
   10eec:	movw	r0, #3964	; 0xf7c
   10ef0:	movt	r0, #1
   10ef4:	bl	10b08 <strncmp@plt>
   10ef8:	rsbs	r0, r0, #1
   10efc:	movcc	r0, #0
   10f00:	pop	{r3, pc}
   10f04:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10f08:	mov	r7, r0
   10f0c:	ldr	r6, [pc, #76]	; 10f60 <strncmp@plt+0x458>
   10f10:	mov	r8, r1
   10f14:	ldr	r5, [pc, #72]	; 10f64 <strncmp@plt+0x45c>
   10f18:	mov	r9, r2
   10f1c:	add	r6, pc, r6
   10f20:	bl	109d4 <_init@@Base>
   10f24:	add	r5, pc, r5
   10f28:	rsb	r6, r5, r6
   10f2c:	asrs	r6, r6, #2
   10f30:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10f34:	sub	r5, r5, #4
   10f38:	mov	r4, #0
   10f3c:	add	r4, r4, #1
   10f40:	ldr	r3, [r5, #4]!
   10f44:	mov	r0, r7
   10f48:	mov	r1, r8
   10f4c:	mov	r2, r9
   10f50:	blx	r3
   10f54:	cmp	r4, r6
   10f58:	bne	10f3c <strncmp@plt+0x434>
   10f5c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10f60:			; <UNDEFINED> instruction: 0x00010fbc
   10f64:			; <UNDEFINED> instruction: 0x00010fb0
   10f68:	bx	lr

Disassembly of section .fini:

00010f6c <_fini@@Base>:
   10f6c:	push	{r3, lr}
   10f70:	pop	{r3, pc}
