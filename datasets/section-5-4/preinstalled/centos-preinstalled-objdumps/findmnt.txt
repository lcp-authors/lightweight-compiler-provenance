
centos-preinstalled/findmnt:     file format elf32-littlearm


Disassembly of section .init:

00011fe0 <_init@@Base>:
   11fe0:	push	{r3, lr}
   11fe4:	bl	139f0 <fputs@plt+0x13c0>
   11fe8:	pop	{r3, pc}

Disassembly of section .plt:

00011fec <mnt_cache_find_tag_value@plt-0x14>:
   11fec:	push	{lr}		; (str lr, [sp, #-4]!)
   11ff0:	ldr	lr, [pc, #4]	; 11ffc <_init@@Base+0x1c>
   11ff4:	add	lr, pc, lr
   11ff8:	ldr	pc, [lr, #8]!
   11ffc:	andeq	sl, r1, r4

00012000 <mnt_cache_find_tag_value@plt>:
   12000:	add	ip, pc, #0, 12
   12004:	add	ip, ip, #106496	; 0x1a000
   12008:	ldr	pc, [ip, #4]!

0001200c <mnt_new_table@plt>:
   1200c:	add	ip, pc, #0, 12
   12010:	add	ip, ip, #102400	; 0x19000
   12014:	ldr	pc, [ip, #4092]!	; 0xffc

00012018 <fileno@plt>:
   12018:	add	ip, pc, #0, 12
   1201c:	add	ip, ip, #102400	; 0x19000
   12020:	ldr	pc, [ip, #4084]!	; 0xff4

00012024 <mnt_free_tabdiff@plt>:
   12024:	add	ip, pc, #0, 12
   12028:	add	ip, ip, #102400	; 0x19000
   1202c:	ldr	pc, [ip, #4076]!	; 0xfec

00012030 <abort@plt>:
   12030:	add	ip, pc, #0, 12
   12034:	add	ip, ip, #102400	; 0x19000
   12038:	ldr	pc, [ip, #4068]!	; 0xfe4

0001203c <mnt_table_find_next_fs@plt>:
   1203c:	add	ip, pc, #0, 12
   12040:	add	ip, ip, #102400	; 0x19000
   12044:	ldr	pc, [ip, #4060]!	; 0xfdc

00012048 <mnt_fs_is_kernel@plt>:
   12048:	add	ip, pc, #0, 12
   1204c:	add	ip, ip, #102400	; 0x19000
   12050:	ldr	pc, [ip, #4052]!	; 0xfd4

00012054 <mnt_fs_get_vfs_options@plt>:
   12054:	add	ip, pc, #0, 12
   12058:	add	ip, ip, #102400	; 0x19000
   1205c:	ldr	pc, [ip, #4044]!	; 0xfcc

00012060 <err@plt>:
   12060:	add	ip, pc, #0, 12
   12064:	add	ip, ip, #102400	; 0x19000
   12068:	ldr	pc, [ip, #4036]!	; 0xfc4

0001206c <__libc_start_main@plt>:
   1206c:	add	ip, pc, #0, 12
   12070:	add	ip, ip, #102400	; 0x19000
   12074:	ldr	pc, [ip, #4028]!	; 0xfbc

00012078 <udev_device_get_property_value@plt>:
   12078:	add	ip, pc, #0, 12
   1207c:	add	ip, ip, #102400	; 0x19000
   12080:	ldr	pc, [ip, #4020]!	; 0xfb4

00012084 <mnt_fs_get_options@plt>:
   12084:	add	ip, pc, #0, 12
   12088:	add	ip, ip, #102400	; 0x19000
   1208c:	ldr	pc, [ip, #4012]!	; 0xfac

00012090 <__gmon_start__@plt>:
   12090:	add	ip, pc, #0, 12
   12094:	add	ip, ip, #102400	; 0x19000
   12098:	ldr	pc, [ip, #4004]!	; 0xfa4

0001209c <__ctype_get_mb_cur_max@plt>:
   1209c:	add	ip, pc, #0, 12
   120a0:	add	ip, ip, #102400	; 0x19000
   120a4:	ldr	pc, [ip, #3996]!	; 0xf9c

000120a8 <mnt_table_parse_stream@plt>:
   120a8:	add	ip, pc, #0, 12
   120ac:	add	ip, ip, #102400	; 0x19000
   120b0:	ldr	pc, [ip, #3988]!	; 0xf94

000120b4 <rewind@plt>:
   120b4:	add	ip, pc, #0, 12
   120b8:	add	ip, ip, #102400	; 0x19000
   120bc:	ldr	pc, [ip, #3980]!	; 0xf8c

000120c0 <mnt_fs_get_fstype@plt>:
   120c0:	add	ip, pc, #0, 12
   120c4:	add	ip, ip, #102400	; 0x19000
   120c8:	ldr	pc, [ip, #3972]!	; 0xf84

000120cc <strncpy@plt>:
   120cc:	add	ip, pc, #0, 12
   120d0:	add	ip, ip, #102400	; 0x19000
   120d4:	ldr	pc, [ip, #3964]!	; 0xf7c

000120d8 <fclose@plt>:
   120d8:	add	ip, pc, #0, 12
   120dc:	add	ip, ip, #102400	; 0x19000
   120e0:	ldr	pc, [ip, #3956]!	; 0xf74

000120e4 <getenv@plt>:
   120e4:	add	ip, pc, #0, 12
   120e8:	add	ip, ip, #102400	; 0x19000
   120ec:	ldr	pc, [ip, #3948]!	; 0xf6c

000120f0 <ttyname@plt>:
   120f0:	add	ip, pc, #0, 12
   120f4:	add	ip, ip, #102400	; 0x19000
   120f8:	ldr	pc, [ip, #3940]!	; 0xf64

000120fc <__printf_chk@plt>:
   120fc:	add	ip, pc, #0, 12
   12100:	add	ip, ip, #102400	; 0x19000
   12104:	ldr	pc, [ip, #3932]!	; 0xf5c

00012108 <strtod@plt>:
   12108:	add	ip, pc, #0, 12
   1210c:	add	ip, ip, #102400	; 0x19000
   12110:	ldr	pc, [ip, #3924]!	; 0xf54

00012114 <strchr@plt>:
   12114:	add	ip, pc, #0, 12
   12118:	add	ip, ip, #102400	; 0x19000
   1211c:	ldr	pc, [ip, #3916]!	; 0xf4c

00012120 <__cxa_atexit@plt>:
   12120:	add	ip, pc, #0, 12
   12124:	add	ip, ip, #102400	; 0x19000
   12128:	ldr	pc, [ip, #3908]!	; 0xf44

0001212c <__fpending@plt>:
   1212c:	add	ip, pc, #0, 12
   12130:	add	ip, ip, #102400	; 0x19000
   12134:	ldr	pc, [ip, #3900]!	; 0xf3c

00012138 <calloc@plt>:
   12138:	add	ip, pc, #0, 12
   1213c:	add	ip, ip, #102400	; 0x19000
   12140:	ldr	pc, [ip, #3892]!	; 0xf34

00012144 <mnt_reset_iter@plt>:
   12144:	add	ip, pc, #0, 12
   12148:	add	ip, ip, #102400	; 0x19000
   1214c:	ldr	pc, [ip, #3884]!	; 0xf2c

00012150 <mnt_fs_get_fs_options@plt>:
   12150:	add	ip, pc, #0, 12
   12154:	add	ip, ip, #102400	; 0x19000
   12158:	ldr	pc, [ip, #3876]!	; 0xf24

0001215c <memset@plt>:
   1215c:	add	ip, pc, #0, 12
   12160:	add	ip, ip, #102400	; 0x19000
   12164:	ldr	pc, [ip, #3868]!	; 0xf1c

00012168 <statvfs64@plt>:
   12168:	add	ip, pc, #0, 12
   1216c:	add	ip, ip, #102400	; 0x19000
   12170:	ldr	pc, [ip, #3860]!	; 0xf14

00012174 <bindtextdomain@plt>:
   12174:	add	ip, pc, #0, 12
   12178:	add	ip, ip, #102400	; 0x19000
   1217c:	ldr	pc, [ip, #3852]!	; 0xf0c

00012180 <mnt_table_set_cache@plt>:
   12180:	add	ip, pc, #0, 12
   12184:	add	ip, ip, #102400	; 0x19000
   12188:	ldr	pc, [ip, #3844]!	; 0xf04

0001218c <__strndup@plt>:
   1218c:	add	ip, pc, #0, 12
   12190:	add	ip, ip, #102400	; 0x19000
   12194:	ldr	pc, [ip, #3836]!	; 0xefc

00012198 <mbrtowc@plt>:
   12198:	add	ip, pc, #0, 12
   1219c:	add	ip, ip, #102400	; 0x19000
   121a0:	ldr	pc, [ip, #3828]!	; 0xef4

000121a4 <__assert_fail@plt>:
   121a4:	add	ip, pc, #0, 12
   121a8:	add	ip, ip, #102400	; 0x19000
   121ac:	ldr	pc, [ip, #3820]!	; 0xeec

000121b0 <__strtoll_internal@plt>:
   121b0:	add	ip, pc, #0, 12
   121b4:	add	ip, ip, #102400	; 0x19000
   121b8:	ldr	pc, [ip, #3812]!	; 0xee4

000121bc <_exit@plt>:
   121bc:	add	ip, pc, #0, 12
   121c0:	add	ip, ip, #102400	; 0x19000
   121c4:	ldr	pc, [ip, #3804]!	; 0xedc

000121c8 <udev_new@plt>:
   121c8:	add	ip, pc, #0, 12
   121cc:	add	ip, ip, #102400	; 0x19000
   121d0:	ldr	pc, [ip, #3796]!	; 0xed4

000121d4 <mnt_fs_match_options@plt>:
   121d4:	add	ip, pc, #0, 12
   121d8:	add	ip, ip, #102400	; 0x19000
   121dc:	ldr	pc, [ip, #3788]!	; 0xecc

000121e0 <free@plt>:
   121e0:	add	ip, pc, #0, 12
   121e4:	add	ip, ip, #102400	; 0x19000
   121e8:	ldr	pc, [ip, #3780]!	; 0xec4

000121ec <mnt_fs_get_optional_fields@plt>:
   121ec:	add	ip, pc, #0, 12
   121f0:	add	ip, ip, #102400	; 0x19000
   121f4:	ldr	pc, [ip, #3772]!	; 0xebc

000121f8 <getopt_long@plt>:
   121f8:	add	ip, pc, #0, 12
   121fc:	add	ip, ip, #102400	; 0x19000
   12200:	ldr	pc, [ip, #3764]!	; 0xeb4

00012204 <dcgettext@plt>:
   12204:	add	ip, pc, #0, 12
   12208:	add	ip, ip, #102400	; 0x19000
   1220c:	ldr	pc, [ip, #3756]!	; 0xeac

00012210 <mnt_fs_get_target@plt>:
   12210:	add	ip, pc, #0, 12
   12214:	add	ip, ip, #102400	; 0x19000
   12218:	ldr	pc, [ip, #3748]!	; 0xea4

0001221c <mnt_free_iter@plt>:
   1221c:	add	ip, pc, #0, 12
   12220:	add	ip, ip, #102400	; 0x19000
   12224:	ldr	pc, [ip, #3740]!	; 0xe9c

00012228 <access@plt>:
   12228:	add	ip, pc, #0, 12
   1222c:	add	ip, ip, #102400	; 0x19000
   12230:	ldr	pc, [ip, #3732]!	; 0xe94

00012234 <mnt_new_iter@plt>:
   12234:	add	ip, pc, #0, 12
   12238:	add	ip, ip, #102400	; 0x19000
   1223c:	ldr	pc, [ip, #3724]!	; 0xe8c

00012240 <mnt_table_find_source@plt>:
   12240:	add	ip, pc, #0, 12
   12244:	add	ip, ip, #102400	; 0x19000
   12248:	ldr	pc, [ip, #3716]!	; 0xe84

0001224c <ioctl@plt>:
   1224c:	add	ip, pc, #0, 12
   12250:	add	ip, ip, #102400	; 0x19000
   12254:	ldr	pc, [ip, #3708]!	; 0xe7c

00012258 <isatty@plt>:
   12258:	add	ip, pc, #0, 12
   1225c:	add	ip, ip, #102400	; 0x19000
   12260:	ldr	pc, [ip, #3700]!	; 0xe74

00012264 <mnt_table_next_child_fs@plt>:
   12264:	add	ip, pc, #0, 12
   12268:	add	ip, ip, #102400	; 0x19000
   1226c:	ldr	pc, [ip, #3692]!	; 0xe6c

00012270 <mempcpy@plt>:
   12270:	add	ip, pc, #0, 12
   12274:	add	ip, ip, #102400	; 0x19000
   12278:	ldr	pc, [ip, #3684]!	; 0xe64

0001227c <mnt_fs_is_pseudofs@plt>:
   1227c:	add	ip, pc, #0, 12
   12280:	add	ip, ip, #102400	; 0x19000
   12284:	ldr	pc, [ip, #3676]!	; 0xe5c

00012288 <mbstowcs@plt>:
   12288:	add	ip, pc, #0, 12
   1228c:	add	ip, ip, #102400	; 0x19000
   12290:	ldr	pc, [ip, #3668]!	; 0xe54

00012294 <strlen@plt>:
   12294:	add	ip, pc, #0, 12
   12298:	add	ip, ip, #102400	; 0x19000
   1229c:	ldr	pc, [ip, #3660]!	; 0xe4c

000122a0 <sscanf@plt>:
   122a0:	add	ip, pc, #0, 12
   122a4:	add	ip, ip, #102400	; 0x19000
   122a8:	ldr	pc, [ip, #3652]!	; 0xe44

000122ac <mnt_diff_tables@plt>:
   122ac:	add	ip, pc, #0, 12
   122b0:	add	ip, ip, #102400	; 0x19000
   122b4:	ldr	pc, [ip, #3644]!	; 0xe3c

000122b8 <strtoul@plt>:
   122b8:	add	ip, pc, #0, 12
   122bc:	add	ip, ip, #102400	; 0x19000
   122c0:	ldr	pc, [ip, #3636]!	; 0xe34

000122c4 <memcpy@plt>:
   122c4:	add	ip, pc, #0, 12
   122c8:	add	ip, ip, #102400	; 0x19000
   122cc:	ldr	pc, [ip, #3628]!	; 0xe2c

000122d0 <setlocale@plt>:
   122d0:	add	ip, pc, #0, 12
   122d4:	add	ip, ip, #102400	; 0x19000
   122d8:	ldr	pc, [ip, #3620]!	; 0xe24

000122dc <fopen64@plt>:
   122dc:	add	ip, pc, #0, 12
   122e0:	add	ip, ip, #102400	; 0x19000
   122e4:	ldr	pc, [ip, #3612]!	; 0xe1c

000122e8 <__ctype_tolower_loc@plt>:
   122e8:	add	ip, pc, #0, 12
   122ec:	add	ip, ip, #102400	; 0x19000
   122f0:	ldr	pc, [ip, #3604]!	; 0xe14

000122f4 <localeconv@plt>:
   122f4:	add	ip, pc, #0, 12
   122f8:	add	ip, ip, #102400	; 0x19000
   122fc:	ldr	pc, [ip, #3596]!	; 0xe0c

00012300 <mnt_fs_match_target@plt>:
   12300:	add	ip, pc, #0, 12
   12304:	add	ip, ip, #102400	; 0x19000
   12308:	ldr	pc, [ip, #3588]!	; 0xe04

0001230c <mnt_free_table@plt>:
   1230c:	add	ip, pc, #0, 12
   12310:	add	ip, ip, #102400	; 0x19000
   12314:	ldr	pc, [ip, #3580]!	; 0xdfc

00012318 <fgetc@plt>:
   12318:	add	ip, pc, #0, 12
   1231c:	add	ip, ip, #102400	; 0x19000
   12320:	ldr	pc, [ip, #3572]!	; 0xdf4

00012324 <udev_device_unref@plt>:
   12324:	add	ip, pc, #0, 12
   12328:	add	ip, ip, #102400	; 0x19000
   1232c:	ldr	pc, [ip, #3564]!	; 0xdec

00012330 <mnt_table_find_mountpoint@plt>:
   12330:	add	ip, pc, #0, 12
   12334:	add	ip, ip, #102400	; 0x19000
   12338:	ldr	pc, [ip, #3556]!	; 0xde4

0001233c <strtol@plt>:
   1233c:	add	ip, pc, #0, 12
   12340:	add	ip, ip, #102400	; 0x19000
   12344:	ldr	pc, [ip, #3548]!	; 0xddc

00012348 <mnt_fs_get_root@plt>:
   12348:	add	ip, pc, #0, 12
   1234c:	add	ip, ip, #102400	; 0x19000
   12350:	ldr	pc, [ip, #3540]!	; 0xdd4

00012354 <mnt_reset_table@plt>:
   12354:	add	ip, pc, #0, 12
   12358:	add	ip, ip, #102400	; 0x19000
   1235c:	ldr	pc, [ip, #3532]!	; 0xdcc

00012360 <raise@plt>:
   12360:	add	ip, pc, #0, 12
   12364:	add	ip, ip, #102400	; 0x19000
   12368:	ldr	pc, [ip, #3524]!	; 0xdc4

0001236c <errx@plt>:
   1236c:	add	ip, pc, #0, 12
   12370:	add	ip, ip, #102400	; 0x19000
   12374:	ldr	pc, [ip, #3516]!	; 0xdbc

00012378 <mnt_tabdiff_next_change@plt>:
   12378:	add	ip, pc, #0, 12
   1237c:	add	ip, ip, #102400	; 0x19000
   12380:	ldr	pc, [ip, #3508]!	; 0xdb4

00012384 <mnt_table_set_parser_errcb@plt>:
   12384:	add	ip, pc, #0, 12
   12388:	add	ip, ip, #102400	; 0x19000
   1238c:	ldr	pc, [ip, #3500]!	; 0xdac

00012390 <mnt_fs_get_propagation@plt>:
   12390:	add	ip, pc, #0, 12
   12394:	add	ip, ip, #102400	; 0x19000
   12398:	ldr	pc, [ip, #3492]!	; 0xda4

0001239c <__snprintf_chk@plt>:
   1239c:	add	ip, pc, #0, 12
   123a0:	add	ip, ip, #102400	; 0x19000
   123a4:	ldr	pc, [ip, #3484]!	; 0xd9c

000123a8 <strstr@plt>:
   123a8:	add	ip, pc, #0, 12
   123ac:	add	ip, ip, #102400	; 0x19000
   123b0:	ldr	pc, [ip, #3476]!	; 0xd94

000123b4 <udev_unref@plt>:
   123b4:	add	ip, pc, #0, 12
   123b8:	add	ip, ip, #102400	; 0x19000
   123bc:	ldr	pc, [ip, #3468]!	; 0xd8c

000123c0 <realpath@plt>:
   123c0:	add	ip, pc, #0, 12
   123c4:	add	ip, ip, #102400	; 0x19000
   123c8:	ldr	pc, [ip, #3460]!	; 0xd84

000123cc <mnt_table_parse_fstab@plt>:
   123cc:	add	ip, pc, #0, 12
   123d0:	add	ip, ip, #102400	; 0x19000
   123d4:	ldr	pc, [ip, #3452]!	; 0xd7c

000123d8 <udev_device_new_from_subsystem_sysname@plt>:
   123d8:	add	ip, pc, #0, 12
   123dc:	add	ip, ip, #102400	; 0x19000
   123e0:	ldr	pc, [ip, #3444]!	; 0xd74

000123e4 <mnt_fs_get_freq@plt>:
   123e4:	add	ip, pc, #0, 12
   123e8:	add	ip, ip, #102400	; 0x19000
   123ec:	ldr	pc, [ip, #3436]!	; 0xd6c

000123f0 <warn@plt>:
   123f0:	add	ip, pc, #0, 12
   123f4:	add	ip, ip, #102400	; 0x19000
   123f8:	ldr	pc, [ip, #3428]!	; 0xd64

000123fc <strncasecmp@plt>:
   123fc:	add	ip, pc, #0, 12
   12400:	add	ip, ip, #102400	; 0x19000
   12404:	ldr	pc, [ip, #3420]!	; 0xd5c

00012408 <__ctype_b_loc@plt>:
   12408:	add	ip, pc, #0, 12
   1240c:	add	ip, ip, #102400	; 0x19000
   12410:	ldr	pc, [ip, #3412]!	; 0xd54

00012414 <mnt_init_debug@plt>:
   12414:	add	ip, pc, #0, 12
   12418:	add	ip, ip, #102400	; 0x19000
   1241c:	ldr	pc, [ip, #3404]!	; 0xd4c

00012420 <malloc@plt>:
   12420:	add	ip, pc, #0, 12
   12424:	add	ip, ip, #102400	; 0x19000
   12428:	ldr	pc, [ip, #3396]!	; 0xd44

0001242c <mnt_resolve_spec@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #102400	; 0x19000
   12434:	ldr	pc, [ip, #3388]!	; 0xd3c

00012438 <nl_langinfo@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #102400	; 0x19000
   12440:	ldr	pc, [ip, #3380]!	; 0xd34

00012444 <__stack_chk_fail@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #102400	; 0x19000
   1244c:	ldr	pc, [ip, #3372]!	; 0xd2c

00012450 <mnt_fs_get_devno@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #102400	; 0x19000
   12458:	ldr	pc, [ip, #3364]!	; 0xd24

0001245c <mnt_resolve_path@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #102400	; 0x19000
   12464:	ldr	pc, [ip, #3356]!	; 0xd1c

00012468 <__fprintf_chk@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #102400	; 0x19000
   12470:	ldr	pc, [ip, #3348]!	; 0xd14

00012474 <poll@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #102400	; 0x19000
   1247c:	ldr	pc, [ip, #3340]!	; 0xd0c

00012480 <mnt_fs_match_fstype@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #102400	; 0x19000
   12488:	ldr	pc, [ip, #3332]!	; 0xd04

0001248c <mnt_fs_get_passno@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #102400	; 0x19000
   12494:	ldr	pc, [ip, #3324]!	; 0xcfc

00012498 <fputc@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #102400	; 0x19000
   124a0:	ldr	pc, [ip, #3316]!	; 0xcf4

000124a4 <mnt_table_parse_file@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #102400	; 0x19000
   124ac:	ldr	pc, [ip, #3308]!	; 0xcec

000124b0 <mnt_fs_get_tid@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #102400	; 0x19000
   124b8:	ldr	pc, [ip, #3300]!	; 0xce4

000124bc <mnt_fs_get_source@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #102400	; 0x19000
   124c4:	ldr	pc, [ip, #3292]!	; 0xcdc

000124c8 <textdomain@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #102400	; 0x19000
   124d0:	ldr	pc, [ip, #3284]!	; 0xcd4

000124d4 <mnt_table_next_fs@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #102400	; 0x19000
   124dc:	ldr	pc, [ip, #3276]!	; 0xccc

000124e0 <wcstombs@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #102400	; 0x19000
   124e8:	ldr	pc, [ip, #3268]!	; 0xcc4

000124ec <mnt_table_find_target@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #102400	; 0x19000
   124f4:	ldr	pc, [ip, #3260]!	; 0xcbc

000124f8 <strspn@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #102400	; 0x19000
   12500:	ldr	pc, [ip, #3252]!	; 0xcb4

00012504 <mnt_new_tabdiff@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #102400	; 0x19000
   1250c:	ldr	pc, [ip, #3244]!	; 0xcac

00012510 <mnt_iter_get_direction@plt>:
   12510:	add	ip, pc, #0, 12
   12514:	add	ip, ip, #102400	; 0x19000
   12518:	ldr	pc, [ip, #3236]!	; 0xca4

0001251c <mnt_fs_get_srcpath@plt>:
   1251c:	add	ip, pc, #0, 12
   12520:	add	ip, ip, #102400	; 0x19000
   12524:	ldr	pc, [ip, #3228]!	; 0xc9c

00012528 <warnx@plt>:
   12528:	add	ip, pc, #0, 12
   1252c:	add	ip, ip, #102400	; 0x19000
   12530:	ldr	pc, [ip, #3220]!	; 0xc94

00012534 <mnt_table_parse_mtab@plt>:
   12534:	add	ip, pc, #0, 12
   12538:	add	ip, ip, #102400	; 0x19000
   1253c:	ldr	pc, [ip, #3212]!	; 0xc8c

00012540 <snprintf@plt>:
   12540:	add	ip, pc, #0, 12
   12544:	add	ip, ip, #102400	; 0x19000
   12548:	ldr	pc, [ip, #3204]!	; 0xc84

0001254c <mnt_free_cache@plt>:
   1254c:	add	ip, pc, #0, 12
   12550:	add	ip, ip, #102400	; 0x19000
   12554:	ldr	pc, [ip, #3196]!	; 0xc7c

00012558 <strcspn@plt>:
   12558:	add	ip, pc, #0, 12
   1255c:	add	ip, ip, #102400	; 0x19000
   12560:	ldr	pc, [ip, #3188]!	; 0xc74

00012564 <__sprintf_chk@plt>:
   12564:	add	ip, pc, #0, 12
   12568:	add	ip, ip, #102400	; 0x19000
   1256c:	ldr	pc, [ip, #3180]!	; 0xc6c

00012570 <mnt_fs_get_id@plt>:
   12570:	add	ip, pc, #0, 12
   12574:	add	ip, ip, #102400	; 0x19000
   12578:	ldr	pc, [ip, #3172]!	; 0xc64

0001257c <mnt_table_get_root_fs@plt>:
   1257c:	add	ip, pc, #0, 12
   12580:	add	ip, ip, #102400	; 0x19000
   12584:	ldr	pc, [ip, #3164]!	; 0xc5c

00012588 <wcwidth@plt>:
   12588:	add	ip, pc, #0, 12
   1258c:	add	ip, ip, #102400	; 0x19000
   12590:	ldr	pc, [ip, #3156]!	; 0xc54

00012594 <strncmp@plt>:
   12594:	add	ip, pc, #0, 12
   12598:	add	ip, ip, #102400	; 0x19000
   1259c:	ldr	pc, [ip, #3148]!	; 0xc4c

000125a0 <ferror@plt>:
   125a0:	add	ip, pc, #0, 12
   125a4:	add	ip, ip, #102400	; 0x19000
   125a8:	ldr	pc, [ip, #3140]!	; 0xc44

000125ac <realloc@plt>:
   125ac:	add	ip, pc, #0, 12
   125b0:	add	ip, ip, #102400	; 0x19000
   125b4:	ldr	pc, [ip, #3132]!	; 0xc3c

000125b8 <iswprint@plt>:
   125b8:	add	ip, pc, #0, 12
   125bc:	add	ip, ip, #102400	; 0x19000
   125c0:	ldr	pc, [ip, #3124]!	; 0xc34

000125c4 <__strdup@plt>:
   125c4:	add	ip, pc, #0, 12
   125c8:	add	ip, ip, #102400	; 0x19000
   125cc:	ldr	pc, [ip, #3116]!	; 0xc2c

000125d0 <mnt_new_cache@plt>:
   125d0:	add	ip, pc, #0, 12
   125d4:	add	ip, ip, #102400	; 0x19000
   125d8:	ldr	pc, [ip, #3108]!	; 0xc24

000125dc <mnt_fs_match_source@plt>:
   125dc:	add	ip, pc, #0, 12
   125e0:	add	ip, ip, #102400	; 0x19000
   125e4:	ldr	pc, [ip, #3100]!	; 0xc1c

000125e8 <strcmp@plt>:
   125e8:	add	ip, pc, #0, 12
   125ec:	add	ip, ip, #102400	; 0x19000
   125f0:	ldr	pc, [ip, #3092]!	; 0xc14

000125f4 <exit@plt>:
   125f4:	add	ip, pc, #0, 12
   125f8:	add	ip, ip, #102400	; 0x19000
   125fc:	ldr	pc, [ip, #3084]!	; 0xc0c

00012600 <__vasprintf_chk@plt>:
   12600:	add	ip, pc, #0, 12
   12604:	add	ip, ip, #102400	; 0x19000
   12608:	ldr	pc, [ip, #3076]!	; 0xc04

0001260c <__errno_location@plt>:
   1260c:	add	ip, pc, #0, 12
   12610:	add	ip, ip, #102400	; 0x19000
   12614:	ldr	pc, [ip, #3068]!	; 0xbfc

00012618 <__strtoull_internal@plt>:
   12618:	add	ip, pc, #0, 12
   1261c:	add	ip, ip, #102400	; 0x19000
   12620:	ldr	pc, [ip, #3060]!	; 0xbf4

00012624 <mnt_fs_get_tag@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #102400	; 0x19000
   1262c:	ldr	pc, [ip, #3052]!	; 0xbec

00012630 <fputs@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #102400	; 0x19000
   12638:	ldr	pc, [ip, #3044]!	; 0xbe4

Disassembly of section .text:

00012640 <.text>:
   12640:	movw	r1, #43152	; 0xa890
   12644:	mov	r0, #1
   12648:	push	{r3, lr}
   1264c:	movt	r1, #1
   12650:	bl	12060 <err@plt>
   12654:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12658:	movw	r2, #50536	; 0xc568
   1265c:	sub	sp, sp, #116	; 0x74
   12660:	movt	r2, #2
   12664:	mov	r5, r1
   12668:	mov	r6, r0
   1266c:	str	r2, [sp, #20]
   12670:	movw	r1, #41352	; 0xa188
   12674:	ldr	r2, [r2]
   12678:	movt	r1, #1
   1267c:	mov	r0, #6
   12680:	mov	r3, #0
   12684:	str	r3, [sp, #68]	; 0x44
   12688:	movw	r4, #50560	; 0xc580
   1268c:	str	r3, [sp, #92]	; 0x5c
   12690:	movt	r4, #2
   12694:	str	r3, [sp, #96]	; 0x60
   12698:	movw	r9, #50552	; 0xc578
   1269c:	str	r3, [sp, #12]
   126a0:	movt	r9, #2
   126a4:	str	r3, [sp, #100]	; 0x64
   126a8:	str	r3, [sp, #104]	; 0x68
   126ac:	str	r2, [sp, #108]	; 0x6c
   126b0:	movw	r2, #49720	; 0xc238
   126b4:	str	r2, [sp, #16]
   126b8:	bl	122d0 <setlocale@plt>
   126bc:	movw	r0, #43512	; 0xa9f8
   126c0:	movw	r1, #43524	; 0xaa04
   126c4:	movt	r0, #1
   126c8:	movt	r1, #1
   126cc:	bl	12174 <bindtextdomain@plt>
   126d0:	ldr	r3, [sp, #16]
   126d4:	movw	r0, #43512	; 0xa9f8
   126d8:	movt	r0, #1
   126dc:	movt	r3, #2
   126e0:	str	r3, [sp, #16]
   126e4:	bl	124c8 <textdomain@plt>
   126e8:	ldr	r1, [sp, #12]
   126ec:	movw	r0, #19964	; 0x4dfc
   126f0:	movt	r0, #1
   126f4:	str	r1, [sp, #8]
   126f8:	bl	19bc8 <fputs@plt+0x7598>
   126fc:	ldr	r1, [sp, #16]
   12700:	ldr	r2, [sp, #12]
   12704:	ldr	r3, [r4, #116]	; 0x74
   12708:	add	r8, r1, #800	; 0x320
   1270c:	str	r2, [sp, #24]
   12710:	mov	r7, r2
   12714:	orr	r3, r3, #64	; 0x40
   12718:	mvn	r2, #0
   1271c:	str	r3, [r4, #116]	; 0x74
   12720:	str	r2, [sp, #48]	; 0x30
   12724:	mov	sl, #0
   12728:	movw	r2, #43732	; 0xaad4
   1272c:	str	sl, [sp]
   12730:	movt	r2, #1
   12734:	mov	r0, r6
   12738:	mov	r1, r5
   1273c:	ldr	r3, [pc, #4076]	; 13730 <fputs@plt+0x1100>
   12740:	bl	121f8 <getopt_long@plt>
   12744:	cmn	r0, #1
   12748:	beq	12c10 <fputs@plt+0x5e0>
   1274c:	cmp	r0, #77	; 0x4d
   12750:	ble	127d0 <fputs@plt+0x1a0>
   12754:	ldr	r1, [pc, #4056]	; 13734 <fputs@plt+0x1104>
   12758:	mov	ip, sl
   1275c:	mov	lr, sl
   12760:	add	fp, sp, #92	; 0x5c
   12764:	sub	sl, r1, #64	; 0x40
   12768:	mov	r3, #78	; 0x4e
   1276c:	cmp	r0, r3
   12770:	blt	127ac <fputs@plt+0x17c>
   12774:	movne	r2, sl
   12778:	beq	12794 <fputs@plt+0x164>
   1277c:	ldr	r3, [r2, #4]!
   12780:	cmp	r3, #0
   12784:	beq	127ac <fputs@plt+0x17c>
   12788:	cmp	r0, r3
   1278c:	blt	127ac <fputs@plt+0x17c>
   12790:	bne	1277c <fputs@plt+0x14c>
   12794:	ldr	r3, [fp, lr, lsl #2]
   12798:	cmp	r3, #0
   1279c:	streq	r0, [fp, lr, lsl #2]
   127a0:	beq	127ac <fputs@plt+0x17c>
   127a4:	cmp	r0, r3
   127a8:	bne	13044 <fputs@plt+0xa14>
   127ac:	ldr	r3, [r1]
   127b0:	add	ip, ip, #1
   127b4:	mov	sl, r1
   127b8:	cmp	r3, #0
   127bc:	mov	lr, ip
   127c0:	beq	127d0 <fputs@plt+0x1a0>
   127c4:	cmp	r0, r3
   127c8:	add	r1, r1, #64	; 0x40
   127cc:	bge	1276c <fputs@plt+0x13c>
   127d0:	sub	r0, r0, #65	; 0x41
   127d4:	cmp	r0, #54	; 0x36
   127d8:	ldrls	pc, [pc, r0, lsl #2]
   127dc:	b	12bf8 <fputs@plt+0x5c8>
   127e0:	andeq	r2, r1, r8, ror #23
   127e4:	strdeq	r2, [r1], -r8
   127e8:	strdeq	r2, [r1], -r8
   127ec:	andeq	r2, r1, ip, asr #23
   127f0:	strdeq	r2, [r1], -r8
   127f4:			; <UNDEFINED> instruction: 0x00012bb4
   127f8:	strdeq	r2, [r1], -r8
   127fc:	strdeq	r2, [r1], -r8
   12800:	strdeq	r2, [r1], -r8
   12804:	strdeq	r2, [r1], -r8
   12808:	strdeq	r2, [r1], -r8
   1280c:	strdeq	r2, [r1], -r8
   12810:	strdeq	r2, [r1], -r8
   12814:	andeq	r2, r1, r4, asr fp
   12818:	andeq	r2, r1, r4, asr #22
   1281c:	andeq	r2, r1, r0, lsr fp
   12820:	strdeq	r2, [r1], -r8
   12824:	andeq	r2, r1, r0, lsr #22
   12828:	andeq	r2, r1, r8, lsl #22
   1282c:	andeq	r2, r1, ip, ror #21
   12830:	strdeq	r2, [r1], -r8
   12834:	muleq	r1, r8, sl
   12838:	strdeq	r2, [r1], -r8
   1283c:	strdeq	r2, [r1], -r8
   12840:	strdeq	r2, [r1], -r8
   12844:	strdeq	r2, [r1], -r8
   12848:	strdeq	r2, [r1], -r8
   1284c:	strdeq	r2, [r1], -r8
   12850:	strdeq	r2, [r1], -r8
   12854:	strdeq	r2, [r1], -r8
   12858:	strdeq	r2, [r1], -r8
   1285c:	strdeq	r2, [r1], -r8
   12860:	andeq	r2, r1, r8, lsl #21
   12864:	strdeq	r2, [r1], -r8
   12868:	andeq	r2, r1, r8, ror sl
   1286c:	andeq	r2, r1, r0, lsr sl
   12870:	andeq	r2, r1, r0, lsr #20
   12874:	andeq	r2, r1, r0, lsl sl
   12878:	strdeq	r2, [r1], -r8
   1287c:	andeq	r2, r1, r0, lsl #20
   12880:	strdeq	r2, [r1], -r0
   12884:	strdeq	r2, [r1], -r8
   12888:	andeq	r2, r1, r4, ror #19
   1288c:	ldrdeq	r2, [r1], -r4
   12890:			; <UNDEFINED> instruction: 0x000129bc
   12894:	andeq	r2, r1, ip, lsr #19
   12898:	andeq	r2, r1, r0, lsr #19
   1289c:	andeq	r2, r1, r8, asr r9
   128a0:	strdeq	r2, [r1], -r8
   128a4:	andeq	r2, r1, r4, asr #18
   128a8:	andeq	r2, r1, ip, lsr #18
   128ac:	andeq	r2, r1, ip, lsl r9
   128b0:	strdeq	r2, [r1], -r8
   128b4:	andeq	r2, r1, r8, ror #17
   128b8:			; <UNDEFINED> instruction: 0x000128bc
   128bc:	mov	r2, #5
   128c0:	movw	r1, #43672	; 0xaa98
   128c4:	mov	r0, #0
   128c8:	movt	r1, #1
   128cc:	ldr	sl, [r9]
   128d0:	bl	12204 <dcgettext@plt>
   128d4:	mov	r1, r0
   128d8:	mov	r0, sl
   128dc:	bl	15934 <fputs@plt+0x3304>
   128e0:	str	r0, [sp, #48]	; 0x30
   128e4:	b	12724 <fputs@plt+0xf4>
   128e8:	ldr	r3, [r4]
   128ec:	orr	r3, r3, #128	; 0x80
   128f0:	str	r3, [r4]
   128f4:	b	12724 <fputs@plt+0xf4>
   128f8:	movw	r3, #49720	; 0xc238
   128fc:	movt	r3, #2
   12900:	ldr	r2, [r3, #16]
   12904:	add	r3, r3, #32
   12908:	bic	r2, r2, #32
   1290c:	str	r2, [r3, #-16]
   12910:	cmp	r3, r8
   12914:	bne	12900 <fputs@plt+0x2d0>
   12918:	b	12724 <fputs@plt+0xf4>
   1291c:	ldr	r3, [r9]
   12920:	ldr	r2, [sp, #16]
   12924:	str	r3, [r2, #88]	; 0x58
   12928:	b	12724 <fputs@plt+0xf4>
   1292c:	ldr	r3, [r4, #116]	; 0x74
   12930:	mov	r1, #1
   12934:	str	r1, [sp, #8]
   12938:	bic	r3, r3, #64	; 0x40
   1293c:	str	r3, [r4, #116]	; 0x74
   12940:	b	12724 <fputs@plt+0xf4>
   12944:	ldr	r3, [r4, #116]	; 0x74
   12948:	bic	r3, r3, #64	; 0x40
   1294c:	orr	r3, r3, #2
   12950:	str	r3, [r4, #116]	; 0x74
   12954:	b	12724 <fputs@plt+0xf4>
   12958:	ldr	r0, [r9]
   1295c:	cmp	r0, #0
   12960:	beq	12984 <fputs@plt+0x354>
   12964:	movw	r3, #16396	; 0x400c
   12968:	ldr	r1, [pc, #3528]	; 13738 <fputs@plt+0x1108>
   1296c:	movt	r3, #1
   12970:	mov	r2, #4
   12974:	bl	1620c <fputs@plt+0x3bdc>
   12978:	cmp	r0, #0
   1297c:	str	r0, [r4, #136]	; 0x88
   12980:	blt	1347c <fputs@plt+0xe4c>
   12984:	ldr	r2, [r4]
   12988:	ldr	r3, [r4, #116]	; 0x74
   1298c:	orr	r2, r2, #512	; 0x200
   12990:	str	r2, [r4]
   12994:	bic	r3, r3, #64	; 0x40
   12998:	str	r3, [r4, #116]	; 0x74
   1299c:	b	12724 <fputs@plt+0xf4>
   129a0:	ldr	r3, [r9]
   129a4:	str	r3, [sp, #12]
   129a8:	b	12724 <fputs@plt+0xf4>
   129ac:	ldr	r3, [r4, #116]	; 0x74
   129b0:	orr	r3, r3, #8
   129b4:	str	r3, [r4, #116]	; 0x74
   129b8:	b	12724 <fputs@plt+0xf4>
   129bc:	ldr	r3, [r4, #116]	; 0x74
   129c0:	mov	r2, #2
   129c4:	str	r2, [sp, #8]
   129c8:	bic	r3, r3, #64	; 0x40
   129cc:	str	r3, [r4, #116]	; 0x74
   129d0:	b	12724 <fputs@plt+0xf4>
   129d4:	ldr	r3, [r4, #116]	; 0x74
   129d8:	bic	r3, r3, #64	; 0x40
   129dc:	str	r3, [r4, #116]	; 0x74
   129e0:	b	12724 <fputs@plt+0xf4>
   129e4:	mov	r2, #3
   129e8:	str	r2, [sp, #8]
   129ec:	b	12724 <fputs@plt+0xf4>
   129f0:	ldr	r3, [r4]
   129f4:	orr	r3, r3, #16
   129f8:	str	r3, [r4]
   129fc:	b	12724 <fputs@plt+0xf4>
   12a00:	movw	r3, #50544	; 0xc570
   12a04:	movt	r3, #2
   12a08:	ldr	r0, [r3]
   12a0c:	bl	13c5c <fputs@plt+0x162c>
   12a10:	ldr	r3, [r4]
   12a14:	orr	r3, r3, #8
   12a18:	str	r3, [r4]
   12a1c:	b	12724 <fputs@plt+0xf4>
   12a20:	ldr	r3, [r4]
   12a24:	orr	r3, r3, #2
   12a28:	str	r3, [r4]
   12a2c:	b	12724 <fputs@plt+0xf4>
   12a30:	ldr	fp, [r9]
   12a34:	movw	r1, #43584	; 0xaa40
   12a38:	movt	r1, #1
   12a3c:	movw	sl, #50552	; 0xc578
   12a40:	movt	sl, #2
   12a44:	mov	r0, fp
   12a48:	bl	125e8 <strcmp@plt>
   12a4c:	cmp	r0, #0
   12a50:	beq	12c08 <fputs@plt+0x5d8>
   12a54:	mov	r0, fp
   12a58:	movw	r1, #43592	; 0xaa48
   12a5c:	movt	r1, #1
   12a60:	bl	125e8 <strcmp@plt>
   12a64:	cmp	r0, #0
   12a68:	bne	13454 <fputs@plt+0xe24>
   12a6c:	mov	r3, #1
   12a70:	str	r3, [sp, #24]
   12a74:	b	12724 <fputs@plt+0xf4>
   12a78:	ldr	r3, [r4]
   12a7c:	orr	r3, r3, #4
   12a80:	str	r3, [r4]
   12a84:	b	12724 <fputs@plt+0xf4>
   12a88:	ldr	r3, [r4, #116]	; 0x74
   12a8c:	orr	r3, r3, #4
   12a90:	str	r3, [r4, #116]	; 0x74
   12a94:	b	12724 <fputs@plt+0xf4>
   12a98:	mov	r2, #5
   12a9c:	movw	r1, #43700	; 0xaab4
   12aa0:	mov	r0, #0
   12aa4:	movt	r1, #1
   12aa8:	bl	12204 <dcgettext@plt>
   12aac:	movw	r2, #50520	; 0xc558
   12ab0:	movt	r2, #2
   12ab4:	movw	r3, #43712	; 0xaac0
   12ab8:	movt	r3, #1
   12abc:	ldr	r2, [r2]
   12ac0:	mov	r1, r0
   12ac4:	mov	r0, #1
   12ac8:	bl	120fc <__printf_chk@plt>
   12acc:	mov	r0, #0
   12ad0:	ldr	r1, [sp, #20]
   12ad4:	ldr	r2, [sp, #108]	; 0x6c
   12ad8:	ldr	r3, [r1]
   12adc:	cmp	r2, r3
   12ae0:	bne	13478 <fputs@plt+0xe48>
   12ae4:	add	sp, sp, #116	; 0x74
   12ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12aec:	ldr	r2, [r9]
   12af0:	ldr	r1, [sp, #16]
   12af4:	ldr	r3, [r4]
   12af8:	str	r2, [r1, #56]	; 0x38
   12afc:	orr	r3, r3, #64	; 0x40
   12b00:	str	r3, [r4]
   12b04:	b	12724 <fputs@plt+0xf4>
   12b08:	ldr	r0, [r9]
   12b0c:	bl	141c8 <fputs@plt+0x1b98>
   12b10:	ldr	r3, [r4]
   12b14:	orr	r3, r3, #64	; 0x40
   12b18:	str	r3, [r4]
   12b1c:	b	12724 <fputs@plt+0xf4>
   12b20:	ldr	r3, [r4]
   12b24:	orr	r3, r3, #256	; 0x100
   12b28:	str	r3, [r4]
   12b2c:	b	12724 <fputs@plt+0xf4>
   12b30:	ldr	r3, [r4, #116]	; 0x74
   12b34:	bic	r3, r3, #64	; 0x40
   12b38:	orr	r3, r3, #16
   12b3c:	str	r3, [r4, #116]	; 0x74
   12b40:	b	12724 <fputs@plt+0xf4>
   12b44:	ldr	r3, [r9]
   12b48:	ldr	r1, [sp, #16]
   12b4c:	str	r3, [r1, #120]	; 0x78
   12b50:	b	12724 <fputs@plt+0xf4>
   12b54:	mov	r2, #5
   12b58:	movw	r1, #43628	; 0xaa6c
   12b5c:	mov	r0, #0
   12b60:	movt	r1, #1
   12b64:	mov	r3, #3
   12b68:	ldr	sl, [r9]
   12b6c:	str	r3, [sp, #8]
   12b70:	bl	12204 <dcgettext@plt>
   12b74:	mov	r1, r0
   12b78:	mov	r0, sl
   12b7c:	bl	159c4 <fputs@plt+0x3394>
   12b80:	mov	r1, #0
   12b84:	mov	r2, r0
   12b88:	add	r0, sp, #112	; 0x70
   12b8c:	str	r1, [r0, #-32]!	; 0xffffffe0
   12b90:	movw	r1, #43652	; 0xaa84
   12b94:	movt	r1, #1
   12b98:	bl	13bec <fputs@plt+0x15bc>
   12b9c:	mov	r0, r7
   12ba0:	add	r1, sp, #68	; 0x44
   12ba4:	ldr	r2, [sp, #80]	; 0x50
   12ba8:	bl	13b8c <fputs@plt+0x155c>
   12bac:	mov	r7, r0
   12bb0:	b	12724 <fputs@plt+0xf4>
   12bb4:	mov	r0, r7
   12bb8:	add	r1, sp, #68	; 0x44
   12bbc:	ldr	r2, [r9]
   12bc0:	bl	13b8c <fputs@plt+0x155c>
   12bc4:	mov	r7, r0
   12bc8:	b	12724 <fputs@plt+0xf4>
   12bcc:	ldr	r2, [r4, #116]	; 0x74
   12bd0:	ldr	r3, [r4]
   12bd4:	bic	r2, r2, #64	; 0x40
   12bd8:	str	r2, [r4, #116]	; 0x74
   12bdc:	orr	r3, r3, #1024	; 0x400
   12be0:	str	r3, [r4]
   12be4:	b	12724 <fputs@plt+0xf4>
   12be8:	ldr	r3, [r4]
   12bec:	orr	r3, r3, #2048	; 0x800
   12bf0:	str	r3, [r4]
   12bf4:	b	12724 <fputs@plt+0xf4>
   12bf8:	movw	r3, #50548	; 0xc574
   12bfc:	movt	r3, #2
   12c00:	ldr	r0, [r3]
   12c04:	bl	13c5c <fputs@plt+0x162c>
   12c08:	str	r0, [sp, #24]
   12c0c:	b	12724 <fputs@plt+0xf4>
   12c10:	ldr	r2, [r4, #8]
   12c14:	movw	r3, #50560	; 0xc580
   12c18:	str	r7, [sp, #52]	; 0x34
   12c1c:	movt	r3, #2
   12c20:	cmp	r2, #0
   12c24:	bne	12c70 <fputs@plt+0x640>
   12c28:	ldr	r1, [r3]
   12c2c:	tst	r1, #1024	; 0x400
   12c30:	beq	12e50 <fputs@plt+0x820>
   12c34:	mov	r1, #2
   12c38:	str	r2, [r3, #12]
   12c3c:	str	r1, [r3, #16]
   12c40:	mov	r2, #14
   12c44:	mov	r1, #16
   12c48:	str	r2, [r3, #20]
   12c4c:	str	r1, [r3, #24]
   12c50:	mov	r2, #15
   12c54:	mov	r1, #17
   12c58:	str	r2, [r3, #28]
   12c5c:	str	r1, [r3, #32]
   12c60:	mov	r2, #7
   12c64:	str	r2, [r3, #8]
   12c68:	mov	r2, #1
   12c6c:	str	r2, [r3, #36]	; 0x24
   12c70:	ldr	r1, [sp, #12]
   12c74:	cmp	r1, #0
   12c78:	beq	12ca4 <fputs@plt+0x674>
   12c7c:	ldr	r1, [pc, #2744]	; 1373c <fputs@plt+0x110c>
   12c80:	movw	r3, #16616	; 0x40e8
   12c84:	ldr	r0, [sp, #12]
   12c88:	movt	r3, #1
   12c8c:	mov	r2, #25
   12c90:	str	r3, [sp]
   12c94:	sub	r3, r1, #4
   12c98:	bl	162f4 <fputs@plt+0x3cc4>
   12c9c:	cmp	r0, #0
   12ca0:	blt	1313c <fputs@plt+0xb0c>
   12ca4:	ldr	r2, [sp, #8]
   12ca8:	ldr	r3, [r4]
   12cac:	cmp	r2, #0
   12cb0:	mov	r1, r2
   12cb4:	moveq	r2, #3
   12cb8:	tst	r3, #512	; 0x200
   12cbc:	str	r2, [sp, #8]
   12cc0:	beq	12cdc <fputs@plt+0x6ac>
   12cc4:	ldr	r3, [sp, #68]	; 0x44
   12cc8:	cmp	r3, #1
   12ccc:	movwgt	r1, #43776	; 0xab00
   12cd0:	movgt	r0, #0
   12cd4:	movtgt	r1, #1
   12cd8:	bgt	139a0 <fputs@plt+0x1370>
   12cdc:	movw	r8, #50528	; 0xc560
   12ce0:	movt	r8, #2
   12ce4:	ldr	r3, [r8]
   12ce8:	cmp	r6, r3
   12cec:	ble	12d38 <fputs@plt+0x708>
   12cf0:	movw	r9, #49720	; 0xc238
   12cf4:	movt	r9, #2
   12cf8:	ldr	r2, [r9, #24]
   12cfc:	cmp	r2, #0
   12d00:	bne	13994 <fputs@plt+0x1364>
   12d04:	ldr	r2, [r9, #56]	; 0x38
   12d08:	cmp	r2, #0
   12d0c:	bne	13994 <fputs@plt+0x1364>
   12d10:	ldr	r0, [r5, r3, lsl #2]
   12d14:	add	r3, r3, #1
   12d18:	str	r3, [r8]
   12d1c:	bl	141c8 <fputs@plt+0x1b98>
   12d20:	ldr	r3, [r8]
   12d24:	cmp	r6, r3
   12d28:	ldrgt	r2, [r5, r3, lsl #2]
   12d2c:	addgt	r3, r3, #1
   12d30:	strgt	r3, [r8]
   12d34:	strgt	r2, [r9, #56]	; 0x38
   12d38:	ldr	r5, [r4]
   12d3c:	movw	r6, #50560	; 0xc580
   12d40:	movt	r6, #2
   12d44:	tst	r5, #256	; 0x100
   12d48:	beq	12d60 <fputs@plt+0x730>
   12d4c:	bl	13ae8 <fputs@plt+0x14b8>
   12d50:	cmp	r0, #0
   12d54:	beq	12d88 <fputs@plt+0x758>
   12d58:	bic	r5, r5, #256	; 0x100
   12d5c:	str	r5, [r6]
   12d60:	tst	r5, #8
   12d64:	bne	12d7c <fputs@plt+0x74c>
   12d68:	movw	r3, #49720	; 0xc238
   12d6c:	movt	r3, #2
   12d70:	ldr	r2, [r3, #56]	; 0x38
   12d74:	cmp	r2, #0
   12d78:	beq	13978 <fputs@plt+0x1348>
   12d7c:	ldr	r3, [r4, #116]	; 0x74
   12d80:	bic	r3, r3, #64	; 0x40
   12d84:	str	r3, [r4, #116]	; 0x74
   12d88:	tst	r5, #64	; 0x40
   12d8c:	bne	12da4 <fputs@plt+0x774>
   12d90:	movw	r3, #49720	; 0xc238
   12d94:	movt	r3, #2
   12d98:	ldr	r2, [r3, #56]	; 0x38
   12d9c:	cmp	r2, #0
   12da0:	beq	138f0 <fputs@plt+0x12c0>
   12da4:	mov	r0, #0
   12da8:	bl	12414 <mnt_init_debug@plt>
   12dac:	ldr	r9, [sp, #68]	; 0x44
   12db0:	bl	1200c <mnt_new_table@plt>
   12db4:	subs	r6, r0, #0
   12db8:	beq	138a8 <fputs@plt+0x1278>
   12dbc:	movw	r1, #15192	; 0x3b58
   12dc0:	movt	r1, #1
   12dc4:	bl	12384 <mnt_table_set_parser_errcb@plt>
   12dc8:	movw	r8, #43484	; 0xa9dc
   12dcc:	movw	r5, #43468	; 0xa9cc
   12dd0:	movt	r8, #1
   12dd4:	movt	r5, #1
   12dd8:	ldr	sl, [sp, #8]
   12ddc:	b	12e0c <fputs@plt+0x7dc>
   12de0:	cmp	r7, #0
   12de4:	beq	13024 <fputs@plt+0x9f4>
   12de8:	mov	r0, r6
   12dec:	mov	r1, r7
   12df0:	bl	124a4 <mnt_table_parse_file@plt>
   12df4:	cmp	r0, #0
   12df8:	bne	12ff0 <fputs@plt+0x9c0>
   12dfc:	sub	r9, r9, #1
   12e00:	cmp	r9, #0
   12e04:	ble	12ea0 <fputs@plt+0x870>
   12e08:	mov	r7, fp
   12e0c:	cmp	r9, #0
   12e10:	addne	fp, r7, #4
   12e14:	moveq	fp, r7
   12e18:	ldrne	r7, [r7]
   12e1c:	moveq	r7, r9
   12e20:	cmp	sl, #2
   12e24:	beq	12e40 <fputs@plt+0x810>
   12e28:	cmp	sl, #3
   12e2c:	beq	12de0 <fputs@plt+0x7b0>
   12e30:	mov	r0, r6
   12e34:	mov	r1, r7
   12e38:	bl	123cc <mnt_table_parse_fstab@plt>
   12e3c:	b	12df4 <fputs@plt+0x7c4>
   12e40:	mov	r0, r6
   12e44:	mov	r1, r7
   12e48:	bl	12534 <mnt_table_parse_mtab@plt>
   12e4c:	b	12df4 <fputs@plt+0x7c4>
   12e50:	tst	r1, #512	; 0x200
   12e54:	movne	r1, #1
   12e58:	movne	r2, #11
   12e5c:	strne	r1, [r3, #8]
   12e60:	strne	r2, [r3, #12]
   12e64:	ldr	r3, [r4, #8]
   12e68:	mov	lr, #1
   12e6c:	mov	ip, #0
   12e70:	add	r0, r3, lr
   12e74:	add	r2, r4, r3, lsl #2
   12e78:	add	r3, r3, #4
   12e7c:	add	r0, r4, r0, lsl #2
   12e80:	str	r3, [r4, #8]
   12e84:	str	lr, [r2, #12]
   12e88:	mov	r3, #3
   12e8c:	str	ip, [r0, #12]
   12e90:	mov	r0, #2
   12e94:	str	r3, [r2, #24]
   12e98:	str	r0, [r2, #20]
   12e9c:	b	12c70 <fputs@plt+0x640>
   12ea0:	ldr	r2, [r4, #116]	; 0x74
   12ea4:	mov	r3, r0
   12ea8:	tst	r2, #64	; 0x40
   12eac:	beq	12ec8 <fputs@plt+0x898>
   12eb0:	ldr	r2, [sp, #68]	; 0x44
   12eb4:	cmp	r2, #1
   12eb8:	ble	13870 <fputs@plt+0x1240>
   12ebc:	ldr	r3, [r4, #116]	; 0x74
   12ec0:	bic	r3, r3, #64	; 0x40
   12ec4:	str	r3, [r4, #116]	; 0x74
   12ec8:	bl	125d0 <mnt_new_cache@plt>
   12ecc:	movw	r7, #50560	; 0xc580
   12ed0:	movt	r7, #2
   12ed4:	cmp	r0, #0
   12ed8:	mov	r5, r0
   12edc:	str	r0, [r4, #4]
   12ee0:	beq	13850 <fputs@plt+0x1220>
   12ee4:	mov	r1, r0
   12ee8:	mov	r0, r6
   12eec:	bl	12180 <mnt_table_set_cache@plt>
   12ef0:	ldr	r0, [r7, #116]	; 0x74
   12ef4:	bl	16ef4 <fputs@plt+0x48c4>
   12ef8:	subs	sl, r0, #0
   12efc:	beq	13834 <fputs@plt+0x1204>
   12f00:	ldr	r3, [r7, #8]
   12f04:	cmp	r3, #0
   12f08:	movwgt	r5, #49720	; 0xc238
   12f0c:	movgt	r7, #0
   12f10:	movtgt	r5, #2
   12f14:	bgt	12f4c <fputs@plt+0x91c>
   12f18:	b	13144 <fputs@plt+0xb14>
   12f1c:	vldr	d7, [r3, #8]
   12f20:	vcvt.f32.f64	s0, d7
   12f24:	ldr	r1, [r5, r0, lsl #5]
   12f28:	mov	r0, sl
   12f2c:	vcvt.f64.f32	d0, s0
   12f30:	bl	17024 <fputs@plt+0x49f4>
   12f34:	cmp	r0, #0
   12f38:	beq	13438 <fputs@plt+0xe08>
   12f3c:	ldr	r3, [r4, #8]
   12f40:	add	r7, r7, #1
   12f44:	cmp	r3, r7
   12f48:	ble	13144 <fputs@plt+0xb14>
   12f4c:	mov	r0, r7
   12f50:	bl	14160 <fputs@plt+0x1b30>
   12f54:	ldr	r2, [r4, #116]	; 0x74
   12f58:	ldr	r1, [r4]
   12f5c:	tst	r2, #64	; 0x40
   12f60:	add	r3, r5, r0, lsl #5
   12f64:	ldr	r2, [r3, #16]
   12f68:	biceq	r2, r2, #64	; 0x40
   12f6c:	ands	r1, r1, #512	; 0x200
   12f70:	bne	12f1c <fputs@plt+0x8ec>
   12f74:	cmp	r0, #24
   12f78:	bgt	13818 <fputs@plt+0x11e8>
   12f7c:	sub	ip, r0, #11
   12f80:	cmp	ip, #2
   12f84:	bhi	12f1c <fputs@plt+0x8ec>
   12f88:	mov	r2, #5
   12f8c:	mov	r0, r1
   12f90:	movw	r1, #44248	; 0xacd8
   12f94:	movt	r1, #1
   12f98:	bl	12204 <dcgettext@plt>
   12f9c:	mov	r8, r0
   12fa0:	mov	r0, r7
   12fa4:	bl	14160 <fputs@plt+0x1b30>
   12fa8:	mov	r3, r0
   12fac:	mov	r0, r8
   12fb0:	ldr	r1, [r5, r3, lsl #5]
   12fb4:	mvn	r5, #0
   12fb8:	bl	12528 <warnx@plt>
   12fbc:	mov	r0, sl
   12fc0:	bl	16fd4 <fputs@plt+0x49a4>
   12fc4:	mov	r0, r6
   12fc8:	bl	1230c <mnt_free_table@plt>
   12fcc:	ldr	r0, [r4, #4]
   12fd0:	bl	1254c <mnt_free_cache@plt>
   12fd4:	ldr	r0, [sp, #52]	; 0x34
   12fd8:	bl	121e0 <free@plt>
   12fdc:	ldr	r0, [r4, #112]	; 0x70
   12fe0:	bl	123b4 <udev_unref@plt>
   12fe4:	adds	r0, r5, #0
   12fe8:	movne	r0, #1
   12fec:	b	12ad0 <fputs@plt+0x4a0>
   12ff0:	mov	r0, r6
   12ff4:	bl	1230c <mnt_free_table@plt>
   12ff8:	movw	r1, #44004	; 0xabe4
   12ffc:	mov	r0, #0
   13000:	movt	r1, #1
   13004:	mov	r2, #5
   13008:	bl	12204 <dcgettext@plt>
   1300c:	mov	r1, r7
   13010:	bl	123f0 <warn@plt>
   13014:	mov	r6, #0
   13018:	mvn	r5, #0
   1301c:	mov	sl, r6
   13020:	b	12fbc <fputs@plt+0x98c>
   13024:	movw	r0, #43484	; 0xa9dc
   13028:	mov	r1, #4
   1302c:	movt	r0, #1
   13030:	bl	12228 <access@plt>
   13034:	cmp	r0, #0
   13038:	moveq	r7, r8
   1303c:	movne	r7, r5
   13040:	b	12de8 <fputs@plt+0x7b8>
   13044:	movw	r4, #50548	; 0xc574
   13048:	movt	r4, #2
   1304c:	mov	r0, #0
   13050:	mov	r2, #5
   13054:	movw	r1, #43544	; 0xaa18
   13058:	movt	r1, #1
   1305c:	ldr	r6, [r4]
   13060:	mov	r5, r0
   13064:	bl	12204 <dcgettext@plt>
   13068:	movw	r3, #50520	; 0xc558
   1306c:	movt	r3, #2
   13070:	mov	r1, #1
   13074:	ldr	r3, [r3]
   13078:	mov	r2, r0
   1307c:	mov	r0, r6
   13080:	bl	12468 <__fprintf_chk@plt>
   13084:	ldr	r1, [sl, r5]
   13088:	cmp	r1, #0
   1308c:	beq	130e0 <fputs@plt+0xab0>
   13090:	cmp	r1, #65	; 0x41
   13094:	ldrne	r2, [pc, #1684]	; 13730 <fputs@plt+0x1100>
   13098:	bne	130b0 <fputs@plt+0xa80>
   1309c:	b	1311c <fputs@plt+0xaec>
   130a0:	add	r2, r2, #16
   130a4:	ldr	r0, [r2, #12]
   130a8:	cmp	r0, r1
   130ac:	beq	13124 <fputs@plt+0xaf4>
   130b0:	ldr	r3, [r2, #16]
   130b4:	cmp	r3, #0
   130b8:	bne	130a0 <fputs@plt+0xa70>
   130bc:	mov	r3, r1
   130c0:	movw	r2, #44232	; 0xacc8
   130c4:	ldr	r0, [r4]
   130c8:	movt	r2, #1
   130cc:	mov	r1, #1
   130d0:	bl	12468 <__fprintf_chk@plt>
   130d4:	add	r5, r5, #4
   130d8:	cmp	r5, #60	; 0x3c
   130dc:	bne	13084 <fputs@plt+0xa54>
   130e0:	mov	r2, #5
   130e4:	movw	r1, #43560	; 0xaa28
   130e8:	mov	r0, #0
   130ec:	movt	r1, #1
   130f0:	ldr	r5, [r4]
   130f4:	bl	12204 <dcgettext@plt>
   130f8:	mov	r1, #1
   130fc:	mov	r2, r0
   13100:	mov	r0, r5
   13104:	bl	12468 <__fprintf_chk@plt>
   13108:	ldr	r1, [r4]
   1310c:	mov	r0, #10
   13110:	bl	12498 <fputc@plt>
   13114:	mov	r0, #1
   13118:	bl	125f4 <exit@plt>
   1311c:	movw	r3, #43508	; 0xa9f4
   13120:	movt	r3, #1
   13124:	movw	r2, #44240	; 0xacd0
   13128:	ldr	r0, [r4]
   1312c:	movt	r2, #1
   13130:	mov	r1, #1
   13134:	bl	12468 <__fprintf_chk@plt>
   13138:	b	130d4 <fputs@plt+0xaa4>
   1313c:	mov	r0, #1
   13140:	b	12ad0 <fputs@plt+0x4a0>
   13144:	ldr	r3, [r4]
   13148:	movw	r2, #50560	; 0xc580
   1314c:	movt	r2, #2
   13150:	tst	r3, #512	; 0x200
   13154:	beq	13484 <fputs@plt+0xe54>
   13158:	ldr	r2, [sp, #52]	; 0x34
   1315c:	cmp	r2, #0
   13160:	ldrne	r3, [r2]
   13164:	movweq	r1, #43484	; 0xa9dc
   13168:	movteq	r1, #1
   1316c:	streq	r1, [sp, #16]
   13170:	strne	r3, [sp, #16]
   13174:	bl	1200c <mnt_new_table@plt>
   13178:	subs	r2, r0, #0
   1317c:	str	r2, [sp, #8]
   13180:	beq	137f8 <fputs@plt+0x11c8>
   13184:	ldr	r0, [sp, #24]
   13188:	bl	12234 <mnt_new_iter@plt>
   1318c:	subs	r3, r0, #0
   13190:	str	r3, [sp, #36]	; 0x24
   13194:	beq	137c4 <fputs@plt+0x1194>
   13198:	bl	12504 <mnt_new_tabdiff@plt>
   1319c:	subs	fp, r0, #0
   131a0:	beq	137ac <fputs@plt+0x117c>
   131a4:	mov	r1, #0
   131a8:	mov	r0, r6
   131ac:	bl	12180 <mnt_table_set_cache@plt>
   131b0:	mov	r1, #0
   131b4:	ldr	r0, [sp, #8]
   131b8:	bl	12180 <mnt_table_set_cache@plt>
   131bc:	ldr	r0, [sp, #16]
   131c0:	movw	r1, #44816	; 0xaf10
   131c4:	movt	r1, #1
   131c8:	bl	122dc <fopen64@plt>
   131cc:	subs	r1, r0, #0
   131d0:	str	r1, [sp, #44]	; 0x2c
   131d4:	beq	13774 <fputs@plt+0x1144>
   131d8:	movw	r1, #15192	; 0x3b58
   131dc:	ldr	r0, [sp, #8]
   131e0:	movt	r1, #1
   131e4:	movw	r2, #50560	; 0xc580
   131e8:	str	r2, [sp, #40]	; 0x28
   131ec:	bl	12384 <mnt_table_set_parser_errcb@plt>
   131f0:	ldr	r0, [sp, #44]	; 0x2c
   131f4:	mvn	r5, #0
   131f8:	bl	12018 <fileno@plt>
   131fc:	ldr	r9, [sp, #36]	; 0x24
   13200:	ldr	r3, [sp, #40]	; 0x28
   13204:	movw	r1, #49720	; 0xc238
   13208:	str	r6, [sp, #28]
   1320c:	movt	r1, #2
   13210:	movt	r3, #2
   13214:	str	r1, [sp, #12]
   13218:	str	r3, [sp, #40]	; 0x28
   1321c:	mov	r3, #2
   13220:	str	r6, [sp, #32]
   13224:	strh	r3, [sp, #88]	; 0x58
   13228:	str	r0, [sp, #84]	; 0x54
   1322c:	add	r0, sp, #84	; 0x54
   13230:	mov	r1, #1
   13234:	ldr	r2, [sp, #48]	; 0x30
   13238:	bl	12474 <poll@plt>
   1323c:	cmp	r0, #0
   13240:	beq	1376c <fputs@plt+0x113c>
   13244:	blt	1374c <fputs@plt+0x111c>
   13248:	ldr	r0, [sp, #44]	; 0x2c
   1324c:	bl	120b4 <rewind@plt>
   13250:	ldr	r0, [sp, #8]
   13254:	ldr	r1, [sp, #44]	; 0x2c
   13258:	ldr	r2, [sp, #16]
   1325c:	bl	120a8 <mnt_table_parse_stream@plt>
   13260:	subs	r5, r0, #0
   13264:	bne	1327c <fputs@plt+0xc4c>
   13268:	mov	r0, fp
   1326c:	ldr	r1, [sp, #28]
   13270:	ldr	r2, [sp, #8]
   13274:	bl	122ac <mnt_diff_tables@plt>
   13278:	mov	r5, r0
   1327c:	cmp	r5, #0
   13280:	blt	13744 <fputs@plt+0x1114>
   13284:	mov	r0, r9
   13288:	ldr	r1, [sp, #24]
   1328c:	bl	12144 <mnt_reset_iter@plt>
   13290:	mov	r2, #0
   13294:	str	r2, [sp, #56]	; 0x38
   13298:	add	r1, sp, #80	; 0x50
   1329c:	mov	r0, fp
   132a0:	str	r1, [sp]
   132a4:	add	r2, sp, #72	; 0x48
   132a8:	mov	r1, r9
   132ac:	add	r3, sp, #76	; 0x4c
   132b0:	bl	12378 <mnt_tabdiff_next_change@plt>
   132b4:	cmp	r0, #0
   132b8:	bne	13674 <fputs@plt+0x1044>
   132bc:	ldr	ip, [r4, #136]	; 0x88
   132c0:	ldr	lr, [sp, #80]	; 0x50
   132c4:	cmp	ip, #0
   132c8:	beq	13300 <fputs@plt+0xcd0>
   132cc:	ble	13298 <fputs@plt+0xc68>
   132d0:	ldr	r3, [sp, #40]	; 0x28
   132d4:	ldr	r2, [r3, #120]	; 0x78
   132d8:	cmp	lr, r2
   132dc:	ldrne	r2, [pc, #1108]	; 13738 <fputs@plt+0x1108>
   132e0:	movne	r3, r0
   132e4:	beq	13300 <fputs@plt+0xcd0>
   132e8:	add	r3, r3, #1
   132ec:	cmp	r3, ip
   132f0:	beq	13298 <fputs@plt+0xc68>
   132f4:	ldr	r1, [r2, #4]!
   132f8:	cmp	lr, r1
   132fc:	bne	132e8 <fputs@plt+0xcb8>
   13300:	ldr	r0, [sp, #76]	; 0x4c
   13304:	cmp	r0, #0
   13308:	movne	r6, r0
   1330c:	beq	1366c <fputs@plt+0x103c>
   13310:	mov	r0, r6
   13314:	mov	r1, #0
   13318:	bl	13efc <fputs@plt+0x18cc>
   1331c:	cmp	r0, #0
   13320:	bne	13374 <fputs@plt+0xd44>
   13324:	ldr	r3, [r4]
   13328:	tst	r3, #64	; 0x40
   1332c:	bne	13298 <fputs@plt+0xc68>
   13330:	ldr	r3, [sp, #12]
   13334:	ldr	r8, [r3, #24]
   13338:	cmp	r8, #0
   1333c:	beq	13298 <fputs@plt+0xc68>
   13340:	ldr	r7, [r3, #56]	; 0x38
   13344:	cmp	r7, #0
   13348:	bne	13298 <fputs@plt+0xc68>
   1334c:	mov	r1, r7
   13350:	mov	r0, r6
   13354:	str	r8, [r3, #56]	; 0x38
   13358:	str	r7, [r3, #24]
   1335c:	bl	13efc <fputs@plt+0x18cc>
   13360:	ldr	r1, [sp, #12]
   13364:	str	r7, [r1, #56]	; 0x38
   13368:	str	r8, [r1, #24]
   1336c:	cmp	r0, #0
   13370:	beq	13298 <fputs@plt+0xc68>
   13374:	ldr	r3, [sp, #76]	; 0x4c
   13378:	mov	r0, sl
   1337c:	ldr	r2, [sp, #56]	; 0x38
   13380:	mov	r1, #0
   13384:	ldr	r7, [sp, #72]	; 0x48
   13388:	add	r2, r2, #1
   1338c:	str	r3, [sp, #60]	; 0x3c
   13390:	str	r2, [sp, #56]	; 0x38
   13394:	ldr	r6, [sp, #80]	; 0x50
   13398:	bl	170b4 <fputs@plt+0x4a84>
   1339c:	subs	r8, r0, #0
   133a0:	beq	13710 <fputs@plt+0x10e0>
   133a4:	ldr	r3, [r4, #8]
   133a8:	cmp	r3, #0
   133ac:	ble	1363c <fputs@plt+0x100c>
   133b0:	mov	r5, #0
   133b4:	b	13400 <fputs@plt+0xdd0>
   133b8:	cmp	r0, #13
   133bc:	beq	13610 <fputs@plt+0xfe0>
   133c0:	cmp	r0, #11
   133c4:	beq	13580 <fputs@plt+0xf50>
   133c8:	ldr	r3, [sp, #60]	; 0x3c
   133cc:	mov	r1, r5
   133d0:	cmp	r3, #0
   133d4:	movne	r0, r3
   133d8:	moveq	r0, r7
   133dc:	bl	14490 <fputs@plt+0x1e60>
   133e0:	mov	r2, r0
   133e4:	mov	r1, r5
   133e8:	mov	r0, r8
   133ec:	bl	171c0 <fputs@plt+0x4b90>
   133f0:	ldr	r3, [r4, #8]
   133f4:	add	r5, r5, #1
   133f8:	cmp	r5, r3
   133fc:	bge	1363c <fputs@plt+0x100c>
   13400:	mov	r0, r5
   13404:	bl	14160 <fputs@plt+0x1b30>
   13408:	cmp	r0, #12
   1340c:	bne	133b8 <fputs@plt+0xd88>
   13410:	cmp	r7, #0
   13414:	beq	136d4 <fputs@plt+0x10a4>
   13418:	sub	r3, r6, #2
   1341c:	cmp	r3, #1
   13420:	movhi	r2, #0
   13424:	bhi	133e4 <fputs@plt+0xdb4>
   13428:	mov	r0, r7
   1342c:	bl	12210 <mnt_fs_get_target@plt>
   13430:	mov	r2, r0
   13434:	b	133e4 <fputs@plt+0xdb4>
   13438:	mov	r2, #5
   1343c:	movw	r1, #44116	; 0xac54
   13440:	movt	r1, #1
   13444:	mvn	r5, #0
   13448:	bl	12204 <dcgettext@plt>
   1344c:	bl	123f0 <warn@plt>
   13450:	b	12fbc <fputs@plt+0x98c>
   13454:	mov	r2, #5
   13458:	movw	r1, #43604	; 0xaa54
   1345c:	mov	r0, #0
   13460:	movt	r1, #1
   13464:	bl	12204 <dcgettext@plt>
   13468:	ldr	r2, [sl]
   1346c:	mov	r1, r0
   13470:	mov	r0, #1
   13474:	bl	1236c <errx@plt>
   13478:	bl	12444 <__stack_chk_fail@plt>
   1347c:	mov	r0, #1
   13480:	bl	125f4 <exit@plt>
   13484:	ldr	r2, [r2, #116]	; 0x74
   13488:	tst	r2, #64	; 0x40
   1348c:	beq	13498 <fputs@plt+0xe68>
   13490:	ands	r2, r3, #256	; 0x100
   13494:	beq	137e0 <fputs@plt+0x11b0>
   13498:	mov	r1, sl
   1349c:	mov	r0, r6
   134a0:	ldr	r2, [sp, #24]
   134a4:	bl	14b88 <fputs@plt+0x2558>
   134a8:	ldr	r1, [sp, #8]
   134ac:	adds	r3, r0, #0
   134b0:	mov	r5, r0
   134b4:	movne	r3, #1
   134b8:	cmp	r1, #3
   134bc:	movne	r3, #0
   134c0:	cmp	r3, #0
   134c4:	beq	13548 <fputs@plt+0xf18>
   134c8:	ldr	r2, [r4]
   134cc:	movw	r3, #50560	; 0xc580
   134d0:	movt	r3, #2
   134d4:	tst	r2, #64	; 0x40
   134d8:	beq	12fbc <fputs@plt+0x98c>
   134dc:	movw	r7, #49720	; 0xc238
   134e0:	movt	r7, #2
   134e4:	ldr	r0, [r7, #56]	; 0x38
   134e8:	cmp	r0, #0
   134ec:	beq	12fbc <fputs@plt+0x98c>
   134f0:	ldr	r1, [r3, #4]
   134f4:	bl	1245c <mnt_resolve_path@plt>
   134f8:	subs	r5, r0, #0
   134fc:	beq	13534 <fputs@plt+0xf04>
   13500:	mov	r0, r6
   13504:	mov	r1, r5
   13508:	mov	r2, #1
   1350c:	bl	12330 <mnt_table_find_mountpoint@plt>
   13510:	cmp	r0, #0
   13514:	beq	13534 <fputs@plt+0xf04>
   13518:	bl	12210 <mnt_fs_get_target@plt>
   1351c:	subs	r8, r0, #0
   13520:	beq	13534 <fputs@plt+0xf04>
   13524:	mov	r1, r5
   13528:	bl	125e8 <strcmp@plt>
   1352c:	cmp	r0, #0
   13530:	bne	13568 <fputs@plt+0xf38>
   13534:	ldr	r2, [sp, #24]
   13538:	mov	r0, r6
   1353c:	mov	r1, sl
   13540:	bl	14b88 <fputs@plt+0x2558>
   13544:	mov	r5, r0
   13548:	cmp	r5, #0
   1354c:	bne	12fbc <fputs@plt+0x98c>
   13550:	ldr	r3, [r4]
   13554:	tst	r3, #512	; 0x200
   13558:	bne	12fbc <fputs@plt+0x98c>
   1355c:	mov	r0, sl
   13560:	bl	1785c <fputs@plt+0x522c>
   13564:	b	12fbc <fputs@plt+0x98c>
   13568:	mov	r0, r8
   1356c:	bl	125c4 <__strdup@plt>
   13570:	cmp	r0, #0
   13574:	strne	r0, [r7, #56]	; 0x38
   13578:	bne	13534 <fputs@plt+0xf04>
   1357c:	bl	12640 <fputs@plt+0x10>
   13580:	sub	r3, r6, #1
   13584:	cmp	r3, #3
   13588:	ldrls	pc, [pc, r3, lsl #2]
   1358c:	b	13650 <fputs@plt+0x1020>
   13590:	strdeq	r3, [r1], -r4
   13594:	ldrdeq	r3, [r1], -r8
   13598:			; <UNDEFINED> instruction: 0x000135bc
   1359c:	andeq	r3, r1, r0, lsr #11
   135a0:	mov	r2, #5
   135a4:	movw	r1, #43032	; 0xa818
   135a8:	mov	r0, #0
   135ac:	movt	r1, #1
   135b0:	bl	12204 <dcgettext@plt>
   135b4:	mov	r2, r0
   135b8:	b	133e4 <fputs@plt+0xdb4>
   135bc:	mov	r2, #5
   135c0:	movw	r1, #43008	; 0xa800
   135c4:	mov	r0, #0
   135c8:	movt	r1, #1
   135cc:	bl	12204 <dcgettext@plt>
   135d0:	mov	r2, r0
   135d4:	b	133e4 <fputs@plt+0xdb4>
   135d8:	mov	r2, #5
   135dc:	movw	r1, #43024	; 0xa810
   135e0:	mov	r0, #0
   135e4:	movt	r1, #1
   135e8:	bl	12204 <dcgettext@plt>
   135ec:	mov	r2, r0
   135f0:	b	133e4 <fputs@plt+0xdb4>
   135f4:	mov	r2, #5
   135f8:	movw	r1, #43016	; 0xa808
   135fc:	mov	r0, #0
   13600:	movt	r1, #1
   13604:	bl	12204 <dcgettext@plt>
   13608:	mov	r2, r0
   1360c:	b	133e4 <fputs@plt+0xdb4>
   13610:	cmp	r7, #0
   13614:	beq	136d4 <fputs@plt+0x10a4>
   13618:	cmp	r6, #4
   1361c:	cmpne	r6, #2
   13620:	movne	r2, #0
   13624:	moveq	r2, #1
   13628:	bne	133e4 <fputs@plt+0xdb4>
   1362c:	mov	r0, r7
   13630:	bl	12084 <mnt_fs_get_options@plt>
   13634:	mov	r2, r0
   13638:	b	133e4 <fputs@plt+0xdb4>
   1363c:	ldr	r3, [r4]
   13640:	ands	r3, r3, #8
   13644:	bne	13680 <fputs@plt+0x1050>
   13648:	mov	r5, r3
   1364c:	b	13298 <fputs@plt+0xc68>
   13650:	mov	r2, #5
   13654:	movw	r1, #44224	; 0xacc0
   13658:	mov	r0, #0
   1365c:	movt	r1, #1
   13660:	bl	12204 <dcgettext@plt>
   13664:	mov	r2, r0
   13668:	b	133e4 <fputs@plt+0xdb4>
   1366c:	ldr	r6, [sp, #72]	; 0x48
   13670:	b	13310 <fputs@plt+0xce0>
   13674:	ldr	r2, [sp, #56]	; 0x38
   13678:	cmp	r2, #0
   1367c:	beq	136c0 <fputs@plt+0x1090>
   13680:	mov	r0, sl
   13684:	bl	1785c <fputs@plt+0x522c>
   13688:	subs	r5, r0, #0
   1368c:	bne	13744 <fputs@plt+0x1114>
   13690:	mov	r0, sl
   13694:	bl	16f8c <fputs@plt+0x495c>
   13698:	ldr	r0, [sp, #28]
   1369c:	bl	12354 <mnt_reset_table@plt>
   136a0:	ldr	r3, [r4]
   136a4:	tst	r3, #8
   136a8:	bne	136dc <fputs@plt+0x10ac>
   136ac:	ldr	r3, [sp, #28]
   136b0:	ldr	r1, [sp, #8]
   136b4:	str	r3, [sp, #8]
   136b8:	str	r1, [sp, #28]
   136bc:	b	1322c <fputs@plt+0xbfc>
   136c0:	mov	r0, sl
   136c4:	bl	16f8c <fputs@plt+0x495c>
   136c8:	ldr	r0, [sp, #28]
   136cc:	bl	12354 <mnt_reset_table@plt>
   136d0:	b	136ac <fputs@plt+0x107c>
   136d4:	mov	r2, r7
   136d8:	b	133e4 <fputs@plt+0xdb4>
   136dc:	ldr	r2, [sp, #28]
   136e0:	ldr	r6, [sp, #32]
   136e4:	str	r2, [sp, #8]
   136e8:	mov	r5, #0
   136ec:	ldr	r0, [sp, #8]
   136f0:	bl	1230c <mnt_free_table@plt>
   136f4:	mov	r0, fp
   136f8:	bl	12024 <mnt_free_tabdiff@plt>
   136fc:	ldr	r0, [sp, #36]	; 0x24
   13700:	bl	1221c <mnt_free_iter@plt>
   13704:	ldr	r0, [sp, #44]	; 0x2c
   13708:	bl	120d8 <fclose@plt>
   1370c:	b	13548 <fputs@plt+0xf18>
   13710:	mov	r2, #5
   13714:	movw	r1, #43384	; 0xa978
   13718:	movt	r1, #1
   1371c:	ldr	r6, [sp, #32]
   13720:	mov	r5, #1
   13724:	bl	12204 <dcgettext@plt>
   13728:	bl	123f0 <warn@plt>
   1372c:	b	136ec <fputs@plt+0x10bc>
   13730:	andeq	r9, r1, r4, lsl sp
   13734:	andeq	r9, r1, r4, asr ip
   13738:	strdeq	ip, [r2], -r8
   1373c:	andeq	ip, r2, ip, lsl #11
   13740:	strdeq	r9, [r1], -r4
   13744:	ldr	r6, [sp, #32]
   13748:	b	136ec <fputs@plt+0x10bc>
   1374c:	mov	r2, #5
   13750:	movw	r1, #44208	; 0xacb0
   13754:	mov	r0, #0
   13758:	movt	r1, #1
   1375c:	ldr	r6, [sp, #32]
   13760:	bl	12204 <dcgettext@plt>
   13764:	bl	123f0 <warn@plt>
   13768:	b	136ec <fputs@plt+0x10bc>
   1376c:	ldr	r6, [sp, #32]
   13770:	b	136e8 <fputs@plt+0x10b8>
   13774:	movw	r1, #44192	; 0xaca0
   13778:	mov	r2, #5
   1377c:	movt	r1, #1
   13780:	bl	12204 <dcgettext@plt>
   13784:	ldr	r1, [sp, #16]
   13788:	bl	123f0 <warn@plt>
   1378c:	ldr	r0, [sp, #8]
   13790:	mvn	r5, #0
   13794:	bl	1230c <mnt_free_table@plt>
   13798:	mov	r0, fp
   1379c:	bl	12024 <mnt_free_tabdiff@plt>
   137a0:	ldr	r0, [sp, #36]	; 0x24
   137a4:	bl	1221c <mnt_free_iter@plt>
   137a8:	b	12fbc <fputs@plt+0x98c>
   137ac:	mov	r2, #5
   137b0:	movw	r1, #44152	; 0xac78
   137b4:	movt	r1, #1
   137b8:	bl	12204 <dcgettext@plt>
   137bc:	bl	123f0 <warn@plt>
   137c0:	b	1378c <fputs@plt+0x115c>
   137c4:	mov	r2, #5
   137c8:	movw	r1, #43416	; 0xa998
   137cc:	movt	r1, #1
   137d0:	mov	fp, r3
   137d4:	bl	12204 <dcgettext@plt>
   137d8:	bl	123f0 <warn@plt>
   137dc:	b	1378c <fputs@plt+0x115c>
   137e0:	mov	r0, sl
   137e4:	mov	r3, r2
   137e8:	mov	r1, r6
   137ec:	bl	14a18 <fputs@plt+0x23e8>
   137f0:	mov	r5, r0
   137f4:	b	13548 <fputs@plt+0xf18>
   137f8:	mov	r2, #5
   137fc:	movw	r1, #43968	; 0xabc0
   13800:	movt	r1, #1
   13804:	bl	12204 <dcgettext@plt>
   13808:	ldr	fp, [sp, #8]
   1380c:	str	fp, [sp, #36]	; 0x24
   13810:	bl	123f0 <warn@plt>
   13814:	b	1378c <fputs@plt+0x115c>
   13818:	movw	r0, #44092	; 0xac3c
   1381c:	movw	r1, #43096	; 0xa858
   13820:	movt	r0, #1
   13824:	movt	r1, #1
   13828:	movw	r2, #263	; 0x107
   1382c:	ldr	r3, [pc, #-244]	; 13740 <fputs@plt+0x1110>
   13830:	bl	121a4 <__assert_fail@plt>
   13834:	mov	r2, #5
   13838:	movw	r1, #44056	; 0xac18
   1383c:	movt	r1, #1
   13840:	mvn	r5, #0
   13844:	bl	12204 <dcgettext@plt>
   13848:	bl	123f0 <warn@plt>
   1384c:	b	12fbc <fputs@plt+0x98c>
   13850:	mov	r2, #5
   13854:	movw	r1, #44020	; 0xabf4
   13858:	movt	r1, #1
   1385c:	mov	sl, r5
   13860:	bl	12204 <dcgettext@plt>
   13864:	mvn	r5, #0
   13868:	bl	123f0 <warn@plt>
   1386c:	b	12fbc <fputs@plt+0x98c>
   13870:	mov	r0, #1
   13874:	str	r3, [sp, #80]	; 0x50
   13878:	bl	12234 <mnt_new_iter@plt>
   1387c:	subs	r5, r0, #0
   13880:	beq	12ebc <fputs@plt+0x88c>
   13884:	mov	r0, r6
   13888:	mov	r1, r5
   1388c:	add	r2, sp, #80	; 0x50
   13890:	bl	124d4 <mnt_table_next_fs@plt>
   13894:	cmp	r0, #0
   13898:	beq	138c0 <fputs@plt+0x1290>
   1389c:	mov	r0, r5
   138a0:	bl	1221c <mnt_free_iter@plt>
   138a4:	b	12ebc <fputs@plt+0x88c>
   138a8:	mov	r2, #5
   138ac:	movw	r1, #43968	; 0xabc0
   138b0:	movt	r1, #1
   138b4:	bl	12204 <dcgettext@plt>
   138b8:	bl	123f0 <warn@plt>
   138bc:	b	13014 <fputs@plt+0x9e4>
   138c0:	ldr	r0, [sp, #80]	; 0x50
   138c4:	bl	12048 <mnt_fs_is_kernel@plt>
   138c8:	cmp	r0, #0
   138cc:	beq	1389c <fputs@plt+0x126c>
   138d0:	ldr	r0, [sp, #80]	; 0x50
   138d4:	bl	12348 <mnt_fs_get_root@plt>
   138d8:	mov	r7, r0
   138dc:	mov	r0, r5
   138e0:	bl	1221c <mnt_free_iter@plt>
   138e4:	cmp	r7, #0
   138e8:	bne	12ec8 <fputs@plt+0x898>
   138ec:	b	12ebc <fputs@plt+0x88c>
   138f0:	ldr	r6, [r3, #24]
   138f4:	cmp	r6, #0
   138f8:	beq	12da4 <fputs@plt+0x774>
   138fc:	movw	r1, #43948	; 0xabac
   13900:	mov	r0, r6
   13904:	movt	r1, #1
   13908:	mov	r2, #6
   1390c:	bl	12594 <strncmp@plt>
   13910:	cmp	r0, #0
   13914:	beq	1396c <fputs@plt+0x133c>
   13918:	movw	r1, #43960	; 0xabb8
   1391c:	mov	r0, r6
   13920:	movt	r1, #1
   13924:	mov	r2, #5
   13928:	bl	12594 <strncmp@plt>
   1392c:	cmp	r0, #0
   13930:	beq	1396c <fputs@plt+0x133c>
   13934:	movw	r1, #43944	; 0xaba8
   13938:	mov	r0, r6
   1393c:	movt	r1, #1
   13940:	mov	r2, #10
   13944:	bl	12594 <strncmp@plt>
   13948:	cmp	r0, #0
   1394c:	beq	1396c <fputs@plt+0x133c>
   13950:	mov	r0, r6
   13954:	movw	r1, #43956	; 0xabb4
   13958:	mov	r2, #9
   1395c:	movt	r1, #1
   13960:	bl	12594 <strncmp@plt>
   13964:	cmp	r0, #0
   13968:	bne	12da4 <fputs@plt+0x774>
   1396c:	orr	r5, r5, #64	; 0x40
   13970:	str	r5, [r4]
   13974:	b	12da4 <fputs@plt+0x774>
   13978:	ldr	r2, [r3, #24]
   1397c:	cmp	r2, #0
   13980:	bne	12d7c <fputs@plt+0x74c>
   13984:	ldr	r3, [r3, #344]	; 0x158
   13988:	cmp	r3, #0
   1398c:	bne	12d7c <fputs@plt+0x74c>
   13990:	b	12d88 <fputs@plt+0x758>
   13994:	movw	r1, #43840	; 0xab40
   13998:	movt	r1, #1
   1399c:	mov	r0, #0
   139a0:	mov	r2, #5
   139a4:	bl	12204 <dcgettext@plt>
   139a8:	mov	r1, r0
   139ac:	mov	r0, #1
   139b0:	bl	1236c <errx@plt>
   139b4:	mov	fp, #0
   139b8:	mov	lr, #0
   139bc:	pop	{r1}		; (ldr r1, [sp], #4)
   139c0:	mov	r2, sp
   139c4:	push	{r2}		; (str r2, [sp, #-4]!)
   139c8:	push	{r0}		; (str r0, [sp, #-4]!)
   139cc:	ldr	ip, [pc, #16]	; 139e4 <fputs@plt+0x13b4>
   139d0:	push	{ip}		; (str ip, [sp, #-4]!)
   139d4:	ldr	r0, [pc, #12]	; 139e8 <fputs@plt+0x13b8>
   139d8:	ldr	r3, [pc, #12]	; 139ec <fputs@plt+0x13bc>
   139dc:	bl	1206c <__libc_start_main@plt>
   139e0:	bl	12030 <abort@plt>
   139e4:	andeq	r9, r1, r4, asr #23
   139e8:	andeq	r2, r1, r4, asr r6
   139ec:	andeq	r9, r1, r0, ror #22
   139f0:	ldr	r3, [pc, #20]	; 13a0c <fputs@plt+0x13dc>
   139f4:	ldr	r2, [pc, #20]	; 13a10 <fputs@plt+0x13e0>
   139f8:	add	r3, pc, r3
   139fc:	ldr	r2, [r3, r2]
   13a00:	cmp	r2, #0
   13a04:	bxeq	lr
   13a08:	b	12090 <__gmon_start__@plt>
   13a0c:	andeq	r8, r1, r0, lsl #12
   13a10:	andeq	r0, r0, r0, lsr #4
   13a14:	push	{r3, lr}
   13a18:	movw	r0, #50520	; 0xc558
   13a1c:	ldr	r3, [pc, #36]	; 13a48 <fputs@plt+0x1418>
   13a20:	movt	r0, #2
   13a24:	rsb	r3, r0, r3
   13a28:	cmp	r3, #6
   13a2c:	popls	{r3, pc}
   13a30:	movw	r3, #0
   13a34:	movt	r3, #0
   13a38:	cmp	r3, #0
   13a3c:	popeq	{r3, pc}
   13a40:	blx	r3
   13a44:	pop	{r3, pc}
   13a48:	andeq	ip, r2, fp, asr r5
   13a4c:	push	{r3, lr}
   13a50:	movw	r0, #50520	; 0xc558
   13a54:	movw	r3, #50520	; 0xc558
   13a58:	movt	r0, #2
   13a5c:	movt	r3, #2
   13a60:	rsb	r3, r0, r3
   13a64:	asr	r3, r3, #2
   13a68:	add	r3, r3, r3, lsr #31
   13a6c:	asrs	r1, r3, #1
   13a70:	popeq	{r3, pc}
   13a74:	movw	r2, #0
   13a78:	movt	r2, #0
   13a7c:	cmp	r2, #0
   13a80:	popeq	{r3, pc}
   13a84:	blx	r2
   13a88:	pop	{r3, pc}
   13a8c:	push	{r4, lr}
   13a90:	movw	r4, #50556	; 0xc57c
   13a94:	movt	r4, #2
   13a98:	ldrb	r3, [r4]
   13a9c:	cmp	r3, #0
   13aa0:	popne	{r4, pc}
   13aa4:	bl	13a14 <fputs@plt+0x13e4>
   13aa8:	mov	r3, #1
   13aac:	strb	r3, [r4]
   13ab0:	pop	{r4, pc}
   13ab4:	movw	r0, #48836	; 0xbec4
   13ab8:	movt	r0, #2
   13abc:	push	{r3, lr}
   13ac0:	ldr	r3, [r0]
   13ac4:	cmp	r3, #0
   13ac8:	beq	13ae0 <fputs@plt+0x14b0>
   13acc:	movw	r3, #0
   13ad0:	movt	r3, #0
   13ad4:	cmp	r3, #0
   13ad8:	beq	13ae0 <fputs@plt+0x14b0>
   13adc:	blx	r3
   13ae0:	pop	{r3, lr}
   13ae4:	b	13a4c <fputs@plt+0x141c>
   13ae8:	movw	r3, #50560	; 0xc580
   13aec:	movt	r3, #2
   13af0:	ldr	r3, [r3]
   13af4:	and	r3, r3, #3072	; 0xc00
   13af8:	cmp	r3, #1024	; 0x400
   13afc:	beq	13b14 <fputs@plt+0x14e4>
   13b00:	movw	r3, #49720	; 0xc238
   13b04:	movt	r3, #2
   13b08:	ldr	r0, [r3, #24]
   13b0c:	cmp	r0, #0
   13b10:	beq	13b1c <fputs@plt+0x14ec>
   13b14:	mov	r0, #0
   13b18:	bx	lr
   13b1c:	ldr	r2, [r3, #56]	; 0x38
   13b20:	cmp	r2, #0
   13b24:	bxne	lr
   13b28:	ldr	r0, [r3, #88]	; 0x58
   13b2c:	cmp	r0, #0
   13b30:	beq	13b3c <fputs@plt+0x150c>
   13b34:	mov	r0, r2
   13b38:	bx	lr
   13b3c:	ldr	r2, [r3, #120]	; 0x78
   13b40:	cmp	r2, #0
   13b44:	bxne	lr
   13b48:	ldr	r0, [r3, #344]	; 0x158
   13b4c:	rsbs	r0, r0, #1
   13b50:	movcc	r0, #0
   13b54:	bx	lr
   13b58:	push	{r3, r4, r5, lr}
   13b5c:	mov	r0, #0
   13b60:	mov	r5, r1
   13b64:	mov	r4, r2
   13b68:	movw	r1, #40712	; 0x9f08
   13b6c:	mov	r2, #5
   13b70:	movt	r1, #1
   13b74:	bl	12204 <dcgettext@plt>
   13b78:	mov	r1, r5
   13b7c:	mov	r2, r4
   13b80:	bl	12528 <warnx@plt>
   13b84:	mov	r0, #1
   13b88:	pop	{r3, r4, r5, pc}
   13b8c:	push	{r4, r5, r6, lr}
   13b90:	mov	r4, r1
   13b94:	ldr	r5, [r1]
   13b98:	mov	r6, r2
   13b9c:	add	r5, r5, #1
   13ba0:	lsl	r5, r5, #2
   13ba4:	mov	r1, r5
   13ba8:	bl	125ac <realloc@plt>
   13bac:	rsbs	r3, r0, #1
   13bb0:	movcc	r3, #0
   13bb4:	cmp	r5, #0
   13bb8:	moveq	r3, #0
   13bbc:	cmp	r3, #0
   13bc0:	bne	13bd8 <fputs@plt+0x15a8>
   13bc4:	ldr	r3, [r4]
   13bc8:	add	r1, r3, #1
   13bcc:	str	r1, [r4]
   13bd0:	str	r6, [r0, r3, lsl #2]
   13bd4:	pop	{r4, r5, r6, pc}
   13bd8:	movw	r1, #40740	; 0x9f24
   13bdc:	mov	r2, r5
   13be0:	mov	r0, #1
   13be4:	movt	r1, #1
   13be8:	bl	12060 <err@plt>
   13bec:	push	{r1, r2, r3}
   13bf0:	mov	r1, #1
   13bf4:	push	{r4, lr}
   13bf8:	movw	r4, #50536	; 0xc568
   13bfc:	movt	r4, #2
   13c00:	sub	sp, sp, #12
   13c04:	add	ip, sp, #24
   13c08:	ldr	lr, [r4]
   13c0c:	ldr	r2, [sp, #20]
   13c10:	mov	r3, ip
   13c14:	str	ip, [sp]
   13c18:	str	lr, [sp, #4]
   13c1c:	bl	12600 <__vasprintf_chk@plt>
   13c20:	cmp	r0, #0
   13c24:	blt	13c4c <fputs@plt+0x161c>
   13c28:	ldr	r2, [sp, #4]
   13c2c:	ldr	r3, [r4]
   13c30:	cmp	r2, r3
   13c34:	bne	13c48 <fputs@plt+0x1618>
   13c38:	add	sp, sp, #12
   13c3c:	pop	{r4, lr}
   13c40:	add	sp, sp, #12
   13c44:	bx	lr
   13c48:	bl	12444 <__stack_chk_fail@plt>
   13c4c:	movw	r1, #40768	; 0x9f40
   13c50:	mov	r0, #1
   13c54:	movt	r1, #1
   13c58:	bl	12060 <err@plt>
   13c5c:	push	{r4, r5, r6, r7, lr}
   13c60:	mov	r2, #5
   13c64:	sub	sp, sp, #12
   13c68:	mov	r6, r0
   13c6c:	movw	r1, #40792	; 0x9f58
   13c70:	mov	r0, #0
   13c74:	movt	r1, #1
   13c78:	movw	r4, #49720	; 0xc238
   13c7c:	bl	12204 <dcgettext@plt>
   13c80:	mov	r1, r6
   13c84:	bl	12630 <fputs@plt>
   13c88:	mov	r2, #5
   13c8c:	movw	r1, #40804	; 0x9f64
   13c90:	mov	r0, #0
   13c94:	movt	r1, #1
   13c98:	movt	r4, #2
   13c9c:	bl	12204 <dcgettext@plt>
   13ca0:	movw	r3, #50520	; 0xc558
   13ca4:	movt	r3, #2
   13ca8:	mov	r1, #1
   13cac:	add	r7, r4, #800	; 0x320
   13cb0:	ldr	r3, [r3]
   13cb4:	mov	r2, r0
   13cb8:	mov	r0, r6
   13cbc:	bl	12468 <__fprintf_chk@plt>
   13cc0:	mov	r2, #5
   13cc4:	movw	r1, #40960	; 0xa000
   13cc8:	mov	r0, #0
   13ccc:	movt	r1, #1
   13cd0:	bl	12204 <dcgettext@plt>
   13cd4:	mov	r1, #1
   13cd8:	mov	r2, r0
   13cdc:	mov	r0, r6
   13ce0:	bl	12468 <__fprintf_chk@plt>
   13ce4:	mov	r2, #5
   13ce8:	movw	r1, #41204	; 0xa0f4
   13cec:	mov	r0, #0
   13cf0:	movt	r1, #1
   13cf4:	bl	12204 <dcgettext@plt>
   13cf8:	mov	r1, #1
   13cfc:	mov	r2, r0
   13d00:	mov	r0, r6
   13d04:	bl	12468 <__fprintf_chk@plt>
   13d08:	mov	r2, #5
   13d0c:	movw	r1, #41356	; 0xa18c
   13d10:	mov	r0, #0
   13d14:	movt	r1, #1
   13d18:	bl	12204 <dcgettext@plt>
   13d1c:	mov	r1, #1
   13d20:	mov	r2, r0
   13d24:	mov	r0, r6
   13d28:	bl	12468 <__fprintf_chk@plt>
   13d2c:	mov	r2, #5
   13d30:	movw	r1, #41920	; 0xa3c0
   13d34:	mov	r0, #0
   13d38:	movt	r1, #1
   13d3c:	bl	12204 <dcgettext@plt>
   13d40:	mov	r1, #1
   13d44:	mov	r2, r0
   13d48:	mov	r0, r6
   13d4c:	bl	12468 <__fprintf_chk@plt>
   13d50:	mov	r2, #5
   13d54:	movw	r1, #42208	; 0xa4e0
   13d58:	mov	r0, #0
   13d5c:	movt	r1, #1
   13d60:	bl	12204 <dcgettext@plt>
   13d64:	mov	r1, r6
   13d68:	bl	12630 <fputs@plt>
   13d6c:	mov	r2, #5
   13d70:	movw	r1, #42280	; 0xa528
   13d74:	mov	r0, #0
   13d78:	movt	r1, #1
   13d7c:	bl	12204 <dcgettext@plt>
   13d80:	mov	r1, r6
   13d84:	bl	12630 <fputs@plt>
   13d88:	mov	r2, #5
   13d8c:	movw	r1, #42336	; 0xa560
   13d90:	mov	r0, #0
   13d94:	movt	r1, #1
   13d98:	bl	12204 <dcgettext@plt>
   13d9c:	mov	r1, r6
   13da0:	bl	12630 <fputs@plt>
   13da4:	mov	r2, #5
   13da8:	movw	r1, #42392	; 0xa598
   13dac:	mov	r0, #0
   13db0:	movt	r1, #1
   13db4:	bl	12204 <dcgettext@plt>
   13db8:	mov	r1, r6
   13dbc:	bl	12630 <fputs@plt>
   13dc0:	mov	r2, #5
   13dc4:	movw	r1, #42440	; 0xa5c8
   13dc8:	mov	r0, #0
   13dcc:	movt	r1, #1
   13dd0:	bl	12204 <dcgettext@plt>
   13dd4:	mov	r1, r6
   13dd8:	bl	12630 <fputs@plt>
   13ddc:	mov	r2, #5
   13de0:	movw	r1, #42508	; 0xa60c
   13de4:	mov	r0, #0
   13de8:	movt	r1, #1
   13dec:	bl	12204 <dcgettext@plt>
   13df0:	mov	r1, #1
   13df4:	mov	r2, r0
   13df8:	mov	r0, r6
   13dfc:	bl	12468 <__fprintf_chk@plt>
   13e00:	mov	r2, #5
   13e04:	movw	r1, #42504	; 0xa608
   13e08:	mov	r0, #0
   13e0c:	movt	r1, #1
   13e10:	bl	12204 <dcgettext@plt>
   13e14:	mov	r1, r6
   13e18:	bl	12630 <fputs@plt>
   13e1c:	mov	r2, #5
   13e20:	movw	r1, #42824	; 0xa748
   13e24:	mov	r0, #0
   13e28:	movt	r1, #1
   13e2c:	bl	12204 <dcgettext@plt>
   13e30:	mov	r1, r6
   13e34:	bl	12630 <fputs@plt>
   13e38:	mov	r2, #5
   13e3c:	movw	r1, #42868	; 0xa774
   13e40:	mov	r0, #0
   13e44:	movt	r1, #1
   13e48:	bl	12204 <dcgettext@plt>
   13e4c:	mov	r1, r6
   13e50:	bl	12630 <fputs@plt>
   13e54:	mov	r2, #5
   13e58:	movw	r1, #42924	; 0xa7ac
   13e5c:	mov	r0, #0
   13e60:	movt	r1, #1
   13e64:	bl	12204 <dcgettext@plt>
   13e68:	mov	r1, #1
   13e6c:	mov	r2, r0
   13e70:	mov	r0, r6
   13e74:	bl	12468 <__fprintf_chk@plt>
   13e78:	ldr	r1, [r4, #20]
   13e7c:	mov	r2, #5
   13e80:	mov	r0, #0
   13e84:	ldr	r5, [r4]
   13e88:	bl	12204 <dcgettext@plt>
   13e8c:	add	r4, r4, #32
   13e90:	movw	r2, #42948	; 0xa7c4
   13e94:	mov	r1, #1
   13e98:	mov	r3, r5
   13e9c:	movt	r2, #1
   13ea0:	str	r0, [sp]
   13ea4:	mov	r0, r6
   13ea8:	bl	12468 <__fprintf_chk@plt>
   13eac:	cmp	r4, r7
   13eb0:	bne	13e78 <fputs@plt+0x1848>
   13eb4:	mov	r2, #5
   13eb8:	movw	r1, #42960	; 0xa7d0
   13ebc:	mov	r0, #0
   13ec0:	movt	r1, #1
   13ec4:	bl	12204 <dcgettext@plt>
   13ec8:	movw	r3, #42988	; 0xa7ec
   13ecc:	mov	r1, #1
   13ed0:	movt	r3, #1
   13ed4:	mov	r2, r0
   13ed8:	mov	r0, r6
   13edc:	bl	12468 <__fprintf_chk@plt>
   13ee0:	movw	r3, #50548	; 0xc574
   13ee4:	movt	r3, #2
   13ee8:	ldr	r0, [r3]
   13eec:	subs	r3, r6, r0
   13ef0:	rsbs	r0, r3, #0
   13ef4:	adcs	r0, r0, r3
   13ef8:	bl	125f4 <exit@plt>
   13efc:	push	{r4, r5, r6, r7, r8, lr}
   13f00:	movw	r4, #49720	; 0xc238
   13f04:	movt	r4, #2
   13f08:	movw	r5, #50560	; 0xc580
   13f0c:	movt	r5, #2
   13f10:	mov	r6, r0
   13f14:	ldr	r1, [r4, #88]	; 0x58
   13f18:	ldr	r3, [r5]
   13f1c:	cmp	r1, #0
   13f20:	ubfx	r7, r3, #4, #1
   13f24:	beq	13f34 <fputs@plt+0x1904>
   13f28:	bl	12480 <mnt_fs_match_fstype@plt>
   13f2c:	cmp	r0, #0
   13f30:	beq	13f74 <fputs@plt+0x1944>
   13f34:	ldr	r1, [r4, #120]	; 0x78
   13f38:	cmp	r1, #0
   13f3c:	beq	13f50 <fputs@plt+0x1920>
   13f40:	mov	r0, r6
   13f44:	bl	121d4 <mnt_fs_match_options@plt>
   13f48:	cmp	r0, #0
   13f4c:	beq	13f74 <fputs@plt+0x1944>
   13f50:	ldr	r8, [r4, #348]	; 0x15c
   13f54:	cmp	r8, #0
   13f58:	beq	13f7c <fputs@plt+0x194c>
   13f5c:	mov	r0, r6
   13f60:	bl	12450 <mnt_fs_get_devno@plt>
   13f64:	ldrd	r2, [r8]
   13f68:	cmp	r1, r3
   13f6c:	cmpeq	r0, r2
   13f70:	beq	13f7c <fputs@plt+0x194c>
   13f74:	mov	r0, r7
   13f78:	pop	{r4, r5, r6, r7, r8, pc}
   13f7c:	ldr	r1, [r4, #56]	; 0x38
   13f80:	cmp	r1, #0
   13f84:	beq	13f9c <fputs@plt+0x196c>
   13f88:	mov	r0, r6
   13f8c:	ldr	r2, [r5, #4]
   13f90:	bl	12300 <mnt_fs_match_target@plt>
   13f94:	cmp	r0, #0
   13f98:	beq	13f74 <fputs@plt+0x1944>
   13f9c:	ldr	r1, [r4, #24]
   13fa0:	cmp	r1, #0
   13fa4:	beq	13fbc <fputs@plt+0x198c>
   13fa8:	mov	r0, r6
   13fac:	ldr	r2, [r5, #4]
   13fb0:	bl	125dc <mnt_fs_match_source@plt>
   13fb4:	cmp	r0, #0
   13fb8:	beq	13f74 <fputs@plt+0x1944>
   13fbc:	ldr	r3, [r5]
   13fc0:	and	r3, r3, #3072	; 0xc00
   13fc4:	cmp	r3, #1024	; 0x400
   13fc8:	beq	13fd4 <fputs@plt+0x19a4>
   13fcc:	eor	r0, r7, #1
   13fd0:	pop	{r4, r5, r6, r7, r8, pc}
   13fd4:	mov	r0, r6
   13fd8:	bl	120c0 <mnt_fs_get_fstype@plt>
   13fdc:	cmp	r0, #0
   13fe0:	beq	13ff8 <fputs@plt+0x19c8>
   13fe4:	movw	r1, #43000	; 0xa7f8
   13fe8:	movt	r1, #1
   13fec:	bl	123a8 <strstr@plt>
   13ff0:	cmp	r0, #0
   13ff4:	bne	13fcc <fputs@plt+0x199c>
   13ff8:	mov	r0, r6
   13ffc:	bl	1227c <mnt_fs_is_pseudofs@plt>
   14000:	cmp	r0, #0
   14004:	beq	13fcc <fputs@plt+0x199c>
   14008:	b	13f74 <fputs@plt+0x1944>
   1400c:	push	{r3, r4, r5, lr}
   14010:	mov	r4, r1
   14014:	mov	r2, r4
   14018:	movw	r1, #43008	; 0xa800
   1401c:	movt	r1, #1
   14020:	mov	r5, r0
   14024:	bl	123fc <strncasecmp@plt>
   14028:	cmp	r0, #0
   1402c:	bne	14038 <fputs@plt+0x1a08>
   14030:	cmp	r4, #4
   14034:	beq	140b4 <fputs@plt+0x1a84>
   14038:	movw	r1, #43016	; 0xa808
   1403c:	mov	r0, r5
   14040:	movt	r1, #1
   14044:	mov	r2, r4
   14048:	bl	123fc <strncasecmp@plt>
   1404c:	cmp	r0, #0
   14050:	bne	1405c <fputs@plt+0x1a2c>
   14054:	cmp	r4, #5
   14058:	beq	140bc <fputs@plt+0x1a8c>
   1405c:	movw	r1, #43024	; 0xa810
   14060:	mov	r0, r5
   14064:	movt	r1, #1
   14068:	mov	r2, r4
   1406c:	bl	123fc <strncasecmp@plt>
   14070:	cmp	r0, #0
   14074:	beq	140a4 <fputs@plt+0x1a74>
   14078:	movw	r1, #43032	; 0xa818
   1407c:	mov	r0, r5
   14080:	movt	r1, #1
   14084:	mov	r2, r4
   14088:	bl	123fc <strncasecmp@plt>
   1408c:	cmp	r0, #0
   14090:	bne	140c4 <fputs@plt+0x1a94>
   14094:	cmp	r4, #7
   14098:	bne	140c4 <fputs@plt+0x1a94>
   1409c:	mov	r0, #4
   140a0:	pop	{r3, r4, r5, pc}
   140a4:	cmp	r4, #6
   140a8:	bne	14078 <fputs@plt+0x1a48>
   140ac:	mov	r0, #2
   140b0:	pop	{r3, r4, r5, pc}
   140b4:	mov	r0, #3
   140b8:	pop	{r3, r4, r5, pc}
   140bc:	mov	r0, #1
   140c0:	pop	{r3, r4, r5, pc}
   140c4:	mov	r2, #5
   140c8:	movw	r1, #43040	; 0xa820
   140cc:	mov	r0, #0
   140d0:	movt	r1, #1
   140d4:	bl	12204 <dcgettext@plt>
   140d8:	mov	r1, r5
   140dc:	bl	12528 <warnx@plt>
   140e0:	mvn	r0, #0
   140e4:	pop	{r3, r4, r5, pc}
   140e8:	push	{r4, r5, r6, r7, r8, lr}
   140ec:	movw	r7, #49720	; 0xc238
   140f0:	movt	r7, #2
   140f4:	mov	r8, r0
   140f8:	mov	r6, r1
   140fc:	mov	r4, #0
   14100:	ldr	r5, [r7, r4, lsl #5]
   14104:	mov	r0, r8
   14108:	mov	r2, r6
   1410c:	mov	r1, r5
   14110:	bl	123fc <strncasecmp@plt>
   14114:	cmp	r0, #0
   14118:	bne	14128 <fputs@plt+0x1af8>
   1411c:	ldrsb	r3, [r5, r6]
   14120:	cmp	r3, #0
   14124:	beq	14158 <fputs@plt+0x1b28>
   14128:	add	r4, r4, #1
   1412c:	cmp	r4, #25
   14130:	bne	14100 <fputs@plt+0x1ad0>
   14134:	mov	r2, #5
   14138:	movw	r1, #43060	; 0xa834
   1413c:	mov	r0, #0
   14140:	movt	r1, #1
   14144:	bl	12204 <dcgettext@plt>
   14148:	mov	r1, r8
   1414c:	bl	12528 <warnx@plt>
   14150:	mvn	r0, #0
   14154:	pop	{r4, r5, r6, r7, r8, pc}
   14158:	mov	r0, r4
   1415c:	pop	{r4, r5, r6, r7, r8, pc}
   14160:	push	{r3, lr}
   14164:	movw	r3, #50560	; 0xc580
   14168:	movt	r3, #2
   1416c:	ldr	r2, [r3, #8]
   14170:	cmp	r2, r0
   14174:	ble	141a8 <fputs@plt+0x1b78>
   14178:	add	r3, r3, r0, lsl #2
   1417c:	ldr	r0, [r3, #12]
   14180:	cmp	r0, #24
   14184:	pople	{r3, pc}
   14188:	movw	r0, #43120	; 0xa870
   1418c:	movw	r1, #43096	; 0xa858
   14190:	movw	r3, #39940	; 0x9c04
   14194:	movt	r0, #1
   14198:	movt	r1, #1
   1419c:	mov	r2, #166	; 0xa6
   141a0:	movt	r3, #1
   141a4:	bl	121a4 <__assert_fail@plt>
   141a8:	movw	r0, #43080	; 0xa848
   141ac:	movw	r1, #43096	; 0xa858
   141b0:	movw	r3, #39940	; 0x9c04
   141b4:	movt	r0, #1
   141b8:	movt	r1, #1
   141bc:	mov	r2, #165	; 0xa5
   141c0:	movt	r3, #1
   141c4:	bl	121a4 <__assert_fail@plt>
   141c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   141cc:	movw	r6, #50536	; 0xc568
   141d0:	movt	r6, #2
   141d4:	sub	sp, sp, #16
   141d8:	add	r3, sp, #8
   141dc:	movw	r1, #43176	; 0xa8a8
   141e0:	ldr	ip, [r6]
   141e4:	add	r2, sp, #4
   141e8:	movt	r1, #1
   141ec:	mov	r7, r0
   141f0:	str	ip, [sp, #12]
   141f4:	bl	122a0 <sscanf@plt>
   141f8:	cmp	r0, #2
   141fc:	movwne	r3, #49720	; 0xc238
   14200:	movtne	r3, #2
   14204:	strne	r7, [r3, #24]
   14208:	beq	14224 <fputs@plt+0x1bf4>
   1420c:	ldr	r2, [sp, #12]
   14210:	ldr	r3, [r6]
   14214:	cmp	r2, r3
   14218:	bne	14294 <fputs@plt+0x1c64>
   1421c:	add	sp, sp, #16
   14220:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14224:	mov	r0, #8
   14228:	bl	12420 <malloc@plt>
   1422c:	cmp	r0, #0
   14230:	beq	14298 <fputs@plt+0x1c68>
   14234:	ldmib	sp, {r8, r9}
   14238:	movw	ip, #50560	; 0xc580
   1423c:	movt	ip, #2
   14240:	mov	r2, #0
   14244:	bic	r1, r9, #255	; 0xff
   14248:	bic	r3, r8, #4080	; 0xff0
   1424c:	ubfx	r8, r8, #0, #12
   14250:	uxtb	sl, r9
   14254:	lsr	r5, r1, #20
   14258:	lsl	r4, r1, #12
   1425c:	ldr	r9, [ip]
   14260:	movw	r1, #49720	; 0xc238
   14264:	movt	r1, #2
   14268:	bic	r3, r3, #15
   1426c:	orr	r8, sl, r8, lsl #8
   14270:	orr	r2, r2, r4
   14274:	orr	r3, r3, r5
   14278:	orr	r2, r2, r8
   1427c:	orr	r9, r9, #64	; 0x40
   14280:	strd	r2, [r0]
   14284:	str	r9, [ip]
   14288:	str	r7, [r1, #344]	; 0x158
   1428c:	str	r0, [r1, #348]	; 0x15c
   14290:	b	1420c <fputs@plt+0x1bdc>
   14294:	bl	12444 <__stack_chk_fail@plt>
   14298:	movw	r1, #40740	; 0x9f24
   1429c:	mov	r0, #1
   142a0:	movt	r1, #1
   142a4:	mov	r2, #8
   142a8:	bl	12060 <err@plt>
   142ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142b0:	movw	r4, #50536	; 0xc568
   142b4:	movt	r4, #2
   142b8:	sub	sp, sp, #16
   142bc:	mov	r8, r1
   142c0:	mov	r9, r2
   142c4:	ldr	r3, [r4]
   142c8:	add	r1, sp, #4
   142cc:	add	r2, sp, #8
   142d0:	mov	r5, r0
   142d4:	str	r3, [sp, #12]
   142d8:	bl	12624 <mnt_fs_get_tag@plt>
   142dc:	cmp	r0, #0
   142e0:	bne	142f8 <fputs@plt+0x1cc8>
   142e4:	ldr	r0, [sp, #4]
   142e8:	mov	r1, r8
   142ec:	bl	125e8 <strcmp@plt>
   142f0:	cmp	r0, #0
   142f4:	beq	143ac <fputs@plt+0x1d7c>
   142f8:	mov	r0, r5
   142fc:	movw	r5, #50560	; 0xc580
   14300:	bl	124bc <mnt_fs_get_source@plt>
   14304:	movt	r5, #2
   14308:	cmp	r0, #0
   1430c:	beq	143cc <fputs@plt+0x1d9c>
   14310:	ldr	r1, [r5, #4]
   14314:	bl	1242c <mnt_resolve_spec@plt>
   14318:	subs	sl, r0, #0
   1431c:	beq	143cc <fputs@plt+0x1d9c>
   14320:	ldr	r3, [r5, #112]	; 0x70
   14324:	cmp	r3, #0
   14328:	beq	14474 <fputs@plt+0x1e44>
   1432c:	mov	r1, #0
   14330:	mov	r0, sl
   14334:	bl	123c0 <realpath@plt>
   14338:	movw	r1, #43184	; 0xa8b0
   1433c:	mov	r2, #5
   14340:	movt	r1, #1
   14344:	cmp	r0, #0
   14348:	mov	r6, r0
   1434c:	movne	r7, r0
   14350:	moveq	r7, sl
   14354:	mov	r0, r7
   14358:	bl	12594 <strncmp@plt>
   1435c:	cmp	r0, #0
   14360:	addeq	r7, r7, #5
   14364:	mov	r2, r7
   14368:	movw	r1, #43192	; 0xa8b8
   1436c:	ldr	r0, [r5, #112]	; 0x70
   14370:	movt	r1, #1
   14374:	bl	123d8 <udev_device_new_from_subsystem_sysname@plt>
   14378:	mov	r7, r0
   1437c:	mov	r0, r6
   14380:	bl	121e0 <free@plt>
   14384:	cmp	r7, #0
   14388:	beq	143d0 <fputs@plt+0x1da0>
   1438c:	sub	r9, r9, #6
   14390:	cmp	r9, #3
   14394:	ldrls	pc, [pc, r9, lsl #2]
   14398:	b	14468 <fputs@plt+0x1e38>
   1439c:	andeq	r4, r1, r4, asr r4
   143a0:	andeq	r4, r1, r0, asr #8
   143a4:	andeq	r4, r1, ip, lsr #8
   143a8:	andeq	r4, r1, r8, ror #7
   143ac:	ldr	r5, [sp, #8]
   143b0:	ldr	r2, [sp, #12]
   143b4:	mov	r0, r5
   143b8:	ldr	r3, [r4]
   143bc:	cmp	r2, r3
   143c0:	bne	14488 <fputs@plt+0x1e58>
   143c4:	add	sp, sp, #16
   143c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   143cc:	mov	sl, #0
   143d0:	ldr	r0, [r5, #4]
   143d4:	mov	r1, sl
   143d8:	mov	r2, r8
   143dc:	bl	12000 <mnt_cache_find_tag_value@plt>
   143e0:	mov	r5, r0
   143e4:	b	143b0 <fputs@plt+0x1d80>
   143e8:	movw	r1, #43232	; 0xa8e0
   143ec:	mov	r0, r7
   143f0:	movt	r1, #1
   143f4:	bl	12078 <udev_device_get_property_value@plt>
   143f8:	cmp	r0, #0
   143fc:	beq	14468 <fputs@plt+0x1e38>
   14400:	bl	125c4 <__strdup@plt>
   14404:	subs	r5, r0, #0
   14408:	beq	1448c <fputs@plt+0x1e5c>
   1440c:	bl	12294 <strlen@plt>
   14410:	mov	r1, r5
   14414:	add	r2, r0, #1
   14418:	mov	r0, r5
   1441c:	bl	150d0 <fputs@plt+0x2aa0>
   14420:	mov	r0, r7
   14424:	bl	12324 <udev_device_unref@plt>
   14428:	b	143b0 <fputs@plt+0x1d80>
   1442c:	movw	r1, #43252	; 0xa8f4
   14430:	mov	r0, r7
   14434:	movt	r1, #1
   14438:	bl	12078 <udev_device_get_property_value@plt>
   1443c:	b	143f8 <fputs@plt+0x1dc8>
   14440:	movw	r1, #43216	; 0xa8d0
   14444:	mov	r0, r7
   14448:	movt	r1, #1
   1444c:	bl	12078 <udev_device_get_property_value@plt>
   14450:	b	143f8 <fputs@plt+0x1dc8>
   14454:	movw	r1, #43200	; 0xa8c0
   14458:	mov	r0, r7
   1445c:	movt	r1, #1
   14460:	bl	12078 <udev_device_get_property_value@plt>
   14464:	b	143f8 <fputs@plt+0x1dc8>
   14468:	mov	r0, r7
   1446c:	bl	12324 <udev_device_unref@plt>
   14470:	b	143d0 <fputs@plt+0x1da0>
   14474:	bl	121c8 <udev_new@plt>
   14478:	cmp	r0, #0
   1447c:	str	r0, [r5, #112]	; 0x70
   14480:	bne	1432c <fputs@plt+0x1cfc>
   14484:	b	143d0 <fputs@plt+0x1da0>
   14488:	bl	12444 <__stack_chk_fail@plt>
   1448c:	bl	12640 <fputs@plt+0x10>
   14490:	push	{r4, r5, r6, r7, r8, lr}
   14494:	vpush	{d8}
   14498:	movw	r6, #50536	; 0xc568
   1449c:	movt	r6, #2
   144a0:	sub	sp, sp, #112	; 0x70
   144a4:	mov	r5, r0
   144a8:	mov	r0, r1
   144ac:	ldr	r3, [r6]
   144b0:	str	r3, [sp, #108]	; 0x6c
   144b4:	bl	14160 <fputs@plt+0x1b30>
   144b8:	mov	r4, r0
   144bc:	cmp	r0, #24
   144c0:	ldrls	pc, [pc, r0, lsl #2]
   144c4:	b	1487c <fputs@plt+0x224c>
   144c8:	andeq	r4, r1, r0, ror #10
   144cc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   144d0:	andeq	r4, r1, r0, lsl #12
   144d4:	andeq	r4, r1, r0, lsl r6
   144d8:	andeq	r4, r1, r0, lsr #12
   144dc:	andeq	r4, r1, r0, lsr r6
   144e0:	andeq	r4, r1, r0, asr #12
   144e4:	andeq	r4, r1, ip, asr r6
   144e8:	andeq	r4, r1, r8, ror r6
   144ec:	muleq	r1, r4, r6
   144f0:			; <UNDEFINED> instruction: 0x000146b0
   144f4:	andeq	r4, r1, ip, ror r8
   144f8:	andeq	r4, r1, ip, ror r8
   144fc:	andeq	r4, r1, ip, ror r8
   14500:	andeq	r4, r1, r8, lsl r7
   14504:	andeq	r4, r1, r8, lsl r7
   14508:	andeq	r4, r1, r8, lsl r7
   1450c:	andeq	r4, r1, r8, lsl r7
   14510:	andeq	r4, r1, r0, lsl #15
   14514:	muleq	r1, r0, r7
   14518:	andeq	r4, r1, ip, lsr #15
   1451c:	andeq	r4, r1, r8, asr #15
   14520:	ldrdeq	r4, [r1], -r8
   14524:	andeq	r4, r1, r0, ror #16
   14528:	andeq	r4, r1, ip, lsr #10
   1452c:	mov	r0, r5
   14530:	bl	12048 <mnt_fs_is_kernel@plt>
   14534:	cmp	r0, #0
   14538:	bne	1487c <fputs@plt+0x224c>
   1453c:	mov	r0, r5
   14540:	bl	1248c <mnt_fs_get_passno@plt>
   14544:	mov	r2, r0
   14548:	movw	r1, #40736	; 0x9f20
   1454c:	mov	r0, sp
   14550:	movt	r1, #1
   14554:	bl	13bec <fputs@plt+0x15bc>
   14558:	ldr	r4, [sp]
   1455c:	b	145e0 <fputs@plt+0x1fb0>
   14560:	mov	r0, r5
   14564:	bl	12348 <mnt_fs_get_root@plt>
   14568:	mov	r8, r0
   1456c:	mov	r0, r5
   14570:	bl	1251c <mnt_fs_get_srcpath@plt>
   14574:	subs	r4, r0, #0
   14578:	beq	14894 <fputs@plt+0x2264>
   1457c:	movw	r7, #50560	; 0xc580
   14580:	movt	r7, #2
   14584:	ldr	r3, [r7]
   14588:	tst	r3, #4
   1458c:	bne	14884 <fputs@plt+0x2254>
   14590:	cmp	r8, #0
   14594:	cmpne	r4, #0
   14598:	beq	145e0 <fputs@plt+0x1fb0>
   1459c:	ldr	r3, [r7]
   145a0:	tst	r3, #128	; 0x80
   145a4:	bne	145e0 <fputs@plt+0x1fb0>
   145a8:	ldrb	r3, [r8]
   145ac:	cmp	r3, #47	; 0x2f
   145b0:	beq	148f0 <fputs@plt+0x22c0>
   145b4:	mov	r2, r4
   145b8:	mov	r3, r8
   145bc:	movw	r1, #43296	; 0xa920
   145c0:	mov	r0, sp
   145c4:	movt	r1, #1
   145c8:	bl	13bec <fputs@plt+0x15bc>
   145cc:	ldr	r4, [sp]
   145d0:	b	145e0 <fputs@plt+0x1fb0>
   145d4:	mov	r0, r5
   145d8:	bl	12210 <mnt_fs_get_target@plt>
   145dc:	mov	r4, r0
   145e0:	ldr	r2, [sp, #108]	; 0x6c
   145e4:	mov	r0, r4
   145e8:	ldr	r3, [r6]
   145ec:	cmp	r2, r3
   145f0:	bne	14980 <fputs@plt+0x2350>
   145f4:	add	sp, sp, #112	; 0x70
   145f8:	vpop	{d8}
   145fc:	pop	{r4, r5, r6, r7, r8, pc}
   14600:	mov	r0, r5
   14604:	bl	120c0 <mnt_fs_get_fstype@plt>
   14608:	mov	r4, r0
   1460c:	b	145e0 <fputs@plt+0x1fb0>
   14610:	mov	r0, r5
   14614:	bl	12084 <mnt_fs_get_options@plt>
   14618:	mov	r4, r0
   1461c:	b	145e0 <fputs@plt+0x1fb0>
   14620:	mov	r0, r5
   14624:	bl	12054 <mnt_fs_get_vfs_options@plt>
   14628:	mov	r4, r0
   1462c:	b	145e0 <fputs@plt+0x1fb0>
   14630:	mov	r0, r5
   14634:	bl	12150 <mnt_fs_get_fs_options@plt>
   14638:	mov	r4, r0
   1463c:	b	145e0 <fputs@plt+0x1fb0>
   14640:	mov	r0, r5
   14644:	movw	r1, #43320	; 0xa938
   14648:	mov	r2, #6
   1464c:	movt	r1, #1
   14650:	bl	142ac <fputs@plt+0x1c7c>
   14654:	mov	r4, r0
   14658:	b	145e0 <fputs@plt+0x1fb0>
   1465c:	mov	r0, r5
   14660:	movw	r1, #43308	; 0xa92c
   14664:	mov	r2, #7
   14668:	movt	r1, #1
   1466c:	bl	142ac <fputs@plt+0x1c7c>
   14670:	mov	r4, r0
   14674:	b	145e0 <fputs@plt+0x1fb0>
   14678:	mov	r0, r5
   1467c:	movw	r1, #43316	; 0xa934
   14680:	mov	r2, #8
   14684:	movt	r1, #1
   14688:	bl	142ac <fputs@plt+0x1c7c>
   1468c:	mov	r4, r0
   14690:	b	145e0 <fputs@plt+0x1fb0>
   14694:	mov	r0, r5
   14698:	movw	r1, #43304	; 0xa928
   1469c:	mov	r2, #9
   146a0:	movt	r1, #1
   146a4:	bl	142ac <fputs@plt+0x1c7c>
   146a8:	mov	r4, r0
   146ac:	b	145e0 <fputs@plt+0x1fb0>
   146b0:	mov	r0, r5
   146b4:	bl	12450 <mnt_fs_get_devno@plt>
   146b8:	orrs	r3, r0, r1
   146bc:	beq	1487c <fputs@plt+0x224c>
   146c0:	movw	r3, #50560	; 0xc580
   146c4:	movt	r3, #2
   146c8:	lsr	r2, r0, #12
   146cc:	bic	ip, r1, #4080	; 0xff0
   146d0:	ldr	r3, [r3, #116]	; 0x74
   146d4:	orr	r2, r2, r1, lsl #20
   146d8:	bic	r1, r2, #255	; 0xff
   146dc:	bic	r2, ip, #15
   146e0:	tst	r3, #18
   146e4:	uxtb	r3, r0
   146e8:	ubfx	r0, r0, #8, #12
   146ec:	orr	r3, r1, r3
   146f0:	orr	r2, r2, r0
   146f4:	movwne	r1, #43328	; 0xa940
   146f8:	movweq	r1, #43336	; 0xa948
   146fc:	movne	r0, sp
   14700:	movtne	r1, #1
   14704:	moveq	r0, sp
   14708:	movteq	r1, #1
   1470c:	bl	13bec <fputs@plt+0x15bc>
   14710:	ldr	r4, [sp]
   14714:	b	145e0 <fputs@plt+0x1fb0>
   14718:	mov	r0, r5
   1471c:	bl	12210 <mnt_fs_get_target@plt>
   14720:	add	r1, sp, #8
   14724:	bl	12168 <statvfs64@plt>
   14728:	cmp	r0, #0
   1472c:	bne	1487c <fputs@plt+0x224c>
   14730:	cmp	r4, #16
   14734:	beq	14960 <fputs@plt+0x2330>
   14738:	cmp	r4, #17
   1473c:	beq	14900 <fputs@plt+0x22d0>
   14740:	cmp	r4, #15
   14744:	ldr	r1, [sp, #12]
   14748:	ldrne	r2, [sp, #16]
   1474c:	ldreq	r2, [sp, #32]
   14750:	ldrne	r0, [sp, #20]
   14754:	ldreq	r0, [sp, #36]	; 0x24
   14758:	umull	r2, r3, r2, r1
   1475c:	mla	r3, r1, r0, r3
   14760:	orrs	r1, r2, r3
   14764:	movweq	r4, #43276	; 0xa90c
   14768:	movteq	r4, #1
   1476c:	beq	145e0 <fputs@plt+0x1fb0>
   14770:	mov	r0, #0
   14774:	bl	15fa0 <fputs@plt+0x3970>
   14778:	mov	r4, r0
   1477c:	b	145e0 <fputs@plt+0x1fb0>
   14780:	mov	r0, r5
   14784:	bl	12348 <mnt_fs_get_root@plt>
   14788:	mov	r4, r0
   1478c:	b	145e0 <fputs@plt+0x1fb0>
   14790:	mov	r0, r5
   14794:	bl	124b0 <mnt_fs_get_tid@plt>
   14798:	cmp	r0, #0
   1479c:	beq	1487c <fputs@plt+0x224c>
   147a0:	mov	r0, r5
   147a4:	bl	124b0 <mnt_fs_get_tid@plt>
   147a8:	b	14544 <fputs@plt+0x1f14>
   147ac:	mov	r0, r5
   147b0:	bl	12570 <mnt_fs_get_id@plt>
   147b4:	cmp	r0, #0
   147b8:	beq	1487c <fputs@plt+0x224c>
   147bc:	mov	r0, r5
   147c0:	bl	12570 <mnt_fs_get_id@plt>
   147c4:	b	14544 <fputs@plt+0x1f14>
   147c8:	mov	r0, r5
   147cc:	bl	121ec <mnt_fs_get_optional_fields@plt>
   147d0:	mov	r4, r0
   147d4:	b	145e0 <fputs@plt+0x1fb0>
   147d8:	mov	r0, r5
   147dc:	bl	12048 <mnt_fs_is_kernel@plt>
   147e0:	cmp	r0, #0
   147e4:	beq	1487c <fputs@plt+0x224c>
   147e8:	add	r1, sp, #112	; 0x70
   147ec:	mov	r4, #0
   147f0:	mov	r0, r5
   147f4:	str	r4, [r1, #-108]!	; 0xffffff94
   147f8:	bl	12390 <mnt_fs_get_propagation@plt>
   147fc:	cmp	r0, r4
   14800:	bne	145e0 <fputs@plt+0x1fb0>
   14804:	ldr	r2, [sp, #4]
   14808:	movw	r0, #43288	; 0xa918
   1480c:	movw	r3, #43280	; 0xa910
   14810:	movt	r0, #1
   14814:	tst	r2, #1048576	; 0x100000
   14818:	movt	r3, #1
   1481c:	movne	r0, r3
   14820:	bl	125c4 <__strdup@plt>
   14824:	subs	r4, r0, #0
   14828:	beq	14984 <fputs@plt+0x2354>
   1482c:	ldr	r3, [sp, #4]
   14830:	tst	r3, #524288	; 0x80000
   14834:	bne	148c8 <fputs@plt+0x2298>
   14838:	tst	r3, #131072	; 0x20000
   1483c:	beq	145e0 <fputs@plt+0x1fb0>
   14840:	mov	r0, sp
   14844:	mov	r2, r4
   14848:	movw	r1, #43368	; 0xa968
   1484c:	movt	r1, #1
   14850:	bl	13bec <fputs@plt+0x15bc>
   14854:	mov	r0, r4
   14858:	bl	121e0 <free@plt>
   1485c:	b	14710 <fputs@plt+0x20e0>
   14860:	mov	r0, r5
   14864:	bl	12048 <mnt_fs_is_kernel@plt>
   14868:	cmp	r0, #0
   1486c:	bne	1487c <fputs@plt+0x224c>
   14870:	mov	r0, r5
   14874:	bl	123e4 <mnt_fs_get_freq@plt>
   14878:	b	14544 <fputs@plt+0x1f14>
   1487c:	mov	r4, #0
   14880:	b	145e0 <fputs@plt+0x1fb0>
   14884:	ldr	r1, [r7, #4]
   14888:	bl	1245c <mnt_resolve_path@plt>
   1488c:	subs	r4, r0, #0
   14890:	bne	14590 <fputs@plt+0x1f60>
   14894:	mov	r0, r5
   14898:	bl	124bc <mnt_fs_get_source@plt>
   1489c:	subs	r4, r0, #0
   148a0:	beq	1487c <fputs@plt+0x224c>
   148a4:	movw	r7, #50560	; 0xc580
   148a8:	movt	r7, #2
   148ac:	ldr	r3, [r7]
   148b0:	tst	r3, #2
   148b4:	beq	14590 <fputs@plt+0x1f60>
   148b8:	ldr	r1, [r7, #4]
   148bc:	bl	1242c <mnt_resolve_spec@plt>
   148c0:	mov	r4, r0
   148c4:	b	14590 <fputs@plt+0x1f60>
   148c8:	mov	r2, r4
   148cc:	movw	r1, #43356	; 0xa95c
   148d0:	mov	r0, sp
   148d4:	movt	r1, #1
   148d8:	bl	13bec <fputs@plt+0x15bc>
   148dc:	mov	r0, r4
   148e0:	bl	121e0 <free@plt>
   148e4:	ldr	r4, [sp]
   148e8:	ldr	r3, [sp, #4]
   148ec:	b	14838 <fputs@plt+0x2208>
   148f0:	ldrb	r3, [r8, #1]
   148f4:	cmp	r3, #0
   148f8:	beq	145e0 <fputs@plt+0x1fb0>
   148fc:	b	145b4 <fputs@plt+0x1f84>
   14900:	ldrd	r4, [sp, #16]
   14904:	orrs	r1, r4, r5
   14908:	movweq	r4, #43272	; 0xa908
   1490c:	movteq	r4, #1
   14910:	beq	145e0 <fputs@plt+0x1fb0>
   14914:	ldrd	r0, [sp, #24]
   14918:	subs	r0, r4, r0
   1491c:	sbc	r1, r5, r1
   14920:	bl	1916c <fputs@plt+0x6b3c>
   14924:	vmov	d8, r0, r1
   14928:	mov	r0, r4
   1492c:	mov	r1, r5
   14930:	bl	1916c <fputs@plt+0x6b3c>
   14934:	vldr	d7, [pc, #76]	; 14988 <fputs@plt+0x2358>
   14938:	vmov	d6, r0, r1
   1493c:	add	r0, sp, #4
   14940:	movw	r1, #43348	; 0xa954
   14944:	movt	r1, #1
   14948:	vdiv.f64	d8, d8, d6
   1494c:	vmul.f64	d6, d8, d7
   14950:	vmov	r2, r3, d6
   14954:	bl	13bec <fputs@plt+0x15bc>
   14958:	ldr	r4, [sp, #4]
   1495c:	b	145e0 <fputs@plt+0x1fb0>
   14960:	ldrd	r2, [sp, #24]
   14964:	ldrd	r0, [sp, #16]
   14968:	ldr	ip, [sp, #12]
   1496c:	subs	r0, r0, r2
   14970:	sbc	r1, r1, r3
   14974:	umull	r2, r3, r0, ip
   14978:	mla	r3, ip, r1, r3
   1497c:	b	14760 <fputs@plt+0x2130>
   14980:	bl	12444 <__stack_chk_fail@plt>
   14984:	bl	12640 <fputs@plt+0x10>
   14988:	andeq	r0, r0, r0
   1498c:	subsmi	r0, r9, r0
   14990:	push	{r3, r4, r5, r6, r7, lr}
   14994:	mov	r7, r1
   14998:	mov	r1, r2
   1499c:	bl	170b4 <fputs@plt+0x4a84>
   149a0:	subs	r6, r0, #0
   149a4:	beq	14a00 <fputs@plt+0x23d0>
   149a8:	movw	r5, #50560	; 0xc580
   149ac:	movt	r5, #2
   149b0:	ldr	r3, [r5, #8]
   149b4:	cmp	r3, #0
   149b8:	movgt	r4, #0
   149bc:	ble	149ec <fputs@plt+0x23bc>
   149c0:	mov	r1, r4
   149c4:	mov	r0, r7
   149c8:	bl	14490 <fputs@plt+0x1e60>
   149cc:	mov	r1, r4
   149d0:	add	r4, r4, #1
   149d4:	mov	r2, r0
   149d8:	mov	r0, r6
   149dc:	bl	171c0 <fputs@plt+0x4b90>
   149e0:	ldr	r3, [r5, #8]
   149e4:	cmp	r3, r4
   149e8:	bgt	149c0 <fputs@plt+0x2390>
   149ec:	mov	r1, r7
   149f0:	mov	r0, r6
   149f4:	bl	17240 <fputs@plt+0x4c10>
   149f8:	mov	r0, r6
   149fc:	pop	{r3, r4, r5, r6, r7, pc}
   14a00:	mov	r2, #5
   14a04:	movw	r1, #43384	; 0xa978
   14a08:	movt	r1, #1
   14a0c:	bl	12204 <dcgettext@plt>
   14a10:	bl	123f0 <warn@plt>
   14a14:	b	149f8 <fputs@plt+0x23c8>
   14a18:	push	{r4, r5, r6, r7, r8, lr}
   14a1c:	movw	r8, #50536	; 0xc568
   14a20:	movt	r8, #2
   14a24:	sub	sp, sp, #16
   14a28:	subs	r5, r2, #0
   14a2c:	mov	r7, r0
   14a30:	ldr	ip, [r8]
   14a34:	mov	r0, #0
   14a38:	mov	r4, r1
   14a3c:	str	r2, [sp, #4]
   14a40:	mov	r6, r3
   14a44:	str	r0, [sp, #8]
   14a48:	str	ip, [sp, #12]
   14a4c:	beq	14b5c <fputs@plt+0x252c>
   14a50:	movw	r3, #50560	; 0xc580
   14a54:	movt	r3, #2
   14a58:	ldr	r3, [r3]
   14a5c:	tst	r3, #256	; 0x100
   14a60:	beq	14a9c <fputs@plt+0x246c>
   14a64:	mov	r3, r7
   14a68:	ldr	ip, [r3, #28]!
   14a6c:	cmp	ip, r3
   14a70:	beq	14a9c <fputs@plt+0x246c>
   14a74:	ldr	r2, [ip, #-8]
   14a78:	cmp	r5, r2
   14a7c:	bne	14a90 <fputs@plt+0x2460>
   14a80:	b	14b28 <fputs@plt+0x24f8>
   14a84:	ldr	r1, [ip, #-8]
   14a88:	cmp	r5, r1
   14a8c:	beq	14b54 <fputs@plt+0x2524>
   14a90:	ldr	ip, [ip]
   14a94:	cmp	ip, r3
   14a98:	bne	14a84 <fputs@plt+0x2454>
   14a9c:	mov	r0, #0
   14aa0:	bl	12234 <mnt_new_iter@plt>
   14aa4:	subs	r5, r0, #0
   14aa8:	beq	14b70 <fputs@plt+0x2540>
   14aac:	movw	r3, #50560	; 0xc580
   14ab0:	movt	r3, #2
   14ab4:	ldr	r1, [r3]
   14ab8:	ands	r1, r1, #256	; 0x100
   14abc:	beq	14b40 <fputs@plt+0x2510>
   14ac0:	mov	r2, r6
   14ac4:	mov	r0, r7
   14ac8:	ldr	r1, [sp, #4]
   14acc:	bl	14990 <fputs@plt+0x2360>
   14ad0:	subs	r6, r0, #0
   14ad4:	bne	14afc <fputs@plt+0x24cc>
   14ad8:	mvn	r4, #0
   14adc:	b	14b1c <fputs@plt+0x24ec>
   14ae0:	mov	r0, r7
   14ae4:	mov	r1, r4
   14ae8:	ldr	r2, [sp, #8]
   14aec:	mov	r3, r6
   14af0:	bl	14a18 <fputs@plt+0x23e8>
   14af4:	cmp	r0, #0
   14af8:	bne	14ad8 <fputs@plt+0x24a8>
   14afc:	mov	r0, r4
   14b00:	mov	r1, r5
   14b04:	ldr	r2, [sp, #4]
   14b08:	add	r3, sp, #8
   14b0c:	bl	12264 <mnt_table_next_child_fs@plt>
   14b10:	cmp	r0, #0
   14b14:	beq	14ae0 <fputs@plt+0x24b0>
   14b18:	mov	r4, #0
   14b1c:	mov	r0, r5
   14b20:	bl	1221c <mnt_free_iter@plt>
   14b24:	mov	r0, r4
   14b28:	ldr	r2, [sp, #12]
   14b2c:	ldr	r3, [r8]
   14b30:	cmp	r2, r3
   14b34:	bne	14b84 <fputs@plt+0x2554>
   14b38:	add	sp, sp, #16
   14b3c:	pop	{r4, r5, r6, r7, r8, pc}
   14b40:	ldr	r0, [sp, #4]
   14b44:	bl	13efc <fputs@plt+0x18cc>
   14b48:	cmp	r0, #0
   14b4c:	bne	14ac0 <fputs@plt+0x2490>
   14b50:	b	14afc <fputs@plt+0x24cc>
   14b54:	mov	r0, #0
   14b58:	b	14b28 <fputs@plt+0x24f8>
   14b5c:	mov	r0, r1
   14b60:	add	r1, sp, #4
   14b64:	bl	1257c <mnt_table_get_root_fs@plt>
   14b68:	cmp	r0, #0
   14b6c:	beq	14b7c <fputs@plt+0x254c>
   14b70:	mvn	r4, #0
   14b74:	mov	r5, #0
   14b78:	b	14b1c <fputs@plt+0x24ec>
   14b7c:	mov	r6, r0
   14b80:	b	14a9c <fputs@plt+0x246c>
   14b84:	bl	12444 <__stack_chk_fail@plt>
   14b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b8c:	movw	r3, #50536	; 0xc568
   14b90:	sub	sp, sp, #36	; 0x24
   14b94:	movt	r3, #2
   14b98:	mov	r7, r0
   14b9c:	mov	r0, r2
   14ba0:	str	r3, [sp, #20]
   14ba4:	ldr	r3, [r3]
   14ba8:	str	r1, [sp, #16]
   14bac:	str	r3, [sp, #28]
   14bb0:	bl	12234 <mnt_new_iter@plt>
   14bb4:	subs	r5, r0, #0
   14bb8:	beq	14de0 <fputs@plt+0x27b0>
   14bbc:	movw	fp, #50560	; 0xc580
   14bc0:	movw	r4, #49720	; 0xc238
   14bc4:	movt	fp, #2
   14bc8:	movt	r4, #2
   14bcc:	add	r8, sp, #24
   14bd0:	mov	sl, #0
   14bd4:	mvn	r9, #0
   14bd8:	mov	r1, #0
   14bdc:	str	r1, [sp, #24]
   14be0:	bl	13ae8 <fputs@plt+0x14b8>
   14be4:	cmp	r0, #0
   14be8:	bne	14cc8 <fputs@plt+0x2698>
   14bec:	ldr	r1, [r4, #24]
   14bf0:	movw	r3, #49720	; 0xc238
   14bf4:	movt	r3, #2
   14bf8:	cmp	r1, #0
   14bfc:	beq	14c0c <fputs@plt+0x25dc>
   14c00:	ldr	r2, [r3, #88]	; 0x58
   14c04:	cmp	r2, #0
   14c08:	beq	14d40 <fputs@plt+0x2710>
   14c0c:	movw	r6, #50560	; 0xc580
   14c10:	movt	r6, #2
   14c14:	b	14c50 <fputs@plt+0x2620>
   14c18:	ldr	r3, [r6]
   14c1c:	tst	r3, #64	; 0x40
   14c20:	bne	14dcc <fputs@plt+0x279c>
   14c24:	ldr	r3, [r4, #56]	; 0x38
   14c28:	cmp	r3, #0
   14c2c:	bne	14dcc <fputs@plt+0x279c>
   14c30:	ldr	r2, [r4, #24]
   14c34:	cmp	r2, #0
   14c38:	beq	14dcc <fputs@plt+0x279c>
   14c3c:	mov	r0, r5
   14c40:	mvn	r1, #0
   14c44:	str	r2, [r4, #56]	; 0x38
   14c48:	str	r3, [r4, #24]
   14c4c:	bl	12144 <mnt_reset_iter@plt>
   14c50:	str	r8, [sp]
   14c54:	movw	r2, #16124	; 0x3efc
   14c58:	mov	r0, r7
   14c5c:	movt	r2, #1
   14c60:	mov	r1, r5
   14c64:	mov	r3, #0
   14c68:	bl	1203c <mnt_table_find_next_fs@plt>
   14c6c:	ldr	r2, [sp, #24]
   14c70:	cmp	r2, #0
   14c74:	beq	14c18 <fputs@plt+0x25e8>
   14c78:	ldr	r3, [r6, #116]	; 0x74
   14c7c:	tst	r3, #64	; 0x40
   14c80:	bne	14c90 <fputs@plt+0x2660>
   14c84:	ldr	r3, [fp]
   14c88:	ands	r3, r3, #256	; 0x100
   14c8c:	beq	14cf8 <fputs@plt+0x26c8>
   14c90:	ldr	r0, [sp, #16]
   14c94:	mov	r1, r7
   14c98:	mov	r3, #0
   14c9c:	bl	14a18 <fputs@plt+0x23e8>
   14ca0:	mov	r9, r0
   14ca4:	cmp	r9, #0
   14ca8:	bne	14d18 <fputs@plt+0x26e8>
   14cac:	ldr	r3, [r6]
   14cb0:	add	sl, sl, #1
   14cb4:	tst	r3, #8
   14cb8:	bne	14dd4 <fputs@plt+0x27a4>
   14cbc:	orr	r3, r3, #64	; 0x40
   14cc0:	str	r3, [fp]
   14cc4:	b	14bd8 <fputs@plt+0x25a8>
   14cc8:	mov	r0, r7
   14ccc:	mov	r1, r5
   14cd0:	mov	r2, r8
   14cd4:	bl	124d4 <mnt_table_next_fs@plt>
   14cd8:	cmp	r0, #0
   14cdc:	bne	14dcc <fputs@plt+0x279c>
   14ce0:	ldr	r2, [sp, #24]
   14ce4:	cmp	r2, #0
   14ce8:	beq	14dcc <fputs@plt+0x279c>
   14cec:	movw	r6, #50560	; 0xc580
   14cf0:	movt	r6, #2
   14cf4:	b	14c78 <fputs@plt+0x2648>
   14cf8:	mov	r1, r2
   14cfc:	ldr	r0, [sp, #16]
   14d00:	mov	r2, r3
   14d04:	bl	14990 <fputs@plt+0x2360>
   14d08:	rsbs	r9, r0, #1
   14d0c:	movcc	r9, #0
   14d10:	cmp	r9, #0
   14d14:	beq	14cac <fputs@plt+0x267c>
   14d18:	mov	r0, r5
   14d1c:	bl	1221c <mnt_free_iter@plt>
   14d20:	ldr	r1, [sp, #20]
   14d24:	ldr	r2, [sp, #28]
   14d28:	mov	r0, r9
   14d2c:	ldr	r3, [r1]
   14d30:	cmp	r2, r3
   14d34:	bne	14ddc <fputs@plt+0x27ac>
   14d38:	add	sp, sp, #36	; 0x24
   14d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d40:	ldr	r2, [r3, #120]	; 0x78
   14d44:	cmp	r2, #0
   14d48:	bne	14c0c <fputs@plt+0x25dc>
   14d4c:	ldr	r2, [fp]
   14d50:	movw	r6, #50560	; 0xc580
   14d54:	movt	r6, #2
   14d58:	tst	r2, #8
   14d5c:	beq	14c50 <fputs@plt+0x2620>
   14d60:	mov	r0, r5
   14d64:	str	r3, [sp, #8]
   14d68:	str	r1, [sp, #12]
   14d6c:	bl	12510 <mnt_iter_get_direction@plt>
   14d70:	ldr	r1, [sp, #12]
   14d74:	mov	r2, r0
   14d78:	mov	r0, r7
   14d7c:	bl	12240 <mnt_table_find_source@plt>
   14d80:	ldr	r3, [sp, #8]
   14d84:	cmp	r0, #0
   14d88:	mov	r2, r0
   14d8c:	str	r0, [sp, #24]
   14d90:	bne	14c78 <fputs@plt+0x2648>
   14d94:	movw	r1, #50560	; 0xc580
   14d98:	movt	r1, #2
   14d9c:	ldr	r2, [r1]
   14da0:	tst	r2, #64	; 0x40
   14da4:	bne	14dcc <fputs@plt+0x279c>
   14da8:	mov	r0, r5
   14dac:	ldr	r6, [r3, #24]
   14db0:	bl	12510 <mnt_iter_get_direction@plt>
   14db4:	mov	r1, r6
   14db8:	mov	r2, r0
   14dbc:	mov	r0, r7
   14dc0:	bl	124ec <mnt_table_find_target@plt>
   14dc4:	str	r0, [sp, #24]
   14dc8:	b	14ce0 <fputs@plt+0x26b0>
   14dcc:	cmp	sl, #0
   14dd0:	beq	14d18 <fputs@plt+0x26e8>
   14dd4:	mov	r9, #0
   14dd8:	b	14d18 <fputs@plt+0x26e8>
   14ddc:	bl	12444 <__stack_chk_fail@plt>
   14de0:	mov	r2, #5
   14de4:	movw	r1, #43416	; 0xa998
   14de8:	movt	r1, #1
   14dec:	mvn	r9, #0
   14df0:	bl	12204 <dcgettext@plt>
   14df4:	bl	123f0 <warn@plt>
   14df8:	b	14d18 <fputs@plt+0x26e8>
   14dfc:	movw	r3, #50544	; 0xc570
   14e00:	movt	r3, #2
   14e04:	push	{r4, r5, r6, lr}
   14e08:	ldr	r4, [r3]
   14e0c:	mov	r0, r4
   14e10:	bl	1212c <__fpending@plt>
   14e14:	mov	r6, r0
   14e18:	mov	r0, r4
   14e1c:	bl	125a0 <ferror@plt>
   14e20:	mov	r5, r0
   14e24:	mov	r0, r4
   14e28:	bl	120d8 <fclose@plt>
   14e2c:	adds	r4, r0, #0
   14e30:	movne	r4, #1
   14e34:	cmp	r5, #0
   14e38:	bne	14eb0 <fputs@plt+0x2880>
   14e3c:	cmp	r4, #0
   14e40:	beq	14e5c <fputs@plt+0x282c>
   14e44:	cmp	r6, #0
   14e48:	beq	14f00 <fputs@plt+0x28d0>
   14e4c:	bl	1260c <__errno_location@plt>
   14e50:	ldr	r3, [r0]
   14e54:	cmp	r3, #32
   14e58:	bne	14f14 <fputs@plt+0x28e4>
   14e5c:	movw	r3, #50548	; 0xc574
   14e60:	movt	r3, #2
   14e64:	ldr	r4, [r3]
   14e68:	mov	r0, r4
   14e6c:	bl	1212c <__fpending@plt>
   14e70:	mov	r6, r0
   14e74:	mov	r0, r4
   14e78:	bl	125a0 <ferror@plt>
   14e7c:	mov	r5, r0
   14e80:	mov	r0, r4
   14e84:	bl	120d8 <fclose@plt>
   14e88:	adds	r4, r0, #0
   14e8c:	movne	r4, #1
   14e90:	cmp	r5, #0
   14e94:	beq	14edc <fputs@plt+0x28ac>
   14e98:	cmp	r4, #0
   14e9c:	bne	14ea8 <fputs@plt+0x2878>
   14ea0:	bl	1260c <__errno_location@plt>
   14ea4:	str	r4, [r0]
   14ea8:	mov	r0, #1
   14eac:	bl	121bc <_exit@plt>
   14eb0:	cmp	r4, #0
   14eb4:	bne	14e4c <fputs@plt+0x281c>
   14eb8:	bl	1260c <__errno_location@plt>
   14ebc:	str	r4, [r0]
   14ec0:	mov	r2, #5
   14ec4:	movw	r1, #43456	; 0xa9c0
   14ec8:	mov	r0, #0
   14ecc:	movt	r1, #1
   14ed0:	bl	12204 <dcgettext@plt>
   14ed4:	bl	12528 <warnx@plt>
   14ed8:	b	14ea8 <fputs@plt+0x2878>
   14edc:	cmp	r4, #0
   14ee0:	popeq	{r4, r5, r6, pc}
   14ee4:	cmp	r6, #0
   14ee8:	bne	14ea8 <fputs@plt+0x2878>
   14eec:	bl	1260c <__errno_location@plt>
   14ef0:	ldr	r3, [r0]
   14ef4:	cmp	r3, #9
   14ef8:	bne	14ea8 <fputs@plt+0x2878>
   14efc:	pop	{r4, r5, r6, pc}
   14f00:	bl	1260c <__errno_location@plt>
   14f04:	ldr	r3, [r0]
   14f08:	cmp	r3, #9
   14f0c:	bne	14e54 <fputs@plt+0x2824>
   14f10:	b	14e5c <fputs@plt+0x282c>
   14f14:	cmp	r3, #0
   14f18:	beq	14ec0 <fputs@plt+0x2890>
   14f1c:	mov	r2, #5
   14f20:	movw	r1, #43456	; 0xa9c0
   14f24:	mov	r0, #0
   14f28:	movt	r1, #1
   14f2c:	bl	12204 <dcgettext@plt>
   14f30:	bl	123f0 <warn@plt>
   14f34:	b	14ea8 <fputs@plt+0x2878>
   14f38:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14f3c:	subs	r5, r0, #0
   14f40:	beq	15004 <fputs@plt+0x29d4>
   14f44:	bl	12294 <strlen@plt>
   14f48:	lsl	r0, r0, #2
   14f4c:	add	r0, r0, #1
   14f50:	bl	12420 <malloc@plt>
   14f54:	subs	r9, r0, #0
   14f58:	beq	15004 <fputs@plt+0x29d4>
   14f5c:	ldrb	r6, [r5]
   14f60:	cmp	r6, #0
   14f64:	beq	14ffc <fputs@plt+0x29cc>
   14f68:	ldr	r7, [pc, #156]	; 1500c <fputs@plt+0x29dc>
   14f6c:	add	r5, r5, #1
   14f70:	mov	r4, r9
   14f74:	mov	r8, #92	; 0x5c
   14f78:	add	r7, pc, r7
   14f7c:	b	14fc4 <fputs@plt+0x2994>
   14f80:	strb	r8, [r4]
   14f84:	add	r4, r4, #4
   14f88:	ldrsb	r3, [r5, #-1]
   14f8c:	ubfx	r3, r3, #6, #2
   14f90:	add	r3, r3, #48	; 0x30
   14f94:	strb	r3, [r4, #-3]
   14f98:	ldrb	r3, [r5, #-1]
   14f9c:	ubfx	r3, r3, #3, #3
   14fa0:	add	r3, r3, #48	; 0x30
   14fa4:	strb	r3, [r4, #-2]
   14fa8:	ldrb	r3, [r5, #-1]
   14fac:	and	r3, r3, #7
   14fb0:	add	r3, r3, #48	; 0x30
   14fb4:	strb	r3, [r4, #-1]
   14fb8:	ldrb	r6, [r5], #1
   14fbc:	cmp	r6, #0
   14fc0:	beq	14fec <fputs@plt+0x29bc>
   14fc4:	mov	r0, r7
   14fc8:	sxtb	r1, r6
   14fcc:	bl	12114 <strchr@plt>
   14fd0:	cmp	r0, #0
   14fd4:	bne	14f80 <fputs@plt+0x2950>
   14fd8:	strb	r6, [r4]
   14fdc:	add	r4, r4, #1
   14fe0:	ldrb	r6, [r5], #1
   14fe4:	cmp	r6, #0
   14fe8:	bne	14fc4 <fputs@plt+0x2994>
   14fec:	mov	r3, #0
   14ff0:	mov	r0, r9
   14ff4:	strb	r3, [r4]
   14ff8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14ffc:	mov	r4, r9
   15000:	b	14fec <fputs@plt+0x29bc>
   15004:	mov	r0, #0
   15008:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1500c:	andeq	r6, r0, r4, ror r1
   15010:	cmp	r0, #0
   15014:	push	{r4, r5, r6, r7, r8}
   15018:	beq	150c8 <fputs@plt+0x2a98>
   1501c:	add	r1, r1, #1
   15020:	sub	r2, r2, #1
   15024:	mov	ip, #0
   15028:	mov	r6, #8
   1502c:	b	15040 <fputs@plt+0x2a10>
   15030:	add	r0, r0, #1
   15034:	add	ip, ip, #1
   15038:	strb	r3, [r1, #-1]
   1503c:	add	r1, r1, #1
   15040:	ldrb	r3, [r0]
   15044:	sub	r4, r1, #1
   15048:	cmp	r3, #0
   1504c:	beq	150c0 <fputs@plt+0x2a90>
   15050:	cmp	ip, r2
   15054:	bcs	150c0 <fputs@plt+0x2a90>
   15058:	cmp	r3, #92	; 0x5c
   1505c:	bne	15030 <fputs@plt+0x2a00>
   15060:	add	r4, ip, #3
   15064:	cmp	r2, r4
   15068:	bls	15030 <fputs@plt+0x2a00>
   1506c:	ldrb	r4, [r0, #1]
   15070:	bic	r5, r4, #7
   15074:	cmp	r5, #48	; 0x30
   15078:	bne	15030 <fputs@plt+0x2a00>
   1507c:	ldrb	r5, [r0, #2]
   15080:	bic	r7, r5, #7
   15084:	cmp	r7, #48	; 0x30
   15088:	bne	15030 <fputs@plt+0x2a00>
   1508c:	ldrb	r7, [r0, #3]
   15090:	bic	r8, r7, #7
   15094:	cmp	r8, #48	; 0x30
   15098:	bne	15030 <fputs@plt+0x2a00>
   1509c:	and	r3, r4, #7
   150a0:	and	r5, r5, #7
   150a4:	and	r7, r7, #7
   150a8:	add	r0, r0, #4
   150ac:	smlabb	r3, r6, r3, r5
   150b0:	add	ip, ip, #4
   150b4:	add	r3, r7, r3, lsl #3
   150b8:	strb	r3, [r1, #-1]
   150bc:	b	1503c <fputs@plt+0x2a0c>
   150c0:	mov	r3, #0
   150c4:	strb	r3, [r4]
   150c8:	pop	{r4, r5, r6, r7, r8}
   150cc:	bx	lr
   150d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150d4:	subs	r7, r0, #0
   150d8:	sub	sp, sp, #12
   150dc:	beq	151e0 <fputs@plt+0x2bb0>
   150e0:	add	r4, r1, #1
   150e4:	sub	r8, r2, #1
   150e8:	mov	r6, #0
   150ec:	b	15100 <fputs@plt+0x2ad0>
   150f0:	add	r7, r7, #1
   150f4:	add	r6, r6, #1
   150f8:	strb	r5, [r4, #-1]
   150fc:	add	r4, r4, #1
   15100:	ldrb	r5, [r7]
   15104:	sub	r3, r4, #1
   15108:	cmp	r5, #0
   1510c:	beq	151d8 <fputs@plt+0x2ba8>
   15110:	cmp	r6, r8
   15114:	bcs	151d8 <fputs@plt+0x2ba8>
   15118:	cmp	r5, #92	; 0x5c
   1511c:	bne	150f0 <fputs@plt+0x2ac0>
   15120:	add	r3, r6, #3
   15124:	cmp	r8, r3
   15128:	bls	150f0 <fputs@plt+0x2ac0>
   1512c:	ldrsb	r3, [r7, #1]
   15130:	cmp	r3, #120	; 0x78
   15134:	bne	150f0 <fputs@plt+0x2ac0>
   15138:	bl	12408 <__ctype_b_loc@plt>
   1513c:	ldrb	r1, [r7, #2]
   15140:	lsl	r9, r1, #24
   15144:	asr	r2, r9, #23
   15148:	ldr	r3, [r0]
   1514c:	ldrh	r2, [r3, r2]
   15150:	tst	r2, #4096	; 0x1000
   15154:	beq	150f0 <fputs@plt+0x2ac0>
   15158:	ldrb	ip, [r7, #3]
   1515c:	lsl	fp, ip, #24
   15160:	asr	r0, fp, #23
   15164:	ldrh	sl, [r3, r0]
   15168:	tst	sl, #4096	; 0x1000
   1516c:	beq	150f0 <fputs@plt+0x2ac0>
   15170:	tst	r2, #2048	; 0x800
   15174:	lslne	r1, r1, #4
   15178:	andne	r5, r1, #240	; 0xf0
   1517c:	bne	151a0 <fputs@plt+0x2b70>
   15180:	str	ip, [sp, #4]
   15184:	bl	122e8 <__ctype_tolower_loc@plt>
   15188:	ldr	ip, [sp, #4]
   1518c:	ldr	r3, [r0]
   15190:	ldr	r5, [r3, r9, asr #22]
   15194:	sub	r5, r5, #87	; 0x57
   15198:	lsl	r5, r5, #4
   1519c:	uxtb	r5, r5
   151a0:	tst	sl, #2048	; 0x800
   151a4:	subne	r3, ip, #48	; 0x30
   151a8:	uxtbne	r3, r3
   151ac:	bne	151c4 <fputs@plt+0x2b94>
   151b0:	bl	122e8 <__ctype_tolower_loc@plt>
   151b4:	ldr	r3, [r0]
   151b8:	ldr	r3, [r3, fp, asr #22]
   151bc:	sub	r3, r3, #87	; 0x57
   151c0:	uxtb	r3, r3
   151c4:	orr	r5, r3, r5
   151c8:	add	r7, r7, #4
   151cc:	strb	r5, [r4, #-1]
   151d0:	add	r6, r6, #4
   151d4:	b	150fc <fputs@plt+0x2acc>
   151d8:	mov	r2, #0
   151dc:	strb	r2, [r3]
   151e0:	add	sp, sp, #12
   151e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151e8:	push	{r4, r5, r6, lr}
   151ec:	subs	r4, r0, #0
   151f0:	beq	1526c <fputs@plt+0x2c3c>
   151f4:	ldrb	r3, [r4]
   151f8:	tst	r3, #223	; 0xdf
   151fc:	beq	15274 <fputs@plt+0x2c44>
   15200:	cmp	r3, #9
   15204:	beq	15274 <fputs@plt+0x2c44>
   15208:	add	ip, r4, #1
   1520c:	b	15218 <fputs@plt+0x2be8>
   15210:	cmp	r2, #9
   15214:	beq	1522c <fputs@plt+0x2bfc>
   15218:	mov	r3, ip
   1521c:	add	ip, ip, #1
   15220:	ldrb	r2, [r3]
   15224:	tst	r2, #223	; 0xdf
   15228:	bne	15210 <fputs@plt+0x2be0>
   1522c:	rsb	r5, r4, r3
   15230:	add	r5, r5, #1
   15234:	cmp	r1, #0
   15238:	strne	r3, [r1]
   1523c:	cmp	r4, r3
   15240:	beq	1526c <fputs@plt+0x2c3c>
   15244:	mov	r0, r5
   15248:	bl	12420 <malloc@plt>
   1524c:	subs	r6, r0, #0
   15250:	beq	1526c <fputs@plt+0x2c3c>
   15254:	mov	r0, r4
   15258:	mov	r2, r5
   1525c:	mov	r1, r6
   15260:	bl	15010 <fputs@plt+0x29e0>
   15264:	mov	r0, r6
   15268:	pop	{r4, r5, r6, pc}
   1526c:	mov	r0, #0
   15270:	pop	{r4, r5, r6, pc}
   15274:	mov	r3, r4
   15278:	mov	r5, #1
   1527c:	b	15234 <fputs@plt+0x2c04>
   15280:	cmp	r0, #0
   15284:	mov	r3, #0
   15288:	str	r3, [r1]
   1528c:	bxeq	lr
   15290:	ldrb	r2, [r0]
   15294:	cmp	r2, #47	; 0x2f
   15298:	bne	152e0 <fputs@plt+0x2cb0>
   1529c:	ldrsb	r3, [r0, #1]
   152a0:	cmp	r3, #47	; 0x2f
   152a4:	bne	152e8 <fputs@plt+0x2cb8>
   152a8:	mov	r3, r0
   152ac:	b	152cc <fputs@plt+0x2c9c>
   152b0:	ldrb	r2, [r3, #1]
   152b4:	mov	r3, r0
   152b8:	cmp	r2, #47	; 0x2f
   152bc:	bne	152e0 <fputs@plt+0x2cb0>
   152c0:	ldrsb	r2, [r0, #1]
   152c4:	cmp	r2, #47	; 0x2f
   152c8:	bne	152e8 <fputs@plt+0x2cb8>
   152cc:	cmn	r3, #1
   152d0:	add	r0, r0, #1
   152d4:	bne	152b0 <fputs@plt+0x2c80>
   152d8:	mov	r0, #0
   152dc:	bx	lr
   152e0:	cmp	r2, #0
   152e4:	beq	152d8 <fputs@plt+0x2ca8>
   152e8:	mov	r3, #1
   152ec:	str	r3, [r1]
   152f0:	ldrsb	r3, [r0, #1]
   152f4:	cmp	r3, #47	; 0x2f
   152f8:	cmpne	r3, #0
   152fc:	bxeq	lr
   15300:	mov	r3, #2
   15304:	str	r3, [r1]
   15308:	ldrb	r2, [r0, r3]
   1530c:	add	r3, r3, #1
   15310:	cmp	r2, #47	; 0x2f
   15314:	cmpne	r2, #0
   15318:	bne	15304 <fputs@plt+0x2cd4>
   1531c:	bx	lr
   15320:	push	{r3, r4, r5, r6, r7, lr}
   15324:	mov	r7, r1
   15328:	ldrb	r3, [r0]
   1532c:	cmp	r3, #0
   15330:	beq	153a8 <fputs@plt+0x2d78>
   15334:	mov	r4, #0
   15338:	mov	r5, r0
   1533c:	mov	r6, r4
   15340:	b	15370 <fputs@plt+0x2d40>
   15344:	cmp	r3, #92	; 0x5c
   15348:	mov	r0, r7
   1534c:	mov	r1, r3
   15350:	beq	15398 <fputs@plt+0x2d68>
   15354:	bl	12114 <strchr@plt>
   15358:	cmp	r0, #0
   1535c:	bne	153a0 <fputs@plt+0x2d70>
   15360:	ldrb	r3, [r5, #1]!
   15364:	add	r4, r4, #1
   15368:	cmp	r3, #0
   1536c:	beq	15390 <fputs@plt+0x2d60>
   15370:	cmp	r6, #0
   15374:	sxtb	r3, r3
   15378:	beq	15344 <fputs@plt+0x2d14>
   1537c:	ldrb	r3, [r5, #1]!
   15380:	mov	r6, #0
   15384:	add	r4, r4, #1
   15388:	cmp	r3, #0
   1538c:	bne	15370 <fputs@plt+0x2d40>
   15390:	rsb	r0, r6, r4
   15394:	pop	{r3, r4, r5, r6, r7, pc}
   15398:	mov	r6, #1
   1539c:	b	15360 <fputs@plt+0x2d30>
   153a0:	mov	r0, r4
   153a4:	pop	{r3, r4, r5, r6, r7, pc}
   153a8:	mov	r0, r3
   153ac:	pop	{r3, r4, r5, r6, r7, pc}
   153b0:	ldr	r3, [pc, #224]	; 15498 <fputs@plt+0x2e68>
   153b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   153b8:	mov	r6, r0
   153bc:	ldr	r0, [pc, #216]	; 1549c <fputs@plt+0x2e6c>
   153c0:	add	r3, pc, r3
   153c4:	sub	sp, sp, #12
   153c8:	mov	r4, #0
   153cc:	mov	r9, r1
   153d0:	mov	r5, r2
   153d4:	ldr	r8, [r3, r0]
   153d8:	str	r4, [sp]
   153dc:	ldr	r3, [r8]
   153e0:	str	r3, [sp, #4]
   153e4:	bl	1260c <__errno_location@plt>
   153e8:	cmp	r6, r4
   153ec:	mov	r7, r0
   153f0:	str	r4, [r0]
   153f4:	beq	15404 <fputs@plt+0x2dd4>
   153f8:	ldrsb	r3, [r6]
   153fc:	cmp	r3, r4
   15400:	bne	1541c <fputs@plt+0x2dec>
   15404:	ldr	r1, [pc, #148]	; 154a0 <fputs@plt+0x2e70>
   15408:	mov	r2, r9
   1540c:	mov	r3, r6
   15410:	mov	r0, #1
   15414:	add	r1, pc, r1
   15418:	bl	1236c <errx@plt>
   1541c:	mov	r3, r4
   15420:	mov	r2, r5
   15424:	mov	r0, r6
   15428:	mov	r1, sp
   1542c:	bl	12618 <__strtoull_internal@plt>
   15430:	ldr	r3, [r7]
   15434:	cmp	r3, r4
   15438:	bne	15474 <fputs@plt+0x2e44>
   1543c:	ldr	r3, [sp]
   15440:	cmp	r6, r3
   15444:	beq	15404 <fputs@plt+0x2dd4>
   15448:	cmp	r3, r4
   1544c:	beq	1545c <fputs@plt+0x2e2c>
   15450:	ldrsb	r3, [r3]
   15454:	cmp	r3, r4
   15458:	bne	15404 <fputs@plt+0x2dd4>
   1545c:	ldr	r2, [sp, #4]
   15460:	ldr	r3, [r8]
   15464:	cmp	r2, r3
   15468:	bne	15494 <fputs@plt+0x2e64>
   1546c:	add	sp, sp, #12
   15470:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15474:	cmp	r3, #34	; 0x22
   15478:	bne	15404 <fputs@plt+0x2dd4>
   1547c:	ldr	r1, [pc, #32]	; 154a4 <fputs@plt+0x2e74>
   15480:	mov	r2, r9
   15484:	mov	r3, r6
   15488:	mov	r0, #1
   1548c:	add	r1, pc, r1
   15490:	bl	12060 <err@plt>
   15494:	bl	12444 <__stack_chk_fail@plt>
   15498:	andeq	r6, r1, r8, lsr ip
   1549c:	andeq	r0, r0, r8, lsr #4
   154a0:	andeq	r5, r0, r0, ror #25
   154a4:	andeq	r5, r0, r8, ror #24
   154a8:	ldr	r3, [pc, #596]	; 15704 <fputs@plt+0x30d4>
   154ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154b0:	add	r3, pc, r3
   154b4:	subs	r6, r0, #0
   154b8:	ldr	r0, [pc, #584]	; 15708 <fputs@plt+0x30d8>
   154bc:	mov	r8, r1
   154c0:	mov	r1, r3
   154c4:	sub	sp, sp, #20
   154c8:	mov	r9, r2
   154cc:	ldr	sl, [r1, r0]
   154d0:	mov	r2, #0
   154d4:	mov	r3, #0
   154d8:	ldr	r1, [sl]
   154dc:	strd	r2, [r8]
   154e0:	str	r1, [sp, #12]
   154e4:	beq	155cc <fputs@plt+0x2f9c>
   154e8:	ldrb	r5, [r6]
   154ec:	cmp	r5, #0
   154f0:	beq	155cc <fputs@plt+0x2f9c>
   154f4:	str	r6, [sp, #8]
   154f8:	bl	12408 <__ctype_b_loc@plt>
   154fc:	mov	r3, r6
   15500:	ldr	r1, [r0]
   15504:	b	15518 <fputs@plt+0x2ee8>
   15508:	add	r2, r3, #1
   1550c:	str	r2, [sp, #8]
   15510:	ldrb	r5, [r3, #1]
   15514:	mov	r3, r2
   15518:	lsl	r2, r5, #1
   1551c:	ldrh	r4, [r1, r2]
   15520:	and	r4, r4, #8192	; 0x2000
   15524:	uxth	r4, r4
   15528:	cmp	r4, #0
   1552c:	bne	15508 <fputs@plt+0x2ed8>
   15530:	cmp	r5, #45	; 0x2d
   15534:	beq	155cc <fputs@plt+0x2f9c>
   15538:	add	r5, sp, #16
   1553c:	str	r4, [r5, #-8]!
   15540:	bl	1260c <__errno_location@plt>
   15544:	mov	r2, r4
   15548:	mov	r1, r5
   1554c:	mov	r3, r4
   15550:	mov	r7, r0
   15554:	mov	r0, r6
   15558:	str	r4, [r7]
   1555c:	bl	12618 <__strtoull_internal@plt>
   15560:	mov	r5, r1
   15564:	ldr	r1, [sp, #8]
   15568:	mov	r4, r0
   1556c:	cmp	r1, r6
   15570:	beq	155cc <fputs@plt+0x2f9c>
   15574:	ldr	r3, [r7]
   15578:	cmp	r3, #0
   1557c:	bne	155b0 <fputs@plt+0x2f80>
   15580:	cmp	r1, #0
   15584:	beq	156b4 <fputs@plt+0x3084>
   15588:	ldrb	r0, [r1]
   1558c:	cmp	r0, #0
   15590:	bne	155d4 <fputs@plt+0x2fa4>
   15594:	strd	r4, [r8]
   15598:	ldr	r2, [sp, #12]
   1559c:	ldr	r3, [sl]
   155a0:	cmp	r2, r3
   155a4:	bne	15700 <fputs@plt+0x30d0>
   155a8:	add	sp, sp, #20
   155ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155b0:	subs	r2, r4, #1
   155b4:	mvn	r6, #2
   155b8:	sbc	r3, r5, #0
   155bc:	mvn	r7, #0
   155c0:	cmp	r3, r7
   155c4:	cmpeq	r2, r6
   155c8:	bls	15580 <fputs@plt+0x2f50>
   155cc:	mvn	r0, #0
   155d0:	b	15598 <fputs@plt+0x2f68>
   155d4:	ldrb	r2, [r1, #1]
   155d8:	sxtb	r3, r2
   155dc:	cmp	r3, #105	; 0x69
   155e0:	beq	156bc <fputs@plt+0x308c>
   155e4:	cmp	r3, #66	; 0x42
   155e8:	beq	15698 <fputs@plt+0x3068>
   155ec:	cmp	r2, #0
   155f0:	bne	155cc <fputs@plt+0x2f9c>
   155f4:	mov	r6, #1024	; 0x400
   155f8:	ldr	r7, [pc, #268]	; 1570c <fputs@plt+0x30dc>
   155fc:	sxtb	r3, r0
   15600:	str	r3, [sp, #4]
   15604:	add	r7, pc, r7
   15608:	mov	r1, r3
   1560c:	mov	r0, r7
   15610:	bl	12114 <strchr@plt>
   15614:	ldr	r3, [sp, #4]
   15618:	cmp	r0, #0
   1561c:	rsbne	fp, r7, r0
   15620:	addne	fp, fp, #1
   15624:	beq	156d8 <fputs@plt+0x30a8>
   15628:	cmp	fp, #0
   1562c:	beq	15688 <fputs@plt+0x3058>
   15630:	asr	r7, r6, #31
   15634:	mvn	r0, #0
   15638:	mvn	r1, #0
   1563c:	mov	r2, r6
   15640:	mov	r3, r7
   15644:	bl	191e0 <fputs@plt+0x6bb0>
   15648:	cmp	r1, r5
   1564c:	cmpeq	r0, r4
   15650:	bcc	156ac <fputs@plt+0x307c>
   15654:	sub	ip, fp, #1
   15658:	mov	r3, #0
   1565c:	b	15670 <fputs@plt+0x3040>
   15660:	cmp	r1, r5
   15664:	cmpeq	r0, r4
   15668:	add	r3, r3, #1
   1566c:	bcc	156ac <fputs@plt+0x307c>
   15670:	mul	r2, r4, r7
   15674:	cmp	r3, ip
   15678:	mla	r2, r6, r5, r2
   1567c:	umull	r4, r5, r4, r6
   15680:	add	r5, r2, r5
   15684:	bne	15660 <fputs@plt+0x3030>
   15688:	mov	r0, #0
   1568c:	cmp	r9, #0
   15690:	strne	fp, [r9]
   15694:	b	15594 <fputs@plt+0x2f64>
   15698:	ldrsb	r3, [r1, #2]
   1569c:	cmp	r3, #0
   156a0:	bne	155cc <fputs@plt+0x2f9c>
   156a4:	mov	r6, #1000	; 0x3e8
   156a8:	b	155f8 <fputs@plt+0x2fc8>
   156ac:	mvn	r0, #1
   156b0:	b	1568c <fputs@plt+0x305c>
   156b4:	mov	r0, r1
   156b8:	b	15594 <fputs@plt+0x2f64>
   156bc:	ldrsb	r3, [r1, #2]
   156c0:	cmp	r3, #66	; 0x42
   156c4:	bne	155cc <fputs@plt+0x2f9c>
   156c8:	ldrsb	r3, [r1, #3]
   156cc:	cmp	r3, #0
   156d0:	beq	155f4 <fputs@plt+0x2fc4>
   156d4:	b	155cc <fputs@plt+0x2f9c>
   156d8:	ldr	r7, [pc, #48]	; 15710 <fputs@plt+0x30e0>
   156dc:	mov	r1, r3
   156e0:	add	r7, pc, r7
   156e4:	mov	r0, r7
   156e8:	bl	12114 <strchr@plt>
   156ec:	cmp	r0, #0
   156f0:	beq	155cc <fputs@plt+0x2f9c>
   156f4:	rsb	r7, r7, r0
   156f8:	add	fp, r7, #1
   156fc:	b	15628 <fputs@plt+0x2ff8>
   15700:	bl	12444 <__stack_chk_fail@plt>
   15704:	andeq	r6, r1, r8, asr #22
   15708:	andeq	r0, r0, r8, lsr #4
   1570c:	strdeq	r5, [r0], -ip
   15710:	andeq	r5, r0, ip, lsr #20
   15714:	mov	r2, #0
   15718:	b	154a8 <fputs@plt+0x2e78>
   1571c:	push	{r4, r5, r6, lr}
   15720:	subs	r6, r0, #0
   15724:	beq	157a8 <fputs@plt+0x3178>
   15728:	ldrb	r4, [r6]
   1572c:	cmp	r4, #0
   15730:	beq	157b0 <fputs@plt+0x3180>
   15734:	bl	12408 <__ctype_b_loc@plt>
   15738:	mov	r3, r6
   1573c:	ldr	r5, [r0]
   15740:	b	1575c <fputs@plt+0x312c>
   15744:	cmn	r3, #1
   15748:	beq	15798 <fputs@plt+0x3168>
   1574c:	ldrb	r4, [r3, #1]
   15750:	mov	r3, r1
   15754:	cmp	r4, #0
   15758:	beq	157a0 <fputs@plt+0x3170>
   1575c:	lsl	r4, r4, #1
   15760:	mov	ip, r3
   15764:	add	r1, r3, #1
   15768:	ldrh	r2, [r5, r4]
   1576c:	tst	r2, #2048	; 0x800
   15770:	bne	15744 <fputs@plt+0x3114>
   15774:	cmp	ip, #0
   15778:	cmpne	ip, r6
   1577c:	movls	r0, #0
   15780:	movhi	r0, #1
   15784:	popls	{r4, r5, r6, pc}
   15788:	ldrsb	r0, [ip]
   1578c:	rsbs	r0, r0, #1
   15790:	movcc	r0, #0
   15794:	pop	{r4, r5, r6, pc}
   15798:	mov	r0, #0
   1579c:	pop	{r4, r5, r6, pc}
   157a0:	mov	ip, r1
   157a4:	b	15774 <fputs@plt+0x3144>
   157a8:	mov	r0, r6
   157ac:	pop	{r4, r5, r6, pc}
   157b0:	mov	r0, r4
   157b4:	pop	{r4, r5, r6, pc}
   157b8:	cmp	r1, #0
   157bc:	push	{r4, r5}
   157c0:	sub	r4, r1, #1
   157c4:	beq	15830 <fputs@plt+0x3200>
   157c8:	ldrb	r1, [r0]
   157cc:	cmp	r1, #0
   157d0:	beq	15830 <fputs@plt+0x3200>
   157d4:	sxtb	r1, r1
   157d8:	sxtb	r2, r2
   157dc:	cmp	r1, r2
   157e0:	beq	1581c <fputs@plt+0x31ec>
   157e4:	add	r1, r0, #1
   157e8:	mov	r3, #0
   157ec:	b	15808 <fputs@plt+0x31d8>
   157f0:	ldrb	r0, [r1], #1
   157f4:	cmp	r0, #0
   157f8:	sxtb	ip, r0
   157fc:	beq	1581c <fputs@plt+0x31ec>
   15800:	cmp	ip, r2
   15804:	beq	15824 <fputs@plt+0x31f4>
   15808:	cmp	r3, r4
   1580c:	mov	r5, r1
   15810:	add	r3, r3, #1
   15814:	bne	157f0 <fputs@plt+0x31c0>
   15818:	mov	r0, #0
   1581c:	pop	{r4, r5}
   15820:	bx	lr
   15824:	mov	r0, r5
   15828:	pop	{r4, r5}
   1582c:	bx	lr
   15830:	mov	r0, r1
   15834:	b	1581c <fputs@plt+0x31ec>
   15838:	ldr	r3, [pc, #228]	; 15924 <fputs@plt+0x32f4>
   1583c:	ldr	r2, [pc, #228]	; 15928 <fputs@plt+0x32f8>
   15840:	add	r3, pc, r3
   15844:	push	{r4, r6, r7, r8, r9, lr}
   15848:	subs	r6, r0, #0
   1584c:	ldr	r7, [r3, r2]
   15850:	mov	r0, r3
   15854:	sub	sp, sp, #8
   15858:	mov	r4, #0
   1585c:	mov	r8, r1
   15860:	ldr	r3, [r7]
   15864:	str	r4, [sp]
   15868:	str	r3, [sp, #4]
   1586c:	beq	1587c <fputs@plt+0x324c>
   15870:	ldrsb	r3, [r6]
   15874:	cmp	r3, r4
   15878:	bne	158a4 <fputs@plt+0x3274>
   1587c:	bl	1260c <__errno_location@plt>
   15880:	ldr	r3, [r0]
   15884:	cmp	r3, #0
   15888:	bne	158d0 <fputs@plt+0x32a0>
   1588c:	ldr	r1, [pc, #152]	; 1592c <fputs@plt+0x32fc>
   15890:	mov	r2, r8
   15894:	mov	r3, r6
   15898:	mov	r0, #1
   1589c:	add	r1, pc, r1
   158a0:	bl	1236c <errx@plt>
   158a4:	bl	1260c <__errno_location@plt>
   158a8:	mov	r3, r4
   158ac:	mov	r1, sp
   158b0:	mov	r2, #10
   158b4:	mov	r9, r0
   158b8:	str	r4, [r0]
   158bc:	mov	r0, r6
   158c0:	bl	121b0 <__strtoll_internal@plt>
   158c4:	ldr	r3, [r9]
   158c8:	cmp	r3, r4
   158cc:	beq	158e8 <fputs@plt+0x32b8>
   158d0:	ldr	r1, [pc, #88]	; 15930 <fputs@plt+0x3300>
   158d4:	mov	r2, r8
   158d8:	mov	r3, r6
   158dc:	mov	r0, #1
   158e0:	add	r1, pc, r1
   158e4:	bl	12060 <err@plt>
   158e8:	ldr	r3, [sp]
   158ec:	cmp	r6, r3
   158f0:	beq	1588c <fputs@plt+0x325c>
   158f4:	cmp	r3, #0
   158f8:	beq	15908 <fputs@plt+0x32d8>
   158fc:	ldrsb	r3, [r3]
   15900:	cmp	r3, #0
   15904:	bne	1588c <fputs@plt+0x325c>
   15908:	ldr	r2, [sp, #4]
   1590c:	ldr	r3, [r7]
   15910:	cmp	r2, r3
   15914:	bne	15920 <fputs@plt+0x32f0>
   15918:	add	sp, sp, #8
   1591c:	pop	{r4, r6, r7, r8, r9, pc}
   15920:	bl	12444 <__stack_chk_fail@plt>
   15924:			; <UNDEFINED> instruction: 0x000167b8
   15928:	andeq	r0, r0, r8, lsr #4
   1592c:	andeq	r5, r0, r8, asr r8
   15930:	andeq	r5, r0, r4, lsl r8
   15934:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15938:	mov	r8, r0
   1593c:	mov	r9, r1
   15940:	bl	15838 <fputs@plt+0x3208>
   15944:	mvn	r4, #0
   15948:	mov	r5, #0
   1594c:	adds	r6, r0, #-2147483648	; 0x80000000
   15950:	adc	r7, r1, #0
   15954:	cmp	r7, r5
   15958:	cmpeq	r6, r4
   1595c:	popls	{r3, r4, r5, r6, r7, r8, r9, pc}
   15960:	ldr	r1, [pc, #16]	; 15978 <fputs@plt+0x3348>
   15964:	mov	r2, r9
   15968:	mov	r3, r8
   1596c:	mov	r0, #1
   15970:	add	r1, pc, r1
   15974:	bl	1236c <errx@plt>
   15978:	andeq	r5, r0, r4, lsl #15
   1597c:	push	{r3, r4, r5, lr}
   15980:	mov	r4, r0
   15984:	mov	r5, r1
   15988:	bl	15934 <fputs@plt+0x3304>
   1598c:	add	ip, r0, #32768	; 0x8000
   15990:	cmp	ip, #65536	; 0x10000
   15994:	bcs	159a0 <fputs@plt+0x3370>
   15998:	sxth	r0, r0
   1599c:	pop	{r3, r4, r5, pc}
   159a0:	ldr	r1, [pc, #16]	; 159b8 <fputs@plt+0x3388>
   159a4:	mov	r2, r5
   159a8:	mov	r3, r4
   159ac:	mov	r0, #1
   159b0:	add	r1, pc, r1
   159b4:	bl	1236c <errx@plt>
   159b8:	andeq	r5, r0, r4, asr #14
   159bc:	mov	r2, #10
   159c0:	b	153b0 <fputs@plt+0x2d80>
   159c4:	push	{r3, r4, r5, r6, r7, lr}
   159c8:	mov	r6, r0
   159cc:	mov	r7, r1
   159d0:	bl	159bc <fputs@plt+0x338c>
   159d4:	mvn	r4, #0
   159d8:	mov	r5, #0
   159dc:	cmp	r1, r5
   159e0:	cmpeq	r0, r4
   159e4:	popls	{r3, r4, r5, r6, r7, pc}
   159e8:	ldr	r1, [pc, #16]	; 15a00 <fputs@plt+0x33d0>
   159ec:	mov	r2, r7
   159f0:	mov	r3, r6
   159f4:	mov	r0, #1
   159f8:	add	r1, pc, r1
   159fc:	bl	1236c <errx@plt>
   15a00:	strdeq	r5, [r0], -ip
   15a04:	push	{r3, r4, r5, lr}
   15a08:	mov	r4, r0
   15a0c:	mov	r5, r1
   15a10:	bl	159c4 <fputs@plt+0x3394>
   15a14:	cmp	r0, #65536	; 0x10000
   15a18:	bcs	15a24 <fputs@plt+0x33f4>
   15a1c:	uxth	r0, r0
   15a20:	pop	{r3, r4, r5, pc}
   15a24:	ldr	r1, [pc, #16]	; 15a3c <fputs@plt+0x340c>
   15a28:	mov	r2, r5
   15a2c:	mov	r3, r4
   15a30:	mov	r0, #1
   15a34:	add	r1, pc, r1
   15a38:	bl	1236c <errx@plt>
   15a3c:	andeq	r5, r0, r0, asr #13
   15a40:	mov	r2, #16
   15a44:	b	153b0 <fputs@plt+0x2d80>
   15a48:	ldr	r3, [pc, #216]	; 15b28 <fputs@plt+0x34f8>
   15a4c:	push	{r4, r5, r6, r7, r8, lr}
   15a50:	subs	r4, r0, #0
   15a54:	ldr	r0, [pc, #208]	; 15b2c <fputs@plt+0x34fc>
   15a58:	add	r3, pc, r3
   15a5c:	sub	sp, sp, #8
   15a60:	mov	r5, #0
   15a64:	mov	r7, r1
   15a68:	ldr	r6, [r3, r0]
   15a6c:	str	r5, [sp]
   15a70:	ldr	r3, [r6]
   15a74:	str	r3, [sp, #4]
   15a78:	beq	15a88 <fputs@plt+0x3458>
   15a7c:	ldrsb	r3, [r4]
   15a80:	cmp	r3, r5
   15a84:	bne	15ab0 <fputs@plt+0x3480>
   15a88:	bl	1260c <__errno_location@plt>
   15a8c:	ldr	r3, [r0]
   15a90:	cmp	r3, #0
   15a94:	bne	15ad4 <fputs@plt+0x34a4>
   15a98:	ldr	r1, [pc, #144]	; 15b30 <fputs@plt+0x3500>
   15a9c:	mov	r2, r7
   15aa0:	mov	r3, r4
   15aa4:	mov	r0, #1
   15aa8:	add	r1, pc, r1
   15aac:	bl	1236c <errx@plt>
   15ab0:	bl	1260c <__errno_location@plt>
   15ab4:	mov	r1, sp
   15ab8:	mov	r8, r0
   15abc:	str	r5, [r0]
   15ac0:	mov	r0, r4
   15ac4:	bl	12108 <strtod@plt>
   15ac8:	ldr	r3, [r8]
   15acc:	cmp	r3, r5
   15ad0:	beq	15aec <fputs@plt+0x34bc>
   15ad4:	ldr	r1, [pc, #88]	; 15b34 <fputs@plt+0x3504>
   15ad8:	mov	r2, r7
   15adc:	mov	r3, r4
   15ae0:	mov	r0, #1
   15ae4:	add	r1, pc, r1
   15ae8:	bl	12060 <err@plt>
   15aec:	ldr	r3, [sp]
   15af0:	cmp	r4, r3
   15af4:	beq	15a98 <fputs@plt+0x3468>
   15af8:	cmp	r3, #0
   15afc:	beq	15b0c <fputs@plt+0x34dc>
   15b00:	ldrsb	r3, [r3]
   15b04:	cmp	r3, #0
   15b08:	bne	15a98 <fputs@plt+0x3468>
   15b0c:	ldr	r2, [sp, #4]
   15b10:	ldr	r3, [r6]
   15b14:	cmp	r2, r3
   15b18:	bne	15b24 <fputs@plt+0x34f4>
   15b1c:	add	sp, sp, #8
   15b20:	pop	{r4, r5, r6, r7, r8, pc}
   15b24:	bl	12444 <__stack_chk_fail@plt>
   15b28:	andeq	r6, r1, r0, lsr #11
   15b2c:	andeq	r0, r0, r8, lsr #4
   15b30:	andeq	r5, r0, ip, asr #12
   15b34:	andeq	r5, r0, r0, lsl r6
   15b38:	ldr	r3, [pc, #220]	; 15c1c <fputs@plt+0x35ec>
   15b3c:	push	{r4, r5, r6, r7, r8, lr}
   15b40:	subs	r4, r0, #0
   15b44:	ldr	r0, [pc, #212]	; 15c20 <fputs@plt+0x35f0>
   15b48:	add	r3, pc, r3
   15b4c:	sub	sp, sp, #8
   15b50:	mov	r5, #0
   15b54:	mov	r7, r1
   15b58:	ldr	r6, [r3, r0]
   15b5c:	str	r5, [sp]
   15b60:	ldr	r3, [r6]
   15b64:	str	r3, [sp, #4]
   15b68:	beq	15b78 <fputs@plt+0x3548>
   15b6c:	ldrsb	r3, [r4]
   15b70:	cmp	r3, r5
   15b74:	bne	15ba0 <fputs@plt+0x3570>
   15b78:	bl	1260c <__errno_location@plt>
   15b7c:	ldr	r3, [r0]
   15b80:	cmp	r3, #0
   15b84:	bne	15bc8 <fputs@plt+0x3598>
   15b88:	ldr	r1, [pc, #148]	; 15c24 <fputs@plt+0x35f4>
   15b8c:	mov	r2, r7
   15b90:	mov	r3, r4
   15b94:	mov	r0, #1
   15b98:	add	r1, pc, r1
   15b9c:	bl	1236c <errx@plt>
   15ba0:	bl	1260c <__errno_location@plt>
   15ba4:	mov	r1, sp
   15ba8:	mov	r2, #10
   15bac:	mov	r8, r0
   15bb0:	str	r5, [r0]
   15bb4:	mov	r0, r4
   15bb8:	bl	1233c <strtol@plt>
   15bbc:	ldr	r3, [r8]
   15bc0:	cmp	r3, r5
   15bc4:	beq	15be0 <fputs@plt+0x35b0>
   15bc8:	ldr	r1, [pc, #88]	; 15c28 <fputs@plt+0x35f8>
   15bcc:	mov	r2, r7
   15bd0:	mov	r3, r4
   15bd4:	mov	r0, #1
   15bd8:	add	r1, pc, r1
   15bdc:	bl	12060 <err@plt>
   15be0:	ldr	r3, [sp]
   15be4:	cmp	r4, r3
   15be8:	beq	15b88 <fputs@plt+0x3558>
   15bec:	cmp	r3, #0
   15bf0:	beq	15c00 <fputs@plt+0x35d0>
   15bf4:	ldrsb	r3, [r3]
   15bf8:	cmp	r3, #0
   15bfc:	bne	15b88 <fputs@plt+0x3558>
   15c00:	ldr	r2, [sp, #4]
   15c04:	ldr	r3, [r6]
   15c08:	cmp	r2, r3
   15c0c:	bne	15c18 <fputs@plt+0x35e8>
   15c10:	add	sp, sp, #8
   15c14:	pop	{r4, r5, r6, r7, r8, pc}
   15c18:	bl	12444 <__stack_chk_fail@plt>
   15c1c:			; <UNDEFINED> instruction: 0x000164b0
   15c20:	andeq	r0, r0, r8, lsr #4
   15c24:	andeq	r5, r0, ip, asr r5
   15c28:	andeq	r5, r0, ip, lsl r5
   15c2c:	ldr	r3, [pc, #220]	; 15d10 <fputs@plt+0x36e0>
   15c30:	push	{r4, r5, r6, r7, r8, lr}
   15c34:	subs	r4, r0, #0
   15c38:	ldr	r0, [pc, #212]	; 15d14 <fputs@plt+0x36e4>
   15c3c:	add	r3, pc, r3
   15c40:	sub	sp, sp, #8
   15c44:	mov	r5, #0
   15c48:	mov	r7, r1
   15c4c:	ldr	r6, [r3, r0]
   15c50:	str	r5, [sp]
   15c54:	ldr	r3, [r6]
   15c58:	str	r3, [sp, #4]
   15c5c:	beq	15c6c <fputs@plt+0x363c>
   15c60:	ldrsb	r3, [r4]
   15c64:	cmp	r3, r5
   15c68:	bne	15c94 <fputs@plt+0x3664>
   15c6c:	bl	1260c <__errno_location@plt>
   15c70:	ldr	r3, [r0]
   15c74:	cmp	r3, #0
   15c78:	bne	15cbc <fputs@plt+0x368c>
   15c7c:	ldr	r1, [pc, #148]	; 15d18 <fputs@plt+0x36e8>
   15c80:	mov	r2, r7
   15c84:	mov	r3, r4
   15c88:	mov	r0, #1
   15c8c:	add	r1, pc, r1
   15c90:	bl	1236c <errx@plt>
   15c94:	bl	1260c <__errno_location@plt>
   15c98:	mov	r1, sp
   15c9c:	mov	r2, #10
   15ca0:	mov	r8, r0
   15ca4:	str	r5, [r0]
   15ca8:	mov	r0, r4
   15cac:	bl	122b8 <strtoul@plt>
   15cb0:	ldr	r3, [r8]
   15cb4:	cmp	r3, r5
   15cb8:	beq	15cd4 <fputs@plt+0x36a4>
   15cbc:	ldr	r1, [pc, #88]	; 15d1c <fputs@plt+0x36ec>
   15cc0:	mov	r2, r7
   15cc4:	mov	r3, r4
   15cc8:	mov	r0, #1
   15ccc:	add	r1, pc, r1
   15cd0:	bl	12060 <err@plt>
   15cd4:	ldr	r3, [sp]
   15cd8:	cmp	r4, r3
   15cdc:	beq	15c7c <fputs@plt+0x364c>
   15ce0:	cmp	r3, #0
   15ce4:	beq	15cf4 <fputs@plt+0x36c4>
   15ce8:	ldrsb	r3, [r3]
   15cec:	cmp	r3, #0
   15cf0:	bne	15c7c <fputs@plt+0x364c>
   15cf4:	ldr	r2, [sp, #4]
   15cf8:	ldr	r3, [r6]
   15cfc:	cmp	r2, r3
   15d00:	bne	15d0c <fputs@plt+0x36dc>
   15d04:	add	sp, sp, #8
   15d08:	pop	{r4, r5, r6, r7, r8, pc}
   15d0c:	bl	12444 <__stack_chk_fail@plt>
   15d10:			; <UNDEFINED> instruction: 0x000163bc
   15d14:	andeq	r0, r0, r8, lsr #4
   15d18:	andeq	r5, r0, r8, ror #8
   15d1c:	andeq	r5, r0, r8, lsr #8
   15d20:	ldr	ip, [pc, #132]	; 15dac <fputs@plt+0x377c>
   15d24:	push	{r4, r5, r6, lr}
   15d28:	add	ip, pc, ip
   15d2c:	ldr	lr, [pc, #124]	; 15db0 <fputs@plt+0x3780>
   15d30:	sub	sp, sp, #16
   15d34:	mov	r6, r1
   15d38:	mov	r5, r0
   15d3c:	mov	r1, sp
   15d40:	ldr	r4, [ip, lr]
   15d44:	ldr	ip, [r4]
   15d48:	str	ip, [sp, #12]
   15d4c:	bl	15714 <fputs@plt+0x30e4>
   15d50:	cmp	r0, #0
   15d54:	bne	15d74 <fputs@plt+0x3744>
   15d58:	ldr	r2, [sp, #12]
   15d5c:	ldr	r3, [r4]
   15d60:	ldrd	r0, [sp]
   15d64:	cmp	r2, r3
   15d68:	bne	15da8 <fputs@plt+0x3778>
   15d6c:	add	sp, sp, #16
   15d70:	pop	{r4, r5, r6, pc}
   15d74:	bl	1260c <__errno_location@plt>
   15d78:	mov	r2, r6
   15d7c:	ldr	r3, [r0]
   15d80:	mov	r0, #1
   15d84:	cmp	r3, #0
   15d88:	mov	r3, r5
   15d8c:	beq	15d9c <fputs@plt+0x376c>
   15d90:	ldr	r1, [pc, #28]	; 15db4 <fputs@plt+0x3784>
   15d94:	add	r1, pc, r1
   15d98:	bl	12060 <err@plt>
   15d9c:	ldr	r1, [pc, #20]	; 15db8 <fputs@plt+0x3788>
   15da0:	add	r1, pc, r1
   15da4:	bl	1236c <errx@plt>
   15da8:	bl	12444 <__stack_chk_fail@plt>
   15dac:	ldrdeq	r6, [r1], -r0
   15db0:	andeq	r0, r0, r8, lsr #4
   15db4:	andeq	r5, r0, r0, ror #6
   15db8:	andeq	r5, r0, r4, asr r3
   15dbc:	push	{r4, lr}
   15dc0:	mov	r4, r1
   15dc4:	mov	r1, r2
   15dc8:	bl	15a48 <fputs@plt+0x3418>
   15dcc:	vldr	d7, [pc, #28]	; 15df0 <fputs@plt+0x37c0>
   15dd0:	vcvt.s32.f64	s11, d0
   15dd4:	vcvt.f64.s32	d6, s11
   15dd8:	vstr	s11, [r4]
   15ddc:	vsub.f64	d0, d0, d6
   15de0:	vmul.f64	d0, d0, d7
   15de4:	vcvt.s32.f64	s0, d0
   15de8:	vstr	s0, [r4, #4]
   15dec:	pop	{r4, pc}
   15df0:	andeq	r0, r0, r0
   15df4:	smlawbmi	lr, r0, r4, r8
   15df8:	and	r3, r0, #61440	; 0xf000
   15dfc:	cmp	r3, #16384	; 0x4000
   15e00:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   15e04:	moveq	r3, #100	; 0x64
   15e08:	beq	15e80 <fputs@plt+0x3850>
   15e0c:	cmp	r3, #40960	; 0xa000
   15e10:	moveq	r3, #108	; 0x6c
   15e14:	beq	15e80 <fputs@plt+0x3850>
   15e18:	cmp	r3, #8192	; 0x2000
   15e1c:	moveq	r3, #99	; 0x63
   15e20:	beq	15e80 <fputs@plt+0x3850>
   15e24:	cmp	r3, #24576	; 0x6000
   15e28:	moveq	r3, #98	; 0x62
   15e2c:	beq	15e80 <fputs@plt+0x3850>
   15e30:	cmp	r3, #49152	; 0xc000
   15e34:	moveq	r3, #115	; 0x73
   15e38:	beq	15e80 <fputs@plt+0x3850>
   15e3c:	cmp	r3, #4096	; 0x1000
   15e40:	moveq	r3, #112	; 0x70
   15e44:	beq	15e80 <fputs@plt+0x3850>
   15e48:	cmp	r3, #32768	; 0x8000
   15e4c:	beq	15e7c <fputs@plt+0x384c>
   15e50:	mov	r4, #9
   15e54:	mov	r3, #8
   15e58:	mov	r6, #7
   15e5c:	mov	r7, #6
   15e60:	mov	r2, #5
   15e64:	mov	r8, #4
   15e68:	mov	r9, #3
   15e6c:	mov	ip, #2
   15e70:	mov	sl, #1
   15e74:	mov	fp, #0
   15e78:	b	15eac <fputs@plt+0x387c>
   15e7c:	mov	r3, #45	; 0x2d
   15e80:	strb	r3, [r1]
   15e84:	mov	r4, #10
   15e88:	mov	r3, #9
   15e8c:	mov	r6, #8
   15e90:	mov	r7, #7
   15e94:	mov	r2, #6
   15e98:	mov	r8, #5
   15e9c:	mov	r9, #4
   15ea0:	mov	ip, #3
   15ea4:	mov	sl, #2
   15ea8:	mov	fp, #1
   15eac:	tst	r0, #256	; 0x100
   15eb0:	add	ip, r1, ip
   15eb4:	moveq	r5, #45	; 0x2d
   15eb8:	movne	r5, #114	; 0x72
   15ebc:	tst	r0, #128	; 0x80
   15ec0:	strb	r5, [r1, fp]
   15ec4:	moveq	r5, #45	; 0x2d
   15ec8:	movne	r5, #119	; 0x77
   15ecc:	tst	r0, #2048	; 0x800
   15ed0:	strb	r5, [r1, sl]
   15ed4:	beq	15f70 <fputs@plt+0x3940>
   15ed8:	tst	r0, #64	; 0x40
   15edc:	moveq	r5, #83	; 0x53
   15ee0:	movne	r5, #115	; 0x73
   15ee4:	tst	r0, #32
   15ee8:	strb	r5, [ip]
   15eec:	add	r2, r1, r2
   15ef0:	moveq	ip, #45	; 0x2d
   15ef4:	movne	ip, #114	; 0x72
   15ef8:	tst	r0, #16
   15efc:	strb	ip, [r1, r9]
   15f00:	moveq	ip, #45	; 0x2d
   15f04:	movne	ip, #119	; 0x77
   15f08:	tst	r0, #1024	; 0x400
   15f0c:	strb	ip, [r1, r8]
   15f10:	beq	15f90 <fputs@plt+0x3960>
   15f14:	tst	r0, #8
   15f18:	moveq	ip, #83	; 0x53
   15f1c:	movne	ip, #115	; 0x73
   15f20:	tst	r0, #4
   15f24:	strb	ip, [r2]
   15f28:	add	r3, r1, r3
   15f2c:	moveq	r2, #45	; 0x2d
   15f30:	movne	r2, #114	; 0x72
   15f34:	tst	r0, #2
   15f38:	strb	r2, [r1, r7]
   15f3c:	moveq	r2, #45	; 0x2d
   15f40:	movne	r2, #119	; 0x77
   15f44:	tst	r0, #512	; 0x200
   15f48:	strb	r2, [r1, r6]
   15f4c:	beq	15f80 <fputs@plt+0x3950>
   15f50:	tst	r0, #1
   15f54:	moveq	r2, #84	; 0x54
   15f58:	movne	r2, #116	; 0x74
   15f5c:	strb	r2, [r3]
   15f60:	mov	r3, #0
   15f64:	strb	r3, [r1, r4]
   15f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   15f6c:	bx	lr
   15f70:	tst	r0, #64	; 0x40
   15f74:	moveq	r5, #45	; 0x2d
   15f78:	movne	r5, #120	; 0x78
   15f7c:	b	15ee4 <fputs@plt+0x38b4>
   15f80:	tst	r0, #1
   15f84:	moveq	r2, #45	; 0x2d
   15f88:	movne	r2, #120	; 0x78
   15f8c:	b	15f5c <fputs@plt+0x392c>
   15f90:	tst	r0, #8
   15f94:	moveq	ip, #45	; 0x2d
   15f98:	movne	ip, #120	; 0x78
   15f9c:	b	15f20 <fputs@plt+0x38f0>
   15fa0:	ldr	r1, [pc, #580]	; 161ec <fputs@plt+0x3bbc>
   15fa4:	tst	r0, #2
   15fa8:	ldr	ip, [pc, #576]	; 161f0 <fputs@plt+0x3bc0>
   15fac:	add	r1, pc, r1
   15fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fb4:	sub	sp, sp, #100	; 0x64
   15fb8:	ldr	r6, [r1, ip]
   15fbc:	addeq	r7, sp, #52	; 0x34
   15fc0:	addne	lr, sp, #53	; 0x35
   15fc4:	addne	r7, sp, #52	; 0x34
   15fc8:	moveq	lr, r7
   15fcc:	mov	ip, #10
   15fd0:	ldr	r1, [r6]
   15fd4:	str	r1, [sp, #92]	; 0x5c
   15fd8:	movne	r1, #32
   15fdc:	strbne	r1, [sp, #52]	; 0x34
   15fe0:	mov	r1, #1
   15fe4:	sub	r9, ip, #32
   15fe8:	rsb	r8, ip, #32
   15fec:	lsl	r5, r1, r9
   15ff0:	lsl	r4, r1, ip
   15ff4:	orr	r5, r5, r1, lsr r8
   15ff8:	cmp	r3, r5
   15ffc:	cmpeq	r2, r4
   16000:	bcc	1616c <fputs@plt+0x3b3c>
   16004:	add	ip, ip, #10
   16008:	cmp	ip, #70	; 0x46
   1600c:	bne	15fe4 <fputs@plt+0x39b4>
   16010:	mov	r1, #60	; 0x3c
   16014:	movw	r5, #26215	; 0x6667
   16018:	movt	r5, #26214	; 0x6666
   1601c:	ldr	r8, [pc, #464]	; 161f4 <fputs@plt+0x3bc4>
   16020:	mov	fp, #1
   16024:	smull	sl, r9, r5, r1
   16028:	add	r8, pc, r8
   1602c:	str	r8, [sp, #36]	; 0x24
   16030:	sub	r8, r1, #32
   16034:	asr	r4, r1, #31
   16038:	lsl	r5, fp, r8
   1603c:	str	r4, [sp, #44]	; 0x2c
   16040:	lsl	r4, fp, r1
   16044:	subs	r4, r4, #1
   16048:	str	r9, [sp, #40]	; 0x28
   1604c:	rsb	r9, r1, #32
   16050:	ldr	sl, [sp, #40]	; 0x28
   16054:	orr	r5, r5, fp, lsr r9
   16058:	ldr	fp, [sp, #44]	; 0x2c
   1605c:	sbc	r5, r5, #0
   16060:	tst	r0, #1
   16064:	lsr	r1, r2, r1
   16068:	rsb	fp, fp, sl, asr #2
   1606c:	ldr	sl, [sp, #36]	; 0x24
   16070:	orr	r1, r1, r3, lsl r9
   16074:	and	r5, r5, r3
   16078:	orr	r8, r1, r3, lsr r8
   1607c:	and	r4, r4, r2
   16080:	ldrb	r0, [sl, fp]
   16084:	add	r3, lr, #1
   16088:	strb	r0, [lr]
   1608c:	bne	16150 <fputs@plt+0x3b20>
   16090:	orrs	fp, r4, r5
   16094:	mov	r2, #0
   16098:	strb	r2, [r3]
   1609c:	beq	16184 <fputs@plt+0x3b54>
   160a0:	sub	lr, ip, #20
   160a4:	sub	ip, ip, #52	; 0x34
   160a8:	rsb	r3, lr, #32
   160ac:	lsr	r0, r4, lr
   160b0:	orr	r0, r0, r5, lsl r3
   160b4:	lsr	r1, r5, lr
   160b8:	orr	r0, r0, r5, lsr ip
   160bc:	mov	r2, #100	; 0x64
   160c0:	adds	r0, r0, #50	; 0x32
   160c4:	mov	r3, #0
   160c8:	adc	r1, r1, #0
   160cc:	bl	191e0 <fputs@plt+0x6bb0>
   160d0:	mov	r4, r0
   160d4:	mov	r5, r1
   160d8:	cmp	r5, #0
   160dc:	cmpeq	r4, #10
   160e0:	addeq	r8, r8, #1
   160e4:	beq	16184 <fputs@plt+0x3b54>
   160e8:	orrs	r2, r4, r5
   160ec:	beq	16184 <fputs@plt+0x3b54>
   160f0:	bl	122f4 <localeconv@plt>
   160f4:	cmp	r0, #0
   160f8:	beq	161d0 <fputs@plt+0x3ba0>
   160fc:	ldr	r3, [r0]
   16100:	cmp	r3, #0
   16104:	beq	161e0 <fputs@plt+0x3bb0>
   16108:	ldrsb	r2, [r3]
   1610c:	cmp	r2, #0
   16110:	ldreq	r3, [pc, #224]	; 161f8 <fputs@plt+0x3bc8>
   16114:	addeq	r3, pc, r3
   16118:	add	r9, sp, #60	; 0x3c
   1611c:	ldr	ip, [pc, #216]	; 161fc <fputs@plt+0x3bcc>
   16120:	mov	r1, #32
   16124:	str	r3, [sp, #8]
   16128:	add	ip, pc, ip
   1612c:	str	r8, [sp, #4]
   16130:	mov	r0, r9
   16134:	strd	r4, [sp, #16]
   16138:	mov	r3, r1
   1613c:	str	r7, [sp, #24]
   16140:	mov	r2, #1
   16144:	str	ip, [sp]
   16148:	bl	1239c <__snprintf_chk@plt>
   1614c:	b	161b0 <fputs@plt+0x3b80>
   16150:	cmp	r0, #66	; 0x42
   16154:	addne	r3, lr, #3
   16158:	movne	r1, #105	; 0x69
   1615c:	movne	r2, #66	; 0x42
   16160:	strbne	r1, [lr, #1]
   16164:	strbne	r2, [lr, #2]
   16168:	b	16090 <fputs@plt+0x3a60>
   1616c:	subs	r1, ip, #10
   16170:	strbeq	r1, [lr, #1]
   16174:	moveq	r3, #66	; 0x42
   16178:	moveq	r8, r2
   1617c:	strbeq	r3, [lr]
   16180:	bne	16014 <fputs@plt+0x39e4>
   16184:	ldr	r3, [pc, #116]	; 16200 <fputs@plt+0x3bd0>
   16188:	add	r9, sp, #60	; 0x3c
   1618c:	mov	r1, #32
   16190:	str	r8, [sp, #4]
   16194:	add	r3, pc, r3
   16198:	str	r7, [sp, #8]
   1619c:	str	r3, [sp]
   161a0:	mov	r0, r9
   161a4:	mov	r3, r1
   161a8:	mov	r2, #1
   161ac:	bl	1239c <__snprintf_chk@plt>
   161b0:	mov	r0, r9
   161b4:	bl	125c4 <__strdup@plt>
   161b8:	ldr	r2, [sp, #92]	; 0x5c
   161bc:	ldr	r3, [r6]
   161c0:	cmp	r2, r3
   161c4:	bne	161dc <fputs@plt+0x3bac>
   161c8:	add	sp, sp, #100	; 0x64
   161cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161d0:	ldr	r3, [pc, #44]	; 16204 <fputs@plt+0x3bd4>
   161d4:	add	r3, pc, r3
   161d8:	b	16118 <fputs@plt+0x3ae8>
   161dc:	bl	12444 <__stack_chk_fail@plt>
   161e0:	ldr	r3, [pc, #32]	; 16208 <fputs@plt+0x3bd8>
   161e4:	add	r3, pc, r3
   161e8:	b	16118 <fputs@plt+0x3ae8>
   161ec:	andeq	r6, r1, ip, asr #32
   161f0:	andeq	r0, r0, r8, lsr #4
   161f4:	strdeq	r5, [r0], -r4
   161f8:	andeq	r5, r0, r4
   161fc:	strdeq	r4, [r0], -ip
   16200:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   16204:	andeq	r4, r0, r4, asr #30
   16208:	andeq	r4, r0, r4, lsr pc
   1620c:	cmp	r0, #0
   16210:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16214:	mov	r8, r1
   16218:	mov	sl, r2
   1621c:	mov	r9, r3
   16220:	beq	162dc <fputs@plt+0x3cac>
   16224:	ldrb	r5, [r0]
   16228:	cmp	r5, #0
   1622c:	beq	162dc <fputs@plt+0x3cac>
   16230:	cmp	r2, #0
   16234:	cmpne	r1, #0
   16238:	movne	ip, #0
   1623c:	moveq	ip, #1
   16240:	beq	162dc <fputs@plt+0x3cac>
   16244:	cmp	r3, #0
   16248:	movne	r4, r0
   1624c:	movne	r6, ip
   16250:	bne	16264 <fputs@plt+0x3c34>
   16254:	b	162dc <fputs@plt+0x3cac>
   16258:	ldrb	r5, [r4, #1]!
   1625c:	cmp	r5, #0
   16260:	beq	162d4 <fputs@plt+0x3ca4>
   16264:	cmp	sl, r6
   16268:	bls	162e4 <fputs@plt+0x3cb4>
   1626c:	cmp	ip, #0
   16270:	ldrsb	r7, [r4, #1]
   16274:	moveq	ip, r4
   16278:	cmp	r5, #44	; 0x2c
   1627c:	mov	r0, ip
   16280:	moveq	r5, r4
   16284:	movne	r5, #0
   16288:	cmp	r7, #0
   1628c:	addeq	r5, r4, #1
   16290:	cmp	r5, #0
   16294:	rsb	r1, ip, r5
   16298:	beq	162cc <fputs@plt+0x3c9c>
   1629c:	cmp	ip, r5
   162a0:	bcs	162dc <fputs@plt+0x3cac>
   162a4:	blx	r9
   162a8:	mov	ip, #0
   162ac:	add	r3, r6, #1
   162b0:	cmn	r0, #1
   162b4:	beq	162dc <fputs@plt+0x3cac>
   162b8:	str	r0, [r8, r6, lsl #2]
   162bc:	mov	r6, r3
   162c0:	ldrsb	r2, [r5]
   162c4:	cmp	r2, ip
   162c8:	beq	162ec <fputs@plt+0x3cbc>
   162cc:	cmn	r4, #1
   162d0:	bne	16258 <fputs@plt+0x3c28>
   162d4:	mov	r0, r6
   162d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   162dc:	mvn	r0, #0
   162e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   162e4:	mvn	r0, #1
   162e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   162ec:	mov	r6, r3
   162f0:	b	162d4 <fputs@plt+0x3ca4>
   162f4:	cmp	r0, #0
   162f8:	push	{r4, lr}
   162fc:	mov	r4, r3
   16300:	beq	16378 <fputs@plt+0x3d48>
   16304:	ldrb	ip, [r0]
   16308:	cmp	ip, #0
   1630c:	beq	16378 <fputs@plt+0x3d48>
   16310:	cmp	r3, #0
   16314:	beq	16378 <fputs@plt+0x3d48>
   16318:	ldr	r3, [r3]
   1631c:	cmp	r3, #0
   16320:	blt	16378 <fputs@plt+0x3d48>
   16324:	cmp	r3, r2
   16328:	bhi	16378 <fputs@plt+0x3d48>
   1632c:	cmp	ip, #43	; 0x2b
   16330:	lsleq	ip, r3, #2
   16334:	addeq	r0, r0, #1
   16338:	movne	ip, #0
   1633c:	strne	ip, [r4]
   16340:	movne	r3, ip
   16344:	add	r1, r1, ip
   16348:	rsb	r2, r3, r2
   1634c:	ldr	r3, [sp, #8]
   16350:	bl	1620c <fputs@plt+0x3bdc>
   16354:	subs	r3, r0, #0
   16358:	ble	16370 <fputs@plt+0x3d40>
   1635c:	ldr	r2, [r4]
   16360:	mov	r0, r3
   16364:	add	r3, r2, r3
   16368:	str	r3, [r4]
   1636c:	pop	{r4, pc}
   16370:	mov	r0, r3
   16374:	pop	{r4, pc}
   16378:	mvn	r0, #0
   1637c:	pop	{r4, pc}
   16380:	cmp	r2, #0
   16384:	cmpne	r0, #0
   16388:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1638c:	mov	r4, r0
   16390:	mov	r7, r2
   16394:	movne	r3, #0
   16398:	moveq	r3, #1
   1639c:	mov	r9, r1
   163a0:	beq	1643c <fputs@plt+0x3e0c>
   163a4:	cmp	r1, #0
   163a8:	beq	1643c <fputs@plt+0x3e0c>
   163ac:	mov	r6, r0
   163b0:	mov	r8, #1
   163b4:	ldrb	r5, [r6], #1
   163b8:	cmp	r5, #0
   163bc:	beq	1642c <fputs@plt+0x3dfc>
   163c0:	cmp	r5, #44	; 0x2c
   163c4:	ldrsb	r0, [r4, #1]
   163c8:	moveq	r5, r4
   163cc:	movne	r5, #0
   163d0:	cmp	r3, #0
   163d4:	moveq	r3, r4
   163d8:	cmp	r0, #0
   163dc:	mov	r0, r3
   163e0:	moveq	r5, r6
   163e4:	cmp	r5, #0
   163e8:	rsb	r1, r3, r5
   163ec:	beq	16424 <fputs@plt+0x3df4>
   163f0:	cmp	r3, r5
   163f4:	bcs	16434 <fputs@plt+0x3e04>
   163f8:	blx	r7
   163fc:	mov	r3, #0
   16400:	cmp	r0, #0
   16404:	and	r2, r0, #7
   16408:	poplt	{r3, r4, r5, r6, r7, r8, r9, pc}
   1640c:	ldrb	r1, [r9, r0, asr #3]
   16410:	orr	r2, r1, r8, lsl r2
   16414:	strb	r2, [r9, r0, asr #3]
   16418:	ldrsb	r2, [r5]
   1641c:	cmp	r2, r3
   16420:	beq	1642c <fputs@plt+0x3dfc>
   16424:	adds	r4, r4, #1
   16428:	bne	163b4 <fputs@plt+0x3d84>
   1642c:	mov	r0, #0
   16430:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16434:	mvn	r0, #0
   16438:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1643c:	mvn	r0, #21
   16440:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16444:	cmp	r2, #0
   16448:	cmpne	r0, #0
   1644c:	push	{r4, r5, r6, r7, r8, lr}
   16450:	movne	r3, #0
   16454:	moveq	r3, #1
   16458:	mov	r4, r0
   1645c:	mov	r8, r2
   16460:	mov	r7, r1
   16464:	beq	164f8 <fputs@plt+0x3ec8>
   16468:	cmp	r1, #0
   1646c:	beq	164f8 <fputs@plt+0x3ec8>
   16470:	mov	r6, r0
   16474:	ldrb	r5, [r6], #1
   16478:	cmp	r5, #0
   1647c:	beq	164e8 <fputs@plt+0x3eb8>
   16480:	cmp	r5, #44	; 0x2c
   16484:	ldrsb	r0, [r4, #1]
   16488:	moveq	r5, r4
   1648c:	movne	r5, #0
   16490:	cmp	r3, #0
   16494:	moveq	r3, r4
   16498:	cmp	r0, #0
   1649c:	mov	r0, r3
   164a0:	moveq	r5, r6
   164a4:	cmp	r5, #0
   164a8:	rsb	r1, r3, r5
   164ac:	beq	164e0 <fputs@plt+0x3eb0>
   164b0:	cmp	r3, r5
   164b4:	bcs	164f0 <fputs@plt+0x3ec0>
   164b8:	blx	r8
   164bc:	mov	r3, #0
   164c0:	cmp	r0, #0
   164c4:	poplt	{r4, r5, r6, r7, r8, pc}
   164c8:	ldr	r2, [r7]
   164cc:	orr	r0, r2, r0
   164d0:	str	r0, [r7]
   164d4:	ldrsb	r2, [r5]
   164d8:	cmp	r2, r3
   164dc:	beq	164e8 <fputs@plt+0x3eb8>
   164e0:	adds	r4, r4, #1
   164e4:	bne	16474 <fputs@plt+0x3e44>
   164e8:	mov	r0, #0
   164ec:	pop	{r4, r5, r6, r7, r8, pc}
   164f0:	mvn	r0, #0
   164f4:	pop	{r4, r5, r6, r7, r8, pc}
   164f8:	mvn	r0, #21
   164fc:	pop	{r4, r5, r6, r7, r8, pc}
   16500:	ldr	ip, [pc, #380]	; 16684 <fputs@plt+0x4054>
   16504:	push	{r4, r5, r6, r7, r8, r9, lr}
   16508:	subs	r4, r0, #0
   1650c:	ldr	r0, [pc, #372]	; 16688 <fputs@plt+0x4058>
   16510:	add	ip, pc, ip
   16514:	mov	r6, r2
   16518:	sub	sp, sp, #12
   1651c:	mov	r2, ip
   16520:	mov	r8, #0
   16524:	ldr	r7, [ip, r0]
   16528:	mov	r9, r1
   1652c:	str	r8, [sp]
   16530:	ldr	r2, [r7]
   16534:	str	r2, [sp, #4]
   16538:	beq	165a8 <fputs@plt+0x3f78>
   1653c:	str	r3, [r1]
   16540:	str	r3, [r6]
   16544:	bl	1260c <__errno_location@plt>
   16548:	str	r8, [r0]
   1654c:	mov	r5, r0
   16550:	ldrsb	r3, [r4]
   16554:	cmp	r3, #58	; 0x3a
   16558:	beq	165c4 <fputs@plt+0x3f94>
   1655c:	mov	r0, r4
   16560:	mov	r2, #10
   16564:	mov	r1, sp
   16568:	bl	1233c <strtol@plt>
   1656c:	str	r0, [r9]
   16570:	str	r0, [r6]
   16574:	ldr	r0, [r5]
   16578:	cmp	r0, #0
   1657c:	bne	16678 <fputs@plt+0x4048>
   16580:	ldr	r3, [sp]
   16584:	cmp	r3, #0
   16588:	beq	16678 <fputs@plt+0x4048>
   1658c:	cmp	r4, r3
   16590:	beq	16678 <fputs@plt+0x4048>
   16594:	ldrsb	r2, [r3]
   16598:	cmp	r2, #58	; 0x3a
   1659c:	beq	16610 <fputs@plt+0x3fe0>
   165a0:	cmp	r2, #45	; 0x2d
   165a4:	beq	16620 <fputs@plt+0x3ff0>
   165a8:	mov	r0, #0
   165ac:	ldr	r2, [sp, #4]
   165b0:	ldr	r3, [r7]
   165b4:	cmp	r2, r3
   165b8:	bne	16680 <fputs@plt+0x4050>
   165bc:	add	sp, sp, #12
   165c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   165c4:	add	r4, r4, #1
   165c8:	mov	r1, sp
   165cc:	mov	r2, #10
   165d0:	mov	r0, r4
   165d4:	bl	1233c <strtol@plt>
   165d8:	str	r0, [r6]
   165dc:	ldr	r3, [r5]
   165e0:	cmp	r3, #0
   165e4:	bne	16678 <fputs@plt+0x4048>
   165e8:	ldr	r3, [sp]
   165ec:	cmp	r3, #0
   165f0:	beq	16678 <fputs@plt+0x4048>
   165f4:	ldrsb	r2, [r3]
   165f8:	cmp	r2, #0
   165fc:	bne	16678 <fputs@plt+0x4048>
   16600:	cmp	r4, r3
   16604:	movne	r0, #0
   16608:	mvneq	r0, #0
   1660c:	b	165ac <fputs@plt+0x3f7c>
   16610:	ldrsb	r2, [r3, #1]
   16614:	cmp	r2, #0
   16618:	streq	r0, [r6]
   1661c:	beq	165ac <fputs@plt+0x3f7c>
   16620:	add	r4, r3, #1
   16624:	mov	ip, #0
   16628:	mov	r1, sp
   1662c:	mov	r2, #10
   16630:	mov	r0, r4
   16634:	str	ip, [r5]
   16638:	str	ip, [sp]
   1663c:	bl	1233c <strtol@plt>
   16640:	str	r0, [r6]
   16644:	ldr	r3, [r5]
   16648:	cmp	r3, #0
   1664c:	bne	16678 <fputs@plt+0x4048>
   16650:	ldr	r2, [sp]
   16654:	cmp	r2, #0
   16658:	beq	16678 <fputs@plt+0x4048>
   1665c:	ldrsb	r3, [r2]
   16660:	cmp	r3, #0
   16664:	bne	16678 <fputs@plt+0x4048>
   16668:	cmp	r4, r2
   1666c:	movne	r0, #0
   16670:	mvneq	r0, #0
   16674:	b	165ac <fputs@plt+0x3f7c>
   16678:	mvn	r0, #0
   1667c:	b	165ac <fputs@plt+0x3f7c>
   16680:	bl	12444 <__stack_chk_fail@plt>
   16684:	andeq	r5, r1, r8, ror #21
   16688:	andeq	r0, r0, r8, lsr #4
   1668c:	rsbs	r2, r0, #1
   16690:	push	{r4, r5, r6, lr}
   16694:	movcc	r2, #0
   16698:	rsbs	r3, r1, #1
   1669c:	mov	r5, r0
   166a0:	mov	r4, r1
   166a4:	movcc	r3, #0
   166a8:	ands	ip, r2, r3
   166ac:	bne	16718 <fputs@plt+0x40e8>
   166b0:	orrs	r3, r2, r3
   166b4:	bne	16720 <fputs@plt+0x40f0>
   166b8:	bl	125e8 <strcmp@plt>
   166bc:	cmp	r0, #0
   166c0:	beq	16718 <fputs@plt+0x40e8>
   166c4:	mov	r0, r5
   166c8:	bl	12294 <strlen@plt>
   166cc:	mov	r6, r0
   166d0:	mov	r0, r4
   166d4:	bl	12294 <strlen@plt>
   166d8:	cmp	r6, #0
   166dc:	beq	166f0 <fputs@plt+0x40c0>
   166e0:	sub	r3, r6, #1
   166e4:	ldrsb	r2, [r5, r3]
   166e8:	cmp	r2, #47	; 0x2f
   166ec:	moveq	r6, r3
   166f0:	cmp	r0, #0
   166f4:	beq	16708 <fputs@plt+0x40d8>
   166f8:	sub	r3, r0, #1
   166fc:	ldrsb	r2, [r4, r3]
   16700:	cmp	r2, #47	; 0x2f
   16704:	moveq	r0, r3
   16708:	cmp	r6, r0
   1670c:	beq	16728 <fputs@plt+0x40f8>
   16710:	mov	r0, #0
   16714:	pop	{r4, r5, r6, pc}
   16718:	mov	r0, #1
   1671c:	pop	{r4, r5, r6, pc}
   16720:	mov	r0, ip
   16724:	pop	{r4, r5, r6, pc}
   16728:	mov	r0, r5
   1672c:	mov	r1, r4
   16730:	mov	r2, r6
   16734:	bl	12594 <strncmp@plt>
   16738:	rsbs	r0, r0, #1
   1673c:	movcc	r0, #0
   16740:	pop	{r4, r5, r6, pc}
   16744:	ldr	r3, [pc, #248]	; 16844 <fputs@plt+0x4214>
   16748:	cmp	r0, #0
   1674c:	cmpne	r1, #0
   16750:	ldr	r2, [pc, #240]	; 16848 <fputs@plt+0x4218>
   16754:	add	r3, pc, r3
   16758:	push	{r4, r5, r6, r7, r8, r9, lr}
   1675c:	sub	sp, sp, #20
   16760:	ldr	r9, [r3, r2]
   16764:	mov	r6, r1
   16768:	addne	r8, sp, #4
   1676c:	addne	r7, sp, #8
   16770:	ldr	r3, [r9]
   16774:	str	r3, [sp, #12]
   16778:	bne	167c0 <fputs@plt+0x4190>
   1677c:	b	16838 <fputs@plt+0x4208>
   16780:	cmp	r4, r3
   16784:	bne	16838 <fputs@plt+0x4208>
   16788:	mov	r0, r5
   1678c:	mov	r1, r6
   16790:	mov	r2, r4
   16794:	bl	12594 <strncmp@plt>
   16798:	cmp	r0, #0
   1679c:	bne	16838 <fputs@plt+0x4208>
   167a0:	adds	r6, r6, r4
   167a4:	moveq	r3, #0
   167a8:	movne	r3, #1
   167ac:	adds	r0, r5, r4
   167b0:	moveq	r3, #0
   167b4:	andne	r3, r3, #1
   167b8:	cmp	r3, #0
   167bc:	beq	16838 <fputs@plt+0x4208>
   167c0:	mov	r1, r8
   167c4:	bl	15280 <fputs@plt+0x2c50>
   167c8:	mov	r1, r7
   167cc:	mov	r5, r0
   167d0:	mov	r0, r6
   167d4:	bl	15280 <fputs@plt+0x2c50>
   167d8:	ldr	r4, [sp, #4]
   167dc:	ldr	r3, [sp, #8]
   167e0:	mov	r6, r0
   167e4:	adds	r0, r3, r4
   167e8:	beq	1681c <fputs@plt+0x41ec>
   167ec:	cmp	r0, #1
   167f0:	bne	16780 <fputs@plt+0x4150>
   167f4:	cmp	r5, #0
   167f8:	beq	16808 <fputs@plt+0x41d8>
   167fc:	ldrsb	r2, [r5]
   16800:	cmp	r2, #47	; 0x2f
   16804:	beq	16820 <fputs@plt+0x41f0>
   16808:	cmp	r6, #0
   1680c:	beq	16780 <fputs@plt+0x4150>
   16810:	ldrsb	r2, [r6]
   16814:	cmp	r2, #47	; 0x2f
   16818:	bne	16780 <fputs@plt+0x4150>
   1681c:	mov	r0, #1
   16820:	ldr	r2, [sp, #12]
   16824:	ldr	r3, [r9]
   16828:	cmp	r2, r3
   1682c:	bne	16840 <fputs@plt+0x4210>
   16830:	add	sp, sp, #20
   16834:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16838:	mov	r0, #0
   1683c:	b	16820 <fputs@plt+0x41f0>
   16840:	bl	12444 <__stack_chk_fail@plt>
   16844:	andeq	r5, r1, r4, lsr #17
   16848:	andeq	r0, r0, r8, lsr #4
   1684c:	rsbs	r3, r0, #1
   16850:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16854:	movcc	r3, #0
   16858:	rsbs	r4, r1, #1
   1685c:	mov	r7, r1
   16860:	mov	r6, r2
   16864:	mov	sl, r0
   16868:	movcc	r4, #0
   1686c:	tst	r3, r4
   16870:	bne	168d4 <fputs@plt+0x42a4>
   16874:	cmp	r3, #0
   16878:	bne	168ec <fputs@plt+0x42bc>
   1687c:	cmp	r4, #0
   16880:	bne	168fc <fputs@plt+0x42cc>
   16884:	bl	12294 <strlen@plt>
   16888:	mvn	r3, r0
   1688c:	cmp	r6, r3
   16890:	mov	r5, r0
   16894:	bhi	168e4 <fputs@plt+0x42b4>
   16898:	add	r9, r0, r6
   1689c:	add	r0, r9, #1
   168a0:	bl	12420 <malloc@plt>
   168a4:	subs	r8, r0, #0
   168a8:	beq	16904 <fputs@plt+0x42d4>
   168ac:	mov	r1, sl
   168b0:	mov	r2, r5
   168b4:	bl	122c4 <memcpy@plt>
   168b8:	add	r0, r8, r5
   168bc:	mov	r1, r7
   168c0:	mov	r2, r6
   168c4:	bl	122c4 <memcpy@plt>
   168c8:	strb	r4, [r8, r9]
   168cc:	mov	r0, r8
   168d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   168d4:	mov	r0, #1
   168d8:	mov	r1, r0
   168dc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   168e0:	b	12138 <calloc@plt>
   168e4:	mov	r0, r4
   168e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   168ec:	mov	r0, r1
   168f0:	mov	r1, r2
   168f4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   168f8:	b	1218c <__strndup@plt>
   168fc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16900:	b	125c4 <__strdup@plt>
   16904:	mov	r0, r8
   16908:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1690c:	push	{r3, r4, r5, lr}
   16910:	subs	r4, r1, #0
   16914:	mov	r5, r0
   16918:	beq	16938 <fputs@plt+0x4308>
   1691c:	mov	r0, r4
   16920:	bl	12294 <strlen@plt>
   16924:	mov	r1, r4
   16928:	mov	r2, r0
   1692c:	mov	r0, r5
   16930:	pop	{r3, r4, r5, lr}
   16934:	b	1684c <fputs@plt+0x421c>
   16938:	mov	r2, r4
   1693c:	mov	r0, r5
   16940:	mov	r1, r4
   16944:	pop	{r3, r4, r5, lr}
   16948:	b	1684c <fputs@plt+0x421c>
   1694c:	push	{r1, r2, r3}
   16950:	mov	r1, #1
   16954:	push	{r4, r5, lr}
   16958:	sub	sp, sp, #16
   1695c:	ldr	lr, [pc, #124]	; 169e0 <fputs@plt+0x43b0>
   16960:	add	ip, sp, #32
   16964:	ldr	r4, [pc, #120]	; 169e4 <fputs@plt+0x43b4>
   16968:	mov	r5, r0
   1696c:	add	lr, pc, lr
   16970:	mov	r3, ip
   16974:	ldr	r2, [sp, #28]
   16978:	add	r0, sp, #8
   1697c:	ldr	r4, [lr, r4]
   16980:	str	ip, [sp, #4]
   16984:	ldr	ip, [r4]
   16988:	str	ip, [sp, #12]
   1698c:	bl	12600 <__vasprintf_chk@plt>
   16990:	subs	r2, r0, #0
   16994:	blt	169d4 <fputs@plt+0x43a4>
   16998:	mov	r0, r5
   1699c:	ldr	r1, [sp, #8]
   169a0:	bl	1684c <fputs@plt+0x421c>
   169a4:	mov	r5, r0
   169a8:	ldr	r0, [sp, #8]
   169ac:	bl	121e0 <free@plt>
   169b0:	mov	r0, r5
   169b4:	ldr	r2, [sp, #12]
   169b8:	ldr	r3, [r4]
   169bc:	cmp	r2, r3
   169c0:	bne	169dc <fputs@plt+0x43ac>
   169c4:	add	sp, sp, #16
   169c8:	pop	{r4, r5, lr}
   169cc:	add	sp, sp, #12
   169d0:	bx	lr
   169d4:	mov	r0, #0
   169d8:	b	169b4 <fputs@plt+0x4384>
   169dc:	bl	12444 <__stack_chk_fail@plt>
   169e0:	andeq	r5, r1, ip, lsl #13
   169e4:	andeq	r0, r0, r8, lsr #4
   169e8:	ldr	ip, [pc, #372]	; 16b64 <fputs@plt+0x4534>
   169ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   169f0:	mov	r6, r0
   169f4:	ldr	r0, [pc, #364]	; 16b68 <fputs@plt+0x4538>
   169f8:	add	ip, pc, ip
   169fc:	ldr	r4, [r6]
   16a00:	mov	r9, r3
   16a04:	sub	sp, sp, #12
   16a08:	mov	r7, r1
   16a0c:	ldr	r5, [ip, r0]
   16a10:	mov	r8, r2
   16a14:	ldrsb	ip, [r4]
   16a18:	ldr	r3, [r5]
   16a1c:	cmp	ip, #0
   16a20:	moveq	r0, ip
   16a24:	str	r3, [sp, #4]
   16a28:	beq	16ad8 <fputs@plt+0x44a8>
   16a2c:	mov	r0, r4
   16a30:	mov	r1, r2
   16a34:	bl	124f8 <strspn@plt>
   16a38:	ldrb	sl, [r4, r0]
   16a3c:	add	r4, r4, r0
   16a40:	cmp	sl, #0
   16a44:	beq	16b54 <fputs@plt+0x4524>
   16a48:	cmp	r9, #0
   16a4c:	beq	16af0 <fputs@plt+0x44c0>
   16a50:	sxtb	r9, sl
   16a54:	ldr	r0, [pc, #272]	; 16b6c <fputs@plt+0x453c>
   16a58:	mov	r1, r9
   16a5c:	add	r0, pc, r0
   16a60:	bl	12114 <strchr@plt>
   16a64:	cmp	r0, #0
   16a68:	beq	16b14 <fputs@plt+0x44e4>
   16a6c:	add	fp, r4, #1
   16a70:	mov	r1, sp
   16a74:	mov	r3, #0
   16a78:	strb	sl, [sp]
   16a7c:	mov	r0, fp
   16a80:	strb	r3, [sp, #1]
   16a84:	bl	15320 <fputs@plt+0x2cf0>
   16a88:	add	r3, r4, r0
   16a8c:	str	r0, [r7]
   16a90:	ldrb	r3, [r3, #1]
   16a94:	cmp	r3, #0
   16a98:	beq	16b54 <fputs@plt+0x4524>
   16a9c:	sxtb	r3, r3
   16aa0:	cmp	r9, r3
   16aa4:	bne	16b54 <fputs@plt+0x4524>
   16aa8:	add	r0, r0, #2
   16aac:	add	r7, r4, r0
   16ab0:	ldrb	r1, [r4, r0]
   16ab4:	cmp	r1, #0
   16ab8:	beq	16ad0 <fputs@plt+0x44a0>
   16abc:	mov	r0, r8
   16ac0:	sxtb	r1, r1
   16ac4:	bl	12114 <strchr@plt>
   16ac8:	cmp	r0, #0
   16acc:	beq	16b54 <fputs@plt+0x4524>
   16ad0:	mov	r0, fp
   16ad4:	str	r7, [r6]
   16ad8:	ldr	r2, [sp, #4]
   16adc:	ldr	r3, [r5]
   16ae0:	cmp	r2, r3
   16ae4:	bne	16b60 <fputs@plt+0x4530>
   16ae8:	add	sp, sp, #12
   16aec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16af0:	mov	r0, r4
   16af4:	mov	r1, r8
   16af8:	bl	12558 <strcspn@plt>
   16afc:	mov	r3, r0
   16b00:	mov	r0, r4
   16b04:	add	r4, r4, r3
   16b08:	str	r3, [r7]
   16b0c:	str	r4, [r6]
   16b10:	b	16ad8 <fputs@plt+0x44a8>
   16b14:	mov	r1, r8
   16b18:	mov	r0, r4
   16b1c:	bl	15320 <fputs@plt+0x2cf0>
   16b20:	str	r0, [r7]
   16b24:	add	r7, r4, r0
   16b28:	ldrb	r1, [r4, r0]
   16b2c:	cmp	r1, #0
   16b30:	beq	16b48 <fputs@plt+0x4518>
   16b34:	mov	r0, r8
   16b38:	sxtb	r1, r1
   16b3c:	bl	12114 <strchr@plt>
   16b40:	cmp	r0, #0
   16b44:	beq	16b0c <fputs@plt+0x44dc>
   16b48:	str	r7, [r6]
   16b4c:	mov	r0, r4
   16b50:	b	16ad8 <fputs@plt+0x44a8>
   16b54:	str	r4, [r6]
   16b58:	mov	r0, #0
   16b5c:	b	16ad8 <fputs@plt+0x44a8>
   16b60:	bl	12444 <__stack_chk_fail@plt>
   16b64:	andeq	r5, r1, r0, lsl #12
   16b68:	andeq	r0, r0, r8, lsr #4
   16b6c:	ldrdeq	r4, [r0], -ip
   16b70:	push	{r4, lr}
   16b74:	mov	r4, r0
   16b78:	b	16b84 <fputs@plt+0x4554>
   16b7c:	cmp	r0, #10
   16b80:	beq	16b9c <fputs@plt+0x456c>
   16b84:	mov	r0, r4
   16b88:	bl	12318 <fgetc@plt>
   16b8c:	cmn	r0, #1
   16b90:	bne	16b7c <fputs@plt+0x454c>
   16b94:	mov	r0, #1
   16b98:	pop	{r4, pc}
   16b9c:	mov	r0, #0
   16ba0:	pop	{r4, pc}
   16ba4:	push	{r3, r4, r5, r6, r7, lr}
   16ba8:	mov	r4, r0
   16bac:	ldr	r0, [r0, #40]	; 0x28
   16bb0:	mov	r7, r1
   16bb4:	mov	r5, r2
   16bb8:	cmp	r0, #0
   16bbc:	beq	16c28 <fputs@plt+0x45f8>
   16bc0:	bl	16ba4 <fputs@plt+0x4574>
   16bc4:	subs	r7, r0, #0
   16bc8:	beq	16c28 <fputs@plt+0x45f8>
   16bcc:	ldr	r2, [r4, #40]	; 0x28
   16bd0:	add	r3, r4, #32
   16bd4:	ldr	r2, [r2, #28]
   16bd8:	cmp	r2, r3
   16bdc:	beq	16c38 <fputs@plt+0x4608>
   16be0:	ldr	r3, [r4]
   16be4:	ldr	r3, [r3, #36]	; 0x24
   16be8:	ldr	r6, [r3, #4]
   16bec:	mov	r0, r6
   16bf0:	bl	12294 <strlen@plt>
   16bf4:	mov	r4, r0
   16bf8:	ldr	r3, [r5]
   16bfc:	cmp	r3, r4
   16c00:	bcc	16c30 <fputs@plt+0x4600>
   16c04:	mov	r2, r4
   16c08:	mov	r1, r6
   16c0c:	mov	r0, r7
   16c10:	bl	122c4 <memcpy@plt>
   16c14:	ldr	r3, [r5]
   16c18:	add	r0, r7, r4
   16c1c:	rsb	r4, r4, r3
   16c20:	str	r4, [r5]
   16c24:	pop	{r3, r4, r5, r6, r7, pc}
   16c28:	mov	r0, r7
   16c2c:	pop	{r3, r4, r5, r6, r7, pc}
   16c30:	mov	r0, #0
   16c34:	pop	{r3, r4, r5, r6, r7, pc}
   16c38:	ldr	r6, [pc, #8]	; 16c48 <fputs@plt+0x4618>
   16c3c:	mov	r4, #2
   16c40:	add	r6, pc, r6
   16c44:	b	16bf8 <fputs@plt+0x45c8>
   16c48:	strdeq	r4, [r0], -ip
   16c4c:	push	{r4, r5, r6, r7, r8, lr}
   16c50:	sub	sp, sp, #16
   16c54:	ldr	ip, [r0, #4]
   16c58:	mov	r4, r0
   16c5c:	ldr	r7, [sp, #40]	; 0x28
   16c60:	mov	r8, r2
   16c64:	mov	r0, r3
   16c68:	mov	r5, r3
   16c6c:	ldr	r6, [ip, r1, lsl #2]
   16c70:	mov	r1, #0
   16c74:	mov	r2, r7
   16c78:	bl	1215c <memset@plt>
   16c7c:	cmp	r6, #0
   16c80:	beq	16d88 <fputs@plt+0x4758>
   16c84:	ldr	r3, [r8]
   16c88:	ands	r8, r3, #64	; 0x40
   16c8c:	beq	16d30 <fputs@plt+0x4700>
   16c90:	ldr	r0, [r4, #40]	; 0x28
   16c94:	cmp	r0, #0
   16c98:	beq	16d0c <fputs@plt+0x46dc>
   16c9c:	mov	r1, r5
   16ca0:	add	r2, sp, #40	; 0x28
   16ca4:	bl	16ba4 <fputs@plt+0x4574>
   16ca8:	subs	r8, r0, #0
   16cac:	beq	16d88 <fputs@plt+0x4758>
   16cb0:	ldr	r3, [r4, #40]	; 0x28
   16cb4:	ldr	r2, [r4]
   16cb8:	cmp	r3, #0
   16cbc:	ldr	ip, [r2, #36]	; 0x24
   16cc0:	ldreq	r1, [sp, #40]	; 0x28
   16cc4:	beq	16d14 <fputs@plt+0x46e4>
   16cc8:	ldr	r3, [r3, #28]
   16ccc:	add	r4, r4, #32
   16cd0:	cmp	r3, r4
   16cd4:	beq	16d54 <fputs@plt+0x4724>
   16cd8:	ldr	lr, [pc, #176]	; 16d90 <fputs@plt+0x4760>
   16cdc:	mov	r2, #1
   16ce0:	ldr	r1, [sp, #40]	; 0x28
   16ce4:	mvn	r3, #0
   16ce8:	add	lr, pc, lr
   16cec:	str	lr, [sp]
   16cf0:	ldr	ip, [ip]
   16cf4:	str	r6, [sp, #8]
   16cf8:	str	ip, [sp, #4]
   16cfc:	bl	1239c <__snprintf_chk@plt>
   16d00:	mov	r0, r5
   16d04:	add	sp, sp, #16
   16d08:	pop	{r4, r5, r6, r7, r8, pc}
   16d0c:	mov	r1, r7
   16d10:	mov	r8, r5
   16d14:	ldr	r2, [pc, #120]	; 16d94 <fputs@plt+0x4764>
   16d18:	mov	r0, r8
   16d1c:	mov	r3, r6
   16d20:	add	r2, pc, r2
   16d24:	bl	12540 <snprintf@plt>
   16d28:	mov	r0, r5
   16d2c:	b	16d04 <fputs@plt+0x46d4>
   16d30:	mov	r2, r7
   16d34:	mov	r1, r6
   16d38:	mov	r0, r5
   16d3c:	add	r7, r5, r7
   16d40:	bl	120cc <strncpy@plt>
   16d44:	mov	r0, r5
   16d48:	strb	r8, [r7, #-1]
   16d4c:	add	sp, sp, #16
   16d50:	pop	{r4, r5, r6, r7, r8, pc}
   16d54:	ldr	lr, [pc, #60]	; 16d98 <fputs@plt+0x4768>
   16d58:	mov	r2, #1
   16d5c:	ldr	r1, [sp, #40]	; 0x28
   16d60:	mvn	r3, #0
   16d64:	add	lr, pc, lr
   16d68:	str	lr, [sp]
   16d6c:	ldr	ip, [ip, #8]
   16d70:	str	r6, [sp, #8]
   16d74:	str	ip, [sp, #4]
   16d78:	bl	1239c <__snprintf_chk@plt>
   16d7c:	mov	r0, r5
   16d80:	add	sp, sp, #16
   16d84:	pop	{r4, r5, r6, r7, r8, pc}
   16d88:	mov	r0, #0
   16d8c:	b	16d04 <fputs@plt+0x46d4>
   16d90:	andeq	r4, r0, r8, asr r4
   16d94:	andeq	r3, r0, ip, lsl fp
   16d98:	ldrdeq	r4, [r0], -ip
   16d9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16da0:	mov	r5, r0
   16da4:	ldr	fp, [r5, #28]!
   16da8:	mov	sl, #0
   16dac:	sub	sp, sp, #12
   16db0:	mov	r4, r1
   16db4:	cmp	fp, r5
   16db8:	mov	r6, r2
   16dbc:	mov	r7, r3
   16dc0:	str	sl, [r1, #8]
   16dc4:	beq	16e88 <fputs@plt+0x4858>
   16dc8:	add	r8, r1, #32
   16dcc:	mov	r9, sl
   16dd0:	b	16e2c <fputs@plt+0x47fc>
   16dd4:	bl	18228 <fputs@plt+0x5bf8>
   16dd8:	cmn	r0, #1
   16ddc:	beq	16e4c <fputs@plt+0x481c>
   16de0:	ldr	r3, [r4, #16]
   16de4:	cmp	r0, r3
   16de8:	strhi	r0, [r4, #16]
   16dec:	ldr	r3, [r4, #36]	; 0x24
   16df0:	cmp	r3, #0
   16df4:	beq	16e04 <fputs@plt+0x47d4>
   16df8:	ldr	r3, [r4, #20]
   16dfc:	cmp	r0, r3, lsl #1
   16e00:	bhi	16e20 <fputs@plt+0x47f0>
   16e04:	ldr	r3, [r4, #32]
   16e08:	tst	r3, #512	; 0x200
   16e0c:	ldr	r3, [r4, #8]
   16e10:	addne	sl, sl, r0
   16e14:	addne	r9, r9, #1
   16e18:	cmp	r3, r0
   16e1c:	strcc	r0, [r4, #8]
   16e20:	ldr	fp, [fp]
   16e24:	cmp	fp, r5
   16e28:	beq	16e54 <fputs@plt+0x4824>
   16e2c:	ldr	r1, [r4, #4]
   16e30:	sub	r0, fp, #16
   16e34:	str	r7, [sp]
   16e38:	mov	r2, r8
   16e3c:	mov	r3, r6
   16e40:	bl	16c4c <fputs@plt+0x461c>
   16e44:	cmp	r0, #0
   16e48:	bne	16dd4 <fputs@plt+0x47a4>
   16e4c:	mov	r0, #0
   16e50:	b	16dec <fputs@plt+0x47bc>
   16e54:	cmp	r9, #0
   16e58:	beq	16e88 <fputs@plt+0x4858>
   16e5c:	ldr	r3, [r4, #20]
   16e60:	cmp	r3, #0
   16e64:	bne	16e88 <fputs@plt+0x4858>
   16e68:	mov	r0, sl
   16e6c:	mov	r1, r9
   16e70:	bl	18c1c <fputs@plt+0x65ec>
   16e74:	ldr	r3, [r4, #16]
   16e78:	cmp	r3, r0, lsl #1
   16e7c:	str	r0, [r4, #20]
   16e80:	movhi	r3, #1
   16e84:	strhi	r3, [r4, #36]	; 0x24
   16e88:	ldr	r0, [r4]
   16e8c:	cmp	r0, #0
   16e90:	ldreq	r2, [r4, #12]
   16e94:	beq	16ea4 <fputs@plt+0x4874>
   16e98:	bl	18228 <fputs@plt+0x5bf8>
   16e9c:	mov	r2, r0
   16ea0:	str	r0, [r4, #12]
   16ea4:	ldr	r3, [r4, #8]
   16ea8:	cmp	r2, r3
   16eac:	bls	16ec0 <fputs@plt+0x4890>
   16eb0:	ldr	r1, [r4, #32]
   16eb4:	tst	r1, #256	; 0x100
   16eb8:	streq	r2, [r4, #8]
   16ebc:	beq	16eec <fputs@plt+0x48bc>
   16ec0:	vmov.f64	d6, #112	; 0x3f800000  1.0
   16ec4:	vldr	d7, [r4, #24]
   16ec8:	vcmpe.f64	d7, d6
   16ecc:	vmrs	APSR_nzcv, fpscr
   16ed0:	blt	16eec <fputs@plt+0x48bc>
   16ed4:	vcvt.u32.f64	s13, d7
   16ed8:	vmov	r1, s13
   16edc:	cmp	r3, r1
   16ee0:	bcs	16eec <fputs@plt+0x48bc>
   16ee4:	cmp	r2, r1
   16ee8:	strcc	r1, [r4, #8]
   16eec:	add	sp, sp, #12
   16ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ef4:	push	{r3, r4, r5, lr}
   16ef8:	mov	r1, #40	; 0x28
   16efc:	mov	r5, r0
   16f00:	mov	r0, #1
   16f04:	bl	12138 <calloc@plt>
   16f08:	subs	r4, r0, #0
   16f0c:	beq	16f4c <fputs@plt+0x491c>
   16f10:	tst	r5, #4
   16f14:	add	r2, r4, #28
   16f18:	add	r3, r4, #20
   16f1c:	str	r5, [r4, #12]
   16f20:	str	r2, [r4, #28]
   16f24:	str	r2, [r4, #32]
   16f28:	str	r3, [r4, #20]
   16f2c:	str	r3, [r4, #24]
   16f30:	beq	16f54 <fputs@plt+0x4924>
   16f34:	ldr	r3, [pc, #68]	; 16f80 <fputs@plt+0x4950>
   16f38:	add	r3, pc, r3
   16f3c:	add	r3, r3, #12
   16f40:	str	r3, [r4, #36]	; 0x24
   16f44:	mov	r3, #1
   16f48:	str	r3, [r4, #16]
   16f4c:	mov	r0, r4
   16f50:	pop	{r3, r4, r5, pc}
   16f54:	mov	r0, #14
   16f58:	bl	12438 <nl_langinfo@plt>
   16f5c:	ldr	r1, [pc, #32]	; 16f84 <fputs@plt+0x4954>
   16f60:	add	r1, pc, r1
   16f64:	bl	125e8 <strcmp@plt>
   16f68:	cmp	r0, #0
   16f6c:	bne	16f34 <fputs@plt+0x4904>
   16f70:	ldr	r3, [pc, #16]	; 16f88 <fputs@plt+0x4958>
   16f74:	add	r3, pc, r3
   16f78:	str	r3, [r4, #36]	; 0x24
   16f7c:	b	16f44 <fputs@plt+0x4914>
   16f80:	andeq	r4, r1, r8, lsl #31
   16f84:	andeq	r4, r0, r8, ror #3
   16f88:	andeq	r4, r1, ip, asr #30
   16f8c:	push	{r4, r5, r6, lr}
   16f90:	subs	r5, r0, #0
   16f94:	popeq	{r4, r5, r6, pc}
   16f98:	ldr	r4, [r5, #28]
   16f9c:	add	r6, r5, #28
   16fa0:	cmp	r6, r4
   16fa4:	popeq	{r4, r5, r6, pc}
   16fa8:	ldm	r4, {r2, r3}
   16fac:	ldr	r0, [r4, #-12]
   16fb0:	str	r3, [r2, #4]
   16fb4:	str	r2, [r3]
   16fb8:	bl	121e0 <free@plt>
   16fbc:	sub	r0, r4, #16
   16fc0:	bl	121e0 <free@plt>
   16fc4:	ldr	r4, [r5, #28]
   16fc8:	cmp	r4, r6
   16fcc:	bne	16fa8 <fputs@plt+0x4978>
   16fd0:	pop	{r4, r5, r6, pc}
   16fd4:	push	{r3, r4, r5, lr}
   16fd8:	subs	r4, r0, #0
   16fdc:	popeq	{r3, r4, r5, pc}
   16fe0:	bl	16f8c <fputs@plt+0x495c>
   16fe4:	ldr	r3, [r4, #20]
   16fe8:	add	r5, r4, #20
   16fec:	cmp	r5, r3
   16ff0:	beq	17018 <fputs@plt+0x49e8>
   16ff4:	mov	r0, r3
   16ff8:	ldr	r3, [r3, #4]
   16ffc:	ldr	r2, [r0], #-40	; 0xffffffd8
   17000:	str	r3, [r2, #4]
   17004:	str	r2, [r3]
   17008:	bl	121e0 <free@plt>
   1700c:	ldr	r3, [r4, #20]
   17010:	cmp	r3, r5
   17014:	bne	16ff4 <fputs@plt+0x49c4>
   17018:	mov	r0, r4
   1701c:	pop	{r3, r4, r5, lr}
   17020:	b	121e0 <free@plt>
   17024:	push	{r4, r5, r6, lr}
   17028:	vpush	{d8}
   1702c:	subs	r4, r0, #0
   17030:	mov	r6, r1
   17034:	vmov.f64	d8, d0
   17038:	mov	r5, r2
   1703c:	beq	170ac <fputs@plt+0x4a7c>
   17040:	mov	r0, #1
   17044:	mov	r1, #48	; 0x30
   17048:	bl	12138 <calloc@plt>
   1704c:	subs	r3, r0, #0
   17050:	beq	170ac <fputs@plt+0x4a7c>
   17054:	ldr	r2, [r4]
   17058:	tst	r5, #64	; 0x40
   1705c:	str	r6, [r3]
   17060:	vstr	d8, [r3, #24]
   17064:	add	r1, r2, #1
   17068:	str	r5, [r3, #32]
   1706c:	str	r1, [r4]
   17070:	mov	r0, r3
   17074:	str	r2, [r3, #4]
   17078:	add	r4, r4, #20
   1707c:	ldrne	r2, [r4, #-8]
   17080:	orrne	r2, r2, #64	; 0x40
   17084:	strne	r2, [r4, #-8]
   17088:	add	r2, r3, #40	; 0x28
   1708c:	str	r2, [r3, #44]	; 0x2c
   17090:	ldr	r1, [r4, #4]
   17094:	str	r2, [r4, #4]
   17098:	str	r4, [r3, #40]	; 0x28
   1709c:	str	r1, [r3, #44]	; 0x2c
   170a0:	str	r2, [r1]
   170a4:	vpop	{d8}
   170a8:	pop	{r4, r5, r6, pc}
   170ac:	mov	r0, #0
   170b0:	b	170a4 <fputs@plt+0x4a74>
   170b4:	push	{r4, r5, r6, r7, r8, lr}
   170b8:	subs	r5, r0, #0
   170bc:	mov	r6, r1
   170c0:	beq	1716c <fputs@plt+0x4b3c>
   170c4:	ldr	r7, [r5]
   170c8:	cmp	r7, #0
   170cc:	beq	1716c <fputs@plt+0x4b3c>
   170d0:	mov	r0, #1
   170d4:	mov	r1, #44	; 0x2c
   170d8:	bl	12138 <calloc@plt>
   170dc:	cmp	r0, #0
   170e0:	mov	r4, r0
   170e4:	mov	r8, r0
   170e8:	beq	1716c <fputs@plt+0x4b3c>
   170ec:	mov	r0, r7
   170f0:	mov	r1, #4
   170f4:	bl	12138 <calloc@plt>
   170f8:	cmp	r0, #0
   170fc:	str	r0, [r4, #4]
   17100:	beq	17170 <fputs@plt+0x4b40>
   17104:	add	r2, r4, #16
   17108:	add	r3, r4, #32
   1710c:	str	r2, [r4, #20]
   17110:	add	r0, r4, #24
   17114:	str	r3, [r4, #36]	; 0x24
   17118:	cmp	r6, #0
   1711c:	str	r0, [r4, #28]
   17120:	add	ip, r5, #28
   17124:	ldr	r1, [r5, #32]
   17128:	str	r5, [r4]
   1712c:	str	r6, [r4, #40]	; 0x28
   17130:	str	r3, [r4, #32]
   17134:	str	r0, [r4, #24]
   17138:	str	r2, [r5, #32]
   1713c:	str	r1, [r4, #20]
   17140:	str	ip, [r4, #16]
   17144:	str	r2, [r1]
   17148:	beq	17180 <fputs@plt+0x4b50>
   1714c:	ldr	r2, [r6, #28]
   17150:	add	r1, r6, #24
   17154:	str	r3, [r6, #28]
   17158:	mov	r0, r4
   1715c:	str	r1, [r4, #32]
   17160:	str	r2, [r4, #36]	; 0x24
   17164:	str	r3, [r2]
   17168:	pop	{r4, r5, r6, r7, r8, pc}
   1716c:	mov	r8, #0
   17170:	mov	r0, r8
   17174:	bl	121e0 <free@plt>
   17178:	mov	r0, #0
   1717c:	pop	{r4, r5, r6, r7, r8, pc}
   17180:	mov	r0, r4
   17184:	pop	{r4, r5, r6, r7, r8, pc}
   17188:	ldr	r3, [r0, #20]!
   1718c:	cmp	r3, r0
   17190:	bne	171a4 <fputs@plt+0x4b74>
   17194:	b	171b8 <fputs@plt+0x4b88>
   17198:	ldr	r3, [r3]
   1719c:	cmp	r3, r0
   171a0:	beq	171b8 <fputs@plt+0x4b88>
   171a4:	ldr	r2, [r3, #-36]	; 0xffffffdc
   171a8:	cmp	r2, r1
   171ac:	bne	17198 <fputs@plt+0x4b68>
   171b0:	sub	r0, r3, #40	; 0x28
   171b4:	bx	lr
   171b8:	mov	r0, #0
   171bc:	bx	lr
   171c0:	push	{r3, r4, r5, r6, r7, lr}
   171c4:	subs	r4, r0, #0
   171c8:	mov	r5, r2
   171cc:	beq	17238 <fputs@plt+0x4c08>
   171d0:	ldr	r0, [r4]
   171d4:	bl	17188 <fputs@plt+0x4b58>
   171d8:	cmp	r0, #0
   171dc:	beq	17238 <fputs@plt+0x4c08>
   171e0:	ldr	r7, [r0, #4]
   171e4:	ldr	r6, [r4, #4]
   171e8:	ldr	r0, [r6, r7, lsl #2]
   171ec:	cmp	r0, #0
   171f0:	beq	1720c <fputs@plt+0x4bdc>
   171f4:	bl	12294 <strlen@plt>
   171f8:	ldr	r3, [r4, #12]
   171fc:	cmp	r0, r3
   17200:	rsbcc	r0, r0, r3
   17204:	movcs	r0, #0
   17208:	str	r0, [r4, #12]
   1720c:	cmp	r5, #0
   17210:	str	r5, [r6, r7, lsl #2]
   17214:	beq	17230 <fputs@plt+0x4c00>
   17218:	mov	r0, r5
   1721c:	mov	r5, #0
   17220:	bl	12294 <strlen@plt>
   17224:	ldr	r3, [r4, #12]
   17228:	add	r0, r3, r0
   1722c:	str	r0, [r4, #12]
   17230:	mov	r0, r5
   17234:	pop	{r3, r4, r5, r6, r7, pc}
   17238:	mvn	r5, #0
   1723c:	b	17230 <fputs@plt+0x4c00>
   17240:	cmp	r0, #0
   17244:	strne	r1, [r0, #8]
   17248:	movne	r0, #0
   1724c:	mvneq	r0, #0
   17250:	bx	lr
   17254:	push	{r4, r5, r6, r7, r8, lr}
   17258:	mov	r6, r0
   1725c:	mov	r0, #34	; 0x22
   17260:	mov	r7, r1
   17264:	bl	12498 <fputc@plt>
   17268:	cmp	r6, #0
   1726c:	beq	172f8 <fputs@plt+0x4cc8>
   17270:	ldrb	r4, [r6]
   17274:	cmp	r4, #0
   17278:	beq	172f8 <fputs@plt+0x4cc8>
   1727c:	ldr	r8, [pc, #132]	; 17308 <fputs@plt+0x4cd8>
   17280:	add	r8, pc, r8
   17284:	b	172ac <fputs@plt+0x4c7c>
   17288:	mov	r1, #1
   1728c:	mov	r0, r7
   17290:	mov	r2, r8
   17294:	bl	12468 <__fprintf_chk@plt>
   17298:	cmn	r6, #1
   1729c:	beq	172f8 <fputs@plt+0x4cc8>
   172a0:	ldrb	r4, [r6, #1]!
   172a4:	cmp	r4, #0
   172a8:	beq	172f8 <fputs@plt+0x4cc8>
   172ac:	sxtb	r5, r4
   172b0:	cmp	r5, #34	; 0x22
   172b4:	cmpne	r5, #92	; 0x5c
   172b8:	uxtbeq	r3, r4
   172bc:	beq	17288 <fputs@plt+0x4c58>
   172c0:	bl	12408 <__ctype_b_loc@plt>
   172c4:	uxtb	r3, r4
   172c8:	movw	ip, #16386	; 0x4002
   172cc:	lsl	lr, r3, #1
   172d0:	ldr	r2, [r0]
   172d4:	ldrh	r2, [r2, lr]
   172d8:	and	ip, r2, ip
   172dc:	cmp	ip, #16384	; 0x4000
   172e0:	bne	17288 <fputs@plt+0x4c58>
   172e4:	mov	r0, r5
   172e8:	mov	r1, r7
   172ec:	bl	12498 <fputc@plt>
   172f0:	cmn	r6, #1
   172f4:	bne	172a0 <fputs@plt+0x4c70>
   172f8:	mov	r1, r7
   172fc:	mov	r0, #34	; 0x22
   17300:	pop	{r4, r5, r6, r7, r8, lr}
   17304:	b	12498 <fputc@plt>
   17308:	ldrdeq	r3, [r0], -r0
   1730c:	cmp	r0, #0
   17310:	push	{r4, r5, r6, r7, r8, lr}
   17314:	mov	r6, r1
   17318:	popeq	{r4, r5, r6, r7, r8, pc}
   1731c:	ldrb	r4, [r0]
   17320:	cmp	r4, #0
   17324:	popeq	{r4, r5, r6, r7, r8, pc}
   17328:	mov	r5, r0
   1732c:	bl	12408 <__ctype_b_loc@plt>
   17330:	ldr	r7, [pc, #124]	; 173b4 <fputs@plt+0x4d84>
   17334:	add	r7, pc, r7
   17338:	mov	r8, r0
   1733c:	b	17358 <fputs@plt+0x4d28>
   17340:	bl	12468 <__fprintf_chk@plt>
   17344:	cmn	r5, #1
   17348:	popeq	{r4, r5, r6, r7, r8, pc}
   1734c:	ldrb	r4, [r5, #1]!
   17350:	cmp	r4, #0
   17354:	beq	173b0 <fputs@plt+0x4d80>
   17358:	uxtb	r3, r4
   1735c:	ldr	lr, [r8]
   17360:	mov	r1, #1
   17364:	mov	r0, r6
   17368:	lsl	ip, r3, r1
   1736c:	mov	r2, r7
   17370:	sxtb	r4, r4
   17374:	ldrh	lr, [lr, ip]
   17378:	movw	ip, #16386	; 0x4002
   1737c:	tst	lr, #1
   17380:	and	ip, lr, ip
   17384:	bne	17340 <fputs@plt+0x4d10>
   17388:	cmp	r4, #92	; 0x5c
   1738c:	beq	17340 <fputs@plt+0x4d10>
   17390:	cmp	ip, #16384	; 0x4000
   17394:	bne	17340 <fputs@plt+0x4d10>
   17398:	mov	r0, r4
   1739c:	mov	r1, r6
   173a0:	bl	12498 <fputc@plt>
   173a4:	cmn	r5, #1
   173a8:	bne	1734c <fputs@plt+0x4d1c>
   173ac:	pop	{r4, r5, r6, r7, r8, pc}
   173b0:	pop	{r4, r5, r6, r7, r8, pc}
   173b4:	andeq	r3, r0, ip, lsl lr
   173b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   173bc:	subs	r4, r2, #0
   173c0:	ldr	r5, [pc, #728]	; 176a0 <fputs@plt+0x5070>
   173c4:	sub	sp, sp, #36	; 0x24
   173c8:	ldr	r3, [pc, #724]	; 176a4 <fputs@plt+0x5074>
   173cc:	mov	r2, #0
   173d0:	add	r5, pc, r5
   173d4:	mov	r7, r0
   173d8:	mov	r8, r1
   173dc:	ldr	r9, [r5, r3]
   173e0:	str	r2, [sp, #20]
   173e4:	ldr	r3, [r9]
   173e8:	str	r3, [sp, #28]
   173ec:	beq	17684 <fputs@plt+0x5054>
   173f0:	ldr	r3, [r7, #12]
   173f4:	tst	r3, #2
   173f8:	bne	175b0 <fputs@plt+0x4f80>
   173fc:	tst	r3, #16
   17400:	beq	17460 <fputs@plt+0x4e30>
   17404:	ldr	r0, [pc, #668]	; 176a8 <fputs@plt+0x5078>
   17408:	mov	r1, #1
   1740c:	ldr	r2, [pc, #664]	; 176ac <fputs@plt+0x507c>
   17410:	ldr	r3, [r8], #40	; 0x28
   17414:	ldr	r5, [r5, r0]
   17418:	add	r2, pc, r2
   1741c:	ldr	r0, [r5]
   17420:	bl	12468 <__fprintf_chk@plt>
   17424:	mov	r0, r4
   17428:	ldr	r1, [r5]
   1742c:	bl	17254 <fputs@plt+0x4c24>
   17430:	ldr	r3, [r7, #24]
   17434:	cmp	r3, r8
   17438:	beq	17448 <fputs@plt+0x4e18>
   1743c:	ldr	r1, [r5]
   17440:	mov	r0, #32
   17444:	bl	12498 <fputc@plt>
   17448:	ldr	r2, [sp, #28]
   1744c:	ldr	r3, [r9]
   17450:	cmp	r2, r3
   17454:	bne	1769c <fputs@plt+0x506c>
   17458:	add	sp, sp, #36	; 0x24
   1745c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17460:	mov	r0, r4
   17464:	add	r1, sp, #20
   17468:	bl	1872c <fputs@plt+0x60fc>
   1746c:	subs	fp, r0, #0
   17470:	movne	r4, fp
   17474:	beq	17690 <fputs@plt+0x5060>
   17478:	ldr	r3, [sp, #20]
   1747c:	add	sl, r8, #40	; 0x28
   17480:	ldr	r1, [r7, #24]
   17484:	sub	r2, r3, #1
   17488:	cmn	r2, #3
   1748c:	movhi	r4, #0
   17490:	movls	r2, r3
   17494:	ldr	r3, [r8, #8]
   17498:	movhi	r2, r4
   1749c:	strhi	r4, [sp, #20]
   174a0:	cmp	sl, r1
   174a4:	str	r3, [sp, #24]
   174a8:	beq	174f0 <fputs@plt+0x4ec0>
   174ac:	cmp	r3, r2
   174b0:	bcs	17500 <fputs@plt+0x4ed0>
   174b4:	ldr	r1, [r8, #32]
   174b8:	tst	r1, #32
   174bc:	beq	17500 <fputs@plt+0x4ed0>
   174c0:	cmp	r4, #0
   174c4:	beq	174e4 <fputs@plt+0x4eb4>
   174c8:	mov	r0, r4
   174cc:	add	r1, sp, #24
   174d0:	bl	187e0 <fputs@plt+0x61b0>
   174d4:	cmn	r0, #1
   174d8:	str	r0, [sp, #20]
   174dc:	bne	1750c <fputs@plt+0x4edc>
   174e0:	ldr	r3, [sp, #24]
   174e4:	mov	r4, #0
   174e8:	str	r4, [sp, #20]
   174ec:	b	17540 <fputs@plt+0x4f10>
   174f0:	cmp	r3, r2
   174f4:	strhi	r2, [sp, #24]
   174f8:	movhi	r3, r2
   174fc:	bls	174ac <fputs@plt+0x4e7c>
   17500:	cmp	r4, #0
   17504:	moveq	r4, r2
   17508:	beq	17540 <fputs@plt+0x4f10>
   1750c:	ldr	r3, [r7, #12]
   17510:	tst	r3, #2
   17514:	bne	17524 <fputs@plt+0x4ef4>
   17518:	ldr	r3, [r8, #32]
   1751c:	tst	r3, #128	; 0x80
   17520:	bne	1763c <fputs@plt+0x500c>
   17524:	ldr	r3, [pc, #380]	; 176a8 <fputs@plt+0x5078>
   17528:	mov	r0, r4
   1752c:	ldr	r6, [r5, r3]
   17530:	ldr	r1, [r6]
   17534:	bl	12630 <fputs@plt>
   17538:	ldr	r3, [sp, #24]
   1753c:	ldr	r4, [sp, #20]
   17540:	cmp	r4, r3
   17544:	bcs	1756c <fputs@plt+0x4f3c>
   17548:	ldr	r3, [pc, #344]	; 176a8 <fputs@plt+0x5078>
   1754c:	ldr	r6, [r5, r3]
   17550:	mov	r0, #32
   17554:	ldr	r1, [r6]
   17558:	bl	12498 <fputc@plt>
   1755c:	ldr	r3, [sp, #24]
   17560:	add	r4, r4, #1
   17564:	cmp	r3, r4
   17568:	bhi	17550 <fputs@plt+0x4f20>
   1756c:	ldr	r2, [r7, #24]
   17570:	cmp	sl, r2
   17574:	beq	175a4 <fputs@plt+0x4f74>
   17578:	ldr	r2, [sp, #20]
   1757c:	cmp	r2, r3
   17580:	ldr	r3, [pc, #288]	; 176a8 <fputs@plt+0x5078>
   17584:	bls	17594 <fputs@plt+0x4f64>
   17588:	ldr	r4, [r8, #32]
   1758c:	ands	r4, r4, #32
   17590:	beq	175e4 <fputs@plt+0x4fb4>
   17594:	ldr	r3, [r5, r3]
   17598:	mov	r0, #32
   1759c:	ldr	r1, [r3]
   175a0:	bl	12498 <fputc@plt>
   175a4:	mov	r0, fp
   175a8:	bl	121e0 <free@plt>
   175ac:	b	17448 <fputs@plt+0x4e18>
   175b0:	ldr	r3, [pc, #240]	; 176a8 <fputs@plt+0x5078>
   175b4:	mov	r0, r4
   175b8:	add	r8, r8, #40	; 0x28
   175bc:	ldr	r4, [r5, r3]
   175c0:	ldr	r1, [r4]
   175c4:	bl	1730c <fputs@plt+0x4cdc>
   175c8:	ldr	r3, [r7, #24]
   175cc:	cmp	r3, r8
   175d0:	beq	17448 <fputs@plt+0x4e18>
   175d4:	ldr	r1, [r4]
   175d8:	mov	r0, #32
   175dc:	bl	12498 <fputc@plt>
   175e0:	b	17448 <fputs@plt+0x4e18>
   175e4:	ldr	r3, [r5, r3]
   175e8:	mov	r0, #10
   175ec:	ldr	sl, [pc, #188]	; 176b0 <fputs@plt+0x5080>
   175f0:	ldr	r6, [pc, #188]	; 176b4 <fputs@plt+0x5084>
   175f4:	ldr	r1, [r3]
   175f8:	add	sl, pc, sl
   175fc:	add	r6, pc, r6
   17600:	bl	12498 <fputc@plt>
   17604:	mov	r1, r4
   17608:	mov	r0, r7
   1760c:	bl	17188 <fputs@plt+0x4b58>
   17610:	mov	r3, r6
   17614:	mov	r1, sl
   17618:	add	r4, r4, #1
   1761c:	ldr	r2, [r0, #8]
   17620:	mov	r0, #1
   17624:	rsb	r2, r2, #0
   17628:	bl	120fc <__printf_chk@plt>
   1762c:	ldr	r3, [r8, #4]
   17630:	cmp	r3, r4
   17634:	bcs	17604 <fputs@plt+0x4fd4>
   17638:	b	175a4 <fputs@plt+0x4f74>
   1763c:	ldr	r3, [pc, #100]	; 176a8 <fputs@plt+0x5078>
   17640:	mov	r1, #1
   17644:	ldr	ip, [r8, #8]
   17648:	ldr	r2, [pc, #104]	; 176b8 <fputs@plt+0x5088>
   1764c:	ldr	r6, [r5, r3]
   17650:	add	r2, pc, r2
   17654:	mov	r3, ip
   17658:	ldr	r0, [r6]
   1765c:	str	r4, [sp]
   17660:	str	ip, [sp, #12]
   17664:	bl	12468 <__fprintf_chk@plt>
   17668:	ldr	r4, [sp, #20]
   1766c:	ldr	ip, [sp, #12]
   17670:	ldr	r3, [sp, #24]
   17674:	cmp	ip, r4
   17678:	strhi	ip, [sp, #20]
   1767c:	movhi	r4, ip
   17680:	b	17540 <fputs@plt+0x4f10>
   17684:	ldr	r4, [pc, #48]	; 176bc <fputs@plt+0x508c>
   17688:	add	r4, pc, r4
   1768c:	b	173f0 <fputs@plt+0x4dc0>
   17690:	ldr	r4, [pc, #40]	; 176c0 <fputs@plt+0x5090>
   17694:	add	r4, pc, r4
   17698:	b	17478 <fputs@plt+0x4e48>
   1769c:	bl	12444 <__stack_chk_fail@plt>
   176a0:	andeq	r4, r1, r8, lsr #24
   176a4:	andeq	r0, r0, r8, lsr #4
   176a8:	andeq	r0, r0, ip, lsr #4
   176ac:	andeq	r3, r0, r0, asr #26
   176b0:	andeq	r3, r0, r8, ror #22
   176b4:	ldrdeq	r3, [r0], -r0
   176b8:	andeq	r3, r0, ip, lsl #22
   176bc:	strdeq	r2, [r0], -r8
   176c0:	andeq	r2, r0, ip, ror #21
   176c4:	ldr	r3, [r0, #16]
   176c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176cc:	cmp	r3, #0
   176d0:	sub	sp, sp, #12
   176d4:	mov	r8, r2
   176d8:	ldr	r2, [pc, #160]	; 17780 <fputs@plt+0x5150>
   176dc:	mov	r6, r0
   176e0:	mov	r5, r1
   176e4:	add	r2, pc, r2
   176e8:	str	r2, [sp, #4]
   176ec:	beq	17778 <fputs@plt+0x5148>
   176f0:	ldr	sl, [r0, #12]
   176f4:	ands	sl, sl, #24
   176f8:	bne	17778 <fputs@plt+0x5148>
   176fc:	ldr	r2, [r0, #28]
   17700:	add	r3, r0, #28
   17704:	cmp	r2, r3
   17708:	beq	17778 <fputs@plt+0x5148>
   1770c:	mov	r7, r0
   17710:	ldr	r4, [r7, #20]!
   17714:	cmp	r4, r7
   17718:	subne	r9, r8, #1
   1771c:	addne	r9, r1, r9
   17720:	beq	17758 <fputs@plt+0x5128>
   17724:	mov	fp, r4
   17728:	mov	r2, r8
   1772c:	ldr	r1, [fp, #-40]!	; 0xffffffd8
   17730:	mov	r0, r5
   17734:	bl	120cc <strncpy@plt>
   17738:	strb	sl, [r9]
   1773c:	mov	r0, r6
   17740:	mov	r2, r5
   17744:	mov	r1, fp
   17748:	bl	173b8 <fputs@plt+0x4d88>
   1774c:	ldr	r4, [r4]
   17750:	cmp	r7, r4
   17754:	bne	17724 <fputs@plt+0x50f4>
   17758:	ldr	r2, [sp, #4]
   1775c:	mov	r0, #10
   17760:	ldr	r3, [pc, #28]	; 17784 <fputs@plt+0x5154>
   17764:	ldr	r3, [r2, r3]
   17768:	ldr	r1, [r3]
   1776c:	add	sp, sp, #12
   17770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17774:	b	12498 <fputc@plt>
   17778:	add	sp, sp, #12
   1777c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17780:	andeq	r4, r1, r4, lsl r9
   17784:	andeq	r0, r0, ip, lsr #4
   17788:	push	{r4, r5, r6, r7, r8, r9, lr}
   1778c:	mov	r6, r0
   17790:	ldr	r5, [r0]
   17794:	sub	sp, sp, #12
   17798:	ldr	r9, [pc, #112]	; 17810 <fputs@plt+0x51e0>
   1779c:	mov	r8, r1
   177a0:	mov	r7, r2
   177a4:	mov	r3, r5
   177a8:	add	r9, pc, r9
   177ac:	ldr	r4, [r3, #20]!
   177b0:	cmp	r4, r3
   177b4:	beq	177f4 <fputs@plt+0x51c4>
   177b8:	ldr	r1, [r4, #-36]	; 0xffffffdc
   177bc:	sub	r2, r4, #8
   177c0:	mov	r3, r8
   177c4:	mov	r0, r6
   177c8:	str	r7, [sp]
   177cc:	bl	16c4c <fputs@plt+0x461c>
   177d0:	sub	r1, r4, #40	; 0x28
   177d4:	mov	r2, r0
   177d8:	mov	r0, r5
   177dc:	bl	173b8 <fputs@plt+0x4d88>
   177e0:	ldr	r5, [r6]
   177e4:	ldr	r4, [r4]
   177e8:	add	r0, r5, #20
   177ec:	cmp	r4, r0
   177f0:	bne	177b8 <fputs@plt+0x5188>
   177f4:	ldr	r3, [pc, #24]	; 17814 <fputs@plt+0x51e4>
   177f8:	mov	r0, #10
   177fc:	ldr	r3, [r9, r3]
   17800:	ldr	r1, [r3]
   17804:	add	sp, sp, #12
   17808:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1780c:	b	12498 <fputc@plt>
   17810:	andeq	r4, r1, r0, asr r8
   17814:	andeq	r0, r0, ip, lsr #4
   17818:	push	{r3, r4, r5, r6, r7, lr}
   1781c:	mov	r5, r0
   17820:	mov	r7, r1
   17824:	mov	r6, r2
   17828:	bl	17788 <fputs@plt+0x5158>
   1782c:	ldr	r4, [r5, #24]
   17830:	add	r5, r5, #24
   17834:	cmp	r5, r4
   17838:	popeq	{r3, r4, r5, r6, r7, pc}
   1783c:	sub	r0, r4, #32
   17840:	mov	r1, r7
   17844:	mov	r2, r6
   17848:	bl	17818 <fputs@plt+0x51e8>
   1784c:	ldr	r4, [r4]
   17850:	cmp	r5, r4
   17854:	bne	1783c <fputs@plt+0x520c>
   17858:	pop	{r3, r4, r5, r6, r7, pc}
   1785c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17860:	subs	r6, r0, #0
   17864:	sub	sp, sp, #12
   17868:	beq	17c50 <fputs@plt+0x5620>
   1786c:	ldr	r3, [r6, #16]
   17870:	cmp	r3, #0
   17874:	bne	1796c <fputs@plt+0x533c>
   17878:	ldr	r2, [r6, #4]
   1787c:	mov	r4, r6
   17880:	ldr	r3, [r4, #28]!
   17884:	cmp	r3, r4
   17888:	beq	178a0 <fputs@plt+0x5270>
   1788c:	ldmda	r3, {r1, r3}
   17890:	cmp	r2, r1
   17894:	movcc	r2, r1
   17898:	cmp	r3, r4
   1789c:	bne	1788c <fputs@plt+0x525c>
   178a0:	add	r8, r2, #1
   178a4:	mov	r0, r8
   178a8:	bl	12420 <malloc@plt>
   178ac:	subs	r7, r0, #0
   178b0:	beq	17c50 <fputs@plt+0x5620>
   178b4:	ldr	r3, [r6, #16]
   178b8:	cmp	r3, #0
   178bc:	beq	178cc <fputs@plt+0x529c>
   178c0:	ldr	fp, [r6, #12]
   178c4:	ands	fp, fp, #18
   178c8:	beq	179a8 <fputs@plt+0x5378>
   178cc:	ldr	r3, [r6, #12]
   178d0:	mov	r0, r6
   178d4:	mov	r1, r7
   178d8:	mov	r2, r8
   178dc:	tst	r3, #64	; 0x40
   178e0:	beq	17928 <fputs@plt+0x52f8>
   178e4:	bl	176c4 <fputs@plt+0x5094>
   178e8:	ldr	r5, [r6, #28]
   178ec:	cmp	r5, r4
   178f0:	beq	1790c <fputs@plt+0x52dc>
   178f4:	ldr	r3, [r5, #24]
   178f8:	cmp	r3, #0
   178fc:	beq	17958 <fputs@plt+0x5328>
   17900:	ldr	r5, [r5]
   17904:	cmp	r5, r4
   17908:	bne	178f4 <fputs@plt+0x52c4>
   1790c:	mov	r0, r7
   17910:	bl	121e0 <free@plt>
   17914:	mov	r3, #0
   17918:	mov	r0, r3
   1791c:	str	r3, [r6, #16]
   17920:	add	sp, sp, #12
   17924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17928:	bl	176c4 <fputs@plt+0x5094>
   1792c:	ldr	r5, [r6, #28]
   17930:	cmp	r5, r4
   17934:	beq	1790c <fputs@plt+0x52dc>
   17938:	sub	r0, r5, #16
   1793c:	mov	r1, r7
   17940:	mov	r2, r8
   17944:	bl	17788 <fputs@plt+0x5158>
   17948:	ldr	r5, [r5]
   1794c:	cmp	r5, r4
   17950:	bne	17938 <fputs@plt+0x5308>
   17954:	b	1790c <fputs@plt+0x52dc>
   17958:	sub	r0, r5, #16
   1795c:	mov	r1, r7
   17960:	mov	r2, r8
   17964:	bl	17818 <fputs@plt+0x51e8>
   17968:	b	17900 <fputs@plt+0x52d0>
   1796c:	mov	r0, #1
   17970:	bl	12258 <isatty@plt>
   17974:	ldr	r2, [r6, #4]
   17978:	cmp	r0, #0
   1797c:	str	r0, [r6, #8]
   17980:	beq	17998 <fputs@plt+0x5368>
   17984:	cmp	r2, #0
   17988:	bne	1787c <fputs@plt+0x524c>
   1798c:	bl	17e18 <fputs@plt+0x57e8>
   17990:	mov	r2, r0
   17994:	str	r0, [r6, #4]
   17998:	cmp	r2, #0
   1799c:	moveq	r2, #80	; 0x50
   179a0:	streq	r2, [r6, #4]
   179a4:	b	1787c <fputs@plt+0x524c>
   179a8:	mov	r9, r6
   179ac:	mov	sl, fp
   179b0:	ldr	r5, [r9, #20]!
   179b4:	cmp	r5, r9
   179b8:	beq	179f8 <fputs@plt+0x53c8>
   179bc:	sub	r1, r5, #40	; 0x28
   179c0:	mov	r2, r7
   179c4:	mov	r3, r8
   179c8:	mov	r0, r6
   179cc:	bl	16d9c <fputs@plt+0x476c>
   179d0:	ldr	r2, [r5, #-32]	; 0xffffffe0
   179d4:	ldr	r1, [r6, #24]
   179d8:	ldr	r3, [r5, #-4]
   179dc:	cmp	r1, r5
   179e0:	addne	r2, r2, #1
   179e4:	ldr	r5, [r5]
   179e8:	add	sl, sl, r2
   179ec:	add	fp, fp, r3
   179f0:	cmp	r5, r9
   179f4:	bne	179bc <fputs@plt+0x538c>
   179f8:	ldr	r3, [r6, #8]
   179fc:	cmp	r3, #0
   17a00:	beq	178cc <fputs@plt+0x529c>
   17a04:	ldr	r3, [r6, #4]
   17a08:	cmp	r3, sl
   17a0c:	bcs	17a80 <fputs@plt+0x5450>
   17a10:	cmp	fp, #0
   17a14:	ldr	r1, [r6, #20]
   17a18:	beq	17a94 <fputs@plt+0x5464>
   17a1c:	cmp	r1, r9
   17a20:	mov	r5, r1
   17a24:	bne	17a38 <fputs@plt+0x5408>
   17a28:	b	17a94 <fputs@plt+0x5464>
   17a2c:	ldr	r5, [r5]
   17a30:	cmp	r5, r9
   17a34:	beq	17a7c <fputs@plt+0x544c>
   17a38:	ldr	r3, [r5, #-4]
   17a3c:	cmp	r3, #0
   17a40:	beq	17a2c <fputs@plt+0x53fc>
   17a44:	ldr	ip, [r5, #-32]	; 0xffffffe0
   17a48:	mov	r2, r7
   17a4c:	mov	r3, r8
   17a50:	mov	r0, r6
   17a54:	sub	r1, r5, #40	; 0x28
   17a58:	str	ip, [sp, #4]
   17a5c:	bl	16d9c <fputs@plt+0x476c>
   17a60:	ldr	r3, [r5, #-32]	; 0xffffffe0
   17a64:	ldr	ip, [sp, #4]
   17a68:	cmp	ip, r3
   17a6c:	rsb	r2, ip, r3
   17a70:	addhi	sl, sl, r2
   17a74:	subls	fp, fp, #1
   17a78:	b	17a2c <fputs@plt+0x53fc>
   17a7c:	ldr	r3, [r6, #4]
   17a80:	cmp	sl, r3
   17a84:	bcc	17bbc <fputs@plt+0x558c>
   17a88:	cmp	sl, r3
   17a8c:	bls	178cc <fputs@plt+0x529c>
   17a90:	ldr	r1, [r6, #20]
   17a94:	vmov.f64	d6, #112	; 0x3f800000  1.0
   17a98:	mov	r0, #1
   17a9c:	cmp	r1, r9
   17aa0:	beq	17ba8 <fputs@plt+0x5578>
   17aa4:	cmp	r3, sl
   17aa8:	bcs	17ba8 <fputs@plt+0x5578>
   17aac:	mov	ip, r1
   17ab0:	mov	r5, sl
   17ab4:	eor	fp, r0, #1
   17ab8:	b	17b04 <fputs@plt+0x54d4>
   17abc:	vcmpe.f64	d7, d6
   17ac0:	vmrs	APSR_nzcv, fpscr
   17ac4:	ble	17af0 <fputs@plt+0x54c0>
   17ac8:	ldr	r2, [ip, #-32]	; 0xffffffe0
   17acc:	cmp	r2, #0
   17ad0:	beq	17af0 <fputs@plt+0x54c0>
   17ad4:	cmp	r5, #0
   17ad8:	moveq	lr, #0
   17adc:	andne	lr, fp, #1
   17ae0:	cmp	lr, #0
   17ae4:	subne	r5, r5, #1
   17ae8:	subne	r2, r2, #1
   17aec:	strne	r2, [ip, #-32]	; 0xffffffe0
   17af0:	ldr	ip, [ip]
   17af4:	cmp	ip, r9
   17af8:	beq	17b90 <fputs@plt+0x5560>
   17afc:	cmp	r5, r3
   17b00:	bls	17b90 <fputs@plt+0x5560>
   17b04:	vldr	d7, [ip, #-16]
   17b08:	vcmpe.f64	d7, d6
   17b0c:	ldr	lr, [ip, #-8]
   17b10:	vmrs	APSR_nzcv, fpscr
   17b14:	ble	17b20 <fputs@plt+0x54f0>
   17b18:	tst	lr, #32
   17b1c:	beq	17af0 <fputs@plt+0x54c0>
   17b20:	tst	lr, #64	; 0x40
   17b24:	bne	17af0 <fputs@plt+0x54c0>
   17b28:	cmp	r0, #0
   17b2c:	beq	17b38 <fputs@plt+0x5508>
   17b30:	tst	lr, #32
   17b34:	beq	17af0 <fputs@plt+0x54c0>
   17b38:	ldr	r2, [ip, #-32]	; 0xffffffe0
   17b3c:	ldr	lr, [ip, #-28]	; 0xffffffe4
   17b40:	cmp	r2, lr
   17b44:	beq	17af0 <fputs@plt+0x54c0>
   17b48:	vcmpe.f64	d7, d6
   17b4c:	vmrs	APSR_nzcv, fpscr
   17b50:	bpl	17abc <fputs@plt+0x548c>
   17b54:	cmp	r2, #0
   17b58:	beq	17abc <fputs@plt+0x548c>
   17b5c:	cmp	r5, #0
   17b60:	beq	17abc <fputs@plt+0x548c>
   17b64:	vmov	s7, r3
   17b68:	vcvt.f64.u32	d5, s7
   17b6c:	vmov	s7, r2
   17b70:	vmul.f64	d5, d7, d5
   17b74:	vcvt.f64.u32	d4, s7
   17b78:	vcmpe.f64	d4, d5
   17b7c:	vmrs	APSR_nzcv, fpscr
   17b80:	subgt	r2, r2, #1
   17b84:	subgt	r5, r5, #1
   17b88:	strgt	r2, [ip, #-32]	; 0xffffffe0
   17b8c:	b	17abc <fputs@plt+0x548c>
   17b90:	cmp	r5, sl
   17b94:	beq	17bac <fputs@plt+0x557c>
   17b98:	cmp	r5, r3
   17b9c:	bls	178cc <fputs@plt+0x529c>
   17ba0:	mov	sl, r5
   17ba4:	b	17a9c <fputs@plt+0x546c>
   17ba8:	mov	r5, sl
   17bac:	cmp	r0, #0
   17bb0:	beq	178cc <fputs@plt+0x529c>
   17bb4:	mov	r0, #0
   17bb8:	b	17b98 <fputs@plt+0x5568>
   17bbc:	cmp	fp, #0
   17bc0:	beq	17c2c <fputs@plt+0x55fc>
   17bc4:	ldr	r2, [r6, #20]
   17bc8:	cmp	r2, r9
   17bcc:	bne	17bf4 <fputs@plt+0x55c4>
   17bd0:	b	17c2c <fputs@plt+0x55fc>
   17bd4:	ldr	r0, [r2, #-32]	; 0xffffffe0
   17bd8:	add	sl, sl, r1
   17bdc:	str	r0, [r2, #-32]	; 0xffffffe0
   17be0:	cmp	sl, r3
   17be4:	beq	178cc <fputs@plt+0x529c>
   17be8:	ldr	r2, [r2]
   17bec:	cmp	r2, r9
   17bf0:	beq	17c24 <fputs@plt+0x55f4>
   17bf4:	ldr	r1, [r2, #-4]
   17bf8:	cmp	r1, #0
   17bfc:	beq	17be8 <fputs@plt+0x55b8>
   17c00:	subs	r1, r3, sl
   17c04:	beq	17bd4 <fputs@plt+0x55a4>
   17c08:	ldr	lr, [r2, #-32]	; 0xffffffe0
   17c0c:	ldr	ip, [r2, #-24]	; 0xffffffe8
   17c10:	add	r0, r1, lr
   17c14:	cmp	r0, ip
   17c18:	rsbhi	r1, lr, ip
   17c1c:	movhi	r0, ip
   17c20:	b	17bd8 <fputs@plt+0x55a8>
   17c24:	cmp	sl, r3
   17c28:	bcs	17a88 <fputs@plt+0x5458>
   17c2c:	ldr	r2, [r6, #24]
   17c30:	ldr	r1, [r2, #-8]
   17c34:	tst	r1, #128	; 0x80
   17c38:	bne	17a88 <fputs@plt+0x5458>
   17c3c:	ldr	r1, [r2, #-32]	; 0xffffffe0
   17c40:	add	r3, r3, r1
   17c44:	rsb	sl, sl, r3
   17c48:	str	sl, [r2, #-32]	; 0xffffffe0
   17c4c:	b	178cc <fputs@plt+0x529c>
   17c50:	mvn	r0, #0
   17c54:	b	17920 <fputs@plt+0x52f0>
   17c58:	ldr	r3, [pc, #164]	; 17d04 <fputs@plt+0x56d4>
   17c5c:	ldr	r2, [pc, #164]	; 17d08 <fputs@plt+0x56d8>
   17c60:	add	r3, pc, r3
   17c64:	push	{r4, r5, r6, r7, r8, lr}
   17c68:	sub	sp, sp, #8
   17c6c:	ldr	r5, [r3, r2]
   17c70:	ldr	r3, [r5]
   17c74:	str	r3, [sp, #4]
   17c78:	bl	120e4 <getenv@plt>
   17c7c:	subs	r8, r0, #0
   17c80:	beq	17cf8 <fputs@plt+0x56c8>
   17c84:	add	r4, sp, #8
   17c88:	mov	r7, #0
   17c8c:	str	r7, [r4, #-8]!
   17c90:	bl	1260c <__errno_location@plt>
   17c94:	mov	r1, sp
   17c98:	mov	r2, #10
   17c9c:	mov	r6, r0
   17ca0:	mov	r0, r8
   17ca4:	str	r7, [r6]
   17ca8:	bl	1233c <strtol@plt>
   17cac:	ldr	r3, [r6]
   17cb0:	cmp	r3, r7
   17cb4:	bne	17cf8 <fputs@plt+0x56c8>
   17cb8:	ldr	r3, [sp]
   17cbc:	cmp	r3, r7
   17cc0:	beq	17cf8 <fputs@plt+0x56c8>
   17cc4:	ldrsb	r2, [r3]
   17cc8:	cmp	r2, r7
   17ccc:	bne	17cf8 <fputs@plt+0x56c8>
   17cd0:	cmp	r8, r3
   17cd4:	bcs	17cf8 <fputs@plt+0x56c8>
   17cd8:	cmp	r0, r7
   17cdc:	ble	17cf8 <fputs@plt+0x56c8>
   17ce0:	ldr	r2, [sp, #4]
   17ce4:	ldr	r3, [r5]
   17ce8:	cmp	r2, r3
   17cec:	bne	17d00 <fputs@plt+0x56d0>
   17cf0:	add	sp, sp, #8
   17cf4:	pop	{r4, r5, r6, r7, r8, pc}
   17cf8:	mvn	r0, #0
   17cfc:	b	17ce0 <fputs@plt+0x56b0>
   17d00:	bl	12444 <__stack_chk_fail@plt>
   17d04:	muleq	r1, r8, r3
   17d08:	andeq	r0, r0, r8, lsr #4
   17d0c:	ldr	r3, [pc, #244]	; 17e08 <fputs@plt+0x57d8>
   17d10:	ldr	ip, [pc, #244]	; 17e0c <fputs@plt+0x57dc>
   17d14:	add	r3, pc, r3
   17d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d1c:	sub	sp, sp, #20
   17d20:	ldr	r5, [r3, ip]
   17d24:	mov	r9, r0
   17d28:	mov	r8, r1
   17d2c:	mov	r0, #1
   17d30:	movw	r1, #21523	; 0x5413
   17d34:	add	r2, sp, #4
   17d38:	ldr	r3, [r5]
   17d3c:	str	r3, [sp, #12]
   17d40:	bl	1224c <ioctl@plt>
   17d44:	cmp	r0, #0
   17d48:	bne	17db0 <fputs@plt+0x5780>
   17d4c:	ldrh	sl, [sp, #6]
   17d50:	ldrh	r4, [sp, #4]
   17d54:	rsbs	r3, sl, #1
   17d58:	movcc	r3, #0
   17d5c:	rsbs	fp, r4, #1
   17d60:	movcc	fp, #0
   17d64:	adds	r7, r9, #0
   17d68:	movne	r7, #1
   17d6c:	tst	r3, r7
   17d70:	bne	17dd0 <fputs@plt+0x57a0>
   17d74:	adds	r6, r8, #0
   17d78:	movne	r6, #1
   17d7c:	tst	fp, r6
   17d80:	bne	17df0 <fputs@plt+0x57c0>
   17d84:	ldr	r2, [sp, #12]
   17d88:	cmp	r7, #0
   17d8c:	ldr	r3, [r5]
   17d90:	mov	r0, #0
   17d94:	strne	sl, [r9]
   17d98:	cmp	r6, #0
   17d9c:	strne	r4, [r8]
   17da0:	cmp	r2, r3
   17da4:	bne	17e04 <fputs@plt+0x57d4>
   17da8:	add	sp, sp, #20
   17dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17db0:	adds	r7, r9, #0
   17db4:	mov	fp, #1
   17db8:	mov	r3, fp
   17dbc:	mov	r4, #0
   17dc0:	movne	r7, #1
   17dc4:	tst	r3, r7
   17dc8:	mov	sl, r4
   17dcc:	beq	17d74 <fputs@plt+0x5744>
   17dd0:	ldr	r0, [pc, #56]	; 17e10 <fputs@plt+0x57e0>
   17dd4:	add	r0, pc, r0
   17dd8:	bl	17c58 <fputs@plt+0x5628>
   17ddc:	adds	r6, r8, #0
   17de0:	movne	r6, #1
   17de4:	tst	fp, r6
   17de8:	mov	sl, r0
   17dec:	beq	17d84 <fputs@plt+0x5754>
   17df0:	ldr	r0, [pc, #28]	; 17e14 <fputs@plt+0x57e4>
   17df4:	add	r0, pc, r0
   17df8:	bl	17c58 <fputs@plt+0x5628>
   17dfc:	mov	r4, r0
   17e00:	b	17d84 <fputs@plt+0x5754>
   17e04:	bl	12444 <__stack_chk_fail@plt>
   17e08:	andeq	r4, r1, r4, ror #5
   17e0c:	andeq	r0, r0, r8, lsr #4
   17e10:	andeq	r2, r0, ip, lsr #21
   17e14:	muleq	r0, r8, r3
   17e18:	ldr	r3, [pc, #204]	; 17eec <fputs@plt+0x58bc>
   17e1c:	mov	r0, #0
   17e20:	ldr	ip, [pc, #200]	; 17ef0 <fputs@plt+0x58c0>
   17e24:	movw	r1, #21523	; 0x5413
   17e28:	add	r3, pc, r3
   17e2c:	push	{r4, r5, r6, r7, r8, lr}
   17e30:	sub	sp, sp, #16
   17e34:	ldr	r4, [r3, ip]
   17e38:	add	r2, sp, #4
   17e3c:	ldr	r3, [r4]
   17e40:	str	r3, [sp, #12]
   17e44:	bl	1224c <ioctl@plt>
   17e48:	cmp	r0, #0
   17e4c:	bne	17e6c <fputs@plt+0x583c>
   17e50:	ldrh	r0, [sp, #6]
   17e54:	ldr	r2, [sp, #12]
   17e58:	ldr	r3, [r4]
   17e5c:	cmp	r2, r3
   17e60:	bne	17ee8 <fputs@plt+0x58b8>
   17e64:	add	sp, sp, #16
   17e68:	pop	{r4, r5, r6, r7, r8, pc}
   17e6c:	ldr	r0, [pc, #128]	; 17ef4 <fputs@plt+0x58c4>
   17e70:	add	r0, pc, r0
   17e74:	bl	120e4 <getenv@plt>
   17e78:	subs	r8, r0, #0
   17e7c:	moveq	r0, r8
   17e80:	beq	17e54 <fputs@plt+0x5824>
   17e84:	add	r5, sp, #16
   17e88:	mov	r7, #0
   17e8c:	str	r7, [r5, #-16]!
   17e90:	bl	1260c <__errno_location@plt>
   17e94:	mov	r1, sp
   17e98:	mov	r2, #10
   17e9c:	mov	r6, r0
   17ea0:	mov	r0, r8
   17ea4:	str	r7, [r6]
   17ea8:	bl	1233c <strtol@plt>
   17eac:	ldr	r3, [r6]
   17eb0:	cmp	r3, r7
   17eb4:	bne	17ee0 <fputs@plt+0x58b0>
   17eb8:	ldr	r3, [sp]
   17ebc:	cmp	r3, r7
   17ec0:	beq	17ee0 <fputs@plt+0x58b0>
   17ec4:	ldrsb	r2, [r3]
   17ec8:	cmp	r2, r7
   17ecc:	bne	17ee0 <fputs@plt+0x58b0>
   17ed0:	cmp	r8, r3
   17ed4:	bcs	17ee0 <fputs@plt+0x58b0>
   17ed8:	cmp	r0, r7
   17edc:	bgt	17e54 <fputs@plt+0x5824>
   17ee0:	mov	r0, #0
   17ee4:	b	17e54 <fputs@plt+0x5824>
   17ee8:	bl	12444 <__stack_chk_fail@plt>
   17eec:	ldrdeq	r4, [r1], -r0
   17ef0:	andeq	r0, r0, r8, lsr #4
   17ef4:	andeq	r2, r0, r0, lsl sl
   17ef8:	push	{r3, r4, r5, r6, r7, lr}
   17efc:	subs	r7, r2, #0
   17f00:	mov	r5, r3
   17f04:	mov	r4, r1
   17f08:	movne	r3, #0
   17f0c:	strne	r3, [r7]
   17f10:	cmp	r1, #0
   17f14:	movne	r3, #0
   17f18:	strne	r3, [r1]
   17f1c:	cmp	r5, #0
   17f20:	movne	r3, #0
   17f24:	strne	r3, [r5]
   17f28:	bl	120f0 <ttyname@plt>
   17f2c:	subs	r6, r0, #0
   17f30:	beq	17fcc <fputs@plt+0x599c>
   17f34:	ldr	r1, [pc, #152]	; 17fd4 <fputs@plt+0x59a4>
   17f38:	cmp	r4, #0
   17f3c:	mov	r0, r6
   17f40:	strne	r6, [r4]
   17f44:	add	r1, pc, r1
   17f48:	mov	r2, #5
   17f4c:	bl	12594 <strncmp@plt>
   17f50:	cmp	r0, #0
   17f54:	addeq	r6, r6, #5
   17f58:	cmp	r7, #0
   17f5c:	strne	r6, [r7]
   17f60:	cmp	r5, #0
   17f64:	beq	17fc4 <fputs@plt+0x5994>
   17f68:	cmp	r6, #0
   17f6c:	beq	17fc4 <fputs@plt+0x5994>
   17f70:	ldrb	r4, [r6]
   17f74:	cmp	r4, #0
   17f78:	beq	17fc4 <fputs@plt+0x5994>
   17f7c:	bl	12408 <__ctype_b_loc@plt>
   17f80:	mov	r2, r6
   17f84:	ldr	r3, [r0]
   17f88:	b	17fa0 <fputs@plt+0x5970>
   17f8c:	cmn	r2, #1
   17f90:	beq	17fc4 <fputs@plt+0x5994>
   17f94:	ldrb	r4, [r2, #1]!
   17f98:	cmp	r4, #0
   17f9c:	beq	17fc4 <fputs@plt+0x5994>
   17fa0:	sxtb	r4, r4
   17fa4:	sxth	r4, r4
   17fa8:	lsl	r4, r4, #1
   17fac:	ldrh	r4, [r3, r4]
   17fb0:	and	r4, r4, #2048	; 0x800
   17fb4:	uxth	r4, r4
   17fb8:	cmp	r4, #0
   17fbc:	beq	17f8c <fputs@plt+0x595c>
   17fc0:	str	r2, [r5]
   17fc4:	mov	r0, #0
   17fc8:	pop	{r3, r4, r5, r6, r7, pc}
   17fcc:	mvn	r0, #0
   17fd0:	pop	{r3, r4, r5, r6, r7, pc}
   17fd4:	andeq	r2, r0, r4, ror #18
   17fd8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   17fdc:	mov	r6, r0
   17fe0:	ldr	r0, [r0]
   17fe4:	mov	r7, r1
   17fe8:	cmp	r0, #0
   17fec:	beq	18058 <fputs@plt+0x5a28>
   17ff0:	add	r4, r6, #4
   17ff4:	mov	r5, r6
   17ff8:	mov	r9, #0
   17ffc:	movw	r8, #65533	; 0xfffd
   18000:	b	18014 <fputs@plt+0x59e4>
   18004:	ldr	r0, [r5, #4]!
   18008:	mov	r9, r3
   1800c:	cmp	r0, #0
   18010:	beq	1804c <fputs@plt+0x5a1c>
   18014:	bl	12588 <wcwidth@plt>
   18018:	mov	r6, r5
   1801c:	mov	r2, r4
   18020:	add	r4, r4, #4
   18024:	cmn	r0, #1
   18028:	streq	r8, [r4, #-8]
   1802c:	moveq	r0, #1
   18030:	add	r3, r0, r9
   18034:	cmp	r3, r7
   18038:	bls	18004 <fputs@plt+0x59d4>
   1803c:	mov	r3, #0
   18040:	mov	r0, r9
   18044:	str	r3, [r6]
   18048:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1804c:	mov	r9, r3
   18050:	mov	r6, r2
   18054:	b	1803c <fputs@plt+0x5a0c>
   18058:	mov	r9, r0
   1805c:	b	1803c <fputs@plt+0x5a0c>
   18060:	ldr	r3, [pc, #440]	; 18220 <fputs@plt+0x5bf0>
   18064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18068:	subs	r4, r0, #0
   1806c:	ldr	r0, [pc, #432]	; 18224 <fputs@plt+0x5bf4>
   18070:	sub	sp, sp, #28
   18074:	add	r3, pc, r3
   18078:	add	r8, sp, #12
   1807c:	str	r2, [sp, #4]
   18080:	mov	r5, #0
   18084:	ldr	r0, [r3, r0]
   18088:	str	r5, [r8, #4]
   1808c:	str	r5, [sp, #12]
   18090:	ldr	r3, [r0]
   18094:	str	r0, [sp]
   18098:	str	r3, [sp, #20]
   1809c:	beq	18208 <fputs@plt+0x5bd8>
   180a0:	ldrb	sl, [r4]
   180a4:	cmp	sl, r5
   180a8:	moveq	r5, sl
   180ac:	moveq	r6, r5
   180b0:	beq	18184 <fputs@plt+0x5b54>
   180b4:	cmp	r1, r5
   180b8:	beq	18200 <fputs@plt+0x5bd0>
   180bc:	sub	r1, r1, #1
   180c0:	adds	r7, r4, r1
   180c4:	bcs	18214 <fputs@plt+0x5be4>
   180c8:	mov	r5, #0
   180cc:	add	r9, sp, #8
   180d0:	mov	r6, r5
   180d4:	b	18100 <fputs@plt+0x5ad0>
   180d8:	add	r4, r4, #1
   180dc:	add	r6, r6, #4
   180e0:	cmp	r4, #0
   180e4:	add	r5, r5, #4
   180e8:	beq	18184 <fputs@plt+0x5b54>
   180ec:	ldrb	sl, [r4]
   180f0:	cmp	sl, #0
   180f4:	beq	18184 <fputs@plt+0x5b54>
   180f8:	cmp	r4, r7
   180fc:	bhi	18184 <fputs@plt+0x5b54>
   18100:	cmp	r4, r7
   18104:	bcs	18110 <fputs@plt+0x5ae0>
   18108:	cmp	sl, #92	; 0x5c
   1810c:	beq	181b0 <fputs@plt+0x5b80>
   18110:	bl	12408 <__ctype_b_loc@plt>
   18114:	lsl	r3, sl, #1
   18118:	ldr	r2, [r0]
   1811c:	mov	fp, r0
   18120:	ldrh	r3, [r2, r3]
   18124:	tst	r3, #2
   18128:	bne	180d8 <fputs@plt+0x5aa8>
   1812c:	bl	1209c <__ctype_get_mb_cur_max@plt>
   18130:	mov	r1, r4
   18134:	mov	r3, r8
   18138:	mov	r2, r0
   1813c:	mov	r0, r9
   18140:	bl	12198 <mbrtowc@plt>
   18144:	subs	sl, r0, #0
   18148:	beq	18184 <fputs@plt+0x5b54>
   1814c:	add	r2, sl, #2
   18150:	cmp	r2, #1
   18154:	bls	181c0 <fputs@plt+0x5b90>
   18158:	ldr	fp, [sp, #8]
   1815c:	mov	r0, fp
   18160:	bl	125b8 <iswprint@plt>
   18164:	cmp	r0, #0
   18168:	bne	181ec <fputs@plt+0x5bbc>
   1816c:	lsl	r2, sl, #2
   18170:	add	r6, r6, r2
   18174:	add	r5, r5, r2
   18178:	add	r4, r4, sl
   1817c:	cmp	r4, #0
   18180:	bne	180ec <fputs@plt+0x5abc>
   18184:	ldr	r3, [sp, #4]
   18188:	mov	r0, r6
   1818c:	ldr	r1, [sp]
   18190:	cmp	r3, #0
   18194:	ldr	r2, [sp, #20]
   18198:	strne	r5, [r3]
   1819c:	ldr	r3, [r1]
   181a0:	cmp	r2, r3
   181a4:	bne	1821c <fputs@plt+0x5bec>
   181a8:	add	sp, sp, #28
   181ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181b0:	ldrsb	r2, [r4, #1]
   181b4:	cmp	r2, #120	; 0x78
   181b8:	bne	18110 <fputs@plt+0x5ae0>
   181bc:	b	180d8 <fputs@plt+0x5aa8>
   181c0:	ldrb	r3, [r4]
   181c4:	mov	sl, #1
   181c8:	ldr	r2, [fp]
   181cc:	lsl	r3, r3, #1
   181d0:	ldrh	r3, [r2, r3]
   181d4:	tst	r3, #16384	; 0x4000
   181d8:	addne	r6, r6, #1
   181dc:	addne	r5, r5, #1
   181e0:	addeq	r6, r6, #4
   181e4:	addeq	r5, r5, #4
   181e8:	b	18178 <fputs@plt+0x5b48>
   181ec:	mov	r0, fp
   181f0:	add	r5, r5, sl
   181f4:	bl	12588 <wcwidth@plt>
   181f8:	add	r6, r6, r0
   181fc:	b	18178 <fputs@plt+0x5b48>
   18200:	mov	r7, r4
   18204:	b	180c8 <fputs@plt+0x5a98>
   18208:	mov	r5, r4
   1820c:	mov	r6, r4
   18210:	b	18184 <fputs@plt+0x5b54>
   18214:	mov	r6, r5
   18218:	b	18184 <fputs@plt+0x5b54>
   1821c:	bl	12444 <__stack_chk_fail@plt>
   18220:	andeq	r3, r1, r4, lsl #31
   18224:	andeq	r0, r0, r8, lsr #4
   18228:	push	{r4, lr}
   1822c:	subs	r4, r0, #0
   18230:	beq	18240 <fputs@plt+0x5c10>
   18234:	ldrsb	r3, [r4]
   18238:	cmp	r3, #0
   1823c:	bne	18248 <fputs@plt+0x5c18>
   18240:	mov	r0, #0
   18244:	pop	{r4, pc}
   18248:	bl	12294 <strlen@plt>
   1824c:	mov	r2, #0
   18250:	mov	r1, r0
   18254:	mov	r0, r4
   18258:	pop	{r4, lr}
   1825c:	b	18060 <fputs@plt+0x5a30>
   18260:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18264:	sub	sp, sp, #52	; 0x34
   18268:	ldr	r5, [pc, #664]	; 18508 <fputs@plt+0x5ed8>
   1826c:	mov	r8, r3
   18270:	ldr	ip, [pc, #660]	; 1850c <fputs@plt+0x5edc>
   18274:	subs	r4, r0, #0
   18278:	add	r5, pc, r5
   1827c:	str	r2, [sp, #12]
   18280:	mov	r6, r1
   18284:	ldr	ip, [r5, ip]
   18288:	mov	r3, r5
   1828c:	ldr	r3, [ip]
   18290:	str	ip, [sp, #20]
   18294:	str	r3, [sp, #44]	; 0x2c
   18298:	beq	184ec <fputs@plt+0x5ebc>
   1829c:	bl	12294 <strlen@plt>
   182a0:	ldr	r2, [sp, #12]
   182a4:	mov	r3, #0
   182a8:	add	r1, sp, #36	; 0x24
   182ac:	str	r3, [sp, #36]	; 0x24
   182b0:	str	r1, [sp, #16]
   182b4:	str	r3, [sp, #40]	; 0x28
   182b8:	cmp	r2, r3
   182bc:	cmpne	r0, r3
   182c0:	movne	r0, #0
   182c4:	moveq	r0, #1
   182c8:	moveq	r0, r3
   182cc:	beq	183b8 <fputs@plt+0x5d88>
   182d0:	str	r0, [r6]
   182d4:	ldrb	sl, [r4]
   182d8:	cmp	sl, r3
   182dc:	beq	184fc <fputs@plt+0x5ecc>
   182e0:	ldr	r3, [pc, #552]	; 18510 <fputs@plt+0x5ee0>
   182e4:	mov	r5, r2
   182e8:	ldr	r9, [pc, #548]	; 18514 <fputs@plt+0x5ee4>
   182ec:	add	r1, sp, #32
   182f0:	ldr	r2, [pc, #544]	; 18518 <fputs@plt+0x5ee8>
   182f4:	add	r3, pc, r3
   182f8:	str	r1, [sp, #24]
   182fc:	add	r9, pc, r9
   18300:	add	r2, pc, r2
   18304:	str	r3, [sp, #8]
   18308:	str	r2, [sp, #28]
   1830c:	b	18330 <fputs@plt+0x5d00>
   18310:	strb	sl, [r5]
   18314:	add	r4, r4, #1
   18318:	add	r5, r5, #1
   1831c:	cmp	r4, #0
   18320:	beq	183ac <fputs@plt+0x5d7c>
   18324:	ldrb	sl, [r4]
   18328:	cmp	sl, #0
   1832c:	beq	183ac <fputs@plt+0x5d7c>
   18330:	cmp	r8, #0
   18334:	sxtb	r7, sl
   18338:	beq	18350 <fputs@plt+0x5d20>
   1833c:	mov	r0, r8
   18340:	mov	r1, r7
   18344:	bl	12114 <strchr@plt>
   18348:	cmp	r0, #0
   1834c:	bne	18310 <fputs@plt+0x5ce0>
   18350:	cmp	r7, #92	; 0x5c
   18354:	beq	183d4 <fputs@plt+0x5da4>
   18358:	bl	12408 <__ctype_b_loc@plt>
   1835c:	uxtb	sl, sl
   18360:	lsl	r3, sl, #1
   18364:	ldr	r2, [r0]
   18368:	mov	r7, r0
   1836c:	ldrh	r3, [r2, r3]
   18370:	tst	r3, #2
   18374:	beq	183e8 <fputs@plt+0x5db8>
   18378:	ldr	r3, [sp, #8]
   1837c:	mov	r0, r5
   18380:	mov	r1, #1
   18384:	mvn	r2, #0
   18388:	str	sl, [sp]
   1838c:	add	r4, r4, r1
   18390:	bl	12564 <__sprintf_chk@plt>
   18394:	ldr	r3, [r6]
   18398:	cmp	r4, #0
   1839c:	add	r5, r5, #4
   183a0:	add	r3, r3, #4
   183a4:	str	r3, [r6]
   183a8:	bne	18324 <fputs@plt+0x5cf4>
   183ac:	ldr	r0, [sp, #12]
   183b0:	mov	r3, #0
   183b4:	strb	r3, [r5]
   183b8:	ldr	r1, [sp, #20]
   183bc:	ldr	r2, [sp, #44]	; 0x2c
   183c0:	ldr	r3, [r1]
   183c4:	cmp	r2, r3
   183c8:	bne	18504 <fputs@plt+0x5ed4>
   183cc:	add	sp, sp, #52	; 0x34
   183d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183d4:	ldrsb	r3, [r4, #1]
   183d8:	cmp	r3, #120	; 0x78
   183dc:	bne	18358 <fputs@plt+0x5d28>
   183e0:	mov	sl, r7
   183e4:	b	18378 <fputs@plt+0x5d48>
   183e8:	bl	1209c <__ctype_get_mb_cur_max@plt>
   183ec:	mov	r1, r4
   183f0:	add	r3, sp, #36	; 0x24
   183f4:	mov	r2, r0
   183f8:	add	r0, sp, #32
   183fc:	bl	12198 <mbrtowc@plt>
   18400:	subs	sl, r0, #0
   18404:	beq	183ac <fputs@plt+0x5d7c>
   18408:	add	r3, sl, #2
   1840c:	cmp	r3, #1
   18410:	bls	18470 <fputs@plt+0x5e40>
   18414:	ldr	r7, [sp, #32]
   18418:	mov	r0, r7
   1841c:	bl	125b8 <iswprint@plt>
   18420:	cmp	r0, #0
   18424:	bne	184a4 <fputs@plt+0x5e74>
   18428:	mov	r7, r4
   1842c:	add	r4, r4, sl
   18430:	mov	fp, r5
   18434:	ldrb	ip, [r7], #1
   18438:	mov	r0, fp
   1843c:	mov	r3, r9
   18440:	mov	r1, #1
   18444:	mvn	r2, #0
   18448:	add	fp, fp, #4
   1844c:	str	ip, [sp]
   18450:	bl	12564 <__sprintf_chk@plt>
   18454:	ldr	r3, [r6]
   18458:	cmp	r7, r4
   1845c:	add	r3, r3, #4
   18460:	str	r3, [r6]
   18464:	bne	18434 <fputs@plt+0x5e04>
   18468:	add	r5, r5, sl, lsl #2
   1846c:	b	1831c <fputs@plt+0x5cec>
   18470:	ldrb	r3, [r4]
   18474:	ldr	r1, [r7]
   18478:	lsl	r2, r3, #1
   1847c:	ldrh	r2, [r1, r2]
   18480:	tst	r2, #16384	; 0x4000
   18484:	beq	184d4 <fputs@plt+0x5ea4>
   18488:	ldr	r3, [r6]
   1848c:	add	r5, r5, #1
   18490:	add	r3, r3, #1
   18494:	str	r3, [r6]
   18498:	ldrb	r3, [r4], #1
   1849c:	strb	r3, [r5, #-1]
   184a0:	b	1831c <fputs@plt+0x5cec>
   184a4:	mov	r1, r4
   184a8:	mov	r0, r5
   184ac:	mov	r2, sl
   184b0:	add	r5, r5, sl
   184b4:	bl	122c4 <memcpy@plt>
   184b8:	mov	r0, r7
   184bc:	ldr	r7, [r6]
   184c0:	bl	12588 <wcwidth@plt>
   184c4:	add	r4, sl, r4
   184c8:	add	r0, r0, r7
   184cc:	str	r0, [r6]
   184d0:	b	1831c <fputs@plt+0x5cec>
   184d4:	str	r3, [sp]
   184d8:	mov	r0, r5
   184dc:	mov	r1, #1
   184e0:	mvn	r2, #0
   184e4:	ldr	r3, [sp, #28]
   184e8:	b	1838c <fputs@plt+0x5d5c>
   184ec:	str	r4, [sp, #36]	; 0x24
   184f0:	mov	r0, r4
   184f4:	str	r4, [sp, #40]	; 0x28
   184f8:	b	183b8 <fputs@plt+0x5d88>
   184fc:	ldr	r5, [sp, #12]
   18500:	b	183ac <fputs@plt+0x5d7c>
   18504:	bl	12444 <__stack_chk_fail@plt>
   18508:	andeq	r3, r1, r0, lsl #27
   1850c:	andeq	r0, r0, r8, lsr #4
   18510:	andeq	r2, r0, ip, asr lr
   18514:	andeq	r2, r0, r4, asr lr
   18518:	andeq	r2, r0, r0, asr lr
   1851c:	ldr	r3, [pc, #492]	; 18710 <fputs@plt+0x60e0>
   18520:	ldr	ip, [pc, #492]	; 18714 <fputs@plt+0x60e4>
   18524:	add	r3, pc, r3
   18528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1852c:	subs	r4, r0, #0
   18530:	ldr	ip, [r3, ip]
   18534:	sub	sp, sp, #44	; 0x2c
   18538:	mov	r6, r1
   1853c:	mov	r9, r2
   18540:	ldr	r3, [ip]
   18544:	str	ip, [sp, #12]
   18548:	str	r3, [sp, #36]	; 0x24
   1854c:	beq	186f4 <fputs@plt+0x60c4>
   18550:	bl	12294 <strlen@plt>
   18554:	add	r7, sp, #28
   18558:	mov	r3, #0
   1855c:	str	r3, [sp, #28]
   18560:	str	r3, [r7, #4]
   18564:	cmp	r9, r3
   18568:	cmpne	r0, r3
   1856c:	movne	r0, #0
   18570:	moveq	r0, #1
   18574:	moveq	r0, r3
   18578:	beq	1867c <fputs@plt+0x604c>
   1857c:	str	r0, [r6]
   18580:	ldrsb	r3, [r4]
   18584:	cmp	r3, #0
   18588:	beq	18704 <fputs@plt+0x60d4>
   1858c:	ldr	r1, [pc, #388]	; 18718 <fputs@plt+0x60e8>
   18590:	add	r8, sp, #24
   18594:	ldr	r2, [pc, #384]	; 1871c <fputs@plt+0x60ec>
   18598:	mov	r5, r9
   1859c:	add	r1, pc, r1
   185a0:	str	r1, [sp, #20]
   185a4:	add	r2, pc, r2
   185a8:	str	r2, [sp, #16]
   185ac:	b	18604 <fputs@plt+0x5fd4>
   185b0:	ldrsb	r3, [r4]
   185b4:	cmp	r3, #92	; 0x5c
   185b8:	bne	185c8 <fputs@plt+0x5f98>
   185bc:	ldrsb	r2, [r4, #1]
   185c0:	cmp	r2, #120	; 0x78
   185c4:	beq	186c8 <fputs@plt+0x6098>
   185c8:	mov	r0, r5
   185cc:	mov	r1, r4
   185d0:	mov	r2, sl
   185d4:	add	r5, r5, sl
   185d8:	bl	122c4 <memcpy@plt>
   185dc:	ldr	r0, [sp, #24]
   185e0:	ldr	fp, [r6]
   185e4:	bl	12588 <wcwidth@plt>
   185e8:	add	r0, r0, fp
   185ec:	str	r0, [r6]
   185f0:	adds	r4, r4, sl
   185f4:	beq	18670 <fputs@plt+0x6040>
   185f8:	ldrsb	r3, [r4]
   185fc:	cmp	r3, #0
   18600:	beq	18670 <fputs@plt+0x6040>
   18604:	bl	1209c <__ctype_get_mb_cur_max@plt>
   18608:	mov	r1, r4
   1860c:	mov	r3, r7
   18610:	mov	r2, r0
   18614:	mov	r0, r8
   18618:	bl	12198 <mbrtowc@plt>
   1861c:	subs	sl, r0, #0
   18620:	beq	18670 <fputs@plt+0x6040>
   18624:	add	r3, sl, #2
   18628:	cmp	r3, #1
   1862c:	bhi	185b0 <fputs@plt+0x5f80>
   18630:	bl	12408 <__ctype_b_loc@plt>
   18634:	ldrb	r3, [r4]
   18638:	lsl	r2, r3, #1
   1863c:	ldr	r1, [r0]
   18640:	ldrh	r2, [r1, r2]
   18644:	tst	r2, #16384	; 0x4000
   18648:	beq	18698 <fputs@plt+0x6068>
   1864c:	ldr	r3, [r6]
   18650:	mov	sl, #1
   18654:	add	r3, r3, sl
   18658:	str	r3, [r6]
   1865c:	ldrb	r3, [r4]
   18660:	adds	r4, r4, sl
   18664:	strb	r3, [r5]
   18668:	add	r5, r5, sl
   1866c:	bne	185f8 <fputs@plt+0x5fc8>
   18670:	mov	r0, r9
   18674:	mov	r3, #0
   18678:	strb	r3, [r5]
   1867c:	ldr	r1, [sp, #12]
   18680:	ldr	r2, [sp, #36]	; 0x24
   18684:	ldr	r3, [r1]
   18688:	cmp	r2, r3
   1868c:	bne	1870c <fputs@plt+0x60dc>
   18690:	add	sp, sp, #44	; 0x2c
   18694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18698:	str	r3, [sp]
   1869c:	mov	r0, r5
   186a0:	ldr	r3, [sp, #16]
   186a4:	mov	r1, #1
   186a8:	mvn	r2, #0
   186ac:	add	r5, r5, #4
   186b0:	bl	12564 <__sprintf_chk@plt>
   186b4:	ldr	r3, [r6]
   186b8:	mov	sl, #1
   186bc:	add	r3, r3, #4
   186c0:	str	r3, [r6]
   186c4:	b	185f0 <fputs@plt+0x5fc0>
   186c8:	str	r3, [sp]
   186cc:	mov	r0, r5
   186d0:	ldr	r3, [sp, #20]
   186d4:	mov	r1, #1
   186d8:	mvn	r2, #0
   186dc:	add	r5, r5, #4
   186e0:	bl	12564 <__sprintf_chk@plt>
   186e4:	ldr	r3, [r6]
   186e8:	add	r3, r3, #4
   186ec:	str	r3, [r6]
   186f0:	b	185f0 <fputs@plt+0x5fc0>
   186f4:	str	r4, [sp, #28]
   186f8:	mov	r0, r4
   186fc:	str	r4, [sp, #32]
   18700:	b	1867c <fputs@plt+0x604c>
   18704:	mov	r5, r9
   18708:	b	18670 <fputs@plt+0x6040>
   1870c:	bl	12444 <__stack_chk_fail@plt>
   18710:	ldrdeq	r3, [r1], -r4
   18714:	andeq	r0, r0, r8, lsr #4
   18718:			; <UNDEFINED> instruction: 0x00002bb4
   1871c:	andeq	r2, r0, ip, lsr #23
   18720:	lsl	r0, r0, #2
   18724:	add	r0, r0, #1
   18728:	bx	lr
   1872c:	push	{r4, r5, r6, lr}
   18730:	subs	r4, r0, #0
   18734:	mov	r6, r1
   18738:	beq	18780 <fputs@plt+0x6150>
   1873c:	bl	12294 <strlen@plt>
   18740:	subs	r3, r0, #0
   18744:	beq	18780 <fputs@plt+0x6150>
   18748:	bl	18720 <fputs@plt+0x60f0>
   1874c:	bl	12420 <malloc@plt>
   18750:	subs	r5, r0, #0
   18754:	beq	18778 <fputs@plt+0x6148>
   18758:	mov	r0, r4
   1875c:	mov	r1, r6
   18760:	mov	r2, r5
   18764:	mov	r3, #0
   18768:	bl	18260 <fputs@plt+0x5c30>
   1876c:	cmp	r0, #0
   18770:	beq	18778 <fputs@plt+0x6148>
   18774:	pop	{r4, r5, r6, pc}
   18778:	mov	r0, r5
   1877c:	bl	121e0 <free@plt>
   18780:	mov	r0, #0
   18784:	pop	{r4, r5, r6, pc}
   18788:	push	{r4, r5, r6, lr}
   1878c:	subs	r4, r0, #0
   18790:	mov	r6, r1
   18794:	beq	187d8 <fputs@plt+0x61a8>
   18798:	bl	12294 <strlen@plt>
   1879c:	subs	r3, r0, #0
   187a0:	beq	187d8 <fputs@plt+0x61a8>
   187a4:	bl	18720 <fputs@plt+0x60f0>
   187a8:	bl	12420 <malloc@plt>
   187ac:	subs	r5, r0, #0
   187b0:	beq	187d0 <fputs@plt+0x61a0>
   187b4:	mov	r0, r4
   187b8:	mov	r1, r6
   187bc:	mov	r2, r5
   187c0:	bl	1851c <fputs@plt+0x5eec>
   187c4:	cmp	r0, #0
   187c8:	beq	187d0 <fputs@plt+0x61a0>
   187cc:	pop	{r4, r5, r6, pc}
   187d0:	mov	r0, r5
   187d4:	bl	121e0 <free@plt>
   187d8:	mov	r0, #0
   187dc:	pop	{r4, r5, r6, pc}
   187e0:	push	{r4, r5, r6, r7, r8, lr}
   187e4:	mov	r8, r1
   187e8:	mov	r5, r0
   187ec:	bl	12294 <strlen@plt>
   187f0:	mov	r1, r5
   187f4:	mov	r4, r0
   187f8:	mov	r0, #0
   187fc:	mov	r2, r0
   18800:	bl	12288 <mbstowcs@plt>
   18804:	cmn	r0, #1
   18808:	mov	r6, r0
   1880c:	moveq	r7, #0
   18810:	beq	18840 <fputs@plt+0x6210>
   18814:	add	r1, r0, #1
   18818:	mov	r0, #1
   1881c:	lsl	r1, r1, #2
   18820:	bl	12138 <calloc@plt>
   18824:	subs	r7, r0, #0
   18828:	beq	18840 <fputs@plt+0x6210>
   1882c:	mov	r2, r6
   18830:	mov	r1, r5
   18834:	bl	12288 <mbstowcs@plt>
   18838:	cmp	r0, #0
   1883c:	bne	1885c <fputs@plt+0x622c>
   18840:	mov	r0, r7
   18844:	bl	121e0 <free@plt>
   18848:	cmp	r4, #0
   1884c:	mov	r0, r4
   18850:	movge	r3, #0
   18854:	strbge	r3, [r5, r4]
   18858:	pop	{r4, r5, r6, r7, r8, pc}
   1885c:	ldr	r1, [r8]
   18860:	mov	r0, r7
   18864:	bl	17fd8 <fputs@plt+0x59a8>
   18868:	mov	r2, r4
   1886c:	mov	r1, r7
   18870:	str	r0, [r8]
   18874:	mov	r0, r5
   18878:	bl	124e0 <wcstombs@plt>
   1887c:	mov	r4, r0
   18880:	b	18840 <fputs@plt+0x6210>
   18884:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18888:	sub	sp, sp, #12
   1888c:	mov	r8, r1
   18890:	mov	r9, r2
   18894:	mov	r6, r3
   18898:	str	r0, [sp]
   1889c:	bl	12294 <strlen@plt>
   188a0:	mov	r7, r0
   188a4:	bl	1209c <__ctype_get_mb_cur_max@plt>
   188a8:	cmp	r0, #1
   188ac:	bls	18a40 <fputs@plt+0x6410>
   188b0:	mov	r0, #0
   188b4:	ldr	r1, [sp]
   188b8:	mov	r2, r0
   188bc:	bl	12288 <mbstowcs@plt>
   188c0:	cmn	r0, #1
   188c4:	mov	r4, r0
   188c8:	beq	18a24 <fputs@plt+0x63f4>
   188cc:	add	fp, r0, #1
   188d0:	lsl	sl, fp, #2
   188d4:	mov	r0, sl
   188d8:	bl	12420 <malloc@plt>
   188dc:	subs	r5, r0, #0
   188e0:	beq	18bc0 <fputs@plt+0x6590>
   188e4:	mov	r2, fp
   188e8:	ldr	r1, [sp]
   188ec:	bl	12288 <mbstowcs@plt>
   188f0:	cmp	r0, #0
   188f4:	bne	18a88 <fputs@plt+0x6458>
   188f8:	mov	sl, r7
   188fc:	mov	fp, #0
   18900:	ldr	r2, [r6]
   18904:	cmp	sl, r2
   18908:	movhi	sl, r2
   1890c:	movhi	r3, #0
   18910:	bls	18a5c <fputs@plt+0x642c>
   18914:	cmp	r9, #0
   18918:	str	sl, [r6]
   1891c:	add	r6, r2, r3
   18920:	beq	18a08 <fputs@plt+0x63d8>
   18924:	ldr	r1, [sp, #48]	; 0x30
   18928:	sub	r9, r9, #1
   1892c:	add	r9, r8, r9
   18930:	cmp	r1, #1
   18934:	beq	18b90 <fputs@plt+0x6560>
   18938:	bcc	18b80 <fputs@plt+0x6550>
   1893c:	cmp	r1, #2
   18940:	bne	18a74 <fputs@plt+0x6444>
   18944:	lsr	r4, r3, #1
   18948:	and	r3, r3, #1
   1894c:	adds	r3, r3, r4
   18950:	moveq	r1, #0
   18954:	movne	r1, #1
   18958:	adds	r7, r4, #0
   1895c:	movne	r7, #1
   18960:	cmp	r8, r9
   18964:	movcs	r1, #0
   18968:	andcc	r1, r1, #1
   1896c:	cmp	r1, #0
   18970:	beq	189a0 <fputs@plt+0x6370>
   18974:	ldr	r1, [sp, #56]	; 0x38
   18978:	uxtb	r0, r1
   1897c:	subs	r3, r3, #1
   18980:	strb	r0, [r8], #1
   18984:	moveq	r1, #0
   18988:	movne	r1, #1
   1898c:	cmp	r9, r8
   18990:	movls	r1, #0
   18994:	andhi	r1, r1, #1
   18998:	cmp	r1, #0
   1899c:	bne	1897c <fputs@plt+0x634c>
   189a0:	rsb	r3, r8, r9
   189a4:	ldr	r1, [sp]
   189a8:	cmp	r3, r2
   189ac:	movcc	r2, r3
   189b0:	mov	r0, r8
   189b4:	mov	r3, #0
   189b8:	strb	r3, [r8]
   189bc:	bl	12270 <mempcpy@plt>
   189c0:	cmp	r9, r0
   189c4:	movls	r7, #0
   189c8:	andhi	r7, r7, #1
   189cc:	cmp	r7, #0
   189d0:	beq	18a00 <fputs@plt+0x63d0>
   189d4:	ldr	r3, [sp, #56]	; 0x38
   189d8:	uxtb	r1, r3
   189dc:	subs	r4, r4, #1
   189e0:	strb	r1, [r0], #1
   189e4:	moveq	r2, #0
   189e8:	movne	r2, #1
   189ec:	cmp	r9, r0
   189f0:	movls	r2, #0
   189f4:	andhi	r2, r2, #1
   189f8:	cmp	r2, #0
   189fc:	bne	189dc <fputs@plt+0x63ac>
   18a00:	mov	r2, #0
   18a04:	strb	r2, [r0]
   18a08:	mov	r0, r5
   18a0c:	bl	121e0 <free@plt>
   18a10:	mov	r0, fp
   18a14:	bl	121e0 <free@plt>
   18a18:	mov	r0, r6
   18a1c:	add	sp, sp, #12
   18a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a24:	ldr	r1, [sp, #52]	; 0x34
   18a28:	tst	r1, #1
   18a2c:	bne	18a78 <fputs@plt+0x6448>
   18a30:	mov	r5, #0
   18a34:	mvn	r6, #0
   18a38:	mov	fp, r5
   18a3c:	b	18a08 <fputs@plt+0x63d8>
   18a40:	mov	r5, #0
   18a44:	b	188f8 <fputs@plt+0x62c8>
   18a48:	ldr	r2, [r6]
   18a4c:	cmp	r2, sl
   18a50:	addcc	r4, r7, #1
   18a54:	bcc	18b44 <fputs@plt+0x6514>
   18a58:	ldr	fp, [sp, #4]
   18a5c:	cmp	r2, sl
   18a60:	rsbhi	r3, sl, r2
   18a64:	movls	r2, r7
   18a68:	movls	r3, #0
   18a6c:	movhi	r2, r7
   18a70:	b	18914 <fputs@plt+0x62e4>
   18a74:	bl	12030 <abort@plt>
   18a78:	mov	r5, #0
   18a7c:	mov	sl, r7
   18a80:	mov	fp, r5
   18a84:	b	18900 <fputs@plt+0x62d0>
   18a88:	add	sl, r5, sl
   18a8c:	mov	r3, #0
   18a90:	str	r3, [sl, #-4]
   18a94:	ldr	r0, [r5]
   18a98:	cmp	r0, r3
   18a9c:	beq	18be8 <fputs@plt+0x65b8>
   18aa0:	add	fp, r5, #4
   18aa4:	movw	sl, #65533	; 0xfffd
   18aa8:	str	r3, [sp, #4]
   18aac:	bl	125b8 <iswprint@plt>
   18ab0:	cmp	r0, #0
   18ab4:	streq	sl, [fp, #-4]
   18ab8:	ldr	r0, [fp], #4
   18abc:	moveq	r1, #1
   18ac0:	streq	r1, [sp, #4]
   18ac4:	cmp	r0, #0
   18ac8:	bne	18aac <fputs@plt+0x647c>
   18acc:	ldr	r0, [r5]
   18ad0:	cmp	r0, #0
   18ad4:	beq	18b20 <fputs@plt+0x64f0>
   18ad8:	mov	sl, r5
   18adc:	mov	fp, #0
   18ae0:	b	18b14 <fputs@plt+0x64e4>
   18ae4:	movw	r3, #65535	; 0xffff
   18ae8:	movt	r3, #32767	; 0x7fff
   18aec:	rsb	r3, r0, r3
   18af0:	cmp	r3, fp
   18af4:	blt	18be0 <fputs@plt+0x65b0>
   18af8:	sub	r4, r4, #1
   18afc:	add	fp, fp, r0
   18b00:	cmn	r4, #1
   18b04:	beq	18bd8 <fputs@plt+0x65a8>
   18b08:	ldr	r0, [sl, #4]!
   18b0c:	cmp	r0, #0
   18b10:	beq	18bd8 <fputs@plt+0x65a8>
   18b14:	bl	12588 <wcwidth@plt>
   18b18:	cmn	r0, #1
   18b1c:	bne	18ae4 <fputs@plt+0x64b4>
   18b20:	mov	sl, r0
   18b24:	ldr	r3, [sp, #4]
   18b28:	cmp	r3, #0
   18b2c:	beq	18a48 <fputs@plt+0x6418>
   18b30:	mov	r0, #0
   18b34:	mov	r1, r5
   18b38:	mov	r2, r0
   18b3c:	bl	124e0 <wcstombs@plt>
   18b40:	add	r4, r0, #1
   18b44:	mov	r0, r4
   18b48:	bl	12420 <malloc@plt>
   18b4c:	subs	fp, r0, #0
   18b50:	beq	18bac <fputs@plt+0x657c>
   18b54:	ldr	r1, [r6]
   18b58:	mov	r0, r5
   18b5c:	bl	17fd8 <fputs@plt+0x59a8>
   18b60:	mov	r1, r5
   18b64:	mov	r2, r4
   18b68:	mov	sl, r0
   18b6c:	mov	r0, fp
   18b70:	bl	124e0 <wcstombs@plt>
   18b74:	str	fp, [sp]
   18b78:	mov	r7, r0
   18b7c:	b	18900 <fputs@plt+0x62d0>
   18b80:	adds	r7, r3, #0
   18b84:	mov	r4, r3
   18b88:	movne	r7, #1
   18b8c:	b	189a0 <fputs@plt+0x6370>
   18b90:	mov	r7, #0
   18b94:	cmp	r3, r7
   18b98:	cmpne	r8, r9
   18b9c:	mov	r4, r7
   18ba0:	movcs	r1, #0
   18ba4:	movcc	r1, #1
   18ba8:	b	1896c <fputs@plt+0x633c>
   18bac:	ldr	r1, [sp, #52]	; 0x34
   18bb0:	tst	r1, #1
   18bb4:	mvneq	r6, #0
   18bb8:	beq	18a08 <fputs@plt+0x63d8>
   18bbc:	b	18900 <fputs@plt+0x62d0>
   18bc0:	ldr	r3, [sp, #52]	; 0x34
   18bc4:	tst	r3, #1
   18bc8:	beq	18a30 <fputs@plt+0x6400>
   18bcc:	mov	sl, r7
   18bd0:	mov	fp, r5
   18bd4:	b	18900 <fputs@plt+0x62d0>
   18bd8:	mov	sl, fp
   18bdc:	b	18b24 <fputs@plt+0x64f4>
   18be0:	mvn	sl, #0
   18be4:	b	18b24 <fputs@plt+0x64f4>
   18be8:	str	r0, [sp, #4]
   18bec:	b	18acc <fputs@plt+0x649c>
   18bf0:	push	{r4, lr}
   18bf4:	sub	sp, sp, #16
   18bf8:	mov	r4, #32
   18bfc:	ldr	lr, [sp, #24]
   18c00:	ldr	ip, [sp, #28]
   18c04:	str	r4, [sp, #8]
   18c08:	str	lr, [sp]
   18c0c:	str	ip, [sp, #4]
   18c10:	bl	18884 <fputs@plt+0x6254>
   18c14:	add	sp, sp, #16
   18c18:	pop	{r4, pc}
   18c1c:	subs	r2, r1, #1
   18c20:	bxeq	lr
   18c24:	bcc	18dfc <fputs@plt+0x67cc>
   18c28:	cmp	r0, r1
   18c2c:	bls	18de0 <fputs@plt+0x67b0>
   18c30:	tst	r1, r2
   18c34:	beq	18dec <fputs@plt+0x67bc>
   18c38:	clz	r3, r0
   18c3c:	clz	r2, r1
   18c40:	sub	r3, r2, r3
   18c44:	rsbs	r3, r3, #31
   18c48:	addne	r3, r3, r3, lsl #1
   18c4c:	mov	r2, #0
   18c50:	addne	pc, pc, r3, lsl #2
   18c54:	nop	{0}
   18c58:	cmp	r0, r1, lsl #31
   18c5c:	adc	r2, r2, r2
   18c60:	subcs	r0, r0, r1, lsl #31
   18c64:	cmp	r0, r1, lsl #30
   18c68:	adc	r2, r2, r2
   18c6c:	subcs	r0, r0, r1, lsl #30
   18c70:	cmp	r0, r1, lsl #29
   18c74:	adc	r2, r2, r2
   18c78:	subcs	r0, r0, r1, lsl #29
   18c7c:	cmp	r0, r1, lsl #28
   18c80:	adc	r2, r2, r2
   18c84:	subcs	r0, r0, r1, lsl #28
   18c88:	cmp	r0, r1, lsl #27
   18c8c:	adc	r2, r2, r2
   18c90:	subcs	r0, r0, r1, lsl #27
   18c94:	cmp	r0, r1, lsl #26
   18c98:	adc	r2, r2, r2
   18c9c:	subcs	r0, r0, r1, lsl #26
   18ca0:	cmp	r0, r1, lsl #25
   18ca4:	adc	r2, r2, r2
   18ca8:	subcs	r0, r0, r1, lsl #25
   18cac:	cmp	r0, r1, lsl #24
   18cb0:	adc	r2, r2, r2
   18cb4:	subcs	r0, r0, r1, lsl #24
   18cb8:	cmp	r0, r1, lsl #23
   18cbc:	adc	r2, r2, r2
   18cc0:	subcs	r0, r0, r1, lsl #23
   18cc4:	cmp	r0, r1, lsl #22
   18cc8:	adc	r2, r2, r2
   18ccc:	subcs	r0, r0, r1, lsl #22
   18cd0:	cmp	r0, r1, lsl #21
   18cd4:	adc	r2, r2, r2
   18cd8:	subcs	r0, r0, r1, lsl #21
   18cdc:	cmp	r0, r1, lsl #20
   18ce0:	adc	r2, r2, r2
   18ce4:	subcs	r0, r0, r1, lsl #20
   18ce8:	cmp	r0, r1, lsl #19
   18cec:	adc	r2, r2, r2
   18cf0:	subcs	r0, r0, r1, lsl #19
   18cf4:	cmp	r0, r1, lsl #18
   18cf8:	adc	r2, r2, r2
   18cfc:	subcs	r0, r0, r1, lsl #18
   18d00:	cmp	r0, r1, lsl #17
   18d04:	adc	r2, r2, r2
   18d08:	subcs	r0, r0, r1, lsl #17
   18d0c:	cmp	r0, r1, lsl #16
   18d10:	adc	r2, r2, r2
   18d14:	subcs	r0, r0, r1, lsl #16
   18d18:	cmp	r0, r1, lsl #15
   18d1c:	adc	r2, r2, r2
   18d20:	subcs	r0, r0, r1, lsl #15
   18d24:	cmp	r0, r1, lsl #14
   18d28:	adc	r2, r2, r2
   18d2c:	subcs	r0, r0, r1, lsl #14
   18d30:	cmp	r0, r1, lsl #13
   18d34:	adc	r2, r2, r2
   18d38:	subcs	r0, r0, r1, lsl #13
   18d3c:	cmp	r0, r1, lsl #12
   18d40:	adc	r2, r2, r2
   18d44:	subcs	r0, r0, r1, lsl #12
   18d48:	cmp	r0, r1, lsl #11
   18d4c:	adc	r2, r2, r2
   18d50:	subcs	r0, r0, r1, lsl #11
   18d54:	cmp	r0, r1, lsl #10
   18d58:	adc	r2, r2, r2
   18d5c:	subcs	r0, r0, r1, lsl #10
   18d60:	cmp	r0, r1, lsl #9
   18d64:	adc	r2, r2, r2
   18d68:	subcs	r0, r0, r1, lsl #9
   18d6c:	cmp	r0, r1, lsl #8
   18d70:	adc	r2, r2, r2
   18d74:	subcs	r0, r0, r1, lsl #8
   18d78:	cmp	r0, r1, lsl #7
   18d7c:	adc	r2, r2, r2
   18d80:	subcs	r0, r0, r1, lsl #7
   18d84:	cmp	r0, r1, lsl #6
   18d88:	adc	r2, r2, r2
   18d8c:	subcs	r0, r0, r1, lsl #6
   18d90:	cmp	r0, r1, lsl #5
   18d94:	adc	r2, r2, r2
   18d98:	subcs	r0, r0, r1, lsl #5
   18d9c:	cmp	r0, r1, lsl #4
   18da0:	adc	r2, r2, r2
   18da4:	subcs	r0, r0, r1, lsl #4
   18da8:	cmp	r0, r1, lsl #3
   18dac:	adc	r2, r2, r2
   18db0:	subcs	r0, r0, r1, lsl #3
   18db4:	cmp	r0, r1, lsl #2
   18db8:	adc	r2, r2, r2
   18dbc:	subcs	r0, r0, r1, lsl #2
   18dc0:	cmp	r0, r1, lsl #1
   18dc4:	adc	r2, r2, r2
   18dc8:	subcs	r0, r0, r1, lsl #1
   18dcc:	cmp	r0, r1
   18dd0:	adc	r2, r2, r2
   18dd4:	subcs	r0, r0, r1
   18dd8:	mov	r0, r2
   18ddc:	bx	lr
   18de0:	moveq	r0, #1
   18de4:	movne	r0, #0
   18de8:	bx	lr
   18dec:	clz	r2, r1
   18df0:	rsb	r2, r2, #31
   18df4:	lsr	r0, r0, r2
   18df8:	bx	lr
   18dfc:	cmp	r0, #0
   18e00:	mvnne	r0, #0
   18e04:	b	1921c <fputs@plt+0x6bec>
   18e08:	cmp	r1, #0
   18e0c:	beq	18dfc <fputs@plt+0x67cc>
   18e10:	push	{r0, r1, lr}
   18e14:	bl	18c1c <fputs@plt+0x65ec>
   18e18:	pop	{r1, r2, lr}
   18e1c:	mul	r3, r2, r0
   18e20:	sub	r1, r1, r3
   18e24:	bx	lr
   18e28:	eor	r1, r1, #-2147483648	; 0x80000000
   18e2c:	b	18e34 <fputs@plt+0x6804>
   18e30:	eor	r3, r3, #-2147483648	; 0x80000000
   18e34:	push	{r4, r5, lr}
   18e38:	lsl	r4, r1, #1
   18e3c:	lsl	r5, r3, #1
   18e40:	teq	r4, r5
   18e44:	teqeq	r0, r2
   18e48:	orrsne	ip, r4, r0
   18e4c:	orrsne	ip, r5, r2
   18e50:	mvnsne	ip, r4, asr #21
   18e54:	mvnsne	ip, r5, asr #21
   18e58:	beq	19044 <fputs@plt+0x6a14>
   18e5c:	lsr	r4, r4, #21
   18e60:	rsbs	r5, r4, r5, lsr #21
   18e64:	rsblt	r5, r5, #0
   18e68:	ble	18e88 <fputs@plt+0x6858>
   18e6c:	add	r4, r4, r5
   18e70:	eor	r2, r0, r2
   18e74:	eor	r3, r1, r3
   18e78:	eor	r0, r2, r0
   18e7c:	eor	r1, r3, r1
   18e80:	eor	r2, r0, r2
   18e84:	eor	r3, r1, r3
   18e88:	cmp	r5, #54	; 0x36
   18e8c:	pophi	{r4, r5, pc}
   18e90:	tst	r1, #-2147483648	; 0x80000000
   18e94:	lsl	r1, r1, #12
   18e98:	mov	ip, #1048576	; 0x100000
   18e9c:	orr	r1, ip, r1, lsr #12
   18ea0:	beq	18eac <fputs@plt+0x687c>
   18ea4:	rsbs	r0, r0, #0
   18ea8:	rsc	r1, r1, #0
   18eac:	tst	r3, #-2147483648	; 0x80000000
   18eb0:	lsl	r3, r3, #12
   18eb4:	orr	r3, ip, r3, lsr #12
   18eb8:	beq	18ec4 <fputs@plt+0x6894>
   18ebc:	rsbs	r2, r2, #0
   18ec0:	rsc	r3, r3, #0
   18ec4:	teq	r4, r5
   18ec8:	beq	1902c <fputs@plt+0x69fc>
   18ecc:	sub	r4, r4, #1
   18ed0:	rsbs	lr, r5, #32
   18ed4:	blt	18ef0 <fputs@plt+0x68c0>
   18ed8:	lsl	ip, r2, lr
   18edc:	adds	r0, r0, r2, lsr r5
   18ee0:	adc	r1, r1, #0
   18ee4:	adds	r0, r0, r3, lsl lr
   18ee8:	adcs	r1, r1, r3, asr r5
   18eec:	b	18f0c <fputs@plt+0x68dc>
   18ef0:	sub	r5, r5, #32
   18ef4:	add	lr, lr, #32
   18ef8:	cmp	r2, #1
   18efc:	lsl	ip, r3, lr
   18f00:	orrcs	ip, ip, #2
   18f04:	adds	r0, r0, r3, asr r5
   18f08:	adcs	r1, r1, r3, asr #31
   18f0c:	and	r5, r1, #-2147483648	; 0x80000000
   18f10:	bpl	18f20 <fputs@plt+0x68f0>
   18f14:	rsbs	ip, ip, #0
   18f18:	rscs	r0, r0, #0
   18f1c:	rsc	r1, r1, #0
   18f20:	cmp	r1, #1048576	; 0x100000
   18f24:	bcc	18f64 <fputs@plt+0x6934>
   18f28:	cmp	r1, #2097152	; 0x200000
   18f2c:	bcc	18f4c <fputs@plt+0x691c>
   18f30:	lsrs	r1, r1, #1
   18f34:	rrxs	r0, r0
   18f38:	rrx	ip, ip
   18f3c:	add	r4, r4, #1
   18f40:	lsl	r2, r4, #21
   18f44:	cmn	r2, #4194304	; 0x400000
   18f48:	bcs	190a4 <fputs@plt+0x6a74>
   18f4c:	cmp	ip, #-2147483648	; 0x80000000
   18f50:	lsrseq	ip, r0, #1
   18f54:	adcs	r0, r0, #0
   18f58:	adc	r1, r1, r4, lsl #20
   18f5c:	orr	r1, r1, r5
   18f60:	pop	{r4, r5, pc}
   18f64:	lsls	ip, ip, #1
   18f68:	adcs	r0, r0, r0
   18f6c:	adc	r1, r1, r1
   18f70:	tst	r1, #1048576	; 0x100000
   18f74:	sub	r4, r4, #1
   18f78:	bne	18f4c <fputs@plt+0x691c>
   18f7c:	teq	r1, #0
   18f80:	moveq	r1, r0
   18f84:	moveq	r0, #0
   18f88:	clz	r3, r1
   18f8c:	addeq	r3, r3, #32
   18f90:	sub	r3, r3, #11
   18f94:	subs	r2, r3, #32
   18f98:	bge	18fbc <fputs@plt+0x698c>
   18f9c:	adds	r2, r2, #12
   18fa0:	ble	18fb8 <fputs@plt+0x6988>
   18fa4:	add	ip, r2, #20
   18fa8:	rsb	r2, r2, #12
   18fac:	lsl	r0, r1, ip
   18fb0:	lsr	r1, r1, r2
   18fb4:	b	18fcc <fputs@plt+0x699c>
   18fb8:	add	r2, r2, #20
   18fbc:	rsble	ip, r2, #32
   18fc0:	lsl	r1, r1, r2
   18fc4:	orrle	r1, r1, r0, lsr ip
   18fc8:	lslle	r0, r0, r2
   18fcc:	subs	r4, r4, r3
   18fd0:	addge	r1, r1, r4, lsl #20
   18fd4:	orrge	r1, r1, r5
   18fd8:	popge	{r4, r5, pc}
   18fdc:	mvn	r4, r4
   18fe0:	subs	r4, r4, #31
   18fe4:	bge	19020 <fputs@plt+0x69f0>
   18fe8:	adds	r4, r4, #12
   18fec:	bgt	19008 <fputs@plt+0x69d8>
   18ff0:	add	r4, r4, #20
   18ff4:	rsb	r2, r4, #32
   18ff8:	lsr	r0, r0, r4
   18ffc:	orr	r0, r0, r1, lsl r2
   19000:	orr	r1, r5, r1, lsr r4
   19004:	pop	{r4, r5, pc}
   19008:	rsb	r4, r4, #12
   1900c:	rsb	r2, r4, #32
   19010:	lsr	r0, r0, r2
   19014:	orr	r0, r0, r1, lsl r4
   19018:	mov	r1, r5
   1901c:	pop	{r4, r5, pc}
   19020:	lsr	r0, r1, r4
   19024:	mov	r1, r5
   19028:	pop	{r4, r5, pc}
   1902c:	teq	r4, #0
   19030:	eor	r3, r3, #1048576	; 0x100000
   19034:	eoreq	r1, r1, #1048576	; 0x100000
   19038:	addeq	r4, r4, #1
   1903c:	subne	r5, r5, #1
   19040:	b	18ecc <fputs@plt+0x689c>
   19044:	mvns	ip, r4, asr #21
   19048:	mvnsne	ip, r5, asr #21
   1904c:	beq	190b4 <fputs@plt+0x6a84>
   19050:	teq	r4, r5
   19054:	teqeq	r0, r2
   19058:	beq	1906c <fputs@plt+0x6a3c>
   1905c:	orrs	ip, r4, r0
   19060:	moveq	r1, r3
   19064:	moveq	r0, r2
   19068:	pop	{r4, r5, pc}
   1906c:	teq	r1, r3
   19070:	movne	r1, #0
   19074:	movne	r0, #0
   19078:	popne	{r4, r5, pc}
   1907c:	lsrs	ip, r4, #21
   19080:	bne	19094 <fputs@plt+0x6a64>
   19084:	lsls	r0, r0, #1
   19088:	adcs	r1, r1, r1
   1908c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   19090:	pop	{r4, r5, pc}
   19094:	adds	r4, r4, #4194304	; 0x400000
   19098:	addcc	r1, r1, #1048576	; 0x100000
   1909c:	popcc	{r4, r5, pc}
   190a0:	and	r5, r1, #-2147483648	; 0x80000000
   190a4:	orr	r1, r5, #2130706432	; 0x7f000000
   190a8:	orr	r1, r1, #15728640	; 0xf00000
   190ac:	mov	r0, #0
   190b0:	pop	{r4, r5, pc}
   190b4:	mvns	ip, r4, asr #21
   190b8:	movne	r1, r3
   190bc:	movne	r0, r2
   190c0:	mvnseq	ip, r5, asr #21
   190c4:	movne	r3, r1
   190c8:	movne	r2, r0
   190cc:	orrs	r4, r0, r1, lsl #12
   190d0:	orrseq	r5, r2, r3, lsl #12
   190d4:	teqeq	r1, r3
   190d8:	orrne	r1, r1, #524288	; 0x80000
   190dc:	pop	{r4, r5, pc}
   190e0:	teq	r0, #0
   190e4:	moveq	r1, #0
   190e8:	bxeq	lr
   190ec:	push	{r4, r5, lr}
   190f0:	mov	r4, #1024	; 0x400
   190f4:	add	r4, r4, #50	; 0x32
   190f8:	mov	r5, #0
   190fc:	mov	r1, #0
   19100:	b	18f7c <fputs@plt+0x694c>
   19104:	teq	r0, #0
   19108:	moveq	r1, #0
   1910c:	bxeq	lr
   19110:	push	{r4, r5, lr}
   19114:	mov	r4, #1024	; 0x400
   19118:	add	r4, r4, #50	; 0x32
   1911c:	ands	r5, r0, #-2147483648	; 0x80000000
   19120:	rsbmi	r0, r0, #0
   19124:	mov	r1, #0
   19128:	b	18f7c <fputs@plt+0x694c>
   1912c:	lsls	r2, r0, #1
   19130:	asr	r1, r2, #3
   19134:	rrx	r1, r1
   19138:	lsl	r0, r2, #28
   1913c:	andsne	r3, r2, #-16777216	; 0xff000000
   19140:	teqne	r3, #-16777216	; 0xff000000
   19144:	eorne	r1, r1, #939524096	; 0x38000000
   19148:	bxne	lr
   1914c:	teq	r2, #0
   19150:	teqne	r3, #-16777216	; 0xff000000
   19154:	bxeq	lr
   19158:	push	{r4, r5, lr}
   1915c:	mov	r4, #896	; 0x380
   19160:	and	r5, r1, #-2147483648	; 0x80000000
   19164:	bic	r1, r1, #-2147483648	; 0x80000000
   19168:	b	18f7c <fputs@plt+0x694c>
   1916c:	orrs	r2, r0, r1
   19170:	bxeq	lr
   19174:	push	{r4, r5, lr}
   19178:	mov	r5, #0
   1917c:	b	1919c <fputs@plt+0x6b6c>
   19180:	orrs	r2, r0, r1
   19184:	bxeq	lr
   19188:	push	{r4, r5, lr}
   1918c:	ands	r5, r1, #-2147483648	; 0x80000000
   19190:	bpl	1919c <fputs@plt+0x6b6c>
   19194:	rsbs	r0, r0, #0
   19198:	rsc	r1, r1, #0
   1919c:	mov	r4, #1024	; 0x400
   191a0:	add	r4, r4, #50	; 0x32
   191a4:	lsrs	ip, r1, #22
   191a8:	beq	18f20 <fputs@plt+0x68f0>
   191ac:	mov	r2, #3
   191b0:	lsrs	ip, ip, #3
   191b4:	addne	r2, r2, #3
   191b8:	lsrs	ip, ip, #3
   191bc:	addne	r2, r2, #3
   191c0:	add	r2, r2, ip, lsr #3
   191c4:	rsb	r3, r2, #32
   191c8:	lsl	ip, r0, r3
   191cc:	lsr	r0, r0, r2
   191d0:	orr	r0, r0, r1, lsl r3
   191d4:	lsr	r1, r1, r2
   191d8:	add	r4, r4, r2
   191dc:	b	18f20 <fputs@plt+0x68f0>
   191e0:	cmp	r3, #0
   191e4:	cmpeq	r2, #0
   191e8:	bne	19200 <fputs@plt+0x6bd0>
   191ec:	cmp	r1, #0
   191f0:	cmpeq	r0, #0
   191f4:	mvnne	r1, #0
   191f8:	mvnne	r0, #0
   191fc:	b	1921c <fputs@plt+0x6bec>
   19200:	sub	sp, sp, #8
   19204:	push	{sp, lr}
   19208:	bl	19268 <fputs@plt+0x6c38>
   1920c:	ldr	lr, [sp, #4]
   19210:	add	sp, sp, #8
   19214:	pop	{r2, r3}
   19218:	bx	lr
   1921c:	push	{r1, lr}
   19220:	mov	r0, #8
   19224:	bl	12360 <raise@plt>
   19228:	pop	{r1, pc}
   1922c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19230:	mov	r8, r2
   19234:	mov	r6, r0
   19238:	mov	r7, r1
   1923c:	mov	sl, r3
   19240:	ldr	r9, [sp, #32]
   19244:	bl	192a4 <fputs@plt+0x6c74>
   19248:	umull	r4, r5, r8, r0
   1924c:	mul	r8, r8, r1
   19250:	mla	r2, r0, sl, r8
   19254:	add	r5, r2, r5
   19258:	subs	r4, r6, r4
   1925c:	sbc	r5, r7, r5
   19260:	strd	r4, [r9]
   19264:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19268:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1926c:	mov	r8, r2
   19270:	mov	r6, r0
   19274:	mov	r7, r1
   19278:	mov	r5, r3
   1927c:	ldr	r9, [sp, #32]
   19280:	bl	19730 <fputs@plt+0x7100>
   19284:	mul	r3, r0, r5
   19288:	umull	r4, r5, r0, r8
   1928c:	mla	r8, r8, r1, r3
   19290:	add	r5, r8, r5
   19294:	subs	r4, r6, r4
   19298:	sbc	r5, r7, r5
   1929c:	strd	r4, [r9]
   192a0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   192a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   192a8:	rsbs	r4, r0, #0
   192ac:	rsc	r5, r1, #0
   192b0:	cmp	r1, #0
   192b4:	mvn	r6, #0
   192b8:	sub	sp, sp, #12
   192bc:	movge	r4, r0
   192c0:	movge	r5, r1
   192c4:	movge	r6, #0
   192c8:	cmp	r3, #0
   192cc:	blt	19504 <fputs@plt+0x6ed4>
   192d0:	cmp	r3, #0
   192d4:	mov	sl, r4
   192d8:	mov	ip, r5
   192dc:	mov	r0, r2
   192e0:	mov	r1, r3
   192e4:	mov	r8, r2
   192e8:	mov	r7, r4
   192ec:	mov	r9, r5
   192f0:	bne	193e8 <fputs@plt+0x6db8>
   192f4:	cmp	r2, r5
   192f8:	bls	19424 <fputs@plt+0x6df4>
   192fc:	clz	r3, r2
   19300:	cmp	r3, #0
   19304:	rsbne	r2, r3, #32
   19308:	lslne	r8, r0, r3
   1930c:	lsrne	r2, r4, r2
   19310:	lslne	r7, r4, r3
   19314:	orrne	r9, r2, r5, lsl r3
   19318:	lsr	r4, r8, #16
   1931c:	uxth	sl, r8
   19320:	mov	r1, r4
   19324:	mov	r0, r9
   19328:	bl	18c1c <fputs@plt+0x65ec>
   1932c:	mov	r1, r4
   19330:	mov	fp, r0
   19334:	mov	r0, r9
   19338:	bl	18e08 <fputs@plt+0x67d8>
   1933c:	mul	r0, sl, fp
   19340:	lsr	r2, r7, #16
   19344:	orr	r1, r2, r1, lsl #16
   19348:	cmp	r0, r1
   1934c:	bls	19370 <fputs@plt+0x6d40>
   19350:	adds	r1, r1, r8
   19354:	sub	r3, fp, #1
   19358:	bcs	1936c <fputs@plt+0x6d3c>
   1935c:	cmp	r0, r1
   19360:	subhi	fp, fp, #2
   19364:	addhi	r1, r1, r8
   19368:	bhi	19370 <fputs@plt+0x6d40>
   1936c:	mov	fp, r3
   19370:	rsb	r9, r0, r1
   19374:	mov	r1, r4
   19378:	uxth	r7, r7
   1937c:	mov	r0, r9
   19380:	bl	18c1c <fputs@plt+0x65ec>
   19384:	mov	r1, r4
   19388:	mov	r5, r0
   1938c:	mov	r0, r9
   19390:	bl	18e08 <fputs@plt+0x67d8>
   19394:	mul	sl, sl, r5
   19398:	orr	r1, r7, r1, lsl #16
   1939c:	cmp	sl, r1
   193a0:	bls	193c0 <fputs@plt+0x6d90>
   193a4:	adds	r8, r1, r8
   193a8:	sub	r3, r5, #1
   193ac:	bcs	193bc <fputs@plt+0x6d8c>
   193b0:	cmp	sl, r8
   193b4:	subhi	r5, r5, #2
   193b8:	bhi	193c0 <fputs@plt+0x6d90>
   193bc:	mov	r5, r3
   193c0:	orr	r3, r5, fp, lsl #16
   193c4:	mov	r4, #0
   193c8:	cmp	r6, #0
   193cc:	mov	r0, r3
   193d0:	mov	r1, r4
   193d4:	beq	193e0 <fputs@plt+0x6db0>
   193d8:	rsbs	r0, r0, #0
   193dc:	rsc	r1, r1, #0
   193e0:	add	sp, sp, #12
   193e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193e8:	cmp	r3, r5
   193ec:	movhi	r4, #0
   193f0:	movhi	r3, r4
   193f4:	bhi	193c8 <fputs@plt+0x6d98>
   193f8:	clz	r5, r1
   193fc:	cmp	r5, #0
   19400:	bne	195f0 <fputs@plt+0x6fc0>
   19404:	cmp	r1, ip
   19408:	cmpcs	r2, sl
   1940c:	movhi	r4, #0
   19410:	movls	r4, #1
   19414:	movls	r3, #1
   19418:	movls	r4, r5
   1941c:	movhi	r3, r4
   19420:	b	193c8 <fputs@plt+0x6d98>
   19424:	cmp	r2, #0
   19428:	bne	1943c <fputs@plt+0x6e0c>
   1942c:	mov	r1, r2
   19430:	mov	r0, #1
   19434:	bl	18c1c <fputs@plt+0x65ec>
   19438:	mov	r8, r0
   1943c:	clz	r3, r8
   19440:	cmp	r3, #0
   19444:	bne	19514 <fputs@plt+0x6ee4>
   19448:	rsb	r9, r8, r9
   1944c:	lsr	r5, r8, #16
   19450:	uxth	sl, r8
   19454:	mov	r4, #1
   19458:	mov	r1, r5
   1945c:	mov	r0, r9
   19460:	bl	18c1c <fputs@plt+0x65ec>
   19464:	mov	r1, r5
   19468:	mov	fp, r0
   1946c:	mov	r0, r9
   19470:	bl	18e08 <fputs@plt+0x67d8>
   19474:	mul	r0, sl, fp
   19478:	lsr	r2, r7, #16
   1947c:	orr	r1, r2, r1, lsl #16
   19480:	cmp	r0, r1
   19484:	bls	194a4 <fputs@plt+0x6e74>
   19488:	adds	r1, r1, r8
   1948c:	sub	r3, fp, #1
   19490:	bcs	19710 <fputs@plt+0x70e0>
   19494:	cmp	r0, r1
   19498:	subhi	fp, fp, #2
   1949c:	addhi	r1, r1, r8
   194a0:	bls	19710 <fputs@plt+0x70e0>
   194a4:	rsb	r2, r0, r1
   194a8:	mov	r1, r5
   194ac:	str	r2, [sp]
   194b0:	uxth	r7, r7
   194b4:	mov	r0, r2
   194b8:	bl	18c1c <fputs@plt+0x65ec>
   194bc:	ldr	r2, [sp]
   194c0:	mov	r1, r5
   194c4:	mov	r9, r0
   194c8:	mov	r0, r2
   194cc:	bl	18e08 <fputs@plt+0x67d8>
   194d0:	mul	sl, sl, r9
   194d4:	orr	r1, r7, r1, lsl #16
   194d8:	cmp	sl, r1
   194dc:	bls	194fc <fputs@plt+0x6ecc>
   194e0:	adds	r8, r1, r8
   194e4:	sub	r3, r9, #1
   194e8:	bcs	194f8 <fputs@plt+0x6ec8>
   194ec:	cmp	sl, r8
   194f0:	subhi	r9, r9, #2
   194f4:	bhi	194fc <fputs@plt+0x6ecc>
   194f8:	mov	r9, r3
   194fc:	orr	r3, r9, fp, lsl #16
   19500:	b	193c8 <fputs@plt+0x6d98>
   19504:	mvn	r6, r6
   19508:	rsbs	r2, r2, #0
   1950c:	rsc	r3, r3, #0
   19510:	b	192d0 <fputs@plt+0x6ca0>
   19514:	lsl	r8, r8, r3
   19518:	rsb	fp, r3, #32
   1951c:	lsr	r4, r9, fp
   19520:	lsr	fp, r7, fp
   19524:	lsr	r5, r8, #16
   19528:	orr	fp, fp, r9, lsl r3
   1952c:	mov	r0, r4
   19530:	lsl	r7, r7, r3
   19534:	mov	r1, r5
   19538:	uxth	sl, r8
   1953c:	bl	18c1c <fputs@plt+0x65ec>
   19540:	mov	r1, r5
   19544:	mov	r3, r0
   19548:	mov	r0, r4
   1954c:	str	r3, [sp]
   19550:	bl	18e08 <fputs@plt+0x67d8>
   19554:	ldr	r3, [sp]
   19558:	lsr	r2, fp, #16
   1955c:	mul	r0, sl, r3
   19560:	orr	r1, r2, r1, lsl #16
   19564:	cmp	r0, r1
   19568:	bls	19588 <fputs@plt+0x6f58>
   1956c:	adds	r1, r1, r8
   19570:	sub	r2, r3, #1
   19574:	bcs	19728 <fputs@plt+0x70f8>
   19578:	cmp	r0, r1
   1957c:	subhi	r3, r3, #2
   19580:	addhi	r1, r1, r8
   19584:	bls	19728 <fputs@plt+0x70f8>
   19588:	rsb	r9, r0, r1
   1958c:	mov	r1, r5
   19590:	str	r3, [sp]
   19594:	uxth	fp, fp
   19598:	mov	r0, r9
   1959c:	bl	18c1c <fputs@plt+0x65ec>
   195a0:	mov	r1, r5
   195a4:	mov	r4, r0
   195a8:	mov	r0, r9
   195ac:	bl	18e08 <fputs@plt+0x67d8>
   195b0:	mul	r9, sl, r4
   195b4:	ldr	r3, [sp]
   195b8:	orr	r1, fp, r1, lsl #16
   195bc:	cmp	r9, r1
   195c0:	bls	195e4 <fputs@plt+0x6fb4>
   195c4:	adds	r1, r1, r8
   195c8:	sub	r2, r4, #1
   195cc:	bcs	195e0 <fputs@plt+0x6fb0>
   195d0:	cmp	r9, r1
   195d4:	subhi	r4, r4, #2
   195d8:	addhi	r1, r1, r8
   195dc:	bhi	195e4 <fputs@plt+0x6fb4>
   195e0:	mov	r4, r2
   195e4:	rsb	r9, r9, r1
   195e8:	orr	r4, r4, r3, lsl #16
   195ec:	b	19458 <fputs@plt+0x6e28>
   195f0:	rsb	sl, r5, #32
   195f4:	lsl	r3, r2, r5
   195f8:	lsr	r0, r2, sl
   195fc:	lsr	r2, ip, sl
   19600:	orr	r4, r0, r1, lsl r5
   19604:	lsr	sl, r7, sl
   19608:	mov	r0, r2
   1960c:	orr	sl, sl, ip, lsl r5
   19610:	lsr	r9, r4, #16
   19614:	str	r3, [sp, #4]
   19618:	str	r2, [sp]
   1961c:	uxth	fp, r4
   19620:	mov	r1, r9
   19624:	bl	18c1c <fputs@plt+0x65ec>
   19628:	ldr	r2, [sp]
   1962c:	mov	r1, r9
   19630:	mov	r8, r0
   19634:	mov	r0, r2
   19638:	bl	18e08 <fputs@plt+0x67d8>
   1963c:	mul	r0, fp, r8
   19640:	lsr	r2, sl, #16
   19644:	orr	r1, r2, r1, lsl #16
   19648:	cmp	r0, r1
   1964c:	bls	1966c <fputs@plt+0x703c>
   19650:	adds	r1, r1, r4
   19654:	sub	r2, r8, #1
   19658:	bcs	19720 <fputs@plt+0x70f0>
   1965c:	cmp	r0, r1
   19660:	subhi	r8, r8, #2
   19664:	addhi	r1, r1, r4
   19668:	bls	19720 <fputs@plt+0x70f0>
   1966c:	rsb	ip, r0, r1
   19670:	mov	r1, r9
   19674:	str	ip, [sp]
   19678:	mov	r0, ip
   1967c:	bl	18c1c <fputs@plt+0x65ec>
   19680:	ldr	ip, [sp]
   19684:	mov	r1, r9
   19688:	mov	r2, r0
   1968c:	mov	r0, ip
   19690:	str	r2, [sp]
   19694:	bl	18e08 <fputs@plt+0x67d8>
   19698:	ldr	r2, [sp]
   1969c:	uxth	ip, sl
   196a0:	mul	fp, fp, r2
   196a4:	orr	ip, ip, r1, lsl #16
   196a8:	cmp	fp, ip
   196ac:	bls	196cc <fputs@plt+0x709c>
   196b0:	adds	ip, ip, r4
   196b4:	sub	r1, r2, #1
   196b8:	bcs	19718 <fputs@plt+0x70e8>
   196bc:	cmp	fp, ip
   196c0:	subhi	r2, r2, #2
   196c4:	addhi	ip, ip, r4
   196c8:	bls	19718 <fputs@plt+0x70e8>
   196cc:	ldr	r0, [sp, #4]
   196d0:	orr	r1, r2, r8, lsl #16
   196d4:	rsb	fp, fp, ip
   196d8:	umull	r2, r3, r1, r0
   196dc:	cmp	fp, r3
   196e0:	bcc	19704 <fputs@plt+0x70d4>
   196e4:	movne	r4, #0
   196e8:	moveq	r4, #1
   196ec:	cmp	r2, r7, lsl r5
   196f0:	movls	r4, #0
   196f4:	andhi	r4, r4, #1
   196f8:	cmp	r4, #0
   196fc:	moveq	r3, r1
   19700:	beq	193c8 <fputs@plt+0x6d98>
   19704:	sub	r3, r1, #1
   19708:	mov	r4, #0
   1970c:	b	193c8 <fputs@plt+0x6d98>
   19710:	mov	fp, r3
   19714:	b	194a4 <fputs@plt+0x6e74>
   19718:	mov	r2, r1
   1971c:	b	196cc <fputs@plt+0x709c>
   19720:	mov	r8, r2
   19724:	b	1966c <fputs@plt+0x703c>
   19728:	mov	r3, r2
   1972c:	b	19588 <fputs@plt+0x6f58>
   19730:	cmp	r3, #0
   19734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19738:	mov	r6, r0
   1973c:	sub	sp, sp, #12
   19740:	mov	r5, r1
   19744:	mov	r7, r0
   19748:	mov	r4, r2
   1974c:	mov	r8, r1
   19750:	bne	19830 <fputs@plt+0x7200>
   19754:	cmp	r2, r1
   19758:	bls	1986c <fputs@plt+0x723c>
   1975c:	clz	r3, r2
   19760:	cmp	r3, #0
   19764:	rsbne	r8, r3, #32
   19768:	lslne	r4, r2, r3
   1976c:	lsrne	r8, r0, r8
   19770:	lslne	r7, r0, r3
   19774:	orrne	r8, r8, r1, lsl r3
   19778:	lsr	r5, r4, #16
   1977c:	uxth	sl, r4
   19780:	mov	r1, r5
   19784:	mov	r0, r8
   19788:	bl	18c1c <fputs@plt+0x65ec>
   1978c:	mov	r1, r5
   19790:	mov	r9, r0
   19794:	mov	r0, r8
   19798:	bl	18e08 <fputs@plt+0x67d8>
   1979c:	mul	r0, sl, r9
   197a0:	lsr	r3, r7, #16
   197a4:	orr	r1, r3, r1, lsl #16
   197a8:	cmp	r0, r1
   197ac:	bls	197d0 <fputs@plt+0x71a0>
   197b0:	adds	r1, r1, r4
   197b4:	sub	r2, r9, #1
   197b8:	bcs	197cc <fputs@plt+0x719c>
   197bc:	cmp	r0, r1
   197c0:	subhi	r9, r9, #2
   197c4:	addhi	r1, r1, r4
   197c8:	bhi	197d0 <fputs@plt+0x71a0>
   197cc:	mov	r9, r2
   197d0:	rsb	r8, r0, r1
   197d4:	mov	r1, r5
   197d8:	uxth	r7, r7
   197dc:	mov	r0, r8
   197e0:	bl	18c1c <fputs@plt+0x65ec>
   197e4:	mov	r1, r5
   197e8:	mov	r6, r0
   197ec:	mov	r0, r8
   197f0:	bl	18e08 <fputs@plt+0x67d8>
   197f4:	mul	sl, sl, r6
   197f8:	orr	r1, r7, r1, lsl #16
   197fc:	cmp	sl, r1
   19800:	bls	1981c <fputs@plt+0x71ec>
   19804:	adds	r4, r1, r4
   19808:	sub	r3, r6, #1
   1980c:	bcs	19b18 <fputs@plt+0x74e8>
   19810:	cmp	sl, r4
   19814:	subhi	r6, r6, #2
   19818:	bls	19b18 <fputs@plt+0x74e8>
   1981c:	orr	r0, r6, r9, lsl #16
   19820:	mov	r6, #0
   19824:	mov	r1, r6
   19828:	add	sp, sp, #12
   1982c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19830:	cmp	r3, r1
   19834:	movhi	r6, #0
   19838:	movhi	r0, r6
   1983c:	bhi	19824 <fputs@plt+0x71f4>
   19840:	clz	r7, r3
   19844:	cmp	r7, #0
   19848:	bne	19948 <fputs@plt+0x7318>
   1984c:	cmp	r3, r1
   19850:	cmpcs	r2, r6
   19854:	movhi	r6, #0
   19858:	movls	r6, #1
   1985c:	movls	r0, #1
   19860:	movls	r6, r7
   19864:	movhi	r0, r6
   19868:	b	19824 <fputs@plt+0x71f4>
   1986c:	cmp	r2, #0
   19870:	bne	19884 <fputs@plt+0x7254>
   19874:	mov	r1, r2
   19878:	mov	r0, #1
   1987c:	bl	18c1c <fputs@plt+0x65ec>
   19880:	mov	r4, r0
   19884:	clz	r3, r4
   19888:	cmp	r3, #0
   1988c:	bne	19a44 <fputs@plt+0x7414>
   19890:	rsb	r5, r4, r5
   19894:	lsr	r8, r4, #16
   19898:	uxth	sl, r4
   1989c:	mov	r6, #1
   198a0:	mov	r1, r8
   198a4:	mov	r0, r5
   198a8:	bl	18c1c <fputs@plt+0x65ec>
   198ac:	mov	r1, r8
   198b0:	mov	r9, r0
   198b4:	mov	r0, r5
   198b8:	bl	18e08 <fputs@plt+0x67d8>
   198bc:	mul	r0, sl, r9
   198c0:	lsr	r3, r7, #16
   198c4:	orr	r1, r3, r1, lsl #16
   198c8:	cmp	r0, r1
   198cc:	bls	198ec <fputs@plt+0x72bc>
   198d0:	adds	r1, r1, r4
   198d4:	sub	r2, r9, #1
   198d8:	bcs	19b20 <fputs@plt+0x74f0>
   198dc:	cmp	r0, r1
   198e0:	subhi	r9, r9, #2
   198e4:	addhi	r1, r1, r4
   198e8:	bls	19b20 <fputs@plt+0x74f0>
   198ec:	rsb	fp, r0, r1
   198f0:	mov	r1, r8
   198f4:	uxth	r7, r7
   198f8:	mov	r0, fp
   198fc:	bl	18c1c <fputs@plt+0x65ec>
   19900:	mov	r1, r8
   19904:	mov	r5, r0
   19908:	mov	r0, fp
   1990c:	bl	18e08 <fputs@plt+0x67d8>
   19910:	mul	sl, sl, r5
   19914:	orr	r1, r7, r1, lsl #16
   19918:	cmp	sl, r1
   1991c:	bls	19938 <fputs@plt+0x7308>
   19920:	adds	r4, r1, r4
   19924:	sub	r3, r5, #1
   19928:	bcs	19b28 <fputs@plt+0x74f8>
   1992c:	cmp	sl, r4
   19930:	subhi	r5, r5, #2
   19934:	bls	19b28 <fputs@plt+0x74f8>
   19938:	orr	r0, r5, r9, lsl #16
   1993c:	mov	r1, r6
   19940:	add	sp, sp, #12
   19944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19948:	rsb	r1, r7, #32
   1994c:	lsl	r0, r2, r7
   19950:	lsr	r2, r2, r1
   19954:	lsr	fp, r5, r1
   19958:	orr	r8, r2, r3, lsl r7
   1995c:	lsr	r1, r6, r1
   19960:	str	r0, [sp, #4]
   19964:	orr	r5, r1, r5, lsl r7
   19968:	lsr	r9, r8, #16
   1996c:	mov	r0, fp
   19970:	uxth	sl, r8
   19974:	mov	r1, r9
   19978:	bl	18c1c <fputs@plt+0x65ec>
   1997c:	mov	r1, r9
   19980:	mov	r4, r0
   19984:	mov	r0, fp
   19988:	bl	18e08 <fputs@plt+0x67d8>
   1998c:	mul	r0, sl, r4
   19990:	lsr	ip, r5, #16
   19994:	orr	r1, ip, r1, lsl #16
   19998:	cmp	r0, r1
   1999c:	bls	199b0 <fputs@plt+0x7380>
   199a0:	adds	r1, r1, r8
   199a4:	sub	r2, r4, #1
   199a8:	bcc	19b44 <fputs@plt+0x7514>
   199ac:	mov	r4, r2
   199b0:	rsb	ip, r0, r1
   199b4:	mov	r1, r9
   199b8:	str	ip, [sp]
   199bc:	uxth	r5, r5
   199c0:	mov	r0, ip
   199c4:	bl	18c1c <fputs@plt+0x65ec>
   199c8:	ldr	ip, [sp]
   199cc:	mov	r1, r9
   199d0:	mov	fp, r0
   199d4:	mov	r0, ip
   199d8:	bl	18e08 <fputs@plt+0x67d8>
   199dc:	mul	sl, sl, fp
   199e0:	orr	r1, r5, r1, lsl #16
   199e4:	cmp	sl, r1
   199e8:	bls	199fc <fputs@plt+0x73cc>
   199ec:	adds	r1, r1, r8
   199f0:	sub	r2, fp, #1
   199f4:	bcc	19b30 <fputs@plt+0x7500>
   199f8:	mov	fp, r2
   199fc:	ldr	r3, [sp, #4]
   19a00:	orr	r0, fp, r4, lsl #16
   19a04:	rsb	sl, sl, r1
   19a08:	umull	r4, r5, r0, r3
   19a0c:	cmp	sl, r5
   19a10:	bcc	19a30 <fputs@plt+0x7400>
   19a14:	movne	r3, #0
   19a18:	moveq	r3, #1
   19a1c:	cmp	r4, r6, lsl r7
   19a20:	movls	r6, #0
   19a24:	andhi	r6, r3, #1
   19a28:	cmp	r6, #0
   19a2c:	beq	19824 <fputs@plt+0x71f4>
   19a30:	mov	r6, #0
   19a34:	sub	r0, r0, #1
   19a38:	mov	r1, r6
   19a3c:	add	sp, sp, #12
   19a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a44:	lsl	r4, r4, r3
   19a48:	rsb	r9, r3, #32
   19a4c:	lsr	r2, r5, r9
   19a50:	lsr	r9, r6, r9
   19a54:	lsr	r8, r4, #16
   19a58:	orr	r9, r9, r5, lsl r3
   19a5c:	mov	r0, r2
   19a60:	lsl	r7, r6, r3
   19a64:	mov	r1, r8
   19a68:	str	r2, [sp]
   19a6c:	bl	18c1c <fputs@plt+0x65ec>
   19a70:	ldr	r2, [sp]
   19a74:	mov	r1, r8
   19a78:	uxth	sl, r4
   19a7c:	mov	fp, r0
   19a80:	mov	r0, r2
   19a84:	bl	18e08 <fputs@plt+0x67d8>
   19a88:	mul	r0, sl, fp
   19a8c:	lsr	r3, r9, #16
   19a90:	orr	r1, r3, r1, lsl #16
   19a94:	cmp	r0, r1
   19a98:	bls	19ab8 <fputs@plt+0x7488>
   19a9c:	adds	r1, r1, r4
   19aa0:	sub	r3, fp, #1
   19aa4:	bcs	19b58 <fputs@plt+0x7528>
   19aa8:	cmp	r0, r1
   19aac:	subhi	fp, fp, #2
   19ab0:	addhi	r1, r1, r4
   19ab4:	bls	19b58 <fputs@plt+0x7528>
   19ab8:	rsb	r5, r0, r1
   19abc:	mov	r1, r8
   19ac0:	uxth	r9, r9
   19ac4:	mov	r0, r5
   19ac8:	bl	18c1c <fputs@plt+0x65ec>
   19acc:	mov	r1, r8
   19ad0:	mov	r6, r0
   19ad4:	mov	r0, r5
   19ad8:	bl	18e08 <fputs@plt+0x67d8>
   19adc:	mul	r5, sl, r6
   19ae0:	orr	r1, r9, r1, lsl #16
   19ae4:	cmp	r5, r1
   19ae8:	bls	19b0c <fputs@plt+0x74dc>
   19aec:	adds	r1, r1, r4
   19af0:	sub	r3, r6, #1
   19af4:	bcs	19b08 <fputs@plt+0x74d8>
   19af8:	cmp	r5, r1
   19afc:	subhi	r6, r6, #2
   19b00:	addhi	r1, r1, r4
   19b04:	bhi	19b0c <fputs@plt+0x74dc>
   19b08:	mov	r6, r3
   19b0c:	rsb	r5, r5, r1
   19b10:	orr	r6, r6, fp, lsl #16
   19b14:	b	198a0 <fputs@plt+0x7270>
   19b18:	mov	r6, r3
   19b1c:	b	1981c <fputs@plt+0x71ec>
   19b20:	mov	r9, r2
   19b24:	b	198ec <fputs@plt+0x72bc>
   19b28:	mov	r5, r3
   19b2c:	b	19938 <fputs@plt+0x7308>
   19b30:	cmp	sl, r1
   19b34:	subhi	fp, fp, #2
   19b38:	addhi	r1, r1, r8
   19b3c:	bhi	199fc <fputs@plt+0x73cc>
   19b40:	b	199f8 <fputs@plt+0x73c8>
   19b44:	cmp	r0, r1
   19b48:	subhi	r4, r4, #2
   19b4c:	addhi	r1, r1, r8
   19b50:	bhi	199b0 <fputs@plt+0x7380>
   19b54:	b	199ac <fputs@plt+0x737c>
   19b58:	mov	fp, r3
   19b5c:	b	19ab8 <fputs@plt+0x7488>
   19b60:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19b64:	mov	r7, r0
   19b68:	ldr	r6, [pc, #76]	; 19bbc <fputs@plt+0x758c>
   19b6c:	mov	r8, r1
   19b70:	ldr	r5, [pc, #72]	; 19bc0 <fputs@plt+0x7590>
   19b74:	mov	r9, r2
   19b78:	add	r6, pc, r6
   19b7c:	bl	11fe0 <_init@@Base>
   19b80:	add	r5, pc, r5
   19b84:	rsb	r6, r5, r6
   19b88:	asrs	r6, r6, #2
   19b8c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   19b90:	sub	r5, r5, #4
   19b94:	mov	r4, #0
   19b98:	add	r4, r4, #1
   19b9c:	ldr	r3, [r5, #4]!
   19ba0:	mov	r0, r7
   19ba4:	mov	r1, r8
   19ba8:	mov	r2, r9
   19bac:	blx	r3
   19bb0:	cmp	r4, r6
   19bb4:	bne	19b98 <fputs@plt+0x7568>
   19bb8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19bbc:	andeq	r2, r1, r0, asr #6
   19bc0:	andeq	r2, r1, r4, lsr r3
   19bc4:	bx	lr
   19bc8:	ldr	r3, [pc, #28]	; 19bec <fputs@plt+0x75bc>
   19bcc:	mov	r1, #0
   19bd0:	ldr	r2, [pc, #24]	; 19bf0 <fputs@plt+0x75c0>
   19bd4:	add	r3, pc, r3
   19bd8:	ldr	r3, [r3, r2]
   19bdc:	cmp	r3, #0
   19be0:	ldrne	r2, [r3]
   19be4:	moveq	r2, r3
   19be8:	b	12120 <__cxa_atexit@plt>
   19bec:	andeq	r2, r1, r4, lsr #8
   19bf0:	andeq	r0, r0, r4, lsr #4

Disassembly of section .fini:

00019bf4 <_fini@@Base>:
   19bf4:	push	{r3, lr}
   19bf8:	pop	{r3, pc}
