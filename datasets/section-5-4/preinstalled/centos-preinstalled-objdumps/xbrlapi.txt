
centos-preinstalled/xbrlapi:     file format elf32-littlearm


Disassembly of section .init:

00013b1c <_init@@Base>:
   13b1c:	push	{r3, lr}
   13b20:	bl	1428c <_start@@Base+0x3c>
   13b24:	pop	{r3, pc}

Disassembly of section .plt:

00013b28 <open@plt-0x14>:
   13b28:	push	{lr}		; (str lr, [sp, #-4]!)
   13b2c:	ldr	lr, [pc, #4]	; 13b38 <_init@@Base+0x1c>
   13b30:	add	lr, pc, lr
   13b34:	ldr	pc, [lr, #8]!
   13b38:	andeq	fp, r1, r8, asr #9

00013b3c <open@plt>:
   13b3c:	add	ip, pc, #0, 12
   13b40:	add	ip, ip, #110592	; 0x1b000
   13b44:	ldr	pc, [ip, #1224]!	; 0x4c8

00013b48 <sigemptyset@plt>:
   13b48:	add	ip, pc, #0, 12
   13b4c:	add	ip, ip, #110592	; 0x1b000
   13b50:	ldr	pc, [ip, #1216]!	; 0x4c0

00013b54 <strerror@plt>:
   13b54:	add	ip, pc, #0, 12
   13b58:	add	ip, ip, #110592	; 0x1b000
   13b5c:	ldr	pc, [ip, #1208]!	; 0x4b8

00013b60 <XFree@plt>:
   13b60:	add	ip, pc, #0, 12
   13b64:	add	ip, ip, #110592	; 0x1b000
   13b68:	ldr	pc, [ip, #1200]!	; 0x4b0

00013b6c <__ctype_toupper_loc@plt>:
   13b6c:	add	ip, pc, #0, 12
   13b70:	add	ip, ip, #110592	; 0x1b000
   13b74:	ldr	pc, [ip, #1192]!	; 0x4a8

00013b78 <fileno@plt>:
   13b78:	add	ip, pc, #0, 12
   13b7c:	add	ip, ip, #110592	; 0x1b000
   13b80:	ldr	pc, [ip, #1184]!	; 0x4a0

00013b84 <mkdir@plt>:
   13b84:	add	ip, pc, #0, 12
   13b88:	add	ip, ip, #110592	; 0x1b000
   13b8c:	ldr	pc, [ip, #1176]!	; 0x498

00013b90 <localtime_r@plt>:
   13b90:	add	ip, pc, #0, 12
   13b94:	add	ip, ip, #110592	; 0x1b000
   13b98:	ldr	pc, [ip, #1168]!	; 0x490

00013b9c <abort@plt>:
   13b9c:	add	ip, pc, #0, 12
   13ba0:	add	ip, ip, #110592	; 0x1b000
   13ba4:	ldr	pc, [ip, #1160]!	; 0x488

00013ba8 <__gcc_personality_v0@plt>:
   13ba8:	add	ip, pc, #0, 12
   13bac:	add	ip, ip, #110592	; 0x1b000
   13bb0:	ldr	pc, [ip, #1152]!	; 0x480

00013bb4 <XTestFakeKeyEvent@plt>:
   13bb4:	add	ip, pc, #0, 12
   13bb8:	add	ip, ip, #110592	; 0x1b000
   13bbc:	ldr	pc, [ip, #1144]!	; 0x478

00013bc0 <memcmp@plt>:
   13bc0:	add	ip, pc, #0, 12
   13bc4:	add	ip, ip, #110592	; 0x1b000
   13bc8:	ldr	pc, [ip, #1136]!	; 0x470

00013bcc <sysconf@plt>:
   13bcc:	add	ip, pc, #0, 12
   13bd0:	add	ip, ip, #110592	; 0x1b000
   13bd4:	ldr	pc, [ip, #1128]!	; 0x468

00013bd8 <__xstat@plt>:
   13bd8:	add	ip, pc, #0, 12
   13bdc:	add	ip, ip, #110592	; 0x1b000
   13be0:	ldr	pc, [ip, #1120]!	; 0x460

00013be4 <__libc_start_main@plt>:
   13be4:	add	ip, pc, #0, 12
   13be8:	add	ip, ip, #110592	; 0x1b000
   13bec:	ldr	pc, [ip, #1112]!	; 0x458

00013bf0 <clock_gettime@plt>:
   13bf0:	add	ip, pc, #0, 12
   13bf4:	add	ip, ip, #110592	; 0x1b000
   13bf8:	ldr	pc, [ip, #1104]!	; 0x450

00013bfc <signal@plt>:
   13bfc:	add	ip, pc, #0, 12
   13c00:	add	ip, ip, #110592	; 0x1b000
   13c04:	ldr	pc, [ip, #1096]!	; 0x448

00013c08 <brlapi_ignoreKeyRanges@plt>:
   13c08:	add	ip, pc, #0, 12
   13c0c:	add	ip, ip, #110592	; 0x1b000
   13c10:	ldr	pc, [ip, #1088]!	; 0x440

00013c14 <XRefreshKeyboardMapping@plt>:
   13c14:	add	ip, pc, #0, 12
   13c18:	add	ip, ip, #110592	; 0x1b000
   13c1c:	ldr	pc, [ip, #1080]!	; 0x438

00013c20 <brlapi_enterTtyMode@plt>:
   13c20:	add	ip, pc, #0, 12
   13c24:	add	ip, ip, #110592	; 0x1b000
   13c28:	ldr	pc, [ip, #1072]!	; 0x430

00013c2c <__gmon_start__@plt>:
   13c2c:	add	ip, pc, #0, 12
   13c30:	add	ip, ip, #110592	; 0x1b000
   13c34:	ldr	pc, [ip, #1064]!	; 0x428

00013c38 <__ctype_get_mb_cur_max@plt>:
   13c38:	add	ip, pc, #0, 12
   13c3c:	add	ip, ip, #110592	; 0x1b000
   13c40:	ldr	pc, [ip, #1056]!	; 0x420

00013c44 <brlapi_setFocus@plt>:
   13c44:	add	ip, pc, #0, 12
   13c48:	add	ip, ip, #110592	; 0x1b000
   13c4c:	ldr	pc, [ip, #1048]!	; 0x418

00013c50 <fclose@plt>:
   13c50:	add	ip, pc, #0, 12
   13c54:	add	ip, ip, #110592	; 0x1b000
   13c58:	ldr	pc, [ip, #1040]!	; 0x410

00013c5c <fgets@plt>:
   13c5c:	add	ip, pc, #0, 12
   13c60:	add	ip, ip, #110592	; 0x1b000
   13c64:	ldr	pc, [ip, #1032]!	; 0x408

00013c68 <getenv@plt>:
   13c68:	add	ip, pc, #0, 12
   13c6c:	add	ip, ip, #110592	; 0x1b000
   13c70:	ldr	pc, [ip, #1024]!	; 0x400

00013c74 <strtod@plt>:
   13c74:	add	ip, pc, #0, 12
   13c78:	add	ip, ip, #110592	; 0x1b000
   13c7c:	ldr	pc, [ip, #1016]!	; 0x3f8

00013c80 <strchr@plt>:
   13c80:	add	ip, pc, #0, 12
   13c84:	add	ip, ip, #110592	; 0x1b000
   13c88:	ldr	pc, [ip, #1008]!	; 0x3f0

00013c8c <strcasecmp@plt>:
   13c8c:	add	ip, pc, #0, 12
   13c90:	add	ip, ip, #110592	; 0x1b000
   13c94:	ldr	pc, [ip, #1000]!	; 0x3e8

00013c98 <__cxa_atexit@plt>:
   13c98:	add	ip, pc, #0, 12
   13c9c:	add	ip, ip, #110592	; 0x1b000
   13ca0:	ldr	pc, [ip, #992]!	; 0x3e0

00013ca4 <XGetWindowProperty@plt>:
   13ca4:	add	ip, pc, #0, 12
   13ca8:	add	ip, ip, #110592	; 0x1b000
   13cac:	ldr	pc, [ip, #984]!	; 0x3d8

00013cb0 <calloc@plt>:
   13cb0:	add	ip, pc, #0, 12
   13cb4:	add	ip, ip, #110592	; 0x1b000
   13cb8:	ldr	pc, [ip, #976]!	; 0x3d0

00013cbc <XkbLookupKeySym@plt>:
   13cbc:	add	ip, pc, #0, 12
   13cc0:	add	ip, ip, #110592	; 0x1b000
   13cc4:	ldr	pc, [ip, #968]!	; 0x3c8

00013cc8 <dlclose@plt>:
   13cc8:	add	ip, pc, #0, 12
   13ccc:	add	ip, ip, #110592	; 0x1b000
   13cd0:	ldr	pc, [ip, #960]!	; 0x3c0

00013cd4 <fopen@plt>:
   13cd4:	add	ip, pc, #0, 12
   13cd8:	add	ip, ip, #110592	; 0x1b000
   13cdc:	ldr	pc, [ip, #952]!	; 0x3b8

00013ce0 <mktime@plt>:
   13ce0:	add	ip, pc, #0, 12
   13ce4:	add	ip, ip, #110592	; 0x1b000
   13ce8:	ldr	pc, [ip, #944]!	; 0x3b0

00013cec <memset@plt>:
   13cec:	add	ip, pc, #0, 12
   13cf0:	add	ip, ip, #110592	; 0x1b000
   13cf4:	ldr	pc, [ip, #936]!	; 0x3a8

00013cf8 <strrchr@plt>:
   13cf8:	add	ip, pc, #0, 12
   13cfc:	add	ip, ip, #110592	; 0x1b000
   13d00:	ldr	pc, [ip, #928]!	; 0x3a0

00013d04 <execvp@plt>:
   13d04:	add	ip, pc, #0, 12
   13d08:	add	ip, ip, #110592	; 0x1b000
   13d0c:	ldr	pc, [ip, #920]!	; 0x398

00013d10 <ioperm@plt>:
   13d10:	add	ip, pc, #0, 12
   13d14:	add	ip, ip, #110592	; 0x1b000
   13d18:	ldr	pc, [ip, #912]!	; 0x390

00013d1c <XkbLibraryVersion@plt>:
   13d1c:	add	ip, pc, #0, 12
   13d20:	add	ip, ip, #110592	; 0x1b000
   13d24:	ldr	pc, [ip, #904]!	; 0x388

00013d28 <bindtextdomain@plt>:
   13d28:	add	ip, pc, #0, 12
   13d2c:	add	ip, ip, #110592	; 0x1b000
   13d30:	ldr	pc, [ip, #896]!	; 0x380

00013d34 <perror@plt>:
   13d34:	add	ip, pc, #0, 12
   13d38:	add	ip, ip, #110592	; 0x1b000
   13d3c:	ldr	pc, [ip, #888]!	; 0x378

00013d40 <iconv@plt>:
   13d40:	add	ip, pc, #0, 12
   13d44:	add	ip, ip, #110592	; 0x1b000
   13d48:	ldr	pc, [ip, #880]!	; 0x370

00013d4c <XConnectionNumber@plt>:
   13d4c:	add	ip, pc, #0, 12
   13d50:	add	ip, ip, #110592	; 0x1b000
   13d54:	ldr	pc, [ip, #872]!	; 0x368

00013d58 <dlopen@plt>:
   13d58:	add	ip, pc, #0, 12
   13d5c:	add	ip, ip, #110592	; 0x1b000
   13d60:	ldr	pc, [ip, #864]!	; 0x360

00013d64 <brlapi_ignoreKeys@plt>:
   13d64:	add	ip, pc, #0, 12
   13d68:	add	ip, ip, #110592	; 0x1b000
   13d6c:	ldr	pc, [ip, #856]!	; 0x358

00013d70 <XOpenDisplay@plt>:
   13d70:	add	ip, pc, #0, 12
   13d74:	add	ip, ip, #110592	; 0x1b000
   13d78:	ldr	pc, [ip, #848]!	; 0x350

00013d7c <XkbQueryExtension@plt>:
   13d7c:	add	ip, pc, #0, 12
   13d80:	add	ip, ip, #110592	; 0x1b000
   13d84:	ldr	pc, [ip, #840]!	; 0x348

00013d88 <_exit@plt>:
   13d88:	add	ip, pc, #0, 12
   13d8c:	add	ip, ip, #110592	; 0x1b000
   13d90:	ldr	pc, [ip, #832]!	; 0x340

00013d94 <__xmknod@plt>:
   13d94:	add	ip, pc, #0, 12
   13d98:	add	ip, ip, #110592	; 0x1b000
   13d9c:	ldr	pc, [ip, #824]!	; 0x338

00013da0 <free@plt>:
   13da0:	add	ip, pc, #0, 12
   13da4:	add	ip, ip, #110592	; 0x1b000
   13da8:	ldr	pc, [ip, #816]!	; 0x330

00013dac <read@plt>:
   13dac:	add	ip, pc, #0, 12
   13db0:	add	ip, ip, #110592	; 0x1b000
   13db4:	ldr	pc, [ip, #808]!	; 0x328

00013db8 <write@plt>:
   13db8:	add	ip, pc, #0, 12
   13dbc:	add	ip, ip, #110592	; 0x1b000
   13dc0:	ldr	pc, [ip, #800]!	; 0x320

00013dc4 <getopt_long@plt>:
   13dc4:	add	ip, pc, #0, 12
   13dc8:	add	ip, ip, #110592	; 0x1b000
   13dcc:	ldr	pc, [ip, #792]!	; 0x318

00013dd0 <dcgettext@plt>:
   13dd0:	add	ip, pc, #0, 12
   13dd4:	add	ip, ip, #110592	; 0x1b000
   13dd8:	ldr	pc, [ip, #784]!	; 0x310

00013ddc <access@plt>:
   13ddc:	add	ip, pc, #0, 12
   13de0:	add	ip, ip, #110592	; 0x1b000
   13de4:	ldr	pc, [ip, #776]!	; 0x308

00013de8 <brlapi_writeText@plt>:
   13de8:	add	ip, pc, #0, 12
   13dec:	add	ip, ip, #110592	; 0x1b000
   13df0:	ldr	pc, [ip, #768]!	; 0x300

00013df4 <openlog@plt>:
   13df4:	add	ip, pc, #0, 12
   13df8:	add	ip, ip, #110592	; 0x1b000
   13dfc:	ldr	pc, [ip, #760]!	; 0x2f8

00013e00 <gettimeofday@plt>:
   13e00:	add	ip, pc, #0, 12
   13e04:	add	ip, ip, #110592	; 0x1b000
   13e08:	ldr	pc, [ip, #752]!	; 0x2f0

00013e0c <__memcpy_chk@plt>:
   13e0c:	add	ip, pc, #0, 12
   13e10:	add	ip, ip, #110592	; 0x1b000
   13e14:	ldr	pc, [ip, #744]!	; 0x2e8

00013e18 <XGetErrorText@plt>:
   13e18:	add	ip, pc, #0, 12
   13e1c:	add	ip, ip, #110592	; 0x1b000
   13e20:	ldr	pc, [ip, #736]!	; 0x2e0

00013e24 <fflush@plt>:
   13e24:	add	ip, pc, #0, 12
   13e28:	add	ip, ip, #110592	; 0x1b000
   13e2c:	ldr	pc, [ip, #728]!	; 0x2d8

00013e30 <ioctl@plt>:
   13e30:	add	ip, pc, #0, 12
   13e34:	add	ip, ip, #110592	; 0x1b000
   13e38:	ldr	pc, [ip, #720]!	; 0x2d0

00013e3c <brlapi_readKey@plt>:
   13e3c:	add	ip, pc, #0, 12
   13e40:	add	ip, ip, #110592	; 0x1b000
   13e44:	ldr	pc, [ip, #712]!	; 0x2c8

00013e48 <strlen@plt>:
   13e48:	add	ip, pc, #0, 12
   13e4c:	add	ip, ip, #110592	; 0x1b000
   13e50:	ldr	pc, [ip, #704]!	; 0x2c0

00013e54 <sscanf@plt>:
   13e54:	add	ip, pc, #0, 12
   13e58:	add	ip, ip, #110592	; 0x1b000
   13e5c:	ldr	pc, [ip, #696]!	; 0x2b8

00013e60 <XDisplayName@plt>:
   13e60:	add	ip, pc, #0, 12
   13e64:	add	ip, ip, #110592	; 0x1b000
   13e68:	ldr	pc, [ip, #688]!	; 0x2b0

00013e6c <strtoul@plt>:
   13e6c:	add	ip, pc, #0, 12
   13e70:	add	ip, ip, #110592	; 0x1b000
   13e74:	ldr	pc, [ip, #680]!	; 0x2a8

00013e78 <brlapi_enterTtyModeWithPath@plt>:
   13e78:	add	ip, pc, #0, 12
   13e7c:	add	ip, ip, #110592	; 0x1b000
   13e80:	ldr	pc, [ip, #672]!	; 0x2a0

00013e84 <memcpy@plt>:
   13e84:	add	ip, pc, #0, 12
   13e88:	add	ip, ip, #110592	; 0x1b000
   13e8c:	ldr	pc, [ip, #664]!	; 0x298

00013e90 <setlocale@plt>:
   13e90:	add	ip, pc, #0, 12
   13e94:	add	ip, ip, #110592	; 0x1b000
   13e98:	ldr	pc, [ip, #656]!	; 0x290

00013e9c <XNextEvent@plt>:
   13e9c:	add	ip, pc, #0, 12
   13ea0:	add	ip, ip, #110592	; 0x1b000
   13ea4:	ldr	pc, [ip, #648]!	; 0x288

00013ea8 <outb@plt>:
   13ea8:	add	ip, pc, #0, 12
   13eac:	add	ip, ip, #110592	; 0x1b000
   13eb0:	ldr	pc, [ip, #640]!	; 0x280

00013eb4 <feof@plt>:
   13eb4:	add	ip, pc, #0, 12
   13eb8:	add	ip, ip, #110592	; 0x1b000
   13ebc:	ldr	pc, [ip, #632]!	; 0x278

00013ec0 <strtol@plt>:
   13ec0:	add	ip, pc, #0, 12
   13ec4:	add	ip, ip, #110592	; 0x1b000
   13ec8:	ldr	pc, [ip, #624]!	; 0x270

00013ecc <sigaddset@plt>:
   13ecc:	add	ip, pc, #0, 12
   13ed0:	add	ip, ip, #110592	; 0x1b000
   13ed4:	ldr	pc, [ip, #616]!	; 0x268

00013ed8 <waitpid@plt>:
   13ed8:	add	ip, pc, #0, 12
   13edc:	add	ip, ip, #110592	; 0x1b000
   13ee0:	ldr	pc, [ip, #608]!	; 0x260

00013ee4 <inb@plt>:
   13ee4:	add	ip, pc, #0, 12
   13ee8:	add	ip, ip, #110592	; 0x1b000
   13eec:	ldr	pc, [ip, #600]!	; 0x258

00013ef0 <brlapi_getDisplaySize@plt>:
   13ef0:	add	ip, pc, #0, 12
   13ef4:	add	ip, ip, #110592	; 0x1b000
   13ef8:	ldr	pc, [ip, #592]!	; 0x250

00013efc <__vsnprintf_chk@plt>:
   13efc:	add	ip, pc, #0, 12
   13f00:	add	ip, ip, #110592	; 0x1b000
   13f04:	ldr	pc, [ip, #584]!	; 0x248

00013f08 <XkbLockModifiers@plt>:
   13f08:	add	ip, pc, #0, 12
   13f0c:	add	ip, ip, #110592	; 0x1b000
   13f10:	ldr	pc, [ip, #576]!	; 0x240

00013f14 <XTestQueryExtension@plt>:
   13f14:	add	ip, pc, #0, 12
   13f18:	add	ip, ip, #110592	; 0x1b000
   13f1c:	ldr	pc, [ip, #568]!	; 0x238

00013f20 <__vfprintf_chk@plt>:
   13f20:	add	ip, pc, #0, 12
   13f24:	add	ip, ip, #110592	; 0x1b000
   13f28:	ldr	pc, [ip, #560]!	; 0x230

00013f2c <raise@plt>:
   13f2c:	add	ip, pc, #0, 12
   13f30:	add	ip, ip, #110592	; 0x1b000
   13f34:	ldr	pc, [ip, #552]!	; 0x228

00013f38 <XGetInputFocus@plt>:
   13f38:	add	ip, pc, #0, 12
   13f3c:	add	ip, ip, #110592	; 0x1b000
   13f40:	ldr	pc, [ip, #544]!	; 0x220

00013f44 <__snprintf_chk@plt>:
   13f44:	add	ip, pc, #0, 12
   13f48:	add	ip, ip, #110592	; 0x1b000
   13f4c:	ldr	pc, [ip, #536]!	; 0x218

00013f50 <__syslog_chk@plt>:
   13f50:	add	ip, pc, #0, 12
   13f54:	add	ip, ip, #110592	; 0x1b000
   13f58:	ldr	pc, [ip, #528]!	; 0x210

00013f5c <select@plt>:
   13f5c:	add	ip, pc, #0, 12
   13f60:	add	ip, ip, #110592	; 0x1b000
   13f64:	ldr	pc, [ip, #520]!	; 0x208

00013f68 <close@plt>:
   13f68:	add	ip, pc, #0, 12
   13f6c:	add	ip, ip, #110592	; 0x1b000
   13f70:	ldr	pc, [ip, #512]!	; 0x200

00013f74 <fwrite@plt>:
   13f74:	add	ip, pc, #0, 12
   13f78:	add	ip, ip, #110592	; 0x1b000
   13f7c:	ldr	pc, [ip, #504]!	; 0x1f8

00013f80 <XSelectInput@plt>:
   13f80:	add	ip, pc, #0, 12
   13f84:	add	ip, ip, #110592	; 0x1b000
   13f88:	ldr	pc, [ip, #496]!	; 0x1f0

00013f8c <strncasecmp@plt>:
   13f8c:	add	ip, pc, #0, 12
   13f90:	add	ip, ip, #110592	; 0x1b000
   13f94:	ldr	pc, [ip, #488]!	; 0x1e8

00013f98 <mount@plt>:
   13f98:	add	ip, pc, #0, 12
   13f9c:	add	ip, ip, #110592	; 0x1b000
   13fa0:	ldr	pc, [ip, #480]!	; 0x1e0

00013fa4 <XFlush@plt>:
   13fa4:	add	ip, pc, #0, 12
   13fa8:	add	ip, ip, #110592	; 0x1b000
   13fac:	ldr	pc, [ip, #472]!	; 0x1d8

00013fb0 <__ctype_b_loc@plt>:
   13fb0:	add	ip, pc, #0, 12
   13fb4:	add	ip, ip, #110592	; 0x1b000
   13fb8:	ldr	pc, [ip, #464]!	; 0x1d0

00013fbc <malloc@plt>:
   13fbc:	add	ip, pc, #0, 12
   13fc0:	add	ip, ip, #110592	; 0x1b000
   13fc4:	ldr	pc, [ip, #456]!	; 0x1c8

00013fc8 <sigprocmask@plt>:
   13fc8:	add	ip, pc, #0, 12
   13fcc:	add	ip, ip, #110592	; 0x1b000
   13fd0:	ldr	pc, [ip, #448]!	; 0x1c0

00013fd4 <brlapi_perror@plt>:
   13fd4:	add	ip, pc, #0, 12
   13fd8:	add	ip, ip, #110592	; 0x1b000
   13fdc:	ldr	pc, [ip, #440]!	; 0x1b8

00013fe0 <nl_langinfo@plt>:
   13fe0:	add	ip, pc, #0, 12
   13fe4:	add	ip, ip, #110592	; 0x1b000
   13fe8:	ldr	pc, [ip, #432]!	; 0x1b0

00013fec <__stack_chk_fail@plt>:
   13fec:	add	ip, pc, #0, 12
   13ff0:	add	ip, ip, #110592	; 0x1b000
   13ff4:	ldr	pc, [ip, #424]!	; 0x1a8

00013ff8 <chdir@plt>:
   13ff8:	add	ip, pc, #0, 12
   13ffc:	add	ip, ip, #110592	; 0x1b000
   14000:	ldr	pc, [ip, #416]!	; 0x1a0

00014004 <__fprintf_chk@plt>:
   14004:	add	ip, pc, #0, 12
   14008:	add	ip, ip, #110592	; 0x1b000
   1400c:	ldr	pc, [ip, #408]!	; 0x198

00014010 <poll@plt>:
   14010:	add	ip, pc, #0, 12
   14014:	add	ip, ip, #110592	; 0x1b000
   14018:	ldr	pc, [ip, #400]!	; 0x190

0001401c <dlerror@plt>:
   1401c:	add	ip, pc, #0, 12
   14020:	add	ip, ip, #110592	; 0x1b000
   14024:	ldr	pc, [ip, #392]!	; 0x188

00014028 <fputc@plt>:
   14028:	add	ip, pc, #0, 12
   1402c:	add	ip, ip, #110592	; 0x1b000
   14030:	ldr	pc, [ip, #384]!	; 0x180

00014034 <strtok@plt>:
   14034:	add	ip, pc, #0, 12
   14038:	add	ip, ip, #110592	; 0x1b000
   1403c:	ldr	pc, [ip, #376]!	; 0x178

00014040 <getcwd@plt>:
   14040:	add	ip, pc, #0, 12
   14044:	add	ip, ip, #110592	; 0x1b000
   14048:	ldr	pc, [ip, #368]!	; 0x170

0001404c <ftruncate@plt>:
   1404c:	add	ip, pc, #0, 12
   14050:	add	ip, ip, #110592	; 0x1b000
   14054:	ldr	pc, [ip, #360]!	; 0x168

00014058 <strftime@plt>:
   14058:	add	ip, pc, #0, 12
   1405c:	add	ip, ip, #110592	; 0x1b000
   14060:	ldr	pc, [ip, #352]!	; 0x160

00014064 <XInternAtom@plt>:
   14064:	add	ip, pc, #0, 12
   14068:	add	ip, ip, #110592	; 0x1b000
   1406c:	ldr	pc, [ip, #344]!	; 0x158

00014070 <getpid@plt>:
   14070:	add	ip, pc, #0, 12
   14074:	add	ip, ip, #110592	; 0x1b000
   14078:	ldr	pc, [ip, #336]!	; 0x150

0001407c <textdomain@plt>:
   1407c:	add	ip, pc, #0, 12
   14080:	add	ip, ip, #110592	; 0x1b000
   14084:	ldr	pc, [ip, #328]!	; 0x148

00014088 <closelog@plt>:
   14088:	add	ip, pc, #0, 12
   1408c:	add	ip, ip, #110592	; 0x1b000
   14090:	ldr	pc, [ip, #320]!	; 0x140

00014094 <fcntl@plt>:
   14094:	add	ip, pc, #0, 12
   14098:	add	ip, ip, #110592	; 0x1b000
   1409c:	ldr	pc, [ip, #312]!	; 0x138

000140a0 <readlink@plt>:
   140a0:	add	ip, pc, #0, 12
   140a4:	add	ip, ip, #110592	; 0x1b000
   140a8:	ldr	pc, [ip, #304]!	; 0x130

000140ac <XKeysymToKeycode@plt>:
   140ac:	add	ip, pc, #0, 12
   140b0:	add	ip, ip, #110592	; 0x1b000
   140b4:	ldr	pc, [ip, #296]!	; 0x128

000140b8 <fork@plt>:
   140b8:	add	ip, pc, #0, 12
   140bc:	add	ip, ip, #110592	; 0x1b000
   140c0:	ldr	pc, [ip, #288]!	; 0x120

000140c4 <lseek@plt>:
   140c4:	add	ip, pc, #0, 12
   140c8:	add	ip, ip, #110592	; 0x1b000
   140cc:	ldr	pc, [ip, #280]!	; 0x118

000140d0 <__fxstat@plt>:
   140d0:	add	ip, pc, #0, 12
   140d4:	add	ip, ip, #110592	; 0x1b000
   140d8:	ldr	pc, [ip, #272]!	; 0x110

000140dc <__realpath_chk@plt>:
   140dc:	add	ip, pc, #0, 12
   140e0:	add	ip, ip, #110592	; 0x1b000
   140e4:	ldr	pc, [ip, #264]!	; 0x108

000140e8 <XSetErrorHandler@plt>:
   140e8:	add	ip, pc, #0, 12
   140ec:	add	ip, ip, #110592	; 0x1b000
   140f0:	ldr	pc, [ip, #256]!	; 0x100

000140f4 <snprintf@plt>:
   140f4:	add	ip, pc, #0, 12
   140f8:	add	ip, ip, #110592	; 0x1b000
   140fc:	ldr	pc, [ip, #248]!	; 0xf8

00014100 <brlapi_acceptKeys@plt>:
   14100:	add	ip, pc, #0, 12
   14104:	add	ip, ip, #110592	; 0x1b000
   14108:	ldr	pc, [ip, #240]!	; 0xf0

0001410c <strncmp@plt>:
   1410c:	add	ip, pc, #0, 12
   14110:	add	ip, ip, #110592	; 0x1b000
   14114:	ldr	pc, [ip, #232]!	; 0xe8

00014118 <kill@plt>:
   14118:	add	ip, pc, #0, 12
   1411c:	add	ip, ip, #110592	; 0x1b000
   14120:	ldr	pc, [ip, #224]!	; 0xe0

00014124 <nanosleep@plt>:
   14124:	add	ip, pc, #0, 12
   14128:	add	ip, ip, #110592	; 0x1b000
   1412c:	ldr	pc, [ip, #216]!	; 0xd8

00014130 <ferror@plt>:
   14130:	add	ip, pc, #0, 12
   14134:	add	ip, ip, #110592	; 0x1b000
   14138:	ldr	pc, [ip, #208]!	; 0xd0

0001413c <realloc@plt>:
   1413c:	add	ip, pc, #0, 12
   14140:	add	ip, ip, #110592	; 0x1b000
   14144:	ldr	pc, [ip, #200]!	; 0xc8

00014148 <iconv_open@plt>:
   14148:	add	ip, pc, #0, 12
   1414c:	add	ip, ip, #110592	; 0x1b000
   14150:	ldr	pc, [ip, #192]!	; 0xc0

00014154 <__strdup@plt>:
   14154:	add	ip, pc, #0, 12
   14158:	add	ip, ip, #110592	; 0x1b000
   1415c:	ldr	pc, [ip, #184]!	; 0xb8

00014160 <_Unwind_Resume@plt>:
   14160:	add	ip, pc, #0, 12
   14164:	add	ip, ip, #110592	; 0x1b000
   14168:	ldr	pc, [ip, #176]!	; 0xb0

0001416c <memchr@plt>:
   1416c:	add	ip, pc, #0, 12
   14170:	add	ip, ip, #110592	; 0x1b000
   14174:	ldr	pc, [ip, #168]!	; 0xa8

00014178 <XQueryTree@plt>:
   14178:	add	ip, pc, #0, 12
   1417c:	add	ip, ip, #110592	; 0x1b000
   14180:	ldr	pc, [ip, #160]!	; 0xa0

00014184 <strcmp@plt>:
   14184:	add	ip, pc, #0, 12
   14188:	add	ip, ip, #110592	; 0x1b000
   1418c:	ldr	pc, [ip, #152]!	; 0x98

00014190 <exit@plt>:
   14190:	add	ip, pc, #0, 12
   14194:	add	ip, ip, #110592	; 0x1b000
   14198:	ldr	pc, [ip, #144]!	; 0x90

0001419c <__errno_location@plt>:
   1419c:	add	ip, pc, #0, 12
   141a0:	add	ip, ip, #110592	; 0x1b000
   141a4:	ldr	pc, [ip, #136]!	; 0x88

000141a8 <__open_2@plt>:
   141a8:	add	ip, pc, #0, 12
   141ac:	add	ip, ip, #110592	; 0x1b000
   141b0:	ldr	pc, [ip, #128]!	; 0x80

000141b4 <dlsym@plt>:
   141b4:	add	ip, pc, #0, 12
   141b8:	add	ip, ip, #110592	; 0x1b000
   141bc:	ldr	pc, [ip, #120]!	; 0x78

000141c0 <XPending@plt>:
   141c0:	add	ip, pc, #0, 12
   141c4:	add	ip, ip, #110592	; 0x1b000
   141c8:	ldr	pc, [ip, #112]!	; 0x70

000141cc <__fdelt_chk@plt>:
   141cc:	add	ip, pc, #0, 12
   141d0:	add	ip, ip, #110592	; 0x1b000
   141d4:	ldr	pc, [ip, #104]!	; 0x68

000141d8 <brlapi_openConnection@plt>:
   141d8:	add	ip, pc, #0, 12
   141dc:	add	ip, ip, #110592	; 0x1b000
   141e0:	ldr	pc, [ip, #96]!	; 0x60

000141e4 <fputs@plt>:
   141e4:	add	ip, pc, #0, 12
   141e8:	add	ip, ip, #110592	; 0x1b000
   141ec:	ldr	pc, [ip, #88]!	; 0x58

Disassembly of section .text:

000141f0 <main@@Base>:
   141f0:	push	{r4, lr}
   141f4:	sub	sp, sp, #8
   141f8:	str	r0, [sp, #4]
   141fc:	mov	r2, sp
   14200:	str	r1, [sp]
   14204:	add	r1, sp, #4
   14208:	ldr	r0, [pc, #60]	; 1424c <main@@Base+0x5c>
   1420c:	bl	16bc4 <processOptions@@Base>
   14210:	cmp	r0, #1
   14214:	beq	14228 <main@@Base+0x38>
   14218:	cmp	r0, #0
   1421c:	beq	14230 <main@@Base+0x40>
   14220:	add	sp, sp, #8
   14224:	pop	{r4, pc}
   14228:	mov	r0, #0
   1422c:	b	14220 <main@@Base+0x30>
   14230:	movw	r4, #12968	; 0x32a8
   14234:	movt	r4, #3
   14238:	ldr	r0, [r4, #52]	; 0x34
   1423c:	ldr	r1, [r4, #56]	; 0x38
   14240:	bl	149e0 <tobrltty_init@@Base>
   14244:	ldr	r0, [r4, #60]	; 0x3c
   14248:	bl	150dc <toX_f@@Base>
   1424c:	andeq	ip, r1, r4, lsl #25

00014250 <_start@@Base>:
   14250:	mov	fp, #0
   14254:	mov	lr, #0
   14258:	pop	{r1}		; (ldr r1, [sp], #4)
   1425c:	mov	r2, sp
   14260:	push	{r2}		; (str r2, [sp, #-4]!)
   14264:	push	{r0}		; (str r0, [sp, #-4]!)
   14268:	ldr	ip, [pc, #16]	; 14280 <_start@@Base+0x30>
   1426c:	push	{ip}		; (str ip, [sp, #-4]!)
   14270:	ldr	r0, [pc, #12]	; 14284 <_start@@Base+0x34>
   14274:	ldr	r3, [pc, #12]	; 14288 <_start@@Base+0x38>
   14278:	bl	13be4 <__libc_start_main@plt>
   1427c:	bl	13b9c <abort@plt>
   14280:	andeq	ip, r1, r8, lsl #24
   14284:	strdeq	r4, [r1], -r0
   14288:	andeq	ip, r1, r4, lsr #23
   1428c:	ldr	r3, [pc, #20]	; 142a8 <_start@@Base+0x58>
   14290:	ldr	r2, [pc, #20]	; 142ac <_start@@Base+0x5c>
   14294:	add	r3, pc, r3
   14298:	ldr	r2, [r3, r2]
   1429c:	cmp	r2, #0
   142a0:	bxeq	lr
   142a4:	b	13c2c <__gmon_start__@plt>
   142a8:	andeq	sl, r1, r4, ror #26
   142ac:	andeq	r0, r0, r8, asr #4
   142b0:	push	{r3, lr}
   142b4:	movw	r0, #62120	; 0xf2a8
   142b8:	ldr	r3, [pc, #36]	; 142e4 <_start@@Base+0x94>
   142bc:	movt	r0, #2
   142c0:	rsb	r3, r0, r3
   142c4:	cmp	r3, #6
   142c8:	popls	{r3, pc}
   142cc:	movw	r3, #0
   142d0:	movt	r3, #0
   142d4:	cmp	r3, #0
   142d8:	popeq	{r3, pc}
   142dc:	blx	r3
   142e0:	pop	{r3, pc}
   142e4:	andeq	pc, r2, fp, lsr #5
   142e8:	push	{r3, lr}
   142ec:	movw	r0, #62120	; 0xf2a8
   142f0:	movw	r3, #62120	; 0xf2a8
   142f4:	movt	r0, #2
   142f8:	movt	r3, #2
   142fc:	rsb	r3, r0, r3
   14300:	asr	r3, r3, #2
   14304:	add	r3, r3, r3, lsr #31
   14308:	asrs	r1, r3, #1
   1430c:	popeq	{r3, pc}
   14310:	movw	r2, #0
   14314:	movt	r2, #0
   14318:	cmp	r2, #0
   1431c:	popeq	{r3, pc}
   14320:	blx	r2
   14324:	pop	{r3, pc}
   14328:	push	{r4, lr}
   1432c:	movw	r4, #62132	; 0xf2b4
   14330:	movt	r4, #2
   14334:	ldrb	r3, [r4]
   14338:	cmp	r3, #0
   1433c:	popne	{r4, pc}
   14340:	bl	142b0 <_start@@Base+0x60>
   14344:	mov	r3, #1
   14348:	strb	r3, [r4]
   1434c:	pop	{r4, pc}
   14350:	movw	r0, #61028	; 0xee64
   14354:	movt	r0, #2
   14358:	push	{r3, lr}
   1435c:	ldr	r3, [r0]
   14360:	cmp	r3, #0
   14364:	beq	1437c <_start@@Base+0x12c>
   14368:	movw	r3, #0
   1436c:	movt	r3, #0
   14370:	cmp	r3, #0
   14374:	beq	1437c <_start@@Base+0x12c>
   14378:	blx	r3
   1437c:	pop	{r3, lr}
   14380:	b	142e8 <_start@@Base+0x98>

00014384 <api_cleanExit@@Base>:
   14384:	push	{r3, lr}
   14388:	movw	r3, #62136	; 0xf2b8
   1438c:	movt	r3, #2
   14390:	ldr	r0, [r3]
   14394:	bl	13f68 <close@plt>
   14398:	mov	r0, #0
   1439c:	bl	14190 <exit@plt>
   143a0:	push	{r4, lr}
   143a4:	movw	r4, #62136	; 0xf2b8
   143a8:	movt	r4, #2
   143ac:	mov	r1, r0
   143b0:	mov	r2, #6815744	; 0x680000
   143b4:	mov	r3, #0
   143b8:	ldr	r0, [r4, #8]
   143bc:	str	r3, [r4, #4]
   143c0:	bl	13f80 <XSelectInput@plt>
   143c4:	cmp	r0, #0
   143c8:	popeq	{r4, pc}
   143cc:	ldr	r0, [r4, #4]
   143d0:	rsbs	r0, r0, #1
   143d4:	movcc	r0, #0
   143d8:	pop	{r4, pc}

000143dc <fatal_brlapi_errno@@Base>:
   143dc:	push	{r1, r2, r3}
   143e0:	movw	r3, #62120	; 0xf2a8
   143e4:	movt	r3, #2
   143e8:	push	{r4, lr}
   143ec:	sub	sp, sp, #12
   143f0:	ldr	r3, [r3]
   143f4:	ldr	r4, [sp, #20]
   143f8:	str	r3, [sp, #4]
   143fc:	bl	13fd4 <brlapi_perror@plt>
   14400:	cmp	r4, #0
   14404:	beq	1442c <fatal_brlapi_errno@@Base+0x50>
   14408:	add	ip, sp, #24
   1440c:	movw	r0, #62128	; 0xf2b0
   14410:	movt	r0, #2
   14414:	mov	r2, r4
   14418:	mov	r3, ip
   1441c:	mov	r1, #1
   14420:	ldr	r0, [r0]
   14424:	str	ip, [sp]
   14428:	bl	13f20 <__vfprintf_chk@plt>
   1442c:	mov	r0, #4
   14430:	bl	14190 <exit@plt>

00014434 <fatal_errno@@Base>:
   14434:	push	{r1, r2, r3}
   14438:	movw	r3, #62120	; 0xf2a8
   1443c:	movt	r3, #2
   14440:	push	{r4, lr}
   14444:	sub	sp, sp, #12
   14448:	ldr	r3, [r3]
   1444c:	ldr	r4, [sp, #20]
   14450:	str	r3, [sp, #4]
   14454:	bl	13d34 <perror@plt>
   14458:	cmp	r4, #0
   1445c:	beq	14484 <fatal_errno@@Base+0x50>
   14460:	add	ip, sp, #24
   14464:	movw	r0, #62128	; 0xf2b0
   14468:	movt	r0, #2
   1446c:	mov	r2, r4
   14470:	mov	r3, ip
   14474:	mov	r1, #1
   14478:	ldr	r0, [r0]
   1447c:	str	ip, [sp]
   14480:	bl	13f20 <__vfprintf_chk@plt>
   14484:	mov	r0, #4
   14488:	bl	14190 <exit@plt>
   1448c:	push	{r4, r5, r6, lr}
   14490:	mov	r4, r0
   14494:	mov	r0, #16
   14498:	mov	r5, r1
   1449c:	mov	r6, r2
   144a0:	bl	13fbc <malloc@plt>
   144a4:	subs	r1, r0, #0
   144a8:	beq	144d8 <fatal_errno@@Base+0xa4>
   144ac:	ubfx	r2, r4, #0, #12
   144b0:	movw	r0, #62136	; 0xf2b8
   144b4:	eor	r2, r2, r4, lsr #20
   144b8:	movt	r0, #2
   144bc:	str	r4, [r1]
   144c0:	add	r0, r0, r2, lsl #2
   144c4:	stmib	r1, {r5, r6}
   144c8:	ldr	r2, [r0, #12]
   144cc:	str	r1, [r0, #12]
   144d0:	str	r2, [r1, #12]
   144d4:	pop	{r4, r5, r6, pc}
   144d8:	movw	r0, #52552	; 0xcd48
   144dc:	movt	r0, #1
   144e0:	bl	14434 <fatal_errno@@Base>

000144e4 <fatal@@Base>:
   144e4:	push	{r0, r1, r2, r3}
   144e8:	movw	r3, #62120	; 0xf2a8
   144ec:	push	{lr}		; (str lr, [sp, #-4]!)
   144f0:	sub	sp, sp, #12
   144f4:	movt	r3, #2
   144f8:	ldr	r2, [sp, #16]
   144fc:	ldr	r3, [r3]
   14500:	cmp	r2, #0
   14504:	str	r3, [sp, #4]
   14508:	beq	1452c <fatal@@Base+0x48>
   1450c:	add	ip, sp, #20
   14510:	movw	r0, #62128	; 0xf2b0
   14514:	movt	r0, #2
   14518:	mov	r1, #1
   1451c:	mov	r3, ip
   14520:	str	ip, [sp]
   14524:	ldr	r0, [r0]
   14528:	bl	13f20 <__vfprintf_chk@plt>
   1452c:	mov	r0, #4
   14530:	bl	14190 <exit@plt>
   14534:	movw	r3, #62120	; 0xf2a8
   14538:	movt	r3, #2
   1453c:	push	{r4, r5, r6, r7, r8, lr}
   14540:	mov	r4, r1
   14544:	ldrb	r1, [r1, #16]
   14548:	sub	sp, sp, #144	; 0x90
   1454c:	ldr	r2, [r3]
   14550:	cmp	r1, #3
   14554:	str	r2, [sp, #140]	; 0x8c
   14558:	beq	14618 <fatal@@Base+0x134>
   1455c:	mov	r3, #128	; 0x80
   14560:	add	r2, sp, #12
   14564:	bl	13e18 <XGetErrorText@plt>
   14568:	cmp	r0, #0
   1456c:	bne	1457c <fatal@@Base+0x98>
   14570:	movw	r0, #52576	; 0xcd60
   14574:	movt	r0, #1
   14578:	bl	144e4 <fatal@@Base>
   1457c:	movw	r5, #62128	; 0xf2b0
   14580:	movt	r5, #2
   14584:	mov	r2, #5
   14588:	movw	r1, #52592	; 0xcd70
   1458c:	mov	r0, #0
   14590:	movt	r1, #1
   14594:	ldr	r6, [r5]
   14598:	bl	13dd0 <dcgettext@plt>
   1459c:	movw	r1, #12968	; 0x32a8
   145a0:	movt	r1, #3
   145a4:	ldr	r7, [r4]
   145a8:	mov	r8, r0
   145ac:	ldr	r0, [r1, #28]
   145b0:	bl	13e60 <XDisplayName@plt>
   145b4:	mov	r3, r7
   145b8:	mov	r2, r8
   145bc:	add	r1, sp, #12
   145c0:	str	r1, [sp]
   145c4:	mov	r1, #1
   145c8:	str	r0, [sp, #4]
   145cc:	mov	r0, r6
   145d0:	bl	14004 <__fprintf_chk@plt>
   145d4:	mov	r2, #5
   145d8:	movw	r1, #52624	; 0xcd90
   145dc:	mov	r0, #0
   145e0:	movt	r1, #1
   145e4:	ldr	r5, [r5]
   145e8:	bl	13dd0 <dcgettext@plt>
   145ec:	ldrb	ip, [r4, #17]
   145f0:	ldr	r3, [r4, #8]
   145f4:	mov	r1, #1
   145f8:	str	ip, [sp]
   145fc:	ldrb	ip, [r4, #18]
   14600:	str	ip, [sp, #4]
   14604:	mov	r2, r0
   14608:	mov	r0, r5
   1460c:	bl	14004 <__fprintf_chk@plt>
   14610:	mov	r0, #4
   14614:	bl	14190 <exit@plt>
   14618:	movw	r2, #62136	; 0xf2b8
   1461c:	movt	r2, #2
   14620:	mov	r1, #1
   14624:	mov	r0, #0
   14628:	str	r1, [r2, #4]
   1462c:	ldr	r2, [sp, #140]	; 0x8c
   14630:	ldr	r3, [r3]
   14634:	cmp	r2, r3
   14638:	bne	14644 <fatal@@Base+0x160>
   1463c:	add	sp, sp, #144	; 0x90
   14640:	pop	{r4, r5, r6, r7, r8, pc}
   14644:	bl	13fec <__stack_chk_fail@plt>
   14648:	movw	ip, #62120	; 0xf2a8
   1464c:	movt	ip, #2
   14650:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14654:	sub	sp, sp, #84	; 0x54
   14658:	ldr	r2, [ip]
   1465c:	mov	r3, #0
   14660:	movw	r6, #62136	; 0xf2b8
   14664:	movw	r7, #12968	; 0x32a8
   14668:	str	ip, [sp, #36]	; 0x24
   1466c:	movt	r6, #2
   14670:	add	fp, sp, #40	; 0x28
   14674:	movt	r7, #3
   14678:	add	r9, sp, #52	; 0x34
   1467c:	add	sl, sp, #56	; 0x38
   14680:	str	r0, [sp, #32]
   14684:	mov	r5, r3
   14688:	mov	r4, #32
   1468c:	str	r2, [sp, #76]	; 0x4c
   14690:	str	r3, [sp, #56]	; 0x38
   14694:	b	146b8 <fatal@@Base+0x1d4>
   14698:	ldr	r3, [sp, #52]	; 0x34
   1469c:	ldr	r0, [sp, #56]	; 0x38
   146a0:	cmp	r3, #0
   146a4:	add	r4, r4, r3
   146a8:	beq	14788 <fatal@@Base+0x2a4>
   146ac:	bl	13b60 <XFree@plt>
   146b0:	cmp	r0, #0
   146b4:	beq	148a4 <fatal@@Base+0x3c0>
   146b8:	mov	r8, #0
   146bc:	ldr	r0, [r6, #8]
   146c0:	add	ip, sp, #44	; 0x2c
   146c4:	ldr	r2, [r7, #32]
   146c8:	str	ip, [sp, #16]
   146cc:	mov	r3, r8
   146d0:	add	ip, sp, #48	; 0x30
   146d4:	str	r4, [sp]
   146d8:	ldr	r1, [sp, #32]
   146dc:	str	r5, [sp, #4]
   146e0:	str	r5, [sp, #8]
   146e4:	str	fp, [sp, #12]
   146e8:	str	ip, [sp, #20]
   146ec:	str	r9, [sp, #24]
   146f0:	str	sl, [sp, #28]
   146f4:	bl	13ca4 <XGetWindowProperty@plt>
   146f8:	cmp	r0, r8
   146fc:	beq	14698 <fatal@@Base+0x1b4>
   14700:	str	r8, [sp, #56]	; 0x38
   14704:	mov	r5, #0
   14708:	ldr	r8, [sp, #32]
   1470c:	b	1473c <fatal@@Base+0x258>
   14710:	ldr	r3, [sp, #48]	; 0x30
   14714:	add	r3, r3, #1
   14718:	cmp	r4, r3
   1471c:	bcs	14890 <fatal@@Base+0x3ac>
   14720:	ldr	r3, [sp, #52]	; 0x34
   14724:	ldr	r0, [sp, #56]	; 0x38
   14728:	add	r3, r3, #1
   1472c:	add	r4, r3, r4
   14730:	bl	13b60 <XFree@plt>
   14734:	cmp	r0, #0
   14738:	beq	148a4 <fatal@@Base+0x3c0>
   1473c:	ldr	r0, [r6, #8]
   14740:	add	ip, sp, #44	; 0x2c
   14744:	mov	r1, r8
   14748:	str	ip, [sp, #16]
   1474c:	str	r4, [sp]
   14750:	add	ip, sp, #48	; 0x30
   14754:	mov	r2, #39	; 0x27
   14758:	str	r5, [sp, #4]
   1475c:	mov	r3, #0
   14760:	str	r5, [sp, #8]
   14764:	str	fp, [sp, #12]
   14768:	str	ip, [sp, #20]
   1476c:	str	r9, [sp, #24]
   14770:	str	sl, [sp, #28]
   14774:	bl	13ca4 <XGetWindowProperty@plt>
   14778:	cmp	r0, #0
   1477c:	beq	14710 <fatal@@Base+0x22c>
   14780:	mov	r0, #0
   14784:	b	147d8 <fatal@@Base+0x2f4>
   14788:	cmp	r0, #0
   1478c:	beq	14704 <fatal@@Base+0x220>
   14790:	ldr	r4, [sp, #40]	; 0x28
   14794:	cmp	r4, #0
   14798:	beq	14884 <fatal@@Base+0x3a0>
   1479c:	ldr	r3, [sp, #48]	; 0x30
   147a0:	mov	r2, #0
   147a4:	add	r1, r3, #1
   147a8:	str	r1, [sp, #48]	; 0x30
   147ac:	strb	r2, [r0, r3]
   147b0:	ldr	r0, [sp, #56]	; 0x38
   147b4:	bl	14154 <__strdup@plt>
   147b8:	mov	r4, r0
   147bc:	ldr	r0, [sp, #56]	; 0x38
   147c0:	bl	13b60 <XFree@plt>
   147c4:	ldr	r3, [r7, #36]	; 0x24
   147c8:	ldr	r2, [sp, #40]	; 0x28
   147cc:	cmp	r2, r3
   147d0:	beq	147f4 <fatal@@Base+0x310>
   147d4:	mov	r0, r4
   147d8:	ldr	ip, [sp, #36]	; 0x24
   147dc:	ldr	r2, [sp, #76]	; 0x4c
   147e0:	ldr	r3, [ip]
   147e4:	cmp	r2, r3
   147e8:	bne	148b0 <fatal@@Base+0x3cc>
   147ec:	add	sp, sp, #84	; 0x54
   147f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147f4:	movw	r5, #62104	; 0xf298
   147f8:	movt	r5, #2
   147fc:	ldr	r3, [r5]
   14800:	cmn	r3, #1
   14804:	beq	147d4 <fatal@@Base+0x2f0>
   14808:	ldr	r3, [sp, #48]	; 0x30
   1480c:	str	r4, [sp, #68]	; 0x44
   14810:	str	r3, [sp, #60]	; 0x3c
   14814:	bl	13c38 <__ctype_get_mb_cur_max@plt>
   14818:	ldr	r3, [sp, #48]	; 0x30
   1481c:	mul	r3, r3, r0
   14820:	mov	r0, r3
   14824:	str	r3, [sp, #64]	; 0x40
   14828:	bl	13fbc <malloc@plt>
   1482c:	add	r3, sp, #64	; 0x40
   14830:	add	r1, sp, #68	; 0x44
   14834:	add	r2, sp, #60	; 0x3c
   14838:	mov	r6, r0
   1483c:	ldr	r0, [r5]
   14840:	str	r3, [sp]
   14844:	add	r3, sp, #72	; 0x48
   14848:	str	r6, [sp, #72]	; 0x48
   1484c:	bl	13d40 <iconv@plt>
   14850:	cmn	r0, #1
   14854:	beq	14898 <fatal@@Base+0x3b4>
   14858:	mov	r0, r4
   1485c:	bl	13da0 <free@plt>
   14860:	bl	13c38 <__ctype_get_mb_cur_max@plt>
   14864:	ldr	r1, [sp, #48]	; 0x30
   14868:	ldr	r3, [sp, #64]	; 0x40
   1486c:	mul	r1, r1, r0
   14870:	mov	r0, r6
   14874:	rsb	r1, r3, r1
   14878:	bl	1413c <realloc@plt>
   1487c:	mov	r4, r0
   14880:	b	147d4 <fatal@@Base+0x2f0>
   14884:	bl	13b60 <XFree@plt>
   14888:	mov	r0, r4
   1488c:	b	147d8 <fatal@@Base+0x2f4>
   14890:	ldr	r0, [sp, #56]	; 0x38
   14894:	b	14790 <fatal@@Base+0x2ac>
   14898:	mov	r0, r6
   1489c:	bl	13da0 <free@plt>
   148a0:	b	147d4 <fatal@@Base+0x2f0>
   148a4:	movw	r0, #52656	; 0xcdb0
   148a8:	movt	r0, #1
   148ac:	bl	144e4 <fatal@@Base>
   148b0:	bl	13fec <__stack_chk_fail@plt>
   148b4:	push	{r4, r5, r6, r7, lr}
   148b8:	movw	r5, #62120	; 0xf2a8
   148bc:	movt	r5, #2
   148c0:	sub	sp, sp, #36	; 0x24
   148c4:	mov	r6, r1
   148c8:	mov	r4, r0
   148cc:	ldr	r3, [r5]
   148d0:	str	r3, [sp, #28]
   148d4:	bl	143a0 <api_cleanExit@@Base+0x1c>
   148d8:	cmp	r0, #0
   148dc:	bne	148fc <fatal@@Base+0x418>
   148e0:	mov	r0, #1
   148e4:	ldr	r2, [sp, #28]
   148e8:	ldr	r3, [r5]
   148ec:	cmp	r2, r3
   148f0:	bne	149dc <fatal@@Base+0x4f8>
   148f4:	add	sp, sp, #36	; 0x24
   148f8:	pop	{r4, r5, r6, r7, pc}
   148fc:	movw	r3, #62136	; 0xf2b8
   14900:	movt	r3, #2
   14904:	add	r2, sp, #20
   14908:	add	ip, sp, #24
   1490c:	ldr	r0, [r3, #8]
   14910:	mov	r1, r4
   14914:	str	r2, [sp]
   14918:	add	r3, sp, #16
   1491c:	add	r2, sp, #12
   14920:	str	ip, [sp, #4]
   14924:	bl	14178 <XQueryTree@plt>
   14928:	cmp	r0, #0
   1492c:	beq	148e4 <fatal@@Base+0x400>
   14930:	mov	r0, r4
   14934:	ldr	r7, [sp, #12]
   14938:	bl	14648 <fatal@@Base+0x164>
   1493c:	mov	r1, r7
   14940:	mov	r2, r0
   14944:	mov	r0, r4
   14948:	bl	1448c <fatal_errno@@Base+0x58>
   1494c:	ldr	r3, [sp, #20]
   14950:	cmp	r3, #0
   14954:	beq	148e0 <fatal@@Base+0x3fc>
   14958:	ldr	r2, [sp, #24]
   1495c:	cmp	r2, #0
   14960:	beq	149ac <fatal@@Base+0x4c8>
   14964:	add	r6, r6, #1
   14968:	mov	r4, #0
   1496c:	b	1497c <fatal@@Base+0x498>
   14970:	add	r4, r4, #1
   14974:	cmp	r2, r4
   14978:	bls	149ac <fatal@@Base+0x4c8>
   1497c:	ldr	r0, [r3, r4, lsl #2]
   14980:	cmp	r0, #0
   14984:	beq	14970 <fatal@@Base+0x48c>
   14988:	mov	r1, r6
   1498c:	bl	148b4 <fatal@@Base+0x3d0>
   14990:	cmp	r0, #0
   14994:	beq	149d0 <fatal@@Base+0x4ec>
   14998:	ldr	r2, [sp, #24]
   1499c:	add	r4, r4, #1
   149a0:	ldr	r3, [sp, #20]
   149a4:	cmp	r2, r4
   149a8:	bhi	1497c <fatal@@Base+0x498>
   149ac:	mov	r4, #1
   149b0:	mov	r0, r3
   149b4:	bl	13b60 <XFree@plt>
   149b8:	cmp	r0, #0
   149bc:	movne	r0, r4
   149c0:	bne	148e4 <fatal@@Base+0x400>
   149c4:	movw	r0, #52680	; 0xcdc8
   149c8:	movt	r0, #1
   149cc:	bl	144e4 <fatal@@Base>
   149d0:	mov	r4, r0
   149d4:	ldr	r3, [sp, #20]
   149d8:	b	149b0 <fatal@@Base+0x4cc>
   149dc:	bl	13fec <__stack_chk_fail@plt>

000149e0 <tobrltty_init@@Base>:
   149e0:	push	{r4, r5, lr}
   149e4:	movw	r4, #62120	; 0xf2a8
   149e8:	movt	r4, #2
   149ec:	sub	sp, sp, #28
   149f0:	add	r5, sp, #24
   149f4:	ldr	r3, [r4]
   149f8:	str	r0, [r5, #-12]!
   149fc:	mov	r0, #15
   14a00:	str	r1, [sp, #16]
   14a04:	movw	r1, #17284	; 0x4384
   14a08:	movt	r1, #1
   14a0c:	str	r3, [sp, #20]
   14a10:	bl	13bfc <signal@plt>
   14a14:	movw	r1, #17284	; 0x4384
   14a18:	mov	r0, #2
   14a1c:	movt	r1, #1
   14a20:	bl	13bfc <signal@plt>
   14a24:	movw	r1, #17284	; 0x4384
   14a28:	mov	r0, #1
   14a2c:	movt	r1, #1
   14a30:	bl	13bfc <signal@plt>
   14a34:	movw	r1, #17284	; 0x4384
   14a38:	mov	r0, #3
   14a3c:	movt	r1, #1
   14a40:	bl	13bfc <signal@plt>
   14a44:	movw	r1, #17284	; 0x4384
   14a48:	mov	r0, #13
   14a4c:	movt	r1, #1
   14a50:	bl	13bfc <signal@plt>
   14a54:	mov	r0, r5
   14a58:	mov	r1, r5
   14a5c:	bl	141d8 <brlapi_openConnection@plt>
   14a60:	movw	r3, #62136	; 0xf2b8
   14a64:	movt	r3, #2
   14a68:	cmp	r0, #0
   14a6c:	str	r0, [r3]
   14a70:	blt	14aa0 <tobrltty_init@@Base+0xc0>
   14a74:	add	r0, sp, #4
   14a78:	add	r1, sp, #8
   14a7c:	bl	13ef0 <brlapi_getDisplaySize@plt>
   14a80:	cmp	r0, #0
   14a84:	blt	14acc <tobrltty_init@@Base+0xec>
   14a88:	ldr	r2, [sp, #20]
   14a8c:	ldr	r3, [r4]
   14a90:	cmp	r2, r3
   14a94:	bne	14ac8 <tobrltty_init@@Base+0xe8>
   14a98:	add	sp, sp, #28
   14a9c:	pop	{r4, r5, pc}
   14aa0:	mov	r2, #5
   14aa4:	movw	r1, #52696	; 0xcdd8
   14aa8:	mov	r0, #0
   14aac:	movt	r1, #1
   14ab0:	bl	13dd0 <dcgettext@plt>
   14ab4:	ldr	r2, [sp, #16]
   14ab8:	mov	r1, r0
   14abc:	movw	r0, #52728	; 0xcdf8
   14ac0:	movt	r0, #1
   14ac4:	bl	143dc <fatal_brlapi_errno@@Base>
   14ac8:	bl	13fec <__stack_chk_fail@plt>
   14acc:	movw	r0, #52744	; 0xce08
   14ad0:	mov	r1, #0
   14ad4:	movt	r0, #1
   14ad8:	bl	143dc <fatal_brlapi_errno@@Base>

00014adc <getVT@@Base>:
   14adc:	push	{r4, r5, r6, r7, lr}
   14ae0:	movw	r6, #62120	; 0xf2a8
   14ae4:	movt	r6, #2
   14ae8:	sub	sp, sp, #68	; 0x44
   14aec:	movw	r0, #52760	; 0xce18
   14af0:	movt	r0, #1
   14af4:	ldr	r3, [r6]
   14af8:	str	r3, [sp, #60]	; 0x3c
   14afc:	bl	13c68 <getenv@plt>
   14b00:	subs	r4, r0, #0
   14b04:	beq	14c18 <getVT@@Base+0x13c>
   14b08:	mov	r0, #0
   14b0c:	mov	r1, r0
   14b10:	mov	r2, r0
   14b14:	bl	13e78 <brlapi_enterTtyModeWithPath@plt>
   14b18:	cmp	r0, #0
   14b1c:	blt	14dec <getVT@@Base+0x310>
   14b20:	mov	r0, #0
   14b24:	mov	r1, r0
   14b28:	mov	r2, r0
   14b2c:	bl	13d64 <brlapi_ignoreKeys@plt>
   14b30:	cmp	r0, #0
   14b34:	blt	14ee4 <getVT@@Base+0x408>
   14b38:	add	r7, sp, #64	; 0x40
   14b3c:	mov	r0, #1
   14b40:	mov	r4, #0
   14b44:	mov	r5, #0
   14b48:	mov	r2, r0
   14b4c:	strd	r4, [r7, #-16]!
   14b50:	mov	r1, r7
   14b54:	bl	14100 <brlapi_acceptKeys@plt>
   14b58:	cmp	r0, #0
   14b5c:	bne	14ea0 <getVT@@Base+0x3c4>
   14b60:	mov	r0, #3
   14b64:	mov	r1, r7
   14b68:	mov	r2, #1
   14b6c:	mov	r4, #77	; 0x4d
   14b70:	mov	r5, #0
   14b74:	movt	r4, #8192	; 0x2000
   14b78:	strd	r4, [sp, #48]	; 0x30
   14b7c:	bl	14100 <brlapi_acceptKeys@plt>
   14b80:	cmp	r0, #0
   14b84:	bne	14ea0 <getVT@@Base+0x3c4>
   14b88:	mov	r0, #3
   14b8c:	mov	r1, r7
   14b90:	mov	r2, #1
   14b94:	mov	r4, #78	; 0x4e
   14b98:	mov	r5, #0
   14b9c:	movt	r4, #8192	; 0x2000
   14ba0:	strd	r4, [sp, #48]	; 0x30
   14ba4:	bl	14100 <brlapi_acceptKeys@plt>
   14ba8:	cmp	r0, #0
   14bac:	bne	14ea0 <getVT@@Base+0x3c4>
   14bb0:	mov	r0, #3
   14bb4:	mov	r1, r7
   14bb8:	mov	r2, #1
   14bbc:	mov	r4, #79	; 0x4f
   14bc0:	mov	r5, #0
   14bc4:	movt	r4, #8192	; 0x2000
   14bc8:	strd	r4, [sp, #48]	; 0x30
   14bcc:	bl	14100 <brlapi_acceptKeys@plt>
   14bd0:	cmp	r0, #0
   14bd4:	bne	14ea0 <getVT@@Base+0x3c4>
   14bd8:	mov	r1, r7
   14bdc:	mov	r0, #3
   14be0:	mov	r2, #1
   14be4:	mov	r4, #80	; 0x50
   14be8:	mov	r5, #0
   14bec:	movt	r4, #8192	; 0x2000
   14bf0:	strd	r4, [sp, #48]	; 0x30
   14bf4:	bl	14100 <brlapi_acceptKeys@plt>
   14bf8:	cmp	r0, #0
   14bfc:	bne	14ea0 <getVT@@Base+0x3c4>
   14c00:	ldr	r2, [sp, #60]	; 0x3c
   14c04:	ldr	r3, [r6]
   14c08:	cmp	r2, r3
   14c0c:	bne	14f08 <getVT@@Base+0x42c>
   14c10:	add	sp, sp, #68	; 0x44
   14c14:	pop	{r4, r5, r6, r7, pc}
   14c18:	movw	r5, #62136	; 0xf2b8
   14c1c:	movt	r5, #2
   14c20:	mov	r2, r4
   14c24:	movw	r1, #52772	; 0xce24
   14c28:	ldr	r3, [r5, #8]
   14c2c:	movt	r1, #1
   14c30:	ldr	ip, [r3, #132]	; 0x84
   14c34:	mov	r0, r3
   14c38:	ldr	r3, [r3, #140]	; 0x8c
   14c3c:	add	ip, ip, ip, lsl #2
   14c40:	add	ip, r3, ip, lsl #4
   14c44:	ldr	r7, [ip, #8]
   14c48:	bl	14064 <XInternAtom@plt>
   14c4c:	subs	r2, r0, #0
   14c50:	beq	14e70 <getVT@@Base+0x394>
   14c54:	ldr	r0, [r5, #8]
   14c58:	add	ip, sp, #32
   14c5c:	add	r3, sp, #36	; 0x24
   14c60:	str	ip, [sp, #12]
   14c64:	str	r3, [sp, #16]
   14c68:	add	ip, sp, #40	; 0x28
   14c6c:	add	r3, sp, #44	; 0x2c
   14c70:	str	ip, [sp, #20]
   14c74:	str	r3, [sp, #24]
   14c78:	add	ip, sp, #48	; 0x30
   14c7c:	mov	r1, r7
   14c80:	str	r4, [sp, #4]
   14c84:	str	r4, [sp, #8]
   14c88:	mov	r5, #1
   14c8c:	mov	r3, r4
   14c90:	str	r5, [sp]
   14c94:	str	ip, [sp, #28]
   14c98:	bl	13ca4 <XGetWindowProperty@plt>
   14c9c:	cmp	r0, #0
   14ca0:	bne	14eb0 <getVT@@Base+0x3d4>
   14ca4:	ldr	r3, [sp, #40]	; 0x28
   14ca8:	cmp	r3, #0
   14cac:	beq	14db4 <getVT@@Base+0x2d8>
   14cb0:	cmp	r3, #1
   14cb4:	bls	14ce4 <getVT@@Base+0x208>
   14cb8:	movw	r3, #62128	; 0xf2b0
   14cbc:	movt	r3, #2
   14cc0:	mov	r2, #5
   14cc4:	movw	r1, #52872	; 0xce88
   14cc8:	movt	r1, #1
   14ccc:	ldr	r4, [r3]
   14cd0:	bl	13dd0 <dcgettext@plt>
   14cd4:	mov	r1, r5
   14cd8:	mov	r2, r0
   14cdc:	mov	r0, r4
   14ce0:	bl	14004 <__fprintf_chk@plt>
   14ce4:	ldr	r2, [sp, #32]
   14ce8:	sub	r2, r2, #6
   14cec:	cmp	r2, #27
   14cf0:	bhi	14e10 <getVT@@Base+0x334>
   14cf4:	mov	r5, #1
   14cf8:	movw	r3, #8193	; 0x2001
   14cfc:	lsl	r2, r5, r2
   14d00:	movt	r3, #2048	; 0x800
   14d04:	and	r3, r2, r3
   14d08:	cmp	r3, #0
   14d0c:	beq	14e10 <getVT@@Base+0x334>
   14d10:	ldr	r3, [sp, #36]	; 0x24
   14d14:	cmp	r3, #16
   14d18:	beq	14e4c <getVT@@Base+0x370>
   14d1c:	cmp	r3, #32
   14d20:	beq	14e64 <getVT@@Base+0x388>
   14d24:	cmp	r3, #8
   14d28:	beq	14e58 <getVT@@Base+0x37c>
   14d2c:	movw	r3, #62128	; 0xf2b0
   14d30:	movt	r3, #2
   14d34:	mov	r2, #5
   14d38:	movw	r1, #52908	; 0xceac
   14d3c:	mov	r0, #0
   14d40:	movt	r1, #1
   14d44:	ldr	r7, [r3]
   14d48:	bl	13dd0 <dcgettext@plt>
   14d4c:	mov	r1, r5
   14d50:	mvn	r4, #0
   14d54:	mov	r2, r0
   14d58:	mov	r0, r7
   14d5c:	bl	14004 <__fprintf_chk@plt>
   14d60:	ldr	r0, [sp, #48]	; 0x30
   14d64:	bl	13b60 <XFree@plt>
   14d68:	cmp	r0, #0
   14d6c:	beq	14f0c <getVT@@Base+0x430>
   14d70:	cmn	r4, #1
   14d74:	beq	14b08 <getVT@@Base+0x2c>
   14d78:	mov	r0, r4
   14d7c:	mov	r1, #0
   14d80:	bl	13c20 <brlapi_enterTtyMode@plt>
   14d84:	cmp	r0, #0
   14d88:	bge	14b20 <getVT@@Base+0x44>
   14d8c:	mov	r2, #5
   14d90:	movw	r1, #53004	; 0xcf0c
   14d94:	mov	r0, #0
   14d98:	movt	r1, #1
   14d9c:	bl	13dd0 <dcgettext@plt>
   14da0:	mov	r2, r4
   14da4:	mov	r1, r0
   14da8:	movw	r0, #53024	; 0xcf20
   14dac:	movt	r0, #1
   14db0:	bl	143dc <fatal_brlapi_errno@@Base>
   14db4:	movw	r3, #62128	; 0xf2b0
   14db8:	movt	r3, #2
   14dbc:	mov	r2, #5
   14dc0:	movw	r1, #52848	; 0xce70
   14dc4:	movt	r1, #1
   14dc8:	ldr	r4, [r3]
   14dcc:	bl	13dd0 <dcgettext@plt>
   14dd0:	mov	r1, r5
   14dd4:	mov	r2, r0
   14dd8:	mov	r0, r4
   14ddc:	bl	14004 <__fprintf_chk@plt>
   14de0:	mvn	r4, #0
   14de4:	ldr	r0, [sp, #48]	; 0x30
   14de8:	b	14d64 <getVT@@Base+0x288>
   14dec:	movw	r1, #52976	; 0xcef0
   14df0:	mov	r0, #0
   14df4:	movt	r1, #1
   14df8:	mov	r2, #5
   14dfc:	bl	13dd0 <dcgettext@plt>
   14e00:	mov	r1, r0
   14e04:	movw	r0, #52992	; 0xcf00
   14e08:	movt	r0, #1
   14e0c:	bl	143dc <fatal_brlapi_errno@@Base>
   14e10:	movw	r3, #62128	; 0xf2b0
   14e14:	movt	r3, #2
   14e18:	mov	r2, #5
   14e1c:	movw	r1, #52936	; 0xcec8
   14e20:	mov	r0, #0
   14e24:	movt	r1, #1
   14e28:	ldr	r5, [r3]
   14e2c:	bl	13dd0 <dcgettext@plt>
   14e30:	mov	r1, #1
   14e34:	mvn	r4, #0
   14e38:	mov	r2, r0
   14e3c:	mov	r0, r5
   14e40:	bl	14004 <__fprintf_chk@plt>
   14e44:	ldr	r0, [sp, #48]	; 0x30
   14e48:	b	14d64 <getVT@@Base+0x288>
   14e4c:	ldr	r0, [sp, #48]	; 0x30
   14e50:	ldrh	r4, [r0]
   14e54:	b	14d64 <getVT@@Base+0x288>
   14e58:	ldr	r0, [sp, #48]	; 0x30
   14e5c:	ldrb	r4, [r0]
   14e60:	b	14d64 <getVT@@Base+0x288>
   14e64:	ldr	r0, [sp, #48]	; 0x30
   14e68:	ldr	r4, [r0]
   14e6c:	b	14d64 <getVT@@Base+0x288>
   14e70:	movw	r3, #62128	; 0xf2b0
   14e74:	movt	r3, #2
   14e78:	mov	r2, #5
   14e7c:	movw	r1, #52784	; 0xce30
   14e80:	movt	r1, #1
   14e84:	ldr	r4, [r3]
   14e88:	bl	13dd0 <dcgettext@plt>
   14e8c:	mov	r1, #1
   14e90:	mov	r2, r0
   14e94:	mov	r0, r4
   14e98:	bl	14004 <__fprintf_chk@plt>
   14e9c:	b	14b08 <getVT@@Base+0x2c>
   14ea0:	movw	r0, #53076	; 0xcf54
   14ea4:	mov	r1, #0
   14ea8:	movt	r0, #1
   14eac:	bl	143dc <fatal_brlapi_errno@@Base>
   14eb0:	movw	r3, #62128	; 0xf2b0
   14eb4:	movt	r3, #2
   14eb8:	mov	r0, r4
   14ebc:	mov	r2, #5
   14ec0:	movw	r1, #52804	; 0xce44
   14ec4:	movt	r1, #1
   14ec8:	ldr	r4, [r3]
   14ecc:	bl	13dd0 <dcgettext@plt>
   14ed0:	mov	r1, r5
   14ed4:	mov	r2, r0
   14ed8:	mov	r0, r4
   14edc:	bl	14004 <__fprintf_chk@plt>
   14ee0:	b	14b08 <getVT@@Base+0x2c>
   14ee4:	movw	r1, #53040	; 0xcf30
   14ee8:	mov	r0, #0
   14eec:	movt	r1, #1
   14ef0:	mov	r2, #5
   14ef4:	bl	13dd0 <dcgettext@plt>
   14ef8:	mov	r1, r0
   14efc:	movw	r0, #53060	; 0xcf44
   14f00:	movt	r0, #1
   14f04:	bl	143dc <fatal_brlapi_errno@@Base>
   14f08:	bl	13fec <__stack_chk_fail@plt>
   14f0c:	movw	r0, #52960	; 0xcee0
   14f10:	movt	r0, #1
   14f14:	bl	144e4 <fatal@@Base>

00014f18 <api_setName@@Base>:
   14f18:	push	{r4, r5, r6, lr}
   14f1c:	movw	r4, #12968	; 0x32a8
   14f20:	movt	r4, #3
   14f24:	mov	r6, r0
   14f28:	ldr	r5, [r4, #40]	; 0x28
   14f2c:	cmp	r5, #0
   14f30:	beq	14f4c <api_setName@@Base+0x34>
   14f34:	mov	r1, r5
   14f38:	bl	14184 <strcmp@plt>
   14f3c:	cmp	r0, #0
   14f40:	popeq	{r4, r5, r6, pc}
   14f44:	mov	r0, r5
   14f48:	bl	13da0 <free@plt>
   14f4c:	mov	r0, r6
   14f50:	bl	14154 <__strdup@plt>
   14f54:	cmp	r0, #0
   14f58:	str	r0, [r4, #40]	; 0x28
   14f5c:	beq	14fb8 <api_setName@@Base+0xa0>
   14f60:	mov	r0, #0
   14f64:	mov	r1, r6
   14f68:	bl	13de8 <brlapi_writeText@plt>
   14f6c:	cmp	r0, #0
   14f70:	popge	{r4, r5, r6, pc}
   14f74:	movw	r0, #53104	; 0xcf70
   14f78:	movt	r0, #1
   14f7c:	bl	13fd4 <brlapi_perror@plt>
   14f80:	movw	r3, #62128	; 0xf2b0
   14f84:	movt	r3, #2
   14f88:	mov	r2, #5
   14f8c:	movw	r1, #53116	; 0xcf7c
   14f90:	mov	r0, #0
   14f94:	movt	r1, #1
   14f98:	ldr	r4, [r3]
   14f9c:	bl	13dd0 <dcgettext@plt>
   14fa0:	mov	r3, r6
   14fa4:	mov	r1, #1
   14fa8:	mov	r2, r0
   14fac:	mov	r0, r4
   14fb0:	pop	{r4, r5, r6, lr}
   14fb4:	b	14004 <__fprintf_chk@plt>
   14fb8:	mov	r1, r0
   14fbc:	movw	r0, #53088	; 0xcf60
   14fc0:	movt	r0, #1
   14fc4:	bl	14434 <fatal_errno@@Base>

00014fc8 <api_setFocus@@Base>:
   14fc8:	push	{r4, lr}
   14fcc:	mov	r4, r0
   14fd0:	bl	13c44 <brlapi_setFocus@plt>
   14fd4:	cmp	r0, #0
   14fd8:	popge	{r4, pc}
   14fdc:	mov	r2, #5
   14fe0:	movw	r1, #53148	; 0xcf9c
   14fe4:	mov	r0, #0
   14fe8:	movt	r1, #1
   14fec:	bl	13dd0 <dcgettext@plt>
   14ff0:	mov	r2, r4
   14ff4:	mov	r1, r0
   14ff8:	movw	r0, #53176	; 0xcfb8
   14ffc:	movt	r0, #1
   15000:	bl	143dc <fatal_brlapi_errno@@Base>
   15004:	push	{r3, r4, r5, lr}
   15008:	movw	r5, #12968	; 0x32a8
   1500c:	movt	r5, #3
   15010:	mov	r4, r0
   15014:	str	r0, [r5, #44]	; 0x2c
   15018:	bl	14fc8 <api_setFocus@@Base>
   1501c:	ldr	r3, [r5, #48]	; 0x30
   15020:	cmp	r3, #0
   15024:	popne	{r3, r4, r5, pc}
   15028:	ubfx	r2, r4, #0, #12
   1502c:	movw	r3, #62136	; 0xf2b8
   15030:	eor	r2, r2, r4, lsr #20
   15034:	movt	r3, #2
   15038:	add	r3, r3, r2, lsl #2
   1503c:	ldr	r2, [r3, #12]
   15040:	cmp	r2, #0
   15044:	beq	15070 <api_setFocus@@Base+0xa8>
   15048:	ldr	r3, [r2]
   1504c:	cmp	r4, r3
   15050:	bne	15064 <api_setFocus@@Base+0x9c>
   15054:	b	150b4 <api_setFocus@@Base+0xec>
   15058:	ldr	r1, [r2]
   1505c:	cmp	r4, r1
   15060:	beq	150b4 <api_setFocus@@Base+0xec>
   15064:	ldr	r2, [r2, #12]
   15068:	cmp	r2, #0
   1506c:	bne	15058 <api_setFocus@@Base+0x90>
   15070:	movw	r3, #62128	; 0xf2b0
   15074:	movt	r3, #2
   15078:	mov	r2, #5
   1507c:	movw	r1, #53204	; 0xcfd4
   15080:	mov	r0, #0
   15084:	movt	r1, #1
   15088:	ldr	r5, [r3]
   1508c:	bl	13dd0 <dcgettext@plt>
   15090:	mov	r3, r4
   15094:	mov	r1, #1
   15098:	mov	r2, r0
   1509c:	mov	r0, r5
   150a0:	bl	14004 <__fprintf_chk@plt>
   150a4:	movw	r0, #53196	; 0xcfcc
   150a8:	movt	r0, #1
   150ac:	pop	{r3, r4, r5, lr}
   150b0:	b	14f18 <api_setName@@Base>
   150b4:	ldr	r0, [r2, #8]
   150b8:	cmp	r0, #0
   150bc:	bne	150ac <api_setFocus@@Base+0xe4>
   150c0:	ldm	r2, {r1, r3}
   150c4:	cmp	r1, r3
   150c8:	bne	150a4 <api_setFocus@@Base+0xdc>
   150cc:	movw	r0, #53188	; 0xcfc4
   150d0:	movt	r0, #1
   150d4:	pop	{r3, r4, r5, lr}
   150d8:	b	14f18 <api_setName@@Base>

000150dc <toX_f@@Base>:
   150dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150e0:	add	fp, sp, #32
   150e4:	sub	sp, sp, #452	; 0x1c4
   150e8:	movw	r3, #62120	; 0xf2a8
   150ec:	movt	r3, #2
   150f0:	movw	r8, #12968	; 0x32a8
   150f4:	cmp	r0, #0
   150f8:	ldr	r3, [r3]
   150fc:	movt	r8, #3
   15100:	str	r0, [r8, #28]
   15104:	str	r3, [fp, #-40]	; 0xffffffd8
   15108:	beq	15514 <toX_f@@Base+0x438>
   1510c:	bl	13d70 <XOpenDisplay@plt>
   15110:	movw	r4, #62136	; 0xf2b8
   15114:	movt	r4, #2
   15118:	cmp	r0, #0
   1511c:	str	r0, [r4, #8]
   15120:	beq	15368 <toX_f@@Base+0x28c>
   15124:	movw	r0, #17716	; 0x4534
   15128:	movt	r0, #1
   1512c:	bl	140e8 <XSetErrorHandler@plt>
   15130:	cmp	r0, #0
   15134:	beq	15380 <toX_f@@Base+0x2a4>
   15138:	ldr	r0, [r4, #8]
   1513c:	sub	r3, fp, #424	; 0x1a8
   15140:	sub	r1, fp, #436	; 0x1b4
   15144:	str	r3, [sp]
   15148:	sub	r2, fp, #432	; 0x1b0
   1514c:	sub	r3, fp, #428	; 0x1ac
   15150:	bl	13f14 <XTestQueryExtension@plt>
   15154:	sub	sl, fp, #412	; 0x19c
   15158:	mov	r5, #0
   1515c:	mov	r3, #1
   15160:	mov	r1, sl
   15164:	str	r5, [fp, #-412]	; 0xfffffe64
   15168:	str	r3, [fp, #-416]	; 0xfffffe60
   1516c:	str	r0, [fp, #-444]	; 0xfffffe44
   15170:	sub	r0, fp, #416	; 0x1a0
   15174:	bl	13d1c <XkbLibraryVersion@plt>
   15178:	cmp	r0, r5
   1517c:	bne	15194 <toX_f@@Base+0xb8>
   15180:	movw	r1, #53316	; 0xd044
   15184:	mov	r2, #5
   15188:	movt	r1, #1
   1518c:	bl	13dd0 <dcgettext@plt>
   15190:	bl	144e4 <fatal@@Base>
   15194:	sub	r1, fp, #420	; 0x1a4
   15198:	sub	r0, fp, #416	; 0x1a0
   1519c:	stm	sp, {r0, sl}
   151a0:	mov	r2, r1
   151a4:	ldr	r0, [r4, #8]
   151a8:	mov	r3, r1
   151ac:	bl	13d7c <XkbQueryExtension@plt>
   151b0:	cmp	r0, #0
   151b4:	beq	15354 <toX_f@@Base+0x278>
   151b8:	ldr	r0, [r4, #8]
   151bc:	bl	13d4c <XConnectionNumber@plt>
   151c0:	sub	r2, fp, #296	; 0x128
   151c4:	sub	r3, fp, #300	; 0x12c
   151c8:	add	r1, r2, #124	; 0x7c
   151cc:	mov	r2, r5
   151d0:	str	r0, [fp, #-440]	; 0xfffffe48
   151d4:	str	r2, [r3, #4]!
   151d8:	cmp	r3, r1
   151dc:	bne	151d4 <toX_f@@Base+0xf8>
   151e0:	ldr	r0, [r4]
   151e4:	sub	r9, fp, #36	; 0x24
   151e8:	bl	141cc <__fdelt_chk@plt>
   151ec:	ldr	r3, [r4]
   151f0:	mov	ip, #1
   151f4:	ands	r2, r3, #-2147483617	; 0x8000001f
   151f8:	submi	r2, r2, #1
   151fc:	mvnmi	r2, r2, lsl #27
   15200:	mvnmi	r2, r2, lsr #27
   15204:	addmi	r2, r2, #1
   15208:	add	r3, r9, r0, lsl #2
   1520c:	ldr	r0, [fp, #-440]	; 0xfffffe48
   15210:	ldr	r1, [r3, #-260]	; 0xfffffefc
   15214:	orr	r2, r1, ip, lsl r2
   15218:	str	r2, [r3, #-260]	; 0xfffffefc
   1521c:	bl	141cc <__fdelt_chk@plt>
   15220:	ldr	ip, [fp, #-440]	; 0xfffffe48
   15224:	sub	lr, fp, #36	; 0x24
   15228:	ldr	r2, [r4]
   1522c:	ands	r3, ip, #-2147483617	; 0x8000001f
   15230:	ldr	r9, [fp, #-440]	; 0xfffffe48
   15234:	submi	r3, r3, #1
   15238:	mov	ip, #1
   1523c:	mvnmi	r3, r3, lsl #27
   15240:	mvnmi	r3, r3, lsr #27
   15244:	addmi	r3, r3, #1
   15248:	lsl	ip, ip, r3
   1524c:	cmp	r9, r2
   15250:	addle	r2, r2, #1
   15254:	str	ip, [fp, #-448]	; 0xfffffe40
   15258:	strle	r2, [fp, #-452]	; 0xfffffe3c
   1525c:	add	r0, lr, r0, lsl #2
   15260:	ldr	r1, [r0, #-260]	; 0xfffffefc
   15264:	orr	r3, r1, ip
   15268:	addgt	ip, r9, #1
   1526c:	str	r3, [r0, #-260]	; 0xfffffefc
   15270:	strgt	ip, [fp, #-452]	; 0xfffffe3c
   15274:	bl	14adc <getVT@@Base>
   15278:	movw	r3, #52296	; 0xcc48
   1527c:	movt	r3, #1
   15280:	ldm	r3, {r0, r1, r2, r3}
   15284:	stm	sl, {r0, r1, r2, r3}
   15288:	mov	r0, sl
   1528c:	mov	r1, #1
   15290:	bl	13c08 <brlapi_ignoreKeyRanges@plt>
   15294:	subs	r5, r0, #0
   15298:	bne	15934 <toX_f@@Base+0x858>
   1529c:	mov	r2, r5
   152a0:	movw	r1, #53396	; 0xd094
   152a4:	ldr	r0, [r4, #8]
   152a8:	movt	r1, #1
   152ac:	bl	14064 <XInternAtom@plt>
   152b0:	mov	r2, r5
   152b4:	movw	r1, #53412	; 0xd0a4
   152b8:	movt	r1, #1
   152bc:	str	r0, [r8, #32]
   152c0:	ldr	r0, [r4, #8]
   152c4:	bl	14064 <XInternAtom@plt>
   152c8:	str	r0, [r8, #36]	; 0x24
   152cc:	mov	r0, #14
   152d0:	bl	13fe0 <nl_langinfo@plt>
   152d4:	movw	r1, #53424	; 0xd0b0
   152d8:	movt	r1, #1
   152dc:	mov	r5, r0
   152e0:	bl	14184 <strcmp@plt>
   152e4:	cmp	r0, #0
   152e8:	bne	1552c <toX_f@@Base+0x450>
   152ec:	ldr	r0, [r4, #8]
   152f0:	ldr	r3, [r0, #136]	; 0x88
   152f4:	cmp	r3, #0
   152f8:	ble	15394 <toX_f@@Base+0x2b8>
   152fc:	mov	r6, #0
   15300:	mov	r5, r6
   15304:	b	15320 <toX_f@@Base+0x244>
   15308:	ldr	r0, [r4, #8]
   1530c:	add	r5, r5, #1
   15310:	add	r6, r6, #80	; 0x50
   15314:	ldr	r3, [r0, #136]	; 0x88
   15318:	cmp	r3, r5
   1531c:	ble	15394 <toX_f@@Base+0x2b8>
   15320:	ldr	r3, [r0, #140]	; 0x8c
   15324:	mov	r1, #0
   15328:	add	r3, r3, r6
   1532c:	ldr	r0, [r3, #8]
   15330:	bl	148b4 <fatal@@Base+0x3d0>
   15334:	cmp	r0, #0
   15338:	bne	15308 <toX_f@@Base+0x22c>
   1533c:	movw	r1, #53448	; 0xd0c8
   15340:	mov	r2, #5
   15344:	movt	r1, #1
   15348:	bl	13dd0 <dcgettext@plt>
   1534c:	mov	r1, r5
   15350:	bl	144e4 <fatal@@Base>
   15354:	movw	r1, #53344	; 0xd060
   15358:	mov	r2, #5
   1535c:	movt	r1, #1
   15360:	bl	13dd0 <dcgettext@plt>
   15364:	bl	144e4 <fatal@@Base>
   15368:	movw	r1, #53256	; 0xd008
   1536c:	mov	r2, #5
   15370:	movt	r1, #1
   15374:	bl	13dd0 <dcgettext@plt>
   15378:	ldr	r1, [r8, #28]
   1537c:	bl	144e4 <fatal@@Base>
   15380:	movw	r1, #53288	; 0xd028
   15384:	mov	r2, #5
   15388:	movt	r1, #1
   1538c:	bl	13dd0 <dcgettext@plt>
   15390:	bl	144e4 <fatal@@Base>
   15394:	sub	r1, fp, #416	; 0x1a0
   15398:	mov	r2, sl
   1539c:	bl	13f38 <XGetInputFocus@plt>
   153a0:	cmp	r0, #0
   153a4:	beq	15808 <toX_f@@Base+0x72c>
   153a8:	movw	r9, #62136	; 0xf2b8
   153ac:	movt	r9, #2
   153b0:	ldr	r0, [fp, #-416]	; 0xfffffe60
   153b4:	bl	15004 <api_setFocus@@Base+0x3c>
   153b8:	mov	ip, #0
   153bc:	str	ip, [fp, #-456]	; 0xfffffe38
   153c0:	movw	r6, #62128	; 0xf2b0
   153c4:	movt	r6, #2
   153c8:	ldr	r0, [r4, #8]
   153cc:	mov	r5, #0
   153d0:	bl	13fa4 <XFlush@plt>
   153d4:	sub	r1, fp, #296	; 0x128
   153d8:	mov	r2, #128	; 0x80
   153dc:	sub	r0, fp, #168	; 0xa8
   153e0:	bl	13e84 <memcpy@plt>
   153e4:	str	r5, [sp]
   153e8:	mov	r2, r5
   153ec:	mov	r3, r5
   153f0:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   153f4:	sub	r1, fp, #168	; 0xa8
   153f8:	bl	13f5c <select@plt>
   153fc:	cmp	r0, r5
   15400:	blt	158e4 <toX_f@@Base+0x808>
   15404:	ldr	r0, [fp, #-440]	; 0xfffffe48
   15408:	bl	141cc <__fdelt_chk@plt>
   1540c:	sub	lr, fp, #36	; 0x24
   15410:	ldr	ip, [fp, #-448]	; 0xfffffe40
   15414:	add	r0, lr, r0, lsl #2
   15418:	ldr	r3, [r0, #-132]	; 0xffffff7c
   1541c:	tst	ip, r3
   15420:	bne	1562c <toX_f@@Base+0x550>
   15424:	ldr	ip, [fp, #-444]	; 0xfffffe44
   15428:	cmp	ip, #0
   1542c:	beq	153c8 <toX_f@@Base+0x2ec>
   15430:	ldr	r0, [r4]
   15434:	bl	141cc <__fdelt_chk@plt>
   15438:	ldr	r3, [r4]
   1543c:	sub	lr, fp, #36	; 0x24
   15440:	ands	r3, r3, #-2147483617	; 0x8000001f
   15444:	submi	r3, r3, #1
   15448:	mvnmi	r3, r3, lsl #27
   1544c:	mvnmi	r3, r3, lsr #27
   15450:	addmi	r3, r3, #1
   15454:	add	r0, lr, r0, lsl #2
   15458:	ldr	r2, [r0, #-132]	; 0xffffff7c
   1545c:	asr	r3, r2, r3
   15460:	tst	r3, #1
   15464:	beq	153c8 <toX_f@@Base+0x2ec>
   15468:	ldr	r5, [fp, #-456]	; 0xfffffe38
   1546c:	movw	r7, #62136	; 0xf2b8
   15470:	movt	r7, #2
   15474:	movw	ip, #62128	; 0xf2b0
   15478:	str	r8, [fp, #-468]	; 0xfffffe2c
   1547c:	movt	ip, #2
   15480:	str	r9, [fp, #-472]	; 0xfffffe28
   15484:	str	ip, [fp, #-460]	; 0xfffffe34
   15488:	mov	r0, #0
   1548c:	mov	r1, sl
   15490:	bl	13e3c <brlapi_readKey@plt>
   15494:	cmp	r0, #1
   15498:	mov	r8, r0
   1549c:	bne	15b14 <toX_f@@Base+0xa38>
   154a0:	movw	r6, #65160	; 0xfe88
   154a4:	sub	lr, fp, #36	; 0x24
   154a8:	movt	r6, #65535	; 0xffff
   154ac:	mov	r0, #-536870912	; 0xe0000000
   154b0:	mov	r1, #0
   154b4:	ldrd	r2, [lr, r6]
   154b8:	and	r0, r0, r2
   154bc:	and	r1, r1, r3
   154c0:	orrs	r9, r0, r1
   154c4:	beq	15a30 <toX_f@@Base+0x954>
   154c8:	cmp	r1, #0
   154cc:	cmpeq	r0, #536870912	; 0x20000000
   154d0:	bne	159e8 <toX_f@@Base+0x90c>
   154d4:	mvn	r0, #-536870912	; 0xe0000000
   154d8:	and	r0, r0, r2
   154dc:	subs	r0, r0, #77	; 0x4d
   154e0:	mov	r1, #0
   154e4:	and	r1, r1, r3
   154e8:	sbc	r1, r1, #0
   154ec:	cmp	r1, #0
   154f0:	cmpeq	r0, #3
   154f4:	bhi	1599c <toX_f@@Base+0x8c0>
   154f8:	cmp	r0, #3
   154fc:	ldrls	pc, [pc, r0, lsl #2]
   15500:	b	1599c <toX_f@@Base+0x8c0>
   15504:	muleq	r1, r4, r9
   15508:	andeq	r5, r1, ip, lsl #19
   1550c:	andeq	r5, r1, r4, lsl #19
   15510:	andeq	r5, r1, r4, asr #18
   15514:	movw	r0, #53248	; 0xd000
   15518:	movt	r0, #1
   1551c:	bl	13c68 <getenv@plt>
   15520:	mov	r3, r0
   15524:	str	r3, [r8, #28]
   15528:	b	1510c <toX_f@@Base+0x30>
   1552c:	mov	r0, r5
   15530:	mov	r6, sp
   15534:	bl	13e48 <strlen@plt>
   15538:	mov	r2, #1
   1553c:	add	r3, r0, #18
   15540:	add	r1, r0, #11
   15544:	bic	r3, r3, #7
   15548:	movw	r0, #53432	; 0xd0b8
   1554c:	sub	sp, sp, r3
   15550:	movt	r0, #1
   15554:	add	r7, sp, #8
   15558:	mvn	r3, #0
   1555c:	str	r0, [sp]
   15560:	str	r5, [sp, #4]
   15564:	mov	r0, r7
   15568:	bl	13f44 <__snprintf_chk@plt>
   1556c:	mov	r0, r7
   15570:	movw	r1, #53424	; 0xd0b0
   15574:	movt	r1, #1
   15578:	bl	14148 <iconv_open@plt>
   1557c:	movw	r7, #62104	; 0xf298
   15580:	movt	r7, #2
   15584:	cmn	r0, #1
   15588:	str	r0, [r7]
   1558c:	beq	1581c <toX_f@@Base+0x740>
   15590:	mov	sp, r6
   15594:	b	152ec <toX_f@@Base+0x210>
   15598:	ldr	r3, [fp, #-372]	; 0xfffffe8c
   1559c:	cmp	r3, #39	; 0x27
   155a0:	beq	155b8 <toX_f@@Base+0x4dc>
   155a4:	ldr	r2, [r8, #32]
   155a8:	cmp	r2, #0
   155ac:	beq	1562c <toX_f@@Base+0x550>
   155b0:	cmp	r3, r2
   155b4:	bne	1562c <toX_f@@Base+0x550>
   155b8:	ldr	r7, [fp, #-376]	; 0xfffffe88
   155bc:	ubfx	r3, r7, #0, #12
   155c0:	eor	r3, r3, r7, lsr #20
   155c4:	add	r3, r4, r3, lsl #2
   155c8:	ldr	r5, [r3, #12]
   155cc:	cmp	r5, #0
   155d0:	bne	155e4 <toX_f@@Base+0x508>
   155d4:	b	1589c <toX_f@@Base+0x7c0>
   155d8:	ldr	r5, [r5, #12]
   155dc:	cmp	r5, #0
   155e0:	beq	1589c <toX_f@@Base+0x7c0>
   155e4:	ldr	r3, [r5]
   155e8:	cmp	r7, r3
   155ec:	bne	155d8 <toX_f@@Base+0x4fc>
   155f0:	ldr	r0, [r5, #8]
   155f4:	cmp	r0, #0
   155f8:	beq	15608 <toX_f@@Base+0x52c>
   155fc:	bl	13b60 <XFree@plt>
   15600:	cmp	r0, #0
   15604:	beq	15920 <toX_f@@Base+0x844>
   15608:	mov	r0, r7
   1560c:	bl	14648 <fatal@@Base+0x164>
   15610:	cmp	r0, #0
   15614:	str	r0, [r5, #8]
   15618:	beq	158f4 <toX_f@@Base+0x818>
   1561c:	ldr	r3, [r8, #44]	; 0x2c
   15620:	cmp	r7, r3
   15624:	bne	1562c <toX_f@@Base+0x550>
   15628:	bl	14f18 <api_setName@@Base>
   1562c:	ldr	r0, [r4, #8]
   15630:	bl	141c0 <XPending@plt>
   15634:	cmp	r0, #0
   15638:	beq	15424 <toX_f@@Base+0x348>
   1563c:	ldr	r0, [r9, #8]
   15640:	sub	r1, fp, #392	; 0x188
   15644:	bl	13e9c <XNextEvent@plt>
   15648:	cmp	r0, #0
   1564c:	bne	1588c <toX_f@@Base+0x7b0>
   15650:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15654:	sub	r3, r3, #9
   15658:	cmp	r3, #25
   1565c:	ldrls	pc, [pc, r3, lsl #2]
   15660:	b	157d8 <toX_f@@Base+0x6fc>
   15664:			; <UNDEFINED> instruction: 0x000157b0
   15668:	andeq	r5, r1, ip, lsr #12
   1566c:	ldrdeq	r5, [r1], -r8
   15670:	ldrdeq	r5, [r1], -r8
   15674:	ldrdeq	r5, [r1], -r8
   15678:	ldrdeq	r5, [r1], -r8
   1567c:	ldrdeq	r5, [r1], -r8
   15680:	andeq	r5, r1, r4, asr #14
   15684:	ldrdeq	r5, [r1], -r8
   15688:	andeq	r5, r1, ip, lsr #12
   1568c:	andeq	r5, r1, ip, lsr #12
   15690:	andeq	r5, r1, ip, lsr #12
   15694:	andeq	r5, r1, ip, lsr #12
   15698:	andeq	r5, r1, ip, lsr #12
   1569c:	andeq	r5, r1, ip, lsr #12
   156a0:	andeq	r5, r1, ip, lsr #12
   156a4:	ldrdeq	r5, [r1], -r8
   156a8:	andeq	r5, r1, ip, lsr #12
   156ac:	andeq	r5, r1, ip, lsr #12
   156b0:	muleq	r1, r8, r5
   156b4:	ldrdeq	r5, [r1], -r8
   156b8:	ldrdeq	r5, [r1], -r8
   156bc:	ldrdeq	r5, [r1], -r8
   156c0:	ldrdeq	r5, [r1], -r8
   156c4:	andeq	r5, r1, ip, lsr #12
   156c8:	andeq	r5, r1, ip, asr #13
   156cc:	sub	r0, fp, #392	; 0x188
   156d0:	bl	13c14 <XRefreshKeyboardMapping@plt>
   156d4:	b	1562c <toX_f@@Base+0x550>
   156d8:	ldr	r1, [fp, #-372]	; 0xfffffe8c
   156dc:	ubfx	r2, r1, #0, #12
   156e0:	eor	r2, r2, r1, lsr #20
   156e4:	lsl	r2, r2, #2
   156e8:	add	r3, r4, r2
   156ec:	ldr	r3, [r3, #12]
   156f0:	cmp	r3, #0
   156f4:	beq	1562c <toX_f@@Base+0x550>
   156f8:	ldr	r0, [r3]
   156fc:	cmp	r1, r0
   15700:	bne	1570c <toX_f@@Base+0x630>
   15704:	b	1587c <toX_f@@Base+0x7a0>
   15708:	mov	r3, r5
   1570c:	ldr	r5, [r3, #12]
   15710:	cmp	r5, #0
   15714:	beq	1562c <toX_f@@Base+0x550>
   15718:	ldr	r2, [r5]
   1571c:	cmp	r1, r2
   15720:	bne	15708 <toX_f@@Base+0x62c>
   15724:	add	r2, r3, #12
   15728:	ldr	r3, [r5, #12]
   1572c:	str	r3, [r2]
   15730:	ldr	r0, [r5, #8]
   15734:	bl	13da0 <free@plt>
   15738:	mov	r0, r5
   1573c:	bl	13da0 <free@plt>
   15740:	b	1562c <toX_f@@Base+0x550>
   15744:	ldr	r5, [fp, #-372]	; 0xfffffe8c
   15748:	mov	r0, r5
   1574c:	bl	143a0 <api_cleanExit@@Base+0x1c>
   15750:	cmp	r0, #0
   15754:	beq	1562c <toX_f@@Base+0x550>
   15758:	ldr	r1, [fp, #-376]	; 0xfffffe88
   1575c:	ubfx	r3, r1, #0, #12
   15760:	eor	r3, r3, r1, lsr #20
   15764:	add	r3, r4, r3, lsl #2
   15768:	ldr	r2, [r3, #12]
   1576c:	cmp	r2, #0
   15770:	bne	15784 <toX_f@@Base+0x6a8>
   15774:	b	15834 <toX_f@@Base+0x758>
   15778:	ldr	r2, [r2, #12]
   1577c:	cmp	r2, #0
   15780:	beq	15834 <toX_f@@Base+0x758>
   15784:	ldr	r3, [r2]
   15788:	cmp	r1, r3
   1578c:	bne	15778 <toX_f@@Base+0x69c>
   15790:	mov	r0, r5
   15794:	ldr	r7, [r2, #4]
   15798:	bl	14648 <fatal@@Base+0x164>
   1579c:	mov	r1, r7
   157a0:	mov	r2, r0
   157a4:	mov	r0, r5
   157a8:	bl	1448c <fatal_errno@@Base+0x58>
   157ac:	b	1562c <toX_f@@Base+0x550>
   157b0:	ldr	r3, [fp, #-368]	; 0xfffffe90
   157b4:	cmp	r3, #7
   157b8:	bhi	1562c <toX_f@@Base+0x550>
   157bc:	mov	r2, #1
   157c0:	lsl	r3, r2, r3
   157c4:	tst	r3, #205	; 0xcd
   157c8:	beq	1562c <toX_f@@Base+0x550>
   157cc:	ldr	r0, [fp, #-376]	; 0xfffffe88
   157d0:	bl	15004 <api_setFocus@@Base+0x3c>
   157d4:	b	1562c <toX_f@@Base+0x550>
   157d8:	mov	r2, #5
   157dc:	movw	r1, #53604	; 0xd164
   157e0:	mov	r0, #0
   157e4:	movt	r1, #1
   157e8:	ldr	r5, [r6]
   157ec:	bl	13dd0 <dcgettext@plt>
   157f0:	mov	r1, #1
   157f4:	ldr	r3, [fp, #-392]	; 0xfffffe78
   157f8:	mov	r2, r0
   157fc:	mov	r0, r5
   15800:	bl	14004 <__fprintf_chk@plt>
   15804:	b	1562c <toX_f@@Base+0x550>
   15808:	movw	r1, #53484	; 0xd0ec
   1580c:	mov	r2, #5
   15810:	movt	r1, #1
   15814:	bl	13dd0 <dcgettext@plt>
   15818:	bl	144e4 <fatal@@Base>
   1581c:	mov	r0, r5
   15820:	movw	r1, #53424	; 0xd0b0
   15824:	movt	r1, #1
   15828:	bl	14148 <iconv_open@plt>
   1582c:	str	r0, [r7]
   15830:	b	15590 <toX_f@@Base+0x4b4>
   15834:	mov	r2, #5
   15838:	movw	r1, #53792	; 0xd220
   1583c:	mov	r0, #0
   15840:	movt	r1, #1
   15844:	ldr	r7, [r6]
   15848:	bl	13dd0 <dcgettext@plt>
   1584c:	mov	r1, #1
   15850:	mov	r3, r5
   15854:	mov	r2, r0
   15858:	mov	r0, r7
   1585c:	bl	14004 <__fprintf_chk@plt>
   15860:	mov	r0, r5
   15864:	bl	14648 <fatal@@Base+0x164>
   15868:	mov	r1, #0
   1586c:	mov	r2, r0
   15870:	mov	r0, r5
   15874:	bl	1448c <fatal_errno@@Base+0x58>
   15878:	b	1562c <toX_f@@Base+0x550>
   1587c:	ldr	ip, [pc, #832]	; 15bc4 <toX_f@@Base+0xae8>
   15880:	mov	r5, r3
   15884:	add	r2, ip, r2
   15888:	b	15728 <toX_f@@Base+0x64c>
   1588c:	mov	r1, r0
   15890:	movw	r0, #53520	; 0xd110
   15894:	movt	r0, #1
   15898:	bl	144e4 <fatal@@Base>
   1589c:	mov	r2, #5
   158a0:	movw	r1, #53824	; 0xd240
   158a4:	mov	r0, #0
   158a8:	movt	r1, #1
   158ac:	ldr	r5, [r6]
   158b0:	bl	13dd0 <dcgettext@plt>
   158b4:	mov	r1, #1
   158b8:	mov	r3, r7
   158bc:	mov	r2, r0
   158c0:	mov	r0, r5
   158c4:	bl	14004 <__fprintf_chk@plt>
   158c8:	mov	r0, r7
   158cc:	bl	14648 <fatal@@Base+0x164>
   158d0:	mov	r1, #0
   158d4:	mov	r2, r0
   158d8:	mov	r0, r7
   158dc:	bl	1448c <fatal_errno@@Base+0x58>
   158e0:	b	1562c <toX_f@@Base+0x550>
   158e4:	movw	r0, #53512	; 0xd108
   158e8:	mov	r1, r5
   158ec:	movt	r0, #1
   158f0:	bl	14434 <fatal_errno@@Base>
   158f4:	mov	r2, #5
   158f8:	movw	r1, #53564	; 0xd13c
   158fc:	movt	r1, #1
   15900:	ldr	r5, [r6]
   15904:	bl	13dd0 <dcgettext@plt>
   15908:	mov	r3, r7
   1590c:	mov	r1, #1
   15910:	mov	r2, r0
   15914:	mov	r0, r5
   15918:	bl	14004 <__fprintf_chk@plt>
   1591c:	b	1562c <toX_f@@Base+0x550>
   15920:	movw	r1, #53536	; 0xd120
   15924:	mov	r2, #5
   15928:	movt	r1, #1
   1592c:	bl	13dd0 <dcgettext@plt>
   15930:	bl	144e4 <fatal@@Base>
   15934:	movw	r0, #53380	; 0xd084
   15938:	mov	r1, #0
   1593c:	movt	r0, #1
   15940:	bl	143dc <fatal_brlapi_errno@@Base>
   15944:	mov	r1, #8
   15948:	mov	r8, #0
   1594c:	mov	r9, #768	; 0x300
   15950:	and	r2, r2, r8
   15954:	and	r3, r3, r9
   15958:	cmp	r3, #256	; 0x100
   1595c:	cmpeq	r2, #0
   15960:	orreq	r5, r5, r1
   15964:	beq	15488 <toX_f@@Base+0x3ac>
   15968:	cmp	r3, #512	; 0x200
   1596c:	cmpeq	r2, #0
   15970:	biceq	r5, r5, r1
   15974:	beq	15488 <toX_f@@Base+0x3ac>
   15978:	orrs	r9, r2, r3
   1597c:	eoreq	r5, r5, r1
   15980:	b	15488 <toX_f@@Base+0x3ac>
   15984:	mov	r1, #4
   15988:	b	15948 <toX_f@@Base+0x86c>
   1598c:	mov	r1, #2
   15990:	b	15948 <toX_f@@Base+0x86c>
   15994:	mov	r1, #1
   15998:	b	15948 <toX_f@@Base+0x86c>
   1599c:	ldr	ip, [fp, #-460]	; 0xfffffe34
   159a0:	mov	r2, #5
   159a4:	movw	r1, #53632	; 0xd180
   159a8:	mov	r0, #0
   159ac:	movt	r1, #1
   159b0:	ldr	r6, [ip]
   159b4:	bl	13dd0 <dcgettext@plt>
   159b8:	sub	lr, fp, #36	; 0x24
   159bc:	movw	r2, #65160	; 0xfe88
   159c0:	movt	r2, #65535	; 0xffff
   159c4:	mov	r1, #1
   159c8:	ldrd	r8, [lr, r2]
   159cc:	movw	r2, #53648	; 0xd190
   159d0:	movt	r2, #1
   159d4:	strd	r8, [sp]
   159d8:	mov	r3, r0
   159dc:	mov	r0, r6
   159e0:	bl	14004 <__fprintf_chk@plt>
   159e4:	b	15488 <toX_f@@Base+0x3ac>
   159e8:	ldr	r9, [fp, #-460]	; 0xfffffe34
   159ec:	mov	r2, #5
   159f0:	movw	r1, #53768	; 0xd208
   159f4:	mov	r0, #0
   159f8:	movt	r1, #1
   159fc:	ldr	r5, [r9]
   15a00:	bl	13dd0 <dcgettext@plt>
   15a04:	sub	r1, fp, #36	; 0x24
   15a08:	movw	r2, #53648	; 0xd190
   15a0c:	movt	r2, #1
   15a10:	mov	r3, r0
   15a14:	ldrd	r0, [r1, r6]
   15a18:	strd	r0, [sp]
   15a1c:	mov	r0, r5
   15a20:	mov	r1, r8
   15a24:	mov	r5, #0
   15a28:	bl	14004 <__fprintf_chk@plt>
   15a2c:	b	15488 <toX_f@@Base+0x3ac>
   15a30:	bic	r6, r2, #-536870912	; 0xe0000000
   15a34:	ldr	r0, [r4, #8]
   15a38:	uxtb	r9, r3
   15a3c:	str	r9, [fp, #-464]	; 0xfffffe30
   15a40:	mov	r1, r6
   15a44:	bl	140ac <XKeysymToKeycode@plt>
   15a48:	subs	r9, r0, #0
   15a4c:	beq	15ae4 <toX_f@@Base+0xa08>
   15a50:	ldr	ip, [pc, #368]	; 15bc8 <toX_f@@Base+0xaec>
   15a54:	str	r7, [fp, #-456]	; 0xfffffe38
   15a58:	mov	r7, r5
   15a5c:	mov	r5, r4
   15a60:	mov	r4, ip
   15a64:	ldr	r8, [r4, #4]!
   15a68:	sub	lr, fp, #420	; 0x1a4
   15a6c:	mov	r1, r9
   15a70:	str	lr, [sp]
   15a74:	sub	r3, fp, #416	; 0x1a0
   15a78:	ldr	r0, [r5, #8]
   15a7c:	mov	r2, r8
   15a80:	bl	13cbc <XkbLookupKeySym@plt>
   15a84:	cmp	r0, #0
   15a88:	beq	15a98 <toX_f@@Base+0x9bc>
   15a8c:	ldr	r3, [fp, #-420]	; 0xfffffe5c
   15a90:	cmp	r6, r3
   15a94:	beq	15b24 <toX_f@@Base+0xa48>
   15a98:	ldr	r0, [r4, #4]
   15a9c:	cmp	r0, #0
   15aa0:	bne	15a64 <toX_f@@Base+0x988>
   15aa4:	ldr	ip, [fp, #-460]	; 0xfffffe34
   15aa8:	mov	r2, #5
   15aac:	movw	r1, #53704	; 0xd1c8
   15ab0:	movt	r1, #1
   15ab4:	mov	r4, r5
   15ab8:	mov	r5, r7
   15abc:	ldr	r8, [ip]
   15ac0:	ldr	r7, [fp, #-456]	; 0xfffffe38
   15ac4:	bl	13dd0 <dcgettext@plt>
   15ac8:	str	r6, [sp]
   15acc:	mov	r3, r9
   15ad0:	mov	r1, #1
   15ad4:	mov	r2, r0
   15ad8:	mov	r0, r8
   15adc:	bl	14004 <__fprintf_chk@plt>
   15ae0:	b	15488 <toX_f@@Base+0x3ac>
   15ae4:	ldr	ip, [fp, #-460]	; 0xfffffe34
   15ae8:	mov	r2, #5
   15aec:	movw	r1, #53660	; 0xd19c
   15af0:	movt	r1, #1
   15af4:	ldr	r9, [ip]
   15af8:	bl	13dd0 <dcgettext@plt>
   15afc:	mov	r1, r8
   15b00:	mov	r3, r6
   15b04:	mov	r2, r0
   15b08:	mov	r0, r9
   15b0c:	bl	14004 <__fprintf_chk@plt>
   15b10:	b	15488 <toX_f@@Base+0x3ac>
   15b14:	str	r5, [fp, #-456]	; 0xfffffe38
   15b18:	ldr	r8, [fp, #-468]	; 0xfffffe2c
   15b1c:	ldr	r9, [fp, #-472]	; 0xfffffe28
   15b20:	b	153c0 <toX_f@@Base+0x2e4>
   15b24:	ldr	ip, [fp, #-464]	; 0xfffffe30
   15b28:	mov	r4, r5
   15b2c:	mov	r5, r7
   15b30:	ldr	r7, [fp, #-456]	; 0xfffffe38
   15b34:	orr	r5, r5, ip
   15b38:	orrs	r8, r5, r8
   15b3c:	ldr	r0, [r7, #8]
   15b40:	bne	15b70 <toX_f@@Base+0xa94>
   15b44:	mov	r1, r9
   15b48:	mov	r3, r8
   15b4c:	mov	r2, #1
   15b50:	mov	r5, r8
   15b54:	bl	13bb4 <XTestFakeKeyEvent@plt>
   15b58:	mov	r1, r9
   15b5c:	ldr	r0, [r7, #8]
   15b60:	mov	r2, r8
   15b64:	mov	r3, r8
   15b68:	bl	13bb4 <XTestFakeKeyEvent@plt>
   15b6c:	b	15488 <toX_f@@Base+0x3ac>
   15b70:	mov	r2, r8
   15b74:	mov	r3, r8
   15b78:	mov	r1, #256	; 0x100
   15b7c:	bl	13f08 <XkbLockModifiers@plt>
   15b80:	mov	r3, #0
   15b84:	mov	r5, r3
   15b88:	mov	r1, r9
   15b8c:	ldr	r0, [r7, #8]
   15b90:	mov	r2, #1
   15b94:	bl	13bb4 <XTestFakeKeyEvent@plt>
   15b98:	mov	r2, r5
   15b9c:	mov	r1, r9
   15ba0:	mov	r3, r5
   15ba4:	ldr	r0, [r7, #8]
   15ba8:	bl	13bb4 <XTestFakeKeyEvent@plt>
   15bac:	mov	r2, r8
   15bb0:	ldr	r0, [r7, #8]
   15bb4:	mov	r1, #256	; 0x100
   15bb8:	mov	r3, r5
   15bbc:	bl	13f08 <XkbLockModifiers@plt>
   15bc0:	b	15488 <toX_f@@Base+0x3ac>
   15bc4:	andeq	pc, r2, r4, asr #5
   15bc8:	andeq	ip, r1, r4, asr ip

00015bcc <endProgram@@Base>:
   15bcc:	push	{r3, r4, r5, lr}
   15bd0:	ldr	r5, [pc, #48]	; 15c08 <endProgram@@Base+0x3c>
   15bd4:	add	r5, pc, r5
   15bd8:	ldr	r4, [r5]
   15bdc:	cmp	r4, #0
   15be0:	popeq	{r3, r4, r5, pc}
   15be4:	ldm	r4, {r2, r3}
   15be8:	str	r2, [r5]
   15bec:	blx	r3
   15bf0:	mov	r0, r4
   15bf4:	bl	13da0 <free@plt>
   15bf8:	ldr	r4, [r5]
   15bfc:	cmp	r4, #0
   15c00:	bne	15be4 <endProgram@@Base+0x18>
   15c04:	pop	{r3, r4, r5, pc}
   15c08:	andeq	sp, r1, ip, lsl #14
   15c0c:	push	{r3, r4, r5, lr}
   15c10:	bl	185f0 <makePath@@Base>
   15c14:	subs	r4, r0, #0
   15c18:	beq	15c30 <endProgram@@Base+0x64>
   15c1c:	bl	18848 <testProgramPath@@Base>
   15c20:	subs	r5, r0, #0
   15c24:	mov	r0, r4
   15c28:	beq	15c38 <endProgram@@Base+0x6c>
   15c2c:	pop	{r3, r4, r5, pc}
   15c30:	mov	r0, r4
   15c34:	pop	{r3, r4, r5, pc}
   15c38:	bl	13da0 <free@plt>
   15c3c:	mov	r0, r5
   15c40:	pop	{r3, r4, r5, pc}

00015c44 <beginProgram@@Base>:
   15c44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c48:	sub	sp, sp, #4096	; 0x1000
   15c4c:	ldr	r4, [pc, #564]	; 15e88 <beginProgram@@Base+0x244>
   15c50:	sub	sp, sp, #20
   15c54:	ldr	r2, [pc, #560]	; 15e8c <beginProgram@@Base+0x248>
   15c58:	mov	r7, r1
   15c5c:	add	r4, pc, r4
   15c60:	ldr	r3, [pc, #552]	; 15e90 <beginProgram@@Base+0x24c>
   15c64:	add	r1, sp, #8192	; 0x2000
   15c68:	ldr	r5, [pc, #548]	; 15e94 <beginProgram@@Base+0x250>
   15c6c:	ldr	r6, [r4, r2]
   15c70:	add	r5, pc, r5
   15c74:	ldr	r2, [r6]
   15c78:	str	r2, [r1, #-4084]	; 0xfffff00c
   15c7c:	ldr	r0, [r4, r3]
   15c80:	bl	1cc0c <__libc_csu_fini@@Base+0x4>
   15c84:	ldr	r1, [pc, #524]	; 15e98 <beginProgram@@Base+0x254>
   15c88:	mov	r0, #6
   15c8c:	add	r1, pc, r1
   15c90:	bl	13e90 <setlocale@plt>
   15c94:	ldr	r1, [pc, #512]	; 15e9c <beginProgram@@Base+0x258>
   15c98:	mov	r0, r5
   15c9c:	add	r1, pc, r1
   15ca0:	bl	13d28 <bindtextdomain@plt>
   15ca4:	mov	r0, r5
   15ca8:	bl	1407c <textdomain@plt>
   15cac:	bl	1ae80 <getProgramPath@@Base>
   15cb0:	ldr	r3, [pc, #488]	; 15ea0 <beginProgram@@Base+0x25c>
   15cb4:	ldr	r5, [r4, r3]
   15cb8:	cmp	r0, #0
   15cbc:	str	r0, [r5]
   15cc0:	ldreq	r0, [r7]
   15cc4:	streq	r0, [r5]
   15cc8:	bl	185d8 <isExplicitPath@@Base>
   15ccc:	subs	fp, r0, #0
   15cd0:	beq	15d64 <beginProgram@@Base+0x120>
   15cd4:	ldr	r0, [r5]
   15cd8:	bl	185d8 <isExplicitPath@@Base>
   15cdc:	cmp	r0, #0
   15ce0:	bne	15d1c <beginProgram@@Base+0xd8>
   15ce4:	ldr	r0, [r5]
   15ce8:	bl	18570 <locatePathName@@Base>
   15cec:	ldr	r3, [pc, #432]	; 15ea4 <beginProgram@@Base+0x260>
   15cf0:	ldr	r3, [r4, r3]
   15cf4:	str	r0, [r3]
   15cf8:	bl	17e34 <setLogPrefix@@Base>
   15cfc:	add	r3, sp, #8192	; 0x2000
   15d00:	ldr	r2, [r3, #-4084]	; 0xfffff00c
   15d04:	ldr	r3, [r6]
   15d08:	cmp	r2, r3
   15d0c:	bne	15e84 <beginProgram@@Base+0x240>
   15d10:	add	sp, sp, #4096	; 0x1000
   15d14:	add	sp, sp, #20
   15d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d1c:	ldr	r0, [r5]
   15d20:	bl	18460 <isAbsolutePath@@Base>
   15d24:	cmp	r0, #0
   15d28:	ldr	r0, [r5]
   15d2c:	beq	15e3c <beginProgram@@Base+0x1f8>
   15d30:	bl	18460 <isAbsolutePath@@Base>
   15d34:	cmp	r0, #0
   15d38:	bne	15ce4 <beginProgram@@Base+0xa0>
   15d3c:	bl	18aa0 <getWorkingDirectory@@Base>
   15d40:	subs	r7, r0, #0
   15d44:	beq	15ce4 <beginProgram@@Base+0xa0>
   15d48:	ldr	r1, [r5]
   15d4c:	bl	185f0 <makePath@@Base>
   15d50:	cmp	r0, #0
   15d54:	strne	r0, [r5]
   15d58:	mov	r0, r7
   15d5c:	bl	13da0 <free@plt>
   15d60:	b	15ce4 <beginProgram@@Base+0xa0>
   15d64:	ldr	r0, [pc, #316]	; 15ea8 <beginProgram@@Base+0x264>
   15d68:	ldr	r7, [r5]
   15d6c:	add	r0, pc, r0
   15d70:	bl	13c68 <getenv@plt>
   15d74:	cmp	r0, #0
   15d78:	beq	15e20 <beginProgram@@Base+0x1dc>
   15d7c:	mov	r1, #58	; 0x3a
   15d80:	add	r2, sp, #8
   15d84:	bl	197e4 <splitString@@Base>
   15d88:	cmp	r0, #0
   15d8c:	str	r0, [sp, #4]
   15d90:	beq	15e20 <beginProgram@@Base+0x1dc>
   15d94:	add	r2, sp, #4096	; 0x1000
   15d98:	movw	r9, #61432	; 0xeff8
   15d9c:	add	r2, r2, #16
   15da0:	movt	r9, #65535	; 0xffff
   15da4:	ldr	r3, [r2, r9]
   15da8:	cmp	r3, #0
   15dac:	ble	15e18 <beginProgram@@Base+0x1d4>
   15db0:	ldr	r8, [pc, #244]	; 15eac <beginProgram@@Base+0x268>
   15db4:	ldr	r3, [sp, #4]
   15db8:	add	r8, pc, r8
   15dbc:	sub	sl, r3, #4
   15dc0:	b	15ddc <beginProgram@@Base+0x198>
   15dc4:	add	r1, sp, #4096	; 0x1000
   15dc8:	add	fp, fp, #1
   15dcc:	add	r1, r1, #16
   15dd0:	ldr	r2, [r1, r9]
   15dd4:	cmp	fp, r2
   15dd8:	bge	15e18 <beginProgram@@Base+0x1d4>
   15ddc:	ldr	r0, [sl, #4]!
   15de0:	mov	r1, r7
   15de4:	ldrb	r2, [r0]
   15de8:	cmp	r2, #0
   15dec:	moveq	r0, r8
   15df0:	bl	15c0c <endProgram@@Base+0x40>
   15df4:	subs	r2, r0, #0
   15df8:	beq	15dc4 <beginProgram@@Base+0x180>
   15dfc:	ldr	r0, [sp, #4]
   15e00:	str	r2, [sp]
   15e04:	bl	197b0 <deallocateStrings@@Base>
   15e08:	ldr	r2, [sp]
   15e0c:	mov	r0, r2
   15e10:	str	r2, [r5]
   15e14:	b	15cd8 <beginProgram@@Base+0x94>
   15e18:	ldr	r0, [sp, #4]
   15e1c:	bl	197b0 <deallocateStrings@@Base>
   15e20:	ldr	r0, [pc, #136]	; 15eb0 <beginProgram@@Base+0x26c>
   15e24:	ldr	r1, [r5]
   15e28:	add	r0, pc, r0
   15e2c:	bl	15c0c <endProgram@@Base+0x40>
   15e30:	subs	r2, r0, #0
   15e34:	beq	15cd4 <beginProgram@@Base+0x90>
   15e38:	b	15e0c <beginProgram@@Base+0x1c8>
   15e3c:	add	r1, sp, #12
   15e40:	mov	r2, #4096	; 0x1000
   15e44:	bl	140dc <__realpath_chk@plt>
   15e48:	cmp	r0, #0
   15e4c:	beq	15e64 <beginProgram@@Base+0x220>
   15e50:	bl	14154 <__strdup@plt>
   15e54:	cmp	r0, #0
   15e58:	beq	15e78 <beginProgram@@Base+0x234>
   15e5c:	str	r0, [r5]
   15e60:	b	15d30 <beginProgram@@Base+0xec>
   15e64:	ldr	r0, [pc, #72]	; 15eb4 <beginProgram@@Base+0x270>
   15e68:	add	r0, pc, r0
   15e6c:	bl	18324 <logSystemError@@Base>
   15e70:	ldr	r0, [r5]
   15e74:	b	15d30 <beginProgram@@Base+0xec>
   15e78:	bl	18368 <logMallocError@@Base>
   15e7c:	ldr	r0, [r5]
   15e80:	b	15d30 <beginProgram@@Base+0xec>
   15e84:	bl	13fec <__stack_chk_fail@plt>
   15e88:	muleq	r1, ip, r3
   15e8c:	andeq	r0, r0, ip, ror #4
   15e90:	andeq	r0, r0, ip, lsl #5
   15e94:	andeq	r7, r0, ip, lsl #15
   15e98:	andeq	r7, r0, ip, asr #9
   15e9c:	andeq	r7, r0, r8, ror #14
   15ea0:	andeq	r0, r0, r8, asr r2
   15ea4:	andeq	r0, r0, r8, ror r2
   15ea8:	andeq	r7, r0, ip, lsr #13
   15eac:	andeq	r7, r0, r0, asr #12
   15eb0:	ldrdeq	r7, [r0], -r0
   15eb4:			; <UNDEFINED> instruction: 0x000075b8

00015eb8 <makeProgramBanner@@Base>:
   15eb8:	push	{r4, r5, r6, lr}
   15ebc:	sub	sp, sp, #24
   15ec0:	ldr	r6, [pc, #72]	; 15f10 <makeProgramBanner@@Base+0x58>
   15ec4:	mov	r2, #1
   15ec8:	ldr	r5, [pc, #68]	; 15f14 <makeProgramBanner@@Base+0x5c>
   15ecc:	mvn	r3, #0
   15ed0:	ldr	r4, [pc, #64]	; 15f18 <makeProgramBanner@@Base+0x60>
   15ed4:	add	r6, pc, r6
   15ed8:	ldr	lr, [pc, #60]	; 15f1c <makeProgramBanner@@Base+0x64>
   15edc:	add	r5, pc, r5
   15ee0:	ldr	ip, [pc, #56]	; 15f20 <makeProgramBanner@@Base+0x68>
   15ee4:	add	r4, pc, r4
   15ee8:	add	lr, pc, lr
   15eec:	str	r6, [sp]
   15ef0:	add	ip, pc, ip
   15ef4:	str	r5, [sp, #4]
   15ef8:	str	r4, [sp, #8]
   15efc:	str	lr, [sp, #12]
   15f00:	str	ip, [sp, #16]
   15f04:	bl	13f44 <__snprintf_chk@plt>
   15f08:	add	sp, sp, #24
   15f0c:	pop	{r4, r5, r6, pc}
   15f10:	andeq	r7, r0, r8, asr r5
   15f14:	andeq	r7, r0, ip, asr r5
   15f18:	andeq	r7, r0, ip, asr r5
   15f1c:	andeq	r7, r0, ip, asr r5
   15f20:	andeq	r7, r0, ip, asr r5

00015f24 <fixInstallPaths@@Base>:
   15f24:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15f28:	mov	r4, r0
   15f2c:	ldr	r5, [pc, #340]	; 16088 <fixInstallPaths@@Base+0x164>
   15f30:	ldr	r3, [pc, #340]	; 1608c <fixInstallPaths@@Base+0x168>
   15f34:	add	r5, pc, r5
   15f38:	add	r3, pc, r3
   15f3c:	ldr	r2, [r5, #4]
   15f40:	cmp	r2, #0
   15f44:	beq	16028 <fixInstallPaths@@Base+0x104>
   15f48:	ldr	r3, [r4]
   15f4c:	cmp	r3, #0
   15f50:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   15f54:	ldr	r5, [pc, #308]	; 16090 <fixInstallPaths@@Base+0x16c>
   15f58:	add	r4, r4, #4
   15f5c:	ldr	r7, [pc, #304]	; 16094 <fixInstallPaths@@Base+0x170>
   15f60:	ldr	r6, [pc, #304]	; 16098 <fixInstallPaths@@Base+0x174>
   15f64:	add	r5, pc, r5
   15f68:	ldr	r9, [pc, #300]	; 1609c <fixInstallPaths@@Base+0x178>
   15f6c:	add	r7, pc, r7
   15f70:	ldr	r8, [pc, #296]	; 160a0 <fixInstallPaths@@Base+0x17c>
   15f74:	add	r6, pc, r6
   15f78:	add	r9, pc, r9
   15f7c:	add	r8, pc, r8
   15f80:	b	15f90 <fixInstallPaths@@Base+0x6c>
   15f84:	ldr	r3, [r4], #4
   15f88:	cmp	r3, #0
   15f8c:	beq	15ffc <fixInstallPaths@@Base+0xd8>
   15f90:	ldr	r1, [r3]
   15f94:	cmp	r1, #0
   15f98:	beq	15f84 <fixInstallPaths@@Base+0x60>
   15f9c:	ldrb	r3, [r1]
   15fa0:	cmp	r3, #0
   15fa4:	beq	15f84 <fixInstallPaths@@Base+0x60>
   15fa8:	ldr	r0, [r5, #4]
   15fac:	bl	185f0 <makePath@@Base>
   15fb0:	subs	r3, r0, #0
   15fb4:	beq	16000 <fixInstallPaths@@Base+0xdc>
   15fb8:	ldr	r2, [r4, #-4]
   15fbc:	str	r3, [r2]
   15fc0:	bl	18460 <isAbsolutePath@@Base>
   15fc4:	cmp	r0, #0
   15fc8:	bne	15f84 <fixInstallPaths@@Base+0x60>
   15fcc:	mov	r1, r7
   15fd0:	mov	r2, #5
   15fd4:	bl	13dd0 <dcgettext@plt>
   15fd8:	ldr	r3, [r4, #-4]
   15fdc:	mov	r1, r6
   15fe0:	ldr	r3, [r3]
   15fe4:	mov	r2, r0
   15fe8:	mov	r0, #4
   15fec:	bl	1825c <logMessage@@Base>
   15ff0:	ldr	r3, [r4], #4
   15ff4:	cmp	r3, #0
   15ff8:	bne	15f90 <fixInstallPaths@@Base+0x6c>
   15ffc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16000:	mov	r1, r9
   16004:	mov	r2, #5
   16008:	bl	13dd0 <dcgettext@plt>
   1600c:	ldr	r3, [r4, #-4]
   16010:	mov	r1, r8
   16014:	ldr	r3, [r3]
   16018:	mov	r2, r0
   1601c:	mov	r0, #4
   16020:	bl	1825c <logMessage@@Base>
   16024:	b	15f84 <fixInstallPaths@@Base+0x60>
   16028:	ldr	r2, [pc, #116]	; 160a4 <fixInstallPaths@@Base+0x180>
   1602c:	ldr	r3, [r3, r2]
   16030:	ldr	r0, [r3]
   16034:	bl	18478 <getPathDirectory@@Base>
   16038:	cmp	r0, #0
   1603c:	mov	r2, r0
   16040:	str	r0, [r5, #4]
   16044:	beq	1605c <fixInstallPaths@@Base+0x138>
   16048:	ldr	r1, [pc, #88]	; 160a8 <fixInstallPaths@@Base+0x184>
   1604c:	mov	r0, #7
   16050:	add	r1, pc, r1
   16054:	bl	1825c <logMessage@@Base>
   16058:	b	15f48 <fixInstallPaths@@Base+0x24>
   1605c:	ldr	r1, [pc, #72]	; 160ac <fixInstallPaths@@Base+0x188>
   16060:	mov	r2, #5
   16064:	add	r1, pc, r1
   16068:	bl	13dd0 <dcgettext@plt>
   1606c:	mov	r1, r0
   16070:	mov	r0, #4
   16074:	bl	1825c <logMessage@@Base>
   16078:	ldr	r2, [pc, #48]	; 160b0 <fixInstallPaths@@Base+0x18c>
   1607c:	add	r2, pc, r2
   16080:	str	r2, [r5, #4]
   16084:	b	16048 <fixInstallPaths@@Base+0x124>
   16088:	andeq	sp, r1, ip, lsr #7
   1608c:	andeq	r9, r1, r0, asr #1
   16090:	andeq	sp, r1, ip, ror r3
   16094:	andeq	r7, r0, ip, lsr r5
   16098:			; <UNDEFINED> instruction: 0x00007dbc
   1609c:	andeq	r7, r0, r8, lsl r5
   160a0:			; <UNDEFINED> instruction: 0x00007db4
   160a4:	andeq	r0, r0, r8, asr r2
   160a8:	andeq	r7, r0, r8, lsr #8
   160ac:	strdeq	r7, [r0], -r0
   160b0:	andeq	r7, r0, ip, ror r3

000160b4 <fixInstallPath@@Base>:
   160b4:	ldr	r3, [pc, #72]	; 16104 <fixInstallPath@@Base+0x50>
   160b8:	mov	r2, #0
   160bc:	ldr	r1, [pc, #68]	; 16108 <fixInstallPath@@Base+0x54>
   160c0:	add	r3, pc, r3
   160c4:	push	{r4, lr}
   160c8:	sub	sp, sp, #16
   160cc:	ldr	r4, [r3, r1]
   160d0:	str	r0, [sp, #4]
   160d4:	add	r0, sp, #4
   160d8:	str	r2, [sp, #8]
   160dc:	ldr	r3, [r4]
   160e0:	str	r3, [sp, #12]
   160e4:	bl	15f24 <fixInstallPaths@@Base>
   160e8:	ldr	r2, [sp, #12]
   160ec:	ldr	r3, [r4]
   160f0:	cmp	r2, r3
   160f4:	bne	16100 <fixInstallPath@@Base+0x4c>
   160f8:	add	sp, sp, #16
   160fc:	pop	{r4, pc}
   16100:	bl	13fec <__stack_chk_fail@plt>
   16104:	andeq	r8, r1, r8, lsr pc
   16108:	andeq	r0, r0, ip, ror #4

0001610c <createPidFile@@Base>:
   1610c:	ldr	r3, [pc, #700]	; 163d0 <createPidFile@@Base+0x2c4>
   16110:	ldr	r2, [pc, #700]	; 163d4 <createPidFile@@Base+0x2c8>
   16114:	add	r3, pc, r3
   16118:	push	{r4, r5, r6, r7, r8, lr}
   1611c:	subs	r6, r1, #0
   16120:	ldr	r5, [r3, r2]
   16124:	sub	sp, sp, #56	; 0x38
   16128:	mov	r4, r0
   1612c:	ldr	r3, [r5]
   16130:	str	r3, [sp, #52]	; 0x34
   16134:	beq	161b4 <createPidFile@@Base+0xa8>
   16138:	cmp	r4, #0
   1613c:	beq	161ac <createPidFile@@Base+0xa0>
   16140:	ldrb	r3, [r4]
   16144:	cmp	r3, #0
   16148:	bne	16168 <createPidFile@@Base+0x5c>
   1614c:	ldr	r2, [sp, #52]	; 0x34
   16150:	mov	r0, r3
   16154:	ldr	r3, [r5]
   16158:	cmp	r2, r3
   1615c:	bne	163cc <createPidFile@@Base+0x2c0>
   16160:	add	sp, sp, #56	; 0x38
   16164:	pop	{r4, r5, r6, r7, r8, pc}
   16168:	mov	r0, r4
   1616c:	mov	r1, #66	; 0x42
   16170:	mov	r2, #420	; 0x1a4
   16174:	bl	13b3c <open@plt>
   16178:	cmn	r0, #1
   1617c:	mov	r7, r0
   16180:	beq	162d4 <createPidFile@@Base+0x1c8>
   16184:	mov	r1, #1
   16188:	bl	18f18 <acquireFileLock@@Base>
   1618c:	subs	r8, r0, #0
   16190:	bne	161c0 <createPidFile@@Base+0xb4>
   16194:	bl	1419c <__errno_location@plt>
   16198:	ldr	r3, [r0]
   1619c:	cmp	r3, #38	; 0x26
   161a0:	beq	161c0 <createPidFile@@Base+0xb4>
   161a4:	mov	r0, r7
   161a8:	bl	13f68 <close@plt>
   161ac:	mov	r3, #0
   161b0:	b	1614c <createPidFile@@Base+0x40>
   161b4:	bl	16560 <getProcessIdentifier@@Base>
   161b8:	mov	r6, r0
   161bc:	b	16138 <createPidFile@@Base+0x2c>
   161c0:	add	r4, sp, #20
   161c4:	mov	r0, r7
   161c8:	mov	r2, #32
   161cc:	mov	r1, r4
   161d0:	bl	13dac <read@plt>
   161d4:	cmn	r0, #1
   161d8:	mov	r3, r0
   161dc:	beq	16390 <createPidFile@@Base+0x284>
   161e0:	cmp	r0, #32
   161e4:	add	r2, sp, #56	; 0x38
   161e8:	ldr	r1, [pc, #488]	; 163d8 <createPidFile@@Base+0x2cc>
   161ec:	mov	r0, r4
   161f0:	moveq	r3, #31
   161f4:	add	ip, r2, r3
   161f8:	add	r1, pc, r1
   161fc:	add	r2, sp, #16
   16200:	add	r3, sp, #15
   16204:	mov	lr, #0
   16208:	strb	lr, [ip, #-36]	; 0xffffffdc
   1620c:	bl	13e54 <sscanf@plt>
   16210:	cmp	r0, #1
   16214:	beq	16350 <createPidFile@@Base+0x244>
   16218:	cmp	r0, #2
   1621c:	beq	16340 <createPidFile@@Base+0x234>
   16220:	mov	r1, #0
   16224:	mov	r0, r7
   16228:	mov	r2, r1
   1622c:	bl	140c4 <lseek@plt>
   16230:	cmn	r0, #1
   16234:	beq	163a4 <createPidFile@@Base+0x298>
   16238:	mov	r0, r7
   1623c:	mov	r1, #0
   16240:	bl	1404c <ftruncate@plt>
   16244:	cmn	r0, #1
   16248:	beq	16318 <createPidFile@@Base+0x20c>
   1624c:	ldr	ip, [pc, #392]	; 163dc <createPidFile@@Base+0x2d0>
   16250:	mov	r1, #32
   16254:	mov	r3, r1
   16258:	mov	r2, #1
   1625c:	add	ip, pc, ip
   16260:	str	r6, [sp, #4]
   16264:	str	ip, [sp]
   16268:	mov	r0, r4
   1626c:	bl	13f44 <__snprintf_chk@plt>
   16270:	mov	r1, r4
   16274:	mov	r2, r0
   16278:	mov	r0, r7
   1627c:	bl	13db8 <write@plt>
   16280:	cmn	r0, #1
   16284:	beq	163b8 <createPidFile@@Base+0x2ac>
   16288:	mov	r4, #0
   1628c:	cmp	r8, #0
   16290:	bne	16384 <createPidFile@@Base+0x278>
   16294:	mov	r0, r7
   16298:	bl	13f68 <close@plt>
   1629c:	cmp	r4, #2
   162a0:	beq	1632c <createPidFile@@Base+0x220>
   162a4:	cmp	r4, #3
   162a8:	beq	161ac <createPidFile@@Base+0xa0>
   162ac:	cmp	r4, #0
   162b0:	moveq	r3, #1
   162b4:	beq	1614c <createPidFile@@Base+0x40>
   162b8:	ldr	r1, [pc, #288]	; 163e0 <createPidFile@@Base+0x2d4>
   162bc:	mov	r2, r4
   162c0:	mov	r0, #4
   162c4:	add	r1, pc, r1
   162c8:	bl	1825c <logMessage@@Base>
   162cc:	mov	r3, #0
   162d0:	b	1614c <createPidFile@@Base+0x40>
   162d4:	ldr	r1, [pc, #264]	; 163e4 <createPidFile@@Base+0x2d8>
   162d8:	mov	r2, #5
   162dc:	mov	r0, #0
   162e0:	add	r1, pc, r1
   162e4:	bl	13dd0 <dcgettext@plt>
   162e8:	mov	r6, r0
   162ec:	bl	1419c <__errno_location@plt>
   162f0:	ldr	r0, [r0]
   162f4:	bl	13b54 <strerror@plt>
   162f8:	ldr	r1, [pc, #232]	; 163e8 <createPidFile@@Base+0x2dc>
   162fc:	mov	r2, r6
   16300:	mov	r3, r4
   16304:	add	r1, pc, r1
   16308:	str	r0, [sp]
   1630c:	mov	r0, #4
   16310:	bl	1825c <logMessage@@Base>
   16314:	b	161ac <createPidFile@@Base+0xa0>
   16318:	ldr	r0, [pc, #204]	; 163ec <createPidFile@@Base+0x2e0>
   1631c:	mov	r4, #3
   16320:	add	r0, pc, r0
   16324:	bl	18324 <logSystemError@@Base>
   16328:	b	1628c <createPidFile@@Base+0x180>
   1632c:	bl	1419c <__errno_location@plt>
   16330:	mov	r2, #17
   16334:	mov	r3, #0
   16338:	str	r2, [r0]
   1633c:	b	1614c <createPidFile@@Base+0x40>
   16340:	ldrb	r3, [sp, #15]
   16344:	cmp	r3, #10
   16348:	cmpne	r3, #13
   1634c:	bne	16220 <createPidFile@@Base+0x114>
   16350:	ldr	r0, [sp, #16]
   16354:	cmp	r0, r6
   16358:	beq	16288 <createPidFile@@Base+0x17c>
   1635c:	bl	16564 <testProcessIdentifier@@Base>
   16360:	cmp	r0, #0
   16364:	beq	16220 <createPidFile@@Base+0x114>
   16368:	ldr	r1, [pc, #128]	; 163f0 <createPidFile@@Base+0x2e4>
   1636c:	mov	r0, #3
   16370:	ldr	r2, [sp, #16]
   16374:	mov	r4, #2
   16378:	add	r1, pc, r1
   1637c:	bl	1825c <logMessage@@Base>
   16380:	b	1628c <createPidFile@@Base+0x180>
   16384:	mov	r0, r7
   16388:	bl	18f38 <releaseFileLock@@Base>
   1638c:	b	16294 <createPidFile@@Base+0x188>
   16390:	ldr	r0, [pc, #92]	; 163f4 <createPidFile@@Base+0x2e8>
   16394:	mov	r4, #3
   16398:	add	r0, pc, r0
   1639c:	bl	18324 <logSystemError@@Base>
   163a0:	b	1628c <createPidFile@@Base+0x180>
   163a4:	ldr	r0, [pc, #76]	; 163f8 <createPidFile@@Base+0x2ec>
   163a8:	mov	r4, #3
   163ac:	add	r0, pc, r0
   163b0:	bl	18324 <logSystemError@@Base>
   163b4:	b	1628c <createPidFile@@Base+0x180>
   163b8:	ldr	r0, [pc, #60]	; 163fc <createPidFile@@Base+0x2f0>
   163bc:	mov	r4, #3
   163c0:	add	r0, pc, r0
   163c4:	bl	18324 <logSystemError@@Base>
   163c8:	b	1628c <createPidFile@@Base+0x180>
   163cc:	bl	13fec <__stack_chk_fail@plt>
   163d0:	andeq	r8, r1, r4, ror #29
   163d4:	andeq	r0, r0, ip, ror #4
   163d8:	andeq	r7, r0, ip, asr #5
   163dc:			; <UNDEFINED> instruction: 0x00006eb8
   163e0:	andeq	r7, r0, r8, ror r2
   163e4:	andeq	r7, r0, ip, lsr #4
   163e8:	andeq	r7, r0, ip, lsr #4
   163ec:	ldrdeq	r7, [r0], -r8
   163f0:	andeq	r7, r0, r4, asr r1
   163f4:	andeq	r7, r0, r8, asr r1
   163f8:	andeq	r7, r0, r8, asr r1
   163fc:	strdeq	r7, [r0], -r0

00016400 <cancelProgram@@Base>:
   16400:	ldr	r2, [pc, #260]	; 1650c <cancelProgram@@Base+0x10c>
   16404:	ldr	ip, [pc, #260]	; 16510 <cancelProgram@@Base+0x110>
   16408:	add	r2, pc, r2
   1640c:	ldr	r1, [pc, #256]	; 16514 <cancelProgram@@Base+0x114>
   16410:	push	{r4, r5, r6, r7, r8, lr}
   16414:	sub	sp, sp, #272	; 0x110
   16418:	ldr	r4, [r2, ip]
   1641c:	add	r1, pc, r1
   16420:	mov	r6, r0
   16424:	ldr	r2, [r4]
   16428:	str	r2, [sp, #268]	; 0x10c
   1642c:	bl	13cd4 <fopen@plt>
   16430:	subs	r5, r0, #0
   16434:	beq	164c4 <cancelProgram@@Base+0xc4>
   16438:	add	r0, sp, #12
   1643c:	mov	r1, #256	; 0x100
   16440:	mov	r2, r5
   16444:	bl	13c5c <fgets@plt>
   16448:	subs	r7, r0, #0
   1644c:	beq	164a0 <cancelProgram@@Base+0xa0>
   16450:	add	r1, sp, #8
   16454:	mov	r2, #10
   16458:	bl	13ec0 <strtol@plt>
   1645c:	ldr	r3, [sp, #8]
   16460:	ldrb	r6, [r3]
   16464:	cmp	r6, #0
   16468:	mov	r8, r0
   1646c:	beq	16490 <cancelProgram@@Base+0x90>
   16470:	bl	13fb0 <__ctype_b_loc@plt>
   16474:	lsl	r6, r6, #1
   16478:	ldr	r3, [r0]
   1647c:	ldrh	r7, [r3, r6]
   16480:	and	r7, r7, #8192	; 0x2000
   16484:	uxth	r7, r7
   16488:	cmp	r7, #0
   1648c:	beq	164a0 <cancelProgram@@Base+0xa0>
   16490:	mov	r0, r8
   16494:	bl	1657c <cancelProcess@@Base>
   16498:	adds	r7, r0, #0
   1649c:	movne	r7, #1
   164a0:	mov	r0, r5
   164a4:	bl	13c50 <fclose@plt>
   164a8:	ldr	r2, [sp, #268]	; 0x10c
   164ac:	mov	r0, r7
   164b0:	ldr	r3, [r4]
   164b4:	cmp	r2, r3
   164b8:	bne	16508 <cancelProgram@@Base+0x108>
   164bc:	add	sp, sp, #272	; 0x110
   164c0:	pop	{r4, r5, r6, r7, r8, pc}
   164c4:	ldr	r1, [pc, #76]	; 16518 <cancelProgram@@Base+0x118>
   164c8:	mov	r2, #5
   164cc:	mov	r7, r5
   164d0:	add	r1, pc, r1
   164d4:	bl	13dd0 <dcgettext@plt>
   164d8:	mov	r8, r0
   164dc:	bl	1419c <__errno_location@plt>
   164e0:	ldr	r0, [r0]
   164e4:	bl	13b54 <strerror@plt>
   164e8:	ldr	r1, [pc, #44]	; 1651c <cancelProgram@@Base+0x11c>
   164ec:	mov	r2, r8
   164f0:	mov	r3, r6
   164f4:	add	r1, pc, r1
   164f8:	str	r0, [sp]
   164fc:	mov	r0, #3
   16500:	bl	1825c <logMessage@@Base>
   16504:	b	164a8 <cancelProgram@@Base+0xa8>
   16508:	bl	13fec <__stack_chk_fail@plt>
   1650c:	strdeq	r8, [r1], -r0
   16510:	andeq	r0, r0, ip, ror #4
   16514:	andeq	r7, r0, r8, asr #13
   16518:	andeq	r7, r0, ip, lsl #1
   1651c:	andeq	r7, r0, ip, lsr r0

00016520 <onProgramExit@@Base>:
   16520:	push	{r4, lr}
   16524:	mov	r4, r0
   16528:	mov	r0, #8
   1652c:	bl	13fbc <malloc@plt>
   16530:	cmp	r0, #0
   16534:	beq	16554 <onProgramExit@@Base+0x34>
   16538:	ldr	r2, [pc, #28]	; 1655c <onProgramExit@@Base+0x3c>
   1653c:	str	r4, [r0, #4]
   16540:	add	r2, pc, r2
   16544:	ldr	r1, [r2]
   16548:	str	r0, [r2]
   1654c:	str	r1, [r0]
   16550:	pop	{r4, pc}
   16554:	pop	{r4, lr}
   16558:	b	18368 <logMallocError@@Base>
   1655c:	andeq	ip, r1, r0, lsr #27

00016560 <getProcessIdentifier@@Base>:
   16560:	b	14070 <getpid@plt>

00016564 <testProcessIdentifier@@Base>:
   16564:	push	{r3, lr}
   16568:	mov	r1, #0
   1656c:	bl	14118 <kill@plt>
   16570:	adds	r0, r0, #1
   16574:	movne	r0, #1
   16578:	pop	{r3, pc}

0001657c <cancelProcess@@Base>:
   1657c:	push	{r3, lr}
   16580:	mov	r1, #15
   16584:	bl	14118 <kill@plt>
   16588:	adds	r0, r0, #1
   1658c:	movne	r0, #1
   16590:	pop	{r3, pc}
   16594:	push	{r4, r5, r6, r7, r8, r9, lr}
   16598:	mov	r4, r0
   1659c:	ldr	r5, [r0]
   165a0:	sub	sp, sp, #20
   165a4:	mov	r6, r1
   165a8:	mov	r8, r2
   165ac:	cmp	r5, #0
   165b0:	beq	1664c <cancelProcess@@Base+0xd0>
   165b4:	mov	r0, r5
   165b8:	bl	13e48 <strlen@plt>
   165bc:	mov	r7, r0
   165c0:	mov	r0, r6
   165c4:	bl	13e48 <strlen@plt>
   165c8:	add	r0, r7, r0
   165cc:	add	r7, r0, #2
   165d0:	mov	r0, r7
   165d4:	bl	13fbc <malloc@plt>
   165d8:	subs	r9, r0, #0
   165dc:	beq	16664 <cancelProcess@@Base+0xe8>
   165e0:	cmp	r8, #0
   165e4:	bne	16624 <cancelProcess@@Base+0xa8>
   165e8:	ldr	ip, [pc, #128]	; 16670 <cancelProcess@@Base+0xf4>
   165ec:	mov	r1, r7
   165f0:	str	r5, [sp, #4]
   165f4:	mov	r2, #1
   165f8:	add	ip, pc, ip
   165fc:	str	r6, [sp, #8]
   16600:	mvn	r3, #0
   16604:	str	ip, [sp]
   16608:	bl	13f44 <__snprintf_chk@plt>
   1660c:	ldr	r0, [r4]
   16610:	bl	13da0 <free@plt>
   16614:	mov	r0, #1
   16618:	str	r9, [r4]
   1661c:	add	sp, sp, #20
   16620:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16624:	ldr	ip, [pc, #72]	; 16674 <cancelProcess@@Base+0xf8>
   16628:	mov	r1, r7
   1662c:	str	r6, [sp, #4]
   16630:	mov	r2, #1
   16634:	add	ip, pc, ip
   16638:	str	r5, [sp, #8]
   1663c:	mvn	r3, #0
   16640:	str	ip, [sp]
   16644:	bl	13f44 <__snprintf_chk@plt>
   16648:	b	1660c <cancelProcess@@Base+0x90>
   1664c:	mov	r0, r1
   16650:	bl	14154 <__strdup@plt>
   16654:	cmp	r0, #0
   16658:	str	r0, [r4]
   1665c:	movne	r0, #1
   16660:	bne	1661c <cancelProcess@@Base+0xa0>
   16664:	bl	18368 <logMallocError@@Base>
   16668:	mov	r0, #0
   1666c:	b	1661c <cancelProcess@@Base+0xa0>
   16670:	andeq	r6, r0, r8, ror pc
   16674:	andeq	r6, r0, ip, lsr pc
   16678:	ldr	ip, [pc, #468]	; 16854 <cancelProcess@@Base+0x2d8>
   1667c:	push	{r4, r5, r6, r7, r8, r9, lr}
   16680:	add	ip, pc, ip
   16684:	ldr	r5, [pc, #460]	; 16858 <cancelProcess@@Base+0x2dc>
   16688:	sub	sp, sp, #20
   1668c:	ldrb	r6, [r1, #8]
   16690:	mov	r4, r1
   16694:	mov	r7, r0
   16698:	mov	r8, r2
   1669c:	ldr	r5, [ip, r5]
   166a0:	add	r6, r0, r6
   166a4:	ldrb	r3, [r6, #8]
   166a8:	ldr	ip, [r5]
   166ac:	cmp	r3, #0
   166b0:	str	ip, [sp, #12]
   166b4:	bne	166f8 <cancelProcess@@Base+0x17c>
   166b8:	mov	r9, #1
   166bc:	strb	r9, [r6, #8]
   166c0:	ldr	r3, [r1, #4]
   166c4:	ldr	r6, [r1, #12]
   166c8:	cmp	r3, #0
   166cc:	beq	16754 <cancelProcess@@Base+0x1d8>
   166d0:	cmp	r6, #0
   166d4:	beq	166f8 <cancelProcess@@Base+0x17c>
   166d8:	ldrb	r3, [r1, #10]
   166dc:	tst	r3, #2
   166e0:	beq	16730 <cancelProcess@@Base+0x1b4>
   166e4:	cmp	r2, #0
   166e8:	beq	166f8 <cancelProcess@@Base+0x17c>
   166ec:	ldrb	r3, [r2]
   166f0:	cmp	r3, #0
   166f4:	bne	16714 <cancelProcess@@Base+0x198>
   166f8:	mov	r0, #1
   166fc:	ldr	r1, [sp, #12]
   16700:	ldr	r3, [r5]
   16704:	cmp	r1, r3
   16708:	bne	16850 <cancelProcess@@Base+0x2d4>
   1670c:	add	sp, sp, #20
   16710:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16714:	mov	r1, r2
   16718:	mov	r0, r6
   1671c:	mov	r2, r9
   16720:	bl	16594 <cancelProcess@@Base+0x18>
   16724:	cmp	r0, #0
   16728:	beq	166fc <cancelProcess@@Base+0x180>
   1672c:	b	166f8 <cancelProcess@@Base+0x17c>
   16730:	mov	r0, r2
   16734:	bl	14154 <__strdup@plt>
   16738:	cmp	r0, #0
   1673c:	str	r0, [r6]
   16740:	bne	166f8 <cancelProcess@@Base+0x17c>
   16744:	str	r0, [sp, #4]
   16748:	bl	18368 <logMallocError@@Base>
   1674c:	ldr	r0, [sp, #4]
   16750:	b	166fc <cancelProcess@@Base+0x180>
   16754:	cmp	r6, #0
   16758:	beq	166f8 <cancelProcess@@Base+0x17c>
   1675c:	ldr	r1, [pc, #248]	; 1685c <cancelProcess@@Base+0x2e0>
   16760:	mov	r0, r2
   16764:	add	r1, pc, r1
   16768:	bl	13c8c <strcasecmp@plt>
   1676c:	cmp	r0, #0
   16770:	streq	r9, [r6]
   16774:	moveq	r0, r9
   16778:	beq	166fc <cancelProcess@@Base+0x180>
   1677c:	ldr	r1, [pc, #220]	; 16860 <cancelProcess@@Base+0x2e4>
   16780:	mov	r0, r8
   16784:	add	r1, pc, r1
   16788:	bl	13c8c <strcasecmp@plt>
   1678c:	cmp	r0, #0
   16790:	streq	r0, [r6]
   16794:	moveq	r0, r9
   16798:	beq	166fc <cancelProcess@@Base+0x180>
   1679c:	ldrb	r3, [r4, #10]
   167a0:	and	r3, r3, #2
   167a4:	ands	r0, r3, #255	; 0xff
   167a8:	beq	167d8 <cancelProcess@@Base+0x25c>
   167ac:	add	r0, sp, #8
   167b0:	mov	r1, r8
   167b4:	bl	19a24 <isInteger@@Base>
   167b8:	cmp	r0, #0
   167bc:	beq	16814 <cancelProcess@@Base+0x298>
   167c0:	ldr	r3, [sp, #8]
   167c4:	cmp	r3, #0
   167c8:	blt	16814 <cancelProcess@@Base+0x298>
   167cc:	ldr	r2, [r4, #12]
   167d0:	str	r3, [r2]
   167d4:	b	166f8 <cancelProcess@@Base+0x17c>
   167d8:	ldr	r1, [pc, #132]	; 16864 <cancelProcess@@Base+0x2e8>
   167dc:	mov	r2, #5
   167e0:	add	r1, pc, r1
   167e4:	bl	13dd0 <dcgettext@plt>
   167e8:	ldr	r1, [pc, #120]	; 16868 <cancelProcess@@Base+0x2ec>
   167ec:	mov	r3, r8
   167f0:	add	r1, pc, r1
   167f4:	mov	r2, r0
   167f8:	mov	r0, #3
   167fc:	bl	1825c <logMessage@@Base>
   16800:	ldrb	r3, [r7, #264]	; 0x108
   16804:	mov	r0, r9
   16808:	orr	r3, r3, #2
   1680c:	strb	r3, [r7, #264]	; 0x108
   16810:	b	166fc <cancelProcess@@Base+0x180>
   16814:	ldr	r1, [pc, #80]	; 1686c <cancelProcess@@Base+0x2f0>
   16818:	mov	r2, #5
   1681c:	mov	r0, #0
   16820:	add	r1, pc, r1
   16824:	bl	13dd0 <dcgettext@plt>
   16828:	ldr	r1, [pc, #64]	; 16870 <cancelProcess@@Base+0x2f4>
   1682c:	mov	r3, r8
   16830:	add	r1, pc, r1
   16834:	mov	r2, r0
   16838:	mov	r0, #3
   1683c:	bl	1825c <logMessage@@Base>
   16840:	ldrb	r3, [r7, #264]	; 0x108
   16844:	orr	r3, r3, #2
   16848:	strb	r3, [r7, #264]	; 0x108
   1684c:	b	166f8 <cancelProcess@@Base+0x17c>
   16850:	bl	13fec <__stack_chk_fail@plt>
   16854:	andeq	r8, r1, r8, ror r9
   16858:	andeq	r0, r0, ip, ror #4
   1685c:	andeq	r7, r0, r8, lsl #14
   16860:	strdeq	r6, [r0], -r4
   16864:	muleq	r0, ip, sp
   16868:	andeq	r7, r0, r0, asr #10
   1686c:	andeq	r6, r0, r4, ror sp
   16870:	andeq	r7, r0, r0, lsl #10
   16874:	push	{r4, r5, r6, r7, r8, lr}
   16878:	mov	r5, r0
   1687c:	ldr	ip, [r0, #4]
   16880:	cmp	ip, #0
   16884:	popeq	{r4, r5, r6, r7, r8, pc}
   16888:	ldr	r7, [pc, #120]	; 16908 <cancelProcess@@Base+0x38c>
   1688c:	rsbs	r8, r1, #1
   16890:	ldr	r6, [pc, #116]	; 1690c <cancelProcess@@Base+0x390>
   16894:	mov	r3, #0
   16898:	add	r7, pc, r7
   1689c:	movcc	r8, #0
   168a0:	add	r6, pc, r6
   168a4:	mov	r4, r3
   168a8:	ldr	r2, [r5]
   168ac:	rsb	r3, r3, r3, lsl #3
   168b0:	mov	r0, r5
   168b4:	add	r4, r4, #1
   168b8:	add	r3, r2, r3, lsl #2
   168bc:	ldrb	r2, [r3, #10]
   168c0:	mov	r1, r3
   168c4:	ubfx	r2, r2, #2, #1
   168c8:	cmp	r8, r2
   168cc:	beq	168e4 <cancelProcess@@Base+0x368>
   168d0:	ldr	r2, [r3, #16]
   168d4:	cmp	r2, #0
   168d8:	beq	168f4 <cancelProcess@@Base+0x378>
   168dc:	bl	16678 <cancelProcess@@Base+0xfc>
   168e0:	ldr	ip, [r5, #4]
   168e4:	cmp	r4, ip
   168e8:	mov	r3, r4
   168ec:	bcc	168a8 <cancelProcess@@Base+0x32c>
   168f0:	pop	{r4, r5, r6, r7, r8, pc}
   168f4:	ldr	r3, [r3, #4]
   168f8:	cmp	r3, #0
   168fc:	moveq	r2, r7
   16900:	movne	r2, r6
   16904:	b	168dc <cancelProcess@@Base+0x360>
   16908:	andeq	r6, r0, r0, ror #25
   1690c:			; <UNDEFINED> instruction: 0x000068b8
   16910:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16914:	mov	r9, r1
   16918:	sub	sp, sp, #12
   1691c:	mov	r1, #35	; 0x23
   16920:	mov	r8, r0
   16924:	bl	13c80 <strchr@plt>
   16928:	ldr	r1, [pc, #620]	; 16b9c <cancelProcess@@Base+0x620>
   1692c:	add	r1, pc, r1
   16930:	cmp	r0, #0
   16934:	movne	r3, #0
   16938:	strbne	r3, [r0]
   1693c:	mov	r0, r8
   16940:	bl	14034 <strtok@plt>
   16944:	subs	fp, r0, #0
   16948:	beq	16ab4 <cancelProcess@@Base+0x538>
   1694c:	ldr	r3, [r9]
   16950:	ldr	sl, [r3, #4]
   16954:	cmp	sl, #0
   16958:	beq	169a8 <cancelProcess@@Base+0x42c>
   1695c:	ldr	r7, [r3]
   16960:	mov	r5, #0
   16964:	mov	r4, r5
   16968:	rsb	r2, r5, r5, lsl #3
   1696c:	mov	r0, fp
   16970:	add	r4, r4, #1
   16974:	add	r6, r7, r2, lsl #2
   16978:	ldrb	ip, [r6, #10]
   1697c:	tst	ip, #4
   16980:	beq	1699c <cancelProcess@@Base+0x420>
   16984:	ldr	r1, [r7, r2, lsl #2]
   16988:	cmp	r1, #0
   1698c:	beq	1699c <cancelProcess@@Base+0x420>
   16990:	bl	13c8c <strcasecmp@plt>
   16994:	subs	ip, r0, #0
   16998:	beq	169fc <cancelProcess@@Base+0x480>
   1699c:	cmp	r4, sl
   169a0:	mov	r5, r4
   169a4:	bne	16968 <cancelProcess@@Base+0x3ec>
   169a8:	ldr	r1, [pc, #496]	; 16ba0 <cancelProcess@@Base+0x624>
   169ac:	mov	r2, #5
   169b0:	mov	r0, #0
   169b4:	mov	ip, #1
   169b8:	add	r1, pc, r1
   169bc:	str	ip, [sp, #4]
   169c0:	bl	13dd0 <dcgettext@plt>
   169c4:	ldr	r1, [pc, #472]	; 16ba4 <cancelProcess@@Base+0x628>
   169c8:	mov	r3, r8
   169cc:	add	r1, pc, r1
   169d0:	mov	r2, r0
   169d4:	mov	r0, #3
   169d8:	bl	1825c <logMessage@@Base>
   169dc:	ldr	r3, [r9]
   169e0:	ldrb	r2, [r3, #264]	; 0x108
   169e4:	orr	r2, r2, #2
   169e8:	strb	r2, [r3, #264]	; 0x108
   169ec:	ldr	ip, [sp, #4]
   169f0:	mov	r0, ip
   169f4:	add	sp, sp, #12
   169f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169fc:	ldr	r4, [pc, #420]	; 16ba8 <cancelProcess@@Base+0x62c>
   16a00:	str	ip, [sp, #4]
   16a04:	add	r4, pc, r4
   16a08:	mov	r1, r4
   16a0c:	bl	14034 <strtok@plt>
   16a10:	ldr	ip, [sp, #4]
   16a14:	subs	r7, r0, #0
   16a18:	beq	16b74 <cancelProcess@@Base+0x5f8>
   16a1c:	mov	r0, ip
   16a20:	mov	r1, r4
   16a24:	str	ip, [sp, #4]
   16a28:	bl	14034 <strtok@plt>
   16a2c:	ldr	ip, [sp, #4]
   16a30:	cmp	r0, #0
   16a34:	beq	16ac4 <cancelProcess@@Base+0x548>
   16a38:	mov	r0, #0
   16a3c:	mov	r1, r4
   16a40:	bl	14034 <strtok@plt>
   16a44:	cmp	r0, #0
   16a48:	bne	16a38 <cancelProcess@@Base+0x4bc>
   16a4c:	ldr	r1, [pc, #344]	; 16bac <cancelProcess@@Base+0x630>
   16a50:	mov	r2, #5
   16a54:	add	r1, pc, r1
   16a58:	bl	13dd0 <dcgettext@plt>
   16a5c:	ldr	r1, [pc, #332]	; 16bb0 <cancelProcess@@Base+0x634>
   16a60:	mov	r3, r8
   16a64:	add	r1, pc, r1
   16a68:	mov	r2, r0
   16a6c:	mov	r0, #3
   16a70:	bl	1825c <logMessage@@Base>
   16a74:	ldr	r3, [r9]
   16a78:	mov	ip, #1
   16a7c:	mov	r0, ip
   16a80:	ldrb	r2, [r3, #264]	; 0x108
   16a84:	orr	r2, r2, #2
   16a88:	strb	r2, [r3, #264]	; 0x108
   16a8c:	add	sp, sp, #12
   16a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a94:	ldrb	r3, [r7]
   16a98:	cmp	r3, #0
   16a9c:	beq	16ab4 <cancelProcess@@Base+0x538>
   16aa0:	mov	r2, ip
   16aa4:	mov	r1, r7
   16aa8:	bl	16594 <cancelProcess@@Base+0x18>
   16aac:	subs	ip, r0, #0
   16ab0:	beq	169f0 <cancelProcess@@Base+0x474>
   16ab4:	mov	ip, #1
   16ab8:	mov	r0, ip
   16abc:	add	sp, sp, #12
   16ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ac4:	ldr	r4, [r9, #4]
   16ac8:	lsl	sl, r5, #2
   16acc:	add	r0, r4, sl
   16ad0:	ldr	r3, [r4, r5, lsl #2]
   16ad4:	cmp	r3, #0
   16ad8:	beq	16b48 <cancelProcess@@Base+0x5cc>
   16adc:	ldr	r3, [r6, #4]
   16ae0:	cmp	r3, #0
   16ae4:	beq	16af4 <cancelProcess@@Base+0x578>
   16ae8:	ldrb	r3, [r6, #10]
   16aec:	tst	r3, #2
   16af0:	bne	16a94 <cancelProcess@@Base+0x518>
   16af4:	ldr	r1, [pc, #184]	; 16bb4 <cancelProcess@@Base+0x638>
   16af8:	mov	r2, #5
   16afc:	mov	r0, #0
   16b00:	str	ip, [sp, #4]
   16b04:	add	r1, pc, r1
   16b08:	bl	13dd0 <dcgettext@plt>
   16b0c:	ldr	r1, [pc, #164]	; 16bb8 <cancelProcess@@Base+0x63c>
   16b10:	mov	r3, r8
   16b14:	add	r1, pc, r1
   16b18:	mov	r2, r0
   16b1c:	mov	r0, #3
   16b20:	bl	1825c <logMessage@@Base>
   16b24:	ldr	r3, [r9]
   16b28:	ldrb	r2, [r3, #264]	; 0x108
   16b2c:	orr	r2, r2, #2
   16b30:	strb	r2, [r3, #264]	; 0x108
   16b34:	ldr	r0, [r4, sl]
   16b38:	bl	13da0 <free@plt>
   16b3c:	mov	r3, #0
   16b40:	str	r3, [r4, sl]
   16b44:	ldr	ip, [sp, #4]
   16b48:	mov	r0, r7
   16b4c:	str	ip, [sp, #4]
   16b50:	bl	14154 <__strdup@plt>
   16b54:	cmp	r0, #0
   16b58:	str	r0, [r4, sl]
   16b5c:	ldr	ip, [sp, #4]
   16b60:	bne	16ab4 <cancelProcess@@Base+0x538>
   16b64:	str	ip, [sp, #4]
   16b68:	bl	18368 <logMallocError@@Base>
   16b6c:	ldr	ip, [sp, #4]
   16b70:	b	169f0 <cancelProcess@@Base+0x474>
   16b74:	ldr	r1, [pc, #64]	; 16bbc <cancelProcess@@Base+0x640>
   16b78:	mov	r2, #5
   16b7c:	add	r1, pc, r1
   16b80:	bl	13dd0 <dcgettext@plt>
   16b84:	ldr	r1, [pc, #52]	; 16bc0 <cancelProcess@@Base+0x644>
   16b88:	mov	r3, r8
   16b8c:	add	r1, pc, r1
   16b90:	mov	r2, r0
   16b94:	mov	r0, #3
   16b98:	b	16a70 <cancelProcess@@Base+0x4f4>
   16b9c:	andeq	r6, r0, r0, lsl #25
   16ba0:	muleq	r0, r0, ip
   16ba4:	andeq	r7, r0, r4, ror #6
   16ba8:	andeq	r6, r0, r8, lsr #23
   16bac:	muleq	r0, r0, fp
   16bb0:	andeq	r7, r0, ip, asr #5
   16bb4:	andeq	r6, r0, r0, lsl fp
   16bb8:	andeq	r7, r0, ip, lsl r2
   16bbc:	andeq	r6, r0, r4, lsr sl
   16bc0:	andeq	r7, r0, r4, lsr #3

00016bc4 <processOptions@@Base>:
   16bc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16bc8:	add	fp, sp, #32
   16bcc:	ldr	r8, [pc, #4068]	; 17bb8 <processOptions@@Base+0xff4>
   16bd0:	sub	sp, sp, #1680	; 0x690
   16bd4:	sub	sp, sp, #4
   16bd8:	ldr	r3, [pc, #4060]	; 17bbc <processOptions@@Base+0xff8>
   16bdc:	add	r8, pc, r8
   16be0:	sub	r5, fp, #1584	; 0x630
   16be4:	str	r0, [fp, #-1648]	; 0xfffff990
   16be8:	sub	r5, r5, #4
   16bec:	str	r5, [fp, #-1652]	; 0xfffff98c
   16bf0:	ldr	r3, [r8, r3]
   16bf4:	mov	r9, r1
   16bf8:	mov	r0, r5
   16bfc:	mov	r1, #0
   16c00:	mov	sl, r2
   16c04:	mov	r2, #268	; 0x10c
   16c08:	str	r3, [fp, #-1668]	; 0xfffff97c
   16c0c:	ldr	r3, [r3]
   16c10:	str	r3, [fp, #-40]	; 0xffffffd8
   16c14:	bl	13cec <memset@plt>
   16c18:	ldr	r5, [fp, #-1648]	; 0xfffff990
   16c1c:	sub	r2, fp, #1328	; 0x530
   16c20:	sub	r1, fp, #1584	; 0x630
   16c24:	add	r2, r2, #3
   16c28:	sub	r1, r1, #4
   16c2c:	ldr	ip, [r5]
   16c30:	add	r3, r1, #7
   16c34:	ldr	r0, [r5, #4]
   16c38:	mov	r1, #0
   16c3c:	str	ip, [fp, #-1588]	; 0xfffff9cc
   16c40:	str	r0, [fp, #-1584]	; 0xfffff9d0
   16c44:	strb	r1, [r3, #1]!
   16c48:	cmp	r3, r2
   16c4c:	bne	16c44 <processOptions@@Base+0x80>
   16c50:	ldr	r1, [sl]
   16c54:	ldr	r0, [r9]
   16c58:	str	sp, [fp, #-1672]	; 0xfffff978
   16c5c:	bl	15c44 <beginProgram@@Base>
   16c60:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16c64:	ldr	r5, [fp, #-1648]	; 0xfffff990
   16c68:	add	r2, r3, #1
   16c6c:	cmp	r3, #0
   16c70:	lsl	r2, r2, #1
   16c74:	ldr	r5, [r5, #24]
   16c78:	add	r1, r2, #7
   16c7c:	bic	r1, r1, #7
   16c80:	lsl	r2, r2, #4
   16c84:	sub	sp, sp, r1
   16c88:	sub	r2, r2, #8
   16c8c:	add	ip, sp, #24
   16c90:	sub	sp, sp, r2
   16c94:	str	r5, [fp, #-1660]	; 0xfffff984
   16c98:	add	r5, sp, #24
   16c9c:	str	ip, [fp, #-1632]	; 0xfffff9a0
   16ca0:	str	r5, [fp, #-1664]	; 0xfffff980
   16ca4:	beq	17c70 <processOptions@@Base+0x10ac>
   16ca8:	ldr	r5, [pc, #3856]	; 17bc0 <processOptions@@Base+0xffc>
   16cac:	sub	r2, fp, #1600	; 0x640
   16cb0:	ldr	ip, [pc, #3852]	; 17bc4 <processOptions@@Base+0x1000>
   16cb4:	sub	r2, r2, #4
   16cb8:	add	r5, pc, r5
   16cbc:	str	r5, [fp, #-1644]	; 0xfffff994
   16cc0:	mov	r5, #0
   16cc4:	add	ip, pc, ip
   16cc8:	sub	r2, r2, #8
   16ccc:	str	ip, [fp, #-1624]	; 0xfffff9a8
   16cd0:	str	r2, [fp, #-1628]	; 0xfffff9a4
   16cd4:	mov	r1, r5
   16cd8:	ldr	r4, [fp, #-1664]	; 0xfffff980
   16cdc:	mov	ip, r5
   16ce0:	str	r9, [fp, #-1636]	; 0xfffff99c
   16ce4:	str	r8, [fp, #-1640]	; 0xfffff998
   16ce8:	b	16d04 <processOptions@@Base+0x140>
   16cec:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16cf0:	add	r5, r5, #1
   16cf4:	cmp	r5, r3
   16cf8:	mov	r1, r5
   16cfc:	bcs	16dc4 <processOptions@@Base+0x200>
   16d00:	mov	r4, r7
   16d04:	ldr	r2, [fp, #-1588]	; 0xfffff9cc
   16d08:	rsb	r1, r1, r1, lsl #3
   16d0c:	add	r6, r2, r1, lsl #2
   16d10:	ldr	r0, [r2, r1, lsl #2]
   16d14:	cmp	r0, #0
   16d18:	moveq	r7, r4
   16d1c:	beq	16cf0 <processOptions@@Base+0x12c>
   16d20:	str	r0, [r4]
   16d24:	add	r7, r4, #16
   16d28:	ldr	r3, [r6, #4]
   16d2c:	str	ip, [r4, #8]
   16d30:	adds	r3, r3, #0
   16d34:	movne	r3, #1
   16d38:	str	r3, [r4, #4]
   16d3c:	ldrb	r3, [r6, #8]
   16d40:	str	r3, [r4, #12]
   16d44:	ldr	r3, [r6, #4]
   16d48:	cmp	r3, #0
   16d4c:	bne	16cec <processOptions@@Base+0x128>
   16d50:	ldr	r3, [r6, #12]
   16d54:	cmp	r3, #0
   16d58:	beq	16cec <processOptions@@Base+0x128>
   16d5c:	ldr	r8, [r2, r1, lsl #2]
   16d60:	mov	r2, #3
   16d64:	ldr	r0, [fp, #-1624]	; 0xfffff9a8
   16d68:	str	ip, [fp, #-1688]	; 0xfffff968
   16d6c:	mov	r1, r8
   16d70:	bl	13f8c <strncasecmp@plt>
   16d74:	ldr	ip, [fp, #-1688]	; 0xfffff968
   16d78:	cmp	r0, #0
   16d7c:	bne	173bc <processOptions@@Base+0x7f8>
   16d80:	add	r0, r8, #3
   16d84:	bl	14154 <__strdup@plt>
   16d88:	ldr	ip, [fp, #-1688]	; 0xfffff968
   16d8c:	subs	r9, r0, #0
   16d90:	beq	17b24 <processOptions@@Base+0xf60>
   16d94:	ldr	r0, [fp, #-1628]	; 0xfffff9a4
   16d98:	add	r5, r5, #1
   16d9c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16da0:	add	r7, r4, #32
   16da4:	str	r9, [r4, #16]
   16da8:	mov	r1, r5
   16dac:	str	ip, [r4, #20]
   16db0:	cmp	r5, r3
   16db4:	str	r0, [r4, #24]
   16db8:	ldrb	r2, [r6, #8]
   16dbc:	str	r2, [r4, #28]
   16dc0:	bcc	16d00 <processOptions@@Base+0x13c>
   16dc4:	ldr	r9, [fp, #-1636]	; 0xfffff99c
   16dc8:	ldr	r8, [fp, #-1640]	; 0xfffff998
   16dcc:	mov	r1, #0
   16dd0:	mov	r2, #16
   16dd4:	mov	r0, r7
   16dd8:	bl	13cec <memset@plt>
   16ddc:	sub	r3, fp, #1312	; 0x520
   16de0:	sub	r3, r3, #4
   16de4:	sub	r1, fp, #300	; 0x12c
   16de8:	sub	r3, r3, #8
   16dec:	mov	r2, #0
   16df0:	str	r2, [r3, #4]!
   16df4:	cmp	r3, r1
   16df8:	bne	16df0 <processOptions@@Base+0x22c>
   16dfc:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16e00:	mov	r2, #43	; 0x2b
   16e04:	ldr	r5, [fp, #-1632]	; 0xfffff9a0
   16e08:	cmp	r3, #0
   16e0c:	add	r1, r5, #1
   16e10:	strb	r2, [r5]
   16e14:	beq	16e7c <processOptions@@Base+0x2b8>
   16e18:	mov	r2, #0
   16e1c:	mov	lr, #58	; 0x3a
   16e20:	mov	r3, r2
   16e24:	mov	r4, r2
   16e28:	ldr	r0, [fp, #-1588]	; 0xfffff9cc
   16e2c:	rsb	r3, r3, r3, lsl #3
   16e30:	sub	r5, fp, #36	; 0x24
   16e34:	add	r2, r2, #1
   16e38:	add	r3, r0, r3, lsl #2
   16e3c:	ldrb	r0, [r3, #8]
   16e40:	add	ip, r5, r0, lsl #2
   16e44:	str	r3, [ip, #-1284]	; 0xfffffafc
   16e48:	strb	r0, [r1]
   16e4c:	ldr	r0, [r3, #4]
   16e50:	cmp	r0, #0
   16e54:	strbne	lr, [r1, #1]
   16e58:	ldr	r3, [r3, #12]
   16e5c:	addne	r1, r1, #2
   16e60:	addeq	r1, r1, #1
   16e64:	cmp	r3, #0
   16e68:	strne	r4, [r3]
   16e6c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16e70:	cmp	r2, r3
   16e74:	mov	r3, r2
   16e78:	bcc	16e28 <processOptions@@Base+0x264>
   16e7c:	mov	r3, #0
   16e80:	strb	r3, [r1]
   16e84:	ldr	r2, [r9]
   16e88:	cmp	r2, #1
   16e8c:	ldrgt	r2, [pc, #3380]	; 17bc8 <processOptions@@Base+0x1004>
   16e90:	ldrgt	r2, [r8, r2]
   16e94:	strgt	r3, [r2]
   16e98:	mov	ip, #0
   16e9c:	ldr	r2, [pc, #3368]	; 17bcc <processOptions@@Base+0x1008>
   16ea0:	str	ip, [fp, #-1640]	; 0xfffff998
   16ea4:	mov	r5, ip
   16ea8:	str	ip, [fp, #-1624]	; 0xfffff9a8
   16eac:	mov	r3, #1
   16eb0:	ldr	ip, [pc, #3352]	; 17bd0 <processOptions@@Base+0x100c>
   16eb4:	mov	r4, r3
   16eb8:	ldr	r6, [r8, r2]
   16ebc:	mvn	r7, #0
   16ec0:	add	ip, pc, ip
   16ec4:	str	ip, [fp, #-1628]	; 0xfffff9a4
   16ec8:	ldr	ip, [pc, #3332]	; 17bd4 <processOptions@@Base+0x1010>
   16ecc:	str	r3, [r6]
   16ed0:	add	ip, pc, ip
   16ed4:	str	ip, [fp, #-1636]	; 0xfffff99c
   16ed8:	ldr	ip, [pc, #3320]	; 17bd8 <processOptions@@Base+0x1014>
   16edc:	ldr	r0, [r9]
   16ee0:	ldr	r1, [sl]
   16ee4:	add	ip, pc, ip
   16ee8:	str	ip, [fp, #-1644]	; 0xfffff994
   16eec:	ldr	ip, [pc, #3304]	; 17bdc <processOptions@@Base+0x1018>
   16ef0:	add	ip, pc, ip
   16ef4:	str	ip, [fp, #-1656]	; 0xfffff988
   16ef8:	cmp	r4, r0
   16efc:	beq	16f34 <processOptions@@Base+0x370>
   16f00:	cmp	r5, #0
   16f04:	ldr	r3, [r1, r4, lsl #2]
   16f08:	beq	17260 <processOptions@@Base+0x69c>
   16f0c:	ldrb	r3, [r5]
   16f10:	cmp	r3, #0
   16f14:	bne	17194 <processOptions@@Base+0x5d0>
   16f18:	add	r4, r4, #1
   16f1c:	str	r4, [r6]
   16f20:	ldr	r0, [r9]
   16f24:	mov	r5, r3
   16f28:	ldr	r1, [sl]
   16f2c:	cmp	r4, r0
   16f30:	bne	16f00 <processOptions@@Base+0x33c>
   16f34:	ldr	r5, [fp, #-1624]	; 0xfffff9a8
   16f38:	add	r1, r1, r4, lsl #2
   16f3c:	str	r1, [sl]
   16f40:	cmp	r5, #0
   16f44:	ldr	r3, [r6]
   16f48:	ldr	r2, [r9]
   16f4c:	rsb	r3, r3, r2
   16f50:	str	r3, [r9]
   16f54:	bne	17440 <processOptions@@Base+0x87c>
   16f58:	ldr	r5, [fp, #-1664]	; 0xfffff980
   16f5c:	ldr	r0, [r5]
   16f60:	cmp	r0, #0
   16f64:	ldrne	r4, [fp, #-1664]	; 0xfffff980
   16f68:	beq	16f88 <processOptions@@Base+0x3c4>
   16f6c:	ldr	r3, [r4, #8]
   16f70:	cmp	r3, #0
   16f74:	beq	16f7c <processOptions@@Base+0x3b8>
   16f78:	bl	13da0 <free@plt>
   16f7c:	ldr	r0, [r4, #16]!
   16f80:	cmp	r0, #0
   16f84:	bne	16f6c <processOptions@@Base+0x3a8>
   16f88:	ldr	ip, [fp, #-1648]	; 0xfffff990
   16f8c:	ldr	sp, [fp, #-1672]	; 0xfffff978
   16f90:	ldr	sl, [ip, #16]
   16f94:	cmp	sl, #0
   16f98:	beq	16fa8 <processOptions@@Base+0x3e4>
   16f9c:	ldr	sl, [sl]
   16fa0:	adds	sl, sl, #0
   16fa4:	movne	sl, #1
   16fa8:	ldr	r5, [fp, #-1648]	; 0xfffff990
   16fac:	str	sl, [fp, #-1624]	; 0xfffff9a8
   16fb0:	ldr	r3, [r5, #8]
   16fb4:	cmp	r3, #0
   16fb8:	beq	16fc8 <processOptions@@Base+0x404>
   16fbc:	ldr	r3, [r3]
   16fc0:	cmp	r3, #0
   16fc4:	bne	17a30 <processOptions@@Base+0xe6c>
   16fc8:	ldr	ip, [fp, #-1648]	; 0xfffff990
   16fcc:	ldr	r3, [ip, #12]
   16fd0:	cmp	r3, #0
   16fd4:	beq	16fe4 <processOptions@@Base+0x420>
   16fd8:	ldr	r3, [r3]
   16fdc:	cmp	r3, #0
   16fe0:	bne	178fc <processOptions@@Base+0xd38>
   16fe4:	sub	r0, fp, #1584	; 0x630
   16fe8:	mov	r1, #0
   16fec:	sub	r0, r0, #4
   16ff0:	bl	16874 <cancelProcess@@Base+0x2f8>
   16ff4:	ldr	r5, [fp, #-1648]	; 0xfffff990
   16ff8:	ldr	r3, [r5, #16]
   16ffc:	cmp	r3, #0
   17000:	beq	1714c <processOptions@@Base+0x588>
   17004:	ldr	r3, [r3]
   17008:	cmp	r3, #0
   1700c:	beq	1714c <processOptions@@Base+0x588>
   17010:	sub	r4, fp, #1600	; 0x640
   17014:	ldr	r5, [fp, #-1624]	; 0xfffff9a8
   17018:	sub	r4, r4, #4
   1701c:	str	r3, [fp, #-1616]	; 0xfffff9b0
   17020:	sub	r0, r4, #12
   17024:	eor	sl, r5, #1
   17028:	bl	160b4 <fixInstallPath@@Base>
   1702c:	ldr	r5, [fp, #-1616]	; 0xfffff9b0
   17030:	ldr	r1, [pc, #2984]	; 17be0 <processOptions@@Base+0x101c>
   17034:	mov	r2, sl
   17038:	add	r1, pc, r1
   1703c:	mov	r0, r5
   17040:	bl	18de8 <openDataFile@@Base>
   17044:	subs	r6, r0, #0
   17048:	beq	17414 <processOptions@@Base+0x850>
   1704c:	ldr	r7, [fp, #-1584]	; 0xfffff9d0
   17050:	sub	ip, fp, #1584	; 0x630
   17054:	sub	ip, ip, #4
   17058:	str	ip, [fp, #-1612]	; 0xfffff9b4
   1705c:	lsl	r0, r7, #2
   17060:	bl	13fbc <malloc@plt>
   17064:	cmp	r0, #0
   17068:	str	r0, [fp, #-1608]	; 0xfffff9b8
   1706c:	beq	17c78 <processOptions@@Base+0x10b4>
   17070:	cmp	r7, #0
   17074:	movne	r3, #0
   17078:	movne	r2, r0
   1707c:	movne	r1, r3
   17080:	bne	1708c <processOptions@@Base+0x4c8>
   17084:	b	170a0 <processOptions@@Base+0x4dc>
   17088:	ldr	r2, [fp, #-1608]	; 0xfffff9b8
   1708c:	str	r1, [r2, r3, lsl #2]
   17090:	add	r3, r3, #1
   17094:	ldr	r2, [fp, #-1584]	; 0xfffff9d0
   17098:	cmp	r3, r2
   1709c:	bcc	17088 <processOptions@@Base+0x4c4>
   170a0:	ldr	r1, [pc, #2876]	; 17be4 <processOptions@@Base+0x1020>
   170a4:	sub	r2, r4, #8
   170a8:	mov	r0, r6
   170ac:	add	r1, pc, r1
   170b0:	bl	190c4 <processLines@@Base>
   170b4:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   170b8:	cmp	r3, #0
   170bc:	subne	sl, fp, #1584	; 0x630
   170c0:	movne	r4, #0
   170c4:	subne	sl, sl, #4
   170c8:	movne	r9, r4
   170cc:	mov	r7, r0
   170d0:	beq	17118 <processOptions@@Base+0x554>
   170d4:	ldr	r2, [fp, #-1608]	; 0xfffff9b8
   170d8:	ldr	r8, [r2, r4]
   170dc:	cmp	r8, #0
   170e0:	beq	17108 <processOptions@@Base+0x544>
   170e4:	ldr	r1, [fp, #-1588]	; 0xfffff9cc
   170e8:	rsb	r3, r4, r4, lsl #3
   170ec:	mov	r2, r8
   170f0:	mov	r0, sl
   170f4:	add	r1, r1, r3
   170f8:	bl	16678 <cancelProcess@@Base+0xfc>
   170fc:	mov	r0, r8
   17100:	bl	13da0 <free@plt>
   17104:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17108:	add	r9, r9, #1
   1710c:	add	r4, r4, #4
   17110:	cmp	r9, r3
   17114:	bcc	170d4 <processOptions@@Base+0x510>
   17118:	cmp	r7, #0
   1711c:	beq	17b84 <processOptions@@Base+0xfc0>
   17120:	ldr	r0, [fp, #-1608]	; 0xfffff9b8
   17124:	bl	13da0 <free@plt>
   17128:	mov	r0, r6
   1712c:	bl	13c50 <fclose@plt>
   17130:	ldr	r5, [fp, #-1648]	; 0xfffff990
   17134:	ldr	r0, [fp, #-1616]	; 0xfffff9b0
   17138:	ldr	r3, [r5, #16]
   1713c:	ldr	r3, [r3]
   17140:	cmp	r3, r0
   17144:	beq	1714c <processOptions@@Base+0x588>
   17148:	bl	13da0 <free@plt>
   1714c:	sub	r0, fp, #1584	; 0x630
   17150:	mov	r1, #1
   17154:	sub	r0, r0, #4
   17158:	bl	16874 <cancelProcess@@Base+0x2f8>
   1715c:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   17160:	tst	r3, #1
   17164:	movne	r0, #1
   17168:	bne	17178 <processOptions@@Base+0x5b4>
   1716c:	tst	r3, #4
   17170:	moveq	r0, #0
   17174:	movne	r0, #2
   17178:	ldr	ip, [fp, #-1668]	; 0xfffff97c
   1717c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17180:	ldr	r3, [ip]
   17184:	cmp	r2, r3
   17188:	bne	17cac <processOptions@@Base+0x10e8>
   1718c:	sub	sp, fp, #32
   17190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17194:	sub	r0, fp, #36	; 0x24
   17198:	add	r2, r0, r3, lsl #2
   1719c:	ldr	r2, [r2, #-1284]	; 0xfffffafc
   171a0:	cmp	r2, #0
   171a4:	beq	171b4 <processOptions@@Base+0x5f0>
   171a8:	ldr	ip, [r2, #4]
   171ac:	cmp	ip, #0
   171b0:	beq	173a8 <processOptions@@Base+0x7e4>
   171b4:	ldr	r2, [pc, #2604]	; 17be8 <processOptions@@Base+0x1024>
   171b8:	mov	ip, #63	; 0x3f
   171bc:	ldr	r2, [r8, r2]
   171c0:	str	r3, [r2]
   171c4:	cmp	ip, #63	; 0x3f
   171c8:	add	r5, r5, #1
   171cc:	mov	r4, #43	; 0x2b
   171d0:	beq	172a4 <processOptions@@Base+0x6e0>
   171d4:	bgt	17238 <processOptions@@Base+0x674>
   171d8:	cmp	ip, #0
   171dc:	beq	17314 <processOptions@@Base+0x750>
   171e0:	cmp	ip, #58	; 0x3a
   171e4:	bne	172cc <processOptions@@Base+0x708>
   171e8:	ldr	r1, [fp, #-1644]	; 0xfffff994
   171ec:	mov	r2, #5
   171f0:	mov	r0, #0
   171f4:	bl	13dd0 <dcgettext@plt>
   171f8:	ldr	ip, [pc, #2536]	; 17be8 <processOptions@@Base+0x1024>
   171fc:	ldr	r1, [fp, #-1656]	; 0xfffff988
   17200:	mov	r3, r4
   17204:	mov	r2, r0
   17208:	mov	r0, #3
   1720c:	ldr	ip, [r8, ip]
   17210:	ldr	ip, [ip]
   17214:	str	ip, [sp]
   17218:	bl	1825c <logMessage@@Base>
   1721c:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   17220:	ldr	r0, [r9]
   17224:	orr	r3, r3, #4
   17228:	ldr	r4, [r6]
   1722c:	strb	r3, [fp, #-1324]	; 0xfffffad4
   17230:	ldr	r1, [sl]
   17234:	b	16ef8 <processOptions@@Base+0x334>
   17238:	cmp	ip, #72	; 0x48
   1723c:	beq	17350 <processOptions@@Base+0x78c>
   17240:	cmp	ip, #104	; 0x68
   17244:	bne	172cc <processOptions@@Base+0x708>
   17248:	mov	ip, #1
   1724c:	ldr	r0, [r9]
   17250:	str	ip, [fp, #-1624]	; 0xfffff9a8
   17254:	ldr	r4, [r6]
   17258:	ldr	r1, [sl]
   1725c:	b	16ef8 <processOptions@@Base+0x334>
   17260:	cmp	r7, r4
   17264:	beq	17274 <processOptions@@Base+0x6b0>
   17268:	ldrb	r2, [r3]
   1726c:	cmp	r2, #43	; 0x2b
   17270:	beq	1742c <processOptions@@Base+0x868>
   17274:	mov	r2, #0
   17278:	str	r2, [sp]
   1727c:	ldr	r2, [fp, #-1632]	; 0xfffff9a0
   17280:	ldr	r3, [fp, #-1664]	; 0xfffff980
   17284:	bl	13dc4 <getopt_long@plt>
   17288:	cmn	r0, #1
   1728c:	mov	ip, r0
   17290:	beq	17ca0 <processOptions@@Base+0x10dc>
   17294:	cmp	ip, #63	; 0x3f
   17298:	mov	r7, r4
   1729c:	mov	r4, #45	; 0x2d
   172a0:	bne	171d4 <processOptions@@Base+0x610>
   172a4:	ldr	r1, [fp, #-1628]	; 0xfffff9a4
   172a8:	mov	r2, #5
   172ac:	mov	r0, #0
   172b0:	bl	13dd0 <dcgettext@plt>
   172b4:	ldr	ip, [pc, #2348]	; 17be8 <processOptions@@Base+0x1024>
   172b8:	mov	r3, r4
   172bc:	ldr	r1, [fp, #-1636]	; 0xfffff99c
   172c0:	mov	r2, r0
   172c4:	mov	r0, #3
   172c8:	b	1720c <processOptions@@Base+0x648>
   172cc:	sub	r0, fp, #36	; 0x24
   172d0:	add	r3, r0, ip, lsl #2
   172d4:	ldr	r3, [r3, #-1284]	; 0xfffffafc
   172d8:	ldr	r2, [r3, #4]
   172dc:	cmp	r2, #0
   172e0:	beq	178d4 <processOptions@@Base+0xd10>
   172e4:	ldr	r2, [pc, #2304]	; 17bec <processOptions@@Base+0x1028>
   172e8:	ldr	r2, [r8, r2]
   172ec:	ldr	r1, [r2]
   172f0:	ldrb	r2, [r1]
   172f4:	cmp	r2, #0
   172f8:	bne	1736c <processOptions@@Base+0x7a8>
   172fc:	add	ip, r0, ip
   17300:	ldr	r4, [r6]
   17304:	ldr	r0, [r9]
   17308:	strb	r2, [ip, #-1544]	; 0xfffff9f8
   1730c:	ldr	r1, [sl]
   17310:	b	16ef8 <processOptions@@Base+0x334>
   17314:	ldr	r3, [fp, #-1612]	; 0xfffff9b4
   17318:	sub	r0, fp, #36	; 0x24
   1731c:	sub	r1, fp, #36	; 0x24
   17320:	mov	r2, #1
   17324:	add	r3, r0, r3, lsl #2
   17328:	ldr	r3, [r3, #-1284]	; 0xfffffafc
   1732c:	ldr	r3, [r3, #12]
   17330:	str	ip, [r3]
   17334:	ldr	r3, [fp, #-1612]	; 0xfffff9b4
   17338:	ldr	r0, [r9]
   1733c:	add	r3, r1, r3
   17340:	ldr	r4, [r6]
   17344:	ldr	r1, [sl]
   17348:	strb	r2, [r3, #-1544]	; 0xfffff9f8
   1734c:	b	16ef8 <processOptions@@Base+0x334>
   17350:	mov	ip, #1
   17354:	ldr	r0, [r9]
   17358:	str	ip, [fp, #-1640]	; 0xfffff998
   1735c:	str	ip, [fp, #-1624]	; 0xfffff9a8
   17360:	ldr	r4, [r6]
   17364:	ldr	r1, [sl]
   17368:	b	16ef8 <processOptions@@Base+0x334>
   1736c:	ldr	r0, [r3, #12]
   17370:	cmp	r0, #0
   17374:	beq	17388 <processOptions@@Base+0x7c4>
   17378:	ldrb	r3, [r3, #10]
   1737c:	tst	r3, #2
   17380:	streq	r1, [r0]
   17384:	bne	17b38 <processOptions@@Base+0xf74>
   17388:	sub	r2, fp, #36	; 0x24
   1738c:	mov	r3, #1
   17390:	add	ip, r2, ip
   17394:	ldr	r0, [r9]
   17398:	ldr	r4, [r6]
   1739c:	strb	r3, [ip, #-1544]	; 0xfffff9f8
   173a0:	ldr	r1, [sl]
   173a4:	b	16ef8 <processOptions@@Base+0x334>
   173a8:	ldr	r2, [r2, #12]
   173ac:	cmp	r2, #0
   173b0:	strne	r3, [fp, #-1612]	; 0xfffff9b4
   173b4:	bne	171c4 <processOptions@@Base+0x600>
   173b8:	b	171b4 <processOptions@@Base+0x5f0>
   173bc:	mov	r0, r8
   173c0:	str	ip, [fp, #-1688]	; 0xfffff968
   173c4:	bl	13e48 <strlen@plt>
   173c8:	add	r1, r0, #4
   173cc:	str	r1, [fp, #-1684]	; 0xfffff96c
   173d0:	mov	r0, r1
   173d4:	bl	13fbc <malloc@plt>
   173d8:	ldr	r1, [fp, #-1684]	; 0xfffff96c
   173dc:	ldr	ip, [fp, #-1688]	; 0xfffff968
   173e0:	subs	r9, r0, #0
   173e4:	beq	17b24 <processOptions@@Base+0xf60>
   173e8:	ldr	r2, [fp, #-1644]	; 0xfffff994
   173ec:	str	r2, [sp]
   173f0:	mov	r2, #1
   173f4:	ldr	r3, [fp, #-1624]	; 0xfffff9a8
   173f8:	str	r8, [sp, #8]
   173fc:	str	r3, [sp, #4]
   17400:	mvn	r3, #0
   17404:	str	ip, [fp, #-1688]	; 0xfffff968
   17408:	bl	13f44 <__snprintf_chk@plt>
   1740c:	ldr	ip, [fp, #-1688]	; 0xfffff968
   17410:	b	16d94 <processOptions@@Base+0x1d0>
   17414:	cmp	sl, #0
   17418:	bne	17b4c <processOptions@@Base+0xf88>
   1741c:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   17420:	orr	r3, r3, #2
   17424:	strb	r3, [fp, #-1324]	; 0xfffffad4
   17428:	b	17130 <processOptions@@Base+0x56c>
   1742c:	adds	r3, r3, #1
   17430:	movne	r5, r3
   17434:	movne	r7, r4
   17438:	bne	16ef8 <processOptions@@Base+0x334>
   1743c:	b	17274 <processOptions@@Base+0x6b0>
   17440:	ldr	r3, [pc, #1960]	; 17bf0 <processOptions@@Base+0x102c>
   17444:	str	sp, [fp, #-1680]	; 0xfffff970
   17448:	sub	sp, sp, #80	; 0x50
   1744c:	ldr	r6, [fp, #-1584]	; 0xfffff9d0
   17450:	add	sl, sp, #24
   17454:	ldr	r3, [r8, r3]
   17458:	cmp	r6, #0
   1745c:	ldr	r3, [r3]
   17460:	str	r3, [fp, #-1632]	; 0xfffff9a0
   17464:	beq	17c80 <processOptions@@Base+0x10bc>
   17468:	ldr	r5, [fp, #-1588]	; 0xfffff9cc
   1746c:	mov	r7, #0
   17470:	mov	r4, r7
   17474:	mov	r3, r7
   17478:	mov	r9, r7
   1747c:	str	r7, [fp, #-1656]	; 0xfffff988
   17480:	str	r8, [fp, #-1624]	; 0xfffff9a8
   17484:	rsb	r3, r3, r3, lsl #3
   17488:	ldr	r0, [r5, r3, lsl #2]
   1748c:	add	r8, r5, r3, lsl #2
   17490:	cmp	r0, #0
   17494:	beq	174a4 <processOptions@@Base+0x8e0>
   17498:	bl	13e48 <strlen@plt>
   1749c:	cmp	r4, r0
   174a0:	movcc	r4, r0
   174a4:	ldr	r0, [r8, #4]
   174a8:	cmp	r0, #0
   174ac:	beq	174bc <processOptions@@Base+0x8f8>
   174b0:	bl	13e48 <strlen@plt>
   174b4:	cmp	r9, r0
   174b8:	movcc	r9, r0
   174bc:	add	r7, r7, #1
   174c0:	cmp	r7, r6
   174c4:	mov	r3, r7
   174c8:	bne	17484 <processOptions@@Base+0x8c0>
   174cc:	ldr	r8, [fp, #-1624]	; 0xfffff9a8
   174d0:	str	r9, [fp, #-1656]	; 0xfffff988
   174d4:	ldr	r1, [pc, #1816]	; 17bf4 <processOptions@@Base+0x1030>
   174d8:	mov	r2, #5
   174dc:	mov	r0, #0
   174e0:	add	r1, pc, r1
   174e4:	bl	13dd0 <dcgettext@plt>
   174e8:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   174ec:	bl	141e4 <fputs@plt>
   174f0:	ldr	r3, [pc, #1792]	; 17bf8 <processOptions@@Base+0x1034>
   174f4:	ldr	r2, [pc, #1792]	; 17bfc <processOptions@@Base+0x1038>
   174f8:	mov	r1, #1
   174fc:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   17500:	ldr	r3, [r8, r3]
   17504:	add	r2, pc, r2
   17508:	ldr	r3, [r3]
   1750c:	bl	14004 <__fprintf_chk@plt>
   17510:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17514:	cmp	r3, #0
   17518:	bne	17c20 <processOptions@@Base+0x105c>
   1751c:	ldr	ip, [fp, #-1660]	; 0xfffff984
   17520:	cmp	ip, #0
   17524:	beq	17534 <processOptions@@Base+0x970>
   17528:	ldrb	r3, [ip]
   1752c:	cmp	r3, #0
   17530:	bne	17b60 <processOptions@@Base+0xf9c>
   17534:	mov	r0, #10
   17538:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   1753c:	bl	14028 <fputc@plt>
   17540:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17544:	cmp	r3, #0
   17548:	beq	1789c <processOptions@@Base+0xcd8>
   1754c:	ldr	r5, [pc, #1708]	; 17c00 <processOptions@@Base+0x103c>
   17550:	add	r4, r4, #3
   17554:	ldr	ip, [pc, #1704]	; 17c04 <processOptions@@Base+0x1040>
   17558:	add	r5, pc, r5
   1755c:	str	r5, [fp, #-1628]	; 0xfffff9a4
   17560:	add	ip, pc, ip
   17564:	mov	r5, #0
   17568:	str	ip, [fp, #-1676]	; 0xfffff974
   1756c:	mov	r7, r5
   17570:	ldr	ip, [fp, #-1656]	; 0xfffff988
   17574:	str	r5, [fp, #-1636]	; 0xfffff99c
   17578:	mov	r5, #32
   1757c:	add	ip, ip, #3
   17580:	str	r4, [fp, #-1660]	; 0xfffff984
   17584:	str	ip, [fp, #-1644]	; 0xfffff994
   17588:	ldr	ip, [fp, #-1640]	; 0xfffff998
   1758c:	rsb	r7, r7, r7, lsl #3
   17590:	ldr	r6, [fp, #-1588]	; 0xfffff9cc
   17594:	cmp	ip, #0
   17598:	add	r8, r6, r7, lsl #2
   1759c:	bne	175ac <processOptions@@Base+0x9e8>
   175a0:	ldrb	r2, [r8, #10]
   175a4:	tst	r2, #1
   175a8:	bne	17884 <processOptions@@Base+0xcc0>
   175ac:	mov	r0, #45	; 0x2d
   175b0:	strb	r0, [sl]
   175b4:	ldrb	r3, [r8, #8]
   175b8:	strb	r5, [sl, #2]
   175bc:	ldr	ip, [fp, #-1644]	; 0xfffff994
   175c0:	strb	r3, [sl, #1]
   175c4:	ldr	r9, [r8, #4]
   175c8:	cmp	r9, #0
   175cc:	beq	178b8 <processOptions@@Base+0xcf4>
   175d0:	mov	r0, r9
   175d4:	str	ip, [fp, #-1688]	; 0xfffff968
   175d8:	bl	13e48 <strlen@plt>
   175dc:	mov	r1, r9
   175e0:	mov	r3, #77	; 0x4d
   175e4:	mov	r4, r0
   175e8:	mov	r2, r0
   175ec:	add	r0, sl, #3
   175f0:	bl	13e0c <__memcpy_chk@plt>
   175f4:	ldr	r1, [fp, #-1644]	; 0xfffff994
   175f8:	add	r3, r4, #3
   175fc:	add	r2, r4, #4
   17600:	cmp	r1, r3
   17604:	ldr	ip, [fp, #-1688]	; 0xfffff968
   17608:	bls	178cc <processOptions@@Base+0xd08>
   1760c:	mov	r2, r1
   17610:	strb	r5, [sl, r3]
   17614:	add	r3, r3, #1
   17618:	cmp	r2, r3
   1761c:	bne	17610 <processOptions@@Base+0xa4c>
   17620:	ldr	r3, [fp, #-1656]	; 0xfffff988
   17624:	add	r2, r3, #4
   17628:	ldr	r0, [fp, #-1660]	; 0xfffff984
   1762c:	strb	r5, [sl, ip]
   17630:	add	r4, r0, r2
   17634:	ldr	r0, [r6, r7, lsl #2]
   17638:	cmp	r0, #0
   1763c:	beq	1769c <processOptions@@Base+0xad8>
   17640:	add	r9, ip, #3
   17644:	str	r2, [fp, #-1684]	; 0xfffff96c
   17648:	str	ip, [fp, #-1688]	; 0xfffff968
   1764c:	bl	13e48 <strlen@plt>
   17650:	ldr	ip, [fp, #-1688]	; 0xfffff968
   17654:	mov	r1, #45	; 0x2d
   17658:	ldr	r2, [fp, #-1684]	; 0xfffff96c
   1765c:	add	ip, sl, ip
   17660:	strb	r1, [sl, r2]
   17664:	strb	r1, [ip, #2]
   17668:	ldr	r1, [r6, r7, lsl #2]
   1766c:	mov	r3, r0
   17670:	add	r0, sl, r9
   17674:	mov	r2, r3
   17678:	str	r3, [fp, #-1684]	; 0xfffff96c
   1767c:	bl	13e84 <memcpy@plt>
   17680:	ldr	r3, [fp, #-1684]	; 0xfffff96c
   17684:	ldr	r1, [r8, #4]
   17688:	add	r2, r3, r9
   1768c:	cmp	r1, #0
   17690:	movne	r3, #61	; 0x3d
   17694:	strbne	r3, [sl, r2]
   17698:	addne	r2, r2, #1
   1769c:	cmp	r4, r2
   176a0:	bls	17b1c <processOptions@@Base+0xf58>
   176a4:	mov	r3, r2
   176a8:	strb	r5, [sl, r3]
   176ac:	add	r3, r3, #1
   176b0:	cmp	r3, r4
   176b4:	bne	176a8 <processOptions@@Base+0xae4>
   176b8:	mov	r3, sl
   176bc:	add	r6, r4, #2
   176c0:	strb	r5, [r3, r4]!
   176c4:	rsb	r9, r4, #77	; 0x4d
   176c8:	strb	r5, [r3, #1]
   176cc:	ldr	r1, [r8, #20]
   176d0:	cmp	r1, #0
   176d4:	beq	178b0 <processOptions@@Base+0xcec>
   176d8:	mov	r0, #0
   176dc:	mov	r2, #5
   176e0:	bl	13dd0 <dcgettext@plt>
   176e4:	mov	r7, r0
   176e8:	ldr	r0, [r8, #24]
   176ec:	cmp	r0, #0
   176f0:	beq	1778c <processOptions@@Base+0xbc8>
   176f4:	ldr	r2, [r0]
   176f8:	sub	lr, fp, #1600	; 0x640
   176fc:	sub	lr, lr, #4
   17700:	mov	r4, sp
   17704:	cmp	r2, #0
   17708:	subne	r1, lr, #4
   1770c:	movne	r3, #0
   17710:	beq	17b7c <processOptions@@Base+0xfb8>
   17714:	str	r2, [r1, #4]!
   17718:	add	r3, r3, #1
   1771c:	ldr	r2, [r0, #4]!
   17720:	cmp	r2, #0
   17724:	bne	17714 <processOptions@@Base+0xb50>
   17728:	cmp	r3, #3
   1772c:	bgt	1774c <processOptions@@Base+0xb88>
   17730:	sub	r2, r3, #1
   17734:	mov	r1, #0
   17738:	add	r2, lr, r2, lsl #2
   1773c:	add	r3, r3, #1
   17740:	str	r1, [r2, #4]!
   17744:	cmp	r3, #3
   17748:	ble	1773c <processOptions@@Base+0xb78>
   1774c:	str	r7, [sp]
   17750:	sub	r7, fp, #296	; 0x128
   17754:	ldr	lr, [fp, #-1604]	; 0xfffff9bc
   17758:	mov	r1, #256	; 0x100
   1775c:	mov	r0, r7
   17760:	mov	r3, r1
   17764:	mov	r2, #1
   17768:	str	lr, [sp, #4]
   1776c:	ldr	lr, [fp, #-1600]	; 0xfffff9c0
   17770:	str	lr, [sp, #8]
   17774:	ldr	lr, [fp, #-1596]	; 0xfffff9c4
   17778:	str	lr, [sp, #12]
   1777c:	ldr	lr, [fp, #-1592]	; 0xfffff9c8
   17780:	str	lr, [sp, #16]
   17784:	bl	13f44 <__snprintf_chk@plt>
   17788:	mov	sp, r4
   1778c:	mov	r0, r7
   17790:	add	ip, sl, r6
   17794:	str	ip, [fp, #-1624]	; 0xfffff9a8
   17798:	bl	13e48 <strlen@plt>
   1779c:	mov	r8, r0
   177a0:	cmp	r9, r8
   177a4:	movcs	r4, r8
   177a8:	bcs	177ec <processOptions@@Base+0xc28>
   177ac:	ldrb	r2, [r7, r9]
   177b0:	add	r3, r7, r9
   177b4:	mov	r4, r9
   177b8:	cmp	r2, #32
   177bc:	beq	177d0 <processOptions@@Base+0xc0c>
   177c0:	ldrb	r2, [r3, #-1]!
   177c4:	sub	r4, r4, #1
   177c8:	cmp	r2, #32
   177cc:	bne	177c0 <processOptions@@Base+0xbfc>
   177d0:	add	r3, r7, r4
   177d4:	b	177dc <processOptions@@Base+0xc18>
   177d8:	mov	r4, r1
   177dc:	ldrb	r2, [r3, #-1]!
   177e0:	sub	r1, r4, #1
   177e4:	cmp	r2, #32
   177e8:	beq	177d8 <processOptions@@Base+0xc14>
   177ec:	mov	r1, r7
   177f0:	mov	r2, r4
   177f4:	ldr	r0, [fp, #-1624]	; 0xfffff9a8
   177f8:	bl	13e84 <memcpy@plt>
   177fc:	ldr	ip, [fp, #-1624]	; 0xfffff9a8
   17800:	mov	r0, #0
   17804:	ldr	r2, [fp, #-1628]	; 0xfffff9a4
   17808:	mov	r3, sl
   1780c:	mov	r1, #1
   17810:	strb	r0, [ip, r4]
   17814:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   17818:	bl	14004 <__fprintf_chk@plt>
   1781c:	ldrb	r3, [r7, r4]
   17820:	add	r2, r7, r4
   17824:	cmp	r3, #32
   17828:	bne	17854 <processOptions@@Base+0xc90>
   1782c:	rsb	r7, r7, #1
   17830:	mov	r4, r2
   17834:	b	1783c <processOptions@@Base+0xc78>
   17838:	mov	r4, r3
   1783c:	ldrb	r2, [r4, #1]
   17840:	add	r3, r4, #1
   17844:	add	r4, r7, r4
   17848:	cmp	r2, #32
   1784c:	mov	r2, r3
   17850:	beq	17838 <processOptions@@Base+0xc74>
   17854:	subs	r8, r8, r4
   17858:	beq	17880 <processOptions@@Base+0xcbc>
   1785c:	cmp	r6, #0
   17860:	beq	17878 <processOptions@@Base+0xcb4>
   17864:	mov	r3, #0
   17868:	strb	r5, [sl, r3]
   1786c:	add	r3, r3, #1
   17870:	cmp	r3, r6
   17874:	bne	17868 <processOptions@@Base+0xca4>
   17878:	mov	r7, r2
   1787c:	b	177a0 <processOptions@@Base+0xbdc>
   17880:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17884:	ldr	ip, [fp, #-1636]	; 0xfffff99c
   17888:	add	ip, ip, #1
   1788c:	str	ip, [fp, #-1636]	; 0xfffff99c
   17890:	cmp	ip, r3
   17894:	mov	r7, ip
   17898:	bcc	17588 <processOptions@@Base+0x9c4>
   1789c:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   178a0:	ldr	sp, [fp, #-1680]	; 0xfffff970
   178a4:	orr	r3, r3, #1
   178a8:	strb	r3, [fp, #-1324]	; 0xfffffad4
   178ac:	b	16f58 <processOptions@@Base+0x394>
   178b0:	ldr	r7, [fp, #-1676]	; 0xfffff974
   178b4:	b	176e8 <processOptions@@Base+0xb24>
   178b8:	ldr	r1, [fp, #-1644]	; 0xfffff994
   178bc:	mov	r3, #3
   178c0:	mov	r2, #4
   178c4:	cmp	r1, r3
   178c8:	bhi	1760c <processOptions@@Base+0xa48>
   178cc:	mov	ip, r3
   178d0:	b	17628 <processOptions@@Base+0xa64>
   178d4:	ldr	r2, [r3, #12]
   178d8:	cmp	r2, #0
   178dc:	beq	17388 <processOptions@@Base+0x7c4>
   178e0:	ldrb	r3, [r3, #10]
   178e4:	tst	r3, #2
   178e8:	ldrne	r3, [r2]
   178ec:	moveq	r3, #1
   178f0:	addne	r3, r3, #1
   178f4:	str	r3, [r2]
   178f8:	b	17388 <processOptions@@Base+0x7c4>
   178fc:	ldr	ip, [fp, #-1648]	; 0xfffff990
   17900:	ldr	ip, [ip, #20]
   17904:	mov	r0, ip
   17908:	str	ip, [fp, #-1628]	; 0xfffff9a4
   1790c:	bl	13e48 <strlen@plt>
   17910:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17914:	cmp	r3, #0
   17918:	beq	16fe4 <processOptions@@Base+0x420>
   1791c:	ldr	r5, [pc, #740]	; 17c08 <processOptions@@Base+0x1044>
   17920:	mov	r4, #0
   17924:	mov	r7, #95	; 0x5f
   17928:	add	r0, r0, #2
   1792c:	add	r5, pc, r5
   17930:	str	r5, [fp, #-1640]	; 0xfffff998
   17934:	mov	r5, r4
   17938:	str	r0, [fp, #-1636]	; 0xfffff99c
   1793c:	ldr	r2, [fp, #-1588]	; 0xfffff9cc
   17940:	add	r6, r2, r4
   17944:	ldrb	r1, [r6, #10]
   17948:	tst	r1, #8
   1794c:	beq	17a1c <processOptions@@Base+0xe58>
   17950:	ldr	r9, [r2, r4]
   17954:	cmp	r9, #0
   17958:	beq	17a1c <processOptions@@Base+0xe58>
   1795c:	mov	r0, r9
   17960:	str	sp, [fp, #-1632]	; 0xfffff9a0
   17964:	bl	13e48 <strlen@plt>
   17968:	ldr	ip, [fp, #-1636]	; 0xfffff99c
   1796c:	mov	r2, #1
   17970:	mvn	r3, #0
   17974:	add	r1, ip, r0
   17978:	ldr	ip, [fp, #-1640]	; 0xfffff998
   1797c:	add	r0, r1, #7
   17980:	bic	r0, r0, #7
   17984:	sub	sp, sp, r0
   17988:	add	r8, sp, #24
   1798c:	str	ip, [sp]
   17990:	ldr	ip, [fp, #-1628]	; 0xfffff9a4
   17994:	mov	r0, r8
   17998:	str	r9, [sp, #8]
   1799c:	str	ip, [sp, #4]
   179a0:	bl	13f44 <__snprintf_chk@plt>
   179a4:	ldrb	r9, [sp, #24]
   179a8:	cmp	r9, #0
   179ac:	addne	sl, sp, #25
   179b0:	beq	179f8 <processOptions@@Base+0xe34>
   179b4:	cmp	r9, #45	; 0x2d
   179b8:	strbeq	r7, [sl, #-1]
   179bc:	beq	179ec <processOptions@@Base+0xe28>
   179c0:	bl	13fb0 <__ctype_b_loc@plt>
   179c4:	sxth	r9, r9
   179c8:	lsl	r3, r9, #1
   179cc:	ldr	r2, [r0]
   179d0:	ldrh	r3, [r2, r3]
   179d4:	tst	r3, #512	; 0x200
   179d8:	beq	179ec <processOptions@@Base+0xe28>
   179dc:	bl	13b6c <__ctype_toupper_loc@plt>
   179e0:	ldr	r3, [r0]
   179e4:	ldr	r3, [r3, r9, lsl #2]
   179e8:	strb	r3, [sl, #-1]
   179ec:	ldrb	r9, [sl], #1
   179f0:	cmp	r9, #0
   179f4:	bne	179b4 <processOptions@@Base+0xdf0>
   179f8:	mov	r0, r8
   179fc:	bl	13c68 <getenv@plt>
   17a00:	subs	r2, r0, #0
   17a04:	beq	17a14 <processOptions@@Base+0xe50>
   17a08:	ldrb	r3, [r2]
   17a0c:	cmp	r3, #0
   17a10:	bne	17b08 <processOptions@@Base+0xf44>
   17a14:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17a18:	ldr	sp, [fp, #-1632]	; 0xfffff9a0
   17a1c:	add	r5, r5, #1
   17a20:	add	r4, r4, #28
   17a24:	cmp	r5, r3
   17a28:	bcc	1793c <processOptions@@Base+0xd78>
   17a2c:	b	16fe4 <processOptions@@Base+0x420>
   17a30:	ldr	r4, [r5, #20]
   17a34:	mov	r0, r4
   17a38:	bl	1af50 <getBootParameters@@Base>
   17a3c:	subs	r5, r0, #0
   17a40:	movne	r0, r5
   17a44:	beq	17c8c <processOptions@@Base+0x10c8>
   17a48:	sub	r2, fp, #1600	; 0x640
   17a4c:	mov	r1, #44	; 0x2c
   17a50:	sub	r2, r2, #4
   17a54:	mov	r4, #0
   17a58:	sub	r2, r2, #8
   17a5c:	str	r4, [fp, #-1612]	; 0xfffff9b4
   17a60:	bl	197e4 <splitString@@Base>
   17a64:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17a68:	cmp	r3, r4
   17a6c:	movne	r7, #44	; 0x2c
   17a70:	movne	r2, r4
   17a74:	mov	r6, r0
   17a78:	beq	17aec <processOptions@@Base+0xf28>
   17a7c:	rsb	r2, r2, r2, lsl #3
   17a80:	ldr	r1, [fp, #-1588]	; 0xfffff9cc
   17a84:	add	r1, r1, r2, lsl #2
   17a88:	ldrb	r2, [r1, #9]
   17a8c:	cmp	r2, #0
   17a90:	beq	17adc <processOptions@@Base+0xf18>
   17a94:	ldr	r0, [fp, #-1612]	; 0xfffff9b4
   17a98:	cmp	r2, r0
   17a9c:	bgt	17adc <processOptions@@Base+0xf18>
   17aa0:	sub	r2, r2, #-1073741823	; 0xc0000001
   17aa4:	ldr	r2, [r6, r2, lsl #2]
   17aa8:	ldrb	r0, [r2]
   17aac:	cmp	r0, #0
   17ab0:	beq	17adc <processOptions@@Base+0xf18>
   17ab4:	add	r3, r2, #1
   17ab8:	cmp	r0, #43	; 0x2b
   17abc:	strbeq	r7, [r3, #-1]
   17ac0:	ldrb	r0, [r3], #1
   17ac4:	cmp	r0, #0
   17ac8:	bne	17ab8 <processOptions@@Base+0xef4>
   17acc:	sub	r0, fp, #1584	; 0x630
   17ad0:	sub	r0, r0, #4
   17ad4:	bl	16678 <cancelProcess@@Base+0xfc>
   17ad8:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17adc:	add	r4, r4, #1
   17ae0:	cmp	r4, r3
   17ae4:	mov	r2, r4
   17ae8:	bcc	17a7c <processOptions@@Base+0xeb8>
   17aec:	mov	r0, r6
   17af0:	bl	197b0 <deallocateStrings@@Base>
   17af4:	cmp	r5, #0
   17af8:	beq	16fc8 <processOptions@@Base+0x404>
   17afc:	mov	r0, r5
   17b00:	bl	13da0 <free@plt>
   17b04:	b	16fc8 <processOptions@@Base+0x404>
   17b08:	sub	r0, fp, #1584	; 0x630
   17b0c:	mov	r1, r6
   17b10:	sub	r0, r0, #4
   17b14:	bl	16678 <cancelProcess@@Base+0xfc>
   17b18:	b	17a14 <processOptions@@Base+0xe50>
   17b1c:	mov	r4, r2
   17b20:	b	176b8 <processOptions@@Base+0xaf4>
   17b24:	str	ip, [fp, #-1688]	; 0xfffff968
   17b28:	bl	18368 <logMallocError@@Base>
   17b2c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17b30:	ldr	ip, [fp, #-1688]	; 0xfffff968
   17b34:	b	16cf0 <processOptions@@Base+0x12c>
   17b38:	mov	r2, #0
   17b3c:	str	ip, [fp, #-1688]	; 0xfffff968
   17b40:	bl	16594 <cancelProcess@@Base+0x18>
   17b44:	ldr	ip, [fp, #-1688]	; 0xfffff968
   17b48:	b	17388 <processOptions@@Base+0x7c4>
   17b4c:	bl	1419c <__errno_location@plt>
   17b50:	ldr	r3, [r0]
   17b54:	cmp	r3, #2
   17b58:	bne	1741c <processOptions@@Base+0x858>
   17b5c:	b	17130 <processOptions@@Base+0x56c>
   17b60:	ldr	r2, [pc, #164]	; 17c0c <processOptions@@Base+0x1048>
   17b64:	mov	r3, ip
   17b68:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   17b6c:	mov	r1, #1
   17b70:	add	r2, pc, r2
   17b74:	bl	14004 <__fprintf_chk@plt>
   17b78:	b	17534 <processOptions@@Base+0x970>
   17b7c:	mov	r3, r2
   17b80:	b	17730 <processOptions@@Base+0xb6c>
   17b84:	ldr	r1, [pc, #132]	; 17c10 <processOptions@@Base+0x104c>
   17b88:	mov	r2, #5
   17b8c:	mov	r0, r7
   17b90:	add	r1, pc, r1
   17b94:	bl	13dd0 <dcgettext@plt>
   17b98:	mov	r2, r5
   17b9c:	mov	r1, r0
   17ba0:	mov	r0, #3
   17ba4:	bl	1825c <logMessage@@Base>
   17ba8:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   17bac:	orr	r3, r3, #2
   17bb0:	strb	r3, [fp, #-1324]	; 0xfffffad4
   17bb4:	b	17120 <processOptions@@Base+0x55c>
   17bb8:	andeq	r8, r1, ip, lsl r4
   17bbc:	andeq	r0, r0, ip, ror #4
   17bc0:			; <UNDEFINED> instruction: 0x000069b4
   17bc4:	andeq	r6, r0, r4, lsr #19
   17bc8:	andeq	r0, r0, r8, lsl #5
   17bcc:	andeq	r0, r0, ip, asr r2
   17bd0:			; <UNDEFINED> instruction: 0x000067b4
   17bd4:			; <UNDEFINED> instruction: 0x000067b4
   17bd8:	andeq	r6, r0, ip, lsr #15
   17bdc:	muleq	r0, r4, r7
   17be0:	andeq	r6, r0, ip, lsr #21
   17be4:			; <UNDEFINED> instruction: 0xfffff85c
   17be8:	andeq	r0, r0, r4, asr r2
   17bec:	andeq	r0, r0, r4, lsl #5
   17bf0:	andeq	r0, r0, ip, ror r2
   17bf4:	andeq	r6, r0, r0, asr #3
   17bf8:	andeq	r0, r0, r8, ror r2
   17bfc:	strdeq	r6, [r0], -ip
   17c00:	muleq	r0, r4, r8
   17c04:	strdeq	r5, [r0], -r8
   17c08:	andeq	r5, r0, r8, lsl #27
   17c0c:	andeq	r5, r0, ip, ror lr
   17c10:	andeq	r5, r0, ip, lsr #22
   17c14:	andeq	r5, r0, r8, ror sl
   17c18:	andeq	r5, r0, r8, lsr sl
   17c1c:	andeq	r5, r0, r8, asr #20
   17c20:	ldr	r0, [pc, #-20]	; 17c14 <processOptions@@Base+0x1050>
   17c24:	mov	r1, #1
   17c28:	ldr	r3, [fp, #-1632]	; 0xfffff9a0
   17c2c:	mov	r2, #2
   17c30:	add	r0, pc, r0
   17c34:	bl	13f74 <fwrite@plt>
   17c38:	ldr	r1, [pc, #-40]	; 17c18 <processOptions@@Base+0x1054>
   17c3c:	mov	r2, #5
   17c40:	mov	r0, #0
   17c44:	add	r1, pc, r1
   17c48:	bl	13dd0 <dcgettext@plt>
   17c4c:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   17c50:	bl	141e4 <fputs@plt>
   17c54:	ldr	r0, [pc, #-64]	; 17c1c <processOptions@@Base+0x1058>
   17c58:	mov	r1, #1
   17c5c:	mov	r2, #5
   17c60:	ldr	r3, [fp, #-1632]	; 0xfffff9a0
   17c64:	add	r0, pc, r0
   17c68:	bl	13f74 <fwrite@plt>
   17c6c:	b	1751c <processOptions@@Base+0x958>
   17c70:	ldr	r7, [fp, #-1664]	; 0xfffff980
   17c74:	b	16dcc <processOptions@@Base+0x208>
   17c78:	bl	18368 <logMallocError@@Base>
   17c7c:	b	17128 <processOptions@@Base+0x564>
   17c80:	str	r6, [fp, #-1656]	; 0xfffff988
   17c84:	mov	r4, r6
   17c88:	b	174d4 <processOptions@@Base+0x910>
   17c8c:	mov	r0, r4
   17c90:	bl	13c68 <getenv@plt>
   17c94:	cmp	r0, #0
   17c98:	bne	17a48 <processOptions@@Base+0xe84>
   17c9c:	b	16fc8 <processOptions@@Base+0x404>
   17ca0:	ldr	r4, [r6]
   17ca4:	ldr	r1, [sl]
   17ca8:	b	16f34 <processOptions@@Base+0x370>
   17cac:	bl	13fec <__stack_chk_fail@plt>
   17cb0:	push	{r4, r5, r6, r7, r8, r9, lr}
   17cb4:	sub	sp, sp, #12
   17cb8:	ldr	ip, [r2]
   17cbc:	add	r6, r0, r1
   17cc0:	ldr	r3, [pc, #140]	; 17d54 <processOptions@@Base+0x1190>
   17cc4:	rsb	r1, r0, r6
   17cc8:	ldr	r5, [r2, #4]
   17ccc:	mov	r9, r0
   17cd0:	ldr	r7, [r2, #8]
   17cd4:	add	r3, pc, r3
   17cd8:	str	ip, [sp, #4]
   17cdc:	mov	r2, #1
   17ce0:	str	r3, [sp]
   17ce4:	mvn	r3, #0
   17ce8:	bl	13f44 <__snprintf_chk@plt>
   17cec:	add	r7, r5, r7
   17cf0:	add	r0, r9, r0
   17cf4:	cmp	r0, r6
   17cf8:	movcc	r4, r0
   17cfc:	movcs	r4, r6
   17d00:	cmp	r5, r7
   17d04:	bcs	17d48 <processOptions@@Base+0x1184>
   17d08:	ldr	r8, [pc, #72]	; 17d58 <processOptions@@Base+0x1194>
   17d0c:	add	r8, pc, r8
   17d10:	str	r8, [sp]
   17d14:	mov	r0, r4
   17d18:	ldrb	ip, [r5], #1
   17d1c:	rsb	r1, r4, r6
   17d20:	mov	r2, #1
   17d24:	mvn	r3, #0
   17d28:	str	ip, [sp, #4]
   17d2c:	bl	13f44 <__snprintf_chk@plt>
   17d30:	add	r0, r4, r0
   17d34:	cmp	r0, r6
   17d38:	movcc	r4, r0
   17d3c:	movcs	r4, r6
   17d40:	cmp	r5, r7
   17d44:	bne	17d10 <processOptions@@Base+0x114c>
   17d48:	rsb	r0, r9, r4
   17d4c:	add	sp, sp, #12
   17d50:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17d54:	andeq	r5, r0, r8, lsl #20
   17d58:	ldrdeq	r5, [r0], -r4
   17d5c:	push	{r4, r5, lr}
   17d60:	mov	ip, r2
   17d64:	ldr	r4, [r2, #4]
   17d68:	sub	sp, sp, #12
   17d6c:	ldr	lr, [ip]
   17d70:	mvn	r3, #0
   17d74:	mov	r2, #1
   17d78:	mov	r5, r1
   17d7c:	ldr	ip, [r4]
   17d80:	str	lr, [sp]
   17d84:	str	ip, [sp, #4]
   17d88:	bl	13efc <__vsnprintf_chk@plt>
   17d8c:	cmp	r0, #0
   17d90:	movlt	r0, #0
   17d94:	blt	17da0 <processOptions@@Base+0x11dc>
   17d98:	cmp	r0, r5
   17d9c:	movcs	r0, r5
   17da0:	add	sp, sp, #12
   17da4:	pop	{r4, r5, pc}

00017da8 <enableLogCategory@@Base>:
   17da8:	push	{r3, r4, r5, r6, r7, lr}
   17dac:	mov	r5, r0
   17db0:	ldr	r6, [pc, #104]	; 17e20 <enableLogCategory@@Base+0x78>
   17db4:	ldr	r4, [pc, #104]	; 17e24 <enableLogCategory@@Base+0x7c>
   17db8:	ldr	r7, [pc, #104]	; 17e28 <enableLogCategory@@Base+0x80>
   17dbc:	add	r6, pc, r6
   17dc0:	add	r4, pc, r4
   17dc4:	add	r6, r6, #56	; 0x38
   17dc8:	add	r7, pc, r7
   17dcc:	ldr	r1, [r4]
   17dd0:	mov	r0, r5
   17dd4:	cmp	r1, #0
   17dd8:	beq	17de8 <enableLogCategory@@Base+0x40>
   17ddc:	bl	13c8c <strcasecmp@plt>
   17de0:	cmp	r0, #0
   17de4:	beq	17dfc <enableLogCategory@@Base+0x54>
   17de8:	add	r4, r4, #8
   17dec:	cmp	r4, r6
   17df0:	bcc	17dcc <enableLogCategory@@Base+0x24>
   17df4:	mov	r0, #0
   17df8:	pop	{r3, r4, r5, r6, r7, pc}
   17dfc:	ldr	r2, [pc, #40]	; 17e2c <enableLogCategory@@Base+0x84>
   17e00:	mov	r3, #1
   17e04:	ldr	r1, [pc, #36]	; 17e30 <enableLogCategory@@Base+0x88>
   17e08:	mov	r0, r3
   17e0c:	add	r1, pc, r1
   17e10:	ldr	r2, [r7, r2]
   17e14:	rsb	r4, r1, r4
   17e18:	strb	r3, [r2, r4, asr #3]
   17e1c:	pop	{r3, r4, r5, r6, r7, pc}
   17e20:	andeq	r7, r1, r4, lsr #1
   17e24:	andeq	r7, r1, r0, lsr #1
   17e28:	andeq	r7, r1, r0, lsr r2
   17e2c:	andeq	r0, r0, r0, asr r2
   17e30:	andeq	r7, r1, r4, asr r0

00017e34 <setLogPrefix@@Base>:
   17e34:	ldr	r3, [pc, #16]	; 17e4c <setLogPrefix@@Base+0x18>
   17e38:	add	r3, pc, r3
   17e3c:	ldr	r2, [r3]
   17e40:	str	r0, [r3]
   17e44:	mov	r0, r2
   17e48:	bx	lr
   17e4c:			; <UNDEFINED> instruction: 0x0001b4b0

00017e50 <closeLogFile@@Base>:
   17e50:	push	{r4, lr}
   17e54:	ldr	r4, [pc, #28]	; 17e78 <closeLogFile@@Base+0x28>
   17e58:	add	r4, pc, r4
   17e5c:	ldr	r0, [r4, #4]
   17e60:	cmp	r0, #0
   17e64:	popeq	{r4, pc}
   17e68:	bl	13c50 <fclose@plt>
   17e6c:	mov	r3, #0
   17e70:	str	r3, [r4, #4]
   17e74:	pop	{r4, pc}
   17e78:	muleq	r1, r0, r4

00017e7c <openLogFile@@Base>:
   17e7c:	push	{r4, lr}
   17e80:	mov	r4, r0
   17e84:	bl	17e50 <closeLogFile@@Base>
   17e88:	ldr	r1, [pc, #24]	; 17ea8 <openLogFile@@Base+0x2c>
   17e8c:	mov	r0, r4
   17e90:	add	r1, pc, r1
   17e94:	bl	13cd4 <fopen@plt>
   17e98:	ldr	r3, [pc, #12]	; 17eac <openLogFile@@Base+0x30>
   17e9c:	add	r3, pc, r3
   17ea0:	str	r0, [r3, #4]
   17ea4:	pop	{r4, pc}
   17ea8:	andeq	r5, r0, r8, asr r8
   17eac:	andeq	fp, r1, ip, asr #8

00017eb0 <openSystemLog@@Base>:
   17eb0:	push	{r4, lr}
   17eb4:	ldr	r4, [pc, #44]	; 17ee8 <openSystemLog@@Base+0x38>
   17eb8:	add	r4, pc, r4
   17ebc:	ldr	r3, [r4, #8]
   17ec0:	cmp	r3, #0
   17ec4:	popne	{r4, pc}
   17ec8:	ldr	r0, [pc, #28]	; 17eec <openSystemLog@@Base+0x3c>
   17ecc:	mov	r1, #1
   17ed0:	mov	r2, #24
   17ed4:	add	r0, pc, r0
   17ed8:	bl	13df4 <openlog@plt>
   17edc:	mov	r3, #1
   17ee0:	str	r3, [r4, #8]
   17ee4:	pop	{r4, pc}
   17ee8:	andeq	fp, r1, r0, lsr r4
   17eec:	andeq	r5, r0, r8, lsr #10

00017ef0 <closeSystemLog@@Base>:
   17ef0:	push	{r4, lr}
   17ef4:	ldr	r4, [pc, #28]	; 17f18 <closeSystemLog@@Base+0x28>
   17ef8:	add	r4, pc, r4
   17efc:	ldr	r3, [r4, #8]
   17f00:	cmp	r3, #0
   17f04:	popeq	{r4, pc}
   17f08:	bl	14088 <closelog@plt>
   17f0c:	mov	r3, #0
   17f10:	str	r3, [r4, #8]
   17f14:	pop	{r4, pc}
   17f18:	strdeq	fp, [r1], -r0

00017f1c <logData@@Base>:
   17f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f20:	sub	sp, sp, #4160	; 0x1040
   17f24:	ldr	r4, [pc, #660]	; 181c0 <logData@@Base+0x2a4>
   17f28:	sub	sp, sp, #12
   17f2c:	ldr	r3, [pc, #656]	; 181c4 <logData@@Base+0x2a8>
   17f30:	mov	r5, r0
   17f34:	add	r4, pc, r4
   17f38:	mov	r8, r1
   17f3c:	ands	r0, r0, #128	; 0x80
   17f40:	add	r1, sp, #8192	; 0x2000
   17f44:	ldr	r3, [r4, r3]
   17f48:	mov	r9, r2
   17f4c:	str	r3, [sp, #12]
   17f50:	ldr	r3, [r3]
   17f54:	str	r3, [r1, #-4028]	; 0xfffff044
   17f58:	beq	17f94 <logData@@Base+0x78>
   17f5c:	ldr	r3, [pc, #612]	; 181c8 <logData@@Base+0x2ac>
   17f60:	and	r5, r5, #127	; 0x7f
   17f64:	ldr	r3, [r4, r3]
   17f68:	ldrb	r3, [r3, r5]
   17f6c:	cmp	r3, #0
   17f70:	beq	180b8 <logData@@Base+0x19c>
   17f74:	ldr	r2, [pc, #592]	; 181cc <logData@@Base+0x2b0>
   17f78:	ldr	r3, [pc, #592]	; 181d0 <logData@@Base+0x2b4>
   17f7c:	ldr	r2, [r4, r2]
   17f80:	add	r3, pc, r3
   17f84:	add	r5, r3, r5, lsl #3
   17f88:	ldr	r3, [r5, #4]
   17f8c:	ldrb	r5, [r2]
   17f90:	b	17f98 <logData@@Base+0x7c>
   17f94:	mov	r3, r0
   17f98:	ldr	r1, [pc, #564]	; 181d4 <logData@@Base+0x2b8>
   17f9c:	ldr	r2, [pc, #564]	; 181d8 <logData@@Base+0x2bc>
   17fa0:	ldr	r1, [r4, r1]
   17fa4:	ldr	r2, [r4, r2]
   17fa8:	ldrb	r7, [r1]
   17fac:	ldrb	r6, [r2]
   17fb0:	cmp	r7, r5
   17fb4:	movlt	r7, #0
   17fb8:	movge	r7, #1
   17fbc:	cmp	r6, r5
   17fc0:	movlt	r6, #0
   17fc4:	movge	r6, #1
   17fc8:	orrs	r2, r6, r7
   17fcc:	beq	180b8 <logData@@Base+0x19c>
   17fd0:	str	r3, [sp, #8]
   17fd4:	bl	1419c <__errno_location@plt>
   17fd8:	ldr	r3, [sp, #8]
   17fdc:	add	fp, sp, #72	; 0x48
   17fe0:	cmp	r3, #0
   17fe4:	ldr	ip, [r0]
   17fe8:	str	r0, [sp, #16]
   17fec:	str	ip, [sp, #20]
   17ff0:	beq	180dc <logData@@Base+0x1c0>
   17ff4:	sub	sl, fp, #4
   17ff8:	ldr	r2, [pc, #476]	; 181dc <logData@@Base+0x2c0>
   17ffc:	mov	r1, #4096	; 0x1000
   18000:	str	r3, [sp, #4]
   18004:	add	r2, pc, r2
   18008:	mov	r3, r1
   1800c:	str	r2, [sp]
   18010:	mov	r0, sl
   18014:	mov	r2, #1
   18018:	bl	13f44 <__snprintf_chk@plt>
   1801c:	add	r3, sl, #4096	; 0x1000
   18020:	add	r0, sl, r0
   18024:	cmp	r0, r3
   18028:	movcs	r0, r3
   1802c:	add	r1, sl, #4096	; 0x1000
   18030:	mov	r2, r9
   18034:	rsb	r1, r0, r1
   18038:	blx	r8
   1803c:	cmp	r7, #0
   18040:	bne	180e8 <logData@@Base+0x1cc>
   18044:	cmp	r6, #0
   18048:	beq	180ac <logData@@Base+0x190>
   1804c:	ldr	r2, [pc, #396]	; 181e0 <logData@@Base+0x2c4>
   18050:	ldr	r3, [pc, #396]	; 181e4 <logData@@Base+0x2c8>
   18054:	add	r2, pc, r2
   18058:	ldr	r0, [r2]
   1805c:	ldr	r3, [r4, r3]
   18060:	cmp	r0, #0
   18064:	ldr	r4, [r3]
   18068:	beq	1808c <logData@@Base+0x170>
   1806c:	mov	r1, r4
   18070:	bl	141e4 <fputs@plt>
   18074:	ldr	r0, [pc, #364]	; 181e8 <logData@@Base+0x2cc>
   18078:	mov	r1, #1
   1807c:	mov	r2, #2
   18080:	add	r0, pc, r0
   18084:	mov	r3, r4
   18088:	bl	13f74 <fwrite@plt>
   1808c:	mov	r1, r4
   18090:	mov	r0, sl
   18094:	bl	141e4 <fputs@plt>
   18098:	mov	r0, #10
   1809c:	mov	r1, r4
   180a0:	bl	14028 <fputc@plt>
   180a4:	mov	r0, r4
   180a8:	bl	13e24 <fflush@plt>
   180ac:	ldr	ip, [sp, #20]
   180b0:	ldr	r1, [sp, #16]
   180b4:	str	ip, [r1]
   180b8:	ldr	ip, [sp, #12]
   180bc:	add	r3, sp, #8192	; 0x2000
   180c0:	ldr	r2, [r3, #-4028]	; 0xfffff044
   180c4:	ldr	r3, [ip]
   180c8:	cmp	r2, r3
   180cc:	bne	181bc <logData@@Base+0x2a0>
   180d0:	add	sp, sp, #4160	; 0x1040
   180d4:	add	sp, sp, #12
   180d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180dc:	add	sl, sp, #68	; 0x44
   180e0:	mov	r0, sl
   180e4:	b	1802c <logData@@Base+0x110>
   180e8:	ldr	r7, [pc, #252]	; 181ec <logData@@Base+0x2d0>
   180ec:	add	r7, pc, r7
   180f0:	ldr	r3, [r7, #4]
   180f4:	cmp	r3, #0
   180f8:	beq	1818c <logData@@Base+0x270>
   180fc:	sub	r8, fp, #44	; 0x2c
   18100:	sub	fp, fp, #36	; 0x24
   18104:	mov	r0, r8
   18108:	bl	1a324 <getCurrentTime@@Base>
   1810c:	add	ip, sp, #4160	; 0x1040
   18110:	add	ip, ip, #8
   18114:	movw	r3, #61396	; 0xefd4
   18118:	ldr	r2, [pc, #208]	; 181f0 <logData@@Base+0x2d4>
   1811c:	movt	r3, #65535	; 0xffff
   18120:	mov	r1, #32
   18124:	mov	r0, fp
   18128:	ldr	r3, [ip, r3]
   1812c:	add	r2, pc, r2
   18130:	bl	1a4e0 <formatSeconds@@Base>
   18134:	ldr	r2, [r8, #4]
   18138:	movw	lr, #56963	; 0xde83
   1813c:	movt	lr, #17179	; 0x431b
   18140:	smull	r1, lr, lr, r2
   18144:	asr	r8, r2, #31
   18148:	ldr	r2, [pc, #164]	; 181f4 <logData@@Base+0x2d8>
   1814c:	mov	r1, #1
   18150:	add	r2, pc, r2
   18154:	rsb	lr, r8, lr, asr #18
   18158:	mov	r3, r0
   1815c:	ldr	r0, [r7, #4]
   18160:	str	lr, [sp, #4]
   18164:	str	fp, [sp]
   18168:	bl	14004 <__fprintf_chk@plt>
   1816c:	ldr	r1, [r7, #4]
   18170:	mov	r0, sl
   18174:	bl	141e4 <fputs@plt>
   18178:	mov	r0, #10
   1817c:	ldr	r1, [r7, #4]
   18180:	bl	14028 <fputc@plt>
   18184:	ldr	r0, [r7, #4]
   18188:	bl	13e24 <fflush@plt>
   1818c:	ldr	r3, [pc, #100]	; 181f8 <logData@@Base+0x2dc>
   18190:	add	r3, pc, r3
   18194:	ldr	r3, [r3, #8]
   18198:	cmp	r3, #0
   1819c:	beq	18044 <logData@@Base+0x128>
   181a0:	ldr	r2, [pc, #84]	; 181fc <logData@@Base+0x2e0>
   181a4:	mov	r0, r5
   181a8:	mov	r1, #1
   181ac:	mov	r3, sl
   181b0:	add	r2, pc, r2
   181b4:	bl	13f50 <__syslog_chk@plt>
   181b8:	b	18044 <logData@@Base+0x128>
   181bc:	bl	13fec <__stack_chk_fail@plt>
   181c0:	andeq	r7, r1, r4, asr #1
   181c4:	andeq	r0, r0, ip, ror #4
   181c8:	andeq	r0, r0, r0, asr r2
   181cc:	andeq	r0, r0, ip, asr #4
   181d0:	andeq	r6, r1, r0, ror #29
   181d4:	andeq	r0, r0, r4, ror r2
   181d8:	andeq	r0, r0, r4, ror #4
   181dc:	andeq	r5, r0, r8, ror #13
   181e0:	muleq	r1, r4, r2
   181e4:	andeq	r0, r0, r0, lsl #5
   181e8:	muleq	r0, r4, r6
   181ec:	strdeq	fp, [r1], -ip
   181f0:	andeq	r5, r0, r8, asr #11
   181f4:			; <UNDEFINED> instruction: 0x000055b8
   181f8:	andeq	fp, r1, r8, asr r1
   181fc:	andeq	r5, r0, r8, lsl #17

00018200 <vlogMessage@@Base>:
   18200:	ldr	r3, [pc, #72]	; 18250 <vlogMessage@@Base+0x50>
   18204:	ldr	ip, [pc, #72]	; 18254 <vlogMessage@@Base+0x54>
   18208:	add	r3, pc, r3
   1820c:	push	{r4, lr}
   18210:	sub	sp, sp, #16
   18214:	ldr	r4, [r3, ip]
   18218:	stmib	sp, {r1, r2}
   1821c:	add	r2, sp, #4
   18220:	ldr	r1, [pc, #48]	; 18258 <vlogMessage@@Base+0x58>
   18224:	ldr	r3, [r4]
   18228:	add	r1, pc, r1
   1822c:	str	r3, [sp, #12]
   18230:	bl	17f1c <logData@@Base>
   18234:	ldr	r2, [sp, #12]
   18238:	ldr	r3, [r4]
   1823c:	cmp	r2, r3
   18240:	bne	1824c <vlogMessage@@Base+0x4c>
   18244:	add	sp, sp, #16
   18248:	pop	{r4, pc}
   1824c:	bl	13fec <__stack_chk_fail@plt>
   18250:	strdeq	r6, [r1], -r0
   18254:	andeq	r0, r0, ip, ror #4
   18258:			; <UNDEFINED> instruction: 0xfffffb2c

0001825c <logMessage@@Base>:
   1825c:	push	{r1, r2, r3}
   18260:	ldr	r3, [pc, #84]	; 182bc <logMessage@@Base+0x60>
   18264:	push	{r4, lr}
   18268:	add	r3, pc, r3
   1826c:	ldr	lr, [pc, #76]	; 182c0 <logMessage@@Base+0x64>
   18270:	sub	sp, sp, #12
   18274:	add	r2, sp, #8
   18278:	add	ip, sp, #24
   1827c:	ldr	r1, [sp, #20]
   18280:	ldr	r4, [r3, lr]
   18284:	str	ip, [r2, #-8]!
   18288:	mov	r2, sp
   1828c:	ldr	r3, [r4]
   18290:	str	r3, [sp, #4]
   18294:	bl	18200 <vlogMessage@@Base>
   18298:	ldr	r2, [sp, #4]
   1829c:	ldr	r3, [r4]
   182a0:	cmp	r2, r3
   182a4:	bne	182b8 <logMessage@@Base+0x5c>
   182a8:	add	sp, sp, #12
   182ac:	pop	{r4, lr}
   182b0:	add	sp, sp, #12
   182b4:	bx	lr
   182b8:	bl	13fec <__stack_chk_fail@plt>
   182bc:	muleq	r1, r0, sp
   182c0:	andeq	r0, r0, ip, ror #4

000182c4 <logBytes@@Base>:
   182c4:	ldr	ip, [pc, #76]	; 18318 <logBytes@@Base+0x54>
   182c8:	push	{r4, lr}
   182cc:	add	ip, pc, ip
   182d0:	ldr	lr, [pc, #68]	; 1831c <logBytes@@Base+0x58>
   182d4:	sub	sp, sp, #16
   182d8:	ldr	r4, [ip, lr]
   182dc:	stm	sp, {r1, r2}
   182e0:	mov	r2, sp
   182e4:	ldr	r1, [pc, #52]	; 18320 <logBytes@@Base+0x5c>
   182e8:	ldr	ip, [r4]
   182ec:	add	r1, pc, r1
   182f0:	str	r3, [sp, #8]
   182f4:	str	ip, [sp, #12]
   182f8:	bl	17f1c <logData@@Base>
   182fc:	ldr	r2, [sp, #12]
   18300:	ldr	r3, [r4]
   18304:	cmp	r2, r3
   18308:	bne	18314 <logBytes@@Base+0x50>
   1830c:	add	sp, sp, #16
   18310:	pop	{r4, pc}
   18314:	bl	13fec <__stack_chk_fail@plt>
   18318:	andeq	r6, r1, ip, lsr #26
   1831c:	andeq	r0, r0, ip, ror #4
   18320:			; <UNDEFINED> instruction: 0xfffff9bc

00018324 <logSystemError@@Base>:
   18324:	push	{r4, r5, lr}
   18328:	sub	sp, sp, #12
   1832c:	mov	r5, r0
   18330:	bl	1419c <__errno_location@plt>
   18334:	ldr	r4, [r0]
   18338:	mov	r0, r4
   1833c:	bl	13b54 <strerror@plt>
   18340:	ldr	r1, [pc, #28]	; 18364 <logSystemError@@Base+0x40>
   18344:	mov	r3, r4
   18348:	mov	r2, r5
   1834c:	add	r1, pc, r1
   18350:	str	r0, [sp]
   18354:	mov	r0, #3
   18358:	bl	1825c <logMessage@@Base>
   1835c:	add	sp, sp, #12
   18360:	pop	{r4, r5, pc}
   18364:	andeq	r5, r0, ip, asr #7

00018368 <logMallocError@@Base>:
   18368:	ldr	r0, [pc, #4]	; 18374 <logMallocError@@Base+0xc>
   1836c:	add	r0, pc, r0
   18370:	b	18324 <logSystemError@@Base>
   18374:	andeq	r5, r0, r0, asr #7
   18378:	ldr	r3, [pc, #196]	; 18444 <logMallocError@@Base+0xdc>
   1837c:	push	{r4, r5, r6, r7, lr}
   18380:	add	r3, pc, r3
   18384:	mov	r6, r0
   18388:	ldr	r0, [pc, #184]	; 18448 <logMallocError@@Base+0xe0>
   1838c:	mov	r5, r1
   18390:	mov	r1, r3
   18394:	sub	sp, sp, #28
   18398:	mov	r3, #0
   1839c:	ldr	r7, [r1, r0]
   183a0:	add	r4, sp, #24
   183a4:	str	r3, [sp, #4]
   183a8:	str	r3, [sp, #8]
   183ac:	ldr	r1, [r7]
   183b0:	str	r3, [sp, #12]
   183b4:	str	r3, [sp, #16]
   183b8:	str	r1, [sp, #20]
   183bc:	strh	r2, [r4, #-20]!	; 0xffffffec
   183c0:	b	183d4 <logMallocError@@Base+0x6c>
   183c4:	bl	1419c <__errno_location@plt>
   183c8:	ldr	r3, [r0]
   183cc:	cmp	r3, #4
   183d0:	bne	1840c <logMallocError@@Base+0xa4>
   183d4:	mov	r0, r6
   183d8:	mov	r1, r5
   183dc:	mov	r2, r4
   183e0:	bl	14094 <fcntl@plt>
   183e4:	cmn	r0, #1
   183e8:	beq	183c4 <logMallocError@@Base+0x5c>
   183ec:	mov	r3, #1
   183f0:	ldr	r2, [sp, #20]
   183f4:	mov	r0, r3
   183f8:	ldr	r3, [r7]
   183fc:	cmp	r2, r3
   18400:	bne	18440 <logMallocError@@Base+0xd8>
   18404:	add	sp, sp, #28
   18408:	pop	{r4, r5, r6, r7, pc}
   1840c:	cmp	r3, #13
   18410:	moveq	r2, #11
   18414:	moveq	r3, #0
   18418:	streq	r2, [r0]
   1841c:	beq	183f0 <logMallocError@@Base+0x88>
   18420:	cmp	r3, #11
   18424:	moveq	r3, #0
   18428:	beq	183f0 <logMallocError@@Base+0x88>
   1842c:	ldr	r0, [pc, #24]	; 1844c <logMallocError@@Base+0xe4>
   18430:	add	r0, pc, r0
   18434:	bl	18324 <logSystemError@@Base>
   18438:	mov	r3, #0
   1843c:	b	183f0 <logMallocError@@Base+0x88>
   18440:	bl	13fec <__stack_chk_fail@plt>
   18444:	andeq	r6, r1, r8, ror ip
   18448:	andeq	r0, r0, ip, ror #4
   1844c:	andeq	r5, r0, r0, lsl #8

00018450 <isPathDelimiter@@Base>:
   18450:	subs	r3, r0, #47	; 0x2f
   18454:	rsbs	r0, r3, #0
   18458:	adcs	r0, r0, r3
   1845c:	bx	lr

00018460 <isAbsolutePath@@Base>:
   18460:	push	{r3, lr}
   18464:	ldrb	r0, [r0]
   18468:	bl	18450 <isPathDelimiter@@Base>
   1846c:	adds	r0, r0, #0
   18470:	movne	r0, #1
   18474:	pop	{r3, pc}

00018478 <getPathDirectory@@Base>:
   18478:	push	{r4, r5, r6, r7, r8, lr}
   1847c:	mov	r8, r0
   18480:	bl	13e48 <strlen@plt>
   18484:	subs	r7, r0, #0
   18488:	addne	r6, r8, r7
   1848c:	movne	r5, r7
   18490:	bne	184a4 <getPathDirectory@@Base+0x2c>
   18494:	b	184e4 <getPathDirectory@@Base+0x6c>
   18498:	cmp	r4, #0
   1849c:	mov	r5, r4
   184a0:	beq	18514 <getPathDirectory@@Base+0x9c>
   184a4:	ldrb	r0, [r6, #-1]!
   184a8:	sub	r4, r5, #1
   184ac:	bl	18450 <isPathDelimiter@@Base>
   184b0:	cmp	r0, #0
   184b4:	bne	18498 <getPathDirectory@@Base+0x20>
   184b8:	add	r6, r8, r5
   184bc:	b	184d4 <getPathDirectory@@Base+0x5c>
   184c0:	ldrb	r0, [r6, #-2]
   184c4:	sub	r6, r6, #1
   184c8:	bl	18450 <isPathDelimiter@@Base>
   184cc:	cmp	r0, #0
   184d0:	bne	18540 <getPathDirectory@@Base+0xc8>
   184d4:	cmp	r4, #0
   184d8:	mov	r5, r4
   184dc:	sub	r4, r4, #1
   184e0:	bne	184c0 <getPathDirectory@@Base+0x48>
   184e4:	mov	r0, #2
   184e8:	ldr	r8, [pc, #124]	; 1856c <getPathDirectory@@Base+0xf4>
   184ec:	bl	13fbc <malloc@plt>
   184f0:	mov	r7, #1
   184f4:	add	r8, pc, r8
   184f8:	subs	r4, r0, #0
   184fc:	bne	18524 <getPathDirectory@@Base+0xac>
   18500:	bl	18368 <logMallocError@@Base>
   18504:	mov	r0, r4
   18508:	pop	{r4, r5, r6, r7, r8, pc}
   1850c:	mov	r5, r6
   18510:	mov	r7, r5
   18514:	add	r0, r7, #1
   18518:	bl	13fbc <malloc@plt>
   1851c:	subs	r4, r0, #0
   18520:	beq	18500 <getPathDirectory@@Base+0x88>
   18524:	mov	r1, r8
   18528:	mov	r2, r7
   1852c:	bl	13e84 <memcpy@plt>
   18530:	mov	r3, #0
   18534:	mov	r0, r4
   18538:	strb	r3, [r4, r7]
   1853c:	pop	{r4, r5, r6, r7, r8, pc}
   18540:	add	r7, r8, r5
   18544:	mov	r6, r5
   18548:	ldrb	r0, [r7, #-1]!
   1854c:	sub	r4, r6, #1
   18550:	bl	18450 <isPathDelimiter@@Base>
   18554:	cmp	r0, #0
   18558:	beq	1850c <getPathDirectory@@Base+0x94>
   1855c:	cmp	r4, #0
   18560:	mov	r6, r4
   18564:	bne	18548 <getPathDirectory@@Base+0xd0>
   18568:	b	18510 <getPathDirectory@@Base+0x98>
   1856c:	andeq	r4, r0, r4, lsl #30

00018570 <locatePathName@@Base>:
   18570:	push	{r4, r5, r6, lr}
   18574:	mov	r6, r0
   18578:	bl	13e48 <strlen@plt>
   1857c:	add	r4, r6, r0
   18580:	cmp	r6, r4
   18584:	beq	185b0 <locatePathName@@Base+0x40>
   18588:	mov	r5, r4
   1858c:	b	18598 <locatePathName@@Base+0x28>
   18590:	cmp	r6, r5
   18594:	beq	185b8 <locatePathName@@Base+0x48>
   18598:	mov	r4, r5
   1859c:	sub	r5, r5, #1
   185a0:	ldrb	r0, [r4, #-1]
   185a4:	bl	18450 <isPathDelimiter@@Base>
   185a8:	cmp	r0, #0
   185ac:	beq	18590 <locatePathName@@Base+0x20>
   185b0:	mov	r0, r4
   185b4:	pop	{r4, r5, r6, pc}
   185b8:	mov	r4, r6
   185bc:	mov	r0, r4
   185c0:	pop	{r4, r5, r6, pc}

000185c4 <locatePathExtension@@Base>:
   185c4:	push	{r3, lr}
   185c8:	bl	18570 <locatePathName@@Base>
   185cc:	mov	r1, #46	; 0x2e
   185d0:	pop	{r3, lr}
   185d4:	b	13cf8 <strrchr@plt>

000185d8 <isExplicitPath@@Base>:
   185d8:	push	{r4, lr}
   185dc:	mov	r4, r0
   185e0:	bl	18570 <locatePathName@@Base>
   185e4:	subs	r0, r4, r0
   185e8:	movne	r0, #1
   185ec:	pop	{r4, pc}

000185f0 <makePath@@Base>:
   185f0:	ldr	r3, [pc, #192]	; 186b8 <makePath@@Base+0xc8>
   185f4:	ldr	r2, [pc, #192]	; 186bc <makePath@@Base+0xcc>
   185f8:	add	r3, pc, r3
   185fc:	push	{r4, r5, lr}
   18600:	sub	sp, sp, #20
   18604:	ldr	r4, [r3, r2]
   18608:	mov	r5, r0
   1860c:	mov	r0, r1
   18610:	str	r1, [sp, #8]
   18614:	ldr	r3, [r4]
   18618:	str	r3, [sp, #12]
   1861c:	bl	18460 <isAbsolutePath@@Base>
   18620:	cmp	r0, #0
   18624:	bne	1863c <makePath@@Base+0x4c>
   18628:	cmp	r5, #0
   1862c:	beq	1863c <makePath@@Base+0x4c>
   18630:	ldrb	r3, [r5]
   18634:	cmp	r3, #0
   18638:	bne	18664 <makePath@@Base+0x74>
   1863c:	mov	r1, #1
   18640:	mov	r3, #8
   18644:	add	r0, sp, r3
   18648:	bl	198f8 <joinStrings@@Base>
   1864c:	ldr	r2, [sp, #12]
   18650:	ldr	r3, [r4]
   18654:	cmp	r2, r3
   18658:	bne	186b0 <makePath@@Base+0xc0>
   1865c:	add	sp, sp, #20
   18660:	pop	{r4, r5, pc}
   18664:	mov	r0, r5
   18668:	bl	13e48 <strlen@plt>
   1866c:	add	r0, r5, r0
   18670:	ldrb	r0, [r0, #-1]
   18674:	bl	18450 <isPathDelimiter@@Base>
   18678:	cmp	r0, #0
   1867c:	movne	r1, #2
   18680:	movne	r3, #1
   18684:	bne	1869c <makePath@@Base+0xac>
   18688:	ldr	r2, [pc, #48]	; 186c0 <makePath@@Base+0xd0>
   1868c:	mov	r3, r0
   18690:	mov	r1, #3
   18694:	add	r2, pc, r2
   18698:	str	r2, [sp, #4]
   1869c:	lsl	r3, r3, #2
   186a0:	add	r0, sp, #16
   186a4:	add	r2, r0, r3
   186a8:	str	r5, [r2, #-16]
   186ac:	b	18644 <makePath@@Base+0x54>
   186b0:	bl	13fec <__stack_chk_fail@plt>
   186b4:	bl	14160 <_Unwind_Resume@plt>
   186b8:	andeq	r6, r1, r0, lsl #20
   186bc:	andeq	r0, r0, ip, ror #4
   186c0:			; <UNDEFINED> instruction: 0x000051b4

000186c4 <ensureFileExtension@@Base>:
   186c4:	ldr	r3, [pc, #144]	; 1875c <ensureFileExtension@@Base+0x98>
   186c8:	ldr	r2, [pc, #144]	; 18760 <ensureFileExtension@@Base+0x9c>
   186cc:	add	r3, pc, r3
   186d0:	push	{r4, r5, r6, r7, lr}
   186d4:	sub	sp, sp, #20
   186d8:	ldr	r4, [r3, r2]
   186dc:	mov	r5, r1
   186e0:	mov	r6, r0
   186e4:	ldr	r3, [r4]
   186e8:	str	r3, [sp, #12]
   186ec:	bl	13e48 <strlen@plt>
   186f0:	mov	r7, r0
   186f4:	mov	r0, r5
   186f8:	bl	13e48 <strlen@plt>
   186fc:	str	r6, [sp, #4]
   18700:	cmp	r0, #0
   18704:	beq	18734 <ensureFileExtension@@Base+0x70>
   18708:	cmp	r7, r0
   1870c:	bcs	1871c <ensureFileExtension@@Base+0x58>
   18710:	str	r5, [sp, #8]
   18714:	mov	r1, #2
   18718:	b	18738 <ensureFileExtension@@Base+0x74>
   1871c:	rsb	r0, r0, r7
   18720:	mov	r1, r5
   18724:	add	r0, r6, r0
   18728:	bl	14184 <strcmp@plt>
   1872c:	cmp	r0, #0
   18730:	bne	18710 <ensureFileExtension@@Base+0x4c>
   18734:	mov	r1, #1
   18738:	add	r0, sp, #4
   1873c:	bl	198f8 <joinStrings@@Base>
   18740:	ldr	r2, [sp, #12]
   18744:	ldr	r3, [r4]
   18748:	cmp	r2, r3
   1874c:	bne	18758 <ensureFileExtension@@Base+0x94>
   18750:	add	sp, sp, #20
   18754:	pop	{r4, r5, r6, r7, pc}
   18758:	bl	13fec <__stack_chk_fail@plt>
   1875c:	andeq	r6, r1, ip, lsr #18
   18760:	andeq	r0, r0, ip, ror #4

00018764 <makeFilePath@@Base>:
   18764:	push	{r3, r4, r5, lr}
   18768:	mov	r5, r0
   1876c:	mov	r0, r1
   18770:	mov	r1, r2
   18774:	bl	186c4 <ensureFileExtension@@Base>
   18778:	subs	r4, r0, #0
   1877c:	beq	187a0 <makeFilePath@@Base+0x3c>
   18780:	mov	r0, r5
   18784:	mov	r1, r4
   18788:	bl	185f0 <makePath@@Base>
   1878c:	mov	r5, r0
   18790:	mov	r0, r4
   18794:	bl	13da0 <free@plt>
   18798:	mov	r0, r5
   1879c:	pop	{r3, r4, r5, pc}
   187a0:	mov	r5, r4
   187a4:	b	18798 <makeFilePath@@Base+0x34>

000187a8 <testPath@@Base>:
   187a8:	push	{r3, lr}
   187ac:	mov	r1, #0
   187b0:	bl	13ddc <access@plt>
   187b4:	adds	r0, r0, #1
   187b8:	movne	r0, #1
   187bc:	pop	{r3, pc}

000187c0 <testFilePath@@Base>:
   187c0:	ldr	r3, [pc, #120]	; 18840 <testFilePath@@Base+0x80>
   187c4:	mov	r1, r0
   187c8:	ldr	ip, [pc, #116]	; 18844 <testFilePath@@Base+0x84>
   187cc:	mov	r0, #3
   187d0:	add	r3, pc, r3
   187d4:	push	{r4, lr}
   187d8:	sub	sp, sp, #96	; 0x60
   187dc:	ldr	r4, [r3, ip]
   187e0:	mov	r2, sp
   187e4:	ldr	r3, [r4]
   187e8:	str	r3, [sp, #92]	; 0x5c
   187ec:	bl	13bd8 <__xstat@plt>
   187f0:	cmn	r0, #1
   187f4:	moveq	r3, #0
   187f8:	beq	18820 <testFilePath@@Base+0x60>
   187fc:	ldr	r3, [sp, #16]
   18800:	and	r3, r3, #61440	; 0xf000
   18804:	cmp	r3, #32768	; 0x8000
   18808:	moveq	r3, #1
   1880c:	beq	18820 <testFilePath@@Base+0x60>
   18810:	bl	1419c <__errno_location@plt>
   18814:	mov	r3, #0
   18818:	mov	r2, #17
   1881c:	str	r2, [r0]
   18820:	ldr	r2, [sp, #92]	; 0x5c
   18824:	mov	r0, r3
   18828:	ldr	r3, [r4]
   1882c:	cmp	r2, r3
   18830:	bne	1883c <testFilePath@@Base+0x7c>
   18834:	add	sp, sp, #96	; 0x60
   18838:	pop	{r4, pc}
   1883c:	bl	13fec <__stack_chk_fail@plt>
   18840:	andeq	r6, r1, r8, lsr #16
   18844:	andeq	r0, r0, ip, ror #4

00018848 <testProgramPath@@Base>:
   18848:	push	{r3, lr}
   1884c:	mov	r1, #1
   18850:	bl	13ddc <access@plt>
   18854:	adds	r0, r0, #1
   18858:	movne	r0, #1
   1885c:	pop	{r3, pc}

00018860 <testDirectoryPath@@Base>:
   18860:	ldr	r3, [pc, #120]	; 188e0 <testDirectoryPath@@Base+0x80>
   18864:	mov	r1, r0
   18868:	ldr	ip, [pc, #116]	; 188e4 <testDirectoryPath@@Base+0x84>
   1886c:	mov	r0, #3
   18870:	add	r3, pc, r3
   18874:	push	{r4, lr}
   18878:	sub	sp, sp, #96	; 0x60
   1887c:	ldr	r4, [r3, ip]
   18880:	mov	r2, sp
   18884:	ldr	r3, [r4]
   18888:	str	r3, [sp, #92]	; 0x5c
   1888c:	bl	13bd8 <__xstat@plt>
   18890:	cmn	r0, #1
   18894:	moveq	r3, #0
   18898:	beq	188c0 <testDirectoryPath@@Base+0x60>
   1889c:	ldr	r3, [sp, #16]
   188a0:	and	r3, r3, #61440	; 0xf000
   188a4:	cmp	r3, #16384	; 0x4000
   188a8:	moveq	r3, #1
   188ac:	beq	188c0 <testDirectoryPath@@Base+0x60>
   188b0:	bl	1419c <__errno_location@plt>
   188b4:	mov	r3, #0
   188b8:	mov	r2, #17
   188bc:	str	r2, [r0]
   188c0:	ldr	r2, [sp, #92]	; 0x5c
   188c4:	mov	r0, r3
   188c8:	ldr	r3, [r4]
   188cc:	cmp	r2, r3
   188d0:	bne	188dc <testDirectoryPath@@Base+0x7c>
   188d4:	add	sp, sp, #96	; 0x60
   188d8:	pop	{r4, pc}
   188dc:	bl	13fec <__stack_chk_fail@plt>
   188e0:	andeq	r6, r1, r8, lsl #15
   188e4:	andeq	r0, r0, ip, ror #4

000188e8 <createDirectory@@Base>:
   188e8:	push	{r4, r5, lr}
   188ec:	movw	r1, #493	; 0x1ed
   188f0:	sub	sp, sp, #12
   188f4:	mov	r4, r0
   188f8:	bl	13b84 <mkdir@plt>
   188fc:	cmn	r0, #1
   18900:	movne	r0, #1
   18904:	beq	18910 <createDirectory@@Base+0x28>
   18908:	add	sp, sp, #12
   1890c:	pop	{r4, r5, pc}
   18910:	ldr	r1, [pc, #68]	; 1895c <createDirectory@@Base+0x74>
   18914:	mov	r2, #5
   18918:	mov	r0, #0
   1891c:	add	r1, pc, r1
   18920:	bl	13dd0 <dcgettext@plt>
   18924:	mov	r5, r0
   18928:	bl	1419c <__errno_location@plt>
   1892c:	ldr	r0, [r0]
   18930:	bl	13b54 <strerror@plt>
   18934:	ldr	r1, [pc, #36]	; 18960 <createDirectory@@Base+0x78>
   18938:	mov	r2, r5
   1893c:	mov	r3, r4
   18940:	add	r1, pc, r1
   18944:	str	r0, [sp]
   18948:	mov	r0, #4
   1894c:	bl	1825c <logMessage@@Base>
   18950:	mov	r0, #0
   18954:	add	sp, sp, #12
   18958:	pop	{r4, r5, pc}
   1895c:	andeq	r4, r0, r0, lsr pc
   18960:	strdeq	r4, [r0], -r0

00018964 <ensureDirectory@@Base>:
   18964:	push	{r3, r4, r5, r6, r7, lr}
   18968:	mov	r5, r0
   1896c:	bl	18860 <testDirectoryPath@@Base>
   18970:	subs	r4, r0, #0
   18974:	movne	r4, #1
   18978:	bne	189b0 <ensureDirectory@@Base+0x4c>
   1897c:	bl	1419c <__errno_location@plt>
   18980:	ldr	r0, [r0]
   18984:	cmp	r0, #17
   18988:	beq	18a0c <ensureDirectory@@Base+0xa8>
   1898c:	cmp	r0, #2
   18990:	beq	189b8 <ensureDirectory@@Base+0x54>
   18994:	bl	13b54 <strerror@plt>
   18998:	ldr	r1, [pc, #132]	; 18a24 <ensureDirectory@@Base+0xc0>
   1899c:	mov	r2, r5
   189a0:	add	r1, pc, r1
   189a4:	mov	r3, r0
   189a8:	mov	r0, #3
   189ac:	bl	1825c <logMessage@@Base>
   189b0:	mov	r0, r4
   189b4:	pop	{r3, r4, r5, r6, r7, pc}
   189b8:	mov	r0, r5
   189bc:	bl	18478 <getPathDirectory@@Base>
   189c0:	subs	r6, r0, #0
   189c4:	beq	189b0 <ensureDirectory@@Base+0x4c>
   189c8:	bl	18964 <ensureDirectory@@Base>
   189cc:	mov	r7, r0
   189d0:	mov	r0, r6
   189d4:	bl	13da0 <free@plt>
   189d8:	cmp	r7, #0
   189dc:	beq	189b0 <ensureDirectory@@Base+0x4c>
   189e0:	mov	r0, r5
   189e4:	bl	188e8 <createDirectory@@Base>
   189e8:	cmp	r0, #0
   189ec:	beq	189b0 <ensureDirectory@@Base+0x4c>
   189f0:	ldr	r1, [pc, #48]	; 18a28 <ensureDirectory@@Base+0xc4>
   189f4:	mov	r2, r5
   189f8:	mov	r0, #5
   189fc:	mov	r4, #1
   18a00:	add	r1, pc, r1
   18a04:	bl	1825c <logMessage@@Base>
   18a08:	b	189b0 <ensureDirectory@@Base+0x4c>
   18a0c:	ldr	r1, [pc, #24]	; 18a2c <ensureDirectory@@Base+0xc8>
   18a10:	mov	r2, r5
   18a14:	mov	r0, #3
   18a18:	add	r1, pc, r1
   18a1c:	bl	1825c <logMessage@@Base>
   18a20:	b	189b0 <ensureDirectory@@Base+0x4c>
   18a24:	ldrdeq	r4, [r0], -r8
   18a28:	muleq	r0, r8, lr
   18a2c:	andeq	r4, r0, ip, asr #28

00018a30 <getWritableDirectory@@Base>:
   18a30:	ldr	r3, [pc, #64]	; 18a78 <getWritableDirectory@@Base+0x48>
   18a34:	ldr	r2, [pc, #64]	; 18a7c <getWritableDirectory@@Base+0x4c>
   18a38:	add	r3, pc, r3
   18a3c:	push	{r4, lr}
   18a40:	ldr	r4, [r3, r2]
   18a44:	ldr	r0, [r4]
   18a48:	cmp	r0, #0
   18a4c:	beq	18a70 <getWritableDirectory@@Base+0x40>
   18a50:	ldrb	r3, [r0]
   18a54:	cmp	r3, #0
   18a58:	beq	18a70 <getWritableDirectory@@Base+0x40>
   18a5c:	bl	18964 <ensureDirectory@@Base>
   18a60:	cmp	r0, #0
   18a64:	beq	18a70 <getWritableDirectory@@Base+0x40>
   18a68:	ldr	r0, [r4]
   18a6c:	pop	{r4, pc}
   18a70:	mov	r0, #0
   18a74:	pop	{r4, pc}
   18a78:	andeq	r6, r1, r0, asr #11
   18a7c:	muleq	r0, r0, r2

00018a80 <makeWritablePath@@Base>:
   18a80:	push	{r4, lr}
   18a84:	mov	r4, r0
   18a88:	bl	18a30 <getWritableDirectory@@Base>
   18a8c:	cmp	r0, #0
   18a90:	popeq	{r4, pc}
   18a94:	mov	r1, r4
   18a98:	pop	{r4, lr}
   18a9c:	b	185f0 <makePath@@Base>

00018aa0 <getWorkingDirectory@@Base>:
   18aa0:	push	{r3, r4, r5, r6, r7, lr}
   18aa4:	mov	r5, #0
   18aa8:	mov	r4, #128	; 0x80
   18aac:	b	18ad4 <getWorkingDirectory@@Base+0x34>
   18ab0:	bl	14040 <getcwd@plt>
   18ab4:	mov	r5, r6
   18ab8:	cmp	r0, #0
   18abc:	bne	18b44 <getWorkingDirectory@@Base+0xa4>
   18ac0:	bl	1419c <__errno_location@plt>
   18ac4:	ldr	r3, [r0]
   18ac8:	mov	r7, r0
   18acc:	cmp	r3, #34	; 0x22
   18ad0:	bne	18b4c <getWorkingDirectory@@Base+0xac>
   18ad4:	lsl	r4, r4, #1
   18ad8:	mov	r0, r5
   18adc:	mov	r1, r4
   18ae0:	bl	1413c <realloc@plt>
   18ae4:	mov	r1, r4
   18ae8:	subs	r6, r0, #0
   18aec:	bne	18ab0 <getWorkingDirectory@@Base+0x10>
   18af0:	bl	18368 <logMallocError@@Base>
   18af4:	cmp	r5, #0
   18af8:	bne	18b64 <getWorkingDirectory@@Base+0xc4>
   18afc:	bl	1419c <__errno_location@plt>
   18b00:	mov	r7, r0
   18b04:	ldr	r1, [pc, #104]	; 18b74 <getWorkingDirectory@@Base+0xd4>
   18b08:	mov	r2, #5
   18b0c:	mov	r0, #0
   18b10:	add	r1, pc, r1
   18b14:	bl	13dd0 <dcgettext@plt>
   18b18:	mov	r4, r0
   18b1c:	ldr	r0, [r7]
   18b20:	bl	13b54 <strerror@plt>
   18b24:	ldr	r1, [pc, #76]	; 18b78 <getWorkingDirectory@@Base+0xd8>
   18b28:	mov	r2, r4
   18b2c:	add	r1, pc, r1
   18b30:	mov	r3, r0
   18b34:	mov	r0, #4
   18b38:	bl	1825c <logMessage@@Base>
   18b3c:	mov	r0, #0
   18b40:	pop	{r3, r4, r5, r6, r7, pc}
   18b44:	mov	r0, r6
   18b48:	pop	{r3, r4, r5, r6, r7, pc}
   18b4c:	ldr	r0, [pc, #40]	; 18b7c <getWorkingDirectory@@Base+0xdc>
   18b50:	add	r0, pc, r0
   18b54:	bl	18324 <logSystemError@@Base>
   18b58:	mov	r0, r6
   18b5c:	bl	13da0 <free@plt>
   18b60:	b	18b04 <getWorkingDirectory@@Base+0x64>
   18b64:	bl	1419c <__errno_location@plt>
   18b68:	mov	r6, r5
   18b6c:	mov	r7, r0
   18b70:	b	18b58 <getWorkingDirectory@@Base+0xb8>
   18b74:	andeq	r4, r0, r8, lsr #27
   18b78:	andeq	r5, r0, r4, lsl #4
   18b7c:	andeq	r4, r0, r0, ror #26

00018b80 <setWorkingDirectory@@Base>:
   18b80:	push	{r4, r5, lr}
   18b84:	sub	sp, sp, #12
   18b88:	mov	r4, r0
   18b8c:	bl	13ff8 <chdir@plt>
   18b90:	cmn	r0, #1
   18b94:	movne	r0, #1
   18b98:	beq	18ba4 <setWorkingDirectory@@Base+0x24>
   18b9c:	add	sp, sp, #12
   18ba0:	pop	{r4, r5, pc}
   18ba4:	ldr	r1, [pc, #68]	; 18bf0 <setWorkingDirectory@@Base+0x70>
   18ba8:	mov	r2, #5
   18bac:	mov	r0, #0
   18bb0:	add	r1, pc, r1
   18bb4:	bl	13dd0 <dcgettext@plt>
   18bb8:	mov	r5, r0
   18bbc:	bl	1419c <__errno_location@plt>
   18bc0:	ldr	r0, [r0]
   18bc4:	bl	13b54 <strerror@plt>
   18bc8:	ldr	r1, [pc, #36]	; 18bf4 <setWorkingDirectory@@Base+0x74>
   18bcc:	mov	r2, r5
   18bd0:	mov	r3, r4
   18bd4:	add	r1, pc, r1
   18bd8:	str	r0, [sp]
   18bdc:	mov	r0, #4
   18be0:	bl	1825c <logMessage@@Base>
   18be4:	mov	r0, #0
   18be8:	add	sp, sp, #12
   18bec:	pop	{r4, r5, pc}
   18bf0:	andeq	r4, r0, r8, lsr #26
   18bf4:	andeq	r4, r0, ip, asr r9

00018bf8 <getHomeDirectory@@Base>:
   18bf8:	ldr	r0, [pc, #80]	; 18c50 <getHomeDirectory@@Base+0x58>
   18bfc:	push	{lr}		; (str lr, [sp, #-4]!)
   18c00:	add	r0, pc, r0
   18c04:	sub	sp, sp, #12
   18c08:	bl	13c68 <getenv@plt>
   18c0c:	subs	r3, r0, #0
   18c10:	beq	18c34 <getHomeDirectory@@Base+0x3c>
   18c14:	ldrb	r3, [r3]
   18c18:	cmp	r3, #0
   18c1c:	beq	18c34 <getHomeDirectory@@Base+0x3c>
   18c20:	bl	14154 <__strdup@plt>
   18c24:	cmp	r0, #0
   18c28:	beq	18c40 <getHomeDirectory@@Base+0x48>
   18c2c:	add	sp, sp, #12
   18c30:	pop	{pc}		; (ldr pc, [sp], #4)
   18c34:	mov	r0, r3
   18c38:	add	sp, sp, #12
   18c3c:	pop	{pc}		; (ldr pc, [sp], #4)
   18c40:	str	r0, [sp, #4]
   18c44:	bl	18368 <logMallocError@@Base>
   18c48:	ldr	r0, [sp, #4]
   18c4c:	b	18c2c <getHomeDirectory@@Base+0x34>
   18c50:	strdeq	r4, [r0], -r8

00018c54 <getOverrideDirectory@@Base>:
   18c54:	push	{r4, r5, r6, lr}
   18c58:	ldr	r4, [pc, #208]	; 18d30 <getOverrideDirectory@@Base+0xdc>
   18c5c:	add	r4, pc, r4
   18c60:	ldr	r0, [r4]
   18c64:	cmp	r0, #0
   18c68:	beq	18c7c <getOverrideDirectory@@Base+0x28>
   18c6c:	ldrb	r3, [r0]
   18c70:	cmp	r3, #0
   18c74:	moveq	r0, #0
   18c78:	pop	{r4, r5, r6, pc}
   18c7c:	bl	18bf8 <getHomeDirectory@@Base>
   18c80:	subs	r6, r0, #0
   18c84:	beq	18ccc <getOverrideDirectory@@Base+0x78>
   18c88:	ldr	r1, [pc, #164]	; 18d34 <getOverrideDirectory@@Base+0xe0>
   18c8c:	add	r1, pc, r1
   18c90:	bl	185f0 <makePath@@Base>
   18c94:	mov	r5, r0
   18c98:	mov	r0, r6
   18c9c:	str	r5, [r4]
   18ca0:	bl	13da0 <free@plt>
   18ca4:	cmp	r5, #0
   18ca8:	beq	18ccc <getOverrideDirectory@@Base+0x78>
   18cac:	ldr	r1, [pc, #132]	; 18d38 <getOverrideDirectory@@Base+0xe4>
   18cb0:	mov	r0, #6
   18cb4:	mov	r2, r5
   18cb8:	add	r1, pc, r1
   18cbc:	bl	1825c <logMessage@@Base>
   18cc0:	ldr	r3, [pc, #116]	; 18d3c <getOverrideDirectory@@Base+0xe8>
   18cc4:	ldr	r0, [pc, r3]
   18cc8:	b	18c6c <getOverrideDirectory@@Base+0x18>
   18ccc:	bl	18aa0 <getWorkingDirectory@@Base>
   18cd0:	subs	r4, r0, #0
   18cd4:	beq	18d04 <getOverrideDirectory@@Base+0xb0>
   18cd8:	ldr	r1, [pc, #96]	; 18d40 <getOverrideDirectory@@Base+0xec>
   18cdc:	add	r1, pc, r1
   18ce0:	bl	185f0 <makePath@@Base>
   18ce4:	ldr	r3, [pc, #88]	; 18d44 <getOverrideDirectory@@Base+0xf0>
   18ce8:	add	r3, pc, r3
   18cec:	mov	r5, r0
   18cf0:	mov	r0, r4
   18cf4:	str	r5, [r3]
   18cf8:	bl	13da0 <free@plt>
   18cfc:	cmp	r5, #0
   18d00:	bne	18cac <getOverrideDirectory@@Base+0x58>
   18d04:	ldr	r4, [pc, #60]	; 18d48 <getOverrideDirectory@@Base+0xf4>
   18d08:	mov	r0, #4
   18d0c:	ldr	r1, [pc, #56]	; 18d4c <getOverrideDirectory@@Base+0xf8>
   18d10:	add	r4, pc, r4
   18d14:	ldr	r3, [pc, #52]	; 18d50 <getOverrideDirectory@@Base+0xfc>
   18d18:	add	r1, pc, r1
   18d1c:	add	r3, pc, r3
   18d20:	str	r3, [r4]
   18d24:	bl	1825c <logMessage@@Base>
   18d28:	ldr	r0, [r4]
   18d2c:	b	18c6c <getOverrideDirectory@@Base+0x18>
   18d30:	muleq	r1, r8, r6
   18d34:	muleq	r0, r8, fp
   18d38:	andeq	r4, r0, r0, ror #24
   18d3c:	andeq	sl, r1, r0, lsr r6
   18d40:	andeq	r4, r0, r8, asr #22
   18d44:	andeq	sl, r1, ip, lsl #12
   18d48:	andeq	sl, r1, r4, ror #11
   18d4c:	andeq	r4, r0, r8, ror #23
   18d50:	andeq	r4, r0, ip, lsr r4

00018d54 <openFile@@Base>:
   18d54:	push	{r4, r5, r6, lr}
   18d58:	mov	r6, r2
   18d5c:	mov	r5, r0
   18d60:	bl	13cd4 <fopen@plt>
   18d64:	subs	r4, r0, #0
   18d68:	beq	18d90 <openFile@@Base+0x3c>
   18d6c:	bl	13b78 <fileno@plt>
   18d70:	ldr	r1, [pc, #104]	; 18de0 <openFile@@Base+0x8c>
   18d74:	mov	r2, r5
   18d78:	add	r1, pc, r1
   18d7c:	mov	r3, r0
   18d80:	mov	r0, #7
   18d84:	bl	1825c <logMessage@@Base>
   18d88:	mov	r0, r4
   18d8c:	pop	{r4, r5, r6, pc}
   18d90:	cmp	r6, #0
   18d94:	bne	18dc8 <openFile@@Base+0x74>
   18d98:	bl	1419c <__errno_location@plt>
   18d9c:	ldr	r0, [r0]
   18da0:	mov	r6, #3
   18da4:	bl	13b54 <strerror@plt>
   18da8:	ldr	r1, [pc, #52]	; 18de4 <openFile@@Base+0x90>
   18dac:	mov	r2, r5
   18db0:	add	r1, pc, r1
   18db4:	mov	r3, r0
   18db8:	mov	r0, r6
   18dbc:	bl	1825c <logMessage@@Base>
   18dc0:	mov	r0, r4
   18dc4:	pop	{r4, r5, r6, pc}
   18dc8:	bl	1419c <__errno_location@plt>
   18dcc:	ldr	r0, [r0]
   18dd0:	cmp	r0, #2
   18dd4:	moveq	r6, #7
   18dd8:	bne	18da0 <openFile@@Base+0x4c>
   18ddc:	b	18da4 <openFile@@Base+0x50>
   18de0:			; <UNDEFINED> instruction: 0x00004bb8
   18de4:	muleq	r0, r8, fp

00018de8 <openDataFile@@Base>:
   18de8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18dec:	sub	sp, sp, #12
   18df0:	mov	r5, r1
   18df4:	mov	r6, r2
   18df8:	mov	r8, r0
   18dfc:	bl	18570 <locatePathName@@Base>
   18e00:	mov	r4, r0
   18e04:	bl	18c54 <getOverrideDirectory@@Base>
   18e08:	subs	r9, r0, #0
   18e0c:	beq	18e60 <openDataFile@@Base+0x78>
   18e10:	mov	r1, r4
   18e14:	bl	185f0 <makePath@@Base>
   18e18:	subs	r4, r0, #0
   18e1c:	beq	18e60 <openDataFile@@Base+0x78>
   18e20:	bl	187c0 <testFilePath@@Base>
   18e24:	cmp	r0, #0
   18e28:	bne	18eb0 <openDataFile@@Base+0xc8>
   18e2c:	mov	r0, r8
   18e30:	mov	r1, r5
   18e34:	mov	r2, r6
   18e38:	bl	18d54 <openFile@@Base>
   18e3c:	subs	r7, r0, #0
   18e40:	beq	18e68 <openDataFile@@Base+0x80>
   18e44:	cmp	r4, #0
   18e48:	beq	18e54 <openDataFile@@Base+0x6c>
   18e4c:	mov	r0, r4
   18e50:	bl	13da0 <free@plt>
   18e54:	mov	r0, r7
   18e58:	add	sp, sp, #12
   18e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e60:	mov	r4, #0
   18e64:	b	18e2c <openDataFile@@Base+0x44>
   18e68:	ldrb	r3, [r5]
   18e6c:	cmp	r3, #119	; 0x77
   18e70:	cmpne	r3, #97	; 0x61
   18e74:	bne	18e44 <openDataFile@@Base+0x5c>
   18e78:	bl	1419c <__errno_location@plt>
   18e7c:	ldr	r3, [r0]
   18e80:	mov	sl, r0
   18e84:	cmp	r3, #2
   18e88:	beq	18ec8 <openDataFile@@Base+0xe0>
   18e8c:	cmp	r3, #13
   18e90:	cmpne	r3, #30
   18e94:	bne	18e44 <openDataFile@@Base+0x5c>
   18e98:	cmp	r4, #0
   18e9c:	beq	18e54 <openDataFile@@Base+0x6c>
   18ea0:	mov	r0, r9
   18ea4:	bl	18964 <ensureDirectory@@Base>
   18ea8:	cmp	r0, #0
   18eac:	beq	18e4c <openDataFile@@Base+0x64>
   18eb0:	mov	r1, r5
   18eb4:	mov	r2, r6
   18eb8:	mov	r0, r4
   18ebc:	bl	18d54 <openFile@@Base>
   18ec0:	mov	r7, r0
   18ec4:	b	18e4c <openDataFile@@Base+0x64>
   18ec8:	mov	r0, r8
   18ecc:	bl	18478 <getPathDirectory@@Base>
   18ed0:	subs	fp, r0, #0
   18ed4:	beq	18ef8 <openDataFile@@Base+0x110>
   18ed8:	bl	18964 <ensureDirectory@@Base>
   18edc:	mov	r3, r0
   18ee0:	mov	r0, fp
   18ee4:	str	r3, [sp, #4]
   18ee8:	bl	13da0 <free@plt>
   18eec:	ldr	r3, [sp, #4]
   18ef0:	cmp	r3, #0
   18ef4:	bne	18f00 <openDataFile@@Base+0x118>
   18ef8:	ldr	r3, [sl]
   18efc:	b	18e8c <openDataFile@@Base+0xa4>
   18f00:	mov	r0, r8
   18f04:	mov	r1, r5
   18f08:	mov	r2, r6
   18f0c:	bl	18d54 <openFile@@Base>
   18f10:	mov	r7, r0
   18f14:	b	18e44 <openDataFile@@Base+0x5c>

00018f18 <acquireFileLock@@Base>:
   18f18:	adds	r2, r1, #0
   18f1c:	mov	r1, #7
   18f20:	movne	r2, #1
   18f24:	b	18378 <logMallocError@@Base+0x10>

00018f28 <attemptFileLock@@Base>:
   18f28:	adds	r2, r1, #0
   18f2c:	mov	r1, #6
   18f30:	movne	r2, #1
   18f34:	b	18378 <logMallocError@@Base+0x10>

00018f38 <releaseFileLock@@Base>:
   18f38:	mov	r1, #6
   18f3c:	mov	r2, #2
   18f40:	b	18378 <logMallocError@@Base+0x10>

00018f44 <readLine@@Base>:
   18f44:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   18f48:	mov	r6, r1
   18f4c:	mov	r7, r2
   18f50:	mov	r8, r0
   18f54:	bl	14130 <ferror@plt>
   18f58:	cmp	r0, #0
   18f5c:	beq	18f6c <readLine@@Base+0x28>
   18f60:	mov	r9, #0
   18f64:	mov	r0, r9
   18f68:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   18f6c:	mov	r0, r8
   18f70:	bl	13eb4 <feof@plt>
   18f74:	subs	r9, r0, #0
   18f78:	bne	18f60 <readLine@@Base+0x1c>
   18f7c:	ldr	r1, [r7]
   18f80:	cmp	r1, #0
   18f84:	ldrne	r0, [r6]
   18f88:	beq	1902c <readLine@@Base+0xe8>
   18f8c:	mov	r2, r8
   18f90:	bl	13c5c <fgets@plt>
   18f94:	subs	r5, r0, #0
   18f98:	beq	190ac <readLine@@Base+0x168>
   18f9c:	bl	13e48 <strlen@plt>
   18fa0:	sub	r2, r0, #1
   18fa4:	mov	r4, r0
   18fa8:	ldrb	r3, [r5, r2]
   18fac:	cmp	r3, #10
   18fb0:	beq	1904c <readLine@@Base+0x108>
   18fb4:	ldr	r3, [r6]
   18fb8:	b	18ff0 <readLine@@Base+0xac>
   18fbc:	mov	r2, r8
   18fc0:	add	r0, r3, r4
   18fc4:	bl	13c5c <fgets@plt>
   18fc8:	cmp	r0, #0
   18fcc:	beq	19080 <readLine@@Base+0x13c>
   18fd0:	bl	13e48 <strlen@plt>
   18fd4:	ldr	r5, [r6]
   18fd8:	mov	r3, r5
   18fdc:	add	r4, r4, r0
   18fe0:	sub	r2, r4, #1
   18fe4:	ldrb	r1, [r5, r2]
   18fe8:	cmp	r1, #10
   18fec:	beq	1904c <readLine@@Base+0x108>
   18ff0:	ldr	r2, [r7]
   18ff4:	rsb	r1, r4, r2
   18ff8:	cmp	r1, #1
   18ffc:	bne	18fbc <readLine@@Base+0x78>
   19000:	lsl	r5, r2, #1
   19004:	mov	r0, r3
   19008:	mov	r1, r5
   1900c:	bl	1413c <realloc@plt>
   19010:	rsb	r1, r4, r5
   19014:	cmp	r0, #0
   19018:	beq	190a4 <readLine@@Base+0x160>
   1901c:	str	r0, [r6]
   19020:	str	r5, [r7]
   19024:	ldr	r3, [r6]
   19028:	b	18fbc <readLine@@Base+0x78>
   1902c:	mov	r0, #128	; 0x80
   19030:	str	r0, [r7]
   19034:	bl	13fbc <malloc@plt>
   19038:	cmp	r0, #0
   1903c:	str	r0, [r6]
   19040:	beq	190a4 <readLine@@Base+0x160>
   19044:	ldr	r1, [r7]
   19048:	b	18f8c <readLine@@Base+0x48>
   1904c:	cmp	r2, #0
   19050:	moveq	r3, r5
   19054:	beq	1906c <readLine@@Base+0x128>
   19058:	sub	r4, r4, #2
   1905c:	add	r3, r5, r4
   19060:	ldrb	r1, [r5, r4]
   19064:	cmp	r1, #13
   19068:	addne	r3, r5, r2
   1906c:	mov	r9, #1
   19070:	mov	r2, #0
   19074:	mov	r0, r9
   19078:	strb	r2, [r3]
   1907c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19080:	mov	r0, r8
   19084:	bl	14130 <ferror@plt>
   19088:	cmp	r0, #0
   1908c:	moveq	r9, #1
   19090:	beq	18f64 <readLine@@Base+0x20>
   19094:	ldr	r0, [pc, #36]	; 190c0 <readLine@@Base+0x17c>
   19098:	add	r0, pc, r0
   1909c:	bl	18324 <logSystemError@@Base>
   190a0:	b	18f64 <readLine@@Base+0x20>
   190a4:	bl	18368 <logMallocError@@Base>
   190a8:	b	18f64 <readLine@@Base+0x20>
   190ac:	mov	r0, r8
   190b0:	bl	14130 <ferror@plt>
   190b4:	cmp	r0, #0
   190b8:	beq	18f60 <readLine@@Base+0x1c>
   190bc:	b	19094 <readLine@@Base+0x150>
   190c0:	andeq	r4, r0, r8, asr r4

000190c4 <processLines@@Base>:
   190c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190c8:	sub	sp, sp, #28
   190cc:	ldr	lr, [pc, #224]	; 191b4 <processLines@@Base+0xf0>
   190d0:	mov	r3, #0
   190d4:	ldr	ip, [pc, #220]	; 191b8 <processLines@@Base+0xf4>
   190d8:	mov	r4, r3
   190dc:	add	lr, pc, lr
   190e0:	ldr	sl, [pc, #212]	; 191bc <processLines@@Base+0xf8>
   190e4:	mov	r8, r2
   190e8:	mov	r5, r0
   190ec:	ldr	ip, [lr, ip]
   190f0:	add	sl, pc, sl
   190f4:	str	r3, [sp, #12]
   190f8:	mov	r2, lr
   190fc:	str	r3, [sp, #16]
   19100:	mov	r9, r1
   19104:	ldr	r3, [ip]
   19108:	add	sl, sl, #8
   1910c:	str	ip, [sp, #4]
   19110:	add	r7, sp, #12
   19114:	add	r6, sp, #16
   19118:	str	r3, [sp, #20]
   1911c:	b	1915c <processLines@@Base+0x98>
   19120:	cmp	r4, #0
   19124:	ldr	fp, [sp, #12]
   19128:	bne	19144 <processLines@@Base+0x80>
   1912c:	mov	r0, fp
   19130:	mov	r1, sl
   19134:	mov	r2, #3
   19138:	bl	1410c <strncmp@plt>
   1913c:	cmp	r0, #0
   19140:	addeq	fp, fp, #3
   19144:	mov	r0, fp
   19148:	mov	r1, r8
   1914c:	blx	r9
   19150:	add	r4, r4, #1
   19154:	cmp	r0, #0
   19158:	beq	19174 <processLines@@Base+0xb0>
   1915c:	mov	r0, r5
   19160:	mov	r1, r7
   19164:	mov	r2, r6
   19168:	bl	18f44 <readLine@@Base>
   1916c:	cmp	r0, #0
   19170:	bne	19120 <processLines@@Base+0x5c>
   19174:	ldr	r0, [sp, #12]
   19178:	cmp	r0, #0
   1917c:	beq	19184 <processLines@@Base+0xc0>
   19180:	bl	13da0 <free@plt>
   19184:	mov	r0, r5
   19188:	bl	14130 <ferror@plt>
   1918c:	ldr	r1, [sp, #4]
   19190:	ldr	r2, [sp, #20]
   19194:	ldr	r3, [r1]
   19198:	rsbs	r0, r0, #1
   1919c:	movcc	r0, #0
   191a0:	cmp	r2, r3
   191a4:	bne	191b0 <processLines@@Base+0xec>
   191a8:	add	sp, sp, #28
   191ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191b0:	bl	13fec <__stack_chk_fail@plt>
   191b4:	andeq	r5, r1, ip, lsl pc
   191b8:	andeq	r0, r0, ip, ror #4
   191bc:	andeq	r4, r0, r4, lsr r7

000191c0 <formatInputError@@Base>:
   191c0:	push	{r4, r5, r6, r7, r8, r9, lr}
   191c4:	cmp	r2, #0
   191c8:	sub	sp, sp, #12
   191cc:	mov	r7, r3
   191d0:	mov	r4, r0
   191d4:	add	r5, r0, r1
   191d8:	ldr	r9, [sp, #40]	; 0x28
   191dc:	moveq	r6, r0
   191e0:	ldr	r8, [sp, #44]	; 0x2c
   191e4:	beq	19210 <formatInputError@@Base+0x50>
   191e8:	mov	r3, r2
   191ec:	ldr	r2, [pc, #184]	; 192ac <formatInputError@@Base+0xec>
   191f0:	rsb	r1, r0, r5
   191f4:	mov	r6, r4
   191f8:	add	r2, pc, r2
   191fc:	bl	140f4 <snprintf@plt>
   19200:	add	r0, r4, r0
   19204:	cmp	r0, r5
   19208:	movcc	r4, r0
   1920c:	movcs	r4, r5
   19210:	cmp	r7, #0
   19214:	beq	1924c <formatInputError@@Base+0x8c>
   19218:	ldr	lr, [r7]
   1921c:	mov	r0, r4
   19220:	ldr	ip, [pc, #136]	; 192b0 <formatInputError@@Base+0xf0>
   19224:	rsb	r1, r4, r5
   19228:	mov	r2, #1
   1922c:	mvn	r3, #0
   19230:	add	ip, pc, ip
   19234:	stm	sp, {ip, lr}
   19238:	bl	13f44 <__snprintf_chk@plt>
   1923c:	add	r0, r4, r0
   19240:	cmp	r0, r5
   19244:	movcc	r4, r0
   19248:	movcs	r4, r5
   1924c:	cmp	r6, r4
   19250:	beq	19278 <formatInputError@@Base+0xb8>
   19254:	ldr	r2, [pc, #88]	; 192b4 <formatInputError@@Base+0xf4>
   19258:	mov	r0, r4
   1925c:	rsb	r1, r4, r5
   19260:	add	r2, pc, r2
   19264:	bl	140f4 <snprintf@plt>
   19268:	add	r0, r4, r0
   1926c:	cmp	r0, r5
   19270:	movcc	r4, r0
   19274:	movcs	r4, r5
   19278:	str	r9, [sp]
   1927c:	mov	r0, r4
   19280:	str	r8, [sp, #4]
   19284:	rsb	r1, r4, r5
   19288:	mov	r2, #1
   1928c:	mvn	r3, #0
   19290:	bl	13efc <__vsnprintf_chk@plt>
   19294:	add	r0, r4, r0
   19298:	cmp	r0, r5
   1929c:	rsbls	r0, r6, r0
   192a0:	rsbhi	r0, r6, r5
   192a4:	add	sp, sp, #12
   192a8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   192ac:	andeq	r4, r0, r0, asr #16
   192b0:	andeq	r4, r0, r4, lsr r7
   192b4:			; <UNDEFINED> instruction: 0x000044b4

000192b8 <getConsole@@Base>:
   192b8:	push	{r4, lr}
   192bc:	ldr	r4, [pc, #96]	; 19324 <getConsole@@Base+0x6c>
   192c0:	add	r4, pc, r4
   192c4:	ldr	r0, [r4]
   192c8:	cmp	r0, #0
   192cc:	popne	{r4, pc}
   192d0:	ldr	r0, [pc, #80]	; 19328 <getConsole@@Base+0x70>
   192d4:	ldr	r1, [pc, #80]	; 1932c <getConsole@@Base+0x74>
   192d8:	add	r0, pc, r0
   192dc:	add	r1, pc, r1
   192e0:	bl	13cd4 <fopen@plt>
   192e4:	cmp	r0, #0
   192e8:	str	r0, [r4]
   192ec:	beq	19310 <getConsole@@Base+0x58>
   192f0:	bl	13b78 <fileno@plt>
   192f4:	ldr	r1, [pc, #52]	; 19330 <getConsole@@Base+0x78>
   192f8:	add	r1, pc, r1
   192fc:	mov	r2, r0
   19300:	mov	r0, #7
   19304:	bl	1825c <logMessage@@Base>
   19308:	ldr	r0, [r4]
   1930c:	pop	{r4, pc}
   19310:	ldr	r0, [pc, #28]	; 19334 <getConsole@@Base+0x7c>
   19314:	add	r0, pc, r0
   19318:	bl	18324 <logSystemError@@Base>
   1931c:	ldr	r0, [r4]
   19320:	pop	{r4, pc}
   19324:	andeq	sl, r1, ip, lsr r0
   19328:	muleq	r0, r4, r6
   1932c:	andeq	r4, r0, r0, lsr #13
   19330:	andeq	r4, r0, r8, lsl #13
   19334:	andeq	r4, r0, r4, lsl #13

00019338 <writeConsole@@Base>:
   19338:	push	{r3, r4, r5, r6, r7, lr}
   1933c:	mov	r7, r0
   19340:	mov	r4, r1
   19344:	bl	192b8 <getConsole@@Base>
   19348:	subs	r6, r0, #0
   1934c:	beq	193c4 <writeConsole@@Base+0x8c>
   19350:	cmp	r4, #0
   19354:	bne	19374 <writeConsole@@Base+0x3c>
   19358:	b	193cc <writeConsole@@Base+0x94>
   1935c:	mov	r0, r6
   19360:	bl	14130 <ferror@plt>
   19364:	cmp	r0, #0
   19368:	bne	193b8 <writeConsole@@Base+0x80>
   1936c:	subs	r4, r4, r5
   19370:	beq	193cc <writeConsole@@Base+0x94>
   19374:	mov	r0, r7
   19378:	mov	r1, #1
   1937c:	mov	r2, r4
   19380:	mov	r3, r6
   19384:	bl	13f74 <fwrite@plt>
   19388:	mov	r5, r0
   1938c:	mov	r0, r6
   19390:	bl	14130 <ferror@plt>
   19394:	add	r7, r7, r5
   19398:	cmp	r0, #0
   1939c:	bne	1935c <writeConsole@@Base+0x24>
   193a0:	mov	r0, r6
   193a4:	bl	13e24 <fflush@plt>
   193a8:	mov	r0, r6
   193ac:	bl	14130 <ferror@plt>
   193b0:	cmp	r0, #0
   193b4:	beq	1936c <writeConsole@@Base+0x34>
   193b8:	ldr	r0, [pc, #20]	; 193d4 <writeConsole@@Base+0x9c>
   193bc:	add	r0, pc, r0
   193c0:	bl	18324 <logSystemError@@Base>
   193c4:	mov	r0, #0
   193c8:	pop	{r3, r4, r5, r6, r7, pc}
   193cc:	mov	r0, #1
   193d0:	pop	{r3, r4, r5, r6, r7, pc}
   193d4:	andeq	r4, r0, ip, ror #11

000193d8 <ringBell@@Base>:
   193d8:	ldr	r0, [pc, #8]	; 193e8 <ringBell@@Base+0x10>
   193dc:	mov	r1, #1
   193e0:	add	r0, pc, r0
   193e4:	b	19338 <writeConsole@@Base>
   193e8:			; <UNDEFINED> instruction: 0x00015eb8

000193ec <getDeviceDirectory@@Base>:
   193ec:	ldr	r3, [pc, #408]	; 1958c <getDeviceDirectory@@Base+0x1a0>
   193f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193f4:	add	fp, sp, #32
   193f8:	ldr	r1, [pc, #400]	; 19590 <getDeviceDirectory@@Base+0x1a4>
   193fc:	sub	sp, sp, #36	; 0x24
   19400:	add	r3, pc, r3
   19404:	ldr	r2, [pc, #392]	; 19594 <getDeviceDirectory@@Base+0x1a8>
   19408:	ldr	r6, [r3, r1]
   1940c:	add	r2, pc, r2
   19410:	ldr	r0, [r2, #4]
   19414:	ldr	r3, [r6]
   19418:	cmp	r0, #0
   1941c:	str	r3, [fp, #-40]	; 0xffffffd8
   19420:	beq	1943c <getDeviceDirectory@@Base+0x50>
   19424:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19428:	ldr	r3, [r6]
   1942c:	cmp	r2, r3
   19430:	bne	19588 <getDeviceDirectory@@Base+0x19c>
   19434:	sub	sp, fp, #32
   19438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1943c:	ldr	r3, [pc, #340]	; 19598 <getDeviceDirectory@@Base+0x1ac>
   19440:	ldr	r4, [pc, #340]	; 1959c <getDeviceDirectory@@Base+0x1b0>
   19444:	add	r3, pc, r3
   19448:	ldr	r0, [pc, #336]	; 195a0 <getDeviceDirectory@@Base+0x1b4>
   1944c:	ldr	r9, [pc, #336]	; 195a4 <getDeviceDirectory@@Base+0x1b8>
   19450:	add	r4, pc, r4
   19454:	ldr	r8, [pc, #332]	; 195a8 <getDeviceDirectory@@Base+0x1bc>
   19458:	add	r0, pc, r0
   1945c:	str	r3, [fp, #-48]	; 0xffffffd0
   19460:	add	r9, pc, r9
   19464:	ldr	r3, [pc, #320]	; 195ac <getDeviceDirectory@@Base+0x1c0>
   19468:	add	r4, r4, #4
   1946c:	add	r8, pc, r8
   19470:	add	r3, pc, r3
   19474:	str	r3, [fp, #-52]	; 0xffffffcc
   19478:	b	19488 <getDeviceDirectory@@Base+0x9c>
   1947c:	ldr	r0, [r4], #4
   19480:	cmp	r0, #0
   19484:	beq	19524 <getDeviceDirectory@@Base+0x138>
   19488:	bl	13c68 <getenv@plt>
   1948c:	subs	sl, r0, #0
   19490:	beq	1947c <getDeviceDirectory@@Base+0x90>
   19494:	ldrb	r3, [sl]
   19498:	cmp	r3, #0
   1949c:	beq	1947c <getDeviceDirectory@@Base+0x90>
   194a0:	bl	13e48 <strlen@plt>
   194a4:	mov	r7, sp
   194a8:	mov	r2, #1
   194ac:	add	r3, r0, #12
   194b0:	add	r1, r0, #5
   194b4:	bic	r3, r3, #7
   194b8:	sub	sp, sp, r3
   194bc:	mvn	r3, #0
   194c0:	add	r5, sp, #16
   194c4:	stm	sp, {r9, sl}
   194c8:	mov	r0, r5
   194cc:	str	r8, [sp, #8]
   194d0:	bl	13f44 <__snprintf_chk@plt>
   194d4:	mov	r0, r5
   194d8:	bl	18860 <testDirectoryPath@@Base>
   194dc:	cmp	r0, #0
   194e0:	bne	1955c <getDeviceDirectory@@Base+0x170>
   194e4:	bl	1419c <__errno_location@plt>
   194e8:	ldr	r0, [r0]
   194ec:	cmp	r0, #2
   194f0:	beq	19514 <getDeviceDirectory@@Base+0x128>
   194f4:	ldr	sl, [r4, #-4]
   194f8:	bl	13b54 <strerror@plt>
   194fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19500:	mov	r2, r5
   19504:	mov	r3, sl
   19508:	str	r0, [sp]
   1950c:	mov	r0, #3
   19510:	bl	1825c <logMessage@@Base>
   19514:	ldr	r0, [r4], #4
   19518:	mov	sp, r7
   1951c:	cmp	r0, #0
   19520:	bne	19488 <getDeviceDirectory@@Base+0x9c>
   19524:	ldr	r3, [pc, #132]	; 195b0 <getDeviceDirectory@@Base+0x1c4>
   19528:	ldr	r1, [pc, #132]	; 195b4 <getDeviceDirectory@@Base+0x1c8>
   1952c:	add	r3, pc, r3
   19530:	add	r1, pc, r1
   19534:	mov	r2, r3
   19538:	str	r3, [r1, #4]
   1953c:	ldr	r1, [pc, #116]	; 195b8 <getDeviceDirectory@@Base+0x1cc>
   19540:	mov	r0, #7
   19544:	add	r1, pc, r1
   19548:	bl	1825c <logMessage@@Base>
   1954c:	ldr	r3, [pc, #104]	; 195bc <getDeviceDirectory@@Base+0x1d0>
   19550:	add	r3, pc, r3
   19554:	ldr	r0, [r3, #4]
   19558:	b	19424 <getDeviceDirectory@@Base+0x38>
   1955c:	mov	r0, r5
   19560:	bl	14154 <__strdup@plt>
   19564:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19568:	cmp	r0, #0
   1956c:	str	r0, [r3, #4]
   19570:	bne	1957c <getDeviceDirectory@@Base+0x190>
   19574:	bl	18368 <logMallocError@@Base>
   19578:	b	19514 <getDeviceDirectory@@Base+0x128>
   1957c:	mov	r2, r0
   19580:	mov	sp, r7
   19584:	b	1953c <getDeviceDirectory@@Base+0x150>
   19588:	bl	13fec <__stack_chk_fail@plt>
   1958c:	strdeq	r5, [r1], -r8
   19590:	andeq	r0, r0, ip, ror #4
   19594:	strdeq	r9, [r1], -r0
   19598:	andeq	r4, r0, r8, lsl #11
   1959c:	andeq	r5, r1, r8, ror #20
   195a0:	andeq	r4, r0, r0, ror #10
   195a4:	andeq	r4, r0, ip, lsl #4
   195a8:	andeq	r4, r0, r8, asr r5
   195ac:	andeq	r9, r1, ip, lsl #29
   195b0:	muleq	r0, r8, r4
   195b4:	andeq	r9, r1, ip, asr #27
   195b8:	andeq	r4, r0, ip, lsr #9
   195bc:	andeq	r9, r1, ip, lsr #27

000195c0 <getDevicePath@@Base>:
   195c0:	push	{r4, lr}
   195c4:	mov	r4, r0
   195c8:	bl	193ec <getDeviceDirectory@@Base>
   195cc:	mov	r1, r4
   195d0:	pop	{r4, lr}
   195d4:	b	185f0 <makePath@@Base>

000195d8 <resolveDeviceName@@Base>:
   195d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195dc:	sub	sp, sp, #20
   195e0:	ldr	r3, [r0]
   195e4:	mov	r7, r1
   195e8:	cmp	r3, #0
   195ec:	str	r3, [sp, #12]
   195f0:	beq	196d8 <resolveDeviceName@@Base+0x100>
   195f4:	ldr	r9, [pc, #248]	; 196f4 <resolveDeviceName@@Base+0x11c>
   195f8:	mov	r8, r0
   195fc:	ldr	sl, [pc, #244]	; 196f8 <resolveDeviceName@@Base+0x120>
   19600:	mov	r6, #0
   19604:	add	r9, pc, r9
   19608:	ldr	r5, [sp, #12]
   1960c:	add	sl, pc, sl
   19610:	b	19678 <resolveDeviceName@@Base+0xa0>
   19614:	bl	1825c <logMessage@@Base>
   19618:	mov	r0, r4
   1961c:	bl	187a8 <testPath@@Base>
   19620:	cmp	r0, #0
   19624:	bne	196c8 <resolveDeviceName@@Base+0xf0>
   19628:	bl	1419c <__errno_location@plt>
   1962c:	mov	fp, r0
   19630:	ldr	r0, [r0]
   19634:	bl	13b54 <strerror@plt>
   19638:	mov	r3, r4
   1963c:	mov	r1, sl
   19640:	mov	r2, r7
   19644:	str	r0, [sp]
   19648:	mov	r0, #7
   1964c:	bl	1825c <logMessage@@Base>
   19650:	ldr	r3, [fp]
   19654:	mov	r0, r4
   19658:	cmp	r3, #2
   1965c:	beq	19668 <resolveDeviceName@@Base+0x90>
   19660:	cmp	r6, #0
   19664:	moveq	r6, r5
   19668:	bl	13da0 <free@plt>
   1966c:	ldr	r5, [r8, #4]!
   19670:	cmp	r5, #0
   19674:	beq	19698 <resolveDeviceName@@Base+0xc0>
   19678:	mov	r0, r5
   1967c:	bl	195c0 <getDevicePath@@Base>
   19680:	mov	r1, r9
   19684:	mov	r2, r7
   19688:	subs	r4, r0, #0
   1968c:	mov	r0, #7
   19690:	mov	r3, r4
   19694:	bne	19614 <resolveDeviceName@@Base+0x3c>
   19698:	ldr	r3, [sp, #12]
   1969c:	cmp	r6, #0
   196a0:	moveq	r6, r3
   196a4:	ldr	r1, [pc, #80]	; 196fc <resolveDeviceName@@Base+0x124>
   196a8:	mov	r2, r7
   196ac:	mov	r0, #6
   196b0:	mov	r3, r6
   196b4:	add	r1, pc, r1
   196b8:	bl	1825c <logMessage@@Base>
   196bc:	mov	r0, r6
   196c0:	add	sp, sp, #20
   196c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196c8:	mov	r0, r4
   196cc:	mov	r6, r5
   196d0:	bl	13da0 <free@plt>
   196d4:	b	196a4 <resolveDeviceName@@Base+0xcc>
   196d8:	mov	r2, r1
   196dc:	ldr	r1, [pc, #28]	; 19700 <resolveDeviceName@@Base+0x128>
   196e0:	mov	r0, #3
   196e4:	mov	r6, r3
   196e8:	add	r1, pc, r1
   196ec:	bl	1825c <logMessage@@Base>
   196f0:	b	196bc <resolveDeviceName@@Base+0xe4>
   196f4:	andeq	r4, r0, r0, lsr #8
   196f8:	andeq	r4, r0, r0, lsr r4
   196fc:	andeq	r4, r0, r8, lsr #7
   19700:	andeq	r4, r0, r0, lsr #6

00019704 <isQualifiedDevice@@Base>:
   19704:	push	{r3, r4, r5, r6, r7, lr}
   19708:	mov	r7, r0
   1970c:	ldr	r5, [r0]
   19710:	mov	r6, r1
   19714:	ldrb	r4, [r5]
   19718:	cmp	r4, #0
   1971c:	beq	1974c <isQualifiedDevice@@Base+0x48>
   19720:	cmp	r4, #58	; 0x3a
   19724:	beq	197a8 <isQualifiedDevice@@Base+0xa4>
   19728:	mov	r2, r5
   1972c:	mov	r4, #0
   19730:	b	1973c <isQualifiedDevice@@Base+0x38>
   19734:	cmp	r3, #58	; 0x3a
   19738:	beq	1974c <isQualifiedDevice@@Base+0x48>
   1973c:	ldrb	r3, [r2, #1]!
   19740:	add	r4, r4, #1
   19744:	cmp	r3, #0
   19748:	bne	19734 <isQualifiedDevice@@Base+0x30>
   1974c:	mov	r0, r5
   19750:	bl	13e48 <strlen@plt>
   19754:	cmp	r0, r4
   19758:	beq	19798 <isQualifiedDevice@@Base+0x94>
   1975c:	cmp	r6, #0
   19760:	beq	197a0 <isQualifiedDevice@@Base+0x9c>
   19764:	cmp	r4, #0
   19768:	beq	19798 <isQualifiedDevice@@Base+0x94>
   1976c:	mov	r1, r6
   19770:	mov	r0, r5
   19774:	mov	r2, r4
   19778:	bl	13f8c <strncasecmp@plt>
   1977c:	cmp	r0, #0
   19780:	bne	19798 <isQualifiedDevice@@Base+0x94>
   19784:	add	r4, r4, #1
   19788:	mov	r0, #1
   1978c:	add	r5, r5, r4
   19790:	str	r5, [r7]
   19794:	pop	{r3, r4, r5, r6, r7, pc}
   19798:	mov	r0, #0
   1979c:	pop	{r3, r4, r5, r6, r7, pc}
   197a0:	mov	r0, #1
   197a4:	pop	{r3, r4, r5, r6, r7, pc}
   197a8:	mov	r4, #0
   197ac:	b	1974c <isQualifiedDevice@@Base+0x48>

000197b0 <deallocateStrings@@Base>:
   197b0:	push	{r3, r4, r5, lr}
   197b4:	mov	r5, r0
   197b8:	ldr	r0, [r0]
   197bc:	cmp	r0, #0
   197c0:	movne	r4, r5
   197c4:	beq	197d8 <deallocateStrings@@Base+0x28>
   197c8:	bl	13da0 <free@plt>
   197cc:	ldr	r0, [r4, #4]!
   197d0:	cmp	r0, #0
   197d4:	bne	197c8 <deallocateStrings@@Base+0x18>
   197d8:	mov	r0, r5
   197dc:	pop	{r3, r4, r5, lr}
   197e0:	b	13da0 <free@plt>

000197e4 <splitString@@Base>:
   197e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197e8:	cmp	r0, #0
   197ec:	sub	sp, sp, #12
   197f0:	mov	r8, r1
   197f4:	str	r0, [sp]
   197f8:	str	r2, [sp, #4]
   197fc:	beq	198ac <splitString@@Base+0xc8>
   19800:	mov	r7, #0
   19804:	mov	r9, r7
   19808:	ldr	r3, [sp]
   1980c:	ldrb	r6, [r3]
   19810:	cmp	r6, #0
   19814:	beq	1988c <splitString@@Base+0xa8>
   19818:	mov	r5, r3
   1981c:	mov	r6, #0
   19820:	b	19864 <splitString@@Base+0x80>
   19824:	cmp	r7, #0
   19828:	add	r0, fp, #1
   1982c:	beq	19854 <splitString@@Base+0x70>
   19830:	bl	13fbc <malloc@plt>
   19834:	mov	r1, r5
   19838:	mov	r2, fp
   1983c:	cmp	r0, #0
   19840:	mov	sl, r0
   19844:	str	r0, [r7, r6, lsl #2]
   19848:	beq	198cc <splitString@@Base+0xe8>
   1984c:	bl	13e84 <memcpy@plt>
   19850:	strb	r9, [sl, fp]
   19854:	cmp	r4, #0
   19858:	add	r5, r4, #1
   1985c:	add	r6, r6, #1
   19860:	beq	1988c <splitString@@Base+0xa8>
   19864:	mov	r0, r5
   19868:	mov	r1, r8
   1986c:	bl	13c80 <strchr@plt>
   19870:	subs	r4, r0, #0
   19874:	rsb	fp, r5, r4
   19878:	bne	19824 <splitString@@Base+0x40>
   1987c:	mov	r0, r5
   19880:	bl	13e48 <strlen@plt>
   19884:	mov	fp, r0
   19888:	b	19824 <splitString@@Base+0x40>
   1988c:	cmp	r7, #0
   19890:	bne	198dc <splitString@@Base+0xf8>
   19894:	add	r0, r6, #1
   19898:	lsl	r0, r0, #2
   1989c:	bl	13fbc <malloc@plt>
   198a0:	subs	r7, r0, #0
   198a4:	bne	19808 <splitString@@Base+0x24>
   198a8:	bl	18368 <logMallocError@@Base>
   198ac:	ldr	r3, [sp, #4]
   198b0:	cmp	r3, #0
   198b4:	ldreq	r7, [sp, #4]
   198b8:	movne	r7, #0
   198bc:	strne	r7, [r3]
   198c0:	mov	r0, r7
   198c4:	add	sp, sp, #12
   198c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198cc:	bl	18368 <logMallocError@@Base>
   198d0:	mov	r0, r7
   198d4:	bl	197b0 <deallocateStrings@@Base>
   198d8:	b	198ac <splitString@@Base+0xc8>
   198dc:	ldr	r3, [sp, #4]
   198e0:	cmp	r3, #0
   198e4:	mov	r3, #0
   198e8:	str	r3, [r7, r6, lsl #2]
   198ec:	ldrne	r3, [sp, #4]
   198f0:	strne	r6, [r3]
   198f4:	b	198c0 <splitString@@Base+0xdc>

000198f8 <joinStrings@@Base>:
   198f8:	ldr	r3, [pc, #236]	; 199ec <joinStrings@@Base+0xf4>
   198fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19900:	mov	r7, r1
   19904:	add	fp, sp, #32
   19908:	ldr	r1, [pc, #224]	; 199f0 <joinStrings@@Base+0xf8>
   1990c:	sub	sp, sp, #20
   19910:	add	r3, pc, r3
   19914:	lsl	r9, r7, #2
   19918:	add	r2, r9, #10
   1991c:	cmp	r7, #0
   19920:	ldr	r1, [r3, r1]
   19924:	bic	r2, r2, #7
   19928:	sub	sp, sp, r2
   1992c:	mov	r6, r0
   19930:	ldr	r3, [r1]
   19934:	mov	r5, sp
   19938:	str	r1, [fp, #-48]	; 0xffffffd0
   1993c:	str	r3, [fp, #-40]	; 0xffffffd8
   19940:	ble	199d4 <joinStrings@@Base+0xdc>
   19944:	mov	r4, #0
   19948:	mov	sl, r4
   1994c:	ldr	r0, [r6, r4]
   19950:	bl	13e48 <strlen@plt>
   19954:	str	r0, [r5, r4]
   19958:	add	r4, r4, #4
   1995c:	cmp	r9, r4
   19960:	add	sl, sl, r0
   19964:	bne	1994c <joinStrings@@Base+0x54>
   19968:	add	r0, sl, #1
   1996c:	bl	13fbc <malloc@plt>
   19970:	subs	sl, r0, #0
   19974:	beq	199b0 <joinStrings@@Base+0xb8>
   19978:	mov	r4, #0
   1997c:	mov	r9, sl
   19980:	mov	r8, r4
   19984:	ldr	r2, [r5, r4]
   19988:	mov	r0, r9
   1998c:	ldr	r1, [r6, r4]
   19990:	add	r8, r8, #1
   19994:	add	r9, r9, r2
   19998:	bl	13e84 <memcpy@plt>
   1999c:	cmp	r8, r7
   199a0:	add	r4, r4, #4
   199a4:	bne	19984 <joinStrings@@Base+0x8c>
   199a8:	mov	r3, #0
   199ac:	strb	r3, [r9]
   199b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   199b4:	mov	r0, sl
   199b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   199bc:	ldr	r3, [r1]
   199c0:	cmp	r2, r3
   199c4:	bne	199d0 <joinStrings@@Base+0xd8>
   199c8:	sub	sp, fp, #32
   199cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199d0:	bl	13fec <__stack_chk_fail@plt>
   199d4:	mov	r0, #1
   199d8:	bl	13fbc <malloc@plt>
   199dc:	subs	r9, r0, #0
   199e0:	mov	sl, r9
   199e4:	bne	199a8 <joinStrings@@Base+0xb0>
   199e8:	b	199b0 <joinStrings@@Base+0xb8>
   199ec:	andeq	r5, r1, r8, ror #13
   199f0:	andeq	r0, r0, ip, ror #4

000199f4 <rescaleInteger@@Base>:
   199f4:	push	{r4, r5, r6, lr}
   199f8:	mov	r4, r1
   199fc:	mov	r6, r0
   19a00:	lsl	r1, r2, #1
   19a04:	mov	r0, r4
   19a08:	mov	r5, r2
   19a0c:	bl	1c954 <releaseAllKeys@@Base+0x6c>
   19a10:	mov	r1, r4
   19a14:	add	r0, r0, r6
   19a18:	mul	r0, r5, r0
   19a1c:	bl	1c954 <releaseAllKeys@@Base+0x6c>
   19a20:	pop	{r4, r5, r6, pc}

00019a24 <isInteger@@Base>:
   19a24:	ldr	r3, [pc, #112]	; 19a9c <isInteger@@Base+0x78>
   19a28:	ldr	ip, [pc, #112]	; 19aa0 <isInteger@@Base+0x7c>
   19a2c:	add	r3, pc, r3
   19a30:	push	{r4, r5, lr}
   19a34:	sub	sp, sp, #12
   19a38:	ldr	r4, [r3, ip]
   19a3c:	mov	r5, r0
   19a40:	ldrb	r2, [r1]
   19a44:	ldr	r3, [r4]
   19a48:	cmp	r2, #0
   19a4c:	moveq	r0, r2
   19a50:	str	r3, [sp, #4]
   19a54:	beq	19a80 <isInteger@@Base+0x5c>
   19a58:	mov	r0, r1
   19a5c:	mov	r2, #0
   19a60:	mov	r1, sp
   19a64:	bl	13ec0 <strtol@plt>
   19a68:	ldr	r3, [sp]
   19a6c:	ldrb	r3, [r3]
   19a70:	cmp	r3, #0
   19a74:	movne	r0, #0
   19a78:	streq	r0, [r5]
   19a7c:	moveq	r0, #1
   19a80:	ldr	r1, [sp, #4]
   19a84:	ldr	r3, [r4]
   19a88:	cmp	r1, r3
   19a8c:	bne	19a98 <isInteger@@Base+0x74>
   19a90:	add	sp, sp, #12
   19a94:	pop	{r4, r5, pc}
   19a98:	bl	13fec <__stack_chk_fail@plt>
   19a9c:	andeq	r5, r1, ip, asr #11
   19aa0:	andeq	r0, r0, ip, ror #4

00019aa4 <isUnsignedInteger@@Base>:
   19aa4:	ldr	r3, [pc, #112]	; 19b1c <isUnsignedInteger@@Base+0x78>
   19aa8:	ldr	ip, [pc, #112]	; 19b20 <isUnsignedInteger@@Base+0x7c>
   19aac:	add	r3, pc, r3
   19ab0:	push	{r4, r5, lr}
   19ab4:	sub	sp, sp, #12
   19ab8:	ldr	r4, [r3, ip]
   19abc:	mov	r5, r0
   19ac0:	ldrb	r2, [r1]
   19ac4:	ldr	r3, [r4]
   19ac8:	cmp	r2, #0
   19acc:	moveq	r0, r2
   19ad0:	str	r3, [sp, #4]
   19ad4:	beq	19b00 <isUnsignedInteger@@Base+0x5c>
   19ad8:	mov	r0, r1
   19adc:	mov	r2, #0
   19ae0:	mov	r1, sp
   19ae4:	bl	13e6c <strtoul@plt>
   19ae8:	ldr	r3, [sp]
   19aec:	ldrb	r3, [r3]
   19af0:	cmp	r3, #0
   19af4:	movne	r0, #0
   19af8:	streq	r0, [r5]
   19afc:	moveq	r0, #1
   19b00:	ldr	r1, [sp, #4]
   19b04:	ldr	r3, [r4]
   19b08:	cmp	r1, r3
   19b0c:	bne	19b18 <isUnsignedInteger@@Base+0x74>
   19b10:	add	sp, sp, #12
   19b14:	pop	{r4, r5, pc}
   19b18:	bl	13fec <__stack_chk_fail@plt>
   19b1c:	andeq	r5, r1, ip, asr #10
   19b20:	andeq	r0, r0, ip, ror #4

00019b24 <isLogLevel@@Base>:
   19b24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19b28:	sub	sp, sp, #8
   19b2c:	ldr	r5, [pc, #220]	; 19c10 <isLogLevel@@Base+0xec>
   19b30:	mov	sl, r0
   19b34:	ldr	r3, [pc, #216]	; 19c14 <isLogLevel@@Base+0xf0>
   19b38:	mov	r6, r1
   19b3c:	add	r5, pc, r5
   19b40:	ldrb	r2, [r1]
   19b44:	ldr	r9, [r5, r3]
   19b48:	cmp	r2, #0
   19b4c:	moveq	r0, #1
   19b50:	ldr	r3, [r9]
   19b54:	str	r3, [sp, #4]
   19b58:	beq	19bbc <isLogLevel@@Base+0x98>
   19b5c:	mov	r0, r1
   19b60:	bl	13e48 <strlen@plt>
   19b64:	ldr	r3, [pc, #172]	; 19c18 <isLogLevel@@Base+0xf4>
   19b68:	ldr	r3, [r5, r3]
   19b6c:	ldr	r7, [r3]
   19b70:	cmp	r7, #0
   19b74:	mov	r8, r0
   19b78:	beq	19bd4 <isLogLevel@@Base+0xb0>
   19b7c:	ldr	r3, [pc, #152]	; 19c1c <isLogLevel@@Base+0xf8>
   19b80:	mov	r4, #0
   19b84:	ldr	r5, [r5, r3]
   19b88:	sub	r5, r5, #4
   19b8c:	b	19b9c <isLogLevel@@Base+0x78>
   19b90:	add	r4, r4, #1
   19b94:	cmp	r4, r7
   19b98:	beq	19bd4 <isLogLevel@@Base+0xb0>
   19b9c:	mov	r0, r6
   19ba0:	ldr	r1, [r5, #4]!
   19ba4:	mov	r2, r8
   19ba8:	bl	13f8c <strncasecmp@plt>
   19bac:	cmp	r0, #0
   19bb0:	bne	19b90 <isLogLevel@@Base+0x6c>
   19bb4:	mov	r0, #1
   19bb8:	str	r4, [sl]
   19bbc:	ldr	r2, [sp, #4]
   19bc0:	ldr	r3, [r9]
   19bc4:	cmp	r2, r3
   19bc8:	bne	19c0c <isLogLevel@@Base+0xe8>
   19bcc:	add	sp, sp, #8
   19bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19bd4:	mov	r1, r6
   19bd8:	mov	r0, sp
   19bdc:	bl	19a24 <isInteger@@Base>
   19be0:	cmp	r0, #0
   19be4:	beq	19c04 <isLogLevel@@Base+0xe0>
   19be8:	ldr	r3, [sp]
   19bec:	cmp	r3, #0
   19bf0:	blt	19c04 <isLogLevel@@Base+0xe0>
   19bf4:	cmp	r3, r7
   19bf8:	strcc	r3, [sl]
   19bfc:	movcc	r0, #1
   19c00:	bcc	19bbc <isLogLevel@@Base+0x98>
   19c04:	mov	r0, #0
   19c08:	b	19bbc <isLogLevel@@Base+0x98>
   19c0c:	bl	13fec <__stack_chk_fail@plt>
   19c10:			; <UNDEFINED> instruction: 0x000154bc
   19c14:	andeq	r0, r0, ip, ror #4
   19c18:	andeq	r0, r0, r0, ror r2
   19c1c:	andeq	r0, r0, r0, ror #4

00019c20 <validateInteger@@Base>:
   19c20:	ldr	ip, [pc, #164]	; 19ccc <validateInteger@@Base+0xac>
   19c24:	push	{r4, r5, r6, r7, r8, lr}
   19c28:	add	ip, pc, ip
   19c2c:	ldr	r4, [pc, #156]	; 19cd0 <validateInteger@@Base+0xb0>
   19c30:	sub	sp, sp, #8
   19c34:	ldrb	r5, [r1]
   19c38:	mov	r7, r0
   19c3c:	mov	r6, r2
   19c40:	mov	r8, r3
   19c44:	ldr	r4, [ip, r4]
   19c48:	cmp	r5, #0
   19c4c:	moveq	r0, #1
   19c50:	ldr	ip, [r4]
   19c54:	str	ip, [sp, #4]
   19c58:	bne	19c74 <validateInteger@@Base+0x54>
   19c5c:	ldr	r2, [sp, #4]
   19c60:	ldr	r3, [r4]
   19c64:	cmp	r2, r3
   19c68:	bne	19cc8 <validateInteger@@Base+0xa8>
   19c6c:	add	sp, sp, #8
   19c70:	pop	{r4, r5, r6, r7, r8, pc}
   19c74:	mov	r0, sp
   19c78:	bl	19a24 <isInteger@@Base>
   19c7c:	cmp	r0, #0
   19c80:	beq	19cb4 <validateInteger@@Base+0x94>
   19c84:	cmp	r6, #0
   19c88:	ldreq	r3, [sp]
   19c8c:	beq	19ca0 <validateInteger@@Base+0x80>
   19c90:	ldr	r2, [r6]
   19c94:	ldr	r3, [sp]
   19c98:	cmp	r2, r3
   19c9c:	bgt	19cb4 <validateInteger@@Base+0x94>
   19ca0:	cmp	r8, #0
   19ca4:	beq	19cbc <validateInteger@@Base+0x9c>
   19ca8:	ldr	r2, [r8]
   19cac:	cmp	r2, r3
   19cb0:	bge	19cbc <validateInteger@@Base+0x9c>
   19cb4:	mov	r0, #0
   19cb8:	b	19c5c <validateInteger@@Base+0x3c>
   19cbc:	str	r3, [r7]
   19cc0:	mov	r0, #1
   19cc4:	b	19c5c <validateInteger@@Base+0x3c>
   19cc8:	bl	13fec <__stack_chk_fail@plt>
   19ccc:	ldrdeq	r5, [r1], -r0
   19cd0:	andeq	r0, r0, ip, ror #4

00019cd4 <validateChoice@@Base>:
   19cd4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19cd8:	mov	r9, r0
   19cdc:	mov	r0, r1
   19ce0:	mov	r6, r1
   19ce4:	mov	r5, r2
   19ce8:	bl	13e48 <strlen@plt>
   19cec:	mov	r7, #0
   19cf0:	str	r7, [r9]
   19cf4:	subs	r8, r0, #0
   19cf8:	beq	19d44 <validateChoice@@Base+0x70>
   19cfc:	ldr	r1, [r5]
   19d00:	cmp	r1, r7
   19d04:	beq	19d4c <validateChoice@@Base+0x78>
   19d08:	mov	r4, r7
   19d0c:	b	19d20 <validateChoice@@Base+0x4c>
   19d10:	ldr	r1, [r5, #4]!
   19d14:	mov	r7, r4
   19d18:	cmp	r1, #0
   19d1c:	beq	19d4c <validateChoice@@Base+0x78>
   19d20:	mov	r0, r6
   19d24:	mov	r2, r8
   19d28:	bl	13f8c <strncasecmp@plt>
   19d2c:	add	r4, r4, #1
   19d30:	cmp	r0, #0
   19d34:	bne	19d10 <validateChoice@@Base+0x3c>
   19d38:	str	r7, [r9]
   19d3c:	mov	r0, #1
   19d40:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19d44:	mov	r0, #1
   19d48:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19d4c:	mov	r0, r1
   19d50:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

00019d54 <validateFlag@@Base>:
   19d54:	ldr	ip, [pc, #76]	; 19da8 <validateFlag@@Base+0x54>
   19d58:	push	{r4, lr}
   19d5c:	add	ip, pc, ip
   19d60:	ldr	r4, [pc, #68]	; 19dac <validateFlag@@Base+0x58>
   19d64:	sub	sp, sp, #16
   19d68:	mov	lr, #0
   19d6c:	ldr	r4, [ip, r4]
   19d70:	str	r3, [sp]
   19d74:	str	r2, [sp, #4]
   19d78:	mov	r2, sp
   19d7c:	ldr	r3, [r4]
   19d80:	str	lr, [sp, #8]
   19d84:	str	r3, [sp, #12]
   19d88:	bl	19cd4 <validateChoice@@Base>
   19d8c:	ldr	r2, [sp, #12]
   19d90:	ldr	r3, [r4]
   19d94:	cmp	r2, r3
   19d98:	bne	19da4 <validateFlag@@Base+0x50>
   19d9c:	add	sp, sp, #16
   19da0:	pop	{r4, pc}
   19da4:	bl	13fec <__stack_chk_fail@plt>
   19da8:	muleq	r1, ip, r2
   19dac:	andeq	r0, r0, ip, ror #4

00019db0 <validateOnOff@@Base>:
   19db0:	ldr	r2, [pc, #12]	; 19dc4 <validateOnOff@@Base+0x14>
   19db4:	ldr	r3, [pc, #12]	; 19dc8 <validateOnOff@@Base+0x18>
   19db8:	add	r2, pc, r2
   19dbc:	add	r3, pc, r3
   19dc0:	b	19d54 <validateFlag@@Base>
   19dc4:	strheq	r4, [r0], -r4	; <UNPREDICTABLE>
   19dc8:			; <UNDEFINED> instruction: 0x000037bc

00019dcc <validateYesNo@@Base>:
   19dcc:	ldr	r2, [pc, #12]	; 19de0 <validateYesNo@@Base+0x14>
   19dd0:	ldr	r3, [pc, #12]	; 19de4 <validateYesNo@@Base+0x18>
   19dd4:	add	r2, pc, r2
   19dd8:	add	r3, pc, r3
   19ddc:	b	19d54 <validateFlag@@Base>
   19de0:	andeq	r3, r0, r8, lsr #25
   19de4:	andeq	r3, r0, r8, lsr #25

00019de8 <isFloat@@Base>:
   19de8:	ldr	r3, [pc, #112]	; 19e60 <isFloat@@Base+0x78>
   19dec:	ldr	ip, [pc, #112]	; 19e64 <isFloat@@Base+0x7c>
   19df0:	add	r3, pc, r3
   19df4:	push	{r4, r5, lr}
   19df8:	sub	sp, sp, #12
   19dfc:	ldr	r4, [r3, ip]
   19e00:	mov	r5, r0
   19e04:	ldrb	r2, [r1]
   19e08:	ldr	r3, [r4]
   19e0c:	cmp	r2, #0
   19e10:	moveq	r0, r2
   19e14:	str	r3, [sp, #4]
   19e18:	beq	19e44 <isFloat@@Base+0x5c>
   19e1c:	mov	r0, r1
   19e20:	mov	r1, sp
   19e24:	bl	13c74 <strtod@plt>
   19e28:	ldr	r3, [sp]
   19e2c:	ldrb	r3, [r3]
   19e30:	cmp	r3, #0
   19e34:	moveq	r0, #1
   19e38:	movne	r0, #0
   19e3c:	vcvteq.f32.f64	s0, d0
   19e40:	vstreq	s0, [r5]
   19e44:	ldr	r1, [sp, #4]
   19e48:	ldr	r3, [r4]
   19e4c:	cmp	r1, r3
   19e50:	bne	19e5c <isFloat@@Base+0x74>
   19e54:	add	sp, sp, #12
   19e58:	pop	{r4, r5, pc}
   19e5c:	bl	13fec <__stack_chk_fail@plt>
   19e60:	andeq	r5, r1, r8, lsl #4
   19e64:	andeq	r0, r0, ip, ror #4

00019e68 <validateFloat@@Base>:
   19e68:	ldr	ip, [pc, #168]	; 19f18 <validateFloat@@Base+0xb0>
   19e6c:	push	{r4, r5, r6, r7, r8, lr}
   19e70:	add	ip, pc, ip
   19e74:	ldr	r4, [pc, #160]	; 19f1c <validateFloat@@Base+0xb4>
   19e78:	sub	sp, sp, #8
   19e7c:	ldrb	r5, [r1]
   19e80:	mov	r7, r0
   19e84:	mov	r6, r2
   19e88:	mov	r8, r3
   19e8c:	ldr	r4, [ip, r4]
   19e90:	cmp	r5, #0
   19e94:	moveq	r0, #1
   19e98:	ldr	ip, [r4]
   19e9c:	str	ip, [sp, #4]
   19ea0:	bne	19ebc <validateFloat@@Base+0x54>
   19ea4:	ldr	r2, [sp, #4]
   19ea8:	ldr	r3, [r4]
   19eac:	cmp	r2, r3
   19eb0:	bne	19f14 <validateFloat@@Base+0xac>
   19eb4:	add	sp, sp, #8
   19eb8:	pop	{r4, r5, r6, r7, r8, pc}
   19ebc:	mov	r0, sp
   19ec0:	bl	19de8 <isFloat@@Base>
   19ec4:	cmp	r0, #0
   19ec8:	beq	19f00 <validateFloat@@Base+0x98>
   19ecc:	cmp	r6, #0
   19ed0:	vldr	s15, [sp]
   19ed4:	beq	19ee8 <validateFloat@@Base+0x80>
   19ed8:	vldr	s14, [r6]
   19edc:	vcmpe.f32	s14, s15
   19ee0:	vmrs	APSR_nzcv, fpscr
   19ee4:	bgt	19f00 <validateFloat@@Base+0x98>
   19ee8:	cmp	r8, #0
   19eec:	beq	19f08 <validateFloat@@Base+0xa0>
   19ef0:	vldr	s14, [r8]
   19ef4:	vcmpe.f32	s14, s15
   19ef8:	vmrs	APSR_nzcv, fpscr
   19efc:	bpl	19f08 <validateFloat@@Base+0xa0>
   19f00:	mov	r0, #0
   19f04:	b	19ea4 <validateFloat@@Base+0x3c>
   19f08:	vstr	s15, [r7]
   19f0c:	mov	r0, #1
   19f10:	b	19ea4 <validateFloat@@Base+0x3c>
   19f14:	bl	13fec <__stack_chk_fail@plt>
   19f18:	andeq	r5, r1, r8, lsl #3
   19f1c:	andeq	r0, r0, ip, ror #4

00019f20 <getParameters@@Base>:
   19f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f24:	subs	r8, r0, #0
   19f28:	sub	sp, sp, #44	; 0x2c
   19f2c:	mov	r7, r2
   19f30:	str	r1, [sp, #8]
   19f34:	beq	1a250 <getParameters@@Base+0x330>
   19f38:	ldr	r4, [r8]
   19f3c:	cmp	r4, #0
   19f40:	beq	1a25c <getParameters@@Base+0x33c>
   19f44:	mov	r3, r8
   19f48:	mov	r4, #0
   19f4c:	ldr	r5, [r3, #4]!
   19f50:	add	r4, r4, #1
   19f54:	cmp	r5, #0
   19f58:	bne	19f4c <getParameters@@Base+0x2c>
   19f5c:	add	r0, r4, #1
   19f60:	lsl	r0, r0, #2
   19f64:	bl	13fbc <malloc@plt>
   19f68:	cmp	r0, #0
   19f6c:	str	r0, [sp, #4]
   19f70:	beq	1a290 <getParameters@@Base+0x370>
   19f74:	cmp	r4, #0
   19f78:	beq	1a270 <getParameters@@Base+0x350>
   19f7c:	sub	r6, r0, #4
   19f80:	b	19f90 <getParameters@@Base+0x70>
   19f84:	add	r5, r5, #1
   19f88:	cmp	r4, r5
   19f8c:	beq	19fc8 <getParameters@@Base+0xa8>
   19f90:	mov	r0, #1
   19f94:	mov	r1, r0
   19f98:	bl	13cb0 <calloc@plt>
   19f9c:	cmp	r0, #0
   19fa0:	str	r0, [r6, #4]!
   19fa4:	bne	19f84 <getParameters@@Base+0x64>
   19fa8:	bl	18368 <logMallocError@@Base>
   19fac:	cmp	r4, r5
   19fb0:	beq	19fc8 <getParameters@@Base+0xa8>
   19fb4:	ldr	r0, [sp, #4]
   19fb8:	bl	197b0 <deallocateStrings@@Base>
   19fbc:	mov	r0, #0
   19fc0:	add	sp, sp, #44	; 0x2c
   19fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19fc8:	lsl	r5, r5, #2
   19fcc:	ldr	r2, [sp, #4]
   19fd0:	cmp	r7, #0
   19fd4:	mov	r3, #0
   19fd8:	str	r3, [r2, r5]
   19fdc:	beq	19fec <getParameters@@Base+0xcc>
   19fe0:	ldrb	r3, [r7]
   19fe4:	cmp	r3, #0
   19fe8:	bne	19ff8 <getParameters@@Base+0xd8>
   19fec:	ldr	r0, [sp, #4]
   19ff0:	add	sp, sp, #44	; 0x2c
   19ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ff8:	mov	r0, r7
   19ffc:	bl	14154 <__strdup@plt>
   1a000:	cmp	r0, #0
   1a004:	str	r0, [sp, #20]
   1a008:	beq	1a288 <getParameters@@Base+0x368>
   1a00c:	ldr	r3, [pc, #648]	; 1a29c <getParameters@@Base+0x37c>
   1a010:	mov	r4, r0
   1a014:	ldr	r2, [pc, #644]	; 1a2a0 <getParameters@@Base+0x380>
   1a018:	add	r3, pc, r3
   1a01c:	str	r3, [sp, #32]
   1a020:	add	r2, pc, r2
   1a024:	ldr	r3, [pc, #632]	; 1a2a4 <getParameters@@Base+0x384>
   1a028:	str	r2, [sp, #36]	; 0x24
   1a02c:	ldr	r2, [pc, #628]	; 1a2a8 <getParameters@@Base+0x388>
   1a030:	add	r3, pc, r3
   1a034:	str	r3, [sp, #24]
   1a038:	add	r2, pc, r2
   1a03c:	ldr	r3, [pc, #616]	; 1a2ac <getParameters@@Base+0x38c>
   1a040:	str	r2, [sp, #28]
   1a044:	ldr	r2, [pc, #612]	; 1a2b0 <getParameters@@Base+0x390>
   1a048:	add	r3, pc, r3
   1a04c:	str	r3, [sp, #12]
   1a050:	add	r2, pc, r2
   1a054:	str	r2, [sp, #16]
   1a058:	b	1a078 <getParameters@@Base+0x158>
   1a05c:	ldr	r0, [sp, #8]
   1a060:	bl	13e48 <strlen@plt>
   1a064:	cmp	r9, r0
   1a068:	beq	1a140 <getParameters@@Base+0x220>
   1a06c:	cmp	r5, #0
   1a070:	bne	1a134 <getParameters@@Base+0x214>
   1a074:	add	r4, r6, #1
   1a078:	mov	r0, r4
   1a07c:	mov	r1, #44	; 0x2c
   1a080:	bl	13c80 <strchr@plt>
   1a084:	rsbs	r5, r0, #1
   1a088:	mov	r6, r0
   1a08c:	movcc	r5, #0
   1a090:	cmp	r5, #0
   1a094:	strbeq	r5, [r0]
   1a098:	ldrb	r3, [r4]
   1a09c:	cmp	r3, #0
   1a0a0:	beq	1a06c <getParameters@@Base+0x14c>
   1a0a4:	mov	r0, r4
   1a0a8:	mov	r1, #61	; 0x3d
   1a0ac:	bl	13c80 <strchr@plt>
   1a0b0:	subs	r3, r0, #0
   1a0b4:	str	r3, [sp]
   1a0b8:	beq	1a224 <getParameters@@Base+0x304>
   1a0bc:	ldr	r3, [sp]
   1a0c0:	cmp	r4, r3
   1a0c4:	beq	1a108 <getParameters@@Base+0x1e8>
   1a0c8:	ldr	r2, [sp, #8]
   1a0cc:	ldr	r3, [sp]
   1a0d0:	cmp	r2, #0
   1a0d4:	rsb	r7, r4, r3
   1a0d8:	beq	1a15c <getParameters@@Base+0x23c>
   1a0dc:	mov	r0, r4
   1a0e0:	mov	r1, #58	; 0x3a
   1a0e4:	mov	r2, r7
   1a0e8:	bl	1416c <memchr@plt>
   1a0ec:	cmp	r0, #0
   1a0f0:	beq	1a15c <getParameters@@Base+0x23c>
   1a0f4:	subs	r9, r0, r4
   1a0f8:	beq	1a1fc <getParameters@@Base+0x2dc>
   1a0fc:	add	sl, r9, #1
   1a100:	subs	r7, r7, sl
   1a104:	bne	1a05c <getParameters@@Base+0x13c>
   1a108:	ldr	r1, [sp, #12]
   1a10c:	mov	r2, #5
   1a110:	mov	r0, #0
   1a114:	bl	13dd0 <dcgettext@plt>
   1a118:	mov	r3, r4
   1a11c:	ldr	r1, [sp, #16]
   1a120:	mov	r2, r0
   1a124:	mov	r0, #3
   1a128:	bl	1825c <logMessage@@Base>
   1a12c:	cmp	r5, #0
   1a130:	beq	1a074 <getParameters@@Base+0x154>
   1a134:	ldr	r0, [sp, #20]
   1a138:	bl	13da0 <free@plt>
   1a13c:	b	19fec <getParameters@@Base+0xcc>
   1a140:	mov	r0, r4
   1a144:	mov	r2, r9
   1a148:	ldr	r1, [sp, #8]
   1a14c:	bl	13bc0 <memcmp@plt>
   1a150:	cmp	r0, #0
   1a154:	addeq	r4, r4, sl
   1a158:	bne	1a06c <getParameters@@Base+0x14c>
   1a15c:	ldr	r1, [r8]
   1a160:	cmp	r1, #0
   1a164:	beq	1a1d4 <getParameters@@Base+0x2b4>
   1a168:	add	fp, r8, #4
   1a16c:	mov	sl, r8
   1a170:	mov	r9, #0
   1a174:	b	1a18c <getParameters@@Base+0x26c>
   1a178:	rsb	r9, r8, fp
   1a17c:	mov	sl, fp
   1a180:	ldr	r1, [fp], #4
   1a184:	cmp	r1, #0
   1a188:	beq	1a1d4 <getParameters@@Base+0x2b4>
   1a18c:	mov	r0, r4
   1a190:	mov	r2, r7
   1a194:	bl	13f8c <strncasecmp@plt>
   1a198:	cmp	r0, #0
   1a19c:	bne	1a178 <getParameters@@Base+0x258>
   1a1a0:	ldr	r3, [sp]
   1a1a4:	add	r0, r3, #1
   1a1a8:	bl	14154 <__strdup@plt>
   1a1ac:	subs	r7, r0, #0
   1a1b0:	beq	1a278 <getParameters@@Base+0x358>
   1a1b4:	ldr	r2, [sp, #4]
   1a1b8:	ldr	r0, [r2, r9]
   1a1bc:	bl	13da0 <free@plt>
   1a1c0:	ldr	r3, [sp, #4]
   1a1c4:	str	r7, [r3, r9]
   1a1c8:	ldr	r3, [sl]
   1a1cc:	cmp	r3, #0
   1a1d0:	bne	1a06c <getParameters@@Base+0x14c>
   1a1d4:	ldr	r1, [sp, #32]
   1a1d8:	mov	r2, #5
   1a1dc:	mov	r0, #0
   1a1e0:	bl	13dd0 <dcgettext@plt>
   1a1e4:	mov	r3, r4
   1a1e8:	ldr	r1, [sp, #36]	; 0x24
   1a1ec:	mov	r2, r0
   1a1f0:	mov	r0, #3
   1a1f4:	bl	1825c <logMessage@@Base>
   1a1f8:	b	1a06c <getParameters@@Base+0x14c>
   1a1fc:	ldr	r1, [sp, #24]
   1a200:	mov	r0, r9
   1a204:	mov	r2, #5
   1a208:	bl	13dd0 <dcgettext@plt>
   1a20c:	mov	r3, r4
   1a210:	ldr	r1, [sp, #28]
   1a214:	mov	r2, r0
   1a218:	mov	r0, #3
   1a21c:	bl	1825c <logMessage@@Base>
   1a220:	b	1a06c <getParameters@@Base+0x14c>
   1a224:	ldr	r1, [pc, #136]	; 1a2b4 <getParameters@@Base+0x394>
   1a228:	mov	r2, #5
   1a22c:	add	r1, pc, r1
   1a230:	bl	13dd0 <dcgettext@plt>
   1a234:	ldr	r1, [pc, #124]	; 1a2b8 <getParameters@@Base+0x398>
   1a238:	mov	r3, r4
   1a23c:	add	r1, pc, r1
   1a240:	mov	r2, r0
   1a244:	mov	r0, #3
   1a248:	bl	1825c <logMessage@@Base>
   1a24c:	b	1a06c <getParameters@@Base+0x14c>
   1a250:	ldr	r8, [pc, #100]	; 1a2bc <getParameters@@Base+0x39c>
   1a254:	add	r8, pc, r8
   1a258:	b	19f38 <getParameters@@Base+0x18>
   1a25c:	mov	r0, #4
   1a260:	bl	13fbc <malloc@plt>
   1a264:	cmp	r0, #0
   1a268:	str	r0, [sp, #4]
   1a26c:	beq	1a290 <getParameters@@Base+0x370>
   1a270:	mov	r5, r4
   1a274:	b	19fcc <getParameters@@Base+0xac>
   1a278:	bl	18368 <logMallocError@@Base>
   1a27c:	ldr	r0, [sp, #20]
   1a280:	bl	13da0 <free@plt>
   1a284:	b	19fb4 <getParameters@@Base+0x94>
   1a288:	bl	18368 <logMallocError@@Base>
   1a28c:	b	19fb4 <getParameters@@Base+0x94>
   1a290:	bl	18368 <logMallocError@@Base>
   1a294:	mov	r0, #0
   1a298:	b	19ff0 <getParameters@@Base+0xd0>
   1a29c:			; <UNDEFINED> instruction: 0x00003ab8
   1a2a0:	andeq	r3, r0, r0, lsl sp
   1a2a4:	andeq	r3, r0, r4, lsl #21
   1a2a8:	strdeq	r3, [r0], -r8
   1a2ac:	andeq	r3, r0, r4, asr sl
   1a2b0:	andeq	r3, r0, r0, ror #25
   1a2b4:	andeq	r3, r0, r8, asr r8
   1a2b8:	strdeq	r3, [r0], -r4
   1a2bc:	andeq	r3, r0, r4, lsr #16

0001a2c0 <logParameters@@Base>:
   1a2c0:	cmp	r0, #0
   1a2c4:	cmpne	r1, #0
   1a2c8:	push	{r4, r5, r6, r7, lr}
   1a2cc:	mov	r4, r1
   1a2d0:	sub	sp, sp, #12
   1a2d4:	mov	r6, r2
   1a2d8:	beq	1a318 <logParameters@@Base+0x58>
   1a2dc:	ldr	r3, [r0]
   1a2e0:	cmp	r3, #0
   1a2e4:	beq	1a318 <logParameters@@Base+0x58>
   1a2e8:	ldr	r7, [pc, #48]	; 1a320 <logParameters@@Base+0x60>
   1a2ec:	mov	r5, r0
   1a2f0:	add	r7, pc, r7
   1a2f4:	ldr	ip, [r4], #4
   1a2f8:	mov	r0, #6
   1a2fc:	mov	r1, r7
   1a300:	mov	r2, r6
   1a304:	str	ip, [sp]
   1a308:	bl	1825c <logMessage@@Base>
   1a30c:	ldr	r3, [r5, #4]!
   1a310:	cmp	r3, #0
   1a314:	bne	1a2f4 <logParameters@@Base+0x34>
   1a318:	add	sp, sp, #12
   1a31c:	pop	{r4, r5, r6, r7, pc}
   1a320:	strdeq	r3, [r0], -r8

0001a324 <getCurrentTime@@Base>:
   1a324:	ldr	r3, [pc, #84]	; 1a380 <getCurrentTime@@Base+0x5c>
   1a328:	ldr	r2, [pc, #84]	; 1a384 <getCurrentTime@@Base+0x60>
   1a32c:	add	r3, pc, r3
   1a330:	push	{r4, r5, lr}
   1a334:	sub	sp, sp, #20
   1a338:	ldr	r4, [r3, r2]
   1a33c:	mov	r5, r0
   1a340:	add	r1, sp, #4
   1a344:	mov	r0, #0
   1a348:	ldr	r3, [r4]
   1a34c:	str	r3, [sp, #12]
   1a350:	bl	13bf0 <clock_gettime@plt>
   1a354:	ldr	r3, [sp, #4]
   1a358:	ldr	r2, [sp, #12]
   1a35c:	ldr	r1, [sp, #8]
   1a360:	str	r3, [r5]
   1a364:	ldr	r3, [r4]
   1a368:	str	r1, [r5, #4]
   1a36c:	cmp	r2, r3
   1a370:	bne	1a37c <getCurrentTime@@Base+0x58>
   1a374:	add	sp, sp, #20
   1a378:	pop	{r4, r5, pc}
   1a37c:	bl	13fec <__stack_chk_fail@plt>
   1a380:	andeq	r4, r1, ip, asr #25
   1a384:	andeq	r0, r0, ip, ror #4

0001a388 <makeTimeValue@@Base>:
   1a388:	ldr	r2, [pc, #164]	; 1a434 <makeTimeValue@@Base+0xac>
   1a38c:	mov	r3, #0
   1a390:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a394:	add	r2, pc, r2
   1a398:	ldr	r4, [pc, #152]	; 1a438 <makeTimeValue@@Base+0xb0>
   1a39c:	mov	r5, r0
   1a3a0:	ldr	lr, [r1, #8]
   1a3a4:	sub	sp, sp, #52	; 0x34
   1a3a8:	mvn	ip, #0
   1a3ac:	ldr	r4, [r2, r4]
   1a3b0:	mov	r0, sp
   1a3b4:	str	lr, [r5, #4]
   1a3b8:	ldrh	r9, [r1]
   1a3bc:	ldrb	r8, [r1, #6]
   1a3c0:	ldrb	r7, [r1, #5]
   1a3c4:	sub	r9, r9, #1888	; 0x760
   1a3c8:	ldrb	r6, [r1, #4]
   1a3cc:	sub	r9, r9, #12
   1a3d0:	ldrb	lr, [r1, #2]
   1a3d4:	ldr	r2, [r4]
   1a3d8:	ldrb	r1, [r1, #3]
   1a3dc:	str	r3, [sp, #24]
   1a3e0:	add	r1, r1, #1
   1a3e4:	str	r2, [sp, #44]	; 0x2c
   1a3e8:	str	r3, [sp, #28]
   1a3ec:	str	r3, [sp, #36]	; 0x24
   1a3f0:	str	r3, [sp, #40]	; 0x28
   1a3f4:	str	r9, [sp, #20]
   1a3f8:	str	r8, [sp]
   1a3fc:	str	r1, [sp, #12]
   1a400:	str	r7, [sp, #4]
   1a404:	str	r6, [sp, #8]
   1a408:	str	lr, [sp, #16]
   1a40c:	str	ip, [sp, #32]
   1a410:	bl	13ce0 <mktime@plt>
   1a414:	ldr	r3, [sp, #44]	; 0x2c
   1a418:	str	r0, [r5]
   1a41c:	ldr	r2, [r4]
   1a420:	cmp	r3, r2
   1a424:	bne	1a430 <makeTimeValue@@Base+0xa8>
   1a428:	add	sp, sp, #52	; 0x34
   1a42c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a430:	bl	13fec <__stack_chk_fail@plt>
   1a434:	andeq	r4, r1, r4, ror #24
   1a438:	andeq	r0, r0, ip, ror #4

0001a43c <expandTimeValue@@Base>:
   1a43c:	ldr	r2, [pc, #148]	; 1a4d8 <expandTimeValue@@Base+0x9c>
   1a440:	ldr	ip, [pc, #148]	; 1a4dc <expandTimeValue@@Base+0xa0>
   1a444:	add	r2, pc, r2
   1a448:	push	{r4, r5, r6, lr}
   1a44c:	mov	r6, r0
   1a450:	sub	sp, sp, #56	; 0x38
   1a454:	ldr	r5, [r2, ip]
   1a458:	ldr	r3, [r6]
   1a45c:	add	r0, sp, #56	; 0x38
   1a460:	mov	r4, r1
   1a464:	add	r1, sp, #8
   1a468:	str	r3, [r0, #-52]!	; 0xffffffcc
   1a46c:	ldr	r3, [r5]
   1a470:	str	r3, [sp, #52]	; 0x34
   1a474:	bl	13b90 <localtime_r@plt>
   1a478:	ldr	r1, [sp, #24]
   1a47c:	ldr	r3, [sp, #28]
   1a480:	ldr	r2, [sp, #20]
   1a484:	add	r3, r3, #1888	; 0x760
   1a488:	ldr	r0, [r6, #4]
   1a48c:	add	r3, r3, #12
   1a490:	strb	r1, [r4, #2]
   1a494:	sub	r2, r2, #1
   1a498:	ldr	ip, [sp, #52]	; 0x34
   1a49c:	strb	r2, [r4, #3]
   1a4a0:	strh	r3, [r4]
   1a4a4:	ldr	r3, [r5]
   1a4a8:	ldr	r1, [sp, #16]
   1a4ac:	ldr	r2, [sp, #12]
   1a4b0:	cmp	ip, r3
   1a4b4:	ldr	r3, [sp, #8]
   1a4b8:	str	r0, [r4, #8]
   1a4bc:	strb	r1, [r4, #4]
   1a4c0:	strb	r2, [r4, #5]
   1a4c4:	strb	r3, [r4, #6]
   1a4c8:	bne	1a4d4 <expandTimeValue@@Base+0x98>
   1a4cc:	add	sp, sp, #56	; 0x38
   1a4d0:	pop	{r4, r5, r6, pc}
   1a4d4:	bl	13fec <__stack_chk_fail@plt>
   1a4d8:			; <UNDEFINED> instruction: 0x00014bb4
   1a4dc:	andeq	r0, r0, ip, ror #4

0001a4e0 <formatSeconds@@Base>:
   1a4e0:	push	{r4, r5, r6, r7, r8, lr}
   1a4e4:	sub	sp, sp, #56	; 0x38
   1a4e8:	ldr	lr, [pc, #100]	; 1a554 <formatSeconds@@Base+0x74>
   1a4ec:	add	ip, sp, #56	; 0x38
   1a4f0:	ldr	r4, [pc, #96]	; 1a558 <formatSeconds@@Base+0x78>
   1a4f4:	add	r5, sp, #8
   1a4f8:	add	lr, pc, lr
   1a4fc:	mov	r7, r0
   1a500:	mov	r6, r1
   1a504:	mov	r8, r2
   1a508:	ldr	r4, [lr, r4]
   1a50c:	mov	r1, r5
   1a510:	str	r3, [ip, #-52]!	; 0xffffffcc
   1a514:	mov	r0, ip
   1a518:	ldr	r3, [r4]
   1a51c:	str	r3, [sp, #52]	; 0x34
   1a520:	bl	13b90 <localtime_r@plt>
   1a524:	mov	r2, r8
   1a528:	mov	r3, r5
   1a52c:	mov	r0, r7
   1a530:	mov	r1, r6
   1a534:	bl	14058 <strftime@plt>
   1a538:	ldr	r2, [sp, #52]	; 0x34
   1a53c:	ldr	r3, [r4]
   1a540:	cmp	r2, r3
   1a544:	bne	1a550 <formatSeconds@@Base+0x70>
   1a548:	add	sp, sp, #56	; 0x38
   1a54c:	pop	{r4, r5, r6, r7, r8, pc}
   1a550:	bl	13fec <__stack_chk_fail@plt>
   1a554:	andeq	r4, r1, r0, lsl #22
   1a558:	andeq	r0, r0, ip, ror #4

0001a55c <normalizeTimeValue@@Base>:
   1a55c:	ldr	r3, [r0, #4]
   1a560:	cmp	r3, #0
   1a564:	bge	1a590 <normalizeTimeValue@@Base+0x34>
   1a568:	ldr	r2, [r0]
   1a56c:	sub	r2, r2, #1
   1a570:	add	r3, r3, #998244352	; 0x3b800000
   1a574:	mov	r1, r2
   1a578:	add	r3, r3, #1753088	; 0x1ac000
   1a57c:	sub	r2, r2, #1
   1a580:	add	r3, r3, #2560	; 0xa00
   1a584:	cmp	r3, #0
   1a588:	blt	1a570 <normalizeTimeValue@@Base+0x14>
   1a58c:	stm	r0, {r1, r3}
   1a590:	movw	r1, #51711	; 0xc9ff
   1a594:	movt	r1, #15258	; 0x3b9a
   1a598:	cmp	r3, r1
   1a59c:	bxle	lr
   1a5a0:	mov	r2, #13824	; 0x3600
   1a5a4:	movt	r2, #50277	; 0xc465
   1a5a8:	add	r2, r3, r2
   1a5ac:	ldr	ip, [r0]
   1a5b0:	cmp	r2, r1
   1a5b4:	add	r1, ip, #1
   1a5b8:	addgt	ip, ip, #2
   1a5bc:	movgt	r2, #27648	; 0x6c00
   1a5c0:	movtgt	r2, #35018	; 0x88ca
   1a5c4:	addgt	r2, r3, r2
   1a5c8:	movle	ip, r1
   1a5cc:	str	r2, [r0, #4]
   1a5d0:	str	ip, [r0]
   1a5d4:	bx	lr

0001a5d8 <adjustTimeValue@@Base>:
   1a5d8:	movw	r3, #19923	; 0x4dd3
   1a5dc:	movt	r3, #4194	; 0x1062
   1a5e0:	ldr	ip, [pc, #148]	; 1a67c <adjustTimeValue@@Base+0xa4>
   1a5e4:	smull	r2, r3, r3, r1
   1a5e8:	add	ip, pc, ip
   1a5ec:	push	{r4, r5, r6, lr}
   1a5f0:	asr	r6, r1, #31
   1a5f4:	ldr	r5, [pc, #132]	; 1a680 <adjustTimeValue@@Base+0xa8>
   1a5f8:	sub	sp, sp, #16
   1a5fc:	mov	lr, #1000	; 0x3e8
   1a600:	movw	r2, #16960	; 0x4240
   1a604:	rsb	r3, r6, r3, asr #6
   1a608:	movt	r2, #15
   1a60c:	ldr	r5, [ip, r5]
   1a610:	mov	r4, r0
   1a614:	str	r3, [sp, #4]
   1a618:	mls	r3, lr, r3, r1
   1a61c:	ldr	r1, [r5]
   1a620:	str	r1, [sp, #12]
   1a624:	mul	r2, r2, r3
   1a628:	str	r2, [sp, #8]
   1a62c:	bl	1a55c <normalizeTimeValue@@Base>
   1a630:	add	r0, sp, #4
   1a634:	bl	1a55c <normalizeTimeValue@@Base>
   1a638:	ldr	r2, [r4, #4]
   1a63c:	ldr	ip, [r4]
   1a640:	mov	r0, r4
   1a644:	ldr	r1, [sp, #4]
   1a648:	ldr	r3, [sp, #8]
   1a64c:	add	r1, ip, r1
   1a650:	str	r1, [r4]
   1a654:	add	r3, r2, r3
   1a658:	str	r3, [r4, #4]
   1a65c:	bl	1a55c <normalizeTimeValue@@Base>
   1a660:	ldr	r2, [sp, #12]
   1a664:	ldr	r3, [r5]
   1a668:	cmp	r2, r3
   1a66c:	bne	1a678 <adjustTimeValue@@Base+0xa0>
   1a670:	add	sp, sp, #16
   1a674:	pop	{r4, r5, r6, pc}
   1a678:	bl	13fec <__stack_chk_fail@plt>
   1a67c:	andeq	r4, r1, r0, lsl sl
   1a680:	andeq	r0, r0, ip, ror #4

0001a684 <compareTimeValues@@Base>:
   1a684:	ldr	r2, [r0]
   1a688:	ldr	r3, [r1]
   1a68c:	cmp	r2, r3
   1a690:	blt	1a6bc <compareTimeValues@@Base+0x38>
   1a694:	bgt	1a6b4 <compareTimeValues@@Base+0x30>
   1a698:	ldr	r2, [r0, #4]
   1a69c:	ldr	r3, [r1, #4]
   1a6a0:	cmp	r2, r3
   1a6a4:	blt	1a6bc <compareTimeValues@@Base+0x38>
   1a6a8:	movle	r0, #0
   1a6ac:	movgt	r0, #1
   1a6b0:	bx	lr
   1a6b4:	mov	r0, #1
   1a6b8:	bx	lr
   1a6bc:	mvn	r0, #0
   1a6c0:	bx	lr

0001a6c4 <millisecondsBetween@@Base>:
   1a6c4:	ldr	r2, [pc, #124]	; 1a748 <millisecondsBetween@@Base+0x84>
   1a6c8:	mov	r3, r0
   1a6cc:	ldr	ip, [pc, #120]	; 1a74c <millisecondsBetween@@Base+0x88>
   1a6d0:	add	r2, pc, r2
   1a6d4:	push	{r4, r5, lr}
   1a6d8:	sub	sp, sp, #20
   1a6dc:	ldr	r4, [r2, ip]
   1a6e0:	add	r0, sp, #4
   1a6e4:	ldr	r5, [r1]
   1a6e8:	ldr	lr, [r1, #4]
   1a6ec:	ldm	r3, {r1, r2}
   1a6f0:	ldr	r3, [r4]
   1a6f4:	rsb	r1, r1, r5
   1a6f8:	rsb	r2, r2, lr
   1a6fc:	stmib	sp, {r1, r2}
   1a700:	str	r3, [sp, #12]
   1a704:	bl	1a55c <normalizeTimeValue@@Base>
   1a708:	ldr	r3, [sp, #8]
   1a70c:	movw	r2, #56963	; 0xde83
   1a710:	movt	r2, #17179	; 0x431b
   1a714:	ldr	r5, [sp, #12]
   1a718:	ldr	ip, [r4]
   1a71c:	mov	r0, #1000	; 0x3e8
   1a720:	smull	r1, r2, r2, r3
   1a724:	asr	r3, r3, #31
   1a728:	ldr	r1, [sp, #4]
   1a72c:	cmp	r5, ip
   1a730:	rsb	r3, r3, r2, asr #18
   1a734:	mla	r0, r0, r1, r3
   1a738:	bne	1a744 <millisecondsBetween@@Base+0x80>
   1a73c:	add	sp, sp, #20
   1a740:	pop	{r4, r5, pc}
   1a744:	bl	13fec <__stack_chk_fail@plt>
   1a748:	andeq	r4, r1, r8, lsr #18
   1a74c:	andeq	r0, r0, ip, ror #4

0001a750 <getMonotonicTime@@Base>:
   1a750:	ldr	r3, [pc, #84]	; 1a7ac <getMonotonicTime@@Base+0x5c>
   1a754:	ldr	r2, [pc, #84]	; 1a7b0 <getMonotonicTime@@Base+0x60>
   1a758:	add	r3, pc, r3
   1a75c:	push	{r4, r5, lr}
   1a760:	sub	sp, sp, #20
   1a764:	ldr	r4, [r3, r2]
   1a768:	mov	r5, r0
   1a76c:	add	r1, sp, #4
   1a770:	mov	r0, #1
   1a774:	ldr	r3, [r4]
   1a778:	str	r3, [sp, #12]
   1a77c:	bl	13bf0 <clock_gettime@plt>
   1a780:	ldr	r3, [sp, #4]
   1a784:	ldr	r2, [sp, #12]
   1a788:	ldr	r1, [sp, #8]
   1a78c:	str	r3, [r5]
   1a790:	ldr	r3, [r4]
   1a794:	str	r1, [r5, #4]
   1a798:	cmp	r2, r3
   1a79c:	bne	1a7a8 <getMonotonicTime@@Base+0x58>
   1a7a0:	add	sp, sp, #20
   1a7a4:	pop	{r4, r5, pc}
   1a7a8:	bl	13fec <__stack_chk_fail@plt>
   1a7ac:	andeq	r4, r1, r0, lsr #17
   1a7b0:	andeq	r0, r0, ip, ror #4

0001a7b4 <getMonotonicElapsed@@Base>:
   1a7b4:	ldr	r3, [pc, #80]	; 1a80c <getMonotonicElapsed@@Base+0x58>
   1a7b8:	ldr	r2, [pc, #80]	; 1a810 <getMonotonicElapsed@@Base+0x5c>
   1a7bc:	add	r3, pc, r3
   1a7c0:	push	{r4, r5, r6, lr}
   1a7c4:	sub	sp, sp, #16
   1a7c8:	ldr	r4, [r3, r2]
   1a7cc:	add	r5, sp, #4
   1a7d0:	mov	r6, r0
   1a7d4:	mov	r0, r5
   1a7d8:	ldr	r3, [r4]
   1a7dc:	str	r3, [sp, #12]
   1a7e0:	bl	1a750 <getMonotonicTime@@Base>
   1a7e4:	mov	r0, r6
   1a7e8:	mov	r1, r5
   1a7ec:	bl	1a6c4 <millisecondsBetween@@Base>
   1a7f0:	ldr	r2, [sp, #12]
   1a7f4:	ldr	r3, [r4]
   1a7f8:	cmp	r2, r3
   1a7fc:	bne	1a808 <getMonotonicElapsed@@Base+0x54>
   1a800:	add	sp, sp, #16
   1a804:	pop	{r4, r5, r6, pc}
   1a808:	bl	13fec <__stack_chk_fail@plt>
   1a80c:	andeq	r4, r1, ip, lsr r8
   1a810:	andeq	r0, r0, ip, ror #4

0001a814 <restartTimePeriod@@Base>:
   1a814:	b	1a750 <getMonotonicTime@@Base>

0001a818 <startTimePeriod@@Base>:
   1a818:	str	r1, [r0, #8]
   1a81c:	b	1a814 <restartTimePeriod@@Base>

0001a820 <afterTimePeriod@@Base>:
   1a820:	push	{r3, r4, r5, lr}
   1a824:	mov	r4, r1
   1a828:	mov	r5, r0
   1a82c:	bl	1a7b4 <getMonotonicElapsed@@Base>
   1a830:	cmp	r4, #0
   1a834:	strne	r0, [r4]
   1a838:	ldr	r3, [r5, #8]
   1a83c:	cmp	r0, r3
   1a840:	movlt	r0, #0
   1a844:	movge	r0, #1
   1a848:	pop	{r3, r4, r5, pc}

0001a84c <approximateDelay@@Base>:
   1a84c:	ldr	r3, [pc, #160]	; 1a8f4 <approximateDelay@@Base+0xa8>
   1a850:	subs	r2, r0, #0
   1a854:	ldr	r1, [pc, #156]	; 1a8f8 <approximateDelay@@Base+0xac>
   1a858:	add	r3, pc, r3
   1a85c:	push	{r4, r5, lr}
   1a860:	sub	sp, sp, #20
   1a864:	ldr	r4, [r3, r1]
   1a868:	ldr	r3, [r4]
   1a86c:	str	r3, [sp, #12]
   1a870:	ble	1a8b8 <approximateDelay@@Base+0x6c>
   1a874:	movw	r1, #19923	; 0x4dd3
   1a878:	movt	r1, #4194	; 0x1062
   1a87c:	asr	r5, r2, #31
   1a880:	mov	lr, #1000	; 0x3e8
   1a884:	smull	r3, ip, r1, r2
   1a888:	movw	r3, #16960	; 0x4240
   1a88c:	movt	r3, #15
   1a890:	add	r0, sp, #4
   1a894:	mov	r1, #0
   1a898:	rsb	ip, r5, ip, asr #6
   1a89c:	str	ip, [sp, #4]
   1a8a0:	mls	r2, lr, ip, r2
   1a8a4:	mul	r3, r3, r2
   1a8a8:	str	r3, [sp, #8]
   1a8ac:	bl	14124 <nanosleep@plt>
   1a8b0:	cmn	r0, #1
   1a8b4:	beq	1a8d0 <approximateDelay@@Base+0x84>
   1a8b8:	ldr	r2, [sp, #12]
   1a8bc:	ldr	r3, [r4]
   1a8c0:	cmp	r2, r3
   1a8c4:	bne	1a8f0 <approximateDelay@@Base+0xa4>
   1a8c8:	add	sp, sp, #20
   1a8cc:	pop	{r4, r5, pc}
   1a8d0:	bl	1419c <__errno_location@plt>
   1a8d4:	ldr	r3, [r0]
   1a8d8:	cmp	r3, #4
   1a8dc:	beq	1a8b8 <approximateDelay@@Base+0x6c>
   1a8e0:	ldr	r0, [pc, #20]	; 1a8fc <approximateDelay@@Base+0xb0>
   1a8e4:	add	r0, pc, r0
   1a8e8:	bl	18324 <logSystemError@@Base>
   1a8ec:	b	1a8b8 <approximateDelay@@Base+0x6c>
   1a8f0:	bl	13fec <__stack_chk_fail@plt>
   1a8f4:	andeq	r4, r1, r0, lsr #15
   1a8f8:	andeq	r0, r0, ip, ror #4
   1a8fc:	andeq	r3, r0, r0, lsl r2

0001a900 <accurateDelay@@Base>:
   1a900:	ldr	r3, [pc, #184]	; 1a9c0 <accurateDelay@@Base+0xc0>
   1a904:	ldr	r2, [pc, #184]	; 1a9c4 <accurateDelay@@Base+0xc4>
   1a908:	push	{r4, r5, r6, r7, lr}
   1a90c:	add	r3, pc, r3
   1a910:	ldr	r4, [pc, #176]	; 1a9c8 <accurateDelay@@Base+0xc8>
   1a914:	sub	sp, sp, #20
   1a918:	ldr	r6, [r3, r2]
   1a91c:	mov	r5, r0
   1a920:	add	r4, pc, r4
   1a924:	ldr	r1, [r4]
   1a928:	ldr	r3, [r6]
   1a92c:	cmp	r1, #0
   1a930:	str	r3, [sp, #12]
   1a934:	movne	r7, r1
   1a938:	bne	1a964 <accurateDelay@@Base+0x64>
   1a93c:	mov	r0, #2
   1a940:	bl	13bcc <sysconf@plt>
   1a944:	mov	r1, r0
   1a948:	mov	r0, #1000	; 0x3e8
   1a94c:	bl	1c954 <releaseAllKeys@@Base+0x6c>
   1a950:	cmp	r0, #0
   1a954:	strne	r0, [r4]
   1a958:	movne	r7, r0
   1a95c:	moveq	r7, #1
   1a960:	streq	r7, [r4]
   1a964:	mov	r1, r5
   1a968:	mov	r0, sp
   1a96c:	bl	1a818 <startTimePeriod@@Base>
   1a970:	cmp	r7, r5
   1a974:	ble	1a9a4 <accurateDelay@@Base+0xa4>
   1a978:	mov	r0, sp
   1a97c:	mov	r1, #0
   1a980:	bl	1a820 <afterTimePeriod@@Base>
   1a984:	cmp	r0, #0
   1a988:	beq	1a978 <accurateDelay@@Base+0x78>
   1a98c:	ldr	r2, [sp, #12]
   1a990:	ldr	r3, [r6]
   1a994:	cmp	r2, r3
   1a998:	bne	1a9bc <accurateDelay@@Base+0xbc>
   1a99c:	add	sp, sp, #20
   1a9a0:	pop	{r4, r5, r6, r7, pc}
   1a9a4:	mov	r0, r5
   1a9a8:	mov	r1, r7
   1a9ac:	bl	1c954 <releaseAllKeys@@Base+0x6c>
   1a9b0:	mul	r0, r0, r7
   1a9b4:	bl	1a84c <approximateDelay@@Base>
   1a9b8:	b	1a978 <accurateDelay@@Base+0x78>
   1a9bc:	bl	13fec <__stack_chk_fail@plt>
   1a9c0:	andeq	r4, r1, ip, ror #13
   1a9c4:	andeq	r0, r0, ip, ror #4
   1a9c8:	andeq	r8, r1, r4, ror #19
   1a9cc:	ldr	r3, [pc, #236]	; 1aac0 <accurateDelay@@Base+0x1c0>
   1a9d0:	ldr	ip, [pc, #236]	; 1aac4 <accurateDelay@@Base+0x1c4>
   1a9d4:	add	r3, pc, r3
   1a9d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a9dc:	sub	sp, sp, #16
   1a9e0:	ldr	r5, [r3, ip]
   1a9e4:	add	sl, sp, #4
   1a9e8:	mov	r9, r0
   1a9ec:	mov	r6, r1
   1a9f0:	mov	r8, r2
   1a9f4:	mov	r7, #0
   1a9f8:	ldr	r3, [r5]
   1a9fc:	str	r3, [sp, #12]
   1aa00:	cmp	r8, #0
   1aa04:	mov	r1, #1
   1aa08:	mov	r0, sl
   1aa0c:	mov	r2, r6
   1aa10:	moveq	r3, r1
   1aa14:	movne	r3, #4
   1aa18:	str	r7, [sp, #8]
   1aa1c:	str	r9, [sp, #4]
   1aa20:	strh	r3, [sp, #8]
   1aa24:	bl	14010 <poll@plt>
   1aa28:	cmn	r0, #1
   1aa2c:	mov	r4, r0
   1aa30:	bne	1aa70 <accurateDelay@@Base+0x170>
   1aa34:	bl	1419c <__errno_location@plt>
   1aa38:	ldr	r3, [r0]
   1aa3c:	cmp	r3, #4
   1aa40:	beq	1aa00 <accurateDelay@@Base+0x100>
   1aa44:	ldr	r0, [pc, #124]	; 1aac8 <accurateDelay@@Base+0x1c8>
   1aa48:	mov	r4, #0
   1aa4c:	add	r0, pc, r0
   1aa50:	bl	18324 <logSystemError@@Base>
   1aa54:	ldr	r2, [sp, #12]
   1aa58:	mov	r0, r4
   1aa5c:	ldr	r3, [r5]
   1aa60:	cmp	r2, r3
   1aa64:	bne	1aabc <accurateDelay@@Base+0x1bc>
   1aa68:	add	sp, sp, #16
   1aa6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1aa70:	cmp	r0, #0
   1aa74:	movne	r4, #1
   1aa78:	bne	1aa54 <accurateDelay@@Base+0x154>
   1aa7c:	cmp	r6, #0
   1aa80:	ble	1aaac <accurateDelay@@Base+0x1ac>
   1aa84:	ldr	r3, [pc, #64]	; 1aacc <accurateDelay@@Base+0x1cc>
   1aa88:	cmp	r6, #1
   1aa8c:	add	r3, pc, r3
   1aa90:	ldrne	r3, [pc, #56]	; 1aad0 <accurateDelay@@Base+0x1d0>
   1aa94:	addne	r3, pc, r3
   1aa98:	ldr	r1, [pc, #52]	; 1aad4 <accurateDelay@@Base+0x1d4>
   1aa9c:	mov	r2, r6
   1aaa0:	mov	r0, #7
   1aaa4:	add	r1, pc, r1
   1aaa8:	bl	1825c <logMessage@@Base>
   1aaac:	bl	1419c <__errno_location@plt>
   1aab0:	mov	r3, #11
   1aab4:	str	r3, [r0]
   1aab8:	b	1aa54 <accurateDelay@@Base+0x154>
   1aabc:	bl	13fec <__stack_chk_fail@plt>
   1aac0:	andeq	r4, r1, r4, lsr #12
   1aac4:	andeq	r0, r0, ip, ror #4
   1aac8:	ldrdeq	r3, [r0], -r0
   1aacc:	andeq	r3, r0, r4, ror r0
   1aad0:	andeq	r3, r0, r8, ror r0
   1aad4:	andeq	r3, r0, r0, lsl #1

0001aad8 <awaitInput@@Base>:
   1aad8:	mov	r2, #0
   1aadc:	b	1a9cc <accurateDelay@@Base+0xcc>

0001aae0 <readChunk@@Base>:
   1aae0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1aae4:	subs	r4, r3, #0
   1aae8:	mov	r6, r0
   1aaec:	mov	r7, r1
   1aaf0:	mov	r5, r2
   1aaf4:	ldr	r9, [sp, #32]
   1aaf8:	ldr	r8, [sp, #36]	; 0x24
   1aafc:	bne	1ab1c <readChunk@@Base+0x3c>
   1ab00:	b	1abb4 <readChunk@@Base+0xd4>
   1ab04:	ldr	r3, [r5]
   1ab08:	rsb	r4, r0, r4
   1ab0c:	add	r0, r3, r0
   1ab10:	str	r0, [r5]
   1ab14:	cmp	r4, #0
   1ab18:	beq	1abb4 <readChunk@@Base+0xd4>
   1ab1c:	ldr	r1, [r5]
   1ab20:	mov	r0, r6
   1ab24:	mov	r2, r4
   1ab28:	add	r1, r7, r1
   1ab2c:	bl	13dac <read@plt>
   1ab30:	cmn	r0, #1
   1ab34:	beq	1ab88 <readChunk@@Base+0xa8>
   1ab38:	cmp	r0, #0
   1ab3c:	bne	1ab04 <readChunk@@Base+0x24>
   1ab40:	ldr	sl, [r5]
   1ab44:	mov	r0, r6
   1ab48:	cmp	sl, #0
   1ab4c:	moveq	sl, r9
   1ab50:	movne	sl, r8
   1ab54:	cmp	sl, #0
   1ab58:	mov	r1, sl
   1ab5c:	beq	1abc0 <readChunk@@Base+0xe0>
   1ab60:	bl	1aad8 <awaitInput@@Base>
   1ab64:	subs	sl, r0, #0
   1ab68:	bne	1ab14 <readChunk@@Base+0x34>
   1ab6c:	ldr	r1, [pc, #92]	; 1abd0 <readChunk@@Base+0xf0>
   1ab70:	mov	r0, #4
   1ab74:	ldr	r2, [r5]
   1ab78:	add	r1, pc, r1
   1ab7c:	bl	1825c <logMessage@@Base>
   1ab80:	mov	r0, sl
   1ab84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ab88:	bl	1419c <__errno_location@plt>
   1ab8c:	ldr	r3, [r0]
   1ab90:	cmp	r3, #4
   1ab94:	beq	1ab14 <readChunk@@Base+0x34>
   1ab98:	cmp	r3, #11
   1ab9c:	beq	1ab40 <readChunk@@Base+0x60>
   1aba0:	ldr	r0, [pc, #44]	; 1abd4 <readChunk@@Base+0xf4>
   1aba4:	mov	sl, #0
   1aba8:	add	r0, pc, r0
   1abac:	bl	18324 <logSystemError@@Base>
   1abb0:	b	1ab80 <readChunk@@Base+0xa0>
   1abb4:	mov	sl, #1
   1abb8:	mov	r0, sl
   1abbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1abc0:	bl	1419c <__errno_location@plt>
   1abc4:	mov	r3, #11
   1abc8:	str	r3, [r0]
   1abcc:	b	1ab80 <readChunk@@Base+0xa0>
   1abd0:	andeq	r2, r0, r0, asr #31
   1abd4:	andeq	r2, r0, r8, asr #18

0001abd8 <readData@@Base>:
   1abd8:	push	{r4, r5, r6, lr}
   1abdc:	sub	sp, sp, #16
   1abe0:	ldr	lr, [pc, #116]	; 1ac5c <readData@@Base+0x84>
   1abe4:	add	ip, sp, #16
   1abe8:	ldr	r4, [pc, #112]	; 1ac60 <readData@@Base+0x88>
   1abec:	mov	r5, r2
   1abf0:	add	lr, pc, lr
   1abf4:	ldr	r6, [sp, #32]
   1abf8:	mov	r2, #0
   1abfc:	ldr	r4, [lr, r4]
   1ac00:	str	r3, [sp]
   1ac04:	mov	r3, r5
   1ac08:	str	r2, [ip, #-8]!
   1ac0c:	mov	r2, ip
   1ac10:	ldr	ip, [r4]
   1ac14:	str	r6, [sp, #4]
   1ac18:	str	ip, [sp, #12]
   1ac1c:	bl	1aae0 <readChunk@@Base>
   1ac20:	cmp	r0, #0
   1ac24:	movne	r0, r5
   1ac28:	bne	1ac40 <readData@@Base+0x68>
   1ac2c:	bl	1419c <__errno_location@plt>
   1ac30:	ldr	r3, [r0]
   1ac34:	cmp	r3, #11
   1ac38:	ldreq	r0, [sp, #8]
   1ac3c:	mvnne	r0, #0
   1ac40:	ldr	r2, [sp, #12]
   1ac44:	ldr	r3, [r4]
   1ac48:	cmp	r2, r3
   1ac4c:	bne	1ac58 <readData@@Base+0x80>
   1ac50:	add	sp, sp, #16
   1ac54:	pop	{r4, r5, r6, pc}
   1ac58:	bl	13fec <__stack_chk_fail@plt>
   1ac5c:	andeq	r4, r1, r8, lsl #8
   1ac60:	andeq	r0, r0, ip, ror #4

0001ac64 <awaitOutput@@Base>:
   1ac64:	mov	r2, #1
   1ac68:	b	1a9cc <accurateDelay@@Base+0xcc>

0001ac6c <writeData@@Base>:
   1ac6c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1ac70:	subs	r6, r2, #0
   1ac74:	mov	r4, r0
   1ac78:	mov	r9, r1
   1ac7c:	beq	1ad34 <writeData@@Base+0xc8>
   1ac80:	mov	r7, r1
   1ac84:	mov	r8, #11
   1ac88:	mov	r0, r4
   1ac8c:	mov	r1, r7
   1ac90:	mov	r2, r6
   1ac94:	bl	13db8 <write@plt>
   1ac98:	cmn	r0, #1
   1ac9c:	mov	r5, r0
   1aca0:	beq	1ad00 <writeData@@Base+0x94>
   1aca4:	cmp	r0, #0
   1aca8:	bne	1acec <writeData@@Base+0x80>
   1acac:	bl	1419c <__errno_location@plt>
   1acb0:	str	r8, [r0]
   1acb4:	b	1acc8 <writeData@@Base+0x5c>
   1acb8:	bl	1419c <__errno_location@plt>
   1acbc:	ldr	r3, [r0]
   1acc0:	cmp	r3, #11
   1acc4:	bne	1ad2c <writeData@@Base+0xc0>
   1acc8:	mov	r0, r4
   1accc:	movw	r1, #15000	; 0x3a98
   1acd0:	bl	1ac64 <awaitOutput@@Base>
   1acd4:	cmp	r0, #0
   1acd8:	beq	1acb8 <writeData@@Base+0x4c>
   1acdc:	cmp	r6, #0
   1ace0:	bne	1ac88 <writeData@@Base+0x1c>
   1ace4:	rsb	r0, r9, r7
   1ace8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1acec:	rsb	r6, r0, r6
   1acf0:	add	r7, r7, r0
   1acf4:	cmp	r6, #0
   1acf8:	bne	1ac88 <writeData@@Base+0x1c>
   1acfc:	b	1ace4 <writeData@@Base+0x78>
   1ad00:	bl	1419c <__errno_location@plt>
   1ad04:	ldr	r3, [r0]
   1ad08:	cmp	r3, #4
   1ad0c:	beq	1acdc <writeData@@Base+0x70>
   1ad10:	cmp	r3, #11
   1ad14:	beq	1acc8 <writeData@@Base+0x5c>
   1ad18:	ldr	r0, [pc, #28]	; 1ad3c <writeData@@Base+0xd0>
   1ad1c:	add	r0, pc, r0
   1ad20:	bl	18324 <logSystemError@@Base>
   1ad24:	mov	r0, r5
   1ad28:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1ad2c:	mvn	r0, #0
   1ad30:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1ad34:	mov	r0, r6
   1ad38:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1ad3c:	andeq	r2, r0, ip, lsr lr

0001ad40 <changeOpenFlags@@Base>:
   1ad40:	push	{r4, r5, r6, lr}
   1ad44:	mov	r5, r1
   1ad48:	mov	r1, #3
   1ad4c:	mov	r6, r2
   1ad50:	mov	r4, r0
   1ad54:	bl	14094 <fcntl@plt>
   1ad58:	cmn	r0, #1
   1ad5c:	beq	1ad84 <changeOpenFlags@@Base+0x44>
   1ad60:	bic	r2, r0, r5
   1ad64:	mov	r1, #4
   1ad68:	mov	r0, r4
   1ad6c:	orr	r2, r2, r6
   1ad70:	bl	14094 <fcntl@plt>
   1ad74:	cmn	r0, #1
   1ad78:	beq	1ad98 <changeOpenFlags@@Base+0x58>
   1ad7c:	mov	r0, #1
   1ad80:	pop	{r4, r5, r6, pc}
   1ad84:	ldr	r0, [pc, #32]	; 1adac <changeOpenFlags@@Base+0x6c>
   1ad88:	add	r0, pc, r0
   1ad8c:	bl	18324 <logSystemError@@Base>
   1ad90:	mov	r0, #0
   1ad94:	pop	{r4, r5, r6, pc}
   1ad98:	ldr	r0, [pc, #16]	; 1adb0 <changeOpenFlags@@Base+0x70>
   1ad9c:	add	r0, pc, r0
   1ada0:	bl	18324 <logSystemError@@Base>
   1ada4:	mov	r0, #0
   1ada8:	pop	{r4, r5, r6, pc}
   1adac:	andeq	r2, r0, r0, ror #27
   1adb0:	andeq	r2, r0, r4, asr #27

0001adb4 <setOpenFlags@@Base>:
   1adb4:	subs	r3, r1, #0
   1adb8:	mov	r1, r2
   1adbc:	bne	1adc8 <setOpenFlags@@Base+0x14>
   1adc0:	mov	r2, r3
   1adc4:	b	1ad40 <changeOpenFlags@@Base>
   1adc8:	mov	r1, #0
   1adcc:	b	1ad40 <changeOpenFlags@@Base>

0001add0 <setBlockingIo@@Base>:
   1add0:	rsbs	r1, r1, #1
   1add4:	mov	r2, #2048	; 0x800
   1add8:	push	{r3, lr}
   1addc:	movcc	r1, #0
   1ade0:	bl	1adb4 <setOpenFlags@@Base>
   1ade4:	adds	r0, r0, #0
   1ade8:	movne	r0, #1
   1adec:	pop	{r3, pc}

0001adf0 <setCloseOnExec@@Base>:
   1adf0:	adds	r2, r1, #0
   1adf4:	mov	r1, #2
   1adf8:	push	{r3, lr}
   1adfc:	movne	r2, #1
   1ae00:	bl	14094 <fcntl@plt>
   1ae04:	adds	r0, r0, #1
   1ae08:	movne	r0, #1
   1ae0c:	pop	{r3, pc}
   1ae10:	push	{lr}		; (str lr, [sp, #-4]!)
   1ae14:	sub	sp, sp, #12
   1ae18:	add	r2, sp, #8
   1ae1c:	str	r1, [r2, #-4]!
   1ae20:	movw	r1, #20485	; 0x5005
   1ae24:	movt	r1, #49156	; 0xc004
   1ae28:	bl	13e30 <ioctl@plt>
   1ae2c:	cmn	r0, #1
   1ae30:	moveq	r0, #8
   1ae34:	beq	1ae6c <setCloseOnExec@@Base+0x7c>
   1ae38:	ldr	r1, [sp, #4]
   1ae3c:	cmp	r1, #8
   1ae40:	beq	1ae74 <setCloseOnExec@@Base+0x84>
   1ae44:	ldr	r3, [pc, #48]	; 1ae7c <setCloseOnExec@@Base+0x8c>
   1ae48:	add	r3, pc, r3
   1ae4c:	b	1ae5c <setCloseOnExec@@Base+0x6c>
   1ae50:	ldr	r2, [r3, #4]
   1ae54:	cmp	r2, r1
   1ae58:	beq	1ae6c <setCloseOnExec@@Base+0x7c>
   1ae5c:	ldr	r0, [r3, #8]
   1ae60:	add	r3, r3, #8
   1ae64:	cmp	r0, #8
   1ae68:	bne	1ae50 <setCloseOnExec@@Base+0x60>
   1ae6c:	add	sp, sp, #12
   1ae70:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae74:	mov	r0, #0
   1ae78:	b	1ae6c <setCloseOnExec@@Base+0x7c>
   1ae7c:	andeq	r2, r0, r8, lsr #26

0001ae80 <getProgramPath@@Base>:
   1ae80:	push	{r3, r4, r5, r6, r7, lr}
   1ae84:	mov	r6, #0
   1ae88:	ldr	r7, [pc, #184]	; 1af48 <getProgramPath@@Base+0xc8>
   1ae8c:	mov	r4, #128	; 0x80
   1ae90:	add	r7, pc, r7
   1ae94:	b	1aeb4 <getProgramPath@@Base+0x34>
   1ae98:	bl	140a0 <readlink@plt>
   1ae9c:	mov	r6, r5
   1aea0:	cmn	r0, #1
   1aea4:	mov	r3, r0
   1aea8:	beq	1aeec <getProgramPath@@Base+0x6c>
   1aeac:	cmp	r4, r0
   1aeb0:	bhi	1af28 <getProgramPath@@Base+0xa8>
   1aeb4:	lsl	r4, r4, #1
   1aeb8:	mov	r0, r6
   1aebc:	mov	r1, r4
   1aec0:	bl	1413c <realloc@plt>
   1aec4:	mov	r2, r4
   1aec8:	subs	r5, r0, #0
   1aecc:	mov	r0, r7
   1aed0:	mov	r1, r5
   1aed4:	bne	1ae98 <getProgramPath@@Base+0x18>
   1aed8:	bl	18368 <logMallocError@@Base>
   1aedc:	cmp	r6, #0
   1aee0:	bne	1af10 <getProgramPath@@Base+0x90>
   1aee4:	mov	r0, r6
   1aee8:	pop	{r3, r4, r5, r6, r7, pc}
   1aeec:	bl	1419c <__errno_location@plt>
   1aef0:	ldr	r3, [r0]
   1aef4:	cmp	r3, #2
   1aef8:	beq	1af14 <getProgramPath@@Base+0x94>
   1aefc:	ldr	r0, [pc, #72]	; 1af4c <getProgramPath@@Base+0xcc>
   1af00:	mov	r6, #0
   1af04:	add	r0, pc, r0
   1af08:	bl	18324 <logSystemError@@Base>
   1af0c:	b	1af18 <getProgramPath@@Base+0x98>
   1af10:	mov	r5, r6
   1af14:	mov	r6, #0
   1af18:	mov	r0, r5
   1af1c:	bl	13da0 <free@plt>
   1af20:	mov	r0, r6
   1af24:	pop	{r3, r4, r5, r6, r7, pc}
   1af28:	mov	r2, #0
   1af2c:	mov	r0, r5
   1af30:	strb	r2, [r5, r3]
   1af34:	bl	14154 <__strdup@plt>
   1af38:	subs	r6, r0, #0
   1af3c:	bne	1af18 <getProgramPath@@Base+0x98>
   1af40:	bl	18368 <logMallocError@@Base>
   1af44:	b	1af18 <getProgramPath@@Base+0x98>
   1af48:	andeq	r2, r0, r8, lsr #26
   1af4c:	andeq	r2, r0, r4, asr #25

0001af50 <getBootParameters@@Base>:
   1af50:	ldr	r3, [pc, #280]	; 1b070 <getBootParameters@@Base+0x120>
   1af54:	ldr	r2, [pc, #280]	; 1b074 <getBootParameters@@Base+0x124>
   1af58:	add	r3, pc, r3
   1af5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af60:	sub	sp, sp, #4096	; 0x1000
   1af64:	ldr	r7, [r3, r2]
   1af68:	sub	sp, sp, #12
   1af6c:	add	r2, sp, #8192	; 0x2000
   1af70:	mov	r6, r0
   1af74:	ldr	r3, [r7]
   1af78:	str	r3, [r2, #-4092]	; 0xfffff004
   1af7c:	bl	13e48 <strlen@plt>
   1af80:	mov	r4, r0
   1af84:	mov	r0, #1
   1af88:	mov	r1, r0
   1af8c:	bl	13cb0 <calloc@plt>
   1af90:	subs	r8, r0, #0
   1af94:	beq	1b05c <getBootParameters@@Base+0x10c>
   1af98:	ldr	r0, [pc, #216]	; 1b078 <getBootParameters@@Base+0x128>
   1af9c:	ldr	r1, [pc, #216]	; 1b07c <getBootParameters@@Base+0x12c>
   1afa0:	add	r0, pc, r0
   1afa4:	add	r1, pc, r1
   1afa8:	bl	13cd4 <fopen@plt>
   1afac:	subs	r9, r0, #0
   1afb0:	beq	1b018 <getBootParameters@@Base+0xc8>
   1afb4:	mov	r1, #4096	; 0x1000
   1afb8:	add	r0, sp, #4
   1afbc:	mov	r2, r9
   1afc0:	bl	13c5c <fgets@plt>
   1afc4:	cmp	r0, #0
   1afc8:	beq	1b010 <getBootParameters@@Base+0xc0>
   1afcc:	ldr	r5, [pc, #172]	; 1b080 <getBootParameters@@Base+0x130>
   1afd0:	add	sl, r4, #1
   1afd4:	add	r5, pc, r5
   1afd8:	b	1b000 <getBootParameters@@Base+0xb0>
   1afdc:	mov	r1, r6
   1afe0:	mov	r2, r4
   1afe4:	bl	1410c <strncmp@plt>
   1afe8:	cmp	r0, #0
   1afec:	bne	1affc <getBootParameters@@Base+0xac>
   1aff0:	ldrb	r3, [fp, r4]
   1aff4:	cmp	r3, #61	; 0x3d
   1aff8:	beq	1b03c <getBootParameters@@Base+0xec>
   1affc:	mov	r0, #0
   1b000:	mov	r1, r5
   1b004:	bl	14034 <strtok@plt>
   1b008:	subs	fp, r0, #0
   1b00c:	bne	1afdc <getBootParameters@@Base+0x8c>
   1b010:	mov	r0, r9
   1b014:	bl	13c50 <fclose@plt>
   1b018:	add	r3, sp, #8192	; 0x2000
   1b01c:	mov	r0, r8
   1b020:	ldr	r2, [r3, #-4092]	; 0xfffff004
   1b024:	ldr	r3, [r7]
   1b028:	cmp	r2, r3
   1b02c:	bne	1b06c <getBootParameters@@Base+0x11c>
   1b030:	add	sp, sp, #4096	; 0x1000
   1b034:	add	sp, sp, #12
   1b038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b03c:	add	r0, fp, sl
   1b040:	bl	14154 <__strdup@plt>
   1b044:	subs	r3, r0, #0
   1b048:	beq	1b064 <getBootParameters@@Base+0x114>
   1b04c:	mov	r0, r8
   1b050:	mov	r8, r3
   1b054:	bl	13da0 <free@plt>
   1b058:	b	1affc <getBootParameters@@Base+0xac>
   1b05c:	bl	18368 <logMallocError@@Base>
   1b060:	b	1b018 <getBootParameters@@Base+0xc8>
   1b064:	bl	18368 <logMallocError@@Base>
   1b068:	b	1affc <getBootParameters@@Base+0xac>
   1b06c:	bl	13fec <__stack_chk_fail@plt>
   1b070:	andeq	r4, r1, r0, lsr #1
   1b074:	andeq	r0, r0, ip, ror #4
   1b078:	andeq	r2, r0, r4, lsr ip
   1b07c:	andeq	r2, r0, r0, asr #22
   1b080:	andeq	r2, r0, r0, lsl ip

0001b084 <executeHostCommand@@Base>:
   1b084:	ldr	r3, [pc, #392]	; 1b214 <executeHostCommand@@Base+0x190>
   1b088:	ldr	r2, [pc, #392]	; 1b218 <executeHostCommand@@Base+0x194>
   1b08c:	add	r3, pc, r3
   1b090:	push	{r4, r5, r6, r7, lr}
   1b094:	sub	sp, sp, #268	; 0x10c
   1b098:	ldr	r6, [r3, r2]
   1b09c:	add	r4, sp, #4
   1b0a0:	mov	r7, r0
   1b0a4:	add	r5, sp, #132	; 0x84
   1b0a8:	mov	r0, r4
   1b0ac:	ldr	r3, [r6]
   1b0b0:	str	r3, [sp, #260]	; 0x104
   1b0b4:	bl	13b48 <sigemptyset@plt>
   1b0b8:	mov	r1, #17
   1b0bc:	mov	r0, r4
   1b0c0:	bl	13ecc <sigaddset@plt>
   1b0c4:	mov	r2, r5
   1b0c8:	mov	r1, r4
   1b0cc:	mov	r0, #0
   1b0d0:	bl	13fc8 <sigprocmask@plt>
   1b0d4:	bl	140b8 <fork@plt>
   1b0d8:	cmn	r0, #1
   1b0dc:	mov	r2, r0
   1b0e0:	beq	1b164 <executeHostCommand@@Base+0xe0>
   1b0e4:	cmp	r0, #0
   1b0e8:	beq	1b138 <executeHostCommand@@Base+0xb4>
   1b0ec:	mov	r1, sp
   1b0f0:	mov	r2, #0
   1b0f4:	bl	13ed8 <waitpid@plt>
   1b0f8:	cmn	r0, #1
   1b0fc:	beq	1b1e0 <executeHostCommand@@Base+0x15c>
   1b100:	ldr	r2, [sp]
   1b104:	ands	r4, r2, #127	; 0x7f
   1b108:	beq	1b1c4 <executeHostCommand@@Base+0x140>
   1b10c:	add	r3, r4, #1
   1b110:	sbfx	r3, r3, #1, #7
   1b114:	cmp	r3, #0
   1b118:	ble	1b1a0 <executeHostCommand@@Base+0x11c>
   1b11c:	ldr	r1, [pc, #248]	; 1b21c <executeHostCommand@@Base+0x198>
   1b120:	mov	r2, r4
   1b124:	mov	r0, #7
   1b128:	add	r4, r4, #128	; 0x80
   1b12c:	add	r1, pc, r1
   1b130:	bl	1825c <logMessage@@Base>
   1b134:	b	1b174 <executeHostCommand@@Base+0xf0>
   1b138:	mov	r1, r5
   1b13c:	mov	r0, #2
   1b140:	bl	13fc8 <sigprocmask@plt>
   1b144:	mov	r1, r7
   1b148:	ldr	r0, [r7]
   1b14c:	bl	13d04 <execvp@plt>
   1b150:	ldr	r0, [pc, #200]	; 1b220 <executeHostCommand@@Base+0x19c>
   1b154:	add	r0, pc, r0
   1b158:	bl	18324 <logSystemError@@Base>
   1b15c:	mov	r0, #1
   1b160:	bl	13d88 <_exit@plt>
   1b164:	ldr	r0, [pc, #184]	; 1b224 <executeHostCommand@@Base+0x1a0>
   1b168:	mov	r4, #255	; 0xff
   1b16c:	add	r0, pc, r0
   1b170:	bl	18324 <logSystemError@@Base>
   1b174:	mov	r2, #0
   1b178:	mov	r1, r5
   1b17c:	mov	r0, #2
   1b180:	bl	13fc8 <sigprocmask@plt>
   1b184:	ldr	r2, [sp, #260]	; 0x104
   1b188:	ldr	r3, [r6]
   1b18c:	mov	r0, r4
   1b190:	cmp	r2, r3
   1b194:	bne	1b210 <executeHostCommand@@Base+0x18c>
   1b198:	add	sp, sp, #268	; 0x10c
   1b19c:	pop	{r4, r5, r6, r7, pc}
   1b1a0:	uxtb	r3, r2
   1b1a4:	cmp	r3, #127	; 0x7f
   1b1a8:	beq	1b1f4 <executeHostCommand@@Base+0x170>
   1b1ac:	ldr	r1, [pc, #116]	; 1b228 <executeHostCommand@@Base+0x1a4>
   1b1b0:	mov	r0, #7
   1b1b4:	mov	r4, #255	; 0xff
   1b1b8:	add	r1, pc, r1
   1b1bc:	bl	1825c <logMessage@@Base>
   1b1c0:	b	1b174 <executeHostCommand@@Base+0xf0>
   1b1c4:	ubfx	r4, r2, #8, #8
   1b1c8:	ldr	r1, [pc, #92]	; 1b22c <executeHostCommand@@Base+0x1a8>
   1b1cc:	mov	r0, #7
   1b1d0:	add	r1, pc, r1
   1b1d4:	mov	r2, r4
   1b1d8:	bl	1825c <logMessage@@Base>
   1b1dc:	b	1b174 <executeHostCommand@@Base+0xf0>
   1b1e0:	ldr	r0, [pc, #72]	; 1b230 <executeHostCommand@@Base+0x1ac>
   1b1e4:	mov	r4, #255	; 0xff
   1b1e8:	add	r0, pc, r0
   1b1ec:	bl	18324 <logSystemError@@Base>
   1b1f0:	b	1b174 <executeHostCommand@@Base+0xf0>
   1b1f4:	ldr	r1, [pc, #56]	; 1b234 <executeHostCommand@@Base+0x1b0>
   1b1f8:	ubfx	r2, r2, #8, #8
   1b1fc:	mov	r0, #7
   1b200:	add	r4, r2, #128	; 0x80
   1b204:	add	r1, pc, r1
   1b208:	bl	1825c <logMessage@@Base>
   1b20c:	b	1b174 <executeHostCommand@@Base+0xf0>
   1b210:	bl	13fec <__stack_chk_fail@plt>
   1b214:	andeq	r3, r1, ip, ror #30
   1b218:	andeq	r0, r0, ip, ror #4
   1b21c:	andeq	r2, r0, r4, ror #21
   1b220:	muleq	r0, ip, sl
   1b224:	andeq	r2, r0, ip, ror sl
   1b228:	andeq	r2, r0, r0, lsl #21
   1b22c:	andeq	r2, r0, r0, lsr sl
   1b230:	andeq	r2, r0, r0, lsl sl
   1b234:	andeq	r2, r0, r4, lsr #20
   1b238:	ldr	r3, [pc, #332]	; 1b38c <executeHostCommand@@Base+0x308>
   1b23c:	ldr	r2, [pc, #332]	; 1b390 <executeHostCommand@@Base+0x30c>
   1b240:	add	r3, pc, r3
   1b244:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b248:	subs	r4, r1, #0
   1b24c:	ldr	r5, [r3, r2]
   1b250:	sub	sp, sp, #284	; 0x11c
   1b254:	ldr	r9, [pc, #312]	; 1b394 <executeHostCommand@@Base+0x310>
   1b258:	mov	r8, r0
   1b25c:	ldr	r1, [pc, #308]	; 1b398 <executeHostCommand@@Base+0x314>
   1b260:	ldr	r3, [r5]
   1b264:	add	r9, pc, r9
   1b268:	add	r1, pc, r1
   1b26c:	mov	r0, r9
   1b270:	str	r3, [sp, #276]	; 0x114
   1b274:	ldrne	r3, [r4]
   1b278:	addne	r3, r3, #1
   1b27c:	strne	r3, [r4]
   1b280:	bl	13cd4 <fopen@plt>
   1b284:	subs	r7, r0, #0
   1b288:	beq	1b358 <executeHostCommand@@Base+0x2d4>
   1b28c:	add	r0, sp, #20
   1b290:	mov	r1, #256	; 0x100
   1b294:	mov	r2, r7
   1b298:	bl	13c5c <fgets@plt>
   1b29c:	subs	r6, r0, #0
   1b2a0:	beq	1b2b0 <executeHostCommand@@Base+0x22c>
   1b2a4:	bl	13e48 <strlen@plt>
   1b2a8:	cmp	r0, #0
   1b2ac:	bne	1b318 <executeHostCommand@@Base+0x294>
   1b2b0:	ldr	r6, [pc, #228]	; 1b39c <executeHostCommand@@Base+0x318>
   1b2b4:	add	r6, pc, r6
   1b2b8:	mov	r0, r7
   1b2bc:	bl	13c50 <fclose@plt>
   1b2c0:	ldr	r3, [pc, #216]	; 1b3a0 <executeHostCommand@@Base+0x31c>
   1b2c4:	add	r0, sp, #4
   1b2c8:	str	r6, [sp, #4]
   1b2cc:	mov	r6, #0
   1b2d0:	add	r3, pc, r3
   1b2d4:	str	r8, [sp, #12]
   1b2d8:	str	r3, [sp, #8]
   1b2dc:	str	r6, [sp, #16]
   1b2e0:	bl	1b084 <executeHostCommand@@Base>
   1b2e4:	cmp	r0, r6
   1b2e8:	bne	1b33c <executeHostCommand@@Base+0x2b8>
   1b2ec:	cmp	r4, #0
   1b2f0:	mov	r0, #1
   1b2f4:	ldrne	r3, [r4]
   1b2f8:	addne	r3, r3, #1
   1b2fc:	strne	r3, [r4]
   1b300:	ldr	r2, [sp, #276]	; 0x114
   1b304:	ldr	r3, [r5]
   1b308:	cmp	r2, r3
   1b30c:	bne	1b388 <executeHostCommand@@Base+0x304>
   1b310:	add	sp, sp, #284	; 0x11c
   1b314:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1b318:	sub	r0, r0, #1
   1b31c:	ldrb	r3, [r6, r0]
   1b320:	cmp	r3, #10
   1b324:	bne	1b2b8 <executeHostCommand@@Base+0x234>
   1b328:	cmp	r0, #0
   1b32c:	mov	r3, #0
   1b330:	strb	r3, [r6, r0]
   1b334:	bne	1b2b8 <executeHostCommand@@Base+0x234>
   1b338:	b	1b2b0 <executeHostCommand@@Base+0x22c>
   1b33c:	ldr	r1, [pc, #96]	; 1b3a4 <executeHostCommand@@Base+0x320>
   1b340:	mov	r0, #4
   1b344:	mov	r2, r8
   1b348:	add	r1, pc, r1
   1b34c:	bl	1825c <logMessage@@Base>
   1b350:	mov	r0, r6
   1b354:	b	1b300 <executeHostCommand@@Base+0x27c>
   1b358:	bl	1419c <__errno_location@plt>
   1b35c:	ldr	r6, [pc, #68]	; 1b3a8 <executeHostCommand@@Base+0x324>
   1b360:	add	r6, pc, r6
   1b364:	ldr	r0, [r0]
   1b368:	bl	13b54 <strerror@plt>
   1b36c:	ldr	r1, [pc, #56]	; 1b3ac <executeHostCommand@@Base+0x328>
   1b370:	mov	r2, r9
   1b374:	add	r1, pc, r1
   1b378:	mov	r3, r0
   1b37c:	mov	r0, #4
   1b380:	bl	1825c <logMessage@@Base>
   1b384:	b	1b2c0 <executeHostCommand@@Base+0x23c>
   1b388:	bl	13fec <__stack_chk_fail@plt>
   1b38c:			; <UNDEFINED> instruction: 0x00013db8
   1b390:	andeq	r0, r0, ip, ror #4
   1b394:	strdeq	r2, [r0], -r8
   1b398:	andeq	r2, r0, ip, ror r8
   1b39c:	muleq	r0, ip, r9
   1b3a0:			; <UNDEFINED> instruction: 0x000029bc
   1b3a4:	andeq	r2, r0, r8, asr #18
   1b3a8:	strdeq	r2, [r0], -r0
   1b3ac:	andeq	r2, r0, r4, lsl #18

0001b3b0 <mountFileSystem@@Base>:
   1b3b0:	push	{lr}		; (str lr, [sp, #-4]!)
   1b3b4:	sub	sp, sp, #12
   1b3b8:	mov	ip, r0
   1b3bc:	mov	r3, #0
   1b3c0:	mov	r0, r1
   1b3c4:	str	r3, [sp]
   1b3c8:	mov	r1, ip
   1b3cc:	bl	13f98 <mount@plt>
   1b3d0:	adds	r0, r0, #1
   1b3d4:	movne	r0, #1
   1b3d8:	add	sp, sp, #12
   1b3dc:	pop	{pc}		; (ldr pc, [sp], #4)

0001b3e0 <loadSharedObject@@Base>:
   1b3e0:	push	{r4, lr}
   1b3e4:	movw	r1, #258	; 0x102
   1b3e8:	bl	13d58 <dlopen@plt>
   1b3ec:	subs	r4, r0, #0
   1b3f0:	beq	1b3fc <loadSharedObject@@Base+0x1c>
   1b3f4:	mov	r0, r4
   1b3f8:	pop	{r4, pc}
   1b3fc:	bl	1401c <dlerror@plt>
   1b400:	ldr	r1, [pc, #16]	; 1b418 <loadSharedObject@@Base+0x38>
   1b404:	add	r1, pc, r1
   1b408:	mov	r2, r0
   1b40c:	mov	r0, #3
   1b410:	bl	1825c <logMessage@@Base>
   1b414:	b	1b3f4 <loadSharedObject@@Base+0x14>
   1b418:	andeq	r2, r0, r4, lsr r6

0001b41c <unloadSharedObject@@Base>:
   1b41c:	b	13cc8 <dlclose@plt>

0001b420 <findSharedSymbol@@Base>:
   1b420:	push	{r4, r5, r6, lr}
   1b424:	mov	r4, r0
   1b428:	mov	r6, r1
   1b42c:	mov	r5, r2
   1b430:	bl	1401c <dlerror@plt>
   1b434:	mov	r1, r6
   1b438:	mov	r0, r4
   1b43c:	bl	141b4 <dlsym@plt>
   1b440:	str	r0, [r5]
   1b444:	bl	1401c <dlerror@plt>
   1b448:	subs	r2, r0, #0
   1b44c:	beq	1b468 <findSharedSymbol@@Base+0x48>
   1b450:	ldr	r1, [pc, #24]	; 1b470 <findSharedSymbol@@Base+0x50>
   1b454:	mov	r0, #3
   1b458:	add	r1, pc, r1
   1b45c:	bl	1825c <logMessage@@Base>
   1b460:	mov	r0, #0
   1b464:	pop	{r4, r5, r6, pc}
   1b468:	mov	r0, #1
   1b46c:	pop	{r4, r5, r6, pc}
   1b470:	andeq	r2, r0, r0, ror #11

0001b474 <synchronousBeep@@Base>:
   1b474:	mov	r0, #0
   1b478:	bx	lr

0001b47c <asynchronousBeep@@Base>:
   1b47c:	push	{r4, r5, r6, lr}
   1b480:	mov	r5, r0
   1b484:	mov	r4, r1
   1b488:	bl	192b8 <getConsole@@Base>
   1b48c:	subs	r3, r0, #0
   1b490:	beq	1b4dc <asynchronousBeep@@Base+0x60>
   1b494:	bl	13b78 <fileno@plt>
   1b498:	mov	r1, r5
   1b49c:	lsl	r4, r4, #16
   1b4a0:	mov	r6, r0
   1b4a4:	movw	r0, #13532	; 0x34dc
   1b4a8:	movt	r0, #18
   1b4ac:	bl	1c954 <releaseAllKeys@@Base+0x6c>
   1b4b0:	movw	r1, #19248	; 0x4b30
   1b4b4:	orr	r2, r4, r0
   1b4b8:	mov	r0, r6
   1b4bc:	bl	13e30 <ioctl@plt>
   1b4c0:	cmn	r0, #1
   1b4c4:	beq	1b4d0 <asynchronousBeep@@Base+0x54>
   1b4c8:	mov	r0, #1
   1b4cc:	pop	{r4, r5, r6, pc}
   1b4d0:	ldr	r0, [pc, #12]	; 1b4e4 <asynchronousBeep@@Base+0x68>
   1b4d4:	add	r0, pc, r0
   1b4d8:	bl	18324 <logSystemError@@Base>
   1b4dc:	mov	r0, #0
   1b4e0:	pop	{r4, r5, r6, pc}
   1b4e4:	ldrdeq	r2, [r0], -ip

0001b4e8 <startBeep@@Base>:
   1b4e8:	push	{r3, r4, r5, lr}
   1b4ec:	mov	r4, r0
   1b4f0:	bl	192b8 <getConsole@@Base>
   1b4f4:	subs	r3, r0, #0
   1b4f8:	beq	1b540 <startBeep@@Base+0x58>
   1b4fc:	bl	13b78 <fileno@plt>
   1b500:	mov	r1, r4
   1b504:	mov	r5, r0
   1b508:	movw	r0, #13532	; 0x34dc
   1b50c:	movt	r0, #18
   1b510:	bl	1c954 <releaseAllKeys@@Base+0x6c>
   1b514:	movw	r1, #19247	; 0x4b2f
   1b518:	mov	r2, r0
   1b51c:	mov	r0, r5
   1b520:	bl	13e30 <ioctl@plt>
   1b524:	cmn	r0, #1
   1b528:	beq	1b534 <startBeep@@Base+0x4c>
   1b52c:	mov	r0, #1
   1b530:	pop	{r3, r4, r5, pc}
   1b534:	ldr	r0, [pc, #12]	; 1b548 <startBeep@@Base+0x60>
   1b538:	add	r0, pc, r0
   1b53c:	bl	18324 <logSystemError@@Base>
   1b540:	mov	r0, #0
   1b544:	pop	{r3, r4, r5, pc}
   1b548:	andeq	r2, r0, r8, lsl #15

0001b54c <stopBeep@@Base>:
   1b54c:	push	{r3, lr}
   1b550:	bl	192b8 <getConsole@@Base>
   1b554:	subs	r3, r0, #0
   1b558:	beq	1b588 <stopBeep@@Base+0x3c>
   1b55c:	bl	13b78 <fileno@plt>
   1b560:	movw	r1, #19247	; 0x4b2f
   1b564:	mov	r2, #0
   1b568:	bl	13e30 <ioctl@plt>
   1b56c:	cmn	r0, #1
   1b570:	beq	1b57c <stopBeep@@Base+0x30>
   1b574:	mov	r0, #1
   1b578:	pop	{r3, pc}
   1b57c:	ldr	r0, [pc, #12]	; 1b590 <stopBeep@@Base+0x44>
   1b580:	add	r0, pc, r0
   1b584:	bl	18324 <logSystemError@@Base>
   1b588:	mov	r0, #0
   1b58c:	pop	{r3, pc}
   1b590:	andeq	r2, r0, r0, asr #14

0001b594 <endBeep@@Base>:
   1b594:	bx	lr

0001b598 <closePcmDevice@@Base>:
   1b598:	push	{r4, lr}
   1b59c:	mov	r4, r0
   1b5a0:	ldr	r0, [r0]
   1b5a4:	bl	13f68 <close@plt>
   1b5a8:	mov	r0, r4
   1b5ac:	pop	{r4, lr}
   1b5b0:	b	13da0 <free@plt>

0001b5b4 <writePcmData@@Base>:
   1b5b4:	push	{r3, lr}
   1b5b8:	ldr	r0, [r0]
   1b5bc:	bl	1ac6c <writeData@@Base>
   1b5c0:	adds	r0, r0, #1
   1b5c4:	movne	r0, #1
   1b5c8:	pop	{r3, pc}

0001b5cc <getPcmBlockSize@@Base>:
   1b5cc:	ldr	r3, [pc, #120]	; 1b64c <getPcmBlockSize@@Base+0x80>
   1b5d0:	mov	ip, #7
   1b5d4:	push	{r4, r5, lr}
   1b5d8:	add	r3, pc, r3
   1b5dc:	ldr	lr, [pc, #108]	; 1b650 <getPcmBlockSize@@Base+0x84>
   1b5e0:	sub	sp, sp, #20
   1b5e4:	add	r2, sp, #16
   1b5e8:	movt	ip, #65535	; 0xffff
   1b5ec:	mov	r5, r0
   1b5f0:	movw	r1, #20490	; 0x500a
   1b5f4:	ldr	r4, [r3, lr]
   1b5f8:	movt	r1, #49156	; 0xc004
   1b5fc:	str	ip, [r2, #-12]!
   1b600:	ldr	r0, [r0]
   1b604:	ldr	r3, [r4]
   1b608:	str	r3, [sp, #12]
   1b60c:	bl	13e30 <ioctl@plt>
   1b610:	add	r2, sp, #8
   1b614:	ldr	r0, [r5]
   1b618:	movw	r1, #20484	; 0x5004
   1b61c:	movt	r1, #49156	; 0xc004
   1b620:	bl	13e30 <ioctl@plt>
   1b624:	ldr	r2, [sp, #12]
   1b628:	ldr	r3, [r4]
   1b62c:	cmn	r0, #1
   1b630:	ldrne	r0, [sp, #8]
   1b634:	moveq	r0, #128	; 0x80
   1b638:	cmp	r2, r3
   1b63c:	bne	1b648 <getPcmBlockSize@@Base+0x7c>
   1b640:	add	sp, sp, #20
   1b644:	pop	{r4, r5, pc}
   1b648:	bl	13fec <__stack_chk_fail@plt>
   1b64c:	andeq	r3, r1, r0, lsr #20
   1b650:	andeq	r0, r0, ip, ror #4

0001b654 <getPcmSampleRate@@Base>:
   1b654:	ldr	r0, [r0, #8]
   1b658:	bx	lr

0001b65c <setPcmSampleRate@@Base>:
   1b65c:	push	{r4, lr}
   1b660:	sub	sp, sp, #8
   1b664:	add	r2, sp, #8
   1b668:	mov	r4, r0
   1b66c:	ldr	r0, [r0]
   1b670:	str	r1, [r2, #-4]!
   1b674:	movw	r1, #20482	; 0x5002
   1b678:	movt	r1, #49156	; 0xc004
   1b67c:	bl	13e30 <ioctl@plt>
   1b680:	cmn	r0, #1
   1b684:	mov	r0, r4
   1b688:	ldrne	r3, [sp, #4]
   1b68c:	strne	r3, [r4, #8]
   1b690:	bl	1b654 <getPcmSampleRate@@Base>
   1b694:	add	sp, sp, #8
   1b698:	pop	{r4, pc}

0001b69c <getPcmChannelCount@@Base>:
   1b69c:	ldr	r0, [r0, #12]
   1b6a0:	bx	lr

0001b6a4 <setPcmChannelCount@@Base>:
   1b6a4:	push	{r4, lr}
   1b6a8:	sub	sp, sp, #8
   1b6ac:	add	r2, sp, #8
   1b6b0:	mov	r4, r0
   1b6b4:	ldr	r0, [r0]
   1b6b8:	str	r1, [r2, #-4]!
   1b6bc:	movw	r1, #20486	; 0x5006
   1b6c0:	movt	r1, #49156	; 0xc004
   1b6c4:	bl	13e30 <ioctl@plt>
   1b6c8:	cmn	r0, #1
   1b6cc:	mov	r0, r4
   1b6d0:	ldrne	r3, [sp, #4]
   1b6d4:	strne	r3, [r4, #12]
   1b6d8:	bl	1b69c <getPcmChannelCount@@Base>
   1b6dc:	add	sp, sp, #8
   1b6e0:	pop	{r4, pc}

0001b6e4 <openPcmDevice@@Base>:
   1b6e4:	push	{r4, r5, r6, lr}
   1b6e8:	mov	r6, r0
   1b6ec:	mov	r0, #16
   1b6f0:	mov	r5, r1
   1b6f4:	bl	13fbc <malloc@plt>
   1b6f8:	subs	r4, r0, #0
   1b6fc:	beq	1b7d8 <openPcmDevice@@Base+0xf4>
   1b700:	ldrb	r3, [r5]
   1b704:	cmp	r3, #0
   1b708:	beq	1b784 <openPcmDevice@@Base+0xa0>
   1b70c:	mov	r0, r5
   1b710:	movw	r1, #2049	; 0x801
   1b714:	bl	13b3c <open@plt>
   1b718:	cmn	r0, #1
   1b71c:	str	r0, [r4]
   1b720:	beq	1b7a4 <openPcmDevice@@Base+0xc0>
   1b724:	mov	r1, #1
   1b728:	bl	1add0 <setBlockingIo@@Base>
   1b72c:	mov	r2, r4
   1b730:	mov	r3, #196608	; 0x30000
   1b734:	movw	r1, #19830	; 0x4d76
   1b738:	str	r3, [r4, #4]
   1b73c:	movt	r1, #32772	; 0x8004
   1b740:	ldr	r0, [r2], #4
   1b744:	bl	13e30 <ioctl@plt>
   1b748:	cmn	r0, #1
   1b74c:	beq	1b790 <openPcmDevice@@Base+0xac>
   1b750:	ldr	r1, [pc, #148]	; 1b7ec <openPcmDevice@@Base+0x108>
   1b754:	mov	r0, #7
   1b758:	ldr	r2, [r4, #4]
   1b75c:	add	r1, pc, r1
   1b760:	bl	1825c <logMessage@@Base>
   1b764:	mov	r0, r4
   1b768:	mov	r1, #8000	; 0x1f40
   1b76c:	bl	1b65c <setPcmSampleRate@@Base>
   1b770:	mov	r0, r4
   1b774:	mov	r1, #1
   1b778:	bl	1b6a4 <setPcmChannelCount@@Base>
   1b77c:	mov	r0, r4
   1b780:	pop	{r4, r5, r6, pc}
   1b784:	ldr	r5, [pc, #100]	; 1b7f0 <openPcmDevice@@Base+0x10c>
   1b788:	add	r5, pc, r5
   1b78c:	b	1b70c <openPcmDevice@@Base+0x28>
   1b790:	ldr	r1, [pc, #92]	; 1b7f4 <openPcmDevice@@Base+0x110>
   1b794:	mov	r0, r6
   1b798:	add	r1, pc, r1
   1b79c:	bl	1825c <logMessage@@Base>
   1b7a0:	b	1b750 <openPcmDevice@@Base+0x6c>
   1b7a4:	bl	1419c <__errno_location@plt>
   1b7a8:	ldr	r0, [r0]
   1b7ac:	bl	13b54 <strerror@plt>
   1b7b0:	ldr	r1, [pc, #64]	; 1b7f8 <openPcmDevice@@Base+0x114>
   1b7b4:	mov	r2, r5
   1b7b8:	add	r1, pc, r1
   1b7bc:	mov	r3, r0
   1b7c0:	mov	r0, r6
   1b7c4:	bl	1825c <logMessage@@Base>
   1b7c8:	mov	r0, r4
   1b7cc:	bl	13da0 <free@plt>
   1b7d0:	mov	r0, #0
   1b7d4:	pop	{r4, r5, r6, pc}
   1b7d8:	ldr	r0, [pc, #28]	; 1b7fc <openPcmDevice@@Base+0x118>
   1b7dc:	add	r0, pc, r0
   1b7e0:	bl	18324 <logSystemError@@Base>
   1b7e4:	mov	r0, r4
   1b7e8:	pop	{r4, r5, r6, pc}
   1b7ec:	andeq	r2, r0, r0, lsr #11
   1b7f0:	andeq	r2, r0, r8, asr #10
   1b7f4:	andeq	r2, r0, r4, asr #10
   1b7f8:	andeq	r2, r0, r0, ror #10
   1b7fc:	andeq	r2, r0, ip, asr r5

0001b800 <getPcmAmplitudeFormat@@Base>:
   1b800:	ldr	r0, [r0]
   1b804:	mov	r1, #0
   1b808:	b	1ae10 <setCloseOnExec@@Base+0x20>

0001b80c <setPcmAmplitudeFormat@@Base>:
   1b80c:	cmp	r1, #0
   1b810:	beq	1b84c <setPcmAmplitudeFormat@@Base+0x40>
   1b814:	ldr	r3, [pc, #60]	; 1b858 <setPcmAmplitudeFormat@@Base+0x4c>
   1b818:	add	r3, pc, r3
   1b81c:	add	r3, r3, #8
   1b820:	b	1b82c <setPcmAmplitudeFormat@@Base+0x20>
   1b824:	cmp	r2, r1
   1b828:	beq	1b840 <setPcmAmplitudeFormat@@Base+0x34>
   1b82c:	ldr	r2, [r3]
   1b830:	mov	ip, r3
   1b834:	add	r3, r3, #8
   1b838:	cmp	r2, #8
   1b83c:	bne	1b824 <setPcmAmplitudeFormat@@Base+0x18>
   1b840:	ldr	r0, [r0]
   1b844:	ldr	r1, [ip, #4]
   1b848:	b	1ae10 <setCloseOnExec@@Base+0x20>
   1b84c:	ldr	ip, [pc, #8]	; 1b85c <setPcmAmplitudeFormat@@Base+0x50>
   1b850:	add	ip, pc, ip
   1b854:	b	1b840 <setPcmAmplitudeFormat@@Base+0x34>
   1b858:	andeq	r2, r0, r8, asr r3
   1b85c:	andeq	r2, r0, r0, lsr #6

0001b860 <forcePcmOutput@@Base>:
   1b860:	ldr	r0, [r0]
   1b864:	movw	r1, #20488	; 0x5008
   1b868:	mov	r2, #0
   1b86c:	b	13e30 <ioctl@plt>

0001b870 <awaitPcmOutput@@Base>:
   1b870:	ldr	r0, [r0]
   1b874:	movw	r1, #20481	; 0x5001
   1b878:	mov	r2, #0
   1b87c:	b	13e30 <ioctl@plt>

0001b880 <cancelPcmOutput@@Base>:
   1b880:	ldr	r0, [r0]
   1b884:	mov	r1, #20480	; 0x5000
   1b888:	mov	r2, #0
   1b88c:	b	13e30 <ioctl@plt>

0001b890 <seqbuf_dump@@Base>:
   1b890:	push	{r4, lr}
   1b894:	ldr	r4, [pc, #68]	; 1b8e0 <seqbuf_dump@@Base+0x50>
   1b898:	add	r4, pc, r4
   1b89c:	ldr	r1, [r4]
   1b8a0:	ldr	r2, [r1, #140]	; 0x8c
   1b8a4:	cmp	r2, #0
   1b8a8:	bne	1b8b8 <seqbuf_dump@@Base+0x28>
   1b8ac:	mov	r3, #0
   1b8b0:	str	r3, [r1, #140]	; 0x8c
   1b8b4:	pop	{r4, pc}
   1b8b8:	ldr	r0, [r1], #8
   1b8bc:	bl	1ac6c <writeData@@Base>
   1b8c0:	cmn	r0, #1
   1b8c4:	beq	1b8d0 <seqbuf_dump@@Base+0x40>
   1b8c8:	ldr	r1, [r4]
   1b8cc:	b	1b8ac <seqbuf_dump@@Base+0x1c>
   1b8d0:	ldr	r0, [pc, #12]	; 1b8e4 <seqbuf_dump@@Base+0x54>
   1b8d4:	add	r0, pc, r0
   1b8d8:	bl	18324 <logSystemError@@Base>
   1b8dc:	b	1b8c8 <seqbuf_dump@@Base+0x38>
   1b8e0:	andeq	r7, r1, r0, ror sl
   1b8e4:	andeq	r2, r0, ip, ror r4

0001b8e8 <openMidiDevice@@Base>:
   1b8e8:	ldr	r3, [pc, #744]	; 1bbd8 <openMidiDevice@@Base+0x2f0>
   1b8ec:	ldr	r2, [pc, #744]	; 1bbdc <openMidiDevice@@Base+0x2f4>
   1b8f0:	add	r3, pc, r3
   1b8f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b8f8:	sub	sp, sp, #172	; 0xac
   1b8fc:	ldr	r2, [r3, r2]
   1b900:	mov	sl, r0
   1b904:	mov	r0, #144	; 0x90
   1b908:	mov	r5, r1
   1b90c:	ldr	r3, [r2]
   1b910:	str	r2, [sp, #8]
   1b914:	str	r3, [sp, #164]	; 0xa4
   1b918:	bl	13fbc <malloc@plt>
   1b91c:	subs	r4, r0, #0
   1b920:	beq	1bbc0 <openMidiDevice@@Base+0x2d8>
   1b924:	ldrb	r3, [r5]
   1b928:	cmp	r3, #0
   1b92c:	beq	1bad8 <openMidiDevice@@Base+0x1f0>
   1b930:	mov	r0, r5
   1b934:	mov	r1, #1
   1b938:	bl	13b3c <open@plt>
   1b93c:	cmn	r0, #1
   1b940:	str	r0, [r4]
   1b944:	beq	1bb8c <openMidiDevice@@Base+0x2a4>
   1b948:	add	r9, sp, #16
   1b94c:	movw	r1, #20746	; 0x510a
   1b950:	movt	r1, #32772	; 0x8004
   1b954:	mvn	r6, #0
   1b958:	mov	r2, r9
   1b95c:	str	r6, [sp, #20]
   1b960:	bl	13e30 <ioctl@plt>
   1b964:	cmp	r0, r6
   1b968:	mov	r5, r0
   1b96c:	beq	1bb34 <openMidiDevice@@Base+0x24c>
   1b970:	ldr	r3, [sp, #16]
   1b974:	cmp	r3, #0
   1b978:	ble	1bb84 <openMidiDevice@@Base+0x29c>
   1b97c:	ldr	r1, [pc, #604]	; 1bbe0 <openMidiDevice@@Base+0x2f8>
   1b980:	add	r5, sp, #24
   1b984:	ldr	r7, [pc, #600]	; 1bbe4 <openMidiDevice@@Base+0x2fc>
   1b988:	mov	r8, r6
   1b98c:	add	r1, pc, r1
   1b990:	mov	fp, #0
   1b994:	str	r1, [sp, #12]
   1b998:	add	r7, pc, r7
   1b99c:	b	1b9f4 <openMidiDevice@@Base+0x10c>
   1b9a0:	ldr	r2, [sp, #60]	; 0x3c
   1b9a4:	cmp	r2, #0
   1b9a8:	moveq	r6, fp
   1b9ac:	beq	1b9e4 <openMidiDevice@@Base+0xfc>
   1b9b0:	cmp	r2, #1
   1b9b4:	ldr	r3, [sp, #64]	; 0x40
   1b9b8:	bne	1b9d4 <openMidiDevice@@Base+0xec>
   1b9bc:	cmp	r3, #16
   1b9c0:	streq	fp, [sp, #20]
   1b9c4:	beq	1b9e4 <openMidiDevice@@Base+0xfc>
   1b9c8:	cmp	r3, #32
   1b9cc:	moveq	r8, fp
   1b9d0:	beq	1b9e4 <openMidiDevice@@Base+0xfc>
   1b9d4:	str	r5, [sp]
   1b9d8:	mov	r0, #7
   1b9dc:	mov	r1, r7
   1b9e0:	bl	1825c <logMessage@@Base>
   1b9e4:	ldr	r3, [sp, #16]
   1b9e8:	add	fp, fp, #1
   1b9ec:	cmp	r3, fp
   1b9f0:	ble	1ba44 <openMidiDevice@@Base+0x15c>
   1b9f4:	movw	r1, #20738	; 0x5102
   1b9f8:	ldr	r0, [r4]
   1b9fc:	movt	r1, #49292	; 0xc08c
   1ba00:	mov	r2, r5
   1ba04:	str	fp, [sp, #56]	; 0x38
   1ba08:	bl	13e30 <ioctl@plt>
   1ba0c:	cmn	r0, #1
   1ba10:	bne	1b9a0 <openMidiDevice@@Base+0xb8>
   1ba14:	bl	1419c <__errno_location@plt>
   1ba18:	ldr	r0, [r0]
   1ba1c:	bl	13b54 <strerror@plt>
   1ba20:	mov	r2, fp
   1ba24:	ldr	r1, [sp, #12]
   1ba28:	add	fp, fp, #1
   1ba2c:	mov	r3, r0
   1ba30:	mov	r0, sl
   1ba34:	bl	1825c <logMessage@@Base>
   1ba38:	ldr	r3, [sp, #16]
   1ba3c:	cmp	r3, fp
   1ba40:	bgt	1b9f4 <openMidiDevice@@Base+0x10c>
   1ba44:	ldr	r3, [sp, #20]
   1ba48:	cmp	r3, #0
   1ba4c:	blt	1ba6c <openMidiDevice@@Base+0x184>
   1ba50:	movw	r1, #20745	; 0x5109
   1ba54:	ldr	r0, [r4]
   1ba58:	movt	r1, #16388	; 0x4004
   1ba5c:	add	r2, sp, #20
   1ba60:	bl	13e30 <ioctl@plt>
   1ba64:	cmn	r0, #1
   1ba68:	beq	1bb08 <openMidiDevice@@Base+0x220>
   1ba6c:	mov	r2, r9
   1ba70:	movw	r1, #20747	; 0x510b
   1ba74:	ldr	r0, [r4]
   1ba78:	movt	r1, #32772	; 0x8004
   1ba7c:	bl	13e30 <ioctl@plt>
   1ba80:	cmn	r0, #1
   1ba84:	mov	r5, r0
   1ba88:	beq	1bb60 <openMidiDevice@@Base+0x278>
   1ba8c:	ldr	r0, [sp, #16]
   1ba90:	cmp	r0, #0
   1ba94:	subgt	r5, r0, #1
   1ba98:	ble	1bb00 <openMidiDevice@@Base+0x218>
   1ba9c:	cmn	r8, #1
   1baa0:	beq	1bae4 <openMidiDevice@@Base+0x1fc>
   1baa4:	mov	r0, r4
   1baa8:	mov	r2, #128	; 0x80
   1baac:	mov	r3, #0
   1bab0:	str	r8, [r4, #4]
   1bab4:	str	r2, [r4, #136]	; 0x88
   1bab8:	str	r3, [r4, #140]	; 0x8c
   1babc:	ldr	r1, [sp, #8]
   1bac0:	ldr	r2, [sp, #164]	; 0xa4
   1bac4:	ldr	r3, [r1]
   1bac8:	cmp	r2, r3
   1bacc:	bne	1bbd4 <openMidiDevice@@Base+0x2ec>
   1bad0:	add	sp, sp, #172	; 0xac
   1bad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bad8:	ldr	r5, [pc, #264]	; 1bbe8 <openMidiDevice@@Base+0x300>
   1badc:	add	r5, pc, r5
   1bae0:	b	1b930 <openMidiDevice@@Base+0x48>
   1bae4:	ldr	r8, [sp, #20]
   1bae8:	cmp	r8, #0
   1baec:	bge	1baa4 <openMidiDevice@@Base+0x1bc>
   1baf0:	cmn	r6, #1
   1baf4:	biceq	r8, r5, r5, asr #31
   1baf8:	movne	r8, r6
   1bafc:	b	1baa4 <openMidiDevice@@Base+0x1bc>
   1bb00:	mvn	r5, #0
   1bb04:	b	1ba9c <openMidiDevice@@Base+0x1b4>
   1bb08:	bl	1419c <__errno_location@plt>
   1bb0c:	ldr	r5, [sp, #20]
   1bb10:	ldr	r0, [r0]
   1bb14:	bl	13b54 <strerror@plt>
   1bb18:	ldr	r1, [pc, #204]	; 1bbec <openMidiDevice@@Base+0x304>
   1bb1c:	mov	r2, r5
   1bb20:	add	r1, pc, r1
   1bb24:	mov	r3, r0
   1bb28:	mov	r0, sl
   1bb2c:	bl	1825c <logMessage@@Base>
   1bb30:	b	1ba6c <openMidiDevice@@Base+0x184>
   1bb34:	bl	1419c <__errno_location@plt>
   1bb38:	mov	r6, r5
   1bb3c:	mov	r8, r5
   1bb40:	ldr	r0, [r0]
   1bb44:	bl	13b54 <strerror@plt>
   1bb48:	ldr	r1, [pc, #160]	; 1bbf0 <openMidiDevice@@Base+0x308>
   1bb4c:	add	r1, pc, r1
   1bb50:	mov	r2, r0
   1bb54:	mov	r0, sl
   1bb58:	bl	1825c <logMessage@@Base>
   1bb5c:	b	1ba6c <openMidiDevice@@Base+0x184>
   1bb60:	bl	1419c <__errno_location@plt>
   1bb64:	ldr	r0, [r0]
   1bb68:	bl	13b54 <strerror@plt>
   1bb6c:	ldr	r1, [pc, #128]	; 1bbf4 <openMidiDevice@@Base+0x30c>
   1bb70:	add	r1, pc, r1
   1bb74:	mov	r2, r0
   1bb78:	mov	r0, sl
   1bb7c:	bl	1825c <logMessage@@Base>
   1bb80:	b	1ba9c <openMidiDevice@@Base+0x1b4>
   1bb84:	mov	r8, r6
   1bb88:	b	1ba44 <openMidiDevice@@Base+0x15c>
   1bb8c:	bl	1419c <__errno_location@plt>
   1bb90:	ldr	r0, [r0]
   1bb94:	bl	13b54 <strerror@plt>
   1bb98:	ldr	r1, [pc, #88]	; 1bbf8 <openMidiDevice@@Base+0x310>
   1bb9c:	mov	r2, r5
   1bba0:	add	r1, pc, r1
   1bba4:	mov	r3, r0
   1bba8:	mov	r0, sl
   1bbac:	bl	1825c <logMessage@@Base>
   1bbb0:	mov	r0, r4
   1bbb4:	bl	13da0 <free@plt>
   1bbb8:	mov	r0, #0
   1bbbc:	b	1babc <openMidiDevice@@Base+0x1d4>
   1bbc0:	ldr	r0, [pc, #52]	; 1bbfc <openMidiDevice@@Base+0x314>
   1bbc4:	add	r0, pc, r0
   1bbc8:	bl	18324 <logSystemError@@Base>
   1bbcc:	mov	r0, r4
   1bbd0:	b	1babc <openMidiDevice@@Base+0x1d4>
   1bbd4:	bl	13fec <__stack_chk_fail@plt>
   1bbd8:	andeq	r3, r1, r8, lsl #14
   1bbdc:	andeq	r0, r0, ip, ror #4
   1bbe0:	andeq	r2, r0, r0, lsl #8
   1bbe4:	ldrdeq	r2, [r0], -r4
   1bbe8:	andeq	r2, r0, r0, lsl #5
   1bbec:	muleq	r0, ip, r2
   1bbf0:	andeq	r2, r0, r0, lsr #5
   1bbf4:	andeq	r2, r0, r4, lsr #5
   1bbf8:	muleq	r0, r8, r2
   1bbfc:	muleq	r0, r4, r2

0001bc00 <closeMidiDevice@@Base>:
   1bc00:	push	{r4, lr}
   1bc04:	mov	r4, r0
   1bc08:	ldr	r0, [r0]
   1bc0c:	bl	13f68 <close@plt>
   1bc10:	mov	r0, r4
   1bc14:	pop	{r4, lr}
   1bc18:	b	13da0 <free@plt>

0001bc1c <flushMidiDevice@@Base>:
   1bc1c:	push	{r4, lr}
   1bc20:	ldr	r4, [pc, #24]	; 1bc40 <flushMidiDevice@@Base+0x24>
   1bc24:	add	r4, pc, r4
   1bc28:	str	r0, [r4]
   1bc2c:	bl	1b890 <seqbuf_dump@@Base>
   1bc30:	mov	r3, #0
   1bc34:	mov	r0, #1
   1bc38:	str	r3, [r4]
   1bc3c:	pop	{r4, pc}
   1bc40:	andeq	r7, r1, r4, ror #13

0001bc44 <setMidiInstrument@@Base>:
   1bc44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bc48:	mov	r4, r0
   1bc4c:	ldr	r0, [r0, #140]	; 0x8c
   1bc50:	mov	r9, r2
   1bc54:	ldr	r5, [pc, #124]	; 1bcd8 <setMidiInstrument@@Base+0x94>
   1bc58:	mov	sl, r1
   1bc5c:	ldr	r3, [r4, #136]	; 0x88
   1bc60:	add	r2, r0, #7
   1bc64:	add	r5, pc, r5
   1bc68:	cmp	r2, r3
   1bc6c:	str	r4, [r5]
   1bc70:	movlt	ip, r4
   1bc74:	blt	1bc84 <setMidiInstrument@@Base+0x40>
   1bc78:	bl	1b890 <seqbuf_dump@@Base>
   1bc7c:	ldr	ip, [r5]
   1bc80:	ldr	r0, [ip, #140]	; 0x8c
   1bc84:	add	r3, ip, r0
   1bc88:	mvn	r2, #109	; 0x6d
   1bc8c:	add	r6, r0, #14
   1bc90:	ldr	r5, [pc, #68]	; 1bcdc <setMidiInstrument@@Base+0x98>
   1bc94:	strb	r2, [r3, #8]
   1bc98:	mvn	r7, #63	; 0x3f
   1bc9c:	ldr	r8, [r4, #4]
   1bca0:	add	r5, pc, r5
   1bca4:	mov	r4, #0
   1bca8:	strb	sl, [r3, #11]
   1bcac:	strb	r9, [r3, #12]
   1bcb0:	mov	r0, #1
   1bcb4:	strb	r8, [r3, #9]
   1bcb8:	strb	r7, [r3, #10]
   1bcbc:	strb	r4, [r3, #13]
   1bcc0:	strh	r4, [ip, r6]
   1bcc4:	ldr	r3, [ip, #140]	; 0x8c
   1bcc8:	str	r4, [r5]
   1bccc:	add	r3, r3, #8
   1bcd0:	str	r3, [ip, #140]	; 0x8c
   1bcd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bcd8:	andeq	r7, r1, r4, lsr #13
   1bcdc:	andeq	r7, r1, r8, ror #12

0001bce0 <beginMidiBlock@@Base>:
   1bce0:	push	{r4, lr}
   1bce4:	ldr	r2, [r0, #140]	; 0x8c
   1bce8:	ldr	r3, [r0, #136]	; 0x88
   1bcec:	ldr	r4, [pc, #104]	; 1bd5c <beginMidiBlock@@Base+0x7c>
   1bcf0:	add	r1, r2, #7
   1bcf4:	cmp	r1, r3
   1bcf8:	add	r4, pc, r4
   1bcfc:	movlt	r3, r0
   1bd00:	str	r0, [r4]
   1bd04:	blt	1bd14 <beginMidiBlock@@Base+0x34>
   1bd08:	bl	1b890 <seqbuf_dump@@Base>
   1bd0c:	ldr	r3, [r4]
   1bd10:	ldr	r2, [r3, #140]	; 0x8c
   1bd14:	add	r1, r3, r2
   1bd18:	add	r4, r2, #12
   1bd1c:	ldr	ip, [pc, #60]	; 1bd60 <beginMidiBlock@@Base+0x80>
   1bd20:	mvn	r0, #126	; 0x7e
   1bd24:	mov	r2, #4
   1bd28:	strb	r0, [r1, #8]
   1bd2c:	strb	r2, [r1, #9]
   1bd30:	add	ip, pc, ip
   1bd34:	mov	r2, #0
   1bd38:	strb	r2, [r1, #10]
   1bd3c:	strb	r2, [r1, #11]
   1bd40:	mov	r0, #1
   1bd44:	str	r2, [r3, r4]
   1bd48:	ldr	r1, [r3, #140]	; 0x8c
   1bd4c:	str	r2, [ip]
   1bd50:	add	r2, r1, #8
   1bd54:	str	r2, [r3, #140]	; 0x8c
   1bd58:	pop	{r4, pc}
   1bd5c:	andeq	r7, r1, r0, lsl r6
   1bd60:	ldrdeq	r7, [r1], -r8

0001bd64 <endMidiBlock@@Base>:
   1bd64:	push	{r3, r4, r5, lr}
   1bd68:	mov	r4, r0
   1bd6c:	ldr	r1, [r0, #140]	; 0x8c
   1bd70:	ldr	r3, [r0, #136]	; 0x88
   1bd74:	ldr	r5, [pc, #120]	; 1bdf4 <endMidiBlock@@Base+0x90>
   1bd78:	add	r2, r1, #7
   1bd7c:	cmp	r2, r3
   1bd80:	add	r5, pc, r5
   1bd84:	movlt	r3, r0
   1bd88:	str	r0, [r5]
   1bd8c:	blt	1bd9c <endMidiBlock@@Base+0x38>
   1bd90:	bl	1b890 <seqbuf_dump@@Base>
   1bd94:	ldr	r3, [r5]
   1bd98:	ldr	r1, [r3, #140]	; 0x8c
   1bd9c:	add	r2, r3, r1
   1bda0:	add	r1, r1, #12
   1bda4:	mov	r5, #0
   1bda8:	mvn	ip, #126	; 0x7e
   1bdac:	strb	r5, [r2, #10]
   1bdb0:	mov	r0, #3
   1bdb4:	strb	ip, [r2, #8]
   1bdb8:	strb	r0, [r2, #9]
   1bdbc:	strb	r5, [r2, #11]
   1bdc0:	str	r5, [r3, r1]
   1bdc4:	ldr	r2, [r3, #140]	; 0x8c
   1bdc8:	add	r2, r2, #8
   1bdcc:	str	r2, [r3, #140]	; 0x8c
   1bdd0:	bl	1b890 <seqbuf_dump@@Base>
   1bdd4:	ldr	r0, [r4]
   1bdd8:	movw	r1, #20737	; 0x5101
   1bddc:	bl	13e30 <ioctl@plt>
   1bde0:	ldr	r3, [pc, #16]	; 1bdf8 <endMidiBlock@@Base+0x94>
   1bde4:	mov	r0, #1
   1bde8:	add	r3, pc, r3
   1bdec:	str	r5, [r3]
   1bdf0:	pop	{r3, r4, r5, pc}
   1bdf4:	andeq	r7, r1, r8, lsl #11
   1bdf8:	andeq	r7, r1, r0, lsr #10

0001bdfc <startMidiNote@@Base>:
   1bdfc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1be00:	mov	r4, r0
   1be04:	ldr	r0, [r0, #140]	; 0x8c
   1be08:	mov	r8, r1
   1be0c:	ldr	r5, [pc, #156]	; 1beb0 <startMidiNote@@Base+0xb4>
   1be10:	mov	r9, r2
   1be14:	ldr	r1, [r4, #136]	; 0x88
   1be18:	add	r6, r0, #7
   1be1c:	add	r5, pc, r5
   1be20:	mov	r7, r3
   1be24:	cmp	r6, r1
   1be28:	str	r4, [r5]
   1be2c:	movlt	r5, r4
   1be30:	blt	1be44 <startMidiNote@@Base+0x48>
   1be34:	bl	1b890 <seqbuf_dump@@Base>
   1be38:	ldr	r5, [r5]
   1be3c:	ldr	r0, [r5, #140]	; 0x8c
   1be40:	add	r6, r0, #7
   1be44:	rsb	r3, r7, r7, lsl #7
   1be48:	movw	r7, #34079	; 0x851f
   1be4c:	movt	r7, #20971	; 0x51eb
   1be50:	add	ip, r5, r0
   1be54:	ldr	sl, [pc, #88]	; 1beb4 <startMidiNote@@Base+0xb8>
   1be58:	mvn	r2, #108	; 0x6c
   1be5c:	smull	r1, r7, r7, r3
   1be60:	strb	r2, [ip, #8]
   1be64:	ldr	r1, [r4, #4]
   1be68:	add	sl, pc, sl
   1be6c:	add	r6, r5, r6
   1be70:	asr	r3, r3, #31
   1be74:	add	r2, r0, #8
   1be78:	strb	r8, [ip, #11]
   1be7c:	strb	r1, [ip, #9]
   1be80:	mvn	r4, #111	; 0x6f
   1be84:	mov	r1, #0
   1be88:	strb	r9, [ip, #12]
   1be8c:	strb	r4, [ip, #10]
   1be90:	rsb	r7, r3, r7, asr #5
   1be94:	strb	r1, [ip, #14]
   1be98:	mov	r0, #1
   1be9c:	strb	r7, [ip, #13]
   1bea0:	str	r1, [sl]
   1bea4:	strb	r1, [r6, #8]
   1bea8:	str	r2, [r5, #140]	; 0x8c
   1beac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1beb0:	andeq	r7, r1, ip, ror #9
   1beb4:	andeq	r7, r1, r0, lsr #9

0001beb8 <stopMidiNote@@Base>:
   1beb8:	push	{r4, r5, r6, r7, r8, lr}
   1bebc:	mov	r4, r0
   1bec0:	ldr	r2, [r0, #140]	; 0x8c
   1bec4:	mov	r8, r1
   1bec8:	ldr	r3, [r0, #136]	; 0x88
   1becc:	ldr	r5, [pc, #120]	; 1bf4c <stopMidiNote@@Base+0x94>
   1bed0:	add	r0, r2, #7
   1bed4:	cmp	r0, r3
   1bed8:	add	r5, pc, r5
   1bedc:	movlt	ip, r4
   1bee0:	str	r4, [r5]
   1bee4:	blt	1bef8 <stopMidiNote@@Base+0x40>
   1bee8:	bl	1b890 <seqbuf_dump@@Base>
   1beec:	ldr	ip, [r5]
   1bef0:	ldr	r2, [ip, #140]	; 0x8c
   1bef4:	add	r0, r2, #7
   1bef8:	add	r3, ip, r2
   1befc:	ldr	r7, [pc, #76]	; 1bf50 <stopMidiNote@@Base+0x98>
   1bf00:	mvn	r1, #108	; 0x6c
   1bf04:	add	r6, ip, r0
   1bf08:	strb	r1, [r3, #8]
   1bf0c:	add	r7, pc, r7
   1bf10:	ldr	r4, [r4, #4]
   1bf14:	add	r5, r2, #8
   1bf18:	strb	r8, [r3, #11]
   1bf1c:	mov	r2, #0
   1bf20:	mvn	r0, #127	; 0x7f
   1bf24:	strb	r2, [r3, #12]
   1bf28:	strb	r0, [r3, #10]
   1bf2c:	mov	r0, #1
   1bf30:	strb	r4, [r3, #9]
   1bf34:	strb	r2, [r3, #13]
   1bf38:	strb	r2, [r3, #14]
   1bf3c:	str	r2, [r7]
   1bf40:	strb	r2, [r6, #8]
   1bf44:	str	r5, [ip, #140]	; 0x8c
   1bf48:	pop	{r4, r5, r6, r7, r8, pc}
   1bf4c:	andeq	r7, r1, r0, lsr r4
   1bf50:	strdeq	r7, [r1], -ip

0001bf54 <insertMidiWait@@Base>:
   1bf54:	push	{r4, r5, r6, lr}
   1bf58:	mov	r5, r1
   1bf5c:	ldr	ip, [r0, #140]	; 0x8c
   1bf60:	ldr	r3, [r0, #136]	; 0x88
   1bf64:	ldr	r4, [pc, #124]	; 1bfe8 <insertMidiWait@@Base+0x94>
   1bf68:	add	r2, ip, #7
   1bf6c:	cmp	r2, r3
   1bf70:	add	r4, pc, r4
   1bf74:	movlt	r3, r0
   1bf78:	str	r0, [r4]
   1bf7c:	blt	1bf8c <insertMidiWait@@Base+0x38>
   1bf80:	bl	1b890 <seqbuf_dump@@Base>
   1bf84:	ldr	r3, [r4]
   1bf88:	ldr	ip, [r3, #140]	; 0x8c
   1bf8c:	add	r1, r5, #9
   1bf90:	movw	r0, #26215	; 0x6667
   1bf94:	movt	r0, #26214	; 0x6666
   1bf98:	add	r2, r3, ip
   1bf9c:	asr	r5, r1, #31
   1bfa0:	add	ip, ip, #12
   1bfa4:	smull	r4, r6, r0, r1
   1bfa8:	ldr	r1, [pc, #60]	; 1bfec <insertMidiWait@@Base+0x98>
   1bfac:	mvn	r4, #126	; 0x7e
   1bfb0:	mov	r0, #1
   1bfb4:	strb	r4, [r2, #8]
   1bfb8:	add	r1, pc, r1
   1bfbc:	mov	r4, #0
   1bfc0:	strb	r0, [r2, #9]
   1bfc4:	strb	r4, [r2, #10]
   1bfc8:	strb	r4, [r2, #11]
   1bfcc:	rsb	r5, r5, r6, asr #2
   1bfd0:	str	r5, [r3, ip]
   1bfd4:	ldr	r2, [r3, #140]	; 0x8c
   1bfd8:	str	r4, [r1]
   1bfdc:	add	r2, r2, #8
   1bfe0:	str	r2, [r3, #140]	; 0x8c
   1bfe4:	pop	{r4, r5, r6, pc}
   1bfe8:	muleq	r1, r8, r3
   1bfec:	andeq	r7, r1, r0, asr r3

0001bff0 <enablePorts@@Base>:
   1bff0:	push	{r4, r5, r6, lr}
   1bff4:	mov	r5, r1
   1bff8:	sub	sp, sp, #8
   1bffc:	mov	r1, r2
   1c000:	mov	r4, r2
   1c004:	mov	r6, r0
   1c008:	mov	r2, #1
   1c00c:	mov	r0, r5
   1c010:	bl	13d10 <ioperm@plt>
   1c014:	cmn	r0, #1
   1c018:	movne	r0, #1
   1c01c:	beq	1c028 <enablePorts@@Base+0x38>
   1c020:	add	sp, sp, #8
   1c024:	pop	{r4, r5, r6, pc}
   1c028:	bl	1419c <__errno_location@plt>
   1c02c:	ldr	r0, [r0]
   1c030:	bl	13b54 <strerror@plt>
   1c034:	ldr	r1, [pc, #32]	; 1c05c <enablePorts@@Base+0x6c>
   1c038:	mov	r2, r5
   1c03c:	mov	r3, r4
   1c040:	add	r1, pc, r1
   1c044:	str	r0, [sp]
   1c048:	mov	r0, r6
   1c04c:	bl	1825c <logMessage@@Base>
   1c050:	mov	r0, #0
   1c054:	add	sp, sp, #8
   1c058:	pop	{r4, r5, r6, pc}
   1c05c:	andeq	r1, r0, r0, lsr lr

0001c060 <disablePorts@@Base>:
   1c060:	push	{r4, r5, lr}
   1c064:	mov	r2, #0
   1c068:	sub	sp, sp, #12
   1c06c:	mov	r5, r0
   1c070:	mov	r4, r1
   1c074:	bl	13d10 <ioperm@plt>
   1c078:	cmn	r0, #1
   1c07c:	movne	r0, #1
   1c080:	beq	1c08c <disablePorts@@Base+0x2c>
   1c084:	add	sp, sp, #12
   1c088:	pop	{r4, r5, pc}
   1c08c:	bl	1419c <__errno_location@plt>
   1c090:	ldr	r0, [r0]
   1c094:	bl	13b54 <strerror@plt>
   1c098:	ldr	r1, [pc, #32]	; 1c0c0 <disablePorts@@Base+0x60>
   1c09c:	mov	r2, r5
   1c0a0:	mov	r3, r4
   1c0a4:	add	r1, pc, r1
   1c0a8:	str	r0, [sp]
   1c0ac:	mov	r0, #3
   1c0b0:	bl	1825c <logMessage@@Base>
   1c0b4:	mov	r0, #0
   1c0b8:	add	sp, sp, #12
   1c0bc:	pop	{r4, r5, pc}
   1c0c0:	andeq	r1, r0, ip, ror #27

0001c0c4 <readPort1@@Base>:
   1c0c4:	b	13ee4 <inb@plt>

0001c0c8 <writePort1@@Base>:
   1c0c8:	mov	r3, r0
   1c0cc:	mov	r0, r1
   1c0d0:	mov	r1, r3
   1c0d4:	b	13ea8 <outb@plt>

0001c0d8 <installKernelModule@@Base>:
   1c0d8:	cmp	r1, #0
   1c0dc:	beq	1c0ec <installKernelModule@@Base+0x14>
   1c0e0:	ldr	r3, [r1]
   1c0e4:	cmp	r3, #0
   1c0e8:	bne	1c0f0 <installKernelModule@@Base+0x18>
   1c0ec:	b	1b238 <executeHostCommand@@Base+0x1b4>
   1c0f0:	subs	r3, r3, #2
   1c0f4:	rsbs	r0, r3, #0
   1c0f8:	adcs	r0, r0, r3
   1c0fc:	bx	lr

0001c100 <canBeep@@Base>:
   1c100:	ldr	r1, [pc, #36]	; 1c12c <canBeep@@Base+0x2c>
   1c104:	ldr	r0, [pc, #36]	; 1c130 <canBeep@@Base+0x30>
   1c108:	add	r1, pc, r1
   1c10c:	push	{r3, lr}
   1c110:	add	r1, r1, #4
   1c114:	add	r0, pc, r0
   1c118:	bl	1c0d8 <installKernelModule@@Base>
   1c11c:	bl	192b8 <getConsole@@Base>
   1c120:	adds	r0, r0, #0
   1c124:	movne	r0, #1
   1c128:	pop	{r3, pc}
   1c12c:	andeq	r7, r1, r0, lsl #4
   1c130:	muleq	r0, ip, sp

0001c134 <openCharacterDevice@@Base>:
   1c134:	ldr	ip, [pc, #716]	; 1c408 <openCharacterDevice@@Base+0x2d4>
   1c138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c13c:	mov	r7, r1
   1c140:	ldr	r1, [pc, #708]	; 1c40c <openCharacterDevice@@Base+0x2d8>
   1c144:	add	ip, pc, ip
   1c148:	mov	r9, r3
   1c14c:	sub	sp, sp, #124	; 0x7c
   1c150:	mov	r3, ip
   1c154:	mov	sl, r2
   1c158:	ldr	r6, [ip, r1]
   1c15c:	mov	r8, r0
   1c160:	ldr	r3, [r6]
   1c164:	str	r3, [sp, #116]	; 0x74
   1c168:	bl	195c0 <getDevicePath@@Base>
   1c16c:	subs	r5, r0, #0
   1c170:	beq	1c270 <openCharacterDevice@@Base+0x13c>
   1c174:	mov	r1, r7
   1c178:	bl	141a8 <__open_2@plt>
   1c17c:	cmn	r0, #1
   1c180:	mov	r4, r0
   1c184:	beq	1c228 <openCharacterDevice@@Base+0xf4>
   1c188:	ldr	r1, [pc, #640]	; 1c410 <openCharacterDevice@@Base+0x2dc>
   1c18c:	mov	r0, #7
   1c190:	mov	r2, r5
   1c194:	mov	r3, r4
   1c198:	add	r1, pc, r1
   1c19c:	bl	1825c <logMessage@@Base>
   1c1a0:	mov	r0, #3
   1c1a4:	mov	r1, r4
   1c1a8:	add	r2, sp, #24
   1c1ac:	bl	140d0 <__fxstat@plt>
   1c1b0:	cmn	r0, #1
   1c1b4:	beq	1c278 <openCharacterDevice@@Base+0x144>
   1c1b8:	ldr	r3, [sp, #40]	; 0x28
   1c1bc:	and	r3, r3, #61440	; 0xf000
   1c1c0:	cmp	r3, #8192	; 0x2000
   1c1c4:	beq	1c204 <openCharacterDevice@@Base+0xd0>
   1c1c8:	ldr	r1, [pc, #580]	; 1c414 <openCharacterDevice@@Base+0x2e0>
   1c1cc:	mov	r0, #7
   1c1d0:	mov	r2, r5
   1c1d4:	mov	r3, r4
   1c1d8:	add	r1, pc, r1
   1c1dc:	bl	1825c <logMessage@@Base>
   1c1e0:	mov	r0, r4
   1c1e4:	bl	13f68 <close@plt>
   1c1e8:	ldr	r1, [pc, #552]	; 1c418 <openCharacterDevice@@Base+0x2e4>
   1c1ec:	mov	r3, r4
   1c1f0:	mov	r0, #7
   1c1f4:	add	r1, pc, r1
   1c1f8:	mov	r2, r5
   1c1fc:	mvn	r4, #0
   1c200:	bl	1825c <logMessage@@Base>
   1c204:	mov	r0, r5
   1c208:	bl	13da0 <free@plt>
   1c20c:	ldr	r2, [sp, #116]	; 0x74
   1c210:	mov	r0, r4
   1c214:	ldr	r3, [r6]
   1c218:	cmp	r2, r3
   1c21c:	bne	1c3c0 <openCharacterDevice@@Base+0x28c>
   1c220:	add	sp, sp, #124	; 0x7c
   1c224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c228:	bl	1419c <__errno_location@plt>
   1c22c:	ldr	r3, [pc, #488]	; 1c41c <openCharacterDevice@@Base+0x2e8>
   1c230:	add	r3, pc, r3
   1c234:	str	r3, [sp, #12]
   1c238:	mov	fp, r0
   1c23c:	ldr	r0, [r0]
   1c240:	bl	13b54 <strerror@plt>
   1c244:	ldr	r1, [sp, #12]
   1c248:	mov	r2, r5
   1c24c:	mov	r3, r0
   1c250:	mov	r0, #7
   1c254:	bl	1825c <logMessage@@Base>
   1c258:	ldr	r3, [fp]
   1c25c:	cmp	r3, #2
   1c260:	beq	1c2a4 <openCharacterDevice@@Base+0x170>
   1c264:	cmp	r5, #0
   1c268:	mvnne	r4, #0
   1c26c:	bne	1c204 <openCharacterDevice@@Base+0xd0>
   1c270:	mvn	r4, #0
   1c274:	b	1c20c <openCharacterDevice@@Base+0xd8>
   1c278:	bl	1419c <__errno_location@plt>
   1c27c:	ldr	r0, [r0]
   1c280:	bl	13b54 <strerror@plt>
   1c284:	ldr	r1, [pc, #404]	; 1c420 <openCharacterDevice@@Base+0x2ec>
   1c288:	mov	r2, r4
   1c28c:	mov	r3, r5
   1c290:	add	r1, pc, r1
   1c294:	str	r0, [sp]
   1c298:	mov	r0, #7
   1c29c:	bl	1825c <logMessage@@Base>
   1c2a0:	b	1c1e0 <openCharacterDevice@@Base+0xac>
   1c2a4:	mov	r0, r5
   1c2a8:	bl	13da0 <free@plt>
   1c2ac:	mov	r0, r8
   1c2b0:	bl	18570 <locatePathName@@Base>
   1c2b4:	bl	18a80 <makeWritablePath@@Base>
   1c2b8:	subs	r5, r0, #0
   1c2bc:	beq	1c270 <openCharacterDevice@@Base+0x13c>
   1c2c0:	mov	r1, r7
   1c2c4:	bl	141a8 <__open_2@plt>
   1c2c8:	cmn	r0, #1
   1c2cc:	mov	r4, r0
   1c2d0:	beq	1c2f0 <openCharacterDevice@@Base+0x1bc>
   1c2d4:	ldr	r1, [pc, #328]	; 1c424 <openCharacterDevice@@Base+0x2f0>
   1c2d8:	mov	r0, #7
   1c2dc:	mov	r2, r5
   1c2e0:	mov	r3, r4
   1c2e4:	add	r1, pc, r1
   1c2e8:	bl	1825c <logMessage@@Base>
   1c2ec:	b	1c1a0 <openCharacterDevice@@Base+0x6c>
   1c2f0:	ldr	r0, [fp]
   1c2f4:	bl	13b54 <strerror@plt>
   1c2f8:	ldr	r1, [sp, #12]
   1c2fc:	mov	r2, r5
   1c300:	mov	r3, r0
   1c304:	mov	r0, #7
   1c308:	bl	1825c <logMessage@@Base>
   1c30c:	ldr	r3, [fp]
   1c310:	cmp	r3, #2
   1c314:	bne	1c264 <openCharacterDevice@@Base+0x130>
   1c318:	bic	lr, r9, #255	; 0xff
   1c31c:	ubfx	r8, sl, #0, #12
   1c320:	bic	r3, sl, #4080	; 0xff0
   1c324:	uxtb	r4, r9
   1c328:	lsr	r1, lr, #20
   1c32c:	lsl	r0, lr, #12
   1c330:	add	lr, sp, #120	; 0x78
   1c334:	bic	r3, r3, #15
   1c338:	mov	r2, #0
   1c33c:	orr	r4, r4, r8, lsl #8
   1c340:	orr	r2, r2, r0
   1c344:	orr	r3, r3, r1
   1c348:	orr	r2, r2, r4
   1c34c:	mov	r0, #1
   1c350:	strd	r2, [lr, #-104]!	; 0xffffff98
   1c354:	mov	r1, r5
   1c358:	mov	r2, #8576	; 0x2180
   1c35c:	mov	r3, lr
   1c360:	bl	13d94 <__xmknod@plt>
   1c364:	cmn	r0, #1
   1c368:	beq	1c3c4 <openCharacterDevice@@Base+0x290>
   1c36c:	ldr	r1, [pc, #180]	; 1c428 <openCharacterDevice@@Base+0x2f4>
   1c370:	mov	r0, #7
   1c374:	mov	r2, r5
   1c378:	mov	r3, #8576	; 0x2180
   1c37c:	add	r1, pc, r1
   1c380:	str	sl, [sp]
   1c384:	str	r9, [sp, #4]
   1c388:	bl	1825c <logMessage@@Base>
   1c38c:	mov	r0, r5
   1c390:	mov	r1, r7
   1c394:	bl	141a8 <__open_2@plt>
   1c398:	cmn	r0, #1
   1c39c:	mov	r4, r0
   1c3a0:	beq	1c3e8 <openCharacterDevice@@Base+0x2b4>
   1c3a4:	ldr	r1, [pc, #128]	; 1c42c <openCharacterDevice@@Base+0x2f8>
   1c3a8:	mov	r0, #7
   1c3ac:	mov	r2, r5
   1c3b0:	mov	r3, r4
   1c3b4:	add	r1, pc, r1
   1c3b8:	bl	1825c <logMessage@@Base>
   1c3bc:	b	1c1a0 <openCharacterDevice@@Base+0x6c>
   1c3c0:	bl	13fec <__stack_chk_fail@plt>
   1c3c4:	ldr	r0, [fp]
   1c3c8:	bl	13b54 <strerror@plt>
   1c3cc:	ldr	r1, [pc, #92]	; 1c430 <openCharacterDevice@@Base+0x2fc>
   1c3d0:	mov	r2, r5
   1c3d4:	add	r1, pc, r1
   1c3d8:	mov	r3, r0
   1c3dc:	mov	r0, #7
   1c3e0:	bl	1825c <logMessage@@Base>
   1c3e4:	b	1c264 <openCharacterDevice@@Base+0x130>
   1c3e8:	ldr	r0, [fp]
   1c3ec:	bl	13b54 <strerror@plt>
   1c3f0:	ldr	r1, [sp, #12]
   1c3f4:	mov	r2, r5
   1c3f8:	mov	r3, r0
   1c3fc:	mov	r0, #7
   1c400:	bl	1825c <logMessage@@Base>
   1c404:	b	1c264 <openCharacterDevice@@Base+0x130>
   1c408:			; <UNDEFINED> instruction: 0x00012eb4
   1c40c:	andeq	r0, r0, ip, ror #4
   1c410:	andeq	r1, r0, r0, lsr #26
   1c414:	andeq	r1, r0, ip, lsl #27
   1c418:	muleq	r0, r4, sp
   1c41c:	andeq	r1, r0, r4, lsr #25
   1c420:			; <UNDEFINED> instruction: 0x00001cb0
   1c424:	ldrdeq	r1, [r0], -r4
   1c428:	muleq	r0, r4, fp
   1c42c:	andeq	r1, r0, r4, lsl #22
   1c430:	andeq	r1, r0, ip, lsl fp

0001c434 <getUinputDevice@@Base>:
   1c434:	ldr	r3, [pc, #616]	; 1c6a4 <getUinputDevice@@Base+0x270>
   1c438:	ldr	r1, [pc, #616]	; 1c6a8 <getUinputDevice@@Base+0x274>
   1c43c:	add	r3, pc, r3
   1c440:	ldr	r2, [pc, #612]	; 1c6ac <getUinputDevice@@Base+0x278>
   1c444:	push	{r4, r5, r6, r7, lr}
   1c448:	add	r2, pc, r2
   1c44c:	ldr	r6, [r3, r1]
   1c450:	sub	sp, sp, #1120	; 0x460
   1c454:	ldr	r0, [r2]
   1c458:	sub	sp, sp, #4
   1c45c:	ldr	r3, [r6]
   1c460:	cmn	r0, #1
   1c464:	str	r3, [sp, #1116]	; 0x45c
   1c468:	beq	1c488 <getUinputDevice@@Base+0x54>
   1c46c:	ldr	r2, [sp, #1116]	; 0x45c
   1c470:	ldr	r3, [r6]
   1c474:	cmp	r2, r3
   1c478:	bne	1c6a0 <getUinputDevice@@Base+0x26c>
   1c47c:	add	sp, sp, #1120	; 0x460
   1c480:	add	sp, sp, #4
   1c484:	pop	{r4, r5, r6, r7, pc}
   1c488:	ldr	r1, [pc, #544]	; 1c6b0 <getUinputDevice@@Base+0x27c>
   1c48c:	ldr	r0, [pc, #544]	; 1c6b4 <getUinputDevice@@Base+0x280>
   1c490:	add	r1, pc, r1
   1c494:	add	r0, pc, r0
   1c498:	ldr	r4, [r1, #8]!
   1c49c:	bl	1c0d8 <installKernelModule@@Base>
   1c4a0:	cmp	r0, #0
   1c4a4:	beq	1c4b8 <getUinputDevice@@Base+0x84>
   1c4a8:	cmp	r4, #0
   1c4ac:	bne	1c4b8 <getUinputDevice@@Base+0x84>
   1c4b0:	mov	r0, #500	; 0x1f4
   1c4b4:	bl	1a84c <approximateDelay@@Base>
   1c4b8:	ldr	r0, [pc, #504]	; 1c6b8 <getUinputDevice@@Base+0x284>
   1c4bc:	ldr	r1, [pc, #504]	; 1c6bc <getUinputDevice@@Base+0x288>
   1c4c0:	add	r0, pc, r0
   1c4c4:	add	r1, pc, r1
   1c4c8:	bl	195d8 <resolveDeviceName@@Base>
   1c4cc:	subs	r4, r0, #0
   1c4d0:	beq	1c664 <getUinputDevice@@Base+0x230>
   1c4d4:	mov	r1, #1
   1c4d8:	mov	r2, #10
   1c4dc:	mov	r3, #223	; 0xdf
   1c4e0:	bl	1c134 <openCharacterDevice@@Base>
   1c4e4:	cmn	r0, #1
   1c4e8:	mov	r5, r0
   1c4ec:	beq	1c648 <getUinputDevice@@Base+0x214>
   1c4f0:	ldr	r1, [pc, #456]	; 1c6c0 <getUinputDevice@@Base+0x28c>
   1c4f4:	mov	r3, r5
   1c4f8:	mov	r2, r4
   1c4fc:	mov	r0, #7
   1c500:	add	r1, pc, r1
   1c504:	bl	1825c <logMessage@@Base>
   1c508:	mov	r1, #0
   1c50c:	movw	r2, #1116	; 0x45c
   1c510:	mov	r0, sp
   1c514:	bl	13cec <memset@plt>
   1c518:	ldr	r3, [pc, #420]	; 1c6c4 <getUinputDevice@@Base+0x290>
   1c51c:	movw	r2, #1116	; 0x45c
   1c520:	add	r3, pc, r3
   1c524:	ldm	r3, {r0, r1}
   1c528:	lsr	r3, r1, #16
   1c52c:	strb	r3, [sp, #6]
   1c530:	str	r0, [sp]
   1c534:	mov	r0, r5
   1c538:	strh	r1, [sp, #4]
   1c53c:	mov	r1, sp
   1c540:	bl	13db8 <write@plt>
   1c544:	cmn	r0, #1
   1c548:	beq	1c670 <getUinputDevice@@Base+0x23c>
   1c54c:	movw	r1, #21860	; 0x5564
   1c550:	mov	r0, r5
   1c554:	movt	r1, #16388	; 0x4004
   1c558:	mov	r2, #1
   1c55c:	bl	13e30 <ioctl@plt>
   1c560:	ldr	r7, [pc, #352]	; 1c6c8 <getUinputDevice@@Base+0x294>
   1c564:	mov	r4, #0
   1c568:	add	r7, pc, r7
   1c56c:	cmn	r0, #1
   1c570:	bne	1c584 <getUinputDevice@@Base+0x150>
   1c574:	b	1c680 <getUinputDevice@@Base+0x24c>
   1c578:	add	r4, r4, #1
   1c57c:	cmp	r4, #768	; 0x300
   1c580:	beq	1c5c4 <getUinputDevice@@Base+0x190>
   1c584:	movw	r1, #21861	; 0x5565
   1c588:	mov	r0, r5
   1c58c:	movt	r1, #16388	; 0x4004
   1c590:	mov	r2, r4
   1c594:	bl	13e30 <ioctl@plt>
   1c598:	cmn	r0, #1
   1c59c:	bne	1c578 <getUinputDevice@@Base+0x144>
   1c5a0:	bl	1419c <__errno_location@plt>
   1c5a4:	ldr	r0, [r0]
   1c5a8:	bl	13b54 <strerror@plt>
   1c5ac:	mov	r1, r7
   1c5b0:	mov	r2, r4
   1c5b4:	mov	r3, r0
   1c5b8:	mov	r0, #4
   1c5bc:	bl	1825c <logMessage@@Base>
   1c5c0:	b	1c578 <getUinputDevice@@Base+0x144>
   1c5c4:	movw	r1, #21860	; 0x5564
   1c5c8:	mov	r0, r5
   1c5cc:	movt	r1, #16388	; 0x4004
   1c5d0:	mov	r2, #20
   1c5d4:	bl	13e30 <ioctl@plt>
   1c5d8:	cmn	r0, #1
   1c5dc:	beq	1c690 <getUinputDevice@@Base+0x25c>
   1c5e0:	mov	r0, r5
   1c5e4:	movw	r1, #21761	; 0x5501
   1c5e8:	bl	13e30 <ioctl@plt>
   1c5ec:	cmn	r0, #1
   1c5f0:	beq	1c608 <getUinputDevice@@Base+0x1d4>
   1c5f4:	ldr	r3, [pc, #208]	; 1c6cc <getUinputDevice@@Base+0x298>
   1c5f8:	mov	r0, r5
   1c5fc:	add	r3, pc, r3
   1c600:	str	r5, [r3]
   1c604:	b	1c46c <getUinputDevice@@Base+0x38>
   1c608:	ldr	r0, [pc, #192]	; 1c6d0 <getUinputDevice@@Base+0x29c>
   1c60c:	add	r0, pc, r0
   1c610:	bl	18324 <logSystemError@@Base>
   1c614:	ldr	r4, [pc, #184]	; 1c6d4 <getUinputDevice@@Base+0x2a0>
   1c618:	mov	r0, r5
   1c61c:	add	r4, pc, r4
   1c620:	ldr	r3, [r4]
   1c624:	cmp	r5, r3
   1c628:	beq	1c46c <getUinputDevice@@Base+0x38>
   1c62c:	bl	13f68 <close@plt>
   1c630:	ldr	r1, [pc, #160]	; 1c6d8 <getUinputDevice@@Base+0x2a4>
   1c634:	mov	r0, #7
   1c638:	add	r1, pc, r1
   1c63c:	bl	1825c <logMessage@@Base>
   1c640:	ldr	r0, [r4]
   1c644:	b	1c46c <getUinputDevice@@Base+0x38>
   1c648:	ldr	r1, [pc, #140]	; 1c6dc <getUinputDevice@@Base+0x2a8>
   1c64c:	mov	r0, #7
   1c650:	add	r1, pc, r1
   1c654:	bl	1825c <logMessage@@Base>
   1c658:	ldr	r3, [pc, #128]	; 1c6e0 <getUinputDevice@@Base+0x2ac>
   1c65c:	ldr	r0, [pc, r3]
   1c660:	b	1c46c <getUinputDevice@@Base+0x38>
   1c664:	ldr	r3, [pc, #120]	; 1c6e4 <getUinputDevice@@Base+0x2b0>
   1c668:	ldr	r0, [pc, r3]
   1c66c:	b	1c46c <getUinputDevice@@Base+0x38>
   1c670:	ldr	r0, [pc, #112]	; 1c6e8 <getUinputDevice@@Base+0x2b4>
   1c674:	add	r0, pc, r0
   1c678:	bl	18324 <logSystemError@@Base>
   1c67c:	b	1c614 <getUinputDevice@@Base+0x1e0>
   1c680:	ldr	r0, [pc, #100]	; 1c6ec <getUinputDevice@@Base+0x2b8>
   1c684:	add	r0, pc, r0
   1c688:	bl	18324 <logSystemError@@Base>
   1c68c:	b	1c614 <getUinputDevice@@Base+0x1e0>
   1c690:	ldr	r0, [pc, #88]	; 1c6f0 <getUinputDevice@@Base+0x2bc>
   1c694:	add	r0, pc, r0
   1c698:	bl	18324 <logSystemError@@Base>
   1c69c:	b	1c614 <getUinputDevice@@Base+0x1e0>
   1c6a0:	bl	13fec <__stack_chk_fail@plt>
   1c6a4:			; <UNDEFINED> instruction: 0x00012bbc
   1c6a8:	andeq	r0, r0, ip, ror #4
   1c6ac:	andeq	r2, r1, r4, asr lr
   1c6b0:	andeq	r6, r1, r8, ror lr
   1c6b4:	andeq	r1, r0, r4, ror #23
   1c6b8:	andeq	r2, r1, r4, lsl #20
   1c6bc:			; <UNDEFINED> instruction: 0x00001bb4
   1c6c0:	andeq	r1, r0, r4, lsr #21
   1c6c4:	ldrdeq	r0, [r0], -ip
   1c6c8:	andeq	r1, r0, r0, ror sl
   1c6cc:	andeq	r2, r1, r0, lsr #25
   1c6d0:	andeq	r1, r0, r8, lsl sl
   1c6d4:	andeq	r2, r1, r0, lsl #25
   1c6d8:	andeq	r1, r0, r4, lsr #20
   1c6dc:	andeq	r1, r0, ip, lsl sl
   1c6e0:	andeq	r2, r1, r0, asr #24
   1c6e4:	andeq	r2, r1, r4, lsr ip
   1c6e8:	andeq	r1, r0, r8, asr #19
   1c6ec:	andeq	r1, r0, r8, lsr r9
   1c6f0:	andeq	r1, r0, r4, ror r9

0001c6f4 <hasInputEvent@@Base>:
   1c6f4:	push	{r4, r5, r6, fp, lr}
   1c6f8:	lsr	r3, r3, #5
   1c6fc:	ldr	lr, [pc, #132]	; 1c788 <hasInputEvent@@Base+0x94>
   1c700:	add	fp, sp, #16
   1c704:	ldr	r4, [pc, #128]	; 1c78c <hasInputEvent@@Base+0x98>
   1c708:	sub	sp, sp, #12
   1c70c:	add	lr, pc, lr
   1c710:	add	r3, r3, #1
   1c714:	add	r1, r1, #32
   1c718:	ldr	r4, [lr, r4]
   1c71c:	orr	r1, r1, #-2147483648	; 0x80000000
   1c720:	lsl	r5, r3, #2
   1c724:	movw	ip, #32760	; 0x7ff8
   1c728:	add	r5, r5, #10
   1c72c:	orr	r1, r1, #17664	; 0x4500
   1c730:	and	ip, r5, ip
   1c734:	orr	r1, r1, r3, lsl #18
   1c738:	sub	sp, sp, ip
   1c73c:	ldr	r3, [r4]
   1c740:	mov	r6, r2
   1c744:	mov	r2, sp
   1c748:	str	r3, [fp, #-24]	; 0xffffffe8
   1c74c:	bl	13e30 <ioctl@plt>
   1c750:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c754:	cmn	r0, #1
   1c758:	lsrne	r3, r6, #5
   1c75c:	andne	r6, r6, #31
   1c760:	moveq	r0, #0
   1c764:	ldrne	r0, [sp, r3, lsl #2]
   1c768:	ldr	r3, [r4]
   1c76c:	lsrne	r0, r0, r6
   1c770:	andne	r0, r0, #1
   1c774:	cmp	r2, r3
   1c778:	bne	1c784 <hasInputEvent@@Base+0x90>
   1c77c:	sub	sp, fp, #16
   1c780:	pop	{r4, r5, r6, fp, pc}
   1c784:	bl	13fec <__stack_chk_fail@plt>
   1c788:	andeq	r2, r1, ip, ror #17
   1c78c:	andeq	r0, r0, ip, ror #4

0001c790 <writeInputEvent@@Base>:
   1c790:	ldr	r3, [pc, #180]	; 1c84c <writeInputEvent@@Base+0xbc>
   1c794:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c798:	mov	r9, r0
   1c79c:	ldr	r0, [pc, #172]	; 1c850 <writeInputEvent@@Base+0xc0>
   1c7a0:	add	r3, pc, r3
   1c7a4:	sub	sp, sp, #24
   1c7a8:	mov	r8, r1
   1c7ac:	mov	r7, r2
   1c7b0:	ldr	r5, [r3, r0]
   1c7b4:	ldr	r3, [r5]
   1c7b8:	str	r3, [sp, #20]
   1c7bc:	bl	1c434 <getUinputDevice@@Base>
   1c7c0:	cmn	r0, #1
   1c7c4:	mov	r6, r0
   1c7c8:	moveq	r0, #0
   1c7cc:	beq	1c81c <writeInputEvent@@Base+0x8c>
   1c7d0:	add	sl, sp, #4
   1c7d4:	mov	r4, #0
   1c7d8:	mov	r1, r4
   1c7dc:	str	r4, [sp, #4]
   1c7e0:	mov	r0, sl
   1c7e4:	str	r4, [sp, #8]
   1c7e8:	str	r4, [sp, #12]
   1c7ec:	str	r4, [sp, #16]
   1c7f0:	bl	13e00 <gettimeofday@plt>
   1c7f4:	mov	r1, sl
   1c7f8:	mov	r0, r6
   1c7fc:	mov	r2, #16
   1c800:	strh	r9, [sp, #12]
   1c804:	strh	r8, [sp, #14]
   1c808:	str	r7, [sp, #16]
   1c80c:	bl	13db8 <write@plt>
   1c810:	cmn	r0, #1
   1c814:	movne	r0, #1
   1c818:	beq	1c834 <writeInputEvent@@Base+0xa4>
   1c81c:	ldr	r2, [sp, #20]
   1c820:	ldr	r3, [r5]
   1c824:	cmp	r2, r3
   1c828:	bne	1c848 <writeInputEvent@@Base+0xb8>
   1c82c:	add	sp, sp, #24
   1c830:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c834:	ldr	r0, [pc, #24]	; 1c854 <writeInputEvent@@Base+0xc4>
   1c838:	add	r0, pc, r0
   1c83c:	bl	18324 <logSystemError@@Base>
   1c840:	mov	r0, r4
   1c844:	b	1c81c <writeInputEvent@@Base+0x8c>
   1c848:	bl	13fec <__stack_chk_fail@plt>
   1c84c:	andeq	r2, r1, r8, asr r8
   1c850:	andeq	r0, r0, ip, ror #4
   1c854:	andeq	r1, r0, r8, asr #16

0001c858 <writeKeyEvent@@Base>:
   1c858:	push	{r3, r4, r5, lr}
   1c85c:	mov	r2, r1
   1c860:	mov	r4, r0
   1c864:	mov	r5, r1
   1c868:	uxth	r1, r0
   1c86c:	mov	r0, #1
   1c870:	bl	1c790 <writeInputEvent@@Base>
   1c874:	cmp	r0, #0
   1c878:	popeq	{r3, r4, r5, pc}
   1c87c:	cmp	r5, #0
   1c880:	bne	1c8bc <writeKeyEvent@@Base+0x64>
   1c884:	ldr	r2, [pc, #84]	; 1c8e0 <writeKeyEvent@@Base+0x88>
   1c888:	and	r3, r4, #7
   1c88c:	mov	r1, #1
   1c890:	add	r2, pc, r2
   1c894:	add	r4, r2, r4, lsr #3
   1c898:	ldrb	r2, [r4, #12]
   1c89c:	bic	r3, r2, r1, lsl r3
   1c8a0:	strb	r3, [r4, #12]
   1c8a4:	mov	r0, #0
   1c8a8:	mov	r1, r0
   1c8ac:	mov	r2, r0
   1c8b0:	bl	1c790 <writeInputEvent@@Base>
   1c8b4:	mov	r0, #1
   1c8b8:	pop	{r3, r4, r5, pc}
   1c8bc:	ldr	r2, [pc, #32]	; 1c8e4 <writeKeyEvent@@Base+0x8c>
   1c8c0:	and	r3, r4, #7
   1c8c4:	mov	r1, #1
   1c8c8:	add	r2, pc, r2
   1c8cc:	add	r4, r2, r4, lsr #3
   1c8d0:	ldrb	r2, [r4, #12]
   1c8d4:	orr	r3, r2, r1, lsl r3
   1c8d8:	strb	r3, [r4, #12]
   1c8dc:	b	1c8a4 <writeKeyEvent@@Base+0x4c>
   1c8e0:	andeq	r6, r1, r8, ror sl
   1c8e4:	andeq	r6, r1, r0, asr #20

0001c8e8 <releaseAllKeys@@Base>:
   1c8e8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1c8ec:	mov	r6, #1
   1c8f0:	ldr	r9, [pc, #88]	; 1c950 <releaseAllKeys@@Base+0x68>
   1c8f4:	mov	r7, #0
   1c8f8:	mov	r8, #0
   1c8fc:	add	r9, pc, r9
   1c900:	b	1c910 <releaseAllKeys@@Base+0x28>
   1c904:	add	r8, r8, #1
   1c908:	cmp	r8, #768	; 0x300
   1c90c:	beq	1c94c <releaseAllKeys@@Base+0x64>
   1c910:	add	r3, r9, r8, lsr #3
   1c914:	and	r1, r8, #7
   1c918:	mov	r5, #0
   1c91c:	ldrb	r2, [r3, #12]
   1c920:	and	r3, r5, r7
   1c924:	lsr	r4, r2, r1
   1c928:	and	r2, r4, r6
   1c92c:	orrs	r1, r2, r3
   1c930:	beq	1c904 <releaseAllKeys@@Base+0x1c>
   1c934:	mov	r0, r8
   1c938:	mov	r1, r5
   1c93c:	bl	1c858 <writeKeyEvent@@Base>
   1c940:	cmp	r0, #0
   1c944:	bne	1c904 <releaseAllKeys@@Base+0x1c>
   1c948:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1c94c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1c950:	andeq	r6, r1, ip, lsl #20
   1c954:	cmp	r1, #0
   1c958:	beq	1cb64 <releaseAllKeys@@Base+0x27c>
   1c95c:	eor	ip, r0, r1
   1c960:	rsbmi	r1, r1, #0
   1c964:	subs	r2, r1, #1
   1c968:	beq	1cb30 <releaseAllKeys@@Base+0x248>
   1c96c:	movs	r3, r0
   1c970:	rsbmi	r3, r0, #0
   1c974:	cmp	r3, r1
   1c978:	bls	1cb3c <releaseAllKeys@@Base+0x254>
   1c97c:	tst	r1, r2
   1c980:	beq	1cb4c <releaseAllKeys@@Base+0x264>
   1c984:	clz	r2, r3
   1c988:	clz	r0, r1
   1c98c:	sub	r2, r0, r2
   1c990:	rsbs	r2, r2, #31
   1c994:	addne	r2, r2, r2, lsl #1
   1c998:	mov	r0, #0
   1c99c:	addne	pc, pc, r2, lsl #2
   1c9a0:	nop	{0}
   1c9a4:	cmp	r3, r1, lsl #31
   1c9a8:	adc	r0, r0, r0
   1c9ac:	subcs	r3, r3, r1, lsl #31
   1c9b0:	cmp	r3, r1, lsl #30
   1c9b4:	adc	r0, r0, r0
   1c9b8:	subcs	r3, r3, r1, lsl #30
   1c9bc:	cmp	r3, r1, lsl #29
   1c9c0:	adc	r0, r0, r0
   1c9c4:	subcs	r3, r3, r1, lsl #29
   1c9c8:	cmp	r3, r1, lsl #28
   1c9cc:	adc	r0, r0, r0
   1c9d0:	subcs	r3, r3, r1, lsl #28
   1c9d4:	cmp	r3, r1, lsl #27
   1c9d8:	adc	r0, r0, r0
   1c9dc:	subcs	r3, r3, r1, lsl #27
   1c9e0:	cmp	r3, r1, lsl #26
   1c9e4:	adc	r0, r0, r0
   1c9e8:	subcs	r3, r3, r1, lsl #26
   1c9ec:	cmp	r3, r1, lsl #25
   1c9f0:	adc	r0, r0, r0
   1c9f4:	subcs	r3, r3, r1, lsl #25
   1c9f8:	cmp	r3, r1, lsl #24
   1c9fc:	adc	r0, r0, r0
   1ca00:	subcs	r3, r3, r1, lsl #24
   1ca04:	cmp	r3, r1, lsl #23
   1ca08:	adc	r0, r0, r0
   1ca0c:	subcs	r3, r3, r1, lsl #23
   1ca10:	cmp	r3, r1, lsl #22
   1ca14:	adc	r0, r0, r0
   1ca18:	subcs	r3, r3, r1, lsl #22
   1ca1c:	cmp	r3, r1, lsl #21
   1ca20:	adc	r0, r0, r0
   1ca24:	subcs	r3, r3, r1, lsl #21
   1ca28:	cmp	r3, r1, lsl #20
   1ca2c:	adc	r0, r0, r0
   1ca30:	subcs	r3, r3, r1, lsl #20
   1ca34:	cmp	r3, r1, lsl #19
   1ca38:	adc	r0, r0, r0
   1ca3c:	subcs	r3, r3, r1, lsl #19
   1ca40:	cmp	r3, r1, lsl #18
   1ca44:	adc	r0, r0, r0
   1ca48:	subcs	r3, r3, r1, lsl #18
   1ca4c:	cmp	r3, r1, lsl #17
   1ca50:	adc	r0, r0, r0
   1ca54:	subcs	r3, r3, r1, lsl #17
   1ca58:	cmp	r3, r1, lsl #16
   1ca5c:	adc	r0, r0, r0
   1ca60:	subcs	r3, r3, r1, lsl #16
   1ca64:	cmp	r3, r1, lsl #15
   1ca68:	adc	r0, r0, r0
   1ca6c:	subcs	r3, r3, r1, lsl #15
   1ca70:	cmp	r3, r1, lsl #14
   1ca74:	adc	r0, r0, r0
   1ca78:	subcs	r3, r3, r1, lsl #14
   1ca7c:	cmp	r3, r1, lsl #13
   1ca80:	adc	r0, r0, r0
   1ca84:	subcs	r3, r3, r1, lsl #13
   1ca88:	cmp	r3, r1, lsl #12
   1ca8c:	adc	r0, r0, r0
   1ca90:	subcs	r3, r3, r1, lsl #12
   1ca94:	cmp	r3, r1, lsl #11
   1ca98:	adc	r0, r0, r0
   1ca9c:	subcs	r3, r3, r1, lsl #11
   1caa0:	cmp	r3, r1, lsl #10
   1caa4:	adc	r0, r0, r0
   1caa8:	subcs	r3, r3, r1, lsl #10
   1caac:	cmp	r3, r1, lsl #9
   1cab0:	adc	r0, r0, r0
   1cab4:	subcs	r3, r3, r1, lsl #9
   1cab8:	cmp	r3, r1, lsl #8
   1cabc:	adc	r0, r0, r0
   1cac0:	subcs	r3, r3, r1, lsl #8
   1cac4:	cmp	r3, r1, lsl #7
   1cac8:	adc	r0, r0, r0
   1cacc:	subcs	r3, r3, r1, lsl #7
   1cad0:	cmp	r3, r1, lsl #6
   1cad4:	adc	r0, r0, r0
   1cad8:	subcs	r3, r3, r1, lsl #6
   1cadc:	cmp	r3, r1, lsl #5
   1cae0:	adc	r0, r0, r0
   1cae4:	subcs	r3, r3, r1, lsl #5
   1cae8:	cmp	r3, r1, lsl #4
   1caec:	adc	r0, r0, r0
   1caf0:	subcs	r3, r3, r1, lsl #4
   1caf4:	cmp	r3, r1, lsl #3
   1caf8:	adc	r0, r0, r0
   1cafc:	subcs	r3, r3, r1, lsl #3
   1cb00:	cmp	r3, r1, lsl #2
   1cb04:	adc	r0, r0, r0
   1cb08:	subcs	r3, r3, r1, lsl #2
   1cb0c:	cmp	r3, r1, lsl #1
   1cb10:	adc	r0, r0, r0
   1cb14:	subcs	r3, r3, r1, lsl #1
   1cb18:	cmp	r3, r1
   1cb1c:	adc	r0, r0, r0
   1cb20:	subcs	r3, r3, r1
   1cb24:	cmp	ip, #0
   1cb28:	rsbmi	r0, r0, #0
   1cb2c:	bx	lr
   1cb30:	teq	ip, r0
   1cb34:	rsbmi	r0, r0, #0
   1cb38:	bx	lr
   1cb3c:	movcc	r0, #0
   1cb40:	asreq	r0, ip, #31
   1cb44:	orreq	r0, r0, #1
   1cb48:	bx	lr
   1cb4c:	clz	r2, r1
   1cb50:	rsb	r2, r2, #31
   1cb54:	cmp	ip, #0
   1cb58:	lsr	r0, r3, r2
   1cb5c:	rsbmi	r0, r0, #0
   1cb60:	bx	lr
   1cb64:	cmp	r0, #0
   1cb68:	mvngt	r0, #-2147483648	; 0x80000000
   1cb6c:	movlt	r0, #-2147483648	; 0x80000000
   1cb70:	b	1cb94 <releaseAllKeys@@Base+0x2ac>
   1cb74:	cmp	r1, #0
   1cb78:	beq	1cb64 <releaseAllKeys@@Base+0x27c>
   1cb7c:	push	{r0, r1, lr}
   1cb80:	bl	1c95c <releaseAllKeys@@Base+0x74>
   1cb84:	pop	{r1, r2, lr}
   1cb88:	mul	r3, r2, r0
   1cb8c:	sub	r1, r1, r3
   1cb90:	bx	lr
   1cb94:	push	{r1, lr}
   1cb98:	mov	r0, #8
   1cb9c:	bl	13f2c <raise@plt>
   1cba0:	pop	{r1, pc}

0001cba4 <__libc_csu_init@@Base>:
   1cba4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1cba8:	mov	r7, r0
   1cbac:	ldr	r6, [pc, #76]	; 1cc00 <__libc_csu_init@@Base+0x5c>
   1cbb0:	mov	r8, r1
   1cbb4:	ldr	r5, [pc, #72]	; 1cc04 <__libc_csu_init@@Base+0x60>
   1cbb8:	mov	r9, r2
   1cbbc:	add	r6, pc, r6
   1cbc0:	bl	13b1c <_init@@Base>
   1cbc4:	add	r5, pc, r5
   1cbc8:	rsb	r6, r5, r6
   1cbcc:	asrs	r6, r6, #2
   1cbd0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1cbd4:	sub	r5, r5, #4
   1cbd8:	mov	r4, #0
   1cbdc:	add	r4, r4, #1
   1cbe0:	ldr	r3, [r5, #4]!
   1cbe4:	mov	r0, r7
   1cbe8:	mov	r1, r8
   1cbec:	mov	r2, r9
   1cbf0:	blx	r3
   1cbf4:	cmp	r4, r6
   1cbf8:	bne	1cbdc <__libc_csu_init@@Base+0x38>
   1cbfc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1cc00:	muleq	r1, ip, r2
   1cc04:	muleq	r1, r0, r2

0001cc08 <__libc_csu_fini@@Base>:
   1cc08:	bx	lr
   1cc0c:	ldr	r3, [pc, #28]	; 1cc30 <__libc_csu_fini@@Base+0x28>
   1cc10:	mov	r1, #0
   1cc14:	ldr	r2, [pc, #24]	; 1cc34 <__libc_csu_fini@@Base+0x2c>
   1cc18:	add	r3, pc, r3
   1cc1c:	ldr	r3, [r3, r2]
   1cc20:	cmp	r3, #0
   1cc24:	ldrne	r2, [r3]
   1cc28:	moveq	r2, r3
   1cc2c:	b	13c98 <__cxa_atexit@plt>
   1cc30:	andeq	r2, r1, r0, ror #7
   1cc34:	andeq	r0, r0, r8, ror #4

Disassembly of section .fini:

0001cc38 <_fini@@Base>:
   1cc38:	push	{r3, lr}
   1cc3c:	pop	{r3, pc}
