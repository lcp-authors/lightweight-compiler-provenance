
centos-preinstalled/mesg:     file format elf32-littlearm


Disassembly of section .init:

00000828 <.init>:
 828:	push	{r3, lr}
 82c:	bl	bfc <main@@Base+0x2dc>
 830:	pop	{r3, pc}

Disassembly of section .plt:

00000834 <__cxa_finalize@plt-0x14>:
 834:	push	{lr}		; (str lr, [sp, #-4]!)
 838:	ldr	lr, [pc, #4]	; 844 <__cxa_finalize@plt-0x4>
 83c:	add	lr, pc, lr
 840:	ldr	pc, [lr, #8]!
 844:	andeq	r9, r0, r0, asr #14

00000848 <__cxa_finalize@plt>:
 848:	add	ip, pc, #0, 12
 84c:	add	ip, ip, #36864	; 0x9000
 850:	ldr	pc, [ip, #1856]!	; 0x740

00000854 <__stack_chk_fail@plt>:
 854:	add	ip, pc, #0, 12
 858:	add	ip, ip, #36864	; 0x9000
 85c:	ldr	pc, [ip, #1848]!	; 0x738

00000860 <perror@plt>:
 860:	add	ip, pc, #0, 12
 864:	add	ip, ip, #36864	; 0x9000
 868:	ldr	pc, [ip, #1840]!	; 0x730

0000086c <fwrite@plt>:
 86c:	add	ip, pc, #0, 12
 870:	add	ip, ip, #36864	; 0x9000
 874:	ldr	pc, [ip, #1832]!	; 0x728

00000878 <__libc_start_main@plt>:
 878:	add	ip, pc, #0, 12
 87c:	add	ip, ip, #36864	; 0x9000
 880:	ldr	pc, [ip, #1824]!	; 0x720

00000884 <strerror@plt>:
 884:	add	ip, pc, #0, 12
 888:	add	ip, ip, #36864	; 0x9000
 88c:	ldr	pc, [ip, #1816]!	; 0x718

00000890 <__fxstat@plt>:
 890:	add	ip, pc, #0, 12
 894:	add	ip, ip, #36864	; 0x9000
 898:	ldr	pc, [ip, #1808]!	; 0x710

0000089c <__gmon_start__@plt>:
 89c:	add	ip, pc, #0, 12
 8a0:	add	ip, ip, #36864	; 0x9000
 8a4:	ldr	pc, [ip, #1800]!	; 0x708

000008a8 <exit@plt>:
 8a8:	add	ip, pc, #0, 12
 8ac:	add	ip, ip, #36864	; 0x9000
 8b0:	ldr	pc, [ip, #1792]!	; 0x700

000008b4 <ttyname@plt>:
 8b4:	add	ip, pc, #0, 12
 8b8:	add	ip, ip, #36864	; 0x9000
 8bc:	ldr	pc, [ip, #1784]!	; 0x6f8

000008c0 <__errno_location@plt>:
 8c0:	add	ip, pc, #0, 12
 8c4:	add	ip, ip, #36864	; 0x9000
 8c8:	ldr	pc, [ip, #1776]!	; 0x6f0

000008cc <__printf_chk@plt>:
 8cc:	add	ip, pc, #0, 12
 8d0:	add	ip, ip, #36864	; 0x9000
 8d4:	ldr	pc, [ip, #1768]!	; 0x6e8

000008d8 <__fprintf_chk@plt>:
 8d8:	add	ip, pc, #0, 12
 8dc:	add	ip, ip, #36864	; 0x9000
 8e0:	ldr	pc, [ip, #1760]!	; 0x6e0

000008e4 <isatty@plt>:
 8e4:	add	ip, pc, #0, 12
 8e8:	add	ip, ip, #36864	; 0x9000
 8ec:	ldr	pc, [ip, #1752]!	; 0x6d8

000008f0 <abort@plt>:
 8f0:	add	ip, pc, #0, 12
 8f4:	add	ip, ip, #36864	; 0x9000
 8f8:	ldr	pc, [ip, #1744]!	; 0x6d0

000008fc <getgrgid@plt>:
 8fc:	add	ip, pc, #0, 12
 900:	add	ip, ip, #36864	; 0x9000
 904:	ldr	pc, [ip, #1736]!	; 0x6c8

00000908 <getgrnam@plt>:
 908:	add	ip, pc, #0, 12
 90c:	add	ip, ip, #36864	; 0x9000
 910:	ldr	pc, [ip, #1728]!	; 0x6c0

00000914 <fchmod@plt>:
 914:	add	ip, pc, #0, 12
 918:	add	ip, ip, #36864	; 0x9000
 91c:	ldr	pc, [ip, #1720]!	; 0x6b8

Disassembly of section .text:

00000920 <main@@Base>:
 920:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 924:	sub	sp, sp, #104	; 0x68
 928:	ldr	r4, [pc, #580]	; b74 <main@@Base+0x254>
 92c:	mov	r6, r0
 930:	ldr	r3, [pc, #576]	; b78 <main@@Base+0x258>
 934:	mov	r0, #0
 938:	add	r4, pc, r4
 93c:	mov	r8, r1
 940:	ldr	r5, [r4, r3]
 944:	ldr	r3, [r5]
 948:	str	r3, [sp, #100]	; 0x64
 94c:	bl	8e4 <isatty@plt>
 950:	cmp	r0, #0
 954:	beq	a10 <main@@Base+0xf0>
 958:	add	r7, sp, #8
 95c:	mov	r0, #3
 960:	mov	r1, #0
 964:	mov	r2, r7
 968:	bl	890 <__fxstat@plt>
 96c:	cmp	r0, #0
 970:	blt	a4c <main@@Base+0x12c>
 974:	ldr	r9, [pc, #512]	; b7c <main@@Base+0x25c>
 978:	add	r9, pc, r9
 97c:	mov	r0, r9
 980:	bl	908 <getgrnam@plt>
 984:	adds	sl, r0, #0
 988:	mov	r0, r7
 98c:	movne	sl, #1
 990:	bl	da0 <main@@Base+0x480>
 994:	cmp	r6, #1
 998:	ble	a88 <main@@Base+0x168>
 99c:	cmp	r6, #2
 9a0:	bne	a60 <main@@Base+0x140>
 9a4:	ldr	r3, [r8, #4]
 9a8:	ldrb	r2, [r3]
 9ac:	cmp	r2, #110	; 0x6e
 9b0:	cmpne	r2, #121	; 0x79
 9b4:	bne	a60 <main@@Base+0x140>
 9b8:	cmp	sl, #0
 9bc:	beq	acc <main@@Base+0x1ac>
 9c0:	cmp	r0, #0
 9c4:	movne	sl, #0
 9c8:	andeq	sl, sl, #1
 9cc:	cmp	sl, #0
 9d0:	beq	b6c <main@@Base+0x24c>
 9d4:	cmp	r2, #121	; 0x79
 9d8:	ldrne	r3, [sp, #24]
 9dc:	movne	r1, #16
 9e0:	beq	b44 <main@@Base+0x224>
 9e4:	bic	r1, r3, r1
 9e8:	str	r1, [sp, #24]
 9ec:	ldr	r1, [sp, #24]
 9f0:	cmp	r1, r3
 9f4:	beq	a08 <main@@Base+0xe8>
 9f8:	mov	r0, #0
 9fc:	bl	914 <fchmod@plt>
 a00:	cmp	r0, #0
 a04:	bne	af8 <main@@Base+0x1d8>
 a08:	mov	r0, #0
 a0c:	b	a34 <main@@Base+0x114>
 a10:	ldr	r3, [pc, #360]	; b80 <main@@Base+0x260>
 a14:	mov	r1, #1
 a18:	ldr	r0, [pc, #356]	; b84 <main@@Base+0x264>
 a1c:	mov	r2, #20
 a20:	ldr	r3, [r4, r3]
 a24:	add	r0, pc, r0
 a28:	ldr	r3, [r3]
 a2c:	bl	86c <fwrite@plt>
 a30:	mov	r0, #1
 a34:	ldr	r2, [sp, #100]	; 0x64
 a38:	ldr	r3, [r5]
 a3c:	cmp	r2, r3
 a40:	bne	af4 <main@@Base+0x1d4>
 a44:	add	sp, sp, #104	; 0x68
 a48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 a4c:	ldr	r0, [pc, #308]	; b88 <main@@Base+0x268>
 a50:	add	r0, pc, r0
 a54:	bl	860 <perror@plt>
 a58:	mov	r0, #1
 a5c:	b	a34 <main@@Base+0x114>
 a60:	ldr	r3, [pc, #280]	; b80 <main@@Base+0x260>
 a64:	mov	r1, #1
 a68:	ldr	r0, [pc, #284]	; b8c <main@@Base+0x26c>
 a6c:	mov	r2, #18
 a70:	ldr	r3, [r4, r3]
 a74:	add	r0, pc, r0
 a78:	ldr	r3, [r3]
 a7c:	bl	86c <fwrite@plt>
 a80:	mov	r0, #1
 a84:	b	a34 <main@@Base+0x114>
 a88:	cmp	r0, #0
 a8c:	moveq	r0, #0
 a90:	andne	r0, sl, #1
 a94:	ldr	r3, [sp, #24]
 a98:	cmp	r0, #0
 a9c:	moveq	r0, #2
 aa0:	movne	r0, #16
 aa4:	tst	r0, r3
 aa8:	bne	ae8 <main@@Base+0x1c8>
 aac:	ldr	r2, [pc, #220]	; b90 <main@@Base+0x270>
 ab0:	add	r2, pc, r2
 ab4:	ldr	r1, [pc, #216]	; b94 <main@@Base+0x274>
 ab8:	mov	r0, #1
 abc:	add	r1, pc, r1
 ac0:	bl	8cc <__printf_chk@plt>
 ac4:	mov	r0, #0
 ac8:	b	a34 <main@@Base+0x114>
 acc:	mov	r1, #18
 ad0:	cmp	r2, #121	; 0x79
 ad4:	ldr	r3, [sp, #24]
 ad8:	orreq	r1, r1, r3
 adc:	streq	r1, [sp, #24]
 ae0:	beq	9ec <main@@Base+0xcc>
 ae4:	b	9e4 <main@@Base+0xc4>
 ae8:	ldr	r2, [pc, #168]	; b98 <main@@Base+0x278>
 aec:	add	r2, pc, r2
 af0:	b	ab4 <main@@Base+0x194>
 af4:	bl	854 <__stack_chk_fail@plt>
 af8:	bl	8c0 <__errno_location@plt>
 afc:	ldr	r3, [pc, #124]	; b80 <main@@Base+0x260>
 b00:	ldr	r3, [r4, r3]
 b04:	ldr	r4, [r3]
 b08:	ldr	r6, [r0]
 b0c:	mov	r0, #0
 b10:	bl	8b4 <ttyname@plt>
 b14:	mov	r5, r0
 b18:	mov	r0, r6
 b1c:	bl	884 <strerror@plt>
 b20:	ldr	r2, [pc, #116]	; b9c <main@@Base+0x27c>
 b24:	mov	r3, r5
 b28:	mov	r1, #1
 b2c:	add	r2, pc, r2
 b30:	str	r0, [sp]
 b34:	mov	r0, r4
 b38:	bl	8d8 <__fprintf_chk@plt>
 b3c:	mov	r0, #1
 b40:	bl	8a8 <exit@plt>
 b44:	ldr	r0, [pc, #52]	; b80 <main@@Base+0x260>
 b48:	mov	r3, r9
 b4c:	ldr	r2, [pc, #76]	; ba0 <main@@Base+0x280>
 b50:	mov	r1, #1
 b54:	ldr	r0, [r4, r0]
 b58:	add	r2, pc, r2
 b5c:	ldr	r0, [r0]
 b60:	bl	8d8 <__fprintf_chk@plt>
 b64:	mov	r0, #1
 b68:	bl	8a8 <exit@plt>
 b6c:	mov	r1, #16
 b70:	b	ad0 <main@@Base+0x1b0>
 b74:	andeq	r9, r0, r4, asr #12
 b78:	andeq	r0, r0, r0, rrx
 b7c:	ldrdeq	r0, [r0], -ip
 b80:	andeq	r0, r0, r4, rrx
 b84:	andeq	r0, r0, ip, lsr r4
 b88:	andeq	r0, r0, r8, lsr #8
 b8c:	andeq	r0, r0, r4, lsl r4
 b90:	andeq	r0, r0, ip, lsr #7
 b94:	andeq	r0, r0, r4, asr #7
 b98:	andeq	r0, r0, ip, ror #6
 b9c:	andeq	r0, r0, r4, lsr #7
 ba0:	andeq	r0, r0, r4, asr #6
 ba4:	mov	fp, #0
 ba8:	mov	lr, #0
 bac:	pop	{r1}		; (ldr r1, [sp], #4)
 bb0:	mov	r2, sp
 bb4:	push	{r2}		; (str r2, [sp, #-4]!)
 bb8:	push	{r0}		; (str r0, [sp, #-4]!)
 bbc:	ldr	sl, [pc, #40]	; bec <main@@Base+0x2cc>
 bc0:	add	r3, pc, #36	; 0x24
 bc4:	add	sl, sl, r3
 bc8:	ldr	ip, [pc, #32]	; bf0 <main@@Base+0x2d0>
 bcc:	ldr	ip, [sl, ip]
 bd0:	push	{ip}		; (str ip, [sp, #-4]!)
 bd4:	ldr	r3, [pc, #24]	; bf4 <main@@Base+0x2d4>
 bd8:	ldr	r3, [sl, r3]
 bdc:	ldr	r0, [pc, #20]	; bf8 <main@@Base+0x2d8>
 be0:	ldr	r0, [sl, r0]
 be4:	bl	878 <__libc_start_main@plt>
 be8:	bl	8f0 <abort@plt>
 bec:	muleq	r0, r8, r3
 bf0:	andeq	r0, r0, r4, asr r0
 bf4:	andeq	r0, r0, ip, rrx
 bf8:	andeq	r0, r0, r0, ror r0
 bfc:	ldr	r3, [pc, #20]	; c18 <main@@Base+0x2f8>
 c00:	ldr	r2, [pc, #20]	; c1c <main@@Base+0x2fc>
 c04:	add	r3, pc, r3
 c08:	ldr	r2, [r3, r2]
 c0c:	cmp	r2, #0
 c10:	bxeq	lr
 c14:	b	89c <__gmon_start__@plt>
 c18:	andeq	r9, r0, r8, ror r3
 c1c:	andeq	r0, r0, r8, rrx
 c20:	ldr	r2, [pc, #60]	; c64 <main@@Base+0x344>
 c24:	ldr	r0, [pc, #60]	; c68 <main@@Base+0x348>
 c28:	add	r2, pc, r2
 c2c:	add	r0, pc, r0
 c30:	add	r2, r2, #3
 c34:	rsb	r2, r0, r2
 c38:	push	{r3, lr}
 c3c:	cmp	r2, #6
 c40:	ldr	r3, [pc, #36]	; c6c <main@@Base+0x34c>
 c44:	add	r3, pc, r3
 c48:	popls	{r3, pc}
 c4c:	ldr	r2, [pc, #28]	; c70 <main@@Base+0x350>
 c50:	ldr	r3, [r3, r2]
 c54:	cmp	r3, #0
 c58:	popeq	{r3, pc}
 c5c:	blx	r3
 c60:	pop	{r3, pc}
 c64:	ldrdeq	r9, [r0], -r8
 c68:	ldrdeq	r9, [r0], -r4
 c6c:	andeq	r9, r0, r8, lsr r3
 c70:	andeq	r0, r0, ip, asr r0
 c74:	push	{r3, lr}
 c78:	ldr	r0, [pc, #64]	; cc0 <main@@Base+0x3a0>
 c7c:	ldr	r3, [pc, #64]	; cc4 <main@@Base+0x3a4>
 c80:	add	r0, pc, r0
 c84:	ldr	r2, [pc, #60]	; cc8 <main@@Base+0x3a8>
 c88:	add	r3, pc, r3
 c8c:	rsb	r3, r0, r3
 c90:	add	r2, pc, r2
 c94:	asr	r3, r3, #2
 c98:	add	r3, r3, r3, lsr #31
 c9c:	asrs	r3, r3, #1
 ca0:	popeq	{r3, pc}
 ca4:	ldr	r1, [pc, #32]	; ccc <main@@Base+0x3ac>
 ca8:	ldr	r2, [r2, r1]
 cac:	cmp	r2, #0
 cb0:	popeq	{r3, pc}
 cb4:	mov	r1, r3
 cb8:	blx	r2
 cbc:	pop	{r3, pc}
 cc0:	andeq	r9, r0, r0, lsl #7
 cc4:	andeq	r9, r0, r8, ror r3
 cc8:	andeq	r9, r0, ip, ror #5
 ccc:	andeq	r0, r0, r8, ror r0
 cd0:	ldr	r2, [pc, #76]	; d24 <main@@Base+0x404>
 cd4:	push	{r3, lr}
 cd8:	add	r2, pc, r2
 cdc:	ldr	r3, [pc, #68]	; d28 <main@@Base+0x408>
 ce0:	ldrb	r2, [r2]
 ce4:	add	r3, pc, r3
 ce8:	cmp	r2, #0
 cec:	popne	{r3, pc}
 cf0:	ldr	r2, [pc, #52]	; d2c <main@@Base+0x40c>
 cf4:	ldr	r3, [r3, r2]
 cf8:	cmp	r3, #0
 cfc:	beq	d0c <main@@Base+0x3ec>
 d00:	ldr	r0, [pc, #40]	; d30 <main@@Base+0x410>
 d04:	add	r0, pc, r0
 d08:	bl	848 <__cxa_finalize@plt>
 d0c:	bl	c20 <main@@Base+0x300>
 d10:	ldr	r3, [pc, #28]	; d34 <main@@Base+0x414>
 d14:	mov	r2, #1
 d18:	add	r3, pc, r3
 d1c:	strb	r2, [r3]
 d20:	pop	{r3, pc}
 d24:	andeq	r9, r0, r8, lsr #6
 d28:	muleq	r0, r8, r2
 d2c:	andeq	r0, r0, r8, asr r0
 d30:	andeq	r9, r0, r4, ror #2
 d34:	andeq	r9, r0, r8, ror #5
 d38:	ldr	r0, [pc, #52]	; d74 <main@@Base+0x454>
 d3c:	push	{r3, lr}
 d40:	add	r0, pc, r0
 d44:	ldr	r3, [pc, #44]	; d78 <main@@Base+0x458>
 d48:	ldr	r2, [r0]
 d4c:	add	r3, pc, r3
 d50:	cmp	r2, #0
 d54:	beq	d6c <main@@Base+0x44c>
 d58:	ldr	r2, [pc, #28]	; d7c <main@@Base+0x45c>
 d5c:	ldr	r3, [r3, r2]
 d60:	cmp	r3, #0
 d64:	beq	d6c <main@@Base+0x44c>
 d68:	blx	r3
 d6c:	pop	{r3, lr}
 d70:	b	c74 <main@@Base+0x354>
 d74:	andeq	r9, r0, r4, lsr #2
 d78:	andeq	r9, r0, r0, lsr r2
 d7c:	andeq	r0, r0, r4, ror r0
 d80:	ldr	r0, [pc, #20]	; d9c <main@@Base+0x47c>
 d84:	push	{r3, lr}
 d88:	add	r0, pc, r0
 d8c:	bl	908 <getgrnam@plt>
 d90:	adds	r0, r0, #0
 d94:	movne	r0, #1
 d98:	pop	{r3, pc}
 d9c:	andeq	r0, r0, ip, asr #1
 da0:	push	{r3, lr}
 da4:	ldr	r0, [r0, #28]
 da8:	bl	8fc <getgrgid@plt>
 dac:	cmp	r0, #0
 db0:	popeq	{r3, pc}
 db4:	ldr	r3, [r0]
 db8:	ldrb	r0, [r3]
 dbc:	subs	r0, r0, #116	; 0x74
 dc0:	bne	ddc <main@@Base+0x4bc>
 dc4:	ldrb	r0, [r3, #1]
 dc8:	subs	r0, r0, #116	; 0x74
 dcc:	bne	ddc <main@@Base+0x4bc>
 dd0:	ldrb	r0, [r3, #2]
 dd4:	subs	r0, r0, #121	; 0x79
 dd8:	ldrbeq	r0, [r3, #3]
 ddc:	rsbs	r0, r0, #1
 de0:	movcc	r0, #0
 de4:	pop	{r3, pc}

00000de8 <__libc_csu_init@@Base>:
 de8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
 dec:	mov	r7, r0
 df0:	ldr	r6, [pc, #76]	; e44 <__libc_csu_init@@Base+0x5c>
 df4:	mov	r8, r1
 df8:	ldr	r5, [pc, #72]	; e48 <__libc_csu_init@@Base+0x60>
 dfc:	mov	r9, r2
 e00:	add	r6, pc, r6
 e04:	bl	828 <__cxa_finalize@plt-0x20>
 e08:	add	r5, pc, r5
 e0c:	rsb	r6, r5, r6
 e10:	asrs	r6, r6, #2
 e14:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
 e18:	sub	r5, r5, #4
 e1c:	mov	r4, #0
 e20:	add	r4, r4, #1
 e24:	ldr	r3, [r5, #4]!
 e28:	mov	r0, r7
 e2c:	mov	r1, r8
 e30:	mov	r2, r9
 e34:	blx	r3
 e38:	cmp	r4, r6
 e3c:	bne	e20 <__libc_csu_init@@Base+0x38>
 e40:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 e44:	andeq	r9, r0, r0, rrx
 e48:	andeq	r9, r0, r4, asr r0

00000e4c <__libc_csu_fini@@Base>:
 e4c:	bx	lr

Disassembly of section .fini:

00000e50 <.fini>:
 e50:	push	{r3, lr}
 e54:	pop	{r3, pc}
