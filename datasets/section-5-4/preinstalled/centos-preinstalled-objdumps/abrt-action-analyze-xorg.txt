
centos-preinstalled/abrt-action-analyze-xorg:     file format elf32-littlearm


Disassembly of section .init:

00000b28 <_init@@Base>:
 b28:	push	{r3, lr}
 b2c:	bl	1160 <main@@Base+0x48c>
 b30:	pop	{r3, pc}

Disassembly of section .plt:

00000b34 <dd_opendir@plt-0x14>:
 b34:	push	{lr}		; (str lr, [sp, #-4]!)
 b38:	ldr	lr, [pc, #4]	; b44 <_init@@Base+0x1c>
 b3c:	add	lr, pc, lr
 b40:	ldr	pc, [lr, #8]!
 b44:	andeq	r1, r1, r4, lsl #8

00000b48 <dd_opendir@plt>:
 b48:	add	ip, pc, #0, 12
 b4c:	add	ip, ip, #69632	; 0x11000
 b50:	ldr	pc, [ip, #1028]!	; 0x404

00000b54 <libreport_xstrndup@plt>:
 b54:	add	ip, pc, #0, 12
 b58:	add	ip, ip, #69632	; 0x11000
 b5c:	ldr	pc, [ip, #1020]!	; 0x3fc

00000b60 <free@plt>:
 b60:	add	ip, pc, #0, 12
 b64:	add	ip, ip, #69632	; 0x11000
 b68:	ldr	pc, [ip, #1012]!	; 0x3f4

00000b6c <libreport_xstrdup@plt>:
 b6c:	add	ip, pc, #0, 12
 b70:	add	ip, ip, #69632	; 0x11000
 b74:	ldr	pc, [ip, #1004]!	; 0x3ec

00000b78 <log_and_die_wrapper@plt>:
 b78:	add	ip, pc, #0, 12
 b7c:	add	ip, ip, #69632	; 0x11000
 b80:	ldr	pc, [ip, #996]!	; 0x3e4

00000b84 <dd_close@plt>:
 b84:	add	ip, pc, #0, 12
 b88:	add	ip, ip, #69632	; 0x11000
 b8c:	ldr	pc, [ip, #988]!	; 0x3dc

00000b90 <libreport_parse_opts@plt>:
 b90:	add	ip, pc, #0, 12
 b94:	add	ip, ip, #69632	; 0x11000
 b98:	ldr	pc, [ip, #980]!	; 0x3d4

00000b9c <libreport_xchdir@plt>:
 b9c:	add	ip, pc, #0, 12
 ba0:	add	ip, ip, #69632	; 0x11000
 ba4:	ldr	pc, [ip, #972]!	; 0x3cc

00000ba8 <libreport_export_abrt_envvars@plt>:
 ba8:	add	ip, pc, #0, 12
 bac:	add	ip, ip, #69632	; 0x11000
 bb0:	ldr	pc, [ip, #964]!	; 0x3c4

00000bb4 <textdomain@plt>:
 bb4:	add	ip, pc, #0, 12
 bb8:	add	ip, ip, #69632	; 0x11000
 bbc:	ldr	pc, [ip, #956]!	; 0x3bc

00000bc0 <memset@plt>:
 bc0:	add	ip, pc, #0, 12
 bc4:	add	ip, ip, #69632	; 0x11000
 bc8:	ldr	pc, [ip, #948]!	; 0x3b4

00000bcc <libreport_xasprintf@plt>:
 bcc:	add	ip, pc, #0, 12
 bd0:	add	ip, ip, #69632	; 0x11000
 bd4:	ldr	pc, [ip, #940]!	; 0x3ac

00000bd8 <abrt_load_abrt_plugin_conf_file@plt>:
 bd8:	add	ip, pc, #0, 12
 bdc:	add	ip, ip, #69632	; 0x11000
 be0:	ldr	pc, [ip, #932]!	; 0x3a4

00000be4 <abort@plt>:
 be4:	add	ip, pc, #0, 12
 be8:	add	ip, ip, #69632	; 0x11000
 bec:	ldr	pc, [ip, #924]!	; 0x39c

00000bf0 <libreport_new_map_string@plt>:
 bf0:	add	ip, pc, #0, 12
 bf4:	add	ip, ip, #69632	; 0x11000
 bf8:	ldr	pc, [ip, #916]!	; 0x394

00000bfc <dd_load_text@plt>:
 bfc:	add	ip, pc, #0, 12
 c00:	add	ip, ip, #69632	; 0x11000
 c04:	ldr	pc, [ip, #908]!	; 0x38c

00000c08 <__stack_chk_fail@plt>:
 c08:	add	ip, pc, #0, 12
 c0c:	add	ip, ip, #69632	; 0x11000
 c10:	ldr	pc, [ip, #900]!	; 0x384

00000c14 <strchrnul@plt>:
 c14:	add	ip, pc, #0, 12
 c18:	add	ip, ip, #69632	; 0x11000
 c1c:	ldr	pc, [ip, #892]!	; 0x37c

00000c20 <dcgettext@plt>:
 c20:	add	ip, pc, #0, 12
 c24:	add	ip, ip, #69632	; 0x11000
 c28:	ldr	pc, [ip, #884]!	; 0x374

00000c2c <log_wrapper@plt>:
 c2c:	add	ip, pc, #0, 12
 c30:	add	ip, ip, #69632	; 0x11000
 c34:	ldr	pc, [ip, #876]!	; 0x36c

00000c38 <strstr@plt>:
 c38:	add	ip, pc, #0, 12
 c3c:	add	ip, ip, #69632	; 0x11000
 c40:	ldr	pc, [ip, #868]!	; 0x364

00000c44 <__ctype_b_loc@plt>:
 c44:	add	ip, pc, #0, 12
 c48:	add	ip, ip, #69632	; 0x11000
 c4c:	ldr	pc, [ip, #860]!	; 0x35c

00000c50 <bindtextdomain@plt>:
 c50:	add	ip, pc, #0, 12
 c54:	add	ip, ip, #69632	; 0x11000
 c58:	ldr	pc, [ip, #852]!	; 0x354

00000c5c <execlp@plt>:
 c5c:	add	ip, pc, #0, 12
 c60:	add	ip, ip, #69632	; 0x11000
 c64:	ldr	pc, [ip, #844]!	; 0x34c

00000c68 <libreport_free_map_string@plt>:
 c68:	add	ip, pc, #0, 12
 c6c:	add	ip, ip, #69632	; 0x11000
 c70:	ldr	pc, [ip, #836]!	; 0x344

00000c74 <setlocale@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #69632	; 0x11000
 c7c:	ldr	pc, [ip, #828]!	; 0x33c

00000c80 <dd_load_text_ext@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #69632	; 0x11000
 c88:	ldr	pc, [ip, #820]!	; 0x334

00000c8c <abrt_init@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #69632	; 0x11000
 c94:	ldr	pc, [ip, #812]!	; 0x32c

00000c98 <dd_save_text@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #69632	; 0x11000
 ca0:	ldr	pc, [ip, #804]!	; 0x324

00000ca4 <libreport_get_map_string_item_or_empty@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #69632	; 0x11000
 cac:	ldr	pc, [ip, #796]!	; 0x31c

00000cb0 <__libc_start_main@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #69632	; 0x11000
 cb8:	ldr	pc, [ip, #788]!	; 0x314

00000cbc <__gmon_start__@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #69632	; 0x11000
 cc4:	ldr	pc, [ip, #780]!	; 0x30c

00000cc8 <__cxa_finalize@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #69632	; 0x11000
 cd0:	ldr	pc, [ip, #772]!	; 0x304

Disassembly of section .text:

00000cd4 <main@@Base>:
     cd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     cd8:	sub	sp, sp, #116	; 0x74
     cdc:	ldr	r6, [pc, #936]	; 108c <main@@Base+0x3b8>
     ce0:	mov	r7, r1
     ce4:	ldr	r3, [pc, #932]	; 1090 <main@@Base+0x3bc>
     ce8:	mov	ip, r0
     cec:	add	r6, pc, r6
     cf0:	ldr	r1, [pc, #924]	; 1094 <main@@Base+0x3c0>
     cf4:	ldr	r4, [pc, #924]	; 1098 <main@@Base+0x3c4>
     cf8:	mov	r0, #6
     cfc:	ldr	r3, [r6, r3]
     d00:	add	r1, pc, r1
     d04:	add	r4, pc, r4
     d08:	add	r8, sp, #36	; 0x24
     d0c:	mov	r5, #0
     d10:	ldr	fp, [pc, #900]	; 109c <main@@Base+0x3c8>
     d14:	str	r3, [sp, #28]
     d18:	ldr	r3, [r3]
     d1c:	add	fp, pc, fp
     d20:	str	ip, [sp, #20]
     d24:	ldr	sl, [pc, #884]	; 10a0 <main@@Base+0x3cc>
     d28:	str	r3, [sp, #108]	; 0x6c
     d2c:	bl	c74 <setlocale@plt>
     d30:	ldr	r1, [pc, #876]	; 10a4 <main@@Base+0x3d0>
     d34:	mov	r0, r4
     d38:	ldr	r9, [pc, #872]	; 10a8 <main@@Base+0x3d4>
     d3c:	add	sl, pc, sl
     d40:	add	r1, pc, r1
     d44:	bl	c50 <bindtextdomain@plt>
     d48:	mov	r0, r4
     d4c:	bl	bb4 <textdomain@plt>
     d50:	mov	r0, r7
     d54:	bl	c8c <abrt_init@plt>
     d58:	ldr	r1, [pc, #844]	; 10ac <main@@Base+0x3d8>
     d5c:	ldr	r3, [pc, #844]	; 10b0 <main@@Base+0x3dc>
     d60:	mov	r0, r4
     d64:	add	r1, pc, r1
     d68:	mov	r2, #5
     d6c:	add	r3, pc, r3
     d70:	str	r3, [sp, #32]
     d74:	bl	c20 <dcgettext@plt>
     d78:	mov	r1, r5
     d7c:	mov	r2, #72	; 0x48
     d80:	add	r9, pc, r9
     d84:	mov	r3, r0
     d88:	mov	r0, r8
     d8c:	str	r3, [sp, #24]
     d90:	bl	bc0 <memset@plt>
     d94:	ldr	r1, [pc, #792]	; 10b4 <main@@Base+0x3e0>
     d98:	mov	r0, #118	; 0x76
     d9c:	ldr	r2, [pc, #788]	; 10b8 <main@@Base+0x3e4>
     da0:	str	r0, [sp, #40]	; 0x28
     da4:	mov	r0, r4
     da8:	add	r2, pc, r2
     dac:	str	r2, [sp, #44]	; 0x2c
     db0:	ldr	lr, [r6, r1]
     db4:	mov	r2, #5
     db8:	ldr	r1, [pc, #764]	; 10bc <main@@Base+0x3e8>
     dbc:	mov	r6, #2
     dc0:	add	r1, pc, r1
     dc4:	str	lr, [sp, #48]	; 0x30
     dc8:	bl	c20 <dcgettext@plt>
     dcc:	ldr	r1, [pc, #748]	; 10c0 <main@@Base+0x3ec>
     dd0:	ldr	lr, [pc, #748]	; 10c4 <main@@Base+0x3f0>
     dd4:	mov	r2, #5
     dd8:	add	r1, pc, r1
     ddc:	str	r6, [sp, #60]	; 0x3c
     de0:	add	lr, pc, lr
     de4:	str	lr, [sp, #76]	; 0x4c
     de8:	mov	lr, #100	; 0x64
     dec:	str	lr, [sp, #64]	; 0x40
     df0:	add	lr, sp, #32
     df4:	str	lr, [sp, #72]	; 0x48
     df8:	str	r0, [sp, #56]	; 0x38
     dfc:	mov	r0, r4
     e00:	bl	c20 <dcgettext@plt>
     e04:	ldr	ip, [sp, #20]
     e08:	mov	r1, r7
     e0c:	mov	r2, r8
     e10:	ldr	r3, [sp, #24]
     e14:	mov	lr, #6
     e18:	str	lr, [sp, #84]	; 0x54
     e1c:	str	r0, [sp, #80]	; 0x50
     e20:	mov	r0, ip
     e24:	bl	b90 <libreport_parse_opts@plt>
     e28:	mov	r0, r5
     e2c:	bl	ba8 <libreport_export_abrt_envvars@plt>
     e30:	bl	bf0 <libreport_new_map_string@plt>
     e34:	ldr	r2, [pc, #652]	; 10c8 <main@@Base+0x3f4>
     e38:	mov	r3, sl
     e3c:	mov	r1, fp
     e40:	add	r2, pc, r2
     e44:	str	r5, [sp]
     e48:	str	r2, [sp, #8]
     e4c:	mov	r2, #92	; 0x5c
     e50:	str	r5, [sp, #4]
     e54:	str	r9, [sp, #12]
     e58:	mov	r6, r0
     e5c:	mov	r0, #5
     e60:	bl	c2c <log_wrapper@plt>
     e64:	mov	r1, r6
     e68:	mov	r0, r9
     e6c:	bl	bd8 <abrt_load_abrt_plugin_conf_file@plt>
     e70:	ldr	r2, [pc, #596]	; 10cc <main@@Base+0x3f8>
     e74:	mov	r3, sl
     e78:	str	r5, [sp]
     e7c:	add	r2, pc, r2
     e80:	mov	r1, fp
     e84:	str	r5, [sp, #4]
     e88:	mov	r0, #7
     e8c:	str	r2, [sp, #8]
     e90:	mov	r2, #94	; 0x5e
     e94:	str	r9, [sp, #12]
     e98:	bl	c2c <log_wrapper@plt>
     e9c:	ldr	r1, [pc, #556]	; 10d0 <main@@Base+0x3fc>
     ea0:	mov	r0, r6
     ea4:	add	r1, pc, r1
     ea8:	bl	ca4 <libreport_get_map_string_item_or_empty@plt>
     eac:	bl	b6c <libreport_xstrdup@plt>
     eb0:	ldrb	r4, [r0]
     eb4:	mov	r5, r0
     eb8:	cmp	r4, #0
     ebc:	beq	fe0 <main@@Base+0x30c>
     ec0:	bl	c44 <__ctype_b_loc@plt>
     ec4:	mov	r3, r5
     ec8:	mov	r2, r5
     ecc:	ldr	ip, [r0]
     ed0:	lsl	r1, r4, #1
     ed4:	ldrh	r1, [ip, r1]
     ed8:	tst	r1, #8192	; 0x2000
     edc:	strbeq	r4, [r2]
     ee0:	ldrb	r4, [r3, #1]!
     ee4:	addeq	r2, r2, #1
     ee8:	cmp	r4, #0
     eec:	bne	ecc <main@@Base+0x1f8>
     ef0:	mov	r4, #0
     ef4:	mov	r0, r6
     ef8:	strb	r4, [r2]
     efc:	bl	c68 <libreport_free_map_string@plt>
     f00:	mov	r1, r4
     f04:	ldr	r0, [sp, #32]
     f08:	bl	b48 <dd_opendir@plt>
     f0c:	subs	r4, r0, #0
     f10:	beq	fd8 <main@@Base+0x304>
     f14:	ldr	r1, [pc, #440]	; 10d4 <main@@Base+0x400>
     f18:	add	r1, pc, r1
     f1c:	bl	bfc <dd_load_text@plt>
     f20:	ldr	r1, [pc, #432]	; 10d8 <main@@Base+0x404>
     f24:	mov	r2, #1
     f28:	add	r1, pc, r1
     f2c:	mov	r7, r0
     f30:	mov	r0, r4
     f34:	bl	c80 <dd_load_text_ext@plt>
     f38:	ldr	r1, [pc, #412]	; 10dc <main@@Base+0x408>
     f3c:	mov	r2, r5
     f40:	add	r1, pc, r1
     f44:	mov	r8, r0
     f48:	mov	r0, r7
     f4c:	bl	12e4 <main@@Base+0x610>
     f50:	subs	r6, r0, #0
     f54:	beq	fe8 <main@@Base+0x314>
     f58:	mov	r0, r7
     f5c:	bl	b60 <free@plt>
     f60:	mov	r0, r8
     f64:	bl	b60 <free@plt>
     f68:	ldr	r0, [pc, #368]	; 10e0 <main@@Base+0x40c>
     f6c:	mov	r2, #5
     f70:	ldr	r1, [pc, #364]	; 10e4 <main@@Base+0x410>
     f74:	add	r0, pc, r0
     f78:	add	r1, pc, r1
     f7c:	bl	c20 <dcgettext@plt>
     f80:	mov	r1, r6
     f84:	bl	bcc <libreport_xasprintf@plt>
     f88:	mov	r5, r0
     f8c:	mov	r0, r6
     f90:	bl	b60 <free@plt>
     f94:	ldr	r1, [pc, #332]	; 10e8 <main@@Base+0x414>
     f98:	mov	r2, r5
     f9c:	mov	r0, r4
     fa0:	add	r1, pc, r1
     fa4:	bl	c98 <dd_save_text@plt>
     fa8:	mov	r0, r5
     fac:	bl	b60 <free@plt>
     fb0:	mov	r0, r4
     fb4:	bl	b84 <dd_close@plt>
     fb8:	mov	r0, #0
     fbc:	ldr	r1, [sp, #28]
     fc0:	ldr	r2, [sp, #108]	; 0x6c
     fc4:	ldr	r3, [r1]
     fc8:	cmp	r2, r3
     fcc:	bne	1088 <main@@Base+0x3b4>
     fd0:	add	sp, sp, #116	; 0x74
     fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     fd8:	mov	r0, #1
     fdc:	b	fbc <main@@Base+0x2e8>
     fe0:	mov	r2, r0
     fe4:	b	ef0 <main@@Base+0x21c>
     fe8:	ldr	r1, [pc, #252]	; 10ec <main@@Base+0x418>
     fec:	mov	r2, r5
     ff0:	mov	r0, r8
     ff4:	add	r1, pc, r1
     ff8:	bl	12e4 <main@@Base+0x610>
     ffc:	mov	r6, r0
    1000:	mov	r0, r7
    1004:	bl	b60 <free@plt>
    1008:	mov	r0, r8
    100c:	bl	b60 <free@plt>
    1010:	cmp	r6, #0
    1014:	bne	f68 <main@@Base+0x294>
    1018:	mov	r0, r4
    101c:	ldr	r5, [pc, #204]	; 10f0 <main@@Base+0x41c>
    1020:	bl	b84 <dd_close@plt>
    1024:	ldr	r0, [sp, #32]
    1028:	bl	b9c <libreport_xchdir@plt>
    102c:	add	r5, pc, r5
    1030:	ldr	r2, [pc, #188]	; 10f4 <main@@Base+0x420>
    1034:	ldr	r3, [pc, #188]	; 10f8 <main@@Base+0x424>
    1038:	mov	r1, r5
    103c:	add	r2, pc, r2
    1040:	str	r6, [sp]
    1044:	add	r3, pc, r3
    1048:	mov	r0, r5
    104c:	bl	c5c <execlp@plt>
    1050:	mov	r3, #1
    1054:	ldr	r2, [pc, #160]	; 10fc <main@@Base+0x428>
    1058:	mov	r0, #3
    105c:	str	r3, [sp]
    1060:	str	r3, [sp, #4]
    1064:	add	r2, pc, r2
    1068:	ldr	r1, [pc, #144]	; 1100 <main@@Base+0x42c>
    106c:	ldr	r3, [pc, #144]	; 1104 <main@@Base+0x430>
    1070:	str	r2, [sp, #8]
    1074:	add	r1, pc, r1
    1078:	str	r5, [sp, #12]
    107c:	mov	r2, #151	; 0x97
    1080:	add	r3, pc, r3
    1084:	bl	b78 <log_and_die_wrapper@plt>
    1088:	bl	c08 <__stack_chk_fail@plt>
    108c:	andeq	r1, r1, r4, asr r2
    1090:	muleq	r0, r0, r0
    1094:	andeq	r0, r0, r0, ror #16
    1098:	strdeq	r0, [r0], -r4
    109c:	andeq	r0, r0, r8, ror r7
    10a0:			; <UNDEFINED> instruction: 0x000006b4
    10a4:	andeq	r0, r0, r0, asr #13
    10a8:	andeq	r0, r0, ip, asr #14
    10ac:			; <UNDEFINED> instruction: 0x000006b4
    10b0:	andeq	r0, r0, r8, lsr #13
    10b4:	muleq	r0, ip, r0
    10b8:	andeq	r0, r0, r4, asr #13
    10bc:			; <UNDEFINED> instruction: 0x000006b4
    10c0:	andeq	r0, r0, r8, lsr #13
    10c4:	andeq	r0, r0, r8, lsl #13
    10c8:	andeq	r0, r0, r0, ror r6
    10cc:	andeq	r0, r0, ip, asr r6
    10d0:	andeq	r0, r0, r0, asr #12
    10d4:	andeq	r0, r0, r4, ror #11
    10d8:	andeq	r0, r0, r0, ror #11
    10dc:	ldrdeq	r0, [r0], -r4
    10e0:	andeq	r0, r0, r4, lsl #9
    10e4:			; <UNDEFINED> instruction: 0x000005b8
    10e8:	andeq	r0, r0, r4, asr #11
    10ec:	andeq	r0, r0, r8, lsr #10
    10f0:	andeq	r0, r0, r8, asr #10
    10f4:	andeq	r0, r0, r0, asr #10
    10f8:	andeq	r0, r0, ip, lsr r5
    10fc:	andeq	r0, r0, ip, ror #12
    1100:	andeq	r0, r0, r0, lsr #8
    1104:	andeq	r0, r0, r0, ror r3
    1108:	mov	fp, #0
    110c:	mov	lr, #0
    1110:	pop	{r1}		; (ldr r1, [sp], #4)
    1114:	mov	r2, sp
    1118:	push	{r2}		; (str r2, [sp, #-4]!)
    111c:	push	{r0}		; (str r0, [sp, #-4]!)
    1120:	ldr	sl, [pc, #40]	; 1150 <main@@Base+0x47c>
    1124:	add	r3, pc, #36	; 0x24
    1128:	add	sl, sl, r3
    112c:	ldr	ip, [pc, #32]	; 1154 <main@@Base+0x480>
    1130:	ldr	ip, [sl, ip]
    1134:	push	{ip}		; (str ip, [sp, #-4]!)
    1138:	ldr	r3, [pc, #24]	; 1158 <main@@Base+0x484>
    113c:	ldr	r3, [sl, r3]
    1140:	ldr	r0, [pc, #20]	; 115c <main@@Base+0x488>
    1144:	ldr	r0, [sl, r0]
    1148:	bl	cb0 <__libc_start_main@plt>
    114c:	bl	be4 <abort@plt>
    1150:	strdeq	r0, [r1], -r8
    1154:	andeq	r0, r0, r8, lsr #1
    1158:	andeq	r0, r0, r0, lsr #1
    115c:	muleq	r0, r4, r0
    1160:	ldr	r3, [pc, #20]	; 117c <main@@Base+0x4a8>
    1164:	ldr	r2, [pc, #20]	; 1180 <main@@Base+0x4ac>
    1168:	add	r3, pc, r3
    116c:	ldr	r2, [r3, r2]
    1170:	cmp	r2, #0
    1174:	bxeq	lr
    1178:	b	cbc <__gmon_start__@plt>
    117c:	ldrdeq	r0, [r1], -r8
    1180:	andeq	r0, r0, ip, lsr #1
    1184:	ldr	r2, [pc, #60]	; 11c8 <main@@Base+0x4f4>
    1188:	ldr	r0, [pc, #60]	; 11cc <main@@Base+0x4f8>
    118c:	add	r2, pc, r2
    1190:	add	r0, pc, r0
    1194:	add	r2, r2, #3
    1198:	rsb	r2, r0, r2
    119c:	push	{r3, lr}
    11a0:	cmp	r2, #6
    11a4:	ldr	r3, [pc, #36]	; 11d0 <main@@Base+0x4fc>
    11a8:	add	r3, pc, r3
    11ac:	popls	{r3, pc}
    11b0:	ldr	r2, [pc, #28]	; 11d4 <main@@Base+0x500>
    11b4:	ldr	r3, [r3, r2]
    11b8:	cmp	r3, #0
    11bc:	popeq	{r3, pc}
    11c0:	blx	r3
    11c4:	pop	{r3, pc}
    11c8:	andeq	r0, r1, r0, ror lr
    11cc:	andeq	r0, r1, ip, ror #28
    11d0:	muleq	r1, r8, sp
    11d4:	andeq	r0, r0, r4, lsr #1
    11d8:	push	{r3, lr}
    11dc:	ldr	r0, [pc, #64]	; 1224 <main@@Base+0x550>
    11e0:	ldr	r3, [pc, #64]	; 1228 <main@@Base+0x554>
    11e4:	add	r0, pc, r0
    11e8:	ldr	r2, [pc, #60]	; 122c <main@@Base+0x558>
    11ec:	add	r3, pc, r3
    11f0:	rsb	r3, r0, r3
    11f4:	add	r2, pc, r2
    11f8:	asr	r3, r3, #2
    11fc:	add	r3, r3, r3, lsr #31
    1200:	asrs	r3, r3, #1
    1204:	popeq	{r3, pc}
    1208:	ldr	r1, [pc, #32]	; 1230 <main@@Base+0x55c>
    120c:	ldr	r2, [r2, r1]
    1210:	cmp	r2, #0
    1214:	popeq	{r3, pc}
    1218:	mov	r1, r3
    121c:	blx	r2
    1220:	pop	{r3, pc}
    1224:	andeq	r0, r1, r8, lsl lr
    1228:	andeq	r0, r1, r0, lsl lr
    122c:	andeq	r0, r1, ip, asr #26
    1230:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1234:	ldr	r2, [pc, #76]	; 1288 <main@@Base+0x5b4>
    1238:	push	{r3, lr}
    123c:	add	r2, pc, r2
    1240:	ldr	r3, [pc, #68]	; 128c <main@@Base+0x5b8>
    1244:	ldrb	r2, [r2]
    1248:	add	r3, pc, r3
    124c:	cmp	r2, #0
    1250:	popne	{r3, pc}
    1254:	ldr	r2, [pc, #52]	; 1290 <main@@Base+0x5bc>
    1258:	ldr	r3, [r3, r2]
    125c:	cmp	r3, #0
    1260:	beq	1270 <main@@Base+0x59c>
    1264:	ldr	r0, [pc, #40]	; 1294 <main@@Base+0x5c0>
    1268:	add	r0, pc, r0
    126c:	bl	cc8 <__cxa_finalize@plt>
    1270:	bl	1184 <main@@Base+0x4b0>
    1274:	ldr	r3, [pc, #28]	; 1298 <main@@Base+0x5c4>
    1278:	mov	r2, #1
    127c:	add	r3, pc, r3
    1280:	strb	r2, [r3]
    1284:	pop	{r3, pc}
    1288:	andeq	r0, r1, r0, asr #27
    128c:	strdeq	r0, [r1], -r8
    1290:	strheq	r0, [r0], -r4
    1294:	muleq	r1, ip, fp
    1298:	andeq	r0, r1, r0, lsl #27
    129c:	ldr	r0, [pc, #52]	; 12d8 <main@@Base+0x604>
    12a0:	push	{r3, lr}
    12a4:	add	r0, pc, r0
    12a8:	ldr	r3, [pc, #44]	; 12dc <main@@Base+0x608>
    12ac:	ldr	r2, [r0]
    12b0:	add	r3, pc, r3
    12b4:	cmp	r2, #0
    12b8:	beq	12d0 <main@@Base+0x5fc>
    12bc:	ldr	r2, [pc, #28]	; 12e0 <main@@Base+0x60c>
    12c0:	ldr	r3, [r3, r2]
    12c4:	cmp	r3, #0
    12c8:	beq	12d0 <main@@Base+0x5fc>
    12cc:	blx	r3
    12d0:	pop	{r3, lr}
    12d4:	b	11d8 <main@@Base+0x504>
    12d8:	andeq	r0, r1, ip, asr fp
    12dc:	muleq	r1, r0, ip
    12e0:	muleq	r0, r8, r0
    12e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    12e8:	subs	r5, r2, #0
    12ec:	mov	r9, r0
    12f0:	mov	sl, r1
    12f4:	beq	137c <main@@Base+0x6a8>
    12f8:	ldrb	r3, [r5]
    12fc:	cmp	r3, #0
    1300:	bne	1324 <main@@Base+0x650>
    1304:	b	137c <main@@Base+0x6a8>
    1308:	ldrb	r3, [r4]
    130c:	add	r5, r4, #1
    1310:	cmp	r3, #0
    1314:	beq	137c <main@@Base+0x6a8>
    1318:	ldrb	r3, [r4, #1]
    131c:	cmp	r3, #0
    1320:	beq	137c <main@@Base+0x6a8>
    1324:	mov	r1, #44	; 0x2c
    1328:	mov	r0, r5
    132c:	bl	c14 <strchrnul@plt>
    1330:	mov	r2, r5
    1334:	rsb	r7, r5, r0
    1338:	mov	r4, r0
    133c:	mov	r0, sl
    1340:	mov	r1, r7
    1344:	bl	bcc <libreport_xasprintf@plt>
    1348:	mov	r6, r0
    134c:	mov	r0, r9
    1350:	mov	r1, r6
    1354:	bl	c38 <strstr@plt>
    1358:	mov	r8, r0
    135c:	mov	r0, r6
    1360:	bl	b60 <free@plt>
    1364:	cmp	r8, #0
    1368:	beq	1308 <main@@Base+0x634>
    136c:	mov	r0, r5
    1370:	mov	r1, r7
    1374:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1378:	b	b54 <libreport_xstrndup@plt>
    137c:	mov	r0, #0
    1380:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00001384 <__libc_csu_init@@Base>:
    1384:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    1388:	mov	r7, r0
    138c:	ldr	r6, [pc, #76]	; 13e0 <__libc_csu_init@@Base+0x5c>
    1390:	mov	r8, r1
    1394:	ldr	r5, [pc, #72]	; 13e4 <__libc_csu_init@@Base+0x60>
    1398:	mov	r9, r2
    139c:	add	r6, pc, r6
    13a0:	bl	b28 <_init@@Base>
    13a4:	add	r5, pc, r5
    13a8:	rsb	r6, r5, r6
    13ac:	asrs	r6, r6, #2
    13b0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    13b4:	sub	r5, r5, #4
    13b8:	mov	r4, #0
    13bc:	add	r4, r4, #1
    13c0:	ldr	r3, [r5, #4]!
    13c4:	mov	r0, r7
    13c8:	mov	r1, r8
    13cc:	mov	r2, r9
    13d0:	blx	r3
    13d4:	cmp	r4, r6
    13d8:	bne	13bc <__libc_csu_init@@Base+0x38>
    13dc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    13e0:	andeq	r0, r1, r0, ror #20
    13e4:	andeq	r0, r1, r4, asr sl

000013e8 <__libc_csu_fini@@Base>:
    13e8:	bx	lr

Disassembly of section .fini:

000013ec <_fini@@Base>:
    13ec:	push	{r3, lr}
    13f0:	pop	{r3, pc}
