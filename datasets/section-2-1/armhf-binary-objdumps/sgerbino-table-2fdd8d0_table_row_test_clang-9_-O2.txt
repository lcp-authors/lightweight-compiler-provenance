
../repos/sgerbino-table-2fdd8d0/bin/table_row_test:     file format elf32-littlearm


Disassembly of section .init:

00011ee0 <.init>:
   11ee0:	push	{r3, lr}
   11ee4:	bl	11ff0 <_start@@Base+0x3c>
   11ee8:	pop	{r3, pc}

Disassembly of section .plt:

00011eec <strcmp@plt-0x14>:
   11eec:	push	{lr}		; (str lr, [sp, #-4]!)
   11ef0:	ldr	lr, [pc, #4]	; 11efc <strcmp@plt-0x4>
   11ef4:	add	lr, pc, lr
   11ef8:	ldr	pc, [lr, #8]!
   11efc:	andeq	r4, r1, r4, lsl #2

00011f00 <strcmp@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #20, 20	; 0x14000
   11f08:	ldr	pc, [ip, #260]!	; 0x104

00011f0c <printf@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #20, 20	; 0x14000
   11f14:	ldr	pc, [ip, #252]!	; 0xfc

00011f18 <free@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #20, 20	; 0x14000
   11f20:	ldr	pc, [ip, #244]!	; 0xf4

00011f24 <time@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #20, 20	; 0x14000
   11f2c:	ldr	pc, [ip, #236]!	; 0xec

00011f30 <realloc@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #20, 20	; 0x14000
   11f38:	ldr	pc, [ip, #228]!	; 0xe4

00011f3c <strcpy@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #20, 20	; 0x14000
   11f44:	ldr	pc, [ip, #220]!	; 0xdc

00011f48 <malloc@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #20, 20	; 0x14000
   11f50:	ldr	pc, [ip, #212]!	; 0xd4

00011f54 <__libc_start_main@plt>:
   11f54:	add	ip, pc, #0, 12
   11f58:	add	ip, ip, #20, 20	; 0x14000
   11f5c:	ldr	pc, [ip, #204]!	; 0xcc

00011f60 <__gmon_start__@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #20, 20	; 0x14000
   11f68:	ldr	pc, [ip, #196]!	; 0xc4

00011f6c <strlen@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #20, 20	; 0x14000
   11f74:	ldr	pc, [ip, #188]!	; 0xbc

00011f78 <srand@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #20, 20	; 0x14000
   11f80:	ldr	pc, [ip, #180]!	; 0xb4

00011f84 <snprintf@plt>:
   11f84:	add	ip, pc, #0, 12
   11f88:	add	ip, ip, #20, 20	; 0x14000
   11f8c:	ldr	pc, [ip, #172]!	; 0xac

00011f90 <__isoc99_sscanf@plt>:
   11f90:	add	ip, pc, #0, 12
   11f94:	add	ip, ip, #20, 20	; 0x14000
   11f98:	ldr	pc, [ip, #164]!	; 0xa4

00011f9c <rand@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #20, 20	; 0x14000
   11fa4:	ldr	pc, [ip, #156]!	; 0x9c

00011fa8 <abort@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #20, 20	; 0x14000
   11fb0:	ldr	pc, [ip, #148]!	; 0x94

Disassembly of section .text:

00011fb4 <_start@@Base>:
   11fb4:	mov	fp, #0
   11fb8:	mov	lr, #0
   11fbc:	pop	{r1}		; (ldr r1, [sp], #4)
   11fc0:	mov	r2, sp
   11fc4:	push	{r2}		; (str r2, [sp, #-4]!)
   11fc8:	push	{r0}		; (str r0, [sp, #-4]!)
   11fcc:	ldr	ip, [pc, #16]	; 11fe4 <_start@@Base+0x30>
   11fd0:	push	{ip}		; (str ip, [sp, #-4]!)
   11fd4:	ldr	r0, [pc, #12]	; 11fe8 <_start@@Base+0x34>
   11fd8:	ldr	r3, [pc, #12]	; 11fec <_start@@Base+0x38>
   11fdc:	bl	11f54 <__libc_start_main@plt>
   11fe0:	bl	11fa8 <abort@plt>
   11fe4:	andeq	r5, r1, ip, ror r5
   11fe8:	andeq	r2, r1, r4, lsr #1
   11fec:	andeq	r5, r1, ip, lsl r5
   11ff0:	ldr	r3, [pc, #20]	; 1200c <_start@@Base+0x58>
   11ff4:	ldr	r2, [pc, #20]	; 12010 <_start@@Base+0x5c>
   11ff8:	add	r3, pc, r3
   11ffc:	ldr	r2, [r3, r2]
   12000:	cmp	r2, #0
   12004:	bxeq	lr
   12008:	b	11f60 <__gmon_start__@plt>
   1200c:	andeq	r4, r1, r0
   12010:	andeq	r0, r0, r8, asr #32
   12014:	ldr	r0, [pc, #24]	; 12034 <_start@@Base+0x80>
   12018:	ldr	r3, [pc, #24]	; 12038 <_start@@Base+0x84>
   1201c:	cmp	r3, r0
   12020:	bxeq	lr
   12024:	ldr	r3, [pc, #16]	; 1203c <_start@@Base+0x88>
   12028:	cmp	r3, #0
   1202c:	bxeq	lr
   12030:	bx	r3
   12034:	andeq	r6, r2, r4, asr r0
   12038:	andeq	r6, r2, r4, asr r0
   1203c:	andeq	r0, r0, r0
   12040:	ldr	r0, [pc, #36]	; 1206c <_start@@Base+0xb8>
   12044:	ldr	r1, [pc, #36]	; 12070 <_start@@Base+0xbc>
   12048:	sub	r1, r1, r0
   1204c:	asr	r1, r1, #2
   12050:	add	r1, r1, r1, lsr #31
   12054:	asrs	r1, r1, #1
   12058:	bxeq	lr
   1205c:	ldr	r3, [pc, #16]	; 12074 <_start@@Base+0xc0>
   12060:	cmp	r3, #0
   12064:	bxeq	lr
   12068:	bx	r3
   1206c:	andeq	r6, r2, r4, asr r0
   12070:	andeq	r6, r2, r4, asr r0
   12074:	andeq	r0, r0, r0
   12078:	push	{r4, lr}
   1207c:	ldr	r4, [pc, #24]	; 1209c <_start@@Base+0xe8>
   12080:	ldrb	r3, [r4]
   12084:	cmp	r3, #0
   12088:	popne	{r4, pc}
   1208c:	bl	12014 <_start@@Base+0x60>
   12090:	mov	r3, #1
   12094:	strb	r3, [r4]
   12098:	pop	{r4, pc}
   1209c:	andeq	r6, r2, r4, asr r0
   120a0:	b	12040 <_start@@Base+0x8c>

000120a4 <main@@Base>:
   120a4:	push	{r4, r5, r6, sl, fp, lr}
   120a8:	add	fp, sp, #16
   120ac:	sub	sp, sp, #64	; 0x40
   120b0:	add	r0, sp, #4
   120b4:	bl	11f24 <time@plt>
   120b8:	bl	11f78 <srand@plt>
   120bc:	bl	11f9c <rand@plt>
   120c0:	add	r5, sp, #8
   120c4:	mov	r4, r0
   120c8:	mov	r0, r5
   120cc:	bl	12198 <table_init@@Base>
   120d0:	movw	r0, #34079	; 0x851f
   120d4:	mov	r6, #0
   120d8:	movt	r0, #20971	; 0x51eb
   120dc:	umull	r0, r1, r4, r0
   120e0:	lsr	r0, r1, #5
   120e4:	mov	r1, #100	; 0x64
   120e8:	mls	r0, r0, r1, r4
   120ec:	add	r4, r0, #100	; 0x64
   120f0:	mov	r0, r5
   120f4:	bl	13930 <table_add_row@@Base>
   120f8:	add	r6, r6, #1
   120fc:	cmp	r6, r4
   12100:	bcc	120f0 <main@@Base+0x4c>
   12104:	add	r0, sp, #8
   12108:	bl	13928 <table_get_row_length@@Base>
   1210c:	mov	r5, #0
   12110:	cmp	r0, r4
   12114:	beq	12130 <main@@Base+0x8c>
   12118:	mov	r2, r0
   1211c:	ldr	r0, [pc, #32]	; 12144 <main@@Base+0xa0>
   12120:	mov	r1, r4
   12124:	add	r0, pc, r0
   12128:	bl	11f0c <printf@plt>
   1212c:	mvn	r5, #0
   12130:	add	r0, sp, #8
   12134:	bl	121f4 <table_destroy@@Base>
   12138:	mov	r0, r5
   1213c:	sub	sp, fp, #16
   12140:	pop	{r4, r5, r6, sl, fp, pc}
   12144:	andeq	r3, r0, r0, ror #8

00012148 <table_new@@Base>:
   12148:	push	{fp, lr}
   1214c:	mov	fp, sp
   12150:	mov	r0, #56	; 0x38
   12154:	bl	11f48 <malloc@plt>
   12158:	vmov.i32	q8, #0	; 0x00000000
   1215c:	mov	r1, #0
   12160:	mov	r2, #10
   12164:	mov	r3, #20
   12168:	str	r1, [r0]
   1216c:	stmib	r0, {r1, r2}
   12170:	str	r1, [r0, #12]
   12174:	str	r1, [r0, #16]
   12178:	str	r1, [r0, #20]
   1217c:	str	r3, [r0, #24]
   12180:	str	r1, [r0, #28]
   12184:	str	r2, [r0, #48]	; 0x30
   12188:	str	r1, [r0, #52]	; 0x34
   1218c:	add	r1, r0, #32
   12190:	vst1.32	{d16-d17}, [r1]
   12194:	pop	{fp, pc}

00012198 <table_init@@Base>:
   12198:	vmov.i32	q8, #0	; 0x00000000
   1219c:	mov	r1, #0
   121a0:	mov	r2, #10
   121a4:	mov	r3, #20
   121a8:	str	r1, [r0]
   121ac:	stmib	r0, {r1, r2}
   121b0:	str	r1, [r0, #12]
   121b4:	str	r1, [r0, #16]
   121b8:	str	r1, [r0, #20]
   121bc:	str	r3, [r0, #24]
   121c0:	str	r1, [r0, #28]
   121c4:	str	r2, [r0, #48]	; 0x30
   121c8:	str	r1, [r0, #52]	; 0x34
   121cc:	add	r0, r0, #32
   121d0:	vst1.32	{d16-d17}, [r0]
   121d4:	bx	lr

000121d8 <table_delete@@Base>:
   121d8:	push	{r4, sl, fp, lr}
   121dc:	add	fp, sp, #8
   121e0:	mov	r4, r0
   121e4:	bl	121f4 <table_destroy@@Base>
   121e8:	mov	r0, r4
   121ec:	pop	{r4, sl, fp, lr}
   121f0:	b	11f18 <free@plt>

000121f4 <table_destroy@@Base>:
   121f4:	cmp	r0, #0
   121f8:	bxeq	lr
   121fc:	push	{r4, r5, r6, sl, fp, lr}
   12200:	add	fp, sp, #16
   12204:	mvn	r1, #0
   12208:	mvn	r2, #0
   1220c:	mov	r3, #64	; 0x40
   12210:	mov	r4, r0
   12214:	bl	12a8c <table_notify@@Base>
   12218:	mov	r0, r4
   1221c:	bl	13928 <table_get_row_length@@Base>
   12220:	cmp	r0, #1
   12224:	blt	12248 <table_destroy@@Base+0x54>
   12228:	mov	r5, r0
   1222c:	mov	r6, #0
   12230:	mov	r0, r4
   12234:	mov	r1, r6
   12238:	bl	138cc <table_row_destroy@@Base>
   1223c:	add	r6, r6, #1
   12240:	cmp	r5, r6
   12244:	bne	12230 <table_destroy@@Base+0x3c>
   12248:	ldr	r0, [r4, #16]
   1224c:	cmp	r0, #0
   12250:	beq	12258 <table_destroy@@Base+0x64>
   12254:	bl	11f18 <free@plt>
   12258:	mov	r0, r4
   1225c:	bl	12b88 <table_get_column_length@@Base>
   12260:	cmp	r0, #1
   12264:	blt	12288 <table_destroy@@Base+0x94>
   12268:	mov	r5, r0
   1226c:	mov	r6, #0
   12270:	mov	r0, r4
   12274:	mov	r1, r6
   12278:	bl	12b70 <table_column_destroy@@Base>
   1227c:	add	r6, r6, #1
   12280:	cmp	r5, r6
   12284:	bne	12270 <table_destroy@@Base+0x7c>
   12288:	ldr	r0, [r4]
   1228c:	cmp	r0, #0
   12290:	beq	12298 <table_destroy@@Base+0xa4>
   12294:	bl	11f18 <free@plt>
   12298:	ldr	r0, [r4, #36]	; 0x24
   1229c:	cmp	r0, #0
   122a0:	beq	122a8 <table_destroy@@Base+0xb4>
   122a4:	bl	11f18 <free@plt>
   122a8:	ldr	r0, [r4, #40]	; 0x28
   122ac:	cmp	r0, #0
   122b0:	beq	122b8 <table_destroy@@Base+0xc4>
   122b4:	bl	11f18 <free@plt>
   122b8:	ldr	r0, [r4, #44]	; 0x2c
   122bc:	cmp	r0, #0
   122c0:	pop	{r4, r5, r6, sl, fp, lr}
   122c4:	beq	122cc <table_destroy@@Base+0xd8>
   122c8:	b	11f18 <free@plt>
   122cc:	bx	lr

000122d0 <table_dupe@@Base>:
   122d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122d4:	add	fp, sp, #28
   122d8:	sub	sp, sp, #12
   122dc:	mov	r4, r0
   122e0:	bl	13928 <table_get_row_length@@Base>
   122e4:	mov	r8, r0
   122e8:	mov	r0, r4
   122ec:	bl	12b88 <table_get_column_length@@Base>
   122f0:	mov	r6, r0
   122f4:	mov	r0, #56	; 0x38
   122f8:	bl	11f48 <malloc@plt>
   122fc:	vmov.i32	q8, #0	; 0x00000000
   12300:	mov	sl, r0
   12304:	mov	r5, #0
   12308:	mov	r0, #10
   1230c:	mov	r1, #20
   12310:	cmp	r6, #1
   12314:	str	r5, [sl]
   12318:	str	r5, [sl, #4]
   1231c:	str	r0, [sl, #8]
   12320:	str	r5, [sl, #12]
   12324:	str	r5, [sl, #16]
   12328:	str	r5, [sl, #20]
   1232c:	str	r1, [sl, #24]
   12330:	str	r5, [sl, #28]
   12334:	str	r0, [sl, #48]	; 0x30
   12338:	add	r0, sl, #32
   1233c:	str	r5, [sl, #52]	; 0x34
   12340:	vst1.32	{d16-d17}, [r0]
   12344:	blt	12380 <table_dupe@@Base+0xb0>
   12348:	mov	r0, r4
   1234c:	mov	r1, r5
   12350:	bl	12bf0 <table_get_column_name@@Base>
   12354:	mov	r7, r0
   12358:	mov	r0, r4
   1235c:	mov	r1, r5
   12360:	bl	12c00 <table_get_column_data_type@@Base>
   12364:	mov	r2, r0
   12368:	mov	r0, sl
   1236c:	mov	r1, r7
   12370:	bl	12c14 <table_add_column@@Base>
   12374:	add	r5, r5, #1
   12378:	cmp	r6, r5
   1237c:	bne	12348 <table_dupe@@Base+0x78>
   12380:	cmp	r8, #1
   12384:	blt	127f8 <table_dupe@@Base+0x528>
   12388:	mov	r5, #0
   1238c:	add	r9, sp, #8
   12390:	b	123a0 <table_dupe@@Base+0xd0>
   12394:	add	r5, r5, #1
   12398:	cmp	r5, r8
   1239c:	beq	127f8 <table_dupe@@Base+0x528>
   123a0:	mov	r0, sl
   123a4:	bl	13930 <table_add_row@@Base>
   123a8:	cmp	r6, #1
   123ac:	blt	12394 <table_dupe@@Base+0xc4>
   123b0:	mov	r7, #0
   123b4:	b	123ec <table_dupe@@Base+0x11c>
   123b8:	mov	r0, r4
   123bc:	mov	r1, r5
   123c0:	mov	r2, r7
   123c4:	bl	13888 <table_get_ptr@@Base>
   123c8:	str	r0, [sp, #8]
   123cc:	mov	r0, sl
   123d0:	mov	r1, r5
   123d4:	mov	r2, r7
   123d8:	mov	r3, r9
   123dc:	bl	149bc <table_set_ptr@@Base>
   123e0:	add	r7, r7, #1
   123e4:	cmp	r6, r7
   123e8:	beq	12394 <table_dupe@@Base+0xc4>
   123ec:	mov	r0, r4
   123f0:	mov	r1, r7
   123f4:	bl	12c00 <table_get_column_data_type@@Base>
   123f8:	cmp	r0, #23
   123fc:	bhi	123e0 <table_dupe@@Base+0x110>
   12400:	add	r1, pc, #4
   12404:	ldr	r0, [r1, r0, lsl #2]
   12408:	add	pc, r1, r0
   1240c:	andeq	r0, r0, r0, rrx
   12410:	andeq	r0, r0, r8, lsl #1
   12414:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12418:	ldrdeq	r0, [r0], -r8
   1241c:	andeq	r0, r0, r0, lsl #2
   12420:	andeq	r0, r0, r8, lsr #2
   12424:	andeq	r0, r0, r0, asr r1
   12428:	andeq	r0, r0, r8, ror r1
   1242c:	andeq	r0, r0, r0, lsr #3
   12430:	andeq	r0, r0, r8, asr #3
   12434:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12438:	andeq	r0, r0, r8, lsl r2
   1243c:	andeq	r0, r0, r0, asr #4
   12440:	andeq	r0, r0, r8, ror #4
   12444:	muleq	r0, r0, r2
   12448:			; <UNDEFINED> instruction: 0x000002b8
   1244c:	andeq	r0, r0, r0, ror #5
   12450:	andeq	r0, r0, r4, lsl #6
   12454:	andeq	r0, r0, r8, lsr #6
   12458:	andeq	r0, r0, ip, asr #6
   1245c:	andeq	r0, r0, r4, ror r3
   12460:	muleq	r0, ip, r3
   12464:	andeq	r0, r0, r4, asr #7
   12468:			; <UNDEFINED> instruction: 0xffffffac
   1246c:	mov	r0, r4
   12470:	mov	r1, r5
   12474:	mov	r2, r7
   12478:	bl	1367c <table_get_int@@Base>
   1247c:	mov	r3, r0
   12480:	mov	r0, sl
   12484:	mov	r1, r5
   12488:	mov	r2, r7
   1248c:	bl	13ee0 <table_set_int@@Base>
   12490:	b	123e0 <table_dupe@@Base+0x110>
   12494:	mov	r0, r4
   12498:	mov	r1, r5
   1249c:	mov	r2, r7
   124a0:	bl	13694 <table_get_uint@@Base>
   124a4:	mov	r3, r0
   124a8:	mov	r0, sl
   124ac:	mov	r1, r5
   124b0:	mov	r2, r7
   124b4:	bl	13f60 <table_set_uint@@Base>
   124b8:	b	123e0 <table_dupe@@Base+0x110>
   124bc:	mov	r0, r4
   124c0:	mov	r1, r5
   124c4:	mov	r2, r7
   124c8:	bl	136ac <table_get_int8@@Base>
   124cc:	mov	r3, r0
   124d0:	mov	r0, sl
   124d4:	mov	r1, r5
   124d8:	mov	r2, r7
   124dc:	bl	13fe0 <table_set_int8@@Base>
   124e0:	b	123e0 <table_dupe@@Base+0x110>
   124e4:	mov	r0, r4
   124e8:	mov	r1, r5
   124ec:	mov	r2, r7
   124f0:	bl	136c4 <table_get_uint8@@Base>
   124f4:	mov	r3, r0
   124f8:	mov	r0, sl
   124fc:	mov	r1, r5
   12500:	mov	r2, r7
   12504:	bl	14060 <table_set_uint8@@Base>
   12508:	b	123e0 <table_dupe@@Base+0x110>
   1250c:	mov	r0, r4
   12510:	mov	r1, r5
   12514:	mov	r2, r7
   12518:	bl	136dc <table_get_int16@@Base>
   1251c:	mov	r3, r0
   12520:	mov	r0, sl
   12524:	mov	r1, r5
   12528:	mov	r2, r7
   1252c:	bl	140e0 <table_set_int16@@Base>
   12530:	b	123e0 <table_dupe@@Base+0x110>
   12534:	mov	r0, r4
   12538:	mov	r1, r5
   1253c:	mov	r2, r7
   12540:	bl	136f4 <table_get_uint16@@Base>
   12544:	mov	r3, r0
   12548:	mov	r0, sl
   1254c:	mov	r1, r5
   12550:	mov	r2, r7
   12554:	bl	14160 <table_set_uint16@@Base>
   12558:	b	123e0 <table_dupe@@Base+0x110>
   1255c:	mov	r0, r4
   12560:	mov	r1, r5
   12564:	mov	r2, r7
   12568:	bl	1370c <table_get_int32@@Base>
   1256c:	mov	r3, r0
   12570:	mov	r0, sl
   12574:	mov	r1, r5
   12578:	mov	r2, r7
   1257c:	bl	141e0 <table_set_int32@@Base>
   12580:	b	123e0 <table_dupe@@Base+0x110>
   12584:	mov	r0, r4
   12588:	mov	r1, r5
   1258c:	mov	r2, r7
   12590:	bl	13724 <table_get_uint32@@Base>
   12594:	mov	r3, r0
   12598:	mov	r0, sl
   1259c:	mov	r1, r5
   125a0:	mov	r2, r7
   125a4:	bl	14260 <table_set_uint32@@Base>
   125a8:	b	123e0 <table_dupe@@Base+0x110>
   125ac:	mov	r0, r4
   125b0:	mov	r1, r5
   125b4:	mov	r2, r7
   125b8:	bl	1373c <table_get_int64@@Base>
   125bc:	stm	sp, {r0, r1}
   125c0:	mov	r0, sl
   125c4:	mov	r1, r5
   125c8:	mov	r2, r7
   125cc:	bl	142e0 <table_set_int64@@Base>
   125d0:	b	123e0 <table_dupe@@Base+0x110>
   125d4:	mov	r0, r4
   125d8:	mov	r1, r5
   125dc:	mov	r2, r7
   125e0:	bl	13754 <table_get_uint64@@Base>
   125e4:	stm	sp, {r0, r1}
   125e8:	mov	r0, sl
   125ec:	mov	r1, r5
   125f0:	mov	r2, r7
   125f4:	bl	14368 <table_set_uint64@@Base>
   125f8:	b	123e0 <table_dupe@@Base+0x110>
   125fc:	mov	r0, r4
   12600:	mov	r1, r5
   12604:	mov	r2, r7
   12608:	bl	1376c <table_get_short@@Base>
   1260c:	mov	r3, r0
   12610:	mov	r0, sl
   12614:	mov	r1, r5
   12618:	mov	r2, r7
   1261c:	bl	143f0 <table_set_short@@Base>
   12620:	b	123e0 <table_dupe@@Base+0x110>
   12624:	mov	r0, r4
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	13784 <table_get_ushort@@Base>
   12634:	mov	r3, r0
   12638:	mov	r0, sl
   1263c:	mov	r1, r5
   12640:	mov	r2, r7
   12644:	bl	14470 <table_set_ushort@@Base>
   12648:	b	123e0 <table_dupe@@Base+0x110>
   1264c:	mov	r0, r4
   12650:	mov	r1, r5
   12654:	mov	r2, r7
   12658:	bl	1379c <table_get_long@@Base>
   1265c:	mov	r3, r0
   12660:	mov	r0, sl
   12664:	mov	r1, r5
   12668:	mov	r2, r7
   1266c:	bl	144f0 <table_set_long@@Base>
   12670:	b	123e0 <table_dupe@@Base+0x110>
   12674:	mov	r0, r4
   12678:	mov	r1, r5
   1267c:	mov	r2, r7
   12680:	bl	137b4 <table_get_ulong@@Base>
   12684:	mov	r3, r0
   12688:	mov	r0, sl
   1268c:	mov	r1, r5
   12690:	mov	r2, r7
   12694:	bl	14570 <table_set_ulong@@Base>
   12698:	b	123e0 <table_dupe@@Base+0x110>
   1269c:	mov	r0, r4
   126a0:	mov	r1, r5
   126a4:	mov	r2, r7
   126a8:	bl	137cc <table_get_llong@@Base>
   126ac:	stm	sp, {r0, r1}
   126b0:	mov	r0, sl
   126b4:	mov	r1, r5
   126b8:	mov	r2, r7
   126bc:	bl	145f0 <table_set_llong@@Base>
   126c0:	b	123e0 <table_dupe@@Base+0x110>
   126c4:	mov	r0, r4
   126c8:	mov	r1, r5
   126cc:	mov	r2, r7
   126d0:	bl	137e4 <table_get_ullong@@Base>
   126d4:	stm	sp, {r0, r1}
   126d8:	mov	r0, sl
   126dc:	mov	r1, r5
   126e0:	mov	r2, r7
   126e4:	bl	14678 <table_set_ullong@@Base>
   126e8:	b	123e0 <table_dupe@@Base+0x110>
   126ec:	mov	r0, r4
   126f0:	mov	r1, r5
   126f4:	mov	r2, r7
   126f8:	bl	137fc <table_get_float@@Base>
   126fc:	mov	r0, sl
   12700:	mov	r1, r5
   12704:	mov	r2, r7
   12708:	bl	14700 <table_set_float@@Base>
   1270c:	b	123e0 <table_dupe@@Base+0x110>
   12710:	mov	r0, r4
   12714:	mov	r1, r5
   12718:	mov	r2, r7
   1271c:	bl	13814 <table_get_double@@Base>
   12720:	mov	r0, sl
   12724:	mov	r1, r5
   12728:	mov	r2, r7
   1272c:	bl	1478c <table_set_double@@Base>
   12730:	b	123e0 <table_dupe@@Base+0x110>
   12734:	mov	r0, r4
   12738:	mov	r1, r5
   1273c:	mov	r2, r7
   12740:	bl	1382c <table_get_ldouble@@Base>
   12744:	mov	r0, sl
   12748:	mov	r1, r5
   1274c:	mov	r2, r7
   12750:	bl	14814 <table_set_ldouble@@Base>
   12754:	b	123e0 <table_dupe@@Base+0x110>
   12758:	mov	r0, r4
   1275c:	mov	r1, r5
   12760:	mov	r2, r7
   12764:	bl	13844 <table_get_char@@Base>
   12768:	mov	r3, r0
   1276c:	mov	r0, sl
   12770:	mov	r1, r5
   12774:	mov	r2, r7
   12778:	bl	148bc <table_set_char@@Base>
   1277c:	b	123e0 <table_dupe@@Base+0x110>
   12780:	mov	r0, r4
   12784:	mov	r1, r5
   12788:	mov	r2, r7
   1278c:	bl	1385c <table_get_uchar@@Base>
   12790:	mov	r3, r0
   12794:	mov	r0, sl
   12798:	mov	r1, r5
   1279c:	mov	r2, r7
   127a0:	bl	1493c <table_set_uchar@@Base>
   127a4:	b	123e0 <table_dupe@@Base+0x110>
   127a8:	mov	r0, r4
   127ac:	mov	r1, r5
   127b0:	mov	r2, r7
   127b4:	bl	13874 <table_get_string@@Base>
   127b8:	mov	r3, r0
   127bc:	mov	r0, sl
   127c0:	mov	r1, r5
   127c4:	mov	r2, r7
   127c8:	bl	1489c <table_set_string@@Base>
   127cc:	b	123e0 <table_dupe@@Base+0x110>
   127d0:	mov	r0, r4
   127d4:	mov	r1, r5
   127d8:	mov	r2, r7
   127dc:	bl	13664 <table_get_bool@@Base>
   127e0:	mov	r3, r0
   127e4:	mov	r0, sl
   127e8:	mov	r1, r5
   127ec:	mov	r2, r7
   127f0:	bl	13e60 <table_set_bool@@Base>
   127f4:	b	123e0 <table_dupe@@Base+0x110>
   127f8:	mov	r0, sl
   127fc:	sub	sp, fp, #28
   12800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012804 <table_get_major_version@@Base>:
   12804:	mov	r0, #0
   12808:	bx	lr

0001280c <table_get_minor_version@@Base>:
   1280c:	mov	r0, #0
   12810:	bx	lr

00012814 <table_get_patch_version@@Base>:
   12814:	mov	r0, #0
   12818:	bx	lr

0001281c <table_get_version@@Base>:
   1281c:	ldr	r0, [pc, #4]	; 12828 <table_get_version@@Base+0xc>
   12820:	add	r0, pc, r0
   12824:	bx	lr
   12828:	andeq	r2, r0, ip, asr #27

0001282c <table_get_callback_length@@Base>:
   1282c:	ldr	r0, [r0, #32]
   12830:	bx	lr

00012834 <table_register_callback@@Base>:
   12834:	push	{r4, r5, r6, r7, fp, lr}
   12838:	add	fp, sp, #16
   1283c:	mov	r5, r0
   12840:	ldr	r0, [r0, #32]
   12844:	mov	r4, r3
   12848:	mov	r6, r2
   1284c:	mov	r7, r1
   12850:	cmp	r0, #1
   12854:	blt	128a8 <table_register_callback@@Base+0x74>
   12858:	ldr	r2, [r5, #36]	; 0x24
   1285c:	mov	r1, #0
   12860:	b	12870 <table_register_callback@@Base+0x3c>
   12864:	add	r1, r1, #1
   12868:	cmp	r0, r1
   1286c:	beq	128a8 <table_register_callback@@Base+0x74>
   12870:	ldr	r3, [r2, r1, lsl #2]
   12874:	cmp	r3, r7
   12878:	bne	12864 <table_register_callback@@Base+0x30>
   1287c:	ldr	r3, [r5, #40]	; 0x28
   12880:	ldr	r3, [r3, r1, lsl #2]
   12884:	cmp	r3, r6
   12888:	bne	12864 <table_register_callback@@Base+0x30>
   1288c:	cmp	r1, #0
   12890:	beq	128a8 <table_register_callback@@Base+0x74>
   12894:	ldr	r0, [r5, #44]	; 0x2c
   12898:	ldr	r2, [r0, r1, lsl #2]
   1289c:	orr	r2, r2, r4
   128a0:	str	r2, [r0, r1, lsl #2]
   128a4:	pop	{r4, r5, r6, r7, fp, pc}
   128a8:	ldr	r1, [r5, #48]	; 0x30
   128ac:	udiv	r2, r0, r1
   128b0:	mls	r2, r2, r1, r0
   128b4:	cmp	r2, #0
   128b8:	bne	12904 <table_register_callback@@Base+0xd0>
   128bc:	ldr	r2, [r5, #52]	; 0x34
   128c0:	ldr	r0, [r5, #36]	; 0x24
   128c4:	add	r1, r2, r1
   128c8:	str	r1, [r5, #52]	; 0x34
   128cc:	lsl	r1, r1, #2
   128d0:	bl	11f30 <realloc@plt>
   128d4:	str	r0, [r5, #36]	; 0x24
   128d8:	ldr	r1, [r5, #52]	; 0x34
   128dc:	ldr	r0, [r5, #40]	; 0x28
   128e0:	lsl	r1, r1, #2
   128e4:	bl	11f30 <realloc@plt>
   128e8:	str	r0, [r5, #40]	; 0x28
   128ec:	ldr	r1, [r5, #52]	; 0x34
   128f0:	ldr	r0, [r5, #44]	; 0x2c
   128f4:	lsl	r1, r1, #2
   128f8:	bl	11f30 <realloc@plt>
   128fc:	str	r0, [r5, #44]	; 0x2c
   12900:	ldr	r0, [r5, #32]
   12904:	ldr	r1, [r5, #36]	; 0x24
   12908:	str	r7, [r1, r0, lsl #2]
   1290c:	ldr	r1, [r5, #40]	; 0x28
   12910:	str	r6, [r1, r0, lsl #2]
   12914:	ldr	r1, [r5, #44]	; 0x2c
   12918:	str	r4, [r1, r0, lsl #2]
   1291c:	ldr	r0, [r5, #32]
   12920:	add	r0, r0, #1
   12924:	str	r0, [r5, #32]
   12928:	pop	{r4, r5, r6, r7, fp, pc}

0001292c <table_unregister_callback@@Base>:
   1292c:	push	{r4, r5, r6, sl, fp, lr}
   12930:	add	fp, sp, #16
   12934:	ldr	r4, [r0, #32]
   12938:	cmp	r4, #1
   1293c:	blt	12a88 <table_unregister_callback@@Base+0x15c>
   12940:	ldr	r3, [r0, #36]	; 0x24
   12944:	mov	r6, r0
   12948:	mov	r0, #0
   1294c:	b	1295c <table_unregister_callback@@Base+0x30>
   12950:	add	r0, r0, #1
   12954:	cmp	r0, r4
   12958:	beq	12a88 <table_unregister_callback@@Base+0x15c>
   1295c:	ldr	r5, [r3, r0, lsl #2]
   12960:	cmp	r5, r1
   12964:	bne	12950 <table_unregister_callback@@Base+0x24>
   12968:	ldr	r5, [r6, #40]	; 0x28
   1296c:	ldr	r5, [r5, r0, lsl #2]
   12970:	cmp	r5, r2
   12974:	bne	12950 <table_unregister_callback@@Base+0x24>
   12978:	sub	r1, r4, #1
   1297c:	cmp	r0, r1
   12980:	bge	12a04 <table_unregister_callback@@Base+0xd8>
   12984:	add	r2, r0, #1
   12988:	ldr	r1, [r3, r2, lsl #2]
   1298c:	str	r1, [r3, r0, lsl #2]
   12990:	ldr	r1, [r6, #40]	; 0x28
   12994:	ldr	r3, [r1, r2, lsl #2]
   12998:	str	r3, [r1, r0, lsl #2]
   1299c:	ldr	r1, [r6, #44]	; 0x2c
   129a0:	ldr	r3, [r1, r2, lsl #2]
   129a4:	str	r3, [r1, r0, lsl #2]
   129a8:	ldr	r1, [r6, #32]
   129ac:	sub	r1, r1, #1
   129b0:	cmp	r2, r1
   129b4:	bge	12a04 <table_unregister_callback@@Base+0xd8>
   129b8:	ldr	r1, [r6, #36]	; 0x24
   129bc:	add	r1, r1, r0, lsl #2
   129c0:	ldr	r2, [r1, #8]
   129c4:	str	r2, [r1, #4]
   129c8:	ldr	r1, [r6, #40]	; 0x28
   129cc:	add	r1, r1, r0, lsl #2
   129d0:	ldr	r2, [r1, #8]
   129d4:	str	r2, [r1, #4]
   129d8:	ldr	r1, [r6, #44]	; 0x2c
   129dc:	add	r1, r1, r0, lsl #2
   129e0:	ldr	r2, [r1, #8]
   129e4:	str	r2, [r1, #4]
   129e8:	add	r2, r0, #1
   129ec:	add	r0, r0, #2
   129f0:	ldr	r1, [r6, #32]
   129f4:	sub	r1, r1, #1
   129f8:	cmp	r0, r1
   129fc:	mov	r0, r2
   12a00:	blt	129b8 <table_unregister_callback@@Base+0x8c>
   12a04:	str	r1, [r6, #32]
   12a08:	ldr	r2, [r6, #48]	; 0x30
   12a0c:	udiv	r0, r1, r2
   12a10:	mls	r0, r0, r2, r1
   12a14:	cmp	r0, #0
   12a18:	popne	{r4, r5, r6, sl, fp, pc}
   12a1c:	ldr	r1, [r6, #52]	; 0x34
   12a20:	ldr	r0, [r6, #36]	; 0x24
   12a24:	subs	r1, r1, r2
   12a28:	str	r1, [r6, #52]	; 0x34
   12a2c:	beq	12a64 <table_unregister_callback@@Base+0x138>
   12a30:	lsl	r1, r1, #2
   12a34:	bl	11f30 <realloc@plt>
   12a38:	str	r0, [r6, #36]	; 0x24
   12a3c:	ldr	r1, [r6, #52]	; 0x34
   12a40:	ldr	r0, [r6, #40]	; 0x28
   12a44:	lsl	r1, r1, #2
   12a48:	bl	11f30 <realloc@plt>
   12a4c:	str	r0, [r6, #40]	; 0x28
   12a50:	ldr	r1, [r6, #52]	; 0x34
   12a54:	ldr	r0, [r6, #44]	; 0x2c
   12a58:	lsl	r1, r1, #2
   12a5c:	bl	11f30 <realloc@plt>
   12a60:	b	12a84 <table_unregister_callback@@Base+0x158>
   12a64:	bl	11f18 <free@plt>
   12a68:	ldr	r0, [r6, #40]	; 0x28
   12a6c:	bl	11f18 <free@plt>
   12a70:	ldr	r0, [r6, #44]	; 0x2c
   12a74:	bl	11f18 <free@plt>
   12a78:	mov	r0, #0
   12a7c:	str	r0, [r6, #36]	; 0x24
   12a80:	str	r0, [r6, #40]	; 0x28
   12a84:	str	r0, [r6, #44]	; 0x2c
   12a88:	pop	{r4, r5, r6, sl, fp, pc}

00012a8c <table_notify@@Base>:
   12a8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a90:	add	fp, sp, #24
   12a94:	sub	sp, sp, #8
   12a98:	mov	r7, r0
   12a9c:	ldr	r0, [r0, #32]
   12aa0:	cmp	r0, #1
   12aa4:	blt	12b08 <table_notify@@Base+0x7c>
   12aa8:	mov	r4, r3
   12aac:	mov	r8, r2
   12ab0:	mov	r9, r1
   12ab4:	mov	r5, #0
   12ab8:	b	12ac8 <table_notify@@Base+0x3c>
   12abc:	add	r5, r5, #1
   12ac0:	cmp	r5, r0
   12ac4:	bge	12b08 <table_notify@@Base+0x7c>
   12ac8:	ldr	r1, [r7, #44]	; 0x2c
   12acc:	ldr	r1, [r1, r5, lsl #2]
   12ad0:	tst	r1, r4
   12ad4:	beq	12abc <table_notify@@Base+0x30>
   12ad8:	ldr	r0, [r7, #36]	; 0x24
   12adc:	ldr	r1, [r7, #40]	; 0x28
   12ae0:	mov	r2, r8
   12ae4:	mov	r3, r4
   12ae8:	ldr	r6, [r0, r5, lsl #2]
   12aec:	ldr	r0, [r1, r5, lsl #2]
   12af0:	mov	r1, r9
   12af4:	str	r0, [sp]
   12af8:	mov	r0, r7
   12afc:	blx	r6
   12b00:	ldr	r0, [r7, #32]
   12b04:	b	12abc <table_notify@@Base+0x30>
   12b08:	sub	sp, fp, #24
   12b0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012b10 <table_column_init@@Base>:
   12b10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b14:	add	fp, sp, #24
   12b18:	ldr	r7, [r0]
   12b1c:	mov	r0, r2
   12b20:	mov	r4, r3
   12b24:	mov	r5, r2
   12b28:	mov	r6, r1
   12b2c:	bl	11f6c <strlen@plt>
   12b30:	add	r0, r0, #1
   12b34:	bl	11f48 <malloc@plt>
   12b38:	ldr	r8, [fp, #8]
   12b3c:	add	r6, r6, r6, lsl #1
   12b40:	cmp	r0, #0
   12b44:	str	r0, [r7, r6, lsl #2]
   12b48:	beq	12b54 <table_column_init@@Base+0x44>
   12b4c:	mov	r1, r5
   12b50:	bl	11f3c <strcpy@plt>
   12b54:	add	r0, r7, r6, lsl #2
   12b58:	stmib	r0, {r4, r8}
   12b5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012b60 <table_get_col_ptr@@Base>:
   12b60:	ldr	r0, [r0]
   12b64:	add	r1, r1, r1, lsl #1
   12b68:	add	r0, r0, r1, lsl #2
   12b6c:	bx	lr

00012b70 <table_column_destroy@@Base>:
   12b70:	ldr	r0, [r0]
   12b74:	add	r1, r1, r1, lsl #1
   12b78:	ldr	r0, [r0, r1, lsl #2]
   12b7c:	cmp	r0, #0
   12b80:	bxeq	lr
   12b84:	b	11f18 <free@plt>

00012b88 <table_get_column_length@@Base>:
   12b88:	ldr	r0, [r0, #4]
   12b8c:	bx	lr

00012b90 <table_get_column@@Base>:
   12b90:	push	{r4, r5, r6, r7, fp, lr}
   12b94:	add	fp, sp, #16
   12b98:	ldr	r6, [r0, #4]
   12b9c:	cmp	r6, #1
   12ba0:	blt	12bdc <table_get_column@@Base+0x4c>
   12ba4:	ldr	r7, [r0]
   12ba8:	mov	r5, r1
   12bac:	mov	r4, #0
   12bb0:	ldr	r0, [r7]
   12bb4:	mov	r1, r5
   12bb8:	bl	11f00 <strcmp@plt>
   12bbc:	cmp	r0, #0
   12bc0:	beq	12be0 <table_get_column@@Base+0x50>
   12bc4:	add	r4, r4, #1
   12bc8:	add	r7, r7, #12
   12bcc:	cmp	r6, r4
   12bd0:	bne	12bb0 <table_get_column@@Base+0x20>
   12bd4:	mov	r4, r6
   12bd8:	b	12be0 <table_get_column@@Base+0x50>
   12bdc:	mov	r4, #0
   12be0:	cmp	r4, r6
   12be4:	mvneq	r4, #0
   12be8:	mov	r0, r4
   12bec:	pop	{r4, r5, r6, r7, fp, pc}

00012bf0 <table_get_column_name@@Base>:
   12bf0:	ldr	r0, [r0]
   12bf4:	add	r1, r1, r1, lsl #1
   12bf8:	ldr	r0, [r0, r1, lsl #2]
   12bfc:	bx	lr

00012c00 <table_get_column_data_type@@Base>:
   12c00:	ldr	r0, [r0]
   12c04:	add	r1, r1, r1, lsl #1
   12c08:	add	r0, r0, r1, lsl #2
   12c0c:	ldr	r0, [r0, #4]
   12c10:	bx	lr

00012c14 <table_add_column@@Base>:
   12c14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c18:	add	fp, sp, #28
   12c1c:	sub	sp, sp, #4
   12c20:	mov	r4, r0
   12c24:	mov	r8, r1
   12c28:	ldr	r0, [r0, #4]
   12c2c:	mov	r9, r2
   12c30:	ldr	r1, [r4, #8]
   12c34:	udiv	r2, r0, r1
   12c38:	mls	r0, r2, r1, r0
   12c3c:	cmp	r0, #0
   12c40:	bne	12cac <table_add_column@@Base+0x98>
   12c44:	ldr	r2, [r4, #12]
   12c48:	ldr	r0, [r4]
   12c4c:	add	r1, r2, r1
   12c50:	str	r1, [r4, #12]
   12c54:	add	r1, r1, r1, lsl #1
   12c58:	lsl	r1, r1, #2
   12c5c:	bl	11f30 <realloc@plt>
   12c60:	str	r0, [r4]
   12c64:	mov	r0, r4
   12c68:	bl	13928 <table_get_row_length@@Base>
   12c6c:	cmp	r0, #1
   12c70:	blt	12cac <table_add_column@@Base+0x98>
   12c74:	mov	r6, r0
   12c78:	mov	r5, #0
   12c7c:	mov	r0, r4
   12c80:	mov	r1, r5
   12c84:	bl	138c0 <table_get_row_ptr@@Base>
   12c88:	ldr	r1, [r4, #12]
   12c8c:	mov	r7, r0
   12c90:	ldr	r0, [r0]
   12c94:	lsl	r1, r1, #2
   12c98:	bl	11f30 <realloc@plt>
   12c9c:	add	r5, r5, #1
   12ca0:	str	r0, [r7]
   12ca4:	cmp	r6, r5
   12ca8:	bne	12c7c <table_add_column@@Base+0x68>
   12cac:	mov	r0, r4
   12cb0:	bl	13928 <table_get_row_length@@Base>
   12cb4:	ldr	r6, [r4, #4]
   12cb8:	mov	r7, r0
   12cbc:	mov	r0, r9
   12cc0:	bl	13630 <table_get_default_compare_function_for_data_type@@Base>
   12cc4:	ldr	r5, [r4]
   12cc8:	mov	sl, r0
   12ccc:	mov	r0, r8
   12cd0:	bl	11f6c <strlen@plt>
   12cd4:	add	r0, r0, #1
   12cd8:	bl	11f48 <malloc@plt>
   12cdc:	mov	r1, r8
   12ce0:	add	r8, r6, r6, lsl #1
   12ce4:	cmp	r0, #0
   12ce8:	str	r0, [r5, r8, lsl #2]
   12cec:	beq	12cf4 <table_add_column@@Base+0xe0>
   12cf0:	bl	11f3c <strcpy@plt>
   12cf4:	add	r0, r5, r8, lsl #2
   12cf8:	cmp	r7, #1
   12cfc:	stmib	r0, {r9, sl}
   12d00:	blt	12d24 <table_add_column@@Base+0x110>
   12d04:	mov	r5, #0
   12d08:	mov	r0, r4
   12d0c:	mov	r1, r5
   12d10:	mov	r2, r6
   12d14:	bl	14a18 <table_cell_init@@Base>
   12d18:	add	r5, r5, #1
   12d1c:	cmp	r7, r5
   12d20:	bne	12d08 <table_add_column@@Base+0xf4>
   12d24:	ldr	r2, [r4, #4]
   12d28:	mov	r0, r4
   12d2c:	mvn	r1, #0
   12d30:	mov	r3, #8
   12d34:	bl	12a8c <table_notify@@Base>
   12d38:	ldr	r0, [r4, #4]
   12d3c:	add	r1, r0, #1
   12d40:	str	r1, [r4, #4]
   12d44:	sub	sp, fp, #28
   12d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d4c <table_remove_column@@Base>:
   12d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d50:	add	fp, sp, #28
   12d54:	sub	sp, sp, #12
   12d58:	mov	r5, r0
   12d5c:	ldr	r0, [r0]
   12d60:	add	r6, r1, r1, lsl #1
   12d64:	mov	r4, r1
   12d68:	ldr	r0, [r0, r6, lsl #2]
   12d6c:	cmp	r0, #0
   12d70:	beq	12d78 <table_remove_column@@Base+0x2c>
   12d74:	bl	11f18 <free@plt>
   12d78:	ldr	r7, [r5, #4]
   12d7c:	sub	r8, r7, #1
   12d80:	cmp	r8, r4
   12d84:	ble	12db8 <table_remove_column@@Base+0x6c>
   12d88:	mvn	r0, r4
   12d8c:	lsl	r1, r6, #2
   12d90:	add	r0, r0, r7
   12d94:	ldr	r2, [r5]
   12d98:	subs	r0, r0, #1
   12d9c:	add	r2, r2, r1
   12da0:	add	r1, r1, #12
   12da4:	vldr	d16, [r2, #12]
   12da8:	ldr	r3, [r2, #20]
   12dac:	str	r3, [r2, #8]
   12db0:	vstr	d16, [r2]
   12db4:	bne	12d94 <table_remove_column@@Base+0x48>
   12db8:	mov	r0, r5
   12dbc:	bl	13928 <table_get_row_length@@Base>
   12dc0:	cmp	r0, #1
   12dc4:	blt	12e84 <table_remove_column@@Base+0x138>
   12dc8:	mov	r9, r0
   12dcc:	mvn	r0, r4
   12dd0:	sub	sl, r7, #2
   12dd4:	add	r0, r7, r0
   12dd8:	mov	r7, #0
   12ddc:	and	r0, r0, #1
   12de0:	str	r0, [sp, #8]
   12de4:	add	r0, r4, #1
   12de8:	str	r0, [sp, #4]
   12dec:	b	12dfc <table_remove_column@@Base+0xb0>
   12df0:	add	r7, r7, #1
   12df4:	cmp	r7, r9
   12df8:	beq	12e84 <table_remove_column@@Base+0x138>
   12dfc:	mov	r0, r5
   12e00:	mov	r1, r7
   12e04:	mov	r2, r4
   12e08:	bl	14a54 <table_cell_destroy@@Base>
   12e0c:	mov	r0, r5
   12e10:	mov	r1, r7
   12e14:	bl	138c0 <table_get_row_ptr@@Base>
   12e18:	cmp	r8, r4
   12e1c:	ble	12df0 <table_remove_column@@Base+0xa4>
   12e20:	ldr	r1, [sp, #8]
   12e24:	mov	r2, r4
   12e28:	cmp	r1, #0
   12e2c:	beq	12e44 <table_remove_column@@Base+0xf8>
   12e30:	ldr	r1, [r0]
   12e34:	add	r2, r1, r4, lsl #2
   12e38:	ldr	r2, [r2, #4]
   12e3c:	str	r2, [r1, r4, lsl #2]
   12e40:	ldr	r2, [sp, #4]
   12e44:	cmp	sl, r4
   12e48:	beq	12df0 <table_remove_column@@Base+0xa4>
   12e4c:	sub	r1, r8, r2
   12e50:	lsl	r2, r2, #2
   12e54:	ldr	r3, [r0]
   12e58:	subs	r1, r1, #2
   12e5c:	add	r6, r3, r2
   12e60:	ldr	r6, [r6, #4]
   12e64:	str	r6, [r3, r2]
   12e68:	ldr	r3, [r0]
   12e6c:	add	r3, r3, r2
   12e70:	add	r2, r2, #8
   12e74:	ldr	r6, [r3, #8]
   12e78:	str	r6, [r3, #4]
   12e7c:	bne	12e54 <table_remove_column@@Base+0x108>
   12e80:	b	12df0 <table_remove_column@@Base+0xa4>
   12e84:	ldmib	r5, {r0, r1}
   12e88:	sub	r0, r0, #1
   12e8c:	udiv	r2, r0, r1
   12e90:	str	r0, [r5, #4]
   12e94:	mls	r0, r2, r1, r0
   12e98:	cmp	r0, #0
   12e9c:	bne	12f08 <table_remove_column@@Base+0x1bc>
   12ea0:	ldr	r2, [r5, #12]
   12ea4:	ldr	r0, [r5]
   12ea8:	sub	r1, r2, r1
   12eac:	str	r1, [r5, #12]
   12eb0:	add	r1, r1, r1, lsl #1
   12eb4:	lsl	r1, r1, #2
   12eb8:	bl	11f30 <realloc@plt>
   12ebc:	str	r0, [r5]
   12ec0:	mov	r0, r5
   12ec4:	bl	13928 <table_get_row_length@@Base>
   12ec8:	cmp	r0, #1
   12ecc:	blt	12f08 <table_remove_column@@Base+0x1bc>
   12ed0:	mov	r8, r0
   12ed4:	mov	r7, #0
   12ed8:	mov	r0, r5
   12edc:	mov	r1, r7
   12ee0:	bl	138c0 <table_get_row_ptr@@Base>
   12ee4:	ldr	r1, [r5, #12]
   12ee8:	mov	r6, r0
   12eec:	ldr	r0, [r0]
   12ef0:	lsl	r1, r1, #2
   12ef4:	bl	11f30 <realloc@plt>
   12ef8:	add	r7, r7, #1
   12efc:	str	r0, [r6]
   12f00:	cmp	r8, r7
   12f04:	bne	12ed8 <table_remove_column@@Base+0x18c>
   12f08:	mov	r0, r5
   12f0c:	mvn	r1, #0
   12f10:	mov	r2, r4
   12f14:	mov	r3, #16
   12f18:	bl	12a8c <table_notify@@Base>
   12f1c:	mov	r0, #0
   12f20:	sub	sp, fp, #28
   12f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012f28 <table_get_column_compare_function@@Base>:
   12f28:	ldr	r0, [r0]
   12f2c:	add	r1, r1, r1, lsl #1
   12f30:	add	r0, r0, r1, lsl #2
   12f34:	ldr	r0, [r0, #8]
   12f38:	bx	lr

00012f3c <table_set_column_compare_function@@Base>:
   12f3c:	ldr	r0, [r0]
   12f40:	add	r1, r1, r1, lsl #1
   12f44:	add	r0, r0, r1, lsl #2
   12f48:	str	r2, [r0, #8]
   12f4c:	bx	lr

00012f50 <table_compare_bool@@Base>:
   12f50:	cmp	r0, #0
   12f54:	beq	12f88 <table_compare_bool@@Base+0x38>
   12f58:	cmp	r1, #0
   12f5c:	moveq	r1, #1
   12f60:	moveq	r0, r1
   12f64:	bxeq	lr
   12f68:	ldrb	r2, [r1]
   12f6c:	ldrb	r0, [r0]
   12f70:	mov	r1, #0
   12f74:	cmp	r0, r2
   12f78:	mvncc	r1, #0
   12f7c:	movwhi	r1, #1
   12f80:	mov	r0, r1
   12f84:	bx	lr
   12f88:	cmp	r1, #0
   12f8c:	mvnne	r1, #0
   12f90:	mov	r0, r1
   12f94:	bx	lr

00012f98 <table_compare_int@@Base>:
   12f98:	cmp	r0, #0
   12f9c:	beq	12fd0 <table_compare_int@@Base+0x38>
   12fa0:	cmp	r1, #0
   12fa4:	moveq	r1, #1
   12fa8:	moveq	r0, r1
   12fac:	bxeq	lr
   12fb0:	ldr	r2, [r1]
   12fb4:	ldr	r0, [r0]
   12fb8:	mov	r1, #0
   12fbc:	cmp	r0, r2
   12fc0:	mvnlt	r1, #0
   12fc4:	movwgt	r1, #1
   12fc8:	mov	r0, r1
   12fcc:	bx	lr
   12fd0:	cmp	r1, #0
   12fd4:	mvnne	r1, #0
   12fd8:	mov	r0, r1
   12fdc:	bx	lr

00012fe0 <table_compare_uint@@Base>:
   12fe0:	cmp	r0, #0
   12fe4:	beq	13018 <table_compare_uint@@Base+0x38>
   12fe8:	cmp	r1, #0
   12fec:	moveq	r1, #1
   12ff0:	moveq	r0, r1
   12ff4:	bxeq	lr
   12ff8:	ldr	r2, [r1]
   12ffc:	ldr	r0, [r0]
   13000:	mov	r1, #0
   13004:	cmp	r0, r2
   13008:	mvncc	r1, #0
   1300c:	movwhi	r1, #1
   13010:	mov	r0, r1
   13014:	bx	lr
   13018:	cmp	r1, #0
   1301c:	mvnne	r1, #0
   13020:	mov	r0, r1
   13024:	bx	lr

00013028 <table_compare_int8@@Base>:
   13028:	cmp	r0, #0
   1302c:	beq	13060 <table_compare_int8@@Base+0x38>
   13030:	cmp	r1, #0
   13034:	moveq	r1, #1
   13038:	moveq	r0, r1
   1303c:	bxeq	lr
   13040:	ldrsb	r2, [r1]
   13044:	ldrsb	r0, [r0]
   13048:	mov	r1, #0
   1304c:	cmp	r0, r2
   13050:	mvnlt	r1, #0
   13054:	movwgt	r1, #1
   13058:	mov	r0, r1
   1305c:	bx	lr
   13060:	cmp	r1, #0
   13064:	mvnne	r1, #0
   13068:	mov	r0, r1
   1306c:	bx	lr

00013070 <table_compare_uint8@@Base>:
   13070:	cmp	r0, #0
   13074:	beq	130a8 <table_compare_uint8@@Base+0x38>
   13078:	cmp	r1, #0
   1307c:	moveq	r1, #1
   13080:	moveq	r0, r1
   13084:	bxeq	lr
   13088:	ldrb	r2, [r1]
   1308c:	ldrb	r0, [r0]
   13090:	mov	r1, #0
   13094:	cmp	r0, r2
   13098:	mvncc	r1, #0
   1309c:	movwhi	r1, #1
   130a0:	mov	r0, r1
   130a4:	bx	lr
   130a8:	cmp	r1, #0
   130ac:	mvnne	r1, #0
   130b0:	mov	r0, r1
   130b4:	bx	lr

000130b8 <table_compare_int16@@Base>:
   130b8:	cmp	r0, #0
   130bc:	beq	130f0 <table_compare_int16@@Base+0x38>
   130c0:	cmp	r1, #0
   130c4:	moveq	r1, #1
   130c8:	moveq	r0, r1
   130cc:	bxeq	lr
   130d0:	ldrsh	r2, [r1]
   130d4:	ldrsh	r0, [r0]
   130d8:	mov	r1, #0
   130dc:	cmp	r0, r2
   130e0:	mvnlt	r1, #0
   130e4:	movwgt	r1, #1
   130e8:	mov	r0, r1
   130ec:	bx	lr
   130f0:	cmp	r1, #0
   130f4:	mvnne	r1, #0
   130f8:	mov	r0, r1
   130fc:	bx	lr

00013100 <table_compare_uint16@@Base>:
   13100:	cmp	r0, #0
   13104:	beq	13138 <table_compare_uint16@@Base+0x38>
   13108:	cmp	r1, #0
   1310c:	moveq	r1, #1
   13110:	moveq	r0, r1
   13114:	bxeq	lr
   13118:	ldrh	r2, [r1]
   1311c:	ldrh	r0, [r0]
   13120:	mov	r1, #0
   13124:	cmp	r0, r2
   13128:	mvncc	r1, #0
   1312c:	movwhi	r1, #1
   13130:	mov	r0, r1
   13134:	bx	lr
   13138:	cmp	r1, #0
   1313c:	mvnne	r1, #0
   13140:	mov	r0, r1
   13144:	bx	lr

00013148 <table_compare_int32@@Base>:
   13148:	cmp	r0, #0
   1314c:	beq	13180 <table_compare_int32@@Base+0x38>
   13150:	cmp	r1, #0
   13154:	moveq	r1, #1
   13158:	moveq	r0, r1
   1315c:	bxeq	lr
   13160:	ldr	r2, [r1]
   13164:	ldr	r0, [r0]
   13168:	mov	r1, #0
   1316c:	cmp	r0, r2
   13170:	mvnlt	r1, #0
   13174:	movwgt	r1, #1
   13178:	mov	r0, r1
   1317c:	bx	lr
   13180:	cmp	r1, #0
   13184:	mvnne	r1, #0
   13188:	mov	r0, r1
   1318c:	bx	lr

00013190 <table_compare_uint32@@Base>:
   13190:	cmp	r0, #0
   13194:	beq	131c8 <table_compare_uint32@@Base+0x38>
   13198:	cmp	r1, #0
   1319c:	moveq	r1, #1
   131a0:	moveq	r0, r1
   131a4:	bxeq	lr
   131a8:	ldr	r2, [r1]
   131ac:	ldr	r0, [r0]
   131b0:	mov	r1, #0
   131b4:	cmp	r0, r2
   131b8:	mvncc	r1, #0
   131bc:	movwhi	r1, #1
   131c0:	mov	r0, r1
   131c4:	bx	lr
   131c8:	cmp	r1, #0
   131cc:	mvnne	r1, #0
   131d0:	mov	r0, r1
   131d4:	bx	lr

000131d8 <table_compare_int64@@Base>:
   131d8:	cmp	r0, #0
   131dc:	beq	13230 <table_compare_int64@@Base+0x58>
   131e0:	cmp	r1, #0
   131e4:	moveq	r1, #1
   131e8:	moveq	r0, r1
   131ec:	bxeq	lr
   131f0:	push	{r5, r7, fp, lr}
   131f4:	add	fp, sp, #8
   131f8:	ldm	r0, {r0, r5}
   131fc:	ldm	r1, {r2, r7}
   13200:	mov	r1, #0
   13204:	subs	r3, r0, r2
   13208:	sbcs	r3, r5, r7
   1320c:	movwlt	r1, #1
   13210:	cmp	r1, #0
   13214:	mvnne	r1, #0
   13218:	subs	r0, r2, r0
   1321c:	sbcs	r0, r7, r5
   13220:	movwlt	r1, #1
   13224:	pop	{r5, r7, fp, lr}
   13228:	mov	r0, r1
   1322c:	bx	lr
   13230:	cmp	r1, #0
   13234:	mvnne	r1, #0
   13238:	mov	r0, r1
   1323c:	bx	lr

00013240 <table_compare_uint64@@Base>:
   13240:	cmp	r0, #0
   13244:	beq	13298 <table_compare_uint64@@Base+0x58>
   13248:	cmp	r1, #0
   1324c:	moveq	r1, #1
   13250:	moveq	r0, r1
   13254:	bxeq	lr
   13258:	push	{r5, r7, fp, lr}
   1325c:	add	fp, sp, #8
   13260:	ldm	r0, {r0, r5}
   13264:	ldm	r1, {r2, r7}
   13268:	mov	r1, #0
   1326c:	subs	r3, r0, r2
   13270:	sbcs	r3, r5, r7
   13274:	movwcc	r1, #1
   13278:	cmp	r1, #0
   1327c:	mvnne	r1, #0
   13280:	subs	r0, r2, r0
   13284:	sbcs	r0, r7, r5
   13288:	movwcc	r1, #1
   1328c:	pop	{r5, r7, fp, lr}
   13290:	mov	r0, r1
   13294:	bx	lr
   13298:	cmp	r1, #0
   1329c:	mvnne	r1, #0
   132a0:	mov	r0, r1
   132a4:	bx	lr

000132a8 <table_compare_short@@Base>:
   132a8:	cmp	r0, #0
   132ac:	beq	132e0 <table_compare_short@@Base+0x38>
   132b0:	cmp	r1, #0
   132b4:	moveq	r1, #1
   132b8:	moveq	r0, r1
   132bc:	bxeq	lr
   132c0:	ldrsh	r2, [r1]
   132c4:	ldrsh	r0, [r0]
   132c8:	mov	r1, #0
   132cc:	cmp	r0, r2
   132d0:	mvnlt	r1, #0
   132d4:	movwgt	r1, #1
   132d8:	mov	r0, r1
   132dc:	bx	lr
   132e0:	cmp	r1, #0
   132e4:	mvnne	r1, #0
   132e8:	mov	r0, r1
   132ec:	bx	lr

000132f0 <table_compare_ushort@@Base>:
   132f0:	cmp	r0, #0
   132f4:	beq	13328 <table_compare_ushort@@Base+0x38>
   132f8:	cmp	r1, #0
   132fc:	moveq	r1, #1
   13300:	moveq	r0, r1
   13304:	bxeq	lr
   13308:	ldrh	r2, [r1]
   1330c:	ldrh	r0, [r0]
   13310:	mov	r1, #0
   13314:	cmp	r0, r2
   13318:	mvncc	r1, #0
   1331c:	movwhi	r1, #1
   13320:	mov	r0, r1
   13324:	bx	lr
   13328:	cmp	r1, #0
   1332c:	mvnne	r1, #0
   13330:	mov	r0, r1
   13334:	bx	lr

00013338 <table_compare_long@@Base>:
   13338:	cmp	r0, #0
   1333c:	beq	13370 <table_compare_long@@Base+0x38>
   13340:	cmp	r1, #0
   13344:	moveq	r1, #1
   13348:	moveq	r0, r1
   1334c:	bxeq	lr
   13350:	ldr	r2, [r1]
   13354:	ldr	r0, [r0]
   13358:	mov	r1, #0
   1335c:	cmp	r0, r2
   13360:	mvnlt	r1, #0
   13364:	movwgt	r1, #1
   13368:	mov	r0, r1
   1336c:	bx	lr
   13370:	cmp	r1, #0
   13374:	mvnne	r1, #0
   13378:	mov	r0, r1
   1337c:	bx	lr

00013380 <table_compare_ulong@@Base>:
   13380:	cmp	r0, #0
   13384:	beq	133b8 <table_compare_ulong@@Base+0x38>
   13388:	cmp	r1, #0
   1338c:	moveq	r1, #1
   13390:	moveq	r0, r1
   13394:	bxeq	lr
   13398:	ldr	r2, [r1]
   1339c:	ldr	r0, [r0]
   133a0:	mov	r1, #0
   133a4:	cmp	r0, r2
   133a8:	mvncc	r1, #0
   133ac:	movwhi	r1, #1
   133b0:	mov	r0, r1
   133b4:	bx	lr
   133b8:	cmp	r1, #0
   133bc:	mvnne	r1, #0
   133c0:	mov	r0, r1
   133c4:	bx	lr

000133c8 <table_compare_llong@@Base>:
   133c8:	cmp	r0, #0
   133cc:	beq	13420 <table_compare_llong@@Base+0x58>
   133d0:	cmp	r1, #0
   133d4:	moveq	r1, #1
   133d8:	moveq	r0, r1
   133dc:	bxeq	lr
   133e0:	push	{r5, r7, fp, lr}
   133e4:	add	fp, sp, #8
   133e8:	ldm	r0, {r0, r5}
   133ec:	ldm	r1, {r2, r7}
   133f0:	mov	r1, #0
   133f4:	subs	r3, r0, r2
   133f8:	sbcs	r3, r5, r7
   133fc:	movwlt	r1, #1
   13400:	cmp	r1, #0
   13404:	mvnne	r1, #0
   13408:	subs	r0, r2, r0
   1340c:	sbcs	r0, r7, r5
   13410:	movwlt	r1, #1
   13414:	pop	{r5, r7, fp, lr}
   13418:	mov	r0, r1
   1341c:	bx	lr
   13420:	cmp	r1, #0
   13424:	mvnne	r1, #0
   13428:	mov	r0, r1
   1342c:	bx	lr

00013430 <table_compare_ullong@@Base>:
   13430:	cmp	r0, #0
   13434:	beq	13468 <table_compare_ullong@@Base+0x38>
   13438:	cmp	r1, #0
   1343c:	moveq	r1, #1
   13440:	moveq	r0, r1
   13444:	bxeq	lr
   13448:	ldr	r2, [r1]
   1344c:	ldr	r0, [r0]
   13450:	mov	r1, #0
   13454:	cmp	r0, r2
   13458:	mvncc	r1, #0
   1345c:	movwhi	r1, #1
   13460:	mov	r0, r1
   13464:	bx	lr
   13468:	cmp	r1, #0
   1346c:	mvnne	r1, #0
   13470:	mov	r0, r1
   13474:	bx	lr

00013478 <table_compare_float@@Base>:
   13478:	cmp	r0, #0
   1347c:	beq	134b4 <table_compare_float@@Base+0x3c>
   13480:	cmp	r1, #0
   13484:	moveq	r1, #1
   13488:	moveq	r0, r1
   1348c:	bxeq	lr
   13490:	vldr	s0, [r1]
   13494:	vldr	s2, [r0]
   13498:	mov	r1, #0
   1349c:	vcmpe.f32	s2, s0
   134a0:	vmrs	APSR_nzcv, fpscr
   134a4:	mvnmi	r1, #0
   134a8:	movwgt	r1, #1
   134ac:	mov	r0, r1
   134b0:	bx	lr
   134b4:	cmp	r1, #0
   134b8:	mvnne	r1, #0
   134bc:	mov	r0, r1
   134c0:	bx	lr

000134c4 <table_compare_double@@Base>:
   134c4:	cmp	r0, #0
   134c8:	beq	13500 <table_compare_double@@Base+0x3c>
   134cc:	cmp	r1, #0
   134d0:	moveq	r1, #1
   134d4:	moveq	r0, r1
   134d8:	bxeq	lr
   134dc:	vldr	d16, [r1]
   134e0:	vldr	d17, [r0]
   134e4:	mov	r1, #0
   134e8:	vcmpe.f64	d17, d16
   134ec:	vmrs	APSR_nzcv, fpscr
   134f0:	mvnmi	r1, #0
   134f4:	movwgt	r1, #1
   134f8:	mov	r0, r1
   134fc:	bx	lr
   13500:	cmp	r1, #0
   13504:	mvnne	r1, #0
   13508:	mov	r0, r1
   1350c:	bx	lr

00013510 <table_compare_ldouble@@Base>:
   13510:	cmp	r0, #0
   13514:	beq	1354c <table_compare_ldouble@@Base+0x3c>
   13518:	cmp	r1, #0
   1351c:	moveq	r1, #1
   13520:	moveq	r0, r1
   13524:	bxeq	lr
   13528:	vldr	d16, [r1]
   1352c:	vldr	d17, [r0]
   13530:	mov	r1, #0
   13534:	vcmpe.f64	d17, d16
   13538:	vmrs	APSR_nzcv, fpscr
   1353c:	mvnmi	r1, #0
   13540:	movwgt	r1, #1
   13544:	mov	r0, r1
   13548:	bx	lr
   1354c:	cmp	r1, #0
   13550:	mvnne	r1, #0
   13554:	mov	r0, r1
   13558:	bx	lr

0001355c <table_compare_char@@Base>:
   1355c:	cmp	r0, #0
   13560:	beq	13594 <table_compare_char@@Base+0x38>
   13564:	cmp	r1, #0
   13568:	moveq	r1, #1
   1356c:	moveq	r0, r1
   13570:	bxeq	lr
   13574:	ldrb	r2, [r1]
   13578:	ldrb	r0, [r0]
   1357c:	mov	r1, #0
   13580:	cmp	r0, r2
   13584:	mvncc	r1, #0
   13588:	movwhi	r1, #1
   1358c:	mov	r0, r1
   13590:	bx	lr
   13594:	cmp	r1, #0
   13598:	mvnne	r1, #0
   1359c:	mov	r0, r1
   135a0:	bx	lr

000135a4 <table_compare_uchar@@Base>:
   135a4:	cmp	r0, #0
   135a8:	beq	135dc <table_compare_uchar@@Base+0x38>
   135ac:	cmp	r1, #0
   135b0:	moveq	r1, #1
   135b4:	moveq	r0, r1
   135b8:	bxeq	lr
   135bc:	ldrb	r2, [r1]
   135c0:	ldrb	r0, [r0]
   135c4:	mov	r1, #0
   135c8:	cmp	r0, r2
   135cc:	mvncc	r1, #0
   135d0:	movwhi	r1, #1
   135d4:	mov	r0, r1
   135d8:	bx	lr
   135dc:	cmp	r1, #0
   135e0:	mvnne	r1, #0
   135e4:	mov	r0, r1
   135e8:	bx	lr

000135ec <table_compare_string@@Base>:
   135ec:	cmp	r0, #0
   135f0:	beq	13608 <table_compare_string@@Base+0x1c>
   135f4:	cmp	r1, #0
   135f8:	moveq	r1, #1
   135fc:	moveq	r0, r1
   13600:	bxeq	lr
   13604:	b	11f00 <strcmp@plt>
   13608:	cmp	r1, #0
   1360c:	mvnne	r1, #0
   13610:	mov	r0, r1
   13614:	bx	lr

00013618 <table_compare_ptr@@Base>:
   13618:	cmp	r0, r1
   1361c:	mov	r2, #0
   13620:	mvncc	r2, #0
   13624:	movwhi	r2, #1
   13628:	mov	r0, r2
   1362c:	bx	lr

00013630 <table_get_default_compare_function_for_data_type@@Base>:
   13630:	cmp	r0, #23
   13634:	movhi	r0, #0
   13638:	bxhi	lr
   1363c:	ldr	r1, [pc, #8]	; 1364c <table_get_default_compare_function_for_data_type@@Base+0x1c>
   13640:	add	r1, pc, r1
   13644:	ldr	r0, [r1, r0, lsl #2]
   13648:	bx	lr
   1364c:	andeq	r2, r1, r8, ror #16

00013650 <table_get@@Base>:
   13650:	push	{fp, lr}
   13654:	mov	fp, sp
   13658:	bl	14a38 <table_get_cell_ptr@@Base>
   1365c:	ldr	r0, [r0]
   13660:	pop	{fp, pc}

00013664 <table_get_bool@@Base>:
   13664:	push	{fp, lr}
   13668:	mov	fp, sp
   1366c:	bl	14a38 <table_get_cell_ptr@@Base>
   13670:	ldr	r0, [r0]
   13674:	ldrb	r0, [r0]
   13678:	pop	{fp, pc}

0001367c <table_get_int@@Base>:
   1367c:	push	{fp, lr}
   13680:	mov	fp, sp
   13684:	bl	14a38 <table_get_cell_ptr@@Base>
   13688:	ldr	r0, [r0]
   1368c:	ldr	r0, [r0]
   13690:	pop	{fp, pc}

00013694 <table_get_uint@@Base>:
   13694:	push	{fp, lr}
   13698:	mov	fp, sp
   1369c:	bl	14a38 <table_get_cell_ptr@@Base>
   136a0:	ldr	r0, [r0]
   136a4:	ldr	r0, [r0]
   136a8:	pop	{fp, pc}

000136ac <table_get_int8@@Base>:
   136ac:	push	{fp, lr}
   136b0:	mov	fp, sp
   136b4:	bl	14a38 <table_get_cell_ptr@@Base>
   136b8:	ldr	r0, [r0]
   136bc:	ldrsb	r0, [r0]
   136c0:	pop	{fp, pc}

000136c4 <table_get_uint8@@Base>:
   136c4:	push	{fp, lr}
   136c8:	mov	fp, sp
   136cc:	bl	14a38 <table_get_cell_ptr@@Base>
   136d0:	ldr	r0, [r0]
   136d4:	ldrb	r0, [r0]
   136d8:	pop	{fp, pc}

000136dc <table_get_int16@@Base>:
   136dc:	push	{fp, lr}
   136e0:	mov	fp, sp
   136e4:	bl	14a38 <table_get_cell_ptr@@Base>
   136e8:	ldr	r0, [r0]
   136ec:	ldrsh	r0, [r0]
   136f0:	pop	{fp, pc}

000136f4 <table_get_uint16@@Base>:
   136f4:	push	{fp, lr}
   136f8:	mov	fp, sp
   136fc:	bl	14a38 <table_get_cell_ptr@@Base>
   13700:	ldr	r0, [r0]
   13704:	ldrh	r0, [r0]
   13708:	pop	{fp, pc}

0001370c <table_get_int32@@Base>:
   1370c:	push	{fp, lr}
   13710:	mov	fp, sp
   13714:	bl	14a38 <table_get_cell_ptr@@Base>
   13718:	ldr	r0, [r0]
   1371c:	ldr	r0, [r0]
   13720:	pop	{fp, pc}

00013724 <table_get_uint32@@Base>:
   13724:	push	{fp, lr}
   13728:	mov	fp, sp
   1372c:	bl	14a38 <table_get_cell_ptr@@Base>
   13730:	ldr	r0, [r0]
   13734:	ldr	r0, [r0]
   13738:	pop	{fp, pc}

0001373c <table_get_int64@@Base>:
   1373c:	push	{fp, lr}
   13740:	mov	fp, sp
   13744:	bl	14a38 <table_get_cell_ptr@@Base>
   13748:	ldr	r0, [r0]
   1374c:	ldrd	r0, [r0]
   13750:	pop	{fp, pc}

00013754 <table_get_uint64@@Base>:
   13754:	push	{fp, lr}
   13758:	mov	fp, sp
   1375c:	bl	14a38 <table_get_cell_ptr@@Base>
   13760:	ldr	r0, [r0]
   13764:	ldrd	r0, [r0]
   13768:	pop	{fp, pc}

0001376c <table_get_short@@Base>:
   1376c:	push	{fp, lr}
   13770:	mov	fp, sp
   13774:	bl	14a38 <table_get_cell_ptr@@Base>
   13778:	ldr	r0, [r0]
   1377c:	ldrsh	r0, [r0]
   13780:	pop	{fp, pc}

00013784 <table_get_ushort@@Base>:
   13784:	push	{fp, lr}
   13788:	mov	fp, sp
   1378c:	bl	14a38 <table_get_cell_ptr@@Base>
   13790:	ldr	r0, [r0]
   13794:	ldrh	r0, [r0]
   13798:	pop	{fp, pc}

0001379c <table_get_long@@Base>:
   1379c:	push	{fp, lr}
   137a0:	mov	fp, sp
   137a4:	bl	14a38 <table_get_cell_ptr@@Base>
   137a8:	ldr	r0, [r0]
   137ac:	ldr	r0, [r0]
   137b0:	pop	{fp, pc}

000137b4 <table_get_ulong@@Base>:
   137b4:	push	{fp, lr}
   137b8:	mov	fp, sp
   137bc:	bl	14a38 <table_get_cell_ptr@@Base>
   137c0:	ldr	r0, [r0]
   137c4:	ldr	r0, [r0]
   137c8:	pop	{fp, pc}

000137cc <table_get_llong@@Base>:
   137cc:	push	{fp, lr}
   137d0:	mov	fp, sp
   137d4:	bl	14a38 <table_get_cell_ptr@@Base>
   137d8:	ldr	r0, [r0]
   137dc:	ldrd	r0, [r0]
   137e0:	pop	{fp, pc}

000137e4 <table_get_ullong@@Base>:
   137e4:	push	{fp, lr}
   137e8:	mov	fp, sp
   137ec:	bl	14a38 <table_get_cell_ptr@@Base>
   137f0:	ldr	r0, [r0]
   137f4:	ldrd	r0, [r0]
   137f8:	pop	{fp, pc}

000137fc <table_get_float@@Base>:
   137fc:	push	{fp, lr}
   13800:	mov	fp, sp
   13804:	bl	14a38 <table_get_cell_ptr@@Base>
   13808:	ldr	r0, [r0]
   1380c:	vldr	s0, [r0]
   13810:	pop	{fp, pc}

00013814 <table_get_double@@Base>:
   13814:	push	{fp, lr}
   13818:	mov	fp, sp
   1381c:	bl	14a38 <table_get_cell_ptr@@Base>
   13820:	ldr	r0, [r0]
   13824:	vldr	d0, [r0]
   13828:	pop	{fp, pc}

0001382c <table_get_ldouble@@Base>:
   1382c:	push	{fp, lr}
   13830:	mov	fp, sp
   13834:	bl	14a38 <table_get_cell_ptr@@Base>
   13838:	ldr	r0, [r0]
   1383c:	vldr	d0, [r0]
   13840:	pop	{fp, pc}

00013844 <table_get_char@@Base>:
   13844:	push	{fp, lr}
   13848:	mov	fp, sp
   1384c:	bl	14a38 <table_get_cell_ptr@@Base>
   13850:	ldr	r0, [r0]
   13854:	ldrb	r0, [r0]
   13858:	pop	{fp, pc}

0001385c <table_get_uchar@@Base>:
   1385c:	push	{fp, lr}
   13860:	mov	fp, sp
   13864:	bl	14a38 <table_get_cell_ptr@@Base>
   13868:	ldr	r0, [r0]
   1386c:	ldrb	r0, [r0]
   13870:	pop	{fp, pc}

00013874 <table_get_string@@Base>:
   13874:	push	{fp, lr}
   13878:	mov	fp, sp
   1387c:	bl	14a38 <table_get_cell_ptr@@Base>
   13880:	ldr	r0, [r0]
   13884:	pop	{fp, pc}

00013888 <table_get_ptr@@Base>:
   13888:	push	{fp, lr}
   1388c:	mov	fp, sp
   13890:	bl	14a38 <table_get_cell_ptr@@Base>
   13894:	ldr	r0, [r0]
   13898:	pop	{fp, pc}

0001389c <table_row_init@@Base>:
   1389c:	push	{r4, r5, fp, lr}
   138a0:	add	fp, sp, #8
   138a4:	mov	r4, r1
   138a8:	ldr	r1, [r0, #12]
   138ac:	ldr	r5, [r0, #16]
   138b0:	lsl	r0, r1, #2
   138b4:	bl	11f48 <malloc@plt>
   138b8:	str	r0, [r5, r4, lsl #2]
   138bc:	pop	{r4, r5, fp, pc}

000138c0 <table_get_row_ptr@@Base>:
   138c0:	ldr	r0, [r0, #16]
   138c4:	add	r0, r0, r1, lsl #2
   138c8:	bx	lr

000138cc <table_row_destroy@@Base>:
   138cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   138d0:	add	fp, sp, #24
   138d4:	mov	r4, r1
   138d8:	mov	r5, r0
   138dc:	bl	12b88 <table_get_column_length@@Base>
   138e0:	ldr	r8, [r5, #16]
   138e4:	cmp	r0, #1
   138e8:	blt	13910 <table_row_destroy@@Base+0x44>
   138ec:	mov	r6, r0
   138f0:	mov	r7, #0
   138f4:	mov	r0, r5
   138f8:	mov	r1, r4
   138fc:	mov	r2, r7
   13900:	bl	14a54 <table_cell_destroy@@Base>
   13904:	add	r7, r7, #1
   13908:	cmp	r6, r7
   1390c:	bne	138f4 <table_row_destroy@@Base+0x28>
   13910:	ldr	r0, [r8, r4, lsl #2]
   13914:	cmp	r0, #0
   13918:	beq	13924 <table_row_destroy@@Base+0x58>
   1391c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13920:	b	11f18 <free@plt>
   13924:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013928 <table_get_row_length@@Base>:
   13928:	ldr	r0, [r0, #20]
   1392c:	bx	lr

00013930 <table_add_row@@Base>:
   13930:	push	{r4, r5, r6, r7, fp, lr}
   13934:	add	fp, sp, #16
   13938:	ldr	r5, [r0, #20]
   1393c:	ldr	r1, [r0, #24]
   13940:	mov	r4, r0
   13944:	udiv	r0, r5, r1
   13948:	mls	r0, r0, r1, r5
   1394c:	cmp	r0, #0
   13950:	bne	13974 <table_add_row@@Base+0x44>
   13954:	ldr	r2, [r4, #28]
   13958:	ldr	r0, [r4, #16]
   1395c:	add	r1, r2, r1
   13960:	str	r1, [r4, #28]
   13964:	lsl	r1, r1, #2
   13968:	bl	11f30 <realloc@plt>
   1396c:	str	r0, [r4, #16]
   13970:	ldr	r5, [r4, #20]
   13974:	mov	r0, r4
   13978:	bl	12b88 <table_get_column_length@@Base>
   1397c:	mov	r6, r0
   13980:	ldr	r0, [r4, #12]
   13984:	ldr	r7, [r4, #16]
   13988:	lsl	r0, r0, #2
   1398c:	bl	11f48 <malloc@plt>
   13990:	cmp	r6, #1
   13994:	str	r0, [r7, r5, lsl #2]
   13998:	blt	139bc <table_add_row@@Base+0x8c>
   1399c:	mov	r7, #0
   139a0:	mov	r0, r4
   139a4:	mov	r1, r5
   139a8:	mov	r2, r7
   139ac:	bl	14a18 <table_cell_init@@Base>
   139b0:	add	r7, r7, #1
   139b4:	cmp	r6, r7
   139b8:	bne	139a0 <table_add_row@@Base+0x70>
   139bc:	ldr	r1, [r4, #20]
   139c0:	mov	r0, r4
   139c4:	mvn	r2, #0
   139c8:	mov	r3, #2
   139cc:	bl	12a8c <table_notify@@Base>
   139d0:	ldr	r0, [r4, #20]
   139d4:	add	r1, r0, #1
   139d8:	str	r1, [r4, #20]
   139dc:	pop	{r4, r5, r6, r7, fp, pc}

000139e0 <table_remove_row@@Base>:
   139e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139e4:	add	fp, sp, #24
   139e8:	ldr	r8, [r0, #20]
   139ec:	mov	r4, r1
   139f0:	mov	r5, r0
   139f4:	bl	12b88 <table_get_column_length@@Base>
   139f8:	cmp	r0, #1
   139fc:	blt	13a50 <table_remove_row@@Base+0x70>
   13a00:	mov	r6, r0
   13a04:	mov	r7, #0
   13a08:	b	13a18 <table_remove_row@@Base+0x38>
   13a0c:	add	r7, r7, #1
   13a10:	cmp	r6, r7
   13a14:	beq	13a50 <table_remove_row@@Base+0x70>
   13a18:	mov	r0, r5
   13a1c:	mov	r1, r7
   13a20:	bl	12c00 <table_get_column_data_type@@Base>
   13a24:	cmp	r0, #23
   13a28:	beq	13a0c <table_remove_row@@Base+0x2c>
   13a2c:	mov	r0, r5
   13a30:	mov	r1, r4
   13a34:	mov	r2, r7
   13a38:	bl	14a38 <table_get_cell_ptr@@Base>
   13a3c:	ldr	r0, [r0]
   13a40:	cmp	r0, #0
   13a44:	beq	13a0c <table_remove_row@@Base+0x2c>
   13a48:	bl	11f18 <free@plt>
   13a4c:	b	13a0c <table_remove_row@@Base+0x2c>
   13a50:	ldr	r0, [r5, #16]
   13a54:	ldr	r0, [r0, r4, lsl #2]
   13a58:	cmp	r0, #0
   13a5c:	beq	13a64 <table_remove_row@@Base+0x84>
   13a60:	bl	11f18 <free@plt>
   13a64:	sub	r0, r8, #1
   13a68:	cmp	r0, r4
   13a6c:	ble	13adc <table_remove_row@@Base+0xfc>
   13a70:	mvn	r0, r4
   13a74:	add	r1, r8, r0
   13a78:	sub	r0, r8, #2
   13a7c:	tst	r1, #1
   13a80:	mov	r1, r4
   13a84:	beq	13a9c <table_remove_row@@Base+0xbc>
   13a88:	ldr	r1, [r5, #16]
   13a8c:	add	r2, r1, r4, lsl #2
   13a90:	ldr	r2, [r2, #4]
   13a94:	str	r2, [r1, r4, lsl #2]
   13a98:	add	r1, r4, #1
   13a9c:	cmp	r0, r4
   13aa0:	beq	13adc <table_remove_row@@Base+0xfc>
   13aa4:	mvn	r0, r1
   13aa8:	lsl	r1, r1, #2
   13aac:	add	r0, r0, r8
   13ab0:	ldr	r2, [r5, #16]
   13ab4:	subs	r0, r0, #2
   13ab8:	add	r3, r2, r1
   13abc:	ldr	r3, [r3, #4]
   13ac0:	str	r3, [r2, r1]
   13ac4:	ldr	r2, [r5, #16]
   13ac8:	add	r2, r2, r1
   13acc:	add	r1, r1, #8
   13ad0:	ldr	r3, [r2, #8]
   13ad4:	str	r3, [r2, #4]
   13ad8:	bne	13ab0 <table_remove_row@@Base+0xd0>
   13adc:	ldr	r0, [r5, #20]
   13ae0:	ldr	r1, [r5, #24]
   13ae4:	sub	r0, r0, #1
   13ae8:	udiv	r2, r0, r1
   13aec:	str	r0, [r5, #20]
   13af0:	mls	r0, r2, r1, r0
   13af4:	cmp	r0, #0
   13af8:	bne	13b18 <table_remove_row@@Base+0x138>
   13afc:	ldr	r2, [r5, #28]
   13b00:	ldr	r0, [r5, #16]
   13b04:	sub	r1, r2, r1
   13b08:	str	r1, [r5, #28]
   13b0c:	lsl	r1, r1, #2
   13b10:	bl	11f30 <realloc@plt>
   13b14:	str	r0, [r5, #16]
   13b18:	mov	r0, r5
   13b1c:	mov	r1, r4
   13b20:	mvn	r2, #0
   13b24:	mov	r3, #4
   13b28:	bl	12a8c <table_notify@@Base>
   13b2c:	mov	r0, #0
   13b30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013b34 <table_set_row_ptr@@Base>:
   13b34:	ldr	r2, [r2]
   13b38:	ldr	r0, [r0, #16]
   13b3c:	str	r2, [r0, r1, lsl #2]
   13b40:	bx	lr

00013b44 <table_set@@Base>:
   13b44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b48:	add	fp, sp, #24
   13b4c:	mov	r8, r3
   13b50:	mov	r4, r2
   13b54:	mov	r9, r1
   13b58:	mov	r6, r0
   13b5c:	bl	14a38 <table_get_cell_ptr@@Base>
   13b60:	mov	r5, r0
   13b64:	mov	r0, r6
   13b68:	mov	r1, r4
   13b6c:	bl	12b60 <table_get_col_ptr@@Base>
   13b70:	ldr	r1, [fp, #8]
   13b74:	mvn	r7, #0
   13b78:	cmp	r1, #23
   13b7c:	bhi	13e44 <table_set@@Base+0x300>
   13b80:	add	r2, pc, #4
   13b84:	ldr	r1, [r2, r1, lsl #2]
   13b88:	add	pc, r2, r1
   13b8c:	andeq	r0, r0, r0, rrx
   13b90:	andeq	r0, r0, r0, ror r0
   13b94:	andeq	r0, r0, r0, lsl #1
   13b98:	muleq	r0, r0, r0
   13b9c:	andeq	r0, r0, r0, lsr #1
   13ba0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   13ba4:	andeq	r0, r0, r0, asr #1
   13ba8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13bac:	andeq	r0, r0, r0, ror #1
   13bb0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13bb4:	andeq	r0, r0, r0, lsl #2
   13bb8:	andeq	r0, r0, r0, lsl r1
   13bbc:	andeq	r0, r0, r8, asr #2
   13bc0:	andeq	r0, r0, r8, asr r1
   13bc4:	andeq	r0, r0, r8, ror #2
   13bc8:	andeq	r0, r0, r8, ror r1
   13bcc:	andeq	r0, r0, r8, lsl #3
   13bd0:	andeq	r0, r0, r0, asr #3
   13bd4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13bd8:	andeq	r0, r0, r0, lsl r2
   13bdc:	andeq	r0, r0, r0, lsr #4
   13be0:	andeq	r0, r0, r0, lsr r2
   13be4:	andeq	r0, r0, ip, ror #4
   13be8:	andeq	r0, r0, r0, asr #5
   13bec:	ldr	r0, [r0, #4]
   13bf0:	cmp	r0, #0
   13bf4:	bne	13e44 <table_set@@Base+0x300>
   13bf8:	b	13d20 <table_set@@Base+0x1dc>
   13bfc:	ldr	r0, [r0, #4]
   13c00:	cmp	r0, #1
   13c04:	beq	13d20 <table_set@@Base+0x1dc>
   13c08:	b	13e44 <table_set@@Base+0x300>
   13c0c:	ldr	r0, [r0, #4]
   13c10:	cmp	r0, #2
   13c14:	beq	13e04 <table_set@@Base+0x2c0>
   13c18:	b	13e44 <table_set@@Base+0x300>
   13c1c:	ldr	r0, [r0, #4]
   13c20:	cmp	r0, #3
   13c24:	beq	13e04 <table_set@@Base+0x2c0>
   13c28:	b	13e44 <table_set@@Base+0x300>
   13c2c:	ldr	r0, [r0, #4]
   13c30:	cmp	r0, #4
   13c34:	beq	13ca8 <table_set@@Base+0x164>
   13c38:	b	13e44 <table_set@@Base+0x300>
   13c3c:	ldr	r0, [r0, #4]
   13c40:	cmp	r0, #5
   13c44:	beq	13ca8 <table_set@@Base+0x164>
   13c48:	b	13e44 <table_set@@Base+0x300>
   13c4c:	ldr	r0, [r0, #4]
   13c50:	cmp	r0, #6
   13c54:	beq	13d20 <table_set@@Base+0x1dc>
   13c58:	b	13e44 <table_set@@Base+0x300>
   13c5c:	ldr	r0, [r0, #4]
   13c60:	cmp	r0, #7
   13c64:	beq	13d20 <table_set@@Base+0x1dc>
   13c68:	b	13e44 <table_set@@Base+0x300>
   13c6c:	ldr	r0, [r0, #4]
   13c70:	cmp	r0, #8
   13c74:	beq	13d68 <table_set@@Base+0x224>
   13c78:	b	13e44 <table_set@@Base+0x300>
   13c7c:	ldr	r0, [r0, #4]
   13c80:	cmp	r0, #9
   13c84:	beq	13d68 <table_set@@Base+0x224>
   13c88:	b	13e44 <table_set@@Base+0x300>
   13c8c:	ldr	r0, [r0, #4]
   13c90:	cmp	r0, #10
   13c94:	beq	13ca8 <table_set@@Base+0x164>
   13c98:	b	13e44 <table_set@@Base+0x300>
   13c9c:	ldr	r0, [r0, #4]
   13ca0:	cmp	r0, #11
   13ca4:	bne	13e44 <table_set@@Base+0x300>
   13ca8:	ldr	r0, [r5]
   13cac:	cmp	r0, #0
   13cb0:	bne	13cc8 <table_set@@Base+0x184>
   13cb4:	mov	r0, #2
   13cb8:	bl	11f48 <malloc@plt>
   13cbc:	cmp	r0, #0
   13cc0:	str	r0, [r5]
   13cc4:	beq	13e44 <table_set@@Base+0x300>
   13cc8:	ldrh	r1, [r8]
   13ccc:	strh	r1, [r0]
   13cd0:	b	13e2c <table_set@@Base+0x2e8>
   13cd4:	ldr	r0, [r0, #4]
   13cd8:	cmp	r0, #12
   13cdc:	beq	13d20 <table_set@@Base+0x1dc>
   13ce0:	b	13e44 <table_set@@Base+0x300>
   13ce4:	ldr	r0, [r0, #4]
   13ce8:	cmp	r0, #13
   13cec:	beq	13d20 <table_set@@Base+0x1dc>
   13cf0:	b	13e44 <table_set@@Base+0x300>
   13cf4:	ldr	r0, [r0, #4]
   13cf8:	cmp	r0, #14
   13cfc:	beq	13d68 <table_set@@Base+0x224>
   13d00:	b	13e44 <table_set@@Base+0x300>
   13d04:	ldr	r0, [r0, #4]
   13d08:	cmp	r0, #15
   13d0c:	beq	13d68 <table_set@@Base+0x224>
   13d10:	b	13e44 <table_set@@Base+0x300>
   13d14:	ldr	r0, [r0, #4]
   13d18:	cmp	r0, #16
   13d1c:	bne	13e44 <table_set@@Base+0x300>
   13d20:	ldr	r0, [r5]
   13d24:	cmp	r0, #0
   13d28:	bne	13d40 <table_set@@Base+0x1fc>
   13d2c:	mov	r0, #4
   13d30:	bl	11f48 <malloc@plt>
   13d34:	cmp	r0, #0
   13d38:	str	r0, [r5]
   13d3c:	beq	13e44 <table_set@@Base+0x300>
   13d40:	ldr	r1, [r8]
   13d44:	str	r1, [r0]
   13d48:	b	13e2c <table_set@@Base+0x2e8>
   13d4c:	ldr	r0, [r0, #4]
   13d50:	cmp	r0, #17
   13d54:	beq	13d68 <table_set@@Base+0x224>
   13d58:	b	13e44 <table_set@@Base+0x300>
   13d5c:	ldr	r0, [r0, #4]
   13d60:	cmp	r0, #18
   13d64:	bne	13e44 <table_set@@Base+0x300>
   13d68:	ldr	r0, [r5]
   13d6c:	cmp	r0, #0
   13d70:	bne	13d88 <table_set@@Base+0x244>
   13d74:	mov	r0, #8
   13d78:	bl	11f48 <malloc@plt>
   13d7c:	cmp	r0, #0
   13d80:	str	r0, [r5]
   13d84:	beq	13e44 <table_set@@Base+0x300>
   13d88:	ldr	r1, [r8]
   13d8c:	ldr	r2, [r8, #4]
   13d90:	str	r2, [r0, #4]
   13d94:	str	r1, [r0]
   13d98:	b	13e2c <table_set@@Base+0x2e8>
   13d9c:	ldr	r0, [r0, #4]
   13da0:	cmp	r0, #19
   13da4:	beq	13e04 <table_set@@Base+0x2c0>
   13da8:	b	13e44 <table_set@@Base+0x300>
   13dac:	ldr	r0, [r0, #4]
   13db0:	cmp	r0, #20
   13db4:	beq	13e04 <table_set@@Base+0x2c0>
   13db8:	b	13e44 <table_set@@Base+0x300>
   13dbc:	ldr	r0, [r0, #4]
   13dc0:	cmp	r0, #21
   13dc4:	bne	13e44 <table_set@@Base+0x300>
   13dc8:	mov	r0, r8
   13dcc:	bl	11f6c <strlen@plt>
   13dd0:	ldr	r2, [r5]
   13dd4:	add	r1, r0, #1
   13dd8:	mov	r0, r2
   13ddc:	bl	11f30 <realloc@plt>
   13de0:	cmp	r0, #0
   13de4:	str	r0, [r5]
   13de8:	beq	13e44 <table_set@@Base+0x300>
   13dec:	mov	r1, r8
   13df0:	bl	11f3c <strcpy@plt>
   13df4:	b	13e2c <table_set@@Base+0x2e8>
   13df8:	ldr	r0, [r0, #4]
   13dfc:	cmp	r0, #22
   13e00:	bne	13e44 <table_set@@Base+0x300>
   13e04:	ldr	r0, [r5]
   13e08:	cmp	r0, #0
   13e0c:	bne	13e24 <table_set@@Base+0x2e0>
   13e10:	mov	r0, #1
   13e14:	bl	11f48 <malloc@plt>
   13e18:	cmp	r0, #0
   13e1c:	str	r0, [r5]
   13e20:	beq	13e44 <table_set@@Base+0x300>
   13e24:	ldrb	r1, [r8]
   13e28:	strb	r1, [r0]
   13e2c:	mov	r0, r6
   13e30:	mov	r1, r9
   13e34:	mov	r2, r4
   13e38:	mov	r3, #1
   13e3c:	bl	12a8c <table_notify@@Base>
   13e40:	mov	r7, #0
   13e44:	mov	r0, r7
   13e48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13e4c:	ldr	r0, [r0, #4]
   13e50:	cmp	r0, #23
   13e54:	bne	13e44 <table_set@@Base+0x300>
   13e58:	str	r8, [r5]
   13e5c:	b	13e2c <table_set@@Base+0x2e8>

00013e60 <table_set_bool@@Base>:
   13e60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e64:	add	fp, sp, #24
   13e68:	mov	r8, r3
   13e6c:	mov	r4, r2
   13e70:	mov	r9, r1
   13e74:	mov	r6, r0
   13e78:	bl	14a38 <table_get_cell_ptr@@Base>
   13e7c:	mov	r5, r0
   13e80:	mov	r0, r6
   13e84:	mov	r1, r4
   13e88:	bl	12b60 <table_get_col_ptr@@Base>
   13e8c:	ldr	r0, [r0, #4]
   13e90:	mvn	r7, #0
   13e94:	cmp	r0, #22
   13e98:	bne	13ed8 <table_set_bool@@Base+0x78>
   13e9c:	ldr	r0, [r5]
   13ea0:	cmp	r0, #0
   13ea4:	bne	13ebc <table_set_bool@@Base+0x5c>
   13ea8:	mov	r0, #1
   13eac:	bl	11f48 <malloc@plt>
   13eb0:	cmp	r0, #0
   13eb4:	str	r0, [r5]
   13eb8:	beq	13ed8 <table_set_bool@@Base+0x78>
   13ebc:	strb	r8, [r0]
   13ec0:	mov	r0, r6
   13ec4:	mov	r1, r9
   13ec8:	mov	r2, r4
   13ecc:	mov	r3, #1
   13ed0:	bl	12a8c <table_notify@@Base>
   13ed4:	mov	r7, #0
   13ed8:	mov	r0, r7
   13edc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ee0 <table_set_int@@Base>:
   13ee0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ee4:	add	fp, sp, #24
   13ee8:	mov	r8, r3
   13eec:	mov	r4, r2
   13ef0:	mov	r5, r1
   13ef4:	mov	r6, r0
   13ef8:	bl	14a38 <table_get_cell_ptr@@Base>
   13efc:	mov	r9, r0
   13f00:	mov	r0, r6
   13f04:	mov	r1, r4
   13f08:	bl	12b60 <table_get_col_ptr@@Base>
   13f0c:	ldr	r0, [r0, #4]
   13f10:	mvn	r7, #0
   13f14:	cmp	r0, #0
   13f18:	bne	13f58 <table_set_int@@Base+0x78>
   13f1c:	ldr	r0, [r9]
   13f20:	cmp	r0, #0
   13f24:	bne	13f3c <table_set_int@@Base+0x5c>
   13f28:	mov	r0, #4
   13f2c:	bl	11f48 <malloc@plt>
   13f30:	cmp	r0, #0
   13f34:	str	r0, [r9]
   13f38:	beq	13f58 <table_set_int@@Base+0x78>
   13f3c:	str	r8, [r0]
   13f40:	mov	r0, r6
   13f44:	mov	r1, r5
   13f48:	mov	r2, r4
   13f4c:	mov	r3, #1
   13f50:	bl	12a8c <table_notify@@Base>
   13f54:	mov	r7, #0
   13f58:	mov	r0, r7
   13f5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f60 <table_set_uint@@Base>:
   13f60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f64:	add	fp, sp, #24
   13f68:	mov	r8, r3
   13f6c:	mov	r4, r2
   13f70:	mov	r5, r1
   13f74:	mov	r6, r0
   13f78:	bl	14a38 <table_get_cell_ptr@@Base>
   13f7c:	mov	r9, r0
   13f80:	mov	r0, r6
   13f84:	mov	r1, r4
   13f88:	bl	12b60 <table_get_col_ptr@@Base>
   13f8c:	ldr	r0, [r0, #4]
   13f90:	mvn	r7, #0
   13f94:	cmp	r0, #1
   13f98:	bne	13fd8 <table_set_uint@@Base+0x78>
   13f9c:	ldr	r0, [r9]
   13fa0:	cmp	r0, #0
   13fa4:	bne	13fbc <table_set_uint@@Base+0x5c>
   13fa8:	mov	r0, #4
   13fac:	bl	11f48 <malloc@plt>
   13fb0:	cmp	r0, #0
   13fb4:	str	r0, [r9]
   13fb8:	beq	13fd8 <table_set_uint@@Base+0x78>
   13fbc:	str	r8, [r0]
   13fc0:	mov	r0, r6
   13fc4:	mov	r1, r5
   13fc8:	mov	r2, r4
   13fcc:	mov	r3, #1
   13fd0:	bl	12a8c <table_notify@@Base>
   13fd4:	mov	r7, #0
   13fd8:	mov	r0, r7
   13fdc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013fe0 <table_set_int8@@Base>:
   13fe0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13fe4:	add	fp, sp, #24
   13fe8:	mov	r8, r3
   13fec:	mov	r4, r2
   13ff0:	mov	r9, r1
   13ff4:	mov	r6, r0
   13ff8:	bl	14a38 <table_get_cell_ptr@@Base>
   13ffc:	mov	r5, r0
   14000:	mov	r0, r6
   14004:	mov	r1, r4
   14008:	bl	12b60 <table_get_col_ptr@@Base>
   1400c:	ldr	r0, [r0, #4]
   14010:	mvn	r7, #0
   14014:	cmp	r0, #2
   14018:	bne	14058 <table_set_int8@@Base+0x78>
   1401c:	ldr	r0, [r5]
   14020:	cmp	r0, #0
   14024:	bne	1403c <table_set_int8@@Base+0x5c>
   14028:	mov	r0, #1
   1402c:	bl	11f48 <malloc@plt>
   14030:	cmp	r0, #0
   14034:	str	r0, [r5]
   14038:	beq	14058 <table_set_int8@@Base+0x78>
   1403c:	strb	r8, [r0]
   14040:	mov	r0, r6
   14044:	mov	r1, r9
   14048:	mov	r2, r4
   1404c:	mov	r3, #1
   14050:	bl	12a8c <table_notify@@Base>
   14054:	mov	r7, #0
   14058:	mov	r0, r7
   1405c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014060 <table_set_uint8@@Base>:
   14060:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14064:	add	fp, sp, #24
   14068:	mov	r8, r3
   1406c:	mov	r4, r2
   14070:	mov	r9, r1
   14074:	mov	r6, r0
   14078:	bl	14a38 <table_get_cell_ptr@@Base>
   1407c:	mov	r5, r0
   14080:	mov	r0, r6
   14084:	mov	r1, r4
   14088:	bl	12b60 <table_get_col_ptr@@Base>
   1408c:	ldr	r0, [r0, #4]
   14090:	mvn	r7, #0
   14094:	cmp	r0, #3
   14098:	bne	140d8 <table_set_uint8@@Base+0x78>
   1409c:	ldr	r0, [r5]
   140a0:	cmp	r0, #0
   140a4:	bne	140bc <table_set_uint8@@Base+0x5c>
   140a8:	mov	r0, #1
   140ac:	bl	11f48 <malloc@plt>
   140b0:	cmp	r0, #0
   140b4:	str	r0, [r5]
   140b8:	beq	140d8 <table_set_uint8@@Base+0x78>
   140bc:	strb	r8, [r0]
   140c0:	mov	r0, r6
   140c4:	mov	r1, r9
   140c8:	mov	r2, r4
   140cc:	mov	r3, #1
   140d0:	bl	12a8c <table_notify@@Base>
   140d4:	mov	r7, #0
   140d8:	mov	r0, r7
   140dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140e0 <table_set_int16@@Base>:
   140e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140e4:	add	fp, sp, #24
   140e8:	mov	r8, r3
   140ec:	mov	r4, r2
   140f0:	mov	r9, r1
   140f4:	mov	r6, r0
   140f8:	bl	14a38 <table_get_cell_ptr@@Base>
   140fc:	mov	r5, r0
   14100:	mov	r0, r6
   14104:	mov	r1, r4
   14108:	bl	12b60 <table_get_col_ptr@@Base>
   1410c:	ldr	r0, [r0, #4]
   14110:	mvn	r7, #0
   14114:	cmp	r0, #4
   14118:	bne	14158 <table_set_int16@@Base+0x78>
   1411c:	ldr	r0, [r5]
   14120:	cmp	r0, #0
   14124:	bne	1413c <table_set_int16@@Base+0x5c>
   14128:	mov	r0, #2
   1412c:	bl	11f48 <malloc@plt>
   14130:	cmp	r0, #0
   14134:	str	r0, [r5]
   14138:	beq	14158 <table_set_int16@@Base+0x78>
   1413c:	strh	r8, [r0]
   14140:	mov	r0, r6
   14144:	mov	r1, r9
   14148:	mov	r2, r4
   1414c:	mov	r3, #1
   14150:	bl	12a8c <table_notify@@Base>
   14154:	mov	r7, #0
   14158:	mov	r0, r7
   1415c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014160 <table_set_uint16@@Base>:
   14160:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14164:	add	fp, sp, #24
   14168:	mov	r8, r3
   1416c:	mov	r4, r2
   14170:	mov	r9, r1
   14174:	mov	r6, r0
   14178:	bl	14a38 <table_get_cell_ptr@@Base>
   1417c:	mov	r5, r0
   14180:	mov	r0, r6
   14184:	mov	r1, r4
   14188:	bl	12b60 <table_get_col_ptr@@Base>
   1418c:	ldr	r0, [r0, #4]
   14190:	mvn	r7, #0
   14194:	cmp	r0, #5
   14198:	bne	141d8 <table_set_uint16@@Base+0x78>
   1419c:	ldr	r0, [r5]
   141a0:	cmp	r0, #0
   141a4:	bne	141bc <table_set_uint16@@Base+0x5c>
   141a8:	mov	r0, #2
   141ac:	bl	11f48 <malloc@plt>
   141b0:	cmp	r0, #0
   141b4:	str	r0, [r5]
   141b8:	beq	141d8 <table_set_uint16@@Base+0x78>
   141bc:	strh	r8, [r0]
   141c0:	mov	r0, r6
   141c4:	mov	r1, r9
   141c8:	mov	r2, r4
   141cc:	mov	r3, #1
   141d0:	bl	12a8c <table_notify@@Base>
   141d4:	mov	r7, #0
   141d8:	mov	r0, r7
   141dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141e0 <table_set_int32@@Base>:
   141e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141e4:	add	fp, sp, #24
   141e8:	mov	r8, r3
   141ec:	mov	r4, r2
   141f0:	mov	r5, r1
   141f4:	mov	r6, r0
   141f8:	bl	14a38 <table_get_cell_ptr@@Base>
   141fc:	mov	r9, r0
   14200:	mov	r0, r6
   14204:	mov	r1, r4
   14208:	bl	12b60 <table_get_col_ptr@@Base>
   1420c:	ldr	r0, [r0, #4]
   14210:	mvn	r7, #0
   14214:	cmp	r0, #6
   14218:	bne	14258 <table_set_int32@@Base+0x78>
   1421c:	ldr	r0, [r9]
   14220:	cmp	r0, #0
   14224:	bne	1423c <table_set_int32@@Base+0x5c>
   14228:	mov	r0, #4
   1422c:	bl	11f48 <malloc@plt>
   14230:	cmp	r0, #0
   14234:	str	r0, [r9]
   14238:	beq	14258 <table_set_int32@@Base+0x78>
   1423c:	str	r8, [r0]
   14240:	mov	r0, r6
   14244:	mov	r1, r5
   14248:	mov	r2, r4
   1424c:	mov	r3, #1
   14250:	bl	12a8c <table_notify@@Base>
   14254:	mov	r7, #0
   14258:	mov	r0, r7
   1425c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014260 <table_set_uint32@@Base>:
   14260:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14264:	add	fp, sp, #24
   14268:	mov	r8, r3
   1426c:	mov	r4, r2
   14270:	mov	r5, r1
   14274:	mov	r6, r0
   14278:	bl	14a38 <table_get_cell_ptr@@Base>
   1427c:	mov	r9, r0
   14280:	mov	r0, r6
   14284:	mov	r1, r4
   14288:	bl	12b60 <table_get_col_ptr@@Base>
   1428c:	ldr	r0, [r0, #4]
   14290:	mvn	r7, #0
   14294:	cmp	r0, #7
   14298:	bne	142d8 <table_set_uint32@@Base+0x78>
   1429c:	ldr	r0, [r9]
   142a0:	cmp	r0, #0
   142a4:	bne	142bc <table_set_uint32@@Base+0x5c>
   142a8:	mov	r0, #4
   142ac:	bl	11f48 <malloc@plt>
   142b0:	cmp	r0, #0
   142b4:	str	r0, [r9]
   142b8:	beq	142d8 <table_set_uint32@@Base+0x78>
   142bc:	str	r8, [r0]
   142c0:	mov	r0, r6
   142c4:	mov	r1, r5
   142c8:	mov	r2, r4
   142cc:	mov	r3, #1
   142d0:	bl	12a8c <table_notify@@Base>
   142d4:	mov	r7, #0
   142d8:	mov	r0, r7
   142dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142e0 <table_set_int64@@Base>:
   142e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   142e4:	add	fp, sp, #24
   142e8:	mov	r4, r2
   142ec:	mov	r8, r1
   142f0:	mov	r6, r0
   142f4:	bl	14a38 <table_get_cell_ptr@@Base>
   142f8:	mov	r5, r0
   142fc:	mov	r0, r6
   14300:	mov	r1, r4
   14304:	bl	12b60 <table_get_col_ptr@@Base>
   14308:	ldr	r0, [r0, #4]
   1430c:	mvn	r7, #0
   14310:	cmp	r0, #8
   14314:	bne	14360 <table_set_int64@@Base+0x80>
   14318:	ldr	r0, [r5]
   1431c:	cmp	r0, #0
   14320:	bne	14338 <table_set_int64@@Base+0x58>
   14324:	mov	r0, #8
   14328:	bl	11f48 <malloc@plt>
   1432c:	cmp	r0, #0
   14330:	str	r0, [r5]
   14334:	beq	14360 <table_set_int64@@Base+0x80>
   14338:	ldr	r1, [fp, #12]
   1433c:	ldr	r2, [fp, #8]
   14340:	mov	r3, #1
   14344:	str	r2, [r0]
   14348:	str	r1, [r0, #4]
   1434c:	mov	r0, r6
   14350:	mov	r1, r8
   14354:	mov	r2, r4
   14358:	bl	12a8c <table_notify@@Base>
   1435c:	mov	r7, #0
   14360:	mov	r0, r7
   14364:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014368 <table_set_uint64@@Base>:
   14368:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1436c:	add	fp, sp, #24
   14370:	mov	r4, r2
   14374:	mov	r8, r1
   14378:	mov	r6, r0
   1437c:	bl	14a38 <table_get_cell_ptr@@Base>
   14380:	mov	r5, r0
   14384:	mov	r0, r6
   14388:	mov	r1, r4
   1438c:	bl	12b60 <table_get_col_ptr@@Base>
   14390:	ldr	r0, [r0, #4]
   14394:	mvn	r7, #0
   14398:	cmp	r0, #9
   1439c:	bne	143e8 <table_set_uint64@@Base+0x80>
   143a0:	ldr	r0, [r5]
   143a4:	cmp	r0, #0
   143a8:	bne	143c0 <table_set_uint64@@Base+0x58>
   143ac:	mov	r0, #8
   143b0:	bl	11f48 <malloc@plt>
   143b4:	cmp	r0, #0
   143b8:	str	r0, [r5]
   143bc:	beq	143e8 <table_set_uint64@@Base+0x80>
   143c0:	ldr	r1, [fp, #12]
   143c4:	ldr	r2, [fp, #8]
   143c8:	mov	r3, #1
   143cc:	str	r2, [r0]
   143d0:	str	r1, [r0, #4]
   143d4:	mov	r0, r6
   143d8:	mov	r1, r8
   143dc:	mov	r2, r4
   143e0:	bl	12a8c <table_notify@@Base>
   143e4:	mov	r7, #0
   143e8:	mov	r0, r7
   143ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000143f0 <table_set_short@@Base>:
   143f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143f4:	add	fp, sp, #24
   143f8:	mov	r8, r3
   143fc:	mov	r4, r2
   14400:	mov	r9, r1
   14404:	mov	r6, r0
   14408:	bl	14a38 <table_get_cell_ptr@@Base>
   1440c:	mov	r5, r0
   14410:	mov	r0, r6
   14414:	mov	r1, r4
   14418:	bl	12b60 <table_get_col_ptr@@Base>
   1441c:	ldr	r0, [r0, #4]
   14420:	mvn	r7, #0
   14424:	cmp	r0, #10
   14428:	bne	14468 <table_set_short@@Base+0x78>
   1442c:	ldr	r0, [r5]
   14430:	cmp	r0, #0
   14434:	bne	1444c <table_set_short@@Base+0x5c>
   14438:	mov	r0, #2
   1443c:	bl	11f48 <malloc@plt>
   14440:	cmp	r0, #0
   14444:	str	r0, [r5]
   14448:	beq	14468 <table_set_short@@Base+0x78>
   1444c:	strh	r8, [r0]
   14450:	mov	r0, r6
   14454:	mov	r1, r9
   14458:	mov	r2, r4
   1445c:	mov	r3, #1
   14460:	bl	12a8c <table_notify@@Base>
   14464:	mov	r7, #0
   14468:	mov	r0, r7
   1446c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014470 <table_set_ushort@@Base>:
   14470:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14474:	add	fp, sp, #24
   14478:	mov	r8, r3
   1447c:	mov	r4, r2
   14480:	mov	r9, r1
   14484:	mov	r6, r0
   14488:	bl	14a38 <table_get_cell_ptr@@Base>
   1448c:	mov	r5, r0
   14490:	mov	r0, r6
   14494:	mov	r1, r4
   14498:	bl	12b60 <table_get_col_ptr@@Base>
   1449c:	ldr	r0, [r0, #4]
   144a0:	mvn	r7, #0
   144a4:	cmp	r0, #11
   144a8:	bne	144e8 <table_set_ushort@@Base+0x78>
   144ac:	ldr	r0, [r5]
   144b0:	cmp	r0, #0
   144b4:	bne	144cc <table_set_ushort@@Base+0x5c>
   144b8:	mov	r0, #2
   144bc:	bl	11f48 <malloc@plt>
   144c0:	cmp	r0, #0
   144c4:	str	r0, [r5]
   144c8:	beq	144e8 <table_set_ushort@@Base+0x78>
   144cc:	strh	r8, [r0]
   144d0:	mov	r0, r6
   144d4:	mov	r1, r9
   144d8:	mov	r2, r4
   144dc:	mov	r3, #1
   144e0:	bl	12a8c <table_notify@@Base>
   144e4:	mov	r7, #0
   144e8:	mov	r0, r7
   144ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144f0 <table_set_long@@Base>:
   144f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144f4:	add	fp, sp, #24
   144f8:	mov	r8, r3
   144fc:	mov	r4, r2
   14500:	mov	r5, r1
   14504:	mov	r6, r0
   14508:	bl	14a38 <table_get_cell_ptr@@Base>
   1450c:	mov	r9, r0
   14510:	mov	r0, r6
   14514:	mov	r1, r4
   14518:	bl	12b60 <table_get_col_ptr@@Base>
   1451c:	ldr	r0, [r0, #4]
   14520:	mvn	r7, #0
   14524:	cmp	r0, #12
   14528:	bne	14568 <table_set_long@@Base+0x78>
   1452c:	ldr	r0, [r9]
   14530:	cmp	r0, #0
   14534:	bne	1454c <table_set_long@@Base+0x5c>
   14538:	mov	r0, #4
   1453c:	bl	11f48 <malloc@plt>
   14540:	cmp	r0, #0
   14544:	str	r0, [r9]
   14548:	beq	14568 <table_set_long@@Base+0x78>
   1454c:	str	r8, [r0]
   14550:	mov	r0, r6
   14554:	mov	r1, r5
   14558:	mov	r2, r4
   1455c:	mov	r3, #1
   14560:	bl	12a8c <table_notify@@Base>
   14564:	mov	r7, #0
   14568:	mov	r0, r7
   1456c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014570 <table_set_ulong@@Base>:
   14570:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14574:	add	fp, sp, #24
   14578:	mov	r8, r3
   1457c:	mov	r4, r2
   14580:	mov	r5, r1
   14584:	mov	r6, r0
   14588:	bl	14a38 <table_get_cell_ptr@@Base>
   1458c:	mov	r9, r0
   14590:	mov	r0, r6
   14594:	mov	r1, r4
   14598:	bl	12b60 <table_get_col_ptr@@Base>
   1459c:	ldr	r0, [r0, #4]
   145a0:	mvn	r7, #0
   145a4:	cmp	r0, #13
   145a8:	bne	145e8 <table_set_ulong@@Base+0x78>
   145ac:	ldr	r0, [r9]
   145b0:	cmp	r0, #0
   145b4:	bne	145cc <table_set_ulong@@Base+0x5c>
   145b8:	mov	r0, #4
   145bc:	bl	11f48 <malloc@plt>
   145c0:	cmp	r0, #0
   145c4:	str	r0, [r9]
   145c8:	beq	145e8 <table_set_ulong@@Base+0x78>
   145cc:	str	r8, [r0]
   145d0:	mov	r0, r6
   145d4:	mov	r1, r5
   145d8:	mov	r2, r4
   145dc:	mov	r3, #1
   145e0:	bl	12a8c <table_notify@@Base>
   145e4:	mov	r7, #0
   145e8:	mov	r0, r7
   145ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000145f0 <table_set_llong@@Base>:
   145f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   145f4:	add	fp, sp, #24
   145f8:	mov	r4, r2
   145fc:	mov	r8, r1
   14600:	mov	r6, r0
   14604:	bl	14a38 <table_get_cell_ptr@@Base>
   14608:	mov	r5, r0
   1460c:	mov	r0, r6
   14610:	mov	r1, r4
   14614:	bl	12b60 <table_get_col_ptr@@Base>
   14618:	ldr	r0, [r0, #4]
   1461c:	mvn	r7, #0
   14620:	cmp	r0, #14
   14624:	bne	14670 <table_set_llong@@Base+0x80>
   14628:	ldr	r0, [r5]
   1462c:	cmp	r0, #0
   14630:	bne	14648 <table_set_llong@@Base+0x58>
   14634:	mov	r0, #8
   14638:	bl	11f48 <malloc@plt>
   1463c:	cmp	r0, #0
   14640:	str	r0, [r5]
   14644:	beq	14670 <table_set_llong@@Base+0x80>
   14648:	ldr	r1, [fp, #12]
   1464c:	ldr	r2, [fp, #8]
   14650:	mov	r3, #1
   14654:	str	r2, [r0]
   14658:	str	r1, [r0, #4]
   1465c:	mov	r0, r6
   14660:	mov	r1, r8
   14664:	mov	r2, r4
   14668:	bl	12a8c <table_notify@@Base>
   1466c:	mov	r7, #0
   14670:	mov	r0, r7
   14674:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014678 <table_set_ullong@@Base>:
   14678:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1467c:	add	fp, sp, #24
   14680:	mov	r4, r2
   14684:	mov	r8, r1
   14688:	mov	r6, r0
   1468c:	bl	14a38 <table_get_cell_ptr@@Base>
   14690:	mov	r5, r0
   14694:	mov	r0, r6
   14698:	mov	r1, r4
   1469c:	bl	12b60 <table_get_col_ptr@@Base>
   146a0:	ldr	r0, [r0, #4]
   146a4:	mvn	r7, #0
   146a8:	cmp	r0, #15
   146ac:	bne	146f8 <table_set_ullong@@Base+0x80>
   146b0:	ldr	r0, [r5]
   146b4:	cmp	r0, #0
   146b8:	bne	146d0 <table_set_ullong@@Base+0x58>
   146bc:	mov	r0, #8
   146c0:	bl	11f48 <malloc@plt>
   146c4:	cmp	r0, #0
   146c8:	str	r0, [r5]
   146cc:	beq	146f8 <table_set_ullong@@Base+0x80>
   146d0:	ldr	r1, [fp, #12]
   146d4:	ldr	r2, [fp, #8]
   146d8:	mov	r3, #1
   146dc:	str	r2, [r0]
   146e0:	str	r1, [r0, #4]
   146e4:	mov	r0, r6
   146e8:	mov	r1, r8
   146ec:	mov	r2, r4
   146f0:	bl	12a8c <table_notify@@Base>
   146f4:	mov	r7, #0
   146f8:	mov	r0, r7
   146fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014700 <table_set_float@@Base>:
   14700:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14704:	add	fp, sp, #24
   14708:	vpush	{d8}
   1470c:	vmov.f32	s16, s0
   14710:	mov	r4, r2
   14714:	mov	r8, r1
   14718:	mov	r6, r0
   1471c:	bl	14a38 <table_get_cell_ptr@@Base>
   14720:	mov	r5, r0
   14724:	mov	r0, r6
   14728:	mov	r1, r4
   1472c:	bl	12b60 <table_get_col_ptr@@Base>
   14730:	ldr	r0, [r0, #4]
   14734:	mvn	r7, #0
   14738:	cmp	r0, #16
   1473c:	bne	14780 <table_set_float@@Base+0x80>
   14740:	ldr	r0, [r5]
   14744:	cmp	r0, #0
   14748:	bne	14760 <table_set_float@@Base+0x60>
   1474c:	mov	r0, #4
   14750:	bl	11f48 <malloc@plt>
   14754:	cmp	r0, #0
   14758:	str	r0, [r5]
   1475c:	beq	14780 <table_set_float@@Base+0x80>
   14760:	vmov	r1, s16
   14764:	mov	r2, r4
   14768:	mov	r3, #1
   1476c:	str	r1, [r0]
   14770:	mov	r0, r6
   14774:	mov	r1, r8
   14778:	bl	12a8c <table_notify@@Base>
   1477c:	mov	r7, #0
   14780:	mov	r0, r7
   14784:	vpop	{d8}
   14788:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001478c <table_set_double@@Base>:
   1478c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14790:	add	fp, sp, #24
   14794:	vpush	{d8}
   14798:	vorr	d8, d0, d0
   1479c:	mov	r4, r2
   147a0:	mov	r5, r1
   147a4:	mov	r6, r0
   147a8:	bl	14a38 <table_get_cell_ptr@@Base>
   147ac:	mov	r8, r0
   147b0:	mov	r0, r6
   147b4:	mov	r1, r4
   147b8:	bl	12b60 <table_get_col_ptr@@Base>
   147bc:	ldr	r0, [r0, #4]
   147c0:	mvn	r7, #0
   147c4:	cmp	r0, #17
   147c8:	bne	14808 <table_set_double@@Base+0x7c>
   147cc:	ldr	r0, [r8]
   147d0:	cmp	r0, #0
   147d4:	bne	147ec <table_set_double@@Base+0x60>
   147d8:	mov	r0, #8
   147dc:	bl	11f48 <malloc@plt>
   147e0:	cmp	r0, #0
   147e4:	str	r0, [r8]
   147e8:	beq	14808 <table_set_double@@Base+0x7c>
   147ec:	vst1.8	{d8}, [r0]
   147f0:	mov	r0, r6
   147f4:	mov	r1, r5
   147f8:	mov	r2, r4
   147fc:	mov	r3, #1
   14800:	bl	12a8c <table_notify@@Base>
   14804:	mov	r7, #0
   14808:	mov	r0, r7
   1480c:	vpop	{d8}
   14810:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014814 <table_set_ldouble@@Base>:
   14814:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14818:	add	fp, sp, #24
   1481c:	vpush	{d8}
   14820:	vorr	d8, d0, d0
   14824:	mov	r4, r2
   14828:	mov	r5, r1
   1482c:	mov	r6, r0
   14830:	bl	14a38 <table_get_cell_ptr@@Base>
   14834:	mov	r8, r0
   14838:	mov	r0, r6
   1483c:	mov	r1, r4
   14840:	bl	12b60 <table_get_col_ptr@@Base>
   14844:	ldr	r0, [r0, #4]
   14848:	mvn	r7, #0
   1484c:	cmp	r0, #18
   14850:	bne	14890 <table_set_ldouble@@Base+0x7c>
   14854:	ldr	r0, [r8]
   14858:	cmp	r0, #0
   1485c:	bne	14874 <table_set_ldouble@@Base+0x60>
   14860:	mov	r0, #8
   14864:	bl	11f48 <malloc@plt>
   14868:	cmp	r0, #0
   1486c:	str	r0, [r8]
   14870:	beq	14890 <table_set_ldouble@@Base+0x7c>
   14874:	vst1.8	{d8}, [r0]
   14878:	mov	r0, r6
   1487c:	mov	r1, r5
   14880:	mov	r2, r4
   14884:	mov	r3, #1
   14888:	bl	12a8c <table_notify@@Base>
   1488c:	mov	r7, #0
   14890:	mov	r0, r7
   14894:	vpop	{d8}
   14898:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001489c <table_set_string@@Base>:
   1489c:	push	{fp, lr}
   148a0:	mov	fp, sp
   148a4:	sub	sp, sp, #8
   148a8:	mov	ip, #21
   148ac:	str	ip, [sp]
   148b0:	bl	13b44 <table_set@@Base>
   148b4:	mov	sp, fp
   148b8:	pop	{fp, pc}

000148bc <table_set_char@@Base>:
   148bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148c0:	add	fp, sp, #24
   148c4:	mov	r8, r3
   148c8:	mov	r4, r2
   148cc:	mov	r9, r1
   148d0:	mov	r6, r0
   148d4:	bl	14a38 <table_get_cell_ptr@@Base>
   148d8:	mov	r5, r0
   148dc:	mov	r0, r6
   148e0:	mov	r1, r4
   148e4:	bl	12b60 <table_get_col_ptr@@Base>
   148e8:	ldr	r0, [r0, #4]
   148ec:	mvn	r7, #0
   148f0:	cmp	r0, #19
   148f4:	bne	14934 <table_set_char@@Base+0x78>
   148f8:	ldr	r0, [r5]
   148fc:	cmp	r0, #0
   14900:	bne	14918 <table_set_char@@Base+0x5c>
   14904:	mov	r0, #1
   14908:	bl	11f48 <malloc@plt>
   1490c:	cmp	r0, #0
   14910:	str	r0, [r5]
   14914:	beq	14934 <table_set_char@@Base+0x78>
   14918:	strb	r8, [r0]
   1491c:	mov	r0, r6
   14920:	mov	r1, r9
   14924:	mov	r2, r4
   14928:	mov	r3, #1
   1492c:	bl	12a8c <table_notify@@Base>
   14930:	mov	r7, #0
   14934:	mov	r0, r7
   14938:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001493c <table_set_uchar@@Base>:
   1493c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14940:	add	fp, sp, #24
   14944:	mov	r8, r3
   14948:	mov	r4, r2
   1494c:	mov	r9, r1
   14950:	mov	r6, r0
   14954:	bl	14a38 <table_get_cell_ptr@@Base>
   14958:	mov	r5, r0
   1495c:	mov	r0, r6
   14960:	mov	r1, r4
   14964:	bl	12b60 <table_get_col_ptr@@Base>
   14968:	ldr	r0, [r0, #4]
   1496c:	mvn	r7, #0
   14970:	cmp	r0, #20
   14974:	bne	149b4 <table_set_uchar@@Base+0x78>
   14978:	ldr	r0, [r5]
   1497c:	cmp	r0, #0
   14980:	bne	14998 <table_set_uchar@@Base+0x5c>
   14984:	mov	r0, #1
   14988:	bl	11f48 <malloc@plt>
   1498c:	cmp	r0, #0
   14990:	str	r0, [r5]
   14994:	beq	149b4 <table_set_uchar@@Base+0x78>
   14998:	strb	r8, [r0]
   1499c:	mov	r0, r6
   149a0:	mov	r1, r9
   149a4:	mov	r2, r4
   149a8:	mov	r3, #1
   149ac:	bl	12a8c <table_notify@@Base>
   149b0:	mov	r7, #0
   149b4:	mov	r0, r7
   149b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000149bc <table_set_ptr@@Base>:
   149bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149c0:	add	fp, sp, #24
   149c4:	mov	r8, r3
   149c8:	mov	r4, r2
   149cc:	mov	r5, r1
   149d0:	mov	r6, r0
   149d4:	bl	14a38 <table_get_cell_ptr@@Base>
   149d8:	mov	r7, r0
   149dc:	mov	r0, r6
   149e0:	mov	r1, r4
   149e4:	bl	12b60 <table_get_col_ptr@@Base>
   149e8:	ldr	r1, [r0, #4]
   149ec:	mvn	r0, #0
   149f0:	cmp	r1, #23
   149f4:	bne	14a14 <table_set_ptr@@Base+0x58>
   149f8:	mov	r0, r6
   149fc:	mov	r1, r5
   14a00:	mov	r2, r4
   14a04:	mov	r3, #1
   14a08:	str	r8, [r7]
   14a0c:	bl	12a8c <table_notify@@Base>
   14a10:	mov	r0, #0
   14a14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a18 <table_cell_init@@Base>:
   14a18:	push	{r4, sl, fp, lr}
   14a1c:	add	fp, sp, #8
   14a20:	mov	r4, r2
   14a24:	bl	138c0 <table_get_row_ptr@@Base>
   14a28:	ldr	r0, [r0]
   14a2c:	mov	r1, #0
   14a30:	str	r1, [r0, r4, lsl #2]
   14a34:	pop	{r4, sl, fp, pc}

00014a38 <table_get_cell_ptr@@Base>:
   14a38:	push	{r4, sl, fp, lr}
   14a3c:	add	fp, sp, #8
   14a40:	mov	r4, r2
   14a44:	bl	138c0 <table_get_row_ptr@@Base>
   14a48:	ldr	r0, [r0]
   14a4c:	add	r0, r0, r4, lsl #2
   14a50:	pop	{r4, sl, fp, pc}

00014a54 <table_cell_destroy@@Base>:
   14a54:	push	{r4, r5, r6, sl, fp, lr}
   14a58:	add	fp, sp, #16
   14a5c:	mov	r5, r1
   14a60:	mov	r1, r2
   14a64:	mov	r4, r2
   14a68:	mov	r6, r0
   14a6c:	bl	12c00 <table_get_column_data_type@@Base>
   14a70:	cmp	r0, #23
   14a74:	popeq	{r4, r5, r6, sl, fp, pc}
   14a78:	mov	r0, r6
   14a7c:	mov	r1, r5
   14a80:	bl	138c0 <table_get_row_ptr@@Base>
   14a84:	ldr	r0, [r0]
   14a88:	ldr	r0, [r0, r4, lsl #2]
   14a8c:	cmp	r0, #0
   14a90:	beq	14a9c <table_cell_destroy@@Base+0x48>
   14a94:	pop	{r4, r5, r6, sl, fp, lr}
   14a98:	b	11f18 <free@plt>
   14a9c:	pop	{r4, r5, r6, sl, fp, pc}

00014aa0 <table_cell_to_buffer@@Base>:
   14aa0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14aa4:	add	fp, sp, #24
   14aa8:	sub	sp, sp, #8
   14aac:	mov	r7, r1
   14ab0:	mov	r1, r2
   14ab4:	mov	r5, r3
   14ab8:	mov	r6, r2
   14abc:	mov	r4, r0
   14ac0:	bl	12c00 <table_get_column_data_type@@Base>
   14ac4:	cmp	r0, #23
   14ac8:	bhi	14dbc <table_cell_to_buffer@@Base+0x31c>
   14acc:	add	r1, pc, #8
   14ad0:	ldr	r8, [fp, #8]
   14ad4:	ldr	r0, [r1, r0, lsl #2]
   14ad8:	add	pc, r1, r0
   14adc:	andeq	r0, r0, r0, rrx
   14ae0:	andeq	r0, r0, r4, ror r0
   14ae4:	andeq	r0, r0, r8, lsl #1
   14ae8:	muleq	r0, ip, r0
   14aec:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14af0:	andeq	r0, r0, r4, asr #1
   14af4:	ldrdeq	r0, [r0], -r8
   14af8:	andeq	r0, r0, ip, ror #1
   14afc:	andeq	r0, r0, ip, lsl #2
   14b00:	andeq	r0, r0, r0, lsr #2
   14b04:	andeq	r0, r0, r4, lsr r1
   14b08:	andeq	r0, r0, r4, asr r1
   14b0c:	andeq	r0, r0, r4, ror r1
   14b10:	muleq	r0, r4, r1
   14b14:			; <UNDEFINED> instruction: 0x000001b4
   14b18:	ldrdeq	r0, [r0], -r4
   14b1c:	strdeq	r0, [r0], -r4
   14b20:	andeq	r0, r0, r8, lsl r2
   14b24:	andeq	r0, r0, r8, lsr r2
   14b28:	andeq	r0, r0, r4, ror #4
   14b2c:	andeq	r0, r0, r8, ror r2
   14b30:	muleq	r0, r8, r2
   14b34:			; <UNDEFINED> instruction: 0x000002b8
   14b38:	andeq	r0, r0, ip, ror #5
   14b3c:	mov	r0, r4
   14b40:	mov	r1, r7
   14b44:	mov	r2, r6
   14b48:	bl	1367c <table_get_int@@Base>
   14b4c:	b	14da4 <table_cell_to_buffer@@Base+0x304>
   14b50:	mov	r0, r4
   14b54:	mov	r1, r7
   14b58:	mov	r2, r6
   14b5c:	bl	13694 <table_get_uint@@Base>
   14b60:	b	14bd8 <table_cell_to_buffer@@Base+0x138>
   14b64:	mov	r0, r4
   14b68:	mov	r1, r7
   14b6c:	mov	r2, r6
   14b70:	bl	136ac <table_get_int8@@Base>
   14b74:	b	14da4 <table_cell_to_buffer@@Base+0x304>
   14b78:	mov	r0, r4
   14b7c:	mov	r1, r7
   14b80:	mov	r2, r6
   14b84:	bl	136c4 <table_get_uint8@@Base>
   14b88:	b	14bd8 <table_cell_to_buffer@@Base+0x138>
   14b8c:	mov	r0, r4
   14b90:	mov	r1, r7
   14b94:	mov	r2, r6
   14b98:	bl	136dc <table_get_int16@@Base>
   14b9c:	b	14da4 <table_cell_to_buffer@@Base+0x304>
   14ba0:	mov	r0, r4
   14ba4:	mov	r1, r7
   14ba8:	mov	r2, r6
   14bac:	bl	136f4 <table_get_uint16@@Base>
   14bb0:	b	14bd8 <table_cell_to_buffer@@Base+0x138>
   14bb4:	mov	r0, r4
   14bb8:	mov	r1, r7
   14bbc:	mov	r2, r6
   14bc0:	bl	1370c <table_get_int32@@Base>
   14bc4:	b	14da4 <table_cell_to_buffer@@Base+0x304>
   14bc8:	mov	r0, r4
   14bcc:	mov	r1, r7
   14bd0:	mov	r2, r6
   14bd4:	bl	13724 <table_get_uint32@@Base>
   14bd8:	ldr	r2, [pc, #524]	; 14dec <table_cell_to_buffer@@Base+0x34c>
   14bdc:	mov	r3, r0
   14be0:	add	r2, pc, r2
   14be4:	b	14db0 <table_cell_to_buffer@@Base+0x310>
   14be8:	mov	r0, r4
   14bec:	mov	r1, r7
   14bf0:	mov	r2, r6
   14bf4:	bl	1373c <table_get_int64@@Base>
   14bf8:	b	14ca0 <table_cell_to_buffer@@Base+0x200>
   14bfc:	mov	r0, r4
   14c00:	mov	r1, r7
   14c04:	mov	r2, r6
   14c08:	bl	13754 <table_get_uint64@@Base>
   14c0c:	b	14cc0 <table_cell_to_buffer@@Base+0x220>
   14c10:	mov	r0, r4
   14c14:	mov	r1, r7
   14c18:	mov	r2, r6
   14c1c:	bl	1376c <table_get_short@@Base>
   14c20:	ldr	r2, [pc, #464]	; 14df8 <table_cell_to_buffer@@Base+0x358>
   14c24:	mov	r3, r0
   14c28:	add	r2, pc, r2
   14c2c:	b	14db0 <table_cell_to_buffer@@Base+0x310>
   14c30:	mov	r0, r4
   14c34:	mov	r1, r7
   14c38:	mov	r2, r6
   14c3c:	bl	13784 <table_get_ushort@@Base>
   14c40:	ldr	r2, [pc, #436]	; 14dfc <table_cell_to_buffer@@Base+0x35c>
   14c44:	mov	r3, r0
   14c48:	add	r2, pc, r2
   14c4c:	b	14db0 <table_cell_to_buffer@@Base+0x310>
   14c50:	mov	r0, r4
   14c54:	mov	r1, r7
   14c58:	mov	r2, r6
   14c5c:	bl	1379c <table_get_long@@Base>
   14c60:	ldr	r2, [pc, #408]	; 14e00 <table_cell_to_buffer@@Base+0x360>
   14c64:	mov	r3, r0
   14c68:	add	r2, pc, r2
   14c6c:	b	14db0 <table_cell_to_buffer@@Base+0x310>
   14c70:	mov	r0, r4
   14c74:	mov	r1, r7
   14c78:	mov	r2, r6
   14c7c:	bl	137b4 <table_get_ulong@@Base>
   14c80:	ldr	r2, [pc, #380]	; 14e04 <table_cell_to_buffer@@Base+0x364>
   14c84:	mov	r3, r0
   14c88:	add	r2, pc, r2
   14c8c:	b	14db0 <table_cell_to_buffer@@Base+0x310>
   14c90:	mov	r0, r4
   14c94:	mov	r1, r7
   14c98:	mov	r2, r6
   14c9c:	bl	137cc <table_get_llong@@Base>
   14ca0:	stm	sp, {r0, r1}
   14ca4:	ldr	r2, [pc, #324]	; 14df0 <table_cell_to_buffer@@Base+0x350>
   14ca8:	add	r2, pc, r2
   14cac:	b	14d30 <table_cell_to_buffer@@Base+0x290>
   14cb0:	mov	r0, r4
   14cb4:	mov	r1, r7
   14cb8:	mov	r2, r6
   14cbc:	bl	137e4 <table_get_ullong@@Base>
   14cc0:	stm	sp, {r0, r1}
   14cc4:	ldr	r2, [pc, #296]	; 14df4 <table_cell_to_buffer@@Base+0x354>
   14cc8:	add	r2, pc, r2
   14ccc:	b	14d30 <table_cell_to_buffer@@Base+0x290>
   14cd0:	mov	r0, r4
   14cd4:	mov	r1, r7
   14cd8:	mov	r2, r6
   14cdc:	bl	137fc <table_get_float@@Base>
   14ce0:	vcvt.f64.f32	d16, s0
   14ce4:	vstr	d16, [sp]
   14ce8:	ldr	r2, [pc, #284]	; 14e0c <table_cell_to_buffer@@Base+0x36c>
   14cec:	add	r2, pc, r2
   14cf0:	b	14d30 <table_cell_to_buffer@@Base+0x290>
   14cf4:	mov	r0, r4
   14cf8:	mov	r1, r7
   14cfc:	mov	r2, r6
   14d00:	bl	13814 <table_get_double@@Base>
   14d04:	vstr	d0, [sp]
   14d08:	ldr	r2, [pc, #256]	; 14e10 <table_cell_to_buffer@@Base+0x370>
   14d0c:	add	r2, pc, r2
   14d10:	b	14d30 <table_cell_to_buffer@@Base+0x290>
   14d14:	mov	r0, r4
   14d18:	mov	r1, r7
   14d1c:	mov	r2, r6
   14d20:	bl	1382c <table_get_ldouble@@Base>
   14d24:	vstr	d0, [sp]
   14d28:	ldr	r2, [pc, #228]	; 14e14 <table_cell_to_buffer@@Base+0x374>
   14d2c:	add	r2, pc, r2
   14d30:	mov	r0, r5
   14d34:	mov	r1, r8
   14d38:	bl	11f84 <snprintf@plt>
   14d3c:	b	14dbc <table_cell_to_buffer@@Base+0x31c>
   14d40:	mov	r0, r4
   14d44:	mov	r1, r7
   14d48:	mov	r2, r6
   14d4c:	bl	13844 <table_get_char@@Base>
   14d50:	b	14d64 <table_cell_to_buffer@@Base+0x2c4>
   14d54:	mov	r0, r4
   14d58:	mov	r1, r7
   14d5c:	mov	r2, r6
   14d60:	bl	1385c <table_get_uchar@@Base>
   14d64:	ldr	r2, [pc, #172]	; 14e18 <table_cell_to_buffer@@Base+0x378>
   14d68:	mov	r3, r0
   14d6c:	add	r2, pc, r2
   14d70:	b	14db0 <table_cell_to_buffer@@Base+0x310>
   14d74:	mov	r0, r4
   14d78:	mov	r1, r7
   14d7c:	mov	r2, r6
   14d80:	bl	13874 <table_get_string@@Base>
   14d84:	ldr	r2, [pc, #124]	; 14e08 <table_cell_to_buffer@@Base+0x368>
   14d88:	mov	r3, r0
   14d8c:	add	r2, pc, r2
   14d90:	b	14db0 <table_cell_to_buffer@@Base+0x310>
   14d94:	mov	r0, r4
   14d98:	mov	r1, r7
   14d9c:	mov	r2, r6
   14da0:	bl	13664 <table_get_bool@@Base>
   14da4:	ldr	r2, [pc, #60]	; 14de8 <table_cell_to_buffer@@Base+0x348>
   14da8:	mov	r3, r0
   14dac:	add	r2, pc, r2
   14db0:	mov	r0, r5
   14db4:	mov	r1, r8
   14db8:	bl	11f84 <snprintf@plt>
   14dbc:	mov	r0, #0
   14dc0:	sub	sp, fp, #24
   14dc4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14dc8:	mov	r0, r4
   14dcc:	mov	r1, r7
   14dd0:	mov	r2, r6
   14dd4:	bl	13888 <table_get_ptr@@Base>
   14dd8:	ldr	r2, [pc, #60]	; 14e1c <table_cell_to_buffer@@Base+0x37c>
   14ddc:	mov	r3, r0
   14de0:	add	r2, pc, r2
   14de4:	b	14db0 <table_cell_to_buffer@@Base+0x310>
   14de8:	andeq	r0, r0, r0, lsl r8
   14dec:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   14df0:	andeq	r0, r0, sl, lsl r9
   14df4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   14df8:	andeq	r0, r0, r4, lsr #19
   14dfc:	andeq	r0, r0, r8, lsl #19
   14e00:	andeq	r0, r0, ip, ror #18
   14e04:	andeq	r0, r0, r0, asr r9
   14e08:	andeq	r0, r0, r0, asr r8
   14e0c:	strdeq	r0, [r0], -r3
   14e10:	ldrdeq	r0, [r0], -r6
   14e14:			; <UNDEFINED> instruction: 0x000008ba
   14e18:	andeq	r0, r0, lr, ror r8
   14e1c:	andeq	r0, r0, sp, lsl #16

00014e20 <table_cell_from_buffer@@Base>:
   14e20:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e24:	add	fp, sp, #24
   14e28:	sub	sp, sp, #264	; 0x108
   14e2c:	mov	r5, r1
   14e30:	mov	r1, r2
   14e34:	mov	r7, r3
   14e38:	mov	r4, r2
   14e3c:	mov	r6, r0
   14e40:	bl	12c00 <table_get_column_data_type@@Base>
   14e44:	cmp	r0, #23
   14e48:	bhi	1547c <table_cell_from_buffer@@Base+0x65c>
   14e4c:	add	r1, pc, #4
   14e50:	ldr	r0, [r1, r0, lsl #2]
   14e54:	add	pc, r1, r0
   14e58:	andeq	r0, r0, r0, rrx
   14e5c:	muleq	r0, ip, r0
   14e60:	ldrdeq	r0, [r0], -r8
   14e64:	andeq	r0, r0, r4, lsl r1
   14e68:	andeq	r0, r0, r0, asr r1
   14e6c:	andeq	r0, r0, ip, lsl #3
   14e70:	andeq	r0, r0, r8, asr #3
   14e74:	andeq	r0, r0, r4, lsl #4
   14e78:	andeq	r0, r0, r0, asr #4
   14e7c:	andeq	r0, r0, r4, lsl #5
   14e80:	andeq	r0, r0, r8, asr #5
   14e84:	andeq	r0, r0, r4, lsl #6
   14e88:	andeq	r0, r0, r0, asr #6
   14e8c:	andeq	r0, r0, ip, ror r3
   14e90:			; <UNDEFINED> instruction: 0x000003b8
   14e94:	strdeq	r0, [r0], -ip
   14e98:	andeq	r0, r0, r0, asr #8
   14e9c:	andeq	r0, r0, ip, ror r4
   14ea0:			; <UNDEFINED> instruction: 0x000004b8
   14ea4:	strdeq	r0, [r0], -r4
   14ea8:	andeq	r0, r0, r0, lsr r5
   14eac:	andeq	r0, r0, ip, ror #10
   14eb0:	andeq	r0, r0, r8, lsr #11
   14eb4:	andeq	r0, r0, ip, ror #11
   14eb8:	ldr	r1, [pc, #1480]	; 15488 <table_cell_from_buffer@@Base+0x668>
   14ebc:	add	r2, sp, #8
   14ec0:	mov	r0, r7
   14ec4:	add	r1, pc, r1
   14ec8:	bl	11f90 <__isoc99_sscanf@plt>
   14ecc:	mov	r1, r0
   14ed0:	mvn	r0, #0
   14ed4:	cmp	r1, #1
   14ed8:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   14edc:	ldr	r3, [sp, #8]
   14ee0:	mov	r0, r6
   14ee4:	mov	r1, r5
   14ee8:	mov	r2, r4
   14eec:	bl	13ee0 <table_set_int@@Base>
   14ef0:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   14ef4:	ldr	r1, [pc, #1424]	; 1548c <table_cell_from_buffer@@Base+0x66c>
   14ef8:	add	r2, sp, #8
   14efc:	mov	r0, r7
   14f00:	add	r1, pc, r1
   14f04:	bl	11f90 <__isoc99_sscanf@plt>
   14f08:	mov	r1, r0
   14f0c:	mvn	r0, #0
   14f10:	cmp	r1, #1
   14f14:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   14f18:	ldr	r3, [sp, #8]
   14f1c:	mov	r0, r6
   14f20:	mov	r1, r5
   14f24:	mov	r2, r4
   14f28:	bl	13f60 <table_set_uint@@Base>
   14f2c:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   14f30:	ldr	r1, [pc, #1368]	; 15490 <table_cell_from_buffer@@Base+0x670>
   14f34:	add	r2, sp, #8
   14f38:	mov	r0, r7
   14f3c:	add	r1, pc, r1
   14f40:	bl	11f90 <__isoc99_sscanf@plt>
   14f44:	mov	r1, r0
   14f48:	mvn	r0, #0
   14f4c:	cmp	r1, #1
   14f50:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   14f54:	ldrsb	r3, [sp, #8]
   14f58:	mov	r0, r6
   14f5c:	mov	r1, r5
   14f60:	mov	r2, r4
   14f64:	bl	13fe0 <table_set_int8@@Base>
   14f68:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   14f6c:	ldr	r1, [pc, #1312]	; 15494 <table_cell_from_buffer@@Base+0x674>
   14f70:	add	r2, sp, #8
   14f74:	mov	r0, r7
   14f78:	add	r1, pc, r1
   14f7c:	bl	11f90 <__isoc99_sscanf@plt>
   14f80:	mov	r1, r0
   14f84:	mvn	r0, #0
   14f88:	cmp	r1, #1
   14f8c:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   14f90:	ldrb	r3, [sp, #8]
   14f94:	mov	r0, r6
   14f98:	mov	r1, r5
   14f9c:	mov	r2, r4
   14fa0:	bl	14060 <table_set_uint8@@Base>
   14fa4:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   14fa8:	ldr	r1, [pc, #1256]	; 15498 <table_cell_from_buffer@@Base+0x678>
   14fac:	add	r2, sp, #8
   14fb0:	mov	r0, r7
   14fb4:	add	r1, pc, r1
   14fb8:	bl	11f90 <__isoc99_sscanf@plt>
   14fbc:	mov	r1, r0
   14fc0:	mvn	r0, #0
   14fc4:	cmp	r1, #1
   14fc8:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   14fcc:	ldrsh	r3, [sp, #8]
   14fd0:	mov	r0, r6
   14fd4:	mov	r1, r5
   14fd8:	mov	r2, r4
   14fdc:	bl	140e0 <table_set_int16@@Base>
   14fe0:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   14fe4:	ldr	r1, [pc, #1200]	; 1549c <table_cell_from_buffer@@Base+0x67c>
   14fe8:	add	r2, sp, #8
   14fec:	mov	r0, r7
   14ff0:	add	r1, pc, r1
   14ff4:	bl	11f90 <__isoc99_sscanf@plt>
   14ff8:	mov	r1, r0
   14ffc:	mvn	r0, #0
   15000:	cmp	r1, #1
   15004:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15008:	ldrh	r3, [sp, #8]
   1500c:	mov	r0, r6
   15010:	mov	r1, r5
   15014:	mov	r2, r4
   15018:	bl	14160 <table_set_uint16@@Base>
   1501c:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   15020:	ldr	r1, [pc, #1144]	; 154a0 <table_cell_from_buffer@@Base+0x680>
   15024:	add	r2, sp, #8
   15028:	mov	r0, r7
   1502c:	add	r1, pc, r1
   15030:	bl	11f90 <__isoc99_sscanf@plt>
   15034:	mov	r1, r0
   15038:	mvn	r0, #0
   1503c:	cmp	r1, #1
   15040:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15044:	ldr	r3, [sp, #8]
   15048:	mov	r0, r6
   1504c:	mov	r1, r5
   15050:	mov	r2, r4
   15054:	bl	141e0 <table_set_int32@@Base>
   15058:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   1505c:	ldr	r1, [pc, #1088]	; 154a4 <table_cell_from_buffer@@Base+0x684>
   15060:	add	r2, sp, #8
   15064:	mov	r0, r7
   15068:	add	r1, pc, r1
   1506c:	bl	11f90 <__isoc99_sscanf@plt>
   15070:	mov	r1, r0
   15074:	mvn	r0, #0
   15078:	cmp	r1, #1
   1507c:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15080:	ldr	r3, [sp, #8]
   15084:	mov	r0, r6
   15088:	mov	r1, r5
   1508c:	mov	r2, r4
   15090:	bl	14260 <table_set_uint32@@Base>
   15094:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   15098:	ldr	r1, [pc, #1032]	; 154a8 <table_cell_from_buffer@@Base+0x688>
   1509c:	add	r2, sp, #8
   150a0:	mov	r0, r7
   150a4:	add	r1, pc, r1
   150a8:	bl	11f90 <__isoc99_sscanf@plt>
   150ac:	mov	r1, r0
   150b0:	mvn	r0, #0
   150b4:	cmp	r1, #1
   150b8:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   150bc:	ldr	r0, [sp, #8]
   150c0:	ldr	r1, [sp, #12]
   150c4:	mov	r2, r4
   150c8:	stm	sp, {r0, r1}
   150cc:	mov	r0, r6
   150d0:	mov	r1, r5
   150d4:	bl	142e0 <table_set_int64@@Base>
   150d8:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   150dc:	ldr	r1, [pc, #968]	; 154ac <table_cell_from_buffer@@Base+0x68c>
   150e0:	add	r2, sp, #8
   150e4:	mov	r0, r7
   150e8:	add	r1, pc, r1
   150ec:	bl	11f90 <__isoc99_sscanf@plt>
   150f0:	mov	r1, r0
   150f4:	mvn	r0, #0
   150f8:	cmp	r1, #1
   150fc:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15100:	ldr	r0, [sp, #8]
   15104:	ldr	r1, [sp, #12]
   15108:	mov	r2, r4
   1510c:	stm	sp, {r0, r1}
   15110:	mov	r0, r6
   15114:	mov	r1, r5
   15118:	bl	14368 <table_set_uint64@@Base>
   1511c:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   15120:	ldr	r1, [pc, #904]	; 154b0 <table_cell_from_buffer@@Base+0x690>
   15124:	add	r2, sp, #8
   15128:	mov	r0, r7
   1512c:	add	r1, pc, r1
   15130:	bl	11f90 <__isoc99_sscanf@plt>
   15134:	mov	r1, r0
   15138:	mvn	r0, #0
   1513c:	cmp	r1, #1
   15140:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15144:	ldrsh	r3, [sp, #8]
   15148:	mov	r0, r6
   1514c:	mov	r1, r5
   15150:	mov	r2, r4
   15154:	bl	143f0 <table_set_short@@Base>
   15158:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   1515c:	ldr	r1, [pc, #848]	; 154b4 <table_cell_from_buffer@@Base+0x694>
   15160:	add	r2, sp, #8
   15164:	mov	r0, r7
   15168:	add	r1, pc, r1
   1516c:	bl	11f90 <__isoc99_sscanf@plt>
   15170:	mov	r1, r0
   15174:	mvn	r0, #0
   15178:	cmp	r1, #1
   1517c:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15180:	ldrh	r3, [sp, #8]
   15184:	mov	r0, r6
   15188:	mov	r1, r5
   1518c:	mov	r2, r4
   15190:	bl	14470 <table_set_ushort@@Base>
   15194:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   15198:	ldr	r1, [pc, #792]	; 154b8 <table_cell_from_buffer@@Base+0x698>
   1519c:	add	r2, sp, #8
   151a0:	mov	r0, r7
   151a4:	add	r1, pc, r1
   151a8:	bl	11f90 <__isoc99_sscanf@plt>
   151ac:	mov	r1, r0
   151b0:	mvn	r0, #0
   151b4:	cmp	r1, #1
   151b8:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   151bc:	ldr	r3, [sp, #8]
   151c0:	mov	r0, r6
   151c4:	mov	r1, r5
   151c8:	mov	r2, r4
   151cc:	bl	144f0 <table_set_long@@Base>
   151d0:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   151d4:	ldr	r1, [pc, #736]	; 154bc <table_cell_from_buffer@@Base+0x69c>
   151d8:	add	r2, sp, #8
   151dc:	mov	r0, r7
   151e0:	add	r1, pc, r1
   151e4:	bl	11f90 <__isoc99_sscanf@plt>
   151e8:	mov	r1, r0
   151ec:	mvn	r0, #0
   151f0:	cmp	r1, #1
   151f4:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   151f8:	ldr	r3, [sp, #8]
   151fc:	mov	r0, r6
   15200:	mov	r1, r5
   15204:	mov	r2, r4
   15208:	bl	14570 <table_set_ulong@@Base>
   1520c:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   15210:	ldr	r1, [pc, #680]	; 154c0 <table_cell_from_buffer@@Base+0x6a0>
   15214:	add	r2, sp, #8
   15218:	mov	r0, r7
   1521c:	add	r1, pc, r1
   15220:	bl	11f90 <__isoc99_sscanf@plt>
   15224:	mov	r1, r0
   15228:	mvn	r0, #0
   1522c:	cmp	r1, #1
   15230:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15234:	ldr	r0, [sp, #8]
   15238:	ldr	r1, [sp, #12]
   1523c:	mov	r2, r4
   15240:	stm	sp, {r0, r1}
   15244:	mov	r0, r6
   15248:	mov	r1, r5
   1524c:	bl	145f0 <table_set_llong@@Base>
   15250:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   15254:	ldr	r1, [pc, #616]	; 154c4 <table_cell_from_buffer@@Base+0x6a4>
   15258:	add	r2, sp, #8
   1525c:	mov	r0, r7
   15260:	add	r1, pc, r1
   15264:	bl	11f90 <__isoc99_sscanf@plt>
   15268:	mov	r1, r0
   1526c:	mvn	r0, #0
   15270:	cmp	r1, #1
   15274:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15278:	ldr	r0, [sp, #8]
   1527c:	ldr	r1, [sp, #12]
   15280:	mov	r2, r4
   15284:	stm	sp, {r0, r1}
   15288:	mov	r0, r6
   1528c:	mov	r1, r5
   15290:	bl	14678 <table_set_ullong@@Base>
   15294:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   15298:	ldr	r1, [pc, #556]	; 154cc <table_cell_from_buffer@@Base+0x6ac>
   1529c:	add	r2, sp, #8
   152a0:	mov	r0, r7
   152a4:	add	r1, pc, r1
   152a8:	bl	11f90 <__isoc99_sscanf@plt>
   152ac:	mov	r1, r0
   152b0:	mvn	r0, #0
   152b4:	cmp	r1, #1
   152b8:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   152bc:	vldr	s0, [sp, #8]
   152c0:	mov	r0, r6
   152c4:	mov	r1, r5
   152c8:	mov	r2, r4
   152cc:	bl	14700 <table_set_float@@Base>
   152d0:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   152d4:	ldr	r1, [pc, #500]	; 154d0 <table_cell_from_buffer@@Base+0x6b0>
   152d8:	add	r2, sp, #8
   152dc:	mov	r0, r7
   152e0:	add	r1, pc, r1
   152e4:	bl	11f90 <__isoc99_sscanf@plt>
   152e8:	mov	r1, r0
   152ec:	mvn	r0, #0
   152f0:	cmp	r1, #1
   152f4:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   152f8:	vldr	d0, [sp, #8]
   152fc:	mov	r0, r6
   15300:	mov	r1, r5
   15304:	mov	r2, r4
   15308:	bl	1478c <table_set_double@@Base>
   1530c:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   15310:	ldr	r1, [pc, #444]	; 154d4 <table_cell_from_buffer@@Base+0x6b4>
   15314:	add	r2, sp, #8
   15318:	mov	r0, r7
   1531c:	add	r1, pc, r1
   15320:	bl	11f90 <__isoc99_sscanf@plt>
   15324:	mov	r1, r0
   15328:	mvn	r0, #0
   1532c:	cmp	r1, #1
   15330:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15334:	vldr	d0, [sp, #8]
   15338:	mov	r0, r6
   1533c:	mov	r1, r5
   15340:	mov	r2, r4
   15344:	bl	14814 <table_set_ldouble@@Base>
   15348:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   1534c:	ldr	r1, [pc, #392]	; 154dc <table_cell_from_buffer@@Base+0x6bc>
   15350:	add	r2, sp, #8
   15354:	mov	r0, r7
   15358:	add	r1, pc, r1
   1535c:	bl	11f90 <__isoc99_sscanf@plt>
   15360:	mov	r1, r0
   15364:	mvn	r0, #0
   15368:	cmp	r1, #1
   1536c:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15370:	ldrb	r3, [sp, #8]
   15374:	mov	r0, r6
   15378:	mov	r1, r5
   1537c:	mov	r2, r4
   15380:	bl	148bc <table_set_char@@Base>
   15384:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   15388:	ldr	r1, [pc, #336]	; 154e0 <table_cell_from_buffer@@Base+0x6c0>
   1538c:	add	r2, sp, #8
   15390:	mov	r0, r7
   15394:	add	r1, pc, r1
   15398:	bl	11f90 <__isoc99_sscanf@plt>
   1539c:	mov	r1, r0
   153a0:	mvn	r0, #0
   153a4:	cmp	r1, #1
   153a8:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   153ac:	ldrb	r3, [sp, #8]
   153b0:	mov	r0, r6
   153b4:	mov	r1, r5
   153b8:	mov	r2, r4
   153bc:	bl	1493c <table_set_uchar@@Base>
   153c0:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   153c4:	ldr	r1, [pc, #252]	; 154c8 <table_cell_from_buffer@@Base+0x6a8>
   153c8:	add	r2, sp, #8
   153cc:	mov	r0, r7
   153d0:	add	r1, pc, r1
   153d4:	bl	11f90 <__isoc99_sscanf@plt>
   153d8:	mov	r1, r0
   153dc:	mvn	r0, #0
   153e0:	cmp	r1, #1
   153e4:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   153e8:	add	r3, sp, #8
   153ec:	mov	r0, r6
   153f0:	mov	r1, r5
   153f4:	mov	r2, r4
   153f8:	bl	1489c <table_set_string@@Base>
   153fc:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   15400:	ldr	r1, [pc, #208]	; 154d8 <table_cell_from_buffer@@Base+0x6b8>
   15404:	add	r2, sp, #8
   15408:	mov	r0, r7
   1540c:	add	r1, pc, r1
   15410:	bl	11f90 <__isoc99_sscanf@plt>
   15414:	mov	r1, r0
   15418:	mvn	r0, #0
   1541c:	cmp	r1, #1
   15420:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15424:	ldr	r3, [sp, #8]
   15428:	mov	r0, r6
   1542c:	mov	r1, r5
   15430:	mov	r2, r4
   15434:	cmp	r3, #0
   15438:	movwne	r3, #1
   1543c:	bl	13e60 <table_set_bool@@Base>
   15440:	b	1547c <table_cell_from_buffer@@Base+0x65c>
   15444:	ldr	r1, [pc, #152]	; 154e4 <table_cell_from_buffer@@Base+0x6c4>
   15448:	add	r2, sp, #8
   1544c:	mov	r0, r7
   15450:	add	r1, pc, r1
   15454:	bl	11f90 <__isoc99_sscanf@plt>
   15458:	mov	r1, r0
   1545c:	mvn	r0, #0
   15460:	cmp	r1, #1
   15464:	bne	15480 <table_cell_from_buffer@@Base+0x660>
   15468:	ldr	r3, [sp, #8]
   1546c:	mov	r0, r6
   15470:	mov	r1, r5
   15474:	mov	r2, r4
   15478:	bl	149bc <table_set_ptr@@Base>
   1547c:	mov	r0, #0
   15480:	sub	sp, fp, #24
   15484:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15488:	strdeq	r0, [r0], -r8
   1548c:			; <UNDEFINED> instruction: 0x000006bf
   15490:			; <UNDEFINED> instruction: 0x000006b4
   15494:	andeq	r0, r0, sp, ror r6
   15498:	andeq	r0, r0, r8, lsl r6
   1549c:	andeq	r0, r0, r0, ror #11
   154a0:	muleq	r0, r0, r5
   154a4:	andeq	r0, r0, r7, asr r5
   154a8:	andeq	r0, r0, lr, lsl r5
   154ac:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   154b0:	andeq	r0, r0, r0, lsr #9
   154b4:	andeq	r0, r0, r8, ror #8
   154b8:	andeq	r0, r0, r0, lsr r4
   154bc:	strdeq	r0, [r0], -r8
   154c0:	andeq	r0, r0, r6, lsr #7
   154c4:	andeq	r0, r0, r7, ror #6
   154c8:	andeq	r0, r0, ip, lsl #4
   154cc:	andeq	r0, r0, fp, lsr r3
   154d0:	andeq	r0, r0, r2, lsl #6
   154d4:	andeq	r0, r0, sl, asr #5
   154d8:			; <UNDEFINED> instruction: 0x000001b0
   154dc:	muleq	r0, r2, r2
   154e0:	andeq	r0, r0, r6, asr r2
   154e4:	muleq	r0, sp, r1

000154e8 <table_cell_nullify@@Base>:
   154e8:	push	{r4, r5, fp, lr}
   154ec:	add	fp, sp, #8
   154f0:	mov	r4, r2
   154f4:	bl	138c0 <table_get_row_ptr@@Base>
   154f8:	ldr	r5, [r0]
   154fc:	ldr	r0, [r5, r4, lsl #2]
   15500:	cmp	r0, #0
   15504:	beq	15514 <table_cell_nullify@@Base+0x2c>
   15508:	bl	11f18 <free@plt>
   1550c:	mov	r0, #0
   15510:	str	r0, [r5, r4, lsl #2]
   15514:	mov	r0, #0
   15518:	pop	{r4, r5, fp, pc}

0001551c <__libc_csu_init@@Base>:
   1551c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15520:	mov	r7, r0
   15524:	ldr	r6, [pc, #72]	; 15574 <__libc_csu_init@@Base+0x58>
   15528:	ldr	r5, [pc, #72]	; 15578 <__libc_csu_init@@Base+0x5c>
   1552c:	add	r6, pc, r6
   15530:	add	r5, pc, r5
   15534:	sub	r6, r6, r5
   15538:	mov	r8, r1
   1553c:	mov	r9, r2
   15540:	bl	11ee0 <strcmp@plt-0x20>
   15544:	asrs	r6, r6, #2
   15548:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1554c:	mov	r4, #0
   15550:	add	r4, r4, #1
   15554:	ldr	r3, [r5], #4
   15558:	mov	r2, r9
   1555c:	mov	r1, r8
   15560:	mov	r0, r7
   15564:	blx	r3
   15568:	cmp	r6, r4
   1556c:	bne	15550 <__libc_csu_init@@Base+0x34>
   15570:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15574:	andeq	r0, r1, r8, ror r9
   15578:	andeq	r0, r1, r0, ror r9

0001557c <__libc_csu_fini@@Base>:
   1557c:	bx	lr

Disassembly of section .fini:

00015580 <.fini>:
   15580:	push	{r3, lr}
   15584:	pop	{r3, pc}
