
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010b3c <.init>:
   10b3c:	push	{r3, lr}
   10b40:	bl	10e00 <_start@@Base+0x3c>
   10b44:	pop	{r3, pc}

Disassembly of section .plt:

00010b48 <calloc@plt-0x14>:
   10b48:	push	{lr}		; (str lr, [sp, #-4]!)
   10b4c:	ldr	lr, [pc, #4]	; 10b58 <calloc@plt-0x4>
   10b50:	add	lr, pc, lr
   10b54:	ldr	pc, [lr, #8]!
   10b58:	andeq	r1, r1, r8, lsr #9

00010b5c <calloc@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b68 <strcmp@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b74 <strtol@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1176]!	; 0x498

00010b80 <printf@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1168]!	; 0x490

00010b8c <fopen@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1160]!	; 0x488

00010b98 <free@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1152]!	; 0x480

00010ba4 <fgets@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #69632	; 0x11000
   10bac:	ldr	pc, [ip, #1144]!	; 0x478

00010bb0 <memcpy@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #69632	; 0x11000
   10bb8:	ldr	pc, [ip, #1136]!	; 0x470

00010bbc <realloc@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #69632	; 0x11000
   10bc4:	ldr	pc, [ip, #1128]!	; 0x468

00010bc8 <strcpy@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #69632	; 0x11000
   10bd0:	ldr	pc, [ip, #1120]!	; 0x460

00010bd4 <puts@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #69632	; 0x11000
   10bdc:	ldr	pc, [ip, #1112]!	; 0x458

00010be0 <malloc@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #69632	; 0x11000
   10be8:	ldr	pc, [ip, #1104]!	; 0x450

00010bec <__libc_start_main@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #69632	; 0x11000
   10bf4:	ldr	pc, [ip, #1096]!	; 0x448

00010bf8 <__gmon_start__@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #69632	; 0x11000
   10c00:	ldr	pc, [ip, #1088]!	; 0x440

00010c04 <feof@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #69632	; 0x11000
   10c0c:	ldr	pc, [ip, #1080]!	; 0x438

00010c10 <strlen@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #69632	; 0x11000
   10c18:	ldr	pc, [ip, #1072]!	; 0x430

00010c1c <strchr@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #69632	; 0x11000
   10c24:	ldr	pc, [ip, #1064]!	; 0x428

00010c28 <fclose@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #69632	; 0x11000
   10c30:	ldr	pc, [ip, #1056]!	; 0x420

00010c34 <abort@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #69632	; 0x11000
   10c3c:	ldr	pc, [ip, #1048]!	; 0x418

Disassembly of section .text:

00010c40 <main@@Base>:
   10c40:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c44:	ldr	r4, [pc, #336]	; 10d9c <main@@Base+0x15c>
   10c48:	ldr	r0, [pc, #336]	; 10da0 <main@@Base+0x160>
   10c4c:	add	r4, pc, r4
   10c50:	mov	r1, r4
   10c54:	add	r0, pc, r0
   10c58:	bl	10b8c <fopen@plt>
   10c5c:	mov	r1, r4
   10c60:	mov	r8, r0
   10c64:	ldr	r0, [pc, #312]	; 10da4 <main@@Base+0x164>
   10c68:	add	r0, pc, r0
   10c6c:	bl	10b8c <fopen@plt>
   10c70:	mov	r1, r4
   10c74:	mov	r7, r0
   10c78:	ldr	r0, [pc, #296]	; 10da8 <main@@Base+0x168>
   10c7c:	add	r0, pc, r0
   10c80:	bl	10b8c <fopen@plt>
   10c84:	mov	r6, r0
   10c88:	mov	r0, r8
   10c8c:	bl	110b0 <lerAtores@@Base>
   10c90:	mov	r4, r0
   10c94:	mov	r0, r7
   10c98:	bl	11130 <lerFilmes@@Base>
   10c9c:	mov	r5, r0
   10ca0:	mov	r0, r6
   10ca4:	bl	11130 <lerFilmes@@Base>
   10ca8:	mov	r9, r0
   10cac:	mov	r0, r4
   10cb0:	bl	112b8 <vetor_tamanho@@Base>
   10cb4:	mov	r1, r0
   10cb8:	ldr	r0, [pc, #236]	; 10dac <main@@Base+0x16c>
   10cbc:	add	r0, pc, r0
   10cc0:	bl	10b80 <printf@plt>
   10cc4:	mov	r0, r4
   10cc8:	bl	10eec <retira_duplicados@@Base>
   10ccc:	mov	r0, r4
   10cd0:	bl	112b8 <vetor_tamanho@@Base>
   10cd4:	mov	r1, r0
   10cd8:	ldr	r0, [pc, #208]	; 10db0 <main@@Base+0x170>
   10cdc:	add	r0, pc, r0
   10ce0:	bl	10b80 <printf@plt>
   10ce4:	mov	r1, r9
   10ce8:	mov	r0, r5
   10cec:	bl	10f7c <interseta@@Base>
   10cf0:	subs	fp, r0, #0
   10cf4:	beq	10d8c <main@@Base+0x14c>
   10cf8:	bl	112b8 <vetor_tamanho@@Base>
   10cfc:	mov	r1, r0
   10d00:	ldr	r0, [pc, #172]	; 10db4 <main@@Base+0x174>
   10d04:	add	r0, pc, r0
   10d08:	bl	10b80 <printf@plt>
   10d0c:	mov	r1, #2000	; 0x7d0
   10d10:	mov	r0, r5
   10d14:	bl	1102c <anteriores@@Base>
   10d18:	subs	sl, r0, #0
   10d1c:	beq	10d7c <main@@Base+0x13c>
   10d20:	bl	112b8 <vetor_tamanho@@Base>
   10d24:	mov	r1, r0
   10d28:	ldr	r0, [pc, #136]	; 10db8 <main@@Base+0x178>
   10d2c:	add	r0, pc, r0
   10d30:	bl	10b80 <printf@plt>
   10d34:	mov	r0, r4
   10d38:	bl	111d8 <vetor_apaga@@Base>
   10d3c:	mov	r0, fp
   10d40:	bl	111d8 <vetor_apaga@@Base>
   10d44:	mov	r0, sl
   10d48:	bl	111d8 <vetor_apaga@@Base>
   10d4c:	mov	r0, r5
   10d50:	bl	115cc <lista_apaga@@Base>
   10d54:	mov	r0, r9
   10d58:	bl	115cc <lista_apaga@@Base>
   10d5c:	mov	r0, r8
   10d60:	bl	10c28 <fclose@plt>
   10d64:	mov	r0, r7
   10d68:	bl	10c28 <fclose@plt>
   10d6c:	mov	r0, r6
   10d70:	bl	10c28 <fclose@plt>
   10d74:	mov	r0, #0
   10d78:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d7c:	ldr	r0, [pc, #56]	; 10dbc <main@@Base+0x17c>
   10d80:	add	r0, pc, r0
   10d84:	bl	10bd4 <puts@plt>
   10d88:	b	10d34 <main@@Base+0xf4>
   10d8c:	ldr	r0, [pc, #44]	; 10dc0 <main@@Base+0x180>
   10d90:	add	r0, pc, r0
   10d94:	bl	10bd4 <puts@plt>
   10d98:	b	10d0c <main@@Base+0xcc>
   10d9c:	andeq	r0, r0, r0, lsr #26
   10da0:	andeq	r0, r0, ip, lsl sp
   10da4:	andeq	r0, r0, r4, lsl sp
   10da8:	andeq	r0, r0, ip, lsl #26
   10dac:	ldrdeq	r0, [r0], -r8
   10db0:	andeq	r0, r0, ip, asr #25
   10db4:	andeq	r0, r0, r0, asr #25
   10db8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10dbc:	andeq	r0, r0, r0, lsr #25
   10dc0:	andeq	r0, r0, r4, asr ip

00010dc4 <_start@@Base>:
   10dc4:	mov	fp, #0
   10dc8:	mov	lr, #0
   10dcc:	pop	{r1}		; (ldr r1, [sp], #4)
   10dd0:	mov	r2, sp
   10dd4:	push	{r2}		; (str r2, [sp, #-4]!)
   10dd8:	push	{r0}		; (str r0, [sp, #-4]!)
   10ddc:	ldr	ip, [pc, #16]	; 10df4 <_start@@Base+0x30>
   10de0:	push	{ip}		; (str ip, [sp, #-4]!)
   10de4:	ldr	r0, [pc, #12]	; 10df8 <_start@@Base+0x34>
   10de8:	ldr	r3, [pc, #12]	; 10dfc <_start@@Base+0x38>
   10dec:	bl	10bec <__libc_start_main@plt>
   10df0:	bl	10c34 <abort@plt>
   10df4:	andeq	r1, r1, r4, ror #18
   10df8:	andeq	r0, r1, r0, asr #24
   10dfc:	andeq	r1, r1, r4, lsl #18
   10e00:	ldr	r3, [pc, #20]	; 10e1c <_start@@Base+0x58>
   10e04:	ldr	r2, [pc, #20]	; 10e20 <_start@@Base+0x5c>
   10e08:	add	r3, pc, r3
   10e0c:	ldr	r2, [r3, r2]
   10e10:	cmp	r2, #0
   10e14:	bxeq	lr
   10e18:	b	10bf8 <__gmon_start__@plt>
   10e1c:	strdeq	r1, [r1], -r0
   10e20:	andeq	r0, r0, r8, asr r0
   10e24:	ldr	r3, [pc, #28]	; 10e48 <_start@@Base+0x84>
   10e28:	ldr	r0, [pc, #28]	; 10e4c <_start@@Base+0x88>
   10e2c:	sub	r3, r3, r0
   10e30:	cmp	r3, #6
   10e34:	bxls	lr
   10e38:	ldr	r3, [pc, #16]	; 10e50 <_start@@Base+0x8c>
   10e3c:	cmp	r3, #0
   10e40:	bxeq	lr
   10e44:	bx	r3
   10e48:	andeq	r2, r2, r7, rrx
   10e4c:	andeq	r2, r2, r4, rrx
   10e50:	andeq	r0, r0, r0
   10e54:	ldr	r1, [pc, #36]	; 10e80 <_start@@Base+0xbc>
   10e58:	ldr	r0, [pc, #36]	; 10e84 <_start@@Base+0xc0>
   10e5c:	sub	r1, r1, r0
   10e60:	asr	r1, r1, #2
   10e64:	add	r1, r1, r1, lsr #31
   10e68:	asrs	r1, r1, #1
   10e6c:	bxeq	lr
   10e70:	ldr	r3, [pc, #16]	; 10e88 <_start@@Base+0xc4>
   10e74:	cmp	r3, #0
   10e78:	bxeq	lr
   10e7c:	bx	r3
   10e80:	andeq	r2, r2, r4, rrx
   10e84:	andeq	r2, r2, r4, rrx
   10e88:	andeq	r0, r0, r0
   10e8c:	push	{r4, lr}
   10e90:	ldr	r4, [pc, #24]	; 10eb0 <_start@@Base+0xec>
   10e94:	ldrb	r3, [r4]
   10e98:	cmp	r3, #0
   10e9c:	popne	{r4, pc}
   10ea0:	bl	10e24 <_start@@Base+0x60>
   10ea4:	mov	r3, #1
   10ea8:	strb	r3, [r4]
   10eac:	pop	{r4, pc}
   10eb0:	andeq	r2, r2, r4, rrx
   10eb4:	ldr	r0, [pc, #40]	; 10ee4 <_start@@Base+0x120>
   10eb8:	ldr	r3, [r0]
   10ebc:	cmp	r3, #0
   10ec0:	bne	10ec8 <_start@@Base+0x104>
   10ec4:	b	10e54 <_start@@Base+0x90>
   10ec8:	ldr	r3, [pc, #24]	; 10ee8 <_start@@Base+0x124>
   10ecc:	cmp	r3, #0
   10ed0:	beq	10ec4 <_start@@Base+0x100>
   10ed4:	push	{r4, lr}
   10ed8:	blx	r3
   10edc:	pop	{r4, lr}
   10ee0:	b	10e54 <_start@@Base+0x90>
   10ee4:	andeq	r1, r2, r4, lsl pc
   10ee8:	andeq	r0, r0, r0

00010eec <retira_duplicados@@Base>:
   10eec:	push	{r4, r5, r6, r7, r8, lr}
   10ef0:	mov	r5, r0
   10ef4:	mov	r7, #0
   10ef8:	mov	r0, r5
   10efc:	bl	112b8 <vetor_tamanho@@Base>
   10f00:	sub	r0, r0, #1
   10f04:	cmp	r7, r0
   10f08:	bge	10f78 <retira_duplicados@@Base+0x8c>
   10f0c:	add	r8, r7, #1
   10f10:	mov	r4, r8
   10f14:	b	10f1c <retira_duplicados@@Base+0x30>
   10f18:	add	r4, r4, #1
   10f1c:	mov	r0, r5
   10f20:	bl	112b8 <vetor_tamanho@@Base>
   10f24:	mov	r1, r7
   10f28:	cmp	r4, r0
   10f2c:	mov	r0, r5
   10f30:	bge	10f70 <retira_duplicados@@Base+0x84>
   10f34:	bl	112c8 <vetor_elemento@@Base>
   10f38:	mov	r1, r4
   10f3c:	mov	r6, r0
   10f40:	mov	r0, r5
   10f44:	bl	112c8 <vetor_elemento@@Base>
   10f48:	mov	r1, r0
   10f4c:	mov	r0, r6
   10f50:	bl	10b68 <strcmp@plt>
   10f54:	cmp	r0, #0
   10f58:	bne	10f18 <retira_duplicados@@Base+0x2c>
   10f5c:	mov	r1, r4
   10f60:	mov	r0, r5
   10f64:	bl	113d8 <vetor_remove@@Base>
   10f68:	sub	r4, r4, #1
   10f6c:	b	10f18 <retira_duplicados@@Base+0x2c>
   10f70:	mov	r7, r8
   10f74:	b	10ef8 <retira_duplicados@@Base+0xc>
   10f78:	pop	{r4, r5, r6, r7, r8, pc}

00010f7c <interseta@@Base>:
   10f7c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f80:	mov	r9, r0
   10f84:	mov	r7, r1
   10f88:	bl	111b4 <vetor_novo@@Base>
   10f8c:	ldr	r4, [r9]
   10f90:	ldr	r3, [r9, #8]
   10f94:	cmp	r3, #0
   10f98:	cmple	r4, #0
   10f9c:	mov	fp, r0
   10fa0:	beq	11024 <interseta@@Base+0xa8>
   10fa4:	mov	sl, #0
   10fa8:	mov	r5, sl
   10fac:	mov	r8, sl
   10fb0:	b	10fc8 <interseta@@Base+0x4c>
   10fb4:	ldr	r4, [r4, #4]
   10fb8:	ldr	r3, [r9, #8]
   10fbc:	cmp	r3, r5
   10fc0:	cmple	r4, #0
   10fc4:	beq	11024 <interseta@@Base+0xa8>
   10fc8:	mov	r2, r8
   10fcc:	ldr	r1, [r4]
   10fd0:	mov	r0, r7
   10fd4:	bl	1173c <lista_pesquisa@@Base>
   10fd8:	add	r5, r5, #1
   10fdc:	mov	r2, r8
   10fe0:	cmp	r0, #0
   10fe4:	mov	r0, r7
   10fe8:	beq	10fb4 <interseta@@Base+0x38>
   10fec:	ldr	r6, [r4]
   10ff0:	mov	r1, r6
   10ff4:	bl	1173c <lista_pesquisa@@Base>
   10ff8:	ldr	r1, [r0]
   10ffc:	mov	r0, r6
   11000:	bl	10b68 <strcmp@plt>
   11004:	cmp	r0, #0
   11008:	bne	10fb4 <interseta@@Base+0x38>
   1100c:	mov	r2, sl
   11010:	ldr	r1, [r4]
   11014:	mov	r0, fp
   11018:	bl	112fc <vetor_insere@@Base>
   1101c:	add	sl, sl, #1
   11020:	b	10fb4 <interseta@@Base+0x38>
   11024:	mov	r0, fp
   11028:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001102c <anteriores@@Base>:
   1102c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11030:	mov	r4, r0
   11034:	mov	r6, r1
   11038:	bl	111b4 <vetor_novo@@Base>
   1103c:	ldr	r4, [r4]
   11040:	cmp	r4, #0
   11044:	mov	r9, r0
   11048:	beq	110a8 <anteriores@@Base+0x7c>
   1104c:	mov	r8, #10
   11050:	mov	r7, #0
   11054:	b	11064 <anteriores@@Base+0x38>
   11058:	ldr	r4, [r4, #4]
   1105c:	cmp	r4, #0
   11060:	beq	110a8 <anteriores@@Base+0x7c>
   11064:	ldr	r5, [r4]
   11068:	mov	r0, r5
   1106c:	bl	10c10 <strlen@plt>
   11070:	mov	r2, r8
   11074:	mov	r1, r7
   11078:	sub	r0, r0, #5
   1107c:	add	r0, r5, r0
   11080:	bl	10b74 <strtol@plt>
   11084:	cmp	r6, r0
   11088:	ble	11058 <anteriores@@Base+0x2c>
   1108c:	ldr	r1, [r4]
   11090:	ldr	r2, [r9]
   11094:	mov	r0, r9
   11098:	bl	112fc <vetor_insere@@Base>
   1109c:	ldr	r4, [r4, #4]
   110a0:	cmp	r4, #0
   110a4:	bne	11064 <anteriores@@Base+0x38>
   110a8:	mov	r0, r9
   110ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000110b0 <lerAtores@@Base>:
   110b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   110b4:	subs	r5, r0, #0
   110b8:	sub	sp, sp, #260	; 0x104
   110bc:	beq	11128 <lerAtores@@Base+0x78>
   110c0:	bl	111b4 <vetor_novo@@Base>
   110c4:	mov	r4, sp
   110c8:	mov	r8, #255	; 0xff
   110cc:	mov	r9, #10
   110d0:	mov	r6, r0
   110d4:	b	11100 <lerAtores@@Base+0x50>
   110d8:	bl	10ba4 <fgets@plt>
   110dc:	mov	r1, r9
   110e0:	mov	r0, r4
   110e4:	bl	10c1c <strchr@plt>
   110e8:	mov	r1, r4
   110ec:	subs	r3, r0, #0
   110f0:	mov	r0, r6
   110f4:	strbne	r7, [r3]
   110f8:	ldr	r2, [r6]
   110fc:	bl	112fc <vetor_insere@@Base>
   11100:	mov	r0, r5
   11104:	bl	10c04 <feof@plt>
   11108:	mov	r2, r5
   1110c:	mov	r1, r8
   11110:	subs	r7, r0, #0
   11114:	mov	r0, r4
   11118:	beq	110d8 <lerAtores@@Base+0x28>
   1111c:	mov	r0, r6
   11120:	add	sp, sp, #260	; 0x104
   11124:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11128:	mov	r6, r5
   1112c:	b	1111c <lerAtores@@Base+0x6c>

00011130 <lerFilmes@@Base>:
   11130:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11134:	subs	r5, r0, #0
   11138:	sub	sp, sp, #256	; 0x100
   1113c:	beq	111ac <lerFilmes@@Base+0x7c>
   11140:	bl	115a8 <lista_nova@@Base>
   11144:	mov	r4, sp
   11148:	mov	r8, #255	; 0xff
   1114c:	mov	sl, #10
   11150:	mov	r9, #0
   11154:	mov	r7, r0
   11158:	b	11184 <lerFilmes@@Base+0x54>
   1115c:	bl	10ba4 <fgets@plt>
   11160:	mov	r1, sl
   11164:	mov	r0, r4
   11168:	bl	10c1c <strchr@plt>
   1116c:	mov	r2, r9
   11170:	mov	r1, r4
   11174:	subs	r3, r0, #0
   11178:	mov	r0, r7
   1117c:	strbne	r6, [r3]
   11180:	bl	11634 <lista_insere@@Base>
   11184:	mov	r0, r5
   11188:	bl	10c04 <feof@plt>
   1118c:	mov	r2, r5
   11190:	mov	r1, r8
   11194:	subs	r6, r0, #0
   11198:	mov	r0, r4
   1119c:	beq	1115c <lerFilmes@@Base+0x2c>
   111a0:	mov	r0, r7
   111a4:	add	sp, sp, #256	; 0x100
   111a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111ac:	mov	r7, r5
   111b0:	b	111a0 <lerFilmes@@Base+0x70>

000111b4 <vetor_novo@@Base>:
   111b4:	push	{r4, lr}
   111b8:	mov	r0, #12
   111bc:	bl	10be0 <malloc@plt>
   111c0:	cmp	r0, #0
   111c4:	movne	r3, #0
   111c8:	strne	r3, [r0]
   111cc:	strne	r3, [r0, #4]
   111d0:	strne	r3, [r0, #8]
   111d4:	pop	{r4, pc}

000111d8 <vetor_apaga@@Base>:
   111d8:	push	{r4, r5, r6, lr}
   111dc:	subs	r5, r0, #0
   111e0:	popeq	{r4, r5, r6, pc}
   111e4:	ldr	r3, [r5]
   111e8:	cmp	r3, #0
   111ec:	movgt	r4, #0
   111f0:	ble	11210 <vetor_apaga@@Base+0x38>
   111f4:	ldr	r3, [r5, #8]
   111f8:	ldr	r0, [r3, r4, lsl #2]
   111fc:	bl	10b98 <free@plt>
   11200:	ldr	r3, [r5]
   11204:	add	r4, r4, #1
   11208:	cmp	r3, r4
   1120c:	bgt	111f4 <vetor_apaga@@Base+0x1c>
   11210:	ldr	r0, [r5, #8]
   11214:	bl	10b98 <free@plt>
   11218:	mov	r0, r5
   1121c:	pop	{r4, r5, r6, lr}
   11220:	b	10b98 <free@plt>

00011224 <vetor_atribui@@Base>:
   11224:	clz	r3, r0
   11228:	lsr	r3, r3, #5
   1122c:	orrs	r3, r3, r1, lsr #31
   11230:	bne	112b0 <vetor_atribui@@Base+0x8c>
   11234:	ldr	r3, [r0]
   11238:	cmp	r1, r3
   1123c:	bge	112b0 <vetor_atribui@@Base+0x8c>
   11240:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11244:	mov	r5, r0
   11248:	mov	r0, r2
   1124c:	mov	r4, r1
   11250:	mov	r6, r2
   11254:	bl	10c10 <strlen@plt>
   11258:	ldr	r8, [r5, #8]
   1125c:	ldr	r7, [r8, r4, lsl #2]
   11260:	mov	r9, r0
   11264:	mov	r0, r7
   11268:	bl	10c10 <strlen@plt>
   1126c:	cmp	r9, r0
   11270:	bls	11294 <vetor_atribui@@Base+0x70>
   11274:	mov	r0, r7
   11278:	add	r1, r9, #1
   1127c:	bl	10bbc <realloc@plt>
   11280:	ldr	r3, [r5, #8]
   11284:	str	r0, [r8, r4, lsl #2]
   11288:	ldr	r7, [r3, r4, lsl #2]
   1128c:	cmp	r7, #0
   11290:	beq	112a8 <vetor_atribui@@Base+0x84>
   11294:	mov	r1, r6
   11298:	mov	r0, r7
   1129c:	bl	10bc8 <strcpy@plt>
   112a0:	mov	r0, r4
   112a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112a8:	mvn	r0, #0
   112ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112b0:	mvn	r0, #0
   112b4:	bx	lr

000112b8 <vetor_tamanho@@Base>:
   112b8:	cmp	r0, #0
   112bc:	ldrne	r0, [r0]
   112c0:	mvneq	r0, #0
   112c4:	bx	lr

000112c8 <vetor_elemento@@Base>:
   112c8:	lsr	r3, r1, #31
   112cc:	cmp	r0, #0
   112d0:	orreq	r3, r3, #1
   112d4:	cmp	r3, #0
   112d8:	bne	112f4 <vetor_elemento@@Base+0x2c>
   112dc:	ldr	r2, [r0]
   112e0:	cmp	r1, r2
   112e4:	bge	112f4 <vetor_elemento@@Base+0x2c>
   112e8:	ldr	r3, [r0, #8]
   112ec:	ldr	r0, [r3, r1, lsl #2]
   112f0:	bx	lr
   112f4:	mov	r0, #0
   112f8:	bx	lr

000112fc <vetor_insere@@Base>:
   112fc:	clz	r3, r0
   11300:	lsr	r3, r3, #5
   11304:	orrs	r3, r3, r2, lsr #31
   11308:	bne	113d0 <vetor_insere@@Base+0xd4>
   1130c:	push	{r4, r5, r6, r7, r8, lr}
   11310:	ldr	r7, [r0]
   11314:	cmp	r2, r7
   11318:	bgt	113c8 <vetor_insere@@Base+0xcc>
   1131c:	ldr	r3, [r0, #4]
   11320:	mov	r6, r0
   11324:	cmp	r7, r3
   11328:	mov	r8, r1
   1132c:	mov	r4, r2
   11330:	beq	11390 <vetor_insere@@Base+0x94>
   11334:	ldr	r5, [r0, #8]
   11338:	cmp	r4, r7
   1133c:	addlt	r3, r5, r7, lsl #2
   11340:	addlt	r2, r5, r4, lsl #2
   11344:	bge	11358 <vetor_insere@@Base+0x5c>
   11348:	ldr	ip, [r3, #-4]
   1134c:	str	ip, [r3], #-4
   11350:	cmp	r2, r3
   11354:	bne	11348 <vetor_insere@@Base+0x4c>
   11358:	mov	r0, r8
   1135c:	bl	10c10 <strlen@plt>
   11360:	mov	r1, #1
   11364:	add	r0, r0, r1
   11368:	bl	10b5c <calloc@plt>
   1136c:	cmp	r0, #0
   11370:	str	r0, [r5, r4, lsl #2]
   11374:	beq	113c8 <vetor_insere@@Base+0xcc>
   11378:	mov	r1, r8
   1137c:	bl	10bc8 <strcpy@plt>
   11380:	add	r3, r7, #1
   11384:	mov	r0, r4
   11388:	str	r3, [r6]
   1138c:	pop	{r4, r5, r6, r7, r8, pc}
   11390:	cmp	r7, #0
   11394:	moveq	r3, #1
   11398:	lslne	r3, r7, #1
   1139c:	streq	r3, [r0, #4]
   113a0:	strne	r3, [r0, #4]
   113a4:	moveq	r1, #4
   113a8:	lslne	r1, r7, #3
   113ac:	ldr	r0, [r0, #8]
   113b0:	bl	10bbc <realloc@plt>
   113b4:	cmp	r0, #0
   113b8:	str	r0, [r6, #8]
   113bc:	ldrne	r7, [r6]
   113c0:	movne	r5, r0
   113c4:	bne	11338 <vetor_insere@@Base+0x3c>
   113c8:	mvn	r0, #0
   113cc:	pop	{r4, r5, r6, r7, r8, pc}
   113d0:	mvn	r0, #0
   113d4:	bx	lr

000113d8 <vetor_remove@@Base>:
   113d8:	clz	r3, r0
   113dc:	lsr	r3, r3, #5
   113e0:	orrs	r3, r3, r1, lsr #31
   113e4:	bne	11450 <vetor_remove@@Base+0x78>
   113e8:	ldr	r3, [r0]
   113ec:	cmp	r1, r3
   113f0:	bge	11450 <vetor_remove@@Base+0x78>
   113f4:	ldr	r3, [r0, #8]
   113f8:	push	{r4, r5, r6, lr}
   113fc:	mov	r6, r0
   11400:	ldr	r0, [r3, r1, lsl #2]
   11404:	mov	r5, r1
   11408:	lsl	r4, r1, #2
   1140c:	bl	10b98 <free@plt>
   11410:	ldr	r0, [r6]
   11414:	add	r1, r5, #1
   11418:	cmp	r1, r0
   1141c:	bge	11440 <vetor_remove@@Base+0x68>
   11420:	ldr	r2, [r6, #8]
   11424:	sub	r1, r0, #-1073741823	; 0xc0000001
   11428:	add	r3, r2, r4
   1142c:	add	r1, r2, r1, lsl #2
   11430:	ldr	r2, [r3, #4]
   11434:	str	r2, [r3], #4
   11438:	cmp	r3, r1
   1143c:	bne	11430 <vetor_remove@@Base+0x58>
   11440:	sub	r0, r0, #1
   11444:	str	r0, [r6]
   11448:	mov	r0, #0
   1144c:	pop	{r4, r5, r6, pc}
   11450:	mvn	r0, #0
   11454:	bx	lr

00011458 <vetor_pesquisa@@Base>:
   11458:	cmp	r0, #0
   1145c:	push	{r4, r5, r6, r7, r8, lr}
   11460:	beq	114ac <vetor_pesquisa@@Base+0x54>
   11464:	ldr	r7, [r0]
   11468:	cmp	r7, #0
   1146c:	ble	114ac <vetor_pesquisa@@Base+0x54>
   11470:	ldr	r5, [r0, #8]
   11474:	mov	r6, r1
   11478:	mov	r4, #0
   1147c:	sub	r5, r5, #4
   11480:	b	11490 <vetor_pesquisa@@Base+0x38>
   11484:	add	r4, r4, #1
   11488:	cmp	r4, r7
   1148c:	beq	114ac <vetor_pesquisa@@Base+0x54>
   11490:	mov	r1, r6
   11494:	ldr	r0, [r5, #4]!
   11498:	bl	10b68 <strcmp@plt>
   1149c:	cmp	r0, #0
   114a0:	bne	11484 <vetor_pesquisa@@Base+0x2c>
   114a4:	mov	r0, r4
   114a8:	pop	{r4, r5, r6, r7, r8, pc}
   114ac:	mvn	r4, #0
   114b0:	mov	r0, r4
   114b4:	pop	{r4, r5, r6, r7, r8, pc}

000114b8 <vetor_ordena@@Base>:
   114b8:	cmp	r0, #0
   114bc:	beq	11534 <vetor_ordena@@Base+0x7c>
   114c0:	ldr	r3, [r0]
   114c4:	cmp	r3, #1
   114c8:	ble	1152c <vetor_ordena@@Base+0x74>
   114cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114d0:	sub	r3, r3, #-1073741823	; 0xc0000001
   114d4:	ldr	sl, [r0, #8]
   114d8:	mov	r8, #1
   114dc:	mov	r7, sl
   114e0:	add	r9, sl, r3, lsl #2
   114e4:	ldr	r6, [r7, #4]!
   114e8:	mov	r5, r8
   114ec:	mov	r4, r7
   114f0:	ldr	r1, [r4, #-4]
   114f4:	mov	r0, r6
   114f8:	bl	10b68 <strcmp@plt>
   114fc:	cmp	r0, #0
   11500:	bge	11514 <vetor_ordena@@Base+0x5c>
   11504:	ldr	r3, [r4, #-4]!
   11508:	subs	r5, r5, #1
   1150c:	str	r3, [r4, #4]
   11510:	bne	114f0 <vetor_ordena@@Base+0x38>
   11514:	cmp	r9, r7
   11518:	str	r6, [sl, r5, lsl #2]
   1151c:	add	r8, r8, #1
   11520:	bne	114e4 <vetor_ordena@@Base+0x2c>
   11524:	mov	r0, #0
   11528:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1152c:	mov	r0, #0
   11530:	bx	lr
   11534:	mvn	r0, #0
   11538:	bx	lr

0001153c <novo_str@@Base>:
   1153c:	push	{r4, r5, r6, r7, r8, lr}
   11540:	mov	r5, r0
   11544:	mov	r0, #12
   11548:	bl	10be0 <malloc@plt>
   1154c:	subs	r4, r0, #0
   11550:	beq	11590 <novo_str@@Base+0x54>
   11554:	mov	r0, r5
   11558:	bl	10c10 <strlen@plt>
   1155c:	add	r7, r0, #1
   11560:	mov	r0, r7
   11564:	bl	10be0 <malloc@plt>
   11568:	cmp	r0, #0
   1156c:	mov	r6, r0
   11570:	str	r0, [r4]
   11574:	beq	11598 <novo_str@@Base+0x5c>
   11578:	mov	r2, r7
   1157c:	mov	r1, r5
   11580:	bl	10bb0 <memcpy@plt>
   11584:	mov	r3, #0
   11588:	str	r3, [r4, #4]
   1158c:	str	r3, [r4, #8]
   11590:	mov	r0, r4
   11594:	pop	{r4, r5, r6, r7, r8, pc}
   11598:	mov	r0, r4
   1159c:	bl	10b98 <free@plt>
   115a0:	mov	r4, r6
   115a4:	b	11590 <novo_str@@Base+0x54>

000115a8 <lista_nova@@Base>:
   115a8:	push	{r4, lr}
   115ac:	mov	r0, #12
   115b0:	bl	10be0 <malloc@plt>
   115b4:	cmp	r0, #0
   115b8:	movne	r3, #0
   115bc:	strne	r3, [r0]
   115c0:	strne	r3, [r0, #4]
   115c4:	strne	r3, [r0, #8]
   115c8:	pop	{r4, pc}

000115cc <lista_apaga@@Base>:
   115cc:	push	{r4, r5, r6, lr}
   115d0:	subs	r5, r0, #0
   115d4:	bne	115f0 <lista_apaga@@Base+0x24>
   115d8:	b	11608 <lista_apaga@@Base+0x3c>
   115dc:	ldm	r4, {r0, r3}
   115e0:	str	r3, [r5]
   115e4:	bl	10b98 <free@plt>
   115e8:	mov	r0, r4
   115ec:	bl	10b98 <free@plt>
   115f0:	ldr	r4, [r5]
   115f4:	cmp	r4, #0
   115f8:	bne	115dc <lista_apaga@@Base+0x10>
   115fc:	mov	r0, r5
   11600:	pop	{r4, r5, r6, lr}
   11604:	b	10b98 <free@plt>
   11608:	pop	{r4, r5, r6, pc}

0001160c <lista_tamanho@@Base>:
   1160c:	cmp	r0, #0
   11610:	ldrne	r0, [r0, #8]
   11614:	mvneq	r0, #0
   11618:	bx	lr

0001161c <lista_inicio@@Base>:
   1161c:	cmp	r0, #0
   11620:	ldrne	r0, [r0]
   11624:	bx	lr

00011628 <lista_fim@@Base>:
   11628:	cmp	r0, #0
   1162c:	ldrne	r0, [r0, #4]
   11630:	bx	lr

00011634 <lista_insere@@Base>:
   11634:	cmp	r1, #0
   11638:	cmpne	r0, #0
   1163c:	beq	116c8 <lista_insere@@Base+0x94>
   11640:	push	{r4, r5, r6, lr}
   11644:	mov	r5, r0
   11648:	mov	r0, r1
   1164c:	mov	r4, r2
   11650:	bl	1153c <novo_str@@Base>
   11654:	cmp	r0, #0
   11658:	beq	116a0 <lista_insere@@Base+0x6c>
   1165c:	ldr	r3, [r5, #8]
   11660:	cmp	r4, #0
   11664:	add	r3, r3, #1
   11668:	str	r3, [r5, #8]
   1166c:	ldr	r3, [r5]
   11670:	beq	116a8 <lista_insere@@Base+0x74>
   11674:	cmp	r4, r3
   11678:	streq	r4, [r0, #4]
   1167c:	ldrne	r3, [r4, #8]
   11680:	streq	r0, [r4, #8]
   11684:	strne	r3, [r0, #8]
   11688:	ldrne	r3, [r4, #8]
   1168c:	strne	r4, [r0, #4]
   11690:	streq	r0, [r5]
   11694:	strne	r0, [r3, #4]
   11698:	strne	r0, [r4, #8]
   1169c:	pop	{r4, r5, r6, pc}
   116a0:	mov	r0, #0
   116a4:	pop	{r4, r5, r6, pc}
   116a8:	cmp	r3, #0
   116ac:	streq	r0, [r5, #4]
   116b0:	ldrne	r3, [r5, #4]
   116b4:	streq	r0, [r5]
   116b8:	strne	r3, [r0, #8]
   116bc:	strne	r0, [r3, #4]
   116c0:	strne	r0, [r5, #4]
   116c4:	pop	{r4, r5, r6, pc}
   116c8:	mov	r0, #0
   116cc:	bx	lr

000116d0 <lista_remove@@Base>:
   116d0:	cmp	r1, #0
   116d4:	cmpne	r0, #0
   116d8:	push	{r4, r5, r6, lr}
   116dc:	beq	11730 <lista_remove@@Base+0x60>
   116e0:	ldr	r2, [r1, #8]
   116e4:	ldr	r3, [r0, #8]
   116e8:	cmp	r2, #0
   116ec:	sub	r3, r3, #1
   116f0:	str	r3, [r0, #8]
   116f4:	ldrne	r3, [r1, #4]
   116f8:	ldreq	r5, [r1, #4]
   116fc:	strne	r3, [r2, #4]
   11700:	ldrne	r5, [r1, #4]
   11704:	streq	r5, [r0]
   11708:	cmp	r5, #0
   1170c:	streq	r2, [r0, #4]
   11710:	mov	r4, r1
   11714:	ldr	r0, [r1]
   11718:	strne	r2, [r5, #8]
   1171c:	bl	10b98 <free@plt>
   11720:	mov	r0, r4
   11724:	bl	10b98 <free@plt>
   11728:	mov	r0, r5
   1172c:	pop	{r4, r5, r6, pc}
   11730:	mov	r5, #0
   11734:	mov	r0, r5
   11738:	pop	{r4, r5, r6, pc}

0001173c <lista_pesquisa@@Base>:
   1173c:	cmp	r1, #0
   11740:	cmpne	r0, #0
   11744:	push	{r4, r5, r6, lr}
   11748:	moveq	r4, #1
   1174c:	movne	r4, #0
   11750:	beq	117d8 <lista_pesquisa@@Base+0x9c>
   11754:	cmp	r2, #1
   11758:	bhi	11798 <lista_pesquisa@@Base+0x5c>
   1175c:	cmp	r2, #0
   11760:	mov	r5, r1
   11764:	bne	117a0 <lista_pesquisa@@Base+0x64>
   11768:	ldr	r4, [r0]
   1176c:	cmp	r4, #0
   11770:	bne	11784 <lista_pesquisa@@Base+0x48>
   11774:	b	11798 <lista_pesquisa@@Base+0x5c>
   11778:	ldr	r4, [r4, #4]
   1177c:	cmp	r4, #0
   11780:	beq	11798 <lista_pesquisa@@Base+0x5c>
   11784:	mov	r1, r5
   11788:	ldr	r0, [r4]
   1178c:	bl	10b68 <strcmp@plt>
   11790:	cmp	r0, #0
   11794:	bne	11778 <lista_pesquisa@@Base+0x3c>
   11798:	mov	r0, r4
   1179c:	pop	{r4, r5, r6, pc}
   117a0:	ldr	r4, [r0, #4]
   117a4:	cmp	r4, #0
   117a8:	bne	117bc <lista_pesquisa@@Base+0x80>
   117ac:	b	11798 <lista_pesquisa@@Base+0x5c>
   117b0:	ldr	r4, [r4, #8]
   117b4:	cmp	r4, #0
   117b8:	beq	11798 <lista_pesquisa@@Base+0x5c>
   117bc:	mov	r1, r5
   117c0:	ldr	r0, [r4]
   117c4:	bl	10b68 <strcmp@plt>
   117c8:	cmp	r0, #0
   117cc:	bne	117b0 <lista_pesquisa@@Base+0x74>
   117d0:	mov	r0, r4
   117d4:	pop	{r4, r5, r6, pc}
   117d8:	mov	r4, #0
   117dc:	mov	r0, r4
   117e0:	pop	{r4, r5, r6, pc}

000117e4 <lista_ordena@@Base>:
   117e4:	cmp	r0, #0
   117e8:	beq	11854 <lista_ordena@@Base+0x70>
   117ec:	push	{r4, r5, r6, r7, r8, lr}
   117f0:	ldr	r6, [r0]
   117f4:	ldr	r7, [r6, #4]
   117f8:	cmp	r7, #0
   117fc:	beq	1184c <lista_ordena@@Base+0x68>
   11800:	mov	r5, r6
   11804:	mov	r4, r7
   11808:	ldr	r1, [r5]
   1180c:	ldr	r0, [r4]
   11810:	bl	10b68 <strcmp@plt>
   11814:	cmp	r0, #0
   11818:	movlt	r5, r4
   1181c:	ldr	r4, [r4, #4]
   11820:	cmp	r4, #0
   11824:	bne	11808 <lista_ordena@@Base+0x24>
   11828:	cmp	r6, r5
   1182c:	ldrne	r2, [r5]
   11830:	ldrne	r3, [r6]
   11834:	strne	r2, [r6]
   11838:	mov	r6, r7
   1183c:	strne	r3, [r5]
   11840:	ldr	r7, [r6, #4]
   11844:	cmp	r7, #0
   11848:	bne	11800 <lista_ordena@@Base+0x1c>
   1184c:	mov	r0, r7
   11850:	pop	{r4, r5, r6, r7, r8, pc}
   11854:	mvn	r0, #0
   11858:	bx	lr

0001185c <lista_inverte@@Base>:
   1185c:	push	{r4, r5, lr}
   11860:	subs	r5, r0, #0
   11864:	beq	118fc <lista_inverte@@Base+0xa0>
   11868:	ldr	r4, [r5, #8]
   1186c:	cmp	r4, #1
   11870:	ble	118ec <lista_inverte@@Base+0x90>
   11874:	ldr	r2, [r5]
   11878:	cmp	r4, #2
   1187c:	ldr	r3, [r2, #4]
   11880:	beq	118f4 <lista_inverte@@Base+0x98>
   11884:	sub	r4, r4, #2
   11888:	mov	r1, #0
   1188c:	b	11894 <lista_inverte@@Base+0x38>
   11890:	mov	r3, lr
   11894:	ldr	ip, [r3, #8]
   11898:	ldr	lr, [r3, #4]
   1189c:	add	r1, r1, #1
   118a0:	str	lr, [ip, #4]
   118a4:	ldr	lr, [r3, #4]
   118a8:	cmp	r1, r4
   118ac:	str	ip, [lr, #8]
   118b0:	str	r2, [r3, #4]
   118b4:	str	r3, [r2, #8]
   118b8:	mov	r2, r3
   118bc:	bne	11890 <lista_inverte@@Base+0x34>
   118c0:	ldr	r2, [r5, #4]
   118c4:	mov	r1, #0
   118c8:	mov	r0, r1
   118cc:	ldr	ip, [r2, #8]
   118d0:	str	ip, [r5, #4]
   118d4:	str	r1, [ip, #4]
   118d8:	str	r1, [r2, #8]
   118dc:	str	r3, [r2, #4]
   118e0:	str	r2, [r3, #8]
   118e4:	str	r2, [r5]
   118e8:	pop	{r4, r5, pc}
   118ec:	mov	r0, #0
   118f0:	pop	{r4, r5, pc}
   118f4:	mov	r3, r2
   118f8:	b	118c0 <lista_inverte@@Base+0x64>
   118fc:	mvn	r0, #0
   11900:	pop	{r4, r5, pc}

00011904 <__libc_csu_init@@Base>:
   11904:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11908:	mov	r7, r0
   1190c:	ldr	r6, [pc, #72]	; 1195c <__libc_csu_init@@Base+0x58>
   11910:	ldr	r5, [pc, #72]	; 11960 <__libc_csu_init@@Base+0x5c>
   11914:	add	r6, pc, r6
   11918:	add	r5, pc, r5
   1191c:	sub	r6, r6, r5
   11920:	mov	r8, r1
   11924:	mov	r9, r2
   11928:	bl	10b3c <calloc@plt-0x20>
   1192c:	asrs	r6, r6, #2
   11930:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11934:	mov	r4, #0
   11938:	add	r4, r4, #1
   1193c:	ldr	r3, [r5], #4
   11940:	mov	r2, r9
   11944:	mov	r1, r8
   11948:	mov	r0, r7
   1194c:	blx	r3
   11950:	cmp	r6, r4
   11954:	bne	11938 <__libc_csu_init@@Base+0x34>
   11958:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1195c:	strdeq	r0, [r1], -r4
   11960:	andeq	r0, r1, ip, ror #11

00011964 <__libc_csu_fini@@Base>:
   11964:	bx	lr

Disassembly of section .fini:

00011968 <.fini>:
   11968:	push	{r3, lr}
   1196c:	pop	{r3, pc}
